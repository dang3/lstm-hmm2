push
call
ret
ret
push
cwtl
ret
cmp
jge
lods
push
daa
test
pop
mov
and
inc
jae
or
call
jmp
pop
stos
repnz
movsb
clc
jnp
pop
mov
xchg
push
mov
loopne
fiaddl
or
aas
mov
or
out
adc
in
repz
in
mov
pop
add
cmpsb
outsl
gs
nopl
and
and
repz
adc
and
cmp
mov
and
lea
push
pop
repz
mov
jnp
cmp
std
int
xchg
or
icebp
aam
nop
iret
or
adc
cmp
push
fsubl
xchg
insb
js
stc
and
xchg
and
lea
pusha
mov
push
mov
xchg
fs
ja
imul
test
aaa
arpl
stos
dec
shll
jae
adc
dec
sub
pop
in
push
lret
pop
mov
shrl
push
test
fadds
sub
lea
fsubrs
mov
lret
mov
cld
stos
xor
imul
rcrb
jmp
mov
rolb
pop
test
iret
call
aad
in
outsl
push
jo
inc
ficoms
sbb
popf
cmc
adc
push
pop
inc
rcl
pop
iret
bnd
jmp
pop
pushf
loopne
mov
aaa
or
ret
jg
cmc
xchg
stos
fs
inc
cli
adc
cmp
fistl
lds
cwtl
sub
in
sub
sbb
outsb
fbstp
dec
popa
push
or
adc
jp
fs
push
sbb
cmp
dec
ja
cli
cmp
xchg
push
sbbl
in
push
jno
lods
inc
std
test
push
dec
insb
push
test
or
sbb
outsb
jecxz
jge
mov
cwtl
hlt
mov
xchg
xor
xor
lods
push
sbb
lret
jp
mov
add
mov
fmull
out
push
loop
xchg
push
push
fwait
aam
leave
jmp
shl
jnp
ficomps
xchg
daa
lea
jne
jl
jle
push
and
mov
into
mov
ret
leave
sub
insl
mov
sbbl
xor
mov
inc
test
mov
fldt
loope
mov
cmc
add
xor
int
lret
xchg
lret
inc
in
adc
adc
mov
adc
and
jp
rclb
cmpsb
lret
pop
push
jmp
mov
std
sti
cmc
cmpsl
pop
mov
xor
cmp
lods
xor
insb
sbb
jle
dec
adc
push
inc
lock
add
mov
xchg
xor
push
aas
xor
adc
mov
push
je
xchg
scas
mov
jb
cmpsl
sub
adc
cmp
or
adc
push
mov
mov
in
in
push
inc
fstl
mov
mov
jmp
mov
pop
outsl
adc
lret
add
adc
ljmp
out
add
or
test
sub
ljmp
mov
stos
out
rsqrtps
leave
jb
xchg
sti
push
sub
xchg
aas
std
inc
sub
je
cmp
mov
dec
adc
push
rol
adc
gs
adc
fnsave
jmp
loop
mov
sbb
daa
inc
dec
jmp
lds
scas
sbb
sub
mov
sub
mov
mov
pop
and
mov
add
xchg
pop
in
xchg
jo
xchg
lea
pop
data16
or
fdivs
xchg
xor
hlt
jmp
pop
dec
fisubrs
movsb
roll
stos
inc
call
jo
dec
inc
jmp
jnp
outsl
std
jg
inc
fcmovnbe
sub
jmp
inc
lock
push
push
jp
lret
xor
loop
scas
jo
data16
int3
add
imul
insl
ds
aas
mov
int
pop
loopne
jnp
cmp
mov
sbbl
aaa
xor
or
mov
cli
xorb
sub
loop
cmp
adc
test
shll
inc
jl
cmp
rcl
addl
adc
pop
pop
iret
inc
scas
pop
in
inc
imulb
fs
or
mov
push
aam
std
push
sbb
jmp
add
inc
leave
js
dec
inc
decl
ret
xchg
ficomps
bound
xchg
adc
jnp
cmp
scas
ret
sub
inc
stc
cmc
mov
push
or
rclb
les
dec
xchg
jae
adc
test
pop
and
int3
cmpsl
je
lahf
inc
sahf
mov
inc
cmp
push
sbb
enter
mov
cli
add
in
imul
pop
xor
lcall
xor
xchg
adc
popa
and
add
adc
popa
sub
and
out
and
inc
mov
sub
xchg
inc
sbb
adc
dec
mov
add
push
cmp
sub
jb
fmuls
pop
fs
pushf
cmpsb
shll
add
dec
cmp
jg
les
or
pop
push
in
mov
and
lods
mul
push
dec
xchg
out
cld
push
sbb
shll
cwtl
fmull
scas
jo
xchg
jb
mov
xlat
sbb
push
aad
repnz
jecxz
push
add
mov
stos
pop
stc
sbb
dec
pop
lock
mov
lods
push
out
fmulp
addb
mov
testl
pop
push
push
xchg
loop
inc
add
out
bound
mov
movsl
lret
out
cmp
movsl
loopne
pop
push
cmp
sub
mov
mov
mov
in
lahf
sub
rol
cmp
pop
lds
xor
push
dec
push
iret
mov
gs
pop
fstps
push
lea
sub
xchg
pop
fildll
and
cmp
push
add
ja
pop
pop
sbb
loopne
mov
dec
add
dec
mov
jge
or
movl
aas
dec
pop
in
mov
push
lods
in
mov
pop
jge
or
cwtl
imul
repnz
mov
loop
inc
and
aad
mov
movsl
and
scas
sub
sbb
xchg
mov
dec
sbb
pop
sbbb
mov
mov
cmp
xlat
adc
dec
rcrl
mov
or
xor
aam
aad
adc
into
icebp
cmp
fnstenv
pushf
int
mov
cmp
cmp
jg
push
mov
jle
and
cmpsl
jmp
icebp
xor
rolb
icebp
sahf
push
faddl
je
pop
arpl
imul
insb
data16
push
jg
pop
mov
push
jmp
es
ds
mov
int3
cmp
mov
or
adc
lret
dec
outsb
mov
pop
mov
adc
mov
cwtl
int3
cmp
ss
in
jge
pop
in
pop
inc
xchg
xor
rclb
pop
popa
xor
adc
pop
das
push
daa
fsubrs
cltd
xor
lea
jae
and
lea
je
in
ljmp
test
stc
addr16
xchg
dec
sbb
lea
notl
shl
pop
out
adc
in
sub
pop
int3
pop
inc
xchg
jne
aas
inc
inc
or
int3
ss
sarb
popa
in
sbb
dec
sub
repnz
or
jae
or
idivl
aaa
ljmp
fbld
mov
cmp
dec
test
sbb
nop
int
sbb
dec
jb
cmp
mov
test
add
jge
mov
push
movsl
fists
dec
outsb
inc
aaa
enter
nop
mov
mov
push
and
out
sub
mov
jae
jno
dec
or
imul
mov
lcall
popa
sub
in
cmc
and
jne
or
lock
xlat
arpl
mov
and
cmp
mov
popa
daa
jnp
or
mov
jno
or
and
int3
es
xchg
iret
int3
xor
hlt
pop
dec
and
mov
inc
in
ficompl
stos
mov
cmp
and
lmsw
inc
xchg
lret
sub
xor
dec
jno
movsb
xchg
xlat
icebp
add
movsb
dec
mov
mov
and
lds
jb
ficompl
xor
loope
and
imul
xchg
dec
ds
aam
sbb
add
mov
mov
adc
mov
pop
scas
jns
rcll
insb
sub
xor
push
loop
mov
insb
cltd
mov
jne
dec
cmp
pop
lcall
cmp
iret
mov
mov
lods
xor
cmp
ja
lea
xchg
xchg
fs
dec
or
shll
scas
inc
sub
and
mov
enter
sub
jg
inc
xor
push
pop
std
fdivr
adc
xor
out
mov
xor
outsl
mov
jo
popf
imul
cwtl
test
push
je
sub
add
dec
mov
xor
imul
cmpsl
imul
pop
rcll
into
inc
iret
ljmp
or
add
outsl
test
js
or
in
sub
out
sarl
and
mov
xor
arpl
cmp
mov
jbe
cs
push
adcb
pushf
push
fsts
add
rol
xlat
std
xor
loopne
dec
cmpsl
testb
int3
subl
addr16
out
jg
repz
movsl
dec
mov
mov
dec
aas
outsb
bound
imul
js
cwtl
jmp
and
lret
xor
jmp
arpl
mov
hlt
movsl
int
insb
sub
ret
jmp
repz
pop
pop
flds
jg
sub
pop
int3
pop
sbb
mov
leave
cmp
adc
stos
adc
cli
lahf
jb
mov
lret
lods
jg
sub
scas
or
xadd
sbbl
sbb
cmc
scas
or
into
in
movsl
aam
mov
xchg
popa
jae
loop
xchg
mov
iret
sub
lods
add
xor
subb
ss
hlt
sub
mov
add
xlat
dec
nop
insb
rorb
xchg
in
sub
popa
cmp
or
es
sbbb
jo
and
in
mov
jbe
in
mov
inc
rorl
and
mov
push
mov
push
js
mov
lock
aad
xchg
ss
cwtl
fcom
js
aam
mov
rcll
pushl
lea
push
push
or
mov
inc
subl
pop
xor
mov
xlat
repnz
loope
test
pop
subb
adc
ret
sub
adc
sub
cmpsb
pop
std
lods
dec
xchg
inc
cmpsl
sub
mov
xor
test
cmc
mov
popf
sbbl
pop
xorb
mov
jb
repz
jo
bnd
pop
pop
pop
inc
arpl
adc
jle
nop
push
jg
or
adc
mov
cli
xchg
xchg
mov
lcall
sbb
adc
xchg
rorb
out
push
jne
mov
repz
push
fstpt
lods
sub
es
test
push
and
sbb
lret
cmp
call
dec
push
sbbb
fadds
bound
std
inc
aaa
pop
jge
sahf
add
les
jle
pop
inc
cmp
pop
jg
les
popa
pop
xor
cltd
stc
iret
mov
sub
cli
push
fisubl
lcall
out
pop
loop
or
cltd
mov
and
and
nop
sub
sbb
add
dec
loop
mov
sbb
pop
sub
push
cmp
gs
xchg
adc
sub
sub
sub
leave
je
pop
gs
sbb
or
inc
adc
mov
sub
push
dec
xor
cmpsb
jle
jb
sarb
cmp
mov
xchg
and
dec
mov
fsubrs
jl
lahf
jecxz
mov
sub
pop
dec
outsl
aas
fldl
mov
jo
fldcw
pop
sub
dec
inc
adc
sbb
and
push
arpl
pop
dec
mov
sti
and
repz
aad
lods
int
cmpsl
addr16
or
sub
inc
pop
stos
leave
jb
sbb
stc
jo
out
loop
jb
and
cmpsl
adc
cmp
adc
cmp
popa
xor
mov
int
fiadds
mov
cmp
inc
icebp
xchg
scas
fwait
jle
jmp
inc
and
xor
out
int3
nop
test
jae
pop
inc
pop
add
pop
std
test
adcl
pop
insb
sbb
daa
out
or
sbb
into
ss
jnp
leave
lods
jbe
aam
insl
imul
adc
inc
and
les
hlt
rcrl
das
dec
xchg
enter
and
enter
add
pop
call
xor
pop
sbb
shrb
outsl
mov
lods
repnz
std
mov
push
jle
mov
cmp
jo
dec
jmp
mov
fldt
subb
cs
xchg
divl
loope
add
xor
mov
mov
xchg
cmp
jae
daa
mov
mov
sub
sbb
xchg
loope
jns
push
xchg
and
pop
std
jge
pop
or
les
imul
sub
and
shll
sbb
in
les
ljmp
iret
ljmp
mov
or
call
scas
or
loope
dec
xchg
lret
imul
rcll
sub
jl
clc
push
mov
jns
inc
repz
cwtl
mov
imul
fstps
push
cmp
mov
cmp
ja
mov
bound
lock
arpl
mov
test
stos
fsubs
push
insl
pop
idivl
je
jnp
mov
popa
movsb
adc
cmp
sbb
dec
jb
push
cmpsb
mov
int3
cmpsl
aas
leave
jbe
into
jbe
xorb
incb
jecxz
in
dec
ficoms
pop
leave
test
jnp
xchg
and
and
fnstenv
mov
pop
es
call
inc
arpl
mov
lods
insl
jne
lea
xorl
outsl
test
fdivrs
cmpsl
pop
popa
jge
outsl
test
arpl
sub
sub
pop
mov
xor
test
push
out
fcmove
add
add
pop
cmc
in
les
xor
test
push
std
and
movsl
and
daa
mov
push
imul
addr16
mov
popa
mov
jmp
jne
mov
and
mov
xor
add
dec
push
sub
inc
hlt
jne
cmp
stos
loope
and
or
getsec
mov
mov
movsb
mov
aam
incb
mov
dec
xor
cld
add
sbb
pop
cli
and
push
pushf
aam
es
dec
pop
mov
ret
lahf
test
pop
imul
lods
push
ljmp
mov
rorb
out
les
push
xchg
adc
lret
or
inc
mov
iret
or
pushfw
adc
mov
data16
mov
xor
arpl
dec
arpl
jmp
cmpsl
cmpb
lods
in
insl
adc
das
into
loopne
pop
rorb
fdivrl
xchg
mov
push
and
mov
cmp
jl
mov
xchg
loopne
sub
fsubr
repnz
jmp
pop
jmp
mov
mov
and
addb
add
popl
fucomp
out
rol
loop
pop
jg
sub
cmc
lret
repz
and
pop
adcb
out
int
pop
mov
push
push
ret
inc
cmp
pop
sub
scas
cwtl
sti
in
xor
jne
or
cmc
mov
fwait
loope
roll
insl
push
pusha
sub
sub
cmp
jecxz
sbb
adc
or
cmpsb
and
icebp
scas
sub
outsb
and
sub
or
jge
pop
or
nop
push
mov
mov
mov
inc
mov
addr16
insl
xchg
mov
push
push
movd
shll
iret
adc
add
mov
xchg
dec
loopne
push
scas
rolb
xchg
cli
mov
cmp
out
pop
js
jns
xor
pop
ret
out
icebp
test
xchg
add
scas
jl
fists
ror
adc
cld
int
es
fisubl
pusha
fbstp
ret
aad
mov
pop
std
dec
add
mov
mov
outsl
cmp
jo
pop
xor
repnz
mov
insb
cwtl
movsl
xor
xor
jge
push
jmp
cli
cli
inc
add
pop
andb
fidivrs
and
sub
fsubrl
out
inc
cwtl
mov
pushf
xor
cmpsl
nop
out
shll
outsb
clc
inc
mov
add
insl
stc
sbb
push
outsb
fcomps
pop
cmc
pop
pop
pop
pop
mov
cmp
mov
push
js
push
mov
loop
xchg
ds
push
push
sub
dec
arpl
sbb
aaa
into
jg
inc
sub
imull
inc
xor
lahf
push
imul
addl
cmc
and
add
jns
adc
call
jo
aad
xor
xchg
mov
mov
and
sbb
sbb
push
roll
lret
js
pop
sti
sbb
cli
test
unpcklps
dec
mov
ficoms
ljmp
cld
andb
jle
push
mov
mov
push
push
mov
lret
daa
inc
and
push
xchg
or
or
movsl
lea
hlt
aam
sub
fwait
push
pop
out
out
shl
stc
add
xchg
test
pop
cmp
cli
jo
js
jo
repz
fdivs
xchg
lock
mov
ret
sub
mov
push
sub
jg
jo
xor
mov
or
jo
push
adc
shll
and
rolb
fstpt
adc
add
pop
loope
iret
mov
pop
sbbb
pop
jbe
jne
xchg
jae
or
lods
idiv
push
scas
aad
xor
aaa
addl
dec
cmc
adc
sub
fcompl
daa
and
mov
test
lods
push
pop
loop
mov
shlb
or
loop
mov
addr16
push
sbb
xchg
sbb
fs
xor
and
add
sbb
jle
js
or
jmp
cld
or
mov
data16
repnz
add
cmpsb
mov
repnz
lcall
fimuls
pop
mov
pop
add
out
pop
mov
test
push
daa
out
cmc
mov
dec
enter
fdivrp
mov
push
inc
adc
xor
ss
loop
leave
and
dec
loope
dec
jo
lea
test
adc
aas
cld
outsl
es
je
loopne
dec
push
jbe
xchg
sbb
iret
xchg
inc
hlt
inc
sbb
dec
xchg
xchg
mov
cmp
bound
add
sub
or
or
js
inc
inc
xchg
and
dec
cli
pusha
mov
je
insb
std
xlat
gs
push
add
andb
or
lds
data16
nop
call
out
das
cltd
outsb
lret
repnz
ljmp
mov
mov
add
pop
cmp
repnz
cmp
add
f2xm1
pop
andb
ds
outsb
pop
int3
lret
sub
cltd
lea
push
test
fwait
icebp
out
cld
xor
js
pop
xorb
dec
enter
shl
jl
and
insb
jmp
cltd
movsl
pop
fs
inc
lahf
icebp
lcall
int3
sti
and
pop
insl
adc
stc
add
mov
scas
inc
addl
decl
cmpsb
in
cmpsl
sub
inc
ficompl
shrb
push
mov
and
popa
mov
cmp
cmp
fisttps
pop
pop
movsb
push
lds
dec
and
std
call
cmp
sahf
lahf
mov
fcompl
ja
push
adc
mov
mov
xchg
cltd
ss
or
mov
fimull
inc
push
popf
mov
dec
sub
sub
sbb
push
or
inc
in
mov
xchg
negl
push
sarl
insl
dec
dec
out
cmp
push
shl
movsl
es
fs
push
inc
add
xor
adc
out
in
sub
repz
lahf
dec
or
jp
mov
addl
dec
repnz
sub
rcrl
movsl
fmull
pusha
pushl
lods
jne
adc
mov
fiaddl
arpl
pop
shl
dec
push
movsl
mov
cmp
out
shrb
lods
cltd
jae
pop
ds
cmp
jae
mov
jmp
pop
scas
xchg
sub
inc
push
xchg
adc
lcall
out
aas
xor
jbe
testl
cltd
push
sbb
cmp
or
mov
lock
lret
test
mov
push
addr16
aam
jecxz
ret
hlt
ja
repnz
xchg
dec
lods
mov
cmc
js
int3
daa
popa
sti
outsl
xor
rolb
push
adc
shll
sbb
es
ret
pop
mov
jno
into
mov
testb
mov
and
sbb
test
dec
outsl
mov
sub
xor
xchg
mov
sarl
push
fists
xorb
mov
popa
sahf
mov
pop
and
das
mov
pushf
or
addb
lahf
out
aam
repnz
int
fcmovnu
fisubrl
adc
lock
sbb
lret
inc
pop
popf
sub
je
or
push
and
lahf
iret
xchg
out
movsb
push
adc
insb
popa
push
jnp
lret
insb
and
dec
loope
movsl
adc
add
and
popa
enter
cli
stos
pop
mov
sti
outsb
or
mov
xchg
xchg
inc
loopne
push
inc
mov
gs
rclb
or
call
and
mov
sub
add
sbb
cld
mov
inc
aad
fistpll
es
sub
push
sub
lret
pop
inc
cltd
insl
xor
icebp
or
push
jecxz
fldcw
aad
mov
dec
cmp
jecxz
sub
lcall
cmp
jmp
push
cmc
lods
test
cmp
fidivrs
fmuls
adc
mov
sbb
xor
adc
jns
sti
inc
sbb
in
mov
mov
push
dec
add
dec
dec
mov
xchg
xor
xor
hlt
sub
cmp
pop
cmp
loope
das
and
xchg
dec
mov
add
test
scas
push
mov
lods
push
aam
loopne
data16
and
xchg
push
hlt
sub
aad
pop
scas
cmp
push
shll
push
popf
adc
sbb
test
dec
idivl
sub
mov
mov
ret
mov
mov
das
loopne
faddl
sbb
in
cli
dec
dec
sbb
cmpsl
ljmp
leave
popf
fs
insb
sbb
loope
jle
mov
mov
in
jge
or
fwait
xchg
push
outsl
je
jmp
loopne
dec
mov
data16
adc
test
ret
clc
sbb
ds
shlb
mov
adc
test
cmc
xor
push
es
mov
pop
push
scas
nop
imul
je
jecxz
roll
cmp
mov
daa
jge
dec
dec
cmpsb
test
xchg
inc
push
jno
mov
or
aad
stc
and
not
pcmpgtw
sub
daa
and
ja
popa
and
jns
fnstenv
add
lods
std
icebp
jae
jecxz
push
add
xchg
inc
jge
xlat
lret
push
xchg
int3
mov
movsl
out
dec
shll
push
test
sahf
xor
popa
fldcw
clc
cmp
mov
mov
fcmovnbe
cld
adc
jb
jae
and
adc
test
nop
cmpsl
sub
cmc
push
aad
and
ror
jo
push
cld
bound
mov
lahf
nop
lods
pusha
push
xor
outsb
pop
mov
ss
push
nop
push
inc
fwait
and
cs
push
or
or
scas
xchg
xchg
push
xchg
lock
mov
add
xlat
mov
fwait
pop
xlat
mov
lea
bound
les
adc
frstor
cmc
mov
stos
or
loopne
xchg
mov
cmp
add
nop
sbb
mov
cmp
pop
out
fidivs
js
mov
push
sti
push
add
sub
mov
icebp
bound
lds
pop
insl
or
push
inc
rcrb
jle
int3
push
btcl
pop
or
jp
stos
cmp
xchg
and
mov
xchg
pop
inc
mov
adc
xor
cs
dec
cmp
sub
add
mov
leave
and
jmp
dec
fs
in
push
jle
adc
call
dec
cltd
lret
fidivl
std
sbb
stos
stos
mov
inc
jecxz
mull
inc
push
jb
stos
mov
outsl
dec
dec
gs
adc
mov
fisubrs
xor
ljmp
xchg
stc
dec
cmp
lds
lods
inc
adc
cmpsl
mov
ficoml
sbb
inc
pop
sub
mov
ret
mov
adc
outsl
inc
mov
sub
popa
pop
out
mov
les
stos
and
add
hlt
jp
xlat
icebp
sub
addr16
pop
test
test
aaa
mov
loope
adc
add
adc
push
loopne
mov
add
jecxz
neg
ficoml
inc
lods
dec
xor
lea
insb
ret
pushf
jl
xor
sarb
repz
inc
test
cmpsl
fmull
cmc
adc
mov
jbe
in
mov
addb
mov
paddusw
loopne
cmp
loop
sbb
std
push
pop
mov
add
adc
fcmovb
mov
nop
movsl
or
and
inc
lock
and
addr16
xor
lcall
je
cmp
out
enter
scas
sub
adc
adc
aaa
push
data16
fmuls
mov
mov
xchg
movsl
lahf
xlat
pop
ja
outsb
mov
mov
out
imul
add
subl
cmp
xor
fsubl
ret
sbb
or
mov
inc
xlat
pop
and
push
roll
rcrl
negl
push
push
xchg
sub
fsubrl
pop
add
xchg
or
mov
mov
ret
fdiv
mov
xchg
inc
lret
addb
aas
fwait
enter
outsb
mov
decl
xor
dec
inc
das
iret
mov
mov
clc
lock
xor
sti
repnz
add
mov
xlat
nop
mov
insb
jge
rcrl
scas
pushf
xchg
in
and
ds
seta
push
jae
out
call
cmc
sub
cmp
fcompl
add
lea
test
test
ffreep
xlat
add
lcall
shl
outsl
lds
call
sbb
jbe
pop
mov
daa
dec
adc
scas
rcll
cli
lahf
push
cltd
outsl
mov
fidivs
mov
rcrb
shll
fiadds
sbb
mov
test
loope
mov
aad
xor
cmpsl
pop
dec
enter
addb
add
lret
mov
shll
loopne
cmp
stc
mov
mov
push
mov
cli
xchg
ret
sbb
xchg
lock
scas
push
lock
rcrl
sbb
sbb
jge
cwtl
sbb
rcrb
push
cmp
int
push
imul
push
fdivrs
sbb
add
cmc
pop
push
xchg
dec
cmp
loopne
lods
ds
sahf
sbbb
clc
lods
outsl
inc
icebp
fwait
dec
push
pushf
adc
xor
into
xor
jbe
xor
fwait
imul
add
hlt
dec
outsl
int3
mov
adc
dec
add
cltd
icebp
shlb
xorb
adc
lcall
lds
mov
dec
inc
inc
stos
scas
mov
js
xor
cmp
sub
inc
repz
xlat
sub
mov
jno
push
stc
pop
dec
out
or
lret
push
cmp
ja
into
jnp
xor
fisubrs
push
xchg
mov
dec
int
test
mov
test
xchg
aad
icebp
mov
sub
ret
outsb
sbb
inc
mov
adc
loopne
push
push
loope
jecxz
sub
pop
adc
mov
push
or
insb
pinsrw
add
bnd
cmp
add
jns
lea
lahf
aam
cli
sub
mov
test
jmp
hlt
cmp
or
popf
lcall
stc
lods
cld
jmp
sub
adc
jnp
add
mov
aam
rorl
roll
xor
scas
mov
inc
mov
push
es
into
mov
stos
lock
jb
mov
mov
scas
sbb
xchg
int3
repnz
add
outsl
leave
lret
push
loopne
and
jp
xor
call
arpl
inc
movsb
lret
mov
mov
lds
adc
mov
jecxz
gs
sub
out
mov
and
sbb
test
in
jg
orl
mov
mov
fcomp
pop
jp
cmc
mov
or
or
test
std
adc
pop
jae
sub
loope
or
call
mov
imul
cmp
cs
gs
fdivrs
jle
inc
mov
xlat
aas
inc
pop
pusha
je
mov
in
and
loope
dec
fldt
sahf
clc
sbb
scas
pushf
push
lcall
dec
popa
or
sub
fcomps
jl
jle
pop
mov
push
test
rorl
mov
movl
lret
mov
subl
inc
cmp
mov
mov
xchg
icebp
cmp
outsb
int3
cltd
inc
je
aas
sahf
lret
cmpsb
imul
adc
cli
xchg
pusha
scas
and
sbb
in
pop
jno
jmp
dec
stc
lahf
push
push
testl
jns
jecxz
sbb
or
mov
imul
push
repz
xchg
adc
popa
push
mov
stos
pop
sub
outsb
xchg
and
aam
addl
popa
and
jae
enter
cmc
add
jne
mov
lock
cmp
inc
sbb
sbb
aad
in
scas
lret
loopne
mov
or
cmpsb
push
push
cmc
mov
imul
stc
orl
xor
iret
push
mov
ret
xor
add
xchg
jg
or
mov
lock
cmp
repnz
pop
es
jo
sarb
arpl
jns
iret
sub
jl
inc
loop
xchg
adc
loope
add
and
out
add
xor
mov
cmpl
xor
mov
inc
cmp
inc
gs
jno
ss
sbb
jb
xor
push
imul
fdivrs
cli
pop
or
outsb
push
iret
xchg
movsl
jmp
dec
inc
mov
cmp
push
mov
sar
pop
sub
push
enter
push
out
jne
outsl
fidivrl
repz
in
mov
and
cmpsb
lods
sarl
sbb
inc
test
mov
lret
cli
movsl
sbb
xchg
pusha
iret
mov
enter
clc
call
xchg
push
push
orl
and
lods
or
mov
xlat
cmp
aas
int3
rcr
ficompl
adc
cmpsb
insb
push
stos
cmp
and
sub
hlt
loop
in
mov
mov
cmp
pop
sub
test
insl
xchg
lcall
je
xlat
xchg
pusha
test
or
imul
jle
mov
mov
shl
pop
xchg
pop
inc
sbb
in
xchg
outsb
lcall
insl
cwtl
add
ja
sbb
mov
stos
mov
sub
inc
xchg
dec
cmp
pop
lret
cmp
mov
shrb
mov
xchg
cmpsb
cli
push
hlt
pop
fidivrl
inc
sbb
test
lcall
cmp
pop
adc
repnz
add
mov
push
mov
xor
arpl
push
lret
adc
pusha
and
mov
imul
mov
je
jae
sbb
fimuls
dec
mov
fcom
and
pushf
add
ficoms
xchg
pop
mov
xchg
dec
xor
push
xor
loop
push
gs
cs
xchg
popa
mov
mov
adc
xor
call
cmpsl
decb
test
lock
xor
sub
xchg
push
aaa
xchg
insl
stc
add
ss
in
jo
sbb
mov
push
cs
leave
xor
shrl
cmp
mov
ds
push
fidivs
data16
shrb
imul
cmpsl
jns
pop
stos
jo
insb
push
add
or
stc
popa
dec
push
and
push
jns
mov
and
cmc
mov
or
les
pop
adc
mov
repz
mov
mov
push
push
fnstsw
pop
or
dec
pop
xor
jmp
pop
xchg
lock
or
push
sub
mov
cwtl
fmulp
cli
push
mov
movsb
aam
dec
xor
fdivl
rcrb
loopne
adc
das
mov
mov
hlt
jnp
clc
rolb
in
cmc
cwtl
mov
inc
fsubl
push
sbb
aad
or
fld
fyl2xp1
xor
cmpsb
lds
popf
mov
add
mov
push
loopne
fsubrl
outsb
icebp
cmp
push
mov
and
fdiv
mov
loope
mov
test
sbb
insl
jg
cli
xchg
and
scas
scas
int
xchg
stc
add
clc
das
and
xchg
out
jns
and
test
xor
shll
lea
das
jl
je
lret
scas
jo
cltd
addr16
sahf
stos
adc
mov
into
aaa
push
xchg
std
sub
int3
add
call
mov
sbb
or
in
mov
nop
fwait
mov
repz
test
or
fstpt
inc
data16
movsl
xor
cmp
add
xlat
imul
sahf
cmp
fcoms
dec
jo
dec
int3
mov
ss
orb
aas
pop
push
and
dec
loope
mov
into
xor
pusha
inc
pop
and
notl
into
mov
xchg
in
in
leave
jge
setp
cld
xchg
in
inc
es
cmpsl
adcl
jo
xchg
mov
mov
adc
in
mov
sbb
je
sub
hlt
jno
dec
pop
xorl
mov
fs
sub
js
mov
bound
pop
xorb
enter
in
pop
bound
pop
pop
push
out
cmp
in
push
xor
mov
xchg
xor
std
xor
ret
push
mov
cli
lret
in
loope,pn
xchg
sbb
daa
dec
sahf
sbb
fsubrs
inc
sub
and
mov
xor
lds
inc
jb
ds
and
adc
xchg
int3
push
cmpsb
mov
and
mov
out
cwtl
sub
iret
addr16
pop
out
mov
dec
jnp
jns
inc
repz
jge
or
xchg
jnp
jle
pop
push
sbb
mov
sub
pop
call
xchg
std
or
roll
mov
xchg
mov
xchg
dec
pushf
sub
or
lcall
and
fsubrs
addr16
inc
ja
push
jbe
xchg
lcall
fcomi
cmp
jo
stc
pusha
push
mov
shr
xchg
repz
es
cmp
mov
pusha
inc
repnz
adc
lds
jno
aas
adc
cmovo
sbb
cmp
int
push
gs
dec
loopne
jecxz
outsb
push
inc
lods
dec
fcomi
fistpl
mov
cwtl
jns
jmp
jae,pt
js
stc
push
cmp
int
addb
or
xor
cld
fdivrs
mov
es
or
or
add
sub
jnp
mov
add
call
rclb
inc
out
mov
or
jno
jmp
xor
add
test
pop
ss
xor
mov
sub
inc
pusha
sub
bound
dec
fdivl
testl
and
sub
aam
aam
push
inc
sub
out
and
inc
lea
iret
js
cmp
sub
daa
jae
mov
dec
or
inc
cmp
js
mov
dec
inc
andl
insl
cwtl
adc
nop
add
and
or
lcall
and
ljmp
out
out
shl
fdivl
add
mov
popf
daa
loopne
adc
inc
xor
pop
ret
xchg
sbb
lret
ds
in
mov
pop
dec
adc
insl
mov
mov
das
cld
jecxz
lods
movsb
test
mov
mov
dec
push
adc
pop
xchg
dec
fadds
aaa
and
testb
fadds
sub
sti
pop
sbb
out
cld
mov
repz
push
xchg
int
xor
cmpsl
stos
pusha
and
push
aaa
xchg
cmp
xlat
pop
loop
lahf
or
divb
std
pop
std
dec
xchg
push
cmc
cmpsb
adc
xchg
xchg
aam
xlat
lods
shrl
js
jle
mov
dec
mov
xor
lret
xchg
es
dec
jnp
dec
xchg
das
std
sti
sbb
adc
stos
xlat
mov
daa
clc
loopne
int
mov
pop
outsl
jl
push
pushf
xchg
daa
jbe
fisttpl
flds
xchg
out
je
lea
test
pop
push
aas
jne
xchg
xchg
loopne
or
pop
std
lock
xorb
push
inc
add
ret
hlt
icebp
popf
dec
mov
and
pop
stc
gs
mov
mov
fidivrl
xchg
sbb
fadds
pop
cwtl
dec
add
xchg
dec
movb
jbe
sub
pusha
mov
jg
dec
add
iret
xchg
iret
lea
add
test
dec
mov
fimuls
mov
dec
and
sub
sub
gs
inc
push
testb
leave
mov
rorb
mov
lods
subb
out
and
jecxz
dec
push
ja
std
fiadds
fimull
in
shll
in
push
aaa
repz
test
dec
inc
add
push
imul
fwait
lcall
sub
scas
inc
jge
lahf
adc
sbb
inc
lcall
mov
je
xchg
aam
icebp
push
mov
ret
or
sub
stos
inc
lds
pop
mov
ret
mov
sub
sti
fnstsw
subb
inc
movsb
mov
stc
mov
fnstsw
iret
mov
adc
mov
sub
clc
out
add
out
mov
xor
sti
out
xchg
fs
sar
push
adc
mov
lret
pop
outsb
add
hlt
xchg
fwait
ss
cmp
mov
insl
testb
mov
das
pop
lret
testl
cmp
ds
xor
test
mov
scas
ret
cmpsl
push
insl
aaa
test
ret
mov
mov
test
xlat
and
imul
mov
mov
push
movsl
ret
fsubrl
das
and
test
cmp
cli
inc
pop
pop
pop
jp
dec
mov
ss
lahf
les
loop
dec
or
inc
fisttpl
out
bound
add
sti
loopne
mov
in
add
sbb
mov
daa
dec
dec
ds
mov
cmpsb
lret
loopne
push
mov
scas
cmp
pop
and
scas
pop
test
mov
dec
xchg
inc
mov
stos
lds
jbe
cld
aaa
sbb
subb
cmp
leave
xchg
imul
xchg
into
mov
scas
sub
test
nop
xor
jecxz
jle
xor
sub
sub
mov
pop
jns
and
xchg
xchg
stos
into
jp
and
test
xchg
sbb
in
mov
subl
loopne
mov
test
mov
cwtl
popf
jmp
imul
ret
scas
dec
inc
xchg
lea
jb
cld
mov
les
fimuls
pop
cmc
mov
movsl
and
pop
and
push
push
frstor
test
dec
sbb
jp
mov
out
sbb
cmpsl
or
ficoms
outsl
pop
ficoml
loop
rcl
inc
xchg
test
in
sbb
push
lahf
das
push
mov
mov
pop
stos
and
lret
fcomp
pop
push
in
imul
iret
sub
and
icebp
std
add
mov
xorb
test
hlt
and
add
stos
bound
test
push
dec
push
insb
mov
rorl
aam
inc
imul
xchg
pop
xor
cmovle
dec
sarl
scas
sbb
pop
andb
aam
shlb
loop
mov
adc
cltd
clc
add
cli
outsb
stos
lret
pop
rcrb
push
test
fisttps
xchg
in
sbb
outsb
ss
sub
cld
inc
ja
sbb
loop
in
jno
cwtl
inc
xor
adc
pop
mov
add
sub
fsts
pop
sbb
cmp
fdivrs
xchg
mov
scas
or
and
ret
inc
mov
xchg
dec
mov
cli
jmp
fsubs
hlt
test
mov
rolb
add
clc
inc
lcall
andl
mov
sub
movsb
pusha
sub
adcb
jg
lret
cmp
iret
pop
mov
mov
cld
sahf
in
sub
out
gs
jnp
adc
fdivl
pop
dec
sarb
pushl
scas
xor
add
pop
sub
icebp
shrl
sbb
negl
xor
ja
fdivrp
mov
dec
add
out
pusha
mov
or
jge
aam
insb
in
mov
mov
pop
sbb
loop
xor
rclb
inc
sub
cltd
popw
mov
icebp
sub
pushf
push
data16
js
fldt
loope
rcrb
cmp
mov
inc
adc
xor
mov
sahf
ja
push
mov
sbb
push
mov
jno
and
jns
add
push
pop
pusha
sub
stos
mov
sbb
popa
pop
popl
lahf
pop
stos
rclb
or
addr16
or
jno
sbb
aaa
push
lds
push
jp
add
cmpsb
push
js
dec
in
mov
or
jnp
mov
fcompl
popf
filds
shrl
fstl
out
loopne
mov
and
cmp
xchg
pushf
dec
xchg
xchg
arpl
cmp
imul
adc
dec
inc
stc
pop
loope,pt
mov
xchg
adc
out
jno
ja
or
mov
lret
push
pop
into
repz
mov
push
push
mov
jae
cmp
cmp
inc
nop
testl
int3
test
ret
mov
test
adc
push
fdivs
arpl
inc
cmp
pop
inc
fs
or
in
fsubl
je
xchg
xchg
dec
stc
jle
inc
aad
mov
in
xchg
in
pop
pusha
lods
push
iret
mov
cmp
push
pusha
or
incl
or
dec
mov
shlb
out
ret
jmp
mov
pop
xor
sub
repz
stc
popf
mov
sub
fsub
pop
loop
adc
push
mov
cwtl
inc
add
push
sub
cmpsl
add
xchg
jnp
lock
lock
sub
and
in
or
fildl
and
repz
sbb
ljmp
insl
mov
mov
jmp
push
mov
mov
daa
add
xchg
inc
insb
bound
add
shr
cmp
and
cmc
mov
stc
sub
or
add
adc
jo
inc
outsl
adcb
mov
xchg
cmpb
xchg
pop
xor
jp
sub
out
cwtl
lahf
fsub
push
ret
or
fildl
jnp
pusha
sub
add
ret
pop
cmp
adc
insl
dec
push
jmp
add
les
test
imul
cmp
gs
ret
cmc
pop
xchg
ret
sub
repz
pop
jmp
inc
mov
repnz
sahf
jno
aaa
and
mov
mov
xor
mov
ficoml
mov
or
addl
imul
mov
loopne
pushf
dec
xor
iret
xor
mov
lcall
imul
in
sbb
arpl
push
repnz
out
push
add
sub
push
pop
fistps
popf
jmp
mov
ficomps
loope
xlat
xor
cmp
xlat
pop
pop
test
jb
adc
lea
xchg
or
add
rcll
subb
fists
mov
cmc
les
sub
adc
clc
in
cmc
shrl
xlat
iret
cmc
incb
jecxz
data16
test
mov
lods
incb
dec
negb
int
adc
add
fdivrl
and
jae
icebp
inc
pop
xor
inc
xlat
jmp
xchg
jo
pop
jmp
subb
xor
or
xchg
call
cmp
adc
jle
nop
mov
aas
into
cmpsl
rcrb
dec
mov
icebp
pop
lcall
add
in
addb
cmpsb
cmp
not
lock
sti
xchg
call
lcall
add
sub
repnz
adc
clc
sbb
pop
jb
add
add
scas
stos
xchg
jle
sub
hlt
inc
sbb
inc
insl
inc
push
addr16
loop
sbb
mov
mov
out
mov
mov
mov
or
inc
sbb
adc
fsubrs
push
out
sbb
in
xlat
lret
xorb
mov
pop
mov
add
add
out
mov
in
test
stos
mov
or
outsb
inc
mov
sub
sbb
jl
test
sbb
subl
addb
cs
test
and
daa
aad
and
pop
fs
aam
pop
imul
lds
xchg
into
or
dec
fiaddl
xor
mov
fld
sahf
ljmp
add
jns
push
dec
je
rcrl
cmp
jbe
jne
adc
or
imul
add
adc
out
adc
sub
fwait
xor
popa
ret
mov
clc
rorb
fcmove
or
and
shl
xchg
test
fistl
adc
cs
int
inc
jl
mov
mov
add
inc
ds
sbb
push
inc
xor
sbb
push
clc
lret
imul
lods
lods
popf
jmp
mov
shll
push
icebp
xchg
clc
sub
mov
mov
adc
push
xor
pop
xor
or
lret
sbb
int
aam
push
ja
lcall
mov
imul
test
imul
test
fists
aad
andl
loopne
jg
and
lock
rol
lcall
jmp
rcr
jo
lret
mov
sbb
repz
xchg
adc
pop
stc
push
add
sub
shl
xlat
mov
inc
push
nop
popf
mov
sub
aam
shll
inc
stos
std
rclb
mov
lea
int
ljmp
sbb
stos
or
rclb
or
push
cmpsl
fcomp
rol
negl
cltd
mov
das
iret
cmp
and
sbb
out
data16
add
aad
rolb
dec
insb
rcrb
push
icebp
jae
inc
adc
repnz
clc
aam
ret
add
lret
repnz
dec
pop
dec
pop
xchg
nop
inc
xchg
push
jne
inc
sbb
addb
scas
ret
push
adc
popa
cmpsl
mov
push
pavgb
jo
jmp
xor
aad
adc
loopne
in
adc
pop
mov
dec
jecxz
dec
out
xchg
aam
out
cmp
push
sub
xor
sbb
mov
dec
mov
add
cld
sarb
adc
les
out
loopne
pop
dec
pusha
add
fcmovb
lock
mov
jns
in
xchg
bound
push
adc
arpl
mov
mov
mov
mov
jge
test
xchg
nop
rolb
pop
fsubrl
cmp
xor
and
loopne
aaa
lar
add
xor
jbe
xorb
cltd
dec
lret
or
int
jbe
and
cmp
push
cmp
jne
insb
cmpsb
pop
dec
push
or
jle
adc
and
xor
imul
addb
ret
jle
pushf
sarb
adc
addb
cmp
dec
les
or
dec
push
es
xchg
testb
jo
aam
mov
addr16
add
pop
popf
stc
pusha
push
enterw
test
dec
repz
in
and
sbb
int
inc
sub
test
mov
popf
cmp
icebp
xchg
add
mov
pop
dec
int
xchg
or
addr16
xchg
jmp
pop
add
jl
mov
es
stos
lds
test
inc
in
enter
out
xor
ds
cli
jnp
pop
dec
das
stos
out
add
inc
idivl
jl
dec
sub
cmpsl
or
outsb
push
popa
or
lret
push
clc
ss
ret
inc
cwtl
rdtsc
xor
mov
outsb
xlat
cmp
pop
out
adc
xchg
push
and
mov
jb
shlb
in
in
sbb
dec
cmp
movl
shl
aas
jge
push
dec
push
cltd
mov
pop
into
aas
outsb
mov
mov
jns
leave
movsl
mov
jmp
std
add
outsl
in
pop
pop
stos
jecxz
xor
js
and
sbb
nop
js
sahf
ficoml
in
mov
jecxz
out
pushf
xor
mov
fsubr
daa
inc
stos
mov
int3
pop
pusha
pop
xor
aad
mov
xor
xchg
dec
sub
mov
stos
xchg
mov
andb
stc
aam
add
pop
pop
insl
mov
cld
xor
lds
xchg
and
adcl
dec
add
xor
sbb
ds
sbb
jp
cmp
adc
mov
aas
notl
pop
nop
les
mov
jl
jbe
fcmovne
push
cmp
adc
adc
push
xor
out
push
aaa
push
shlb
cld
cmc
xchg
sub
adc
push
xlat
mov
scas
call
popa
xchg
mov
mov
inc
ret
bound
lds
adc
inc
sbb
xor
lock
sbb
std
xchg
iret
sbb
cmp
mov
jo
mov
cmp
xor
pushf
mov
mov
mov
je
mov
out
loop
enter
mov
test
sbb
mov
in
add
shlb
pop
sbb
movsl
in
jmp
jbe
mov
mov
push
add
rcrl
push
pop
jb
jno
jge
aad
decb
lods
fstpt
lods
push
gs
lods
loope
xchg
mov
iret
add
fs
repnz
push
cli
mov
pushf
sbb
fsubrs
xchg
inc
test
jb
or
xor
ds
notb
je
pop
pop
ss
cs
jo
dec
mov
jmp
dec
test
movsb
pop
push
mov
jo
jne
xchg
das
cltd
loope
jne
fsubrp
in
cmpb
push
adc
adc
xchg
in
ret
outsb
gs
int
ljmp
outsb
push
sub
lock
mov
outsb
in
loopne
pop
xchg
roll
fistl
sbb
data16
sti
jae
mov
cmp
andl
push
xor
dec
push
xor
cltd
hlt
mov
xor
dec
xor
mov
jne
mov
aaa
arpl
dec
dec
jb
std
hlt
mov
sti
dec
aad
outsl
xlat
cwtl
mov
push
add
jne
mov
inc
fdivrs
hlt
jne
cmpsb
daa
test
mov
andb
data16
add
hlt
sbb
push
pop
std
movsl
stos
sub
xchg
mov
int3
pop
hlt
and
sti
jge,pt
adc
test
mov
push
roll
imul
push
and
repnz
jge
or
in
lahf
lcall
lret
outsl
and
inc
pushf
xchg
cwtl
adc
loop
popf
cmp
sbb
mov
adc
pop
aam
or
or
add
sbb
jle
gs
incb
xchg
dec
push
mov
inc
call
clc
lret
push
pushf
push
lods
sbb
int
int3
cmp
enter
jg
sub
jmp
fisttps
cs
push
cmpsl
jle
or
mov
mov
shlb
inc
mov
sahf
add
lcall
cld
xchg
stos
xchg
pop
je
pop
dec
push
mov
outsl
add
inc
add
inc
aaa
fstpl
nop
push
add
adc
lds
sub
adc
stc
push
inc
lock
xor
movsl
cmpl
and
push
mov
daa
out
call
add
das
ja
mov
ljmp
in
sbb
pop
mov
jno
in
ja
xor
cmp
jne
cmp
cmpb
cmp
add
shl
adc
out
and
cmp
pusha
jnp
pop
and
stc
mov
ss
mov
jo
xchg
clc
std
push
sub
mov
mov
int
adc
shr
and
loop
jb
xlat
jg
in
and
or
mov
mov
adc
in
xlat
xchg
jns
test
jbe
adc
in
jo
pop
push
sarl
mov
dec
inc
test
les
inc
mov
in
sbb
in
sbb
xchg
mov
and
icebp
xchg
cmp
inc
cmp
jo
shrl
push
jno
lahf
popa
insb
popf
xchg
in
lret
push
add
xorl
push
jge
clc
jno
inc
imul
mov
mov
mov
mov
das
dec
mov
jns
mov
lea
arpl
int3
int
test
pop
add
les
dec
test
mov
js
add
lods
int3
out
and
mov
xchg
adc
cmc
test
cli
cmp
mov
outsb
std
xor
aas
mov
es
ljmpw
jmp
pop
fmul
add
jge
movsb
cli
mov
mov
cmpsl
jg
xchg
lock
cld
les
xor
mov
push
test
fwait
and
mov
mov
shrb
stos
bound
add
stc
push
dec
push
enter
mov
mov
pop
repz
arpl
sub
jge
jg
jmp
mov
or
pop
xor
test
inc
inc
mov
inc
rcr
rcrl
into
dec
pushf
inc
test
xchg
pushf
cld
imull
mov
pusha
inc
mov
out
push
repz
and
mov
les
enter
scas
push
dec
jnp
sbb
inc
movsb
adc
repnz
cmp
jge
rorl
gs
test
jl
xor
push
xchg
and
lods
test
mov
inc
cli
inc
sahf
mov
xor
push
push
add
push
mov
jne
dec
add
push
mov
adc
push
add
adc
mov
xchg
ja
popf
and
mov
inc
arpl
and
and
or
lret
cltd
bound
imul
roll
mov
fisttps
inc
jae
and
jb
inc
or
jae
or
leave
add
cmpb
mov
test
cld
ss
mov
or
cmp
xlat
rcll
mov
fisubrs
cld
adc
fnsave
pop
adc
lea
test
mov
jns
lock
in
adc
test
jmp
cmpsb
cmp
jl
xchg
out
mov
adc
cmp
ds
push
popa
aas
scas
mov
out
fldt
pop
mov
sbb
lods
push
jg
std
enter
imul
fwait
pop
dec
jmp
cmp
gs
insl
mov
loop
mov
jae
shll
hlt
mov
enter
pop
jne
and
mov
std
sbb
jb
xchg
pop
dec
cmp
or
cld
sub
lea
xchg
filds
push
rol
enter
arpl
sbb
pop
arpl
dec
cmp
movsl
xor
leave
xor
fidivrl
sbb
add
inc
mov
ljmp
sbb
addl
ret
pop
xchg
push
sub
cmp
xchg
push
cmp
push
in
lahf
cwtl
idivb
push
xchg
push
jl
test
popf
jns
jb
adcl
pop
dec
jp
cmpsl
push
and
dec
loope
pop
addr16
lret
leave
and
cmc
inc
inc
fildl
cmp
loop
pop
inc
ss
xor
lahf
jne
les
inc
bound
xor
jno
sub
in
fiadds
inc
push
xor
aaa
mov
xchg
and
into
cmp
lods
stos
mov
outsl
dec
divl
xchg
jp
arpl
movsb
loopne
fsts
push
nop
cmp
ss
or
f2xm1
out
xchg
dec
das
inc
mov
jle
lock
idiv
aaa
mov
xchg
daa
mov
rcll
cltd
jecxz
cltd
dec
fisubs
les
into
or
addr16
and
mov
inc
mov
push
lahf
cltd
and
ds
pusha
ds
cld
or
xchg
pop
aaa
mov
in
mov
adc
pop
adcb
adc
insl
lds
stos
in
pop
jns
fldl
outsl
xorb
xor
fcmovnb
les
pop
lods
mov
leave
in
cld
xchg
mov
scas
dec
hlt
lret
movsl
inc
sti
xor
adc
sbb
or
fsubs
ficompl
mov
lcallw
pop
imull
std
sub
daa
roll
sbb
xchg
sub
pop
mov
lods
adc
ss
in
stos
das
mov
cwtl
inc
mov
inc
cmpsb
jl
ss
cmpsb
rorb
sub
inc
xor
inc
or
cld
mov
push
mov
mov
js
sti
sahf
pop
mov
fisttps
xchg
mov
adc
outsb
inc
pop
cmp
leave
hlt
sub
ds
test
ss
pushf
outsl
inc
inc
mov
int3
syscall
fs
pmulhuw
jp
adc
dec
rcrl
and
outsb
cld
rclb
sarb
cmpsl
scas
cli
insb
frstor
push
mov
lahf
xchg
inc
pop
stc
jle
stos
dec
clc
rcr
cmc
cwtl
shrb
test
cmp
mov
dec
jns
aas
sbb
cmpl
jns
lcall
sti
je
popf
imul
lcall
pop
outsb
daa
mov
jmp
std
lods
or
dec
xor
in
or
pop
in
dec
xor
lret
mulb
ret
fmull
and
jb
jmp
lods
pop
bound
fs
pop
lcall
outsl
pop
pushf
jg
xor
xchg
pop
aaa
sub
xchg
addr16
xchg
inc
push
or
fnsave
fadds
jmp
inc
in
sub
or
mov
sbb
sub
fidivs
ret
andl
cs
xorb
sbb
push
orb
dec
inc
pusha
shrb
and
lret
iret
ss
gs
popf
adc
sub
xchg
jg
xchg
sbb
iret
lret
pop
mov
repnz
mov
loop
test
shlb
int
pop
ret
pop
mov
sbb
insl
mov
daa
dec
sub
add
adc
mov
fdiv
or
loopne
xor
cmp
mov
jg
mov
mov
or
stos
fcomps
fimuls
sbb
shrl
outsl
sti
sbb
or
mov
xchg
mov
pop
sahf
iret
lods
leave
js
sbb
push
test
pusha
leave
or
jbe
mov
add
pusha
stos
lods
jle
clc
adc
sub
xor
aaa
mov
adc
inc
dec
mov
ficoml
sub
and
sbb
and
cmp
xchg
xchg
mov
sub
pop
loop
add
rcr
or
inc
jge
std
pop
loopne
sub
cmp
sbb
ljmp
or
cmpsb
inc
dec
add
push
xchg
cmp
pop
jg
dec
clc
rcrl
test
scas
dec
ljmp
mov
jge
dec
imul
jns
dec
dec
aam
call
cld
sbb
xchg
cmp
popa
in
out
jo
xor
mov
jae
jmp
add
in
data16
and
lret
jnp
inc
loop
fwait
add
mov
andl
add
inc
sbb
xlat
repnz
fucom
lods
or
cltd
popa
cli
test
fcomip
out
inc
pop
lds
mov
cmp
adc
fldt
fld
xchg
shrb
cmpsb
add
push
lret
pop
sub
ficoml
rclb
outsl
sbb
jbe
push
sub
push
xchg
mov
adc
hlt
insb
mov
ret
xor
mov
scas
loopne
mov
cmpsl
cltd
out
nop
das
fwait
mov
in
pop
ljmp
mov
push
pop
push
loop
rclb
dec
xor
out
add
lods
xchg
addr16
addr16
adc
mov
push
ja
js
sahf
cmpsl
sbb
test
pop
xchg
popa
sbb
mov
cmp
mov
pop
xor
insl
mov
pop
arpl
jle
sbb
int3
cmp
cs
add
mov
jle
pop
fimuls
dec
mov
sub
jnp
and
dec
push
push
xor
mov
and
or
lds
out
push
lcall
dec
sahf
outsl
inc
lret
js
rol
ret
push
cmpsl
jg
stc
aaa
fisubrs
or
sbb
daa
in
mov
cli
movsl
aaa
mov
mov
mov
jb
fildll
push
and
mov
or
out
pusha
sarb
or
lock
and
push
sub
jb
mov
add
add
je
lcall
imul
adc
dec
xchg
jle
inc
sbb
int
ss
dec
cli
adc
imull
mov
jne
inc
add
lret
in
pop
mov
mov
push
into
mov
pop
lret
jae
jg
ss
incb
mov
aad
pmaxub
mov
sub
jb
outsl
fs
inc
jg
push
fmull
test
filds
pop
loopne
lahf
repz
jmp
adc
aam
inc
and
sti
mov
aam
dec
pushf
sub
jl
xchg
pushf
or
mov
xchg
pop
xchg
xor
stc
mov
cmp
sub
out
in
cmp
push
outsb
mov
fisubl
fbstp
push
fnsave
or
int
mov
dec
adc
sub
mov
ret
adc
xchg
int
cmp
jae
stos
insb
or
sahf
testb
sbbb
pusha
push
pop
push
inc
or
pop
aam
cmp
leave
fmuls
repz
or
icebp
lahf
cmp
sbb
or
adc
ret
mov
cmp
mov
jecxz
mov
pop
xor
or
sub
dec
jp
les
xor
iret
inc
insb
pop
push
mov
movsl
mov
and
iret
or
loope
jmp
and
outsl
adc
jle
imul
stos
or
mov
loop
popa
sub
mov
mov
mov
cs
xchg
lods
test
inc
jp
inc
aam
pop
cmpsb
push
push
subl
pop
mov
mov
stos
insl
dec
outsb
lcall
js
pop
jae
popf
hlt
add
les
insl
cltd
xor
push
jle
or
adc
sub
icebp
ss
rclb
dec
lcall
mov
or
call
mov
out
mov
mov
pop
mov
icebp
in
fistpll
sbb
mov
inc
jp
lret
xchg
fstpt
xorb
loope
push
ficoml
push
subb
pusha
mov
pop
xchg
pop
out
or
push
dec
inc
xor
sarl
hlt
adc
jnp
out
repz
mov
xor
fldt
adc
push
push
sbb
scas
inc
stos
testl
ds
int
mov
xchg
add
jmp
push
push
push
ja
rcll
std
push
cltd
rclb
mov
dec
sub
mov
sbb
faddl
movsl
xor
repnz
sbb
dec
addl
and
and
sti
jp
cwtl
xor
add
scas
mov
sbb
jl
stos
jmp
ds
in
or
movsl
sub
dec
adc
push
stos
add
fdivs
ja
ror
jbe
movsl
pop
push
pop
dec
jo
dec
pusha
in
cmp
xchg
jmp
inc
and
mov
popf
imul
add
mov
xchg
fcompl
lods
cli
mov
pusha
xchg
nop
mov
mov
and
push
pusha
push
or
pop
xchg
jbe
adc
push
fsubl
fisubrs
das
das
mov
sbbl
shrl
notl
repnz
mov
mov
nop
outsl
rcrl
ret
ss
test
dec
or
sahf
mov
test
loopne
cli
inc
outsl
xchg
sbb
xlat
fdivrs
push
cld
dec
adc
pop
scas
int3
cmp
adc
leave
adc
jmp
or
aad
movsb
std
mov
mov
clc
and
out
mov
stos
roll
out
out
xor
cmp
mov
nop
mov
adc
shll
jp
or
pop
cmp
adc
loop
lods
pop
adc
inc
repnz
mov
pop
addr16
and
jbe
loopne
dec
or
int
and
xchg
push
mov
sti
arpl
and
mov
inc
stc
popf
dec
pop
pop
sbb
pop
aas
fcmovbe
sbbl
pop
sub
jle
mov
hlt
xlat
enter
decb
daa
mov
jns
das
mov
lods
mov
mov
bound
call
sub
jl
enter
mov
cmp
jg
lods
and
sub
adc
mov
into
add
fisubrs
js
jmp
int3
mov
push
mov
sbb
pusha
mov
icebp
out
add
outsl
incl
pop
or
mov
lock
xchg
sbb
inc
int
arpl
pop
sub
xchg
lret
lcall
push
or
jmp
testl
out
call
iret
daa
jle
in
call
and
dec
jmp
cmp
add
jo
push
sbb
imull
adc
sbb
xor
jb
into
mov
mov
xchg
outsl
popf
push
cld
sub
xchg
push
mov
cmp
and
clc
sti
mov
out
test
lock
pop
mov
add
adc
incb
mov
mov
test
lret
push
mov
sub
std
and
addb
cbtw
cld
imul
adc
add
fsubrl
cmpsl
mov
mov
pop
dec
sbb
pop
adc
push
test
jg
rcll
lea
mov
pop
xchg
or
cmp
jo
push
sti
fcom
mov
mov
test
jp
scas
cmc
ds
mov
in
test
rorb
push
adc
addr16
repnz
out
mov
add
inc
in
cli
sbb
movsl
cmp
pop
cmpxchg
fcoms
jne
out
jae
push
lea
out
add
and
jae
shll
test
cmp
cmp
sahf
in
aad
pop
mov
daa
push
les
hlt
pop
pop
cwtl
loope
enter
or
fwait
push
imul
lods
add
lock
push
mov
jo
fldl
and
and
mov
xor
add
adc
ds
shll
inc
inc
add
and
jmp
or
clc
fildll
dec
stos
mov
and
andb
int3
cmp
mov
icebp
mov
or
inc
fs
fmul
adc
test
mov
sbb
xor
jbe
xchg
cmp
pop
add
ljmp
dec
fnstenv
jecxz
lods
int3
lcall
xor
dec
outsl
ret
ss
push
fsubl
and
mov
or
imul
ret
scas
ljmp
xor
mov
std
sub
mov
inc
push
notl
fwait
out
sahf
cmp
fisttps
shlb
mov
stos
xorb
lret
lea
mov
bound
add
mov
sub
pusha
inc
test
cli
fs
lock
add
xchg
cltd
jnp
aad
pop
int
mov
ja
mov
dec
mov
cmp
pushf
adc
sub
mov
or
ljmp
dec
add
ljmp
dec
loopne
jae
jmp
les
or
mov
pop
fwait
mov
jl,pt
and
orl
xor
pop
stos
test
dec
pop
sbb
push
push
inc
loope
mov
mov
jae
icebp
jle
add
mov
xchg
jle
outsl
pop
sub
ljmp
push
cli
inc
jge
js
clc
inc
mov
cmpl
call
jmp
mov
or
repnz
mov
mov
or
push
out
mov
pushf
in
push
or
repnz
int3
in
or
aad
out
scas
xchg
pop
mov
adc
cmp
xor
pusha
jge
lret
fldt
mov
movsb
rcr
mov
ds
es
pcmpeqd
repnz
jnp
mov
sub
xor
add
fwait
ret
call
aas
and
daa
mov
lock
mov
test
mov
cmp
add
add
jmp
shll
sbb
cs
sbb
dec
jmp
mov
lcall
adc
or
ss
loopne
lcall
movsb
mov
mov
ret
xor
mov
adc
aaa
arpl
mov
jo
sbb
xor
dec
xor
adc
rorb
data16
xor
aaa
sub
jbe
jo
sti
fbld
cmp
iret
mov
sub
mov
es
xor
jg
mov
push
pop
test
adc
movsl
mov
data16
cmc
xchg
popa
lret
or
sub
xor
lods
orl
mov
sahf
jecxz
popa
cmp
or
addr16
inc
cli
fsubl
lods
inc
or
rolb
sub
sub
test
cmp
into
sub
push
mov
mov
pop
lcall
inc
adc
fcomps
mov
std
test
iret
add
int3
fabs
aad
fadds
cltd
mov
iret
mov
ffreep
xor
mov
and
je
xor
and
push
jg
pushf
mov
dec
int3
out
jg
jne
cmpsb
frstor
lea
add
aad
cmp
test
sub
orl
outsb
add
bts
lods
push
cmpsl
dec
enter
mov
pusha
and
xchg
shl
movups
adc
gs
negl
into
push
outsl
xor
shrb
imull
push
js
sbb
lods
push
inc
xchg
das
xchg
xor
push
push
data16
cwtl
leave
and
testl
sbb
pop
dec
inc
pop
mov
aad
or
cmp
aaa
mov
jne
mov
jle
and
je
jmp
lahf
fcmovnu
xor
sub
mov
fmuls
sbb
adc
lds
pop
inc
daa
mov
pop
scas
pusha
xor
stos
mov
ljmp
in
xchg
jge
push
fnsave
sub
dec
mov
pop
repz
sub
rolb
outsb
outsl
push
mov
xchg
and
aad
or
es
sub
orl
pop
icebp
adc
mov
out
loopne
int
inc
mov
popa
or
mov
mov
mov
push
xchg
pop
adc
inc
data16
aam
stos
in
push
xor
int
sahf
ret
rclb
add
add
xchg
inc
ja
mov
fildl
mov
pop
sbb
mov
stos
pop
lods
fmuls
jl
xchg
cmp
jae
dec
pop
cmp
lock
dec
popa
adc
pop
leave
adc
addl
jp
xchg
pop
shll
out
leave
sahf
dec
sub
mov
jg
cwtl
daa
adc
mov
xchg
shl
adc
cmpsb
inc
add
xor
push
xchg
fldl
cmp
das
mov
sti
xor
sbb
enter
cmpsl
aam
inc
push
inc
mov
fildll
lods
arpl
adc
in
inc
mov
push
in
adc
test
fsincos
jb
xor
test
mov
adc
adc
fldt
mov
sbb
jb
popa
xchg
lods
mov
scas
jns
push
mov
cmp
or
push
mov
mov
je
adc
add
mov
cmpsb
pop
and
cmp
test
int
lock
jecxz
mov
xor
pop
add
out
mov
lods
and
test
pop
pop
xor
push
aad
adcl
jg
out
ja
push
daa
and
xlat
sub
es
sbb
lcallw
repz
lcall
test
js
fldcw
jmp
orb
ds
mull
cmp
push
adc
rolb
mov
aam
mov
sbb
pop
cmc
mov
call
das
scas
mov
in
lea
imul
loop
dec
loop
inc
xor
mov
mov
sahf
jo
xor
jle
push
mov
pop
scas
lods
enter
insl
jecxz
mov
and
rcl
rclb
lret
add
in
gs
aas
jg
mov
rcl
fwait
stos
rdtsc
or
pop
movsb
add
push
mov
push
popf
or
pop
mov
std
fcompl
ror
notl
inc
pop
ret
inc
mov
adc
ja
aaa
pop
mov
cmp
sub
mov
xchg
mov
mov
jae
setle
fimuls
loope
xchg
push
mov
std
leave
das
adc
psadbw
push
jp
popf
push
xchg
dec
sbb
scas
cmpsb
push
addl
xor
or
or
ja
out
in
sub
rcr
add
jmp
loopne
cld
xchg
clc
mov
aam
push
mov
jns
mov
mov
sub
negl
cmc
mov
xor
or
or
enter
sub
inc
lds
cmc
stos
data16
push
sub
shll
jo
fbld
pop
sarl
idiv
pop
pop
sub
mov
mov
add
sub
pop
inc
inc
mov
adc
lods
out
test
xchg
mov
xchg
mov
push
add
sbb
js
insb
lret
inc
dec
rol
mov
adc
cmp
add
add
scas
orb
and
cmc
stc
jecxz
add
pop
sbbb
das
aas
pop
test
mov
das
cmpsl
inc
xorb
ja
popf
rdtsc
dec
in
inc
andl
jnp
dec
rorb
and
sti
or
lods
cmp
clc
push
mov
aam
sub
inc
inc
mov
push
gs
out
jge
push
rcll
ss
aaa
pop
loope
gs
lret
dec
call
push
in
jg
sbb
std
lds
imul
frstor
jmp
and
xor
in
hlt
lods
mov
fadds
push
jge
sbb
xchg
jecxz
call
push
inc
jecxz
int3
xchg
xchg
cmp
in
pop
push
sbb
cli
pop
push
push
dec
lretw
pop
cmp
add
sarb
pop
cmp
push
jecxz
repz
jge
xlat
aad
push
out
insl
cmpsb
add
rcrl
jbe
xchg
mov
adcl
push
inc
out
aas
hlt
cwtl
fldl
xor
inc
xor
pop
push
inc
shll
sbb
push
jae
lret
xchg
dec
out
pushf
adc
jg
push
bound
lahf
add
mov
adc
mov
push
sub
jg
dec
shll
mov
es
sbb
aas
xor
jnp
sub
stos
mov
dec
shr
aam
repnz
lahf
scas
mov
icebp
jnp
frstor
sti
imul
cmp
adc
pop
rolb
decl
dec
add
mov
and
lahf
mov
and
fwait
out
jbe
ret
xchg
ja
push
and
inc
in
mov
push
xor
pop
sbbb
sub
jmp
lret
dec
fsts
orb
aas
xchg
jnp
sbbb
inc
lods
xchg
cmp
std
push
jno
sub
cmp
mov
fs
leave
mov
pop
or
repz
jae
hlt
mov
stos
icebp
mov
cwtl
ds
ret
mov
cli
jb
jne
push
add
fcmove
cmpsb
xchg
sub
cmp
out
out
mov
pop
jb
add
pushl
repnz
test
mov
adc
call
mov
mov
sub
jecxz
cmpsb
ss
jnp
adc
adc
add
pushf
aaa
scas
repnz
cmp
repz
xchg
xor
mov
xor
push
mov
dec
xchg
cmp
pusha
xchg
adc
add
cwtl
mov
insb
xchg
adc
push
sahf
fimuls
rorl
push
cmp
and
subl
mov
xchg
outsb
repz
int3
pop
xor
xchg
push
sub
adcb
add
je
push
in
mov
inc
lcall
popf
push
mov
add
dec
lret
push
jmp
mov
mov
jmp
push
jae
push
mov
lret
xor
add
imulb
das
je
in
out
and
loopne
or
jnp
push
and
mov
inc
imul
lock
cmp
xchg
mov
push
punpcklwd
in
add
fwait
jmp
outsl
test
adc
loop
inc
xchg
cmp
pop
popf
hlt
push
aas
jne
jg
sbb
pop
ret
dec
andl
mov
clc
clc
mov
mov
pop
sbb
mov
imul
mov
sub
fnsetpm(287
dec
push
cmpsl
inc
rcrb
mov
or
cltd
movsl
jae
and
xchg
lock
bound
push
mov
inc
or
cld
pusha
call
dec
outsb
cmp
testl
enter
or
mov
mov
xchg
jp
ds
pop
cmpsl
jno
mov
stc
test
mov
xchg
ljmp
push
adcb
lahf
push
mov
add
mov
sti
sub
xor
sub
mov
scas
mov
fcmovnb
pop
test
mov
in
sbb
add
fld
stos
popa
es
into
adc
loopne
xorb
add
rclb
xchg
mov
dec
jo
jg
sbb
das
push
in
push
lods
insl
mov
ds
push
cltd
mov
int
clc
ret
out
stc
adc
sbb
ljmp
or
sbb
ret
xchg
rcrl
mov
jno,pt
in
pop
push
mov
xorl
or
mov
sub
push
adc
stc
imul
push
xor
xor
loop
xchg
or
in
vpxor
leave
jmp
stos
xchg
xchg
ret
mov
outsb
pop
pushf
jnp
xor
mov
sub
jbe
rcll
js
dec
sti
shrl
dec
int3
push
dec
iret
mov
inc
les
mov
sub
test
mov
pop
dec
mov
push
cs
adc
incb
jmp
out
fucomip
push
loope
add
loopne
inc
cmp
stos
mov
adc
dec
mov
pop
mov
shlb
fadds
pop
shlb
jecxz
push
mov
adc
movsb
icebp
fdivl
cmp
repnz
sub
mov
iret
xchg
fnsave
aaa
fmull
or
rcr
fimuls
call
hlt
pop
mov
dec
lock
sarb
faddl
cli
ljmpw
out
ljmp
or
ljmp
cmp
add
xor
jp
xor
bswap
push
fldenv
dec
cmp
mov
mov
pop
lds
jmp
lret
mov
cmpsb
lret
fdivrs
in
jg
pop
enter
sbb
adc
cli
push
repz
cmp
mov
inc
call
xor
dec
adc
outsl
lret
insb
clc
in
sub
mov
mov
or
or
jbe
stos
and
pusha
aam
daa
dec
sar
jae
jl
lods
test
scas
sti
cmc
cmpsl
push
jb
outsb
and
fwait
jle
fwait
fwait
xchg
sbb
das
gs
pop
cwtl
mov
cwtl
scas
cmp
aam
clc
or
push
add
and
test
jl
pop
push
inc
in
and
fsubrl
adcb
into
das
xchg
cli
pusha
mov
dec
out
pop
jnp
push
xor
mov
sbb
out
out
mov
icebp
adc
mov
inc
xchg
xchg
stc
pop
test
push
xor
sarl
into
adc
in
mov
gs
cmpsb
pusha
jnp
dec
std
filds
mov
rcr
fistpll
push
push
xchg
push
pop
dec
pusha
mov
lcall
cmp
jecxz
mov
sub
aas
xchg
movsb
cmp
and
pushl
movsb
pop
inc
adc
adc
dec
pop
mov
xor
scas
fs
lods
cwtl
xchg
cwtl
push
stc
ret
mov
arpl
call
jmp
test
inc
subw
xor
pushf
or
mov
push
push
pushf
loope
ficoms
mov
cmp
repz
aad
xchg
pushf
jmp
adc
std
mov
mov
dec
jg
sti
out
mov
jnp
jb
dec
adc
mov
sahf
scas
lret
shlb
mov
test
jp
popa
cmc
jecxz
dec
mov
and
push
mov
testl
adc
imul
jno
lcall
roll
pop
xlat
cmc
push
fcomp
jecxz
jbe
sub
in
sarl
aaa
insl
in
and
and
xor
mov
popa
jns
xlat
test
mov
lea
cmp
xchg
jb
iret
loope
daa
dec
dec
xor
jg
loope
adc
aam
flds
ja
adc
dec
mov
inc
stos
lea
xor
adc
shll
data16
out
loop
add
and
adc
test
dec
jae
push
fmull
pop
pop
orb
or
jmp
xor
inc
sbb
call
jne
mov
mov
mov
lret
inc
fs
sub
pop
mov
mov
fs
cmp
fnstsw
mov
lods
movsl
divl
aam
js
repz
sbb
cwtl
lea
mov
pop
sbb
inc
fisttpll
dec
inc
mov
adc
mov
xchg
mov
push
jo
jg,pn
push
out
xchg
cmp
ret
sub
test
sub
xchg
and
or
ret
or
clc
lret
ret
push
mov
clc
xchg
xor
xchg
test
add
and
jno
inc
cmc
inc
mov
mov
insl
out
add
pop
mov
mov
dec
or
lds
call
xor
mov
xor
jg
push
adc
mov
or
idivb
push
pop
nop
in
or
inc
leave
jns
add
xor
cmp
mov
outsb
in
mov
cmc
inc
inc
sbb
mov
jbe
shll
es
or
jl
mov
dec
xchg
fldl2e
out
fbstp
or
test
xchg
mov
sub
inc
call
orl
in
add
out
adc
js
pushf
negb
in
xchg
mov
dec
test
test
cmc
jp
testb
xchg
test
jmp
enter
mov
ss
fcmovu
aas
outsl
or
jnp
pop
clc
lcall
xor
aam
pushw
movhps
mov
jne
sub
jb
xor
popf
mov
dec
lock
push
cmp
and
cmp
inc
shl
sbb
sahf
push
ljmp
inc
push
ja
out
jge
mov
das
dec
xchg
lret
cmp
mov
leave
pop
shlb
adc
sub
popa
sub
aaa
jl
cli
xchg
outsb
ret
es
xor
sti
or
shll
dec
mov
add
mov
imul
loop
lock
enter
fsubl
and
pop
shlb
add
mov
ret
add
arpl
sub
aam
pop
jbe
std
scas
jge
fmuls
sub
sbb
xor
jecxz
imul
xchg
add
or
or
fwait
sub
imul
out
into
dec
dec
fsubs
sbb
fsub
test
lcall
cs
mov
push
mov
int
test
fdivs
out
pop
bound
xorl
mov
insl
imul
push
jbe
js
adc
rclb
xor
cmpsl
and
sti
repz
adc
and
aam
inc
push
std
lods
cmp
inc
pop
pop
inc
xor
dec
jge
pop
scas
js
mov
fmull
shl
pop
mov
fwait
orl
in
or
cmp
cmp
sub
stos
push
jns
xchg
xchg
jo
stos
sub
lds
loopne
push
insl
movsl
jae
mov
lds
sbb
inc
lods
xchg
mov
add
xchg
pop
jle
xchg
dec
pop
dec
push
or
jns
outsl
adcl
push
mov
cmpsl
inc
imul
out
jne
cmp
add
jne
dec
std
hlt
mov
aaa
je
sahf
add
cmpb
mov
clc
inc
inc
sbb
jle
mov
dec
mov
cmp
stc
nop
rclb
fs
imul
lds
push
push
ret
mull
bound
pop
or
ret
and
repz
aaa
push
lods
mov
mov
fdiv
pop
pop
sbb
sub
scas
xor
pushl
stc
fs
call
les
adc
mov
daa
push
fimull
push
adc
repnz
xor
xor
or
push
sbb
inc
and
fucomip
les
fstp
cmp
pop
adc
cmc
out
ljmp
adc
sub
xor
std
aad
xchg
pop
loopne
fldl
das
xor
mov
sbb
out
jge
mov
stc
loope
sete
push
jne
mov
cs
shlb
lcall
mov
mov
or
imul
into
push
scas
jne
enter
adc
inc
adc
int3
bound
push
jae
and
je
enter
sarb
fldcw
inc
cmp
mov
jne
dec
jecxz
or
loop
cli
xlat
inc
sub
pushw
out
mov
pusha
and
test
push
cld
add
xchg
xlat
cmp
push
scas
add
je
movsb
iret
dec
cli
mov
mov
negl
xchg
jae
out
setle
sti
clc
sarl
iret
pop
inc
dec
in
vpperm
push
push
iret
stos
ds
inc
jp
add
sbb
pop
das
shlb
cli
in
sbb
xchg
test
movsb
cmp
xchg
repnz
mov
cmp
and
cmc
push
mov
stos
sbb
cmp
push
call
out
ja
ret
add
push
jl
jmp
pop
cmpsb
outsl
ret
call
imul
sbb
sub
inc
mov
es
leave
adc
pop
movsl
arpl
lds
inc
ret
cmp
orb
imul
jge
mov
pop
aaa
push
icebp
test
inc
jmp
mov
scas
pop
inc
push
outsb
xor
lods
push
adc
or
push
push
jecxz
jp
enter
xchg
pop
std
in
repnz
and
cmp
sub
fisttpl
loop
repz
xor
jnp
push
adc
pop
test
outsl
xor
xchg
xchg
clc
xor
cmp
xor
cmp
mov
out
arpl
xor
out
imul
in
js
inc
cwtl
or
inc
adc
xchg
cltd
jae
std
fcmovu
insl
pop
hlt
in
pop
xchg
jl
dec
dec
mov
scas
lock
or
mov
adc
inc
ja
mov
add
adc
push
and
cltd
dec
std
ffreep
and
repnz
or
add
push
call
and
xor
xor
nop
div
push
ja
xchg
add
out
pop
inc
cs
jb
xor
sub
cmpsl
push
ds
dec
aaa
sti
iret
fimull
in
int3
xor
xchg
push
mov
sub
hlt
test
ror
adc
dec
inc
out
fcomps
aas
int3
movsl
mov
sahf
xchg
push
repz
andl
inc
pop
call
repz
popf
addr16
fwait
push
pop
sbb
mov
xlat
mov
mov
mov
sub
out
ds
das
jle
jo
push
adc
sub
sbb
sbb
fwait
or
popa
stc
sbb
or
rorb
and
xchg
aam
xrelease
outsb
cmc
mov
ss
jo
lahf
push
add
insl
xchg
movsl
push
xlat
int
mov
sbb
repz
in
insl
mov
flds
push
sbbl
stos
or
xchg
sbb
push
or
dec
sub
or
add
cmpb
mov
fbld
add
inc
cmpb
test
clc
rclb
add
push
test
shl
lds
mov
dec
pop
pop
insl
jb
xor
fstpt
mov
outsb
inc
hlt
sbb
aas
out
jb
push
or
test
fwait
add
jmp
mov
jmp
push
test
call
add
pop
std
push
repz
lods
mov
out
or
add
int
push
inc
int3
pusha
xor
je
adc
popf
mov
lret
inc
mov
cld
xchg
pop
sbb
cmc
adc
imul
inc
mov
cmp
push
lcall
pop
lods
pop
orb
xor
mov
aas
lcall
sub
jp
int3
andb
popa
mov
adc
mov
sub
icebp
adc
out
cmp
inc
xchg
push
insb
cmp
scas
sub
out
mov
jecxz
xor
pusha
cmpsl
mov
mov
jno
in
jnp
scas
jecxz
and
imul
sbb
push
dec
add
iret
rorl
xchg
in
dec
mov
sti
imul
cmovnp
rorl
inc
jae
mov
xchg
bound
imul
push
inc
mov
jl
lods
cli
sbbl
jo
sbb
inc
adc
mov
xor
lret
cwtl
or
push
aaa
out
mov
push
push
jbe
jnp
dec
sbb
imul
push
loopne
in
cwtl
adc
and
lock
insb
cmp
into
inc
int3
leave
cmp
inc
out
cmpsl
pusha
or
rcll
push
test
imul
pop
fisttpl
ficomps
xor
mov
adc
fcomi
loop
inc
daa
mov
add
pop
add
lcall
jns
lahf
push
mov
sub
push
fsubl
cmp
jecxz
mov
lret
cld
cmpsl
lcall
push
push
fcmovbe
dec
sub
cltd
xchg
xchg
sub
es
dec
jnp
mov
sbb
lret
or
and
idivb
dec
mov
jp
imul
xchg
jb
jne
stos
jno
cltd
pop
es
movsb
push
bound
pop
movsb
inc
mov
adc
push
mov
in
fcmovnbe
xor
shrb
arpl
inc
sarb
test
daa
aam
mov
stos
js
push
lret
inc
sbb
xchg
or
out
aad
aas
or
mov
test
enter
inc
dec
add
jnp
push
in
imul
icebp
jge
dec
mov
ss
mov
sbb
test
outsb
inc
testl
push
jb
dec
jmp
xorb
aam
addr16
add
movl
sarl
loop
xlat
je
dec
jmp
cmpsb
into
ljmp
add
adc
and
addr16
add
mov
icebp
mov
push
adc
pusha
jmp
and
ljmp
aad
push
mov
mov
and
xchg
test
mov
push
dec
cmpsl
lds
ret
ja
push
cmp
push
dec
xor
dec
loop
inc
popf
sbb
push
sbb
pop
or
inc
jecxz
xchg
scas
xchg
xchg
ja
les
mov
mov
mov
shr
shrl
out
mov
enter
jno
stos
addr16
ffreep
je
les
fisttps
xor
jle
or
add
cmp
pop
aaa
pop
mov
in
add
xor
ljmp
mov
xchg
nop
das
lods
arpl
scas
cltd
jp
adc
addr16
outsl
fld
lahf
data16
add
xchg
add
addl
mov
dec
sahf
addr16
dec
dec
inc
aaa
ret
insb
and
pop
push
xor
pop
adc
cmp
out
jp,pt
push
mov
xchg
lods
cs
cmc
mov
inc
pop
xchg
fs
mov
out
xchg
aad
jb
sub
bound
stos
nop
and
push
fsubl
adc
jle
in
jl
add
add
das
jl
pop
push
xchg
cld
test
les
and
mov
push
jb
pop
mov
mov
cmp
pop
xchg
inc
lahf
or
inc
lahf
cmpsl
das
imulb
pop
fistl
mov
imul
mov
mov
repz
pop
sub
or
cmp
out
mov
dec
es
xchg
daa
mov
jl
les
pop
lret
jecxz
xor
or
loopne
mov
add
loopne
push
loop
cmp
or
ss
sbb
loop
pushf
and
mov
test
xorl
inc
mov
rep
cld
jb
push
jle
dec
aas
mov
not
mov
dec
or
push
mov
mov
ljmp
push
cmpsb
dec
jnp
xchg
pop
sarb
add
mov
cmp
add
and
fwait
test
add
jge
insl
icebp
push
jp
lret
ds
add
mov
inc
call
xor
lret
lock
jg
movsl
imul
xor
mov
mov
push
mov
push
into
outsl
sub
xlat
inc
lods
rorb
xchg
aam
cli
sti
jbe
pop
out
mov
xor
sub
pmuludq
or
cmp
in
leave
clc
push
rcl
push
mov
enter
adc
mov
cmp
sub
pop
add
or
xchg
and
mov
mov
insl
inc
dec
pop
sahf
sub
fnstenv
int
std
jge
shll
jno
adc
mov
sub
insb
dec
xor
add
mov
jge
pop
test
and
dec
mov
pop
dec
push
mov
dec
sbb
xor
es
inc
std
test
jbe
shll
shll
mov
xor
cli
add
call
mov
or
add
ljmp
push
je
cmp
test
loope
adc
inc
mov
lock
xor
xor
addb
xchg
mov
sub
scas
icebp
adc
push
jl
mov
push
push
pop
mov
jb
addr16
mov
ja
xor
jnp
push
xchg
mov
popf
cmp
or
xlat
push
dec
dec
repz
inc
mov
jle
idivb
or
pop
dec
add
jnp
hlt
sbb
or
sbb
pushf
ret
sti
sbb
push
insl
movsb
jae
out
pop
lea
xor
and
or
push
mov
or
or
cmp
sbb
and
inc
and
jb
ljmp
ljmp
lea
in
push
xor
pop
sbb
arpl
mov
iret
fwait
icebp
daa
dec
lret
hlt
rorl
xorb
mov
lods
out
mov
adc
xlat
pop
jp
push
adc
mov
xorl
pop
mov
xchg
dec
jle
test
mov
mov
call
mov
cltd
mov
pop
mov
or
pop
push
add
outsl
push
fiaddl
pop
aad
add
mov
pop
mov
cmp
dec
subb
add
mov
xchg
lock
out
adc
insl
mov
lcall
inc
test
repnz
mov
lret
mov
mov
xchg
cmp
arpl
ret
cli
cmp
mov
lock
lea
cwtl
xor
das
xchg
insl
pop
and
push
rcr
adc
xor
xor
fistl
cmc
add
pmullw
repnz
jns
das
sub
aad
jbe
adc
adc
into
dec
popa
sbb
out
inc
lret
inc
lcall
je
cmp
fs
es
xor
push
inc
test
mov
jg
inc
mov
iret
aam
push
cmp
icebp
test
push
movsb
pusha
inc
fcomp
jp
dec
pop
and
cmp
mov
pusha
sub
xchg
dec
in
inc
stos
inc
mov
adcl
pcmpgtw
lods
pop
add
test
fdivr
fwait
jl
or
lock
add
imul
jne
jae
in
lcall
lock
addl
gs
xlat
loopne
jmp
aad
popl
push
jne
add
jmp
cmp
inc
add
push
inc
outsl
pushf
sub
push
lahf
push
pop
pop
movl
inc
ja
icebp
mov
inc
xchg
pop
lods
sbb
and
loop
sbb
push
mov
rorl
jmp
mov
sar
push
fstps
notb
push
mov
jg
mov
out
mov
pop
sahf
sarl
mov
jno
mov
and
scas
aam
push
jp
and
in
pop
pushf
and
mov
shrb
xor
ret
orb
pop
xchg
and
insl
les
ficoml
sbb
movsl
cli
push
and
dec
cmpsl
jne
test
jg
lods
mov
cli
fwait
sahf
les
rclb
popl
jge,pn
ss
and
jno
and
mov
enter
addb
dec
jnp
int
and
lods
lret
sbb
cmp
lods
jmp
mov
mov
outsb
xor
and
call
pop
lahf
outsb
jne
ror
sarb
repz
push
mov
shlb
iret
fbstp
popf
int3
push
es
out
mov
fprem
cwtl
mov
int3
shll
ret
mov
movsl
xchg
popf
adc
mov
rcrl
cmpsb
lea
int
mov
inc
mov
jae
sahf
xor
jecxz
xchg
xor
stos
mov
cmpsb
lret
mov
cwtl
cmp
dec
add
and
dec
sbb
fsubrl
cs
jg
popa
mov
fwait
cmpsl
dec
sbb
push
loope
std
mov
pop
inc
cmc
in
aam
insl
sbb
dec
fs
sub
mov
and
cmp
scas
nop
or
mov
addr16
icebp
movsl
sbb
jns
sar
stc
outsl
in
and
add
jae
stc
inc
mov
mov
lret
add
push
int
lds
adc
daa
mov
mov
or
sub
iret
popf
jge
frstor
push
idiv
inc
push
fdivs
neg
mov
push
jae
pushf
ljmp
mov
jo
imul
popf
mov
sub
xchg
out
jae
testb
lret
stos
repnz
push
cld
jne
mov
jle
insl
lcall
xor
adc
mov
sbb
jbe
inc
shl
in
fsubp
and
inc
pop
into
fimuls
rcl
jae
lods
adc
mov
adc
cwtl
xchg
pop
adc
stc
mov
mov
out
call
adc
int3
add
pop
sub
int
dec
jmp
pop
das
repz
push
mov
int
enter
or
push
test
adc
cs
xchg
xor
aam
xchg
mov
es
out
or
push
mov
pop
sub
add
mov
mov
push
or
inc
sub
push
mov
pop
lcall
jge
sahf
jb
and
jg
mov
movsl
leave
dec
mov
xchg
inc
jge
push
repz
cmp
sbb
cli
add
outsl
and
loop
cli
pop
push
js
cmp
icebp
rcrb
stc
jge
inc
mov
inc
pop
or
fmuls
jge
push
lods
hlt
jl
inc
call
outsb
xchg
mov
ja
cmpb
insl
mov
repnz
or
out
cmp
insb
adc
mov
orb
sub
adc
bound
mov
or
mov
mov
daa
dec
xor
in
pusha
imul
cmp
rcrb
xchg
inc
cmpsl
or
cld
test
shl
push
xchg
push
sub
ffreep
test
shll
inc
xchg
mov
or
popf
jne
out
or
out
call
xchg
jnp
adcl
movsl
fnstsw
sbb
xor
in
sub
ret
or
add
sub
xchg
cmp
inc
out
xchg
rcr
dec
or
push
add
pusha
outsl
inc
mov
imul
insl
ficompl
and
xchg
xchg
jo
enter
jmp
jno
mov
xchg
pop
jns
sbb
and
cmp
push
outsl
cmp
aam
ja
shrb
inc
inc
scas
in
insl
or
and
push
je
or
or
movsb
adc
leave
cmpsb
sub
lret
sub
lds
scas
xorl
mov
inc
dec
add
push
divl
mulb
sub
cli
enter
pop
and
js
or
xlat
mov
aaa
shll
aam
mov
add
sarb
scas
rorb
xor
ret
inc
in
leave
ret
add
or
or
ret
sarb
imul
sbb
sub
sbb
mov
or
iret
inc
sbb
fimull
sbbl
js
or
fs
jmp
sbb
rorb
popf
gs
mov
mov
pushf
and
das
ljmp
bound
fstpl
dec
inc
out
les
xchg
push
sub
dec
in
cmp
xor
xor
and
sub
push
and
in
cmpsb
push
adc
lods
mov
dec
cs
arpl
int
push
mov
inc
lret
xor
xor
popa
in
adc
ffree
lahf
in
or
mov
push
sarl
stos
loope
mov
or
mov
xchg
out
es
mov
sub
sbb
nop
enter
xor
xchg
push
xchg
and
movsl
aad
repz
mov
int3
stos
data16
jbe
mov
es
iret
shlb
add
addb
sub
push
in
or
jnp
imul
or
fsubr
iret
jae
jmp
insl
leave
lsl
mov
pushl
jecxz
inc
jl
pop
leave
inc
pop
int3
ds
fs
insb
out
jg
add
mov
bound
cmp
xor
jb
pushf
adc
test
sub
scas
js
mov
inc
psubsb
or
das
dec
call
dec
scas
sbb
ds
mov
dec
in
jl
dec
add
mov
mov
or
xor
mov
lcall
outsl
or
inc
lcall
xor
xchg
mov
and
stc
imul
fwait
imul
cs
shll
lds
fwait
popa
test
push
cli
add
cli
jns
or
dec
xchg
adcl
int3
insl
lahf
fadd
filds
mov
jg
repnz
lods
push
push
jnp
inc
mov
stc
dec
clc
cmpsl
xor
scas
sbb
das
pop
fdivrp
movsl
inc
call
imul
push
add
cmp
jbe
mov
fxch
cwtl
xchg
pop
inc
data16
and
ret
inc
movsl
mov
sbb
stos
mov
test
test
adc
add
in
popa
aas
ja
and
in
mov
ljmp
pop
dec
jo
cmpsb
orl
test
hlt
push
stc
test
in
test
adc
repnz
aas
ret
divl
mov
xlat
mov
cmp
mov
daa
push
movsl
sbb
lock
out
jnp
rcrl
mov
or
inc
mov
inc
mov
mov
cmpsb
pop
adc
or
push
sbb
sbb
std
push
sub
xlat
pop
rolb
pop
add
xchg
adc
movsb
mov
add
pop
add
nop
xchg
orl
clc
dec
mov
cld
fsubr
xchg
ret
out
jecxz
xor
inc
dec
arpl
and
pop
cs
mov
lock
ret
fimuls
sbb
inc
or
pop
cmp
xchg
stos
or
in
negl
roll
sub
lret
adc
jno
sbb
int
mov
jae
push
dec
add
push
into
fcoml
dec
inc
dec
xor
data16
sub
cmpsl
or
dec
out
hlt
pop
mov
dec
test
jle
or
jle
or
xchg
leave
fnstsw
pop
lods
mov
xchg
loop
jg
inc
mov
loopne
jl
xor
xor
xchg
cld
push
sar
jnp
pop
mov
out
mov
test
shrl
cwtl
xor
fsubs
mov
fdivrs
aam
mov
rorl
mov
stos
dec
outsl
adc
inc
and
sbb
mov
aas
sarl
xchg
push
mov
in
sbb
push
jl
imul
lret
jae
inc
sub
subb
sbb
iret
nop
adc
icebp
add
lret
stc
lods
and
out
xchg
mov
xchg
ljmp
mov
pop
repnz
add
in
sahf
jmp
pushl
lcall
cmp
rcrb
xlat
inc
hlt
shlb
js
jmp
lret
jle
rcll
xor
pop
popa
pop
gs
xchg
mov
movsl
sbb
gs
insl
dec
push
dec
mov
mov
std
call
mov
cs
loopne
arpl
push
xor
frstor
js
mov
add
das
xchg
xlat
cmp
lea
out
shr
in
lods
fcompl
mov
enter
pop
sbb
sbb
sub
xlat
add
ficoms
sbb
and
push
sub
pop
mov
aaa
inc
inc
mov
pop
stos
add
test
cs
cmp
sbb
mov
shl
adc
outsl
nop
fidivs
xor
mov
adc
push
cmp
ss
add
stc
sahf
pusha
cltd
std
dec
fisubl
lds
add
aaa
jb
lret
xacquire
lret
mov
icebp
enter
mov
or
sub
mov
mov
lock
and
pop
aaa
and
pop
mov
sahf
push
dec
push
lcall
ficomps
push
dec
nop
adc
pop
pop
pop
orl
mov
adc
fsts
outsb
fcmove
lahf
aad
mov
out
lods
in
add
movsb
arpl
scas
mov
cmp
jns
scas
jne
popl
ret
lret
pop
and
jb
insl
adc
outsb
out
popf
mov
adcl
fildl
mov
pop
jo
ret
sbb
es
cmc
scas
xor
pop
inc
in
xor
pop
xor
fldt
mov
mov
mov
inc
mov
das
cltd
pop
push
add
mov
mov
push
inc
xor
and
adc
mov
add
ss
je
movsl
loope
adc
mulb
loop
add
mov
out
mov
movsl
push
push
jge
sub
xchg
icebp
and
inc
pushf
inc
mov
or
or
sub
xchg
popa
and
sbb
add
mov
xor
pop
sbb
out
test
xchg
arpl
int3
imul
shl
push
dec
adc
in
push
mov
mov
cmp
das
xchg
repnz
xor
shrl
pusha
sti
adc
popf
adc
mov
push
mov
mov
mov
movsb
dec
test
jae
dec
xor
mov
cmpsl
jns
adc
inc
xchg
and
pop
xchg
ljmp
lods
dec
test
dec
xchg
scas
add
xchg
mov
aad
iret
out
pop
in
outsl
int
test
fidivrl
mov
sub
ret
cmp
loopne
add
add
mov
addr16
push
add
dec
push
jp
mov
cld
push
lcall
aas
xchg
loopne
repnz
sbb
imul
mov
in
test
xchg
popa
aam
pop
push
sbb
out
sub
daa
dec
adc
fdivl
sbb
mov
repz
nop
or
pop
andb
adc
lods
push
lcall
icebp
testl
cli
int
sub
xor
xor
fstpl
pop
mov
fcompl
inc
mov
xchg
orl
rorb
dec
xor
roll
stos
inc
out
jbe
movsb
dec
in
rcrb
dec
lcall
and
fwait
xchg
test
push
cmp
or
jge
jb
ficompl
xchg
test
sub
fs
push
cmp
jle
addr16
adc
lret
imul
insl
outsl
pop
pop
mov
mov
adc
adc
leave
dec
imul
dec
pop
push
cmp
inc
popa
jp
fdivrs
outsl
dec
imul
adc
in
rclb
out
dec
subl
sbb
adc
sbb
push
sahf
jno
mov
adc
sti
or
outsb
jns
call
mov
pop
mov
push
cwtl
pop
out
testb
xor
sub
outsb
test
mov
mul
cmpsb
mov
stc
xor
out
sub
arpl
orb
data16
cmp
dec
jno
aad
pop
lret
or
scas
dec
adc
out
mov
lahf
scas
dec
std
pop
mov
decw
icebp
sub
imul
sbb
enter
das
dec
push
dec
jl
jns
scas
iret
jl
imul
inc
cmpsl
mov
add
aad
jle
or
xor
xor
int3
cmp
scas
add
sarl
ss
imul
xchg
adc
jge
pop
pop
sbb
cwtl
sub
stos
mov
cmp
sub
or
loope
in
adc
lock
cmp
mov
cs
sahf
lcall
mov
fucom
ds
push
scas
xor
sbb
insb
mov
insb
jmp
and
xchg
mov
dec
gs
hlt
insl
daa
mov
sub
jg
addr16
shrl
pop
sub
push
lea
das
cmp
sbb
push
aas
lahf
les
popa
add
xlat
lea
cmp
stos
loopne
mov
and
out
sbb
aad
ret
idiv
mov
push
sbb
mov
push
jp
push
cmp
and
mov
xor
psrld
mov
add
cmc
push
lahf
add
push
dec
push
mov
stos
addr16
pop
and
inc
mov
and
jno
xchg
mov
int
xor
push
adc
je
mov
add
or
pop
fdivr
neg
sub
mov
filds
mov
outsl
pop
add
in
popa
push
xchg
das
fcompl
sub
xlat
xchg
subb
data16
nop
pop
jg
xor
lds
xor
mov
jne
mov
nop
mov
push
inc
cmc
jp
movsw
or
add
test
sbb
or
inc
outsl
lret
cmpsl
mov
mov
ret
das
aad
rorb
jns
and
aas
ret
xchg
aad
or
popf
push
fcomps
xchg
add
out
push
nop
sarl
dec
jno
jge
push
lret
mov
and
clc
pop
ret
sub
aaa
xchg
xchg
sub
sub
mov
fimull
lahf
lock
popa
or
pop
aad
and
jmp
mov
into
lret
test
add
and
jb
or
stos
out
xchg
mov
dec
decl
sub
push
stos
filds
xchg
adc
lcall
jge
xchg
pop
jb
in
and
inc
pop
clc
xchg
rcll
xor
insl
jmp
push
cmpsb
insb
outsl
pop
stos
inc
out
hlt
addl
xchg
iret
loopne
pop
sub
fwait
int3
sub
in
lds
and
xlat
ljmp
mov
xchg
loopne
adc
sahf
bnd
add
xchg
repz
push
sahf
inc
xor
fistpll
add
repz
fnsetpm(287
stc
or
xchg
xchg
repz
sbb
add
mov
or
xor
cmp
rorl
or
pop
pop
and
jnp
xchg
mov
fadds
je
add
addr16
xor
sarb
test
pop
push
mov
pop
mov
mov
xchg
movsb
sti
outsl
push
dec
cwtl
fimuls
test
in
mov
pop
jmp
cli
lods
test
dec
inc
and
xchg
jp
add
dec
stos
dec
lods
sbb
insl
mov
xchg
xor
pushf
sub
mov
dec
test
fbld
dec
jge
push
mov
jp
flds
adc
inc
mov
mov
loopne
dec
sub
cmp
daa
sbb
xchg
daa
lock
xchg
cltd
xchg
fbld
xchg
test
in
inc
mov
adc
push
xchg
out
addr16
add
mov
pop
stos
aam
xor
push
icebp
test
jae
jecxz
out
in
mov
xchg
jmp
mov
inc
ja
stc
push
xchg
or
pop
jle
cli
popf
aaa
sahf
mov
add
out
neg
and
fwait
mov
outsb
jo
add
or
in
mov
sbb
enter
sub
or
movsb
mov
jge
movsb
mov
add
scas
ss
xorb
xlat
loope
sub
movsb
mov
dec
push
jnp
push
stos
jle
jmp
lea
sub
test
cltd
test
pop
sub
call
into
add
pop
xchg
mov
ljmp
insb
jg
cmp
push
xor
mov
sbb
push
outsl
daa
add
fbstp
icebp
lds
sub
bound
xchg
dec
inc
dec
imul
cmp
jae
dec
shl
lods
or
mov
adc
mov
cmpsb
and
pop
arpl
dec
pop
dec
and
dec
or
cmp
pop
xor
mov
inc
daa
inc
or
in
push
mov
xchg
test
jae
arpl
iret
mov
jne
xchg
jmp
xor
pop
pop
xchg
insb
imul
xor
cltd
or
mov
adc
pop
cmp
sti
mov
loop
jo
jmp
push
stos
outsl
xor
test
pusha
mov
inc
fisubrs
mov
data16
xchg
dec
js
stos
adc
dec
jns
mov
inc
cmpsl
or
fimuls
rorb
outsb
leave
stos
sahf
and
xlat
bound
mov
cwtl
push
test
adc
out
pop
stos
iret
xchg
cmp
dec
js
sti
add
out
pop
in
sbb
lret
pop
push
xchg
xor
and
loope
sub
call
pop
pop
sbb
test
mov
iret
xchg
stos
stos
sbb
loopne
mov
repz
xor
pop
pop
sbb
and
xchg
lea
mov
dec
sub
bound
ja
es
add
cli
pop
lock
andb
and
pushf
fisttpll
aad
aam
ja
mov
call
imul
jg
inc
movsb
es
stc
aas
adc
push
icebp
js
mov
iret
fmuls
sub
adc
aas
pop
cmp
in
xor
mov
push
adc
nop
inc
add
es
fwait
imul
push
cwtl
sarb
fsts
das
and
mov
jne
xor
mov
int3
or
les
push
pusha
push
xchg
movsb
and
lea
inc
das
fnstenv
repnz
test
cmp
lds
js
xchg
rolb
std
add
divl
jne
in
fistpll
jge
mov
sbb
ret
out
std
wbinvd
xchg
je
cld
pop
stc
inc
push
test
pop
fidivl
rcll
dec
xchg
shr
es
arpl
mov
out
add
jne
cmp
lods
fcoml
icebp
std
inc
jl
cmpb
push
hlt
ss
sbb
int3
flds
jne
sub
sti
cmpsb
clc
cmpsb
enter
push
pop
and
cli
lahf
mov
xor
add
call
stos
jp
and
sbb
test
jb
ret
add
pop
adc
movsl
mov
lret
imul
lock
dec
mov
data16
inc
jl
sub
mov
pop
push
sub
repnz
int3
arpl
sbb
lret
or
adc
imul
xchg
cltd
test
mov
sbb
jg
pushf
lds
push
cmpsw
daa
mov
jne
in
jmp
xchg
sti
pop
cltd
jns
out
fwait
int
mov
cmpsl
xlat
dec
xchg
dec
ljmp
scas
xor
in
mov
ficoml
incl
sub
sarl
mov
pop
pop
inc
jmp
push
sbbb
pop
out
lret
adc
jae
xor
adc
mov
imul
ret
test
movsl
imul
inc
jnp
adc
mov
stc
mov
pop
stc
pop
cmpsl
out
psrad
fs
jle
xor
mov
dec
in
nop
dec
jge
add
jnp
aad
push
inc
inc
sub
outsb
inc
mov
out
arpl
leave
push
aam
and
push
enter
nop
shrl
lcall
ret
lods
push
sbb
jns
and
outsl
fwait
add
mov
push
daa
mov
xor
cmpsl
sbb
mov
cmp
outsl
push
jge
inc
sbb
aas
push
cli
addr16
daa
and
insl
jmp
pop
rolb
sub
movsb
adc
jl
push
daa
mov
lds
cmc
loope
cld
pop
and
mov
or
fwait
inc
not
rcll
cmp
dec
pop
sub
cmp
dec
push
sub
pusha
nop
push
clc
mov
or
rorb
mov
into
add
xchg
es
push
cmp
pop
ret
lret
dec
mov
add
stc
mov
xchg
add
outsl
push
xor
fbstp
jnp
jg
sarl
xchg
mov
inc
or
outsb
mov
fs
dec
pusha
push
or
xlat
xchg
inc
mov
loope
clc
es
push
addb
adc
or
jmp
call
inc
inc
inc
jae
push
pop
sbb
mov
cli
dec
ljmp
fnstcw
mov
and
mov
adc
enter
mov
iret
mov
fdivrs
xchg
sub
cwtl
cmp
jb
add
cwtl
and
push
dec
mov
xchg
std
inc
or
pop
jp
xor
sbb
ljmp
lret
inc
cmpb
mov
int
imul
push
jb
pushf
push
mov
sbb
jae
pop
in
dec
stos
mov
ljmp
pop
stos
ljmp
mov
push
adc
xor
cmp
div
clc
imul
loope,pt
bound
cmc
pop
ret
dec
cld
sarl
push
push
sub
xor
dec
testb
or
cmp
test
sub
dec
pop
dec
cwtl
sbb
mov
inc
int
rcl
lahf
clc
test
cmpsl
fdiv
nop
pop
rorl
inc
xchg
mov
clc
sti
out
push
js
mov
int3
xchg
push
mov
sbb
push
iret
jnp
or
jbe
inc
loope
gs
int
mov
push
pop
idivb
hlt
adc
ss
cmp
xor
add
mov
nop
rcll
imul
sub
mov
mov
xchg
nop
inc
test
popf
aam
push
mov
out
xchg
add
fidivrs
outsl
repnz
rorl
push
cmpsl
sub
es
push
jnp
inc
or
int
push
inc
mov
cmpsl
or
push
stc
mov
cmc
xor
arpl
mov
sub
pop
loope
mov
clc
xchg
popa
push
imul
add
pop
outsb
dec
mov
hlt
stos
ss
iret
mov
fs
arpl
xor
sub
jno
cmp
jmp
adc
mov
sub
cld
aaa
rcrl
push
mov
inc
push
xchg
push
pop
lret
inc
mov
pop
and
pop
push
jbe
rcrl
sub
jne
and
push
pminsw
nop
sub
clc
mov
push
ljmp
addr16
pop
jbe
pop
sbb
pop
cmc
cmp
sub
inc
out
into
fwait
stc
push
popf
and
roll
jne
jbe
and
sbb
int
mov
stos
push
lock
inc
mov
cmpb
or
inc
bound
out
lcall
aam
inc
mov
adc
cli
or
ds
and
shr
xchg
aam
cs
pop
jg
cmp
cmp
pop
shlb
inc
cmp
imul
hlt
add
add
mov
in
lock
fdiv
xchg
xchg
iret
sub
rcl
cmp
int
aad
xor
cmc
cmp
mov
pop
scas
mov
leave
cmpsb
bound
aad
shll
add
es
lcall
popf
dec
or
push
mov
gs
hlt
inc
sbb
loop
bound
adc
dec
stos
lcall
jne
inc
pop
rolb
loope
pusha
push
sbb
jmp
movsb
in
mov
and
movsb
out
pop
fs
jne
aaa
fsubs
fcmovnb
adc
in
bound
sar
mov
pop
sti
pop
sub
mov
pop
mov
inc
cli
sub
lods
sbb
aad
sub
into
mov
rcll
popa
repnz
ljmp
dec
pop
jo
xor
mov
inc
test
adc
mov
pushf
mov
aad
daa
out
lds
inc
jns
in
nop
pop
loope
icebp
int3
cs
push
mov
sahf
push
ficoms
push
cmp
cmp
rcl
or
jae
fwait
insl
mov
lcall
mov
and
jmp
or
inc
sub
xchg
lock
push
test
fadd
in
popa
xchg
cmp
orl
or
cmpb
in
hlt
hlt
mov
in
adc
cs
aam
sbb
jae
jle
inc
fsubl
in
adc
xchg
push
jp
test
xchg
adc
cmp
lea
cmp
mov
inc
cmp
sub
cmp
ja
xchg
fildll
fsubl
and
xor
or
aam
jb
cmp
dec
stc
movsl
mov
dec
jp
cmpsl
mov
cmpsb
ljmp
and
push
cmpsl
insb
das
vaddss
lea
push
cwtl
jb
xchg
add
adc
push
shlb
pop
cmp
mov
adc
movsb
cli
jb
inc
adc
xchg
insb
ret
xchg
or
jge
push
sub
adc
jp
daa
mov
sarl
jo
or
inc
jb
test
mulb
push
cmp
pop
adc
aas
arpl
test
mov
add
push
adc
les
cmp
mov
arpl
scas
jg
jle
push
jae
lret
adc
or
les
cmpsw
sub
ss
mov
jle
pop
dec
aaa
in
aad
call
outsb
nop
test
addl
pop
sarl
bound
mov
mov
xchg
cli
cltd
enter
adc
cmp
mov
mov
cmp
dec
es
lds
scas
or
mov
insl
in
lea
cmpsl
inc
pop
or
mov
bound
test
hlt
pushf
cltd
xchg
add
pop
mov
les
xchg
cmp
sub
int
fmull
push
xor
pop
daa
jb
push
pop
xchg
pushf
sub
repnz
popa
inc
sbb
lret
stc
xor
dec
aaa
daa
fisttpll
push
xchg
je
into
xor
int
cwtl
ret
xor
out
push
ss
repz
inc
cmp
adc
test
aaa
mov
test
test
mov
outsl
jp
add
shlb
mov
insb
sub
imul
sub
les
or
lcall
lods
or
dec
les
push
jns
hlt
or
data16
mov
xor
xor
xor
sti
adc
mov
jge
and
jbe
fwait
and
rcrb
pusha
cli
adc
fwait
push
shl
pop
lahf
loope
or
test
inc
xor
test
push
lret
rolb
ja
sub
sti
and
sub
adc
ja
testl
daa
in
mov
shrl
sti
out
adc
xor
jl
test
mov
add
push
dec
fcompl
push
daa
or
std
push
jecxz
xchg
ja
jge
in
pop
cmpsb
or
loopne
sbb
cmpb
pop
arpl
in
les
and
aaa
push
bound
sub
inc
gs
icebp
pushf
mov
mov
rolb
fs
xchg
int
fldt
sahf
push
or
inc
movsl
icebp
enter
push
ret
scas
mov
xchg
sub
add
cmp
notl
in
popf
scas
or
inc
out
out
loopne
adc
outsl
jns
sbb
fld
shrl
jecxz
jnp
outsl
rolb
insb
pop
test
add
xchg
loopne
mov
lcall
icebp
sbb
mov
mov
in
mov
shrb
lock
scas
inc
or
xchg
int3
lret
push
enter
mov
push
xchg
sahf
push
out
insl
pushf
jo
bnd
dec
and
sbb
lret
dec
lret
adc
nop
rcrl
lods
subl
push
arpl
cmpsl
scas
enter
xor
notb
std
movsb
mov
xor
dec
inc
dec
dec
lods
js
aas
pushl
fwait
mov
imul
adc
adc
jns
rol
xchg
leave
dec
data16
mov
jmp
pop
fwait
cmpsb
sbb
pop
cmp
xchg
loope
xor
test
fisubs
aas
xlat
jnp
or
xchg
xchg
dec
pop
lret
xor
into
loop
cwtl
cmp
pop
add
insl
ds
xchg
test
imul
mov
dec
jb
mov
mov
mov
xchg
jnp
scas
aad
cmp
or
and
xor
jge
lods
push
cld
push
popf
in
mov
imul
mov
in
and
int
mov
and
enter
enter
fwait
dec
jg
inc
mov
div
mov
or
xchg
adc
arpl
mov
pop
push
iret
xchg
and
add
int3
inc
and
scas
dec
adc
cmp
fcomps
inc
pop
in
jbe
test
push
mov
loope
sbb
mov
mov
xchg
repz
popa
jns,pt
movsl
imul
pop
mov
sub
push
lock
cmpsl
push
add
lret
sbb
or
sbb
cmp
cmp
mov
xor
pop
fs
daa
sub
adc
subb
ja
out
push
rcrb
push
mov
movsl
adc
in
mov
iret
in
push
ret
in
in
popf
mov
aad
mov
and
pop
and
sbb
aas
cmp
fimull
pop
scas
or
mov
repz
cmp
sbbl
add
insb
xor
adcl
decl
stos
add
mov
data16
inc
sub
bound
inc
mov
cmpsl
fs
add
aaa
inc
cmp
les
jne
and
rcll
adc
sub
aaa
add
jmp
push
mov
jbe
pop
orl
enter
icebp
xchg
xchg
cmp
fiadds
mov
shr
outsl
and
and
test
adc
call
ret
xchg
sbb
inc
cmp
cmp
add
push
xor
adc
mov
fwait
or
clc
daa
lahf
cmp
cmp
dec
rclb
cmp
cmc
cmp
cmc
fsubs
popa
fdivl
xlat
sub
arpl
inc
inc
xchg
xchg
pop
orb
sahf
fcomp
outsb
mov
jecxz
out
or
in
insb
mov
xchg
out
cmp
leave
stc
xlat
in
sbb
test
out
jl
notb
mov
mov
pop
or
stos
lret
mov
insb
std
aam
js
int3
adc
clc
mov
mov
lahf
mov
cmpsl
ljmp
outsb
lock
sub
popa
inc
jp
dec
cs
fnstcw
scas
push
pop
mov
fdivl
outsb
hlt
add
mov
lcall
cmp
popf
stos
adc
cmpb
inc
lods
push
scas
xchg
sbbl
mov
pop
notb
loop
imul
fisttps
daa
add
test
pop
and
jmp
stos
pop
cltd
and
loope
pop
mov
sahf
test
xchg
leave
notb
sub
into
int
jns
mov
or
je
dec
adc
das
pop
daa
mov
lods
enter
or
sbbl
pop
popa
es
stos
lahf
popf
jbe
insb
jae
popa
and
lcall
movsl
cld
mov
and
and
cmp
outsb
icebp
xor
das
add
xor
inc
leave
ljmp
aam
lods
cs
imul
mov
inc
pop
mov
sbb
push
scas
or
loope
sub
and
ljmp
dec
mov
mov
push
cmp
lea
ljmp
ljmp
mov
jle
movsl
das
inc
scas
xchg
push
lock
push
mov
mov
lcall
insl
aas
jmp
mov
out
imul
xlat
rcll
mov
shrl
cmp
push
pushf
popa
outsl
inc
std
lret
inc
mov
sbb
or
inc
imul
add
xchg
shrb
loop
jmp
rcll
adc
cmp
shlb
fwait
inc
sbb
lock
mov
addr16
outsl
adcl
jnp
xchg
fistps
and
xlat
inc
incl
jbe
popa
xchg
ljmp
inc
int3
mov
xor
ds
and
sub
lods
sub
mov
lcall
sub
or
das
xchg
mov
add
xchg
adc
sub
xchg
call
add
mov
notl
xchg
xchg
test
push
push
test
cmp
push
jae
jbe
ds
mov
cld
sub
outsl
dec
outsb
fmul
mov
arpl
jmp
fs
ret
mov
push
xorb
xchg
dec
dec
sub
aad
orl
adc
bound
fdivrs
subb
cld
jne
cld
sub
jle
mov
stc
pop
mov
dec
pop
and
gs
xor
mov
ljmp
enter
addr16
enter
ss
inc
push
pop
leave
push
inc
push
adcl
in
lret
cwtl
sar
lea
daa
inc
in
jl
lds
xchg
jbe
loop
iret
mov
repnz
pop
inc
imul
loopne
lret
in
stos
add
cmpsl
sub
imul
nop
pop
pop
mov
or
adc
fwait
out
inc
and
movsl
dec
jmp
mov
push
mov
je
idivb
repz
or
adc
mov
sub
pop
dec
inc
mov
sbbl
mov
and
dec
mov
adc
mov
xor
jl
pop
dec
jg
inc
jg
jecxz
fdivs
mov
loop
popa
subb
sub
sbb
sub
stc
lock
nop
mov
push
push
cli
sub
filds
mov
pop
xchg
enter
mov
and
jne
sub
fsts
add
mov
push
lods
imul
cmp
dec
jecxz
xchg
int3
and
fistl
fidivs
mov
mov
out
jg
dec
mov
jne
arpl
push
add
push
outsl
inc
jmp
inc
mov
pushf
in
pop
movsb
dec
daa
mov
push
in
jmp
adc
pop
pushf
inc
push
lahf
scas
mov
push
dec
stos
push
into
das
xchg
jo
push
pop
ret
ret
pop
jp
sbb
sbb
pusha
mull
cmp
pop
pop
dec
les
sub
mov
lret
xor
sarb
jo
cmp
int3
mov
dec
mov
aam
sbb
arpl
lahf
cmc
frstor
fdiv
divb
outsb
scas
shl
popf
pop
xor
jle
aaa
jmp
mov
enter
mov
clc
aam
push
aad
jecxz
and
inc
out
push
xchg
mov
insb
ret
mov
sbb
js
ret
inc
mov
cmc
roll
pop
pop
mov
push
mov
ret
pop
loope
push
xchg
jne
fsubs
sti
insb
shl
jbe
adc
rorb
mov
cmp
xor
dec
aam
or
mov
shlb
stos
cmpsb
subl
js
addl
cmpsb
push
pop
xor
pusha
lds
hlt
sbb
imul
imul
movsl
lahf
ljmp
outsb
mov
adc
flds
sbb
push
lahf
cmp
and
add
cmp
mov
pop
mov
add
push
jb
test
fnstenv
imul
ja
cwtl
sbb
jmp
xor
stos
push
mov
hlt
je
mov
sarb
cmp
adc
loop
xchg
dec
pop
mov
and
adc
push
add
jecxz
jecxz
bound
jbe
and
mov
jmp
icebp
adc
outsl
sbb
repz
inc
mov
gs
leave
adc
pop
stc
shlb
scas
sbb
add
push
mov
xchg
repz
ja
sub
fstpl
mov
enter
jne
jne
and
xor
in
sbb
sahf
ret
jns
dec
mov
add
lret
enter
xchg
aam
jge
ret
add
inc
test
out
cmp
movsb
inc
lods
cltd
sbb
sub
sub
pop
pop
fnstenv
jp
and
nop
inc
das
rorl
cmp
int3
aaa
and
outsl
inc
shr
xchg
imul
push
xchg
xchg
xor
mov
cmp
push
jbe
jecxz,pn
imul
js
xchg
adcl
int
mov
jo
push
or
pop
mov
xchg
jns
sub
jmp
in
xor
stos
fidivs
call
fsub
pop
aaa
jl
jmp
pop
push
cmp
jb
mov
in
pop
sbb
cmp
mov
or
movsb
mov
lea
adc
adc
xchg
xchg
mov
rcr
xchg
cmpsl
mov
sub
xlat
mov
std
sahf
add
sub
testb
or
push
pop
jp
int
loop
cmp
dec
dec
dec
push
std
xchg
jnp
jge
cmp
lcall
pop
mov
adc
lock
fsubl
cmp
inc
mov
cmp
cwtl
ffree
das
sbb
and
jecxz
pushf
fwait
cmp
sub
push
pop
les
mov
sbb
cld
jecxz
popf
mov
mov
out
pop
push
jmp
ret
pusha
jge
ja
add
aaa
jg
sub
jecxz
sar
icebp
xchg
mov
jne
xchg
sub
xor
mov
sti
imul
je
cvtpi2ps
pop
in
out
movsl
cmpsb
or
in
add
add
sti
mov
insl
inc
inc
call
mov
mov
movsl
add
inc
in
mov
leave
sbb
iret
sbb
loope
mov
sbb
pop
and
inc
add
sbb
in
dec
sub
sbb
xchg
daa
sbb
add
xchg
cmpsl
push
mov
pop
dec
or
dec
js
mov
cli
sbb
sbb
pushf
push
popa
pop
cmpb
add
mov
add
fstps
push
pop
fabs
andl
cmpsb
sub
push
mov
cmp
adc
cmpl
movsb
insl
xchg
add
fwait
pop
add
add
mul
mov
or
loope
into
vmread
xchg
mov
mov
cmp
rorb
adc
and
les
daa
sub
pusha
mov
mov
add
int
cmp
inc
push
xor
sub
cwtl
dec
xchg
test
sub
add
cmp
adc
rorb
cmp
jecxz
jg
fistpl
cmpsb
jne
xchg
add
andnps
insb
fisttpl
lods
and
add
leave
mov
xchg
dec
xchg
icebp
fadds
daa
inc
pop
les
addb
loop
movsb
pmulhw
adc
test
jle
gs
les
and
cmc
out
push
aam
pop
mov
mov
bound
mov
pop
bnd
js
pop
repnz
cld
in
mov
xor
in
repz
nop
push
mov
imul
dec
push
mov
or
fsubrs
std
push
fcompl
inc
jle
jp
inc
movsl
mov
iret
movsl
mov
xor
jge
out
xchg
or
data16
ds
and
test
sti
orb
divb
adc
and
es
sahf
and
fwait
dec
xchg
inc
shr
jno
pop
and
dec
xchg
int3
jge
cli
mov
cmpsb
sub
daa
cmpsb
or
push
jns
ret
fldenv
rcll
cmp
in
test
add
push
gs
mov
jo
push
or
les
push
jmp
ljmp
push
ja
sbb
shlb
adc
negb
adc
jnp
aas
sbb
mov
xchg
xor
xchg
mov
clc
icebp
je
push
dec
mov
scas
loopne
jnp
mov
aas
push
addr16
arpl
bound
rcl
js
pop
cwtl
or
je
lret
jne
movsb
stc
xchg
lds
lea
push
and
xchg
mov
fsubrs
mov
or
loopne
in
mov
add
mov
jns
mov
and
inc
sub
data16
sbb
jno
or
aam
imul
add
lock
lods
pop
add
jmp
andl
out
mov
ss
adc
jl
mov
aas
les
sbb
cmpb
mov
jp
mov
movsl
ja
or
data16
mov
jbe
inc
scas
cmpsb
sub
fcoml
pushl
imul
repnz
in
sub
daa
out
pop
mov
cmc
or
jae
pmullw
ret
push
imulb
cmp
repnz
dec
push
les
inc
mov
outsl
sarl
rcrl
or
std
and
aam
lahf
test
xchg
iret
insl
mov
inc
fistpl
mov
pop
lods
aad
lcall
cmc
xorl
sahf
nop
sbb
out
arpl
xchg
test
pop
ljmp
pop
or
call
cmpsb
mov
xor
fcmove
mov
sbb
push
test
or
mov
mov
mov
jno
or
xor
and
dec
call
pushf
mov
fnstsw
mov
inc
test
adc
mov
add
fwait
lea
shlb
dec
btr
shl
dec
std
and
mov
fbld
and
fisttpll
jecxz
popl
in
jecxz
adc
gs
ficoms
movsl
std
in
jo
aad
cmp
pushf
xor
fwait
push
mov
negb
jecxz
into
movsb
mov
xchg
js
dec
scas
mov
xchg
cltd
lock
in
enter
jmp
nop
or
ret
mov
call
inc
pop
stos
mov
push
xchg
or
push
or
shrl
fstps
sub
cmp
jle
jns
jmp
adc
test
add
pop
push
ja
jp
jne
test
pop
jo
pop
subb
pushf
mov
fmul
xchg
movl
fwait
inc
roll
test
push
or
ret
jo
pop
push
xor
push
and
mov
clc
pop
cld
shr
jne
and
jmp
mov
das
adc
cli
push
daa
leave
in
xchg
movl
pop
lcall
jle
mov
push
add
hlt
or
fsubrs
mov
pop
pop
outsb
jl
out
mov
jl
mov
jmp
and
ja
aad
or
les
inc
push
ret
cli
sahf
rdmsr
mov
jge
push
out
push
das
out
fwait
pop
fs
pop
pop
mov
in
xor
inc
or
xorl
or
jnp
stc
sub
and
ret
lea
sub
out
or
pop
sbb
adc
cmpsl
xchg
jp
aam
icebp
and
adc
neg
inc
in
jne
jne
push
adc
in
add
xchg
sbb
add
aam
xchg
jp
fldt
clc
mov
lock
test
pop
aam
push
mov
jb
xchg
sbb
cmpb
fadds
push
mov
in
xchg
cmp
test
xchg
pushf
cmpsl
xchg
outsb
inc
cmc
das
xor
les
and
add
dec
or
jno
mov
sti
push
push
dec
xor
or
push
into
or
loop
pop
inc
dec
inc
rcll
adc
push
ror
insb
scas
mov
ret
pushf
fwait
leave
inc
ds
dec
sub
jp
aas
ja
pushf
fisttps
push
sbb
pushf
fnstenv
push
xchg
test
ja
testb
push
jmp
cmp
imul
xor
aaa
out
setns
xchg
push
mov
xchg
aad
jle
jns
mov
call
sub
incl
sar
je
mov
mov
add
jae
clc
fmulp
add
lods
ret
cmp
outsl
in
inc
fcompl
push
icebp
mov
push
stos
mov
pushw
jo
fs
sub
jecxz
lcall
aam
lcall
push
aam
mov
cwtl
mov
push
fmuls
ss
test
stos
cmp
pop
shufps
in
test
jge
jbe
iret
cmpsl
jno
xchg
cmp
xor
and
nop
or
lods
insl
cmp
add
clc
movsb
sbb
fcmovbe
mov
mov
cmp
loopne
cmpsl
rcrb
shrl
nop
pop
push
mov
fwait
jp
fidivs
test
mov
arpl
mov
loop
adc
ret
rorb
mov
imul
push
dec
push
inc
in
inc
jnp
clc
xor
push
outsb
rorl
enter
add
nop
fldcw
and
fildll
jp
xchg
adc
push
jnp
scas
mov
xlat
inc
out
jge
pop
xor
xor
fwait
lds
mov
das
sub
jae
xor
out
out
dec
repnz
cmp
lea
jle
push
daa
dec
sub
jmp
dec
inc
sbb
jbe
mov
call
mov
outsl
xchg
in
mov
push
inc
adc
fistps
pop
mov
dec
int3
dec
xlat
cmp
iret
and
stos
jns
mov
adcl
adc
aas
pop
xchg
mov
adc
les
xor
xchg
pop
pop
mov
mov
add
jmp
pop
xchg
aad
popf
or
push
pushf
adc
cltd
mov
and
sbb
jecxz
inc
scas
inc
test
fadds
in
es
pushf
je
loope
inc
in
out
and
push
lods
popa
aas
fisttps
sbb
ds
rsqrtps
pop
xchg
mov
xchg
mov
imul
stos
cmp
rcll
aaa
lods
lea
and
arpl
aam
mul
push
xor
mov
test
je
inc
mov
xor
addr16
aas
mov
push
sub
cs
pop
cmp
insl
pop
cmp
xor
out
fstps
lods
roll
add
jno
push
push
cmp
mov
ss
adc
ljmp
push
je
ss
outsl
sbb
daa
loop
cmc
xor
rorb
out
push
fildll
bound
lods
decb
adc
loopne
xchg
and
jbe
arpl
or
xor
sub
adc
imul
cltd
xlat
and
call
ror
push
loope
or
push
jne
mov
sbb
jo
mov
xor
push
or
cli
pop
sti
sbb
mov
dec
mov
cmp
jno
mov
push
sbb
or
popa
decl
or
sub
jmp
mov
repz
orl
xchg
or
or
pop
outsb
mov
fisttps
fists
xchg
mov
cmp
xchg
lret
push
mov
es
xchg
sbb
in
js
out
and
inc
mov
fs
lea
and
mov
or
frstor
clc
push
xor
mov
push
xor
add
stos
and
sub
pop
mov
divb
xor
cld
bound
xchg
popf
pop
adc
push
jo
fcoms
pop
or
aad
pop
or
mov
and
xchg
test
aad
imul
inc
cmp
pop
adc
ss
fs
cs
addl
pusha
push
add
adc
in
mov
mov
pop
inc
jmp
xor
rcrl
jmp
mov
lods
movsb
iret
mov
xchg
insl
sbb
loop
sbb
rorl
jle
mov
int3
xchg
sub
pop
loop
ret
call
pop
fwait
inc
mov
lods
jb
into
push
pop
pop
aam
mov
stos
or
push
mov
or
mul
mov
fwait
jecxz
mov
hlt
cmp
inc
icebp
das
dec
js
xchg
pop
push
sub
cmp
adc
shlb
sub
test
inc
mov
lock
cmp
ljmp
mov
xchg
test
cs
xor
mov
jmp
into
sub
and
adc
push
push
pop
hlt
jns
sbb
inc
dec
loope
pop
xor
push
mov
add
lock
test
inc
or
movsb
dec
or
push
add
xor
xor
xor
pop
add
jmp
xor
xchg
int3
cs
and
mov
xchg
sub
add
lret
xor
and
jnp
aas
cmp
and
mov
mov
lret
jne
mov
mov
fsubr
das
fnsave
and
dec
ja
mov
stc
jecxz
add
add
add
jae
mov
mov
fdivrs
cmc
xchg
inc
idivl
insb
and
pop
mov
fidivrs
xchg
mov
jge
enter
sub
cmp
pop
ljmp
inc
push
add
addl
in
aam
and
adc
repz
mov
jae
cmpsb
bnd
mov
movsl
ss
jmp
repnz
xlat
loop
jmp
mov
std
cmp
mov
mov
add
jg
mov
dec
icebp
mov
xchg
add
repz
mov
push
rclb
test
les
dec
icebp
dec
jae
out
rcrl
divl
jge
inc
out
xor
xlat
popf
mov
fistpl
mov
xlat
icebp
or
jl
mov
sbb
lcall
jnp
fcompl
repz
sbb
jl
push
mov
in
push
xchg
inc
xchg
pop
add
add
and
jmp
push
addb
and
in
aas
imul
outsl
in
mov
jmp
push
call
scas
and
add
mov
fwait
outsl
or
pop
push
push
imul
mov
and
repnz
push
and
jbe
bound
loop
mov
sbb
incl
sub
inc
pusha
add
xor
out
jno
lahf
push
hlt
pop
lea
xchg
movsl
mov
inc
or
hlt
or
sbb
filds
or
cmc
imul
fldenv
adc
out
fdivr
ds
cmp
inc
xchg
in
je
mov
push
inc
jle
cli
or
pop
cltd
adc
loop
lret
pop
sub
addr16
lret
lret
mov
pop
mov
out
andl
test
xchg
cmpsb
or
jb
repnz
aad
mov
call
xchg
sbb
and
adc
add
xor
jmp
rclw
cmp
pop
aaa
pop
lods
out
jmp
hlt
pop
cld
xchg
ds
push
mov
faddl
jmp
mov
ret
push
push
aaa
repnz
push
cmp
add
imul
sub
mov
test
mov
out
fisttps
push
push
mov
add
xchg
ret
mov
pop
mov
add
xor
iret
iret
daa
fnstenv
push
ficompl
test
xchg
inc
rclb
push
mov
daa
lahf
daa
clc
arpl
jnp
jle
bound
push
andl
push
das
mov
insl
lret
in
and
pop
arpl
jnp
cwtl
push
xchg
push
sbb
or
jle
or
fs
in
sub
dec
push
jns
sub
and
insb
mov
jb
inc
aam
hlt
jb
mov
or
stos
rorl
seta
aas
scas
push
pop
shl
fsubrs
xchg
or
pop
stos
ss
sub
xchg
out
sbb
jl
or
and
cld
addl
out
icebp
movsb
sbb
mov
mov
faddl
jo
xor
imull
xor
or
xchg
fcompl
jno
jb
adc
popa
in
sbb
mov
cmpsl
mov
pop
push
push
fiaddl
dec
loope
adc
fsubrs
mov
pusha
call
lds
inc
mov
adc
popa
cmp
xchg
jb
add
pop
mov
sbb
aaa
test
int
mov
pop
mov
std
jle
lea
adc
lret
xchg
sbb
sti
popa
hlt
jae
std
mov
jo
mov
daa
lahf
cmp
xchg
mov
je
int3
xor
movsb
or
push
pushf
cld
cmc
pop
int
ret
lcall
mov
ret
and
jo
jne
jecxz
out
sub
pop
ljmp
cmpsb
je
int3
sub
lcall
mov
lahf
cli
fisttps
ja
sahf
mov
aam
and
sub
cmpsb
cmc
add
cld
push
test
mov
xchg
loopne
cmp
xchg
cmc
push
push
mov
inc
subl
push
xchg
scas
and
stc
das
add
je
aaa
loope
scas
popa
outsb
dec
push
mov
add
sbb
fstl
or
clc
push
jno
or
xchg
daa
jb
mov
jne
andb
out
or
adc
ret
insb
adc
inc
jae
xlat
scas
cmpsb
ficompl
jo
jns
cltd
sub
pop
ja
fcomps
das
sbb
jnp
repnz
aaa
adc
mov
idivl
or
cli
inc
pop
inc
imul
adc
push
mov
pop
mov
incl
movsl
into
cmpsb
sbb
dec
dec
sub
jle
pop
mov
inc
mov
inc
push
stos
fs
xchg
mov
cli
outsb
fmul
inc
inc
jo
in
push
aad
mov
mov
sbb
cmc
mull
dec
mov
mov
pop
and
push
int
insl
or
push
test
clc
sarb
jle
and
lahf
xor
dec
cmp
stos
push
jne
add
or
sbb
jge
xchg
inc
enter
scas
push
repnz
int3
lea
movsl
cmp
lock
dec
jmp
mov
or
repnz
xlat
xchg
xor
dec
pop
lcall
adc
in
orl
stos
popa
shl
repz
int3
add
add
and
in
repz
adc
inc
leave
scas
mov
std
push
cmp
mov
sahf
popf
push
es
testb
into
xchg
and
pop
stos
cmp
sbb
jns
stos
jns
stos
pop
ret
lea
inc
movsb
lds
mov
lret
push
push
mov
xor
xchg
cmpsl
push
mov
sbb
lods
mov
test
and
scas
outsb
or
jo
pop
push
dec
test
xchg
xor
push
insl
mov
rorl
bound
ror
dec
in
mov
out
ret
cmp
subl
mov
push
mov
pop
lea
stos
popf
push
add
pusha
or
into
jae
or
rep
sbb
stos
lahf
pop
mov
mov
add
nop
aaa
and
sti
mov
xor
mov
lret
xchg
loope
int
mov
mov
mov
inc
les
jns
and
jne
cwtl
xor
mov
cmpl
call
and
add
add
xor
fsubr
enter
pushf
repnz
fimull
stos
add
aad
xchg
xor
adc
out
mov
adc
cmp
imul
cli
sub
dec
scas
sub
mov
dec
clc
pop
hlt
lds
pop
pop
ss
adc
and
xchg
aam
out
add
mov
dec
adc
cmp
xchg
xchg
bound
decl
pop
out
stos
jnp
sub
das
sub
fidivs
and
inc
enter
rol
add
xor
jns
jae
les
call
in
sbb
movsl
mov
cltd
xchg
push
jo
fwait
inc
int
popf
or
loopne
out
popa
add
aas
in
pop
fsubs
jae
add
dec
push
mov
mov
mov
cs
or
repnz
or
leave
out
lret
dec
pop
icebp
stos
push
jne
dec
ret
ret
js
movl
loopne
insb
enter
lods
outsb
jge
aaa
cltd
mov
lock
push
and
cmpsb
sub
and
into
push
js
es
or
out
dec
js
lods
popf
jne
add
lret
sahf
loop
scas
jb
into
nop
and
rcr
xchg
imul
outsl
push
shlb
enter
pushf
xchg
lds
add
xchg
out
jnp
xor
dec
pop
cld
and
inc
xor
or
sub
mov
push
dec
push
les
lds
in
add
pop
jns
mov
aaa
fstpl
push
in
shld
xchg
packssdw
sub
jl
ljmp
sahf
aas
outsb
test
in
fistpll
or
push
jno
sub
mov
scas
mov
leave
sub
cmc
pop
push
outsl
or
je
lds
lret
cs
sub
lahf
mov
push
in
ja
gs
xor
mov
dec
pop
push
add
pop
cmp
test
iret
fcmovb
cmpb
xor
sub
hlt
mov
inc
rcll
aam
in
and
add
push
in
unpckhps
stos
inc
cmpsb
mulb
xor
lcall
loope
push
sub
in
scas
mov
hlt
and
cmp
lahf
jbe
hlt
cmp
inc
mov
adc
sub
orb
cmpsl
jo
sbb
mov
mov
mov
xchg
outsb
pop
out
push
push
outsb
jno
xchg
xchg
push
aaa
aad
mov
jae
cmp
xchg
cli
out
mov
push
sub
push
jp
in
push
inc
cld
loopne
adc
mov
push
jl
ret
or
jle
loopne
xchg
xchg
fiadds
fnop
ss
pop
xchg
ss
fcomi
mov
inc
loopne
xor
add
mov
shlb
cli
jle
inc
push
add
and
iret
jp
jmp
mov
cmp
ss
pop
insl
stos
push
xchg
scas
ja
inc
frstor
and
enter
adc
cwtl
inc
test
add
inc
mov
xchg
or
mov
test
dec
and
fstl
and
pop
sub
xlat
loopne
or
cmpsl
pop
mov
les
in
push
andb
sarb
icebp
mov
push
call
xor
fidivl
out
push
adc
sbb
lds
mov
pusha
dec
jle
adc
sbb
cmp
pop
push
mov
sub
fisttpl
pop
mov
clc
out
aam
mov
adc
xchg
push
mov
movd
data16
jb
repz
jle
shl
jne
rclb
stos
sbb
orb
mov
jnp
mov
push
in
daa
lods
pop
mov
mov
cmpl
stos
cmp
push
repnz
sub
push
notb
int3
ja
aas
enter
movsb
sub
stos
sub
jae
cmpsb
lock
cld
xchg
fdivr
or
jl
dec
out
push
fdivrl
adc
jecxz
clc
insl
data16
mov
cs
pushf
std
mov
imul
mov
in
mov
daa
xchg
nop
popf
and
sub
test
insb
jns
andl
in
jno
jbe
clc
jmp
sti
les
sti
mov
sarl
dec
dec
cli
dec
push
fisubrs
not
mov
flds
sub
cmp
xchg
orl
mov
xchg
cmp
or
xchg
or
and
mov
aas
dec
lcall
shlb
std
pop
cmpb
inc
xor
xor
das
test
int3
aad
fs
in
pusha
xchg
aas
xor
cwtl
mov
xchg
bound
stc
mov
jno
lock
and
insl
ret
int
mov
pop
push
adc
dec
stos
and
inc
cmp
insb
cmp
mov
dec
fwait
and
gs
pop
daa
pop
movsl
jl
shlb
aad
hlt
loopne
aad
mov
popl
fcmove
hlt
lods
in
sub
xchg
xchg
jno
push
jl
aaa
outsb
jmp
in
xchg
push
cmp
pop
adcl
iret
ds
ret
xor
lds
data16
stos
fs
movsl
sub
inc
jnp
dec
repz
clc
int3
stos
outsb
push
cltd
les
lods
sarb
lret
repnz
fld
add
jle
loope
inc
mov
lcall
mov
and
xchg
ret
ficoml
xor
dec
arpl
test
aaa
jno
in
and
push
cmpsb
stos
xor
insb
sbb
das
and
ret
xor
or
shlb
xor
pop
jmp
sahf
push
ja
add
xchg
insl
jecxz
idivb
pop
mov
dec
pop
xchg
ss
or
in
imul
sbb
shlb
xchg
inc
daa
loopne
jl
sub
nop
push
stc
push
in
mov
mov
mov
dec
push
pop
test
or
mov
and
mov
push
hlt
pusha
cmpsb
jmp
cli
addr16
mov
dec
ret
fisubl
add
mulb
loop
shlb
inc
dec
jo
test
dec
andb
adc
add
icebp
mov
loopne
cmp
dec
xor
rcr
ret
sbb
cld
sbb
shll
add
adc
cmp
in
arpl
aas
mov
loop
xlat
adc
push
cmp
push
dec
jp
hlt
push
mov
push
xor
xchg
inc
pop
in
inc
pop
jle
lds
and
sahf
lret
aad
lea
movsl
mov
lea
je
mov
push
and
call
pop
fs
out
rorb
mov
sub
fwait
push
dec
xchg
mov
inc
dec
sub
leave
xor
xor
imul
fmull
repz
test
out
jno
sbbl
push
jle
and
mov
mov
add
gs
movsl
fxam
les
orl
fstps
sar
stos
push
pop
dec
nop
push
icebp
mov
aas
frstor
imul
xchg
int
mov
sbb
shll
cltd
mov
out
mov
lret
mov
or
inc
jnp
ret
inc
jmp
hlt
enter
mov
or
pusha
insb
jmp
loope
js
mov
push
sub
and
mov
ja
push
fwait
jl
xchg
jge
cmc
pop
lret
int3
jo
xor
adcl
cs
mov
popf
out
imul
jmp
add
cmp
pop
addb
push
aam
sub
sarl
lret
push
inc
movsb
sbb
jo
sbb
ret
shll
daa
mov
pop
xchg
fildll
mov
inc
call
lds
jmp
int
xchg
imul
sub
inc
stc
xor
mov
xlat
dec
adc
cwtl
jl
and
xchg
jge
sub
jg
mov
cltd
test
sub
movl
pop
stos
stc
shr
mov
roll
sbb
jl
mov
xor
push
add
lock
pusha
cmp
jl
lahf
xchg
mov
inc
in
sbb
or
jle
adc
popa
ret
test
ja
mov
test
das
bound
mov
add
jae
add
ret
jae
push
ret
sahf
add
adc
je
inc
mov
push
imul
inc
dec
mov
pushf
stos
mov
jecxz
das
je
cmpsl
cmc
and
xchg
push
xor
fwait
adcl
and
imul
pop
add
outsb
gs
cmp
iret
pop
pop
add
mov
je
sbb
and
jnp
mov
push
push
movsl
pop
es
es
dec
cli
sub
fs
jp
clc
icebp
pop
xor
sub
jnp
pop
lahf
pop
outsl
sub
stc
incl
sbb
xor
nop
popf
mov
idiv
aad
jne
add
xchg
cmp
imul
sub
imul
jmp
mov
jge
fiaddl
mov
jae
cmpsb
incl
pop
test
mov
xchg
xchg
lods
cmc
pop
inc
adc
lret
stos
mov
cmp
fwait
icebp
cmp
push
mov
cli
imul
lea
fs
fcos
cmpsl
jl
xor
jl
lods
sti
pop
sbb
xchg
lahf
sub
xor
shlb
mov
adc
addb
cmpb
andb
leave
outsb
lds
xchg
mov
mov
xchg
insl
std
push
out
aad
enter
in
xorl
nop
in
inc
dec
rcrl
call
dec
or
lahf
push
adc
cmpsb
lods
cmp
xlat
mov
sbb
sbb
xchg
pop
push
fnstcw
cmpl
in
push
mov
popa
cltd
in
and
iret
mov
repz
icebp
rcrb
shrb
repnz
inc
inc
inc
fldl2t
fs
rorl
mov
cmpsb
test
lret
mov
lock
xchg
and
jecxz
xchg
test
test
jns
ds
imul
jno
mov
loopne
out
inc
xor
adc
int
add
stc
adc
fmull
xor
mov
pop
mov
ret
lret
outsl
fwait
push
cmp
adc
rcr
jmp
loopne
xor
insl
insl
jno
or
in
adc
je
int
test
in
dec
ret
ja
cli
adc
std
mov
xor
cwtl
bound
and
adc
jmp
stos
sub
push
mov
and
enter
subb
cmp
cld
push
and
fucomp
stos
push
faddl
adc
cld
stos
inc
push
mov
mov
sbb
fnstsw
pop
inc
jo
lahf
xlat
xorl
inc
xor
fs
mov
call
shrb
adc
imul
lock
pop
and
outsl
lds
lahf
push
lods
mov
in
movl
inc
and
mov
repz
popf
sbb
inc
adc
faddl
movl
mov
cmp
xor
inc
xchg
push
mov
xchg
sbb
cltd
xchg
xchg
scas
fbld
sbb
into
rcll
and
in
test
jno
movl
in
inc
xor
popf
andb
or
idiv
jno
fs
push
inc
pop
and
flds
ret
fdivl
dec
adc
xor
xchg
inc
les
andl
pop
pusha
lret
push
pop
stos
sub
jp
inc
cld
sub
xlat
inc
jno
fstp
arpl
push
push
fisttps
mov
lcall
inc
mov
lret
mov
dec
icebp
ret
lock
cmc
xchg
arpl
mov
sbb
test
xor
mulb
cmp
xor
pop
or
fidivs
adc
pop
movsl
into
push
push
rcll
jae
outsl
xor
xchg
mov
cmp
lahf
das
lock
mov
xor
inc
jmp
out
inc
mov
das
sbb
lret
popa
inc
mov
dec
cmc
rcr
ret
sbb
popf
and
cld
jae
sbb
fldl
push
es
push
jecxz
into
push
pusha
rcrb
push
push
cmp
adc
dec
dec
es
dec
adc
mov
pop
stos
pushf
add
push
cmp
push
test
sbb
push
movsb
popf
xchg
loope
sbb
aam
push
data16
jge
andb
enter
sub
fs
xchg
xchg
cmp
es
out
sahf
loop
cmp
das
test
mov
pusha
adc
mov
jmp
aas
jecxz
add
scas
add
adc
jmp
enter
in
icebp
xlat
cmpsl
std
cltd
and
mov
pop
xchg
cmp
daa
imul
sub
adc
and
adc
push
fsub
sbb
push
rclb
xorb
test
mov
push
adc
cs
jae
mov
sbbb
jnp
outsl
insb
cmpsl
and
mov
sbb
in
fistpll
push
into
cs
xchg
jo
pusha
jnp
popl
out
mov
ret
jns
into
mov
sarb
push
imul
stos
xor
adc
pop
jmp
dec
inc
inc
pop
lahf
push
sub
cmp
adc
pusha
mov
push
dec
int
and
xlat
xor
mov
add
inc
cld
sti
aaa
lahf
les
inc
fwait
push
dec
pop
cmp
mov
add
sub
stos
fidivl
in
pushl
jmp
push
jo
jl
mov
push
stc
daa
jecxz
scas
je
jp
jne
scas
aas
int3
cmp
mov
pop
jbe
out
cmpsb
add
pop
xchg
adc
scas
inc
bnd
js
std
inc
insl
clc
jg
sub
xchg
pop
rolb
sbb
mov
xchg
pop
pop
scas
icebp
les
push
nop
rol
cmp
sti
jae
xor
cmc
sbb
jmp
enter
fbld
les
push
inc
addb
addr16
incb
add
jnp
mov
addr16
call
fst
pop
fsubs
push
lods
add
in
push
daa
pop
and
testb
icebp
fst
adc
push
push
mov
sub
sbb
mov
push
imul
inc
std
fnsave
out
mov
xor
mov
stos
movsb
in
push
cmpsb
adc
add
call
in
stos
aaa
loope
xor
bound
cmp
jo
pop
loope
push
mov
sub
mov
ret
sar
sub
ja
gs
into
ret
pop
mov
xor
push
push
fisttpll
into
js
loope
gs
mov
mov
outsb
push
dec
and
into
mov
adcl
jne
ds
in
pushf
les
adc
sbb
sahf
sub
fucomp
cmpsb
xor
pop
cmpsl
add
push
add
xor
in
jle
notl
pop
pop
cltd
push
mov
jp
adc
cmp
scas
jge
lahf
jae
mov
enter
and
std
mov
insl
and
aas
dec
outsl
and
ljmp
lcall
fisubrs
insl
mov
or
inc
xchg
andl
fisubs
pop
fwait
mov
xor
sub
lock
ret
mov
imul
or
lods
rclb
xchg
adc
andl
adc
rcr
lcall
mov
adc
into
lcall
test
aad
jne
mov
mov
jae
cmp
xor
scas
add
fstpl
stc
adc
fmul
add
ja
popf
cmp
je
negb
int3
xchg
les
dec
sbb
or
repnz
out
jle
xchg
xor
mov
mov
shll
rolb
daa
ret
cmc
ja
fwait
inc
outsl
shl
pop
lahf
sti
dec
leave
rorl
loopne
mov
movsb
das
in
dec
mov
aam
add
and
mov
push
mov
out
sub
aaa
push
clc
hlt
jbe
or
cmp
es
loop
xchg
stc
xor
lods
push
xor
das
and
filds
or
lds
mov
cmp
and
aaa
push
pop
scas
int3
mov
add
push
mov
sub
xor
jp
movsl
test
sbb
or
lock
mov
test
lcall
xchg
in
inc
jge
mov
or
or
leave
andb
dec
test
xlat
or
je
add
rep
imul
adc
xchg
or
int
xor
xor
jl
icebp
out
xchg
or
mov
jns
arpl
jl
pop
push
in
cmp
lret
xor
sub
mov
mov
pop
stc
inc
fwait
jns
shrb
lods
pusha
popa
fiaddl
lcall
stos
leave
pop
fstps
stc
imul
repz
arpl
pop
js
lock
mul
dec
add
jl,pt
int
aam
adc
ret
pop
lcall
insl
fwait
cmpl
jl
lock
in
movsl
dec
add
xchg
sbb
stos
jne
cwtl
xchg
xor
xor
jle
dec
sub
inc
and
fwait
jg
stos
jmp
push
cmp
sub
xor
mov
inc
xorb
xchg
jb
outsl
xchg
inc
xor
aad
inc
stos
jp
ret
call
cmp
in
mov
cmp
bound
shll
xor
cs
or
sub
adc
imul
sbb
adc
cmp
xchg
pop
pop
and
xchg
ss
lods
dec
jle
into
xchg
clc
mov
fistpll
loopne
inc
test
inc
adc
pushf
push
sub
or
or
lods
sbb
lahf
mov
cmp
movsl
lods
outsb
inc
cmc
aaa
push
movsb
mov
rep
in
scas
insl
add
lcall
mov
xor
test
add
jmp
mov
sub
scas
dec
andl
dec
leave
sti
cmp
test
scas
pusha
push
lods
adc
xchg
js
jae
in
cmpxchg
popf
inc
or
les
push
popl
cmp
jl
jl
out
pop
pop
adc
sbbl
mov
sbb
lahf
pop
aam
add
bound
mov
test
in
movl
xchg
mov
add
inc
lea
mov
push
test
xchg
pop
pushf
pop
test
imul
jge
inc
jo
idiv
adc
xchg
stos
mov
mov
jb
out
xchg
or
dec
lret
xor
movsl
syscall
shrl
push
dec
jmp
xor
movb
loop
cmpsb
shlb
mov
and
std
xor
xor
outsl
mov
aas
call
imul
data16
jl
hlt
and
clc
cmp
cmp
loopne
cmpsl
jg
adc
popfw
cmp
mov
sub
jno
push
sahf
clc
inc
pusha
jmp
mov
mov
and
test
sub
scas
mov
mov
cmpsb
addr16
pop
xchg
dec
out
lahf
lock
sub
jo
dec
mov
jge
test
cwtl
sar
icebp
cltd
sbb
movsb
inc
push
mov
xor
icebp
or
cmpsb
inc
or
xor
xchg
adc
test
dec
aas
scas
inc
bndstx
cwtl
sbb
clc
add
sbb
mull
push
mov
push
lahf
loop
pop
mov
mov
pop
pop
repz
push
bound
add
addr16
and
aas
in
inc
xor
add
xchg
data16
sbbl
sub
je
pop
jne
push
pop
dec
push
or
aam
cmc
mov
or
arpl
xchg
sub
xlat
pop
ss
xchg
pop
pop
sarl
adc
in
dec
insl
add
adc
pop
xchg
movsb
push
jecxz
sahf
jo
nop
xchg
dec
cmp
xchg
stos
ret
mov
adc
mov
popf
push
fcoms
dec
and
jge
adc
adcb
outsb
push
movsl
mov
es
push
mov
lods
xor
es
in
sub
push
dec
mov
mov
jmp
leave
les
sbb
lock
lea
xchg
inc
sub
jmp
popf
std
aad
cmc
stos
mov
adc
jb
pushf
ljmp
sbb
or
orb
popa
sbb
cli
icebp
pop
xorb
scas
adc
push
push
xchg
push
sub
push
mov
jmp
cmpsl
fbstp
push
lea
repz
add
arpl
out
stc
mov
gs
mov
cltd
sbb
push
xor
pop
fcompl
std
es
gs
int
jp
jmp
ds
xorb
pop
aad
loop
daa
ret
iret
inc
push
pop
jle
mov
shrl
sub
xor
inc
nop
insl
aam
xchg
cwtl
push
mov
mov
out
int
cmp
or
sbbb
stos
jb
lea
test
mov
dec
xchg
dec
gs
sub
sbb
mov
es
mov
bound
sbb
cmc
xchg
leave
sbb
lods
add
mov
or
std
push
sarl
cmp
rorl
call
adc
dec
add
es
adc
xlat
jle
int
mov
sub
push
xchg
mov
je
sub
mov
mov
jbe
mov
mov
out
mov
fcom
fdivrl
mov
jle
rorb
xlat
xor
sub
pop
lock
pop
pushf
dec
mov
pushf
shrb
cmp
daa
sub
mov
push
pop
adc
pop
ja
push
in
testb
in
aam
push
and
cltd
inc
les
scas
mov
mov
mov
cmpsl
call
mov
aas
rol
rorb
stos
mov
xor
and
jmp
enter
jne
dec
inc
cmc
pop
mov
arpl
pop
add
lahf
and
loope
sti
pop
icebp
and
xor
ret
sbb
stos
daa
imul
rorb
add
in
nop
cltd
sahf
mov
jg
mov
xchg
or
xchg
in
pop
lock
xlat
stc
push
les
push
testb
jge
into
lock
dec
sbb
aas
sahf
repnz
pop
cmc
ret
jmp
mov
or
pop
xchg
pop
mov
jmp
pop
dec
rclb
rclb
test
movsl
and
adc
and
test
adc
push
not
pop
cwtl
lds
and
adc
add
or
sub
popf
stos
fistl
cmc
flds
cwtl
add
or
sbb
push
dec
sbb
mov
add
test
ljmp
add
mov
dec
in
incl
jno
push
fistl
pop
insl
mov
lret
aas
cmpsl
sarl
in
and
das
and
sahf
push
pushf
mov
nop
jp
dec
movsl
out
mov
xchg
jno
leave
jg
inc
cmp
sbb
std
cld
cmp
push
inc
cmc
push
dec
mov
pop
mov
outsl
in
stc
and
mov
xlat
cmpsb
adc
xor
mov
pop
cltd
mov
jmp
inc
sbb
mov
push
pop
not
fprem
sbbb
imul
mov
ljmp
mov
jbe
roll
ds
notl
mov
pushf
mov
jge
mov
mov
inc
mov
sti
inc
inc
and
daa
insb
inc
inc
fcmovb
mov
pop
in
fisttps
test
fstl
add
stc
mov
add
and
xchg
ja
mov
xor
pushf
lret
push
pop
ret
jae
and
sbb
test
fistps
add
mov
lds
pusha
les
mov
mov
ret
test
sub
dec
xchg
pop
xor
jne
icebp
and
shll
fcompl
scas
cmpsb
dec
mov
sbb
cmp
lret
popf
sbb
jg
lret
sbb
xor
xor
test
testb
test
int3
cmpsb
leave
sub
adc
loopne
in
cmp
movsb
lods
addb
or
and
inc
dec
or
jae
cli
xor
jmp
ss
das
add
mov
mov
and
jmp
lcall
cld
dec
push
and
push
inc
cmp
rcll
or
lock
scas
aaa
test
xorb
stos
shll
aaa
xchg
fdivrl
shrl
sbb
addr16
loopne
test
adc
mov
cwtl
xchg
loopne
push
stos
rclb
imul
adc
arpl
fistpl
and
adcl
push
adc
sbb
imul
testl
pop
dec
nop
jecxz
adc
imul
push
lret
scas
scas
iret
clc
adc
in
push
cld
mov
lcall
mov
cmpl
ret
sbb
push
jp
sbb
mov
jbe
mov
adc
test
fcompl
aas
data16
out
adc
jne
test
mov
popf
dec
insl
cmp
push
or
mov
mov
sbb
loope
sbb
cmp
es
vunpckhps
mov
sarb
icebp
in
sbb
movl
arpl
cmp
mov
push
pop
mov
pop
roll
ss
fstps
push
mov
or
fdivrl
fwait
popf
in
xlat
arpl
push
addr16
out
sub
jmp
bound
outsw
stc
add
into
lods
aaa
fildll
lahf
addr16
adc
xchg
loope
js
ret
dec
lds
es
nop
add
aad
inc
rorb
sub
pop
ret
loop
mov
imul
iret
fwait
push
repnz
repz
lods
jg
loope
dec
mov
mov
in
sub
jecxz
sbb
orl
push
int3
inc
addl
sub
enter
xor
outsb
bound
into
daa
das
arpl
cs
mov
movsb
gs
inc
mov
mov
out
jl
mov
inc
jbe
shlb
cs
aam
nop
push
cltd
push
lahf
popa
data16
.byte
and
inc
xchg
and
add
add
xchg
std
mov
imulb
push
cmp
sbb
cltd
ret
dec
push
loop
dec
mov
lahf
jg
or
or
xchg
arpl
pop
xchg
lcall
roll
cmp
mov
xor
add
pop
rcrb
test
out
lods
or
call
and
loopne
dec
inc
lds
daa
into
lahf
iret
mov
mov
or
jae
cmp
popf
int
divl
pop
js
xor
xor
scas
sbb
and
sti
test
shrb
fstpl
lea
fs
dec
xor
and
mov
push
dec
insl
popa
lock
insl
dec
or
jno
aas
imull
filds
cld
mov
pop
xchg
mov
daa
sbb
xlat
pop
cltd
icebp
aam
pop
cmp
jb
cmpl
push
mov
std
lret
sub
xor
int
mov
xchg
sbb
lcall
imul
mov
and
pop
ss
add
and
outsl
dec
insb
push
mov
cmp
xor
out
popf
imul
dec
and
add
fbstp
xor
cmp
inc
cmp
mov
add
in
loope
adc
in
stos
mov
sbb
cmc
sbb
lock
outsb
iret
dec
xor
test
inc
xchg
lock
fldl
in
mov
repz
out
decl
mov
pop
adc
pop
out
loop
jge
xchg
cmpsl
test
cmpsl
iret
adc
push
cmp
dec
stos
pop
cmp
in
push
mov
negb
lods
ja
imulb
insb
adc
cmp
sbb
aam
add
orb
ffreep
xchg
stos
jp
cmp
inc
mov
cmp
xor
mov
xchg
jbe
xchg
push
sbb
xor
data16
out
lcall
movsl
push
js
adcl
push
xchg
mov
sub
mov
mov
nop
inc
lock
mov
out
std
out
iret
aas
push
in
jge
lea
imul
lahf
ret
mov
test
in
dec
mov
fcmovne
xlat
mov
in
sbbb
icebp
jmp
cltd
xchg
aas
xor
cmpsb
dec
dec
pop
xor
movsl
xchg
inc
sbb
enter
aas
dec
cs
daa
jae
pop
push
mov
xorb
shrb
add
sbb
push
fnsave
push
scas
into
pop
mov
push
mov
and
sbb
jo
pop
out
scas
jg
add
and
xchg
add
or
dec
int3
xor
pop
std
xchg
sub
pusha
sbb
arpl
xchg
xchg
fcoml
into
sbb
xlat
dec
cs
jnp
loope
xor
jle
xchg
lods
stos
inc
jae
mov
push
push
push
and
cli
mov
cmp
ds
test
insb
loopne
lock
daa
mov
adc
sub
inc
adc
mov
lock
or
push
cmc
loopne
aaa
aas
cmp
push
push
test
cld
ja
mov
popf
inc
sarl
das
popf
sbb
imul
or
icebp
mov
xchg
out
push
adc
popa
mov
fistpl
jno
scas
ficoms
sar
sub
dec
xchg
jae
inc
sbb
lea
in
gs
hlt
dec
push
iret
sub
pop
into
addr16
out
fldcw
addr16
adc
sub
das
addb
sbb
jecxz
inc
nop
or
ds
mov
pop
sub
sbb
mov
xor
pop
or
lret
jge
cmp
cmp
pushf
in
rcrl
in
cmp
sarb
push
movsb
xor
hlt
jmp
addl
lods
dec
iret
les
int3
and
outsb
pop
imul
pop
movsl
add
leave
addr16
push
cmp
jno
mov
and
in
cmp
movsl
mov
or
inc
lret
decb
iret
loop
add
mov
jo
adc
aas
lahf
in
jae
pop
push
cld
aas
cmc
mov
aaa
popf
dec
sub
sub
cs
sub
xorl
jns
pushf
rorb
mov
mov
std
sbb
ss
inc
loope
mov
stos
and
dec
xchg
fucom
pop
add
jbe
inc
mov
dec
cmc
aad
insl
and
insl
push
push
pushf
jle
mov
mov
xchg
sub
pop
xchg
lret
mov
and
mov
out
mov
xchg
dec
insl
jl
push
mov
pusha
jecxz
inc
lret
sbb
fists
fidivrl
push
inc
test
test
sub
in
inc
scas
imul
into
cltd
mov
or
push
inc
pop
xor
mov
mov
dec
lods
push
add
mov
push
xor
xor
lret
sarb
push
out
adc
pop
enter
fcomps
ret
adc
and
mov
loopne
mov
imul
movsb
fwait
or
pusha
pushf
aas
loopne
mov
mov
mov
sbb
pusha
das
popa
hlt
cmp
inc
add
mov
aas
aas
std
pop
add
aas
in
pop
outsb
push
inc
or
push
sub
nop
push
rcll
xchg
pusha
test
jp
ret
push
jl
jp
cmp
in
test
sub
les
pop
test
ja
inc
cmpsl
cmpsb
pop
mov
flds
mov
out
pop
fwait
enter
int3
mov
pop
popa
rclb
dec
sti
das
shll
push
dec
adcb
pop
jle
mov
sti
pop
fs
movsl
add
jbe
cmp
pop
in
cs
loopne
add
pop
mov
insb
out
mov
out
add
popf
add
mov
js
fdivl
push
dec
jo
pop
jno
xorb
insb
leave
shll
pop
add
mov
cmp
clc
sub
loopne
and
xor
leave
ds
fwait
divb
lods
and
mov
mov
bound
rcll
push
shrl
xor
or
xor
add
cmpsl
lds
sbb
mov
jg
xor
sub
add
pushf
push
imul
cmpsb
mov
fnsave
inc
test
fisttpl
fs
inc
fs
insb
daa
dec
pop
lds
sbb
int
mov
jo
pop
das
cmp
insb
xchg
jge
iret
jno
dec
lea
mov
and
jp,pn
push
push
ljmp
cmp
daa
dec
cmp
jl
aas
jl
mov
inc
test
jl
jmp
daa
pop
xor
popa
scas
and
scas
cmp
sbb
nop
inc
into
fsts
or
pop
pusha
aad
gs
sbb
in
insl
inc
rorb
js
dec
test
jmp
daa
rorb
or
pop
fdivrl
jl
pop
or
sub
xor
lds
sub
or
add
dec
or
es
es
ret
mov
nop
into
or
shl
stos
and
adc
imul
mov
aad
push
jne
xchg
inc
test
repz
cmp
loope
inc
bound
arpl
out
mov
sti
sub
js
add
pop
fs
cltd
xchg
cwtl
pusha
movsl
mov
mov
pusha
ja
ljmp
ficoms
xor
addr16
data16
xchg
in
push
bound
js
adc
push
mov
enter
arpl
test
push
rorl
in
shlb
jne
and
fildll
in
cld
cli
sub
mov
ret
fmul
rcll
shrb
dec
pusha
jmp
js
push
negb
fnstenv
mov
mov
pushf
push
arpl
mov
fisubl
jmp
pop
adc
js
xchg
nop
sti
mov
and
lods
xor
dec
mov
std
ljmp
mov
jo
imul
aam
inc
mov
repz
jno
add
and
movsl
cmp
dec
sbb
repnz
cmpsl
mov
scas
in
sbb
xchg
sub
jno
xchg
cltd
out
mov
shrl
imul
lock
sub
inc
pop
shll
das
jl
stos
sbbl
mov
mov
inc
pop
das
pusha
mov
pop
arpl
divl
mov
lds
push
les
adc
jne
and
cwtl
scas
dec
push
xor
fmul
js
jmp
mov
clc
xor
and
ror
nop
push
je
dec
sbb
aas
cmp
xchg
and
arpl
adc
mov
push
lea
sbb
mov
mov
adc
xchg
jg
pop
mov
mov
mov
mov
es
ffreep
pop
xor
arpl
xorb
dec
xchg
xchg
in
ja
xor
pushf
cltd
and
dec
or
pop
sub
jns
inc
mov
cs
movsb
stc
loop
sbb
inc
xchg
sbb
iret
arpl
dec
scas
insb
shrl
mov
cmp
jg
adc
lods
rorl
mov
and
push
test
fadds
add
xor
push
jl
ss
or
sbb
jno
pop
jb
push
xchg
adc
test
lea
sbb
mov
dec
sbb
jmp
xchg
ret
adc
imul
jl
cld
bound
cmp
pusha
or
add
shl
xlat
ja
mov
inc
sbb
imul
add
popf
xor
scas
add
adc
scas
sub
jmp
sub
inc
imul
push
test
icebp
cmp
out
addb
mov
mov
aas
xor
push
xchg
dec
adc
pop
insl
jg
sarb
cmp
dec
push
loop
sbb
repnz
fs
mov
xchg
mov
clc
call
push
xchg
jnp
jl
std
ret
adcl
sub
sub
cmc
inc
dec
mov
mov
xchg
mov
stos
fcompl
ljmp
std
sbb
mov
jge
add
cld
push
mov
jae
or
mov
rcr
jne
xor
xor
gs
sar
mov
xchg
xor
cmp
sbbl
rorl
popl
add
sbb
push
pop
or
adc
adc
inc
test
ror
jmp
popa
push
neg
add
mov
xor
sub
jmp
xor
inc
xchg
mov
sbb
dec
dec
mov
sub
leave
or
daa
cwtl
push
lock
mov
xor
mov
sbb
dec
imul
xor
xorl
pusha
xlat
fidivl
addr16
fdivrp
push
data16
data16
dec
ds
push
cwtl
in
popf
loop
ficomps
lea
dec
xchg
xorl
in
bound
sti
inc
into
je
mov
dec
mov
adc
mov
icebp
xchg
pop
jl
inc
int
cmpl
sti
jmp
push
test
jmp
das
mov
es
das
inc
mov
sbb
ret
ret
and
cmp
sbb
push
imul
in
imul
popf
sbb
push
and
jmp
cld
in
cmp
pop
adc
enter
enter
inc
cwtl
repz
popf
in
jnp
fisubrl
jecxz
sbb
adc
mov
pop
js
xor
jnp
mov
ss
sub
or
nop
lods
dec
jae
dec
sbb
jecxz
mov
sbb
cmp
cmc
and
lods
xor
xchg
and
ret
xchg
or
sbb
mov
in
or
call
xor
je
nop
mov
iret
call
data16
pop
cmpsb
and
push
int
xchg
xor
cmp
jmp
xor
xor
adc
mov
adc
xchg
and
sub
cmpsb
fbld
lock
fwait
mov
stc
into
js
dec
in
ficoml
cmpsl
imul
insb
xor
cs
fs
rcrb
sbbb
ja
cmp
test
inc
shl
mov
xchg
add
leave
push
push
ror
pop
mov
mov
mov
pop
dec
push
mov
sbb
add
fiadds
sub
and
fadds
out
xlat
dec
or
sub
cld
cmp
aad
push
fiadds
or
fstl
js
out
notb
mov
ss
test
call
addr16
fisubrl
in
ret
inc
mov
or
leave
sbb
cmp
or
mov
mov
inc
and
jno
cmp
and
mov
mov
imul
mov
adc
dec
push
or
jo
shll
and
imul
cmp
sahf
mov
loopne
or
pop
inc
int
sbb
js
xor
popf
inc
or
icebp
and
sbb
pop
das
in
sub
xchg
sub
stc
ret
rolw
push
ret
jno
mov
fldz
adc
mov
popf
rcrb
mov
mov
mov
xor
sub
xchg
or
repz
out
or
popf
xor
aam
gs
ja
decl
fistpl
out
or
mov
push
or
and
cltd
fbstp
test
dec
out
mov
or
inc
fstpl
test
or
js
xlat
mov
jp
mov
cmp
xorl
xchg
mov
int3
sbb
or
mov
lcall
mov
aaa
xorb
cmp
fucomp
stc
cmp
ffree
sbb
test
lret
arpl
fcmovnu
cli
pop
push
adc
inc
repnz
mov
jmp
roll
xchg
mov
int3
ret
insb
jge
outsl
mov
jmp
xchg
mov
push
aaa
adc
adc
xchg
or
test
push
std
mov
shrb
and
es
bound
mov
jp
fcoms
js
dec
dec
push
leave
add
aas
add
mov
addr16
mov
not
pop
test
adc
mov
lcall
in
in
std
addb
xchg
xor
mov
cmp
cmpsl
sub
cmp
mov
cli
int
adc
sub
stos
xor
dec
add
fs
in
push
cmc
dec
paddsw
jecxz
xchg
mov
adc
jle
call
sarb
jo
and
ds
xchg
mov
sbb
mov
lea
rorl
std
push
clc
xchg
imul
cmpsl
fiaddl
scas
xor
ret
dec
popf
popf
push
mov
sbb
inc
mov
jbe
push
cs
mov
xchg
add
mov
or
jne
cli
sbb
arpl
jecxz
cmovge
jo
outsb
outsl
int3
inc
int3
xchg
sbb
movsb
push
ficoms
jmp
fsubs
es
scas
mov
shl
add
stc
xchg
dec
mov
adc
mov
xlat
ss
les
sti
ds
sbb
filds
adc
jb
loop
lds
lcall
and
jecxz
sbb
scas
ljmp
ja
push
out
cmpsl
adc
fildll
negl
sub
sti
lock
sub
les
adc
out
xchg
fwait
ja
jbe
pop
adc
cmp
jmp
pop
dec
jmp
call
in
shlb
dec
sbb
jnp
jo
jp
sbb
or
xor
bound
movsb
shrl
into
jp
iret
jl
push
dec
jbe
xor
stos
lods
mov
orb
xor
repz
sbb
mov
and
jnp
push
and
push
mov
mov
mov
dec
aaa
jge
xchg
fmuls
xchg
add
aaa
xchg
mov
ret
add
repz
leave
repz
mov
loopne,pn
pop
adc
in
out
and
adc
fbld
pop
sbb
jo
loop
insl
sub
leave
jb
je
out
ret
repz
push
jp
bound
iret
or
add
sub
into
out
sti
adc
jne
jg
fildl
pop
popa
test
adc
out
scas
add
das
adc
inc
sbb
mov
mov
andl
add
cmp
arpl
out
sti
adc
decb
cmp
sbb
sbb
mov
dec
jo
pop
shlb
and
roll
add
add
cmp
addl
ffree
fisttps
and
mov
cmp
ficomps
add
and
cmp
pop
or
int
or
imul
add
test
push
fcmovbe
cmp
xor
xor
or
mov
xor
movsb
cmp
mov
out
orb
jae
inc
push
sub
cmpsl
dec
mov
and
pop
dec
subl
adc
or
lcall
test
stc
adc
adc
movsb
imul
lahf
pop
add
push
andb
scas
mov
testl
add
mov
aad
jmp
fstps
push
mov
jo
pushf
and
sub
arpl
push
insb
enter
dec
imull
aam
divb
lahf
or
mov
add
lcall
insb
mov
in
mov
sub
popf
mov
in
add
aad
add
jge
xor
mov
jo
push
jnp
sbb
sub
call
sbb
cltd
adc
repz
mov
out
mov
mov
pop
add
adc
aas
int
push
sti
popl
cli
cmp
fsubrl
add
addb
mov
sub
into
inc
adc
subl
popa
mov
bound
sub
adc
push
movsl
out
inc
and
lret
mov
roll
movl
shrl
jo
mov
cmc
aaa
pop
jge
fsubl
out
shll
jae
mov
clc
ja
lcall
jecxz
es
cld
push
or
adc
mov
es
dec
push
not
shlb
clc
js
pop
or
std
adc
mov
sbb
movsb
lods
jle
add
jns
sub
shlb
cltd
jge
popf
inc
inc
push
sbb
in
fldenv
aas
sub
clc
int3
enter
rcrl
outsb
lea
aaa
xor
fsubs
cmp
imul
jp
add
popf
stc
dec
das
mov
outsb
jne
xchg
hlt
sub
test
add
and
mov
and
mov
das
mov
mov
ficoml
cmp
aas
jae
or
jecxz
sub
sbb
stos
add
fidivl
loop
cmp
pop
je
push
into
mov
inc
into
lcall
cmpsl
xchg
push
adc
adc
xchg
repz
std
push
fdivl
maxps
pop
dec
es
scas
bound
jg
pop
jmp
pop
xor
int
cs
int3
xchg
test
push
fstpl
adc
divb
mov
dec
hlt
outsl
sub
pop
adc
inc
mov
xchg
mov
mov
repz
pop
mov
push
mov
sub
test
push
push
xchg
and
sbb
push
mov
adc
pop
mulb
push
xlat
repnz
lea
cmp
lods
mov
lcall
cmp
in
rcll
movd
lahf
xchg
popf
movsl
aaa
mov
bnd
out
cld
xchg
fwait
outsl
cmc
mov
dec
mov
bound
push
mov
iret
inc
inc
je
adc
dec
xor
negl
mov
xchg
mov
stos
fists
aam
call
xchg
push
adc
iret
and
int
pusha
inc
mov
mov
and
sbb
mov
add
fcomps
test
fwait
push
jecxz
xchg
inc
lods
sbb
es
inc
cli
test
sbb
mov
ds
loope
adc
ficomps
arpl
test
or
mov
mov
in
pop
orb
call
std
repz
mov
popf
dec
rorb
rcll
pop
movsb
xchg
shll
adc
das
jmp
xchg
adc
and
dec
mov
push
cmp
mov
repnz
adc
repz
in
ret
outsb
and
mov
es
and
dec
push
inc
add
push
adc
lea
das
jl
cli
cmp
push
mov
mov
or
pushf
rcl
mov
ljmp
test
add
lret
mov
add
lea
test
icebp
xchg
loop
push
or
dec
push
and
clc
jo
dec
sub
mov
lods
and
ret
jl
loop
fxch
add
jb
lods
and
imulb
push
lret
or
sahf
test
push
ret
mov
or
pop
push
xor
bound
addb
sub
push
cli
rol
movsl
dec
push
and
adc
and
std
aam
mov
aaa
mov
fdivrl
rcll
adc
or
and
lahf
gs
gs
pop
inc
sahf
or
into
enter
loopne
push
andb
ret
add
das
cmp
dec
xchg
mov
daa
sbb
sahf
jecxz
xchg
jns
hlt
mov
andl
xor
in
inc
mov
std
push
mov
pop
xor
inc
xchg
adc
fs
loop
push
fidivrs
xchg
jnp
mov
mov
jno
data16
and
clc
aad
fs
add
lcall
inc
shlb
lock
mov
jmp
add
or
cmp
stc
arpl
mov
adc
daa
mov
int
addr16
cmp
repz
adc
mov
mov
cli
in
add
add
mov
xchg
push
dec
jmp
and
xor
xor
outsl
cmp
pusha
mov
mov
sub
adc
stos
mov
jge
fistpl
pop
xor
dec
jbe
ret
in
inc
test
fscale
push
loopne
repz
imul
mov
hlt
scas
fldt
ja
mov
sbbb
push
jo
aam
xchg
add
mov
mov
popf
push
imul
add
leave
and
aaa
clc
xchg
lret
shll
test
adc
ficompl
or
popf
scas
clc
mov
in
push
aaa
ja
sbb
mov
mov
sahf
std
std
rorb
cmc
adc
daa
fwait
sbb
sbb
xchg
dec
dec
cmp
lahf
dec
pop
sti
inc
sbb
or
push
mov
in
int3
rcrl
lds
dec
lret
add
mov
add
stos
scas
jecxz
sub
push
movsl
dec
and
add
sbb
fidivrs
les
inc
cmp
mov
adc
dec
pushf
cmp
mov
shlb
and
xchg
sub
das
mov
push
es
mov
adc
jnp
inc
jo
mov
lret
or
xor
sub
xor
js
adc
imul
bound
pop
daa
lea
inc
pop
mov
mov
aad
sub
fprem
and
inc
sbb
mov
xchg
popa
mov
mov
or
aaa
aad
mov
test
cmp
sbb
lds
movsb
popf
mov
cli
mov
lds
dec
sbb
xor
and
mov
fistpll
jg
push
xlat
and
popf
addb
aad
mov
lods
out
cmp
jae
jl
lds
and
roll
ret
xchg
inc
bound
in
or
pop
jne
test
mov
jae
jne
add
cmp
jno
paddusw
xchg
xchg
jle
mov
jo
shr
imull
xchg
rcrb
push
enter
and
push
shll
mov
xchg
push
repz
outsb
xchg
dec
jg
sbb
pop
mov
shrb
popf
in
dec
cli
sbb
test
lods
and
scas
in
sarb
cmpsl
jne
movsb
sbb
pop
std
push
mov
push
cmp
jbe
add
hlt
xor
jnp
inc
cmp
hlt
fcoms
xchg
movsl
cltd
jecxz
jge
xor
out
scas
pop
xchg
dec
jnp
pop
in
scas
and
cmp
movl
iret
lods
sub
jl
sbbl
xor
add
loope
push
jne
pop
lds
ss
mov
xchg
mov
fcomp
push
test
rclb
or
jae
test
ficompl
sub
ror
cwtl
pop
incl
mov
in
leave
xor
sarl
cli
push
in
push
or
mov
and
loopne
sub
pop
out
mov
imul
pop
push
cmp
dec
frndint
pop
test
mov
push
xor
xorb
lret
xchg
pop
daa
jae
push
inc
adc
int3
xor
push
cmc
mov
adc
cmp
iret
leave
loopne
jge
lods
std
cwtl
mov
jae,pt
mov
int3
cli
mov
outsb
push
sbb
sbb
jnp
push
xchg
cwtl
add
xchg
cs
test
mov
xor
roll
cmp
scas
sub
jecxz
in
mov
lret
sbb
frstor
add
fldt
and
add
rolb
stos
jno
dec
leave
sub
sbbl
pop
dec
pop
lods
pop
loopne
hlt
jge
mov
jmp
es
pop
adc
cs
mov
stos
out
popa
outsb
sbb
divl
lods
jg
mov
dec
cwtl
mov
fdivp
ljmp
out
sbb
outsb
or
mov
loopne
inc
mov
lret
dec
pop
jl
xchg
xor
cwtl
xchg
mov
ljmp
sub
pushf
jge
ljmp
dec
lret
aaa
dec
fcomip
adc
jle
std
ret
ss
in
pop
outsl
loop
jb
mov
stc
sti
mov
sarb
mov
xchg
lcall
fwait
mov
sub
out
pop
pop
inc
and
lock
and
jle
add
push
scas
xchg
push
loope
inc
xchg
xor
icebp
scas
mov
es
and
push
lds
mov
push
dec
loope
sub
fnstsw
add
filds
aam
dec
push
jmp
sub
in
lahf
xor
lret
mov
out
lahf
or
inc
jo
rolb
ja
pop
fdivrl
iret
push
stos
xchg
jp
xchg
adc
adc
sbb
push
fucomip
mov
stos
pushf
icebp
pop
add
mov
pusha
pop
push
iret
or
out
arpl
loop
movsl
jnp
roll
pop
dec
in
cmpsb
dec
mov
aad
sti
jbe
sbb
xchg
dec
inc
dec
lret
xor
scas
or
rcrb
cmp
xchg
push
xor
pop
xorb
sar
adc
jp
inc
fisubl
push
xchg
in
shl
lods
push
sbb
fidivs
xchg
sbb
addr16
and
aas
pop
pop
pop
ja
jecxz
into
cmc
js
jmp
xchg
jmp
cmp
mov
lret
push
inc
mov
ret
nop
cmp
clc
cmc
and
call
imul
adc
movsb
pushf
test
in
std
ja
inc
or
test
add
iret
mov
xor
sub
sub
jb
mov
cmp
inc
adc
sbb
mov
push
ja
push
lods
dec
cmp
stc
cmp
inc
mov
sti
mov
inc
or
jo
mov
xchg
pop
sub
outsb
xchg
mov
outsb
mov
cld
std
add
inc
rcll
ds
adc
ds
xchg
jns
mov
or
arpl
sbb
xor
mov
fdivl
mov
mov
sbb
or
pop
sbb
mov
imul
dec
repz
push
in
xor
adc
and
mov
cwtl
sbb
xchg
stc
or
outsl
inc
stos
sbb
das
hlt
push
xchg
subb
xchg
orb
sbb
ss
stos
jge
push
lahf
or
lods
ret
pop
mov
cmc
or
sbb
mov
push
sub
sbb
mov
or
icebp
add
fcompl
cmpsb
call
lock
test
mov
xor
test
mov
out
xchg
pop
jb
insl
pop
push
lahf
aas
flds
and
mov
and
inc
out
jne
cmc
cmpsb
icebp
addr16
pop
outsl
cmp
inc
scas
mov
push
xor
jno
dec
emms
jne
xor
add
sub
fsubr
cmpsb
inc
pop
add
xor
nop
paddd
jo
jbe
testl
xchg
aaa
mov
xchg
cmpl
or
out
pop
je
in
mov
dec
loop
push
sub
mov
cmpb
add
pop
divb
mov
xchg
repz
fs
mov
out
or
or
aaa
push
jle
fwait
sbb
inc
sbb
mov
dec
test
mov
fisubs
pop
jae
mov
test
loopne
test
outsl
arpl
sarb
cld
out
cmp
mov
cmp
xchg
daa
adc
fidivl
xchg
push
push
pop
or
sarb
cltd
push
inc
adc
push
jg
adc
and
cltd
lods
roll
loopne
sti
pop
mov
inc
in
loop
or
in
add
jo
mov
mov
ret
xor
mov
push
fcompl
inc
daa
push
push
rorb
add
out
push
sbb
rcl
and
mov
mov
xor
icebp
ljmp
xchg
xor
test
loope
xor
push
pop
jp
scas
inc
push
lret
add
aas
fwait
cmp
ss
jge
fdivrs
cmp
ja
scas
into
pop
je
aas
sahf
sub
push
and
sub
dec
icebp
mov
lea
imul
popa
fsubrp
mov
push
in
fdivr
and
mov
sub
or
mov
cmp
sub
les
cmp
int3
or
xchg
push
dec
push
adc
sub
xchg
adc
cmp
xor
in
cwtl
mov
mov
and
sbb
aam
sbbl
cmc
iret
mov
arpl
adc
adc
sbb
insl
enter
cmp
in
lds
out
lock
mov
std
stc
movsl
jg
aad
pop
pushf
inc
aaa
add
cmc
or
and
adc
cmp
out
mov
xchg
cwtl
cmp
sub
xorb
cmp
iret
jb
mov
data16
leave
jb
xchg
xor
fiadds
sub
push
or
out
out
testb
jge
jp
ficoml
mov
fidivrl
xor
jne
dec
pop
mov
scas
jge
out
int
mov
or
clc
clc
jecxz
mov
jmp
inc
adc
les
cmpsb
movsb
push
mov
push
pop
mov
cmpsl
aad
jmp
or
es
divb
dec
dec
test
dec
imul
daa
aam
inc
sti
xchg
aam
fdivl
pop
xor
xor
imul
push
jg
or
mov
out
hlt
cmp
dec
cmpsl
call
sbb
mov
test
sbbw
popa
jo
es
sub
cmp
mov
xchg
cld
flds
and
lods
fucomip
loop
adcb
lods
loopne
pop
aad
pop
mov
sbb
cmp
push
inc
inc
cmp
xchg
sub
jne
call
xchg
and
and
sub
lahf
jge
jno
das
fisttps
mov
mov
jnp
xor
add
xor
js
bswap
stos
push
addb
into
push
xchg
movsb
dec
int3
cmp
or
ljmp
jbe
aam
ficoms
cwtl
dec
insl
push
push
mov
push
xchg
jmp
xchg
in
jae
xchg
sbb
cwtl
or
lds
aam
cmpsl
mov
or
stos
lahf
mov
jecxz
repz
shll
stos
jo
mov
idivl
lods
mov
scas
lods
sar
fstpt
roll
jb
jle
test
cmp
mov
cmpsb
mov
orb
push
or
push
mov
dec
ss
test
push
sub
test
mov
loop
mov
int3
in
xor
into
inc
inc
decb
div
mov
pop
dec
sbb
pop
cmpsb
add
loopne
pop
and
popf
pop
mov
cmp
aas
mov
lahf
mov
scas
jg
test
mov
sbb
fisttpll
add
sbb
jns,pt
sbbl
lahf
dec
rcrl
inc
notl
pop
ret
xchg
xchg
add
push
test
shrl
sub
and
cltd
imul
adc
add
cmp
xchg
add
in
lds
xorb
add
pop
sub
mov
mov
add
and
pop
pop
and
lret
rolb
pushf
or
adc
imul
and
adc
lea
xchg
dec
cld
pop
stos
lret
dec
sbb
mov
scas
testb
push
inc
cmc
je
pop
mov
adc
rcll
push
jp
ja
pop
inc
jae
test
lods
and
popa
ja
inc
push
nop
loope
popa
push
mov
sbb
js
sbb
cmpsb
push
push
shlb
in
mov
aam
xchg
stos
je
push
cmpsb
inc
mov
xor
enter
xchg
mov
add
mov
cwtl
jns
and
add
xorl
mov
scas
jns
cmp
push
insb
les
mov
or
mov
xor
mov
lret
nop
lcall
shlb
out
and
mov
add
dec
or
and
sub
lahf
dec
mov
repz
adc
fistpl
sub
sbbb
adc
inc
pop
fdiv
add
testl
mov
lcall
or
testb
xor
mov
add
mov
pop
loope
cld
dec
mov
icebp
cmp
cli
add
aad
push
xchg
or
ja
sti
xor
into
loop
iret
gs
pop
sbb
mov
rclb
cmpsb
sub
and
adcl
xor
pop
sarb
push
lea
data16
jmp
stos
cmc
dec
or
xchg
or
in
push
sub
pop
fdivrl
mov
xchg
inc
xchg
xor
inc
in
adc
enter
xchg
cmp
sub
inc
add
mov
leave
mov
xchg
cmp
ret
cmp
in
mov
cli
pop
cmp
pop
repnz
shll
loope
dec
not
or
or
cmp
mov
leave
sub
mov
jle
outsl
dec
outsb
sub
mov
xchg
or
mov
mov
leave
adc
mov
pop
sub
ret
mov
sbb
loop
sti
notb
push
xor
mov
xchg
fwait
mov
cld
lret
jne
sbb
jg
dec
std
mov
enter
imulb
popa
pop
out
push
inc
mov
rcl
jle
xor
push
adc
adcl
sbb
addr16
add
mov
inc
cmpb
pop
dec
mov
fwait
imul
sbb
jmp
sub
shl
pop
add
jno
mov
ljmp
cmp
mov
movsl
pand
dec
mulb
jmp
lret
ret
es
push
xlat
and
sbb
hlt
ljmp
das
xchg
clc
jl
push
mov
xchg
outsl
xchg
pop
and
and
inc
mov
lods
sbb
jecxz
lds
cld
lock
push
fidivrs
nop
movsb
adc
pop
mov
imul
or
les
xchg
mov
test
cli
and
pop
es
adc
cli
sub
add
test
jo
jne
sbb
and
cmpsb
push
aam
and
sub
mov
dec
outsb
pop
ret
popf
aas
adc
cmp
pop
mov
faddl
pop
cli
inc
inc
dec
es
in
jne
xchg
pop
mov
ficompl
jnp
push
scas
mov
aaa
mov
test
ss
xchg
test
push
imul
mov
insl
jge
ss
movsb
enter
sub
push
loop
lea
xor
mov
push
frstor
fistl
test
dec
sub
mov
cltd
xor
les
fs
aam
sbb
popa
dec
lea
mov
fnstenv
cli
ret
iret
sub
dec
insb
dec
xchg
leave
jecxz
out
gs
cs
scas
xor
mov
add
fstps
pop
jb
aam
jp
mov
bound
jmpw
add
leave
sub
or
stc
mull
mov
addl
loopne
int
pushf
cltd
hlt
or
jno
pop
sti
aas
mov
cli
add
test
leave
push
dec
lcall
lods
and
stos
decl
cld
xlat
fdivrl
repnz
enter
sub
add
daa
mov
mov
push
fstpl
jne
inc
lea
jge
xor
lods
xchg
push
out
cli
repz
xor
loope
mov
ljmp
fwait
mov
ljmp
xor
jns
icebp
push
mov
lret
out
xchg
pop
adc
stc
xor
lea
add
das
pusha
sti
mov
test
scas
imul
loop
inc
adc
in
data16
aaa
fisubrl
cmp
pop
lret
pop
and
sub
int3
insl
bound
and
xlat
jp
dec
inc
push
daa
inc
cli
leave
in
jmp
orl
aam
lahf
lock
ret
ret
or
cli
sahf
lret
xlat
add
sub
mov
xchg
add
lret
test
xor
mov
pop
lods
ficompl
dec
and
popf
jp
inc
dec
outsl
xor
gs
xor
mov
adc
call
jbe
inc
inc
icebp
lret
sbb
dec
sub
mov
push
mov
jbe
comiss
in
push
lods
sbb
or
aad
stos
push
jno
fisttpll
jnp
cs
aad
pop
dec
cmc
mov
dec
pop
lds
sbb
les
adcb
rcll
cmp
sbb
push
pop
mov
push
in
addr16
test
dec
push
dec
dec
into
sbb
xor
mov
repnz
push
cmpsl
mov
or
cmpsl
push
cmp
fnstcw
mov
mov
decb
xchg
jp
xor
stc
dec
mov
insb
pmaxsw
lea
movsl
int
mov
stos
xor
ficompl
mov
rclb
inc
shlb
dec
dec
lods
movsb
mov
add
cmp
xor
iret
xchg
mov
fwait
sti
push
loope
call
pop
pushl
lea
in
mov
or
cmc
ss
leave
divb
lock
mov
shl
xchg
fs
pop
bound
dec
push
sahf
flds
xchg
sbb
data16
outsl
fstp
xchg
and
jmp
testb
pop
pop
mov
jmp
icebp
mov
and
rol
adc
pop
lock
daa
jo
je
xor
mov
adc
hlt
mov
or
lds
es
xor
cmpsl
push
sbb
jmp
shlb
inc
sar
cmp
sbb
bound
and
sub
jle
out
pop
fstpl
xor
cmp
hlt
push
test
or
dec
movsl
adc
jge
pop
lea
inc
mov
inc
fadds
sub
push
adcl
fistpll
int
imul
xchg
mov
ss
pop
ja,pn
mov
loop
addr16
out
xlat
xor
ja
mov
fstl
and
aaa
pop
rorb
dec
inc
leave
pop
jns
sub
or
fdiv
and
pop
or
pop
adc
jae
pop
ret
out
shrl
mov
jnp
jae
mov
push
popf
mov
or
mov
mov
insb
jns
and
jb
push
push
mov
fdivs
sub
rcrl
divl
dec
push
push
adcb
scas
icebp
aam
xchg
pop
jmp
lret
js
ja
cmp
std
sub
push
adc
sarb
inc
mov
xchg
xor
adcb
pushf
add
push
lods
scas
xlat
aaa
ret
addr16
and
scas
or
lcall
int
xchg
pop
mov
ds
mov
mov
pop
inc
fcmovu
mov
jae
push
mov
or
jns
mov
inc
push
pushf
lock
push
mov
dec
pop
popf
iret
or
lcall
adc
xchg
fs
mov
dec
aas
jle
push
bound
mov
out
xchg
add
neg
pusha
adc
jns
add
dec
or
push
lcall
push
lods
xchg
lret
fsubrs
add
icebp
mov
sub
int3
xchg
jnp
into
cmp
orl
jae
mov
or
or
sahf
shrb
incl
push
fwait
testb
xor
es
out
cld
cmp
and
inc
xchg
cmp
js
adc
push
xor
xchg
insb
push
xchg
mov
cltd
mov
mov
inc
jb
addb
pusha
loopne
pushf
arpl
int
rcrb
xchg
pmuludq
pop
and
ja
test
cmpsb
jle
out
dec
sub
js
inc
jmp
aam
outsl
fmuls
lods
dec
ja
dec
js
jne
pop
pop
outsl
mov
nop
mov
cmp
xlat
push
movsb
lea
mov
dec
loope
xchg
xchg
ret
cmp
adc
cld
test
outsb
push
in
jecxz
cmp
jmp
xlat
inc
popf
jg
mov
sub
in
std
lea
jl
or
push
mov
cwtl
mov
dec
dec
or
stos
jg
jge
aaa
xchg
incb
push
ret
popf
cmp
arpl
js
mov
jp
sub
or
sub
rcrl
jg
cli
mov
xchg
call
mov
movsb
sti
cmp
outsl
cs
inc
push
lods
mov
pop
rcrb
cmp
mov
sub
mov
cmp
movsl
es
dec
ja
or
imul
stos
adc
push
es
or
notrack
ret
int
and
jg
in
xchg
xor
stc
into
nop
call
iret
fildl
fwait
rorb
mov
repnz
mov
fs
mov
xorb
mov
push
lock
add
jb
nop
lret
pop
rcr
rcr
movsb
cmpb
fmul
rcrl
add
sti
jmp
push
out
xlat
in
sbb
and
ds
cmp
popf
xlat
mov
jnp
sub
lahf
rcr
test
mov
scas
fildl
daa
mov
push
cli
sub
testl
test
inc
cmp
or
test
sub
dec
leave
cld
xchg
in
mov
fnstenv
sbb
jecxz
mov
cmp
sub
dec
adc
shrl
sub
xor
jecxz
dec
lcall
mov
or
sbb
mov
inc
insb
stos
sbb
rcl
add
add
xchg
xchg
movb
mov
push
call
andb
call
ja
cli
pop
fidivrs
repz
rep
xchg
adcl
cld
pop
push
or
xchg
xor
mov
push
mov
adc
jno
subb
out
push
mov
clc
pop
adc
daa
dec
ret
addr16
movsb
inc
ss
imul
pop
cmp
push
mov
pop
lret
sbb
ret
mov
in
adc
pop
arpl
xlat
push
mov
rcrb
add
push
cli
enter
jb
mov
mov
sbb
std
xchg
test
jnp
lock
and
pusha
or
es
push
and
push
push
dec
clc
sbb
sbb
stos
int3
adc
xchg
pop
outsl
cwtl
lods
cs
cmp
jbe
pop
ret
push
in
dec
pop
mov
icebp
inc
js
fsts
test
aaa
outsl
stos
ds
popa
push
pusha
jno
and
shr
dec
loop
jmp
pusha
stc
inc
push
lcall
inc
clc
xor
xchg
pop
std
in
or
mov
aad
into
test
rorl
ret
popa
popa
sub
cmp
lret
xor
popf
dec
mov
cmpsb
xchg
cmpsl
imul
cld
test
jg
int
xor
fistpl
pop
shrb
or
pop
jecxz
rcrb
add
mov
mov
cmp
movsb
popa
adc
adc
stos
clc
mov
sub
cmp
xchg
enter
es
jne
pop
shrl
clc
inc
xor
cld
sbb
pop
xlat
xchg
xchg
dec
mov
inc
addr16
and
out
mov
cmpsl
pop
icebp
rorl
int3
fs
mov
mov
pushf
fiaddl
jns
push
cld
and
loopne
or
mov
jl
in
dec
push
cmpsb
xor
xchg
mov
popf
cmp
or
aam
push
xchg
sub
cmpsl
inc
push
push
mov
or
arpl
xchg
aas
pop
test
ffreep
out
cmc
xchg
mov
das
mov
iret
xchg
sbb
dec
xchg
push
out
cltd
ret
ret
jo
xchg
xchg
inc
data16
pop
daa
or
xchg
mov
push
dec
xchg
mov
testl
stc
inc
cmp
ret
mov
stc
ret
pushf
and
das
xor
pop
daa
movsb
jne
out
repz
adc
inc
push
je
out
xor
xchg
xor
enter
fidivs
popa
mov
jl
sub
xchg
pop
aad
mov
inc
or
out
inc
repnz
adc
cwtl
add
pushf
int3
es
mov
movsb
add
pop
rcl
cmpsl
sub
add
push
inc
push
pop
movsl
gs
mov
xor
inc
mov
out
jo
outsb
xor
imul
dec
pop
in
int3
jnp
push
jno
std
adc
cmpsb
shll
clc
jno
repz
jge
stos
xor
sbb
stc
sub
scas
call
bound
rcl
rolb
jmp
lret
lret
data16
movl
scas
outsl
mov
adc
jbe
fildll
aad
add
mov
scas
xor
push
inc
mov
xor
lahf
or
push
xchg
pop
mull
std
insl
xchg
repnz
mov
ret
dec
rolb
mov
xchg
imul
ret
fs
push
sbb
sbb
notl
adc
lcall
scas
dec
cmp
nop
jae
cmpsb
sub
sbb
fcompl
and
xchg
push
push
pop
cmp
scas
lcall
fdivl
and
leave
push
imul
adc
xlat
movsb
fwait
dec
div
add
xor
adc
push
enter
gs
and
sub
dec
test
lret
fsubp
pop
test
pop
lcall
pop
fisubrl
push
or
fwait
stos
stc
stos
inc
mov
pop
push
aad
sarb
call
fmuls
inc
xchg
cmp
xchg
sbb
adc
and
fucomip
mov
scas
iret
loope
lds
std
ficomps
cmp
adc
pushf
ret
adc
outsb
sub
fldl
cmp
jmp
jae
out
mov
mov
xchg
add
add
das
stos
ret
xchg
pusha
pop
imul
jo
pop
push
and
lret
negl
inc
inc
or
fdivrs
inc
add
mov
jne
sahf
xorl
pusha
and
sub
mov
sbb
test
sub
add
roll
sub
pop
mov
sbb
push
dec
jge
pop
mov
dec
insb
ds
pushf
cmc
xor
pop
jp
sbb
pop
testl
add
mov
cmp
xor
inc
pop
mov
mov
test
orb
lods
sbb
in
or
cmpsl
mov
sbb
enter
roll
jns
pop
mov
mov
test
mov
jl
loop
dec
xor
and
movsb
xchg
dec
xchg
xchg
lcall
xchg
add
test
nop
and
js
mov
cmp
dec
inc
int3
xor
and
rorb
push
and
das
scas
stc
pop
push
cmc
test
xor
sahf
pushf
int3
and
pop
pop
cld
sub
sub
in
test
pop
push
mov
pop
xchg
ss
jo
loop
fwait
xor
test
aaa
movsb
fcomps
push
push
ja
push
and
test
stos
hlt
fisubrl
js
push
rolb
fldcw
cmpsb
or
mov
and
int
xchg
rolb
inc
sub
mov
shl
mov
and
idivb
lea
jb
out
dec
test
add
pop
and
notl
ret
dec
pop
or
pushf
add
les
icebp
aaa
clc
push
repnz
xor
push
loope
lock
mov
loop
jnp
repz
xchg
dec
pop
mov
pop
sub
xor
mov
jno
jp
fisttps
int3
cld
mov
sub
cmp
aad
pop
add
out
sbb
lret
fdivl
popf
sbb
ja
and
or
mov
repnz
stc
popf
sub
xchg
cwtl
ds
popf
or
push
test
pop
push
outsl
mov
stos
fdivrp
cmpsl
mov
mov
into
adcb
xchg
les
dec
lds
test
inc
xchg
and
bnd
mov
xorb
pop
subl
repz
or
loopne
sub
int
jne
xor
sahf
mov
pop
insb
ss
fidivrl
iret
mov
bound
clc
jecxz
or
repnz
sbb
out
pop
or
sub
xchg
xchg
call
sbbb
jno
test
push
pop
pop
sub
idivl
insb
and
mov
sub
xor
fmulp
aad
fs
call
fdivrp
fcoms
loopne
mov
or
test
stc
push
push
push
add
push
repnz
js
sbb
aaa
mov
dec
mov
inc
mov
clc
push
js
insl
mov
les
rorb
xorb
popf
adc
aas
es
dec
cli
xlat
pop
adc
lahf
xor
lock
outsl
popa
loopne,pn
sbb
push
push
insl
fists
cld
and
call
sub
loopne
je
cs
push
clc
inc
test
out
pop
xchg
or
mov
aaa
std
sbb
adc
movsl
or
ja
jns
xchg
push
cmp
int3
sub
test
and
stos
ret
xchg
sbb
dec
jnp
gs
dec
xchg
and
das
xchg
inc
int3
call
cmp
xchg
sbb
stos
in
xor
inc
movsl
mov
inc
movsl
or
call
push
ja
mov
negl
dec
popf
xchg
jne
sbb
jecxz
lret
jp
jno
insb
xchg
mov
or
pop
and
outsl
sub
jnp
cmp
jl
pop
ds
lods
mov
dec
push
sbb
lds
jae
pop
mov
dec
fldcw
je
xchg
in
mull
out
call
les
mov
aas
fnstcw
in
mov
jmp
or
fs
or
movsb
jl
mov
jle
movsb
imulb
sarl
or
testb
push
movsb
xchg
fadds
int
xchg
fsubrl
sar
inc
mov
dec
call
jnp
dec
aaa
and
outsb
push
out
fcmovnu
xchg
pop
mov
data16
test
sbb
iret
adc
fwait
or
les
jmp
push
cltd
and
jno
or
push
orl
add
dec
mov
xchg
mov
gs
add
xor
dec
push
and
hlt
and
pop
leave
sub
xchg
subb
jbe
lahf
push
ja
pop
rorb
lock
and
jno
xchg
rcrl
cmp
fistps
mov
xchg
inc
cmp
scas
add
shll
push
aaa
sub
outsl
jns
dec
add
test
scas
xor
add
inc
nop
or
lods
int3
pop
xor
jp
pop
nop
nop
ret
insl
xor
and
or
inc
dec
cmp
xchg
lock
sti
sub
insb
aas
adc
clc
jmp
and
fdivs
pop
sbb
dec
stos
cmp
mov
cmovge
push
inc
mov
mov
jae
rcrl
or
loope
test
mov
mov
mov
xor
fistl
cmp
loope
movsb
push
sti
jb
push
jb
ror
adc
adc
test
setnp
mov
insl
movsb
adc
sbb
cmp
ficomps
lock
mov
lret
popf
pop
mov
cwtl
pushf
test
push
jmp
jp
add
std
pop
enter
and
pop
dec
jns
ret
rcrl
movsb
pop
leave
cmp
jb
cmpsb
cmp
orl
call
mov
mov
fcmovbe
mov
enter
dec
mov
add
mov
icebp
pop
cmp
cmp
or
and
fsubr
cmp
and
cs
js
aaa
cmp
ror
sub
clc
pop
xchg
xor
fiadds
mov
stc
test
jno
inc
push
sub
loop
sahf
mov
sti
mov
sbb
in
mov
xor
cmc
jle
adc
insb
fwait
repnz
sub
mov
imul
cmc
js
loop
cmp
ljmp
sub
addr16
dec
jae
and
push
cld
sbb
push
ret
inc
roll
cmp
test
fdivl
pop
aad
and
sub
xor
and
out
pop
or
cmp
add
sbb
sub
fdivr
inc
inc
inc
cmp
sbb
fdivl
test
xchg
cmpb
fs
shlb
stos
inc
iret
jno
in
imul
cmc
or
mov
sub
rcr
jae
fwait
rcl
and
dec
xor
xchg
jmp
in
cmp
cmp
lret
int3
adc
dec
ret
or
push
scas
inc
pop
or
or
jbe
mov
aas
sub
rclb
adc
imul
out
xor
cmp
mov
scas
pop
inc
imul
sti
ss
xor
movsl
jns
jno
push
nop
adc
testb
pop
xor
dec
in
jns
pop
sbb
sub
xchg
adc
dec
repz
les
xor
adc
je
movsl
lods
out
test
lret
lea
aas
movsb
adc
sub
push
dec
popf
cwtl
sbb
or
add
xchg
jge
addr16
sub
or
cs
cmc
mov
pop
loopne
bound
jecxz
js
inc
sbb
jns
out
std
jo,pt
lock
arpl
sbb
mov
nop
repz
lea
mov
repz
lock
or
inc
in
mov
mov
adc
cmp
cmp
sete
fistpll
xchg
das
or
and
cmp
xchg
movb
jb
inc
loopne
push
rep
or
push
imul
sbb
mov
pop
insb
popa
jo
xor
jns
mov
jo
lods
sbbl
insw
sub
push
loop
inc
popa
jnp
mov
sbb
mov
addr16
decl
in
fmuls
xchg
mov
outsb
push
mov
imul
xor
push
iret
mov
stc
lods
aaa
cmp
mov
dec
sub
fcoml
push
iret
mov
sbb
int
adc
add
jnp
dec
sbbl
and
cld
or
and
cmpsl
cli
dec
xchg
push
mov
sbb
dec
outsl
or
mov
fidivs
mov
mov
mov
pop
jle
and
insb
popa
xor
pop
mov
lods
push
cli
push
push
pop
fistpll
adc
xor
dec
popa
add
cmpb
sub
add
cmp
or
enter
add
ja
mov
jb
cld
in
bound
rorl
jmp
pop
pop
push
shl
mov
push
cmp
cmp
lods
mov
lret
inc
cmpb
out
cmpsl
sbb
inc
nop
sbb
adc
dec
testl
rcrl
in
dec
mul
mov
mul
fucomp
jne
mov
jle
adc
rcrb
les
pop
jmp
int
rcl
jle
ja
rcrb
repz
pop
xor
out
mov
shrb
cmp
xor
sahf
cmp
loop
popa
xchg
push
or
icebp
adc
push
adc
xchg
adc
or
lcall
ficompl
out
mov
jecxz
adc
flds
ss
sbb
sbbb
push
dec
dec
dec
aam
jnp
sub
inc
call
sbb
in
dec
and
pop
scas
mov
jnp
mov
int3
test
jle
ret
call
mov
xchg
push
inc
into
loop
dec
xchg
aam
push
xor
lahf
push
dec
enter
pop
or
out
pusha
add
test
lahf
vmovaps
xchg
jo
loope
test
pusha
fcoms
cmpsl
enter
ficoml
pop
mov
xchg
data16
xor
push
sbb
testl
xchg
stc
insb
cli
fcoms
push
and
stos
insl
adc
fistl
add
dec
mov
mov
or
test
adc
mov
push
repz
push
sub
or
outsl
fsubrl
loop
pop
mov
arpl
mov
sbb
inc
out
loope
push
pop
lcall
cmc
out
mov
sbb
cmp
sub
mov
cmp
cmp
mov
lock
push
mov
popf
push
jno
fistpll
mov
push
mov
and
daa
data16
aad
sbb
sbb
mov
fcmove
mov
loope
add
mov
dec
adc
out
scas
inc
mov
jle
inc
sub
ja
jge
enter
test
or
mov
adc
inc
lea
xor
jno
call
aam
das
fsts
rcl
mov
dec
mov
lahf
sbb
rcl
mov
test
rcrb
inc
sbb
inc
sbb
inc
pop
mov
icebp
xchg
rcrb
jl
push
movsb
lret
pop
fwait
bound
dec
pop
lock
es
mov
xchg
int
cld
cmc
adc
test
sub
pushf
sbb
loopne
mov
sub
or
jecxz
das
lret
sub
cmp
imul
mov
adc
push
xchg
xlat
hlt
in
adc
arpl
ficoml
sbb
xor
jle
arpl
leave
mov
adc
or
push
push
push
scas
jbe
xchg
lret
pop
rorb
int
out
adc
mov
add
and
xor
pop
jecxz
push
dec
dec
ret
das
mov
dec
mov
mov
repnz
addr16
xlat
imul
std
mov
cwtl
jbe
icebp
xlat
repz
into
sahf
stos
shrb
dec
mov
adc
popa
shll
jl
sbb
pop
mov
lods
repz
jne
sub
add
addb
sbb
xchg
clc
add
andl
outsb
push
jmp
and
or
leave
bound
rcl
pop
xor
push
mov
inc
xor
and
pusha
mov
and
or
out
loope
pop
mov
sti
jp
add
negb
mov
and
jne
cmp
mov
neg
mov
movsl
in
inc
sub
xchg
pop
adc
push
push
in
in
jo
ds
jle
xchg
jno
inc
pop
aas
testl
lahf
jge
fcmovb
lret
lcall
or
cli
pusha
iret
mov
imul
jo
shrb
adc
mov
imul
lods
repnz
dec
mov
iret
jmp
push
push
or
add
mov
add
enter
xchg
adc
addr16
stos
lcall
rep
push
adc
mov
dec
mov
jb
repz
bswap
sub
dec
mull
sbb
mov
jb
dec
fidivl
insl
data16
fidivrs
pop
mov
or
and
cmp
mov
push
testl
mov
adc
add
and
sub
mov
xchg
xchg
into
mov
pop
outsb
paddsb
push
movsl
daa
shll
push
in
stos
sti
push
mov
mul
jnp
xchg
push
test
dec
int
and
lahf
pop
push
mov
pushf
push
or
or
xchg
pop
ret
fldl
inc
mov
jne
xor
loope
jo
or
daa
pop
dec
adc
mov
dec
inc
or
test
mov
pop
out
sarb
into
sub
pop
loopne
or
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jge
jns
call
mov
sbb
xlat
les
push
add
add
iret
pop
gs
dec
loope
hlt
sbb
cmp
js
ret
add
sbb
mov
jg
mov
mov
sub
push
ja
mov
pop
xor
jbe
adc
add
mov
mov
push
push
push
pop
pop
pop
sub
mov
dec
dec
dec
mov
cmp
jne
push
pop
jmp
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
xor
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
insl
rcll
add
loop
call
pop
dec
pop
xchg
xlat
cmp
add
push
out
mov
out
insb
int
ret
add
xor
xchg
in
in
insb
int
sbb
push
sub
cmp
imul
ja
mov
pop
jae
loop
mov
cmp
shrl
stos
ret
pushf
lret
push
out
stc
pop
mov
push
ret
pop
jle
pop
mov
dec
in
shlb
inc
lds
cmp
shr
fisubrs
movsl
insb
int
adcb
cltd
idivl
xchg
mov
cli
mov
jmp
adc
mov
cltd
imul
mov
js
jbe
mull
jmp
cltd
push
sbbl
iret
das
addb
mov
or
cmpsb
mov
inc
sub
lahf
sub
dec
into
fmuls
int
xchg
popa
xchg
mull
repnz
push
mov
subl
xchg
int3
xor
and
cltd
cmpsl
dec
test
orl
sbb
mov
repnz
idivl
adc
mov
imul
iret
mov
addr16
or
jnp
jbe
cwtl
xchg
jp
repnz
imul
mov
xor
xor
mov
bnd
and
shlb
clc
test
mov
movl
mov
mov
outsb
or
lock
xor
add
sarb
into
pop
adc
popa
mov
imul
inc
push
sbb
mov
nop
xor
into
cmpsl
sub
sarl
jecxz
jbe
sbb
data16
cmp
and
mov
pushf
sbb
dec
outsb
int
mov
xchg
lret
daa
jmp
imul
cmpsb
loopne
jle
or
das
orb
push
iret
pop
lods
mov
inc
pop
lcall
pop
js
mov
rclb
and
in
cmp
ss
rolb
and
push
pop
in
in
jno
arpl
popa
or
xchg
dec
ljmp
jb
push
pushf
insl
mov
mov
sti
jmp
scas
ret
xchg
iret
insl
inc
cmp
out
mov
gs
jne
fiaddl
push
fs
xchg
xor
sub
gs
mov
lret
hlt
xlat
test
mov
testb
pushf
lcall
add
adc
xor
inc
jle
mov
xchg
cmp
mov
lcall
push
out
sub
xchg
dec
sbb
fwait
pop
pop
test
ror
lcall
aad
outsb
jge
in
dec
pop
sbb
inc
cmc
lret
cwtl
cmp
xlat
fcoms
stos
or
cwtl
cmp
out
cmpsl
inc
stos
xorl
push
and
jmp
mov
cmc
dec
xchg
stos
and
cmp
push
and
aad
mov
cmp
and
cmp
cmpsl
cltd
cwtl
cmp
cmc
lret
cwtl
lret
add
and
test
mov
aas
popf
rolb
mov
cwtl
cmp
or
inc
pop
or
cwtl
cmp
cmc
cmp
push
mov
shlb
lods
testl
jg
int
cmp
cld
int3
cwtl
lret
out
add
cwtl
movsb
jp
popf
cmp
add
cwtl
loop
lahf
mov
add
cwtl
cmp
add
mov
cmp
mov
cmp
cld
int3
cwtl
movsb
jp
test
pushf
cmc
lret
adc
cmp
cmp
mov
cmc
and
adcb
cmc
lret
jg
lret
and
cmc
lret
adc
inc
loopne
cwtl
movsb
lahf
cwtl
jg
dec
int3
cwtl
cmp
cmc
push
xor
adc
cmp
mov
cwtl
stos
xor
inc
fwait
and
movsb
pop
dec
xor
cmc
jnp
mov
scas
imul
movsb
loopne
push
inc
loopne
cwtl
movsb
mov
mov
mov
sub
mov
cmp
orl
out
cmc
lret
mov
out
mov
lret
add
or
sbb
leave
popf
fbstp
nop
cmp
cmc
lret
cwtl
cmp
lret
pop
scas
imul
dec
mov
xchg
mov
xor
mov
jecxz
test
stos
or
cld
adc
adc
repz
dec
xor
mov
popa
cmc
lret
cwtl
jecxz
test
stos
or
cld
adc
mov
lahf
mov
stos
dec
pop
fildll
jge
xchg
div
ficoms
dec
xor
rcr
mov
xchg
push
movsb
cld
or
cwtl
cmp
fildll
jge
xchg
div
ficoms
dec
xor
mov
mov
cmp
fildll
jge
xchg
mul
fists
dec
xor
mov
inc
aas
nop
or
int
cmp
fwait
cmp
dec
stos
pushf
mov
cmp
xor
jb
mov
stos
dec
pop
fildll
jge
xchg
stos
dec
jb
mov
and
cwtl
cmp
mov
push
dec
or
add
ljmp
xor
dec
mov
push
xchg
fdivrs
out
js
gs
jg
lret
push
insl
addr16
cs
dec
mov
pop
movl
rcr
sbb
lret
cwtl
cmp
pop
ja
cmp
cmc
ficompl
cmp
fsubs
inc
in
lret
jg
mov
jns
pusha
aam
inc
cmc
lret
imul
subb
xchg
lods
out
loop
lret
adc
pusha
bound
push
bound
cmp
fildll
adc
lret
cwtl
push
sub
mov
push
mov
inc
loopne
out
inc
inc
mov
and
sub
loop
inc
mov
mov
out
daa
push
lret
mov
cmpsl
call
jb
mov
cld
dec
sbb
cmp
pop
mov
fmull
mov
int3
mov
xchg
test
addr16
int3
cwtl
cmp
cmc
lret
cwtl
cmp
cmc
lret
cwtl
cmp
cmc
lret
cwtl
cmp
lds
icebp
cmp
cmc
fistl
cmp
cmc
lret
cwtl
cmp
cmc
lret
cwtl
cmp
cmc
lret
cwtl
cmp
cmc
lret
cwtl
cmp
cmc
lret
mov
cmc
in
cmc
push
inc
int3
push
mov
mov
push
shlb
cmp
imul
and
aam
sub
ret
arpl
popf
push
in
sub
jge
pop
aad
sbb
sarb
dec
inc
xrelease
sbb
mov
mov
out
pusha
enter
fcoml
aad
jne
inc
pop
dec
xchg
ffree
jmp
subb
enter
icebp
test
lret
ret
inc
xchg
push
aad
mov
and
mov
in
out
pusha
mov
mov
lods
or
lds
ret
cmpsl
lret
or
add
lock
pop
divl
adc
inc
aas
mov
xlat
mov
pop
nop
mov
cwtl
inc
inc
scas
adc
dec
sbb
frstor
stos
mov
cmpsb
cmp
add
and
add
add
add
dec
pop
add
pop
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
gs
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
dec
pop
add
add
add
add
addb
add
es
pop
add
add
add
pop
add
add
add
add
jne
push
imul
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
or
lea
ret
out
or
cmp
adc
dec
nop
clc
jg
lcall
and
enter
sahf
add
aam
nop
mov
dec
mov
jecxz
sub
enter
inc
lods
repnz
pusha
push
inc
and
scas
push
fs
dec
or
xchg
adc
add
cmp
inc
add
push
je
imul
sbb
push
and
mov
shrb
and
add
inc
aam
mov
adc
add
pop
push
dec
bound
arpl
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
aaa
sbb
and
and
pusha
in
jo
insb
sbb
push
xchg
add
in
jb
cmp
push
sbb
sbb
or
and
fcoms
add
cmp
sbb
add
lock
test
sti
inc
add
in
adc
les
loopne
call
or
inc
inc
sub
je
movzwl
js
sbb
mov
cmp
push
pop
lods
or
cmp
xor
or
cmp
sbb
sub
and
nop
lock
push
mov
cmp
cmpl
jne
push
add
call
add
test
jne
faddl
pop
mov
mov
jb
aas
or
mov
add
lea
js
sbb
mov
addb
inc
cmp
jne
in
icebp
cmp
adc
push
popf
pop
nop
mov
xor
add
rcr
daa
add
dec
cld
add
mov
aam
sbb
iret
or
outsl
adc
pop
cwtl
add
push
add
iret
add
push
push
adc
mov
nop
push
push
pop
loopne
icebp
into
adc
add
xchg
add
sbb
aaa
pop
inc
nop
cmc
cmp
inc
addl
rolb
push
or
push
jne
adc
adc
call
xchg
add
or
inc
add
jb
push
pusha
add
ret
scas
sbb
hlt
jmp
ds
aas
push
or
ret
test
add
es
call
add
mov
xor
insb
call
ret
std
sbbb
fmul
ja
pop
and
jge
mov
incl
sub
cmpl
add
gs
push
or
inc
add
into
mov
cli
iret
mov
out
jmp
sub
cmp
stc
mov
adc
mov
add
test
dec
or
je
ret
test
sti
repz
pop
xchg
adc
add
xchg
cmp
adc
pop
mov
jnp
add
out
or
mov
inc
push
add
and
push
and
cmp
mov
test
je
add
sarl
add
adc
inc
in
mov
add
decl
clc
aad
fs
psubusw
dec
test
js
push
push
add
or
push
pop
jne
pop
scas
jns
inc
push
and
jle
ja
add
mov
insb
in
cli
dec
inc
add
dec
in
xor
or
incl
scas
push
mov
pop
sbb
rol
sub
jnp
add
repz
jae
nop
pmaxsw
and
add
add
xor
push
hlt
mov
stos
or
lock
push
jae
xchg
sub
lea
adc
adc
add
cmpsl
data16
in
jle
add
sbb
insb
or
adc
cmpsb
shrb
mov
hlt
jmp
ljmp
add
sbb
ret
xchg
and
loop
or
mov
or
inc
mov
lahf
cmp
pop
pusha
jle
es
mov
mov
std
push
mov
cmp
sub
push
add
pop
scas
shll
xor
dec
mov
or
xchg
popa
je
jl
add
adcb
or
add
leave
xchg
orb
inc
test
and
jae
mov
rorb
add
addl
push
mov
cmp
mov
add
aas
xchg
data16
pop
aam
xor
ud2
jbe
call
and
pop
add
aas
je
lods
inc
dec
add
mov
adc
xor
leave
add
add
int3
arpl
cmp
and
movsl
scas
and
push
push
call
int
aaa
adc
dec
pop
xchg
pop
je
cli
adc
aas
xchg
in
add
xor
push
jne
cmc
loopne
test
jle
lea
sub
inc
pushf
rcll
das
cmpsb
add
into
aaa
or
xchg
push
mov
push
mov
mov
pop
insl
subb
dec
xor
rolb
jne
pusha
in
adc
sbb
pop
lods
cmp
or
jp
inc
test
cmpl
aam
adc
in
inc
and
or
push
add
dec
xor
rolb
stc
rcrl
sbb
jecxz
ss
add
push
or
fidivs
cwtl
lret
add
sub
lds
int3
mov
mov
test
je
pop
add
and
add
xchg
adc
testb
or
add
imul
in
loopne
push
push
dec
fs
xor
sahf
mov
aam
sub
inc
add
jle
movsb
adc
int
popa
and
sahf
mov
mov
aas
clc
dec
pusha
mov
cmpl
mov
adc
add
hlt
add
add
add
iret
and
jl
xchg
jno
add
mov
hlt
push
xchg
ret
add
and
in
or
cs
les
dec
stc
repnz
sldt
push
sbb
xchg
jns
add
sub
out
mov
pop
hlt
leave
adc
cmp
aad
cmp
mov
in
mov
je
xorl
in
cmp
xor
pop
push
lret
inc
sbb
mov
or
pushf
in
fstpt
loopne
push
cmp
xchg
sbbl
dec
or
cmp
cmp
add
add
ror
add
add
sub
js
pop
hlt
jmp
pop
movsl
popa
ficompl
outsl
xor
in
pop
or
testl
and
mov
dec
cwtl
in
push
shll
add
or
push
cld
adc
xor
sbb
or
cmpsb
adc
cmc
mov
add
jmp
pusha
cli
or
jl
adc
xchg
rolb
ret
cmp
mov
cmp
or
or
ljmp
add
rolb
loop
add
jg
add
adc
pop
cmp
mov
jne
sub
lret
mov
or
add
ret
and
bound
fwait
dec
and
loope,pt
xchg
push
dec
je
sub
fiaddl
popa
push
inc
sub
scas
xor
test
pop
and
and
decb
inc
cmpsl
shlb
cmp
mov
push
adc
push
insb
add
push
add
adc
add
fdivs
mov
addr16
add
pusha
fsubs
test
jne
in
xrelease
xor
inc
or
addl
hlt
xchg
mov
clc
add
or
es
mov
push
aaa
sub
movsl
repz
jg
leave
sarb
cmc
sarb
push
imul
add
xchg
and
mov
and
inc
into
add
in
repnz
mov
sub
add
lcall
inc
or
call
cmp
pop
clc
shll
dec
rcl
xor
inc
fisttps
mov
sub
sbb
addl
pop
aaa
push
test
xor
dec
ret
ss
dec
adc
adc
es
xchg
sbb
adc
adc
xchg
pop
sbb
int3
sub
cmp
jl
xchg
cmp
inc
jns
add
add
sbb
nop
mov
andb
aad
or
std
movsb
add
inc
loopne
mov
enter
test
adc
xchg
sbb
scas
mov
sub
rclb
imul
orl
lock
mov
add
dec
mov
add
cmp
push
clc
pop
and
fsubs
or
addr16
sub
xor
and
cmp
or
xchg
je
mov
rclb
call
mov
add
xchg
insl
mov
add
addl
daa
adc
xchg
fxch
sahf
push
aam
icebp
adc
push
lea
xor
mov
sub
inc
add
mov
add
int3
test
push
inc
je
add
xor
jb
add
add
push
push
pop
mov
stos
rorb
jne
push
pop
shr
test
mov
mov
push
stos
ja
jg
mov
sub
pop
mov
jnp
or
inc
mov
jmp
inc
pop
sub
scas
mov
push
in
or
adc
dec
inc
dec
add
fiadds
jmp
jp
dec
movsb
add
or
jge
cmpsb
test
aas
dec
dec
adc
add
xor
fsts
in
or
out
repz
xor
dec
jmp
dec
cmc
pop
ds
xorb
cmp
adc
xchg
int3
dec
jmp
adc
push
repnz
lock
sbb
push
lahf
dec
xchg
add
aam
push
arpl
andb
mov
or
add
push
es
xor
pop
xchg
mov
sti
rolb
or
orl
xchg
fxch
and
test
jge
je
and
and
add
inc
nop
push
adc
jne
sbb
repnz
add
hlt
test
mov
or
fs
xchg
push
mov
mov
loope
popa
cmc
push
xchg
out
stos
mov
add
daa
or
rorb
jg
push
orb
push
xchg
sub
xor
scas
push
outsl
test
xchg
push
or
pop
add
push
int
push
and
ret
add
cmp
add
sub
adc
cmpb
loopne
lock
or
jb
add
test
dec
cltd
pop
and
dec
icebp
loopne
test
clc
jne
dec
inc
or
jns
or
adc
movsb
shlb
add
add
mov
pushf
push
or
stos
add
loop
push
int3
cmpsb
aas
inc
add
cwtl
dec
sub
push
inc
push
sbb
add
adc
cmpsb
mov
add
popf
add
cmp
sub
jno
push
add
mov
add
cmp
adc
xor
je
je
add
cli
add
push
or
aaa
cmp
sub
mov
cwtl
push
push
or
and
mov
mov
add
mov
int
cmp
lods
and
mov
lds
in
adc
lock
pop
push
mov
push
push
lock
mov
test
add
or
add
movaps
lahf
cld
mov
jne
fsub
es
adc
repz
push
jge
push
cltd
pop
sub
or
bound
add
testb
add
sub
roll
sahf
add
jne
and
fstl
pop
sub
cmp
jmp
movsb
xor
pop
movl
addr16
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
or
mov
xlat
jmp
xor
add
ret
add
lock
loop
xchg
loopne
adc
jmp
gs
xchg
and
rorl
inc
pop
movl
cmp
xor
add
cs
push
add
and
fcoms
jp
mov
and
jns
add
imul
jmp
sbb
cmpsl
dec
fnstsw
add
and
add
and
xorl
mov
jmp
ss
xor
add
push
repnz
push
ja
add
lock
sarb
aam
adc
add
lret
xchg
call
mov
mov
xchg
test
and
nop
mov
sub
mov
ret
cwtl
mov
stos
mov
fsub
inc
sbb
jne
add
jo
or
loopne
sbb
mov
and
es
pop
pop
cmp
stc
aad
add
push
gs
adc
rcl
xlat
xor
loopne
shl
add
stos
scas
rolb
add
rorl
xor
mov
call
cmp
out
add
int3
enter
call
fcmovnu
lret
add
loopne
jecxz
in
in
pop
push
push
push
push
sub
pop
add
pusha
loopne
push
add
popl
stc
rcr
mov
nop
push
imul
scas
in
xlat
push
cmp
add
je
mov
js
add
rep
cld
push
and
pop
jmp
pop
cmp
or
sub
add
sbb
add
inc
rorb
add
xchg
test
or
jp
cmp
jbe
cmc
cmpb
jne
or
add
out
lcall
sbb
inc
loopne
mov
add
push
push
adc
lock
loope
add
dec
sbb
pop
dec
add
mov
into
add
xor
testl
ja
inc
js
xor
cs
lea
push
pop
and
add
inc
cmp
jbe
add
or
xchg
cmp
or
push
pusha
jl
jmp
arpl
call
inc
xorb
movzwl
add
sbb
repnz
inc
add
mov
push
add
add
call
testb
mov
xor
in
js
in
or
sbb
pop
jmp
jecxz
lret
sbb
je
subb
add
push
jg
push
pop
sbb
add
bound
sbbb
mov
sbb
movl
and
or
jb
cmp
roll
pop
add
inc
xchg
hlt
jle
add
pcmpeqd
ror
call
leave
mov
xor
push
shr
add
fwait
loopne
and
push
dec
into
popa
out
pusha
ret
es
xor
enter
fnstenv
dec
mov
add
cmp
cmp
mov
ret
push
sbb
jmp
enter
pop
lock
out
je
pusha
mov
cmp
jne
xor
adc
dec
std
mov
add
add
sbb
xchg
sbb
xor
jp
jl
pop
cltd
or
push
jmp
add
xor
nop
mov
mov
adc
or
add
or
stos
adc
dec
add
stos
pop
inc
imul
inc
mov
or
int3
push
nop
xor
dec
iret
mov
cltd
xor
sub
and
in
inc
add
push
add
xchg
xor
pop
pop
jge
test
movb
hlt
jl
loopne
add
stc
inc
add
add
fnstenv
in
shll
mov
dec
jne,pt
add
sbb
add
cltd
enter
sbb
xor
mov
mov
push
inc
add
push
and
sbb
sub
or
add
rolb
popa
aas
pop
mov
push
sub
sbb
test
sarb
jmp
iret
add
and
ja
sbb
sub
rclb
jne
dec
mov
adc
pop
imulb
mov
mov
fdivrs
lock
out
cmp
in
inc
push
fdivrl
cmovbe
je
xchg
add
popa
jb
mov
jbe
or
adc
pop
ret
or
add
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
mov
repnz
inc
cmpsl
push
jae
out
push
xchg
xor
cmp
in
add
push
mov
pop
sbbl
dec
add
test
mov
lods
sbb
lahf
pop
add
adc
xchg
sub
xchg
loop
or
add
addl
add
movsl
sbb
nop
jmp
pop
xor
xchg
add
push
push
pop
pop
add
adc
dec
add
mov
es
or
pop
add
push
cmp
dec
clc
lea
xchg
jnp
sbb
call
dec
jo
sub
push
pushl
and
inc
hlt
xchg
ret
ja
add
or
xchg
loope
pusha
cmp
add
sbbl
addr16
push
inc
add
push
arpl
dec
cld
adc
out
mov
jmp
clc
or
loop,pt
int3
ret
mov
push
rorb
push
push
inc
push
inc
pop
add
outsl
jb
popa
outsb
fs
add
jo
push
dec
loopne
add
dec
popa
sbb
add
jne
movsb
imul
jo
int3
lods
jbe
ja
push
aam
leave
orb
sub
fdivr
sbb
adc
inc
lret
ret
sbb
add
xor
ss
mov
push
pop
add
call
mov
jmp
add
xchg
movlps
mov
call
or
mov
sbbb
lret
xor
loope
add
mov
sub
fidivl
cld
add
stos
mov
fadds
stos
sarl
and
pop
arpl
loop
mov
js
imul
inc
sbb
in
cmp
aam
sbb
add
testb
icebp
jnp
xorb
and
dec
add
cmp
add
adc
or
rcrb
js
shl
mov
les
or
push
push
cltd
add
and
enter
movl
ret
lods
fs
ret
pop
orb
sub
xchg
cld
mov
pusha
addb
mov
and
mov
mov
into
add
call
adcb
fstps
loope
lahf
or
add
mov
push
divb
jp
add
sbbb
add
jb
imul
and
or
and
or
pop
pop
pop
add
mov
add
or
dec
push
orl
mov
add
and
or
mov
add
push
clc
pushf
inc
test
cmp
mov
add
call
orb
add
loope
add
push
imul
cli
in
push
sbbb
sbb
fcmovnb
push
push
bound
pusha
enter
mov
add
shl
xchg
adc
add
push
mov
cld
jmp
fs
clc
push
adc
xchg
rcrb
inc
add
pusha
sub
jmp
or
pop
pop
mov
pop
ret
add
jl
push
add
imul
pop
pop
inc
pop
dec
sub
push
and
mov
jbe
cmpb
imul
cmp
cmpsb
jne
cmp
popa
fiadds
dec
adc
loopne
add
call
xchg
or
sarb
lock
add
push
adc
out
mov
mov
cmp
into
add
out
push
je
push
pop
movsl
add
jbe
cmp
loop
and
insl
xchg
push
ret
mov
les
xchg
js
inc
stos
popa
xor
lret
or
push
or
push
stos
cmp
lods
popf
daa
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
jle
add
leave
sbb
hlt
enter
das
mov
dec
add
add
jo
mov
insl
mov
add
aad
sbb
movl
stc
rcll
add
jecxz
ss
xor
xchg
mov
jmp
add
enter
je
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
cmp
add
in
lds
inc
push
out
dec
pop
cs
and
add
add
jne
pop
fs
jae
add
pushf
or
popa
into
je
adc
je
add
add
dec
add
popa
mov
mov
cld
xchg
jmp
ja
jne
add
sahf
inc
adc
daa
inc
inc
icebp
insb
hlt
xchg
and
inc
mov
xor
pop
lcall
inc
lea
call
or
rcl
and
mov
movsb
andb
movl
mov
pusha
and
incl
dec
cmp
pusha
pusha
push
push
jge
add
enter
push
add
imul
push
mov
ds
mov
ljmp
jne
or
andb
cmp
or
movsb
xchg
ljmp
mov
adc
add
mov
sub
cmpsl
dec
add
inc
pop
xchg
fs
mov
je
les
inc
add
rol
jmp
cmp
int
push
shlb
add
dec
test
sbb
lret
cmpsb
add
add
add
sub
pop
push
mov
cmp
adc
mov
jbe
xchg
cld
cmp
aas
jmp
add
mov
sub
add
ss
xor
or
adc
sub
add
inc
adc
and
jmp
add
push
mov
add
stc
sub
enter
sbb
jecxz
inc
int
and
iret
push
and
jl
jge
push
in
into
lock
fdivr
push
cld
or
frndint
push
add
roll
imul
test
pop
ret
sahf
and
repz
inc
cmpsl
jmp
lods
add
mov
cmp
cmp
fs
xor
dec
fimull
lock
rclb
sbb
sti
clc
add
add
sbb
inc
add
inc
sub
lea
bound
mov
push
movaps
cmp
dec
stos
pop
and
pop
movsb
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
adcb
add
add
and
mov
mov
sub
loope
push
sahf
jo
add
daa
push
enter
fistpl
lock
aam
add
out
cmp
adc
mov
insb
or
mov
add
movsb
jp
sti
cmp
fucomi
js
pop
inc
xor
test
repz
sbb
fbstp
ds
shrl
jg
in
pusha
mov
pushf
sbb
mov
movsl
add
add
lcall
jnp
jle
andb
pop
cmc
or
cmpl
nop
pop
mov
or
push
in
dec
push
leave
cli
inc
or
inc
mov
pop
push
mov
je
pop
call
mov
add
push
or
jne
movb
rcll
sub
inc
call
inc
sub
lea
add
inc
xchg
push
push
shll
iret
cmp
sahf
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
mov
ficoml
mov
or
add
incl
mov
push
pop
push
add
lcall
add
adc
sbb
sbb
and
sbbb
pop
xchg
sbb
sub
leave
mov
fxtract
xchg
shlb
add
cmpb
ljmp
add
pop
mov
sar
push
cmp
call
jne
nop
sbb
mov
aaa
and
push
push
add
mov
inc
jno
adc
sahf
sub
or
jnp
in
cmp
dec
adc
shrl
cmp
jne
or
mov
or
fsubrs
add
jbe
pop
fs
or
pop
and
jge
jne
mov
push
pusha
jg
pop
push
outsl
add
push
sub
orb
add
adc
js
das
add
mov
daa
add
pop
add
mov
jb
mov
outsb
add
inc
daa
jo
mov
out
inc
sub
lock
add
cmp
sub
stc
jns
add
mov
xor
jmp
xchg
outsl
neg
add
adc
inc
cs
add
inc
sub
jl
lock
test
lret
pop
push
lea
push
xlat
js
add
xor
add
test
lret
add
dec
stc
fiaddl
push
lock
inc
inc
jg
push
jne
mov
les
add
pop
in
jmp
sbb
add
inc
jl
xchg
dec
sub
sbb
jbe
inc
mov
push
jo
or
or
pop
mov
cld
add
clc
rclb
movb
inc
push
dec
mov
addb
js
xchg
sub
cwtl
hlt
lock
pop
mov
fs
mov
or
clc
cmpsl
icebp
ftst
ljmp
xchg
and
add
addr16
jge
leave
mov
sbb
push
and
call
add
andl
ror
je
xor
es
stc
mov
nop
loope
pop
inc
xchg
subb
cmp
push
mov
loop
mov
push
addl
push
cmp
stos
pop
pop
inc
push
es
add
cli
or
les
mov
adc
mov
sarl
pop
sub
in
daa
in
add
subl
pop
and
xchg
push
xor
xor
in
add
jbe
push
and
cld
inc
movsb
add
nop
push
push
push
mov
je
push
repnz
mov
pop
add
dec
xor
push
scas
or
jo
ljmp
mov
cld
testl
and
sbb
mov
jns
loopne
or
add
cmp
add
call
jp
push
dec
xor
adc
lea
testl
popa
scas
mov
jno
add
pop
mov
inc
push
inc
cmpsb
stc
dec
add
jmp
pop
shrl
enter
pop
adc
add
add
dec
mov
add
xchg
cli
arpl
add
sysenter
pop
and
dec
jg
aam
jno
mov
lret
or
push
push
roll
push
push
push
test
in
or
cli
dec
loop
and
pop
shlb
mov
adc
cli
jle
cmpsb
fadds
mov
into
push
orl
push
out
lods
inc
dec
and
pop
addps
repnz
jmp
rol
dec
lret
dec
jg
sub
add
scas
out
leave
sub
shlb
add
ret
ljmp
pop
inc
pop
dec
dec
add
pop
orb
pop
ds
xor
aaa
mov
testl
cmp
inc
adc
pop
mov
cmp
push
adc
pushl
loope
enter
add
jmp
push
popa
lret
mov
xchg
bound
out
in
add
nop
dec
rolb
or
inc
addb
mov
mov
out
sub
nop
xchg
in
movsb
pop
adc
imul
out
dec
int3
cmpsb
sub
add
insb
mov
add
add
pop
sub
das
or
sbb
hlt
sub
cli
add
je
push
in
fnstcw
aad
bound
stos
sahf
push
mov
sub
fiadds
jl
cmp
inc
jle
and
icebp
hlt
iret
in
add
jo
add
add
lea
cmpsb
jg
xchg
sti
push
push
lock
std
xor
xchg
aaa
jns
cmp
cld
lcall
add
inc
pusha
icebp
jle
jmp
rclb
mov
pop
cmp
repz
mov
je
movsl
add
or
scas
inc
pop
push
clc
adc
test
mov
and
and
cld
aad
and
and
sbb
ret
sbb
aad
xor
and
jo
push
scas
sub
add
adc
cli
nop
add
mov
adcb
add
aam
lret
pop
fistpl
repz
inc
jg
add
inc
movsl
inc
adc
pushf
push
mov
jo
in
push
loopne
std
loop
and
enter
nop
pop
sbb
and
jne
pop
clc
jl
or
scas
stos
repz
ret
mov
dec
pop
addb
iret
jmp
gs
leave
shll
or
push
pop
xor
push
movb
dec
pop
sbb
xor
pop
add
lcall
add
push
pusha
cmp
add
sbb
mov
pop
push
push
add
bound
sbb
call
icebp
shrl
pop
test
enter
pop
mov
dec
test
scas
jl
inc
push
icebp
cwtl
cmp
call
mov
mov
stc
loope
jb
fisttpll
push
in
push
pop
push
inc
cmpsl
clc
push
or
sbb
shlb
add
std
jnp
add
and
enter
mov
xchg
pop
mov
mov
mov
or
and
mov
pop
fistl
sahf
pcmpgtw
sub
sbb
cwtl
scas
pop
sub
testl
incl
adc
pop
repz
add
aad
push
xor
hlt
sub
add
jno
jmp
shrl
sbb
cs
aas
stos
cmpsl
push
add
lock
jmp
inc
sbb
setb
or
int3
movsb
popf
add
jmp
and
mov
lock
xchg
sub
push
and
shlb
cmp
inc
and
pop
das
jmp
jp
or
call
mov
sub
or
cli
mov
repz
ret
xor
xor
mov
popa
sub
pop
cli
xchg
or
xor
cwtl
add
and
mov
cltd
cwtl
cmp
into
cmp
xor
clc
push
or
pop
sarl
pop
stos
add
and
cs
addb
pop
cmp
sarb
xlat
or
push
orb
in
cld
add
pop
clc
dec
shll
mov
cli
adc
iret
call
and
jmp
dec
adc
add
push
xor
jl
add
inc
dec
xchg
dec
lock
add
or
and
cltd
xchg
in
aam
fstpt
add
cmp
addb
sbb
mov
add
ds
adc
lock
mov
pusha
sbb
cvttps2pi
ljmp
cmp
shll
add
cltd
jmp
les
inc
adc
popa
test
jge
and
subb
mulb
dec
jne
jmp
pop
and
loop
cmp
fs
add
lcall
or
and
cltd
jo
pop
sbb
pushl
cwtl
incb
pop
add
aaa
ret
jmp
mov
mov
inc
imul
add
pop
add
je
or
add
push
sub
inc
xor
mov
xor
test
push
in
movsb
scas
xchg
aaa
nop
nop
mov
mov
add
ficoml
jne
adc
fistpll
in
cmp
loopne
mov
ljmp
jno
js
imul
add
inc
sbb
cs
mov
add
addr16
pop
addb
push
or
jnp
sub
lods
mov
fdivs
dec
sub
inc
cmp
stos
add
fisttps
xor
inc
mul
shld
loopne
testb
das
insb
push
mov
add
scas
or
popf
adc
popa
xchg
inc
fcoms
add
sub
mov
nop
ret
or
cmp
std
aad
jne
cmp
jb
faddl
je
loop
and
add
mov
inc
ret
sub
or
es
or
adc
call
mov
popa
cmp
add
xchg
std
test
fisttpll
dec
daa
jmp
adc
ja
cmp
sti
xor
pusha
push
cmp
jae
sbbb
ljmp
ret
jg
push
ss
movd
xor
xchg
loop
add
or
in
cmp
pop
mov
add
inc
pusha
ret
xchg
nop
push
add
mov
or
sub
sbb
fdivrl
add
push
adc
jge
push
mov
pop
add
xor
pop
lea
inc
lock
push
inc
cmpsb
add
xchg
push
xchg
add
mov
es
fwait
scas
dec
pop
sti
add
mov
sub
loope
mov
mov
test
fyl2xp1
xor
dec
jno
add
and
jns
mov
dec
cltd
dec
jmp
test
ror
call
sub
outsl
lret
cmpl
fldl
adc
sub
sbb
lahf
aam
repz
clc
test
cld
icebp
int3
jmp
add
jge
stos
daa
push
inc
add
jb
push
mov
scas
mov
mov
jl
or
std
in
xor
mov
or
out
add
sbb
xor
ret
mov
cmpsb
daa
cwtl
imul
ja
add
aam
fdivs
jne
or
jmp
pop
cmp
add
sti
or
cs
dec
stos
sbb
push
stos
testl
add
jbe
xchg
xchg
pop
out
add
xor
xor
xor
pop
int3
aam
and
imul
sbb
push
pop
mov
add
inc
sbb
add
cmpsl
mov
imul
addr16
inc
sbb
add
shlb
inc
inc
imul
fcomps
add
les
and
push
dec
pop
addps
inc
mov
push
add
sub
cltd
imul
jae
decl
ja
add
and
nop
lcall
stos
or
dec
loopne
push
cli
lods
test
pop
jo
sbb
lods
inc
lcall
sbb
jge
mov
add
add
and
jbe
test
push
lock
mov
mov
xor
sub
inc
inc
add
cli
mov
and
rolb
jge
sub
cmp
jle
push
cs
pop
add
insl
call
fmull
cmp
cmp
push
ds
andl
popl
add
xchg
sbb
sbb
sub
jno
or
or
lock
loop
nop
pop
jg
das
push
in
add
lods
popa
jmp
decl
ja
or
lock
fadds
ljmp
push
xchg
insb
or
call
popf
xor
leave
loopne
sbb
cs
adc
push
add
push
enter
hlt
mov
sub
ret
dec
cld
daa
adc
cmpsl
add
pop
add
mov
or
sub
lock
push
add
xor
clc
adc
jle
int
sahf
xchg
dec
jo
add
aaa
jl
inc
push
push
dec
adc
dec
add
lea
add
ret
movsb
ret
out
jmp
dec
xor
mov
mov
push
pop
nop
mov
push
call
or
or
repnz
mov
jns
test
add
je
xor
pop
mov
xor
addl
ret
jl
inc
sbb
mov
adcb
pop
push
push
mov
in
out
clc
pop
ds
or
adc
fimull
fisubrl
add
pop
sbb
js
push
sbb
pusha
notb
xchg
push
mov
sub
outsl
add
ret
mov
add
cmp
push
or
add
jg
adc
adc
hlt
out
jmp
push
cmpsb
xchg
lahf
mov
fwait
out
jnp
je
add
dec
sti
jo
dec
hlt
ret
jge
xchg
je,pt
xor
jns
or
cmp
and
xorl
data16
push
add
fcoml
test
adc
punpcklbw
leave
dec
cmp
fsub
inc
or
add
jne
shl
add
cmp
mov
add
inc
ljmp
xlat
sub
add
test
pop
push
add
mov
cmp
xchg
add
add
cli
and
movsb
jg
push
push
nop
pop
xor
movb
sbb
shl
scas
dec
push
jo
mov
inc
addr16
jmp
test
mov
sub
push
addb
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
xor
fists
imul
adc
clc
push
mov
outsb
pop
cwtl
insb
xor
cs
cmc
add
inc
inc
je
outsl
outsb
add
popa
mov
add
adc
test
loopne
add
movsb
jge
jecxz
sub
rol
out
fs
add
or
dec
add
add
jno
add
pop
adc
xchg
ds
dec
or
or
pop
lea
les
cmp
xchg
outsl
test
dec
add
shlb
add
nop
dec
jmp
mov
cmp
jp
dec
dec
repz
data16
stos
jae
push
inc
inc
push
add
add
sbb
andb
movsb
or
xchg
pop
addr16
sbbb
add
test
pop
and
jne
cs
adc
mov
add
inc
cmp
scas
add
jne
xchg
jb
xor
jle
jns
inc
mov
testl
xchg
loopne
push
or
je
in
jb
rcrb
arpl
dec
hlt
jae
fcomps
pop
dec
cmpsb
js
and
sub
and
mov
ljmp
mov
dec
adc
and
push
add
icebp
mov
ret
and
out
cmp
add
testb
cmpsb
push
imul
imul
push
pop
and
dec
and
pop
repz
roll
cld
cmp
xchg
cltd
dec
add
jmp
mov
cmovnp
and
push
cld
jne
xchg
add
dec
mov
cmp
fmull
ret
add
ficoml
cld
lods
add
je
loop
add
add
jge,pt
icebp
inc
arpl
add
pop
xor
in
lock
sbb
fists
mov
stos
shrb
daa
iret
sbb
dec
or
inc
mov
sbb
jge
push
add
pop
bts
setle
add
cmpb
aam
add
pop
and
sbb
popa
adc
or
lea
rclb
mov
nop
add
sti
mov
divl
sarb
mov
leave
loope
notb
push
rolb
dec
xor
movsb
add
jno
aas
mov
sub
and
jne
cmp
cmp
movb
inc
mov
add
or
jle
add
jmp
les
cmpb
ret
inc
xor
cs
daa
sbb
mov
mov
paddsb
shrb
mov
jnp
add
mov
rorb
push
add
jae
push
sub
push
add
lods
fisubl
cmp
jmp
add
add
mov
dec
fstl
ss
inc
leave
adc
jae
pop
enter
cmp
cmp
mov
mov
scas
mov
test
mov
mov
outsb
jo
add
cmpb
pop
inc
mov
sub
dec
jecxz
sub
adc
jmp
push
cmp
mov
dec
pop
or
jle
add
sub
xorl
mov
fsts
outsl
imul
xor
adc
add
test
in
pop
ret
rorb
bound
add
jle
fistpl
iret
add
or
push
lret
data16
sbb
add
mov
and
icebp
and
cmp
sbb
add
push
adc
pop
es
sbb
psraw
sub
mov
add
pop
xor
add
mov
sub
icebp
in
and
pop
push
add
sub
test
push
orl
cli
add
push
inc
or
and
adc
sbbb
mov
lock
lods
inc
rolb
roll
sarb
rol
add
jmp
stc
inc
cmp
inc
rcll
or
inc
sbb
pushf
push
mov
sub
mov
push
dec
jbe
push
pop
dec
adc
jb
add
add
sbb
inc
repz
xorl
add
ficoml
ljmp
cmp
cs
add
dec
mov
int
dec
adc
cmp
lret
adc
jl
mov
inc
jl
add
stos
subb
add
int3
xor
and
into
mov
add
pop
aam
test
pop
int
les
popa
push
iret
ret
add
je
and
adc
cmp
cs
lods
cmovs
mov
decl
rol
add
lods
in
and
jae
test
pop
add
jbe
mov
and
push
sbb
push
pusha
mov
push
icebp
mov
push
mov
mov
cld
mov
dec
mov
inc
int3
add
jne
cs
add
mov
and
roll
sbb
add
pop
rolb
sbb
xor
ja
sub
jmp
add
cmp
add
rcrb
add
dec
adc
int
ja
pop
mov
mov
pusha
sbbb
and
jmp
mov
cmpsl
add
dec
sbb
pop
aad
jp
int3
andb
ret
sbb
push
xor
jo
imul
or
add
jle
inc
push
shrl
ljmp
nop
sbb
mov
jmp
fistl
push
clc
inc
cmp
cmp
pop
mov
pop
xor
daa
ret
loop
mov
ja
sbb
leave
inc
andb
sub
mov
dec
shrb
ljmp
sbb
pop
movsb
jno
and
add
nop
sub
loopne
pop
repnz
not
dec
sbb
pop
jbe
nop
xchg
mov
xchg
add
dec
xlat
aaa
push
jecxz
out
ja
nop
je
inc
cmp
mov
jo
pop
out
add
xchg
fldt
fmulp
add
call
add
cmp
sub
rclb
and
call
xor
mov
sbb
and
jbe
jge
jge
add
hlt
sub
flds
out
scas
adc
addb
aas
sbb
and
inc
add
or
or
cmpsb
ret
leave
add
hlt
adc
add
andl
sub
imul
idiv
mov
cld
mov
and
aam
cltd
test
xchg
xchg
cwtl
xor
and
mov
add
mov
jecxz
xor
add
leave
sbb
lds
mov
rolb
jbe
imul
fimuls
add
mov
inc
bound
lods
inc
addb
xlat
fadds
lods
add
xor
xchg
mov
add
or
sbb
test
int3
into
sbb
add
test
add
pop
mov
ror
movsl
push
sbb
nop
add
outsl
cmp
and
jo
lret
hlt
into
jo
add
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
es
xchg
jp
pusha
cmc
pop
out
jg
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
dec
daa
popl
fiadds
adc
push
push
rcrb
jmp
add
fs
aam
imul
pop
add
dec
jp
iret
mov
cmp
fadds
ds
push
jl
pop
scas
mov
pop
or
cmpl
leave
dec
dec
in
xchg
jo
add
xor
in
hlt
cmp
mov
mov
push
movsl
mov
popa
es
mov
sbb
clc
add
daa
mov
and
push
fwait
xchg
and
leave
push
add
and
aad
bound
or
xor
aas
push
cmpsl
add
enter
in
hlt
or
ficoms
add
or
jno
cmp
or
xchg
add
lock
mov
stc
dec
call
jne
or
fisttpl
or
fisubl
add
sbb
cli
movl
outsb
pop
shlb
add
loopne
shr
in
xlat
add
cmp
jb
ja
mov
repz
add
sbb
inc
loop
out
add
ret
adc
add
push
repz
shr
test
sti
or
cmp
or
jne
or
xor
add
add
ljmp
add
and
scas
stos
scas
hlt
xchg
das
add
sub
add
pop
nop
pop
shrd
lds
dec
mov
lock
add
xchg
cmc
bnd
add
fcomp
inc
xor
addl
mov
and
stc
and
jl
icebp
mov
imul
stos
shl
lds
loop
cmp
jo
push
sar
add
mov
cmp
int
lods
dec
jmp
js
icebp
rorl
call
add
test
xchg
rcrl
jne
add
aaa
test
loop
add
les
cld
ja
in
pop
add
push
movsl
xchg
call
inc
in
add
inc
shlb
add
push
shlb
add
or
mov
push
std
jmp
add
add
inc
cmp
inc
testb
data16
incl
mov
or
xchg
or
stos
cmp
imul
lods
inc
sub
or
adc
sbb
aam
outsl
sub
add
cmpsb
and
or
jno
minps
dec
verr
xchg
sbb
leave
and
sub
addr16
ljmp
and
call
adc
enter
jb
or
or
xchg
add
xor
inc
add
int3
xlat
add
jge
xor
ja
adc
sbb
inc
add
cmovnp
mov
or
idivb
add
adc
mov
add
cmp
sbb
add
call
add
sbb
push
jne
aas
xor
sub
dec
ja
push
adc
xchg
adc
pop
mov
add
sbb
mov
lods
sub
daa
dec
sbb
mov
add
sub
xor
rol
adcb
cmpsl
pop
mov
add
loopne
mov
pop
mov
cmp
aam
movsb
xor
push
stos
or
push
fsub
mov
mov
mov
orl
movsb
or
adc
dec
cmp
jnp
add
mov
jle
jne
cmp
push
add
popf
mov
dec
ja
ds
in
add
inc
mov
push
or
call
cmp
mov
adc
popf
add
cmp
xor
mov
mov
rorl
jmp
dec
loopne
inc
in
cmp
xor
cmp
xor
and
setno
sub
and
xor
aaa
pop
inc
js
lods
or
add
and
push
add
jb
cmp
sbb
call
addl
jb
cmp
andl
int3
enter
ja
mov
add
dec
and
in
jb
or
xchg
sbb
and
enter
pop
jb
or
sbb
and
push
in
add
cmp
add
mov
and
ret
jb
cmp
scas
hlt
add
and
insb
enter
fs
cmp
shlb
and
dec
or
dec
out
rcrl
dec
lods
xchg
xchg
movzwl
rolb
shl
adc
ret
call
sarb
mov
and
sbb
add
orb
cmp
xorb
scas
mov
jnp
xor
push
subl
imul
add
mov
mov
shlb
jae
in
xor
aam
or
icebp
xchg
repnz
enter
cmc
or
negb
out
add
stc
xchg
cli
enter
pop
jb
cmp
sbb
loope
sub
and
xchg
in
in
out
jb
cmp
adc
adc
jmp
gs
inc
in
or
in
sbb
inc
out
xchg
adc
shll
add
jb
cmp
sbb
subb
and
xchg
fcmovne
add
in
jb
cmp
sbb
shlb
and
xchg
add
enter
jb
cmp
sbb
leave
mov
xchg
lret
add
in
jb
and
iret
inc
inc
mov
mov
xor
mov
in
pop
test
and
in
jb
cmp
mov
dec
call
sbbb
aas
adc
inc
test
out
mov
cltd
loopne
or
cmova
mov
pop
rolb
xor
add
rorb
js
shlb
ja
add
popf
repz
fiaddl
adc
pushf
add
dec
gs
jo
pop
nop
stc
pcmpgtb
test
loopne
pusha
jmp
add
gs
outsl
add
cmp
clc
movsb
pop
divb
and
jp
and
or
dec
outsb
add
jno
lret
pop
cmp
inc
jp
and
or
pusha
subb
insb
add
nop
cmp
pop
mov
mov
fs
insb
jno
pop
pusha
enter
or
push
adc
add
or
xor
or
or
imul
mov
xchg
sarb
scas
outsb
gs
sbb
fimuls
loopne
dec
jbe
add
xor
sbb
inc
addr16
addb
or
pop
dec
lds
xor
enter
int3
popw
dec
mov
jbe
sbb
fs
add
sarb
clc
adc
mov
sarb
and
pop
rorb
xchg
push
insb
inc
popa
xchg
mov
outsb
pop
push
fs
lea
mov
punpcklbw
int
test
int
xor
push
repnz
xchg
add
stc
jp
mov
outsl
mov
fcoms
shll
adc
inc
inc
arpl
push
mov
pop
insb
popa
and
push
add
pop
sub
push
loopne
jns
add
in
nop
pushf
pop
push
jb
add
or
imul
int3
push
repnz
dec
je
cmp
loope
pop
hlt
add
inc
ds
xchg
or
lods
pop
in
popf
add
gs
push
std
inc
dec
popa
rcrb
lea
jo
add
insb
popf
pusha
inc
push
or
test
jb
jae
mov
pop
sub
lods
xchg
cmp
sbb
aas
nop
shr
adc
add
add
xor
push
and
in
mov
inc
ret
pop
ljmp
pop
or
adc
xorb
mov
stc
mov
jge
add
pop
dec
dec
and
into
imul
and
insl
jnp
add
pop
or
out
add
mov
fnstcw
xchg
fmuls
jge
push
daa
pop
pop
hlt
add
dec
sub
shl
clc
ds
or
mov
cmp
add
inc
jp
shrb
mov
inc
xor
sub
jmp
int
xchg
jbe
jmp
stc
addr16
push
mov
shll
add
in
leave
add
cmpsb
je
or
xchg
fimull
adcb
fsubl
mov
mov
sti
je
fmuls
xor
add
push
lods
nop
dec
call
push
adc
adc
adc
adc
fisubs
or
pop
inc
dec
jp
add
adcl
mov
adcb
lahf
and
addb
ja
jae
hlt
add
jge
cmp
adcb
xchg
sub
xor
add
lret
push
inc
cmc
sahf
push
addr16
shlb
ret
push
test
or
aas
pusha
ret
mov
shl
stos
adc
or
lods
and
and
and
lret
adcl
adc
dec
cld
mov
loop
mov
xchg
xor
sub
leave
sub
or
add
in
mov
mov
je
cmp
add
ds
dec
aas
sbb
hlt
dec
fidivrs
xor
push
add
add
hlt
and
mov
add
push
lock
mov
add
mov
jno
je
pop
push
inc
bound
cmpsb
dec
ds
mov
fidivl
aaa
xor
aad
mov
add
test
push
js
add
ror
dec
adc
cltd
pminsw
dec
iret
mov
stc
inc
xchg
sub
test
xchg
daa
loope
fmuls
fadd
mov
push
sub
xchg
call
sub
sbb
enter
xchg
negb
or
jne
in
aas
push
ljmp
xor
add
lahf
rcrb
fsubrs
stos
dec
nop
lret
pop
add
pop
sbb
push
nop
sub
pop
pusha
addb
xchg
rolb
jmp
cmpsb
jbe
repz
cmp
jg
mov
pop
lcall
fcompl
xor
and
push
cmc
push
aas
add
sbb
adc
add
push
divb
pusha
add
sarl
xchg
es
mov
mov
ljmp
addr16
sbb
ret
mov
xor
cmp
call
and
movsl
rol
lahf
add
cmp
or
and
add
addl
insl
dec
loope
adc
clc
hlt
push
cmp
push
add
sbb
dec
pop
sbb
lods
pop
sub
jo
sbb
add
push
adc
ret
call
das
subb
xchg
add
lock
incb
adc
enter
rorb
jmp
mov
add
shl
push
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
sbb
cld
sarl
pop
add
and
sar
add
clc
inc
cmp
adc
pop
pop
push
mov
lret
dec
mov
push
jne
add
push
add
imul
jb
bound
dec
lock
ret
adc
and
or
call
decl
shlb
add
adc
inc
push
cli
test
pop
or
pop
sbb
fsubp
cwtl
push
xor
jl
test
or
add
sub
test
lods
add
push
inc
pop
test
adc
mov
andb
jne
cs
dec
dec
inc
sub
adc
shlb
dec
je
loopne
add
cs
in
scas
add
or
icebp
jbe
push
lea
jg
nop
sbb
daa
add
and
lahf
adc
mov
add
roll
lea
por
inc
stos
shll
sar
sbb
pop
and
in
add
pop
out
jl
nop
sarb
push
call
mov
test
add
iret
jge
and
pop
add
mov
roll
dec
test
add
add
lret
decl
popa
add
stc
inc
or
and
push
add
mov
add
add
ss
inc
lea
repz
out
mov
pop
scas
push
inc
jae
add
shlb
inc
and
dec
lock
cmp
into
mov
lods
or
and
bound
aas
sub
add
dec
das
sbb
hlt
out
cmp
ret
push
orl
sbb
add
xor
or
lcall
and
jmp
adc
dec
mov
addl
loopnew
xor
jne
push
cmp
sbb
add
hlt
dec
jae
push
fisttpl
cmpb
jl
add
adc
roll
movsb
pop
xchg
mov
pop
rcr
xchg
push
faddl
lahf
add
mov
push
mov
add
jmp
pop
clc
leave
add
test
xor
sarb
getsec
imul
pusha
cmp
jae
mov
rorb
push
addb
xchg
in
jmp
mov
push
add
call
mov
jl
mov
es
je
xchg
dec
fsubrl
add
mov
cmp
push
pop
test
jne
lea
fisubs
movzbl
shr
and
sahf
pushl
add
loop
inc
stc
mov
lds
pushf
or
cltd
xchg
jns
shlb
xor
jl
add
inc
and
push
notb
movsl
xchg
push
rorb
dec
fsubrl
adc
iret
add
test
cltd
adc
leave
cwtl
push
int3
cmp
inc
cmp
push
aad
orb
jne
sarb
testl
je
leave
sbb
pop
mov
and
mov
add
stos
enter
jne
addps
out
loopne
cmc
sub
dec
add
pop
xchg
sub
pusha
pusha
mov
jb
pop
xchg
dec
push
push
mov
mov
fldl
or
shlb
lea
xorb
roll
or
add
pop
cli
jmp
mov
pop
inc
test
xchg
pop
shlb
pop
negl
dec
aas
setg
cmpsb
xchg
mov
into
add
bound
aam
add
push
js
imul
push
add
xchg
add
inc
xor
xchg
add
mov
ret
inc
mov
xor
and
cmp
dec
mov
lock
ja
add
or
push
jl
or
mov
add
pop
jle
add
push
pusha
or
xor
dec
add
stc
mov
push
add
inc
adc
inc
loopne
dec
dec
mov
mov
add
pop
pop
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
or
add
sub
mov
es
push
cli
add
or
call
pop
roll
flds
cld
and
xor
js
or
xchg
stc
dec
mov
add
arpl
popa
lahf
in
fs
or
or
shlb
loopne
add
pop
gs
xor
add
rorb
xchg
xchg
add
cmc
pop
sbb
and
fisttpll
add
push
add
inc
cmc
cmp
leave
sar
add
out
rcrl
lret
or
add
jecxz
movsb
jne
add
sub
test
out
or
cwtl
jnp
add
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
popf
aam
dec
xchg
cmpb
push
cmp
mov
outsb
add
arpl
dec
in
dec
mov
or
sbb
mov
sbbb
add
mov
outsl
enter
push
ret
xor
mov
in
cmpsl
fdivrs
add
mov
stc
popf
sub
je
add
fldt
fs
adc
int
ljmp
dec
dec
and
mov
sub
or
cmpsb
sbb
xor
sub
push
or
clc
mov
add
mov
xchg
clc
add
jl
inc
pop
pushl
jae
dec
or
add
inc
add
cmovno
fstpl
ret
adc
imul
sub
add
ret
add
add
or
rorb
and
fildl
fdivs
inc
or
sbb
mov
pop
mov
movsb
add
dec
fstl
add
push
pop
and
jp
add
popf
jno
cmp
iret
add
int
sti
imul
or
add
and
jo
jp
add
rolb
clc
pop
fwait
cmp
and
mov
adc
push
or
adc
xor
add
mov
mov
mov
adcb
xchg
inc
and
cmp
cltd
or
iret
daa
cld
add
aaa
push
and
add
imull
pop
xchg
or
test
add
loopne
mov
add
mov
mov
add
fisubrs
mov
psllw
je
xor
leave
out
sub
clc
add
dec
in
xor
std
dec
add
xchg
or
imul
jg
add
out
cmp
lds
and
popf
orb
xchg
mov
xchg
push
shlb
cwtl
aam
add
popa
jb
or
add
xor
insb
cld
xbegin
sbb
ja
adc
jle
jae
shlb
pop
dec
aas
add
in
push
mov
cltd
mov
icebp
insl
lds
add
mov
sbb
sub
lock
fwait
mov
add
jl
or
orl
add
adc
je
data16
add
test
test
and
js
imul
and
ja
adc
add
test
and
dec
std
adc
and
xlat
add
jg
insb
mov
aad
or
pop
in
mov
insl
and
fs
inc
jno
add
jl
sbb
jmp
jno
imul
in
mov
xor
lods
es
imul
jne
mov
or
imul
pop
inc
je
push
sub
lcall
dec
sub
add
add
or
sub
push
sbb
fimull
and
add
sahf
aas
xor
add
in
in
mov
push
sbb
jb
cwtl
and
push
inc
add
fistpll
add
push
add
icebp
andb
hlt
cltd
mov
push
aas
test
xor
push
dec
or
insb
pop
pop
mov
mov
pop
iret
ss
cld
mov
add
ret
fisttpll
loopne
test
push
movsb
jecxz
dec
add
or
sub
lret
cwtl
mov
xchg
in
rolb
imul
sbb
jecxz
mov
and
insl
mov
sbb
and
mov
and
mov
cltd
cld
jbe
jg
sar
or
fcmovbe
add
test
inc
adc
inc
adc
jmp
repnz
mov
add
cwtl
sbb
xchg
push
rcrb
pop
pop
sub
out
lods
nop
adc
xlat
add
add
xor
popa
in
in
insb
push
add
out
pop
pop
xchg
sub
mov
pop
add
mov
data16
pop
movsb
dec
fwait
mov
es
add
jmp
push
jnp
mov
mov
je
push
mov
mov
add
lods
js
push
adc
addl
ds
pop
repz
popa
sbb
add
push
dec
repnz
sbb
add
jecxz
dec
xor
dec
aas
out
call
rcr
push
add
sub
je
imul
add
mov
cld
sub
cwtl
and
push
in
gs
shrb
lock
xor
mov
mov
stos
adc
cwtl
in
push
mov
jge
sub
push
xchg
sbb
dec
dec
clc
loope
cmpsb
jno
orb
add
das
fsts
mov
pop
sub
dec
jne
mov
leave
sbb
fsub
add
ret
in
inc
push
add
cs
gs
jno
enter
add
jmp
inc
cmp
add
dec
xor
jecxz
adc
repz
stos
in
push
pop
aas
cmp
fbld
xor
ret
loop
push
adc
or
jno
mov
test
mov
cmpb
testb
daa
out
pusha
and
push
jmp
cmp
dec
in
xchg
repnz
mov
shlb
rorb
add
dec
adcb
add
jg
in
mov
push
jmp
inc
shrb
aam
adc
scas
cmovae
add
cmpb
jb
pop
push
inc
inc
or
dec
hlt
add
mov
add
sub
push
clc
into
jns
loop
add
sbb
mov
fadds
repnz
add
aad
add
test
jecxz
sti
push
lea
hlt
mov
cltd
out
adc
adc
mov
sub
xor
jecxz
pop
loop
cmpb
mov
add
bt
das
jae
cld
sub
lahf
clc
sub
add
dec
add
add
cwtl
add
sbb
or
adc
add
clc
sti
rorb
push
add
pop
xor
add
ja
addb
hlt
cmpsb
push
jmp
sub
or
loope
or
aaa
dec
shrl
add
rolb
ljmp
or
ljmp
inc
xor
dec
ret
mov
test
and
inc
pop
std
cs
xchg
lsl
and
outsl
sbbl
mov
xor
and
dec
mov
mov
ret
or
xor
mov
dec
es
lea
lea
cmp
iret
sub
outsl
sub
addr16
xchg
mov
jae
add
add
add
xor
xchg
push
mov
test
pop
les
inc
inc
lret
movsl
pop
add
fmuls
je
and
push
addr16
movsl
add
ja
imul
popa
das
push
call
fiaddl
scas
and
mov
mov
sub
add
and
leave
push
or
mov
loope
jne
jmp
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
jmp
push
pop
add
pop
cwtl
sbb
push
enter
push
inc
add
sahf
jne
mov
mov
ljmp
ror
adc
loopne
adc
add
jne
fs
add
inc
xor
mov
add
hlt
test
shlb
cmp
ljmp
push
jg
lahf
pusha
ljmp
je
xor
call
pop
jle
jp
add
push
adc
add
ds
sub
popf
loope
int3
lea
add
fmuls
loop
xchg
in
push
cwtl
rcrl
or
pop
xchg
or
test
lret
add
inc
mov
push
stos
add
dec
mov
jne
sub
or
or
push
add
sub
daa
add
add
popa
sub
xchg
add
cmp
call
repnz
shll
cltd
and
pop
fstl
rolb
add
loop
xor
cli
fisubs
pop
inc
loopne
lret
aas
mov
fwait
mov
ljmp
fcomps
mov
add
fimull
or
call
out
xor
mov
dec
xchg
cld
rolb
mov
sbb
jo
adcb
lock
add
cmpsb
dec
or
dec
int3
mulps
pop
sub
cmp
out
add
clc
lds
mov
add
pop
and
adc
lods
insb
or
stc
aaa
aas
push
add
mov
fcoms
mov
daa
lds
add
jo
inc
dec
das
push
jnp
cmp
add
sbb
insl
adc
hlt
or
add
sub
cwtl
sbb
test
xchg
fcmovu
leave
inc
ret
add
and
or
mov
dec
lds
jns
add
pop
jmp
inc
add
dec
adc
jns
aas
pushf
sbb
inc
inc
shlb
or
scas
adc
hlt
aad
pop
lds
jmp
pop
jg
inc
inc
push
add
add
popf
mov
add
js
test
fs
mov
pop
push
add
xor
jmp
mov
add
enter
setg
ljmp
mov
test
andb
or
or
jp
adc
cmp
jle
fnstsw
jle
add
scas
pop
int3
or
add
add
pushaw
xchg
cmp
jecxz
shlb
jnp
pop
mov
cmp
out
cmp
aam
mov
sub
push
mov
pop
dec
push
xor
clc
call
inc
sub
and
cmp
pop
clc
add
inc
lods
mov
xchg
fmull
call
adc
jno
pop
je
ja
sub
repz
cmp
ret
mov
mov
std
add
xor
gs
sub
fildll
je
sbb
enter
sbb
jo
push
or
loop
push
or
imul
lock
add
pop
sbb
jle
filds
ret
das
out
dec
pop
mov
add
insb
xor
ja
push
aad
xor
and
adc
call
inc
mov
es
aam
sbb
hlt
sub
mov
pop
xchg
pusha
adc
add
pop
mov
xchg
enter
sbb
or
ret
or
sbb
jle
fmuls
fnstcw
mov
push
adc
xor
jg
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
frstor
int3
movsb
add
daa
add
hlt
inc
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
sti
loopne
jle
pop
adcl
inc
out
adc
in
or
orb
inc
inc
cwtl
mov
jnp
pusha
aam
repnz
jo
addr16
jne
cld
add
inc
dec
jl
lods
jae
cmp
sub
adc
sub
lea
add
cmp
ficoms
insl
xchg
dec
jns
movsb
sbbw
push
sbb
mov
mov
add
adc
jp
pop
jno
xor
add
xchg
or
sbb
mov
pop
ljmp
jo
test
lcall
add
sbb
jb
inc
and
bound
es
out
add
mov
and
add
ss
sbb
inc
les
notb
mov
pop
call
sbb
lock
aam
sub
movsl
push
jbe
lldt
jl
dec
clc
jmp
ds
cmc
push
mov
out
push
add
adc
and
push
mov
fcompl
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
sub
mov
push
jnp
add
sub
pushf
je
fildll
test
add
fwait
cmpsl
xchg
test
or
cmc
mov
sbb
add
mov
push
pop
and
fmul
cmp
push
add
cli
pop
pop
call
sub
sbb
pop
ret
je
pop
daa
push
fmuls
mov
or
add
outsb
push
add
cli
push
out
icebp
ds
jno
maskmovq
nop
mov
movsb
mov
adc
mov
gs
pop
and
add
add
shrb
and
sbbb
call
and
test
push
pop
imul
xchg
inc
add
mov
jmp
add
sub
test
add
aad
ret
pushf
or
and
jne
jmp
roll
ret
add
inc
sbb
sbb
fildll
adc
or
lea
sbb
push
gs
push
add
mov
xor
inc
mov
add
sbb
pop
cmpsl
js
cmp
dec
pop
shlb
or
and
adc
push
iret
cmp
pusha
mov
in
sub
mov
mov
pop
sbb
fcoml
lret
int3
lea
add
add
leave
or
add
outsl
js
lods
inc
test
popa
lea
push
add
push
fmuls
push
dec
sbb
sbb
cwtl
adc
lods
icebp
and
xor
sahf
jl
sub
xchg
jbe
adc
das
jo
inc
mov
jmp
add
lods
or
sbb
add
loopne
jb
inc
or
test
dec
xchg
adcb
sub
idivl
and
cmp
aaa
or
adc
es
jo
add
and
je
add
shlb
add
inc
in
in
add
fldenv
clc
push
or
adc
js
add
mov
ret
pop
lcall
es
add
dec
rorb
add
in
shll
outsl
xorl
xchg
add
dec
bound
mov
mov
push
xchg
call
mov
popf
addl
add
aad
pop
and
inc
orb
jl
cs
std
jmp
or
adc
nop
mov
add
js
enter
in
and
inc
cmp
jg
scas
jno
dec
test
test
add
dec
jmp
insb
mov
pushf
push
sub
ficoms
push
mov
in
lahf
add
jmp
xchg
jle
je
xchg
and
pop
pop
inc
mov
add
mov
insl
jp
les
testb
pop
test
sub
add
sub
shlb
call
xchg
scas
mov
pop
or
mov
add
sti
loope
xchg
or
sbb
lock
add
insb
popa
push
xchg
aam
mov
sub
popw
add
xlat
cmpsb
push
outsl
fucom
popl
pop
std
into
inc
dec
stc
arpl
or
movsb
das
cmp
addb
mov
ss
push
add
add
push
mov
loopne
add
enter
fiadds
jl
xchg
pushf
jo
loope
add
scas
mov
nop
mov
and
imul
setl
and
addb
xor
add
subb
adc
insb
repz
stc
std
xor
add
inc
push
ud0
cmpsl
fadd
and
push
mov
inc
add
sub
adc
sub
add
jle
shr
stos
mov
mov
scas
lods
push
cmpl
mov
and
sahf
cmp
dec
dec
test
add
jmp
test
ja
xchg
cmp
lock
dec
js
jge
push
hlt
es
and
adc
jbe
pop
aas
add
sbb
sbb
test
pop
add
jne
and
and
inc
add
lock
sub
jle
adc
cld
mov
jmp
xor
xchg
mov
mov
add
lods
sub
adc
add
jge
andb
push
add
cmp
cmc
jne
push
cmp
rolb
movsl
and
mov
push
cmpl
pop
pop
popf
out
std
mov
call
and
push
dec
ds
ret
and
mov
movaps
popf
xor
mov
mov
call
inc
rolb
and
repz
and
inc
inc
mov
adc
add
adc
jae
push
sub
mov
data16
into
movsl
clc
xchg
adc
add
cs
push
mov
das
out
inc
cld
mov
add
jg
and
orl
insb
hlt
dec
je
or
sbb
or
addr16
lret
int3
add
mov
inc
mov
lahf
push
add
mov
pop
rolb
mov
or
dec
ficomps
xchg
aas
push
xchg
loopne
jbe
cmpsb
add
or
repz
add
call
add
stos
mov
addl
inc
icebp
xor
ficoms
ss
push
add
sub
jmp
dec
and
add
hlt
or
inc
add
shl
push
decb
add
jmp
fcomi
lds
sub
sub
dec
cltd
jb
enter
cmp
add
cld
add
scas
ret
mov
fwait
push
inc
test
jle
dec
pop
cltd
jl
subb
adc
sti
sbb
sahf
aad
imul
adc
mov
fldenv
add
outsb
cmp
sbb
lea
push
add
push
mov
arpl
dec
ret
testl
test
sti
pop
push
jg
or
clc
jne
icebp
inc
push
adc
add
fs
jmp
sbb
jne
mov
inc
std
loopne
test
jmp
mov
add
inc
mov
add
imul
dec
adc
rorb
push
addl
push
jb
or
and
mov
add
xorb
or
lcall
jge
add
cltd
pop
nop
add
mov
xchg
enter
cld
xchg
cmp
sahf
push
jl
adc
jg
add
jmp
pop
push
add
jo
in
addb
add
push
lock
jge
hlt
add
xchg
and
xchg
lods
add
pusha
jae
dec
in
pop
ljmp
into
inc
mov
pop
add
dec
inc
cmpsl
add
mov
les
mov
loope
mov
call
add
andl
add
sub
or
insb
xchg
lcall
enter
pop
popa
shrb
rolb
xchg
add
out
addb
xor
sbb
xchg
jmp
jae
in
xor
repz
repnz
adc
xor
push
jmp
loopne
or
add
and
add
enter
jg
pop
inc
or
orl
or
adc
jns
mov
fcoms
nop
incb
xchg
movsl
sbb
or
mov
and
adc
mov
add
cmpl
popa
jg
and
xor
sbb
add
and
lock
add
jne
pop
sub
in
and
out
test
cld
add
dec
lea
cs
mov
notb
add
mov
xchg
and
mov
les
xchg
push
ror
enter
in
mov
shlb
adc
sbb
mov
orb
cwtl
imul
jg
jnp
cmp
mov
jle
cmp
add
sbb
into
mov
mov
inc
mov
mov
outsl
call
pushl
fstps
xlat
arpl
mov
mov
cmp
rclb
add
or
lret
or
movsl
pop
sbb
add
pop
ret
stos
out
cmp
xor
addl
lods
scas
je
lock
pop
loopne
mov
xor
or
repnz
add
adc
xchg
push
add
xor
mov
testl
adc
scas
aaa
add
fistl
and
jne
mov
test
xchg
je
arpl
aas
lret
mov
and
test
cld
das
in
jl
add
xchg
add
adc
pop
or
add
shrl
and
test
clc
sahf
mov
jns
add
xor
mov
inc
dec
nop
cmp
frstor
mov
mov
add
cmp
add
add
ss
pop
lods
sbb
aam
test
or
cld
test
pusha
inc
sbb
sub
mov
mov
add
and
popa
in
xchg
pop
mov
mov
scas
pop
and
mov
daa
add
lret
add
cmpsl
or
add
outsb
ficompl
lods
xor
test
xchg
data16
pusha
mov
adc
push
fs
cld
outsb
jmp
dec
mov
add
jl
mov
xor
or
andl
nop
es
add
or
cmp
add
in
adc
stos
sbb
inc
fsubs
out
ret
pop
pop
jns
imul
add
testb
dec
sarl
xchg
imul
nop
sub
leave
push
adc
sub
xchg
cmp
xchg
mov
or
add
sub
sbb
xchg
push
push
adc
in
pop
negb
add
or
repz
les
inc
sub
sbb
incl
sbb
add
inc
shll
add
jnp
add
jle
mov
pop
push
add
adc
fwait
and
outsl
add
imul
sbb
mov
mov
rcrb
add
xor
fildl
mulb
lret
add
aas
shlb
sub
push
int3
inc
cs
shlb
roll
add
add
xchg
jg
add
jp
pop
test
jmp
decl
add
add
testb
add
cmp
test
inc
jge
cltd
or
pop
loopne
mov
add
lahf
mov
jge
adc
cli
add
cs
sub
inc
in
out
mov
hlt
cmpsb
jnp
addb
jl
in
add
js
jge
lea
add
lds
out
add
arpl
test
and
in
cmp
cmp
or
add
xlat
ret
pushf
adc
clc
sub
push
sbb
add
inc
in
ret
jne
xchg
add
dec
cmp
incb
imulb
movsl
fstl
shr
mov
sub
pop
adc
adc
call
xor
add
push
clc
jle
push
add
js
sub
adc
inc
in
jp
pcmpeqw
sti
inc
aam
daa
lods
scas
add
push
insb
movsl
mov
inc
push
or
pop
call
push
inc
stc
add
mov
mov
retw
pandn
sarb
repnz
add
adc
add
cmp
cmc
xchg
dec
push
pop
jae
dec
loop
cmp
stos
add
setg
lret
lds
mov
loopne
lret
dec
addb
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
dec
int3
lret
cld
out
add
repnz
shrb
aam
sarb
pop
int3
test
mov
icebp
orb
push
push
cmc
and
jecxz
and
test
mov
push
xchg
sub
push
roll
adc
int
add
and
in
add
jbe
add
sbbb
sub
add
xchg
add
jb
add
loop
loopne
sbb
dec
mov
mov
push
mov
repnz
pop
adc
push
xchg
push
outsb
xchg
sbb
mov
das
mov
cmc
rcr
mov
pop
cmp
sub
add
add
sbb
aam
test
jbe
sbb
mov
inc
cld
add
dec
insl
jo
mov
and
add
mov
hlt
ret
pop
shl
ja
cld
or
cwtl
push
hlt
cmpsb
daa
push
enter
inc
aam
jmp
mov
lret
sbb
les
mov
mov
pop
fsubl
push
adc
push
rol
hlt
mov
clc
inc
mov
push
cld
push
inc
pop
inc
mov
push
add
adc
adc
mov
stc
or
and
and
stos
mov
pushf
ds
add
fnstenv
sbb
mov
das
jb
popf
cmp
and
sub
out
mov
add
hlt
or
add
test
and
outsb
in
shlb
enter
ltr
nop
cmp
movsl
test
sbb
push
adc
add
cmc
and
cmpl
pop
ret
jmp
mov
test
call
inc
icebp
sbbb
and
sub
mov
cmp
pop
or
add
fsubl
add
inc
imul
add
popa
arpl
inc
xor
inc
mov
mov
add
cs
adc
add
cld
loope
enter
mov
shlb
pop
ds
dec
subb
cmpb
cwtl
sete
dec
popa
and
and
jp
iret
cli
jl
subl
adc
or
push
movsb
xor
cmp
xor
adcb
and
mov
sarb
or
cwtl
xor
mov
xchg
es
idivl
add
mov
add
in
sub
clc
sbb
fdivr
lock
in
or
call
dec
int3
sbb
outsl
adc
test
popf
call
and
xchg
shr
mov
loope
insb
in
aad
cltd
push
mov
and
rorl
adc
and
loopne
cmp
push
xor
adc
insl
pop
pushf
sub
xchg
push
loopne,pt
mov
mov
pushf
pusha
lahf
adc
dec
setg
scas
fs
or
cmpsl
repz
sti
adc
adc
mov
fistps
xor
mov
aas
xor
nop
jg
insb
adc
test
sbb
dec
jl
jle
xorl
mov
jg
add
out
sub
cmp
push
push
dec
dec
inc
inc
inc
xchg
xlat
es
mov
dec
fildl
stc
mov
pop
pop
mov
cmp
gs
jge
mov
jle
cmp
dec
or
sub
std
addb
jge
add
ljmp
inc
movsb
lock
cld
popf
add
lds
mov
fsubrp
inc
lahf
sbb
scas
jmp
mov
and
jne
mov
adc
sti
add
add
ja
xor
mov
add
pop
aaa
scas
pop
ljmp
outsb
add
rcrb
mov
add
jne
mov
rorb
arpl
insl
cwtl
dec
sub
cmp
inc
add
cmp
jl
push
sbb
leave
pop
sbb
punpckhwd
xchg
mov
and
in
jmp
sbb
stos
xor
xchg
je
clc
sbb
mov
loopne
and
stos
push
pop
lret
or
pushf
or
xor
push
aas
add
sub
mov
loopne
and
lret
adc
sbb
or
repnz
xchg
mov
mov
add
mov
stos
or
inc
xchg
jmp
nop
add
jge
cmpsl
cmp
mul
mov
stos
xchg
push
add
xor
in
add
aad
or
jmp
ds
push
adc
pop
adcb
add
push
loop
add
add
sub
fistl
roll
mov
div
mov
add
mov
dec
je
dec
add
mov
xor
sbb
ret
jecxz
aas
jns
pop
add
daa
sub
idivl
ret
mov
xor
and
and
add
cmp
fnstenv
add
int3
fisttpll
daa
mov
mov
cmp
je
push
push
in
and
nop
sub
sub
or
lcall
syscall
pop
pop
inc
loop
scas
push
ret
rolb
das
test
add
sbb
cld
inc
sbbl
and
jg
cmpsl
insl
or
and
mov
lahf
lock
sub
inc
add
and
clc
xor
mov
cli
cs
push
cmp
cli
insb
add
xor
mov
xlat
jne
xor
xchg
mov
add
mov
push
mov
addb
inc
add
xchg
jmp
pop
scas
jle
or
pusha
jmp
push
dec
lock
mov
call
pushf
adc
pop
pop
cwtl
nop
rolb
cmp
mov
scas
icebp
add
xor
aaa
dec
fimuls
pop
or
stc
add
adc
jne
and
push
add
sbb
adc
out
jecxz
outsl
xor
scas
jp
add
xor
add
int3
sub
mov
ljmp
sti
dec
sub
or
jecxz
sbb
and
mov
xchg
adc
push
pop
out
loop
mov
loopne
add
or
inc
or
rolb
lods
cmp
movsl
shlb
add
mov
add
mov
add
push
hlt
push
mov
mov
and
pushf
add
daa
xor
jb
je
add
ss
clc
inc
clc
mov
jmp
inc
inc
int
outsl
mul
add
addb
jbe
xor
add
push
mov
and
sub
mov
add
or
sti
jmp
add
testb
sub
test
ljmp
testb
or
in
ret
nop
mov
xchg
adc
movsb
push
rcrb
stos
cmpsb
and
aas
bound
sub
faddl
sbb
ljmp
add
or
cld
cmp
mov
clc
sub
adc
jbe
repz
out
and
dec
sbb
inc
push
icebp
dec
xor
into
subl
mov
test
pmuludq
shll
cld
mov
jne
fsubl
inc
inc
add
int
add
mov
xchg
add
and
xor
pop
jmp
out
push
ret
fiadds
fsubs
std
arpl
out
mov
dec
add
jmp
or
xor
les
in
adc
push
inc
or
inc
and
or
mul
cld
xor
bsr
xlat
loopne
insb
jmp
push
add
pop
inc
addl
push
jle
pop
mov
sub
repnz
jne
push
mov
dec
rolw
jecxz
mov
cmp
mov
xor
insl
pop
movsb
xor
leave
or
inc
shlb
add
or
testw
adc
add
add
dec
inc
adc
add
push
fldt
adc
pop
aas
or
imul
clc
in
test
fsubs
loope
pop
dec
xchg
jo
add
sub
fsubs
fldl
cmp
add
int
inc
pop
out
clc
filds
ds
jnp
mov
add
fucom
mov
and
mov
xor
jmp
mov
clc
lsl
add
cmpb
sbb
or
add
aas
cld
jg
sbb
orb
push
and
pop
in
jmp
add
cmpsb
xor
mov
sbb
and
inc
mov
or
ljmp
add
dec
ret
add
mov
cmp
add
or
mov
add
adc
jne
xchg
ljmp
add
xor
jl
add
sub
addl
or
push
add
sbb
lock
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
aas
lock
notl
or
sbb
ret
les
jne
add
lret
jmp
test
add
stos
and
push
and
inc
sbb
lea
xchg
push
adc
cmp
aad
cmpb
sub
mov
jmp
dec
stc
leave
lock
push
aad
dec
dec
push
inc
lock
icebp
push
rcr
loop
sub
out
add
xor
cmpsb
sarl
incl
cwtl
lds
or
add
jmp
sbb
cmp
sub
adc
je
aas
sub
add
sbb
xchg
call
sub
rolb
or
and
add
ret
popa
rclb
stc
inc
add
fchs
xchg
addl
aas
jmp
and
add
mov
std
loopne
ds
adc
loopne
ret
lods
out
add
lret
dec
cld
cmp
orb
jae
fimull
nop
repz
push
push
adc
ljmp
daa
pop
mov
dec
xchg
sub
jns
cmp
lahf
xor
sar
add
sbb
adc
cmp
adc
mov
push
jne
lret
popa
mov
es
les
push
add
and
add
push
test
inc
sbb
shrl
add
inc
pushf
mov
cmp
mov
add
rcll
sub
push
mov
jl
xchg
xor
sub
or
push
and
mov
clc
sub
add
int3
or
lret
jns
stos
das
push
loope
mov
jae
xchg
dec
movsb
xchg
pop
add
and
ljmp
add
adc
xor
sbb
clc
fldl
add
jo
scas
xchg
adc
fwait
je
add
xchg
cmp
jmp
ficoml
jo
js
and
rolb
bswap
ret
adc
and
jl
fadds
mov
pop
push
or
sub
pop
ljmp
dec
cmp
xor
fninit
push
not
mov
cmp
sarl
add
loopne
add
add
call
out
cmp
sub
test
pop
inc
cmp
cmp
or
cmp
or
jl
add
xor
mov
addb
iret
fdivr
imul
pop
add
test
jbe
arpl
add
lret
enter
stc
push
add
dec
andl
sti
mov
cmp
ja
mov
adc
push
adc
cli
jae
pop
shll
add
call
adc
inc
mov
sub
jb
pop
jecxz
adc
int3
loopne
jne
mov
sbb
dec
leave
inc
and
movsl
std
cmp
sbb
arpl
loop
int
les
fnsave
add
stos
push
ret
orb
sub
into
dec
pop
out
mov
daa
lea
dec
add
jmp
leave
addb
xor
xchg
add
daa
or
ret
lahf
sub
je
xchg
add
shlb
add
and
add
test
dec
clc
repz
ljmp
push
and
mov
mov
or
adc
xor
and
ja
add
dec
loopne
incb
test
rorl
nop
add
add
mov
aas
sbb
daa
movzwl
mov
push
xchg
mov
jl
pop
push
add
pop
cmp
mov
bnd
xchg
jb
insb
add
mov
ret
inc
inc
push
std
dec
mov
into
mov
mov
es
push
je
nop
ds
or
out
addl
push
jne
js
add
add
test
gs
pop
cmp
cmp
les
dec
sbb
add
jne
add
mov
fildl
sub
dec
pushf
in
rcrl
add
push
jne
jno
jp
mov
lods
adc
sbb
loope
setne
and
hlt
loop
add
jecxz
rorb
shrd
sbb
xor
lds
jne
aam
and
sbb
cmpb
xor
xor
lock
xor
cmp
mov
imul
xor
bound
mov
dec
xchg
cmp
daa
mov
lds
int3
addr16
pusha
or
jle
leave
in
mov
stc
lahf
add
imul
ljmp
jmp
push
divl
add
or
add
jmp
and
inc
pusha
es
pop
in
movsb
aas
cli
or
xchg
xchg
test
je
clc
out
jl
jl
add
mov
mov
pop
inc
inc
inc
inc
inc
add
dec
dec
push
dec
dec
dec
dec
add
push
push
push
add
push
mov
pop
popa
dec
bound
data16
push
insb
sbb
outsb
outsl
add
jb
je
cmp
add
jp
xor
xor
in
ss
cmp
sbb
das
cmp
sub
cmp
add
cmp
and
daa
orb
adc
mov
sub
add
cmpsl
shrb
add
bound
pusha
sub
cmp
cld
lahf
ds
ss
hlt
cmpsb
in
sub
xor
and
cld
push
add
push
mov
insl
inc
dec
lods
inc
pop
clc
cs
adc
add
cmp
or
sarb
push
mov
fcmovbe
sahf
fistps
int3
or
lret
push
push
push
scas
bound
add
mov
or
cmpl
sub
add
xchg
es
xorl
sub
enter
jl
inc
pop
ja
imul
and
sub
mov
roll
pop
bound
inc
dec
ret
out
push
data16
mov
jne
add
inc
lock
jne
fs
and
daa
push
pop
out
pop
adcl
stos
movb
lahf
jg
push
mov
jle
sbb
sub
call
fcmovu
jge
rclb
movsb
dec
push
pop
inc
movmskps
add
jg
add
lahf
lcall
add
add
add
jbe
pop
sub
jl
push
push
aas
out
fs
add
testb
add
inc
icebp
rolb
loop
xchg
aas
adc
jl
inc
jne
loope
bswap
orb
adc
add
cwtl
sbb
adc
popf
rcrb
decl
mov
add
jne
roll
adc
out
or
ret
add
jmp
mov
sti
cmp
cmp
repz
cmc
pop
flds
sub
nop
mov
add
add
mov
daa
fprem
and
repz
movsb
mov
insb
dec
pop
inc
pusha
sub
stc
jp
mov
add
aam
in
cs
mov
idivl
bound
add
adc
mov
adc
shrl
xchg
inc
sar
out
in
imul
mov
int3
adc
add
ja
shrl
je
add
pop
push
xor
jb
or
push
jbe
cs
inc
cs
fucomp
shlb
push
adc
adc
pop
rcrl
icebp
sbb
sub
clc
sbb
mov
push
cmpb
lret
add
pop
pop
xor
out
lahf
inc
shl
mov
adc
push
add
pop
mov
cmp
xor
mov
xchg
or
lret
add
cmp
mov
sti
jb
xchg
cmpsl
stos
or
push
add
pop
adc
lret
sub
fs
jle
add
cmc
enter
sbb
cmp
add
dec
pop
inc
mov
bswap
test
xor
iret
arpl
dec
mov
dec
or
mov
pop
mov
out
jl
dec
addb
lret
sbb
add
je
stos
in
add
pop
out
xor
movsb
cmp
movsl
xorb
mov
mov
cwtl
lcall
mov
ret
push
mov
mov
pop
mov
dec
fs
neg
add
jne
xor
loopne
cmp
add
pop
jle
in
cmp
mov
push
or
in
add
es
icebp
add
jae
xchg
sub
add
pop
das
push
into
sbb
fildl
out
push
mov
jne
dec
inc
and
fbstp
add
mov
add
pop
mov
inc
inc
lds
push
dec
push
add
bswap
in
add
adc
pushf
add
mov
icebp
push
sub
add
adc
rolb
or
jl
push
add
add
dec
adc
fimull
fsts
add
in
pop
cmc
add
bound
mov
jbe
add
cs
je
mov
mov
inc
xchg
mov
jo
xor
xchg
add
mov
es
sbb
mov
dec
pop
cmp
rolb
sarl
fsubs
push
add
movb
jg
xlat
fs
scas
add
jl
in
add
push
jns
cld
jne
add
push
leave
add
jecxz
push
sub
xchg
jl
pop
dec
jl
add
push
pop
add
cmp
pop
adc
cmp
or
fmull
inc
cld
xor
or
lret
sbb
add
add
add
mov
rolw
jmp
push
fdivs
loopne
and
mov
add
xor
enter
add
push
pop
not
ret
add
add
shlb
cwtl
mov
pop
cmovle
stc
enter
repz
fisubrl
sub
lods
add
cld
shll
pushf
rolb
adc
mov
push
fcomip
movsb
clc
pop
shr
add
xchg
faddl
mov
sub
mov
bound
cmp
test
sbb
push
add
and
and
call
mov
fsub
pop
filds
jge
mov
jmp
adc
fwait
sbb
adc
or
enter
and
push
jae
cld
in
lock
notb
pusha
cmp
dec
jo
add
jmp
inc
inc
cmp
jb
pop
icebp
daa
roll
sbb
mov
clc
add
enter
cltd
dec
in
add
fmuls
lods
cmp
incl
pop
jl
movl
sub
lahf
add
adc
add
inc
adc
jecxz
or
add
jne
movsl
stos
nop
add
das
gs
jmp
aad
out
les
add
int3
mov
das
into
mov
jge
mov
lds
xor
inc
pop
mov
pop
rorb
mov
pop
push
dec
mov
add
mov
int3
and
or
into
sub
sub
leave
iret
loopne
outsl
mov
xchg
sbb
fcomps
adc
xchg
lock
mov
mov
pop
mov
xor
and
pop
out
mov
inc
pushf
add
lret
xchg
rolb
and
adc
mov
inc
mov
cmp
in
in
lret
and
test
cmp
push
sub
xor
daa
out
add
dec
mov
shlb
mov
dec
jecxz
test
lock
cmpsl
adc
or
mov
add
pop
mov
jae
add
inc
loopne
movsl
insl
add
aad
scas
and
add
out
and
aam
mov
outsl
stos
les
mov
test
sbb
ljmp
xchg
int3
leave
lea
lret
mov
push
sbb
fsubl
popf
xchg
cmc
inc
out
or
jne
sub
mov
into
mov
inc
rcl
out
loop,pt
imul
data16
add
or
cld
or
mov
jno
add
jg
je
int3
push
and
sub
pusha
xlat
add
push
enter
sbb
add
jmp
nop
xor
mov
sub
push
pop
add
movsl
scas
mov
mov
dec
loope
imul
hlt
xchg
add
das
mov
int3
ja
add
incb
dec
cltd
bnd
fimuls
dec
cwtl
loopne
mov
mov
push
mov
std
jmp
jo
or
jo
pop
add
fsubl
xchg
js
and
or
and
and
mov
push
and
inc
sub
int
das
enter
add
inc
fisubl
add
push
cmp
xchg
dec
dec
dec
mov
repnz
inc
xor
ds
roll
cwtl
sbb
call
test
inc
jge
mov
add
popa
loopne
and
or
push
sub
loop
loopne
push
and
pop
das
pop
adc
and
inc
mov
loopne
pop
push
dec
or
lods
add
fwait
and
push
add
pushl
push
loopne
add
mov
lret
iret
sbb
pusha
testb
sub
xor
sahf
cltd
clc
fsub
cli
sbb
push
xchg
mov
dec
or
pop
add
sbb
fidivs
or
negb
add
or
and
add
fs
add
daa
cmpsl
pop
ds
sbb
add
xor
into
das
shr
adc
push
inc
xchg
xor
or
in
ret
mov
add
aad
pop
jl
loope
leave
pop
imul
adc
fsts
ret
inc
ret
enter
push
daa
incb
loop
push
cmp
or
shrb
in
roll
enter
mov
daa
dec
out
sar
jno
enter
jns
add
imul
insl
jae
outsb
into
call
cmp
xor
nop
add
sti
scas
inc
nop
xor
ss
in
add
pop
push
adc
xor
mov
pop
loopne
out
adc
cld
mov
mov
pusha
sbb
imul
test
and
add
push
dec
xchg
mov
adc
and
add
stc
xchg
inc
mov
add
mov
jne
test
lret
and
add
les
js
dec
jne
adc
shl
imul
and
cmp
add
push
sbb
jmp
in
add
idivb
addb
les
popf
xor
fldl
je
sub
mov
out
rclb
sbb
pop
dec
xchg
mov
jbe
push
cmpsl
clc
cld
mov
push
cmp
pop
add
add
jbe
clc
dec
call
or
pushf
adc
or
shrl
sub
and
sbb
loopne
lds
xchg
and
je
jl
add
dec
jle
adc
hlt
and
dec
and
cwtl
std
push
dec
push
mov
xchg
sarb
lds
pop
sub
add
adc
icebp
add
mov
mov
dec
jecxz
inc
pop
jge
dec
pop
mov
jne
js
lea
outsl
push
mov
test
or
adc
mov
movsl
mov
push
gs
int3
add
mov
xor
movsl
mov
call
test
lock
sbb
xchg
push
mov
rorb
mov
sbb
insl
mov
add
xchg
jmp
inc
dec
or
inc
loopne
xor
rolb
inc
rol
ja
add
add
xchg
test
mov
push
xchg
setp
jp
or
mov
mov
push
jge
mov
in
filds
aam
push
pushf
and
adc
jmp
add
adc
pop
aam
jl
mov
add
jns
cld
in
inc
insb
add
mov
push
add
fwait
negl
push
pusha
faddp
mov
or
loope
xchg
fcoms
add
add
int3
add
testb
jp
test
push
out
sbb
idivl
mov
fdivrp
loop
dec
add
jecxz
je
and
add
aad
in
subb
mov
les
cmp
movsb
push
push
mov
test
pop
cld
jl
add
adc
inc
repnz
push
mov
sub
stos
add
sub
popa
lods
arpl
dec
call
loopne
std
jbe
test
scas
xchg
stos
mov
or
pop
sub
xchg
push
in
adc
fistl
dec
add
rclb
push
imul
out
popf
lahf
add
clc
mov
add
mov
inc
add
and
sbb
mov
cwtl
es
popf
mov
out
push
push
push
pop
sbbb
adc
subb
add
roll
pop
xchg
notl
add
js
xlat
mov
fs
pop
imul
push
hlt
xor
ror
pop
dec
jns
bound
mov
push
fimuls
mov
pop
fdivs
sbb
add
add
cmpl
add
mov
adc
add
nop
in
mov
fwait
popa
sub
dec
mov
mov
xchg
cmp
pushf
popl
xchg
ret
les
cmp
add
js
or
fisubrs
sbb
iret
shlb
adc
mov
inc
sti
sar
pop
lods
adc
cli
xorb
xor
mov
sahf
inc
adc
or
gs
cld
in
add
adc
outsl
add
cmp
mov
xchg
add
jmp
mov
adc
lods
imul
pop
fidivrs
jle
inc
add
fcompl
decb
add
mov
jne
sub
mov
fsts
and
sbb
test
push
add
aaa
lret
int
inc
daa
hlt
test
jne
add
mov
lods
fcompl
roll
mov
insb
popa
add
cmp
mov
add
aam
loope
lock
add
jge
fmull
popf
sub
xchg
add
nop
fidivl
pop
rclb
mov
lahf
add
lods
insl
add
sbb
lret
jo
pop
add
mov
mov
dec
inc
sub
fiaddl
fcmovnbe
loopne
push
insb
nop
je
movsl
daa
cld
rcrb
das
add
jmp
and
imul
leave
or
in
std
xchg
inc
dec
jne
sub
push
adc
shrb
int3
adc
sarb
xor
dec
add
rcll
rcrb
pop
nop
fistps
mov
hlt
jo
das
gs
scas
icebp
mov
dec
adc
mov
loopne
mov
xchg
scas
cld
repnz
add
mov
lea
mov
push
pop
stos
inc
nop
and
and
shll
jb
cltd
mov
sti
clc
mov
inc
in
into
add
stc
test
sbb
je
std
mov
in
jae
call
mov
jno
cmp
enter
and
pop
adc
mov
cs
add
pop
data16
xchg
sahf
inc
add
jne
sub
mov
in
xor
cmpsb
aam
add
data16
pop
lcall
jecxz
enter
sbb
adc
andb
in
ret
jns
add
into
push
call
pop
sbb
test
mov
push
cmpl
or
dec
hlt
and
adc
push
pusha
dec
movsl
push
add
pop
mov
adc
add
clc
jbe
add
sbb
sub
fsubrl
repz
add
sbb
clc
xchg
mov
cmc
inc
in
daa
dec
adc
add
mov
push
scas
mov
lahf
clc
mov
push
cmpsb
mov
xchg
mov
movsl
mov
popf
mov
adc
adcb
les
das
sbb
jae
xchg
jns
and
mov
lock
mov
and
jbe
pop
sahf
sbb
mov
pushf
fists
push
arpl
add
or
rolb
mov
enter
dec
add
mov
std
add
int3
jbe
add
movb
add
cmp
shll
imul
rcrb
js
jle
shl
fcmovbe
mov
test
mov
add
pop
les
add
pop
es
mov
mov
add
and
pushf
mov
js
fmuls
js
pop
test
mov
movsb
int3
fsubrl
rcll
aad
add
push
adc
aam
les
add
dec
pop
and
cmp
add
or
dec
sarb
popf
push
add
sbb
call
and
and
mov
adc
dec
pop
push
sub
inc
fistl
xchg
adc
push
adc
outsb
mov
mov
inc
add
adc
adc
or
sbb
mov
daa
int3
scas
or
dec
mov
push
mov
dec
rolb
adc
nop
daa
fidivl
add
push
movb
lea
add
or
jg
jle
sarl
add
js
movsl
or
add
mov
cmp
xchg
mov
inc
adc
stc
or
out
andb
mov
push
sub
sub
mov
sub
add
pop
test
push
jmp
dec
inc
fdivr
ja
fldl
std
out
cli
pop
sbb
popa
pop
popa
cmp
or
or
shr
mov
pop
pop
jae
pusha
jmp
or
jge
sub
inc
adc
ljmp
add
mov
ljmp
arpl
leave
add
sahf
sub
cmp
adc
or
loopne
push
cli
sahf
dec
xor
repnz
orl
stos
enter
add
decb
add
jb
adc
jae
pop
adc
inc
nop
mov
inc
push
push
jo
ja
cmpsl
add
cmp
fmuls
fs
repnz
adc
out
add
push
and
mov
cmp
loop
sub
fidivl
and
hlt
push
paddusw
push
sbb
imul
out
mov
mov
xor
jmp
sbbb
add
repnz
cmp
jb
xor
movlps
sbb
rcrb
inc
push
decb
pop
inc
or
add
dec
sbb
add
sbb
stos
pop
pop
add
or
xor
cmp
out
add
sub
inc
addl
mov
add
adc
arpl
mov
rorl
fwait
movswl
xor
lret
adc
dec
add
or
jb
dec
or
dec
push
flds
popf
inc
and
add
xchg
push
mov
add
mov
sbb
sub
aas
and
dec
sarb
and
mov
mov
test
pop
push
sbb
lret
adc
ret
cmp
imul
test
into
adc
dec
adc
es
xor
movsb
sbbb
movb
xor
int3
cmp
and
je
add
or
dec
xor
arpl
xor
add
call
cmp
pop
jg
ret
notb
add
dec
mov
cwtl
fs
and
int
jle
pusha
sar
inc
jns
xor
push
dec
cli
add
and
aas
xchg
add
xchg
jbe
adc
jge
test
sbbb
add
std
and
dec
xor
mov
add
ret
stos
cmp
loopne
xchg
sbb
add
cs
xchg
lods
inc
add
and
iret
inc
hlt
jno
dec
cmpsl
clc
sbb
mov
mov
fadds
out
pop
and
xchg
add
test
mov
push
inc
in
pop
or
out
adc
xchg
mov
mov
mov
xor
stos
sbb
push
daa
add
fsubr
add
pushf
jmp
add
pop
ljmp
adc
jmp
les
pop
lods
in
add
in
out
add
jne
adc
outsb
push
cwtl
adc
dec
outsb
imul
mov
shlb
aad
shr
out
sub
or
movups
sbb
loopne
adc
add
or
xchg
nop
xchg
adc
jp
jl
popa
and
je
mov
push
jne
inc
or
inc
jmp
sbb
pop
pop
pop
push
and
add
rorb
fiaddl
jmp
pusha
sbb
dec
ljmp
loopne
jmp
movl
mov
ret
lock
in
sbb
addl
paddq
add
adc
scas
add
jge
in
add
mov
int
fwait
aaa
cs
lock
call
popf
into
loopne
punpcklbw
jle
rcrb
dec
add
mov
sbb
fdivrs
add
call
jg
daa
mov
inc
hlt
rcrb
pop
add
dec
push
mov
xor
or
add
sbb
jg
idivl
call
repnz
andb
out
add
add
enter
add
mov
les
dec
sub
aad
or
mov
arpl
ja
mov
imul
int3
add
stos
adc
push
mov
push
or
cmp
decb
xor
cmp
les
adc
adcb
add
fwait
bnd
and
add
push
push
jmp
arpl
add
dec
loope
xor
cs
xchg
aas
mov
cmpsb
jmp
or
xor
inc
and
push
adc
add
pop
repz
adc
in
jle
cwtl
cmp
inc
cmp
mov
push
xchg
inc
push
inc
mov
lcall
pop
push
clc
mov
lret
pop
cmc
into
out
add
aas
jp
fsubl
mov
lret
pusha
or
out
pop
pop
inc
outsl
icebp
sbb
loop
push
add
hlt
fstpt
jne
inc
sub
fs
repnz
repnz
xchg
les
and
mov
lret
loopne
mov
pop
js
sbb
xor
ficoml
pop
cld
call
gs
int
aad
test
mov
outsb
movsb
adc
add
dec
or
add
scas
dec
push
add
cmpsb
hlt
movsl
pop
dec
push
dec
loop
add
dec
push
test
cmp
aam
add
hlt
cli
and
js
or
stc
mov
ds
pop
xor
add
jno
add
adc
lock
jbe
fcoms
and
mov
pop
add
cmp
mov
ja
sbb
test
mov
mov
mulb
clc
fbld
mov
repz
add
sbb
or
and
add
fs
call
mov
add
rolb
insb
add
rorl
int3
sbb
push
sub
roll
cmp
inc
in
sbb
add
xor
repnz
dec
cmp
add
add
add
mov
fsubr
andb
fisubrl
mov
add
xchg
xor
repz
sbb
inc
or
mov
mov
add
pop
adc
pop
pop
add
xor
mov
jo
insb
flds
in
add
jb
xorl
outsb
fs
jbe
or
bswap
lock
loopnew
sub
push
add
pop
add
adc
mov
xor
or
or
cmp
mov
add
pop
cmc
sbb
jl
add
ja
fcmovb
cmp
popl
in
ror
add
shlb
leave
pop
popf
sbb
add
lcall
add
test
mov
pop
inc
xlat
add
mov
push
cwtl
add
fcompl
inc
add
push
or
loopne
push
adc
push
incb
and
mov
testl
loope
cmp
add
iret
jne
shl
movl
inc
lods
sti
and
mov
sbb
add
ffreep
pop
clc
cmp
pop
int3
call
lea
sbb
and
jmp
or
xchg
mov
out
adc
out
adc
jp
add
xchg
into
cmp
arpl
jmp
mov
fisubl
adc
out
xchg
aam
adc
pop
or
test
and
loop
pop
sbb
inc
sub
nop
je
arpl
add
mov
jl
ret
xor
sbb
test
mov
and
add
mov
lock
ftst
cmp
push
jecxz
add
call
std
in
add
mov
addl
sbbb
jno
push
shrb
out
xchg
push
jecxz
fisttpl
sub
addb
icebp
test
ret
ss
push
or
jmp
sub
ds
bound
mov
xor
mov
js
add
cmc
jp
add
and
movups
in
mov
je
jecxz
aad
arpl
test
inc
xor
pop
sbb
and
inc
sahf
xacquire
sbb
test
sub
add
or
rcrl
xor
clc
cmc
or
hlt
repz
cmp
add
mov
and
sbb
repnz
insb
fiaddl
jp
movsl
nop
stos
enter
add
add
add
jbe
in
adc
in
add
mov
fwait
add
add
lock
or
hlt
pop
xor
loopne
sarl
add
mov
dec
idiv
lock
sub
and
adc
xor
jp
add
nop
sub
jg
loope
adcl
mov
stos
mov
scas
sbb
inc
shll
and
sti
push
test
sbb
cmp
add
fcomps
sub
or
dec
cmc
enter
ja
lds
fs
sbb
xchg
add
jmp
clc
xor
and
call
add
jl
rcr
and
add
dec
dec
push
and
or
push
inc
inc
push
ja
xor
negb
pop
lods
scas
test
add
mov
adc
mov
movsl
xchg
fadd
cld
dec
add
and
inc
addr16
dec
mov
stos
int
out
add
fdivrl
jbe
xor
add
loope
rol
add
sti
mov
push
pusha
cwtl
jl
add
incb
out
int
mov
push
add
sub
pop
ja
fnstcw
add
loopne
push
aas
movb
inc
mov
add
outsl
sbb
rorb
imul
push
adc
push
test
loopne
lods
inc
mov
fldl
and
daa
mov
add
decl
mov
das
ja
add
jle
sbbl
add
aas
add
cli
xlat
and
std
push
cmp
jge
or
push
inc
sbb
sub
test
add
lea
cld
cmp
add
out
xadd
call
jl
bound
cwtl
sbb
ljmp
or
dec
add
mov
fldl
les
xchg
movsb
push
or
cwtl
fisubl
inc
add
xor
add
sti
repz
int3
pusha
push
mov
adc
xor
sub
and
lods
idivl
add
arpl
and
imul
adc
aas
imulb
mov
add
xor
xlat
ror
les
addl
repz
loopne
scas
adc
orb
nop
mov
sub
movb
dec
fcomi
pop
cmp
cmp
add
inc
xor
aad
sbb
add
xchg
arpl
cmp
adc
cwtl
push
inc
imul
add
inc
xlat
pop
mov
push
js
mov
jmp
or
xchg
in
add
sbb
cli
out
jge
jge
pop
and
imul
or
pop
xchg
jno
cwtl
std
loopne
fdivrl
addr16
repnz
adc
cmpsb
add
pusha
test
mov
dec
fs
or
mov
bound
imul
add
add
inc
mov
rolb
fstp
or
mov
push
mov
addb
xlat
data16
in
cmpsb
add
cwtl
stos
push
enter
xchg
xor
iret
dec
add
add
sti
adc
or
cmp
das
inc
mov
dec
cli
sahf
add
add
or
fsubrs
mov
leave
sbbl
cwtl
and
sti
shl
add
frstor
or
mov
sub
out
add
xor
sbb
xchg
add
aaa
ret
or
adc
cmp
aad
andb
repnz
add
adc
inc
jmp
push
sbb
les
add
and
add
loop
sti
cmp
cmp
out
cmovb
adc
jb
nop
push
add
add
xorl
mov
cmc
aam
stos
test
out
nop
add
cmp
pushl
in
popf
mov
add
jb
divb
rolb
or
or
sub
jo
popa
dec
popf
insl
inc
cmp
mov
adc
cmp
add
in
sbb
daa
pop
fists
and
or
cltd
mov
inc
ljmp
dec
test
fidivs
fimuls
sahf
add
add
mov
aas
and
or
add
mov
mov
jle
jg
hlt
roll
loop
cmp
cli
daa
sub
and
jns
out
add
add
inc
ficompl
add
sbb
loopne
mov
rcl
fld
push
out
pop
fidivrs
inc
iret
inc
in
add
push
cmp
pop
mov
int3
nop
or
add
push
lods
push
pop
out
and
sub
hlt
inc
leave
enter
out
add
inc
push
ljmp
pop
ljmp
inc
shl
or
pop
sub
fimuls
das
or
sbb
pushf
pop
add
add
rol
xorl
add
sub
cmp
dec
add
leave
or
lock
lcall
add
pop
and
sub
leave
mov
add
xchg
int3
aad
sbb
xor
add
out
decl
roll
pop
test
xor
add
dec
jle
outsl
add
adc
jge
add
out
sbb
nop
mov
rcll
mov
frstor
or
add
adc
shrb
idivl
mov
repnz
mov
mov
rcl
sub
repz
push
add
ret
roll
xlat
push
es
fstpl
popa
dec
mov
cli
cmc
call
add
es
mov
add
ret
jg
pop
push
push
fcoml
movzwl
rcl
call
adc
or
outsl
psubd
mov
mov
add
inc
sub
dec
test
lods
jge
add
testb
add
out
inc
add
mov
call
dec
xchg
stc
lock
cmp
test
or
ljmp
push
dec
mov
aas
cli
sub
add
and
jge
add
pop
sti
inc
sub
loopne
adc
push
mov
mov
mov
lock
cmpb
push
adc
mov
loopne
and
inc
pop
icebp
cmc
sub
mov
add
lahf
xlat
cmp
inc
mov
pusha
ljmp
add
inc
push
add
add
sub
push
loopne
les
or
fdivrs
sbb
loope
push
xor
clc
enter
xor
adc
loop
or
cwtl
add
pop
std
not
jns
clc
cmp
int
out
insb
outsl
dec
insl
mov
jecxz
clc
cmp
daa
xchg
ljmp
mov
adc
out
gs
jp
insb
add
dec
xor
add
sbb
iret
hlt
add
fs
cs
daa
push
test
push
add
add
jle
add
add
sbb
adcl
pop
mov
notb
cmp
lcall
add
aaa
and
adc
out
lret
testb
pop
cmp
add
or
iret
xchg
fildl
or
sbb
inc
push
in
or
pusha
clc
fwait
add
cmp
adc
adc
pop
ss
push
fwait
jb
add
ds
lods
cli
inc
add
push
and
or
adc
sub
loop
test
mov
add
jmp
mov
adc
jp
mov
push
or
inc
mov
and
dec
fstpl
xchg
sarb
jne
jge
add
addr16
enter
add
jle
cmp
call
xor
push
fidivl
loopne
adcb
and
add
dec
call
add
test
fs
les
jmp
jge
add
out
jl
pminub
imul
mov
test
aas
sub
sbb
inc
xor
xor
movsb
sbb
aas
dec
pop
adc
test
fs
fistpll
add
mov
arpl
xor
add
sbb
addl
mov
and
into
repnz
and
aam
gs
xor
sbb
push
fs
test
and
adc
or
adc
xlat
or
sub
lock
add
das
jno
jmp
jp
add
pop
scas
out
or
pop
pop
jae
mov
xor
out
test
push
xor
and
int3
add
adc
mov
push
push
in
jle
or
and
call
aaa
add
push
adcl
add
mov
and
adc
sahf
or
mov
pop
test
inc
or
pop
std
cmp
push
movsb
lcall
dec
fdivl
add
enter
mov
outsl
adc
lds
in
mov
push
xor
cmp
jle
pushf
or
adc
and
bound
les
xlat
ret
push
jns
cmp
adc
pop
sbbb
adc
ds
add
push
test
xor
lds
or
aas
xor
outsb
rorl
js
adc
lar
gs
cmp
xor
lods
jmp
pushf
push
add
pop
stos
or
xor
call
pop
aam
add
sub
cmpsb
add
and
sarb
popl
cmp
push
xor
mov
pop
cmp
incl
jo
dec
add
mov
enter
add
test
xchg
or
int
adc
sub
jge
add
std
adc
or
xchg
jg
mov
add
push
daa
arpl
cld
sub
or
stos
in
push
in
lods
fsubrs
mov
nopl
fcmovnb
sub
test
shl
shl
in
into
or
cmpsl
incl
add
je
cmp
xchg
sbb
les
and
cmp
out
sbb
push
xor
lcall
xor
adc
fcmovnu
add
sub
inc
dec
adc
or
into
mov
push
and
or
inc
aas
loopne
jmp
xor
imul
aaa
cs
inc
js
inc
mov
das
ds
mov
mov
aas
shl
enter
int3
fdivl
adc
push
xor
mov
or
pop
loop
adc
add
loope
add
push
std
les
inc
fdiv
or
cs
push
out
add
lret
frstor
jl
aas
cmc
popa
decb
push
sub
nop
pop
pop
lret
add
jbe
test
fdivs
jo
cmpsb
add
ja
jno
dec
pop
sbb
les
sub
aaa
mov
adc
mov
and
clc
lds
call
add
adc
dec
pop
loope
neg
mov
pop
or
repz
and
std
hlt
pop
fcomps
in
and
and
sub
loop
add
rcrl
adc
jo
mov
int3
orb
clc
xchg
add
sbb
nop
xchg
mov
push
and
dec
daa
add
dec
adc
inc
adc
or
cmp
js
js
add
fisttps
addr16
in
cmp
adc
pop
mov
add
and
loop
sbb
jnp
add
inc
ret
orb
sbb
dec
push
cmp
repnz
push
mov
cld
or
inc
inc
out
call
sbb
lock
xor
cld
sarl
out
mov
add
test
jecxz
add
or
aas
sub
adc
mov
sbb
addr16
adc
pavgb
testb
jo
clc
xchg
sbb
repz
mov
stos
hlt
or
add
rorl
adc
pusha
mov
movq
add
sbb
and
arpl
out
outsb
mov
or
test
stc
mov
pop
nop
inc
mov
dec
lahf
jp
sbb
add
in
adc
lahf
mov
add
inc
or
pop
loopne
jl
jnp
pop
mov
push
repz
pushf
cmpsb
and
iret
stos
test
add
les
jge
mull
inc
adc
in
add
outsl
popa
imul
push
mov
cmp
jmp
dec
cmpb
adc
add
aaa
sub
iret
or
jecxz
enter
jle
faddl
mov
out
rolb
xchg
cmp
call
and
out
adcb
jle
mov
dec
sbb
clc
xor
sbb
stos
add
movsl
adc
add
adc
clc
add
shrb
in
xchg
xor
sbb
or
lock
psubusw
and
push
cmpsl
outsb
pushf
push
cmpsb
cld
je
jle
out
mov
push
jmp
cltd
mov
sbb
sbb
mov
in
inc
jp
shrb
jle
add
cmp
sar
pop
add
or
std
xor
lcall
cli
inc
xor
xor
mov
or
push
in
cmp
into
add
pop
adc
mov
or
push
jle
and
push
loopne
mov
test
in
push
add
or
xchg
sub
adc
pop
pop
loop
aam
adc
in
pop
jbe
jle
ds
into
mov
add
jns
pop
shlb
push
and
sbbb
cmp
mov
lcall
scas
icebp
lods
xchg
sidtl
in
test
cmpsl
iret
adc
lock
loop
cli
pop
xor
xor
adc
sub
loop
add
pop
sbb
cmp
jg
add
add
inc
push
dec
adc
xlat
jno
add
sbb
icebp
pop
xor
lret
lock
push
dec
adc
pop
popf
or
ret
push
pop
repnz
aas
inc
dec
arpl
sbb
adc
jo
push
jne
clc
add
sbb
pushf
ret
jg
adcb
add
cmp
add
xchg
add
mov
xor
inc
inc
stc
mov
jmp
cld
das
xorb
add
dec
je
add
inc
hlt
xor
enter
shl
push
and
movb
cmpsl
sbb
sub
xchg
in
scas
pushf
test
add
adc
sbb
add
mov
lcall
dec
ficoml
sbb
pop
in
inc
xor
jbe
pop
test
shl
add
add
inc
xchg
add
xchg
mov
jle,pt
add
and
repnz
addb
arpl
push
or
out
sbb
add
mov
sub
stc
xor
call
lahf
inc
or
push
lods
xor
loopne
pop
mov
repz
cs
mov
test
sbb
push
fs
push
dec
lcall
xor
je
add
push
cmp
test
jecxz
jp
call
loope
and
pushf
adc
mov
push
incl
cld
pop
sbb
sbb
and
out
xor
inc
sub
xor
repnz
in
push
inc
add
inc
scas
and
inc
add
lea
or
enter
or
xchg
cli
push
stos
mov
clc
mov
mov
divb
stos
lock
lock
hlt
mov
stc
cmp
lock
jo
fsubl
in
repnz
add
and
test
sbbb
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
mov
mov
pop
push
or
test
mov
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
add
push
inc
lods
or
cmp
outsb
sbb
add
out
jmp
scas
in
inc
add
shrb
and
dec
pop
xchg
add
inc
or
and
and
sbb
adc
mov
andb
shrb
jb
pop
cmp
push
mov
xor
xchg
lcall
mov
ret
add
repz
add
es
in
jp
jo
xor
sbb
push
inc
hlt
jmp
clc
sbb
shll
add
ficoms
xor
xor
cmp
popl
push
jmp
mov
mov
scas
adc
sahf
inc
and
inc
sbb
and
rorb
sub
ljmp
xor
sarl
sbb
push
mov
aam
xorb
add
pop
dec
push
add
add
hlt
lret
cld
enter
sbb
add
mov
mov
add
roll
shll
dec
and
out
lods
mov
add
rcr
inc
daa
add
lock
outsb
nop
jecxz
jnp
std
add
add
dec
daa
jne
jbe
cmp
inc
xor
add
je
jcxz
push
and
mov
xor
movsl
call
xor
in
out
pop
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
sarb
add
roll
add
xchg
in
pop
orb
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
rcl
sar
sarb
lock
xor
pop
xor
add
shl
cwtl
mov
inc
xor
dec
testb
shlb
hlt
xadd
cld
cmp
insl
dec
shlb
movsl
push
lock
dec
cmp
cmp
sti
loopne
add
stc
addl
sub
inc
sub
imulb
cmp
mov
das
mov
in
push
sub
sarb
and
test
add
and
ret
pop
jecxz
and
loope
mov
lret
and
jmp
sti
pusha
mov
arpl
mov
inc
bound
movaps
jo
add
add
insb
shrl
add
shrb
and
scas
out
mov
out
imul
stos
add
test
push
loopne
lock
stos
add
inc
jg
jg
jg
jbe
sbb
loopne
add
mov
xor
mov
je
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
add
rcll
xchg
rclb
push
jae
jne
ja
sbb
cmp
adcl
pop
inc
popf
loopne
addb
sbbl
fwait
rcrb
cltd
mov
inc
cwtl
mov
dec
mov
rorl
cmovle
mov
rorb
inc
jo
add
roll
rolb
into
into
xchg
scas
inc
in
cmp
mov
in
add
rorb
push
mov
add
in
pushf
pop
pop
add
xor
popf
push
pusha
mov
test
inc
add
push
push
push
out
add
mov
ss
pop
popf
mov
pop
pop
pop
test
inc
mov
sbb
pusha
push
inc
shl
jae
sbb
call
aas
push
scas
add
mov
add
movl
adc
movsb
dec
rorb
sub
loopne
push
pop
xor
add
mov
fistpll
add
arpl
add
call
minps
xor
pop
mov
jle
insb
add
push
cld
cli
mov
and
cmp
lods
add
ret
rcll
ljmp
repz
sar
enter
dec
or
mov
clc
test
pop
pextrw
pushf
sub
mov
shlb
inc
lods
add
and
dec
mov
outsl
enter
cld
dec
bnd
pop
aad
int3
push
lods
cmp
push
jae
jmp
add
sub
push
test
repnz
add
mov
xchg
and
cli
add
push
int3
gs
or
decl
xchg
hlt
je
rolb
mov
cmc
add
lea
inc
pop
cwtl
mov
lock
push
lcall
xchg
cmp
inc
add
lret
jbe
test
cltd
mov
sub
push
cwtl
addr16
jge
add
xor
cmp
shrb
or
pop
cmp
mov
push
cmp
mov
pop
test
inc
add
cmp
repz
dec
and
and
addr16
stos
mov
ret
in
les
leave
cmp
icebp
pop
shlb
pop
jmp
add
or
repnz
xchg
dec
xchg
sbb
into
sbb
pop
adc
add
icebp
cmp
mov
cmp
iret
pop
fsubp
push
push
fldenv
adc
outsl
add
sub
mov
test
sbb
and
adc
shrd
mov
add
and
jno
popf
sub
add
add
mov
and
data16
cwtl
mov
sarb
or
push
adc
add
jb
stc
jbe
push
add
push
xchg
cli
fisubs
sbb
movsl
aas
stc
bound
adc
mov
pop
repz
push
test
add
nop
push
fcompl
stc
movsb
ret
in
and
lods
dec
or
addl
pusha
cmp
and
xor
push
cmp
and
and
movsl
adc
jo
add
or
mov
sbb
push
and
and
leave
or
nop
div
xor
add
imul
mov
outsb
sub
arpl
add
je
stos
leave
loope
lock
dec
pop
cld
jno
cmp
mov
adc
lret
mov
mov
mov
int3
sub
andb
sti
jo
mov
mov
sbb
nop
jecxz
mov
lock
xor
stos
pop
and
dec
pop
adc
add
add
inc
and
or
pop
icebp
add
push
mov
jle
add
pop
push
or
cmp
das
mov
inc
pop
mov
sbb
aas
aam
lea
xchg
pushf
cmp
js
or
or
add
adc
idivl
jmp
repz
stos
and
or
xor
test
add
xor
mov
ret
mov
int3
icebp
or
leave
loopne
push
popf
push
add
mov
loopne
add
pusha
xchg
roll
pop
cmp
push
adc
mov
leave
je
inc
mov
adc
roll
int
inc
dec
mov
xor
sarb
hlt
push
add
or
mov
inc
xor
dec
add
sbb
or
mov
jmp
repnz
outsb
cmpsb
push
push
inc
dec
sahf
stc
adc
scas
gs
jno
pop
inc
push
and
dec
lahf
and
or
or
fcmovbe
dec
ret
stos
add
hlt
dec
add
xor
add
inc
pop
xor
mov
pop
fnstcw
cld
sbb
or
push
push
ret
xchg
or
lret
adc
sub
adc
adcl
jmp
leave
pushf
loope
inc
push
add
and
cld
xor
mov
test
mov
icebp
jno
add
imul
pop
add
xlat
mov
add
filds
jae
sub
push
stc
lret
jg
jecxz
adc
xor
cwtl
add
sub
fbld
and
mov
mov
ficoms
dec
or
mov
jo
lock
inc
xchg
mov
push
pop
add
push
pop
pop
add
cwtl
loop
mov
sub
xor
add
shl
icebp
and
add
insl
cmc
and
xchg
push
push
lcall
data16
xor
sti
cli
add
in
repz
repnz
add
addb
push
adc
sbb
shrb
push
adc
xor
repz
nop
out
out
jecxz
mov
mov
nop
cmp
sti
out
imul
and
cmpb
cmp
lea
cmp
xor
mov
movzbl
mov
dec
add
stc
sbb
ja
mov
xor
cmp
pop
orb
cmc
push
roll
insb
int3
push
rol
mov
sti
sub
add
mov
mov
cmc
sahf
add
cmp
add
pop
cmp
test
incl
pop
shr
dec
loope
sarb
inc
mov
lea
jo
and
push
cmp
inc
push
add
dec
add
jne
xchg
lahf
push
mov
add
and
push
mov
jge
std
sbb
xor
cmp
test
popf
jl
les
xchg
dec
add
add
mov
sbb
sldt
xchg
std
lahf
add
aaa
push
sbb
jmp
mov
lods
sub
add
push
outsl
add
pushl
add
test
jge
out
adc
divl
lahf
jnp
lods
mov
cmpl
cmp
stos
popf
mov
add
mov
in
sbb
jl
enter
push
mov
inc
jno
or
test
or
testl
add
in
cmp
mov
mov
adc
incl
xchg
jb
push
or
or
out
push
add
cmp
or
xor
add
sarl
mov
xor
push
push
lea
push
dec
or
or
mov
inc
cmpsb
mov
add
mov
out
adc
mov
loope
ja
add
sub
in
insb
out
dec
clc
hlt
test
xor
add
cmp
inc
adc
dec
movsl
fisubl
and
fsubrs
mov
push
jg
adc
rclb
sub
outsb
into
shrb
mov
or
lea
xor
add
in
ss
rclb
add
mov
inc
out
rcr
push
ja
add
repnz
adc
add
loop
shll
decl
push
sbb
inc
or
pop
loop
out
pop
arpl
imul
mov
loopne
add
dec
ret
dec
inc
sbb
notb
movsl
add
loopne
subl
mov
jbe
mov
cmp
je
lret
add
jo
mov
movsl
loope
imul
mov
push
xchg
idivb
or
mov
jl
add
in
in
stos
jmp
jne
adc
les
add
pop
test
loope
dec
push
mov
add
sub
add
shrb
pop
sub
dec
test
jnp
or
lcall
xchg
pop
inc
mov
lahf
scas
loopne
xor
add
fs
jno
mov
sub
pop
out
rol
add
testb
cs
loopne
movw
ret
push
out
or
clc
adc
cli
xor
add
push
sbb
ret
fisttpll
xor
adc
mov
sbb
add
rorb
or
out
cmp
loopne
sub
jno
packsswb
je
xchg
and
pop
adc
push
adcl
mov
loop
repnz
in
inc
push
aam
push
push
mov
pop
jne
incl
jle
sbb
ljmp
les
arpl
mov
dec
test
jbe
add
loop
xor
dec
addr16
mov
dec
scas
jbe
pop
pop
xchg
push
adc
pop
mov
add
insb
inc
add
jbe
dec
xor
pop
cmp
test
inc
xor
ja
jbe
add
loope
cli
jo
movb
fcmovnu
or
inc
mov
ficompl
fstps
cmp
rol
mov
mov
das
add
int3
cmp
xor
pop
mov
push
roll
cld
mov
or
dec
es
lret
in
loopnew
fmull
mov
test
mov
imul
or
push
loopne
mov
pmulhw
or
scas
repz
mov
and
pop
loopne
dec
test
add
jle
mov
add
dec
mov
push
add
inc
daa
lahf
or
pushf
mov
cmpsl
sub
xlat
mov
cmc
add
sub
pop
adc
add
fists
cmp
mov
hlt
shr
mov
lock
ret
jg
pop
test
mov
pop
in
inc
add
xor
lea
test
sub
pop
inc
sbb
add
xorb
sub
lret
test
jmp
outsb
test
or
pshufw
adc
fildl
add
stos
add
jmp
or
jo
aas
outsl
add
xchg
pop
out
push
aad
mov
cmp
sub
mov
dec
mov
add
mov
and
inc
cmp
mov
data16
jmp
xlat
vmwrite
or
cmp
add
pop
jnp
mov
shrb
sarb
add
daa
add
jnp
mov
insb
add
iret
push
push
push
test
cmc
pop
pop
jo
add
addps
mov
cmp
and
mov
aaa
jo
add
mov
clc
popf
leave
xor
cwtl
dec
add
mov
sbb
add
jnp
out
mov
daa
sbbb
inc
sbb
hlt
jmp
sbb
jnp
stos
push
add
ss
leave
add
pop
push
jns
aaa
mov
loop
xor
call
icebp
add
adcb
fs
jb
add
adc
mov
or
cmc
dec
push
addl
sarb
pop
jecxz
cmpsb
std
or
testb
dec
jae
in
fdivrl
ds
dec
pusha
inc
or
fdivrs
sub
add
ret
add
xor
iret
cmp
ja
xchg
ror
add
push
inc
cmp
sub
push
inc
jbe
add
mov
out
and
add
lcall
jmp
inc
adc
push
mov
mov
js
pop
or
and
inc
loop
xor
sub
jnp
ljmp
nop
pop
inc
add
mov
mov
adc
add
ljmp
sub
cmp
add
and
push
pop
icebp
shll
xchg
add
or
add
or
pop
and
ret
jmp
add
add
mov
sub
lret
rcrl
add
jg
sbb
sub
or
push
arpl
inc
leave
test
fsubrl
and
cltd
cwtl
jae
sub
xchg
add
lcall
adc
rolb
push
jns
sub
je
or
dec
add
cmpb
add
jne
add
cmp
or
loopne
mov
adc
inc
add
dec
cmc
rcr
lret
pop
fdivr
push
clc
cmp
add
fcoms
or
inc
add
push
cld
mov
add
jg
xorl
js
sbb
jmp
dec
xlat
lret
mov
sub
in
jmp
add
pusha
push
sbb
repz
or
inc
dec
add
push
decl
push
es
dec
sbbb
call
push
movsl
pop
inc
in
cmove
arpl
shrb
movl
sub
pop
jne
xor
bound
sbb
popa
or
out
cmpsl
in
and
mov
lock
dec
sbb
and
adc
mov
dec
in
jne
ljmp
dec
dec
gs
jl
add
rolb
push
and
rcrl
dec
add
sbb
adc
cmp
mov
jecxz
movsl
mov
lds
std
sub
inc
addb
jl
sbbb
xchg
xchg
add
das
shlb
add
and
ja
pop
xor
or
fcmovnb
add
mov
add
xchg
cld
add
pop
xchg
and
jnp
imul
fists
or
leave
test
orb
push
add
dec
push
add
or
ret
js
xchg
pcmpeqb
mov
stos
mov
sbb
dec
scas
insb
adc
add
arpl
mov
cmpsl
sub
mov
outsl
repnz
test
in
sbb
orb
lret
add
mov
fadds
jle
jnp
jns
jge
dec
add
sub
or
dec
pop
push
sbb
or
xor
nop
movzwl
inc
sub
add
addr16
and
dec
cmp
sar
out
or
cmpsb
add
sub
push
push
mov
popf
xlat
out
adc
decl
stos
cmpsl
pop
ljmpw
jnp
aas
add
jl
aad
add
shrb
adc
pop
cltd
inc
aas
cmpsb
mov
pop
and
ret
call
adc
mov
rorb
or
movb
or
cs
add
arpl
and
pop
pop
fldcw
jne
push
add
jp
test
negb
inc
add
test
jo
or
or
adc
addr16
std
add
shlb
or
jg
loope
sub
add
cwtl
inc
aam
sarb
cmp
or
fistl
add
movsl
jmp
in
xchg
pop
inc
cmp
add
test
scas
mov
mov
add
inc
jbe
aad
dec
xor
or
xchg
ljmp
fistpl
fadds
shlb
nop
mov
enter
add
mov
lgdtl
cmp
mov
stc
aaa
push
add
adc
push
push
sbb
adc
cmp
adc
adc
rclb
stos
and
or
test
push
add
pop
rorb
add
rolb
sub
mov
add
es
add
cmpsl
mov
out
test
add
cmp
sti
ret
add
jle
and
movhps
repz
addl
push
or
add
xor
popa
cmp
push
mov
push
mov
fs
mov
lods
es
xchg
add
xlat
pop
jo
out
lahf
clc
inc
dec
sub
add
lcall
push
imul
or
jmp
push
decl
cmp
and
fbstp
add
dec
push
sbb
pop
sub
and
push
stc
ljmp
jo
pop
xchg
stc
or
mov
mov
fcoms
adc
add
xor
mov
in
jno
add
xor
inc
js
add
pushf
lret
fstpl
or
movb
adc
adc
adc
shll
iret
les
add
xchg
aad
jmp
imul
mov
add
pop
fnstcw
stos
js
std
mov
add
pushf
or
push
and
add
jno
adc
lahf
maxps
pusha
inc
push
icebp
push
push
es
pop
mov
sub
je
and
jp
add
shll
add
and
shll
fiaddl
jecxz
into
sbb
pop
cmp
in
sbb
cli
sub
xor
mov
or
adc
and
pusha
pmuludq
mov
add
mov
pusha
sbb
scas
add
pusha
mov
fmuls
sub
adc
ja
xlat
inc
add
roll
add
fldlg2
popa
enter
add
mov
sar
xor
xor
pop
adc
int
mov
mov
js
add
push
cld
push
ret
add
mov
stos
jle
add
xor
add
add
xchg
pop
xor
lea
cmp
clc
or
add
imul
mov
mov
dec
xor
add
clc
aas
jno
test
xchg
pop
cwtl
push
rorl
add
pop
pop
adc
xor
ret
movsl
or
add
pop
sbb
jle
add
adc
nop
add
dec
add
add
popa
and
jecxz
cmp
imul
test
add
jmp
or
push
int3
add
adc
mov
stos
call
adc
xorl
repz
push
add
insl
orl
jo
add
adc
mov
cli
idiv
test
add
jmp
rcl
push
add
sub
pop
add
icebp
cld
inc
add
orl
sar
popf
add
xor
shrl
cmpsb
jb
dec
or
rol
loopne
add
dec
inc
nop
clc
xchg
fadds
shlb
loopne
sarb
fwait
sub
mov
lock
rol
add
add
cwtd
inc
inc
stos
add
je
roll
mov
enter
loopne
jnp
add
dec
sub
pop
add
mov
push
les
dec
aam
shlb
add
fsubs
add
and
xchg
ja
rsqrtps
push
inc
test
ret
loop
pop
shrl
xor
cmp
or
add
and
xor
stos
push
add
adc
jno
cwtl
subl
cwtl
das
add
xor
add
aas
jnp
mov
add
and
pop
jbe
sbb
mov
add
pop
stc
mov
mov
and
dec
mov
fcoml
push
pop
inc
popa
call
je
push
std
adc
push
sti
push
test
inc
enter
push
and
sarb
xchg
lret
pop
test
pop
xchg
insb
adcb
ret
sub
test
add
xor
ljmp
add
adc
sbb
jbe
and
sub
add
es
int3
adc
mov
pop
pushf
xchg
inc
sarl
cmpsb
call
cmp
or
mov
call
mov
adc
pop
add
fwait
outsl
xlat
and
out
ss
xchg
jge
rorb
pop
leave
dec
arpl
cwtl
ss
fstps
lcall
je
inc
test
or
mov
push
or
popa
nop
repnz
mov
stos
sbb
cmp
out
ljmp
sub
xor
lahf
test
add
pop
bound
inc
add
mov
mov
stos
add
adcb
or
mov
pop
adc
xchg
lret
stos
add
mov
add
mov
es
or
add
pop
in
inc
jmp
flds
repz
and
dec
fnstsw
add
mov
inc
popf
push
and
arpl
ret
incl
stos
dec
lds
add
inc
adc
fldl
lret
les
pop
adc
lahf
test
mov
jmp
or
in
stos
dec
add
int3
xchg
and
inc
or
cmp
inc
add
adc
push
push
fistl
push
jo
add
lea
testl
int
cmpsb
pop
adc
mov
adc
add
jno
call
pusha
out
mov
stos
add
pop
cmp
int
ljmp
test
mov
stos
movb
add
push
dec
cld
rcrl
cmpsl
xchg
add
mov
add
fs
dec
sbbb
cli
push
adc
es
stos
xor
sbb
test
and
daa
gs
inc
sbb
add
xchg
out
mov
lds
xchg
mov
add
in
push
das
cmp
andb
inc
xlat
push
dec
mov
data16
jb
xchg
and
push
sub
test
out
mov
gs
sbb
aaa
sti
lcall
dec
push
push
in
pop
add
mov
add
adc
add
jmp
sub
xor
inc
scas
imul
mov
adc
or
inc
push
add
adc
ret
jmp
add
pop
push
cld
push
arpl
pop
jne
and
outsl
lret
xchg
loop
sbb
jmp
decl
orl
pop
sub
lods
daa
lahf
add
jbe
cli
push
out
add
mov
movsb
push
ljmp
pop
mov
das
push
xchg
inc
pop
add
sub
andb
pop
scas
das
cwtl
add
and
clc
mov
pop
adc
or
jbe
push
testb
test
jno
test
sub
jo
aad
rorb
jno
dec
jp
mov
or
xchg
ret
ds
shlb
xor
ja
add
std
das
mov
pusha
mov
sbb
pop
pop
shlb
add
fistpl
pop
mov
lcall
cmp
adc
add
xchg
enter
mov
mov
pop
or
push
sbb
repnz
xlat
ljmp
imul
icebp
cmpsl
sbb
sbb
push
test
and
sarb
pushl
cld
pop
mov
xor
jns
cli
push
test
mov
mov
pop
pusha
cmp
sbb
push
inc
inc
loope
call
lret
scas
addb
pop
pop
inc
rorb
push
insb
pop
mov
stos
add
cli
sbb
sbb
mov
mov
rolb
aas
and
cmpsb
movsb
mov
mov
pushf
cmpsb
pop
je
pop
movl
xchg
cmp
mov
jp
mov
movsl
pop
dec
fisttpl
in
inc
add
and
loopne
leave
test
dec
mov
pop
or
cmp
shrb
sbbb
inc
pop
testb
fwait
test
addr16
add
pop
add
push
pop
or
inc
outsb
and
add
push
mov
cld
loope
hlt
in
jbe
dec
sub
push
push
lods
mov
andb
jb
or
movsl
out
sbb
loope
push
rol
mov
dec
clc
je
in
add
sub
add
icebp
push
lock
jecxz
mov
add
fisttps
outsl
or
adc
xlat
or
mov
cmpsl
loopne
add
dec
mov
rcll
jl
mov
jg
add
out
push
jbe
cmc
repnz
or
testl
pop
fildl
imul
dec
pushf
call
jae
cmp
inc
js
in
lock
popa
addb
addl
mov
popa
sbb
ret
lret
mov
cmp
or
or
hlt
mov
cmc
sub
adc
add
out
stos
cmp
xchg
add
inc
mov
ja
push
aad
inc
jne
add
push
call
pop
shrb
lret
adcb
fbld
jns
add
mov
add
pop
loop
dec
out
test
mov
add
mov
je
cmpsl
in
mov
sbbb
xchg
repnz
shll
iret
jo
pushf
add
lds
pop
mov
fmuls
and
arpl
jae
or
xchg
xor
cmpxchg
fisttpll
imul
mov
movsl
mov
jg
mov
loopne
add
jge
inc
cli
dec
pop
movsb
add
lahf
push
mov
push
xor
sub
inc
fs
dec
je
cwtl
out
add
mov
mov
enter
mov
add
rclb
add
in
loopne
dec
push
mov
xor
or
test
add
jg
mov
mov
aam
sub
cmp
popa
mov
add
sti
sub
add
push
dec
and
xor
adc
jns
add
loopne
repz
or
push
mov
dec
push
lcall
daa
dec
es
call
mov
mov
push
jo
push
add
xchg
and
sbb
add
xchg
pushf
call
push
cmp
sti
add
xor
inc
loop
push
loop
std
add
jo
push
and
add
sub
mulb
adc
addr16
out
scas
add
imul
cmp
dec
add
movsl
adc
cmpsl
add
sarl
xorb
lret
pop
cld
adc
lahf
lods
xchg
repz
std
scas
inc
push
scas
fcmovne
push
jl
cld
push
add
inc
pop
add
rorl
test
add
movsb
pop
adc
mov
jns
add
lret
sti
push
out
jbe
add
mov
js
sub
lock
push
loopne
popl
jo
xchg
cmp
cwtl
bound
inc
mov
pop
push
dec
xor
dec
push
add
insl
ja,pn
push
hlt
jge
add
push
adc
arpl
data16
jae
addr16
cld
inc
sbb
push
push
inc
jl
inc
pusha
jbe
outsb
stc
jmp
les
lock
imul
dec
jge
jl
iret
nop
push
dec
dec
outsb
iret
jnp
mov
cmp
jne
ret
icebp
outsl
insb
clc
gs
pusha
push
out
in
jae
jns
pop
jle
sbb
and
or
cmp
add
jae
dec
add
sbb
or
push
insl
push
popa
jb
dec
pusha
ret
bound
popw
addr16
adc
jbe
push
jno
add
les
iret
test
mov
outsb
data16
push
jbe
ja
push
inc
mov
or
jb
jae,pn
arpl
add
test
push
push
sbb
imul
arpl
pop
dec
pop
iret
inc
push
pop
lock
popa
loopne
push
push
je
mov
lea
xchg
inc
cmp
outsb
inc
xchg
into
sarb
stc
and
dec
add
imul
in
xchg
xor
push
add
jl
mov
loope
xor
fiadds
push
adc
je
push
addr16
jbe
and
pusha
ja
shlb
sub
add
jp
addl
push
cmpsl
dec
push
iret
shll
enter
add
xchg
sbb
arpl
insb
shlb
jmp
add
ret
enter
and
mov
mov
sub
adc
jp
test
and
sub
sub
mov
les
sbb
mov
shlb
pop
and
ds
daa
push
cltd
xorl
add
jae
mov
enter
fs
sarb
rolb
add
xchg
adc
sbb
mov
dec
add
sbb
aam
nop
push
dec
in
xor
divb
test
jle
xor
mov
test
xchg
push
add
jp
and
rolb
nop
out
fisubl
mov
sub
mov
cmpb
add
inc
adc
push
pop
ret
out
fs
push
cmpsl
jl
or
popf
loop
sbb
in
add
push
cld
hlt
xor
add
push
lea
add
mov
mov
bswap
mov
add
add
bnd
or
push
mov
push
push
push
add
sbb
jmp
push
mov
pop
pop
aaa
pusha
xchg
dec
or
aad
ljmp
jle
clc
iret
mov
jb
pop
sbb
xor
and
shll
cmp
xchg
daa
jl
mov
rorb
repnz
and
inc
pop
adc
loop
push
pusha
movsb
push
rorb
inc
icebp
mov
flds
inc
adc
outsl
mov
rcrl
inc
into
or
ret
shlb
and
les
pop
sti
andb
cmp
fiadds
or
and
fcoml
adcb
sub
sbb
enter
inc
and
mov
cmp
xor
cmp
cmp
flds
inc
add
dec
adc
xchg
push
mov
in
ljmp
sbb
jae
out
cmpsl
shlb
or
add
xor
mov
pusha
aad
jbe
xor
insb
or
xchg
jo
adc
js
and
jl
mov
mov
mov
lods
xchg
inc
add
mov
or
xor
and
icebp
cwtl
pop
mov
ds
mov
sbb
mov
push
idivl
ret
fst
lds
movsb
aad
push
mov
or
lds
and
dec
pusha
es
cmp
je
push
aad
mov
mov
repnz
pop
insl
cmc
int3
ror
push
pop
nop
mov
and
pusha
loop
pop
inc
imulb
add
mov
inc
enter
rcl
sbb
mov
cli
faddl
push
adc
xor
dec
inc
in
movsl
mov
lock
mov
pop
arpl
mov
sbb
aad
pop
cwtl
jmp
sbb
jnp
or
or
movups
mov
addb
sbb
pop
and
or
icebp
add
xor
push
inc
cmp
cmp
xor
mov
inc
add
insb
add
call
mov
fadds
or
pop
mov
add
or
add
dec
clc
dec
add
add
mov
pushf
add
fistpll
lds
pop
leave
push
push
add
jmp
ljmp
xor
add
jbe
lods
dec
or
dec
loope
add
adc
cmp
jle
xor
sbb
rorl
mov
clc
test
cmpsb
add
cmpb
out
jg
call
repnz
pusha
out
shrd
mov
fsubp
dec
and
add
aaa
jne
cwtl
pop
test
add
xchg
push
adc
mov
call
add
pop
mov
add
pop
loop
lahf
and
rolb
jae
push
push
adc
mov
es
push
jnp
out
add
scas
or
test
rolb
cmp
cmp
addb
or
jmp
jge
add
push
or
lea
mov
cmpsb
mov
mov
cmp
lock
sub
push
add
das
js
movsb
cmp
sub
pusha
add
jl
lods
lret
jmp
sbb
push
subb
push
pusha
ret
popf
lret
mov
lret
test
jbe
cmpb
aam
jb
xor
push
aaa
adcl
add
xor
inc
sbb
jmp
repnz
or
pop
std
fadd
psrld
loope
add
pop
mov
mov
nop
jnp
jp
mov
add
inc
mov
push
cmp
mov
inc
pop
fcompl
bound
or
mov
xor
les
xchg
jnp
add
inc
insb
pusha
mov
jl
push
dec
ret
lret
push
add
call
js
outsl
jne
or
jb
cs
push
shl
and
pusha
shll
add
ret
xor
insl
mov
int3
jp
aas
sti
scas
add
dec
cli
shl
roll
sbbb
clc
jge
or
add
dec
push
pop
push
dec
add
cmp
je
jnp
xchg
popl
ljmp
push
pop
lret
jne
add
pop
push
adc
roll
lcall
inc
in
jp
add
pop
faddl
mov
dec
call
or
adc
add
nop
outsl
pushf
test
jnp
push
cli
pmaxsw
or
add
je
dec
stos
bnd
jnp
add
sti
push
call
dec
inc
sub
add
bound
fcmovb
xchg
cs
add
mov
mov
cmp
mov
mov
movsb
dec
sbb
push
mov
and
test
clc
inc
mov
xchg
lcall
jne
and
imul
addb
inc
pop
cmpl
in
scas
adc
aam
mov
pop
xchg
push
outsl
mov
mov
add
push
into
loopne
movb
jecxz
enter
add
adc
out
icebp
cmp
leave
adc
shrb
out
ds
pop
leave
adcb
add
shr
add
cmp
mov
sar
loop
xor
movb
bound
pop
jb
add
enter
mov
jl
cs
dec
cmp
xchg
jl
sbb
or
inc
cmpb
jge
adc
push
clc
and
sahf
out
inc
arpl
gs
lock
pop
movsb
add
in
inc
pop
cli
mov
enter
roll
add
and
or
jne
push
scas
add
and
cs
pop
daa
jbe
add
sbb
cmp
rorb
mov
add
push
imul
and
ja
and
hlt
out
add
fldl
call
add
test
mov
jge
cmp
dec
adc
lds
pushf
mov
dec
sahf
imul
add
shrb
jecxz
dec
xchg
inc
push
jl
idivl
add
dec
addr16
and
dec
or
add
nop
stos
sbb
sbb
jp
cmpsb
sarl
sub
and
add
push
and
test
dec
xchg
mov
inc
or
add
subl
ret
jo
push
sbb
pop
test
repz
hlt
fildll
cld
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
es
xlat
loopne
call
jno
add
inc
jmp
lea
not
ljmp
cmp
add
cmp
adc
jae
jno
dec
and
in
sbb
jne
mov
outsb
add
fcmovu
lret
add
sbb
add
or
fcmovnb
pusha
cmp
inc
or
shlb
out
out
add
sub
mov
jp
cmp
lea
xchg
int3
inc
cmp
pop
or
sarb
jle
xchg
adc
xchg
dec
iret
decb
repz
lock
bound
jnp
mov
lcall
ds
fisttpl
mov
lock
repnz
cmpsl
mov
in
loopne
adc
cmp
fistps
or
push
add
add
cmc
sub
jg
scas
mov
jge
add
mov
cmp
jae
or
loopne
nop
andb
pop
iret
sub
ret
je
inc
pushf
lret
inc
or
dec
test
adc
add
sub
mov
inc
pop
fiadds
push
push
add
add
ljmp
sbb
lea
or
sub
jbe
dec
sbb
jmp
xchg
add
or
xor
adc
sub
adc
shlb
jge
pop
sbb
jmp
sub
push
add
add
imul
pop
and
shlb
ret
imul
addb
add
inc
or
pop
xor
lahf
or
push
unpckhps
inc
mov
in
add
mov
add
push
add
inc
xchg
lret
pop
adc
test
lock
add
sbb
mov
add
jmp
out
dec
pop
test
pop
add
sbbb
add
dec
aas
roll
pop
pop
add
jmp
les
sbb
pop
add
and
fnstenv
sbb
inc
roll
loopne
test
and
and
outsb
pushf
lahf
jecxz
dec
lcall
ljmp
add
jmp
mov
gs
nop
jae
jbe
add
xchg
fisttpll
jae
cmp
and
mov
jmp
sbb
adc
aam
in
out
add
sbb
dec
xor
ja
add
adc
sbb
sbb
ja
cwtl
mov
mov
cmp
orb
adc
js
xchg
add
push
add
cmp
push
xchg
cmpsl
mov
lret
add
das
imul
insb
decb
add
mov
push
testb
out
jmp
rolb
cmp
cli
jae
mov
pop
inc
sub
cmp
mov
lret
inc
popf
inc
dec
push
cmc
add
fld
inc
or
test
sub
sub
daa
mov
es
add
mov
pop
stos
fs
inc
ret
nop
add
ds
cmp
dec
add
clc
sub
xchg
nop
sub
xchg
dec
adc
add
out
add
push
fcomi
push
es
mov
clc
jo
pop
cmp
cmp
ljmp
push
nop
repnz
clc
pop
call
call
mov
add
xchg
pop
jns
push
mov
cmp
add
scas
sub
orb
mov
cmp
pop
mov
push
loopne
mul
and
adc
cmp
rcrb
pop
pop
icebp
or
out
add
loop
cmp
add
add
or
or
es
lret
fs
add
adc
test
xchg
cli
lcall
orl
mov
lcall
and
cmp
sbb
pop
jns
pusha
pushf
fnsave
pop
sub
push
jp
push
inc
dec
xchg
add
inc
nop
jbe
push
push
add
std
shll
sbb
jle
gs
add
loopne
fiaddl
je
cmpsb
inc
pop
sub
hlt
ja
add
dec
nop
fsubrs
add
mov
xlat
test
add
jmp
dec
ud2
movsl
add
mov
rorl
fiadds
pop
sub
nop
add
popa
or
movzbl
stc
iret
loop
pop
add
das
add
add
push
inc
arpl
jae
add
dec
ret
or
add
out
dec
cmp
sbb
imul
cmovb
add
mov
ds
push
or
mov
loop
sbb
jecxz
add
clc
adc
jo
push
repnz
mov
or
lds
mov
add
pop
sub
repnz
jb
or
cmp
and
movsb
inc
dec
xchg
popa
outsb
aam
xor
enter
lahf
cmp
add
jmp
sbb
and
xchg
inc
push
mov
pop
enter
xor
shl
add
ljmp
fadds
jmp
add
jb
test
add
out
sub
adc
mov
or
add
cmp
int3
hlt
mov
add
sub
adc
iret
xor
add
xor
aam
hlt
je
js
mov
sti
add
cmp
pop
das
push
or
add
or
sub
jmp
lock
rcrb
adcl
jne
or
add
jmp
and
dec
pop
roll
loope
push
mov
cwtl
imul
jge
cmp
push
add
cmp
pop
roll
stos
mov
or
add
mov
or
add
pop
test
sub
iret
push
mov
push
add
mov
pop
sbb
imul
and
inc
sub
and
mov
subl
clc
xchg
testl
sbb
fisubrl
mov
ret
loop
or
je
add
add
pop
stos
stc
adcb
add
or
rcrb
scas
add
push
add
into
sti
jl
aas
fldl
adc
movsb
jg
push
lds
repz
or
cwtl
add
pop
or
push
mov
dec
jb
jnp
add
repnz
xor
int
push
mov
cli
imul
mov
inc
dec
inc
pusha
cli
inc
pushf
pop
movsb
shrb
leave
xor
pusha
pop
or
xor
mov
pushf
sbb
or
adc
test
aam
test
push
pop
add
push
cmpsl
push
add
int
add
pop
stos
xor
pop
in
or
or
add
sarb
jl
add
jmp
test
cwtl
sbb
add
push
cs
mov
xchg
add
rorb
clc
call
sbbl
adc
add
cmp
xor
cmp
jbe
sbb
sbb
mov
inc
stc
les
loop
jg
add
leave
xor
inc
xchg
add
in
adc
int3
movsb
add
daa
add
repz
cmp
rolb
rolb
dec
mov
jmp
mov
cmp
cli
cmpsl
inc
push
xor
pusha
ret
push
add
xor
push
test
in
add
fstl
loopne
sub
nop
cmpsb
xor
add
mov
inc
test
add
aam
adc
dec
sbb
push
jmp
xchg
xor
test
ja
jmp
testl
subb
add
popf
fsubs
add
ja
mov
add
and
roll
loopne
out
and
cld
pop
jbe
roll
out
jl
imul
mov
scas
ret
or
mov
sub
mov
push
add
or
sub
daa
ja
xchg
mov
pop
mov
adcb
xchg
aas
cmp
jbe
test
and
inc
int
cs
add
std
sub
mov
nop
loopne
push
out
add
or
inc
xor
pop
inc
mov
dec
xor
test
je
add
mov
sub
pop
push
outsb
or
pop
ss
mov
shrl
dec
mov
add
adc
inc
add
lea
inc
add
leave
repz
test
mov
movsb
out
or
inc
jne
add
dec
fdivrl
xchg
cmp
xor
pop
mov
add
add
cmp
adc
sarb
mov
add
addr16
jmp
mov
push
push
inc
pop
lods
mov
xlat
sbb
daa
add
cmp
sbb
nop
or
xorl
push
sbb
cmp
inc
mov
xchg
fcmovb
jnp
shll
push
add
mov
sti
dec
test
add
cmp
push
loope
jl
and
pop
add
into
add
xchg
mov
jno
add
xor
faddl
add
add
push
mov
inc
jne
adc
popa
and
add
cld
and
mov
fcompl
loopne
add
inc
add
push
add
mov
inc
adc
add
shl
cmp
ja
in
aas
aam
cmpl
mov
sub
aad
adc
add
mov
jae
rcll
je
negb
cmp
add
push
add
jecxz
jae
orb
and
adc
movsl
mov
aaa
inc
mov
mov
pop
jmp
and
jp
lret
call
add
clc
insl
dec
lods
cwtl
jae
add
cmp
hlt
adc
add
xor
lds
dec
cmpb
and
iret
in
inc
sub
sub
mov
imul
shll
add
push
cmp
sub
test
not
nop
jns
add
ret
push
pop
lahf
mov
aas
in
push
pusha
mov
adc
sub
sub
push
data16
inc
xor
push
add
sub
add
jae
add
cld
rolb
or
sub
ss
add
xor
inc
add
sub
add
arpl
ret
sbb
push
jecxz
loopne
jne
add
adc
rorb
inc
aas
add
out
ret
jno
add
adc
pushf
loopne
cld
xchg
clc
pop
jno
add
stos
out
push
aam
push
mov
insl
adc
movd
mov
cmp
jne
or
lods
call
inc
push
push
pop
orb
or
movsb
or
dec
push
fadds
inc
inc
bound
int
pop
into
leave
cmp
mov
jae
dec
push
add
dec
adc
dec
jl
add
pop
repnz
popf
addl
cmpsl
cmp
adcl
enter
add
cmp
dec
add
adc
jnp
add
and
jl
dec
pusha
push
add
stos
xchg
pop
loope
nop
jp
sbb
rol
pusha
or
jne
xor
push
jb
inc
shr
test
cmc
mov
xchg
lods
mov
adc
jbe
adc
aam
add
cmp
loopne
adc
add
mov
in
add
in
dec
dec
insb
outsl
xchg
add
sbb
sub
fdivs
jo
add
cmp
cmp
mov
incb
popa
icebp
push
jbe
add
pop
pop
push
add
push
mov
movsb
and
add
pop
das
jne
rorb
mov
dec
pop
shl
fists
add
out
mov
add
ljmp
mov
pop
or
std
jns
add
xor
xlat
pop
mov
bswap
add
in
and
add
repnz
shlb
movsl
pop
std
xor
inc
and
jp
mov
mov
sub
push
sbb
add
cmpsl
jns
leave
call
dec
push
xchg
cld
add
mov
stos
fdivrs
outsb
add
adcl
add
test
inc
mov
andl
xchg
push
popa
adc
je
adc
test
cmp
add
arpl
orb
xor
clc
or
and
push
or
fldl
cmpsb
sbb
add
loope
jbe
push
adc
add
mov
mov
xor
cmp
xor
dec
push
dec
outsb
adc
pop
cmp
add
jmp
jb
sarb
mov
dec
popa
repz
or
test
leave
xor
jl
xlat
mov
mov
add
xor
loopne
fsubr
pop
add
or
cs
push
mov
xlat
pop
inc
icebp
add
cmp
pop
popf
testb
in
scas
pusha
push
out
lock
call
rol
add
not
mov
lahf
pop
addl
inc
ret
fldpi
mov
shl
mov
test
mov
cltd
cmp
push
sbb
mov
xchg
test
jl
sbb
jge
add
mov
mov
sbb
add
aad
daa
add
ret
jge
cmp
cmpsb
xchg
lods
adc
add
and
mov
clc
pop
push
cmpsb
lahf
cld
and
add
in
pop
push
xchg
adc
scas
add
inc
push
sub
in
fwait
add
push
push
cmc
xchg
mov
jb
or
pop
jbe
movb
add
test
xchg
enter
out
dec
inc
add
mov
sub
sub
jmp
adc
add
sarb
repz
gs
subb
dec
or
xor
pop
xchg
add
bound
loopne
sub
cmp
enter
dec
out
iret
fdivr
jge
sahf
inc
adc
mov
daa
sub
add
mov
add
int
sub
inc
mov
incl
insb
or
adc
pop
pop
mov
fimuls
add
adc
call
sahf
fdivrl
add
insl
adc
imul
das
insb
jbe
clc
in
mov
jae
mov
pop
sub
hlt
add
cmpsb
add
push
popa
aaa
nop
add
adc
inc
ljmp
sbb
and
bound
sbb
add
xlat
testb
jns
sti
push
or
test
int
xchg
mov
jmp
sub
mov
mov
or
cmp
fists
repnz
add
loopne
jg
pop
fldl
call
push
dec
adcl
pusha
or
add
jg
fildl
jmp
push
inc
aam
dec
add
sub
pusha
hlt
mov
lcall
add
or
sete
test
push
lods
mov
add
sbb
xchg
jp
or
adc
xor
dec
sbb
js
jae,pt
inc
in
lret
adc
pop
sti
sub
and
fsubs
mov
xchg
inc
fdivrs
call
adc
push
mov
stc
xchg
dec
rol
movsb
mov
push
jae
addr16
movsl
fucomi
mov
aam
incl
jl
in
inc
in
and
data16
push
jmp
pop
loopne
add
stos
cltd
push
cmp
jl
cmp
pop
jg
pop
mov
rolw
loopne
or
ljmp
aas
jl
pop
ret
push
sub
push
pop
add
or
je
fwait
aad
mov
dec
aas
roll
or
add
and
ss
sbbb
sbb
sub
dec
mov
add
dec
stos
dec
jp
add
js
and
inc
std
pop
ret
mov
pop
and
sub
xor
add
and
gs
or
outsb
add
push
les
adc
mov
fdivrp
mov
and
add
icebp
and
sbb
and
add
add
fsubs
insb
xor
xlat
pop
outsb
rep
push
loopne
aad
push
and
inc
mov
test
and
add
push
mov
pop
add
sub
push
fdivl
mov
rclb
and
add
ret
xchg
in
mov
test
cmpsl
jo
aas
or
cmp
andb
rorl
push
call
ds
cmp
sub
sar
and
push
add
mov
jo
add
and
je
or
add
add
add
and
inc
lock
add
xor
dec
jg
jmp
cmc
ljmp
pop
jnp
clc
push
pushf
ljmp
add
xchg
lea
add
icebp
adc
fcmovu
add
repnz
and
fwait
add
add
cmc
in
adc
cmpsb
dec
inc
sti
or
add
psubsb
cmp
das
das
push
rolb
add
or
mov
lock
and
cwtl
pop
rolb
lods
inc
fnstenv
psrld
mov
pop
sbb
add
fisttpl
stos
add
dec
pop
hlt
mov
sbb
or
sarb
paddusw
out
sub
lods
je
inc
sti
add
push
mov
sahf
add
cmovle
add
or
mov
add
jbe
adc
and
insl
jnp
cmp
and
loopne
inc
and
inc
push
jmp
add
cmp
cmpsl
and
decl
or
add
push
insl
scas
add
mov
inc
add
mov
add
pop
jmp
xor
bnd
addps
inc
mov
leave
sub
mov
hlt
mov
add
or
adc
and
add
xchg
mov
xchg
push
add
mov
pushl
jbe
cmp
lods
test
int3
lods
dec
and
jge
pop
and
js
gs
mov
mov
pop
mov
xlat
pop
cmc
add
push
adc
add
loopne
movl
push
xchg
mov
push
mov
mov
out
push
js
cmp
push
mov
and
cmp
sbb
in
loop
icebp
push
cmpsl
or
add
and
scas
repnz
and
ja
add
movsb
leave
dec
lock
mov
add
push
and
cmp
add
sub
add
test
add
add
imul
ljmp
jp
or
mov
add
adc
add
shrd
sarb
add
mov
or
xchg
out
add
std
cmp
xchg
aaa
add
pop
sbb
adc
cmp
xchg
add
push
mov
out
ret
add
hlt
test
nop
fs
add
push
or
mov
pushf
out
ficomps
nop
cmpsb
les
rolb
adc
add
jecxz
out
in
inc
sbb
ljmp
inc
and
pop
cltd
xchg
and
lea
shrb
ds
or
mov
cs
push
sbb
push
je
xchg
add
push
mov
hlt
pop
and
in
push
nop
or
sbb
adc
dec
mov
mov
in
add
mov
add
scas
adc
sub
mov
roll
cmc
and
push
sahf
add
mov
jge
xchg
nop
push
pop
mov
icebp
mov
loope
add
cli
xor
addl
xchg
pop
out
jmp
mov
add
jne
aaa
fldt
ret
inc
add
mov
add
in
cmpsb
ljmp
leave
rorl
add
jmp
sarl
insl
add
xchg
mov
or
pusha
sbb
inc
cmpsb
inc
add
inc
jnp
mov
pop
mov
mov
xchg
les
pusha
xor
add
adc
adcb
pop
add
adc
cmovp
add
xchg
push
mov
nop
testl
pop
popf
loopne
push
mov
sub
add
or
pop
in
dec
ret
aad
test
push
lock
jge
pusha
lods
jl
dec
add
iret
jecxz
aad
sub
add
xchg
fcoml
nop
cmp
icebp
add
call
pop
cmp
ds
lock
push
add
out
repz
pop
push
movsb
arpl
inc
jno
xchg
push
dec
xchg
sti
sbb
cld
adc
and
push
inc
mov
pusha
add
or
or
lret
sbb
cmp
out
adc
mov
add
mov
or
sub
repz
lcall
xor
adc
add
ret
push
mov
push
lock
jge
or
mov
mov
push
inc
mov
pop
inc
lock
in
or
xor
inc
jae
push
cmp
cld
add
test
mov
add
push
mov
add
jae
pop
jp
xor
fcmovnb
fsubr
lcall
loope
sbb
push
and
jae
pop
enter
jb
sbbb
orl
add
leave
add
xor
adc
adc
int3
mov
inc
pop
sub
lret
jne
leave
and
lcall
xor
icebp
repnz
lea
dec
pop
roll
popf
in
push
xor
and
mov
enter
inc
mov
push
add
jns
shrb
fiaddl
fsubp
sbb
cli
inc
jne
aad
mov
jo
pusha
mov
loop
icebp
and
rorb
push
or
pop
pop
push
dec
cmp
outsb
out
jo
mov
les
or
inc
cmp
pop
jle
scas
inc
pop
pop
add
out
mov
test
xchg
and
inc
dec
popa
add
jcxz
jne
mov
cmp
mov
add
vcvttsd2si
es
adc
mov
stos
cmp
mov
cmpb
or
add
xor
dec
add
xchg
clc
mov
inc
ret
adc
dec
jg
add
add
add
push
jns
add
not
pop
and
sbb
imul
out
push
test
gs
bound
push
pusha
add
enter
cmp
add
and
mov
cli
rclb
cmp
call
cmpb
insb
xor
wrmsr
mov
push
add
leave
aam
adc
and
or
pop
daa
or
cmp
bound
je
loope
mov
dec
mov
pop
adc
push
sub
and
pop
inc
je
lahf
or
push
in
add
and
mov
push
cmp
or
aas
push
or
add
mov
fidivrl
jp
pop
push
and
adc
orb
jle
add
inc
jp
fimuls
add
jge
call
add
imul
add
popa
mov
fbstp
jne
stc
fsub
add
sbb
or
xchg
loopne
or
nop
add
add
add
pop
jl
add
dec
adc
and
lock
add
std
xchg
mov
jl,pt
add
xchg
and
add
dec
jne
imul
sub
add
sub
add
add
in
ror
add
test
mov
adc
push
push
sbb
inc
mov
xchg
inc
inc
addb
xchg
les
or
xchg
mov
xor
in
lea
orl
mov
enter
ljmp
stc
add
cld
cwtl
inc
test
imull
add
push
xchg
arpl
mov
movsl
jbe
add
icebp
or
js
lcall
mov
das
pop
ret
pop
jne
fsubs
mov
mov
cs
sbb
out
mov
scas
mov
inc
pushf
and
fsubs
rolb
mov
sti
das
add
jns
and
add
mov
sub
mov
or
stos
mov
loopne
sbb
stc
sub
sub
enter
push
dec
adc
push
test
cltd
subl
mov
sbb
mov
push
or
lock
test
cmp
mov
idiv
mov
test
mov
adcl
cmp
xchg
jne
in
popf
push
in
mov
xchg
push
sbb
mov
pop
xor
cmp
mov
out
add
dec
adc
lock
inc
dec
xor
jb
xor
pusha
add
pop
ficompl
mov
out
shll
shlb
mov
aam
in
jae
cmpxchg
xchg
cld
push
jmp
mov
in
pusha
mov
mov
mov
add
lock
jno
add
jns
lea
ret
pop
cmp
rcrb
cmpl
les
add
inc
pop
push
sahf
xlat
loopne
pop
pop
je
push
pop
add
mov
xchg
cmp
cmovns
mov
jb
mov
add
jo
and
out
add
or
nop
cmp
and
mov
inc
push
push
sbb
add
loope
mov
mov
xchg
push
sub
shrb
aaa
int3
sbb
inc
das
and
inc
jl
sbb
fdivl
les
loop
aas
mov
dec
push
pop
clc
jo
add
and
loopne
add
and
pop
add
hlt
push
cld
push
leave
adc
ds
and
dec
mov
xor
jo
add
cmp
push
loopne
add
pop
hlt
pop
inc
in
add
dec
push
pop
movsl
xchg
out
loopne
fbld
pop
mov
fldl
push
xchg
add
sub
mov
add
js
and
mov
cmp
or
bound
push
in
clc
into
loopne
mov
jbe
aas
enter
ret
xor
inc
daa
das
ljmp
mov
pop
jno
add
aam
in
lret
jo
cmpsb
and
imul
imul
jg
dec
daa
ret
cwtl
sub
jo
sarb
add
jge
adc
iret
mov
sub
movb
adc
mov
mov
mov
je
ret
add
pop
push
add
jae
jne
xor
cmp
sub
fdivrs
mov
lcall
aam
cmp
add
outsl
lods
ss
and
push
pop
jp
ljmp
inc
adc
lock
mov
push
xor
es
jnp
xchg
jmp
push
movb
repz
mov
divps
mov
or
pop
adc
rorl
test
jp,pn
cld
dec
xlat
movaps
shrl
push
pusha
fisubrs
add
add
jb
pop
xchg
jne
aas
inc
or
sarw
mov
sbb
cwtl
dec
adc
loopne
inc
pop
add
ret
pop
fwait
jmp
insb
jp
add
cs
sbb
movsb
inc
mov
push
mov
clc
fwait
mov
and
lock
add
or
add
cld
xor
push
stos
and
and
or
mov
pop
lods
notl
jle
nop
xchg
inc
mov
pop
adc
and
lea
rcrb
or
push
mov
add
aas
pop
jge
cltd
pop
xchg
pop
sarb
add
inc
test
or
lods
stos
dec
sbb
sbb
add
inc
xor
or
rcr
adc
fdivl
sahf
ja
sub
mov
movsb
adc
mov
push
fiadds
xorl
fisttpll
jns
adc
incl
out
mov
aaa
push
inc
push
cmpb
pop
cwtl
add
into
dec
add
leave
mov
dec
lock
loopne
arpl
add
adc
add
pop
je
push
repnz
pop
in
lret
sub
stos
sbb
rcr
movsl
cmpsl
dec
jo
cmp
add
fstpl
jge
test
mov
mov
and
stc
hlt
clts
cmp
rcrb
push
arpl
or
int3
cmp
call
movsl
dec
insb
xor
add
cmc
pop
aad
gs
loopne
adc
mov
add
popl
ret
cmp
add
mov
cltd
cmp
imul
pop
loopne
cmp
imul
add
dec
aaa
mov
inc
aad
mov
loopne
add
lret
jo
aas
pop
sbb
fdivrs
jo
add
out
sbb
push
loope
sbb
test
mov
negb
movsl
mov
sbb
xchg
add
gs
sahf
sbb
sub
test
jo
cmp
or
and
incl
sti
push
scas
xor
mov
and
xor
int
jle
sbbb
flds
shld
xor
iret
enter
lods
xor
jb
jae
add
stc
pop
fldl
push
fsub
sarb
mov
add
mov
outsb
out
push
mov
add
stos
mov
aam
sbb
sub
rcrl
ljmp
loopne
sbb
add
in
jo
add
cld
dec
int3
dec
insl
jno
cld
add
xchg
pop
test
mov
add
ret
push
cmp
nop
add
add
xor
cld
sbbb
cmp
shr
or
sbb
mov
repnz
add
lods
mov
lods
push
sahf
push
add
add
jne
ret
push
add
dec
or
add
ret
mov
outsl
jo
out
add
imul
pop
lods
xlat
add
push
pop
lock
push
cs
cmpsb
mov
xchg
pop
je
add
pop
inc
add
add
les
adc
pusha
dec
jl
cld
pop
add
add
and
xor
push
mov
inc
andb
and
popa
cmp
pop
andl
xor
pop
test
add
call
dec
cmp
xchg
inc
mov
outsl
psubusb
or
adc
fdiv
nop
cld
out
pop
and
jg
add
adc
movsl
xchg
mov
pop
add
loopne
andb
movsl
and
addr16
data16
test
xchg
dec
cmc
jo
add
mov
add
and
movsl
aaa
fsubs
cmp
das
ret
mov
lea
jb
adc
outsl
add
into
testl
xor
add
aam
add
add
shlb
push
jno
add
sarl
std
jo
add
ds
loope
aam
push
add
jae
ljmp
and
jnp
push
add
loope
cmp
out
dec
in
nop
sub
pop
push
jbe
add
out
adc
std
lods
add
enter
mov
pop
dec
dec
inc
xor
add
in
pop
sbb
pop
xchg
call
push
jmp
loop
sub
xlat
movsl
mov
push
add
stos
sbb
data16
or
add
cmpb
arpl
xchg
cmc
inc
addr16
add
out
add
cmpb
pusha
pop
test
add
xchg
mov
add
test
add
xlat
ja
fsubl
ret
mov
pop
push
in
cs
icebp
scas
rclb
cli
add
mov
stos
in
icebp
lock
xlat
out
dec
das
jle
jl
mov
mov
sub
mov
ds
add
push
std
add
add
ljmp
pop
out
mov
pop
sbb
pusha
push
imul
sub
mov
mov
add
sbb
push
sub
dec
loop
push
pop
xor
and
add
add
mov
pop
sbb
call
ret
mov
ficoms
lret
add
jg
mov
add
test
movsl
fdivr
xchg
mov
inc
add
lret
stos
sarb
inc
mov
add
loopne
pop
cmp
out
pusha
sbbl
and
pop
lret
stc
rorl
shlb
mov
sti
lcall
and
mov
orb
jp
sub
xor
shl
cltd
pop
sub
and
loopne
xlat
xor
mov
add
enter
popa
cwtl
add
add
mov
pop
stc
add
fnsave
cmp
and
cmp
fiadds
nop
jo
push
adc
sbb
add
or
cmpl
loopne
add
mov
das
push
pop
jns
stos
add
xchg
cs
add
jge
clc
jo
add
sti
das
je
mov
pop
daa
dec
push
sub
cmc
pop
add
rolb
cwtl
ljmp
add
psrlw
sbb
pop
sahf
leave
add
dec
or
loop
subb
add
jg
adc
dec
add
test
addl
pop
aam
push
add
repnz
pusha
push
inc
data16
inc
lea
ds
sbb
push
inc
clc
mov
jp
dec
addb
call
cmp
sbb
daa
add
push
add
pop
add
and
imul
int
loop
sub
xor
out
xor
push
jno
in
jecxz
rcrb
add
pop
iret
fstpl
xchg
add
or
pop
add
sbb
call
cmc
test
fsubl
test
jns
xor
negb
test
into
hlt
mov
push
js
pop
roll
mov
stos
add
or
enter
add
pop
ret
hlt
jge
shlb
jne
pop
shlb
ret
pop
cmova
insl
pop
pop
inc
repnz
dec
or
dec
loopne
xor
rclb
sub
ret
flds
mov
add
xor
sub
dec
mov
int3
pop
inc
add
movb
mov
outsl
mov
int3
arpl
push
stos
out
push
out
pop
ret
jp
cmp
mov
pop
test
add
push
pop
sbb
inc
and
mov
iret
inc
into
mov
add
fs
imul
cmp
lds
inc
add
sbb
push
and
jge
push
jg
add
adc
add
fildl
inc
dec
jne
std
les
aam
dec
mov
test
arpl
data16
fstl
scas
cmc
push
out
mov
ljmp
add
cmpb
adc
sbb
xor
add
push
fdivr
int3
faddp
add
clc
sahf
mov
call
insl
repnz
xchg
xchg
aas
add
add
stc
add
sbb
jmp
fistpll
inc
jp
test
imul
add
hlt
jo
sahf
push
jnp
je
push
fldl
stos
loop
dec
pusha
insl
bound
mov
pop
jg
es
lods
add
or
lret
mov
imul
add
push
mov
fwait
nop
arpl
add
orb
stc
push
or
mov
jmp
aaa
addr16
push
mov
idivl
pop
push
decl
cmpsb
or
mov
or
add
adc
insl
test
dec
addb
sub
dec
fstps
and
xchg
jns
add
int3
fnsave
subl
jo
test
inc
loope
sub
add
mov
push
pop
or
or
inc
push
enter
fwait
and
roll
leave
adc
add
add
jmp
pop
push
test
add
test
das
lock
adc
mov
lock
or
test
stc
lock
add
xor
add
or
add
cld
and
inc
pop
jmp
jno
lods
xlat
jbe
add
pop
fs
cmpb
pop
mov
sub
scas
sti
mov
or
inc
cmp
inc
add
adc
sbb
test
std
cmp
or
lock
sbb
jno
add
mov
pop
gs
sbbb
push
jmp
daa
repnz
sahf
mov
sar
adc
jns
add
mov
inc
das
or
fbld
mov
and
and
stos
mov
add
sti
add
int
fsubrs
mov
inc
test
inc
jle
cltd
jb
clc
roll
je
and
loopne
mov
nop
add
les
mov
mov
push
sub
cmpsl
mov
arpl
les
pop
inc
loopne
out
and
add
xor
outsl
push
cwtl
mov
bound
xchg
and
and
mov
cmp
mov
add
sar
hlt
fisubrl
add
sub
mov
bound
popl
jmp
push
push
xor
mov
sbb
adc
add
inc
daa
jne
test
incb
inc
dec
xchg
scas
mov
test
add
and
jmp
dec
jmp
sub
mov
cmp
add
cmp
bswap
lock
add
push
ds
icebp
jecxz
push
jle
gs
dec
add
das
cmp
movsl
add
inc
pop
pusha
and
bound
mov
add
add
ljmp
lcall
and
shlb
cmpsb
push
add
cmp
lock
aam
sti
gs
shrb
pop
jge
or
ja
xchg
xor
roll
cmp
add
jnp
inc
add
xlat
xchg
cmpsl
sbb
test
push
mov
loop
sbb
xchg
add
adc
push
adc
out
leave
jo
add
call
dec
loopne
add
testb
adc
sub
lcall
xchg
dec
rcrb
rclb
lret
lret
cmpsl
push
adc
and
out
xchg
add
xlat
add
and
xor
or
jbe
push
jmp
jge
fadds
insl
lea
and
les
xchg
pusha
cmp
popl
je
dec
icebp
sub
jp
jmp
inc
push
mov
in
add
and
mov
ja
mov
std
mov
cmp
mull
fistpl
jo
add
in
sbb
inc
add
push
push
jnp
jp
shrb
inc
fistl
or
mov
dec
cld
sbb
dec
push
inc
mov
sbb
out
add
into
nopl
or
sbb
in
xor
xor
sub
int
cltd
inc
add
shll
fildl
add
lretw
cmp
fdivrl
sti
add
hlt
les
sub
out
dec
int3
pushf
mov
cltd
dec
add
mov
shlb
leave
xchg
out
daa
mov
sbb
sub
lds
shrb
clc
mov
mov
and
or
ret
mov
and
xor
xchg
or
add
rorb
mov
ljmp
hlt
add
mov
stos
jns
push
jne
mov
mov
inc
add
mov
or
js
pop
or
aam
mov
push
cwtl
dec
cwtl
outsb
add
or
cltd
pop
push
sti
add
test
push
mov
mov
mov
aaa
xor
and
bound
pusha
pusha
dec
xchg
shrb
mov
or
dec
leave
in
pop
push
dec
mov
mov
add
imul
cmp
push
cmpsb
decl
add
push
jae
out
add
fsts
sub
inc
cwtl
or
or
cld
xorb
jne
clc
add
or
js
mov
adc
cmpsb
es
pop
pop
leave
add
sbb
and
cs
pop
cmpsl
iret
or
mov
xlat
add
mov
test
mov
sub
add
or
jle
cs
add
fists
inc
adcb
xchg
add
xor
jnp
adc
hlt
mov
jo
add
dec
cmp
mov
dec
ja
sbb
cmp
add
cmp
xchg
add
out
xchg
fldt
add
jnp
test
sbb
sbb
adcb
inc
mov
push
cmpsl
icebp
or
mov
push
sti
sbb
inc
fmuls
sbb
lods
and
adc
add
xchg
or
sbb
sub
arpl
adc
mov
inc
add
daa
adc
cmp
push
pop
jo
add
hlt
fcmovnbe
adc
add
lret
add
and
je
fistl
rorb
andl
and
dec
in
mov
adc
push
call
in
add
ss
push
sub
lods
push
dec
mov
lcall
loope
sbb
addb
mov
cld
add
call
hlt
inc
add
inc
push
pop
jne
test
call
pop
push
pushf
and
xlat
rcll
inc
cmp
movsl
add
mov
push
sbb
jle
loopne
sub
fwait
mov
sbb
aaa
lock
push
xchg
call
loop
outsl
das
push
loope
test
flds
jne
xchg
fs
stos
cld
cmp
mov
shlb
cltd
mov
and
push
sbb
push
add
add
mov
jle
jp
add
jmp
jb
enter
aas
inc
lods
adc
pop
sub
lea
adc
sub
push
mov
add
js
and
lret
into
pop
xor
adc
aad
nop
and
pop
sahf
cld
enter
sbb
sub
adcb
mov
xchg
inc
mov
in
sub
add
sub
jnp
pop
rorl
adcb
loopne
dec
push
add
xor
sub
lea
adc
or
cltd
lahf
mov
rcrb
pop
mov
add
roll
push
pop
jge
scas
bnd
lods
pop
pop
cmp
adc
sub
xchg
scas
adc
inc
mov
test
jae
fcoms
sbb
nop
adc
cwtl
xchg
add
dec
mov
inc
add
aam
xor
fimull
jl
adc
and
rep
daa
insl
aas
rolb
jae
data16
loopne
sbb
mov
fadds
pop
fisttpl
sub
add
testb
mov
out
sbb
or
subb
and
inc
insb
add
jno
movsl
jne
sti
popa
xchg
push
sub
mov
adcb
nop
stc
cmp
ds
stos
xor
adc
pop
xchg
push
mov
pop
add
inc
stc
and
fldl
mov
cmp
mov
lea
sub
mov
add
pusha
mov
and
mov
lock
add
adc
xor
add
add
push
scas
lods
inc
ss
add
add
int3
adc
clc
cli
add
cmpsl
repnz
sbbl
pop
loopne
jne
movsb
add
mov
dec
sti
jnp
pop
inc
das
mov
loopne
cmpsl
mov
and
gs
repz
and
shl
push
inc
xchg
clc
xchg
add
outsl
xor
sbb
sbb
dec
xor
push
sahf
pop
sub
xchg
add
xchg
es
push
push
les
cld
sbb
pop
sete
ret
dec
das
xor
hlt
and
notrack
add
adc
pop
or
sysret
dec
xor
sub
add
fldl
repnz
push
xlat
and
nop
fmuls
mov
add
repz
mov
xchg
add
or
call
and
pop
out
ret
mov
clc
ret
mov
incb
cmpsb
mov
popf
adc
sub
sbb
or
xchg
in
repz
dec
add
std
xlat
and
outsl
jns
add
lea
ja
pop
mov
mov
pandn
xor
adc
rol
mov
sti
jp
icebp
push
cmp
add
adc
and
repz
mov
push
jg
and
push
jbe
pop
out
popl
lcall
fidivs
push
rorl
xchg
mov
xchg
add
leave
mov
pop
ret
fisttps
xor
adc
xchg
xor
cmc
push
mov
pop
lret
jle
js
jo
adc
pop
add
ljmp
jne
popa
arpl
insl
cmpb
pop
ret
test
ss
push
cmp
fldl
add
sarl
push
add
les
repnz
aad
aam
add
hlt
je
add
call
imul
orb
push
cmpxchg
lods
std
sbb
in
shlb
call
lock
cmp
notl
fcmove
jecxz
ljmp
sbb
xor
pop
out
loop
loopne
xor
mov
ljmp
fisubl
cmp
add
cmp
jne
pop
jl
je
mov
fstpt
sbb
movb
pop
pop
xchg
sbb
cmc
push
jmp
das
negl
pop
rolb
push
mov
pushf
xor
cmp
les
pop
mov
int3
mov
push
cld
xor
xor
in
jnp
or
add
push
push
dec
stos
insb
movsl
add
mov
sbb
inc
es
dec
sbb
or
mov
aam
mov
fnop
pop
sbb
cmpsb
cs
pusha
int3
test
stos
addb
inc
ljmp
pop
out
nop
add
negl
xchg
scas
and
or
pop
xor
xor
dec
gs
jae
loope
add
out
adc
add
fs
cmp
insb
jne
enter
popf
add
cwtl
xlat
sub
push
xchg
scas
frstor
xchg
or
idivb
mov
xchg
ljmp
lds
in
and
jecxz
adc
inc
mov
push
out
loopne
cwtl
add
dec
dec
push
add
jae
or
or
imul
push
jp
add
dec
xchg
pushf
add
mov
add
xor
or
mov
cwtl
jl
or
cli
popl
xor
jae
add
dec
lret
jb
or
adc
sub
pop
xchg
cld
push
outsl
xor
push
mov
add
test
push
je
or
push
mov
nop
add
or
push
add
mov
sub
insb
hlt
mov
jo
loopne
aas
adc
fldt
or
js
fadd
cltd
inc
push
push
je
leave
pop
dec
or
xchg
xchg
push
jmp
outsl
in
shlb
and
fcoml
jae
push
pop
shr
mov
lret
inc
test
out
sub
cld
pop
lods
inc
clc
in
pop
stos
lret
outsb
fdivrs
mov
or
push
aam
repnz
jmp
pop
push
pop
inc
mov
fs
jno
push
add
inc
aam
add
sub
jmp
movsl
ret
movsb
cmp
bound
pop
cwtl
aam
mov
mov
les
inc
lock
mov
sti
mov
and
jge
push
stc
push
sbb
out
add
mov
jbe
pop
add
cmp
clc
lcall
jmp
add
adc
add
add
mov
leave
cmpsl
xor
and
in
cmp
push
mov
clc
jno
jns
ficomps
adc
pop
jb
movb
repz
add
aas
fmuls
add
std
inc
hlt
lock
pop
popa
cltd
add
or
mov
jo
pop
mov
jp
pop
sub
lcall
dec
jmp
add
dec
js
dec
repnz
add
mov
call
pop
scas
push
add
add
fldenv
pusha
addb
lret
nop
out
ds
dec
clc
xchg
add
add
cvttps2pi
jb
mov
and
jge
cmpb
movsb
loopne
cmp
inc
out
mov
sub
lea
mov
mov
push
filds
mov
and
sub
xor
and
or
mov
sub
nop
repz
mov
adc
add
xor
fs
jmp
add
sub
push
and
inc
call
cmp
pushl
loopne
shll
hlt
mov
jmp
mov
andl
scas
dec
push
les
out
add
or
fmuls
sub
add
int
adc
fldenv
add
cld
test
mov
mov
pop
jmp
dec
inc
inc
add
ljmp
imul
push
push
add
adcl
or
adc
mov
popf
test
dec
mov
hlt
loope
roll
jp
sbb
std
xlat
and
jl
test
mov
roll
das
ficoml
sub
jp
push
fwait
add
stos
xor
add
test
and
aaa
push
mov
and
jle
jne
or
lods
mov
jge
dec
add
push
in
andb
aas
add
cs
pop
in
or
xor
adc
in
pop
add
pop
inc
add
icebp
idivb
mov
cmp
push
adc
pop
add
push
or
stos
test
je
jns
mov
xchg
mov
adc
xchg
les
xchg
pop
sbb
push
in
pop
mov
fbstp
pop
push
lea
cld
xorb
or
adc
xor
inc
jp
pop
add
orb
push
add
cmp
add
or
pop
das
push
sbb
add
xchg
and
cmp
add
ljmp
push
nop
jg
xchg
dec
fisttpl
lods
incl
xchg
push
in
cmpb
sub
xor
sbb
push
push
add
push
test
add
repnz
stos
sub
bound
fsubl
push
add
or
dec
xor
and
dec
push
jg
push
pop
inc
in
cmp
arpl
add
add
adc
pop
pop
mov
push
hlt
pop
push
add
mov
inc
dec
push
push
andb
mov
add
mov
ret
stos
push
xchg
pmullw
mul
add
or
add
dec
imul
in
add
xor
mov
and
xchg
fwait
clc
mov
movsb
iret
jecxz
mov
xchg
add
mov
in
movswl
add
add
imul
andb
pop
add
insl
mov
movsl
dec
mov
add
fisubrl
js
lea
pop
cmp
clc
in
test
mov
fwait
pop
jl
loopne
push
xor
jle
mov
sub
add
pop
cli
insl
int3
je
add
jge
xor
movsl
or
xor
mov
repz
lcall
xchg
iret
dec
add
es
push
orb
xor
cmp
or
out
push
rcrb
cmp
adc
mov
add
mov
scas
add
aas
dec
jmp
movb
add
int3
fidivs
pop
shlb
add
mov
pop
fldt
mov
sub
or
in
xchg
push
sbb
stc
add
hlt
inc
pop
add
mov
aad
add
xor
ret
pop
push
out
jle
add
sbbl
sbb
inc
fldcw
inc
mov
push
sub
push
mov
loope
add
and
sbb
add
in
lret
add
or
cmp
add
fdivs
jp
mov
add
in
inc
rol
jge
push
es
sbb
cmpl
sub
loopne
add
sbb
sbb
jo
cmp
mov
repz
adc
sbb
dec
hlt
or
cmp
xor
aas
mov
mov
add
jmp
sahf
add
cmp
sbb
sub
mov
mov
fs
sbb
cltd
daa
add
fimuls
mov
add
inc
aam
dec
add
mov
data16
inc
sbb
outsl
add
arpl
add
cmpsb
leave
add
sarl
in
inc
test
cmp
adc
shlb
add
push
pop
sbb
in
jbe
pop
mov
inc
pusha
adc
pop
nop
add
dec
mov
shll
pop
adcb
push
arpl
and
cmpsb
movsl
add
fistpll
or
sarb
add
mov
xor
dec
add
cs
out
pop
dec
jo
add
add
sar
and
adc
enter
jmp
cmp
repnz
push
test
loopne
pop
add
pop
sahf
fcompl
loope
ds
sbb
ja
jp
add
mov
xorl
mov
sbb
sbb
add
cmp
xor
add
add
adc
arpl
xor
call
addr16
je
loopne
push
jo
loope
and
scas
sub
add
xor
mov
xchg
push
inc
icebp
inc
fildll
add
into
sbb
nop
or
iret
mov
jno
add
or
mov
incl
add
popa
jnp
sti
sbb
jns
jmp
leave
movsl
jns
sbbb
inc
add
das
lds
inc
cmp
add
pop
lret
lock
and
add
gs
add
mov
sbbb
movb
sbbl
call
adc
mov
push
jo
add
out
adc
loopne
add
int3
iret
sbb
and
out
shl
adc
sbbb
mov
add
jno
nop
lods
addb
jb
sub
adc
add
ja
mov
push
mov
addl
jbe
aad
pop
xor
add
sbb
or
push
shl
cmpsl
xor
mov
dec
stos
or
xor
flds
xchg
movsl
sub
add
add
mov
enter
lods
popf
add
jp
scas
add
and
ljmp
in
clc
repnz
enter
cs
adc
xchg
arpl
cmp
push
add
shlb
add
ret
and
mov
push
add
je
inc
sbb
std
mov
pop
add
mov
sbbb
sub
test
xchg
add
xchg
sub
and
mov
cmpsb
shlb
dec
ltr
cmp
inc
stc
push
cmp
add
pop
push
cmc
psrlq
mov
cmp
jl
std
dec
xchg
lea
pop
cltd
pop
and
test
xchg
jl
inc
addl
call
fildll
mov
clc
add
cvtdq2ps
jb
je
add
sbb
in
add
in
add
xchg
fistps
xchg
pop
sti
inc
fldcw
leave
cli
add
inc
sbb
xor
xchg
dec
pusha
dec
rorl
adc
sbb
push
add
ljmp
dec
pop
loopne
aad
add
sub
mov
or
sub
stos
es
clc
rolb
dec
adc
jne
rcrb
test
das
jns
or
scas
or
cmp
mov
ds
push
jo
xlat
pop
and
add
jne
mov
outsb
or
and
push
add
or
xchg
lods
jge
lret
fsubrs
sbb
or
idivb
mov
add
add
outsb
hlt
inc
ja
add
fwait
rorl
inc
add
into
pop
sarl
cmp
nop
push
insb
dec
bnd
push
cwtl
inc
cwtl
int
hlt
inc
or
loope
or
xor
hlt
dec
pop
add
neg
test
hlt
outsb
xor
fstps
pop
fimull
aaa
rolb
add
mov
sbb
push
xor
pusha
je
adc
add
in
jo
cld
pop
xchg
fimuls
jb
sbb
pop
add
shlb
inc
add
jmp
test
inc
mov
adc
add
dec
popa
xchg
jp
and
add
adc
mov
adc
fchs
js
rolb
cwtl
xor
cmp
xor
push
sbb
jge
add
ret
lea
aad
jmp
push
ljmp
das
inc
adc
mov
jbe
add
cmp
lods
pop
push
pop
test
push
daa
mov
add
inc
adc
je
gs
cmp
setne
nop
daa
loopne
ljmp
stc
and
xchg
ss
adc
cmp
push
shll
mov
ret
pusha
loop
adc
mov
jo
es
xor
inc
enter
mov
out
add
xor
mov
out
dec
fisubs
xchg
fnstcw
xchg
sub
adc
pop
mov
insl
dec
sbb
call
add
lods
stos
loopne
push
or
cmp
out
insb
dec
xor
sub
das
fldenv
adc
inc
add
fsubrs
inc
xlat
add
sub
sbb
pop
push
pop
cmpsl
or
add
arpl
scas
cwtl
mov
add
clc
int3
cmp
cmp
out
fldl
dec
and
mov
por
aam
aaa
sbb
shll
loop
sbb
das
adc
shlb
add
add
cld
stc
sub
cmp
lcall
out
xbegin
test
in
test
dec
pop
adc
jb
add
cltd
adc
aas
scas
mov
adc
jmp
push
stc
out
hlt
xor
xchg
inc
xor
insb
add
fs
or
or
add
and
sbb
sbb
cli
xchg
imul
pop
jnp
jnp
push
jbe
stos
inc
hlt
or
call
mov
fstps
mov
inc
cmp
inc
mov
dec
add
fsubs
push
add
daa
les
inc
cmp
pop
mov
inc
sbb
lea
testb
add
cs
enter
jle
adc
cwtl
push
jbe
movsb
enter
scas
sub
adc
add
sub
les
push
and
adc
add
jp
loopne
cs
and
mov
jne
mov
js
loop
sub
subb
icebp
clc
add
dec
sti
mov
inc
inc
test
xchg
sub
jo
dec
cld
mov
inc
sbb
add
sar
adc
add
mov
xor
xchg
repz
movsb
incb
lods
dec
adc
push
jbe
cmpsl
push
pusha
push
or
mov
add
sub
add
shlb
mov
mov
xor
lret
sub
dec
add
mov
stos
add
push
push
or
addr16
mov
add
xchg
add
push
mov
add
adc
add
or
jbe
fcompl
or
adcb
insb
add
pop
out
jl
mov
addr16
sbb
adc
insb
jle
add
in
add
imul
add
or
test
xlat
inc
rolb
adc
dec
sbb
adc
inc
add
insl
sub
test
push
mov
xchg
fwait
xor
iret
ss
sbb
sbb
sub
add
daa
imul
mov
inc
cmpb
in
or
pusha
pop
cwtl
test
push
cli
int
movb
dec
out
stc
push
cmp
mov
mov
add
ss
add
add
dec
jne
ret
pop
fsubrl
push
push
mov
addb
mov
or
scas
jne
push
add
push
cld
cmpsb
lcall
sub
inc
sbb
sbb
add
cmpb
or
sbbb
jne
push
je
ficoml
ja
add
pop
outsb
dec
sub
jle
ja
push
xchg
loop
sub
add
stc
dec
add
lea
and
movsb
push
mov
nop
mov
cmp
sub
lods
out
add
mov
sub
xchg
test
and
add
sub
jno
mov
xchg
pushf
imul
sbb
arpl
lret
add
lcall
inc
xchg
cli
add
push
mov
push
addb
ret
or
lock
in
and
mov
add
stc
inc
insb
adc
add
push
popf
add
lock
das
sbb
outsl
add
jo
clc
mov
add
dec
clc
jb
add
sti
popf
in
inc
and
dec
sub
mov
cmp
push
inc
addb
sub
in
push
cmp
rolb
popa
out
nop
add
jmp
movsb
sub
sub
jne
movsl
mov
ja
cld
loop
jl
clc
pop
mov
add
outsb
mov
ds
pop
test
jmp
mov
or
rorl
jecxz
jnp
andl
shlb
push
or
add
sldt
shlb
add
into
xchg
aam
mov
fadds
out
scas
push
fsub
add
inc
fwait
xor
or
inc
out
sbb
sbb
add
jmp
fdivr
jl
lea
adc
ret
fistpl
add
jecxz
sbb
mov
pop
stos
adcb
js
test
fwait
pop
cld
loope
sbb
test
sbb
lcall
loop
mov
daa
inc
mov
xchg
or
inc
adc
shlb
jo
jle
pusha
inc
pop
cmc
fnstsw
xchg
cltd
push
shr
inc
or
aaa
cwtl
mov
aas
in
stos
push
sbb
xor
rcrb
push
cmc
loop
shrb
and
negl
mov
test
add
inc
add
outsl
loope
adc
sbb
lods
push
dec
stos
mov
movsb
inc
cmp
xchg
pusha
enter
out
daa
enter
call
je
outsb
and
scas
stos
xchg
loopne
aam
pop
nop
mov
js
adc
lods
or
jo
test
enter
sti
and
add
pop
xchg
cld
push
mov
ljmp
ja
lds
dec
in
push
add
or
js
rorb
xlat
lahf
push
aad
repnz
jle
add
jb
inc
add
lcall
pop
lods
popa
jge
inc
jo
xor
test
push
pop
and
push
mov
add
add
xor
sbb
daa
xor
test
inc
add
xor
add
dec
or
lea
fimull
sub
push
jg
add
stc
pop
das
out
rolb
mov
es
sbb
cmpl
pop
add
das
loopne
inc
xor
sbb
jmp
cmp
cmp
ja
lea
cmp
lret
add
mov
cmpb
adc
jmp
add
vprotd
jnp
add
push
test
fsts
nop
stos
add
hlt
mov
xchg
add
mov
outsl
negb
mov
icebp
add
jle
or
ds
cmpb
or
test
add
dec
call
xorb
sbb
or
lock
add
pop
push
inc
cmp
and
add
add
das
loop
push
adc
jo
or
add
push
cmc
mov
in
mov
adc
adc
in
xorl
dec
push
mov
pop
add
cmp
fldl
scas
dec
xor
sbb
popf
jmp
ds
add
mov
ror
mov
mov
cmp
dec
mov
pop
add
add
jbe
icebp
or
dec
add
and
push
pushf
mov
out
push
add
aas
mov
mov
add
add
nop
or
out
adc
inc
jmp
inc
jne
lods
mov
push
sbb
arpl
pop
test
jg
xor
or
rclb
cmp
xor
sbb
inc
enter
sub
cmp
add
imul
push
add
in
loopne
pop
jnp
adc
mov
jmp
outsl
push
add
pop
mov
xor
fwait
push
push
or
test
mov
cltd
ss
movsl
in
clc
jae
add
mov
adc
and
jg
cmp
xchg
cmp
mov
mulb
add
ficompl
or
inc
ds
add
movsl
push
aam
xchg
clc
insl
in
std
test
leave
aas
xchg
add
mov
push
test
add
subl
add
mov
movntq
out
sbb
loopne
and
stos
int
pop
filds
sahf
add
push
sub
sub
sbbb
fiaddl
fs
cmp
shl
add
ja
sbb
jmp
imul
lahf
in
adc
fidivs
push
loopne
call
mov
dec
repnz
lret
movsb
cmc
nop
out
int3
test
in
jno
cmp
mov
xchg
nop
call
jle
pop
fs
insl
add
imul
jp
jl
fstl
cld
add
push
insb
imul
jg
mov
out
ret
in
push
sbb
jno
and
dec
loop
add
mov
shlb
addb
sub
loop
fstps
insl
jo
cmpsb
test
shrl
push
push
push
or
pop
or
push
mov
pop
push
pop
fwait
cmp
or
fcoml
psubw
push
and
daa
add
addb
inc
into
popf
jb
in
out
jge
jne
adc
test
mov
imul
cld
pushf
jno
cmp
mov
dec
push
push
add
push
pop
pop
xchg
lcall
out
ljmp
sbbl
fistpl
push
push
clc
cmc
add
fwait
outsb
fdiv
test
sbb
dec
data16
sub
test
bnd
fimull
add
cmpsl
jp
push
xchg
in
add
add
std
push
mov
push
imul
xchg
pushf
pop
dec
inc
pop
out
loopne
jmp
call
cmp
cmp
sahf
nop
ss
fidivl
xchg
sub
les
add
pop
mov
pop
xor
cwtl
mov
jmp
add
test
add
cmp
ja
jbe
jb
mov
pop
pop
mov
mov
add
sbb
jne
add
loope
pop
dec
push
pop
mov
mov
in
add
fnstsw
mov
jo
int
pop
lea
xor
lahf
mov
andl
xchg
mov
ljmp
sarb
cmp
ss
inc
inc
arpl
add
js
xor
fcompl
es
jbe
pop
pop
ds
mov
stos
push
incb
fidivs
cli
pop
pop
in
jmp
rorl
mov
call
dec
add
movsl
push
test
addb
jge
flds
jecxz
adc
add
add
jle
rclb
xchg
push
dec
jp
add
push
pop
in
test
out
pop
sub
pop
es
rcrb
jmp
cmp
add
push
mov
xchg
jno
push
out
test
call
and
dec
xlat
outsb
push
dec
pop
lock
in
pop
lret
xorl
push
and
mov
mov
jmp
lock
mov
add
inc
jle
mov
int3
add
pop
fcoml
add
out
arpl
cmp
stc
add
jmp
ror
push
pop
mov
in
and
xchg
mov
dec
decb
fldl
jmp
lods
stos
xor
test
movsb
sar
cmp
cmp
ror
ja
add
jp
bound
loope
into
arpl
fsubrl
xor
dec
loope
add
je
ror
pop
pop
add
or
add
in
iret
scas
mov
in
lods
hlt
aad
push
insl
cmp
call
pop
shlb
mov
and
pop
push
movsl
sbb
enter
daa
add
cmp
mov
loop
add
loopne
pop
push
dec
lock
mov
inc
jnp
add
addr16
rcl
add
xchg
xchg
add
add
cld
call
loope
fnclex
testl
mov
xchg
rcl
adc
rcl
add
add
push
outsl
jae
add
test
add
jmp
pushf
ljmp
lds
jne
cli
jg,pt
mov
int3
mov
and
ss
fwait
or
sbb
filds
jecxz
xchg
data16
movsb
mov
add
xor
mov
add
add
push
add
aam
aad
fmuls
jecxz
mov
add
dec
or
xchg
xchg
add
cli
pusha
stc
clc
fs
cld
lahf
aas
adc
cmp
mov
fsubs
mov
sub
or
out
sbbb
and
add
adc
sub
ror
daa
push
add
std
stos
scas
repnz
psubsb
dec
mov
jo
bound
push
int3
leave
dec
lret
movb
pop
and
add
mov
pop
bnd
ds
lret
mov
popa
cltd
lcall
test
xchg
add
adc
or
hlt
ss
xchg
cmc
popf
add
test
add
lret
add
pop
cmpl
mov
pop
xchg
add
lods
test
in
cmp
and
adc
inc
andb
jo
insl
inc
ja
je
jne
rcrb
sbb
inc
dec
or
mov
add
cmp
movsb
movsl
mov
dec
add
add
inc
lods
mov
add
cmp
add
rorb
lods
stos
push
sub
mov
xor
mov
push
adc
andb
sbb
xor
mov
sub
or
add
add
sbb
orb
popf
mov
fsubp
lds
in
inc
xchg
lods
pop
daa
sub
push
cmpsl
movsl
add
dec
dec
ret
add
push
loop
xor
and
push
push
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
sbb
push
andb
jbe
pop
mov
in
out
xchg
dec
test
sbb
ffreep
test
add
orl
add
test
mov
adc
call
arpl
add
inc
pop
xchg
outsl
insb
sub
add
and
cmc
pusha
fsubr
js
repz
add
out
addr16
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
mov
lcall
push
add
push
mov
xchg
push
add
cmp
insl
add
and
cwtl
xchg
push
push
aaa
xchg
in
sub
icebp
rol
lcall
nop
ret
add
stos
lods
or
xor
ljmp
in
add
insb
and
mov
pushf
xchg
push
add
cmp
xlat
mov
lret
add
jp
jbe
xchg
aaa
mov
cmp
addb
adc
aas
push
add
icebp
cwtl
insb
out
jmp
push
add
test
xor
sbb
xchg
mov
push
jle
fs
adc
clc
add
jge
push
cmp
rcll
roll
fldt
dec
dec
std
fmuls
mov
or
add
or
sarb
sbb
jge
inc
test
mov
add
sub
pushf
add
out
jmp
mov
add
xlat
int
loopne
lret
aam
xchg
xchg
or
pop
cmp
in
clc
add
inc
add
dec
or
inc
mov
in
cmp
jmp
add
push
mov
pop
add
es
xorl
dec
cmp
add
inc
inc
jne
popa
mov
add
push
cmp
xchg
cmp
sbb
add
cs
pop
cmpsb
pop
leave
inc
sbb
sti
push
repz
add
in
push
pop
or
ret
outsb
mov
mov
mov
fdivrs
insb
ret
add
aaa
jno
xchg
imul
insl
inc
or
mov
jg
add
lret
int3
test
jmp
lea
mov
pop
sti
cwtl
scas
rolb
das
cmp
mov
js
add
nop
stos
jge
outsb
sbb
mov
mov
sub
cld
or
rcr
lods
dec
xor
jmp
enter
and
fwait
out
xchg
mov
add
call
add
pop
cmpl
out
les
and
cmpsb
aad
cmpsl
aam
add
and
and
add
adc
imul
add
jmp
sbb
pusha
pop
sarb
loope
bound
int
dec
add
xchg
add
cmc
aaa
aad
cwtl
sub
lahf
stc
scas
dec
xchg
sbb
aas
dec
imul
xchg
mov
or
and
into
pop
push
shr
repz
clc
jmp
mov
xchg
adc
cli
bound
lock
mov
adc
push
and
fucomi
in
and
push
imul
sbb
dec
insb
clc
add
lret
xchg
xchg
jg
dec
add
repz
stc
scas
aam
xor
std
xor
out
nop
fidivl
xchg
adc
insb
bound
fcom
push
rolb
mov
dec
adcl
pop
pop
and
dec
mov
lahf
and
xchg
aam
mov
sbb
in
add
cmpsb
hlt
dec
and
iret
dec
push
aad
push
cli
push
inc
cmc
fldcw
scas
sbbb
ss
lcall
cltd
lods
xchg
mov
or
addr16
sub
movsl
ficoml
and
mul
add
pop
add
sbb
test
jmp
push
dec
or
add
mov
add
lock
add
pop
adc
loopne
adc
cmp
cmp
sbbl
mov
daa
pushf
pop
dec
sbb
cmp
jae
add
cwtl
jb
imul
ret
pop
addb
psubusb
and
popa
ljmp
loopne
fstps
sbb
push
xchg
inc
jae
ja
jb
loop
add
add
and
xorb
push
add
dec
sbbb
add
mov
insb
adc
xchg
aam
adc
xchg
aas
and
pop
insl
jmp
aam
jb
cmc
mov
lret
arpl
mov
fs
daa
push
sar
imul
mov
sub
dec
faddl
jo
mov
mov
or
cmpsl
xor
add
in
or
push
push
addb
adcl
mov
dec
pop
jno
pop
inc
or
jne
mov
mov
add
mov
jge
rolb
xlat
sbb
dec
add
arpl
mov
dec
in
add
xchg
shll
sub
mov
cmpsb
push
je
add
cs
add
imul
push
mov
cmp
and
and
mov
add
or
add
add
in
sbb
cmp
stc
pop
cmpsb
mov
pop
xchg
lods
sarb
mov
push
push
jns
pop
sub
add
push
xor
and
lock
add
dec
add
fwait
incl
add
mov
fcomp
in
cmp
add
mov
enter
inc
leave
dec
call
add
xchg
pop
mov
pusha
out
hlt
add
sbb
ror
push
pop
testl
lret
rclb
mov
daa
incl
sub
aaa
xchg
lea
shrl
aad
les
inc
fstp
or
jge
add
clc
sub
cld
add
out
add
cs
lock
add
das
aam
adc
push
add
jno
add
jmp
pop
push
inc
arpl
pop
jbe
pop
lret
add
xchg
cmpsb
call
xlat
push
or
loopne
test
jge
std
ljmp
push
dec
pcmpeqw
adc
movsl
cmp
xchg
arpl
and
mov
push
test
call
pop
dec
sub
in
push
push
pop
loop
push
xor
dec
jne
iret
push
movsb
inc
adc
or
push
adc
faddl
outsl
jb
enter
add
sbb
out
les
aaa
xor
in
dec
popl
jbe
push
xchg
cld
dec
loopne
jp
add
leave
jns
xor
add
push
lret
pop
add
sbb
cld
xlat
imul
or
push
mov
push
lock
jno
add
xchg
adc
add
cmpsl
adc
orb
add
cmp
pop
cltd
jecxz
fdivrs
out
add
and
sbb
enter
add
mov
adc
dec
jle
clc
add
jl
stos
and
inc
add
mov
add
jb
jns
repnz
cmp
or
popa
jecxz
mov
icebp
fs
nop
jae
inc
popa
adc
xor
add
sub
jno
and
push
sub
jae
adc
sbb
mov
push
pop
jo
cmp
xchg
insb
outsl
jns
xchg
sub
pop
cwtl
cs
lret
push
rcl
bound
stos
add
pop
jp
add
cmpb
repnz
add
xor
shrd
lds
push
add
leave
or
stc
and
cmp
add
aaa
inc
stos
lock
jne
cwtl
pop
cld
xchg
cli
out
add
sbb
lea
test
les
dec
and
pop
test
jg
add
clc
sbb
sbb
pop
daa
add
inc
out
cwtl
test
cmpsb
adc
loopne
cmp
aas
sub
imul
jnp
aas
mov
add
call
cmp
sti
cmp
movsb
add
scas
ja
push
mov
fstpl
mov
cmc
sub
sbb
add
movsb
mov
add
mov
clc
les
hlt
in
test
lds
add
daa
adc
imul
and
icebp
enter
add
jnp
cmp
test
jp
jbe
pop
lds
shll
jmp
mov
and
add
lea
xchg
adc
inc
cmp
gs
adc
movsl
jl
mov
cmpl
jne
aaa
std
and
dec
lahf
add
lods
sbb
add
mov
int3
add
mov
add
push
sub
lds
dec
incl
adcb
pop
int
xchg
xor
mov
push
push
aam
and
icebp
cmp
push
add
out
and
lock
daa
or
add
pop
sub
adc
pusha
out
test
add
fstpl
push
and
roll
or
out
shl
stos
add
mov
scas
add
in
ret
inc
push
cwtl
push
mov
in
jecxz
mov
clc
stos
jge
add
push
imul
ja
enter
add
cmp
sbb
icebp
dec
push
push
jp
and
and
or
xlat
jnp
and
incb
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
mov
mov
dec
add
ja
aas
repz
add
hlt
jg
jno
rorl
push
and
jbe
add
inc
enter
adc
add
in
or
xor
push
mov
add
inc
sbb
add
mov
xchg
loop
mov
or
add
xor
add
repnz
rcl
jns
movsl
add
cmpsl
clc
mov
add
rorl
hlt
push
addb
xchg
push
fcoms
mov
and
xlat
scas
mov
lcall
pop
add
jne
push
jp
push
add
hlt
sub
pop
sti
insl
mov
pop
inc
movsb
xor
or
in
jbe
push
in
lods
loopne
clc
imul
pop
and
inc
divb
push
popf
fdivl
jge
jae
adc
or
pop
push
leave
popa
and
ja
mov
sbb
jo
xchg
jne
add
into
jge
adc
cmp
mov
and
test
jmp
mov
mov
lods
mov
or
add
xor
cmc
dec
add
xor
test
ljmp
imul
psubusb
sbb
subb
pop
push
add
out
sbb
clc
push
jg
mov
clc
pop
cmp
add
push
rcll
pop
sub
mov
or
daa
push
sub
jmp
cmp
movsl
test
cmp
push
cmp
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
push
je
shlb
orb
and
loopne
mov
out
inc
inc
add
inc
mov
mov
push
cmp
inc
xchg
adc
sbb
in
add
inc
sbb
stos
adc
add
xchg
add
hlt
add
sub
and
add
push
add
xchg
cmpsl
ja
loopne
dec
inc
inc
cmp
add
pop
mov
or
inc
pop
pop
xor
je
mov
incl
mov
rcr
add
or
and
dec
test
jnp
sbb
clc
roll
xchg
pop
inc
cmp
mov
pop
cltd
xor
xchg
sbb
adc
add
and
and
je
repnz
enter
push
add
inc
or
call
in
jl
push
xor
adc
inc
add
sub
mov
jne
out
mov
jne
add
fbstp
mov
push
lods
cmpsl
sub
jne
pop
xlat
clc
stos
xchg
pushf
and
ds
iret
add
inc
jne
add
je
push
pop
push
fbld
xor
and
sbb
dec
dec
push
push
adc
fstl
shlb
in
pop
dec
add
dec
cmp
dec
negb
jne
hlt
adc
inc
cs
rorb
or
adc
jbe
ja
cmp
sbb
inc
xor
sub
dec
pop
xchg
jae
and
lcall
and
mov
and
aad
jns
sbb
sbb
repnz
nop
xor
cld
xor
in
cli
inc
cwtl
add
jle
mov
push
xchg
adc
add
xchg
testl
and
push
lock
adc
xor
jmp
sbb
and
aam
testb
lds
into
fisttpll
testl
pop
mov
cmpsl
dec
sbb
push
andb
add
jg
lea
inc
mov
ja
mov
add
pop
cltd
sbb
or
mov
enter
fwait
inc
int3
lret
mov
push
outsl
add
les
sbb
add
test
neg
pop
add
lds
arpl
sub
or
outsl
insl
loopne
add
imul
add
cmp
inc
adc
faddl
into
mov
jmp
adc
add
xlat
movsl
sarl
mov
jb
mov
pop
int
xorl
movzwl
loop
loopne
mov
mov
and
add
lahf
ret
mov
adc
push
cmpl
mov
mov
popf
and
add
das
mov
jbe
fwait
dec
loop
in
out
xchg
add
or
inc
ja
rolb
mov
mov
add
or
mov
leave
loop
fprem1
stc
sbb
shlb
add
lahf
hlt
decb
call
sub
sub
arpl
add
clc
in
or
pop
dec
mov
flds
cld
mov
rorl
adc
ret
call
jnp
push
sti
mov
xor
push
add
imul
arpl
loopne
addl
dec
es
xor
push
add
shl
add
je
push
push
jge
lret
jp
mov
push
rcrb
dec
int3
cmpl
jge
cmp
ret
lret
out
push
or
cld
add
daa
sub
pop
adc
pop
lahf
or
cmp
jge
mov
xor
add
daa
pop
jb
inc
jbe
add
cmp
jne
mov
add
pop
outsb
adc
xor
add
cwtl
cmc
repnz
clc
jo
add
add
les
mov
dec
pop
into
inc
fsub
add
add
rcrb
mov
insb
daa
mov
inc
add
call
test
add
jl
mov
push
neg
add
shlb
add
push
jmp
cmp
add
fmul
pop
fimull
stos
dec
ss
lret
testb
mov
test
dec
push
sbb
sbb
cmpl
or
push
push
pop
ret
sub
in
enter
mov
jmp
mov
xor
nop
int3
rclb
mov
jge
adc
js
jb
push
pop
add
push
xor
add
loop
add
mov
inc
shll
add
xor
out
rclb
inc
in
dec
orl
mov
sub
cmp
inc
enter
fld1
cs
add
mov
mov
pop
movsb
fildll
push
add
lret
push
adc
xor
fdivrp
add
pop
mov
dec
mov
add
add
out
stc
mov
sub
faddl
xchg
pop
movsb
shlb
rorb
hlt
add
lea
add
sub
jo
ret
xchg
sbb
xor
add
sub
inc
xorl
or
add
mov
pop
add
fs
xor
cmp
rcrb
cmpsl
cmc
cli
rcr
fildl
and
fstl
mov
push
or
or
or
aas
add
push
sub
xor
sub
sub
push
inc
sbb
test
push
or
or
fldl
aas
and
pusha
push
jp
divb
rol
and
pandn
dec
popa
filds
or
sbb
inc
sub
adc
xor
adc
out
xchg
push
add
aad
add
outsb
push
mov
push
pusha
aad
mov
push
invd
add
inc
stc
add
ds
xor
daa
add
mov
dec
dec
mov
push
mov
movl
mov
adc
add
inc
add
dec
ds
pop
pop
or
dec
jne
mov
add
test
repnz
mov
enter
out
test
or
add
or
ret
aas
jmp
mov
push
inc
nop
jae
sbb
ss
arpl
or
in
stc
or
aaa
and
clc
lea
mov
mov
adc
adc
xchg
jns
ud2
enter
and
jno
sahf
adc
jge
in
in
and
fsubs
inc
leave
cmpl
andl
xchg
ficoms
jmp
loopne
sub
pop
ret
or
movsb
sbbl
cld
stos
add
pop
sub
xchg
daa
mov
sub
add
ds
sarb
push
or
into
xchg
fwait
rorb
pop
pop
jl
inc
sub
cmpsl
or
and
jp
adc
aam
orb
jl
je
push
enter
add
or
jmp
mov
push
in
add
pop
cmp
icebp
xor
mov
fldt
mov
mov
sbb
cmp
dec
in
add
rorl
pop
rcll
enter
and
push
xor
lds
sbb
cmp
movntps
and
les
mov
add
loop
add
push
or
sub
pop
dec
or
add
pop
or
and
ss
inc
pop
mov
shlb
jle
add
test
shrl
adc
pusha
mov
cmp
xor
bound
sub
and
inc
in
push
movsb
xchg
sbb
xor
pusha
pop
xchg
push
rolb
insl
loope
dec
add
xor
out
cmp
dec
lock
inc
inc
mov
lods
nop
pop
jae
jnp
pop
aam
xor
push
xor
jbe
ljmp
mov
adc
mov
cmp
xor
das
fcom
int
add
pop
pushf
lods
add
fisubrs
mov
je
mov
sbb
inc
add
leave
test
pop
pop
mov
lds
mov
pop
lods
add
cs
sub
jle
lock
cmp
add
popw
add
or
test
add
inc
ror
adc
lock
cmp
and
xchg
sub
pop
ret
in
xor
pop
inc
lock
add
jl
lods
cmp
jns
xor
dec
loopne
sub
add
cmp
popa
inc
pop
xchg
add
pushf
ss
int
cmp
das
add
mov
ds
sbbb
pop
inc
aam
add
gs
lods
mov
aas
and
movsb
loop
add
addb
adc
popf
js
inc
add
pop
aam
add
and
jmp
test
lods
aas
or
mov
add
add
pop
inc
jno
adc
add
out
or
add
push
pop
scas
sub
jge
cmp
insb
mov
adc
inc
test
lds
jne
insb
xchg
jns
or
nop
mov
in
cvttps2pi
add
adc
cmp
mov
xchg
dec
inc
jle
pop
icebp
insl
sub
cld
add
sbb
push
push
sub
xor
add
pslld
pop
in
das
sbb
jl
lcall
and
xor
add
xor
mov
add
ja
and
mov
xor
inc
push
aas
lods
pop
inc
hlt
inc
cmp
add
adc
cld
test
psllw
popa
outsb
add
gs
lahf
sbb
push
jne
outsl
in
ja
add
push
dec
and
pop
xchg
cltd
add
ds
xchg
add
jo
inc
outsl
and
jb
je
jne
in
js
add
adc
push
inc
dec
cmp
inc
test
mov
in
mov
push
out
fs
pcmpeqd
add
jnp
popa
je
push
jp
add
pop
add
xchg
mov
dec
pusha
cmpl
outsb
jne
sbb
std
imul
loopne
xchg
cmc
in
or
imul
je
cmpsl
adc
test
arpl
jmp
mov
xor
jne
dec
js
and
mov
mov
popa
subb
and
sub
adc
adcb
daa
cmp
add
add
xchg
adc
add
mov
add
adc
add
das
cmc
jg
stc
and
add
sbb
or
mov
lahf
fst
shlb
js
in
lret
add
xor
push
pop
mov
add
push
mov
addr16
adc
mov
pop
mov
jne
push
mov
inc
mov
mov
lea
add
add
pop
in
xor
or
loopne
pmulhuw
and
inc
xchg
and
add
jge
test
push
jo
push
out
shll
mov
js
js
add
pop
dec
push
mov
test
inc
test
add
and
add
mov
push
in
jb
mov
into
loopne
cmp
add
sbb
push
cwtl
dec
dec
add
sarl
adc
lods
into
add
inc
mov
adc
or
jne
cmovne
adc
loopne
pmaxub
shrb
pop
pop
sbb
pop
int
fcoms
add
sub
insb
inc
decb
adc
je
fwait
push
and
add
call
pop
dec
cmp
sub
subl
pop
pop
jae
mov
pop
inc
cs
add
push
sub
and
mov
xor
les
sbb
cwtl
adc
or
mov
push
add
mov
rclb
add
cmp
mov
ss
and
add
addb
ljmp
jle
sbb
dec
sbb
inc
xchg
mov
rcll
js
jae
outsb
add
dec
bound
dec
mov
xchg
cmp
test
sub
add
push
push
arpl
push
lea
mov
push
pop
test
mov
xlat
add
xchg
test
dec
or
in
add
xchg
add
push
lods
add
lods
mov
mov
mov
movsb
pop
mov
nop
xchg
mov
les
or
pop
cmp
xor
jo
xchg
add
fstl
fs
out
out
cmp
add
or
sub
mov
jmp
xor
lret
insl
sub
in
lds
xchg
jl
invd
pop
adc
adc
or
clc
call
adc
cmp
movsb
add
add
inc
sbb
loopne
adc
ja
jno
add
dec
xchg
sbb
jb
push
pusha
mov
xor
fs
imul
dec
ret
das
and
jo
inc
add
mov
cmp
fs
xor
push
sbb
enter
jns
or
dec
jo
cmpsb
sub
adc
cmp
push
or
add
xor
inc
pop
das
jecxz
pop
test
call
add
lret
orb
stos
arpl
push
mov
add
adc
cmp
jmp
pop
adc
stos
mov
rorb
push
or
arpl
test
ret
mov
add
pop
mov
dec
add
shrb
xchg
in
and
nop
adc
pop
or
sbbb
adc
cmp
dec
add
pusha
mov
add
inc
and
push
shlb
dec
add
mov
mov
and
push
jmp
xchg
push
add
jns
aad
jno
add
ljmp
xchg
hlt
mov
xchg
sbb
push
add
sbb
mov
adc
repz
ret
cli
mov
xchg
stos
orb
dec
add
push
popa
jb
clc
fisttps
lahf
sub
dec
sti
aam
pop
jg
add
push
outsb
in
cmp
test
add
add
iret
xchg
jle
data16
push
ret
icebp
and
pop
and
pop
cwtl
push
add
dec
inc
and
fadd
rorb
cmp
push
lcall
dec
add
enter
dec
or
add
pop
and
push
mov
add
out
repnz
jp
dec
sub
jnp
dec
gs
cmp
sub
jmp
ja
pop
mov
or
orb
add
clc
sub
hlt
cld
rclb
inc
pop
in
in
xchg
loopne
or
arpl
push
pop
push
subl
jne
sbb
fwait
mov
adc
jb
mov
xchg
mov
mov
pop
stos
test
xchg
or
pop
inc
outsl
insl
sbb
add
pushf
sub
cld
loop
add
jo
or
shrb
movsl
add
sub
pop
unpckhps
xchg
jb
add
inc
popf
jo
aaa
mov
aam
push
and
jl
sub
hlt
sbb
inc
arpl
adc
xchg
add
xchg
mov
inc
cmpsb
out
push
mov
xor
push
stos
jne
cmp
add
and
jb
insb
sarb
xor
add
pop
loope
jo
pop
add
adc
xor
loopne
xchg
cmp
and
sub
jae
inc
cmp
and
outsb
dec
mov
push
nop
push
les
xchg
movsb
cmp
jo
add
push
icebp
pusha
cmp
int3
push
in
cmp
in
dec
mov
shl
stos
arpl
imul
fs
cld
mov
mov
loopne
loopne
adc
sahf
add
pshufw
ret
xor
add
sbb
adc
push
pop
sbb
test
sbb
and
ret
dec
mov
mov
xor
pop
pushf
incl
adc
cmp
and
add
add
bound
push
clc
add
jl
push
psubsb
xchg
add
jle
push
pusha
mov
and
add
xor
push
mov
loopne
je
add
jg
jp
sbb
mov
xchg
aad
sti
pop
stos
mov
or
push
push
pop
add
push
cmc
add
inc
adc
fstp
addl
adc
sbb
icebp
add
outsl
cli
loope
iret
pusha
add
cld
cmc
mov
push
cmp
clc
fwait
pop
push
lea
insb
ss
imul
std
mov
les
aas
push
add
fistpll
fcompl
and
dec
test
aas
cmpsl
aam
sub
add
fs
cli
setg
adc
repnz
sub
loop
loop
mulb
add
shlb
pop
pop
add
push
push
mov
dec
shr
jo
mov
jg
pop
add
jb
adc
fmuls
add
hlt
add
push
or
or
ret
add
mov
in
add
xor
addb
mov
or
cwtl
sub
cld
rolb
dec
mov
jns
inc
nop
dec
add
je
mov
rorb
movl
adc
testb
or
add
je
mov
int
mov
clc
pmuludq
ja
add
or
jae
call
adc
push
pop
mov
sub
adc
fs
lock
inc
and
add
mov
jne
adc
jmp
add
or
cmp
lahf
clc
add
push
mov
in
push
xorl
shr
xor
and
push
and
jecxz
loope
add
movsb
sahf
push
cmc
es
push
sbb
out
pushf
scas
int3
rclb
and
adc
mov
mov
mov
add
fidivrs
or
pop
xor
aaa
je
or
adc
jg
inc
lret
mov
mov
adc
sbb
sub
add
fs
xor
add
push
add
loop
push
addr16
jo
mov
mov
imul
inc
jg
pop
dec
imul
repnz
movsb
inc
add
push
jno
xchg
sti
add
sbb
iret
or
push
push
or
add
or
mov
sub
enter
adc
movsl
popa
fildl
mov
mov
xlat
stos
add
lahf
jo
push
mov
inc
mov
push
push
push
mov
add
pop
pop
out
cmp
push
pop
inc
push
out
movsb
sbbb
adc
aad
mov
js
add
mov
jno
add
inc
xor
pop
xlat
das
cmp
push
add
cmp
add
inc
push
pushl
call
in
mov
and
out
dec
addl
cmp
loop
add
fsubrl
imul
enter
hlt
inc
dec
sarl
pop
xor
fistps
jbe
outsb
inc
lock
inc
adc
je
scas
xchg
dec
sub
add
in
cmp
and
test
movsl
inc
add
jge
in
xor
aad
fiadds
xchg
fsubrs
push
xor
cmp
je
push
andl
adc
mov
shrb
ja
fcmovnbe
dec
add
or
inc
or
inc
add
mov
or
jp
inc
xor
addr16
pusha
dec
movsb
pop
pop
cltd
mov
cmp
and
addr16
ret
fnstenv
adc
jbe
inc
jge
cmovne
test
ljmp
sub
mov
pop
add
push
jno
pop
add
pop
data16
mov
loopne
jne
adc
add
jle
add
add
xchg
rolb
and
cmp
shrb
push
aam
daa
push
inc
lea
mov
jmp
xor
jg
jg
setne
cmp
xor
pop
out
filds
jns
mov
test
push
adc
push
add
ret
clc
or
sub
mov
xor
subl
push
pop
adc
cmp
ret
mov
jne
stc
hlt
imul
inc
sarl
outsb
fstpl
lret
sub
pop
or
add
in
jl
dec
adc
or
loopne
sbb
ja
add
or
mov
inc
jg
mov
in
daa
add
clc
lahf
shll
aas
lods
int
sbb
sub
inc
out
cmp
sub
scas
dec
stos
mov
lea
ret
push
add
mov
lods
nop
xchg
add
xor
lea
xor
add
unpcklps
jne
loop,pt
ss
xor
or
sbb
and
add
adc
jmp
lock
push
stos
adc
std
adc
pop
add
add
and
fdivs
jmp
popf
dec
notl
push
jge
movsl
das
fnstcw
pop
cmp
popf
ret
ja
cli
add
push
das
movsb
out
fadds
cmc
in
cmp
add
ret
call
add
mov
sbb
add
lock
add
fildll
pop
add
sub
in
mov
daa
jbe
aad
cwtl
lahf
push
xor
xor
or
sub
aam
jne
mov
push
das
add
xchg
inc
xlat
pop
andb
scas
call
loopne
std
ds
dec
test
and
add
fcoml
insl
pusha
ljmp
cmc
sbb
aam
mov
test
adc
cmpsb
jmp
call
popf
adc
daa
test
jecxz
mov
adc
or
xor
mov
outsl
clc
push
loop
jo
inc
aaa
test
lods
dec
out
pop
repnz
nop
add
ss
shl
and
lea
jecxz
call
mov
or
add
jle
shl
jecxz
add
xchg
mov
cld
mov
test
nop
pusha
insb
push
in
add
and
ja
pop
roll
add
or
pop
fdivl
jecxz
jne
sbb
loopne
insb
mov
rorb
mov
ret
pop
push
jns
add
mov
movsl
push
inc
fdivrs
add
pop
lods
pop
xchg
dec
repnz
outsl
insb
mov
or
cmp
dec
ljmp
cmpsb
jns
add
aam
mov
and
je
adc
fiaddl
stos
imulb
or
mov
mov
mov
inc
push
ret
xchg
dec
xchg
add
inc
cld
dec
add
push
int
pop
adc
mov
jecxz
call
shlb
jmp
aaa
add
xchg
aas
inc
or
in
push
add
stc
shll
and
dec
add
mov
adc
pop
inc
inc
sbb
rclb
test
repz
loope
pop
repnz
roll
cmp
iret
sub
mov
cld
dec
add
and
shrl
dec
fidivrl
sbb
sbb
movsl
cltd
sbb
sub
out
negb
je
mov
pop
pop
test
adc
and
enter
in
jb
cmp
movsb
and
cwtl
in
jb
or
jns
leave
dec
mov
sbbb
push
pop
divl
or
loope
sub
out
sub
rolb
shlb
pop
mov
inc
leave
mov
add
cld
cmpb
add
mov
add
dec
jmp
fwait
sbb
rcl
jmp
adc
mov
sub
jne
testl
repz
pop
aam
orl
ror
sti
enter
wrmsr
mov
incb
lret
mov
add
les
inc
push
jl
mov
lds
add
push
adc
dec
mov
pop
add
lods
xchg
adcb
test
aaa
add
scas
imul
xchg
pop
add
push
in
xchg
orb
es
or
adc
push
add
add
movsb
fwait
or
ljmp
push
add
in
pusha
test
lock
orb
or
push
push
push
add
sbb
outsb
mov
or
pop
sub
add
lock
push
jl
push
push
arpl
adc
stc
and
xor
push
adc
pusha
cmp
stos
xor
add
cld
inc
aas
dec
xchg
add
in
call
push
push
rorl
inc
cmc
push
add
inc
sub
ljmp
add
aaa
pop
pop
add
test
dec
push
cmp
incl
push
scas
inc
add
cmpl
pcmpeqw
loopne
xor
inc
ret
and
incb
xlat
push
ret
or
inc
mov
and
aam
mov
jmp
or
adc
mull
test
call
sub
jo
pop
mov
dec
adc
mov
in
add
out
lahf
push
add
cwtl
test
imul
or
add
rclb
pop
add
pushf
jg
inc
rorl
or
pop
add
inc
mov
sbb
xchg
add
filds
dec
add
mov
push
add
test
add
push
xchg
fs
lds
and
lahf
or
push
in
smsw
call
out
dec
add
xor
jbe
ret
cmp
adc
stos
dec
mov
push
mov
repz
add
dec
dec
add
sub
mov
jno
mov
jae
daa
or
pop
fcoml
enter
add
pop
sub
add
xchg
fistps
lahf
add
arpl
add
xlat
mov
pop
adc
mov
lahf
adc
movsb
mov
and
sub
xchg
sahf
inc
add
mov
mov
pop
mov
push
dec
xchg
test
push
lcall
mov
cmpsb
ret
bound
je
jns
add
mov
cmp
push
adc
ljmp
add
and
mov
add
data16
mov
push
in
xchg
test
mov
add
enter
cmp
xor
sbb
shlb
fwait
push
test
je
mov
and
jg
or
mov
loope
mov
movsb
xchg
mull
repz
aam
add
or
icebp
add
and
add
cs
imul
adc
adc
inc
scas
jmp
fs
cmp
popf
or
js
les
add
mov
add
cmp
and
xchg
sub
push
and
cs
sub
or
pop
rcr
mov
imul
add
or
jl
and
sub
add
push
xchg
lea
scas
enter
dec
inc
decb
jp
loop
cmp
fidivrl
sub
add
orb
dec
and
add
dec
sbb
sbb
adc
or
push
add
push
push
and
mov
mov
pusha
pop
ret
out
add
test
sub
imul
cmp
cmp
add
fisubrs
addl
data16
sub
cmp
insb
xor
addb
add
idivb
push
and
mov
cmpb
lsl
int
mov
pop
add
repz
jno
inc
inc
enter
fcoms
push
es
enter
push
xchg
iret
lock
mov
test
cli
mov
add
pop
mov
outsl
or
hlt
sub
push
jle
js
das
pop
insb
popa
imul
test
xchg
lock
sub
cmp
dec
mov
fdivs
ltr
clc
push
xor
fs
add
mov
bound
push
add
stos
dec
cli
out
psubb
in
or
add
add
scas
add
les
fistl
jecxz
lret
add
mov
add
lahf
hlt
imul
dec
add
mov
into
adc
rolb
xchg
das
icebp
repz
sub
pop
dec
rcrb
xor
inc
mov
add
rorb
adc
in
push
fs
pop
dec
in
mov
mov
je
ja
push
push
call
add
push
das
mov
mov
add
stc
lcall
mov
in
call
push
sahf
js
je
pop
xor
adc
idivl
xchg
add
mov
jo
xchg
lea
enter
repnz
cwtl
cmc
pop
fldcw
clc
dec
and
push
sti
into
ja
dec
clc
incl
incb
push
add
dec
push
outsl
add
adc
pop
mov
jge
jle
mov
lea
test
adcl
sub
mov
mov
inc
pop
sbb
xor
mov
and
mov
add
scas
sbb
adcb
add
and
add
cwtl
scas
mov
adc
cmp
lea
lock
rorb
inc
pop
rol
push
or
inc
imul
jge
jae
jge
add
cmp
add
aas
stc
cs
lea
mov
xchg
imul
push
add
dec
or
jp
insb
icebp
inc
sbb
add
dec
or
cmp
pop
sub
sbb
jno
or
outsl
orb
movsb
xor
push
xchg
add
lret
or
cmpb
aas
pop
dec
xchg
aad
test
fcomps
imul
mov
imul
pop
loop
add
gs
lds
sub
imul
imul
movsb
ja
xchg
fcoml
add
push
push
fidivrl
sub
fstl
fsts
andl
xlat
sub
mov
pop
or
inc
inc
sub
ds
cvtpi2ps
testb
push
notl
and
or
sti
aaa
pop
add
mov
or
daa
subb
xor
fcoml
int3
or
add
imul
and
test
call
push
push
or
mov
rcr
mov
jl
add
push
repz
push
out
sbb
rcrb
xchg
cmc
add
xchg
jb
rcrb
js
loopne
sbbb
add
and
push
data16
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
add
imul
repnz
dec
stos
outsb
push
scas
add
sbb
mov
add
cld
push
mov
adc
fsts
sbb
rol
sbb
add
and
test
int3
add
dec
movsb
fs
aam
pop
nop
mov
and
pusha
jmp
add
clc
xor
cmp
mov
cmp
stos
mov
les
scas
sub
push
ret
imul
nop
pop
bnd
add
arpl
adc
and
nop
adc
or
jle
fcmovu
xchg
dec
aad
jo
cmpsl
inc
xor
cmp
cmp
std
adc
xor
call
add
stos
int3
or
add
add
mov
cld
sbb
push
imul
pop
fistpl
bound
pop
mov
add
cld
add
adc
push
jo
addb
sti
xor
bswap
adc
mov
sbb
inc
or
aam
je
insl
add
xor
mulb
nop
dec
mov
fsubrs
push
dec
or
inc
add
pusha
loop
cltd
mov
push
pop
add
mov
aam
shr
out
pop
add
jnp
dec
push
push
xchg
push
jae
fildll
adc
add
int
das
lds
inc
or
cmpl
aam
mov
and
iret
test
sysexit
push
ret
mov
or
inc
pop
inc
or
lahf
xor
push
push
movsb
mov
push
xchg
mov
in
and
mov
mov
or
add
mov
sub
add
imul
mov
mov
sub
mov
cmovb
shlb
arpl
ja
mov
sub
fmull
pop
mov
dec
pop
xchg
push
sbb
lock
mov
add
mov
sub
test
add
pop
add
add
test
push
mov
adc
jbe
inc
in
fcoms
xchg
out
lea
adc
xor
test
mov
mov
fnsave
sbb
or
lods
xor
mov
inc
mov
fbld
loopne
adc
pop
mov
int3
rclb
mov
mov
mov
mov
aam
lret
or
push
mov
sub
mov
scas
inc
sub
jae
sub
pushf
shlb
aaa
or
lods
jns
push
cmp
mov
add
jae
test
xchg
add
out
rolb
push
sarb
push
insb
xchg
mov
aas
and
cmp
dec
pop
inc
arpl
inc
xor
ljmp
cmp
pop
pop
mov
push
decl
js
dec
repz
in
stc
or
test
hlt
dec
push
push
lock
or
mov
sub
jne
pop
pop
arpl
loope
notl
push
call
sub
cli
add
stos
dec
xor
inc
jl
ja
lds
mov
add
add
add
lea
out
jle
fsubs
test
jne
clc
push
pop
adc
or
test
in
testb
add
jns
mov
ret
add
push
xchg
pop
mov
pop
adc
iret
push
xor
push
inc
sub
in
sbb
push
leave
fidivrs
pop
add
enter
and
insb
add
mov
xor
pushf
adc
clc
xor
mov
cmp
loopne
jbe
inc
mov
fistl
jmp
push
lahf
nop
jl
mov
imul
adc
mov
add
mov
add
shl
sub
mov
jbe
imul
jmp
mov
hlt
and
loope
jmp
fbld
mov
push
add
cmpsl
imul
dec
jp
jp
add
sbb
pop
sub
add
inc
repz
xchg
pushf
sub
lcall
jle
mov
cmp
sub
push
add
mov
adc
je
add
jb
jo
bound
fs
subb
push
sbb
and
add
jb
cmp
pusha
and
add
js
jnp
jno
add
clc
lcall
push
mov
gs
pop
pusha
inc
and
pop
dec
dec
cwtl
aas
movups
cmp
and
add
shrb
aam
xchg
out
xchg
lock
mov
leave
aad
add
pop
fsubrl
xor
fs
cmp
add
jbe
jne
imul
adc
jle
hlt
jne
and
jno
nop
adc
push
sub
push
mov
and
mov
cld
psadbw
call
cmpl
mov
and
mov
imul
mov
push
and
pop
lcall
push
es
mov
jnp
cmp
sub
insb
jmp
dec
or
mov
stos
push
lahf
call
push
inc
or
mov
iret
push
sub
je
hlt
dec
push
dec
cmpsb
fisttps
outsb
dec
pop
or
sbbb
jge
fldl
inc
or
out
daa
lock
lret
pop
das
adc
add
pop
enter
push
add
out
arpl
imul
mov
mov
add
add
rolb
xchg
push
push
adc
fsubrs
mov
xor
pop
mov
pusha
cmpsl
lea
xchg
inc
enter
mov
push
lods
adc
mov
call
leave
push
jo
inc
scas
xor
dec
jle
adc
add
mov
shlb
pop
add
lret
and
leave
lods
les
mov
sub
shlb
outsb
test
jp
sbb
sub
inc
mov
cmp
add
popa
sbb
nop
pop
ret
jg
xlat
shlb
sbb
adc
add
adc
mov
sub
or
es
fldcw
js
adc
lods
ljmp
test
sbb
jne
add
pop
add
and
cmpl
add
out
jo
add
stos
in
jle
lods
and
cmpl
push
add
stos
add
cmp
movsb
jmp
movsl
insl
jnp
jle
adc
mov
mov
mov
push
faddl
shlb
cmp
js
jl
add
sbb
cmp
adc
jnp
inc
out
adc
fwait
bound
and
arpl
mov
push
jo
fidivl
or
fst
les
or
add
adc
add
loopne
adc
dec
add
fbstp
xchg
leave
add
push
and
add
roll
add
outsb
out
or
dec
push
mov
aaa
lds
xchg
add
call
sbb
pop
daa
js
cmc
les
and
sub
mov
add
iret
add
jg
add
fldcw
test
bound
inc
cmp
push
add
sti
inc
mov
shl
jns
fwait
aaa
lcall
hlt
push
and
rolb
inc
cmp
shrb
dec
adc
pop
mov
cmp
add
mov
mov
jb
cmpsl
add
dec
mov
insl
stos
cmp
jecxz
xchg
int
jo
add
mov
stc
jle
jb
loopne
add
ret
sarb
lds
push
or
mov
addl
inc
pop
fwait
push
sahf
cmpsl
enter
add
in
test
das
rolb
jbe
fdivl
les
push
push
push
sbbl
pop
cmp
add
dec
cmp
add
sbb
mov
cli
outsb
add
cmpsl
pusha
xor
add
pop
ret
mov
mov
mov
lret
add
dec
nop
fcoms
pop
lock
loopne
add
outsb
sbb
cmpsb
lahf
rclb
mov
add
or
sbb
in
movsl
add
bound
sub
cld
mov
push
icebp
push
insl
adc
add
add
in
mov
pop
mov
mov
jb
pop
cmovbe
rcll
pop
shlb
cmpl
cmp
add
xchg
xor
dec
ficompl
pop
addl
sti
adc
add
fcoms
cwtl
fwait
pop
push
jo
fs
pop
jo
add
push
mov
and
and
daa
cmpsb
cmpsl
xor
inc
lods
push
add
and
adc
sbb
mov
jo
add
cmpsl
mov
loopne
add
inc
mov
add
int
push
scas
stc
enter
add
cld
mov
xchg
addl
xor
and
cmp
cmc
cmpsb
mov
pop
add
cltd
jne
sbb
dec
add
mov
add
xor
xchg
sub
es
pop
xchg
xor
icebp
aad
inc
and
insl
test
rolb
lahf
pop
xchg
cmp
pop
inc
pop
pusha
loop
jb
add
lahf
push
fildll
mov
or
dec
lcall
mov
add
daa
aam
inc
jne
cs
add
mov
push
popf
add
adc
add
notb
ds
aas
lock
jne
add
add
jl
clc
test
insb
jo
add
push
aad
in
fucom
push
add
xchg
outsl
stc
orl
sub
stos
into
icebp
jg
adc
adc
jp
notb
pop
int3
sbb
pop
insb
orb
jae
mov
ret
cmp
sbb
and
add
xchg
iret
rcrb
out
sbb
mov
pop
cmp
jge
sahf
mov
jno
xchg
movsb
andl
add
pop
xchg
push
dec
scas
jo
adc
fst
add
mov
xor
inc
in
xor
loopne,pt
add
cmpsl
add
mov
add
mov
sub
gs
push
mov
add
mov
loopne
add
fnstenv
cmc
es
or
lret
dec
pop
sbb
testl
roll
ds
xchg
push
insl
sbb
add
jecxz
adc
out
pop
scas
add
xchg
sub
add
pop
aad
cmpl
cwtl
loope
lret
mull
sbb
inc
les
push
cmp
jge
inc
push
lock
xlat
call
jbe
sbb
add
je
lods
mov
sbb
mov
arpl
pop
mov
add
lret
sbb
inc
fdivrs
sub
stc
add
test
sbb
aam
pop
inc
jne
imul
je
and
sbb
xor
dec
and
fidivrs
data16
dec
lahf
jp
inc
ltr
xor
inc
push
fwait
repnz
and
pop
xlat
push
mov
ds
add
fcmovbe
ret
add
pop
mov
lock
test
loopne
shl
cmp
add
inc
neg
sbb
shrl
push
and
dec
mov
dec
sbb
xchg
or
stos
add
shll
add
xchg
loopne
test
loopne
xchg
stos
mov
loopne
seto
and
dec
jae
pop
sbb
mov
aam
repz
loopne
add
call
add
adcl
push
ret
cmc
rcrl
lock
mov
and
in
add
shll
push
rorb
loopne
add
mov
movl
loope
inc
or
inc
cltd
add
ss
jae
scas
add
sbb
inc
loopne
add
cs
push
xchg
lds
mov
push
add
int
out
fstl
in
mov
inc
push
sbb
mov
xor
add
in
push
push
mov
insl
adc
lea
call
add
ret
sarb
es
sbb
add
pop
sbb
fwait
cmp
xchg
sbb
shlb
push
mov
in
push
mov
daa
add
pextrw
test
xor
pusha
test
jnp
call
or
mov
push
or
pop
fimull
sahf
cld
inc
repz
repnz
xor
insb
test
subb
adcl
movl
add
rolb
je
inc
mov
lahf
gs
cmp
jne
add
sbb
leave
cltd
shl
cli
or
ret
outsb
mov
inc
add
loopne
adc
push
cld
pop
add
add
jne
cmc
das
add
inc
or
jno
fadds
addl
push
incb
dec
in
cmp
push
loop
ss
icebp
mov
nop
sar
or
jg
hlt
sub
xorb
jl
mov
mov
pushl
push
and
pop
mov
orl
les
jle
adcb
imul
rolb
cmp
add
xchg
stc
fiadds
mov
jl
add
push
jo
ja
pop
test
incl
js
aad
jae
add
push
push
or
cwtl
or
add
push
or
push
popa
add
sub
mov
inc
pop
sub
sarb
cmp
cmpl
or
add
or
cli
mov
push
push
cmp
rorb
mov
movb
jmp
add
or
add
push
adc
popa
add
inc
add
sbbb
out
das
test
sub
mov
add
mov
add
jmp
add
insl
push
fsubp
icebp
xor
sub
sbb
add
add
jnp
outsb
sub
or
pusha
jae
dec
loopne
sbb
data16
and
roll
and
lods
and
pop
sub
mov
push
cmp
push
in
or
adc
aas
fsubrs
add
xchg
inc
dec
sti
add
cltd
repnz
or
or
js
rcrb
ljmp
add
cmp
mov
inc
neg
adc
add
test
pop
or
shll
sbb
jg
in
push
andl
mov
pop
cmp
mov
xor
dec
sub
push
cmp
paddb
incl
jae
add
jmp
inc
inc
and
out
ja
or
cmpb
mov
loopne
inc
lret
pusha
in
sbb
inc
addl
add
ds
jnp
sub
ja
lods
mov
inc
movsb
lcall
int
xchg
jmp
fldenv
add
js
dec
push
bound
imul
fldl
hlt
into
addr16
push
dec
jge
pop
test
add
in
aaa
sbb
icebp
ret
inc
inc
adc
xor
or
add
fcoms
mov
add
test
cmpsl
add
les
cld
xchg
add
push
sbb
popf
popa
inc
add
das
into
addb
xor
daa
inc
aam
pop
add
adc
mov
xchg
mov
sbb
adc
pop
or
fnsave
addb
cli
add
jno
sbb
jb
push
outsl
add
dec
or
iret
cli
shufps
jbe
cmp
jle
rclb
add
or
sub
adc
xchg
mov
lahf
dec
mov
mov
ja
jp
add
stos
and
cltd
les
orb
test
mov
cld
movl
aam
mov
dec
lea
adc
scas
enter
sub
and
add
push
or
pop
mov
add
pusha
jmp
and
xlat
cmpb
jne
int3
adc
inc
adc
daa
je
ja
pusha
ret
jb
decl
and
call
aam
mov
add
mov
or
jne
sbb
out
iret
testl
and
pop
pop
add
cmpsl
cwtl
dec
enter
or
fs
int
push
add
scas
mov
xor
dec
xor
in
add
fbstp
lret
jg
add
imul
add
imul
xor
mov
subps
pop
xor
mov
shlb
jne
add
mov
in
add
ja
sub
mov
neg
pop
stos
cmpsb
adc
ljmp
cmpb
lahf
sub
sub
loopne
mov
and
add
es
inc
test
add
sub
popa
add
add
insb
mov
pop
aas
mov
sub
rcrb
add
jne
push
pop
inc
and
scas
xchg
test
add
or
cmp
jae
add
push
push
add
popf
inc
sub
adc
dec
scas
sbb
push
out
add
push
inc
pop
mov
sub
dec
shr
sbb
sub
add
mov
dec
or
mov
cmp
movsb
pop
cmp
xor
inc
mov
cmp
sbb
lcall
gs
xor
les
mov
jne
dec
pushf
pop
popa
add
dec
stos
sbb
rcl
loopne
inc
sbb
ficoml
into
push
push
xchg
xchg
push
add
mov
jp
jno
andb
jecxz
and
push
popa
imul
in
pushl
les
push
lods
adc
mov
add
dec
cld
fdivrl
add
jge
or
lea
add
cmp
mov
mov
push
in
es
add
jge
cmp
test
mov
and
cli
mov
add
addb
pop
add
push
pop
jo
jge
add
cmp
adc
adc
pop
enter
lret
jnp
dec
inc
popl
aas
mov
adc
add
sub
push
mov
in
sub
add
push
jb
mov
nop
outsb
cmp
pop
dec
lods
pop
add
lret
mov
decl
adc
pop
clc
push
nop
popf
into
jo
adc
loop
sub
jmp
add
mov
jg
pop
mov
nop
adc
xor
jmp
gs
add
popa
cmpsl
je
inc
into
aas
mov
outsl
pop
out
push
add
push
cmp
cwtl
arpl
sub
sbb
add
mov
call
add
lock
cmp
push
jl
mov
clc
stos
pop
pop
in
andl
dec
lock
roll
xchg
hlt
inc
inc
lret
jmp
cli
add
cwtl
testb
icebp
jp
add
or
push
pop
push
ljmp
xchg
add
cmp
cmp
push
mov
add
negb
jmp
mov
stc
das
aas
je
add
pop
jne
sbb
inc
add
cwtl
adc
test
adc
pop
sbbb
es
inc
cli
mov
or
ret
call
cmp
aas
and
add
sub
pop
ja
pop
outsb
xchg
test
in
push
idivl
dec
add
loope
add
cmp
or
push
push
loopne
lock
rcrl
add
mov
hlt
jl
add
dec
or
adc
dec
or
dec
inc
nop
inc
push
fcmovne
div
mov
inc
and
mov
add
test
ljmp
push
add
inc
mov
popf
fwait
xor
push
add
pop
mov
dec
incb
mov
scas
test
stc
cmp
push
out
imul
leave
push
cmp
push
push
jae
fs
out
mov
xor
jle
pop
pushl
add
mov
jne
add
arpl
insb
out
add
imul
clc
mov
jge
dec
dec
mov
push
out
cmp
sbb
lods
lea
sarb
pop
stos
movsl
add
pop
xor
decb
adc
jb
aaa
loopne
pop
lds
ret
rolb
xor
lret
dec
mov
inc
sub
jbe
icebp
jg
push
gs
idiv
adc
add
xchg
push
lds
lcall
mov
clc
jge
lcall
movzwl
fsts
mov
xchg
mov
pusha
mov
addb
cltd
leave
push
sbb
jg
adc
sbb
add
xchg
xchg
stos
add
add
or
adc
sbbl
mov
cmp
aaa
cmp
add
add
sbb
sub
lea
or
xchg
cwtl
les
add
push
movsl
in
jmp
test
xor
push
mov
stos
stc
adc
mov
xchg
mov
inc
punpckldq
fcoms
dec
and
cmp
mov
add
jno
add
ds
xor
lea
fisttps
push
add
lcall
add
push
and
and
add
je
xchg
add
imul
and
faddl
shl
popa
enter
inc
cli
sbb
pop
sub
scas
and
or
xchg
adc
jmp
mov
lock
pop
jns
dec
add
xchg
mov
aam
add
repnz
mov
jns
pop
lcall
sub
push
add
jg
cltd
or
sahf
inc
adc
rcrb
cmp
push
adcb
add
pop
pop
std
fiaddl
out
pushf
cli
add
pop
jecxz
clc
xchg
out
lcall
add
inc
lahf
mov
or
and
in
add
ljmp
pop
and
rclb
add
shll
dec
xchg
or
adc
push
sbb
cld
cwtl
jg
mov
fs
xor
daa
add
inc
mov
add
cmp
loop
pop
pop
stos
pushf
cmpsb
push
nop
push
clc
xchg
xchg
add
lcall
sbb
cmp
in
pushf
inc
jb
and
es
mov
inc
jno
shlb
insb
xchg
test
leave
add
jmp
sbb
or
mov
movsb
and
pushf
bound
enter
lock
xchg
subb
jo
dec
jbe
sbb
nop
mov
cmp
daa
add
xchg
aad
mov
xor
pusha
fmull
jle
xchg
pop
cwtl
mov
lds
jmp
add
int3
inc
xor
pop
push
or
add
xor
cmp
aas
int3
cmpsl
inc
sub
jnp
add
mov
in
and
scas
sbb
mov
leave
push
xchg
cmp
cmp
sbb
add
push
ds
and
xchg
mov
inc
push
cmp
xchg
add
pop
das
test
repnz
shl
leave
daa
inc
add
xor
sbb
cmpl
push
pop
negl
lret
enter
fstl
jle
pop
or
popf
push
push
fcomp
add
ret
shlb
and
add
pop
lret
ljmp
pop
push
xchg
dec
dec
push
xchg
and
aas
mov
dec
jbe
add
int
arpl
ds
pop
scas
adc
adcb
add
xchg
hlt
pop
addr16
sti
or
aam
jb
push
dec
adc
dec
mov
ja
fbstp
push
and
enter
push
imul
sub
fists
in
adc
mov
or
xorb
mov
dec
pop
mov
cltd
add
subb
xchg
pop
add
xchg
pop
cmpb
loop
orb
rcrb
aas
adc
add
scas
pop
push
notb
ret
shufps
push
cmp
loope
pop
les
test
xor
cli
adc
inc
push
mov
xchg
mov
lock
mov
mov
lea
sub
xor
enter
fiaddl
adc
sbb
push
pop
add
jb
les
cmc
jns
push
sbb
cld
pop
lods
or
cwtl
add
stc
lods
inc
inc
int3
ftst
add
scas
dec
pop
add
mov
nop
push
add
pop
jle
test
ret
jmp
out
adc
outsb
and
cmp
inc
int3
clc
or
add
dec
or
add
fcoms
inc
cwtl
mov
cmp
mov
xor
xor
incl
jp
or
pop
xor
jmp
aam
mov
xor
outsb
test
pop
lahf
push
dec
cmp
dec
xor
gs
ficomps
add
daa
push
pop
pushf
pop
sti
pop
ja
add
les
popa
add
rolb
add
xchg
xor
push
push
in
cmp
adc
inc
pop
pop
add
xchg
orl
push
push
in
call
pop
aad
aam
add
mov
ljmp
inc
dec
test
inc
push
and
movsb
add
mov
jns
out
sub
rcrl
pop
cmp
mov
add
mov
in
loop
add
sbb
push
popa
dec
push
push
add
mulb
xorb
dec
xor
adc
ljmp
sbb
or
add
ds
loope
fwait
mov
in
out
cmp
mov
inc
dec
sub
sti
aam
xlat
add
and
add
mov
add
sbb
repnz
mov
push
sbb
cmp
or
outsb
sbb
divl
or
nop
and
lods
push
cmp
ds
call
cmp
jno
add
sbb
xor
dec
adc
loop
iret
mov
in
jge
lods
cmp
sbb
or
or
add
mov
add
pusha
cltd
or
mov
insb
add
pop
xor
nop
xchg
add
add
ds
sub
sti
pop
aam
rorb
lret
add
shl
and
inc
cmp
sub
cmp
movzwl
fs
mov
jae
add
cli
rclb
mov
pop
add
leave
mov
popa
mov
add
mov
mov
ss
sbb
es
or
shl
aam
sarb
inc
cmovo
scas
add
call
jo
ljmp
jmp
sub
pop
inc
das
enter
add
mov
push
inc
xchg
and
mov
prefetcht0
mov
mov
lods
or
sahf
push
xchg
mov
inc
push
inc
and
pop
add
jno
rcr
push
cmp
mov
repz
pop
pushf
stc
sub
sub
clc
cwtl
inc
add
xchg
push
mov
dec
jb
add
push
mov
sti
enter
add
imul
mov
sbb
add
addl
add
mov
rolb
movsl
inc
push
dec
or
pop
add
push
sub
add
inc
sbb
aaa
inc
cmpsl
es
mov
push
and
ljmp
push
imul
rolb
inc
in
mov
gs
js
add
cld
ljmp
in
mov
add
xlat
push
and
fldl
and
jmp
rcll
call
ret
nop
orl
xor
andb
xchg
and
sbb
mov
or
hlt
sarb
add
dec
lahf
mov
popf
xor
xlat
add
adc
add
incb
and
sbb
aad
in
mov
nop
jle
mov
hlt
cmpsl
sub
xor
inc
mov
inc
add
jge
fs
and
sbb
add
cli
orl
loope
jmp
mov
adc
dec
pop
or
adc
inc
jo
sbb
add
ficoms
cwtl
nop
push
sbb
jnp
cli
or
sbb
sub
pushf
mov
push
add
lock
cmc
add
add
mov
mov
xor
or
adc
push
mov
movb
in
movsl
push
xchg
aad
sbb
xchg
inc
inc
test
ds
xor
aaa
pop
jbe
sbb
ljmp
mov
cld
inc
cmp
pop
dec
fistps
popa
cwtl
test
fldl
fnstenv
lcall
or
sbb
jp
mov
lcall
pop
add
inc
or
daa
add
mov
jbe
orb
enter
push
sub
in
add
pop
push
cmp
adc
inc
movsl
cwtl
mov
cmp
ss
sbb
rorb
xor
push
and
and
stos
add
pop
or
mov
cmp
sbb
or
je
loopne
ljmp
add
jne
cmp
out
mov
pop
test
lds
mov
and
addb
mov
push
pop
cmp
mov
and
sbb
sub
add
cmpl
adc
into
orb
xor
shlb
add
adc
stos
add
adc
ljmp
pop
jmp
xor
xchg
mov
mov
mov
dec
cli
add
nop
jo
inc
into
je
aas
pop
adc
mov
add
push
dec
push
add
mov
call
and
lret
repnz
sub
push
loop
add
or
jmp
add
mov
insb
add
lea
leave
sbb
hlt
pop
sbb
or
xchg
add
inc
cltd
dec
mov
jg
jle
add
not
cmc
dec
cmp
xchg
dec
mov
test
je
jbe
jnp
add
mov
decl
pop
test
sbb
inc
pop
imul
imull
add
js
push
sbb
push
add
das
loopne
mov
dec
test
inc
jmp
mov
ds
sub
sti
mov
jmp
cwtl
fcomip
add
fldcw
mov
xlat
push
pop
mov
adc
cmpsb
add
lret
cmp
cltd
addb
jo
add
add
test
test
sub
push
jo
push
aas
orl
mov
out
pop
jb
or
sbb
jle
or
das
push
lea
cmpsl
loopne
sti
add
or
xchg
mov
sub
and
clc
add
cld
int3
popa
cwtl
pop
or
mov
pusha
in
jne
or
sbb
shl
cmp
add
in
cmovl
lock
sub
test
pop
ret
rcrb
add
add
pop
js
or
daa
jl
cld
sub
push
mov
dec
push
orb
adc
or
cmp
add
sub
iret
repnz
int3
ret
call
add
inc
push
add
pop
or
fcoms
divb
mov
pop
inc
inc
xor
or
test
js
add
ljmp
bndldx
fs
mov
dec
or
xor
divl
add
inc
sub
dec
and
xor
push
inc
jp
add
mov
nop
movsl
add
adc
sahf
sub
addr16
add
jbe
xor
add
pop
mov
pushf
cmp
lds
xchg
lock
jmp
adc
inc
jb
pop
movl
adc
push
inc
enter
cli
lret
or
sub
jp
movsl
adc
jno
loopne
shlb
cmpb
enter
xor
xor
jne
mov
adc
push
and
cmp
sbb
filds
shlb
jb
mov
push
xchg
jns
bound
or
xchg
mov
pop
scas
cmp
xchg
repnz
dec
lea
add
addr16
notb
jp
add
pop
decb
loope
lods
add
jo
mov
xchg
lret
int
xchg
adc
xor
pop
enter
hlt
cmp
dec
addl
sub
dec
xor
lock
shl
add
xchg
daa
imull
orb
fwait
sub
xchg
clc
sub
cmp
adc
test
jns
sub
cltd
shrl
movsb
inc
adc
ljmp
cld
lock
rol
adc
outsl
inc
cli
ja
clc
fstl
sub
pop
testl
lret
shll
xchg
cmp
in
scas
enter
lods
mov
xchg
int3
cmp
add
in
ret
add
flds
adc
add
lods
dec
add
xorl
jle
popl
or
mov
shrl
pop
mov
in
cld
push
xchg
jmp
call
push
sahf
adc
fadds
cmpsl
test
imul
jb
popa
jle,pn
add
and
stos
add
sub
cld
or
pop
dec
repz
mov
cltd
jge
add
roll
add
and
xchg
adc
xchg
add
push
xor
and
pop
add
jns
add
ja
add
dec
cli
aam
rorb
test
add
scas
xor
jns
leave
add
ret
daa
inc
mov
sbb
movsb
nop
sub
sbb
call
neg
or
jns
or
cld
into
push
add
stos
ds
xchg
les
xor
out
enter
mov
jne
jns
data16
mov
popf
cmp
shll
scas
and
push
mov
loopne
popl
pop
push
push
and
mov
pop
xchg
out
cmp
popa
fadds
rolb
leave
xor
adc
cmp
shl
imull
or
inc
xchg
push
inc
imulb
int
mov
les
xor
push
add
dec
mov
rolb
add
mov
jmp
adc
xchg
hlt
cmp
mov
mov
add
clc
adc
in
lret
dec
inc
sbb
repnz
and
xlat
mov
dec
lret
jno
mov
clc
mov
jbe
rorb
sbb
sub
dec
call
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
inc
add
data16
in
stos
add
sub
fiadds
sub
add
cmp
lods
jl
pop
xchg
dec
xchg
sahf
movsb
push
pop
xchg
movups
mov
inc
add
adc
mov
jae
add
je
add
push
and
jmp
aas
mov
lea
adc
cmpsb
mov
sbb
movsl
sub
dec
hlt
xor
popf
rorb
lea
mov
call
push
hlt
mov
mov
add
lahf
arpl
cmp
jne
in
dec
ret
lods
add
insb
movsl
ds
push
pop
cld
sahf
xchg
ret
jmp
mov
shrb
popf
jecxz
pop
add
stos
cmpsb
pusha
cmp
sub
add
xchg
jge
pop
sbb
add
xchg
ret
pop
mov
sub
or
xlat
inc
mov
es
cwtl
add
pop
and
jecxz
add
or
filds
cmp
dec
xchg
popf
out
bound
pusha
push
push
arpl
cmp
sbb
mov
push
mov
roll
pop
popa
movsl
mov
mov
movsb
or
fs
xchg
pop
mov
nop
push
push
cld
xor
push
inc
add
aad
insb
aas
addl
sub
jl
add
sub
add
jge
add
or
cmpsl
sbb
inc
and
add
or
ret
pop
dec
clc
in
inc
pop
addr16
andl
faddp
xrelease
add
hlt
push
daa
pop
nop
add
sub
fdivs
in
add
insb
mov
test
xor
or
jne
and
inc
nop
pop
dec
add
aas
lods
rolb
incl
shr
adc
push
pop
adc
inc
test
add
cmp
or
mov
subb
mov
add
out
lret
dec
cli
add
ret
jb
enter
add
popa
mov
pop
and
or
ret
jne
jo
fdivl
lcall
lock
ss
es
push
add
jmp
dec
add
mov
add
and
cmp
push
scas
ret
inc
or
in
lock
insb
xchg
bound
aad
ret
or
mov
dec
rorb
pop
or
pop
or
inc
cld
dec
pop
add
add
add
add
mov
sub
add
fisttpll
add
pop
push
adcb
inc
rclb
add
jae
shll
stc
add
sub
add
push
jle
xor
mov
xchg
add
jae
sti
dec
xor
xor
dec
pop
das
pop
jmp
push
sbbb
aaa
add
fwait
sbb
xchg
data16
add
push
add
je
mov
inc
pop
sub
adc
lock
push
jle
pop
cmp
mov
or
rcrb
js
sub
or
lea
aam
jp
add
nop
out
add
imul
xor
pop
jns
or
lods
nop
or
cltd
jecxz
pop
inc
push
repnz
adc
sbb
jmp
or
sbb
inc
ret
mov
xchg
hlt
mov
adc
jb
popf
add
pop
cvtps2pi
mov
xchg
repz
fsubs
and
ret
dec
mov
mov
push
pop
in
rorb
push
mov
sub
xchg
enter
jmp
dec
lock
mov
jge
imull
orl
add
pop
and
inc
ret
std
arpl
ja
push
testb
cmp
mov
sahf
mov
sub
ret
xor
add
push
xor
lock
pop
and
cmp
jnp
sbb
cmc
nop
pushf
cmp
push
cmp
je
les
aas
add
add
hlt
cmpsb
and
lods
sbbb
lret
mov
push
loop
mov
loope
add
mov
jmp
cmp
out
jge
jl
add
jecxz
enter
or
or
mov
adc
aaa
jg
xchg
add
jle
or
outsl
cltd
or
push
adc
add
xor
xchg
jle
scas
mov
adc
dec
cli
add
aaa
dec
fsub
jo
ficoms
jns
insb
xchg
cs
adc
cmp
sbbl
jo
adc
sbb
pop
cmp
sbb
ret
mov
jmp
rorb
repnz
xchg
jno
xchg
and
sub
or
movsb
scas
jp
push
or
ljmp
push
add
andl
and
movsl
call
pop
insb
inc
or
repnz
add
and
icebp
pop
mov
rorl
cmp
or
jns
aad
orb
pushf
jb
cld
aad
andb
lea
jle
mov
and
sub
in
mov
xor
dec
push
mov
push
lahf
ljmp
mov
add
rcrl
cmp
lahf
or
mov
nop
add
jo
fbstp
inc
jnp
icebp
shr
imul
or
cmp
sbb
fwait
pop
movsb
pushf
dec
pop
sub
cmp
push
icebp
mov
repnz
fwait
mov
or
add
repz
add
adc
inc
fiadds
das
es
scas
add
adc
sbb
pop
and
fistl
dec
push
fdivrl
or
jne
imulb
sub
fidivrl
lock
ljmp
leave
inc
push
push
add
jmp
add
inc
dec
cmp
push
sub
pop
mov
xchg
decb
add
sub
add
cmpsl
test
inc
xchg
add
out
dec
sub
adc
mov
adc
dec
add
mov
mov
mov
add
outsb
sbb
cli
lods
jg
loopne
push
jno
inc
shll
or
ret
or
xor
movb
fs
mov
pop
loop
add
add
jb
cwtl
adc
pavgb
rorb
nop
mov
xlat
ret
je
sbb
mov
mov
adc
push
cmp
lods
push
lahf
inc
jno
cld
or
shr
idivb
sarb
pop
jne
add
xchg
mov
shrl
inc
sbb
dec
and
add
aaa
dec
scas
adc
movl
sbb
imul
adc
xchg
out
add
push
push
adc
adc
add
movsb
or
cmp
out
cmp
sub
adc
lea
dec
movsb
add
xchg
test
scas
sbb
cmp
shrb
jno
add
adc
add
popf
xchg
loop
rcll
dec
and
call
pop
pop
andb
lds
cmp
out
sbb
dec
and
jae
mov
adc
mov
mov
cs
fldl2e
faddl
fs
inc
fimull
add
mov
inc
add
mov
and
in
hlt
add
jns
and
dec
aas
xchg
dec
and
push
inc
arpl
jnp
fsub
addl
jmp
cmova
add
iret
jmp
daa
add
inc
push
add
mov
and
pop
or
inc
mov
and
adc
mov
sbb
cmp
inc
xor
push
add
jg
or
repz
add
cmpsb
cmp
insl
xor
cmp
in
jp
fdivs
xchg
cmpb
in
xor
sub
push
test
mov
or
pop
xchg
add
add
push
push
dec
add
jmp
pop
mov
push
mov
fdivrl
stc
cli
xchg
sbb
push
lea
test
push
add
mov
test
inc
jb
adc
into
add
lea
sub
push
lds
add
cmp
mov
jg
jbe
addl
fs
and
jno
cmp
nop
movb
sbb
or
in
pop
enter
push
add
xchg
mov
and
enter
ljmp
sub
add
or
jbe
lods
rolb
repz
cltd
add
mov
movsl
cs
push
sub
pop
or
pop
or
les
push
dec
sti
repnz
in
adc
stos
pusha
push
push
jae
push
xchg
cmp
in
test
adc
into
cmpsb
pop
xchg
les
pop
xor
test
test
push
xchg
cmpsb
mov
dec
push
push
ja
lret
rcl
add
dec
mov
cmp
sahf
gs
iret
jmp
je
js
xor
push
or
add
jne
pop
test
fists
imul
jge
or
dec
push
add
cmp
pop
dec
xchg
repz
push
sub
add
inc
clc
inc
mov
rol
insb
jb
push
push
out
push
cmp
andb
int
clc
mov
les
xor
mov
mov
push
add
lret
push
push
or
pushf
je
add
adc
out
add
add
add
stos
imul
and
aad
and
adc
cmpsb
rclb
in
jecxz
cwtl
cli
je
add
push
jg
in
sub
rorl
pop
push
int3
fsubrs
push
dec
add
es
and
jmp
xor
imul
shr
pop
and
sbb
mov
shlb
or
and
lock
adc
shll
arpl
jne
shll
fidivs
imul
mov
hlt
mov
repnz
adc
mov
fildll
mov
rolb
std
jecxz
xchg
lods
into
aam
push
fs
gs
inc
pop
pusha
scas
cmp
lock
pop
andb
add
insb
mov
lahf
jmp
add
xchg
mov
push
out
pop
lods
mov
sub
xchg
fwait
mov
bswap
adc
rcll
add
pop
add
jno
pop
popl
cmp
data16
pusha
ds
arpl
loopne
dec
jmp
fidivl
pop
mov
dec
call
sbb
iret
in
jne
add
das
sbb
incl
jmp
lods
cmpsl
jl
inc
xchg
nop
pop
cmp
dec
xchg
cmc
inc
int
sarb
add
pop
faddp
mov
popf
jmp
iret
loopne
dec
xor
lcall
orl
out
fs
imul
mov
add
and
scas
adc
cs
cmpsl
jmp
pop
add
mov
and
pop
cltd
add
mov
xchg
lret
and
push
sbb
jne
push
popa
insl
sti
xor
and
push
cmp
xchg
add
outsl
frstor
jge
fchs
mov
inc
hlt
mov
test
clc
or
add
call
add
sub
stc
add
and
hlt
or
or
rorl
and
rolb
add
dec
xor
xchg
cli
sahf
add
mov
adc
add
cmp
lret
sarb
lret
ret
and
ret
mov
sub
xchg
dec
or
push
add
fxch
shrb
hlt
movsl
xor
jp
clc
jmp
add
push
test
rcrl
mov
cmp
jne
movsl
add
and
cmp
xchg
es
ljmp
adc
data16
mov
or
punpckhbw
repz
jae
mov
lock
pop
adc
lahf
int3
divb
xchg
rorb
pop
push
or
push
in
and
add
movl
jmp
notl
mov
add
test
loopne
cmp
sbb
cmp
jmp
push
xchg
shl
pop
sbb
add
mov
add
add
scas
add
jl
xchg
lds
leave
add
mov
inc
idivl
sbb
int3
fistpll
js
unpcklps
test
add
dec
dec
cld
aam
in
dec
add
adc
pop
sbb
and
aam
push
dec
or
aad
xchg
repnz
jo
vmovsd
mov
outsb
cs
xchg
insb
add
lock
sahf
negl
imul
sti
jne
lds
lock
add
mov
js
cmp
pop
adc
mov
add
push
aam
icebp
rorl
repz
mov
push
sub
pusha
lret
mov
pop
fadds
xor
mov
xlat
lcall
sbb
xchg
add
mov
add
in
dec
or
mov
into
mov
push
xchg
in
and
mov
add
sbb
add
sub
sarl
negb
xor
cmp
rsqrtps
mov
pusha
and
repz
lret
sub
test
mov
add
mov
notl
push
push
daa
push
xor
daa
inc
inc
loopne
pop
in
call
jbe
decb
add
add
imul
cmp
sub
cmpsl
sbb
cwtl
push
push
cmp
adcl
cmpsb
aas
adc
add
popf
or
dec
ds
lock
or
fsubrs
dec
out
test
loop
xor
lods
add
js
mov
add
and
jbe
jb
and
loopne
lret
mov
cmpsl
add
mov
xor
add
lods
dec
add
mov
ficoml
mov
cmpsl
fidivs
xlat
jge
mov
mov
imul
mov
pop
in
in
cmpb
imull
movsl
mov
add
lds
ja
add
pop
fldt
or
cmpsb
add
mov
and
je
mov
jno
insb
lcall
loope
add
xor
add
add
pop
push
mov
add
fnsave
push
or
pop
in
and
fsubr
add
jmp
add
movsl
cli
and
jl
or
scas
test
out
jbe
add
adc
test
negb
bound
pop
icebp
adc
xchg
test
push
ds
and
imull
mov
add
test
adc
rcr
idivl
add
negb
test
or
ret
add
pop
add
mov
add
pop
or
lock
jl
add
insl
stos
jg
adc
data16
rorb
aam
mov
cmp
mov
push
hlt
add
and
inc
loopne
push
inc
cmp
test
adc
cmp
add
cmp
add
call
add
add
inc
pop
roll
mov
fimull
add
jbe
xchg
orb
aad
jns
add
insb
add
adc
or
xchg
add
add
mov
loop
iret
adc
add
fisubs
fistps
insl
add
repnz
inc
lods
dec
stc
xchg
add
rorb
pop
int3
cwtl
not
ss
ds
sub
dec
test
mov
stos
push
dec
push
and
adc
sub
test
stc
pop
adc
or
xchg
jmp
mov
xor
jne
mov
xor
mov
xor
loop
inc
inc
sub
jae
rol
repz
dec
mov
leave
pop
xlat
lock
add
fiadds
in
test
mov
pop
scas
lds
cmpb
cmpsb
add
sub
bound
popf
iret
xor
sbb
sbb
push
inc
aas
dec
push
pop
dec
mov
call
add
xor
inc
and
push
dec
jg
jmp
push
aam
lods
dec
and
mov
adc
daa
mov
push
inc
setbe
stc
rcrb
lods
or
cs
push
adc
add
fstl
or
mov
enter
je
add
add
gs
ret
add
dec
jno
das
push
and
pop
dec
pop
inc
cmpsl
mov
inc
push
cmpl
mov
bound
movsb
dec
adc
sti
sub
movsl
jl
sbb
push
dec
sti
rolb
xchg
cmpsb
movsl
pop
leave
hlt
mov
out
jl
pop
add
dec
mov
cmc
jbe
add
inc
adc
loope
add
pop
sub
mov
test
xor
xchg
sub
cmp
inc
dec
pop
mov
orl
pop
adc
rolb
call
aas
push
ja
add
sbb
lds
ljmp
push
xchg
mov
fcomps
in
and
xor
pop
jo
stc
push
aas
sbb
or
pop
push
adc
add
and
cmpsl
push
add
jns
pop
add
loope
lret
out
or
add
sbb
sub
add
jg
mov
jg
jg
jg
jg
jg
pop
out
mov
cmpsl
and
ljmp
mov
adc
rcl
inc
scas
divb
jo
outsl
test
pop
mov
xchg
addr16
mov
sbb
inc
sbb
lock
les
lahf
lock
adc
lods
or
lea
or
cmp
out
adc
jg
xlat
loopne
repz
shrl
das
mov
adc
add
xor
mov
dec
test
pop
dec
out
call
enter
dec
mov
lahf
xchg
loope
rcll
test
lds
fcmovnb
jno
jbe
xor
add
loop
xchg
add
int
and
add
push
loope
jmp
jb
add
aaa
sbb
stos
push
add
mov
add
addr16
test
cmp
dec
mov
xchg
pop
lock
push
mov
and
test
aaa
mov
in
dec
adc
inc
ror
lea
clc
cmp
push
add
inc
scas
hlt
mov
call
push
push
dec
jno
add
mov
popa
mov
iret
xchg
sbb
pop
orb
pusha
cld
jmp
ljmp
add
sub
jo
mov
movsl
inc
add
push
es
rolb
push
xchg
sbb
dec
sub
sbb
cs
xchg
pop
xchg
add
stos
lds
and
or
mov
or
out
test
add
push
jne
pop
notl
jle
hlt
dec
out
insb
push
add
cmpl
jno
ret
jmp
out
fildl
repz
in
cld
lret
stos
adc
scas
sbb
adc
jae
dec
loopne
inc
add
dec
and
daa
add
xchg
mov
dec
add
and
pop
mov
mov
jle
add
cwtl
imul
add
lock
adc
fs
or
dec
and
shrl
pop
jecxz
int3
add
out
movsb
or
and
inc
hlt
testl
cltd
push
adc
mov
cmp
cmp
ret
inc
add
insb
add
jnp
xor
clc
jmp
xor
stos
cmp
arpl
clc
add
stc
mov
jmp
pop
jae
cmp
sbb
lret
mov
fs
xor
or
xchg
dec
add
nop
aas
fcmovnb
xor
sbb
jle
add
adc
or
mov
int
loopne
pop
add
loope
je
test
and
nop
paddusw
mov
arpl
dec
imul
push
cmp
dec
lds
inc
xor
add
imul
jle
dec
cld
roll
and
pavgw
sub
lret
inc
jmp
cld
sbb
and
or
jl
add
inc
mov
push
lods
dec
add
sbbb
jo
pop
fs
push
adc
gs
popa
add
fnsave
pop
stc
mov
cmp
cmp
sub
sbb
sub
bound
mov
add
aas
pusha
jle
loopne
xchg
or
movl
fldl
ja
add
lock
jo
js
add
add
data16
clc
dec
mov
jnp
mov
stos
add
out
xchg
inc
mov
add
jbe
push
mov
add
incl
call
pushf
dec
xchg
ret
push
add
push
xor
add
xor
bound
cmp
add
inc
cmp
add
pop
pop
lods
mov
add
test
imulb
adc
adc
pop
push
and
mov
inc
flds
dec
adc
push
or
inc
or
cs
call
mov
les
jne
aad
mov
add
mov
sti
add
enter
add
or
jle
mov
push
add
fnstenv
mov
mov
adc
add
xor
or
sbb
xchg
jmp
test
dec
loopne
add
rorl
and
and
sub
or
xchg
add
out
hlt
add
or
sub
xorl
les
fcomps
inc
or
push
in
movsl
cmp
sbb
jns
or
int3
mov
pushf
pop
push
push
push
in
sbb
add
leave
mov
addl
dec
jne
push
loop
sbb
mov
xor
fiaddl
dec
das
clc
push
dec
push
push
cmp
jecxz
push
mov
bound
loopne
in
adc
add
jg
outsb
repz
out
mov
jo
ffree
clc
jp
add
push
pusha
adc
jne
stos
cmp
jmp
mov
dec
sbb
mov
sub
inc
xlat
xor
cmpb
jo
jbe
iret
mov
ss
daa
add
je
dec
mov
inc
adc
cmp
fdivrl
and
cmc
dec
mov
add
xor
jnp
jne
mov
add
jae
in
add
push
cmp
lea
mov
push
cmp
pop
mov
add
loop
push
inc
or
adc
dec
mov
mov
add
cltd
lret
inc
ret
stos
orl
cmc
sbb
adc
sub
cmpb
jg
add
dec
add
test
loopne
cmc
add
loop
test
pop
pop
add
add
insb
add
ljmp
sbb
and
in
push
cmp
into
sub
loopne
lock
dec
add
and
inc
sbb
test
cmp
and
mov
mov
pop
repnz
shr
jp
inc
sub
daa
add
adc
scas
fidivrs
add
or
int
mov
and
fcomip
mov
clc
out
xchg
add
xlat
in
adc
ss
and
shrb
dec
std
xchg
add
adc
fildl
aas
pop
clc
add
or
add
jno
add
xchg
mov
sub
seto
call
xor
add
jp
add
push
nop
sbb
xchg
pusha
adc
mov
mov
mov
fucomi
or
jp
push
divl
push
mov
cld
sbb
jg
add
iret
shll
xorl
pop
cltd
push
out
insb
out
scas
lock
add
add
shrd
clc
iret
cmp
mov
xor
adc
loope
out
call
loop
pushf
ret
push
clc
mov
ret
loope
sbb
push
adc
lods
dec
add
push
test
inc
jecxz
fwait
add
mov
or
jge
jge
add
jb
jecxz
test
jbe
add
test
push
xchg
jmp
ret
idivl
jg
dec
nop
mov
adc
outsb
clc
out
inc
add
jmp
pmuludq
push
or
cmp
jecxz
in
fcoml
or
dec
pop
je
test
mov
sbb
push
testl
xor
insb
add
adc
sbb
test
ret
in
daa
jecxz
jo
xchg
jno
xor
adc
test
sub
out
cli
mov
pop
into
push
dec
imul
ss
jo
testl
mov
aad
rcrl
sbb
loop
sbb
cmp
icebp
adc
scas
lock
ds
push
xor
in
stos
jmp
fadd
and
push
pop
mov
and
jle
xchg
sbb
loop
fstl
fidivrs
clc
push
mov
mov
push
or
icebp
sahf
sbb
sbb
jg
or
nop
fidivrs
xchg
sbb
pop
ljmp
cmp
mov
stc
daa
cld
cwtl
mov
fwait
cwtl
shrb
ljmp
test
in
das
xchg
jmp
push
outsl
cmp
test
std
inc
fdivr
fwait
xor
les
sti
adc
jmp
fidivrl
inc
sbb
pop
imul
sub
iret
ss
shlb
adc
add
pop
fadds
mov
jge
dec
sbb
inc
rcl
adc
rolb
ret
lods
fadd
rcl
imul
sbbb
sbb
lods
out
fstpl
and
in
andb
in
mov
arpl
or
mov
mov
mov
mov
mov
xchg
cli
dec
sub
inc
push
mov
cmpsb
hlt
movsb
jbe
out
jmp
cmpl
lds
jg
pop
in
js
fdiv
mov
adc
hlt
test
jecxz
and
insl
and
loope
out
xor
mov
adc
cmpsl
sub
jle
cwtl
dec
push
inc
xchg
xchg
repnz
sbb
lcall
mov
push
shr
cmp
xchg
push
xchg
jmp
pop
in
jmp
mov
repz
cmp
mov
jo
sti
jmp
adc
in
jg
cli
cwtl
sub
sbb
mov
nop
cmpsl
add
shll
inc
inc
sbb
in
add
sub
jge
inc
push
add
test
mov
sbb
inc
add
jmp
dec
or
xlat
icebp
popf
and
dec
inc
add
bound
add
in
or
ja
notb
mov
call
add
adc
inc
mov
add
fxch
dec
inc
xchg
and
fiaddl
test
pop
pop
pop
push
lods
adc
or
or
je
xchg
pop
adc
pusha
xor
push
inc
daa
push
jno
dec
int3
jbe
mov
popf
sti
icebp
xor
mov
cld
sub
add
mov
js
xchg
mov
sub
ret
or
jae
add
std
cmp
fistps
cmpsl
add
or
test
out
xor
mov
jo
xchg
adc
test
inc
les
cli
xlat
add
mov
inc
add
push
mov
hlt
adc
std
pop
xor
lahf
adc
jl
out
cli
shrb
add
or
repnz
jmp
dec
dec
xchg
dec
cmp
je
psraw
in
stc
mov
add
js
add
fistps
lock
cs
icebp
sbb
mov
cwtl
arpl
or
fcoms
adc
stos
and
lock
or
test
push
lret
pop
pop
and
push
fimull
sahf
je
popa
mov
push
test
ret
add
adc
syscall
mov
sbb
or
sbb
xbegin
sub
sbb
xchg
mov
fs
adc
lret
xchg
or
adc
sbb
iret
fcmovne
mov
hlt
and
pop
dec
inc
mov
dec
push
or
pusha
adc
ret
rcrb
cltd
or
or
dec
in
push
sub
or
es
or
inc
adc
popl
sub
sub
cmpsl
jl
clc
mov
daa
push
fs
sub
mov
pop
mov
add
xchg
out
adc
mov
lea
inc
sahf
iret
xor
lret
adc
and
loopne
pop
xchg
rcrb
sbb
movlps
and
sub
lahf
filds
fildll
jbe
fcomps
addb
cmpsl
js
popl
adc
loop
cmp
sti
cmp
testl
in
and
push
or
das
inc
mov
mov
seta
lahf
or
pusha
repnz
mov
imull
fistpll
add
and
bound
cmp
add
sub
dec
add
lahf
adc
and
in
sbb
mov
in
sub
adcl
push
dec
clc
arpl
and
dec
dec
mov
je
sub
shrb
mov
push
dec
or
es
xchg
ret
adc
dec
sti
js
test
stos
rolb
movsb
les
push
push
xorb
test
pop
cmc
sub
mov
hlt
pop
push
xchg
sub
pop
dec
and
sbb
iret
push
in
push
xchg
dec
out
sahf
and
xchg
push
clc
les
movsb
sbb
sub
xchg
sub
and
rcrl
cmp
cmp
dec
ljmp
shr
pop
xor
xor
pop
cmc
ret
aaa
xor
shr
push
pop
popl
xchg
mov
bound
add
adc
jae
stos
push
arpl
or
adc
mov
loop
in
testl
or
fildll
aas
adc
sbb
adc
inc
loope
daa
popf
adc
movsl
mov
daa
sti
adc
cmpsb
lock
imul
movsb
lret
push
outsb
pushf
jo
mov
popa
insl
sbb
pusha
sbb
nop
in
lock
addb
jb
gs
or
es
dec
pop
cmp
fs
jp
xchg
mov
stc
adc
daa
dec
adc
or
mov
aam
mov
add
xchg
add
outsl
adc
addb
xlat
iret
add
push
shrb
cmp
dec
sub
gs
push
nop
leave
test
and
adc
cmp
repz
adc
int3
sub
pop
pop
js
mulb
into
lods
aam
adc
push
xor
mov
inc
xor
std
es
jle
add
mov
adc
adcl
inc
dec
sub
or
pop
adc
lods
xor
push
inc
mov
mov
lock
icebp
sub
mov
lret
dec
mov
outsl
popf
cmp
in
in
enter
dec
sub
mov
fiadds
add
sub
and
sbb
mov
inc
hlt
xchg
add
push
pop
add
push
pop
jmp
or
les
iret
dec
or
in
repnz
cmp
add
icebp
and
jl
cwtl
mov
add
rclb
mov
dec
or
and
jecxz
and
mov
cmp
pop
mov
xor
jl
fiadds
cmp
lods
test
test
inc
jmp
es
inc
mov
mov
add
xorl
add
gs
jge
mov
mov
jl
nop
mov
add
das
xchg
push
dec
or
pop
add
add
jmp
cmp
lcall
inc
add
fwait
jne
clc
inc
cmpsb
clc
stc
xor
mov
inc
fbstp
aaa
pop
xchg
inc
add
adc
push
ljmp
fsubrs
sahf
popa
inc
xchg
sbbl
cmp
fcomp
and
rcrb
mov
cwtl
js
add
xchg
psubw
cwtl
stos
cmp
pop
add
cmp
xor
es
stos
mov
pop
inc
js
xor
push
adc
je
add
dec
divb
scas
lcall
popa
into
out
mov
xchg
leave
shl
push
leave
pushf
jg
sub
cmpsb
sarl
inc
pop
sbb
mov
mov
xchg
inc
sbb
push
out
add
sub
add
sarb
loop
cmp
pop
add
cmp
dec
mov
and
and
add
xor
fs
or
dec
dec
or
pop
popf
and
xchg
jno
add
mov
and
or
sub
pop
and
adc
xchg
enter
jne
xchg
inc
xchg
test
mov
dec
jg
jg
add
and
mov
out
cmp
inc
pop
add
mov
in
inc
adc
add
inc
mov
imul
addr16
pushf
sti
add
mov
add
sbb
inc
xchg
and
mov
add
xor
jp
cmp
inc
shl
pop
addr16
add
push
xor
inc
and
or
adc
adc
movsb
imul
sbb
les
jle
sbb
adc
sub
mov
mov
xchg
pop
pop
jo
into
subl
xor
or
jbe
dec
movsb
stos
pusha
pop
lock
pop
js
xchg
aad
lea
xchg
dec
pop
mov
jmp
cli
filds
mov
adc
ja
push
addr16
inc
stos
add
aad
out
xor
loope
push
jge
ret
jo
or
fcoms
std
add
adc
mov
fwait
add
or
in
sbb
cmp
sbb
sub
nop
bound
dec
inc
pop
mov
andb
loopne
inc
rorl
inc
std
cmp
clc
and
jp
ret
sub
stos
ds
pop
add
iret
shl
loope
jp
and
mov
jge
xchg
bts
mov
xchg
adc
pop
sbb
and
ret
loopne
sbb
jo
out
sti
push
pop
lret
xchg
popa
lock
and
add
icebp
xor
lock
add
loopne
add
daa
sbb
jbe
adc
aas
jno
jo
inc
add
call
fucomip
cmpb
popf
loopne
cmc
pop
cmp
shlb
mov
add
divb
imul
inc
hlt
lods
dec
push
arpl
loopne
pop
and
dec
add
adc
jb
or
and
addr16
stos
or
lock
adc
sub
lods
adc
lahf
mov
cld
push
push
add
aas
inc
inc
into
sbb
push
add
mov
add
stos
add
jo
sbb
inc
lret
jmp
repz
jecxz
js
inc
out
test
inc
push
push
jecxz
or
mov
out
movl
imul
or
arpl
add
add
mov
jp
inc
pop
xchg
lret
xor
fs
xor
adc
push
repnz
outsb
pop
add
mov
stos
sbb
cld
xadd
lret
popa
pushf
outsl
mov
fiaddl
clc
mov
cmpsb
cmp
or
dec
add
push
cmp
mov
add
aam
add
sbb
jge
int3
mov
movsl
adc
xor
or
xor
xor
fldcw
pusha
ret
add
sbb
xor
pop
sub
add
popa
outsb
daa
jns
add
insb
outsl
shll
mov
cmp
rcrb
push
sti
es
pop
pop
adc
add
mov
lea
pop
mov
mov
add
aad
push
cwtl
pop
add
ljmp
or
mov
idivb
mov
test
rcrl
das
scas
push
adc
jl
clc
sub
movsb
push
sub
sbb
pusha
mov
shl
push
ret
add
and
sbb
xor
cmpsb
dec
inc
sbb
inc
cmpl
enter
test
xor
inc
and
loope
js
cmpl
loopne
and
jge
fldcw
dec
pop
lret
and
sbb
test
xor
inc
add
and
std
jae
js
cmp
mov
cmp
inc
loopne
out
xor
add
jecxz
mov
push
shll
xorl
add
inc
inc
push
ret
adc
xor
xchg
or
frstor
loopne
movsb
push
mov
mov
outsl
in
add
dec
nop
sbb
movsl
and
jne
fidivrs
lea
push
add
jbe
push
xor
cmp
xor
add
lock
cmovl
push
aas
cs
movb
test
dec
mov
or
add
or
pop
in
nop
movl
sarb
scas
rolb
subl
out
add
cmpl
add
xchg
or
cmp
orl
daa
inc
inc
cmpb
mov
ds
mov
nop
inc
push
cmp
push
popa
xchg
adc
add
cmp
call
cmp
je
lea
and
xor
jnp
mov
les
add
add
sub
adc
mov
mov
add
lods
call
js
lahf
jle
repz
add
xlat
add
mov
enter
pushf
std
inc
xorb
sarl
flds
jmp
pop
mov
add
pinsrw
enter
int3
add
ror
push
mov
cmp
sub
daa
sti
jg
inc
std
adc
mov
push
stc
add
mov
shrb
cmp
xor
xchg
jo
pop
je
add
test
loopne
add
pop
daa
dec
aaa
pop
pop
cmp
add
push
pop
xorl
clc
sub
cmpb
rorb
inc
dec
imul
mov
fsub
push
push
add
fsubrs
cwtl
add
sbb
shlb
xchg
psubw
cmp
cmpb
pop
or
add
adc
int3
xchg
add
lods
pop
pop
adc
inc
in
fwait
inc
cmpb
ds
js
faddl
mov
xchg
sti
add
or
dec
ljmp
sbb
cmp
add
sarb
mov
cli
push
bound
adc
punpcklbw
sbb
mov
mov
nop
nop
hlt
jmp
lods
dec
or
inc
lds
add
cmp
cmp
xlat
jo
push
int3
dec
push
inc
lahf
push
mov
shll
xor
fidivrl
or
lock
dec
inc
inc
mov
neg
in
loopne
add
push
mov
int
insl
test
negl
pop
fidivl
repnz
push
push
inc
pop
std
add
mov
stos
add
push
mov
dec
movsb
scas
sub
mov
add
inc
sti
dec
int3
add
std
out
les
mov
add
ss
push
inc
add
les
popa
in
in
jnp
cld
push
add
add
adc
std
add
push
inc
inc
cwtl
and
and
call
add
push
inc
xor
imul
mov
add
ljmp
mov
pop
sub
pop
push
add
jns
mov
xchg
jo
cs
add
add
dec
jne
add
dec
cltd
mov
mov
mov
cmp
xchg
inc
push
test
pop
loopne
sub
and
xchg
xchg
add
stos
mov
or
adc
nop
mov
cmp
paddq
cmc
adc
push
cs
in
or
mov
test
hlt
ja
add
mov
imull
sub
adc
sub
mov
add
nop
push
call
xor
mov
sbb
lahf
mov
xchg
push
cli
cmp
repnz
inc
cld
je
sbb
pop
or
jl
cmpsl
aad
add
dec
pop
stos
into
sbb
scas
cmp
movsb
clc
cmp
sub
jmp
or
add
shrb
push
mov
clc
roll
daa
add
xchg
ret
jne
sub
js
and
fsubp
jg
add
adc
inc
mov
jb
add
sti
xor
sub
push
push
sub
into
in
add
dec
fidivs
imul
cli
subl
cld
cwtl
and
shlb
pcmpeqw
sub
rolb
adc
bnd
or
add
shll
and
mov
add
int
in
hlt
inc
imul
inc
cmp
add
pop
or
mov
ja
push
loop
movsl
pop
inc
mov
add
push
lea
jp
das
subb
scas
sub
mov
dec
push
jmp
sub
sbb
xorb
dec
pop
add
push
push
mov
mov
add
and
fst
das
daa
cwtl
fldl
cld
lahf
xchg
push
jmp
add
cmp
add
xchg
jne
add
push
jmp
aam
ds
cmp
ja
dec
aas
lret
iret
loop
add
inc
not
sub
add
data16
add
and
push
push
sarb
push
clc
push
cmp
cld
cltd
out
add
orb
leave
jne
xchg
add
movsb
repz
dec
ljmp
pop
push
jge
pop
push
test
push
mov
add
aam
ds
push
or
inc
sub
outsl
and
test
xchg
mov
int
jecxz
pop
mov
pop
sbbl
lahf
push
xchg
add
es
add
or
vminps
cmp
dec
rcrb
add
cmc
js
or
das
les
inc
imul
or
call
cmc
add
daa
mov
pop
pop
cmpsl
enter
cld
jp,pn
repz
adc
jmp
enter
pop
mov
push
or
jb
call
push
mov
out
push
shrb
add
xchg
test
add
jle
fisttpll
sub
faddl
arpl
mov
aad
out
add
in
add
xlat
mov
pusha
jge
mov
add
jp
dec
pop
xchg
push
loop
add
and
addb
push
imul
add
setb
fsqrt
cmp
icebp
dec
cmc
enter
sub
dec
add
push
inc
nop
pop
or
icebp
add
imul
test
cmp
in
test
push
repnz
out
adc
cmp
mov
add
orb
adc
xlat
loopne
push
hlt
adc
mov
repz
call
mov
sgdtl
jb
inc
adc
cld
add
popf
pusha
cmp
enter
sbb
ss
sub
jge
add
xor
pop
lock
popf
adc
shlb
leave
add
adc
dec
xor
jle
cs
jecxz
add
in
enter
pop
je
add
hlt
add
aam
insb
fstl
mov
mov
int3
mov
or
add
movsb
push
xlat
add
call
scas
jb
pusha
cmp
push
push
call
xchg
pop
loopne
adc
loopne
add
mov
iret
fcom
fmuls
add
pushl
add
mov
pusha
add
pop
inc
pop
test
xor
xor
cmpsb
scas
xchg
arpl
sbb
frstor
add
ret
int3
das
sbb
jmp
xlat
out
dec
cwtl
aas
pusha
inc
add
xor
hlt
sub
sub
outsl
lret
jae
mov
or
pop
or
in
sub
mov
sub
xor
int3
lcall
mov
es
pop
inc
lret
cmpb
lock
xor
xor
lock
sub
es
adc
inc
add
jnp
push
clc
sub
jle
out
jmp
sbb
out
dec
rolb
mov
add
test
imul
ret
mov
ja
add
cmpsb
add
hlt
add
jmp
push
imull
enter
jb
add
inc
cltd
mov
rorb
sbb
inc
add
dec
pop
lock
cmp
and
int
add
cmp
sbb
add
push
push
sti
repnz
pop
push
add
cmp
mov
add
push
push
and
jnp
mov
sldt
lcall
dec
mov
inc
add
mov
int3
lock
fisttps
in
inc
es
decl
addb
mov
stos
pop
add
or
add
rcll
jne
mov
push
pop
or
or
test
xorb
out
shr
add
mov
xchg
inc
and
subl
jle
push
movsb
add
out
and
movsl
test
mov
cmpsl
fldenv
xchg
insl
idivb
add
mov
int3
aas
loopne
sub
mov
add
or
jns
lods
push
push
adc
push
aam
je
add
or
dec
and
sub
fmuls
inc
std
nop
cld
or
pop
dec
mov
dec
or
push
add
push
xlat
sbb
add
imul
test
andl
mov
add
adc
sbb
call
adc
and
popa
clc
cmp
movsb
or
cmp
aam
shlb
add
jge
push
add
xchg
fistps
shll
imul
add
in
and
add
jle
pusha
add
cmp
je
or
add
jne
jno
cmp
aaa
pop
in
sbb
nop
aad
and
addb
mov
push
hlt
adc
lea
rolb
add
addr16
imul
adc
repz
jmp
scas
je
mov
add
dec
clc
daa
cs
add
adc
repz
add
pop
cld
popf
push
xchg
sarl
push
in
or
iret
enter
jle
add
out
push
mov
je
push
mov
xchg
aas
imul
add
sub
dec
in
rorb
push
fcoml
into
jmp
out
adc
or
mov
lock
push
out
jae
ds
dec
cs
lock
out
xrelease
push
pop
mov
add
lret
xor
pop
dec
bound
and
add
insb
push
sub
pop
test
xchg
sar
in
mov
add
push
push
xor
ret
pop
jl
pusha
test
add
jmp
outsl
adc
daa
mov
popl
mov
push
cld
lcall
fdivs
and
shlb
cwtl
xor
mov
and
add
clc
or
inc
rcr
add
cmpl
test
jge
jo
xchg
xor
js
add
rolb
mov
popa
adc
add
loope
aam
and
add
in
loopne
sub
test
cli
push
decl
inc
data16
les
push
test
push
cmp
add
cwtl
decl
aad
test
adc
cmpl
add
jmp
push
clc
pop
pop
add
ret
or
in
jle
add
data16
or
mov
add
aas
je
mov
add
ficoml
mov
push
ret
outsb
call
inc
repnz
or
jae
inc
jmp
inc
sbb
ss
add
bound
data16
adc
repnz
fs
xor
pop
cmp
add
mov
add
xchg
add
add
inc
or
les
mov
cmc
dec
ljmp
cmpl
jbe
xchg
lds
inc
xor
sbb
mov
add
mov
dec
push
or
jo
sbb
std
les
notl
push
inc
or
imul
in
loopne
out
mov
mov
mov
inc
xchg
add
pop
adc
and
xor
add
add
iret
mov
add
cmp
mov
paddq
pusha
adc
fldcw
mov
sub
add
and
pop
dec
ja
lret
aaa
inc
in
xchg
inc
add
sub
add
add
push
inc
or
test
jae
mov
xchg
cmp
push
ficoml
loope
jo
faddl
sahf
jecxz
fmuls
jg
loopne
movsl
cmp
add
leave
xchg
dec
cmp
adc
jne
pop
sbbb
aam
lcall
inc
pusha
movsb
jnp
out
in
xor
cmpsl
out
call
test
adcb
std
dec
pushf
push
add
mov
push
jle
add
mov
adc
loope
ja
lods
pop
or
jns
notb
cld
sbb
xchg
sarb
jp
pushf
cs
and
rcr
hlt
js
jle
add
push
push
test
call
mov
push
rorl
add
xchg
movsl
adcb
cmp
xorl
adc
mov
pop
int3
and
imul
incl
push
xor
mov
dec
add
mov
fstps
dec
push
out
fistpll
sub
lock
pop
jno
add
add
mov
mov
inc
jecxz
loopne
pop
sbb
xchg
aam
inc
inc
dec
add
add
or
mov
leave
pop
cltd
add
jb
xchg
xchg
jnp
lahf
pop
cmp
add
sbb
rolb
jecxz
mov
cmp
sbb
ret
cmp
sub
adc
sub
aaa
add
jle
sahf
mov
or
add
add
cmp
inc
sub
xorl
inc
push
call
insb
push
pop
fcomip
add
mov
xor
jge
pop
idivl
sbb
lods
push
add
sbb
orl
out
nop
imul
lock
inc
push
je
icebp
cmpsl
xlat
adcl
jnp
sbb
aas
pop
cmovnp
push
pusha
inc
rol
add
andb
insb
add
sbb
lock
sbb
sub
leave
and
jns
add
add
nop
pushf
xchg
mov
inc
cmpsl
clc
test
xchg
push
cmp
je
xor
add
std
lock
test
add
in
sub
movsb
add
jge
xchg
out
push
lock
in
add
push
or
adc
movsl
psraw
mov
cli
decl
mov
lret
inc
xchg
jo
pop
outsl
cs
or
add
scas
xlat
cltd
xor
nop
add
dec
lock
cld
push
sti
sarl
das
pop
test
adc
push
and
ret
in
pushf
push
and
xor
loopne
push
inc
xor
adc
add
pop
int3
xchg
imul
cwtl
jp
hlt
push
in
add
cs
xchg
jg
shr
lds
xor
imul
add
fildll
adc
adc
movsl
cltd
lds
push
in
dec
cltd
dec
movsb
add
pop
add
das
inc
or
test
pop
rclb
pop
in
or
arpl
pop
mov
mov
in
aas
add
subl
add
aad
out
movsl
jle
das
fiaddl
mov
std
add
add
sarl
incb
xchg
sbb
pop
lret
xchg
sub
jae
add
and
jl
pop
push
stc
aas
xchg
sbb
sti
rorb
adc
sbbb
push
test
test
je
lcall
stos
enter
insl
cmp
and
sbb
sbb
lods
fnstsw
cmp
imul
cmpsl
rclb
adc
test
shlb
cmp
push
cltd
adc
inc
call
add
aaa
cmp
sti
jnp
mov
inc
mov
and
xchg
pop
popf
movl
daa
add
sbb
mov
cmp
mov
pusha
add
outsl
sbb
clc
loopne
add
icebp
pusha
mov
mov
lods
pop
adc
sbb
and
in
or
add
mov
add
mov
repz
mov
push
and
jle
mov
or
xchg
mov
sub
cmp
lods
js
adc
fisubrs
xor
out
add
dec
or
aaa
dec
jle
add
xchg
loopne
xchg
add
mov
daa
hlt
push
add
dec
sbb
cmp
in
add
xchg
and
add
mov
ja
js
mov
cmp
jmp
xchg
inc
sub
or
add
add
add
movl
popf
out
xchg
stos
mov
jns
adc
clc
add
mov
mov
pushf
add
inc
jbe
add
ret
add
jmp
add
js
jle
mov
add
push
add
scas
out
adc
add
mov
adc
jmp
mov
push
xchg
addl
inc
add
fisubs
test
cmp
push
xorb
cs
gs
push
push
rcll
or
push
sbb
divb
fimuls
aad
shl
mov
loopne
sub
xchg
dec
push
add
sub
pop
clc
add
push
pop
and
fldl
add
sbbb
and
inc
shl
int
add
fimull
enter
xlat
add
push
pop
add
jae
clc
jge
subl
incb
dec
out
mov
pcmpeqw
pop
test
sti
push
and
inc
xchg
jns
out
scas
pop
xor
out
test
add
xor
dec
fs
bound
lret
ljmp
jae
mov
push
add
lock
jg
add
in
adc
push
jle
and
add
cmp
add
jg
dec
push
jae
push
dec
or
loopne
or
and
jle
imul
ljmp
add
call
test
mov
iret
pop
popa
into
sub
lcall
aas
add
jb
or
mov
pop
add
sub
mov
lods
or
cwtl
or
loope
pop
xor
sbbb
stc
xor
add
les
fiaddl
sbb
mov
sub
sti
add
adc
enter
divb
in
pop
aam
cmp
insb
jg
lahf
push
cmc
int3
loope
loopne
mov
mov
and
and
movsb
and
vmovups
add
xchg
fidivrs
filds
push
adc
add
add
mov
add
pop
sub
adc
push
add
add
dec
pop
stos
jno
in
rclb
or
clc
hlt
out
add
adc
out
movsb
nop
js
mov
xchg
mov
adc
dec
push
cltd
test
and
add
loopne
or
into
pop
xlat
inc
cmpsl
mov
shrl
push
add
dec
je
push
sbb
sub
add
jle
or
mov
xchg
pop
mov
and
inc
pop
cld
adc
inc
pop
imul
pusha
jo
test
xor
or
add
adc
mov
je
data16
psubusb
aas
adc
adcb
cmpsl
add
negb
cld
xchg
popf
mov
cmp
sbb
cwtl
lret
mov
add
adc
adc
add
mov
loopne
mov
je
jnp
sbb
jne
insb
imul
insl
jno
jnp
into
adc
push
int
add
les
pop
sub
or
js
mov
or
add
sbb
cwtl
pop
push
sarb
push
inc
mov
jl
pop
pop
imul
xor
negl
lcall
add
inc
int
mov
add
movsb
fcomps
mov
cmpl
call
imul
and
mov
jno
fs
and
movl
cmp
mov
rolb
mov
jbe
inc
cwtl
imul
push
sarb
jae
sbb
push
push
dec
shrb
pop
add
jne
add
mov
sbb
shlb
add
arpl
xor
aam
sub
xlat
xchg
lods
add
lcall
push
dec
inc
jo
cmp
mov
inc
movsb
adc
add
fdivs
jl
sbb
add
sub
cmp
xchg
mov
push
mov
jmp
xchg
push
xchg
je
in
call
xchg
into
rorb
lock
fistl
lret
or
add
call
loopne
pop
xchg
add
mov
sub
repnz
loopne
movsb
or
pop
lods
int3
call
pop
jo
push
jae
add
adc
push
add
je
das
add
hlt
ja
les
add
pop
sub
add
rcrb
cmp
push
xor
test
ret
cmpb
in
jmp
pop
in
xorl
push
add
mov
pusha
pushf
sbb
or
or
ds
cmp
mov
mov
mov
add
jne
into
call
xor
add
shlb
clc
push
add
xchg
in
scas
out
movsb
add
sub
cmp
js
adc
pop
in
or
add
pop
push
mov
fcompl
pop
and
sbb
add
push
dec
and
test
fstpt
mov
pop
cmp
fs
loopne
or
add
movsl
jg
push
rorb
pusha
adc
add
nop
or
jp
dec
lods
mov
or
adc
fcmove
shll
out
add
sbb
ret
push
bound
push
adcb
stos
adc
pop
mov
mov
stos
push
dec
or
xchg
sahf
mov
adc
lock
add
lret
add
xor
push
dec
rcl
adc
pop
lcall
jg
nop
add
jmp
add
inc
cmovge
mov
mov
ret
cli
pop
movsl
xchg
inc
jp
addr16
sbb
dec
cs
jl
lret
mov
add
or
or
adc
dec
add
cld
das
popf
inc
pusha
mov
mov
add
and
popa
nop
dec
sbb
add
cmp
adc
mov
cmp
adc
cmp
aas
nop
out
add
mov
mov
pop
lahf
and
outsl
mov
pop
xchg
add
xchg
cmp
xchg
jo
push
adc
fucom
and
mov
xor
lahf
add
mov
bound
jle
add
jmp
xlat
mov
and
pop
jo
scas
outsl
in
add
xchg
sub
enter
add
sub
push
popa
and
add
shlb
stos
mov
sbb
fcomps
testb
repz
mov
add
or
xchg
pop
mov
pop
push
mov
mov
testl
add
ds
in
sbb
data16
js
or
pop
lock
add
mov
add
enter
stos
fsqrt
test
cmp
add
jg
pop
mov
movsb
add
or
pop
addl
sbb
xchg
jp
cli
and
push
add
cmpsl
pop
cmp
add
push
inc
clc
add
push
sbb
sbb
adc
and
pop
mov
mov
xor
jg
mov
pushf
add
rolb
add
aaa
addb
add
mov
xchg
add
inc
add
sahf
and
push
js
or
or
dec
mov
fcoms
sub
and
dec
loopne
les
popa
sub
inc
pop
aad
outsl
sbb
hlt
add
push
add
pop
inc
or
inc
pop
add
and
sbb
add
stos
out
jo
add
mov
jb
loop
fcmovb
std
push
or
lock
mov
mov
add
and
add
xor
fistl
and
dec
jge
les
add
adc
rorb
push
push
test
or
jge
cli
pop
add
bound
fwait
push
or
sbb
add
hlt
mov
cmc
aaa
pusha
mov
pusha
enter
rclb
dec
push
inc
fiadds
add
xor
or
je
jecxz
add
cmpl
jne
add
jmp
add
out
sbb
xorb
stos
add
cmc
jne
cmp
inc
add
rcrb
fmuls
daa
fisubrl
jmp
pop
pop
pop
js
loop
add
xor
repz
adc
pop
xor
ljmp
mov
inc
cmp
sbb
sbb
mov
add
inc
adc
pop
pushf
rolb
movsb
mov
outsb
or
in
cltd
add
shll
scas
test
je
ja
add
sbb
inc
push
add
or
and
nop
cmp
lods
mov
mov
add
xor
call
dec
add
xor
sarb
inc
outsl
aas
rolb
icebp
in
dec
insb
sbbb
and
mov
test
add
push
dec
pop
push
out
add
adc
lcall
mov
sarb
and
fcom
push
add
movsl
mov
call
push
stos
or
loop
add
es
lods
or
or
pop
test
neg
cs
es
popl
mov
mov
xlat
test
add
add
mov
sbb
out
test
rcll
in
xor
push
add
mov
mov
clc
or
orb
add
xor
inc
cmp
add
push
and
cmp
mov
adc
in
pop
pop
add
ret
pop
xchg
pop
and
inc
add
mov
pop
stc
add
cmp
xchg
loopne
add
sahf
mov
cwtl
cmp
jle
add
mov
add
or
jnp
lret
push
mov
adc
push
add
repz
adc
fisubl
fnstenv
bound
and
jne
outsl
or
mov
pop
or
movb
orb
cs
jge
pop
dec
adc
or
or
outsl
jl
leave
das
loopne
lret
aam
loope
pop
sub
lret
jle
sub
dec
cmpb
dec
push
add
mov
pop
jno
add
loope
pop
popa
mov
aad
test
fcmove
push
dec
movsb
jo
add
test
rcll
roll
dec
and
mov
and
or
pop
add
cmp
out
mov
jecxz
pop
add
lea
cmp
scas
cld
add
pusha
and
fbstp
out
inc
andb
xor
push
das
ss
fisubl
adcb
jmp
sbb
data16
add
push
sub
inc
in
adcb
stos
add
je
cmpsb
mov
pop
adc
add
mov
jo
add
cmp
ret
or
cmp
dec
out
add
push
sti
pushf
mov
adc
ret
jno
xor
dec
add
shll
inc
cmp
outsl
orb
mov
adc
mov
repz
and
adc
lods
addb
sub
into
adc
pushl
cmpsl
push
add
push
les
outsb
xor
dec
push
mov
jmp
testl
ja
lods
mov
movsb
xchg
test
adc
jmp
sbb
xor
loope
icebp
jo
add
mov
js
and
mov
jg,pn
pop
jle
fnstenv
rorb
add
jns
stos
fwait
cmpl
hlt
xchg
mov
data16
or
jmp
mov
scas
jae
in
lods
jl
add
or
pop
addb
mov
fimuls
jmp
lret
xchg
movsb
or
jecxz
xor
add
jo
pop
add
dec
insl
shlb
xlat
mov
lret
mov
cmpsb
inc
repnz
jp
sbb
shrb
or
xlat
add
mov
dec
sbb
add
adc
test
dec
mov
cmp
fsubrs
add
nop
add
sahf
push
mov
pop
clc
aam
cmovl
shrb
pop
xor
dec
mov
push
adc
add
mov
test
sbb
inc
or
pop
adc
lcall
mov
xchg
add
push
ja
nop
and
dec
jno
or
inc
add
lea
roll
add
mov
js
jae
add
je
or
add
movsl
xchg
pop
or
dec
mov
dec
jne
sub
cmp
gs
jno
push
stos
add
leave
mov
add
mov
ret
or
mov
sbb
add
push
jno
pusha
mov
add
or
je
add
pop
or
nop
sub
clc
cmp
jnp
mov
push
and
add
jns
inc
orb
adc
imul
jge
testb
lcall
add
mov
add
pusha
adc
push
pop
add
fildll
add
cltd
push
add
push
or
adc
add
adc
xor
push
stos
call
or
mov
sub
andb
add
push
sub
je
popf
add
es
andl
add
jl
push
call
add
pop
in
imul
push
testb
add
jae
adc
ret
scas
xor
aad
xor
outsl
and
pop
push
sbb
mov
push
pop
push
add
push
adc
add
mov
push
loopne
mov
sub
mov
dec
inc
add
cmp
jmp
shlb
js
ss
xor
subb
insb
cmp
ljmp
fisttps
xor
add
push
in
das
call
xor
and
adc
inc
xor
mov
pop
add
addb
push
mov
push
add
cs
rcrl
xchg
push
add
ja
and
push
push
push
stos
clc
inc
rorb
jg
and
or
inc
cmp
loope
jae
es
repnz
fs
or
mov
js
loop
mov
test
lcall
test
shrb
push
cmp
add
sbb
mov
fadd
movsb
mov
cmp
je
push
mov
adc
jb
mov
add
cmp
add
jmp
xchg
call
cli
js
enter
mov
jecxz
cmp
clc
aaa
push
fiaddl
faddl
decb
hlt
ljmp
add
insl
rdpmc
testl
sub
imul
add
dec
jne
enter
add
jnp
mov
dec
shl
xor
cmp
fcmovnb
enter
or
aad
add
adc
cmp
jne
sbb
dec
cmp
call
lods
sub
js
xchg
sub
loopne
cmp
add
mov
ret
pushf
sub
scas
adcb
sub
add
mov
fsubs
add
mov
repnz
dec
mov
cmp
xchg
hlt
or
sbb
or
or
inc
fdivs
test
imul
inc
cld
xchg
pop
adc
sbb
mov
adc
mov
dec
enter
push
sub
adc
in
jg
push
clc
add
push
jmp
dec
ds
mov
sub
add
inc
and
jp
sub
lock
mov
push
fs
or
xor
call
test
ret
pop
jecxz
ror
lods
dec
mov
pop
es
xchg
pop
scas
popa
add
mov
or
mov
push
lret
and
push
sub
add
cmp
jmp
cld
jle
push
sub
push
jmp
in
adc
add
lods
lret
imul
cltd
mov
pop
add
rcr
scas
ret
push
add
and
js
add
jecxz
lea
or
out
jne
mov
cld
ret
pop
pop
and
pop
add
sub
cmpl
bound
insb
cmp
mov
or
pop
inc
loop
add
and
and
les
and
and
sub
fildl
movsb
mov
cmp
adc
add
repnz
xchg
sub
add
and
add
push
mov
leave
neg
mov
rolb
js
adc
data16
cli
xchg
add
fbld
rol
adc
movsb
sbb
sarl
add
popf
push
mov
cli
popa
jp
mov
lea
xchg
enter
arpl
rclb
pop
out
repnz
jp
out
cmpsl
jge
jnp
repz
add
fbld
fdivl
add
adc
push
lahf
add
mov
fcmovbe
pop
mov
push
add
xchg
dec
and
mov
add
in
sbb
push
iret
push
in
out
add
shr
add
pop
xor
rol
sti
cltd
push
loope
adc
pop
and
les
mov
fiaddl
insb
push
xchg
jmp
pop
loopne
das
pop
add
adcb
sti
jns
cli
out
cmp
add
pop
int
add
movsb
push
loop
sbb
add
jno
push
pop
jl
pusha
mov
sub
mov
xchg
test
rorb
mov
and
cmp
jp
fstpl
ds
add
inc
leave
xchg
dec
push
repz
idivb
enter
arpl
std
or
in
rorb
out
xor
push
int3
cwtl
dec
out
sub
mov
dec
sub
movsb
cmp
add
xor
xor
push
push
push
cmp
mov
in
sbb
and
daa
sub
ss
sub
push
mov
push
jl
orb
add
cwtl
lock
in
lret
loopne
ss
clc
std
sbb
test
sbb
mov
add
add
mov
pop
repnz
and
inc
data16
fbstp
mov
add
testb
cmp
fldl
lds
dec
mov
add
inc
jl
into
xchg
adc
faddp
and
in
cmpsl
cli
add
ljmp
addb
jae
shl
add
mov
and
add
shlb
jmp
inc
pop
pop
inc
mov
add
pusha
stos
mov
iret
jge
mov
lret
jno
lock
sbb
push
out
cmp
add
adcb
nop
add
cmp
add
cld
adc
pop
loop
fadds
push
sahf
mov
dec
add
loopne
jne
loop
loopne
xchg
mov
pusha
pusha
mov
jmp
jle
mov
or
shlb
add
adc
xor
fs
loope
xor
add
push
mov
add
outsl
movsb
fcomi
rorb
lods
add
mov
pop
orl
jl
pop
xor
add
sub
outsl
or
jmp
repz
aas
pusha
sub
in
lods
adc
les
movsb
stos
mov
push
mov
push
ret
iret
pop
daa
je
loope
add
mov
cmpsl
add
outsl
test
add
orl
xor
and
and
jo
adc
dec
loop
shrl
xor
adc
stc
mov
or
cwtl
pop
test
or
imul
sub
dec
inc
add
mov
xchg
or
add
push
leave
dec
pop
call
push
pop
mov
out
adc
mov
pop
jnp
hlt
xor
or
mov
popl
test
sbb
movl
mov
subb
add
fcmovb
out
aam
inc
add
jg
fs
stc
pop
push
sub
aas
mov
jne
fcmovbe
inc
pop
mov
pop
arpl
jg
and
andl
cmc
add
lods
adcb
sbb
jae
adc
push
enter
mov
movsb
cs
sub
cld
add
mov
adcl
and
xchg
in
add
push
pusha
push
xor
test
les
dec
pusha
xor
push
and
push
cmp
outsb
push
mov
push
cmp
push
adc
sbbb
add
cmp
pusha
pop
jo
add
fs
dec
add
inc
add
or
mov
or
fistps
or
cld
jle
mov
adc
in
jo
sub
add
jg
cmp
rclb
xor
adcb
inc
add
push
inc
or
add
out
pop
jnp
add
jp
mov
adc
inc
jae
pop
hlt
jb
adc
daa
adc
sub
shr
mov
lcall
xchg
sbb
pop
js
mov
pop
nop
push
movsb
repz
pop
dec
or
mov
xchg
jbe
rclb
sbbb
adc
add
repnz
push
push
push
adcb
stos
add
popf
mov
rep
mov
cmp
call
xor
leave
mov
mov
test
inc
inc
cmp
add
mov
and
add
adc
or
sti
add
lea
or
adc
xchg
xor
add
loopne
sub
sbb
pop
adc
xchg
jle
xchg
add
cmp
ret
cmp
out
pop
inc
mulb
insb
jl
mov
add
cmp
jnp
push
mov
out
sbb
and
lods
add
sti
mov
mov
add
xchg
add
xlat
pop
pop
jne
cmc
pop
lret
rolb
add
iret
ljmp
or
pop
out
leave
lret
mov
cwtl
vmptrst
ds
fstps
add
xor
pop
ret
es
dec
pop
add
sbbb
leave
test
clc
jbe
adc
mov
adc
add
xchg
daa
mov
add
add
xchg
ss
add
int3
sbb
cmp
add
enter
lods
mov
jno
jg
add
push
loope
js
or
jb
xor
addr16
adc
stos
pop
pop
test
mov
shl
test
inc
lret
mov
ret
add
cmc
iret
pop
stc
push
psrlq
popf
cmp
dec
sub
jge
pop
push
fst
inc
and
and
and
sub
and
jo
add
fimuls
aas
cmp
addl
sbb
enter
lcall
jle
jo
icebp
and
xor
pop
cmp
add
push
cmp
bsr
js
dec
jns
sbb
mov
or
sbb
mov
ret
int3
out
call
inc
add
add
test
adc
stc
loop
push
add
psubb
add
mov
sbb
or
add
cmpb
jb
mov
mov
push
pusha
xchg
xchg
subl
mov
loope
add
or
adc
and
inc
mov
xor
jns
add
dec
shl
jnp
push
mov
fldl
add
push
orb
push
mov
mov
pop
adc
jbe
add
addb
cli
or
call
pop
arpl
cmp
les
pop
imul
push
hlt
int
rolb
cmpb
sub
sub
stos
xor
roll
mov
ret
add
adc
in
add
repz
add
xchg
or
xsha1
cmpsb
or
leave
xor
xchg
orl
sbb
mov
in
add
jg
repnz
pop
ret
pusha
pop
xor
mov
loopne
sub
xor
pop
add
pop
bnd
push
cmp
add
cmp
in
dec
add
sbb
jmp
int3
xorb
sub
pop
push
int3
or
adc
jo
add
in
add
jl
mov
dec
adc
stos
call
sub
pop
mov
mov
les
pop
inc
rcl
lods
pop
andl
data16
or
sub
jmp
sbb
aas
test
gs
shl
movsbl
adc
jne
mov
inc
call
fcoml
dec
xchg
cmp
jl
cmp
orb
int3
movl
mov
pop
or
addr16
lcall
fildl
fildl
add
test
xor
jae
mov
xor
or
nop
add
shlb
jne
mov
dec
or
add
xor
add
int3
jno
mov
sbb
int
push
mov
movd
push
into
std
dec
xor
int3
int
iret
add
shr
xor
iret
loopne
imul
jp
mov
add
adc
add
push
push
add
dec
loopne
cli
add
cmp
jb
out
add
outsl
std
xchg
pop
sbb
pusha
push
in
vpsrad
add
das
xchg
adc
addb
push
scas
push
mov
cmp
jns
jp
add
enter
inc
out
and
adc
cmp
aas
add
cmp
add
mov
and
mov
aam
add
test
fcmovnbe
rcrl
mov
mov
loopne
pusha
xchg
pop
add
mov
inc
add
push
in
mov
jmp
add
cwtl
mov
test
push
jmp
fstl
mov
push
pusha
and
jae
add
cmp
ret
rcll
xor
adc
push
pop
loop
and
lds
xchg
add
push
add
and
into
cld
xchg
add
or
cmp
or
add
cmp
mov
or
mov
aam
dec
pop
std
cwtl
xchg
movsb
mov
mov
inc
jae
call
add
sti
pop
fstpl
fwait
add
pop
adc
out
adc
cltd
add
xor
push
mov
pop
popf
lock
xor
mov
inc
mov
les
and
jmp
pop
xor
add
cld
and
sub
bound
push
pop
add
sbb
arpl
push
jl
xor
mov
mov
pop
mov
sarb
ret
rcr
movl
out
sbb
add
mov
jns
lods
add
jl
cmp
xor
adc
inc
add
nop
inc
push
sbb
sbb
or
or
dec
pop
dec
jl
hlt
in
pop
dec
cmpl
jp
ror
bound
je
push
add
inc
dec
pop
or
lea
jns
repz
clc
aam
mov
pop
jnp
jno
jmp
or
mov
enter
pop
inc
loopne
mov
dec
loopne
dec
neg
add
sbb
cmp
xor
cwtl
or
pusha
pop
add
inc
test
pop
or
and
in
sarl
clc
jns
sbb
mov
jge
adc
mov
cwtl
fstps
shlb
and
mov
xchg
in
orb
cmpsb
clc
je
les
or
test
mov
subl
mov
lods
or
cwtl
test
sub
cmp
inc
and
mov
add
pusha
and
cmp
cltd
loop
nop
sub
mov
and
and
addb
test
xchg
js
fcompl
ret
sti
arpl
aad
cmp
push
je
ljmp
mov
sbb
add
xchg
or
jmp
mov
xor
rclb
mov
cld
lock
pop
shrb
out
xchg
loopne
ss
inc
dec
subb
jb
cld
jno
fs
xor
xor
mov
adc
add
je
pusha
js
out
and
or
push
adc
mov
dec
pop
xchg
add
add
lods
cmp
inc
sbbb
mov
add
sub
add
imul
cwtl
test
add
mov
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
je
xor
jb
loop
out
addl
clc
ljmp
inc
sbb
shrb
mov
push
and
in
or
dec
rol
pop
or
xchg
nop
movsl
jns
sub
cwtl
jo
in
add
or
ljmp
aad
add
push
insb
jo
dec
add
adc
or
test
je
pop
es
fs
shrb
dec
call
dec
bound
jle
jle
jle
wrmsr
inc
cmp
jle
mov
sub
add
psubsb
jmp
idivl
not
neg
mul
repz
add
or
inc
add
gs
cmp
pusha
and
mov
jo
addr16
les
push
bound
sub
imul
jno
push
imul
lods
cmp
mov
push
movsb
xchg
sub
aaa
adc
pop
push
inc
dec
dec
dec
add
das
cli
inc
les
push
pop
pop
push
add
dec
popa
dec
cwtl
jp
bound
jecxz
push
leave
and
je
ja
jp
add
popa
add
adc
fldenv
jns
add
push
add
sbb
push
add
imul
lock
nop
in
js
clc
les
adc
jo
xchg
add
inc
cwtl
mov
int3
movhlps
and
sub
cmpsb
sub
stc
and
orl
adc
add
xchg
sub
xor
enter
or
js
inc
xor
fsubrs
ret
add
es
outsl
shlb
js
test
inc
xchg
mov
dec
fcoms
xor
and
jo
cmp
cmp
inc
push
push
rcrb
pushf
add
and
push
sub
je
loope
jl
sub
push
cli
jge
in
push
jle
test
or
cmp
add
insb
mov
adc
add
add
pop
xchg
mov
add
mov
imul
and
dec
mov
inc
lea
xchg
add
xchg
cmp
cmp
add
ja
jmp
roll
add
or
mov
mov
push
cmp
pop
push
call
xor
aam
pusha
hlt
jo
incb
shrb
out
or
push
or
or
or
test
dec
jmp
mov
xor
inc
mov
push
xor
or
xor
or
add
and
pop
xor
add
sbb
or
xor
cmp
or
jb
insb
pushf
xor
dec
add
xor
and
add
pop
dec
sub
dec
test
add
inc
cltd
movsb
fsubl
fs
nop
cmpsl
push
mov
add
add
adc
test
test
mov
aas
rdtsc
pop
inc
pop
jl
shlb
inc
or
mov
xchg
popa
int3
cmp
push
subb
jo
pusha
aaa
pop
cld
addr16
les
pop
mov
mov
pop
rorb
int3
sub
fs
cmp
cmp
sbb
nop
fmull
call
mov
loopne
mov
repnz
and
mov
cmp
fwait
mov
and
add
or
or
add
shrl
mov
mov
fwait
shr
int
cmp
jns
cltd
dec
push
test
ret
jp
add
sub
js
int
repz
nop
adc
jl
cltd
les
push
pop
mov
clc
cmp
add
sub
mov
int3
add
popa
fwait
and
xchg
xor
add
or
out
imul
mov
dec
and
fmul
loopne
in
add
andl
es
dec
nop
loope
and
add
and
sbbb
sbb
cltd
dec
xor
add
adc
in
or
call
and
mov
xchg
nop
add
aam
fdiv
push
rolb
ret
push
add
out
outsl
add
les
add
inc
cmp
nop
inc
and
add
add
add
leave
inc
push
adc
dec
and
scas
mov
dec
add
inc
cmp
stos
sub
xchg
and
lock
cmpb
mov
nop
aad
mov
xor
push
xchg
pop
add
push
jbe
test
lahf
ror
fmuls
mulb
or
sbb
dec
push
and
dec
stos
out
mov
out
in
lock
adc
inc
add
cmp
xchg
push
add
inc
je
mov
add
adc
in
add
mov
inc
adc
mov
add
insb
and
xchg
xchg
add
adc
out
repnz
ljmp
or
mov
and
mov
add
adc
dec
add
or
call
cltd
nop
xchg
jle
jg
aas
enter
pop
pop
dec
or
in
xchg
cs
inc
jle
jp
pop
jl
mov
cmc
scas
incl
jne
hlt
mov
dec
push
adcl
xchg
sbbb
inc
jp
mov
inc
mov
lret
cld
in
jle
insb
dec
jno
mov
add
add
push
enter
mov
psrld
jae
orl
fsubrl
inc
mov
mov
cmpsl
aam
in
imulb
adc
push
adc
or
dec
andl
pushf
adc
push
add
aam
loop
clc
clc
dec
xor
imul
cmp
xlat
mov
adc
je
add
mov
mov
or
fs
sub
sbb
sbb
push
arpl
fists
jecxz
outsl
outsb
xor
xor
xchg
pop
mov
mov
sbb
insl
add
mov
pop
push
add
jb
jne
and
add
xchg
outsl
arpl
mov
sbb
sbb
push
jmp
or
add
mov
push
add
jne
mov
push
xor
or
and
jle
add
out
inc
fisubrl
ret
add
jge
sti
push
jnp
add
push
call
in
inc
js
dec
inc
and
gs
add
jne
sub
adc
outsw
inc
inc
xchg
mulb
pushf
push
jae
ss
dec
add
xchg
dec
popa
outsb
add
or
sahf
adc
inc
imul
scas
push
movsb
pop
lods
dec
cmp
xchg
inc
jb
cmpsb
jo
cmpsl
loop
add
xor
ljmp
or
mov
test
inc
xorl
hlt
push
add
jge
popf
lods
stos
rclb
sbb
push
inc
add
mov
je
add
es
adc
add
aaa
cmp
sbb
xchg
pop
add
lock
jo
xchg
xor
or
add
push
mov
add
jg
insl
push
imul
mov
jp
cmp
dec
cltd
add
jb
lret
vmwrite
mov
orb
out
out
or
addr16
popa
jne
inc
outsl
js
hlt
adc
ds
sti
insb
je
enter
aas
push
imul
xchg
sub
cmpsb
cmp
ja
adc
loope
fiadds
add
jo
inc
mov
jp
pop
dec
push
outsl
push
sbb
sub
jg
pop
and
sub
lods
sub
cmp
dec
in
xchg
adc
add
daa
xor
mov
sbb
cmpsb
into
movsb
add
inc
jbe
adc
cltd
sarb
ds
adc
adc
add
and
movsb
jbe
repz
add
xchg
xchg
sbb
adc
push
or
shrb
mov
imul
fmul
jb
aam
rorb
lock
enter
movsb
mov
mov
sar
sbbb
xor
pop
and
sbb
cmp
lahf
add
adc
sbb
add
jne
jmp
lods
mov
jo
jae
inc
push
outsl
add
repnz
jg
sub
mov
sbb
dec
sahf
push
stos
loopne
sbb
call
xor
insl
ljmp
inc
sbb
mov
xchg
mov
pusha
sarb
call
add
mov
push
movsl
add
pop
popl
xchg
sahf
aam
pop
scas
pop
into
clc
add
xor
stc
shrb
push
int3
or
mov
inc
add
dec
inc
das
mov
sub
sbb
scas
mov
punpckhdq
jns
add
mov
add
push
inc
lods
jecxz
xor
out
dec
aas
aam
inc
mov
and
xchg
loopne
insb
testb
in
mov
mov
int3
mov
lods
add
out
adc
add
cmp
dec
outsl
mov
sbb
lds
xchg
into
add
or
pop
lahf
lods
outsl
add
mov
jle
add
outsl
ja
mov
inc
sahf
xor
inc
insb
addr16
add
push
and
mov
imul
data16
aas
movsl
mov
mov
inc
mov
push
pop
pop
mov
jmp
fmul
ljmp
xchg
mov
call
inc
xchg
or
xchg
and
pop
fsubs
fcoml
jne
icebp
add
leave
movsl
sbb
test
add
sub
orl
lods
xor
daa
add
movsl
sub
or
add
es
inc
jne
cmpsl
mov
movsl
add
add
ja
dec
push
sbb
out
adc
repz
push
inc
sub
jmp
insb
inc
mov
sub
xchg
adc
and
mov
cmpsb
sbb
not
jno
stos
mov
push
jbe
fistpl
mov
or
push
sbb
pop
add
push
fmull
push
xor
jo
scas
add
jl
jo
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
pop
je
add
sbb
xor
popf
aad
add
xor
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
and
inc
push
dec
lock
pop
pop
call
xor
clc
popf
cld
movsl
clc
mov
mov
ret
cld
leave
cld
jecxz
ljmp
or
adc
pop
inc
xor
cmpsl
dec
pop
cmpsl
fimull
movb
add
loopne
cmp
jb
sbb
cmp
aas
add
pop
pop
arpl
jb
jns
fwait
rorl
mov
aas
add
sub
xor
sub
icebp
mov
ret
leave
lret
inc
iret
cli
dec
inc
add
cwtl
push
rorb
sub
jb
inc
je
jbe
js
jp
lea
pushf
daa
mov
dec
shll
call
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fbstp
repz
push
dec
push
cmp
cmp
test
xor
cs
inc
add
and
add
cmp
jp
sub
je
jbe
js
mov
push
add
lea
xchg
test
add
inc
daa
dec
inc
push
or
jae
add
add
xor
cld
xor
js
xchg
call
add
inc
dec
movsb
mov
ret
xor
dec
xorl
add
dec
cmp
je
jbe
sarb
jp
jl
test
cmp
popf
daa
sbb
push
inc
lahf
dec
pop
push
xchg
push
pop
dec
cmp
jno
jns
andl
lea
fwait
loopne
leave
mov
out
dec
loopne
add
loope
cmp
es
cs
lret
xchg
push
repnz
xchg
iret
mov
or
sub
icebp
cmpl
cmp
jecxz
lock
addl
shll
fldcw
add
icebp
cmp
xor
jp
adcb
lcall
cmp
ds
cmp
jg
ljmp
add
or
add
dec
xor
jle
inc
fwait
dec
stos
push
mov
push
jb
jp
xor
jle
add
mov
mov
ret
rcl
loop
ljmp
cld
or
dec
adc
sub
ja
sbb
inc
daa
test
pop
mov
in
jb
repnz
xchg
xchg
mov
stos
shll
in
clc
inc
cmp
addb
xor
inc
xchg
cmp
mov
sbb
jo
js
cmpb
nop
add
mov
jb
je
jbe
js
add
in
xchg
or
repz
maskmovq
testl
mov
adc
xlat
sti
daa
push
inc
in
dec
push
sbb
pusha
inc
push
sbb
stc
mov
mov
pop
mov
lahf
rcrb
call
add
xor
leave
adc
add
fldenv
loope
jmp
stc
inc
orb
pop
inc
aas
jb
je
jbe
js
jp
jl
jle
jle
jle
add
enter
fdivs
lock
test
add
adc
sldt
mov
shrb
adc
jo
je
fcoms
mov
vmread
jl
jle
jle
jle
jle
dec
loopne
jle
call
xor
xchg
sub
lahf
add
pop
cmp
inc
mov
js
addb
dec
ljmp
mov
fcoml
jmp
out
mov
xor
incl
mov
ret
cmp
inc
leave
sbb
dec
stc
dec
adcb
mov
nop
in
call
mov
popf
lods
pop
mov
ljmp
iret
lock
cmp
add
fmull
ss
or
mov
scas
pop
inc
dec
inc
stos
xchg
push
in
and
pusha
xchg
gs
jae
mov
iret
lods
iret
mov
mov
mov
cmp
aaa
and
adc
adc
dec
and
inc
fldenv
movsl
insb
stc
jl
jl
out
out
out
out
andb
sbb
sub
dec
cli
xchg
lods
ds
enter
jl
or
or
adc
sbb
js
jp
add
leave
cmp
mov
shll
je
js
jl
cmp
stc
cwtl
stc
mov
add
pop
int3
mov
aam
fcom
fdivl
xor
clc
jo
and
and
add
int3
jne,pt
adc
lcall
mov
and
push
inc
outsl
sbb
fsubl
push
xchg
in
call
shl
add
and
test
xor
xor
loopne
test
jb
cwtl
pop
jbe
js
inc
pusha
mov
xchg
xchg
inc
sbb
test
rclb
mov
xchg
inc
sbb
add
cld
dec
cld
jb
je
jbe
push
pop
pusha
lahf
adc
cmpsb
mov
lods
iret
mov
mov
mov
pop
dec
movb
mov
enter
cmp
jo
rcll
testb
sub
sbb
loopne
in
add
cmpsb
in
stos
lock
xchg
push
push
pop
mov
mov
xchg
movb
popf
sbb
cmp
inc
in
sti
nop
mov
daa
lret
sub
push
loop
add
mov
cmp
call
aaa
aas
xchg
movsl
mov
daa
test
inc
add
mov
loope
mov
in
xchg
inc
jne
jns
add
inc
jl
jle
dec
add
cltd
leave
popf
or
movsl
sub
sbb
xorb
push
sysexit
decb
mov
mov
jg
add
fiaddl
xchg
aaa
ja
push
inc
cli
in
std
call
add
cmpsl
js
jp
cmp
sbbb
xchg
mov
add
lods
scas
adc
mov
mov
cmp
xchg
cmp
rcl
jecxz
push
xor
push
dec
xchg
pop
mov
jo
jl
jle
push
clc
mov
nop
cmpl
push
cmp
sub
out
popf
test
or
loop
pop
rorb
xchg
xor
daa
scas
inc
mov
or
rorl
inc
jecxz
mov
jmp
add
adc
dec
iret
jbe
xcrypt-ecb
cmpsl
dec
mov
shlb
add
jb
je
dec
roll
movsb
or
mov
dec
iret
arpl
cmp
pop
xor
jae
adc
cmp
cmp
mov
adcl
dec
xchg
nop
push
jl
leave
cmp
mov
jle
inc
std
sbb
cmp
sbb
push
lahf
lods
pop
or
out
adc
add
add
cs
popa
in
inc
mov
cmp
das
daa
jns
adc
lahf
xchg
mov
add
ljmp
pusha
mov
std
lock
xor
pop
adc
pop
in
sbb
jle
das
add
inc
cs
sbb
lahf
push
popf
arpl
xchg
test
mov
mov
flds
adc
sbb
inc
and
xchg
orb
lods
loope
push
and
pop
nop
inc
lret
jnp
add
ss
psrld
pushf
cmp
repz
andb
pop
dec
outsl
cmpsl
cmpsb
mov
ret
or
add
xchg
daa
mov
rolb
mov
dec
cmpsb
push
cli
jbe
add
adc
das
mov
sbb
sti
leave
dec
sarl
pop
loope
jmp
dec
les
ror
fnop
loope
call
push
sub
or
or
bswap
adc
sbb
adc
out
in
jg
push
test
cmpsl
add
pop
and
jge
push
je
sub
lret
add
xor
dec
rorb
sub
fadd
cmp
call
rorl
add
or
inc
cwtl
sbb
sbb
jno
push
sahf
xor
xor
cmp
inc
mov
adc
loope
push
cmp
xchg
dec
pop
lcall
push
rclb
int3
test
fsub
inc
movsb
in
mov
or
or
adc
push
sbb
sub
xor
test
repz
repnz
leave
lods
push
push
jle
add
pop
cmp
add
xor
stc
int3
cli
les
imul
jno
dec
jg
popf
inc
fadd
jmp
sub
cmp
xor
add
mov
pop
call
lock
clc
mov
jb
je
dec
mov
and
mov
pop
loope
jmp
testb
mov
loopne
sub
add
iret
push
leave
pop
shrl
jnp
xchg
add
mov
mov
add
dec
femms
sub
leave
add
movl
pop
shlb
mov
rcll
xchg
mov
xor
dec
testl
sbb
sub
xlat
in
add
xchg
out
add
sbb
aaa
test
test
cmp
mov
clc
cmp
and
or
push
mov
pop
loopne
xor
xchg
pop
jp
push
call
xchg
sbb
xchg
movsl
lods
mov
insl
cmp
sti
add
push
mov
inc
push
jl
adc
add
out
sub
pop
in
add
fwait
in
stos
lock
hlt
ljmp
xor
add
shrb
push
or
inc
imul
pop
add
pop
jne
pusha
into
pusha
scas
ss
es
fldl
push
test
add
push
dec
lar
xlat
ss
xchg
add
mov
jne
sbb
sbb
movl
cmp
subb
in
and
add
jb
je
add
sbb
cmp
dec
loop
add
iret
testb
aas
xlat
inc
andl
pop
orb
xor
ss
fstpt
dec
aas
push
dec
pop
mov
jle
mov
xchg
test
xchg
hlt
adc
pushf
and
jl
sbb
sub
xchg
dec
sbb
cmp
pushf
cmp
in
je
xchg
subb
dec
jno
ds
cmp
mov
inc
lcall
lock
mov
and
lods
stos
pop
dec
enter
add
xchg
lcall
dec
call
mov
add
test
or
addr16
xor
add
jbe
loope
jmp
add
or
clc
sbb
lock
add
jge
in
psubsb
arpl
or
pushf
dec
stos
subb
in
jl
in
add
addb
adcb
cwtl
test
pop
xchg
cmpsl
dec
mov
push
push
mov
pop
rorb
mov
je
pop
mov
sbbl
jmp
push
add
pop
fdivl
push
cli
and
sar
sub
cwtl
pop
xor
add
mov
jl
clc
test
push
rcll
push
movsb
jb
pop
lods
shll
sarb
in
jle
pop
pop
hlt
cmovno
aam
cmp
or
adc
or
pusha
les
add
pop
mov
and
les
je
mov
inc
add
push
call
rolb
adcb
enter
add
int
inc
add
and
add
into
inc
mov
add
int
push
jb
and
dec
dec
add
repz
hlt
lock
xor
pushf
xor
xor
imul
add
mov
mov
ret
aaa
cmp
mov
xchg
cmp
pop
cmp
and
jle
leave
fcmovnbe
out
andb
inc
imul
add
or
add
addr16
es
add
imul
fdivl
out
ljmp
adc
sbb
xor
add
rolb
xor
in
call
add
hlt
imul
in
test
je
sti
and
add
and
xor
incl
test
push
and
loopne
roll
mov
rorb
and
xchg
sub
rolb
je
jp
mov
jle
add
pushf
lock
mov
add
push
push
cmp
dec
pop
mov
shrb
movsl
push
push
adc
dec
dec
ficomps
push
clc
inc
jp
pop
bound
mov
out
pusha
das
cmp
call
je
pop
add
adc
or
jno
jo
lahf
push
iret
test
xor
rcll
mov
pop
hlt
xor
popa
cs
movsb
cmp
insl
mov
add
push
sub
shr
add
add
cmp
dec
add
jbe
inc
daa
push
dec
add
jnp
rclb
out
ret
push
mov
cmp
pop
add
pop
daa
pop
inc
insl
xor
leave
add
push
xor
pop
pop
add
mov
cmp
mov
and
pop
test
cld
cmp
cmp
push
xchg
cmp
xchg
cmpsb
daa
stos
dec
ficomps
inc
mov
shll
push
jg
icebp
pop
mov
les
enter
inc
andps
sbb
mov
cld
jb
mov
pop
into
lahf
and
add
lock
call
and
push
xchg
push
and
fisttpl
leave
mov
push
imul
ret
xchg
pop
mov
dec
add
cmpsl
dec
cld
out
pop
cmp
push
adc
add
mov
into
mov
lods
pop
test
push
faddl
xchg
inc
xor
dec
in
idivb
imul
shrb
aas
jg
cwtl
rcrb
mov
mov
add
xor
pop
lock
shlb
sbb
push
out
add
jbe
shll
adc
dec
xor
and
loopne
add
jb
pop
mov
jo
out
add
inc
dec
sar
stc
aaa
add
inc
cmp
lds
sbb
inc
daa
aam
movsl
add
mov
and
stos
add
aam
sarl
repnz
xorl
pop
cmpsl
nop
mov
mov
sub
push
cld
cmp
cmp
incb
add
pop
lods
repnz
outsl
jg,pt
add
sarl
xor
gs
sub
mov
ja
pop
add
xor
sbb
add
pop
in
out
xor
add
sbb
fcoms
mov
scas
popf
iret
adc
icebp
add
push
jle
push
je
add
js
jp
dec
les
push
loope
mov
stc
xchg
insb
fsubr
mov
pusha
dec
scas
pop
shl
loop
cmp
xor
cmp
jnp
dec
shl
shll
jl
mov
lahf
movsb
xchg
push
test
pop
mov
cmpb
in
add
sub
je
jbe
add
or
shrb
jl
add
nop
cmp
xchg
cmp
add
imul
adc
sarb
mov
add
dec
popf
inc
pop
xor
loope
sub
rorb
or
nopl
xor
and
sub
add
cmpsl
in
jae
pop
and
and
xchg
sar
clc
test
inc
pop
mov
push
cmp
push
cmp
push
cmp
add
enter
xor
sbb
mov
hlt
xchg
cld
ret
mov
push
add
je
adc
or
and
adc
call
push
add
pop
loopne
nop
lcall
sarb
or
xor
fsubrs
sti
pop
mov
add
mov
push
adc
jnp
add
push
pusha
cltd
or
xor
and
mov
mov
mov
or
sbb
cmp
mov
jb
cmp
push
xorb
or
int
loope
repnz
loopne
add
shll
push
sbb
arpl
pop
lds
add
inc
and
sub
add
cmp
and
cmpl
rcll
bsf
dec
sbb
push
cli
cmpb
xchg
repnz
sub
ds
pushf
inc
add
fwait
push
add
movsb
cmpsb
rcrb
add
loopne
xor
lret
pusha
xor
xchg
test
int3
xchg
adc
movsl
popf
pop
sub
das
aas
mov
lock
pop
shr
push
add
mov
mov
cmp
pop
add
lock
cmp
or
mov
pop
cs
and
mov
push
lods
lock
fs
add
imul
orb
ret
pop
sbbb
pop
adc
loopne
sti
ja
dec
lcall
jp
cmpsb
jl
jle
pop
or
adc
lcall
push
cs
scas
add
inc
and
cwtl
or
jmp
insb
call
dec
mov
loopne
inc
add
and
pop
lock
insb
add
cmp
iret
mov
sarl
push
sbb
je
orb
add
xchg
jl
sahf
out
in
loop
jle
in
mov
cmp
add
daa
push
rorl
enter
jle
in
cmp
pop
xchg
sbb
fadd
and
mov
push
jl
or
mov
cmp
je
cmp
add
or
jecxz
xchg
jmp
out
jbe
pop
sbb
lahf
sti
movsb
fildl
add
add
jl
push
lret
xlat
inc
dec
addr16
xchg
ja
jge
add
xchg
repnz
lock
pop
lret
movsb
cmc
push
jo
or
add
popf
sub
add
imul
jae
ja
dec
jnp
add
jmp
call
jb
je
jbe
inc
rolb
and
inc
in
adc
mov
imul
push
int
cwtl
xor
push
xchg
dec
adc
ja
cmp
popf
repz
lods
xchg
or
aad
add
and
add
jbe
js
jp
dec
add
xchg
lret
xchg
mov
leave
mov
add
cli
mov
mov
insl
sbb
or
ljmp
and
xchg
and
js
aas
rcll
sbb
jg
add
cmp
push
cmp
push
add
fs
dec
add
mov
dec
lret
ja
lock
xlat
pop
cmpsl
xor
out
cs
in
repnz
pop
aas
sbb
cmp
fs
jmp
sbb
jbe
inc
in
and
dec
rolb
cmp
cmp
or
dec
popa
xchg
or
movsbl
push
dec
pop
shr
xchg
cmpsl
sub
repnz
xor
push
add
iret
push
sahf
xlat
clc
add
call
push
add
push
jp
dec
xor
add
inc
loope
pop
stc
mov
xchg
rcrl
inc
mov
add
inc
clc
mov
sbb
mov
inc
add
je
adc
add
push
imul
movsb
inc
push
add
sub
mov
sub
push
xchg
mov
add
icebp
add
aas
pop
xchg
test
mov
push
rorb
mov
xor
imul
test
cmp
fiadds
and
add
and
mov
js
or
cmp
pop
pop
mov
cmp
cld
push
add
je
pop
push
lcall
inc
sbbl
ret
enter
mov
add
and
adc
loope
in
pop
xchg
dec
inc
pop
popa
pop
jno
jns
xchg
xchg
in
lcall
mov
addl
ds
push
mov
fs
pop
fists
lret
pop
xor
sub
ret
pusha
ror
jb
je
and
dec
dec
ret
loop
pmaxub
adc
xchg
add
in
in
mov
add
pop
pop
mov
sahf
aas
xor
js
pop
add
int3
shl
div
or
push
mov
adc
sub
add
and
jmp
push
push
aaa
add
jmp
scas
mov
cmp
nop
daa
mov
or
enter
pop
lds
rclb
leave
andb
shrl
jle
adc
rcrb
dec
xchg
fnstenv
sub
test
add
jl
stos
aas
jecxz
in
and
add
add
or
movsl
hlt
fiaddl
fnstsw
mov
fnstenv
popl
iretw
jl
mov
dec
jge
aas
pop
mov
scas
test
ret
mov
andl
mov
cmpb
adc
mov
mov
xchg
test
add
cmp
cmp
add
mov
mov
add
call
add
addr16
pusha
loope
cmp
add
sarb
add
xchg
jge
ret
or
in
outsb
jp
add
rclb
jle
popl
mov
out
jns
cmp
dec
out
sahf
push
add
adcb
hlt
mov
add
push
roll
add
icebp
clc
cs
mov
pop
lock
add
and
add
in
cs
add
xor
mov
fdivl
dec
out
sbb
jae
xor
pop
cmp
and
push
mov
lock
decb
and
dec
mov
jbe
mov
scas
mov
repnz
in
or
ljmp
jp
cmp
insb
aas
call
in
repnz
aas
subb
xchg
arpl
clc
add
cmp
aam
outsb
mov
nop
jg
sti
stc
add
jl
or
aaa
and
vmread
mov
enter
lcall
inc
add
xchg
sbb
cmp
ds
add
push
jecxz
repz
pop
lea
stos
lret
mov
mov
leave
stos
in
cld
addb
cmp
inc
cmp
and
sub
movsb
pop
cmp
arpl
insl
add
and
push
or
add
push
adc
pop
mov
cwtl
add
lcall
add
fsub
sub
cmp
ljmp
fs
aaa
in
adc
mov
sub
sub
stc
out
nop
sti
clc
or
add
adcl
ret
dec
add
push
loop
fcompl
pop
pop
add
std
jno
add
xchg
xchg
jl
cmp
add
dec
jae
sub
icebp
add
lret
add
jecxz
and
add
add
shll
cmp
loopne
es
and
cmp
pop
add
lods
mov
leave
adc
mov
sbb
cmp
fidivrs
add
pop
push
xor
loopne
mov
mov
add
or
adcb
cmp
dec
mov
out
cmp
add
loope
push
cmp
push
inc
mov
push
pop
lea
mov
aas
lock
fcmove
in
repz
add
mov
xor
setne
push
sbb
xor
popf
fiaddl
adc
dec
aam
mov
leave
add
enter
fcompl
sbb
enter
add
ret
xor
add
jl
jge
sbb
cmp
xchg
ds
aas
cltd
leave
popf
shll
call
shr
stc
mov
jb
dec
jl
incb
mov
lea
cmp
inc
add
js
dec
repz
cld
addr16
pop
or
inc
push
repnz
fs
and
jb
mov
add
cmp
and
into
stos
or
fimuls
inc
out
lods
push
out
addb
daa
xor
popf
pop
test
or
aaa
xchg
loopne
ret
aam
push
cmp
repnz
insb
fiadds
push
sub
pop
into
adcl
mov
ret
sbb
dec
aas
add
fwait
pop
and
add
mov
lods
int3
jo
loopne
les
lods
je
jbe
add
xchg
fldenv
push
sbb
roll
cmp
jmp
out
cld
pusha
aas
mul
sti
call
xor
push
mov
add
js
pop
xor
test
dec
nop
sarb
cmp
xchg
daa
loope
mov
mov
jmp
inc
push
push
add
jno
add
cld
dec
adc
push
cld
lret
mov
inc
loopne
pop
xor
cmp
daa
sub
pop
push
xor
fs
inc
pop
jo
je
js
lcall
test
add
jo
xor
and
mov
aaa
add
fcmovb
or
mov
insl
xorl
cmp
pusha
jb
loopne
dec
xchg
pop
adc
push
push
insl
cmp
addl
and
dec
and
sub
call
sub
mov
jle
add
add
adc
pop
xchg
faddl
repnz
push
call
xchg
dec
pop
jl
lock
outsl
subl
clc
ret
je
stos
cmp
popf
ja
add
jb
pop
cmp
aad
lock
jle
in
call
cmc
ret
sub
incb
add
add
mov
pop
pusha
ret
jmp
cld
push
add
push
sbb
aas
inc
movsb
das
push
cmp
mov
or
add
jb
pop
cmp
inc
cli
xor
in
pop
xor
aam
lock
in
add
stc
xor
sarl
fldcw
push
add
jnp
inc
dec
add
add
cmpsb
mov
add
pop
cmp
clc
jmp
mov
les
call
and
dec
sub
xor
scas
jmp
cwtl
inc
mov
out
in
icebp
xor
add
push
add
add
or
dec
sbb
inc
fisubrl
clc
lock
jb
adc
and
sub
iret
das
add
flds
cmp
mov
add
cwtl
call
add
and
push
inc
mov
fs
sbb
or
xor
out
mov
outsb
ljmp
jl
pop
jbe
js
push
ret
mov
adc
pop
cmpl
cmpb
add
push
lret
jne
rolb
or
test
add
and
dec
sub
inc
iret
push
add
jge
adc
sub
not
rcr
aas
or
rcrl
je
outsb
and
ret
jle
and
mov
push
rcrb
jo
pop
insl
add
in
and
dec
pop
clc
push
loopne
mov
hlt
leave
add
popf
je
push
rolb
mov
imul
je
jbe
push
mov
pop
icebp
ret
inc
sbb
dec
in
loopne
popf
jo
and
lcall
add
nop
push
adc
dec
repnz
or
add
cs
daa
inc
add
data16
xchg
sarb
add
test
daa
roll
cmp
jnp
xchg
inc
lahf
lods
dec
and
adc
test
cmp
cwtl
pop
add
lea
sbb
stos
mov
sbb
je
rcrb
add
subb
jb
loope
add
xchg
daa
cltd
fs
int3
adcl
push
add
push
adc
sbb
popa
ds
imul
push
mov
mov
mov
ffreep
pop
jle
sbb
add
adc
int3
aaa
hlt
add
mov
push
aas
imul
test
mov
or
pop
push
scas
jle
sbb
dec
sub
dec
add
sahf
pushf
adc
sbb
push
popa
sar
ds
out
add
fsubs
xor
cwtl
lock
add
dec
adc
das
call
int3
js
xorb
es
fiaddl
add
or
sbb
sarl
dec
and
stc
scas
popf
mov
fdivp
cmc
adc
jl
add
mov
je
jbe
js
jns
cmp
icebp
add
push
mov
push
in
add
hlt
jnp
lock
mov
add
fnstcw
add
mov
pusha
fisubrs
hlt
cmp
mov
or
dec
pop
sbb
mov
mov
sub
pop
or
xor
jmp
dec
mov
add
in
dec
cmp
xchg
ret
shlb
lock
add
mov
pop
jle
add
xchg
xor
movl
sbb
adc
push
rcrb
lods
mov
enter
sbb
fimull
pop
lcall
or
lods
inc
sbb
fdivrs
dec
jnp
push
sub
repnz
push
add
jo
cmp
ret
cmp
dec
aas
mov
cmp
clc
mov
mov
cmp
popf
ss
inc
mov
add
fcoms
xor
sahf
add
inc
insl
enter
mov
popa
dec
add
shll
cmp
fisttps
scas
call
sahf
or
test
cmp
xchg
adc
mov
adc
test
loopne
pop
mov
shrb
add
ret
loope
nop
in
mov
mov
pop
leave
xchg
aad
loopne
je
adc
out
lcall
cmp
add
jp
add
xor
xchg
add
cmp
popf
push
add
ret
xchg
add
loopne
add
adc
js
jp
dec
push
pop
jo
jle
repnz
bswap
loop
test
pop
mov
xor
ss
and
fists
clc
cld
aam
sbb
xchg
sub
inc
jle
in
pop
arpl
outsl
nop
xchg
mov
mulb
pushf
rcll
adc
add
mov
sub
xchg
add
mov
insb
mov
jl
xchg
pushf
out
repnz
pop
rclb
pop
adc
pop
mov
addl
data16
add
push
lahf
push
xchg
loopne
mov
pop
dec
test
insb
and
cmove
js
jl
dec
dec
clc
loop
in
std
lcall
cld
js
pop
lret
pushf
and
inc
or
sbb
and
adc
shlb
cmp
xor
cmp
leave
mov
pop
nop
out
aas
sets
pushf
test
movsb
jmp
mov
dec
and
push
loope
dec
repz
jmp
insb
bound
add
das
movsb
inc
add
mov
montmul
cmpsb
lret
int3
add
adc
jl
lock
push
mov
ret
insb
mov
pop
nop
repnz
andl
push
cmp
in
cmpb
and
test
cmc
movsb
jg
jmp
in
adc
pop
outsl
add
leave
aam
into
pop
add
sub
xchg
in
lock
iret
sbbb
fs
lret
xchg
jl
jo
adc
add
jnp
mov
pop
mov
cmp
push
and
call
gs
fs
nop
lea
cmp
cmpb
sub
pop
das
or
inc
daa
sub
add
push
mov
loope
pusha
add
xchg
mov
inc
mov
fs
add
sub
jge
ret
testl
push
mov
jmp
adc
xchg
nop
pop
cs
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
xor
rol
add
add
pop
or
hlt
add
dec
adc
adc
nop
mov
test
pop
and
cltd
sub
ret
add
orb
or
add
xchg
mov
lea
add
sysexit
test
inc
and
mov
add
push
push
sbb
cltd
or
push
ljmp
sub
cltd
add
inc
add
loopne
sbb
mov
add
push
pop
pushl
mov
push
add
add
mov
cmpb
fisttpl
leave
add
js
scas
add
fisttpll
shr
in
cmp
add
in
sub
add
add
dec
jge
dec
loopne
sbb
pop
bound
stc
add
rep
lea
loope
sahf
cli
pop
add
mov
fwait
cmp
cmpb
or
test
jg
aam
lcall
ja
add
sbb
shlb
ret
call
mov
mov
cmpsb
jle
push
sub
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
stos
shlb
pop
jnp
inc
jl
js
pop
and
sbb
add
out
push
and
add
lods
push
adc
add
jmp
push
xchg
dec
leave
inc
adc
flds
and
cmp
add
adc
das
add
into
mov
roll
ret
xchg
sbb
lea
mov
push
lods
roll
fcoml
mov
out
add
in
or
xor
xchg
dec
add
fcom
and
or
pop
push
xchg
ret
inc
add
xchg
cmp
pop
pusha
je
jl
pop
dec
shrl
pop
and
add
clc
rorl
and
imul
add
sarb
neg
push
mov
add
popf
enter
and
dec
xlat
jp
inc
fnstsw
movsb
mov
pop
in
popa
add
mov
clc
pop
inc
dec
popf
add
imul
mov
cmp
sub
sbb
cmp
pop
aas
inc
mov
out
pushf
sti
jle
cmp
add
insl
and
mov
add
js
add
pop
out
and
repnz
and
das
cli
or
ljmp
push
out
inc
rolb
jle
or
add
gs
pop
int
cmp
add
adc
sti
inc
in
es
mov
movsb
in
cmpsb
mov
cmp
or
ljmp
pop
xor
xchg
add
mov
jge
jmp
test
and
add
jno
mov
cli
adc
and
xor
inc
aas
test
clc
jl
and
fnstcw
fldl
mov
dec
push
xchg
hlt
add
daa
stos
aas
pop
mov
sub
clc
add
jg
hlt
mov
incb
xchg
addb
push
add
dec
movsb
in
mov
ljmp
pop
pop
sub
xor
mov
lea
mov
lret
add
dec
cld
or
aas
mov
add
popf
es
jnp
dec
aam
cmp
cmp
aas
add
imul
jecxz
xor
jnp
xchg
and
inc
jbe
icebp
pop
add
xlat
in
mov
cwtl
out
add
add
loopne
mov
mov
mov
jge
mov
int
stc
dec
into
cmp
inc
mov
push
push
in
fs
add
mov
rcr
add
rcll
call
insl
sub
pop
xor
rolb
fstl
repnz
add
and
add
lods
dec
nop
jno
add
push
inc
xlat
inc
sub
or
emms
jmp
pop
xor
jnp
cwtl
cmpsb
sub
int3
mov
stc
jbe
out
mov
imul
scas
aam
add
movsb
or
inc
test
lret
xlat
pop
mov
jno
add
push
iret
fcomps
pop
xor
jb
sub
push
decb
add
or
xor
jmp
jge
inc
shl
ror
test
or
xchg
and
ja
rcrb
and
xchg
imul
push
add
test
jnp
outsb
mov
dec
xchg
pop
fiaddl
pop
jae
sbb
jp
cmp
nop
outsb
add
dec
lds
in
mov
cmp
push
mov
add
sub
rolb
sub
jg
cmp
mov
jmp
and
sub
sub
ret
push
lcall
jge
jbe
rolb
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
inc
mov
call
xor
jae
nop
push
add
inc
inc
lock
dec
sub
nop
push
roll
adc
leave
add
call
roll
aad
sbb
out
minps
mov
popa
add
jo
loope
mov
jnp
add
pop
push
imul
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
mov
shlb
outsb
je
adc
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
jb
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
push
add
clc
sbb
nop
lcall
in
out
mov
fcomps
mov
sub
xor
jo
sub
mov
fimuls
inc
jo
lock
pop
outsl
mov
sbb
sbb
and
sub
stos
stos
repnz
gs
fwait
dec
xchg
sub
fs
mov
xor
sbb
dec
and
pop
fiadds
pop
adc
testb
push
test
jne
mov
and
mov
adc
pop
fwait
repz
mov
mov
mov
jb
popf
sub
xor
xchg
dec
push
jmp
and
and
shll
mov
and
push
and
xchg
push
sbb
int3
int
data16
jbe
xchg
and
push
dec
fcmovnu
xchg
sub
arpl
jp
loope
and
orl
les
mov
lods
adc
out
lods
in
cltd
jns
jle
mov
sub
push
jne
stos
addr16
pop
lds
call
or
mov
add
in
cs
jnp
sahf
push
icebp
xor
lock
in
inc
scas
push
pop
dec
js
adc
cld
cmp
xor
repz
sarb
sbb
loop
movsb
dec
outsb
mov
aam
lock
fists
mov
jmp
movsl
out
dec
pop
xor
aam
jb
jl
cli
cmp
pop
jne
pop
jo
incb
adc
pop
jg
add
cmp
sbb
cmp
ljmp
and
sub
popa
repz
lret
clc
loopne
repnz
sbb
cmp
insb
mov
fdivs
sub
dec
xor
cmpb
inc
filds
jnp
movsb
xchg
sub
cmc
pop
jbe
in
mov
sub
mov
adc
or
sbb
in
fsubrl
mov
adc
and
mulb
in
inc
xor
mov
loopne
xchg
inc
and
add
je
inc
out
add
stc
fcompl
jg
mov
mov
xchg
aam
xchg
dec
cmpl
mov
dec
mov
std
jg
push
outsb
cmp
fbld
nop
out
pop
mov
sbb
inc
ljmp
and
dec
bound
enter
sbb
jae
in
inc
nop
ss
mov
push
imull
movsb
mov
push
jl
push
nop
jo
adc
sbb
xchg
xchg
sub
xor
aaa
xor
inc
pop
cmc
in
push
add
inc
out
sbb
mov
xchg
pop
sub
cmp
fdivrl
cltd
mov
xchg
xor
adc
std
dec
aam
and
jns
stos
loopne
mov
mov
inc
out
outsl
jle
pop
jl
push
push
sbb
or
fstpl
mov
bound
aas
jle
ja
pushf
leave
push
out
mov
pushf
or
mov
shll
es
xchg
out
test
ljmp
adc
rcrb
sti
cmc
fimull
das
into
add
shrl
mov
cs
addr16
fnsave
out
pop
xor
or
fstpt
shr
mov
jle
pop
pop
lods
add
in
xchg
cs
and
cltd
adcl
leave
or
xchg
xchg
andl
shll
btr
adc
dec
je
push
adc
xlat
inc
outsb
icebp
xchg
sub
mov
stos
mov
mov
sbb
adc
and
jmp
cmp
stos
pop
aas
add
mov
xor
or
and
ja
push
sbb
dec
mov
inc
mov
iret
xchg
xchg
lcall
dec
push
popa
dec
dec
and
lds
and
pusha
jle
cmp
push
pushf
daa
xchg
fcoms
push
cmp
push
xor
pusha
xchg
xchg
ret
or
sbb
in
mov
ficomps
push
std
fwait
xchg
add
xor
cmc
fwait
mov
or
mov
shlb
jl
sti
in
xor
int3
inc
jno
leave
or
mov
xor
subl
test
or
ja
call
mov
jns
js
inc
int3
in
mov
arpl
cwtl
add
dec
lret
add
cld
adc
mov
mov
int3
fmull
addr16
mov
xchg
jmp
aad
addb
and
xor
ljmp
adc
cmp
in
adc
hlt
movsl
outsb
and
mov
add
and
cli
stc
sub
pusha
fisubrs
dec
call
or
mov
mov
and
add
jmp
in
cmp
mov
push
cmp
stos
pop
mov
lods
mov
xchg
push
dec
pusha
adc
push
adc
stc
pop
into
xor
cltd
out
sbb
dec
adc
test
add
rcll
stos
lods
sbb
mov
jae
push
clc
adc
notl
push
ja
add
nop
jg
jns
lcall
es
scas
xor
daa
pop
je
xor
inc
mov
cmp
sub
mov
pop
lret
sub
sbb
inc
enter
sahf
jle
popw
adc
aam
push
fidivs
pop
xor
lcall
rolb
jge
dec
adc
adc
sti
ljmp
sub
ficoms
pop
out
das
xor
rcrb
push
push
pushf
cmp
pusha
cltd
mov
add
aad
push
push
xchg
add
sbb
std
jne
pushf
fsubl
popa
push
cmp
in
hlt
inc
test
sbbl
lret
xchg
or
cld
in
sub
pop
xor
and
dec
clc
cmpsb
inc
stos
imul
xchg
adc
xlat
jae
int3
int
add
xchg
inc
pop
jge
sub
dec
inc
in
clc
push
xor
xchg
xchg
hlt
mov
in
and
dec
mov
inc
es
adc
cmpsl
xchg
call
pop
dec
push
scas
cmp
push
es
mov
dec
sbb
xchg
jl
cmp
sub
sbb
xchg
push
outsb
pop
xor
sub
inc
jns
cld
mov
mov
movsb
insb
mov
push
mov
mov
pop
jno
xor
imul
mov
out
lret
jg
stos
out
push
cmpsb
pop
fdivrl
icebp
and
ficomps
cld
cmp
sbb
or
fistpll
dec
sub
pusha
aas
test
sarl
loope
mov
adc
or
int3
xchg
ficompl
add
arpl
out
push
in
sub
ret
shlb
bound
xor
push
sbb
or
or
cwtl
in
imulb
jne
dec
lock
mov
jg
sbb
stc
mov
and
popf
adc
fwait
add
push
sub
mov
fnsave
popf
rcl
xor
out
xor
ss
cltd
adc
out
xchg
inc
add
push
repz
jo
mov
pop
adc
test
nop
xlat
dec
into
dec
std
jmp
pop
and
mov
jae
arpl
rorb
cmpb
clc
xchg
cwtl
fldl
mov
test
cmp
repnz
cmp
jle
mov
mov
adc
push
or
insb
lret
xchg
mov
iret
inc
push
dec
fmul
loopne
ret
adc
pop
dec
lea
repnz
cmp
sbb
inc
mov
shr
addr16
adc
stos
jmp
inc
mov
ret
cmpb
movsb
cli
and
push
jmp
cmp
imul
add
xchg
arpl
xor
jp
xor
repz
jne
test
mov
enter
mov
loope
ss
xchg
divl
subl
mov
cmpsb
and
lds
rcr
cmp
dec
out
mov
inc
mov
sbb
xchg
mov
insb
mov
sbb
aas
movsl
repnz
out
dec
cmp
xor
fldl2e
fnsave
mov
lds
mov
pushaw
inc
add
mov
fcoml
icebp
push
ja
cmpsl
jecxz
int3
jbe
dec
jae
fmul
in
in
dec
paddsb
inc
aas
jl
pop
xchg
cwtl
push
jmp
jo
js
xchg
sti
data16
into
mov
xchg
mov
stos
enter
xlat
lret
incb
pop
filds
lods
stc
mov
lods
add
cmp
mov
jno
jo
repnz
xor
cli
jno
sbb
mov
mov
xchg
pop
xchg
pop
mov
cmpb
insl
insl
pop
push
mov
jp
mov
sbb
das
push
lea
fwait
sub
ljmp
pop
xchg
mov
mov
fcmovnu
sbb
xchg
outsb
les
mov
add
imul
lock
and
adc
inc
jg
xchg
repnz
in
pop
adc
fwait
or
outsl
pop
into
btr
ljmp
ja
insl
push
push
in
test
push
sbb
icebp
jmp
negl
mov
jmp
fs
int
out
pop
iret
jp
cltd
jecxz
mov
dec
cmpsb
pop
in
pop
test
inc
icebp
inc
out
movhlps
and
xor
adc
adc
sarl
popf
cmp
cli
or
lahf
nop
lock
dec
push
lods
repnz
jbe
ja
fisttps
adc
jno
ret
xor
cmpsb
cwtl
dec
in
dec
pop
cmpsl
imul
jp
aaa
repz
cmp
sahf
mov
pop
in
sbb
dec
cmp
out
xor
pop
nop
xadd
mov
inc
cmp
adc
xor
pop
lds
hlt
pushf
adc
ss
outsl
out
mov
adc
frstor
sarb
mov
ja
cmp
in
fwait
jb
nop
sbb
cmp
into
xor
repz
jb
inc
cli
loop
push
pop
fsubrl
mov
or
mov
xchg
and
xchg
jp
insl
adc
xor
in
stos
jmp
notl
jecxz
xchg
fwait
std
pusha
shlb
xor
pop
mov
and
das
dec
push
dec
adc
adc
test
dec
and
repz
cmpsl
mov
pop
add
adc
sub
jno
incb
xchg
in
repnz
test
pop
lea
test
pop
fiaddl
mov
mov
jecxz
or
addr16
stos
cli
mov
or
cmpsl
mov
mov
add
or
adcb
sub
pop
mov
ds
dec
cwtl
repz
push
push
int3
adc
mov
std
movsl
dec
adc
test
jnp
xchg
fildl
push
mov
loopne,pn
jbe
dec
addr16
cli
pop
and
shrl
mov
push
loope
repnz
mov
sub
ret
fcomps
pop
push
inc
nop
or
mov
inc
in
xchg
aad
adc
inc
adc
mov
dec
cmp
orl
push
cmc
dec
mov
and
scas
and
cld
je
cmp
inc
and
mov
add
dec
sub
bound
test
sarl
fisubrl
clc
lock
ret
lcall
icebp
pop
mov
fucom
mov
daa
xchg
mov
mov
dec
xchg
repnz
int3
mov
shlb
sbb
je
data16
pusha
xchg
xor
sahf
rcll
int3
call
mov
push
outsb
mov
in
out
mov
sbb
push
orb
push
or
jmp
mov
lahf
xchg
or
pop
adc
sbb
inc
les
cld
jo
or
stc
pop
ret
sub
pop
jge
jle
psrlq
fists
adc
dec
jl
xchg
xchg
mov
mov
cmp
xchg
stos
mov
mov
roll
ret
and
ds
rcrl
fldenv
pop
lock
les
push
cmp
rclb
dec
push
rep
rorb
inc
aam
mov
cmp
cmp
testb
loop
jae
rclb
push
nop
out
lcall
aad
mov
fsubs
hlt
jne
loopne
aaa
and
inc
clc
pop
pushf
jb
adc
mov
pop
sbb
imul
test
adc
add
ret
jmp
xor
mov
lea
or
loope
adc
push
mov
das
add
mov
mov
mov
xchg
push
loop
rcll
pop
pop
cmp
sub
adc
mov
xchg
dec
fistl
movsl
and
fsubl
add
adc
xor
mov
push
shll
pop
cmp
daa
aas
test
add
mov
pop
mov
push
cmpsb
pop
imul
or
mov
test
call
sub
inc
and
lds
jmp
stc
andl
pusha
push
rcl
xchg
jge
xlat
js
test
dec
adc
push
inc
mov
movsb
xor
push
adc
and
arpl
adc
dec
push
pop
fcoms
adcb
shrl
test
ljmp
dec
pop
sub
fsubr
aam
and
xchg
inc
xchg
imul
int3
sub
je
lret
repz
jne
popl
sbb
xchg
out
outsb
int3
push
mov
int
inc
mov
jl
push
mov
movsl
adc
mov
sbb
pop
lds
es
add
pop
inc
imul
test
cmpsb
or
pop
sub
add
imul
mov
inc
scas
aam
ret
and
pop
pop
stc
or
xlat
popa
out
lods
dec
sub
lock
xchg
arpl
rorb
sbb
fdivs
mov
loopne
and
cwtl
xchg
push
push
iret
decl
mov
lods
sub
dec
clc
push
stos
les
rol
js
fiadds
gs
jne
cltd
lret
pop
xchg
jns
mov
ss
sbb
cmp
inc
or
cs
add
mov
jo
cmp
push
popa
xchg
lods
shrl
aaa
adc
add
sti
mov
cmp
aas
mov
sbb
or
shrl
sahf
cmp
push
fdivrp
lock
xchg
or
in
sahf
mov
inc
in
jp
mov
add
jno
out
jp
pop
lods
push
dec
les
push
adc
ljmp
rorb
adcl
pushf
push
add
out
popa
inc
outsb
ret
stos
mov
xor
cli
push
lahf
loope
adc
sbb
scas
cmpl
outsl
add
add
outsb
push
pusha
loope
lahf
in
pusha
imul
ficoml
push
add
add
iret
xchg
pop
xor
fidivl
lods
daa
hlt
testl
mov
stc
hlt
jl
push
sub
call
cmp
outsl
or
or
icebp
mov
clc
jb
cwtl
xchg
out
push
shlb
push
popf
test
jl
sub
scas
mov
cmpsl
sub
mov
testl
aam
xor
mov
rclb
jno
dec
mov
xchg
std
stos
fwait
lahf
shll
inc
out
lcall
fnstenv
jecxz
dec
or
mov
imul
roll
repz
mov
fadds
jnp
mov
stos
dec
bound
fbstp
sub
push
push
push
mov
test
fsubl
dec
dec
sub
js
mov
repz
ds
add
outsl
jl
in
cmp
jmp
and
andb
int3
push
mov
pop
pop
into
sub
std
push
cmp
mov
mov
bound
gs
in
test
mov
sub
psraw
in
jle
int3
mov
fistpll
jle
mov
dec
mov
pop
dec
rorl
mov
loop
add
cmp
outsb
mov
test
stc
and
xor
arpl
mov
xor
call
jecxz
or
packuswb
popf
lock
dec
jnp
insb
sbb
das
out
addb
xor
pop
jp
inc
add
pushf
push
adc
inc
rorl
cli
out
mov
daa
scas
loop
pop
test
xor
sbb
insl
shlb
das
mov
jns
ret
lahf
lcall
lods
xchg
xor
pop
inc
in
and
mov
frstor
fnsave
popf
inc
push
loope
das
pop
fidivrl
mov
jge
out
cmp
cli
clc
int3
addr16
pop
cmpsb
mov
mov
aas
inc
arpl
sbbb
mov
test
dec
sbb
inc
out
adc
xor
cs
cmp
sub
push
mov
fxch
rorl
bound
fisubrs
and
mov
popa
pop
adc
sub
test
inc
cmp
in
xor
push
push
xchg
cmpsb
inc
jmp
cmpsb
cmpsb
fistps
pop
negl
cmpsl
xchg
cwtl
mov
xchg
mov
cmp
into
call
outsl
mov
daa
fisubrs
and
enter
or
lahf
push
sbb
stos
negb
or
xor
sbb
mov
cmp
flds
cs
ds
stc
xor
lock
decb
daa
pop
mov
add
jae
push
add
cmp
outsb
sbb
adc
xchg
or
lahf
add
shlb
add
mov
xchg
xchg
mov
cmpb
sub
pop
fmuls
and
sbb
aam
lods
das
pushf
scas
pop
dec
jecxz
mov
and
jge
out
mov
test
adcl
rcr
push
into
push
pop
sbbl
or
fiaddl
xchg
popf
movsb
cs
subl
mov
stos
pop
sbb
jbe
or
ss
fldcw
sbbl
push
insl
inc
test
or
lcall
or
jmp
fstl
pusha
mull
aad
lods
adc
rorb
cmpsb
out
outsb
sahf
test
sahf
add
movsl
div
cs
adc
or
jne
add
fisubrs
adcl
jge
cltd
jle,pn
pop
cmpsb
adc
addl
inc
in
lcall
nop
jle
mov
cltd
jae
cli
xor
xor
mov
pop
inc
fadds
sqrtps
cld
mov
hlt
and
sbb
xchg
sbb
inc
sub
jmp
lock
es
push
push
push
adc
mov
fcoms
ss
mov
push
pop
test
ret
jge
lods
testl
cmp
sub
popa
pusha
cmp
mov
movsb
sub
cmp
cmp
rclb
sub
ds
add
mov
or
adc
jmp
inc
inc
movsl
adc
fdivs
pop
jmp
lcall
pop
scas
adc
push
lods
das
scas
out
lock
or
sbb
mov
pop
push
adc
lock
es
ret
or
lahf
scas
cmp
enter
mov
sub
push
sti
mov
push
shll
or
aad
xchg
mov
inc
adc
jne
stc
insb
popa
lret
cmp
fld
and
sbbl
and
push
jge
xor
pop
sub
mov
jge
xlat
lds
inc
inc
push
xchg
loop
inc
or
inc
test
addr16
js
xor
push
cmp
fsubrs
icebp
mov
sbb
push
cmp
jg
mov
popf
int
icebp
mov
les
data16
push
cld
test
pop
ja
lret
pop
out
or
push
xchg
pushf
out
add
aam
fildll
and
nop
clc
rclb
adc
sub
push
int3
inc
jnp
add
mov
xor
ficompl
or
outsb
aad
mov
push
mov
int
ja
fdivr
mov
sbb
add
xor
push
mov
dec
and
fnstenv
cmp
inc
sub
loop
or
mov
lcall
lcall
movups
je
cmp
push
dec
loopne
mov
push
jl
sbb
jl
pop
pop
js
mov
cmp
sbbb
aam
test
data16
mov
xchg
hlt
xor
ljmp
dec
out
fcoml
adc
in
dec
in
and
sub
test
flds
aam
lahf
out
cmpsb
xor
stos
call
pop
push
push
xlat
pop
lock
fwait
mov
xchg
mov
push
adc
lock
shrb
in
dec
cld
xchg
xchg
and
dec
roll
jg
add
scas
mov
mov
lea
push
jb
jmp
ret
movsl
out
xor
adc
loope
jb
flds
lds
lret
jae
pop
xchg
leave
xchg
jnp
cwtl
jo
adc
cld
inc
in
in
dec
div
xlat
jno
add
adc
std
out
test
sub
and
xchg
rcr
frstor
fnstsw
dec
mov
and
lock
fcomp
aam
pop
xchg
jge
pop
push
sbb
sub
adc
pop
sbb
test
in
scas
or
gs
popa
mov
imul
xor
movsl
stc
jnp
arpl
fidivrs
inc
insb
into
out
xchg
loop
test
leave
push
adc
jle
sbb
or
xlat
popa
lahf
add
lods
outsb
out
xor
lods
ja
xor
mov
push
jne
insb
cmp
loopne
bound
sti
xlat
shll
jo
in
in
mov
call
mov
addb
dec
mov
cmp
rcll
add
cmp
push
mov
out
pop
outsl
inc
rcrb
push
mov
mov
iret
pop
xor
mov
adc
push
jno
xor
cmpsb
or
jl
call
iret
aam
daa
mov
dec
and
addr16
fildll
mov
nop
lods
sarl
push
xchg
inc
les
and
ja
insb
fs
out
cmp
scas
dec
sub
mov
mov
dec
mov
pop
sub
jge
pop
iret
or
ffreep
addb
fiadds
out
mov
dec
xor
nop
popa
aam
cmc
xchg
push
cs
add
aaa
push
orb
xchg
pop
dec
add
pusha
cltd
rcl
xchg
enter
jge
out
out
pop
pusha
xor
ljmp
mov
sbbl
sahf
push
and
or
out
stos
push
cmp
fdivs
pop
mov
jo
ja
adc
jg
adc
int3
push
adc
jne
mov
inc
stc
andl
movsb
mov
and
out
push
add
and
xchg
jo
adc
rcrb
cmc
pop
gs
shrb
out
shll
dec
jmp
fidivrl
addl
or
adc
rolb
ret
cmp
pusha
and
push
repnz
cli
sahf
inc
mov
xchg
in
fninit
pop
xchg
xchg
and
cmp
ror
fmuls
xchg
fdivr
js
fcomps
lret
cmp
lock
mov
pop
or
jge
popf
imul
dec
jge
test
out
adc
xchg
cmp
mov
xor
enter
ret
outsl
gs
inc
xchg
shrl
mov
add
int
test
sub
js
mov
mov
mov
cltd
pop
or
out
push
inc
xchg
lcall
out
mov
add
into
cmp
xchg
incb
lret
aam
xor
fisttps
push
add
scas
adc
loope
adcb
xor
lods
push
pop
bound
jg
add
bound
xorl
cmc
fs
in
mov
aam
jge
sub
in
negb
pushf
dec
fsubl
movsl
sbb
mov
cld
mov
mov
xlat
jb
xchg
and
dec
and
test
add
mov
loop
cmp
push
hlt
mov
mov
insb
mov
sbb
inc
leave
mov
push
inc
cli
lahf
jne
push
scas
ret
mov
sbb
lcall
mov
test
mov
inc
lahf
lret
mov
dec
dec
mov
sbb
push
icebp
mov
and
fidivrs
and
fdivrs
or
fisubs
stc
push
cmp
adc
in
sti
lds
inc
mov
cmp
mov
sub
test
jne
hlt
lahf
xchg
adc
pop
cmp
cwtl
mov
test
cmp
lock
cmp
push
fsubr
iret
add
jb
jns
push
add
scas
mov
sbb
fimull
scas
daa
or
jns
push
jne
insb
add
sbb
mov
mov
mov
mov
cli
movsl
xor
mov
daa
xchg
lea
mov
outsl
jae
repz
ds
mov
mov
sub
push
add
push
je
jno
loopne
jbe
ss
sbb
rcl
jle
cmp
popa
jp
iret
add
pop
dec
int3
xchg
jg
call
xor
mov
and
inc
testb
adc
leave
push
repz
cli
add
push
xor
mov
stos
push
cwtl
sti
fmulp
call
or
and
cld
hlt
cld
fldt
ficoml
je
fucomi
mov
xchg
and
inc
cmp
xchg
mulb
pop
push
sahf
mov
mov
push
testl
jae
inc
mov
mov
test
test
mov
dec
push
push
cmp
repnz
or
test
repz
jbe
rorb
dec
fsubrl
int
mov
stos
in
addb
xor
pop
xor
sti
leave
dec
scas
jnp
push
imul
fsubl
xor
or
fcomip
cmp
pop
daa
dec
iret
test
inc
xchg
mov
jmp
out
push
aam
xchg
lcall
cmp
in
cld
stos
inc
sub
push
sub
int3
pop
scas
fimull
mov
dec
sbb
mov
outsb
xor
in
ja
and
cmp
mov
and
or
call
xor
pop
pop
lods
mov
sub
jbe
ss
pop
adc
push
mov
aam
out
or
xor
ljmp
int
pop
sbb
xor
pop
inc
scas
mov
pop
fidivl
bound
inc
pop
sub
dec
add
rol
js
lds
idiv
and
fs
lock
mov
add
je
test
roll
inc
sbb
pusha
dec
or
xchg
xchg
or
push
and
stos
in
out
xchg
mov
pusha
cmp
jo
aaa
addb
ret
push
or
adc
xchg
leave
or
sarl
mov
insb
or
shrl
jp
mov
pop
and
pop
flds
gs
js
cli
mov
and
mov
cmp
push
ficoms
or
scas
repnz
cmp
sti
mov
daa
add
fidivrs
fs
clc
repz
sbb
add
imul
mov
mov
loopne
pop
cmp
popf
shrl
daa
shll
xchg
sbb
call
and
mov
mov
mov
and
stos
push
sub
mov
mov
hlt
loopne
call
lods
fstpt
jne
or
inc
push
addl
mov
cmc
loop
shrb
mov
dec
mov
fdivrs
push
gs
mov
and
inc
mov
push
jno
mov
and
int
shlb
pop
jecxz
clc
insb
inc
mov
iret
push
incb
test
idiv
xchg
iret
or
hlt
movsl
xchg
pop
shll
and
or
xchg
loope
jge
jl
add
leave
jl
fsubr
pop
rcrl
jns
dec
rorl
mov
mov
adc
push
push
sub
xchg
loop
test
push
negb
mov
mov
into
sbb
xor
jo
mov
jb
ret
cli
movsb
fidivs
or
xor
ret
push
out
fwait
sbb
rorl
mov
jb
and
popf
cmc
shll
mov
cmp
call
xchg
or
mov
imulb
shrb
std
out
mov
orl
and
sub
xlat
adc
xchg
hlt
imul
xor
sub
jge
jne
or
and
test
xor
and
adc
cmp
std
sub
inc
xchg
cmp
sub
in
iret
xchg
scas
ret
sbb
out
mov
lcall
std
test
shl
pushl
in
std
sbb
lahf
mov
lahf
out
or
jmp
adc
pop
stc
leave
cmc
lcall
adc
movsl
mov
fst
sub
out
mov
test
lret
and
xchg
jp
fwait
xor
inc
dec
sub
pop
stos
cmp
lcall
xchg
mov
mov
xor
xlat
stos
and
lret
in
lds
sbb
test
mov
les
push
loopne
mov
inc
ljmp
shrl
jg
das
ret
xchg
mov
std
and
and
xchg
out
mov
arpl
jo
xlat
jecxz
sbb
lods
out
test
adc
imulb
sahf
ficoms
dec
fadds
lods
adc
jae
sub
sub
add
movsb
popl
mov
shl
clc
dec
jo
pop
cmpsl
pop
dec
icebp
jge
xor
repz
lret
outsl
pop
xor
mov
jle
fwait
push
xor
out
fidivrs
push
sbb
push
cld
idivl
addl
loope
xchg
or
xchg
fstpl
cmovne
dec
das
lea
lock
test
shlb
outsl
cmpsl
xlat
add
fsubs
shrl
rcrl
popa
mov
loopne
sbbb
sbb
xor
js
add
mov
cld
ljmp
xor
test
mov
pop
jecxz
pop
jae
fisubs
fcomps
rcr
inc
ret
ja
sarl
mov
sbb
repnz
or
sbb
fcmovnb
pop
jp
mov
jne
adc
mov
jge
or
add
fiaddl
jnp
and
lret
shrb
sub
jge
push
push
jae
lret
outsb
mov
into
pop
mov
mov
jp
mov
faddl
sub
jle
in
popf
mov
xchg
xchg
push
or
cs
testl
lea
hlt
shl
rcrl
xlat
pop
dec
adc
or
add
std
push
jp
outsl
push
je
popf
loop
and
push
mov
aas
sbb
dec
add
dec
insl
jge
cmc
sti
mov
cmc
pushf
or
repz
sti
imul
cmp
sub
mov
jg
add
adc
mov
pop
xor
aas
fst
mov
test
imul
mov
into
pushf
add
in
jge
addr16
pop
cmp
xchg
sub
les
das
mov
clc
enter
js
xchg
mov
sti
js
xchg
jns
fstpl
test
xchg
add
stc
insl
pop
int3
hlt
xor
lock
inc
in
xchg
fidivl
push
mov
cli
rolb
add
in
out
je
lds
fadds
pop
movsl
sahf
cmpsl
pop
aad
or
out
cmpsb
mov
js
out
dec
pop
daa
faddl
loopne
iret
dec
call
cmp
dec
xchg
add
xchg
jno
xchg
scas
or
je
jne
mov
movsl
mov
inc
push
or
xchg
loope
jnp
jg
adc
xor
lea
inc
push
stos
mov
add
pcmpgtd
lcall
xchg
aam
adc
repz
mov
push
adc
dec
push
lds
jg
dec
sbbl
movsl
in
xor
mov
out
push
sub
mov
jno
gs
sarb
sub
out
jp
test
lahf
decl
add
push
jb
push
mov
filds
add
pop
cs
inc
je
xlat
cmpsb
adc
outsb
data16
neg
test
jge
xchg
aaa
mov
add
lcall
mov
lret
es
out
xchg
sub
int3
inc
and
xchg
sbb
loopne
sbb
clc
xchg
sub
sub
jns
stos
xor
popf
mov
mov
scas
fcmove
test
ds
in
popa
mov
xchg
inc
pop
je
pop
push
loopne
popf
jae
in
inc
sub
mov
xchg
icebp
ja
mov
std
pop
sar
adc
xchg
inc
lods
cltd
jo
push
test
outsb
sub
sub
xchg
sbb
inc
push
jae
int3
ret
jge
pop
adc
movsb
cltd
push
adc
mov
jnp
mov
and
test
popa
sub
iret
jo
cmpsb
test
xor
out
push
inc
je
imul
jns
push
xor
push
int3
ret
sub
jo
stc
leave
push
in
jge
push
les
add
adc
dec
cld
or
sbb
sbb
pop
stos
scas
jae
fcmovnb
arpl
nop
pop
clc
les
fadds
dec
inc
call
mov
dec
cmpsl
dec
fwait
mov
jecxz
scas
xchg
lcall
fcom
lret
inc
repz
dec
pop
fdivrl
or
and
movsb
pop
mov
test
sbb
negl
pop
sub
cwtl
xlat
cli
sub
mov
add
fdivrl
mov
ja
je
outsl
and
outsl
mov
les
movsb
mov
pop
in
pop
repz
xor
push
xor
xchg
pop
inc
sbb
jle
lods
inc
out
mov
rorb
xor
mul
sti
jbe
mov
popa
xor
mov
and
xchg
int3
sbb
push
pop
ljmp
fstps
and
cmp
into
call
mov
xlat
daa
jge
test
and
repnz
out
insl
int3
outsl
or
mov
mov
xchg
lret
enter
pop
jnp
push
dec
jg
das
mov
ret
inc
adc
arpl
pop
fsubl
pop
mov
sub
mov
push
inc
add
fsubrp
jp
push
sti
mov
popa
push
fmull
add
cs
and
ret
fidivs
insb
push
fwait
ljmp
out
dec
xor
mov
outsb
jp
rol
cmc
push
xchg
es
mov
mov
sti
mov
adc
insb
enter
xor
lock
test
mov
inc
icebp
stc
aad
mov
icebp
daa
jl
mov
enter
mov
mov
sub
mov
pop
xchg
inc
xchg
repnz
das
aad
bound
adc
in
jne
mov
out
push
std
sub
sub
cs
idivb
dec
in
bound
push
pop
clc
div
arpl
scas
sub
or
mov
lahf
mov
push
add
add
repz
jmp
xchg
sbb
push
dec
outsl
ja
in
add
out
adc
stos
fcomip
movsb
addr16
outsb
sahf
push
mov
push
test
jecxz
xor
mov
pop
sbb
sbb
outsl
lods
mov
loope
push
dec
test
mov
sub
arpl
pop
xor
repz
addr16
rcrb
call
into
in
das
nop
in
cmpsl
daa
or
jae
xor
cmp
scas
or
fsubrl
loope
or
cmc
xor
shrl
sub
in
cmpsb
and
add
or
incb
or
push
ljmp
cs
call
and
jb
jnp
aam
pop
gs
idivb
cmp
or
mov
pop
xchg
jge
mov
cmp
inc
xchg
dec
gs
mov
jge
mov
shll
or
cmp
pop
lret
iret
fstps
push
mov
xchg
and
adc
gs
adc
fisubs
push
cwtl
fcmovbe
cli
out
imul
icebp
addr16
adc
pop
ds
jo
push
push
jmp
inc
jae
sub
sbb
jecxz
call
aam
add
inc
test
and
jecxz
loop
repnz
and
repz
mov
or
scas
xor
push
test
cs
rep
mov
daa
jle
adc
rol
popf
je
sbb
jbe
push
in
fisubrs
in
test
sbb
mov
mov
push
insl
pop
sub
sbb
push
and
jno
jecxz
mov
pop
fs
enter
fcomps
mov
cmpsb
sub
mov
mov
sbb
xchg
lods
push
test
fimuls
jno
sbb
xchg
es
adc
sub
stc
add
loopne
lods
out
rorb
pop
mov
mov
xchg
dec
push
adc
pop
insb
xchg
imul
push
sub
jns
in
xchg
mov
pop
or
pop
repz
and
cmpsl
ret
add
fldl
adc
fidivrs
jb
sahf
sub
call
ljmp
mov
sub
imul
xchg
test
jo
inc
cmp
cwtl
aas
dec
xchg
add
jle
lock
xor
bound
and
adc
mov
xor
ret
add
xor
das
stos
or
stos
into
scas
add
addr16
xor
mov
mov
sahf
add
or
std
jnp
inc
mov
dec
mov
lret
movsb
int3
cs
xor
cmpsb
cmp
or
cmp
pop
neg
xor
icebp
inc
dec
pop
imul
inc
xchg
inc
sbb
jecxz
bound
xor
pop
mov
fwait
je
pop
arpl
pop
fmuls
loop
fs
mov
mov
int
int
inc
pop
ljmp
fcoms
pop
pop
xor
je
imul
pop
imul
ljmp
cli
cmp
frstor
or
ficompl
xchg
rorl
dec
cltd
mov
inc
dec
or
inc
pop
rcrb
test
lahf
shl
fwait
push
cmp
xchg
shlb
push
add
mov
push
lods
jp
inc
lods
in
pop
xlat
dec
xchg
push
mov
xlat
push
addr16
cmp
adc
and
sbbl
mov
push
dec
and
xchg
inc
cld
sub
adc
cmpsl
sahf
xchg
popa
xchg
or
mov
cmpsb
jmp
ljmp
jnp
dec
dec
imul
sub
or
popa
iret
sbb
sbbb
in
cmp
lahf
scas
mov
scas
and
adc
mov
iret
sub
shr
out
lcall
shl
dec
lahf
pop
inc
push
xchg
jno
and
testl
adc
aaa
roll
test
aaa
pop
popf
mov
add
ss
les
mov
loope
lahf
in
lea
ret
pop
sbb
arpl
push
popf
push
insb
push
icebp
in
or
add
adc
pop
dec
loope
pop
movsb
mov
push
push
add
ljmp
inc
stos
enter
je
test
cmp
fs
dec
loop
adc
test
and
xchg
pop
lea
jns
adc
jns
int
pusha
inc
lods
incl
push
gs
or
lods
js
sub
lcall
movsl
fcompl
pop
pop
fwait
lcall
mov
mov
xor
jle
cmc
dec
insl
jecxz
push
jns
test
add
xor
dec
push
stc
push
scas
cld
fldpi
xchg
imul
cmc
mov
out
pop
loopne
repnz
insb
dec
out
pop
sbb
data16
cmp
xchg
icebp
inc
sub
cmp
insl
movsl
in
mov
or
add
push
jae
inc
rorl
test
mov
jae
mov
dec
push
xlat
xor
fadd
push
pop
mov
fidivl
pusha
and
push
mov
ss
fimuls
mov
pop
movsl
add
xchg
adc
imul
or
adc
icebp
jns
std
mov
jo
stos
imul
loopne
cmc
enter
xchg
cli
sbb
xchg
je
aaa
push
shlb
adc
mov
stos
lods
fmuls
jbe
push
movsl
add
pop
outsb
jae
mov
out
mov
insl
insb
adc
mov
mov
lds
xchg
adc
test
mov
push
subb
rorb
sub
out
inc
mov
mov
mov
and
rolb
push
popa
sub
push
lret
sbbb
push
add
insl
jae
sub
cli
pop
lahf
int
dec
dec
inc
arpl
jp
lea
mov
inc
call
jb
sub
inc
push
inc
rolb
jnp
mov
xchg
cmpsl
jmp
xchg
imul
mov
ds
xor
into
push
imul
cmp
mov
pusha
insb
test
mov
lods
call
mov
fwait
test
pop
rclb
jae
pop
xor
gs
sub
pop
es
mov
xchg
xlat
aas
jno
ret
lods
xchg
sub
sub
repz
mov
mov
add
add
ret
mov
jne
movsb
sbb
add
leave
sub
sub
mov
das
out
jo
jl
lret
test
xchg
and
in
repnz
push
cmp
aaa
pop
inc
les
imul
inc
imul
pop
clc
int3
sub
sbb
mov
mov
nop
jbe
sbb
xchg
pushf
xor
mov
or
inc
sbb
mov
jge
mov
pop
xchg
lds
lods
movsb
outsb
jo
pop
int3
pop
daa
jl
fistps
ljmp
incl
sub
sbbb
out
adc
testl
push
dec
int3
popf
dec
mov
jl
imul
sarl
es
jecxz
out
scas
test
outsl
add
sbb
sbb
jne
fs
add
daa
xor
das
xchg
int
cmp
lods
jno
movsl
repz
cmp
add
outsb
arpl
fwait
sub
in
sub
das
adc
shll
in
xor
add
add
add
aam
cmpsl
cmpsb
pop
push
pop
xlat
push
pop
in
push
in
cld
sbb
adc
fld
pop
mov
adc
dec
rclb
addb
xchg
xor
movsb
mov
pop
jo
je
mov
leave
jp
push
sub
shrb
je,pn
and
daa
cmp
ja
es
ficompl
and
fldt
dec
cld
push
push
iret
lock
push
scas
mov
cmovb
ret
mov
ret
fmul
out
mov
sbb
push
pop
mov
push
pusha
xor
cmp
add
fmuls
mov
cmp
push
jecxz
inc
adc
mov
jp
mov
in
cmp
in
iret
stos
dec
inc
mov
movsl
dec
testb
pop
add
mov
fsub
pop
xchg
jae
push
xchg
cld
pushf
mov
pop
add
icebp
or
pop
or
jb
pop
xlat
cmpsl
inc
pop
adc
push
sbb
jmp
push
xor
mov
lods
and
lahf
pushf
scas
sub
stc
mov
jno
fcoml
pop
addr16
movsb
inc
call
in
push
iret
call
into
fisubrs
lods
jge
xchg
jae
xchg
mov
test
sub
test
adc
aas
inc
cmp
jge
cmp
jecxz
hlt
ljmp
inc
pop
adc
fs
inc
mov
cmpsl
and
stos
test
mov
test
jb
sbb
ficoms
sub
out
repnz
pop
int
add
lods
pop
leave
in
ja
xchg
push
pusha
call
sbb
add
sbb
jecxz
cmp
or
and
xchg
lods
mov
jmp
cli
mov
xor
dec
or
dec
data16
mov
mov
dec
adc
sbb
dec
idivb
push
xor
sub
push
clc
mov
fsubl
cmpsb
and
fpatan
out
mov
xchg
mov
adc
and
shl
addr16
sub
ljmp
lret
cwtl
and
pop
push
int3
push
add
mov
sub
inc
shl
pop
int
pop
jb
mov
fiadds
cltd
adc
hlt
pop
arpl
adc
das
inc
add
ds
xchg
pushf
loope
into
dec
sbb
popf
mov
sub
cli
pop
sub
imul
cmp
mov
sbb
cmpsb
orb
xchg
mov
repnz
mov
lods
inc
orb
adc
jns
xor
cmp
mov
cmp
loopne
movsl
push
mov
out
call
xor
cmp
xchg
pop
pop
loope
ja
test
push
movsb
xor
dec
das
les
cmp
pop
jb
std
dec
mov
shl
adc
dec
stos
xchg
inc
add
sub
jae
imul
loope
and
mov
out
dec
cmp
rorb
shlb
enter
mov
fwait
ljmp
xchg
jbe
pop
mov
enter
std
mov
add
mov
stos
adc
notb
or
roll
iret
sysenter
mov
js
movsl
dec
cs
sub
loopne
inc
cmc
bound
adc
pop
jg
push
cmp
inc
aam
les
test
jo
es
popf
cmp
mov
data16
add
in
sahf
lret
jns
mov
sub
movsl
sub
ret
or
add
adc
jecxz
stos
addr16
movq
xor
adc
jle
push
movzbl
ja
mov
rcrb
stos
inc
jnp
divb
push
sbb
cmpsb
xor
push
xor
cmp
xchg
dec
mov
jns
dec
mov
scas
add
mov
loop
pop
adc
iret
push
cmp
adc
test
int
or
xor
ficomps
lock
mov
sub
xor
adc
dec
push
add
imul
mov
iret
pop
sub
aaa
jg
xchg
mov
sub
std
jne
lret
in
fistpl
push
mov
cmp
stos
pop
fildll
icebp
rol
jge
adc
dec
or
pop
inc
mov
leave
outsl
sbb
inc
subl
mov
out
je
in
nop
sbb
pop
mov
sti
sbb
dec
add
dec
inc
imul
imul
adc
and
subb
out
jp
pop
out
adc
in
mov
cli
add
in
addr16
add
js
and
mov
leave
adc
jl
jnp
bound
loop
movsl
rorl
adc
jmp
ja
lret
xor
inc
xchg
sar
shlb
or
lock
fs
sub
call
mov
andb
push
sbb
mov
hlt
pop
fwait
xor
in
cmpl
fld
movsl
pop
addb
dec
pusha
cmp
jecxz
xlat
cmc
dec
pusha
pop
das
and
jg
mov
in
add
mov
push
sbb
fnstenv
pop
dec
stos
enter
repnz
sahf
dec
ficoml
xchg
arpl
int3
inc
push
jae
inc
dec
jp
dec
jae
or
fsubrl
mov
fildll
lahf
outsl
jns
jbe
pop
dec
lods
push
jb
push
hlt
mov
outsb
mov
out
std
mov
or
add
test
cmp
xlat
pop
xorl
jno
jne
jnp
orb
cmc
insl
push
das
pop
mov
adc
dec
test
inc
jecxz
xorb
mov
mov
iret
push
adc
inc
xchg
inc
xlat
push
xchg
pusha
jmp
arpl
cld
lret
in
arpl
insb
mov
jb
addb
repnz
push
and
roll
scas
shr
ss
aaa
loopne
push
xchg
faddl
mov
pop
pusha
leave
cmp
sub
lahf
push
inc
icebp
and
je
or
sub
pop
xchg
outsl
stos
mov
lret
scas
pop
cmp
sbb
dec
imull
pushf
sbb
lds
mov
lcall
lock
mov
mov
cmp
in
pop
add
inc
mov
jno
mov
fsts
enter
loop
pop
mov
mov
jbe
ret
mov
js
movsl
cmp
inc
js
xor
es
dec
lret
sahf
lcall
jge
daa
sub
xchg
and
pop
lret
mov
dec
add
inc
sub
int
add
je
jns
push
xchg
les
sbb
mov
mov
insl
adc
xchg
adc
fwait
mov
repz
dec
mov
ja
xchg
push
adc
lds
insb
xchg
push
or
jle
adc
outsl
andl
add
jmp
jp
aas
or
leave
mov
pop
mov
or
xor
inc
mov
pop
push
cwtl
mov
sub
or
lds
mov
pusha
jnp
insb
mov
mov
fstp
nop
xchg
mov
pop
mov
aaa
and
orb
rolb
ds
repz
fcmove
ss
sbb
data16
jo
bswap
daa
push
popf
dec
mov
xchg
adc
ds
mov
xchg
dec
out
push
mov
fistps
cmp
rorb
cmp
inc
jne
adc
imul
dec
adc
xor
std
leave
xor
popf
shl
leave
dec
pop
pop
push
mov
ret
mov
xchg
ljmp
out
cmpsl
mov
je
sbb
inc
dec
out
xchg
xchg
xor
xor
adc
fidivl
push
icebp
aas
xchg
cmpsl
fwait
pop
out
mov
stc
xchg
outsl
cmp
repnz
xor
dec
dec
cmp
bound
out
xchg
fld
inc
lcall
xchg
jg
cmp
mov
dec
rep
sbb
scas
xchg
mov
cwtl
or
js
push
jp
testl
in
ret
hlt
lret
test
das
into
fwait
dec
dec
sbb
test
cmp
ds
insl
sbb
push
in
mov
inc
jl
mov
add
rcrl
adc
into
es
jae
jg
jl
inc
jecxz
sbb
mov
and
xor
iret
xchg
out
mov
imul
loop
popf
fiadds
les
aam
out
outsb
out
ja
cmp
sar
push
xor
popa
fisubs
xor
cmp
or
outsb
lret
sahf
std
outsl
iret
fldl2e
pop
test
pop
ret
rcll
leave
loope
sbb
test
xchg
sub
jne
cld
dec
in
cwtl
aam
cmp
je
lods
cmc
pop
pop
jo
sub
push
ds
and
in
call
enter
enter
test
mov
pusha
push
lcall
das
repnz
out
and
adc
int
cmpsl
xchg
sbb
aas
xorl
push
mov
aam
test
repz
jmp
mov
stc
cmp
mov
lods
inc
or
push
movsb
and
por
xchg
cmpb
xchg
mov
pop
repnz
daa
inc
xor
fisubs
inc
ss
lock
jne
lods
cmpsl
dec
insb
adc
adc
ficoml
js
icebp
enter
xchg
mov
or
sbb
push
adc
or
int
sbb
ljmp
mov
out
xchg
leave
jmp
popa
pop
andl
adc
mov
or
pop
fnsave
lahf
xor
mov
ljmp
pop
mov
jp
cwtl
je
xlat
push
jmp
add
adc
mov
inc
sbb
sub
scas
int3
out
daa
push
and
mov
lds
outsl
pop
orb
add
xchg
mov
pop
out
xchg
nop
insb
aas
pop
aad
mov
xchg
out
icebp
push
mov
cltd
push
add
sbbl
xchg
gs
ret
int
sbb
mov
rcrb
insb
inc
outsb
inc
lahf
insb
jge
xchg
ret
add
lret
mov
cmpsl
leave
sti
or
jnp
arpl
enter
cmpsb
shl
adc
bound
dec
frstor
shll
lods
xchg
aad
and
negl
mov
and
dec
insl
xchg
je
arpl
addl
sarb
std
lea
das
je
push
ret
fs
fistpl
into
scas
cltd
pusha
sub
pop
cmp
scas
addr16
and
movsb
inc
push
subb
in
jl
iret
adc
adc
mov
decb
mov
dec
stos
pushf
jo
lahf
movsl
mov
imul
jo
not
mov
cltd
aaa
add
lods
cmp
ret
bound
ds
lods
daa
out
mov
sub
mov
dec
or
or
jl
jmp
jle
jle
xchg
rolb
stc
inc
std
and
cmpsb
sahf
in
into
dec
sbb
movsl
pop
int3
out
inc
xchg
rolb
push
outsb
mov
or
xchg
lret
sub
cs
clc
jg
shll
mov
bound
jns
dec
shll
or
or
pop
jne
jmp
adc
dec
in
push
push
pop
push
or
aas
cmp
mull
int3
test
mulb
adc
add
sbb
stos
jne
mov
pop
stc
lahf
mull
jmp
cmp
test
cmp
loopne
push
cmp
lds
jno
jg
inc
cld
cld
mov
test
xor
loop
jne
sub
cltd
lds
jmp
inc
push
mov
jbe
sub
cs
mulb
mov
push
mov
cli
out
jb
int
push
mov
in
cld
xor
mov
dec
xor
loopnew
xchg
or
bound
and
mov
mov
adc
out
mov
mov
or
gs
in
js
gs
fidivrl
fdivrl
add
arpl
rolb
loopne
pop
xlat
fs
cmp
loope
mov
push
cli
adc
aas
mov
push
dec
icebp
xchg
inc
rolb
add
inc
jp
sbb
push
xchg
sub
ja
stos
cwtl
fcmovnu
shl
das
loop
popa
dec
mov
in
pop
pop
insb
pop
pop
movsb
push
mov
add
push
push
pop
ja
mov
jge
inc
shlb
outsl
push
lret
popa
fs
sbb
push
or
push
or
mov
lea
les
mov
cmc
rorb
cmc
lea
jns
insb
notl
mov
cli
test
popa
and
je
test
in
mov
sbb
and
or
in
cmp
cmp
call
sti
fdivrl
xor
jne
aam
loopne
dec
jbe
xchg
imul
sbb
mov
mov
dec
in
into
pop
je
movsb
rorb
pop
arpl
push
or
mov
xor
jbe
cld
les
add
xchg
pop
dec
and
jbe
sub
imul
push
popa
clc
mov
cmpsb
add
imul
ret
jg
repz
aad
mov
add
popa
fidivrl
clc
and
fbstp
or
adc
jmp
loopne
jns
add
sti
cmp
fmull
cmp
add
inc
out
loopne
je
lods
xchg
lret
cmp
pusha
pop
sahf
xchg
push
pop
insl
arpl
cmpsb
fcmovne
inc
sbb
shlb
pop
cmpsb
mov
lea
jl
pop
insl
and
sub
cmpsb
push
add
or
mov
pop
xorb
jbe
sahf
lcall
and
es
push
call
fcomip
sbb
mov
xor
cmp
mov
xchg
push
mov
dec
adc
mov
lock
loop
xchg
cwtl
mov
pop
add
pop
mov
clc
rolb
sub
fimuls
pop
out
int3
scas
or
jg
je
cwtl
loopne
movsl
out
arpl
fwait
or
jge
xor
enter
lods
in
add
and
dec
adc
sbb
loop
push
je
jg
and
jl
mov
mov
cltd
add
and
js
roll
out
ds
frstor
or
push
xor
push
movsl
push
pop
outsb
inc
dec
mov
fiadds
daa
in
or
or
test
pop
and
mov
jge
xor
push
cmpsb
mov
popa
clc
jae
sbb
mov
mov
nop
mov
mov
xchg
mov
cltd
dec
fnstenv
pop
sub
scas
xor
push
sub
data16
loope
dec
std
sub
jmp
rcrb
es
add
add
mov
fidivl
sbb
xlat
mov
xor
push
fsubrp
sbb
sub
insl
lret
xchg
fs
dec
cs
int3
inc
adc
scas
fs
adcl
jbe
cmpsl
jge
sbb
and
hlt
mov
xchg
es
xor
das
aas
scas
dec
push
jbe
push
push
movsb
push
mov
jns
jecxz
outsl
scas
scas
push
or
push
movsb
mov
dec
inc
jecxz
mov
add
inc
rorl
add
xchg
push
ret
cmc
lds
fstps
jno
or
jl
mov
jo
add
sub
loop,pt
push
jmp
jmp
xchg
call
adc
mov
mov
std
ficompl
call
subb
lahf
jae
sub
pop
ret
shl
adc
mov
push
sbb
adc
roll
imul
in
mov
dec
mov
push
or
hlt
and
and
sbb
loop
xchg
jmp
loope
mov
les
pop
dec
inc
mov
fadd
xor
lea
addb
fbld
pop
add
sarb
in
pop
das
sub
sahf
add
xchg
ret
lahf
jo
das
inc
into
dec
sub
sti
xchg
movsl
xchg
shrb
repnz
aad
and
call
stos
insl
popa
cmp
sub
inc
dec
rolb
or
adc
lods
add
je
rorl
testl
loop
lahf
popf
sub
cs
jno
cmp
xor
xor
xor
jnp
lds
push
sub
mov
sub
in
mov
lock
cs
push
dec
leave
push
sbb
push
jge
fidivrs
icebp
imul
movsl
and
bound
std
call
inc
cmp
and
and
push
xor
cmp
cmp
movsb
cmpsl
ret
add
loope
xchg
rol
ss
xchg
andb
mov
es
jo
popf
mov
imul
test
and
mov
out
iret
gs
jo
push
stos
clc
add
push
and
nop
mov
cmp
dec
scas
addr16
adc
mov
mov
insl
xor
cmp
jno
cmc
and
inc
cld
cltd
test
aad
sbb
loope
add
push
lock
loope
mov
ja
jg
xor
mov
sbb
int
adc
push
pop
inc
jb
xchg
out
push
outsl
jg
rolb
pop
and
mov
outsb
pop
and
push
js
sbb
lock
xor
jmp
in
xchg
add
rclb
inc
scas
repnz
mov
stos
jae
cwtl
mov
xchg
cmpsb
data16
in
mov
stc
icebp
and
adc
mov
xchg
mov
dec
cwtl
cli
aad
inc
xor
sbb
das
cmc
fnstenv
inc
push
lea
cltd
push
push
sti
dec
xor
mov
sub
js
out
dec
adc
adc
mov
lea
cld
insl
push
add
daa
pshufw
and
data16
dec
sbb
testl
push
and
cmpsl
mov
ret
ss
bound
cwtl
xor
xchg
xchg
hlt
push
adc
mov
cmp
jbe
push
jl
or
js
add
ss
push
mov
mov
cwtl
dec
std
imul
or
dec
push
ficoms
cld
mov
mov
scas
xor
in
cmp
jg
xor
fsubrp
hlt
dec
cld
adc
xchg
insl
xchg
push
sbb
std
sub
lret
cmp
cmovs
pop
ljmp
adc
sbbb
in
shr
test
insl
xor
cmp
fildll
fnstsw
mov
imulb
aad
lock
dec
imul
fsub
add
or
push
cmp
mov
mov
popa
hlt
shl
push
push
add
xchg
popa
inc
adc
sub
in
mov
loop
dec
push
dec
out
push
testb
fs
pop
rol
daa
orb
add
sbb
jb
cmc
push
repz
jae
loop
mov
adc
adc
int3
dec
adc
shl
dec
les
hlt
lcall
popf
xchg
or
test
dec
outsb
outsb
adc
ret
add
aam
and
push
cmp
in
pop
dec
push
mov
ljmp
xchg
mov
ljmp
popa
xchg
loop
push
sub
imul
icebp
fists
icebp
arpl
mov
int3
jp
push
pop
adc
in
loop
mov
xchg
xor
movsl
ret
add
pop
sti
mov
in
pop
mov
shll
test
mov
mov
rcrl
pop
or
test
scas
xor
mov
or
out
dec
or
and
and
adc
sub
add
in
cmpsl
mov
inc
loopne
nop
mov
ret
xchg
add
fcmove
fnstcw
aam
cmp
or
out
outsb
aas
sbb
pushf
sub
test
pop
push
or
fldcw
jp
mov
cmp
ljmp
pop
xchg
idivb
xchg
fstpl
adc
aas
int3
pop
test
adc
sub
inc
push
lahf
mov
push
cld
sbb
and
inc
jb
aam
cld
or
push
dec
ds
or
insb
imul
hlt
ljmp
sti
out
mov
arpl
repnz
mov
repnz
jns
push
setns
fidivrs
scas
call
pop
inc
jno
loop
clc
or
and
jp
popf
jae
jns
in
js
jp
mov
adc
inc
xor
outsl
xlat
jbe
pusha
das
push
aaa
mov
call
add
push
gs
and
popf
sub
push
shl
sti
fs
outsb
xchg
mov
dec
mov
fdivl
pushl
inc
test
fcomp
sub
rclb
xchg
lds
movzwl
inc
loope
sbb
push
gs
ljmp
clc
pop
scas
dec
pop
icebp
xchg
xor
xlat
out
cltd
stos
pusha
lods
pop
stc
scas
addr16
inc
jg
mov
xchg
leave
sbb
sbb
push
or
ljmp
or
clc
in
scas
inc
aad
dec
aad
pop
scas
js
adc
push
fistpll
mov
cwtl
mov
rol
cld
es
aad
mov
cmpsl
push
enter
mov
mov
mov
pop
mov
shrb
and
pop
dec
clc
mull
xor
aam
xor
adc
loop
movsl
fs
jne
ret
jbe
cmp
cltd
cwtl
or
lods
enter
gs
and
cs
jmp
push
xchg
adc
mov
adc
mov
out
dec
repz
pop
js
fstpl
lods
jp
mov
and
scas
push
mov
lock
sbb
adc
test
orb
dec
aaa
leave
xchg
sarl
or
nop
fstpt
sahf
xchg
mov
std
outsl
repnz
mov
xor
inc
enter
mov
adc
adc
out
pmaddwd
push
lods
mov
int
xchg
mov
out
cmp
ret
sarb
push
into
and
mov
cltd
xchg
mov
cmp
in
and
jnp
dec
pop
leave
ds
pushf
sub
fistpl
jmp
cmp
adc
pusha
aaa
ljmp
pop
sti
sub
data16
push
out
mov
jno
leave
into
sbb
es
adc
cmp
das
jns
cli
lds
fdivrs
jl
dec
icebp
push
pop
int3
jmp
jnp
inc
fcomi
ljmp
cltd
mov
and
and
lods
pop
push
loop
nop
push
cs
mov
fisubs
push
pop
hlt
add
lods
push
cmpsb
shlb
stc
jecxz
sub
push
mov
xchg
jns
mov
and
mov
xchg
adc
std
jae
or
xor
xor
mov
dec
fisttps
pop
fsubrl
rcll
xchg
jl
adc
lock
cli
pop
sahf
xor
hlt
outsl
outsl
add
je
das
or
xchg
imul
fldenv
mov
je
xchg
repz
test
call
rol
stc
out
daa
push
mov
fcomi
mov
cmp
lret
cmp
inc
lret
mov
xlat
fstl
pushf
in
iret
xchg
inc
xchg
mov
cmpsl
pop
mov
in
mov
add
call
insl
push
pop
ret
sub
inc
rcl
imul
mov
and
adc
daa
pop
mov
push
cld
jbe
jmp
mov
cmc
data16
sbb
sbb
movsl
jb
mov
cli
and
aam
adc
or
and
shlb
lods
jnp
inc
add
ja
lds
adc
jno
scas
outsb
push
clc
jmp
mov
and
daa
mov
mov
push
mov
adc
dec
adc
in
sub
pop
adc
ljmp
leave
ss
dec
loope
cmp
jle
ja
decl
push
or
pusha
inc
and
les
arpl
into
mov
ret
clc
in
and
bound
dec
fstps
movsl
stos
jmp
sti
jno
mov
fdivs
inc
add
xchg
das
jno
cli
arpl
addr16
insl
imul
cmpb
rolb
pop
stc
adc
lcall
mov
lahf
push
or
lcall
pop
and
aad
adc
xchg
add
push
adc
outsl
hlt
mov
mulb
test
jno
sub
push
test
mov
xor
sbb
cmpsl
xor
test
stos
xor
int
or
js
out
or
push
gs
dec
mov
sbb
xor
jb
jo
mov
cmp
lds
xchg
inc
sbb
es
icebp
dec
std
dec
pop
mov
mov
lea
and
loop
in
loope
cmp
aaa
and
imul
loopne
loop
ja
jg
cmp
ss
sub
popf
pop
aaa
or
in
or
rcrb
ret
jg
das
sbb
jp
test
nop
scas
cmp
outsb
ja
and
jae
cmp
or
push
and
dec
cmp
or
pop
xor
push
push
pop
sub
xchg
mov
fnstsw
mov
or
jno
ss
lret
scas
in
call
sbb
mov
adc
xor
fdivs
lods
into
sti
outsl
mov
cmp
rcl
pop
inc
push
call
mov
je
jno
imul
out
pop
loope
int
div
jbe
sbb
mov
in
push
daa
cli
out
pop
les
xor
mov
cmp
pop
and
shl
lret
fs
rorb
fcomp
cld
mov
push
push
xor
mov
mov
test
lret
lret
stos
fldl
cmpsl
xor
or
jbe
cwtl
jno
mov
push
movsl
and
pusha
shll
or
hlt
jg
mov
mov
adcb
adc
cmp
fidivs
popa
cli
adc
outsl
add
add
ja
mov
in
fwait
repz
and
or
test
rcr
daa
jecxz
dec
jmp
in
jns
enter
dec
xor
add
je
mov
sbb
pushf
stos
call
stc
repnz
and
add
sahf
loop
add
xchg
les
fldcw
pop
mov
cmpsb
adc
xlat
shll
hlt
xchg
test
push
movl
jle
xchg
sub
adc
cmp
cmp
push
lds
and
shrb
cmp
stc
sub
imul
fildl
rcll
sbb
pop
mov
dec
or
cld
aaa
mov
sbb
mov
mov
push
fstps
fimull
inc
fimuls
xor
inc
and
hlt
cwtl
inc
mov
inc
push
movsl
xor
jge
leave
jo
ficompl
adc
mov
xlat
sub
and
je
lea
mov
fstps
cmp
push
lcall
scas
and
pop
mov
mov
dec
call
jae
add
adc
clc
add
stos
and
shlb
scas
stos
je
enter
inc
test
fimuls
xor
push
jbe
jl
lds
jns
lcall
fwait
push
lds
pop
cmpsl
mov
hlt
outsl
pop
sbb
loopne,pn
adc
arpl
ret
int
cmp
sbb
push
xchg
insl
jbe
clc
decl
cltd
push
mov
dec
addr16
xchg
xchg
fistpl
out
nop
jae
fidivrs
push
pusha
push
pop
sahf
push
adc
js
test
mov
mov
xchg
lret
stos
ficompl
jbe
lds
mov
shrb
jmp
mov
mov
dec
mov
cld
pusha
adc
test
mov
cmpl
fdivrl
sahf
out
adc
sbb
arpl
ja
fsubs
scas
in
and
shlb
xchg
je
fwait
popa
jb,pn
cmp
sub
jg
mov
les
mov
outsb
lret
scas
xchg
xchg
sbb
push
add
out
nop
mov
movsb
jl
dec
xor
shr
fs
sub
push
adc
imulb
ja
adc
adc
aas
dec
xchg
or
mov
xor
clc
ret
and
pop
clc
imul
out
or
in
dec
mov
test
xor
test
jo
arpl
dec
push
lret
das
repnz
dec
mov
push
mov
incl
jp
push
loope
out
mov
or
pushw
sbb
arpl
repz
mov
icebp
sarl
xchg
lods
mov
sub
daa
jb
stc
dec
repz
push
mov
popf
dec
mov
loope
mov
pop
pop
and
dec
sub
mov
push
or
sbb
push
cmpb
rcrl
cmp
jmp
inc
pop
cmp
int3
xorb
jecxz
icebp
cmp
push
add
pop
jmp
iret
lret
addb
cmp
xor
pop
in
in
adc
jle
mov
add
push
sbb
leave
inc
loop
mov
imul
cmp
repz
xchg
dec
stos
add
cmovl
lret
dec
das
push
pushf
mov
aam
xchg
pop
pop
and
imul
xor
jmp
repnz
sub
mov
sbb
xor
repnz
mov
rcl
fxch
filds
and
xacquire
aas
repnz
icebp
adc
pop
mov
or
popf
mov
rorb
jp
lahf
dec
pop
and
mov
repz
mov
xor
lcall
in
jo
or
lahf
dec
ljmp
lea
out
dec
iret
mov
pop
jle
lods
insl
ss
xorb
imul
enter
bound
arpl
js
jnp
out
pop
frstor
or
out
xchg
lcall
jecxz
negl
inc
cmp
or
das
cs
scas
loopne
movsb
stos
std
jle
dec
add
shr
fisttpl
lcall
lret
fdiv
pushf
into
mov
and
mov
add
hlt
inc
aad
push
outsb
out
andl
es
aaa
jne
add
sub
lods
sti
mov
addr16
sub
cmp
mov
inc
xor
cld
cmp
nop
mov
leave
mov
cmp
ja
ror
sbb
mov
and
mov
decl
rolb
adc
add
lahf
scas
dec
push
je
and
add
jnp
and
adc
inc
std
push
lret
mov
fnstenv
pop
nop
pop
test
push
in
fwait
loop
mov
dec
xor
sub
mov
in
jb
mov
cmp
mov
dec
push
push
mov
adc
das
aad
add
bound
jbe
out
enter
mov
popa
mov
mov
into
cltd
adc
dec
and
in
push
jbe
inc
popa
cmp
mulb
dec
mov
xchg
je
pop
mov
xor
call
cwtl
push
shlb
jne
mov
ds
aas
imulb
push
les
cs
out
test
lret
jle
scas
daa
and
dec
sbb
cld
lds
addr16
or
sub
jo
gs
lret
lahf
jl
push
pop
dec
out
push
push
xor
jp
mov
push
sub
push
dec
jle
mov
scas
mov
aaa
push
mov
jbe
flds
ss
pop
nop
pushf
xor
in
insb
iret
and
xor
movsl
and
cli
cwtl
and
insl
imull
mov
xlat
sub
loop
addb
ret
ret
adc
cmc
int3
push
mov
xor
and
pop
mov
jne
xor
aas
push
pop
fdivrl
loop
incb
ror
aad
sbb
gs
lds
mov
mov
repz
div
or
sbb
cmpsb
inc
shrl
in
cmp
dec
xor
adc
pushf
or
ret
negb
testl
cld
sti
test
aas
movntq
sub
aad
mov
adc
stos
out
and
mov
jne
jnp
jmp
testb
fs
xor
mov
negb
repnz
xor
loop
jmp
xchg
lods
dec
jbe
popa
xor
pop
jo
push
add
psubd
or
sub
rorb
jl
cmp
mov
std
and
and
sub
pop
mov
stc
fcomi
lcall
insl
jge
das
testl
ret
and
lods
cmpsb
scas
jb
mov
repz
mov
push
pushf
inc
sbb
ss
stos
popf
sub
xchg
hlt
add
jb
add
int3
jne
push
inc
lock
mov
mov
repz
mov
inc
sti
xchg
leave
push
push
pop
mov
xor
xchg
adc
push
lds
ret
shlb
and
clc
ljmp
out
adcb
ret
push
arpl
dec
push
inc
jns
pop
mov
psubsb
cmc
xchg
sahf
and
cmpl
pop
inc
mov
ret
mov
xchg
dec
into
pop
jo
lods
pushf
mov
out
sbb
mov
loop
out
lcall
and
mov
adc
mov
xor
outsl
adc
pop
jbe
lods
pop
jecxz,pn
ja
jmp
inc
insl
sahf
daa
out
enter
sbb
test
inc
ljmp
and
fmuls
mov
out
mov
mov
adc
adc
int
xchg
inc
nop
mov
push
insb
mov
mov
mov
sbb
cmp
dec
addl
xor
cmpsl
inc
in
outsl
jns
pop
mov
sbb
and
push
pop
xor
or
les
cmpsl
xchg
inc
daa
pop
xor
sub
out
dec
mov
jp
dec
scas
xchg
stos
scas
andb
mov
int
xchg
sbb
into
out
sbb
inc
ds
cmp
roll
xor
inc
leave
xchg
add
push
mov
in
popa
stc
test
inc
inc
adc
mov
mov
xchg
jp
addb
jl
aaa
aas
push
loope
lea
dec
cld
or
dec
rol
add
lahf
lahf
int3
js
push
ss
jo
mov
dec
dec
out
or
xchg
out
jmp
and
aaa
xor
jno
sub
add
add
idivb
fidivrl
outsb
xchg
cmp
out
dec
clc
cmp
and
mov
or
mov
dec
sbbl
pop
xor
pop
jae
test
lods
push
insb
xor
mov
stos
mov
fmull
mulb
popa
mov
lcall
loopne
push
out
sbb
test
lret
push
ret
test
push
xor
jg
gs
jl
xor
les
cld
sahf
adc
movsb
inc
mov
dec
jno
inc
mov
cld
aam
mov
dec
dec
mov
sti
mov
pop
repnz
jnp
push
xchg
aam
test
insb
mov
mov
push
jg
imul
sbb
int3
xchg
pop
das
cmp
mov
mov
lcall
shrb
pusha
das
inc
inc
push
dec
es
xchg
pop
lret
inc
das
push
and
xchg
xchg
sbb
xchg
stc
add
add
jnp
sub
or
cmc
subl
sti
xchg
imul
shrl
mov
mov
call
mov
fst
mov
testl
push
arpl
mov
or
fdivs
fninit
xchg
orl
pop
pop
lods
mov
pop
cmpsl
out
mov
xchg
enter
idivl
xchg
add
mov
cmp
cmp
push
andb
daa
push
andb
shrl
pop
lods
in
cmp
cmp
bound
test
sahf
lea
dec
mov
push
and
iret
shl
sub
into
dec
push
cs
jno
mov
dec
pop
in
and
pop
sub
test
lods
xchg
pop
xor
fcom
call
push
cmp
sbb
test
repz
fdivrs
jle
mov
adc
loopne
jmp
rcl
jae
inc
and
cmp
dec
mov
scas
loop
rolb
xor
ja
fdivs
cld
mov
mov
xchg
in
mov
stc
push
dec
mov
shlb
jae
mov
dec
mov
in
fisttpl
pusha
call
out
int
data16
cmpsl
jmp
push
popf
std
call
in
jo
mov
or
arpl
call
shr
xchg
jbe
mov
test
popa
inc
ljmp
stos
mov
add
loope
push
adc
sub
jbe
bound
fcmovne
insb
int3
outsb
pop
mov
repnz
cmpsb
xchg
testl
in
jno
push
lret
nop
mov
jg
xor
andb
push
shll
scas
subb
mov
cmpsl
push
push
js
xchg
sbb
jecxz
jmp
mov
mov
sbb
ret
out
pop
popa
sbbl
les
xor
or
mov
sub
and
xchg
loope
adc
cmp
rcll
frstor
scas
push
pop
test
orb
sub
xchg
aad
imul
cmp
out
repnz
add
nop
inc
dec
push
rolb
stc
repnz
js
cmpsl
mov
jle
jbe
jle
decl
notb
xchg
adc
leave
dec
rclb
lret
testl
in
xchg
or
or
jle
inc
push
push
mov
sahf
jne
sbb
mov
mov
inc
test
jle
and
loopne
adc
sub
fstpt
mov
int3
iret
daa
ficoml
fists
mov
scas
jle
dec
outsb
cmp
ljmp
inc
adc
inc
mov
les
pop
sub
inc
leave
imul
bnd
mov
inc
lcall
sbb
dec
adc
fs
pop
push
popf
mov
pop
add
jl
jecxz
dec
sti
jb
sti
mov
xor
ss
inc
push
loope
sbb
popf
arpl
xchg
add
mov
push
mov
mov
data16
inc
addr16
push
call
insb
pushf
push
out
jb
iret
push
cmp
sbb
adc
add
mov
test
cmp
rcrl
stos
fimull
sti
jnp
sahf
pop
fstpl
fdivl
fwait
inc
ret
and
mov
or
mov
jp
mov
xchg
dec
test
cmp
dec
test
scas
shl
add
fs
fs
and
outsb
lea
push
xchg
outsl
loope
leave
xor
outsb
mov
data16
jnp
aas
loope
and
jbe
scas
and
insb
xchg
mov
mov
dec
nop
jns
and
je
in
jg
and
sbb
mov
sti
lock
fs
popf
sub
cmp
cs
subl
push
mov
adc
pop
jp
push
scas
frndint
dec
test
cltd
jnp
inc
and
fcoms
mov
lock
cmp
add
mov
add
dec
lahf
dec
loopne
popf
sahf
fiaddl
jle
les
sbb
cs
jmp
cmovl
cmpsb
daa
pusha
lret
or
cli
dec
add
cs
je
insb
push
pop
shrb
jge
jo
or
loopne
dec
addr16
leave
subl
pushf
iret
das
dec
ret
fmull
adc
movsl
mov
mov
testb
mov
int
bound
lds
mov
movsb
ficoms
dec
cmp
push
inc
adc
gs
xchg
mov
jg
cltd
mov
rcr
inc
mov
sbbb
repnz
push
popa
add
gs
push
cmp
jmp
inc
sub
jl
push
adc
or
movsb
cmpsb
mov
inc
and
push
jns
dec
mov
std
dec
adc
inc
pushf
push
cmc
sahf
cmp
jae
jno
ja
dec
cli
push
jecxz
mov
stc
ret
inc
push
repz
lock
aad
mov
jb
repnz
jns
inc
mov
test
out
test
adcl
sarb
inc
dec
adc
adc
mov
jns
mov
mov
xchg
mov
inc
pop
cltd
dec
dec
pop
adc
sub
jp
insb
push
or
adc
mov
jmp
fcmovnu
bound
out
cli
jl
mov
mov
mov
xchg
or
imul
jno
ja
xchg
cwtl
xor
lods
push
inc
xlat
jl
pop
mov
mov
lcall
pop
adc
fcom
aaa
jae
in
cmp
rclb
aad
push
ret
mov
inc
xor
setb
aam
lret
jnp
push
fimuls
add
imul
aaa
cmc
out
adc
cld
ja
jo
lods
pop
cmc
inc
dec
jle
cwtl
xchg
mov
sti
sahf
cmp
cmc
fsubrl
aam
rcrb
jae
xchg
popf
xchg
push
lock
lock
pop
jle
xor
mulb
adc
cmp
ss
push
outsl
mov
jg
push
push
js
push
mov
dec
int
test
arpl
lret
ljmp
dec
ficomps
sbb
inc
fidivs
mov
add
dec
rcl
mov
cmp
fidivrs
xchg
je
add
mov
mov
repz
sub
mov
pop
cmpl
std
cmp
xor
mov
mov
cmp
cli
mov
scas
jle
push
shrb
lret
ja
inc
mov
rcll
sbb
pushf
dec
cmp
mov
xor
ds
movsb
scas
push
je
xchg
ds
xor
in
les
je
xor
stos
insb
fwait
dec
mov
adcl
xchg
bound
imul
jbe
fcoms
into
xchg
dec
sbb
shlb
orl
insb
sub
jae
add
xchg
aas
and
out
rorb
xchg
pushf
pop
stc
jmp
pop
mov
and
push
xlat
ja
jmp
and
mov
pop
push
cmp
jmp
push
inc
jmp
pop
mov
push
mov
insb
cltd
std
rorb
cmp
dec
pusha
pushf
add
xor
outsb
shl
pop
mov
leave
pop
stos
sub
inc
mov
sbb
inc
dec
imul
xchg
gs
and
pop
push
sarl
xchg
jbe
rcll
addb
push
adc
cwtl
sbb
pop
pop
cmc
mov
mov
fs
cld
pop
mov
or
mov
outsb
test
xor
dec
xchg
inc
push
in
and
test
insb
hlt
jle
in
test
sarl
cmp
cld
push
movsl
and
mov
outsb
dec
xchg
cwtl
inc
popa
negb
lods
pop
push
test
popf
sub
pop
mov
call
mov
or
imul
pop
push
add
xchg
cmp
jmp
or
pop
fcoml
addr16
mov
jbe
pop
and
mov
push
push
stos
das
jp
imul
and
mov
xchg
std
test
and
add
dec
xchg
jge
or
mov
jns
fnstenv
out
sbb
andb
lret
shrb
stos
insl
adc
inc
inc
aaa
das
fsubrs
mov
xchg
test
cmc
sbb
sbb
mov
mov
in
jae
movsb
hlt
cmp
into
dec
mov
xor
int3
test
and
push
sub
aaa
push
pop
arpl
in
mov
xor
jg
into
in
sbb
pop
in
adc
or
loope
sub
xchg
leave
pop
jle
xchg
loope
pop
out
mov
xchg
xor
cmpsb
jle
pop
fidivrs
push
push
js,pn
xor
mov
xor
in
lret
xchg
mov
enter
out
xchg
push
xchg
loopne
adc
out
stos
jge
not
sar
mov
movsb
mov
pop
fistpll
or
or
push
mov
sbb
pop
adc
stos
add
mov
mov
ret
dec
xchg
lahf
sbb
mov
jne
jo
mov
ret
add
aad
inc
pop
subl
cmp
fs
inc
xchg
push
sti
pop
stos
nop
dec
or
jmp
or
cmp
test
shll
mov
lcall
mov
mov
call
pop
adc
inc
jbe
int3
out
or
pop
orb
inc
and
mov
sub
push
repz
addl
clc
aas
mov
push
lret
jl
push
and
pop
push
or
lcall
mov
push
xchg
addl
std
mov
mov
and
int3
cltd
arpl
xchg
sbb
repnz
stos
adc
stc
cmp
test
imul
mov
mov
sub
mov
cs
lcall
push
mov
mov
and
add
jae
xor
imul
int
cmp
les
je
xor
jae
js
add
sbb
out
jnp
and
leave
lcall
aad
cmp
pop
inc
pusha
add
ror
jnp
jp
jmp
lahf
lcall
mov
out
mov
mov
add
clc
cmp
clc
shlb
adc
popa
shll
jg
dec
lock
insb
fdivr
inc
cmpsl
sbb
and
dec
sub
hlt
lock
mov
stc
xchg
push
add
dec
mov
push
movsb
movsb
out
js
stos
xor
dec
inc
xchg
sbb
in
movsl
mov
movsb
or
sbb
sub
fisubl
mov
dec
jle
sub
adcl
push
in
jge
push
push
mov
frstor
aam
adc
in
cli
jg
icebp
push
lret
inc
push
test
push
and
cmp
add
mov
adc
cmp
xchg
jle
dec
fdivl
inc
cmpb
pop
push
xor
push
mov
dec
cwtl
add
in
fsub
das
scas
mov
rorb
ret
or
sahf
sti
xchg
push
popf
and
popa
ja
xor
movsb
dec
mov
mov
notl
xchg
sbb
aad
adc
sub
or
pop
push
in
inc
ret
pop
sub
sub
rorb
popf
dec
lahf
aaa
mov
inc
cmpsb
pop
fldl
leave
jmp
lahf
jno
fildl
or
xchg
pop
mov
jmp
insl
dec
push
loopne
fs
xor
jl
push
ljmp
or
cs
add
adcl
fwait
push
cli
in
inc
push
int3
daa
xchg
in
test
mov
jbe
lods
jecxz
jnp
call
add
cwtl
inc
and
add
sub
out
imulb
mov
xchg
lahf
daa
push
inc
push
sub
sub
push
pop
push
xlat
push
fs
cmp
mov
adc
sbb
es
and
loopne
cld
mov
xor
arpl
ret
jne
loopne
lret
xor
pop
pop
fnsave
or
subl
cs
mov
in
sub
or
sarb
fistpll
cmp
push
push
push
and
shr
pop
jns
rclb
mov
mov
je
add
leave
filds
inc
jns
push
mov
dec
movsb
jge
fcom
cmp
aaa
ds
xchg
js
lret
ja
cmp
mov
xchg
mov
in
mov
clc
pop
stos
xor
xchg
fmull
cli
xchg
lock
iret
adc
push
shrl
outsb
in
gs
mov
or
roll
cmpsl
mov
das
xchg
mov
imul
sbb
scas
enter
out
ret
adc
dec
fadds
mov
fs
cmp
ret
add
mov
das
cli
scas
popa
leave
adc
jp
mull
pop
xchg
sub
daa
cmp
push
and
roll
mov
fstps
in
imul
mov
lea
imul
insb
cmp
push
or
aaa
jp
add
orb
and
mov
jbe
push
inc
jg
mov
mov
rcl
push
cltd
test
xor
adc
in
dec
cmp
pop
cmp
and
add
sbb
mov
adc
out
jne
push
cli
push
addr16
mov
dec
data16
sub
das
or
jmp
adc
jl
imul
rcll
fwait
loope
push
ss
mov
stos
pusha
xchg
push
xchg
imul
ret
lret
lcall
inc
hlt
mov
movsl
fistps
cld
ja
ficomps
in
dec
or
pop
fwait
shrl
ss
lock
push
fwait
add
inc
mov
ror
or
adc
mov
dec
out
xchg
xchg
fidivrs
mov
cmc
mul
jge
and
psubusw
or
pushf
test
pop
xchg
add
xor
cmp
or
and
leave
out
cmp
or
call
ret
sub
dec
sbb
sub
cmp
lods
add
adc
sbb
test
out
sarl
jge
lods
mov
adc
lahf
es
shlw
pop
int
arpl
push
lds
scas
leave
notb
cmp
mov
mov
adc
and
ret
adc
sub
inc
cld
or
dec
sub
and
mov
fiaddl
push
jl
sub
mov
iret
out
xor
xchg
mov
jno
and
lds
negl
pop
xor
xchg
push
push
jge
out
mov
jns
mov
inc
iret
lds
sub
xchg
sbb
mov
mov
cmp
xorl
add
movsb
or
sbb
hlt
jne
push
icebp
sbb
shr
jp
test
sub
or
pop
sbb
aaa
jle
add
push
push
jl
insl
xchg
rcrb
xchg
xor
outsb
in
nop
cmc
push
xchg
je
mov
cmp
leave
mov
mov
jl
adc
out
mov
inc
stc
cmp
jne
lock
jne
pop
sahf
mov
orb
leave
cmpsl
mov
sub
out
enter
push
fldenv
stos
cli
cmc
adc
repnz
das
sub
sarl
and
ret
movsl
or
mov
ljmp
stos
mov
aad
jae
jle
ja
aam
fcom
push
jno
inc
scas
sti
mov
mov
into
pop
sahf
cwtl
xchg
ja
lret
orl
jp
jge
scas
daa
xchg
rcrl
jno
jp
add
leave
jbe
in
jl
aaa
add
test
jl
jle
movsb
das
mov
dec
lock
out
ror
jle
lods
pop
leave
dec
testb
mov
icebp
cmpsb
idivl
sbb
pop
loop
call
xor
sub
cmp
xor
mov
bound
loop
rcll
fsubs
or
and
jecxz
xchg
mov
push
in
push
xchg
inc
add
sub
test
push
sbb
inc
jmp
popa
pop
mov
mov
rorl
icebp
fisttpl
test
outsl
sbb
push
frstor
rcll
lcall
cmp
sub
cmp
mov
xchg
lahf
mov
mov
push
iret
loope
push
mov
iret
push
pop
aad
pushf
mov
jmp
out
xchg
pop
pop
pop
les
lods
inc
lock
std
jp,pt
cld
loope
stos
sti
lahf
fisubrl
cmp
jecxz
mov
aas
popa
aas
sbb
inc
push
in
xchg
jne
xchg
jmp
jno
mov
ss
and
adc
andb
xchg
add
push
insl
add
ljmp
ljmp
cltd
jmp
rorb
mov
jp
fidivrs
push
xchg
sahf
and
andb
inc
mov
nop
mov
stos
push
js
lret
aam
dec
fs
getsec
mov
sub
xchg
mov
pop
dec
cs
mov
enter
dec
jbe
lea
pop
stos
mov
sbb
insl
test
out
sbb
push
sbb
adc
gs
das
fcos
inc
ljmp
sub
inc
lahf
std
mov
std
test
mov
stc
xchg
ds
mov
cli
lds
xchg
mov
push
or
pop
loopne
in
mov
ret
pushf
and
sbb
mov
fs
shrb
into
jmp
cmc
mov
mov
inc
cltd
mov
mov
cli
sub
push
movsb
negl
jmp
sahf
sti
movsl
pop
mov
adc
adc
push
leave
or
sub
cs
sahf
xor
dec
andl
xor
jae
add
cld
mov
mov
cltd
jae
fdivl
lock
pop
xchg
mov
push
dec
enter
inc
dec
shrb
out
fldl
mov
mov
xlat
pop
cmp
xorb
xchg
cmp
in
mov
test
dec
xchg
lret
mov
out
xor
scas
movsb
xor
call
bound
cbtw
popa
xlat
out
ja
int
test
into
mov
in
fcoms
lcall
popf
leave
or
loop
jg
push
test
int3
and
popl
dec
sbb
imul
subl
sub
scas
rcr
lea
cmp
fcmovnbe
mov
dec
enter
jmp
push
add
enter
leave
add
mov
into
push
push
dec
lret
pop
cmp
loopne
ret
iret
inc
stc
test
adc
adc
aaa
pop
push
popf
push
lock
repz
push
xor
jnp
lret
js
inc
add
pop
adc
sarl
outsb
daa
rorl
dec
dec
aas
and
int
mov
and
jl
pop
mov
cltd
cli
iret
mov
mov
xor
dec
test
rcrl
ss
scas
popa
into
sarl
and
cs
jp
test
sarb
pmuludq
ret
mov
sbb
xor
test
push
xor
push
mov
shrl
test
test
pop
adc
push
mov
inc
pop
add
ret
cltd
je
insl
nop
fs
data16
mov
scas
fstpl
js
test
push
fs
add
jmp
je
inc
ja
outsl
push
je
popa
dec
add
das
in
dec
or
scas
add
sub
jge
ret
push
lods
imul
repnz
jp
mov
daa
xchg
inc
es
mov
mov
xor
xchg
pusha
hlt
and
sahf
out
sub
in
lock
sub
and
inc
out
xchg
xchg
add
das
add
sarl
sbb
dec
pop
sub
into
cwtl
in
mov
add
and
lahf
cmp
push
rorl
movsl
inc
adc
mov
icebp
faddl
mov
in
pop
cmp
push
pop
std
fdivl
pop
ja
cmp
add
xchg
mov
lds
scas
sbb
dec
sbb
stos
push
push
add
or
loope
cld
adcl
sbb
loop
mov
in
shrb
stos
jge
int3
pop
data16
bound
pop
sub
test
xchg
pop
call
aas
sbb
cs
or
in
cli
jmp
mov
push
jmp
sbb
jl
cmp
insl
andl
inc
notl
adc
and
dec
or
pop
push
sub
loop
daa
repnz
cmp
sbb
cmp
mov
jnp
xchg
dec
jb
ss
fiaddl
dec
adc
repnz
pusha
xor
lods
jp
sti
mov
push
stos
je
addr16
flds
mov
aad
cmp
or
sarb
xor
jnp
sub
imul
jmp
ret
inc
add
pop
int3
jne
or
call
jne
inc
lock
fucom
dec
sub
pop
mov
push
push
lods
push
shlb
sbb
inc
fldenv
in
or
cwtl
pop
mov
mov
cmp
xor
ja
gs
lods
inc
fcmovne
xorl
lock
lds
adc
cmpps
lret
dec
fmuls
sbb
jo
add
jge
imul
bound
stc
fistpll
sub
mov
mov
imul
or
aam
and
adc
fstpt
mov
arpl
shrb
xor
mulb
subb
mov
stos
in
jno
mov
xchg
lds
std
cmp
inc
push
lock
or
push
sahf
insb
idivl
push
cmp
xchg
and
xor
sub
mov
pusha
je
mov
push
imul
out
rolb
push
adc
inc
dec
repz
enter
test
in
mov
xor
jle
xchg
pop
push
fld
adc
ret
js
mov
fstpl
outsb
push
aaa
cmpsb
xorb
xor
fistpll
sbb
jo
dec
outsb
xor
out
push
lods
xor
ja
sub
test
ret
xchg
mov
cmp
in
push
ret
imul
add
rcr
xchg
push
dec
adc
sbb
xchg
testb
iret
pop
loopne
xchg
cmp
hlt
mov
ret
or
out
call
mov
fnstsw
in
call
pop
fidivl
mov
dec
adc
push
js
inc
xchg
insl
data16
aad
ficomps
and
pop
mov
jg
mov
icebp
fstpl
rorl
cmp
fidivrs
lret
mov
push
cmp
or
ficoms
mov
mov
and
cmp
sub
mov
sbb
mov
dec
add
mov
jnp
daa
and
and
stc
mov
fcoms
jne
push
or
sbb
mov
jmp
jmp
inc
mov
adcl
aas
sbb
xchg
mov
test
daa
test
cltd
jnp
cmpsb
fcmovnu
out
ljmp
inc
sub
and
xlat
rcrl
call
sub
mov
xlat
out
xor
in
xor
push
popf
pop
inc
adc
sbb
stc
xor
aad
adc
pushf
aaa
push
or
xchg
inc
flds
iret
rcll
pop
and
loopne
mov
ds
rcr
bound
xor
dec
add
rorl
sub
nop
or
lcall
dec
mov
jne
imul
jg
pop
outsb
sbb
pusha
jbe
pop
addl
mov
xor
dec
stos
fisubs
aad
nop
and
xor
mov
negl
dec
pop
icebp
push
jle
cmpl
xchg
jge
ds
filds
jmp
insb
mov
add
jbe
cmp
movsl
xor
push
aaa
pop
bnd
sbb
mov
jo
test
jg
shll
cmp
inc
mov
cmp
dec
enter
inc
dec
push
aas
pusha
call
add
or
imul
ja
adc
insl
cmc
or
notl
icebp
mov
xchg
lcall
cmp
xor
mov
add
cmp
and
pop
repnz
fldcw
sub
orl
cli
sub
and
loop
je
nop
fadd
sub
inc
fldt
call
hlt
pop
mov
jg
mov
or
pop
lahf
popf
pop
cmp
mov
jo
movsl
sbb
adc
ja
sub
jl
lock
dec
jnp
bound
nop
inc
mov
orl
les
and
je
repnz
push
pop
xchg
or
arpl
cmp
cmpsb
dec
and
aas
cmpsb
sub
xor
add
sahf
stc
push
xor
fcompl
mov
outsb
scas
in
add
test
xlat
add
add
scas
inc
push
add
js
pop
pop
sub
fsubs
sbb
adc
pop
jge
lcall
and
mov
pop
cmpsb
jmp
fbld
pushf
stos
push
jae
loopne
pop
xchg
ljmp
push
jnp
sub
mov
push
dec
orb
scas
xor
int
pop
mov
xchg
add
pop
aas
cs
push
mov
out
lcall
mov
push
not
movsb
mov
scas
imul
dec
mov
sahf
mov
ret
gs
adc
jns
pop
or
addl
push
or
add
jmp
mov
push
fndisi(8087
push
fmull
mov
insl
mov
ficompl
inc
mov
jle
xor
lea
popf
nop
or
dec
int
push
ret
into
fcomip
pop
rolb
dec
inc
das
or
xor
pop
out
inc
outsl
cwtl
repnz
sub
lret
jmp
shll
dec
stc
cmpl
mov
push
addr16
and
movsl
and
jmp
mov
imul
adc
repnz
pop
mov
movsl
or
inc
mov
mov
ret
jae
or
push
or
push
dec
test
jcxz
in
lods
into
mov
rcll
mov
add
jb
adc
mov
mov
sbb
push
adc
out
je
ja
ss
dec
cmp
cli
sbb
adc
push
jbe
imul
stos
adc
and
lahf
mov
dec
jb
push
enter
je
and
cmpsl
rorl
maskmovq
pop
or
fildll
dec
addr16
mov
push
xor
sbb
xchg
lods
in
ja
inc
inc
jle
cmp
mov
and
adc
pushf
push
or
sub
int
add
adc
push
adc
test
mov
std
xor
jno
loop
push
sub
lods
dec
stos
std
call
outsb
and
les
int
push
pushf
lcall
cmc
mov
sbb
sbb
repz
test
aam
subb
xor
test
dec
adc
pop
mov
jmp
jl
add
and
clc
repz
inc
mov
jno
stc
es
pop
mov
xor
xchg
cs
call
xchg
mov
lret
mov
insl
push
cmp
subb
aas
mov
ljmp
pop
lahf
stc
jl
fwait
sub
xchg
les
sbb
xor
icebp
fmull
sbbl
inc
or
mov
es
jp
xchg
mov
sub
hlt
dec
imull
es
inc
lock
movsl
fadds
shr
xchg
in
leave
incl
adc
aam
jo
repnz
add
mov
in
dec
sbb
es
stc
outsb
jmp
test
fmull
outsb
leave
sar
and
adc
pop
pop
add
add
rcr
xor
xchg
xchg
or
sub
sahf
jmp
int3
pushf
or
dec
adc
push
inc
jno
jg
leave
xlat
inc
out
daa
imul
lahf
in
repnz
pop
xchg
flds
adc
pop
mov
add
sub
ss
mull
aas
xchg
out
or
loop
rclb
lahf
sub
rcr
loope
mov
inc
sub
cmp
repz
repz
std
aad
push
dec
cmpb
jo
jp
cli
xorl
int3
jg
jne
cs
lahf
cli
jnp
push
rcrb
cmp
push
daa
shl
xchg
pop
bound
repnz
mov
cmp
fsubs
push
sbb
pop
xchg
cmpsb
faddl
outsb
outsb
sbb
pop
add
stc
outsl
pop
dec
cld
mov
pop
xor
imul
in
jp
adc
aaa
adc
call
inc
sbb
mov
in
mov
xor
or
and
out
or
adc
cmp
xchg
leave
push
mov
outsl
pop
jp
cli
pop
inc
outsb
into
shrb
sbb
out
cmp
cwtl
outsb
inc
adc
psllq
inc
sub
sbb
xchg
stos
push
loopne
lock
out
rolb
repz
cmpl
ror
popa
add
or
jnp
push
les
std
jbe
jnp
ds
ficoml
sub
pop
xor
add
jmp
mov
mov
popf
les
mov
popf
pushf
arpl
pop
loop
pop
test
xchg
push
mov
jl
pop
sub
negl
in
aaa
dec
fidivrs
test
push
rep
or
cs
and
aad
movsb
cmp
and
adc
jbe
mov
fdivr
cs
in
mov
ja
jae
cwtl
and
aad
cmpsb
arpl
cmpsl
dec
jae
fmulp
notl
inc
daa
call
mov
dec
clc
sbbb
sbb
in
jns
add
repz
filds
jge
cmpsl
jo
and
dec
movsb
xlat
jo
enter
pop
pusha
xchg
je
jge
fistpll
sbb
cli
movsl
pop
dec
iret
add
or
test
shll
push
mov
sub
pop
fldl
jnp
jecxz
out
xor
jbe
xchg
xchg
sub
push
lock
fbstp
movsl
stos
jmp
ss
icebp
jl
std
cs
scas
push
mov
inc
enter
xchg
adc
push
sbb
popa
mov
negb
adc
shl
fstps
mov
xor
inc
lock
mov
sub
loop
je
cmc
mov
scas
inc
xor
jmp
xchg
movsb
mov
clc
mov
xlat
ljmp
xchg
mov
jecxz
shll
adc
sbb
incl
test
jg
pop
adc
out
das
and
push
lock
xchg
pushf
add
xor
add
fists
jno
jp
add
clc
inc
ja
hlt
pop
aas
or
shld
mov
lock
xor
loope
mov
ds
mov
faddp
aas
xor
sub
mov
dec
cmpsb
pusha
fcomi
cmp
push
xchg
repnz
or
adc
pop
and
push
push
and
std
popf
jl
push
out
loop
test
dec
mov
jnp
mov
adc
jp
shlb
cmp
cmp
dec
lcall
test
jecxz
hlt
cmpsl
dec
mov
aad
add
daa
xor
sbb
scas
push
arpl
stos
cmp
dec
xor
lea
xchg
insl
mov
cmpsb
mov
adc
hlt
or
pushf
out
dec
imull
mov
sti
or
inc
mov
shll
int3
jmp
imul
dec
iret
push
inc
fs
jp
mov
loopne
xchg
sub
jne
add
cmp
cmpsl
leave
out
lods
int
or
leave
sti
repnz
adc
inc
mov
shlb
mov
sub
fildll
mov
pop
push
nop
inc
jge
movsl
repz
imul
arpl
cmc
mov
pop
mov
inc
pminub
mov
into
mov
out
xlat
pop
insb
add
loop
cwtl
rcrl
bswap
dec
mov
popf
fwait
pop
pop
adc
mov
xor
dec
lods
popf
push
stos
cld
sbb
inc
inc
cmpsl
cmpsb
mov
das
in
jmp
gs
roll
push
push
xchg
stos
sub
or
out
test
inc
xchg
je
jp
xor
popf
aam
jno
dec
lret
xchg
pop
push
xchg
jnp
cmp
xor
test
cwtl
xor
int
fstl
or
inc
ljmp
popa
ss
mov
xchg
lods
popf
jl
sub
jnp
out
jge
adc
mov
ret
clc
les
mov
imul
popf
loopne
xlat
imul
stos
lock
mov
call
adc
ljmp
iret
and
les
dec
push
jle
insb
sbb
or
out
adc
movsb
cld
sub
fcomi
ljmp
pop
xor
roll
or
roll
dec
les
shlb
faddl
sub
sbb
jg
addr16
xchg
or
adc
repz
loop
movsb
pop
ret
dec
lds
lds
add
fcomps
lret
out
in
dec
outsl
mov
ret
inc
push
jecxz
sbbl
dec
popa
gs
xchg
dec
mov
loope
aaa
out
adc
push
mov
and
inc
mov
xor
aam
jge
mov
jbe
cs
out
sbb
movsl
es
jge
rcrb
cli
sub
xor
and
mov
dec
pop
repz
leave
xchg
rclb
add
push
cmp
mov
fdivl
lods
daa
js
cmc
jge
and
mov
push
lods
inc
andl
pop
sbb
rol
lret
add
fiaddl
imul
std
pushl
jno
and
add
test
cmp
xchg
mov
jg
arpl
adc
mov
pop
mov
repnz
mov
adc
lods
lcall
rcll
mov
dec
mov
lods
mov
jl
rcrl
jo
pop
push
pusha
inc
xchg
cmp
fs
push
jns
fsubl
push
jp
test
aam
and
mov
fisubrs
pushf
mov
xor
loope
mov
push
nop
add
lahf
nop
jl
or
inc
cmpsl
mov
mov
pop
jns
incb
xor
shll
bnd
sub
popa
add
aas
test
lcall
mov
adc
lods
movsb
lret
xchg
enter
mov
cmp
pop
in
in
fbstp
mov
mov
cmpsb
inc
pop
subb
cmp
adc
push
icebp
xor
sub
cli
divb
fstpl
pop
add
push
fcomps
adc
xchg
push
jecxz
inc
push
loop
cmpsb
les
pop
leave
or
hlt
es
jo
aaa
nop
mov
sbb
filds
out
ret
lret
hlt
fwait
xchg
std
fwait
lcall
imul
xor
cmp
sub
outsl
dec
inc
add
mov
cld
mov
enter
leave
mov
jmp
inc
dec
pop
js
jns
push
movsb
push
cmp
shl
inc
mov
xor
nop
std
sbb
jmp
lock
pop
mov
or
jle
push
push
inc
addr16
push
sub
jp
data16
xor
mov
js
shr
loop
lcall
mov
fdivr
icebp
pop
dec
xchg
sub
lret
out
or
scas
aaa
xor
cmp
stos
inc
cmp
xchg
mov
cmp
mov
fs
mov
and
ja
aad
mov
cmp
and
aad
dec
pop
and
out
jmp
or
mov
and
push
cld
stos
in
fisubrs
aam
mov
int3
jl
out
add
xchg
mov
movsb
jno
cmp
mov
shlb
mov
inc
jbe
add
movsl
and
pusha
lret
add
xchg
jbe
pop
addr16
adc
xorl
dec
fnstsw
sbb
fmull
addb
push
lcall
push
sbbl
int3
adc
mov
inc
pop
test
adc
inc
sbb
xchg
jmp
cmpsl
lret
add
jne
icebp
pop
pushf
mov
sahf
sbb
dec
xor
mov
lret
add
jg
in
pop
dec
in
ret
daa
and
lods
jg
fistpl
dec
out
or
xor
addb
mov
aad
inc
mov
xor
cmp
repz
jo
ja
pop
stos
icebp
test
fldcw
xchg
add
xchg
cmp
push
popf
and
ljmp
jbe
push
popf
dec
js
out
stos
lahf
dec
testb
aas
call
push
pop
out
sub
add
adc
adc
mov
and
or
xor
pop
jno
je
loopne
cmovl
repnz
mov
scas
divb
cwtl
pushf
pusha
movsb
ljmp
lcall
orb
pop
les
mov
inc
sbb
dec
lea
pop
cli
ljmp
inc
test
das
imul
jb
cli
out
xor
lods
and
lahf
xchg
cwtl
jno
inc
out
sbb
cmp
outsl
shrl
jne
imul
inc
loop,pt
xchg
sub
mov
mov
mov
pop
adc
mov
or
in
or
lea
pop
in
dec
pop
pop
push
shrl
mov
ret
js
mov
pop
lret
std
dec
push
ja
leave
jp
js
inc
and
mov
ror
in
loope
rcll
xchg
addr16
jo
mov
stos
lret
int
js
ljmp
inc
icebp
cmp
mov
pop
cmp
loopne
xchg
cmp
inc
push
stc
push
or
jl
movsb
push
sti
cmpsb
inc
cmp
jns
jne
cmc
dec
ss
add
sbb
sbb
or
hlt
test
cmc
inc
mov
insl
out
test
ret
ja
call
shr
sub
leave
jbe
lods
std
or
xchg
test
push
mov
fimuls
lcall
cld
das
inc
mov
mov
lods
cltd
and
pop
out
aam
es
test
push
sbb
int
int3
mov
jmp
add
lret
idiv
jnp
cmp
fsubl
pop
push
aad
or
adc
cmp
sahf
jne
in
push
stos
or
xor
or
lock
mov
mov
mov
fwait
adc
aam
cli
dec
int3
cmp
mov
movsl
adc
mov
mov
ss
das
sbb
mov
cltd
and
lock
jecxz
mov
xor
lea
push
divb
daa
cmp
in
mov
je
ja
mov
std
pop
outsl
or
xchg
mull
adc
sub
das
mov
ds
push
push
cmpsb
pop
ss
cmp
ficompl
add
mov
call
dec
xor
call
nop
and
sbb
or
jno
adc
sbb
data16
in
push
sub
fs
pop
and
in
push
cmp
cmpsl
push
dec
add
es
cmp
call
push
jno
stos
jno
es
scas
arpl
jb
adc
call
pop
mov
mov
ds
pop
std
sbb
dec
sbb
stos
cmp
pop
sbb
test
push
outsb
xor
mov
mov
mov
jecxz
pushf
lods
inc
inc
mov
mov
cs
daa
incl
and
sub
sbb
std
aad
dec
idivl
mov
jle
adc
pushf
mov
pushw
outsl
loop
push
xchg
mov
mov
mov
inc
out
lods
aaa
push
pop
cmp
iret
mov
add
call
and
outsl
popa
lret
out
mov
out
lock
inc
and
add
jno
popa
roll
adc
repnz
pop
cmp
jne
fdivrl
jbe
popf
pusha
pop
pop
xchg
in
shrl
push
jns
mov
vprotq
or
les
xchg
pop
dec
xor
xchg
cwtl
xchg
stos
cltd
aam
loopne
lcall
dec
cmp
lret
dec
push
in
cmp
cmp
cmp
and
test
mov
cmpsl
sbb
pop
stos
lds
out
pop
addr16
xchg
pop
popa
jno
add
js
mov
int
outsb
add
mov
iret
push
mov
rorl
rcrb
cmp
aaa
push
inc
xorl
ret
add
rcll
in
and
pop
add
cmp
adc
das
fsts
sbb
jmp
mov
xchg
mov
cmc
mov
mov
xlat
out
push
mov
inc
inc
in
out
dec
pop
pop
out
push
cmc
stc
xchg
sbb
lods
aad
nop
or
mov
notb
adc
jge
sub
icebp
sub
inc
dec
mov
mov
add
and
xor
arpl
faddl
push
pop
push
jo
ds
sbb
ja
pop
mov
mov
movsl
lret
fcompl
outsb
iret
sub
dec
clc
mov
movsb
xchg
out
in
into
test
cli
mov
cmp
lods
and
icebp
scas
sub
rclb
fwait
jl
xchg
int
sub
fwait
data16
jg
jge
clc
mov
push
stc
add
mov
call
mov
lahf
les
xor
push
or
add
jns
call
popa
add
lret
and
jbe
out
xor
push
push
jl
cmp
pop
push
enter
jnp
cs
jne
mov
jb
mov
fstpl
mov
push
pop
sub
sbbl
push
add
rcr
add
xchg
loop
aam
sbb
mov
add
pop
fdivrs
push
mov
mov
add
pop
mov
cli
cmc
fmuls
dec
in
inc
icebp
lock
push
push
sub
cmc
fldl
xchg
dec
testl
fistpl
xlat
mov
dec
xlat
test
nop
repz
mov
add
stos
pop
or
inc
aaa
mov
xor
cli
icebp
xchg
push
insb
push
lods
push
imul
or
test
stos
cld
andl
ja
adc
xorl
jg
pop
arpl
ror
xchg
lcall
mov
test
adc
xor
dec
jo
aam
adc
pop
dec
inc
lods
jmp
inc
fs
aad
mov
lds
cmpsb
in
pushf
icebp
mov
test
mov
cmp
push
xor
sbb
jle
insb
xorl
cmpsl
pop
fcmovnu
incl
mov
sub
cltd
cmc
lahf
fs
test
enter
repz
push
jmp
jno
out
mov
dec
dec
inc
cld
into
add
dec
and
add
aad
adc
or
lock
push
je
out
or
or
mov
xchg
pop
popa
push
je
xchg
imul
mov
out
adc
mov
subb
jbe
xlat
mov
mov
test
pusha
dec
sbb
repnz
test
cmp
mov
cmp
mov
popf
cmpb
in
scas
mov
sbb
imul
cltd
mov
inc
push
adc
iret
outsl
addr16
clc
dec
jbe
cmp
jecxz
mov
dec
add
in
loope
or
push
lods
cli
push
popf
movsb
or
push
inc
loope
scas
imul
cltd
jge
xchg
nop
loopne
in
adc
mov
mov
jae
loop
xor
pop
xor
xchg
imul
cmp
call
sub
sbb
in
js
push
xchg
jne
lock
inc
xchg
movsl
lods
test
and
mov
or
das
pop
scas
shrl
fsubl
dec
pop
shrb
push
sbb
out
or
mov
sbb
mov
jno
pop
sahf
loope
or
imul
mov
mov
jl
inc
jno
xchg
test
aad
sub
dec
mov
sbb
sbb
dec
shll
lret
shl
repnz
sbb
loopne
insl
leave
mov
pop
or
push
xor
mov
pop
jne
push
std
ficoms
test
inc
xchg
adc
sti
sub
fadd
cmp
sbb
test
xor
xchg
shrb
jecxz
jmp
sub
jno
test
xor
cmp
btr
cmp
decl
dec
or
and
sbb
stos
imul
xor
fiadds
xor
rorb
push
jnp
mov
jbe
pop
dec
push
sub
movsl
add
push
fbld
push
cwtl
mov
dec
add
lahf
out
cmp
imul
les
push
lods
jg
lods
loope
xchg
lahf
inc
adc
cwtl
aad
sarl
push
inc
arpl
push
and
inc
pop
hlt
inc
xchg
sahf
sahf
das
repz
pusha
adc
cld
pushl
subl
adc
clc
div
fistl
cmpsb
or
mov
in
ds
lods
lea
sahf
pop
cmp
and
jl
addr16
outsl
and
inc
fadds
push
js
je
fsubl
pop
dec
lock
xchg
imul
insb
aam
loop
jge
ds
int3
sar
das
aam
cwtl
jg
push
push
mov
data16
popa
scas
or
jb
pusha
add
pop
imull
dec
mov
push
sbb
loopne
stos
mov
adc
mov
mov
mov
and
out
jne
mov
cwtl
shrb
stos
cmp
out
jmp
cwtl
jg
pop
pop
daa
sahf
lock
push
ljmp
call
cmp
out
dec
xlat
mov
and
cmp
adc
pop
and
sbb
ja
xchg
test
ret
inc
je
stc
dec
mov
mov
or
jecxz
mov
bound
mov
jmp
push
jns
dec
into
push
pusha
imul
int3
arpl
mov
repz
and
daa
cmpsl
cmp
ficompl
cwtl
in
cmpsl
fildll
stos
sbb
cmp
aaa
aas
mov
pop
mov
hlt
adc
dec
test
hlt
loop
mov
xchg
xchg
mov
push
hlt
pop
push
lock
push
sbb
add
incb
rorb
add
dec
mov
dec
aas
inc
adc
js
mov
lods
daa
pop
mov
jle
int
out
xor
mov
add
loopne
mov
imul
sub
push
adc
pop
lcall
mov
insb
mov
in
lcall
aad
push
sbb
js
int
inc
mov
ss
or
bound
push
cmpsb
aam
popa
scas
jmp
shlb
adc
xchg
test
mulb
scas
mov
cwtl
movsl
roll
xchg
add
test
push
jb
ficoms
pop
fldt
mov
push
xchg
sbb
and
pop
std
or
cli
out
sahf
mov
push
call
icebp
xchg
xor
mov
ret
xchg
rorb
push
jno
mov
mov
cmc
pop
fld
iret
addr16
ss
dec
ret
ja,pn
out
adc
inc
out
ljmp
sarb
les
in
out
mov
mov
xchg
and
jl
pop
fisubrs
inc
or
pop
fdivr
sahf
push
rcrb
js
loop
lods
xchg
mov
in
inc
mov
jge
inc
sub
xor
sbb
dec
inc
mov
hlt
adc
ljmp
into
ret
xor
jp
dec
aad
lret
and
push
mov
jnp
adc
fs
dec
ret
pop
mov
cmp
push
xchg
das
nop
add
inc
jno
arpl
dec
in
cmp
cltd
stc
push
jl
fadds
fdivr
aaa
push
xchg
jne
sti
or
xor
pop
xor
fucomip
fs
mov
add
push
clc
pop
scas
dec
test
arpl
nop
lds
mov
jp
iret
push
xchg
add
aad
movb
cltd
mov
mov
icebp
faddl
mov
or
in
insb
clc
or
lock
jne
mov
push
inc
sbb
repnz
adc
ljmp
into
rorb
push
dec
pop
stos
jmp
stc
mov
stos
into
xor
mov
testb
ja
cmc
fbld
out
xlat
sahf
adc
lret
out
inc
je
mov
push
adc
icebp
push
mov
pushf
out
cmpl
outsl
sahf
mov
insb
mov
pop
loope
cltd
mov
int3
inc
les
sbb
sub
loope
popf
cmp
jb
mov
lods
jno
xor
mov
popa
aas
dec
sub
mov
iret
insb
pop
adc
inc
test
in
ret
stos
shll
mov
push
imul
enter
stc
and
popf
mov
push
jle
jnp
fcompl
aad
stc
add
and
lret
cmc
test
lret
insl
insb
xor
or
add
push
int3
xlat
clc
stos
cmpsb
dec
xchg
faddp
daa
push
mov
sub
sbb
les
or
in
scas
daa
mov
and
push
cli
sahf
push
call
jbe
das
push
inc
mov
dec
cmp
pusha
shrl
inc
push
add
sti
aaa
add
xor
mov
cmp
ljmp
shll
fldl
xchg
ja
pop
xchg
cld
jge
ficomps
fbld
push
sahf
sub
jbe
and
rorb
jnp
es
pushf
jge
pushf
pop
sti
xor
jle
daa
les
adc
cmp
ljmp
mov
mov
mov
dec
lods
sbb
sbb
adc
cwtl
sub
hlt
and
and
push
out
imul
mov
call
mov
xor
sub
xchg
fld
sub
mov
push
inc
pusha
cmp
xchg
xchg
push
test
or
daa
rolb
sbb
std
dec
fwait
sub
cld
sbb
mov
shrl
pop
inc
xchg
xor
in
mov
ret
ss
hlt
jnp
aaa
div
daa
sbb
push
adc
mov
in
repnz
xchg
fists
jge
pusha
aad
mov
mov
ljmp
push
jge
ds
fadd
pop
lahf
arpl
mov
es
xor
sbb
mov
addr16
adc
dec
sbb
bound
lahf
push
mov
xor
andl
pushf
lcall
test
je
ret
aam
push
in
dec
add
ss
sahf
pop
jnp
into
fs
rorl
scas
pop
push
stc
outsb
lahf
sbb
shrl
pop
push
insl
jecxz
in
stos
pop
cmp
and
jo
test
jecxz
jle
inc
aaa
sbb
ret
sbb
loop
mov
bswap
mov
stos
mov
in
mov
jns
data16
and
xchg
push
mov
xchg
stos
jb
adc
fwait
ds
js
test
lcall
ret
mov
add
out
sahf
jge
les
sbb
clc
jb
xchg
jecxz
mov
outsb
mov
push
xchg
jns
mov
stc
lods
fisubrs
ds
in
pop
inc
add
xlat
repz
adc
in
cld
subl
mov
mov
adcb
cld
cs
cs
dec
fwait
or
scas
enter
mov
and
push
jae
aas
int3
jge
rcll
fwait
int3
jg
scas
pop
xlat
dec
in
int3
sub
fistl
mov
js
mov
pop
mov
test
out
mov
mov
pop
int3
das
mov
nop
outsl
sub
push
cmp
inc
xor
fldt
popf
mov
jo
xchg
sub
mov
xlat
push
dec
popf
div
test
mov
inc
add
adc
lret
test
loop
jno
ljmp
push
inc
lahf
sbb
push
ficoml
mov
sbb
test
mov
cs
dec
test
das
or
jge
lahf
add
add
sbb
cmp
mov
xchg
mov
sti
in
jne
movsb
in
rcll
mov
cmp
xchg
lods
ss
jl
test
jmp
rorb
pop
jecxz
psrlq
inc
push
cltd
cli
pop
jno
mov
incb
xchg
xchg
mov
xor
push
movsl
jp
ror
lret
inc
test
outsb
mov
stc
es
in
xchg
xchg
adc
cmpsl
jg
dec
rcl
jo
popa
push
test
xchg
push
sbb
mov
add
cmpsl
mov
xchg
fs
fmul
leave
test
fcomip
out
sbb
adc
enter
aad
cld
out
jbe
push
out
fnstcw
rcll
test
stc
mov
push
out
mov
sbb
insl
loope
out
sbb
rcrb
ficoml
and
loope
adc
je
inc
out
cwtl
popf
scas
push
lds
aam
aaa
adc
insl
nop
mov
cmp
ret
bound
mov
cmp
sub
inc
push
adc
stos
popl
fisubrl
jl
fxch
jp
test
cwtl
push
xor
sub
jnp
jp
xchg
in
xor
sub
jl
pushf
push
rclb
push
aam
pusha
push
shr
inc
pop
loop
mov
xor
xlat
inc
adc
pop
xchg
clc
leave
inc
call
inc
inc
push
push
add
lret
jae
test
add
push
pop
cld
and
dec
cltd
push
dec
inc
hlt
outsl
fsubl
pop
and
adc
push
add
inc
fnstsw
jmp
pusha
sub
nop
hlt
mov
aaa
xchg
inc
xchg
rcrl
or
out
ficomps
addl
mov
cmp
dec
loope
in
insl
inc
test
call
and
push
xchg
and
sbb
add
mov
and
cld
xor
push
and
out
and
lods
loop
ret
lahf
mov
sbb
ss
rcr
out
mov
sbb
dec
push
mov
xchg
xor
pop
add
mov
inc
mov
sub
mov
test
sub
imul
jl
add
shrb
jno
and
cmp
inc
or
outsb
out
loopne
xchg
insl
adc
inc
insb
loope
outsb
push
prefetcht0
pop
or
testl
pushf
clc
xor
mov
lock
fmuls
inc
fistps
jge
mov
and
hlt
sti
enter
jle
in
xor
and
sub
xchg
adc
pusha
pop
call
xchg
push
pop
je
sub
call
sub
mov
pusha
call
into
inc
adc
mov
clc
mov
and
lret
pop
cmc
sbb
loopne
ret
ret
lcall
add
xchg
leave
shlb
fdivp
pop
mov
jae
mov
dec
adc
mov
repz
mov
aad
xchg
fisttpll
aam
stos
mov
adcl
in
subb
mov
out
push
andl
xchg
neg
popa
iret
xchg
data16
fsts
xor
push
jmp
addl
xchg
imull
or
mov
jbe
inc
mov
enter
mov
imul
xor
jae
mov
int3
or
sbbb
jne
mov
push
lods
add
lea
xchg
int
and
unpcklps
adcl
cmp
iret
movlps
mov
mov
and
rcl
aam
mov
dec
or
in
and
gs
in
mov
cltd
or
pop
fwait
pop
in
mov
jecxz
xchg
andb
cmp
push
sub
inc
mov
sbb
cwtl
lahf
incb
lods
sub
sub
mov
daa
pop
adc
out
dec
dec
mov
leave
stos
jnp
mov
ds
jp
adc
sahf
subl
xorb
jmp
mov
push
lock
sub
xchg
jb
pop
decb
in
hlt
call
outsl
js
mov
out
xchg
push
add
ficomps
dec
jp
mov
sti
xor
inc
jnp
pop
fsubr
out
testb
xchg
ret
inc
push
mov
xchg
in
dec
call
mov
stos
sbb
push
ss
aaa
cs
cs
mov
cmpsl
and
ja
push
push
ja
xchg
hlt
loop
decb
xchg
sub
push
shrl
adc
inc
pop
ret
jo
adc
sbb
xor
xchg
shll
mov
ja
scas
and
pop
jae
xor
ret
xorb
repnz
in
mov
push
aas
iret
or
pop
int
insl
pop
xchg
rorb
call
push
clc
jbe
cmpsb
and
mov
xor
movsb
mov
xor
and
or
mov
push
repnz
inc
xchg
push
in
outsb
movl
push
lret
loope
and
dec
mov
mov
mov
and
roll
ss
add
cmc
cmpsb
add
pop
push
test
lea
fisubs
or
jmp
add
lock
into
outsb
jns
add
orl
push
testl
ja
cwtl
mov
fstl
stc
pop
sub
jg
mov
lods
loopne
hlt
or
inc
cmpsl
inc
sbb
sub
dec
lock
mov
repz
or
test
je
xchg
in
lds
and
jp
ret
jecxz
cwtl
imul
subl
rcr
out
cld
inc
dec
push
aam
xchg
sub
xor
add
jmp
je
xor
pop
loop
pop
inc
addr16
mov
pop
pop
mov
jno
icebp
fs
sbb
addb
adc
dec
pop
add
mov
sti
push
in
ds
ret
jnp
sub
inc
lcall
movsl
inc
aam
mov
fmull
cmp
pop
into
icebp
and
std
std
jp
std
adc
mov
fildl
ret
jns
adc
movsl
bound
cmpsb
mov
out
mov
repnz
mov
mov
and
int3
or
stos
mov
stos
gs
ret
divb
jae
sub
fimuls
leave
in
jg
inc
adc
std
and
mov
sbb
push
fsubl
mov
jb
aas
fimull
inc
enter
push
in
and
es
insb
cltd
lods
jmp
and
xor
addb
mov
xchg
mov
ja
call
repz
xor
mov
inc
in
gs
mov
inc
in
jp
std
cmpsl
dec
jl
rorb
push
push
pop
mov
dec
xchg
or
sub
rorl
jecxz
into
rol
fists
dec
mov
mov
mov
push
mov
in
rolb
inc
shll
xchg
test
push
clc
adc
aad
mov
stos
cli
lock
lea
mov
xchg
sub
dec
jp
jae
fimull
enter
jmp
pop
sbb
xor
rcll
stos
enter
bound
xchg
or
test
xchg
adc
adc
pusha
decl
xlat
mov
mov
xchg
pop
ret
movhps
int3
mov
mov
sbbb
daa
pushf
jmp
sub
dec
test
add
loope
out
xchg
dec
lods
ret
adc
sbb
dec
and
test
mov
ja
dec
lea
test
inc
loop
or
test
xchg
idivl
pop
cmp
enter
fidivrs
pop
js
mov
and
mov
mov
xchg
rcr
fsub
popf
add
aam
add
add
test
xchg
sahf
sbb
xor
xchg
stos
adc
jbe
mov
or
icebp
push
fisubrl
mull
ss
ffree
das
xchg
loop
jecxz
push
jle
inc
out
mov
ss
lds
mov
push
repz
es
in
or
in
cmp
cmp
fucomp
orb
jb
sub
arpl
pop
repz
xor
add
pop
push
aaa
xchg
jp
and
jp
movsl
shll
cwtl
je
cmc
test
jns
popl
add
pop
adc
mov
inc
add
xor
pop
add
mov
jl
sti
insb
jg
lock
leave
movsb
icebp
jae
sahf
jg
cmp
scas
mov
and
pushf
cmp
sbb
arpl
hlt
repnz
push
mov
mov
stc
jecxz
popf
fnsave
inc
sub
mov
xchg
pop
push
pushf
sbb
ds
or
push
pop
in
jg
loop
adc
or
pop
imul
jg
mov
or
pop
in
leave
fcomps
ret
mov
scas
sub
dec
inc
adc
jle
daa
pop
test
jns
movsb
sbb
fdivrs
mov
arpl
jmp
cmc
nop
lock
inc
shr
lahf
aam
test
out
push
lahf
dec
bound
add
mov
xchg
cmp
or
nop
imul
int
xor
lret
test
mov
xchg
mov
push
enter
pop
daa
stos
xor
mov
loopne
lcall
xor
mov
inc
or
and
inc
xchg
dec
fbld
inc
inc
cwtl
sbb
push
mov
sub
sub
cmp
daa
sub
loop
push
in
mov
out
push
scas
push
hlt
std
ja
test
sbb
mul
push
inc
das
adc
int
pusha
fwait
std
scas
jo
push
divl
scas
test
leave
sbb
pusha
mov
lcall
into
dec
jns
into
jl
mov
fsubs
mov
les
or
push
dec
imul
leave
dec
mov
mov
movsb
dec
pop
ljmp
inc
adc
mov
mov
or
insb
push
les
cmp
mov
out
cwtl
icebp
mov
and
hlt
dec
ljmp
loope
push
sahf
push
rcrl
jnp
adc
and
dec
inc
add
ret
jl
mov
sub
test
stc
dec
mov
sub
sub
cmc
dec
ret
xchg
cmc
add
cltd
xchg
cmpsb
jbe
and
int
push
mov
jg
add
pop
mov
out
mov
sub
cmpsb
mov
icebp
and
pusha
or
hlt
stos
mov
push
or
out
pushf
ss
dec
push
push
mov
jmp
sbb
daa
sbb
js
adc
pop
push
std
and
jmp
mov
cltd
pop
dec
xchg
dec
push
nop
or
mov
hlt
movsl
scas
fcmovu
mov
in
adc
dec
mov
test
xor
xlat
repz
adc
ja
mov
fs
lds
mov
lcall
ljmp
ss
ret
pushf
adc
mov
fwait
cmp
rcrl
add
mov
add
cmp
sti
jle
dec
cmp
fildl
and
aad
mov
pop
or
in
cli
jl
pop
xorb
mov
add
inc
fnstenv
daa
add
adc
push
pop
nop
test
gs
scas
sbb
inc
aam
add
ror
int3
or
inc
mov
pushf
mov
icebp
mov
and
pop
mov
rol
jnp
lcall
xchg
leave
into
enter
es
mov
dec
es
cltd
cmp
xor
andb
xor
adc
push
cmpsb
add
inc
push
xchg
mov
adc
addr16
dec
aas
nop
leave
pop
and
jle
jp
sbb
shr
xchg
ficoml
pop
insb
das
lods
xchg
inc
stos
push
sbb
popa
push
dec
inc
in
lcall
pop
call
inc
jno
out
divb
aad
sarb
lahf
cbtw
loop
and
ret
mov
stos
adc
push
jmp
mov
add
int
and
cmpsl
dec
xor
mov
loope
je
adc
mov
dec
pop
repz
test
xorb
or
dec
dec
mov
outsl
nop
pusha
sbb
insb
mov
mov
repz
popf
ret
cwtl
pop
ss
xorl
pop
fbld
adc
cwtl
sbb
mov
jae
jp
jg
push
cmpsl
loope
int3
sbb
cwtl
push
pop
mov
sarb
das
jns
insb
ret
imul
mov
sub
repnz
or
jne
fs
jecxz
pop
cmp
ss
inc
mov
push
repz
xchg
insl
jmp
sub
test
repz
jb
iret
imul
loope
ss
movsb
mov
xchg
scas
mov
add
das
mov
outsb
adc
sti
mov
sbb
imul
roll
mov
jbe
out
jecxz
push
in
ror
sub
ret
imul
in
push
cwtl
pop
cld
icebp
jl
and
jle
mov
mov
jp
jmp
mov
sbb
xor
jge
testb
cmc
push
scas
mov
sbb
ja
testb
cmp
or
lock
stos
iret
and
lea
cltd
enter
test
pop
pop
ljmp
popa
icebp
lcall
or
jae
fwait
pushf
out
ss
push
pop
scas
subl
std
scas
loopne
rorb
cmpsb
je
prefetch
ljmp
xchg
popa
out
imull
dec
adc
divb
ficoml
mov
das
xchg
push
fisubrs
sbb
mov
rcrl
loope
xchg
stos
and
dec
push
es
mov
gs
jne
mov
lock
icebp
cmovbe
sub
and
cmp
or
add
fsubp
push
je
cs
insb
out
data16
jbe
out
adcb
sub
push
jecxz
push
sbb
cmp
hlt
dec
es
inc
pop
adc
and
cmp
push
push
dec
test
mov
jbe
inc
loop
cmpb
sub
dec
scas
out
jo
lahf
push
mov
jns
xchg
std
jae
shr
xchg
xor
adc
repz
rcll
xchg
mov
push
in
fists
lahf
xor
pop
js
les
pop
dec
fcoml
cmp
lock
or
lock
or
loope
push
popf
lret
repz
out
adc
mov
ds
cld
push
call
push
sub
cmp
push
mov
lahf
pop
out
aam
mov
dec
sbb
imul
xchg
dec
cltd
test
pop
sbb
jbe
inc
scas
orl
mov
or
aad
mov
mov
mov
mov
addr16
inc
cmp
dec
pusha
jo
xor
cltd
jne
push
sbb
in
cmc
mov
lahf
and
add
add
adc
cmp
pop
jge
push
sbb
fbstp
adc
fstpt
jle
mov
bound
push
push
xchg
mov
xchg
andb
push
mov
sbb
dec
aas
fldt
test
sub
daa
loop
inc
test
jns,pt
push
mov
loope
push
dec
pop
jle
arpl
out
xchg
rorb
and
inc
mov
pop
repz
cmp
rcll
sub
cmp
dec
mov
cmp
sub
loopne
inc
cmpsb
xchg
pop
cmpsl
xchg
or
inc
push
xchg
gs
repnz
popa
lahf
sub
sbb
data16
imul
and
add
int
sti
ror
xor
lcall
bound
nop
xchg
mov
cli
xlat
add
mov
repz
push
jns
sub
mov
add
mov
cmp
ljmp
mov
mov
dec
sbb
inc
int3
pop
decl
add
mov
pop
sub
or
dec
scas
adc
dec
mov
jl
in
mov
lahf
fstpt
dec
ret
jnp
ljmp
test
push
dec
fwait
mov
jl
repnz
daa
addb
scas
mov
in
push
xor
xchg
jg
push
int
insl
cmp
call
leave
popl
push
in
fs
hlt
mov
xor
repnz
xchg
or
enter
cmpsl
cmp
enter
mov
mov
ret
add
es
std
cmpb
test
shl
mov
fidivrl
and
inc
nop
pop
in
hlt
imul
mov
icebp
cmp
dec
sub
out
push
out
daa
or
xor
nop
sbb
add
ret
jno
jae
adc
push
pop
scas
mov
popa
mov
xchg
jl
addb
test
jns
lahf
pop
icebp
lcall
js
pop
jle
xchg
dec
rorb
icebp
xchg
mov
cmp
scas
mov
outsb
aam
out
pop
mov
jae
scas
adc
xor
scas
inc
mov
lods
push
mov
jne
dec
mov
loopne
lret
pop
in
adc
popa
testb
clc
add
xor
ja
lock
cmpsl
out
sbb
rolb
enter
sub
int3
test
jl
ja
cmc
or
bound
push
push
or
mov
push
stos
ret
ss
out
aad
xchg
push
or
mov
bswap
sub
pusha
shlb
pop
lds
mov
shrl
ds
dec
insb
adc
out
cmp
addb
add
popa
inc
movsb
xlat
scas
adc
add
lods
mov
xchg
cli
pop
mov
out
add
or
push
push
adc
out
lds
repz
out
jg
pop
xchg
in
xchg
cmp
int
push
in
cltd
insl
xor
cmp
ret
adc
int
stos
loope
lods
sbb
js
push
inc
fiaddl
lcall
aas
mov
mov
add
add
pusha
fst
mov
bnd
stos
ljmp
dec
pop
cmp
sbb
xor
out
inc
add
shrl
lods
out
jp
pop
popf
mov
loope
subb
std
bound
orl
loopne
sub
xchg
hlt
test
mov
gs
lret
shlb
clc
cmp
dec
xchg
jge
mov
nop
push
jmp
in
push
cmc
mov
sti
jle
inc
loope
ss
rolb
fcoml
pop
aam
aas
pop
jge
jnp
cli
jae,pn
mov
push
subl
mov
mov
iret
loop
cwtl
jecxz
mov
je
and
fsts
ss
lcall
outsl
dec
and
addb
in
test
jbe
add
cmp
and
mov
push
fmul
or
not
out
mov
fs
movsb
mull
js
inc
movsl
dec
lcall
incb
sub
jl
and
jge
pop
sub
adc
out
xchg
add
adc
testb
insb
sbb
arpl
into
dec
or
or
test
sbbb
add
gs
xor
inc
inc
mov
fsub
mov
pop
pop
inc
add
aam
pop
ss
dec
loopne
fstpl
push
mov
ss
aad
adc
add
test
mov
out
loopne
dec
push
cmp
mov
test
push
push
mov
sbb
rorl
jns
fs
aad
or
and
out
xchg
xor
test
xor
imul
ja
push
je
fstps
nop
cmp
insl
xor
inc
fimull
pop
mov
push
outsb
jae
cmp
or
fldenv
push
push
outsb
fildll
and
sub
push
xor
mov
mov
dec
sub
hlt
sbb
ds
fidivrs
sub
mov
sub
push
popa
cmpsl
sbb
jecxz
mov
aad
lret
test
icebp
adcb
aad
out
add
jo
mov
aad
loop
mov
push
xor
in
fs
and
mov
mov
test
jg
xchg
push
add
lock
mov
dec
dec
and
jg
outsl
out
cmp
dec
mov
icebp
fwait
out
push
and
test
rcrl
cmc
jo
out
mov
and
movsl
inc
pop
sti
sub
bound
or
lods
jno
mov
inc
and
shl
stos
aam
outsb
cs
das
mov
dec
dec
fldenv
push
outsl
ja
pop
aas
and
xor
cwtl
out
fidivl
push
loope
ret
inc
push
dec
jmp
mov
mov
aad
repnz
sub
jbe
nop
pushf
xor
popa
mov
adc
push
jb
mov
ret
push
mov
and
xchg
jb
incl
jo
sbb
xchg
push
movsl
cmpsb
mov
sub
mov
xlat
rcrb
jb
xchg
out
cmp
dec
leave
enter
mov
jnp
adc
jp
pop
inc
hlt
ljmp
popf
out
sti
arpl
les
es
jbe
mov
dec
stos
mov
je
inc
adc
ss
jne
jmp
pop
ret
mov
cmp
scas
sub
andb
mov
sbb
ret
fwait
cli
adc
xlat
inc
fwait
ljmp
xlat
pop
cli
xor
push
jns
loope
adc
mov
sbb
lods
rol
fadd
outsl
aaa
dec
cmp
adc
test
adc
mov
jo
cmp
sub
daa
ficompl
loop
xchg
pop
scas
cmpsl
ja
xor
jb
jb
imul
cld
adc
clc
mov
xchg
xor
ret
pop
in
xchg
adc
pushf
xchg
test
mov
push
fcomps
mov
pop
cltd
jnp
xor
ret
fs
repnz
dec
push
dec
cmp
add
sub
out
inc
loop
push
dec
sahf
lret
xchg
xor
iret
arpl
inc
xlat
jl
push
rolb
jae
sbb
mov
in
or
mov
or
in
test
inc
lret
cmp
call
mov
sub
movsl
or
dec
xchg
and
sbbl
pop
jae
cmp
add
pop
or
adc
mov
rolb
sub
fisttpl
loopne
pop
push
mov
inc
add
lea
push
fs
inc
mull
ss
or
add
dec
mov
mov
or
iret
ret
dec
pushf
or
push
nop
call
mov
mov
cmp
pop
lcall
sub
or
xor
dec
into
pop
call
xchg
push
lahf
dec
cld
inc
pop
push
outsl
or
daa
sbb
or
mov
mov
std
adc
mov
jo
fldt
scas
shlb
shll
sbb
pop
xor
stos
or
and
lcall
int3
add
push
les
jno
push
pushf
daa
sub
out
and
xchg
scas
out
or
add
xlat
inc
das
popa
pop
pop
test
andl
inc
rclb
movb
xor
int3
sub
loop
xor
mov
jecxz
or
inc
out
mov
aad
fsubl
int3
lret
fs
jns
pop
out
insl
dec
in
loopne
lret
pushf
test
push
and
mov
jge
jnp
jbe
cmp
mov
jmp
mov
loop
test
pop
cmpsb
push
or
jp
or
mov
lret
mov
xlat
cwtl
mov
mov
test
mov
lcall
scas
cmpl
in
daa
imul
or
mov
mov
fadd
dec
xchg
add
test
sub
push
sahf
inc
or
out
jle
or
add
xor
outsb
insb
mov
add
adc
and
mov
mov
sub
loop
xchg
js
in
fcompl
lds
lret
cmc
and
popf
sbb
xchg
mov
xor
mov
lcall
mov
stos
outsb
cmpsb
mov
xchg
adc
fnsave
jle
ss
aas
in
dec
sbb
dec
jbe
negb
adc
or
jnp
cmp
push
fbld
lds
mov
movsb
or
lret
dec
pop
pop
les
xchg
or
js
push
mov
jecxz
dec
dec
xchg
insl
mov
hlt
int3
or
mov
jmp
lock
outsb
iret
add
ficoms
pusha
in
push
outsb
dec
sub
cmc
or
pop
and
lock
or
hlt
add
imul
stos
xchg
jle
and
ret
jge
mov
jecxz
mov
xor
cmc
test
xchg
mov
stos
out
sub
mov
aam
bswap
popa
inc
cmp
out
pop
aad
mov
xchg
lahf
cmp
add
jb
pop
jbe
xor
jae
js
jl
sbb
test
sub
lods
fsubrl
imul
or
lods
out
jno
pop
mov
ss
mov
fisubs
cmpsb
stos
mov
push
out
xchg
inc
mov
mov
push
push
add
sarb
xor
cld
clc
mov
push
or
cli
test
push
push
mov
jne
iret
stos
mov
cmp
dec
das
jp
push
pop
sarl
pop
mov
inc
inc
sbb
mov
lea
fdivs
mov
pop
and
or
fs
enter
fistps
imul
push
adc
sub
sbb
fstl
pop
cltd
cld
arpl
and
jno
ret
fistps
or
xchg
je
decl
xor
ja
lret
ss
adc
movl
push
fwait
repz
data16
fisubrl
iret
lcall
js
cmpsb
sub
mov
xor
les
mov
jne
mov
cld
dec
scas
ds
in
jbe
in
xchg
and
nop
pop
add
ret
lds
nop
push
mov
jo
jno
movb
cmp
jae
fstps
loopne
jae
dec
jg
daa
ficoml
mov
jle
dec
ret
stc
les
push
shll
fsts
insb
inc
dec
cmp
test
adc
hlt
aam
loopne
aas
neg
cld
lds
sarb
xor
cmc
pop
jle
sbb
les
aam
push
cwtl
mov
int3
or
scas
sbb
adc
les
outsb
fwait
enter
fidivrl
fdivs
arpl
dec
scas
repnz
std
test
sub
mov
jmp
jmp
mov
aaa
adc
int
mov
add
loope
jp
aaa
out
pop
mov
lcall
push
adc
dec
imull
or
nop
gs
leave
stc
inc
cmp
cmp
jecxz
mov
repz
cltd
iret
roll
in
jecxz
fs
test
mov
aaa
aam
clc
and
mov
mov
lret
mov
sub
xchg
jbe
loopne
out
sbb
mov
aam
and
xlat
or
movsb
data16
fs
sbb
gs
cmp
fwait
jg
mov
inc
sbb
icebp
fsubrs
mov
lods
jl
pmaxsw
out
rclb
mov
leave
loope
or
insl
jne
loope
push
mov
int
cmp
inc
outsb
push
jne
inc
pop
jp
sbb
sub
sbb
das
ret
stos
imulb
div
jns
or
adc
mov
int3
mov
sbb
test
jmp
push
outsl
and
xchg
jno
ret
push
pop
test
mov
jns
fwait
jmp
lret
push
push
push
add
pop
addr16
out
lahf
inc
test
adc
outsb
sbb
out
dec
sarl
inc
xor
add
and
add
gs
and
outsb
pusha
sub
and
and
addr16
jne
mov
push
mov
imul
inc
loope
sbb
fisttpl
mov
gs
or
fistps
int
ds
mov
fbld
mov
cmpsb
push
jno
bound
add
push
test
and
lds
push
cmp
or
mov
jle
loope
pop
lret
aaa
add
popa
xchg
or
pop
repnz
mov
stc
test
std
or
imul
cmp
xor
or
imul
mov
xor
cmp
inc
mov
aam
and
imul
pop
popa
cmc
dec
adc
inc
data16
and
outsl
dec
pop
adc
sub
pop
adc
pop
xor
ds
inc
fildl
arpl
into
or
into
iret
sub
xchg
rcrb
clc
dec
mov
push
push
sub
jbe
pop
loop
or
jg
stos
dec
xchg
fiaddl
xor
sub
push
stos
cmp
fmull
insl
orl
xor
sub
cmc
pop
bound
xchg
rcl
fwait
pusha
fiaddl
xor
std
in
incl
ss
fcom
push
add
out
ljmp
inc
cld
mov
mov
in
ficomps
add
adc
adc
inc
push
lret
pop
lahf
push
cmp
ret
aad
arpl
lcall
hlt
fisttps
xor
mov
out
test
pop
loope
pop
mov
loop
mov
jo
jns
inc
aas
xchg
cli
sti
pop
mov
sub
addr16
pop
loop
xor
adc
sbb
sub
xchg
mov
xchg
mov
mov
imul
je
pop
jbe
add
sbb
xchg
fdecstp
leave
dec
inc
test
arpl
jno
jl
das
mov
inc
jecxz
cmp
adc
cmpsb
in
ljmp
out
jae
int3
fucomp
movsl
jl
stc
push
lahf
adc
cmp
xchg
pop
loope
int
xor
pop
mov
xor
xchg
cmpsb
jg
ss
or
andl
icebp
ja
dec
cs
ja
jns
lea
sub
and
enter
ret
jle
cwtl
fidivrs
cs
pop
ljmp
hlt
xchg
inc
inc
lods
xchg
pop
mov
fs
fcomps
lcall
push
xorb
adc
push
repz
ret
xor
mov
mov
mov
add
xor
outsl
adc
addr16
fldenv
pop
xor
sarb
lahf
pop
ljmp
and
xchg
inc
xchg
xchg
add
cmp
push
rcl
push
pop
std
out
push
dec
je
lods
ret
add
sbb
fwait
stc
mov
cltd
cmp
lea
push
roll
xor
in
aad
push
and
push
xchg
xor
mov
push
cld
xor
adc
or
push
jecxz
inc
lea
xchg
push
cmp
push
fisttpll
jecxz
or
push
daa
sub
add
push
lods
idivl
sbb
sbb
xchg
shll
popf
mov
loop
dec
aad
sahf
out
loope
xchg
insl
xor
loopne
cmp
inc
data16
fsts
cs
jb
sbb
daa
adc
cltd
xor
sbb
ljmp
sub
sub
ss
add
push
lahf
int
in
movsb
or
stos
imul
mov
xor
xlat
inc
mov
adc
in
sahf
ret
dec
arpl
push
xchg
sbb
pop
xor
loope
jmp
and
add
ficomps
scas
cmp
repnz
es
or
jge
scas
jno
mov
pop
add
jp
popa
call
xor
sub
icebp
dec
jmp
mov
fidivs
repnz
sub
cmp
mov
xchg
cmp
aam
lods
out
lods
subl
fs
test
push
dec
push
adc
fsubs
repnz
push
popf
xor
lock
adc
loop
xlat
pusha
stc
mulb
leave
inc
cmp
cmp
pop
lea
js
adc
addr16
and
pusha
cmpsl
and
iret
mov
addl
jge
push
add
stos
js
adc
ss
cwtl
pop
dec
push
and
adc
enter
push
jbe
cmpsb
and
xchg
sahf
xchg
jo
filds
and
dec
xlat
in
insb
movsb
daa
std
out
inc
pop
into
outsb
ljmp
fbld
mov
cld
pushf
enter
inc
adc
fcomps
cmpl
mov
rolb
test
xchg
icebp
xor
dec
es
xor
lret
jl
pop
out
outsb
pop
es
xor
mov
imul
pop
add
lock
int3
fstl
adc
or
adc
icebp
ret
test
scas
loopne
out
cmp
pop
sbb
je
fisubl
mov
out
imul
testb
add
xchg
js
jns
xorb
or
and
cmp
mov
inc
inc
pop
dec
divb
arpl
bound
out
jns
sub
and
pop
ds
mov
fnstenv
lret
fbld
mov
outsl
pop
call
ret
lcall
outsl
lret
cmp
xor
int3
fidivs
scas
mov
xchg
out
bound
or
lds
inc
enter
pop
pop
sbb
arpl
xor
push
cmc
aaa
jno
adc
rolb
shll
idivb
div
daa
pop
jp
xor
je
mov
outsl
push
dec
push
enter
and
stos
clc
or
dec
test
mov
rolb
push
xor
adc
roll
dec
in
shr
cmp
jo
push
and
jbe
fsubrp
divb
or
adc
fcompl
jge
dec
cmp
popa
inc
or
mov
adc
mov
in
and
into
int3
sub
daa
fwait
outsl
scas
mov
gs
scas
cld
or
mov
fst
cmp
cmc
jno
jbe
xchg
outsb
shlb
pushf
mov
inc
dec
bound
jbe
sbb
sub
popa
sub
push
inc
jno
add
adc
subb
pop
leave
push
stc
mov
addr16
rclb
outsl
les
shlb
pop
push
in
mov
scas
mov
loopne
fs
or
jge
into
fs
mov
fxrstor
test
shll
cli
jno
xchg
sar
imul
fimuls
push
call
mov
shlb
outsl
sub
repnz
xor
or
sbb
pop
xor
loop
rorl
adc
cld
mov
jecxz
dec
xor
mov
ss
bnd
jne
out
and
push
pop
mov
rorb
dec
out
stc
sub
inc
jb
mov
mov
leave
pop
in
std
fimull
in
stos
pop
scas
inc
or
call
repnz
pusha
movl
outsb
test
clc
mov
and
mov
ds
jg
and
int3
sahf
fcmovnu
add
sahf
jle
or
adc
es
pop
lods
adc
leave
pushf
ja
cmp
fstpt
jnp
pop
add
add
out
add
pushf
cld
sub
cs
icebp
stc
dec
inc
push
iret
mov
jp
mov
in
outsb
sahf
adc
stc
xor
cmpsl
cmp
and
sub
inc
iret
sahf
in
adc
inc
mov
lds
imul
mov
xchg
gs
test
mov
lods
dec
cmp
inc
rcll
aaa
das
mov
jge
pop
shlb
loope
jge
push
loopne
in
cmp
adc
xchg
lahf
inc
xor
outsl
mov
test
or
mov
lret
mov
add
mov
adc
lods
js
dec
jge
mov
ret
jbe
dec
push
andb
push
xor
sub
mov
jmp
pop
or
xchg
jns
jp
rol
aad
pop
pop
and
shll
adc
or
sub
xchg
movsl
cmp
nop
push
test
pop
push
pop
add
sub
mov
faddl
push
jae
mov
push
add
sbb
test
sub
rcll
pop
shll
stc
fwait
xchg
dec
scas
xor
jbe
in
imul
stos
jge
mov
into
imul
imul
test
jb
pop
inc
std
pop
imul
and
inc
cmp
add
out
test
repnz
cmp
insl
in
add
std
or
imul
add
inc
leave
ret
lods
fs
mov
push
mov
shlb
jl
sub
xor
adcb
xchg
push
xchg
pop
sub
and
aaa
add
or
loopne
pop
sbb
cs
cmpsb
or
ds
fldl
and
data16
pushf
mov
push
daa
pop
jecxz
xchg
mov
sub
sub
push
sbb
jnp
pop
xchg
sbb
es
xchg
xor
xchg
imul
xchg
inc
add
mov
xor
daa
js
xor
jecxz
bound
dec
stos
repz
imul
xor
xchg
and
mov
ja
lods
insb
xchg
mov
fs
add
pslld
mov
push
add
scas
sbb
sub
or
and
pop
fnstenv
mov
ljmp
test
aas
out
jne
out
cld
pusha
int3
out
lods
dec
sub
int3
fidivrs
jp
cmp
jmp
shll
mov
push
inc
xchg
mov
dec
mov
loope
dec
cmpsl
mov
xchg
push
push
sub
mov
in
ljmp
jne
mov
cmp
in
bound
ror
dec
push
cld
mov
jns
nop
push
or
cmp
push
lret
in
imul
out
pop
int3
das
jmp
loope
mov
sbb
gs
push
push
dec
jge
stc
data16
xor
frstor
or
pop
jne
fsubrs
aaa
movsl
es
adc
js
in
ret
pop
xchg
or
sbb
xor
adc
inc
add
sub
sarl
fs
lods
insl
push
inc
jp
test
cmp
loop
adc
or
movsl
adc
aaa
ret
adc
cmp
out
nop
jge
call
jne
out
sub
push
xlat
in
dec
push
add
lret
inc
test
or
in
xchg
cmp
ror
lods
movsl
lret
addr16
xchg
and
push
aam
addr16
js
xchg
xchg
test
imul
pop
pushf
ds
and
icebp
mov
sti
out
test
xor
mov
jno
adc
sub
into
inc
aaa
rcr
test
lods
sbb
sar
or
xor
add
push
leave
sub
arpl
ret
adc
shl
jle
je
mov
xor
mov
push
cltd
cmp
pop
push
push
mov
lcall
pop
cmpsb
fcoml
pushf
fsubrl
inc
cli
cmp
and
cmp
shll
mov
mov
mov
pop
out
push
pop
mov
jbe
mov
mov
scas
fs
push
in
test
xor
call
rcll
mov
and
lea
in
aaa
jo
mov
lds
cmpsl
sbb
inc
mov
jle
jp
add
je
in
push
testb
xchg
sbb
repz
mov
fmul
shll
jl
fldenv
lahf
mov
cmp
rorb
aam
or
pusha
inc
test
mov
fistps
out
sub
popf
xor
sbb
fstps
lods
dec
les
add
sbb
fidivrs
cld
and
mov
out
mov
push
mov
pop
and
xor
movsl
jnp
gs
adc
jns
fwait
sarb
push
movsb
cmpsb
and
lahf
xor
int
mov
xor
jo
sub
inc
repz
mov
aad
mov
shrl
jbe
ror
sub
push
push
inc
and
lahf
and
adc
cmp
fmuls
xchg
cmp
insl
gs
sti
int
pusha
daa
into
cmp
out
cmp
xchg
and
xor
or
push
aam
mov
inc
and
pop
popa
js
sub
inc
push
mov
sub
add
cmpsl
loopne
push
or
insb
pop
or
adc
mov
sub
mov
lahf
inc
adc
jge
jns
jmp
fs
imul
mov
inc
adc
in
and
lods
out
add
popa
stc
xchg
scas
jl
sub
movsb
push
decl
es
ret
movsb
mov
fistpll
jmp
call
jp
dec
aad
pop
push
shll
outsb
arpl
xchg
lcall
in
push
push
adc
cmpsb
mul
inc
out
cmp
bnd
xchg
mov
stos
outsl
jo
pop
pop
push
xor
or
adc
cltd
fldenv
inc
mov
fistpl
jl
cmp
scas
xchg
inc
dec
scas
xchg
cmp
jecxz
push
lods
call
sbbl
out
inc
xlat
and
cltd
push
jnp
loop
ficoms
int3
mov
or
pop
jae
out
dec
fisubrs
pop
scas
pop
in
insb
and
sub
lret
inc
aam
mov
icebp
outsb
je
and
sub
shlb
cmpsl
sbbl
int3
mov
shl
push
das
les
into
stc
je
inc
cmpsb
shr
push
shll
leave
sti
filds
dec
or
aam
xor
cmpb
mov
iret
out
dec
stos
mov
in
pop
dec
outsl
jbe
mov
mov
popa
ret
sbb
je
sbb
or
insb
mov
das
loop
ja
and
and
out
and
jge
std
in
subb
mov
cmpsl
fwait
xor
jne
mov
inc
jnp
pop
fstpl
orb
fucomi
jp
inc
mov
mov
sti
or
shll
add
jo
mov
pushf
aad
and
sub
adcl
fs
jae
mov
dec
jb
insl
push
cwtl
fldenv
jno
push
int3
jle
cs
dec
cs
dec
cmc
lods
xchg
and
jecxz
mov
scas
push
jbe
into
push
and
negb
mov
mul
gs
mov
jl
mov
sub
dec
inc
stos
mov
sub
lods
add
cld
scas
or
inc
add
mov
inc
pop
and
leave
aas
dec
xlat
dec
pop
jp
jmp
imull
outsb
pop
int
leave
bound
push
aam
data16
aaa
cmp
mov
sub
lods
sahf
xchg
nop
movsl
mov
jae
xor
pop
mov
test
sahf
jmp
cmpsl
and
in
mov
xchg
and
push
stc
mov
mov
push
jne
push
rclb
inc
pop
jecxz
push
mov
jne
shll
stos
movsl
sar
push
hlt
js
xchg
es
xchg
nop
in
pop
mov
outsl
push
xchg
sbb
pop
stos
pop
lahf
xor
or
rolb
inc
je
inc
cmp
add
cmp
call
mov
dec
nop
adc
clc
out
leave
inc
jge
mov
mov
test
enter
cmp
pop
ret
mov
pop
sub
shrl
cmp
sahf
call
scas
cmpsb
jo
sub
add
or
test
sbbb
xchg
adc
pop
sub
mov
and
mov
in
fs
popa
mov
and
subb
js
ss
sbb
out
sub
aam
fsubrp
adc
or
jle
adc
inc
fdivrp
and
pop
mov
sar
adc
dec
rorb
xor
loop
push
mov
mov
sub
leave
sti
ss
pop
imul
mov
xor
sub
mov
push
fcmovnu
dec
popa
out
push
push
sbb
mov
hlt
das
mov
ficoms
into
mov
cmp
lahf
stos
aad
mov
cmpsb
fadds
cmp
push
sbb
mov
add
push
mov
into
fs
mov
adc
lret
insb
jl
fisubl
xor
dec
ds
cli
clc
testb
repnz
std
xchg
in
pop
and
dec
ror
pusha
sbb
pop
test
out
mov
es
arpl
loop
and
js
shl
nop
aaa
repnz
dec
jae
xor
cs
paddsw
fmull
lods
and
fstpl
jl
inc
sub
pop
and
enter
sub
cmp
insl
or
rolb
out
ret
clc
mov
pop
shll
fistpll
pop
cmp
iret
push
vpaddq
xor
pop
mov
mov
cmc
adc
or
xchg
test
fildl
lds
xchg
clc
mov
add
dec
mov
test
mov
scas
repnz
mov
nop
in
lods
in
xchg
sbb
test
lea
sub
stos
xor
xor
or
adc
mov
out
jo
loopne
sti
cmp
popa
or
inc
push
add
push
std
frstor
mov
sub
xchg
mull
push
lods
xchg
dec
pop
icebp
push
jno
adc
or
imul
mov
dec
subb
lock
dec
cmc
adc
insl
push
cmc
xorl
push
in
pop
pop
rorl
sub
sub
lret
adcb
into
sahf
pusha
mov
cmpb
cld
ds
lds
or
stos
imul
negb
jns
fisttps
loopne
bound
mov
xchg
shlb
movsb
icebp
loopne
mov
in
mov
lock
add
or
test
fsubs
xchg
aam
xchg
sub
add
ds
push
das
scas
sbb
scas
nop
idiv
mov
shll
mov
pushf
xor
aas
jbe
aas
das
scas
lods
pop
pushf
pop
adc
mov
in
xchg
xchg
loope
shll
mov
push
mov
loop
xchg
fucomp
mov
and
jbe
out
pop
and
in
and
sahf
jbe
push
mov
mov
jns
leave
stos
lcall
cmp
sub
les
sub
xor
push
pop
scas
aas
mov
cltd
addr16
mov
dec
push
dec
lods
test
pop
pop
mov
pushf
xor
pop
and
add
loopne
adcb
icebp
lea
fstl
les
sub
xor
stc
or
adc
fisubs
enter
test
mov
icebp
or
dec
inc
xrelease
arpl
outsl
lret
xchg
adc
mov
adc
mov
movsl
test
cmpsb
xchg
add
aaa
lods
jge
push
push
cmp
scas
sbb
xor
out
push
stos
cmpl
sbb
imul
jmp
push
pop
test
sbb
insb
push
xchg
in
xor
dec
pop
pop
pop
add
xchg
push
arpl
fcoml
xchg
dec
dec
gs
popl
sbbl
pop
sbb
stos
jecxz
data16
enter
leave
pop
lods
int
jb
ret
mov
aas
sbb
popf
mov
xchg
scas
jne
xor
into
insl
fnstcw
jg
iret
or
shl
lock
push
decl
cmp
sar
add
xchg
cmpsl
xor
jmp
or
push
adc
mov
test
subl
movsb
test
xchg
aas
lahf
rcll
add
sbb
call
daa
cld
sbb
nop
lcall
inc
add
lock
add
std
sbb
jnp
mov
xor
arpl
outsb
dec
subl
and
mov
add
mulb
call
adc
sub
orl
jg
addr16
repnz
dec
pop
clc
xchg
sahf
xchg
push
xor
mov
cmc
out
int
xchg
mov
jo
xor
inc
add
sub
test
mov
fadd
xor
pusha
jle
pop
jb
jp
push
cmp
push
or
jae
pop
popf
pop
outsl
cwtl
mov
sbb
cmp
xor
xchg
mov
pop
sahf
das
addr16
xor
cmpsl
arpl
push
int
test
push
nop
inc
xchg
shl
movb
pop
test
hlt
pop
add
or
or
pop
out
insl
aas
loop
xor
scas
xchg
rcrl
imul
push
js,pt
mov
inc
addr16
adc
xchg
fst
pop
addr16
in
push
mov
mov
test
repz
test
mov
das
ffreep
ret
xrelease
mov
lahf
sarb
push
iret
pop
out
add
lcall
and
dec
dec
ret
xchg
mov
stos
hlt
aam
push
inc
loop
cmp
mov
xor
inc
pop
aam
sub
add
into
les
pushl
xor
lahf
sbb
cld
jle
idivl
loop
sbb
mov
mov
mov
repz
out
shlb
xor
out
cmpsb
pop
pop
mov
push
sbb
js
jnp
push
ret
mov
mov
scas
stos
mov
jge
xor
mov
jb
inc
mov
inc
js
lea
cmp
jl
or
push
scas
pop
jge
incb
mov
push
xchg
and
insb
lret
pop
xor
addl
lret
jo
mov
je
sti
xor
add
sbb
ret
jmp
dec
and
sub
fldenv
popf
adc
insl
fdivp
push
dec
idivl
iret
xchg
dec
or
adc
cli
fs
int3
jl
and
imul
mov
mull
es
daa
push
shlb
orl
mov
jns
rcll
mov
paddsb
loope
xchg
iret
and
insl
push
imul
ss
lahf
repz
jae
aaa
mov
jno
or
cli
push
outsl
pop
mov
cmp
ds
sti
fstl
test
mov
pop
into
in
or
jmp
push
rcl
loop
mov
int
jecxz
mov
mov
mov
mov
hlt
lahf
dec
push
enter
xchg
jno
and
push
fsubrs
lock
or
mov
sub
cmp
movsl
ss
test
pop
and
jge
or
mov
push
sbb
add
enter
leave
adc
insl
shl
xchg
mov
scas
rol
push
mov
dec
cld
jge
mov
push
and
movsl
inc
imul
mov
push
movsb
inc
sub
push
and
push
mov
push
daa
lock
add
sbb
scas
jle
outsb
aas
hlt
jle
mov
test
xchg
popa
subl
loopne
sbb
ror
or
insl
sbb
push
clc
or
mov
xlat
push
ljmp
imulb
mov
xchg
pop
dec
ret
fistps
sub
imul
pop
and
mov
jno
mov
stos
dec
sub
sbb
daa
pushf
pop
lods
addr16
lret
cs
add
push
sbbl
clc
loop
ficomps
and
lret
add
testl
sbb
cltd
pop
enter
lret
daa
addl
int
out
icebp
pop
into
iret
and
pop
push
sbb
js
or
push
push
pop
repnz
sbb
push
mov
dec
shrb
int
outsb
fadds
ret
stos
mov
inc
inc
mov
jo
and
sbb
jmp
adc
in
pop
push
xchg
xchg
lods
xchg
cmp
ret
bound
pop
fdivrs
shl
sub
mov
pop
dec
inc
in
test
pop
cmp
cmp
ds
sbb
pop
rcll
test
and
sbb
pop
xor
shll
in
add
and
lock
xlat
mov
sbb
mov
or
cmpl
or
dec
das
fs
mov
jge
fdivp
mov
sub
cltd
enter
cli
stc
adc
push
insl
cmp
loope
xor
mov
cmp
fs
xchg
clc
pushf
and
mov
dec
cmpsb
cwtl
jmp
mov
icebp
shrl
rol
lods
cli
insl
mov
loope
add
adcl
inc
nop
or
xor
adc
sbb
mov
adc
push
iret
add
shll
loope
push
test
xchg
add
xchg
push
mov
hlt
dec
mov
sub
repnz
jg
jmp
in
divb
mov
pop
xor
add
push
out
repnz
mov
pushf
sub
scas
push
or
stos
jle
insb
push
rcr
adc
ret
fdivrl
fs
lods
or
fisubrl
dec
ss
mov
aas
bound
jmp
xchg
outsl
adc
out
call
push
inc
aad
mov
ljmp
mov
ss
pop
dec
cwtl
mov
mulb
je
testl
sub
sti
stc
scas
lahf
xlat
pop
out
cmpsb
fcomp
jbe
mov
inc
pop
push
mov
rorl
and
xor
push
xchg
aaa
imul
mov
scas
mov
icebp
cli
out
repz
sub
push
jge
sub
icebp
ret
fmul
sub
jo
xorb
xchg
mov
xchg
loop
dec
test
push
imul
sbb
jno
fcmovne
es
dec
sub
dec
sub
call
ret
cmpsb
inc
xor
cmp
push
cmp
mov
mov
xor
cli
or
ja
jnp
sarl
imul
xor
sbb
cwtl
push
mov
sbb
cmp
cmpb
rolb
pop
outsb
or
pop
push
push
test
mov
mov
shlb
sbb
insl
mov
in
loopne
sbb
mov
outsb
rcrb
add
dec
stc
pop
mov
jecxz
repnz
add
push
sub
pushf
dec
push
test
out
loop
outsl
adc
cli
ret
push
loop
fcomip
dec
sbb
nop
aas
jg
sub
inc
xor
mov
lea
inc
enter
stos
jne
imul
jne
pop
or
dec
rcrb
lods
je
and
hlt
or
mov
sti
dec
pop
sub
adc
cs
push
mov
sub
fs
scas
out
dec
into
xchg
and
stos
xor
and
cmp
lret
rcl
xlat
es
mov
bound
test
mov
mov
stos
jnp
pop
mov
test
fistl
popf
popf
dec
sbb
sahf
mov
mov
aas
fisubl
mov
call
sub
lahf
stos
popf
or
pop
mov
jns
fidivrs
cmp
lcall
mov
stc
jg
mov
dec
bound
rclb
cld
inc
cmp
sub
lods
xchg
mov
xchg
repnz
outsb
jae
adc
negb
call
test
sbb
xchg
xor
sub
sub
push
fs
jp
in
jmp
mov
cmp
cmp
add
inc
cmpsb
pop
lahf
dec
test
jno
cmpl
insb
mov
sbb
jecxz
xchg
mov
mov
stos
out
mov
jmp
jmp
add
insb
pop
inc
ja
xor
xor
shrb
pop
inc
mov
and
mov
and
jl
in
aas
jge
in
xlat
jge
mov
pushf
repz
hlt
mov
mov
push
or
mov
and
fwait
cld
arpl
sbb
dec
pop
das
imul
rdtsc
mov
jne
dec
cwtl
mov
jl
imul
jl
loop
shlb
mov
push
popf
dec
ds
xorb
ret
xchg
xlat
das
mov
pop
nop
into
push
cli
ss
mov
test
call
or
lods
dec
xchg
sub
adc
ficomps
jo
lods
lcall
pushl
test
or
pop
shl
dec
rcrl
cmp
cmp
add
xor
out
pop
out
in
mov
fisttps
xor
mov
bound
mov
int
push
push
jmp
lahf
loope
ret
cmp
je
or
lea
lahf
jecxz
pop
fdivl
xor
test
inc
ficoml
fnstenv
jns
mov
and
push
push
lret
lds
xor
xchg
inc
mov
cmp
fs
clc
sahf
popf
dec
enter
lds
inc
test
pushf
addr16
push
mov
mov
dec
xlat
pop
jne
stc
mov
mov
jo
adc
insb
aam
bound
movsl
sub
fildl
movsl
push
call
subb
jbe
and
dec
inc
ret
mov
cmp
push
test
or
xchg
cmc
xchg
or
sbb
sar
cmpsb
outsb
xchg
data16
sarl
out
adc
cmc
movsl
fsubrs
lcall
mov
fsubl
sub
pop
in
pop
mov
or
inc
lret
enter
or
jl
shl
pop
sbb
pop
xchg
pusha
js
jne
ljmp
sarl
dec
lock
push
push
xor
out
daa
mov
xchg
loope
iret
movzwl
gs
xchg
xlat
out
adc
push
std
mov
dec
mull
cmpsl
push
nop
and
adc
pop
pop
iret
dec
popf
mov
cmp
mov
cltd
mov
jmp
cmpsb
xor
lret
mul
push
ss
es
adc
or
cmp
inc
add
mov
out
aad
dec
xor
shrb
fcomi
scas
aaa
lods
dec
or
into
das
insb
loopne
bound
jmp
int
pop
mov
dec
test
adc
xor
data16
pushaw
imul
or
sbb
clc
xchg
mov
loop
mov
add
push
dec
push
xor
or
rol
outsl
sbb
cmpsb
cmpsl
inc
out
and
or
in
mov
repnz
dec
subb
xchg
repnz
and
dec
jmp
cmpl
push
mov
orl
decb
sub
lret
lods
orl
rcrb
ds
popl
jo
call
jnp
sub
stc
jno
nop
insl
mov
ret
aaa
imul
dec
push
cmpsb
cmp
aad
lods
adc
in
mov
out
dec
loop
lret
ljmp
pop
sbb
adc
fldt
test
push
xchg
inc
dec
orl
cmp
jb
data16
mov
inc
paddusw
sub
xchg
inc
xlat
gs
jmp
sbb
mov
cmp
les
bound
sbb
in
jle
push
fucom
fcomp
xchg
pop
shl
mov
or
addr16
notb
clc
dec
scas
sbb
inc
andl
inc
pop
shll
push
sub
xor
push
pop
addr16
adc
gs
jg
sub
test
bound
mov
mov
mov
insl
xchg
dec
mov
jnp
dec
in
pop
insb
test
mov
daa
pop
dec
xchg
xor
xchg
or
lcall
add
leave
lods
push
fstl
jbe
orb
cltd
inc
xchg
icebp
xchg
addr16
jecxz
outsb
jge
cwtl
mov
cmpsl
dec
pop
in
cli
add
jmp
inc
loopne
loopne
jne
xchg
sub
fucom
call
adc
mov
in
scas
aam
daa
inc
lahf
imul
ss
fsts
mov
loope
dec
fnstenv
xchg
and
pop
scas
mov
aas
mov
icebp
xchg
pop
repnz
sbb
js
xchg
jp
jno
push
jle
insl
in
mov
cld
insb
push
push
inc
cmp
test
in
dec
sub
inc
orb
scas
leave
inc
lods
mov
lahf
aas
subb
bound
mov
test
scas
stos
pop
push
or
dec
lea
sbb
adc
sbb
test
ret
adc
outsl
xchg
flds
sahf
int
clc
jno
sub
stos
sub
cs
addb
popf
jle
imul
jge
or
outsb
and
or
bsf
cld
popa
and
add
repnz
mov
pop
popf
daa
subps
ljmp
pop
hlt
xor
in
call
daa
and
mov
lds
add
sub
xchg
pop
mov
out
sti
mov
sti
fcompl
fmuls
cwtl
jbe
cmp
mov
xor
test
cmp
cltd
pop
lcall
jp
cmc
pop
and
pusha
out
sahf
icebp
cs
out
jmp
dec
into
add
jnp
xor
sbb
cli
mov
xchg
popf
aad
lahf
fs
xchg
pop
push
xchg
sbb
cmp
adc
jnp
lahf
dec
test
dec
mov
jo
js
pop
call
lcall
jmp
ss
cs
inc
push
xor
jmp
int3
pusha
ret
fidivl
mov
xor
mov
push
in
xor
xor
pop
push
mov
xchg
push
out
lock
xchg
imull
ss
stc
jbe,pt
dec
mov
sbb
adc
or
fcoml
clc
cltd
xchg
dec
push
xor
imul
sbb
push
add
pusha
add
jae
sar
test
sub
push
ret
xor
push
cwtl
pop
sbb
jb
push
popa
clc
dec
inc
in
adc
pop
dec
jmp
and
mov
sti
jle
dec
lock
fiaddl
push
inc
icebp
fisubs
mov
xor
sbb
push
popa
ja
jno
cmp
xchg
xchg
out
stos
ret
sub
sub
aad
pop
insl
cld
mov
inc
or
out
adc
mov
xor
push
push
inc
mov
lret
inc
imulb
jg
mov
pusha
add
sbb
fmull
das
fbstp
dec
sbb
repnz
ret
testb
out
push
cmpsl
jecxz
xchg
fs
in
sub
outsb
bound
ret
push
mov
out
mov
cmp
pop
inc
mov
mov
xchg
es
or
sub
out
scas
mov
pop
das
in
nop
jne
push
sbb
sti
shl
aaa
daa
in
jns
arpl
jno
lods
in
outsb
sahf
lds
push
xor
ljmp
add
or
jp
jns
lahf
dec
and
jp
mov
add
push
push
mull
mov
sbb
sahf
jl
pop
aad
in
jmp
mov
fcompl
mov
mov
mov
mov
movsb
lods
lds
mov
jbe
enter
ja
push
and
pushf
jp
jae
stc
popf
and
call
xchg
push
sbb
pop
lahf
int3
inc
cltd
pop
dec
fisttps
inc
adc
sub
leave
pop
jg
sbb
addb
cwtl
and
and
xor
jge
scas
lahf
xchg
and
frstor
cmpsl
ret
and
std
push
inc
and
cltd
loope
mov
mov
or
loop
push
out
hlt
xchg
inc
ret
mov
xchg
cmp
jge
inc
mov
sti
add
dec
adc
push
ret
scas
movsb
fsubrl
mov
not
xor
mov
ret
rcll
cmp
nop
sbb
xchg
pop
ljmp
and
sub
cmp
lods
cmp
rclb
cmpsb
dec
in
cmp
out
and
popf
cmp
mov
movsl
or
cmp
addr16
jl
push
cmp
in
push
pop
pop
mov
imul
pop
ljmp
xor
mov
add
pop
outsl
repnz
pop
in
mov
stc
sbb
inc
xchg
mov
leave
dec
adc
and
insb
push
dec
or
pop
fwait
in
stc
cld
xchg
sub
xchg
sbb
mov
xor
mov
pop
mov
shll
repz
inc
pop
outsb
movsb
js
loop
fwait
gs
sahf
adc
and
cs
into
arpl
dec
lret
ret
dec
jg
xchg
ficompl
xchg
adc
adcl
js
in
mov
xchg
and
into
dec
xorb
addb
loope
dec
adc
lahf
push
aas
fildll
jge
movsl
or
cmp
adc
sbb
pop
cmp
pop
sarl
inc
xchg
add
cmpsl
xlat
push
cmp
pop
out
sbb
cli
sarl
decl
or
call
jbe
jne
std
xchg
cmpsl
lahf
pop
add
hlt
lcall
test
adc
mov
sbb
push
cwtl
xor
pop
xchg
inc
add
xor
mov
add
cmp
push
hlt
cmp
neg
bnd
mov
testb
dec
js
fbstp
jp
jne
fwait
push
inc
test
add
mov
xlat
addb
mov
pop
loop
inc
push
sahf
pop
jbe
andl
das
gs
lods
pop
clc
mov
scas
push
pop
xor
inc
mov
cmp
out
in
sbb
inc
enter
cmpsl
mov
rcrl
movb
lret
aas
mov
cwtl
jo
ds
push
fistps
and
outsb
push
imul
mov
push
mov
sub
dec
shlb
jge
in
add
lods
mov
jns
adc
pop
daa
lahf
inc
push
adc
inc
addb
in
out
xchg
andps
sbb
or
mov
mov
mov
push
testb
shl
or
inc
mov
shlb
out
in
mov
out
rcl
movzbl
or
or
lcall
xor
jge
leave
sbb
popa
pop
inc
jnp
or
sbb
jmp
in
ds
scas
addr16
lods
mov
push
dec
sbb
test
push
ljmp
cmp
test
or
xchg
add
movhlps
jp
out
cmpsl
and
pop
mov
mov
add
mov
xchg
outsb
sahf
test
xchg
pop
popf
fucomi
mov
loop
inc
clc
mov
sbb
pusha
cli
js
sbb
outsb
mov
fnstcw
jmp
insl
cmp
hlt
shll
push
dec
push
jno
lahf
rclb
pop
rclb
daa
inc
outsb
into
push
sub
jmp
and
adc
pop
xor
fstps
mov
int
out
push
scas
enter
loopne
dec
pop
jg
pop
xor
mov
outsl
pop
sbb
sub
mov
mov
icebp
lds
pop
fxch
mov
inc
jmp
xor
lret
inc
enter
mov
add
lds
bnd
dec
sahf
pop
sbb
jmp
sub
push
sbbb
add
mov
jae
loope
mov
cmp
je
pop
dec
arpl
dec
sbb
or
dec
fidivrs
xor
adc
imul
paddw
xchg
mov
adc
enter
cmc
pop
sub
jae
xlat
stos
xchg
je
mov
jo
xlat
sbb
icebp
add
shl
repnz
xchg
gs
jg
inc
xchg
and
dec
iret
ss
dec
leave
std
push
aad
ja
testb
mov
lods
dec
lea
dec
imul
push
pop
xor
lds
inc
ss
push
cld
enter
cmc
cmp
shll
mov
mov
sub
mov
ss
lods
outsb
jp
scas
insl
xchg
inc
out
into
scas
cli
mov
mov
jne
fwait
test
out
std
in
lods
adc
enter
push
add
mov
mov
fsubl
test
mov
test
insb
jb
xlat
mov
add
ret
adc
pop
test
rcl
push
loope
out
pop
cmpsb
cmp
cmp
pop
inc
dec
pop
xchg
sub
cli
cmp
and
mov
mov
stc
jbe
test
test
lods
out
xchg
pop
int
ljmp
xchg
mov
subb
test
add
faddl
xorl
movsl
or
xchg
stos
push
adcl
mov
nop
push
xchg
pusha
adc
repz
rcrb
xchg
stos
shll
mov
and
jge
cmp
or
inc
mov
test
xchg
les
gs
dec
scas
or
out
dec
sub
jecxz
mov
hlt
mov
jmp
sbb
int3
in
mov
xchg
xchg
mov
cmp
mov
jbe
in
idivl
shrl
out
xchg
fdivl
inc
cmp
sub
pop
inc
xchg
jb
dec
clc
or
notb
test
mov
adcl
xchg
mov
ret
repnz
pop
or
push
xchg
pop
pop
cld
shll
pop
lret
in
bound
xchg
fcoml
sahf
push
lret
xor
dec
cmpsb
je
and
and
sub
push
adc
cmpsl
and
jle
push
ja
mov
aaa
sti
jb
add
int3
mov
test
cld
aaa
or
mov
add
and
pop
cmpsl
adc
mov
ret
daa
js
rep
xchg
mov
and
xor
add
les
shlb
rcrb
stc
adc
push
xchg
adc
cmp
add
jle
jbe
aad
push
xor
jnp
mov
xor
xchg
pop
dec
mov
mov
xchg
jns
daa
push
lret
ret
add
sub
std
dec
add
fisttpll
es
loopne
enter
dec
ljmp
jp
ljmp
push
lea
jns
pusha
dec
pop
insb
add
xchg
aaa
imul
movsl
pop
mulb
into
push
jge
jecxz
push
or
es
pop
js
cmp
mov
dec
mov
push
adc
out
nop
jnp
outsb
aad
nop
mov
pushf
pushf
jge
aam
sahf
lods
mov
les
sti
movsb
iret
or
push
sub
outsb
cwtl
test
jae
mov
adc
lds
fildll
jns
mov
fiaddl
and
pop
sbb
gs
adc
daa
push
jo
and
push
int3
xor
mov
repz
in
mov
sti
push
inc
roll
xchg
int3
push
jno
out
lea
pop
sarb
xor
push
ljmp
jno
lods
inc
push
daa
xor
cmpsb
or
into
sahf
lds
sub
dec
mov
and
inc
test
and
mov
xlat
test
fmul
outsb
dec
sti
mov
scas
or
mov
fldt
xchg
icebp
aas
int3
dec
dec
test
push
xor
js
mov
cmpsl
dec
test
subl
dec
push
cmp
pop
in
stc
pushf
inc
movsb
pop
cmp
jmp
vmwrite
cs
jb
in
xchg
dec
loope
out
or
stc
daa
jbe
jl
das
pushf
xor
cmp
jge
jo
repz
pop
out
dec
xchg
cmp
lcall
pop
push
test
data16
pop
mov
mov
and
movsl
xchg
icebp
enter
data16
test
and
cld
dec
inc
cmpsb
int
scas
inc
in
popf
lahf
fldz
cmp
dec
mov
lods
bound
pop
adc
xchg
cld
add
inc
mov
dec
leave
std
je
mov
outsb
xlat
loopne
mov
or
adc
jmp
addl
dec
inc
or
dec
push
insb
mov
fwait
mov
and
es
add
pop
fmuls
mov
je
push
into
data16
stc
jbe
inc
popa
cmc
clc
or
arpl
in
push
mov
xchg
cmp
mov
mov
jp
xchg
mov
icebp
adc
pop
imul
paddusb
jg
mov
xchg
addb
pop
lods
and
and
int3
jns
cmpl
pop
icebp
add
out
scas
cs
and
out
inc
popa
outsl
imul
mov
push
adc
stos
icebp
insl
cli
jl
lea
test
mov
cmpsb
and
inc
mov
pushf
aad
xchg
adc
push
jbe
test
jecxz
cltd
and
dec
sub
clc
sbb
movsb
sbb
inc
xchg
fisttpl
test
push
faddl
jg
mov
shlb
mov
dec
aad
rcrl
fwait
xchg
imull
mov
orl
mov
inc
imul
push
sbb
test
push
sti
addr16
and
jle
push
es
and
orb
nop
cmc
xlat
pop
push
stos
add
lret
and
ret
inc
imul
sahf
pushf
mov
adc
add
cmp
inc
fmull
icebp
out
and
mov
aad
leave
push
push
call
adc
or
xchg
fidivrl
mov
dec
addr16
mov
mov
sub
addr16
int
in
xor
cmp
leave
lret
push
test
lock
clc
mov
push
cmp
mov
mov
bnd
sbb
mov
sub
push
cli
xchg
mov
adc
pop
jbe
in
xchg
les
push
dec
stos
and
into
xchg
xchg
add
hlt
cli
adc
std
mov
leave
repnz
and
and
outsb
sbb
fists
aad
es
or
cmp
xchg
jge
ja
ljmp
cmp
lret
xchg
inc
test
xchg
or
test
out
or
into
sbb
loope
loope
mov
jmp
mov
push
mov
adc
pushl
mov
mov
je
lret
neg
lret
and
mov
jl
cmc
jae
lock
mov
test
wbinvd
cwtl
outsl
dec
xchg
mov
mov
ret
mov
or
add
mov
push
push
aas
mov
sbb
jbe
rolb
mov
mov
push
mov
clc
sbb
mov
xchg
sbb
lret
repnz
sbb
xor
sbb
mov
lds
lock
clc
pop
ss
pop
xchg
cld
les
mov
out
push
sbb
mov
add
sub
jge
cmp
leave
aad
fs
fdiv
adc
adc
ret
mov
call
ret
cwtl
jecxz
pop
jl
add
addr16
pop
adc
jns
mov
lods
loopne
adc
mov
sbb
loopne
jne
aas
pop
inc
jo
cmpsb
pop
lds
ja
jcxz
cmp
inc
subl
cli
es
cmpb
fsubp
jne
mov
mov
pop
jne
inc
xchg
pop
mov
xchg
loopne
pop
jne
ds
nop
xor
fs
xor
jno
scas
pushl
sbb
jl
inc
lods
push
rolb
mov
sub
lahf
mov
push
addb
inc
xor
lds
icebp
gs
mov
fdiv
sbb
xor
add
adc
jecxz
out
xlat
test
dec
sahf
xor
inc
sub
dec
inc
xchg
fs
imul
fwait
mov
cli
std
cltd
dec
mov
pop
mov
dec
sub
mov
jno
inc
lahf
bound
leave
jo
fisubrs
and
outsl
lcall
add
call
or
push
das
mov
nop
push
xchg
or
lcall
cmp
lods
insl
add
nop
or
xor
push
test
pop
pop
cmp
cwtl
sub
dec
sub
xor
cwtl
stos
je
push
jmp
push
adcl
gs
add
jns
fcmovu
add
xchg
sbb
lret
adc
aam
in
adc
pcmpgtw
or
bound
xor
xor
cmp
insb
cmpsb
push
dec
repnz
loopne
cmp
and
fisttpl
xchg
movsl
mov
add
scas
aad
lret
xor
pop
pusha
or
sti
aad
mov
scas
dec
aam
in
loop
xor
icebp
mov
sbb
pop
cmp
popa
dec
mov
push
in
sub
jb
mov
sbb
outsl
jo
xorl
iret
mulps
cs
inc
loope
out
cmpsl
mov
push
dec
sub
inc
mov
jno
xor
inc
sub
cmp
xchg
aam
fbstp
mov
xor
mov
mov
sub
adc
jns
dec
iret
cld
pusha
push
rcr
xchg
jle
add
push
jns
lret
gs
jp
lret
cmp
cli
xchg
sub
dec
cmp
ds
pop
cmpsl
pop
lea
into
cltd
push
pop
xchg
inc
jo
lret
jl
sbb
addr16
jnp
sub
push
test
and
test
mov
rcrl
push
inc
or
pop
add
mull
add
lret
xchg
pop
dec
movsl
pop
iret
jp
es
xor
mov
inc
dec
in
loop
mov
sahf
repnz
aam
bound
cli
andl
repz
es
add
sub
ljmp
push
or
jge
iret
icebp
aas
call
mov
adc
es
out
aam
cwtl
adc
push
pop
dec
xor
dec
and
fiadds
inc
ficompl
xchg
sub
imul
hlt
ss
mov
insl
dec
shlb
xchg
out
push
cmp
push
inc
lcall
adc
repnz
js
xchg
add
and
cmp
mov
sbb
mov
out
cld
dec
xchg
outsl
cmpsb
ss
shll
sub
adc
push
sbb
stc
jmp
loope
lds
adc
cmp
mov
and
mov
push
mov
cmp
mov
inc
mov
xchg
pop
subb
add
filds
xchg
loop
cmp
pop
sub
jbe
mov
push
sub
gs
ret
adc
into
adc
jns
cmc
lock
pusha
pop
sub
insl
jo
pop
daa
push
call
and
gs
lea
push
jp
call
mov
ljmp
stos
jge
fldenv
mov
and
jae
hlt
outsb
ja
aam
cmp
dec
test
pop
fidivs
in
jne
push
lret
mov
iret
loope
or
or
fadds
xchg
lds
filds
in
push
jmp
orl
test
adc
shr
mov
clc
sbb
push
mov
test
and
add
ja
add
jb
xor
jno
and
ds
rorl
lods
sbb
sub
xchg
sbb
addr16
jno
push
adc
mov
xor
stos
dec
ljmp
pop
jl
fwait
jmp
lret
sub
jo
xor
fucom
dec
or
sbb
inc
adcl
ret
jne
mulb
push
int
inc
push
pop
push
enter
imul
loopne
adc
dec
js
les
xor
lds
xchg
inc
cmc
push
fldcw
mov
ss
or
dec
push
mov
and
fdivs
insl
lods
stos
ljmp
mov
testb
fdivs
nop
stos
pop
imul
pop
scas
sbb
fwait
mov
sbb
fs
cmp
jecxz
mov
loopne
sbb
mov
enter
mov
nop
subl
adc
mov
or
jns
sub
xchg
shrd
inc
dec
xor
and
lds
push
cmp
mov
jle
out
xor
into
int
xchg
mov
and
std
xchg
pop
insb
push
push
in
pop
fmul
aad
inc
jmp
or
imul
mov
sbb
sub
stos
mov
nop
adc
stos
rcrl
ljmp
cld
push
out
mov
int3
rcrl
pop
pop
jns
or
scas
call
int3
cmp
cwtl
rcll
frstor
out
add
add
pshufw
jg
cltd
pusha
jno
andl
outsl
arpl
rclb
aaa
sahf
stos
pop
out
in
fcmovbe
xor
lds
ret
push
jne
mov
or
xchg
mov
push
push
mov
mov
test
lret
mov
pop
mov
repz
sbb
xchg
xor
es
and
add
push
pop
repnz
xchg
mov
push
rcrl
mov
mov
fisubs
xor
pusha
and
loop
lret
ficompl
ja
lods
push
vpcmov
mov
jns
inc
sub
cmpsl
pop
dec
scas
xchg
movsb
add
imul
fdivrs
arpl
mov
push
sbb
int
imull
std
pop
or
xchg
xor
inc
push
repnz
aad
stc
dec
push
or
dec
sub
bound
dec
aas
fs
xor
pop
rorb
out
inc
popa
jns
mov
sub
xchg
push
or
inc
cmp
insl
stos
push
push
cmpsb
pop
lock
and
adc
movsb
pop
cmc
shlb
sub
shlb
sub
movsl
sub
scas
adc
outsl
cmp
subl
push
adc
mov
mov
sub
push
in
nop
sbbb
cs
fbstp
cltd
add
jne
xchg
sub
les
rorb
std
test
mov
dec
mov
jo
in
insl
in
iret
mov
sub
add
mov
sub
into
and
jecxz
int
xchg
ret
xchg
inc
rcll
mov
dec
jp
cmp
mov
fldenv
pusha
xor
xchg
add
scas
jb
or
fisubl
imulb
pop
jo
push
dec
jle
push
hlt
cmp
cmpsb
roll
out
jl
sbbb
je
and
add
dec
jbe
mov
stos
ret
ja
push
je
mov
lret
cmc
push
mov
or
dec
in
jno
cmp
push
and
or
inc
fdivs
sub
mov
inc
in
sbb
pop
aad
cmpsl
mov
jns
sbb
xor
xchg
into
int3
call
in
mov
or
jne
jns
loop
cmp
add
pushf
inc
sub
pop
inc
sbb
inc
imul
arpl
mov
es
and
cmp
dec
jle
test
popf
mov
jl
and
cmpsb
mov
push
add
push
add
repz
push
pop
and
in
stos
and
in
adc
shrb
push
lret
lcall
cmpsl
mov
add
aaa
bound
rcrb
mov
or
cltd
into
js
ljmp
sbb
rorl
stos
test
test
aaa
movsb
add
daa
insl
dec
in
test
stos
scas
cwtl
test
popa
mov
enter
pop
xchg
lea
or
test
dec
inc
xchg
cwtl
pop
pop
dec
mov
pop
scas
sti
and
test
sub
fcmovne
inc
pusha
inc
xchg
push
mov
xchg
push
mov
stos
cmp
dec
xchg
outsl
out
adc
adcl
aaa
cli
clc
mov
loopne
adc
sub
add
out
lds
jmp
nop
add
pop
add
xchg
inc
mov
sbb
or
dec
xchg
bound
sahf
sbb
adc
or
dec
fdivp
or
sbb
gs
addr16
icebp
mov
insb
sub
shll
mov
mov
mov
jno
scas
test
mov
pusha
loopne
mov
xchg
loopne
mov
xchg
or
out
jns
mov
push
or
jl
and
fdivs
in
push
or
orl
adc
add
inc
jne
jne
fwait
orl
jecxz
jne
pop
and
push
mov
mov
dec
push
dec
cli
jns
mov
pop
inc
jbe
dec
iret
cli
sbb
clc
leave
insl
fists
leave
mov
insl
jl
mov
sbb
sbb
fsubs
adc
jo
push
sbb
fcompp
dec
push
jb
je
aaa
cmp
mov
ja
sub
mov
xchg
jle
sbb
inc
mov
hlt
sbb
and
lds
outsl
mov
jno
mov
adc
stos
test
add
enter
lods
mov
adc
jno
in
ret
push
cltd
or
pop
test
pop
rcrl
das
iret
jmp
flds
ja
jno
jge
xchg
pop
lea
decb
mov
pop
iret
in
daa
stos
bnd
insl
ss
imul
sar
les
sahf
in
pop
test
pop
pop
aaa
jmp
std
int
mov
cmc
jae
jmp
adc
jge
mov
inc
mov
jl
in
out
data16
mov
push
sub
sub
mov
fldl
or
imul
inc
js
outsb
mov
ret
lea
jns
icebp
add
push
les
sub
jbe
sbb
mov
and
sub
jp
pop
test
std
pop
and
or
ja
cld
into
cld
sbb
mov
imul
sbb
rcl
push
imull
inc
scas
leave
fs
mov
pop
sbb
xlat
repnz
cwtl
mov
stos
xor
jge
xchg
mov
loop
adc
lret
mov
scas
dec
test
xor
ret
pop
out
xlat
popf
ljmp
jl
test
xchg
sbb
data16
aaa
cld
adc
adc
in
xchg
out
pop
pop
ljmpw
xchg
addr16
jns
addb
call
pop
sub
sbb
orb
loop
mov
inc
lods
loop
dec
jge
rorb
sub
mov
out
ficomps
or
frstor
mov
jge
push
push
int
pop
popf
mov
pop
add
es
or
addr16
outsb
sub
sub
mov
ret
pushw
dec
hlt
and
push
arpl
pop
push
jae
sbb
lods
mov
mov
fsubs
add
sub
sub
test
ret
jno
ss
lock
sub
pop
nop
out
fs
or
sbb
pusha
ljmp
jge
dec
scas
push
fsubs
add
ljmp
stos
imul
sar
add
out
jg
arpl
fs
jl
xor
dec
scas
icebp
cmc
mov
hlt
clc
adc
mov
jae
xchg
mov
mov
repnz
push
out
out
xchg
xchg
mov
cmp
jg
pop
dec
in
dec
sbb
mov
or
mov
sub
lahf
in
bound
dec
inc
imulb
add
cmpsb
pop
push
mov
ljmp
jl
rcrb
xchg
or
stos
push
add
add
xor
lea
cmc
bound
push
xlat
jo
mov
loopne
imul
and
fimull
cltd
test
or
jmp
orb
push
rolb
add
mov
fs
jno
inc
in
dec
add
loope
xchg
sbb
add
dec
sbb
sub
and
in
out
sbb
mov
xchg
dec
leave
and
inc
push
pop
lcall
sub
popf
push
xchg
sub
aad
jne
test
jle
cmc
and
sbb
leave
adc
cltd
inc
inc
sbb
adc
push
in
test
das
push
push
fwait
xchg
dec
jo
scas
mov
inc
dec
jb
mov
inc
mov
loope
outsl
stos
xor
xor
and
int
lahf
push
mov
and
adc
xor
add
inc
cld
dec
jae
mov
push
pusha
adc
mov
mov
mov
loopne
push
mov
rorl
sub
push
decl
movsb
lods
cli
adc
inc
inc
inc
push
jns
adc
push
lea
push
push
mov
in
daa
popf
psrlw
mov
push
dec
push
fldcw
out
fwait
mov
inc
ss
bound
xor
xor
sti
addr16
cmp
mov
xchg
jo
ret
mov
shl
or
pop
adc
xchg
jge
lahf
sub
mov
daa
outsb
pop
fsubs
shll
inc
je
div
cmp
mov
aaa
mov
and
push
mov
mov
sub
jge
aaa
mov
push
mov
adc
mov
stos
mov
arpl
test
mov
sbb
xor
icebp
mov
rolb
int
dec
movsb
sbb
rcrb
pop
outsb
sbb
mov
add
jns
push
aas
xchg
jne
stos
xchg
mov
push
pop
xchg
sub
cmpsl
inc
push
lds
stos
dec
sub
scas
js
pop
rcrb
data16
jecxz
lods
ds
xchg
inc
mov
scas
mov
jae
jle
mov
sub
out
push
inc
or
bswap
stc
stos
lea
call
jb
push
call
jge
stos
mov
ret
add
test
adc
and
xor
add
mov
adc
jle
cli
fs
mov
jbe
adc
inc
mov
mulb
jo
daa
and
mov
into
stos
andb
adc
int3
add
ds
pop
mov
imul
or
sti
ljmp
mov
lcall
pop
and
data16
out
es
mov
inc
jmp
jmp
cmpsb
xchg
xchg
dec
jecxz
or
inc
add
out
xor
mov
adc
out
jae
daa
andb
dec
adc
data16
ss
test
jae
lock
mov
fwait
jle
bound
mov
movsl
push
out
jnp
test
and
dec
dec
adc
dec
cmp
dec
insl
lock
pop
push
jno
mov
loope
jnp
cmp
jb
mov
scas
mov
cltd
mov
add
inc
pop
hlt
je
sahf
movsl
jp
dec
sahf
or
out
loopne
adc
rorl
jo
add
repz
or
add
lret
les
push
mov
aas
inc
pushf
xor
xchg
inc
pmaddwd
sub
icebp
das
clc
int
rep
pop
icebp
adc
cmp
aas
stc
jp
cltd
inc
cs
jl
inc
cmc
leave
xlat
jbe
icebp
mov
jno
insl
or
test
push
fs
push
js
loop
cmp
mov
es
pop
mov
xor
cs
cmp
add
cmp
ss
push
addb
adc
dec
hlt
or
push
xor
fidivrs
jp
in
popf
push
into
pop
jns
scas
lret
stos
cld
iret
cmp
xor
jg
fdivs
mov
hlt
cmp
gs
inc
stc
mov
push
xor
inc
sbb
sub
add
stc
insl
push
es
or
mov
push
xchg
jge
and
test
in
jb
mov
int3
je
fs
imul
popa
add
push
fisubs
pop
xor
loope
out
int
aam
sti
jbe
jno
xchg
or
dec
hlt
adc
repz
adc
xor
push
push
mov
inc
movsl
cmpsb
mov
mov
cmpsb
xor
push
ficoml
rcr
cmp
cmp
sbb
in
mov
in
jle
cltd
jne
adc
loope
jecxz
ljmp
sbb
or
xor
in
std
sub
push
lea
xchg
push
and
xor
adc
fldl
popa
xchg
shrl
inc
cmpl
jl
divb
decb
ret
repnz
push
out
dec
jb
jp
xor
pop
std
push
xlat
mov
push
mov
lret
jmp
adc
jg
xchg
push
call
insb
sbb
push
imul
mov
shrb
mov
iret
test
data16
iret
cmpsl
adc
or
xorl
xchg
scas
mov
push
sbb
jecxz
dec
adc
xchg
cmp
stos
fdivrl
popa
add
xchg
inc
fdivrl
xorl
inc
shll
xor
cli
jnp
lret
cmp
daa
adc
xchg
or
ds
cld
aas
add
imul
in
push
xchg
jo
or
stos
rorb
insb
imul
sub
outsb
lahf
xor
test
mov
hlt
xchg
cmp
shrl
aas
xchg
into
dec
ja
xchg
inc
lods
stos
sub
pop
lock
jne
jo
adc
dec
jecxz
pop
fsubrs
push
sub
lods
pop
inc
int3
lret
insb
adc
jns
jae
test
rcrl
add
adc
arpl
adc
jns
add
and
jecxz
incl
aaa
jl
mov
shll
pusha
scas
mov
adc
push
cmp
lock
or
andb
cltd
sbb
jl
movsl
popa
dec
mov
cld
pop
inc
dec
fs
sub
lret
fistpll
sbb
orl
inc
aad
dec
mov
jo
dec
xor
ds
mov
addb
adc
dec
gs
inc
das
mov
ret
int3
adc
jae
xor
subl
mov
mov
adc
ret
adc
sbb
push
cwtl
mov
sub
jo
cwtl
cmp
loopne
rorb
pop
aam
lock
test
fistpl
stc
or
dec
cmpsl
mov
pop
pusha
daa
dec
data16
xchg
int
js
test
out
pop
and
rcrl
arpl
xor
add
adc
subb
sbb
ror
mov
test
sub
adc
lds
fwait
adc
fmull
sub
lods
push
cmp
lods
movsl
mov
es
jns
add
lahf
test
aas
aas
jl
or
std
mov
push
icebp
cmp
adcl
imul
icebp
fists
imul
sub
cmp
mov
lcall
rcrb
fildl
jmp
fimuls
int3
jge
push
mov
jo
inc
inc
xor
movsl
movsb
xchg
xchg
add
insl
pop
lods
fwait
je
test
shlb
xorl
adc
or
fcomip
add
stc
cmp
stos
lea
repz
jns
mov
push
cmp
cmpsb
inc
xor
jne
or
sub
inc
pop
add
xchg
fcomi
xor
loop
and
mov
icebp
shll
pop
sbb
jp
je
jns
xorps
movsb
cmc
daa
pushf
por
xchg
pop
jg
jb
in
push
incl
sbbb
sbb
pop
jecxz
loope
into
or
xchg
movsb
cmpsl
jo
ret
out
inc
scas
scas
jae
mov
in
idiv
push
or
aad
pop
pop
lahf
shlb
sub
xor
arpl
pop
int
mov
cmp
das
rcl
push
aad
jbe
push
rcr
mov
stos
mov
sbb
cmp
insl
sub
add
adc
xor
stos
mov
out
dec
xchg
add
jg
adc
push
sti
popa
pop
or
stos
inc
into
xlat
clc
loopne
call
ds
fldt
shlb
mov
adc
add
stos
das
cmpsl
cwtl
or
out
jne
jb
popf
inc
mov
ss
js
popf
pushf
out
nop
sbb
aaa
and
jnp
fwait
or
orl
mov
ret
cmpsl
gs
mov
mov
scas
xchg
mov
sbb
mov
add
push
mov
sub
sub
sbb
mov
cmpsb
inc
pushf
arpl
xor
repnz
inc
jo
adc
fimuls
fld
lods
and
mov
xor
loop
adc
popa
and
push
fldt
sarl
jg
cmc
mov
stc
test
push
cli
cmp
gs
js
lock
adc
lock
rolb
xchg
inc
inc
mov
cli
mov
jns
inc
mov
daa
xor
sbbb
or
xor
pusha
adc
out
xchg
bound
aas
adcl
xlat
lahf
shl
push
movsl
cmp
pop
and
js
int3
enter
ret
xchg
js
fmull
dec
mov
jg
loope
pushw
lods
dec
pop
aaa
in
lea
fcompl
fucom
lahf
push
dec
sbb
jno
mov
ret
imul
data16
lcall
inc
orb
cmp
sub
or
mov
inc
loop
mov
nop
fsubrs
lock
cwtl
inc
cmp
popa
fmuls
inc
pop
mov
arpl
sub
aam
or
xchg
inc
mov
daa
rol
outsb
sub
psllw
stc
lods
sbb
in
fwait
jne
test
sbbl
pop
punpckhbw
std
adc
sbb
adc
aam
inc
pop
mov
aas
add
xorb
out
inc
and
popa
out
lods
mov
cmc
rolb
cmp
aaa
xchg
int3
sbb
enter
mov
mov
loop,pn
stos
ss
cmp
imul
pop
dec
fsubs
push
dec
aam
mov
dec
dec
mov
sbb
ds
adc
pushf
rcr
or
cmp
push
jns
or
xchg
dec
loop
xchg
add
mov
icebp
push
insl
stc
mov
mov
sub
in
push
shrb
fsubrp
or
add
lret
mov
jns
test
aam
xchg
stos
jbe
in
mov
mov
push
push
xor
addr16
pop
inc
xlat
jmp
pushf
cmp
ficoml
adc
lret
cmpsl
fcoms
push
mov
and
fs
xor
lret
and
lcall
sbb
cltd
outsl
xor
bound
arpl
and
xchg
jae
add
sti
outsl
aad
cli
xchg
sub
push
jecxz
sar
lods
in
sarb
dec
ss
ficoms
adc
mov
xchg
movsl
pop
or
pop
jg
adc
push
es
pop
sbbl
sub
decb
loope
in
add
add
and
mov
jle
addl
fnstcw
adc
enter
push
mov
cmp
or
adc
mov
stc
pop
fistps
mov
pop
jle
push
es
test
shll
dec
sbb
or
add
jbe
jmp
add
mov
stc
movsl
inc
mov
popa
ja
sbb
jo
lahf
iret
leave
rcll
adc
lret
cmpsb
sub
jge
stc
mov
js
push
test
and
sub
xchg
lret
xchg
fwait
in
and
adc
nop
jmp
push
loop
fcompl
shl
call
outsb
shrl
sub
lahf
aam
jns
mov
jecxz
add
js
std
cwtl
cld
add
repz
pop
mov
popf
push
mov
inc
cmp
fs
roll
sub
in
and
sahf
fisubl
sahf
adcl
hlt
mov
dec
outsl
xchg
mov
addr16
scas
fdivl
or
pop
add
mov
add
adc
xor
mov
add
dec
js
cmp
adc
cmp
inc
data16
cli
adc
and
mov
insl
rorl
cmp
ret
inc
call
js
movsb
sbb
push
ficomps
addr16
fadds
and
push
mov
in
out
das
leave
dec
movsb
sub
pop
jg
shrl
dec
cmp
rcll
xchg
jne
mov
sub
imul
addr16
dec
jbe
les
and
insb
shlb
call
rorl
fstpl
lret
fs
popa
jle
add
xchg
pushf
repnz
cmpsb
sbb
sub
cwtl
movsb
xchg
inc
loopne
dec
test
xor
imull
loope
or
les
sub
inc
popf
xchg
pop
adc
in
jge
loopne
sbb
inc
push
addb
or
loope
mov
sbb
mov
xchg
add
in
and
movsl
pop
das
cmpsl
fs
push
rolb
jo
inc
cmp
andl
xchg
jne
jne
fisttps
and
ret
test
xor
adc
shlb
dec
cmp
mov
es
inc
xchg
sahf
in
imul
fldl2e
and
sub
cmp
add
jns
mov
mov
cld
cmp
inc
inc
lods
insb
pushf
shlb
fwait
mov
cmp
inc
cmp
sub
push
xchg
ds
loop
gs
adc
xor
jp
cmpsb
push
or
jl
pop
push
rcll
push
int
les
test
in
ficomps
cmp
inc
adc
jge
push
sbb
push
outsl
pop
mov
mov
cmc
dec
mov
mov
jmp
jmp
in
into
pop
mov
sbb
repnz
mov
scas
push
mov
xchg
clc
test
cmpsl
inc
je
jne,pn
ror
push
ret
cmpsl
fcmove
xor
leave
mov
sbb
pop
and
pop
or
inc
xchg
rcr
test
sub
push
lds
out
xchg
or
in
adc
adc
mov
xor
insb
lods
dec
push
mov
fbld
mov
adc
lea
ds
in
mov
insl
cld
mov
or
rolb
out
stos
repnz
xchg
and
je
jecxz
and
adc
mov
sub
mov
int3
hlt
add
sub
push
sub
in
stc
sbb
out
mov
sub
add
mov
jb
loopne
fwait
insb
pusha
jle
test
lods
xchg
mov
sbb
or
xor
ss
test
leave
mov
sbb
pop
jmp
test
pop
aaa
inc
inc
fmul
out
in
jae
stc
fstpl
or
insb
aad
jmp
rclb
inc
and
lret
sub
aas
rcll
adc
dec
je
sbbl
stos
stc
outsl
pushf
xchg
fdivs
xchg
jns
jg
shrl
jne
not
int
gs
xchg
mov
aad
popa
enter
leave
ja
jb
and
std
jb
popf
cld
addr16
jns
cmp
scas
lahf
lock
icebp
aad
nop
decl
into
xorb
sbb
mov
imul
clc
outsb
xchg
rcrb
xchg
out
stos
mov
mov
mov
idivl
pusha
jg
test
xor
aaa
stc
into
loope
mov
push
xor
and
rorb
xchg
jb
xchg
aam
into
mov
mov
sbb
sub
xchg
adc
icebp
adc
push
add
repz
lret
mov
sbb
inc
shll
xchg
or
sbb
xor
push
lods
call
cli
nop
jmp
in
xchg
rorl
sti
xor
xor
xchg
mov
repnz
pop
mov
and
mov
mov
in
icebp
sti
sbb
cmp
mov
lret
mov
cs
jmp
inc
cwtl
adc
add
push
icebp
cmp
jo
int3
mov
shll
inc
out
or
dec
shl
mov
fcompl
sub
rcrb
inc
pop
xchg
push
mov
pop
fistps
cmpsb
in
cmpsl
jo
std
inc
sbb
or
andb
popf
push
xorb
shrl
ljmp
adc
jb
and
in
mov
mov
xchg
popa
push
std
insl
push
cs
xchg
push
jg
mov
adc
es
popf
and
mov
jmp
mov
jnp
in
out
mov
pop
stc
mov
fwait
mov
inc
mov
mov
mov
je
ret
sub
push
xchg
cld
cwtl
mov
sbb
cmc
imul
in
dec
mov
or
jl
fs
pop
sbb
addl
movsl
test
loope
outsl
sbb
test
jp
popf
notl
cmp
pop
scas
sbb
pop
ds
fmull
ja
push
mov
push
lds
out
cs
es
sub
inc
xchg
pusha
add
pop
push
pop
cwtl
jne
ret
fmuls
pop
pop
addr16
sub
enter
fstl
dec
fwait
cmp
jno
and
push
mov
mov
jmp
mov
lahf
adc
mov
mov
mov
aas
xchg
fwait
jl
add
push
outsl
mov
and
dec
or
xorb
cli
xor
push
jecxz
cld
sbb
sbb
call
mov
out
inc
fdivr
test
pop
jb
cwtl
lret
addr16
add
sbb
repz
xchg
imul
and
pusha
adc
cmp
jle
int
je
pop
adc
mov
lss
repz
lcall
add
dec
test
push
pop
jl
bound
enter
adc
xchg
lea
mov
sub
lret
fdivr
idiv
mov
dec
xchg
sub
popf
aam
mov
and
mov
sbb
fs
push
sbb
fisubrs
mov
out
mov
cmp
adc
fwait
int
pop
mov
mov
xor
push
cmpsb
out
or
stos
in
outsl
push
jmp
outsb
fdivrl
mov
cltd
sbb
imul
jns
ss
loopne
xor
ljmp
aad
icebp
scas
les
daa
lock
shrl
mov
pop
test
loopne
pop
jae
pop
orl
mov
ljmp
push
fdivrl
pop
mov
mov
popf
ja
retw
fmul
xor
jo
inc
xchg
int3
xor
test
cld
movsl
icebp
shlb
stos
pop
adc
cld
es
adc
lds
jg
movb
fwait
lcall
rcrb
inc
pop
sub
mov
shrl
push
mov
mov
pusha
mov
enter
pop
mov
xchg
addb
and
ss
jo
jle
scas
jbe
testb
ss
xabort
cmc
lcall
xchg
mov
cmp
mov
mov
jbe
mov
xor
lahf
jp
mov
pusha
shrl
out
nop
mov
lds
mov
mov
mov
outsb
xor
mov
adc
push
mov
push
js
loop
das
jo
fisubl
jne
fs
inc
dec
jbe
leave
add
and
cmpsb
lds
popf
cmpsl
mov
xor
xchg
cmp
movsb
sbb
scas
inc
xor
lds
add
xchg
js
xchg
mov
xchg
mov
xor
sbb
lods
insl
xor
ds
fdivl
mov
loop
adc
xchg
ljmp
nop
popa
fldl
mov
fcmovne
repnz
pop
push
push
add
imul
imul
inc
dec
adc
incb
out
lods
das
dec
jbe
mov
lret
jp
mov
fimuls
movsb
mov
inc
sub
cmp
inc
stos
arpl
lods
pop
shrl
mov
out
xor
lods
hlt
hlt
xchg
push
mov
jp
sbb
adc
aaa
jo
and
sbb
ds
lcall
jle
mov
mov
pop
and
add
lods
fwait
lret
sub
pop
sub
or
mov
sar
jmp
jbe
sub
mov
sub
xor
jnp
test
mov
sub
loope
mov
outsb
arpl
xadd
add
mov
repz
lods
fsubrp
mov
pop
cmp
push
stos
mov
les
cmp
xor
xlat
adc
in
pop
ja
add
xor
imul
mov
les
scas
sbb
leave
fstp
xor
mov
mov
mull
testb
sbb
mov
jb
adcb
inc
lods
aaa
mov
dec
pusha
aam
xchg
mov
xchg
outsb
enter
aam
jecxz
jge
in
dec
pop
push
sub
cmp
add
xlat
mov
mov
ret
insl
in
xor
adc
loope
pop
pop
addr16
pop
aad
sti
xchg
shll
gs
and
mov
pushf
subb
xchg
push
mov
jbe
iret
jecxz
jge
cs
dec
fidivs
jge
fildll
adc
cmp
mov
dec
shrb
and
rol
xor
in
pushf
outsb
xor
cltd
cmp
int3
add
addr16
hlt
notb
push
repnz
push
push
loopne
jmp
loop
cmpsl
pushf
das
popf
push
jp
mov
push
aas
roll
es
mov
out
rolb
jo
xchg
clc
jle
sti
repnz
sub
jb
cwtl
test
add
mov
lcall
sti
push
test
xchg
fwait
daa
add
dec
xchg
roll
insl
jo
into
xor
addr16
fisttps
jmp
add
cmp
mov
push
clc
mov
rol
aaa
pop
xchg
mov
and
scas
cmpsb
frstor
outsl
es
cmp
adc
push
xchg
addr16
push
jnp
ret
fimull
pop
xor
add
mov
pushf
call
repz
inc
jg
test
and
insl
icebp
hlt
je
gs
push
cmp
in
push
pop
fs
mov
jle
pop
mov
cwtl
iret
cmp
inc
lock
sub
fs
in
lods
or
outsb
aad
inc
mov
mov
jmp
bound
addr16
jo
out
xchg
xor
mov
dec
push
jg
bound
and
sbb
out
into
dec
pop
pushf
pop
and
das
popf
lea
je
stos
inc
xlat
sbb
add
mov
loope
ljmp
xchg
mov
mov
sahf
jbe
or
in
pushf
xor
mov
cli
jl
pushf
or
shll
mov
adc
je
adc
hlt
or
mov
popf
sbb
ret
pop
movl
pop
in
bound
pusha
mov
data16
xchg
ja
push
push
scas
fwait
push
jge
push
insb
cmpsl
loope
mov
and
mov
leave
push
xchg
ror
or
adc
jbe
mov
push
addr16
pop
rclb
push
mov
repz
cmp
lods
test
lds
mov
das
arpl
in
pop
or
lret
fisttpll
push
adc
xchg
and
test
ja
add
repnz
lret
push
sti
nop
lods
loopne
xchg
loopne
pop
xchg
hlt
outsl
or
div
pop
cli
xor
ror
sub
lods
add
mov
push
fiadds
ja
enter
push
js
push
out
fucomi
sbbl
cmpl
pop
or
jbe
movsl
iret
test
jo
jmp
mov
push
or
cmp
fsubr
cld
rol
daa
iret
sub
cltd
rolb
icebp
loop
cmp
icebp
ja
mov
shlb
cs
shl
mov
or
mov
cmp
and
jae
inc
outsb
pushf
mov
mul
test
fmulp
shr
pop
or
scas
je
clc
shlb
lods
jl
mov
rcr
inc
loope
sub
outsb
lods
lret
push
out
dec
rolb
adc
or
mov
dec
sub
ficoml
xchg
cs
adc
sub
push
fidivrs
cmpb
sbb
or
or
inc
pop
xchg
mov
inc
and
pop
paddq
aaa
js
add
lods
mov
push
inc
lods
sub
lret
lods
adc
das
xchg
push
ds
rclb
sbb
push
jmp
xchg
pop
lods
mov
pusha
pusha
mov
mov
mov
jb
fs
fists
dec
pop
cs
xchg
jnp
je
adc
jo
ja
cmp
or
lods
ss
out
sub
sbb
pop
ljmp
movsb
xchg
movsl
movsb
aaa
bound
lret
push
mov
jne
cmpl
push
sbb
push
xchg
lods
add
pop
into
adc
jl
daa
push
or
mov
inc
pop
mov
or
lcall
sub
popf
mov
add
and
fsub
loope
xchg
bound
mov
push
fbld
repz
jns
mov
aaa
shlb
movsb
dec
or
push
aaa
in
loopne
sbb
xchg
lret
sbb
cmp
and
pop
fwait
mov
push
incb
add
sbb
pop
test
jle
loopne
push
lret
and
add
test
sbb
popf
movsb
mov
cld
inc
xchg
mov
pop
cli
or
je
adc
stos
cltd
iret
lods
push
mov
push
ljmp
pop
jb
movsb
sub
pop
sti
insb
sub
or
imul
jne
cmp
in
mov
fiaddl
mov
sbb
cmp
cwtl
xor
and
fnstenv
iret
push
dec
sbb
xor
and
xchg
int
xor
inc
insl
mov
scas
sti
outsb
dec
int3
mov
cmp
pop
cmp
pop
sbb
lcall
sub
cwtl
jge
inc
cmp
movzbl
lcall
add
xchg
mov
ret
scas
aad
cmpb
push
add
int3
jo
sbb
ds
add
call
mov
xlat
push
movsb
js
pushf
lcall
or
negb
adc
popw
xor
cmp
xor
mov
rorl
push
or
cmp
jg
sub
shll
dec
jmp
mov
mov
loop
test
hlt
sbb
jae
scas
fldenv
mov
push
fimull
cmp
sub
icebp
arpl
call
pop
dec
scas
xchg
pop
pop
push
add
mov
shlb
stos
aaa
sahf
xorps
cmc
sbb
adc
flds
mov
iret
jns
inc
dec
pop
enter
je
mov
cmp
repz
cmp
es
std
out
mov
pop
cmp
pop
test
cmp
inc
je
ljmp
popa
mov
add
xchg
sub
jmp
movsl
cmp
dec
cmp
iret
adc
lods
mov
sub
loope
es
cmpsl
test
sub
imul
mov
fcoml
fists
lcall
ljmp
daa
shll
fistpll
rcll
mov
es
les
jecxz
or
mov
aam
lahf
ffree
nop
mov
insl
out
sub
andl
pop
push
xchg
pop
andb
rolb
shr
push
ret
fstpl
es
lret
mov
loopne
and
or
pop
pop
pop
loopne
push
cwtl
in
xor
rcll
cld
add
popf
daa
adc
popf
push
nop
cmc
gs
in
sbb
ljmp
xlat
std
mov
stos
orl
loope
jle
ret
mov
mov
mov
aas
dec
out
pushf
mov
in
or
ret
or
pop
jmp
mul
dec
arpl
test
loopne
repnz
fs
sbb
icebp
dec
cmp
or
mov
js
jg
pop
stc
mov
aad
jne
fstps
xor
shrb
sub
fxch
add
cmpsb
xchg
dec
fildl
jg
or
punpckhbw
sti
xor
sbb
popa
xor
cmpb
test
sbb
mov
mov
call
mov
mov
divb
fwait
call
out
mov
fisttps
lods
ret
and
stos
sub
fidivs
roll
inc
dec
fstpt
and
jl
mov
sub
clc
ss
iret
xor
adc
xor
test
iret
or
pop
pop
mov
xchg
into
scas
out
daa
andb
inc
mov
loop
jb
dec
and
xchg
add
sub
or
repz
mov
inc
in
sbb
fwait
and
push
xchg
out
insl
test
adc
jecxz
iret
pop
and
jbe
mov
daa
push
xchg
dec
adc
mov
adc
fildll
xor
roll
pop
and
add
rcr
test
sub
jne
inc
xchg
xchg
loopne
ret
lcall
lcall
insb
add
scas
mov
dec
inc
aam
loope
xchg
sub
call
scas
mov
ss
lods
cmc
lcall
aam
xchg
push
jg
rcrb
lret
adc
call
sub
xlat
je
cwtl
imulb
xchg
insl
cs
inc
and
ret
mov
lret
out
dec
push
in
lahf
lahf
mov
dec
call
fdivl
xor
jno
inc
push
fsubrl
popf
cmpsb
test
ljmp
fisubs
bound
push
or
push
sahf
inc
pop
push
out
sub
repnz
cmp
arpl
adc
push
mov
pop
sarl
dec
arpl
lea
fmuls
xlat
xor
add
roll
sarb
int3
pushf
jmp
movsb
stc
and
sub
or
flds
and
mov
aas
int3
xlat
sub
sub
loope
lock
jmp
add
insb
out
aad
orl
mov
stos
inc
push
mov
dec
mov
imul
mov
cmc
dec
adc
fistpl
dec
cs
pusha
adc
out
inc
jl
and
scas
dec
cmp
pop
sub
sbb
fwait
cmp
mov
push
add
push
popf
mov
add
xor
pop
sbb
call
pop
aad
xchg
add
sahf
jne
pop
mov
push
scas
xchg
repnz
jnp
lods
cmc
add
cmpsl
enter
adc
enter
daa
lahf
in
mov
pop
roll
movsb
inc
lahf
stos
lock
outsb
jbe
push
das
cmc
xor
cli
mov
mov
bswap
add
in
xchg
js
outsl
mov
loopne
sti
or
and
add
insl
hlt
lea
jnp
xchg
scas
and
sarb
push
inc
mov
test
into
push
cld
ljmp
leave
mov
aam
mov
cli
push
mov
dec
mov
or
mov
mov
fisttps
fnsaves
mov
push
pop
mov
cs
jecxz
imul
mov
sbb
insb
mov
jo
ja
push
ss
add
dec
jle
pop
mov
stc
shlb
dec
mov
in
mov
pop
xor
orl
lods
les
rol
mov
sti
pop
mov
aas
add
and
out
pop
xchg
pushf
adc
out
rol
jmp
mov
xchg
cmp
or
fstl
stos
add
sbb
cwtl
sub
cmpsb
adc
mov
jmp
or
sub
xchg
in
lcall
pop
test
fstpt
out
cmp
hlt
push
out
pusha
aam
push
inc
inc
test
outsb
lret
add
mov
das
out
popf
sbb
popa
sbb
mov
cmp
hlt
in
cmpsl
push
iret
or
xor
lahf
jbe
sbb
lret
push
or
std
cmpsl
movsb
loopne
xor
addr16
je
mov
sub
repz
lods
xchg
mov
int3
data16
aad
jns
orb
xor
xlat
gs
jns
jecxz
pop
jbe
aad
popa
inc
popa
or
add
sub
sbb
mov
push
xor
cmpsl
mov
inc
and
mov
pop
jbe
mov
mov
or
pop
jno
lahf
test
sub
push
aas
lret
jno
xchg
pop
jge
pusha
rorl
fldt
sti
add
fsubs
push
dec
mov
rorl
jne
xlat
push
and
jmp
outsl
adc
daa
pop
cmp
scas
cmp
pop
aaa
movsl
lcall
movsl
cwtl
inc
aad
test
adc
jo
lock
fildl
movsb
rclb
xor
iret
sub
in
push
repnz
les
jae
pusha
cmp
cmp
pop
mov
or
into
test
or
cmp
adc
rcl
insb
mov
dec
mov
je
xchg
cltd
jp
jle
and
sub
add
mov
jg
addr16
xor
jns
mov
and
sub
out
js
cld
mov
xchg
add
sbb
mov
push
cmp
and
xchg
push
push
push
inc
push
in
xchg
inc
adcl
mov
call
int3
mov
jmp
test
inc
cli
lahf
and
xor
scas
dec
lock
xchg
push
jle
sbb
hlt
fs
push
push
adc
inc
icebp
add
adc
cs
mov
arpl
pusha
loop
dec
ljmp
es
mov
and
add
xchg
in
xlat
lods
scas
inc
add
ja
imul
ss
cmpsl
aas
sbb
xor
movsb
popa
arpl
sub
sub
mov
inc
pop
out
dec
sbb
dec
pop
mov
xchg
mov
dec
dec
mov
decl
stos
shll
jnp
movsb
jnp
mov
mov
out
popa
pop
mov
pop
mov
or
jbe
mov
bound
pop
pop
mov
ja
lods
cmp
testl
push
lret
push
and
pop
in
and
push
out
sbb
into
mov
add
adc
cwtl
data16
cmpsb
scas
sub
pushf
sbb
sbbl
mov
cmp
and
add
cmovb
inc
outsb
cltd
or
jge
call
jmp
mov
in
sub
push
mov
cmp
dec
faddl
sti
inc
xor
dec
mov
lods
sub
mov
dec
and
sbb
or
mov
xor
and
cmp
ret
mov
push
cmc
adcb
lret
sub
jmp
sbb
popa
sub
cmc
pop
dec
psrld
les
mov
out
fdivl
aaa
es
mov
push
aad
pop
fs
mov
push
cmp
call
popf
dec
test
test
cmpsb
gs
adc
rcrl
js
cmpsl
popa
jg
jmp
jb
or
pop
mov
or
add
mov
dec
mov
lods
outsl
scas
mov
adcb
cltd
mov
lret
cmp
cs
outsl
insl
xchg
stos
and
cwtl
repnz
mov
call
dec
lea
mov
push
arpl
fnstcw
jmp
xor
dec
mov
mov
mov
push
jb
jge
fwait
push
loop
out
or
stc
pop
faddp
test
das
xchg
xor
loopne
std
jo
decl
mov
mov
subb
xchg
out
add
int3
mov
add
and
nop
or
mov
into
cld
leave
push
outsl
icebp
push
lret
or
adc
xor
es
shlb
test
jae
xor
mov
imul
sbb
lods
add
and
push
jp
cmp
add
clc
movsb
rcll
xchg
shrw
xor
das
xchg
pushf
adc
int
lock
jecxz
stos
flds
inc
out
dec
in
fmull
fmul
sarb
adc
sti
xchg
inc
pop
or
mov
mov
add
dec
push
inc
xchg
xchg
and
jge
leave
xlat
into
cmp
mov
and
cmp
xchg
pop
xor
test
inc
jmp
mov
pop
insl
repz
push
mov
dec
mov
push
push
pop
xor
stos
push
cmp
inc
lcall
call
jae
imul
add
es
in
push
movsl
movsb
dec
xchg
push
sbb
lahf
inc
shlb
pop
in
mov
sub
and
outsb
sbb
adc
cs
rolb
cmp
lds
out
aaa
mov
jb
lock
sarl
in
xchg
mov
xchg
lret
mov
stos
in
gs
mov
lahf
xchg
movsb
dec
mov
xchg
adc
inc
int
inc
pop
rorl
out
movsb
add
ret
test
test
addr16
cli
into
rcrl
fildll
popf
inc
cmp
mov
xchg
mov
cmp
pop
inc
adc
or
xchg
or
or
adc
testb
lcall
shrb
mov
inc
add
xor
cmp
in
push
fisubl
dec
clc
std
pop
in
xor
sub
ds
jno
cmp
mov
ret
jle
xchg
mov
mov
movsl
sub
gs
mov
mov
je
inc
dec
enter
imul
push
sbbl
adc
call
mov
sub
call
dec
xchg
and
ss
pop
push
jg
lods
xchg
movsb
shlb
inc
lahf
fucom
jmp
lret
pushf
outsb
xor
in
in
loope
cmp
fists
mov
pop
jge
lods
fs
lret
nop
test
inc
repnz
sbb
push
dec
fdivr
dec
inc
cmpsl
xchg
loop
in
scas
popf
mov
out
cltd
cmpb
inc
sbb
add
push
dec
mov
pop
pop
stos
mov
push
xor
int3
push
ljmp
out
ss
pop
loop
mov
xchg
xchg
mov
mov
in
xlat
mov
push
lods
mov
mov
and
movsl
and
out
xor
stos
test
enter
mov
jns
in
loopne
jae
sub
hlt
bound
in
sbb
cmpsb
add
iret
imul
mov
sub
test
cwtl
adc
adc
adc
mov
push
and
test
mov
les
test
mov
sbb
scas
fnsave
fcomip
cltd
aas
out
pop
mov
add
mov
rcll
adc
mov
repz
lret
pop
jl
out
cmp
loopne
in
or
xor
adc
aam
inc
hlt
gs
pop
mov
scas
enter
pusha
jbe
dec
cmpsl
repz
pop
jle
inc
inc
test
push
rclb
out
xchg
mov
addl
xor
xchg
sub
pop
add
cmpsl
sbb
dec
mov
sub
xor
xchg
add
pop
js
rcll
dec
rolb
es
enter
push
scas
push
jge
pop
inc
cli
mov
cmp
sub
xchg
mov
mov
shlb
testl
mov
jno
cmp
movsb
mov
jp
int
fdivl
pop
pop
das
jp
into
mov
xor
adc
or
mov
lods
pusha
sbb
adc
cltd
adc
dec
popa
subb
and
fcomi
dec
mov
mov
xor
push
aad
lods
out
in
push
mov
pushf
inc
outsb
jl
adc
fwait
scas
mov
in
pop
sub
mov
fnstcw
roll
jecxz
push
add
dec
sbb
jg
pop
sbb
lcall
sbb
pop
subl
lahf
push
mov
mov
lea
xor
pusha
jbe
in
movsb
les
dec
pusha
in
mov
into
and
js
or
mov
or
xor
add
jbe
jns
add
push
ret
fildll
addr16
push
not
iret
adc
in
orl
push
inc
fwait
cwtl
and
jne
pushf
dec
cmc
jecxz
add
std
ret
push
add
mov
mov
popf
push
dec
pop
dec
loopne
fcompl
outsl
cmp
add
ret
js
adc
and
mov
mov
lods
xor
popa
lret
hlt
mov
pop
dec
cmp
add
sahf
movsb
vunpcklps
in
ret
popf
out
icebp
sahf
mov
cmpsb
gs
pusha
jg
xor
data16
push
adc
sub
movsb
sub
rcl
mov
and
sub
sbb
pop
dec
test
jmp
aas
je
hlt
insb
pop
or
push
movsl
xlat
lds
pusha
jge
jp
inc
lcall
jg
outsb
hlt
daa
popa
js
add
sbb
mov
or
call
cltd
daa
xor
push
test
lret
vpmaddwd
cltd
xor
xchg
mov
lret
mov
ss
lret
mov
adc
pop
dec
jns
push
out
arpl
adc
pop
xchg
outsl
stc
in
loop
xchg
or
pop
popa
adc
call
insl
or
in
mov
fs
push
or
enter
jecxz
iret
jmp
ficomps
jge
icebp
xor
adc
pop
cmpsb
add
or
ja
dec
hlt
out
iret
sub
cli
icebp
jo
xor
jns
loop
fcoms
fstps
mov
adc
jmp
insl
jl
dec
push
push
ret
out
pop
xchg
mov
mov
or
lea
lcall
jmp
fistl
mov
adc
loopne
jecxz
inc
mov
scas
mov
lret
and
dec
push
dec
loop
fcom
sahf
mov
pop
sub
out
std
inc
imul
js
cmp
dec
imul
fidivl
fistps
pusha
push
stos
mov
pop
mov
xchg
js
sbb
ja
int
sub
in
add
mov
jle
and
mov
xor
or
or
lock
and
push
int3
insl
iret
fldt
cmp
je
nop
mov
sub
fwait
insb
pop
xchg
cmp
rorb
orb
and
push
jae
ljmp
stos
stc
jecxz
or
cmp
lods
fmull
adcl
test
mov
xor
test
iret
push
xchg
inc
xchg
es
mov
pminsw
inc
lods
cmpl
xchg
dec
dec
fsubl
jbe
jb
ret
mov
insl
popf
xor
les
and
sbb
jecxz
aam
icebp
test
mov
mov
mov
or
inc
lds
test
pop
dec
xor
or
in
cmp
clc
popa
out
push
push
push
xchg
outsl
mov
pop
pop
and
icebp
jge
mov
ja
jo
loopne
shlb
fcoms
in
jns
test
fldl
loop
pop
repnz
stos
push
lahf
je
je
fmuls
xchg
call
repz
nop
sahf
sbb
sub
sbb
idivl
fdivr
mov
xchg
xchg
lods
xchg
cs
clc
sbb
aas
or
loope
ds
xchg
outsl
jp
push
cmc
test
push
jge
out
cs
jmp
adc
or
lahf
aaa
int3
jge
jge
sub
push
out
xorl
iret
insl
test
push
fisubs
xchg
mov
xchg
dec
std
gs
in
into
pop
pop
repz
cld
mov
xor
insl
fsubrs
xchg
dec
pop
lods
xor
mov
push
stos
xchg
sub
add
loope
mov
mov
push
mov
lret
and
fwait
push
ret
sbb
push
pop
mov
inc
mov
add
out
jecxz
imul
leave
fsubs
ret
fwait
shll
push
subl
and
mov
inc
pop
out
fldcw
mov
aas
mov
clc
pop
shlb
xchg
pop
insl
mov
je
jae
call
jecxz
adc
scas
clc
rcll
fs
inc
push
sub
icebp
inc
push
dec
adc
mov
aas
adc
shl
dec
xor
sub
repz
jne
clc
xor
cmpsl
xchg
inc
bound
leave
dec
sbb
xchg
cmc
sbb
stos
repz
popf
dec
and
ret
xor
pusha
in
xor
xor
out
push
pusha
in
mov
xchg
testl
std
push
add
xor
jmp
dec
push
xor
ss
sti
cltd
cmp
inc
pop
je
xor
mov
inc
test
pop
xorps
jecxz
sub
mov
or
and
in
inc
pushf
stos
add
es
push
xchg
jp
scas
test
mov
push
push
in
out
cmp
dec
sbb
sti
jbe
mov
mov
mov
jo
xchg
cld
cltd
loope
inc
frstpm(287
sbb
fcmovu
push
push
cmp
outsb
repz
jb
stos
ret
jnp
inc
mov
and
int
xchg
dec
dec
add
xchg
das
jmp
dec
int3
cmp
and
xchg
int
js
inc
inc
xor
out
or
mov
loop
push
imul
adc
xchg
sub
loopne
bound
ds
mov
or
dec
pop
mov
sub
adc
inc
in
outsb
inc
jge
jg
stos
push
roll
sub
fistpl
or
into
into
mov
or
xorl
or
xor
sti
mov
movsl
fisttpll
mov
divb
les
sub
cmp
and
cltd
out
xchg
mov
xchg
addr16
mov
push
inc
lahf
mov
dec
ljmp
xor
sub
or
dec
add
push
sub
insl
cmpsl
sbb
push
insb
pop
mov
adc
lahf
mov
fcmove
std
outsb
jl
ret
xchg
std
inc
jle
dec
add
push
mov
add
lret
lea
lahf
cmp
sbb
adc
mov
enter
arpl
rorb
adc
gs
cmp
lahf
mov
push
clc
out
popf
ss
add
cmp
lahf
xchg
cmpsb
mov
sbb
lea
push
outsb
into
add
xchg
sbb
les
test
cmc
loop
lods
push
sub
xor
in
add
pop
inc
movsb
add
cwtl
jnp
fs
clc
aaa
test
push
push
adc
cmp
cltd
arpl
cmp
ja
push
loope
cmpl
mul
shlb
adc
or
aad
jl
mov
push
push
inc
mov
xor
jns
lods
pop
xchg
out
mov
movsl
popf
in
pop
in
jecxz
dec
sbb
mov
enter
dec
mov
mov
fcomps
aam
ds
inc
daa
jb
ljmp
call
cmp
xor
pop
mov
orb
testl
mov
pop
fdivrs
adc
cli
pop
out
mov
mov
mov
enter
jmp
in
pop
out
jns
jae
lahf
jb
and
inc
adc
ss
xor
cmp
xchg
mov
pop
inc
dec
jns
ret
leave
mov
scas
push
stos
call
sti
subb
xor
add
int3
sub
push
sub
rorb
hlt
jecxz
pop
movsl
pop
push
pop
push
adc
or
pop
inc
in
jb
xchg
cld
pop
shl
cwtl
cmc
pop
scas
sub
and
mov
push
shr
into
pop
xchg
test
lock
test
cmc
inc
out
in
and
xchg
in
push
cmp
inc
out
lock
xor
and
adc
xlat
cmp
ja
sbb
push
movsl
mov
addr16
rorb
dec
cld
ljmp
push
dec
jp
or
add
push
mov
mov
lds
fnstenv
iret
mov
jge
cmp
pushf
inc
mov
lcall
add
ret
sub
pop
cmpsb
movsb
xchg
orl
out
mov
fwait
pop
xor
jne
sbb
dec
out
xor
cmove
jbe
inc
pop
das
daa
fst
jb
jbe
popf
mov
sahf
sub
xchg
sbb
push
fnsave
ret
divb
mov
mov
icebp
lret
mov
lods
adc
cmpsl
es
inc
mov
pop
jp
daa
out
mov
xor
fwait
jp
mov
cld
dec
jecxz
or
sub
sbb
lods
sbb
pop
addr16
sar
mov
cwtl
cmpsl
rorb
sbb
or
fildl
iret
aas
dec
dec
cmpsb
cmpsb
jb
jns
leave
pop
popf
pusha
dec
stos
outsb
imul
fs
cltd
push
add
push
mov
push
arpl
shlb
nop
nop
shrb
jne
and
adc
fsubr
mov
int3
mov
xor
repz
scas
popf
neg
fidivrl
fnsave
xchg
das
ret
fadds
sahf
add
push
nop
call
sub
inc
push
sub
test
in
add
insl
jmp
movsb
mov
xor
imul
loop
jge
inc
test
je
pop
outsb
dec
cmp
cli
std
sbb
fcoml
xchg
pop
lcall
sub
arpl
cmp
jnp
out
add
cltd
adc
outsb
orl
dec
xorb
leave
dec
int3
or
add
xor
pop
inc
in
roll
cltd
fstpl
sub
popa
cli
fwait
dec
fnstcw
xor
mov
jno
shll
in
sub
sti
sub
mov
es
pusha
inc
sbb
xchg
push
jne
and
imul
mov
cmp
jmp
push
cmp
ljmp
pop
or
cld
rcrl
mov
dec
mov
cli
jb
inc
push
ror
in
cmc
fsubr
mov
mov
dec
dec
cmp
jae
push
xchg
stos
and
int3
xor
dec
rorl
fcmovbe
clc
insb
cmp
add
ds
loop
mov
jnp
rclb
sbb
out
mov
idivl
mov
and
pop
mov
adc
es
xlat
imul
fcmovb
push
cltd
popf
mov
into
jle
fstps
inc
mov
mov
fwait
sub
cmpsl
mov
dec
shr
mov
push
fwait
inc
mov
cmc
xchg
mov
in
mov
ret
pop
mov
insb
aas
test
inc
dec
outsl
in
pop
mov
add
and
sbb
xchg
inc
iret
popa
es
lea
push
sbb
icebp
bound
pop
jl
out
adc
mov
xchg
fs
mov
jnp
iret
adc
mov
cli
lret
or
lods
jge
lahf
shr
cwtl
xchg
jno
push
mov
mov
push
fwait
adc
xchg
les
scas
rorb
xor
fiadds
inc
sbb
fdivl
mov
cmpb
sbbl
pop
sub
sub
sub
popf
loopne
dec
sub
sbb
sub
lea
dec
xchg
mov
pushf
pop
and
pop
mov
fs
movsl
les
inc
cld
jno
ret
dec
mov
jmp
ss
push
dec
cltd
sbb
xchg
repnz
negl
and
iret
cmp
cli
enter
pop
or
lds
test
pop
rol
roll
mov
hlt
inc
out
std
push
cmpsl
repnz
mov
pop
adcb
sahf
xor
test
mov
inc
mov
aad
mov
insl
and
mov
mov
mov
push
incl
mov
testb
adc
xor
aas
decb
jge
fiaddl
bound
and
stos
mov
imul
out
pusha
xchg
dec
cmp
rcll
xchg
inc
dec
cmovae
outsl
jg
mov
jle
mov
lahf
pop
mov
cmp
push
aas
iret
test
cmp
lock
rcrb
and
xor
scas
or
rcr
sbb
and
mull
fwait
loop
shrb
cs
cld
pop
inc
shll
mov
mov
aad
add
outsb
dec
or
mov
cld
imul
mov
xchg
xchg
sarl
dec
add
add
cmc
mov
ljmp
mov
sbb
idivb
and
mov
nop
out
cmp
stc
nop
jae
and
rolb
lcall
test
inc
mov
push
cld
enter
fwait
xchg
mov
lods
jg
pop
inc
movsb
je
xchg
adc
nop
sbb
mov
jo
iret
je
loopne
mov
imul
mov
icebp
test
bsf
xor
jge
sub
fnstsw
pop
incl
and
in
push
add
mov
movsl
lock
dec
out
into
add
aam
push
mov
or
lock
push
mov
cmp
pop
xchg
sub
jle
ret
push
mov
lock
jmp
outsl
je
scas
pop
adc
pop
pop
add
mov
pop
pop
dec
in
sub
push
ds
enter
lret
popa
dec
fimuls
add
pusha
mov
lock
push
icebp
div
fsubr
mov
cmp
leave
es
jb
sub
mov
into
cmp
cmc
into
push
pop
mov
test
pushf
mov
jnp
rol
jge
and
test
add
xchg
inc
nop
loop
mov
push
movsb
leave
pop
scas
xor
jbe
outsb
cmp
fwait
mov
pop
jnp
out
push
push
out
jl
xchg
movsl
les
aad
or
sbb
je
adc
je
add
mov
push
lcall
lahf
cld
xor
add
adc
pop
test
fbld
xor
scas
jge
mov
jbe
andl
mov
stc
shr
jne
mov
sbb
nop
sbbl
push
adc
into
ds
jne
xchg
mov
test
inc
hlt
mov
js
and
fwait
or
cli
clc
mov
stos
or
arpl
jnp
or
pop
xor
stos
std
adc
adc
xchg
adc
sub
mov
mov
add
lcall
lahf
jno
cmp
jbe
ljmp
sti
cld
jecxz
mov
enter
xchg
inc
add
sarl
iret
sub
movsb
pop
in
testl
mov
mov
into
xchg
and
jbe
pushf
sbb
adc
aas
inc
mov
adc
popf
fisubrs
push
push
cld
xor
pop
popa
mov
lock
xchg
divb
and
jo
mov
cmp
inc
push
or
leave
jns
sbb
dec
lcall
out
xchg
sbb
sbb
out
fdivrl
outsl
xchg
mov
adc
out
dec
jl
dec
mov
jp
fdivrl
sub
push
cmp
xor
mov
int3
pop
stos
xlat
or
adc
inc
add
jns
inc
cwtl
fisubl
cli
test
jge
xchg
or
mov
inc
push
inc
pop
in
cli
in
popa
dec
movb
push
arpl
scas
notb
sub
jb
or
jecxz
les
rol
shrl
pop
inc
cs
xchg
jno
dec
xchg
outsl
dec
jmp
dec
add
adc
push
loop
and
and
fs
mov
xchg
and
cmp
daa
xor
data16
jecxz
daa
push
scas
mov
popf
sub
leave
xchg
sub
js
mov
out
cmp
dec
out
inc
fchs
mov
sahf
xchg
ss
subl
aaa
fwait
mov
js
jbe
xchg
lret
or
xor
rorb
mov
sbbl
adc
fistpll
mov
adc
stos
scas
xlat
mov
sbb
push
lock
sbb
cwtl
or
add
add
pushl
icebp
arpl
call
jno
movsl
xor
pop
dec
stc
xor
into
mov
xor
xchg
inc
scas
or
test
adc
xor
xor
sbb
pop
addr16
ss
popf
mov
jbe
xor
ljmp
push
data16
adc
and
loop
jnp
pop
push
mov
push
fsubrp
jne
add
mov
lcall
pusha
imul
sub
xchg
mov
flds
es
jp
negl
or
test
je
scas
push
jne
test
mov
stos
lret
add
mov
cmp
push
add
sbb
push
in
les
fimull
push
psubb
lock
cmp
and
mov
push
mov
out
int
ret
xor
jns
dec
call
push
shr
ret
cli
scas
push
add
jecxz
cmc
mov
cmp
jle
imul
es
fisubrs
sub
push
test
mov
es
mov
sbb
sbb
sbb
pop
mov
ss
int3
jbe
mov
xchg
or
cltd
std
fwait
je
aad
add
mov
sub
push
lea
outsb
inc
aaa
icebp
add
fsubr
cwtl
adc
fimull
xchg
clc
xchg
mov
dec
and
int
xchg
ss
pusha
mov
mov
les
std
inc
ds
fcompl
scas
int3
jecxz
sbb
xchg
ljmp
out
mov
bound
in
je
push
sub
mov
xor
andb
jno
xor
adc
sbb
in
and
mov
lods
mov
aas
dec
sub
pop
cmp
push
scas
push
xchg
push
push
das
push
or
sti
jg
enter
jmp
orl
shl
cltd
call
fnsave
inc
sbb
mov
sahf
sbb
add
sub
mov
cltd
mov
cmc
lcall
xor
fisubrl
pop
xchg
jecxz
pushf
xor
mov
sar
loopne
std
and
aaa
or
sub
ret
adc
aam
mov
pop
lods
push
sbb
push
inc
cltd
adc
sbb
les
mov
dec
lods
sahf
int3
repz
push
mov
add
hlt
inc
jmp
ret
jge
jp
xchg
outsl
or
shl
lock
mov
outsl
enter
cwtl
popa
dec
add
lock
sbb
dec
lcall
mov
push
in
repz
fmull
stos
pop
es
ljmp
dec
xchg
pop
stc
adc
inc
imul
clc
into
jg
mov
adc
hlt
push
cmp
xchg
jl
enter
xchg
sti
les
pop
mov
mov
or
aas
cmp
xor
mov
mov
shlb
push
dec
out
and
or
mov
inc
insw
mov
jbe
push
xchg
xchg
xor
xor
sbb
repnz
jae
sub
hlt
mov
jo
inc
or
push
jge
lods
out
adc
jae
cmp
inc
push
sbb
loope
cmp
adc
push
xchg
sbb
loope
incl
mov
add
push
mov
cmpsb
loopne
dec
lcall
addr16
loopne
adc
adc
inc
popaw
cmp
sub
movsb
xor
or
push
dec
xor
mov
insl
movsb
dec
jmp
sbb
xor
sbb
dec
mov
add
mov
movsb
mov
mov
cmp
add
jecxz
push
movsl
mov
lret
pusha
leave
mov
adc
dec
mov
loopne
add
je
dec
sbb
push
or
inc
lea
mov
sub
xchg
jl
repz
rcll
sbb
pop
adc
cmpsl
cmp
cmp
test
lods
ljmp
lods
sahf
or
aas
jl
mov
lahf
movsb
push
xor
adc
mov
pop
pop
xchg
mov
xchg
pop
out
add
jp
cmp
mov
data16
or
pushl
pop
loope
test
push
adc
and
xchg
into
rcll
mov
out
inc
int
inc
in
std
idiv
inc
loopne
xchg
int3
mov
imul
push
cwtl
push
and
cmp
pushf
pushf
xchg
push
jae
std
jne
sbbb
mov
jae
mov
mov
xchg
mov
push
test
cmp
popf
repnz
push
mov
or
fstps
mov
addr16
cs
andb
cld
scas
fsubrl
test
mov
adc
add
jb
divb
pusha
sti
pop
jl
mov
test
fwait
int
mov
stos
ret
loopne
sbbb
subl
cmpsl
mov
and
mov
or
incb
popf
lret
leave
fcomps
nop
repnz
shll
pop
fwait
sub
or
jbe
cmc
cmc
repnz
pop
jo
mov
les
into
or
sbb
sub
mov
mov
jg
daa
ret
adc
mov
stos
subw
rcr
or
cs
in
lret
sbb
or
mov
jg
outsl
iret
addr16
out
mov
inc
fsubrl
add
shrl
jmp
jecxz
jo
movsl
lahf
and
insl
inc
xor
jo
or
das
lods
fisubrs
test
mov
lods
test
ljmp
jb
add
jbe
cmpsb
aad
and
outsl
and
adc
lret
inc
inc
adc
mov
jmp
sbb
repnz
rcrl
mov
push
data16
pop
jmp
lock
cmp
mov
ja
dec
lea
jno
cmpsb
mov
repnz
lea
sbb
mov
add
fbstp
dec
cltd
push
scas
dec
enter
lods
test
dec
jno
jbe
test
inc
add
push
jne
and
xor
or
lcall
and
pusha
xor
mov
mov
push
data16
sub
enter
insb
dec
and
dec
mov
xor
ret
sub
xchg
push
enter
test
jmp
mov
lahf
sbb
aad
cmp
pop
pop
push
jns
sub
cli
ljmp
loope
push
add
pusha
out
les
inc
jmp
aad
add
les
aam
in
jne
mov
jecxz
je
mov
sbb
sti
mov
hlt
adcb
push
ss
imul
and
sarl
mov
push
insb
imul
sbb
adc
mov
fsubrp
push
ror
mov
mov
ljmp
cmp
shl
daa
xchg
or
mov
enter
aaa
sub
cmp
lods
cmp
cmp
loopne
popa
test
push
leave
mov
outsb
mov
pop
in
cmp
fstp
jb
inc
mov
hlt
arpl
adc
repnz
sub
js
mov
lock
sub
int3
or
popa
cli
in
sub
js
push
push
enter
push
xlat
push
cltd
jns
rclb
or
cmpb
mov
ret
add
pop
and
pop
or
lods
dec
inc
sbb
mov
sub
push
and
fucomip
xchg
cmp
inc
lret
pop
adc
mov
push
sbb
pop
ret
aad
ret
push
xor
movsl
mov
sbb
and
xchg
jae
test
sub
inc
xor
push
push
or
outsb
mov
xor
fcmovu
ror
insl
xor
or
int3
bound
or
mov
or
xchg
pusha
jb
stc
js
fildl
or
inc
lret
mov
push
lock
orl
aam
dec
pop
ja
mov
xchg
pusha
mov
pop
add
ss
mov
pusha
xchg
out
ret
jmp
sarl
in
pop
pop
sbb
sub
jae
add
rorl
popf
push
xchg
jb
and
pop
dec
cmp
mov
sub
cmp
adc
mov
cli
push
inc
aaa
cmp
sbb
push
xchg
cmp
cmpsb
push
std
shld
dec
xchg
push
add
dec
fdivrl
jp
bound
addr16
pop
sti
rclb
mov
mov
ret
hlt
push
insb
push
das
adc
sbb
cmp
push
aam
out
mov
push
aas
pop
mov
push
std
repz
and
loope
movsb
inc
clc
mov
es
cmpl
xchg
mov
pop
out
mov
mov
or
and
xlat
dec
xor
jnp
pop
or
insb
jg
stc
mov
or
or
jae
das
sub
aad
out
xchg
push
gs
rep
xchg
icebp
fs
mov
xchg
sbb
sbb
pop
xor
fisubs
cmp
xlat
ret
jb
push
push
in
sahf
test
cmp
and
adc
ret
jbe
pop
test
sub
sbb
pushf
jecxz
push
push
nop
les
scas
pop
dec
ja
ret
ljmp
pop
mov
data16
add
inc
je
and
or
ss
call
cmp
std
add
sbb
mov
leave
adc
leave
xchg
and
leave
or
packuswb
pop
add
sti
add
cmp
add
jg
dec
sub
push
mov
push
sub
addr16
sbb
bnd
dec
or
push
mov
fwait
ljmp
add
cs
lret
fisttps
dec
and
mov
xor
dec
pop
lahf
cltd
fldcw
sbb
insl
loope
ss
scas
xchg
or
jmp
hlt
mov
sub
mov
loopne
cli
mov
adc
mov
adc
push
add
mov
and
pop
mov
mov
call
cmp
nop
push
mov
fmul
imul
cmp
sub
or
dec
stos
mov
into
jl
ljmp
adc
out
aad
movsl
inc
fisttpll
sub
xchg
cwtl
cmpsl
inc
cmp
aad
xchg
hlt
imul
mov
jbe
into
and
mov
loope
popa
cltd
push
inc
dec
int
fcoms
adc
ja
xor
scas
pop
nop
mov
adc
or
sub
sub
cli
pop
ds
jmp
loope
pop
jo
int
sti
insl
nop
xor
data16
and
stos
js
cmp
shrl
inc
dec
sbb
add
mov
je
ficompl
push
xchg
push
mov
pop
push
daa
mov
cs
rorb
cmpb
push
pop
push
and
jge
or
lds
push
and
mov
sub
shl
xchg
cli
es
imul
mov
lock
lret
cmpsl
jo
aaa
addr16
fsts
jle
rorw
testl
leave
xlat
jnp
das
pop
lret
dec
sbb
enter
sbb
mov
aam
jl
inc
daa
xchg
add
mov
addr16
clc
jno
sbb
or
cs
xchg
mov
mov
sbb
fdivs
out
pop
inc
dec
enter
fwait
cmp
jecxz
pop
cwtl
jno
jmp
and
enter
and
lds
adc
adc
dec
lcall
cmpsb
sub
pop
push
and
cmp
xlat
add
aas
xchg
dec
sub
imul
sub
dec
repnz
xchg
add
fnstsw
repnz
negl
mov
jnp
popf
out
xchg
push
cmc
xor
jp
cld
call
mov
out
adc
rcll
lahf
ss
mov
dec
adc
add
push
lret
js
bound
or
jnp
insl
inc
pusha
dec
addb
xchg
aaa
mov
mov
test
int
mov
xchg
xchg
jg
jg
into
mov
jne
adc
in
pop
mov
mov
xchg
push
and
cmp
jl
add
xlat
pop
movsb
aaa
sbb
xchg
xor
scas
aaa
push
mov
imul
jbe
cmpsb
push
or
dec
cmp
push
aaa
fldl
in
cmp
imulb
out
insb
sub
loop
shlb
mov
jb
fisubrs
mov
xchg
pop
cs
das
push
lods
shrl
mov
imul
pop
pop
out
out
movups
sarb
int3
les
imul
xchg
fbstp
inc
sar
add
xchg
xchg
popa
test
inc
inc
sbb
test
adc
adc
das
add
mov
loopne
push
mov
inc
adc
iret
adc
inc
sub
jo
cli
sbb
in
jmp
or
pop
sti
push
mov
lds
imul
aas
clc
inc
lods
movsb
sbb
mov
aam
or
lcall
fcmovne
inc
adcl
mov
mov
pop
pop
fstps
push
jg
sahf
arpl
add
scas
jb
mov
fmuls
lahf
jg
push
mov
lea
dec
push
mov
scas
jns
testb
fildll
cmp
push
adc
inc
adc
cmp
xlat
and
out
xchg
and
aaa
stos
add
das
or
inc
lods
jmp
sbb
and
pop
mov
mov
xchg
xor
loop
pop
inc
jb
dec
xor
lds
mov
jb
arpl
cmp
pop
mov
and
sbb
faddl
daa
push
lds
icebp
cmpsl
cmc
and
sbb
popa
jne
cld
cmc
ja
jle
pop
adc
shll
leave
insb
add
test
inc
push
adc
and
loopne
or
popf
sti
sbb
cmp
xor
mov
and
push
adc
lods
enter
fisubrl
addl
call
mov
pop
mov
repz
mov
push
movsl
cld
push
dec
sahf
dec
outsb
inc
jmp
into
iret
fucom
xchg
imul
hlt
loopne
push
sbb
shll
in
lock
out
inc
dec
dec
push
cld
mov
pop
xchg
sub
les
jno
xchg
clc
test
pop
inc
fnstsw
sbb
testb
aaa
sbb
lods
fisttpll
mov
outsb
loope
stc
xchg
rcl
or
addr16
in
mov
jo
clc
cmp
mov
scas
push
mov
aaa
es
pop
xchg
mov
xchg
or
cmc
dec
push
add
mov
loop
pop
pop
mov
repz
fisttps
xor
cmp
dec
cmp
or
and
mov
cs
sbb
inc
repnz
std
fidivs
jle
popf
cmp
js
aas
dec
push
les
xchg
jno
rorb
loopne
or
popl
aaa
xlat
idivl
and
lock
mov
fidivl
push
push
mov
mov
mov
push
les
sub
arpl
or
mov
inc
leave
pop
test
mov
flds
inc
rol
add
mov
fbld
gs
imul
add
lret
data16
repnz
int3
out
cwtl
ret
cmp
shll
mov
pop
push
mov
mov
dec
leave
xchg
inc
cmp
add
mov
js
lret
cmp
push
sahf
jmp
fwait
xor
mulb
out
push
xchg
lea
push
add
and
cltd
call
insl
movsb
cmpsl
and
add
in
call
sbb
or
lcall
xchg
push
sbb
icebp
jne
xchg
jl
fldt
inc
out
mov
dec
mov
fidivs
push
dec
and
mov
lock
lds
int
lods
js
mov
std
push
in
xchg
bnd
sub
cmp
add
pop
out
out
arpl
dec
dec
test
sub
push
cmp
iret
add
add
and
cld
repz
cmp
dec
dec
xchg
mov
test
mov
mov
sub
ja
stos
sub
dec
out
mov
in
mov
pop
pop
cmc
in
adc
lods
ljmp
subl
mov
push
lea
das
dec
test
pop
jmp
push
lahf
pop
jne
cmp
mov
ljmp
testl
lcall
xchg
imul
pusha
stos
mov
inc
inc
imul
xchg
fs
or
test
jecxz
hlt
sub
gs
push
imul
call
add
mov
loopne
add
divb
mov
lods
cmpsl
mov
fnstcw
popf
sub
add
jmp
jmp
rolb
call
or
loopne
mov
pop
xor
pusha
push
test
out
jae
jge
dec
jecxz
popf
pop
std
ret
push
inc
mov
in
bound
jbe
in
unpcklps
mov
jle
repz
ret
mov
or
and
sbb
and
or
dec
ret
mov
popw
lcall
in
arpl
xchg
inc
mov
sub
adcl
and
add
adc
outsb
xor
push
cltd
hlt
inc
lods
xchg
lcall
adc
dec
das
sbb
or
ret
jecxz
mov
in
jmp
cmp
into
jl
add
in
repz
addr16
ret
test
inc
fsubrp
mov
or
ss
jb
sub
cmp
lahf
je
mov
pop
jno
in
sti
lea
and
or
lahf
cmp
fnstsw
ret
outsb
mov
frstor
pop
addr16
cmp
out
flds
popf
pop
shl
js
mov
pop
and
xchg
dec
or
cmc
shll
rcll
add
loope
push
add
fnstcw
fs
popf
das
mov
inc
in
dec
sbb
cmp
inc
mov
icebp
sbb
popa
cmc
popa
and
ret
xchg
lret
test
mov
movsl
cs
xor
daa
jo
inc
lret
or
jp
aad
int3
push
dec
stos
xor
push
pop
jmp
adc
mov
inc
imul
int3
sub
xor
push
test
pop
ret
mov
cmc
sbb
jns
loop
xor
test
add
dec
add
mov
mov
xor
jecxz
in
xor
jo
jle
adc
dec
pushf
xchg
fs
in
dec
xchg
and
mov
sub
shll
mov
fildl
das
iret
jno
cmp
and
imul
cmp
lds
fs
push
fwait
loopne
push
pop
mov
sub
push
fwait
cli
push
lahf
pop
sbb
adcb
dec
fcomi
loop
sbbl
shl
dec
cmp
fstl
aad
sti
xchg
cmp
leave
cmp
push
aaa
mov
cmp
push
arpl
inc
shrb
jne
mov
adc
ljmp
mov
xor
rol
pop
xchg
imul
icebp
cwtl
pusha
pop
sbb
or
push
cwtl
ror
rcr
mov
js
xchg
ss
in
adc
fcmovnbe
xor
push
mov
or
dec
in
adc
fsubs
sub
out
push
add
xchg
jnp
push
xor
filds
dec
test
fwait
adcl
fwait
xchg
cwtl
fidivl
xchg
sbb
cld
dec
sub
lcall
int
in
pushf
sti
test
cli
iret
and
mov
xor
and
out
adc
lea
movsl
lret
xchg
movsl
mov
clc
fildll
jl
neg
inc
push
fisubrl
xchg
repnz
and
xchg
movsl
sbbl
repz
daa
and
or
je
cltd
ss
push
and
lret
and
adc
pop
pop
adcb
push
cmp
dec
mov
sub
mov
sar
out
repnz
loop
fnstenv
rcr
cwtl
test
xor
and
jmp
icebp
dec
int
jne
cmp
mov
cmp
cwtl
jle
push
and
pushf
xchg
ret
cltd
and
ss
sbbb
filds
lret
xor
not
cmp
cltd
out
push
push
pop
jg
jp
imul
popa
insb
inc
xchg
sub
adc
cli
xor
outsl
dec
jp
jecxz
dec
mov
push
sub
dec
sub
repz
dec
scas
or
mov
add
mov
cmp
sti
bound
out
inc
inc
in
xchg
loope
int3
int3
fmull
add
jmp
data16
icebp
gs
and
test
mov
sarl
xorb
jne
insb
push
movsl
xor
xor
push
mov
call
push
push
cmp
jno
in
jb
jmp
aam
mov
pop
leave
je
cmpsl
into
xor
notb
lret
inc
cmc
pop
cmpsb
mov
popa
lcall
push
jmp
ljmp
mov
imul
js
fcompl
mov
scas
in
adc
and
pop
push
fucom
sub
xor
and
gs
stos
in
dec
xchg
loope
add
dec
push
and
rcr
jae
lret
xchg
or
pop
icebp
fldt
sbb
dec
insb
jnp
movsb
fs
sub
sbb
test
ret
jmp
rcll
outsl
push
fdivrs
shlb
inc
adc
push
adc
aaa
mov
adc
dec
in
sub
lock
xor
loopne
adc
mov
in
cmpsl
jno
mov
mov
mov
lods
cmp
sti
push
pop
stos
js
dec
out
cmpsb
out
mov
cwtl
arpl
inc
xor
insb
sbb
imul
jmp
inc
enter
pop
fcmovnu
mov
cmpsb
add
data16
lret
lret
or
mov
lret
or
stos
les
or
push
cmp
ficomps
pop
ljmp
fwait
cld
in
mov
inc
inc
imulb
mov
inc
mov
dec
jb
cmp
or
pop
std
fbld
rorl
insb
pop
and
jmp
mov
ficompl
inc
sbb
pop
js
dec
or
inc
call
sub
jno
mov
add
mov
out
pop
cs
subb
xchg
mov
mov
adc
loopne
cmp
lahf
xor
xor
fnsave
add
ja
leave
pop
mov
enter
pop
and
mov
ja
pop
push
call
add
and
inc
cmp
cltd
cmp
aaa
jne
push
dec
xor
pop
hlt
mov
outsb
or
mov
montmul
cmpsb
ret
dec
orb
jb
push
out
ljmp
mov
pop
mov
sub
data16
imul
xlat
push
outsl
pop
mov
mov
aad
es
mov
sbbl
aas
data16
jns
imul
ljmp
mov
int3
sbb
stos
ds
pop
push
mov
popf
dec
popf
mov
lods
shlb
xor
imul
pusha
mov
mov
inc
fwait
push
adcb
repz
xchg
cli
leave
mov
add
gs
mov
int
and
arpl
mov
std
add
mov
lret
imul
dec
es
jp
mov
loopne
push
adc
sbb
das
push
cmpsb
xchg
xchg
adc
int3
mov
test
or
loop
fcomps
xor
fstpl
push
cmp
or
loope
test
imul
inc
aaa
mov
xchg
sarl
ret
test
int
enter
mov
mov
mov
adc
scas
sub
repz
cmp
fnstsw
sub
subl
lahf
lea
lds
xor
lea
lds
pop
and
mov
inc
ret
sbb
jnp
movsl
arpl
dec
lods
sbb
mov
mov
in
mov
push
cmpsb
pop
sbb
cltd
into
cmpsb
xchg
fidivrl
incb
push
mov
lds
test
popa
push
mov
inc
addr16
adc
adc
lds
or
faddp
mov
adcl
mov
mov
icebp
mov
dec
pop
jp
pop
mov
in
lods
test
push
movsb
push
and
mov
int
test
lret
in
jmp
stos
push
pop
sbb
shll
sub
mov
dec
sub
dec
xlat
mov
xlat
cmovno
and
push
sbb
gs
repnz
or
aam
out
movsb
lods
dec
pop
mov
jl
and
xchg
lods
test
icebp
or
jp
dec
pop
mov
clc
lcall
cmp
xor
mov
fsts
aas
mov
enter
inc
fildl
push
repnz
scas
pop
addl
stos
xchg
adc
and
dec
stos
ds
xchg
mov
xor
add
insl
mov
inc
xchg
ljmp
outsb
sub
adc
push
nop
push
push
addr16
fsubrl
out
adc
dec
test
or
inc
fdivrs
and
jle
dec
aad
or
push
inc
cwtl
xchg
xor
aam
push
fisubrs
cmp
jge
imul
xor
mov
leave
js
imul
cmp
and
cwtl
ja
mov
test
xchg
mov
popa
cmp
mov
aad
sahf
adc
inc
inc
ret
sub
dec
rcll
jae
xchg
mov
dec
adc
xor
mov
dec
lret
sti
rcrl
or
xchg
rcl
or
js
mov
shll
push
inc
in
popa
push
repz
jo
repz
push
mov
bound
xchg
pop
les
push
inc
fs
inc
mov
fstps
pusha
lods
push
test
or
lds
fiaddl
mov
cmp
ss
mov
bound
mov
mov
mov
mov
ret
cmp
fnsave
push
jno
lret
jne
lock
pop
xor
inc
mov
call
popf
test
xorl
movsb
cmp
add
int
dec
or
xchg
sbb
and
rol
aad
add
jle
mov
sbb
cli
loopne
lock
or
xchg
add
insb
and
and
cmp
adcl
inc
fdivrl
iret
fisttpl
or
sahf
push
js
adc
cmpsl
jl
jge
out
sub
ds
cmpsb
psllw
sub
movsb
xchg
stos
loopne
enter
popa
sar
imul
call
jp
inc
dec
lcall
inc
negb
xchg
inc
inc
xor
call
addr16
ficoms
decb
jl
data16
