bound
mov
or
fcmovnb
jge
mov
pop
jg
mov
mov
shlb
fwait
lret
repz
xor
dec
mov
xchg
ret
aam
test
push
inc
lcall
sub
dec
lahf
xor
mov
cmp
lcall
pushf
cmp
rep
call
cmp
push
ficoms
scas
out
push
add
xlat
insl
fsubrs
xchg
mov
stc
in
out
adc
jecxz
data16
aam
xchg
xor
es
push
test
test
imul
enter
inc
inc
mov
cmp
lock
lods
mov
insl
xlat
iret
mov
push
mov
push
pop
push
add
cltd
dec
icebp
jo
xor
stos
mov
movsb
mov
dec
push
mov
ret
notb
aam
stos
call
pusha
xchg
jne
mov
add
add
enter
shl
dec
mov
in
daa
into
dec
xchg
pusha
fwait
loopne
cs
mov
inc
les
clc
fcoml
hlt
lcall
cli
ja
test
out
mov
mov
mov
mov
ficoml
mov
ja
mov
aad
pusha
mov
cld
mov
setl
mov
adc
dec
dec
mov
cmpsl
ffreep
out
push
mov
imul
add
xchg
in
inc
jl
xor
in
fildll
mov
mov
flds
add
imul
rcl
in
shrl
mov
jecxz
hlt
stos
js
stos
and
rorb
shlb
push
in
fstpt
push
test
cmpsl
ret
sti
scas
ljmp
push
or
push
jb
addr16
fucom
xchg
mov
add
xchg
jmp
push
mov
xchg
daa
push
and
or
push
insb
sub
pop
cmp
xlat
nop
mov
lods
mov
xor
xchg
shl
push
call
test
pop
out
std
cltd
call
inc
ja
in
jnp
leave
and
into
cmp
insl
xchg
int3
push
mov
into
fimuls
in
jp
es
lret
xchg
dec
or
js
ja
mov
out
mov
mov
pop
mov
cmp
scas
jle
jg
das
movsl
xor
push
xchg
bound
arpl
sub
dec
mov
mov
mov
dec
hlt
lock
cmp
jp,pt
xlat
imul
xchg
xlat
out
arpl
push
mov
push
jl
dec
pop
data16
icebp
pop
push
fdivr
add
fwait
adc
fwait
ror
mov
int
push
dec
pop
popf
outsl
imul
call
xor
fs
frstor
mov
je
inc
cmpsl
mov
imul
push
test
mov
sbb
xchg
les
mov
into
mov
push
mov
lock
sahf
mov
loope
bound
addr16
sbbb
sub
cwtl
jae
xlat
xor
aaa
pop
ror
xchg
mov
jp
jbe
and
subb
loop
xor
dec
pop
enter
cmpsl
sbb
jbe
jo
mov
mov
sti
mov
stos
jmp
inc
out
cmp
popf
stc
push
inc
ja
ss
dec
push
mov
movsb
imul
xchg
stos
xor
out
stos
addr16
addl
inc
test
cli
fstpt
lahf
frstor
clc
mov
cmp
flds
sahf
sub
inc
test
insl
aas
in
daa
fcmovnbe
dec
jnp
aas
mov
subl
dec
pop
sbb
pop
mov
test
jle
data16
push
ret
mull
outsl
test
rorb
inc
xchg
outsb
pop
and
jle
mov
inc
mov
xor
xchg
xchg
scas
xchg
shlb
arpl
mov
loopne
add
xor
xchg
out
pop
mov
push
mov
sub
je
jge
xor
gs
lcall
out
cmp
shlb
pop
call
scas
xor
mov
mov
sub
adc
cmpsl
pop
rorl
mov
jmp
pushf
rcl
mulb
out
xor
es
lock
pusha
pop
cmc
xchg
xor
in
push
divl
cltd
mov
repz
push
pop
stos
js
and
inc
cmc
ds
jp
popf
cmp
stos
inc
rclb
rcrl
jp
loopne
lds
push
mov
sub
mov
adc
xchg
outsb
dec
js
lods
notl
and
inc
and
inc
cs
sbb
lds
add
scas
nop
jg
shlb
aas
into
into
lahf
mov
dec
adc
daa
psubw
jb
imul
out
imul
stc
enter
jle
cld
test
inc
scas
int3
xor
repz
fcomps
xchg
scas
mov
ret
xchg
rolb
mov
pop
mov
or
lock
mov
repnz
sti
movsb
dec
aaa
pushf
jg
jle
xor
jmp
cmpsb
hlt
jnp
ret
mov
mov
sbb
out
lret
sarb
xor
repz
roll
jbe
movsl
and
mov
cmp
in
out
movsl
mov
mov
out
xchg
mov
dec
pop
mov
leave
jae
adcl
out
movsl
cs
pop
push
cld
popa
lea
sbb
outsl
push
inc
out
pop
jge
inc
outsl
push
loopne
stos
addb
cmpsl
inc
rcr
movaps
incl
mov
xor
sub
jno
mov
push
xlat
sub
js
pop
mov
in
push
outsb
sbb
ss
sub
jb
shl
scas
push
inc
mov
adc
pusha
sub
mov
mov
mov
in
and
ret
rorl
fldt
jnp
test
add
aas
cmc
mov
out
in
xchg
lods
sbb
xor
fcompl
cmp
imul
push
xchg
xorl
add
mov
cmp
faddl
mov
out
and
ret
inc
pop
lret
es
push
pop
daa
pop
scas
cmc
add
sbb
and
jl
pop
dec
jb
ja
pushl
cmp
imul
ljmp
mov
add
xor
jns
pushf
inc
pushw
movsb
push
loope
xchg
xchg
mov
push
push
xchg
cmp
popf
jne
sti
dec
cmp
insb
and
das
sti
out
aam
dec
or
xchg
jae
cwtl
sbbl
mov
mov
int3
jbe
mov
enter
nop
mov
fs
aas
push
int
cmp
mov
sarb
mov
les
jae
aam
ja
mov
or
je
adc
cmp
and
mov
mov
pop
clc
mov
mov
sahf
lret
push
arpl
popf
cmc
sub
hlt
dec
inc
push
sahf
out
and
jl
int3
hlt
in
leave
outsl
pop
mov
int3
cmp
and
mov
shlb
mov
cmp
pop
cwtl
add
jno
aaa
mov
out
xchg
pop
sbb
lods
hlt
je
movsl
mov
lods
sub
repnz
fdivs
fchs
in
pop
aam
dec
call
sti
mov
dec
repnz
test
cmc
cwtl
incb
pop
loop
xchg
xchg
lods
push
test
fcmovu
and
push
hlt
adc
xchg
clc
imul
sbb
cld
jg
xor
sbb
aaa
xor
cld
add
out
sti
adc
pushf
mov
js
add
movsl
xchg
stc
fsubs
inc
xor
lret
add
mov
jg
test
pop
cmp
jne
test
mov
add
inc
fdivs
pop
push
xchg
or
fnstsw
ret
fnsave
stos
dec
jno
mov
xor
and
insb
fstpl
mov
scas
inc
push
repz
pushf
rcrl
and
mov
mov
inc
lahf
inc
jo
dec
dec
jg
dec
in
pop
rcrl
enter
sbbb
das
inc
sahf
push
mov
sarl
lcall
gs
cld
shrl
divb
pop
mov
mov
pop
leave
testb
mov
jmp
outsl
mov
mull
enter
mov
movsl
addr16
imul
inc
xor
enter
arpl
sbb
mov
mov
pop
lcall
aaa
jns
pusha
gs
push
xlat
addb
xor
clc
xchg
or
jne
int
sub
push
adc
jl
arpl
lock
lods
adc
fbstp
out
xor
jg
sbb
mov
push
mov
cmova
pushf
clc
test
adc
subl
add
or
xor
shrl
or
sbb
shrb
ret
inc
testl
sub
les
lcall
push
mov
ljmp
ficomps
mov
mov
xor
lahf
es
pop
mov
xchg
mov
adc
inc
mov
or
aaa
cmc
xor
pusha
or
outsb
rcrl
mov
test
jp
jle
shrl
mov
mov
jg
in
xor
jge
push
out
cmp
and
add
aam
add
cwtl
imul
shlb
mov
fdivrl
mov
bound
icebp
test
fists
jno
ror
and
lods
sti
pop
loop
negl
xor
pusha
jle
xor
loopne
into
pop
insb
int3
ficomps
sub
into
lahf
cmp
call
out
sub
lcall
mov
in
movl
rclb
daa
lret
sub
sbb
outsl
inc
fimuls
jo
fldcw
jmp
stos
xor
fsubrs
sub
out
push
push
adc
pop
js
mov
pop
icebp
mov
adc
inc
sbb
push
dec
ret
cmp
jp
push
xor
ja
loop
cwtl
insl
rcl
jge
in
in
xor
mov
aaa
aad
inc
mov
xchg
js
fsubp
insl
fs
mov
push
adc
mov
push
xchg
enter
dec
push
sti
fistl
ss
inc
movsb
dec
setl
xlat
arpl
mov
vsubss
push
fisttpll
mov
add
pop
test
jl
fsubrs
xchg
inc
push
sub
dec
lods
imul
pop
dec
test
popf
movsb
add
xchg
test
fcmovne
mov
xchg
cmpsl
inc
int3
nop
faddl
ret
aad
xor
inc
sahf
sbb
fucomi
xor
adc
inc
mov
imul
lods
in
xcrypt-cbc
cmpsl
adc
or
cwtl
es
pop
rcll
mov
inc
imul
jge
in
mov
bound
ret
and
inc
xchg
sbb
and
push
mov
in
pusha
xchg
mov
sbb
mov
mov
shlb
movsl
outsl
sbb
imul
mov
aad
jmp
hlt
pushl
mov
mov
or
movsl
fwait
out
out
xchg
scas
incl
dec
xchg
fnstsw
das
pop
stc
andb
dec
push
xor
push
xor
xor
push
popf
mov
mov
sbb
out
push
and
mov
mov
jb
cmpb
or
xor
out
jge
xchg
add
lock
cmpl
sbb
add
loope
aas
add
fdivrl
cmp
shrl
dec
mov
xchg
cli
or
clc
mov
or
cmc
fcomi
loop
nop
imul
cmp
jecxz
dec
add
jg
push
int3
sub
das
aad
mov
inc
imul
hlt
mov
loope
cmp
jp
js
jbe
lcall
push
sti
sub
mov
push
ja
aam
push
or
push
sbb
fst
xchg
adc
shrb
sbb
mov
mov
pop
or
lcall
mov
pusha
scas
jg
cmp
jp
lahf
aaa
scas
dec
xor
push
mov
inc
ja
or
les
lods
xchg
lock
les
mov
dec
loope
mov
cs
sub
inc
subb
push
mov
mov
inc
scas
or
scas
xlat
movb
je
data16
rcrb
xchg
inc
fnsave
sti
mov
sub
lods
mov
lds
or
push
addr16
adcl
push
sbbl
push
mov
jp
dec
cmpsl
movsb
sub
push
mov
or
fcoms
jae
es
add
xchg
mov
fstps
out
mov
sbb
lock
or
imul
lahf
ds
out
cmpsl
mov
shll
push
pop
sub
and
jle
adc
adc
pop
roll
push
lea
xor
jae
mov
lods
add
pop
scas
mov
testl
ret
movsl
test
sbb
int3
mov
push
push
mov
cmp
pop
daa
mov
rcll
jne
push
repz
pop
pop
jb
and
std
pop
scas
scas
pop
clc
pop
rcr
lods
push
inc
and
lods
pop
lcall
add
cmpl
icebp
pop
mov
insl
jle
imul
dec
stos
xor
in
jae
test
push
xchg
mov
cmpsl
pop
out
xchg
imul
insb
and
sti
popaw
fld
adc
jne
add
push
insl
iret
ror
fwait
out
xlat
insb
outsb
lahf
into
xor
xabort
ds
mov
scas
mov
cltd
lret
fidivrl
lods
stos
mov
xor
ret
jl
inc
pusha
dec
ja
stc
mov
ret
stos
out
mov
shrl
cmp
push
inc
add
fwait
inc
push
imul
push
sbb
cmp
push
ret
xlat
sbb
mov
mov
ss
fwait
stos
pop
pop
je
cmp
push
dec
hlt
gs
push
test
sub
lods
fsubr
repnz
inc
fsubrs
mov
fcompl
into
xchg
popf
push
add
sahf
sbb
movsl
nop
jne
mov
jbe
lret
xchg
sub
ret
loop
xchg
mov
cmp
dec
insb
scas
repz
clc
jp
sti
jbe
dec
popa
cmpsb
into
sbb
xor
pusha
mov
adc
push
push
test
lea
pop
pushf
fbstp
lret
decl
pushf
mov
push
cmp
lds
icebp
roll
xor
sbb
cwtl
adc
dec
mov
xor
and
pop
jle
mov
mov
jl
js
jg
inc
cmpsb
out
test
dec
out
push
xor
cmpsl
rep
sub
jge
int
push
adc
and
pop
out
lcall
jg
dec
mov
xchg
out
mov
xchg
or
fisubrl
jb
ljmp
xor
mov
jns
mov
js
popf
aad
outsl
inc
insl
scas
lret
popf
sahf
xchg
mov
out
data16
add
shlb
pop
mov
jl
push
push
stc
push
push
aam
rclb
adc
imul
movsl
mov
stos
fcmovnbe
sub
iret
push
scas
sar
test
aas
lods
ret
repz
je
mov
push
call
inc
pop
shlb
adc
pop
addr16
mov
daa
push
jb
push
pushf
fmul
pop
dec
dec
mov
sub
out
mov
int
int
shrl
enter
push
jb
mov
pop
sub
xlat
ror
nop
in
or
push
or
aam
add
ficomps
jo
inc
push
nop
mov
pop
roll
mov
cmpsb
dec
pushl
fwait
dec
adc
nop
xor
fadds
adc
cli
sub
in
pop
and
mov
inc
xor
pusha
jbe
xor
imul
rcll
push
push
dec
repnz
sarl
mov
xor
dec
fsubs
jo
out
push
test
jne
xor
shl
iret
test
iret
sahf
lods
mov
mov
jbe
int3
mov
fdivrl
sbb
pop
ss
roll
mov
lods
jmp
sub
testl
inc
adc
insb
pop
jge
notl
ja
mov
fcomps
pop
push
stos
sbb
push
push
pusha
inc
adcl
mov
popa
mov
add
sbb
jp
in
scas
cltd
lret
or
mov
fcmovnb
cmp
bound
xchg
std
pop
sub
push
inc
dec
xchg
pop
sbb
cmp
testl
cmpsb
in
pushf
stos
fimuls
repnz
jle
inc
fstl
sahf
js
cltd
xchg
adc
cld
cmp
ja
adc
xchg
imull
ss
je
inc
popa
fucom
pop
stos
enter
sbb
xor
or
out
scas
sbb
mov
cmp
fcomps
icebp
cmp
mov
popf
in
pusha
stos
popa
mov
scas
mov
and
jl
das
cmp
sub
fimull
xor
fcmovu
pusha
cmp
xchg
cmp
daa
cmpb
pop
xchg
stc
insl
aaa
in
cmp
xor
leave
nop
lcall
xchg
shrl
stos
pop
cmpsb
push
icebp
xchg
jmp
cmp
fldl
mov
dec
rcl
fwait
sbb
xchg
call
or
cli
subb
imull
lods
rcll
push
xchg
lods
sbb
cmp
cmp
inc
scas
inc
or
inc
daa
sbb
fldcw
cmp
and
jae
fistpll
mov
ret
jg
out
fwait
lret
dec
push
fnstcw
sbb
lahf
pop
lahf
jmp
test
xchg
arpl
scas
notl
lds
lock
inc
cwtl
out
xchg
jle
xor
pop
lock
sub
aaa
lods
inc
pop
imul
dec
mov
rolb
add
in
sub
outsb
insl
jno
cmp
or
pop
scas
sbb
pop
push
xlat
add
mov
jae
mov
xchg
fldl
adc
ja
dec
adc
mov
cli
cmp
sbbl
pop
pop
xchg
out
xchg
hlt
push
pop
mov
xor
mov
mov
daa
pop
sub
push
dec
mov
mov
sbb
inc
je
mov
rolb
lcall
call
pop
mov
mov
adc
iret
daa
imul
ret
xchg
add
es
sbb
daa
mov
dec
mov
mov
pop
outsb
lock
or
mov
inc
icebp
push
testb
aaa
out
mov
cmp
pop
cmp
pop
mov
sub
cltd
dec
mov
mov
lahf
fsin
mov
call
jl
ds
rcl
dec
pop
pop
push
pop
test
dec
inc
leave
mov
mov
mov
test
fs
ja
lock
out
mov
fld
cmp
cltd
mov
int3
add
or
pop
pusha
xor
jae
push
dec
mov
test
int3
test
hlt
ret
mov
adc
in
xor
cmpsl
mov
movsb
xchg
add
cmpsb
in
scas
popf
pushw
nop
mov
inc
outsb
pop
imul
je
jge
push
ja
mov
cmp
push
add
xlat
loope
xchg
mov
iret
mov
pop
sub
scas
ficomps
mov
insl
fdivrl
xor
dec
push
or
movsb
fcomi
mov
xchg
movsb
mov
sbb
inc
jge
push
push
sub
mov
repz
jl
ret
insl
mov
ret
arpl
fcmovb
ja
mov
idivb
insb
jecxz
adc
mov
xor
push
mov
xor
rolb
dec
jp
stos
pop
sti
lret
les
daa
mov
stos
popa
insl
mov
sbb
retw
xchg
repnz
or
xor
cmp
sti
cmp
xchg
inc
nop
stos
pop
jbe
daa
push
push
div
in
jns
fiaddl
sbb
fadds
lcall
dec
stos
xchg
fld
push
fists
mov
or
lock
push
mov
jb
push
insl
jns
sbb
mov
outsb
or
dec
xor
stos
cmp
mov
call
cmp
mov
xchg
pushl
add
test
sarl
out
dec
pop
sub
ljmp
mov
jnp
nop
jbe
xor
jne
mov
into
ja
loop
cmp
push
xchg
adc
push
push
cmp
push
mov
into
incl
addb
into
mov
mov
call
stos
jae
int
aas
js
loope
push
imul
sahf
call
je
test
adc
inc
pop
mov
mov
pop
push
xor
mov
scas
test
imul
jecxz
add
lds
fnsave
jecxz
jle
push
stos
scas
lahf
sbb
outsl
nop
test
ss
jbe
movsl
mov
mov
inc
je
adc
xor
push
lods
clc
xchg
ficoms
dec
jle
sbb
pop
test
inc
push
das
mov
inc
jnp
mov
arpl
scas
movsb
shrb
sbb
push
dec
out
shr
cmp
pushf
adc
adc
scas
mov
mov
mov
data16
adc
lods
int3
mov
lds
pop
mov
jne
insl
mov
mov
inc
mov
push
scas
test
dec
fisttps
mov
div
out
adc
xlat
cmpsl
xlat
ds
fimull
mov
inc
or
sub
repz
inc
and
and
mov
ret
push
les
pop
cmpsl
inc
add
adc
mov
push
lahf
gs
push
je
jne
sub
mull
loop
pop
xchg
pop
lret
dec
stos
pop
iret
in
xor
rcll
movsb
fsubrl
shll
cltd
test
insb
scas
stc
enter
jmp
lret
pop
lods
test
dec
cmpsb
mov
repz
in
rcl
dec
xchg
sar
filds
arpl
addb
sahf
scas
lock
or
fwait
test
dec
sbb
arpl
xchg
xchg
dec
xchg
ljmp
rorb
adc
stos
in
or
das
out
jne
ret
daa
inc
js
jnp
pop
aaa
dec
cwtl
dec
out
push
scas
push
mov
in
pop
aas
das
addr16
mov
lahf
aaa
ret
out
jge
repz
movsb
push
push
movntq
pop
pop
jnp
mov
jb
out
scas
pop
arpl
pop
xchg
and
cld
lods
scas
cmp
sarl
mov
pop
mov
fwait
cmc
insb
outsl
loopne
xor
mov
fdivl
dec
rcll
pusha
adc
dec
push
dec
pop
xchg
rorb
ljmp
arpl
lahf
push
aad
call
mov
cmp
pop
sbb
xchg
cmpsl
sbb
cmp
pop
js
adc
xchg
imul
xor
pop
outsl
jl
lods
pushf
xchg
ficomps
loop
repz
xor
out
lahf
scas
pop
test
rcl
enter
out
mov
jp
or
test
fldcw
xchg
xchg
xchg
cltd
imul
push
mov
leave
lahf
mov
loopne
pop
lcall
push
shl
stos
mov
push
jg
jp
lods
stos
push
push
inc
cs
sahf
dec
loopne
pop
inc
not
out
jb
stos
adc
mov
fiadds
sti
std
push
pop
mov
add
xor
cwtl
loope
lahf
in
mov
inc
jne
pop
cmp
fimuls
mov
cli
aas
mov
pop
xor
mov
dec
mov
jb
imul
mov
adc
lds
into
test
popa
jmp
sbb
mov
sbb
or
dec
sbb
xchg
mov
fcmovbe
inc
pop
mov
xor
out
in
repnz
in
pop
pop
ficomps
jl
mov
sarl
bound
je
sbbl
cs
or
sarb
mov
addr16
ljmp
adc
pop
sti
adc
or
mov
mov
cmp
mov
in
push
mov
in
stc
mov
mov
cltd
dec
dec
fistpll
or
mov
xchg
cmp
xor
scas
lahf
sub
adc
testl
sbbb
push
xor
inc
insl
fwait
mov
push
inc
int
mov
xor
cmp
movsb
shrl
mov
mov
xor
pushf
add
sbbb
roll
xchg
mov
ss
push
cwtl
jg
mov
lock
push
aaa
das
inc
cmpsl
ficoms
jp
jmp
xlat
loope
pop
adc
dec
cmpsl
imul
jl
or
call
xchg
aam
insl
data16
fdivl
or
push
cmpb
xchg
rcr
out
inc
inc
rclb
int
jmp
mov
test
fistl
cmpsl
push
fdiv
add
out
popf
pop
aas
dec
mov
pop
ja
out
nop
and
xchg
dec
sub
cmp
mov
xor
pop
xchg
nop
cmp
outsb
sub
adc
cltd
xor
or
test
push
scas
cmp
inc
jo
shlb
test
mov
mov
out
jnp
insl
push
out
mov
jns
adc
ficomps
pop
mov
mov
pushl
test
jecxz
xacquire
lcall
scas
mov
leave
rcrl
ja
jmp
out
cmp
add
sbb
jmp
mov
call
sarl
lea
into
scas
jecxz
lock
mov
add
pushf
mov
rol
movsb
jecxz
daa
xor
aaa
cmp
push
cmp
inc
aam
mov
dec
mov
imul
test
xlat
test
push
adcb
popa
mov
cs
scas
aaa
mov
mov
xchg
fs
push
mov
jle
mov
scas
bound
fcom
leave
sbb
pop
mov
mov
mov
inc
clc
outsl
in
and
mov
mov
int3
add
scas
inc
xor
scas
shlb
mov
ret
sbb
mov
jle
mov
loop
in
lahf
pushf
sub
and
mov
mov
stos
dec
mov
mov
adc
inc
xor
mov
imul
sub
or
stos
add
jns
mov
into
push
dec
xchg
mov
mov
add
insb
std
out
fs
mov
cmpb
xchg
sbb
test
in
pusha
mov
inc
imulb
scas
pop
pop
or
mov
pop
adcb
and
mov
pushl
imul
in
push
or
aas
popa
inc
cmp
inc
fists
cwtl
and
ja
pop
gs
cwtl
fsts
sub
dec
cmp
jle
adc
adc
mov
in
add
cmpsl
pop
hlt
mov
fisttpl
mov
xchg
icebp
lahf
sbb
shlb
aaa
loope
iret
lods
push
push
lods
adcb
insl
out
test
inc
xchg
push
insl
mov
mov
test
or
xor
lahf
mov
fldenv
aad
and
out
dec
inc
fld
or
inc
xchg
mov
rcll
mov
rcrl
leave
push
movsl
inc
xor
fsubs
out
mov
test
or
insb
and
and
adc
add
dec
stos
daa
mov
lret
push
into
mov
inc
mov
pop
dec
mov
stc
outsb
ss
or
mov
pusha
mov
jae
rcrb
iret
mov
lods
fsubrl
pop
push
xor
ja
popf
data16
inc
idivl
mov
push
xor
int
fbld
daa
ss
shlb
das
fmul
idivl
xor
cs
push
fs
bound
test
jae
iret
je
lea
cld
mov
pusha
xchg
out
sub
dec
cltd
popl
jne
pop
dec
pop
mov
cmp
sbb
imul
dec
cli
mov
mov
adc
mov
pop
sub
negb
lds
je
jl
punpckhdq
push
fsubs
push
loopne
stos
jmp
push
jo
rcrl
mov
push
add
pop
jo
fstp
cmp
es
cwtl
test
mov
subl
push
out
inc
lret
mov
mov
inc
push
scas
mov
xchg
jne
adc
sbb
jmp
jg
leave
es
xchg
mov
push
add
hlt
pop
add
xchg
sub
mov
jae
insl
dec
das
jecxz
negb
pop
mov
jle
insb
cmp
daa
dec
ja
sub
lds
inc
fistps
pushf
nop
imul
mov
push
xor
data16
jne
mov
adc
jae
xchg
gs
test
inc
fwait
sub
nop
aad
rclb
xchg
ds
cmp
and
idiv
or
lahf
cmp
lods
mov
scas
jl
fnstenv
negl
mov
pusha
imul
std
pop
in
rcl
or
ffreep
xlat
cld
sahf
jmp
jmp
mov
cmp
xor
mov
xlat
in
aam
and
bound
mov
loopne
push
in
inc
pop
pop
mov
add
cmp
scas
adc
adc
sbb
xor
cmp
cs
adc
cmpsl
pop
sub
and
or
scas
dec
jmp
cld
xchg
repz
dec
mov
jmp
adc
mul
int3
mov
push
enter
jg
push
popa
pop
es
jle
aad
dec
pop
bound
mov
scas
aam
pop
jmp
ss
repnz
nop
add
mov
pop
leave
repz
gs
test
loopne
pop
mov
jge
nop
pusha
aaa
insl
lock
bound
out
xor
add
push
or
jl
mov
push
mov
jne
fmuls
sub
or
jg
cmpsl
fcoms
lea
jae
aam
mov
sbb
mov
aaa
mov
push
ljmp
mov
fmuls
cs
mov
mov
imul
fildll
fcoml
mov
cmp
sub
cmp
mov
cwtl
popf
dec
je
jbe
pop
ret
push
outsb
cli
push
pop
cmp
cmp
stos
xchg
xchg
cwtl
fsubrs
notl
out
dec
std
ds
sbb
sahf
addb
dec
jne
pop
stc
pop
push
pop
sahf
sub
xchg
add
mov
aam
or
out
shlb
cmp
mov
mov
fbstp
lock
xchg
pop
jle
test
xchg
xchg
es
pop
fidivrs
mov
popf
adcl
repnz
cwtl
cmpsb
notl
outsl
mov
push
out
mov
fisubl
pop
popf
stc
ret
pop
outsl
or
inc
fcoms
push
dec
and
mov
push
shlb
mov
imul
sti
repz
mov
or
xchg
das
fistps
loopne
sbb
mov
lods
imul
lret
xchg
sbb
and
sub
inc
lcall
push
lea
or
out
mov
test
lcall
jns
cwtl
dec
push
xchg
in
in
mov
mov
mov
lret
mov
in
push
or
pop
xor
das
scas
pusha
mov
xor
xchg
sbb
dec
daa
lcall
scas
test
mov
sub
fcos
cmp
xchg
test
pop
mov
in
push
lock
push
or
add
loopne
dec
mov
mov
divw
push
and
sub
lahf
mov
mov
mov
lods
insb
push
jle
push
dec
pusha
mov
cwtl
enter
imulb
lcall
and
decb
xchg
xor
nop
pop
xchg
fdivrl
ljmp
mov
sbb
test
loope
jno
sub
mov
shl
pop
enter
hlt
in
sub
insb
cmp
ljmp
hlt
sarl
mov
mov
lret
inc
xchg
out
mov
push
push
inc
rol
jno
mov
out
decl
fs
cltd
dec
push
aaa
clc
dec
jnp
add
push
popf
sarb
push
ret
xlat
ds
aaa
mov
xchg
cmp
sub
mov
cmp
addl
into
mov
je
je
sarl
jg
movsb
es
iret
sub
ret
xchg
cmpsl
fistl
pop
pusha
mov
mov
push
dec
xchg
dec
fdivs
push
inc
inc
cmpsb
jmp
neg
push
xchg
lahf
in
sub
pop
inc
push
scas
rcrl
mov
lea
jmp
imul
es
cmp
pop
adc
sub
xchg
dec
adc
cs
xor
mov
sub
fstpt
mov
add
xlat
nop
nop
daa
cmpsb
and
jo
mov
testl
add
std
insl
sti
cltd
add
adc
inc
lret
or
dec
mov
mov
pop
jns
comiss
mov
lods
jne
pop
push
loopne
cmp
std
cld
mov
in
and
mov
mov
fbstp
jle
jnp
adc
clc
rcr
fadd
lret
fldenv
int3
aam
jmp
in
pop
pop
into
push
jb
mov
push
adc
fcmovnbe
and
sub
push
daa
dec
cmp
popl
iret
mov
dec
mov
xlat
add
inc
xchg
add
test
ja
inc
inc
mov
xchg
outsb
mov
div
cmpsl
dec
mov
out
jae
nop
inc
out
in
adc
mov
out
and
and
and
jle
jg
int3
mov
push
enter
adc
pushf
iret
mov
subb
mov
pop
pop
xchg
adc
push
int
daa
les
mov
lods
jbe
bound
xchg
add
cmp
arpl
aam
pop
lods
cmc
dec
jge
fwait
test
in
sbb
scas
sbb
dec
sbb
mov
outsb
cmpsl
adc
pushl
out
dec
out
jae
mov
testb
lock
pop
sbb
idivb
adc
xlat
xchg
mov
push
in
mov
and
add
push
mov
setae
jmp
aaa
mov
cltd
or
jl
out
fstpl
cvtpi2ps
in
fldl
outsb
or
sahf
inc
xchg
inc
mov
call
mov
imul
negl
sub
xor
imul
xchg
mov
xchg
inc
cmp
sbb
jb
ds
ffreep
xor
mov
movsb
movsb
fst
cmp
dec
test
scas
and
push
dec
clc
xchg
inc
push
in
mov
sub
xchg
mov
mov
punpcklwd
mov
mov
aad
lea
mov
jne
movsl
inc
xor
xchg
jne
int3
mov
cs
xor
movsl
dec
mov
cmp
test
lret
dec
insl
in
add
aas
mov
sar
inc
adc
testl
mov
aad
or
push
xchg
mov
lahf
pop
pop
imul
adc
movsb
jecxz
lcall
out
pop
pop
mov
xchg
lahf
sub
jmp
or
jbe
dec
orb
cmp
cmc
mul
or
xor
sub
les
jo
ja
fdiv
xchg
loopne
pop
xchg
xchg
cmc
imul
mov
dec
push
cwtl
test
call
pop
pop
inc
rorb
jns
loope
movsl
dec
add
lcall
sbb
fnstenv
shrb
lods
jmp
aaa
jns
sub
mov
into
test
cmp
fistpl
or
nop
lods
das
push
add
jae
xchg
sub
and
mov
push
add
fsts
xchg
jno
inc
in
ss
mov
mov
mov
push
jo
in
dec
test
fstl
and
push
cli
xchg
push
stos
adc
hlt
stos
add
sub
iret
push
inc
mov
testb
lret
pop
into
push
mov
push
cld
cwtl
xor
ljmp
mov
scas
inc
nop
imul
xchg
adc
fadd
xor
xor
mov
mov
fistps
std
mov
xchg
std
lahf
adc
call
call
mov
loopne
pusha
or
cltd
push
nop
nop
ja
lds
pusha
test
jmp
stos
stos
push
enter
and
pop
call
rcl
cmpsb
mov
fstps
not
mov
sbb
add
hlt
push
das
mov
xchg
int
cmpsl
imul
push
inc
mov
and
push
fs
dec
ja
lds
je
xchg
add
mov
mov
mov
fisubs
mov
add
lock
das
xor
mov
scas
mov
lods
ret
cmp
cmp
push
fnstenv
pop
inc
adc
cwtl
push
push
push
dec
jle
daa
inc
ljmp
push
subb
xchg
dec
xor
sbb
push
or
bound
scas
pushf
mov
ja
insl
sub
out
adc
add
add
ljmp
sub
xor
inc
lret
lds
out
dec
lcall
cmc
jno
cltd
lods
repz
fldlg2
and
cs
and
mov
dec
iret
lods
aaa
rclb
stos
xchg
inc
mov
repz
lret
dec
lods
xor
adc
inc
jae
mov
mov
push
push
in
lods
mov
xchg
not
mov
sti
fistpll
insl
arpl
lahf
jp
mul
jge
orl
insl
stos
je
arpl
and
pop
dec
push
mov
and
lret
inc
or
push
jb
sub
imul
adc
nop
push
addl
xchg
add
cmp
pop
sahf
mov
inc
fwait
mov
add
stos
dec
xchg
xchg
xor
fisttpl
out
lods
call
cmpsb
mov
dec
stc
dec
lods
scas
mov
mov
dec
stos
out
xchg
mov
or
std
add
lret
imul
dec
jo
repz
pushf
js
lret
mov
das
jae
and
sti
jg
add
and
iret
inc
push
outsl
inc
sub
aas
cmp
lock
push
inc
mov
jl
or
inc
leave
and
mov
scas
cmp
xchg
dec
pop
push
mov
jecxz
imul
xlat
ljmp
jo
or
pop
adc
push
imulb
jge
xchg
cmc
push
ljmp
push
lods
test
test
mov
std
inc
pop
fisubrs
xor
mov
mov
out
sub
popa
cli
inc
xchg
push
movsb
or
out
mov
pop
sub
out
enter
cli
jle
dec
or
stos
test
mov
sbb
sti
imul
mov
test
pop
clc
stos
lahf
xchg
add
fisubs
pusha
inc
xchg
sbb
dec
mov
test
dec
xchg
sub
push
inc
pop
mov
mov
dec
lcall
xchg
movsb
xchg
scas
test
or
push
sahf
mov
push
xor
mov
sbb
int
test
mov
fildl
lock
push
mov
outsb
push
in
loop
aad
stos
xchg
leave
mov
pop
test
test
inc
in
mov
in
sti
add
pushf
lea
mov
aam
and
rorl
ret
lahf
sub
cmp
dec
movsb
push
cltd
mov
loopne
ljmp
loope
movsl
cld
loope
push
lods
jecxz
aam
mov
aam
stos
sub
mov
je
lahf
or
cmpsb
pop
pop
lods
imul
mov
mov
xchg
push
call
xor
adc
and
pop
mull
mov
lcall
pop
jbe
es
scas
addr16
ja
rclb
jmp
ljmp
and
pop
movsl
xor
sub
mov
mov
repnz
cmp
jmp
mov
xchg
aas
cmp
std
bound
and
push
popa
lret
and
jp
fadds
pushf
inc
cltd
mov
lret
mov
push
cmpsl
xchg
adc
data16
cld
ficoms
jns
int
and
adc
daa
scas
and
mov
inc
jmp
lcall
lret
xor
cmpsl
inc
push
push
pop
popl
or
inc
test
sahf
cmp
cmpsb
outsb
idivl
std
fisubrs
mov
bound
mov
mov
jge
xlat
js
dec
xlat
imul
push
xlat
test
xor
dec
sahf
push
mov
clc
mov
lods
or
dec
xchg
cmp
bswap
pop
movsb
and
fwait
je
cmp
xchg
stos
lock
sti
es
push
mov
xlat
mov
test
outsb
push
adc
fcoml
sti
cmc
movsl
xchg
sysret
cmp
pop
sarl
mov
push
jnp
rcrl
mov
mov
ss
out
test
fcompl
test
scas
xor
pop
divb
outsb
dec
in
insb
xchg
and
push
fstpl
inc
push
lret
sub
dec
mov
adc
pop
gs
ljmp
mov
mov
pop
mov
dec
repz
pusha
jbe
and
fstps
pop
mov
pop
es
mov
cmc
push
cmp
add
mov
repz
pushf
cld
or
mov
pushl
popf
pushf
cmp
push
stos
mov
mov
ret
je
sti
pushf
mov
mov
int3
es
call
add
mov
mov
push
hlt
mov
rorl
pop
call
push
add
rcrl
cmp
scas
xchg
xchg
or
or
bound
pop
roll
clc
dec
scas
fistl
or
push
xchg
jecxz
push
movsl
mov
xchg
fdivp
popl
aaa
dec
pop
lods
jl
pusha
fisttps
mov
mov
xor
cltd
jle
shrl
mov
mov
inc
or
fadds
dec
sub
roll
inc
popa
mov
mov
jbe
add
incl
popa
out
fildl
sub
sbb
dec
imul
stc
pop
sub
cld
js
xchg
dec
mov
dec
imul
out
dec
xor
jnp
ret
dec
rol
maxps
inc
or
xchg
sbb
jb
scas
pop
lret
push
add
sub
cmp
fwait
hlt
dec
sub
pop
hlt
adc
mov
scas
stos
mov
jmp
mov
insl
mov
mov
repz
mov
sbb
jle
xlat
cmpsl
push
inc
push
xor
inc
push
out
add
rorl
mov
push
pop
xchg
outsl
sbb
jno
ret
sub
outsl
pushf
mov
rcr
xor
imull
sbb
xor
roll
pop
inc
icebp
sub
pop
out
xchg
sbb
sub
nop
std
pop
and
jne
out
pop
mov
mov
test
cwtl
and
inc
mov
pop
cmp
or
clc
data16
jae
aam
jge
clc
ret
ljmp
sbb
xor
adcb
adc
mov
mov
mov
pop
adc
mov
mov
scas
jg
mov
push
jp
dec
push
mov
mov
idivl
adc
xchg
cmp
fwait
in
mov
add
stos
inc
inc
pop
data16
sub
add
test
or
sarl
ja
pop
repnz
and
stos
hlt
push
lret
frstor
ficomps
insb
imul
push
push
cld
ficomps
fstl
xor
mov
add
inc
lods
fwait
mov
daa
negb
out
and
inc
xchg
sbb
roll
hlt
cmpsb
mov
and
outsl
xchg
sbb
addr16
inc
xchg
lahf
mov
pop
cld
cmc
lret
mov
fdivl
out
sti
in
push
aaa
dec
into
and
jl
xchg
shlb
jne
sub
cmp
jmp
dec
ret
pop
lea
out
rcpps
mov
into
lahf
shrb
sbb
mov
ret
popa
ret
xchg
inc
ds
enter
pushf
push
lods
xor
fs
sbb
xor
inc
fs
icebp
adc
sbb
push
mov
outsb
std
sbb
into
mov
jp
jmp
faddl
adc
test
mov
mov
jg
gs
fcoms
lret
mov
mov
cmpsb
mov
fs
xor
fidivrs
push
js
cmp
and
jns
aaa
cmp
pop
push
lahf
in
add
leave
pop
test
loop
fstps
pusha
xor
mov
sti
filds
test
dec
fsubs
dec
fldt
andb
xor
hlt
shr
test
xchg
insb
jno
jp
pop
dec
xchg
sbb
sahf
and
sbb
add
insl
push
and
out
fstps
pop
dec
add
fst
das
sbb
mov
xchg
in
add
sbb
mov
fbld
fsts
xorl
mov
dec
mov
pop
fucomp
and
jmp
push
ds
int3
aas
mov
daa
adc
sbb
push
sar
dec
cmp
mov
push
shll
xor
inc
repz
stos
cmp
stos
inc
test
movsb
pop
aaa
lret
sti
xchg
mov
mov
mov
test
cmpsl
cld
lea
xchg
jmp
add
loop
sahf
cli
pushf
xor
lahf
jne
xchg
mov
mov
jge
xchg
andb
or
lret
sti
rcrb
mov
test
cmp
outsl
xchg
push
xlat
outsl
test
aam
jmp
add
rcrl
xchg
movsb
ret
push
jmp
dec
xchg
and
mov
mov
shlb
insb
nop
sbb
push
xchg
in
and
insl
mov
mov
jmp
cli
test
cld
rcrl
ds
jns
mov
xor
cmp
push
cmp
inc
loop
pop
pop
aaa
adc
push
jp
in
inc
pop
fnstcw
mov
ja
push
add
jmp
inc
xor
xor
mov
mov
xchg
cmp
insb
add
mov
xchg
mov
lcall
xchg
mov
sbb
cs
stc
test
mov
sahf
push
or
les
adc
and
out
mov
jo
fistps
test
sub
inc
in
pop
mov
mov
push
rcrb
xor
mov
xchg
rclb
addl
mov
or
xor
xchg
jge,pt
push
stos
mov
mov
dec
call
xlat
mov
add
or
daa
push
mov
cmp
push
and
adc
dec
pop
add
push
les
lea
jnp
mov
mov
jle
inc
lret
pop
xchg
int
mov
pop
scas
sub
mov
and
mov
jno
pop
sbb
or
jge
ret
rorb
inc
pop
dec
and
inc
jecxz
in
pop
xchg
and
stos
add
inc
sbb
repz
shlb
test
push
jne
dec
pop
pop
pop
pop
push
dec
pop
fdivs
pop
cmp
push
shrd
pop
dec
inc
jg
fmull
cmpsl
jae
mov
sub
mov
gs
rcrl
adc
or
imul
lea
mov
mov
cli
cmpsb
aas
fidivrs
shll
xchg
xchg
bound
scas
add
dec
and
mov
mov
jnp
jo
popl
mov
and
dec
sbb
sub
mov
inc
into
ds
pushf
ljmp
test
jns
cs
bound
aad
xor
outsl
adc
stos
cmpsl
mov
nop
aad
inc
mov
mov
bound
inc
and
lahf
leave
jl
in
lods
pusha
inc
xchg
and
roll
decl
and
lret
lret
push
mov
push
nop
lahf
shrb
cmp
cmp
ret
sbb
or
mov
loope
sahf
push
and
std
sub
xor
xor
lds
std
push
mov
inc
sbb
ljmp
push
int
test
lds
stos
stos
or
cmp
cmc
insb
testl
adc
jle
sbb
ffree
xchg
das
imul
dec
stos
stos
aaa
push
inc
arpl
js
pop
jle
add
jg
sub
mov
rcll
adc
cltd
cmc
and
dec
into
pop
push
add
mov
ret
or
rol
push
xchg
mov
ret
dec
jecxz
mov
mov
rclb
pusha
mov
mov
jl
and
and
daa
dec
adc
pop
mov
sbb
sbb
mov
mov
test
jnp,pn
mov
lret
cmp
stos
lds
jne
push
push
nop
push
push
mov
lcall
push
andb
test
icebp
ret
rorl
cmpsb
movsb
ret
xchg
rorl
dec
adc
xchg
aam
sbb
out
ljmp
xor
mov
das
push
xchg
out
push
push
jge
fcmovb
dec
sahf
lea
sub
data16
pop
xchg
in
mov
les
je
or
popa
fldcw
outsl
nop
and
or
mov
mov
test
loope
js
inc
sbb
lret
mov
cmp
xchg
outsl
dec
add
inc
ja
xor
or
ds
imul
cmc
or
and
push
imul
inc
push
fwait
or
adcl
xor
dec
push
inc
inc
mov
jo
lahf
enter
insb
cltd
jmp
mov
nop
jmp
stc
pop
shlb
popf
clc
das
sub
ret
push
mov
adc
sbb
pop
add
push
lret
fidivl
xchg
jb
dec
scas
add
in
mov
addb
fidivs
inc
push
mov
push
das
or
jmp
lods
adc
add
sti
push
mov
or
das
sub
fwait
cmpsb
sahf
leave
jg
test
ud0
fistps
mov
mov
std
popa
inc
lahf
out
test
xor
in
enter
xchg
pusha
jl
pop
xor
mov
mov
nop
push
xor
xchg
loope
stos
sbb
mov
mov
or
adc
test
xor
loope
add
xor
pushf
cmp
movsl
xlat
jp
cmp
dec
mov
in
iret
dec
dec
and
pop
or
jbe
push
ficoms
pop
int3
fistl
mov
sub
inc
mov
push
and
stc
mov
roll
pusha
fcoml
jae
orb
lods
pop
mov
push
aad
sbb
rcl
bound
xchg
lcall
test
imull
fwait
int
mov
sbb
lock
and
cmp
gs
cwtl
mov
test
dec
mov
int
movsl
int
sbb
mov
pop
jle
mov
sub
data16
and
insl
dec
jne
add
mov
insl
outsl
dec
ret
mov
pop
dec
cmp
dec
ret
push
push
in
fists
mov
dec
into
dec
xchg
add
pop
mov
test
mov
and
jno
rcrb
lahf
add
in
in
jne
push
mov
mov
jp
test
arpl
sbb
jo
int
push
mov
lods
cmp
fs
fiaddl
fsubl
mov
or
dec
mov
and
sub
fisttpll
push
cmpsl
repnz
mov
test
mov
int
mov
xlat
out
mov
test
mov
adc
xchg
movsb
push
bound
cmp
addl
ret
push
sahf
push
sub
inc
lds
gs
lods
xchg
loop
decl
jmp
push
pop
mov
cs
not
mov
dec
push
jecxz
inc
sahf
rorb
mov
jg
and
cmp
hlt
lcall
shll
idivl
pop
push
call
push
pop
or
push
cmc
mov
mov
push
sbb
stos
pop
inc
push
mov
adc
jo
pop
push
mov
int
adc
lods
inc
in
ret
adc
adc
clc
int3
in
cmp
stos
mov
xor
call
fnstsw
dec
sbb
fldl
rcll
jmp
sub
movsb
js
jge
mov
dec
mov
push
hlt
mov
lret
sub
jne
data16
int
daa
mov
sbb
mov
xchg
fucomip
pushf
xor
fists
jne
and
xchg
mov
aam
jo
xchg
bound
mov
jle
sub
pop
out
shll
push
int3
cmc
sbb
or
repz
mov
xchg
cmp
xchg
mov
imul
aam
pop
jge
lcall
stos
popf
mov
jecxz
or
mov
scas
adc
mov
adc
into
movsb
subl
sti
sbb
dec
or
add
dec
scas
xchg
cli
inc
cwtl
or
pushf
xor
pop
mov
xchg
shl
movsb
cmp
add
jbe
sbb
lods
pop
push
jo
es
int
stos
icebp
les
xchg
das
mov
pop
mov
lcall
clc
mov
test
repz
sbb
scas
sbb
lods
xor
sbb
jo
aad
or
lea
sbb
xor
lret
int
popf
sub
pushf
js
fwait
aad
mov
insl
and
lods
dec
movsb
btr
push
mov
ficoms
dec
push
ss
incl
jmp
inc
jne
mov
ja
jp
inc
aaa
push
or
lds
iret
iret
mov
or
ret
xchg
inc
mul
imul
push
sbb
jmp
cmpl
or
lret
shrb
dec
add
popa
fidivs
xchg
adc
jns
inc
mov
in
mov
dec
sbb
or
adc
pop
or
les
mov
jns
inc
and
cmpsl
mov
dec
add
ljmp
mov
daa
xchg
push
jmp
jle
lret
push
mov
cmpsb
iret
push
movsl
push
fstl
lret
cmp
jecxz
inc
fsubrp
cmpsb
into
adc
cmp
je
xor
pop
or
les
int3
daa
inc
jp
mov
sbb
nop
xor
jp
push
adc
push
cmp
inc
cli
xor
xlat
cli
inc
jle
addr16
loopne
aad
push
dec
xchg
shll
mov
xchg
daa
xor
loope
sti
sub
mov
cmp
pop
adc
testl
adc
and
repnz
or
mov
or
xchg
push
movsb
inc
xchg
push
mov
rorb
mov
pop
xor
and
or
cmpl
push
jp
mov
mov
xor
mov
xchg
push
jle
jno
cmp
jg
jg
inc
scas
aad
sub
pop
mov
jnp
mov
scas
call
mov
push
ja
xor
jne
mov
pop
mov
mov
jbe
mov
into
inc
mov
ret
pop
lods
imul
sbb
mov
call
dec
push
adc
mov
lods
dec
xor
pop
ja
xor
stos
mov
ds
mov
in
cwtl
imulb
or
mov
inc
xor
and
aam
xor
push
mov
push
jns
push
push
out
loopne
jne
lcall
movl
mov
push
hlt
lret
fidivs
mov
incl
leave
movl
sbb
push
mov
dec
cmpl
jl
push
movsl
jb
xchg
scas
loope
xchg
adc
mov
mov
pop
js
shrd
jo
mov
test
aas
mov
ljmp
sti
lret
mov
data16
rorl
fcom
pushl
arpl
fwait
lret
pop
dec
rcrl
imul
in
mov
push
js
ret
stos
aas
mov
arpl
data16
dec
dec
clc
stc
mov
xchg
loope
pop
xor
loopne
mov
insl
sbb
arpl
fsubl
push
mov
int3
jmp
jns
aas
pop
add
bound
call
xchg
push
movsb
mov
xchg
sub
inc
lods
sub
testb
sahf
ljmp
out
ja
mov
sbb
pop
daa
push
fsubrs
push
aas
dec
stos
ret
xchg
cmp
and
jo
mov
mov
imul
mov
inc
jbe
cli
lods
pop
pop
stos
push
xor
pop
fucomp
cmpb
adc
pop
test
out
jne
lret
and
scas
sahf
mov
adc
testb
lock
mov
add
leave
popf
xchg
sarl
push
mov
jns
xchg
ljmp
mov
cmpxchg
xchg
xchg
inc
leave
push
lret
pusha
imul
pop
out
pop
pop
imul
hlt
andb
mov
cs
int
pop
adc
call
ret
mov
in
shlb
in
lea
aas
insb
pop
mov
imul
adc
clc
cmc
inc
jle
mov
stos
cmc
call
jle
clc
xor
or
cmpsl
fiadds
es
inc
xchg
mov
lcall
lret
or
mov
mov
mov
mov
outsb
popa
jl
fstl
mov
inc
in
pop
add
pop
lods
mov
movsl
cld
adc
jmp
xchg
pop
decl
leave
xor
xchg
mov
sub
sub
pop
dec
mov
stos
clc
jl
enter
inc
in
jns
or
and
inc
mov
jg
pop
mov
cmpb
add
sbb
pop
fwait
push
pop
test
shlb
pushf
aaa
xchg
lods
popa
xor
daa
imul
fcmovnu
pop
add
pop
cmp
sbb
xor
imul
sub
push
scas
cmp
lods
pop
in
mov
shlb
add
mov
inc
jcxz
test
pop
push
mov
imul
and
stos
xchg
rorl
jmp
pop
inc
imul
push
sub
xchg
mov
or
push
mov
jecxz
lret
xor
sahf
popl
fdivp
mov
sbb
call
pop
cmp
cmpsb
fwait
insl
movsb
popf
ljmp
sbb
xorb
dec
inc
sbb
mov
push
or
push
jae
pop
sahf
lahf
bound
push
mov
fs
sub
xchg
daa
sbb
movsb
and
lea
mov
mov
xchg
xor
mov
lahf
mov
jge
inc
mov
lea
jmp
or
jae
jno
cmpsb
ja
ret
jo
mov
repnz
mov
mov
mov
sbb
mov
andl
push
test
aaa
repz
out
mov
popa
data16
jmp
and
mov
fnsave
inc
lock
insb
daa
insb
fldl
aaa
dec
mov
sub
push
pushf
test
aad
mov
inc
ss
rorl
pop
sub
stos
push
mov
ror
pop
bswap
fnsave
pop
sbbb
adc
aaa
pop
adc
les
dec
addr16
out
xchg
jb
lods
ror
jmp
cwtl
outsl
xor
or
xchg
scas
popa
mov
mov
and
add
dec
cmp
call
sbb
add
lret
mov
cmp
clc
adc
mov
fucom
aad
mov
xchg
push
jae
test
test
mov
loopne
mov
js
enter
inc
xchg
sub
ret
test
cmp
stos
in
out
out
jmp
and
xchg
mov
in
scas
scas
movsb
push
sti
int3
sub
daa
xchg
lods
into
repz
jle
pop
rcll
xlat
and
push
sub
push
es
adc
sub
sub
sarb
xor
jl
inc
fmul
pusha
push
pusha
and
mull
filds
add
mov
xor
mov
or
sub
loope
cmpsb
lock
xchg
fdivs
cmp
ret
add
mov
dec
mov
outsb
push
xchg
sbb
rolb
pushf
mov
push
push
or
push
lcall
add
mov
or
add
ss
mov
es
sbb
inc
in
insb
in
out
daa
push
jecxz
test
and
int3
xchg
ljmp
stos
xchg
add
dec
ficoml
stc
sbb
inc
jmp
jp
sub
dec
repz
lods
pop
sbb
fwait
push
dec
aad
stos
mov
push
pop
xor
lock
je
cmp
cld
xchg
pop
push
add
jns
mov
aaa
fbld
push
fimull
and
mov
aas
ret
out
adc
and
push
testl
sub
xchg
push
aaa
mov
cmc
or
mov
adc
pop
aad
or
cwtl
mov
imul
xchg
xor
nop
out
sub
cwtl
xlat
push
fdivs
push
fdivl
sub
pop
je
clc
mov
xchg
dec
xor
mov
push
fisubl
mov
push
fwait
cmp
ret
push
outsb
jg
mov
nop
imul
mov
ss
xchg
push
neg
jae
push
or
mov
lret
inc
shr
mul
pop
mov
add
scas
bnd
adc
cmp
test
mov
pop
fwait
aam
and
jnp
fs
ficomps
fistps
mov
push
fbld
pop
loop
nop
lahf
addb
into
sub
mov
cwtl
orl
cmpsl
dec
fdivl
out
mov
push
cwtl
int3
out
lahf
fwait
arpl
mov
imul
mov
aaa
mov
jg
addr16
jbe
cmpsb
xorb
shlb
subl
rcrb
xchg
mull
xchg
mov
dec
scas
loop
pop
js
or
int3
mov
dec
or
push
xor
out
mov
push
cwtl
adc
das
lcall
scas
lcall
xlat
pop
aas
aaa
dec
pop
xchg
jb
sub
push
enter
int3
pop
lea
hlt
ficoms
mov
pop
push
loopne
sub
mov
inc
push
jno
inc
jnp
xor
bound
push
mov
pop
mov
test
scas
int3
stos
mov
scas
in
idivl
sbb
fisttps
xor
mov
pop
xor
xchg
and
aaa
push
test
dec
pop
jp
dec
pushf
sub
pop
ljmp
mov
aaa
inc
lods
mov
lds
scas
divb
lcall
andl
mov
pop
stos
xor
xchg
xlat
fsubrl
shl
mov
push
sub
sbb
xor
jnp
aaa
mov
jecxz
lahf
dec
add
xchg
orb
stc
test
pop
and
jle
push
outsb
jge
cmc
test
adc
jbe
rol
cmp
push
lahf
pushl
cmp
fisttpl
imul
pop
adc
gs
mov
mov
aad
in
in
jne
out
dec
jle
shlb
add
mov
mov
in
mov
sbb
mov
in
mov
sbb
jl
adcb
jnp
fstpt
test
jecxz
xor
nop
jmp
fisubrl
movsb
xchg
pop
inc
shlb
insl
mov
filds
add
aad
test
fistps
pusha
dec
shll
movsb
mov
inc
lods
mov
push
dec
mov
sbb
ret
outsl
xchg
andb
mov
mov
jno
xchg
jmp
cmpsl
pop
loop
pop
mov
fdivs
popf
scas
daa
push
xor
cmp
sbb
mov
aam
mov
xlat
xorb
fcmovnbe
sub
aad
loopne
imull
and
pop
push
inc
push
in
scas
push
scas
outsb
lret
loope
push
mov
sub
aas
cs
xchg
daa
mov
sub
xchg
and
outsb
pop
jp
push
xchg
sahf
mov
sub
push
stos
imul
mov
sub
add
jae
or
mov
xchg
mov
data16
push
xchg
dec
mov
jae
jg
aam
add
and
sbb
loop
rorb
add
add
sbb
out
pop
xchg
popa
add
sbb
dec
lods
addb
sub
mov
push
lods
jb
fstl
into
mov
pop
lock
aas
jbe
cwtl
mov
mov
sub
movsb
test
mov
mov
aam
push
mov
data16
jo
jns
sub
in
dec
mov
popa
jl
leave
mov
rcrb
fists
div
adc
js
sbbb
inc
adc
sub
mov
jl
movsl
mov
stos
nop
sbb
lea
jb
dec
or
adc
dec
xchg
or
sub
xchg
dec
xlat
xlat
adc
push
push
pop
or
cmp
inc
lcall
cmp
scas
movsl
fildll
and
xchg
in
pop
xchg
jp
popa
jno
xor
xor
and
test
dec
les
push
fisubl
pop
aad
inc
cltd
gs
or
pop
stos
jo
dec
inc
jp
xor
andl
push
out
ret
jle
outsl
xchg
cwtl
nop
or
lea
and
bound
cltd
out
dec
in
lcall
or
xor
in
mov
icebp
xchg
call
cmc
push
enter
push
leave
jge
arpl
inc
mov
pop
mov
insb
xchg
xchg
dec
mov
arpl
mov
fdivrl
dec
cs
enter
shrb
mov
out
fs
ja
ja
lcall
jle
mov
pop
mov
icebp
cmc
cmpsl
aad
imul
xchg
cld
inc
ficompl
daa
xchg
and
mov
dec
lret
adc
loopne
mov
lcall
push
xor
jb
mov
jbe
inc
mov
sub
dec
sub
shll
dec
fwait
add
jle
lret
dec
jle
rcrb
inc
orb
xchg
sub
fiadds
rolb
fs
mov
nop
xor
insl
mov
jo
or
sahf
xchg
jmp
loop
inc
mov
or
cmp
xor
dec
loope
sti
mov
dec
jbe
dec
mov
das
xor
les
in
lcall
imul
shll
ret
scas
leave
mulps
test
pop
out
or
dec
mov
push
jle
das
mov
pop
cmpb
fbstp
adc
inc
cmp
jne
lahf
pop
mov
mov
sarl
jg
mov
mov
push
inc
push
shrl
or
mov
dec
cmpl
lods
jecxz
jp
mov
in
inc
xchg
xchg
out
push
push
ljmp
movl
push
cmp
das
mov
adc
or
mov
xchg
mov
adc
mov
shll
dec
test
and
mov
decb
mov
test
push
jnp
adc
dec
std
pinsrw
mov
test
incb
fwait
imul
rcpps
push
aaa
mov
sahf
xchg
fs
inc
cltd
cs
adcl
xor
mov
mov
or
xchg
or
mov
inc
in
add
mov
lcall
lea
cmpb
mov
loop
dec
cmp
pop
rclb
jecxz
mov
sub
push
imul
dec
mov
les
cmpsl
stc
hlt
test
scas
scas
sbb
mov
push
in
and
jle
mov
es
mov
mov
aad
sub
jg
shlb
mov
xchg
xchg
mov
adc
push
movsb
lret
mov
or
nop
mov
loope
xchg
dec
inc
mov
mov
cld
movb
std
xchg
cmpsb
sub
scas
iret
ss
jl
mov
stos
addr16
inc
and
bound
pop
jmp
fadds
xor
inc
cmp
jae
inc
jmp
lock
faddp
mov
inc
shlb
test
mov
cltd
mov
loop
and
jo
jne
xchg
dec
test
leave
push
inc
inc
test
and
sub
dec
add
das
lahf
sub
and
fcmovnb
daa
xor
loope
add
aad
fstpt
dec
sub
hlt
xchg
cmp
fucom
mov
mov
fnstenv
cmpsl
push
imul
mov
outsb
aam
rcrb
neg
jg
cmp
stos
loope
jg
in
mov
cwtl
cmp
out
cmp
sbb
jecxz
mov
cli
pop
xchg
rolb
mov
mov
mov
jg
cltd
sub
and
push
inc
adc
popf
add
add
sti
mov
rcrb
push
in
into
or
addr16
faddl
dec
lods
dec
xchg
cmp
sti
inc
call
in
mov
int3
inc
dec
mov
clc
jnp
pushf
cmp
gs
out
fistps
fisubl
outsb
mov
movsb
fwait
test
movsl
lock
fcompl
stos
mov
mov
in
fwait
es
aad
sbb
movsb
imulb
pushf
andl
dec
mov
jae
aaa
inc
jg
xor
rorb
sarl
cwtl
pop
sub
pop
xor
sbb
shll
jg
aaa
cmp
scas
jecxz
push
repnz
mov
les
mov
shl
jns
or
sub
not
leave
dec
push
mov
daa
mov
stos
xchg
sbb
jae
jne
adc
inc
dec
aaa
mov
jge
test
mov
fwait
pop
inc
jecxz
mov
mov
xchg
pusha
push
ficompl
orps
jle
test
inc
cmpsb
sarb
inc
mov
and
push
dec
pop
leave
push
notl
gs
jmp
add
pushf
mov
inc
xchg
addr16
sbbb
xor
daa
jnp
or
mov
jg
mov
popa
int
sub
lds
xorl
imul
cwtl
je
leave
push
jecxz
xchg
jo
sub
xchg
mov
out
sbb
cli
rcll
gs
pusha
inc
sarl
mov
jbe
push
xchg
insl
cmp
mov
cmp
movsl
testb
push
xchg
xorl
fldl
jle
mov
pop
inc
cmp
jg
adcb
push
imulb
xlat
sbb
jp
or
mov
mov
fistps
xor
jae
lret
xlat
lock
push
pop
and
push
sbb
mov
pop
mov
xor
jl
inc
xchg
subb
pop
and
mov
sub
mov
lods
jbe
mov
inc
fists
xor
mov
pop
xor
loope
fdivl
rclb
jecxz
push
dec
sub
fists
imul
aas
pop
cmp
sti
mov
ret
mov
mov
imul
mov
mov
sub
jecxz
lock
mov
aaa
xorl
lods
or
pop
and
mov
sti
jae
movsb
lock
inc
jmp
jne
pop
pop
push
cmc
jle
out
sti
sub
pop
cmp
ret
mov
xor
add
or
and
aas
adc
or
mov
mov
rorb
mov
pop
cmpsb
cmpsl
mov
xor
mov
loop
mov
movsb
mov
jbe
imulb
fidivs
int3
shl
xor
pop
cmc
out
mov
pop
fisubrl
mov
push
xor
pop
lods
rorb
xor
mov
pop
xor
xor
int3
pop
inc
inc
pop
mov
daa
imul
insb
cmp
mov
or
dec
jmp
mov
sub
mov
and
or
loop
xlat
xor
mov
sub
das
mov
adc
movsl
pop
mov
mov
push
movsb
in
daa
mov
sti
mov
in
das
xchg
add
inc
push
mov
push
mov
mov
mov
sti
cmc
pop
and
sbb
and
movsl
call
push
fisubl
in
xlat
mov
push
sti
sub
xchg
sbb
xorb
xlat
out
lods
rolb
pop
scas
sub
popf
aas
in
jae
pushf
sbb
xchg
mov
or
movsb
addb
nop
fmuls
aam
mov
imul
sub
faddp
sub
fdivrp
sub
hlt
sub
aad
xchg
push
fistps
dec
mov
shr
dec
mov
shlb
fmuls
faddp
inc
or
mov
add
adc
xor
fs
fidivl
in
aaa
rclb
and
cmp
pop
jp
sub
clc
pop
cwtl
pusha
jge
pop
call
push
mov
aas
sahf
pop
idivb
xor
add
jl
push
pop
out
sti
in
push
dec
mov
je
mov
stos
dec
imul
scas
call
push
and
push
dec
fisubrl
mov
popf
cmpl
push
lret
cmp
push
mov
xor
jecxz
xor
mov
je
out
aam
mov
out
pop
jl
xlat
adc
xchg
ret
jae
lret
pop
in
push
push
shrb
xchg
sub
loope
lods
mov
or
out
jg
test
jp
aaa
mov
scas
or
divb
push
jo
loopne
scas
mov
jge
stos
ss
push
jnp
mov
sbb
jle
mov
imul
ss
aas
imul
cmpsb
cli
mov
mov
cmp
or
rol
sarb
scas
adc
fucomi
adc
rolb
pop
mov
and
pop
dec
inc
faddp
imul
inc
jb
and
insl
popa
mov
stos
add
je
stos
shll
cmpsb
cmp
scas
mov
ja
mov
xchg
scas
mov
stos
pop
popa
aam
mov
mov
movsb
sub
fld
xor
push
ret
arpl
mov
mov
push
lret
add
dec
jg
pop
cmc
cmpsb
addr16
push
sarb
push
mov
cmp
fildll
xor
jle
dec
and
xor
mov
imul
idiv
das
bound
cmp
adc
xor
lret
mov
mov
inc
sub
cmpsb
push
or
pushf
popa
pop
nopl
mov
mov
cltd
xor
sub
popa
stos
cli
xchg
dec
out
mov
scas
xor
or
cmp
push
ds
insl
sub
mov
or
leave
fisubl
dec
mov
addr16
adc
xor
imul
js
push
imul
cmp
pop
imul
stos
popa
scas
hlt
imul
pop
inc
mov
inc
fwait
ret
imul
push
mov
std
out
xchg
add
test
sub
jl
inc
mov
and
xchg
dec
mov
mov
das
daa
push
and
add
pop
add
push
and
cmpsl
aad
dec
aad
add
mov
add
lds
shrb
sub
dec
lock
lahf
adc
addr16
sbb
jnp
or
sbbl
xor
add
mov
imul
ret
add
cmpsl
testb
ja
jno
mov
cmp
inc
and
jl
mov
adc
cltd
xor
cmp
insl
sahf
mov
stos
les
xchg
daa
out
push
out
jne
popa
xorl
push
mov
pop
loopne
dec
shrb
int
jo
insl
inc
movb
je
bound
orb
repnz
bound
pop
cltd
lea
xor
mov
pop
xchg
cmpsl
pop
jo
jae
es
xchg
mov
xchg
mov
push
aam
add
push
ror
push
iret
add
or
xor
roll
sti
and
loopne
outsl
mov
xor
movsb
mov
aad
cmpsb
cmp
divb
xchg
call
sub
xchg
xor
push
xor
pop
hlt
fildl
xchg
repnz
jns
adc
jbe
xor
xor
call
sti
sbb
scas
cmp
push
xchg
in
push
fisubs
lahf
daa
mov
loopne,pt
add
ret
sti
arpl
inc
mov
inc
pop
push
mov
arpl
inc
xchg
pop
adc
inc
int
daa
in
pop
xchg
xchg
repnz
xlat
js
into
mov
jge
pop
call
into
xchg
fdecstp
sub
in
xchg
dec
loopne
test
fiadds
lods
adc
clc
mov
push
lcall
inc
xchg
rorl
pusha
cmp
inc
xor
mov
mov
sub
shll
fs
in
cmp
and
cmpsl
lahf
dec
pop
enter
push
mov
or
es
clc
xchg
lcall
popa
adc
jge
in
or
sub
or
mov
jnp
icebp
mov
pop
int
xor
jmp
fwait
xchg
je
cld
pop
jmp
sub
mov
repz
fdivrl
or
loope
mov
into
rcl
stos
ja
push
inc
push
std
sbb
dec
push
xor
cld
mov
jb
sub
stc
pop
jg
jle
jl
xchg
push
stc
push
cmp
mov
xchg
sbb
pop
test
mov
inc
cmp
or
out
addr16
lcall
push
cmp
enter
pusha
rcr
inc
push
sahf
jg
fldt
sub
addl
sbb
xchg
cmp
pusha
das
scas
sarb
or
dec
mov
xlat
cld
mov
sbb
adcl
sub
mov
scas
jns
leave
std
inc
xchg
roll
fdivs
cld
adc
cltd
fs
les
mov
pop
jl
js
scas
fdivr
in
daa
jp
into
push
and
xchg
mov
push
aad
mov
xor
jb
ror
imul
fsubs
inc
test
lods
outsb
aaa
cld
xlat
popa
sub
repz
rcr
fbstp
testl
mov
add
outsl
in
stc
ret
mov
push
pop
dec
es
or
push
outsl
add
jnp
aaa
aad
sbb
mov
int
cmc
notl
cmpsl
pop
cli
xchg
jge
in
push
pusha
pop
std
bound
mov
mov
test
hlt
jne
inc
les
jmp
js
loope
and
idiv
loope
xor
movsl
push
fst
xlat
lods
ret
dec
push
mov
imul
stos
sahf
mov
in
daa
or
pop
inc
or
loop
xchg
dec
and
enter
xlat
icebp
lret
inc
mov
or
push
enter
das
xor
mov
fstl
sub
or
jno
into
pop
push
sub
leave
mov
andl
sub
or
sbb
mov
cld
pop
xor
mov
stos
scas
jo
repz
lods
sub
ljmp
mov
popf
orl
adc
sti
fistpll
sbb
int3
xchg
lret
es
jo
inc
ja
shlb
cmpsb
pop
fildl
js
inc
shll
dec
movsb
sub
fistps
pop
clc
sbb
and
push
dec
test
mov
pushf
cmc
cmp
push
push
xor
and
arpl
mov
lds
imul
test
mov
sub
mov
ret
insb
mov
out
mov
jo
mov
cmp
mov
inc
cltd
fwait
mov
mov
out
jle
int
frstor
mov
cmp
ret
dec
popa
adc
sub
mov
rolb
jmp
out
mov
pop
or
loop
testb
add
pop
rcl
mov
mov
cmp
or
dec
repnz
les
xlat
pusha
ret
add
inc
ret
push
fst
dec
mov
xchg
inc
jae
pushl
jecxz
out
les
mov
mov
imul
iret
push
popa
insl
sub
push
cmpsb
imull
shlb
sbb
mov
push
dec
imul
icebp
cmc
ret
test
mov
push
mov
fiadds
out
xchg
addl
ret
xchg
lcall
sub
shrl
insb
sub
inc
sbb
je
mov
mov
adc
xor
ffree
cwtl
mov
pop
pop
mov
push
push
lods
xchg
jg
scas
cmp
insb
mov
jle
mov
mov
idivl
push
mov
sub
repnz
mov
sub
test
mov
inc
cmp
fnsave
and
sub
sbb
aad
push
pop
jno
add
out
sbb
mov
mov
mov
movsl
test
mov
pusha
adc
or
sahf
fidivs
les
inc
xchg
fadd
push
xchg
push
das
adc
in
lock
movsb
push
mov
ret
outsl
pop
cmp
dec
sub
test
xlat
stos
setl
mov
adc
xchg
dec
xchg
fwait
xlat
outsb
pushl
push
xor
sarb
enter
sub
or
mov
pop
mov
dec
jge
movsb
lds
in
sbb
mov
sahf
adc
out
push
mov
mov
dec
or
out
aas
mov
sbb
push
mov
maxps
in
fs
dec
sbb
sqrtps
fs
push
enter
lahf
in
fldenv
daa
aaa
fcomps
mov
push
xlat
mov
xchg
sub
sarb
mov
dec
lods
gs
mov
mov
test
mov
lods
sti
lods
les
mov
in
and
hlt
ds
pop
jmp
push
pop
enter
mov
mov
leave
dec
repz
cmpsl
mov
add
dec
lds
stos
lods
pop
inc
sar
scas
xchg
movsb
inc
or
xchg
andb
push
dec
iret
pop
push
rcr
or
jecxz,pt
test
push
sub
clc
mov
fs
enter
jl
ljmp
push
outsb
jp
ret
pop
das
sarb
shr
mov
sbb
sti
dec
icebp
call
ret
xchg
fidivrl
mov
add
lahf
dec
orl
and
testb
das
ret
xchg
jl
mov
and
pusha
pop
inc
mov
mov
and
enter
adc
dec
fildl
or
fbld
out
add
fisubrs
xchg
int
call
fdivl
jp
xchg
cmp
mov
mov
jbe
mov
fisttpl
jle
add
xchg
mov
mov
xor
mov
mov
and
xor
xchg
ret
or
nop
aas
lods
mov
or
and
mov
mov
pop
pop
and
lcall
dec
xchg
inc
outsb
and
dec
and
cld
jg
sbb
pushf
shrl
hlt
sahf
fldenv
mov
pop
or
pop
es
inc
jmp
ja
insl
sbb
lea
lods
xlat
push
pop
mov
xchg
hlt
push
hlt
aad
mov
in
fld
pop
xchg
aaa
jno
xchg
xchg
mov
pop
nopl
pop
mov
jae
cltd
push
js
pushf
imul
leave
aad
in
dec
push
popa
test
cwtl
mov
shl
mov
mov
int3
inc
jne
xchg
jl
out
push
xor
mov
test
mov
and
mov
les
pop
xchg
sbb
mov
dec
dec
mov
test
stc
xchg
push
test
lret
fnsave
sub
push
dec
nop
push
call
out
jo
lcall
pusha
mov
adc
and
cmp
mov
lock
xchg
sarb
and
out
cs
pop
mov
mov
pop
mov
adc
sub
lods
cmpsl
fidivrl
shrb
mov
jg
mov
enter
lea
cmp
xchg
dec
and
ret
les
das
sbb
iret
cmpsb
test
dec
and
sub
ret
test
mov
pop
add
push
mov
in
adc
or
adc
jmp
adcb
add
mov
mov
fistpll
dec
pop
xchg
fucomi
mov
dec
shr
pusha
xchg
dec
xor
into
adc
add
dec
movsb
stos
mov
cmp
lds
pop
scas
dec
outsb
push
outsl
ret
and
mov
cmp
std
or
pop
test
mov
push
sub
inc
fdivr
div
mov
add
push
push
add
in
movsl
ktestb
icebp
push
rorl
cmp
dec
adc
sbb
or
mov
invd
sbb
enter
cmp
repz
jl
sti
ret
pop
cs
divb
movl
sbb
push
adc
aam
xchg
in
inc
mov
and
dec
xchg
xchg
out
and
xchg
cmp
add
fistl
loopne
lret
dec
push
mov
mov
cltd
mov
sub
fnstsw
sub
sbb
insb
xchg
inc
movsb
xchg
mov
add
ja
aaa
lcall
sbb
xlat
outsb
inc
pop
addl
and
xor
xrelease
mov
push
scas
mov
mov
mov
ja
fwait
mov
or
out
outsl
inc
mov
movb
adc
mov
and
loope
cmp
movsb
mov
in
hlt
sub
xor
test
adc
pushf
push
ret
mov
fidivl
lock
inc
mov
nop
stos
and
cli
xchg
shll
lds
aam
cmp
loopne
jmp
fcmovu
in
ljmp
rcrb
dec
clc
xor
inc
stos
mov
les
outsb
add
xor
xor
jecxz
inc
subl
in
in
mov
pop
clc
stos
stos
pop
jmp
scas
add
and
test
jne
std
mov
je
das
leave
xchg
fidivs
inc
mov
aad
sarb
decb
or
mov
shl
aas
fidivl
lods
sbb
pop
add
scas
dec
and
les
pop
fdivrs
adc
mov
pop
mov
repz
mov
repnz
scas
push
mov
aaa
out
mov
xchg
inc
push
cli
xchg
inc
sbb
push
data16
iret
iret
sbbl
mov
cltd
jp
mov
rol
pop
xchg
xchg
xchg
rolb
xor
lods
push
push
xchg
loop
fwait
pusha
adc
fisttps
cmpsb
mov
push
sub
outsb
into
test
xlat
sti
in
mov
inc
imul
mov
insb
das
cmpsb
dec
data16
xor
xor
dec
dec
mov
rcr
mov
divl
jb
insl
jnp
sbb
or
jg
cmp
or
imul
jp
scas
ret
mov
stc
jae
notl
cmp
stc
or
jecxz
jae
add
js
mov
push
das
pop
add
daa
inc
cli
jbe
faddl
daa
mov
sbbb
xchg
inc
testb
rolb
es
bound
movsl
jg
jno
movsb
lock
jo
inc
mov
dec
push
int3
les
and
push
int3
xor
jge
or
ja
fs
jmp
mov
mov
mov
fwait
jl
mov
nop
imul
dec
push
orb
jae
add
sub
lods
enter
cmpsb
idivb
mov
test
imul
aas
add
cmp
lds
repnz
popa
cli
lea
pushf
int3
hlt
scas
push
inc
lea
ja
xchg
adc
loope
mov
test
jecxz
pop
iret
sbb
lds
cmp
stos
repnz
sbbb
aaa
and
stos
mov
inc
sub
pop
in
adc
mov
bound
push
adc
pop
pop
adc
adc
filds
mov
iret
mov
pop
push
mov
sub
seta
xor
jo
addr16
hlt
dec
inc
fs
decb
mov
cli
mov
fidivrs
in
cmp
or
stos
jmp
inc
cmp
cwtl
sbb
adcl
fdivr
loopne
mov
lret
xor
popf
iret
push
cli
nop
mov
aad
push
enter
and
js
cmpsb
dec
mov
fmul
das
cmpsb
ret
jle
mov
mov
adc
mov
mov
cltd
shl
sbb
nop
mov
mov
fldt
outsl
and
mov
xchg
pop
dec
cli
inc
pop
xchg
test
jp
les
popl
lcall
cmpsl
ficompl
int3
out
pushf
sub
inc
adc
push
mov
sub
dec
lock
mov
inc
and
or
dec
lret
pop
xchg
dec
pop
mov
sub
into
mov
inc
lods
sbb
sahf
je
jne
mov
lea
and
das
pop
inc
dec
dec
imul
dec
mov
xchg
mov
lock
andb
inc
sti
mov
sbb
inc
nop
push
lods
sub
push
rcrb
iret
adc
cmpsb
les
cs
int3
and
pusha
repnz
xor
xor
fsts
mov
dec
cmp
push
xchg
cld
xchg
int
mov
inc
jno
mov
mov
nop
movsb
and
push
aas
testb
push
fbld
scas
xchg
push
clc
sbb
push
ret
mov
mov
and
incb
adc
dec
push
adc
outsl
scas
mov
cmp
repz
ljmp
push
lahf
int
loop
aaa
hlt
out
mov
and
sar
stos
xchg
sbb
pop
leave
mov
aaa
aaa
test
mov
jne
xchg
mov
cltd
faddl
imul
js
stos
shrl
mov
test
sahf
js
das
mov
cmp
test
mov
push
and
imul
daa
cmp
movsl
ret
sbb
cmp
insl
mov
ja
inc
dec
xchg
sbb
loopne
mov
aad
or
push
mov
pop
mul
jg
dec
sub
insb
or
add
xorb
ljmp
cmp
fmull
cltd
mov
xchg
test
sub
repz
jnp
inc
push
add
jns
fistpll
mov
cs
mov
movsb
shrb
div
push
jg
mov
or
mov
rcrb
test
lds
and
dec
mov
mov
andb
adc
cmp
dec
cmp
pop
nop
das
dec
insl
mov
jg
dec
xor
movq
push
cmc
jge
jmp
cmovs
inc
mov
mov
movsb
aad
lods
push
daa
push
pop
into
or
xor
lods
cmp
xchg
scas
dec
in
rolb
mov
jb
cli
pushl
movsb
xor
mov
adc
add
stos
and
push
sub
and
ret
and
xchg
arpl
dec
js
add
test
jmp
aaa
ret
das
sub
push
and
push
dec
xchg
mov
inc
jns
fs
add
sbb
mov
imul
mov
and
test
pop
hlt
notl
pushl
add
jl
enter
lahf
pop
xor
aas
inc
gs
sarb
mov
mov
xchg
mov
cmp
mov
xor
or
bound
mov
test
and
mov
push
shlb
mov
inc
push
popf
ds
popa
lds
pop
dec
push
xchg
repz
mov
push
out
jmp
inc
xchg
fwait
lods
das
sbb
loope
jb
push
or
inc
popf
js
xor
or
lcall
mov
das
xor
xor
fdivs
mov
push
fwait
jge
sbb
incl
lods
mov
sub
pop
add
xor
xor
jmp
cmp
movsb
shrl
ljmp
cmp
add
cltd
call
gs
pop
pop
stos
scas
adc
std
pushf
stc
mov
xor
sbb
jmp
aad
mov
cltd
in
ja
sub
push
lahf
xchg
daa
lahf
call
xchg
push
push
mov
outsl
mov
jno
idiv
sarl
xchg
mov
pop
jne
lahf
mov
filds
jl
stos
subl
jno
xorl
test
push
mov
sti
and
mov
jge
lods
outsb
sub
and
mov
repnz
cli
jae
push
sub
ja
mov
jle
repz
stos
mov
sbbb
sub
fcomps
jnp
inc
xchg
cmp
test
rcr
aas
sub
mov
sub
fcompl
cmp
jbe
aam
push
shlb
sbbl
add
aaa
mov
imull
fcos
mov
or
fwait
test
dec
xorl
fstpl
fwait
lcall
mov
sbb
jecxz
in
rcl
stos
mov
stc
mov
lods
push
push
scas
outsl
sarl
push
movsl
pop
inc
or
cmp
outsl
mov
dec
sbb
insb
push
js
int3
test
and
sbb
imul
clc
fwait
push
mov
mov
movsb
scas
inc
andb
xchg
mov
sub
daa
test
sbb
xchg
dec
popa
insl
movsl
xchg
das
pop
or
pop
imull
cmpl
pop
ja
mov
imul
pusha
xchg
sub
xchg
lret
je
sahf
mov
es
pop
inc
and
icebp
ds
std
mov
out
popf
cmp
lea
xchg
push
xchg
pop
popf
xchg
add
mov
inc
int3
cmp
insl
or
jp
lret
add
push
nop
shll
hlt
arpl
pop
sbb
imul
mov
lods
ret
filds
sub
pop
scas
aaa
mov
out
mov
aas
cmp
sbb
push
fstp
mov
mov
es
lcall
sti
icebp
adc
out
insl
test
test
ja
push
out
mov
stos
pop
jp
jp
divb
mov
cmpl
imul
scas
scas
dec
in
xor
xorb
mov
inc
ffreep
mov
jmp
and
ss
push
fcmovnbe
dec
insb
int
mov
in
movsl
jb
bound
jb
jmp
xor
sbb
inc
bound
pop
sbb
ljmp
mov
loope
out
adc
adc
in
sbb
inc
into
stos
jp
lret
mov
es
out
dec
mov
in
cs
mov
lahf
sti
jne
push
test
enter
scas
int3
mov
stc
orl
sub
push
dec
es
dec
mov
mov
or
scas
dec
inc
mov
addr16
jg
cmp
je
sub
jbe
leave
aam
addl
daa
jmp
dec
repz
jnp
dec
cld
mov
jmp
xchg
nop
inc
pusha
and
and
jb
jp
mov
add
cltd
test
xor
subb
fs
dec
jle
sbb
pop
jb
dec
dec
ljmp
dec
cmp
lahf
lods
adc
cs
in
sub
test
mov
sbb
out
mov
jae
mov
lods
pusha
int
outsb
dec
bound
stos
gs
dec
fs
out
test
or
push
dec
in
in
rcrb
mov
push
mov
push
daa
jl
test
xchg
imul
roll
sbb
test
ljmp
mov
sti
mov
xor
into
jnp
cmp
sbb
jo
mov
add
sub
rcll
icebp
mov
lock
rcr
rcrl
data16
fdiv
int3
sub
cmp
loope
dec
jno
mov
subl
into
sbb
cmpsb
test
sub
adc
xor
rclb
cmp
repz
inc
lret
lods
and
mov
lret
leave
in
add
imul
movsl
test
test
cmc
mov
mov
sub
lods
sarb
imul
out
and
ret
add
lcall
dec
jb
mov
sbb
mov
faddl
jnp
jge
fst
scas
or
or
cwtl
inc
fwait
jg
jmp
fdivr
inc
push
into
lahf
xchg
xchg
or
mov
outsl
dec
mov
inc
lods
cwtl
fcoms
add
inc
xlat
or
movq
xchg
mov
jecxz
dec
mov
adc
test
sub
loopne
pop
lcall
test
jp
mov
in
repz
mov
jg
fstpl
aad
lods
hlt
scas
inc
scas
push
mov
sub
into
push
call
sbb
cltd
subb
xchg
xchg
pushf
pusha
sub
pushf
sbb
dec
add
mov
cmp
js
outsl
mov
adc
xor
cmp
mov
je
mov
sti
pop
or
lret
rorb
xchg
shlb
mov
jb
popf
hlt
scas
aam
sub
in
arpl
jmp
pusha
sbb
xchg
negb
push
mov
mov
mov
mov
jmp
data16
inc
sub
sub
and
inc
mov
fs
and
add
mov
cmp
iret
jge
btr
adc
cmp
sub
dec
cmp
pop
inc
push
idivb
bound
add
mov
mov
stos
cmp
mov
mov
aad
and
out
adc
xchg
movsl
and
lods
mov
cmpsb
mov
inc
and
hlt
or
fs
add
or
movsb
rcrl
ret
mov
insl
fsts
shrb
xor
cmp
pushf
cli
in
ljmp
push
test
sub
push
sbb
int
and
jl
mov
adc
lea
cmp
mov
pop
int3
mov
xor
mull
push
je
cs
mov
scas
dec
mov
xchg
cs
arpl
loopne
mov
mov
cmpsl
xor
xchg
fnstenv
ja
movsl
mov
xchg
fstpl
idivl
sub
cld
cmp
rorl
xor
pop
loop
jmp
pusha
jnp
fistpl
cmpsl
xchg
xor
je
stos
and
jb
movsl
push
add
xchg
cmp
int
nop
mov
cwtl
dec
mov
mov
sub
mov
inc
out
pop
mov
insl
add
fcom
into
dec
mov
pop
mov
pop
mov
adc
dec
hlt
out
xor
shrb
or
mov
pop
les
or
aad
in
popf
xchg
ds
fildll
lret
sbb
adc
pop
nop
loope
add
pop
jo
dec
pop
xor
mov
clc
mov
cmp
xor
dec
xchg
cs
xchg
jae
repz
fs
xchg
or
mov
adc
les
rcl
xchg
loopne
orb
gs
inc
dec
mov
lret
or
sarb
leave
std
divl
push
cltd
pmullw
jg
pop
jmp
out
jno
repnz
mov
pushf
mov
out
jne
loop
fdiv
stos
push
xchg
push
mov
mov
fidivrl
mov
test
inc
imul
mov
and
fisubs
dec
xor
insl
pop
cmp
dec
mov
mov
and
out
add
das
add
add
leave
xchg
mov
fnstcw
jp
xchg
xchg
jb
jg
js
add
fsubl
or
shl
push
leave
adcl
mov
outsb
mov
dec
hlt
mov
test
stos
jle
and
add
mov
fcmovnu
jecxz
cmp
addr16
addb
dec
mov
mov
sahf
push
xor
add
add
in
cltd
mov
movsb
xor
in
xchg
test
mov
sub
jl
add
mov
addb
or
in
outsl
xlat
pop
mov
jg
push
mov
mov
xlat
mov
mov
stos
mov
mov
push
dec
insl
xchg
sub
dec
mov
jbe
inc
push
imul
idiv
insl
int3
pop
mov
mov
stos
shl
push
dec
dec
xor
aad
cmp
dec
loop
ja
push
outsl
adc
pop
xadd
out
xor
rolb
mov
cld
add
fwait
push
jecxz
and
in
int3
add
dec
xchg
stos
mov
xchg
mov
inc
jo
scas
imul
lcall
inc
mov
jbe
stos
shlb
scas
test
mov
rcr
mov
cli
iret
cld
fsubrl
pop
std
je
push
aam
xchg
push
stos
jge
call
std
mov
sbb
push
xor
add
pop
mov
out
ja
mov
dec
scas
ljmp
nop
es
sbb
push
pop
jnp
cs
imul
inc
push
into
xchg
cld
ljmp
ret
lds
adc
mov
mov
mov
inc
out
mulb
int3
mov
enter
ja
sub
mov
and
addl
xor
jecxz
push
repz
iret
jnp
xchg
mov
pop
rcll
test
int
mov
lods
push
mov
neg
cmp
scas
dec
add
jbe
clc
add
dec
add
stos
fists
ret
andl
mov
mov
sbb
push
test
push
std
in
pop
stos
aaa
mov
pop
mov
rorb
sub
popa
daa
dec
lock
inc
das
and
xor
xor
es
inc
fdivs
or
cwtl
pop
and
mov
lcall
imulb
iret
rclb
adcl
push
pop
cli
out
mov
jb
iret
sbb
inc
lds
cmpsl
fwait
mov
pop
mov
or
stos
mov
mov
mov
das
dec
mov
inc
stc
cmp
mov
test
insl
or
lcall
lds
aaa
lahf
into
and
sahf
mov
cmpsl
js
push
imulb
add
mov
dec
xor
fsubrs
test
push
ja
push
cmp
dec
mov
dec
ret
lods
imul
jge
movsb
jl
cmpsl
imul
scas
shrl
jne
xchg
mov
mov
es
lahf
mov
scas
inc
and
faddl
jl
mov
adc
lret
jp
mov
aas
cmpsb
xchg
sti
jmp
aam
lret
test
adc
pop
and
dec
push
mov
or
scas
lds
push
stos
mov
cmpsl
filds
mov
es
aas
mov
sbb
scas
jo
not
scas
shll
sub
xor
shll
mov
jl
movsb
ja
cmpsb
hlt
pop
ljmp
sbb
mov
push
out
xor
dec
sti
mov
clc
pop
mov
mov
xchg
mov
cmpsl
dec
imulb
sti
pusha
mov
mov
lret
ret
xchg
iret
xchg
mov
gs
lods
jecxz
mov
push
and
jno
xor
add
outsb
xor
push
test
xchg
lock
nop
pop
mov
addl
mov
mov
jns
jno
in
mov
jb
push
fimull
ret
movsb
jle
icebp
shrl
jp
cmpsl
mov
cmp
or
dec
sbb
bound
xorb
inc
ds
mov
xchg
mov
les
cmp
xchg
nop
bound
or
dec
add
mov
mov
outsb
das
mov
jo
adc
test
outsb
inc
xchg
sbb
or
mov
repz
sub
sbb
arpl
aam
mov
sub
jnp
mov
imul
in
cmp
dec
sti
mov
or
lods
pushf
dec
sar
ss
pop
popa
dec
movsb
jb
sbb
int3
inc
testl
mov
sub
fstpl
fwait
shrl
xchg
movb
push
xor
sub
mov
mov
and
and
add
test
cmpsb
rcl
scas
or
test
subb
cld
div
add
stc
sbb
outsl
outsl
pop
je
test
add
dec
testb
xchg
jae
cltd
loop
xor
lret
dec
jl
cmp
and
fdivr
push
jns
dec
adc
mov
fiadds
test
movsl
xchg
mov
loop
out
cmc
adc
fsubrs
sbb
mov
in
mov
ret
ficoms
adc
mov
hlt
jns
xlat
aad
add
push
dec
cmc
ret
out
sub
in
int3
xor
lea
cli
fwait
push
movsb
xchg
mov
mov
mov
xor
inc
mov
nop
out
jmp
stos
mov
lea
or
in
aaa
repz
dec
jg
xchg
inc
push
cvtps2pd
xchg
je
xchg
roll
add
mov
jmp
dec
mov
pusha
xor
pop
test
sbb
xchg
mov
testl
mov
jg
pop
mov
mov
jl
btc
je
pop
rdtsc
je
loop
push
call
mov
lahf
lahf
xchg
or
pop
push
or
lret
pop
int3
dec
add
pop
sub
lock
inc
fstps
pop
sar
mov
xchg
adcl
dec
pop
cli
js
jae
jo
ds
ds
pusha
sti
fwait
xchg
dec
fwait
sub
dec
dec
sub
pop
xchg
icebp
cmp
pop
iret
lods
scas
outsb
lock
push
dec
mov
mov
lds
adc
jle
loope
push
push
sbbl
cwtl
xchg
sahf
loop
jno
dec
lods
adc
jne
lock
mov
xchg
stos
xor
mov
es
mov
lret
out
cmp
add
addr16
and
mov
out
inc
sbb
mov
dec
int
lock
cmpsl
outsb
mov
imul
mov
fiadds
cli
jo
insb
mov
fmulp
bound
jle
pop
mov
loopne
xlat
lea
fwait
js
movsb
loopne
pop
xor
xor
push
add
add
cltd
pop
pop
sub
jl
adc
std
fildl
enter
mov
fs
push
das
imul
shrl
or
rep
xor
xchg
sub
adc
pushf
xchg
dec
in
leave
sub
xchg
sub
sbb
fsubrl
and
push
inc
jl
popa
ljmp
sbb
lahf
cmovg
stos
fcompl
pop
fs
imulb
in
aaa
out
rolb
into
lds
daa
mov
mov
mov
sti
int
sahf
push
pop
push
mov
sub
xchg
insb
push
shll
fs
xchg
ds
fistl
mov
lret
in
lods
daa
sub
leave
minps
test
daa
mov
in
stc
lret
int3
outsb
cmp
sar
pusha
fmul
shrb
lret
mov
int
push
cmpsb
outsl
xorl
sbb
jbe
mov
in
lahf
sahf
shl
ss
pextrw
xor
mov
sarl
loop
ja
jbe
cmpsb
inc
test
inc
adc
fwait
mov
dec
xchg
xchg
aam
or
or
xorl
xchg
cwtl
inc
roll
push
add
sub
sahf
and
jmp
daa
test
clc
mov
xchg
in
pop
pop
inc
imul
mov
stc
adc
incl
shr
aaa
mov
jge
add
loopne
xlat
repnz
push
pop
add
in
dec
es
pop
das
lahf
xchg
outsb
les
aad
adc
fildl
aas
test
sti
dec
bnd
lcall
arpl
notl
pushf
adc
pop
jl
or
in
or
push
push
int3
jmp
ret
inc
cmp
addr16
loop
stc
out
inc
out
jg
aad
xchg
pop
ljmp
add
fldt
mov
popa
jge
sbb
mov
lock
sub
or
sub
mov
mov
jmp
mov
aad
ficompl
jmp
out
call
int3
sbb
lods
dec
jp
xor
fmull
inc
sub
xor
or
and
mov
adcb
iret
lods
or
stos
xchg
sbb
insb
rclb
jmp
lcall
xchg
lods
mov
daa
data16
pop
pop
and
movsl
add
mov
mov
push
jmp
pop
pop
shll
divb
in
push
pop
xchg
lret
call
lock
xor
test
lods
subl
cmc
jno
movsl
leave
orl
into
cmpsb
outsb
or
movsl
sbb
fsubrl
stos
test
fiaddl
xchg
and
aam
in
les
lret
leave
jmp
lahf
repnz
int
sub
dec
dec
mov
iret
push
lods
or
lcall
dec
xor
ret
and
mov
cmp
add
push
xorb
pop
jo
sbb
div
fldenv
cld
data16
mov
stos
hlt
rcrl
mov
mov
iret
sahf
pop
into
daa
add
and
mov
mov
cld
out
mov
mov
mov
jge
mov
pop
in
or
jmp
js
or
cltd
mov
movsb
xor
mov
outsb
insb
xchg
mov
jbe
mov
inc
pop
fwait
mov
in
lret
pushf
mov
mov
hlt
cmp
ficoms
mov
jae
leave
lods
cmp
stc
lock
inc
xor
mov
mov
cmpsl
cld
inc
pop
cmp
and
imul
je
pop
dec
pushl
add
jg
sbb
dec
aas
sub
std
sahf
mov
stos
sbb
repz
mov
jp
enter
je
mull
xchg
push
push
add
mov
imul
jp
popl
xor
sub
mov
jbe
push
shl
je
mov
lock
jp
stc
jae
or
shrb
lods
pushf
std
daa
pop
cmp
push
sub
and
jle
pusha
cltd
mov
pusha
test
xchg
xorl
ljmp
call
mov
pushf
mov
and
dec
test
xchg
push
adc
sbb
repz
mov
or
popa
into
jle
iret
mov
enter
mov
pop
mov
xor
ret
xchg
add
pop
insb
cld
and
xchg
outsb
mov
test
cmpsl
adc
push
outsb
push
sub
mov
xchg
sbb
dec
mov
outsl
dec
mov
mov
cmp
lcall
cmc
repz
or
pop
xchg
and
loop
into
fst
shrl
cmp
mov
pop
xlat
push
aas
mov
pop
xor
fcmovu
sub
int3
test
mov
xchg
xor
xchg
addr16
push
cwtl
shrb
lcall
push
inc
hlt
arpl
xor
mov
and
mov
or
filds
push
sarl
ljmp
lock
lea
aad
leave
xor
inc
inc
scas
push
mov
rep
cmpsb
fnstcw
or
pusha
fidivrs
orb
or
mov
les
mov
mov
push
sub
mov
pop
lea
dec
fldt
adc
stc
mov
stos
int
loopne
pop
mov
clc
testl
cs
lock
push
sub
push
xchg
enter
mov
adc
movsl
mov
mov
xchg
dec
add
fucom
cltd
mov
cs
pop
jg
add
das
hlt
outsl
fs
push
pop
and
cmp
push
popa
dec
lock
inc
mov
lods
pop
mov
xchg
frstor
scas
repz
push
push
cmp
aaa
aaa
fsubl
stos
mov
dec
and
pop
cmp
push
imul
lret
sbb
into
lahf
pop
pop
mov
pop
orl
rorb
shll
pop
test
lea
icebp
test
or
into
cmpsl
data16
in
dec
stos
pop
lds
notb
add
mov
mov
je
pusha
xor
mov
lahf
cltd
test
call
sub
mov
add
push
call
mov
sub
add
leave
lret
aad
xor
sbb
out
lods
fisttpl
pop
popa
testl
test
jmp
dec
xor
shlb
inc
push
xchg
adc
fcomip
push
inc
jb
std
pop
lds
push
ja
test
mov
leave
mov
daa
xchg
clc
scas
mov
pop
daa
lahf
lock
je
inc
lret
mov
gs
pop
xchg
movsb
xor
into
adc
lods
dec
loope
dec
mov
adc
jecxz
andl
push
xchg
icebp
xchg
inc
pop
sub
sbb
in
popa
push
mov
pop
push
cwtl
je
data16
mov
mov
int3
js
cmc
pop
mov
pop
inc
pop
fstps
int3
movsl
mov
lds
pop
arpl
rcpps
scas
xchg
or
pusha
jbe
scas
stos
sbb
shll
mov
pop
add
stos
je
push
inc
sti
pop
mov
jge
and
fisubrl
clc
in
test
or
mov
jge
mov
sbb
addr16
pop
mov
jbe
push
hlt
testl
popa
mov
outsb
in
repnz
aam
add
jge
pop
mov
adc
pop
shll
adc
mov
out
mov
cltd
and
and
xor
sub
xchg
sub
mov
mov
xor
xchg
out
pop
inc
dec
or
mov
push
mov
test
cmc
lods
push
dec
jne
dec
out
int
xor
cwtl
xchg
ret
adc
pop
outsb
stos
imul
ret
sub
mov
in
fwait
aam
test
dec
dec
test
into
sub
mov
sub
sub
adc
push
jle
pop
out
jnp
roll
dec
xor
push
push
dec
je
out
inc
imul
pop
shr
cli
push
jbe
loope
pop
insb
fidivrl
mov
adc
xchg
jge
jl
aaa
test
sub
xchg
xchg
rorl
mov
cmp
lods
or
jae
xor
js
enter
mov
mov
fnstcw
cmp
arpl
xorb
shrb
xor
in
enter
sbb
popa
out
mov
mov
shl
sub
dec
sarb
js
stc
sub
popa
xor
jne
xor
mov
inc
loop,pn
outsb
add
or
mov
int
mov
push
sbb
sar
outsl
mov
test
jno
popf
push
stos
stos
test
inc
jbe
hlt
fidivrs
xchg
jb
push
pushf
fstpt
mov
mov
cli
stos
sbb
pop
test
movb
xchg
rol
mov
rcrl
mov
iret
sbb
dec
loope
mov
mov
ljmp
mov
shlb
mov
andl
mov
fcoms
insl
inc
xchg
test
cwtl
notl
cmpsl
pop
inc
xor
imul
xchg
scas
fwait
mov
movsb
xchg
iret
jbe
pop
dec
cmp
or
cmpb
sub
or
add
push
imul
out
cmp
jmp
leave
fnstsw
out
pop
lds
mov
inc
sub
pop
mov
out
dec
sbb
mov
mull
popf
sub
inc
fwait
sbb
adc
inc
mov
cmp
pop
mov
sbb
stos
call
dec
jb
push
sbb
gs
mov
or
fists
mov
and
pop
push
or
adc
cltd
push
push
cld
jbe
mov
cmp
xor
mov
adc
cmp
cmp
jmp
and
add
out
daa
stos
das
sub
mov
or
xchg
mov
mov
cmp
sbb
out
xor
imul
mov
aam
push
lods
shl
sbbb
clc
pop
fwait
sarl
pop
fs
sbb
leave
test
xor
insl
mov
clc
loop
stc
std
dec
nop
outsl
mov
mov
jne
in
mov
jmp
adcl
int3
dec
push
popl
jb
ss
icebp
adc
jp
sub
jge
pop
sti
mov
stos
mov
adc
jmp
mov
pop
mov
or
testl
inc
xchg
mov
lds
sub
repnz
in
lahf
in
inc
push
fiaddl
sbb
fnstsw
negl
loop
sbb
jmp
testl
sub
push
movsl
sbb
fmull
fnstenv
ror
adc
aam
cld
mov
in
xchg
and
ljmp
aam
addr16
mov
test
int3
testl
add
jle
adc
dec
mov
rolb
push
sbb
xchg
outsl
gs
push
dec
cmc
push
adc
mov
daa
mov
sub
loop
mov
ljmp
mov
cmp
call
dec
pop
bound
xor
das
mov
clc
andb
mov
pop
iret
or
mov
mov
sbb
int
jmp
rclb
xchg
out
icebp
push
xor
pop
cmpsl
lods
push
fsubp
repnz
dec
mov
xchg
push
inc
jbe
in
pop
and
aas
cmp
fs
fistps
insb
popa
adc
arpl
sbb
loopne
jb
pop
aad
push
mov
xchg
gs
push
jl
fbstp
sub
lahf
inc
rcrl
fsubrs
adc
mov
sub
dec
out
push
out
mov
neg
adc
mov
adc
lock
andb
addr16
cltd
ret
test
xchg
divb
dec
rcrb
dec
xorb
aam
ljmp
aad
sarl
sarb
cmp
aaa
pushf
imul
in
sub
pop
insl
xor
push
arpl
xor
sub
fst
es
imul
sub
into
bound
loopne
add
lods
cli
sub
mov
les
inc
jns
pop
mov
clc
mov
jo
dec
shrl
and
rorl
inc
icebp
and
mov
clc
nop
mov
mov
jo
shrb
mov
popa
push
sbb
test
push
jne
fs
mov
push
jne
das
ljmp
sub
roll
mov
sub
fmulp
xor
xlat
scas
clc
lcall
inc
pop
movsb
mov
push
pop
iret
lcall
sbb
pushw
inc
gs
and
stos
jb
inc
ljmp
or
dec
mov
mov
sub
push
call
inc
sub
scas
xchg
loope
sahf
and
xlat
movhps
rcrb
jb
rorb
repz
xor
jno
pop
dec
jo
pop
fcoml
jb
dec
mov
mov
xchg
mov
inc
mov
pop
xor
push
fisttpl
jne
pop
jae
outsb
add
pop
jp
adc
mov
xchg
cld
jne
push
pop
out
xor
fsubr
cwtl
jge
inc
mov
cmp
mov
or
inc
cltd
cmp
push
inc
jg
and
popa
jo
andb
mov
or
fnsave
sbb
jno
fists
push
and
pusha
movsl
into
lcall
and
jmp
add
stc
in
loopne
popf
push
repnz
jecxz
and
test
xchg
pop
cmp
sub
mov
repz
dec
icebp
mov
les
sbb
push
ss
addl
outsl
flds
mov
mov
xor
fcmovb
adc
dec
test
dec
sbb
cwtl
sub
pusha
push
add
jbe
sbb
xor
das
mov
xor
arpl
push
addr16
xor
mov
dec
add
enter
mov
rol
out
mov
mov
pushf
std
dec
clc
lcall
imul
cmpsb
mov
push
jno
ss
push
xor
mull
adc
and
xor
mov
subl
xchg
fs
add
fnstenv
jne
adc
stc
pop
mov
sub
pop
add
mov
pop
fs
lahf
stos
popa
sub
fcoml
xlat
scas
stos
xor
fiaddl
or
push
xchg
fiaddl
xor
pop
push
sub
inc
icebp
mov
shll
push
imulb
test
mov
jns
jg
enter
xchg
enter
fcmove
mov
xchg
jne
mov
or
cmp
xor
out
pop
rol
dec
jb
in
ds
inc
into
enter
bound
nop
push
les
fadds
lock
test
jne
inc
sub
mov
imull
inc
sub
sbbb
sti
jae
bound
xor
jbe
mov
lahf
mov
sub
lds
out
push
sbb
xchg
push
aad
lahf
xchg
lret
mov
data16
filds
and
out
out
xchg
orl
inc
xchg
mov
lock
jo
ret
jbe
cld
jbe
cmpsb
inc
xchg
mov
mov
push
pause
adcb
jno
mov
adc
and
lds
int3
push
fidivl
sbb
mov
mov
jne
sub
in
cwtl
dec
cmpsb
sbbb
xor
fsubrl
adc
xlat
mov
sbb
inc
lcall
fiaddl
pop
or
mov
shrl
cli
dec
rolb
test
pop
mov
mov
ljmp
mov
outsb
inc
cwtl
sub
mov
shll
dec
stos
xor
subb
ljmp
jo
repz
cvtdq2ps
arpl
icebp
cltd
lcall
adc
outsb
mov
popl
out
pop
and
cltd
mov
stos
jne
push
jns
cmp
push
mov
outsb
daa
dec
sbb
cltd
gs
stos
dec
push
lahf
movsl
in
xor
add
sub
test
adc
mov
cmp
repz
rcrb
dec
lods
mov
inc
subl
mov
cmp
and
sahf
rorl
jnp
stos
mov
inc
imull
cwtl
sub
xor
gs
adc
inc
mov
sbb
test
nop
addr16
lcall
cmpl
or
ljmp
add
dec
jp,pn
push
hlt
lds
xor
mov
test
fsubr
inc
icebp
stos
cmc
test
add
sbb
sub
ds
int3
stos
push
inc
aad
pop
jecxz
mov
ss
fstpl
mov
mov
add
pop
addr16
fnsave
je
xchg
xchg
test
dec
or
sub
mov
scas
cli
mov
xchg
cmp
inc
xchg
call
push
cmp
fbld
dec
and
das
loopne
into
or
out
outsb
jb
inc
or
rcll
jns
and
dec
rcrb
jb
out
jl
adcl
jge
mov
lahf
movsl
daa
sbb
fsubr
jnp
mov
or
dec
fcomps
jbe
sbb
filds
and
out
ret
push
or
sahf
ficompl
push
ja
cwtl
nop
imul
cltd
fsubrs
sub
lods
pop
or
sub
and
pop
test
mov
jnp
sbb
jns
adc
jae
jns
shlb
not
jne
in
stos
or
cmpsl
mov
jb
fcom
popl
mov
xchg
addb
imul
in
mov
pop
xor
loopne
jno
or
xlat
ficomps
cmp
lods
nop
xlat
out
outsl
js
inc
mov
sub
push
push
dec
adc
inc
and
rcrl
xchg
fists
cmp
lods
sub
mov
sarl
int3
negb
add
xchg
loope
ljmp
fidivs
inc
ret
rcrl
out
daa
rcl
shll
xchg
ja
xor
mov
mov
mov
fisttps
inc
mov
mov
sbb
in
or
mov
dec
inc
lret
test
divl
push
aaa
dec
stc
mov
inc
loop
xor
daa
aas
sti
imul
push
sbb
or
adc
xchg
mov
push
fsubp
ret
dec
in
xor
fs
scas
xlat
aas
sahf
inc
pop
mov
push
dec
cmp
mov
aam
or
addr16
divl
aad
clc
cld
aas
shl
movsl
les
shrb
dec
sub
testb
aaa
inc
dec
mov
js
mov
and
gs
cmpsb
gs
mov
xchg
inc
ud1
inc
or
lods
mov
lahf
cmp
or
stos
fisttpl
mov
mov
xchg
ja
mov
sub
dec
mov
push
adc
jnp
loope
mov
or
into
shrb
ss
insl
fadd
add
lret
xchg
js
mov
fwait
mov
nop
xor
imul
pop
rcll
cmc
adc
xchg
test
xor
fcomi
jnp
jne
or
xchg
clc
push
mov
aas
push
ffree
inc
xor
xor
in
lock
sbb
and
popf
and
push
xchg
xlat
sti
dec
in
fimull
push
xorb
popa
push
enter
mov
in
fwait
dec
pop
stos
jmp
stos
and
lds
addr16
ret
cmpsl
repnz
in
sub
jae
xchg
mov
pop
xchg
or
test
mov
mov
mov
lods
and
dec
jl
lds
imull
mov
mov
lock
sbbl
outsb
imul
loopne
bound
inc
jns
mov
or
repz
jl
dec
in
in
mov
mov
inc
push
lea
lcall
fstl
imulb
add
sahf
stos
sbb
roll
jecxz
xor
lods
sbb
in
push
cltd
jno
fs
jb
pop
inc
test
sbb
cmp
pop
lods
js
orl
pushf
push
cmp
pop
lea
xor
push
fists
pop
shrb
dec
and
pop
jecxz
and
xor
inc
jg
std
sahf
stos
push
jns
and
mov
fisubs
push
outsl
aaa
inc
mov
shll
or
aam
mov
inc
pop
test
insb
push
cmpsb
mov
pop
pushf
or
jns
mov
mov
int
fisubs
pusha
inc
xchg
hlt
mov
push
push
outsl
in
fisubs
test
sbb
test
out
and
sbb
xchg
iret
sbb
jecxz
nop
adc
mov
scas
lods
adc
out
fidivrs
stos
movsl
fucomi
popf
fcmovbe
inc
mov
ret
int
mov
loope
sbb
ffree
mov
imul
cmpsl
lcall
frndint
mov
pop
shll
mov
jg
mov
dec
scas
lret
sbb
or
push
lretw
fisubl
push
mov
pop
dec
daa
or
sbb
inc
loopne
or
ljmp
or
lods
sbb
pushw
mov
push
shrl
js
stos
xchg
fsubl
loope
push
sbb
rolb
cmp
jg
adc
mov
aas
fsub
jb
and
jne
idivl
and
xchg
outsb
xchg
cltd
into
hlt
xchg
rorl
push
int
lods
xor
cltd
cmpsb
pushf
xchg
ljmp
bsf
seto
inc
xchg
fwait
pop
xchg
aad
pop
fidivs
jbe
mov
push
test
mov
aam
rcll
dec
mov
cld
outsl
sbb
cwtl
shrl
mov
cmpsl
jno
xchg
test
mov
xchg
sar
loop
adc
int
jbe
xchg
mov
xor
push
or
jle
xchg
and
sbb
xchg
cmc
push
jbe
jno
mov
sub
daa
jg
incb
jae
int3
out
mov
mov
clc
in
dec
daa
or
sub
jo
dec
mov
inc
cwtl
iret
int
movsl
es
test
hlt
mov
push
mov
inc
jp
test
pop
out
aad
adc
adc
mov
aad
mov
pop
les
xchg
fstpt
inc
sub
les
pop
out
ret
aam
xorl
jg
out
sub
repnz
bound
pop
out
out
imul
mov
stos
lret
cmp
sub
cvtps2pi
and
lds
jp
push
xlat
dec
ret
int
lcall
les
xchg
jo
cmp
xchg
inc
test
mov
sti
push
fsubl
flds
push
popf
callw
fildll
xor
rclb
addr16
mov
std
or
cli
pop
jmp
and
xor
leave
adc
cmpsb
jl
aas
jmp
inc
imul
mov
dec
call
dec
test
test
out
xchg
adc
call
sub
mov
movsl
pusha
add
dec
mov
jge
jno
xlat
sub
test
jns
xchg
pushf
mov
mov
push
cmp
adc
sub
mov
mov
cwtl
out
outsb
push
mov
gs
push
or
pop
or
sarl
stos
or
dec
fmull
adc
add
ljmp
repnz
cmp
push
fisubrs
cmp
idiv
outsl
push
xorb
pushf
jne
sbb
sahf
fbld
push
iret
loope
xchg
push
repz
and
push
pop
es
mov
mov
mov
pop
jae
jae
aad
jo
mov
daa
lods
gs
rcll
jnp
adc
ss
arpl
lret
int3
pop
sahf
sub
jno
int3
xchg
and
repz
movsb
rol
xor
pop
and
cmpsl
sbb
test
push
push
jnp
xchg
cli
pop
xchg
enter
or
aam
int
cld
and
mov
or
xlat
jl
push
lret
dec
xlat
pop
test
mov
je
mov
push
in
adc
pop
stc
mov
cmc
fs
lret
pop
outsb
subb
shrb
outsl
outsl
jmp
xchg
inc
roll
cmpb
loop
ds
fimuls
frstor
rcrl
xor
push
dec
dec
xlat
push
cmc
mov
test
out
mov
dec
sti
sbbb
or
xor
pusha
pop
cmp
cmp
dec
jb
lcall
shll
mov
push
xchg
imul
adcl
dec
pop
mov
ficoml
push
in
xor
cmp
dec
addb
lcall
insl
mov
out
xchg
les
mov
repnz
mov
lds
leave
neg
mov
sub
dec
pop
xchg
xchg
mov
int
xchg
stos
and
je
icebp
push
test
in
daa
dec
jecxz
fdivrs
push
jb
adc
pop
fs
in
push
push
sbb
xchg
lock
icebp
fistps
mov
or
lahf
pusha
test
mov
xchg
jne
subl
sub
out
xchg
mov
mov
into
lret
sub
mov
outsl
jmp
inc
pop
cmpsl
jae
daa
pop
xlat
sub
jg
stos
ret
mov
out
sbb
mov
out
xor
xor
leave
aad
pop
mov
in
sbb
mov
push
pop
push
scas
xchg
sbb
stc
fidivs
sahf
mov
jno
stos
dec
fsubr
sub
jg
xor
push
cmp
in
int3
dec
cli
mov
push
xlat
adcb
lods
subb
sub
pop
mov
xor
ja
sti
and
sbb
pop
xor
fcmovne
and
fnstsw
and
push
push
ret
std
jl
negb
sub
in
dec
mov
andl
popa
subl
pop
sub
mov
inc
insb
jns
jne
dec
int
lahf
mov
dec
into
mov
mov
or
or
jb
adc
jle
inc
or
in
lds
pop
out
in
pop
test
sbb
lods
fcompl
and
mov
les
dec
rcrl
adc
inc
mov
dec
loop
movsb
xchg
loop
fwait
in
daa
hlt
fadds
mov
push
pop
jge
jno
xchg
orb
pop
push
add
xchg
popf
mov
or
pop
sbb
inc
inc
adc
mov
mov
testl
mov
lods
push
mov
test
xchg
clc
fsts
mov
stos
push
inc
loope
test
or
lea
scas
fcmovnu
mov
sub
cmp
jnp
enter
repz
jg
insb
popa
mov
outsb
xchg
stos
sti
pop
push
adc
mov
jb
mov
add
shl
stc
shlb
sub
mov
cmp
cmpsl
mov
rcrb
sbb
mov
and
cmp
dec
inc
mov
lea
popa
inc
add
fucomip
push
sub
test
add
sub
mov
pop
xchg
jle
mov
call
fisubrl
idivb
shll
shrl
mov
fsubs
imul
cmp
lret
push
mov
pop
cmpsb
loop
lods
sarb
sbb
xchg
push
and
adc
adc
mov
mov
adc
jmp
xchg
das
inc
jbe
and
sub
test
push
mov
mov
push
mov
insl
push
lret
jb
ret
inc
fs
clc
rcl
dec
scas
into
xchg
cli
jge
push
cmc
sub
jg
sbb
stos
loopne
pop
movsb
notb
add
std
mov
dec
pop
xchg
pop
cmp
mov
and
pushf
jno
mov
rolb
int3
and
scas
add
test
movsl
dec
cmp
insl
push
lods
lods
stc
xor
sbb
dec
cmpsl
cwtl
inc
push
push
je
pop
sti
int3
cmp
or
mov
stos
scas
xor
shl
and
lret
pop
mov
mov
clc
mov
iret
sub
lock
inc
xchg
xor
pop
pop
leave
sub
lods
push
hlt
mov
lret
xor
pop
jl
test
xchg
mov
push
cmp
mov
fs
shr
xchg
sub
mov
mov
pop
and
iret
adc
mov
mov
pop
and
cli
ljmp
cmc
in
inc
or
pop
xchg
xchg
or
push
inc
lcall
lcall
cmp
and
inc
jo
mov
jmp
mov
jns
xor
int3
jno
dec
test
mov
dec
add
stos
enter
push
les
push
pop
out
mov
std
loop
das
aad
pop
test
and
mov
jno
xchg
movsb
or
adc
inc
jp
and
and
cmp
ljmp
fadd
adc
jb
xlat
ret
stos
jo
rclb
lcall
arpl
jg
insl
cmc
or
enter
pushf
dec
jmp
jle
aad
jge
call
jb
js
lods
ja
negl
inc
ret
xchg
test
jb
adc
vpcmov
aaa
or
sbb
inc
fldt
pop
or
movb
cwtl
movsb
mov
or
ja
lret
push
pop
push
aam
cmpsb
push
out
inc
test
fldenv
pop
cmpsl
lret
in
lret
dec
push
xlat
test
fwait
xchg
sbb
adc
ljmp
cmpsl
sbb
insb
bound
push
push
stos
daa
dec
loopne
ljmp
mov
push
push
xor
inc
into
shrl
xlat
or
addr16
pop
rolb
out
inc
dec
aas
pop
and
xchg
or
roll
jbe
cmp
lret
clc
jmp
push
bnd
add
out
ljmp
mov
pushf
jl
dec
inc
pop
adc
lods
and
jle
adc
sub
and
sbb
push
decb
jo
jle
push
outsb
mov
jge
fsubs
aas
jns
inc
jecxz
push
sbb
imul
xor
rolb
pop
mov
clc
add
fildl
dec
icebp
fsubp
out
lods
inc
movsl
cld
add
into
xchg
inc
mov
addr16
pop
and
daa
sbb
insb
loope
bound
push
xor
lea
fisubrs
punpcklbw
pop
in
push
dec
push
movsl
and
and
dec
loope
mov
adc
cmp
stos
ds
in
mov
jbe
hlt
inc
dec
mov
js
rclb
fnstenv
sbb
shrl
xchg
test
add
cmc
push
pop
ja
sahf
les
icebp
lods
imul
data16
cwtl
cli
pop
insb
lahf
repz
pusha
lret
outsl
mov
test
lea
mov
xchg
nop
inc
out
cmp
aaa
cld
movsb
shlb
add
push
jo
mov
dec
ja
sbb
in
bound
nop
xchg
xlat
cmp
mov
dec
stos
xchg
mov
sub
cmpsb
imul
lock
push
imul
roll
dec
leave
stc
and
js
mov
pop
mov
ja
pop
int3
pop
or
lcall
cwtl
cwtl
shrb
push
fsubs
test
xlat
pop
mov
xchg
sbb
scas
xor
inc
cwtl
mov
pop
test
fsubrl
xchg
pop
mov
push
int
mov
movsl
stos
stos
test
iret
xor
or
fisttpl
outsb
mov
fimull
mov
lods
les
mov
xchg
fimull
adc
outsl
mov
mov
jmp
push
addr16
and
inc
imul
jmp
inc
xchg
xor
insb
dec
es
jl
bound
mov
mov
push
clc
lcall
into
sbb
sbb
imul
xor
sub
adc
or
adc
sub
or
popa
stos
movsb
loopne
pop
jns
inc
popa
pop
or
imul
pop
jno
cmp
xchg
pusha
jge
jno
mov
gs
mov
pop
arpl
cld
mov
fs
push
push
in
xor
mov
sub
sahf
adc
mov
sbb
mov
lcall
stos
push
jne
jg
pushl
xchg
cltd
xor
insb
mov
sbb
and
ja
push
packuswb
or
lcall
test
je
fisttpl
test
fwait
ljmp
fwait
adc
push
sub
pop
pop
jle
add
xchg
call
adc
xchg
shrb
lds
push
jo
adc
outsl
mov
mov
cli
lahf
adc
push
jmp
stos
pop
orb
inc
inc
ret
scas
or
rorl
inc
dec
add
pop
lock
xchg
adc
adc
stos
xorl
push
jbe
leave
push
stos
sub
es
sub
fdivs
sbb
xchg
xchg
mov
stos
xchg
jbe
and
lds
stc
xchg
jb
and
lds
jge
imul
mov
cwtl
fisttps
lea
popa
dec
inc
imull
fcmovnbe
ret
imul
dec
jae
and
push
xchg
cli
or
mov
andl
orb
push
and
test
sub
adc
add
sbb
inc
xchg
addl
cmpsl
ja
loopne
and
sahf
pop
mov
jne
xchg
and
jo
movsl
cmp
inc
sbb
sbb
popa
int3
add
cmp
inc
sbbl
dec
jbe
cmp
jne
mulb
pushf
lahf
divl
cmp
aad
pop
lock
and
cmp
cmp
dec
sub
nop
jo
jno
fimull
sahf
sub
cmp
aaa
nop
xchg
int3
pop
and
je
push
addl
das
test
sbb
aaa
lret
or
push
xor
stos
stos
inc
jo
fsubrl
cltd
push
inc
jnp
sahf
and
jae
push
fs
cltd
iret
push
inc
sbbl
ret
nop
xchg
mov
mov
lcall
test
mov
jmp
xchg
sbb
mov
in
adcl
cld
mov
fldt
addl
pusha
repz
add
sbb
push
aaa
addb
lcall
inc
mov
jnp
data16
jbe
xor
inc
rolb
pop
jle
inc
mov
lds
add
int3
mov
push
inc
imul
mov
push
jne
out
mov
div
and
jle
movsl
lret
jg
xor
inc
lea
pushf
aam
jae
fidivl
fwait
mov
push
pop
mov
mov
cmp
lret
xchg
cmp
aad
pushf
int
pushf
xchg
iret
lret
sbb
cmc
pop
cwtl
imul
mov
and
inc
pop
jbe
adc
mov
mov
inc
fs
lds
sahf
and
mov
test
inc
xchg
lahf
sahf
cmp
jo
popa
push
xchg
into
fcompl
mov
cmp
or
xor
cmp
mov
adc
dec
rol
jo
add
test
outsl
inc
jae
cwtl
jge
insl
shrb
in
jae
cmp
mov
pop
inc
jp
push
add
jge
mov
popf
dec
push
pop
out
clc
push
add
xlat
dec
pop
jbe
ds
shl
jae
sti
stc
or
sbb
push
push
in
push
cli
xchg
cmpsl
fstps
fs
jae
and
cmpsb
jl
mov
jb
or
ja
xchg
mov
push
dec
push
dec
jle
cmp
jno
das
leave
adc
sub
sub
mov
data16
push
inc
fdivrl
pop
in
cltd
jbe
out
inc
pop
mov
mov
pop
loop
or
mov
pop
mov
jno
inc
push
lods
test
sub
mov
fdivl
pop
adc
jb
fistps
sub
mov
mov
clc
xchg
mov
ljmp
jl
add
dec
mov
jmp
and
test
sbb
push
and
aas
pop
sbb
push
push
jp
sub
ss
inc
ja
pusha
cld
popf
and
xchg
sarl
mov
push
and
xchg
sbbb
xor
add
inc
sbb
icebp
fwait
mov
xchg
and
std
or
mov
or
sbb
outsb
pop
or
loope
xbegin
sti
inc
xlat
cmp
inc
mov
aam
push
popf
fcoms
mov
sbb
xchg
inc
lahf
push
imul
cmpsb
adc
lods
pop
pushf
aad
mov
xchg
push
sbb
test
fwait
ja
fucom
jge
mov
pusha
call
shll
in
and
mov
pushf
dec
mov
jb
outsb
dec
lret
ss
lods
ljmp
dec
xchg
incl
mov
ret
mov
addr16
aam
mov
pop
and
pop
and
mov
lahf
and
lods
xor
jmp
adc
in
or
xor
push
xchg
mov
cmp
xchg
ja
pop
mov
repz
push
mov
popa
push
and
xchg
std
xchg
push
cmpsb
or
mov
add
imul
icebp
dec
mov
aad
sbb
insb
rolb
cmc
jns
xor
lcall
xor
imul
xchg
xor
xor
cmc
in
mov
dec
sarb
mov
fdivrl
fstps
test
xor
adc
cmpb
arpl
testb
bound
lods
mov
sbbl
push
jg
loopne
push
jb
call
jb
push
mov
sub
std
not
mov
sbb
push
nop
stos
cmp
push
mov
add
or
ficompl
xchg
push
cmp
and
mov
fsts
dec
repz
sub
cmp
adcl
jl
push
add
hlt
and
sub
fmuls
and
aaa
out
lods
in
xor
cwtl
in
and
outsl
adc
inc
or
pop
pop
cs
imul
or
outsb
inc
pop
outsb
inc
jl
pushf
cmp
pminsw
xchg
cmc
sbb
pop
repnz
test
add
dec
push
loope
fwait
add
inc
pop
dec
xchg
shll
cwtd
push
jb
cmp
fistps
stc
popa
pop
cwtl
ds
je
cs
pop
xchg
xchg
idivb
movsl
cmpl
jge
inc
jb
ret
sub
cli
jne
mov
hlt
adc
xchg
scas
cli
mov
icebp
or
and
nop
add
pop
cld
adc
mov
adc
jnp
pop
sarl
and
pop
xchg
add
push
fdivrl
jbe
jo
imul
nop
mov
jecxz
push
xorb
lret
mov
push
popl
call
mov
imul
je
mov
nop
adc
jle
jo
mov
add
insl
dec
mov
xor
ja
mov
sahf
mov
lcall
loopne
add
js
sbb
mov
mov
outsb
cs
push
pop
push
mov
push
fcomps
fld
negb
scas
bound
in
pop
cmpsb
add
in
pop
mov
mov
adc
daa
lea
push
fwait
mov
popf
mov
cltd
movsl
shlb
jmp
mov
lahf
or
or
out
fbld
or
sub
fbstp
or
shlb
scas
lock
lret
imul
aas
iret
cmp
clc
push
pop
xchg
mov
push
stc
jmp
dec
sbb
ds
in
add
andl
sbbl
xchg
xor
push
shll
push
sub
cmpsl
shll
dec
push
mov
test
sahf
jnp
pop
inc
popa
in
arpl
mov
sbbl
movsb
xor
out
fstpt
ljmp
or
js
pop
mov
jb
jecxz
lret
and
dec
dec
inc
jp
xchg
inc
test
dec
xlat
or
xchg
ja
xchg
mov
xchg
cwtl
sbb
and
addr16
push
gs
adc
sbb
push
mov
sti
testl
cmc
push
es
in
push
sahf
test
fsubp
repnz
sub
mov
test
cltd
jae
add
xor
jnp
mov
cmp
inc
jb
out
cmp
xchg
dec
xchg
fwait
mov
sub
jp
sbb
stc
push
testb
pop
fidivs
pop
xor
adc
cmp
mov
add
mov
inc
jp
push
mov
pop
mov
test
dec
sbb
mov
sub
mov
outsl
insb
daa
cmpsl
xor
sbb
call
test
push
in
fbstp
or
inc
jl
xchg
or
xchg
add
mov
cltd
ds
or
mov
fildl
sbb
bound
jo
adc
popf
xchg
mov
jno
mov
or
mov
lods
scas
shll
xor
and
or
lea
imul
cmp
xchg
mov
push
aam
sub
sub
iret
mov
call
jb
sub
or
out
insb
les
xchg
cltd
add
cwtl
sbb
and
push
add
mov
daa
push
pop
stc
test
jns
xor
add
imul
aaa
lock
sti
or
outsb
dec
fnstsw
addr16
repnz
jp
dec
and
fdivrl
sub
xlat
or
pop
cltd
push
pop
jne
inc
mov
pop
add
js
rcrl
cmp
mov
xor
ja
addl
ds
cmpsb
jecxz
jae
xchg
xor
outsl
repz
sub
pop
fwait
inc
nop
adc
mov
push
push
stos
push
add
mov
scas
xchg
jl
dec
xor
xorl
and
and
jbe
flds
mov
lock
imul
and
mov
insb
jnp
lds
test
cmp
aas
xchg
notl
mov
push
inc
xchg
mov
mov
xchg
xchg
outsb
je
ffreep
outsb
shlb
aad
fnstcw
xchg
idivl
mov
xor
int3
in
dec
dec
dec
arpl
inc
lcall
fs
pushf
add
jae
gs
or
mov
jae
xchg
add
jge
xchg
mov
subl
mov
adc
shlb
nop
push
dec
mov
jl
loope
out
stos
jmp
popa
push
or
test
push
cmpsb
push
shl
in
cmp
push
jmp
lods
ffree
add
mov
jno
mov
pop
pop
push
je
hlt
and
xchg
shrl
mov
popf
jp
out
cltd
nop
outsl
scas
xchg
iret
es
fisubl
jl
ja
or
xor
cmp
insb
ss
jmp
pushf
lcall
jb
xor
dec
nop
jp
mov
jle
mov
inc
pop
mov
push
scas
push
inc
mov
xchg
add
xchg
lods
std
push
pushf
loopne
inc
push
scas
dec
ficomps
mov
dec
and
jno
das
arpl
fdivrl
clc
add
test
orl
imul
sbbb
nop
insb
ljmp
mov
ljmp
adc
mov
mov
ret
nop
stos
sar
pop
mov
push
nop
xor
mov
rolb
insl
dec
insb
imul
dec
cmp
fistpll
push
jae
push
mov
lock
pusha
call
ret
int
and
cwtl
dec
and
pop
mov
inc
insl
mov
insb
rclb
stos
add
decl
and
xor
push
out
insb
mov
ja
pop
iret
ds
mov
mov
and
into
call
jo
outsb
aad
xchg
pop
outsl
imul
mov
xchg
or
xchg
mov
iret
js
ret
popf
sbb
fwait
lds
cmpsb
dec
lds
out
dec
cmp
xor
and
mov
sbb
imulb
adc
outsb
pop
cwtl
push
inc
scas
mov
add
push
sub
je
je
repz
test
adc
push
sbb
scas
or
inc
sbb
or
cmpsb
fdivl
xorb
cmp
dec
cmc
pop
and
scas
add
or
jns
jp
stos
leave
jmp
fisttps
push
pop
ss
xchg
mov
fwait
jns
cmp
mov
enter
arpl
lret
orb
jb
inc
jg
icebp
dec
push
jb
dec
cltd
add
adc
cmpsl
mov
sbbb
das
cltd
pop
fdiv
lods
dec
mov
mov
scas
mov
es
ret
pop
mov
adc
push
sarb
mov
std
loop
mov
jecxz
cs
lock
mov
xchg
scas
or
inc
dec
testl
scas
dec
mov
stos
gs
outsl
inc
pushf
mov
or
icebp
sub
ja
mov
jae
mov
int
lods
roll
rcrb
dec
xchg
rorl
cmpsl
jns
in
jbe
push
inc
jl
inc
jns
stc
cmp
add
xchg
mov
or
cs
jae
or
add
xorl
test
std
ja
stos
sub
fsubr
mov
frstor
xor
repz
lods
ror
movsb
sqrtps
fcmovnu
fmull
hlt
sti
sti
lret
sbb
inc
rclb
fucomp
jge
push
adc
insl
add
ja
dec
dec
sbb
jl
lret
inc
lret
les
jp
sbb
addr16
mov
jae
dec
pop
or
xchg
xchg
xchg
or
xchg
std
pop
insb
jb
cmp
sbb
lods
ljmp
adc
scas
mov
mov
daa
sub
xchg
mov
cmp
mov
push
mov
cltd
mov
or
outsb
cmp
popa
and
push
loopne
test
or
pop
push
cmp
mov
xchg
test
jno
mov
add
mov
hlt
xchg
scas
mov
inc
stc
jne
push
loopne
pop
scas
lds
adc
jns
push
lcall
sbb
cs
in
inc
pop
in
mov
mov
mov
rolb
xchg
and
mov
jno
jnp
shrl
shll
xlat
outsl
clc
cmpsb
lods
mov
xchg
jecxz
into
xchg
les
fimuls
jle
dec
ficomps
mov
lahf
mov
push
mov
fdivrl
repz
mov
cmp
jae
or
out
mov
fisttps
mov
and
jns
scas
in
mov
jle
push
push
clc
sahf
push
fpatan
pushf
push
imul
ret
jp
pop
jo
int3
je
stc
inc
ljmp
outsl
push
pushl
repz
adc
jp
xorb
stos
and
fistpl
push
lea
clc
pop
jl
fidivl
in
aas
pop
cltd
push
push
imul
ret
aad
push
fisubs
rcrb
mov
stos
es
popa
je
ja
fisubrl
mov
pop
mov
leave
test
adc
sub
mov
push
dec
hlt
mov
mov
ja
cmc
lret
xchg
mov
jp
and
stos
push
inc
test
fistpl
xchg
ja
fsubs
jns,pn
mov
pop
arpl
cmpsb
mov
mov
adc
out
lcall
inc
cltd
nop
testl
andl
mov
xchg
ficomps
mov
add
out
push
mov
test
arpl
arpl
addr16
cld
cmp
data16
js
inc
repz
pop
jp
mov
mov
mov
rorl
xlat
jle
hlt
jle
movb
mov
bound
mov
mov
cmp
sub
push
fists
mov
jecxz
mov
outsl
iret
fwait
mov
aas
mov
cmpsb
stos
in
sti
mov
dec
fs
push
adc
pop
test
mov
scas
push
dec
mov
dec
mov
not
and
inc
lock
movsl
outsl
add
push
mov
outsl
or
aad
rep
mov
in
pushf
mov
aad
sahf
aad
lret
or
jmp
xchg
mov
mov
and
push
or
fdivrl
inc
mov
fs
mov
fistps
pop
ret
mov
sbb
cmp
inc
jae
jmp
jp
cli
out
jnp
jae
leave
pop
shll
inc
push
push
xchg
gs
aad
mov
faddl
xchg
jmp
cld
out
jno
ja
jnp
xchg
pusha
in
mov
hlt
pop
flds
pop
stos
cltd
hlt
bound
mov
aam
pop
jecxz
test
push
mov
aas
pop
jnp
dec
and
dec
add
add
fisttps
push
test
adc
ret
cmc
push
lahf
test
push
sbb
jns
cmc
ret
jae
mov
arpl
mov
je
mov
mov
icebp
or
push
push
and
sub
fmull
popf
or
cmc
cwtl
jae
xchg
es
mov
lods
inc
je
xchg
mov
fwait
test
cmp
sarl
xchg
pop
outsb
daa
cmp
cmpsb
test
enter
scas
rcrl
outsl
dec
ja
arpl
fwait
in
fs
adc
negl
sub
outsl
cmp
or
sti
in
or
mov
shlb
fbstp
push
cmp
je
das
mov
nop
and
cmp
sub
pushf
fnstcw
xchg
push
cmp
fcomp
mov
jno
cmp
xchg
test
jne
jnp
dec
mov
jae
lcall
xor
push
loop
test
je
sbb
sbb
add
jbe
sbb
data16
pop
pop
sub
xrelease
stc
cs
lret
lcall
xchg
and
jg
rcr
xor
mov
rcrl
push
ret
cmp
ljmp
mov
jmp
paddusb
cmpb
test
bound
mov
and
fistpll
test
lods
rol
xor
testb
rclb
enter
dec
lods
test
clflush
lock
divl
mov
inc
cwtl
mov
repz
cmpb
leave
sbb
stos
adc
jl
cli
cltd
or
nop
dec
fistpll
aad
adc
push
sbb
or
mov
add
fs
in
cwtl
inc
pushf
cmp
adc
test
int3
int3
cmp
testb
popf
jne
movsb
mov
lcall
stc
rorl
ja
fisubrs
xor
xorl
dec
mov
mov
cld
mov
cmp
ljmp
sahf
cmpsb
insb
pop
xor
xor
xchg
xchg
sbb
pop
ud1
clc
outsb
es
inc
jp
xchg
xor
inc
pop
cwtl
xlat
cmc
dec
popa
ror
sbb
nop
ja
jno
mov
lods
xchg
and
cld
rclb
xchg
jae
mov
pop
push
xchg
push
lcall
or
mov
push
int
jbe
mov
and
mov
dec
out
mov
xchg
xchg
stc
jnp
addr16
xchg
lret
mov
mov
in
jns
leave
or
mov
mov
inc
dec
push
xchg
xor
inc
adc
push
ss
outsb
add
or
fbld
dec
mov
sub
dec
test
ret
jae
sbb
dec
shrb
mov
xchg
shl
mov
cmp
jne
stos
sbb
stos
xchg
mov
jl
repnz
mov
scas
jle
stos
mov
aaa
out
push
into
inc
push
dec
out
addr16
test
push
add
lahf
mov
mulb
lcall
dec
push
xchg
jne
ret
dec
loopne
je
fdivrs
shlb
mov
repz
jecxz
in
les
xor
int3
stc
mov
xchg
push
push
add
pop
mov
aam
cmp
bound
aam
xor
dec
arpl
mov
es
xchg
outsl
xchg
and
movsl
rcr
iret
fcmovbe
lock
mov
into
inc
dec
jmp
fs
jae
mov
scas
in
push
ficoms
mov
sub
out
fdivrp
jp
test
xchg
jo
inc
outsl
xchg
sbb
cli
std
scas
cli
stos
aam
xchg
cmpsb
fmuls
gs
mov
jle
and
imull
jbe
pusha
add
popf
xlat
js
lea
fsub
or
mov
mov
push
ret
xchg
in
mov
mov
add
stos
mov
inc
iret
cmpsb
mov
cmp
jg
cmpsb
xorb
testl
mov
cmp
icebp
nop
les
sahf
cwtl
mov
sbb
test
out
pop
and
lcall
stos
ss
push
shlb
jp
mov
mov
mov
jl
mov
in
pushf
insl
lcall
xchg
jmp
xchg
mov
js
xchg
jno
insl
in
inc
jg
mov
mov
jl
sbb
cmc
add
mov
sbb
mov
daa
pop
lock
icebp
pop
jnp
scas
cmp
mov
inc
fimuls
in
ds
and
dec
in
paddb
or
lret
test
out
test
xlat
les
jl
and
movsl
jae
sbb
inc
mov
xor
pop
mov
jl
shr
scas
dec
fisttps
cs
mov
pop
lahf
shrl
push
jo
movsl
adc
test
and
jnp
lds
popa
cmp
cmp
mov
es
jl
dec
cld
mov
xchg
jo
insl
xchg
mov
sub
pusha
test
insb
or
je
jae
cmpsb
push
dec
sub
xor
mov
push
cld
adc
mov
jl
cwtl
rolb
xchg
lods
xor
sahf
xor
push
jecxz
mov
scas
xchg
dec
in
mov
mov
popf
and
divb
es
push
popf
cltd
call
add
cmp
sbbl
lcall
repz
inc
mov
sub
jnp
cli
fistps
sbb
pop
push
addr16
jno
push
or
fldl
add
popf
jmp
fcomp
out
and
mov
pandn
cld
sbb
out
mov
pop
out
mov
faddl
fcomi
lcall
cltd
xchg
stos
test
mov
cmpsb
sbb
outsb
jmp
rcr
scas
add
loop
ljmp
sbb
pop
daa
cmp
pop
bndstx
lret
sbb
add
std
in
das
cltd
stc
je
sub
int
iret
je
fs
mov
test
xchg
pop
inc
mov
sbb
mov
cltd
aam
and
in
sub
std
push
inc
mov
add
cmp
xchg
inc
xchg
lds
pushf
popa
pop
pop
mov
xchg
jne
mov
sbb
pushf
mov
aad
dec
enter
shll
xor
sbb
add
out
push
adc
push
shll
cmp
outsl
or
jno
sub
push
adc
out
gs
adc
jp
ret
dec
int3
inc
fsubrl
jb
call
jnp
stos
mov
enter
adc
and
add
add
cltd
mov
add
dec
fidivrl
sub
je
out
fimull
mov
adc
jb
enter
adc
es
icebp
and
jg
imul
lret
outsb
test
orb
inc
insb
add
repnz
add
in
mov
xchg
xchg
mov
or
mov
jle
cmove
cli
sbb
dec
fdivs
enter
jno
into
pop
imul
cltd
rcll
out
stos
repz
in
add
dec
in
push
mov
hlt
jae
pop
in
mov
sarl
pop
xor
inc
outsb
mov
das
and
jge
cmp
jecxz
aam
sbb
lods
jbe
outsb
xchg
cmp
push
pop
je
rcrl
add
mov
rol
lds
test
inc
adc
aad
cmp
lcall
and
ffreep
inc
outsb
int
mov
or
sbb
jge
hlt
dec
and
notl
cmp
xor
roll
push
mov
and
mov
sub
xchg
loopne
sbb
sbb
sbb
push
les
mov
les
xchg
sub
push
mov
out
pop
lock
jmp
cld
call
loopne
or
scas
jp
cmpsb
shll
xlat
scas
jae
xlat
das
repnz
xchg
std
sbb
xlat
pop
fsubs
aad
int
ja
adc
data16
mov
jae
data16
sbb
ds
fsubs
movsb
lock
mov
mov
mov
test
cmpsb
fstps
dec
test
jbe
and
jecxz
cwtl
jl
mov
mov
jne
cmpb
lcall
popf
mov
sub
jne
loop
push
out
int3
lods
pop
filds
pop
stos
mov
push
inc
loope
jne
jl
and
scas
cmp
mov
xchg
mov
or
sbbb
sub
lret
xchg
pop
in
loop
int3
push
jp
mov
test
cmpsb
add
loop
dec
dec
cmp
push
scas
rcll
fisttps
aad
icebp
ret
pop
leave
mov
aaa
das
push
adc
cld
ret
cmp
xor
jmp
adc
insb
mov
mov
mov
jg
xchg
add
sbb
mov
xchg
mull
in
punpcklbw
loopne
shlb
movsb
cmpsb
adc
inc
or
adc
jl
fwait
or
pushf
xlat
mov
mov
add
add
arpl
ret
fldl
xchg
mov
aaa
cmpsl
add
cmc
sahf
push
sbb
mov
xchg
or
fbld
mov
and
popa
mov
mov
mov
xchg
sahf
push
push
or
mov
or
les
cmp
rol
pop
aam
out
jl
sub
icebp
into
lds
mov
or
xchg
es
cwtd
leave
rorb
jnp
mov
sub
fcompl
push
sbb
jae
scas
xchg
lds
inc
hlt
dec
jae
xlat
inc
test
add
fisubs
fistps
movsb
xchg
xchg
add
jnp,pt
mov
sub
xchg
lahf
arpl
fadd
jp
mov
pop
shll
fsubs
imul
xchg
inc
jb
das
xchg
xor
adcl
aaa
popf
mov
imul
push
xchg
inc
and
leave
addr16
xchg
jno
js
out
jo
lock
cmp
xchg
xor
clc
xorb
out
xor
data16
or
test
nop
lods
dec
in
fisubrl
mov
mov
or
mov
into
aaa
incl
sbb
pop
inc
or
cli
pop
nop
cld
mov
mov
and
mov
add
das
sbb
push
imul
mov
fsubl
jmp
push
push
fdivrs
into
daa
inc
mov
test
int
lods
mov
push
sbb
jb
andb
cmc
adc
add
loopne
popa
adc
mov
and
inc
mov
orl
inc
mov
add
adc
jle
roll
cmp
aaa
mov
movsl
fildl
test
les
testl
lret
mov
arpl
loop
int3
call
shll
and
xor
lods
int3
pop
push
test
xchg
addr16
and
in
fldt
push
lret
pop
addb
out
inc
xchg
dec
sbb
out
imul
lret
cmp
dec
stos
lea
pavgb
mov
cmp
mov
in
pushf
aad
mov
mov
rclb
push
jbe
rcrl
mov
mov
and
jp
dec
and
fimuls
jg
dec
stos
jge
cmpsb
mov
ljmp
push
mov
rol
push
sub
ss
aas
jnp
and
add
int
mov
mov
lret
jnp
ds
and
and
cmp
jl
mov
jns
outsb
jbe
inc
lods
mov
out
out
test
mov
gs
bound
mov
test
test
scas
loop
jnp
mov
mov
or
in
jecxz
scas
test
jg
inc
mov
sahf
out
inc
dec
aam
inc
xlat
jnp
mov
mov
insb
adc
cmp
pop
mov
fwait
insl
jnp
xlat
pop
fsubr
mov
cmpsb
in
mov
int3
aas
lods
xlat
xchg
movsb
mov
sbb
fldt
mov
push
les
repz
jo
ror
sub
inc
mov
push
jnp
aad
sbb
adc
out
shll
cltd
out
inc
add
popa
ficoml
in
vcvtss2si
jnp
sbb
or
dec
mov
inc
daa
inc
loopne
call
jb
pop
fs
in
adc
dec
add
mov
inc
jmp
sbb
stos
xchg
testb
rorl
jns
xor
dec
icebp
fdivr
mov
xchg
cmc
sarb
ljmp
bound
fsubrs
dec
adc
jnp
mov
push
lock
in
sbbl
sbb
fucomp
jle
test
fcmovu
leave
popa
frstor
aam
pop
gs
adc
ret
mov
jnp
cwtl
xchg
ret
push
xchg
jl
add
es
popa
push
arpl
adc
or
xchg
xchg
insb
enter
lock
or
inc
dec
xchg
mov
cld
pop
cmpsb
repz
hlt
imull
out
data16
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
iret
test
stos
pop
ljmp
cmpsl
add
jb
add
jb
add
pop
mov
mov
notb
xlat
mov
xchg
and
loope
xchg
jmp
leave
clc
les
notb
mov
lock
xchg
mov
test
jecxz
stc
into
loop
push
cmc
loop
xor
int3
mov
mov
scas
jp
std
mov
imul
mov
mov
push
lcall
lock
pusha
setbe
mov
repnz
clc
cli
les
push
sbb
mov
mov
xchg
cmpsb
mov
xchg
or
notb
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
mov
xchg
mov
call
add
test
mov
orl
mov
xchg
cmpsb
jbe
in
push
mov
loopne
pop
loopne
push
adc
cwtl
mov
cmpsl
jbe
in
push
mov
loopne
mov
notb
mov
cwtl
mov
sub
fsub
pusha
xchg
sbb
xchg
jbe
push
cmpsl
jbe
in
push
mov
loopne
mov
add
adcl
ret
xor
or
mov
sub
fsub
pusha
xchg
sbb
xchg
jbe
mov
inc
xor
stc
push
mov
sub
fsub
pop
xchg
sbb
xchg
jbe
mov
aas
dec
mov
sub
xchg
mov
mov
pusha
xor
push
adc
cwtl
mov
sub
fadds
mov
mov
in
mov
ror
aas
dec
mov
sub
xchg
mov
xchg
push
cmpsl
repnz
ret
popa
lock
mov
xlat
rcll
jp
daa
jns
imul
cli
jb
dec
mov
mov
movsb
scas
imul
dec
out
mov
mov
add
in
hlt
add
sarl
ret
sbb
jae
xchg
aam
xchg
dec
fsub
jb
mov
lock
fwait
pop
aad
rcl
lea
fdivl
add
cli
adc
imul
xor
push
and
test
repz
mov
mov
pop
xchg
sbb
repz
xchg
mov
in
clc
cmp
pushf
cmc
push
mov
push
mov
xchg
mov
mov
lods
test
stos
xchg
stos
jbe
bound
xchg
ljmp
in
mov
data16
pusha
sub
cmp
jp
das
addl
movsl
xchg
sub
mov
and
sbb
or
fs
xchg
into
or
mov
mov
mov
cltd
sbb
movl
or
lea
negb
out
jecxz
jmp
imul
ret
gs
das
cmpsl
roll
and
push
out
pop
stc
or
push
lahf
jns
outsb
mov
dec
imul
scas
call
mov
dec
cli
repnz
push
mov
hlt
jle
push
xchg
xchg
cwtl
jge
pop
lret
das
fcmovnb
inc
ficoml
sub
add
push
jp
xchg
out
jg
cld
stos
xor
cwtl
divb
adc
cmp
je
shlb
pop
sub
xor
negl
lret
xchg
popa
pushf
mov
imul
dec
xchg
push
mulb
push
mov
popf
dec
aas
jp
out
push
cmpsb
insb
test
mov
sub
or
fdivs
push
sbb
push
mov
cmpb
enter
add
mulb
int3
add
add
xchg
lcall
subl
imul
add
sbb
out
and
and
xlat
cs
dec
mov
and
or
lods
in
dec
xchg
outsb
mov
mov
cmpsb
adc
ret
xor
out
add
fidivs
and
or
sub
xchg
mov
sbb
ja
mov
out
and
jp
sbb
push
fmul
enter
lret
mov
nop
out
add
out
cmp
cmpsb
jge
call
test
cwtl
mov
mov
mov
push
loope
leave
xchg
sub
andl
mov
jbe
movsl
outsl
inc
sbb
or
mov
lcall
pop
pop
or
cmp
sbb
test
cmp
xchg
mov
inc
es
imull
ljmp
int3
call
mov
mov
xorb
lahf
pop
xchg
mov
add
xchg
int
dec
outsl
mov
loop
cmpsb
push
es
lods
shrl
or
aad
xchg
adc
jno
and
inc
inc
pop
out
daa
push
or
jns,pt
popf
out
mov
out
addl
dec
test
sbb
xchg
push
adcb
sarb
jns
mov
xchg
push
adc
cltd
xchg
icebp
arpl
xchg
test
gs
xlat
or
lret
push
or
cmp
std
inc
imul
jns
xchg
popf
jp
int
jne
xor
mov
cmp
icebp
jg
out
roll
adc
xchg
sub
jl
rol
sbb
and
push
in
add
or
jge
sbb
inc
cmp
xchg
aam
mov
ljmp
leave
out
daa
test
push
mov
mov
push
cld
pop
mov
hlt
push
js
out
sub
or
rcl
push
sub
loope
imul
sarb
push
and
mov
shl
insl
cmpb
pushf
int
and
xor
xchg
popa
das
inc
mov
std
lods
lods
jg
cmp
xchg
and
cmp
ret
xorb
ds
pop
mov
jo
test
or
fcoms
mov
scas
push
rcl
mov
and
cs
loopne
pusha
stos
xor
sbb
xor
xchg
cmp
sub
sbb
add
adc
adc
pop
out
cmp
jne
stos
push
jmp
insl
or
and
mov
inc
mov
out
mov
adc
push
and
mov
popf
dec
popf
adc
cmpsb
pop
ret
jecxz
pop
test
mov
loop
ds
testb
sub
xor
popf
mov
test
shll
xchg
xorl
sti
fwait
mov
xchg
sbb
and
ja
or
mov
out
cmpsl
daa
mov
inc
xor
rclb
shll
mov
dec
mov
and
test
pop
pop
aam
push
lea
mov
jp
fcmovnu
xchg
push
adcl
shll
scas
mov
push
mov
int3
lcall
js
push
aam
xchg
add
and
js
aad
mov
insl
ss
dec
or
loopne
rclb
push
pop
adc
inc
adc
lret
mov
sbb
sbb
push
in
mov
sbb
mov
jmp
insl
adc
icebp
xchg
daa
rorb
jbe
add
test
push
xor
aam
imul
call
jge
in
rolb
inc
loope
hlt
test
sbb
sbb
scas
flds
bound
dec
add
lods
push
mov
jb
jno
mov
mov
mov
jne
adc
imul
aam
sbb
ret
jae
pop
sbb
adc
xchg
inc
ja
fsubrl
cmp
adc
rorl
adc
sub
scas
pop
lret
pop
inc
mov
push
xchg
mov
adc
push
ja
push
mov
imul
xchg
pop
test
or
jle
mov
nop
jns
in
inc
add
push
cmp
mov
sub
cmp
adc
jns
sahf
lcall
out
aaa
sub
xchg
jecxz
outsb
testb
and
orl
rol
addr16
xchg
in
sbb
stos
inc
push
jecxz
std
incb
jmp
sbb
adc
sub
loope
aas
pop
inc
aad
or
cmp
mull
xchg
push
dec
jp
insl
jbe
cmc
sbb
xchg
fnstenv
fisubrs
xchg
iret
mov
push
xchg
iret
icebp
test
repnz
mov
xchg
xchg
dec
shll
and
movsb
daa
mov
xchg
aas
add
mov
out
jns
mov
movsb
jmp
and
stos
sub
push
stos
fucom
sbb
pop
test
loope
jecxz
lcall
cmpsb
test
leave
push
mov
adc
push
add
add
push
enter
adc
dec
mov
incb
lret
shrl
add
mov
mov
or
jns
fdivrs
call
sub
aam
je
rclb
xor
call
shl
ret
aam
jbe
lret
sbb
sbb
cmp
js
lcall
or
fdivrs
repnz
mov
loopne
dec
addl
cmpl
les
adc
mov
add
ja
pop
cmp
ss
fcomi
xor
pop
sbbl
lcall
adc
xor
mov
dec
mov
lods
out
push
mov
inc
out
cmp
mov
mov
pop
ljmp
adc
jge
inc
lcall
mov
mov
inc
lcall
cmp
in
lea
jle
add
cmc
jp
aad
and
or
adc
scas
push
jmp
jmp
sub
pop
ss
lahf
stos
mov
out
clc
cld
lret
div
mov
int3
dec
mov
and
sarl
bound
sub
xchg
arpl
pop
mov
scas
push
and
xor
repnz
in
repnz
jp
push
mov
rclb
sbb
cmp
cmp
icebp
adc
or
inc
test
push
push
outsl
bound
iret
lods
pop
xor
jbe
jno
out
inc
into
les
outsb
inc
xchg
mov
lods
out
jnp
aaa
xor
mov
sub
sub
iret
dec
imul
mov
scas
in
aam
push
arpl
push
pop
movb
mov
into
in
insl
xchg
push
aad
stc
sbb
subl
cmp
lods
mov
imul
mov
iret
sub
adc
js
mov
sbb
cltd
aaa
fisttps
movsb
fstpl
jle
jg
idivl
shll
xchg
ljmp
pop
cmp
adc
sub
hlt
or
inc
push
in
xchg
flds
pop
cmp
xor
es
xchg
in
call
es
hlt
dec
aas
stc
rcll
fst
push
out
push
fwait
call
and
je
xchg
push
bound
mov
fmulp
mov
dec
xchg
scas
fists
sbbl
xchg
sbb
leave
scas
stos
movsl
imul
jl
js
pop
adc
sbb
test
popf
imulb
subl
cmp
push
mov
dec
sub
inc
test
out
decb
dec
enter
push
repz
xchg
mov
push
push
mov
sar
mov
cmp
test
mov
inc
fsubrl
arpl
jae
mov
hlt
les
mov
jbe
inc
mov
xlat
nop
lahf
sarb
mov
adc
jmp
pushf
lods
or
sbbl
or
enter
pushf
xchg
xor
nop
fidivs
pusha
ret
mov
ja
jae
sti
push
sti
sahf
push
enter
sbb
cmpsb
push
mov
icebp
jge
sbb
xchg
pop
cmpsl
pop
ret
mov
jmp
push
mov
mov
mov
push
lods
mov
xchg
leave
hlt
jae
iret
pop
pop
rcl
loope
sub
imul
aaa
aad
or
dec
mov
aaa
xchg
lea
cld
loopne
ffree
lods
les
enter
in
pop
hlt
mov
mov
xchg
vpcmpeqd
mov
dec
jnp
mov
push
adc
push
jno
inc
push
push
and
cmp
jmp
fisttpl
add
fsts
and
push
and
js
or
add
hlt
out
xchg
sbb
pop
xor
ljmp
xor
cltd
stos
movsl
xchg
jnp
out
add
test
or
filds
loope
scas
test
mov
iret
pop
adc
kortestw
sbbb
adc
xchg
push
mov
adc
inc
push
popf
and
jbe
push
or
sbb
fcoms
loope
in
hlt
incb
adc
testl
mov
gs
sub
ljmp
and
push
loopne
fldenv
sub
jb
and
lret
movb
arpl
lods
mov
cmp
scas
xor
pop
aaa
out
sub
mov
adc
outsb
pop
jecxz
lahf
aas
les
push
add
or
cs
or
insb
xchg
cmp
cmpsb
jne
pop
xor
loope
mov
adc
nop
insb
jae
add
enter
mov
stos
mulb
mov
jmp
sbbl
xchg
push
mov
inc
loope
enter
nop
dec
jg
mov
push
mov
mov
adc
sub
sti
dec
mov
lahf
and
push
mov
push
xchg
sbb
or
pop
or
push
bound
je
sbb
addr16
insl
mov
cwtl
cmc
pop
and
addb
cmp
push
aaa
test
add
daa
cwtl
mov
push
js
adc
addb
loope
pop
insb
add
add
dec
add
inc
sbb
xor
inc
sub
add
scas
fcoml
add
mov
in
adc
adc
mov
addb
imul
insb
test
fwait
sbb
dec
mov
inc
aam
adc
das
movsb
cmpsb
mov
add
popa
in
rclb
aas
jns
add
imul
push
ljmp
test
loopne
addl
pusha
sbb
push
mov
mov
test
mov
je
add
add
push
inc
dec
or
inc
mov
ljmp
ret
inc
rolb
test
jns
jmp
scas
loopne
jnp
ljmp
dec
mov
add
test
popf
inc
adc
mov
bound
pusha
fstpl
cltd
insl
aad
add
lahf
mov
hlt
dec
sti
es
arpl
mov
rcrl
pop
inc
sbb
cld
push
popf
pushf
mov
cwtl
addb
lahf
sbb
mov
adc
loopne
rorl
pop
fnstsw
inc
mov
dec
cmpb
push
out
imul
pxor
shrb
push
add
arpl
insl
shlb
repz
mov
xchg
sub
mov
sub
xchg
pop
aas
in
and
jno
sarb
inc
cwtl
or
add
lcall
inc
rclb
cmp
or
rolb
dec
add
xchg
insl
adc
sbb
cltd
insb
test
push
aam
xlat
bound
xchg
dec
sub
lea
lock
jg
or
insl
js
sarb
pop
or
adc
ss
popa
popa
cs
int
lds
test
icebp
cmpl
sbb
fistps
sbb
push
test
add
fadds
ltr
nop
jne
add
sub
adc
rcrb
outsl
sbbl
imul
fbld
or
jmp
pushf
mov
js
test
fwait
cmp
mov
stos
push
clc
pop
xchg
jmp
cs
nop
add
out
add
adcb
test
subl
adc
add
sbb
insl
mov
adc
sti
es
into
cmpsb
ret
pusha
jp
mov
ljmp
push
stc
addr16
add
mov
pop
incb
sbb
int3
push
dec
sar
add
add
popa
scas
push
mov
sub
push
dec
fmulp
sbb
mov
jo
push
addl
popf
mov
stos
in
rclb
outsl
popa
fdiv
mov
pop
mov
jl
addb
inc
jmp
shlb
pusha
stc
and
add
pop
inc
sbb
pminsw
xlat
pop
xor
stc
push
sbb
add
mov
sbb
lcall
pusha
out
and
push
clc
add
push
and
mov
lcall
add
inc
loopne
adc
decb
enter
mov
or
test
aad
push
and
mov
mov
dec
loopne
enter
shll
mov
push
adc
sbb
insl
jnp
shr
add
scas
dec
cmp
lock
dec
mov
mov
and
or
and
jb
scas
insl
sbb
add
bound
call
mov
or
clc
stc
or
imul
sbb
and
pusha
fnstenv
mov
stos
and
clc
add
rcl
fidivrs
adc
mov
cmpl
clc
subl
dec
cmpsl
les
pushf
hlt
in
xor
or
push
lea
add
xchg
incl
insb
divb
mov
pop
push
sub
les
or
faddl
enter
push
cmpsb
pop
addl
sti
lds
xor
mov
ret
inc
or
lahf
mov
sbb
jl
bound
pop
add
ret
lods
jnp
add
imul
jne
cmpsl
jnp
je
add
daa
fdivs
sub
loop
inc
sarl
test
lret
inc
adc
jl
add
xor
lds
and
mov
adc
add
cld
loopne
add
or
aas
jb
test
cmp
pop
xchg
jp
add
popf
in
or
lahf
outsl
and
lods
or
add
inc
xchg
dec
clc
stos
add
ret
test
jg
outsl
xchg
int3
mov
and
int
pop
jo
nop
push
clc
addl
adc
aad
mov
sbb
sbb
dec
mov
orb
out
cli
mov
add
inc
dec
loop
dec
lea
xlat
bound
sub
push
dec
inc
sbbb
dec
ret
sbb
sbb
cmp
outsl
sub
mov
inc
add
mov
jb
test
add
inc
in
or
in
mov
int3
add
sahf
mov
sub
hlt
nop
sub
inc
sbb
pop
add
mov
or
shl
xchg
hlt
xchg
push
orl
pushf
ror
popa
mov
push
cmc
pusha
pushf
rolb
test
xor
and
add
cmp
lahf
jae
popl
insb
mov
daa
pop
fldenv
int
cmp
outsl
subb
pop
cmpsl
shlb
ret
xor
pushf
add
ds
js
nop
mov
inc
xchg
cmc
jbe
mov
or
insb
stos
mov
push
jns
and
lock
je
add
fisubrs
mov
ds
pusha
movsb
pushf
orb
inc
add
xchg
insl
dec
fwait
mov
pushf
add
andb
out
push
jecxz
loop
add
push
aam
inc
mov
gs
dec
fdivs
inc
testb
jo
cli
xchg
fcompl
unpcklps
xor
push
sbb
pop
or
inc
iret
dec
pusha
sarl
jne
add
test
add
imul
sub
sbb
imul
cmpsl
mov
cmp
sbb
scas
jae
pushf
ss
nop
add
push
in
or
aas
add
mov
dec
outsb
inc
js
xchg
mov
xchg
add
inc
das
pop
cmp
insl
das
inc
sub
mov
jle
andb
jne
add
fwait
mov
lock
insl
mov
or
mov
xchg
pop
cltd
adc
mov
or
push
mov
add
dec
sbb
sub
sbb
mov
sbb
arpl
cltd
xchg
js
cmpsl
push
test
cmp
ret
sahf
fsubrl
add
cmc
ret
push
mov
add
dec
bound
rorl
lock
test
mov
dec
loop
xor
inc
out
dec
xchg
cmp
add
jb
xor
push
xchg
loopne
icebp
sbb
pop
add
test
cwtl
and
push
push
sub
cmpsl
insl
sub
es
add
and
clc
rorl
insl
mov
out
and
xchg
stos
or
idivb
mov
inc
adc
push
sub
push
adc
repz
cld
fs
inc
xlat
cmpsb
mov
aad
stos
xchg
add
clc
push
or
jo
add
pop
lds
mov
pushw
outsb
add
adc
or
mov
sub
mov
fmuls
aas
movb
inc
out
and
pusha
mov
sahf
push
test
aam
and
adc
lret
out
out
jg
add
pop
outsb
push
into
xlat
dec
jae
icebp
in
je
loope
mov
jns
data16
stc
das
adc
dec
inc
cld
inc
sbb
inc
cmp
push
lcall
add
xlat
add
or
popl
mov
insb
and
pusha
mov
xchg
movsl
and
stos
pusha
xor
dec
add
rcl
out
push
add
rorb
mov
lds
stc
loopne
add
push
out
inc
adc
jnp
pushf
fsubrs
push
and
adc
imul
sub
pop
loop
add
inc
popf
in
mov
stc
sub
mov
dec
mov
leave
and
mov
jae
sub
xor
outsl
imul
inc
mov
daa
aas
jl
xchg
mov
pop
dec
add
fidivs
mov
adc
addb
lahf
icebp
jbe
pop
outsb
push
popa
pushf
out
push
mov
fwait
push
fbld
fs
inc
jae
cld
or
cmpsb
lahf
or
and
mov
mov
popa
mov
or
adc
test
xchg
inc
pop
add
fidivl
insb
add
cmp
imul
nop
clc
repz
add
pop
mov
mov
call
mov
or
wrmsr
push
lods
cld
scas
mov
mov
and
jge
lock
jo
or
and
jno
dec
jae
add
inc
add
into
dec
stos
incb
imul
mov
fwait
add
or
push
std
adc
and
imul
jnp
push
pop
pusha
pop
jae
jb
pop
xor
cmc
mov
std
push
jg
aaa
cwtl
mov
mul
add
jge
inc
bnd
add
movsb
mov
jl
or
call
enter
mov
addb
mov
fs
leave
enter
repnz
xor
and
add
mov
pop
jne
jp
cli
push
inc
lds
push
pusha
push
cs
xchg
dec
in
dec
sahf
xor
mov
inc
hlt
nop
cs
mov
mov
sbb
lock
fsubrl
or
xor
push
push
jl
pop
inc
loopne
aaa
mov
mov
out
dec
sbb
pop
mov
sbb
or
push
or
cmp
add
xchg
xor
aas
testb
mov
push
push
outsl
test
sbbb
mov
aad
adc
decb
xor
popa
cltd
in
fwait
xor
sbb
xor
add
xor
scas
out
addl
cwtl
in
aaa
out
sti
add
inc
or
cltd
outsb
aam
les
icebp
test
roll
mov
ret
je
es
fs
les
rolb
sti
cltd
sub
inc
pop
push
ds
shl
sub
shlb
std
loopne
add
hlt
mov
mov
add
insl
in
pusha
jg
adc
test
in
mov
in
hlt
and
mov
and
es
xor
inc
xor
mov
rcll
add
into
push
mov
test
cli
add
jb
mov
lret
sub
idivb
sub
ds
in
and
punpcklbw
movsl
mov
jno
les
and
stos
jge
hlt
or
or
fnstenv
cmp
cs
xchg
loopne
xor
das
dec
push
sbb
sarb
sub
shrl
loopne
sbb
jnp
fstp
sbb
loopne
lock
rolb
outsb
test
in
nopl
addr16
mov
push
push
jmp
or
add
lcall
js
dec
push
inc
icebp
mov
push
and
loop
inc
sbb
adc
cmp
das
jo
push
inc
cmp
inc
test
mov
add
jg
sbb
inc
dec
mov
mov
pushf
adc
nop
enter
outsl
add
dec
rcl
dec
int
jno
xchg
mov
repnz
sub
adc
and
iret
xchg
stc
add
cmp
js
lret
dec
push
add
mov
mov
inc
add
dec
mov
jo
add
xor
sbb
mov
aam
movsb
insb
mov
push
push
push
ret
and
loopne
nop
pop
inc
stos
je
sub
or
fs
mov
adc
xchg
add
fisubrl
xlat
nop
cmp
jg
fmuls
scas
insl
jge
cwtl
add
sar
add
test
sbb
aad
test
and
test
insl
sub
sub
js
loope
subb
push
mov
cld
add
push
mov
xchg
pop
add
call
outsb
mov
rcl
repnz
aam
addr16
pusha
xchg
xor
and
divb
adc
mov
mov
outsb
test
dec
xchg
fsubs
sub
adc
xor
mov
fwait
push
mov
std
cwtl
and
inc
adc
cmp
xchg
mov
imul
jb
add
mov
fisttpll
ja
mov
and
pop
sbb
pop
imul
or
xlat
dec
xor
iret
add
movsb
sub
add
cmpsl
push
or
arpl
push
clc
pop
cmp
cmp
test
push
cld
js
int3
sub
jnp
push
insb
dec
cltd
fucomi
adc
sub
out
mov
jne
fs
sbb
mull
adc
mov
shrb
mov
andb
dec
cmp
sbb
bound
ret
dec
and
mov
in
and
or
jmp
out
sbb
aam
push
or
dec
mov
fwait
add
and
xor
imul
out
std
pop
mov
mov
sbb
add
les
sbb
cs
f2xm1
dec
mov
add
clc
lods
mov
xlat
pop
xchg
adc
or
ret
dec
sbb
mov
icebp
add
call
lret
pop
inc
stc
add
jmp
cmpl
inc
call
sub
or
add
inc
jg
imul
stos
push
xchg
sub
push
mov
adc
mov
fcoms
repz
fidivl
cli
rcrb
mov
daa
fdivs
mov
sub
lahf
test
dec
pop
nop
int3
pop
daa
in
clc
add
cmc
popf
inc
pop
sarl
imul
aas
xor
add
pop
loope
cld
in
add
jne
add
dec
rol
adc
pop
inc
stos
icebp
clc
enter
and
clc
lret
in
mov
shrb
popf
movsb
lods
add
cmpl
prefetch
in
cwtl
mov
hlt
pop
sbb
jns
lock
xchg
daa
cli
inc
sub
enter
movsb
mov
add
call
add
pop
test
into
and
adc
clc
repz
add
jle
xor
andb
push
cmp
pop
xchg
out
shrb
jno
mov
or
and
push
mov
fldcw
push
add
std
pop
add
mov
ljmp
stos
dec
dec
out
in
push
fistps
andl
push
mov
jmp
xor
inc
inc
js
cmc
sar
or
add
dec
mov
push
aam
daa
call
int3
push
pop
push
jmp
dec
lds
loopne
pop
std
push
dec
int
daa
push
daa
js
add
push
or
jmp
fcomps
cld
dec
mov
dec
adc
add
xchg
ja
imul
xchg
cmp
cmp
aam
mov
dec
mov
mov
scas
inc
int
les
aad
xor
xor
roll
dec
insl
mov
mov
dec
ja
sbb
loop
js
cmp
push
test
mov
movsb
aam
or
popa
roll
sbb
loopne
and
mov
mov
xchg
sbbb
jns
pop
loopne
icebp
inc
lock
jp
and
lods
add
and
xchg
sbb
cli
mov
dec
inc
cmp
addb
push
adc
scas
ret
pusha
inc
imul
and
or
aam
clc
pop
in
push
fldl
dec
js
fmull
test
inc
aad
incl
cmp
pop
xor
add
mov
xor
or
test
pop
std
and
mov
mov
mov
inc
mov
mov
movsl
loopne
dec
adc
xchg
add
or
adcb
jmp
loop
shll
addb
adc
sub
mov
test
jp
inc
loopne
jmp
adc
add
popl
ret
dec
ds
idivl
cmp
jo
adc
test
nop
inc
dec
push
mov
add
out
mov
push
or
mov
push
dec
std
test
pop
idiv
push
push
add
cmp
bound
inc
jge
add
add
stc
cs
xlat
mov
pop
andl
add
add
popa
mov
mov
cwtl
nop
insl
sbbl
dec
add
fs
arpl
in
mov
sbb
mov
mov
stc
daa
loopne,pt
hlt
push
dec
mov
clc
and
add
jo
sbb
pop
and
push
mov
jbe
dec
add
incb
xchg
mov
imul
xchg
add
daa
lea
push
push
push
rcrl
cld
popa
dec
inc
outsb
fistpl
lods
in
movsb
add
xor
loope
lret
pop
push
out
cmpsl
xlat
push
pop
xor
xchg
cmp
or
push
fs
adc
in
add
int3
mov
mov
fdivrl
sbb
sbb
push
cmp
clc
dec
pop
mov
pop
adc
inc
incl
xlat
imul
fsts
or
mov
mov
mov
lcall
fs
xlat
pop
adc
or
mov
mov
or
mov
inc
rclb
sub
cmp
iret
mov
pop
xchg
add
dec
loop
push
mov
je
arpl
sbb
mov
pop
inc
lret
add
mov
test
pusha
dec
scas
stc
fsubl
aad
add
aas
fs
mov
sub
jo
scas
add
jb
push
jnp
mov
or
mov
stc
cmp
push
dec
lret
cld
add
mov
lods
popf
sbbb
mov
mov
es
out
push
leave
adc
lods
jle
les
mov
push
mov
pop
repnz
pop
push
mov
insb
jge
nop
nop
imul
and
enter
push
sti
test
xor
xor
loopne
adcl
cwtl
fcoml
lret
mov
jae
xlat
call
jne
xor
pop
inc
adc
fs
cmp
push
rcrl
jl
dec
and
add
mov
incb
and
pop
mov
push
mov
lcall
push
hlt
pop
pop
insb
pop
mov
push
rolb
or
fstps
add
xor
mov
add
insl
add
clc
fistps
test
inc
in
daa
dec
sbb
fdivl
int3
or
cli
fsub
in
mov
popf
jo
add
jmp
and
std
lds
mov
shrb
mov
add
mov
mov
pop
test
inc
ja
add
or
inc
dec
loop
pusha
inc
jp
add
dec
xchg
jno
lret
out
add
pop
add
mov
imul
cwtl
or
inc
bound
xor
mov
sbb
sbb
pop
stc
addb
inc
jl
mov
loope
add
cltd
push
std
dec
popa
jo
push
pusha
sbb
add
je
mov
inc
jo
es
pop
dec
adc
imul
xor
in
mov
fildll
enter
mov
or
xor
cmpsb
dec
mov
movsb
insl
addr16
cmp
xchg
lock
push
inc
loope
mov
pop
lret
pop
scas
mov
push
cld
addr16
popf
cmp
ret
pop
js
lcall
stos
add
stos
out
lea
arpl
jno
xchg
mov
adc
dec
mov
jo
xor
test
mov
pop
push
add
fs
hlt
jp
sub
push
pop
pop
sbb
lahf
or
outsb
adc
cltd
cwtl
xor
inc
sbb
xchg
mov
and
push
and
and
pop
inc
cmp
add
jb
xchg
in
add
push
sbb
mov
int3
out
rolb
cmp
sub
in
pusha
xchg
mov
pushf
inc
cmp
dec
adc
dec
push
and
popa
subl
push
pop
sbb
rcll
sub
pop
sbb
jns
cmp
pop
mov
cwtl
clc
mov
rorb
ja
fs
adc
loopne
pop
cmp
lahf
lcall
or
jle
jecxz
mov
insb
inc
fcmovbe
aaa
clc
ret
test
push
mov
or
mov
movsl
cmc
mov
rorb
sarb
addb
imul
or
ds
sbb
subb
xchg
and
pop
rcrb
cwtl
sar
dec
js
cs
inc
or
sbb
inc
int
fs
fsts
stos
incb
jo
xchg
iret
les
out
add
std
push
adcl
pop
or
out
lods
lods
sub
sahf
dec
adc
xlat
add
push
mov
adc
push
or
fdivrl
add
or
or
inc
pop
cwtl
gs
icebp
pushf
cmpsl
push
pop
aam
incb
sub
adc
jmp
in
xor
shl
dec
dec
and
rorb
pop
inc
std
add
xor
inc
jmp
adcl
xchg
jg
inc
psubsw
jge
insb
les
and
je
inc
ss
inc
push
push
mov
fsubs
adc
xor
sarb
mov
push
sub
in
into
push
xor
movsl
daa
xor
movb
pop
cmp
dec
enter
jl
jl
xor
les
pop
addr16
mov
nop
repz
push
push
add
and
inc
nop
ret
outsl
cmp
add
push
mov
dec
mov
push
lock
sub
or
push
dec
jle
xorb
or
cmp
add
popa
lds
repz
mov
inc
imul
out
adc
in
cmpsb
mov
shrl
pop
inc
sbb
ret
repnz
aaa
test
push
outsl
or
cmpsl
ja
int3
lods
push
pop
sub
and
adc
xchg
mov
nop
xchg
es
sahf
pop
jmp
or
lock
dec
push
pop
add
and
lock
xchg
in
movsl
les
nop
rolb
in
mov
mov
and
add
test
fistps
loope
std
and
dec
and
xor
pusha
nop
dec
jne
and
fdivrp
add
push
mov
popf
inc
adc
add
subl
into
lock
je
xor
push
pop
test
fsubl
js
clc
adc
aam
daa
pop
rcrb
cltd
push
push
and
sbb
inc
lock
popf
lock
pop
push
test
stos
add
negb
pusha
dec
adc
aas
dec
outsb
adc
ret
push
mov
push
pop
icebp
jo
imul
sub
mov
dec
add
xor
ds
jo
int
sub
int3
sub
mov
jmp
clc
fnstcw
rcl
add
sbb
arpl
mov
adc
sub
cli
sbb
nop
mov
nop
insb
sbb
mov
test
mov
scas
push
cmpsb
dec
or
xchg
sub
sbb
add
xchg
lods
mov
paddsb
add
add
mov
add
mov
add
or
jge
push
sbb
push
cmp
push
loop
in
lock
adc
cmp
shl
fldcw
xchg
xchg
jg
sbb
clc
lret
dec
mov
popa
std
test
adc
ret
push
mov
add
or
nop
orb
daa
mov
hlt
mull
cmp
test
es
cmpsl
adc
jnp
in
jg
jmp
jno
jns
sbb
add
pop
mov
sbb
add
add
loopne
xorb
adc
mov
inc
aam
stc
mov
lods
dec
mov
call
test
add
inc
dec
int3
and
or
imul
mov
and
loope
jl
xchg
add
inc
aam
push
mov
lds
mov
jno
pop
rcl
mov
cs
lods
les
push
sub
pop
inc
int3
add
sbb
inc
sbb
sub
mov
jns
test
mov
xor
sbb
jl
orb
dec
push
pop
mov
dec
std
or
pop
std
mov
scas
pusha
movsb
pop
lea
xchg
cmp
adc
mov
push
bound
scas
nop
sub
mov
or
sub
and
test
add
rorb
xchg
rol
xor
addr16
cs
in
and
push
adc
repz
pop
pop
push
inc
rcll
pop
cltd
pop
subb
push
mov
mov
dec
rolb
std
cmp
adc
test
dec
rolb
bound
aas
xor
sti
pop
inc
push
lret
xor
dec
cmpsl
in
pusha
popa
rcrb
cmp
fs
inc
loopne
pop
aam
sbbb
js
cmp
pop
sub
ds
dec
push
in
and
adc
xor
xor
mov
add
push
mov
adcl
jle
call
add
imul
sub
push
outsb
cs
sub
sub
mov
rolb
xchg
insl
add
push
pop
getsec
stos
aad
adcb
or
pop
dec
std
and
mov
inc
and
sbb
sbb
add
es
pop
das
and
out
dec
outsb
dec
int3
push
and
push
and
pop
mov
dec
mov
mov
leave
mov
dec
fwait
inc
clc
ja
lds
xor
repz
pop
pop
mov
push
push
or
cmp
pop
mov
and
bound
mov
mov
pop
add
lock
mov
shlb
aam
sub
notb
sub
stc
and
cltd
imul
pushl
lods
cmpb
test
and
push
pushf
or
and
pop
mov
sub
jp
adc
push
xor
mov
xchg
mov
dec
inc
mov
shlb
mov
jno
sbb
orl
mov
shlb
pop
mov
sbb
in
pop
test
cmc
into
or
orb
sti
das
mov
pusha
mov
mov
shll
push
push
call
imul
pop
sti
push
js
mov
sub
jbe
je
mov
pushf
mov
adc
test
and
call
jmp
test
mov
sbb
gs
es
or
add
adc
addb
addl
cmc
stc
add
insb
lahf
dec
mov
adc
pop
or
stc
sbb
mov
or
imul
mov
leave
roll
jo
sbb
repnz
leave
mov
in
ret
push
dec
icebp
ret
mov
xorl
dec
mov
jne
jns
or
int3
clc
sbb
add
jno
in
mov
or
test
inc
shlb
pop
push
daa
jnp
or
inc
adc
in
xchg
or
ret
or
loope
in
test
sub
push
fsubs
add
stc
fidivs
mov
into
imul
add
hlt
jnp
pusha
jbe
xchg
and
mov
push
inc
dec
mov
repnz
adc
mov
cmp
sahf
andps
push
bound
test
jns
popa
add
stc
cs
mov
test
adcl
adc
fs
add
jo
adc
mov
xlat
xchg
test
out
mov
je
sbbb
xor
lds
add
sbb
push
je
cld
or
push
aam
xor
mov
cmp
popa
ret
cmp
insb
cld
sti
imul
and
mov
and
add
roll
fstps
jl
add
cltd
scas
cs
mov
pushf
mov
imull
call
push
inc
mov
insl
shlb
mov
sbb
mov
sub
lea
lock
pop
pushf
adc
insl
jle
andb
xchg
add
loopne
rcrb
cmpsl
pop
add
push
mov
ljmp
jns
repz
repnz
dec
push
and
cs
sarl
pop
cmc
sarb
lods
test
pop
push
add
out
adc
popf
push
mov
push
rolb
add
arpl
jle
fs
inc
xor
and
nop
ja
inc
pop
xchg
adc
dec
dec
adc
inc
loopne
add
cli
imul
out
lock
sbb
add
mov
in
xor
inc
push
dec
pop
sbb
loopne
add
sbb
es
enter
inc
inc
je
sbb
jge
fiaddl
sbb
jg
popa
sbb
sub
mov
dec
inc
cmpb
pop
daa
dec
mov
movsb
roll
pushf
adc
push
sub
pop
or
xor
dec
std
push
out
adc
lock
fwait
sub
mov
rcrl
inc
mov
daa
cld
mov
ret
sbb
inc
movsb
mov
fucomi
pop
rclb
popa
pop
add
aas
xchg
daa
jnp
rolb
xor
dec
das
js
mov
js
out
arpl
adc
cs
dec
std
les
stos
fwait
sbb
sahf
pop
enter
or
clc
jbe
daa
pop
fcmove
pusha
rcrb
xchg
cmp
adc
dec
jno
out
inc
pop
push
and
xchg
movsl
outsb
inc
add
ds
push
test
and
test
stc
ds
insb
addb
cmc
add
adc
xchg
movsl
mov
pop
push
xor
jecxz
sub
xor
sub
rolb
jb
add
mov
lcall
jmp
mov
out
add
adc
cmc
push
daa
gs
inc
sub
adc
sti
es
loop
repz
pop
mov
jmp
sahf
cld
add
aas
cwtl
fs
out
std
jle
repz
hlt
cld
test
sub
add
mov
jl
push
nop
fsubrl
adc
push
ljmp
ret
sbb
mov
scas
inc
sub
mov
or
push
std
ret
jg
push
pop
insb
or
dec
rcll
add
insb
movsl
dec
repnz
xor
jb
sub
lock
js
cwtl
lock
pop
fwait
insl
fmull
imul
cs
add
insb
pop
cmpsb
cmc
je
adc
mov
imul
and
and
loop
subl
push
ret
test
fstp
out
pop
aad
sbb
cs
pop
data16
mov
xchg
cmp
leave
lahf
popf
je
push
sub
sbb
push
xchg
push
mov
inc
clc
mov
int3
dec
xor
rcl
cmp
les
dec
fidivrl
jno
and
xchg
mov
jg
cld
dec
mov
inc
divb
mov
adc
cltd
pinsrw
test
rolb
popa
mov
cmp
adc
rorb
sqrtps
dec
out
je
jp
push
fsubl
add
pop
or
mov
sbb
jmp
lea
aam
or
push
or
mov
add
shrb
add
cmp
add
cmpsb
dec
adc
ljmp
xor
or
add
jns
or
xor
dec
mov
and
sbb
adc
sbb
pusha
cwtl
push
sbb
loopne
or
xor
inc
push
es
sbb
mov
insl
jecxz
sub
dec
js
xchg
push
sbb
mov
cmp
mov
ds
sbb
sub
or
inc
dec
aam
and
lock
sbb
lods
dec
xor
mov
and
mov
int3
sub
jbe
xor
imul
mov
sbb
inc
arpl
or
sbb
sbb
sub
out
movb
or
aam
sub
add
cmpsb
or
or
adc
sbb
mov
sti
inc
andb
jl
or
inc
inc
test
cli
sub
cmp
nop/reserved
jns
or
es
pushf
jno
les
sub
mov
lea
xchg
push
add
mov
adc
mov
call
or
and
and
xor
cmp
mov
push
sub
mov
and
je
dec
xor
subb
loope
pop
js
xchg
popa
enter
or
mov
jp
and
call
repz
adc
add
rorb
or
and
xor
or
add
popf
mov
jp
inc
outsl
ja
mov
jns
sbb
adc
push
adc
mov
xor
js
inc
adc
bound
pop
data16
in
fsubs
push
xchg
adc
sub
leave
cmp
adc
faddl
clc
sbb
xorl
cmc
sub
add
xor
or
xor
flds
push
dec
mov
add
or
insb
mov
sbb
mov
adc
adc
dec
sbb
psadbw
mov
daa
insb
add
arpl
or
sbbl
pop
out
loop
jae
scas
mov
push
jge
aad
lock
fsubrl
call
xchg
push
xor
mov
addr16
xchg
push
cmpsb
adc
cmp
fs
loop
pop
add
xchg
test
jbe
out
lods
push
and
stc
rorl
sbb
out
xchg
mov
sub
push
dec
popa
ja
inc
in
das
loopne
adc
add
pop
std
sbb
pop
testl
xchg
cmc
mov
ret
jnp
dec
inc
dec
dec
dec
subb
mov
inc
sub
mov
mov
rclb
movsb
loop
add
insl
cmpsb
fsubl
cmp
push
test
movsb
cld
cli
cltd
push
adc
ret
ret
xchg
add
jbe
jno
cwtl
fstl
mov
loop
and
mov
adc
incl
mov
mov
adc
test
push
imul
orl
call
dec
mov
jecxz
lods
cmp
and
sub
adc
int
pop
mov
aam
mov
and
mov
inc
add
add
ret
cmp
mov
mov
in
out
cltd
dec
adc
xchg
rclb
mov
xchg
incl
sub
add
jmp
or
add
sahf
bound
jl
sbb
xor
cmp
cmp
push
push
jo
push
enter
or
lret
shlb
add
add
fiaddl
jne
movsb
shll
cld
leave
std
cmp
lds
push
inc
ret
adc
add
daa
and
jne
mov
jge
in
mov
sbb
jne
pop
pushf
and
mov
pop
mov
push
std
mov
add
faddl
inc
sub
xchg
pop
dec
xlat
shlb
cmp
addr16
and
test
or
xor
test
insl
int3
dec
in
inc
and
mov
add
sbb
repnz
or
not
sar
xchg
add
out
cmp
adc
pop
je
rcrl
out
inc
adc
lds
add
out
dec
or
jge
cltd
sbbb
push
add
insl
pop
adc
cmpsl
push
add
sbb
sbb
add
inc
fdivrs
test
push
out
and
jle
add
adc
pusha
jno
lods
sbb
int3
sbb
dec
mov
daa
ja
add
test
add
pop
add
xchg
in
mov
add
lods
pop
xor
or
inc
xchg
sahf
mov
movsb
lods
sub
inc
in
fisttpl
push
or
mov
icebp
add
std
sti
sahf
imul
xchg
xchg
push
sbb
inc
sub
movsl
ds
cmpb
test
xchg
repz
loopne
lods
inc
dec
pop
ret
add
add
adc
fs
dec
and
es
rcll
lds
lods
addr16
sbb
ljmp
dec
std
add
ljmp
mov
push
test
sub
cmc
out
mov
dec
fsts
sub
mov
push
sbb
dec
test
or
inc
or
call
movsb
gs
cmp
and
int3
sub
lods
test
mov
pushf
dec
imul
andl
aaa
cmp
out
sbb
dec
jne
movsl
xor
pusha
sbb
fldl
sarb
test
add
imul
mov
mov
sub
cwtl
add
test
add
mov
dec
sti
adc
add
loopne
bound
adc
hlt
mov
ret
scas
jmp
aam
pop
aam
out
fdivs
jb
ja
movsb
or
pop
lahf
sbb
add
scas
les
syscall
cmp
out
mov
sbb
enter
or
repnz
sbb
and
dec
add
in
cs
sbb
adc
push
repz
mov
in
addr16
cmp
mov
fcoms
mov
hlt
or
xchg
in
jmp
je
inc
mov
inc
mov
out
mov
and
addr16
sbb
push
pop
push
into
mov
sub
cmovbe
ss
lods
push
cs
or
dec
inc
adc
aaa
outsb
push
mov
enter
cld
inc
loopne
or
stos
rcll
and
jnp
movb
mov
mov
fistl
mov
adc
jg
adc
or
adc
inc
cmp
int
mov
sub
data16
mov
push
cmpsb
mov
jl
mov
aad
push
call
lcall
lcall
or
push
jno
inc
hlt
and
in
xor
mov
mov
addr16
fmull
xlat
xor
into
adc
or
dec
pop
xchg
add
dec
or
pusha
fidivs
orl
in
insl
cs
test
inc
fcomip
insb
mov
cld
dec
push
andb
shlb
push
ret
orl
enter
js
inc
and
sub
push
sbb
inc
add
jae
fsubrl
shlb
inc
push
subb
lret
mov
push
fwait
cmpsb
test
iret
inc
frstor
cld
sbb
mov
and
inc
mov
mov
and
lret
push
sub
mov
dec
call
outsb
push
or
pop
inc
jmp
push
dec
fadds
je
popf
inc
jle
xchg
and
lds
addb
pusha
or
sbb
adc
sbb
nop
xchg
fidivrs
mov
lods
or
cmp
ret
pusha
shlb
cmpsl
addb
add
cs
fwait
or
movsb
pop
xor
push
inc
ret
dec
mov
adc
xchg
movsb
add
sbb
cwtl
or
add
jns
or
ret
jl
fdiv
pop
add
pop
jnp
shl
adc
xor
int3
pop
fbstp
fs
aad
fmull
std
sbb
cwtl
stc
movsl
mov
xchg
int3
int
in
mov
mov
pop
push
popa
outsl
pop
mov
mov
nop
sub
mov
add
cmc
xor
clc
aaa
push
cmp
sub
or
inc
adc
out
add
rcll
cwtl
mov
test
add
out
pushf
or
xor
outsb
dec
scas
cld
pop
add
in
sar
popf
dec
test
sub
jg
add
push
inc
sti
test
lock
out
repz
xor
xor
repnz
add
mov
adcb
ljmp
sbb
lret
sub
sub
clc
adc
ja
add
push
xchg
fstl
and
sub
mov
jnp
test
add
push
mov
xor
loop
xor
in
jb
cmp
xorl
inc
shlb
or
inc
cmp
sub
and
lods
add
shll
push
or
dec
insb
jo
pusha
pushaw
jbe
push
mov
mov
cltd
push
ret
and
jnp
dec
dec
fsubr
jbe
adc
add
js
cmpsb
or
out
stos
in
inc
leave
push
and
add
push
mov
mov
cmp
add
or
and
lock
arpl
les
sbb
adc
mov
popa
xorb
sbb
mov
jp
inc
insl
add
sti
xor
rcrl
call
push
aad
mov
push
jle
popa
mov
enter
into
cmp
lldt
pusha
xchg
pop
inc
dec
inc
and
insl
pop
cmp
push
popa
ja
mov
call
sbbb
jmp
add
and
dec
inc
add
cmp
fldl
add
jo
inc
jo
mov
pusha
xchg
and
or
gs
pmaddwd
sbb
cmpsb
push
cld
loope
emms
insl
jle
stc
rcll
mov
inc
sub
cltd
dec
lods
inc
add
dec
dec
test
nop
mov
leave
cmpsb
fwait
push
insl
cld
xchg
ss
stos
sbb
cmp
cmpsb
or
xchg
ljmp
xchg
adc
leave
sub
lods
sbb
test
and
adc
fisubs
filds
repz
add
outsb
or
je
cmc
adc
lcall
aam
imul
xor
iret
loope
push
rolb
push
and
push
cmp
dec
or
sub
pusha
das
nop
inc
sub
sbb
mov
test
repz
das
enter
insl
std
bound
in
xorb
sub
icebp
or
add
cmp
sbb
pop
jne
push
lods
cmp
pop
mov
call
shrb
inc
mov
les
js
sbb
roll
cmp
push
add
dec
mov
and
mov
wrmsr
sbb
outsb
loop
in
inc
packssdw
add
sub
lcall
pop
enter
add
and
adc
add
pushf
cmp
add
movsl
adc
xor
add
dec
repz
jbe
cmpsb
or
jnp
lahf
mov
cmovp
pop
insb
inc
inc
inc
sarl
sub
pusha
movsb
dec
xchg
jb
adcb
add
andb
sbb
mov
dec
push
call
outsb
cmc
pop
mov
xchg
into
nop
cmp
fstpl
push
pop
cmpsl
jge
cwtl
jo
or
dec
fisttps
mov
jnp
stos
push
or
lret
ret
push
xor
sub
mov
or
inc
movsb
adc
jbe
push
or
jnp
data16
pop
or
fsubrs
es
lahf
insl
jge
mov
push
outsl
std
inc
pop
or
adc
cld
cwtl
das
imul
aam
jmp
dec
sbb
jle
fcoms
fistpl
mov
and
aaa
or
xor
mov
and
test
push
pop
fsub
rolb
int3
loopne
insl
xchg
lret
mov
inc
push
inc
and
es
test
clc
jb
lock
pop
rorb
in
jne
dec
std
sub
ret
or
test
mov
sbb
aad
or
jmp
lods
add
lock
push
cmp
jb
jg
dec
repz
pop
hlt
call
jecxz
in
or
sbbl
nop
push
ficoml
mov
popa
xor
mov
push
sbb
jmp
outsb
loope
mov
or
sbb
push
mov
lea
fs
push
push
mov
mov
adc
xchg
sub
push
insl
adc
rorb
cmp
in
add
dec
ror
dec
mov
adc
mov
js
dec
adc
inc
cmovl
test
fdivs
and
test
mov
or
daa
in
pop
add
push
mov
add
clc
sar
inc
mov
enter
mov
rcrb
mov
ret
orl
call
mov
add
xchg
dec
jmp
pop
dec
in
cwtl
dec
es
push
pop
jl
pop
sub
test
pusha
les
xor
cmp
mov
lods
xorl
scas
rorb
repnz
and
inc
xor
add
js
cwtl
mov
test
inc
das
mov
int3
pop
or
sub
in
cmp
subl
dec
stos
sbb
cld
cli
rorl
or
push
cmp
inc
and
inc
sbb
cmp
aad
cltd
sub
in
mov
push
or
addr16
sbb
rolb
adc
ja
mov
sbb
sbb
push
or
in
push
jecxz
insb
jbe
mov
shlb
pop
shl
adcl
out
xor
jmp
cmp
lods
subl
andb
imul
scas
and
dec
in
int3
pusha
pop
imul
cs
dec
push
xor
or
cmp
sbb
sarb
push
in
cwtl
rolb
add
test
roll
out
mov
jl
jmp
aad
test
jmp
push
sbb
std
pop
lds
fbld
inc
xor
mov
scas
jl
add
mov
fiadds
cbtw
add
jp
pushf
aad
fwait
insl
mov
jl
js
addb
mov
mov
insl
sub
stos
push
dec
sbb
push
and
pop
cmp
mov
dec
loop
add
cmp
out
push
and
xchg
pop
addl
ret
and
add
call
pop
push
push
push
jno
sbb
push
ficomps
lahf
aaa
and
jno
adc
and
and
mov
addr16
sbb
mov
inc
push
lret
or
in
adc
mov
adc
and
int3
dec
loope
dec
inc
cmp
popl
xor
sar
into
mov
lds
aam
inc
sub
add
mov
xchg
jmp
fwait
xchg
loopne
push
orb
mov
sbb
loopne
pop
add
ret
mov
or
pop
xchg
push
stos
loope
movsb
pop
dec
sub
mov
xorb
fcoml
testl
jle
adc
outsb
or
pusha
daa
cmpsl
inc
insb
xchg
in
sti
mov
mov
adc
cmp
jbe
pop
push
clc
mov
cwtl
pop
dec
and
mov
pop
popa
inc
inc
mov
cs
cmpsb
add
movsb
sar
cmp
nopl
loop
add
cmp
loopne
aad
add
inc
lret
mov
sbbl
xchg
and
faddl
shrb
nop
sbb
add
adc
add
push
pusha
pop
add
lret
add
shll
lea
in
pop
jae
or
sub
or
lock
jno
rclb
or
mov
add
in
cs
movsl
loopne
leave
add
rolb
loope
cli
loopne
cs
andb
add
cmp
insb
andl
mov
adc
add
add
in
js
adc
push
ljmp
mov
outsb
sub
nop
daa
mov
cmp
ret
nop
or
dec
cmp
adc
add
out
popf
xchg
jge
jo
sub
shll
imul
inc
add
mov
in
or
push
sarb
dec
dec
mov
add
add
jbe
add
sti
push
ret
xor
sub
xor
rclb
out
pusha
lret
cwtl
ljmp
mov
dec
fadds
adc
out
dec
fsubl
rcrl
mov
add
ljmp
push
cmp
mov
and
jbe
push
mov
clc
xorb
cwtl
call
shlb
imul
or
comiss
adcl
pop
push
aam
sub
js
push
adc
fcomi
test
dec
add
push
and
cmp
test
clc
pop
and
subb
and
sbb
lods
jb
rclb
jle
cld
or
imul
jl
lret
or
pop
pusha
shlb
orl
sub
push
lock
test
mov
out
mov
cmpsl
les
jo
push
cmp
mov
lret
add
adc
into
pushf
loopne
inc
adc
je
mov
dec
outsl
xchg
cmp
shrb
ret
les
inc
testl
cmpb
jb
mov
or
inc
fisubs
or
test
inc
cwtl
sub
pusha
adc
sbbb
cmp
mov
lock
dec
rolb
insl
xchg
jge
and
add
mov
lods
add
pop
test
movsb
loopne
and
push
sbb
popa
lock
sbb
inc
rcll
cmp
jecxz
mov
lea
jnp
insb
mov
jae
push
clc
adc
notl
cwtl
add
inc
xchg
call
sbb
stc
ds
xor
dec
test
clc
jns
jnp
ret
js
add
pusha
pop
rorb
les
mulb
in
or
aam
aaa
or
push
jl
faddl
clc
or
shl
cmp
rorb
daa
popf
movl
jne
dec
icebp
push
push
xchg
xchg
inc
sarl
or
lcall
push
sub
jecxz
mov
out
adc
sti
lahf
pop
fdivr
mov
test
mov
sbb
sbb
in
or
mov
test
imul
and
and
adc
mov
enter
pop
jb
inc
xor
and
sub
mov
jle
dec
xor
add
or
movsl
aam
lods
xchg
cs
push
adc
cwtl
loopne
pop
xor
adc
mov
dec
dec
push
and
cs
outsb
sub
jnp
lcall
sbb
popf
mov
jne
add
clc
jge
call
pop
lock
rolb
fadd
sub
sbb
sbb
imul
scas
test
jae
sbb
mov
adc
fcoml
or
push
scas
js
jno
sar
sub
mov
inc
xor
insb
mov
loopne
decb
std
cmp
adc
in
jle
push
pop
mov
adc
cmp
mov
in
add
jnp
inc
sbb
inc
sahf
mov
lcall
cmc
imul
aas
push
push
push
sub
or
ljmp
add
adc
adc
cltd
mov
andb
adc
nop
es
cmp
add
jmp
sbb
dec
enter
mov
mov
dec
lds
push
and
cmp
add
mov
pop
in
mov
mov
or
add
ljmp
bound
pop
jnp
popa
dec
add
adc
jg
inc
dec
jo
pop
jb
push
inc
mov
mov
pusha
pop
sbb
sub
addr16
sub
sub
incb
jecxz
or
adc
lock
pop
out
cs
xchg
xchg
xor
mov
pop
sbbl
adc
jnp
cmp
shrb
and
aas
or
in
aaa
fidivrs
lods
mov
mov
push
xchg
add
jbe
iret
out
js
pop
enter
pop
push
bound
jl
cmovno
xlat
bound
jge
sbb
push
dec
imul
mov
jecxz
lods
pop
into
loope
mov
mov
cwtl
xor
insl
sbb
adc
enter
mov
ja
sbb
test
dec
mov
cmpb
ret
rcrl
ljmp
cmpb
push
lcall
add
add
clc
scas
xor
loope
and
jns
lods
pusha
add
inc
in
outsl
daa
sub
mov
pop
pop
enter
pushf
jl
movsl
iret
mov
adc
xchg
in
mov
scas
jg
adc
pusha
add
inc
adc
popf
sub
and
mov
xorl
jo
outsb
int3
add
dec
dec
push
loopne
call
sub
stc
cltd
test
mov
out
movsl
mov
and
or
pop
push
lret
iret
push
jg
or
mov
mov
pop
scas
sbb
jbe
icebp
push
or
outsb
test
or
mov
mov
jmp
inc
test
loope
inc
mov
fwait
outsl
shrb
std
sbb
test
sub
fists
xor
dec
adc
loope
stos
mov
xchg
call
insl
push
movsb
fdivr
sahf
pop
faddl
mov
dec
call
out
sbb
mov
scas
jge
mov
dec
sub
mov
jnp
inc
lock
lock
lcall
jge
mov
sbb
dec
xchg
inc
lock
adc
cld
and
sbb
pop
imul
xchg
sarl
andb
loopne
repnz
pop
nop
mov
jnp
cmpsb
xor
fcoms
dec
out
inc
dec
mov
mov
mov
jge
jns
dec
cmp
fsubrl
int3
pop
sub
xchg
std
xor
push
push
fsub
add
fucomi
cmp
add
or
fistps
or
hlt
les
loopne
xor
int3
push
fimuls
fisubrl
aam
lret
je
xor
data16
add
push
insl
sub
sub
or
adc
pop
scas
add
sub
pop
jg
push
cwtl
add
pop
int
mov
test
jo
mov
inc
jno
add
xchg
test
sub
loop
jbe
sub
arpl
inc
ret
lock
dec
adc
test
sbb
fidivs
mov
xlat
pop
lret
fadd
pop
xchg
in
loope
iret
mov
inc
cmpsb
jp
or
adc
xor
inc
jmp
pop
mov
sarb
mov
or
dec
mov
jl
or
adc
inc
call
mov
dec
sbb
outsb
xor
jb
call
shl
mov
pop
inc
clc
in
bound
insl
adc
mov
inc
dec
insb
sbb
push
dec
les
test
push
dec
dec
mov
pop
dec
push
rcr
jns
cmc
xchg
or
sbb
and
xor
push
ret
nop
insl
mov
fwait
push
movsb
jge
subb
jnp
sahf
inc
xor
xor
pop
mov
int3
loopne
and
hlt
rep
and
mov
xchg
sbb
subb
or
test
out
push
pop
and
sub
jecxz
test
push
inc
test
outsl
mov
roll
push
dec
test
jge
mov
and
jae
ljmp
add
out
pop
je
js
pop
in
cmpsl
inc
cmpsb
mov
and
fcompl
add
sar
aad
daa
mov
push
out
and
push
int3
les
cmp
aad
ret
add
outsb
aaa
shrb
push
fiaddl
int
adcb
add
mov
xchg
lods
inc
xor
pop
and
out
fdivp
mov
sbb
pop
add
inc
into
popa
fwait
and
add
andb
das
dec
lods
add
gs
sub
and
add
outsb
fidivrs
mov
add
and
sub
dec
xor
add
xchg
dec
test
shrl
ja
lods
loopne
add
test
mov
adc
arpl
scas
pop
test
pop
sub
and
int
popf
nop
push
adc
pop
repz
push
or
adc
add
adc
test
pop
mov
jo
cmp
fcoms
push
sbb
fisubrs
mov
imul
and
fwait
outsb
test
mov
cmp
cwtl
xor
addb
hlt
movl
sub
rclb
in
add
mov
mov
mov
divl
shrb
rol
xchg
xor
test
ljmp
int3
inc
imul
lods
sub
mov
negl
es
jl
sbb
outsb
mov
inc
mov
adc
fs
mov
jbe
jns
mov
imul
notb
push
loope
rolb
out
sbb
nop
je
mov
push
xlat
insb
mov
add
xchg
out
lock
pusha
push
fwait
or
out
mov
int3
mov
sub
add
ja
and
jnp
mov
stc
fwait
add
push
sbb
inc
subps
xchg
adc
and
adc
adc
ror
outsb
jo
fsubs
pop
xchg
mov
mov
pusha
jecxz
aad
pop
out
clc
add
call
stos
sbb
or
and
xchg
jecxz
movsb
cmpb
push
cmpsb
mov
movsb
clc
das
loopne
sbb
pop
loope
sub
mov
dec
jo
sbb
test
pop
jo
scas
mov
or
sarl
dec
movsl
pop
cwtl
clc
fdiv
stos
add
mov
clc
or
mov
and
mov
sbbb
add
shl
loope
sbbb
dec
xchg
pop
les
sbb
inc
push
xor
push
loopne
daa
sub
cs
push
xchg
sbb
out
lods
push
sbb
mov
adc
xchg
mov
icebp
sub
dec
pop
decb
das
push
in
popa
inc
lock
cld
xor
mov
and
xor
or
cmp
push
push
xlat
sub
pop
insb
add
rcr
lods
adc
add
xorb
ljmp
mov
rcr
cmpsb
push
rolb
mov
cmp
dec
push
cwtl
clc
xor
mov
aas
inc
test
insl
faddl
sub
inc
hlt
punpckhbw
mov
inc
mov
xchg
adc
dec
ja
movsl
mov
pop
adc
push
and
sbb
jl
push
and
fcmovbe
mov
nop
je
rcl
fbld
jge
or
sbb
ret
mov
jmp
and
stos
dec
add
adc
push
add
sti
pop
iret
pop
lods
movsb
adc
xchg
push
out
add
add
jo
aad
fists
jbe
aam
xlat
adc
xchg
andl
leave
popa
lret
sub
xlat
or
push
jg
xorl
sbb
mov
js
or
dec
adc
dec
cmpsb
inc
cld
adc
or
sbb
and
stos
clc
rolb
mov
cwtl
dec
test
add
inc
add
test
mov
inc
adc
or
dec
sub
les
test
jnp
or
lret
push
daa
mov
faddl
inc
cmp
pop
and
mov
cmp
cwtl
popa
mov
mov
sbb
dec
lds
int3
add
call
jae
movsl
sub
clc
mov
push
cmpl
sbb
aam
push
inc
adc
in
popa
lock
cld
mov
jae
mov
sub
sbb
outsb
xor
lock
fdivr
pop
mov
sbb
xor
sbb
pop
inc
add
rcrl
xchg
xchg
sub
xchg
mov
hlt
add
jnp
leave
shrl
cmp
pop
fs
sarl
mov
js
je
mov
ret
add
pushf
test
fmull
fcoml
inc
mov
in
call
xchg
add
cwtl
bound
add
mov
fwait
ds
mov
roll
sbb
ficomps
inc
cmp
adc
shll
pop
nop
movsb
ret
test
push
adcb
nop
adc
adc
mov
ror
addr16
adc
add
dec
mov
fiaddl
or
push
inc
jnp
mov
cmpsl
nop
sbb
fnstcw
push
aam
sub
or
out
lea
xchg
cld
sbb
jecxz
cs
lds
add
jnp
inc
mov
and
ret
jg
cwtl
push
pop
dec
dec
xchg
pop
pushf
add
dec
xor
pop
mov
jle
adc
sti
pop
adc
push
sbb
cwtl
mov
xor
add
xchg
mov
inc
test
sbb
shl
das
jo
dec
add
inc
je
xchg
pop
mov
cmp
adcl
mov
add
loope
shlb
sbb
ret
adc
das
mov
addl
cmp
add
pop
sub
andl
add
clc
mov
outsl
or
gs
or
or
jnp
add
mov
loope
adc
mov
dec
dec
and
ds
pusha
mov
or
xorb
pop
cmp
inc
loope
mov
insl
mov
popl
lret
push
push
mov
fwait
popl
push
mov
cmpb
aas
push
lock
and
inc
dec
cmpsb
jne
test
add
js
cwtl
ds
cmp
jge
aam
or
shl
or
testl
enter
adc
test
pop
sub
stos
loopne
inc
mov
mov
or
repnz
pop
mov
test
add
in
aad
mov
out
cmp
xorb
scas
add
test
rcl
dec
xchg
cmp
or
push
dec
push
adc
rclb
sub
mov
xlat
push
mov
push
dec
addb
fwait
cmp
mov
insb
jno
cmp
mov
xor
inc
nop
cmpsb
push
xchg
inc
testb
jnp
mov
adc
jl
jle
pop
loop
lock
mov
lods
inc
sbb
xor
mov
push
add
mov
dec
in
jo
js
outsl
popa
test
push
and
jnp
xchg
js
sub
fidivs
dec
fs
and
or
nop
xor
xor
push
jne
xchg
in
out
mov
frstor
or
add
add
sub
jecxz
outsb
push
stos
sbb
add
pop
and
adc
or
adc
jg
xchg
and
sbb
inc
xlat
nopl
or
pop
mov
idivl
xor
sub
push
movups
mov
cli
ss
and
pop
stos
cwtl
add
fimuls
cmpsl
js
in
or
cltd
insl
ss
pop
mov
pusha
cld
mov
ret
fdivrl
and
je
sub
mov
mov
add
add
ret
repnz
sbb
je
push
mov
fs
push
outsl
add
dec
xorb
adc
lahf
add
inc
jns
sarl
imull
add
lret
pop
lret
jl
cmpsl
push
fisubs
push
add
xchg
ss
add
lds
mov
or
dec
jg
add
int3
hlt
daa
fs
sub
or
push
add
ds
inc
inc
jo
lret
jge
xchg
out
sbb
fnsave
jp,pt
add
sbb
add
ss
push
js
add
daa
insl
dec
add
test
add
and
push
in
pop
adcb
bound
add
cmpsl
fists
jb
out
push
aad
mov
mov
aam
test
and
inc
arpl
and
mov
mov
xor
xchg
push
sub
adc
out
shrb
in
js
add
popf
jae
arpl
jl
push
lret
xchg
pusha
enter
pop
inc
add
or
sbb
dec
nop
lret
imul
ror
inc
orb
xor
lds
mov
xor
mov
lret
add
jle
enter
jmp
cli
leave
pop
mov
dec
mov
add
lret
xlat
xchg
mov
lcall
pop
push
fwait
insb
divb
cwtl
ss
jmp
andb
add
es
jbe
mov
and
scas
add
or
jae
call
fsts
mov
push
and
and
pop
outsl
push
jmp
lock
je
or
shll
daa
loopne
mov
xchg
inc
mov
push
sbb
mov
insb
sub
jge
fstps
add
movsl
lret
orb
add
dec
js
mov
push
lret
test
add
jmp
sbb
addl
subl
sub
sti
xor
push
mov
mov
cmp
loope
jle
cmpsb
jg
add
testl
mov
xor
or
jb
lcall
mov
dec
aam
and
flds
mov
addr16
cmp
inc
cmpsl
push
jb
jno
pushf
adc
inc
jae
daa
cmpsl
clc
cmp
shlb
into
jae
pusha
cmp
push
enter
xor
lods
mov
iret
icebp
push
xor
add
push
lret
adc
out
aam
inc
inc
fdivr
add
dec
cwtl
add
add
lret
popa
mov
bound
rolb
jae
dec
push
nop
je
xchg
push
fcompp
aam
add
stc
es
stos
inc
ds
add
sbb
adc
or
push
bound
js
int3
fidivs
jl
repnz
inc
inc
das
and
adc
mov
and
shlb
fprem
xorb
pop
aam
rorl
pusha
jo
jno
mov
mov
pushf
inc
cwtl
mov
fidivs
xor
add
rolb
adc
stos
dec
loopne
mov
cwtl
les
or
gs
das
fsts
loopne
lret
add
faddl
dec
or
mov
xchg
jo
push
or
jecxz
mov
daa
je
adc
add
xchg
imul
mov
jo
and
enter
or
or
cmp
mov
push
add
stc
pop
imul
mov
sahf
sbbl
es
push
clc
popa
pop
roll
jb
repnz
mov
ret
clc
std
data16
dec
push
and
inc
add
aas
rorl
loop
pushf
jbe
xor
jg
fs
mov
pop
or
push
xor
sub
imul
movsb
jg
decb
jo
inc
fs
sbb
cmp
and
mov
sub
jmp
repz
icebp
adc
in
adc
xor
jae
fiaddl
mov
adc
addb
jb
repz
sbb
cmp
sbb
aam
add
push
shlb
mov
fwait
outsl
and
in
inc
jae
push
test
test
ret
or
xchg
jno
cmp
aas
add
add
insb
or
loopne
insb
mov
stos
adc
rcrl
adc
movsl
mov
fadds
aas
jnp
lock
out
sbb
add
test
jge
and
fisttpll
mov
sub
xor
lahf
loope
inc
or
inc
push
jno
jecxz
add
dec
dec
push
addb
mov
mov
mov
xchg
jl
ret
dec
sbb
xchg
jnp
add
sbb
jae
imulb
fcompl
push
imul
arpl
sub
cmp
mov
js
push
imul
dec
imul
jno
adc
mov
jo
call
xchg
out
filds
movsb
pop
insb
inc
jns
int3
je
add
adc
in
mov
mov
sbb
pop
es
mov
test
pop
ljmp
or
lret
orl
xor
int3
das
fildl
mov
fiadds
mov
imul
xchg
sbb
pusha
xor
aam
jle
dec
loopne
add
out
add
lock
jae
in
add
nop
dec
call
add
sub
or
rorl
cmp
bound
cmp
scas
xchg
dec
pop
in
inc
xchg
lock
jmp
sub
ss
xchg
rcrb
cwtl
adc
imul
mov
mov
mov
jo
andl
mull
adc
xor
hlt
xlat
push
jecxz
and
push
dec
or
in
dec
fidivrl
ss
cld
push
xlat
or
fstl
sub
cmp
rcll
andb
loopne
int
cs
sbb
pop
add
icebp
and
sbb
insl
scas
out
adc
sbb
xor
inc
and
lock
stc
add
popa
loopne
jp
dec
and
inc
insb
mov
jle
mov
add
sub
push
cld
xor
and
fmull
outsl
shl
add
das
lods
sub
jnp
xor
incl
pop
cli
lds
sub
jmp
jl
mov
inc
push
ja
arpl
mov
out
cmp
cmp
ss
and
std
jmp
pushl
shll
mov
mov
or
cmpsb
pop
sbb
fstpt
push
not
pop
xor
mov
pop
shlb
out
shlb
pop
push
cmp
push
mov
sbb
fnstenv
mov
clc
mul
push
movzbw
subl
ret
mov
jmp
or
mov
mov
push
jmp
push
mov
cmp
add
mov
neg
or
enter
sub
mov
pop
add
push
mov
shr
add
loop
neg
add
adc
decb
popf
pusha
popf
push
mov
repz
pop
adcl
shlb
adc
sub
out
add
sbb
add
shll
push
lahf
inc
repnz
mov
fbstp
add
jno
shr
repnz
in
incl
mov
inc
cmp
in
repnz
and
aad
and
shrb
or
jmp
pusha
xor
mov
add
or
xchg
push
pop
lods
push
testb
adcl
jmp
xchg
add
fs
mov
sbb
aad
imul
mov
xor
xlat
adc
add
dec
call
add
pop
xor
sbb
push
mov
outsb
adc
and
or
add
shl
not
jmp
fsubrs
into
push
orl
cmp
shl
adc
mov
shlb
dec
int
sbb
dec
jmp
subb
test
jmp
in
and
pop
mov
push
pusha
mov
push
mov
test
mov
inc
in
push
push
cmp
bound
dec
inc
push
rclb
repz
je
test
inc
dec
loopne
push
dec
fidivs
add
mov
pop
jmp
push
imul
ret
add
push
xor
add
xor
xor
dec
sbb
or
or
sbb
xor
push
out
inc
push
and
inc
sbb
jb
mul
sarb
mov
or
add
jo
mov
push
fidivs
push
daa
pop
or
add
out
std
enter
mov
out
fisubs
add
pop
mov
mov
ret
add
add
fsubs
cmpl
pop
mov
mov
push
popa
call
mov
adc
cltd
imul
sub
add
imul
adc
pusha
shlb
sub
pop
inc
negb
test
addb
shrw
out
insl
push
mov
dec
jnp
sbb
neg
and
mov
loope
inc
pop
xor
inc
mov
mov
mov
ret
pusha
inc
rorb
push
jge
jmp
adc
and
aam
je
sub
jmp
addb
push
adc
adcb
or
or
pop
test
rcll
sti
pop
adc
fwait
and
mov
movsl
clc
jmp
xchg
popa
pop
inc
stos
push
pop
push
push
mov
mov
pop
xor
pop
mov
pop
pop
xor
pop
add
push
je
rsqrtps
fcomi
fistpll
aad
mov
sub
rolb
sahf
sub
movl
dec
add
in
nop
xchg
lods
add
popa
pop
pop
add
ret
mov
mov
add
jmp
loope
pop
mov
sub
cmp
mov
xchg
xchg
fmuls
push
inc
ds
push
pop
es
rcrl
es
lods
push
adc
pop
jl
imul
lret
mov
adcb
lcall
xor
shrb
push
pop
sub
call
andb
mov
and
in
or
mov
push
addr16
popa
call
das
lock
push
popf
test
ss
sub
movl
push
mov
gs
adc
or
inc
and
sub
imul
cmp
or
arpl
fs
add
fwait
cli
sbb
jb
pop
nop
ret
sub
sahf
add
sti
pop
xor
fidivl
push
cmpsb
or
fwait
push
mov
xor
pop
out
xchg
mov
out
nop
push
add
fiadds
sub
xbegin
add
pop
bound
push
incl
or
push
cwtl
push
jmp
adc
mov
rcrl
pop
sub
call
cmp
dec
push
ret
push
lret
add
pop
and
push
out
es
push
mov
loopne
pop
adc
inc
sub
xchg
sbb
inc
add
test
hlt
mov
les
incb
mov
lret
mov
ret
leave
pop
les
add
cmp
or
xor
pop
jmp
mov
sbb
adc
and
mov
push
bound
mov
cmp
adc
pop
cwtl
xchg
push
adc
push
data16
shl
sub
add
sbb
push
xor
jmp
xor
shll
repnz
adcl
xlat
pop
mov
mov
pop
dec
xchg
push
cmovl
push
fimull
and
mov
popf
bound
sub
add
es
push
or
imul
shr
loopne
pop
das
clc
bound
cmp
add
and
push
pushl
sarb
sub
pop
xchg
pop
cld
jmp
out
jp
sub
jmp
sub
or
sbb
push
push
fsubr
jmp
jbe
lret
push
mov
push
and
movlps
add
dec
imul
out
xor
mov
icebp
mov
leave
xchg
cwtl
jmp
add
push
movsb
pop
mov
sub
sub
scas
xchg
jo
notb
je
push
adc
xor
scas
shlb
pop
add
imulb
arpl
and
or
and
pop
jmp
mov
jmp
dec
inc
mov
out
aas
xor
push
pop
inc
mov
gs
xchg
pop
gs
outsl
rcrl
xchg
and
fs
enter
sbb
jge
jae
xchg
incl
call
push
xchg
lea
inc
cmp
jmp
aas
cmp
sti
ror
pop
push
popa
jmp
jle
ret
cmpsb
jmp
adc
sub
jbe
mov
sub
rcrl
pop
gs
add
out
ja
mov
push
leave
jmp
mov
lods
add
cwtl
test
adc
push
dec
scas
pop
mov
mov
gs
jb
ds
or
push
push
pop
adc
mov
loop
ret
add
cwtl
jno
jbe
sar
shrb
in
flds
jns
add
and
mov
movsb
pop
aaa
inc
mov
mov
cmp
cmp
add
rorl
inc
mov
test
add
add
test
pop
aam
add
jmp
lock
enter
pop
pop
ret
cmpsb
add
loope
fldt
pop
mov
add
xchg
arpl
clc
xor
xor
jb
mov
pop
adc
xor
or
push
xor
pop
rorl
push
cmc
xor
loope
pusha
xchg
fists
jl
test
and
aaa
push
dec
shr
dec
pop
mov
sbb
push
xchg
jmp
inc
pop
mov
enter
subb
ja
jp
sub
rol
scas
mov
mov
mov
cmc
fbld
scas
mov
or
push
sub
or
mov
out
jp
int
push
subb
inc
jo
addl
test
pop
nop
or
rcll
pop
mov
mov
push
cmpsl
pop
mov
mov
ret
icebp
mov
or
xchg
fildl
scas
and
dec
cmp
stc
ss
or
stos
add
out
inc
inc
mov
add
jl
clc
or
pop
sub
into
movsb
adc
push
mov
lret
or
sbb
loop
in
push
push
mov
adc
enter
sahf
xchg
push
fsubl
mov
lret
cmpl
and
leave
aad
sub
test
sbbl
jl
add
lock
push
outsl
movsl
test
cmpsb
rclb
pop
push
roll
push
push
mov
mov
xchg
adc
add
pop
ljmp
stos
cmp
adcb
pop
or
pop
mov
or
xchg
test
adc
xor
jl
sub
add
nop
mov
xchg
xchg
mov
aaa
pop
pop
fisttps
icebp
mov
push
sub
mov
pop
sub
add
push
mov
xor
adc
test
call
in
arpl
std
inc
rcll
shlb
add
mov
inc
rcll
jae
mov
mov
gs
mov
daa
mov
stos
loope
imull
jnp
mov
icebp
insb
dec
or
lods
xor
xor
push
mov
xchg
pop
inc
rcl
jb
call
divl
mov
cmp
add
push
pop
xchg
dec
cmp
push
or
ss
nop
cmp
mov
xchg
mov
adc
sbb
mov
or
xlat
mov
or
andl
loopne
adcl
and
dec
cs
or
inc
add
cltd
xchg
ds
cmp
fldt
dec
rorb
xchg
imul
and
subb
mov
push
mov
push
pop
add
and
leave
mov
pop
addl
sub
insb
add
lahf
adc
iret
push
mov
sbb
cwtl
sbb
pusha
xor
lds
jge
push
pusha
addl
icebp
lds
std
add
mov
mov
sub
pop
clc
test
dec
pop
loop
dec
and
lds
or
out
mov
pop
inc
xor
pop
pusha
mov
mov
xchg
imul
inc
xor
andb
icebp
mov
pop
add
pop
xor
popa
shl
mov
or
addb
pop
cmp
les
shrb
push
mov
imul
popf
add
add
xor
or
not
jmp
push
ja
cltd
pop
sbb
sbb
cmp
fistpl
stos
ja
cmc
add
loopne
pop
add
lds
fldenv
daa
negb
rolb
ficoms
cmp
je
add
std
xor
inc
sub
xor
sub
inc
or
mov
adc
add
mov
add
dec
lods
mov
pop
cwtl
adc
add
test
cmp
cmp
cmp
pop
mov
jb
mov
fcoms
adc
roll
pop
sbb
sub
loope
outsb
inc
cmc
sub
pusha
insb
mov
outsl
xor
not
add
repz
outsb
mov
push
mov
mov
mov
adc
mov
smsw
push
mov
xchg
pop
addl
ja
or
jecxz
and
test
or
or
sub
xchg
inc
adc
inc
roll
push
fs
mov
and
jae
pop
test
dec
int3
and
int3
nop
ret
fnsave
dec
dec
adc
sub
jbe
add
xchg
or
fs
push
bound
aaa
shr
aad
sbb
loope
std
push
pop
jmp
jnp
mov
outsl
les
inc
dec
push
push
dec
inc
push
and
inc
push
push
and
test
sub
mov
xor
dec
fsub
cld
loopne
pusha
bound
je
add
sbb
call
loop
xchg
divl
push
adc
ljmp
and
fwait
jb
cwtl
loope
xlat
mov
push
mov
sbb
xchg
push
pop
popa
movsl
add
icebp
xchg
sub
data16
mov
test
dec
xchg
cmp
add
inc
and
push
ds
jns
jae
insb
sbb
push
and
push
mov
mov
pop
dec
fsubs
adcb
lret
xor
jp
stos
lock
push
insl
dec
push
xor
mov
fldenv
pop
xchg
xor
adc
js
sbb
daa
add
ds
pusha
pop
dec
mov
in
es
or
xor
call
ljmp
loopne
xchg
mov
mov
or
fldt
inc
cmp
adc
pop
mov
add
lock
dec
xor
sbb
js
xor
call
xchg
and
sub
insl
push
adc
int
mov
mov
adc
or
out
nop
into
repz
xlat
mov
leave
mov
jmp
xchg
sub
jmp
bound
cmp
pop
popf
ret
push
xchg
shr
add
mov
not
push
mov
push
ja
add
xor
xor
pop
fadd
sti
fcmovb
repnz
xor
insl
test
xchg
cltd
cwtl
push
dec
sub
jnp
insb
and
sub
aas
lret
enter
loopne
xor
dec
adc
std
lods
add
stc
pop
xchg
add
pop
jmp
xor
roll
dec
push
add
push
pop
in
xchg
je
push
pusha
cmc
cmpsl
popa
jns
xchg
inc
scas
mov
push
sub
xchg
jne
sub
push
xlat
jns
cmp
dec
iret
adc
movsl
pop
and
pushf
inc
lahf
add
lods
push
hlt
jae
jmp
jb
sahf
mov
pmaxsw
test
cmp
push
dec
add
push
in
add
out
pop
lahf
lock
or
icebp
pop
ret
pop
shlb
mov
idivl
xchg
sbb
out
jns
enter
sub
fucomi
cmp
xor
cmpsb
sub
gs
stc
jns
jne
pusha
into
push
popf
cmp
inc
cmp
ret
xchg
push
push
cli
and
dec
xor
push
push
push
xor
pusha
inc
pushl
sbb
pop
adc
push
push
mov
mov
xorb
stos
jecxz
pop
push
mov
mov
jmp
in
add
je
mov
and
pop
jae
nop
movl
dec
pop
or
andb
cmpl
push
pop
mov
mov
cmpb
sbb
mov
imul
adc
lcall
arpl
out
pop
stos
imul
popa
push
inc
mov
add
int3
sub
push
xchg
cld
dec
inc
adc
outsb
loop
mov
add
inc
adc
and
pop
les
das
mov
push
cmp
rolb
in
pop
ljmp
xchg
mov
pop
jae
out
das
add
push
jmp
pop
add
rcrl
jmp
push
bound
mov
movsl
int
push
push
cmpsb
ret
add
stos
inc
leave
popa
or
add
xlat
sub
fisubrs
ret
inc
pop
jb
fldt
loope
inc
into
insb
inc
testl
jmp
mov
adc
xor
mov
push
inc
div
in
cltd
sub
cmp
add
xor
add
xor
repz
outsb
mov
gs
or
add
xchg
mov
in
add
lea
pop
pop
add
lods
loope
pop
pop
ds
jmp
mov
push
shr
mov
adc
imul
cmpsl
sahf
push
call
leave
stos
jmp
add
add
int
ja
adc
shll
xchg
xor
mov
mov
push
adc
xor
pop
inc
orl
not
icebp
lret
mov
adc
int3
adc
sub
or
enter
pop
push
out
dec
cmp
pop
pop
nop
fiaddl
andb
pop
movsb
and
sub
pop
push
xor
pop
add
pop
dec
add
iret
fs
fldl
fwait
add
push
push
and
mov
stos
movsb
adc
push
mov
or
xor
mov
aam
mov
jns
sahf
filds
xchg
nop
hlt
pusha
psllw
add
jo
rorl
call
and
imul
cmp
lock
addb
fildl
das
sub
xchg
fcomip
rorl
dec
push
fsubrp
sub
jle
in
jne
mov
pop
in
sbbl
jl
fs
stc
and
adc
inc
add
sbb
sbb
je
ret
jbe
and
and
loopne
not
jnp
es
movsb
add
clc
add
sbb
sub
roll
popa
xchg
fwait
sub
sub
pusha
pop
sahf
push
arpl
nop
inc
sub
insl
int
aaa
loop
icebp
sub
jl
outsl
stos
or
stc
adc
mov
inc
xchg
push
sbb
cmp
jmp
rclb
das
test
aad
xchg
push
xchg
cmpl
jo
add
cmp
addr16
jecxz
dec
xor
outsl
adc
mov
add
sbb
or
push
xor
daa
sub
push
pop
pop
add
dec
push
jle
in
sbb
pop
add
mov
mov
popa
loop
test
mov
xor
sbb
dec
pop
rclb
add
sub
or
pop
hlt
lds
dec
aad
outsl
or
push
outsb
pop
jp
cmp
cltd
arpl
movsl
sub
push
add
push
mov
int3
call
repnz
insl
push
sbbl
lods
clc
js
adc
pop
add
loopne
jo
dec
lock
lods
clc
sub
jmp
and
cmp
insb
sbbb
ds
cmp
pusha
fs
and
pop
and
rorl
test
pop
jo
mov
add
adc
push
or
sbb
adc
hlt
dec
icebp
mov
stos
bound
add
or
jb
mov
xlat
in
push
mov
mov
andb
add
cli
xor
scas
in
pop
push
xor
mov
sub
dec
repz
pop
in
cmp
push
cmp
pop
dec
push
inc
add
ret
push
dec
mov
out
xchg
movsl
cmc
jo
add
pop
out
pop
mov
mov
jge
sub
pop
xor
stos
movsl
pushf
bound
sti
xor
jl
fs
ja
mov
inc
jmp
sarb
shll
push
inc
mov
mov
imul
pop
mov
jno
int3
cmc
jmp
mov
je
xchg
insb
inc
inc
push
dec
cs
cmp
add
pop
add
pop
push
call
fisubrl
cmc
popf
pop
outsl
xchg
add
cmpsb
sub
lds
sub
xchg
mov
in
sbb
or
insl
mov
das
xor
xchg
std
push
xor
mov
pop
fadd
jmp
hlt
enter
or
sbb
push
insb
sahf
insb
push
sbb
fcoms
jb
fists
or
or
add
pop
orb
sti
jmp
mov
pop
ret
and
test
outsb
mov
mov
jmp
jmp
dec
test
add
shr
rcl
test
mov
fsubrs
cmpl
cmp
push
or
js
xchg
adc
mov
push
nop
or
jbe
jnp
and
adc
imul
sbb
iret
cltd
adc
loopne
or
ret
repz
cmpsl
push
pop
icebp
sbb
or
orl
out
pushf
es
xchg
xlat
aaa
cld
test
icebp
xor
scas
jge
lock
loop
pop
fnstcw
addl
lods
sub
sahf
jp
cmp
outsl
push
add
sbbb
add
jge
rcrb
adc
cld
aas
lret
int3
outsl
adc
notb
shl
popf
bound
xor
adc
mov
shll
add
ss
push
mov
or
and
sbb
xor
pop
sub
sub
lea
push
rorb
mov
dec
add
mov
mov
pop
sub
mov
movsl
pop
sbb
add
jmp
imul
fwait
int3
mov
jmp
lahf
add
xchg
rcrb
add
push
jmp
pop
es
push
ret
add
loope
add
out
aas
lods
xor
push
std
add
shrb
fcoml
sub
push
lcall
and
fsubl
aaa
lods
test
cli
outsb
jecxz
int
xchg
cmp
dec
nop
js
mov
pop
sbb
pop
cmp
xor
push
xchg
add
push
arpl
xor
mov
xchg
and
subb
push
xor
dec
add
add
out
adc
sar
ret
jg
xor
or
dec
push
les
or
mov
xchg
pop
mov
orb
inc
and
stos
jne
xchg
push
mov
mov
dec
and
sub
sub
arpl
enter
mov
mov
add
icebp
pop
xchg
pushf
add
pusha
add
jb
inc
orl
ficomps
loope
cwtl
sarl
aam
subb
mov
dec
sub
push
sahf
or
fisubl
push
add
hlt
or
adc
sbb
lahf
sub
out
sahf
sub
or
mov
fstpt
xor
and
jno
or
jl
dec
aas
jbe
push
cmp
cmc
dec
fisubl
push
push
clc
and
inc
inc
mov
cwtl
bound
sbb
push
test
inc
ret
xchg
imul
pop
jo
push
jmp
jno
sti
xchg
xchg
or
jo
bsr
lcall
mov
xchg
sub
push
int
sub
jns
dec
or
enter
fildl
push
inc
dec
pop
jmp
cwtl
popa
fs
add
shl
pop
cmp
push
rol
aam
rcrl
add
ret
rcll
xor
dec
xadd
pop
in
insl
repz
mov
les
or
sub
mov
xchg
mov
jo
xor
hlt
push
add
imul
loop
out
outsb
bound
popa
fisttpll
sub
in
xchg
jmp
pop
dec
push
sub
sbb
jge
enter
pop
cmp
fcomps
or
adc
sbb
insb
xor
not
cwtl
imul
clc
iret
dec
das
rcl
les
sub
ss
imul
mov
das
add
dec
movsl
cmp
iret
push
cmp
jge
push
mov
ss
add
aas
loope
and
add
jnp
psrlq
mov
std
or
jle
push
mov
inc
cmp
into
jmp
jb
aad
jmp
jmp
sbb
push
mov
imul
rcrl
push
inc
call
pushf
sub
push
or
mov
out
mov
inc
fnsave
jle
loop
adc
sub
fs
add
jno
and
and
test
pushf
push
pop
and
in
int3
cmp
or
rorb
jl
loopne
mov
in
dec
pop
jne
pop
push
pop
shll
jmp
push
in
cmp
lret
dec
inc
mov
icebp
sbb
movsl
rolb
cs
mov
lods
or
leave
and
add
cmc
nop
jne
jle
cmpsb
in
and
lods
imul
mov
daa
ja
xchg
fsubrl
xchg
mov
ljmp
insl
pop
les
int
pop
xchg
sub
cmp
dec
jmp
or
cmp
mov
movsl
outsl
pop
mov
xchg
repz
cmp
mov
inc
mov
js
and
and
cmp
jmp
push
arpl
loope
inc
sub
outsl
aam
inc
insb
negb
pushf
pop
and
popf
nop
push
or
les
ja
add
sbb
fcoms
cmp
js
rcll
int3
add
sub
pop
fs
fistpl
lock
mov
imul
push
mov
xor
negl
xchg
stos
rep
aaa
aad
mov
sbb
enter
cld
jecxz
cmp
xchg
cmpsl
dec
or
push
mov
icebp
outsl
test
popa
push
xor
test
pop
inc
outsb
adc
and
jp
ret
insl
xchg
add
lret
movb
push
or
sub
xchg
sbb
pop
jns
sbb
jmp
push
dec
inc
pop
add
jo
jmp
push
aas
push
shl
leave
psllw
mov
mov
mov
mov
into
cmp
mov
vpaddusw
fstpt
pop
cmpb
or
xor
push
loope
push
xor
scas
dec
adc
les
mov
add
cmp
and
push
dec
jmp
pop
fnstenv
mov
xor
dec
pop
add
mov
add
and
clc
jno
dec
sub
and
daa
xchg
push
sarb
pop
sub
mov
sub
pop
adc
rcrl
cmp
and
xchg
mov
scas
cld
mov
mov
mov
sbb
add
es
call
out
test
pop
aas
inc
push
xor
add
clc
andb
call
mov
iret
sub
add
push
cmp
rcl
mov
div
test
cld
cs
dec
enter
add
lret
iret
addb
jnp
sbb
add
sbb
negl
xor
dec
sub
add
inc
jne
lahf
xor
sub
jbe
clc
add
test
cmpsl
add
roll
pop
sub
adc
xor
lods
loope
adc
cmp
ret
iret
and
cmp
cmp
add
scas
fs
add
mov
jo
jmp
pushf
lret
les
loope
add
lods
sbb
lock
imul
sbb
or
xchg
mov
pop
xchg
inc
stos
and
or
pop
xor
adc
fdivs
jmp
inc
nop
xchg
pop
add
sub
gs
lods
push
jmp
fsubrs
mov
clc
mov
mov
stos
lock
and
xchg
add
jmp
sahf
fs
rcrl
shrb
ret
mov
dec
arpl
or
fstps
in
aad
mov
pop
in
jne
shll
xchg
rolb
int3
and
in
pushf
test
mov
push
jmp
not
mov
orl
push
mov
fsub
add
push
mov
or
adc
hlt
ffree
pop
pop
sti
cmp
lods
jecxz
inc
adc
push
xchg
inc
scas
sub
mov
inc
jb
aaa
jmp
mov
pop
and
jne
js
jmp
cmp
cmp
add
in
mov
pop
rorb
cmp
sub
push
xorl
xchg
or
sti
mov
or
mov
mov
pop
repz
sub
lods
push
xchg
fcomps
fbld
or
add
mov
ret
sbb
mov
pushf
push
repnz
adc
jmp
adc
or
shr
test
idiv
jle
mov
stc
sbb
inc
or
xlat
jmp
pop
push
mov
test
and
mov
add
iret
ja
jmp
out
add
sbb
mov
push
call
in
cmpsl
lret
icebp
rorl
shll
mov
push
push
push
add
fwait
loop
imul
aas
sbb
ljmp
or
pop
xor
push
pop
dec
pop
adc
push
jp
xchg
mov
jle
jmp
pop
sub
pushf
push
and
pop
sub
pop
int
sub
cltd
ss
lock
mov
pop
notl
mov
lcall
push
mov
test
aaa
and
add
mov
cmp
mov
jmp
pushf
or
cli
jne
sbb
icebp
xchg
dec
scas
imul
or
jle
dec
or
sub
mov
jne
push
dec
scas
jg
dec
repnz
add
cli
or
ss
subl
inc
push
lret
int
in
popf
dec
sub
mov
inc
jmp
mulb
add
xchg
sub
adc
push
test
inc
jg
nop
push
outsb
aaa
add
push
jl
out
jnp
xorb
jmp
dec
popf
mov
dec
int
and
mov
or
cmp
xor
sub
jnp
jmp
adc
mov
jle
jecxz
jbe
lock
sub
adc
addr16
jg
fidivl
add
cmpb
mov
pop
adc
roll
jno
dec
add
fcompl
dec
jl
xchg
and
mov
or
daa
test
mov
int3
hlt
nop
rclb
push
jne
or
mov
imul
lds
mov
bound
mov
js
cmovns
fildl
sbb
test
push
add
fs
xor
popa
jnp
jbe
push
add
sub
std
inc
or
mov
imul
bound
popf
fwait
mov
flds
in
adc
repz
or
push
jae
lcall
xor
jle
sub
inc
fmul
add
jno
sub
inc
dec
pop
js
or
xchg
dec
stos
sahf
xor
xchg
jg
mov
xor
es
or
out
cmp
add
orl
mov
scas
sub
out
das
fwait
sub
cmp
cmc
pop
jmp
or
out
or
add
push
pushw
jmp
mov
dec
pop
jmp
repz
push
jecxz
vcomiss
sbb
mov
fstpl
lcall
pop
adc
or
mov
pop
push
jmp
push
xchg
adc
int
add
push
inc
lret
pop
push
adc
mov
cltd
pop
dec
sub
mov
cltd
and
pop
lret
lea
out
or
and
jo
xor
inc
or
pop
nop
leave
or
ljmp
enter
aad
xor
or
ljmp
mov
inc
push
dec
add
inc
xor
pushf
js
push
add
push
popa
or
test
pop
fidivrs
xlat
loope
jae
jno
loopne
add
jbe
out
dec
add
das
test
rcrl
xor
das
sahf
das
inc
ret
rcrb
lret
mov
inc
add
pop
jl
add
jae
int3
push
out
sub
aas
popa
lret
jmp
imul
data16
cld
xchg
lds
push
push
xchg
rol
repz
inc
test
jb
out
sahf
cmp
incb
in
add
mov
ja
rcll
mov
cmp
ret
push
push
push
mov
leave
push
clc
dec
add
daa
sub
clc
clc
dec
into
push
dec
and
mov
mov
pop
adc
adc
sarl
push
cmp
or
adc
jb
not
mov
jae
push
fwait
cmpsl
mov
lea
cmp
xor
push
mov
leave
and
push
push
pop
dec
sub
dec
and
and
xor
bound
jge
add
fcomps
je
and
adc
in
xor
clc
inc
outsl
fcmovb
lock
pop
fdivrs
xchg
xor
pop
jmp
lahf
or
pop
push
inc
push
mov
mov
not
jo
ja
std
mov
jl
scas
push
push
push
mov
dec
xlat
dec
push
iret
cld
add
pop
jmp
and
cmp
mov
add
dec
sub
push
sub
enter
in
stos
std
pop
pop
mov
fwait
paddd
les
aad
icebp
out
xchg
or
pop
jmp
mov
hlt
xchg
dec
aad
xchg
pop
and
sub
dec
popa
outsl
dec
shl
fs
inc
add
pop
adc
jnp
pop
neg
orl
addr16
jle
sbb
out
loope
and
cmp
clc
repz
repz
push
push
cmp
cli
pop
add
rorb
lcall
pop
mov
xlat
in
sub
imul
add
pop
jmp
xor
test
cvtps2pi
daa
sub
movb
adc
cld
mov
pop
mov
mov
jmp
cld
xor
mov
adc
mov
into
jmp
orb
pop
xor
test
or
scas
jno
mov
sarb
adc
sub
mov
fucom
inc
xchg
jmp
or
aam
sub
and
cmc
xchg
cld
fisttpll
cmp
xchg
pop
inc
add
movups
int
test
int3
in
sub
cmp
push
adc
test
jmp
shr
data16
inc
sti
orl
jae
arpl
adc
xlat
jecxz,pn
icebp
jp
and
insb
repz
out
loope
xchg
test
or
sbb
stos
scas
and
push
mov
dec
mov
cmp
sbb
insb
or
sar
jo
sub
and
iret
les
in
ret
add
mov
jno
popf
ljmp
movl
pop
ret
int3
sbb
sbb
cld
mov
sub
jmp
shll
pusha
fldl
dec
in
or
and
lcall
xor
add
jmp
shrl
cmpsb
add
test
push
dec
in
jbe
mov
push
and
stc
enter
cld
fsubs
push
add
inc
or
xchg
sub
fnstsw
out
pop
bound
dec
data16
add
jecxz
int
jl
jge
lea
and
bound
popa
in
xor
pusha
insb
ficompl
xor
adc
push
cs
mov
ds
push
addb
in
sbb
fistpll
icebp
lods
sub
push
add
shr
nop
movsb
sub
mov
jne
mov
clc
cwtl
add
cmp
inc
pop
leave
mov
test
pop
mov
jle
adc
cmpsb
out
push
push
mov
mov
adc
fisubs
pop
lea
push
sub
add
sub
out
mov
cmp
sub
and
dec
and
icebp
arpl
mov
xor
pop
outsl
jmp
repz
fs
test
insl
int
add
cwtl
mov
mov
push
je
xchg
or
fs
push
jecxz
out
adc
icebp
loope
cmp
sbbl
jle
ret
cmp
pop
xor
cld
cmp
out
pop
and
push
lahf
pop
cmpsl
jg
sub
jecxz
loop
push
mov
pop
mov
cmp
fisubrl
push
mov
push
pop
loope
dec
ficompl
mov
cmp
es
cmpb
add
loopne
jmp
mov
cmp
xor
jo
in
pushf
pop
out
sbb
fimull
jmp
mov
or
cmpsl
or
inc
or
jl
xchg
jb
mov
imul
xor
or
push
push
jle
jl
rolb
inc
push
push
jnp
add
mov
daa
loop
jmp
jp
and
pop
inc
mov
xchg
add
aad
pusha
cmc
push
cmpb
jmp
jl
test
test
sbb
mov
pop
xchg
dec
pop
mov
add
dec
cmp
push
lcall
xor
sbb
cwtl
or
pop
pusha
cltd
cmp
adc
cmp
sub
inc
sbb
pop
dec
mov
jbe
out
test
or
adc
xchg
or
jnp
loop
push
push
add
pop
sbb
test
sub
aam
jmp
or
or
sbb
adc
jno
into
inc
and
jbe
cld
mov
jb
cs
rorl
adc
aas
add
xor
and
das
pop
xchg
popf
lcall
add
pop
sbb
mov
pop
bound
mov
push
mov
sub
pop
in
lock
sbb
sti
add
pop
jmp
add
xchg
fisttps
out
leave
ret
sbb
adc
xchg
dec
jl
add
jmp
jmp
adc
push
fwait
and
add
stos
lahf
fsub
nop
lds
out
dec
cmp
xor
pop
add
pop
lds
mov
push
push
pop
test
mov
jl
cmp
mov
outsb
mov
rol
and
loop
inc
sbb
push
xlat
lret
nop
xchg
sub
cmp
dec
lret
sub
ret
or
hlt
lods
popa
ja
cld
push
mov
nop
pop
xor
mov
psubw
xlat
xchg
pop
push
xor
mov
aas
pop
movsl
fadd
lods
addr16
add
mov
test
mov
jae
sahf
mov
jmp
rorl
in
cli
or
dec
pop
arpl
in
cmp
dec
push
inc
xchg
xlat
lea
mov
jns
jbe
cwtl
jnp
sub
and
add
xor
nop
das
push
ret
and
prefetchnta
clc
adc
pop
or
repnz
in
adc
xor
dec
not
popa
lea
sub
ret
lahf
push
ret
push
pop
mov
and
rclb
gs
dec
js
mov
dec
sbb
in
pusha
adc
inc
lcall
sbb
repnz
cld
in
cwtl
push
aas
pop
push
mov
pop
aad
mov
shr
add
or
xor
out
in
push
push
popf
and
aaa
add
out
sti
js
daa
data16
adcl
sahf
sbb
imul
cli
xor
lea
cmp
inc
jmp
mov
mov
xor
pusha
call
dec
mov
jns
cmp
adc
pop
add
repnz
mov
push
mov
adc
push
in
mov
push
mov
dec
out
mov
testl
adc
shll
jmp
subb
xor
mov
ja
add
sbbl
mov
cs
dec
inc
imul
or
dec
mov
add
repz
mov
cmp
dec
cwtl
or
es
outsl
fs
ret
mov
daa
adc
pop
dec
push
stos
inc
push
or
add
fs
ja
adcb
mov
push
out
or
xor
icebp
sub
xchg
jb
clc
cmp
pop
daa
xchg
aas
cmp
xlat
sbb
cltd
repz
add
lret
lahf
sbb
lret
pop
adc
and
in
test
mov
adc
pop
dec
xorb
and
inc
test
loop
in
adc
jo
xchg
jae
jge
pop
mov
add
les
pop
sti
orl
adc
xor
sub
jmp
adc
sub
push
mov
sub
shl
popf
jmp
mov
add
movb
arpl
cmc
add
sub
pop
push
push
dec
pop
jo
jmp
sub
cmp
lea
push
push
push
in
push
jae
add
sbb
xor
push
sub
mov
xchg
xor
adc
or
push
xor
lds
aam
stc
in
push
lea
leave
push
cwtl
jmp
cmp
sbb
mov
inc
push
xchg
xor
mov
add
hlt
or
jmp
xchg
and
and
lea
mov
call
mov
ja
loope
dec
push
fsubrl
stos
xchg
and
and
add
and
sti
loop
dec
jnp
call
jl
add
pop
mov
cwtl
sbb
scas
sub
sbb
xor
push
repz
loope
jg
sbb
loopne
movsb
mov
inc
ret
or
pop
pop
push
pusha
push
mov
xor
pop
add
sub
fst
jmp
add
repnz
rcrb
or
xor
sub
xor
outsl
pop
sti
test
test
shll
call
jmp
mov
pop
xchg
mov
add
push
sub
add
das
outsl
test
sti
add
jae
nop
dec
pop
popf
adc
dec
lret
stc
rolb
cld
push
movsb
stos
popa
and
mov
sub
sub
in
jge
cld
repnz
pop
cltd
push
xor
inc
add
mov
fisubl
lret
adc
or
or
push
push
jmp
pop
pop
neg
jne
insl
mov
lock
pop
sub
jle
add
jns
jmp
jmp
aad
subb
xchg
je
inc
mov
jmp
lret
pop
daa
adc
jmp
out
add
std
fwait
test
pop
jmp
sub
mov
add
xchg
idivl
popf
imul
pop
adc
jmp
pop
cmp
adc
icebp
cli
pop
push
lds
popf
pop
adc
mov
out
in
sbb
sti
and
jmp
cmp
enter
mov
sub
push
out
add
and
daa
push
xor
pop
jo,pn
sbb
adc
jg
xchg
adc
jle
push
add
pusha
add
adc
inc
sub
popa
push
and
fiadds
or
adc
push
imul
pop
popf
mov
mov
daa
insl
jle
mov
sub
pop
sub
lret
adc
aaa
jbe
pop
sub
das
cwtl
jns
dec
in
and
pop
xchg
push
fcom
push
and
into
xchg
add
decl
dec
pop
and
and
nop
movsl
femms
push
push
inc
lret
into
xor
sbb
xor
xchg
add
imul
mov
push
stos
mov
mov
mov
loop
xchg
test
psrlq
pop
push
jecxz
adc
rol
mov
sbb
inc
push
mov
sub
shll
or
jp
xor
dec
jbe
push
dec
sbb
sarl
adc
add
fs
mov
cltd
jl
sub
or
jmp
or
push
sti
aaa
xor
push
inc
popa
and
fincstp
loope
xor
pop
add
or
dec
scas
cmpl
in
out
in
pusha
add
jne
cmp
scas
push
les
cli
in
daa
jae
fsubr
xchg
xchg
pushl
push
les
mov
add
push
inc
repz
adc
daa
push
pop
fprem
mov
or
push
add
test
mov
or
add
loope
jb
int3
push
cmc
sbb
pop
mov
ljmp
fcomp
xor
bound
dec
icebp
repz
push
xlat
xchg
int3
push
jle
pop
in
cltd
daa
push
insb
sub
test
jae
pop
xchg
inc
cmp
pusha
mov
movsl
push
mov
and
jp
mov
div
cli
sbbb
and
add
push
jmp
test
subb
and
push
sahf
mov
into
cmp
aaa
mov
lcall
add
mov
push
dec
mov
fs
adcb
adc
adc
cmp
or
push
call
into
sub
enter
jmp
sbb
out
movsl
fs
sub
inc
mov
jne
lock
pop
shr
add
adc
movsl
xchg
inc
fucompp
pusha
stc
aam
add
out
xor
jmp
out
dec
cmpsl
add
pop
cwtl
lods
ja
mov
sub
add
es
pop
cltd
add
fucomip
outsl
mov
inc
jge
sub
adc
or
pushf
aaa
test
xchg
or
andb
inc
or
pop
hlt
adc
dec
out
leave
pop
test
fisttpll
xor
lahf
adc
inc
scas
cmp
jp
push
cwtl
xchg
sub
add
out
xor
ljmp
dec
dec
mov
jl
cwtl
stos
popa
xlat
out
insb
jmp
aaa
popa
cwtl
fdivrs
mov
adcl
mov
mov
mov
and
pop
inc
jmp
pop
push
add
mov
sbb
push
or
inc
xor
out
mov
mov
insl
add
adc
pop
and
dec
addr16
or
roll
pop
repnz
in
ljmp
adc
sahf
push
or
daa
mov
sub
mov
adcl
das
adc
push
leave
call
adc
push
sbb
xor
or
jmp
cmc
popf
cltd
sub
cmp
sbb
mov
fadds
mov
daa
ret
and
out
add
jo
or
inc
xchg
xchg
sub
pusha
lds
sbb
xor
fimuls
adc
pop
mov
xchg
test
mov
jmp
or
dec
pop
sub
lods
sub
sub
iret
jmp
sti
ljmp
or
rcrl
addb
adc
or
push
jmp
inc
jnp
mov
pop
sub
daa
dec
add
int
or
lret
mov
push
mov
jle
sarl
push
stc
add
jmp
imul
jb
jb
mul
jmp
lcall
pop
fwait
shll
stc
pusha
pop
mov
call
jp
or
xor
jae
sub
ss
pop
jl
pop
rorb
jne
push
push
fsubr
cmpsb
dec
mov
pop
sub
xor
or
add
xchg
mov
out
or
sub
popa
or
sbb
pop
mov
popa
imul
outsb
xor
emms
cmc
or
fists
push
push
mov
and
addl
rolb
out
lock
or
dec
idiv
pop
ds
pop
in
or
mov
loop
add
pushf
sub
cld
or
pop
filds
push
jmp
lret
jo
adcb
mov
stos
dec
in
mov
push
pop
dec
ficompl
mov
aad
mov
dec
cmpsl
push
xchg
jmp
push
pop
xchg
mov
push
inc
add
pop
popa
jmp
fs
inc
mov
lahf
ret
push
push
inc
jmp
repz
arpl
jecxz
jns
pop
jno
hlt
mov
mov
or
mov
xor
lods
mov
lock
icebp
lods
push
xor
cvtps2pi
lret
push
movsl
sub
jae
cmp
inc
mov
pushf
aas
push
add
sub
add
lea
sbb
or
jmp
loopne
and
add
mov
dec
test
mov
pop
pop
ja
xchg
push
lret
lds
int3
dec
push
mov
ljmp
xlat
pop
and
dec
in
mov
sbb
addr16
movsl
bsf
add
fdivs
ret
cmp
loop
pop
pushf
add
sub
add
pop
push
pop
scas
mov
pop
sbbb
xor
add
aad
stc
sub
inc
push
fnstenv
jl
es
ljmp
ret
mov
rclb
sahf
push
mov
jl
sub
fcomps
push
mov
add
mov
xchg
ret
sbb
rcll
imul
addl
adc
repnz
dec
movsb
add
lods
pop
rcr
ds
inc
xchg
enter
or
push
sub
add
pop
dec
inc
mov
sbb
int3
aaa
jl
mov
pop
into
or
roll
adc
insl
push
sub
pop
add
or
imul
pop
rclb
and
jl
xor
or
sbb
pop
std
movl
iret
mov
pusha
xchg
outsl
sbb
scas
jmp
adc
pop
push
fistps
cwtl
mov
add
xor
rcr
pop
fldz
ljmp
lea
lods
add
jo
dec
adc
mov
pop
faddp
sub
in
xchg
pop
adc
push
and
mov
inc
fisubs
je
loope
das
shlb
and
xchg
and
outsl
fld
fcoms
add
or
jmp
fnop
arpl
mov
hlt
jo
mov
mov
loop
push
xchg
or
pushl
cmp
push
jmp
ret
mov
nop
ss
movaps
xchg
sbb
popw
inc
xchg
dec
shr
and
push
sub
outsb
jmp
lret
js
add
hlt
lock
mov
push
pop
iret
cmpsl
and
mull
mov
inc
mov
push
ja
addl
pop
popa
add
push
ret
jns
xchg
out
out
add
jmp
xorl
push
out
loop
push
loopne
pop
cmpb
aam
mov
sbb
sub
xor
or
push
into
neg
mov
rcrb
xchg
bound
std
orb
and
fwait
xchg
rcll
cmp
add
rolb
sbb
jo
ljmp
inc
push
cmpsl
lds
sub
dec
mov
ret
gs
jg
imul
scas
hlt
in
push
jo
jmp
inc
lcall
fidivl
and
cmc
and
cmp
pop
rcl
mov
xor
and
inc
jno
mov
gs
add
dec
addl
mov
add
test
sbb
push
push
pop
iret
fidivrl
cs
loop
rorl
iret
sbb
lret
orl
xchg
adcb
add
xor
imul
inc
dec
popf
jno
pop
cmpsl
mov
add
cmp
jecxz
xchg
jmp
xchg
sbb
sbb
movsb
into
pop
pop
subl
pusha
scas
lret
sbb
adc
pop
mov
gs
xor
adcb
pop
mov
mov
in
xchg
inc
inc
pusha
sbb
pop
jmp
das
mov
add
in
push
dec
push
inc
add
dec
jg
mov
outsb
mov
xchg
and
and
fdivrl
push
mov
mov
out
xchg
repnz
mov
decl
iret
ljmp
xchg
push
mov
mov
leave
jl
or
pop
dec
hlt
fs
sub
orb
pusha
fwait
pop
shrb
xchg
dec
lock
xchg
cs
mov
sbb
jo
mov
repnz
add
push
fcomps
cwtl
cmc
xor
jno
ret
and
inc
test
mov
add
xor
jmp
ficomps
add
enter
test
pop
dec
jne
pop
sub
push
xor
cmp
rolb
pop
loope
xor
or
xor
and
cmpb
in
cltd
out
or
clc
gs
lret
sbb
cld
xchg
shrl
aas
lret
repz
rcrl
sar
fimuls
jl
dec
inc
mov
and
aam
mov
xchg
verw
cmp
add
bnd
and
xor
add
jno
jbe
xchg
ljmp
or
push
pop
hlt
insl
pop
data16
aaa
popf
dec
jb
inc
adc
lods
rcrb
popf
bound
rolb
pusha
enter
mov
sub
bswap
ja
pop
test
shl
shr
push
push
jmp
dec
add
add
movsl
add
dec
fisttpll
out
or
add
ficomps
out
push
dec
xor
out
pop
test
sarb
jmp
shrd
adcl
outsb
xchg
sub
sarb
push
and
jmp
lret
insl
adcl
cmp
ficoms
push
jmp
pop
jg
or
xor
pop
cmp
icebp
push
ja
into
int3
or
jo
imul
or
jmp
xchg
mov
add
outsb
or
outsl
cmp
out
mov
popa
ja
sub
or
call
add
outsl
and
push
mov
sbb
rorb
and
pop
and
mov
inc
xchg
ss
and
orl
fists
inc
das
push
sbbb
adc
mov
sbb
popa
or
dec
aas
movsl
and
lret
or
nop
jmp
xchg
inc
stos
xor
jge
push
add
mov
xor
nop
test
dec
pop
add
xchg
jmp
dec
push
adc
mov
call
lcall
mov
adc
movsb
push
movsl
negb
adc
or
hlt
inc
punpckhbw
int3
outsb
sub
shrb
pop
std
repz
xchg
and
sti
fisubs
dec
pop
shrl
inc
pop
cld
jg
mov
fistpl
cmpsl
jmp
into
rorl
xchg
sub
sub
bound
nop
test
push
xchg
dec
and
aad
repnz
ror
pop
addb
xchg
pop
sub
and
mov
popa
out
pop
push
push
lods
and
and
sub
sub
loope
lret
jno
pop
cmp
shl
inc
pop
and
jl
and
jge
rcrl
negb
dec
pusha
adc
popf
xchg
cmp
mov
xor
pop
push
push
xchg
popa
sub
mov
das
stc
test
sarl
jbe
cwtl
mov
mov
outsl
xor
leave
cwtl
lret
pop
rcrl
aaa
das
xor
rorb
dec
call
inc
das
add
in
cmc
jmp
les
push
mov
mov
push
mov
mov
adc
push
lods
popa
movsb
fistpl
mov
outsl
and
add
push
leave
mov
jp
lods
push
add
cmp
gs
inc
andl
outsb
inc
lret
mov
dec
sub
cmpsl
xchg
mov
int3
push
jp
je
pop
test
push
mov
inc
dec
add
mov
jecxz
out
test
loope
pop
test
xor
or
mov
aam
pop
or
add
fisubl
mov
icebp
inc
or
aad
dec
arpl
sub
clc
loop
in
lock
push
loop
push
pop
cmp
cwtl
mov
test
mov
sub
lods
testl
xor
cmc
pop
xchg
mov
rolb
jb
test
mov
or
lcall
dec
loop
pop
sbb
mov
fcoml
cwtl
lcall
leave
xor
and
and
jo
popf
repz
or
inc
cmp
les
mov
in
shll
ficomps
inc
aad
mov
inc
push
sti
imul
pop
shrb
and
add
ja
xchg
push
lock
pop
inc
jp
fucom
add
invd
pop
xor
cwtl
lods
icebp
pop
pop
xor
push
repnz
cmp
push
hlt
add
add
mov
dec
or
stos
sub
mov
shrb
mov
ret
adc
or
xchg
fsts
shll
or
jge
inc
test
jle
mov
shl
push
and
popa
adc
dec
mov
jl
stos
push
sbb
pop
jns
rclb
pop
in
pop
dec
dec
cmp
xchg
pusha
into
jmp
xor
into
nop
add
jne
add
mov
cs
cvtpi2ps
pop
neg
ret
gs
jns
mov
ret
shlb
test
cmp
lods
sub
dec
or
adc
push
pusha
and
jl
mov
dec
sbb
jnp
das
clc
sbb
push
push
cmp
mov
fnsave
jnp
and
xor
push
mov
sub
pop
repnz
leave
push
mov
push
inc
in
and
bound
orl
pusha
inc
pop
fsub
push
sahf
dec
pop
mov
ret
push
cs
test
xor
xor
inc
push
lahf
or
cs
lcall
lret
pop
fld
mov
les
popa
iret
xchg
enter
into
sahf
lods
out
movsl
fcompl
cmp
syscall
fiadds
jmp
int
test
pusha
sbb
and
adc
lea
xchg
addl
ss
push
adc
and
mov
xchg
sub
sbb
cli
lret
aam
out
mov
js
pop
sar
push
jmp
mov
push
rol
dec
xor
push
push
mov
push
pop
pop
push
add
or
pop
repnz
popf
fwait
mov
jmp
imul
lds
mov
roll
wrmsr
mov
xor
rcll
jmp
or
xchg
inc
cmp
js
or
dec
mov
sbb
xor
mov
push
call
cmp
pop
push
ljmp
xor
xchg
rcll
or
shr
lock
mov
inc
testb
sub
sub
push
dec
pop
mov
mov
push
push
push
popf
pop
xchg
sbb
mov
ljmp
cmpsb
jmp
jnp
fists
ja
pusha
cmc
sub
jnp
push
gs
mov
and
decl
scas
cmpsb
ret
mov
mov
je
adc
mov
jmp
push
push
pusha
or
jp
pop
repnz
imulb
or
mov
push
add
inc
stos
test
outsb
call
popf
inc
sub
jmp
mov
dec
add
cs
xor
jmp
decb
dec
scas
and
mov
push
mov
add
pusha
push
das
pop
lock
jmp
aaa
and
orl
cs
ljmp
rol
sub
jmp
leave
jo
sbb
mov
cmp
lods
sbb
fwait
xchg
and
loope
xchg
inc
mov
push
jbe
add
mov
subb
dec
sahf
nop
and
mov
call
shrl
dec
add
enter
pop
add
add
push
sub
daa
push
add
pop
outsl
popa
add
ljmp
mov
dec
mov
jns
stc
mov
xor
or
pop
jno
je
jmp
pop
sub
xchg
pop
sub
or
cld
dec
inc
rcll
or
jmp
popa
cmp
bound
fcomps
roll
push
add
sub
mov
sub
sub
dec
movsb
test
jnp
push
rolb
mov
ret
ja
out
xor
add
sub
pusha
stc
sub
and
in
movb
stos
loop
xlat
push
mov
sbb
ja
pop
lods
push
sub
push
push
shl
adc
test
inc
xchg
call
sub
jnp
scas
in
cmp
repz
or
and
popa
dec
cmp
je
pop
daa
lds
add
fidivl
insb
scas
add
pop
pop
gs
jmp
push
ficoml
mov
fwait
pop
out
add
mov
ret
fnstenv
pop
push
fdivrl
xchg
push
dec
ds
xor
inc
call
or
xor
push
xor
inc
inc
js
repnz
into
sub
shr
mov
jnp
mov
push
sar
xor
daa
and
or
mov
add
fdivr
enter
orb
push
add
jnp
fs
not
xor
inc
jmp
ja
add
int
sub
xchg
push
shlb
cmp
jmp
fisubs
adc
pop
mov
sti
dec
andl
mov
mov
add
out
mov
push
movsb
pop
push
bnd
xchg
add
push
iret
popa
jmp
std
sarb
xchg
imul
fstps
out
cli
mov
fists
adc
jb
dec
arpl
or
jmp
lock
mov
ret
paddb
iret
jmp
dec
pop
add
test
mov
mov
push
adc
shrb
inc
xchg
out
adc
lods
notb
and
addr16
xor
sub
adc
sub
loopne
mov
jmp
popf
inc
leave
enter
push
mov
mov
jge,pt
mov
cwtl
xchg
dec
aas
lea
and
cmpsl
or
test
pop
xchg
into
nop
fisttpll
jmp
dec
pushf
lods
add
jp
fmuls
or
mov
imul
sbb
mov
jmp
ja
add
xor
movsl
imul
add
jmp
adc
inc
xchg
repz
andl
jecxz
mov
jbe
imul
push
repz
pop
sbb
test
inc
mov
cwtl
jno
add
pop
mov
call
jmp
mov
jb
mov
and
lcall
sub
push
push
or
adc
or
rorl
mov
ss
add
or
mov
pop
mov
stos
pop
cmpl
sub
pop
or
and
push
inc
aaa
mov
outsl
outsb
mov
or
lods
add
into
mov
add
dec
mov
inc
and
push
dec
xor
sub
or
and
jmp
clc
in
out
adc
jmp
xchg
mov
adc
mov
das
push
pop
mov
rcrb
xor
pop
int
cs
imul
and
imul
push
or
adc
sbb
cli
sbb
xorb
test
xchg
sub
adc
cmp
jns
mov
add
shrl
aaa
fwait
aam
call
pop
ret
cmpsb
sub
add
movsb
and
loope
mov
lods
xor
mov
jne
int3
mov
or
mov
lret
pop
cmp
push
push
adc
popa
arpl
fst
sbb
lods
fistps
mov
movsb
ret
xchg
add
repnz
fsubs
push
inc
dec
sub
pop
inc
mov
daa
movb
iret
cmpxchg
fsubr
sub
jb
push
clc
repz
xor
stos
out
or
mov
or
jns
out
xchg
dec
nop
sbb
xchg
lea
dec
neg
xchg
jo
adc
jbe
popa
jmp
rcrb
or
mov
loopne
mov
pop
xor
rorl
pop
jmp
je
cmpsl
add
mov
mov
stos
shll
sub
mov
idivb
lret
pushf
out
sti
jp
popf
mov
and
xor
push
or
xor
loope
test
ficoms
daa
jnp
sti
pop
cld
jo
mov
dec
test
cltd
mov
and
ljmp
push
push
add
and
mov
shll
mov
aas
mov
jb
nop
fwait
push
xchg
not
or
push
in
cmp
pop
xor
in
xchg
sub
jae
test
ds
and
das
and
pop
stos
jl
dec
data16
je
dec
fld1
jg
iret
pop
pop
out
push
hlt
pop
push
dec
push
addb
xchg
cmc
mov
and
cmp
in
fcompl
mov
insb
mov
shl
cmp
and
inc
dec
inc
arpl
imull
sbb
repnz
add
xchg
sbb
pop
jmp
inc
pushf
jmp
push
xor
mov
jne
aam
dec
mov
lds
out
js
push
push
sub
ljmp
xchg
ljmp
push
and
cmc
movsl
or
or
aaa
inc
or
ret
jo
jmp
push
pop
loopne
pop
mov
push
xor
add
pop
stos
adc
pop
pop
cltd
out
or
cmp
pop
das
adcb
or
add
out
inc
je
sub
sub
mov
popa
push
jmp
or
jne
mov
mov
mov
lods
jmp
fistpll
out
in
jmp
daa
adc
mov
ja
or
add
inc
neg
mov
pavgw
dec
inc
mov
pop
enter
pop
test
scas
push
sarl
pop
imul
sub
fcomp
or
xor
add
push
dec
jle
pop
cmc
push
pop
roll
mov
mov
lea
inc
adc
jbe
les
push
ss
xchg
or
in
sub
add
out
sarl
insl
xchg
test
jno
jmp
add
imul
adc
xor
lods
add
jmp
mov
mov
shrl
xor
add
dec
push
mov
lahf
xor
push
lea
adc
jae
dec
mov
mov
popf
roll
add
xchg
mov
shlb
cmp
in
adc
test
add
movsb
jne
aad
pop
in
ud1
pop
sub
jl
inc
mov
adc
mov
add
mov
pop
and
les
adc
sub
fists
mov
jo
pusha
mov
dec
mov
cltd
push
fucomi
scas
je
mov
inc
pop
mov
jl
adc
add
or
dec
push
shl
jg
dec
or
pop
scas
xorb
fisubl
or
sub
test
lret
dec
lock
std
test
out
fsts
repz
nop
lods
aas
hlt
sbb
and
rorl
lret
in
sbb
mov
test
adc
mov
cmc
pop
fldcw
sub
sbb
add
add
lods
push
mov
lds
ret
jnp
in
sub
rol
xor
sbbb
cmp
xlat
in
sub
daa
int3
jne
int
addr16
add
aam
es
add
push
mov
jnp
cmp
jno
fidivl
jge
xor
neg
pusha
xlat
add
ds
mov
and
mov
sub
daa
clc
xchg
outsl
dec
lds
das
repnz
divb
sub
lods
jmp
jmp
pop
int3
or
mov
jmp
rclb
test
aas
or
ja
popa
jmp
sti
ljmp
lret
push
xor
cwtl
cs
pop
shlb
jo
imul
mov
adc
in
xchg
mov
pop
and
out
sbb
iret
rolb
inc
xchg
out
adc
roll
stos
add
cmp
pop
sbb
iret
lcall
std
xchg
test
cs
mov
cs
iret
jge
mov
ret
loope
cmp
data16
xchg
add
xor
push
adc
ds
xchg
addb
pop
js
mov
das
mov
sub
mov
adc
imul
or
mov
push
cmp
rcl
jmp
cmp
bound
lds
mov
xor
pop
sbb
fistpl
pop
out
jno
dec
adc
cmc
aam
add
in
pop
and
icebp
call
js
cmpsl
clc
inc
add
int3
push
notb
sbb
jo
je
push
inc
test
push
movsb
orl
push
or
mov
aad
out
pop
arpl
orl
dec
jne
leave
add
or
add
cli
push
dec
enter
std
jbe
mov
mov
mov
mov
scas
adc
neg
aam
in
dec
dec
mov
mov
xor
push
adc
cmp
or
mov
aaa
lcall
dec
xchg
add
pop
jnp
sbb
xchg
or
and
add
push
pcmpeqw
cmc
push
popl
dec
ds
jae
fdivp
or
push
jmp
mov
adc
das
and
movb
jp
lds
jmp
add
pop
out
and
pop
add
pop
repnz
pop
outsb
jecxz
jns
incl
jl
push
loop
data16
inc
or
inc
pop
daa
cwtl
xchg
dec
imul
data16
or
mov
jmp
inc
cltd
sub
jmp
xchg
out
mov
xor
pop
jp
ret
pop
aas
push
movsl
rcr
jmp
rorl
xor
push
adcl
dec
jns
dec
mov
inc
or
xor
jmp
adc
sub
hlt
dec
imul
icebp
cmpsl
into
or
xlat
mov
xorb
xor
ja
movsb
xchg
pop
push
or
add
sub
jge
cwtl
xchg
push
cmc
cmpl
xchg
dec
test
pop
lods
xchg
movsl
out
or
xchg
sbbb
or
aas
add
xlat
or
inc
sbb
mov
inc
mov
faddl
aad
jecxz
repnz
pop
mov
adc
cs
into
cmpsb
dec
scas
loope
or
ljmp
jp
sub
movb
pop
push
aaa
das
cmp
jmp
out
aad
pop
ss
aam
in
js
mov
icebp
push
or
enter
push
call
mov
mov
adcl
jl
iret
bound
mov
jle
ret
push
incb
out
jl
test
outsb
mov
cmp
pop
add
int
xchg
jp
in
xchg
inc
xchg
dec
ja
xor
js
sub
jg
imul
aaa
pop
addr16
add
push
sub
mov
sub
or
les
test
add
mov
mov
daa
add
push
xchg
inc
cmpb
jle
add
add
sub
nop
push
xchg
call
pop
pop
sub
mov
xor
sub
in
or
fiadds
fwait
inc
and
imul
inc
jmp
sub
inc
lahf
fldt
lods
pop
fiadds
or
mov
adcb
ja
inc
jne
cmp
popa
mov
jne
inc
jno
shr
push
adc
sbbl
sub
mov
mov
jmp
fsubrl
popa
js
andb
sub
pop
clc
jno
jmp
nop
push
cmp
mov
das
lock
fistps
dec
xchg
sub
or
mov
or
test
mov
adc
mov
pop
sub
sub
sub
xchg
pop
pop
popl
lods
sub
add
mov
cmovno
cld
xor
mov
std
mov
and
cwtl
and
icebp
adc
mov
push
sbb
and
pushw
pop
jmp
les
stos
icebp
mov
pop
ja
pop
sbb
push
mov
stos
adc
int3
add
stos
push
mov
and
push
out
roll
aas
xchg
add
ret
daa
rolb
and
nop
fwait
inc
ja
add
inc
out
xor
jmp
mov
xchg
jns
imul
sub
test
adc
mov
add
icebp
ljmp
and
xlat
dec
out
sub
icebp
les
jecxz
push
mov
fs
mov
fisubs
or
push
and
xchg
ret
insb
push
fimuls
loopne
push
cmpsl
ret
mov
dec
mov
daa
je
and
or
fmull
out
test
test
pop
cwtl
dec
in
fdivp
std
xchg
or
push
repnz
push
lods
cli
mull
sbb
sbb
pop
push
jmp
xchg
and
ret
sub
dec
xchg
outsb
mov
dec
mov
cmp
in
jmp
ljmp
adc
mov
jbe
mov
ss
jmp
incb
aaa
jbe
dec
and
sub
sbb
not
xor
cli
or
mov
dec
jmp
into
andl
sub
push
mov
scas
rorb
mov
ret
jmp
jns
jle
jmp
pusha
gs
pop
mov
sub
das
pop
pushw
cltd
adc
loope
shll
imul
cmp
cmpsl
xor
pop
mov
outsl
rorb
jmp
cli
jbe
adc
imul
mov
cmp
push
sbb
push
shr
inc
adc
push
and
lods
je
pop
pop
ds
push
or
xor
lcall
out
shl
cld
mov
je
or
dec
pop
push
and
outsl
scas
xor
mov
push
out
or
inc
push
jne
neg
test
jle
stc
add
dec
subb
cmpsl
mov
lret
scas
dec
mov
lods
int3
push
cmp
lds
ljmp
sub
cs
andl
sbb
mov
imul
add
sbb
mov
xor
ds
jp
sbb
and
mov
lock
rorl
popa
add
cmp
jns
mov
ds
inc
add
mov
pop
mov
push
sub
mov
sub
fmulp
bound
fistpll
dec
dec
out
and
jge
xor
xchg
cmp
and
lods
jae
mov
push
pop
in
xchg
pop
xor
push
xchg
roll
or
push
push
test
push
mov
pushf
pop
repz
test
cmpsb
mov
dec
xchg
das
push
movsl
scas
push
ljmp
sub
push
scas
repnz
sbb
roll
movsl
in
bound
fs
pop
fnstsw
push
push
or
sub
mov
jmp
test
es
jno
add
pop
pop
pop
add
movsl
stos
mov
mov
mov
dec
out
shlb
inc
pusha
and
sub
push
add
and
lock
adc
call
rcrl
loope
sbbb
hlt
gs
mov
push
pop
test
and
and
je
nop
push
dec
push
push
push
pop
mov
punpcklbw
cltd
addr16
mov
push
pop
pop
push
outsl
push
or
dec
xchg
test
adc
idivl
mov
mov
fcom
pushf
or
mov
push
test
sti
add
sub
sub
add
or
insl
shll
or
ds
dec
jne
pop
jl
add
mov
push
push
push
outsl
or
rcl
iret
push
mov
mov
xchg
cltd
sti
dec
shlb
outsb
adc
mov
pop
push
xchg
pop
or
jmp
mov
shl
ret
pop
int3
andl
add
jnp
outsb
sub
sahf
or
test
loop
adc
push
fwait
jle
pusha
mov
pop
adcl
xchg
sbb
mov
sub
push
xchg
push
add
xchg
pop
clc
js
das
jmp
cmpsb
pushf
inc
sub
popa
int
jns
inc
lret
insb
xchg
and
lods
adc
in
sub
or
jbe
fiaddl
pop
adc
in
sub
jo
push
sbb
insl
jmp
mov
push
fstps
std
sub
enter
mov
in
das
dec
lods
xchg
lods
jmp
inc
jo
sub
pop
push
push
jb
or
mov
jae
and
fistpll
addl
add
add
jmp
pop
orb
neg
jbe
cmp
lahf
mov
push
jbe
adc
or
mov
and
adc
cwtl
call
mov
mov
sub
push
sub
sub
roll
inc
and
cwtl
mov
sbb
jo
cmp
jp
aad
add
lock
mov
cmc
mov
cmp
pop
pop
push
xor
icebp
mov
data16
fistpl
pop
push
dec
rcll
mov
jp
rolb
daa
nop
movsl
push
pop
mov
lret
xchg
rcrb
and
jmp
push
cmp
jl
sub
mov
adc
pop
sets
adc
cmpb
aad
dec
sti
mov
add
xchg
add
mov
pushf
sub
pop
push
xchg
push
add
jnp
out
outsl
fbld
add
mov
jbe
mov
pop
push
mov
loope
cmp
and
cmp
add
shlb
push
add
imul
mov
inc
leave
cwtl
dec
mov
add
jmp
jo
daa
les
or
sub
push
adc
out
jge
test
sub
adc
lahf
push
dec
mov
mov
push
push
or
xchg
neg
push
rclb
add
mov
jbe
sbb
test
roll
das
xlat
sbb
subb
or
and
and
mov
lods
push
or
sub
push
mov
xchg
sbb
pop
xor
push
das
out
add
arpl
out
mov
sbb
daa
sarl
aaa
and
repz
adc
add
cltd
in
leave
inc
ljmp
pusha
jge
popw
lock
or
sub
push
xchg
aam
lods
xchg
adc
hlt
imul
rorb
jbe
xchg
jecxz
or
ds
pop
iret
call
mov
push
adc
jno
add
daa
jmp
push
mov
cwtl
pop
pop
cmp
add
jb
dec
adc
stos
pop
dec
push
lret
adc
xchg
dec
pusha
mov
or
jp
push
and
mov
mov
call
in
add
and
popf
loopne
xchg
call
sbb
cs
jl
pusha
jne
fstpl
push
rorl
ds
push
stos
out
sub
repz
lret
or
pop
std
mov
cltd
dec
imul
cmp
call
adc
shll
add
repz
std
movb
sbb
negl
clc
loope
push
adc
pop
roll
sub
in
xchg
cmp
int
pop
lods
gs
pop
enter
fildl
xchg
or
orb
ja
pop
pop
push
jl
jmp
sbb
sbb
jno
dec
mov
cld
neg
test
pushf
mov
jle
inc
and
js
pop
push
mov
inc
fsqrt
loope
xor
push
ja
loope
push
mov
mov
cli
dec
popa
mov
pusha
sub
cmp
int3
add
cli
cmp
jo
jmp
les
pop
mov
mov
cmp
add
cwtl
cmp
lahf
xor
leave
adc
pop
sbb
dec
xor
orb
xorb
push
push
jl
pop
dec
mov
inc
sub
scas
inc
sbb
divb
pop
pop
push
xor
popa
test
xor
js
cwtl
test
orl
inc
inc
loopne
pop
mov
inc
lcall
jo
push
add
mov
scas
add
aad
into
mov
adc
cmp
jle
repnz
rol
and
ret
pop
pop
andb
imul
addb
fs
sbb
fimull
add
cld
xlat
mov
jo
or
mov
sbb
push
cmp
imul
aam
pop
mov
mov
and
sti
mov
sti
add
nop
mov
idivl
sahf
push
mov
mov
nop
pop
ds
add
push
push
or
lock
maxps
mov
ljmp
mov
adc
rcl
xchg
out
test
xor
enter
adc
mov
pop
inc
jl
add
stos
pushf
dec
jmp
shr
imul
push
push
mov
sub
sbb
rcrl
mov
pop
and
sbb
cmp
push
pop
mov
add
adcl
cmp
divl
out
in
adc
bound
xor
sub
pop
xor
or
push
dec
jne
xor
cmp
and
inc
mov
mov
lahf
test
ja
sarl
lods
movsl
iret
leave
aaa
sub
stos
icebp
clc
repnz
stc
inc
add
loop
das
sub
adc
mov
roll
jbe
pop
pop
addr16
fwait
cld
repz
pusha
cmp
testl
jmp
ret
mov
lret
xchg
mov
and
addl
sbb
or
test
js
mov
jo
cmp
insb
adc
push
add
lock
in
mov
and
mov
pop
ds
aad
inc
popf
add
mov
xor
add
pop
xchg
loop
push
jmp
sub
rorb
not
addb
push
mov
lret
incl
mov
push
mov
not
addl
lock
clc
fdivrs
add
test
sub
jmp
sbb
pop
sar
jmp
ja
in
xchg
jle
or
ds
push
mov
mov
xchg
aaa
push
pop
or
inc
push
daa
pop
or
xchg
mov
add
jb
mov
icebp
lcall
and
dec
fstl
push
call
mov
cmp
pop
test
pop
in
mov
cmp
or
and
pop
jnp
cmp
adc
cmp
cmp
fwait
sbb
pop
mov
lahf
repz
dec
aam
inc
inc
pop
cmc
sbb
call
pop
xchg
xchg
push
adc
stos
add
sub
out
mov
add
aas
sbbb
pop
in
ja
cmp
xchg
dec
enter
aad
sub
inc
icebp
loope
and
packsswb
out
push
lcall
test
arpl
or
dec
mov
and
pop
stos
scas
rolb
and
dec
les
xchg
or
or
mov
push
cmp
jb
pop
jmp
mov
je
out
test
fnstsw
call
pop
pop
ficompl
push
shl
rol
push
sub
and
jle
insb
add
inc
lcall
and
loopne
ret
pop
mov
scas
mov
int3
jmp
andb
aad
popf
lock
xchg
test
lcall
stos
jge
iret
push
push
adc
xor
call
inc
push
jl
and
adc
sub
mov
pop
mov
mov
inc
xchg
or
dec
push
add
or
or
imul
xchg
push
add
aad
add
cmp
and
pop
or
adc
jb
hlt
daa
xchg
vprotq
adc
xor
pop
sub
ror
in
push
jnp
imul
sbb
aaa
jle
je
daa
jp
cmp
sti
jp
or
inc
and
jmp
sub
or
idivl
es
pop
sti
mov
add
pop
daa
mov
lock
mov
xchg
push
jge
in
pushl
push
push
xchg
inc
mov
mov
add
loope
movsl
and
sub
fnstcw
lret
push
adc
cmpsb
je
dec
fists
and
push
push
push
mov
mov
mov
push
mov
sub
cwtl
mov
imulb
test
sarl
test
mov
mov
adcl
adc
pop
dec
add
inc
pop
jmp
cmc
into
and
inc
icebp
or
aad
jb
out
or
fdivl
jb
add
push
bound
and
push
add
or
adc
pop
jbe
sub
sbb
push
push
xchg
push
add
inc
icebp
sbb
cli
int3
mov
cmc
jb
push
sahf
push
ds
xor
loopne
mov
call
cs
test
or
int3
add
addr16
push
jecxz
pop
lods
std
in
pop
movsl
mov
push
mov
add
js
into
stos
mov
push
test
dec
lds
jnp
cwtl
inc
dec
test
xor
and
repnz
jl
mov
push
daa
pop
jmp
or
dec
sub
das
sbbb
cs
jp
jge
add
jmp
pop
test
sbb
and
into
lds
in
xor
in
pop
inc
pop
stc
sub
out
pop
je
dec
out
cli
xchg
mov
mov
push
jecxz
push
or
add
cmp
sub
repnz
inc
or
sbb
aas
orb
ja
clc
jbe
jge
add
stos
pop
rcrl
jmp
sti
xor
stos
loopne
pop
mov
sbbb
notb
sub
stos
xor
sbb
stos
les
add
and
int3
scas
push
pop
lret
mov
cmp
dec
push
inc
mov
flds
cmp
or
mov
or
xchg
insb
jmp
adc
pop
inc
imulb
add
mov
popf
sub
or
jmp
ds
lds
push
inc
das
fsubrl
dec
repz
jle
adc
push
mov
or
sbb
inc
inc
addb
pop
stos
cmp
mov
subb
dec
pushl
std
jno
fs
repz
xchg
mov
jecxz
jno
cmp
mov
adcb
add
ds
add
push
mov
cmp
mov
mov
imul
add
sub
mov
fwait
les
sbb
inc
sub
fdivrl
mov
mov
xor
ret
push
mov
out
mov
repnz
insl
negb
lea
push
push
inc
push
pop
mov
call
rolb
push
jp
rorl
or
mov
mov
xor
std
jp
mov
int3
adc
gs
cmp
jo
mov
call
testl
xchg
pop
stos
shrb
or
jo
shl
push
push
std
loope
mov
enter
sahf
or
cmp
popa
jmp
ret
push
pop
inc
mov
add
inc
out
imul
lcall
fnsave
mov
ljmp
mov
sbb
push
insl
push
pop
lcall
mov
insb
sub
lds
push
addr16
test
adc
sub
xor
pop
sbb
inc
pop
push
ds
sub
xchg
mov
in
jbe
push
out
ret
pop
sbb
loop
enter
nop
outsb
daa
mov
nop
mov
add
pop
mov
pop
xor
iret
push
mov
pop
and
pop
es
insb
add
jmp
mov
or
rol
loop
jp
movsb
mov
and
test
fidivl
cmc
lods
cmp
mov
test
rcll
xor
ja
imul
cmpsb
inc
dec
inc
inc
xchg
add
or
out
mov
shlb
enter
sbb
and
cmp
not
je
movsl
pop
jg
push
xchg
sub
mov
mov
dec
xchg
call
mov
out
push
in
test
pushf
or
pop
mov
adc
inc
ljmp
outsl
or
add
xchg
push
call
cmpsb
inc
and
imul
pop
cs
or
pop
push
mov
sbb
outsl
clc
add
push
push
add
clc
rcl
sub
fucomi
add
jns
mov
cmpsb
loop
pop
je
dec
or
roll
and
adc
in
sti
cmpsl
je
adc
loop
outsl
int
mov
cmp
mov
scas
add
jno
jo
cmovle
mov
cmp
xor
or
or
push
mov
fmull
test
jmp
aas
xchg
cltd
ret
pop
pop
rclb
jae
add
test
mov
sbb
cmpb
call
dec
add
sub
bnd
pop
lock
pop
outsb
ret
lds
mov
shlb
clc
jbe
enter
push
incl
xor
mov
and
cmp
int
cmc
push
or
pop
xorb
or
lods
mov
loopne
das
pop
sub
pop
mov
xor
xchg
daa
rorb
ds
push
lahf
inc
sub
push
int3
add
push
jmp
push
ljmp
out
jmp
pop
pop
or
mov
mov
jl
adc
lea
repnz
shl
pop
fcompl
cmpsb
pop
daa
adc
pop
jbe
imull
nop
dec
mov
jo
xor
and
mov
xor
mov
pop
jne
jmp
add
rcrb
bound
imul
push
andb
sub
out
loope
outsl
dec
les
sarl
fcompl
into
xchg
sarl
ss
fadds
mov
or
pop
xchg
xchg
jne
or
popf
stos
fidivs
pop
xor
popa
ret
inc
push
loopne
sub
cmp
jl
imulb
loop
les
pop
push
or
mov
pop
cmpsl
out
pushf
add
jne
pop
rep
popa
or
adc
mov
adc
dec
jmp
push
shl
or
lods
dec
cltd
adc
pop
sub
pusha
mov
in
lret
dec
or
in
movsb
xchg
mov
xchg
inc
inc
imul
sbb
pop
jp
ljmp
mov
pop
pop
push
add
add
aas
dec
xor
xor
or
adc
dec
or
add
cld
out
shrb
sub
add
rcrb
push
movsl
push
mov
sub
lods
cmp
in
push
xchg
cmpsb
jl
dec
out
jg
inc
insb
sbb
pop
daa
adc
aam
jmp
lds
aaa
inc
dec
iret
dec
pop
faddp
mov
push
xor
or
or
js
not
incb
pop
out
pop
aam
daa
pop
mov
push
and
push
xchg
cmpl
push
outsl
jmp
loopne
push
dec
sti
sub
lret
cmp
js
pop
out
out
pop
jne
xlat
sub
push
mov
mov
pop
cli
out
push
leave
in
push
subb
push
push
mov
mov
pop
shl
orb
aad
xchg
cld
icebp
ret
lret
xchg
jo
push
repnz
xor
outsb
imul
iret
mov
xchg
mov
push
sbb
lock
adcb
scas
cmp
push
lods
movsl
jnp
adc
jae
pop
ljmp
icebp
or
add
not
xchg
xchg
sub
int
xchg
ret
push
ror
or
dec
add
or
and
add
adc
lea
insl
pop
ljmp
aas
and
orb
arpl
add
xor
out
orl
jb
lret
mov
xor
or
subps
popl
sbb
push
negl
sbb
push
add
outsl
lods
lods
repnz
scas
push
call
mov
sub
xor
arpl
pop
push
pusha
jge
fsts
mov
and
mov
test
pop
sub
mov
add
outsl
ja
and
mov
shl
mov
jae
aaa
repz
les
pop
push
mov
xor
loop
das
push
lods
in
push
mov
lret
push
add
movsb
pop
xchg
call
sub
cmp
jecxz
cmp
mov
push
sub
in
or
loop
pop
ljmp
loop
jl
jecxz
clc
mov
sub
mov
inc
notb
shrb
test
shr
not
inc
jl
mov
push
push
dec
popa
es
jno
adc
rorb
pop
jl
into
arpl
ret
push
xchg
pop
repnz
repz
adcl
scas
mov
pop
mov
sarl
out
mov
sub
clc
dec
pop
int3
nop
or
pop
push
jb
stc
sub
std
or
and
lods
push
out
repz
pop
jp
test
out
xor
repz
repz
adc
cmp
adc
dec
test
add
push
jmp
inc
add
int
nop
dec
dec
xor
mov
js
stc
push
outsb
pop
sub
mov
stos
cmp
jl
mov
dec
out
jo
xchg
pop
inc
dec
push
cmp
adc
arpl
xor
jo
pop
shlb
jmp
cmp
push
lods
les
dec
mov
test
pop
jnp
out
push
mov
leave
lret
repnz
xchg
daa
jle
xchg
leave
pop
jp
or
adcb
sbb
jns
adc
loopne
dec
mov
add
dec
mov
sahf
pop
lods
insb
xlat
jmp
and
loopne
sub
cmp
sbb
pop
clc
aam
nop
lcall
push
shll
cmp
lret
mov
inc
lret
call
scas
xor
pop
adc
inc
xor
adcl
lds
in
mov
pop
mov
xchg
lods
bound
aad
aaa
loopne
and
fdivrs
xchg
movsb
les
sbb
mov
subb
mov
adc
shl
cwtl
icebp
movl
lahf
cmp
mov
and
push
arpl
pop
push
hlt
pop
add
add
adc
dec
push
add
mov
adc
loop
sbb
pop
shr
mov
mov
cmc
neg
add
inc
ljmp
xchg
int3
adc
sub
push
sti
inc
dec
cmp
cwtl
fildll
outsb
loop
mov
pop
mov
rcr
out
loope
cli
enter
jmp
jb
bound
or
adc
int3
pop
js
lock
dec
jle
ret
push
push
in
xchg
dec
test
jl
cmpsb
push
scas
sbbl
jmp
clc
loope
and
test
pop
orl
mov
addb
ja
jmp
mov
in
push
mov
and
pop
in
loopne
or
sbb
add
sub
adc
popa
mov
xor
test
es
xor
rolb
or
push
rorb
pop
dec
or
mov
arpl
dec
sub
loop
jle
daa
sbb
movlps
sub
out
add
pop
add
sub
fisttps
jl
inc
xchg
ljmp
ljmp
mov
mov
popf
xor
or
xor
push
add
ja
scas
and
cli
lock
adc
lock
inc
rcrb
js
or
into
push
rorb
pop
mov
out
mov
popa
mov
sbb
jmp
push
push
aam
in
adc
dec
inc
and
add
lock
mov
mov
fildl
or
imul
push
pop
cmp
loop
stc
inc
mov
mov
add
or
sub
aas
xorb
add
pop
add
into
shr
and
and
pop
pop
jge
sbb
nop
or
cwtl
cmp
inc
adc
lcall
jbe
movsl
cmp
loopne
push
add
shl
pop
imul
push
and
mov
push
pop
and
adc
jo
out
fiaddl
ljmp
jmp
das
daa
sub
mov
jnp
cmpb
add
scas
cmp
in
jmp
pop
add
adc
repz
sub
das
notb
cmp
mov
stc
aas
fimull
adc
icebp
es
xchg
shll
lods
jg
adc
pop
mov
clc
in
lock
daa
scas
sub
mov
clc
imul
adc
inc
ja
ja
jge
hlt
or
xchg
jae
dec
sbb
jnp
sub
sub
fwait
or
pop
aas
xchg
iret
insl
lock
cmp
lds
rcrb
jmp
inc
imulb
mov
cmp
dec
adc
arpl
xchg
movsb
dec
jb
inc
mov
ds
pop
mov
adc
cmp
dec
inc
call
sti
adc
adcb
out
subl
in
nop
fs
add
dec
push
das
or
mov
out
pop
and
lock
push
enter
lea
push
push
push
add
ret
mov
imul
std
bound
out
push
shlb
jecxz
mov
xor
or
andl
out
pop
int3
inc
add
shlb
jecxz
or
mov
repnz
jb
cs
addr16
xor
adc
dec
adc
mov
mov
mov
mov
push
repnz
or
popa
xor
repz
mov
int3
xchg
ja
outsl
cmpb
cs
xchg
pop
icebp
hlt
dec
es
sbb
push
les
push
mov
push
test
pop
cwtl
jnp
daa
push
sbb
insb
rclb
ds
and
cld
inc
adc
mov
inc
js
add
xor
push
mov
or
inc
rcrb
mov
ret
or
mov
push
scas
or
push
dec
fwait
loopne
dec
sbb
adc
push
repz
iret
jmp
pop
pop
fsin
cs
dec
scas
je
jno
xor
jge
xchg
iret
xchg
daa
fs
or
and
fcmovne
sbb
clc
lods
lahf
addb
jo
add
add
movsb
rclb
fildll
add
jg
hlt
cmp
rclb
pop
pop
dec
pop
xor
mov
cld
sbb
jmp
lods
pop
mov
mov
push
mov
addb
mov
imul
mov
cmpsb
or
fcmovnbe
and
popf
fldcw
cmp
dec
pop
or
in
sbb
movzwl
jge
xor
xchg
inc
pop
in
mov
and
or
fimuls
dec
mov
sub
sub
xchg
push
pop
test
gs
hlt
ss
add
push
lods
lds
jmp
fldt
lea
xlat
or
call
pop
add
cli
lods
xor
mov
ret
push
rcrl
push
mov
divb
loope
xchg
sar
dec
or
mov
rcll
repnz
or
sub
cmpsl
adc
jb
push
test
imul
loop
xchg
inc
sub
cmp
leave
bound
inc
lret
jmp
mov
mov
pop
inc
or
mov
xor
jp
adc
pop
cmp
push
and
out
and
xchg
dec
movsl
pop
mov
push
in
int3
xor
leave
xor
xor
or
pop
jb
clc
icebp
add
mov
mov
les
icebp
scas
aam
xchg
xor
push
cwtl
add
jne
cmp
push
dec
cld
sbb
inc
mulb
aas
sub
movsl
xor
loopne
adc
test
push
dec
cmp
pop
mov
popf
adc
outsb
inc
adc
jecxz
repnz
flds
mov
push
adc
sarl
mov
xchg
mov
std
rcll
push
add
mov
pop
or
push
int
xor
dec
call
data16
pushw
or
fimuls
inc
xchg
add
jg
lea
popa
jb
sub
sub
or
cmpb
and
dec
es
jmp
sub
pop
mov
add
add
cld
sbb
test
push
lahf
lods
sarl
mov
mov
sub
xor
fimuls
int3
or
xchg
ret
xchg
cwtl
cmp
pop
movsl
fdecstp
dec
or
aas
jmp
push
inc
inc
cmp
cmc
or
push
int3
pop
push
sahf
cmp
mov
inc
daa
xorb
repnz
cli
mov
imul
mov
jle
mov
enter
sti
or
fdivrl
es
mov
loopne
jmp
loop
gs
xor
sbb
mov
jecxz
js
jp
insl
mov
xor
ljmp
orb
bound
in
adc
and
sub
jl
nopl
loope
sub
cmp
rcr
lfs
inc
pop
inc
jmp
fadds
add
stc
stos
push
xor
nopl
inc
enter
adc
cmp
mov
push
insl
repz
mov
mov
inc
jg
mov
aas
add
adc
push
xchg
adc
jnp
add
js
xchg
jno
xchg
xor
loopne
push
mov
ficoms
adc
scas
sub
call
push
pop
mulb
dec
cmp
out
pop
adc
cmp
lds
mov
add
inc
jp
inc
inc
shrl
xchg
mov
inc
jl
push
sahf
dec
je
mov
push
jle
pop
pop
or
sub
in
push
enter
in
mov
jge
dec
lock
mov
out
add
mov
mov
jle
cmpsl
jnp
test
push
add
or
fdiv
imul
mov
scas
mov
nop
rcll
xlat
in
mov
in
mov
cs
pop
pop
imul
daa
adc
out
dec
stos
arpl
xchg
inc
sbb
push
testl
inc
sti
xchg
je
jl
pop
pop
repz
push
es
cli
jbe
imul
shrb
or
out
das
mov
inc
pop
jecxz
xchg
jo
lds
jmp
ret
and
xchg
inc
aad
das
mov
stos
xlat
aaa
inc
mov
pop
xchg
je
test
xchg
mov
in
and
ljmp
aaa
pusha
pop
push
test
push
cmp
and
imulb
adc
fucomip
mov
ret
jl
fwait
sub
dec
pop
test
mov
pop
jl
ret
xchg
pusha
aas
testb
out
jns
outsb
mov
or
ljmp
test
pop
pop
in
in
xor
dec
mov
xor
jge
adc
adc
cmpb
pop
into
in
loop
repz
dec
pop
data16
pop
stc
movsb
pop
rolb
lret
and
test
int
je,pn
jg
in
ja
and
cmp
sbb
insl
or
outsb
push
jo
jmp
push
mov
pop
pop
or
cmpl
cmp
notl
stos
push
mov
jb
ret
xor
lods
ret
jo
adc
jae
jmp
add
dec
imulb
inc
mov
out
jge
bound
pop
inc
or
push
lods
fstl
inc
mov
into
sarl
stc
test
sbb
sti
adc
testl
jnp,pn
loopne
jle
push
mov
sahf
lods
jno
pusha
mov
jmp
dec
shr
sub
xchg
icebp
xchg
cmpsb
out
test
jecxz
clc
insb
ret
cwtl
das
fwait
add
gs
iret
mov
sbb
pop
and
push
loopne
mov
pop
push
pop
and
jge
in
mov
stos
adc
and
lock
jae
sbb
jg
ljmp
xorb
cmp
or
inc
add
mov
and
inc
sarb
aad
xor
gs
outsb
arpl
jecxz
dec
call
out
xchg
je
jmp
mov
jg
xchg
roll
inc
xor
int
inc
rorl
add
sub
in
and
pop
insb
or
sub
pop
repnz
pop
mov
cwtl
mov
jecxz
pushw
sarb
or
loopne
mov
pop
bound
mov
jb
sbb
mov
push
sbb
insb
das
jns
jp
dec
nop
rolb
sbb
test
leave
add
out
rol
adc
movsl
lret
push
add
push
mov
push
neg
add
and
or
jg
and
dec
punpcklwd
les
pop
pop
mov
dec
ret
loop
fstps
pop
cmp
push
orl
scas
pop
ret
js
pop
fists
push
in
das
lea
jbe
sbb
jmp
xor
flds
aas
ds
or
lea
sub
mov
ret
add
jmp
sub
add
aaa
leave
add
pop
cltd
dec
cmp
arpl
push
adc
sub
andb
sarl
repnz
jg
dec
daa
or
or
add
push
call
jl
jle
add
testl
inc
js
cmpsb
adc
nop
jmp
xor
mov
push
push
out
add
push
bnd
pop
sub
xchg
pop
loope
add
or
popa
add
adc
mov
push
xchg
push
mov
lcall
and
es
pop
imul
scas
gs
lret
xor
fimuls
pop
fbld
mov
int
add
cli
xchg
cmp
insb
cmc
jmp
add
cli
push
int3
popa
fnstenv
cmp
dec
and
aam
mov
pop
mov
aad
call
cwtl
or
jle
sbb
mov
push
xchg
push
and
sub
mov
jb
fucom
pop
out
cwtl
cmp
push
iret
bound
add
mov
add
aam
add
out
add
dec
pop
jmp
loopne
mov
sbb
dec
sub
movsl
rcrl
movsb
pushf
push
lretw
xchg
test
lret
pop
popa
or
dec
inc
inc
jns
icebp
mov
mov
pop
ja
cltd
daa
inc
std
and
add
icebp
push
and
shl
cmc
repz
add
das
or
jae
jmp
jne
xchg
mov
jl
dec
testl
nop
sub
pop
push
mov
imul
outsb
and
shl
jp
xchg
adc
inc
mov
add
das
mov
add
jl
adc
mov
sti
pop
jp
pop
lock
in
pop
adcb
sbb
rcrb
pop
fnstsw
rcr
pop
pop
xor
test
aam
inc
push
mov
mov
jbe
mov
out
addb
jmp
icebp
bnd
inc
xor
sub
push
add
cmc
add
xchg
inc
cmpsl
cmp
sub
or
mov
filds
lods
rol
out
and
minps
movsl
and
lcall
or
ss
and
push
pop
add
adcb
scas
pop
sub
sub
adc
add
pushl
sub
add
in
pop
sub
xchg
fstps
or
out
insb
lods
push
jno
or
inc
fidivs
jg
push
cmp
test
pop
cmp
jp
es
fs
adc
dec
add
gs
sub
sarl
inc
add
aad
xchg
push
data16
jl
loopne
pop
adc
add
fstpt
pop
add
mov
testl
push
cli
xchg
push
push
lock
dec
pop
mov
hlt
test
clc
jnp
push
jmp
jmp
cmp
and
dec
jb
je
push
int
push
out
sub
sbb
or
shll
fisttpl
loopne
lcall
scas
addr16
mov
push
in
mov
lcall
scas
pop
xchg
jle
sub
and
mov
in
imul
pop
push
pop
mov
sub
xor
stos
xor
mov
inc
push
jne
leave
popa
sbb
lea
sub
add
repz
loopne
push
pop
cli
in
xchg
hlt
negl
push
add
sub
xor
pop
mov
dec
cmpb
and
in
clc
jp
lds
add
icebp
hlt
shll
std
and
inc
cmpl
push
and
xor
dec
jmp
das
shll
sahf
xor
xor
or
lock
xorb
dec
xlat
jo
push
push
and
mov
inc
add
mov
push
mov
mov
leave
aas
jns
adc
movl
xor
inc
outsl
inc
jle
bnd
and
nop
push
xlat
inc
scas
pop
sbb
movb
push
inc
nop
andb
sbb
jmp
std
mov
movsl
rcll
xor
int
xor
loop
add
push
jl
push
data16
fisttpl
pop
push
cwtl
ja
xchg
addr16
mov
nop
imul
push
mov
ljmp
ret
adc
cmp
andl
add
xchg
jmp
jg
xor
inc
mov
lods
pop
out
sub
jae
adc
inc
cmpb
rcll
jmp
sbb
aas
jnp
nop
daa
orb
and
loop
subl
jmp
push
pop
pop
shrl
jae
add
cmp
add
inc
rolb
xor
in
add
shrl
dec
loopne
jp
pop
insl
adc
mov
xchg
sub
std
mov
or
jg
cmp
mov
cwtl
sahf
adc
push
xchg
inc
jecxz
xor
mov
adc
sbb
mov
dec
cwtl
das
rcrl
xchg
test
or
adc
test
inc
clc
loope
sbb
cmp
cmp
cmpsb
pop
orb
and
lret
xchg
add
rolb
wrmsr
mov
xor
shrl
pop
adc
xchg
sti
cmp
ss
push
xchg
sub
movsb
nop
jo
ljmp
iret
mov
cld
pop
sbb
dec
cmpb
and
test
pop
hlt
ljmp
add
push
or
sti
testb
mov
adc
mov
sub
data16
push
sbb
sub
outsl
out
jbe
fsubrs
icebp
cmc
pusha
or
jmp
pop
cli
and
push
xchg
mov
jo
lock
pop
rcl
xchg
add
sbbb
imul
inc
mov
cmp
sub
and
ret
add
das
add
sub
in
mov
loopne
dec
pop
lcall
mov
or
das
cs
jnp
add
stos
loope,pn
add
adc
inc
sub
scas
cmp
or
xor
clc
mov
daa
xchg
fistpl
or
fwait
xor
mov
imul
inc
pop
push
shll
adc
sub
mov
sbb
pop
sti
mov
push
jmp
popf
dec
lods
bound
das
int
xchg
dec
jle
js
mov
and
add
imul
mov
das
in
popa
fsubr
cmc
sub
mov
mov
lret
pushl
out
mov
idivl
out
ja
xchg
mov
xor
in
xlat
mov
fwait
pop
adc
out
addr16
in
fisubrs
pop
add
jl
ljmp
in
jbe
add
repz
sarb
test
leave
es
mov
push
mov
decl
fwait
ret
lods
jnp
sub
orb
xchg
sub
mov
mov
daa
test
jb
add
sbb
ret
fbstp
inc
or
push
rcrb
sub
repz
xor
cmp
icebp
cmp
or
inc
je
add
mov
mov
inc
sbb
jmp
inc
cld
mov
add
cmp
ret
sbb
pop
xchg
ret
inc
fsubrs
neg
add
sbb
mov
add
inc
add
cwtl
orl
and
mov
es
cmp
fidivrs
push
loope
adc
mov
addr16
std
into
pop
push
jp
dec
xor
push
fcmovu
rclb
gs
xor
enter
js
mov
xor
sti
loopne
leave
jne
adc
inc
add
ja
int3
in
sub
in
dec
xchg
inc
push
xor
xchg
shrl
cmpsl
add
push
sbb
add
sbbl
les
xor
testb
mov
sub
pop
inc
push
shl
cmp
and
or
push
or
jae
pop
dec
dec
in
out
jo
lcall
cmp
or
dec
add
insl
test
not
xchg
pop
inc
das
push
in
cmp
ret
test
inc
and
lret
mov
xchg
mov
jge
dec
loope
dec
in
pop
sub
les
or
mov
out
test
std
les
scas
cmpsl
xchg
fmull
call
lahf
std
add
mov
jbe
mov
sub
push
jb
hlt
or
xor
in
xchg
and
add
iret
fstpl
dec
aas
lock
pop
jg
shlb
js
orl
ret
jle
inc
add
das
add
jae
bound
add
stos
test
pop
imul
sbb
xchg
or
pop
inc
pop
lahf
aas
cwtl
add
inc
dec
and
mov
movsl
mov
shl
xor
jle
push
arpl
mov
jnp
push
inc
dec
xchg
pop
or
and
movsl
adc
mov
add
or
pusha
roll
in
lock
sti
mov
bound
out
idiv
das
mov
push
pop
insl
inc
push
es
mov
das
clc
adc
adc
fnstsw
jmp
push
xlat
mov
xchg
mov
sub
lahf
xor
add
pop
int
and
or
pop
or
adc
xor
ds
insl
pop
aas
les
add
mov
movsb
xor
nop
hlt
test
mov
testb
add
mov
lds
hlt
and
imul
push
xor
jbe
addr16
push
lds
dec
cmp
xchg
add
sub
pop
cmp
xor
negb
jmp
idiv
out
or
mov
fildl
sub
pop
shl
push
push
mov
xor
add
push
pop
pop
cli
pop
dec
xchg
int3
sub
push
fnsave
or
mov
adc
xchg
sub
dec
inc
sub
xchg
fimull
xchg
jnp
pop
clc
adc
jmp
mov
sbb
repz
push
repnz
adc
dec
inc
jne
mul
sbb
scas
mov
into
xchg
add
inc
mull
pop
fistpl
mov
out
pop
push
dec
xchg
ds
inc
or
dec
sub
push
pop
ljmp
outsb
arpl
or
shrb
insb
shll
shlb
cmpsb
sub
jmp
pop
and
incb
pop
movsl
bnd
int3
dec
push
mov
test
mov
jl
push
mov
push
stos
or
and
and
insb
and
push
xorl
or
mov
jmp
testl
jae
and
and
in
jo
in
xorl
xchg
add
sbb
inc
mov
pop
xorb
lds
fcomps
push
shlb
xchg
dec
adc
xchg
mov
xor
cli
dec
scas
xor
ja
add
mov
pop
das
add
xchg
stc
sub
fnsave
jmp
iret
xchg
xchg
mov
filds
es
sahf
call
add
andl
dec
pop
jg
or
jle
inc
jmp
add
mov
jmp
add
cmp
std
pop
inc
fisttps
jmp
or
and
or
dec
jmp
adc
fildl
dec
push
mov
push
daa
push
xchg
pop
lahf
shll
adc
aaa
xchg
or
push
adc
lods
fwait
mov
dec
inc
and
pop
sub
inc
mov
pop
lock
add
fisubrs
or
push
or
adc
xor
dec
jae
fs
cmp
sub
add
mov
dec
sub
mov
jns
stos
mov
sbb
lret
in
add
int
sarb
mov
jmp
dec
add
xor
sub
icebp
jmp
cmpb
std
mov
dec
stos
sub
mov
pop
adc
cli
shrb
test
adc
xchg
lret
adc
in
and
or
dec
ficoml
dec
xor
dec
or
inc
sbb
add
pop
cmp
add
ret
outsl
sbb
sub
pusha
mov
adc
push
inc
jge
and
and
movsl
cmc
pop
fwait
jmp
test
pop
pusha
andl
inc
xchg
mov
clc
imul
pop
add
jmp
sbb
ja
dec
out
clc
push
test
fdivrs
leave
dec
dec
imul
das
adc
and
and
push
pop
mov
jmp
xor
cwtl
pop
or
and
jmp
pop
pop
decb
fists
cmp
inc
xor
push
mov
and
mov
sbb
xchg
flds
push
jne
or
pusha
ds
cmova
inc
sub
arpl
mov
pop
shl
or
inc
stos
or
outsb
fpatan
mov
sub
sbbb
pop
push
pop
popa
xchg
sbb
cwtl
ds
rolb
jmp
adc
push
pop
mov
loopne
jge
stc
add
xor
xlat
sbb
push
inc
pop
add
insl
cmp
sbb
or
cmpsb
mov
ficoml
es
pop
add
movsl
inc
push
sbb
hlt
cld
mov
inc
lcall
gs
and
icebp
mov
adc
mov
mov
adc
les
movsl
out
mov
xor
xor
push
sub
dec
jae
in
add
pop
jg
jecxz
sbb
xor
xor
nop
adc
xchg
jle
or
push
add
and
pop
mov
add
mov
stc
jle
jp
dec
fnstsw
xor
xor
mov
orb
ror
push
adc
int
aad
lds
sbb
and
fiadds
pop
mov
or
movsb
jecxz
jecxz
pop
daa
ljmp
stos
in
or
outsl
add
lret
insb
mov
fcoms
push
inc
jle
insb
add
adcl
adc
fcomps
jns
jno
cmpl
dec
in
nop
inc
xchg
mov
and
idivb
inc
xor
dec
push
sub
or
jl
sbb
imul
add
xchg
push
mov
jmp
sarb
cmp
call
out
mov
push
cli
add
jmp
imull
out
in
cli
mov
xchg
aam
push
sbb
mov
xchg
mov
mov
pop
dec
and
pusha
xchg
out
xlat
sub
inc
or
test
mov
in
mov
add
cli
cwtl
pop
sub
fs
addr16
and
mov
clc
stos
js
dec
xor
add
adc
mov
push
and
and
je
fsubl
incb
jmp
inc
and
sbb
jae
push
jno
shr
add
dec
xor
add
push
xor
xchg
add
jnp
icebp
cmp
add
add
adc
xchg
shr
mov
js
adc
popa
shl
hlt
fistl
cs
or
add
test
nop
iret
jmp
cmc
add
adc
dec
out
xor
adc
xor
loopne
bound
xchg
fisttpl
xlat
jmp
adc
push
and
sub
jge
xchg
push
pop
in
mov
stos
push
mov
jnp
std
test
bound
sbb
mov
jnp
sub
xor
and
cmc
pop
add
out
jge
lret
inc
dec
repnz
out
sub
call
jmp
int
xlat
test
std
loop
pop
andb
xchg
cmp
mov
inc
cmc
lret
or
push
pop
call
popf
cmp
mov
adc
filds
mov
push
pop
or
scas
add
pop
xchg
add
bound
pop
cltd
repnz
and
push
les
add
out
pop
xor
orb
in
std
in
outsb
xor
decb
daa
or
decl
dec
xchg
pop
or
pop
es
bound
jae
jp
pop
jmp
or
leave
cwtl
daa
mov
sahf
xor
outsb
shr
add
aad
push
push
dec
pop
xor
pushf
bound
mov
mov
xchg
ljmp
sub
jecxz
inc
adc
sbb
mov
add
clc
pop
push
aaa
fsub
xor
mov
sar
xchg
jp
hlt
mov
jno
xor
pop
xchg
cmp
pop
sahf
mov
orb
xor
sbb
and
add
add
push
push
nop
sub
dec
lahf
fldt
icebp
mov
jae
or
imul
pop
mov
stc
pop
test
scas
sbb
push
adc
cli
pop
fcmovu
add
xlat
add
sbb
sub
jmp
sub
add
lock
adc
push
ret
sbb
xor
out
add
je
outsl
push
subb
sti
pusha
cmp
xor
in
add
jp
dec
push
jecxz
or
adc
pop
and
aas
push
push
xchg
sub
sub
cmpsb
addr16
jno
cmpsb
sub
push
ret
enter
and
shl
lret
js
xor
das
adc
loop
inc
jle
pop
test
jmp
cmp
adc
cmp
xor
cmovnp
xlat
jmp
jno
js
dec
fistps
das
and
test
dec
push
push
cmpsl
insb
pop
repz
int3
adc
cmc
in
or
pushf
add
jmp
add
push
add
adc
pop
dec
mov
in
jmp
dec
add
xchg
push
ret
test
pop
enter
ret
mov
jbe
mov
pop
pop
rep
jnp
shrb
adc
push
or
push
push
jmp
enter
and
jmp
cli
push
pop
js
push
add
shr
xchg
in
call
pop
push
xorl
jbe
add
subb
sbb
lret
inc
jno
bound
sbb
test
test
or
mov
sbb
movsl
push
movsl
fldl
pop
cmp
rclb
cwtl
test
xchg
mov
add
jge,pt
popa
jnp
mov
lods
push
out
pop
push
lea
push
call
push
adc
imull
xorb
or
dec
jg
lock
adc
inc
loope
xor
repnz
aad
dec
sub
push
loope
lahf
test
jmp
lds
lock
push
dec
push
xor
je
add
ret
add
cmp
shlb
mov
dec
pop
pop
pop
xchg
or
jmp
xor
adc
pop
dec
or
pop
adcb
ljmp
mov
pop
rcrb
add
leave
push
shl
aas
rcr
and
pop
loope
std
cmp
cwtl
jmp
das
inc
sbb
es
shrl
cmpsb
pop
jge
inc
je
adc
pop
and
xchg
aam
mov
and
xor
cwtl
xchg
mov
sti
cmp
insb
push
out
mov
cmpsl
ret
mov
jbe
dec
add
aas
data16
lret
mov
pop
jmp
sbb
mov
repnz
popa
sbb
das
add
dec
scas
inc
sbb
xor
stos
and
xchg
les
leave
out
add
shll
xchg
adc
mov
push
pop
scas
nop
in
jecxz
js
imul
sbb
cli
mov
push
cmc
in
jl
jmp
or
push
dec
or
or
pop
dec
cmp
and
push
adc
sbbb
sbb
sarl
fs
test
idivl
jnp
cwtl
adc
iret
mov
sti
lods
scas
out
test
shlb
xor
mov
mov
jns
adc
mov
jmp
mov
adc
mov
std
and
dec
je
test
inc
stos
sbb
stos
xchg
fimuls
add
jae
mov
in
out
mov
daa
xor
ret
cmp
lock
add
pop
mov
nop
lods
and
add
mov
ljmp
imul
scas
inc
dec
push
push
mov
mov
push
xchg
mov
cs
xor
out
bound
addb
and
jg
int
test
or
push
fmuls
in
dec
shll
mov
push
mov
dec
inc
ljmp
in
bound
fstpl
pushf
jl
push
push
push
iret
scas
or
test
xlat
ss
jnp
hlt
dec
inc
test
pop
shll
filds
pop
jp
cmp
or
sbb
fdecstp
repnz
sbb
and
cmc
jmp
jns
daa
jmp
fisubs
xchg
or
xchg
pusha
outsb
sbb
insb
dec
leave
mov
test
or
adc
int3
or
sbb
hlt
call
cmp
cmp
mov
ljmp
xchg
dec
jmp
in
mov
sub
sbb
bound
out
cmp
fldenv
test
or
cli
test
xor
jno
jnp
push
dec
ds
sbb
jns
pop
insb
dec
jmp
arpl
sub
jmp
mov
in
or
mov
sub
pop
popa
imul
mov
xchg
out
fsts
jno
adc
movsb
sti
sub
push
mov
pusha
cmpsb
ljmp
sarb
sub
pop
imul
mov
mov
hlt
xor
int
adc
dec
pop
jmp
and
mov
mov
icebp
lret
ret
and
sub
incl
jb
xor
jae
mov
mov
and
mov
xchg
aaa
ss
dec
ret
xchg
daa
hlt
inc
js
cmpsb
adcb
push
inc
lahf
mov
daa
jo
bound
cmp
dec
and
jmp
in
dec
fs
or
call
xchg
shr
cmpsl
call
xchg
jbe
inc
add
sbb
pusha
pop
inc
mov
pop
add
push
shlb
add
rcrb
call
push
adc
notb
jns
cmp
xor
and
jnp
shlb
mov
in
bound
icebp
jne
push
inc
cmp
mov
addb
fstl
jl
scas
pop
rcrl
jmp
icebp
jae
pop
lret
pop
lret
mov
dec
dec
jno
sbbl
in
cltd
jb
cmp
xor
mov
js,pt
xchg
xor
fs
xchg
insb
inc
lret
idivb
ljmp
test
sti
mov
add
jecxz
xor
push
orl
dec
sub
add
xchg
add
xor
lds
bndldx
sbb
pop
lahf
push
push
push
push
pop
cli
jmp
negl
inc
sbb
or
hlt
pop
dec
or
mov
addr16
mov
push
test
cmc
shl
in
push
loopne
std
push
and
ljmp
repnz
daa
jg
rcll
adc
add
mov
inc
jmp
or
bound
inc
jns
mov
push
stc
mov
pop
add
mov
cld
or
cmp
push
dec
nop
test
push
call
ficoms
mov
mov
aam
leave
aad
adc
pop
ds
js
test
push
pop
add
jmp
sti
adc
enter
ss
jle
test
ljmp
out
mov
xchg
jb
sub
lds
stos
mov
imul
sub
enter
add
je
xor
je
movsl
outsb
fildl
bound
sub
fucom
mov
and
sub
fs
into
xchg
testb
daa
pop
das
insl
repz
adc
xchg
stos
das
jns
inc
sub
inc
jl
movsb
dec
or
xchg
imul
or
inc
dec
push
add
pop
xchg
cmp
pop
addr16
dec
lahf
and
popa
mov
clc
scas
aam
stos
lret
dec
lock
jo
fdivs
mov
adc
jl
shlb
inc
push
or
add
fs
dec
pop
ret
dec
repnz
cld
mov
pusha
sub
mov
adc
aam
or
stc
mov
push
dec
push
jl
cmpb
stos
inc
sti
fimuls
ds
and
cmpsb
fcomip
xchg
dec
aas
int
cs
jecxz
dec
test
mov
ja
cmp
pop
ret
inc
xor
xorb
mov
pop
js
push
jmp
push
mov
int
pusha
iret
sbb
aaa
hlt
push
dec
fldenv
adc
and
loop
js
jbe
lcall
data16
sbb
js
jnp
mov
pop
pop
inc
inc
imull
test
sub
out
inc
or
push
sti
imul
jb
pusha
mov
test
or
pop
test
lret
push
cmp
pop
sub
repnz
xchg
repz
adc
test
adc
xor
out
jb
or
jmp
xchg
jnp
popf
aam
ljmp
push
push
xchg
add
xlat
loope
inc
add
stc
xchg
cltd
arpl
mov
mov
jg
jmp
aas
mov
testb
sbb
mov
stos
es
loopne
push
sbb
jo
add
xor
xor
sbb
push
enter
fildl
cmp
int3
in
mov
test
std
or
test
pop
rcrb
ror
adc
cmpsl
push
cwtl
lds
ds
add
pop
nop
inc
std
jmp
aam
js
and
in
push
dec
movsl
inc
sub
cli
mov
rolb
mov
or
test
pop
outsl
and
sbb
push
pop
inc
cwtl
jmp
jmp
test
xchg
cmp
in
mov
pop
arpl
mov
push
repnz
cmpb
dec
and
inc
add
sub
mov
cmp
jmp
mov
decl
add
pusha
push
mov
mov
imul
inc
out
popf
jo
or
xor
add
ret
out
mov
xor
dec
jmp
lock
mov
push
xchg
daa
or
je
adcl
xor
icebp
sbb
pop
pop
push
push
inc
add
gs
inc
pop
or
cwtl
movsl
addl
loop
mov
daa
cld
add
add
or
sub
out
movl
jno
push
pop
popa
popf
mov
cmp
mov
lds
push
mov
icebp
pop
sub
inc
orb
pop
push
or
rcrb
pop
repz
and
pop
bnd
pop
adc
sub
push
repz
pop
inc
repnz
sbb
test
data16
xchg
aas
sub
sti
jo
push
in
dec
mov
clc
adc
not
dec
or
add
insb
and
dec
push
adc
rclb
push
pop
pop
je
xchg
testl
out
sub
jge
push
call
in
cmc
rcrl
es
pop
push
clc
jmp
test
addr16
repnz
pop
dec
adc
xchg
addl
mov
out
popa
or
test
xor
cmp
jmp
cld
push
sub
iret
xor
xor
cmpsb
xchg
xchg
out
scas
lock
xchg
dec
xlat
sbb
aaa
xor
outsb
mov
xchg
cmp
insb
inc
enter
adc
jo
and
xor
mov
lahf
and
sbb
push
sub
out
add
inc
jl
xchg
scas
shll
xor
pop
add
jl
push
data16
in
cltd
sbb
jecxz
cmpsl
jl
or
push
push
inc
les
ljmp
movsl
test
stos
xchg
nop
bound
xor
and
out
add
jmp
sbb
lock
sub
xchg
inc
mov
lea
lds
pop
hlt
pop
and
pop
mov
and
pop
dec
ss
xor
int3
ret
add
push
movsb
add
dec
bound
dec
xor
sub
mov
gs
out
add
sbb
xor
mull
or
cltd
pop
stc
iret
mov
in
fdiv
daa
pop
cmp
jmp
imulb
dec
enter
push
cld
mov
icebp
push
xchg
dec
iret
out
aaa
sarl
cmp
push
mov
sbb
lahf
rol
leave
cld
and
cwtl
and
dec
loope
std
push
in
cmp
adc
or
sub
add
sbb
inc
test
sbb
xor
rolb
add
dec
jmp
push
cmp
sbb
dec
rcll
in
outsb
hlt
insl
rorb
add
lret
je
cmpsb
jg
jmp
push
add
ljmp
xchg
mov
js
or
sub
ror
jl
add
shlb
pop
or
std
xor
lods
add
imul
xor
loop
icebp
xor
aad
aam
and
and
push
mov
or
arpl
pop
sbb
loop
aam
pushf
je
mov
jl
loope
cmp
outsb
shlb
loope,pn
clc
push
push
ret
sbb
movsb
pop
sub
push
xor
inc
sbb
cvtdq2ps
popa
pop
mov
data16
sub
dec
inc
in
jmp
pop
in
dec
mov
dec
das
mov
or
mov
lahf
aas
sbb
add
mov
jbe
pusha
es
xlat
cmp
shl
fadds
sub
sbb
mov
add
mov
ss
inc
pop
fistps
dec
psrad
dec
xlat
or
aas
adc
fstps
btsl
xor
pushl
nop
in
addb
cltd
popa
xor
dec
push
in
sahf
dec
lcall
jnp
dec
outsl
inc
xor
pop
push
ret
movl
dec
jne
outsl
sbb
sub
popa
inc
jmp
sahf
movsb
and
sbb
cmc
mov
fstps
cmp
inc
imul
cmpb
cltd
pusha
lcall
push
movsl
adc
pop
pop
rclb
pop
in
push
pop
add
int
jne
pop
add
leave
adc
daa
mov
mov
pop
mov
fnsave
rcl
cmp
leave
rcll
jg
push
xor
xor
mov
pop
cmp
in
movups
cmp
repnz
mov
mov
jae
push
in
lret
sti
popa
xor
push
mov
mov
sub
mov
pop
xor
pop
mov
notb
test
or
and
insb
push
mov
pop
push
loopne
push
jg
xchg
pop
jmp
imull
pop
outsb
mov
adc
lcall
fs
stos
mov
ret
push
and
add
data16
jmp
imul
xor
xchg
pusha
subb
dec
jne
pop
paddw
or
cmpsb
and
fsubs
sbb
mov
xchg
mov
add
pop
push
cmp
scas
jl
xorb
rcl
test
adcb
pop
out
adc
and
lcall
jmp
out
fsubl
stos
icebp
add
or
adc
jns
es
fimull
jmp
mov
scas
hlt
fwait
push
pop
or
mov
inc
add
xor
xor
sbb
out
xor
ret
add
aaa
push
adc
dec
push
cmpb
push
add
xorb
push
xor
sub
cli
jmp
inc
test
testb
andl
cmpsl
adc
sub
xchg
add
lods
xor
pop
pop
mov
add
push
mov
loopne
jmp
or
push
push
and
jne
sti
sbb
inc
ret
lods
popa
loope
and
movl
add
add
jns
outsb
or
xchg
fwait
mov
xorb
and
push
mov
add
jae
pop
outsb
enter
jg
jp
or
mov
mov
je
pop
sub
jne
push
daa
clc
fsubr
push
jg
fisubl
sbb
data16
add
andl
add
int3
lock
mov
or
push
popf
jl
jmp
mov
pop
mov
cbtw
adc
mov
and
insl
and
testb
jbe
out
add
bound
pop
out
adcl
jo
dec
inc
sub
mov
shl
leave
pushf
add
dec
lods
cs
out
xor
inc
inc
dec
xor
adc
hlt
scas
js
ret
push
add
xchg
fcoml
fstps
cmp
push
mov
cli
popf
push
mov
or
jne
dec
push
xchg
mov
push
mov
jnp
adc
fs
lock
out
jbe
or
pushf
add
mov
aam
test
loope
xor
loope
popf
in
pop
add
mov
not
jmp
aas
adc
jnp
pusha
shl
jo
repnz
pop
mov
jg
xor
aam
subps
mov
and
inc
shlb
pop
add
mov
cld
cmpsl
ret
subl
icebp
xorl
sbb
add
aas
es
jno
pop
inc
inc
dec
rcrb
mov
cmp
push
add
insb
jge
mov
cmp
xlat
mov
dec
inc
push
enter
inc
addb
ds
gs
neg
dec
rorb
lock
fnstenv
or
daa
loopne
pop
lret
xor
adc
xor
das
push
push
dec
mov
ffree
ja
sbb
mov
lcall
pop
push
fucomip
ja
or
push
pop
jne
adc
aam
adc
cmp
mov
jg
sub
in
in
and
jmp
test
cwtl
pop
push
mov
notb
imul
adc
xor
jge
pop
xchg
insb
fidivrl
push
ljmp
push
jmp
insb
scas
jmp
mov
push
inc
sub
or
mov
add
call
repnz
push
movsl
jmp
dec
sbb
rolb
inc
stos
or
dec
je
cwtl
jecxz
mov
loope
aam
and
loop
sbb
inc
and
insl
cmc
or
jle
lcall
rcl
push
mov
pop
movb
or
test
rcrb
jp
faddl
and
adcb
pusha
push
adc
or
ja
cmpsb
repnz
sahf
mov
imul
or
and
push
lret
pop
mov
jno
loopne
sub
adc
jmp
in
scas
leave
adc
dec
or
xor
pushf
mov
repz
cmp
mov
orb
xor
dec
xor
rolb
lahf
not
ljmp
sahf
xchg
ret
lret
xor
mov
mov
jmp
mov
dec
inc
ds
push
sahf
imul
sub
or
mov
sub
sahf
mov
push
and
pushf
jg
push
lock
lret
mov
dec
xor
popl
scas
lea
mov
mov
add
les
out
push
movsb
jmp
add
movsb
repz
cmpsl
push
ror
cmp
in
dec
aaa
sub
adc
add
mov
inc
outsb
mov
pop
jne
pop
inc
mov
popa
sbb
adc
push
mov
xchg
push
sbb
pop
or
loopne
mov
adc
and
ljmp
call
andb
cwtl
cmpb
or
test
ret
pop
roll
jmp
leave
adc
mov
repnz
mov
sub
inc
add
cmp
mov
inc
jno
fs
insl
xor
or
in
lret
sarb
in
or
mov
jmp
loopne
push
arpl
mov
test
pop
add
imul
push
in
sbb
mov
push
pop
and
and
or
flds
hlt
cmp
inc
add
push
mov
lret
and
inc
or
sub
test
clc
mov
push
imul
push
pop
mov
mov
daa
sub
es
inc
mov
pop
inc
stc
inc
push
pushf
add
sar
test
fbld
add
lret
aam
sbbl
mov
and
scas
icebp
mov
push
pop
jmp
jmp
test
sbb
adcb
ja
sub
mov
leave
pop
jl
stos
xor
pop
sub
push
cs
adc
es
jb
dec
inc
adc
push
push
xchg
push
push
dec
in
ja
xorl
je
popf
hlt
cmp
sub
push
sub
jbe
sub
inc
sbbb
imul
push
movsl
lods
adc
jle
lcall
test
inc
loop
test
out
aad
lods
mov
das
mov
add
movb
mov
sub
pop
imul
mov
stos
sbbb
mov
imull
inc
nop
out
pop
subb
jp
jecxz
pop
movswl
push
jge
outsb
adc
cs
incb
inc
aas
or
pop
pop
xor
xchg
lds
lods
xorl
or
cmpxchg
dec
mov
xchg
pop
sub
push
inc
or
sub
add
or
or
cmc
or
dec
sbb
push
xchg
jl
xor
stos
loopne
jmp
push
cmp
rcrl
and
cmp
xchg
loopne
movsb
xor
inc
mov
filds
dec
pop
sub
mov
aas
stos
dec
leave
sahf
inc
ja
xlat
adc
rclb
push
lods
out
jns
or
and
inc
lea
inc
or
sub
pop
out
dec
out
inc
cmp
lds
pop
xlat
subb
jmp
pop
add
sub
mov
cli
cmc
and
testl
add
mov
daa
pop
in
and
test
es
pop
lret
mov
rclb
sbb
pop
add
repz
cmc
mov
daa
xor
push
cld
jp
imul
add
sbb
or
xchg
sub
dec
scas
pop
orb
adc
pusha
add
cmp
mov
jg
push
das
subl
dec
cwtl
or
jl
mov
xchg
cld
or
sbb
stos
jmp
mov
mov
and
lcall
pop
push
movsl
fwait
bound
pop
push
scas
sub
adc
into
test
in
imul
popa
jmp
dec
and
mov
xchg
pop
lahf
loopne
sub
pop
xor
inc
sub
mov
jmp
jp
mov
sahf
adc
jl
lea
or
xchg
mov
push
mov
jmp
mov
in
je
lret
stos
jmp
push
repz
cmc
push
enter
jmp
decb
sub
mov
sbbl
jp
cld
fimuls
insl
ja
mov
popa
lea
jge
icebp
sub
in
sub
jae
dec
and
arpl
les
stos
cmc
jp
xchg
es
push
mov
test
pop
mov
and
dec
bound
dec
cmp
xor
out
pusha
adc
push
push
mov
lods
add
add
daa
sub
imul
cltd
jmp
xchg
mov
mov
dec
pop
mov
jnp
jl
lahf
inc
mov
add
fisttps
pop
pop
dec
addr16
enter
aam
ret
in
jge
outsb
rcrl
jmp
dec
inc
sbb
push
outsl
and
pop
stos
in
push
cmpsb
in
js
js
jmp
and
pop
mov
mov
cmpsl
into
leave
clc
push
add
outsb
xchg
cmpsl
aam
mov
and
das
dec
push
out
decl
in
mov
and
inc
mov
pop
sahf
call
test
pop
mov
scas
sub
sub
call
mov
xchg
sub
mov
into
push
fisttpll
repz
add
dec
incb
aam
popf
jmp
sub
inc
lods
fs
cwtl
sub
mov
xor
push
stc
xchg
add
xor
inc
ficoml
jb
pop
stc
pop
rclb
and
and
jecxz
daa
int
fs
add
push
mov
shlb
das
std
push
xchg
or
xchg
adc
mov
adcb
jne
sbb
cmpb
jecxz
sbb
mov
adc
inc
pop
scas
mov
mov
push
imull
xlat
scas
jo
sub
xor
cmp
jo
inc
pop
outsl
shlb
mov
std
pop
sti
pop
sbb
lds
sub
xor
push
add
and
cmp
lcall
sub
sbb
push
dec
lcall
lock
push
mull
dec
cwtl
push
sub
sbb
pop
add
sbb
jle
sbb
xor
add
or
decl
xchg
dec
adc
mov
jmp
jne
pusha
inc
push
jmp
mov
neg
or
leave
mov
imul
pop
mov
push
out
fistl
jmp
sti
je
sti
or
cmp
pop
push
nop
push
daa
lds
sub
call
sahf
xchg
jp
mov
jne
dec
mov
and
dec
pop
mov
inc
add
sub
sahf
jae
adc
jns
mov
fnstsw
shr
neg
or
cwtl
sbb
fldenv
dec
push
xor
push
nop
mov
pop
pop
loope
and
lret
push
pop
pop
add
cltd
mov
dec
add
das
imul
jb
jge
push
or
or
outsl
mov
inc
insl
cs
pusha
add
or
mov
fsubrl
daa
ret
insb
jne
enter
aas
cld
cltd
subb
dec
sbb
fbld
shlb
cmp
ljmp
mov
jbe
aas
lock
lret
iret
jle
add
clc
fsubrp
js
orl
popa
and
cmp
xor
cmpb
sti
es
add
cmp
push
stc
mov
push
decl
xchg
call
out
cmpsl
xor
push
mov
insb
mov
add
aas
xor
arpl
or
mov
cmp
adc
xchg
jp
mov
cmp
cmp
cltd
arpl
ret
pop
push
cmc
pusha
add
pop
add
sbb
pop
aam
loopne
xor
pop
fisttpll
push
mov
mov
and
int3
and
cmp
or
mov
push
adc
rcrb
pop
jmp
maskmovq
negl
and
cmpsl
lret
fldl
lea
xor
push
test
scas
cmp
cmp
jae
andl
or
pop
push
push
es
push
adc
jne
fsubr
sti
inc
pop
jb
add
sub
add
repz
xor
mov
shl
in
and
pop
inc
dec
cmp
mov
xor
and
mov
sbb
cltd
xchg
inc
dec
pop
jg
jg
jmp
mov
out
jne
or
inc
pop
adc
ljmp
lods
sub
add
leave
ljmp
hlt
fcomi
or
ja
xchg
scas
inc
inc
pusha
sti
inc
xchg
loop
inc
fldenv
cwtl
sar
push
xor
insb
test
xor
xchg
mov
ljmp
add
daa
xor
jbe
adc
dec
sbb
sbb
leave
loope
jbe
sarb
jle
jp
ss
int3
fiaddl
push
cmp
testb
jne
push
shr
push
cltd
jbe
neg
mov
inc
add
jmp
sub
cmp
push
popf
lds
sarl
pop
scas
adc
mov
adc
repz
daa
dec
push
mov
subl
jp
sahf
add
jge
dec
push
je
lret
iret
jl
push
ljmp
push
js
sub
add
addr16
loopne
cmp
pushf
or
fists
xchg
aad
in
push
push
mov
jbe
pcmpgtw
and
add
add
and
dec
push
imulb
or
push
jmp
or
inc
push
add
sub
xlat
inc
sub
jecxz
pop
lret
movsb
aaa
addb
cmp
pop
incb
cmp
hlt
std
pop
ljmp
mov
jmp
pcmpgtd
bnd
out
adc
fucom
es
push
and
movsl
pop
or
or
jae
jecxz
cmp
jmp
cmp
xor
push
jmp
pop
ja
add
jnp
fisttpl
dec
sti
or
or
pop
ljmp
mov
cmp
iret
lcall
and
insl
add
in
pop
push
mov
ds
xchg
push
cld
aas
das
out
or
ret
pop
popa
jb
insb
imul
mov
ja
sub
or
push
or
pop
add
xchg
in
pop
mov
dec
add
mov
shlb
push
pop
movsl
push
shrl
and
aas
cmp
movsb
add
pusha
xchg
sub
and
and
add
or
inc
dec
ret
xchg
mov
pop
push
and
sub
sarb
push
jo
xor
jnp
push
and
or
sarl
and
mov
stos
insl
mov
add
jle
mov
and
les
out
lock
cwtl
mov
outsl
pop
stc
sti
jno
push
mov
jmp
out
cmp
mov
in
mov
push
loopne
sbb
imul
push
cmpb
pop
popf
push
mov
mov
dec
fs
orb
add
pop
fbstp
mov
mov
aad
in
inc
xor
into
out
push
push
pop
imul
push
mov
call
jbe
daa
gs
mov
jnp
repnz
testb
inc
iret
push
mov
mov
push
out
insb
ljmp
mov
xchg
pop
lds
and
push
jg
inc
nop
adc
jmp
push
adc
inc
push
mov
daa
aaa
push
test
cli
fcomp
mov
pushf
fisubl
add
ss
fiaddl
lahf
dec
pop
jl
aas
je
sbb
addb
aad
cmp
adcb
sub
sbb
inc
sub
fsts
pop
popa
rcrb
jmp
scas
mov
adc
call
or
pop
in
pusha
add
outsl
adc
rol
inc
adc
inc
repz
repz
je
pop
adc
daa
add
in
jns
mov
in
and
add
dec
add
shlb
xchg
jl
add
cwtl
mov
mov
or
cli
inc
mov
scas
jne
mov
cmpsb
and
lret
ret
pop
add
pop
call
ret
ret
subl
xchg
cmp
sbb
or
jns
dec
jle
icebp
dec
sbb
loope
cmp
das
imul
cmp
lods
and
cmc
dec
movsb
sbb
inc
xlat
mov
or
pop
push
std
dec
pushf
sub
mov
or
inc
repnz
jle
repnz
pop
push
popf
loop
arpl
xchg
data16
lret
decl
cld
iret
movsb
mov
sub
xor
push
xchg
ljmp
mov
sti
test
pop
repnz
cmp
add
aad
adcl
mov
add
jnp
jns
xchg
jb
and
incb
mov
std
inc
frstor
sub
or
mov
dec
cmp
push
mov
fucomp
jmp
adc
and
mov
and
data16
pusha
mov
sbb
push
cmp
loopne
js
negb
out
jne
add
pusha
andb
insl
insb
sub
mov
test
popa
xchg
negb
imul
sub
pop
sub
xchg
fs
rcl
xchg
jl
pop
xor
mov
add
sbb
push
push
divb
loopne
fldl2t
dec
test
loopne
or
push
push
jo
icebp
mov
add
xor
jno
mov
outsb
mov
fucom
mov
dec
sbb
add
lods
aas
mov
mov
arpl
xor
mov
gs
push
ficoms
je
dec
addl
sub
mov
jecxz
fs
and
jg
jecxz
xor
fcmove
or
xchg
jmp
das
in
out
pop
jns
cmpb
mov
test
das
adcb
add
ja
idivb
jmp
insb
add
outsl
xlat
mov
sub
sub
adc
jae
add
inc
push
add
inc
outsl
jge
mov
inc
cmpsb
not
pop
add
adc
or
popa
mov
push
adc
pop
aaa
or
out
nop
xchg
pop
push
notl
sub
and
pop
xor
push
cld
enter
roll
js
nop
pop
push
mov
mov
mov
int3
mov
ja
jno
jmp
inc
hlt
mov
pop
cwtl
sbb
pop
dec
test
xchg
out
ljmp
je
inc
rcl
mov
dec
push
jmp
pop
in
add
sarb
or
cmp
bound
in
adc
mov
cmp
add
inc
pop
sub
sub
daa
push
mull
adc
jb
pop
mov
daa
mov
jo
and
punpckhbw
or
and
hlt
scas
inc
rcrl
shll
add
movsl
adc
jae
inc
jle
push
and
pop
sub
push
pop
dec
xor
xor
repnz
imul
sbb
leave
in
mov
cmp
dec
or
pop
jmp
cmp
add
movsb
add
xchg
outsl
test
in
lock
cwtl
and
cli
pop
call
adc
adc
pop
jecxz
ds
aad
in
loopne
mov
pop
dec
cwtl
test
mov
sub
scas
xor
ljmp
jecxz
stc
repnz
lods
lret
xchg
cmp
leave
mov
gs
push
push
cmp
adc
inc
push
lock
outsb
cwtl
sub
push
in
add
push
xor
jae
adc
jge,pt
shl
xchg
push
and
add
jae
adc
mov
lret
adcb
mov
add
popf
pop
sbb
sbb
jnp
jmp
inc
xchg
inc
repnz
inc
add
pusha
xor
dec
or
mov
mov
mov
dec
sub
fdivrl
pop
mov
insb
sub
outsl
or
cmp
outsl
xchg
mov
shl
xor
fimull
dec
mov
ljmp
inc
jle
sub
ja
pop
xor
and
and
mov
scas
pop
xor
sbb
and
pop
or
adc
mov
dec
pop
test
mov
call
pop
mov
pop
mov
js
jge
pop
pop
pop
pop
mov
inc
cli
mov
jns
add
xor
sub
pop
pop
or
test
les
mov
mov
mov
cmp
push
pop
fs
adc
orb
xor
mov
add
xorl
ljmp
push
xor
fmull
jl
push
ljmp
or
xor
cmpsl
insb
lret
sqrtps
and
cltd
mov
fs
pop
stos
xor
sbb
mov
inc
sbb
sub
call
flds
push
xor
push
leave
lods
and
and
pusha
pop
pop
adc
shll
cwtl
imul
xlat
imul
bound
fdivs
jne
and
mov
jmp
ret
mov
push
and
shll
pushf
push
test
inc
movsl
fidivs
pop
add
xor
push
xor
and
mov
pop
sub
pop
imul
cmp
enter
push
popa
popa
and
add
dec
jle
shr
jb
sub
insl
pop
enter
mov
and
sub
sub
xor
ljmp
leave
das
or
push
mov
insb
inc
lock
gs
mov
adc
and
cltd
in
leave
mov
pushl
mov
adc
inc
adc
push
push
sub
xchg
push
js
push
push
mov
lret
aas
or
int
shr
or
std
das
mov
mov
ds
adc
sbb
sub
jp
cwtl
ds
loopne
cmp
jmp
xor
lods
cltd
xchg
or
lcall
pusha
cmpb
and
testl
arpl
shrl
out
je
shl
ret
push
mov
pop
jbe
xchg
icebp
sti
ret
or
aas
and
jbe
and
subl
jns
jp
ret
pop
cmpsl
add
out
dec
jecxz
aas
push
mov
and
adc
lock
mov
repz
push
add
imul
pop
aaa
sub
xchg
and
or
pop
je
decb
add
push
sub
push
adc
push
ret
insl
push
dec
add
lds
or
inc
sub
popa
imul
add
xchg
jmp
dec
outsb
repnz
xor
jmp
cmc
push
adc
imul
scas
inc
push
jmp
and
sub
adc
ljmp
mov
lcall
push
sbb
jge
lret
es
and
clc
jmp
pop
sbb
negl
xor
dec
or
jle
mov
jae
push
push
adc
int
mov
mov
push
aas
popa
xchg
mov
fisubl
mov
int3
lcall
ss
sbb
add
mov
xorl
inc
jmp
jle
dec
addr16
and
or
jo
shr
neg
addb
fstpl
cmp
mov
sub
push
mov
pop
mov
fwait
in
roll
jmp
test
shrb
xor
adc
cmc
test
pop
clc
testl
shl
sbb
xlat
mov
and
pushf
fcoml
xchg
cmp
and
xchg
push
add
mov
jmp
in
ret
sub
adc
adc
mov
ret
nop
push
test
adc
or
push
bound
nop
fstpl
xor
outsl
add
mov
daa
orb
arpl
mov
xlat
jno
repnz
sbb
mov
aam
jecxz
add
add
push
mov
loope
sub
mov
fdivs
jmp
dec
xchg
loop
pop
mov
aad
arpl
sub
dec
lods
cld
in
mov
dec
clc
aaa
ret
mov
mov
add
stos
leave
mov
out
mov
jno
add
mov
rcrb
sub
cltd
sbb
and
xor
dec
imul
adc
and
addr16
idivl
mov
inc
or
enter
pushf
sub
out
loope
rolb
pushf
ret
clc
pop
test
loop
mov
aam
mov
dec
in
icebp
pop
push
in
xlat
lods
jmp
add
xor
imul
and
inc
mov
jge
imul
or
xor
mov
daa
in
xor
int3
not
push
push
jmp
pop
loopne
insb
fdivrs
pop
orb
sub
jmp
sub
adc
and
xchg
lock
jle
loop
cltd
dec
jge
add
cs
dec
je
inc
lahf
pop
inc
push
repnz
popf
lret
cmpsb
xchg
jnp
gs
add
and
push
repnz
sbb
aad
in
lods
sbb
mov
jmp
fistpl
mov
int3
xchg
pusha
roll
push
jmp
push
fisttps
jmp
xchg
mov
mov
or
lea
cmp
hlt
dec
lods
inc
or
imul
orl
or
or
adc
out
outsl
xor
cmp
nop
xor
imul
dec
je
clc
sub
sbb
push
xchg
outsl
hlt
fimull
add
jl
mov
loopne
sbb
and
in
add
jmp
mov
mov
add
pop
stos
jp
subl
pop
mov
in
ret
xchg
inc
jmp
lahf
push
xor
je
lea
aad
loope
movsl
jne
push
pop
push
pop
stc
inc
movsl
cmp
jns
pop
fwait
stc
pop
xlat
cmpb
aas
fistpll
xchg
push
daa
inc
lcall
lods
or
je
icebp
negb
pop
ljmp
mov
pop
pop
scas
fstpt
rcrb
push
aam
std
sbb
adc
mov
bound
clc
xor
adc
cmp
xchg
fcoms
add
pop
scas
adc
into
dec
or
push
xchg
jae
inc
push
sti
nop
gs
cmp
dec
pop
cwtl
xor
sub
sarl
popa
mov
push
pop
dec
pop
pushf
push
int3
push
popf
notb
add
mov
dec
out
pop
inc
add
stos
aaa
fcmovu
inc
or
push
sbbl
repz
ja
adc
jge
mov
scas
inc
jg
push
mov
xor
enter
xor
mov
adc
xchg
fcoml
mov
lahf
mov
pop
mov
shrb
bound
sbb
or
mov
pop
and
mov
push
les
shll
enter
or
jnp
push
hlt
stc
add
je
test
mov
and
cmp
bound
lods
test
test
scas
cmp
lods
dec
shl
mov
adc
push
js
pop
or
mov
pop
xchg
jb
orl
sbb
jmp
mov
jnp
or
inc
jne
sub
and
outsl
aam
inc
add
pop
add
jmp
scas
xor
or
mov
icebp
or
xchg
push
lea
push
adc
lock
pop
xor
loopne
stc
popf
sbb
push
push
push
test
in
lods
arpl
xchg
lea
push
mov
inc
fildll
add
cmp
adc
fimuls
or
addb
lret
pusha
add
adc
aas
xor
jp
push
rorb
push
in
push
jle
roll
icebp
adcl
rolb
icebp
mov
push
pop
insb
mov
push
jmp
mov
mov
dec
adc
jg
mov
or
lret
push
fs
pop
mov
js
aad
pop
ja
add
or
fucomi
insl
xor
pusha
into
pop
inc
dec
jno
mov
push
cwtl
outsl
inc
add
mov
nop
insb
neg
gs
jl
and
push
sub
pop
int
popa
test
gs
mov
jns
popa
pop
add
roll
push
sbb
rorl
neg
xor
push
add
test
pop
inc
comiss
into
sbb
cmp
movsl
push
inc
jno
mov
shll
fistl
mov
dec
ret
negb
fsts
rcll
cmc
inc
xor
out
pop
pop
or
xor
xor
das
iret
negl
outsb
insl
push
sub
xchg
psrad
gs
xchg
fsts
pop
xchg
mov
lret
jmp
lods
add
aam
inc
or
and
add
fiadds
ret
jne
aaa
sub
and
in
adcb
sbb
arpl
sbb
mov
ret
adc
and
out
push
dec
mov
xor
stos
pusha
jmp
mov
sub
shrb
hlt
cld
add
in
sahf
push
mov
sti
and
loop
adc
js
inc
imul
jno
and
push
mov
inc
je
add
pop
push
imull
push
fbstp
pop
pop
out
xor
lcall
addl
push
daa
dec
jne
inc
dec
sbb
push
and
jmp
in
out
packuswb
add
hlt
jp
push
icebp
xchg
dec
dec
ljmp
hlt
mov
mov
out
cld
mov
ja
aaa
testl
xor
pusha
and
syscall
sub
push
push
jge
enter
cmp
bound
filds
pop
repnz
dec
sbb
in
mov
mov
push
jge
notb
dec
mov
and
add
or
xor
pusha
lahf
mov
in
in
dec
mov
loope
outsl
mov
orl
adc
or
test
adc
add
jb
push
xor
inc
std
push
imul
js
jmp
pop
sub
shrl
sub
push
adc
jl
mov
rclb
xlat
pop
mov
push
cmp
cmp
inc
fsubrp
outsb
popa
ja
push
xchg
dec
into
mov
pop
xor
push
popa
jmp
push
jmp
loopne
xchg
adc
mov
jg
movsb
adc
pop
xchg
cmp
or
fistps
push
stos
mov
das
sub
mov
sub
arpl
mov
jo
or
es
scas
mov
or
cmc
push
mov
or
lds
lods
xor
lods
add
lahf
lahf
insb
hlt
clc
jmp
xchg
je
lret
imul
rorb
enter
pusha
mov
dec
roll
mov
pop
loopne
sub
dec
xchg
jecxz
jp
jmp
test
icebp
or
cmp
xchg
popf
mov
adc
jmp
lret
jbe
dec
lret
out
jmp
xchg
loopne
pop
prefetch
or
jl
xor
push
imul
jne
mov
icebp
das
data16
or
add
and
pop
pop
mov
mov
inc
pop
cmp
inc
out
dec
iret
scas
mov
cwtl
gs
lret
dec
push
inc
pop
clc
test
lods
out
nop
clc
xor
neg
sbb
aam
pop
fiadds
cld
or
dec
jnp
cmpb
mov
stos
jle
pop
jmp
ffreep
adc
push
ret
push
bound
sub
push
dec
in
push
pop
repz
sub
inc
mov
rcrb
divl
out
shlb
mov
loope
mov
add
scas
cs
pop
leave
call
xchg
sahf
pop
out
dec
sbb
addr16
imul
cs
sub
subb
jle
cmpsl
nop
fcmovnb
call
je
xor
lcall
mov
filds
inc
jl
jmp
adc
xchg
nop
dec
pop
inc
sub
jg
out
add
jae
xor
test
mov
sbb
pop
stos
add
and
dec
pop
pop
xchg
rolb
push
push
fcmove
cmp
into
ja
sahf
loope
lret
mov
std
hlt
rolb
cli
out
daa
nop
push
or
mov
or
bound
scas
push
or
sbb
or
adc
jp
add
arpl
dec
dec
sbb
and
jbe
orb
jmp
movsb
dec
and
add
mov
ljmp
push
iret
add
pusha
inc
ret
cmp
iret
mov
sub
je
and
add
test
or
jb
cmp
stc
jge
push
or
int
test
ljmp
cmpsl
ret
gs
lods
std
and
push
jmp
mov
and
pop
sahf
out
fsts
rcll
jmp
jo
out
pop
andb
fstl
cwtl
flds
outsl
test
jge
scas
mov
dec
popf
push
xchg
insl
jmp
cmp
push
stc
add
sbb
rcrb
out
or
inc
insl
cmp
mov
push
inc
call
insl
jo
xor
push
leave
cwtl
push
or
sub
loopne
sbb
add
mov
popa
dec
or
leave
xor
mov
pusha
popf
ja
addr16
sbb
and
dec
xchg
dec
in
xchg
xorl
aas
scas
ljmp
push
or
rorl
loopne
sub
adc
ljmp
enter
or
push
fnstenv
jmp
add
test
jo
das
sub
mov
xlat
push
jnp
push
push
mov
aam
pop
sub
push
mov
dec
add
sub
shrb
or
and
mov
or
pop
pop
cmp
jmp
jo
pop
adc
loope
loopne
insb
or
in
mov
insl
and
cmc
insl
add
push
mov
push
push
xchg
add
fs
xor
lods
mov
les
pop
mov
xchg
mov
push
xchg
mov
popf
mov
subb
es
or
add
push
mov
inc
sbbb
pop
mov
dec
adc
clc
loope
test
inc
repnz
aaa
pop
pop
mov
or
jno
mov
sub
sub
iret
xor
mov
rorl
push
pop
add
adc
mov
adc
jl
mov
jge
lock
pop
xchg
je
sbbb
push
cmp
dec
leave
andb
in
ljmp
leave
pop
pop
mov
push
inc
pop
cmpb
neg
add
mov
sbb
adcl
call
mov
ret
popa
push
stos
pop
cmpsb
in
push
inc
jge
add
and
outsl
sub
cld
daa
lret
push
push
pop
mov
adc
push
inc
adc
shlb
push
sti
and
xchg
mov
cmp
in
push
push
imul
and
pop
ffreep
stos
shlb
push
fimull
cmp
enter
and
jecxz
mov
push
insb
mov
jle
xchg
stos
push
cmp
insb
jmp
fisttps
mov
inc
sub
pop
jbe
adc
test
fiadds
jo
xor
rcrl
fadd
sub
mov
mov
add
xchg
and
stc
cmp
push
out
bswap
out
add
push
sahf
push
add
scas
bound
jns
mov
daa
jae
mov
js
jmp
pop
push
cmc
push
xor
cld
jge
scas
jne
mov
cs
jnp
push
lahf
push
pop
daa
mov
cld
pop
and
xor
ret
clc
ja
into
add
int
mov
mov
dec
jnp
sub
xor
jmp
clc
lcall
mov
in
xlat
dec
cli
insl
cwtl
lods
out
out
idiv
into
cmp
cmp
aam
sub
inc
inc
xor
adc
push
xchg
int3
icebp
pop
adc
adc
mov
inc
pop
push
pop
lods
add
sbb
out
jno
mov
loop
push
jne
stos
mov
adc
pushf
mov
out
push
ss
rclb
adcb
imul
lock
cmp
mov
in
push
lahf
jge
adc
int
testl
mov
shlb
xchg
shl
adcb
imul
out
shrl
adc
sub
push
lcall
xchg
mov
or
jbe
imul
mov
add
push
dec
and
jne
outsl
lock
jmp
mov
jnp
xlat
push
xchg
mov
jns
push
push
add
add
out
adc
sbbl
sahf
sub
inc
ret
jo
popf
aam
mov
lods
sub
adc
icebp
pop
or
psubw
rcrb
dec
push
mov
addr16
daa
scas
sarb
push
push
mov
inc
push
out
sub
cmp
dec
push
push
mov
xor
rorl
shll
jb
dec
loope
xor
fsubrp
enter
jmp
addb
ja
mov
cmp
pop
neg
scas
cli
les
sbb
or
push
jle
push
cmp
fisubl
insb
jmp
add
adc
enter
mov
cmp
jmp
adc
jecxz
test
andb
movsl
xchg
pop
push
enter
mov
fimull
int3
pop
dec
fdiv
add
add
jbe
lcall
mov
pop
adc
mov
scas
add
cs
mov
rcrl
add
xor
inc
js
inc
push
pop
inc
mov
xchg
push
xchg
outsl
inc
jb
fildll
pushf
fcomps
mov
fdivrs
ja
call
mov
adc
gs
imul
xor
pop
pop
mov
loope
adc
add
mov
push
out
repz
sub
inc
xchg
push
pusha
pop
jb
xor
stos
in
jge
lods
lods
mov
inc
cmc
lods
jno
imul
iret
mov
mov
or
icebp
ds
xchg
movsl
std
xchg
adc
or
mov
cmp
jmp
fwait
loopne
icebp
or
mov
and
push
dec
cmp
lods
or
sub
repnz
int
sub
incl
ret
inc
mov
rorb
jns
lret
ljmp
and
mov
aam
es
jbe
negl
add
cmp
gs
popa
mov
jo
mov
clc
lds
add
and
andb
pop
xor
xchg
xor
xor
cli
jne
mov
mov
xchg
leave
aaa
lds
aad
and
pmaddwd
jb
loope
push
push
jmp
movsb
in
and
add
imulb
aam
dec
pop
aam
lds
sti
loope
scas
or
adc
repz
dec
adc
inc
pop
xchg
mov
int
cld
add
mov
dec
in
lds
mov
loope
repz
inc
mov
stc
push
iret
lds
or
push
adcl
cmp
out
ret
aam
push
or
insl
test
jmp
cmp
fsubrs
sub
lcall
bound
stos
sub
mov
sub
loope
pop
mov
in
lcall
adc
mov
cld
jmp
daa
ret
adc
repz
pop
push
lods
mov
stc
dec
jg
das
in
ljmp
movsb
push
adc
cmp
leave
add
push
push
adcb
aam
insl
mov
jecxz
add
imul
jg
pop
adc
sbb
sub
add
pop
jl
inc
or
pop
sbb
mov
xor
pop
cmp
or
jmp
sbb
loope
leave
rcl
orb
mov
and
jecxz
mov
and
xlat
dec
or
pusha
sub
cwtl
movsb
inc
mov
add
or
push
testl
push
jmp
icebp
stc
ret
inc
push
sbb
pop
xlat
mov
fisubl
seta
add
cs
mov
inc
rolb
jmp
inc
or
push
jno
mov
push
or
sbb
sbb
loop
rorl
dec
adc
testl
sub
icebp
pop
add
pop
mov
push
push
jb
test
jbe
pusha
shlb
mov
jp
std
add
nop
addr16
sti
cmpsb
push
adc
pop
insl
les
push
ss
std
push
fsubs
les
test
xchg
or
out
jbe
pop
add
jge
dec
insb
in
lret
dec
mov
in
add
sub
and
push
mov
cltd
pop
aas
pop
stc
mov
cmp
jae
add
test
and
out
adc
dec
push
mov
gs
aad
sub
xor
or
inc
or
pop
and
or
ret
pop
adc
jb
lret
enter
sbb
adc
bswap
lds
hlt
mov
shl
add
std
and
dec
das
xchg
insb
inc
andl
daa
jge
repnz
mov
jo
mov
je
push
fcomps
cmpsb
inc
pushf
xchg
mov
mov
pusha
and
xor
imulb
dec
data16
mov
push
pop
mov
cmc
loope
cmc
fistpll
adc
sub
in
pop
xchg
arpl
mov
cmp
inc
xchg
jl
sbb
not
cwtl
in
sub
int3
and
sub
sub
hlt
leave
mov
aam
mov
dec
lcall
cmp
idivb
xchg
add
push
or
or
in
dec
ds
add
push
cld
mov
add
andb
inc
add
leave
adc
stos
jnp
add
cmpsb
inc
xchg
mov
fldl
push
repnz
and
incl
push
jl
or
mov
push
mov
inc
pop
testb
push
pusha
out
ja
dec
dec
xor
pop
cmp
sub
inc
or
call
lcall
push
lock
add
jmp
cmc
cvttps2pi
sub
iret
cmp
int3
push
push
pushl
xchg
push
or
adc
xor
sub
mov
mov
jg
stc
or
xchg
mov
insb
mov
xor
cmp
pop
les
jge
jle
mov
mov
dec
stc
jge
fcmovbe
jp
mov
pop
bound
rcll
jae
and
xchg
pop
movsl
jmp
lods
push
mov
mov
repz
in
movsl
call
inc
rclb
dec
enter
add
xchg
ficompl
push
fcoml
inc
in
insl
mov
add
cli
xchg
jmp
movsl
xor
add
mov
popf
divb
daa
insb
or
and
stc
sub
stc
sub
and
je
add
fbld
fs
cltd
sub
adc
dec
mov
test
lods
iret
push
movl
cmp
sub
xor
jmp
sub
mov
lcall
test
addr16
cmpsl
push
mov
fildll
leave
jg
iret
or
fwait
pop
ja
cmp
add
xchg
cmp
aad
add
lcall
jmp
add
mov
sbb
adc
cwtl
lea
scas
pusha
jl
mov
pop
mov
mov
les
stos
xor
xor
push
mov
dec
mov
adc
movsb
lahf
push
mov
adc
jb
leave
mov
sbb
fmul
cmp
jmp
xchg
bnd
loopne
sbb
out
push
gs
jmp
pop
push
bound
jne
mov
pop
push
int
sbb
lds
stos
xchg
mov
mov
in
inc
dec
sub
jae
std
push
add
add
jmp
inc
xchg
imul
jns
push
lahf
mov
mov
scas
imull
jns
out
out
xchg
aad
mov
sbb
push
or
inc
and
push
filds
adc
dec
loop
aad
jmp
xor
pop
jecxz
and
lds
inc
popa
repnz
adc
add
inc
movsl
jno
movsl
sbb
push
or
fwait
add
adc
push
les
mov
fmulp
add
ja
test
xchg
sub
push
dec
daa
mov
pop
lods
dec
loope
mov
mov
cmpsl
aad
pop
push
sub
faddl
mov
mov
adc
pop
and
mov
mov
push
pop
inc
pop
inc
mov
cld
mov
pop
pop
pusha
pusha
out
lods
sub
daa
push
cmp
inc
sti
and
int3
push
sti
movsl
fsubs
shl
push
jl
dec
fisttps
add
pop
pop
jmp
xlat
adc
sub
out
cmp
jmp
xchg
jl
fs
sarb
and
push
dec
aas
sub
js
pop
nop
inc
dec
or
subl
stos
out
cwtl
ja
pusha
pusha
fldenv
push
ja
dec
daa
adc
bound
divb
rcrb
push
add
push
mov
push
es
push
push
lock
adc
mov
xor
mov
shlb
xchg
mov
cwtl
and
js
inc
sarl
js
ja
cmpl
je
push
jmp
push
adc
adc
dec
adc
mov
mov
and
pop
jecxz
repz
sbb
out
mov
add
dec
sahf
mov
imul
dec
dec
mov
mov
sub
fnstsw
xchg
sbb
push
pusha
rolb
int
sub
sar
imulb
adc
outsb
cmp
mov
jmp
mov
mov
test
ret
pop
test
jmp
test
mov
cltd
cs
xor
add
jns
cmpsb
sub
pop
test
add
das
jmp
inc
and
add
mov
loop
pop
or
fcmovbe
push
jmp
popa
les
adc
jle
mov
push
or
adc
outsl
out
mov
aam
das
sbb
and
mov
xor
pop
adc
jge
push
push
or
mov
in
inc
jbe
xor
and
jp
or
in
and
loopne
mov
or
push
stos
lret
shll
lods
test
inc
mov
das
jns
pop
cmp
cmp
roll
aas
jo
icebp
fwait
outsb
sub
leave
mull
lock
repnz
pusha
loop
pop
push
xor
movsb
pop
xor
imull
xor
pop
sub
mov
ret
in
jg
ljmp
je
adc
test
adc
dec
jmp
pusha
inc
xchg
bound
scas
sub
adc
lea
xchg
adc
sbb
mov
or
std
push
jbe
dec
pmulhw
lret
adc
adc
mov
loopne
mov
cmp
or
arpl
int
xchg
cmc
xor
push
jp
inc
pop
mov
cmp
arpl
out
sbb
mov
xchg
icebp
jmp
pop
jg
adc
imul
sarb
and
xor
ja
fistpll
cmp
jb
pop
popf
repz
pop
mov
cmp
imul
pop
cltd
leave
xor
push
push
dec
add
sub
jns
lea
fadds
dec
cmp
jge
mov
add
sub
cmp
dec
pop
rol
cmp
mov
and
push
jnp
icebp
cwtl
push
pop
or
je
leave
pop
jnp
je
outsb
inc
shr
jnp
jmp
popf
je
adc
cmc
push
out
gs
or
add
sahf
mov
jmp
rorl
pop
cmc
pop
movsb
sbb
shll
dec
cmp
push
sub
xor
loopne
xchg
inc
xchg
mov
jp
and
pop
ud2
cmp
jle
jmp
mov
std
loop
rcll
sub
push
add
cmp
adc
nop
push
xchg
fcomps
xchg
es
stc
fsubrs
sub
xor
jle
daa
fldenv
loope
and
push
out
inc
fsts
bound
rcrl
sbb
insb
dec
xchg
xor
mov
cld
jl
pop
out
jae
add
cli
xor
xchg
or
hlt
je
iret
sbb
jp,pn
fmull
adc
popa
add
jne
outsl
mov
cmp
add
and
inc
push
out
iret
lods
ja
adc
inc
js
jbe
in
mov
imul
ffree
and
in
scas
fstps
test
aas
ret
add
mov
adc
pop
mov
lods
int
movsl
rcrl
jecxz
sahf
imul
lahf
test
mov
inc
add
inc
push
popa
or
jg
sbb
in
leave
mov
and
shr
inc
pop
gs
aam
daa
out
sub
xchg
outsb
sbb
lcall
lods
inc
fistpll
mov
cmp
jle
and
mov
std
jne,pt
push
fcomps
xchg
jmp
movsb
jge
sub
ss
add
jae
imul
mov
adc
cmpsb
jmp
and
notb
or
lds
fwait
nop
xchg
pop
aas
jae
in
cmc
add
icebp
cmp
jb
and
fdivl
mov
xor
lret
cmp
aam
imul
mov
ljmp
inc
in
push
jo
aam
movsb
jg
es
arpl
add
jae
pop
pop
push
push
aas
xchg
cli
cmp
pop
in
lcall
jp
ss
je
pop
and
push
movb
js
daa
jl
lcall
jge
lcall
xchg
lret
or
cmp
add
movlps
mov
adc
jae
xor
add
mov
test
xchg
push
mov
xlat
pop
cmp
sub
popf
dec
inc
cli
cmp
mov
shr
cmc
add
adc
xchg
push
xor
sbb
mov
outsl
mov
xor
fiadds
testl
sti
sbb
jne
sbb
xchg
leave
mov
pop
and
cmc
pop
scas
sub
push
shlb
int3
leave
push
adc
pop
and
imul
cmp
lock
sti
pop
dec
leave
or
bound
hlt
xor
stos
pushf
mov
cmp
jp
loope
gs
cmp
push
inc
fists
mov
xor
mov
fisubrl
dec
mov
add
adc
popf
add
mov
mov
mov
push
hlt
push
and
pop
jl
cmp
in
jl
pop
inc
adc
mov
xor
insb
movsl
lea
dec
xlat
int3
or
test
jo
imul
inc
push
cmp
jbe
pop
inc
or
loopne
mov
subb
cmc
aad
jns
push
xor
mov
rol
or
pusha
sbb
rorl
pop
push
mov
dec
xchg
mov
cli
inc
dec
xor
adc
add
pop
jg
fwait
iret
push
hlt
pop
jmp
add
bt
test
push
and
jge
sub
add
jg
rorl
mov
fdivrs
aas
adc
or
cmovne
adc
or
sub
inc
fistl
sub
out
out
shll
js
jl
sar
ja
push
ja
fildl
xchg
in
add
dec
sbb
mov
clc
jp
push
mov
adc
mov
jb
or
or
push
out
or
push
testb
sub
or
das
loopne
notl
lcall
pop
sarb
addl
mov
push
cmpsb
into
sarb
fldt
mov
sub
push
shlb
mov
jle
push
sub
inc
adc
dec
scas
mov
sub
add
arpl
mov
arpl
stos
pop
clc
cmpsb
popf
sarb
pop
cmp
in
jne
dec
rcrl
std
repnz
inc
mov
stos
mov
xchg
mov
orl
cmp
cld
add
sub
jge
xlat
out
int
movsb
pop
cmpsl
lret
and
mov
cmc
jae
or
leave
lods
jle
enter
jnp
test
jb
pop
popa
les
sbb
shll
lret
shl
iret
pop
xor
dec
mov
rolb
dec
ret
push
out
out
pop
pop
cmp
push
loop
ret
mov
jae
out
xchg
fbstp
ret
mov
mov
dec
or
push
adcb
or
push
stos
jmp
fcoml
std
into
pop
xor
jb
mov
out
add
jmp
call
dec
mov
mov
pop
adc
pop
xor
movzwl
in
push
dec
lds
pop
add
inc
lock
or
fs
scas
sbb
jb
mov
stc
sub
mov
jp
xor
pop
adc
aaa
les
stos
out
ret
repz
push
push
adc
mov
pop
push
add
cmpb
cld
xlat
out
scas
pop
mov
pusha
jle
aas
xor
add
dec
mov
mov
xchg
push
hlt
outsb
jb
pop
and
ret
fimull
adc
inc
xchg
push
inc
jl
test
pop
sbb
lock
shl
in
cmc
pop
std
pop
jnp
in
adc
pop
loop
js
pop
fwait
jne
sub
or
push
pop
mov
and
mov
or
mov
popf
repnz
rcrl
dec
loope
sub
xorl
xor
pop
push
xor
mov
mov
or
cwtl
push
jmp
bound
push
das
adc
shll
int3
aas
negl
in
and
dec
dec
shrb
sub
push
jmp
xchg
movsl
push
jmp
mov
insl
dec
fmul
mov
loopne
inc
adc
xor
xorb
dec
mov
jmp
cmp
pop
pushf
pop
imul
adc
out
xchg
divl
inc
popf
hlt
bound
ret
or
jne
iret
dec
inc
mov
js
lock
jo
add
add
invd
adc
dec
add
inc
add
add
fcoml
and
inc
mov
inc
jns
inc
cmpsb
into
inc
mov
ds
sbb
out
mov
les
cmpsl
push
add
test
arpl
js
enter
mov
mov
dec
push
in
xor
mov
rclb
sbb
sbb
inc
and
imul
subb
jns
sbb
popa
test
mov
push
pop
cmp
imul
pop
inc
and
mov
shll
xor
repnz
add
icebp
add
pop
add
cli
push
pusha
xor
jl
test
jb
les
mov
insb
incb
stos
out
push
mov
or
clc
or
cmp
adc
nop
adc
pop
in
adc
xor
or
or
clc
inc
cmp
add
and
push
fcomps
int
dec
imul
push
call
dec
sub
or
or
or
fisttpll
shl
or
cmc
cmp
xorb
push
xor
push
inc
pushf
add
lods
or
orl
xchg
subl
rcl
xor
cmp
inc
movsb
adc
adc
xor
push
repnz
xor
cwtl
or
adc
orb
mov
or
and
ret
adc
xor
sbb
add
mov
mov
or
hlt
dec
inc
inc
sbb
mov
fstl
hlt
cltd
cmp
sbb
leave
adc
sbb
into
or
fisttpll
lods
scas
sbb
stos
aaa
adc
pop
push
xor
push
mov
jnp
or
or
insb
icebp
addl
cltd
and
inc
fdivr
in
mov
pop
push
push
pushf
adc
xlat
lcall
es
call
push
das
push
mov
adc
jbe
adc
fsubrs
mov
mov
add
dec
add
leave
jne
mov
mov
mov
orb
dec
xor
sub
xchg
xor
gs
mov
outsl
dec
addr16
inc
pop
in
jecxz
daa
mov
and
stos
jp
xor
inc
sbb
cmp
and
jae
pmaxsw
xchg
nop
aad
pop
xchg
xor
pop
gs
sub
sub
inc
dec
sub
pop
jp
push
cs
sub
sub
mov
or
stc
insl
out
mov
mov
pusha
push
in
add
repnz
rorl
popa
outsl
cmpb
jno
mov
test
into
call
jns
daa
mov
clc
push
xor
test
cmp
push
push
sahf
test
pop
mov
xchg
cmpsl
outsl
in
test
outsb
sbb
fstl
ret
stos
sub
orl
test
jl
pop
or
push
loope
mov
ret
or
push
sbb
clc
push
and
mov
push
dec
das
and
jmp
adc
pop
mov
mov
rcl
shlb
sub
adc
xor
sub
dec
mov
mov
mov
or
ret
ret
jp
mov
add
pop
pop
or
xor
mov
sub
mov
std
mov
push
cmpl
add
pop
mov
dec
test
mov
dec
lods
cmp
and
popf
push
pop
or
pop
jmp
movsl
arpl
cmp
dec
mov
push
and
pop
pop
pop
jmp
jl
rorb
cli
lret
rep
sub
push
pop
jge
cld
xchg
test
push
add
cwtl
xchg
ret
dec
lret
mov
adc
cmp
pop
inc
mov
fidivs
xor
xchg
sbb
sbb
fs
fnstcw
das
pop
out
pop
sbbl
push
xchg
xor
out
out
leave
pop
je
pop
mov
add
xchg
jae
inc
cmp
ds
aas
cmpsl
sub
out
cmp
icebp
lret
pop
sti
mov
lret
pop
addr16
test
stc
mov
inc
jecxz
lret
mov
repnz
xchg
out
jge
pop
jne
sbb
xchg
mov
jmp
in
js
cmp
inc
mov
lock
andl
ret
add
iret
sub
push
mov
stos
add
pop
sbb
pop
sti
cmpsb
jns
cmp
out
push
scas
push
add
cmp
or
push
xchg
or
fs
aad
adc
jg
mov
adc
inc
cs
push
mov
or
cli
and
mov
dec
orb
cmp
dec
xchg
fiadds
or
push
mov
add
cmc
or
sbb
aaa
xor
xor
out
push
mov
or
les
js
add
mov
leave
stc
shl
test
add
shrb
pop
push
or
loope
je
and
out
xor
cmc
pop
mov
push
movl
cs
fistps
hlt
mov
sub
inc
adc
push
mov
push
push
adc
cmp
push
sahf
int
and
add
jmp
xor
xor
push
sbbl
popf
and
add
inc
mov
push
jmp
inc
xor
out
ja
call
lods
push
dec
out
pushf
push
call
fwait
pop
movsl
mov
cs
call
nopl
jo
adc
rclb
bound
xchg
shrb
dec
mov
cli
cmp
insb
push
pop
jmp
ret
and
sbb
pop
scas
cmpsb
js
out
sub
test
inc
and
jl
push
cli
popf
jl
out
test
jmp
add
adcb
inc
jbe
ljmp
add
and
mov
cmpsl
adc
popf
scas
sarl
pop
and
mov
lcall
jne
in
sub
sub
sbb
sarb
movsl
or
add
mull
cmp
mov
inc
push
adc
xchg
sbb
aas
jecxz
fadds
movsl
xor
or
mov
mov
add
aad
and
int3
les
lds
cmp
or
cmp
sbb
sbb
jae
xchg
xor
mov
cli
add
xlat
xor
xchg
out
inc
or
sti
loope
and
sbb
out
cmp
scas
mov
jge
in
mov
inc
pop
out
sub
aad
imul
dec
sub
jl
mov
addl
outsb
push
adc
inc
dec
repnz
or
jo
ja
adc
xchg
add
pop
fs
leave
push
test
out
adc
mov
add
cmp
fs
icebp
adc
push
sbb
add
shr
enter
push
cld
dec
mov
sbb
jmp
sub
ljmp
rcrb
fidivs
out
jb
iret
mov
cmc
ret
ficomps
out
rep
dec
stos
enter
clc
ds
outsl
add
mov
and
pusha
push
mov
dec
pop
cmp
adc
or
jo
xchg
mov
inc
cmc
pop
divl
push
sbbb
push
inc
xor
xchg
outsb
addr16
scas
adc
inc
and
pop
jl
push
jge
iret
das
pop
es
insl
sbb
leave
arpl
push
fildl
enter
push
pusha
cmp
outsb
mov
scas
notl
or
mov
mov
cwtl
sub
shrl
mov
push
test
aad
clc
push
pop
loop
into
fcom
sti
inc
add
sub
stos
and
loop
sarb
jmp
sbb
xchg
loope
out
pop
jle
jp
cmp
xor
dec
add
or
imul
pushf
push
push
add
fcomps
xchg
gs
dec
dec
sub
cmp
mov
test
push
rol
aam
int3
push
push
jmp
pop
icebp
adc
cmp
ret
divl
jb
imul
lcall
roll
mov
insl
fidivl
mov
inc
sub
jmp
repnz
int
push
loopne
cmp
movsl
inc
das
mov
fcmovnbe
aad
pusha
subb
jne
add
gs
inc
add
dec
incb
popf
sub
mov
and
imul
jno
mov
stc
jmp
mov
movsb
pop
es
or
push
pop
xor
mov
or
jno
xor
cmp
nop
push
fwait
shlb
or
out
lret
sub
and
fistps
ds
dec
jg
xor
pop
test
jp
add
xchg
or
inc
stos
lock
repnz
imul
cmc
mov
dec
loopne
push
xchg
int3
sbb
into
clc
add
and
loop
and
pop
mov
cmp
pop
and
adc
shll
mov
push
jmp
add
sub
sbb
sub
jmp
jb
dec
push
ljmp
es
adc
rcll
addb
mov
sarb
mov
pop
mov
shrb
stos
clc
push
nop
xchg
add
orb
adc
gs
or
or
aas
adcb
push
ljmp
xchg
inc
es
divb
jmp
sub
inc
pop
std
pop
mov
sbb
dec
cmc
and
sub
push
test
sbbb
sarb
cmc
lods
sub
dec
add
fnsave
or
xor
in
sahf
xchg
notl
jecxz
pop
pop
daa
add
in
leave
lods
adc
lret
gs
mov
mov
xor
test
adc
ja
shll
jno
decb
add
lock
push
add
rcrb
shll
lea
xor
adc
sbb
loop
dec
in
add
sar
sbb
sbb
hlt
push
or
or
sbb
pop
enter
shr
mov
jl
mov
dec
fcompl
in
dec
push
ljmp
pushl
pop
push
add
dec
scas
mov
inc
lock
adc
loopne
push
cmp
dec
jne
adc
stos
push
push
mov
sub
inc
ret
xlat
iret
fadds
cmp
push
scas
test
pop
sub
xor
mov
jnp
repnz
mov
outsb
mov
xor
cmp
adc
cmpsb
int3
cs
lds
add
jg
pop
xor
sbb
daa
mov
out
push
enter
imul
nop
sub
mov
add
dec
or
sub
pop
jmp
sbb
dec
inc
dec
shlb
jmp
bound
jg
inc
inc
sbb
jmp
sbb
pop
lock
mov
pusha
dec
aas
ds
add
jle
lods
adc
push
jae
mov
push
adc
mov
push
xor
add
mov
shrb
and
xchg
dec
dec
in
mov
jnp
int3
repnz
push
push
mov
add
xor
aaa
or
pop
dec
inc
push
add
add
add
dec
sbbb
inc
lock
and
and
xchg
xor
xchg
add
jmp
jns
movsb
int3
mov
mov
addr16
sahf
mov
cmp
push
sbb
shr
negb
add
notl
push
in
and
jmp
pop
cs
add
push
xor
clc
sub
stos
xor
jno
and
or
insl
repz
inc
es
mov
jecxz
or
sub
push
dec
push
scas
mov
call
aad
xor
inc
xchg
sub
cmc
mov
and
pop
cwtl
mov
jnp
mov
and
jg
outsl
pop
test
es
push
and
loope
repnz
inc
jb
adc
dec
daa
cmc
pop
sub
scas
ret
sub
or
jnp
pusha
add
dec
xor
or
rclb
dec
push
in
xchg
js
dec
cld
ds
push
pop
add
jnp
push
das
loopne
daa
mov
pop
pop
xorb
push
es
popa
scas
adc
pop
sbb
cmc
movsb
mov
mov
cmp
fs
pop
xor
mov
inc
jno
loop
inc
jnp
cmpsl
mulb
inc
in
lods
mov
pop
xchg
sar
or
mov
ss
loopne
or
jg
xchg
cwtl
mov
push
js
mov
mov
adc
ljmp
lods
sbb
sub
jg
push
mov
out
fistpll
xlat
adc
frstor
cmpsl
sub
rcrb
js
xor
and
mov
test
pusha
mov
nop
in
ret
fcomip
in
mov
pop
jns
das
xor
inc
negl
push
pop
pop
pop
cmpsl
dec
dec
shrl
mov
movsl
xchg
add
jns
cmpsl
mov
pushf
sub
neg
dec
add
pop
dec
hlt
mov
repz
inc
xchg
bound
enter
fmul
add
cmp
movsb
out
pop
loope
add
sbb
inc
lods
mov
mov
mov
push
sti
inc
popa
or
mov
mov
aas
ret
mov
imul
mov
and
pop
mov
inc
adc
loope
loop
dec
pop
jp
fmul
pop
mov
inc
sbb
rcr
lret
adc
dec
add
icebp
arpl
add
inc
dec
shl
loopne
pop
pop
xchg
fsubs
nop
sarl
in
pusha
sbb
push
loopne
mov
in
orb
mov
cld
je
sub
xorl
xor
push
sbb
inc
out
jp
add
xor
sub
jecxz
or
pop
ja
idivb
aaa
jmp
add
fs
cwtl
dec
pushf
jecxz
mov
pop
dec
pop
and
cmp
in
stc
xchg
stos
lret
std
sbb
out
or
hlt
inc
cvttps2pi
pop
add
das
and
cmp
gs
mov
inc
aaa
or
adc
out
adc
dec
or
cwtl
test
xor
inc
es
pop
mov
xchg
inc
dec
test
dec
push
test
and
je
cmp
data16
aad
inc
mov
or
sub
pop
sub
cmp
and
mov
adc
ljmp
lods
mov
sbb
in
cmpsl
pop
xchg
fucomp
jbe
pop
push
pop
and
adc
adc
test
rcrb
dec
fs
jmp
cmp
sub
xchg
push
xchg
sub
shrl
or
addr16
and
addl
ja
sahf
popa
adc
pop
call
cmp
xor
jmp
stos
pop
jge
les
repnz
push
out
popa
xchg
imul
xchg
fs
mov
sub
shl
push
adc
xor
adc
xchg
loope
jo
imul
and
jns
mov
add
sub
jo
das
xchg
pop
inc
mov
sbb
mov
mov
mov
rcrl
cmp
xlat
nop
adc
pop
cld
shr
fiadds
mov
push
lcall
shr
adc
sbb
push
jge
pop
adc
add
xor
dec
ljmp
sbb
stos
fs
sti
adc
mov
cmp
pop
int3
andb
out
cld
adc
jg
out
adc
test
out
rclb
ret
mov
pop
cs
hlt
mov
pop
shlb
xor
dec
shl
sub
push
and
push
test
lahf
stos
or
add
add
shlb
imul
and
mov
jmp
scas
pop
add
push
mov
ds
adc
out
lret
mov
jmp
imul
jne
add
shrb
adc
push
mov
repnz
xor
sub
sti
loop
je
shrl
push
aaa
mov
subb
iret
push
mov
push
and
sbb
leave
inc
and
push
aad
dec
xor
inc
imul
lock
aad
and
and
adc
add
mov
pop
sub
inc
jae
mov
add
fucomi
mov
outsl
movsb
cmp
ljmp
and
rorl
call
sub
lock
xchg
das
pop
icebp
push
sub
outsb
icebp
fldcw
out
push
sub
sti
add
repnz
adc
add
push
call
repnz
cld
rcr
jmp
cmp
jg
inc
or
lahf
adc
or
xchg
dec
scas
fbstp
jmp
jmp
mov
mov
sti
rclb
lret
inc
aad
dec
add
ljmp
movl
mov
in
mov
lds
sub
enter
push
cmpb
add
sbb
loopne
mov
inc
sbb
cmp
mov
add
push
add
rcll
or
push
sub
jbe
inc
leave
stc
mov
popf
xlat
in
loop
testb
mov
adc
std
test
lcall
jo
inc
dec
sbb
fidivl
mov
repnz
sbb
jo
daa
adc
and
or
cwtl
lret
mov
add
test
test
cmp
xchg
mov
mov
stos
adc
mov
mov
stos
mov
mov
xor
ja
push
push
clc
push
test
ror
rcrb
push
inc
sub
xchg
xchg
ret
std
lods
sysenter
sub
push
mov
cmp
mov
and
arpl
or
cmp
mov
push
cmc
out
adc
ret
in
push
dec
xor
ja
es
cli
mov
inc
inc
outsl
adc
pop
fisttpll
mov
push
std
imul
jae
je
push
add
sub
push
mov
lock
mov
cmp
jmp
imul
pop
cmpl
xorps
das
out
ret
lods
add
cmp
adc
leave
bnd
adc
pop
outsl
push
jmp
test
xchg
js
add
sbb
mov
add
loope
sub
or
daa
shll
inc
or
cwtl
sub
mov
mov
sahf
mov
push
aad
xchg
cmc
sub
adc
and
shlb
and
bound
adc
push
ds
adc
shrb
pop
imul
sub
pushf
sub
or
es
in
and
fsubrp
call
or
mov
add
xor
add
adc
test
jmp
fadd
push
inc
out
fs
test
pusha
es
pop
lahf
pop
aas
inc
push
lahf
mov
adc
jnp
aas
cli
pusha
lret
jmp
pop
out
lcall
aam
fmuls
test
mov
pop
mov
sub
pop
ret
push
pop
add
mov
add
or
outsl
adc
jmp
or
xchg
lds
jp
andb
push
pop
inc
sub
lds
sub
and
popa
scas
repz
add
fsubr
adc
fwait
sbb
xchg
aam
aad
or
xchg
sub
adc
jb
jns
test
add
aad
jp
lahf
in
popf
mov
punpckhbw
xchg
push
mov
cmpsl
cmp
loop
add
xchg
cli
aaa
push
dec
loop
xchg
or
repnz
pop
pop
cmpl
mov
leave
in
push
pop
sbb
xchg
imul
sub
lea
shlb
push
and
or
mov
pusha
pop
imul
mov
lock
outsb
out
sbb
sahf
sbb
mov
sub
aad
sbbl
fdivl
btr
call
jl
pop
sub
pop
inc
mov
inc
fs
xlat
sub
retw
ljmp
jne
loope
push
enter
cmp
into
and
rorl
inc
cld
inc
gs
jbe
adc
push
call
xchg
and
inc
adc
enter
jo
xchg
mov
jb
add
mov
jmp
dec
js
pop
popa
pop
push
push
and
rol
lahf
into
inc
mov
ret
pusha
sub
aam
push
cmpsl
pop
testl
insl
std
mov
push
lods
jg
add
lahf
jno
pop
sbb
mov
mov
pusha
cmc
mov
cmp
jmp
push
orl
roll
jle
jmp
test
negb
lock
jnp
cs
cmp
popf
std
sbb
mov
or
sub
pop
mov
ljmp
mov
test
fs
dec
dec
push
stos
andl
cwtl
aaa
je
add
push
xlat
ljmp
jne
int3
mov
out
inc
ds
bound
loop
movsl
jecxz
enter
stos
sbb
jg
add
jmp
mov
sar
pop
enter
mov
fsubrs
jmp
adcb
imul
mov
mov
xchg
mov
xchg
inc
pop
push
push
push
subl
inc
or
add
xor
jmp
in
cmc
out
dec
or
mov
adc
xor
dec
push
stc
outsl
push
push
gs
pop
sarb
clc
mov
stc
push
jbe
inc
lea
pushf
push
mov
add
pop
xchg
sub
shlb
cmp
xor
cmp
cmp
add
cli
pop
mov
mov
xor
pop
jno
fidivrs
popf
push
add
sbb
not
add
push
jmp
pop
sub
daa
inc
ds
cmc
cmpl
sbb
jbe
ret
call
push
or
push
je
ja
sub
add
testl
into
jbe
sub
arpl
pop
cwtl
or
inc
mov
das
pop
push
jg
test
cwtl
or
aas
pop
pop
mov
movsb
hlt
in
add
lret
imul
pop
imull
clc
and
jmp
inc
push
sbb
push
adc
ljmp
fcomi
cli
fistpll
dec
sub
sbb
xchg
mull
mov
cmp
add
lock
sub
push
cmp
cmp
ret
out
dec
lock
das
jb
clc
sub
stc
je
fadds
in
incl
shlb
mov
or
pop
jbe
mov
outsb
jmp
pop
add
cmp
xor
sub
pop
imul
icebp
enter
lahf
lock
add
jmp
js
dec
xor
push
jbe
or
dec
add
popf
jg
mov
and
push
mov
dec
add
xor
outsl
mov
adc
cmc
cmp
sub
and
subl
popa
push
add
lret
xchg
sbb
repnz
repz
pop
aam
add
fcomi
rcll
and
fisttps
sbb
inc
add
sbb
or
adc
shll
outsb
and
call
adc
jo
xlat
xchg
rcll
pop
jmp
pop
add
or
adc
pop
cwtl
das
icebp
dec
in
mov
das
mov
daa
pop
fstps
jmp
shl
push
sbb
adc
idiv
or
daa
inc
dec
mov
fisubrs
cmp
lret
cmp
addb
test
cmp
pop
adc
adc
jmp
add
sub
sbb
loop
inc
in
dec
dec
data16
push
insl
in
das
in
mov
inc
aam
daa
out
out
scas
jg
scas
repnz
daa
enterw
or
push
ja
sub
cs
jp
dec
pop
mov
imul
outsl
lods
das
inc
mov
outsl
mov
lahf
out
add
jmp
lcall
lret
pop
fstps
outsl
sub
inc
aaa
sub
mov
lcall
add
mov
sarl
add
enter
add
lret
jp
sub
jmp
xchg
out
push
and
dec
data16
in
dec
repz
push
idivl
hlt
push
imul
cmpsl
mov
add
popf
icebp
fwait
cli
mov
cmp
int3
lahf
dec
repz
iret
loopne
or
push
jbe
add
in
xchg
ds
inc
push
je
push
dec
subl
cmp
mov
cli
adc
or
das
out
popa
mov
adcb
mov
arpl
pusha
mov
icebp
inc
mov
inc
jmp
fdivs
or
and
add
mov
shll
add
fdivs
pop
inc
cmp
jo
mov
xor
popa
das
sub
subl
out
sub
pop
push
mov
xor
mov
xchg
mov
sub
mull
cmp
mov
jnp
daa
in
adc
push
pop
adc
out
push
push
push
cmp
aam
jle
or
push
arpl
and
enter
dec
outsb
inc
cmp
or
cmc
cmp
ds
iret
shlb
in
cmc
or
jmp
mov
and
lods
pop
jecxz
xor
dec
movsb
push
add
lock
pop
shrl
jo
and
mov
xchg
add
push
inc
xchg
jle
jp
push
mov
push
mov
pop
adc
or
and
mov
jl
push
cltd
dec
or
es
and
jno
jmp
prefetcht0
scas
adc
jb
leave
ret
mov
push
clc
into
cmp
mov
jne
popa
jo
add
mov
cmp
rolb
in
or
jmp
inc
cmp
jo
mov
xor
icebp
mov
xchg
sub
in
testl
jge
xor
jns
inc
sub
push
push
or
add
add
mov
jmp
fists
add
push
inc
pop
std
ss
insb
mov
ljmp
pop
push
jmp
stos
scas
shr
std
pop
mov
mov
call
jle
sbb
or
jmp
lods
sarb
add
inc
sub
lahf
pop
or
ret
popf
adc
sub
repz
push
jmp
idivl
xor
pop
out
and
pop
push
ror
sbb
dec
mov
mov
mov
add
jmp
test
jl
sub
jge
out
daa
mov
mov
loopne
inc
adc
ljmp
nop
inc
mov
repz
sub
or
mov
imul
cld
jne
lods
ret
movsl
andb
aad
in
sub
int3
mov
dec
add
jg
jl
dec
std
add
push
adc
incl
add
cmp
shrl
mov
jge
repnz
neg
xlat
or
jo
sub
pop
push
add
add
dec
or
js
lds
out
pop
jmp
jb
mov
outsb
fldt
jmp
and
inc
syscall
push
add
mov
mov
add
enter
sub
jp
jle
and
outsl
sub
adc
mov
pop
add
push
sbb
cwtl
fsubs
lock
pop
pop
arpl
sbb
out
xchg
push
outsl
pop
daa
mov
lcall
in
adc
and
sbb
jnp
inc
popa
and
add
pop
les
add
add
fsubl
sub
adc
push
jecxz
push
push
insb
push
in
std
add
inc
mov
or
movsl
xor
pop
add
dec
stos
add
subb
je
inc
test
fsubr
xchg
inc
xchg
mov
mov
repnz
dec
jne
mov
pop
add
pusha
sbbb
add
sub
int3
mov
inc
inc
in
mov
add
ffreep
aad
shll
jg
jb
mov
adc
ss
or
ja
fiaddl
xor
je
dec
xchg
ljmp
push
push
cmp
xlat
mov
ljmp
lahf
ret
pop
inc
in
mov
jmp
push
dec
mov
lahf
push
enter
fbld
push
push
stos
jae
sub
lods
sarb
inc
add
lds
cmp
ret
xor
outsl
xor
js
adc
jmp
pop
mov
add
dec
lods
or
pop
jmp
sbb
not
add
push
jo
mov
cwtl
mov
mov
rolb
push
dec
push
xchg
testl
aaa
stc
push
add
call
ja
in
or
jecxz
xor
sbb
add
adc
add
push
call
popa
mov
jmp
outsb
push
adc
adc
ret
in
stos
popa
sub
xlat
adc
inc
mov
sti
add
cmpsb
cmp
xor
sub
and
mov
add
add
and
divb
xor
inc
dec
outsl
lods
jg
decl
std
dec
stos
inc
ja
lock
insb
sbbb
push
jb
add
add
pop
test
je,pt
adc
xor
in
stos
aad
idivl
cmp
subb
pop
mov
add
jmp
lock
sahf
out
adc
jmp
push
ficoml
jmp
loopne
out
add
push
add
and
inc
fisubrs
pop
popa
jmp
jmp
enter
mov
dec
pop
push
mulb
shlb
int
mov
push
jns
sbb
or
mov
cmp
pop
enter
pop
pop
or
orl
sbb
and
repnz
in
and
incl
sar
lret
jno
ds
jne
adcl
push
mov
out
shll
dec
push
sti
fcompl
push
add
cwtl
or
push
in
pop
push
jle
sbb
pusha
xchg
imul
sub
inc
mov
in
test
mov
movsb
shll
or
repnz
xchg
in
sbb
adc
push
sub
mov
sbb
adc
mov
or
std
mov
ret
push
fadds
cmp
inc
jg
xchg
jno
bound
mov
sub
fnop
add
shll
cld
loope
mov
out
jg
imul
cmp
popa
dec
add
aam
mov
dec
leave
scas
push
fiaddl
ljmp
or
in
aas
inc
arpl
mov
xor
or
nop
movsb
loope
sbb
cmpsl
cmp
cmp
cmpb
xchg
out
add
arpl
mov
sub
in
adc
lds
xor
pop
sub
ret
inc
jl
or
adc
iret
mov
or
pop
push
mov
push
filds
xor
sub
add
mov
xor
loopne
repnz
repnz
jmp
ss
jl
and
add
adc
fisubrl
or
jmp
and
jnp
not
add
dec
sti
nop
sub
outsl
xor
sub
adc
sub
adc
inc
sub
das
adc
mov
or
int3
enter
push
test
adc
add
lahf
inc
mul
ja
fcom
inc
add
dec
scas
pop
es
pop
xor
jg
cmc
fistl
push
cmpsb
sbb
rep
movsl
dec
into
or
xor
pop
notl
jmp
jmp
loopne
loope
in
ljmp
mov
or
inc
xorl
add
push
jp
mov
add
cmp
insb
push
or
jmp
mov
mov
cs
add
fistl
pusha
or
pop
jmp
rcl
in
cmp
pop
out
xchg
dec
popa
movsb
mov
popf
and
in
movb
mov
jmp
pushf
stos
inc
pusha
pop
inc
mov
jb
test
pop
outsb
loopne
dec
aaa
dec
adc
repz
pop
sbb
popf
push
aam
push
jle
das
xchg
pushf
pop
add
sbb
and
add
data16
add
fildll
lret
and
add
arpl
pop
inc
add
pop
add
test
jp
loop
xorb
jg
sub
inc
dec
or
inc
xor
sub
lret
push
mov
aas
mov
inc
cmp
and
mov
repnz
lods
stc
adc
dec
xchg
push
push
xlat
shll
mov
sub
jmp
shlb
int3
fisttps
sbb
daa
xor
inc
ljmp
and
pusha
add
into
add
test
or
pop
pushl
push
push
pop
scas
and
xor
mov
out
lds
fwait
jnp
cltd
mov
xchg
jp
movsb
or
shll
xor
cld
inc
jo
shll
aaa
into
fisttpl
in
orl
xlat
sub
lret
pusha
fstpt
jae
rcll
push
js
loop
pop
lds
sub
ret
fidivl
and
dec
push
mov
jmp
xchg
pop
test
or
popa
sub
sub
call
pop
mov
jmp
pop
push
jmp
fisubl
xchg
mov
jae
or
clc
arpl
out
mov
pop
lret
push
adc
test
add
pop
push
cmc
or
enter
daa
jmp
lret
mov
sbb
or
aad
adc
sbb
xorb
testb
and
lahf
lods
pop
jno
stc
mov
popa
xor
dec
xor
je
mov
lock
pop
mov
mov
jg
fistpll
test
jmp
mov
push
add
xchg
mov
push
jns
cltd
aam
mov
pop
fisubrs
sub
jle
sub
inc
repz
push
xor
mov
push
xchg
xchg
xor
cmp
push
push
es
or
jl
xchg
aas
sarl
sbbb
sub
or
cmp
and
ljmp
pop
cltd
pop
adc
test
inc
lds
stos
jbe
or
into
int
push
jmp
repz
add
add
in
fmuls
cmp
mov
outsb
pop
ret
pop
mov
sbb
scas
mov
out
outsb
sub
sub
cmp
in
dec
mov
dec
je
stos
test
mov
dec
ljmp
push
or
jmp
fcomp
mov
adcb
mov
mov
dec
push
aad
dec
mov
icebp
clc
cmp
or
pop
dec
inc
ja
outsl
mov
cmp
sti
sub
sub
add
push
add
xor
cwtl
mov
cmc
pop
jne
pusha
jnp
stos
mov
lahf
mov
jb
loope
sbb
repz
popa
jmp
rcll
out
rcrl
incb
cmp
push
test
adc
test
xchg
push
insb
jb
add
dec
mov
mov
and
mov
mov
daa
sub
add
mov
iret
add
xor
fldcw
lods
add
pop
xor
jle
shll
add
push
mov
jns
cmp
and
in
dec
fildl
add
add
ds
pop
xchg
inc
mov
and
push
jo
fldenv
data16
pop
daa
jno
fstl
pop
pop
and
xchg
push
jmp
test
add
idivl
ljmp
adc
rolb
cmp
orb
and
pop
aad
push
repnz
std
popa
shll
push
mov
dec
add
mov
jmp
shrb
das
adc
jns
cmp
jmp
dec
in
jae
push
lods
xor
adc
sbb
pop
lock
mov
or
mov
or
in
xlat
lods
test
je
mov
mov
lret
xchg
mov
fsubrl
in
ret
mov
out
xor
pop
test
call
jg
inc
mov
stos
mov
inc
xor
pop
ds
cmpsb
mov
out
adc
jl
ret
or
sub
and
repnz
test
sub
divps
mov
pop
push
xchg
dec
adc
push
subb
or
push
and
je
push
sub
jmp
lcall
and
je
mov
inc
into
push
aas
pusha
pushf
push
dec
sub
push
jae
push
testl
xchg
push
popl
xor
insb
mov
inc
jmp
inc
pushf
pop
dec
das
das
cmc
jbe
or
jl
adc
rcrb
mov
dec
mov
ds
roll
add
adc
cmp
xchg
into
sbb
or
adc
test
pop
add
sbb
movsl
sub
pop
cs
sti
adc
jmp
or
sub
std
dec
into
sarl
lock
test
test
xor
pop
push
push
pusha
pop
mov
pop
neg
jmp
icebp
sti
loop
enter
sub
push
xor
dec
lret
adc
mov
push
jmp
inc
or
add
xlat
pusha
int
leave
out
loope
adc
xchg
dec
popf
daa
gs
xchg
and
ret
hlt
out
mov
xchg
movsl
fs
dec
test
pusha
xor
leave
leave
jb
xchg
and
cmp
sub
daa
add
pusha
inc
mov
jns
pop
lock
or
adc
and
insb
lds
adc
sub
ja
jnp
adc
push
and
or
push
pop
data16
mov
mov
jb
and
adc
inc
mov
add
jne
push
jecxz
jae
pop
push
in
adc
mov
mov
cmp
in
loopne
push
and
xor
and
push
out
sub
push
pop
int3
or
sub
loop
mov
jp
xor
pop
neg
push
and
out
sbb
jmp
xchg
push
mov
jmp
push
pop
inc
mov
or
sub
cmpsl
int3
jns
mov
orb
mov
test
jmp
add
jo
decb
add
stos
mov
or
and
ffreep
aas
rorl
push
bound
or
add
test
jno
ss
inc
jg
jmp
sbb
sub
pop
cmp
xchg
loopne
lcall
sti
mov
add
or
or
sub
cld
or
pop
fcmovb
orl
jne
imul
adc
or
pop
jo
popf
mov
mov
sub
bound
shll
mov
xor
sbb
add
push
cld
je
sub
das
mov
sub
adc
mov
cli
popa
sub
and
jbe
xorb
xor
push
fs
sub
adc
or
cmp
inc
cmp
mov
xchg
fucom
jmp
popf
jmp
pop
subb
lret
dec
adc
push
add
stos
loop
pop
adc
mov
inc
sub
dec
pop
inc
aaa
clc
and
or
push
inc
ds
xor
fwait
pusha
adc
adc
inc
sbb
pop
sbb
fwait
push
push
das
pusha
pusha
hlt
and
jle
mov
imul
and
pop
shr
add
test
push
dec
jecxz
inc
add
xor
inc
add
scas
pusha
clc
and
and
rcrl
mov
pushf
mov
adc
test
das
mov
je
das
js
repnz
push
out
inc
sbb
imulb
mov
add
imul
rclb
and
jmp
or
cmp
adc
jmp
and
jl
dec
inc
cld
rorl
add
push
dec
jb
sub
or
or
icebp
fistpll
xor
in
cmpsb
mov
or
xor
adc
fidivrl
outsb
xor
pop
fcmovnb
sub
std
dec
push
mov
cli
loop
shrb
add
push
and
pop
cmp
adc
push
and
cmc
cmp
shll
stos
push
adc
repz
inc
cmpsl
inc
movb
fs
xor
pop
adc
iret
dec
js
xor
popl
xor
jle
pop
pop
and
inc
dec
ja
jb
mov
cmc
mov
push
jmp
rorb
jmp
and
jmp
mov
cld
sbb
sbb
or
jae
push
adc
dec
pop
rclb
sbb
add
shld
lea
je
pop
andb
pusha
xchg
push
aaa
orb
push
mov
in
and
mov
or
ja
lret
pop
adc
mov
cwtl
test
fadds
loopne
add
loope
xchg
xor
aas
lret
push
movsb
xchg
scas
mov
jp
inc
mov
push
adc
stos
loopne
mov
inc
push
sbb
add
pop
push
push
inc
repnz
mov
pop
jp
lret
add
roll
xchg
mov
call
mov
ds
mov
in
loopne
push
push
in
mov
cltd
and
dec
test
push
jae
sbb
inc
add
or
xchg
out
fs
movsb
add
dec
push
cli
popa
clc
cli
lock
inc
mov
ljmp
xchg
repz
bound
cmp
sub
pusha
add
aas
jb
jae
andb
mov
mov
jp
jmp
push
mov
clc
fnstcw
sub
sub
movsb
mov
push
popf
pop
inc
jmp
negl
out
push
xor
mov
imul
jbe
xchg
add
sub
mov
pop
stos
pop
pop
cmp
adc
sub
or
push
sbb
mull
xchg
push
popf
push
add
sbb
les
stc
in
ret
loope
loopne
pop
or
jl
leave
mov
jnp
jb
das
jmp
aas
mov
xor
mov
gs
aam
js
test
test
push
out
shrb
div
adc
mov
xchg
dec
push
push
sub
add
mov
pinsrw
push
test
jne
mov
repnz
daa
jo
or
add
addl
scas
jno
adc
pop
fwait
sub
jmp
scas
in
ret
push
add
xor
cmp
ss
pop
mov
jmp
push
mov
lds
mov
lret
pop
xlat
gs
or
pusha
repz
cmp
subb
or
pop
mov
push
pop
xor
sbb
jne
or
imul
push
mov
out
popa
jmp
pushf
inc
xchg
pop
push
xchg
mov
aaa
pop
out
sar
cld
dec
dec
fwait
jbe
inc
cmpb
sub
shll
add
lods
jne
dec
adc
mov
pop
xchg
loope
cli
pop
xlat
adc
or
jmp
popf
and
xchg
pop
xchg
add
sub
or
aad
bound
bound
and
sbb
or
aaa
or
xorl
ja
push
add
jo
popa
inc
jg
push
das
add
push
dec
and
int
mov
cmpsl
pop
outsb
punpckldq
incl
dec
or
or
dec
push
or
sub
outsb
popa
xchg
add
inc
xchg
insl
ljmp
adc
push
pop
dec
and
stc
lret
inc
daa
in
test
pop
dec
lds
sbb
mov
pop
shrb
add
inc
addb
mov
xchg
movsl
lods
pushf
scas
adc
adc
mov
in
out
dec
pop
xor
rolb
xchg
sub
sub
xor
mov
pop
lock
scas
rorb
push
push
adc
push
mov
push
call
in
or
sub
fldl2t
jae
cmpb
cld
mov
cmpl
push
das
push
or
cli
into
add
dec
neg
add
jmp
pop
xor
inc
stos
xor
rclb
add
or
movsb
xorb
adc
out
mov
xchg
cmpsb
and
mov
scas
or
iret
pop
lret
rolb
pop
xor
movsb
dec
js
xlat
xchg
mov
add
shll
pusha
add
push
mov
sub
leave
pop
jbe
or
rcrb
ror
push
xor
xlat
add
fsubs
jmp
mov
xchg
das
fistps
lods
adc
sbb
or
popf
or
sub
cmp
and
adc
lds
in
add
mov
test
mov
test
fs
jg
or
mov
dec
cmpsl
ja
sub
xor
pop
sub
data16
das
xchg
push
push
fsubrs
pop
dec
mov
xchg
out
push
push
push
mov
xor
test
or
xchg
cmpsl
and
nop
insb
add
add
xor
jmp
pop
and
mov
mov
push
sub
mov
add
adc
adc
or
xchg
adc
clc
mov
sub
xor
sbb
in
and
push
and
pop
scas
lea
push
jo
enter
mov
sub
mov
or
pop
pop
movsb
movsl
adcb
pushf
sar
scas
les
enter
inc
xor
add
pop
std
and
ds
push
push
in
push
push
mov
inc
or
or
mov
and
mov
sub
pusha
inc
mov
pop
pop
jo
sbb
lds
fs
out
popa
fmull
xlat
pop
leave
std
add
fmull
cmc
popf
add
jbe
bound
shll
adc
sub
jne
mov
pop
add
jns
pop
mov
xor
test
and
sub
sub
pop
xchg
stos
pop
xor
test
add
fists
pop
jmp
sar
push
mov
adc
mov
jg
sbb
sub
mov
fs
imul
dec
pop
mov
or
or
repz
xlat
mov
dec
mov
xor
or
insl
popa
jmp
ror
cld
ror
popf
jno
cwtl
mov
and
jo
lea
sbb
mov
mov
in
mov
loopne
push
pop
inc
or
stos
push
push
mov
movsl
jle
sahf
pop
insl
xor
push
outsb
or
mov
dec
out
iret
int3
scas
loop
add
pop
add
push
push
mov
lods
imul
je
loope
mov
xchg
subb
pusha
xor
adc
sbb
imul
add
cmp
into
jge
mov
sahf
sub
mov
push
pusha
jmp
clc
cld
or
cmp
push
xchg
addb
add
sbb
sub
cmp
pop
sub
jae
jmp
push
arpl
fucomp
ret
mov
mov
dec
inc
int
in
orl
mov
sub
adc
dec
sub
inc
add
out
lahf
xor
insb
push
push
or
adc
and
test
or
or
or
sbb
cmp
loopne
mov
add
jbe
imul
add
xchg
sbbb
or
pop
sbb
std
mov
clc
mov
rcll
test
inc
xlat
inc
inc
rcrb
push
mov
mov
inc
dec
divl
add
in
mov
mov
notl
and
pop
test
add
dec
jmp
loope
stc
imul
mov
push
stc
jnp
add
pop
daa
pushf
mov
hlt
fnsave
mov
add
sub
aad
pushf
cmp
xchg
not
or
push
sarb
xchg
lret
pop
fwait
add
js
hlt
sbb
xchg
pop
fisttps
sub
addb
xchg
fcmovnb
sbb
cmpl
outsl
fistps
in
iret
mov
xchg
xchg
jmp
pop
add
pop
aaa
add
cmc
and
xchg
push
inc
aad
repz
mov
adc
dec
int3
int3
roll
adcb
adc
out
divl
fcoms
mov
and
push
push
jmp
shl
push
dec
or
gs
daa
xchg
pop
and
movsl
loopne
lret
shll
push
mov
insb
es
push
sbb
dec
pop
pop
cmc
pop
sub
xchg
push
and
sbb
cmpsl
add
xchg
jmp
lds
arpl
add
inc
or
sahf
and
adc
sbb
or
sbb
fs
ljmp
cld
add
es
out
inc
sub
fisttpl
cs
cmp
test
leave
sub
ret
negb
popf
cmp
jmp
pop
pop
pop
mov
lock
sti
stc
sbb
mov
and
mov
ret
jno
dec
and
clc
std
movsl
stos
mov
mov
aas
daa
inc
push
mov
mov
cmp
subb
and
shrb
inc
jmp
loopne
pop
adc
fsubrs
std
or
cmc
jmp
popa
je
in
stos
xor
or
mov
push
xor
and
jnp
or
ret
push
mov
out
fsts
pop
ja
mov
push
mov
sbb
pushf
out
pop
loop
or
mov
ljmp
xor
pop
mov
mov
pusha
and
xchg
jb
and
cs
or
loop
mov
sub
xchg
jnp
and
adc
mov
xor
jg
xor
loope
std
jp
xor
test
int
popf
inc
cmp
nop
aad
sbb
add
ret
movb
stc
mov
popa
sbb
rcl
fadds
sarl
jmp
outsb
xchg
scas
jne
mov
arpl
cmp
add
sub
xor
jecxz
add
xor
sbb
pop
push
mov
sub
mov
gs
cli
lret
or
mov
shrl
addb
xlat
clc
repz
add
loopne
xchg
cs
jbe
out
rcrb
fcomps
push
call
push
adc
shr
push
pop
mov
or
sbb
pop
dec
mov
add
sbb
imul
sub
xchg
scas
shlb
pop
mov
add
shl
and
outsb
push
or
or
fmuls
jl
mov
rcrb
adc
out
add
add
loopne
data16
pop
aas
shll
loopne
jns
adc
push
or
mov
imul
test
pop
pop
movsb
js
push
jae
outsb
les
out
pop
div
jmp
push
fmul
and
jecxz
push
push
aaa
ds
scas
test
adc
mov
cs
test
cmp
mov
inc
adc
mov
sub
and
dec
push
mov
mov
out
ja
jmp
jmp
xor
or
nop
mov
cs
cli
orb
pop
inc
xor
add
jo
adc
in
outsb
and
cmp
and
lcall
imul
add
cmpb
jo
fdivrs
push
or
call
push
nop
inc
sbb
fbstp
sub
dec
insb
pop
adc
data16
and
mov
lods
jo
mov
sbb
inc
push
push
xacquire
pop
pop
mull
inc
mov
and
cmpsb
aas
out
cwtl
xchg
or
pop
mov
xor
ret
std
shr
in
mov
dec
ljmp
jg
xor
das
out
pop
data16
pop
xor
push
aad
xchg
push
add
jb
rolb
in
jns
or
jmp
pusha
or
popa
adc
cmp
pop
mul
push
and
cmp
mov
and
push
dec
push
popf
mov
add
mov
out
mov
mov
adc
test
fcoml
xor
mov
pop
cmp
dec
sbb
repnz
pop
dec
adc
sti
lods
daa
jne
sbbb
out
add
psrlw
pop
add
rorl
and
mov
test
insb
pop
mov
and
cmc
aaa
jg
roll
add
test
push
dec
push
mov
inc
andb
inc
enter
jns
sub
cmp
lahf
clc
data16
xor
or
mov
icebp
mov
in
movsb
hlt
pop
daa
mov
test
and
xchg
rcrb
sub
test
adcl
sbb
or
inc
mov
push
sub
add
dec
adc
lods
mov
pop
or
push
sti
jmp
scas
test
idiv
add
xchg
push
mov
test
enter
dec
cli
sub
cmpsb
dec
xlat
jg
out
push
push
loope
hlt
jnp
sub
dec
sub
arpl
repnz
xlat
add
xor
fadds
sub
lahf
ror
add
mov
push
inc
xchg
rorl
std
jmp
loope
add
call
push
push
jmp
aas
jns
mov
jmp
mov
roll
data16
lea
jge
add
js
add
or
in
push
sub
sub
adc
std
cltd
add
xchg
xor
jmp
insl
ljmp
icebp
pop
pop
lea
jns
push
xchg
ror
add
mov
idivb
add
jmp
mov
mov
call
lret
add
es
mov
subb
sbb
sub
dec
repnz
and
pop
sbb
mov
sarb
mov
imul
pop
jmp
frstor
adc
not
inc
mov
dec
sbb
movsb
push
sbb
dec
jmp
add
into
sub
push
loopne
aad
fs
dec
jmp
xor
mov
pop
jns
add
je
mov
daa
or
pop
movsb
rolb
clc
bnd
cmp
test
xor
mov
jns
mov
pop
not
adc
rolb
cld
fstpl
ds
jo
jmp
cmp
and
jns
push
cs
sub
jmp
inc
add
int
add
nop
cmpsl
pop
pop
adc
clc
pop
sub
push
sub
adc
sub
add
rcll
add
fistps
out
add
nop
cmpb
sub
pop
and
dec
les
je
xor
jmpw
loope
cmp
clc
icebp
insb
lods
xor
jecxz
mov
mov
inc
sarb
sbb
sbb
inc
aad
inc
decb
mov
or
push
or
stos
sub
repz
jge
or
mov
add
pushf
bt
pop
cld
mov
aad
pop
das
jg
inc
push
addl
lcall
ss
hlt
xor
pop
jns
daa
scas
aas
cli
inc
sub
add
cmp
mov
cmpsl
fldcw
and
sub
lds
mov
and
pop
iret
sar
idivb
push
sub
xor
or
or
mov
pop
adc
jmp
xchg
and
pop
dec
sbb
mov
push
jmp
sub
cltd
pop
fisubl
mov
aam
sti
aam
idiv
inc
xor
fsubs
fs
cmc
scas
sub
and
or
push
cmpsl
imul
pop
pop
dec
pop
lock
call
push
and
cmpsl
push
fwait
push
push
idivl
and
jmp
mov
pop
mov
inc
inc
add
js
cmp
lea
inc
adc
dec
mov
cmp
push
jne
cs
mov
and
xor
add
push
mov
mov
bnd
sbb
or
or
loopne
loope
cld
jl
push
xchg
aaa
fs
jg
add
pusha
xor
fadds
andb
daa
cvtdq2ps
add
in
jecxz
xor
jle
and
les
pxor
imul
hlt
imul
pop
pop
push
jb
stos
aad
cmp
popf
fildl
aad
push
sbbb
pusha
fstpl
pop
pop
icebp
es
mov
cmp
lcall
fsts
adc
stos
mov
adc
adc
fsts
cmp
push
daa
cwtl
pop
in
cltd
jae
xor
pop
ja
js
aad
mov
inc
cwtl
movsb
add
mov
cmp
and
pop
aad
jnp
in
rclb
push
push
jp
cs
or
pop
adc
jmp
push
add
xor
fwait
scas
pop
clc
out
cmp
dec
call
adc
or
sbb
call
cmc
test
test
stc
add
inc
add
jne
fdivrs
pop
std
repz
jg
outsl
or
lock
mov
push
and
arpl
test
jno
add
jle
pop
enter
lahf
out
push
pusha
inc
xchg
push
or
inc
outsb
insl
pusha
sbbl
sub
fistpl
and
xor
bound
inc
jmp
popf
mov
dec
cld
aam
xchg
std
pop
mov
cmp
in
lock
out
xchg
add
inc
lahf
add
pop
aaa
nop
cmp
dec
lds
mov
add
jmp
xchg
sbb
or
pop
and
ds
hlt
push
imul
loope
push
pop
sub
and
test
sub
jae
sub
xchg
pop
jg
jg
cmp
jne
push
pop
pop
cmp
mov
imul
jmp
pop
jbe
xor
ljmp
aad
sub
jb
adc
pop
cmp
add
das
dec
mov
cmp
pusha
dec
out
sub
repz
stos
xor
jae
mov
scas
sub
pop
jne
pop
adc
popa
push
add
sub
orl
clc
mov
jmp
jbe
popa
push
xor
and
mov
xor
filds
mov
shl
cmpl
mov
test
scas
pop
xchg
xchg
xor
pop
fnstcw
cmp
loopne
pop
arpl
sti
add
repz
icebp
icebp
rcr
arpl
mov
mov
fucom
rol
jmp
jg
testl
mov
push
xor
cwtl
arpl
imull
sub
xchg
push
mov
push
cmp
cs
push
jnp
js
xchg
xchg
gs
andb
shl
shll
or
or
pop
cld
xor
fs
add
jmp
push
push
push
mov
ret
xchg
mov
adc
jbe
popf
adc
add
aad
dec
mov
fisttpll
pop
test
push
adc
cmp
adc
mov
xor
cmp
test
pop
clc
xchg
cli
xchg
insl
inc
push
sub
and
popa
je
hlt
push
cli
mov
add
sbb
adc
js
and
negb
adc
frndint
jecxz
jnp
int
xchg
or
outsb
in
xor
sbb
pop
in
aas
ret
push
pop
dec
dec
xorl
enter
or
pop
mov
pusha
dec
cld
call
and
int3
push
pop
mov
fistpll
call
sub
out
mov
push
rcll
aas
or
xchg
or
lea
pusha
push
enter
cmp
shlb
nop
push
or
aam
inc
outsb
out
mov
insl
push
push
pop
cwtl
gs
jmp
add
mov
add
push
cmp
not
add
mov
mov
pop
push
bound
push
push
jp
add
sbb
inc
or
loopne
add
or
jg
repnz
adc
das
jmp
loope
shl
push
mov
clc
sub
leave
movl
dec
inc
or
adc
shr
dec
mov
mov
jmp
test
add
adc
and
mov
sbb
jmp
out
sub
mov
les
jp
mov
insl
mov
push
adc
xor
ret
cli
lds
adc
or
imul
adc
jecxz
xor
push
jbe
movl
bound
inc
jns
inc
adc
add
jge,pt
in
add
push
roll
test
lret
das
pop
adc
pop
pop
and
imul
inc
inc
mov
fdiv
inc
ss
xchg
out
mov
jnp
in
jge
int3
dec
dec
or
mov
sbb
int
xor
flds
inc
inc
cmp
push
inc
or
xchg
push
push
jmp
mov
dec
out
jecxz
add
mull
fcoms
xchg
mull
shll
cmp
cld
cmp
push
and
scas
mov
pop
lods
push
sub
icebp
pop
sub
dec
xor
ret
rcll
sbb
adc
push
add
and
push
add
xor
push
or
mov
add
dec
or
jns
lahf
push
fldl
jae
add
adc
lcall
fistpll
dec
fnstsw
xchg
sbb
ret
out
push
push
xor
pop
cmp
rcll
push
dec
jo
mov
xor
mov
das
rclb
mov
ja
and
fmuls
sub
jmp
mov
je
inc
rclb
mov
sub
fdivl
js
or
mov
add
hlt
out
or
add
jne
scas
add
out
mov
pop
icebp
sbb
cli
mull
add
mov
xchg
mov
fcoml
cmc
xchg
ret
pop
pusha
push
push
jmp
add
adc
add
fs
mov
daa
mov
push
test
and
fs
in
and
xchg
push
call
xor
movb
test
xchg
sub
add
sbb
cmp
mov
and
repnz
ret
jne
cmpsb
cmpsb
inc
jns
mov
xchg
push
mov
adcb
jne
xchg
subb
push
jp
out
xchg
cmp
scas
inc
mov
pop
jle
pop
rolb
push
imul
mov
fsts
jmp
xor
pop
in
cmp
mov
add
stos
dec
dec
dec
js
lea
or
hlt
add
cmp
fsubs
ret
cmp
and
inc
call
lret
rolb
rcrb
mov
and
adc
fdivrs
loopne
sub
push
sbbl
in
imul
ljmp
shll
xchg
movsl
add
mov
ljmp
in
lahf
icebp
push
dec
mov
adc
adc
xor
dec
pop
cmp
pop
xor
lock
add
cwtl
scas
mov
loop
push
in
lea
aaa
bound
push
jbe
in
xor
push
pop
jmp
adc
push
add
je
xchg
not
inc
shrl
add
les
inc
roll
and
and
dec
adc
stos
cmpsl
out
dec
adc
leave
cmpl
cmp
pop
adc
sbb
jl
arpl
jno
add
or
jp
add
dec
add
dec
push
push
xorl
pushl
mov
imulb
pop
icebp
or
testl
mov
movsl
lcall
jo
lret
cmp
cmp
lods
jmp
push
and
out
pop
cltd
adc
push
fs
pop
or
add
ret
and
mov
cs
mov
push
mov
scas
pushf
push
movsl
fisttpl
inc
addb
add
je
pop
push
pop
clc
add
push
rcl
mov
bound
push
sbb
int3
mov
and
cmpb
fistps
xchg
cwtl
sub
lods
mov
sbbb
adc
pushf
pusha
xor
dec
cmp
adc
xlat
adc
push
sbb
sbb
adc
jno
dec
repz
sub
pop
adc
adcl
enter
push
mov
lods
jp
or
aaa
pushf
shll
rcl
out
loope
xchg
jle
sbb
aam
stos
int3
gs
add
lods
dec
in
mov
stos
or
dec
xor
xor
mov
or
pushw
adc
jmp
sbb
mov
int3
cmpsb
lea
pushf
cmpsl
movsl
idivb
xor
pusha
pop
test
lret
cmpb
dec
push
jmp
in
negb
or
jmp
and
in
ds
xchg
scas
mov
inc
enter
std
fistps
jle
jmp
cld
sub
int3
jno
push
and
xor
cmpsl
loop
std
xor
push
cltd
sub
sahf
adc
fidivl
jmp
into
pop
xorb
icebp
leave
insl
loope
jmp
movsb
adc
mov
adc
and
push
pop
call
and
pop
sahf
test
les
adc
inc
orb
sub
jmp
das
pop
pop
loopne
rolb
mov
xor
arpl
or
movsb
mov
xchg
mov
pop
clc
pop
sbb
pop
push
sub
push
pop
cli
adc
sub
sar
lock
jbe
push
mov
inc
mov
push
fcoms
cmp
mov
adc
movb
pop
leave
pop
adc
scas
shrl
test
jnp
fistpl
push
mov
add
inc
rclb
adc
adc
mov
dec
in
and
pop
dec
inc
sbb
int
and
mov
into
add
clc
pop
sub
popa
add
adc
scas
into
inc
pop
cld
pop
sub
inc
outsl
lods
cmp
ja
mov
mov
shr
dec
shrl
mov
pop
lahf
jno
ret
or
out
cmpsb
ret
jo
lds
cmpl
stc
sub
leave
in
out
lock
jbe
mov
sub
pushf
dec
push
mov
cmovp
dec
and
sbbl
aam
mov
lahf
call
insl
idivb
mov
adc
add
dec
xchg
mov
cmp
jge
push
inc
push
addl
jle
out
int
imul
inc
mov
inc
shl
mov
adc
mov
test
mov
add
and
add
jno
sub
jnp
aam
xor
out
jne
dec
jle
out
or
pop
pop
mov
cmp
jl
shlb
pop
aad
adc
push
push
mov
or
xor
sub
in
das
xchg
pop
pusha
aas
or
mov
cli
subb
gs
jg
movsb
xchg
jle
ficoml
fisttps
push
bound
insb
aas
inc
or
push
ljmp
add
sar
fadds
loop
adc
push
and
adc
cs
test
cmp
pop
add
jmp
xchg
xchg
add
or
jmp
mov
jo
push
inc
fstpt
stos
add
push
iret
scas
loope
int
add
sbb
movsl
clc
xchg
jb
nop
mov
add
sub
xor
dec
inc
push
jns
dec
or
inc
popa
lret
mov
das
das
push
or
xor
inc
imul
mov
insl
push
cmp
add
cmp
sub
xchg
icebp
mov
xchg
mov
inc
or
jg
hlt
stos
adc
add
pop
ror
fidivs
pop
ss
xchg
and
sub
mov
xchg
fnsave
subl
dec
add
js
dec
sbb
sti
sbb
fisttpll
cmpb
inc
dec
out
pop
xchg
fs
add
fsubrs
mov
and
pop
mov
push
sub
cmpsl
adc
add
aam
int3
push
shr
push
xchg
pushf
push
push
add
jmp
inc
cmpb
dec
leave
or
and
pusha
std
pop
pop
and
lock
mov
dec
imul
mov
push
xor
sub
xchg
adc
push
adc
pop
inc
lds
sarb
das
les
pop
xor
pop
shrl
jge
rcr
mov
je
insl
push
shll
dec
inc
shr
pop
daa
cmpsl
mov
in
int
mov
movsl
mov
cmp
cmp
pop
jmp
mov
lds
test
push
add
push
mov
aas
loopne
testb
jp
add
je
and
js
add
mov
pop
xor
sbb
scas
repnz
xchg
fs
mov
jle
outsb
fdivrl
jmp
lcall
hlt
js
pop
cmovne
out
rcrl
push
cs
sub
add
jmp
lock
dec
push
and
add
cmp
dec
sub
cmp
dec
inc
xor
mov
in
dec
stos
addb
ret
sbb
roll
rep
push
popa
add
in
mov
sti
aas
cli
push
mov
pop
push
data16
adc
adc
sbb
stos
adc
sub
pop
das
jl
add
jg
dec
in
push
cwtl
loope
sub
lret
aam
loope
mov
loope
shrb
mov
cli
mov
popa
mov
je
pop
cmp
jmp
push
push
mov
push
mov
test
xchg
test
adc
jle
push
int
sbb
insl
sub
inc
fadds
sbb
fidivrs
pop
pop
shlb
fs
roll
dec
jecxz
and
jo
and
and
ficoms
sub
fisubrs
push
or
stc
inc
sub
dec
xor
xchg
sbb
into
repz
mov
pop
or
or
pop
lea
scas
mov
int3
sti
push
pop
loopne
jbe
jns
push
in
cmp
mov
sbb
sbbb
pop
in
andb
inc
cwtl
push
ja
stos
adc
test
pop
pushl
push
pop
adc
adc
xor
pop
pusha
orb
lock
movhps
loopne
lods
and
dec
outsl
je
jno
hlt
jmp
and
hlt
outsl
ret
cmpsl
fcoms
popf
lret
rcrb
imul
mov
and
xchg
push
jl
xor
or
xchg
insb
popa
fsubr
sub
mov
push
clc
cmp
pop
xchg
jl
adc
add
pop
ficompl
adc
fsubrp
mov
push
adc
call
cmp
jno
test
xor
sub
jmp
call
pop
addl
fnstcw
dec
push
mov
outsb
adc
dec
or
sbb
je
mov
jae
push
mov
sub
std
push
call
test
or
push
orb
adc
inc
xor
sub
jle
and
out
inc
mov
jb
ret
aad
xchg
jmp
sti
jne
jg
inc
int
xchg
ret
mov
xor
add
aad
cli
sub
daa
mov
push
jp
sbb
nop
pop
data16
ja
push
adc
aas
mov
push
and
push
inc
push
and
and
icebp
mov
pop
dec
es
fisttpl
adc
add
out
sub
xor
mov
xor
cmp
sbb
mov
jge
push
adc
inc
out
int
push
popl
mov
insl
inc
dec
cld
out
test
mov
pop
aam
shrb
sub
xchg
jmp
inc
das
fs
inc
mov
mov
or
nop
and
movb
jp
mov
lds
dec
cmpb
loop
xor
pop
push
pusha
sub
inc
push
pushfw
dec
bndcl
es
repz
iret
pop
add
shr
stos
inc
andl
sub
or
addr16
in
rcrb
jbe
push
push
and
add
fcomps
stc
stos
sub
fiaddl
cmpsl
add
cmp
es
cmpsb
pop
out
test
mov
pop
dec
xor
mov
call
xor
xchg
mov
arpl
sbb
outsb
aad
add
sub
sub
arpl
clc
outsl
inc
cmp
rcll
sbb
xchg
jne
ds
adc
movsb
bound
jg
jmp
mov
push
push
ret
mov
sub
xor
mov
loope
outsl
cmpsb
xor
sub
add
xlat
stos
adc
adc
fsubr
sbbl
cli
negl
mov
loopne
nop
jns
xchg
xchg
fcomip
shr
mov
std
xchg
push
fists
inc
and
or
mov
sbb
stos
jmp
loope
cmp
mov
mov
jno
ret
jo
add
jl
inc
push
movsl
inc
test
pop
jmp
roll
jge
xchg
and
jp
mov
cli
xor
pop
stos
in
stos
pop
sbb
push
bound
add
popa
pop
pop
outsb
rcll
push
and
sub
fidivl
sub
mov
jns
out
add
push
dec
stos
xchg
dec
sub
add
jge
xor
aaa
pop
gs
popa
loope
mov
dec
push
mov
rorb
push
ja
xchg
es
sub
mov
es
sbb
test
xchg
icebp
xor
repz
fcmovnb
cmpb
cmpsb
xor
sub
pop
mov
jns
das
jb
and
rcll
pop
push
or
xlat
push
std
mov
pusha
mov
rcrl
mov
in
repz
pop
push
push
mov
lcall
and
in
pop
or
jmp
sub
add
sub
mov
stos
fnsave
jge
push
pop
fsubs
push
cs
ret
xchg
add
adc
mov
mov
push
fwait
scas
js
cld
cmpsl
pusha
push
inc
repnz
dec
jle
dec
adc
pop
xchg
add
mov
jo
or
push
imul
inc
mov
pusha
mov
push
jl
add
imul
push
sub
xor
adc
lret
fsubrp
mov
push
movsbl
xlat
jb
neg
pop
jns
or
inc
inc
jecxz
or
out
mov
adc
or
dec
adc
push
fstl
bound
xchg
dec
push
mov
outsl
xor
adc
iret
insb
lahf
loopne
pop
xchg
arpl
inc
shr
fsubs
push
out
fadds
fcompl
mov
dec
or
imul
or
or
fisttpll
fwait
cmc
stc
mov
dec
ja
daa
xor
pop
mov
ret
add
sub
ljmp
leave
stc
les
addb
cld
jbe
hlt
mov
sub
jmp
lock
movsb
mov
mov
out
test
pop
add
mov
sub
push
dec
pop
movsl
jb
mov
fs
mov
add
mov
xor
or
adc
jno
lret
scas
dec
cmp
xchg
push
stos
filds
sbb
mov
sarl
inc
cli
jl
jbe
sub
push
xor
aam
hlt
jle
add
jae
and
mov
and
add
add
int3
lods
daa
push
adc
mov
fldl2e
arpl
stos
lret
push
ret
fcoml
add
mov
sar
daa
pusha
hlt
mov
adc
sub
xor
pop
rorl
test
mov
shll
cmpsl
pop
enter
mov
xor
pop
mov
mov
jle
jmp
cld
leave
jl
mov
insl
push
lods
adc
push
mov
lea
or
adc
push
jmp
imul
les
mov
gs
mov
or
inc
xor
sbb
xchg
fdivr
push
fistps
fldl
push
push
cmp
lea
js
scas
les
add
or
jg
cmp
stos
shrb
push
cmpb
adc
sbb
cmp
mov
loope
add
jp
jmp
adc
cltd
iret
add
push
addr16
nop
addl
psubb
dec
imull
in
gs
mov
jns
pop
cld
sub
xor
push
push
lods
mov
jmp
ret
adc
jmp
dec
jg
mov
inc
dec
mov
fldenv
pop
jp
lods
sbb
add
scas
or
dec
xor
mov
rorb
pusha
fsubrl
mov
xor
and
ret
dec
mov
popf
push
rcr
shr
push
insb
scas
adc
test
js
cwtl
pushf
jp
divb
pop
xor
incb
cs
cld
fmull
loope
shrb
pusha
mov
mov
popa
and
push
cmp
inc
imul
pop
scas
or
in
inc
pop
push
sub
add
dec
std
adc
sarl
jecxz
das
fcoml
xor
jmp
std
clc
mov
mov
sub
gs
mov
mov
sub
fs
sub
aad
inc
sbb
mov
pop
fxtract
repz
dec
loop
int
in
loopne,pn
frstor
outsb
inc
leave
xlat
lock
pop
stc
shrb
inc
lret
sub
aas
pop
or
loop
push
test
int
in
jmp
stc
inc
insl
mov
mov
pusha
aad
sbb
add
testb
mov
ljmp
dec
into
mov
mov
cmp
and
rorb
mov
or
mov
mov
test
dec
sbb
xchg
mov
inc
inc
adc
xor
fwait
cs
sbb
in
add
fadds
mov
push
js
push
pop
add
cmp
mov
mov
mov
call
dec
pop
inc
in
adc
rcr
mov
jno
inc
adc
mov
mov
jg
jecxz
pushf
cld
pushf
movsb
out
test
push
loopne
mov
movl
push
mov
idivl
add
push
in
pop
jp
xor
adc
cmp
pushf
sbb
jae
sbb
jp
pusha
outsl
push
or
mov
xchg
in
pop
mov
xorb
and
ret
insb
fs
adc
repz
bound
stc
and
and
loopne
or
or
pavgb
lods
or
sbb
ret
or
in
jae
stos
sbb
push
test
push
ret
ds
jmp
subb
in
xor
imul
adc
lods
cmp
xlat
lock
jecxz
inc
daa
sbb
xchg
out
into
adcb
fimull
push
js
sub
dec
xor
ljmp
push
rorl
mov
bt
test
xchg
pop
cmpsb
adc
xor
pop
jl
orl
cmp
and
movlps
pop
mov
pop
pusha
cmp
int3
pop
xor
push
mov
and
and
dec
das
cmpsl
gs
mov
dec
add
mov
std
imul
movsl
mov
mov
and
xchg
mov
popa
orl
xor
ja
sub
aaa
dec
add
mov
out
xor
cltd
add
or
fs
in
mov
jecxz
xlat
mov
or
jo
sbb
mov
xchg
inc
fsubrl
lcall
shlb
pop
sub
cmp
arpl
sub
sldt
lahf
not
add
ret
push
mov
sub
out
call
or
xor
xor
pop
pop
mov
leave
cmp
mov
xchg
test
push
dec
mov
adc
pop
fwait
jne
lret
or
ss
ljmp
wbinvd
xor
mov
push
mov
jge
mov
push
ds
and
jg
sub
jns
mov
adc
push
int3
dec
pop
mov
fdivl
xchg
sti
and
mov
or
nop
inc
cmp
add
pop
jne
and
jge
adc
lret
jecxz
clc
ljmp
bound
in
popa
in
mov
imulb
sahf
pushw
in
ds
stc
mov
sbb
push
cmp
mov
scas
test
mov
and
and
adc
iret
add
std
xchg
std
sub
lods
add
iret
addr16
xor
stos
dec
fsubp
jle
pop
packssdw
int3
xor
jmp
sbb
cmp
fwait
add
push
push
lcall
testb
testl
jmp
adc
popa
gs
ret
rclb
push
insl
push
insb
repnz
jle
jne
lret
pop
push
lret
gs
xchg
adc
es
adc
testl
or
pop
xchg
mov
cmp
cmc
addr16
add
je
xor
jmp
ret
scas
add
daa
inc
or
push
push
xor
sbb
adc
pushl
jno
movsl
push
aam
adc
or
out
pop
gs
push
iret
cld
outsb
mov
mov
sti
bound
dec
jnp
xchg
lret
sbb
pop
sub
mov
adc
xor
ror
cs
mov
insl
adc
cwtl
gs
fdiv
out
add
pop
mov
jp
and
push
xor
nop
dec
out
xor
scas
lret
adc
xchg
adcb
cmp
je
mov
jbe
adc
movsl
cmp
fisubrl
insb
imul
pop
fimuls
out
inc
insl
push
in
xor
pushl
bound
sub
and
sbb
cmpl
out
add
inc
push
jmp
jo
and
and
mov
std
inc
mov
pop
movsl
inc
fimuls
push
loop
sub
push
movsb
or
pop
jae
das
pop
movsb
das
fistps
mov
push
xlat
jnp
popa
jmp
addb
xchg
andb
daa
jns
js
inc
and
or
mov
push
add
fcoml
inc
cmp
std
test
rorb
cld
xchg
inc
stos
enter
mov
jmp
cmpsl
dec
mov
add
pop
insl
push
jne
and
adc
cmp
jmp
pop
rorb
mov
mov
adc
xchg
shl
pusha
dec
push
add
jmp
cmpb
aas
not
jle
and
and
aaa
pushf
ret
sahf
or
sti
test
or
cmp
shlb
jae
stc
lahf
mov
pop
push
inc
popf
mov
je
mov
push
pop
pop
jge
gs
and
add
or
aas
andb
jle
call
lret
call
push
pop
dec
and
movsb
test
or
add
sub
or
repnz
insl
pop
movsb
mov
push
jo
lcall
int3
out
dec
mov
adc
pop
push
int3
pop
sub
in
sarl
inc
sub
pop
popa
outsb
das
pop
xchg
repz
pop
jle
and
fs
inc
add
push
mov
xor
pop
sub
clc
call
xchg
in
jmp
xlat
pop
mov
popa
push
push
push
push
daa
jmp
insb
or
add
or
add
mov
pop
push
pop
mov
inc
ret
mov
add
sub
rcrb
sbb
movsb
or
aaa
add
sahf
jae
xor
adc
and
jns
xchg
daa
push
adc
cmc
sahf
pminsw
xor
mov
pop
and
add
fiaddl
sub
mov
xorb
push
in
pop
adc
das
and
jne
dec
jo
aad
ljmp
mov
push
fbld
jmp
inc
fldenv
fistpll
int3
push
jmp
push
lea
sub
and
push
imul
push
gs
out
mov
pop
mov
dec
inc
arpl
pop
push
mov
fldl
out
add
jg
sub
shrl
push
dec
jp
stc
mov
pop
pusha
jmp
pop
add
gs
or
insl
inc
or
imul
sub
popaw
daa
or
stc
and
jmp
repnz
nop
adc
mov
test
lahf
mov
xchg
cwtl
xchg
sub
outsl
mov
dec
xchg
pop
cmp
lcall
xchg
jae
call
push
push
push
jmp
and
or
mov
adc
adc
add
adc
inc
popa
or
cmc
test
mov
or
cli
cmp
push
out
mov
jle
mov
je
and
mov
push
adc
out
inc
add
mov
xchg
imul
mov
scas
test
out
popf
push
and
idivb
call
out
xor
mov
push
ffreep
mov
les
jmp
pop
fnsave
mov
lock
fsubs
and
jns
ret
push
push
push
mov
and
fldt
add
sub
add
jbe
sbb
sarl
pop
push
pop
mov
cmp
mov
and
aas
jne
xor
out
jmp
pushf
mov
fdivr
icebp
xor
jmp
xor
push
aam
jae
in
mov
jmp
push
icebp
dec
jge
nop
jmp
push
or
jmp
pop
pop
sbb
push
and
stos
enter
xor
push
bound
jmp
pop
push
jne
add
xor
mov
stc
imul
testl
pusha
mov
pop
push
xchg
addb
push
mov
pop
cs
add
clc
xor
ret
in
push
dec
out
pop
or
and
repz
dec
mov
cmp
pop
call
insl
sub
pop
sub
push
pop
dec
add
jno
xchg
pop
cli
sub
jmp
ljmp
jmp
out
adc
sbb
rcrl
aas
add
testb
xchg
add
mov
sub
xchg
jg
xchg
xchg
frstor
notl
jle
aaa
lock
movb
mov
add
pop
xor
lock
aad
push
xchg
pop
xchg
lahf
rorl
push
fcomip
xchg
jmp
inc
adc
dec
popf
add
or
add
push
pop
mov
ds
mov
movsl
insl
aam
roll
sub
cltd
xor
jp
and
fldcw
push
push
jne
xor
mov
sub
mov
mov
out
in
out
mov
cmp
ds
inc
or
add
mov
insb
xchg
pop
lods
roll
lret
jae
stos
aaa
loop
push
pop
mov
push
push
push
mov
sub
add
mov
cs
xchg
mov
dec
mov
addb
pop
std
enter
ljmp
add
pop
or
rol
pop
jne
das
shl
add
push
push
add
jge
sub
sub
mov
sub
lea
fbstp
xchg
jmp
in
add
push
and
jle
add
rorl
or
enter
mov
mov
ret
outsl
stos
movntps
and
dec
int
and
cmpsl
inc
fisttpll
sub
mov
or
push
inc
andb
outsl
xchg
mov
nop
cmp
push
and
mov
jmp
scas
mov
pop
push
shll
sbb
or
jnp
push
jge
adc
cmpsb
orb
and
xchg
mov
icebp
adc
cli
mov
bound
jno
icebp
jp
and
add
jmp
pop
jmp
icebp
sti
push
psubusw
std
test
push
mov
je
popf
mov
dec
clc
test
mov
jno
enter
pop
push
lods
mov
loope
popf
add
or
pop
add
mov
call
movb
xor
jne
push
jo
pop
sub
push
pop
push
sub
mov
adc
mov
in
pop
pop
enter
dec
mov
insb
pop
inc
ss
adc
into
icebp
in
jg
and
nop
inc
push
pop
test
and
pop
dec
mov
mov
loopew
fs
scas
sbb
bound
sar
aas
loopne
push
cwtl
jmp
mov
pop
add
repnz
shr
adc
push
mov
or
sbb
or
push
movsb
jmp
xor
mov
mov
adc
orb
lods
jg
int
out
test
rclb
pop
adc
inc
shlb
daa
cmp
push
inc
subl
and
ja
fsts
and
mov
mov
fcomps
add
subb
mov
pop
xor
sbb
popf
jne
mov
mov
push
push
test
add
xor
ja
into
mov
jmp
nop
js
in
mov
fadd
jl
daa
aaa
ds
test
jle
ja
sub
add
fcomp
add
pop
mov
or
xchg
mov
mov
xlat
lahf
fmull
dec
pop
xlat
mov
je
fmull
push
sarl
call
cwtl
shrb
jp
inc
sbbb
shr
push
push
mov
imul
test
inc
aas
mov
adc
and
inc
add
jne
loopne
rcl
sub
ret
and
mov
je
pop
in
jae
dec
jno
add
sbb
lds
addr16
cltd
inc
push
jmp
neg
inc
cmp
icebp
outsl
orb
jno
cmpsb
inc
sbb
mov
pop
mov
js
mov
and
adc
pop
jne
mov
pop
xchg
cwtl
push
xchg
push
xor
cwtl
jnp
cmp
lcall
inc
dec
sub
cmpsl
aad
or
dec
or
out
filds
mov
fmull
ja
outsl
cmpl
sbb
inc
int3
and
nop
adc
jae
rcll
push
push
jp
pop
jmp
jmp
lds
gs
xchg
in
sbb
outsb
repnz
jg
into
dec
cmc
jb
mov
int
jns
push
dec
mov
xchg
cmp
add
jge
jmp
mov
add
clc
aad
cwtl
mov
xor
lret
cwtl
push
jmp
sbb
or
sub
mov
adc
mov
loopne
inc
xchg
xchg
cld
test
jbe
ret
and
and
and
rorb
call
pop
inc
or
pushf
sbb
cmc
in
out
clc
fwait
mov
ret
stc
xor
mov
mov
mov
rolb
or
test
pop
daa
gs
mov
insl
fs
dec
inc
out
or
pop
data16
mov
or
test
aaa
pop
cltd
dec
loopne
popa
stos
js
dec
add
cwtl
xor
push
rcr
cmp
pop
stc
outsb
lret
cmc
rclb
jp
adc
sub
leave
cmp
es
add
mov
cmpsl
sub
pop
jg
stos
mov
xor
xchg
mov
jne
mov
dec
sahf
jno
dec
adc
les
rclb
dec
add
adc
xor
push
dec
pop
and
or
lcall
push
adc
push
jmp
neg
mov
es
jns
das
lods
ljmp
jecxz
jmp
decb
adc
jns
popa
jl
cld
into
or
arpl
cmp
add
lahf
add
mov
xchg
add
lea
mov
in
sub
or
inc
sbb
mov
loop
or
inc
adc
push
outsb
adc
jle
sub
inc
jecxz
push
push
addr16
cmpsl
pop
int
rol
sbb
add
mov
pop
inc
xchg
add
stc
sbb
cmp
add
xor
sbb
pop
add
sub
mov
pop
pusha
cmp
lods
pop
fs
mov
imull
es
or
pop
dec
cmp
or
xor
mov
pop
pop
mov
andb
ret
xor
scas
sti
adc
add
xchg
add
hlt
or
incl
sbb
shll
pop
dec
aaa
add
into
outsb
cld
xor
test
js
outsb
lcall
lock
cwtl
dec
cli
pop
dec
fsubs
adc
add
sub
push
repnz
dec
push
lods
xor
cli
xor
jmp
hlt
lea
mov
pop
inc
out
sub
xor
adc
jmp
adcl
addr16
sahf
jnp
ficompl
lea
std
cli
xor
cs
xlat
adc
add
dec
add
stos
arpl
and
andl
int3
and
jmp
ds
lea
add
push
jmp
out
or
add
or
cmp
and
sub
jbe
mov
adc
lret
mov
jge
rcrl
mov
leave
push
mov
mov
popf
xchg
insb
dec
fstp
and
stos
xor
out
fdivl
sub
imul
or
sub
adc
ljmp
test
or
mov
sub
fcomps
pop
xchg
jno
cmp
hlt
fdivrl
jmp
in
jbe
rolb
add
push
jo
test
jl
push
in
es
mov
xor
xchg
sbb
lret
push
push
bound
pushf
nop
outsl
leave
lods
add
pop
pop
xchg
imull
shl
push
push
xchg
in
insb
imul
sbb
movsb
movsl
push
mov
cmp
mov
enter
cmc
push
movsb
jg,pt
mov
sbb
jecxz
into
ret
fistl
add
xor
stos
mov
cmp
add
adc
inc
cltd
ret
push
push
add
pop
cmpsb
push
inc
loop
or
dec
mulb
fadds
and
add
mov
inc
pop
ret
sbb
mov
pusha
lea
push
dec
fs
es
fstps
lret
xor
cmp
ret
add
test
xchg
sub
jg
test
popa
pop
shrb
xor
pop
loopne
cs
mov
decl
and
or
pop
subl
sbb
xor
sbb
repz
mov
mov
fdecstp
fcoml
test
sub
sub
xchg
jno
clc
in
and
push
push
add
data16
and
testb
ret
add
lahf
outsb
scas
mov
cmp
inc
js,pt
out
sbbb
jbe
repnz
in
inc
in
cmp
push
movl
pop
in
stc
jle
cmp
sub
push
push
jo
mov
xchg
push
negb
jno
mov
sbbl
dec
jno
daa
loope
mov
jmp
and
notl
add
std
test
les
cmp
and
push
jne
fwait
dec
pop
mov
jbe
int3
push
andl
push
or
and
push
mov
insl
lods
xchg
shr
dec
xchg
pop
test
pushf
out
sbb
jmp
xor
sub
inc
inc
cld
mov
add
rcrb
pop
push
xor
cs
ja
pop
push
push
ds
sbb
pop
mov
dec
cwtl
push
push
aad
mov
cmp
adc
mov
add
test
sbbb
jp
out
or
xor
ljmp
icebp
insb
push
cmp
in
sbb
dec
push
mov
rolb
inc
jg
dec
inc
xchg
pop
push
jae
or
add
xor
and
pushf
adc
arpl
jmp
adc
test
mov
cld
mov
mov
clc
mov
stos
cmp
mov
lahf
push
jae
cmc
divl
dec
or
mov
sub
lret
push
add
xchg
imul
xorb
loop
ret
jl
push
jge
ret
cmpsb
push
xchg
or
pusha
jl
ja
test
mov
mov
mov
push
jb
mull
adc
mov
scas
or
lea
shr
cld
and
pop
outsl
jmp
repz
jne
jmp
cmpsl
or
lea
sahf
push
pop
repz
cmpsb
int
out
push
test
adc
or
pop
jns
jmp
xchg
push
pop
or
jg
test
ret
push
sbb
adc
add
andb
mov
dec
rcrl
inc
add
je
imul
das
dec
lahf
pop
adc
dec
or
pop
add
aas
xchg
xor
adc
xlat
mov
xlat
insb
jp
add
addl
rolb
roll
stos
mov
dec
sub
hlt
ret
lods
push
sub
call
push
ret
enter
push
push
mov
and
cmpb
xchg
clc
add
sti
rorb
movsb
xor
sub
add
mov
mov
movsl
insl
add
pop
loopne
push
push
dec
pop
dec
jmp
push
pop
push
pop
push
dec
imull
or
sub
out
mov
ja
sahf
outsl
ljmp
push
dec
dec
leave
and
loop
movsb
xor
mov
pop
adc
mov
pop
loopne
daa
pop
outsl
ljmp
and
adc
mov
xor
pop
or
xchg
sub
inc
pop
pop
xor
hlt
push
cli
push
sub
xchg
push
dec
add
or
adc
fnstsw
sbb
jne,pt
jge
lds
subl
cwtl
cmp
push
rcrb
and
mov
pusha
sti
xor
stc
imul
sub
xor
testl
stc
ja
shl
push
ljmp
jno
outsl
loope
jp
stos
or
and
ret
mov
es
xchg
sub
xchg
les
cmp
pop
sub
leave
sub
adc
sbb
mov
xor
mov
aaa
dec
add
xlat
movsl
iret
inc
cltd
inc
ja
dec
cli
xchg
mov
or
dec
stos
fisttps
lods
pop
xchg
and
lds
xchg
cmc
loop
imul
fnstenv
movsl
push
repz
and
push
sub
and
jl
mov
jno
jnp
sub
pop
daa
je
pop
lahf
iret
mov
sbb
mov
xor
lock
or
pop
dec
mov
mov
and
jle
push
movsb
lods
ret
dec
add
mov
lcall
adc
fs
inc
repnz
cld
mov
sbb
jge
push
test
add
jns
push
mov
push
cmpsb
push
lret
shr
add
test
mov
pop
fcompl
xor
or
inc
pop
pop
push
mov
daa
adc
mov
incb
fildl
outsb
loop
push
push
insb
push
pop
or
sbb
pop
stos
sbbl
popa
push
jae
add
insl
sub
ljmp
mov
cmp
fisttps
xor
lods
add
lods
push
jmp
sub
pusha
les
stos
lret
adc
shl
stc
xchg
fs
stos
pop
int
das
or
pushf
xchg
das
sub
iret
bound
js
push
add
jmp
pop
mov
mov
lret
int
xor
xor
xchg
incl
cmc
in
and
icebp
lret
xchg
dec
jo
xor
std
lcall
jb
pmullw
insb
cmpsb
imul
jle
mov
jne
lds
sarb
stc
inc
inc
es
xchg
push
sub
add
loopne
ret
lock
or
clc
sub
mov
das
sbb
dec
in
jne
dec
or
dec
je
add
sti
add
pop
sti
mov
dec
loopne
sbb
mov
inc
adc
sub
dec
sub
inc
push
dec
repnz
add
jne
aaa
dec
or
pop
nop
stc
xor
jae
inc
and
sub
or
cld
or
add
pop
inc
mov
mov
cltd
mull
jl
or
add
in
adcb
push
negb
dec
flds
std
push
sub
dec
stc
std
cltd
jne
fldt
nop
ss
add
add
inc
jmp
je
fcomps
mov
adc
cmc
shll
iret
in
sar
insb
mov
fadd
inc
pop
pusha
cmp
push
and
pushf
mull
ljmp
or
test
mov
loopne
adc
sub
dec
js
mov
fdivrs
jle
scas
mov
inc
dec
xchg
pop
addb
sbb
add
or
or
divl
pop
call
divl
jl
leave
nop
push
push
js
enter
jmp
push
pop
clc
test
popa
cmc
mov
aam
mov
addl
jae
pop
ret
push
daa
je
or
pop
push
cmp
lret
jo
icebp
inc
nop
cmp
inc
jl
pusha
stos
in
sub
mov
mov
or
stos
bound
popw
xchg
ljmp
dec
jo
dec
addr16
jg
xlat
or
xchg
es
popf
mov
sub
ret
fistps
mov
cs
and
fnsave
mov
cmp
add
cwtl
rorb
add
test
sub
loopne
inc
jmp
xor
inc
and
pop
jp
std
test
loope
out
cmp
or
pop
pop
add
add
mov
dec
add
orb
sub
jmp
scas
daa
mov
fsubrl
and
push
iret
subl
jae
mov
sahf
push
fidivl
add
lods
mov
pop
sub
nop
inc
pop
mov
jmp
mov
rcrb
jo
lods
or
pop
ja
mov
xchg
mov
sbb
loope
jns
pop
dec
pop
cld
inc
pop
call
pushl
jmp
scas
ret
lea
mov
inc
jae
xchg
orl
cmpb
test
lock
out
add
and
loop
push
xchg
enter
dec
sub
pop
sbbl
sub
dec
movsb
shll
xchg
daa
aaa
dec
cld
test
into
and
js
mov
xor
lcall
outsb
nop
add
jle
push
sub
add
pop
mov
xor
pop
ljmp
mov
dec
mov
jp
inc
repnz
mull
jmp
lea
add
dec
inc
adc
push
gs
add
mov
sub
daa
or
push
adc
lock
cmpb
in
pop
scas
sub
lods
sbbb
sarb
dec
pusha
int3
adc
aad
ds
gs
jecxz
sbb
mov
cli
xor
sbb
ljmp
ljmp
jmp
dec
adc
mov
lods
inc
and
sub
push
bound
add
stc
xchg
add
ret
popa
fucomi
sahf
add
and
ljmp
cmp
shll
xchg
fstpl
sub
mov
push
lock
xlat
adc
scas
test
int
loopne
movsb
lahf
lcall
inc
mov
pop
jmp
adc
jmp
cli
jne
cmp
push
inc
sbb
mov
xor
sbbb
test
inc
xor
leave
into
mov
not
or
push
pop
insl
pushf
mov
cmp
cmp
push
push
fsts
inc
jb
push
out
adc
xchg
adc
mov
add
les
rcrb
mov
movhps
mov
bound
inc
insb
clc
xor
repnz
jns
add
data16
sub
pop
mulb
ss
clc
outsl
pop
and
rol
nop
aam
and
mov
pop
outsl
pop
push
mov
xor
or
or
jo
push
je
add
std
std
jbe
sub
push
insb
ret
pop
xchg
xor
gs
aam
or
jg
ud2
sub
popa
bnd
sub
testl
cmp
xchg
cmpsl
or
add
jnp
or
movsl
mov
loopne
ret
add
sbb
or
pop
addb
ds
mov
arpl
add
and
and
or
std
xchg
cs
jp
sub
in
add
lret
roll
jo
cmc
push
ret
mov
shl
and
sub
pop
fiaddl
dec
aam
daa
jge
mov
or
dec
daa
jmp
sbb
test
imul
pusha
sbb
jle
adc
and
test
loope
or
pop
inc
or
adc
lahf
or
leave
fs
pop
xchg
test
or
push
push
mov
or
shr
dec
xor
std
lahf
adc
icebp
push
push
xor
outsl
popf
jae
lods
lahf
or
add
cmp
jl
stos
adc
and
or
pop
aad
jo
inc
and
sbb
mov
jmp
lgs
lock
pop
push
les
mov
pop
fmuls
xor
jp
adc
jmp
fstl
addr16
lahf
and
sbb
mov
dec
jg
sub
mov
and
pop
add
adc
divb
dec
mov
pop
push
mov
mov
mov
jno
cli
and
pop
imul
jle
mov
lock
dec
push
orb
gs
sbb
call
jbe
inc
add
out
hlt
xchg
adc
sbb
push
scas
cmp
inc
pusha
inc
adc
orl
push
push
subl
js
pop
mov
adc
pusha
inc
hlt
cmp
pusha
jae
cmp
int
jmp
out
pushf
sbb
adc
adc
into
dec
test
sub
mov
mov
mov
mov
frstor
insl
sbb
mov
test
and
cmpsl
push
in
cmp
rolb
rcl
push
pop
lock
cltd
or
mov
pop
jbe
or
pop
dec
pop
and
mov
xor
and
sbb
cmp
pop
or
fldt
dec
push
cmp
xchg
inc
xchg
jmp
push
pop
mov
add
xor
ds
stos
fwait
aam
into
mov
mov
sti
inc
push
sbb
mov
insl
fnstenv
inc
jmp
or
cmpsl
jns
and
pop
jae
gs
iret
jle
mov
push
mov
sub
push
bound
inc
xchg
arpl
dec
dec
mov
nop
inc
xchg
xchg
dec
loopne
adc
jp
shlb
add
fs
cli
jle
pushf
push
xchg
mov
cmpsb
jmp
out
rcr
sarl
test
adc
idivl
add
or
es
mov
roll
cmp
mov
test
lahf
inc
loope
dec
clc
push
and
mov
arpl
mov
ss
adc
xor
lret
cmp
pop
shl
shl
cmp
add
sub
cmp
loope
jmp
sub
mov
rorb
cli
mov
clc
jnp
pop
add
sti
add
stos
in
imul
add
inc
arpl
rorl
sub
jnp
call
mov
pop
idiv
add
bound
mov
add
mov
inc
cmp
cli
addb
xor
outsb
test
pop
test
cmp
dec
lret
loopne
jp
ret
push
cmp
sti
call
adc
pusha
cmp
xchg
cmp
push
adcb
or
outsb
ret
pop
jmp
inc
adc
out
adc
pop
xchg
add
cld
add
leave
testb
and
roll
pop
cmpb
sub
test
cwtl
xor
leave
adc
dec
lret
mov
sub
ffreep
pop
ds
ljmp
adc
adc
addb
cmp
push
in
adcl
ljmp
out
out
or
aad
fadds
lods
jo
test
pop
push
push
lcall
imul
push
dec
mov
int3
add
or
jecxz
adc
and
ds
das
fsubrl
pop
xor
push
and
inc
repz
repnz
lret
jno
cmpsb
shr
and
mov
xchg
icebp
push
adc
add
arpl
jle
aam
cmp
bound
js
pop
or
push
add
fistps
or
jge
xor
inc
push
jno
push
mov
mov
jnp
push
cld
jb
mov
mov
filds
cmp
je
add
mov
jle
ret
and
test
pushf
stos
cmpb
add
cmp
pop
push
pop
inc
or
clc
add
loop
adc
or
push
add
jl
or
fnstsw
mov
mov
ss
neg
jmp
inc
adc
inc
popf
and
mov
adc
fadds
ss
call
push
mov
shl
push
pusha
jno
enter
add
mov
mov
and
icebp
mov
xor
popw
fsubrp
test
cmp
fsubrl
push
bound
xlat
dec
aas
in
imul
jmp
into
add
xchg
push
xchg
aaa
not
or
int
push
mov
data16
sbb
ss
lret
lds
roll
stos
push
mov
pusha
xlat
inc
shlb
sbb
arpl
call
cmp
movsb
push
push
cli
daa
push
dec
sbb
fcompl
cwtl
sbb
dec
dec
push
cli
in
addb
adc
mov
cld
repz
jp
add
sub
jmp
xchg
add
xor
jmp
call
cwtl
dec
jb
mov
push
jmp
les
movsb
lds
fwait
mov
sbb
ljmp
xlat
insb
out
mov
push
js
ds
insl
or
dec
add
push
sub
add
lods
xor
or
fadds
cmp
or
test
jae
add
daa
les
adc
sbb
mov
cltd
or
pop
dec
test
adcb
mov
or
mov
jb
jle
mov
sbb
mov
mov
pop
jb
cmp
cli
outsl
lret
push
and
addb
jnp
out
ljmp
orb
push
sbb
call
jnp
mov
mov
or
rcr
cmp
rol
and
sub
pop
popl
aad
push
int3
sub
cmp
xorb
pop
and
sbb
mov
jno
notb
in
jmp
idivb
add
xchg
mov
sub
cmp
mov
popf
fimull
adc
xor
fisubrs
xor
inc
es
or
repnz
mov
pop
sub
mov
inc
jb
or
inc
push
jo
sti
and
pop
into
pop
mov
popa
bound
mull
pop
jle
push
std
push
cmpsb
leave
icebp
cmc
inc
jmp
inc
or
jns
cld
cmp
es
add
lock
jl
pop
xor
test
pop
aad
pop
inc
sbb
dec
dec
inc
sbb
repz
pop
xor
mov
jmp
scas
ja
shl
ja
repz
sbbb
aaa
cmp
sub
push
in
push
push
add
cmpsl
paddsb
or
scas
mov
push
pop
push
lret
cmp
fidivrl
and
inc
or
aas
cwtl
popf
mov
and
pop
leave
mov
pop
jno
pop
push
fdivs
imul
or
les
mov
jmp
push
jae
push
shll
scas
and
sbb
pop
or
pop
lret
out
sub
aam
sub
stc
mov
in
loope
xor
loopne
push
jne
out
xchg
pop
pop
in
jnp
jge
add
cmp
mov
and
pusha
repz
add
jns
int3
mov
add
push
xchg
mov
mov
sahf
mov
bound
test
adc
jnp
mov
inc
dec
aaa
adc
insl
inc
mov
and
jp
in
rcll
pop
mov
out
xchg
andb
push
push
xchg
movsl
jb
nop
and
add
jle
sub
jb
xchg
outsl
lahf
aam
mov
std
mov
inc
add
call
mov
or
shr
ret
cmc
test
icebp
xor
add
mov
push
xor
hlt
push
mov
dec
lahf
fs
jl
xchg
cs
das
decb
add
sub
jmp
xchg
jle
cltd
in
pop
nop
xchg
xchg
jo
and
icebp
pop
add
mov
popa
mov
imul
adcb
mov
push
pushf
inc
inc
xchg
fld
and
shlb
pop
mov
int3
push
stos
add
cmp
jns
xchg
or
sbb
test
ljmp
mov
pop
jmp
aas
lret
jmp
daa
jg
popf
rolb
lret
mov
pop
pop
mov
sub
mov
in
add
jg,pn
or
push
andb
add
loope
imul
jp
stos
inc
orb
aaa
xchg
push
add
neg
push
dec
pop
pushf
ljmp
mov
les
adc
mov
outsb
pop
mov
outsl
adc
xor
adc
mov
mov
inc
cltd
mov
add
pop
jl
daa
enter
pop
addb
sub
jge
fisttpll
sub
ja
outsb
outsl
mov
jb
in
stos
sbb
subb
mov
jmp
nop
jne
aaa
jl
sub
dec
jmp
jno
in
aad
out
pop
adc
or
loop
mov
mov
and
mov
testb
lods
add
rorb
cmp
arpl
scas
push
push
sub
jp
pop
pop
add
pop
rclb
xorl
and
push
push
pop
bound
or
sub
stos
jge
jle
push
lcall
and
mov
or
popl
rorl
push
fs
push
pop
push
pop
jmp
jmp
es
gs
inc
pop
out
dec
dec
ffreep
push
insb
push
sub
mul
nop
dec
mov
aam
lods
cwtl
wbinvd
test
sub
pop
or
jge
xor
or
ds
adc
dec
mov
add
daa
aas
mov
add
out
dec
mov
sbb
ds
repnz
pop
push
mov
repz
cmc
adc
jae
push
mov
sub
jl
leave
push
sub
ret
adc
pusha
shll
adc
dec
push
sbb
shrb
push
scas
sub
fwait
sahf
ret
and
sub
test
into
pop
cmp
lret
std
sarb
add
jmp
pop
int
xchg
ss
add
cmp
add
jecxz
sbb
imul
nop
lcall
mov
test
outsl
stos
in
jecxz
add
std
stos
popa
orb
jmp
lods
add
pop
mov
adcb
or
mul
pop
pop
inc
cmp
push
adc
xchg
pushl
sbb
mov
outsl
xor
lods
outsl
loopne
out
es
out
sbbb
sub
je
xchg
add
or
jbe
push
jg
push
push
push
rcr
jae
pop
sbb
out
les
add
mov
outsl
clc
ror
insl
rorb
adc
dec
dec
int
cs
mov
and
dec
pop
mov
pusha
cltd
imul
stc
test
sub
fildl
sub
cmc
sbb
out
lock
cmp
lret
stc
add
pop
mov
pop
nop
jmp
or
cmp
sbb
mov
imul
idivb
inc
sbb
jmp
pinsrw
stos
testb
subb
jae
arpl
pop
in
jb
push
sub
or
ret
ficompl
cvtps2pi
push
jmp
clc
jne
push
pop
mov
pop
scas
xor
add
dec
repz
pop
mov
das
ja
push
mov
dec
mov
popa
and
cmpsl
lcall
cmpsl
push
adcl
scas
test
movsb
loopne
jb
adcb
sbb
leave
out
lahf
xchg
push
mov
enter
add
std
xor
enter
pop
push
lahf
pushf
dec
outsb
add
xchg
fcomp
push
jmp
dec
iret
push
mov
shll
push
das
xor
out
sub
or
pop
mov
sbb
cmpsb
jae
loop
pop
lret
inc
adc
jo
mov
mov
movl
sarb
subl
sahf
fs
ja
outsb
aam
xchg
rorl
sti
cmp
mov
xlat
mov
clc
fs
vminss
dec
cmc
cmpsb
adc
cmc
sbb
pop
daa
pop
cmp
xchg
jge
mov
adc
ret
xchg
rcrl
inc
xchg
mov
sti
ficomps
out
mov
xchg
cli
inc
popl
mov
or
xor
loopne
mov
cmpsb
fbstp
out
jmp
or
and
sub
push
mov
sbb
or
ja
mov
loop
dec
addr16
xchg
mov
push
repz
adc
sub
xor
or
scas
inc
insl
jns
add
clc
adc
rolb
sub
pop
sub
hlt
mov
dec
mov
push
in
repnz
cli
pushf
daa
or
adcb
or
or
mov
xor
hlt
adc
sahf
xor
std
lret
shl
outsl
adc
repz
fwait
jae
push
add
add
mov
outsl
xchg
js
and
mov
mov
jmp
mov
jnp
sub
push
sti
jb
sbb
rclb
push
out
inc
jl
push
push
test
loopne
sub
sbb
das
loop
aad
push
mov
addb
mov
addb
or
gs
pop
pop
rol
adcl
aas
movsl
and
loop
in
insb
mov
pop
pushf
aam
scas
adc
sub
fdivs
jno
ret
cmp
cmp
lret
aam
sub
or
sbbb
rcl
and
ds
sub
insb
lods
std
dec
mov
scas
pop
mov
pusha
arpl
aad
je
inc
jo
imul
dec
nop
gs
xor
and
cmp
out
roll
and
dec
sbb
adc
push
sub
pop
add
orb
mov
and
push
jae
sbb
sub
pop
and
adc
loopne
or
adc
sahf
push
cmp
nop
js
ss
add
push
jl
xor
jno
xchg
cwtl
insl
lods
jnp
pop
pusha
or
andl
adc
push
push
mov
xor
or
cltd
sub
mov
jo
adc
outsl
dec
or
adc
popa
jmp
out
mov
mov
rcll
push
sbb
add
loopne
sub
jge
mov
xor
jmp
push
or
add
mov
or
ljmp
mov
xor
rorb
das
roll
xor
das
push
iret
ret
push
mov
ficomps
aaa
popa
jecxz
aas
mov
mov
or
cs
ljmp
popf
movsb
hlt
cmpb
pop
inc
pcmpgtb
inc
pop
adc
clc
push
int
movsl
adc
sub
push
jecxz
fld
std
xchg
test
jo
jmp
push
push
push
outsl
adc
mov
pop
popa
add
mov
mov
and
add
cmp
xchg
adc
mov
or
adc
mov
js
and
push
test
pop
mov
sahf
mov
scas
ja
mov
mov
icebp
cmp
lahf
das
mov
mov
or
cmp
pop
shrb
shlb
mov
pop
or
nop
sub
fidivrl
mov
jmp
lahf
shlb
mov
sub
shrb
mov
and
outsb
add
sbb
gs
clc
add
add
scas
or
lds
sub
ja
or
jbe
jo
cmp
add
and
ret
push
or
inc
cwtl
pop
cmp
or
mov
dec
call
cld
sub
jo
adc
jnp
shr
xor
mov
aas
int
in
sbbb
bound
movsb
sbb
movsl
jg
jne
xor
mov
pop
mov
and
std
sbb
vpaddb
mov
loope
dec
xchg
cs
mov
add
mov
enter
and
ficoml
out
jns
jae
orb
and
jp
mov
pop
hlt
pusha
add
out
sbb
es
xor
fucomp
repnz
sub
adc
shrl
pop
dec
jg
aam
bound
xchg
addl
add
or
sbb
cltd
mov
add
mov
testl
push
jl
cmpsb
pop
jmp
or
push
xor
xchg
insb
inc
xchg
pusha
js
pop
sbb
pop
xor
rcrb
push
pop
mov
xchg
mov
jns
test
test
repnz
pusha
in
xor
push
ja
dec
mov
ja
xor
dec
sbb
rolb
stos
dec
add
and
mov
or
dec
lods
repz
pop
jge
inc
daa
adc
jbe
ret
and
mov
dec
push
push
in
lds
popa
sahf
xchg
pop
and
stc
or
jp,pt
dec
xor
dec
sti
sub
xor
insl
sbb
rcrb
xchg
jge
popa
jno
xlat
jno
xor
jo
mov
fdivs
dec
jmp
pop
push
shlb
loope
hlt
push
iret
xor
mov
test
sub
or
cmc
fdivrs
popf
inc
xchg
scas
idivb
ret
cli
out
push
xor
test
adc
gs
mov
stos
bound
push
mov
jle
mov
jo
fists
mov
mov
dec
rcl
adc
jp
add
jne
jo
imul
xor
mov
pop
sbb
daa
out
test
cmpsl
xor
mov
not
dec
push
out
ss
std
outsl
movsl
adcb
lcall
sub
push
mov
add
cli
and
sub
and
dec
xchg
movsb
fmull
lods
and
ja
pop
inc
lods
lret
inc
or
adc
mov
xor
or
inc
push
or
sbb
or
adc
jmp
dec
xchg
adc
xor
lods
scas
add
mov
lock
jmp
mov
and
jmp
add
cmp
sarb
daa
mov
and
mov
mov
sahf
dec
lods
int3
add
mov
sub
pop
adcl
ret
or
push
idiv
push
mov
outsb
mov
stos
pop
in
sub
icebp
and
add
cmp
es
or
sbb
adcb
mov
push
push
das
add
pop
ds
bound
mov
mov
fisubrl
fs
loope
insb
pop
push
adc
arpl
popa
sub
xchg
cmp
ret
mov
mov
mov
sub
out
mov
push
xchg
adc
dec
std
inc
add
stos
push
jp
or
sub
xchg
test
cmc
dec
and
fdiv
adc
push
mov
mov
cmp
mov
mov
xor
rclb
cld
mov
pmaxsw
sti
movzwl
mov
add
shl
adc
mov
aam
in
inc
popf
adc
sub
jmp
mov
jp
mov
sub
pop
or
dec
inc
xlat
inc
mov
arpl
mov
mov
jae
pop
xlat
scas
cmp
pop
push
push
add
mov
jle
push
in
sbb
jg
shl
cs
mov
or
fisubrl
cltd
jge
loopne
pminsw
xchg
pop
cmpb
dec
or
icebp
jns
frstor
push
pop
das
int3
jecxz
and
adc
das
dec
jge
sub
pop
shll
cwtl
inc
adc
movsb
sub
adc
xchg
neg
rorl
in
and
and
dec
sbb
pop
std
jmp
in
addr16
js
add
dec
mov
xchg
pop
mov
popa
imul
fcompl
cli
ja
ret
fldl
push
adc
xor
push
sub
jmp
add
sarl
push
cmp
repz
mov
scas
stc
pop
lea
cmp
pop
xchg
faddl
sahf
ja
mov
out
push
adc
push
and
inc
mov
cmp
xchg
out
mov
rcrl
add
cwtl
pop
xor
andb
jns
popf
push
pop
shrl
push
jb
adc
icebp
jnp
sti
pop
mov
les
pop
mov
xchg
sbb
jmp
pop
jle
cmp
loope
shrl
rcl
add
push
and
fs
pop
add
cld
push
andl
cmp
sub
add
pop
jbe
lret
fsubs
xchg
pushf
sub
out
ljmp
jp
push
jmp
ljmp
enter
push
mov
dec
push
incb
popa
add
jmp
mov
inc
lods
aad
push
xchg
or
aad
mov
pop
rorl
jecxz
mov
push
jns
pop
enter
jg
decb
dec
push
fistps
lds
xchg
push
ds
and
add
das
es
add
fs
rclb
les
inc
or
mov
cmp
subb
int
cs
add
jmp
fs
sub
sub
add
add
lds
stos
dec
xlat
push
cmc
scas
int
dec
jbe
fsubrs
pop
jb
movswl
mulps
pop
outsb
mov
iret
push
jae
ret
or
neg
shr
mov
clc
pop
add
loopne
je
in
cs
dec
xchg
imul
pushf
xchg
cmp
pop
push
jb
jmp
dec
inc
jns
ja
enter
xlat
push
scas
adcl
movl
mov
push
push
imul
inc
and
es
dec
clc
inc
shrl
addb
and
inc
mov
jle
fists
les
xor
add
add
test
adc
popa
mov
xor
mov
cli
daa
faddp
int3
pop
adc
jno
jnp
popl
lret
or
dec
sbbb
mov
movsb
mov
add
out
in
jno
pop
jmp
dec
sahf
dec
lods
push
and
pop
test
and
lahf
dec
icebp
push
add
mov
pop
loopne
mov
push
nop
adc
add
xchg
mov
add
int
push
mov
xchg
cmp
sbb
mov
dec
cmp
cli
add
je
jmp
out
add
test
sub
pop
sub
sbb
push
inc
ljmp
cmp
daa
or
dec
adc
push
xor
insb
push
jne
jb
or
pop
mov
adc
aaa
or
xor
mov
xor
push
flds
pop
lret
adc
xchg
pop
xchg
cli
js
lahf
mov
mov
test
mov
dec
nop
pop
lret
sbb
xchg
loop
sbb
out
fildl
mov
add
xor
cmp
outsl
sub
pusha
fisttpl
push
mov
mov
pop
mov
adc
xor
sbb
and
inc
hlt
push
icebp
xor
cld
loopne,pn
pop
cmp
lret
xor
jo
fiaddl
adc
sub
stos
push
push
jno
rcrb
mull
arpl
push
scas
mulb
inc
adc
popf
clc
test
ja
mov
adc
inc
xor
xchg
cmc
add
adc
xchg
inc
ss
adc
pop
sub
and
pop
xor
lock
xlat
dec
lods
jecxz
call
jo
pop
push
popa
xchg
cmp
inc
dec
inc
fadds
test
or
add
mov
jns
push
fmul
daa
sub
mov
dec
int3
test
divl
sar
push
mov
pop
sub
movb
sbb
cs
xor
cmp
push
es
lock
sbb
clc
jmp
jmp
stos
imul
jbe
sub
adcl
pop
xchg
inc
adc
mov
dec
setbe
icebp
push
cmp
cmp
mulb
adc
and
add
repnz
inc
jg
or
test
mov
add
mov
cltd
dec
lock
out
push
jne
out
pusha
pop
mov
lret
adc
dec
insb
adc
push
sbb
lock
or
or
pop
sub
in
dec
loopne
push
lds
cld
or
pop
cmp
mov
sub
push
repz
jmp
daa
pop
dec
mov
enter
hlt
lcall
test
in
and
mov
cmp
icebp
sub
stos
adc
dec
int
ret
pop
push
clc
iret
add
std
lock
aaa
nop
pop
or
xchg
jnp
add
cld
mov
aad
cld
jbe
enter
mov
xor
xchg
jp
rol
xor
mov
mov
mov
sbb
inc
test
sbb
inc
adc
inc
pop
neg
dec
in
sbb
mov
fstl
push
xchg
dec
or
mov
ja
lret
pop
ret
repnz
pop
pop
mov
jmp
or
jbe
pushf
mov
push
push
cmp
vphsubwd
push
fisttpll
pop
pop
jns
incb
imul
sbb
and
pushf
jle
sub
add
xlat
adc
scas
sub
fsubr
mov
sbbl
push
movsb
sub
fs
bound
or
mov
push
mov
jg
sarl
cli
jle
imul
fildll
imul
out
mov
pop
orb
cmp
cmp
cwtl
sbb
xlat
push
in
popf
dec
les
xor
sbb
mov
push
xchg
std
ljmp
pop
enter
repnz
pop
pop
fsubrs
inc
test
outsl
or
repnz
inc
loope
fdivs
cmp
mov
and
pop
fs
or
loop
and
fs
and
imul
std
outsb
je
outsb
bswap
and
adc
icebp
enter
call
testl
mov
and
fcoms
push
jmp
ja
inc
rorb
jmp
das
sub
aam
cmp
popa
gs
sub
pop
outsl
orl
es
loopne
mov
in
jne
push
fs
movsl
iret
mov
xchg
jge
aas
inc
pop
clc
mov
adc
and
or
iret
pop
lods
decb
inc
repz
inc
add
jno
inc
and
stos
rol
dec
loope
push
mov
xor
insl
push
test
xchg
int
cs
sub
sub
push
push
mov
push
and
addb
push
jmp
fidivs
mov
pop
xchg
addr16
mov
das
add
cmc
jmp
cwtl
hlt
stc
mov
out
in
dec
test
bnd
mov
add
cmp
jl
push
push
xchg
dec
insl
xorl
cld
inc
das
loopne
fsubs
clc
rorb
jne
fistps
push
jle
dec
testb
mov
mov
xor
lahf
bound
push
mov
pop
in
xchg
jne
push
or
mov
push
fs
les
loopne
dec
pop
imul
or
cmp
jmp
cmp
jmp
inc
push
clc
dec
dec
mov
aam
test
stos
test
stc
add
push
shll
xor
leave
mov
mov
fwait
xorb
adcb
mov
xlat
or
mov
xor
mov
sbb
sub
loope
inc
xchg
ja
and
jg
rolb
sbb
cmp
rolb
inc
add
out
push
and
into
insb
dec
sub
jo
add
sbb
insb
dec
xor
sub
mov
mov
hlt
inc
sbbb
jo
ds
inc
or
mov
sub
fdivrl
repnz
jnp
push
or
es
push
sub
add
pop
shl
loopne
popa
inc
add
adc
pop
mov
iret
inc
stos
push
push
push
dec
aam
mov
insb
ds
push
neg
aad
mov
push
push
clc
add
hlt
inc
and
dec
pop
push
push
cmp
lock
mov
hlt
inc
sarl
icebp
mov
inc
mov
out
dec
das
in
mov
xchg
dec
iret
adc
adc
repnz
dec
inc
test
mov
xchg
dec
push
xchg
or
gs
jg
into
xchg
fisubrs
sbb
cli
mov
or
jle
shr
push
insb
inc
xchg
xchg
push
or
xchg
clc
mov
xor
pop
neg
call
add
cltd
add
jmp
and
or
cmp
adc
mov
push
in
cmp
pop
pop
push
out
std
out
and
cmp
js
jo
push
fstl
hlt
add
mov
les
xor
fsubr
cmpsl
loopne
lods
dec
add
or
test
pop
adc
inc
or
mov
cmp
mov
cmpsl
mov
or
dec
daa
push
mov
or
mov
cmpsl
or
cmp
and
add
mov
ret
push
adc
int
pop
pusha
push
popf
test
lods
push
add
imul
pop
and
bound
dec
xchg
mov
mov
mov
jge
dec
das
das
aaa
mov
int
pop
push
jnp
inc
or
cmc
xchg
xor
mov
inc
insb
dec
leave
call
pop
pop
cmpsb
pop
daa
out
and
pop
lahf
fstpt
pop
xor
xor
xor
push
mov
sbb
xchg
xchg
out
xchg
jge
xchg
and
xchg
and
int
lods
cmp
push
xor
icebp
ret
inc
out
cwtl
repnz
dec
xchg
rclb
adc
add
or
ljmp
sub
pusha
lret
ds
lahf
ret
jno
dec
icebp
adc
pop
cmp
and
xchg
imul
leave
xchg
loopne
popa
push
pop
sub
mov
pop
in
inc
div
xchg
push
pop
mov
jg
das
dec
xor
jmp
iret
sub
inc
cmpsl
mov
rcr
cmp
jmp
or
scas
ss
sbb
dec
mov
mov
std
daa
ss
cmp
inc
jmp
pop
fidivrs
je
vpunpcklbw
orb
or
ja
out
call
maxps
add
jg
and
dec
std
shrl
lret
insl
fs
push
or
jno
jo
add
int3
or
je
and
xchg
mov
xor
aas
cmc
mov
loop
sub
scas
cmp
push
jne
das
cmpsb
mov
arpl
push
mov
fdivrs
nop
mov
mov
lret
rcrl
out
add
and
or
xor
pop
or
loopne
cmp
push
pop
hlt
or
jo
pop
negl
outsl
xchg
jns
pop
outsb
push
fldt
or
cwtl
movsl
push
pop
mov
fistps
ds
add
mov
adc
inc
or
adc
inc
adc
loope
mov
lret
and
ljmp
das
stos
sub
out
or
inc
orb
sub
into
shrb
push
add
jmp
in
sub
adc
pop
shlb
dec
int3
pop
idivb
mov
inc
adc
add
nop
daa
lods
push
std
fldl
add
dec
pop
pop
fldenv
mov
rcl
lods
jo
cmp
jmp
fisubrl
push
clc
scas
xor
mov
loopne
test
scas
and
push
xchg
adc
mov
lcall
sbb
or
in
pop
out
dec
jmp
iret
mov
push
lods
sub
std
inc
cmp
iret
mov
add
cmc
fdivs
or
fucomip
add
cmp
mov
push
pop
lret
jmp
cld
mov
or
ja
ljmp
repnz
xchg
ds
pop
mov
jge
jo
dec
cmp
out
push
arpl
sbb
or
add
pop
jne
movsb
dec
cmpl
aas
dec
dec
jecxz
fs
mov
push
mov
rorb
sub
jns
cli
orb
cmp
sub
mov
jmp
xlat
mov
js
addr16
icebp
add
out
sub
jns
or
pop
dec
std
gs
or
xchg
je
inc
sub
adc
adc
pusha
cmpsb
in
mov
jmp
pop
test
sub
pop
ret
adc
or
jnp
outsl
rorb
andl
jp
push
mov
not
or
pop
xor
hlt
leave
add
cli
dec
mov
jo
fsubrs
in
dec
pop
mov
fmul
pop
sbb
jecxz
sbb
cli
pop
aam
cmpxchg
mov
inc
jo
xor
movsl
push
imul
xchg
mov
and
inc
mov
testl
add
push
sub
rorb
sub
test
aaa
sahf
ja
daa
push
inc
das
or
cmc
mov
mov
aam
mov
jp
push
push
loopne
insl
or
cmp
sbb
push
jl
sti
je
add
push
push
and
jne
or
clc
addr16
mov
les
cmp
xor
je
pop
push
push
rcl
hlt
fmuls
jmp
xchg
pop
inc
mov
jb
mov
cmc
insb
inc
or
lahf
add
mov
add
sub
adc
fistps
xor
ljmp
test
push
leave
aaa
stos
nop
xchg
inc
push
das
shlb
or
xorl
or
sbb
enter
adc
sub
pop
pusha
nop
push
add
idivb
pop
mov
inc
inc
int3
outsb
fnstcw
not
push
sbb
xor
sub
jecxz
mov
jmp
push
pop
mov
adcb
fsubrl
pop
mov
and
or
mov
out
inc
add
fnstsw
fcomps
jmp
mov
xor
out
and
pop
jp
loopne
push
add
jge
popa
loope
jno
cmp
sarl
dec
pop
scas
push
sub
pop
jg
sub
adc
push
icebp
mov
out
sub
std
cld
pop
inc
pop
dec
mov
cmp
test
test
rclb
fmull
sbb
add
loop
add
or
xchg
pop
and
xor
in
pop
lock
mov
adc
mov
out
jp
push
pop
sub
adc
cli
mov
ficompl
and
ret
push
xchg
loopne
imul
arpl
sub
imul
divb
xor
xorb
fcoml
sbb
enter
mov
inc
js
and
ret
gs
add
mov
add
mov
pop
mov
pop
or
add
clc
insb
dec
cwtl
loopne
or
mov
lcall
add
adc
js
inc
jecxz
push
jnp
outsb
add
pop
xlat
shrl
out
xor
and
jmp
xor
popf
push
jo
add
or
das
xorb
xor
sahf
jns
or
std
mov
call
inc
repz
test
addl
add
push
mov
and
adc
mov
xchg
loop
pop
mov
adcb
lahf
pop
mov
orl
ret
inc
push
into
stos
xchg
or
xchg
xchg
and
xchg
and
roll
enter
pop
stc
mov
mov
shlb
cli
sub
leavew
cli
fadds
or
pop
shr
mov
jle
mov
adc
mov
or
jns
jl
out
sub
cld
in
mov
push
sbb
jmp
push
sarb
xlat
sub
mov
sarl
outsb
lret
addb
xchg
push
push
cmp
sbb
and
lods
or
xor
pop
loop
adcb
dec
cmp
mov
xor
pop
rorl
jnp
das
addl
aas
add
push
adc
xor
push
lds
aas
and
mov
xor
or
mov
push
dec
jnp
mov
dec
or
mov
cmp
jmp
stos
mov
and
jecxz
jno
sbb
ds
xchg
push
dec
filds
dec
call
and
jg
and
out
and
mov
shr
or
addr16
push
int
cs
mov
xor
xchg
jg
loopne
pop
pop
outsl
mov
iret
loope
subl
cli
test
sahf
lea
das
adc
in
nop
and
sti
jb
rorl
test
pop
sar
rolb
fistpll
jbe
rcrb
push
add
adc
cs
adc
sub
sub
adc
and
jl
mov
rcrb
or
cmp
cs
inc
rcrl
mov
scas
sbb
pusha
or
hlt
aad
add
cwtl
jl
incb
sub
push
mov
test
or
xchg
fldcw
test
mov
outsl
sub
cs
xchg
shlb
jbe
stc
aam
fldcw
dec
xor
pop
or
lock
mov
jo
and
xchg
pop
adc
cmp
sub
or
cmp
push
int3
cld
loop
pop
scas
cmp
pop
pushf
add
pop
scas
and
inc
jo
pop
insb
adc
xor
and
rclb
sub
mov
out
and
jb
aam
outsl
push
orb
mov
pop
jno
sbb
or
cmp
xor
int3
es
inc
cld
or
incl
dec
sub
dec
cmpsb
pop
hlt
push
jae
inc
jmp
ja
sub
fidivrl
adc
inc
cmp
jecxz
mov
inc
cmpsl
push
jg
adc
jl
pop
insb
adc
cmpb
jbe
lahf
pop
jmp
rolb
and
xor
add
pop
adc
mov
cs
pop
xchg
and
rorb
pop
leave
cmp
mov
sbb
loopne
dec
dec
das
adc
shll
mov
pop
scas
add
and
and
inc
or
jmp
scas
xor
add
pop
inc
sbb
dec
ljmp
inc
xchg
sbb
loopne
push
dec
jp
push
lock
ds
shl
adc
lahf
cmpb
pushl
or
mov
mov
repnz
xor
add
xchg
aaa
add
jmp
xchg
push
xchg
je
sub
es
push
mov
mov
aam
inc
adc
and
iret
imul
pop
add
sbb
loopne
popa
xor
std
jmp
fadds
mov
mov
mov
mov
popw
jmp
dec
and
outsl
inc
ret
shr
xor
cltd
push
pop
xor
outsl
sub
mov
xor
jmp
cmp
fcoms
mov
or
dec
push
xchg
push
push
shll
or
push
aaa
pop
scas
and
sarb
and
and
dec
add
add
inc
push
mov
daa
push
xor
js
mov
fdivp
xor
sub
and
xchg
xchg
dec
mov
cltd
push
mov
stc
pop
xor
outsl
sub
andb
loopne
mov
popf
js
jnp
repz
pop
adc
jno,pn
xchg
scas
push
cli
or
sbb
add
or
pop
sbb
movsb
xor
pusha
adc
aaa
xchg
lock
cmp
aad
ljmp
sbb
out
jmp
xor
pop
push
out
push
add
mov
lods
adc
or
fistps
nop
push
adc
iret
cmc
cmp
int3
xlat
adc
dec
dec
mov
in
or
test
lret
aaa
ret
ja
mov
mov
sub
push
dec
mov
pop
inc
pop
cmp
add
adc
or
les
pop
jle
out
adc
push
pop
dec
mov
jl
mov
jae
cmc
xchg
sahf
pop
pop
mov
xchg
mov
pop
xor
dec
mov
mov
fwait
push
lock
push
cmp
fldl2t
arpl
cs
pop
sub
sbb
sbb
ja
shrb
and
pop
lahf
add
xor
cmp
test
add
lods
sub
mov
jmp
cmpsb
push
pop
push
loop
test
mov
cmpsl
dec
out
cmp
push
int
aaa
jle
jns
push
orb
mov
js
orb
lods
rorb
fs
aam
stos
cld
or
pop
jecxz
mov
dec
mov
popa
gs
pop
stos
mov
add
and
cmp
xchg
fistps
leave
in
int3
insb
or
jp
xchg
outsb
lret
xchg
je
in
pop
dec
dec
lea
jl
mov
mov
adc
fs
inc
aaa
aas
mov
into
dec
cmp
fsubrp
dec
dec
cmp
push
movsl
sar
pop
pop
push
pop
mov
mov
dec
je
aad
inc
ret
cmp
xor
cmp
aas
cmc
and
add
add
orl
dec
and
ljmp
push
cmpsl
out
push
mov
ja
pop
pusha
xor
or
add
and
rcrb
pop
cld
xorb
cltd
loop
sbb
jnp
das
cmc
test
and
aad
add
push
leave
cmp
jnp
pop
add
jecxz
mov
lock
or
jo
inc
mov
adc
mov
xchg
mov
bound
push
out
push
dec
inc
mov
inc
test
mov
out
and
mov
mov
orb
negl
mov
mov
sub
push
push
in
daa
xchg
xlat
sahf
mov
popa
pop
cs
push
lret
imul
fs
fistpll
test
jo
push
call
mov
dec
push
pop
movsb
leave
mov
jp
jg
xor
stos
nop
and
push
sub
lds
mov
outsb
and
xlat
std
icebp
xchg
ljmp
xchg
push
push
xor
jmp
lds
mov
pop
rolb
xor
mov
push
out
fistpl
insl
sbb
pop
repnz
mov
push
xchg
sub
inc
mov
mov
and
push
mov
cltd
pop
sbbb
push
pop
jg
jnp
cmp
sbb
inc
dec
loopne
xchg
mov
or
aas
js
jmp
mov
pop
add
enter
sub
out
int3
jne
jnp
ja
orl
call
in
ret
lret
movsl
sarb
ret
dec
inc
dec
cmc
add
mov
lods
jmp
inc
cmp
leave
adc
shl
cmovne
or
outsb
push
cmp
jb
cmp
fildll
hlt
test
pop
stos
push
cmc
nop
aad
fnsave
in
gs
xchg
je
jbe
ficoms
pusha
mull
or
xchg
push
hlt
mov
test
aas
mov
mov
lods
and
xor
adc
cwtl
mov
lret
cmp
loopne
dec
pop
es
inc
inc
loop
inc
or
xor
movsb
adc
or
cltd
mov
bound
aam
dec
xor
push
jl
shll
loop
icebp
arpl
mov
ljmp
pop
pop
cmpl
mov
mov
pop
pop
movsb
icebp
or
or
xor
push
xchg
out
add
clc
add
or
adc
pop
mov
fnsave
adc
pop
repz
inc
sahf
jg
cmpsb
iret
cmpb
dec
add
xor
pop
shr
or
sub
shlb
pop
push
push
mov
sub
scas
sub
pop
and
popa
jns
out
mov
mov
xor
add
xor
dec
or
hlt
outsl
ret
mov
xchg
loop
popf
lcall
push
jle
pop
mul
das
ja
adc
xor
scas
add
rcll
ret
or
jns
pop
loop
mov
dec
sbb
fs
dec
repz
jns
mov
pop
pop
add
push
jmp
out
push
mov
es
inc
pop
jmp
pop
or
aad
mov
adc
scas
mov
jmp
push
or
mov
pop
or
movsl
inc
xor
repnz
pop
add
and
xchg
hlt
ljmp
dec
or
dec
cmp
iret
inc
stos
and
jno
mov
push
xor
mov
das
aam
push
int
pop
in
scas
push
test
ss
adc
loop
scas
movsl
movsb
xorb
popa
pop
push
inc
adc
lods
aas
pop
scas
push
xchg
jg
jecxz
rclb
push
push
inc
repnz
jmp
enter
test
sub
dec
cmc
ror
add
sbb
fdivrl
push
mov
mov
jmp
jae
imulb
jo
sahf
cmp
dec
inc
mov
outsl
xchg
or
cmc
cmp
cli
sti
inc
push
testl
push
adc
inc
dec
sbb
or
jg
pop
pushf
inc
and
pop
rol
outsb
imul
pop
add
lahf
or
jge
push
sahf
jp
adc
in
push
stc
mov
fsubrs
les
cltd
loopne
dec
jbe
adc
mov
jmp
mov
in
mov
mov
loopne
pop
repz
sarb
sub
je
mov
fists
in
and
push
cltd
jle
sub
call
xchg
cwtl
aas
mov
and
adc
mov
dec
subl
xchg
xchg
shll
xchg
jmp
out
jp
fcompl
hlt
cmc
add
sub
push
call
cmp
xchg
imul
and
sub
push
push
leave
sbb
pop
push
cmp
xor
dec
fcomp
cmp
mov
adc
adc
add
xor
pop
negb
and
add
imul
cmp
dec
pop
je
and
pop
pushf
sbb
shll
mov
mov
cli
bound
mov
ljmp
test
outsb
aad
in
mov
xor
jno
or
jbe
nop
je
adc
imull
mov
xor
pop
dec
lcall
dec
vmread
pusha
dec
gs
jmp
inc
xor
out
push
and
pusha
pop
add
push
or
pop
push
and
push
daa
in
pop
cli
roll
into
ret
dec
scas
add
jb
add
shl
mov
cwtl
sbb
cmpsl
shrl
xor
pop
jo
loope
enter
shlb
sub
jmp
push
inc
and
adc
test
arpl
sub
jl
das
jge
sbb
aas
dec
das
movl
or
mov
stc
ljmp
scas
push
inc
mov
pushf
or
cli
addb
pop
push
stos
xor
insb
or
sbb
pop
push
popa
in
mov
jnp
xchg
imul
mov
mov
pop
jo
jp
dec
lahf
int3
pop
push
inc
push
out
jae
arpl
cmp
pop
mov
inc
orb
sahf
dec
pop
sbb
arpl
add
adc
mov
fs
movsl
dec
xor
aaa
pop
arpl
sub
add
jmp
stc
or
add
imul
hlt
bound
push
imul
dec
rolb
mov
sub
repnz
daa
mov
sti
es
dec
push
mov
repz
add
or
jmp
xor
adcl
adc
mov
shrl
aad
stc
rclb
mov
ror
les
inc
xor
test
in
adc
lods
sbb
sub
testb
faddl
xchg
jns
les
enter
or
push
mov
pop
cmp
xor
inc
cmc
add
adc
int3
push
push
mov
das
dec
inc
xor
add
jmp
add
loope
mov
or
xor
pusha
in
mov
imul
fiadds
adc
mov
jnp
add
cwtl
sbb
mov
inc
mov
add
push
js
popa
mov
xchg
cmp
adc
push
pop
cwtl
mov
xor
pop
lock
cwtl
fadds
adc
jae
and
sbb
loop
vmcall
jmp
adcb
inc
cmp
shlb
add
sub
add
jmp
in
mul
xchg
rcl
push
xchg
and
inc
xchg
loopne
or
dec
daa
hlt
xor
cmc
rorb
inc
jl
adc
xchg
pop
pusha
push
sub
imul
push
jbe
cmpb
shlb
cmp
fs
xor
lock
movsl
test
jmp
ss
shrl
sub
jecxz
call
mov
adc
cwtl
pop
xchg
adc
cli
imul
imul
repz
sub
mov
push
fnstcw
fdivl
push
dec
movsb
cmp
xchg
aam
sbb
inc
call
xchg
pop
inc
jno
xlat
cmp
pop
pop
lea
push
push
int
cld
inc
int
push
adc
pop
push
pop
rolb
roll
sub
and
jmp
aad
movb
fisttps
loop
subb
dec
add
push
and
addb
into
push
inc
ljmp
xchg
outsb
neg
mov
dec
pop
call
or
stos
xor
repnz
mov
inc
stc
mov
push
mov
pop
and
jnp
add
push
mov
pop
jp
xlat
inc
inc
pop
mov
lods
stos
and
jl
mov
scas
out
dec
pop
fsubrs
std
jnp
pop
fisttps
aaa
fbstp
or
jecxz
push
inc
inc
clc
leave
adc
pusha
inc
mov
xor
dec
mov
stos
loop
cli
shlb
adc
test
fisubl
nop
xchg
and
test
mov
mov
pop
and
nop
js
ljmp
inc
xchg
movsl
fdivs
cmp
push
sub
hlt
or
cld
jg
mov
out
add
std
push
jbe
jmp
popl
add
and
in
inc
mov
and
les
lahf
in
jmp
pop
cmp
add
push
and
cmc
mov
enter
and
enter
xor
out
push
shr
add
pop
nop
fcmovnbe
adc
add
and
jb
add
pop
repz
add
and
and
cmp
jg
sub
dec
pop
push
movsb
xchg
jne
push
jp
cltd
lret
jbe
test
test
shr
xor
nop
in
pop
cmp
adc
rcrb
pop
pop
sarb
jo
mov
mov
mov
loopne
mov
add
jl
or
sub
dec
push
rorb
or
and
sbbb
xlat
addr16
pop
push
leave
in
stos
jbe
stos
add
in
les
ficompl
mov
sbb
aam
out
mov
das
or
add
dec
dec
sbb
xchg
and
addb
dec
add
xor
jmp
dec
das
aaa
adc
sub
dec
xor
out
fsubp
rcrl
push
loope
in
movsb
xchg
in
or
dec
cwtl
daa
scas
pop
out
adc
mov
add
shlb
ret
dec
xchg
dec
cmp
dec
sbb
fnstcw
clc
xchg
cmp
aaa
icebp
or
or
jnp
inc
jmp
xlat
sbb
lods
jecxz
sarb
pop
nop
and
pop
imul
mov
mov
faddl
inc
in
jmp
call
inc
leave
adcb
fisubrl
sbb
stos
mov
into
pop
push
push
repnz
cmp
jl
lea
mov
push
xor
xchg
mov
addl
pop
jmp
sub
and
je
and
cmpsl
bound
pop
sti
and
add
add
sbb
xchg
imul
or
adc
pop
decl
daa
jo
dec
stos
sbb
mov
jns
and
mov
jae
cs
pop
push
inc
in
mov
mov
cmp
sbb
pop
arpl
xlat
push
lcall
mov
adc
mov
push
xchg
adc
js
cmp
addr16
push
mov
xchg
dec
lret
pop
enter
xchg
test
into
cmc
aam
lods
repz
push
xchg
lret
cmp
adc
mov
sub
adc
add
ds
stos
dec
mov
and
mov
dec
jns
lahf
jmp
jmp
in
cmp
inc
xchg
mov
ja
dec
or
mov
aaa
pop
inc
mov
mov
xchg
dec
jecxz
jns
loope
sbb
test
in
adc
mov
push
popf
je
cli
popa
fidivl
mov
pusha
faddl
icebp
jmp
subb
push
ljmp
mov
lret
or
push
sbb
push
or
mov
es
and
cmc
add
sbb
push
sbbl
jmp
or
push
mov
gs
test
jmp
add
mov
icebp
pusha
mov
dec
and
add
inc
out
jmp
sahf
inc
nop
push
data16
jg
fs
mov
lret
imul
movsb
es
mov
xor
jp
jmp
push
pop
add
jmp
js
push
mov
push
out
jns
cmp
add
inc
testl
sar
xchg
pop
andl
addr16
dec
stos
pop
mov
insb
call
pusha
rcll
sbb
and
adc
dec
clc
mov
fiadds
sub
jmp
outsl
aam
add
data16
fstps
and
xlat
stc
xor
lret
insb
dec
jg
cmp
popl
sti
pop
or
or
add
adc
imul
cmp
enter
dec
lret
dec
fwait
popf
xlat
lcall
fdiv
and
jg
cmpsb
jmp
pop
in
int3
jg
jo
dec
pop
mov
rcl
ljmp
pop
cs
mov
repz
test
push
out
lret
jmp
sub
neg
pop
dec
imulb
and
add
pop
xor
mov
adc
in
lds
jmp
mov
and
xchg
in
das
add
xor
or
jb
or
push
out
add
out
cld
or
xor
lcall
xor
stc
add
mov
push
mov
sahf
pop
and
and
insb
add
mulb
pop
mov
clc
pushf
adc
sub
sub
loopne
jnp
jge
jg
cmp
cmc
and
push
push
sbb
fcmovnu
dec
fcmovnbe
xor
popa
pop
jmp
pop
adc
jmp
icebp
iret
jmp
test
jnp
pushl
cmp
xlat
lea
jecxz
roll
mov
or
mov
sub
in
lcall
ja
mov
pop
call
jle
jno
cli
add
arpl
outsb
push
andb
xchg
push
xchg
out
in
lret
push
push
into
outsl
jno
lea
add
repnz
dec
pop
neg
or
add
imul
pop
jmp
jmp
movlps
repz
add
push
push
hlt
insl
mov
cs
xchg
cmp
sub
dec
jae
mov
add
int3
jno
dec
neg
shlb
xchg
pop
fninit
sbb
pop
or
sub
sub
mull
or
add
inc
add
lea
test
xor
mov
stos
sub
jnp
fisttpll
or
push
pop
mov
push
adc
or
pop
sbb
add
xor
push
int3
dec
shll
lea
sub
cs
adc
lods
das
mov
stc
xchg
add
lea
xchg
das
add
pusha
stos
daa
sbb
mov
std
mov
push
mov
repz
rcrb
pop
arpl
push
xor
adc
loope
aam
push
lcall
pushf
out
in
notl
cmp
mov
mov
repnz
xchg
sub
or
jns
and
addr16
dec
push
push
cmp
dec
clc
pop
mov
xchg
add
addr16
ja
sub
add
jo
ret
fs
lds
call
adc
call
dec
sub
dec
push
orb
mov
cmp
inc
inc
xor
add
add
lret
jmp
call
stos
rolb
mov
push
xor
or
cmpsl
xor
inc
lahf
das
push
ja
adc
inc
xchg
outsb
shlb
imul
or
sub
int
out
jb
sbb
fsubs
andl
mov
mov
dec
or
jo
dec
repnz
push
push
mov
pop
xchg
lock
mov
jmp
pop
cmp
adc
cld
insb
iret
add
push
and
fs
aaa
jnp
or
test
les
inc
clc
pop
mov
pop
js
pop
int3
loope
jnp
mov
test
push
pop
and
xchg
mov
jmp
lret
xchg
inc
jmp
mov
inc
adc
and
dec
test
stos
repz
fsubrp
fstl
mov
andb
add
or
xor
jecxz
add
sbb
js
sarl
andb
scas
adc
repz
mov
aam
or
cs
inc
popl
xchg
iret
cltd
jb
push
pop
push
pop
add
push
mov
or
inc
add
sub
sub
jmp
icebp
stc
jg
xlat
cwtl
pop
or
xor
roll
sub
and
mov
test
adc
sub
std
xchg
mov
pop
add
jecxz
dec
icebp
lock
fwait
in
push
inc
data16
pop
xchg
jl
in
mov
dec
loopne
test
or
cmc
xchg
jle
xchg
xchg
jae
and
pop
push
cmp
lcall
add
adc
addb
movsb
mov
cmpsb
popf
pusha
push
je
jae
or
xchg
aad
sub
pop
roll
daa
sub
pop
pop
jno
push
adc
add
stos
inc
lahf
mov
dec
and
pop
scas
xchg
add
loop
jmp
aas
mov
mov
fisttpl
jecxz
jmp
stos
dec
inc
out
dec
mov
add
mov
mov
pop
add
pop
pop
jb
adc
outsb
rcrb
hlt
das
pop
pop
mov
and
test
pop
fnsave
cmc
inc
jl
dec
out
jne
mov
lock
xchg
stc
mov
xchg
mov
xchg
jne
inc
pop
pop
in
sbb
and
pop
push
push
mov
push
scas
arpl
pop
les
popf
xor
dec
aam
enter
popf
dec
lock
sarb
mov
mov
sub
add
pop
jle
push
cld
sbb
pop
fdiv
xor
mov
and
mov
adc
in
pop
add
jnp
jecxz
xor
adc
and
push
xchg
repnz
stos
push
jge
into
push
ss
lds
daa
mov
jo
xchg
and
xor
add
sub
and
rol
jnp
or
dec
int
xor
iret
movsl
dec
add
cmpsb
jge
sub
and
pushf
push
adc
sub
sub
or
mov
pop
mov
add
mov
mov
stos
xchg
pop
loope
jbe
lret
mov
xor
scas
gs
adc
mov
int3
pop
mov
push
mov
orps
nop
mov
lret
adc
adc
pop
pop
add
cmp
mov
lock
push
cli
lods
push
shr
inc
add
and
sub
mov
add
push
inc
aam
or
ror
xchg
adc
cmpps
mov
add
mov
jmp
pop
ret
pop
dec
es
xchg
sbb
js
les
cmp
cmp
cmpsl
sbbl
ret
stos
adc
add
and
outsb
jns
dec
cli
sub
in
and
mov
sbb
repz
pop
cmp
add
fstpt
das
and
daa
add
dec
push
mov
mov
xchg
dec
and
lea
shrl
int3
xchg
ja
lahf
in
in
std
lret
loope
add
xchg
jmp
mov
and
fsubrl
add
notl
fbld
xor
adc
sbb
outsl
add
pop
das
les
push
dec
fs
icebp
ljmp
scas
inc
pop
int
rorb
test
adc
add
push
push
repnz
fsubrp
cld
mov
pop
sub
sub
hlt
push
cli
pop
mov
orb
addr16
jmp
cmpsb
fcoml
ds
sub
push
mov
xor
dec
push
shr
cmp
cli
or
add
jnp
cmp
mov
outsl
or
mov
push
add
sub
stos
inc
mov
inc
cmp
or
xor
pop
pop
mov
pop
shlb
jno
or
mov
inc
lods
movsl
jns
scas
ret
outsb
popf
hlt
rorl
pop
jle
jg
mov
add
jp
mov
cmp
mov
loope
scas
sub
dec
daa
dec
imull
loop
fnstenv
push
xor
subb
insb
imul
jle
jmp
shrl
lcall
jne
inc
mov
push
icebp
jmp
les
dec
ret
mov
xchg
sub
xchg
jo
and
dec
jge
das
clc
cmp
cmp
cld
mov
mov
lret
mov
jl
jb
sub
cs
sub
cmp
xchg
and
push
push
adcl
mov
es
mov
leave
pop
dec
mov
aam
push
call
mov
int3
popfw
jne
inc
dec
cli
loope
aas
mov
in
lahf
push
cmp
movsl
mov
sbb
cli
mov
outsb
lock
rorl
jecxz
jns
inc
xchg
jns
or
lcall
pop
mov
loope
pop
push
stc
leave
sub
into
mov
mov
pop
add
xchg
push
popf
xchg
call
int3
lcall
xor
mov
imul
and
inc
add
and
push
pop
lea
aas
pop
dec
ret
loope
ja
mov
adc
jae
imul
cmp
inc
pop
mov
loopne
and
pop
mov
sub
enter
test
mov
adc
adc
imul
pop
pop
inc
sub
pop
xor
push
ljmp
push
pusha
bound
insb
stos
push
aaa
or
addb
jmp
pop
pop
jbe
sub
gs
rcll
lock
insl
popa
mov
in
cmp
cmpb
outsl
push
xchg
add
jmp
orb
push
sbb
mov
dec
inc
mov
pop
neg
add
insl
or
pop
xor
sub
xor
fisubl
fidivrl
jp
enter
jne
or
add
aam
and
stos
imul
pcmpeqw
sarb
leave
aam
add
mov
insb
mov
stc
xor
mov
mov
jl
fstps
push
test
adc
movsl
les
jge
mov
aam
pop
mov
and
or
cwtl
adc
clc
jae
cmp
push
cmp
adc
pop
adc
xchg
outsb
cmp
pop
xor
and
jbe
add
les
mov
scas
je
ljmp
fcoms
jnp
sub
dec
leave
test
pop
mov
push
sub
enter
out
cmp
push
lock
pop
dec
andb
in
sbb
sub
in
mov
or
push
cmp
push
fisttps
xor
or
pop
push
mov
sub
ss
daa
insb
repnz
adc
loopne
xchg
xor
out
add
cmpsb
adc
lcall
hlt
fildll
or
lret
xchg
push
lds
ljmp
push
pushf
mov
dec
pushl
aad
fwait
les
dec
jnp
xchg
std
xchg
icebp
dec
ljmp
push
popf
sub
xchg
cmp
push
push
xchg
test
sub
jne
jmp
mov
adc
inc
xlat
fwait
mov
pop
rcr
add
xor
or
pop
add
jge
mov
fidivl
bound
or
repz
add
mov
mov
inc
fistpll
dec
jb
dec
push
stos
inc
push
inc
lahf
jo
repz
push
test
sbb
clc
negb
pushf
or
and
push
pop
mov
dec
add
mov
pop
out
and
mov
sbb
loopne
testb
ds
rcrb
and
lcall
mov
jae
fisubl
inc
inc
cmpb
xor
das
aam
push
sbbb
dec
loop
xor
fsubs
push
std
pusha
add
or
or
add
enter
mov
mull
outsb
pop
arpl
mov
aam
xlat
dec
jbe
pusha
pop
test
sbb
fldenv
leave
mov
jnp
xchg
lock
xchg
aaa
daa
jae
out
and
movsl
xlat
adc
mov
push
inc
dec
add
ljmp
arpl
push
add
push
add
sbb
sbb
mov
dec
loopne
and
push
outsb
insl
xchg
int3
jo
mov
mov
push
dec
test
mov
cld
pop
out
push
mov
ds
scas
inc
cmp
pop
push
pop
cmp
pop
lock
jns
pop
mov
imul
xchg
lahf
cwtl
aad
aas
mov
dec
inc
loopne
xchg
lock
xchg
dec
cmp
xlat
in
adc
aad
jmp
pushw
cmp
dec
sbb
aam
jmp
shr
xor
test
jnp
jmp
xchg
sub
and
scas
aad
scas
test
sub
mov
pop
ja
push
mov
push
mov
std
xlat
cmc
mov
adc
lcall
pop
out
cld
sub
mov
or
iret
sti
add
add
cmp
push
movl
sub
std
or
pop
sub
and
call
jmp
jno
adc
scas
aam
mov
adc
push
daa
sbb
jnp
add
cld
incb
jmp
xchg
les
decb
pop
push
dec
mov
ljmp
xor
dec
clc
mov
jnp
outsl
lods
popf
pop
mov
cwtl
jecxz
nop
jne
sub
in
loop
test
mov
pop
adc
aad
and
mov
imul
pop
sub
jno
push
test
pusha
enter
cmp
jle
push
pop
out
mov
pop
lcall
sub
or
push
pop
fbld
xor
adc
mov
adc
inc
cld
repz
movsl
sti
add
ret
pop
aas
fstl
mov
jb
pop
leave
movsb
movsb
push
inc
ljmp
outsb
cmc
stc
or
loop
jns
mov
in
sahf
out
imul
inc
addb
sub
shrb
and
pop
adc
add
push
cli
test
push
jne
xchg
and
or
in
movsl
test
clc
jne
add
add
int3
mov
sbb
pop
or
mov
push
add
fcmovbe
lcall
add
push
sub
pop
pop
or
outsb
scas
fldl
xchg
dec
sub
adc
inc
insl
mov
pop
jno
mov
pop
add
in
pusha
es
cs
stos
mov
xchg
push
out
enter
test
mov
add
pop
jmp
shlb
addl
enter
popa
jecxz
into
or
dec
popf
bound
sbb
mov
push
dec
or
aas
adc
mov
adc
or
cmc
testl
jns
inc
add
ret
sbb
sbb
sub
es
push
inc
das
mov
sbb
pop
dec
sti
sub
int
mov
push
add
xchg
sbb
ret
adc
or
jne
fwait
mov
test
add
mov
inc
ss
dec
outsl
les
add
jmp
mov
lods
cld
fadds
aam
dec
std
into
test
or
and
adc
jmp
clc
xlat
lods
pop
xchg
call
pop
jecxz
ret
xchg
sbb
mov
ret
adc
sub
add
sbbb
xor
inc
loopne
int3
stos
or
cmp
push
fnstenv
dec
aas
add
cmp
adc
jle
inc
mov
stc
xchg
std
adc
or
popa
jge
add
mov
mov
or
add
inc
inc
inc
shrb
fildll
test
pop
add
imul
push
lock
pop
adc
or
and
fwait
jle
ds
out
add
jg
rorb
in
add
xchg
cmpsb
pop
lahf
pop
movsl
pop
pop
cmp
jmp
mov
jle
sub
pusha
wrmsr
adc
sbb
sub
dec
fnstcw
pop
adc
std
orl
dec
in
daa
jmp
cmc
mov
out
pop
sti
mov
push
pop
sub
lock
cld
push
je
push
push
mov
pop
rorb
pop
push
xchg
bswap
into
or
or
das
icebp
xor
jmp
add
dec
jle
xor
test
xor
mov
or
add
push
add
dec
push
xchg
mov
ds
repnz
or
jecxz
inc
adc
mov
ret
mov
sbbb
jns
xor
lds
mov
dec
repnz
shll
cmc
jo
and
sub
adc
pop
ret
aad
add
test
push
gs
shl
not
xor
adcl
enter
add
pop
popf
xorl
call
inc
jbe
push
mov
xor
pop
loopne
rcrl
mov
sbb
shl
ja
inc
stc
sbb
and
jg
xor
in
add
pop
or
lret
rorb
add
jnp
movsl
push
out
add
and
pushf
xchg
push
inc
lret
inc
nop
bound
shlb
mov
scas
addr16
shlb
pusha
aam
xchg
cli
jns
xchg
push
xchg
les
jecxz
or
add
sub
jo
sbb
jl
and
mov
shlb
daa
add
dec
lahf
das
fs
sub
add
jno,pn
roll
ret
xor
mov
in
push
add
cmp
and
scas
inc
fildll
clc
cmc
cltd
or
jae
insb
jmp
imul
fimull
jge
mov
mov
or
inc
mov
fwait
inc
sub
dec
jae
jne
mov
sub
lret
push
es
std
inc
or
push
popa
and
ror
sbb
das
adc
test
push
cli
stos
aaa
sub
nop
pushf
pop
push
mov
and
mov
or
xlat
inc
loopne
popf
jle
dec
std
loop
cmc
call
dec
dec
push
xchg
loop
cmpsl
lds
cmp
loop
ljmp
push
in
mov
jle
jg
jmp
icebp
cmp
dec
fbstp
in
dec
or
xchg
repz
push
or
mov
ret
sub
xchg
mov
sub
push
stos
and
cmp
ffree
mov
into
dec
bound
jle
daa
cmc
mov
mov
or
mov
ja
iret
scas
ror
enter
je
jecxz
outsl
add
popa
cmc
insb
xlat
orb
push
hlt
mov
pop
jns
hlt
pop
les
sbb
dec
add
aas
and
mov
jno
mov
and
loop
sub
mov
pop
leave
insb
xor
push
and
mov
xchg
sub
add
sti
decb
addr16
loop
mov
pop
sub
push
pop
adc
int3
leave
clc
nop
in
fnstenv
dec
jno
cmpsb
outsb
cmp
stc
lcall
cli
inc
mov
dec
js
pop
jle
xor
pop
fists
scas
cwtl
sahf
ror
sbb
ficomps
jle
sbb
or
mov
test
mov
add
jno
push
push
sbb
loope
jno
cmpsl
sub
add
ficoml
or
jmp
add
pop
push
push
in
mov
add
nop
dec
movsl
jns
cmc
lods
add
pop
not
xor
popa
mov
push
mov
or
xor
or
out
mov
pop
and
sbb
push
pop
in
xchg
arpl
add
lods
mov
sub
jmp
and
pop
in
push
ficomps
and
pop
push
push
push
jmp
and
sub
pop
notb
push
rorb
lock
pop
mov
daa
sti
es
xchg
lock
std
scas
mov
xor
dec
cmpsb
call
lds
push
jmp
aaa
sbb
xchg
xor
push
dec
stos
add
sub
inc
add
incb
push
mov
ja
fwait
aam
sub
ljmp
scas
pusha
inc
hlt
push
or
jl
insb
jle
push
adc
fnsave
or
or
or
ds
and
pop
push
mov
ret
mov
notb
push
add
sti
mov
sub
adc
push
push
push
pop
cmp
mov
mov
mov
dec
daa
adc
pop
adc
shrb
lds
fsub
stos
sti
add
adc
pop
movsb
lds
pop
dec
mov
add
dec
gs
fisttpl
mov
cmp
jl
mov
incl
aaa
jecxz
push
andb
pop
pop
sbb
mov
sbb
xor
addr16
push
mov
lods
cmp
or
push
pop
mov
or
fstpl
pusha
mov
hlt
inc
ret
hlt
sub
js
xchg
enter
cmp
jmp
add
adc
shr
xor
adc
jne
xchg
rcl
sub
inc
loopne
sbb
xor
jns
stc
sub
adc
xor
cs
daa
mov
test
pop
sub
dec
lret
aam
loop
cld
jle
jmp
push
pop
sub
xor
add
adc
adc
xor
popf
cld
out
pop
cli
add
cmpsb
dec
and
sub
pop
mov
jle
add
mov
ja
cld
insb
or
in
adc
adc
mov
test
push
cli
dec
lret
pop
add
dec
rcll
mov
dec
dec
inc
cli
pop
xchg
cmpsb
andb
or
das
iret
push
movsl
xchg
shll
mov
add
pop
into
daa
mov
testl
in
hlt
jg
jmp
std
or
mov
xchg
jb
cld
aaa
shrl
cvtpi2ps
add
push
cmp
into
add
push
xchg
push
inc
outsb
aam
sbb
push
or
loopne
and
sub
adc
add
iret
inc
enter
dec
mov
pop
test
not
lcall
mov
sub
cmp
icebp
outsl
cmp
or
out
mov
mov
or
out
add
jbe
das
jecxz
dec
popa
or
push
aas
add
leave
cmp
scas
inc
notl
faddl
dec
add
inc
dec
adc
dec
inc
outsl
stc
add
push
mov
orl
mov
sub
jge
sub
jae
call
or
pop
cmpsb
cs
xor
lret
das
or
int
int
lcall
aam
mov
and
mov
sub
pop
push
jmp
inc
bound
mov
jne
sub
sub
mov
jbe
call
sahf
dec
cli
jmp
movb
or
fs
andl
inc
inc
cs
sbb
rcpps
imul
sbbb
and
pshufw
pop
lcall
jbe
dec
push
mov
xchg
lcall
popf
dec
ret
stc
push
imul
or
ret
or
or
jl
and
push
int3
jle
xor
lds
push
nop
pusha
jp
scas
shll
jbe
or
jmp
or
cmc
or
mov
push
xor
cmp
test
or
call
scas
add
stc
popf
mov
pop
movsb
fsubrp
inc
fs
repnz
push
stc
fnsave
repz
jmp
jecxz
adc
add
lret
add
pop
ja
cltd
sub
xchg
cs
xchg
add
popf
and
xchg
jle
les
repnz
dec
jmp
xchg
mov
add
add
imull
pop
push
in
and
loop
xlat
icebp
icebp
xchg
mov
inc
mov
pop
xlat
clc
int
pop
mov
jge
mov
sbb
inc
sub
xlat
push
mov
inc
testb
add
cmp
dec
pop
xor
inc
push
push
sub
xchg
cltd
orl
lea
adc
mov
mov
loopne
stos
dec
pop
xor
imul
or
pusha
aas
jge
cmp
mov
mov
daa
sub
sbb
pusha
lret
test
pop
loop
lcall
cli
adc
bound
jmp
mov
add
jg
loope
add
dec
in
jecxz
or
xlat
and
ficoml
lods
out
lret
jne
pop
cs
or
add
sub
add
pop
pop
add
push
sub
inc
pop
sub
add
sub
sub
sub
adc
lcall
sbb
outsl
xchg
add
or
pop
shll
adc
ret
clc
inc
mov
js
repnz
sbb
lods
bound
lahf
fsubr
mov
push
pusha
push
add
das
test
dec
fisttpll
adc
mov
lods
jle
adcl
aas
enter
shr
or
pop
mov
push
sub
test
pop
add
jge
lods
aad
loope
incb
push
out
jns
dec
pusha
in
iret
dec
sub
movl
enter
inc
shrb
scas
dec
xchg
rcl
add
mov
adc
or
xchg
loop
adc
imul
out
arpl
sbb
sub
popf
jbe
pop
mov
cltd
dec
nopl
adc
mov
adc
mov
push
fcomip
idivb
pusha
mov
add
xor
cmp
pop
or
loopne
inc
push
jp
fmull
mov
pop
jmp
lods
adc
dec
in
loope
push
repz
daa
jns
jne
pop
or
flds
sub
rorl
mov
cmp
jmp
and
daa
subl
pop
jge
mov
aas
cli
fs
mov
or
xor
aaa
push
jns
fwait
push
shl
mov
or
cmpsl
pop
lock
push
int3
sbb
or
aad
lret
sahf
repnz
sbb
fistpl
inc
int3
dec
adc
cmp
or
nop
rorl
int
cmp
xchg
inc
outsl
adcl
fldcw
setbe
lock
add
cld
adc
daa
hlt
nop
push
in
cmp
pop
add
push
push
mov
sbb
in
push
mov
bound
jl
jne
push
add
ret
push
add
add
nop
orb
rcll
sbb
xchg
push
shr
mov
adc
push
das
jmp
scas
adcl
fcoms
xor
leave
rcrl
shl
inc
lret
push
testb
imul
dec
add
mov
or
cmp
jne
add
aam
add
xor
adc
pop
jns
mov
movsb
or
pop
rcrl
mov
or
outsb
loopne
imul
rorb
mov
mov
adc
mov
jo
mov
jmp
decl
sub
add
mov
idiv
add
scas
insb
mov
in
adc
addr16
mov
ret
daa
sarl
add
pusha
stos
stos
or
aad
sub
testl
and
jecxz
aad
pusha
dec
pop
xchg
pop
jmp
or
icebp
pop
aad
imul
movsb
mov
xlat
lret
jbe
add
pop
in
inc
adc
adc
fdivs
jmp
mov
fdivs
mov
xor
cmp
jmp
mov
mov
ret
fistpl
adc
and
adc
stc
dec
push
lock
mov
stos
outsb
add
add
sub
ss
stc
lret
xchg
pop
repz
test
push
out
add
adc
loopne
rcll
mov
mov
in
in
push
pop
pop
adc
shr
jp
xor
mov
orb
add
pop
jmp
in
subb
mov
xchg
inc
jmp
test
call
sarb
or
pop
rcl
pop
jmp
xor
test
cmp
mov
add
inc
push
ds
sub
sbb
xchg
jbe
gs
subl
dec
mov
mov
jae
mov
in
out
les
lock
push
and
sbb
ret
cmp
xchg
in
jg
adc
push
lds
test
cmpsb
aas
inc
test
mov
cs
scas
andb
sbb
orb
xlat
ret
mov
push
sub
dec
mov
or
jbe
movsb
das
aam
jne
stos
adc
cmpsb
filds
repnz
mov
arpl
xchg
testb
xor
rol
scas
mov
pusha
inc
push
sbb
inc
mov
btr
dec
cmp
xchg
push
pop
fwait
ljmp
jmp
dec
jnp
pushf
mov
xchg
adc
test
push
pop
jmp
fldl
lds
push
sti
sbb
jmp
aad
testl
jl
and
shrl
jmp
ja
dec
lcall
xor
push
xor
cmp
push
shr
rorb
push
test
jmp
mov
outsl
das
cmp
push
sti
dec
inc
mov
mov
adc
push
or
ja
push
mov
daa
pop
jl
add
push
jmp
test
scas
add
mov
adc
daa
mov
aad
push
jne
xorb
add
mov
mov
addr16
add
and
push
das
mov
add
les
push
sbb
cmc
adc
lds
rorb
dec
clc
mov
ds
or
into
jnp
add
mov
jmp
pop
pop
das
loope
inc
into
xchg
scas
cmp
outsl
xchg
stos
loop
mov
shl
sbb
and
push
fidivs
push
mov
add
mov
jmp
jecxz
mov
test
mov
pop
jmp
add
push
push
lret
sub
adc
repz
pop
and
jle
mov
sub
ljmp
gs
sub
xor
push
mov
ss
or
pop
or
add
cld
dec
mov
dec
pop
shll
jb
outsl
stc
or
jmp
lret
mov
sbb
push
pop
and
mov
and
pop
pop
test
sub
sub
and
pop
pop
movsb
adcb
jp
sub
mov
push
lcall
add
xor
shr
or
es
sub
add
std
into
cld
dec
fisubl
clc
cmp
sub
in
sub
into
lods
inc
pop
clc
ljmp
rcll
jp
ficoml
xorb
or
or
dec
fidivs
daa
jmp
out
mov
cmpsb
int3
adc
adc
ljmp
inc
xchg
ror
add
imul
pop
in
es
scas
xor
add
repz
nop
jmp
or
dec
push
sarb
lret
adc
or
clc
adc
loopne
arpl
test
adc
imul
add
pop
mov
cmp
or
sbb
push
dec
xlat
mov
ja
xchg
push
mov
cli
jo
xrelease
cmp
add
loope
jecxz
pop
cli
pop
ds
add
fcom
movsl
inc
jge
mov
repnz
aam
fistpll
xor
add
push
test
inc
ds
mov
loopne
xchg
fbld
dec
in
imul
xor
inc
jge
iret
or
pop
dec
sub
adc
add
cmc
daa
dec
xor
fdiv
stos
fwait
push
dec
lret
cwtl
xor
popf
movsl
cli
push
shll
pop
sbb
push
sub
jg
cli
imul
repz
inc
push
call
stc
or
mov
and
jmp
mov
adc
int
jge
xor
sub
xchg
test
imul
adc
add
jge
cmp
sbb
and
sub
jmp
push
in
fmul
xchg
push
mov
imul
pop
push
mov
cwtl
xchg
push
pop
hlt
xor
lcall
and
das
push
mov
aam
add
xchg
push
cmpsb
mov
and
push
xchg
sarl
xor
je
inc
fnstsw
subb
fistl
scas
and
ss
xor
mov
es
mov
jp
popf
pop
in
push
push
and
popf
rcrb
mov
xchg
lds
jae
xchg
push
movsb
xchg
pop
loope
sub
movsb
jmp
insb
push
ret
enter
cwtl
pop
fs
popa
pop
pop
pop
cmp
or
push
pop
pop
xchg
neg
xor
lret
or
mov
orl
fldl
popa
outsb
pop
std
jg
loopne
sub
fs
adc
or
push
pop
subl
xor
pop
cmc
mov
mov
std
and
clc
add
sbb
ds
push
add
mov
andl
notb
push
and
insb
imul
xor
es
lret
sti
jne
loopne
push
adc
dec
lods
mov
add
sbb
rorb
mov
inc
pop
gs
shl
pop
jge
fistl
sbb
mov
cli
iret
pushf
pop
testb
test
mov
xchg
lods
mov
ds
mov
sbb
xor
pop
rcll
ret
cmpsl
frstor
add
dec
push
nop
sbb
dec
sub
aaa
xchg
xchg
mov
add
sub
iret
push
adc
addr16
ja
lods
dec
add
stos
orl
add
pop
les
and
cs
and
imul
push
add
jle
jo
push
jns
dec
jno
cmp
and
push
push
sarb
pop
sub
jmp
icebp
pop
lods
out
push
push
out
into
iret
adc
dec
orb
inc
sbb
loopne
lret
dec
sub
outsl
xchg
pop
push
movsb
mov
dec
cmpsl
pop
mov
sbb
lds
cmpsb
dec
out
subb
gs
or
add
test
test
ja
push
adc
stc
mov
nop
xchg
pop
push
push
xchg
push
and
lahf
pop
pop
repnz
aam
pop
mov
push
das
and
and
adc
sti
pusha
mov
in
pop
adc
add
mov
dec
pop
sub
sbb
lods
cs
rcr
dec
xor
sub
rcll
add
je
aas
mov
mov
pop
das
jmp
test
adc
or
ds
in
jmp
xchg
leave
mov
aam
mov
push
pop
mov
outsb
jmp
push
add
add
push
fists
ljmp
adc
shll
loop
stc
inc
and
cmc
adc
xchg
xchg
xor
ss
xor
lret
lret
and
jmp
mov
xlat
shll
mov
inc
daa
sbb
sub
push
mov
jg
adc
pop
mov
add
test
mov
idiv
xchg
pop
jge
fidivrs
ret
aas
mov
cmpsl
push
pop
xchg
lret
add
add
repnz
mov
inc
in
jp
and
insl
or
lret
das
or
or
lret
cmp
bnd
sbb
sbb
sbb
lret
in
out
xchg
pop
jp
or
bound
cli
mov
mov
add
jp
pop
adc
inc
sbb
lods
dec
or
movsb
dec
xchg
not
int3
jmp
sub
xchg
push
int3
dec
addr16
jmp
or
fsubr
push
inc
in
popf
xchg
sub
cwtl
mov
mov
pop
jmp
sbb
cmp
pop
cmp
jle
or
and
add
dec
mov
jg
out
sub
add
decb
add
fisubs
sub
fucom
push
sarb
sti
and
mov
pop
not
dec
jno
push
addl
push
push
push
test
loop
cmc
mov
ljmp
in
int3
jo
inc
int
add
and
pop
movsl
inc
xor
or
adc
xchg
and
pop
inc
stc
cs
ret
mov
and
decb
cwtl
push
ret
jmp
movsl
es
xor
xorb
xchg
clc
mov
test
movl
mov
sub
daa
add
ret
mov
shl
and
rcl
pushf
les
imul
adc
leave
shll
scas
imul
sub
xchg
dec
es
imul
lahf
inc
cld
jl
jb
sub
popf
loope
push
pop
jmp
add
mov
sbb
rolb
pop
jmp
jp
and
or
mov
mov
mov
stc
ret
jecxz
jle
pusha
bound
and
stc
fnstcw
lods
mov
repnz
insb
or
fsubs
dec
pop
lock
sbb
aam
bnd
aad
inc
jg
xor
xor
add
inc
sub
lods
xlat
sbb
and
mov
pop
mov
scas
sub
dec
mov
pop
pop
push
sub
rorl
lods
filds
or
add
lret
ljmp
inc
repnz
adc
add
pop
adc
imul
sbb
push
and
jbe
add
gs
movb
adc
push
pop
jb
sbb
pop
inc
jmp
not
xchg
xchg
xlat
adc
sar
mov
ss
cmpb
pop
jo
inc
add
in
pop
mov
pop
and
pop
mov
push
add
jno
nop
test
cmpsl
or
pop
cmp
xchg
dec
push
jmp
pop
subb
test
mov
ret
dec
shrl
jae
push
jg
jmp
loope
inc
aaa
push
jb
les
cltd
push
add
fdivrl
fdivl
push
mov
push
and
or
cli
dec
adcb
popf
jne
and
mov
insb
cs
add
insl
xchg
add
ds
out
push
and
inc
jo
mov
pusha
dec
xlat
ret
xor
out
mov
xchg
adc
pop
mov
or
push
inc
int3
jmp
lock
pop
sub
mov
jb
pop
add
push
push
outsb
lcall
push
inc
in
xor
mov
mov
add
sub
sub
mov
pusha
add
std
add
ret
mov
int
and
das
jl
sub
ds
dec
or
adc
jmp
sub
sub
push
adc
fstl
pop
cmp
lods
mov
enter
mov
lahf
mov
mov
inc
jmp
push
pop
ret
mov
std
out
enter
aam
jmp
pop
sahf
mov
pop
pop
mov
add
jmp
jmp
and
mov
add
out
jp
add
loope
push
outsl
mov
out
sar
mov
add
jno
insb
shrb
std
es
lods
fimull
sub
sbb
arpl
loopne
lds
mov
pop
lods
hlt
in
js
jmp
jecxz
or
jg
scas
popa
mov
aad
pop
mov
and
loopne
dec
adc
es
push
cmp
mov
in
or
add
out
pop
xchg
divl
fidivrs
cmp
ja
sarb
rcrl
push
mov
pop
lret
xor
dec
adc
sub
push
ljmp
add
dec
mov
jecxz
push
sbb
es
add
ja
dec
mov
push
and
das
cld
pop
jle
or
adc
fwait
adc
call
dec
ljmp
aad
or
ds
xor
outsl
mov
lods
fistl
gs
test
dec
mov
mov
xlat
shll
add
xor
test
mov
xchg
fs
fidivl
pop
into
xchg
fldl
outsl
repnz
adcl
fists
imul
jb
add
sub
inc
jmp
imul
lcall
push
mov
or
push
dec
pop
push
nop
xor
aaa
xchg
dec
pop
out
xchg
pop
arpl
lahf
dec
jg
add
pusha
sub
inc
das
add
xadd
sbb
adc
fnsave
test
or
sbb
insb
sarb
jne
ja
sub
nop
dec
les
out
mov
jg
daa
fstps
pop
mov
or
test
fstl
xor
pop
cmp
sbb
adc
push
cld
mov
pop
mov
push
pusha
jns
jecxz
sub
dec
negb
icebp
push
gs
and
cmpsl
push
pop
es
sbb
dec
push
mov
jne
mov
sub
mov
jne
shll
pop
sub
pop
daa
pop
ficoml
repz
ja
daa
or
test
add
inc
int
or
inc
dec
inc
and
mov
dec
jmp
and
xchg
es
test
sbb
cmp
push
push
mov
test
sbb
sub
imul
pop
decb
sub
or
stos
pop
and
inc
jg
lea
popf
jbe
pop
cld
stos
andb
jmp
mov
add
or
pop
outsb
inc
in
sbb
testl
mov
int
cwtl
adc
lods
push
push
pop
sub
or
pop
push
cwtl
fisttpll
add
jmp
neg
stc
sub
and
xor
xchg
add
jo
into
jmp
push
push
test
jmp
mov
cmp
add
lea
dec
gs
test
fnstsw
outsb
mov
nop
xchg
mov
iret
cs
push
out
movsl
std
bound
jge
rorl
or
sub
add
shr
push
add
mov
pop
shr
cwtl
xlat
and
sbb
cmc
in
pop
xor
adc
cmp
and
cld
notb
xor
cmpsl
add
test
xor
inc
mov
inc
test
mov
pop
cwtl
fildl
sub
push
dec
add
pusha
dec
fs
xchg
cmp
xor
fucomp
ret
push
push
push
inc
dec
and
not
add
imul
or
test
adc
mov
push
cld
cmp
or
jmp
lcall
hlt
mov
sub
sbb
and
gs
or
cmc
and
idiv
dec
cmp
movsb
fsubl
mov
add
push
daa
cmp
add
ja
mov
push
xchg
push
outsl
clc
repz
pop
pop
adc
mov
rcrl
in
test
xchg
in
sub
fcomps
cmp
adc
or
pop
test
add
pop
mov
fmuls
cmpsb
add
push
and
mov
adc
sbb
insb
scas
test
lahf
cwtl
cmp
faddl
out
enter
jb
in
sbbb
gs
rorl
push
sub
lods
ja
fcmovnbe
aas
pushf
fucomip
dec
mov
loopne
inc
sub
cmp
mov
adc
cld
pop
ja
push
stos
mov
into
sbbl
cmp
inc
sub
adc
or
push
pop
loop
lahf
int3
mov
push
add
or
int3
xchg
mov
and
pop
push
mov
popf
add
div
pop
int
add
fsubrl
push
push
xor
icebp
cmp
jl
sub
lcall
sub
dec
inc
mov
ds
orl
push
cmp
jmp
test
pop
inc
sbb
mov
cmpb
orl
mov
jb
cld
call
or
sbb
into
mov
imul
test
lds
ja
push
lahf
push
addl
pop
sti
jp
mov
pop
mov
dec
dec
scas
pop
repz
jecxz
cmp
in
sub
sub
fdivs
stos
inc
and
repnz
cvtpd2pi
dec
inc
add
in
and
pusha
in
mov
pop
clc
imul
cmp
mov
cld
and
mov
mov
outsb
adc
test
inc
xlat
pop
lahf
xchg
pop
cli
xchg
mov
push
mov
jmp
dec
jno
lret
fdivl
daa
pop
jb
adc
bound
push
cmp
inc
or
daa
and
cli
sbb
mov
adc
scas
inc
mov
inc
std
push
jecxz
sbb
dec
sar
mov
add
push
aad
mov
adc
jge
pop
cwtl
add
adc
xor
jne
popf
pop
push
jmp
addr16
xor
aas
loope
sub
dec
xchg
loopne
push
mov
jns
scas
xor
adc
fs
adc
in
or
xlat
stos
jo
lahf
ret
fdivs
daa
mov
mov
xor
push
fidivrs
sbb
or
lods
data16
cmp
loopne
lcall
sub
cmp
xchg
in
cmp
push
adc
xchg
movl
sub
push
pushf
adc
negl
popf
jbe
pop
sub
jl
bswap
push
stos
std
jne
stos
sub
sub
add
pop
ljmp
fs
test
jno
mov
icebp
jno
mov
jns
dec
cmpb
jne
das
cld
sti
add
push
adc
mov
movsb
pop
mov
adc
mov
xchg
clc
lock
rcrl
cmp
push
push
rcll
dec
testb
jne
sub
mov
shrl
and
add
stos
fists
xor
adc
rclb
or
std
lret
inc
lods
add
or
test
stc
xor
push
cmp
xor
cwtl
imull
push
nop
pop
test
add
aam
jns
sub
dec
dec
inc
and
je
fstps
out
lock
addr16
add
gs
aas
mov
xchg
mov
hlt
insb
dec
enter
sahf
int3
add
outsl
mov
add
cmp
test
push
xor
incb
add
xchg
dec
cmc
out
shlb
add
ljmp
mov
mov
loopne
push
mov
jnp
mov
movsl
adcl
nop
mov
lahf
push
pop
mov
sub
loopne
jno
imul
enter
cmpb
mov
ret
add
pop
push
jmp
mov
add
sbb
loopne
mov
mov
adc
mov
jns
std
adc
inc
pop
test
notl
xchg
or
sub
push
aam
or
sub
sbb
push
or
loopne
xor
dec
sbb
push
sub
jp
jmp
xor
test
add
jg
fcomps
cmp
inc
pop
cmp
dec
adc
js
sub
ret
push
jmp
push
mov
mov
sbb
push
pop
mov
xor
adc
iret
sub
dec
pop
or
incl
imul
dec
stos
cmpsb
rorl
jmp
sti
sbb
add
push
imul
add
push
jb
loope
mov
pushf
add
jmp
dec
add
add
pop
rclb
int3
loopne
popa
outsl
or
jmp
jnp
lahf
sti
inc
mov
lret
xchg
push
xchg
rcrl
repz
lahf
pop
adc
sbb
mov
cltd
leave
mov
ja
mov
mov
sti
mov
xchg
add
jg
cwtl
cmpsl
jg
sarb
inc
enter
push
mov
jo
jnp
xor
testb
cwtl
add
and
cmp
or
inc
push
lret
cmpsb
clc
fs
movsl
add
sbb
mov
in
xchg
inc
ret
jge
outsl
jne
xor
or
ret
cli
aad
sbb
jne
dec
push
mov
add
inc
pusha
add
xchg
loop
mov
lea
sarl
mov
mov
pushf
sub
scas
or
xchg
push
stc
sbbb
mov
lahf
inc
mov
or
rcll
lock
lods
mov
icebp
loope
push
enter
rcll
inc
sarl
sbb
not
push
push
mov
push
pop
test
cli
sub
arpl
add
cld
pop
shr
xchg
adc
cmpsl
arpl
sti
xchg
les
adc
outsl
sbb
mov
cltd
std
into
fistpll
push
add
shlb
loope
popa
in
and
movsb
push
pop
push
sbb
or
adc
cmc
sub
cld
and
in
add
test
pop
pop
das
je
test
sbb
loope
sbb
pop
bound
inc
sbb
add
or
push
addl
jmp
xchg
test
sbb
das
pop
jne
xor
cmp
xor
js
into
dec
pop
mov
adc
je
inc
adc
push
mov
sub
out
xchg
cli
and
inc
inc
loopne
inc
jg
adc
ljmp
dec
mov
mov
aad
lock
mov
fnstsw
mov
or
shlb
pop
and
in
out
das
mov
std
push
sub
adcl
int3
leave
mov
fistpl
mov
mov
call
mov
sub
or
cltd
loope
data16
or
mov
lret
jne
mov
xorb
or
jae
popf
sti
loopne
add
push
test
mov
pop
fsub
addr16
mov
and
test
sub
mov
fcoms
and
sub
and
xchg
incb
add
dec
jge
pop
add
movsb
aad
or
bound
sti
nop
cmpsl
jmp
pusha
rolb
add
cli
dec
adc
adc
or
push
movsb
call
in
pop
and
lea
adc
sub
mov
mov
js
pusha
shl
sbb
mov
dec
loopne
and
push
and
shlb
sbbb
fildl
mov
fdivrs
mov
pop
pop
push
mov
les
mov
mov
stos
lret
mov
daa
mov
leave
pop
adc
pop
pop
mov
js
and
push
pop
ljmp
mov
mov
pusha
sbb
sub
mov
das
fs
daa
shr
rcll
add
dec
repz
or
cli
pop
or
pop
jmp
sbbb
xor
mov
cmp
lds
or
jbe
test
or
adc
jmp
mov
loop
inc
mov
ret
inc
scas
cmp
or
inc
inc
movsb
btl
daa
scas
lcall
inc
mov
sti
lret
mov
push
adc
or
lret
push
invd
jg
push
or
dec
inc
jns
repz
add
jne
shl
sub
inc
xor
dec
fisubrl
and
push
notl
add
cld
jecxz
icebp
pop
fcmovne
sbb
or
or
fucomp
arpl
fwait
and
test
daa
jmp
mov
cs
add
pop
jmp
cmp
xlat
pop
movsl
cli
sub
loopne
inc
mov
sbb
cmc
add
or
xor
add
mov
pop
cmc
and
xor
cmp
xchg
push
jnp
stos
or
loop
pop
push
xchg
rol
adc
out
fwait
mov
pop
xchg
cmp
or
fmuls
inc
je
mov
xlat
inc
mov
cmp
shrd
repnz
pop
mov
stos
pcmpeqb
mov
int
pop
fs
or
sub
cmp
push
add
sbb
ds
mov
cli
mov
out
add
push
ret
add
aaa
add
pop
inc
add
adcb
xchg
aam
jbe
jle
mov
add
inc
pop
incl
sub
or
mov
dec
add
punpckhwd
sub
adc
adc
and
stos
mov
mov
add
and
lret
imul
leave
stos
pusha
das
add
loope
test
dec
orb
inc
ret
nop
xchg
pop
shl
dec
shll
add
xor
daa
and
dec
fidivrs
daa
fistps
xchg
imul
sbb
dec
dec
jg
xchg
lcall
mov
popf
je
add
jl
sbb
sbb
add
inc
lods
iret
dec
xor
test
xchg
sub
fnstcw
lods
mov
test
lods
arpl
add
push
insl
jne
cmp
enter
shll
mov
or
cmpl
xorl
or
and
pop
push
pusha
das
sub
jge
add
cmc
cmp
jg
lret
inc
push
sub
sub
add
pop
int3
mov
mov
orb
rorb
lret
or
adc
mov
in
add
lock
push
cmp
jne
sbb
sub
fdiv
mov
arpl
cmp
mov
sti
xchg
pop
xchg
adc
add
lods
jb
movlps
cmp
mov
aad
subb
ja
shlb
in
dec
sub
xor
pop
outsl
faddl
jg
add
fadd
ds
jbe
int
add
add
jge
cmc
mov
test
fiaddl
push
mov
mov
ror
ret
sub
pop
dec
add
push
or
sbb
sub
stos
hlt
and
add
test
jo
fistl
jl
bound
lds
pushf
or
push
mov
int
int
adc
dec
loope
cs
stos
fucom
sub
in
cmpsl
adc
stc
and
jmp
adc
aam
pop
adc
negl
shlb
sbb
lds
dec
pop
dec
cmp
or
lods
das
mov
jmp
aas
lret
jnp
popf
add
faddl
jns
pop
shl
or
push
push
rsm
inc
jle
xor
dec
cwtl
lods
push
fimull
dec
js
pop
push
push
adc
scas
movsl
js
jb
adc
repz
cmpl
sub
pop
jecxz
ret
hlt
jne
mov
enter
mov
add
jno
and
xor
rorb
dec
clc
fucomi
clc
xchg
cmp
daa
stos
js
or
sub
mov
fisttps
or
mov
bound
and
push
mov
sub
or
push
aaa
rcrl
inc
sub
lods
mov
jl
push
add
push
enter
mov
pop
sbbb
dec
mull
push
loop
cmpl
sarb
push
jmp
cld
and
pop
leave
mov
xor
inc
pop
insb
add
push
xlat
adc
push
jg
insl
add
incb
cmpsl
cwtl
and
mov
or
data16
in
xchg
jno
test
mov
jne
dec
adc
or
jbe
insl
pop
mov
cmp
imul
adc
pop
push
push
xor
lret
push
sbb
mov
sbb
dec
pop
in
stc
in
mov
outsb
enter
xchg
in
fisubl
push
mov
mov
popa
jns
add
lea
bound
fstpt
pop
fst
and
push
lds
xor
movsb
mov
das
ja
and
stos
aad
cmpsl
hlt
mov
sbb
enter
or
or
pushf
adc
sti
add
sub
ljmp
fadds
jp
pusha
jl
imul
inc
inc
jmp
xor
imul
and
adc
sub
lock
push
adcb
push
pop
xchg
add
cmp
frstor
jmp
in
addl
and
xchg
xorb
jmp
mov
inc
sub
pusha
sbb
dec
js
pop
pop
push
jae
or
sub
outsl
add
pop
out
pusha
clc
repz
pop
sbb
pop
adc
or
inc
test
jl
stc
aam
bound
pop
push
lcall
imul
push
dec
cmpsb
cmp
incb
or
push
testl
add
push
jmp
mov
leave
xlat
jns
movsb
jno
dec
rcl
lret
xlat
jl
cmpsl
ficompl
mov
xor
pop
push
push
incl
test
or
test
pop
aad
imul
jmp
in
cmp
push
mov
das
rclb
mov
add
pop
pop
jg
scas
mov
lar
and
test
xor
mov
or
pop
cmpsb
fiaddl
jne
sub
sbb
push
adc
aas
movhps
xchg
fidivrs
jp
stc
xchg
sub
and
out
inc
or
and
inc
and
and
je
mov
xchg
jl
and
testb
test
mov
cld
test
pop
cli
es
nop
es
jmp
insb
and
mov
adc
add
sbb
nop
ret
push
fadd
inc
cld
sti
and
jmp
lock
xchg
jmp
cmp
sbb
pop
shl
push
or
std
or
in
jae
mov
mov
and
test
sbb
hlt
cld
orb
test
jle
jp
jl
mov
mov
repz
das
pop
fisttps
add
mov
push
pop
not
push
iret
enter
push
mov
mov
out
mov
mov
shr
or
sti
insb
pop
test
shrl
xor
test
call
sbb
ds
mov
xchg
push
fsubrl
inc
adcb
sub
incl
popa
mov
movsb
and
test
dec
mov
in
leave
std
mov
mov
mov
aas
arpl
jge
loope
pop
pusha
les
std
or
sub
mov
jle
jmp
inc
jno
movsl
outsl
sub
sub
pop
leave
fsubrp
shrb
inc
lahf
test
shlb
xchg
dec
push
pop
jecxz
mov
jbe
fmuls
sbb
inc
push
add
adc
mov
add
int
mov
adc
rcll
xchg
xlat
sub
fistpl
jmp
mov
out
in
jns
loop
testb
xchg
shrb
push
pop
xchg
adc
cmp
adc
mov
or
jae
or
rcrb
or
cmc
and
jb,pn
imul
or
pop
test
in
mov
cmp
push
jmp
pop
mov
ds
dec
add
add
fnstenv
cmp
mov
push
arpl
sbb
arpl
rcrb
addr16
rcrl
int3
xchg
inc
jp
xor
pop
mov
sti
or
cmp
test
arpl
mov
push
and
orb
clc
rcrb
push
lods
pusha
test
rclb
cld
scas
sbb
cmp
addr16
std
and
stos
cltd
push
in
sarb
mov
or
xor
aam
stc
nop
sub
popa
jo
cmp
test
or
pop
add
push
mov
sub
pop
ja
add
pushf
gs
stc
pop
fisttps
pop
stos
pop
pushf
mov
jns
cli
mov
sbb
jecxz
popf
hlt
mov
adc
popf
in
lods
cld
and
inc
js
movlps
mov
or
sub
push
jecxz
or
ret
int
sub
xor
test
sub
popf
clc
inc
addl
je
mov
push
shll
jno
add
js
cmp
aam
pop
std
dec
mov
mov
xchg
xchg
je
and
xor
pop
add
and
insl
jmp
dec
test
and
pop
jbe
dec
into
scas
cmp
jno
pop
or
pop
pusha
cmp
push
jno
je
xor
sbb
dec
or
push
loopne
or
sbb
inc
jb
inc
imul
or
add
sbb
inc
push
or
jbe
sbb
or
inc
cmp
push
test
loope
add
mov
or
or
bound
lds
pop
sbb
lret
push
and
sbb
inc
ret
lea
pop
cmp
mov
je
cmc
mov
ja
fisubl
sbb
cld
or
and
and
imulb
int3
xor
or
xor
push
sbb
sbb
das
pop
or
out
adc
les
push
pop
or
or
enter
mov
addb
push
mov
mov
cld
sbb
aad
mov
ja
or
add
or
sbb
mov
add
fnstenv
dec
andb
inc
ja
adc
icebp
mov
inc
dec
adc
xor
nop
inc
mov
or
sbb
lahf
orl
mov
fcomip
or
or
int3
loope
or
inc
dec
into
testl
test
mov
inc
xchg
test
push
std
loope
mov
and
pop
lea
arpl
nop
clc
sbb
pop
add
cli
xchg
icebp
lds
andb
dec
decl
push
or
shll
mov
fstps
sbb
sub
xor
mov
daa
adc
or
sub
pop
pop
fmuls
sbb
inc
les
stc
adc
insl
or
sbb
int3
or
xchg
inc
and
andb
sub
fistps
adc
xor
add
lds
dec
and
test
int3
test
push
mov
sarl
enter
mov
lock
inc
ds
inc
xchg
inc
inc
call
xchg
lret
or
jnp
popa
scas
fs
push
popa
cs
push
mov
add
xor
jmp
rorl
jg
xchg
inc
data16
push
mov
dec
pop
cli
inc
cvtps2pi
push
lea
fdivrs
push
inc
mov
dec
call
push
add
aad
test
dec
ret
jno
shrl
sub
pop
pusha
call
aas
iret
or
rolb
mov
push
jmp
add
insb
xor
repnz
sbb
push
pop
or
aas
cmp
enter
leave
out
lock
or
fnstcw
inc
pop
out
icebp
idivb
sbb
jmp
notb
jmp
jecxz
clc
cwtl
pop
add
sub
jnp
add
stos
jae
sub
outsb
cmp
pushf
pop
shr
outsl
add
ficoms
push
sub
xchg
adc
testl
movsl
addr16
sub
dec
jmp
push
sbb
pusha
popf
pop
pop
andb
cli
mov
sub
mov
or
xchg
push
lds
xchg
pop
stc
jae
movsl
fbld
dec
jns
xor
mov
notl
mulb
daa
jno
mov
ficoms
pop
xor
xchg
jg
add
push
or
xchg
or
add
inc
xor
pop
xchg
dec
mov
inc
or
js
push
xchg
mov
or
arpl
sbb
jecxz
mov
fbstp
pusha
push
lret
pushf
lcall
jge
mov
mov
outsl
and
cld
add
sub
push
push
jmp
push
fnstcw
push
mov
mov
and
jle
shr
in
andb
add
mov
ljmp
pop
pop
pop
push
push
fcmovnbe
bound
dec
mov
dec
xchg
xchg
dec
lahf
roll
adc
and
sub
sbb
test
pop
ds
inc
scas
cmp
jb
add
mov
ja
stos
movsl
lods
lds
je
xchg
mov
in
jmp
or
rclb
nop
std
push
mov
out
insl
cmp
rolb
lret
sbb
push
mov
cld
test
push
aaa
pop
pop
jmp
mov
int3
mov
mov
popa
fisubl
adc
js
mov
jg
out
dec
push
imul
push
add
in
push
sub
dec
arpl
jbe
push
stos
subl
add
and
push
scas
xorb
data16
pop
mov
and
and
or
add
xchg
xor
pop
add
aad
mov
aad
cmpsb
adc
mov
notl
lahf
xchg
int3
dec
push
sahf
sub
cmp
add
pop
ss
das
out
sbb
sub
push
es
bnd
cli
pusha
xchg
xchg
push
sbb
push
das
jns
dec
push
out
mov
push
and
mov
dec
xchg
in
cmp
icebp
add
pop
and
pop
orb
fwait
ss
outsb
sbbl
scas
adc
ret
sbb
int3
or
rclb
add
mov
subb
pushf
jmp
ret
imul
stos
sub
and
mov
fidivrl
jne
cmp
and
lock
das
jmp
mov
aad
mov
in
pop
arpl
lret
or
cmp
sbb
inc
mov
pop
ljmp
jne
jle
jmp
add
adcb
jmp
incl
xchg
mov
sbb
adc
das
mov
ds
dec
fldenv
sub
push
pop
mov
orl
or
movsl
pop
orb
jmp
mov
mov
test
xor
sbb
mov
push
push
xor
sbb
sbb
rolb
orps
xchg
dec
and
jnp
out
shrl
cld
ss
mov
dec
xchg
push
push
ljmp
mov
addb
jl
call
sub
and
cmp
or
mov
pusha
mov
cli
adc
mov
adc
adc
jnp
mov
stos
cmp
inc
jmp
bound
jl
loopne
push
imul
stos
sbb
xchg
cmp
xchg
adc
push
push
jo
test
dec
je
rcrl
enter
std
push
push
sub
into
popf
dec
mov
jnp
jmp
inc
shl
mov
inc
push
into
push
test
addl
and
jecxz
mov
ret
pop
sub
or
push
jbe
loope
sti
sub
add
dec
add
hlt
push
mov
and
cs
jge
scas
add
addb
cmpsl
mov
ljmp
sub
pusha
and
negl
hlt
xor
out
push
or
mov
dec
mov
mov
rolb
cmp
ds
mov
jge
adc
pop
stos
jmp
fnstsw
add
pop
add
outsl
sbb
inc
sub
sub
add
or
pop
mov
inc
push
sarb
add
ficomps
add
mov
dec
sub
jp
adc
or
mov
std
mov
add
cmp
fildl
pop
sub
lahf
lret
pop
xor
jmp
pop
imul
gs
xchg
roll
movsb
jbe
stos
mov
cli
enter
and
pop
and
iret
jb
inc
cmp
rcrb
and
sub
insb
aas
push
repz
jge
inc
add
mov
das
cwtl
mov
and
and
push
add
loop
aad
dec
add
adc
push
sti
mov
test
xor
pop
fists
out
nop
sbb
mov
mov
sbb
add
or
add
pop
hlt
mov
inc
mov
mov
daa
arpl
repnz
addb
int
push
dec
pop
inc
mov
sub
aad
aaa
gs
call
xor
jle
xor
insb
or
outsl
jo
jmp
out
jo
pop
popf
enter
rol
mov
das
mov
add
push
rol
in
xchg
jne
icebp
sbb
cltd
inc
fstps
push
test
icebp
add
mov
insl
orb
fldl
add
push
andb
inc
movsb
cmp
add
sbb
jmp
mov
inc
xlat
push
sub
inc
push
jmp
xor
mov
push
mov
out
mov
dec
push
clc
and
loop
sbb
lods
mov
jge
lret
ljmp
push
jbe
push
loope
roll
aas
ficoml
pop
fadd
daa
xchg
sarb
jmp
push
sbb
in
rol
mov
loopne
push
nop
and
add
xchg
dec
and
pusha
vmulsd
test
out
lock
mov
popf
pop
xor
pop
push
jbe
add
testl
dec
loope
test
xorb
or
fsts
dec
dec
jno
jo
xchg
jne
test
insl
xchg
out
mov
loop,pn
pop
mov
dec
dec
push
xchg
or
frstor
mov
popa
jmp
shl
not
add
sbb
push
pushf
push
stos
cltd
lret
icebp
mov
and
rcrb
lahf
out
jle
add
int3
sbb
pop
ja
ja
jge
out
in
std
cwtl
std
popa
je
arpl
pop
fsubs
gs
aas
adc
push
inc
loope
cld
cwtl
neg
cvtpi2ps
jns
sbb
and
jmp
xchg
scas
add
popa
jmp
xchg
test
pop
push
ret
lret
mov
pop
js
dec
roll
jge
and
xor
out
maskmovq
xchg
inc
ret
jo
pop
and
adc
mov
cmpsl
xchg
or
jmp
dec
arpl
sub
stos
or
aas
xchg
ret
sbbl
push
push
add
dec
mov
mov
add
jb
pusha
add
cmp
jae
into
test
ret
jmp
mov
push
jns
scas
jp
adc
cmp
sub
jmp
imul
les
icebp
or
cmp
dec
mov
jbe
mov
sbb
cmc
jmp
sub
mov
jns
cmp
or
push
dec
out
and
jp
or
pop
enter
sbb
cmp
xchg
pop
ds
push
adc
sub
or
das
out
pop
inc
mov
shll
xor
dec
xor
mov
jle
jmp
movsb
xor
inc
lds
imul
dec
add
cmpsl
push
test
cwtl
push
add
jne
or
das
lret
subb
lods
add
bound
out
fst
stc
stc
and
jnp
add
aas
data16
mov
out
add
jp
test
lods
daa
cmp
lods
jno
nop
jecxz
adc
mov
dec
pop
add
jae
mov
jmp
or
dec
sbb
ficoms
mov
cwtl
aaa
push
add
shlb
ljmp
cwtl
cs
das
dec
push
shrb
cmp
sub
jg
add
dec
call
or
ljmp
cmp
add
fwait
inc
pop
mov
pop
sbb
shrl
enter
les
ret
sbb
adcl
lret
and
pop
or
inc
push
push
fucomp
xor
or
adc
pop
invlpg
pop
jge
dec
and
je
je
stos
cmpsb
jg
push
dec
push
and
das
jne
add
push
xchg
pop
dec
mov
jmp
dec
gs
fsubs
mov
cltd
jle
pop
and
ret
adc
mov
xchg
sub
inc
push
mov
inc
sbbb
notb
call
or
jnp
push
cmp
push
push
lds
push
pop
pusha
and
or
cmpsb
insb
inc
push
inc
and
jp
add
sbb
test
imul
movl
loopne
ja
cld
dec
lret
movsb
sub
mov
jo
or
pop
cli
mov
stc
mov
ljmp
push
push
adc
push
movsb
xor
add
mov
pusha
sub
mov
adc
loopne
in
leave
and
and
sbb
mov
xchg
jno
or
fidivs
dec
clc
mov
xor
add
push
xor
xchg
adc
inc
imul
pop
xchg
lock
pop
mov
inc
mov
jmp
xor
or
fiadds
sub
pop
bound
pop
jno
dec
push
adc
out
add
fnsave
cmp
mov
in
jmp
pop
cli
outsb
xchg
movsb
pop
pop
mov
mov
hlt
adc
in
icebp
movsb
mov
xlat
mov
mov
jg
jmp
push
pause
pop
jge
jns
pop
mov
insl
push
ret
mov
shlb
ss
pop
or
pop
jno
cmp
insb
push
jg
cmp
or
and
push
mov
test
addb
sub
push
movsb
sbb
push
aad
mov
jmp
repnz
jle
push
icebp
adc
pop
jl
lds
add
mov
add
pop
push
std
or
insb
jg
mov
fstps
xchg
pop
lods
add
jmp
mov
or
inc
aam
cmp
adc
fldl
movsb
pop
or
or
loopne
in
sub
faddl
inc
or
rcll
sub
dec
xor
adc
and
mov
sahf
in
in
sub
cli
pop
dec
scas
in
xor
jne
add
cmp
sbb
sub
adc
mov
stos
sub
jne
sti
mov
les
or
cmp
mov
rcl
cli
or
xor
sub
mov
jp
add
sub
jbe
jbe
and
add
or
stos
add
pushf
and
lcall
in
loope
arpl
adc
cmp
repnz
cmp
lret
sub
mov
sti
in
push
aas
and
pop
stos
cmp
add
adc
dec
ret
inc
or
lods
adc
ja
push
mov
enter
shl
jne
pop
lahf
fs
inc
in
xor
in
out
jecxz
dec
loop
mov
pop
scas
fnstsw
insl
js
dec
shr
sub
sub
or
or
sbb
xchg
not
dec
or
mov
pop
and
pop
xor
movsb
ljmp
test
cmovae
jne
hlt
mov
nop
inc
adc
repnz
pop
dec
lret
jg
div
xchg
inc
loopne
rcll
dec
pop
xchg
aas
loope
lock
fcompl
icebp
out
imul
fidivrs
test
cmp
leave
adc
addl
int
movsl
jne
in
pop
xchg
add
ret
cs
andl
mov
pop
mov
xor
pop
test
or
imul
pop
fwait
push
push
mov
adc
call
push
add
outsb
mov
and
daa
jmp
add
add
push
xchg
cmc
pop
xor
pop
or
xor
sub
xchg
loopne
or
in
add
push
lock
sti
ficompl
adc
fadds
push
icebp
ret
pop
das
push
push
cwtl
push
add
sub
testb
pop
in
lds
mov
movsb
sub
add
shl
sub
add
mov
lahf
xchg
ljmp
loop
or
or
push
push
sbb
daa
mov
xchg
loope
pop
and
jp
sbb
decl
pop
pop
jo
popf
jne
les
stos
or
lahf
sub
pop
test
jge
adc
es
cmp
filds
addr16
sub
add
daa
sbb
ss
and
aas
in
loop
push
fldt
or
in
xchg
ss
les
clc
fadds
testb
insl
push
jecxz
adc
xchg
push
sub
sbb
dec
or
test
or
pop
or
imull
pusha
call
les
or
push
mov
mov
adc
pusha
pusha
subb
push
jno
dec
dec
mov
stc
adc
sbb
adc
jne
cmp
sbb
xor
lock
dec
rcrb
or
cmc
inc
pop
test
sbb
adcl
aam
push
sub
mov
pusha
push
mov
cmpb
push
mov
mov
push
in
xchg
repnz
push
push
sbb
aad
jmp
mov
push
lcall
cmp
pusha
in
adc
push
jmp
out
enter
out
jno
insb
stc
push
push
and
pop
or
mov
data16
mov
xor
jmp
cmp
jp
divb
push
adc
dec
pop
mov
lret
fists
iret
and
test
jecxz
adc
push
jbe
push
push
pop
and
sbb
xchg
mov
sbb
testl
jecxz
adc
pop
ljmp
pop
push
cltd
insb
pop
jne
into
pop
adc
dec
push
pop
add
push
add
jae
sub
xor
shr
movsb
adc
arpl
or
dec
jl
mov
push
pop
rcll
push
sub
sbb
jne
leave
push
outsl
pop
jnp
jne
pop
aad
push
push
add
cmp
ret
data16
mov
nop
cwtl
jae
push
lret
push
push
mov
inc
ljmp
shl
adc
test
pop
cmp
repz
insl
rolb
inc
and
test
aas
js
in
or
push
mov
pop
and
add
jmp
pusha
insb
insl
adc
sbb
pop
xchg
or
jmp
add
bts
pop
push
js
dec
ret
sbbl
push
mov
pop
jl
fldenv
mov
repnz
jmp
cmp
pushf
clc
in
mov
mov
loop
ret
stos
scas
add
sub
ret
mov
imull
jmp
and
push
mov
outsl
sub
jmp
dec
scas
sub
jl
mov
adc
out
dec
decb
pop
or
lds
leave
add
cli
add
test
and
and
jno
or
inc
dec
xor
jmp
xor
xor
dec
jmp
stos
jno
sub
aam
out
test
pop
aas
ret
sbb
xor
fwait
fs
lea
push
xchg
call
popl
jmp
sub
sbb
aas
push
push
jle
jb
clc
mov
mov
shr
jmp
sbb
clc
jns
cld
push
or
or
pop
pop
hlt
int
and
xchg
push
loope
add
jno
add
sbb
xchg
push
mov
add
and
xchg
mov
fcoml
fists
rcr
sub
xchg
add
jmp
add
pop
pop
in
cmp
dec
jmp
pop
xor
iret
xchg
ret
call
bound
push
daa
push
lds
push
notl
scas
xchg
loop
dec
push
xchg
push
mov
ret
pop
jp
das
sbb
mov
push
pop
jmp
ja
pusha
push
cmp
add
shll
add
pop
dec
stos
loop
shrb
and
xor
outsl
adc
jae
xchg
push
jp
add
data16
add
cmpb
into
xor
and
test
addr16
cmc
aas
lret
mov
scas
xor
or
adc
ficomps
inc
je
imul
mov
ficoms
lds
pop
or
jmp
test
jge
pop
js
jo
sbbb
push
dec
pusha
outsb
push
lret
pop
push
ja
xor
loopne
cmp
jp
fisttpll
mov
daa
jge
icebp
pop
pop
fadds
or
cmp
pop
and
jmp
popa
sub
pop
fcoml
or
rcll
cmp
cmpl
and
sbb
push
add
ret
adc
or
jmp
or
xchg
pop
adc
ljmp
repz
imul
jp
daa
mov
add
pop
mov
or
pop
test
cmp
sub
pusha
jl
adc
pop
dec
mov
mov
and
xchg
lret
jg
push
fs
mov
jb
push
mov
jne
shrb
push
and
lods
add
dec
test
dec
gs
into
popf
sbb
push
add
aad
lret
pop
lret
aam
stos
adc
dec
inc
pop
xchg
mov
fwait
pusha
adc
jmp
clc
lea
sar
mov
or
xchg
mov
adc
or
push
jmp
or
xor
mov
mov
xchg
pop
sahf
add
mov
dec
and
or
adcb
adc
jne
gs
or
sub
sarl
out
out
push
or
jo
insl
xchg
je
jo
leave
mov
lahf
dec
or
xorl
ret
fstp
cmpl
jno
mov
cli
jne
popf
loopnew
adc
and
inc
push
pop
push
jle
and
add
sbb
sbb
fnstenv
pop
lods
xchg
nop
pop
pop
loope
inc
add
sbb
mov
jle
push
jne
mov
push
shr
dec
inc
inc
xor
loopne
cmc
and
cmc
shlb
pop
mov
enter
or
shll
inc
adc
aam
or
pop
jmp
aas
icebp
xor
or
sbb
inc
ja
xor
mov
adc
xor
push
pop
fnstsw
sub
or
push
das
fstl
std
jbe
push
imul
or
add
inc
ja
cwtl
popf
call
jge
inc
cs
dec
mov
stc
popf
shr
add
sahf
push
mov
scas
inc
mull
aad
popa
add
loopne
cwtl
and
mov
mov
bound
hlt
or
cmp
add
imul
cmp
fsub
pop
jg
cltd
pop
pop
xor
jb
sub
daa
push
shrl
adc
mov
fcoml
jns
scas
sbb
inc
xor
push
daa
mov
push
call
jae
dec
add
sub
sti
add
mov
ljmp
sub
inc
xchg
pusha
fistpll
cmpsb
lods
jmp
out
and
dec
jmp
not
mov
ret
or
jmp
ror
in
ret
adc
pusha
mov
add
jg
push
mov
enter
outsl
jns
fisubrs
inc
push
or
xor
imul
adc
cmp
gs
test
aas
ljmp
insb
mov
sbb
adc
mov
jmp
gs
add
pop
test
adc
mov
mov
dec
popf
lds
ja
aaa
sbb
sub
jne,pn
lret
out
sub
cmp
dec
jecxz
add
shrb
sbb
inc
push
ss
jle
sahf
pop
jmp
sbb
mov
jle
dec
jl
mov
inc
push
jb
mov
pop
das
cmpsb
mov
dec
xor
mov
ret
add
hlt
enter
aam
pop
in
pop
addl
lahf
gs
movsb
in
adc
add
dec
js
cmpb
add
in
xor
rcrb
push
push
jmp
pop
xor
adc
cmp
test
xor
psubsw
int
push
mov
push
xor
adcl
add
cmpsl
pop
sbb
jp
icebp
add
adcl
jmp
scas
xchg
xor
dec
sub
test
rolb
out
mov
enter
xchg
adc
divb
and
add
mov
pop
shl
in
mov
jmp
sbb
push
inc
cld
sbb
jge
pushl
pop
mov
nop
in
ljmp
mov
adc
fisubrl
test
insb
xor
int3
out
rorb
mov
enter
pop
clc
xchg
pop
xor
test
inc
xchg
sbb
mov
lods
mov
or
xor
add
dec
push
jl
into
inc
movq
fucomi
and
or
out
jno
rcrb
mov
int
stos
sub
jle
mov
int3
jo
cmp
mov
and
adc
xchg
cld
inc
out
nop
jg
xor
in
add
sub
das
cmp
jmp
mov
repnz
dec
cmp
das
mov
jae
js
nop
mov
sub
mov
cmp
mov
pusha
push
cmp
ja
test
fsubrl
test
or
out
pop
fwait
cmp
icebp
sub
je
push
nop
or
popa
daa
lea
cld
adc
add
subb
push
jl
adc
testl
or
icebp
inc
les
sbb
loopne
icebp
dec
mov
shrl
test
test
push
ljmp
aaa
push
push
bound
mov
and
mov
sub
jmp
push
addb
jmp
lret
push
rolb
out
clc
cld
jo
or
jmp
enter
out
jnp
jno
mov
hlt
xlat
ffree
sbb
mov
lret
and
cmp
push
repnz
add
pop
push
push
push
pop
pop
in
push
mov
or
sbb
jb
dec
xchg
cmpl
clc
push
add
cwtl
xor
cmp
shlb
lahf
sti
mov
pop
sbb
mov
add
cs
mov
push
xor
mov
push
sbb
add
xchg
push
adc
cmp
add
mov
fmull
push
adc
jb
out
add
pop
hlt
lahf
lcall
roll
push
mov
dec
lds
push
sbb
sub
imul
pop
sub
jmp
xchg
in
add
push
jmp
popf
push
iret
xchg
into
fadds
dec
dec
lret
cmpsl
stos
add
pop
jp
add
xchg
faddl
inc
push
leave
movswl
js
jae
outsl
rcrb
dec
ret
loope
and
daa
mov
or
loope
and
das
sarl
in
lds
insb
xorb
loope
jmp
pop
mov
jle
and
or
ud1
outsb
es
repnz
push
icebp
pop
call
xor
inc
mov
pop
pusha
nop
shr
loop
xchg
mov
push
inc
rclb
add
outsl
cmp
sbb
cmc
shr
hlt
mov
test
std
pop
idivb
dec
or
pop
jmp
mov
mov
mov
sbb
das
ljmp
jmp
sbb
out
xor
sub
pop
movb
dec
or
ret
pusha
mov
pop
xchg
jbe
push
das
loopne
mov
dec
insl
mov
pusha
push
pop
shll
data16
or
xchg
mov
addb
xorl
xorl
subl
cmpsl
inc
and
push
mov
dec
push
icebp
dec
and
or
and
test
add
loop
push
mov
je
add
push
lret
ss
stos
adc
adc
cmp
push
mov
clc
arpl
dec
dec
loop
add
push
jge
xor
or
adc
outsb
push
nop
jmp
cmp
out
inc
jecxz
in
int
inc
jnp
int
adc
rcrb
popa
flds
pop
addr16
jnp
mov
cmp
sub
or
shlb
pop
rolb
sbb
dec
push
movsb
sbb
out
xor
jne
sarl
lahf
adc
adc
or
orb
xchg
imul
pop
ds
xor
xor
xchg
xor
or
or
adc
cmp
fistpl
push
sub
rep
mov
cmp
dec
jmp
push
in
adc
mov
stos
fs
mov
dec
fdivrs
xchg
rorb
pushf
inc
or
xchg
mov
jne
pop
push
mov
test
out
push
adc
movsb
repnz
subb
sub
xor
pop
add
mov
je
fwait
test
aas
shrl
arpl
sbb
mov
adc
cltd
dec
lock
adc
pop
mov
push
cld
xlat
add
xor
je
and
jmp
or
aas
loopne
imul
add
outsb
mov
mov
add
push
test
mov
dec
push
lret
push
xchg
or
jmp
dec
adc
push
pop
add
add
xchg
es
add
mov
cmp
arpl
jno
loope
adc
xor
loop
mov
ss
adc
jmp
cmp
cpuid
jmp
mov
xor
repnz
push
test
cmp
pop
fcomps
push
jno
sub
lods
pop
aam
mov
pop
mov
sbb
fucomi
sub
sub
and
pop
das
mov
xchg
sbb
or
mov
push
pop
pusha
cmp
jge
fisubrl
lahf
ret
adc
cmpsb
js
jmp
rolb
or
outsb
mov
cmp
bnd
in
movsl
add
sub
insl
mov
cs
sub
out
inc
adc
pop
add
rcr
inc
push
or
sbb
adc
jge
cwtl
push
orl
data16
ja
lret
in
rcrl
xchg
clc
daa
pushf
or
mov
push
push
xor
push
insb
ja
mov
fstps
mov
cmp
stos
adc
inc
push
dec
pop
out
daa
mov
jmp
and
pop
add
aad
in
les
ret
push
push
mov
mov
pop
pop
lods
push
add
mov
clc
pop
mov
call
loope
pop
add
lret
and
dec
scas
shr
js
dec
jle
push
lahf
xchg
in
add
push
push
pop
mov
pop
testb
jge
pop
add
push
and
lock
add
add
in
push
add
sub
and
pop
scas
sub
add
mov
jb
scas
jg
test
fnstcw
fstps
mov
in
enter
pop
dec
fidivl
jmp
sbb
xlat
push
add
repz
push
xchg
ret
pop
sub
icebp
das
sub
fcoms
add
add
cmp
push
sub
je
or
mov
xor
push
mov
mov
sar
jecxz
fdivr
push
cmpl
addb
inc
jne
subl
cli
adc
xlat
or
sti
and
jmp
ffree
or
aad
aad
into
push
dec
pop
xchg
jl,pn
pop
xchg
aas
mov
jo
cmpsl
inc
or
cmpb
cmp
sub
xor
pop
and
outsl
sbb
pop
and
sub
add
mov
xor
cmp
into
xor
xchg
inc
out
mov
and
xchg
sbb
idivb
insl
mov
or
hlt
add
fidivrs
pop
test
or
jnp
adc
imul
roll
add
mov
mov
rorl
mov
mov
mov
cmp
jmp
jo
jp
or
bound
addb
push
daa
push
ds
add
in
lea
pop
cmp
jmp
iret
inc
sti
sahf
or
or
add
in
push
in
sbb
push
in
cmp
xchg
jo
rcrb
sti
sub
les
pop
in
in
mov
test
or
aam
fisubrs
in
lcall
inc
dec
push
dec
sbb
inc
lret
sbb
icebp
sbb
cmp
adc
push
add
jmp
sub
dec
sub
sbb
and
dec
pushl
mov
push
outsb
or
jnp
iret
aam
aas
mov
dec
aam
cmp
jmp
shr
ret
xor
pop
hlt
fwait
add
xchg
jl
icebp
nop
mov
or
or
dec
and
mov
pop
loop
pop
sub
and
dec
jbe
mov
inc
xlat
mov
sub
xor
mov
pop
int
fisttps
js
adc
cmp
or
pop
jg
ret
dec
push
lods
dec
mov
push
jl
xchg
dec
pop
rorl
or
and
pop
hlt
pushl
lds
mov
sub
ljmp
jo
shl
jns
pop
add
insb
leave
jae
out
inc
gs
mov
in
das
or
bound
mov
sbb
mov
aam
out
loope
outsl
push
xchg
stc
lods
test
adc
or
inc
mov
push
mov
sbb
push
push
or
add
repnz
or
jmp
hlt
mov
push
push
jmp
pop
out
popa
icebp
pop
push
dec
add
mov
sbb
neg
fwait
or
test
call
adc
push
scas
push
xchg
and
lea
or
jl
data16
das
push
or
or
pop
push
jmp
add
stc
jno
js
mov
pop
sub
mov
pop
clc
jecxz
and
and
adc
pop
sbb
xlat
adc
push
or
in
add
movsl
sub
setl
xor
ror
cli
push
mov
repz
adc
mov
or
leave
adc
cmp
divb
cmp
or
pusha
cltd
inc
jbe
sbb
or
testb
sarl
inc
decl
orb
shl
add
adc
stc
lods
das
mov
pusha
push
cltd
aad
xchg
adc
sub
cmpsl
sub
push
mov
push
jmp
mov
push
mov
negb
cmp
xlat
sbb
add
inc
inc
adc
fstpl
or
nop
push
xchg
outsb
nop
repz
mov
sbb
imul
add
sub
pop
bound
xor
fisubs
leave
popf
pop
add
cmp
movsb
rorb
orl
and
adc
dec
pop
out
jne
and
jae
push
push
or
or
cmp
subl
mov
inc
jbe
cmc
sbbb
mov
mov
ret
xchg
jnp
test
or
pop
xchg
adc
inc
popa
jge
push
mov
adc
sub
jno
stos
push
in
sahf
push
adc
lcall
adc
icebp
incl
ret
clc
push
sub
daa
add
jmp
in
cmp
out
cli
mov
mov
scas
or
xchg
iret
mov
negb
arpl
pop
out
sbb
xor
mov
sahf
lcall
test
mov
les
sbb
insl
xor
neg
sysenter
lods
adc
iret
dec
sub
xlat
push
pop
sbb
push
sub
xor
or
adc
push
lcall
cmp
or
cwtl
mov
sub
pop
xchg
xorb
aad
push
aad
xchg
js
neg
add
fs
popf
in
sbb
cmp
fs
mov
add
subb
sub
inc
lock
pop
xlat
adc
cmp
jmp
push
or
in
xor
test
adc
add
jae
or
inc
mov
add
push
repnz
add
shr
sub
pop
in
pop
push
mov
mov
push
push
lret
bound
sub
pop
add
push
pop
cmp
xor
sbb
pop
dec
push
rcl
aad
xor
test
cmp
jl
push
xchg
sub
in
mov
xor
cmc
ljmp
mov
adc
lret
mov
or
cmp
rcll
test
shll
mov
cltd
xchg
and
sub
add
mov
jle
rorb
pop
adc
ds
or
jmp
jne
ljmp
adc
addr16
sarl
sbb
into
pop
repnz
or
dec
rcll
pop
add
sbb
add
dec
sub
xor
or
or
loope
imul
lahf
repnz
jge
push
pop
push
and
test
inc
jb
mov
mov
inc
jmp
jle
mov
mov
jno
push
mov
das
mov
loop
xlat
jmp
repz
pop
mov
pop
out
mov
das
ljmp
pop
xlat
pop
or
push
push
jmp
sbb
das
ja
lods
imul
aam
out
adc
lahf
push
and
add
push
xor
sub
pusha
into
adcl
cmp
dec
adc
jge
stos
inc
inc
dec
in
pusha
push
ret
mov
push
pop
pop
das
xchg
cmp
mov
pushf
outsl
inc
mov
addb
add
add
jb
mov
fstps
inc
dec
es
daa
fisubs
rorb
xchg
inc
xor
or
fcompl
test
jb
js
sub
jmp
repnz
and
comiss
fs
mov
imulb
add
addb
jnp
jle
cmp
cmp
hlt
adc
cmpsl
push
push
jmp
push
adcl
ss
mov
mov
loop
or
flds
add
adc
lock
lahf
cltd
dec
xor
fdivrs
mov
clc
mov
shll
incb
push
loopne
or
testl
mov
inc
mov
and
test
push
adc
bound
inc
jnp
movsb
outsl
and
mov
push
add
push
jmp
adc
lret
mov
or
out
enter
inc
inc
dec
fldenv
sub
popf
into
jge
jg
sub
stos
popa
jmp
daa
and
repnz
cwtl
fadd
scas
loopne
add
fadd
adc
les
mov
add
sub
jb
std
and
mov
and
out
mov
adc
xlat
clc
inc
mov
test
out
jg
mov
rcrb
mov
jmp
ret
shr
dec
mov
sub
cmp
sbb
mov
shrb
inc
jbe
lret
lods
mov
add
out
or
clc
in
mov
adc
mov
add
push
adc
xor
cmp
jmp
sbb
jmp
pop
or
repz
fs
loop
test
add
aaa
pop
add
ret
sub
and
and
sbb
xchg
add
pop
aad
test
outsb
repnz
pop
adc
fnstcw
call
in
adc
cmp
cli
xchg
jle
jle
dec
jo
mov
bnd
nop
sarb
pop
cmp
movsb
cli
lods
pop
mov
mov
push
xorl
push
push
add
dec
jmp
icebp
ljmp
filds
cmpsb
roll
sub
ds
scas
das
rorl
mov
sbb
adc
in
les
dec
ljmp
into
mov
adc
es
mov
xor
or
mov
add
ljmp
xchg
push
sbb
mov
imul
movsb
mov
enter
movsb
mov
inc
pop
add
or
pusha
or
pop
xor
scas
aam
rcl
imul
or
inc
leave
ret
loope
inc
sti
add
mov
add
adc
les
push
jmp
push
icebp
stc
outsb
or
push
and
adc
push
nop
add
xor
stos
shll
cmp
xchg
jecxz
in
or
push
pop
pop
shrl
adc
add
xchg
dec
movzbl
push
sbb
mov
sbbb
bound
jle
xor
aam
les
or
push
pop
test
cltd
push
out
push
lods
xsha1
cmpsb
dec
nop
test
insl
cmpsb
xchg
scas
int
pusha
dec
enter
add
shrl
mov
push
and
inc
xchg
vunpcklps
adc
mov
mov
sub
sarb
add
push
iret
and
add
scas
inc
xchg
push
or
out
ja
inc
pop
pop
test
push
movsl
xor
ljmp
push
pop
test
mov
mov
bound
adc
adc
arpl
jge
std
bound
dec
inc
int3
cmp
in
stc
sub
es
xor
pop
add
roll
adc
xor
push
mov
mov
adc
std
adc
cs
dec
mov
in
sbb
push
test
push
add
sar
xor
xor
addb
push
push
mov
push
cmp
aas
pop
mov
push
push
mov
xor
aas
jmp
aam
in
sbb
jl
push
adc
cmp
and
inc
adc
ljmp
jbe
mov
testl
arpl
les
imul
lds
rcrl
pop
mov
icebp
xor
adc
mov
mov
cmp
mov
pop
mov
sub
xchg
mov
inc
stc
or
fcoms
dec
shrb
dec
imul
mov
arpl
jge
sbb
mov
inc
and
add
bound
test
rorl
add
or
pusha
lret
xchg
movsb
out
mov
divl
add
shrl
add
dec
xlat
mov
int
add
jle
mov
insb
sbb
adc
ljmp
jl
rcl
cli
repz
outsb
inc
and
push
add
and
cli
mov
push
mov
inc
sahf
sub
pop
xlat
pushf
arpl
out
in
sti
dec
jle
add
sub
push
addl
xor
inc
arpl
mov
push
loop
maxps
dec
add
mov
fdivrs
mov
pop
or
dec
popf
adc
daa
je
repnz
js
cld
leave
dec
stc
loopne,pn
push
pop
fcomps
pop
dec
sbb
sub
xchg
add
mov
xchg
dec
adc
dec
xchg
inc
mov
sub
pop
add
jne
in
push
dec
cmpsb
mov
ds
xchg
mov
jo
repnz
ja
mov
jns
rol
das
orl
js
jne
xor
push
es
ret
adc
xchg
and
xor
imul
pop
mov
pop
imul
jmp
push
mov
or
pop
dec
dec
rclb
adc
xor
jmp
inc
outsl
dec
cmp
pop
jmp
sbb
pop
sets
inc
adc
in
add
or
cs
add
out
cmp
popf
xor
aam
outsb
imul
adc
lret
lret
inc
stos
mov
xor
jnp
cmpl
inc
fstpl
push
or
fldenv
subb
inc
sub
popa
aas
push
adc
insb
inc
ljmp
xor
orb
fsubrl
push
or
push
sbb
ljmp
jb
dec
cmp
stc
test
les
xor
jmp
scas
pusha
jmp
sbb
push
pusha
and
das
sbb
push
ret
fisttpll
mov
jg
and
das
push
stc
cmpsl
imulb
jmp
testb
add
loopne
pop
add
testl
inc
adc
lds
ljmp
jae
add
mov
stos
lahf
xchg
in
mov
incl
cmp
stc
mov
mov
or
sbb
xor
lods
outsl
lds
add
pop
pop
cmp
lret
and
push
in
ret
xor
jns
jle,pt
sub
push
push
out
inc
pop
mov
rcll
mov
call
shr
add
mov
fadd
add
mov
into
pop
add
jmp
dec
clc
negb
out
jnp
push
shl
jle
pop
or
aad
sub
and
lahf
sti
mov
push
and
outsb
test
or
int
sbb
popa
xor
push
or
fnstenv
xor
adc
jecxz
les
adc
pop
xor
adc
lret
stos
lods
popf
xchg
pusha
mov
cmp
push
cmp
jb
add
nop
std
xchg
imul
mov
es
mov
inc
sbb
test
arpl
xchg
out
mov
add
inc
push
mov
cmp
mov
dec
jle,pn
iret
adc
jo
in
fnsave
mov
xor
movsb
inc
sbb
sbb
ffree
stos
jb
add
inc
out
outsb
mov
or
push
loope
stos
lea
outsl
cmpl
xchg
in
sbbb
mov
sti
jmp
fnstsw
das
jmp
aam
push
repz
cmp
xchg
add
sbb
leave
push
in
repz
mov
pop
or
fsub
push
das
cmp
inc
or
sbb
stos
mov
fcmovb
popf
mov
mov
jmp
pop
add
xor
fdivl
hlt
push
adc
and
mov
sbb
add
lods
jne
add
cmp
xor
jbe
dec
mov
cwtl
xor
adc
pop
cld
fsub
mov
clc
cmovle
inc
mov
xchg
pusha
mov
cmp
add
adc
fsubr
or
cmp
cltd
adc
xchg
shr
cmp
pop
mov
ret
mov
pop
add
pop
in
std
or
mov
loop
or
sub
orb
jecxz
jg
cwtl
outsb
xor
mov
and
das
pop
sbb
add
test
lahf
icebp
jns
out
inc
sbb
dec
not
ljmp
inc
push
mov
shrb
sarl
aam
iret
cmp
and
dec
hlt
jp
dec
mov
cmp
or
sbb
and
lods
sbb
rcrl
pop
jmp
xchg
fsubs
and
add
xchg
cltd
loopne
push
sarb
inc
sbb
mov
cmp
mov
ja
mov
mov
ds
fisttpl
sbb
and
repz
xchg
cmpb
ljmp
hlt
lods
hlt
rcrb
mov
mov
add
cwtl
shlb
orb
mov
pusha
fsubl
cmp
mov
lods
jnp
outsl
or
jmp
mov
jge
jl
bound
xor
mov
stos
mov
lds
mov
dec
xchg
jmp
loop
pop
mov
int
sbb
jecxz
xchg
mov
into
test
rclb
xchg
shll
rolb
orl
jae
xor
cs
sub
enter
mov
sbb
or
adc
icebp
shrb
dec
ret
mov
mov
mov
aam
jge
scas
into
mov
cmpsb
or
or
ljmp
lods
fiadds
lods
pop
sub
test
das
stc
outsl
xchg
ja
xchg
stc
sub
pop
pushf
bnd
mov
push
mov
out
mov
adc
clc
popf
jecxz
cli
xchg
jmp
adc
pop
leave
sbb
inc
xchg
xchg
jo
xchg
push
rcrl
loopne
ljmp
cmc
cld
pop
ret
add
pop
cmp
xlat
addr16
jmp
xor
xor
lds
test
mov
sub
sub
into
sub
lahf
hlt
xor
mulb
push
add
adc
pop
adc
pop
inc
sub
inc
xchg
lsl
hlt
loop
jmp
mov
xchg
jne
mov
push
jmp
inc
or
lret
mov
iret
xor
sarl
add
adc
data16
mov
lods
mov
push
cs
leave
pop
lret
sub
mov
push
add
out
xchg
fstpl
and
pop
in
sbbl
loop
inc
dec
ret
outsl
scas
xor
mov
lock
mov
add
or
xchg
pop
sbb
inc
sbb
sti
pop
pusha
ret
ficompl
add
aas
add
inc
ret
addr16
or
addr16
jmp
mov
into
cwtl
daa
xchg
add
add
nop
outsb
xchg
ss
aad
sub
jns
xor
js
std
lods
adc
push
adc
jb
fiaddl
jle
push
mov
sti
or
or
push
pushf
inc
pop
sub
jmp
hlt
sbb
push
xchg
out
repnz
loopne
int
repnz
cmp
pop
mov
fidivl
add
xchg
lret
sbb
cmpsl
iret
cmp
stos
push
or
ds
push
lret
pop
shll
or
mov
insb
aas
int
sub
test
rorl
xor
xchg
rolb
push
mov
pop
mov
add
pop
cli
push
ljmp
fidivl
sbb
push
cmpsl
frstor
sub
cmp
sti
push
push
stos
out
repz
jecxz
push
add
xor
dec
mov
sbb
fsubl
in
xor
jecxz
pop
mov
cmp
nop
inc
xor
xchg
cmp
xchg
mov
sbb
mov
adc
mov
movq
sub
and
pop
jmp
xchg
mov
adc
mov
lock
jb
xchg
jmp
mov
test
movsl
or
jne
loopne
jmp
dec
arpl
mov
sbb
mov
xor
pop
push
ret
rol
or
pop
enter
mov
add
push
mov
add
popf
fisttps
bound
and
push
div
xor
pop
cs
dec
daa
push
jmp
test
push
xor
pop
pop
push
imull
mov
sbb
nop
into
dec
hlt
mov
dec
mov
push
pop
pop
dec
fmull
jnp
or
mov
inc
aad
pop
sub
loope
add
adc
sbb
or
bound
cmp
inc
test
dec
jne
rol
dec
cmp
in
xor
decb
sbb
nop
push
mov
or
jne
mov
test
dec
mov
xor
jae
int
xor
mov
ret
push
xor
pop
dec
stc
rclb
push
fs
subb
add
dec
in
xorl
mov
nop
jbe
das
sbb
lock
push
mov
mov
mov
pop
lods
jbe
dec
movsl
xlat
bound
push
mov
jne
test
stc
bound
imul
lods
jnp
sti
shrb
xchg
das
cmp
out
and
sub
add
push
or
inc
ret
jle
out
pop
adc
out
aam
repz
push
push
mov
or
xchg
mov
aaa
dec
and
add
mov
cld
icebp
pop
out
mov
scas
or
pop
inc
xchg
dec
fsts
fistpll
rolb
pop
testb
push
pop
movsb
dec
rsqrtps
cmp
inc
stos
inc
mov
int
cmp
or
dec
ja
pmaddwd
and
add
fucom
sub
int3
mov
mov
jle
dec
and
jbe
es
sbb
call
xchg
fwait
jb
inc
xlat
cli
ret
loope
and
dec
and
add
jg
in
xrelease
call
ret
out
pop
popa
inc
pop
push
push
nop
lret
daa
mov
nop
push
pop
mov
sbb
xlat
dec
jmp
push
sahf
inc
push
dec
fimuls
repz
pop
jmp
jb
clc
add
push
pop
jns
adc
je
arpl
mov
fadd
and
js
dec
aas
sub
cmp
dec
shll
dec
fists
out
or
push
ficomps
sub
imul
dec
cli
mov
notb
call
les
or
sub
ficomps
jb,pt
fwait
je
test
out
in
add
cmp
adc
or
cltd
divb
push
pop
or
popl
cld
in
daa
int
imul
inc
mov
mov
xchg
sti
mov
adc
sub
jno
idiv
add
push
mov
neg
and
push
jmp
or
in
jmp
push
add
xor
sbb
test
data16
adc
jle
mov
xor
and
mov
jg
add
out
lret
arpl
push
xlat
movsb
inc
or
dec
sub
fsubr
mov
pop
pop
mov
inc
shrb
sti
sub
adc
stos
gs
and
sub
les
xlat
xor
pop
rclb
push
push
or
and
dec
inc
cmp
lret
ret
jmp
xchg
loopne
sub
push
pusha
dec
sbb
mov
lock
pop
adc
jnp
mov
pop
ret
insb
mov
ljmp
aaa
sarl
xor
mov
mov
cmp
out
cmp
dec
inc
sub
pop
cmc
xorl
add
bound
or
push
xchg
or
dec
push
push
pop
mov
pusha
testb
pusha
repnz
aas
or
cmp
aaa
jecxz
mov
push
dec
call
pushf
push
xor
nop
testl
jle
add
lret
jge
sbb
lcall
rorl
outsl
notl
mov
sbb
pop
mov
mov
and
dec
lods
jp
and
addl
mov
std
xchg
add
cli
jno
add
push
add
xor
push
and
test
pop
stos
int
in
push
cwtl
fisttps
mov
mov
xor
cmp
xor
das
adcb
xor
aam
adc
push
add
mov
adc
fmuls
pop
push
mov
fidivrl
movsl
xchg
mov
pop
cmpsl
popa
jmp
or
xor
lds
pop
and
pop
pop
sbb
jge
daa
shl
mov
add
adc
clc
rclb
rcr
in
pop
or
jne
jne
cmpsl
xor
popa
push
inc
imul
pop
and
push
hlt
cmp
mov
mov
ja
and
mov
and
or
xor
rorl
nop
leave
add
sub
fmulp
pusha
and
ret
seta
shlb
jmp
clc
mov
push
pusha
and
xchg
pushf
jno
or
loop
mov
aas
xor
leave
pop
nop
sub
iret
sbb
or
repnz
ret
jmp
push
cmc
sahf
repnz
jp
test
out
lcall
sbb
push
pop
rolb
ret
cmp
es
xchg
push
xor
cmp
mov
inc
rorb
lods
jae
popf
pop
jge
pop
push
loope
sub
sbb
addr16
aaa
push
clc
sbb
sbb
add
out
jecxz
outsl
mov
aas
mov
jmp
adc
xor
daa
mul
cmp
stos
data16
int
add
add
sub
cmpb
test
pop
lods
into
and
mov
sub
sbb
je
xor
mov
add
lret
rclb
sbb
sbb
add
pop
mov
pop
pop
sub
adc
add
sub
mov
adc
loope
add
push
es
pop
fisubl
and
sti
cld
mov
aad
push
cli
das
lahf
in
sahf
lret
jge
push
xor
mov
xor
cld
xor
lds
jo
pop
fdivrp
sub
shrb
addb
or
dec
pop
in
and
dec
and
rorb
jmp
xchg
repz
or
pusha
loope
add
mov
js
mov
in
pop
pop
pop
push
imul
loope
cmp
and
fdivl
lcall
cmp
add
rol
arpl
sbbl
adc
daa
jnp
cwtl
fwait
mov
and
addr16
inc
dec
mov
add
xchg
not
xor
xchg
or
inc
push
shl
sbb
xor
jmp
push
mov
mov
xor
add
add
sub
mov
fiadds
in
jo
mov
repz
imul
cld
mov
fdivrs
int
adc
loopne
mov
popf
or
ljmp
xchg
icebp
jbe
sbb
add
ret
inc
enter
push
stc
pop
in
or
sub
push
test
mov
pop
subb
or
pop
xchg
lock
cs
fwait
inc
and
lret
bound
bound
mov
test
dec
cmc
js
cmp
cld
dec
daa
lods
bnd
out
pop
mov
and
pop
hlt
dec
jl
add
scas
cwtl
out
jg
add
pop
mov
cltd
cpuid
subl
dec
jne
scas
and
or
pop
xor
ljmp
testl
es
fwait
pop
and
add
add
jmp
pop
and
ret
gs
aam
sub
mov
rclb
lahf
push
mov
inc
jo
or
loope
sbb
pop
imul
jg
mov
dec
sti
pop
and
or
and
mov
loope
ret
ret
std
fisttps
adc
ficoms
hlt
hlt
cwtl
pop
cmp
mov
adc
scas
xchg
dec
push
mov
push
push
xchg
mov
shll
cmp
and
mov
add
xchg
das
jge
aam
sub
mov
gs
hlt
pop
test
mov
and
xor
pop
mov
mov
xchg
jle
pop
mov
mov
mov
movmskps
dec
cmp
add
sbb
neg
sub
xchg
and
mov
mov
push
maskmovq
notl
cmp
jecxz
or
adc
icebp
push
scas
sub
mov
out
push
mov
fs
pop
jmp
repz
push
xchg
or
fldenv
pop
cmp
dec
add
xchg
inc
mov
call
jmp
mov
ljmp
sub
popf
loop
sbb
jne
mov
mov
sbb
jmp
ret
jg
neg
hlt
mov
rcrb
jbe
cmp
rorl
mov
pusha
test
or
push
xchg
push
or
pop
sti
fdiv
cld
imul
cld
movl
test
mov
mov
mov
xlat
pop
ja
das
add
dec
sarb
inc
add
and
and
sub
orb
push
jbe
aam
pop
arpl
mov
or
jae
das
or
pop
jo
pop
in
jle
or
push
mov
push
in
lcall
pop
mov
jmp
mov
rcll
leave
andl
pop
add
add
sahf
dec
add
adcb
sbb
dec
imul
mov
call
adc
xchg
inc
inc
jmp
push
cmp
cmp
push
sub
arpl
cs
mov
and
push
and
inc
add
xchg
jle
push
sub
mov
scas
dec
xor
jne
dec
repnz
sbb
ss
xchg
sbb
dec
jae
fistl
imul
fldenv
cmpsb
mov
movsb
dec
cld
mov
xor
pop
xor
cmp
test
mov
push
add
imul
xchg
jo
mov
andl
jecxz
jg
or
inc
inc
mov
adc
xchg
jns
repz
and
arpl
and
cltd
in
mov
adc
divb
dec
pusha
pop
jp
mov
adc
dec
xlat
cmpl
and
dec
xor
iret
ljmp
js
sub
aas
xor
pop
xor
and
stc
dec
loopne
loope
jbe
cld
push
and
enter
lods
or
test
stc
out
mov
pop
add
push
mov
or
aad
xor
pop
or
xor
lods
mov
push
mov
push
adc
popf
filds
pushf
jns
cltd
test
cwtl
or
notb
sahf
mov
xor
pop
insb
outsb
mov
dec
mov
aam
mov
pop
jp
ss
mov
test
dec
out
mov
xor
push
add
jno
rolb
jmp
out
inc
cmp
pop
repnz
mov
push
sub
add
inc
xor
jne
rcrb
ljmp
push
pop
ljmp
sub
aaa
mov
mov
cmpb
aaa
cmpl
or
dec
js
push
jmp
cmp
dec
pop
mov
pop
sahf
fnstsw
inc
pop
xor
jle
loop
ret
addl
fs
in
add
dec
fists
sbb
pop
cli
adc
out
inc
mov
inc
dec
aad
lea
sub
sub
jle
push
add
add
rolb
fs
cmp
out
xor
int3
or
jno
enter
or
das
nop
fstps
fwait
push
and
dec
sub
aam
scas
inc
xbegin
xor
add
xchg
add
inc
fxrstor
call
nop
mov
add
push
jmp
loopne
jg
daa
leave
adc
dec
adc
lahf
sub
xchg
push
repz
push
inc
push
cmp
and
imul
jg
push
push
pop
sbb
loop
nop
or
loopne
pop
adc
je
dec
sbb
push
cwtl
mov
add
xor
jmp
dec
or
fcoms
or
out
mov
dec
push
cli
sub
jb
pop
lret
ret
push
inc
sbb
xor
jo
test
dec
mov
out
imull
sahf
and
cmpsl
test
bound
mov
inc
stc
fadds
pop
aas
mov
sbb
pop
inc
pop
push
inc
shll
push
addb
and
adc
aad
jl
push
imul
imul
jmp
xor
dec
int3
icebp
cmp
test
jmp
imul
adc
stos
pop
outsb
fucom
adc
cmpsl
pop
lahf
in
int3
xor
das
ljmp
cmp
mov
mov
mov
loop
add
cmp
jne
std
fsubrl
add
sub
sbb
dec
jmp
sub
xchg
or
xor
lock
in
lods
fildll
sub
repz
push
rclb
scas
and
in
test
shrb
push
push
push
push
orb
xor
adc
movb
sbb
xchg
inc
mov
loope
das
xchg
pop
jle
add
cmp
popa
incb
filds
mov
sbbl
loop
je
inc
jns
dec
mov
dec
mov
jg
or
les
mov
dec
dec
xchg
out
xchg
clc
fdivrl
cmc
dec
inc
pop
pop
push
les
add
or
dec
outsl
std
movsb
loop
jns
or
or
arpl
dec
pop
test
loop
dec
aam
lahf
sbbb
imul
fcoml
out
out
mov
bound
roll
add
and
xchg
xchg
std
sbb
xchg
cwtl
inc
aam
push
scas
sub
dec
mov
jp
cld
mov
mov
popa
scas
dec
in
dec
das
fisttpl
mov
rcrl
aas
sbb
push
imul
or
add
sbb
subb
shl
add
add
and
adc
je
scas
inc
or
mov
imulb
dec
jl
mov
sub
pop
inc
rcrl
ret
repnz
in
testb
stc
dec
adc
xchg
gs
rorl
sahf
add
mov
imul
dec
mov
pop
outsl
xor
push
push
rclb
fs
das
loope
sbb
sub
jp
aas
xchg
pop
push
pop
pop
push
add
addl
dec
jbe
dec
shr
shlb
jbe
xchg
cli
les
and
call
add
andb
ficoms
add
andl
and
arpl
or
push
in
sub
or
xchg
std
xchg
sahf
fxtract
and
xchg
mov
xchg
mov
adc
pop
push
stos
gs
loop
sub
jne
mov
or
daa
lods
adcb
sub
stos
jmp
in
imul
jnp
clc
cmpsl
shr
and
sarb
pop
lret
fisttpll
push
fisubl
sub
orl
outsl
adc
rolb
cmp
sbb
ljmp
outsb
jae
or
mov
xor
out
jl
adc
aad
test
xchg
orb
mov
push
cltd
add
hlt
mov
push
aad
dec
pop
sbb
popf
sub
fidivs
push
int3
int3
je
pop
lret
pop
and
cmc
sarb
inc
dec
mov
cmp
push
or
xor
nop
imulb
imul
cmp
fcoms
pop
adc
inc
mov
mov
ljmp
das
jb
mov
ljmp
cwtl
subb
aaa
cmc
mov
cmp
push
push
outsb
jmp
loop
add
mov
cld
pop
mov
test
pop
pop
adc
dec
jmp
and
xchg
xor
mov
pop
cs
sub
pop
add
adc
inc
enter
in
loop
sahf
jne
subb
fsubs
xchg
inc
ret
incl
pop
xor
mov
lret
pusha
sbb
mov
adc
mov
mov
iret
or
cmp
notb
daa
fisttpll
sub
lock
cmp
test
dec
sarl
rolb
xor
push
fcomps
stc
es
sahf
push
mov
xor
or
fnstcw
pusha
push
mov
push
mov
mov
mov
push
lahf
js
or
aam
mov
pop
stos
aam
les
repnz
inc
hlt
mov
inc
sub
cmp
sahf
movsb
mov
test
stos
cltd
mov
inc
inc
bnd
cld
jl
dec
cmc
js
sub
es
cmc
dec
jae
lahf
test
fs
clc
add
xor
stos
adc
cmp
addr16
dec
dec
pop
test
jle
jnp
in
and
push
push
sbb
in
cmp
arpl
int
aad
and
repz
out
test
sti
xor
std
test
cmp
sbb
lock
out
inc
loope
repz
xchg
and
or
and
add
mov
pushl
lahf
push
add
jnp
dec
pop
in
in
loopne
push
add
sub
push
pop
daa
les
mov
jg
mov
add
lods
rcrl
shlb
push
cmp
jae
sbb
push
hlt
sub
mov
push
xchg
decb
daa
mov
notl
shll
sbb
pop
lds
add
addb
jmp
push
inc
in
mov
ret
add
jmp
or
fs
push
push
xlat
int
clc
fists
pop
jp
sub
inc
inc
movsb
add
sub
mov
adc
outsb
sbb
adc
or
push
mov
inc
add
lods
jmp
jnp
out
je
and
scas
adc
call
cmp
push
je
push
mov
sahf
mov
jb
xor
ds
jmp
data16
imul
or
fld
add
gs
add
or
pop
add
test
mov
lds
push
mov
ljmp
insb
ret
aam
mov
xor
sub
and
lret
mov
dec
jmp
aad
adc
adc
test
int
pusha
xchg
and
dec
movsl
cmp
fisttpl
push
insl
fxch
sahf
push
mov
xchg
loopne
push
pusha
cld
jb
sbb
mov
call
arpl
fisubs
ret
mov
out
push
dec
or
dec
pop
xchg
push
loope
test
push
and
inc
mov
pop
inc
nop
dec
or
cltd
xchg
mov
jg
shlb
sub
pop
and
jmp
push
lea
push
sarb
xor
adc
nop
jo
movsl
lcall
mov
pop
push
aad
sti
cmp
clc
cltd
or
daa
int3
xchg
mov
push
sbb
adc
daa
nop
cmp
aaa
mov
pop
hlt
sub
add
mov
jmp
hlt
pop
test
pop
call
int3
shlb
jmp
or
scas
or
test
or
pop
sti
loop
xlat
jge
sub
dec
push
jmp
cmp
lods
daa
push
xchg
or
jmp
adc
mov
jmp
pop
or
fildll
push
sub
or
xor
xor
adc
lds
mov
xchg
cli
adc
xor
in
cmpsb
test
or
jg
jae
mov
push
leave
pop
sbb
dec
inc
xor
push
jl
mov
mov
sub
cmp
ficomps
pop
xchg
add
insb
lret
add
jae
daa
mov
frstor
stos
xor
hlt
jmp
std
arpl
xor
loop
call
fiaddl
les
and
enter
xchg
xchg
sub
jmp
xor
dec
in
jbe
jmp
cmp
std
jbe
pop
jg
cs
in
pop
mov
rolb
pop
lock
mov
dec
cmc
fstpt
mov
jg
dec
jae
jmp
dec
pop
add
add
daa
outsl
jmp
cli
pop
loop
xchg
lahf
cmp
and
lea
je
push
xchg
cmp
stos
es
inc
in
repz
sti
inc
fcmovnbe
inc
pop
add
fildl
dec
jns
xor
push
jg
into
cmp
mov
and
fs
in
addr16
pusha
cmc
sti
or
lods
ljmp
testl
inc
ret
rolb
xchg
cmp
adc
push
jne
fwait
jb
loope
stos
pop
push
es
pop
fwait
daa
sub
jp
mov
cmp
jno
std
stos
adc
call
jo
je
add
push
or
lods
rclb
push
insl
cwtl
dec
roll
xor
pop
push
add
test
js
and
orl
sbb
cs
lock
cltd
push
popa
shlb
push
sahf
add
xor
dec
cmp
fmul
and
adc
xor
add
pop
push
push
nop
xorb
shlb
add
shl
sbb
stos
mov
pop
sub
je
ret
or
and
xor
add
rcrl
test
pop
data16
or
push
rclb
or
sbb
push
jnp
push
ss
ljmp
testl
push
leave
scas
repnz
nop
push
mov
out
mov
jg
xchg
lea
jb
pushf
into
popa
cmp
daa
arpl
sbb
jecxz
aam
lods
pop
lea
push
mov
or
push
push
insb
pop
js
mov
rorl
test
mov
popa
push
lds
push
inc
mov
mov
jne
or
add
jecxz
cmp
daa
mov
repnz
push
sub
push
imull
in
dec
leave
push
aad
daa
int3
imul
xchg
push
add
push
sub
push
adc
or
into
push
rcl
mov
xchg
cmc
aas
fsts
pop
xchg
insl
jg
cltd
or
leave
pop
xchg
fs
xchg
lret
out
scas
push
cwtl
mov
add
rcrl
dec
lret
pop
add
jecxz
ljmp
mov
into
sbb
decl
into
push
xor
mov
add
shr
add
or
icebp
lcall
jge
sub
lcall
or
pop
or
lret
leave
addr16
jbe
nop
mov
ljmp
fidivrl
cmp
xchg
mov
push
mov
fisttps
ffree
and
push
adc
push
or
jmp
and
inc
inc
movsb
sub
cld
xchg
test
jge
add
mov
mov
andl
xor
ret
mov
adc
push
dec
adc
add
data16
stc
loope
in
jmp
bound
cmp
adc
xchg
lods
out
adc
ss
inc
imul
cld
and
ror
test
sub
push
mov
jmp
dec
mov
lret
cmp
fsubs
sbb
pop
push
scas
repnz
rclb
jo
sbb
into
int3
mov
int3
dec
cmp
and
imul
rorb
scas
push
in
xor
cli
push
pop
mov
dec
arpl
sub
lods
outsl
lods
ds
jmp
ds
dec
cmp
adcl
in
xchg
fs
pop
ja
dec
mov
jno
add
mov
dec
pop
jecxz
adc
ja
leave
pop
pusha
sbb
mov
negb
daa
pop
pop
pop
pop
jmp
imul
fcom
adc
push
imul
icebp
rcl
cs
push
jle
push
imul
cmpsb
pop
enter
sbb
adc
add
repnz
dec
sbb
inc
and
jbe
insb
xchg
aam
pop
dec
sti
lret
shr
dec
push
jmp
mov
jge
and
icebp
roll
pushf
jmp
pop
scas
sub
data16
dec
pop
sub
cmpsb
and
mov
jmp
mov
movsl
aam
jo
cmp
imul
xlat
les
lret
loopne
out
and
and
push
mov
dec
pop
mov
inc
or
fisttpll
scas
aad
jo
or
pop
push
push
mov
add
call
inc
jl
sub
imul
or
pop
and
pop
mov
xchg
pop
aad
js
sub
inc
mov
xor
es
test
push
push
idivl
pop
orb
xor
and
push
mov
test
pop
popa
or
sarl
add
jmp
mov
push
lds
pop
imul
mov
repnz
adc
mov
stos
cs
jb
adcl
add
or
mov
mov
add
popa
jo
sub
out
and
faddl
ja
imul
fs
js
or
cmp
mov
pusha
push
jo
sbb
push
add
dec
jmp
jo
pop
jno
mov
adc
inc
cmc
dec
push
mov
mov
cmpsb
xchg
ret
sub
inc
dec
sbb
stc
push
in
mov
scas
enter
push
mov
add
xor
cmc
xchg
sbb
mov
call
testl
bound
insb
jnp
pusha
xor
mov
ror
popa
stos
xor
movsl
mov
or
jae
mov
jmp
add
jecxz
or
pop
xchg
js
cmp
and
push
add
or
jmp
cmpsb
jmp
xor
sarl
enter
rcl
add
jge
ja
test
sub
pop
out
adc
push
movsl
xchg
mov
arpl
jge
jnp
xlat
mov
sbb
mov
ret
rol
add
sbb
add
jnp
pop
and
mov
test
dec
xchg
shlb
jae
iret
mov
pop
jnp
and
lahf
adc
mov
daa
jmp
push
xchg
das
mov
in
dec
and
aad
sbb
out
daa
pop
sbb
mov
mov
mov
rcll
cli
mov
add
or
lock
pop
mov
movsl
pop
mov
xor
ljmp
and
or
or
push
inc
scas
lea
push
xchg
mov
xchg
ja
out
movsl
rorl
sub
in
pop
pop
mov
inc
adc
mov
adc
movsb
pop
mov
ffree
push
push
fisubrl
test
add
pop
call
lods
js
push
cltd
jne
cs
fcomip
mov
mov
orb
sub
fstpl
imul
sub
jge
ljmp
cmp
jecxz
fs
pop
std
sbbb
lret
ds
js
jecxz
ret
or
mov
pop
loop
jmp
lret
or
add
popa
mov
inc
inc
inc
sub
sub
aad
mov
push
jp
mov
sbb
pop
icebp
mov
pop
jae
adc
and
jmp
mov
push
lea
add
sub
push
mov
cmp
mov
sahf
push
sub
ret
xor
nop
sbb
test
stos
fadds
lahf
or
fsts
movsb
popf
pusha
shrl
dec
sbb
xor
int
mov
xor
xchg
or
xchg
add
fidivrs
fadds
jmp
js
sbb
xor
push
push
or
fwait
sub
xchg
cwtl
orl
xchg
icebp
jmp
adc
sbb
push
cmp
lock
cs
or
mov
pop
push
cwtl
push
dec
pop
in
ds
adc
or
test
xchg
inc
jns
adc
xor
push
hlt
iret
push
pop
mov
mov
cltd
jnp
pop
pushf
mov
and
inc
js
add
or
idivl
jns
mov
inc
sbb
inc
xchg
popf
lods
xchg
lea
dec
jle
rcrl
stos
push
int
fdivl
cltd
or
inc
xchg
call
arpl
and
push
leave
pop
shrl
fdivrl
enter
jbe
and
push
adc
in
push
mov
jo
or
mov
lods
pop
dec
add
and
lret
fwait
in
cmp
cmc
cmp
inc
xor
xor
in
mov
enter
in
and
mov
inc
jb
ljmp
sub
mov
push
mov
mov
push
xlat
test
stos
inc
mov
in
sbb
or
xor
pop
xor
push
imul
xchg
out
dec
xor
sarb
lods
cld
iret
push
inc
imul
ja
xchg
and
xor
xchg
mov
pop
aad
xor
mull
push
int3
mov
mov
cmc
pop
xorl
sarl
adc
ficoml
gs
adc
fs
xchg
pusha
cmp
add
daa
and
mov
add
ret
mov
push
pop
jnp
and
mov
sahf
pop
pop
mov
mov
fnstcw
add
cmpb
or
mov
or
outsb
pop
sub
bound
loopne
rorl
jns
jo
mov
dec
outsl
mov
aaa
and
add
push
icebp
neg
add
sbb
or
cmp
push
mov
mov
jo
xchg
idivl
jmp
adc
sub
inc
js
mov
xchg
stc
push
jmp
call
popf
and
cwtl
pop
xor
iret
aam
loope
divl
movsb
shll
adc
clc
sub
sub
fadds
push
dec
stos
push
xchg
fdivp
loop
lret
cltd
cld
push
repnz
adc
pusha
mov
addr16
cwtl
adc
enter
add
cmp
into
xor
or
inc
stc
mov
cmp
cmpsb
mov
jl
inc
leave
ds
repnz
pop
inc
hlt
icebp
sub
fwait
jb
jg
mov
cmp
push
pusha
add
ja
sbb
aad
test
jmp
mov
and
es
xchg
imul
test
or
ds
sub
mov
inc
sub
mov
mov
gs
mov
ficoms
sbb
dec
and
cmp
pop
xor
mov
push
lahf
call
das
int3
mov
add
or
pop
inc
adc
sub
frstor
push
xchg
add
cmpl
pop
xor
ficomps
jp
mulb
pop
out
testb
mov
jmp
push
push
in
inc
cmpsl
push
jo
mov
push
pop
jmp
lods
movsl
icebp
mov
add
stos
inc
xchg
loope
js
jmp
pop
push
lret
sub
and
adc
scas
icebp
imul
xchg
sub
or
sbb
xor
push
clc
push
pusha
rol
into
xorb
mov
out
leave
dec
loopne
pop
aaa
add
push
insl
pop
push
test
dec
lahf
outsl
dec
cltd
fnstcw
rclb
hlt
js
shl
push
sbb
cmp
mov
push
inc
xchg
xchg
add
pusha
mov
inc
adc
out
loope
mov
adc
xchg
daa
repnz
outsl
jg
inc
clc
cmp
or
sub
push
xor
mov
ljmp
mov
frstor
call
insl
jnp,pn
sti
test
mov
cli
xchg
pusha
out
jp
inc
ret
push
mov
push
sub
movsl
jns
loop
pop
jne
lea
fs
sub
add
and
test
jne
push
and
je
inc
mov
lods
jnp
add
cmp
int3
and
or
pop
xchg
jne
jmp
add
xchg
testl
fcoms
mov
mov
loopne
add
fistl
dec
and
aam
add
jmp
cli
add
jno
jmp
jmp
leave
cmp
andl
sub
or
sub
and
push
push
jne
dec
gs
rclb
ret
les
sarl
and
loopne
jmp
pop
or
outsb
cmpb
xchg
jmp
fnsave
cwtl
xor
mov
push
pop
push
mov
dec
adc
xlat
test
neg
xchg
inc
fdivr
int3
hlt
or
xchg
pop
jge
inc
push
xchg
sub
pop
push
jg
xor
popa
cli
pop
mov
pop
popf
or
movsb
sbb
jle
pop
sbb
adc
mov
push
and
push
adc
testl
xor
cmp
cld
out
xchg
dec
adc
sbb
and
mov
mov
sbbl
jl
jae
adc
dec
mov
fcomp
and
scas
jne
std
or
mov
dec
test
add
pop
jl
cmp
jo
mov
mov
call
add
insb
and
jmp
add
sub
scas
sbb
mov
lds
lret
gs
cli
push
jmp
and
jnp
cwtl
cmp
push
ret
les
push
or
mov
inc
daa
jmp
out
negl
nop
jnp
sub
jl
xchg
add
adc
dec
dec
jnp
cli
fs
xor
scas
mov
fs
xlat
inc
enter
es
push
in
and
mov
add
add
dec
mov
rorl
xchg
dec
lock
sub
push
sub
xlat
std
shl
ja
push
jbe
stos
adc
outsl
icebp
and
iret
outsb
loop
stc
scas
push
pop
pop
sti
imul
and
fadds
in
cmp
test
addr16
inc
jbe
adc
adcl
test
repz
movsb
xlat
fs
inc
mov
jl
xchg
insl
dec
push
push
or
xchg
into
shrb
clc
jmp
cld
out
dec
mov
mov
mov
sbb
mov
adc
lret
mov
popl
push
cld
or
in
add
test
lods
rcl
aas
movsb
jle
mov
jp
inc
mov
jae
lods
popf
add
sub
and
cli
and
inc
mov
adc
pushf
add
dec
out
inc
or
and
pop
mov
bound
jmp
fcomps
xor
pusha
jl
stos
inc
mov
mov
adcb
pop
xor
sti
jle
pop
and
dec
pop
mov
pop
or
ljmp
push
nop
adc
dec
popa
pop
cmc
mov
xor
loopne
add
es
add
call
xchg
mov
les
xchg
push
xchg
cmp
jge
pop
lahf
and
in
mov
push
jp
cmp
xchg
xchg
mov
clc
push
push
arpl
pop
or
xor
je
shr
mov
dec
testl
das
mov
or
pop
mov
push
add
jbe
into
mov
jle
push
pop
mov
pop
imul
shrl
dec
push
out
pop
subb
add
inc
jle
cmpsb
movsb
fiaddl
loop
adc
xor
jp
cmp
sbb
inc
sbb
inc
cmpsb
js
dec
pop
push
jp
jl
adc
pop
push
sub
pop
jl
fstps
sbb
cmp
mov
test
je
mov
adc
jo
jmp
push
pop
mov
stos
mov
sbb
repnz
mov
or
int3
push
test
jmp
xor
and
push
sub
xchg
mov
jns
and
and
mov
jl
or
dec
jb
repnz
nop
or
roll
insl
mov
xor
nop
inc
adc
test
pop
xor
out
fidivrl
sub
mov
cmp
into
inc
addr16
jmp
leave
pop
icebp
xchg
nop
mov
mov
popa
add
and
out
subb
aaa
imul
add
add
jmp
jl
mov
imulb
pop
into
xlat
pop
ja
inc
add
push
cmp
cmp
ret
xchg
dec
pusha
icebp
ret
sbb
pop
xchg
sbb
pop
and
imul
mov
int3
or
mov
xor
or
in
movsl
hlt
push
dec
push
push
push
jmp
das
icebp
outsl
imul
test
shrb
stos
std
ja
adc
inc
sbb
shr
pop
pop
mov
add
inc
mov
or
mov
dec
xor
ret
mov
jecxz
jo
dec
pushf
add
and
rcll
xor
mov
or
or
inc
sub
not
sysexit
das
int
xor
add
filds
xor
sbb
sbb
ret
push
stc
out
inc
jg
addb
lds
roll
add
rolb
xchg
adc
jmp
ret
adc
mov
cmp
mov
call
push
push
xorl
sbb
mov
stos
jp
daa
mov
xchg
addr16
sub
into
mov
gs
fildll
jbe
jb
add
mov
mov
rol
jo
jmp
jns
popf
push
out
push
mov
xchg
scas
ret
and
test
mov
dec
mov
dec
aas
sbbb
es
inc
shl
mov
xchg
xor
add
gs
mov
inc
ror
pop
pop
inc
hlt
mov
lds
dec
ss
call
test
mov
mov
jg
xlat
pop
mov
je
shrb
inc
lock
mov
jp
ja
mov
adc
int3
or
dec
push
int3
gs
cmp
cmp
dec
cmp
int
aam
scas
adc
daa
lret
cmp
pop
mov
pusha
or
pop
sub
push
cltd
lods
pop
outsl
leave
jle
pop
fists
pop
cmp
mov
shrb
pop
movsb
inc
xor
movq
pop
mov
repz
inc
inc
add
repnz
test
loop
into
sub
mov
push
fisttps
cmp
mov
das
and
addb
movsb
or
lahf
ret
aad
cmp
outsl
add
sub
lock
movsl
sub
xchg
test
mov
dec
xorl
call
andb
jo
aaa
loopne
test
sbb
stos
inc
sbb
adc
loopne
and
push
add
jl
inc
pop
jmp
out
push
cmpsb
stos
pop
es
cvtpi2ps
ljmp
clc
test
jl
popf
pop
push
in
pop
popa
fisubrs
jp
int3
and
lock
scas
add
mov
mov
and
pop
addb
xchg
cmp
pop
adc
cmp
pop
add
mov
hlt
ror
and
add
insb
sahf
dec
mov
cwtl
mov
lds
add
inc
rorl
or
or
add
cld
xor
pop
sub
cwtl
jmp
sbb
ret
or
addl
inc
or
testb
ja
mov
xchg
sbb
outsb
pop
add
mov
jecxz
and
add
cmpb
and
inc
loopne
pushl
repnz
sbb
xchg
push
inc
cmp
push
popf
pop
inc
pop
jge
ror
fisttps
xchg
push
mov
cmp
leave
je
stc
jns
or
push
adc
cmc
jno
jecxz
jne
insl
fsubrs
lock
xor
push
add
pop
ficoml
mov
mov
push
jmp
mov
and
push
mov
add
xlat
push
push
push
mov
lods
ljmp
andb
mov
out
or
popa
inc
pop
idivl
push
pusha
arpl
adc
or
addr16
daa
pop
cmp
sbb
or
imul
repnz
sub
sbb
cmc
xchg
lret
shlb
in
cmpsl
pop
add
dec
push
pop
xor
dec
mov
stos
pop
xor
dec
aam
ss
inc
or
ja
mov
ljmp
or
or
lcall
xor
adc
call
nop
and
movsl
sbb
pop
pushf
idivl
sub
push
scas
pop
fimuls
and
sub
das
sbb
andl
fsubrl
mov
push
pop
push
push
adc
xchg
push
sbb
ret
ret
add
mov
dec
lahf
jle
cwtl
push
int3
mov
test
lods
dec
mov
pusha
push
push
mov
adc
mov
fdiv
enter
sub
push
aaa
jo
xchg
add
add
div
lods
mov
mov
les
xor
push
loope
xor
movsb
add
jo
lds
push
nop
dec
mov
pop
pop
not
and
jmp
cs
add
cmp
sub
mov
inc
popa
pop
nop
cs
add
dec
icebp
popf
rorb
loope
int
jo
add
pop
or
dec
cli
pop
inc
pop
sub
es
out
jl
loop
hlt
jne
shll
or
stos
sbb
shl
je
jnp
es
call
insb
fsubs
aad
sbb
dec
push
cli
es
pusha
pop
adc
daa
fs
rolb
mov
movsl
or
inc
iret
lods
dec
aas
jae
xchg
jmp
dec
adc
or
sub
shlb
or
iret
lods
sub
inc
jmp
pop
ret
mov
pop
sahf
pop
jne
xlat
push
jmp
xor
push
orl
das
fcomp
mov
jg
push
mov
mov
pop
xlat
loopne
inc
pusha
or
add
add
dec
cmp
pop
add
sub
ljmp
mov
push
jno
pop
sbb
insl
xorl
into
cld
loope
xor
xchg
ret
and
inc
dec
push
lcall
adc
or
add
dec
ja
ljmp
out
adc
add
add
push
mov
shr
add
cmp
sbbl
jnp
xchg
dec
dec
push
or
daa
cld
mov
add
jmp
jnp
stos
jecxz
add
inc
xchg
pop
push
in
inc
sbb
sbb
jo
xchg
pop
push
cmc
and
jmp
push
shl
add
mov
mov
dec
lods
loopne
jg
and
scas
mov
es
push
test
ret
cld
lods
fisubs
mov
or
inc
mov
jmp
out
sub
dec
xor
inc
int3
lds
push
ss
sarl
add
out
mov
and
out
pop
rorl
dec
shlb
pop
mov
ds
movswl
andl
sub
lahf
inc
dec
ljmp
sub
scas
nop
lock
pop
cmc
xor
add
pop
jmp
ret
sub
adc
popa
jns
pop
and
das
push
mov
lock
imul
sbb
loopne
jecxz
loopne
mov
incl
ljmp
nopl
lcall
mov
add
xchg
sub
push
inc
push
rolb
lock
insb
cmp
xchg
adc
pop
loopne
sub
or
jle
add
jb
adc
fsub
and
sub
das
dec
lahf
dec
dec
out
lret
dec
jg
sub
mov
icebp
shlb
ljmp
jns
push
insl
dec
dec
mov
push
cltd
and
or
sbb
jmp
stos
mov
clc
mov
lds
cld
in
ljmp
jmp
scas
add
or
xor
xchg
pusha
shlb
sub
sbb
and
cli
jo
xchg
fdiv
gs
push
ljmp
jge
sub
ja
addr16
or
mov
mov
add
fdivrp
dec
sbb
pop
inc
maskmovq
imull
data16
push
add
jo
pushf
cmpb
sub
popa
lds
mov
mov
insb
pop
cmp
mov
jp
daa
mov
or
mov
dec
push
inc
jne
adc
das
repz
add
hlt
sub
dec
mov
pop
pop
int3
outsb
mov
fsubrs
lods
adc
or
xor
cwtl
push
inc
or
jmp
pop
mov
scas
xor
sahf
cmp
in
push
add
scas
xchg
sbb
mov
push
or
fldcw
imul
nop
or
jne
jp
int3
cmc
int
xchg
dec
ja
adc
cld
int
in
ja
cwtl
add
jmp
push
sarl
ljmp
call
xchg
or
jns
popa
shr
js
push
hlt
dec
dec
stos
int3
test
xor
movsl
add
push
sbb
mov
add
shl
mov
pusha
adc
lock
int
sub
out
sti
mov
pop
lds
call
fs
or
and
vmread
xor
or
push
xor
or
xor
add
inc
or
inc
jmp
sarl
daa
push
mov
std
push
sbb
jmp
mov
inc
jl
outsb
loop
push
jb
clc
mov
ret
adc
repz
psubd
out
sti
scas
flds
in
cmpsb
dec
daa
pop
fwait
std
pop
in
popa
shr
mov
push
add
push
int
cld
sub
call
mov
mov
xor
mov
je
out
xor
push
sbb
in
xchg
push
xor
mov
or
inc
mov
cmp
push
push
test
call
or
nop
mov
push
sbbb
dec
sbb
lods
outsb
pushf
in
lea
add
mov
add
inc
movsl
jp
out
aam
and
les
add
pop
xor
loop
call
pop
mov
cld
push
sbb
rcr
pop
xchg
lret
outsl
pop
leave
and
push
dec
jge
xor
shr
pop
out
pop
xor
jmp
push
mov
dec
lock
ljmp
jmp
sub
leave
testb
cltd
xchg
dec
repnz
xchg
mov
jp
fs
xchg
lcall
divb
repnz
pop
out
setb
jno
xor
sbb
dec
or
imul
xchg
notl
std
jmp
mov
sbb
sub
push
test
cli
pop
mov
int3
imul
leave
mov
mov
dec
or
iret
dec
popf
cmp
addr16
outsl
adc
stos
sub
repnz
mov
push
loop
inc
cmpsb
ljmp
mov
add
fidivrs
sub
jbe
inc
pop
push
scas
or
dec
add
ss
push
jmp
or
imul
and
cwtl
xor
leave
push
xchg
adc
pop
mov
sbb
sti
test
pop
in
mov
dec
not
mov
push
shl
and
popa
or
dec
push
into
push
inc
mov
adc
sub
lds
inc
cmp
addl
sub
ds
dec
mov
jbe
cwtl
cmpl
adc
jo
add
cmp
mov
add
cli
mov
add
push
mov
xorl
and
das
cmc
mov
or
mov
adc
or
sub
add
leave
ljmp
add
aam
push
xchg
add
shld
pop
add
jge
mov
enter
dec
jno
arpl
and
sbb
pop
push
push
loopne
nop
mov
push
les
and
xor
outsb
daa
pusha
jne
sbb
shll
pop
xchg
lcall
pop
xor
add
in
outsl
lock
jecxz
daa
pop
popf
in
leave
lret
in
xchg
xchg
add
push
push
or
pop
jg
decl
sub
push
and
mov
cmp
add
loopne
lods
dec
xor
inc
test
mov
pop
cmp
add
loopne
fimuls
xor
sbb
or
mov
lret
dec
lods
data16
movsl
add
scas
in
leave
mov
or
push
scas
xchg
pop
out
and
rorl
sbb
bound
sbb
sar
in
lods
add
adc
add
inc
and
push
adc
inc
pop
out
adc
push
mov
cs
jp
sub
pop
ror
xor
sub
or
pop
jg
popa
inc
sub
push
jmp
pop
lods
daa
add
push
dec
xor
mov
push
pop
xor
xor
mov
int3
addr16
sbb
cmpsl
and
push
push
mov
dec
cmp
and
dec
cmc
xor
in
jmp
pusha
gs
push
xor
cmp
pop
sbb
xchg
out
mov
and
xchg
xor
push
js
outsl
enter
out
test
jb
inc
mov
adc
jmp
push
push
mov
cld
lahf
insb
sub
into
pop
or
ret
ljmp
cwtl
jge
lcall
rep
sub
add
js
cs
sbbb
aad
pop
and
mov
jb
mov
orb
sbb
sahf
shufps
fistpll
gs
movsl
test
dec
cld
mov
pop
xorb
test
and
xor
orl
xchg
les
shr
adc
xor
inc
sub
push
dec
dec
push
out
jne
jmp
push
sbb
sti
add
aam
pusha
add
imul
or
fildll
xchg
and
arpl
mov
shl
or
pop
jecxz
or
push
nop
sub
mov
dec
or
in
les
jae
mov
push
or
insl
mov
or
xchg
adc
sbb
push
lods
mov
adc
jns
sub
jecxz
adcb
fsubr
push
jb
je
and
add
push
mov
fcmovu
and
sbb
sub
xchg
out
clc
add
or
xor
in
add
loopne
xchg
cmovb
insl
inc
int
push
mov
rcrb
or
sub
and
mov
jo
pop
xchg
and
in
fsubrl
mov
add
cli
dec
inc
loope
ljmp
adc
arpl
pop
sti
loopne
cwtl
push
jmp
xor
xchg
rcll
and
inc
cli
push
cmp
mov
mov
mov
pop
add
pushf
adc
loop
adcb
jne
loopne
xlat
xchg
xchg
lahf
aam
lock
roll
sbb
jg
jecxz
push
lds
out
cmpsb
in
jg
test
mov
sahf
hlt
rcrl
es
int3
sbb
sub
bound
or
jle
ljmp
mov
jmp
pop
push
mov
inc
bound
pop
xchg
pop
adc
repnz
mov
or
mov
cltd
lods
shl
addb
add
pop
test
outsl
aad
push
push
out
xor
jnp
clc
loope
outsl
add
mov
push
push
cmpsb
test
and
pop
in
jmp
jb
mov
es
and
push
loopne
test
adc
pop
sub
jo
sub
nop
push
or
or
inc
clc
inc
jle
xor
xchg
mov
push
sub
hlt
mov
enter
pop
xchg
dec
test
cmp
adc
sbb
adc
out
sub
add
jmp
push
je
xchg
mov
adc
xchg
aad
sub
adc
jmp
pop
jp
and
lea
mov
push
leave
test
push
or
out
inc
add
and
sti
xor
sub
mov
cld
add
or
sbb
testb
loop
les
das
gs
cmp
out
add
sbb
cmpb
mov
es
addr16
lods
testb
fsubp
jo
sahf
jecxz
mov
insl
fwait
incb
sbb
test
jno
dec
popa
inc
xchg
push
and
arpl
mov
mov
pop
add
adc
ret
imul
jmp
stc
in
xor
push
xor
push
push
jge
mov
and
xor
scas
mov
jnp
out
add
push
or
mov
xchg
iret
dec
push
and
sti
xor
insl
scas
mov
daa
scas
pop
sti
out
fwait
bnd
mov
aas
in
mov
out
cld
lahf
mov
dec
add
fdivrl
inc
dec
mov
imul
or
dec
outsl
sbb
roll
or
push
lret
or
outsb
dec
xor
popf
cmp
and
push
and
fstl
ja
add
rol
dec
or
sub
and
jle
movsl
push
sbb
mov
jns
enter
jnp
push
les
adc
popl
mov
xlat
jmp
stc
mov
jmp
test
call
add
or
push
or
adc
sub
daa
addr16
bound
pop
pop
stos
repnz
shrb
add
sub
and
lcall
mov
mov
and
cmpsl
or
bound
xorb
stos
bound
push
cmp
pop
pop
pop
inc
push
xchg
shlb
les
sbb
addr16
mov
loopne
dec
pop
jmp
and
je
mov
cs
sbb
mov
push
pop
bswap
push
insl
testb
mov
inc
and
imul
js
ficoms
dec
pop
inc
pushf
test
mov
testb
or
pop
mov
and
rol
cmpsl
adc
adc
mov
xchg
add
pop
shrb
push
idivb
push
sub
pop
pop
jmp
mov
imul
les
cmp
adc
lods
push
mov
shr
sbb
rolb
pop
and
mov
dec
sub
jmp
aam
out
or
sqrtps
mov
das
xchg
mov
lds
pushf
inc
lret
inc
pop
mov
or
sub
faddl
stos
inc
mov
mov
cmp
or
pop
or
jl
subl
pushf
push
lret
xchg
pop
outsb
hlt
mov
adc
inc
outsb
shrb
xor
inc
fbld
popa
shll
pop
imul
pop
js
ljmp
mov
ljmp
lcall
xlat
mov
xchg
add
je
sub
push
or
or
jne
fisubrs
movsb
ja
and
add
sbbb
add
jp
or
jae
push
push
push
mov
shr
flds
dec
xchg
mov
int3
bound
or
les
in
nop
mov
xor
lods
data16
jmp
out
and
or
pop
pop
and
shrb
dec
mov
js
jo
push
test
push
mov
sub
iret
jo
shr
orl
and
push
shll
add
out
xor
and
aam
and
or
cmp
mov
shr
xor
int3
call
xor
pop
fstpl
pushf
and
mov
popf
shll
dec
add
inc
scas
fisubs
leave
orb
sub
jbe
sub
nop
jae
jmp
out
addl
pop
subb
popf
repz
add
es
mov
nop
test
js
mov
xchg
pop
lods
mov
mov
test
scas
inc
das
add
xor
dec
or
adc
cmpsl
jmp
hlt
andb
fdivr
shl
ljmp
das
mov
xor
xlat
pop
xor
xchg
das
rcrl
xchg
jmp
pop
sti
pusha
ret
xorl
push
jbe
outsl
sti
push
nop
mov
add
stos
adc
add
imul
pusha
push
or
popf
sub
sahf
sbb
push
cmp
negl
push
rcrb
xchg
icebp
pushf
add
sbb
dec
inc
into
add
or
xor
scas
loope
filds
gs
inc
sti
stos
add
sub
jg
jo
mov
in
mov
pop
adc
xchg
shl
add
mov
stc
sub
sarl
clc
mov
lock
xchg
sub
jg
sbb
mov
adc
int
mov
jno
mov
inc
xchg
pop
imul
mov
inc
cmp
add
addl
xchg
push
cmp
push
mov
std
add
jmp
or
or
push
xor
add
bound
andl
and
adc
pop
das
push
or
sub
data16
leave
cwtl
push
jno
and
jmp
and
out
ret
cmpsb
mov
pop
mov
sahf
dec
cltd
push
jb
mov
movsl
cmp
xor
mull
rclb
sub
or
sbb
inc
das
mov
or
sbb
xchg
and
jmp
push
into
jns
sub
and
dec
add
fadd
shll
inc
mov
pop
xlat
bound
or
push
mov
aas
or
xchg
inc
xor
jmp
sub
xor
mov
sub
dec
or
add
fwait
or
cmp
xchg
jne
bound
push
pop
mov
les
mov
push
shrl
ret
std
sbbb
pop
call
test
pop
push
std
jns
jmp
mov
outsb
call
insb
jb
shlb
mov
movsl
xor
pop
jo,pn
jmp
test
add
adc
and
add
rcll
les
or
jmp
addl
popa
in
fs
pop
ja
cli
pop
sbbb
add
xor
inc
sub
mov
in
std
pusha
int
movl
rorb
shrb
xor
xchg
jg
enter
jmp
shr
js
ret
push
mov
outsl
cwtl
aaa
das
xor
pop
hlt
shlb
mov
in
orb
frstor
and
mov
lds
push
cmp
xor
rcrl
hlt
jg
mov
push
jbe
and
jle
enter
or
push
cmp
das
push
cs
xor
jae
stos
repz
pop
push
inc
pop
push
xor
jo
imull
dec
add
dec
pop
ds
bound
mov
test
sbb
ss
call
cltd
lret
add
scas
pop
jmp
out
shrb
adc
add
jmp
push
adc
push
in
sbb
das
mov
jecxz
jp
adc
pop
push
pop
bound
aad
aam
or
out
imul
sub
jmp
inc
icebp
test
orl
data16
shll
clc
jmp
imul
push
xorb
fidivs
mov
hlt
xor
xchg
jae
or
sbb
jmp
mov
outsl
insb
and
fcoms
in
cmp
push
xchg
mov
das
mov
adc
pop
insb
add
pop
shll
inc
mov
cmp
lock
clc
xchg
fsubr
imul
shrl
and
push
jmp
mov
mov
scas
jg
fcomip
push
and
pop
adc
mov
lea
sub
cmp
add
push
lds
jnp
repnz
mov
inc
pushw
ss
cld
es
lods
mov
std
enter
push
inc
dec
pop
mov
aam
imull
bnd
mov
lods
and
push
sbb
icebp
sar
inc
pop
dec
lods
mov
inc
push
jne
leave
test
ret
add
bound
dec
incl
nop
inc
inc
das
jmp
mov
cli
mov
shrb
mov
adc
sbb
sbb
daa
dec
pop
dec
and
decb
cmp
lret
mov
daa
pop
push
in
adc
mov
sarb
ds
mov
je
sub
cwtl
add
pop
je
subl
xchg
push
and
inc
adc
add
pusha
data16
loope
mov
stos
ja
subb
faddl
push
push
pop
divb
pop
mov
movsl
push
mov
call
lret
hlt
in
stos
in
fld
cmpsl
xorb
or
push
push
pop
jnp
or
adc
sti
add
inc
xor
ret
sub
and
mov
and
sbb
ret
mov
dec
test
loopne,pt
adc
jg
loopne
decb
mov
or
test
scas
add
outsl
daa
jl
test
inc
inc
orb
cld
mov
mov
jae
fidivrs
jmp
mov
inc
cmp
test
adc
mov
les
dec
jle
xchg
hlt
cmp
add
enter
or
int3
ret
mov
mov
add
sub
dec
sub
jge
pop
andl
popa
push
rcr
add
sub
adcb
and
xchg
mov
jp
xchg
pop
pusha
sbb
add
cli
sbb
imulb
pop
pop
in
push
mov
repnz
inc
hlt
cmpsl
add
adc
or
std
loopne
push
mov
arpl
or
xorb
sub
inc
pop
jg
push
les
ds
mov
cmp
aam
cmp
incb
adc
jne
scas
push
or
inc
xor
das
mov
jb
sub
pop
out
add
adc
sti
scas
nop
outsb
inc
and
or
ss
inc
mov
push
pop
pop
shr
push
xchg
add
dec
cmp
dec
bound
xor
push
xchg
push
mov
rorb
adc
pop
dec
imul
push
lahf
adcb
xlat
or
mov
dec
jmp
xchg
jns
imul
xor
inc
xor
jmp
ret
inc
movsb
stc
fstpl
repnz
pop
pop
dec
dec
insl
mov
notl
popf
stos
adc
inc
rol
push
mov
or
push
jge
mov
inc
bound
push
add
outsl
push
in
orb
js
dec
sub
push
sub
ljmp
jmp
xchg
push
mov
adc
mov
rclb
loope
mov
inc
mov
or
imul
clc
push
jbe
xchg
icebp
xchg
jmp
mov
jo
mov
xlat
pop
sub
movsb
scas
into
fmull
fimull
push
pushf
out
leave
sub
sub
ds
pop
mov
lods
sbb
mov
jecxz
pop
hlt
add
cmpsw
xor
out
cmc
loop
add
pop
rcr
push
clc
cmp
lock
dec
addr16
mov
pop
mov
test
jecxz
pop
add
or
inc
and
push
repz
adc
and
out
lea
pop
xor
jle
data16
std
jb
xor
and
lods
ficompl
pop
jno
pop
pop
stos
cmp
or
inc
lds
mov
adc
mov
push
sub
mov
ret
jo
mov
and
push
inc
mov
sub
loop
dec
cmpsb
pop
loopne
dec
ss
sbb
rcr
and
cmp
push
push
pop
mov
stos
movsb
hlt
push
xchg
inc
push
xlat
repz
jg
pusha
dec
pop
icebp
xor
frstor
outsb
fstpl
aas
mov
adc
dec
inc
in
loopne
push
mov
ja
ljmp
nop
dec
ja
data16
adc
fisubs
adcl
pop
std
push
scas
test
push
push
pop
push
mov
mov
or
push
out
rcr
fcmovne
mov
or
jg
or
shr
cmc
divb
dec
mov
pop
stos
push
push
jmp
mov
lret
push
push
push
adc
sub
push
sbb
xor
xor
pop
loop
in
mov
pop
hlt
dec
pop
push
subl
mov
push
test
dec
mov
and
adc
inc
pop
aaa
popf
addb
sub
sti
jp
inc
dec
shld
sub
sub
sbb
icebp
lods
ss
cmp
jecxz
leave
lods
and
jo
fsubrs
cli
add
mov
inc
pop
push
add
push
add
ja
ds
test
push
pop
xchg
es
icebp
mov
fadds
pop
pop
ret
push
dec
bound
push
scas
cmp
xor
dec
add
xor
or
arpl
mov
repz
test
adc
push
mov
movsl
fisttpll
call
sbb
mov
cmp
inc
push
test
int3
xlat
dec
pop
cld
lahf
mov
into
dec
and
mov
xchg
inc
mov
mov
stos
push
scas
inc
sbb
jbe
or
mov
jae
mov
add
push
inc
adc
int3
imul
sahf
push
inc
cs
mov
and
xor
jno
fsubrs
ret
bound
pop
mov
jmp
xor
and
ficomps
loop
dec
push
imul
jbe
inc
sarl
dec
sub
negb
jne
pop
ret
fs
rorl
repnz
das
pop
cli
mov
xchg
frstor
mov
and
stos
shl
pop
xchg
aam
xorb
scas
pop
jne
mov
dec
cmp
or
adc
xor
push
mov
jp
imul
add
mov
lahf
icebp
lret
mov
xchg
pop
mov
adc
fcoms
mov
in
loop
das
pop
fbld
jne
dec
pop
pushf
jb
adcb
icebp
and
out
sub
mov
cmpsb
cmpsl
pop
mov
roll
lods
idivb
xchg
shl
add
sahf
cmp
push
xor
leave
leave
pop
rolb
or
sbb
mov
and
testl
out
push
pop
xchg
lods
push
pushf
int
int3
push
and
loope
in
jp,pt
dec
mov
dec
test
xchg
fsubp
std
add
sub
xchg
mov
es
mov
jle
adc
popa
inc
cmc
sti
clc
inc
jbe
sub
add
add
insb
pop
jmp
push
lods
inc
cmpl
rcll
push
jmp
dec
sti
and
pop
xor
add
sub
mov
lret
leave
jae
popa
pop
xor
repz
loope
ds
or
xchg
inc
jge
pop
orb
pop
inc
jae
dec
das
dec
or
mov
jp
out
jb
add
xor
sbb
inc
popf
adc
rcrb
lret
sub
xchg
xor
imul
xchg
out
add
test
push
and
pop
addb
inc
add
icebp
es
cmp
cmp
pop
xchg
add
aad
mov
xchg
je
or
inc
cmp
and
sbb
insl
add
jl
cmp
iret
mov
adc
and
adc
push
adc
jbe
pop
loop
pop
data16
outsb
addb
or
pop
add
mov
xchg
adc
mov
sbb
and
push
inc
lahf
pop
or
sti
or
pop
lods
or
pop
filds
mov
push
or
test
xchg
out
fs
add
jmp
sar
and
xchg
shlb
xchg
push
dec
dec
outsb
push
pop
js
imul
cmp
sti
cwtl
mov
sub
dec
add
imull
or
insb
mov
outsb
test
xchg
les
push
mov
xor
jle
adc
cmp
push
stos
test
insb
sbb
and
push
pop
push
or
shl
ds
push
cmp
sub
lds
mov
push
lret
jmp
xchg
stos
xor
insl
or
fs
add
jmp
xchg
cmp
add
adc
call
mov
es
inc
out
and
das
pushf
jb
imul
rcll
jg
jo
into
subb
pop
mov
xchg
jl
jo
test
dec
sahf
and
mov
js
and
mov
inc
pop
sub
in
sbb
or
pop
pop
pop
mov
adc
adc
cwtl
lahf
js
and
dec
imul
shlb
inc
push
aam
es
jge
add
incl
jns
add
dec
mov
adc
push
push
mov
mov
movsl
jge
xchg
movsl
xchg
bound
jne
cli
xor
out
push
movsl
decb
jnp
iret
enter
sub
adc
stos
xchg
inc
movsl
inc
sarb
rcrl
inc
into
test
add
ret
jmp
and
lea
inc
pop
push
out
pop
jmp
repnz
rcr
inc
push
mov
cltd
clc
push
out
dec
bnd
or
pop
ss
inc
mov
repnz
mov
add
mov
daa
inc
test
decb
pop
and
fimuls
add
adc
cmp
test
jnp
enter
into
push
or
popa
push
movsb
ficomps
cli
push
je
adc
dec
adcb
in
pop
pop
cs
inc
push
mov
inc
inc
test
jo
pop
mov
add
outsb
and
sbb
or
pop
add
cwtl
jmp
cmp
clc
add
mov
std
xchg
faddl
or
repz
add
out
add
jns
outsb
popa
hlt
cmp
mov
loope
jge
jmp
and
aas
xchg
or
adc
jp
or
sub
jnp
sbb
insb
push
mov
repz
shll
or
sarl
js
xchg
lret
test
sbb
add
ficomps
shl
xor
xor
fdivr
sub
lock
stos
and
sbb
scas
je
inc
das
cmp
and
nop
xor
mov
and
pop
into
popa
xlat
jl
aas
imul
push
xor
sub
and
lds
cmc
mov
mov
bound
adc
add
sbb
daa
pop
pop
fmuls
test
jmp
inc
adc
push
pop
ret
add
xor
sub
inc
adc
repz
pop
jle
pop
sahf
ss
scas
cmp
push
mov
jp
cwtl
icebp
dec
or
in
pop
mov
pop
xchg
jbe
mov
mov
jle
rcrb
xchg
roll
fdivl
or
int3
jnp
sbb
inc
test
push
aas
xchg
jnp
gs
cld
push
pop
jnp
test
stos
mov
loopne
iret
cmpsb
push
into
push
mov
mov
je
js
jns
jp
imul
xchg
adc
jo
inc
push
out
xor
addr16
mov
and
dec
jno
ljmp
outsb
hlt
or
cli
adc
xchg
and
jge
scas
shlb
xchg
idivb
pop
mov
fidivrs
xor
aas
fcompl
xchg
nop
cltd
push
and
test
pop
pop
push
jns
imul
cmpsl
push
mov
lahf
fs
scas
dec
aad
nop
mov
sbb
push
mov
jmp
mov
pusha
lds
mov
mov
jmp
shlb
pop
jnp
inc
xorb
push
cld
pop
vpackssdw
movsb
std
jmp
es
ljmp
push
jno
jg
and
mov
pop
add
add
fcomps
lret
in
cmp
nop
aas
repz
fcoms
and
adc
xchg
inc
call
test
mov
dec
cmpsl
mov
jmp
popf
cmp
push
in
iret
ljmp
sub
add
lock
decl
test
or
pcmpeqb
jge
pop
xchg
add
sub
test
cmp
and
mov
mov
pusha
or
add
das
incl
lods
and
lods
in
loopne
loopne
sbb
nop/reserved
or
xchg
xlat
cld
pop
dec
scas
xchg
jbe
or
lret
clc
mov
cli
sbb
and
aad
enter
add
sti
mov
and
mov
mov
stos
or
aaa
xchg
inc
repz
inc
pop
sbbl
mov
fcompl
aas
shrl
sbb
fwait
mov
or
rcl
mov
dec
mov
ret
clc
pop
jno
lahf
ja
ja
xor
mov
sub
pop
shr
push
icebp
jge
add
jo
test
cmp
push
xor
icebp
loope
int3
call
push
xor
jno
sbb
push
inc
xor
jae
sub
and
cmp
cs
mov
or
call
push
jae
adc
xchg
add
pop
push
mov
nop
mov
sub
push
pop
cld
daa
add
jns
jle
out
adc
mov
in
xor
xor
in
out
stc
mov
sbb
mov
fmull
imul
stos
xchg
cmp
ja
sub
les
mov
jl
ror
inc
push
xor
or
add
sub
jmp
enter
stc
mov
test
test
arpl
pop
push
loop
sub
negb
outsb
add
ret
or
push
jmp
iret
ds
mov
xor
jle
or
mov
add
mov
or
jp
mov
or
xor
and
mov
addr16
xchg
add
test
mov
lods
js
push
ds
mov
cltd
push
out
pop
push
push
jmp
insl
iret
mov
call
cli
les
test
push
inc
sub
repnz
or
mov
dec
sub
cmc
es
xorb
adc
notb
bound
pop
out
mov
dec
fdivp
hlt
or
or
jg
jge
inc
or
out
pop
push
out
cli
adc
xlat
inc
mov
jne
sbb
or
repnz
dec
xlat
enter
dec
ror
push
into
xchg
xchg
xor
or
sub
cmc
xchg
xor
add
out
fists
pop
and
hlt
mov
sub
lods
js
mov
mov
insl
ficoml
ret
mov
pop
xchg
mov
cmp
lret
cmpsb
cmp
cmc
jae
xor
outsl
mov
xchg
fsubr
add
pop
pusha
negb
loop
call
push
jmp
and
pop
call
fstl
mov
sbb
and
or
mov
pop
jo
add
push
cmp
dec
inc
mov
push
sub
sahf
jae
insl
in
mov
repz
sbb
pusha
sub
or
fadds
sub
jmp
or
mov
add
jo
mov
pop
dec
stos
insl
push
sub
dec
cmc
loopne
push
cmp
fnstenv
cmp
scas
sub
sarl
jmp
xchg
adc
sub
pop
pushf
mov
int3
push
icebp
jb
push
mov
dec
and
sahf
addl
and
adc
and
jb
ret
pop
adc
xor
int3
add
add
dec
sub
jmp
movsb
lret
lcall
out
sbb
mov
fsubr
xor
daa
ret
xor
mov
jle
sub
push
xor
add
in
add
push
add
addr16
out
sti
cmp
pop
mov
and
rcll
push
adc
xchg
mov
and
jmp
xchg
adc
shll
or
and
repz
and
push
test
movups
fs
test
dec
arpl
add
and
jmp
pop
push
and
psubd
pusha
add
das
cwtl
jmp
pop
adc
inc
popa
xchg
pop
dec
add
or
int
xor
push
movsl
popf
pop
or
add
inc
add
sub
ljmp
adc
mov
mov
jg
mov
adc
and
stos
out
pop
sbb
fs
lods
sub
xor
andb
cmpsl
movsb
mov
pop
js
sub
xchg
or
ss
push
sub
movsl
cmp
sbb
or
fcomps
ss
and
jmp
stc
pop
mov
mov
inc
xchg
mov
repnz
hlt
sarl
xor
dec
ret
arpl
cmp
mov
les
cmp
mov
sub
sarl
loopne
outsl
dec
out
jo
jmp
lret
push
adcb
and
mov
dec
outsl
sub
sub
adcb
pop
cwtl
divps
faddl
or
jb
inc
out
mov
mov
inc
sub
sub
ds
pop
test
xchg
mov
das
add
dec
and
or
push
call
or
jo
mov
pop
cmp
push
std
dec
push
jmp
adc
add
repz
mov
or
mov
cmp
dec
inc
popa
iret
jg
push
push
mov
std
enter
cld
pop
xor
pop
leave
negb
or
push
adc
jmp
sub
jl
cwtl
pop
and
mov
int3
push
inc
sub
sub
inc
inc
icebp
pop
xchg
xor
mov
int
jns,pt
sbbl
xchg
push
pop
loope
in
adc
dec
int3
fsubl
sub
es
das
fisubrs
aaa
sub
or
push
inc
jno
jbe
les
add
shlb
inc
mov
xchg
or
lahf
fs
cmc
out
and
ret
daa
jl
aas
add
cmp
stos
enter
ja
sub
mov
sub
push
sarl
jl
sub
push
or
lret
js
cmpsb
dec
lock
jge
jge
xchg
loopne
jno
jle
add
imul
ds
pop
sub
add
outsb
jle
je
add
cmp
or
push
rorb
cmp
lds
xlat
daa
pop
add
sub
cmp
sbb
pop
dec
insb
mov
add
add
pusha
inc
cld
repz
jbe
and
add
std
mov
rolb
ret
je
add
ret
lds
mov
popf
enter
stos
mov
shr
insl
ds
pop
jecxz
mov
adc
popa
aad
test
jns
movsb
outsb
out
or
ss
ret
pop
aas
sub
cmp
clc
jnp
es
jle
cmpb
mov
pop
testb
push
jmp
iret
hlt
xor
mov
and
lods
add
insl
adc
xor
add
test
sub
subb
push
in
cmp
cmp
jne
adc
out
loop
mov
outsl
hlt
out
aas
pusha
ja
fiadds
sarb
pop
rorl
xchg
pop
nop
fidivrs
cwtl
xor
imul
rcr
xor
adc
jno
push
adc
push
push
adc
shr
pop
enter
in
push
adc
lahf
stos
mov
adc
push
das
pop
lcall
aad
push
mov
mov
std
mov
mov
sub
cmp
xor
aam
add
dec
outsb
or
sub
mov
xor
pop
mov
fisttps
mov
pusha
and
out
cmp
or
xor
inc
sub
and
jmp
fists
jle
mov
inc
sti
lds
mov
arpl
in
add
add
je
ret
and
ret
push
sbb
out
jp
lods
mov
les
and
outsl
in
pop
jge
cwtl
jne
fs
pop
sbb
lcall
lock
add
push
int
test
cmc
in
adc
jno
dec
fimull
inc
andb
ucomiss
test
or
jo
repz
call
std
xlat
sub
aad
sbb
push
jecxz
mov
xlat
dec
nop
push
mov
aas
adc
je
or
fsubl
out
adc
add
dec
jp
sbb
icebp
lret
sbb
hlt
add
cmp
or
mov
and
add
pop
xor
xor
bound
mov
and
or
dec
and
mov
push
lock
mov
nop
jecxz
sti
repz
mov
xorb
push
dec
xchg
pop
and
add
arpl
popa
or
push
test
add
adc
and
out
xchg
add
mov
lds
mov
add
dec
jmp
aad
sub
lret
push
xor
jo
sub
or
fldl
mov
add
insb
xor
push
movsl
inc
inc
push
push
add
or
jmp
imul
jno
inc
sbb
sarl
repnz
bound
or
shll
insl
xchg
bound
cltd
ljmp
push
pop
pop
pop
test
adc
fsubrl
shll
and
fucom
add
popa
jns
pop
push
mov
rorl
fs
dec
mov
fcmove
jne
mov
mov
or
fs
adc
add
insl
push
push
sbb
push
sub
xchg
popa
push
ljmp
mov
cmp
dec
pop
pusha
loop
icebp
arpl
out
inc
int
push
orb
or
add
push
push
mov
sbb
out
bound
or
mov
scas
push
mov
into
sbb
jecxz
mov
addr16
dec
loopne
clc
jmp
sahf
loope
mov
ss
and
or
xor
push
icebp
mov
push
push
in
mov
dec
pop
mov
sbb
dec
sbb
and
cmp
push
pop
daa
add
bound
pop
mov
jl
sbb
lahf
enter
stos
or
out
loopne
div
aaa
jge
or
add
adc
and
mov
and
inc
fsub
xor
add
or
mov
das
add
imul
addr16
jmp
loop
xor
dec
dec
push
cmp
rorl
xor
jno
ljmp
add
jecxz
std
adc
mov
loop
lds
lods
aam
xor
pusha
and
inc
add
stc
ljmp
jecxz
push
sub
aam
lcall
dec
pop
push
pop
shll
xchg
mov
mov
xchg
jge
divb
shlb
loopnew
repnz
push
sub
pop
shll
cmp
mov
mov
push
pop
pop
ficoms
adc
and
test
scas
pop
in
mov
insb
adc
add
xchg
insb
cli
mov
xchg
or
mov
fiaddl
aaa
adc
sub
dec
mov
stos
xor
mov
sti
mov
and
pop
cmpl
mov
pusha
sahf
ja
pusha
adc
xchg
gs
pop
cmp
adc
loopne
test
and
add
das
cld
push
pop
pop
lods
and
ljmp
and
int3
inc
push
push
dec
repz
rclb
scas
adc
sbb
dec
leave
clc
mov
xchg
ljmp
xchg
jge
add
into
aas
sbb
mov
or
int3
addr16
jno
popa
push
hlt
sub
inc
jmp
and
lods
mov
shr
dec
mov
ret
aas
addl
mov
int
add
pop
mov
cli
sbbb
mov
push
cmp
ds
jle
data16
iret
adc
adc
push
js
inc
pop
fs
jne
push
xor
or
add
sbb
hlt
iret
cmp
les
aas
pop
ror
inc
jb
inc
add
and
pusha
pop
push
add
push
adc
xlat
dec
test
sbb
pop
push
add
cmp
jmp
mov
push
lret
mov
subb
or
cwtl
push
mov
or
pop
neg
sub
cmpsb
icebp
hlt
out
js
rclb
jmp
pop
ljmp
xor
and
add
adc
inc
in
imul
inc
popf
mov
sbb
sbbb
inc
test
fsubrs
or
add
sbb
pop
fsub
pop
cmp
adc
dec
flds
shl
dec
aas
bnd
xlat
test
cltd
movsb
or
mov
push
test
adc
or
ds
push
or
inc
pop
rcll
and
iret
sarb
pop
mov
add
xor
gs
clc
push
mov
pop
imull
add
mov
xor
rorb
lds
cmpsb
dec
mov
jmp
jae
adc
add
jge
inc
addb
dec
fistps
leave
xchg
dec
mov
lods
mov
jecxz
pop
movsb
icebp
inc
fsub
fildll
mov
mov
xor
push
add
xor
pop
mov
mov
jo
cmpsb
mov
and
push
in
add
or
rclb
insl
lods
push
inc
jp
fcoms
nop
sbbl
cmp
pop
daa
xchg
push
enter
add
add
shr
out
xor
mov
incl
adc
and
test
push
adc
lahf
inc
dec
mov
lock
lods
mov
mov
in
xchg
add
icebp
jp
stos
hlt
mov
pop
fdivrs
push
jb
dec
xchg
movsb
pop
mov
jo
mov
xor
push
aaa
jmp
mov
aam
sub
pop
leave
stos
mov
adc
inc
aam
push
jge
loopne
pop
rcrb
mov
pop
sub
das
jmp
add
cs
cli
mov
cli
push
mov
jo
negl
push
mov
out
mov
insl
mov
add
addr16
gs
bound
dec
mov
rcll
inc
jmp
dec
mov
add
test
and
inc
add
add
leave
out
cmp
mov
lods
dec
shlb
xchg
mov
add
jmp
cmc
adc
outsl
insl
jnp
push
xchg
ds
ljmp
notb
cmpsb
mov
fstps
xchg
mov
jne
mov
notb
inc
add
cli
xchg
inc
jmp
int
adc
daa
mov
dec
or
or
add
sub
sub
pop
out
stos
int
push
adc
pop
cmp
xor
je
out
dec
rsm
nop
adc
gs
repnz
add
inc
xchg
lret
mov
pop
aam
pop
pop
xor
pop
inc
lahf
cmpsb
and
add
ret
dec
xchg
ja
dec
xor
jo
notb
es
inc
add
ds
pop
jno
sub
ja
or
or
lock
scas
insb
cmc
sub
not
mov
popa
push
mov
fs
and
jae
cmp
jmp
daa
push
push
inc
dec
pop
cwtl
mov
push
sbb
fidivrs
lahf
jo
jmp
push
ljmp
les
mov
jl
outsb
mov
mov
je
insb
popl
jg
mov
imul
add
sub
inc
add
sbb
in
mov
sbb
adc
std
xor
pop
ret
scas
jmp
mov
add
in
mov
sub
pop
sub
add
jne
mov
adcl
push
lcall
jg
dec
mov
addb
push
ja
add
cmp
negl
mov
push
std
adc
dec
pushw
sbb
mov
pop
adc
xchg
inc
or
subl
jbe
push
popa
xor
stos
test
test
sub
sbb
dec
es
fadds
icebp
sub
test
aam
jmp
cli
and
outsl
repz
and
add
inc
iret
adc
fbstp
add
aas
fwait
jmp
jmp
push
aas
adcb
nop
push
add
shrl
into
mov
push
aam
shll
adc
sbb
adc
push
push
prefetchnta
mov
mov
decb
hlt
xorb
jge
mov
and
es
incb
js
and
lea
fimuls
idiv
arpl
addr16
scas
dec
sub
pop
inc
mov
cwtl
xchg
jmp
jge
mov
pop
popa
adc
xchg
fdivrl
push
xor
jbe
sahf
pop
clc
mov
and
push
xor
idivb
sub
cli
mov
dec
jge
and
lods
cmp
add
mov
inc
dec
jecxz
mov
adc
inc
dec
push
jbe
sahf
cli
mov
aad
lods
and
inc
das
rolb
addb
cli
or
mov
jmp
sbb
lods
dec
pop
sarl
mov
test
mov
mov
cmp
xor
popa
sbb
sbb
mov
jmp
mov
xchg
push
add
jl
jo
xchg
pop
and
xchg
insl
fcomip
mov
or
icebp
lods
add
sub
sub
sbb
push
xchg
ss
or
les
cli
scas
cmpsb
mov
push
mov
inc
mov
cmp
mov
andb
das
cmpsb
xchg
add
xchg
or
loop
fidivs
mov
inc
adc
inc
pop
std
sub
add
xchg
adc
sbb
jne
jmp
jp
jno
nop
jg
in
lahf
bound
pop
jge
and
loopne
push
xorb
push
mov
and
pop
filds
push
in
xor
fists
lret
lret
pop
or
notb
cli
ret
rolb
cld
ret
sub
sub
mov
mov
pop
mov
pop
pop
jmp
dec
push
leave
sbbb
pusha
icebp
and
or
pusha
dec
scas
fcomp
pop
popf
std
sbb
xor
decl
pushl
out
icebp
add
call
outsl
loope
clc
xchg
in
popf
xor
cmpsl
out
and
fidivrl
data16
mov
loope
xlat
inc
test
jne
pop
fnstcw
jge
movsl
mov
bound
xor
dec
aaa
or
daa
out
inc
inc
pop
pop
add
nop
stos
stos
stc
mov
enter
add
push
clc
sub
pop
loopne
ljmp
cld
js
mov
sub
jns
jb
sub
xchg
std
pop
mov
pushf
mov
dec
and
dec
push
adc
push
loop
adc
je
lock
sbb
mov
lret
inc
xchg
icebp
mov
sbb
mov
popa
add
ljmp
or
stc
xchg
or
jl
or
pop
xchg
orb
xor
and
pop
sbbl
test
push
stos
mov
movsl
out
inc
mov
inc
pop
out
cltd
subb
adc
mov
std
inc
ret
loopne
pop
test
aas
fs
mov
outsl
pop
std
fs
outsl
add
outsb
inc
cmp
sbb
sbb
pop
push
mov
shll
xchg
and
sbb
fisubrs
jbe
push
push
fildll
fadd
push
iret
fidivs
jne
repnz
mov
add
add
push
xor
int
icebp
mov
add
jnp
jb
adc
mov
insl
xor
clc
mov
lret
dec
jmp
add
jp
bound
push
fnstenv
mov
dec
pop
jge
xchg
add
sub
push
xchg
jnp
dec
and
inc
jmp
cmp
sub
and
stos
inc
lahf
pop
push
inc
sub
out
jmp
mov
js
and
sub
xchg
call
dec
cmp
fmull
dec
ret
aad
sbb
cmp
mov
shll
sti
adc
out
stos
add
push
inc
sbb
aad
cld
pop
loop
jp
call
dec
cld
cmp
cmp
or
bound
pop
jns
mov
add
clc
jo
outsb
sahf
cwtl
xchg
xor
mov
ja
push
jns
cmc
sbb
xchg
dec
cmp
mov
mov
xor
scas
int
and
jno
dec
adc
in
jmp
in
dec
sahf
mov
outsl
mov
dec
inc
dec
lret
xor
adc
mov
add
xchg
sbbb
adc
orb
enter
mov
xor
jmp
xchg
push
mov
nop
cmp
jmp
mov
std
sub
jmp
fidivrl
xor
addr16
mov
sti
cmp
jmp
inc
ss
xchg
loopne
mov
mov
xchg
jo
mov
mov
sarl
pop
scas
cmp
pop
adc
mov
cmp
aad
xor
call
push
shl
aas
mov
aad
test
xor
leave
in
mov
xor
jno
cmpsl
push
xchg
add
mov
loope
sub
jo
pop
ret
fwait
pop
cmpsl
mov
mov
cld
pop
adc
in
add
xor
push
test
xchg
movsl
enter
sbb
jg
fldl
mov
pop
mov
add
aad
lcall
es
ja
pop
push
add
mov
xchg
frstor
sub
cmp
sub
or
adc
pop
int
scas
or
add
sti
mov
xor
call
sub
inc
das
push
pop
mov
xor
xor
shll
mov
push
xchg
xor
in
comiss
xorl
cmpb
or
aaa
sbb
sub
adc
addl
pop
jmp
cmp
jle
push
xor
push
lock
cmp
and
sbb
jmp
rcrb
into
loope
mov
shll
mov
jmp
stc
xor
push
mov
and
pop
sarb
stc
xlat
testl
add
pop
xchg
mov
sbb
in
lcall
mov
lret
lcall
dec
add
cmp
popf
adc
xor
push
xor
jmp
push
shll
fidivl
or
or
shl
jmp
mov
sub
xor
xor
push
out
shl
sub
test
out
nop
iret
out
sbb
ret
subb
int3
xchg
sar
aas
repz
nop
and
js
mov
gs
and
sti
dec
cmp
sub
call
pushf
inc
test
in
push
dec
inc
shll
js
cwtl
pop
dec
notb
jle
cmp
or
mov
sub
rcrb
cmp
and
jne
jne
pop
dec
xor
adc
roll
jecxz
enterw
jbe
push
pop
dec
xchg
add
jnp
les
out
add
daa
lcall
dec
rcrb
std
mov
fildl
sub
mov
add
pusha
sbb
fstpl
cli
mov
pop
push
pop
mov
lahf
out
clc
mov
push
xchg
push
call
push
inc
mov
mov
rorb
jo
adcl
xchg
dec
xor
mov
lret
sub
shlb
pop
xchg
push
jle
sub
sbb
mov
jmp
xor
xor
sub
xchg
div
pusha
pop
sbb
pop
or
push
lds
inc
sarb
fadds
push
clc
mov
dec
int
pusha
cld
add
mov
xor
pusha
imul
jle
mov
xchg
adc
push
or
and
xorl
cld
mov
xor
ret
push
jp
sbb
add
cs
dec
mov
or
icebp
sub
gs
sti
mov
test
add
test
sbb
or
pop
xor
popa
jo
int3
mov
pop
shlb
jmp
call
adc
jmp
mov
push
repz
shl
jmp
out
sbb
es
mov
xchg
push
or
jmp
neg
add
out
inc
jnp
cmp
mov
or
mov
loopne
or
xlat
adc
aaa
add
test
fists
jp
pop
cld
pop
mov
and
pusha
imull
icebp
push
cld
or
add
daa
xor
arpl
loop
ret
jmp
dec
test
mov
les
pop
dec
lock
inc
dec
sub
out
loop
adc
in
fisubrl
idivl
in
idivb
pop
sti
cmp
jmp
aam
sub
add
mov
adc
push
push
sbbb
pop
cld
fmull
push
sub
cwtl
addl
popa
add
push
daa
xor
mov
add
dec
or
in
lock
or
lock
rolb
xor
repz
sub
rorl
sbb
sbbb
call
adc
push
dec
dec
repz
mov
clc
movsl
aad
mov
test
mov
and
and
jl
lds
push
and
add
fsubrs
ljmp
notb
or
cmp
jg
lods
push
cmp
cmc
test
aas
jmp
jle
icebp
in
les
rol
dec
dec
aas
in
adc
xor
cmovno
add
hlt
divl
pop
jnp
xchg
inc
xchg
test
call
add
pop
ds
mov
pop
sti
jge
xor
pop
mov
push
xchg
inc
pop
adc
add
ficomps
stos
out
cmpsl
cmpl
test
pop
cltd
cmp
insb
sub
sub
push
push
jae
xor
mov
push
sbbb
out
cmp
rclb
dec
mov
neg
and
aas
sarb
stos
sub
lea
std
or
mov
pop
jmp
stos
shrb
sub
pop
jg
xchg
mov
push
sbb
xor
dec
outsb
mov
inc
imul
jne
and
sarb
pop
addr16
and
call
popa
xlat
sbb
jnp
daa
xor
pop
inc
jmp
int
jae
daa
or
lea
and
sub
out
mov
push
add
jne
cld
in
inc
mov
imul
outsb
jmp
mov
subl
or
mov
fs
in
imul
xchg
xor
pop
faddl
sub
lock
push
lods
inc
adc
dec
lea
push
mov
shrl
sub
int3
mov
push
shrb
leave
movsb
dec
inc
lods
and
mov
push
dec
and
stc
sub
pop
cmc
cwtl
jbe
inc
xor
rcl
sub
andl
bound
sub
icebp
inc
test
and
or
pop
push
mov
xlat
mov
jp
mov
mov
mov
int3
jp
jg
push
adc
scas
negb
jne
sbb
jns
out
insb
xchg
push
add
dec
test
adc
pop
or
sub
in
and
out
mov
push
popf
mulb
inc
pop
imul
push
push
mov
icebp
xorb
pop
jo
mov
push
pop
adc
frstor
add
shlb
pop
and
add
add
mov
adc
xor
push
jb
ret
xlat
icebp
xchg
sarb
in
flds
mov
pop
push
loope
push
or
pusha
pop
cs
dec
incl
das
nop
lock
cs
hlt
add
jmp
add
out
sti
add
adc
orb
roll
dec
lods
pop
clc
test
xor
enter
dec
jo
pushf
sbb
sbb
pusha
in
jp
pop
jmp
xchg
sbb
jo
adc
or
loop
inc
roll
in
mov
add
dec
out
jmp
push
or
dec
notb
jmp
mov
icebp
pop
or
cli
jmp
pop
or
ficomps
push
out
adc
push
mov
add
push
rcll
pusha
pop
neg
or
mov
mov
sub
fiaddl
push
push
jmp
popf
cld
or
push
and
aas
jne
mov
stos
xchg
jge
daa
je
adc
xor
inc
push
mov
rol
cld
push
nop
inc
mov
jns
jmp
out
xor
mov
and
jg
adc
jmp
into
push
push
fs
add
ret
or
adc
or
int3
sbb
push
mov
sar
das
mov
xor
inc
push
or
xchg
test
push
jle
lahf
mov
out
outsl
leave
or
insb
mov
adc
push
out
add
pop
pop
mov
mov
pop
scas
sbb
mov
inc
push
nop
jg
or
xor
jmp
fidivs
cmp
push
add
mov
mov
arpl
daa
mov
push
adcl
fistps
dec
roll
pop
int
adc
mov
dec
andb
inc
xor
popa
mov
mov
aad
xor
in
jle
jmp
rclb
sub
repz
pusha
lods
adc
pop
push
mov
sbb
push
pop
push
dec
xchg
inc
ss
es
xchg
add
shrl
jmp
iret
mov
mov
sub
out
mov
daa
push
cmp
xor
sub
aam
mov
xchg
jle
pop
push
pop
jg
ja
mov
test
int
sbb
mov
jns
mov
xchg
pop
dec
push
pop
jl
inc
mov
lods
rolb
es
insb
mov
mov
mov
dec
fadds
lock
das
push
adc
push
ds
fs
pop
pop
push
cmp
or
pop
aam
jns
push
lods
mov
ds
pop
xchg
sub
or
call
stos
adc
mov
test
fsub
test
pop
mov
sub
push
sbb
push
outsl
daa
push
adc
stos
xchg
mov
pop
shlb
sub
and
and
daa
sahf
ljmp
insl
mov
xor
mov
dec
stos
sub
jmp
lret
clc
dec
popf
jae
cs
cmpl
cmp
cli
add
sahf
loopne
fidivrl
jne
xor
sbb
stc
notl
add
ds
or
data16
mov
sbb
mov
and
loop
mov
adc
flds
inc
xchg
sbb
sub
loop
add
sub
push
jae
and
push
jl
fsubrp
divb
cmp
cmp
mov
add
cld
or
std
pop
lds
mov
sub
and
sub
xchg
gs
mov
push
fcoml
adc
jno
add
push
ret
icebp
mov
adc
out
idivl
js
mov
jns
mov
cmp
enter
mov
out
mov
lods
mov
cld
mov
fdivrl
out
xlat
mov
mov
and
and
jmp
xor
pusha
mov
mov
es
fistl
cld
add
push
sub
lret
rorl
movsl
or
lret
pop
movsb
xchg
mov
push
jne
inc
aam
adc
int3
xor
pop
inc
add
pop
mov
sub
pop
mov
cmp
xchg
cltd
push
movsb
push
lahf
inc
cmp
testb
jno
ret
or
sbb
push
jg
push
or
cmp
push
dec
ror
test
sub
xor
dec
dec
add
mov
shl
cmp
test
notl
mov
stos
inc
xchg
mov
test
loope
push
adc
jb
pop
dec
decb
or
repz
aas
pop
mov
fsubr
or
js
or
or
sti
inc
cmp
mov
sub
in
xor
push
dec
jg
add
stos
notl
movswl
xlat
xor
pop
push
shr
dec
mov
jmp
rcrl
dec
jo
xlat
es
and
adc
add
dec
nop
call
ja
mov
pop
aaa
ss
aam
int3
push
sub
cmp
cmp
int3
jae
mov
dec
ljmp
adc
adc
rolb
dec
add
sub
and
mov
push
cli
push
les
mov
pop
and
mov
or
pop
and
push
mov
push
pop
sbb
push
fcoms
push
sub
pop
jmp
cli
push
adc
mov
sub
xor
adc
orl
pop
lock
rcrb
push
or
movsb
rcrl
mov
and
push
notb
inc
mov
jno
xlat
and
pop
pop
pushf
add
or
lds
in
push
adc
popa
pop
lock
xor
xchg
adc
dec
pusha
push
push
jge
adc
adc
popf
cmc
xchg
push
or
pop
addb
sub
mov
movsl
rorb
xor
pop
mov
lret
in
int
pop
sub
mov
or
inc
sbb
clc
cmp
in
lods
sbb
popl
jo,pt
push
dec
ja
ljmp
cld
or
push
and
insb
adc
and
cmp
mov
xor
add
dec
neg
std
adc
pop
mov
movsl
ror
je
bound
ret
mov
sub
or
inc
jae
add
outsl
sarl
test
sbb
inc
repnz
addr16
enter
xchg
mov
xchg
sbb
sarb
scas
rorl
dec
xchg
gs
and
in
sub
push
test
add
aaa
aad
mov
rcr
orb
stc
das
repnz
nop
cmp
dec
shrb
out
nop
stos
jmp
call
jne
lods
ficoms
inc
add
insb
inc
in
pop
sahf
cmp
jbe
test
not
orb
adc
xor
and
or
adc
and
jmp
push
ret
pop
loopne
push
in
cmp
or
push
xlat
jb
xchg
add
xor
fcmovne
push
mov
sti
sbb
test
mov
inc
daa
add
jge
and
push
or
cmpsb
pop
imul
sbb
call
aam
inc
sub
outsb
pop
lret
push
push
push
mov
dec
or
or
pop
jmp
dec
js
adc
out
add
dec
dec
outsl
mov
inc
cmp
xchg
dec
loope
inc
push
hlt
lret
and
lahf
jno
test
lea
mov
in
rcll
cmpsb
mov
ret
add
imul
mov
sbb
stos
dec
test
int3
push
sbb
and
div
pop
xchg
call
cmpsl
cli
bound
add
sbbb
daa
les
cmpsl
and
mov
jbe
mov
shr
mov
jb
push
ljmp
mov
icebp
and
add
sub
cmpsl
outsb
aam
flds
push
add
add
jg
jo
stos
adc
add
sbb
loopne
rcrb
aaa
or
pop
cmp
inc
loope
mov
push
popf
mov
outsb
pushf
cwtl
addl
mov
mov
call
inc
dec
das
repnz
shl
push
mov
das
adc
sbb
or
xor
in
scas
daa
je
mov
sub
inc
out
adc
fstl
and
add
adc
xor
stos
push
pop
jno
add
rcll
aas
sar
or
pop
push
push
imul
pop
push
ret
std
aad
push
mov
pop
xchg
aaa
not
or
cld
leave
sbb
inc
cmp
jmp
mov
pop
rolb
test
pop
movsbl
aas
cwtl
sahf
sub
adc
jbe
and
or
pusha
xchg
mov
xor
push
shlb
or
push
xor
cmp
mov
push
ret
or
or
jmp
mov
add
roll
adcl
inc
jns
adc
enter
es
and
mov
add
in
mov
mov
mov
sbbb
repnz
push
test
sub
mov
cmp
adc
pop
jle
push
jle
pop
push
push
push
pop
dec
add
lcall
les
dec
sbb
in
pop
xchg
iret
jmp
and
xchg
pop
out
sub
aas
xchg
pop
cld
insb
sub
add
or
into
movsl
push
or
sub
add
addb
stos
enter
bound
push
push
mov
dec
jmp
dec
sub
and
adc
xchg
cs
mov
dec
dec
add
add
or
lahf
cmp
xor
ja
aas
sbb
or
adc
mov
pop
shl
add
adc
push
mov
xor
mov
jle
pop
dec
shl
subb
aas
stc
dec
nop
or
fucomp
cmpsl
icebp
sub
sub
hlt
inc
inc
push
cmc
dec
into
ret
rcl
loopne
rorb
jmp
dec
popa
rcl
and
mov
nop
cs
xchg
test
adc
inc
xchg
mov
sub
cmp
dec
lret
popa
popa
sbb
cs
loopne
or
sub
push
dec
pop
fstpl
jb
sbb
push
mov
orb
jo
jl
and
popf
bound
aad
mov
add
lods
bound
jns
stc
xchg
sbb
xchg
pop
push
jmp
mov
cmp
lock
add
cmp
adc
mov
mov
xor
xchg
jno
mov
jg,pt
mov
cwtl
sbb
in
pusha
fimull
dec
and
push
inc
or
mov
dec
mov
aas
add
and
add
pop
inc
and
movsb
leave
and
xor
popa
sbb
pop
pop
and
pop
pop
sti
lds
hlt
or
dec
ja
lcall
and
push
mov
jmp
pop
add
repz
or
xor
or
adc
in
js
jmp
push
fldcw
push
popf
sti
dec
dec
popf
pop
push
jmp
adc
pop
dec
xchg
pop
xchg
test
lock
aaa
sub
add
pop
test
add
dec
sbb
and
mov
push
test
cmp
imul
jb
and
imul
ds
ret
inc
pop
test
dec
or
pop
repnz
stc
xor
push
mov
mov
add
gs
pop
mov
jecxz
popa
jmp
and
hlt
loopne
test
cmp
sub
sub
in
test
inc
push
jae
mov
inc
dec
movsb
cmpl
adc
movl
adc
push
frstor
cmp
nop
bound
stos
add
and
aas
mov
mov
dec
mov
jmp
stos
cmpsl
add
lahf
inc
push
outsl
or
out
dec
mov
inc
mov
jmp
ret
mov
push
pop
or
jbe
rcrl
cmc
xchg
cmp
daa
dec
repz
cli
loop
xor
or
adc
xchg
push
les
mov
std
mov
push
in
gs
and
pop
pop
notb
aam
pop
xor
jl
sub
popa
mov
add
loopne
dec
push
jmp
pop
aad
cli
mov
nop
imul
jecxz
push
xchg
stc
add
rolb
add
inc
pushw
adc
adc
and
ret
xlat
loop
fistl
jmp
jge
cmp
mov
mov
xor
int3
fisubs
push
push
mov
mov
aam
push
scas
popf
inc
xor
pop
popf
mov
jmp
cli
cmpsb
out
sub
std
push
data16
fcoml
popf
adcl
inc
je
pop
mov
insl
stos
mov
mov
jmp
movsl
pop
adc
xor
adc
xor
or
push
pop
jmp
scas
pop
ja
xlat
adc
mov
mov
inc
fs
jb
or
loopne
add
jp
xlat
enter
sbb
lret
bound
test
push
mov
dec
xchg
or
mov
fs
scas
push
gs
mov
sub
and
pushf
jg
sub
push
test
mov
clc
xchg
xor
daa
xor
jno
lret
es
push
adc
mov
imul
jns
bound
sub
xcrypt-cfb
cmpsl
outsb
mov
daa
inc
inc
cmp
aas
lock
pop
loop
lods
inc
fists
push
cltd
sti
lret
rorl
jmp
aam
inc
std
mov
add
or
jne
test
jmp
dec
cmp
inc
pop
xchg
cmp
adc
les
mov
push
jo
push
cs
jge
pop
pop
lea
pop
sub
dec
std
pop
add
sti
pusha
js
inc
jmp
lret
jb
mov
imul
out
add
mov
arpl
jae
adc
mov
dec
sbb
imul
jmp
jb
lcall
fsubrl
adc
lods
cmpsb
popa
idivb
push
jae
xchg
pusha
lea
fistl
loop
add
jns
bound
hlt
mov
add
add
popa
lods
pop
pop
push
xchg
cmpsl
mov
lahf
xchg
aad
xor
push
dec
call
push
rolb
mov
mov
in
lea
cld
mov
add
roll
push
rolb
int3
push
or
mov
out
pop
pop
cltd
loope,pn
das
gs
and
inc
adc
add
push
lea
dec
test
in
fdiv
inc
out
icebp
sub
call
aas
mov
adc
outsl
sbb
fstl
xorl
aad
dec
les
daa
mov
pop
call
add
shr
jmp
push
add
mov
pop
cmpsb
push
jmp
adc
jmp
inc
add
scas
testl
mov
cmp
mov
enter
cmp
ret
jns
imul
adc
mov
pop
cs
sbb
jmp
or
mov
push
xchg
push
decb
xorl
sub
pop
into
xor
je
jb
push
shrl
ja
sub
jmp
daa
aas
mov
bound
mov
mov
sub
clc
mov
sbb
ss
in
jmp
clc
push
push
push
jae
andl
or
cmp
lea
lea
jmp
xchg
gs
das
push
shl
mov
sub
pop
in
sbb
xchg
lds
mov
js
jmp
cmp
pop
pop
and
stc
cmp
jmp
incl
mov
shl
sub
shll
jnp
shl
add
dec
clc
pop
jmp
js
cmp
add
add
dec
jnp
pusha
jmp
or
lret
xchg
inc
or
push
pop
jle
and
mov
inc
sub
pop
and
outsl
pop
add
dec
add
xor
les
or
mov
xchg
aaa
fcomps
in
daa
out
scas
adc
push
xchg
jne
pop
xor
dec
psubsw
push
push
les
sbb
push
push
or
mov
icebp
pop
fmull
push
pusha
jb
pop
and
xlat
xor
out
and
mulb
or
inc
and
xor
pop
push
sbbb
xor
mov
mov
dec
mov
xchg
sbbb
inc
push
push
test
adc
mov
lea
cs
mov
loop
push
push
popf
addb
dec
jnp
mov
cmp
test
test
clc
lret
jns
or
fadds
in
xchg
out
dec
add
sub
pop
xor
inc
lods
jns
add
mov
push
insb
inc
adc
shrl
mov
inc
inc
mov
ret
sub
aad
and
fcomip
cld
in
sub
dec
xor
and
das
mov
outsb
push
notl
dec
in
lea
aad
mov
mov
push
mov
lret
int
ds
into
cmpsl
or
push
mov
dec
repz
shll
pusha
push
adc
ficomps
jmp
mov
add
or
mov
not
cmp
in
pop
xchg
in
clc
shlb
jecxz
add
jns
inc
int
scas
daa
mov
push
stc
jb
xchg
jne
lods
hlt
adc
push
jl
pop
add
mov
lret
ret
jae
mov
pop
xor
popa
js
int3
loop
sahf
flds
sbb
jo
out
pusha
pusha
repnz
xchg
shl
xor
les
cmp
fnstenv
or
rcll
push
mov
out
pop
push
cmp
pop
cmpsl
fwait
mov
cld
pop
sbb
sbb
adc
mov
ja
shlb
push
nop
and
imul
cltd
push
mov
add
in
xchg
adc
sub
in
and
mov
adc
pop
push
push
gs
xchg
lret
mov
jmp
mov
out
imul
dec
cmp
dec
out
mov
fs
xor
aaa
fsubrp
fwait
jo
popf
test
add
call
dec
loop
add
bound
fsubs
jmp
es
cmpsl
negb
cltd
lret
sbb
xor
mov
or
push
inc
jmp
testl
scas
sti
dec
cli
pushf
adcb
push
bnd
test
cmp
rcr
add
cmp
mov
xchg
mov
mov
jge
xchg
lock
or
ret
push
jl
cmc
loop
xor
push
loopne
je
andb
mov
cmp
or
mov
mov
dec
dec
cmpsl
inc
jecxz
into
jg
sub
mov
push
jecxz
jp
pop
jle
or
push
clc
sub
nop
or
adc
sub
bound
push
mov
push
out
jmp
jb
pusha
ja
adc
les
push
push
adc
popa
add
xor
inc
arpl
jge
and
add
jmp
les
iret
add
in
cmpl
pop
mov
pop
faddp
sbb
cwtl
adc
jp,pt
add
dec
inc
scas
or
mov
pop
push
mov
sbbl
inc
or
inc
pop
out
add
in
movsl
mov
nop
mov
icebp
jecxz
cli
mov
push
sbb
out
push
xor
adc
sbb
das
mov
bound
pop
or
mov
inc
hlt
or
mov
icebp
cmp
stos
sub
dec
in
mov
adc
roll
add
or
inc
shr
add
dec
pushf
test
addr16
jbe
mov
cmp
fstpl
pop
sbb
mov
jne
popf
dec
aas
cwtl
mov
js
in
or
pop
sub
pop
movb
lods
pusha
xor
and
pop
xor
mov
cs
push
mov
fxch
loop
ret
pop
pop
xchg
mov
in
scas
gs
mov
daa
lcall
add
sbb
pop
xor
or
sub
sub
inc
mov
xchg
out
or
mov
add
pop
lock
arpl
xchg
fmull
out
mov
add
sub
addl
pop
push
adc
scas
or
shl
xor
lcall
test
mov
xlat
ljmp
pop
adc
cwtl
xchg
push
dec
add
out
out
jns
pop
push
mov
add
pop
movsl
fs
rcrb
xor
pop
cmp
call
adc
jmp
aas
add
jmp
cld
je
imul
lds
mov
mov
dec
dec
or
inc
adc
mov
push
adc
xchg
popfw
fstl
mov
and
aad
sbb
daa
ja
mov
xchg
sub
test
cwtl
les
dec
adc
arpl
pop
ljmp
push
call
insl
xor
mov
push
or
mov
out
add
imul
pop
xchg
test
fs
dec
ret
dec
sub
iret
inc
or
adc
or
pop
mov
and
push
repnz
inc
pop
mov
inc
aaa
push
pop
lds
shr
lea
push
into
add
in
addr16
ljmp
aaa
jmp
fs
xor
adc
clc
loope
imul
icebp
nop
mov
lahf
jl
pusha
negl
mov
adc
push
add
xchg
subl
rorl
mov
cltd
cs
inc
and
lock
pop
jmp
push
add
add
pop
aas
sbb
jbe
add
pop
sub
dec
cmc
jmp
jo
mov
push
mov
rolb
inc
ss
sbbl
add
fbstp
push
cld
aas
rolb
inc
dec
stos
adcl
decl
out
xor
jb
lahf
sub
enter
jl
and
lret
cmpsl
jg
push
add
es
ss
fistps
mov
rcrb
xchg
or
and
jne
das
mov
sti
fisttpl
inc
out
lods
inc
dec
call
jl
sub
jno
fdivr
adc
push
clc
sti
imul
jmp
int3
sbbb
fiaddl
mov
add
jp
hlt
push
xor
xor
xor
into
dec
or
add
nop
iret
or
outsl
push
jecxz
or
dec
fdivs
rep
insb
add
mov
scas
sub
xchg
dec
mov
mov
adc
and
std
lahf
fxch
lret
cmc
call
push
and
xchg
push
decb
icebp
push
xlat
push
rolb
or
xor
neg
rorl
cli
pop
fs
or
pop
mov
sbb
xor
out
inc
adc
adc
rcrb
dec
cli
mov
sbbl
and
jg
dec
sub
nop
insb
popf
mov
in
loop
cltd
dec
iret
ret
fmull
addb
push
mov
push
mov
jg
jp
fsubr
roll
push
out
and
mov
imul
lock
popf
jl
jnp
insl
add
pop
sub
pop
mov
jg
mov
aad
xchg
mull
test
cld
mov
sub
cmp
push
in
push
mov
repnz
and
subb
lret
push
stos
jp
lea
adc
lfs
nop
cmp
icebp
jmp
sub
add
addl
jbe
mov
pop
push
nop
daa
call
adc
cs
jg
mov
popa
popf
fimull
add
call
jle
inc
adc
adc
dec
andb
mov
insl
sub
pop
ljmp
sar
mov
push
cli
ljmp
sub
or
cmp
sub
mov
arpl
pusha
lahf
pop
xor
cmp
cmp
inc
sbbb
cs
loopne
mov
shrl
mov
aad
xchg
mov
push
testb
sbb
push
mov
push
push
lcall
mull
pop
repz
or
outsb
aaa
mov
daa
inc
pop
jne
mov
or
aam
mov
cmp
out
push
lahf
or
int3
jne
aad
int
rclb
movsl
sbbl
imul
mov
ja
mov
jmp
shr
addb
mov
test
lock
js
dec
pop
out
push
mov
mov
pop
add
pop
sub
dec
xor
lahf
fucomi
add
pop
mov
in
mov
mov
jb
mov
popf
add
pop
dec
inc
push
inc
scas
aas
sub
hlt
push
sti
and
daa
test
icebp
and
jecxz
pop
iret
sub
cmc
or
shlb
inc
aas
mov
sub
mov
sbb
sbb
push
and
pop
pop
lock
pop
pop
out
testl
fadds
std
sbb
and
push
clc
jnp
stos
and
inc
in
lret
ss
not
enter
add
pop
dec
cmp
add
push
and
stos
inc
mov
push
mov
filds
push
mov
add
lods
dec
or
jge
mov
enter
aaa
in
clc
add
add
and
sub
mov
inc
push
sahf
sarb
jmp
mov
dec
mov
lahf
inc
ss
fildll
push
enter
inc
or
aam
adc
xor
loop
scas
imul
mov
dec
xchg
pop
add
mov
popf
xchg
out
scas
lds
repnz
or
mov
mov
mov
add
or
inc
sub
xor
xchg
call
leave
imul
sub
scas
xchg
jbe
inc
repz
pop
cmp
scas
inc
pusha
in
daa
add
cmpsb
je
inc
shr
jge
lds
xchg
outsb
enter
mov
and
mov
adcl
xor
jg
in
sbb
jle
loope
gs
lret
xchg
push
mov
mov
loopne
add
addl
jns
das
inc
mov
add
clc
loopne
iret
dec
mov
push
imul
repz
test
mov
push
push
push
cltd
ficoml
and
mov
inc
add
push
pusha
aaa
das
adc
adc
push
in
fsubr
sub
mov
cmp
mov
jne
sub
add
ds
or
add
and
jmp
pop
sbb
out
jmp
into
push
and
lahf
fs
xor
test
ret
mov
inc
das
pop
icebp
jb
cwtl
cmp
mov
mov
mov
mov
movsl
add
inc
jns
addr16
inc
sub
movsb
mov
mov
lahf
add
push
push
mov
sub
adc
lock
ret
lret
loope
cmp
cs
sti
inc
mov
inc
out
mov
fcompl
repnz
xchg
push
das
xor
js
push
andb
pop
jnp
push
fiadds
or
leave
mov
sbb
test
in
scas
cmc
mov
add
and
add
sbb
xor
mull
adc
mov
aaa
incl
ljmp
pop
sub
push
jmp
leave
xchg
rclb
adc
or
jo
std
adc
mov
jmp
dec
mov
mov
rclb
sub
cli
sub
push
jmp
mov
test
mov
cmpsl
sbb
xor
push
rcll
cli
out
push
lods
lret
gs
test
cmp
rclb
pusha
jne
sbb
fiaddl
xchg
add
mov
leave
add
sbb
mov
sub
sbb
push
shrb
ljmp
mov
sub
xchg
adc
rolb
into
adc
jge
mov
outsb
in
cmp
push
or
imul
mov
cmpsl
mov
push
sar
cmpsl
rcrl
insb
push
pop
mov
fmul
pop
inc
push
or
or
xchg
inc
test
sbbl
mov
cmpsl
pop
cltd
dec
clc
xor
sub
sbb
in
and
insb
push
sub
mov
das
push
sub
stc
pop
dec
shrb
cmpsb
nop
insb
lea
xor
mul
icebp
jb
mov
jns
cmpsb
or
fistpll
std
scas
pop
mov
sub
cmp
les
add
lret
jmp
sbb
jo
mov
bound
dec
jmp
jne
out
or
and
lods
bound
filds
scas
sub
and
vmovd
mov
inc
pop
adc
fs
out
xchg
or
sahf
popf
loop
pusha
jecxz
mov
mov
mov
xor
mov
and
pop
shrl
xchg
adc
xor
push
pusha
in
std
sbb
loope
adc
loopne
jg
adc
mov
test
jle
or
xchg
lahf
mov
dec
lock
mov
dec
mov
xchg
add
rolb
lcall
popa
xchg
jle
outsl
or
imul
jno
pop
sbb
popf
and
pop
rorb
sbb
cwtl
lret
sub
jg
imulb
loope
or
or
or
ror
std
mov
push
mov
jne
pop
sub
adc
shl
jbe
xchg
push
mov
xor
add
adc
popf
inc
jge
inc
or
out
movl
shll
fcompl
aam
shr
or
sub
es
mov
ret
addr16
xor
jno
mov
js
cwtl
arpl
push
cmp
jmp
push
inc
dec
sbb
and
xorl
push
jmp
pop
xor
lcall
inc
shr
cli
mov
lcall
push
stos
add
inc
mov
clc
cli
ja
dec
jnp
xchg
pop
mov
add
andb
insb
mov
cmc
test
fldenv
das
dec
push
mov
insb
cmp
inc
in
ja
outsl
mov
test
pop
out
mov
dec
pop
sahf
dec
push
cmpsl
cmpb
daa
inc
in
and
loope
mov
sarb
xchg
sub
or
push
insb
mov
inc
mov
cbtw
xor
pop
imul
dec
sub
cmp
inc
mov
jmp
cld
xor
inc
or
cwtl
int
or
rorl
mov
jecxz
adc
mov
push
mov
sbb
add
mov
jecxz
pop
push
movsb
js
add
adc
and
or
pop
jbe
popf
or
or
adc
icebp
dec
pushf
shl
jge
pop
adc
xchg
jecxz
mov
pusha
scas
xor
mov
je
popa
shl
push
jo
adc
pop
push
mov
out
or
pop
pop
stos
mov
das
inc
mov
call
dec
dec
stc
push
and
push
push
cmp
leave
pop
push
mov
xchg
pop
or
push
mov
push
mov
xor
test
mov
ret
push
movsl
ficoml
push
stos
mov
cld
outsl
jg
add
out
mov
jo
inc
sbb
add
xor
inc
ds
xchg
iret
in
xor
sbb
ds
sbb
dec
push
ret
jns
mov
cmp
outsl
or
lds
adc
jecxz
xchg
or
push
mov
es
add
inc
js
cmp
xchg
sub
loop
mov
sarl
loope
adcb
pop
stos
sub
jmp
lods
lahf
mov
push
cmp
js
push
xchg
jle
roll
xchg
push
pop
inc
sti
mov
jmp
pushf
pusha
mov
pop
mov
add
scas
xor
lods
dec
call
inc
mov
inc
jle
add
mov
adc
mov
dec
or
fists
xor
pop
dec
push
popa
add
pop
enter
sub
and
jmp
mov
push
test
xor
sarb
xchg
and
mov
lea
jmp
outsb
push
push
push
mov
xor
cld
add
xchg
jne
pop
mov
iret
push
stos
mov
pop
xor
test
daa
jle
jecxz
adc
xchg
adc
sbb
mov
push
and
sti
pusha
xchg
push
jmp
orb
movsl
jo
das
testb
sub
ss
ffree
leave
enter
ds
push
sub
es
add
mov
mov
faddl
xor
mov
add
dec
mov
inc
pop
ret
cmc
mov
cs
inc
mov
mov
add
neg
inc
jae
imul
lcall
inc
bound
fisubs
lock
dec
es
cs
adc
mov
aas
push
push
pushf
mov
dec
add
scas
sub
lret
push
pop
mov
mov
cmp
add
or
xor
aaa
sti
sahf
xchg
lock
jo
mov
out
pop
addr16
mov
jmp
out
pop
push
cwtl
rclb
rorl
ja
jne
add
cmp
and
inc
push
popa
ret
dec
jp
lock
push
push
dec
cmp
rcll
mov
pop
rcll
or
mov
shrl
push
mov
not
call
xchg
cmc
push
ret
in
pop
xor
sub
ds
cmp
in
pop
dec
cmp
xchg
mov
repnz
loop
aad
outsb
cmp
sub
pop
push
sbb
dec
add
jns
scas
jmp
fimuls
in
jns
mov
call
add
mov
adc
lret
shl
xchg
push
aaa
dec
fwait
add
mov
sub
test
mov
push
mov
daa
pop
pop
cmp
stos
dec
sbb
cmpb
jns
jnp
into
mov
jmp
ret
inc
jno
mov
inc
or
sub
pusha
cmp
cmp
js
cmpsb
sub
imul
scas
icebp
cmpsl
add
pop
jmp
xchg
fistl
mov
outsl
xchg
cltd
mov
jno
cmc
push
shl
adc
out
insl
jne
xchg
daa
lret
push
push
test
jo
push
stos
ljmp
adc
mov
mov
std
jno
push
sbb
scas
adc
jbe
or
decl
fdiv
dec
mov
sbb
lret
jmp
xchg
cwtl
add
or
and
mov
or
cmp
cmp
push
mov
or
jmp
or
lods
test
dec
dec
pop
cli
test
or
pop
std
or
cmp
jecxz
repz
dec
rclb
jmp
mov
insb
cmpb
add
mov
or
sbb
push
lcall
rcll
das
test
mov
cmc
xchg
imul
jmp
jb
sbb
pop
je
ror
and
adc
test
cmp
or
push
mov
push
push
mov
daa
add
gs
movq
aad
outsb
out
cmp
out
inc
fidivrl
incl
aaa
adc
adc
inc
mov
pop
sub
jne
and
pop
and
add
sub
mov
xor
orb
sarl
in
xchg
adc
je
and
xchg
je
daa
je
or
or
adc
jo
xchg
in
sub
xchg
adc
pop
push
test
adc
or
add
sbb
add
sahf
mov
jb
adc
xchg
adc
xchg
inc
mov
jmp
jge
daa
je
cmp
or
addr16
pop
scas
mov
dec
stos
push
xchg
push
or
pop
or
inc
pop
xor
jp
or
mov
js
notb
mov
cmp
in
loopne
loop
and
hlt
pop
insb
in
das
add
sub
mov
mov
pop
xchg
cmp
fisubl
or
mov
xor
lods
cmpsb
sub
dec
and
or
xor
pop
scas
xlat
shlb
mov
push
inc
push
mov
lods
mov
lock
and
or
or
add
push
add
clc
jmp
dec
sbb
repz
dec
cld
push
adc
in
adc
pop
scas
popf
xlat
xor
cmp
enter
jmp
out
fimuls
pop
jge
adc
roll
add
int3
jp
pop
imul
mov
cmp
xchg
repnz
cmp
fistpl
sbb
push
insl
sub
add
fisubrl
pop
inc
repz
and
pop
sub
add
push
sbb
jo
pop
sub
jns
jmp
fsubs
jbe
sub
test
push
cmp
pop
lret
mov
cmc
push
ljmp
jl
jb
mov
xor
daa
js
mov
hlt
and
pop
mov
jb
cmp
ss
xor
inc
inc
and
or
pop
mov
add
sti
ljmp
adc
mov
add
pop
xchg
call
xor
mov
and
dec
imul
jp
add
xchg
cmp
push
push
in
sub
js
pop
dec
neg
or
inc
sbb
push
les
int
pop
push
addr16
addr16
test
call
sbb
cli
dec
andl
xchg
pusha
and
jne
push
outsb
jp
cmp
or
and
out
lods
imul
push
jnp
pusha
xor
push
jmp
fsubrs
lods
mov
cmp
insl
jmp
inc
imul
loopw
jae
rorb
or
loopne
sub
das
aad
jmp
call
mov
pop
dec
pop
jle
loopne
out
scas
xchg
mov
popl
add
std
xchg
lock
jb
leave
call
movsb
std
add
fldl
add
push
mov
movsl
mov
lret
ja
incl
jnp
and
sbb
add
in
dec
push
aam
js
fstpl
and
hlt
push
nop
loopne
sahf
dec
mov
add
mov
pusha
loopne
fs
imul
inc
or
scas
cmovo
push
shlb
jg
and
dec
hlt
mov
inc
shl
xor
in
ret
aad
add
sti
shlb
dec
push
addb
in
pop
jg
and
or
sub
bnd
adc
out
jne
or
sbb
mov
xchg
and
shlb
jmp
notl
dec
pop
jle
lcall
and
push
ret
add
icebp
ljmp
and
rcll
repz
inc
test
pop
mov
mov
xor
shl
add
pop
add
jg
clc
pop
or
mov
jmp
jbe
add
pusha
out
add
dec
notb
push
outsb
lds
scas
les
or
in
push
jmp
leave
adc
xchg
imul
repnz
cmpl
jnp
or
inc
rolb
fsubrs
pop
loope
pop
in
dec
movsb
mov
ret
xor
mov
xchg
push
or
ror
cmpb
jns
out
movsb
and
jmp
ss
and
icebp
mov
outsl
cmpsb
out
les
mov
mov
add
mov
push
add
pop
add
cltd
pop
pop
daa
push
xchg
jp
sub
xor
loopne
mov
lret
mov
cli
xor
or
xchg
xchg
bound
add
rolb
insl
ljmp
inc
jne
sti
mov
dec
lock
adcl
pop
movlps
scas
sub
xor
shrl
cwtl
dec
dec
mov
jo
mov
rcrl
lret
rcrl
jmp
mov
cmpsb
shrb
enter
mov
jl
push
push
or
pop
push
xchg
clc
dec
jmp
sub
jecxz
xchg
sti
repnz
lcall
rcrb
jmp
push
dec
dec
push
cmp
inc
jae
adc
xchg
test
mov
mul
and
popa
jmp
push
add
pop
cmp
aam
push
das
adc
int
push
xchg
dec
sub
xchg
pop
mov
inc
mov
pop
in
scas
mov
jge
cmc
jmp
ficoms
push
inc
jae
mov
in
loop
cmc
adcb
cmp
dec
inc
or
mov
sbb
lea
push
cmp
icebp
xor
out
mov
mov
add
jmp
jp
fnstenv
mulb
or
inc
mov
push
mov
frstor
xor
and
aas
lods
stc
xchg
add
lahf
pop
in
xchg
in
icebp
pop
inc
push
push
rcll
rorl
sub
test
mov
sub
push
fisttpll
pusha
aaa
sysexit
mov
dec
mov
notb
push
xlat
and
cmpsb
loop
testl
inc
inc
shll
sbb
das
dec
add
dec
xorl
sub
inc
jne
pushf
popa
xchg
or
push
test
jnp
cmp
sub
mov
mov
bound
mov
adc
xor
pop
push
pusha
in
sbb
mov
push
adc
incb
out
jb,pt
aam
pop
stos
xor
sub
pop
push
mov
sub
in
cltd
pusha
mov
cltd
jge
stos
xchg
dec
mov
xlat
dec
aam
push
lret
push
orps
mov
adc
push
int
sbb
in
dec
rol
xor
pop
and
sahf
imul
fcmovnu
dec
cmp
es
les
push
adc
ljmp
das
iret
adc
pop
inc
cmp
enter
jmp
test
pop
xor
bound
js
or
and
dec
mov
ljmp
dec
jmp
test
jno
in
ret
ja
sub
in
push
cli
mov
pop
popf
test
mov
mov
in
inc
adc
and
test
neg
add
push
imul
sub
push
cld
and
sub
jnp
cmp
mov
lods
add
push
in
int
leave
push
xor
fsub
rorb
and
enter
jl
cmp
call
ret
push
mov
jbe
out
jnp
negl
mov
push
jmp
jo
es
add
add
mov
push
xchg
mov
xchg
repz
jl
inc
add
mov
movb
jnp
insl
sbb
mov
or
push
xor
or
out
dec
pop
outsb
jnp
test
and
std
xor
sub
mov
imul
aam
push
hlt
stc
xchg
int3
mov
hlt
sub
jbe
pusha
pop
nop
incb
lahf
leave
std
lret
xor
mov
loope
repnz
ret
hlt
cmp
out
pop
out
sbb
insb
incl
into
push
dec
jmp
lret
or
sub
push
test
sbb
dec
addl
adc
pop
dec
jbe
add
outsb
push
insb
xor
dec
dec
cmpl
sub
pop
test
sub
lods
or
negb
in
or
out
pop
push
lods
pop
and
addr16
sub
push
cmc
inc
xchg
out
sti
lret
mov
mov
xchg
dec
jmp
insb
mov
mov
arpl
gs
cld
out
clc
mov
daa
pop
add
jnp
pusha
sbb
inc
cmpsb
jge
shlb
mov
add
inc
das
clc
dec
fimuls
mov
push
fs
push
imul
fisttps
push
into
or
imul
xor
xor
inc
pusha
enter
adc
cmp
lods
xchg
mov
jnp
or
cmp
push
into
sub
mov
mov
mov
adc
pop
pushf
mov
pop
push
cld
lret
sti
adc
mov
clc
ret
pop
loopne
or
xor
mov
lret
jl
outsl
dec
lret
pop
mov
xlat
nop
stos
sub
outsl
inc
loop
jp
popf
subl
jg
cmpsl
dec
jmp
adc
dec
xor
sahf
cmovne
mov
add
cmc
lock
lcall
mov
push
test
jno
dec
inc
push
in
out
iret
sbb
aad
or
dec
and
pop
add
out
fldl
add
jp
stos
rcrb
xor
jnp
lods
jle
sub
rorb
in
xchg
lret
arpl
dec
lods
add
popa
sbb
scas
and
xor
xlat
mov
mov
add
cmp
out
mov
push
cmp
xor
add
mov
dec
add
pop
lret
and
and
pop
sub
addr16
into
push
xor
xor
pop
jnp
or
sti
enter
sub
sub
or
and
add
mov
xchg
jl
add
cmp
push
jmp
and
xchg
dec
xor
or
inc
sub
or
pop
jecxz
loopne
xor
pop
out
mov
push
or
or
or
aaa
add
mov
xor
icebp
insb
dec
or
leave
sbb
cmp
daa
cmp
inc
pop
test
add
jbe
jmp
movsl
pop
out
sub
dec
dec
lock
mov
jmp
lahf
push
lock
into
js
dec
add
or
xor
and
lahf
fsubr
sub
dec
aas
ret
xlat
imul
xchg
mov
jne
or
in
mov
jecxz
push
dec
add
inc
or
jmp
dec
int3
pop
add
ljmp
jae
lods
sbb
es
mov
sub
adc
call
cmp
sbb
sbbl
js
movsb
add
scas
js
lods
add
push
not
xor
jno
imulb
inc
jne
sub
jp
jmp
add
lret
add
clc
icebp
cmp
sbb
or
pop
inc
mov
or
test
adc
dec
inc
jl
into
adc
push
sub
cmp
imul
repnz
mov
inc
or
push
cmc
jmp
mov
movaps
ss
add
sub
xor
cmp
or
jbe
adc
add
and
mov
add
xor
popa
push
inc
add
data16
loopne
jae
and
jge
push
jge
sbb
pop
xchg
add
outsb
add
or
ds
and
jl
cmp
add
flds
mov
js
jmp
sbb
jg
jns
or
das
mov
mov
dec
mov
loopne
mov
inc
out
pop
push
das
jmp
jae
jle
jne
das
sub
push
scas
sub
adc
cmc
ljmp
mov
sarl
ret
xchg
fmuls
mov
jg
pop
inc
sahf
or
cmp
or
sahf
sub
push
xchg
fisttps
mov
push
jmp
stc
cmp
lds
test
vunpcklpd
pop
cwtl
add
dec
lret
inc
filds
sub
adcb
jmp
ljmp
int3
push
imul
mov
out
xor
shlb
jge
xor
lds
cmpsl
add
test
cli
sub
das
enter
jmp
ret
add
and
das
stc
dec
aam
xor
adc
mov
mov
jbe
fstl
and
pmulhuw
and
inc
aaa
or
and
cltd
mov
sti
and
popf
icebp
mov
push
dec
dec
inc
loopne
leave
inc
jno
mov
jae
or
push
push
out
ret
xor
stc
and
insb
add
cs
inc
negl
dec
jmp
loope
and
cmp
xor
js
xor
pusha
ret
vpand
fs
sub
sarl
add
lock
inc
out
mov
out
cmp
sub
lds
xchg
in
enter
shlb
sub
mov
ss
jnp
xor
insl
mov
les
sbb
or
adc
and
pop
pop
aad
fimull
mov
xchg
hlt
fldl
cmp
aam
pop
xchg
sub
add
cmp
jecxz
and
add
test
shr
andb
jmp
sub
or
adc
icebp
adc
ja
mov
fisttps
mov
or
dec
jo
pop
jnp
shl
sar
mov
jle
jg
les
lods
and
and
xchg
mov
fsubrl
sbb
xor
pop
xlat
mov
jg
mov
jbe
and
sub
repnz
jmp
or
mov
jae
ja
mov
mov
popf
jmp
mov
adc
sub
outsb
jmp
xor
cmpsb
das
ret
push
fwait
mov
or
push
shlb
jecxz
mov
and
mov
popa
and
aam
outsb
stc
xlat
mov
das
lcall
push
inc
subb
xor
rclb
xchg
mov
in
push
nop
push
divb
sub
imul
mov
ud0
pop
push
loopne
mov
stc
mov
adc
fdivrs
pop
mov
dec
divl
xchg
aam
adcb
scas
lock
repnz
or
xor
inc
insb
pop
push
mov
je
mov
xchg
or
mov
xor
mov
ret
xor
fcoml
push
daa
pop
incb
mov
cmp
push
out
or
pop
clc
jecxz
inc
cld
push
pop
stos
jno
pop
test
mov
pop
xor
mov
add
dec
arpl
rcl
xchg
xor
lock
jmp
push
mov
test
jb
pop
bound
pop
pop
into
gs
add
call
mov
jg
dec
adc
dec
ss
icebp
aad
fidivrl
mov
dec
mov
adcb
fdivl
add
out
jnp
or
mov
add
pop
pop
data16
push
bound
iret
mov
hlt
sti
sub
mov
push
lock
pop
push
insl
iret
or
fistpll
cltd
jmp
in
mov
xlat
mov
xchg
sbb
add
xor
or
test
fstpt
push
int3
negb
xchg
or
xlat
or
adc
loope
pop
imul
mov
dec
xor
orl
add
and
sbb
cli
ljmp
and
pop
or
xchg
rcrl
aad
clc
shl
insl
popf
push
jg
mov
jge
outsl
xchg
xor
std
pop
mov
cmc
sub
pop
orl
xchg
int3
rolb
mov
cltd
rolb
mov
ljmp
jmp
cmp
in
inc
mov
stos
clc
mov
cs
xchg
dec
aam
mov
dec
scas
lret
dec
jnp
out
cld
data16
cmp
and
inc
add
dec
fstpl
fadd
sti
iret
add
daa
arpl
jle
leave
call
sub
inc
push
fimuls
pop
loop
fiaddl
push
cli
mul
adc
sti
pushl
repnz
push
pusha
cmpsl
aas
movl
sub
jo
cmp
add
or
mov
or
pop
outsb
mov
mov
enter
push
ja
es
sbb
decl
mov
stos
and
outsl
and
les
xor
jae
add
orb
pop
fisttps
popa
cmpb
and
cwtl
jbe
and
add
push
or
mov
outsl
pop
dec
cwtl
jb
in
jae
xchg
mov
xor
sub
incb
mov
mov
popf
mov
pop
cmp
pop
in
leave
mov
adc
out
or
push
add
or
enter
add
mov
lcall
popa
xchg
cmp
lahf
loopne
cli
sti
xor
xchg
push
jnp
inc
sbb
and
add
stos
cs
push
or
dec
cmpsl
pop
out
xchg
icebp
out
movsb
mov
cmpl
cmp
cmp
cli
pop
jmp
and
cmp
dec
dec
push
out
insb
adc
adc
jl
adc
pop
sbb
mov
cmp
jecxz
movsb
mov
add
nop
sahf
sub
cli
pushf
out
dec
sbbb
xchg
sarb
cmp
inc
pop
xchg
stos
xchg
add
and
dec
pop
sbb
ds
lret
cmp
ret
clc
pushl
xchg
push
loope
outsb
adc
sub
lods
push
pop
adc
xchg
push
pop
addr16
jecxz
call
cltd
shrl
shrb
or
fistps
inc
push
jo
loop
lret
fbstp
jmp
int
out
popf
arpl
jne
lahf
fisubs
push
pop
fisttpll
push
jmp
pop
lret
stos
cmp
aam
cmp
ljmp
into
imul
sbb
adc
idiv
push
insl
cli
xor
shl
xor
adc
repnz
or
shlb
push
add
or
or
lock
sti
adc
jmp
push
pop
pop
mull
or
test
or
adc
mov
dec
adcb
pop
add
xor
lock
cmc
aam
cmp
call
ret
loopne
xchg
sahf
cmpb
cmpsl
inc
and
push
add
push
push
push
imul
cmp
mov
push
sbb
movsl
out
cmp
push
enter
xor
mov
mov
lret
loop
test
jbe
add
xchg
mov
fbstp
jmp
sub
mov
jl
jp
sbb
push
jg
test
mov
fistpl
xchg
rorb
jbe
push
xlat
dec
cmc
push
pop
aad
add
xor
add
outsl
fstps
std
push
or
fnsave
loope
cli
fcomps
out
push
rcll
outsb
pusha
push
adc
mov
push
mov
pop
adc
or
enter
fisubs
sbb
mov
add
aaa
das
push
scas
test
mov
sub
daa
xchg
popa
sbb
fnstcw
aaa
jno
xor
test
sbb
dec
roll
jne
cltd
fidivrl
mov
loope
add
shl
dec
xor
cmp
sub
rorb
cmpsl
sub
les
adc
mov
mov
sbb
pop
push
push
inc
sub
je
dec
pop
mov
addl
int
and
or
test
int3
loopne
dec
jo
or
jne
pusha
cmpb
sub
mov
push
add
push
adc
jge
mov
fcoms
ds
negl
in
cmpl
mov
into
bound
and
mov
bound
nop
punpcklbw
test
orb
sbb
mov
out
orb
mov
push
les
fs
scas
jae
fs
sbb
pop
push
pop
out
in
xchg
xor
imul
rorl
mov
dec
mov
out
sbbl
fisubs
xchg
fdivrs
xchg
bound
bound
jmp
jbe
aaa
stc
or
adc
jp
fdivl
xchg
push
xchg
test
cmpsb
dec
cmp
pusha
inc
scas
push
pushf
enter
nop
pop
xor
lahf
xchg
mov
jmp
loopne
dec
jle
mov
mov
add
mov
ret
add
loop
pop
cld
sub
or
push
xchg
lahf
add
icebp
ds
aaa
xchg
pusha
cmp
enter
subb
jmp
mov
jns
xorb
dec
je
lods
and
cmp
or
cld
add
fistps
ljmp
sub
test
outsl
sbb
gs
sbb
mov
xchg
imul
jg
mov
ja
addl
or
pop
cli
pop
add
add
sub
pushf
lret
insb
imul
sbb
adc
jge
sbb
in
mov
xchg
jns
xchg
xlat
xor
popf
cmp
pop
push
sti
push
insb
test
or
std
add
mov
xor
stos
pusha
or
int3
decb
cs
adc
push
pop
push
lods
loope
sub
xor
adcl
sub
ficomps
mov
inc
adcb
push
pop
mov
fbstp
ret
mov
sbb
pop
and
ss
out
mov
lods
push
push
inc
dec
xchg
out
mov
sar
enter
in
xor
sar
inc
fbld
test
mov
pop
push
fmull
pop
pop
xchg
shrl
popa
rclb
add
cmp
out
or
cli
fs
das
test
lret
and
inc
mov
es
push
add
leave
std
jne
inc
cli
leave
iret
rcl
loopne
testb
xchg
xor
ror
push
cmp
push
mov
and
fiadds
jbe
or
fucomi
call
inc
sbb
in
fiadds
shl
outsl
xor
inc
scas
pop
and
xlat
dec
ja
hlt
xchg
jl
aad
mov
sub
push
sbb
sbb
add
jl
sbb
mov
lods
out
add
idiv
inc
pop
dec
maskmovq
shl
pop
push
dec
test
adc
pop
aam
dec
shll
pop
cld
sub
sub
sub
add
push
ljmp
jecxz
push
js
scas
jmp
ljmp
pop
cwtl
fs
sti
mov
or
xchg
sub
add
adc
sub
mov
mov
inc
and
pop
inc
clc
xor
dec
pop
out
cmp
fisubrs
dec
cwtl
cmp
loope
insb
or
cmp
pop
push
pusha
or
mov
popf
loopne
iret
or
lock
push
jle
cmp
push
mov
cmpsb
enter
dec
pop
jns
or
lods
push
pop
outsl
inc
lods
jmp
imul
sub
xor
sbb
icebp
lret
add
adc
jb
sub
pop
adc
jle
and
das
jl
je
or
sbb
inc
cmp
movsl
sbb
mov
pop
daa
shr
xchg
and
and
subl
loopne
stos
xchg
lock
cmp
loop
sbb
xor
adcl
cli
adc
testl
jno
and
test
mov
pop
cltd
stc
outsl
push
xor
enter
ret
add
xlat
xchg
leave
int3
shl
lock
push
xchg
sub
add
jmp
add
inc
push
dec
into
insl
adc
cld
push
repnz
pusha
loop
sbb
pusha
cmp
push
mov
repnz
push
mov
aam
mov
and
fisubrs
icebp
sarl
push
mov
mov
mov
stos
and
push
and
hlt
dec
lret
pusha
fbstp
fildll
jge
lds
loopne
adc
out
push
jb
cmp
jne
adc
js
in
push
or
adc
sub
lret
ret
jmp
in
push
dec
dec
mov
pop
adc
jmp
inc
xchg
fdivrs
into
pop
dec
add
imull
fdivr
int3
jmp
sub
cmpsb
pop
fcmovbe
jne
lahf
inc
push
jmp
inc
sarb
or
or
mov
lahf
or
ffree
jle
and
mov
insb
xor
mov
xchg
shl
add
jmp
les
jmp
int
cmp
xchg
pop
xor
inc
add
add
adc
mov
sub
hlt
aas
daa
mov
inc
pop
stc
orl
pop
add
sbb
inc
dec
and
jb
or
jmp
testl
push
std
mov
pop
fldenv
lods
mov
je
xchg
and
adc
test
pusha
lock
daa
pop
add
xchg
ljmp
add
push
jnp
dec
or
dec
inc
repnz
out
mov
push
mov
sbbl
je
mov
cmp
bound
std
pop
cwtl
mov
adc
loope
jmp
sub
mov
lds
out
incb
movaps
mov
icebp
cmp
xor
adc
out
daa
int3
rorb
pop
xor
add
jnp
ds
push
mov
int3
and
dec
push
test
dec
xchg
pushw
pop
cwtl
mov
sbb
push
movsl
add
add
orb
leave
or
ret
in
add
push
jmp
outsb
inc
push
repnz
repz
cld
clc
je
xor
cmpsl
in
shrb
mov
fistl
stos
std
xor
push
sti
and
mov
mov
pop
iret
pushl
jg
xor
rorl
popf
ret
add
mov
push
xor
arpl
mov
inc
xchg
push
lock
pop
loopne
daa
jns
mov
or
fldenv
push
pop
arpl
scas
dec
pop
lret
ja
dec
mov
imul
mov
lods
jmp
lcall
or
mov
push
icebp
imul
and
pop
pop
clc
les
mov
out
push
add
bound
adc
adc
jecxz
or
push
mov
or
dec
mov
lret
ljmp
or
loopne
adc
je
clc
mov
mov
or
push
add
dec
loopne
pop
shll
push
mov
cli
inc
xchg
and
jg
imul
aam
incb
pop
clc
jb
pushl
sub
pop
xchg
jnp
shl
scas
in
pop
xchg
stos
subb
inc
ja
inc
rcll
call
push
xor
add
outsb
pop
xor
add
ljmp
hlt
xorl
add
cmc
scas
sub
add
sarb
mov
mov
add
lret
mov
mov
cli
or
lcall
sub
jbe
and
imul
xchg
aas
movsb
das
jg
jl
push
push
push
jmp
sbb
out
or
fwait
jo
nop
inc
mov
das
mov
jo
add
fldenv
repnz
jne
popf
jo
pop
shr
ljmp
js
jno
rcr
add
mov
mov
insb
pop
inc
pop
dec
dec
aas
sub
adc
push
add
jl
push
out
sbb
mov
fs
jmp
je
out
out
aaa
clc
dec
divb
xchg
sub
mov
fcmovb
and
xchg
mov
mov
and
notb
mov
add
jnp
mov
adc
std
fs
xchg
add
out
pop
or
jg
ds
fcmovb
add
pop
ljmp
jmp
mov
mov
adc
xchg
popf
adc
lods
mov
add
out
xor
cmp
sub
sub
mov
fisubrl
std
sub
or
shr
addl
push
aad
jl
call
outsb
pop
pop
std
jle
orl
inc
xor
pop
xchg
rcll
test
xchg
push
inc
mov
push
popa
pop
pop
in
or
test
pop
aas
daa
push
shlb
push
stc
daa
or
dec
xlat
sahf
cmp
je
sbb
inc
stc
ss
test
sub
lret
cwtl
xor
fimuls
clc
lahf
mov
sub
sbb
adc
pop
test
mov
mov
or
cld
pushf
add
xor
clc
mov
fistpll
ret
movsb
jmp
pop
push
ret
and
lods
or
ljmp
inc
les
imul
rolb
sub
pop
icebp
das
stc
xlat
push
fdivl
mov
xchg
idivl
iret
add
mov
call
dec
je
rclb
mov
ja
movb
jns
test
pop
push
fsubl
cmp
rcrl
jb
sub
movb
pusha
aam
shr
cmp
mov
and
add
inc
and
pop
adc
mov
jmp
hlt
dec
add
mov
inc
repz
popf
jo
in
xor
inc
in
das
push
dec
rcrb
push
or
ja
xchg
cmp
lock
gs
sub
inc
sub
pop
pop
ds
repz
loop
scas
push
dec
pop
push
adc
jns
add
mov
cld
add
adc
push
mov
push
aas
mov
inc
sbb
pop
popf
aam
leave
or
jo
lahf
pop
call
cmpsb
sub
dec
inc
mov
in
push
outsl
and
cmp
add
mov
or
ljmp
jmp
pop
push
es
adc
scas
jge
mov
inc
sub
cmp
das
mov
mov
or
xor
dec
sub
je
lret
sbb
insb
push
shll
cmp
arpl
xor
das
stos
loop
shr
and
mov
pop
pop
or
inc
mov
mov
ja
mul
pusha
pop
or
cmp
mov
mov
lds
icebp
mov
jno
cltd
fmuls
lret
sub
aas
add
loope
inc
cmpsb
xchg
xchg
xchg
and
lock
jne
daa
cmc
lods
jg
hlt
add
adc
push
mov
adc
dec
rorb
mov
adc
jb
xor
lds
shrb
mov
adc
bound
lock
push
xchg
cmp
mov
and
shlb
scas
and
and
pushf
cmp
jg
add
mov
mov
sbb
in
or
fisttps
mov
inc
test
fs
or
push
and
and
and
and
and
out
add
adc
pop
jle
notb
mov
bound
adc
in
rcrl
movsb
inc
scas
and
cltd
or
notb
and
adcl
dec
adc
lret
jp
sahf
mov
adc
sub
andb
lcall
adc
and
xor
mov
mov
enter
ficomps
popa
xor
adc
jno
in
andb
les
jg
add
mov
sub
rolb
jns
sbb
insb
jns
add
dec
js
inc
stos
incb
das
inc
xchg
inc
xchg
jo
mov
jno
add
inc
push
andl
ret
and
rolb
cmp
add
ljmp
ret
push
repz
mov
push
xchg
add
adc
xor
inc
mov
dec
enter
rorl
pop
mov
movsb
or
leave
cmp
push
or
jo
fisubrl
iret
xchg
add
and
xor
test
adc
or
mov
lcall
or
add
inc
mov
pop
push
xor
sbb
enter
movsb
jns
mov
dec
lcall
or
out
inc
shl
mov
or
jmp
or
dec
decb
dec
arpl
popf
les
add
xor
xchg
movsb
adc
dec
dec
push
sti
cmp
pusha
jmp
jns
lods
mov
jecxz
xchg
dec
shl
add
icebp
mov
mov
push
push
dec
pop
cld
hlt
cmp
sub
mov
add
adc
jne,pt
mov
mov
jg
out
jge
inc
pop
or
gs
daa
push
pop
mov
sbb
or
cmc
pop
xchg
xor
mov
sbb
sbb
pop
mov
jo
push
jmp
mov
push
fstps
mov
jp
xor
mov
jno
insl
subb
imul
out
cmp
jne
push
pop
fbld
aam
mov
lahf
mov
inc
loop
inc
jge
sbb
adc
out
in
das
add
jbe
lret
je
outsl
inc
jmp
push
and
daa
add
or
pop
not
lahf
dec
imul
sub
xchg
add
mov
and
ljmp
std
jno
aas
test
sahf
push
inc
ja
mov
fbstp
push
sarl
outsl
mov
fnsave
push
jb
add
dec
pop
shl
mov
jmp
and
fdiv
inc
adc
aam
mov
and
and
out
jmp
aaa
jg
fisttpl
outsl
pop
push
add
iret
rclb
mov
pop
inc
lcall
and
loope
dec
inc
xor
test
pop
icebp
aaa
pop
and
jne
arpl
adc
movsl
jg
neg
jl
scas
sub
testb
or
jmp
xchg
inc
pop
xchg
or
pop
in
rol
push
sahf
push
and
add
pop
fidivrl
jne
or
push
and
roll
mov
mov
fmull
xor
pushf
aaa
push
fdivs
jmp
lds
xchg
push
add
jmp
add
inc
std
adc
xchg
push
mov
es
inc
and
stc
imul
ret
fsubp
cld
jo
std
repnz
fnstcw
sub
cmc
mov
sub
mov
sub
add
ret
stos
push
dec
ds
xlat
sub
or
sbb
add
add
addr16
icebp
hlt
imul
jae
pop
cmc
mov
stc
aad
add
loop
cmpsl
aad
leave
test
repz
xchg
scas
pusha
adcb
dec
data16
or
test
sub
scas
pop
and
testl
xor
or
mov
cld
jo
or
push
xor
pop
lahf
jb
jmp
pop
call
sbb
test
fistps
cmp
jge
jmp
sbb
inc
or
mov
xor
test
outsl
add
js
push
push
pop
enter
adc
inc
xchg
aam
add
pop
add
cmp
in
push
push
js
or
or
inc
add
add
imul
push
cmp
sub
icebp
cmp
in
mov
push
inc
movsl
or
xchg
add
and
xorb
lds
lods
xor
and
cmovno
dec
sub
xchg
jno
adc
xor
inc
rorb
cmc
jmp
pop
jbe
loop
outsb
loopne
pop
mov
jae
adc
xor
cmc
dec
or
dec
jb
xchg
xor
fcom
repz
rcrl
push
jae
aam
sbb
push
fcmovne
mov
das
adc
jbe
pop
mov
and
out
les
xchg
pop
mov
jmp
push
ja
xchg
push
push
push
jmp
sbb
xchg
mov
rorb
inc
push
fcmovbe
pop
add
mov
and
or
mov
fisubs
cmp
pop
dec
addr16
push
ds
jmp
rcrb
pop
cltd
xchg
ret
push
cwtl
lock
mov
jg
cmc
and
das
sub
push
mov
sbb
cmc
sbbl
es
add
lods
dec
or
jg
dec
sbb
test
cmp
xlat
cld
cltd
push
popf
inc
inc
ss
shl
push
cwtl
out
sub
add
push
xor
adcb
das
push
test
inc
insl
push
push
sub
jmp
pop
and
cmp
or
dec
ret
out
iret
push
adc
add
pop
inc
pushf
es
xor
es
add
push
inc
or
add
test
and
jbe
add
pop
jmp
pop
dec
psubb
pusha
insl
fsubl
sbb
jo
mov
insb
into
add
jl
dec
xor
adc
inc
pop
cmp
fs
in
jbe
and
push
inc
sbb
pop
add
test
out
push
pop
pusha
dec
loopne
sub
out
rolb
das
outsb
mov
jno
push
inc
leave
fs
pop
mov
clc
pop
lahf
push
adc
xchg
xor
lods
or
out
das
test
cmc
inc
adc
dec
clc
adc
stos
xor
aaa
or
sahf
faddl
mov
cld
mov
movsb
aas
cs
mov
xchg
sub
sub
lods
mov
jp
dec
pop
sarb
cmp
leave
shl
mov
ljmp
adc
and
mov
push
subb
pop
pop
in
dec
lret
into
sub
xor
xchg
inc
andb
add
xor
pop
pop
call
inc
ljmp
dec
sub
test
xchg
fbld
mov
je
ret
pop
outsl
repnz
or
jb
flds
sbb
jae
inc
mov
push
sub
loopne
out
add
in
in
jge
xor
sbb
push
flds
loope
cmp
mov
mov
pop
mov
mov
push
test
popa
test
insl
loop
inc
mov
sub
jge
sub
pcmpgtw
loopne
lods
test
pop
xchg
mov
stos
orl
imul
aas
add
mov
mov
std
pop
jae
add
jmp
pop
push
mov
cmp
sub
add
mov
ljmp
daa
inc
notb
cmpsl
mov
cmp
out
adcb
cs
shr
in
seto
mov
bound
shlb
in
pop
cs
mov
lods
pop
lds
xchg
xchg
inc
add
mov
loopne
rolb
add
shr
add
mov
pop
subb
add
data16
sbb
test
sti
test
test
xchg
mov
push
adc
xchg
pop
inc
mov
jl
jne
or
hlt
add
das
aaa
add
xor
or
pop
xchg
pop
leave
jge
aad
sub
mov
out
out
cmp
sbb
ret
ret
jo
cmc
popf
outsb
fstpt
add
pop
xlat
daa
jg
xor
adc
stos
std
jnp
jmp
dec
sti
fadds
or
pop
into
pop
test
lret
jmp
xchg
js
pop
fstpt
xchg
sbb
add
push
das
xchg
je
cmp
subb
pop
push
xchg
or
cmp
dec
add
addr16
push
jmp
test
and
mov
ds
jno
jmp
pop
das
jl
sbb
cs
pusha
les
xchg
sbb
xor
jbe
or
dec
sub
add
clc
add
int3
push
xchg
xchg
inc
adc
cmp
dec
aad
sbb
fcomps
clc
clc
xchg
sub
out
sub
jne
notb
add
push
pop
mov
mov
inc
sub
or
pusha
mov
stos
ret
add
dec
push
sub
jo
pop
xchg
notb
push
push
jmp
dec
test
jb
xor
leave
add
shlb
les
ret
cmp
imul
or
mov
add
sbb
or
add
jns
mov
push
jp
and
test
fistpll
imul
push
mov
xchg
jle
mov
sti
sbb
jmp
rclb
add
aad
jmp
je
cmp
sub
jmp
popf
sbb
jg
ror
adc
pop
sbb
aas
out
loope
stc
dec
fimuls
jp
jl
clc
arpl
insl
repz
push
dec
push
xchg
pusha
jo
sbb
adc
mov
jns
and
movsl
sbb
jo
mov
jle
jb
mov
mov
cmp
popa
pop
mov
mov
popf
jle
cmp
stos
sub
sub
sbb
dec
mov
add
pop
and
mov
fidivs
jecxz
int3
int3
mov
push
es
test
js
mov
or
lcall
inc
add
pop
or
lahf
ret
adc
cwtl
ljmp
pop
add
add
xor
pop
leave
pop
cmp
dec
sbb
and
jmp
jo
xchg
int3
mov
es
fiaddl
or
push
sbb
lea
shr
arpl
xlat
mov
or
insl
lock
push
loop
pushl
es
inc
xchg
cmp
cmpsl
std
adc
out
das
mov
jg
pusha
leave
and
add
cmp
shll
lcall
sub
add
cmp
lcall
cmp
lret
adc
jecxz
add
fistpll
or
inc
test
scas
add
mov
fstpl
xchg
push
adc
mov
decl
pop
push
mov
push
push
mov
push
xor
stos
fldenv
imul
jmp
in
push
mov
sbb
daa
dec
jb
add
enter
idiv
and
sar
inc
cmc
scas
mov
xor
out
jg
adc
xlat
push
or
dec
pop
xor
inc
xor
dec
jge
jo
mov
mov
jnp
mov
ss
je
rorb
aaa
ds
sbb
popa
xor
xor
test
push
loop
imul
dec
pop
js
xchg
ljmp
push
mov
lds
pop
xchg
push
push
pop
push
data16
pop
jmp
jp
lret
inc
sub
xchg
jmp
add
inc
push
inc
mov
mov
inc
cltd
pushl
pop
fiaddl
cmpsl
sbbl
jle
cmp
addr16
mov
mov
dec
push
jmp
shrl
negb
sub
icebp
pop
pop
cmp
add
inc
mov
mov
cmp
sbb
subb
push
popf
inc
sub
push
bound
or
or
test
xchg
xor
stc
ret
cmp
lahf
jno
sbb
call
sbbl
pop
fs
imul
addb
jp
loope
jno
jg
out
jmp
subb
pop
aas
lock
cmp
add
cmp
inc
xchg
add
adc
xchg
cld
or
or
lods
xor
loop
subb
lock
dec
cmp
lods
clc
lea
jmp
xchg
or
ja
xchg
andb
out
dec
or
aas
clc
or
push
and
ret
insb
dec
repnz
sub
mov
fistl
and
or
jmp
or
int
data16
shlb
insl
jecxz
scas
sub
xor
out
add
mov
mov
xchg
jbe
orb
mov
in
cld
push
les
adc
jns
add
ret
inc
jecxz
mov
fnsave
mov
lahf
mov
movsl
and
sub
xchg
xchg
dec
jl
push
js
sbb
sbb
cld
enter
ja
repnz
mov
add
pushf
jecxz
push
sbb
in
ds
add
push
fs
pop
or
xor
pop
enter
dec
ja
lcall
mov
pop
ret
fnstcw
push
or
rcl
or
mov
jne
xor
repnz
xchg
lret
mov
jbe
mov
sub
es
adc
sbb
pop
jns
mov
push
push
push
xchg
cwtl
push
push
insl
sub
outsb
sub
pop
add
mov
xorb
adc
aas
pop
or
push
jbe
das
sub
pop
out
ret
adc
dec
loope
out
pop
mov
mov
cmpl
out
add
pop
xchg
jle
mov
push
or
sbb
inc
mov
pop
aas
std
jnp
push
icebp
add
push
jmp
xor
inc
scas
rcrl
and
mov
xor
rcrl
add
pusha
dec
pop
jmp
inc
mov
or
mov
push
imul
les
shrl
cwtl
shlb
cmpb
mov
cs
lret
mov
push
adc
mov
les
push
xchg
or
out
mov
mov
hlt
cmp
lods
mov
cmpsl
dec
add
add
int
mov
pop
call
pop
mov
and
mov
adc
cmp
or
ljmp
lret
or
sub
jmp
jns
out
test
sbb
and
mov
inc
cwtl
dec
paddb
xlat
mov
xor
and
call
stos
and
xlat
rcl
or
and
xchg
mov
and
sti
xor
or
mov
ss
repz
pop
popl
imul
and
out
into
add
jbe
pop
jmp
or
xchg
push
dec
enter
lret
mov
gs
fsubs
je
add
push
sbb
adc
jecxz
das
mov
cmp
sbb
loope
mov
pop
pop
push
bound
inc
repz
push
mov
sub
jmp
add
mov
fnstenv
repz
dec
mov
test
test
push
mov
stc
sub
xlat
mov
or
pop
lcall
lods
sub
dec
cmpb
add
and
mov
mov
and
sbb
pop
sbb
out
xchg
popa
call
add
adc
rorb
push
sti
out
scas
adc
imul
in
jecxz
pop
add
or
mov
mov
ljmp
ror
and
fmull
or
push
pop
jns
jecxz
lock
sbb
dec
test
addr16
cmp
in
mov
rcr
xchg
subb
out
test
cmp
adc
inc
jmp
rcll
push
xor
cld
sti
cmp
shll
lock
rcll
cmp
dec
test
xor
push
call
mov
xchg
lods
subl
add
mov
pop
mov
xor
lds
add
test
adc
xor
je
call
push
mov
jb
test
jecxz
addr16
inc
mov
pop
bound
dec
jmp
popa
sub
notl
imul
jge
add
xor
add
add
adc
add
loop
sbb
push
push
xchg
outsb
inc
dec
fs
pop
sub
dec
add
push
cmpsb
cmc
fs
sbb
lcall
scas
inc
xorl
or
ja
mov
pop
divb
sub
or
lock
push
jp
adc
and
pop
sub
pusha
std
add
jno
dec
add
sub
push
jne
jmp
push
add
cwtl
or
sub
aad
mov
push
xor
mov
jmp
shll
in
or
sbb
daa
jmp
sub
dec
mov
lahf
jle
cli
aad
lds
repz
cmp
imul
imul
mov
pushf
adc
int
rol
ljmp
xor
push
cmp
repz
mov
in
lcall
and
and
and
push
divl
mov
js
sbb
mov
inc
jo
or
or
jne
fsubr
jb
dec
push
pop
add
push
xor
hlt
or
in
push
inc
dec
xchg
rorl
or
adc
jmp
gs
fisubrl
lds
nop
xor
repz
inc
pop
add
mov
or
mov
out
adc
ret
cmp
xor
or
add
rol
add
addl
xchg
psadbw
fnsave
jle
add
shl
stc
add
xorl
xor
ljmp
cs
loope
cmp
sbb
mov
mov
cmp
mov
or
pop
pop
jmp
pop
out
dec
push
mov
dec
push
mov
icebp
mov
pop
dec
jbe
nop
nop
xchg
daa
mov
jle
pop
jecxz
andb
cmpb
sarb
lret
adc
repnz
popa
and
dec
mov
mov
fistl
adc
add
mov
cmp
pop
dec
adc
out
in
inc
lret
repz
scas
mov
je
lock
rep
out
dec
mov
or
mov
adc
xor
out
sub
pop
push
bnd
sub
imul
or
or
sbb
cmp
push
mov
inc
not
inc
lahf
movsl
and
mov
jne
jbe
lock
or
mov
test
push
jnp
popa
jno
std
neg
orb
push
mov
push
add
ret
mov
subl
je
add
ret
or
lcall
fcoms
jmp
pop
icebp
orb
inc
out
add
aad
xchg
or
fistps
add
out
sub
xlat
clc
mov
cmpsb
sbb
pop
xor
adc
loopne
leave
lret
out
mov
idivl
add
daa
iret
sub
dec
fadds
inc
adc
mov
add
ljmp
or
std
and
or
imul
and
das
inc
mov
pop
jp
xor
out
inc
xor
adc
sbb
xlat
jno
int
pop
test
mov
ja
faddl
add
sbb
loope
adc
add
insb
add
das
insl
or
into
adc
mov
call
arpl
dec
ret
mov
push
cmc
jo
mov
push
sbb
xor
pop
faddl
dec
fdivr
xor
mov
add
push
lock
xchg
jb
fidivrs
sub
push
insl
lret
fmull
pop
or
adc
xlat
test
or
pop
scas
mov
jge
xor
sub
push
add
lretw
mov
xor
pop
xchg
jmp
maxps
adc
subl
scas
testl
push
bnd
sbb
rclb
add
dec
sbb
orl
sbb
daa
add
dec
push
jmp
mov
fnstcw
lods
pushf
jno
shlb
push
mov
pop
pop
xor
cltd
sbb
inc
fcmovne
mov
in
mov
xchg
xchg
ja
aad
clc
iret
mov
mov
outsl
imul
add
das
dec
sbb
push
mov
rorl
push
xor
pusha
ja
mov
out
outsb
jbe
or
xchg
faddl
fisttpl
pushf
push
jp
inc
adc
add
inc
adc
clc
cld
mov
add
or
sar
inc
sbb
jns
adc
push
loope
sub
push
pop
mov
xor
imul
adc
sbb
decb
ljmp
loopne
fisttpll
loop
sbb
cwtl
xor
daa
push
cld
popf
aad
into
pop
imul
rorl
jne
jecxz
stos
pop
jo
lahf
das
push
sbb
add
fucomip
mov
fwait
and
push
mov
fwait
and
jb
neg
add
movsb
inc
dec
or
inc
jmp
mov
pushf
pminub
adc
popa
push
mov
popl
cmp
popa
mov
and
ficompl
pop
lock
jle
dec
or
fnstcw
dec
jbe
add
arpl
je
shl
mov
cli
xor
adcl
push
inc
mov
push
adc
lods
inc
dec
adc
cltd
add
sahf
xor
aam
xchg
leave
and
dec
sub
cmp
adc
inc
mov
mov
mov
pop
jo
fidivs
movzbl
push
mov
or
frstor
out
dec
sbb
fmul
jmp
jae
dec
loop
fcmovbe
movsl
and
sbb
jp
jb
pop
fwait
dec
pop
sub
pop
jmp
mov
inc
clc
das
aam
dec
dec
je
scas
add
sub
mov
pop
test
inc
into
mov
cltd
ds
add
or
add
push
push
push
pop
scas
and
sub
jae
xchg
or
pop
sbb
dec
add
inc
mov
or
rclb
push
mov
or
sub
mull
xor
or
mov
adc
or
push
sub
push
mov
jecxz
divb
gs
repz
mov
loop
rolb
xor
ret
sbb
add
xlat
std
and
or
xor
inc
leave
enter
out
push
cmpsl
sub
es
in
dec
std
inc
js
movsbl
push
mov
data16
push
add
pop
aad
rorb
and
out
mov
dec
mov
mov
mov
sub
sahf
insb
adc
pop
mov
mov
jns
sbb
pop
inc
in
xor
jnp
loop
insl
arpl
pop
fnstcw
mov
jbe
adc
or
sahf
push
repnz
push
cmp
outsl
test
cmp
push
dec
sub
test
ja
add
pop
lods
add
add
popa
pop
push
add
dec
in
imul
mov
sti
dec
daa
rcrl
add
and
aad
pop
sub
xor
stc
xlat
cmp
jmp
or
or
lods
or
lock
dec
pop
dec
lret
daa
jmp
shll
pop
sub
sbbl
mov
es
inc
jge
cmc
lret
out
adc
pusha
lcall
jmp
sub
fcoms
jmp
push
lret
sbbb
jl
push
pminsw
stc
xor
rcrb
add
lods
pusha
shlb
pop
push
out
idivl
hlt
xchg
icebp
sbbb
push
xor
and
or
cmp
xchg
in
pusha
les
inc
push
push
push
push
loopne
je
sub
xor
sbb
insl
sub
cmp
fadds
ds
or
cs
sub
push
xorl
ret
loope
loop
sti
inc
add
mov
mulps
push
leave
imul
loope
push
les
xchg
aaa
pusha
pusha
sti
sub
push
push
dec
adc
scas
push
dec
stos
fcoml
adc
xor
loop
or
std
int3
test
jmp
mov
cltd
repz
jne
ret
pop
adc
cmp
das
add
in
sbb
daa
adc
push
loope
fimuls
or
stc
adc
rorl
out
lea
lret
ret
sbb
testl
pusha
push
movsl
pop
sbb
jle
mov
jb
xor
icebp
jmp
pop
push
rolb
jp
inc
jno
jle
or
fucompp
adc
pop
push
scas
notl
or
pop
xor
fsubs
rol
jae
adc
add
adc
jns
insb
add
icebp
out
lea
fadds
arpl
icebp
mov
pop
sbb
pop
mov
pop
daa
push
mov
loop
or
loopne
out
mov
jmp
dec
mov
cmp
aam
and
pop
pop
mov
int
and
and
cld
fdivrs
jg
loopne
fisubl
popa
ja
aad
inc
dec
lret
in
dec
push
cs
jg
adc
out
enter
mov
out
sub
pop
jb
je
mov
insb
jno
push
ret
jmp
in
aas
dec
mov
cmpsb
fdivrs
pop
repnz
or
or
xor
lock
add
sbb
clc
adc
add
fwait
sbb
push
test
ret
pop
cwtl
mov
jae
pop
sbbb
mov
push
pop
mov
or
jae
push
dec
insl
data16
inc
fcmovnbe
repz
dec
sub
das
outsl
in
xchg
jecxz
mov
cmp
rclb
idiv
mov
xlat
mov
dec
or
or
xchg
stos
sub
inc
in
bound
dec
cmpsl
daa
frstor
mov
mov
es
stos
push
ret
adc
jmp
mov
pop
or
mov
mov
out
repnz
sub
test
sbb
filds
add
add
mov
mov
dec
fadds
push
ja
dec
in
mov
ljmp
insl
xor
xor
sbb
lds
push
int3
mov
ds
sub
or
jge
testl
lods
push
jne
vxorpd
movsl
ja
inc
mov
sbb
loopne
dec
sbb
test
icebp
xchg
xchg
pop
push
rcll
inc
xchg
mov
icebp
push
cs
and
xor
adc
dec
push
imul
inc
pop
orps
inc
lea
sub
adc
sub
rcr
inc
and
sbb
aam
in
or
push
push
ret
xor
push
shr
sub
cmpsb
mov
cmp
pop
xchg
inc
into
std
jb
pop
or
data16
pop
imul
jp
sbb
sub
jl
loopne
rcrb
daa
orb
daa
subb
push
data16
push
sub
mov
xor
cmp
je
rcrl
jp
jg
cmp
cmp
add
or
loope
jo
mov
lret
inc
or
std
dec
dec
test
imul
stc
cmp
ficomps
popa
and
push
mov
sub
imul
cmc
xor
lret
pop
sbb
adc
push
jmp
lahf
xor
sti
iret
lahf
xor
lret
pop
pop
jmp
mov
aam
or
mov
loop
push
clc
sti
inc
mov
or
xor
ficompl
inc
outsb
movsl
jne
ljmp
cmpsl
popf
jnp
inc
pop
dec
shlb
stc
in
fcompl
sub
clc
sub
pop
adc
mov
pop
imul
dec
mov
push
push
test
or
out
aad
test
mov
mov
or
inc
jnp
xchg
fimull
inc
cmp
inc
loope
xor
dec
jns
pusha
movsb
stos
mov
dec
fxch
and
int
in
xchg
out
push
push
lahf
jns
ret
dec
xlat
subl
ffree
jne
inc
mov
jmp
mov
dec
ljmp
jns
fs
push
lcall
das
sbb
push
sub
mov
sub
push
add
mov
call
movsl
pop
dec
mov
clc
ja
mov
test
popf
xchg
scas
cmp
adc
dec
push
test
sti
cmp
dec
repz
gs
or
pop
xchg
adc
inc
pop
dec
cmc
pop
mov
fisubl
add
mov
out
or
fisubrl
std
mov
fucomip
les
ror
pop
adc
outsl
push
mov
imul
mov
popf
adc
xchg
push
imul
adc
pushf
push
adc
rcrl
push
negb
dec
ss
adc
mov
lahf
add
xor
das
jmp
xchg
xor
pop
insl
rcl
sub
add
xlat
inc
repnz
sub
xchg
xor
adcb
dec
sarb
adc
dec
mov
daa
popa
adc
cwtl
ret
inc
sahf
or
fsubrs
pop
push
pushf
or
cld
inc
add
scas
xor
sbb
mov
int
sbb
jo
xor
movsl
mov
inc
push
mov
shlb
adc
xor
fdivs
pop
push
nop
xchg
cmp
hlt
xchg
lds
push
add
and
scas
and
mov
fstpl
pusha
push
sub
xchg
push
sbb
push
outsb
xchg
mov
out
arpl
add
sub
clc
push
sub
jmp
loop
aam
pop
js
std
data16
pop
shrb
dec
jge
inc
ret
aas
das
in
push
inc
mov
fmuls
push
cltd
sub
jle
pop
adcl
dec
inc
test
mov
jle
lds
inc
addb
lods
adc
add
mov
pop
xor
movsl
lock
and
adc
mov
pop
xor
cmp
pop
popa
or
cld
adc
mov
mov
push
jmp
leave
cltd
loope
push
fcom
mov
mov
pusha
add
pavgw
add
ret
jmp
mov
add
mov
jp
arpl
mov
ja
adc
pop
mov
pop
adc
daa
shl
orl
push
loop
push
push
mov
add
pusha
push
mov
sub
jmp
mov
jg
shrb
lret
mov
sub
inc
jmp
imull
or
insb
nop
into
clc
sbb
add
mov
sahf
lea
es
dec
mov
lods
int
xor
lret
mov
sbb
mov
adc
out
add
or
mov
dec
pop
lds
push
add
in
push
sub
in
push
scas
imul
and
iret
or
dec
push
push
mov
popf
inc
xlat
sub
bound
jecxz
lods
push
leave
fisubs
mov
pop
jmp
pushf
cmp
add
ljmp
add
or
pop
adc
jg
bsr
mov
mov
push
insb
subb
ja
fistl
aam
sub
add
push
mov
inc
adc
push
jle
das
notb
stc
sub
adc
fs
and
xchg
add
push
or
lock
push
shr
jmp
xchg
push
mov
xor
push
dec
sub
mov
mov
pop
jp
xor
add
or
xor
sub
inc
pop
pop
shrb
inc
cmp
out
out
and
mov
stos
adc
inc
add
sub
outsb
jmp
inc
pop
out
and
add
scas
push
xor
jp
jmp
jo
sbb
ljmp
inc
cmp
add
mov
or
fnstenv
xchg
xor
sbb
ljmp
pushw
xor
push
mov
dec
dec
ret
loop
push
jmp
lods
fcoml
inc
cmp
ss
add
jecxz
push
push
push
int
or
pop
cmp
mov
pop
push
ja
popf
dec
xor
ret
adc
ret
xchg
pop
cwtl
sahf
addb
or
xchg
bound
fcoml
xlat
add
and
pop
clc
adc
mov
sarb
pop
idivb
push
push
mov
addl
xchg
ja
inc
push
repnz
out
mov
mov
sub
subb
mov
and
sub
xchg
iret
and
test
std
inc
push
mov
std
push
fadds
mov
add
out
addr16
and
add
lds
aam
xor
push
in
ss
adc
mov
cmp
inc
mov
clc
pop
movsl
shl
fiaddl
aas
add
and
cmpl
adc
fld
push
and
and
xor
or
adc
ljmp
and
dec
fadd
fsubr
mov
orl
pusha
loope
out
xor
orl
std
mov
xor
mov
push
push
cmp
shll
inc
aad
movsb
pushf
push
mov
dec
push
add
jae
push
xor
pop
in
addr16
add
jo
lahf
dec
ja
jmp
cs
mov
add
jle
daa
dec
call
and
and
adc
daa
insl
jbe
push
inc
jb
idivw
jle
add
iret
out
pop
inc
cs
popf
stos
add
xchg
loopne
jmp
mov
jns
sub
imul
xor
stos
inc
jmp
inc
repz
pusha
clc
out
pop
push
xchg
add
mov
pop
xor
adc
xchg
pop
mov
push
addl
cmp
imul
jle
or
nop
pop
mov
es
cmpb
add
adc
sbb
xchg
or
mov
pop
pop
rorl
imul
imul
push
pop
push
push
add
idivl
or
mov
push
jle
inc
pcmpgtd
mov
loopne
cmp
sbb
in
loop
sub
pop
jbe
lods
push
jnp
dec
int3
test
gs
pop
shr
in
cmpsl
adc
pop
lret
pop
mov
adc
mov
shlb
xchg
aaa
in
jle
ret
in
sbbb
sbb
pop
add
adc
imul
loop
dec
stos
xor
push
or
lea
mov
gs
push
add
or
jne
jp
mov
adc
or
aaa
adc
lcall
setg
xlat
lea
stos
cld
xchg
jne
cwtl
xchg
paddw
pop
gs
adc
lods
jae
dec
inc
in
fldl
push
pop
or
comiss
push
pop
imul
adc
and
jmp
sub
std
in
jp
xor
push
test
es
nop
inc
add
addl
ja
push
jmp
sub
stos
out
das
jno
fimull
jp
fldl
push
mov
or
mov
and
arpl
std
add
pop
dec
xor
push
mov
stos
enter
push
push
dec
add
shrb
into
pop
pop
push
or
push
pop
repz
pop
mov
aaa
sub
fiadds
dec
mov
add
mov
insb
fistps
roll
inc
cmp
xchg
popa
je
xor
push
mov
std
jb
dec
pop
push
lahf
das
dec
sub
mov
imull
mov
mov
or
sub
mov
xor
mov
inc
xor
aad
pop
jle
aas
fcomps
clc
sub
push
dec
call
cmp
cmp
xchg
jmp
push
push
add
fs
mov
test
inc
mov
cmp
aad
push
repnz
rcrb
xchg
inc
test
jle
pusha
daa
loopne
xor
pop
and
dec
inc
add
adc
jo
clc
hlt
pusha
mov
in
push
mov
das
loop
shlb
mov
loopne
xor
sti
inc
ja
inc
sub
adc
push
fsubrp
and
andl
mov
mov
les
xchg
ret
and
jnp
add
insb
push
sbb
shr
or
dec
pop
pop
xor
push
mov
nop
jmp
pop
loopne
xchg
xlat
popf
movsl
xor
mov
push
inc
imul
jnp
add
push
test
pusha
je
out
aaa
inc
pop
add
sbb
in
in
mov
movsl
mov
xchg
jmp
movb
inc
aad
mov
xor
rol
pop
cmp
ds
jmp
push
mov
push
xchg
jg
ds
nop
adc
aas
data16
sbbb
xlat
arpl
jmp
or
adc
es
jge
dec
push
fwait
or
dec
pop
cmc
data16
adc
pusha
or
dec
add
mov
cld
adc
jmp
addr16
and
add
or
aam
sbb
or
in
int3
sbb
pop
pop
push
shl
or
jb
sbb
jmp
pushf
jns
adc
add
cmp
add
pop
adc
repz
ja
ficoml
lods
mov
outsb
imul
cmpsl
jo
daa
xchg
xchg
cmp
add
mov
mov
add
icebp
push
push
xor
pop
shlb
jno
jbe
sbb
jb
push
pop
loop
jl
cmpb
fucomp
add
dec
pop
scas
cmp
cs
or
xorb
jnp
push
mov
jns
test
inc
fcoml
cltd
ljmp
pop
cs
sub
aas
jno
cmp
or
cmp
pop
movsl
cs
lock
pop
inc
xchg
jl
mov
mov
pop
sub
push
clc
pop
bnd
adc
sarb
or
outsl
ljmp
cmovp
imul
mov
cmc
or
add
xor
adc
xor
inc
jmp
stc
cmp
fs
sub
xchg
inc
aam
add
sub
hlt
lret
dec
mov
cs
xor
add
sbb
clc
sbb
outsl
imul
adc
and
add
bound
inc
in
jne
add
push
sub
sub
pop
xor
or
add
sub
out
mov
sahf
mov
mov
mov
add
xchg
inc
mov
pop
jno
sub
add
rcrb
loope
leave
mov
pop
pop
out
and
mov
rcr
stos
jle
std
mov
lods
mov
sbbb
mov
xor
pushf
sbb
adc
aas
nop
adc
mov
neg
pop
dec
cld
ret
add
mov
jmp
icebp
jecxz
push
cmp
shl
push
pop
push
mov
mov
or
fwait
sti
adc
add
stc
out
gs
stos
mov
pop
and
imul
pop
insb
xchg
cld
pop
add
sbb
add
push
push
pop
add
jnp
fisttps
sub
push
inc
js
data16
mov
sub
pop
push
push
mov
mull
inc
stc
out
adcb
jecxz
inc
incb
push
push
nop
call
or
insb
lock
jbe
dec
incb
jbe
clc
icebp
test
jecxz
test
add
mov
mov
ljmp
out
icebp
jnp
ja
lods
aas
or
push
rcll
inc
jp
bnd
roll
les
jge
and
test
lock
out
ret
mov
xchg
pop
insl
pop
add
xchg
imull
push
aad
std
lock
gs
sbb
cmp
add
lcall
add
jb
sbb
or
add
in
cmpsl
xor
pop
and
mov
mov
popf
call
mov
movsl
loop
dec
mov
rorl
aaa
push
movl
jle
mov
push
das
push
jmp
sub
adc
lret
idivl
mov
in
jno
inc
jmp
cmp
les
push
xor
push
push
cltd
cmp
pop
fidivrs
enter
mov
pop
sbb
and
int3
mov
add
lods
dec
sbb
jo
pop
jbe
pop
push
xlat
mov
adc
int3
sbb
jbe
or
adc
faddl
push
jge
pop
leave
call
inc
outsb
jg
mov
pop
mov
lahf
int
das
push
jno
jmp
adcl
adc
sbbl
jmp
xor
pusha
jnp
xchg
int
pop
mov
jecxz
mov
subb
fxch
cmpl
jno
push
call
and
jns
cmp
mov
mov
testl
pop
xchg
mov
add
xor
shlb
push
test
insl
jmp
repz
jmp
mov
addl
ret
stc
and
add
clc
or
stos
adc
shr
es
movsl
jle
xor
js
cmp
shr
fstl
mov
cwtl
lret
pop
test
dec
imul
pop
fidivrs
shl
adcb
sbb
push
jmp
inc
out
mov
lods
cmp
push
dec
test
xor
ja
sti
shlb
aas
in
pop
in
cld
lds
dec
xor
jge
nop
mov
sub
ljmp
int
sarb
pop
or
loopne
mov
xchg
mov
jns
fldl
popa
and
mov
loopne
sbbl
inc
add
jb
or
xlat
bound
fadd
repz
dec
and
shlb
or
jl
pop
pop
or
sbb
xor
scas
mov
arpl
add
mov
cmc
adc
push
push
and
mov
fwait
sub
out
add
aam
add
push
mov
inc
xchg
xchg
sbb
pop
pop
add
xchg
daa
inc
es
cmp
xor
mov
outsl
mov
mov
mov
pusha
mov
mov
or
jno
jo
ljmp
repz
call
aaa
sar
rcrl
jb
lahf
pop
mov
dec
pop
sti
inc
mov
push
out
repz
aaa
cmpsl
addr16
flds
insl
ds
call
pop
mov
cwtl
loope
xor
mov
int
jl
sub
xchg
push
adc
dec
mov
testl
test
or
mov
push
sub
xor
rolb
xor
adc
sub
mov
mov
out
xchg
or
mov
jnp
sub
push
in
into
xlat
mov
mov
std
jl
dec
xor
and
jo
add
fisubrs
call
repnz
mov
repz
jp
clc
mov
xchg
les
xor
jmp
jle
ss
xchg
jl
and
dec
pop
adc
out
imul
loope
iret
push
out
cli
sub
or
imul
cmpsb
add
stos
adc
popa
cmp
std
adc
xchg
pop
cmpsl
jae
xor
or
adc
add
push
sub
test
and
cmp
jae
sub
xchg
xchg
sbb
cwtl
and
in
inc
jmp
jmp
cmpsl
lods
call
lods
push
jle
lds
mov
dec
jmp
push
adc
mov
mov
adc
push
or
nop
test
dec
pop
pop
and
add
or
inc
cmp
adcl
or
xor
push
jmp
adc
out
dec
mov
add
cs
jne
pop
jno
je
pop
mov
ror
jmp
je
push
loop
fisttps
cwtl
scas
test
fadds
neg
jmp
out
dec
je
stos
xlat
pop
dec
std
insl
jno
stc
lret
fucomip
or
mov
imul
mov
stc
add
and
dec
cli
push
imul
mov
and
or
or
xor
pop
incb
xchg
or
cmp
mov
jae
mov
jecxz
loop
sub
negb
cld
jo
bound
stos
jecxz
add
mov
push
popf
xchg
mov
inc
jb
adc
shr
sub
add
stos
pop
fbstp
leave
scas
test
adc
or
lret
dec
or
cs
clc
lcall
repz
ret
shl
adc
jmp
jb
pushl
cmp
gs
int3
hlt
out
xchg
gs
push
sbb
stos
repz
inc
xor
push
mov
cld
pop
jae
repz
in
mov
mov
mov
rorl
add
cli
jbe
add
xor
sub
adc
mov
jp
xchg
sub
in
adcl
push
test
xor
mov
int3
push
int3
divb
add
pop
push
loope
enter
cmp
push
pop
insl
int
ja
and
push
mov
inc
push
sub
add
push
js
out
adc
dec
icebp
jmp
push
mov
pop
sub
push
mov
push
out
mov
push
aam
call
jae
sub
icebp
stos
sub
push
mov
push
mov
out
inc
or
inc
enter
xchg
nop
lcall
fs
push
add
jmp
aam
jge
lcall
pop
stc
adc
and
jns
jae
imul
js
mov
adc
scas
push
add
cmp
arpl
je
push
sub
xlat
or
push
push
push
push
out
or
shlb
sbb
cmp
push
xchg
jge
nop
test
repz
arpl
dec
int3
dec
jnp
pop
pop
add
push
popa
jg
and
repnz
test
inc
addl
aas
inc
mov
in
stc
or
adc
movsl
and
mov
push
shr
xorb
or
lret
popf
pop
push
push
lahf
jae
lock
and
dec
push
mov
mov
pop
out
out
rclb
pop
push
dec
callw
or
lock
xchg
imull
or
push
or
xchg
repnz
pop
mov
cltd
shufps
cld
dec
movsb
pushl
lahf
movsb
ret
sbb
dec
xor
leave
call
cmp
jae
adc
mov
add
add
and
enter
inc
cwtl
jmp
cmp
adc
inc
imul
xorl
cwtl
leave
push
push
push
jmp
repnz
dec
adc
mov
sahf
or
push
push
pop
mov
leave
loope
pop
xor
stc
dec
imul
push
inc
js
mov
clc
mov
imulb
inc
push
aaa
pop
push
in
mov
adc
sub
xchg
mov
pop
inc
shrb
jle
jg
js
cmp
shr
push
cmpsl
test
push
cmp
lcall
aad
std
je
cwtl
nop
cmpsl
or
inc
or
lods
mov
inc
dec
push
lods
cmp
jmp
out
outsb
or
sub
cld
stos
lret
negb
pushf
cmp
call
addr16
pop
jnp
int3
dec
daa
test
movsb
cmc
and
mov
mov
or
ds
or
fsubrs
in
sub
xbegin
mov
jo
insl
xchg
js
jge
sub
or
or
jbe
cmp
inc
mov
push
mov
push
es
inc
jmp
mov
subl
dec
xor
push
cmp
ljmp
pop
enter
mov
fldcw
push
pop
je
or
pop
jne
clc
xchg
jnp
push
add
js
pop
and
xor
js
mov
xchg
push
and
or
sbb
ret
cmp
sub
pushf
xchg
mov
mov
test
loope
mov
lods
dec
sbb
xchg
xchg
pop
or
xor
jmp
outsl
gs
imul
jp
clc
xor
jmp
jg
mov
ljmp
jmp
jecxz
ja
test
jp
add
incb
das
rol
sbb
mov
mov
mov
clc
pushf
aas
ret
sbb
cmp
pop
fwait
adc
and
add
out
ret
test
add
daa
push
mov
push
lret
fsubrs
dec
out
stc
addr16
call
cmp
mov
add
dec
and
andl
lret
js
out
jne
push
add
fs
in
xorb
dec
cmp
and
xlat
adc
insl
bswap
repnz
das
popa
aaa
dec
sub
cmp
inc
aaa
xchg
dec
loope
push
cmpsl
enter
cmp
imul
adc
add
jge
cmpl
inc
pop
mov
jl
outsb
movsb
pop
jns
sbb
jmp
adc
dec
jmp
testb
pop
pop
popa
js
jo
or
lret
cmpb
inc
sbb
pop
pop
iret
test
out
imul
inc
push
add
xor
mov
inc
movsb
out
outsb
add
sbb
jge
add
hlt
pop
lcall
xchg
add
mov
jae
aam
test
mov
adc
das
pop
lcall
sub
jecxz
dec
mov
push
lret
leave
jp
loope
adc
popa
pop
mov
insb
jb
push
fwait
pop
jnp
sbb
outsl
jg
lock
or
push
inc
xchg
and
dec
cltd
aaa
mov
cli
jg
mov
mov
sbb
or
fldt
cwtl
push
or
jno
cmp
add
jmp
push
pop
jge
andb
jmp
pusha
lahf
push
xor
and
mov
idivb
add
lahf
insl
stc
and
imul
in
mov
outsb
jb
pop
mov
or
nop
dec
add
sub
sub
movl
loope
pushf
cmp
jne
repz
cwtl
and
and
out
movsb
cltd
mov
pusha
jmp
xchg
inc
xlat
jmp
inc
jmp
sub
in
push
jmp
sbb
sub
outsl
xor
out
aaa
and
movsb
add
sarl
push
jg
add
xor
popa
add
sti
dec
and
add
imul
sub
inc
icebp
and
mov
enter
push
inc
jmp
xlat
pusha
lock
stos
in
out
or
ret
push
loope
lret
mov
mov
adc
xchg
ja
cmp
aam
cli
and
pop
popa
mov
xlat
sbb
sahf
cld
das
jmp
cmp
lahf
das
push
mov
xchg
add
out
fisubrs
pop
dec
add
rcrl
cmpsb
dec
lock
int3
xchg
in
dec
dec
loop
add
int
jmp
cmp
pop
push
cmovs
adc
pop
adc
rclb
nop
sbb
pushf
pop
and
sbb
jmp
faddp
test
mov
das
sub
jle
pushf
sti
sbb
adc
mov
jmp
rorl
fsubp
bound
or
mov
lods
push
inc
bswap
jnp
push
or
sbb
xlat
decb
cmc
pop
pop
add
fucomip
mov
xor
add
test
movsb
dec
mov
lock
ret
sub
cwtl
sub
sarl
adc
xor
aam
xor
cmp
push
push
das
dec
add
pop
ljmp
int
movsl
ffree
xlat
xor
mov
push
shll
sub
sub
je
jmp
scas
xor
jno
pushf
push
test
xor
stos
jbe
sub
clc
sahf
adc
call
stos
dec
jmp
enter
xchg
jb
jb
ror
pop
in
rolb
mov
mov
push
pop
mov
leave
movsl
jp
or
cmp
mov
repz
dec
fwait
outsl
aad
xor
add
shr
or
pusha
mov
mov
cmp
ret
test
cltd
outsl
push
cs
dec
test
adc
or
aaa
and
mov
jno
pop
dec
js
cmp
cmp
cmp
inc
loope
cmp
cmovae
mov
and
or
popf
adc
shr
add
and
rolb
and
in
sub
cli
cmp
test
jmp
fxam
push
lods
xlat
add
push
ret
and
lock
fdivs
sbb
xchg
icebp
jns
add
jmp
sub
mov
dec
cmp
pop
mov
aad
in
mov
push
out
bound
xor
jle
and
mov
je
mov
ljmp
push
add
inc
jmp
aas
ret
jbe
das
popa
dec
jl
xchg
into
je
sub
push
stc
add
inc
test
mov
aad
mov
rcrl
push
xchg
and
mov
sbb
add
or
adc
inc
inc
mov
adc
pop
lds
roll
imul
adc
nop
dec
inc
setb
sarb
flds
fistl
cmpsb
das
loopne
pushf
pushf
mov
inc
dec
sbb
jno
add
xor
jns
and
mov
and
loope
pushf
out
pop
cltd
sub
push
enter
cmp
ss
pop
pop
mov
mov
subb
das
negb
es
jae
cmpsl
aad
rcll
sub
in
cmpsl
pop
push
or
and
jmp
sub
push
push
mov
mov
push
fs
mov
std
xor
inc
sbb
loope
cli
add
hlt
sub
sbb
xor
jo
mov
add
cltd
jecxz
in
nop
adc
ret
and
push
cmp
ds
ja
jae
sbb
xor
mov
jo
fildl
leave
add
pusha
and
dec
sub
int
sbb
inc
xchg
xor
cmp
sub
push
clc
xor
mov
shlb
out
outsb
or
mov
adc
adc
adc
imul
in
popa
out
inc
pop
xlat
and
icebp
dec
jmp
movsl
imul
adc
stos
mov
mov
xchg
xchg
add
mov
add
inc
or
xchg
jb
stos
mov
push
jno
sub
lret
jmp
sbb
sub
fdiv
fisubrl
scas
stc
fistps
fmull
cwtl
adc
cs
add
inc
testb
push
leave
sti
jo
mov
dec
and
or
adc
cld
push
flds
sbb
dec
mov
push
and
jp
sbbb
jb
push
cmp
addb
shrb
pop
cmpsl
dec
clc
andl
ficoml
inc
pop
xor
das
ljmp
push
sub
pop
mov
ret
or
cmp
push
les
add
mov
mov
mov
aad
or
jnp
test
jge
jne
sub
push
add
cmp
adcl
rclb
push
cmpsb
cs
ret
out
jmp
mov
shlb
enter
fwait
cmp
jmp
push
push
pop
cmp
add
mov
xchg
mov
mov
xorb
test
xor
pop
jmp
mov
add
jecxz
test
add
mov
mov
mov
sbb
sub
pop
dec
add
out
xor
outsl
or
xor
and
xchg
not
push
push
pop
pop
int3
mov
jge
push
pop
sahf
push
mov
jb
push
xlat
inc
cs
and
lds
push
sbb
push
push
xchg
mov
lods
js
push
loopne
daa
testb
jne
lcall
pusha
call
sbb
push
js
cwtl
call
sbbb
cli
sarb
adc
add
pop
inc
and
je
cmp
decl
adc
clc
xchg
jb
push
xlat
not
xor
sbb
faddl
sub
fsubrs
dec
jnp
aad
jge
pop
mov
fsubs
add
pop
sub
add
adc
or
enter
push
pop
xlat
bound
mov
sbb
loop
daa
mov
fdiv
sbb
adc
jmp
jns
pop
cmp
daa
sub
sar
ljmp
mov
ljmp
push
int3
jmp
mov
adc
and
or
mov
add
test
pop
insb
cmc
jecxz
dec
sbb
sub
pusha
inc
out
sub
xor
nop
push
adc
cs
jnp
jl
and
orl
mov
or
and
mov
loope
cld
sbb
add
out
fmull
add
jmp
repz
xchg
ret
cmpsb
popf
inc
mov
testb
inc
pushf
push
faddl
or
mov
dec
rorl
jg
out
and
jmp
mov
lods
mov
out
popf
jno
jb
cmpl
push
or
adc
xchg
dec
jb
jmp
pop
inc
out
pop
pop
pop
aam
add
lock
mov
iret
dec
sbb
xchg
inc
mov
push
xor
pop
sbb
popa
mov
mov
in
add
jp
aad
insb
aam
rcll
jg
xor
cli
call
or
fnsave
add
xchg
fs
repnz
sbb
add
test
out
pop
bound
prefetch
neg
jmp
dec
ret
or
dec
mov
lods
lds
notb
inc
repnz
xchg
push
add
pop
loope
xchg
and
push
add
add
jle
movsb
add
test
push
or
daa
jo
push
add
imul
sub
arpl
and
fsubrs
shr
adc
jp
mov
daa
hlt
or
sbbl
fldenv
xchg
popa
orb
int3
xor
cs
mov
jmp
push
add
sbb
or
cmc
in
popf
add
stos
xor
in
das
pavgb
sti
mov
into
add
ljmp
mov
int
loop
lods
ds
add
stc
sub
sub
pusha
inc
aaa
fstpt
sub
or
ficompl
cmc
xor
cli
pop
popf
fnstcw
pop
jmp
clc
in
rorb
frstor
sub
jge
mov
inc
inc
sub
jecxz
sbb
sbb
pop
sub
pop
fistps
cld
pop
testb
dec
xchg
icebp
mov
iret
jmp
call
ljmp
sbbb
pusha
push
jle
sbb
mov
jae
shrl
int
inc
leave
shrb
mov
ffreep
inc
sbb
std
xlat
in
subl
mov
sbb
xchg
out
push
repnz
fmul
sub
xor
mov
add
xor
push
out
mov
dec
jmp
cmp
adc
mov
push
push
cmp
int3
cld
push
mov
jb
or
aam
idivl
xor
sub
les
clc
insb
dec
mov
mov
lcall
jg
repnz
and
xchg
push
es
push
push
push
shr
scas
pusha
dec
ret
dec
lods
repz
push
add
jle
adc
mov
push
cmp
rorl
lock
mov
jecxz
add
sti
pop
mov
jecxz
punpcklwd
das
rorb
test
in
or
leave
jle
scas
gs
mov
js
adc
stc
dec
inc
or
inc
mov
sub
and
int3
in
fsubrl
ds
mov
xchg
test
daa
retw
pop
out
imul
fistps
mov
jbe
pop
sub
loopne
adc
add
inc
jp
add
add
add
push
pop
jmp
push
xlat
das
xchg
add
scas
orb
shlb
push
xchg
or
and
mov
adc
jge
push
or
adc
push
cmc
add
dec
jo
loop
xor
cmp
pop
sub
pop
jmp
push
fsubl
scas
or
mov
xchg
xchg
and
dec
mov
loope
out
mov
fisttps
xchg
adc
data16
mov
lock
mov
adc
push
xor
xor
std
xor
loope
adc
mov
xchg
add
inc
ret
aam
daa
push
add
sarb
std
rcl
xor
push
add
inc
jg
fisttps
xor
push
enter
or
ret
pop
xchg
jmp
dec
cmp
mov
pop
add
xchg
add
lock
adc
pop
cmp
dec
mov
inc
pop
insl
adc
pushf
dec
inc
xor
sub
pusha
pop
cwtl
xor
inc
xor
int
in
call
ret
out
jmp
movsb
stos
test
jae
xchg
xor
hlt
xchg
xor
and
xor
mov
cmp
mov
int
sbb
rol
sahf
sbb
dec
or
cmp
sub
and
cmp
add
pusha
and
fldl
out
jl
mov
pop
push
push
jbe,pt
xorl
in
xor
fdivrl
sub
pop
mov
push
lods
loope
mov
jmp
bnd
push
call
cmpsl
rcrl
cs
or
inc
dec
rcr
jmp
bound
push
mov
je
jne
outsl
pop
shl
adc
or
pop
out
popf
fisttpl
out
sbb
dec
test
das
in
jle
out
test
sar
sbb
incl
addb
popa
dec
push
jmp
mov
mov
daa
jl
pop
adc
push
adc
sub
sbbl
insl
mov
subl
jbe
jnp
and
pop
out
mov
pop
shrb
mov
pop
jecxz
dec
inc
xlat
ja
jg
push
dec
rorl
out
pop
pop
lods
cmc
dec
scas
mov
scas
push
fsubs
jbe
jmp
rcll
sub
nop
xor
in
stos
add
mov
movsb
xchg
out
popf
loop
mov
mov
dec
cmp
mov
jle
jne
pop
pop
pop
sarb
cmc
sbb
dec
inc
ret
pop
jbe
cs
jmp
ret
shl
repnz
push
push
stos
mov
sub
cmp
pop
adc
stc
adcb
sbbl
mov
orl
popa
test
roll
xor
cltd
int3
adc
inc
mov
cltd
pop
lahf
mov
pop
jno
arpl
movsb
add
jmp
negl
mov
sub
push
cmpl
aas
add
in
sbbl
mov
push
pusha
pop
pop
int3
icebp
int3
adc
orl
push
dec
jo
dec
icebp
add
sub
mov
fldt
repz
xchg
and
pop
add
sub
sub
xlat
pop
jl
ja
jp
dec
loop
or
hlt
insl
subl
pusha
insb
jmp
test
sbb
push
mov
sub
ljmp
push
cmp
andl
ljmp
mov
pop
lods
frstpm(287
cli
ss
dec
test
push
xchg
adc
leave
enter
sub
fidivrl
jmp
shrl
push
jo
fstpl
and
xor
mov
xor
push
cmp
mov
mov
in
cltd
adc
pop
xor
mov
pushf
mov
and
les
rcr
jmp
mov
jge
and
lock
int
fwait
xor
fistl
cmp
das
in
mov
jmp
and
inc
aas
xor
es
sub
repz
xchg
xor
push
pusha
add
and
add
xchg
or
mov
cmp
mov
dec
out
mov
jae
das
fldpi
or
xlat
jp
or
imul
add
xor
cmp
dec
xor
inc
sub
mov
cli
ret
cmpsl
jmp
out
push
sbbb
leave
test
daa
dec
shll
out
inc
inc
aas
jmp
add
fidivrl
push
jno
andb
dec
test
les
fbld
popa
sbb
mov
or
mov
jmp
pop
bound
pop
jne
sub
hlt
pop
loop
data16
bound
mov
add
das
adc
in
lahf
daa
cmp
jb
mov
pop
push
lret
daa
pop
fsubrl
js
call
pop
data16
das
xchg
pop
xor
sub
shlb
aam
mov
push
sub
shrb
xchg
push
test
negl
push
arpl
mov
sbb
pop
or
pop
fildll
incb
xchg
fildll
popa
ja
and
pop
add
in
mov
loopne
sub
out
sub
pop
lds
xor
mov
enter
pop
xlat
pop
dec
std
inc
dec
cmc
gs
sub
lahf
pop
jnp
filds
push
pop
pop
cmpb
or
addr16
push
inc
push
adc
or
jns
or
ljmp
and
inc
sub
imul
cmc
call
add
mov
adc
test
or
xchg
jecxz
mov
cmp
push
push
xor
cwtl
pushf
push
rcrb
aas
pop
shl
xor
andb
push
xchg
xor
jmp
subl
std
dec
add
out
sub
insl
mov
inc
subl
fs
rcrb
dec
out
in
movsb
sub
mov
adc
mov
add
pop
in
ja
add
aad
lret
mov
cmp
sbb
pop
outsb
mov
mov
fistl
idivb
dec
mov
add
loope
xor
std
jmp
es
jp
push
mov
mov
test
jmp
loop
lahf
int3
cmp
xchg
jecxz
bswap
sbb
ror
and
add
push
faddl
inc
xor
mov
adc
lods
jmp
push
sbb
fsts
adc
jbe
xchg
or
mov
repnz
inc
pushf
pop
xchg
jb
orb
xchg
movsl
push
cwtl
mov
jne
aad
xchg
mov
lcall
rorb
or
pop
inc
dec
sub
in
jle
push
in
add
dec
bndldx
inc
lods
xor
in
push
or
sub
inc
repnz
test
ret
fs
lods
pop
pop
adc
daa
sub
cmp
lsl
stc
lret
arpl
lret
or
insb
pop
or
or
cmc
jmp
pop
xor
pop
call
cltd
cld
hlt
mov
scas
add
sbb
jne
and
cli
mov
movsb
mov
adc
gs
gs
and
dec
sub
jmp
sbb
add
jno
push
add
add
ja
jo
mov
push
inc
pop
jmp
dec
dec
loope
or
and
sbb
push
pushf
cs
out
mov
sub
mov
shll
mov
jno
xchg
and
pop
pop
jmp
or
add
mov
jmp
cmc
adc
cmp
aam
les
cmp
adc
pop
sbb
in
add
bound
xchg
mov
iret
cmp
or
and
push
push
push
mov
pop
add
pop
iret
insl
ja
leave
incb
je
lret
pop
mov
jmp
pop
cli
in
daa
push
rol
add
push
and
sti
test
pop
aas
and
jmp
icebp
jo
les
jmp
push
push
leave
sub
jle
add
pusha
aaa
clc
test
nop
gs
pop
sub
in
xor
or
xchg
call
jl
adc
xlat
add
dec
and
xchg
lret
dec
mov
sbb
jae
jp
add
add
mov
mov
insl
dec
dec
mov
dec
xchg
push
rcl
ret
and
jnp
daa
dec
push
xchg
mov
sar
shlb
xchg
repnz
push
push
mov
sbb
pop
mov
pop
or
sub
pop
std
nop
fidivl
jns
mov
pop
add
mov
pop
pop
pop
pop
jns
jns
insb
mov
adc
mov
out
xchg
call
jno
push
lret
scas
sub
inc
clc
sub
mov
mov
jns
les
lret
jecxz
add
push
push
test
cmpsb
add
subb
addb
xchg
pusha
gs
cmp
push
add
pop
jns
cmp
mov
jmp
mov
dec
cli
add
push
mov
jmp
icebp
movsl
add
in
jmp
lret
pop
leave
subl
je
scas
mov
jbe
dec
push
testl
add
push
fstpl
cmp
mov
std
dec
in
jmp
or
jno
mov
or
pop
popa
xchg
jmp
xchg
dec
jne
mov
pushf
jmp
loopne
mov
sahf
jmp
pop
mov
test
popa
mov
repnz
cmp
add
push
fucom
push
cmp
cvttps2pi
mov
xorl
shl
loope
int
sbb
adc
jmp
push
cmpsl
fisubrs
xchg
jge
dec
sub
pop
jns
cmpsl
pop
xchg
imul
shrb
push
les
add
and
inc
jg
fidivl
inc
int
inc
je
xchg
rcrb
xlat
stos
les
mov
lods
and
and
mov
test
pop
fs
fisttps
push
and
jp
scas
mov
shlb
push
mov
mov
je
jb
repz
mov
and
dec
mov
lcall
test
cld
test
push
and
push
jl
jle
shlb
jg
pop
scas
into
pop
mov
sti
shrb
js
jbe
sub
xor
adc
push
inc
mov
pop
cmp
sbbl
xor
adc
mov
jmp
xchg
icebp
stos
or
shll
adcl
outsl
loope
hlt
xchg
push
test
mov
fldcw
std
and
push
jmp
pop
out
js
das
notl
push
pop
add
mov
test
adc
shlb
test
xchg
fstp
push
inc
mov
popf
aad
in
mov
lock
jmp
mov
push
dec
and
mov
add
int
iret
fsts
aad
sbb
add
cmp
clc
xor
cmp
test
mov
sti
leave
jecxz
jae
sub
es
in
inc
mov
lock
vpcmpgtd
dec
data16
lret
pop
ljmp
icebp
shlb
lret
push
adc
jge
dec
dec
fsts
xlat
enter
add
sub
add
outsl
in
add
repnz
push
pusha
ss
addb
popf
mov
pop
lock
pop
ret
iret
loope
mov
or
adc
mov
adc
test
or
mov
pushf
hlt
and
into
inc
xchg
fwait
fs
leave
sbb
insb
fimull
push
inc
cs
and
movsb
sub
sbb
sahf
test
push
mov
je
jbe
ficoml
xacquire
and
jge
cmp
in
es
add
fiaddl
enter
cli
mov
pop
and
inc
pop
pop
lahf
in
repnz
aad
xchg
lahf
inc
mov
inc
mov
or
dec
xchg
sub
pop
lret
jg
andb
sbb
add
pop
jecxz
aam
add
mov
cmc
sub
ret
ja
mov
lea
imul
push
stc
jle
repnz
xor
out
pop
push
pop
das
fdiv
test
popa
xchg
and
mov
inc
loope
mov
cmp
lods
hlt
rcr
lcall
aad
lcall
push
pop
icebp
scas
pop
jmp
push
sub
lea
jo
add
sbb
pop
pop
shl
and
add
loope
jmp
adc
jne
mov
jmp
in
push
sub
pop
xor
cmp
dec
adc
push
fsubl
jp
adc
pop
test
xchg
xchg
ljmp
add
jmp
loopne
sar
xchg
add
push
adc
mov
jge
jmp
popf
push
xchg
dec
not
or
int
adc
adcb
sub
movsl
rolb
push
inc
jl
sbb
rorl
lods
push
push
mov
sub
push
shr
cmpsl
outsl
adc
xor
push
pop
mov
nop
mov
and
cmp
push
loope
cli
push
push
shll
fldt
cmp
mov
sub
pop
test
xor
popf
mov
ret
dec
push
inc
pop
pop
add
or
pop
es
jmp
pusha
lods
push
mov
fdivrs
xchg
push
adc
addr16
push
adc
scas
fistps
mov
mov
outsl
and
iret
std
sbb
pusha
test
outsl
cmp
scas
add
adc
outsl
out
push
addr16
pop
das
shlb
es
or
pop
scas
xor
mov
aam
jle
sbb
jno
lock
xchg
cmpsl
aad
outsb
and
sbb
int
dec
and
mov
add
xlat
nop
xorb
lods
inc
xor
add
cmp
call
aam
pop
jmp
test
ss
bound
mov
add
add
daa
add
divl
mov
enter
call
loopne
add
mov
and
mov
inc
outsl
dec
testb
pop
jns
int
dec
or
push
jmp
es
pop
inc
sbb
or
std
xor
imul
and
xor
lods
adc
push
testb
dec
jae
shrb
inc
adcl
sarl
jp
nop
imul
inc
push
xchg
icebp
pop
loopne
leave
mov
and
imul
iret
loop
xor
xor
icebp
pop
and
mov
mov
rcrl
or
push
xor
mov
es
testl
loope
mov
pop
pop
jecxz
sbb
loop
repnz
xlat
push
adc
add
jb
pop
add
xchg
out
xor
cmp
push
int
subl
mov
mov
inc
jmp
mov
push
shr
test
xor
aam
scas
loopne
gs
inc
push
jbe
pop
bnd
cs
mov
sub
loop
jne
or
fucomip
popa
pop
push
inc
mov
out
lcall
add
or
mov
fsub
js
sub
jns
cmc
cmp
mov
das
mov
shr
pop
or
fidivrs
adc
outsl
in
fistl
cmp
arpl
inc
nop
addl
inc
iret
pop
mov
xchg
jo
adc
imul
pop
gs
bswap
mov
cmp
pop
fisttpll
test
cmpsl
lret
das
js
push
or
es
cli
bound
sub
inc
dec
sub
icebp
add
in
add
xchg
push
pop
xor
cmp
in
mov
push
iret
repz
aam
xchg
cwtl
lods
mov
jb,pt
or
pop
and
dec
popa
int
cmp
lock
lock
nop
add
aas
jmp
mov
push
mov
push
pop
sbb
sbb
neg
lock
dec
push
sbb
adc
leave
popf
mov
ret
flds
in
ds
ljmp
mov
not
sub
popf
mov
and
mov
add
jl
into
sub
out
repz
xchg
cli
mov
sub
xor
data16
jge
ljmp
sahf
pop
cltd
ret
push
push
cwtl
mov
push
ja
rorl
lret
mov
cmpl
and
hlt
das
das
push
movsl
add
cmpb
add
xchg
pop
push
xlat
lret
imul
out
adc
bound
add
call
mov
adc
cs
mov
jmp
sub
daa
sbb
mov
jmp
inc
push
sbb
mov
xchg
jne
in
ret
jbe
cmp
pop
pop
push
pop
push
ret
sahf
push
dec
jno
mov
pop
imul
sbb
sbb
add
add
les
or
pop
dec
int3
pop
push
sbbb
ss
jg
sbb
or
inc
pop
sub
loop
das
dec
add
das
mov
sarl
outsb
out
idivb
xchg
scas
movsb
flds
xchg
nop
cli
add
cmp
sub
inc
lcall
inc
ret
jne
imul
lds
mov
inc
popf
inc
mov
sub
xchg
ret
pop
sti
popa
nop
ljmp
xchg
inc
rorb
comiss
adc
adc
push
mov
inc
xor
aaa
roll
lods
pop
int
pop
add
leave
adc
pushf
add
xor
mov
xor
add
aad
xor
jns
push
jmp
leave
mov
mov
mov
movsb
ret
jne
jbe
add
movsl
enter
shll
les
inc
xchg
dec
cli
jl
mov
push
loop
inc
mov
imul
inc
rcrb
and
cld
ret
sbb
jge
inc
cmp
mov
lcall
imul
test
sub
xchg
mov
jno
push
pop
inc
cmc
mov
jno
xchg
int3
sti
mov
decl
sub
jp
fcomps
pop
dec
push
adc
add
xchg
sbb
or
inc
int3
push
aam
aas
jnp
push
and
push
dec
jle
pop
add
dec
mov
push
sub
xchg
cmp
add
pop
pop
loopne
fsubr
xor
sbb
and
mov
pop
adc
adc
dec
mov
ud0
xor
shll
shr
cmp
mov
movsl
popa
aas
mov
mov
sbb
nop
test
or
cmp
jle
out
push
and
mov
lret
add
repz
sbb
inc
push
push
mov
and
mov
mov
mov
pop
orw
imul
test
test
cmp
adc
sub
push
sub
or
rolb
and
std
in
cmp
push
cwtl
xorl
jle
incb
inc
xchg
dec
and
add
ret
test
fsubl
ret
addb
bound
add
push
add
fadds
pop
out
shll
cmpl
notl
imul
cs
xchg
ljmp
add
push
jnp
imul
insl
popf
or
adc
xlat
push
jge
add
inc
pop
mov
and
cmc
sbb
in
dec
jl
out
mov
pop
pop
arpl
and
pop
jmp
loopne
add
andl
fdivs
out
and
sbb
loopne
push
stos
mov
lahf
push
es
xor
push
sbb
or
adc
lret
fucomp
dec
bound
sub
push
inc
dec
loopne
andb
mov
mov
rolb
imul
add
inc
inc
filds
clc
jns
lret
adc
je
push
pop
push
cmp
mov
ljmp
dec
shll
fistpll
pop
mov
and
inc
ss
insb
push
mov
dec
dec
or
inc
iret
push
lds
mull
jno
sbb
jmp
ss
push
neg
shlb
addb
dec
xorb
nop
xchg
xor
bound
mov
and
pop
xchg
jns
inc
shrb
es
mov
lds
xchg
int
pop
clc
or
sbb
xchg
insb
ret
and
push
dec
cld
sbb
rclb
pop
or
adc
insb
enter
lcall
push
mov
or
jge
inc
mov
xor
js
dec
popa
in
mov
mov
and
arpl
mov
mov
shll
push
cmp
je
xor
xor
push
push
and
lcall
mov
add
das
push
jmp
dec
add
pop
or
cmp
std
sub
jg
mov
push
ret
push
pop
cmc
pop
clc
sub
add
jp
sbbb
xor
ss
push
jnp
addr16
sbb
mov
imul
push
pop
add
xor
push
add
lods
push
jle
sti
xor
jo
lahf
xchg
dec
pop
stc
lods
xchg
ljmp
jg
pop
sub
or
pop
push
daa
cld
rcrl
call
dec
dec
push
js
mov
xorb
jmp
sbb
mull
or
dec
pop
test
aad
sub
in
cmp
in
fs
ret
orb
jp
out
fstpl
in
inc
mov
lods
sub
in
insb
jmp
repnz
fdivs
gs
mov
push
rclb
dec
push
loope
sbb
cmpps
hlt
xlat
cmpsl
enter
lret
pop
lret
pop
xor
mov
cltd
frstor
push
je
jmp
pop
jbe
movsb
enter
jns
sbb
push
jbe
mov
xor
mov
dec
add
ret
inc
ret
sti
push
xor
adc
dec
movaps
jns
push
mov
pop
mov
leave
loope
fsubrs
push
or
rorl
das
imul
cmp
pop
pop
rorb
adc
dec
mov
adc
mov
shl
cmpsb
jns
imul
out
and
dec
and
push
add
sub
movl
jge
dec
pop
not
pop
dec
sbb
pop
adc
add
sti
inc
popl
adc
data16
orl
sbb
ds
or
push
jmp
sbb
xchg
nop
jmp
sahf
add
or
mov
subl
xor
addr16
pop
push
sbb
fisubrs
inc
add
fs
adc
or
lret
into
and
imul
test
jmp
ret
scas
imul
ljmp
pop
inc
jmp
subl
icebp
repnz
sahf
pushf
jno
mov
and
pop
adc
sub
xor
inc
and
adc
pop
mov
mov
popf
movsl
cs
dec
push
jmp
xchg
xchg
pop
repz
int
fdivrl
test
mov
mov
pop
pop
xor
jmp
mov
dec
incb
jno
xchg
pop
shrl
cmc
pop
jb
jns
sub
mov
or
jo
xchg
xor
push
dec
and
mov
lret
jns
ret
cmp
fmulp
mov
and
add
insl
adc
sbb
das
push
mov
cmpb
mov
push
cmp
adc
loopne
sbb
pop
stc
cmp
test
aaa
jmp
dec
cltd
scas
loopne
popf
dec
fsubrl
nop
imul
adc
adc
nopl
fldl
jmp
fisttps
mov
mov
ret
hlt
aam
mov
mov
xchg
addr16
and
mov
ret
jmp
push
ja
insl
inc
mov
sub
lcall
fisttpl
push
inc
das
jle
inc
xchg
or
orb
push
push
rclb
rorl
testl
xor
add
jge
sub
push
mov
add
and
inc
cmpsl
add
jmp
or
jg
nop
push
mov
loope
fadd
in
mov
pop
test
or
cmpsb
scas
daa
int
stos
shr
pop
pop
xchg
xchg
or
loop
xor
adc
and
jmp
mov
pop
scas
call
cmp
mov
js
scas
test
push
add
and
pop
fstpl
pop
add
push
cs
or
xchg
fdiv
push
add
dec
jle
pop
call
imul
jp
out
jg
sub
push
movsb
and
push
dec
enter
or
pop
pop
mov
cltd
andb
or
add
lods
stc
or
dec
adc
jmp
pop
mov
inc
add
push
push
add
mov
or
pop
cmp
adc
add
cld
dec
clc
lcall
sahf
ret
adc
push
and
pushf
scas
add
fidivrs
adc
push
jge
inc
rcrl
incl
cmp
daa
repz
mov
sbb
mov
iret
lahf
push
leave
or
jmp
pop
push
pushf
push
loopne
jecxz
adc
les
add
push
or
aas
push
sub
in
mov
orl
add
sbb
and
in
and
rcrb
int3
shrb
adcb
pusha
and
fnsave
js
dec
movsb
push
out
fcoml
cmc
and
and
mov
xor
add
push
fists
enter
stos
cmp
test
dec
scas
push
sub
cmpl
dec
imul
jmp
jge
and
cmpsb
dec
xor
xor
push
xchg
aaa
sub
or
push
fwait
jmp
push
add
stos
rcrl
mov
xchg
das
push
pop
jne
adc
jmp
fstpt
lods
pop
mov
jle
jns
sbb
mov
pop
jmp
mov
sbb
dec
aaa
daa
dec
outsb
scas
xor
xchg
cmc
add
mov
xchg
xchg
xchg
jp
xchg
sub
inc
mov
sahf
adc
les
push
lret
xchg
movl
jmp
xchg
push
adcl
sbb
gs
stc
lret
adc
cltd
test
aaa
hlt
dec
sub
test
stos
push
add
jle
push
or
xlat
loopne
repnz
jnp
or
mov
dec
mov
nop
dec
prefetch
or
sti
add
inc
mov
imul
push
leave
cmp
bound
arpl
outsb
dec
jl
mov
sbb
or
pop
xchg
sbb
test
pop
mov
movsb
pop
mov
adc
pop
xor
mov
jmp
sbbl
mov
add
popa
lods
pause
and
mov
mov
dec
out
stos
and
mov
mov
jge
mov
jbe
ret
sbb
or
shrb
or
sub
xor
mov
loop
lcall
jp
pop
or
outsl
push
mov
mov
add
dec
rolb
push
subb
cmpsl
pop
mov
shrb
aam
push
je
mov
inc
mov
dec
or
push
sbb
adc
sub
push
mov
or
jb
push
lret
or
push
scas
flds
scas
inc
int3
jmp
movsb
fbld
aam
sti
xchg
push
outsb
jne
cmpb
cmp
pop
ss
js
int
mov
push
xor
sub
pop
ret
imulb
icebp
push
dec
shl
pop
mov
pop
outsl
loop
sbb
adc
sbb
mov
mov
push
add
repz
into
ja
addr16
xor
add
insb
or
inc
mov
pop
test
repnz
jbe
daa
push
popa
ret
sbb
xor
sub
or
imul
stos
clc
sub
sarb
movsb
push
popf
or
les
xchg
das
fldt
add
xchg
pop
orl
dec
scas
adc
mov
hlt
cmpl
push
jl
add
and
pop
lods
push
add
mov
adc
in
adc
scas
test
repnz
push
and
shll
push
lcall
or
ror
sbb
daa
movsl
push
mov
or
jecxz
jns
xchg
pusha
cld
stc
and
in
inc
add
push
dec
repnz
rcrl
xchg
xchg
shl
aad
push
cld
stc
daa
push
test
pop
repz
adc
xchg
icebp
and
push
pushw
dec
add
rorb
pop
xor
dec
fisttps
je
and
xchg
mul
arpl
pop
dec
adc
mov
add
vpshad
mov
sarb
sbb
pop
sub
push
mov
push
mov
sahf
or
mov
mov
test
push
pop
outsl
mov
adcb
jns
push
pop
mov
add
negl
ja
and
cld
repz
push
mov
pop
jbe
orl
das
adc
lea
mov
roll
sub
add
pop
jbe
push
push
jmp
test
ljmp
jno
add
cwtl
lods
add
call
sub
add
pop
mov
cmp
mov
or
mov
jb
mov
xorb
ljmp
aad
push
mov
jmp
mov
dec
cmp
mov
lods
xchg
test
loopne
sub
mov
bound
or
ss
pop
test
inc
jl
and
or
sbb
mov
sub
and
sbb
adc
jmp
lret
mov
aad
pop
rcrb
mov
mov
jmp
xor
mov
andb
int
push
xor
pop
push
out
dec
mov
xor
in
les
xchg
roll
sub
sub
mov
push
or
pop
or
aad
inc
popf
push
push
cmp
int
sub
or
lret
xchg
ljmp
roll
int
jle
xor
mov
cs
ljmp
pop
dec
xchg
push
mov
frstor
cmp
mov
cmp
push
jge
fistpll
pushf
hlt
sub
adcl
out
mov
xor
nop
ljmp
negb
cmc
mov
decb
xchg
mov
nop
add
xchg
test
shrl
in
xchg
pop
fldt
mov
hlt
out
loop
push
daa
mov
jno
cmp
push
cmp
push
repz
pop
push
mulb
adc
lret
push
imul
loop
es
pop
pop
mov
xlat
dec
gs
add
addr16
dec
mov
rorb
mov
jo
das
push
push
loope
cs
daa
pusha
push
mov
xor
xchg
dec
sti
adc
fstl
dec
push
or
or
ja
push
mov
ret
pavgw
inc
repnz
mov
sbb
add
lods
insb
add
adcl
loopne
insl
cmp
pop
fwait
pop
pop
adc
or
insb
jmp
xor
push
push
addr16
or
and
xchg
and
repz
lcall
ljmp
jns
loop
lahf
inc
enter
xor
cmpsl
inc
shrl
pop
cmp
mov
stos
add
adc
in
pop
xchg
push
pop
mov
cmp
mov
lret
lea
cmc
lods
and
cmp
mov
fists
insb
movsl
out
lahf
aam
push
pop
add
or
push
jne
and
cmpsb
sti
aam
pop
xor
shl
mov
jl
sub
sub
daa
sub
mov
xor
mov
inc
jns
je
dec
inc
xchg
inc
stc
cs
jmp
xor
add
shlb
pop
mov
leave
popa
shll
pushf
shr
sub
add
bound
mov
xchg
push
jl
sub
push
add
dec
xorl
sbb
lods
pop
lock
push
push
or
cmp
shlb
push
mov
add
jge
mov
mov
sub
jle
sbb
in
add
out
fstps
in
sub
push
ret
push
cmpl
or
fdivrp
dec
out
fistl
lods
xor
cmc
cmp
dec
jmp
mov
and
mov
ljmp
mov
into
cmp
stos
and
rorl
ret
ljmp
add
push
test
mov
imul
or
pop
jmp
hlt
es
mov
arpl
mov
test
mov
sarb
call
frstor
gs
sti
push
mulb
addr16
repnz
adc
sub
hlt
adc
stos
loop
jno
repnz
xchg
xor
enter
inc
add
clc
pusha
fwait
sub
sbb
in
add
outsl
je
mov
jl
jp
mov
xor
lcall
das
jmp
iret
mov
call
mov
jmp
inc
popa
das
push
xor
dec
pop
jecxz
ficompl
jne
add
scas
test
and
test
popa
dec
cmpsl
sub
sub
insb
jne
add
lods
push
outsl
dec
pop
mov
icebp
pop
ljmp
dec
adc
or
inc
xchg
clc
call
and
jno
xchg
add
ror
jmp
dec
and
inc
jns
cmc
bound
adc
sbb
cld
sub
cmpsl
outsb
ds
fmull
jp
xchg
sub
or
dec
push
mov
mov
pop
insl
cli
nop
cmp
je
icebp
xor
inc
fyl2xp1
loope
hlt
pop
daa
sahf
dec
and
fmull
sub
insb
iret
dec
lret
shlb
out
popf
outsb
jmp
add
rcrl
cmp
arpl
call
add
xor
push
pop
dec
pusha
sub
pop
adc
cwtl
movsb
xchg
int
or
or
push
out
pop
mov
or
xchg
roll
shlb
push
into
jg
movaps
push
out
or
lock
add
icebp
in
mov
dec
pop
xor
mov
scas
inc
loopne
mov
ds
movsl
loop
loope
rcll
xlat
add
sub
inc
pop
xor
js
les
mov
pusha
mov
gs
sbb
jno
pop
mov
jno
pop
add
mov
add
sahf
cld
or
fstl
jg
int3
and
stc
adc
xlat
mov
lods
sbbl
cli
mov
dec
mov
das
and
icebp
push
inc
xor
sti
test
push
je
and
fwait
inc
pushf
aad
sub
pusha
dec
loop
dec
sub
jg
pop
xor
stc
sahf
mov
jle
daa
or
push
int
and
add
mov
xchg
xchg
mov
mov
jae
jp
jle
push
jnp
loopne
sbb
dec
pusha
inc
sbb
hlt
aam
dec
or
cmpsl
leave
fneni(8087
aaa
sub
lock
hlt
cmpb
loop
dec
ja
xchg
mov
push
out
lds
jge
outsb
pop
or
lret
dec
rep
int3
dec
mov
sub
xchg
ror
jno
lods
pop
and
cmp
push
scas
sub
rcl
or
pop
js
cmp
orl
pop
push
push
or
aad
sbb
jne
in
outsb
xor
pop
jmp
ja
xor
or
jae
push
fcoms
pop
push
jmp
pop
shl
mov
pop
push
cmpsb
sub
or
add
mov
pop
insl
bndldx
mov
cmc
out
pop
in
lcall
jp
popa
iret
mov
popf
scas
movsb
sbb
dec
inc
out
and
and
push
imul
mov
ja
mov
mov
xor
pop
pop
sub
xchg
mov
dec
data16
dec
hlt
and
es
cmp
and
insb
xchg
pop
xchg
pop
inc
or
insl
adc
lret
mov
or
mov
push
adc
cli
push
aas
inc
in
jp
mov
jo
xor
add
xor
ret
scas
and
stc
imul
jb
out
loop
dec
fs
je
adcb
neg
or
adc
call
inc
add
push
loope
cs
pop
sbb
addr16
xor
mov
sub
mov
push
pop
dec
out
inc
sbb
push
cmp
and
data16
or
cld
mov
jmp
test
scas
push
data16
mov
bound
outsl
orb
jmp
movq
movsb
jnp
stos
stos
jecxz
jl
sbb
jns
pop
mov
pop
mov
sbb
add
adc
fadds
cmp
les
mov
sub
addl
addb
mov
repnz
add
xchg
dec
or
les
adc
movsb
les
mov
in
add
adc
sub
in
xchg
add
shr
or
jno
inc
lret
shr
push
sub
xchg
scas
iret
imul
add
stos
jl
dec
loop
shll
jmp
dec
mov
cmpsl
stc
push
push
mov
pop
sub
bound
in
je
in
or
mov
fistps
cmp
divl
fs
dec
sub
and
ljmp
fadd
imul
cmovno
cli
aas
ret
pusha
movsl
push
mov
sti
sub
sbb
mov
stc
addb
add
jmp
add
and
cltd
insl
movsl
hlt
pop
or
and
outsl
shrb
lahf
in
aam
adc
cmp
adc
adc
lret
or
ret
in
sbb
sub
xor
sbb
out
pop
or
divl
xor
xlat
loop
jno
int3
adc
pusha
imul
jae
xchg
test
loop
lret
add
popf
lock
xchg
push
inc
nop
adc
mov
shll
push
jmp
setp
ret
xchg
pop
cmp
bndldx
into
jmp
pop
loopne
adcb
lret
push
cmp
mov
or
add
sbb
ret
mov
jg
xor
jecxz
aam
mov
sub
mov
jo
movsl
pushf
outsl
sub
xchg
stos
mov
rep
add
push
jecxz
adc
imull
pop
in
test
icebp
pop
push
mov
scas
and
push
popa
xlat
dec
in
xor
add
scas
pop
add
pop
repz
mov
xor
je
cld
sub
xor
pop
repnz
sub
and
sbb
sahf
push
mov
push
or
sub
inc
out
scas
push
mov
inc
ljmp
add
xchg
jnp
daa
js
orl
sbb
jmp
push
pop
decb
mov
add
stos
mov
add
add
sub
and
xchg
subl
add
add
xor
jne
add
iret
xchg
xchg
clc
sub
std
gs
sub
bound
xchg
in
add
jp
call
add
sarb
pusha
mov
add
inc
sub
mov
lret
push
adc
loop
out
jg
or
add
pop
mov
in
push
cltd
cmp
call
mov
dec
and
and
sub
decl
cmp
lcall
bound
or
xor
cmp
mov
repz
out
adc
cmp
popf
and
int3
data16
jg
stos
jmp
test
jns
pusha
andb
test
paddd
or
mov
loope
xor
xchg
push
out
push
xor
adc
or
pop
adc
lret
stc
pop
inc
int3
stos
ret
dec
push
mov
leave
jg
jl,pn
jmp
out
fsubrl
sarb
dec
adc
pop
sbb
into
mov
adc
jle
faddp
pusha
aad
adc
and
jmp
jmp
int3
flds
dec
jo
imul
loopne
sbb
cld
cli
dec
push
inc
repnz
jmp
push
mov
add
dec
scas
test
jecxz
leave
cmp
mov
inc
jo
inc
jnp
cld
or
mov
push
in
push
pop
inc
enter
adc
dec
lds
push
loop
xor
lcall
lret
or
pop
out
sar
out
into
aas
inc
mov
sub
and
jecxz
xor
fisttpl
push
testl
pop
arpl
lret
jbe
or
loop
cmp
sbb
cld
push
pushf
pusha
xor
cmp
push
pop
hlt
mov
pop
loop
mov
mov
aam
dec
imul
sub
cmp
xchg
movsb
nop
out
push
jecxz
inc
rcll
fldt
adc
pop
in
lret
stos
pushf
fisubs
sbb
mov
mov
cmp
mov
or
icebp
push
push
in
in
or
in
jno
call
mov
cmpsb
adc
scas
fadd
add
fisubl
insb
add
rorb
test
jmp
cmpsl
push
adc
pop
cli
and
into
and
arpl
add
inc
fisubl
or
cmp
jle
bound
or
push
or
and
jnp
std
nop
pop
jae
and
lock
outsb
add
or
adc
iret
popf
add
cmpsl
mov
mov
imul
push
test
mov
js
inc
xchg
cmp
aaa
dec
push
decl
ret
add
stos
insl
jmp
dec
js
test
jge
pop
notb
xchg
inc
movsb
adc
jl
add
and
dec
adc
xor
jnp
idivl
pop
pusha
xchg
dec
sbb
loopne
test
inc
sub
es
dec
push
push
pop
mov
lcall
imul
xor
and
cmc
jle
nop
sbb
movsb
loope
int3
inc
lods
daa
pop
sub
jae
xor
pop
mov
js
xlat
pop
mov
sbb
sbb
adcb
rorb
hlt
mov
mov
lahf
cltd
and
in
and
push
add
pop
stos
cmpsb
stos
dec
cmp
inc
push
movntq
xlat
adc
sarb
dec
mov
lds
mov
inc
out
sahf
out
xor
mov
dec
mov
add
sub
mov
mov
dec
inc
inc
pusha
incb
jo
es
das
inc
jl
mov
lods
orl
xchg
out
icebp
in
out
andl
leave
pop
mov
push
and
xor
out
xor
push
jmp
pop
insb
xchg
mov
bound
cmpsl
adc
or
push
adc
push
mov
aaa
or
or
add
inc
adc
sbb
je
clc
or
movsl
fadd
ror
daa
mov
push
imul
sub
pusha
les
push
dec
cmp
add
repz
cmp
inc
adc
enter
mov
je
lret
inc
and
loopne
sbb
bound
fdivrs
dec
jno
mov
lgs
das
mov
xor
xchg
xchg
je
clc
jmp
and
insb
movsb
das
adc
inc
popa
jo
cs
add
add
ficoml
xchg
stos
xor
shrb
fstps
push
mov
sarl
ffreep
inc
push
pop
in
jge
stos
pusha
fldt
dec
pop
jmp
rclb
push
in
in
hlt
subb
cmp
mov
push
adc
and
ljmp
add
sti
icebp
adc
and
mov
push
mov
pop
shl
shr
ret
add
enter
neg
push
cwtl
hlt
and
push
add
push
nop
or
ret
notl
xor
add
rol
loop
sarl
mov
push
push
iret
sub
fs
add
add
xchg
xor
xor
dec
push
add
mov
out
cmp
sbb
mov
ds
fs
rcrb
push
rolb
jnp
in
push
add
not
push
daa
clc
xchg
pop
lods
sub
fmull
lea
or
cwtl
pop
pop
or
icebp
movsl
ret
das
push
jae
mov
test
jmp
jge,pt
fwait
jle
push
testl
iret
in
and
push
or
icebp
hlt
aad
lods
incb
jbe
inc
mov
mov
out
or
xchg
xor
inc
imul
push
jae
andb
adc
and
pushl
lods
dec
pop
mov
cwtl
add
push
add
mov
cltd
add
inc
xchg
cltd
dec
jbe
jecxz
or
aas
fnstenv
aam
sbb
and
pop
ja
ljmp
test
jl
stos
js
movsb
cmp
sub
sbb
sbb
push
notl
or
jmp
push
lods
dec
xchg
int3
or
jmp
stos
sbb
rorl
icebp
lret
inc
lret
aam
inc
sarb
ljmp
jecxz
xchg
pop
xor
adc
and
xchg
pop
cmp
push
xchg
cmp
popf
add
jbe
idivl
sbb
jnp
loopne
and
xchg
push
test
jl
xor
add
or
and
gs
xor
int3
push
das
cmp
cld
dec
sub
xchg
mov
inc
in
pop
es
dec
pop
and
mov
scas
ret
outsb
push
imul
push
jns
popa
jp
sub
jmp
decb
sbb
cmc
sbb
xor
aad
or
dec
fisubl
and
inc
jp
mov
jb
lock
xor
add
das
mov
dec
sub
pop
lahf
inc
dec
inc
pop
aad
dec
dec
lret
pop
lock
pop
sbb
jo
dec
mov
or
pusha
cwtl
rclb
pop
shll
cld
cmp
fistpll
lahf
xorb
xlat
jg
inc
popa
out
mov
ljmp
push
mov
addr16
fsts
nop
mov
jno
cmp
jmp
push
pop
push
pop
test
mov
adc
or
out
cmp
negb
jmp
sub
dec
or
fsub
jmp
mov
push
mov
andb
insb
aam
sub
popa
push
pop
add
loopne
mov
and
pop
imul
dec
push
push
das
mov
inc
mov
push
push
mov
ror
sbb
xor
inc
xor
dec
inc
jne
add
sti
daa
fcompl
fldenv
or
mov
pop
lret
push
jmp
popa
push
jmp
jo
sbbl
inc
data16
jmp
out
and
mov
add
pop
xchg
add
jno
dec
lcall
mov
repz
fnsave
push
out
js
pop
addb
fcoms
jl
inc
test
adc
or
out
add
sub
dec
gs
rcrl
bnd
jno
in
popf
inc
adc
mov
imul
ficoms
test
jbe
add
stos
daa
mov
mov
jns
mov
lock
push
xor
dec
and
pop
imul
sbb
sub
push
pop
pop
rolb
add
out
pop
push
sub
xor
push
pop
jmp
xchg
out
popa
in
push
add
jno
jg
push
movsl
pop
outsb
mov
jb
stc
fucomip
sbb
clc
popa
call
mov
jbe
and
daa
testb
or
add
sbb
aas
mov
mov
in
add
faddl
pop
fnsave
jns
repnz
mov
mov
fstpl
push
sarl
xchg
add
jbe
xor
cli
ret
into
das
sub
jle
inc
cmp
mov
jnp
mov
scas
shrb
push
movzwl
fwait
cmc
and
sub
xchg
dec
or
xlat
dec
mov
pop
fsubr
ficoml
pusha
dec
mov
enter
adc
ret
or
push
push
xor
push
mov
dec
repnz
adc
loope
popf
aas
fisubl
inc
push
add
xorb
xor
mov
add
and
shl
sub
jmp
out
jge
stos
add
lds
sub
xor
setb
mov
push
xchg
jle
pusha
cmc
xor
stc
pusha
xor
sub
push
jge
ljmp
pop
mov
scas
jp
pushf
mov
cmpsb
xor
push
nop
adc
mov
pop
mov
or
hlt
jmp
mov
push
filds
jmp
jmp
and
push
mov
jmp
push
scas
lret
sahf
mov
jle
push
testl
add
subb
sub
sbb
xor
or
or
mov
sbb
dec
pop
add
lods
setno
jmp
out
or
sub
xchg
push
out
push
add
testb
and
push
sbb
and
pop
adc
push
repnz
cmc
sub
andb
jb
dec
scas
aam
push
xchg
pop
jg
das
stos
js
xchg
xchg
push
xchg
add
lahf
pop
add
jg
pop
jns
dec
or
and
lods
pop
xchg
push
scas
lahf
leave
dec
scas
fwait
push
push
shrl
lret
jb
inc
jge
fadd
stos
std
jl
clc
repnz
cs
or
pop
inc
mov
jae
push
sbb
mov
pop
nop
sbb
add
push
mov
scas
dec
enter
mov
fnstsw
dec
aas
sub
out
cmp
mov
mov
xchg
ljmp
in
jne
imull
dec
scas
sub
jmp
and
sbb
lret
or
adc
mov
xor
adc
shlb
adc
mov
dec
lds
or
mov
loop
lods
sar
push
rcrl
mov
pop
sti
sbb
cmp
pop
add
icebp
mov
jg
mov
ucomiss
ret
pusha
push
insb
popf
test
push
add
jmp
imull
test
repz
xchg
ljmp
sbb
pop
dec
sub
insl
sub
or
roll
jmp
lret
inc
sub
adc
imul
push
jmp
pop
add
adc
enter
aaa
or
adc
inc
std
push
inc
or
pop
ljmp
test
fimull
jmp
dec
inc
mov
and
add
sub
or
dec
ds
fwait
jae
add
aam
xchg
xchg
int
js
xchg
sub
scas
mov
iret
sbb
outsl
shrb
xor
add
add
repnz
mov
fstps
dec
iret
cmc
or
and
sub
jns
xchg
fstl
lods
add
shlb
fldt
adc
punpckhwd
dec
pop
jmp
aaa
adc
adc
mov
adc
cltd
shrb
add
cmp
test
sub
popa
sub
pop
std
in
sub
js
dec
sub
pop
mov
cmp
push
test
jne
cli
in
and
jg
filds
cmp
fcoml
xchg
addb
adc
lock
orb
arpl
sub
xor
fldcw
push
jno
and
mov
mov
fnstsw
xor
mov
mov
pop
shlb
cmp
pop
mov
out
inc
pop
dec
out
lods
mov
stos
mov
add
xchg
push
mov
add
fsubs
mov
or
jno
and
and
push
pop
ljmp
or
fsubr
push
mov
cmp
jmp
xchg
repnz
out
iret
add
ds
pop
in
loopne
push
mov
inc
mov
adc
cmpsl
test
pop
pop
adc
outsb
shl
adc
add
pop
nop
js
sbb
shlb
push
rcrl
add
and
nop
xchg
cltd
add
xor
xchg
dec
xchg
inc
lret
and
jo
pop
push
shl
pop
lds
sub
xchg
dec
out
and
push
cld
xchg
pop
mov
pop
sbb
or
fimuls
or
sbb
shll
mov
jno
popa
sub
fimuls
stc
jecxz
into
call
mov
cs
js
jle
adc
and
pop
sbb
sub
cs
cltd
add
adc
enter
mov
add
bswap
dec
inc
add
aaa
dec
and
fidivrl
xchg
jmp
xor
pop
pop
into
xchg
jmp
testl
sarb
pop
mov
cmpsb
inc
cli
fldl
and
rolb
push
dec
jne
add
insl
notb
das
cwtl
dec
push
leave
fs
xchg
cmp
icebp
mov
movsl
repz
push
jp
mov
or
dec
mov
push
push
push
sti
lods
add
add
dec
jne
mov
popf
inc
and
in
sahf
pop
lds
das
jmp
mov
sbb
jmp
mov
or
and
and
push
leave
inc
mov
lret
push
push
mov
mov
pop
jmp
movsl
setnp
dec
or
fldl
mov
fdivl
jmp
push
je
adc
add
mul
mov
fcom
mov
pop
rcl
inc
push
jge
cs
mov
push
jmp
xor
sub
push
leave
sbb
mov
push
adc
mov
sarb
cmp
fadds
nop
enter
into
mov
lcall
test
push
or
ret
add
or
idivb
dec
sar
jle
and
pop
xchg
in
add
shlb
push
xchg
ret
movntq
scas
mov
mov
out
cmp
push
xchg
pop
mov
mov
and
pop
jmp
test
inc
lret
xor
rcll
shr
out
jne
mov
dec
and
ret
xor
aam
pop
dec
push
mov
and
mov
add
jmp
orl
pop
sbb
pop
test
repz
scas
and
out
or
aam
sub
cmp
and
stos
in
shl
roll
in
sbb
in
movsb
pop
mov
xchg
pop
xchg
push
cwtl
adc
push
xchg
push
cmpl
cmp
int
pop
dec
decb
daa
jae
sub
arpl
pushf
repnz
cli
adc
pop
dec
dec
pop
xor
inc
insl
jge
xorb
xor
imul
pop
xor
xor
inc
dec
jnp
das
jnp
pusha
dec
faddl
rcl
cmp
pop
sbb
add
andl
gs
jns
or
xor
iret
movsl
pop
data16
mov
dec
mov
cmp
cwtl
sub
hlt
cmp
jns
loop
xchg
clc
sbb
repnz
or
dec
sbb
cld
jmp
mov
aam
add
shll
lret
ss
inc
addr16
orb
inc
and
add
pop
jmp
sbb
push
push
pop
mov
sbb
aad
loop
push
adc
cwtl
xor
mov
dec
ret
inc
jecxz
sub
sbbb
xchg
mov
test
lods
inc
pop
or
test
xlat
xor
inc
adc
push
jmp
push
dec
js
adc
mov
dec
xor
ror
mov
or
jo
jecxz
cmc
adc
out
sub
repnz
push
in
fbstp
jmp
pop
or
subb
scas
xor
sbb
push
add
aas
pusha
loopne
push
and
and
add
sub
dec
and
add
dec
cli
dec
sub
jmp
pop
xlat
stos
push
fsubl
std
mov
adc
leave
je
daa
cwtl
sahf
shrb
adc
sbb
xchg
stos
repnz
xor
aas
mov
nop
and
add
shl
or
arpl
in
sbb
mov
cmp
imul
push
xchg
mov
fildll
inc
ljmp
dec
mov
imull
icebp
scas
cli
orb
mov
pop
pop
in
lock
jne
pop
or
dec
mov
in
dec
add
popa
loop
pop
add
or
adc
jmp
cld
or
push
and
cmp
jo
in
repnz
out
dec
add
dec
addr16
or
in
pop
enter
push
out
out
mov
mov
imul
and
imul
push
mov
xor
cwtl
dec
add
inc
and
or
fwait
jmp
cmpsb
in
push
or
add
or
add
xchg
push
jae
pop
adc
sub
pop
adc
aas
mov
cwtl
adc
pop
jo
cmp
adcb
pop
add
push
xor
inc
jl
sub
out
scas
or
maxps
mov
mov
dec
cmpsb
inc
adc
shll
cmp
sahf
rcrb
loope
sub
out
and
pop
sbbl
adc
negl
enter
int3
orl
pop
loop
cwtl
notl
pop
jecxz
adc
jb
ret
je
lods
jb
loop
sbbl
les
scas
je
mov
rcll
pop
mov
gs
inc
cs
pop
mov
test
inc
xchg
sbb
adc
lds
dec
rorb
ja
or
push
out
sub
test
push
icebp
and
test
push
push
out
mov
ret
orb
enter
and
ret
jae
dec
int
or
jo
gs
nop
or
outsl
xlat
dec
pop
sti
add
mov
arpl
inc
jmp
adc
push
xor
icebp
jmp
in
stc
and
xchg
add
stos
jnp
fimuls
push
ja
sti
ja
ret
aad
outsb
push
sub
nop
outsl
mov
cmp
mov
push
psubsw
rcrl
js
push
and
jne
jae
stos
pop
je
push
jg
mov
sub
jp
xchg
into
out
call
dec
push
incb
xchg
call
iret
insb
stos
leave
inc
int
outsb
xchg
lods
or
xchg
scas
push
call
or
sbb
sub
sub
sub
adc
mov
dec
out
enter
shrb
fstps
fisubrs
pop
mov
out
and
into
mov
loop
pop
inc
pusha
and
or
test
add
xchg
dec
and
add
or
push
cmp
inc
add
inc
inc
xchg
xor
adc
mov
clc
mov
mov
lret
cmpb
xor
jmp
mov
cwtl
pop
cmp
jbe
jnp
cmp
and
jno
or
pusha
push
orl
in
or
stc
xor
inc
mov
mov
xor
fsubs
inc
dec
test
push
mov
cltd
cwtl
imul
jno
lret
arpl
jno
or
push
push
push
inc
scas
pop
push
nop
xchg
push
sbb
pop
xor
jno
inc
push
push
xchg
adc
sbb
jnp
add
push
daa
or
push
pop
push
add
push
dec
popf
xchg
mov
test
cmp
stos
xor
or
push
fcmovne
cmc
sar
jmp
or
test
pop
scas
sub
sub
lret
xchg
lahf
push
xchg
adc
mov
mov
push
add
std
push
cmpsb
and
or
pusha
mov
mov
add
inc
cwtl
mov
pop
lahf
sbb
sub
sbb
xor
xor
dec
mov
fldenv
jp
js
cld
dec
insl
cmp
sub
jo
add
daa
jbe
mov
aas
add
cmc
popf
push
daa
or
add
push
loope
ds
xor
add
dec
mov
negb
fimull
push
xor
inc
push
inc
push
add
jmp
rorl
pushf
pop
in
sub
dec
xor
push
jmp
adc
xor
sub
cmp
or
xchg
loop
testb
insb
push
test
adc
or
stos
mov
ret
dec
jno
mov
mov
mov
orb
jmp
scas
sub
sub
sbb
and
ljmp
in
dec
mov
out
mov
jmp
dec
jg
cltd
data16
fcoms
nop
and
push
mov
jne
pop
dec
pop
subb
jmp
insl
imul
inc
mov
xor
pop
mov
sarl
in
fcmovnb
adc
clc
mov
ljmp
test
sub
and
or
jmp
mov
addr16
fdiv
xor
into
xor
scas
lret
cli
adc
pop
clc
clc
pop
repnz
cmpsb
push
xchg
mov
test
dec
cli
xor
push
fists
jmp
jae
jecxz
fnsave
adc
add
pop
jno
das
sub
push
mov
xchg
in
gs
stos
cwtl
je
add
xor
push
mov
shlb
sbb
push
movsl
cmp
negl
andb
mov
inc
jecxz
int3
sbb
rcll
sti
icebp
add
lcall
mov
imul
xchg
fsub
cs
aam
rorl
data16
flds
xor
push
add
sarb
scas
pop
xchg
mov
je
mov
hlt
sub
rorl
mov
mov
mov
test
and
and
outsl
aaa
shlb
rcll
and
xchg
das
mov
dec
ret
push
add
mov
das
xor
insb
mov
push
into
in
sarb
rolb
add
push
mov
xor
jg
testb
mov
add
fists
jmp
sub
pusha
sub
testb
shl
mov
in
or
lds
scas
fnstenv
rcll
sti
pop
sbb
data16
fidivl
imulb
adc
pop
dec
push
fisttps
push
pop
push
add
ljmp
xor
inc
xor
add
xchg
cld
pop
add
push
ficompl
inc
sarl
adc
or
es
incl
dec
push
mov
cmpsb
idivl
mov
ds
xchg
mov
pusha
cmp
aad
push
repnz
dec
xchg
mov
jle
add
movsl
jp
ds
mov
movsb
cld
xchg
shl
inc
sbbb
out
jmp
cltd
pop
push
insb
pushf
pop
out
sbbl
xchg
leave
imul
orb
cmp
jmp
rorl
clc
inc
inc
or
aaa
or
in
add
cmp
cmpl
add
insl
pushf
adc
cmpsl
or
aas
pop
dec
andb
push
push
out
xchg
cltd
sbb
mov
mov
mov
pop
in
in
imul
int3
in
pop
fists
or
inc
mov
xchg
add
loopne
push
mov
mov
push
add
test
xor
adc
push
sbb
out
jmp
dec
lret
push
es
dec
lahf
add
add
loopne
xor
dec
or
xchg
test
mov
jg
iret
sub
mov
and
mov
test
lds
xor
jl
ds
or
dec
outsb
and
and
out
push
divl
lret
and
mov
xor
call
and
xor
repnz
cmp
mov
push
mov
jae
xchg
mov
or
dec
lock
mov
stos
mov
add
cs
jmp
push
mov
dec
add
xor
mov
mov
jmp
sahf
mov
cmp
mov
leave
sub
jl
pop
mov
pop
stos
or
test
dec
inc
mov
adcl
loop
in
in
jae
imul
pop
js
out
xor
mov
push
dec
in
mov
aad
lds
sub
test
add
push
sub
xchg
clc
fsubl
mov
sahf
and
iret
pop
jno
push
loop
jp
xor
cmp
mov
shr
jp
push
mov
out
pop
sub
or
imul
test
jbe
lock
mov
movsb
mov
mov
xor
js
rcl
xor
idiv
mov
cmc
inc
add
add
or
and
sub
or
mov
imul
sahf
pop
cmpsl
jo
repnz
push
mov
mov
out
scas
dec
leave
sar
sbbl
pop
jle
add
dec
mov
std
adc
or
out
jp
pop
push
and
pop
jge
dec
out
sbb
pop
add
enter
xor
adc
pop
fadds
mov
inc
dec
add
dec
fisttpll
jmp
jns
movsl
ret
mov
mov
xor
loop
imul
add
ljmp
and
push
add
push
add
pop
lret
push
jmp
mov
jnp
dec
mov
pop
loope
and
fbstp
pop
out
inc
push
sbb
cmp
sub
mov
add
jne
sahf
imul
pop
mov
jmp
inc
pusha
loop
jae
jae
dec
bound
adc
in
and
aaa
rsqrtps
sbb
jbe
pop
jnp
repz
mov
mov
int3
lds
or
add
push
mov
sub
loope
pop
jg
sub
cmp
stc
jp
mov
cmpsb
and
push
into
in
mov
cltd
jb
inc
sbbb
sbb
and
out
push
mov
notl
push
pushf
mov
mov
mov
enter
inc
lahf
rcr
inc
pop
cli
mov
pop
out
or
popf
fstpt
sbb
pop
cmp
jmp
popa
lods
ja
outsl
roll
adc
jg
call
sub
dec
out
ja
sbb
push
sbb
pop
add
jecxz
mov
pop
decl
mov
mov
comiss
pop
dec
mov
jne
cmp
mov
adc
add
jnp
outsl
sbb
sbb
xchg
jg
mov
sub
xchg
pop
jmp
data16
xor
test
add
dec
xchg
cmp
dec
inc
je
pop
out
or
inc
or
dec
gs
jge
mov
aam
arpl
jp
ss
ret
test
out
add
and
rolb
inc
jle
pop
inc
push
or
dec
sub
pusha
roll
gs
xchg
sahf
inc
mov
mov
adc
xchg
call
xchg
in
push
dec
adc
mov
xor
int3
test
aad
push
outsb
clc
je
sbbl
mov
mull
fcoml
sbb
or
iret
push
mov
pop
add
jbe
push
push
fisttps
addr16
pop
pop
sub
aam
mov
sbb
ljmp
cmp
xchg
or
push
push
mov
in
jb
rorl
ja
jnp
mov
sbb
test
push
imul
jp
pop
mov
mov
adc
and
sbb
pop
xor
ss
aad
stos
jle
rclb
fiaddl
mov
hlt
sub
push
ud1
xchg
or
jne
in
or
adc
add
scas
and
xlat
pusha
not
sbb
mov
jno
cs
dec
roll
inc
pop
or
mov
cmp
negl
pop
adc
jp
icebp
out
cmp
repnz
mov
data16
ss
add
or
addr16
inc
inc
clc
int3
mov
in
mov
and
sahf
mov
cmp
and
or
add
xor
lods
in
xlat
sub
mov
adc
pop
scas
cmp
jmp
out
sub
push
ja
popf
dec
bound
push
imul
adc
lcall
jns
and
ret
scas
fmuls
cld
repz
ret
push
mov
add
pusha
xchg
mov
jne
mov
in
and
fwait
xor
cmpsb
and
fists
dec
and
cmp
add
jbe
pop
imul
outsl
dec
xchg
adc
cltd
or
or
rcrb
fimull
shrl
push
push
and
push
mov
jl
int
pop
jp
mov
sub
jp
arpl
addb
push
psubb
inc
fistl
lahf
test
scas
cmc
pop
jle
clc
xchg
je
out
iret
fidivl
add
loope
mov
or
push
mov
sbb
sbb
mov
xchg
xor
jae
pop
int3
dec
inc
push
push
test
push
sti
ficompl
das
sub
xchg
out
cwtl
or
pop
mov
iret
xor
mov
mov
hlt
scas
or
sbbl
mov
mov
lahf
cld
fiadds
mov
out
jg
dec
loop
or
mov
stc
outsl
xchg
mov
add
jecxz
cmp
imul
dec
or
dec
aas
jb
push
loopne
ss
stc
jne
in
push
sub
sub
lea
shll
push
in
dec
gs
xor
mov
push
add
jmp
out
dec
idiv
popf
test
and
lea
add
repnz
pop
cmp
add
ja
cmp
add
cmpsl
cmp
jg
ljmp
mov
add
fdiv
push
fs
cmp
imul
mov
dec
xchg
hlt
divl
xchg
inc
out
mov
inc
mov
inc
fnstsw
test
push
add
sub
shrl
jne
lds
frstor
sub
push
push
xchg
insb
mov
jmp
jmp
mov
lock
xchg
jl
pop
xor
push
rcl
jae
clc
movsl
xchg
jnp
aam
lock
adc
cmc
daa
icebp
pop
cmp
add
jge
out
cmpsl
imul
push
or
cmpb
neg
add
sti
add
jmp
out
xor
dec
pusha
push
add
adc
mov
or
dec
xchg
jp
and
xor
dec
sub
pop
ds
pusha
xor
sbb
cmovp
hlt
icebp
add
jl
mov
mov
rcrb
mov
movsl
enter
mov
mov
inc
je
push
jns
jmp
xor
cmp
add
inc
cmpsb
call
push
or
arpl
adc
pop
jecxz
or
in
adc
ret
cmp
or
mov
sarl
sbb
jno
and
adcl
xorb
lret
aaa
jnp
cmp
or
jecxz
xchg
add
dec
add
inc
arpl
push
cmp
imul
jge
mov
fidivl
outsl
pop
mov
push
cmc
push
dec
nop
popf
add
lock
xor
mov
not
pop
data16
add
adc
das
or
or
jns
xchg
xor
jno
daa
pop
inc
xor
pusha
shr
jmp
movsb
xor
and
mov
add
lds
pop
outsl
jle
mov
sbb
fs
in
xor
je
jge
movsb
jmp
in
inc
aad
mov
xlat
cli
jns
into
and
mov
add
rol
jl
or
not
push
loopne
cmc
mov
add
test
dec
jno
dec
call
fdivrl
pusha
push
and
jbe
stos
sub
inc
sbb
jns
pop
mov
and
cmpsl
fistpll
xchg
js
inc
cld
and
and
divb
aad
int3
add
sbb
pop
jle
xorl
sbb
and
xchg
gs
arpl
cli
adc
shlb
call
mov
pop
push
cmp
mov
or
adc
inc
mov
xchg
test
jmp
loope
call
rorb
fbld
xchg
push
push
cmp
nop
adc
add
jmp
out
incb
add
cltd
ds
add
and
cwtl
add
xor
or
adc
jo
jmp
mov
dec
dec
mov
mov
pop
push
ret
cld
stos
std
insl
push
adc
xchg
inc
push
jge
mov
je
pop
xlat
dec
xchg
das
push
adc
aam
cli
push
cmp
inc
rolb
jns
repz
sarl
pop
fnsave
pushw
mov
or
mov
pop
sub
add
push
outsl
adc
inc
imul
cli
rclb
mov
clc
pop
and
add
add
xorl
cmp
pop
cmpsb
adc
testl
ret
jg
add
inc
jge
dec
push
out
and
pop
test
lock
cwtl
mov
cld
mov
mov
xchg
and
mov
and
lock
jnp
inc
clc
inc
sub
dec
or
dec
and
add
cs
mov
ret
icebp
pop
push
pop
ss
ja
int
frstor
ljmp
movsl
push
jg
jne
repz
mov
ret
mov
stc
cmp
push
mov
add
lcall
mov
mov
cmp
sub
or
push
inc
push
mov
pop
stos
ds
and
lds
jle
jne
subl
jge
es
or
shr
add
dec
stos
cmp
sub
je
adc
inc
pop
lret
mov
sbb
mov
and
pop
and
inc
sbb
adc
push
push
xor
push
cmp
test
push
mov
mov
aam
cmc
mov
arpl
cmpsl
fmull
lods
add
mov
xlat
pop
inc
mov
inc
enter
mov
aas
out
inc
add
test
or
push
add
out
jo
sub
aam
and
pop
dec
lods
stos
adc
dec
inc
sbb
and
adc
add
add
and
push
imul
mov
pusha
fidivrs
fsubs
pusha
aas
pop
rclb
jae
xchg
pop
xor
or
jmp
out
ss
add
iret
pop
push
pop
pop
inc
icebp
jo
hlt
xchg
dec
xchg
in
or
bound
dec
jbe
je
pop
pop
inc
dec
lea
cld
jp
les
jmp
and
pusha
xor
pusha
lea
add
mov
je
ret
and
cli
out
pop
mov
adc
adc
add
cmpb
fs
rorl
cld
or
add
ljmp
mov
push
mov
sbb
sub
add
and
lret
xor
sbb
add
sub
shl
pop
xchg
in
movsl
aam
test
rorl
push
icebp
xchg
pop
xor
jno
inc
jecxz
jmp
sarb
divb
cli
xor
add
pop
add
subb
mov
add
sub
push
inc
jp
call
or
repnz
or
add
cmp
pop
cmp
pop
and
repnz
data16
xor
or
addr16
mov
adcl
jo
movsb
pop
lea
or
add
mov
or
xchg
add
mov
shlb
mov
or
daa
adc
incl
sub
push
mov
add
js
adc
pop
inc
or
push
dec
mov
gs
inc
sbbl
daa
cmpsl
mov
or
mov
addr16
mov
lods
jle
xchg
push
or
push
cmp
push
inc
fildl
data16
popf
jne
shll
int
push
inc
sbb
xchg
push
jne
cwtl
ds
or
mov
mov
push
mov
imul
adc
xchg
xor
pop
adc
or
test
cmpsl
mov
jg
add
aam
sbb
sub
fisttpl
xchg
dec
sub
subl
adc
lret
scas
int3
jecxz
aam
push
bound
mov
stc
adc
push
mov
xor
cmp
add
or
dec
and
and
or
cmpl
rclb
jmp
inc
adc
lret
pop
inc
cmpsl
movsb
insl
cmpsl
or
pop
xchg
lret
lock
fiadds
jo
movsl
mov
xor
dec
bound
mov
push
dec
pusha
dec
sar
aad
cli
ret
xchg
push
dec
dec
mov
cs
jnp
and
cli
aad
dec
enter
cmp
push
movsb
pusha
addb
add
jb
dec
rolb
mov
or
test
pop
pop
fs
ret
mov
push
cmc
pop
xchg
xor
push
xorb
pop
lock
jo
dec
inc
idivl
push
cmp
pop
dec
sub
addr16
pop
hlt
push
and
sub
daa
add
xor
push
sub
cmc
mov
cmpsb
cmp
or
movsl
add
not
pop
lods
sbb
fs
xor
and
push
loope
push
jp
test
xchg
mov
data16
cmp
lods
cwtl
xchg
out
lret
repz
rcrl
cmp
int
mov
or
mov
out
add
mov
jmp
fisubs
divb
or
xchg
stos
sub
loopne
comiss
sbb
lret
cmp
push
and
rol
mov
lock
mov
loop
lcall
mov
and
cli
pop
in
add
movl
testb
js
fcmovu
and
push
daa
jmp
mov
jnp
in
mov
push
add
mull
add
aam
ret
add
mov
pop
insb
cli
inc
test
cmp
rcrb
and
nop/reserved
into
pop
push
daa
push
mov
loop
and
movsb
cli
mov
xchg
ds
repz
dec
pop
in
sbb
xchg
xchg
add
jmp
outsb
test
test
and
sarl
jmp
pushf
adc
ljmp
add
cmpb
mov
push
add
dec
cmp
sbb
fmull
mov
push
mov
jnp
jl
xchg
sti
in
adc
sbb
add
mov
jmp
ljmp
cmc
xor
cmovl
ret
push
dec
jecxz
add
not
sbb
inc
jge
sub
jmp
ret
sub
data16
mov
pusha
in
fbld
mov
mov
pop
push
mov
es
push
cmpsb
add
sub
shll
mov
or
lds
enter
daa
jns
add
sbb
movsl
js
pop
icebp
adc
aam
popa
mov
pop
aam
inc
cmc
aas
xchg
and
loopne
ret
jge
faddl
cmp
cmp
adc
push
dec
or
cmp
testl
pop
aaa
cmp
jmp
bound
and
call
cmp
dec
test
pop
xchg
stos
dec
sbb
data16
outsb
push
dec
push
push
jp
cmc
loop
mov
daa
loop
mov
push
daa
into
daa
sub
lcall
mov
and
sbb
lea
jae
sub
sbb
sarb
mov
pop
cmp
fadds
adc
std
adc
mov
mov
add
mov
mov
push
dec
notb
add
int3
add
dec
cmp
xlat
mov
add
out
jo
cmp
sbb
andb
in
jg
loope
aam
adc
adc
jp
cmp
inc
test
dec
pop
or
push
movsl
pop
jno
xorb
inc
shr
sub
int
add
jmp
pushf
testb
mov
or
mov
inc
scas
test
and
or
mov
mov
fcoms
test
in
pop
and
add
stos
orb
add
inc
rorb
unpckhps
outsb
mov
pop
mov
and
cmp
push
dec
push
ljmp
xor
xor
mov
xchg
idiv
test
dec
cwtl
mov
fisubrs
dec
mov
and
cmp
pusha
std
jae
jg
xchg
cmpl
in
push
add
and
insl
push
jno
or
lds
loop
add
pop
xor
ja
mov
sti
xchg
dec
push
lret
add
add
or
mov
iret
pop
xor
bound
jne
fstpl
mov
imull
xchg
mov
dec
in
adc
mov
push
cwtl
cli
add
adc
cmp
nop
cltd
add
sub
mov
hlt
hlt
adc
loope
pop
cmp
inc
and
clc
adc
mov
xchg
neg
into
pop
push
fcmovb
or
pop
xor
loop
xchg
mov
add
or
or
push
or
add
or
loop
dec
pop
dec
cwtl
test
cwtl
sub
leave
pop
pop
rorb
or
add
bound
fistl
jnp
cmpsl
insb
mov
push
pop
cmp
pop
mov
cmp
pop
jmp
sbb
dec
push
lret
add
and
adc
subl
jmp
pop
pop
xor
push
jbe
mov
pcmpgtb
push
mov
mov
loopne
ret
lcall
sbb
fmuls
inc
popa
and
dec
mov
add
pop
orb
icebp
and
sbb
push
fstl
add
and
es
xor
xchg
pop
mov
or
sbb
push
push
add
dec
insl
mov
cmc
subb
rcrl
mov
mov
loopne
mov
cmp
pop
jmp
dec
mov
das
enter
inc
repnz
adc
jecxz
int3
rcl
in
in
xor
pop
mov
lahf
xchg
push
pop
push
inc
call
incl
xor
std
js
xchg
sar
sahf
mov
jmp
xchg
adc
mov
ret
add
iret
shr
inc
push
sub
das
dec
rorl
dec
jmp
adc
outsb
repnz
outsb
arpl
insl
ljmp
xchg
jns
pop
pop
pop
push
test
lea
pop
stos
popa
mov
rcl
dec
mov
or
or
nop
xor
orb
mov
jmp
dec
setl
sbb
mov
movl
jge
addl
push
sub
push
jmp
pop
mov
lea
jne
cmpsb
loope
mov
nop
daa
cmp
mov
jbe
xorl
push
ret
adc
cmp
push
ret
add
rorl
call
and
mov
add
and
in
rcrb
push
shl
adc
movsl
adc
data16
outsl
sbb
popf
rclb
fisttpll
test
push
mov
add
mov
pop
mov
inc
shr
mov
dec
bound
jmp
or
fbld
rcrb
psadbw
push
mov
jle
outsb
jmp
and
add
mov
add
sbb
lds
xor
pop
stos
je
test
sbb
mov
aam
sti
add
cld
dec
adc
loopne
dec
popf
pop
pop
push
adc
pop
lods
add
movsb
add
pop
mov
lds
xchg
clc
movsl
mov
dec
sahf
add
gs
cmp
insb
movlps
test
mov
loope
mov
add
repz
out
xor
adc
xchg
push
xchg
jns
or
negb
pushf
pop
sti
mov
pop
scas
ja
xor
push
ja
cmp
and
shlb
fnstcw
cltd
mov
subb
and
add
sar
js
out
andl
xor
ds
ret
jns
loop
pop
and
lcall
ja
adc
and
pop
mov
mov
inc
test
push
loope
test
movsl
sbbb
push
loope
in
repz
lret
push
lahf
xchg
inc
adc
adc
pop
sub
pop
and
mov
and
not
es
jb
push
add
jmp
mov
int3
adc
xor
push
test
pusha
scas
imul
pop
inc
and
add
push
cmp
mov
sbb
xor
push
add
pop
jge
or
add
sbb
incb
xor
push
loopne
push
add
inc
in
int
mov
dec
test
or
adc
enter
lds
mov
mov
or
cmc
data16
or
mov
mov
dec
add
add
pop
rorb
add
pusha
add
jae
clc
in
stc
orl
rcrl
aaa
mov
ljmp
jg
jnp
iret
mov
and
ljmp
mov
push
or
cwtl
js
ret
clc
pop
test
stos
jmp
mov
jl
jmp
scas
idivb
mov
push
mov
sbb
sub
movsl
out
ljmp
inc
xchg
dec
jmp
mov
or
int3
int
push
not
adc
jecxz
and
push
add
xor
add
adc
pop
notl
ret
aas
cmp
daa
gs
xor
nop
inc
mov
jb
dec
repz
pop
not
xor
das
cmp
pop
pop
inc
sub
pop
mov
and
ljmp
adc
int
xor
mov
int
mov
push
jno
hlt
ja
addb
sub
mov
arpl
pop
dec
jmp
pop
daa
daa
lcall
sub
add
push
adcb
pop
push
mov
mov
xchg
cmp
dec
sbb
mov
sbb
mov
fwait
sbb
insl
or
sub
cwtl
pusha
jmp
jmp
aad
adc
pop
push
cmpsb
pop
dec
je
das
inc
pop
mov
or
add
mov
xor
pop
xlat
or
cmc
add
push
add
push
push
xchg
jb
icebp
std
shrb
ljmp
sub
stos
inc
clc
int3
xlat
das
data16
bt
add
xor
scas
xchg
xchg
adc
ljmp
stos
outsl
mov
mov
jae
mov
push
shlb
push
lahf
rorb
mov
sbb
add
mov
sbbb
dec
sub
test
mov
outsl
popa
mov
xor
pop
xchg
aam
mov
xor
add
cld
imul
mov
das
cmp
es
add
jbe
dec
rorb
cltd
ds
fucomip
pop
mov
add
lret
or
or
mov
mov
push
push
xorl
inc
xchg
test
or
insb
sbb
jge
sub
ja
xchg
ffree
adc
fistpll
mov
pop
jnp
adc
clc
stos
xor
jg
lock
and
jmp
mov
movsb
pop
fwait
inc
dec
mov
push
ret
adc
lods
or
push
mov
cmc
daa
mov
cwtl
dec
ret
push
lahf
jmp
sub
mov
jle
stos
rep
stc
push
xorl
test
push
add
sti
push
mov
adc
nop
and
sar
lds
adc
aas
leave
add
jp
mov
dec
inc
fbld
outsb
mov
xchg
and
leave
and
add
rcrb
cmp
mov
and
sarb
mov
or
daa
add
jo
jp
mov
or
enter
das
and
imul
mov
add
rcl
sbb
outsb
mov
scas
popf
sbb
adc
sub
insb
jl
nop
jb
outsb
mov
test
ljmp
mov
loop
sub
sbb
and
sbb
jmp
leave
ret
mov
subl
cmpsl
mov
mov
int
cmc
gs
or
push
adc
push
loopne
or
sbb
add
jl
mov
xchg
test
fldenv
push
daa
jmp
popa
insb
sbb
add
inc
cmp
xchg
pop
vpacksswb
rclb
pop
dec
ret
bound
int
mov
xor
repz
push
sub
dec
push
mov
std
cmp
imul
cmp
fisubl
cmp
outsl
inc
gs
aad
lds
lock
jle
mov
cmpsb
push
and
adc
lock
cmpsb
add
out
add
xchg
faddp
jae
jmp
stc
or
fisubl
popa
push
imul
mov
pusha
test
sti
mov
lret
dec
sub
lret
adc
mov
xchg
sbb
inc
js
jmp
lock
cmpsl
mov
notb
lods
repnz
rcrb
jne
jmp
lea
into
sub
les
pop
or
pop
inc
stos
jp
aaa
dec
xchg
cmp
push
pop
or
test
sbb
les
les
stos
call
xor
jecxz
mov
mov
sbb
push
adc
rol
sub
test
cwtl
dec
lret
mov
and
iret
inc
in
add
arpl
je
push
mov
cmc
xor
or
in
pop
sub
jg
rcrb
insl
inc
adc
push
lods
mov
ret
cmp
jb
bound
mov
add
or
outsl
adc
inc
testl
push
xchg
push
mov
sub
or
xchg
dec
mov
lahf
jge
xchg
in
sub
mov
negl
pop
in
inc
icebp
push
push
mov
stc
and
pop
nop
call
cmp
or
pop
movsl
xchg
movsb
mov
mov
and
xor
shlb
cs
jg
std
add
std
pop
fwait
push
add
cmp
shlb
or
jl
idivl
push
ja
mov
sbb
ss
mov
mov
and
cmp
daa
push
or
jo
sub
mov
add
add
or
popf
pop
push
pop
sahf
jl
sbb
movsb
jmp
lret
in
loop
add
outsl
dec
dec
mov
jno
xor
push
mov
xor
jbe
into
pop
or
mov
in
and
call
pop
push
mov
jmp
add
or
fbld
xor
aad
xor
sub
pop
jo
cmpsl
mov
arpl
cmp
fcomp
or
loop
sbb
pusha
enter
gs
out
hlt
iret
rcrb
mov
cmpsl
xchg
in
pop
adc
scas
lock
cmp
ja
or
push
cmpsl
mov
sub
xchg
mov
add
mov
xor
add
rcrl
or
addl
xchg
cmpsb
lret
fiadds
test
dec
std
orb
mov
and
xchg
es
push
cmpsl
stc
leave
std
inc
sbb
xchg
push
push
adc
cmp
outsl
add
jno
adc
mov
fsubr
or
aas
jbe
xchg
sub
dec
in
cmp
mov
xor
sub
sbb
mov
add
in
add
or
push
dec
nop
sbb
cmp
std
ljmp
push
nop
push
adc
mov
mov
scas
dec
pushl
cmp
add
je
bound
loopne
inc
loop
clc
out
mov
cmp
je
data16
scas
xchg
pop
shr
les
popf
cli
mov
cli
mov
sub
sarl
and
in
lret
add
inc
add
xor
xor
add
enter
adc
add
add
repnz
adc
sub
mov
notl
ret
jl
xor
mov
jmp
jle
outsl
mov
push
shll
inc
lcall
jle
sti
cli
out
dec
lahf
push
mov
mov
dec
xor
jo
popf
push
push
mov
aas
xor
inc
jb
sub
adcb
or
sbb
pop
mov
mov
das
push
mov
popf
cld
imul
shrl
repnz
mov
sub
sbb
mov
imul
movsb
push
inc
lods
jnp
xor
mov
xor
cmp
dec
aad
and
lret
add
jmp
xchg
sub
test
adc
jbe
lock
arpl
roll
add
sub
adc
xor
leave
ljmp
out
iret
push
and
jmp
xchg
ret
shufps
lret
or
in
testb
andps
mov
outsl
sub
into
pushf
stos
pop
sub
push
fsubs
adc
dec
push
or
pop
mov
movswl
enter
xor
sbb
addl
sbbb
pop
adc
repz
pop
xor
mov
mov
push
push
insl
pop
and
mov
or
and
roll
ret
and
jl
and
lea
pop
mov
bound
push
sbb
testl
push
fcmovne
mov
adc
dec
test
mov
xor
subl
add
mov
pushf
cmpsl
push
push
jmp
loope
add
shll
mov
cmp
or
data16
add
mov
push
es
xchg
jmp
mov
pop
imul
sti
or
xor
lcall
inc
push
push
iret
jge
mov
lret
mov
mov
and
aaa
scas
sbb
in
incb
arpl
mov
mov
jb
call
sub
ror
sbb
push
add
loop
jb
xchg
jl
repnz
idivb
push
xor
ljmp
jb
or
or
or
test
dec
mov
sub
and
push
insb
xchg
das
mov
xor
ljmp
mov
mov
push
jmp
xchg
scas
mov
popa
jns
adcb
mov
and
filds
cli
addr16
mov
mov
ljmp
inc
inc
test
inc
pop
aam
and
push
pop
mov
push
in
pop
adc
outsl
push
fst
mov
inc
push
and
cwtl
push
dec
mov
mov
jmp
or
cmp
sub
add
or
popa
mov
or
push
aaa
adc
pop
out
adc
inc
or
ds
sub
jl
pop
push
push
imul
pop
cmp
clc
ret
mov
push
or
jmp
sahf
push
xchg
inc
loope
jle
cmpsb
push
mov
push
add
pop
adc
and
lock
icebp
push
mov
in
jns
mov
inc
addl
add
sub
add
xchg
xchg
xchg
or
jnp
cmpsb
add
mov
xor
push
sub
mov
xchg
adc
lret
pop
loopne
jne
cmp
sub
ret
push
lds
psrld
imul
jle
jbe
fwait
add
adc
adcb
hlt
sub
and
cmp
insl
and
mov
out
inc
push
dec
add
ficoml
repz
or
jnp
jmp
mov
pop
xchg
and
push
cld
xor
inc
push
out
stos
or
pop
daa
jne
jmp
xlat
sub
sub
je
cltd
or
sub
loope
icebp
aas
popf
mov
addr16
xchg
lds
jge
and
dec
lods
adc
pop
icebp
inc
add
pop
dec
adc
xchg
jle
pop
xchg
repnz
pop
xlat
outsl
xchg
cmp
sbb
jmp
sbb
pop
xchg
mov
aas
add
fists
lock
adc
and
je
xchg
xchg
xchg
pop
std
js
repnz
dec
add
add
push
push
pop
xchg
push
addr16
rcrl
add
outsb
or
and
pop
jg
cmp
jno
inc
push
push
loopne
mov
js
je
imul
pop
dec
inc
enter
add
and
or
out
cld
xlat
adc
push
cmp
lods
jns
mov
cli
std
movsb
stos
mov
cwtl
mov
in
add
mov
inc
push
cmp
add
xchg
pop
mov
xlat
pop
xor
dec
inc
sbb
int
cltd
jo
xor
insb
xor
popf
repz
mov
fcoml
push
fcomps
or
pop
notl
add
loop
add
sbb
icebp
std
inc
je
push
lds
fisttps
int3
jmp
jmp
loopne
movl
push
cmp
xchg
xor
push
sbb
add
adc
mov
or
daa
out
das
popa
pop
mov
xorl
push
add
jo
or
cmp
mov
roll
je
push
mov
loopne
loope
mov
pop
stos
jns
add
push
push
mov
mov
daa
jns
fld
sbb
push
rcrl
adc
jae
stos
jns
inc
sbb
push
push
lds
and
popa
mov
adc
push
lods
inc
cwtl
and
add
mov
jl
adc
push
or
xorb
mov
xor
mov
pop
mov
mov
sub
cwtl
inc
xchg
jns
jmp
or
push
ja
rcrb
sub
pop
cli
xchg
add
pop
sbbb
and
ja
add
outsl
cmp
clc
test
leave
inc
mov
int
dec
mov
xorb
pusha
or
xchg
sbb
pop
sub
dec
push
and
xchg
ret
pop
negb
adc
test
mov
xchg
add
movsb
sbb
stc
mov
dec
jmp
or
inc
out
xchg
outsb
lret
mov
pop
cmp
mov
daa
jecxz
add
inc
dec
das
add
out
push
in
adc
aaa
and
shrl
cmp
mov
add
fldt
test
xchg
mov
push
in
and
push
sub
inc
add
add
cmp
insl
neg
mov
popa
adc
add
jecxz
jns
test
xchg
out
shl
gs
xchg
faddp
ret
filds
test
or
aad
fisubs
dec
out
mov
and
imul
and
andb
and
or
call
or
adc
enter
sbb
dec
call
mov
into
sub
xchg
adc
clc
pop
lahf
gs
add
and
loope
cmp
fldl
and
cmp
and
push
mov
pop
test
mov
pop
and
dec
icebp
movsl
push
aas
xchg
dec
add
push
add
hlt
pop
roll
mov
inc
sub
shl
xor
daa
inc
dec
push
mov
pop
cld
mov
add
sub
lds
mov
out
idivl
xchg
or
lods
or
pop
lahf
and
mov
push
mov
cmp
les
sub
pop
sub
inc
out
shrl
ret
enter
mov
fs
hlt
push
dec
cs
and
pop
enter
jb
pushf
pop
dec
data16
movsl
daa
push
and
or
daa
clc
xor
fsubs
xor
fsubl
push
sbb
pop
divb
pop
cld
sub
cs
fistps
add
aam
xor
mov
gs
mov
jmp
mov
jmp
xor
es
xchg
jp
xchg
int3
push
jmp
outsl
clc
shl
push
inc
or
out
pop
push
cmc
jb
popf
pop
and
sub
jae
jl
fs
out
imul
stc
xchg
lcall
lret
add
jno
shlb
into
sub
or
add
mov
shl
mov
xchg
leave
fidivrs
clc
stos
outsb
lret
jns
aam
es
and
scas
in
fdiv
sbb
jmp
jne
jge
mull
bound
pusha
inc
cmc
adc
adc
sub
les
and
sbbl
not
pop
out
dec
repnz
ret
ja
pusha
jg
cmp
sub
pop
sbb
xor
push
or
jne
lock
popa
popf
mov
cli
add
lret
jecxz
lock
stos
gs
or
dec
scas
push
add
sub
fcompl
pop
jmp
sbb
lock
pop
dec
imul
dec
mov
sub
push
mov
jl
add
jp
insl
mov
or
test
or
stos
and
aad
cli
xchg
pop
and
fidivrl
repz
roll
mov
dec
dec
mov
or
pop
outsl
icebp
jnp
mov
jecxz
mov
mov
jno
dec
clc
xchg
ja
orb
mov
jecxz
data16
loope
add
or
out
or
push
sbb
add
push
sub
dec
call
push
add
cli
push
popf
movsb
popa
and
mov
rcrl
fwait
lret
imul
mov
popa
jle
add
nop
lcall
jb
cld
inc
lods
push
sar
in
jne
push
xor
fldcw
dec
cmp
adcl
lahf
mov
add
and
sbb
jge
popa
not
mov
inc
push
jnp
pop
daa
ljmp
in
lea
aaa
lods
jo
adc
pop
mov
sub
mov
test
lods
pop
add
mov
aad
rcll
sub
mov
jg
push
push
or
and
cmp
outsl
rorl
dec
repz
xchg
and
mov
loopne
iret
roll
loope
jg
in
das
jo
pop
xor
dec
pop
lods
adc
cli
mov
pop
in
popf
or
mov
mov
rcll
xlat
adc
jmp
inc
fdivrl
mov
pcmpgtd
and
pop
push
sbb
sub
or
add
sarb
aas
out
pop
xchg
and
cmp
incl
adc
pop
test
or
pop
out
pop
pcmpgtw
xchg
jecxz
pop
push
ljmp
aas
std
sbb
sbb
mov
flds
dec
mov
cmp
dec
mov
div
ficomps
sbb
icebp
adc
xlat
cli
xor
add
mov
mov
xorl
cs
lcall
cs
adc
adc
xor
pop
aad
jb
jmp
or
popf
inc
stos
push
in
insl
mov
ds
jge
nop
cmpsb
jne
pusha
ja
sub
push
ret
or
sbb
inc
lret
lahf
push
jne
xchg
push
add
add
pop
fldenv
and
inc
xchg
pop
mov
add
pop
pop
adc
pop
sub
xor
repz
das
jb
inc
pop
add
imul
nopl
push
rcll
jle
cmpsl
lret
mov
dec
lea
mov
and
imul
push
ret
enter
ds
fcom
repz
adcl
jmp
jp
pop
mov
dec
mov
imul
mov
push
bound
push
gs
sub
xorb
sbb
mov
jmp
pop
push
pop
mov
jb
fisubrl
dec
jbe
lock
and
nop
popf
mov
subl
jnp
xchg
cmovs
js
in
fidivs
sbb
repnz
fs
popa
cmp
imul
nop
mov
dec
aam
decl
mov
inc
jp
push
jb
aaa
adc
insb
fisttpll
sbb
adc
cmpl
loop
icebp
sub
or
jbe
add
push
pop
imul
popa
data16
mov
adc
or
adc
andb
sbb
dec
push
push
pop
cmp
push
push
and
adc
fdivrp
popa
cmc
xchg
loopne
popf
std
mov
popa
es
imul
cld
fstp
push
imul
add
jns
out
pop
xchg
es
dec
mov
arpl
iret
push
cmpl
loopne
notb
cmp
mov
push
sub
or
add
add
fwait
outsb
cmpsb
pusha
mov
jle
pop
pop
dec
iret
testl
sbb
sub
pop
cmpsl
cmpsb
push
push
adc
repz
xchg
push
xchg
fsubr
jle
es
mov
pop
das
nop
inc
mov
in
test
adc
pop
push
imul
sub
cmp
or
gs
testb
ret
loopne
sbbl
sub
jmp
jae
divl
add
stc
or
jp
insl
call
xor
jecxz
lahf
xchg
arpl
and
fisttps
or
or
add
mov
jg
mov
fcompl
push
lret
mov
hlt
inc
mov
adc
push
add
je
inc
push
xchg
xor
dec
mov
int3
jno
dec
lds
push
push
popa
sub
into
fsts
dec
ret
test
cmp
negb
imul
dec
sub
push
mov
ret
shrl
cmp
mov
ds
subb
pop
loopne
mov
mov
in
xor
pop
insb
cmc
and
pushf
sub
xchg
sub
pop
in
das
push
xchg
push
fidivs
ret
pop
mov
push
xlat
enter
mov
push
jmp
mov
dec
incb
pop
xor
pop
fcomps
jae
pop
push
cmp
dec
repz
add
stos
sbb
cmp
jl
notl
into
cmp
or
in
int
mov
push
mov
rorl
scas
adc
scas
adc
jmp
fs
pop
push
mov
out
scas
xor
jne
cmp
shrb
test
enter
push
adc
insl
mov
jae
sete
stos
repnz
mov
divb
in
pop
sti
add
push
add
pop
jecxz
adc
dec
sarl
adc
mov
jp
imul
aad
or
pop
jl
mov
mov
loop
bound
shll
roll
movb
cmp
xchg
jno
or
sub
fwait
sbb
pop
out
add
cmp
cmp
sub
or
inc
push
jmp
mov
jmp
in
adc
jmp
pop
mov
outsb
pop
sbb
push
roll
iret
xchg
fstpl
gs
and
mov
or
add
clc
mov
ficomps
repz
out
and
jge
jno
jns
cmpsl
jge
mov
jae
bound
adc
adc
bound
sub
push
stc
test
mov
mov
leave
sub
ds
sub
test
pop
stos
repz
inc
dec
lret
jmp
xchg
cmp
jne
mov
cli
sub
pop
and
ror
jmp
out
repnz
inc
xor
push
inc
cmp
mov
push
movsl
jo
popf
push
nop
add
cltd
dec
test
sti
ja
lock
push
add
and
add
rclb
xlat
inc
stc
addr16
aad
dec
dec
xor
mov
xchg
push
pop
jp
mov
adc
std
xor
mov
cs
mov
adc
data16
outsl
shl
sub
dec
fcoms
arpl
jnp
xor
cmp
out
dec
je
push
jmp
loopne
in
inc
loopne
pop
adc
xor
sub
or
adc
daa
mov
xor
rcl
inc
mov
rcrl
cmp
xor
loope
aas
rcrb
inc
jp
rclb
aas
pop
pop
movsb
mov
mov
mov
push
mov
inc
sbb
imul
ljmp
add
scas
ret
pop
jle
jp
aad
out
jae,pt
in
add
fmuls
mov
dec
lahf
and
jb
shrl
jmp
pop
test
pop
shl
push
push
push
mov
loopne,pn
sti
push
mov
pop
jmp
jbe
dec
insb
test
cmp
lret
xor
stos
jae
mov
stos
cmp
out
in
pop
je
xchg
enter
mov
or
adc
dec
inc
pop
xchg
xchg
lods
xchg
dec
add
adc
into
repz
jmp
ds
ljmp
test
dec
out
pop
jmp
sbb
push
stos
lret
push
xchg
out
adc
dec
out
inc
cmp
iret
adc
lock
push
dec
or
cmp
xchg
or
pushf
ret
in
repz
mov
jmp
pop
xor
mov
loop
cwtl
sub
jo
andl
mov
pop
push
or
xor
and
adc
pop
mov
jns
jae
scas
pusha
insl
or
out
dec
out
inc
pop
pop
jae
add
jecxz
and
mov
sahf
inc
push
or
jmp
mov
clc
js
jbe
and
mov
mov
dec
fnsave
xor
push
lds
out
cltd
ret
xchg
inc
sub
push
popf
jno
shr
xor
lea
cli
inc
xchg
mov
jne
jbe
stos
sbb
jmp
gs
xchg
mov
mov
popf
cmc
sub
filds
das
mov
dec
add
push
cmpb
cmp
imul
ja
mov
pop
repnz
jne
not
pop
mov
enter
rorb
ds
aas
call
loopne
pop
add
jmp
pop
out
mov
movb
inc
pusha
xor
and
loop
shrl
int
add
push
mov
jmp
mov
pusha
subb
jbe
movsb
push
sarl
sarl
adc
cmpb
push
out
test
enter
mov
pop
movl
mov
scas
xor
pop
mov
xor
cmp
cld
mov
andl
test
jg
jle
or
cs
jecxz
addl
addr16
andb
not
xchg
cmp
sbb
leave
push
pop
cmp
sbb
or
push
push
pop
jge
dec
rolb
negl
call
pop
loop
js
dec
mov
data16
xchg
xor
jmp
shl
xor
aad
or
test
mov
xchg
push
add
xchg
psrlw
inc
test
sbb
dec
lret
lods
adc
or
xchg
or
bound
xchg
mov
or
dec
xchg
stos
lret
add
push
pop
mov
sub
mov
cmpsb
dec
dec
sti
mov
lock
mov
inc
or
mov
inc
or
and
loope
xchg
or
add
repnz
or
pusha
imul
jge
sahf
and
shll
jns
push
push
mov
adc
sbb
or
addb
sub
and
aas
or
add
mov
clc
arpl
cmp
inc
mov
test
jmp
jecxz
dec
xchg
call
xchg
cmova
out
outsl
shll
sub
sbb
add
sub
add
inc
cmp
and
cltd
push
dec
add
pop
in
xor
jmp
jle
icebp
pop
cmp
movsl
stc
test
push
sub
adc
daa
or
mov
inc
sub
adc
mov
leave
push
inc
bnd
aas
jg
jmp
jecxz
call
cltd
pop
mov
ljmp
cmp
fcomps
lahf
and
push
and
sub
pop
lahf
pop
repz
jne
jl
dec
inc
hlt
pop
pop
and
xor
mov
lea
mov
addl
jbe,pn
aam
pop
push
out
gs
in
std
add
or
push
push
mov
outsl
mov
sub
ja
dec
dec
xchg
jecxz
out
inc
mov
cli
loope
xor
add
dec
imul
insl
cld
dec
jge
ds
dec
test
or
fwait
add
movsb
cli
fdivr
shrl
rcl
xchg
test
outsl
imul
jns
outsb
mov
ret
dec
pop
fcomp
dec
sub
and
dec
loop
pop
push
mov
adc
push
test
add
mov
push
lret
pushf
test
push
in
inc
xchg
int
or
test
orb
inc
lock
lahf
mov
lods
mov
cmpsl
pop
sub
lret
pop
sub
and
push
jmp
sub
jnp
mov
jno
dec
inc
lods
cmp
pop
neg
subb
dec
sbb
lds
das
jg
or
sbb
add
xchg
dec
cltd
mov
and
mov
add
and
jnp
xchg
or
sub
ss
push
mov
cmp
add
es
lds
inc
call
xor
mov
add
cmp
sbbl
pop
daa
jne
pusha
out
movsl
add
sub
mov
inc
push
div
and
jbe
pop
sbb
push
jecxz
add
push
cwtl
lds
cmp
sbb
inc
iret
mov
cmpsl
ficompl
ss
pop
fnsave
add
out
mov
xor
push
cmp
cmp
dec
mov
adc
pop
jno
inc
std
push
sbb
sub
xor
xor
jbe
adc
out
sub
out
fcoms
sub
push
adcl
sub
adc
xchg
pop
popa
fdiv
xchg
addb
mov
bound
xchg
push
mov
pop
pop
test
imul
lods
push
out
xchg
xor
pop
push
outsl
sar
shlb
pop
lcall
or
ja
mov
lret
std
push
pop
xor
sbb
jns
loopne
inc
push
decl
inc
sbb
push
jmp
aam
gs
sub
or
imul
cmp
out
cs
sahf
andl
mov
and
lret
push
pop
fstpl
mov
divl
shll
jecxz
adc
inc
dec
test
pop
xchg
mov
add
adc
pop
inc
pop
pop
jecxz
cmp
adc
sbb
sub
pop
pop
or
mov
pushf
js
dec
scas
xor
lds
cld
outsl
out
jno
hlt
mov
push
push
fiadds
jl
pop
jp
sbb
mov
imul
and
and
and
out
scas
lods
xor
roll
push
test
fiaddl
insb
dec
ljmp
pop
scas
cmp
psubd
adc
or
sarl
jmp
add
je
push
sti
mov
cmp
dec
stos
enter
mov
mov
pushf
lcall
mov
inc
pusha
int3
inc
imul
add
push
jmp
outsb
sub
xchg
xlat
mov
sub
push
clc
add
lretw
mov
pusha
mov
push
mov
adc
icebp
dec
xorl
cmp
mov
pop
inc
sbbb
xor
pop
jmp
dec
push
or
mov
loopne
jg
into
mov
pushf
pop
rorl
push
add
lods
sub
loopne
or
pop
jb
rolb
icebp
shll
in
mov
int
and
and
push
das
sbb
push
test
insl
hlt
popf
dec
pop
mov
add
jns
or
je
lods
loop
aad
jnp
ret
movsl
call
mov
inc
sub
push
pop
add
mov
out
es
xor
inc
inc
pusha
sub
push
into
mov
pop
and
xor
stos
roll
insb
pop
xor
pop
or
mov
movsb
mov
sbb
push
mov
pop
jmp
popf
sub
enter
inc
sbb
xor
adcb
fwait
inc
add
lcall
out
pop
xchg
sbb
out
aaa
aas
and
pop
dec
pop
mov
ds
subb
popa
xor
lahf
orb
test
mov
jns
fwait
dec
push
imull
mov
xchg
dec
addb
out
and
lods
pop
pop
pop
cmp
dec
adc
inc
pop
add
and
insb
jno
popf
pusha
into
movsb
fisttpll
mov
adc
mov
mov
dec
test
das
shlb
mov
push
mov
sbb
pop
sub
mov
mov
jg
in
and
inc
or
pop
push
jg
and
lds
cwtl
repz
or
jmp
pop
pop
push
enter
and
rep
lods
lds
je
scas
stos
inc
push
or
add
inc
dec
and
fsub
pop
pop
lcall
orb
aas
mov
push
fisubs
xchg
bnd
clc
lds
or
cmpsb
mov
fldenv
subb
inc
out
pop
lret
or
divw
push
push
in
insb
mov
and
xor
push
jmp
shl
or
push
mov
mov
and
or
sbb
add
mov
mov
dec
sub
jg
jl
mov
mov
std
not
shr
rcl
outsl
push
lock
adc
mov
cmp
or
add
mov
ret
jle
jno
jg
dec
not
xchg
or
xor
pop
push
adcl
sbb
or
xor
jmp
mov
int3
int
ss
lcall
push
stos
add
mov
mov
xlat
xor
adc
sbb
pushf
cmp
clc
xchg
mov
out
lock
scas
inc
filds
xor
mov
mov
add
nop
rolb
push
cwtl
mov
fiadds
add
sbb
inc
add
or
ljmp
xchg
lret
sub
jnp
stos
je
mov
lret
jg
aas
push
push
lret
in
call
jmp
sbb
pop
or
push
lea
ja
pop
or
fstps
push
mov
sbb
loope
mov
inc
add
js
inc
or
xchg
adc
repz
pushf
pop
jp
das
jmp
out
mov
outsl
jmp
adcb
push
cwtl
xchg
or
aaa
mov
leave
clc
mov
ja
icebp
aad
cvttps2pi
jp
hlt
cmc
inc
mov
or
daa
stc
jge
cmp
shrl
loop
mov
inc
push
js
or
sub
cmpl
les
ret
pop
and
in
add
inc
cmp
std
pusha
add
add
test
sar
pop
push
xor
sub
ret
lret
jecxz
and
cld
and
add
mov
and
out
or
cwtl
and
jne
lods
add
mov
inc
mov
or
jo
sbb
movlps
das
or
call
lods
les
jmp
push
stc
and
dec
or
or
clc
icebp
out
xchg
and
sahf
mov
sbb
cmc
and
inc
imul
je
xchg
add
xor
or
jo
push
out
nop
lcall
mov
aas
lret
ss
and
jbe
add
add
inc
js
inc
movhps
jge
dec
push
rcr
cld
inc
daa
rcll
subb
sub
inc
xchg
push
jo
adc
out
pop
sub
shlb
add
sbb
mov
daa
pushf
data16
or
sbb
inc
jo
pop
aas
xor
sahf
dec
cmp
jmp
mov
and
daa
sub
popa
adc
dec
push
jno
add
or
sbb
xor
cli
xor
xchg
cmp
movsl
mov
pushf
dec
outsb
sti
add
stos
inc
xchg
and
and
add
push
push
aas
rolb
hlt
inc
clc
mov
mov
negl
fst
bound
stos
or
or
mov
mov
or
mov
push
mov
stc
mov
repz
shl
jnp
inc
fnstsw
jge
pop
sub
add
mov
sub
jmp
and
movsb
sbb
sub
adc
loop
pop
fdivrl
das
fucomi
xor
and
jmp
add
push
daa
and
and
push
inc
sub
lods
or
or
mov
xchg
inc
aam
sub
repnz
add
dec
jmp
fnsetpm(287
scas
adc
push
push
jmp
arpl
add
pop
aam
cmpsb
pop
push
sarl
aam
fdivrl
jbe
xlat
mov
adc
lock
push
aas
jp
xor
push
mov
pop
add
icebp
cmpb
mov
sub
or
mov
xchg
mov
aad
pop
or
mov
das
loope
sbb
fnstcw
test
push
push
js
mov
push
dec
cmpsl
mov
xchg
or
repnz
loope
repnz
outsl
adc
or
mov
mov
leave
or
jbe
std
sbb
inc
orl
aas
xor
testb
add
subb
jno
int
mov
jns
ja
jl
fnstenv
in
jne
orb
ss
adc
neg
jmp
xchg
fsubrp
cbtw
cli
push
jecxz
popa
pop
push
call
and
pop
ja
and
aas
jle
pop
inc
sahf
adc
xor
adc
movl
and
push
jmp
push
mov
rcr
jae
pop
sbb
jo
sbbb
dec
pop
adc
push
and
cmpsb
insb
mov
push
fnstsw
dec
jg
aas
rolb
mov
jl
xchg
pop
mov
mov
mov
fiaddl
cmp
push
dec
mov
and
testl
cld
mov
sbb
sub
add
lret
ret
xchg
cwtl
enter
inc
jmp
aas
popf
repnz
jg
push
jge
sub
and
jmp
testl
jno
dec
jl
mov
push
and
loop
cmc
xchg
ja
divb
or
insb
pop
addl
inc
rcrl
cmp
ljmp
in
and
sbb
filds
test
sub
or
push
adc
push
ja
and
faddl
mov
or
pop
sub
or
jno
inc
jg
sub
cli
in
inc
add
adc
mov
jmp
test
sbb
push
pop
inc
jmp
xor
daa
sub
addl
stos
push
dec
scas
lock
out
pop
push
mov
xor
lret
pop
sarb
jo
dec
std
ds
pop
jmp
filds
loop
sub
push
jo
inc
rorb
mov
js
test
adc
dec
les
loopne
or
sub
cli
add
test
pop
mov
sub
fadds
out
rol
push
mov
add
outsb
adcl
xchg
lea
pop
fucomip
insl
xchg
fsub
test
lret
sbb
add
push
cs
inc
push
mov
dec
loopne
sub
sub
rcrb
or
pop
mov
inc
mov
out
mov
stos
lods
ja
jbe
dec
jne
mov
xchg
push
sbb
enter
sbbb
ljmp
test
call
ret
out
or
jne
xchg
dec
pop
add
cmp
add
push
fsubp
aam
jo
push
mov
mov
push
jge
adc
sub
jmp
sub
push
push
cld
mov
mov
mov
sub
cmovg
insl
bnd
adc
mov
pop
adc
push
push
nop
add
adc
sarl
hlt
jns
lock
addl
inc
stos
jns
repnz
and
jmp
or
mov
adc
mov
jmp
in
ds
pop
lods
xchg
xor
inc
pop
sub
add
das
jecxz
ret
push
jge
daa
leave
enter
addr16
jmp
das
notb
add
dec
jecxz
mov
jae
das
inc
jmp
pop
xor
jne
or
or
sub
and
inc
or
add
shll
push
popf
sub
pop
jge
push
add
mov
mov
cld
push
dec
xchg
aam
pop
ret
or
dec
lret
aas
daa
or
mov
into
mov
mov
xor
ljmp
dec
repnz
leave
push
roll
imul
stos
gs
cmpb
mov
das
pop
fbstp
cmc
or
push
out
xchg
pop
mov
fsubrp
les
cld
shlb
add
and
cmc
fldt
jg
mov
hlt
push
xchg
cwtl
mov
and
icebp
jg
imul
push
std
xor
mov
pop
jne
rolb
dec
mov
xchg
push
in
and
hlt
add
add
les
cmp
inc
orb
insl
jg
mov
inc
test
inc
cmpsb
out
dec
in
xchg
jge
xor
popf
push
mov
sub
pop
loopne
or
ss
sbb
mov
dec
test
push
xor
pop
or
jg
out
aas
pusha
push
push
xor
push
std
je
add
push
push
jns
xchg
cmc
mov
jmp
fmulp
fisubl
les
and
mov
fs
gs
push
int
push
outsl
xor
repnz
adc
push
les
je
xor
push
pop
das
mul
fsubp
les
pop
ja
out
mov
cld
push
out
add
mov
push
mov
loopne
push
mov
add
pop
mov
cld
adc
mov
jo
push
pop
or
pop
jb
ds
add
jno
xor
and
mov
xor
push
push
pop
shll
xchg
loop
pop
pop
unpcklps
loope
fistps
hlt
push
add
pop
sub
sub
js
pop
pop
xor
je
and
pop
add
repnz
xor
lahf
adc
lret
inc
scas
mov
mov
jge
xchg
add
cmp
inc
xchg
sub
lahf
cli
in
popf
xlat
add
jmp
das
dec
push
aaa
lods
lcall
fcoms
gs
int
frstor
daa
cmc
pop
xchg
add
dec
mov
push
aam
ds
fisttpl
mov
mov
dec
les
add
ljmp
dec
sub
pop
imul
mov
inc
rclb
sub
pop
sbb
push
mov
inc
and
shll
out
pop
fsubs
and
mov
xor
ficomps
or
aam
add
loop
movsl
adc
lods
out
stos
push
cmp
mov
mov
cwtl
scas
xor
daa
fdivs
rolb
test
loopne
repnz
fiadds
xchg
mov
jmp
lock
or
cmp
shlb
adc
addb
xchg
lock
add
jmp
push
mov
and
mov
and
aas
repnz
xchg
cld
lahf
sti
ds
dec
xchg
xor
rorl
test
dec
insb
jae
mov
mov
xchg
or
btc
push
sub
jmp
sub
inc
out
in
mov
jl
jle
xor
test
or
mov
xor
xor
mov
cli
inc
jle
jmp
ffreep
iret
test
loope
cmp
push
adc
and
jge
add
testl
cmp
push
dec
std
push
mov
clc
sub
pop
sti
jo
jle
sub
stos
mov
inc
insl
jl
cltd
fmul
cmp
push
lea
dec
call
lods
pop
int3
scas
sub
jno
ds
inc
cmp
cli
ss
push
cld
das
sar
cmp
scas
hlt
decb
push
mov
lret
subl
fisubl
lods
scas
lea
filds
outsl
adc
mov
add
add
jp
jbe
push
adc
adc
lret
stc
cmpl
sar
repnz
stos
sub
or
jbe
add
cmp
in
pop
mov
test
subl
xchg
xor
push
clc
js
stos
or
aaa
xor
push
adc
cmp
cmc
pop
sub
adc
scas
int3
fistpl
sbb
mov
std
out
loop
ret
out
out
or
jg
divb
shl
shlb
cwtl
push
pop
push
mov
test
jnp
testb
jge
push
movsb
cs
mov
sbb
rcr
adc
mov
movsl
sub
and
icebp
adc
add
test
sub
ljmp
ret
and
xchg
mov
das
pop
jp
or
and
mov
jmp
or
mov
bnd
mov
outsb
jmp
adcl
mov
jae
xor
or
inc
sbb
xchg
or
adc
mov
lds
pop
dec
in
dec
push
sub
pop
push
mov
in
push
cwtl
or
adc
lods
cltd
jbe
dec
mov
add
mov
mov
call
cs
jbe
out
into
push
adc
add
mov
shll
ljmp
in
sbb
add
xchg
pusha
sti
jp
les
push
add
push
add
jns
add
mov
inc
fsubrl
and
std
mov
pop
cmp
adcb
pop
adc
sbb
or
or
imul
add
psadbw
cmp
add
xchg
fbstp
scas
sub
jg
xchg
jmp
and
add
pop
mov
jno
imul
push
das
test
cwtl
dec
jb
or
pop
xchg
bound
sti
pop
jmp
add
mov
cmp
cmp
insb
data16
insb
add
mov
ja
fcmovbe
in
arpl
call
jmp
mov
jne
push
add
sbb
sub
or
in
divb
mov
dec
lods
inc
add
mov
dec
pop
rcr
fidivrl
sub
push
inc
std
inc
jp
pop
jbe,pt
push
aam
pop
cmpsb
aas
das
in
aaa
pop
lcall
mov
int3
or
or
int
test
xor
scas
jmp
popa
dec
adc
leave
dec
lock
cmp
sub
lods
add
fsubrs
sbb
mov
pop
adc
mov
and
xor
xchg
scas
add
xorb
hlt
pop
add
js
xchg
pop
jmp
orl
cmp
cs
sbb
push
adc
inc
push
or
ja
sbb
push
jge
pop
pop
mov
into
mov
add
orb
mov
add
lods
in
add
pop
xchg
loop
mov
push
push
lret
pop
mov
dec
xchg
mov
add
cmp
sub
cld
adc
or
xchg
jmp
loop
lods
sub
mov
add
int3
push
sub
testb
pushf
sub
dec
shrb
xchg
fimull
stc
inc
ret
fdivrl
nop
sub
push
mov
jl
daa
movsb
mov
sub
nop
cs
add
push
pop
lahf
jb
xchg
adcb
adc
add
into
push
pop
test
call
int
cmp
dec
jo
mov
stc
jmp
cmpl
push
push
push
xchg
aas
daa
pusha
xlat
daa
inc
sub
dec
lret
std
out
sahf
pop
mov
mov
cmpb
fiaddl
cmp
jo
das
inc
fs
call
not
mov
sti
cs
cmpl
add
out
popf
mov
out
loopne
in
and
ja
inc
and
stc
mov
nop
ret
leave
pop
incb
nop
jmp
outsb
enter
cmc
test
mov
nop
xor
mov
push
add
data16
stos
addb
sbbb
negb
pop
ljmp
pop
sub
mov
adc
inc
das
jns
push
and
loopne
mov
mov
jmp
xor
push
inc
mov
jbe
dec
cld
inc
push
xchg
not
or
lahf
push
mov
out
jmp
push
push
leave
out
add
sti
xor
or
or
pop
jnp
stos
lahf
dec
mov
inc
mov
daa
jg
ja
jmp
push
push
push
xor
mov
ret
insl
fnstenv
xchg
pop
les
jbe,pt
and
push
sbb
mov
mov
push
nop
clc
les
lahf
lret
adc
jecxz
xchg
stos
sarb
mov
inc
jmp
imul
pop
fstps
loop
lds
cwtl
mov
lahf
bound
imul
inc
lret
jo
mov
xchg
loop
sub
cltd
mov
pop
clc
push
cli
hlt
and
ret
test
jge
dec
or
xor
dec
cmp
xchg
push
xchg
lcall
std
insl
scas
or
sahf
insb
sbb
shl
lock
cwtl
repz
lret
xor
adc
mov
shl
jo
adc
or
xor
jne
mov
sbb
push
inc
call
xor
ds
jmp
mov
cmp
add
sub
mov
push
push
fstps
inc
sub
in
call
inc
adc
inc
mov
add
inc
cmpsl
xor
xchg
loopne
aam
loop
inc
add
xchg
movsb
add
push
fstpl
push
test
sub
push
push
and
aaa
sub
ret
mov
add
mov
cmp
pop
mov
dec
adc
and
xchg
popa
xchg
stc
and
rcrl
add
sub
icebp
js
popl
xchg
adc
inc
push
ja
addb
jmp
div
aam
jmp
mov
mov
mov
and
lods
push
mov
imul
or
jmp
bound
cli
sub
fincstp
sarb
pushf
es
js
lahf
pop
cltd
sar
push
dec
jg
cltd
pop
adc
hlt
sub
adc
shrl
popf
aad
scas
jle
or
jmp
pop
add
fwait
or
std
addr16
add
scas
dec
imul
inc
ljmp
push
je
fldl
sub
mov
popf
add
jmp
pop
dec
mov
mov
or
jmp
pop
adc
dec
int
movsl
pop
or
popf
lds
mov
repz
push
xchg
push
xchg
inc
data16
movsl
and
gs
rorl
xchg
nop
mov
sub
adc
pop
add
scas
subb
orl
and
loope
cli
mov
adc
xchg
and
mov
mov
shll
jmp
out
clc
push
pusha
jo
sbb
xchg
push
or
jns
xchg
push
pop
add
jecxz
bound
stc
add
aam
scas
and
jp
push
aaa
imulb
stos
and
add
or
or
data16
xchg
pop
fwait
mov
test
fwait
push
repnz
pop
rorl
mov
andb
add
mov
push
xchg
sub
cmp
ret
addr16
dec
inc
ljmp
bound
xchg
fstps
xor
push
add
mov
add
fs
dec
sbb
dec
lar
add
movsb
add
mov
pushf
xchg
push
mov
xor
add
pop
mov
mov
pushf
movsl
in
push
scas
negl
sbb
dec
inc
ret
js
add
rol
xchg
fcoms
sub
lret
sub
aas
sbb
jo
mov
sub
loope
jno
mov
cmpsb
xchg
repz
stos
icebp
popa
cmp
aam
mov
fdiv
dec
pop
and
sub
xor
sub
xor
or
add
lock
dec
orb
dec
pop
das
push
add
jb
jl
nop
pop
inc
sub
push
mov
dec
jg
sbb
jecxz
jp
in
ret
push
leave
cli
shrb
or
mov
jg
cmpsb
lods
std
sbb
pop
lahf
push
arpl
adc
icebp
iret
aas
pop
int3
and
mov
and
jmp
ret
cmp
push
mov
mov
mull
sub
sbb
pop
inc
js
xor
stc
adc
roll
fcompl
jg
cmp
adc
add
sbb
imul
push
mov
imul
movsb
bound
int3
scas
divl
imul
push
push
imul
movsb
scas
mov
jbe
add
cmp
outsl
or
sbb
hlt
pop
adc
les
xchg
pop
fstl
int3
jmp
cmp
push
mov
dec
dec
mov
scas
addr16
dec
sub
push
cli
dec
jne
adc
xchg
inc
iret
loop
shrl
pop
pop
fnsave
cli
inc
fcompl
leave
mov
or
shrb
je
cmp
mov
sub
loope
stos
ret
stos
lcallw
push
add
jae
test
or
push
das
lcall
rclb
fcoms
mov
add
rcl
fisubs
adcl
repnz
int3
xorb
or
dec
enter
js
decl
out
bound
sti
sbb
mov
jg
adcb
jle
mov
mov
jge
ljmp
mov
pop
pop
ror
pop
lahf
mov
xchg
loope
aad
cmc
test
ljmp
in
dec
adc
jmp
inc
mov
pushf
mov
int3
adc
in
xchg
inc
mov
shlb
adc
ds
vprotd
lret
inc
rcll
xor
jmp
jb
jbe
pop
lret
mov
sub
pop
mov
fdivs
add
inc
mov
mov
push
icebp
imul
sub
push
addb
pop
stos
imul
push
lcall
mov
pop
sub
cli
ljmp
sub
ja
push
lods
dec
push
cli
and
or
sbb
add
sbb
adc
repz
int3
push
mov
inc
lret
loop
outsl
test
add
insl
adc
pop
loopne
dec
mov
fiadds
sub
mov
xor
or
pop
mov
xchg
or
lret
icebp
jmp
cmp
mov
xorl
jb
lock
dec
xchg
into
push
test
rcrl
test
cmp
ljmp
xchg
mov
les
test
sub
jne
xchg
xorb
leave
push
inc
push
mov
sbb
mov
adc
or
mov
sar
aaa
pop
adc
push
inc
jo
push
jmp
out
or
loopne
sub
pop
add
sub
stc
inc
pop
jmp
lods
cmc
mov
or
push
push
mov
add
push
xchg
jmp
imul
adc
add
into
lock
decb
and
lcall
mov
mov
sbb
pop
xchg
push
mov
pop
lss
fimull
dec
inc
sub
in
cld
das
popf
stc
push
sbb
int
jbe
gs
pushf
sbb
aaa
add
cli
mov
dec
adc
out
mov
int
inc
lahf
push
and
inc
mov
push
push
push
jp
adc
es
jmp
push
mov
lock
mov
dec
cli
popa
lret
jp
jb
sahf
pop
stos
add
aad
cltd
inc
les
aaa
mov
sbb
mov
xchg
lcall
lcall
lret
movl
cmp
or
aas
mov
push
fsubs
sub
clc
leave
dec
lods
ss
push
ficoml
or
pushf
jecxz
sbb
les
xor
add
imul
mov
inc
mov
adcl
out
ds
push
mov
jmp
mov
aas
pop
xchg
aam
dec
push
roll
stc
xor
lret
pop
or
pop
and
nop
nop
cmpsl
orb
lret
scas
cmp
or
add
and
pop
push
leave
ret
add
sbb
adc
jo
add
xchg
adc
inc
xor
inc
adc
push
cs
sbb
addl
cmp
pop
jmp
les
and
pop
ret
pop
ret
push
or
push
arpl
shl
in
scas
adc
jmp
cmp
enter
jae
push
inc
idivl
aam
in
shl
mov
inc
cmpsb
ja
mov
jnp
sahf
jns
push
cmp
daa
das
in
add
push
loope
into
and
xor
lret
adc
ficompl
add
mov
movl
mov
jmp
push
sbb
xor
retw
adc
push
dec
dec
cmpb
sbb
ficoms
push
sub
scas
test
mov
in
loopne
pop
push
mov
and
fsts
jb
jns
pop
push
jmp
mov
sti
aam
jb
sub
xchg
cmpsl
mov
jle
jo
sbb
xor
in
sub
sti
add
rclb
iret
insl
or
inc
mov
gs
daa
mov
scas
in
jmp
notb
push
push
push
cli
push
jne
das
push
pop
jmp
call
jp
xor
push
rdtsc
adc
adc
mov
push
push
add
popf
jb
orb
inc
pop
dec
sub
ljmp
mov
xchg
push
mul
sub
or
ljmp
cmp
inc
std
andl
inc
fsub
fldl
sbb
jl
cmp
add
ljmp
jnp
loop
lcall
popf
sub
sub
je
jmp
rcr
pusha
adc
push
lret
and
mov
and
into
dec
push
adc
cs
flds
bound
mov
sbb
jp
shlb
and
or
inc
sub
push
mov
ja
pusha
ja
jg
iret
adcb
hlt
mov
inc
out
dec
orl
push
repz
push
rolb
bound
push
add
negb
sbb
cmp
popl
lock
pop
pusha
xchg
mov
test
sbb
aaa
aam
pop
mov
roll
jmp
rorb
add
insl
repnz
scas
adc
dec
cli
and
pop
sbb
jb
inc
sub
adc
cs
add
lahf
bound
out
test
insl
cwtl
and
cmp
push
jo
mov
leave
mov
cwtl
enter
pop
xor
add
xorl
fsub
and
rcrl
mov
push
in
jg
fmull
cmp
fiaddl
add
dec
sub
add
sbb
scas
inc
inc
into
pmaddwd
pop
sub
jnp
test
push
add
cmc
inc
loopne
lods
jl
sbb
std
add
fnsave
push
xchg
shrb
sbb
dec
insl
push
pop
jecxz
inc
jge
sar
repz
jle
insb
mov
cld
jae
scas
out
sarb
sbb
popa
pushl
cmp
mov
fnstsw
aam
pop
mov
dec
out
sub
pusha
stc
out
mov
mov
gs
jle
xchg
out
mov
out
or
daa
pusha
push
lods
add
mov
xchg
pop
jb
fisubrs
je
insl
clc
mov
pop
rep
lds
test
in
inc
enter
dec
xchg
neg
rorb
stc
push
cmc
dec
adc
es
jmp
xchg
bound
push
xchg
cmp
push
push
mov
call
sti
arpl
push
aaa
cmp
inc
adc
repz
pusha
pop
cmp
loop
add
aaa
orb
outsl
jmp
les
call
inc
or
enter
xchg
shll
shrb
fisttpll
mov
mov
mov
dec
add
xchg
shl
loopne
push
mov
jmp
movsl
call
sub
repnz
and
and
xchg
ret
popf
push
loop
pop
or
mov
cld
mov
mov
push
add
into
add
and
sti
bound
fucomp
aaa
or
js
call
add
addr16
pop
xor
daa
and
xor
mov
fidivrl
jg
mov
jns
imul
cmpsb
imul
jno
add
popf
rol
loopne
and
adc
xor
pusha
add
mov
inc
int
pop
jl
hlt
shl
or
call
pusha
insl
das
adc
inc
es
fwait
addr16
call
loop
les
or
ja
dec
std
lods
int3
dec
call
test
mov
bound
pushf
sahf
in
inc
repz
xor
xlat
aas
aam
and
test
aas
inc
mov
in
imull
inc
das
push
xchg
popa
jmp
aad
scas
xchg
mov
xchg
mov
xchg
push
stos
stos
orb
pop
adc
ret
mov
test
add
js
adcb
pop
lret
stc
sub
cmp
pop
cltd
xchg
xchg
jmp
push
mov
andb
xor
in
xchg
in
jno
in
push
call
dec
daa
pop
stc
stos
fs
test
jle
mov
sarb
lahf
inc
xchg
push
mov
push
scas
push
imul
movsb
sbb
push
ret
jmp
movsl
idivl
mov
inc
pusha
dec
push
mov
lret
outsl
popf
jl
shlb
and
or
pop
insl
out
or
mov
bound
aam
adc
add
popf
ja
push
mov
insl
push
push
cmpl
cld
es
jo
pusha
cmp
xor
mov
cmpsb
enter
ja
ss
clc
or
pop
pop
in
sub
mov
or
cmp
jae
xchg
mov
mov
inc
cli
and
dec
pop
aaa
add
loop
pop
xor
call
pop
imul
push
lret
fsts
pop
push
shlb
roll
dec
int3
lock
stos
pop
push
das
out
addl
in
pop
out
mov
push
sbb
pop
push
jne
mov
mov
test
ret
das
push
mov
cmp
lret
xchg
fstps
aas
shrb
in
push
cs
mov
or
inc
or
cmpb
inc
outsb
std
add
rol
call
hlt
push
movsb
addl
ljmp
mov
dec
jb
jnp
mov
adc
mov
test
dec
into
push
cs
mov
mov
push
sub
jmp
data16
push
or
mov
clc
or
aaa
imul
cmc
pop
in
and
xchg
mov
leave
jmp
rclb
adc
xor
cld
or
bound
push
testl
jg
mov
push
add
or
xor
add
test
lcall
lock
pop
sbb
push
sarl
shr
sub
cmpl
or
outsb
out
lods
mov
call
test
mov
mov
test
xor
sbb
cwtl
jle
int3
sbb
cwtl
push
and
fisttps
rcrl
sub
shrb
push
cmp
or
dec
or
mov
scas
inc
mov
rorb
xor
pop
pop
push
inc
ds
int
enter
sbb
pmaxsw
add
shr
push
imul
sub
mov
adc
fisttpll
cld
mov
call
fadds
xor
jp
stos
mov
xchg
push
cltd
mov
bound
xor
lret
adcb
stc
pop
mov
lret
popf
bound
jl
test
mov
cmp
or
xchg
xor
and
out
xchg
dec
loop
xchg
mov
mov
arpl
in
in
ljmp
jno
add
and
rorl
scas
test
scas
lods
xchg
sub
scas
call
sub
cmp
pushf
mov
xchg
aad
cmp
rcl
inc
out
jecxz
orl
mov
mov
pop
rcll
bound
jne
mov
aam
add
fsubrp
pop
jmp
ret
orl
and
rolb
ds
add
pop
fldenv
lock
xor
outsl
fmull
gs
data16
add
cs
js
push
sbb
test
cmp
icebp
mov
xchg
int3
bound
push
jns
popf
nop
lahf
test
addb
outsb
cld
xchg
push
dec
es
jmp
sbb
mov
fnsave
pop
dec
push
call
ret
push
jbe
ficoml
stos
and
decb
mov
int3
xor
dec
xlat
in
xchg
adc
mov
pushl
outsl
lods
cmp
scas
and
push
push
adc
enter
mov
xchg
and
adc
je
dec
cmp
mov
cmp
jne
in
leave
xchg
dec
dec
xchg
sbb
cmp
xchg
dec
and
cmpsb
and
xchg
outsb
push
pop
aaa
mov
or
sbb
dec
repz
mov
testl
mov
mov
xchg
les
sub
sub
scas
push
sub
sub
mov
cmp
cs
mov
ficoms
imul
incb
lret
nop
push
xchg
push
or
in
mov
pop
jb
add
inc
sub
sub
jnp
lods
lock
cmp
cmp
mov
xchg
mov
mov
mov
shlb
mov
lock
outsl
pop
jl
adcb
sub
push
es
jmp
cmc
pop
dec
cmp
sub
leave
ret
movsb
xchg
je
push
mov
pushf
js
pop
andb
ret
call
out
mov
fstpl
out
or
add
adc
sub
add
jmp
out
pop
dec
or
and
sub
out
mov
inc
adc
add
mov
sub
xlat
imul
inc
stos
incb
dec
jnp
orb
and
in
lret
mov
cli
sub
xor
enter
sbb
sub
stos
sub
jmp
sarb
mov
adc
lret
add
fstps
lods
push
cmp
add
rcll
test
jns
aam
xchg
xor
xchg
or
add
roll
sbbl
adc
xchg
sub
fildll
mov
inc
test
adc
add
arpl
inc
inc
cmp
scas
or
or
and
bound
adc
repz
add
add
sbb
cmp
pop
sbb
lahf
jg
and
xchg
add
add
in
add
push
xor
add
inc
add
cwtl
stc
xor
adc
sbb
cs
ret
sbb
mov
dec
adc
dec
and
cwtl
imul
aad
sub
adcb
adc
addl
bound
adc
jb
cmp
sbbb
orb
fmull
icebp
jno
and
or
inc
mov
les
xor
lcall
push
xorb
adc
cmp
push
or
pop
and
out
or
mov
divb
enter
leave
push
sub
or
cmpsl
add
hlt
push
push
inc
pusha
arpl
jmp
add
idivb
lahf
or
jno
leave
lahf
mov
popf
aas
sbb
mov
adc
add
js
add
dec
inc
fmuls
mov
insb
pop
mov
mov
leave
cld
adc
mov
jno
int3
or
sarl
cmp
dec
add
jle
out
insb
or
adc
imul
mov
lock
cs
mov
adc
adc
or
outsl
or
or
push
inc
pop
push
sti
andb
adc
pop
sbb
ret
pushf
or
bound
or
lods
call
aam
or
jmp
mov
adc
aam
adc
xor
insb
add
sub
adc
add
mov
push
sub
xchg
xor
into
hlt
and
inc
and
jae
nop
pop
sbb
les
xchg
add
mov
mov
cli
dec
sbb
cmpsb
mov
pop
push
xchg
rorl
loopne
call
imul
mov
push
mov
cli
lret
inc
dec
mov
imul
jbe
imul
add
add
jmp
dec
orb
pop
mov
xchg
dec
sahf
ret
xchg
pop
mov
pop
pop
lret
repz
push
xor
pusha
push
pop
or
and
mov
daa
pop
add
ret
cmp
pop
ja
cmp
mov
jecxz
or
fisttpl
add
ret
mov
sub
or
mov
or
sbb
and
push
mov
sarb
and
mov
pop
test
mov
jp
dec
popf
lret
sub
mov
inc
sub
repz
ljmp
popa
scas
clc
push
push
sbb
mov
xlat
scas
adc
sub
lret
jl
dec
shr
cmp
pop
scas
jge
sub
add
mov
push
jge
add
sbbb
insb
jmp
or
aaa
pop
jecxz
dec
sub
push
fisubs
cmp
xchg
xor
xlat
or
ljmp
adc
jp
mov
pop
push
pusha
lcall
ret
mov
popf
push
add
or
sbb
mov
xor
push
fwait
addb
xchg
ja
push
add
push
add
scas
mov
or
sub
mov
mov
ds
jp
fisttpll
sub
repnz
adc
mov
les
cmp
jmp
stc
pop
ret
mov
jmp
cs
pop
push
cmc
lcall
cmp
inc
gs
add
loop
push
add
add
sub
out
or
jne
inc
adc
mov
inc
mov
int
xchg
dec
test
push
sub
mov
cmp
dec
sub
or
rorb
jnp
xor
fdivl
xchg
xor
adcl
sub
jle
cld
jne
mov
stos
add
rcll
into
cld
xlat
xchg
add
xor
je
ljmp
push
fs
jnp
fsubrs
jo
das
or
add
stos
ds
dec
mov
pop
mov
or
and
fisttpll
mov
ljmp
shld
cld
pop
pop
inc
and
xchg
lods
xchg
aad
adc
stc
lahf
push
ljmp
add
mov
ret
adcb
call
les
not
incb
ret
jp
fildl
fsubrp
sub
pop
data16
mov
push
repnz
gs
nop
and
or
jmp
loopne
or
pop
push
xchg
add
jne
js
out
mov
mov
push
inc
ror
repnz
cs
out
test
pop
jmp
jno
cmpsl
push
fcompl
aas
push
rclb
xchg
mov
in
add
pusha
inc
push
xchg
add
call
stos
xor
push
add
xorl
add
adc
fsubrs
nop
imul
sahf
mov
dec
mov
sub
stc
rcrb
das
or
sbb
cmpl
jmp
and
pop
loope
jmp
mov
std
leave
cmc
sbb
andb
add
mov
add
lret
jnp
adc
inc
mov
pop
cmp
mov
fs
add
stos
xchg
inc
icebp
and
int
push
xor
push
push
mov
push
roll
loopne
into
mov
push
add
repnz
inc
fistpl
in
pop
inc
addr16
sub
decb
stos
fdivrs
shrl
push
push
sub
mov
adc
arpl
xlat
decb
mov
jmp
sahf
lret
sbb
and
sub
xor
fmuls
cmpsb
rorl
pop
push
jae
sbbl
mov
mov
pusha
std
and
add
jnp
push
xor
ss
sub
xor
movsb
xchg
dec
or
sbbl
test
jle
call
xor
mov
cmp
repz
mov
push
in
pushf
jle
xchg
xchg
stc
cmp
mov
adc
mov
pop
sbb
test
add
xor
imul
scas
mov
push
jmp
lea
adc
add
push
xchg
movsl
pop
jmp
scas
lret
push
add
std
aas
jmp
lret
dec
sub
push
pop
and
sub
pusha
ret
jmp
hlt
popa
jmp
push
sbb
and
test
mov
adc
daa
cwtl
or
stc
ds
sbb
sbb
mov
xor
loopne
fs
jmp
xchg
sbb
sbb
bound
je
xchg
pop
xchg
loopne
jmp
push
clc
jo
mov
jecxz
cmp
jecxz
in
push
icebp
mov
incl
jmp
jmp
mov
jne
not
push
dec
xor
jge
push
cwtl
rclb
scas
sbb
push
fisubrl
pmaddwd
loop
dec
inc
aad
adc
xor
push
fcoms
xor
xchg
push
cmp
push
mov
dec
xchg
or
inc
test
push
repz
ret
and
clc
iret
cs
dec
iret
mov
mov
add
imul
sbb
sub
or
adc
sbb
in
pop
inc
mov
push
mov
add
push
pmulhuw
sbb
dec
ret
lock
adc
xchg
cmp
call
and
mov
jo
add
push
mov
jp
ret
dec
pushf
stc
inc
cmp
popa
mov
cs
sub
push
nop
lcall
pop
pop
inc
sbb
add
adc
pop
shl
pop
leave
insl
imul
jmp
mov
push
mov
pushf
mov
push
pop
int3
mov
or
sub
mov
push
aaa
popa
push
pop
std
lds
das
std
mov
pop
sub
pop
jmp
imulb
mov
sub
xchg
js
pop
jns
cmp
xchg
cltd
cmp
pop
push
add
daa
or
inc
fidivs
pop
push
cmp
imul
mov
scas
add
dec
push
dec
sbb
jle
mov
lcall
lret
lds
pop
add
mov
in
push
xor
pop
loopne
popf
cmc
xor
in
jl
dec
insb
mov
lret
stc
sbb
aad
jp
int3
xchg
and
xor
xchg
jo
sbb
pop
sub
sub
loopne
je
mov
push
inc
fdivrp
push
je,pn
mov
jmp
pushl
test
sub
in
pop
enter
add
aaa
and
and
dec
push
clc
das
and
adc
aas
adc
adc
pop
mov
jno
js
arpl
in
stc
outsl
mov
repnz
pop
scas
xor
jns
sub
or
xor
pop
jg
les
adc
fstl
xchg
cmp
js
call
add
ja
das
sbb
add
add
inc
jge
inc
incb
xor
mov
push
cmp
mov
cmpb
adc
pop
mov
lret
jbe
loop
push
insl
das
loopne
mov
das
mov
je
daa
clc
sub
mov
sub
ret
addr16
sti
out
or
rclb
aaa
jl
mov
pusha
hlt
std
adc
push
mov
xchg
mov
pop
pop
xchg
divb
shrl
out
pop
jne
mov
mov
loopne
pop
push
test
mov
lea
clc
test
in
sub
pop
jmp
pop
test
mov
jo
or
add
sub
fildl
or
xchg
negw
adc
add
sub
movsl
shrl
xchg
ret
fiadds
push
insl
xchg
sbb
pop
ret
shl
adc
jno
rclb
mov
pop
ljmp
stc
orb
xchg
movsl
fcmovnu
pop
lds
pop
cmp
dec
test
rcrb
nop
adc
scas
cmp
call
inc
mov
inc
push
dec
pop
mov
push
jb
idivb
mov
cmp
or
sbb
mov
add
imul
orb
jae
dec
fnstsw
mov
jmp
cmpsb
push
dec
dec
scas
fmuls
jo
xor
ret
or
push
push
mov
push
jp
add
and
pop
push
push
xor
sti
cld
xchg
mov
das
call
add
pop
je
push
adc
stc
push
nop
js
push
mov
jmp
div
clc
pop
push
mov
mov
mov
ds
sahf
add
or
or
or
and
je
pop
mov
or
pop
ljmp
cmp
int
stc
add
loope
sub
adc
or
ds
sub
rcrl
jle
fsubr
adc
mov
es
or
popf
sbb
aam
pop
pop
add
lods
xor
and
cwtl
shr
and
mov
lock
lds
arpl
pushl
mov
xor
pop
cmpsl
test
sbb
ror
mov
or
jg
mov
or
adc
lret
movsl
imul
xor
or
push
mov
inc
xor
sbb
jae
test
lock
test
mov
push
jg
call
clc
jmp
xor
aaa
mov
insb
xchg
out
stos
mov
not
push
sbb
movsb
add
or
mov
cmovs
int3
adc
xor
bound
sbb
idiv
lret
push
jmp
mov
xchg
jnp
push
test
insb
jmp
cwtl
or
or
cltd
dec
aam
cmc
push
test
addl
jbe
dec
xchg
test
shll
sub
popa
lea
adcl
xchg
add
xchg
imul
data16
sub
rcrl
mov
or
adc
push
out
pushf
addr16
add
repz
dec
jns
jno
cmp
xchg
adc
fsubs
add
or
lock
adc
xorb
fcom
loopne
enter
cmp
sbb
out
push
mov
dec
mov
je
sub
inc
movsl
jg
inc
or
pop
inc
sbb
jbe
popa
call
sub
lds
jp
fisttpll
xchg
push
pop
pop
adc
inc
mov
push
fiaddl
lock
leave
dec
sbb
push
daa
test
scas
mov
ret
or
add
ljmp
dec
lock
negl
hlt
out
movsb
xlat
daa
pop
and
shlb
xor
xchg
movsl
or
gs
icebp
cmp
pop
push
add
pop
or
nop
test
bound
iret
push
ret
xor
popa
call
mov
push
dec
add
sar
xor
test
movb
push
mov
mov
add
xor
fdivrs
pop
adc
mov
dec
jmp
mov
shl
or
push
pop
mov
not
jmp
into
pop
sub
mov
out
or
dec
addl
adc
fwait
push
xchg
pop
call
sbb
stc
incb
and
mov
push
and
xor
push
push
scas
inc
pop
add
lods
insl
shrl
sub
sbb
mov
inc
sub
lret
jp
lcall
mov
aad
xchg
push
pusha
inc
icebp
in
jge
jbe
nop
cmpsl
push
and
push
mov
loope
jg
cmpb
mov
inc
popa
pop
rorb
mov
jmp
pop
fisttps
pusha
jmp
cwtl
mov
cmp
push
push
or
cmp
push
fnsave
repz
xor
jmp
push
dec
mov
and
xor
std
popa
js
mov
cwtl
ret
in
add
push
sbb
cmp
bnd
jmp
clc
mov
push
cmc
push
add
cmc
jecxz
outsb
mov
fdivrs
lock
cmp
ficoml
inc
pusha
jecxz
and
mov
push
push
mov
scas
add
pshufw
jmp
push
dec
mov
sub
sahf
fbld
mov
sbb
mov
rol
fisubs
nop
addr16
std
pop
lds
aam
inc
test
leave
mov
xlat
das
cmp
movsb
les
mov
scas
xor
push
ljmp
jg
out
jmp
out
cltd
xor
je
addl
jmp
lcall
add
ja
pop
jb
icebp
lahf
mov
push
std
cmp
jbe
imul
adc
push
pop
and
push
jae
ds
loop
pop
mov
add
add
push
pusha
cmp
fidivrl
dec
movsl
xor
sbb
add
push
adc
add
sub
xchg
jmp
cmc
or
outsl
sbb
decl
bound
add
add
jmp
pop
imulb
xchg
mov
jo
js
xor
mov
xchg
test
pop
and
adc
mov
sub
or
push
or
enter
jno
icebp
lret
mov
mov
sub
inc
add
jo
in
sub
mov
pusha
push
jmp
add
imul
in
mov
or
or
jmp
sub
or
add
je
jmp
out
mov
dec
xor
dec
nop
or
and
pusha
jbe
sbb
movsl
orl
adc
xor
adc
add
gs
or
orb
pop
pop
jo
cld
adc
jle
pop
dec
push
adc
mov
shl
jo
dec
jns
mov
out
mov
fmull
ss
loope
cmp
pop
or
rcll
mov
inc
jo
shr
adc
stos
daa
adc
mov
adc
dec
dec
scas
jns
xorb
mov
mov
jmp
and
shr
add
jo
add
jp
std
and
not
pop
mov
or
pop
xor
in
push
adc
and
subb
sbb
cmp
pop
mov
test
lahf
xor
int3
mov
gs
jmp
cmp
xor
push
pop
loop
xchg
add
rcr
adc
mov
mov
loope
add
jmp
xchg
insl
mov
pop
lahf
push
neg
adc
xor
sbb
ljmp
or
ret
orl
or
aad
nop
jno
sub
in
stc
cmp
orb
test
mov
test
xor
push
sub
jo
lahf
pop
mov
add
mov
popf
inc
sbb
jae
inc
popa
adc
clc
popf
ds
loop
add
cmc
jae
xchg
imul
sbb
mov
cmp
mov
adc
jnp
hlt
out
pop
pusha
or
imul
push
add
inc
add
das
es
jno
mov
nop
jne
jle
aas
lea
mov
push
mul
push
sbbb
dec
xor
in
jg
and
cmpb
pop
inc
adc
repnz
sub
jmp
scas
repz
jmp
shrl
pop
sub
das
scas
sub
mov
push
pop
ss
into
xchg
adc
popa
stos
pop
out
inc
pop
pop
movsb
aaa
jg
sbb
adcl
aam
stc
sub
push
mov
add
not
loopne
add
aaa
scas
leave
loopne
jg
mov
dec
ret
outsl
sbb
inc
fsubrl
sbb
rcrb
sarb
mov
and
xor
sbb
add
lods
sub
push
jno
jmp
xchg
aam
out
cwtl
xchg
pop
bnd
jle
inc
jmp
leave
xor
pop
mov
notl
jmp
mov
cmc
nop
fldl
ret
add
or
inc
jge
sub
add
dec
jmp
push
push
mov
lds
nop
inc
jmp
pop
pop
fiaddl
mov
cmpsb
xor
dec
pop
xor
push
dec
pop
push
scas
ror
pop
pop
mov
or
fidivl
jmp
ss
and
mov
mov
gs
cmp
fwait
add
mov
pop
js
add
gs
nop
xor
stos
in
inc
jnp
push
jns
push
sub
xchg
add
mov
push
mov
sub
bound
adc
aam
lock
xor
loop
mov
rorl
jge
enter
jmp
pop
add
enter
jne
orl
ret
add
stos
fsubl
nop
subl
enter
jg
mov
or
inc
sti
dec
in
fiaddl
outsb
push
cli
enter
in
dec
xor
lcall
in
or
jp
dec
fldl
or
adc
pusha
push
or
ja
int3
push
pop
push
or
aad
orb
dec
jb
jns
enter
pop
out
lret
push
mov
jecxz
sqrtps
loopne
pop
test
shrb
sub
adc
and
scas
mov
push
ficompl
pop
inc
push
ss
popa
lret
les
pop
out
pushf
cmp
inc
push
xor
cmp
dec
mov
mov
sub
xchg
push
mov
pop
pop
int3
punpcklbw
dec
mov
add
xchg
daa
jne
xor
sub
aas
stc
jne
jmp
mov
fildll
bound
add
cmpb
push
add
addl
inc
xor
mov
or
inc
add
call
iret
push
inc
xorl
gs
roll
test
fists
fstl
cwtl
xor
and
insb
outsl
and
or
imul
lea
mov
pusha
pop
or
icebp
ret
add
xor
adc
sbb
mov
sub
inc
cmpsl
nop
push
dec
scas
adc
jmp
add
mov
popf
loop
ljmp
sub
loop
pop
shrb
pop
mov
mov
data16
insb
push
bndstx
dec
je
push
add
and
pop
mov
scas
cmpxchg8b
cmpsl
sbb
sahf
jnp
pop
and
adc
stos
int3
stc
push
mov
mov
pop
sub
push
xchg
xchg
inc
aaa
jmp
pop
decb
sbb
dec
popa
scas
fs
adc
movsl
push
push
sarl
jns
cwtl
fsub
or
bound
in
mov
jae
dec
xor
jno
sti
sbb
imulb
cmp
add
jb
xor
push
jmp
repnz
lahf
xlat
and
jbe
daa
pop
repnz
push
loop
ja
nop
test
fs
es
loopne
mov
cmp
clc
push
push
cltd
push
push
adc
xor
push
mov
push
pop
jae
aaa
push
pop
into
loopne
sbbl
sahf
int3
cmp
shl
dec
adc
sahf
dec
jmp
sbb
testl
mov
sub
dec
pop
shlb
or
mov
dec
testl
cmp
sbb
xor
jg
or
lcall
push
mov
push
icebp
loope
nop
push
dec
iret
out
fsubs
rcl
inc
mov
pop
shll
outsl
jno
or
xor
push
push
pop
int
jg
aaa
add
jmp
add
stos
popa
mov
addl
cli
insl
in
sub
inc
add
movsb
mov
orl
inc
cwtl
mov
inc
testl
add
add
movaps
lock
cmp
leave
jle
lcall
dec
mov
xchg
dec
popa
adc
push
testb
leave
adcl
pop
jp
adc
jb
sub
fmulp
jecxz
push
push
push
pop
mov
cmp
lret
cmp
sub
into
outsb
pop
cmpsl
ret
sub
out
jmp
ljmp
ds
negl
xorb
cmp
leave
ja
sub
pushf
imul
movsl
jge
or
mov
jle
pop
roll
or
loopne
pop
xchg
test
call
ss
jecxz
dec
pop
dec
push
and
add
loope
sub
sub
pop
les
add
add
shll
jmp
jg
into
pusha
add
imul
pop
pusha
stos
pop
imul
repz
lock
cld
or
cmc
sub
push
adc
sub
xor
into
test
repz
and
loope
push
pop
pop
roll
jo
mov
orl
not
fisttps
mov
scas
ret
js
pop
mov
adc
push
pop
daa
push
rorb
into
ss
js
jnp
sbb
fstpl
clc
lock
sbb
inc
xchg
xor
mov
sub
sub
cmpsb
jb
adc
or
in
pop
loope
mov
or
mov
add
lea
cmp
ds
push
add
xor
sbb
pop
inc
addr16
pop
or
jmp
push
popa
ss
or
lock
lea
push
xchg
flds
jmp
mov
daa
xchg
sub
and
outsl
add
push
rorl
sub
pop
push
push
fwait
pop
pushf
mov
xchg
add
jmp
mov
and
fisttpll
add
or
dec
pop
jno
sldt
les
cmovl
clc
or
cmp
gs
mov
sbb
lea
adc
adc
sub
xor
dec
outsl
pushf
or
adc
push
jmp
pop
or
sub
add
xchg
fsts
xlat
ljmp
sarl
push
lea
lret
jno
imul
in
mov
add
push
mov
pop
fadd
dec
arpl
mov
cmp
pop
pop
add
call
xor
pop
jmp
adc
jmp
fisubs
lret
loopne
loop
sbb
insb
push
popl
daa
dec
inc
pop
ret
sub
outsb
jecxz
or
lods
jno
adc
add
sub
mov
repnz
cs
add
ret
ret
imul
cmp
pop
lods
test
jne
pop
popl
mov
pop
xor
ret
inc
mov
in
xor
mov
cmp
movsl
pop
xor
pop
push
sbb
xor
add
loop
pop
add
mov
adc
in
and
adc
in
pop
adc
pop
jmp
dec
push
add
push
adc
in
stos
pop
mov
add
jnp
mov
mov
sbb
popf
dec
xchg
cld
and
and
rcrb
jmp
rorl
andb
out
xlat
sarb
xchg
cs
add
or
and
test
and
mov
aaa
push
testl
out
decl
push
pop
addr16
or
ljmp
scas
push
clc
jb
testl
pusha
scas
cmpsb
stc
mov
jae
out
hlt
push
pop
pop
dec
add
pop
pop
jp
mov
sbb
add
add
aas
cld
cmp
push
dec
and
mov
jp
roll
add
pop
test
add
in
mov
stos
test
leave
ja
jbe
add
pop
inc
mov
sub
inc
std
jne
pop
or
out
negb
arpl
frstor
inc
or
xor
jbe
sbb
lods
cmp
stos
lret
mov
sbb
call
out
mov
movsb
adc
or
or
ds
sub
sarl
or
movb
cltd
punpckhwd
jmp
loopne
jb
pop
in
cmpsb
and
or
inc
movsb
xor
popa
jmp
adcl
xorb
jbe
push
rclb
add
fadd
add
or
cmp
nop
cmp
add
dec
fs
andb
outsl
and
insl
ret
cmpsl
pop
push
adc
and
ret
clc
out
lahf
pop
xor
out
sub
and
adc
and
mov
gs
out
fiaddl
pop
imul
and
mov
scas
push
or
out
lret
add
dec
xor
outsl
mov
jbe
adc
adc
add
es
xor
push
adc
test
sub
shlb
dec
add
pushf
imul
lahf
push
xchg
dec
add
mov
cs
leave
push
sti
outsb
dec
and
adc
xchg
cmp
rcrl
leave
pop
sti
cmp
pop
stos
mov
push
dec
jno
pop
dec
lock
rcll
daa
mov
repnz
jmp
cmp
sti
and
not
shrl
jns
or
push
loop
jge,pn
pop
inc
cwtl
xor
pusha
cwtl
inc
jbe
mov
jns
adcb
movsl
push
xchg
adc
adc
mov
add
subb
xchg
push
jmp
inc
jb
sub
in
xchg
jmp
sti
icebp
test
mov
icebp
cmp
out
jmp
ljmp
jae
jmp
int
push
and
mov
flds
sbb
jne
dec
inc
pop
enter
bnd
mov
jge
xchg
cmpsb
xor
lds
xor
lea
sbb
mov
mov
mov
aaa
lret
push
pop
push
pop
rol
repnz
dec
dec
xchg
adc
fs
arpl
and
jae
sbb
sub
das
rolb
add
inc
pop
inc
xor
cmp
mov
push
outsl
push
xchg
mov
mov
xor
mov
sbb
push
lock
add
outsb
test
pusha
push
daa
mov
xchg
sub
dec
outsb
mov
call
jmp
ret
or
shl
mov
outsl
outsb
jmp
cmpsl
mov
xor
lahf
adc
cmp
outsl
sub
adcb
pop
jge
les
pop
pushf
adc
push
pop
inc
testb
call
dec
dec
xor
jne
inc
mov
xchg
popf
cltd
testb
mov
mov
imul
or
dec
pop
pop
pop
test
ret
inc
ja
pop
xchg
lds
es
add
and
ja
add
or
push
clc
pop
inc
outsl
js
inc
mov
mov
jnp
mov
mov
ficoml
fsubr
aas
std
popa
jmp
ja
lock
pop
add
fs
or
cmp
icebp
push
pop
mov
and
daa
out
jg
mov
sub
mov
inc
fimuls
jne
xlat
push
int
adc
xchg
mov
sbb
or
rolb
jg
or
pop
or
andl
ficompl
fucomip
xchg
xchg
lret
fdiv
xchg
jae
inc
jmp
xchg
mov
cltd
sub
xor
pusha
ret
mov
int3
xor
stos
jnp
xchg
call
xchg
inc
test
imul
mov
test
pop
out
mov
fs
cli
lock
sbb
imul
or
jge
mov
mov
mov
jecxz
dec
jecxz
mov
iret
shl
dec
pop
mov
into
es
arpl
out
jne
cmpsb
sub
mov
push
push
add
inc
das
cld
ret
xchg
movsb
mov
arpl
and
movsl
ds
outsl
mov
adc
enter
imul
xchg
sarb
adc
call
jp
xor
not
in
out
movsl
loopne
es
mov
adc
fimull
push
mov
fsubr
inc
stos
adc
mov
dec
pop
in
dec
adc
jne
repnz
adc
or
push
sarb
out
mov
insb
imul
push
jmp
jmp
xor
xor
jmp
and
dec
inc
mov
in
xchg
cmp
pop
mov
xlat
jg
lret
fistpl
subl
lods
mov
das
aad
sbb
push
or
out
adc
push
mov
or
dec
outsb
fptan
lea
test
test
push
xchg
movsl
shrb
push
subb
mov
sub
mov
or
movsbl
sbb
or
mov
insb
and
jmp
fdivr
rorb
fildll
jle
jmp
adc
adc
dec
out
jnp
iret
or
cli
dec
push
mov
dec
adc
call
stos
push
cs
mov
push
hlt
pop
jg
pop
and
aaa
inc
insl
cmp
ljmp
mov
cmp
dec
mov
mov
or
popf
maskmovq
fdivs
lods
xchg
ljmp
out
mulb
add
or
dec
push
daa
lret
add
shl
mov
pusha
cmpsl
fnstenv
mov
or
xorb
and
into
lret
lea
xchg
cmc
adc
mov
pop
icebp
ror
add
jle
push
mov
mov
adc
ss
pop
sub
pop
test
mov
or
jecxz
pop
repnz
lret
xchg
sbb
push
mov
pop
insb
cmp
lods
les
inc
push
mov
aaa
pop
add
and
incb
pop
pop
stc
or
and
daa
sub
mov
aad
add
sub
popa
aam
and
pop
pop
in
jne
out
shrl
das
mov
and
pxor
sub
bnd
and
push
and
das
outsl
icebp
pusha
mov
add
push
repnz
mulb
adc
stos
dec
in
pushf
sti
pop
pop
xor
xor
cli
mov
jnp
pop
ja
sti
jge
add
insb
add
adc
adcb
pop
ret
adc
sbb
lods
decb
adc
into
mov
loop
iret
or
or
cmp
stc
pop
stos
inc
jbe
and
dec
cli
or
inc
lea
arpl
add
ljmp
mov
adc
inc
mov
mov
pop
jg
adc
pop
ljmp
xchg
inc
ficoml
hlt
aas
in
movsb
adc
xor
push
je
lcall
test
rclb
testb
and
jb
and
adc
repz
jmp
sub
sub
and
push
mov
mov
mov
mul
fnstcw
sub
xchg
fwait
testb
add
bnd
mov
push
push
xchg
add
or
adc
jg
xor
mov
jno
push
pop
cmp
in
inc
imul
dec
out
in
fsubrl
lods
sub
fdivrs
daa
in
sub
pop
shr
add
lret
push
mov
xor
xchg
mov
out
lret
dec
jmp
pop
add
add
int
insl
adc
ljmp
ret
push
repz
stos
xor
push
jmp
pop
dec
test
xor
push
add
xor
call
mov
mov
pop
ror
jmp
cmc
ret
and
xchg
cmpsb
jb
push
sarb
shr
js
imull
out
jo
or
jmp
jns
push
out
push
rorl
mov
std
mov
mov
data16
bnd
mov
or
inc
jmp
out
shr
addl
and
jb
mov
stos
mov
stc
cmpsb
mov
dec
fs
and
pop
pop
mov
or
clc
sub
push
loop
dec
mov
sub
jle
test
idivb
ljmp
dec
or
insb
es
jnp
add
fists
xchg
idivb
add
icebp
sub
xlat
pop
imul
cli
roll
and
ret
dec
jp
mov
add
jb
sub
ret
cmp
loopne
into
or
lahf
push
jecxz
and
mov
sbb
iret
je
cmc
pop
add
sbb
mul
push
pop
daa
jne
pop
dec
out
cmp
out
or
push
jle
dec
or
push
daa
xlat
or
mov
adc
out
mov
sbb
int3
jmp
lret
pop
cld
cld
sarb
xor
pop
enter
add
stos
sub
push
sbb
fs
jg
out
or
push
pop
sbb
jae
jbe
sub
in
out
rol
aas
int3
pop
xchg
adc
sbb
pop
dec
add
push
popa
movl
cmp
mov
cld
push
or
or
add
inc
out
mov
int3
push
pop
jnp
nop
sub
repz
mov
test
jecxz
test
push
dec
repz
mov
je
in
insb
sbb
lret
repz
iret
push
and
pop
shll
cs
add
jb
sub
sarl
mov
ljmp
pop
fimull
addb
rorb
aaa
mov
adc
adc
mov
or
xor
sub
scas
lahf
imul
add
adc
pop
push
repnz
dec
call
sub
cmc
adc
or
inc
shl
pop
add
sti
add
hlt
aas
cltd
lahf
aad
sti
lret
cmp
xchg
sub
fwait
jmp
adc
int3
adc
popf
mov
mov
pop
mov
add
mov
out
aad
mov
mov
xchg
jg
and
and
adc
sbbb
cmp
leave
push
icebp
jns
jae
cld
and
sbb
sub
add
jnp
xor
sub
dec
mov
imul
stos
stos
inc
je
lret
or
stos
adc
pop
insb
mov
or
adc
stc
insl
scas
pop
inc
scas
fs
jecxz
xchg
sub
iret
loop
mov
add
std
clc
ficomps
jmp
or
inc
push
repz
icebp
ss
dec
aas
lret
push
add
addr16
add
ret
mov
sbb
pop
sub
imul
pop
inc
neg
add
das
inc
insb
xchg
pusha
sub
dec
xchg
dec
push
lods
enter
das
push
les
pop
inc
jmp
ret
add
out
push
xor
add
insl
jmp
or
jp
push
cmpsb
inc
in
fsubrs
pop
dec
pop
shl
out
sbb
push
bound
loop
pop
popa
ret
fstpl
xchg
xchg
pop
dec
inc
pop
andb
ss
cwtl
pop
push
lea
mov
pop
pusha
arpl
lret
je
and
xor
jno
push
xor
add
in
vfrczss
andb
jbe
xor
mov
inc
mov
dec
mov
jmp
mov
mov
add
jmp
add
fs
push
dec
pusha
scas
push
mov
pop
mov
inc
lahf
xor
js
out
push
mov
mov
inc
push
jmp
pop
cwtl
cltd
add
das
push
mov
xor
mov
aas
imull
jmp
jnp
loop
inc
xchg
loopne
push
pop
loope
enter
andl
xor
fbstp
add
sub
push
push
cmp
pop
in
inc
mov
cld
dec
loope
sbb
imul
ja
inc
and
mov
sub
in
dec
jno
pop
cmpsb
cmc
cmp
cwtl
pop
popf
int
jecxz
shl
adc
push
test
test
lods
test
sub
or
sbb
cmp
in
shrl
test
scas
in
inc
add
icebp
jmp
inc
nop
mov
add
or
xchg
insb
or
adc
fwait
jmp
sbb
dec
mov
jbe
inc
fsubrl
mov
or
adc
jmp
dec
adc
sub
cmp
push
push
push
outsl
jno
addr16
pop
inc
out
or
gs
dec
add
aas
add
inc
lds
scas
negl
add
sbb
rol
and
mov
cs
repnz
cwtl
lahf
push
pushf
cli
scas
jmp
jecxz
loop
xchg
inc
add
cmpsb
out
mov
pop
adc
push
test
and
ljmp
adc
dec
xchg
adc
mov
jp
rolb
mov
mov
cli
xchg
sub
dec
mov
jmp
mov
sub
cli
xchg
data16
jmp
lahf
pop
xchg
push
insb
imul
ret
testl
inc
pop
push
mov
push
or
lds
repnz
jg
mov
jmp
pop
xchg
loopne
loop
mov
je
xor
ja
cmp
jge
xor
lret
out
adc
or
xor
pop
aam
subb
js
add
icebp
sti
mov
jl
cltd
mov
aaa
pop
mov
daa
cli
cmp
sub
ret
push
lock
or
idiv
sub
daa
notl
fbld
cmp
in
leave
stos
add
js
mov
sarl
push
fs
repnz
aad
add
das
ret
pop
pop
inc
clc
jmp
jp
sbb
push
and
jg
add
xlat
inc
int
add
in
mov
movsb
repnz
pop
leave
pop
dec
sub
pop
outsb
add
mov
cmp
sbb
sti
or
inc
insb
push
xlat
inc
mov
rcrb
jo
inc
add
pop
add
dec
sahf
ret
pusha
out
xchg
push
cmp
jle
cltd
mov
icebp
icebp
push
push
cmp
es
push
xor
xchg
enter
adc
bound
enter
ret
mov
xor
retw
inc
cmp
mov
add
popa
ret
lds
adc
rorl
test
xchg
idiv
sub
adc
or
repnz
sub
out
scas
jno
lcall
and
add
pop
lods
inc
pop
repnz
jmp
inc
in
mov
in
sub
push
loope
rol
push
jg
fbstp
enter
in
sub
or
mov
les
pushf
dec
icebp
jns
cwtl
insb
xchg
test
incl
mov
pusha
loope
pop
sub
adc
clc
clc
push
std
sti
push
add
jge
mov
out
fcomps
dec
pop
sti
cmp
push
scas
cld
idivb
into
test
xor
mov
mov
cmp
push
mov
mov
stos
add
loopne
xor
stc
pop
xor
sarl
push
lea
xchg
inc
and
in
add
push
push
cmp
loopne
push
and
adcb
in
ljmp
sbb
arpl
inc
cmp
mov
and
jmp
scas
lock
ret
sbb
add
and
bound
mov
jnp
aas
pop
test
subb
test
repz
add
sub
nop
and
inc
stos
pusha
dec
xor
pusha
mov
shr
cmp
adc
pop
and
pop
xchg
fiadds
jmp
mov
cmp
mov
add
arpl
into
cwtl
out
orb
jns
imul
mov
mov
push
hlt
into
or
arpl
pop
pusha
sbb
xor
das
sti
jnp
inc
ljmp
jns
mov
popf
xor
mov
lret
add
sbb
add
aad
stos
mov
push
sbb
mov
mov
xor
leave
addb
lret
pop
fcompl
push
lock
not
nop
scas
pop
flds
mov
int3
xorb
sti
pop
pop
jp,pn
push
jge
xchg
dec
jg
adc
dec
hlt
js
cmpsl
repnz
mov
inc
sub
adc
sbb
mov
pop
incl
outsl
add
fimuls
cld
cmp
scas
out
ja
sbb
das
aas
orl
pop
and
push
push
mov
jmp
test
inc
push
and
mov
das
idiv
jg
pop
mov
lcall
pop
xchg
inc
xor
xchg
icebp
or
add
or
inc
hlt
or
xor
cmp
aad
mov
add
pop
bound
mov
sbb
sub
pop
add
jns
push
jmp
mov
or
pop
test
repz
jmp
ljmp
mov
xor
sbb
cmp
sub
arpl
add
enter
ds
push
mov
psubq
xor
shl
jg
mov
dec
cs
aas
dec
test
xor
pop
mov
test
pop
lods
pop
dec
lret
dec
adc
dec
inc
rclb
mov
aas
popa
daa
or
adc
sub
xor
test
lahf
js
or
mov
ret
jle
ret
mov
pop
or
or
jnp
imul
cmp
ljmp
xchg
mov
and
ja
mov
insb
mov
leave
jbe
mov
xor
xor
clc
dec
out
push
test
or
xlat
mov
sbb
add
xchg
pop
xchg
and
in
inc
loopne
add
cmp
xor
ret
into
pop
lock
add
sbb
das
mov
mov
scas
repz
sahf
pop
pop
test
push
xchg
push
and
inc
hlt
sbb
adc
jmp
cli
inc
adc
pop
cs
xchg
push
mov
push
jle
std
das
jecxz
xlat
out
sub
cltd
or
fs
jmp
xor
inc
or
push
cmp
mov
hlt
jo
or
add
fmuls
push
jmp
daa
add
test
sbb
fnsave
mov
jmp
pop
imul
decb
xor
sbb
jecxz
sub
mov
daa
ret
imul
pop
sub
jge
and
pop
pop
jmp
mull
push
sub
fisttps
or
push
push
sahf
adc
call
mov
jb
cld
test
dec
sbb
pop
testb
mov
dec
or
add
stos
outsl
mov
mov
imul
cmp
orb
inc
das
jmp
sarl
in
dec
jge
out
mov
xchg
test
cmpsl
imul
in
cmp
mov
add
or
mov
cmp
and
addl
je
mov
iret
repnz
jae
xor
inc
mov
cmp
or
add
mov
std
inc
xor
adc
mov
push
mov
loopne
xchg
ss
loop
filds
ret
lock
cmp
pop
mov
outsl
cli
xor
cmpsl
mov
int
xor
sbb
push
xchg
scas
and
add
fisttpl
pushf
jbe
ljmp
pop
jmp
in
add
dec
inc
sti
sarb
xchg
sbb
jp
stos
mov
adc
mov
and
dec
mov
push
sbb
pusha
jo
aad
xchg
add
jns
inc
lods
pusha
popa
arpl
les
mov
nop
jno
clc
idivl
xor
xchg
hlt
mov
sbb
adc
rolb
data16
orb
imul
mov
sub
shll
dec
cmpsb
push
idiv
pop
popf
add
sub
push
mov
mov
test
loope
loopne
mov
std
movsl
jge
test
jp
or
enter
ds
and
vcvtpd2dqy
fiadds
dec
lret
xor
or
push
or
mov
inc
jl
jmp
jmp
mov
rcl
lcall
add
cmpsl
sub
ficoml
loopne
mov
sub
mov
aas
pop
xor
cmc
add
mov
cmp
mov
ret
mov
ljmp
sub
sub
mov
pop
sub
ror
repnz
sub
loopne
mov
mov
dec
jle
xchg
mov
stos
scas
aam
daa
fnstenv
lret
jg
scas
sub
jo
popf
gs
add
mov
pop
call
test
dec
ljmp
xchg
add
jl
mov
push
sbb
cmp
xchg
jle
das
insb
jg
xor
push
pop
add
mov
mov
mov
movsl
mov
cmp
test
je
mov
adc
push
popa
rcr
jmp
add
jbe
rorl
pop
idivb
rorl
shl
loope
mov
add
inc
imulb
push
or
mov
mov
push
ret
pop
aad
out
lret
das
xor
add
and
repz
es
xor
je
pop
push
jbe
or
pusha
adc
out
pop
imul
xchg
incl
dec
adc
incl
jne
sub
movsb
mov
shll
sub
movsb
pushl
inc
gs
adc
adcl
cmc
xor
out
daa
sub
pop
decl
into
push
add
inc
fstps
iret
ret
dec
jge
repnz
or
or
sbb
inc
inc
inc
dec
out
xor
sbb
pop
stc
outsl
jo
fcoms
in
xchg
xor
xchg
or
jmp
cmp
mov
pusha
cmp
adc
cwtl
xor
sbb
sbb
and
push
mov
add
es
xchg
rol
test
pop
sbb
pop
test
js
jecxz
and
push
pop
pop
push
add
jl
gs
and
lcall
loopne
jp
das
fistpl
and
ror
lods
sub
push
lds
daa
sbb
sar
and
push
nop
rcrl
das
je
daa
push
inc
cmp
jge
cmc
pop
push
rclb
pop
inc
jns
sbb
inc
hlt
adc
push
mov
and
inc
inc
dec
push
add
sub
rolb
jmp
in
gs
mov
bsr
mov
mov
test
gs
pusha
jae
aaa
xor
jmp
add
mulb
push
mov
and
aam
push
test
movsl
repz
jmp
ja
pop
das
lds
cmp
push
push
pop
and
imul
in
xchg
pop
andb
mov
out
arpl
subb
lret
aas
jle
pop
arpl
into
inc
lds
jmp
jb
xor
add
jo
hlt
sbbl
inc
mov
cli
add
pop
xor
lods
pop
orb
rclb
cld
fdiv
in
and
pop
sub
outsb
sub
leave
shlb
nop
jno
push
test
movl
mov
inc
or
xorb
inc
movsl
xor
xor
ss
sub
push
addr16
stc
push
bound
add
scas
js
jmp
add
push
or
adc
cli
incl
in
insl
push
hlt
dec
addr16
cwtl
push
das
stos
xchg
out
or
jecxz
xchg
sbb
mov
pop
cmp
mov
xor
cwtl
cwtl
add
out
insl
pop
xorb
or
popf
jb
push
notl
or
and
push
adc
loop
push
fldt
shl
and
ja
push
xor
push
mov
fimull
into
popa
xor
mov
out
push
test
jne
inc
scas
add
xor
xor
incl
sbb
or
push
adc
jne
cld
and
push
jno
xchg
inc
je
subb
imul
pop
add
add
xchg
inc
int3
sbb
sub
jecxz
stos
lahf
ret
repnz
jle
mov
addb
pop
sub
xlat
call
adc
sbb
xchg
jnp
cmp
inc
shr
or
push
inc
dec
repnz
sbb
push
or
sub
sub
sub
mov
into
not
mov
xor
push
lret
in
mov
jmp
xor
adc
mov
lret
xlat
pop
xorb
fistpll
push
or
add
xchg
clc
aam
pop
int
in
je
jmp
and
jg
fsubrs
or
aaa
xchg
cmp
ljmp
rolb
fists
sub
cmp
imul
add
pop
lret
shl
call
xor
mov
enter
orl
and
test
hlt
push
bound
ljmp
dec
mov
pop
sub
je
and
cmp
je
nop
sahf
dec
push
sub
add
and
fcmovbe
mov
pop
add
and
sbb
jle
addr16
aas
jmp
or
mov
jp
mulps
lcall
rorl
pushf
les
dec
lock
and
ret
sbb
push
outsb
cmc
clc
mov
adc
in
mov
pusha
or
add
mov
xor
into
loope
repz
mov
inc
push
orb
dec
cli
xchg
fs
xor
inc
shrb
rcll
or
xor
jmp
xor
add
push
arpl
mov
or
push
lcall
jl
mov
ficomps
pop
xchg
cmc
mov
push
xor
es
je
sub
sbb
push
sub
jmp
xchg
neg
int3
xor
out
das
pop
fsts
sahf
add
daa
pop
sbbb
aam
out
sbbb
lock
pusha
pop
shr
fsubrs
adc
mov
pop
or
das
jbe
testl
sub
prefetchnta
fbstp
and
test
mov
sbb
ja
dec
dec
xor
popa
cmp
in
and
mov
mov
hlt
negl
pop
adc
mov
sub
add
jmp
jecxz
movsb
xchg
or
push
add
imul
add
sub
ss
push
sub
jbe
lock
add
inc
jmp
sbbl
mov
ret
xchg
mov
push
ljmp
push
out
in
or
cmp
fcompl
das
repz
mov
or
cmp
pushf
cmp
into
mov
adc
imul
outsl
mov
insb
cli
xor
mov
lock
or
mov
jne
gs
movb
and
sub
sub
xor
push
mov
repnz
jmp
lcall
xchg
imul
jns
add
xor
jp
mov
test
test
add
aas
dec
pop
dec
je
jae
or
mov
loopne
pop
nop
int
push
sti
int3
xor
lahf
lds
cmpsl
xchg
ret
les
ficoms
outsb
jmp
sti
dec
je
aas
fisttps
lock
dec
rcrb
movb
scas
movsb
xor
cltd
cmp
sub
add
pop
jmp
rcll
pop
mov
bound
cltd
out
xchg
loopne
inc
add
add
push
mov
mov
cmp
jb
js
jp
push
pop
cs
pop
test
shr
jl
cmp
dec
lret
rclb
xor
cld
adc
dec
sub
sub
push
sub
dec
xor
icebp
orb
sub
mov
push
mov
push
sbb
or
sub
fnsave
pop
shr
xchg
fldl
fdiv
in
in
inc
add
jg
pop
pop
add
hlt
xor
pop
pop
std
pop
adc
add
mov
cmp
add
mov
in
rolb
icebp
dec
lret
push
lods
andb
add
jg
push
int
add
ljmp
sbb
insl
ja
sub
sahf
ficoms
ret
sbb
jno
test
ss
testb
adc
iret
push
cmova
inc
add
ja
imul
pop
adc
xchg
lds
dec
jg
cs
adc
movsl
push
rcll
lret
or
lret
out
shlb
int3
xor
xlat
sarb
mov
add
outsb
pop
or
pop
sahf
xor
pop
into
dec
sub
xchg
enter
adcb
inc
repnz
ljmp
rorb
push
and
xor
mov
lcall
lahf
adc
jo
xchg
dec
rcl
std
mov
inc
nop
and
arpl
xchg
clc
ret
cmp
xlat
push
iret
mov
orb
sti
leave
dec
ret
xchg
push
mov
and
test
add
imul
inc
pop
jmp
inc
push
xor
adcl
daa
jp
dec
mov
mov
add
push
aas
icebp
xor
loopne
adc
loope
sbb
gs
mov
sti
bound
push
mov
imul
inc
dec
inc
sub
call
outsb
push
shrl
push
movsl
mov
xchg
jle
int
dec
mov
adc
pop
pop
mov
cmp
pop
sbb
imul
or
pop
inc
rcr
ret
cmpsl
ds
pop
xchg
cmp
adcb
sbb
into
les
aad
inc
aad
ds
pusha
add
in
inc
pop
jl
stos
add
inc
dec
or
pusha
jmp
pop
fmuls
push
sbb
add
mov
jmp
and
jne
pop
pop
jns
add
pushw
cs
sbbb
daa
fstpl
or
cmpsl
dec
push
movsl
pop
xor
xchg
adc
or
jmp
mov
sub
lret
add
scas
adc
lods
cmp
xor
jmp
dec
add
sbb
stos
jg
push
lahf
inc
out
mul
pop
js
jl
aas
movl
and
mov
add
outsb
pop
add
ds
pop
insb
sub
shll
sub
rcr
jle
jo
mov
scas
cmp
stc
lock
enter
sub
faddl
bound
cmp
fwait
mov
mov
lods
nop
loop
jo
shrl
mov
out
push
fcomi
call
shl
xor
sub
jecxz
or
js
dec
xchg
fidivrs
push
movsb
jge
insb
data16
jmp
cld
sub
adc
cmp
or
loopne
mov
test
push
sub
xchg
xor
in
add
hlt
stos
add
inc
int3
add
mov
pop
mov
clc
addl
arpl
into
jmp
inc
jne
push
xchg
negl
fisubs
outsl
inc
jl
into
push
pop
cwtl
fstp
push
pop
dec
add
rorb
es
popf
jb
push
cltd
cs
xchg
mov
adc
ret
sbb
or
pop
cmpsb
xchg
cli
or
test
test
lock
icebp
and
mov
das
xchg
lret
stos
testb
xchg
push
and
sub
shlb
and
pushf
loopne
mov
xchg
inc
sbb
jmp
mov
xchg
lret
sbb
xor
fidivrs
and
cmpsl
pop
lret
fstps
pusha
repnz
sub
out
add
mov
jecxz
adc
mov
add
popa
aaa
or
push
mov
mov
mov
add
insb
inc
add
lret
and
cmp
bound
pop
fistpl
insl
rolb
movsl
ret
aaa
pop
cltd
js
fsincos
xor
cmpsl
dec
jg
add
popa
in
shlb
jmp
cmp
adc
rcll
out
inc
mov
filds
negl
sbb
or
xchg
ret
repnz
hlt
pop
push
fwait
adc
xor
sbb
pop
aas
cmpsl
pop
jecxz
sar
xlat
and
adcl
add
fcompl
loopne
fs
aad
xchg
pushf
xor
adcb
in
dec
pop
pusha
push
jg
xchg
les
push
dec
jns
pop
xchg
xchg
gs
or
lods
cmp
dec
jecxz
sbbl
mov
fsubl
push
inc
adc
add
jmp
pusha
test
mov
push
mov
adc
js
sti
xchg
add
push
sti
push
jmp
mov
inc
cmp
ja
pop
jae
jb
std
and
pop
xorb
jae
orl
movsb
push
cmpsb
jecxz
add
stos
add
adc
add
cs
sub
mov
dec
add
inc
call
xlat
adc
popa
and
mov
pop
sub
mov
cwtl
scas
lcall
push
and
mov
pop
enter
int
test
xor
pop
push
push
out
push
mov
xor
mov
cmp
test
xor
adc
push
incl
inc
pop
push
gs
out
insl
aam
dec
mov
std
ja
xor
xchg
mov
mov
add
jb
sub
jmp
daa
push
loope
int3
cmpsb
push
test
cwtl
outsb
dec
scas
sub
addl
imul
push
loop
rcl
xchg
cld
sub
addb
aam
jge
jecxz
bnd
adc
das
and
jp
out
loope
xor
out
dec
inc
test
sbb
outsb
in
stos
lret
mov
sbb
cmp
push
outsl
or
push
push
or
mov
sub
loope
xchg
jne
out
jl
shrl
cmp
jmp
outsb
dec
xor
sub
loope
mov
jae
adcb
jg
inc
or
jmp
roll
mov
pop
mov
cld
dec
pop
xor
adc
loope
in
mov
pop
add
jae
cmp
xor
pop
pop
pop
test
inc
out
and
xor
aas
jnp
jns
inc
shl
pop
mov
mov
imul
mov
sub
fstpt
iret
movsb
push
cwtl
lds
adc
cmc
sub
jbe
das
mov
nop
adcb
sub
mov
mov
andb
jb
xchg
cmpsb
call
pusha
inc
mov
push
mov
sub
dec
sti
les
dec
fiadds
sbb
or
xor
xor
jno
mov
in
add
pop
jmp
xor
xchg
cpuid
mov
jnp
sub
sub
or
loop
ja
mov
mov
mov
xor
pop
xchg
add
add
imul
push
rorb
and
sbb
and
fsubrs
loope
adc
ja
insl
sbb
loopne
test
cmp
adc
inc
xchg
mov
jp
clc
sti
fdivrl
mov
cmp
mov
and
xor
ret
pop
addl
and
cwtl
rclb
inc
inc
xor
insl
push
jno
sbb
repz
out
int3
mov
sbb
jmp
aam
adc
add
mov
push
je
mov
popf
ja
inc
cmovo
jmp
andb
push
xor
and
test
mov
leave
add
or
andl
ret
jl
inc
mov
dec
mov
cs
jmp
cwtl
pop
jmp
pushl
pop
xlat
mov
mov
iret
sub
mov
test
or
jmp
mov
lret
xor
sbb
sub
incl
rcr
or
add
or
push
sarb
pop
pop
pusha
and
mov
sub
mov
cmpsb
inc
xor
xchg
repnz
and
lds
lret
bound
loop
imul
inc
dec
cwtl
nop
nop
sbb
outsb
push
sub
cmp
fwait
or
daa
add
push
lcall
repz
and
mov
adc
loopne
fdivrp
sub
int3
call
pop
out
dec
in
mov
jmp
xor
xchg
stos
ds
xor
jb
xchg
inc
loop
and
cmp
inc
mov
ror
mov
mov
push
jmp
lret
or
mov
adc
xchg
arpl
sbb
int
cs
test
mov
mov
dec
daa
jns
pop
arpl
dec
or
in
int3
push
jmp
loopne
push
dec
mov
and
icebp
push
bnd
xor
lods
sbb
in
shrb
lret
repz
ret
aad
stos
lahf
scas
test
dec
ret
cmp
not
inc
add
es
jmp
ret
xor
push
inc
rorl
push
aas
lds
loopne
sarb
dec
adcb
lods
hlt
pop
mov
add
mov
aam
sub
push
into
or
and
mov
out
jbe
out
call
int
das
sti
cmp
pop
jo
mov
and
stos
mov
jns
dec
ds
das
mov
lds
clc
or
xchg
cmp
dec
mov
pusha
sub
pushf
arpl
and
and
adc
fimull
in
dec
xlat
pop
xor
fcompl
mov
and
adc
or
leave
shl
clc
jle
cmpsb
mov
cs
sub
lods
xor
scas
push
ljmp
loopne
push
adc
sub
xchg
or
aad
and
xor
inc
sub
mov
xlat
shrb
out
sbb
movsb
jecxz
or
lock
mov
rcr
inc
mov
loopne
mull
push
popf
adc
mov
xlat
and
xchg
sub
mov
add
cmpsl
sub
or
sbb
ret
add
fsts
pop
push
popa
call
pop
mov
dec
adc
xchg
jns
mov
adc
ds
jbe
popf
or
or
adc
pop
shlb
and
ret
add
sub
push
ficoml
in
mov
cmp
pusha
push
mov
jg
xchg
iret
push
xorb
mov
lahf
hlt
outsl
cpuid
jmp
dec
lret
xlat
repz
pop
adc
cmp
fwait
push
sbb
or
repz
xor
mov
hlt
cli
or
sbb
enter
push
leave
mov
movsb
iret
lock
jo
out
nop
sub
lods
dec
lret
adc
dec
or
rdtsc
cmp
inc
das
neg
or
dec
clc
test
mov
cmpsl
mov
lock
dec
xchg
cld
pusha
js
insl
pop
adc
cmpsl
push
pop
push
lds
icebp
mov
dec
add
pop
push
out
push
pop
xor
mov
repz
mov
adc
push
cltd
jbe
inc
out
cmp
xor
sub
mov
in
sbb
je
sbb
repz
add
scas
or
jae
push
lcall
repz
inc
push
push
clc
sbb
mov
iret
shll
dec
popa
out
in
xlat
cmp
cltd
aad
jo
data16
pop
sbb
dec
mov
ret
clc
or
es
add
add
inc
loopne
hlt
jecxz
lcall
fdivp
mov
pop
pop
mov
test
imul
aam
add
inc
je
jo
loope
lret
xlat
or
aaa
xor
jae
xor
shll
add
aad
test
or
pop
push
aad
stos
push
or
push
stc
mov
mov
cmp
ja
pop
sub
xchg
xchg
scas
add
cmp
aam
add
lods
jg
pop
mov
push
mov
fwait
cmp
lcall
out
push
int3
add
out
add
add
sub
pop
and
lea
push
sbb
in
cmp
xorb
dec
in
xchg
cltd
inc
clc
sub
dec
test
cmpl
sbbl
or
push
adcb
xchg
xor
push
or
aam
or
add
and
sbbb
or
out
cmp
lcall
jmp
push
inc
cmp
mov
fistpl
push
mov
fistpl
jno
mov
in
fdivs
pushf
mov
testb
sub
cmp
and
scas
sub
js
ss
cmp
andb
das
les
push
lds
push
mov
lea
pusha
and
push
popa
mov
fstl
loopne
or
shlb
icebp
ljmp
lahf
mov
jmp
adc
mov
inc
shl
dec
inc
lret
ja
mov
mov
sub
cmpsb
push
fwait
dec
and
push
xchg
adc
stos
or
mov
mov
jb
mov
mov
add
sbb
das
dec
adc
push
pop
pop
sahf
adc
or
mov
mov
stos
icebp
sub
outsb
adc
repnz
push
push
loopne
pop
xchg
ret
lsl
and
or
pop
std
nop
std
jae
mov
add
sbb
mov
and
bnd
mov
mov
cmpsl
aad
iret
arpl
scas
inc
mov
add
mov
xor
dec
or
sub
out
sbb
and
xor
add
aaa
in
jmp
mov
sub
test
adcl
fs
icebp
mov
lock
arpl
cli
sbb
adc
push
sbb
and
adc
add
cmpsl
rcll
add
repnz
add
je
in
stc
dec
out
fimull
mov
inc
leave
inc
cli
mov
aam
imul
adc
add
mov
leave
adc
mov
stc
ret
push
or
inc
cs
or
pop
xchg
adc
cmp
mov
imul
or
sub
jo
and
lea
adc
jl
adc
mov
stos
and
sub
lock
mov
mov
std
push
daa
call
inc
jmp
inc
clc
add
out
or
idivb
aaa
xor
int3
inc
dec
xchg
ret
or
mov
test
fdivl
arpl
mov
inc
dec
mov
mul
or
sbb
sbb
imul
outsb
or
mov
or
add
sub
fists
cltd
fsts
ss
loope
and
pop
dec
push
dec
inc
or
negb
sub
or
das
cmp
out
add
push
stc
mov
cmp
push
adc
cld
leave
sahf
dec
daa
les
cmpsb
push
push
testb
and
sub
jmp
pop
ror
aad
addl
mov
rolb
mov
add
clc
not
xchg
lock
pop
xor
stos
icebp
or
pop
dec
shrl
std
les
arpl
dec
adc
pop
or
popf
jbe
es
and
lret
pusha
loopne
inc
adcl
jge
push
add
mov
pusha
mov
scas
push
mov
jmp
push
dec
push
andb
cmpb
push
add
sarb
popa
scas
cld
sbb
ljmp
sub
push
ret
loope
xchg
rcr
push
dec
xchg
rol
xor
test
test
jg
push
int
push
xor
jno
lds
jns
adc
or
cmp
int
inc
hlt
adc
test
push
xorb
jmp
xor
das
push
sbb
inc
fidivl
and
lock
jmp
ss
inc
mov
pop
mov
int3
fists
orl
mov
xor
out
dec
stos
pop
adc
lahf
push
jmp
adc
sub
dec
decl
adc
mov
dec
incb
stos
aad
or
loope
andl
push
jmp
ret
out
int3
adc
jno
sahf
movsl
add
out
adc
fildl
and
pop
jmp
loop
push
in
pop
xchg
adc
ljmp
adc
pop
push
mov
das
pop
cwtl
jne
mov
inc
ja
push
les
das
sub
test
or
adc
outsl
lret
jno
or
into
bound
pop
push
loope
aam
loope
push
dec
mov
lds
in
add
das
ds
mov
popf
sbb
jle
cmpsb
scas
adc
cmpsl
or
xor
in
js
cmp
pop
adc
jae
or
cmp
adc
cmp
roll
xchg
or
xchg
mov
adc
repnz
or
mov
jmp
sbb
shl
inc
and
sbb
xor
aas
ds
jb
or
inc
mov
sub
push
rol
or
or
inc
dec
jne
mov
andb
add
xchg
and
es
repnz
vpaddsw
rcrl
or
fwait
or
xchg
push
jmp
shr
cmpl
add
es
xchg
popf
sub
push
mov
pop
jp
xchg
andb
mov
dec
jmp
in
push
and
ret
sbb
mov
push
xorb
pop
inc
adc
jge
repz
adc
ret
dec
mov
ja
idivl
adc
adc
loop
ret
xchg
push
pop
or
inc
das
rcl
and
add
loope
add
sub
sub
and
inc
pop
inc
ds
cmp
test
sbb
mov
in
jle
pop
or
outsl
sub
or
fistpll
dec
lea
data16
dec
push
enter
push
lret
push
mov
jp
daa
dec
push
fs
inc
rcr
add
roll
cwtl
sbb
cmp
dec
jmp
repz
xor
or
jl
pop
adc
xor
adc
mov
daa
aad
fsubl
inc
pop
neg
inc
add
jnp
or
je
and
mov
daa
shlb
add
nop
dec
mov
pusha
xchg
lret
mov
hlt
add
shrl
outsl
push
subl
mov
jle
xor
add
lcall
int
insb
cmc
and
imul
mov
mov
fmull
cmc
sbb
mov
and
rorl
xor
inc
cmp
xchg
xchg
mov
sub
jp
pop
push
jmp
decl
fmull
rcrl
mov
dec
in
cmp
inc
into
fwait
rcll
std
add
add
xlat
xchg
leave
mov
jns
add
cmp
int
nop
adc
xchg
call
adc
mov
in
mov
add
cmpsb
pop
jmp
bound
imul
fisttpl
out
inc
xchg
pop
xor
push
and
xor
dec
push
inc
jae
cmpsb
test
mov
lods
iret
add
pop
data16
mov
cmp
dec
cmpsb
mov
jg
ljmp
insl
lods
pop
inc
or
mov
xchg
dec
scas
xor
icebp
push
push
inc
movb
jecxz
push
movsb
mov
icebp
push
sbbb
lret
dec
dec
adc
jg
pop
idivl
adcb
outsl
data16
mov
das
jp
insb
data16
fidivs
inc
cmp
int
fwait
or
cli
nop
pop
adc
cmpsb
jne
stc
add
fsubr
dec
mov
dec
push
push
pop
mov
xchg
jo
sbb
sub
std
out
iret
cs
adc
mov
xor
mov
and
mov
enter
xor
pop
jo
andps
lock
int
loopne
neg
sbb
dec
fcmovnb
push
push
mov
add
pop
leave
not
or
movsb
sub
mov
sbb
outsb
call
adc
out
sub
lds
popf
mov
jnp
call
mov
rclb
clc
and
sbb
lret
push
xchg
out
in
mov
or
adcb
cld
test
add
cmp
sarb
ds
xchg
fsub
dec
out
scas
mov
sti
push
add
jle
inc
push
lods
or
stos
fidivrl
dec
adc
outsl
dec
lock
jno
dec
jmp
xchg
push
mov
test
loop
pop
out
and
xor
push
popa
push
push
mov
add
sub
cmpsb
cwtl
sbb
loopne
stos
jg
or
jmp
in
js
in
fcmovb
and
mov
inc
or
push
data16
popf
add
mov
js
dec
pop
mov
leave
stos
pop
xchg
or
push
jle
jp
pop
gs
adc
rcl
daa
test
enter
daa
aas
ds
dec
pop
shrl
enter
dec
std
std
jae
jmp
sub
add
gs
pop
das
mov
and
and
sub
outsl
mov
push
or
jmp
mov
stc
popf
gs
sub
xchg
mov
les
sub
xchg
or
jmp
fnsave
es
rorb
out
lds
xor
loope
dec
into
aaa
or
adc
addb
jmp
push
filds
mov
push
jmp
and
pop
or
push
jbe
sub
cmp
stos
into
jle,pn
sub
jg
sub
imul
addb
loop
add
pop
daa
jmp
push
iret
mov
mov
xchg
out
cmp
sub
mov
xchg
adc
inc
jmp
mov
rcl
push
out
fisubs
es
roll
fstps
dec
lahf
aam
add
int
xchg
shrb
movsb
shl
dec
and
or
lret
inc
push
imulb
pop
sub
in
and
ljmp
xor
push
add
clc
pop
pop
jbe
jecxz
and
push
jbe
pop
and
jmp
mov
orb
add
pop
jmp
cmp
pop
popa
loope
repz
mov
sub
pop
popf
imul
cmpsb
xor
pop
and
out
mov
pop
pop
sahf
adc
or
stc
in
das
mov
or
pop
push
repnz
mov
stc
cmp
leave
cmp
cmpb
jp
or
sub
das
and
push
sub
adc
pusha
insb
dec
bound
inc
cld
cmc
jl
in
dec
cld
push
mov
lahf
xlat
and
jecxz
aas
dec
add
cltd
inc
inc
pop
pop
out
push
jo
loope
repz
jp
mov
dec
loopne
push
dec
sbb
xor
jp
leave
adc
mov
xor
addr16
or
jecxz
cmp
rorb
cs
mull
cs
fsubl
sti
and
adc
push
jle
test
adc
scas
mov
loop
out
mov
sarl
pop
popf
pop
mov
sub
cltd
addr16
and
sub
add
push
jbe
lods
xchg
imul
popa
jmp
sub
scas
sub
xor
fwait
mov
insb
mov
mov
jnp
xchg
adc
je
pushw
test
repz
add
popa
pop
add
data16
or
push
cli
xor
test
and
adc
push
cmpsb
mov
xor
shll
jp
push
inc
lods
sbb
cmpsl
pop
push
jnp
das
push
cmpsl
add
xor
lods
sub
pop
lods
xchg
je
jmp
jne
mov
jg
iret
push
inc
or
add
out
or
lcall
jno
adc
aad
dec
fldenv
mov
mov
pop
jne
xchg
add
repnz
sub
popf
pop
or
mov
cmp
add
add
pusha
mov
addl
iret
dec
shll
mov
lods
lret
stc
push
sbb
sub
mov
jge
jmp
fimull
cmp
das
roll
lds
lret
or
adc
incl
loopne
mov
fldcw
out
stos
addr16
add
pop
out
inc
movsl
mov
dec
cmp
out
inc
jle
push
je
dec
fisttpll
leave
jbe
das
dec
mov
and
push
fndisi(8087
xchg
hlt
out
mov
stc
in
xchg
loop
push
movsb
cli
popa
aas
aad
cmp
scas
repnz
aam
dec
push
lret
cli
fidivl
stos
xchg
xor
leave
push
popa
aam
lods
push
int3
mov
inc
rclb
xor
and
cmp
push
mov
mov
mov
clc
mov
mov
cmp
out
ret
or
jmp
rorb
adc
add
sub
push
mov
leave
out
ds
mov
pop
cmpsl
dec
loope
cmp
mov
sub
mov
dec
pop
std
inc
rolb
pop
xchg
push
jne
dec
icebp
rcrl
sub
in
imul
testl
add
adc
fdivrp
mov
pop
mov
loope
jns
or
andl
mov
sub
loope
stos
cmp
mov
sub
xchg
dec
arpl
dec
add
sub
jg
push
sbb
add
push
mov
pop
mov
add
jbe
outsl
push
jmp
out
pop
lret
push
xchg
pop
jmp
mov
adc
into
aad
adc
sbb
into
mov
pop
orb
xor
jmp
ds
jns
sub
jmp
xor
fistl
jnp
adc
repnz
or
pusha
xchg
cmp
mov
loope
ds
cmp
int3
jge
cmp
testl
pop
push
sub
and
aas
or
lea
jns
icebp
dec
jmp
and
sub
out
add
cmp
rorl
fmul
cmp
mov
addr16
adc
xor
xor
cmp
and
insl
pop
int3
mov
mov
pop
mov
out
rcll
xchg
cli
lea
sbb
adc
gs
pusha
sub
fstl
sbb
cmp
dec
enter
sarb
cmp
add
sub
repnz
mov
shr
lock
lods
push
push
test
mov
repnz
addb
in
push
cmpsl
loop
ss
movb
repz
pop
jmp
cli
adc
cltd
and
ja
xchg
jmp
outsl
repnz
mov
pop
shl
jnp
inc
cmc
pop
decb
mov
or
shr
pop
xchg
not
inc
leave
add
mov
loope
movsl
popl
insl
sub
xchg
pop
inc
mov
xor
hlt
sub
inc
jne
mov
shrb
cmp
jmp
repz
mov
cltd
pop
int3
push
filds
inc
test
neg
imul
movsl
push
fsubl
mov
jmp
dec
shll
inc
mov
test
mov
push
cmpsb
mov
jp
adc
or
cli
jg
inc
push
shlb
addb
push
or
popf
lds
mov
out
lods
xchg
mov
and
pop
dec
push
mov
add
sbb
xlat
ficomps
daa
cmp
pop
inc
dec
pop
ss
add
lea
xor
or
adc
fadds
add
pop
cltd
sub
adc
pop
int3
mov
inc
push
daa
xchg
mov
pop
xchg
in
and
or
stos
insb
add
leave
sbb
out
mov
mov
jg
pop
ds
add
xchg
push
or
mov
fisubrl
inc
jmp
and
inc
cmp
jge
sub
pop
repz
mov
or
fbstp
lds
and
push
adc
jne
aas
cwtl
dec
and
out
aas
and
scas
cwtl
xchg
mov
jne
les
sbb
into
inc
or
and
pusha
add
ret
iret
test
xchg
imul
cmpsl
sub
stos
jne
jnp
add
int3
repnz
mov
pop
pop
jg
xor
iret
sub
test
pop
mov
jne
mov
mov
mov
jmp
int3
mov
andl
push
pop
jo
add
fiaddl
pop
add
ror
sub
jle
clc
jp
jae
cmp
lahf
flds
push
mov
in
push
mov
incl
inc
xchg
push
mov
jmp
mov
call
rorb
pop
fistps
mov
lcall
sub
jne
stos
jmp
rcl
dec
push
fiaddl
cwtl
orl
sub
lock
mov
mov
in
add
fisttpl
dec
pop
xchg
mov
out
out
mov
cmpsl
sbb
ret
mov
jmp
sbb
add
xor
cmc
insl
mov
mov
sub
lods
pop
sbb
pop
pop
in
les
add
or
mov
rcll
sarl
jge
dec
mov
pop
or
sbb
jmp
sub
inc
inc
mov
pop
das
or
sbb
push
sub
dec
lods
and
cmp
out
mov
ds
test
out
std
push
ja
sbb
xchg
stos
jns
les
cmpl
add
lock
add
pop
mov
xchg
sarb
add
or
add
orl
or
imul
add
sub
mov
inc
mov
daa
or
loopne
shll
xorps
adc
idiv
fdiv
pop
je
mov
push
mov
imul
or
inc
and
push
mov
inc
jmp
mov
ja
xchg
lret
mov
das
in
clc
dec
cmc
iret
xor
jmp
and
in
push
fldl
or
xor
or
call
add
sub
ja
nop
pop
xchg
push
sbb
jg
push
inc
add
push
jmp
cmp
cmpsb
jae
jo
lret
loope
mov
outsl
testb
jmp
jmp
xor
pusha
scas
shlb
notl
pop
dec
jb
ds
nop
pop
inc
dec
add
out
mov
mov
pop
jmp
add
or
mov
mov
mov
rcl
rcrb
cmp
fdivrs
xchg
xor
fdivrl
lock
mov
jmp
sbb
ret
inc
in
jmp
xchg
dec
sbb
mov
jne
jp
daa
shl
jo
cs
es
fcoml
add
push
add
xor
loope
push
sub
push
addb
pusha
jl
and
testl
push
fwait
std
jo
add
pop
sub
add
je
xor
xorl
lahf
test
movb
pop
jmp
dec
cld
test
mov
mul
movsb
rorl
jb
popf
icebp
fadds
out
add
xorl
sub
adc
jns
sub
cmpsb
cmp
shlb
int
cmp
aam
jmp
push
pop
repnz
mov
jl
aaa
daa
pop
pop
sub
pop
xor
iret
sub
mov
sub
xchg
inc
popf
jg
pop
mov
rcll
xchg
push
mov
sbb
push
inc
inc
pop
loopne
jne
test
lret
sbbb
cmp
callw
mov
dec
push
pop
dec
push
push
ja
mov
push
push
neg
loopne
inc
mov
xchg
and
sub
leave
push
sub
fs
jmp
ffree
ret
sub
add
jmp
fs
pusha
dec
outsb
popa
adc
dec
jbe
pop
pusha
pop
add
or
test
loop
inc
push
jmp
imul
sub
inc
push
jmp
cmp
and
xor
add
lds
jbe
fsts
loope
in
inc
mov
jle
fidivrs
mov
lock
add
sub
cs
fistl
out
nop
fwait
add
loopne
sub
out
lcall
enter
xor
sbb
add
sub
jmp
jecxz
xchg
push
jno
out
and
mov
xor
aas
pop
shr
xchg
add
jnp
push
hlt
xor
adc
xchg
leave
push
loopne
mov
mov
nop
mov
clc
popf
xchg
test
add
imul
xchg
adc
push
pushw
sbb
fwait
mov
adc
adc
pop
or
pop
mov
inc
test
sub
push
sub
add
std
jne
addr16
in
popa
push
ficompl
add
inc
and
xor
cmp
adc
cmp
mov
js
xor
push
cmpsl
iret
mov
mov
or
mov
jp
clc
loope
hlt
imul
leave
adc
sbb
push
and
in
sti
ret
pop
dec
das
jnp
inc
mov
push
mov
sub
cmpsl
push
mov
mov
jno
lods
xchg
and
add
shll
test
jno
pop
mov
and
mov
adc
jmp
pop
mov
xchg
inc
xor
or
icebp
xchg
shll
mov
and
lahf
add
inc
xchg
jecxz
sub
das
push
mov
loop
xchg
in
push
push
jle
clc
mov
dec
and
sbb
xchg
mov
and
lock
or
cmpsl
ja
imul
inc
push
rorl
xchg
ljmp
popa
push
push
orb
sub
mov
adc
repnz
iret
dec
lods
sub
jmp
xor
mov
into
data16
xchg
sbb
lret
testb
sub
jle
and
fld
inc
scas
lods
popf
jnp
or
jo
adc
xor
dec
jns
mov
ja
neg
scas
call
add
cmp
pop
cltd
adc
call
sub
fmuls
or
mov
fisttpl
dec
in
jecxz
adc
and
mov
mov
sbb
sbb
dec
scas
cmp
mov
push
leave
in
cmp
sti
inc
push
ret
xchg
mov
push
jmp
loop
out
dec
rorl
cwtl
dec
test
mov
jmp
add
sub
jp
filds
xchg
sbb
add
lock
or
push
cmpb
sub
push
popa
repz
push
push
sub
pop
xchg
or
and
dec
push
popf
dec
outsl
inc
cmp
push
in
add
push
or
addr16
orl
or
adc
cmpsl
movl
sub
jmp
mov
clc
lahf
push
cmp
pop
cmp
shll
pop
pop
cltd
les
mov
nop
js
or
rclb
add
xor
pop
inc
jne
lds
push
nop
sbbb
push
sbb
inc
orb
sbb
xchg
addr16
cs
dec
shl
hlt
push
insl
pusha
cmp
add
inc
icebp
push
xor
mov
pop
mov
fadd
mov
add
es
add
mov
pop
je
xor
and
dec
inc
pop
stc
push
inc
jp
xor
push
mov
inc
or
push
cmp
lret
ret
xchg
jge
mov
dec
pop
mov
cwtl
stos
adcb
insb
aaa
dec
or
inc
pushf
or
jb
dec
push
testb
fdivrl
push
or
aad
inc
inc
movsl
mov
push
int
shl
mov
repz
fwait
imul
jmp
push
sbb
lahf
xchg
mov
jmp
sub
xchg
mov
test
jns
push
pusha
mov
dec
stos
fiadds
adc
nop
push
push
mov
dec
icebp
out
push
sub
mov
mov
cmpsb
add
insb
sub
mov
mov
pop
push
push
cmpsl
stc
push
repnz
fimuls
push
mov
sub
rorl
cmpsl
ss
adc
inc
or
fidivrl
lock
mov
sub
cmc
mov
adc
cmp
lret
pop
add
sti
xor
pop
mov
dec
std
pop
inc
pop
test
pop
mov
pop
adc
les
mov
andb
pop
jmp
cmp
xchg
adc
push
jmp
mov
mov
lock
stos
xor
add
push
push
popf
add
and
pop
test
lock
sub
sub
ja
mov
inc
fistpll
or
and
fiadds
dec
loop
fs
pop
mov
adc
push
add
jmp
cwtl
jb
cmp
mov
das
test
mov
addl
es
jns
push
add
push
jb
aad
fcomps
int
jg
sbb
pop
xorb
push
add
mov
and
in
movsl
mov
or
pop
mov
jmp
roll
clc
cmpsl
push
enter
cmp
xor
push
inc
xor
roll
sub
cmp
dec
jmp
pop
mov
negl
daa
lea
and
lret
cs
cmpsl
fwait
or
mov
cs
inc
mov
outsb
mov
pop
rcrl
xor
jae
cmp
cld
pop
lods
ds
out
inc
push
in
inc
les
ds
int3
or
addr16
sbb
cltd
shr
push
xor
push
push
jmp
xlat
pop
es
ret
inc
pusha
xor
xchg
jmp
add
mov
cld
icebp
rorb
jmp
lods
inc
mov
mov
pop
dec
mov
sbb
or
jmp
and
jge
pop
pusha
push
repz
adc
mov
das
arpl
add
jge
das
pop
sub
push
xchg
and
popa
dec
adc
sbb
mov
dec
push
adc
xchg
sub
negb
and
mov
adc
adc
rolb
sbb
adc
js
pushl
scas
popa
xchg
or
jg
call
mov
test
ret
mov
jbe
and
adc
rorb
xchg
dec
cmp
pop
insl
sbb
push
icebp
push
xchg
sub
imulb
xor
lcall
push
sub
pop
jle
les
scas
jecxz
add
mov
fldt
dec
in
imul
fstl
or
push
jl
loop
pop
add
jbe
mov
orb
loopne
pop
jmp
add
popf
jno
inc
addr16
add
rcrb
pop
sub
pop
or
lock
sub
push
adc
cli
std
stos
push
mov
wrmsr
pop
adc
pop
mov
dec
xor
mov
mov
insb
jmp
sub
and
mov
xor
push
pop
in
ret
pop
sbbb
nop
cltd
adc
pop
add
std
jmp
cld
cwtl
lret
adc
mov
pop
loope
pop
xor
sub
dec
adc
fistps
or
dec
mov
or
inc
sub
or
sbb
pop
or
or
and
dec
shr
sbb
aaa
mov
lret
lds
cmp
adc
sbb
clc
sar
mov
mov
mov
sarb
inc
inc
cmp
cmp
repz
cmp
imul
push
ret
pop
fbld
jmp
xchg
adc
or
push
and
pop
or
cwtl
adc
fst
rorb
dec
in
test
les
jge
adc
sub
test
test
scas
jb
cmpl
ljmp
rol
orb
iret
jne
jl
fwait
stc
lods
lods
pop
dec
adc
or
jp
cmp
repnz
ret
pop
lcall
push
pop
mov
and
loope
jmp
repz
add
or
dec
inc
leave
leave
or
push
push
adcb
or
and
lock
pop
mov
jne
pop
and
pop
mov
popa
ljmp
push
sahf
push
rcll
add
sub
test
xchg
stos
aam
stc
filds
mov
dec
lret
les
fs
loopne
xchg
stc
push
das
sub
push
dec
adc
or
cld
pop
enter
cmp
inc
enter
mov
and
pop
insl
sbb
pop
cmc
fldenv
jmp
sbb
mov
iret
and
jne
pop
push
push
popa
cltd
jmp
mov
cmp
and
adc
inc
mov
push
test
insb
and
pusha
cwtl
pop
ja
cld
xor
xchg
add
sbb
or
loop
cmp
ret
cmp
cmc
jl
lds
xor
push
or
cmp
dec
pop
into
repz
add
mov
cmpsl
push
push
or
mov
push
add
movsl
pop
cld
mov
out
pusha
mov
pop
add
xchg
psraw
or
xor
or
mov
push
adc
hlt
inc
add
fmul
pushf
out
sub
mov
mov
enter
jmp
int3
xchg
imul
outsb
dec
inc
add
enter
push
out
pop
imul
sbb
pop
sbb
sbb
adc
cwtl
ds
pop
movsl
push
decb
icebp
push
fs
and
pop
adc
std
inc
or
adc
popf
jge
ret
nop
jmp
mov
mov
xchg
lods
push
jo
xchg
inc
into
xchg
scas
mov
sub
ret
mov
lret
dec
jmp
mov
mov
int
das
cli
xor
mov
add
data16
inc
jne
add
je
orb
xor
push
mov
movl
jg
shrl
jae
ret
xchg
dec
push
cmp
mov
orb
daa
repnz
pop
out
add
xchg
adc
add
dec
push
xchg
inc
push
add
and
nop
in
aam
loopne
loopne
pop
cli
and
add
jle
adc
movsb
bound
mov
loopne
in
or
imul
or
inc
xchg
jl
xchg
push
adc
loop
into
jbe
or
or
mov
push
add
jl
jle
pop
pop
leave
jmp
lret
shl
shlb
add
push
popf
pop
stos
aad
xchg
xchg
add
mov
or
aas
sbb
push
rclb
push
sub
jmp
add
push
adc
pop
dec
mov
pop
sahf
mov
dec
test
or
inc
dec
inc
and
iret
lret
loope
in
jle
dec
mov
clc
icebp
xor
add
push
mov
ja
imul
lcall
mov
sub
or
shll
and
cmc
addb
data16
aas
mov
sbb
push
cmp
sub
sub
cmpsb
rol
mov
dec
pop
xor
imul
int
sub
sub
pop
xchg
sbb
not
or
dec
imul
add
or
or
push
daa
pop
adc
bound
dec
push
mov
cmc
add
xor
outsl
xchg
popa
xor
jle
jmp
sbb
repz
pop
iret
mov
add
add
adc
lock
xlat
add
pop
push
int3
or
dec
push
mov
or
pop
es
xchg
hlt
inc
sbb
out
adc
stos
push
jecxz
adc
mov
or
ds
je
ljmp
in
cmp
mov
or
sub
loopne
add
mov
xor
scas
ds
data16
xor
sbb
cli
and
add
or
lea
int
pop
in
imul
mov
pop
xchg
test
adc
mov
scas
mov
add
jp
shr
loop
adc
mov
push
and
xor
shll
mov
sub
pop
or
test
and
push
inc
imul
andl
xchg
and
jno
xchg
sahf
add
sbb
cmp
jmp
add
add
shrl
shlb
lahf
lock
in
cwtl
add
out
add
outsb
lret
mov
push
pop
clc
pop
dec
mov
arpl
rolb
mov
mov
int
outsb
loopne
mov
and
jo
imull
xor
shl
and
std
dec
pop
loop
add
sbb
push
or
mov
inc
testb
movsb
jmp
mov
dec
dec
rcrl
xchg
and
push
and
dec
imul
inc
arpl
pop
inc
gs
mov
sbb
adc
sub
shll
xor
nop
insl
jae
paddsb
insl
add
mov
push
xor
call
outsl
jmp
pop
and
scas
dec
dec
scas
xchg
pop
mov
pop
icebp
pop
pop
stos
mov
leave
add
sub
mov
jecxz
mov
sub
jb
mov
sahf
dec
roll
mov
jge
xchg
or
mov
jle
stos
mov
add
push
mov
adc
cli
rcl
rorb
mov
sbb
xor
movsl
cmpsl
divb
clc
pop
scas
pop
mov
cmpsb
les
out
pop
xchg
mov
or
dec
dec
xchg
js
sub
push
in
enter
cmpsb
add
push
sub
int3
inc
pop
mov
mov
ret
add
fwait
push
xchg
push
cmp
mov
gs
idivl
es
jmp
cmp
test
dec
popf
aad
xchg
hlt
es
sbb
add
push
add
push
add
jns
jnp
cmpsb
mov
shll
daa
daa
cmpl
leave
mov
das
add
pop
xor
inc
jne
inc
add
or
mov
cmpsl
ja
push
test
xor
or
das
mov
xchg
adcl
push
push
movl
mov
push
mov
xor
push
popa
aaa
mov
scas
daa
jo
mov
adc
sbb
sbb
imul
cli
and
push
out
xor
icebp
jg
push
pop
push
inc
clc
inc
popf
add
inc
or
sbb
insb
xchg
or
adcl
je
in
push
push
jmp
dec
xchg
dec
mov
push
push
inc
mov
jae
and
sbb
push
inc
or
mov
jg
ret
popf
pop
pop
mov
test
out
gs
cmp
sbb
or
jl
sbb
clc
dec
dec
mov
jno
push
pop
or
pop
sbb
pop
ret
jp
xchg
das
add
aaa
push
adc
dec
sbb
xor
mov
add
jmp
cli
and
fdivs
repnz
jg
les
movsb
add
test
out
sar
aaa
outsb
cli
fstpl
sbb
movsl
or
and
pop
mov
mov
sti
jo
fs
lahf
push
inc
nop
das
xor
and
add
pop
aam
mov
pop
push
stos
xchg
out
add
sbb
movsb
repz
mov
push
push
mov
scas
hlt
stc
adc
pop
mov
mov
das
cli
fs
jns
jl
push
sarb
fsubrs
setg
in
repnz
incl
loop
push
push
bound
pop
mov
les
sbb
aas
adc
push
jnp
pusha
sub
pop
movsb
add
imul
mov
shl
or
add
jbe
xchg
or
push
mov
test
or
xor
pop
aad
or
pop
cmc
ljmp
test
pop
and
jp
add
popf
hlt
leave
icebp
xchg
fsts
adc
pop
push
leave
xchg
gs
mov
inc
subl
icebp
jno
push
call
enter
addb
mov
pop
outsb
data16
daa
loopne
lret
ret
repnz
lock
pop
popf
js
mov
insl
mov
rorb
pop
add
or
test
imul
pop
add
dec
in
ds
and
cmp
push
idivl
test
mov
mov
mov
outsl
lcall
mov
dec
test
adc
or
mov
loop
xchg
or
arpl
add
push
push
in
mov
mov
sub
xchg
movl
les
repz
xchg
aaa
and
es
xchg
xor
and
add
not
mov
int
addb
xorl
push
mov
add
jmp
and
add
pop
cmp
sub
mov
adc
clc
pop
cld
adc
ret
pop
mov
imul
and
jg
or
jne
arpl
ret
fsubl
ret
add
mov
or
xchg
test
dec
push
lods
ret
stos
xor
mov
adc
sub
inc
add
cmc
jo
adc
sbb
cs
das
xor
aas
xchg
cmp
fisttpl
inc
repz
addr16
dec
mov
adc
dec
lock
popa
jmp
mov
out
in
jmp
push
insb
pop
arpl
call
sub
pushf
ss
popf
in
push
cld
pop
jmp
sbb
cmp
out
daa
fucompp
pop
pop
push
push
push
jbe
inc
or
dec
inc
out
cltd
mov
lds
lahf
inc
jb
rcll
xorb
bound
mov
clc
pop
add
xor
mov
call
add
xorb
cmc
iret
or
loop
inc
add
add
jns
fimuls
mov
or
pop
not
xor
sub
dec
mov
add
jae
and
or
scas
sbb
adc
in
pop
cmpsb
xor
jmp
sub
jecxz
push
repz
fdivs
pop
or
sbb
cltd
popf
cmc
lret
sarb
sub
stc
pop
mov
popa
popa
jnp
lret
popl
or
fadds
xor
jbe
add
jbe
push
dec
sub
les
imul
jge
in
cmp
push
lret
jge
mov
out
pop
add
sub
pop
jnp
pop
xchg
jne
dec
divb
and
pop
ret
push
cmp
ficomps
lret
or
and
xchg
popa
aas
add
ljmp
repnz
rcr
js
mov
xor
jmp
aam
mov
subl
adc
add
push
insb
sub
and
adc
push
mov
mov
sub
or
adc
stc
movsb
mov
arpl
dec
js
testl
addl
leave
jg
sbb
add
jnp
push
add
sub
jmp
bound
je
add
or
and
mov
hlt
clc
test
and
cld
dec
nop
inc
adc
jns
push
or
adc
adc
mov
dec
dec
and
or
jae
std
inc
or
adc
cmp
cmp
mov
or
cltd
ret
cmp
lds
sub
rorl
popa
inc
push
fwait
mov
cmp
dec
lods
push
lds
cli
inc
cmp
das
dec
loopne
addr16
sbb
sbb
mov
and
and
mov
push
cmp
pop
xchg
int3
repnz
ja
dec
pop
sti
pop
mov
arpl
enter
sub
adc
enter
clc
stos
jnp
repz
mov
int3
loop
pop
jp
stos
mov
push
sub
es
pop
mulb
inc
arpl
jmp
sahf
fcomip
pop
lret
test
les
int
stos
int3
pop
scas
mov
inc
jne
fldt
mov
cmp
ret
imul
movsl
repz
aad
push
push
and
push
jp
push
mov
lock
movsb
xchg
xor
push
inc
jle
pop
add
out
loopne
scas
adc
add
mov
aam
mov
iret
hlt
push
out
or
jp
push
push
pop
pop
push
push
test
xor
and
mov
push
in
push
int
movsl
inc
mov
mov
pop
shlb
mov
and
jp
addr16
adc
xor
pushf
pop
jp
adc
and
xchg
or
lret
inc
shrl
dec
cmp
lock
arpl
rorl
xor
movsl
add
bound
sub
push
inc
fstpt
xchg
adc
cmp
mov
daa
pop
jne
je
push
add
in
lds
add
mov
shlb
push
add
neg
rcrl
pop
pop
das
and
popa
mov
leave
jns
dec
nop
mov
push
and
cmpsl
cmp
pop
adc
jl
sbb
repnz
clc
add
push
in
push
js
aas
icebp
rcl
jg
sub
dec
jb
pop
fadd
out
dec
adc
jo
repz
in
stos
mov
jb
jbe
mov
xor
sub
xchg
scas
mov
inc
mov
push
push
jbe
addl
add
fxch
jmp
int
in
mov
cmc
lret
dec
mov
dec
pop
cmp
adcl
sbb
arpl
and
or
ljmp
push
mov
mov
add
sbb
push
mov
adc
push
in
andb
sbb
std
pop
aas
pop
mov
add
pushf
call
sbb
imul
stos
shl
jmp
push
mov
and
int3
leave
jno
shlb
xorl
xor
push
mov
lea
sbb
xlat
filds
mov
mov
xchg
pusha
jge
push
rcrl
mov
or
stc
orb
mov
cmc
xorl
sti
and
push
dec
jmp
scas
pop
dec
call
xchg
das
mov
mov
mov
outsb
push
testb
mov
cmp
enter
add
adc
pop
arpl
test
cmpsl
sbb
pop
movsl
mov
scas
sbb
xor
pop
add
out
adc
jmp
js
ja
mov
or
pop
cmp
and
or
and
xchg
mov
xchg
cmpsb
out
pop
mov
xor
xchg
cli
mov
hlt
dec
sbb
punpckhbw
push
into
and
mov
repnz
mov
repnz
add
jnp
sub
loop
leave
pop
or
xchg
or
inc
or
cld
xor
fs
into
sub
scas
xchg
cmpsb
xchg
add
jmp
and
mov
xchg
push
add
les
sub
mov
fcomps
inc
not
pop
jb
nop
push
pop
or
adcl
push
sub
stc
les
ficompl
mov
outsb
mov
lret
pop
loope
mov
pop
cmp
push
pop
cld
sbb
inc
les
fwait
aam
insl
loope
or
push
mov
jnp
stos
cmp
mov
push
or
mov
shlb
jnp
and
adc
xchg
lahf
daa
pop
jg
sahf
jg
and
mov
pop
jge
cmp
push
mov
inc
sub
mov
mov
add
mov
add
jae
jb
in
ljmp
loopne
push
pop
loopne
push
add
push
mov
xor
cmp
nop
jmp
ret
or
inc
push
xor
incb
cmp
push
or
or
ja
cmp
push
outsb
lahf
inc
adc
pop
test
mov
jge
fistpl
nop
lods
stos
cmp
stos
pop
loope
jl
mov
push
hlt
cmp
sbb
hlt
cmc
mov
test
push
mov
adc
out
lds
adc
movl
mov
fiadds
push
fs
sub
rcrb
popa
decl
add
aaa
mov
mov
push
mov
dec
xchg
or
cmp
jnp
and
dec
and
xchg
dec
sbbl
mov
sub
repnz
not
fistpll
xor
or
dec
dec
lret
cli
push
js
mov
jo
jbe
push
pop
sub
sub
or
addr16
pop
call
mov
cmc
sub
out
mov
subb
jno
clc
ds
lret
notl
jbe
jbe
cld
out
adcb
xlat
mov
mov
test
stos
cmp
cli
aam
andb
sub
sahf
out
dec
mov
clc
sarb
and
xchg
pusha
cld
jne
push
jmp
dec
and
pop
and
fwait
pop
sbb
xor
not
jno
push
loopne
jmp
cmc
leave
or
jp
pop
xor
fimull
xchg
push
mov
ret
sbb
push
jge
xlat
ds
or
pop
icebp
into
push
ljmp
or
push
mov
loop
adc
xor
mov
icebp
pusha
nop
push
add
fiaddl
and
pop
pop
ja
or
out
mov
addr16
push
ret
push
sbb
loopne
daa
repz
aam
add
cmp
in
test
shr
data16
add
lea
jo
mov
xchg
inc
jmp
jmp
add
cltd
jg
addr16
xchg
mov
in
pop
sub
lea
mov
cmp
xchg
clc
add
mov
add
jne
xchg
sub
subl
sub
push
pop
or
pop
ds
rolb
pop
xlat
xchg
pop
add
ss
xchg
in
fisubrl
or
out
bound
pop
cwtl
add
jbe
pop
push
insb
and
xorb
mov
and
push
scas
add
mov
shl
add
push
jmp
adc
dec
clc
aam
test
icebp
lret
mov
push
adc
into
pop
lods
jno
mov
mov
icebp
and
mov
sub
add
dec
pop
or
lahf
push
scas
add
sbb
and
xor
add
pop
pop
cmp
aad
and
pusha
into
adc
jle
xchg
jb
sub
or
daa
cmp
insb
add
jae
sahf
cmp
xchg
push
sbb
nop
fistps
sub
pop
adc
push
pop
stos
rolb
int
xor
cld
outsb
adc
cmp
adc
xor
xchg
lods
fbld
sub
movswl
jno
jle
vmread
orb
mov
jmp
in
add
add
mov
gs
icebp
pop
shll
adc
test
int3
jns
xchg
inc
popf
andb
add
jmp
mov
jge
test
pop
sarb
ds
ret
data16
add
mov
arpl
es
or
test
adc
sbb
in
xchg
mov
fisubs
mov
adc
outsb
push
and
inc
mov
mov
inc
xchg
xor
lcall
popf
pop
data16
push
mov
or
nop
sub
xchg
pop
dec
js
sbb
sub
jmp
mov
cmpsb
aas
shr
add
ret
jmp
sti
sahf
imul
sbbb
mov
and
outsb
pusha
push
mov
not
call
out
adc
data16
ds
push
add
push
xorps
sub
inc
scas
xchg
lds
mov
jb
decl
jmp
mov
push
add
add
sub
jbe
mov
xor
pop
hlt
xor
nop
and
pusha
mov
lahf
les
imul
jae
shlb
in
push
adc
pop
mov
jmp
mov
jmp
jmp
pop
add
stc
pop
push
scas
mov
add
repz
clc
sbb
fadds
mov
sti
int3
inc
pop
jp
xchg
dec
dec
and
lock
push
es
cld
sub
jns
xchg
movsl
sub
pop
push
nop
xor
pop
push
push
pop
fcomps
xchg
out
in
xor
adc
push
movsb
dec
jg
je
push
xchg
mov
sbb
inc
jge
pop
pop
push
std
shl
ljmp
scas
shl
adc
dec
jo
in
test
and
fwait
das
jmp
pop
xor
ljmp
into
fsubr
call
shl
inc
ljmp
jp
test
jp
or
add
sbb
popl
lock
dec
mov
xorb
push
es
add
bound
insb
stos
push
pop
xor
mov
mov
dec
and
or
push
jl
add
out
std
out
jp
add
adc
addb
xor
pop
je
and
jmp
fdivl
lods
je
or
repz
sbb
dec
ret
mov
imul
gs
cmp
jmp
testl
pop
in
jl
dec
stos
xor
push
sub
cmp
jecxz
popa
outsb
xchg
not
int
and
in
push
dec
push
or
and
cmc
xchg
jns
mov
in
mov
push
xor
rolb
mov
addr16
adc
sub
adc
test
xchg
das
xchg
cmpsl
jecxz
ljmp
mov
pop
xchg
xor
inc
insl
pop
in
mov
dec
sub
mov
inc
or
xchg
mov
cmp
and
adc
dec
push
inc
xor
pop
jbe
sub
mov
sbb
xchg
popa
push
dec
or
add
push
jmp
xor
adc
add
mov
sub
out
pop
xor
pop
cwtl
push
les
add
mov
mov
icebp
not
xor
leave
into
mov
xor
rcl
inc
mov
sub
outsl
ja
and
es
pop
popl
leave
addr16
lret
sub
sub
sbb
sub
jns
adc
push
popf
jp
push
push
mov
and
jo
mov
lods
loope
xchg
xor
adc
or
or
push
jo
xchg
cmp
push
mov
cwtl
inc
imul
test
negl
out
or
fwait
sub
sbb
xchg
test
adc
and
cmp
in
addl
movsl
imul
mov
shll
daa
pop
ds
adc
or
push
jmp
mov
jge
mov
sarb
dec
jle
aaa
stc
cmpb
xchg
mov
es
adc
mulb
sub
lahf
xchg
or
mov
test
or
sbb
repnz
pop
jmp
popa
xchg
pop
mov
notl
dec
jmp
cmp
iret
mov
mov
mov
enter
cwtl
icebp
notl
push
ljmp
jp
sub
insb
add
sub
lods
lahf
popa
sbb
inc
orb
push
xor
test
mov
fldl
inc
push
gs
clc
loope
sbb
jmp
ja
push
adc
pop
or
pop
xchg
and
cmp
cld
andl
adcl
xor
pushf
pop
leave
sahf
mov
xchg
sub
pop
pop
insb
in
movsb
inc
lret
mov
xor
sbb
sbbl
xchg
adc
int
and
push
stos
in
rcr
mov
sub
push
add
or
sbb
mov
or
ret
sub
int
and
dec
push
xor
or
loope
mov
stos
cmp
push
cmpsl
xchg
std
cli
popa
dec
adc
pop
ret
dec
mov
sub
sbb
push
xchg
ret
lret
pop
or
add
cli
sub
sub
push
call
cmp
cld
rcr
adc
inc
inc
cld
inc
pop
jp
insl
adc
cltd
mov
outsb
xor
aad
adc
sub
dec
cwtl
jmp
ret
mov
lods
cmpsl
xchg
mov
daa
pop
shl
ret
add
and
pop
leave
jge
add
fadds
hlt
add
xchg
add
ss
arpl
jmp
inc
inc
add
rolb
jnp
pop
cmpsb
sarl
mov
add
stos
cmp
dec
add
push
sub
pop
shr
adc
testb
add
mov
or
add
or
push
pop
mov
or
fwait
push
je
add
ss
dec
mov
ret
adc
add
sub
icebp
pushf
mov
test
pop
std
dec
mov
fbstp
daa
add
add
add
icebp
dec
ja
adc
dec
inc
sbb
cli
jle
cmp
dec
add
sarb
rol
gs
sti
scas
in
and
jmp
sbbb
adc
inc
push
pop
pop
pop
add
sub
sub
and
lock
pop
jg
sbb
push
jge
sbbl
rcll
mov
dec
xorb
loopne
or
pusha
daa
push
mov
rcr
jp
push
out
mov
enter
cwtl
inc
or
gs
faddl
shr
pop
sub
orl
and
je
push
mov
cmp
xchg
pop
lea
and
inc
aas
xchg
pop
push
push
bound
bsf
cmp
icebp
jmp
mov
mov
insl
adc
imul
and
mov
adc
mov
fsubs
pop
push
int
inc
inc
inc
cmp
add
inc
mov
push
jge
cmp
addr16
out
sahf
xor
rclb
fldenv
js
or
or
popf
push
mov
jbe
call
pop
fidivl
adcb
adc
btc
pop
inc
cmp
and
jmp
cmp
jle
mov
inc
pop
mov
daa
cli
movsl
adc
fstpl
les
mov
jmp
dec
ss
bound
in
push
notb
out
imul
push
loop
and
mov
sub
push
push
stc
pop
cmp
subb
jbe
rclb
add
mov
leave
mov
mov
nop
jl
neg
sbb
ljmp
xor
fildl
ret
cmpsl
sub
pop
mov
fcmove
dec
push
popf
outsl
scas
lret
dec
jb
add
int3
push
dec
mov
cmp
fldcw
ds
cmp
push
psubusw
pusha
je
sbb
push
or
dec
jmp
imul
jp
jl
das
mov
xchg
loope
ljmp
xor
adc
inc
subb
jnp
mov
dec
jmp
lds
and
dec
add
test
and
das
scas
sub
adcb
lahf
jo
xlat
push
push
sbb
or
out
jl
dec
jge
pusha
or
outsb
inc
pop
push
sub
cmp
and
jae
inc
sub
jge
dec
je
and
or
out
or
mov
mov
add
mov
vxorpd
adc
push
add
mov
das
cmp
fdivrp
cmp
fldt
cmp
pop
cmp
or
jecxz
mov
jo
das
cmc
subb
mov
outsl
jmp
adc
pop
or
out
push
cld
jbe
leave
xor
and
leave
sub
push
mov
test
fists
ja
repnz
cwtl
push
stc
clc
jnp
mov
inc
pop
dec
repz
sbb
push
rorb
test
or
jo
lcall
andb
mov
jae
pop
fisttps
hlt
ret
add
dec
imul
adc
push
jge
test
sub
mov
rorl
sub
push
fstpl
xchg
ret
or
xor
lahf
jo
es
dec
cmpsl
mov
pop
ret
lock
rol
jo
jp
ret
mov
outsb
rolb
xorb
inc
fists
or
cmp
pop
or
xor
nop
loopne
lock
clc
adc
pop
push
mov
stc
jno
push
or
adc
cld
dec
movsl
push
insb
mov
push
mov
dec
mov
sbb
mov
hlt
and
push
pop
dec
cmc
or
sti
sub
negl
aam
loope
je
adc
lcall
lds
ret
rorl
dec
push
lds
mov
movhps
mov
movsb
xchg
ret
outsl
test
sub
jmp
stos
enter
adc
roll
scas
enter
jae
leave
out
sub
sub
sub
loop
cmp
ficomps
outsl
sub
push
rcrb
add
mov
filds
ja
punpckhbw
jg
jne
xchg
pop
paddusw
insb
pop
adc
push
pop
pop
repnz
subb
or
xorb
jb
into
sar
xor
mov
push
push
push
push
mov
mov
cmp
sbb
inc
jg
or
call
dec
stos
add
stos
xor
ficoms
pop
push
mov
sub
loopne
je
mov
sbb
mov
imul
xchg
scas
pushf
mov
lods
ljmp
cmp
pop
push
fldl
sub
pop
xchg
jp
out
mov
addl
cwtl
push
pop
aad
decl
and
xor
faddp
out
or
jo
je
inc
xor
or
pop
out
fdiv
cmc
mov
mov
or
ss
gs
sar
shll
cmp
rclb
jb
pop
popa
dec
inc
cwtl
jo
ret
cld
mov
ljmp
push
movsb
sub
shr
ret
outsl
xchg
add
movsl
dec
ds
push
dec
sbb
push
pop
sbb
jne
repz
xor
pusha
add
pop
and
adc
insb
adcl
jmp
jle
in
xchg
test
dec
data16
sti
sub
scas
sub
mov
dec
jmp
rcl
inc
pop
lods
fisttps
ret
mov
pop
lods
stos
dec
ds
xchg
std
popf
test
xchg
add
inc
mov
sub
ja
add
aad
cltd
or
in
stos
xchg
not
aam
call
and
pop
xchg
push
mov
sahf
xchg
sbb
push
sbbb
mov
add
cmpsb
jge
sub
mov
loop
test
rcr
adc
push
and
hlt
out
cltd
push
cmp
rcl
out
add
xlat
js
mov
in
or
pop
sbb
jmp
add
les
inc
add
xor
sbb
pop
sub
shlb
nop
aad
out
or
push
int
lea
jmp
push
in
add
mov
add
inc
mov
or
add
add
inc
jmp
les
cmc
xor
lock
ds
push
je
arpl
push
or
dec
je
sub
add
ffreep
out
add
jb
outsb
add
mov
jmp
mov
xchg
clc
sbb
cmp
enter
add
push
mov
jl
push
cmp
sub
adc
lea
inc
xor
pop
add
popa
sub
push
stos
or
adc
xchg
nop
lcall
filds
cs
jns
pop
add
add
ss
mov
add
jno
cmp
inc
add
icebp
repz
xor
add
mov
js
jno
xchg
cmp
cmp
sti
in
aam
xchg
cmpsl
leave
mov
fisttpll
jge
pop
or
pop
xor
push
daa
mov
fisttpll
sub
dec
mov
shl
push
push
push
mov
orb
outsl
sub
add
aaa
pop
push
insl
xchg
std
cmp
push
push
push
out
nop
movb
or
lock
xchg
fnsave
pop
jmp
cwtl
ja
jo,pt
push
fsts
ret
mov
or
fsubrp
xchg
jmp
jecxz
fdivrs
movlps
sub
arpl
jmp
cmp
mov
cld
xor
dec
jmp
lret
arpl
xchg
js
dec
mov
or
pop
mov
cmpsb
shl
push
iret
andb
lahf
sub
idivl
and
jnp
xor
lds
cli
add
orl
or
icebp
sarl
daa
add
je
inc
out
les
lds
xchg
outsb
cmpsb
dec
mov
pop
mov
dec
pop
out
sub
sub
push
add
pusha
outsl
imul
rcrb
add
add
or
rcrb
dec
or
xor
xchg
insl
cmp
shlb
and
std
in
mov
je
add
xchg
and
or
mov
jb
mov
pop
lret
push
inc
mov
insl
inc
add
ret
add
fmuls
mov
sub
stos
loop
pop
js
jg
fcomps
xchg
inc
mov
aas
mov
jmp
outsl
repnz
mov
mov
jmp
stc
pop
xor
pop
shl
icebp
add
push
cmpsb
or
adc
shl
and
mov
imul
and
ja
outsb
pop
dec
jmp
xchg
inc
outsb
je
stc
and
popa
add
or
sahf
cld
ret
adc
daa
fldl
mov
outsb
xor
push
push
popf
jae
insb
sbb
adc
push
cld
or
pop
test
jmp
mov
dec
cwtl
jo
dec
int
or
sbb
daa
outsl
pusha
push
sub
lret
xor
cs
dec
sahf
ljmp
rol
lahf
ja
test
lret
jmp
dec
repnz
xor
mov
push
cmp
xchg
inc
ss
cmp
insl
stos
xchg
mov
out
inc
jmp
push
push
ss
cmp
sub
mov
cmpsl
and
sub
out
sub
jmp
xchg
xchg
push
pop
or
push
lods
adc
push
pop
xchg
aas
pop
xchg
or
ffree
pop
pushf
and
mov
sarl
std
push
and
jecxz
test
lds
in
fwait
pop
pusha
dec
out
loopne
and
insb
add
mov
subb
jg
mov
dec
jne
jb
sub
daa
loopne
pop
mov
les
and
mov
mov
push
and
in
adc
xchg
jmp
sbb
jb
sub
pop
cmpsb
jle
dec
pusha
imul
jge
repz
sub
and
addr16
push
inc
add
jg
fimull
or
add
jmp
aad
dec
popa
adc
jne
jle
mov
outsl
push
sbb
int3
in
sub
dec
fstl
push
sti
inc
movsb
or
test
in
enter
xor
push
xor
inc
xchg
rol
push
xor
push
ljmp
ror
or
test
rclb
nop
add
test
or
jmp
not
xchg
add
inc
stc
mov
mov
cmp
cmp
sub
mov
mov
bound
ficomps
lahf
out
dec
cmp
ffreep
sub
jecxz
and
pop
aam
fstps
loope
iret
lods
mov
add
int3
mov
into
aam
xchg
and
pop
jge
add
adc
adc
sbbl
jnp
mov
test
loopne
push
sub
iret
pop
mov
add
pusha
gs
inc
pushf
adc
xor
dec
les
stos
jmp
inc
sti
add
outsl
sub
add
inc
dec
jle
or
pop
dec
lahf
imul
outsb
inc
out
lock
sti
push
cmp
das
inc
leave
in
inc
lds
scas
repnz
pop
add
stc
sti
jmp
adc
sbb
or
stc
lds
add
jle
xchg
add
add
stos
into
ja
jmp
cmc
pop
sbb
push
ljmp
test
nop
mov
add
jns
mov
cli
sub
jecxz
cld
push
push
cmpsb
xor
or
push
mov
cmp
out
or
stos
js
popf
fnstsw
xor
mov
aas
hlt
dec
lods
mov
lret
lods
je
sub
mov
push
sbb
ljmp
icebp
pop
dec
inc
cwtl
lret
push
rcl
cmpsl
jl
jg
out
sbb
pusha
push
sub
and
mov
push
movsl
lods
pop
push
inc
test
fildll
mov
xchg
push
push
lods
leave
outsb
adc
cmpsb
loop
subl
mov
add
and
sub
push
and
jo
sub
inc
or
jnp
das
inc
ficoml
sti
gs
repz
es
xchg
frstor
popa
lds
cmp
ret
push
mov
jmp
sub
cmp
adc
pop
stos
test
scas
test
jae
pop
push
add
mov
inc
xchg
dec
test
mov
cs
sub
push
add
js
pop
mov
cld
data16
sub
loope
cld
push
movsb
add
int3
in
loopne
dec
imul
in
lods
pop
addr16
in
mov
cmp
daa
clc
xchg
loopne
inc
pop
push
pop
push
test
mov
stc
clc
cmp
mov
jne
or
dec
sub
sbb
sub
inc
or
sub
aaa
lcall
js
mov
clc
mov
adc
xor
push
add
adc
lods
adc
cmp
cmovns
icebp
pop
and
mov
pop
jg
inc
mov
arpl
pop
jbe
int
add
clc
xor
pop
out
dec
sbbl
ja
push
mov
xor
jmp
xlat
mov
jmp
repz
je
sbb
std
pop
jl
int
data16
loope
xor
sub
out
pop
repnz
inc
inc
dec
xor
inc
call
jb
mov
push
shr
fs
adc
add
insb
mov
inc
jl
insl
leave
hlt
mov
and
aad
in
mov
cmpsb
sub
mov
addr16
lret
push
jnp
fcomps
mov
ds
push
lds
mov
lahf
sbb
push
add
xor
or
pop
cwtl
sbb
jmp
popf
push
xchg
out
sub
rclb
in
push
mov
xchg
mov
pop
imul
jb
rcl
jne
xchg
leave
fmull
sub
and
push
push
xor
icebp
mov
sbb
xchg
cmp
add
add
jp
mov
js
test
pop
shll
out
mov
repz
imul
in
rcrl
mov
movsl
dec
sbb
jns
mov
jo
lret
dec
inc
lock
add
scas
push
dec
jle
and
repnz
cmpb
cmp
cmp
jge
nop
js
into
daa
neg
sbb
xchg
cwtl
dec
pop
inc
sub
orl
les
mov
xchg
mull
orl
pop
xchg
neg
xor
ljmp
push
nop
and
or
ss
daa
or
xor
int3
jl
mov
or
dec
addl
out
adcb
outsb
jmp
jb
cwtl
inc
jmp
sub
add
push
ljmp
dec
push
arpl
mov
test
mov
sbb
dec
push
lock
add
int3
cwtl
cmpb
lret
inc
mov
jbe
js
imul
add
cmpsl
dec
inc
sub
sahf
out
cmp
push
pop
mov
ss
addr16
sub
nop
dec
jo
addb
mov
test
jnp
rorb
faddl
jmp
test
inc
pop
fnsave
adc
jae
pop
sbb
iret
pusha
insb
and
jp
dec
ret
aam
dec
and
push
scas
mov
je
sarl
sub
jae
cmpb
mov
cmp
movsl
nop
inc
rolb
ja
mov
pop
lds
loop
adc
cli
mov
insl
or
jno
and
popf
imul
mov
std
mov
es
mov
add
repz
rol
cmp
ljmp
mov
add
into
adc
xor
pushf
and
ljmp
jecxz
pop
movsl
int3
pop
pop
lret
jp
dec
and
add
sub
sbb
and
add
jecxz
lock
pop
and
iret
add
jb
add
push
push
cmp
or
jmp
add
mov
push
dec
shrl
add
loope
cmc
jle
pop
out
fs
loope
imul
lods
mov
dec
and
ret
push
fsubrs
or
xchg
dec
mull
ljmp
loop
xchg
pop
dec
jns
sbb
test
adc
ss
leave
in
sbb
cmp
cli
cmp
sbbl
sub
clc
and
mov
clc
push
adc
and
push
pop
call
push
pop
and
inc
fucom
lea
jge
ss
jns
daa
testl
fsts
dec
push
ret
xchg
lret
repnz
sbb
pop
xchg
mov
mov
pop
das
push
repnz
jl
and
mov
mov
jno
shll
jnp
mull
add
push
jmp
jmp
or
out
cmpl
insl
or
sbb
or
adc
negb
shl
add
in
int3
cmc
pop
add
jmp
icebp
scas
mov
push
adc
cwtl
sub
dec
push
dec
push
jmp
sarl
in
mov
mov
imul
or
shl
add
stc
cmp
pop
pop
add
fistps
and
xlat
add
addl
xchg
sbb
xor
or
jbe
sub
mov
sbb
fsts
imul
dec
js
sbb
or
cs
mov
leave
mov
adc
test
mov
add
cld
repnz
pop
xor
ja
icebp
inc
bswap
mov
femms
inc
mov
dec
jmp
cmc
sub
clc
mov
jo
mov
cmp
pop
inc
or
mov
enter
dec
outsl
add
hlt
push
dec
xchg
cmp
int3
push
in
pop
ljmp
cmpsl
jle
fsubr
iret
mov
imul
jae
fs
call
scas
ja
sub
icebp
jp
orl
inc
cltd
add
push
nop
dec
or
inc
pslld
xor
add
sbb
push
push
pop
xchg
sysenter
xchg
add
jmp
stos
xchg
inc
xchg
les
xor
out
fnop
jecxz
mov
mov
mov
sub
push
sub
leave
and
inc
ds
or
jg
xor
mov
imul
pushl
movsl
sbb
sbb
mov
insb
test
call
lret
mov
jmp
adc
dec
daa
jg
fdivrp
shl
push
bound
mov
call
or
mov
inc
cmpsb
pop
sti
sbb
xchg
sti
rorb
cmp
lret
sbb
inc
mov
inc
xor
jno
mov
sbb
out
hlt
xor
outsb
cs
or
pop
add
testb
push
pop
inc
push
xchg
pcmpgtb
dec
hlt
aaa
sub
push
insb
or
loope
pusha
push
ja
mov
arpl
and
sub
mov
xchg
lret
dec
adc
lahf
cs
or
scas
jbe
roll
add
rep
fbstp
pop
sub
or
test
imul
jg
out
xchg
mov
dec
stos
in
enter
jb
push
or
adcb
out
pop
outsb
std
jmp
lahf
je
push
test
mov
jg
negl
inc
push
lahf
lods
add
add
mov
dec
cs
faddl
cwtl
int3
dec
push
add
push
pop
ljmp
neg
movlps
test
test
mov
mov
rcll
stos
add
mov
jmp
out
jl
repnz
rolb
jp
and
movl
scas
sbbl
and
xchg
je
rolb
or
jl
popf
and
jmp
inc
add
mov
mov
xchg
pop
lock
outsl
imul
sbb
dec
jg
outsl
sub
hlt
sahf
iret
add
pop
push
sbb
mov
xchg
dec
cmpb
stos
movsl
std
cwtl
js
test
adc
pop
testl
mov
xor
cmp
fsubp
fs
pop
sub
jb
cwtl
pop
jp
cwtl
in
xchg
adc
push
out
loop
in
pop
cmp
lret
les
or
jnp
mulb
aaa
aam
dec
jb
xchg
repnz
mov
hlt
inc
mov
imul
aam
xor
cmp
dec
sub
cmp
pop
int
es
icebp
mov
call
scas
mov
sub
xlat
add
lock
mov
or
mov
call
sub
shlb
mov
mov
addr16
sub
out
adc
daa
pop
fimuls
sbb
cmpsl
das
pmaxub
subb
jg,pt
xchg
jbe
lahf
stos
xchg
sbbb
dec
arpl
ret
mov
roll
dec
sub
test
das
sub
scas
insl
push
in
outsl
cwtl
xchg
in
daa
add
outsl
addl
inc
pusha
ret
add
and
mov
mov
push
mov
popa
add
or
insl
xor
jmp
ja
pop
cld
sbb
push
lret
stc
mov
gs
daa
pop
icebp
leave
push
shl
gs
je
pop
mov
pop
jmp
daa
ret
adc
leave
pop
inc
jno
pusha
test
xchg
dec
xor
or
clc
or
call
sub
pushfw
mov
push
add
test
enter
in
mov
idivb
fadds
in
inc
lods
ret
dec
clc
jns
call
mov
add
ficoms
xchg
xor
dec
dec
cli
imul
call
jns
nop
fstl
out
and
sub
lret
fildll
pusha
push
sahf
mov
pop
std
rol
xor
pop
sub
push
sbb
push
sub
inc
adc
or
mov
pusha
rorb
xchg
adc
scas
mov
jb
adcb
loopne
inc
jmp
repz
jnp
cmp
sbb
and
and
testl
dec
jp
inc
add
jmp
fmulp
pop
mov
add
loop
call
xchg
add
add
add
adc
sbb
pop
ret
lea
mov
inc
dec
icebp
sti
pop
les
push
repnz
test
out
xor
inc
je
dec
hlt
bound
jmp
or
add
cmc
or
mov
iret
test
icebp
add
nop
cmp
pop
inc
fnstenv
inc
jmp
add
or
push
and
and
or
fs
das
fists
dec
pop
jmp
mov
bound
xlat
stos
sub
sub
sbb
jge
aam
jg
fldenv
and
movsl
or
test
jle
and
mov
jge
inc
sti
add
mov
xchg
out
sub
mov
test
push
jb
adc
dec
js
ljmp
fbld
pop
adc
imulb
dec
es
in
sbb
pop
pop
lds
sbb
dec
imul
or
adcl
pop
sub
cmp
call
push
aas
idivb
filds
out
inc
repnz
adc
scas
out
xchg
mov
push
jmp
popa
push
aam
inc
insl
jmp
sti
aam
mov
lret
lock
repnz
push
leave
aad
clc
sarl
fstp
inc
nop
stc
fsts
pop
xchg
pop
ja
es
jo
inc
jbe
mov
and
jge
inc
imul
and
dec
ljmp
cmp
xor
jne
outsb
sbb
sar
mov
mov
push
dec
xchg
ret
jb
pop
or
mov
imul
rcrb
inc
add
jle
in
aam
jmp
push
fisubs
push
int3
fisttpl
sub
mov
out
and
sub
sti
mov
jmp
dec
cmpb
push
sub
adc
and
movsb
push
dec
or
adc
stc
and
test
add
add
cld
xor
cmp
sub
call
mov
loopne
xchg
inc
sbb
int3
mov
loope
pop
mov
scas
leave
pop
xor
xchg
add
and
pop
loope
jmp
inc
add
jb
loopne
orb
in
imul
mov
inc
rorl
mov
adc
inc
clc
xor
sub
jmp
inc
and
pop
mov
pop
push
mov
xchg
in
sbb
int
jb
fcmove
or
jl
pop
lahf
add
add
sub
mov
add
out
dec
andb
ret
orb
out
pop
xchg
int
daa
testb
sub
or
jns
insl
aam
pop
xor
jmp
inc
mov
or
lret
add
inc
loope
clc
loop
pusha
jmp
add
inc
lods
adcl
sub
mov
fiaddl
insb
mov
pushf
mov
add
shll
push
ja
xchg
lahf
testl
or
dec
dec
xchg
sbb
push
add
mull
cs
dec
pop
inc
popf
fs
mov
lret
mov
or
xor
cwtl
xor
aaa
dec
loop
inc
cwtl
jmp
mov
inc
test
sub
sub
pop
mov
adc
push
andb
sbb
fcomip
insb
cwtl
mov
pop
cmpsb
arpl
ffreep
add
add
jbe
shlb
add
pop
push
jnp
out
pop
pop
jge
pop
jne
clc
dec
adc
cld
jae
sub
sbb
and
mov
jmp
mov
mov
pop
pop
and
dec
push
jge
mov
push
fdivrs
adc
xor
neg
mov
or
inc
add
dec
das
mov
test
push
push
jb
push
push
mov
dec
test
es
movsl
ja
mov
scas
adc
in
sub
in
or
jmp
cmc
pop
das
mov
scas
insl
xchg
and
idivb
daa
insb
xor
adc
dec
xchg
dec
clc
pushf
stos
iret
mulb
pop
xor
int
cli
pusha
mov
mov
arpl
sbb
sbb
mov
pop
out
sub
jno
fmull
outsb
push
jnp
xchg
sbb
inc
jmp
mov
jae
cld
lods
xchg
pop
xor
sarl
iret
ret
xchg
pop
mov
stos
jo
mov
enter
shr
jno
inc
add
or
dec
addb
iret
jg
sahf
les
sahf
jbe
repnz
cmp
shrb
repnz
test
mov
mov
or
roll
jns
fcompl
mov
add
fucomip
mov
lret
sub
stc
xor
scas
push
pop
adc
dec
push
jecxz
add
jg
mov
adc
cli
mov
or
icebp
dec
push
cmp
or
dec
pop
int3
in
pop
inc
push
subb
cmp
pop
pop
mov
test
je
cld
and
xlat
icebp
in
mov
cmp
pop
mov
sub
or
cmp
cli
or
add
mov
and
fldl
or
arpl
dec
outsw
pusha
add
out
test
lret
scas
pusha
icebp
jmp
xor
jmp
inc
push
test
or
cltd
dec
mov
xor
cld
add
ja
pop
mov
add
and
mov
jno
repz
outsl
cmpsl
inc
dec
scas
mov
mov
call
dec
outsb
jae
push
loope
dec
mov
neg
nop
int3
hlt
popf
xorb
pop
pop
sub
push
add
jecxz
add
pop
mov
mov
mov
push
adc
adc
divb
and
loop
mov
xor
cmp
lahf
cltd
adcl
lahf
inc
pop
lods
lds
shrb
inc
sub
decb
xchg
in
cli
roll
add
repz
push
mov
lock
jmp
and
adc
cmp
sbb
xchg
sub
inc
subb
mov
fs
mov
jne
scas
pop
inc
inc
and
popa
out
jmp
add
jmp
adc
xor
popa
out
jge
sub
cli
loopne
inc
sbb
rcr
push
jbe
sub
add
xor
jge
xor
in
sub
les
int3
bound
mov
sbb
push
push
jmp
insb
mov
pop
ret
jmp
insl
stos
jp
shrl
adc
ret
add
cmp
repz
shld
push
gs
mov
es
pop
add
mov
ficomps
xorl
adc
call
add
out
ljmp
push
dec
repz
pop
jb
mov
push
xchg
in
xchg
push
mov
mov
fsub
sub
adc
enter
dec
or
dec
mov
ds
or
add
pusha
insl
pop
scas
popf
shll
push
pop
fldcw
mov
push
jmp
jnp
movl
ds
add
sub
jo
sti
dec
outsl
inc
das
push
imul
mov
sub
jl
daa
lahf
cmc
pop
add
lret
sbb
add
add
mov
xor
jmp
xlat
xchg
cli
movsb
jmp
add
jl
jbe
push
les
int
ret
sub
adc
push
mov
dec
add
sub
popf
rorb
addb
nop
adc
push
inc
pop
sbb
or
xchg
stos
js
les
or
inc
sub
sub
push
push
adc
lahf
inc
loopne
mov
shl
negl
jmp
add
insb
mov
orb
fldcw
out
lods
in
and
or
push
push
push
in
add
sti
fldcw
jl
mov
sbb
mov
dec
ds
push
xchg
test
out
cmp
pusha
and
xchg
dec
in
lds
rcrb
jns
sbb
fucom
lds
daa
pop
test
ret
pop
test
not
pushf
fists
inc
lods
and
adc
repnz
rolb
stos
jno
lods
pop
xchg
adc
decb
push
dec
fmull
shl
push
jmp
out
push
mov
repnz
stos
pop
sub
or
fisubs
sub
sbb
jne
arpl
adc
aam
loopne
ret
pop
xor
mov
cmpl
lds
adc
sub
pop
mov
test
xor
imul
inc
pop
hlt
fisttpll
jo
mov
jnp
inc
sarb
sbb
add
mov
orb
mov
push
inc
jmp
hlt
out
mov
xchg
out
add
aam
xor
xchg
mov
xor
or
sbb
and
sbb
fidivrl
out
shlb
mov
mov
sbb
arpl
push
pop
aas
mov
add
neg
add
outsb
or
add
mov
out
mov
fdivl
test
mov
xchg
mov
push
mov
sub
aam
or
enter
add
pop
out
insb
inc
and
sbbb
clc
or
jmp
sti
repnz
sahf
das
hlt
push
in
ja,pt
add
aas
xlat
dec
add
loop
or
pop
add
negl
fidivrl
xchg
test
sub
or
mov
rol
in
leave
or
jle
xor
jle
fwait
push
imul
nop
pop
scas
jbe
pop
dec
pop
cli
mov
xchg
pop
push
pop
or
insl
add
cmc
mov
call
shrl
mov
push
lock
imulb
shl
hlt
js
and
jmp
in
fwait
das
lcall
enter
sbb
pop
pop
out
push
jbe
pop
xchg
jle
leave
clc
lcall
xchg
adc
xchg
sub
xchg
and
xchg
ja
shlb
push
inc
dec
add
pop
dec
xchg
pop
cld
sahf
out
rcl
scas
add
sarb
loop
arpl
movsl
sub
das
push
aaa
or
adc
xchg
xor
xchg
push
into
push
inc
lods
filds
push
insl
je
or
inc
lret
lds
mov
push
pop
ficoml
push
push
pop
imul
push
in
pusha
adc
fstps
jecxz
add
inc
xor
rcll
jmp
mov
dec
sti
in
cmpsb
add
call
mov
inc
ss
cmp
loop
add
es
fnsaves
add
cmp
jg
out
sti
push
dec
or
testl
repnz
push
cld
cmp
pop
sbb
sbb
ret
flds
les
repz
in
incb
xlat
push
bound
rolb
add
pop
sub
mov
sub
xchg
xchg
fldcw
ret
test
js
push
push
xor
enter
mov
cmc
jbe
jae
es
into
or
or
xor
or
inc
shrb
adc
sub
jno
pop
shlb
outsl
dec
pop
nop
add
lret
jnp
std
xchg
sub
into
pop
icebp
cld
test
jmp
cmp
mov
pop
pushw
adc
leave
shrb
mov
dec
push
push
inc
mov
cmp
lret
in
in
mov
add
add
jmp
dec
xchg
jnp
int3
lock
mov
rcl
out
mov
sub
bound
or
lahf
fnstenv
rorb
dec
in
jge
or
popa
daa
xlat
ret
fmulp
test
gs
push
or
adc
faddl
add
or
mov
mov
xor
int
sub
xlat
icebp
paddsb
push
lret
mov
repz
or
scas
jno
dec
push
cli
into
push
cli
adc
es
sub
inc
addl
xchg
inc
mov
daa
xor
and
mov
movsl
pop
mov
in
jnp
pop
mov
mov
loope
cs
xchg
pop
enter
enter
mov
mov
jle
push
push
or
loop
cmp
inc
aam
ror
inc
push
xor
jo
out
sub
add
das
neg
add
jecxz
lds
divl
mov
add
or
loope
sbb
sub
or
out
adc
xchg
ds
lods
aas
add
es
adc
gs
xor
or
push
ficompl
adc
sub
add
inc
clc
bnd
leave
sbb
mov
xchg
fisubrs
imulb
fs
mov
pop
pop
mov
movsl
shlb
mov
lret
loope
fnstsw
xor
pop
pop
call
sub
jge
sbb
sbb
adc
hlt
test
mov
push
icebp
popl
vunpckhps
xchg
mov
sub
xchg
pop
jmp
dec
test
inc
xchg
push
pop
pop
sub
lahf
dec
mov
popa
mov
pop
bound
push
pop
push
mov
fstp
test
jne
ljmp
call
and
call
pop
mov
out
push
pop
sub
pop
mov
add
sbb
mov
inc
jbe
add
cli
ficoms
adc
add
je
addl
mov
xchg
add
add
fimuls
sti
add
ret
mov
dec
sub
add
iret
jg
fwait
insb
sbb
shlb
push
add
mov
or
and
nop
dec
jge
xor
ds
int3
pop
add
inc
sub
icebp
xor
sub
inc
push
add
jno
adc
jg
sub
pusha
leave
je
push
push
dec
adc
push
push
push
or
dec
das
inc
scas
sub
loope
pop
aaa
pop
ss
jg
loope
data16
mov
bound
push
mov
inc
sti
push
pusha
mov
mov
xchg
incl
inc
call
mov
pop
push
push
dec
push
fistpll
xchg
loopne
sub
jecxz
mov
mov
sub
idiv
pop
push
aas
cwtl
into
cli
fnstsw
fbstp
pop
push
cmpsl
fistpll
jns
mov
push
xor
sbb
cld
xor
das
push
mov
or
pop
mov
addb
or
loop
arpl
inc
iret
pop
sbb
push
mov
xlat
repz
lods
scas
xchg
push
mov
and
mov
sub
dec
cld
cli
das
idivb
or
push
dec
popa
and
mov
or
xor
les
cwtl
xor
roll
push
dec
sub
jmp
data16
addl
and
ljmp
pop
addl
or
idivl
cmc
ficoms
mov
adc
imul
loopne
xor
or
and
push
inc
shl
divl
xchg
mov
shrl
xchg
pop
test
inc
dec
sbbl
push
imulb
pop
inc
inc
dec
out
adcb
shll
lods
std
push
out
fmul
mov
add
pop
xor
pop
mov
ret
add
sub
jl
and
lds
stos
lcall
subb
stc
cmpl
adcl
jle
aam
mov
jecxz
dec
das
jns
iret
fs
sti
pop
in
subb
and
loop
sti
pop
test
roll
movsl
fxch
push
cld
rcrb
scas
mov
enter
mov
lret
scas
imul
shr
jl
inc
divb
xchg
sti
add
fst
jp
cmp
imul
lret
jne
lods
daa
aad
mov
je
mov
and
in
inc
lods
cmp
push
inc
iret
push
out
loope
sub
cwtl
test
cmp
int
filds
jo
scas
add
aas
mov
jmp
push
jge
add
adc
jmp
leave
test
pop
cmc
mov
xor
jl
xor
cmc
adc
negl
adc
pop
scas
mov
dec
inc
xor
push
mov
hlt
lret
ret
bound
call
push
push
push
cld
sarb
aam
mov
cmpsb
fwait
pop
sub
mov
jge
leave
std
pop
aam
lods
jecxz
inc
shrl
es
mov
push
mov
pop
xor
sub
pop
fcoms
add
push
sti
pop
mov
cmp
mov
sub
or
inc
loope
push
push
push
mov
add
imul
iret
jmp
push
add
sti
sub
inc
scas
inc
adc
add
neg
std
jno
and
decb
dec
ja
sbb
out
add
dec
jg
pop
shr
repnz
push
mov
and
inc
or
push
sub
xchg
mov
push
mov
mov
out
inc
xchg
neg
rorl
sbb
inc
sarl
leave
das
and
mov
mov
push
or
and
pop
push
jmp
loopne
mov
and
or
xchg
dec
stos
pop
daa
into
hlt
pushl
inc
std
sbb
push
mov
ret
add
outsl
jnp
push
cmp
in
test
dec
enter
jns
xor
add
jecxz
jne
pop
pop
jle
lret
into
into
pop
adc
pop
xlat
inc
xor
push
or
push
adc
out
xrelease
outsb
jnp
dec
aad
test
jl
das
mov
xchg
push
fwait
ret
or
cmp
das
jbe
and
dec
xchg
cmpsl
in
lea
dec
adc
andl
aad
pop
cmpb
gs
mov
add
les
out
jns
push
xchg
movb
mov
rorl
int3
out
mov
out
lods
aas
ds
cmp
mov
push
das
xchg
mov
jne
xchg
mov
mov
pop
sub
shrb
sub
fcomps
insb
dec
das
pop
repnz
jle
scas
mov
cwtl
xchg
inc
mov
mov
cmp
notl
sub
outsb
bound
and
cmp
and
pop
orl
testl
out
sti
add
ljmp
mov
sbb
adc
insl
daa
sub
dec
enter
das
pop
sub
jg
or
jl
repnz
add
cmp
xor
sbb
lds
lock
xchg
push
xchg
add
xor
inc
sarl
mov
stc
test
and
loope
arpl
push
pop
cwtl
inc
add
icebp
push
rorb
cmp
icebp
leave
fwait
pop
dec
icebp
cld
cmp
and
mov
sbb
ss
pop
push
push
jnp
xchg
push
xchg
enter
test
outsb
mov
adc
mov
add
adc
inc
jo
in
clc
adc
ljmp
pop
cmp
dec
mov
and
add
jne
mov
int3
es
jl
inc
dec
in
into
clc
jecxz
leave
jmp
pop
pop
jnp
cmp
add
outsb
cmp
sub
jns
add
test
out
and
or
or
or
stc
cwtl
add
in
ret
mov
inc
js
cwtl
sbb
ljmp
stc
or
mov
sbb
ret
decb
jo
and
test
mov
and
popf
jno
and
sbb
pop
aam
cli
dec
mov
inc
pop
not
inc
shlb
sbb
out
outsl
push
jmp
or
jo
loope
jmp
mov
pop
pushf
push
das
jmp
push
pop
pop
imul
pop
jb
rcrl
scas
lds
test
bound
call
dec
push
movsl
lods
jb
add
jne
leave
lods
sbb
xor
add
bnd
xchg
push
cmp
xchg
les
mov
adcl
aad
jno
jmp
xchg
cmp
cmp
in
jb
jno
xchg
pop
mov
insb
xchg
mov
pop
orb
add
test
aad
xchg
add
into
dec
cmp
in
inc
push
mov
sahf
pop
pop
jp
ret
out
daa
jbe
xchg
stos
sbb
sub
sahf
das
push
clc
or
into
push
repz
mov
scas
repz
mov
mov
mov
xlat
loopne
push
xor
shlb
pop
push
cmp
push
lods
fldl
out
pop
xchg
cli
in
xchg
fisttps
cld
outsb
and
mov
or
stos
fdivrs
sub
jmp
pop
in
push
ljmp
sub
or
adc
cmc
repz
mov
addr16
pop
xor
push
pop
mov
cltd
push
scas
xchg
addr16
pop
stc
sbb
pop
fwait
enter
nop
inc
push
xchg
out
jnp
outsl
in
mov
filds
jae
subl
push
jge
addb
sub
and
mov
mov
enter
mov
mov
rclb
or
lcall
mov
fcoms
fsubl
repz
clc
pop
lods
dec
xor
adc
or
flds
dec
icebp
fistpll
cmc
mov
adc
int
push
push
mov
mov
mov
leave
push
aas
push
rcr
add
or
or
jmp
push
jbe
in
pop
jmp
jmp
iret
cmp
adc
mov
clc
push
xor
add
mov
adc
xchg
fsts
repz
fcmovnu
mov
inc
pop
or
pop
lahf
push
adc
sub
and
cmp
dec
or
add
mov
lods
cmc
call
fisttps
out
rcll
pop
mov
xor
pop
jne
push
dec
data16
test
movsl
mov
enter
push
dec
aas
mov
mov
lret
xchg
fsubrs
xor
adcb
nop
xor
arpl
and
fmul
test
in
jl
add
mov
int
in
ss
scas
inc
flds
and
xchg
push
sub
pop
das
lods
adc
nop
add
mov
jp
pop
and
ss
inc
icebp
imul
sbb
pop
or
or
lock
or
stos
add
push
daa
mov
aas
mov
jmp
sar
into
and
sti
das
add
xchg
out
not
or
push
inc
push
into
add
push
rorl
pop
jns
add
mov
out
pop
jbe
dec
imul
cli
jne
fists
pop
ljmp
inc
out
mov
push
dec
mov
add
jmp
cmc
pusha
sub
add
add
call
cwtl
push
negl
sar
jae
add
push
mov
mov
lods
movsl
push
mov
or
or
jp
fsubs
scas
mov
jb
fmull
test
sub
ret
fld
inc
push
jmp
add
xor
jbe
or
xlat
orl
or
sub
mov
push
iret
popf
adc
add
sahf
insl
push
inc
xor
add
stos
mov
and
loope
out
imul
adc
pop
pop
cmp
shll
ret
in
mov
fisttps
add
and
or
shlb
jns
pop
mov
cwtl
aas
mov
push
dec
je
fwait
dec
pop
in
dec
mov
inc
and
mov
jae
fadds
pop
pop
out
mov
inc
lcall
into
imul
jp
mov
and
xor
mov
push
insb
in
dec
pop
test
mov
xor
push
add
fisttpl
mov
push
ret
inc
add
lods
repnz
jge
and
std
sub
pushf
dec
pop
andb
lods
lret
pop
mov
inc
scas
inc
pop
pop
cmp
cmc
dec
inc
in
cmp
sbb
ljmp
sbb
lods
pop
or
stc
add
sbb
fimull
mov
sub
dec
faddl
js
adc
push
xchg
adc
xor
mov
dec
fdivs
jno
sahf
pop
mov
fidivrs
and
mov
aas
sub
stos
movsl
in
jp
or
sub
add
or
or
and
test
movsb
inc
int
push
xor
ret
pop
jmp
in
and
mov
jmp
call
sub
movzwl
daa
push
out
bts
xor
cmc
bound
and
les
pop
aaa
dec
ret
pop
hlt
mov
inc
sahf
push
fwait
sub
xlat
or
inc
fst
imul
pusha
or
jmp
adc
cmp
sub
push
pop
js
xchg
sbb
pusha
push
jmp
push
push
adc
push
pop
or
mov
and
pop
das
push
jp
or
sbb
sbb
jmp
push
mov
fisttpll
inc
pop
or
jmp
mov
add
cmpsb
mov
push
jmp
out
sub
or
into
jmp
jmp
push
idiv
hlt
insb
push
mov
dec
jns
fsubl
lahf
mov
movsb
lret
xchg
imul
lcall
or
and
dec
jmp
or
or
inc
stc
mov
xchg
xchg
sub
mov
xor
jae
ljmp
xlat
add
sub
jmp
dec
or
loope
xchg
js
jo
xchg
testb
push
push
inc
add
dec
dec
jmp
dec
push
pop
nop
add
insl
shlb
inc
cmp
ret
jb
or
lods
jmp
sar
mov
out
xor
rcrb
push
mov
jg
mov
mov
ljmp
cmp
xchg
lods
jmp
cmp
jne
sbb
lret
push
int3
sub
aam
fs
xor
shrl
sbb
adc
clc
rcl
mov
push
push
adc
fs
test
orb
fs
je
loop
pop
das
test
roll
mov
push
cli
idivl
andb
cmpsl
push
pop
cmp
pop
movsb
inc
jmp
add
pop
add
outsl
test
inc
pop
cld
rorl
inc
push
pusha
repnz
je
push
leave
ja
and
mov
mov
sub
roll
lahf
pop
dec
daa
andb
dec
in
bound
and
insl
pop
mov
shl
sub
push
add
add
sub
clc
push
loopne
jge
sub
pusha
inc
mov
mov
push
nop
sti
dec
in
inc
in
pusha
fisttps
inc
sbb
cmp
mul
not
push
dec
mov
xorb
les
ss
nop
pop
out
sub
mov
mov
mov
daa
shr
mov
repz
cmp
add
sbb
dec
hlt
test
xor
js
jno
pop
ljmp
int
pop
mov
sub
xchg
inc
xor
icebp
pop
add
mov
andb
sbb
push
add
pop
cld
cltd
je
sub
in
ficoml
xlat
pusha
out
fs
das
jmp
icebp
aas
pop
xorb
push
aam
mov
nop
push
mov
pop
rcrl
loop
rorb
xor
or
sub
dec
cmc
movsb
pusha
out
pop
jmp
jg
icebp
sbb
sbbb
mov
and
jg
xchg
cmp
scas
or
push
dec
movsl
mov
adc
inc
mov
das
shll
jnp
add
std
int
and
sbb
pop
sub
ret
xchg
inc
movb
jae
mov
dec
cld
ss
ljmp
jb
out
aas
pop
cmp
mov
call
lds
xchg
lret
pop
pop
add
outsb
call
mov
jecxz
sbb
jmp
loop
ret
pop
pop
ljmp
fdivp
pop
sahf
mov
pop
mov
jae
ret
push
pusha
pop
bswap
push
popa
pop
push
pop
rclb
jno
mov
movsl
out
mov
jmp
outsl
mov
push
dec
test
xor
add
and
mov
jno
sub
dec
ljmp
inc
jmp
inc
push
mov
enter
jno
dec
xor
fists
fs
not
das
jmp
popa
lock
jo
dec
sub
add
adc
sahf
stc
sub
pop
cmpsl
adc
cmp
cmp
daa
cmp
jmp
data16
add
movzbl
and
push
or
pop
imul
nop
push
mov
xor
jmp
call
leave
mov
dec
push
imul
inc
mov
jg
fs
stc
neg
or
xchg
jns
inc
or
shll
frstor
push
add
out
cmp
mov
fdivrs
inc
dec
lods
fnsave
repz
push
add
mulb
sbb
aaa
movsb
pop
and
dec
inc
jmp
cs
bound
sbb
jne
iret
out
dec
mull
inc
popf
and
add
fwait
repnz
fstl
push
repz
in
mov
orb
jp
sbb
pop
push
mov
mov
or
jmp
push
rclb
shlb
out
mov
cmp
movsl
sti
push
insb
mov
xchg
xor
flds
add
int
mov
or
cli
rolb
mov
jg
test
data16
add
dec
inc
sub
adc
insb
inc
jmp
or
dec
stc
fcompl
inc
int3
sub
dec
xor
scas
cli
fdivrl
lods
push
mov
int3
cmp
aad
jns
movsl
inc
cmp
push
push
push
scas
pusha
sti
not
xchg
ficomps
xor
out
gs
push
cvttps2pi
into
pop
adc
mov
mov
lds
jne
jo
adc
andb
leave
repnz
adcl
pop
jns
xor
pop
fwait
xor
js
cmpsl
mov
sub
jl
cmc
ljmp
rcrb
mov
mov
jmp
fdivr
inc
sarl
subb
add
out
push
cmpsl
sti
sub
enter
insl
sahf
and
mov
fldl
test
sub
mov
and
and
dec
inc
mov
or
push
lahf
or
xor
jo
dec
jl
sbb
loop
push
sti
jae
jmp
pop
int3
and
mov
rclb
sbb
sbbl
push
jp
scas
jne
cmpsl
sbb
fidivl
outsb
sub
push
sub
scas
adc
insl
es
sbb
dec
add
or
adc
lret
inc
jns
ret
pushf
push
mov
in
adcb
nop
push
fs
jns
ret
sub
sub
or
or
insl
out
adc
sub
icebp
repnz
mov
jae
cld
sub
insl
ret
add
dec
push
pop
mov
add
ja
js
shlb
nop
sub
addr16
mov
movsb
mov
inc
int
xor
aaa
mov
dec
add
xchg
push
pushf
cmp
dec
xchg
pop
push
test
pop
or
mov
les
sbb
clc
fistps
out
jmp
pop
jo
or
nop
push
outsb
orb
pop
leave
cld
dec
add
jbe
imul
jmp
loop
sbb
sbb
cld
out
fnstcw
ret
iret
push
stos
or
fiadds
fnstcw
mov
neg
je
sub
xchg
les
lock
out
in
shl
loop
add
cmp
push
or
add
out
push
das
xlat
mov
fs
add
lret
or
repz
icebp
inc
loop
pop
pop
pop
and
add
mov
or
and
and
push
idivb
sub
andl
cs
ljmp
xor
pop
ljmp
mov
mov
mov
iret
pop
cld
push
lret
incl
mov
scas
movzwl
rcll
inc
sub
pop
popf
js
and
incl
hlt
mov
push
in
in
add
inc
add
cmp
cmp
je
mov
cmc
test
jmp
add
fimuls
add
inc
leave
lock
sub
mov
add
fxch
cld
pop
das
cld
out
xchg
mov
scas
call
mov
notb
and
pop
and
mov
jnp
daa
dec
cmp
das
sbb
xchg
out
cmp
sub
push
mov
xor
outsl
sbb
fisubrl
mov
cli
xor
daa
dec
das
xor
repnz
repnz
ret
adc
jne
iret
dec
negl
sub
inc
and
mov
fs
shlb
adc
test
lret
push
jg
rorb
iret
jp
ret
and
in
add
or
pop
nop
test
test
xchg
mov
mov
jo
popf
incb
testb
gs
pop
popl
push
push
les
pop
in
cmp
and
pop
sub
inc
lret
repnz
dec
ljmp
dec
leave
pop
bound
out
fwait
jns
xor
testb
sub
push
roll
dec
mov
dec
inc
imul
mov
or
inc
nop
inc
sbb
in
int3
push
and
inc
xor
sarb
testb
jl
push
mov
and
pop
stc
pop
adc
xor
hlt
dec
xor
jmp
es
mov
fistl
xlat
push
or
cmpsl
cmp
imul
jle
in
or
adc
xor
dec
add
push
add
push
cld
lcall
lods
xor
sub
dec
dec
jo
imul
add
add
inc
jo
rolb
jge
xor
mov
push
push
adc
adc
cmp
push
jmp
lret
push
push
call
cs
sub
data16
mov
ljmp
mov
sub
xor
movsl
gs
mov
add
jb
lret
fcomp
cmc
jg
sub
pop
push
cmp
stc
and
xchg
pop
mov
dec
mov
and
pop
rol
inc
jmp
or
mov
push
inc
repz
xor
pop
sub
ret
pop
push
jmp
ds
jp
ljmp
mov
sub
xor
dec
mov
dec
xor
rorb
adc
sub
jge
cli
mov
sahf
ret
fcom
dec
xor
and
add
xchg
push
fs
orl
or
lret
xchg
popf
mov
imul
jle
add
lock
mov
push
aam
pop
pop
pop
call
mov
pop
incl
pop
jbe
inc
sbb
call
mov
dec
jp
repnz
xchg
rcpps
mov
jge
push
not
out
jmp
subl
inc
mov
add
inc
push
out
jo
add
cmp
jnp
aam
enter
imulb
xchg
xchg
das
xor
mov
adc
sarl
test
repz
push
sub
xchg
add
fdivrl
in
mov
clc
rclb
outsl
mov
cmpsb
inc
inc
xor
addb
inc
stc
lods
sub
xchg
jg
sbb
add
adc
xor
in
sub
adc
mov
push
push
lea
jae
fsubl
xchg
arpl
jmp
inc
mov
cmp
mov
out
lea
add
int3
jb
cmp
cs
or
push
mov
dec
test
mov
outsb
cmp
pusha
fstl
add
clc
out
xchg
aas
mov
dec
push
bound
or
pop
ret
jo
lahf
ret
or
push
mov
mov
mov
aaa
or
shlb
cmp
pop
push
and
xchg
mov
jl
pop
push
mov
add
inc
stos
or
movsl
jle
mov
inc
jns
fwait
pop
outsb
inc
pop
mov
stos
add
mov
pop
fisubrl
mov
cmp
daa
inc
or
push
rcr
xor
mov
arpl
add
xchg
mov
pop
add
xor
jne
xchg
shll
jmp
xchg
out
sub
mov
pop
int3
pop
and
sar
push
adc
dec
mov
in
sahf
pop
cwtl
dec
jb
dec
sub
addr16
in
stos
or
pop
jne
xchg
inc
daa
push
push
lcall
dec
sub
add
in
sarb
nop
icebp
and
arpl
pop
mov
push
neg
shl
xchg
push
mov
jmp
mov
jl
mov
xchg
ljmp
cli
inc
psrld
pop
lods
xlat
cmpsb
andb
and
xor
iret
rorb
pop
push
into
pop
scas
shlb
aad
and
adc
push
pusha
dec
push
out
movsl
icebp
sti
nop
fisttpll
hlt
outsl
scas
push
add
xchg
jae
xor
jmp
sub
pop
and
sub
jecxz
xor
out
mov
push
jmp
movsb
adc
mov
leave
or
pusha
dec
in
add
inc
adc
mov
mov
stos
inc
add
push
xorb
mov
jns
and
add
push
dec
jge
jne
inc
aas
mov
adc
xchg
sub
add
ja
xchg
pop
and
fstps
push
lock
pop
dec
push
sahf
mov
dec
jmp
mov
insb
out
pop
gs
fcoml
aas
cmp
aaa
sub
fisttpl
jmp
ljmp
daa
mov
ja
bound
scas
repz
data16
and
decb
mov
popf
in
repz
in
add
lds
jge
dec
leave
addl
dec
dec
andl
or
mov
add
inc
je
dec
pop
rclb
inc
mov
xchg
or
mov
jg
decb
xchg
in
shlb
push
cmp
push
xchg
aas
fistpll
xor
mov
pop
push
or
sbb
xor
xor
add
mov
pop
adc
js
pop
cld
cmc
ljmp
flds
dec
pmullw
dec
test
mov
hlt
mov
pop
ljmp
ret
pop
jmp
lds
shlb
hlt
add
loope
add
jmp
into
dec
or
jns
add
orb
jb
push
or
pop
or
pop
sub
imul
loope
outsl
cmpsb
cld
add
cmp
dec
jmp
sub
mov
or
mov
lods
iret
lods
add
mov
dec
frstor
test
inc
dec
das
incl
aam
push
push
icebp
inc
and
jmp
lcall
scas
xor
out
mov
or
ljmp
mov
adc
sub
push
push
int
pop
push
out
lods
jns
imul
pop
int3
or
loope
sub
or
in
loop
fildll
aam
lods
sbb
add
ljmp
xchg
pop
sub
fdivl
pop
jg
pop
rorb
jmp
gs
mov
push
sbb
rorb
mov
mov
sub
push
push
add
and
es
jae
add
sub
outsl
jmp
push
icebp
call
pop
mov
dec
push
es
sbb
dec
jge
and
lods
rcll
or
lret
test
sbb
movsl
addr16
and
push
not
or
push
rcll
pop
mov
dec
fcoml
add
adc
inc
xchg
sbb
mov
cmp
dec
mov
decl
shl
test
push
mov
jmp
aam
dec
jge
cli
ds
mov
and
push
lds
scas
push
jmp
and
push
mov
add
jp
push
jp
fists
popa
jmp
clc
movsbl
inc
sbb
ljmp
movsl
jmp
fcoml
dec
mov
adc
push
push
popf
shll
push
lds
push
mov
popf
mov
fwait
popf
repnz
pop
pushf
das
sahf
jne
fists
stos
ljmp
add
inc
popf
push
adc
aam
pop
mov
es
jmp
out
sahf
adc
rol
mov
pop
xor
xor
popf
sub
mov
and
sar
insb
shl
pop
fisttps
jbe
call
push
cmp
icebp
sarb
scas
and
pop
dec
push
pop
jns
mov
dec
mull
pop
jno
scas
xchg
inc
sbb
in
shr
lods
adc
mov
adc
mov
inc
mov
hlt
int3
ret
repz
popl
cli
mov
into
pop
out
or
mov
mov
xor
mov
jle
add
in
pusha
mov
adc
xchg
gs
out
into
in
cmp
test
push
into
xor
inc
and
jp
sbb
fmuls
dec
mov
push
sub
sbb
test
xchg
pop
inc
test
dec
stos
inc
push
mov
and
in
mull
call
pop
pop
stc
pop
mul
and
inc
inc
adc
cmp
ret
dec
daa
in
and
pop
pop
push
or
pop
xchg
outsl
pop
sub
or
mov
frstor
dec
fdiv
movsl
mov
cld
and
jg
fstl
pop
jmp
jmp
aad
cwtl
sub
in
xchg
shl
jge
or
adc
jno
fs
iret
and
cmp
roll
mov
insl
fcmovnbe
pop
fbld
sbb
mov
adc
adc
out
fwait
inc
gs
into
negl
ss
cmp
sub
mov
sbb
in
pop
test
aaa
xor
out
adc
inc
adc
mov
dec
and
add
inc
cvtps2pi
repz
movsl
jbe
xchg
jmp
test
pop
mov
cmp
inc
pop
nop
mov
je
popf
inc
jo
jg
mov
push
sbb
push
scas
addr16
imul
push
lahf
lock
jbe
nop
or
mov
aaa
std
shll
pop
out
popa
lods
pop
push
cmp
iret
push
inc
subb
jmp
subl
insl
dec
addr16
adc
cmp
adc
and
mov
xchg
push
sub
jne
enter
pop
xorb
movsb
inc
add
inc
sub
push
jp
ja
jg
aaa
mov
mov
mov
sub
adc
das
jge
dec
sahf
mov
in
loop
cmp
ret
cmpsb
js
sbb
add
ds
pop
xor
dec
pop
mov
lahf
inc
jnp
mov
adc
xor
in
mov
iret
inc
jo
push
pop
lret
faddl
adc
mov
and
rcrl
or
add
and
je
cmpl
mov
and
das
pusha
hlt
jo
and
xor
add
lods
fbld
sub
xchg
in
xchg
adc
push
jg
xorb
out
cmpsl
xor
add
or
int3
mov
cmp
js
push
and
push
adc
sbb
dec
out
inc
adc
out
mov
dec
stos
sub
dec
imul
push
or
ret
inc
xchg
xchg
mov
test
sub
imul
mov
fwait
jle
dec
or
sbb
shr
repnz
push
pushf
or
lahf
jmp
in
inc
movsl
mov
mov
cmp
sub
adc
leave
cmc
mov
mov
ja
sbb
imul
inc
arpl
mov
imulb
adc
pusha
cmp
insl
xchg
dec
imul
sbb
sub
sub
xorb
xchg
add
push
int3
cmp
add
mov
lock
push
les
xlat
jb
mov
mov
stos
out
dec
and
sub
sub
adc
pusha
push
add
cli
in
popa
jno
or
pop
sub
out
add
push
rcpps
pop
and
scas
fstps
sbb
lahf
sti
mov
mov
sub
inc
or
ficompl
add
pop
and
add
xor
sub
jb
movsl
cs
jp
cmp
adc
dec
jl
pop
jmp
cmp
shl
mov
cmpsl
leave
jne
mov
push
mov
sub
push
xor
pop
loop
pusha
jg
push
es
sub
cmp
es
and
sbb
int3
mov
shll
pop
das
lods
add
cmp
push
mov
imul
imull
jo
push
das
add
pop
ja
cmc
test
or
xchg
daa
xchg
idivb
xlat
xchg
rep
pop
cmp
shrd
aad
jb
inc
jge
add
push
ss
add
dec
addb
push
push
pusha
and
add
lcall
jb
cs
xchg
les
in
mov
mov
in
xlat
push
jb
fstl
pop
addb
mov
push
mov
aaa
add
mov
cmp
xor
and
sub
xor
inc
xchg
rorb
test
mov
outsb
fimull
and
sub
or
inc
mov
cwtl
sbb
das
mov
push
push
inc
and
push
cmp
repnz
lods
mov
xor
cmp
xor
jl
movsb
inc
lods
gs
add
pop
stos
cmp
add
je
addb
cmpsb
add
sub
insb
push
rcrb
or
or
dec
jo
mov
or
adc
or
faddl
ret
sbb
xor
iret
aaa
fldt
sub
ficoml
push
jmp
and
mov
or
fldt
cli
inc
push
testb
dec
mov
call
notl
stc
pushf
inc
add
pop
popa
cltd
push
dec
ret
jle
jmp
std
xor
test
test
mov
sub
cmp
push
mov
neg
pusha
inc
mov
mov
mov
jnp
jae
sub
mov
jg
ljmp
adc
cli
adc
in
lods
int3
xor
xchg
repz
xchg
add
lahf
or
popl
mov
dec
into
pop
pop
inc
in
stos
fldenv
adc
adc
pop
sar
filds
insb
mov
xor
adc
cmpsl
popa
jmp
adc
loope
mov
daa
adc
insb
outsb
xchg
inc
mov
add
jge
mov
ret
popa
pop
mov
hlt
aaa
in
inc
jo
dec
jmp
in
pop
and
push
push
jmp
imul
pop
push
ja
pop
es
sahf
in
fdivrp
jp
jbe
push
pop
js
sub
fcoml
sbb
jbe
xchg
std
mov
xchg
xlat
adc
pop
push
jmp
int
fisubrl
mov
xchg
and
shlb
out
bound
push
scas
xchg
loopne
or
test
pop
daa
test
cld
daa
nop
popf
loop
xlat
xor
test
test
adcb
not
add
movsl
adc
push
push
aas
sub
xchg
inc
or
sbb
xor
lret
ljmp
stc
das
jmp
mov
shl
pop
in
int3
add
pop
testb
dec
dec
loop
push
or
mov
cmp
shll
in
inc
in
cmp
xchg
es
inc
loope
dec
add
dec
dec
divl
pop
xchg
or
inc
push
inc
mov
cmc
pop
and
dec
out
or
push
dec
icebp
pop
or
mov
add
cmp
mov
pop
pop
lock
inc
add
fiaddl
pop
jmp
icebp
nop
out
push
fadds
dec
das
sub
xor
je
adc
inc
add
mov
jnp
xor
jno
or
in
sti
mov
mov
pop
shrb
dec
mov
ret
add
mov
jmp
jg
sub
dec
or
ljmp
test
out
orb
or
repnz
push
mov
cwtl
push
sbb
pop
dec
dec
imull
or
int
call
leave
xchg
cwtl
fwait
xchg
push
adc
cwtl
or
jo
pop
orb
push
adc
cmp
push
mov
ljmp
add
and
cs
cmpsb
dec
jg
and
out
dec
push
pop
cld
and
mov
mov
sbb
xor
pop
mov
inc
fdivs
jae
aas
je
push
out
xor
jmp
lock
cmp
jb
jmp
cwtl
mov
and
pop
push
push
jmp
daa
mov
ficompl
xor
mov
push
adc
cmp
mov
fstl
xchg
rclb
push
push
pop
decl
lods
sbb
pop
fdivrs
or
or
sub
push
xchg
push
jl
call
leave
adc
inc
outsl
sbb
ljmp
xor
adc
jle
fadd
mov
jl
pop
dec
mov
decb
test
aas
daa
mov
xor
cld
or
into
das
imul
add
jmp
push
bound
mov
push
leave
xchg
sarl
scas
xchg
xchg
lods
lods
test
ljmpw
sbb
loope
loopne
rcrl
sarb
inc
mov
cmp
test
dec
push
pop
dec
push
or
pushw
aad
jno
mov
jno
insl
les
loopne
pop
lcall
push
hlt
or
fimuls
mov
sbb
sub
mov
lods
xlat
sub
dec
sti
and
push
inc
inc
das
jg
rcrb
test
in
jle
into
sbb
mov
mov
in
xchg
hlt
cltd
mov
loope
outsb
stc
pushf
mov
or
loopne
xorl
jnp
or
ds
jle
jo
mov
cld
push
xchg
xor
inc
sub
dec
inc
test
mul
es
in
push
pop
test
gs
cmp
or
call
fsub
pop
adc
inc
mov
mov
jg
mov
xor
sahf
sub
xor
xchg
inc
jbe
inc
das
js
cld
daa
mull
lds
adc
push
push
mov
or
xor
pushf
fidivs
and
push
stos
and
loope
shlb
ja
adc
in
decb
int3
clc
fidivrl
stc
sbb
pop
mov
std
roll
fistpl
je
sub
pop
adc
jmp
cmp
int3
lahf
mov
lret
mov
or
loop
outsl
pop
imul
cld
mov
cmp
jmp
adcl
pushf
fadd
loopne
js
iret
dec
push
and
and
push
insb
nop
xchg
add
jmp
shll
mov
pop
outsb
dec
pop
clc
mov
or
or
mov
add
xchg
imul
outsb
mov
sub
push
aas
inc
inc
sub
inc
or
das
add
dec
call
jg
pop
nop
loopne
outsl
adc
mov
loop
ja
xor
push
cmpsl
dec
fcomp
jne
adc
popa
call
in
xor
cmp
lock
push
pop
cmp
inc
repz
ljmp
mov
loope
outsl
repnz
jmp
and
inc
ljmp
mull
addr16
pop
sbb
orl
or
pusha
adc
aad
ss
stc
add
push
call
popa
pop
mov
adc
mov
lret
adc
or
push
ljmp
cmp
push
std
popf
sahf
insl
or
push
inc
cmpsb
add
je
inc
addr16
movsl
push
cmc
pop
jl
adc
or
pop
sarb
hlt
jmp
push
push
icebp
and
lods
mov
lahf
xchg
adc
js
cli
ret
je
jns
fistps
in
push
xchg
sub
or
ss
lods
das
dec
pop
sbb
add
or
aam
daa
cmpb
cwtl
dec
sar
push
and
mov
loope
dec
and
sar
sub
testl
gs
arpl
add
xchg
pop
loopne
jmp
shll
icebp
ret
cmp
jp
cmpsb
jo
xchg
jg
and
mov
jmp
dec
notl
mov
shlb
cwtl
xor
adc
xlat
adc
test
aad
fs
movups
add
inc
jg
xchg
or
leave
push
scas
inc
test
shr
es
inc
jge
adc
test
fadd
rorb
cmp
fsts
push
cmpsl
mov
push
test
subb
pop
pop
movsb
dec
mov
adc
fidivs
testb
jmp
or
jno
test
or
xlat
jns
daa
push
arpl
les
in
mov
movsb
pop
ds
sbb
orb
dec
sub
jp
push
incb
jg
and
cmpxchg
dec
imul
jecxz
cmc
xor
push
mov
test
imul
test
dec
xor
dec
push
cmp
jbe
xchg
nopl
out
es
cli
mov
dec
add
add
jmp
aad
add
inc
mov
xor
inc
push
movsl
ret
or
and
mov
lahf
mov
xchg
adcb
pop
lods
mov
cmp
mov
inc
arpl
iret
xor
data16
aad
mov
mov
push
inc
mull
jge
push
pop
cmpsl
out
movsl
pop
xor
dec
shlb
sbb
sbb
dec
dec
testl
sub
pushf
or
decb
adc
push
stos
mov
pusha
jecxz
dec
mov
inc
call
push
ljmp
xor
cmp
mov
scas
test
sahf
add
shr
xor
inc
aaa
imul
mov
daa
ret
imul
pusha
mov
cmp
ficomps
jmp
daa
in
cld
jo
mov
ret
call
in
sarb
dec
repnz
inc
pop
pop
fwait
test
out
jno
xchg
cmp
jmp
jb
dec
ljmp
sbbl
xor
adc
jmp
mov
incb
mov
sub
out
cmp
cmp
hlt
pop
jo
pop
loop
mov
scas
scas
mov
pop
cwtl
push
lret
repz
push
mov
jb
stos
mov
sbb
ljmp
mov
xor
pop
xchg
or
jae
les
int
mov
ret
lcall
orl
push
sub
cmp
cmp
xor
sbb
icebp
pop
push
loop
pop
int3
sub
in
sbb
jp
inc
xor
daa
and
and
imulb
sti
or
jmp
ret
int3
xor
lods
mov
add
inc
js
ljmp
ds
dec
mov
insl
fsts
cmp
cmp
hlt
inc
lret
movl
cmpsl
mov
shlb
cmp
js
orl
jge
repnz
lret
xchg
call
stc
mov
out
jp
das
ret
std
shlb
and
movsb
jae,pn
addr16
das
sub
push
das
movsb
lock
cmp
push
push
jmp
test
sbb
cltd
push
mov
jmp
out
dec
pop
add
mov
adc
add
jne
mov
sbbb
ret
daa
dec
push
idivb
es
dec
or
pop
push
push
in
dec
sbb
ds
aam
movsb
subps
jmp
inc
mov
jmp
xor
sub
or
std
mov
push
into
pop
adcb
icebp
outsb
imul
jp
push
add
sub
push
pop
push
iret
ja
jne
out
imul
out
scas
movsl
fldenv
mov
sbb
sbb
pop
aam
int3
jg
sti
js
add
xor
sub
lds
sbb
jge
push
mov
dec
jmp
movsl
jo
stc
dec
aad
ss
push
jne
test
push
xchg
xor
ret
mov
mov
pop
sbb
adc
fiadds
push
in
push
and
ss
fwait
loop
jnp
movsb
lcall
clc
push
gs
mov
add
aaa
jb
xchg
dec
or
mov
rcrl
adc
xor
add
jge
or
cltd
mov
addr16
jne
sub
mov
pusha
cmpsl
lock
push
dec
dec
movsl
imul
sbb
in
push
push
mov
fwait
push
in
cltd
jl
pop
fiadds
pop
pop
and
push
pop
rorb
xchg
xor
mov
mov
push
pop
jns
out
add
add
mov
shlb
sar
jb
adc
out
mov
xchg
int
cmp
push
dec
repnz
sub
push
xor
inc
out
nop
and
jne
or
loopne
and
fsts
je
icebp
pop
inc
mov
lret
inc
jmp
lds
fs
cs
push
xor
cwtl
fbld
sarl
pop
ljmp
pop
in
stc
repnz
daa
push
push
fidivs
jmp
cmp
or
cwtl
jne
mov
mov
ret
sbb
add
cs
in
xchg
test
ss
imul
cmpsl
dec
cmp
mov
mov
pop
scas
pop
imul
lods
mov
or
fimuls
les
jmp
mov
popa
push
mov
jo
pop
pop
mov
sahf
js
push
arpl
pop
addb
inc
jp
sti
sub
mov
ss
les
fcoms
rorb
xchg
cwtl
sub
sbb
aas
clc
mov
repnz
hlt
inc
push
mov
mov
pop
sub
mov
push
or
pop
pop
cmp
dec
cmc
xchg
adc
mov
mov
cmpb
mov
push
add
mov
adc
in
mov
rcll
es
or
repz
xor
jmp
mov
pop
ja
or
lret
pop
in
and
leave
sub
mov
jns
lret
push
mov
adc
mov
sbb
pop
add
push
and
enter
daa
or
push
cmp
inc
stos
test
jo
into
aam
pop
cmp
cltd
inc
push
and
add
pop
add
ja
xor
mov
sub
or
add
add
or
fiadds
sarb
jp
repz
or
int
mov
and
mov
jbe
int
xor
fcompl
aas
mov
out
jmp
popa
xchg
dec
shrb
add
outsb
mov
outsl
lock
adc
push
aas
ljmp
pop
mov
sub
sar
loop
lahf
sarb
es
mov
test
loop
scas
sbb
jl
jo
dec
lahf
je
pop
push
push
xor
ror
jbe
sbb
mov
mov
pop
ret
or
jne
jb
pop
mov
jb
inc
test
add
inc
mov
rclb
or
in
push
and
and
clc
cmp
mov
push
lcall
loop
or
xor
pop
addb
rolb
add
dec
add
jmp
push
jmp
fcmovbe
aam
out
addr16
sti
outsb
scas
xchg
clc
stc
mov
adc
and
sub
call
inc
xor
loope
stos
jnp
sub
ret
hlt
sbb
daa
roll
xchg
jne
popa
push
mov
xorb
jmp
mov
dec
mov
stos
lahf
pop
addr16
rcll
leave
sarl
repnz
in
loope
jno
mov
cmc
iret
mov
push
inc
xor
push
mov
repnz
imul
leave
fs
aad
jno
xchg
pop
fdivrl
sbb
in
ja
ret
or
dec
bound
pop
mov
ret
xchg
loopne
ret
add
mov
mov
sub
and
adc
fwait
lock
ds
push
ja
mov
jp
subb
ljmp
jmp
dec
add
mov
and
inc
or
in
cwtl
repz
push
jmp
lret
loopne
xor
xchg
or
inc
add
dec
aaa
out
loope
shrl
lds
cli
push
add
add
sbb
imul
sub
push
icebp
shlb
mov
ja
pop
mov
push
jo
in
xlat
push
jp
addr16
in
push
bound
jmp
jnp
and
mov
adc
cwtl
cmp
or
hlt
jbe
jbe
push
loop
jne
cmp
dec
add
adc
shr
mov
xchg
scas
divb
push
outsb
int3
or
jae
sbb
add
push
jbe
insb
push
and
out
lcall
fsubp
sub
jg
je
inc
cli
enter
lret
push
mov
xchg
jl
or
repnz
push
or
inc
js
push
mov
aaa
gs
sahf
pop
pop
jns
adc
scas
push
sub
add
jmp
pop
sti
in
jp
adc
popf
jle
push
popa
ja
dec
inc
stos
les
push
lcall
jg
mov
icebp
lret
jecxz
xchg
mov
insl
nop
repnz
fildl
popf
pop
push
push
fldl
jae
aaa
fldl
add
mov
scas
fsub
shr
rclb
mov
insb
pop
xor
repz
icebp
repz
jnp
xchg
lcall
jmp
push
or
adcb
repz
and
or
test
loopne
add
or
push
inc
pop
and
adc
popf
pop
or
xchg
jo
std
inc
xchg
addb
arpl
sub
sub
pop
add
xor
rolb
mov
pop
mov
mov
xchg
adc
adc
mov
lds
enter
shrl
aas
sbb
jge
mov
add
xor
or
repnz
out
test
loope
nop
inc
or
adc
pop
xor
popa
pop
push
mov
cld
int3
sbb
lret
xchg
dec
xchg
push
mov
or
and
push
or
or
and
popf
jbe
imul
mov
dec
mov
or
xor
pop
pushl
sbb
jmp
adc
sub
pop
add
adc
es
lods
test
lods
imul
jmp
jmp
ret
es
scas
and
scas
mov
push
push
fidivl
add
int3
add
out
jno
inc
aas
test
outsb
shll
inc
shlb
test
dec
out
ret
lahf
mov
loopne
mov
jg
inc
jge
mov
pop
sbb
or
jno
lret
sub
and
stos
dec
or
push
data16
mov
testl
add
xchg
rorl
sti
into
jl
std
ljmp
insl
enter
add
dec
cli
dec
pop
or
push
or
aad
fs
nop
xlat
dec
icebp
cld
dec
cli
lret
mov
sbb
cmp
adc
pop
lods
jle
rep
mov
enter
sub
ljmp
cmc
or
or
jle
enter
adc
gs
fldenv
push
shr
xchg
pop
mov
add
mov
adc
roll
sub
rolb
jge
aas
loopne
cld
fs
inc
jl
insb
dec
je
data16
icebp
js
mov
in
sub
mov
adc
add
shll
mov
cmp
or
fcoms
inc
mov
outsl
lret
add
loope
aam
rclb
mov
pop
cmp
adcb
rorb
push
rol
stos
mov
loopne
add
mov
fcmovb
mov
inc
dec
mov
sub
jns
sub
push
add
push
sub
inc
xor
add
adc
in
jecxz
jp
imul
push
cld
stos
out
and
ljmp
dec
scas
jo
jmp
mov
adc
fs
push
inc
push
sub
mov
add
inc
or
mov
cs
shrl
and
js
leave
ss
inc
fs
sbbb
stc
into
add
sbb
test
stos
jmp
je
inc
in
movsb
xchg
pop
in
add
fs
pop
dec
inc
into
add
sbb
mov
daa
mov
sbb
out
sbb
dec
mov
push
dec
ret
ret
mov
out
daa
pop
fisubl
add
pop
push
jge
mov
dec
mov
in
jmp
std
pop
sarl
idivb
mov
paddq
sub
jg
push
shlb
test
xchg
notl
xor
mov
xchg
mov
push
add
or
sub
push
pop
adc
ret
xor
mov
fadds
jbe
dec
jno
add
xor
add
in
push
or
das
out
daa
and
loopne
push
rcrb
mov
jmp
xchg
mov
ds
dec
mov
shll
sbb
add
popf
push
pop
pop
add
sub
ret
add
adc
addb
lds
push
scas
out
adcb
jge
loope
inc
cli
adc
loop
js
xor
jb
and
jecxz
test
ja
mov
xchg
jg
arpl
xchg
or
push
add
jle
les
jmp
cmp
adcb
jo
clc
pop
sub
and
ret
cmp
mov
popf
shll
cmp
add
or
cmpsb
inc
sub
adc
adc
fadds
imulb
or
xor
push
inc
mov
js
dec
aaa
ret
clc
cmp
ret
lods
jb
push
rorl
mov
mov
adc
fwait
dec
add
mov
pushf
cmpsl
bound
add
movsl
adc
loopne
inc
pop
add
push
lcall
scas
and
fwait
add
pop
aam
dec
pop
jp
incb
notb
add
in
rep
jge
inc
dec
xchg
sbb
jne
and
jl
movsb
xor
dec
imul
aas
pop
sub
jecxz
cmpb
repnz
subb
add
orl
push
ficompl
pop
dec
mov
and
enter
mov
out
pop
insl
push
xchg
lret
adc
pushf
push
and
hlt
mov
addr16
push
add
and
pusha
scas
ss
or
pusha
lcall
das
std
enter
pop
out
test
mov
jge
push
mov
add
mov
cld
icebp
pop
fcompl
ja
add
mov
add
jmp
pop
mov
inc
mov
push
inc
jno
mov
pop
inc
ret
or
sbb
mov
jmp
dec
pop
or
in
lods
nop
inc
orb
cmp
sbb
jg
xor
jb
mull
cmp
push
pushf
sbb
cmc
pushf
inc
mov
push
popf
jge
lods
or
adc
inc
fsubrl
jp
jnp
stc
in
les
jmp
push
in
or
sbb
popf
orb
gs
loopne
es
ds
inc
and
imul
sub
jmp
outsl
jmp
loopne
push
mov
imul
jns
push
add
dec
xor
sbbl
ljmp
xchg
mov
je
imul
insb
inc
mov
pop
shll
push
cwtl
cmp
sbb
fiaddl
leave
sub
or
sahf
dec
adc
std
push
stc
add
jno
outsl
loopne
lods
push
push
mov
dec
sub
stos
jo
loope
sahf
mov
icebp
xor
inc
pop
std
idivb
aas
movsb
add
xor
mov
fistpll
pop
sub
add
jo
inc
push
xchg
pop
sub
sub
mov
popf
fsubl
inc
out
mov
jge
daa
and
mov
movsb
dec
dec
jmp
xlat
loop
roll
incb
push
notl
lahf
gs
xchg
add
js
das
scas
call
adc
pop
popf
pop
xor
mov
aad
clc
scas
inc
mov
adc
sub
int3
movsb
gs
pop
cmp
sarl
or
push
into
leave
or
xlat
mov
orl
xor
or
jmp
mov
in
sub
outsl
imul
gs
jge
mov
fs
das
mov
jmp
cmp
jns
inc
sbb
in
aam
jmp
cwtl
inc
or
lea
pop
and
push
notl
dec
mov
ljmp
lcall
mov
mov
jmp
sub
xchg
jbe
ret
xchg
adc
lods
pop
jg
cmc
in
leave
and
mov
sub
pop
sti
jae
sarb
sub
sbb
aam
xchg
push
xchg
dec
add
add
shr
addl
cld
cli
push
mov
and
movsl
stc
add
gs
int
jle
pop
or
pop
pop
inc
hlt
or
adc
sahf
add
sbb
cli
lds
leave
sbb
sub
ja
and
das
cmp
push
mov
inc
sub
into
lods
mov
push
pushf
sbb
xlat
cmp
mov
mov
shr
dec
cmp
xor
hlt
xrelease
push
mov
sub
es
bound
pop
in
add
mov
jmp
inc
out
les
add
aaa
push
xchg
scas
sbb
push
cmp
mov
sbb
shr
icebp
mov
jge
fadd
jae
dec
xchg
add
mov
add
dec
mov
ret
cwtl
out
mov
js
jmp
lods
mov
insl
dec
jbe
mov
sbbl
push
js
push
dec
jp
je
sub
pop
mov
aaa
sub
ljmp
jp
fwait
xchg
pcmpgtb
xor
push
stc
cmp
dec
ret
pop
push
jns
data16
add
enter
jmp
ret
xchg
dec
fmul
and
add
clc
js
mov
sub
push
aam
cwtl
sbb
dec
push
xor
lahf
sti
es
inc
shlb
jno
pop
mov
mov
mov
pop
and
jo
cmp
insb
adc
and
mov
inc
jno
pop
sbb
push
adc
mov
leave
inc
jbe
xor
shr
cltd
xchg
aas
call
jge
fs
push
and
push
stos
daa
xchg
mov
xchg
pop
add
inc
ficompl
test
ret
or
addr16
sub
ret
add
enter
nop
inc
and
aad
imul
cltd
xchg
add
push
add
cld
jl
pop
inc
lahf
jl
pop
in
adc
dec
mov
in
push
fsubrp
notb
inc
jmp
in
mov
add
loope
push
push
add
insl
in
cmp
mov
out
arpl
cmp
add
dec
lds
push
ljmp
cld
inc
pop
sub
into
outsl
or
outsl
mov
mov
xor
fcomps
pop
shr
cwtl
add
xor
push
ret
sbb
push
out
es
testl
jmp
stos
addr16
rcrl
sub
cli
pop
push
jl
gs
and
mov
and
pop
out
push
movsb
pop
shll
inc
aas
pop
cmpsb
push
imul
pop
jo
loopne
repnz
sub
pop
or
inc
inc
mov
sub
xchg
in
inc
mov
sub
repnz
pop
push
ss
pop
js
cwtl
push
lds
pusha
dec
add
aas
stos
push
jmp
dec
std
inc
and
mov
or
push
popf
into
or
push
sti
sbb
cmp
cmp
mov
lahf
inc
fs
fldl
pusha
adcb
stc
sub
xchg
adc
push
pop
cmp
dec
aad
out
mov
movsl
in
jle
divb
jb
push
or
jmp
jle
std
mov
popf
jb
xor
roll
adcb
imul
repnz
add
call
in
or
or
xor
jo
fdivs
and
scas
repz
jno
mov
scas
pop
orb
push
cwtl
cmpsl
push
mov
iret
bound
aad
add
cwtl
jmp
nop
arpl
dec
call
pop
sub
inc
fisttpl
mov
xor
sub
jno
imul
adc
adc
sub
popf
lock
fwait
loop
push
sarl
fcmovbe
jb
decb
mov
mov
je
es
and
jo
sbb
subl
popa
ljmp
mov
or
insl
push
push
add
clc
orb
mov
pop
popf
fs
xlat
nop
or
pop
pusha
mov
dec
push
sbb
xchg
stos
inc
fnstenv
jae
subb
fwait
xorb
les
out
fildl
int3
add
repz
sti
add
pop
add
mov
leave
mov
and
and
fs
xchg
xor
jo
lret
add
mov
or
mov
int3
adc
data16
xorl
test
push
adc
outsl
adc
nop
adc
mov
adc
adc
dec
ret
ficompl
adc
outsb
or
subb
fwait
mov
aaa
insl
mov
cltd
out
adc
mov
adc
bound
test
icebp
icebp
jns
cmpsb
xorb
arpl
les
or
or
lea
mov
add
or
pop
or
mov
data16
or
shr
in
add
notb
or
cld
adc
adc
xor
enter
pop
or
sbb
movb
mov
outsb
jno
cmp
xor
mov
cmc
sahf
add
leave
nop
lret
sbb
mov
pop
mov
push
aad
popa
bound
sub
std
add
sbb
test
or
dec
sbb
add
xchg
xor
scas
add
add
xchg
add
sbb
outsb
andb
or
jns
inc
or
inc
add
iret
lcall
sub
adc
ljmp
push
adc
test
inc
mov
add
xchg
xor
mov
add
add
loope
add
xchg
dec
lret
mov
in
or
out
push
call
in
cltd
jl
sbb
int3
test
in
ret
pop
int
mov
mov
out
add
roll
or
mov
inc
lods
repnz
filds
leave
fcomip
out
jp
cld
xor
pushw
xchg
stc
cmc
or
xbegin
pop
add
add
sub
scas
lahf
xor
scas
in
jns
jno
daa
stos
xor
pop
inc
jge
jg
cmc
add
cmp
jmp
dec
stc
lret
mov
aas
pop
repz
adc
or
dec
pop
dec
loope
cld
loope
lock
outsb
out
and
repnz
mov
add
mov
lods
push
xlat
out
adc
test
test
mov
or
negl
cmp
andb
insb
sbb
das
cmpl
mov
inc
xor
imul
test
inc
lods
loope
scas
cmp
cmp
xchg
popf
aaa
inc
pop
out
rolb
adc
jmp
cmc
ja
pop
sar
insb
jnp
push
and
dec
or
fs
adc
andb
jmp
addl
dec
jg
dec
loope
mov
popf
stc
shll
pop
push
xor
jmp
sahf
iret
or
push
pop
call
pusha
fidivrl
fildll
pop
ss
fscale
outsl
mov
dec
int3
push
xor
xor
push
ret
mov
lds
dec
inc
fscale
or
dec
pop
pop
add
xor
sub
pop
sbb
sbb
xor
and
int3
mov
or
lret
not
add
cmp
pop
add
jmp
mov
or
rorl
jmp
or
xchg
mov
outsl
jecxz
lods
je
mov
fistpll
mov
push
adc
or
mov
insl
and
mov
rol
out
push
or
addr16
jae
jns
fs
pop
pop
jl
jbe
add
mov
jmp
inc
insl
pop
je
rcr
xchg
aaa
pop
cmpsb
push
outsl
loop
push
add
call
out
mov
inc
inc
xchg
mov
cli
repnz
gs
add
mov
lods
push
xor
push
mov
add
xor
jmp
mov
push
out
or
insl
mov
fistpll
inc
add
cmp
add
add
inc
lods
xchg
xor
jmp
pop
leave
mov
pop
pusha
sbbb
out
or
mov
repz
mov
js
or
pusha
test
jmp
loope
shrl
push
dec
jmp
sbb
xor
dec
push
inc
mov
or
mov
push
sub
mov
jmp
jo
repz
imul
rep
nop
add
fadds
inc
icebp
mov
cmp
inc
rorl
orb
sub
push
sub
add
xor
aas
dec
jo
lods
dec
cmpsl
push
and
or
mov
inc
dec
dec
lahf
add
roll
popa
test
push
and
and
mov
or
dec
repz
fildl
cmp
or
das
pop
mov
add
add
ds
jne
out
sarb
and
dec
pop
cwtl
pop
adc
push
xchg
fldenv
shll
push
dec
outsl
es
ds
add
add
sub
mov
dec
roll
fsubrs
xlat
inc
andb
push
fimull
push
mov
shlb
adcb
mov
push
xchg
mov
leave
packssdw
or
and
and
push
lret
adc
rcr
ucomiss
jmp
rcll
scas
fstps
mov
and
lret
push
add
xlat
das
add
xchg
test
gs
ljmp
mov
std
and
cmp
mov
mov
cld
add
jmp
push
jmp
mov
aas
aaa
cmc
mov
out
jg
out
ret
mov
pop
pop
jp
mov
or
cltd
pop
into
pusha
push
rclb
popa
idiv
pushf
out
rclb
pop
push
popf
push
mov
fisubrl
mov
pop
xchg
stc
add
testl
and
cli
and
push
dec
xlat
pusha
dec
lds
mov
imul
xchg
es
push
addr16
nop
jnp
ret
sub
insl
fs
loopne
lahf
inc
dec
cmc
imulb
push
cmp
add
sbb
repz
call
test
jl
arpl
test
sbb
fs
mov
jp
jmp
arpl
sbb
mov
mov
fisttpl
mov
cmp
mov
movsb
arpl
lret
mov
xchg
jns
mov
xchg
clc
dec
dec
out
int3
cmp
inc
and
or
outsb
cmpsb
hlt
add
mov
stc
sub
add
add
or
inc
or
sbb
repz
ja
sbb
cmp
dec
sbb
test
arpl
nop
std
gs
add
std
pop
cmp
cmc
and
loop
mulb
mov
andl
inc
dec
or
xchg
push
mov
inc
fadd
add
enter
add
cmp
xchg
aad
jmp
mov
add
fwait
mov
movsl
movsl
add
insb
push
je
and
inc
add
imul
pop
push
inc
pop
push
add
dec
adc
push
xchg
add
mov
aaa
or
les
in
adc
adc
popa
lds
into
push
xor
imul
test
lods
loope
push
add
jg
imul
dec
add
and
or
push
push
dec
sub
push
loop
and
mov
faddl
push
or
and
add
xor
leave
loope
loopne
mov
lds
out
inc
sub
imulb
das
and
lret
pop
aad
jmp
outsl
add
dec
jg
mov
in
sub
jne
lahf
rcrl
pop
mov
add
add
adc
mov
fisttps
popf
mov
cmpl
in
js
or
sub
dec
xor
sbb
push
pop
orl
xchg
push
jg
aam
jle
push
push
and
pop
in
decl
jne
cltd
jns
xorl
ficomps
test
mov
aas
inc
sub
pop
adc
push
mov
pop
mov
fs
cmp
add
cwtl
sub
and
pop
sub
inc
push
sub
mov
repnz
shll
sbbb
sbb
stos
cmc
jne
inc
out
in
sbb
daa
mov
and
or
pop
adcb
das
arpl
repz
daa
pop
das
or
inc
mov
testb
add
mov
cwtl
nop
inc
es
fnsave
add
incl
cmp
call
cwtl
mov
test
shrb
add
fstpl
out
int3
in
or
xlat
dec
xor
mov
cmpb
nop
sar
xchg
dec
aaa
fcom
rorb
push
xor
lret
mov
xor
test
adc
and
mov
lret
daa
pop
pop
enter
cwtl
cmp
jmp
adc
notl
adc
outsl
js
and
jne
dec
pop
cmc
mov
add
test
or
jmp
pop
push
push
and
push
cmpb
jmp
sub
adc
jle
cltd
cld
inc
fildll
fsubs
outsl
jo
es
inc
pop
mov
test
inc
ss
jge
sub
adc
adc
and
repz
mov
mov
add
loop
fstpl
add
ljmp
cmc
jecxz
lods
ljmp
fildll
pushf
cwtl
mov
jmp
jg
mov
call
or
xchg
daa
pop
push
xchg
cs
rcrb
sub
add
ljmp
cmp
inc
das
xor
cmpsl
pop
fists
sub
mov
pop
push
cmpsl
outsl
div
add
popa
addr16
mov
cmp
lret
jmp
adc
dec
pop
or
std
enter
popf
cltd
push
aaa
aas
mov
scas
ret
jns
add
popa
rcl
dec
xchg
int
pop
jmp
push
mov
ret
sbb
pop
repz
mov
jmp
std
les
cs
outsb
test
mov
jmp
or
xor
out
pop
jmp
push
mov
xor
les
jg
jmp
dec
xor
push
push
xor
and
pop
jp
lahf
xchg
das
enter
or
add
pop
xchg
push
mov
inc
stos
repnz
xor
insb
pusha
fisubs
in
xor
jb
out
add
mov
hlt
add
inc
jle
xchg
jl
dec
dec
arpl
add
mov
cmp
out
mov
inc
jo
and
inc
sbb
or
mov
xorb
pop
incl
mov
outsl
mov
and
and
or
subb
dec
int3
dec
es
xchg
xchg
and
cltd
cmp
xchg
push
ret
push
fnstsw
dec
enter
mov
inc
add
xor
and
sbb
scas
lds
mov
add
push
push
mov
ret
ret
xor
push
mov
lds
jmp
jle
jns
and
or
mov
add
cwtl
jmp
add
dec
out
xor
pusha
icebp
arpl
or
push
rcrl
mov
cmp
jmp
adc
dec
icebp
pop
pusha
adc
gs
and
mov
insb
scas
fcoms
pop
mov
inc
push
push
pusha
pextrw
cmpsl
jae
mov
sub
mov
add
push
mov
dec
sbb
daa
or
or
pop
push
dec
lret
inc
int
loopne
pop
adc
dec
mov
sub
shr
repnz
das
jecxz
iret
ja
add
fisubrs
clc
pop
and
jno
outsl
fistl
add
pop
mov
sub
cmc
lahf
icebp
dec
out
cld
push
and
cmp
push
dec
jnp
loop
into
inc
or
inc
popa
jg
in
sbb
nop
ficoms
lock
mov
negb
mov
fadds
popl
dec
lock
subl
push
mov
fiaddl
jne
mov
and
fists
int
sub
xchg
push
in
add
adc
shl
repz
mov
or
dec
xor
jmp
mov
cmpb
js
push
and
mov
push
pop
xchg
sub
lahf
xor
add
or
mov
mov
lds
pop
int3
push
jae
push
nop
int
adc
dec
imul
push
mov
inc
pop
je
mov
sbb
or
pop
or
fadds
sub
sub
pop
add
xchg
jmp
in
ds
test
imulb
mov
push
andb
sbb
add
insb
jbe
lods
xchg
jg
loopne
pop
mov
xor
and
add
sub
ja
and
pop
or
add
and
push
mov
push
cmp
fimuls
add
adc
mov
sbb
sbb
add
mov
not
jmp
outsl
sbb
and
bound
mov
pop
adc
int3
out
lds
stc
jno
and
jmp
out
daa
in
movhps
movsl
test
subb
cmp
movsb
scas
cld
movsl
icebp
jmp
jb
push
push
fldt
dec
gs
lock
add
cld
hlt
jmp
mov
mov
or
imul
add
or
xchg
or
shlb
mov
arpl
jle
mov
pop
sub
in
xor
mov
sub
jno
lds
mulb
rol
in
fiaddl
add
ret
jns
cmp
dec
add
xor
pop
in
in
call
loopne
mov
mov
lods
icebp
jp
cmc
arpl
sub
pop
cld
add
sub
jmp
xchg
dec
rorb
out
cmpb
iret
pop
add
idivl
lods
orb
cmpsb
sarb
mov
xorb
sub
sub
addb
arpl
and
push
jmp
jnp
mov
leave
and
or
scas
sub
pop
ljmp
aaa
comiss
daa
push
mov
and
mov
xchg
adc
mov
aad
cmpb
jl
adcl
fnstsw
mov
into
cmpb
xor
sub
push
sub
aas
push
test
dec
cltd
add
inc
dec
jne
mov
ljmp
rclb
mov
jle
mov
arpl
xor
daa
or
xor
jmp
add
pop
push
mov
sub
rol
sub
loop
and
pop
pop
rcl
inc
into
jmp
jmp
mov
mov
in
fstps
xchg
lret
xorb
adc
or
dec
addb
adc
mov
pop
ret
jp
or
loopne
adc
push
enter
pusha
lock
aaa
mov
arpl
dec
or
das
adc
loope
inc
inc
xlat
pusha
scas
lret
add
shrb
daa
xor
loop
inc
xor
add
addr16
mov
sahf
adc
pop
scas
popa
jp
mov
enter
push
jmp
push
xlat
out
cli
xor
bound
lcall
fwait
adc
pop
push
adc
not
or
xor
faddl
loopne
testl
pushf
icebp
lds
rcr
loope
inc
or
imul
jp
stos
mov
cltd
shl
mov
xchg
jmp
jnp
sbb
imulb
cmp
add
fiaddl
and
push
popa
xor
add
ret
test
push
xorb
pushf
cmp
mov
dec
lods
adc
ja
add
jmp
test
jmp
sbb
cmp
jle
cmp
aaa
dec
cmpsb
adc
xor
jmp
jle
ja
sub
clc
int3
sub
imul
xor
loope
je
stos
push
les
imul
mov
sbb
repz
and
mov
iret
mov
mov
xor
pop
push
push
jmp
lret
test
sbb
jl
int3
add
xor
sub
dec
lods
cld
cmc
stos
out
cmc
les
cmpsb
lcall
ss
repz
jle
cmp
xor
fs
std
je
adc
mov
fisttpll
mov
or
loope
call
mov
sub
imul
sub
cld
mov
xchg
dec
or
and
out
dec
mov
add
jne
dec
int3
and
mov
mov
movsl
popa
addr16
adc
mov
stos
adc
pop
sti
xchg
mov
xor
xor
jmp
dec
cs
push
or
movsb
xchg
pusha
or
iret
cmp
dec
and
inc
dec
cwtl
and
sbb
sbb
sbb
and
xchg
ja
pushf
and
inc
and
push
bound
inc
test
and
push
jge
xchg
dec
adc
popf
frstor
mov
mov
pusha
ds
shr
push
mov
ja
mov
xor
dec
cmpsb
xor
cwtl
mov
xor
std
out
sub
pop
jecxz
lock
inc
out
loope
push
mov
sub
hlt
and
add
je
mov
adc
adc
pop
incb
push
dec
loopne
cmpb
xchg
dec
cwtl
mov
push
jmp
icebp
adc
mov
xor
aas
xchg
xchg
fdivs
jbe
pop
add
and
out
inc
pop
out
xor
add
in
dec
and
xchg
inc
cld
mov
jge
and
inc
sbb
sub
sub
cmp
and
rorl
negb
jmp
push
lds
jmp
mov
mov
js
pop
cmc
xor
cwtl
mov
sbb
jge
adc
push
jmp
xchg
test
jmp
sub
ljmp
mov
pop
nop
cmp
sub
cmp
jmp
xchg
sub
push
das
and
in
imul
movsl
sub
sub
xchg
pop
sub
push
add
mov
sbb
repnz
and
popf
xchg
jecxz
dec
mov
aas
orl
pop
stc
jle
jl
jp
push
not
popf
add
dec
mov
shll
or
mov
test
cli
out
into
sub
xor
cmpsl
repnz
xor
rolb
push
neg
dec
shll
and
sub
jmp
daa
inc
cmp
push
pop
mov
pop
test
cmp
inc
sbb
icebp
jp
lds
jmp
cmp
iret
scas
aam
add
jmp
xor
sbb
out
movsl
inc
add
jae
sarb
mov
mov
pop
push
sar
inc
jo
jmp
lret
pop
jmp
push
scas
std
cltd
mov
inc
xchg
pop
cmp
cltd
cmp
ja
pop
popa
or
hlt
scas
pusha
pusha
lods
jb
sbb
outsl
adc
xchg
pop
or
xor
or
push
or
fbstp
lcall
sahf
mov
mov
add
jmp
sub
pusha
sub
mov
stos
pop
push
jmp
mov
and
mov
pusha
cmp
mov
xlat
es
jnp
in
push
das
jp
pop
bound
daa
aam
aad
and
cmp
jnp
dec
adc
pushf
popa
or
loop
orb
mov
rorb
sbb
ja
mov
jecxz
and
out
mov
sbb
lahf
mov
lea
icebp
clc
bound
add
mov
push
pop
pop
mov
pop
inc
jmp
mov
addl
and
adc
jmp
scas
jge
and
push
mov
sub
lahf
push
fnstcw
inc
ret
pop
fisttps
mov
fistl
push
xor
addr16
pop
dec
scas
jo
lods
fwait
mov
je
cli
dec
scas
shlb
xor
mov
or
fwait
sbb
std
out
mov
sbb
das
inc
loope
xabort
cmp
mov
arpl
add
dec
mov
das
jl
rclb
stos
jno
add
push
push
mov
shl
xor
movsl
jnp
fildll
xor
or
pop
aas
call
rorl
test
jnp
add
jno
cltd
pop
arpl
lahf
inc
adc
push
shl
add
sbb
mulb
das
mov
mov
mov
mov
mov
jecxz
cld
inc
cmpsl
iret
arpl
or
rdtsc
inc
xor
stc
add
int3
mov
inc
daa
inc
sub
data16
cmp
sti
bound
mov
push
out
adc
movsb
cmp
fisttpl
or
jmp
xor
or
repnz
mov
mov
cmp
mov
inc
push
sub
pop
mov
movsb
cld
push
testl
sub
scas
sbb
cmp
push
jmp
push
mov
dec
jmp
jns
xor
loope
loop
ljmp
add
xor
adc
subl
cmp
das
pop
push
arpl
add
mov
sub
loopne
mov
xchg
jl
das
mov
push
mov
in
sub
adc
pop
out
jl
icebp
popa
dec
mov
jno
or
pop
mov
imul
mov
std
xor
pusha
fwait
xor
adc
push
lret
shlb
dec
pushf
shrl
adc
fadds
lds
add
dec
fsubrl
inc
xchg
dec
add
or
mov
cltd
pop
stc
adc
in
inc
les
or
js
test
add
pop
mov
push
jne
mov
add
sub
pop
xchg
lds
mov
add
jmp
and
sub
jmp
adc
xchg
mov
jbe
mov
popf
cmc
cmpsl
cmp
jo
mov
repz
repnz
sbb
out
gs
jne
jne
daa
lahf
or
sbb
mov
and
loopne
mull
or
cs
dec
loop
loope
nop
cmc
push
push
push
jmp
add
jns
dec
xor
outsb
push
arpl
mov
adc
ud2
int3
cmp
push
push
mov
rcrb
movl
mov
fiadds
add
outsb
add
mov
insl
dec
sub
lods
add
inc
and
mov
sub
mov
lea
adc
cli
gs
jmp
fdivrl
or
cmpl
jle
xor
out
in
popf
fistps
jle
inc
mov
and
or
adc
dec
push
or
adc
xor
inc
push
les
out
push
xchg
pop
cmp
popf
inc
mov
add
adc
aas
and
inc
add
les
sbb
clc
mov
daa
lods
sahf
das
test
cmp
adc
xchg
subb
pop
frstor
pop
movb
pop
sti
or
sbb
inc
pop
or
cli
or
jae
jns
roll
sub
jg
lcall
lahf
push
lds
test
aaa
cltd
mov
movsl
push
dec
es
sahf
inc
jg
or
push
outsb
pop
mov
dec
jge
pop
jmp
enter
add
push
push
pop
pop
sti
inc
hlt
jp
out
mov
pop
cwtl
andb
les
test
outsb
jg
jb
pop
mov
shrl
push
shl
mov
fisttps
inc
iret
sbb
sbb
push
in
sbb
js
and
xchg
das
jge
add
dec
push
outsl
adc
push
shr
and
das
push
pop
out
fsubl
adc
aas
aaa
add
mov
fidivrs
pusha
pop
dec
cmp
sub
xchg
sub
or
scas
jae
andb
xor
ljmp
mov
xlat
push
inc
out
sbb
mov
cltd
mov
or
sub
or
push
pop
sub
es
jno
sbb
into
jnp
cmp
pop
neg
cmp
repz
cs
add
repnz
xchg
cs
jmp
sub
jmp
mov
dec
js
das
rorl
rcrb
jmp
pop
outsb
mov
push
idivb
push
das
mov
das
jmp
sarl
adc
push
sub
ret
or
fdivs
or
mov
and
adc
push
jns
dec
mov
pop
mov
loope
add
jmp
mov
shl
dec
add
flds
inc
addb
lret
push
push
inc
mov
iret
sub
jmp
push
loope
cld
flds
cmp
mov
jge
sar
sub
les
jbe
mov
and
push
xchg
jae
aad
sub
or
push
js
jae
lret
aas
ret
push
xchg
mov
inc
dec
gs
scas
cmc
int
daa
pop
pop
stc
adc
or
mov
mov
or
xchg
gs
dec
repnz
and
insl
cmc
sub
jns
mov
sbb
ret
out
push
push
cli
into
loopne
ljmp
mov
jle
test
popf
sahf
sub
mov
fiadds
push
cmp
jbe
arpl
push
mov
test
pushf
jmp
insl
out
sub
pop
stos
push
pop
inc
push
test
dec
cmpsl
pop
jmp
inc
repz
cmp
pop
dec
les
jb
add
sbb
dec
mov
popf
hlt
enter
push
mov
out
and
add
pushf
and
push
push
mov
enter
stc
nop
mov
add
call
sbb
cmp
scas
or
outsb
das
mov
aas
lret
clc
lret
xchg
sbb
jnp
dec
inc
sub
adc
adc
mov
mov
ret
xchg
dec
xchg
std
and
cld
jmp
sbb
cmp
mov
add
fisubrs
sbb
bsr
lock
int3
sbb
cli
dec
sbb
jmp
subb
add
test
push
aas
stos
les
xchg
ljmp
sbb
dec
popf
xor
adc
add
data16
and
mov
les
dec
sub
add
inc
push
add
xor
push
and
jno
pop
loopne
jbe
sbb
pop
test
jns
add
xorl
dec
stc
loopne
mov
and
sub
dec
cld
xor
mov
repnz
mov
lds
dec
mov
bound
cwtl
push
lods
mov
xor
aam
add
push
lock
xor
jg
xor
rcrb
or
ljmp
xor
cmc
push
add
jne
mov
rolb
and
xchg
ja
repz
push
cmp
add
or
addb
dec
mov
ds
pop
and
in
sar
sbb
cwtl
add
inc
mov
dec
mov
sub
push
std
enter
fistl
or
mov
das
pop
popa
sbb
iret
xchg
sarl
lret
xchg
or
dec
mov
xor
fadd
leave
sbb
addr16
dec
xor
jmp
push
xlat
repnz
sbb
or
imul
jo
sbb
add
sub
stos
mov
and
shlb
fsubrl
test
insl
test
add
icebp
testb
push
push
call
push
jo
jmp
sub
xchg
adc
pushf
add
fidivrl
and
and
in
mov
inc
or
pop
lcall
insb
inc
cmp
loope
mov
add
mov
xchg
xchg
pop
addl
pop
push
inc
sahf
pop
cld
mov
repnz
std
pop
and
pop
push
pop
mov
xor
xchg
inc
cmc
adc
add
adc
or
pop
mov
and
or
fimuls
stc
dec
adc
mov
adc
dec
and
dec
call
xor
fcomps
add
pop
push
jnp
push
add
cltd
cmp
cmp
addr16
adc
pop
mov
adc
sbb
xor
adcl
int3
add
dec
cmp
push
inc
jae
stc
xor
in
dec
mov
enter
sub
or
or
pop
push
int3
sbb
dec
outsl
cmpsl
jge
and
ljmp
clc
cmc
mov
fsubrs
repz
sub
mov
add
inc
subb
sbb
in
leave
add
orl
add
add
mov
std
add
rclb
scas
push
mov
pop
notb
inc
xchg
lds
es
or
or
ffree
gs
jnp
ja
xchg
add
inc
js
sbb
mov
mov
test
lock
fs
rcll
push
inc
cld
add
sbb
adc
push
scas
test
push
push
out
adc
repz
into
sub
repz
push
cli
ljmp
je
sub
pop
movsl
pop
xchg
and
aas
dec
mov
dec
sbb
cmp
dec
pop
jae
sub
sbb
pop
mov
or
sub
pop
jmp
out
outsb
inc
clc
rcrl
lcall
pop
inc
insl
xor
push
scas
sub
jmp
loope
inc
dec
and
jle
subb
mov
push
or
in
in
ljmp
and
jns
cmc
mov
mov
nop
loop
sahf
push
sub
test
sbb
adc
pop
cli
jecxz
mov
std
add
inc
dec
jmp
daa
les
out
or
cmp
outsl
jne
js
push
jp
push
ljmp
movsl
sub
ja
out
mov
les
in
inc
mov
fisubrs
jmp
mov
stc
les
ret
loope
je
pop
lahf
cwtl
jns
ficomps
mov
mov
xor
and
loopne
inc
jae
sti
cmpsb
loope
jmp
lock
lods
adc
add
mov
mov
hlt
dec
and
cmpsl
ds
xorb
mov
mov
gs
add
jg
inc
fwait
xchg
movsb
test
cbtw
call
add
push
or
test
aam
adc
loopne
mov
sub
aam
stos
add
pop
xchg
jmp
pop
inc
inc
push
shll
insl
jp
adc
addl
add
sub
or
ret
xchg
repz
push
mov
ret
cmp
inc
mov
push
and
ret
mulb
mov
or
rcrb
mov
pop
ja
mov
jb
imull
or
or
push
xor
and
lock
push
aad
cs
ror
push
mov
cltd
and
movsl
imul
pop
add
inc
push
lahf
pop
sub
adc
adc
cltd
test
push
mov
push
sti
cmpsl
and
cmp
fistpll
adc
mov
cmc
mov
pop
xor
movsb
xchg
pop
inc
or
sub
pop
xor
data16
call
divl
mov
cmp
pop
mov
pop
inc
push
mov
daa
xlat
into
or
adc
sar
cld
mov
adc
mov
shll
mov
es
js
cltd
dec
movhps
inc
sub
xchg
add
bound
in
fadd
sbb
jo
pop
add
jb
cmc
lds
fmull
cwtl
shrl
xchg
adcb
lods
jno
mov
push
dec
push
aam
leave
mov
xor
aaa
aas
pop
pop
mov
call
or
push
xor
fnstsw
ss
xor
andl
push
dec
dec
shrl
add
shl
or
xchg
sbb
repz
mov
add
inc
leave
shll
lret
out
add
xor
add
mov
stos
inc
adc
int
fs
and
xor
pop
cltd
inc
sbb
lods
jno
dec
and
xor
outsl
mov
jne
push
pop
push
mov
mov
mov
add
jo
sub
jns
push
orl
mov
push
mov
dec
pop
jno
scas
std
cmpsl
lret
dec
sub
mov
lods
add
arpl
test
or
cmc
clc
test
call
cwtl
fs
sbb
arpl
fnstenv
ret
or
jae
or
mov
std
mov
push
pop
paddusb
xchg
mov
clc
ffree
pop
jge
jae
fldt
jge
mov
roll
notl
mov
mov
lahf
dec
sbb
jnp
mov
xor
ret
divb
mov
xor
sub
mov
add
gs
jg
mov
pop
mov
loope
dec
inc
in
das
add
out
jp
sub
aad
sbb
or
jl
and
repnz
pop
ljmp
rclb
cmp
jmp
mov
dec
push
inc
or
inc
in
je
mov
out
add
inc
jmp
mov
jg
loop
std
ret
sub
cmp
aam
idivl
daa
pop
aaa
push
and
inc
outsb
mov
sti
add
push
mov
arpl
mov
xchg
out
adc
cld
or
jb
adc
or
xor
ret
push
push
jge
pop
push
cmp
testl
jmp
mov
mov
iret
xor
or
dec
or
push
lea
aam
adc
mov
lcall
out
add
mov
sub
ret
mov
nop
dec
add
pop
dec
jmp
cmpb
pop
pop
inc
notb
cwtl
dec
add
add
insl
add
dec
imul
pop
cmc
in
push
shlb
xchg
or
add
pop
push
inc
push
xor
and
xchg
jg
push
repnz
inc
lods
sub
add
lock
pop
xor
push
xchg
push
lock
add
add
adc
and
stos
int3
movsl
rcl
daa
jbe
or
pop
dec
fnstenv
stos
jnp
pop
pop
mov
dec
push
movsb
cmc
mov
jmp
shl
and
adc
movsl
inc
sub
rep
xchg
sbb
dec
fsubrl
push
sub
pusha
jo
hlt
cmpb
pop
jmp
lds
dec
int3
test
in
mov
rol
pop
push
push
and
pop
mov
jae
push
cs
stc
les
dec
pop
addr16
and
es
lret
or
sbbl
sub
dec
cmc
jge
test
lea
ds
insb
in
sub
subb
sahf
mov
std
xor
xor
cld
push
inc
nop
cmp
fldl
mov
mov
jg
pop
cwtl
inc
ljmp
push
jmp
push
test
sub
jge
adc
pop
pop
xchg
out
sbb
imul
add
push
mov
lahf
fiaddl
pop
add
loope
js
pop
cli
sub
cld
out
sbb
dec
cs
les
flds
or
mov
jns
loop
aaa
lret
lahf
pop
mov
in
nop
hlt
mov
xlat
push
push
dec
adc
inc
or
test
or
inc
pop
push
push
pop
dec
ucomiss
stos
test
sbb
rcr
jmp
push
push
pop
es
dec
stos
xlat
test
test
lods
push
sbb
dec
sub
dec
xor
mov
arpl
js
pop
push
hlt
mov
enter
and
add
jmp
ret
dec
in
jb
cmpb
std
sahf
jae
fwait
enter
mov
pop
add
lds
fsubrs
push
mov
dec
sub
hlt
icebp
movswl
gs
loopne
and
mov
dec
ret
mov
mov
out
dec
add
scas
add
sarl
je
lods
jbe
jle
or
cmc
add
jnp
sub
sbb
cld
push
leave
mov
dec
int
sub
xchg
jne
pop
adc
ret
jecxz
es
in
sarl
adc
add
and
push
mov
ret
push
stc
pop
pop
mov
aad
testb
inc
repnz
popa
test
mov
and
xor
adc
scas
mov
inc
mov
jmp
out
mov
movsb
sahf
outsb
xchg
js
ja
or
or
shrb
aaa
jmp
jmp
rorl
and
pop
dec
jmp
pop
incl
out
call
movb
pop
or
pop
sub
add
jbe
daa
or
or
push
mov
or
cwtl
repnz
rcrb
enter
cli
setbe
cld
xchg
inc
clc
fwait
movsb
stos
out
adc
enter
jno
mov
push
cmpl
int3
inc
testb
daa
ja
insl
daa
pusha
jno
sub
pop
adc
pop
pop
and
fnstenv
orl
or
daa
mov
mov
push
les
lea
enter
xor
pop
pusha
mul
insb
daa
loop
fisubrs
or
ds
xor
addr16
imul
not
cmp
not
mov
idiv
shrb
gs
pop
push
stc
sti
xchg
mov
gs
sub
fwait
inc
push
sub
movsb
leave
mov
sub
js
retw
icebp
push
push
add
jbe
sub
mov
fadd
pop
adc
jecxz
test
data16
dec
inc
fisttpll
iret
inc
loop
push
fidivs
jno
cmp
imul
mov
jns
push
ret
imulb
push
insl
mul
adc
push
adc
mov
inc
lock
rcrb
xchg
dec
push
icebp
jmp
inc
outsb
in
pop
loopne
jge
mov
sub
stos
mov
pop
pop
push
mov
jno
jmp
dec
mov
jmp
or
push
adc
out
jle
es
dec
subl
adc
int
lret
cmp
mov
cmc
lahf
mov
inc
push
xchg
push
jmp
sub
jmp
js
pop
shr
sub
sub
sbb
pop
arpl
xchg
testb
pop
inc
hlt
xor
cld
into
push
or
push
jne
rol
and
dec
sub
and
add
jl
pop
and
dec
mov
jge
ficoml
fsts
loope
cmpb
inc
jb
push
fadds
repnz
dec
inc
loope
decb
sub
out
jae
adc
xor
stos
call
imul
xchg
dec
rcll
mov
add
dec
inc
std
lret
sahf
adc
pop
mov
insl
scas
adc
out
jns
pop
push
cmpsb
sub
pop
sub
inc
js
dec
out
push
add
sub
add
nop
mov
adc
push
push
fsubrs
dec
cli
scas
sub
aam
push
pop
mov
pop
addl
cmp
and
je
ret
jno
out
sbb
mov
mov
into
dec
cli
cmp
leave
or
inc
mov
jno
push
push
jmp
and
pop
xor
cmp
dec
jne
cli
xchg
cmc
imul
sbbb
mov
pop
sti
lea
pop
scas
imul
xor
cld
push
jo
or
push
mov
dec
icebp
int3
adc
pop
or
jns
mov
jmp
add
mov
dec
test
pop
mov
mov
js
jmp
xchg
jle
cli
push
xlat
clc
jbe
lret
add
jmp
mov
dec
stos
dec
sub
push
pop
jmp
xchg
push
icebp
push
push
neg
adc
ret
daa
jmp
fmull
mov
loopne
movsl
jo
and
cmp
push
adc
test
into
push
pop
inc
and
dec
pop
lcall
and
and
gs
jne
sahf
cs
js
inc
repz
cmp
inc
addl
xor
and
ss
xchg
aad
xchg
faddp
push
mov
clc
push
add
push
loop
lods
jne
jg
out
sub
cmp
sahf
push
cld
jno
sub
and
push
pop
sbb
add
scas
and
jno
dec
pop
aas
cmp
lods
std
mov
jmp
push
das
mov
arpl
cmc
mov
mov
pop
mov
in
mov
pop
add
mov
imul
push
cmp
inc
sub
stos
addr16
ljmp
jno
iret
lds
inc
mov
pop
push
fldl
aas
jmp
mov
jne
pop
adc
mov
test
hlt
in
loopne
or
xchg
xor
xor
inc
push
push
rcrl
jo
mov
jbe
das
roll
sti
movsl
push
xor
sub
call
popaw
daa
or
daa
lock
icebp
mov
inc
in
mov
gs
test
fcmovb
rolb
mov
or
adc
push
add
pop
adc
imul
pop
or
ja
push
stos
push
cmpsl
out
sub
rolb
inc
mov
fs
movsb
int
dec
stos
jno
pop
push
clc
and
rorb
push
push
outsl
xchg
inc
sub
cmp
or
insl
ret
and
dec
pusha
add
and
or
dec
sbb
adc
pop
scas
inc
push
mov
push
insl
hlt
scas
or
pop
or
xchg
add
sbb
repz
and
rcl
scas
shll
jmp
add
leave
and
cmp
jnp
add
and
push
test
dec
vcvttpd2dqy
shr
push
sub
sbb
addr16
fsubs
aam
sbb
pop
push
mov
nop
ficompl
hlt
repnz
pop
mov
fcompl
mov
sub
nop
push
das
leave
and
aam
mov
xchg
sbb
mov
inc
rclb
cld
rorl
scas
rcrb
push
dec
push
dec
das
push
in
hlt
xor
out
popf
jg
and
add
xchg
subb
in
les
add
test
xlat
shrl
lods
mov
int3
je
pusha
hlt
ret
aas
add
bound
sub
mov
iret
add
mov
dec
and
ficomps
xchg
push
mov
xor
push
pop
adc
repz
movsl
int
pop
call
fmull
push
and
jl
pusha
ljmp
test
xor
mov
adc
call
push
insl
jmp
jmp
gs
pop
push
and
push
add
and
jge
push
inc
and
add
push
xchg
pop
loopne
lds
jnp
jg
cs
pop
daa
inc
out
out
or
sahf
lret
push
pusha
inc
shl
pop
push
mov
in
into
js
das
add
push
scas
enter
push
popa
or
pop
xchg
mov
dec
aas
or
add
shll
gs
adc
sahf
rcrb
cltd
imul
in
lods
dec
test
push
jmp
xchg
sbb
lods
and
ss
jle
pop
mov
jo
jg
mov
test
mov
notl
mov
out
push
les
mov
aas
or
mov
push
pop
and
rorb
inc
in
nop
mov
rcll
dec
and
repnz
cmp
xchg
sbb
shrb
fbstp
clc
pop
mov
inc
xor
lods
pop
aaa
push
sub
test
mov
xchg
in
testb
adc
cmp
jns
mov
adc
or
outsb
fucomp
shrl
ficoml
stos
lahf
and
push
push
pop
subb
jp
jmp
sti
in
lea
lods
adc
shl
and
addl
or
add
pop
out
pop
push
pop
rorb
lds
sbb
sub
mov
or
pusha
mov
push
dec
and
or
daa
xor
aad
cwtl
push
push
mov
jmp
jecxz
or
or
or
sbb
or
test
mov
xor
ss
mov
lret
pop
addr16
or
nop
mov
popf
inc
sub
inc
push
add
out
xor
push
adc
lds
adc
adc
add
cmc
jmp
sbb
sub
jmp
out
sbb
lahf
mov
add
push
sub
pop
inc
adc
pop
jecxz
xchg
je
lcall
fsts
rorl
stos
mov
xchg
lods
movsl
mull
repnz
es
ret
mull
xorb
jmp
mov
mov
add
outsb
in
clc
xchg
mov
or
ret
mov
fcmovne
mov
call
outsl
pop
daa
push
cmp
sbbb
leave
mov
mov
shll
push
add
or
or
bound
or
pop
push
xor
push
sbb
lods
cmp
or
adc
ficoms
push
adcl
jp
jg
outsl
xchg
jp
jae
mov
outsb
adc
aad
mov
jp
into
adc
fdivs
inc
and
pop
cmp
sub
sub
fsts
add
inc
pusha
pop
push
or
or
add
mov
out
pop
jnp
adc
loope
fdivrs
mov
or
and
mov
push
imul
jns
ret
icebp
push
jle
mov
pop
stos
and
push
jle
add
addl
cs
icebp
cmpsb
pop
cmpsl
pusha
pop
sbb
stc
jne
push
push
ja
ficompl
loope
cmp
mov
jmp
mov
xchg
pusha
ljmp
data16
addr16
das
mov
rorb
es
lods
addr16
fbld
cmp
mov
shr
aad
movsb
lret
ret
push
loop
rcll
sbb
mov
xchg
inc
sub
pop
sbb
add
jne
ror
sti
nop
push
xor
ss
dec
sbb
mov
pushf
mov
push
mov
loope
je
sub
aam
rorl
hlt
xor
movsl
bound
jo
das
sub
daa
nop
pop
sahf
sbb
daa
mov
mov
sub
jmp
nop
das
add
jg
xor
cmp
cld
inc
jmp
dec
movsb
insb
dec
xor
adc
cmc
jmp
push
cmp
xor
loopne
inc
cmp
mov
in
pop
pop
xor
js
mov
push
or
dec
sbb
in
jb
mov
shll
mov
push
movsl
outsl
or
jo
add
push
iret
inc
cmp
sub
pop
nop
xor
lods
out
sbbb
loope
lret
das
adc
loop
jle
inc
push
add
cmp
jne
jmp
lods
test
lods
in
push
jmp
insb
lret
je
clc
mov
jmp
gs
and
pushf
xchg
rolb
enter
pop
xor
push
jmp
xorl
xor
and
ret
inc
push
push
dec
negl
sahf
add
push
xor
int3
or
xchg
mov
or
testl
cltd
mov
leave
int3
jle
test
lock
mov
in
loop
sbb
std
jae
out
fldenv
pop
pop
pop
and
iret
and
and
out
popa
push
jmp
ljmp
or
sbb
test
test
sbb
or
scas
cmp
dec
mov
addb
jae
aad
add
pop
mov
xor
xchg
mov
push
or
jne
nop
dec
xor
dec
push
jmp
in
xor
aaa
sbbl
fucomp
int3
stos
xor
mov
lods
jne
push
cs
jno
popf
sub
pop
xchg
hlt
pusha
or
repz
rclb
and
cmp
ds
shrl
jmp
or
sbb
cmp
mov
mov
roll
jmp
out
add
xor
adc
scas
pop
lea
xor
pusha
dec
addl
add
fsubrs
push
dec
adc
push
lods
jbe
sub
movlps
inc
or
fsubr
int
jo
xchg
mov
mov
adc
push
dec
add
or
jo
adc
and
loope
xor
shrb
outsl
jg
lahf
pop
add
jno
push
pop
cltd
push
dec
pop
pop
lock
push
jmp
or
dec
or
xor
cmovo
hlt
cmp
ds
xchg
xlat
adc
pop
mov
add
sar
jmp
push
or
jp
imul
push
bound
mov
adc
cmp
sbb
mov
inc
es
cmp
add
dec
popf
adcl
clc
je
mov
pusha
sub
sarb
xchg
dec
fists
sbb
pop
push
fs
into
ljmp
cld
xor
mov
out
mov
mov
xchg
fdivs
dec
pop
icebp
mov
mov
rol
jne
stc
xchg
adc
bound
pop
test
xor
cmp
es
in
je
lcall
xchg
in
call
inc
imul
cmp
xacquire
leave
sti
lret
jmp
nop
aas
ret
pop
daa
das
lret
xor
mov
adc
std
fidivl
icebp
stc
sub
pop
push
shrb
jmp
popa
mov
mov
movsb
mov
lahf
xor
jl
shrb
faddp
inc
das
outsb
popf
std
mov
or
and
sbb
ds
jnp
push
nop
jns
fisubrl
dec
icebp
pop
jg
jbe
or
push
inc
add
daa
jmp
cltd
xchg
add
pusha
fst
inc
or
inc
jbe
in
andl
or
into
add
push
mov
out
jo
into
in
in
jb
dec
sbb
sub
daa
jmp
cmp
push
cmpsb
outsl
lods
cmpsl
rsm
pushl
loope
fldz
add
es
inc
pop
adc
data16
into
bound
adcb
push
scas
lods
imul
adc
adc
cmpb
leave
cmc
fisubl
add
test
jbe
push
adc
sarl
andb
jo
sub
fidivrs
xor
out
gs
gs
and
and
sub
sub
filds
xchg
fcmove
test
mov
lea
or
jmp
in
inc
aaa
xorb
dec
jmp
nop
xor
repnz
mov
xchg
xor
sub
jb
pusha
push
cmp
daa
cmpl
push
cld
incl
add
jg
add
sub
nop
mov
mov
jne
pop
cltd
aaa
mov
inc
popa
jl
pop
inc
jmp
push
pop
cmp
mov
xchg
dec
mov
adc
pop
or
enter
sub
jmp
sbb
and
test
mov
sbb
lods
outsb
sbb
fsubl
push
ja
scas
test
enter
push
lret
jle
cwtl
lret
dec
stos
xchg
xorb
addb
push
aas
in
iret
add
test
pop
dec
ja
addr16
cmc
pop
sbb
push
push
push
or
mov
jl
push
icebp
pop
jne
or
loopne
and
or
xor
push
mov
popf
cmp
imul
lods
dec
dec
mov
mov
sub
cmp
sub
xchg
fstl
pop
pop
cltd
nop
jecxz
dec
lods
add
jle
decl
jo
sub
test
adc
in
aas
lret
ljmp
mov
cs
je
cli
and
rol
dec
sti
and
push
testl
fcomps
xchg
shr
add
movsl
cmp
repnz
mov
int
icebp
push
inc
lods
negb
pop
push
xchg
adc
lahf
hlt
enter
nop
cmp
out
pop
cs
adc
dec
ret
jmp
mov
loope
inc
aas
outsb
sub
dec
loopne
fs
sub
sub
mov
mov
push
mov
loop
loop
out
rorb
clc
int3
shr
jno
dec
pop
mov
jmp
bound
push
push
cmp
dec
mov
jae
mov
jmp
jne
shl
cmp
test
ljmp
push
add
and
push
aad
test
fldl
cmc
mov
addr16
hlt
in
repnz
testb
into
pop
insb
dec
inc
scas
push
movsl
or
pop
jmp
mov
addb
or
dec
shlb
xchg
fcomps
jbe
pop
fidivrl
lahf
dec
pop
sti
leave
add
lret
add
loope
or
ds
mov
int
mov
jmp
jnp
mov
jmp
cmp
adc
inc
xchg
repz
pop
movl
mov
jnp
shlb
in
adc
add
pop
xor
push
cmpsl
sub
scas
notb
push
aas
in
pusha
lahf
fmul
cmc
inc
enter
mov
repnz
jp
popf
xchg
aas
add
loopne
movsl
push
push
test
mov
add
rcrl
add
das
xor
sub
mov
sbbl
insl
adc
and
js
je
xchg
inc
andl
or
add
add
push
cmp
enter
cld
js
push
or
pop
xchg
pop
test
inc
fwait
in
xchg
or
dec
xchg
add
add
sub
mov
mov
sub
rclb
pop
xchg
pop
test
loopne,pt
mov
add
inc
aas
push
adc
mull
add
arpl
in
xor
sahf
pop
leave
and
dec
pop
pop
ret
pop
push
pop
sub
repz
pop
dec
and
lods
jl
push
dec
jl
inc
lock
push
daa
jae
in
scas
and
dec
popa
add
or
gs
leave
fdivl
pushf
cli
mov
out
lret
aas
imul
mov
jmp
xor
adc
test
pop
push
sub
sub
out
adcl
pusha
int
or
scas
xchg
sub
sbb
push
fbstp
and
and
add
adc
sub
xor
ds
shr
add
mov
repz
xchg
ror
cmp
ret
andl
mov
mov
mov
xchg
mov
lea
sub
out
ret
or
sub
testl
jecxz
filds
mov
cmp
mov
push
mov
call
dec
and
cmpsb
or
inc
and
cwtl
sub
or
pop
xchg
data16
pop
ljmp
push
pop
jmp
in
outsl
mov
rcrl
pushf
push
popf
push
pop
pop
mov
not
or
in
xor
add
stc
je
pop
cmp
clc
xchg
jmp
addr16
inc
ss
xor
popf
jmp
xor
cmc
push
fadd
in
xchg
xchg
mov
mov
or
fldl2e
cwtl
or
inc
adc
xchg
add
pop
sbb
add
xor
and
sbb
sub
int3
testb
or
sbb
movsb
add
jno
pop
xchg
push
jp
shr
jns
std
push
sub
dec
shl
shlb
rolb
fiaddl
pusha
pusha
dec
add
xor
add
subb
sub
push
pop
pusha
je
pop
stos
push
mov
dec
dec
xor
push
mov
jmp
icebp
jo
scas
ja
in
mov
lcall
test
inc
aas
adc
je
fdivs
lock
test
cmp
cmc
pop
mov
and
and
ljmp
mov
mov
inc
pusha
sub
bnd
mov
dec
inc
or
psubsw
sti
sub
pop
cmc
dec
std
out
call
adc
pop
jb
add
xlat
pop
jnp
jnp
sbb
add
inc
fstpt
inc
or
arpl
movl
sub
dec
adc
sub
iret
mov
mov
in
push
xor
jle
push
push
test
ret
iret
push
sbb
insl
jo
out
push
mov
imul
inc
push
jae
clc
loopne
or
pop
dec
dec
add
jbe
pop
test
hlt
cli
bound
shl
mov
cltd
lret
cld
lret
jbe
push
repz
and
xchg
les
sub
test
add
jns
adc
mov
push
aad
dec
sub
adcl
jbe
pop
pop
test
je
test
sub
and
rcrb
sahf
or
hlt
popa
sub
subl
and
add
loopne
lcall
aad
stc
nop
clc
js
test
mov
inc
and
xchg
popa
push
sub
xor
rorb
add
cmpl
jmp
push
mov
neg
and
mov
data16
and
mov
clc
lahf
xchg
icebp
popf
std
mov
pop
roll
loopne
sub
dec
icebp
cmc
sti
das
and
mov
mull
cmc
sbb
daa
jmp
cmc
pop
xlat
js
daa
lret
pushf
and
or
jb
pop
fwait
pop
lahf
es
fisubs
fstps
lcall
rolb
xor
push
daa
adc
std
sahf
jns
jae
test
outsb
cli
in
cmpsl
das
jp
cld
dec
and
inc
dec
jg
mov
pop
and
cmpsb
sub
rolb
int3
xor
out
xchg
jg
dec
jl
dec
adc
add
aad
movsl
rolb
mov
push
xchg
jbe
add
call
out
popf
sub
inc
cld
xchg
sub
lods
cmp
push
dec
mov
bound
pop
mov
ret
sub
cmp
fidivrs
sub
in
rolb
imull
xchg
jp
xlat
pop
cltd
jle
test
inc
jne
xor
int3
inc
mov
rolb
call
or
out
and
pusha
and
and
addb
pop
lods
push
pop
lea
or
loopne
nop
jmp
hlt
test
add
out
jp
in
xchg
push
mov
pop
iret
test
adc
pop
mov
cmp
push
push
mov
mov
stc
sub
in
aas
leave
inc
push
scas
dec
psubsw
pop
mov
hlt
sahf
add
add
mov
dec
in
scas
xor
fsubrp
fsubl
cmpsl
ja
cli
add
sbb
stc
jp
mov
and
insl
cmp
or
adc
sub
dec
ret
jo
push
inc
xchg
daa
mov
push
adc
sub
jo
shlb
mov
in
or
or
push
adc
in
or
push
xchg
and
pop
xor
jb
add
cs
test
xchg
insb
or
cwtl
push
cmc
out
cmpb
mov
inc
xor
pop
mul
cld
aam
lahf
out
push
push
pop
jecxz
cmpl
sub
aas
mov
les
sub
fidivs
sub
push
mov
and
xor
or
jmp
je
je
jb
sub
dec
adc
mov
jp
mov
sbb
sub
jmp
push
mov
jmp
xor
cmc
mov
push
add
ljmp
cld
mov
outsl
add
sbb
lahf
pop
decb
dec
cld
sub
in
popf
clc
jno
pop
roll
inc
add
cli
add
aad
cli
popa
test
aaa
add
aas
lahf
insb
sbb
cli
push
add
add
loop
jmp
aam
je
inc
pusha
inc
and
mov
clc
add
xor
lods
mov
or
call
add
or
and
flds
repnz
outsb
push
add
rorb
jo
push
or
jmp
cmc
xor
mov
mov
xchg
add
sub
stos
in
cltd
push
lea
adc
pop
sbb
xchg
sub
das
xor
or
pop
insb
lcall
push
and
lret
cs
xchg
pushf
pusha
test
dec
add
dec
xchg
sbb
inc
add
pop
hlt
sbb
std
mov
mov
cmc
icebp
mov
mov
lods
ja
pop
push
pop
stc
adc
repnz
orb
jns
scas
notl
sbb
hlt
roll
push
push
xchg
xrelease
test
stos
je
das
iret
stc
adc
shr
nop
inc
add
or
inc
sbb
cwtl
cmp
incl
outsl
mov
adc
outsl
out
hlt
test
jno
enter
or
sbbl
sbb
and
lcall
les
sub
mov
cvtps2pd
jnp
xchg
fmuls
mov
push
xchg
shl
cmp
xchg
faddl
xor
sbb
push
jno
or
lds
ljmp
repnz
add
push
xor
mov
insl
cmp
int
pop
lock
rorl
out
sub
adc
add
jns
xor
mov
sub
push
pop
cli
inc
add
repnz
lock
adc
pusha
ds
cmp
pop
movsb
push
jnp
push
sbb
cmp
mov
push
lret
ret
sbb
mov
std
pop
xchg
pop
add
xor
imul
or
loopne
sbb
subb
sbb
lcall
xchg
or
mov
cmp
clc
imul
ja
fisttps
jl
add
std
mov
jge
decb
adc
push
mov
sub
mov
sub
nop
mov
pop
mov
xchg
adc
inc
dec
jnp
adc
lahf
or
or
leave
sbb
enter
pop
outsl
aaa
shl
or
add
in
jg,pn
jl
sbb
push
cmpl
adc
mov
out
not
ds
movsl
cmc
inc
push
mov
adc
and
sbb
and
pop
mov
push
jno
mov
fisubrs
or
mov
popf
ficoms
add
sub
stos
or
jmp
sbb
test
popa
sbb
add
sub
outsl
mov
adc
repnz
inc
push
or
int3
fistpll
data16
mov
js
ret
fidivs
mov
rcrb
xchg
in
jl
jecxz
and
add
dec
or
ss
dec
shrl
test
int
add
jge
sbb
inc
mov
mov
xor
sbb
das
cwtl
or
add
jnp
cmc
cld
insl
dec
pop
jecxz
mov
icebp
roll
hlt
pop
daa
int
and
daa
popf
push
std
mov
add
dec
testb
add
xor
enter
adc
movb
in
inc
adc
imul
repnz
inc
jmp
sub
lcall
in
jl
fisubl
inc
loope
pop
outsb
sub
xlat
dec
pop
into
inc
pop
subb
xchg
dec
mov
pop
gs
xchg
adc
jbe
out
test
in
add
rorl
pop
jl
rolb
inc
in
sub
es
cmp
mov
push
sbb
dec
lret
stc
jmp
and
add
popa
and
push
or
lods
cmp
testb
not
loop
inc
jmp
ret
jp
xor
dec
xor
cmp
pop
xchg
test
xchg
sub
xor
mov
pop
mov
mov
xchg
daa
push
or
stos
lret
sub
push
sub
std
sub
insb
pop
cmp
adc
divl
add
into
sub
push
sub
jmp
lods
aam
scas
mov
push
cwtl
pop
mov
jo
xchg
pop
sbb
sarb
loope
ss
insb
xchg
sub
sub
and
arpl
shl
cmp
pop
cli
cmp
push
push
adc
sub
rcll
add
push
les
bound
push
inc
or
add
sub
add
pop
in
lcall
subb
inc
jmp
add
adc
xchg
or
jg
fpatan
in
pop
aaa
push
dec
adc
es
arpl
or
xchg
ljmp
sbb
xor
fst
lret
pop
cmc
out
insl
cmpb
test
pop
stos
add
ret
cmc
add
xorl
pop
pop
xorl
cmp
pusha
pop
fbstp
or
or
mov
cmc
gs
mov
pop
mov
loopne
lcall
jle
sarb
outsb
leave
jne
or
pop
or
fbld
cmc
push
mov
jo
leave
outsb
add
pop
push
lods
cmp
fwait
add
add
enter
out
mov
orb
sbb
stc
push
mov
mov
or
push
mov
cmc
stos
out
rolb
adc
in
pop
inc
mov
add
loop
pop
push
mov
mov
fldcw
pop
jb
js
xor
data16
pushf
sub
dec
mov
add
mov
hlt
icebp
adc
mov
mov
jge
dec
shl
xor
or
lahf
xchg
lcall
push
stos
pushf
out
xchg
jmp
mov
cmp
aas
or
aas
loop
jle
das
inc
roll
mov
sbb
or
push
jne
jo
push
mov
pop
jge
out
adc
out
pop
repnz
sbb
mov
sub
mov
add
mov
mov
inc
cmp
dec
cmpsb
daa
lods
stos
fmuls
add
les
push
xchg
push
mov
jmp
sbb
sub
popa
ds
or
shll
xor
nop
pop
mov
or
iret
xchg
pop
push
dec
inc
mov
test
nop
les
mov
in
add
ss
sub
jecxz
sub
xor
cmp
jnp
addb
push
jmp
add
push
mov
aad
fdivs
cltd
add
mov
cmp
out
and
pop
mov
ja
daa
ljmp
jmp
mov
adc
popa
xchg
cltd
add
pop
lock
movsb
dec
sub
jg
mov
sbb
jmp
xor
pop
push
mov
jnp
rorb
mov
mov
je
popa
loope
xor
mov
jbe
xor
dec
aas
mov
or
xchg
sub
xchg
cmp
outsl
call
xchg
pop
scas
rorb
scas
call
xchg
mov
jno
in
fbstp
fsubr
mov
pop
mov
pusha
dec
stos
jo
dec
bound
jb
push
notb
test
add
inc
jne
clc
aaa
out
adcb
push
lcall
jne
cltd
daa
pop
sbb
pop
pop
outsb
xchg
cbtw
inc
adc
pop
add
push
xchg
sbb
xor
aam
sub
cmpsl
cmp
add
je
inc
push
mov
ficoml
ret
jnp
icebp
push
and
add
out
js
orb
adc
lds
movsl
add
pushf
mov
lret
clc
into
call
mov
cmc
pop
in
mov
dec
int
add
das
jbe
imul
not
push
dec
lea
inc
pop
jmp
lds
sub
pop
fstpl
outsb
pop
lods
ljmp
xchg
push
loop
and
in
bound
addr16
adc
dec
aaa
js
xchg
jns
cmpsl
pop
call
icebp
cmpsb
ret
sub
or
inc
push
stc
add
and
adc
lahf
push
add
mov
and
push
movsb
sbb
addb
loop
stc
sti
lds
fstpl
nop
outsb
rorb
pop
in
mov
dec
hlt
sti
mov
mov
mov
and
pop
mov
xchg
sahf
and
dec
icebp
and
and
test
adc
xor
call
sub
pop
and
pop
mov
jbe
adc
or
xchg
lds
mov
repnz
push
test
jmp
mov
pop
mov
mov
or
rclb
repnz
push
push
or
lock
and
popa
push
les
dec
stc
push
or
das
or
inc
sbb
in
jae
push
or
sub
mov
cmp
lock
sbb
aaa
dec
fisubl
add
xor
pop
add
fwait
data16
stos
push
inc
shll
iret
mov
out
lea
or
mov
into
out
sub
stc
fldcw
popf
add
dec
test
or
in
jbe
jle
mov
ljmp
pop
cmc
xchg
outsb
mov
xchg
jmp
decb
cmp
inc
mov
and
push
into
add
sbb
je
and
mov
jmp
ljmp
mov
push
mov
pop
pop
mov
or
sbb
add
lcall
adcb
mov
add
fisubrl
jns
sub
xor
jne
mov
movsb
mov
ret
xor
cmp
and
stc
inc
adc
jmp
sub
data16
adc
cmp
mov
imulb
cs
lock
pop
xchg
cmpsl
cmp
inc
int3
push
int
mov
jne
test
jbe
push
add
mov
inc
lea
subl
lods
inc
or
ljmp
xchg
shll
es
or
adc
pushf
in
shlb
sti
aam
and
push
fiadds
add
push
stos
mov
bound
ds
xor
mov
ds
lds
scas
inc
imulb
es
out
add
or
fsub
sub
push
shr
sub
mov
aam
cmp
push
rolb
add
pop
sub
sub
jmp
mov
repz
add
cmp
push
lcall
mov
loopne
in
lret
ds
mov
into
inc
shrb
xchg
and
sub
data16
test
out
fdivrs
mov
add
ret
xor
sbb
or
scas
cmp
dec
cmpl
aad
stos
adc
int3
test
jge
out
push
add
pop
push
icebp
fldl
pop
cmp
add
repz
hlt
jmp
push
outsl
gs
in
popl
pop
mov
push
orl
lea
andl
repnz
cwtl
or
loop
mov
push
push
loop
xchg
jmp
add
dec
adc
out
stos
call
idivl
fidivrs
stos
pop
or
add
mov
or
add
lods
dec
stos
mov
jmp
fs
dec
or
adc
sub
push
lahf
xchg
sbb
adc
lidtl
or
call
jno
or
data16
mov
into
jmp
pushf
scas
and
popf
push
xchg
out
mov
add
mov
push
rolb
push
ds
pop
sbb
jae
add
pop
jnp
jge
aas
loope
ljmp
push
pop
mov
cmp
es
cmp
push
dec
cmpsl
stc
pop
stc
mov
repnz
sbb
rcrb
insb
and
push
add
mov
add
into
lods
lcall
add
aad
pop
lahf
in
popa
lahf
cmp
jbe
mov
imul
loope
mov
out
mov
fwait
push
pop
out
bound
addl
pop
jmp
add
inc
cld
jl
jp
lret
adc
outsb
sub
imul
add
repz
jecxz
fsubp
test
popa
subb
fidivrl
jge
enter
pop
add
inc
stos
adc
mov
mov
sar
xchg
negl
std
pop
sub
popf
cmpsl
push
or
push
add
sti
cltd
add
lea
xorl
add
sti
pop
or
cmp
mov
and
push
dec
in
ret
iret
push
push
mov
or
add
jnp
repz
cld
ja
ss
mov
and
cmpxchg8b
clc
loopne
dec
lock
inc
pusha
xlat
mov
mov
dec
lret
into
and
mov
and
mov
or
fsubl
aaa
bound
inc
mov
xor
add
inc
jno
xor
cmpsb
cmp
jp
sub
pop
mov
movsb
ss
add
movb
or
movl
push
pop
add
ds
mov
and
ret
jmp
sub
sbb
pop
in
test
push
jle
adc
cmp
orb
jae
or
test
or
and
daa
pop
pop
ss
dec
dec
clc
adc
add
sbb
pusha
xorb
loope
sub
jmp
jl
jmp
mov
and
add
nop
sbb
aas
or
push
and
push
sub
jnp
xlat
sarl
cmpsl
add
cli
mov
pop
lds
push
rcrb
cmp
in
pushl
subb
loope
sbb
repnz
pusha
and
push
adcb
dec
add
and
lods
sti
and
push
push
sub
pop
call
push
sbb
imul
pop
cmp
call
push
pop
push
out
mov
sar
add
ja
adc
sbb
cli
cmp
or
cmpsl
add
jmp
aas
shlb
xchg
pop
and
adc
pop
adc
mov
cwtl
push
dec
or
ja
shll
lds
mov
mov
repnz
jnp
imul
test
inc
cwtl
dec
xor
out
jl
and
dec
repnz
xor
push
ret
mov
xchg
pop
xor
loope
shrb
mov
and
pop
and
mov
lock
lock
jmp
pop
xchg
jge
cmp
aas
cmp
pushf
pop
insb
adc
scas
xor
mov
movsl
lea
subb
mov
jmp
mov
or
adc
jmp
mov
mov
loop
rcll
dec
loop
fmull
xor
adc
dec
push
out
xchg
cli
out
jge
sub
dec
lods
ja
xchg
repnz
inc
call
test
mov
xchg
sbb
popa
sbb
xchg
add
lret
inc
dec
add
es
sbb
test
mov
arpl
jmp
mov
call
xchg
loopne
pop
daa
fs
cli
add
add
pop
mov
push
cld
push
sbb
jp
add
cmp
movsl
add
sub
psllw
push
push
pop
push
cs
mov
cmpl
add
xchg
push
mov
push
lods
les
xlat
add
movsb
gs
mov
fnstenv
and
jmp
inc
xlat
mov
popa
xlat
adc
adc
ret
add
and
das
inc
sub
sub
mov
mov
imul
negb
push
or
lods
dec
mov
add
dec
out
sbb
rol
lret
and
and
aad
cmp
leave
in
sub
sahf
pop
imul
pushf
imul
outsb
clc
sub
adc
sub
into
add
cwtl
nop
or
sbbl
and
adc
push
push
imul
add
and
pop
cmp
pop
loope
out
cs
sub
xlat
repz
notb
pop
cmp
push
add
and
jl
add
xchg
or
inc
pop
or
pop
aam
sti
mov
and
push
add
jbe
jp
mov
and
adc
mov
stc
cmp
dec
lock
sub
ret
push
mov
sub
jae
mov
bound
imul
gs
inc
add
mov
cmp
sub
mov
add
clc
stos
xor
repz
je
mov
fldenv
add
loope
dec
cs
movsl
cmp
mov
sbb
out
or
push
fisttpl
test
das
ds
sbb
ljmp
push
jmp
mov
test
push
fdivr
cmp
sbb
mov
push
sbb
inc
ret
pop
imul
ljmp
dec
das
add
int
adc
cwtl
jge,pt
test
in
xor
popf
decb
add
ds
mov
sbb
call
aas
test
sub
nop
shr
push
leave
or
mov
mov
or
add
sub
xchg
subl
dec
mov
mov
leave
lds
inc
mov
or
daa
bound
dec
jge
aad
test
dec
lods
lret
dec
mov
jmp
jg
jbe
inc
popa
stc
fmul
push
mov
insl
out
mov
movsl
xchg
push
pushf
mov
insl
or
inc
mov
pop
pop
mull
sub
fstpt
add
mov
inc
mov
mov
and
jecxz
pusha
sub
inc
addr16
shlb
scas
xorb
aas
push
sbb
xchg
jb
aaa
sbb
fs
incb
shr
test
and
xchg
jg
mov
out
pop
rcr
or
adc
mov
ljmp
mov
incb
sub
stos
or
jno
lcall
and
add
sbb
out
sub
sti
add
jecxz
lds
dec
clc
or
or
divb
inc
push
add
xor
stc
out
jo
stos
leave
cmp
pop
enter
loop
lcall
pop
xchg
pop
stos
pop
pop
mov
jbe
dec
mov
mov
pop
adc
sub
js
push
rolb
pop
inc
lea
pop
pop
pop
and
push
rolb
xchg
ror
mov
movsl
cmp
sbb
jo
fstpt
or
push
jge
cmc
lahf
mov
sub
ret
xchg
js
lods
or
dec
movsb
arpl
add
jns
add
sti
mov
call
dec
or
inc
inc
pop
rcrl
mov
loop
ret
sub
lahf
or
mov
or
push
pop
and
jl
dec
add
fisttpll
xchg
out
loope
sahf
outsl
cmpsb
scas
lret
xor
fs
or
jo
enter
mov
movsl
ja
pop
or
push
add
push
cvttps2pi
sub
movsl
cmp
cmovle
adc
insb
dec
fwait
xor
and
or
bound
dec
fbstp
and
mov
das
mov
sub
sub
add
pop
adc
and
add
sbb
add
push
rolb
inc
xchg
dec
lcall
repnz
adc
jp
push
dec
xchg
pop
sbb
sarb
cmp
into
add
movsb
jne
shll
stc
jne
jmp
xchg
filds
push
push
mov
push
call
push
mov
add
imul
pop
ljmp
lds
repz
mov
push
fs
xchg
pop
pop
js
jge
dec
push
in
push
shll
test
jae
pop
rorl
pop
fidivl
fildl
dec
inc
inc
jge
add
scas
cmp
addr16
add
xchg
outsl
jmp
cli
clc
dec
cmp
outsb
cmp
psubb
push
movsl
push
clc
mov
xor
gs
xchg
dec
add
daa
scas
lret
jnp
jmp
jge
hlt
push
in
lock
subl
mov
adc
daa
fdivs
mov
mov
jb
addr16
and
and
stc
pop
adc
jge
push
nop
dec
or
xor
or
fsubs
adc
push
popf
or
idivb
cli
lock
jmp
or
hlt
xlat
xor
jno
lret
repz
jl
mov
adcb
hlt
cmp
fldl
icebp
mov
mov
xlat
mov
add
iret
pop
add
inc
mov
mov
xor
jno
jle
pop
icebp
inc
sbb
iret
push
or
sti
xchg
stos
inc
insb
mov
mov
sub
inc
inc
pop
xchg
inc
adc
and
or
test
inc
xor
sbb
sub
add
aas
pop
push
pop
add
and
add
push
flds
pop
aas
stc
out
iret
push
faddl
outsb
adc
jecxz
dec
or
dec
jmp
push
not
pop
mov
jmp
negl
imul
add
aad
xchg
or
inc
insb
pop
and
fstpt
pop
mov
inc
enter
mov
dec
pop
jp
mov
or
cwtl
and
jbe
sbb
xchg
js
or
jle
shlb
or
dec
add
sub
inc
mull
idivb
insl
in
idiv
decl
sub
mov
push
cmp
lret
gs
test
mov
pop
mov
push
jge
inc
lds
aam
out
stc
or
fisubs
les
testl
lds
pop
movb
ss
mov
push
rorl
xor
es
jmp
stc
mov
stc
jne
mov
xchg
adc
es
jo
or
aaa
pop
cmp
iret
xchg
add
inc
jmp
adc
pusha
push
dec
sbbb
cmpsl
lahf
les
and
loopne
cmp
gs
lcall
push
or
xor
dec
pop
mov
mov
in
jg
xlat
nop
dec
push
dec
add
in
in
adc
int3
cmp
leave
jecxz
jmp
push
mov
or
testb
fsubl
imul
cmc
movsb
add
and
xchg
jg
jmp
fstpt
fistpl
mov
fadd
ss
jnp
jg
sbb
pushf
cmp
sbb
and
lret
mov
decl
mov
sbb
add
add
inc
cltd
orb
xor
xor
inc
je
jo
jbe
add
stos
inc
jae
ljmp
cwtl
cmp
fmull
scas
lret
jle
push
pop
pop
push
ljmp
xchg
bound
int3
cmp
icebp
mov
and
inc
les
lea
mov
mov
pop
daa
xor
mov
aas
mov
mov
add
pop
or
sbb
in
roll
push
xor
push
cwtl
pop
and
sub
and
inc
pop
push
push
push
js
fldl
inc
imulb
fs
inc
mov
fildll
inc
and
pusha
push
cmc
pop
sbb
sub
sub
cmp
call
mov
cmp
jno
or
xchg
icebp
fdivrp
jbe
in
add
xor
add
dec
es
mov
cltd
scas
int
add
add
clc
sub
xor
xlat
or
pusha
cmpsb
jp
xchg
call
jnp
xor
adc
mov
or
aas
dec
and
insb
pop
dec
mov
mov
push
ja
aad
pop
cmp
inc
sub
subb
pusha
or
into
orb
cmp
inc
and
add
adc
je
inc
mov
add
inc
xchg
frstor
cmp
lods
add
xchg
xchg
shlb
test
subl
push
fwait
mov
push
cmpsl
or
inc
xchg
add
lods
dec
test
xor
push
dec
push
repnz
mov
fstl
dec
pop
pop
jmp
cmp
stos
push
fwait
daa
push
stos
xor
add
xchg
and
out
mov
or
sub
jmp
popfw
add
cmp
cmpsb
inc
pop
adc
pop
pop
or
inc
or
ds
xchg
rcrl
cmc
add
icebp
push
pop
pop
dec
das
stos
pop
add
rcll
aad
jge
test
mov
push
push
pop
jl
movsb
in
and
in
insb
lcall
mov
add
dec
jmp
hlt
lds
out
mov
xor
mov
sub
subl
cmp
inc
pop
mov
adc
add
imull
jne
or
and
inc
pusha
jmp
add
mov
repnz
jmp
adc
mov
aad
cld
xchg
or
pop
fsubrs
addr16
jo
movsl
xchg
jo
and
dec
mov
dec
repnz
xor
sub
dec
stc
sbb
sbb
push
push
into
xor
popa
sbb
add
jno
insl
mov
fidivrl
jmp
stos
xchg
cmpsb
pop
mov
fcoml
bound
cmc
cmp
add
daa
push
popf
cltd
push
xchg
std
mov
pop
jbe
jb
rclb
loopne
and
jmp
paddsw
cs
xor
clc
inc
push
ljmp
mov
and
mov
inc
jecxz
or
push
testl
xchg
repnz
mov
jg
sbbb
push
push
mov
pop
hlt
loope
jmp
pop
adc
or
data16
push
in
add
in
push
cmp
xchg
or
jmp
push
push
jp
fmull
pop
push
pop
fisttps
jno
cwtl
jp
adc
ljmp
push
pop
mov
cli
mov
shr
jbe
int
in
or
pop
test
pop
mov
shrl
loope
ds
jmp
mov
daa
sub
push
mov
movsl
filds
test
jle
scas
gs
add
hlt
push
push
jno
adc
add
xor
rcrl
imul
pusha
loope
adc
xor
or
imul
add
push
mov
mov
sub
dec
cmp
lods
mov
mov
push
nop
inc
into
sub
jmp
stc
inc
mov
hlt
pop
sbb
jg
dec
hlt
mov
or
das
loopne
xor
xor
cmc
inc
jbe
nop
dec
jno
cmp
cmp
inc
xor
loop
or
jmp
cmpsl
fnstenv
add
push
jmp
mov
inc
mov
ret
lds
ret
subb
pusha
ss
push
add
xchg
not
jnp
jne
mov
push
push
mov
dec
dec
clc
adc
mov
jnp
pop
sbb
and
pop
je
ljmp
mov
pop
insl
cmp
dec
clc
mov
pop
mov
cmp
or
adc
pop
and
add
popa
roll
int
jl
cmp
pop
add
jbe
sub
inc
cwtl
rorb
inc
subl
ljmp
mov
inc
sub
pop
sub
test
scas
cmpsl
addr16
out
jns
add
in
jb
push
insb
mov
popa
mov
cmovnp
test
sarl
and
inc
mov
sub
lea
pop
push
inc
rcrl
movsl
add
jge
adc
lcall
jp
jl
insb
xchg
lods
insl
jbe
mov
push
jg
mov
push
std
dec
test
mov
insb
mov
jno
ret
dec
mov
andb
cltd
dec
je
pop
ss
sahf
push
mov
ret
dec
imul
inc
or
dec
adcl
icebp
add
add
test
sub
sahf
dec
cld
inc
aam
imul
sarb
jno
add
jmp
in
imul
leave
adc
mov
mov
jbe
test
leave
push
incl
sbb
xchg
scas
push
shll
rolb
push
stos
test
or
pop
push
std
pushf
rcr
inc
jle
mov
jnp
gs
inc
sub
mov
adc
cmpb
lcall
daa
jge
jge
and
scas
mov
inc
addr16
out
sbb
adc
pop
popf
or
roll
xlat
les
sub
aam
shl
nop
cmp
inc
cmp
sub
mov
xor
fcomip
loopne
adc
sub
xor
nop
push
jmp
mov
popa
int
icebp
adc
fisttpl
mov
sbb
repnz
add
jmp
add
hlt
das
test
jbe
in
jp
mov
add
testb
jmp
js
jns
jnp
test
subb
andl
inc
adc
pop
insl
sbb
cmp
outsb
pop
mov
mov
cmp
gs
jge
jmp
rcrl
add
sti
mov
pop
mov
bound
jge
fs
lret
je
adc
bnd
call
scas
std
dec
sbb
and
loope
clc
push
mov
and
cmp
cld
test
hlt
pop
ret
push
mov
leave
adcb
pop
add
icebp
lret
test
int
or
inc
out
xor
push
push
dec
add
jmp
scas
xlat
xor
clc
jp
vandnps
add
sbb
arpl
jg
sbb
xor
push
sbb
pop
cld
dec
xor
fistpll
jns
inc
fisubl
daa
add
ljmp
sub
add
pavgw
les
sbb
je
outsl
test
cmc
push
push
movsl
sub
popa
cmp
cmp
in
and
lock
jge
mov
mov
inc
mov
inc
inc
jl
jae
jle
sbbl
aas
das
rol
cwtl
rcrb
shlb
insl
jmp
adc
js
inc
ljmp
test
clc
inc
adc
test
adc
adc
jns
xor
pop
push
cld
sbb
jns
sti
fucomp
cs
inc
nop
shrl
sub
mov
ret
cmp
lds
mov
neg
test
push
sub
inc
dec
add
adc
mov
pop
cwtl
mov
dec
je
and
or
in
inc
mov
jb
ljmp
add
sub
in
xchg
pop
nop
xor
dec
roll
mov
out
fs
in
dec
pop
loopne
xchg
addr16
lret
fnstcw
add
mov
outsb
jb
rolb
mov
int3
into
xor
push
mov
and
ret
das
add
dec
repz
test
cmp
xchg
jle
or
mov
jl
mov
inc
sbb
push
cli
xchg
sbbl
dec
lock
daa
add
pop
cmpsl
or
push
ficompl
das
divb
addb
inc
pop
scas
int
icebp
rcl
cmc
in
xor
mov
sub
sbb
push
ret
inc
dec
cs
rcll
imul
jmp
nop
add
mov
les
enter
aam
lock
rcrw
mov
aad
jns
loop
loope
clc
jne
outsb
adc
mov
xchg
ja
out
or
call
jmp
scas
push
or
pop
xor
lods
dec
adc
add
cwtl
pop
jmp
push
pop
cmc
adc
mov
xchg
sub
loopne
mov
shrb
pop
push
adc
jo
mov
mov
leave
cmpsb
insl
int3
push
adc
movsl
add
test
sub
arpl
pop
add
iret
fsubrs
mov
push
jl
mov
outsl
add
xor
pop
xchg
lock
add
cmp
lods
cmpb
sbb
mov
cmp
aam
mov
dec
and
xchg
and
dec
enter
das
jmp
jl
mov
cmc
pop
xor
pop
aam
adc
sub
push
pop
mov
add
xchg
jmp
insb
xchg
lahf
mov
ljmp
or
inc
sub
push
dec
push
xor
cli
xlat
push
cmpsb
or
mov
mov
es
std
push
push
repz
cld
sub
cs
mov
and
aam
sub
push
js
xor
es
pop
or
roll
rcll
xor
xchg
dec
jl
cmp
ret
pop
je
test
sub
pusha
pop
jmp
push
stos
repz
or
lods
push
xor
shll
dec
cwtl
adc
push
jns
ljmp
pop
das
mov
mov
es
jbe
repz
sbbb
mov
adc
jmp
mov
add
std
incl
pop
mov
and
pop
push
mov
cld
dec
addl
pop
inc
add
clc
cmpsl
mov
sub
mov
add
cmc
lcall
sbb
scas
and
pop
or
sets
int3
xchg
dec
out
push
dec
scas
xor
sar
pop
das
mov
movsb
or
dec
pop
or
mov
push
xchg
bound
hlt
aam
in
mov
push
ret
xor
cs
jns
xchg
push
xchg
ud1
inc
push
jmp
out
shr
and
aam
pop
std
rolb
or
cli
add
mov
dec
xor
js
pop
pop
xchg
pushf
in
cmc
and
mov
sub
xchg
das
lret
test
mov
xor
int3
add
out
mov
sbb
mov
stos
push
or
cltd
mov
mov
or
fldenv
lcall
ss
ljmp
test
dec
xchg
in
or
adc
les
add
sbb
sbb
cmp
cmp
int
dec
fidivl
dec
lods
adc
add
mov
shll
adc
push
pop
and
mov
popf
andl
data16
jne
jnp
push
mov
cmp
std
stos
adc
aas
int
les
mov
mov
cmpsl
pop
in
or
imul
jnp
repz
cld
fldenv
jne
popa
and
xor
lahf
mov
xchg
stc
pop
outsb
sbb
loop
rcll
adc
inc
adc
clc
js
push
jbe
jp
in
dec
cltd
push
dec
push
stos
mov
fimuls
push
sar
add
enter
add
jns
push
pop
rclb
push
xor
push
loop
outsl
ljmp
push
pop
popf
fdivrl
push
imul
fdiv
cmc
cmp
cmp
add
jle
mov
xchg
ret
pop
ret
lret
jg
ljmp
mov
push
lcall
bnd
in
push
mov
adc
mov
ret
popf
repz
xchg
jmp
lea
lods
out
mov
fsubrp
mov
xor
aad
out
dec
testl
pusha
inc
stos
hlt
fldt
jno
cmp
push
xor
cmc
and
jmp
popf
jno
jmp
dec
inc
fwait
neg
sub
jecxz
xchg
adc
xchg
sub
mov
ja
mov
push
movsl
loope
push
jnp
nop
lret
ja
push
fbstp
xlat
jge
sub
outsb
into
adc
stos
popa
push
jp
or
add
push
test
mov
scas
shll
mov
pop
push
test
daa
bound
mov
dec
or
sbb
jne
and
jge
adcl
insl
pop
pop
sbb
xchg
fcomps
mov
sar
sub
movsl
xchg
call
xchg
xor
sbb
int
mov
xchg
mov
jmp
add
into
adc
lock
mov
add
loope
jg
aad
add
fimull
scas
mov
pop
out
mov
ljmp
cwtl
xchg
sub
cli
ja
and
sbb
jb
out
mov
cmp
xor
scas
jno
into
rolb
neg
and
ficoms
cmc
cli
dec
sub
and
push
add
lds
sub
rcrb
shl
jb
dec
jg
aam
add
loopne
push
btr
ret
bound
fstpl
push
call
shr
test
mov
ljmp
cwtl
push
mov
jo
in
dec
fdivrp
push
int
xor
movsl
fwait
add
push
out
adc
pop
in
pop
mov
cmp
popa
inc
jl
mov
mov
pop
adcb
inc
mov
shl
out
xor
pop
gs
fidivrs
fbld
push
pop
or
add
push
ljmp
dec
repz
fildll
cmp
ret
add
ffree
clc
mov
iret
lcall
push
or
jae
mov
push
mov
adc
jns
sub
gs
sbb
data16
in
sub
fstl
mov
pusha
mov
insl
repnz
and
add
add
cs
sarb
or
dec
ljmp
or
outsl
push
scas
jl
out
in
add
jg
cli
lods
or
shll
sub
inc
icebp
addr16
push
bound
or
xchg
iret
and
push
xorl
dec
xlat
jle
das
sub
outsl
push
imul
adc
stc
outsb
sub
pop
pop
out
adc
inc
scas
sub
add
lods
dec
mov
pushf
pop
cmp
lds
add
sub
fsts
xor
and
add
mov
addb
and
sbb
inc
sub
push
ljmp
mov
je
xor
or
add
or
jmp
pop
xchg
push
repz
lock
and
add
mov
cs
jp
xchg
sbb
insl
xchg
jnp
dec
pop
xlat
jecxz
and
push
mov
jl
xor
fadd
push
ja
rcr
jle
pop
fsub
jge
cs
sbb
repnz
add
inc
movsl
mov
inc
neg
mov
adc
pusha
jg
sbb
cmp
test
inc
add
inc
dec
icebp
xchg
ret
sbb
mov
xchg
shll
jbe
aas
push
adc
aad
mov
mov
xor
testb
ret
cmp
add
loopne
fs
daa
aad
fbstp
cmpl
add
sub
or
shl
push
lea
aas
jl
adc
clc
jo
repz
mov
mov
arpl
cmpb
pop
pop
call
sub
push
sahf
xor
in
sub
mov
xchg
push
jmp
into
clc
mov
mov
sbb
xor
adcb
xor
push
clc
mov
and
mov
or
movb
xchg
or
mov
icebp
loope
push
loope
cmpl
mov
jmp
call
mov
sbb
push
mov
add
mov
sub
outsl
inc
xchg
push
inc
call
mov
add
jne
mov
int3
daa
jmp
sahf
icebp
scas
jmp
loop
loop
dec
loopne
jmp
sti
fadd
pop
push
arpl
mov
int3
imul
cmp
jns
sub
repz
pop
shll
push
pop
push
scas
ret
pop
ret
decb
test
sub
sti
in
mov
add
jmp
xor
and
jnp
fsubrp
ret
sub
out
out
or
xchg
nop
sub
or
or
adc
dec
push
add
in
lods
adc
lcall
sbb
popa
or
das
in
sub
bound
inc
inc
test
loop
and
cmpb
and
xchg
pop
add
scas
inc
das
xor
xor
cld
pop
add
sub
pop
push
adc
call
aad
repz
jmp
or
loop
int
data16
dec
bound
daa
or
jle
lcall
push
in
add
add
clc
push
lahf
jnp
stc
in
aam
cmp
or
adc
add
mov
push
addb
mov
pop
push
mov
pusha
push
dec
pop
and
jmp
iret
mov
or
fcoms
je
daa
icebp
or
inc
scas
mov
mov
mov
add
push
outsl
lret
cmp
push
mov
pop
imull
popa
xchg
rorb
popa
or
and
repnz
insb
pop
xchg
jae
xchg
popf
cs
scas
pop
jecxz
and
lods
mov
dec
loopne
das
pop
iret
repz
div
and
pop
adc
or
jne
fisubs
add
dec
sub
add
test
dec
int
adc
jp
mov
mov
pop
aam
jo
pusha
xchg
mov
fdivl
cmc
scas
imull
push
mov
push
xchg
imulb
or
loope
and
shr
ljmp
repz
dec
ja
sub
mov
jecxz
hlt
pushf
jae
int
mov
mov
mov
pop
or
movsl
inc
data16
and
ja
xor
cmpb
cs
repnz
stc
mov
push
mov
ljmp
pop
push
ja
popf
dec
adc
jb
outsb
sub
cmp
mov
mov
pop
mov
cwtl
mov
leave
pop
xor
push
and
push
fidivrs
mov
mov
sub
call
insb
sbb
jg
jae
mov
jo
push
cmp
fistpll
sahf
mov
test
push
mull
nop
loop
pop
xchg
not
call
sti
or
imul
mov
dec
xor
add
xor
inc
push
test
xor
sti
pop
es
adc
xor
add
popa
dec
sbb
data16
mov
popf
scas
mov
pushf
adcb
and
sub
cwtl
gs
je
xchg
jmp
stc
push
and
insb
popf
jno
mov
jl
jmp
cmp
add
sub
rcrb
xor
sbb
ljmp
adc
mov
sbbb
push
add
and
mov
xor
add
dec
add
sbb
pusha
or
data16
sub
pop
pop
iret
adc
test
mov
add
mov
xor
addr16
inc
mov
dec
pop
stos
and
rcrl
into
add
lahf
arpl
cltd
rorb
xchg
jecxz
push
lcall
popw
pop
hlt
fcompl
scas
daa
fsubl
add
mov
adc
jecxz
imul
mov
dec
popa
jno
adc
add
pop
sub
pop
shr
mov
mov
push
mov
cli
fyl2x
jecxz
idivb
pop
outsl
shll
imul
loope,pn
ret
jmp
and
movsb
in
movsb
and
mov
xor
rep
sti
push
or
icebp
cmc
jg
mov
popf
addb
xchg
pop
sub
mov
pop
push
mov
or
xor
ljmp
mov
clc
icebp
mov
cmpsl
jecxz
mov
sbb
outsl
nop
fistps
mov
add
ljmp
inc
push
popl
jmp
les
mov
and
add
push
mov
xchg
stos
add
sub
ret
adc
loope
jnp
push
mov
test
popl
ds
not
rcll
xor
repz
pop
out
xchg
adc
pop
push
outsl
stc
mov
dec
clc
mov
mov
push
mov
imull
fcomp
xor
leave
nop
sub
in
mov
repz
push
mov
out
sbb
sbb
addr16
rorb
icebp
push
push
inc
imul
popa
int
push
dec
xchg
add
lods
sub
pop
sbb
scas
popa
cwtl
fucomip
jp
cmc
xchg
stos
loop
jmp
lods
lods
and
and
movsb
jnp
mov
inc
inc
sti
imul
gs
fstps
lahf
in
dec
dec
stos
add
xorb
jb
sbb
mov
pop
in
aas
push
movsb
pop
or
lret
stos
sub
leave
stc
push
mov
adc
add
adc
jge
jp
or
out
jb
or
dec
dec
pop
xchg
fcomp
loope
into
out
sub
xor
outsb
ficoml
not
or
cmp
mov
std
mov
adc
jne
cmp
idiv
jmp
out
aas
stos
rcrl
and
xchg
or
add
call
leave
dec
loope
rcll
push
push
mov
shlb
xlat
insb
cmp
test
push
in
cmp
or
inc
sti
add
jmp
loopne
jno
sbb
aas
nop
jne
mov
or
rcrl
pop
pop
pusha
fisttpl
mov
push
jecxz
jne
or
sbb
xor
pop
in
and
lods
cltd
idivb
aam
popf
call
loopne
rcr
push
push
push
js
cmp
rorl
in
xor
insb
push
aas
push
xor
sub
xor
add
inc
xor
dec
jmp
inc
add
jmp
mov
and
mov
test
add
push
gs
subl
imul
imul
mov
shll
mov
and
push
idivb
and
or
jl
gs
push
scas
and
pop
aad
out
roll
pop
jmp
jno
mov
push
jp
sti
mov
sub
mov
call
and
sbb
xor
ret
ret
fimuls
pop
push
mov
call
sbb
xchg
enter
in
mov
xor
sub
mov
cltd
pop
sti
out
push
and
mov
push
fucomp
int
jmp
mov
push
adc
adc
sub
mov
mov
icebp
jmp
push
fwait
mov
jp
cwtl
dec
and
cmp
mov
mov
xchg
and
add
fbstp
movsl
pop
mov
fildll
mov
jp
movsb
lods
xchg
push
mov
ljmp
sbb
lret
lret
call
jmp
pop
pop
loop
or
outsl
aam
xchg
cmp
sub
jne
ss
pop
mov
lods
je
jmp
mov
add
loop
pop
test
jb
xor
add
into
inc
xor
aad
test
ret
imul
mov
inc
lahf
dec
cmp
jg
adc
pop
or
xor
adc
or
sub
or
pop
or
and
pop
and
mov
imul
xor
inc
sub
rcrb
adc
jg
daa
cmpsb
lahf
push
cvtpi2ps
or
inc
in
cmp
icebp
jecxz
lret
ljmp
pop
js
jmp
add
sub
and
sbb
addl
xor
cli
push
pop
cld
rcll
xchg
jne
mov
stos
sub
add
push
jmp
or
add
jp
mov
ljmp
imul
and
pop
jmp
dec
pop
imul
pop
das
fists
or
or
jae
addb
rcrb
pop
xor
pop
aam
mov
lahf
dec
incb
and
shlb
or
arpl
repz
mov
sub
sub
data16
inc
rcrl
xchg
aad
shll
mov
lcall
jnp
mov
mov
jno
aam
rorb
dec
pop
cld
ss
fldcw
or
adc
and
daa
or
addb
les
push
stos
mov
cmpsb
pop
add
in
jge
mov
rorl
sarl
push
stos
cwtl
aas
sub
or
mov
push
ds
pop
jg
xchg
dec
push
adc
xor
mov
cli
mov
adc
rep
push
mov
add
out
cmp
stos
xchg
in
or
test
jae
add
insb
repnz
xor
jo
mov
mov
imul
dec
inc
and
dec
xor
fstps
prefetch
xor
add
xchg
aad
lods
or
ret
xchg
xchg
xchg
jnp
aad
push
lret
xchg
add
push
pop
push
sti
stos
inc
loop
cltd
insb
fldl
inc
mov
mov
daa
jbe
bound
addr16
repz
aad
push
les
jne
and
pop
shrb
dec
test
data16
add
xor
inc
ret
sub
adcb
fildll
mov
push
xor
push
or
jge
pop
insb
sbb
imul
lods
ret
add
clc
xchg
pop
cwtl
aaa
add
ja
pop
cmpsb
pop
jmp
pop
and
add
popf
addb
jns
mov
call
enter
pop
mov
dec
pop
and
dec
shlb
aad
cmp
ds
mov
dec
add
push
pop
xor
imul
aam
icebp
inc
xchg
vhaddps
or
mov
xchg
pop
xchg
cmp
add
sub
push
adc
subl
jb
pop
dec
inc
xchg
cmpsb
xor
hlt
jmp
cs
push
mov
ja
pop
movsl
mov
arpl
repnz
add
xchg
and
xor
js
cmpsb
xchg
addr16
add
clc
pop
insl
fsts
ret
push
aam
mov
add
repnz
test
fs
dec
out
pusha
mov
in
xchg
pop
xor
jmp
out
adc
jo
call
lea
movsb
jle
aad
scas
pop
mov
dec
sub
jle
das
jb
mov
add
arpl
fisttps
add
sub
add
xchg
jno
jo
aas
loop
dec
stos
addr16
roll
cmp
std
daa
pop
loopne
push
fcomip
mov
xor
in
pop
pushf
push
popf
enter
clc
in
push
sub
adc
mov
cmpsl
push
jle
jae
jne
out
or
test
pop
xchg
jl
lret
fs
inc
and
inc
das
jecxz
cld
int
inc
sbb
push
lcall
mov
mov
sub
push
mov
sub
pop
adc
mov
xchg
lds
in
xchg
rcrl
call
inc
jmp
mov
jp
ljmp
mov
outsb
stos
shl
loopne
jo
mov
pop
rolb
pop
mov
daa
push
loope
adc
adc
mov
add
xor
xor
pop
not
and
jns
movsl
ja
aad
int3
push
lahf
clc
mov
push
cmpb
adc
aad
je
jmp
mov
es
cmp
jmp
fmuls
push
or
mov
daa
xor
decb
sti
int3
pop
jmp
jns
add
xchg
sar
fldenv
clc
repz
jecxz
adc
sbb
adc
into
test
xchg
adc
sub
add
mov
fcoms
mov
jmp
inc
dec
cmp
sub
mov
dec
ss
or
or
js
sub
or
inc
push
inc
xchg
xchg
lcall
dec
icebp
popa
int3
jo
xor
ljmp
jecxz
jge
push
adc
mov
in
dec
mov
mov
or
pop
inc
out
dec
les
push
add
or
out
push
jle
fidivl
popf
nop
dec
sub
stos
sub
jmp
test
es
cmpsb
popa
dec
arpl
adc
xchg
movsl
test
movsb
out
and
xchg
std
mov
cld
xor
jmp
add
fsubrl
xor
or
jp
cltd
inc
fwait
add
shrb
xor
leave
adc
adc
mov
or
cli
cld
lock
mov
pop
push
jo
add
fistpl
inc
es
push
xchg
pop
jo
inc
jb
pop
dec
ret
out
mov
jmp
dec
pop
fiaddl
cs
stos
mov
in
lods
adc
cmc
ljmp
popa
mov
movsl
mov
xor
mov
add
jmp
mov
cmc
add
pop
shl
add
fimuls
or
negl
pop
arpl
dec
add
xchg
ret
iret
jle
and
sahf
jge
lods
cltd
popf
imul
jmp
ljmp
test
fistps
loopne
in
sub
rorb
repz
mov
mov
mov
xchg
sub
gs
add
cld
leave
sbb
mulb
dec
in
shr
add
subl
cmp
dec
imul
mov
xchg
jmp
test
sbb
popa
int3
lret
addr16
sub
scas
push
fcom
ljmp
loope
imul
xchg
and
mov
ljmp
clc
sbbb
repz
aas
cmpsl
or
popf
jg
ljmp
ret
or
data16
inc
and
push
mov
or
add
shlb
sbb
jmp
push
or
xchg
bound
jg
and
into
push
sbb
and
push
popf
clc
ret
adc
sub
out
xchg
out
repnz
mov
pop
mov
rorl
jb
xchg
sbb
cmc
sbb
jl
jmp
mov
jne
dec
dec
jne
inc
mov
cwtl
add
cmp
shll
out
es
dec
invd
aad
inc
inc
jmp
inc
mov
les
pop
jne
xchg
jb
and
js
in
popf
push
repz
cs
push
fisttps
push
sbb
push
test
push
dec
mov
jge
push
lock
cmpsb
or
aad
adc
out
jl
cmp
or
fmul
push
adc
sbb
test
push
pop
xchg
incl
std
jno
dec
daa
test
xchg
xchg
dec
addb
cmpb
push
jle
xchg
pop
push
es
xchg
push
test
cmp
repnz
jo
jb
call
push
aas
and
inc
sahf
arpl
imul
push
movsb
lahf
add
jmp
loop
js
mov
dec
mov
adc
pop
inc
scas
xchg
pop
adc
adc
sub
add
cs
or
jne
pop
sub
cmp
loop
gs
fdivrp
push
std
inc
add
aad
test
dec
lcall
jns
inc
push
movsb
scas
in
outsb
movsb
ret
cmc
jnp
or
push
repz
loope
fbstp
sub
pop
int3
cmc
pop
jge
test
repnz
mov
jecxz
popa
or
sarb
dec
pop
adc
fcmovnb
ret
dec
mov
notb
lock
and
int3
cmp
mov
ja
in
cmc
inc
mov
dec
adc
pop
dec
aad
and
xchg
pop
and
sub
dec
or
pop
mov
push
in
repnz
jne
cmpb
adc
cmp
mov
adc
insb
sub
or
push
subb
add
sub
fsts
mov
shrb
dec
mov
leave
inc
imul
xchg
push
xchg
out
push
jno
pusha
fprem1
sub
cmp
jmp
fidivs
mov
or
inc
jg
inc
push
cwtl
jge
mov
xchg
movsb
lods
push
xchg
add
wbinvd
add
jmp
mov
push
sar
sbb
pop
mov
pusha
add
add
adc
push
add
div
sub
sub
mov
jmp
stc
dec
imul
sub
mov
out
jno
mov
jp
dec
pop
icebp
xor
lock
lret
mov
jbe
je
pop
adc
pushf
hlt
out
or
pop
in
xor
lds
dec
js
and
adc
lcall
pop
xor
xor
inc
out
sbbb
fildll
dec
das
or
pop
jg
in
mov
movsb
nop
stos
sbb
data16
add
cld
sti
or
inc
out
test
jl
addb
in
mov
dec
xchg
stos
pop
push
or
sarb
mov
jmp
pop
movsl
cmp
sub
leave
push
and
test
out
jns
sub
mov
mov
addr16
add
sbb
fldl
iret
mov
jns
cmp
movsl
lock
dec
repnz
add
push
inc
xor
mov
outsl
stos
dec
jmp
adc
in
push
xchg
stos
addb
jb
and
jg
es
push
andb
daa
fiaddl
or
sti
ret
imul
test
icebp
xchg
ds
cs
mov
mov
sbb
cmp
xor
fs
call
inc
inc
dec
mov
fs
mov
mov
not
adc
push
fldl
lods
lock
mov
push
sahf
jle
add
rcr
jmp
push
cltd
jno
std
dec
sub
das
xchg
data16
dec
fs
push
sbb
hlt
cli
inc
sahf
std
add
inc
insl
fists
adc
stc
pop
int
shll
ret
enter
loop
push
push
dec
insb
adc
cli
mov
sub
lcall
and
sub
mov
add
pop
insl
push
addr16
fstpt
mov
fsubrl
inc
imull
or
add
outsl
hlt
test
stos
inc
lock
out
ret
rorb
adc
push
mov
dec
xor
jae
xorb
push
cwtl
cmp
test
push
pop
or
pop
mov
subb
mov
push
sbb
jo
jae
roll
fsub
mov
mov
int3
push
mov
add
dec
and
pop
pop
jecxz
adc
fisttpll
dec
jbe
mov
insb
dec
inc
mov
lds
xor
or
adc
inc
out
add
out
mov
push
es
push
gs
push
sub
pop
mov
xor
push
inc
lahf
movsl
pop
cmpl
jbe
cmp
or
and
popa
cmp
aam
out
loopne
push
dec
mov
adcb
insb
add
mov
movsl
dec
or
push
dec
rcl
pop
andl
add
mov
dec
xor
mov
sarb
add
flds
int3
lret
and
add
jmp
jnp
enter
shlb
xor
sbb
dec
mov
mov
or
or
fcmovnb
mov
dec
not
fsubl
push
testb
ror
mov
data16
es
push
pusha
push
pop
push
jmp
cwtl
jbe
and
adc
cmp
rclb
push
add
out
or
cwtl
push
inc
rolb
mov
sbb
inc
pop
loopne
push
dec
mov
addb
les
pop
add
jg
xor
push
push
xchg
push
jecxz
cli
rorl
test
jmp
mov
xchg
sub
jmp
cmp
jo
push
jmp
aad
add
or
jmp
mov
movsl
jne
jmp
cltd
add
adc
insl
sarl
push
dec
adc
jne
pop
sbb
add
push
mov
or
mov
inc
cld
decb
mov
jmp
push
dec
xor
mov
ljmp
xchg
sub
clc
in
jle
negl
mov
pusha
lret
cmc
mov
mov
daa
loop
adc
cmp
mov
pop
pop
mov
or
jns
dec
mov
nop
adc
inc
mov
pop
inc
sbb
icebp
jns
lea
movsl
stc
adc
inc
mov
push
std
add
and
cs
add
mulb
inc
or
sub
and
lea
insl
mov
fsubs
bound
mov
jmp
cmp
fisttpl
jb
jg
orl
stos
gs
inc
mov
add
lock
call
add
xor
inc
inc
mov
or
and
ret
inc
outsl
and
or
pop
pop
popf
xchg
lds
jg
pushl
inc
and
adc
pop
sti
mov
stc
es
xchg
testl
cli
pop
mov
imul
xor
lahf
jns
shlb
mov
imull
pop
in
cmp
sub
fwait
inc
ret
and
jns
jae
bound
jo
push
lock
cmp
jbe
and
iret
or
push
mov
out
ficoms
dec
sub
out
or
jmp
outsb
dec
enter
aas
cli
fsubs
out
cmp
aad
in
jmp
cs
std
xchg
pop
xchg
outsb
lret
test
mov
int3
loop
add
stc
sahf
scas
outsl
jmp
not
xor
cmp
sub
inc
dec
das
js
xchg
or
xchg
mov
mov
in
pop
push
jbe
gs
sti
popf
outsb
inc
inc
and
jo
int
insl
dec
push
cmp
stos
test
aad
iret
jne
orb
or
test
adc
test
mov
mov
stos
sarb
or
outsb
ds
jecxz
jns
das
imul
nop
jbe
ds
into
mov
or
inc
xchg
jp
sti
xor
cmpsb
add
or
jo
nop
sub
xor
inc
add
mov
cli
push
dec
les
call
add
adc
lods
xor
add
ljmp
das
inc
mov
inc
dec
jmp
fistps
call
pop
and
and
cwtl
bound
sub
push
or
das
out
jne
add
aad
bound
das
jbe
add
stc
inc
fdivrs
in
out
data16
cmp
pop
stos
jecxz
add
push
sbb
inc
add
add
jae
add
jbe
fildll
arpl
fs
test
pop
std
pop
jmp
rcll
mov
push
testb
mov
push
add
pop
test
and
xchg
inc
jno
sbb
int
pop
push
inc
ss
cmp
mov
mov
mull
dec
repnz
inc
data16
mov
inc
pop
jl
jmp
aas
and
xchg
std
jl
jmp
dec
nop
xor
xor
cmp
faddl
in
xor
jb
test
cmp
lock
das
js
xchg
cli
push
icebp
or
or
mov
add
pop
lret
mov
or
mov
mov
stos
movsb
aas
jecxz
mov
dec
dec
xchg
push
xchg
adc
push
mov
int3
gs
addr16
int
inc
movsb
sbb
sbb
mov
not
shll
popf
cli
pop
int
jnp
mov
les
pusha
mov
jl
add
dec
jno
cmpsl
pop
or
jbe
mov
push
cwtl
sub
xchg
xchg
add
mov
or
ljmp
fnsave
push
imul
cs
sub
loope
mov
sub
lds
xor
xchg
faddl
loopne
push
cmp
pop
pop
movsb
mov
cwtl
inc
cmpsl
test
xor
xor
mov
pop
ss
push
stos
subb
push
sub
aam
sub
and
pop
sub
add
ret
movsb
sbb
push
pop
push
loope
scas
test
stos
cld
lea
sub
bound
mov
js
sar
mov
mov
lds
shlb
adc
or
mov
pop
xorb
pop
xlat
sbb
mov
pop
add
inc
add
sub
pop
rcrb
pop
push
jmp
and
daa
and
pop
je
call
scas
add
add
not
inc
stos
call
pusha
mov
pop
inc
push
pop
stos
push
push
or
add
dec
popa
lret
insl
inc
adc
dec
js
dec
lds
ljmp
out
mov
cmp
pop
sub
xchg
js
jp
out
cli
dec
pop
int
pop
mov
sbb
clc
lahf
fcomi
dec
filds
and
push
push
push
outsb
jp
adcl
daa
jmp
mov
xor
shlb
fildll
jmp
mov
mov
jnp
push
int3
and
ja
repnz
imul
filds
add
idiv
adc
pusha
popa
scas
mov
sbb
cmc
dec
inc
xchg
cmp
ret
std
fnstcw
adc
lahf
faddl
jmp
mov
xchg
js
pop
push
mov
mov
fidivrs
jmp
addl
mov
pop
pop
mov
in
xchg
leave
or
add
fldt
ja
and
xor
cli
testl
jge
pop
jg
test
repz
push
pop
and
mov
je
jb
jge
aam
adcb
dec
lods
push
dec
sbb
lods
test
js
pop
add
add
out
outsb
roll
push
pop
inc
pushf
sub
ds
xor
jmp
fldt
repz
cmc
sahf
adc
or
pop
aad
testb
ret
lcall
cmpsl
jmp
cmp
xor
xchg
push
jl
xchg
add
flds
sub
jmp
in
fnstcw
push
jmp
mov
adc
adc
cs
out
mov
inc
sbb
pop
std
cmc
add
bound
cmp
xlat
iret
pop
pop
cli
outsl
mov
mov
shrl
ffree
test
push
inc
dec
lds
pop
pop
push
mov
push
loopne
adc
iret
add
cli
imul
jno
push
outsb
sub
movsl
rcrl
pop
aaa
repnz
in
cli
outsb
mov
add
mov
cmp
add
addr16
inc
lds
jmp
cmp
rorl
test
roll
and
movsb
mov
packssdw
cmp
mov
dec
add
push
push
imul
inc
dec
add
add
or
loopne
iretw
xchg
or
pop
adc
jmp
pop
loopne
mov
ds
dec
stos
xlat
out
mov
scas
addl
aaa
jle
mov
or
pop
mov
dec
pop
stos
mov
rclb
iret
inc
fistl
sbb
hlt
popa
sub
dec
jne
and
xchg
mov
pop
mov
sbb
adc
scas
sub
cmp
push
xchg
lea
dec
cmp
test
out
fcomps
subb
jl
xor
out
pop
jae
xlat
or
add
aas
push
push
mov
pop
pop
pop
jmp
fld
ljmp
adc
add
dec
pop
mov
push
lock
or
bound
dec
sub
xlat
aaa
xchg
in
cmp
push
push
lea
adc
arpl
push
stc
inc
cltd
xchg
pop
cmp
dec
add
inc
push
xor
cs
loopne
cmp
push
dec
or
dec
sbb
mov
pop
adc
or
clc
and
mov
fsubs
inc
daa
adc
adc
sub
sub
inc
mov
aam
cmpsb
add
sbb
aaa
add
stos
addr16
mov
imulb
scas
add
xor
dec
add
ret
push
pop
rcl
mov
sahf
cmpl
in
push
mov
cltd
adc
leave
pusha
push
sub
pop
jle
sarb
mov
fsubl
clc
adc
sub
dec
xchg
xor
rolb
imul
sbb
cli
or
cld
or
add
mov
pandn
mov
les
inc
mov
push
jg
mov
jecxz
pop
lods
pushf
test
mov
pop
rorb
fcoml
push
std
add
xchg
nop
test
jb
pop
addl
ret
jbe
xor
leave
ds
pop
mov
mull
jb
loope
mov
mov
jae
add
add
cmp
mov
popa
xchg
ljmp
insb
arpl
repnz
sbb
mov
pop
imul
jmp
inc
dec
inc
add
pop
jbe
js
std
fisubl
xchg
ljmp
mov
ss
inc
add
cli
mov
out
add
fcoms
cmp
sbb
repz
jecxz
mov
orl
mov
xchg
orl
test
xchg
jmp
jb
cs
xor
add
xchg
push
mov
sub
add
int
movsb
inc
loop
add
cli
jno
add
add
mov
test
sub
inc
data16
add
xor
loopne
pop
nop
push
push
jbe
mov
add
iret
fcoms
pop
cmp
or
mov
loopne
add
fnstenv
jge
jnp
or
movsb
movsl
add
cltd
xorb
inc
xchg
jns
jg
add
push
xor
scas
adc
cmp
jb
stos
daa
lds
ud2
add
lods
dec
lock
jl
add
cmp
sarl
or
add
pop
add
mov
imul
xchg
jbe
sbb
pop
pop
push
push
fcoml
das
push
jno
fcmovnu
mov
pop
mov
dec
shlb
movsb
sub
xchg
inc
mov
ja
cmp
rclb
add
or
add
jns
cmc
mov
pop
inc
insl
aas
divl
add
outsb
sahf
add
mov
addr16
mov
adc
out
test
clc
mov
add
add
enter
add
mov
pcmpeqd
sub
mov
add
xor
popf
and
sub
dec
jcxz
mov
cmp
sub
lcall
sub
adc
xchg
xorb
lret
add
popa
loope
jl
xor
sbbl
cmp
mov
int3
lds
test
push
push
mov
xor
fcmovnb
out
push
mov
dec
stos
fiaddl
xchg
add
lods
xchg
inc
and
dec
jb
add
lds
adc
xchg
adc
cmpsb
sub
xchg
pop
jl
add
arpl
fists
add
mov
xor
sub
inc
subl
movsb
into
sbb
loope
mov
es
cmp
jb
pop
add
or
arpl
sahf
push
pop
fisttpl
mov
push
cmpsb
and
jnp
shll
stos
pushf
sub
aad
sbb
mov
idiv
xchg
mov
mov
in
jge
inc
daa
push
aas
imul
les
sbb
leave
test
sbb
jle
add
xor
movsb
pop
in
filds
inc
push
fxch
xor
pop
jecxz
das
pop
lds
inc
ds
xchg
jo
dec
mov
jbe
dec
mov
lcall
orb
dec
cmc
mov
and
adc
push
test
jo
jl
mov
jns
dec
loop
cmovl
inc
out
xchg
mov
lahf
pop
sub
roll
dec
sub
ret
or
popf
dec
jns
pusha
dec
inc
push
jp
add
aaa
int3
mov
jle
dec
mov
pop
jns
and
cmc
dec
inc
or
push
pusha
addb
stc
xor
mov
mov
jbe
mov
mov
xorb
dec
push
or
jae
int
mov
cwtl
in
sub
pusha
lret
pop
or
jle
pusha
ds
and
sbb
jae
adc
add
inc
dec
push
add
lods
xchg
pop
pop
adc
sbb
arpl
sub
push
cltd
jae,pn
loopne
popa
std
mov
dec
pop
mov
int3
jae
cmp
mov
adc
popf
outsl
sub
mov
or
lds
inc
pop
sbb
gs
inc
and
push
fs
jmp
pop
xor
xchg
add
scas
pop
lock
add
xchg
adc
add
xor
mov
hlt
jle
es
out
clc
adc
add
pop
pusha
mov
or
mov
xchg
ret
ljmp
mov
add
rcr
push
xor
xlat
push
xchg
popf
pushf
or
data16
andb
loope
or
jmp
inc
adc
or
out
and
inc
add
test
cmp
outsl
stos
aad
push
shrl
into
int3
nop
sbb
mov
add
push
push
repz
std
add
imul
inc
mov
mov
repnz
scas
cli
movsl
pusha
enter
xchg
add
or
andl
pop
xadd
jecxz
pop
dec
sbb
adc
push
add
inc
add
ret
aam
fs
addb
and
cmp
stc
add
daa
repnz
ljmp
adc
jle
and
dec
mov
jge
pop
xchg
add
pusha
lret
ljmp
xchg
or
jp
sbb
cmp
push
popf
mov
pop
stc
add
cmp
shrl
add
test
popf
and
adc
in
push
je
jno
cmp
and
stos
add
sti
sub
inc
mov
xchg
int3
add
and
adc
mov
add
xor
outsl
jo
add
push
ja
cwtl
mov
or
popf
sbb
pop
rorb
lea
jecxz
add
inc
dec
cs
cmp
cwtl
cmp
cli
sub
cmp
movsl
and
mov
std
imul
jecxz
jnp
pusha
and
pop
lret
cmp
iret
or
cmp
out
mov
test
ret
shrb
test
xor
jmp
clc
gs
adc
add
movsl
lret
data16
in
mov
add
cmp
mov
mov
xlat
cmc
and
xor
enter
cmp
add
push
flds
mov
cmpb
mov
add
xchg
nop
adc
loop
cmp
mov
pop
push
repz
jle
mov
and
nop
dec
repnz
add
out
insb
push
jns
rorl
push
mov
mov
test
test
mov
or
sbb
mov
andb
mov
add
inc
test
sub
pop
jb
stc
mov
dec
inc
mov
mov
jl
aad
sar
sarb
std
mov
cmpsb
add
jecxz
lods
and
aas
xor
fstpl
mov
ror
inc
pop
mov
adc
out
cmpsb
add
nop
leave
xor
jmp
arpl
hlt
push
test
insl
je
mov
dec
pop
inc
addb
add
out
mov
cmp
faddl
xchg
or
xchg
insl
push
adc
lock
add
push
pop
das
add
inc
fs
sbb
pop
adc
sub
add
inc
addr16
sbb
xchg
mov
push
test
test
sub
clc
xchg
adc
rolb
push
mov
cmp
push
std
inc
popa
nop
cmpsb
ja
pop
mov
and
add
aad
or
test
mov
dec
out
fcomps
cmp
int3
cmpb
pop
adc
popa
jno
sub
mov
adc
jno
or
push
ret
rolb
inc
xor
filds
mov
mov
shlb
das
xorb
das
cmp
ret
lods
push
gs
jns
mov
xchg
fwait
int3
iret
fs
das
jmp
into
push
add
ret
adc
cmpsb
mov
push
xor
sub
scas
mov
lock
mov
inc
and
sbbb
jl
int3
xchg
sbbl
adcb
push
mov
pusha
pushf
adc
add
les
repnz
std
add
add
cmc
pusha
mov
aas
mov
loopne
xor
clc
push
add
jp
xchg
add
pop
cmc
mov
mov
cmp
pop
aas
jae
jb
ror
jo
mov
shlb
into
cmp
add
out
push
fmuls
dec
ds
or
pop
mov
xor
pusha
popa
scas
aas
dec
call
js
pop
and
jo
or
pop
roll
clc
fs
adc
std
mov
or
mov
dec
add
push
dec
loopne
sbb
mov
cmp
fistps
lods
adc
and
imul
cld
jno
ror
sbb
pusha
xor
mov
pop
or
imul
push
popf
xor
xchg
ljmp
movsb
shll
or
xor
push
popf
call
jne
sub
ret
movsb
ja
mov
flds
pop
add
mov
push
pop
or
inc
push
fsubs
outsb
int3
fimull
cmp
pop
mov
je
dec
adc
outsl
sub
cmp
cltd
jb
pop
clc
lds
das
mov
loopne
inc
dec
add
scas
push
jno
add
xchg
out
push
in
rol
call
push
test
andb
sub
es
jo
cli
and
dec
js
add
lods
xor
add
pop
inc
xor
xchg
add
dec
xor
pop
das
std
call
add
fbstp
jg
jnp
andb
jns
stc
xor
xchg
lcall
sub
sbbb
shll
aad
jb
jo
add
call
dec
push
dec
sub
xchg
out
sarb
jle
sub
mov
cmpsl
fs
ret
dec
fstp
push
push
and
add
popa
sbb
xchg
rcr
out
add
inc
aam
adc
adc
and
push
test
iret
add
ds
lret
loope
jb
nopl
dec
mov
add
aad
lahf
inc
aam
sub
inc
shl
es
adc
addb
sub
mov
fisubrl
out
fs
and
es
dec
inc
pop
pop
sarl
inc
dec
test
and
cmpsl
or
dec
xor
out
aas
add
push
mov
inc
int
fnsave
push
and
bound
or
call
mov
or
sbb
push
in
loope
pop
or
lods
jp
sbb
push
pop
jecxz
mov
mov
test
fwait
xchg
cmp
ror
sub
jns
popf
aad
add
lahf
jl
pop
mov
or
pop
iret
xor
outsb
std
enter
cmp
cmp
jge
or
sub
in
imul
lea
jge
push
mov
idiv
xchg
add
add
xchg
add
sbb
fwait
mov
movsb
bt
leave
mov
sbbb
addr16
lret
xor
ret
sbb
or
unpckhps
jno
and
dec
repnz
and
sbb
cmp
pusha
xchg
movsb
xor
das
mov
cltd
popf
lods
push
dec
sub
inc
clc
add
das
xor
dec
ds
push
sub
lods
addb
fs
ret
push
cmp
fsts
and
sahf
xchg
push
rcll
add
call
fwait
imul
adc
and
jmp
nop
sahf
add
lock
dec
add
icebp
xchg
je
fwait
or
jle
mov
clc
jnp
add
or
adc
add
adc
movsb
add
out
jl
add
mov
mov
int
or
and
adc
mov
or
push
xchg
mov
push
mov
xchg
ljmp
call
js
into
cmpsl
add
mov
idivl
hlt
mov
push
ret
xchg
pop
push
pop
in
sbb
jl
shlb
sahf
xchg
jne
dec
add
xchg
jle
xorl
jl
inc
aas
cli
xchg
jg
cmpb
cld
cld
lcall
and
outsb
movsb
or
lret
mov
adc
rolb
mov
mov
sub
sbb
dec
inc
xchg
push
adc
sarb
push
pop
fcomp
mov
sub
and
cmc
fsubr
push
inc
roll
rcr
out
pusha
addb
pushf
lahf
sbb
add
xchg
push
or
popf
nop
insb
pop
add
add
test
notl
pop
mov
subl
addb
jb
int3
push
inc
lods
in
sub
xor
xor
and
jge
sti
mov
shrl
mov
loopne
imul
lds
add
push
cmpl
test
repnz
add
jge
or
mov
push
or
cmp
stos
xchg
aaa
aad
aam
cmp
push
mov
sti
add
push
iret
mov
clc
push
pop
lds
or
push
repz
jecxz
rcl
cmp
add
pop
push
shl
lods
fiadds
and
popa
adc
loop
ss
add
jnp
in
mov
cmp
xchg
sub
dec
sbb
nop
popa
push
cltd
adc
mov
add
and
sbb
xor
ds
push
jl
add
mov
cmp
push
inc
call
cmpsb
inc
sbb
xor
cmp
xchg
jnp
pop
add
iret
enter
ja
add
das
push
inc
add
popf
test
mov
fnsetpm(287
add
sbb
dec
pushf
sub
enter
mov
les
out
and
add
mov
fs
movsl
call
int3
inc
test
fwait
and
xchg
and
das
add
jns
repnz
add
add
inc
push
das
ljmp
popf
sahf
sbb
pminub
inc
fistl
std
repz
dec
push
or
adc
pop
sbb
rolb
or
adc
push
dec
add
push
and
sahf
dec
push
sahf
add
pop
pop
pop
xchg
ja
push
push
leave
cltd
inc
and
mov
dec
mov
mov
sbb
xlat
scas
xor
or
movsl
pop
addr16
push
fs
out
push
jnp
push
loop
aas
jecxz
cmpsb
add
das
pusha
pop
jo
cmp
jb
lret
inc
or
fstpt
popf
adc
mov
adc
push
mov
sbb
fdivrs
and
lds
shlb
inc
adc
sbb
lods
mov
xchg
inc
mov
pop
ret
ret
xchg
adc
mov
mov
mov
pusha
rol
sbb
lods
jns
or
adc
lock
and
add
mov
add
test
in
imulb
mov
outsl
mov
shlb
dec
es
out
or
inc
fisubl
add
shl
mov
jbe
jo
sahf
fs
dec
filds
adc
aas
in
xchg
pop
or
mov
out
inc
icebp
dec
cmp
inc
mov
inc
add
sbb
sbb
add
jbe
subl
fwait
aaa
adc
js
adc
add
out
dec
lods
or
xor
push
pop
jne
pop
jle
lret
decl
push
aam
inc
push
incb
inc
cs
and
sub
test
push
notl
sub
cmp
loope
addr16
sub
sub
push
or
push
cmpsl
lret
outsl
or
inc
push
mov
xchg
pusha
and
and
idivb
mov
xor
push
ds
pop
sub
bsf
loopne
lock
in
js
push
cmp
rolb
dec
sub
stos
adcb
mov
rcrl
and
pop
push
icebp
add
adc
sub
inc
pop
jecxz
push
push
push
ja
stc
jg
pop
pusha
adc
mov
sub
push
std
pop
or
mov
lds
push
ret
add
sub
jg
out
dec
addl
sub
out
into
cmp
adc
call
mov
out
add
std
jae
sbb
pop
add
les
add
clc
pop
mov
cld
rol
ret
mov
orl
adc
mov
ds
push
xor
push
sbb
mov
sbbb
mov
sti
mov
push
test
popa
stos
add
push
pusha
jl
mov
popa
dec
pop
jecxz
jle
test
cmp
loopne
fadds
popa
add
sub
sbb
inc
xchg
jl
push
xchg
pop
adc
pop
adc
test
push
add
add
mov
add
sbb
loop
sbb
jae
cmp
dec
sub
movaps
rolb
pop
rcll
add
or
push
adc
xlat
jge
imul
icebp
mov
adc
fsubl
xlat
xchg
adc
mov
scas
jmp
adc
fwait
cmp
xchg
hlt
add
incb
sbb
mov
push
test
adc
push
and
lods
sbb
ja
in
xor
jb
push
es
out
xchg
pusha
aas
cwtl
frstor
adc
push
pusha
int3
pop
inc
add
clc
std
rcrb
movsl
mov
add
mov
ret
sbb
xlat
sub
mov
aas
clc
test
shld
inc
imul
adc
into
imul
jne
aaa
mov
les
cmpsb
sbb
cld
stos
push
push
push
in
imul
push
dec
xor
inc
dec
cmpsl
push
aaa
jo
sbb
push
into
add
lods
popa
dec
inc
movb
xlat
push
or
aas
clc
mov
lret
cmp
insl
dec
and
cld
xchg
rep
incl
mov
pop
mov
pusha
sub
push
cmp
roll
dec
call
jo
dec
insl
mov
push
add
ljmp
sub
icebp
and
movsb
and
xlat
in
out
push
mov
cmp
std
pop
cwtl
jecxz
cmp
add
pop
or
nop
pop
mov
push
adc
out
add
cmp
or
rorl
xor
sub
data16
adc
jae
inc
xchg
and
sbb
movsb
add
outsb
sbb
push
js
jns
mov
jl
push
cld
cmp
jle
or
insb
movups
sub
into
ja
jmp
xchg
mov
cwtl
or
mov
xchg
stc
rolb
push
dec
jno
pop
mov
icebp
repnz
jb
cltd
pop
mov
xorl
sbb
jb
mov
sub
cmp
mov
xchg
mov
cmp
sbb
mov
dec
clc
dec
push
push
push
mov
je
pop
int3
cwtl
dec
inc
push
fcoml
add
xchg
hlt
inc
in
dec
aad
es
jl
cwtl
bound
xchg
push
pusha
jmp
xchg
mov
xor
sbb
mov
imul
adc
or
sub
or
aaa
loopne
pop
sub
iret
add
push
mov
lock
inc
hlt
push
test
loope
xchg
xor
push
inc
enter
dec
repz
jl
dec
mov
fmuls
dec
push
inc
mov
xchg
sbb
lret
dec
or
rcll
mov
jge
pop
jg
push
es
or
fs
push
nop
mov
mov
add
aaa
cmp
sub
adc
fsubrs
sub
push
stc
inc
in
adc
push
test
mov
mov
xor
xor
mov
and
and
push
das
aas
jmp
rcl
jne
repnz
inc
or
or
test
rorl
pop
sub
aad
sbb
and
in
xor
adc
scas
adcl
adc
xchg
jae
int3
xchg
sbb
int
out
mov
jo
cltd
inc
adc
cmp
in
daa
pushf
push
inc
call
add
cmp
fldln2
inc
mov
rclb
mov
popa
sbb
or
xchg
clc
cltd
add
push
scas
mov
mov
imulb
dec
dec
repz
test
inc
mov
cltd
mov
cld
sti
or
std
fwait
add
pop
mov
loope
or
mov
add
dec
shll
xchg
ljmp
lahf
cmp
sub
pop
mov
or
jmp
and
test
jg
mov
stc
or
les
dec
mov
loopne
xor
add
daa
jno
inc
xor
fcoml
pop
add
jo
cmp
mov
add
rcr
xchg
sub
xchg
jmp
inc
dec
mov
in
scas
inc
mov
adc
and
inc
imul
or
lcall
leave
rol
sub
pop
arpl
jnp
add
dec
or
push
push
or
mov
inc
mov
push
std
enter
shll
pop
push
out
push
dec
and
dec
xchg
pop
scas
shrb
iret
push
add
sti
mov
mov
add
dec
movsl
test
lahf
shlb
and
xor
lds
mov
add
or
test
outsb
lret
push
mov
out
xor
loop
adc
and
pop
add
jge
sbb
andb
xchg
xor
push
outsl
les
fs
mov
add
add
cmp
push
icebp
add
mov
and
xor
filds
repz
sbb
push
add
add
cld
dec
inc
mov
jp
jl
add
dec
push
mov
icebp
sbb
xor
out
in
jne
inc
add
lods
pop
adcb
outsb
or
inc
add
push
add
cmp
call
or
out
add
pusha
push
lock
std
loope
rcll
adc
daa
cwtl
sub
test
adc
xor
ds
mull
add
add
std
incb
out
sub
insl
xor
push
sti
fistps
shl
or
lock
subb
and
cli
leave
sub
jmp
idiv
rorb
adc
xor
xor
cmc
pop
notl
mov
arpl
sti
icebp
enter
pop
and
adc
ret
je
cs
add
cwtl
push
xor
xor
out
cmp
sub
add
mov
adc
pop
dec
in
sub
add
lock
push
mov
and
inc
data16
xchg
add
add
pusha
xor
sub
fldcw
add
adc
jecxz
inc
test
mov
shlb
and
fs
push
loope
sbb
sbb
add
adc
insl
mov
push
subl
clc
jp
inc
pusha
scas
cmp
xor
mov
xchg
adcl
insb
test
out
mov
dec
sub
cld
add
in
jg
dec
and
jmp
sub
pop
adcb
fdiv
jl
push
movsb
xrelease
and
xor
fiaddl
lea
js
das
rcll
shl
nop
pop
push
data16
or
jo
xor
insl
movsl
dec
jl
pop
test
subl
inc
loop
push
sbb
sbb
jp
push
in
adc
jne
push
xchg
mov
fs
push
cmp
test
lods
je
jnp
mov
mov
sub
rcll
test
mov
and
or
jle
call
and
lcall
mov
pop
push
xchg
or
imul
ret
adc
lea
mov
cmp
push
and
mov
js
cmp
mov
mov
test
lahf
mov
test
mov
popa
inc
inc
lods
jmp
cwtl
and
push
insb
add
push
inc
aas
cmp
test
add
int3
js
adc
push
sub
add
jg
dec
dec
shlb
xor
pop
dec
add
stos
inc
or
je
xchg
adc
cmpsb
insl
xor
ss
repnz
jne
push
inc
movsb
mov
jno
enter
ljmp
jo
mov
xor
loopne
add
loopne
shrb
pop
add
icebp
sub
repnz
sbb
adcb
jg
dec
fbld
fldenv
jo
lahf
pusha
in
sbb
je
sahf
sub
add
orb
add
xchg
test
dec
addr16
mov
es
cmpb
or
cmpb
icebp
xchg
xor
mov
fbstp
sbb
insb
inc
push
adc
daa
loopne
push
or
adc
inc
loopne
dec
jno
xchg
jl
test
pop
push
push
nop
js
push
adc
out
repz
sub
push
sbb
adc
clc
adc
mov
sub
inc
rclb
push
ret
lock
mov
mov
leave
les
mov
dec
je
cmp
add
cmpsb
sbbl
pop
int3
inc
dec
jbe
clc
cld
lret
dec
sbb
ja
sub
aas
pusha
sub
or
pop
push
les
add
clc
into
enter
jecxz
cmc
dec
mov
mov
rorb
adc
repnz
clc
cli
je
jl
push
sub
sbb
clc
out
jae
add
inc
mov
xorb
add
mov
xor
add
dec
or
xor
dec
daa
or
inc
push
jecxz,pt
sub
mov
xchg
int3
cltd
adc
pop
rol
mov
adc
ds
testl
xchg
and
shlb
xor
loop
or
mov
pushf
adcb
pop
nop
or
inc
lods
mov
xor
aam
outsl
jne
cmp
or
imul
inc
jne
mov
jo
jno
pop
xchg
pop
and
pop
clc
pop
add
push
popf
inc
adc
roll
cld
fs
test
dec
add
inc
test
ljmp
bound
or
fmull
add
jns
icebp
fdivrp
outsb
mov
xchg
ds
fstpt
or
cmp
outsl
add
outsb
add
in
addr16
cwtl
mov
add
rclb
es
sbb
add
pop
cld
lcall
pushf
fs
ljmp
lods
jl
mov
mov
std
sbb
sub
cmp
scas
dec
ljmp
xor
add
adc
loopne
push
negb
adc
cmp
jg
xchg
addr16
sub
jp
in
or
xlat
cmp
movsb
mov
idiv
pop
data16
add
loope
adc
scas
mov
cmp
sahf
add
pop
cmp
xor
in
add
scas
imul
mov
mov
mov
pop
add
and
and
add
lods
or
push
lds
mov
jge
mov
pop
ja
cmp
fs
and
push
xchg
aad
daa
loopne
sub
mov
arpl
pop
adc
repz
mov
jb
pop
fstpt
lock
add
lea
xor
xchg
ds
cmp
sbb
popl
jb
mov
fcmovb
cwtl
or
xchg
add
and
stos
test
imul
repnz
fwait
xor
in
add
xor
xchg
cmpl
push
mov
sub
lods
mov
mov
inc
push
push
push
outsb
jl
addr16
xchg
add
imul
pop
jns
or
dec
sbb
js
add
imul
js
jbe
mov
sarl
outsb
push
in
jp
add
lds
pop
cmc
push
jle
push
mov
mov
pop
xchg
fadds
add
mov
cmp
and
pop
adc
movsb
hlt
enter
push
and
imul
int3
jb
push
sbb
movsb
pop
and
lods
xchg
popf
cmp
jp
xchg
in
dec
add
jle,pn
xchg
out
out
add
repz
add
stos
mov
outsb
xchg
in
loopne
addb
mov
pop
mov
fidivs
cmc
cs
lds
call
jb
bswap
jge
inc
mov
push
loopne
pop
pop
add
out
loop
add
jp
rorb
xlat
dec
fs
testb
pushf
sub
sbb
push
subb
test
hlt
mov
push
add
lahf
imul
jle
add
movsb
cli
daa
fucomip
adc
test
jbe
shrb
subb
add
xor
lods
inc
dec
cmpb
add
mov
xchg
aad
and
add
cmc
push
ja
xor
mov
sbb
and
stc
js
movlps
inc
mov
and
loopne
outsb
mov
dec
add
and
add
cmpsb
mov
push
sbb
pop
jmp
add
out
jg
xor
jmp
mov
pusha
dec
roll
fwait
adc
push
push
std
mov
icebp
call
ds
and
xchg
lret
cmp
cmp
mov
mov
xchg
push
cmpl
adc
out
cwtl
add
xchg
lea
mov
mov
addl
ror
cmp
mov
nop
mov
cmpsb
popf
add
pop
adcb
xchg
mov
fistl
and
mov
push
jp
pop
and
sti
ljmp
ss
pop
inc
idivb
sub
nop
pop
sub
mov
pop
sub
mov
sbb
clc
add
jae
outsb
and
in
cmp
add
mov
into
add
push
mov
sub
jnp
add
mov
pop
push
push
xor
test
sbb
adc
add
inc
add
pushf
pop
int
sub
add
test
jle
mov
mov
pop
sub
orl
in
out
sarb
add
cmp
popf
test
call
add
test
sub
repz
les
jmp
pusha
inc
cmpl
shlb
dec
test
add
push
mov
sub
adc
and
fimuls
push
add
pop
popf
rol
stc
lds
push
fists
loopne
leave
mov
add
aaa
out
cmp
aam
fwait
inc
ja
dec
xor
cwtl
sbb
mov
inc
sub
sysretw
push
fcoms
in
adc
iret
mov
je
sbb
mov
or
lcall
cmp
mov
and
inc
addb
iret
sub
xor
fwait
add
idivb
sub
cmp
inc
cld
mov
sbb
pusha
pop
hlt
nop
scas
jle
push
out
mov
add
push
mov
in
incb
mov
jmp
test
xor
cld
xlat
cs
jl
sub
outsl
sub
orb
test
lock
adc
xlat
push
add
shlb
or
loop
and
adcb
adc
insl
sub
add
dec
add
bound
pop
jno
cmp
pop
in
pop
cmpsb
push
pusha
loop
fadds
sbb
cld
hlt
ja
mov
das
sub
add
pop
sahf
mov
pusha
rolb
xchg
pop
call
add
fdivr
out
sbb
loopne
outsb
idiv
cmp
scas
adcb
sbb
and
mov
jb
jo
push
and
fdivl
mov
repz
out
jl
push
cmp
fs
mov
cmp
pop
fldl
or
mov
dec
and
inc
and
cmp
dec
frstor
out
sub
or
mov
imul
mov
push
cld
lea
inc
sub
pop
mov
cwtl
add
repz
push
push
jno
sbb
push
add
jecxz
inc
jne
dec
jmp
sbb
xchg
rcrl
push
cltd
add
pusha
outsb
orl
shll
sahf
adc
add
fwait
loop
and
and
adc
push
add
loop
inc
xor
push
mov
jmp
xchg
or
push
add
xor
imul
add
icebp
inc
and
push
sub
rcl
or
dec
insb
xchg
loopne
cwtl
add
mov
jmp
jmp
xor
bound
cli
mov
push
cmc
mov
push
hlt
imul
fmull
pop
rcrb
add
loopne
jno
add
pop
jae
sbb
mov
icebp
add
inc
and
add
and
clc
add
addb
pop
das
add
jae
jmp
jl
scas
pop
loopne
and
mov
sbb
imul
sbb
sub
adc
add
jns
out
bndldx
ljmp
add
daa
sbb
loop
add
xor
roll
in
sbb
popf
fmull
adc
lea
mulb
std
xor
ret
xlat
imul
mov
outsl
popf
addr16
mov
cmp
jl
adc
out
pop
sbb
jl
push
and
or
sub
push
jmp
popa
cmp
pop
xor
test
in
add
dec
addl
push
cmp
jl
mov
inc
jge
outsb
imul
and
push
jne
call
ret
arpl
das
xlat
dec
and
ljmp
outsb
shrl
cmp
psllw
ud2
mov
and
cli
testl
add
clc
jmp
sub
sbb
mov
and
and
outsb
fldl2t
lock
in
aas
xor
loope
sti
cld
lock
jl
repnz
sbb
das
or
adc
clc
xor
sbb
es
push
or
ss
daa
add
std
and
icebp
xor
adc
pusha
fsubl
pop
jo
cmp
cld
call
mov
xchg
negl
clc
repnz
add
push
mov
sub
sub
add
push
sahf
es
cmp
add
and
pop
cmp
icebp
sbb
rcrl
outsb
add
sub
or
in
sub
clc
add
cmp
sbb
sbb
inc
adc
aaa
sub
cmc
add
sub
or
shlb
sub
and
sub
dec
mov
add
stc
or
pop
push
or
testb
arpl
std
inc
xchg
sahf
int3
and
and
das
in
xor
inc
je
in
gs
xchg
pusha
loop
ljmp
and
xor
jg
add
fdivs
and
sbb
and
aam
adc
or
andl
aam
fimull
mov
adc
pop
add
in
or
aam
stc
adc
add
cli
inc
inc
aad
sti
mov
jmp
mov
adc
icebp
push
sbb
int3
xor
icebp
mov
in
push
sbb
ret
shr
mov
in
or
scas
jl
add
jmp
or
or
icebp
out
or
faddl
mov
repz
stos
in
xor
mov
icebp
sbb
int
mov
fidivrl
and
mov
mov
add
scas
out
repz
xor
neg
enter
mov
add
vpaddd
cmpsl
test
mov
decb
lock
mov
out
movsb
sbb
cmp
test
add
sub
out
stc
addb
and
iret
push
fiaddl
mov
and
testb
pop
mov
or
nop
in
xor
sub
adc
test
or
call
sub
shll
add
xlat
cmc
or
mov
movsl
add
adc
call
sub
or
push
test
jl
mov
mov
pop
push
inc
jecxz
pop
inc
icebp
loopne
in
adc
pop
lods
add
adcb
mov
mov
mov
retw
pusha
sbb
js
pop
push
enter
mov
xchg
lock
cmp
push
fstl
pushf
mov
push
aam
adc
scas
out
jo
mov
repnz
in
sub
sar
stos
cs
add
xchg
fs
add
push
sub
xorb
or
inc
push
xchg
dec
cs
loope
lock
repz
daa
in
andb
mov
xchg
leave
or
orb
lret
cmp
mov
sti
xor
add
mov
je
push
dec
push
leave
repnz
jb
sub
push
add
lcall
add
pop
inc
jmp
jb
mov
addr16
and
add
je
pusha
add
mov
mov
dec
cmp
push
jo
adc
or
daa
inc
adc
sbb
sbb
leave
mov
out
add
pop
cmp
xchg
pop
subb
pop
pusha
dec
jmp
add
xor
int
fwait
pushf
pusha
movsb
pop
xchg
ljmp
and
or
jo
cmp
cmpsb
orl
xchg
idiv
push
or
mov
mov
js
pop
mov
sbb
ja
int3
out
dec
mov
xor
leave
inc
xchg
adc
insl
add
lahf
jp
add
inc
rorl
daa
sub
cltd
jbe
into
stc
cmp
mov
sbb
dec
pop
jl
cmpsl
push
aam
or
pop
enter
xchg
push
lock
pusha
ja
push
std
lcall
cmc
jecxz
outsb
iret
and
and
push
xchg
inc
xlat
mov
cltd
add
and
add
std
adc
roll
test
pop
dec
cmp
shlb
jmp
into
and
pop
mov
add
mov
xor
inc
and
mov
push
add
xchg
xchg
dec
inc
mov
and
pop
push
scas
push
xor
push
xor
or
cwtl
pop
mov
mov
cwtl
jno
loopne
daa
int3
mov
dec
sbb
out
cmp
test
xchg
push
aas
ds
loopne
mov
cmp
and
mov
addr16
cmp
enter
or
leave
push
push
inc
jb
clc
sub
xchg
push
add
rcl
push
adc
ja
cmp
clc
push
inc
xlat
adc
jle
adc
mov
sbb
inc
push
nop
neg
add
test
aam
out
pop
dec
jmp
mov
movsb
je
mov
sahf
dec
out
shlb
sbbl
or
and
mov
push
out
cmp
dec
popa
fdiv
push
xchg
pusha
popf
or
std
inc
lret
and
xor
lcall
or
push
shlb
insl
testl
cltd
fwait
ret
mov
or
push
add
loopne
stc
and
repz
popa
imul
std
out
xchg
push
mov
mov
call
sub
xor
pop
rorb
dec
mov
adc
push
add
inc
stc
mov
mov
cwtl
scas
mov
xor
push
inc
mov
pushf
jo
push
inc
and
sar
dec
or
adc
cmpsl
inc
add
cltd
shlb
pop
mov
mov
shrb
in
js
xchg
sbb
aaa
cs
lock
leave
jb
mov
mov
adc
lds
add
mov
in
aam
add
push
sub
xchg
dec
push
pop
cmp
mov
add
and
sub
xorl
repnz
les
icebp
sbb
andb
orb
stos
push
or
jmp
dec
and
ja
mov
loopne
popa
fnstsw
pop
das
pusha
test
add
mov
addb
rcl
dec
stos
insl
bound
xchg
sbb
inc
adc
loope
xor
pop
and
add
mov
xor
nop
xchg
arpl
mov
and
sub
hlt
lods
cwtl
fsubp
or
xchg
loopne
into
sbb
mov
adc
push
and
dec
jnp,pn
sub
xchg
imul
stos
daa
nop
addb
mov
fcomps
inc
or
dec
das
lcall
inc
and
mov
rclb
xor
sub
dec
mov
mov
rcr
jmp
dec
das
movsb
mov
add
mov
or
sbb
ret
sub
lods
sub
je
sbb
sbbb
mov
add
xchg
dec
rclb
jae
test
adc
cltd
adc
add
mov
inc
test
mov
mov
rcrb
pushf
mov
in
test
cmc
dec
adc
or
cs
in
inc
mov
push
and
loopne
push
lods
flds
setne
stos
jnp
and
adc
mov
loopne
pusha
xchg
mov
and
mov
dec
adc
cltd
add
inc
jne
mov
dec
enter
rorb
xchg
jne
fmull
mov
addb
test
mov
lods
lock
add
insl
icebp
xor
add
sub
fs
pop
pop
sub
rorl
inc
mov
pop
mov
adc
aas
mov
pop
jbe
test
lret
pop
add
into
test
pop
jle
push
cmp
sub
pusha
adc
inc
pop
in
adc
clc
sti
push
adc
test
sbb
mov
dec
cltd
xor
or
adc
test
jb
rcrl
in
xchg
push
inc
shlb
arpl
loopne
das
ljmp
push
hlt
inc
mov
sbb
mov
mov
inc
push
pushf
adc
or
test
pop
adc
lret
sub
inc
popa
sbb
mov
test
mov
or
or
add
xchg
mov
sbb
push
in
mov
ja
adc
fs
pop
dec
mov
and
cs
or
or
mov
jle
inc
or
and
mov
out
pop
xchg
and
enter
jo
rorl
ljmp
sub
inc
mov
mov
loop
xor
into
xor
movsl
add
or
cmc
add
or
shlb
nop
mov
bound
jns
mov
sahf
lret
stc
cmp
mov
cwtl
pusha
pop
or
test
mov
or
or
cmc
push
xchg
push
dec
movsb
je
and
rolb
mov
inc
clc
jmp
loopne
push
dec
jl
add
in
inc
repnz
fs
sbb
inc
add
ret
movsb
leave
add
mov
loopne
sub
dec
push
add
daa
dec
in
out
jmp
das
ljmp
mov
xor
ljmp
cmp
loopne
jno
aam
adc
lcall
xor
xchg
mov
shrb
rorl
mov
add
jbe
inc
xchg
inc
in
rorb
adc
sbb
add
cltd
out
push
pop
lock
jo
inc
cmpsl
pusha
repz
dec
or
cwtl
mov
add
js
adc
lds
leave
cmp
mov
sub
roll
add
mov
ret
pop
push
cli
jne
jmp
or
cmp
sbb
adc
mov
icebp
fcoms
mov
daa
addr16
subb
xchg
scas
paddusw
jns
jle
xor
adc
cmp
hlt
stc
adc
mov
in
add
les
xchg
in
jecxz
shlb
xchg
add
mov
pop
insl
dec
mov
insb
jo
movsb
fs
and
push
add
sbb
cmp
pop
shl
jo
scas
aam
jno
inc
add
cwtl
inc
mov
in
mov
adc
jnp
and
push
inc
jbe
rclb
fsubs
call
jo
push
inc
inc
movsb
dec
jne
hlt
jbe
je
add
enter
add
in
out
or
add
pop
pop
adc
jae
cmp
xchg
cli
dec
shrb
mov
mov
movsb
mov
mov
add
dec
mov
ficoml
sarl
sub
into
add
addr16
test
pop
xorl
lahf
or
jbe
jbe
jecxz
push
add
cld
jnp
movsl
adc
daa
jb
jns
xor
and
add
in
mov
es
stc
jb
add
mov
inc
adc
testb
mov
mov
push
std
and
movsl
xchg
or
sub
xchg
pop
jo
or
jecxz
popa
and
lcall
test
int3
mov
pushl
xor
add
cmp
add
aam
add
pop
je
or
sti
sub
hlt
lcall
add
push
mov
cmpsl
int
mov
nop
mov
sarb
add
sbb
cld
add
jo
push
jns
aas
cwtl
jg
sar
inc
pop
aad
insb
cld
mov
mov
xor
jno
jge
shl
shr
adcb
jbe
add
fistps
jnp
fldcw
sbb
add
insl
add
and
jbe
and
icebp
mov
daa
and
stc
xchg
and
call
inc
cmp
mov
xorl
and
mov
out
lret
fs
inc
movsb
mov
je
cli
xor
cmpsl
fidivl
mov
pusha
add
or
cmpsb
xor
nop
mov
mov
ds
inc
add
mov
sub
mov
incl
add
pushf
es
push
pusha
cmp
xchg
xor
mov
lock
mov
adc
cs
or
or
clc
jl
add
mov
mov
mov
mov
dec
aas
pusha
add
mov
int
cmpsl
pop
clc
pusha
addr16
sahf
lret
movsb
mov
inc
xchg
dec
leave
jmp
les
std
sbb
pushf
adcb
adc
daa
jae
popa
inc
outsl
in
jle
ds
shlb
call
xor
push
inc
xor
nop
xor
das
inc
mov
adc
int3
cwtl
xor
rcrb
lret
jno
push
sarl
leave
lret
mov
sbb
or
or
push
orb
stos
shl
sub
mov
cmp
jae
cmpsb
or
cmp
mov
sub
out
add
gs
pop
cs
push
subb
fsubr
jo
xchg
stc
sub
in
mov
int
push
add
and
add
data16
pop
test
shll
sub
mov
negl
add
add
push
xchg
and
jae
iret
xor
mov
arpl
test
cmp
je
or
or
sahf
jge
popa
out
pop
movsl
dec
mov
subl
jl
test
rolb
xor
fiadds
jo
mov
pop
push
shl
out
icebp
mov
test
jne,pt
and
ret
dec
out
mov
pop
int
dec
inc
inc
jl
dec
insb
or
lahf
mov
adc
out
fcoms
add
sahf
fldenv
insl
mov
push
and
add
rcrb
mov
mov
lahf
sub
dec
sbb
xchg
aam
inc
add
int
icebp
adc
nop
loopne
rcr
shlb
xor
scas
add
cmp
cmpsb
pop
push
dec
mov
clc
lcall
sbb
lock
or
pop
sub
mov
pop
mov
inc
shlb
pop
adc
fldcw
push
adc
inc
shlb
ficoml
mov
repnz
pop
cli
add
test
lahf
pushl
and
add
mov
jle
movsl
sbb
inc
aam
std
adc
or
push
xchg
in
xchg
inc
rorb
add
add
test
leave
ljmp
add
xchg
jbe
xor
pop
faddl
jp
pusha
nop
rclb
jmp
push
lock
dec
lret
push
nop
lret
loopne
rorb
and
pusha
std
push
adc
dec
push
rcrb
mov
and
jmp
inc
push
cltd
fldcw
push
push
jle
and
dec
push
dec
test
xor
jl
add
pushf
add
nop
aam
lret
fmul
outsb
into
and
dec
mov
push
fisttps
hlt
clc
inc
sub
xorl
outsb
test
mov
fildl
sub
rcrb
inc
int3
bound
aam
daa
xchg
sub
pop
mov
loop
idivl
dec
pushf
adc
mov
push
cmp
jne
in
sub
daa
jl
roll
cmp
mov
pusha
adc
ss
push
call
pop
inc
fmuls
mov
ret
cwtl
add
call
jl
push
je
adc
and
jg
add
and
mov
out
lods
imul
push
push
movzwl
iret
mov
mov
add
scas
hlt
sub
xor
sub
rorb
push
jmp
lods
movsl
testb
lahf
int
push
jo
test
jp
jle
mov
mov
add
mov
pop
ret
mov
addb
or
test
inc
xor
or
cli
lcall
lods
xor
and
in
add
adc
mov
dec
xchg
clc
jecxz
xchg
pop
inc
sub
xor
outsb
adc
mov
call
mov
cmpsl
mov
cwtl
jmp
mov
push
fwait
add
mov
jmp
add
mov
sub
cmpl
jne
adc
adc
popa
push
cmp
stos
add
push
cmp
pop
pop
and
mov
lret
call
add
pop
push
repz
inc
lret
push
fists
xchg
cmp
xor
push
mov
or
js
out
movsl
sub
mov
scas
dec
inc
daa
adcb
push
cwtl
inc
cwtl
out
sbb
push
xchg
adc
push
sets
adc
out
add
shlb
sahf
lods
pop
xor
adc
loope
xor
lahf
sub
mov
push
std
adc
push
dec
mov
cmp
or
or
and
sarl
mov
xchg
into
pop
xor
ret
xchg
dec
or
xchg
fsubrs
push
or
dec
popf
dec
inc
xor
rcll
pop
and
clc
add
xor
mov
lea
jge
nop
clc
dec
xchg
mov
daa
pop
bound
push
and
mov
adc
and
xchg
dec
or
sbb
push
add
call
addb
lds
sbb
mov
testb
jge
xor
cwtl
adc
jno
xchg
jne
test
stc
xchg
mov
and
cmp
sbb
xor
mov
enter
jns
add
ret
enter
jmp
fcoml
mov
das
test
popa
hlt
and
mov
and
out
pop
mov
test
add
lea
push
and
inc
adc
dec
js
aas
les
adc
pusha
repnz
enter
dec
dec
xchg
push
gs
cmc
pop
push
repnz
push
mov
mov
inc
inc
push
ret
or
mov
adc
lock
rcr
imul
js
repz
inc
stos
mov
add
clc
popa
push
sbb
stc
cmc
enter
jno
or
cmpsl
mov
xor
inc
imul
ss
cmp
imul
mov
add
cwtl
out
pusha
adc
xor
pop
add
mov
in
in
adc
aas
xchg
scas
push
or
ret
pop
ret
xchg
mov
addl
lret
or
or
imul
push
cmp
adc
out
or
mov
xlat
inc
push
sbb
ret
mov
inc
push
ret
xorl
es
cmp
or
mov
out
test
mov
movsb
in
inc
stos
cmpsb
faddl
mov
ret
pop
adc
inc
add
cmpsb
and
sbbb
iret
pusha
xor
push
rorb
inc
imul
data16
push
aam
dec
or
adc
push
mov
xor
pushf
pop
lea
or
pusha
call
aam
lcall
loopne
imul
push
ljmp
push
sbb
and
wrmsr
sti
sub
rorb
out
xor
test
das
adc
lret
mov
inc
push
lods
sub
push
cmc
and
enter
loope
xor
push
rcll
ss
jle
fs
push
push
and
subb
fmull
xor
hlt
sbb
inc
notl
adc
pop
push
add
push
daa
enter
sbb
jmp
xor
jbe
sbb
pop
ret
mov
jl
popa
adc
pop
test
mov
cmpsb
push
mov
movsb
pop
sub
in
sub
enter
mov
imul
cmp
jae
mov
adc
and
jbe
adc
testl
int3
pusha
bound
adc
and
mov
xor
adc
sub
push
pusha
mov
jbe
adc
jp
hlt
aas
ljmp
dec
sub
mov
lods
cwtl
or
sbb
add
mov
and
jmp
cwtl
jg
movl
mov
fcomp
adc
neg
inc
adc
dec
jo
sbb
add
mov
test
lcall
jge
nop
or
cmc
push
test
test
mov
mov
out
xchg
aaa
cmp
sbb
es
out
adc
test
adc
mov
adc
xchg
jmp
fldenv
dec
dec
sti
lds
dec
push
lcall
sub
sbb
add
jns
mov
movsl
xchg
or
mov
xchg
das
jmp
inc
push
ret
fwait
jb
stos
dec
jae
sahf
inc
movswl
inc
mov
add
subb
pop
psrlw
cmp
add
xchg
adc
and
aaa
jns
add
add
add
int
or
or
pop
pop
add
push
dec
jecxz
loop
aas
mov
and
mov
add
cli
push
js
popa
pop
movsl
fs
shlb
sbbb
push
popa
add
loop
pop
mov
fld
mov
mov
xchg
rcl
mov
rcll
xor
add
or
inc
ret
daa
add
adc
mov
rol
mov
bound
dec
loop
dec
dec
pop
mov
mov
cmp
pop
dec
adc
mov
dec
aad
and
xor
fidivl
ss
in
fnstenv
stc
and
inc
inc
or
leave
roll
or
pop
shrl
aam
sbb
mov
out
js
cwtl
adc
xor
xor
test
enter
jns
push
xchg
push
xor
pusha
mov
call
add
ds
je
pop
pusha
and
jae
arpl
loopne
and
pop
popa
xchg
cmpsb
inc
cmp
adc
popa
dec
lods
pop
jmp
ljmp
in
xor
test
mov
aad
add
cmp
push
shrl
mov
repnz
adc
jmp
jmp
dec
cmp
mov
aaa
add
jns
or
into
push
dec
or
loope
in
sbb
aam
in
das
inc
xchg
or
lds
frstor
and
ret
and
push
adc
xchg
pop
test
pop
inc
and
inc
push
movzwl
mov
adc
mov
enter
flds
clc
jbe
xor
jecxz
xchg
cmc
sub
xor
repz
adc
addl
clc
xchg
ljmp
xor
adc
or
xor
pop
mov
sbbb
adc
dec
jge
xlat
or
xor
jecxz
add
or
mov
ss
or
push
mov
and
adc
xchg
scas
dec
push
sbb
loopne
dec
into
or
loope
or
cli
xchg
add
push
sbb
mov
mov
push
inc
add
cmp
and
add
xchg
xchg
or
adc
pop
add
test
jnp
push
mov
dec
pop
sub
pusha
inc
rorl
andb
push
pop
mov
lds
xlat
sub
sub
adc
std
mov
mov
repnz
mov
addl
ja
add
add
fimuls
idivl
lret
mov
push
scas
call
cmp
dec
sbb
push
xchg
cmp
sti
popa
pop
cmp
stos
and
mov
add
xchg
popf
call
pop
dec
add
cmpsl
sub
lret
popf
leave
clc
pop
sarb
mov
adc
xor
addr16
subl
jmp
daa
repz
pop
add
or
sbb
repnz
movsb
faddl
adc
mov
or
xchg
lahf
hlt
stc
mov
fistl
push
mov
adc
add
sbb
mov
dec
repnz
movsl
lret
arpl
nop
push
push
and
or
push
pop
gs
fs
pusha
add
add
rcr
xor
or
adc
sub
mov
jecxz
cmp
pop
xor
mov
popf
test
int3
dec
inc
push
or
and
pop
pop
add
cmpsl
pop
push
add
pop
pop
xchg
je
cli
ror
push
int
adc
popa
sub
fsubrl
dec
pop
mov
xor
out
add
jns
int
jne
stos
mov
mov
xor
pop
push
push
add
stos
cmp
jge
add
fdiv
lock
push
mov
pop
and
shrb
push
test
mov
xor
sbb
push
xchg
mov
and
inc
xchg
hlt
add
lahf
arpl
mov
sbb
inc
jg
cld
out
push
rorl
xchg
lahf
adc
das
cld
dec
cli
les
decl
and
and
dec
add
jl
mov
jo
cmp
or
xchg
popf
icebp
decl
mov
enter
mov
pop
dec
push
or
sub
add
cmp
jbe
pop
push
jb
rcrb
popf
std
or
aas
nop
fdivrs
mov
and
pop
rolb
xchg
data16
pop
sbb
sbb
scas
inc
cltd
jmp
popa
xor
jae
sti
or
and
pop
add
lcall
sub
in
test
mov
add
xor
leave
lret
orl
xchg
clc
xchg
pusha
push
das
mov
dec
sarb
mov
mov
sub
push
pop
dec
xchg
xchg
add
test
push
test
aas
lret
xor
mov
lahf
adc
add
and
inc
mov
aaa
inc
or
and
jae
pop
cmpsl
mov
push
popa
jno
cltd
push
jmp
ss
add
jb
btr
push
pusha
adc
adc
or
pop
pop
add
repz
sbb
sahf
add
jge
lods
icebp
xor
adc
jb
add
in
in
dec
clc
pop
aam
adc
mov
and
inc
push
and
sbb
stc
icebp
sub
push
bound
mov
pop
data16
fldenv
pop
fbld
pop
imul
lods
jne
and
jmp
xor
xor
mov
stos
ficompl
add
sbb
out
loope
or
mov
bnd
dec
mov
icebp
add
sahf
fs
add
ret
imul
mov
xchg
andb
jge
add
mov
add
adc
add
mov
push
or
jmp
rcll
rcl
data16
jge
add
fnstenv
andb
out
lock
mov
ds
mov
mov
pusha
mov
and
adc
add
dec
out
cmp
xor
insl
mov
mov
popa
or
inc
test
inc
das
js
sbb
mov
icebp
add
or
movsb
fildl
icebp
sub
pusha
push
and
sbb
mov
stc
or
cmc
jo
xor
rcrb
cmpsb
pop
or
dec
sub
xchg
mov
lods
xor
aaa
lds
dec
mov
add
mov
push
nop
and
xor
mov
xchg
add
jne
jl
mov
pop
arpl
jmp
mov
push
and
pop
and
sbb
js
aam
mov
or
ss
inc
mov
push
mov
dec
push
test
cmp
or
ret
push
fcmovu
testb
push
or
daa
loope
adc
enter
imul
add
jne
sbb
mov
dec
push
xchg
in
mov
sbb
es
jb
ret
jecxz
cmp
cli
add
sbb
cmp
mov
loop
pop
push
addl
cmpsl
aad
add
mov
add
jmp
out
sbbb
xor
xchg
xchg
add
adc
adc
sbb
into
fldenv
sbb
mov
xchg
and
add
mov
sub
jle
mov
cmp
jnp
fbstp
cmp
jg
test
sub
je
and
cmp
outsl
add
insl
or
jmp
pop
or
adc
push
push
sub
xor
or
mov
and
xchg
push
imul
test
or
fisubs
cmp
lock
adc
xor
rcrb
push
jno
insb
pop
gs
movsb
clc
lods
std
adc
or
movb
mov
leave
dec
sub
dec
cmovp
sub
repnz
xchg
fcompl
aam
and
fwait
enter
jmp
push
push
arpl
movaps
les
int
jge
cmpb
and
or
and
sbb
rclb
out
insb
jmp
repnz
adc
lods
fldl
loop
push
ret
stc
fs
outsb
mov
popf
in
sub
dec
mov
add
xor
cltd
outsl
or
nop
leave
int3
dec
ds
aad
add
adc
jns
lods
enter
pop
insl
pop
mov
xor
adc
filds
xlat
rcll
pop
loopne
inc
movsl
les
pusha
mov
les
out
mov
dec
sbbb
es
clc
cmc
xor
jb
push
fdivs
and
test
mov
test
inc
pop
add
push
push
cmp
push
lret
adc
aaa
fs
or
lods
sbb
jns
add
lock
inc
dec
push
mov
inc
cmpsb
jge
or
push
sbb
addb
fs
mov
push
out
subb
and
sub
pop
adc
addl
jbe
mov
adc
inc
add
nop
add
xor
mov
xchg
adc
insl
mov
mull
out
push
or
ret
fwait
data16
xchg
js
push
hlt
gs
mov
pusha
xor
andb
add
sbb
insl
jmp
dec
leave
mov
enter
lea
call
fs
adc
int
mov
xchg
sbb
stos
xorb
or
add
add
pusha
xchg
fs
xor
xchg
mov
mov
mov
shlb
add
test
cli
pusha
or
js
fstps
andb
sub
enter
std
testb
xor
mov
push
dec
enter
js
pop
cmpb
ss
sti
icebp
sbb
pop
jg
add
sub
ja
jmp
mov
dec
sub
fcmovnbe
mov
hlt
rcrb
in
inc
inc
aas
pop
or
jnp
sti
adc
andl
push
insl
xor
xor
std
sbb
xchg
push
xor
sbb
mov
add
leave
mov
inc
movsb
add
das
clc
test
daa
ds
add
sub
loop
cmp
roll
ja
push
adc
or
xor
adc
std
dec
cmpb
in
jno
sbb
andb
xchg
nop
or
mov
inc
fsts
fcmove
and
dec
test
repnz
dec
or
repnz
int3
pop
incl
xor
lret
stc
or
mov
testb
sub
cmpl
sub
shr
loope
test
or
fsubp
push
dec
inc
mov
imul
add
add
xlat
push
dec
mov
mov
xchg
jo
call
jo
push
jne
cmp
dec
popf
add
jg
cs
and
and
dec
mov
test
rolb
cmp
push
repnz
pop
inc
out
pop
xor
jle
jl
xor
push
cmp
mov
gs
orl
nop
mov
fisttps
and
jmp
mov
fildll
mov
pop
xchg
pop
jnp
jecxz
push
cmp
inc
imul
mov
adc
ja
xchg
jb
sub
add
popa
and
pop
jns
jns
sbb
add
test
cmp
and
mov
mov
loop
pop
test
mov
jo
out
xchg
clc
jl
cmp
adc
pop
cmp
xchg
xchg
lret
sub
test
sbb
mov
cld
sub
push
jo
cli
mov
push
jg
xor
sub
sarl
inc
mov
jmp
adc
in
mov
addr16
ds
mov
adc
cwtl
dec
mov
pop
mov
fistpl
lahf
or
and
and
mov
and
aaa
out
jp
sub
mov
pop
pop
push
shll
xchg
mov
mov
nop
fistps
sub
xor
mov
lods
add
cmc
ret
xchg
cmp
jmp
cmpsb
lock
pop
and
and
inc
rclb
mov
and
fmuls
outsb
testb
daa
adc
decb
dec
xchg
dec
clc
xor
in
xor
ret
mov
fisttpl
cli
les
or
subl
loop
mov
pop
xor
jl
sbbb
rcll
inc
add
push
mov
fcomps
xlat
lea
xchg
fmull
sahf
dec
dec
pop
add
inc
jmp
enter
xor
mov
xchg
mov
out
sbbb
addr16
mov
add
jo
imul
data16
insl
popa
or
push
push
insb
gs
jae
sub
arpl
je
jns
ljmp
icebp
ja
jb
adc
lahf
insb
pop
jo
mov
xor
sbb
sbb
fsubs
jae
out
push
ds
jns
jne
or
sub
xorb
push
sbb
in
jmp
imul
jo
test
insb
imul
sub
and
push
fbld
and
call
movsb
pcmpgtb
push
push
mov
push
jb
call
cmp
repz
cmp
repnz
mov
or
dec
adc
test
sub
orb
pop
or
push
nop
cmp
ss
gs
fwait
xchg
adc
sub
push
out
and
data16
dec
adc
inc
sbb
cmp
test
push
dec
les
push
les
and
dec
imul
les
and
pop
sub
dec
mov
jmp
mov
mov
into
xchg
enter
subl
clc
pop
sbb
les
push
xor
or
aam
pop
or
imul
and
dec
pop
insl
sub
mov
jns
or
nop
pop
mov
pop
or
stos
or
int
popa
into
jbe
pop
push
pop
xchg
and
dec
enter
xor
inc
or
xchg
jnp
fidivrs
mov
inc
leave
and
sub
cmp
push
and
xchg
sbb
test
sbb
add
xchg
loop
rolb
popa
ret
xor
dec
imul
xor
and
ret
jmp
arpl
pop
sbb
das
add
mov
jmp
in
jae
pusha
iret
outsl
push
mov
adc
or
in
and
test
xchg
or
nop
pop
andb
jecxz
add
enter
jne
rorl
add
xor
push
out
mov
sbb
xchg
pop
mov
cld
mov
add
in
je
sbb
sub
loopne
mov
and
ret
test
dec
or
movl
dec
lds
sub
roll
pop
mov
cmpb
inc
cmpb
mov
mov
nop
lahf
lods
mov
enter
inc
ror
stos
or
enter
dec
or
inc
in
and
push
mov
push
int3
jp
adc
shr
push
stos
cmpb
lea
push
push
push
jb
dec
fcom
roll
add
mov
sbb
xchg
call
cmp
sub
cmpsl
xchg
jne
xchg
ljmp
jb
sbb
imul
aam
or
sbb
fadds
push
mov
jmp
mov
add
fwait
mov
nop
adc
cmp
inc
gs
jb
xor
and
nop
jbe
jb
add
mov
xchg
fs
jb
add
enter
jb
ljmp
dec
sub
adc
sub
or
sub
sub
add
rol
nop
sbb
addr16
pop
push
pop
aaa
sub
mov
mov
push
mov
or
fldcw
adc
and
lock
out
add
push
push
addb
inc
mov
pop
call
pushf
orl
inc
mov
mov
ficomps
or
outsl
enter
loope
jo
mov
in
sbb
mov
xchg
add
das
mov
xor
sub
aas
cwtl
push
fcoms
jbe
sbb
fldt
push
or
jb
and
push
push
mov
stc
cmp
lahf
jns
sub
mov
cmp
adc
test
sbb
hlt
inc
add
and
sbb
xor
inc
mov
nop
ficoms
inc
fistpl
xorb
or
clc
push
or
inc
loopne
and
add
lea
inc
les
sti
lahf
push
cmp
sub
in
cmpsb
cld
and
and
jge
add
or
xchg
push
xchg
mov
inc
cmpsb
pop
pop
sbb
sahf
insl
mov
into
adc
adc
and
enter
sub
xor
ret
xchg
into
xor
lcall
sbb
mov
fstp
jle
add
pushf
ret
adc
or
in
push
jmp
jl
cmp
lret
push
adc
push
jo
stos
inc
add
pop
fsubr
adc
push
jae
fwait
shr
mov
movsb
sbb
xor
rcr
divb
sub
test
jp
inc
stos
adc
and
add
lock
adc
jle
in
cwtl
add
stos
into
mov
test
mov
jg
pop
pusha
push
add
mov
sahf
sbb
mov
lock
stc
push
add
lds
push
add
inc
sahf
dec
add
adc
mov
lods
fnstcw
filds
ss
in
cli
das
pop
sbb
scas
xchg
mov
xor
or
mov
pusha
in
sub
mov
cmp
xchg
mov
shlb
lea
movb
daa
mov
xchg
fildl
xchg
ss
in
xchg
test
lahf
xor
cmp
std
jo
movsb
xor
xchg
mov
or
int3
mov
lahf
arpl
repnz
out
call
pop
add
adc
adc
xor
xorb
xchg
ljmp
lret
stos
ret
stos
inc
and
jns
add
inc
push
xchg
mov
and
ret
stos
mov
loopne
add
repnz
test
sub
test
mov
aam
add
xor
mov
add
movsl
pop
or
fisttpl
add
sub
lret
or
add
xchg
xor
mov
push
jge
mov
rorl
mov
add
and
iret
out
mov
sahf
mov
fisttps
pusha
ljmp
cld
cmpsl
cmp
jbe
sbb
mov
sbb
arpl
sub
adc
pop
add
loope
sbb
mov
mov
cmpsb
loop
cmp
push
inc
cltd
add
shlb
sti
in
popf
dec
popa
sbb
inc
jno
jl
movsl
xchg
ljmp
int3
jb
push
sub
mov
insb
pop
inc
into
push
das
imul
jmp
cwtl
cmp
inc
mov
mov
fiadds
out
cld
in
jge
outsb
clc
xor
iret
clc
insl
dec
jecxz
mov
cmp
sti
repz
sbb
out
xor
pop
fwait
push
xorl
stos
add
cmp
push
xchg
inc
out
xor
fsubs
insb
stos
push
inc
sbb
cmp
xchg
dec
inc
adc
push
stc
mov
add
adc
lahf
mov
lock
inc
jno
lods
idivl
push
push
adcb
adc
mov
pop
dec
sar
shlb
stos
arpl
dec
pusha
pop
add
pop
add
add
and
fisttpll
mov
sbb
xor
fdivr
add
into
test
ret
pop
mov
rcl
inc
jl
pop
cltd
adc
sbb
lods
adc
clc
jmp
stos
ss
insb
pop
cmp
mov
xchg
add
add
cli
pusha
add
js
loopne
sbbb
stc
fadds
icebp
push
jbe
outsb
orb
subl
cmp
cwtl
gs
add
jle
pushf
mov
into
push
add
ret
sub
mov
add
sbb
dec
je
std
sbb
pusha
add
insl
lock
addl
movsb
scas
push
jbe
and
aas
inc
xor
inc
sar
mov
push
outsb
mov
lods
mov
pop
or
mov
pop
push
cmp
add
movb
mov
mov
add
add
das
cmpsl
cmp
xchg
sub
cs
movsb
add
push
add
xchg
mov
pop
orb
rolb
fdivrl
imul
cmp
repnz
test
xorb
xchg
arpl
add
dec
or
add
ds
hlt
repnz
loopne
test
scas
xor
xchg
mov
push
add
adc
add
and
push
fldt
inc
or
add
pop
add
movd
std
pushf
add
cwtl
aad
faddl
pop
add
lahf
shl
add
and
dec
xchg
pop
jmp
xor
xor
cli
inc
rclb
js
leave
add
jge
inc
fcoms
pop
xor
loopne
icebp
hlt
cwtl
scas
sysexit
cld
dec
mov
add
jmp
cmc
mov
xor
lds
popa
je
cmp
adc
lahf
pop
and
in
xchg
add
pop
fldl
clc
mov
xor
xor
xor
push
xchg
or
adc
pop
mov
add
mov
dec
add
pop
arpl
add
inc
in
pop
adc
insb
add
mov
div
sbb
sbb
xchg
lea
pop
xchg
push
inc
xor
push
and
dec
divb
scas
les
xor
in
adc
dec
inc
or
jmp
addr16
xchg
mov
mov
enter
push
mov
insl
push
or
jg
adc
mov
sbb
dec
sub
out
rcr
sub
xchg
adc
jecxz
inc
loopne
adc
and
or
fsubrs
ljmp
out
fwait
clc
jecxz
ds
fiadds
mov
movsb
inc
cltd
fwait
and
das
mov
sbb
inc
xchg
mov
sarl
mov
and
mov
ljmp
pop
inc
hlt
outsb
loop
xor
in
cli
ficompl
add
dec
xchg
lret
data16
mov
lahf
jp
in
fadds
or
int
dec
xchg
out
roll
adc
nopl
mov
cmp
mov
inc
mov
aam
out
pop
mov
int3
xor
jmp
nop
std
scas
add
mov
ja
je
arpl
adc
mov
test
xor
sbbb
pop
pushf
mov
mov
cmc
mov
xchg
shll
int
jne
push
loopne
mov
enter
hlt
fyl2xp1
stos
test
popa
add
and
idivl
clc
shlb
ret
int
js
push
jae
mov
clc
cmp
hlt
mov
add
sahf
call
jno
fstpl
gs
ret
enter
not
or
xlat
loopne
daa
jg
out
dec
repz
add
icebp
rolb
cld
pop
and
jge
push
add
mov
pop
mov
mov
int3
mov
or
adc
and
inc
push
arpl
test
jns
pop
outsb
mov
xlat
mov
or
add
rclb
add
lahf
fs
add
into
outsl
jge
clc
push
pop
push
push
loopne
push
movsl
rorl
xchg
ret
cmovo
mov
mov
outsl
mov
push
pop
insl
or
inc
push
push
fldl
fs
stos
dec
pop
pushf
jg
sbb
and
push
addb
test
popa
mov
out
pop
mov
fsub
mov
adc
cmp
push
ret
cmp
add
mov
push
stc
aas
scas
cmp
std
add
add
pusha
repnz
aam
fwait
jp
inc
or
and
rcrl
addb
xchg
jmp
sbb
add
pop
sahf
imul
or
jo
lods
repnz
push
xlat
mov
add
cmp
and
pop
addl
test
inc
dec
adc
ds
lock
out
sub
and
pusha
les
leave
aas
mov
cmpsl
cmpb
mov
call
pop
in
jle
ja
inc
add
pop
add
std
add
mov
call
push
ud2
mov
call
ret
cmp
push
outsb
dec
mov
and
sbb
addl
and
add
les
jl
mov
pop
push
add
jne
les
xor
ret
rolb
pop
push
popf
pop
pop
jne
inc
andb
add
push
jno
stos
push
or
inc
call
mov
mov
inc
cmp
daa
push
aas
shll
es
inc
pop
or
stos
jb
xor
fs
daa
mov
xchg
in
add
aam
insl
add
lret
ss
fiadds
add
aaa
mov
mov
mov
inc
lods
jne
ja
or
add
fs
adc
sbb
inc
jge
push
and
mov
mov
push
and
jnp
push
test
fistpll
arpl
pusha
sbbb
pop
fcompl
iret
add
or
mov
dec
add
outsl
adc
lds
add
jl
mov
cmp
jo
push
test
pop
jno
sarb
cld
xchg
add
jnp
int
leave
sub
les
sub
into
adc
jae
mov
jle
inc
add
pop
jge
dec
mov
mov
sbb
iret
mov
cmp
push
pop
ret
inc
sbb
pop
bound
pop
pop
pusha
xor
and
sub
push
add
ss
and
add
loopne
imul
xchg
mov
dec
ds
sbb
add
xor
sub
je
mov
sbb
inc
pushf
daa
scas
add
pop
popf
mov
subb
cli
insl
dec
popa
stos
add
adc
sub
test
add
in
dec
fisubl
or
jbe
mov
lret
dec
jp
mov
adc
sub
insl
sbb
repnz
pop
rolb
or
rcrb
fstpl
cltd
mov
mov
add
push
and
sbb
xor
outsb
stos
pop
clc
add
mov
scas
cmp
adc
lret
rolb
daa
dec
mov
add
xchg
sbb
js
add
adc
stos
pop
jae
cwtl
popf
inc
repz
nop
ret
push
cltd
sbb
outsl
add
pop
mov
add
incb
popa
xor
cs
in
pop
adc
and
inc
mov
lock
fcmovne
jp
add
xlat
test
add
push
sarl
gs
push
cltd
sbb
pop
sub
sbb
movsb
imul
fwait
andnps
incb
mov
pop
fs
fadd
in
clc
in
add
pop
ds
xor
mov
fcoml
xchg
mov
xchg
add
shlb
jne
add
jg
enter
arpl
mov
lock
ja
hlt
pop
enter
clc
call
dec
or
mov
pop
or
cmp
push
adc
pop
scas
lock
jg
ja
add
dec
aam
cld
add
mov
pop
push
mov
xor
fadds
int3
xor
add
dec
mov
sbb
adc
ret
addb
inc
andb
outsb
dec
xor
subl
push
fbstp
and
pusha
cmp
adc
push
sbb
lock
adc
push
jo
jge
mov
xchg
fsts
movsb
mov
sahf
xchg
mov
orb
mov
fsub
jge
or
pop
into
jno
mov
ljmp
pop
lock
jae
cmpsb
mov
mov
movsb
test
adc
loopne
push
inc
stc
jmp
adc
lock
adc
and
fucom
jecxz
add
aam
out
in
hlt
jbe
push
fiadds
lea
pop
loopne
cmp
rcll
filds
cld
out
int
jns
shrb
mov
dec
insl
add
movsl
lcall
mov
ja
add
ss
je
orb
bound
sub
add
and
outsb
pop
daa
in
pop
loopne
bnd
out
xor
das
fsubl
adc
pminsw
pusha
add
rorb
outsb
sti
shl
icebp
add
sub
sub
push
int
pop
mov
faddl
xchg
cmpsb
sub
aad
push
sbbb
add
repz
lret
mov
es
dec
add
xchg
in
or
and
loopne
inc
cmpsb
push
rorb
in
addr16
lcall
adc
pop
or
pusha
ja
jno
mov
int
loop
add
add
xchg
adc
xchg
inc
jo
adc
leave
cmc
lock
adc
pop
fildl
xchg
inc
cmp
call
inc
sar
mov
adc
int
add
xchg
sub
aad
hlt
insl
lret
enter
add
push
mov
mov
pop
das
push
imul
push
out
dec
lods
add
xor
jno
jmp
mov
fucomi
enter
or
sti
sub
roll
cmc
into
clc
jp
rorl
add
adc
subb
dec
xor
add
xor
add
scas
add
xor
sbb
fucomip
and
stos
dec
daa
lahf
lret
push
aas
call
fstl
out
por
mov
outsb
add
xchg
sbb
std
add
out
sbbb
add
insb
add
push
xchg
jnp
mov
loopne
jb
jg,pt
orl
test
sub
mov
add
push
addl
adc
add
sub
pop
les
dec
dec
mov
add
add
aad
sub
pop
iret
jae
stc
cmp
mov
outsl
adc
mov
rol
or
popf
inc
xchg
mov
aas
in
add
mov
jge
cmp
cld
xchg
add
pop
lcall
sub
jp
orb
jno
jns
add
testl
add
sbb
repz
rcrb
sub
enter
adc
inc
fisubs
add
andb
mov
call
popf
sub
jae
push
xor
stc
sbb
xchg
mov
xor
push
insb
add
shll
mov
mov
cmp
les
push
fdivr
sarb
dec
jbe
test
sbb
and
out
testb
sub
movsl
mov
add
mov
popa
les
movsb
sbb
or
bound
cli
add
xor
cmp
mov
adc
mov
popf
inc
push
loope
push
repnz
out
push
es
mov
repz
sbb
adc
add
dec
jae
mov
add
sbb
or
lds
mov
sbbl
mov
mov
dec
add
ljmp
cs
jecxz
orb
xlat
notb
sbb
sbb
mov
cs
push
arpl
add
pushf
popf
xchg
or
add
or
xor
mov
cltd
sub
xor
jmp
add
out
xchg
adc
jo
icebp
add
xor
mov
sub
push
cli
addl
sbb
cmp
add
add
mov
sbb
inc
clc
mov
test
push
popf
fwait
sub
cmc
popa
mov
stos
mov
jmp
push
jmp
sbb
fisubs
mov
xchg
xchg
test
mov
inc
arpl
scas
aad
adc
mov
cltd
loope
mov
std
sub
dec
pop
rolb
cpuid
lcall
dec
or
cmp
mov
movsl
sub
sub
loope
orb
ficoms
add
xchg
add
imul
pop
or
cld
int3
jno
pusha
sbb
or
js
pop
mov
jge
pushf
int
test
nop
add
fisttpll
fsubl
cli
movsb
xor
cmp
push
orb
adc
mov
fcmovnbe
cmp
lods
sub
ja
leave
adc
dec
add
jne
xor
add
mov
sub
rorb
mov
adc
add
push
pushf
and
cmc
shlb
lret
lock
rorl
aas
stc
pop
pop
fbstp
dec
pusha
or
xchg
push
add
add
movsb
adc
popa
sub
sub
imull
pop
aaa
xor
and
jae
xor
je
test
int
mov
add
xchg
ss
rclb
xor
mov
cmp
leave
sbb
pop
pop
shlb
sbb
push
xchg
out
jle
jns
sarb
loope
pop
iret
pop
in
in
loopne
mov
cmpsl
pop
mov
mov
add
jge
mov
pop
push
pop
add
popa
add
inc
rdmsr
addb
shrl
lret
adc
add
dec
adc
fsubp
negl
xor
sbb
push
imul
in
or
lea
push
adc
out
fmuls
inc
dec
test
test
ret
adc
and
or
nop
add
mov
add
imul
push
xchg
mov
jecxz
loopne
mov
ret
inc
test
cmc
adc
test
dec
mov
lods
or
sub
lcall
pusha
inc
jle
dec
daa
add
sub
xor
shr
cmp
push
inc
mov
inc
cmp
xlat
insb
add
test
xor
shr
int3
scas
push
ret
add
push
lahf
jp
cs
fs
inc
lock
aaa
daa
out
add
sub
push
jl,pt
jmp
jno
jne
mov
cmp
add
sub
arpl
jno,pt
jns
lahf
mov
add
pusha
pop
mov
pushw
sbb
push
mov
scas
add
sbb
pop
jns
inc
cmp
icebp
add
bound
dec
xchg
and
adc
jno
arpl
outsl
mov
push
hlt
mov
jo
dec
pusha
insb
aam
leave
pop
fnstenv
sti
mov
sbb
adcl
in
add
and
stos
adc
jle
xchg
daa
add
pop
dec
sub
or
or
or
ret
add
push
inc
or
orl
mov
cwtl
pslld
arpl
js
inc
cld
xor
rol
insl
loop
inc
addr16
push
jg
faddp
ret
xor
jle
ds
mov
in
lods
sub
js
mov
inc
idivl
xor
push
cmp
jb
push
or
add
inc
mov
push
add
cmp
out
cmp
add
mov
and
push
xor
push
lods
rolb
mov
cmpsb
jbe
and
sub
stos
testb
add
mov
cmp
add
shll
cli
jp
subb
testl
jbe
fsubrs
add
push
in
add
test
mov
mov
mov
sbb
mov
mov
add
inc
xor
push
mov
add
mov
xlat
mov
add
cwtl
jne
adc
leave
mov
sbb
into
adc
add
push
ds
movsl
and
xor
mov
pop
fdivp
or
jo
lods
add
jge
stc
xchg
inc
rcr
cmp
ds
fadds
hlt
leave
std
gs
repz
add
subl
call
fldlg2
lods
test
shlb
mov
jns
dec
stc
or
xchg
adc
adc
rcrb
jae
add
rcrb
clc
xor
cs
add
movsb
xor
jo
sbb
loopne
push
sbb
test
xchg
fldenv
sub
popa
imul
jns
mov
add
sbb
push
xchg
in
sub
in
add
ret
mov
mov
stos
adc
add
xchg
push
inc
pop
mov
xor
dec
ret
js
add
sahf
fimull
and
xchg
mov
adc
adc
mov
subb
test
movsb
dec
loop
add
dec
add
cmp
out
jnp
jbe
dec
xor
sbb
sbb
pop
add
test
insb
pusha
or
jg
push
in
add
scas
mov
movsl
or
xor
clc
fs
and
insb
add
into
inc
mov
cmp
push
xorb
cmp
jo
sub
adcb
fidivl
and
cmp
ret
push
sub
fcomi
cmp
addr16
cltd
ljmp
mov
and
or
dec
fisubrl
lret
jne
cmp
push
xchg
nop
add
push
mov
pop
aad
out
or
cwtl
addb
adcl
jne
mov
mov
inc
mov
daa
xchg
push
scas
aaa
ffree
jb
in
mov
dec
dec
fcomp
lock
pop
cmpl
je
fst
or
popa
in
loopne
flds
outsl
sbb
jne
repnz
lret
mov
aaa
rclb
jae
repnz
or
add
adc
ret
arpl
xor
iret
sub
mov
sbb
push
add
jo
push
pop
mov
jb
pop
movsb
pop
test
inc
pop
and
and
push
insl
mov
pop
rcr
bound
add
orl
pop
cmpsb
or
add
mov
add
fldcw
repnz
jp
das
xlat
xorb
nop
leave
sub
or
fisubrs
add
dec
adc
mov
rclb
pushf
sbb
xor
pop
faddl
mov
movb
sub
or
movsb
mov
jl
and
and
mov
push
mov
lods
pop
or
and
lcall
xor
adc
fisubl
dec
push
pop
and
adc
iret
and
int3
dec
nop
fldl
mov
and
and
adc
adc
mov
mov
aad
pusha
adc
loop
fs
inc
les
ret
jns
clc
sti
nop
call
push
inc
or
rclb
rorb
sub
das
add
pop
stos
add
sbb
xor
dec
mov
cld
pusha
xchg
mov
mov
xor
movsb
add
in
outsl
adc
rclb
add
and
repz
pushf
sbb
pop
add
mov
sti
lahf
add
outsl
mov
add
push
into
ret
sbb
jbe
push
cwtl
mov
rcll
cmc
mov
inc
add
mov
setno
inc
in
pusha
mov
mov
add
test
lock
add
adc
stos
add
mov
mov
add
mov
push
cmp
fnsave
sbb
inc
aad
dec
xor
add
aam
pop
or
mov
push
sub
movsl
mov
adc
dec
stc
cmp
cli
xchg
add
or
movsl
inc
out
psubb
outsb
mov
inc
test
mov
cmpsl
mov
sbb
dec
movsb
xor
dec
and
jb
xor
bswap
repz
and
clc
adc
add
xchg
shlb
dec
inc
data16
sbb
fidivs
mull
addr16
xor
mov
jecxz
pushf
add
add
mov
movsb
cmp
inc
fsts
push
add
jns
and
lock
mov
cmp
andl
dec
pushw
pop
dec
faddp
divb
push
pushl
cmp
std
inc
lods
xor
neg
add
in
imul
cmp
jle
les
out
arpl
outsl
pop
int3
out
sbb
add
sub
xor
add
mov
inc
idivb
orl
clc
and
stos
add
lea
add
shr
xchg
dec
sar
add
andl
jg
add
rcrb
inc
xchg
push
rolb
adc
stos
testb
in
xor
push
jne
add
pushf
jg
rclb
in
pop
add
sub
xor
adc
orb
add
jns
popa
nop
lods
add
and
out
lret
xor
sbb
add
mov
xor
pusha
cmp
mov
pushf
mov
cmc
das
add
cmp
and
scas
mov
push
inc
mov
stos
dec
cmpsb
psubb
cmp
or
repnz
inc
jo
inc
push
js
cmpsl
sahf
xchg
xor
adc
lret
mov
shl
add
xchg
dec
in
mov
imul
icebp
in
adc
sub
je
and
fidivl
cmovne
jecxz
cld
ds
mov
mov
clc
sub
cmp
addb
lock
add
cmpb
pop
dec
jge
add
push
mov
adcb
lcall
add
in
js
add
or
push
jne
add
sub
mov
fiaddl
and
out
add
lret
mov
add
bnd
shrl
or
jae
mov
mov
call
shll
mov
xchg
pop
mov
mov
push
dec
out
add
movsb
dec
loopne
adc
add
sub
mov
adcb
loope
es
sbb
sub
jge
push
in
sbbb
jg
and
add
fmuls
out
fwait
push
scas
and
stc
jp
out
add
pop
push
and
add
cmpsb
stos
xchg
ja
cmp
mov
xchg
dec
loope
dec
inc
jnp
xor
cmp
pop
fdivs
imul
xor
adc
pop
and
push
ficoml
and
pop
jnp
cmpsb
pop
sbb
cmp
arpl
popa
xor
cmp
push
repz
loopne
roll
ja
xor
insl
ds
or
out
iret
add
dec
push
mov
sbb
sbb
mov
cs
cld
add
adc
mov
add
xlat
or
ljmp
and
dec
iret
mov
or
fldl
xorb
xchg
jne
pop
cmp
lret
das
rorb
sub
adc
leave
xchg
sub
lret
cmc
add
push
sub
push
mov
lea
mov
arpl
add
sub
dec
lret
add
sub
push
and
les
add
in
jns
mov
push
js
clc
fsubrs
add
or
jnp
icebp
xchg
mov
mov
shlb
dec
add
js
cwtl
and
pop
in
sbb
dec
ljmp
fstl
mov
iret
add
fsubs
xchg
inc
jp
dec
mov
hlt
add
out
add
cld
sub
add
gs
mov
add
imul
hlt
test
icebp
loopne
sbb
add
mov
pop
repnz
mov
mov
cs
and
popf
test
fsts
xchg
dec
ds
xchg
xchg
loope
insb
test
shrl
sti
aam
cmc
adc
fdiv
add
pop
jo
loop
jne
adc
rclb
dec
and
and
pop
push
enter
jecxz
push
add
and
sarl
dec
push
loop
mov
repz
in
xor
andb
sahf
add
repnz
xchg
xchg
ret
loopne
inc
or
add
sbb
addb
divb
hlt
and
push
add
sub
pop
add
jb
or
lret
decb
mov
outsb
push
mov
sub
je
cmp
arpl
jae
or
das
shrl
add
test
and
sbb
mov
rorl
cli
add
mov
add
jmp
and
daa
sbb
je
ljmp
add
ss
sarb
add
jge
imul
call
lret
fbstp
cwtl
pop
sub
out
cmp
xor
add
pop
enter
pop
negb
push
ss
setae
push
dec
mov
popf
push
mov
and
or
test
lods
mov
icebp
popf
dec
cmp
fidivrl
nop
movsb
add
imul
pop
pop
cmp
and
push
and
dec
pop
sub
divl
sahf
mov
ret
add
out
cmp
aad
dec
notl
lock
jge
cmp
fdivl
add
lock
push
je
pop
cwtl
adcb
pop
xlat
xchg
lahf
push
cmp
inc
xchg
movntq
popa
xor
sbbb
xlat
aas
ljmp
mov
sbb
add
xchg
je
jo
shll
and
ret
sub
mov
sbb
jns
or
mov
add
push
cmp
sbb
js
bnd
adcl
jg
add
push
pop
mov
adc
xor
mov
rcrb
fidivs
fistpl
pusha
fbld
in
add
and
aad
pushw
mov
ss
jl
mov
clc
lock
mov
dec
cmpsl
gs
aam
bound
fiadds
push
or
cmc
add
insb
andb
add
xor
ds
sbbl
xchg
or
sub
jmp
push
dec
jo
add
pop
add
stc
test
add
out
test
jmp
loope
fmul
data16
fadds
mov
adc
scas
dec
notl
add
push
sub
push
mov
fcmovnbe
xor
push
or
add
sbb
enter
add
cli
outsl
out
xorb
cmpsl
pop
jae
add
lods
push
xor
out
clc
stc
andb
push
sbb
mov
lcall
jnp
decb
lock
inc
push
add
insl
loopne
add
xchg
xor
jb
sahf
push
je
aas
fnsave
add
xchg
jns
add
leave
inc
int3
xchg
add
push
lods
or
nop
mov
jb
push
outsl
pop
daa
jp
adc
jns
nop
dec
notl
inc
add
cwtl
mov
cmp
addb
add
rol
add
pop
bound
mov
push
faddl
jle
or
mov
stos
mov
sbb
inc
fistpl
pop
sub
sub
inc
mov
subb
add
pop
mov
cmp
xlat
adc
repz
pop
mov
adcb
test
add
lea
push
add
ds
xor
add
dec
leave
bound
subb
xchg
xchg
lret
sahf
and
add
mov
adc
outsb
aas
rdmsr
mov
sbbb
stos
popf
pop
or
mov
xchg
xchg
std
adc
xchg
or
adcb
addr16
mov
inc
jl
cmp
xchg
xchg
shr
and
xor
inc
js
push
test
add
xchg
xchg
rcrb
inc
mov
push
jle
add
ss
mov
mov
orl
loopne
pusha
fcomps
les
test
add
add
or
inc
add
test
ret
stos
outsl
cmp
mov
aas
cmp
scas
dec
fmull
pop
sbb
jno
aam
xor
pop
lcall
xsaves
movsb
push
push
pop
xchg
add
out
and
add
out
dec
enter
add
je
jl
cltd
xchg
add
sub
mov
or
imulb
xor
shrl
xchg
dec
repnz
add
xchg
in
shrl
or
faddl
cmp
inc
mov
idiv
xlat
out
daa
roll
sbb
insl
cwtl
shlb
sar
mov
pop
xlat
lret
popl
and
aaa
push
mov
ja
add
fmuls
or
cmp
dec
inc
faddl
repz
fimull
push
lcall
cmp
mov
clc
push
movsl
mov
or
inc
imul
in
push
cmp
shlb
rolb
jl
add
sbb
rolb
insl
push
adc
imul
lcall
push
inc
mov
jge
fs
inc
sbb
dec
mov
pop
incl
and
xor
mulb
adc
js
cmp
nop
mov
cmpl
cmp
mov
mov
nop
movsb
jbe
add
or
xchg
cmp
pop
add
mov
adc
out
insl
shlb
ror
adc
inc
inc
jecxz
ja
inc
aad
or
sbb
inc
sarl
xchg
stos
add
sub
inc
push
sti
pusha
in
jmp
add
dec
sarb
add
rcrb
or
add
lcall
rcrb
add
push
je
add
cmc
adc
call
lahf
ss
add
cwtl
test
push
mov
push
add
cmp
mov
or
movsl
inc
cmp
push
adc
scas
aaa
insb
push
mov
mov
sbb
and
push
sbb
outsb
and
jmp
les
mov
sti
push
dec
pushf
sbb
xchg
pop
rcrl
inc
fcom
inc
or
enter
rcrb
mov
sub
adc
je
lock
aas
mov
pushf
jno
and
out
add
inc
sbb
mov
pop
adc
push
mov
add
jle
jg
inc
inc
jge
add
stc
in
shlb
pop
mov
shrb
lock
sbb
add
xorl
arpl
loopne
movsl
sbb
xor
xorb
jne
rorb
add
xlat
shll
dec
dec
cwtl
mov
stos
inc
dec
pop
inc
sbb
je
xchg
sub
cld
stos
push
cmp
repz
jbe
xor
int3
leave
fmuls
cs
sbb
mov
ret
subb
ds
rolb
inc
mov
sbb
push
aam
icebp
scas
andb
push
cmpsb
loop
rcpps
mov
sarb
mov
lods
fadds
loopne
dec
loop
fiadds
jge
pop
imull
shrl
ja
xor
fwait
inc
insb
lret
fcompl
enter
in
xorl
xor
mov
xchg
inc
jl
xchg
add
leave
loopne
mov
outsl
push
push
into
stos
shlb
out
inc
adc
and
lock
add
mov
inc
es
orb
cli
or
insl
popf
or
imul
notb
dec
add
pusha
shr
call
jg
scas
fs
adc
add
movsb
rdpmc
into
and
mov
add
mov
jge
stos
imul
push
mov
mov
aas
pop
mov
pusha
xor
sub
enter
adc
sbb
cli
aad
cmp
mov
add
xchg
push
jns
in
pushf
inc
filds
mov
fcmovnb
mov
out
fdivs
aad
dec
or
imul
shlb
add
nop
lock
fldl
inc
jo
inc
pop
out
pusha
rcr
out
and
out
or
mov
push
data16
rol
jno
add
stos
cs
add
test
aad
pushf
cld
add
mov
orl
add
fstpt
rclb
sbbb
lahf
loopne
add
push
jp
pop
sub
mov
pop
mov
jo
in
cltd
je
aas
mov
sbb
mov
xlat
mov
dec
jae
dec
rcrb
or
pusha
mov
sub
sahf
inc
outsl
aaa
pop
xlat
add
fsubrl
dec
jns
aam
shlb
pop
outsb
pop
xor
in
mov
sub
ror
push
lcall
xchg
scas
test
out
and
xor
xchg
sub
cmp
cmp
inc
cwtl
push
in
sbb
mov
mov
inc
adcl
pop
in
inc
push
movsl
ljmp
insl
cli
dec
rcrb
pop
mov
mov
lds
xor
add
int3
and
cmp
cmpl
add
test
mov
xor
sbbb
loopne
mov
xor
stc
lods
cltd
add
sahf
xchg
test
add
cltd
int3
out
add
ds
lods
fcoms
jl
sub
inc
fidivl
rcll
ret
cmpsl
mov
hlt
add
cmpb
cmp
or
xor
fs
mov
jle
xchg
pinsrw
aam
xchg
or
add
movb
jno
fwait
inc
in
enter
jge
lods
inc
in
xlat
jae
and
push
pushf
sbbl
mov
sbb
add
je
xchg
dec
add
cmc
jmp
xor
movb
adc
je
bound
add
adc
repz
lock
and
adc
push
dec
add
outsl
mov
mov
repz
incb
jae
cmp
loopne
mov
ret
stos
subl
subb
pop
xchg
jne
push
sbbb
aam
pop
jnp
push
loopne
jbe
or
insl
fstpt
mov
rol
loope
add
scas
sti
xchg
in
repz
es
sbb
sarb
add
lahf
cmpl
lret
add
in
add
and
xor
push
xor
aaa
iret
ret
cli
stos
mov
pop
mov
push
mov
lods
add
lret
xor
dec
mov
jle
shll
push
pushf
inc
xchg
dec
test
in
mov
push
xchg
push
out
mov
int3
add
xchg
mov
sbb
faddp
mov
sbb
add
cmp
push
shlb
or
js
push
rorl
pop
inc
dec
pusha
sbb
ret
xchg
jns
movsb
pushf
jo
inc
jno
nop
gs
xlat
andb
popa
subb
dec
clc
and
sub
xchg
ds
cwtl
add
aad
clc
inc
push
or
bound
inc
jae
ljmp
or
dec
push
xchg
xchg
add
movsb
jnp
jle
jbe
add
cs
in
add
dec
and
adc
push
lea
sub
xor
pop
jno
add
jne
std
mov
mov
movsb
or
divb
loopne
insl
pop
mov
xor
inc
das
sahf
out
add
fbstp
addr16
dec
loope
test
push
data16
cli
jmp
scas
lahf
push
xor
pop
inc
mov
xor
pop
push
xor
rol
icebp
push
fs
add
pop
mov
add
cmp
mov
gs
rcll
add
adc
add
icebp
outsl
cmp
mov
dec
add
daa
jnp
add
add
xor
orl
shl
xchg
xchg
imul
jo
add
jne
push
scas
leave
xlat
clc
mov
stos
adc
add
daa
mov
test
add
ja
or
xchg
and
negb
jnp
js
sub
lahf
stos
mov
jp
push
inc
clc
cmc
leave
xor
rclb
aad
mov
push
mov
les
sub
sti
mov
jg
out
rcll
pushf
mov
mov
push
dec
mov
add
ss
dec
cld
sub
test
inc
mov
add
sbb
int
sbb
mov
inc
cmp
mov
xor
add
out
ret
jbe
mov
stc
pop
data16
aaa
push
push
or
jp
out
sbb
scas
dec
add
lret
add
xchg
mov
push
push
pop
xor
add
cmp
imul
add
cld
jbe
add
xchg
incb
cmp
mov
mov
pop
ds
mov
xor
in
hlt
or
jo
jp
loope
adc
out
js
or
enter
lret
ja
fstps
dec
add
fwait
int3
in
mov
pop
add
les
add
and
jmp
arpl
dec
mov
inc
popa
and
ret
or
xchg
loopne
pop
and
add
shrl
fnstcw
add
pop
movsl
sbb
add
cmp
sub
in
lock
jb
mov
cmpsb
das
jno
add
hlt
int
xor
data16
pusha
loopne
inc
sbb
loop
and
adc
fcmovnb
aas
mov
cltd
jb
cmp
inc
add
scas
pop
mov
jb
add
push
adc
jbe
sbb
jb
into
xchg
cwtl
cmp
or
scas
stc
movsl
pop
lds
clc
movsb
cld
cmp
mov
dec
pop
pop
jmp
mov
add
sub
push
add
cwtl
push
mov
aas
xchg
mov
cmp
insl
or
inc
add
mov
js
lret
cmpsb
test
mov
mov
add
mov
ret
in
orb
test
mov
jg
and
add
sub
aaa
xor
negb
jo,pt
lock
cmp
push
or
cmp
daa
aas
mov
popf
mov
and
adc
cmp
jns
movsb
and
xchg
mov
push
incb
add
push
lcall
add
mov
cmp
subb
mov
fs
ljmp
fadds
inc
pop
stos
mov
pop
inc
mov
pop
jno
xchg
inc
xor
and
mov
les
sbb
lcall
pop
add
cwtl
or
push
jge
cmp
insb
cmp
mov
andb
mov
dec
sti
dec
ja
incl
data16
xchg
subb
add
leave
inc
jne
nop
or
and
pop
push
or
inc
push
shll
jmp
orl
push
and
pop
fadds
mov
scas
lret
ret
rcll
jns
pop
bound
nop
pop
test
mov
push
adc
mov
cld
add
xor
jnp
adc
sub
insl
bnd
add
aas
pop
pavgb
pop
add
fwait
data16
pop
ret
pop
mov
jns
push
repnz
mov
jo
push
xchg
cltd
dec
sub
jbe
mov
jne
bound
jno
mov
add
inc
cmp
mov
aam
js
ret
push
test
shll
cmpsl
flds
shrl
jl
or
lock
xchg
mov
lret
push
dec
mov
sbb
mov
clc
add
sub
push
mov
add
repz
lahf
sbb
add
inc
mov
pusha
aam
xchg
add
adc
mov
pop
outsl
lret
or
sbb
inc
in
adc
sbb
call
and
pop
adc
lret
adc
out
xchg
mov
sarb
adc
mov
in
call
pop
dec
mov
xor
cmpsl
enter
push
sub
xchg
lods
cmp
dec
adcb
lahf
add
mov
xchg
inc
xor
repnz
inc
add
sub
movsl
or
and
add
les
mov
dec
mov
adc
aam
lcall
add
push
mov
add
or
sbb
test
sbb
pop
cmp
adc
ds
dec
jno
fadd
cmc
lahf
inc
push
shlb
cmpsb
subl
out
insl
mov
pop
pusha
pushf
das
add
and
mov
xchg
pop
or
mov
icebp
jl
add
lahf
jmp
xor
repz
nop
or
std
iret
mov
ret
mov
repz
adc
add
mov
cs
inc
add
push
jae
in
negb
mov
jnp
push
arpl
mov
loopne
pop
cltd
mov
sti
cs
xchg
add
adc
inc
dec
mov
add
imul
push
roll
sub
out
arpl
add
cwtl
xchg
mov
xchg
outsl
faddp
ljmp
rolb
pop
ret
push
pop
or
or
cmp
into
sub
test
insl
and
pusha
iret
jae
push
or
shrl
mov
insb
mov
push
inc
xor
add
shlb
int3
icebp
push
add
inc
xor
mov
cmp
popl
je
add
je
test
mov
pusha
xor
aam
jg,pt
adcb
movl
and
fistl
dec
je
pop
loope
ss
out
add
mov
add
mov
cmovb
pop
jmp
int3
pop
inc
add
sub
xchg
add
adcb
jne
add
mov
mov
add
pop
test
je
and
mov
subl
mov
loope
mov
xlat
add
aam
sub
and
mov
sbb
cmp
add
cld
ret
dec
mull
cmp
push
jmp
sub
int3
mov
mov
das
jno
outsb
add
adc
js
or
mov
fists
fxch
mov
xchg
mov
roll
pushl
mov
cmp
add
in
mov
push
sub
in
pusha
and
ficoml
mov
and
pause
mov
int3
xor
push
cmp
push
lahf
inc
xchg
add
ret
aaa
adcb
add
push
ljmp
daa
fstpt
add
cld
sub
iret
in
xchg
mov
dec
fwait
cwtl
add
jb
adc
adc
mov
or
add
cmp
sbbb
lds
sub
loope
and
out
add
lret
push
ret
testl
cmp
dec
jl
add
call
add
add
push
hlt
pop
repz
lods
push
xorb
inc
test
mov
les
pushf
mov
sbb
xor
sub
or
jns
and
aam
lods
sub
enter
aad
adc
loope
cmp
jmp
jbe
cmp
in
xchg
arpl
sub
sbb
int3
fadd
addr16
lahf
mov
rorb
and
inc
xor
out
xor
and
mov
cmp
push
cld
add
sbb
es
add
pop
ljmp
outsl
rcll
outsb
inc
fdivrs
shr
xor
dec
mov
sub
pcmpgtd
outsl
inc
bound
ret
mov
push
dec
loopne
sbb
fadd
pop
and
mov
lret
mov
push
cmp
add
xor
orl
or
dec
adc
pusha
xchg
popf
out
movsl
roll
xor
xchg
sti
inc
mov
insb
dec
push
fstl
mov
jle
lock
xor
add
into
ret
adc
add
push
leave
add
mov
jl
or
push
cmp
mov
push
sub
pop
inc
mov
push
pushl
jns
inc
add
sbb
subl
push
sub
mov
push
sub
mov
fildl
dec
imul
arpl
mov
or
in
and
arpl
clc
int3
pop
and
cwtl
push
leave
cmpsl
mov
and
mov
xchg
sbb
lcall
outsl
xchg
int
sbb
sub
mov
fadds
imul
loopne
push
xor
xchg
out
cmpsl
add
jb
push
sub
aas
inc
mov
popf
fsubs
xor
into
or
mov
push
mov
ds
xchg
add
sub
sbbl
sbb
add
add
inc
aam
test
xor
push
add
lret
xchg
sub
lods
mov
lds
dec
rorb
movsb
xlat
sub
test
ret
outsb
roll
jo
repz
lahf
sbb
stos
pop
fstps
add
jl
rolb
in
mov
pop
jae
add
out
sbb
mov
sub
jae
xchg
and
inc
mov
xor
fimull
loopne
add
sti
jecxz
dec
mov
jne
dec
ss
cltd
insl
out
mov
iret
cmp
inc
adc
loop
int3
sbb
lret
push
jne
add
insl
add
int
lock
sbb
adc
inc
insb
cmc
add
popf
add
fidivs
ljmp
sub
jae
dec
fs
mov
les
push
inc
sbb
test
test
inc
mov
add
mov
push
out
push
divl
lods
or
fisttpl
pusha
push
push
cwtl
jne
jp
outsb
nop
add
adc
cmp
repnz
push
sbb
push
and
sub
xor
cmpsb
ja
pop
sub
dec
and
cli
push
roll
add
lea
in
add
mov
and
mov
or
add
dec
stc
sub
and
adc
divb
jecxz
lea
push
mov
inc
sub
lock
sbb
lods
leave
insb
fidivrl
int3
mov
rclb
mov
inc
add
hlt
sbb
daa
inc
fwait
pop
add
leave
icebp
adc
push
rorb
xor
sbb
je
or
mov
add
dec
sahf
cmp
add
adc
cmp
fldl
shll
hlt
add
cmp
add
dec
js
add
scas
push
jno
and
jnp
xor
fsubrs
mov
cwtl
or
xchg
pusha
loopne
push
imul
cwtl
pushf
in
outsb
add
inc
js
fldcw
adc
imul
cmp
or
jmp
test
pop
pop
scas
or
lods
stc
loopne
dec
mov
jge
sub
push
addl
sub
out
xchg
add
and
idivb
test
inc
mov
add
fdivl
add
scas
sub
dec
add
or
add
sarl
adc
jne
pop
push
testb
and
hlt
sbb
ss
xadd
loopne
mov
xchg
sbb
loope
call
in
lahf
sub
xchg
push
pop
arpl
mov
xlat
pop
pop
push
pop
sub
fiaddl
or
bound
and
shr
movsl
add
jae
xchg
inc
nop
out
cmp
dec
cwtl
mov
push
pop
adc
push
fnsave
sbb
inc
enter
pop
daa
and
ret
cmpl
and
cmp
add
js
cmp
sub
fnstenv
push
push
aas
pushf
pop
cmpsb
jecxz
adc
mov
xchg
outsl
or
cltd
add
xor
inc
out
ret
nop
pushl
sbb
pop
dec
into
xor
sbb
jnp
or
shlb
jecxz
fwait
pop
out
and
add
testl
ret
test
dec
cld
fadds
bound
mov
cltd
cmp
mov
or
adc
sbb
push
mov
push
rclb
pop
mov
incb
imul
cmpsl
outsl
mov
js
push
out
loopne
add
xor
dec
pusha
cltd
pop
add
push
xchg
mov
mov
sbb
in
jmp
and
dec
loopne
push
add
mov
mov
mov
scas
sti
stos
fwait
add
pop
negb
je
sub
pop
xchg
inc
adcb
mov
or
dec
mov
and
jle
cmp
rclb
scas
adc
xor
mov
nop
pop
sbb
inc
adc
lahf
xlat
xchg
leave
push
add
stos
fdivrp
jle
mov
xlat
out
into
mov
mov
dec
xor
das
cmp
mov
jo
pop
popa
clc
xchg
out
add
bound
pop
push
subl
mov
int
mov
inc
and
jle
add
lea
lods
sub
add
mov
xor
stos
or
int3
std
sbb
lahf
xchg
aam
xchg
scas
add
mov
imul
push
imul
scas
add
pop
xlat
jo
mov
lock
into
lock
aas
leave
pop
push
mov
mov
mov
add
mov
outsl
xchg
add
xor
jg
adc
insb
out
pusha
rorl
add
lds
push
jl
cmpsl
add
mov
pusha
nop
xor
mov
daa
out
inc
andl
mov
inc
dec
stos
xchg
stos
pop
mov
imul
and
sbb
add
pop
int
add
jp
push
adc
mov
add
cmc
add
orb
jmp
rclb
cmpsl
jmp
sub
xor
inc
aad
sub
sbb
mov
fcmovu
lods
pop
pop
aam
xchg
and
or
and
enter
add
pusha
sbb
in
or
inc
push
fistpll
test
xchg
scas
xchg
inc
mov
xchg
lcall
and
sub
hlt
aad
cmp
je
add
jnp
jbe
repnz
mov
aaa
mov
int3
or
sub
test
test
sarl
aam
cmp
jmp
imul
cmp
add
fdivrl
mov
jbe
mov
cld
addl
inc
cmpsl
lock
inc
dec
mov
in
xchg
add
gs
ret
aaa
test
jns
add
outsb
dec
push
cmp
addl
stc
dec
sbb
add
cwtl
test
inc
lcall
jge
xor
popf
adc
stos
fwait
xor
xchg
rcr
lcall
popf
inc
adcb
xor
mov
push
shll
xorb
rorb
mov
adc
or
pusha
fmuls
push
mov
das
lods
mov
inc
mov
add
dec
push
pop
sahf
out
pop
dec
js
aas
push
mov
addr16
and
mov
sarb
cmp
mov
sub
adcb
mov
lret
scas
inc
mov
cmovae
bound
iret
testb
add
add
cmp
decb
add
dec
xchg
fstl
or
sub
iret
mov
mov
pop
sub
rcr
xor
bound
xchg
fstpl
xchg
nop
lcall
mov
aad
rorl
icebp
or
or
dec
add
out
dec
mov
mov
push
inc
mov
inc
loop
leave
cmp
mov
dec
and
inc
mov
adc
fstl
add
cmpsl
jl
cmp
sub
jle
fs
add
test
popf
inc
push
and
in
call
push
aam
add
out
adc
sbbl
cwtl
or
test
aad
xchg
sahf
dec
shlb
jae
mov
add
jbe
cmpsl
dec
xchg
lret
lock
stos
xor
add
sub
add
add
add
jnp
add
push
hlt
stos
add
or
orl
jo
sbb
out
lret
lods
inc
or
add
xor
adc
dec
out
push
jg
loope
dec
add
push
cwtl
mov
mov
and
pusha
xchg
jmp
shl
popf
dec
and
fcoms
imul
push
xchg
jmp
dec
push
add
mov
jle
in
pop
jno
add
mov
sub
popf
sete
jle
testl
cmpsl
imul
sub
cmp
lock
push
out
add
mov
push
cld
xchg
add
mov
mov
call
pop
and
mov
mov
add
sub
test
mov
mov
push
ljmp
out
add
jecxz
ret
fwait
mov
mov
dec
lds
roll
clc
xchg
add
cmp
xchg
cwtl
mov
xor
scas
dec
in
add
ret
pop
bnd
pop
inc
xor
add
add
ret
pusha
xchg
add
push
cmp
bound
xor
xchg
out
testb
andb
mov
sub
adc
add
into
jno
push
testb
and
push
hlt
fstpl
xchg
dec
xor
inc
and
mov
popf
jo
sahf
and
into
pop
je
es
lahf
jbe
push
rolb
mov
es
lcall
xchg
ja
repnz
filds
mov
push
enter
push
sbb
shlb
pop
cmp
pop
cmp
add
and
xchg
dec
add
mov
mov
cwtl
sbb
imul
ror
push
test
cmp
xchg
add
movsl
add
push
and
into
stos
stc
add
stos
xor
fnstsw
dec
jp
push
mov
mov
cli
decb
mov
dec
les
pop
adc
ljmp
pop
pusha
repz
xor
mov
and
dec
pop
mov
scas
adcb
sub
jno
sbb
js
cmc
sbbb
add
shlb
aad
cli
dec
add
xchg
add
or
imul
sbb
pop
call
pop
sub
dec
outsb
pop
out
inc
add
daa
int
scas
mov
add
and
sbb
fidivrs
xlat
sti
orb
scas
sub
add
call
dec
add
mov
rolb
adc
out
lea
mov
shrb
popa
lods
jo
add
js
sti
or
ljmp
repz
adc
mov
fwait
inc
pop
sub
cmc
jl
add
and
xchg
xchg
mov
ds
sarb
shrl
xor
pushf
add
pop
in
mov
ds
shrb
sbb
mov
mov
lcall
add
test
outsl
sbb
xchg
add
fsubrp
inc
and
insl
jns
aaa
fidivrl
push
je
add
dec
lcall
sbbl
add
jl
cmp
fildll
sub
add
addr16
sahf
jle
mov
add
ret
lods
push
add
adc
loop
loope
xchg
mov
sbbb
movsb
mov
xchg
cmp
push
outsl
orb
ljmp
out
rorb
jmp
enter
cmpsl
pusha
test
cltd
jge
inc
add
and
cli
add
and
dec
mov
imul
cmp
mov
dec
popa
sbb
enter
lret
daa
pusha
nop
jns
push
loope
je
mov
add
in
mov
xor
cmp
outsl
push
mov
rolb
hlt
sub
or
ror
xor
pushf
jne
jo
xor
mov
push
add
imull
or
fisttpl
and
fcoml
jg
sub
testb
push
fstl
xor
push
sub
push
push
or
jle
lds
sbb
repz
cld
mov
movl
cwtl
in
and
add
lods
pop
into
insb
pop
test
add
xchg
push
inc
pop
je
in
add
dec
mov
mov
or
xor
and
clc
and
xorb
addr16
add
mov
cmp
push
cs
add
push
inc
std
sarb
lods
or
sbb
test
jecxz
cmp
xchg
cmp
cmp
mov
aad
sahf
aas
add
mov
mov
jge
xchg
push
mov
mov
in
add
adc
ljmp
pusha
loopne
cmp
xor
inc
shlb
imulb
mov
mov
add
fs
int3
pop
ret
and
lret
xor
les
jmp
push
ss
aaa
dec
std
sub
sbb
cmp
add
push
push
cmp
cs
sub
jne
pusha
insb
fadds
shrb
xor
push
les
pop
cmp
inc
testl
add
scas
sbb
cli
daa
push
cmpsb
push
cmp
adc
push
add
cltd
add
test
sbb
or
sti
shr
pusha
shrb
inc
xor
sahf
daa
pop
xor
pop
stos
xor
rolb
idivl
push
test
push
outsl
sub
or
jg
and
repz
call
jmp
sbb
adc
add
fildl
jb
and
sub
mov
icebp
pop
lea
repz
in
call
add
add
add
and
fnsave
dec
push
rolb
xchg
js
out
out
add
repnz
mov
lds
decb
add
mov
or
cmpsb
jl
xchg
add
push
aaa
fiadds
ret
fisttpll
cmpsb
push
inc
push
sbb
add
ss
scas
adc
fdivs
inc
cmp
iret
adc
xchg
mov
jae
jmp
pop
daa
inc
cld
orl
lahf
inc
addb
addr16
mov
or
rolb
fcmovnbe
pop
xchg
or
hlt
sub
and
inc
ret
push
dec
sub
dec
push
and
sbb
jl
sbb
ja
movsl
in
sbb
add
or
in
imul
popa
lret
stc
sbb
ds
mov
into
in
cmp
cmp
sub
or
push
dec
faddl
xchg
xorb
mov
or
adc
sub
push
outsb
mov
leave
pop
add
lcall
cltd
daa
or
test
subb
addr16
or
push
add
or
ret
outsl
add
mov
add
pop
adc
lahf
lock
mov
out
daa
fadd
push
loop
pop
and
add
add
xchg
add
or
movsb
xor
xor
lret
aaa
sbb
ret
cmc
cltd
cs
movsl
fdivs
pusha
mov
push
jle,pn
jo
into
mov
data16
mov
aam
inc
xor
leave
out
sub
mov
jo
sub
mov
add
mov
push
cmp
jo
or
add
in
dec
cmp
and
or
or
sbb
sarb
add
mov
add
stos
outsb
into
aam
nop
mov
sbb
orl
inc
cli
faddp
pusha
jb
push
push
lea
cmpsb
int3
add
inc
jge
xorl
and
xor
dec
es
nop
pop
enter
push
push
push
aaa
push
pop
das
dec
inc
aas
iret
mov
add
scas
adc
mov
jle
nop
cmp
pop
pop
xor
mov
push
mov
add
mov
loope
fs
das
ss
add
add
icebp
test
cmp
ss
add
xor
cltd
insb
int
aam
sub
pushf
push
mov
push
rorb
push
stos
adc
mov
pop
mov
dec
jno
push
mov
adc
subl
movsl
xchg
xchg
popa
or
or
cld
jo
mov
push
in
cmp
dec
xor
mov
cmp
loopne
adc
mov
clc
mov
rcl
mov
int
mov
hlt
inc
mov
or
frstor
cmp
int3
pop
out
lahf
add
mov
inc
sbb
sarb
lret
mov
sti
imul
hlt
lods
xlat
std
adc
test
lret
jb
cmc
dec
loope
xor
or
add
aas
pop
les
push
cmp
add
popf
out
inc
push
std
loopne
mov
push
ret
push
daa
ficompl
xor
es
lods
add
cmp
inc
xchg
pop
add
cmp
jne
mov
test
popa
scas
push
test
add
addr16
xor
ret
adc
dec
rolb
xchg
cli
mov
shr
add
cwtl
movsl
push
cltd
in
cmp
and
lret
aas
push
andb
fidivrs
add
xchg
sar
dec
inc
and
push
add
sbb
js
test
add
cmp
xor
jnp
adcl
movsb
mov
mov
scas
sbb
addl
stos
bound
enter
repz
iret
jecxz
ljmp
inc
popl
leave
mov
and
inc
mov
lret
aas
rclb
and
mov
sarb
push
add
mov
pop
es
cli
jl
daa
pop
xchg
jle
push
std
mov
call
sub
sub
xchg
jae
pop
dec
jecxz
push
inc
call
inc
cli
bound
inc
jns
sbb
jne
add
jae
sbb
scas
out
jp
aas
dec
inc
fiadds
inc
mov
mov
dec
ret
xor
xor
mov
push
dec
add
lock
pop
js
adc
dec
andb
pop
jne
add
cmp
mov
out
das
inc
push
mov
or
sbb
rclb
add
xchg
imul
dec
lret
or
movsb
icebp
xchg
dec
rcl
mov
jnp
jp
push
ror
add
push
xchg
and
cld
out
mov
add
xor
cmp
sub
lods
add
fistl
pop
inc
sbb
xlat
xchg
cs
jecxz
push
cmp
add
jns
push
scas
jno
and
push
and
test
mov
dec
add
ret
fisttpll
fs
test
jne
cld
stc
mov
mov
lahf
mov
jge
das
add
mov
cmp
fiadds
mov
sub
aas
and
mov
add
out
add
dec
mov
push
stos
pusha
scas
lods
jo
adc
jno
pop
call
popf
or
dec
and
xor
test
insb
les
add
and
dec
adc
mov
sbb
inc
les
mov
popa
sub
xor
fwait
or
cmc
jp
imul
add
into
call
xor
push
jl
fadds
cmpsl
jae
xchg
push
sub
test
inc
fstpt
and
lret
add
mov
adc
jne
ret
out
movsl
loopne
into
mov
push
inc
or
dec
mov
add
cli
ds
cmpsb
leave
mov
in
adc
ljmp
sbb
xchg
adc
mov
inc
mov
lds
mov
pop
push
arpl
int3
mov
xchg
push
outsl
mov
mov
add
fwait
inc
test
adc
and
lock
sbb
add
inc
mov
lret
test
fnstcw
add
repz
lea
lods
pop
sub
divb
add
cltd
scas
cmp
and
mov
cli
add
lea
das
adc
loop
or
inc
xor
cmovg
repnz
add
shlb
pop
cmc
sbb
aad
mov
into
xchg
cmp
int3
add
mov
push
push
add
scas
or
pop
adc
pminub
nop
add
test
mov
fs
out
rolb
xor
loop
sahf
ja
add
dec
cmp
push
insb
rcrb
or
fadds
cltd
xchg
xor
mov
add
mov
inc
inc
leave
xor
insb
cld
rolb
add
add
sbb
les
insl
and
aam
adc
mov
enter
xor
sbb
sub
jb
inc
das
jg
add
inc
inc
jp
mov
pop
pusha
mov
mov
ror
ret
mov
clc
xor
pop
dec
sub
rol
gs
or
inc
mov
push
xor
fpatan
insl
cmp
mov
xor
je
mov
sbb
push
outsb
bound
fidivl
jne
pushf
jle
or
cmpsl
enter
out
mov
pop
fsubl
pop
and
stos
mov
fbstp
mov
adc
add
mov
loopne
fiaddl
jecxz
ss
cld
add
add
push
imul
add
inc
in
cmc
leave
insl
notb
add
std
jne
push
mov
pop
insb
add
jmp
out
orl
jnp
je
in
push
push
mov
and
mov
pop
add
inc
sarb
addr16
subl
push
jecxz
xor
pop
jns
jge
cmp
sbb
addr16
push
in
pop
clc
mov
sarl
xchg
jge
dec
pop
ret
hlt
ljmp
push
out
loopne
xor
or
inc
mov
add
shrb
fwait
es
in
inc
adc
mov
lret
hlt
aad
push
dec
es
inc
cmc
les
cwtl
imul
push
jae
sbb
xchg
lea
dec
std
push
psubd
pop
or
jp
push
stos
leave
adc
das
out
pop
pop
add
and
scas
add
xchg
xchg
jns
jp
push
or
cmp
mov
xorb
sub
jg
cld
jp
lds
roll
es
sub
inc
add
or
loope
test
cmp
sub
push
mov
sbb
scas
es
in
pop
xchg
dec
pop
add
sub
bound
inc
pop
add
jmp
es
rorb
cmpsl
push
in
inc
lahf
ss
pop
gs
popf
pop
cwtl
or
popa
sub
add
add
xlat
nop
mov
jg
stos
mov
push
popl
mov
mov
popf
xchg
leave
js
mov
inc
cmp
movsb
lock
mov
inc
es
jbe
mov
jmp
xor
mov
add
cmp
push
add
push
inc
test
je
or
lods
mov
int
fcomps
add
pusha
lcall
inc
out
pop
cmp
inc
incb
cmp
testl
out
and
sar
and
stos
adc
lcall
movsb
in
jns
and
fcoms
insl
sub
xor
cmc
stc
jecxz
push
mov
jl
in
fadds
mov
push
push
push
imul
mov
push
mov
sub
fmuls
popf
divl
add
scas
adc
nop
sub
ret
in
clc
int3
add
lret
push
mov
mov
fwait
out
add
add
mov
test
shlb
mov
dec
pop
sbb
add
cmp
inc
and
cs
sahf
mov
in
cmp
or
sbb
dec
aaa
sub
xor
lcall
add
jns
imul
inc
pusha
and
flds
push
mov
push
push
ljmp
push
popa
aam
or
pop
fistpl
add
mov
pop
jns
clc
inc
add
cmc
mov
cmp
and
loopne
nop
daa
pop
sti
xchg
push
add
movsb
call
mov
fmul
sub
negl
xor
cmp
mov
out
faddp
mov
fmull
into
js
inc
and
pop
sbb
mov
inc
scas
mov
xchg
mov
repz
add
xchg
mov
cmp
out
add
push
or
mov
mov
ret
rorb
and
pop
and
call
dec
dec
or
pusha
mov
mov
ret
les
sub
push
dec
lods
ss
adc
mov
lock
dec
sti
mov
orb
pushf
push
dec
xchg
test
cmp
jo
add
mov
aad
std
out
daa
cmpsl
fwait
pop
xor
add
ja
enter
pop
dec
dec
cld
xchg
adc
sbbb
es
mov
mov
sti
or
fmul
sbb
daa
sub
jns
add
std
cmpsb
fwait
daa
out
xchg
fs
iret
dec
test
gs
adc
and
lcall
leave
push
out
mov
int
jno
cwtl
xor
mov
lock
or
hlt
cwtl
test
in
and
loop
add
dec
xor
mov
jno
inc
lock
jp
sti
cmp
pop
std
mov
push
mov
ja
and
lods
push
or
adcb
add
cmpsl
in
insb
rorb
add
fcmovnbe
loope
cmp
adc
add
sbb
jle
jnp
popa
sbb
xchg
push
ss
cli
clc
mov
outsl
orl
add
push
mov
test
add
mov
dec
and
push
xchg
sbb
and
jns
int3
icebp
mov
loop
popa
add
jmp
jge
add
add
out
xlat
loope
mov
ficoms
pop
scas
ds
adcb
xchg
add
mov
and
cmpsb
outsb
lcall
add
mov
roll
loopne
jl
mov
push
subl
js
lock
xorl
dec
xchg
in
test
push
jg
orb
hlt
ltr
push
cmpsb
add
mov
add
sbb
sti
add
sub
cmp
xor
subb
test
adc
mov
inc
and
mov
sahf
adc
stos
push
xchg
mov
outsb
mov
pop
test
outsl
and
adc
fs
adc
xor
fistps
test
stc
jae
mov
les
loope
in
popl
sti
jg
inc
pop
scas
dec
lret
xchg
xchg
rolb
mov
pop
jbe
std
repnz
loopne
jo
cmp
mov
cmp
aam
add
roll
xor
inc
cld
pop
aam
iret
add
out
mov
inc
mov
out
imul
mov
cmp
lock
shr
xor
js
push
test
add
push
mov
jnp
mov
inc
sub
and
repz
outsb
das
into
loope
sub
stc
adc
push
es
dec
mov
or
inc
rol
in
push
dec
mov
mov
mov
outsb
out
notl
add
jb
jle
mov
push
out
inc
add
push
test
icebp
cmp
sub
push
and
sarb
lods
sbb
sbb
sbb
icebp
test
add
sub
sbb
pop
sbb
dec
inc
repnz
sbbb
jno
cmp
aaa
add
mov
stc
push
mov
adc
xchg
add
push
push
add
roll
ljmp
fisttpll
add
fs
data16
add
xchg
repz
int3
cmpsb
adc
add
push
rorl
sbb
mov
cmp
in
cmp
test
push
addr16
cmp
add
in
mov
add
xchg
mov
scas
jae
mov
add
push
mov
lods
push
cmp
fists
or
cltd
adc
lret
fldl
movsl
inc
call
adcl
pop
sbb
adc
cmp
inc
loopne
shrb
aas
mov
stos
inc
add
add
test
or
popf
pop
cmpb
jg
add
lahf
dec
in
test
fadds
movsl
mov
ret
jo
call
push
push
pop
lds
mov
incl
sub
push
scas
pop
call
add
jne
shll
test
sub
pop
loop
mov
ret
in
mov
xor
jnp
sbb
aam
clc
jae
sbb
lcall
fildl
pusha
popa
jno
add
aam
pop
rorl
or
insb
fisttps
mov
pop
fildl
or
shrb
add
xchg
push
jge
dec
adc
add
pop
adc
sub
iret
sub
mov
pusha
pop
ret
add
push
cmpsl
xorb
mov
jmp
adc
cltd
dec
add
cmp
jno
add
mov
pop
xor
daa
loop
push
push
mov
add
mov
sub
push
sahf
add
in
pop
pop
mov
adc
call
jbe
add
lods
and
roll
or
cmc
pushf
add
push
aaa
imul
es
mov
adcl
std
lods
sbb
and
sbb
outsb
mov
pop
into
fnsave
out
add
pusha
sbb
sbb
xchg
ret
sbb
in
dec
test
add
mov
dec
jg
scas
orb
pop
add
mov
rcrb
mov
cli
popf
mov
lcall
and
scas
push
aam
test
jo
add
mov
mov
dec
adc
shlb
xchg
jne
mov
es
ljmp
and
jae
sahf
clc
mov
mov
cmpl
gs
or
mov
jns
adc
cld
add
or
inc
xor
ds
bound
xchg
push
lods
pusha
cmp
rep
test
icebp
sarb
rolb
rol
mov
adc
add
in
mov
movsb
cmpsb
imul
adc
iret
jecxz
call
je
fsubrs
dec
ds
mov
rcrb
clc
add
out
mov
lds
inc
and
push
hlt
in
add
rorb
loope
xor
push
cmp
cmc
in
sub
ljmp
sub
pusha
push
cmp
pop
orb
lar
mov
jg
pop
or
cltd
or
not
test
scas
out
add
inc
mov
jns
xor
mov
sub
pop
dec
loopne
xlat
push
jle
vmread
popa
dec
push
add
and
rcll
mov
test
lret
arpl
pop
xchg
sbb
idivb
add
out
xor
movb
les
add
pop
pop
adcl
loop
inc
xchg
dec
sub
addr16
add
and
mov
repnz
lods
cmp
add
pop
dec
and
aaa
shrb
push
or
stos
inc
add
push
lods
leave
arpl
int3
push
mov
cmp
jp
dec
mov
pop
mov
out
aam
xor
mov
repnz
adc
mov
or
ffreep
call
insb
mov
lock
xor
lods
or
adc
jae
les
lahf
sub
js
in
mov
and
sarb
in
mov
adc
bound
pop
mov
mov
test
mov
add
cltd
cmp
jne
sbb
cmp
sub
add
dec
and
in
push
adc
jbe
int3
mov
fldenv
and
xchg
add
lcall
orb
daa
jg
pop
ja
and
ret
cmp
add
pop
adc
loopne
inc
adc
inc
push
mov
aas
nop
nop
stos
xchg
jp
mov
popf
pusha
mov
lret
pop
stos
pusha
dec
xor
mov
jo
xor
add
leave
sti
scas
or
pop
and
adc
sub
in
add
int3
add
jae
xor
jnp
adc
pop
push
cmpb
aad
and
mov
ja
mov
mov
add
jae
shrl
popf
lea
cmp
mov
xorb
test
adc
mov
or
cmp
add
rclb
popa
shlb
gs
les
and
xor
xor
test
add
js
in
loope
xchg
mov
fs
xchg
add
sbb
sti
mov
in
movsb
pop
push
pop
andb
adc
push
sub
cld
mov
add
roll
push
nop
or
ljmp
pop
cli
cmp
add
pop
sbb
pusha
add
sbb
arpl
jno
add
cmp
fsubp
roll
and
roll
les
or
mov
subb
push
mov
outsb
xchg
xchg
mov
adc
out
cmpsl
sahf
cmpb
cld
add
adc
aam
xor
xor
nop
pop
lret
dec
add
or
and
repz
mov
pop
sarb
dec
shl
dec
sub
push
cmp
imul
hlt
mov
push
aas
mov
sub
push
pusha
in
ret
cmp
sbb
pop
loope
out
add
jno
inc
add
lods
pop
cmp
jmp
or
fdivrl
popf
fcomi
inc
scas
xor
in
mov
mov
mov
imul
add
lret
push
pop
mov
or
out
fidivrs
stc
cmpb
jo
cmp
xchg
gs
leave
cltd
pushf
jns
fcomps
add
push
sbb
inc
xor
mov
mov
dec
test
cmpb
inc
sub
mov
xchg
loop
fwait
push
cmp
inc
pop
mov
loopne
imul
pop
xor
dec
mov
push
add
sahf
jo
pop
dec
aam
xor
das
daa
pop
iret
icebp
pushf
rolb
aad
mov
and
lods
popa
bound
mov
pop
add
jecxz
xorb
pop
add
cltd
in
subb
mov
xor
adc
jge
aam
push
and
cs
out
inc
jp
mov
test
inc
shrl
or
mov
call
inc
push
and
iret
mov
rcrb
ljmp
andb
sbb
pusha
jo
out
add
xor
add
pop
push
push
pusha
shlb
inc
add
jecxz
mov
adc
push
dec
jg
mov
jge
cmp
divl
add
aas
add
imul
push
addr16
xchg
pushf
aad
add
daa
sub
add
addr16
lret
adc
scas
cli
popa
xchg
sub
and
int3
or
popf
jns
nop
and
call
mov
jle
lock
xchg
mov
dec
lods
cltd
cmp
mov
je
adc
mov
inc
es
or
add
cltd
inc
inc
lods
insb
xchg
dec
lret
hlt
loopne
push
mov
fsub
adc
add
loopne
inc
or
add
push
ret
popa
jne
cmp
inc
loopne
out
mov
add
mov
xchg
add
mov
iret
jnp
shrb
xor
jbe
mov
xchg
sub
enter
lock
xor
or
sbb
cld
adc
mov
addr16
popf
loopne
lret
arpl
pusha
adc
popl
jnp
or
add
cwtl
scas
add
or
mov
mov
push
out
shrb
stos
inc
sbb
outsl
or
jle
adc
ja
pop
outsb
pop
movb
pushf
insl
in
push
test
test
lret
fstpl
push
rcpps
xchg
arpl
adcb
repnz
call
sbb
pop
fcmovb
add
ss
es
cvtps2pi
lock
cmp
stos
push
add
adc
add
xchg
xor
rcrl
cmp
cmp
pusha
inc
cmp
jmp
push
aas
movsl
sub
xchg
push
mov
mov
cmp
je
in
movsb
outsl
dec
pop
rcrb
cltd
cwtl
pop
ljmpw
test
andb
cmp
push
sub
insb
call
cmpsl
insb
xchg
xchg
dec
add
jo
sub
ror
cmp
mov
pop
jg
cmp
add
ret
add
pop
xchg
push
mov
inc
cli
and
cmp
mov
inc
pop
cmpsl
push
popf
sub
mov
gs
jecxz
add
test
add
jns
call
jnp
adc
mov
iret
outsb
pop
out
inc
aaa
cmp
adc
add
jmp
js
add
or
pusha
add
inc
insl
hlt
push
inc
outsb
ret
out
add
in
or
test
add
and
imul
ljmp
test
adc
adc
movsl
out
hlt
add
std
mov
mov
adc
inc
dec
scas
add
jne
stos
add
lcall
xchg
test
or
test
andl
cli
pop
push
rorb
xchg
mov
in
ljmp
sbb
mov
adc
nop
rorb
xor
adc
out
aam
insb
sbb
xchg
cmp
sbb
out
sbb
subl
xchg
and
mov
es
mov
and
rorb
stc
mov
mov
add
into
fimull
jae
mov
jp
add
lcall
mov
ret
nop
cltd
enter
xor
push
dec
add
and
add
pop
cmp
mov
inc
push
jl
imul
insb
subb
cmp
push
daa
lcall
scas
add
test
xchg
aam
push
pop
mov
sub
mov
cmp
pop
mov
outsb
andl
dec
inc
jb
push
xchg
loope
pop
mov
ret
fs
inc
aas
mov
jge
jle
xchg
xchg
mov
mov
jmp
pusha
jge
jle
pushf
clc
push
mov
jp
cmp
pop
mov
inc
leave
mov
lock
and
mov
push
outsb
loope
jbe
cmp
lret
subb
out
shrb
test
cli
sub
sub
sarl
std
int3
imul
dec
cs
jo
movsb
mov
mov
adc
insb
add
in
xor
ja
jo
jae
in
fs
icebp
jecxz
cmpsb
push
inc
sub
push
imul
pop
adc
jecxz
pop
les
ja
pop
scas
pop
add
jmp
pop
mov
jns
add
push
jno
fs
pop
add
push
ret
xchg
loopne
jmp
shrb
xchg
add
das
jne
inc
mov
add
jg
ljmp
add
lahf
jae
xor
shrb
inc
cltd
sub
jb
xor
fimull
push
pop
repnz
jbe
and
out
shrb
mov
subl
mov
outsl
xor
ja
adc
inc
add
mov
mov
pop
shll
and
or
in
add
dec
add
sub
add
cmpsb
insb
xor
call
dec
or
sbb
fldenv
imul
rcll
movsl
sahf
imul
mov
inc
lea
nop
push
or
lcall
test
add
dec
cld
aad
insl
or
inc
add
push
jae
sbb
lcall
pop
mov
add
in
xchg
hlt
cmp
push
add
int3
push
pop
in
sub
int
pop
mov
pop
mov
push
in
cmp
add
ret
mov
imul
cwtl
js
ds
aam
daa
add
pop
mov
pop
shl
shlb
jmp
pop
mov
add
mov
addb
and
imul
jnp
add
adc
mov
pop
cli
pop
nop
hlt
xorps
scas
jg
iret
bound
jg
xchg
int3
inc
sub
jmp
ja
push
cwtl
add
pop
repnz
sbb
jecxz
jnp
add
mov
fldenv
mov
mov
lods
faddl
cwtl
imul
mov
repz
dec
ss
dec
dec
add
sbb
sti
pop
outsb
rclb
repz
add
int3
aad
xor
jns
add
roll
lods
dec
push
aam
sbb
pop
jmp
test
and
sub
inc
pop
aas
stos
push
das
ret
loopne
mov
mov
lock
les
lock
fldl
nop
andb
push
push
in
loopne
add
mov
pusha
push
es
nop
mov
movsb
mov
push
pop
sub
cs
addr16
jmp
in
push
orb
movsl
pop
scas
cli
xchg
inc
out
cmp
imul
std
push
cmp
xor
pop
and
pushf
movsb
xor
insb
or
xchg
test
pop
xor
arpl
sub
imul
mov
setle
dec
push
gs
mov
jmp
adc
popl
inc
inc
add
stos
add
sub
push
dec
sbb
and
iret
adc
inc
clc
add
and
and
cmp
xor
mov
mov
add
je
int3
lock
inc
mov
in
mov
and
cmp
pushf
aam
ljmp
scas
cmp
or
and
imul
xchg
sbb
and
lock
pop
mov
add
mov
int
add
pmullw
inc
inc
mov
add
jl
in
inc
add
iret
sbb
xor
andb
mov
iret
add
fstps
xchg
add
scas
push
adc
call
int3
xor
mov
ret
std
cmpl
add
pop
cwtl
scas
inc
inc
call
pop
int
in
pop
jmp
sti
fisubl
out
jecxz
sbb
das
inc
or
cli
leave
mov
push
iret
addb
sarl
je
add
andb
xor
dec
xor
incl
or
jo
sbb
repnz
in
lea
bound
ret
push
push
push
cmp
loopne
push
push
or
sarb
pusha
nop
and
andnps
shrl
test
fmul
pushf
jnp
in
pop
and
jo
adc
cmp
push
mov
rcll
je
mov
inc
add
sbb
pop
dec
shl
fwait
jo
inc
shlb
sarb
subb
mov
pop
cmp
pop
xor
mov
popf
xchg
ret
je
mov
std
xchg
pop
cld
pushf
lock
cmp
xchg
sbb
sbb
pop
push
sub
aad
inc
aaa
imul
mov
mov
push
inc
add
jae
sub
test
andb
mov
add
test
stc
cmpsl
xchg
cmp
add
fdivp
insb
add
pop
enter
push
add
xchg
daa
add
mov
jg
jp
sub
push
xlat
cwtl
test
push
jl
std
or
mov
lds
xchg
or
pop
movsb
push
pushf
shrb
int
negb
xchg
outsl
pop
je
add
xchg
ss
mov
dec
in
clc
hlt
js
lods
and
idivb
add
jecxz
pop
sbb
andb
nop
cli
sbb
jp
leave
mov
fwait
inc
mov
mov
or
sbb
imul
aad
mov
xor
pop
mov
mov
out
cmpsb
jnp
or
lds
pop
mov
test
pop
jp
add
push
test
mov
in
add
sbb
test
dec
and
cmpsb
das
add
pop
in
mov
pop
xchg
cmp
sub
mov
jb
aad
cmp
mov
push
lods
xchg
jo
ret
in
sti
inc
pusha
loop
mov
test
pusha
jns
int3
add
or
movsl
dec
cwtl
inc
adc
add
fsubr
or
sahf
out
push
rclb
clc
rolb
xor
and
dec
aad
inc
sub
rolb
js
xchg
dec
cmc
test
jbe
lret
call
inc
call
pop
jnp
xor
insb
jbe
add
xorl
rolb
add
jnp
add
jnp
or
xchg
jno
add
push
arpl
add
xlat
mov
xchg
shrb
push
jo
jmp
roll
jp
stos
jg
xor
sti
mov
lea
adc
in
addl
cld
insl
push
add
int3
jns
loope
pop
jo
mov
add
fistl
cmp
outsl
xor
ret
mov
fld
repnz
pop
add
cs
fidivl
jge
fistpl
jle
adc
das
mov
cli
pop
push
jg
jb
or
imull
adc
cmpsl
or
xchg
mov
push
sub
mov
push
add
out
pop
scas
mov
lret
xlat
aas
dec
mov
mov
pushl
add
and
lret
inc
cltd
es
cmp
jno
dec
jmp
cmp
xchg
pop
je
aas
shll
add
lock
add
aad
das
mov
xorl
and
mov
clc
or
xchg
pop
pushf
gs
std
popf
pop
xor
call
lods
jne
jne
mov
aam
jle
sub
filds
outsb
jne
push
das
loopne
adc
imul
add
cwtl
push
inc
scas
sarl
add
jns
loopne
pop
ret
sbb
jno
popf
sub
test
sub
sbbb
mov
sbb
sbb
lret
mov
add
sar
or
adc
jo
fcoms
cmp
lret
adc
jo
ret
add
xchg
int3
je
add
in
shrb
fdivs
add
mov
cld
sbb
rcrb
jae
pop
test
je
inc
inc
out
cmp
es
sub
add
fcoms
shlb
cmp
fisttpll
xor
pop
ss
xchg
outsb
and
das
dec
adc
addb
push
inc
outsl
fmuls
pop
xor
js
adc
ret
push
and
lea
sbb
es
cmp
pop
mov
sbb
xor
es
jno
hlt
enter
sbb
or
mov
sub
cmp
add
testb
or
test
mov
aam
mov
jle
xlat
add
and
add
or
mov
add
or
push
sub
aam
add
inc
add
fidivrs
xor
rorb
aaa
or
add
rcrl
flds
adc
aas
jl
vdivps
movsl
int3
sbb
push
add
jb
bound
push
and
pop
insl
xor
dec
add
cld
push
mov
mov
cmp
push
mov
push
mov
inc
sbbl
add
xor
push
pop
dec
cmpsl
sbb
scas
mov
add
xor
sbb
xor
mov
imul
dec
inc
shll
ja
sahf
gs
sarb
cmp
lods
add
jnp
lock
dec
sub
and
adc
mov
imul
or
cmp
push
clc
and
movsb
sub
fwait
and
xchg
lock
ljmp
sub
aam
cltd
pop
adc
rcrb
jl
xchg
and
cmpsl
sahf
push
jno
and
cmp
in
inc
add
sub
cmp
stos
rcrb
push
mov
add
mov
insb
pop
test
and
jp
add
and
mov
cmp
loopne
lods
add
fcomps
push
hlt
add
fdivrp
xchg
daa
mov
jns
xlat
jo
jg
jmp
pop
pop
mov
adc
mov
mov
imul
sahf
pusha
mov
pop
add
jmp
mov
lret
sbb
fldl
jo
ljmp
fldl
test
adc
jg
push
pop
mov
enter
cmp
shlb
mov
dec
in
mov
add
mov
lret
cmp
lds
or
sarb
inc
mov
cmp
mov
add
fwait
je
outsb
pop
scas
pop
es
mull
cmp
jnp
push
test
dec
je
lods
lcall
les
test
cmc
cli
add
sub
aad
sahf
and
lods
mov
pop
hlt
or
cwtl
add
lahf
pop
aaa
int
fmull
inc
pop
clc
push
mov
add
scas
inc
push
mov
enter
mov
add
xor
ss
push
add
fdivl
xor
jne
xchg
push
outsl
ret
arpl
out
pop
mov
push
pusha
int3
hlt
pusha
or
pusha
xor
mov
pop
aam
add
mov
cmpb
jge
shl
xor
ds
xchg
repnz
nop
nop
pusha
lock
insb
sub
mov
cmpsb
mov
fsubs
pushf
aas
fmull
add
outsb
es
int
cwtl
add
dec
aaa
sub
or
or
push
mov
fstps
fisubrs
icebp
subb
push
jp
es
push
call
xchg
inc
adc
push
fadd
in
cmp
adc
stos
insb
pop
push
mov
pop
dec
subb
and
inc
mov
movsl
mov
xor
jo
push
mov
cmp
cwtl
ss
pop
sbb
or
insb
cmpb
test
jo
loop
add
bswap
fnstenv
out
add
add
cld
mov
add
add
push
mov
mov
jns
push
mov
test
and
inc
iret
push
notl
out
mov
push
dec
enter
adc
js
add
push
lahf
inc
or
test
cwtl
sub
xchg
loop
jns
into
mov
ds
push
jb
pop
pop
inc
or
jne
jno
jbe
fisubs
outsb
enter
mov
pushf
jae
add
pusha
ret
jnp
adc
cwtl
push
pop
adc
push
add
dec
out
sahf
inc
faddl
mov
cmpsl
add
add
pop
outsb
int3
or
lods
xchg
dec
hlt
lea
jb
ja
pop
dec
enter
sbbb
xchg
shl
or
lahf
cmp
xor
add
in
addb
xor
pusha
xchg
icebp
mov
ds
imul
enter
fwait
repnz
js
add
xlat
lahf
sub
inc
add
movsl
push
jge
mov
add
ljmp
xchg
xor
jmp
dec
in
push
gs
pusha
push
mov
pop
inc
ret
negl
mov
add
pop
inc
and
rorb
mov
ss
pop
add
push
adcl
stos
shr
dec
dec
daa
sbb
insb
jne
lds
lret
in
fs
pop
mov
inc
xor
or
jns
lret
arpl
pushf
or
xor
sti
push
jnp
ja
pop
addl
pop
scas
fs
mov
dec
lds
lods
push
mov
shl
mov
pop
fiadds
and
pop
add
int3
les
xor
push
scas
and
push
shl
xor
mov
ret
inc
imul
pop
or
add
dec
lock
test
cmp
out
jge
add
bswap
clc
mov
dec
call
int3
pusha
lods
add
push
loope
add
xor
push
inc
dec
sbb
inc
stc
insb
pop
sbbb
rol
movsl
fsub
dec
mov
into
mov
es
inc
add
mov
call
sub
mov
xchg
repz
mov
fcoms
scas
add
dec
jp
add
call
hlt
add
aam
push
push
popf
dec
or
enter
or
call
out
negl
pop
fcmovne
mov
jbe
lret
fbstp
aas
jns
inc
fsubs
add
mov
pop
sub
pop
dec
xchg
jecxz
lret
sti
jne
leave
push
pop
lea
and
mov
out
xchg
andb
pop
mov
jp
mov
xchg
dec
xor
jnp
sub
lret
repnz
add
mov
pop
cmp
sub
push
rol
clc
add
push
mov
test
rcl
cmp
or
xlat
add
xchg
or
scas
jg
pop
ret
shlb
out
imul
imul
inc
or
mov
call
xorb
dec
call
in
push
out
mov
inc
push
test
lock
pop
aad
sbbb
mov
gs
xor
stos
xchg
push
adc
orl
mov
sbb
mov
outsl
add
rorl
int
and
mov
cmc
add
mov
dec
leave
repz
aam
test
mov
xor
mov
test
lret
pop
shll
or
pmullw
cs
mov
mov
ffree
mov
lods
jb
add
into
aam
xor
and
scas
imul
enter
nop
ja
add
mov
adc
int
enter
cs
pop
fs
fnstcw
inc
std
dec
je
cld
adc
insb
notl
jg
and
add
sbb
mov
inc
mov
int
and
jns
lock
cmp
xor
add
push
shl
xchg
pop
add
div
aam
insl
add
inc
les
pop
dec
cmpsl
adc
lods
fwait
sti
add
in
add
sbb
sti
pop
cmp
cmpsb
dec
dec
incb
push
test
add
xchg
rclb
add
jl
push
or
add
in
xchg
sub
sub
pop
call
ja
fnstsw
inc
pusha
test
lret
mov
sub
jecxz
push
rcrl
pop
mov
xor
fs
push
push
jmp
movsb
xchg
adc
mov
sub
imul
mov
pop
or
sahf
push
es
addb
pop
inc
ds
or
dec
adc
mov
push
sub
imul
adc
xchg
into
jae
sub
enter
outsb
add
mov
jb
sub
imul
push
mov
shll
add
mov
addb
pop
mov
cmp
sub
leave
je
cli
call
jnp
xchg
jp
sbb
gs
je
add
pop
lahf
adc
add
nop
fsubrl
push
sahf
xchg
fnstcw
push
add
xchg
sbb
and
jb
add
repnz
cmp
mov
fmul
and
push
xchg
nop
pusha
add
test
rolb
mov
and
adc
fwait
sahf
add
adc
cld
mov
mov
jbe
iret
addl
dec
mov
mov
enter
add
add
cld
xor
add
imul
push
shlb
dec
fistpll
mov
pop
and
stc
hlt
pop
cmp
mov
xchg
enter
inc
cmp
inc
add
cmp
cmp
andl
pop
add
popa
mov
adc
out
add
scas
scas
add
push
jl
pop
sahf
add
push
sbb
pushf
xchg
les
mov
rorl
sub
repz
mov
or
and
jp
in
dec
add
cs
inc
pop
dec
mov
adc
push
add
xchg
adc
mov
imul
fsubl
add
cmp
xlat
add
push
fidivrl
mov
and
lock
add
lahf
add
sbb
xchg
add
push
mov
cli
test
enter
or
ret
push
add
stos
sub
push
adc
sar
xchg
daa
and
shrl
icebp
inc
cwtl
push
dec
push
or
gs
add
imul
add
dec
ror
or
imul
aad
xor
xor
sbb
mov
pop
jle
mov
pop
notl
fs
add
stos
pop
dec
movsl
push
add
push
test
inc
dec
jo
add
out
dec
push
sbb
add
jns
sbb
sub
add
mov
xor
dec
sub
jg
outsl
or
cmpsb
pop
add
enter
mov
pop
cmp
mov
or
subb
jmp
test
pusha
aad
dec
ljmp
mov
pusha
cmp
sbb
lods
and
fistpll
inc
gs
sbb
insb
out
rcl
ljmp
push
pop
rorl
fcoml
pop
push
pop
add
pop
lret
jae
das
mov
add
inc
icebp
out
jb
mov
lds
in
daa
cmc
adc
jp
mov
jbe
cmp
sbb
shll
aaa
pushf
dec
stos
add
adc
filds
jecxz
fwait
add
mov
fdivs
mov
xchg
test
mov
add
jge
pop
xor
les
cli
mov
sub
xor
clc
pop
xor
add
mov
push
jnp
xor
add
adc
pop
aas
sbb
adc
lds
adc
outsb
lock
xchg
pushf
add
cs
insl
mov
cld
pop
xchg
push
xor
mov
lahf
xchg
xor
xchg
xor
mov
pop
aaa
mov
imul
test
fmuls
jmp
xor
add
mov
popf
dec
inc
insb
in
add
mov
mov
push
cmc
inc
adc
push
inc
push
pushf
add
outsb
pop
push
pop
jnp
jl
mov
lods
dec
xchg
sbb
loope
sbb
cwtl
push
stos
mov
int
aam
mov
add
xchg
jecxz
inc
inc
fiaddl
push
jg
scas
dec
mov
mov
inc
mov
add
or
mov
stc
ljmp
push
repnz
fs
or
mov
mov
mov
testb
mov
out
mov
imul
mov
mov
jmp
cmp
mov
add
repz
push
fists
dec
neg
stos
call
daa
popa
or
ret
mov
movsl
pop
shl
enterw
iret
sbb
jmp
insl
dec
dec
mov
addb
bound
or
das
add
or
and
jmp
adc
out
ljmp
jo
call
xor
bound
cld
popf
add
xchg
in
jecxz
jl
gs
add
jbe
mov
and
call
mov
mov
jmp
cmp
pop
and
push
sti
push
in
aad
cmp
add
test
mov
outsl
ds
call
fcoms
push
adcb
lret
out
bndstx
lahf
enter
add
sbb
push
out
repz
mov
lahf
fldlg2
dec
add
inc
sub
mov
mov
adc
aam
js
test
xchg
cmp
mov
movsl
add
mov
lods
jecxz
je,pn
std
sub
stc
cmp
cmp
fadds
push
or
icebp
loope
test
sbb
lds
jno
cmp
hlt
jbe
outsl
mov
or
mov
push
fs
gs
rolb
and
mov
sbb
leave
mov
and
push
add
xchg
test
mov
push
add
jo
inc
pushf
imul
fdiv
loop
mov
or
loope
sbb
adc
xadd
stc
jle
call
jo
jge
lret
add
insl
cmp
push
faddl
push
add
imul
insb
mov
les
xchg
jo
mov
pusha
add
je
dec
inc
lret
inc
xchg
add
sbb
ds
cmp
mov
movsl
rolb
mov
push
sahf
xchg
roll
ja
bound
loopne
push
std
negb
jne
pop
dec
call
dec
cmp
pop
and
orb
adc
jae
jle
add
push
or
enter
xchg
jae
add
sbb
add
cli
pop
dec
lret
sti
mov
lods
add
cld
mov
cmp
sbb
ljmp
xrelease
mov
jno
mov
mov
arpl
add
cmc
mov
adc
flds
inc
test
es
test
and
cs
pop
lahf
sub
ja
jb
std
hlt
fwait
add
and
in
pop
repz
subb
add
push
lock
dec
mov
in
pusha
lahf
mov
add
pushf
dec
pop
lods
stos
test
sbb
jp
adc
xchg
popl
clc
test
jg
add
mov
xchg
and
sbb
lret
dec
out
cli
cmp
ret
xor
test
adc
xor
add
scas
ror
sbb
flds
add
cmc
aas
fistpll
add
int3
les
inc
cmp
sub
inc
add
cmc
jmp
movsb
lds
in
sbbb
lods
fimuls
push
inc
jno
push
pop
sub
mov
out
jl
cmpsb
out
mov
add
push
or
repnz
int
pop
imul
push
test
repz
inc
cmp
fstpl
std
pop
incb
add
dec
outsb
xchg
movsb
inc
jp
roll
hlt
push
sbb
loopne
out
lds
mov
in
les
push
pusha
daa
inc
insb
or
xchg
cmp
into
aam
data16
sbb
call
sbb
loope
xchg
adc
stos
add
aam
mov
das
cwtl
xor
ret
mov
jns
add
mov
push
pusha
les
and
ret
mov
xchg
xchg
sbb
sbb
pop
sub
xchg
int
or
sub
jne
mov
call
addr16
mov
mov
gs
xchg
iret
sbb
lret
shrb
push
or
inc
cmp
pusha
enter
adc
push
push
add
push
xchg
or
mov
sub
jmp
aas
xor
decb
fldt
xchg
and
test
cs
js
ljmp
scas
test
pop
xchg
movsb
dec
mov
mov
adc
sbb
lock
or
or
cmp
or
lcall
pop
mov
pusha
push
sub
add
les
movl
je
mov
bound
sbb
mov
jl
lret
sub
les
loope
jno
xchg
sbb
add
pop
sbbl
xchg
std
out
fwait
lock
loop
daa
add
add
jno
add
lcall
mov
sbbl
mov
dec
add
pop
jo
cmp
mov
cwtl
ret
lahf
sub
mov
pop
fists
mov
cltd
shrl
mov
jno
in
arpl
sbb
jg
and
cmp
pop
or
imul
negb
loopne
or
push
nop
aas
sbb
add
push
test
add
outsl
sahf
bound
cmp
add
je
loopne
add
in
lcall
dec
add
xor
or
add
add
mov
fadds
imull
add
lds
add
add
push
shr
jae
js
cmp
ss
jb
in
imul
inc
scas
add
sub
repnz
fwait
dec
packuswb
insl
daa
jl
rcrb
xchg
push
loop
data16
xchg
push
cmp
clc
mov
cmp
jmp
outsl
push
xor
xor
sub
xorl
mov
sarb
mov
sbb
es
adc
addr16
and
inc
add
shll
mov
mov
jl
fiaddl
or
adc
inc
test
add
push
xchg
je
shl
add
pop
sub
pop
lret
add
add
adc
enter
sbb
mov
cmp
stc
sbb
das
test
inc
pop
push
add
dec
cmp
repz
es
mov
xchg
aad
cltd
xor
pusha
dec
mov
push
jle
mov
rclb
ljmp
mov
roll
dec
mov
and
rorb
xchg
mov
rcrl
fstl
add
pabsb
hlt
xor
xor
fwait
dec
xchg
rcr
or
sub
and
iret
jp
dec
dec
add
ret
pop
add
ljmp
mov
icebp
lret
int
pop
adc
js
sbb
sub
adc
add
stos
sub
dec
js
add
loope
push
add
xchg
or
jle
sbb
add
aam
adc
hlt
les
lock
mov
scas
add
inc
sbb
mov
cmpsl
ret
pushl
lahf
cmp
sarl
rorb
cld
mov
pop
xor
cli
daa
adc
div
add
cmp
pop
cwtl
or
daa
rolb
popf
add
cmpsl
jmp
add
add
push
inc
ja
or
fistps
out
add
or
mov
loopne
add
ljmp
jle
push
mov
pop
gs
jge
mov
and
into
lret
das
xor
adc
add
xchg
jb
pop
je
mov
lods
pop
xchg
syscall
loope
rcll
bound
mov
aaa
dec
popf
push
and
call
jg
aam
push
mov
adc
add
nop
insl
dec
pop
loop
cmc
inc
aaa
xor
or
add
jb
add
xchg
mov
loopne
insl
add
adcl
push
sbb
js
daa
and
pop
in
xor
sbbb
mov
mov
dec
xor
pop
mov
aas
mov
ja
cmp
jno
adc
call
je
push
sub
pop
in
mov
pop
and
add
jb
sbb
add
jle
mov
lods
or
or
insb
jecxz
cmp
dec
les
adc
pop
popf
sub
mov
insb
hlt
and
xlat
pop
add
cmc
jo
inc
nop
mov
sbb
and
fcompp
add
add
or
lahf
negb
dec
test
faddl
andb
adc
sub
cmpb
insb
push
rclb
push
neg
mov
jns
pusha
int3
fnstsw
pop
sub
pushf
cmp
fistpl
sub
push
sub
in
adc
add
stos
push
into
xor
hlt
add
mov
cmp
test
push
sub
add
sub
mov
pop
push
xchg
daa
jg
sbb
jb
adc
pop
cmp
dec
push
add
sub
sub
ficoms
ljmp
frstor
push
sub
add
xchg
mov
pop
cmp
test
push
icebp
push
sbb
add
jb
mov
add
outsl
add
insb
fadds
fimuls
push
jg
add
int
pop
pop
lods
mov
js
sub
stos
aas
add
out
mov
xchg
add
sub
shll
mov
mov
lods
pop
push
sub
pop
jl
inc
adcb
sub
andl
or
cmpsb
xor
sbb
push
daa
gs
mov
mov
lods
mov
mov
ret
push
cli
addb
mov
lock
cmp
outsl
push
lcall
xchg
xor
pop
out
adc
pop
pushf
rcrb
and
bound
ja
jg
adcb
repz
cld
dec
ja
pusha
sbb
dec
out
sbb
and
in
sbb
add
jne
lcall
rcll
pusha
cld
push
daa
add
movsb
dec
dec
test
fisubrs
fcoms
mov
inc
hlt
and
xchg
mov
push
push
mov
jnp
inc
xchg
add
jns
out
xchg
cmpsl
cli
fmull
fmull
inc
dec
mov
add
pop
out
pop
mov
roll
xchg
mov
adc
cwtl
pop
mov
mov
fldl
js
leave
roll
mov
adc
stos
or
daa
inc
xor
add
pop
repnz
int
jns
mov
cwtl
test
dec
fidivs
loope
xor
movsl
xor
clc
popa
cmp
test
sbb
mov
gs
jnp
sub
add
mov
mov
cmp
mov
aad
sti
das
add
int
push
shll
mov
add
in
cmp
rolb
jae
sub
cmp
bswap
in
inc
mov
stc
dec
add
imul
lock
mov
pop
sub
jg
cltd
add
lret
mov
das
push
add
arpl
sub
or
mov
push
jbe
cmpsb
add
out
mov
push
add
cmp
pop
jecxz
and
pop
mov
mov
push
inc
dec
out
cmp
add
fstpl
add
xchg
push
into
jle
mulb
pop
cmp
int
mov
leave
or
jo
or
dec
inc
dec
sbb
inc
add
stos
dec
das
outsl
cmpsb
out
add
or
and
int3
scas
xor
popa
jl
dec
dec
push
bound
inc
enter
add
in
mov
mov
xor
pop
lods
dec
mov
cmp
inc
mov
or
cwtl
adc
mov
push
and
sbb
lock
je
mov
mov
std
push
add
les
mov
daa
addl
in
inc
mov
sub
addb
mov
push
cwtl
dec
mov
add
pop
cmpsl
repnz
dec
sub
cs
dec
lea
outsb
out
xchg
cmpsb
adc
sub
movq
lea
inc
insb
sbb
adcl
mov
xor
movsl
inc
sbb
add
pop
loop
ss
or
sub
stos
dec
xchg
shl
mov
push
mov
add
das
xchg
not
adc
jge
jg
push
jne
sahf
sub
in
push
or
lret
add
inc
imul
stos
sub
push
xor
aam
test
and
pop
inc
inc
sbbb
push
add
pop
adc
dec
fcomps
cmp
loopne
testb
add
and
inc
add
test
add
pop
cmc
add
push
lea
jne
and
fnstcw
add
mov
and
je
mov
xchg
mov
add
insl
cmpsl
or
jns
add
adc
rolb
addb
enter
lds
icebp
test
in
aam
xor
jne
in
sbb
xchg
rorl
ja
sub
cmp
cmp
dec
cld
cmc
test
or
jle
lods
and
aad
sbb
rclb
dec
xchg
setg
push
mov
jno
push
or
in
jecxz
lods
lods
push
jge
push
pusha
addr16
shlb
add
movsb
xchg
rorl
add
dec
dec
mov
and
add
add
adcb
push
jnp
test
sub
dec
or
mov
mov
stos
inc
add
mov
add
jmp
jge
xor
or
push
mov
rclb
cwtl
testb
vpsubw
add
push
mov
lea
flds
mov
movsl
lret
cmp
and
inc
sub
add
gs
insb
add
push
fnstcw
push
pop
xlat
adc
mov
xor
loop
test
sbb
into
or
fwait
adc
xchg
fbstp
adc
jg
jnp
add
cmp
pop
jnp
sbb
cmp
pop
inc
sub
popf
add
lods
imul
lock
add
cltd
ja
cmp
cli
dec
jge
add
inc
push
push
shl
jns
mov
lds
data16
inc
jp
mov
pusha
outsl
mov
pop
sbb
sahf
out
pop
add
adc
outsb
shll
jno
div
mov
stos
jle
pop
mov
lahf
add
shl
je
mov
ret
fsubrs
cltd
add
test
lahf
pop
xorb
sbb
adc
add
xor
mov
sub
clc
cmp
dec
dec
ds
andl
push
add
jbe
push
jmp
xor
enter
add
mov
adc
pop
jg
or
loop
pop
sub
nop
mov
adcl
pusha
loop
mov
scas
mov
inc
imul
add
shll
add
push
push
cs
sbb
or
addr16
mov
mov
fistpl
xor
mov
or
pop
cmp
test
and
adcl
sub
push
xchg
mov
add
fisubl
xchg
iret
mov
add
mov
add
leave
jl
add
pop
aam
pop
pop
cli
dec
enter
test
insb
test
packuswb
or
fsubrs
sti
sbb
out
movsl
and
aam
arpl
sbb
xchg
jl
add
and
in
xchg
jae
add
cwtl
mov
lret
pop
nop
and
rcll
cmpsb
push
dec
out
mov
cmp
add
lock
mov
ret
es
adcl
sub
or
orb
add
and
cld
cmp
jge
pop
add
sbb
int
mov
mov
sub
mov
xchg
cmp
mov
sbb
ljmp
sub
mov
push
insl
and
pop
sarb
or
std
inc
add
add
jecxz
ss
jbe
inc
push
popl
repnz
and
or
stc
adc
inc
mov
jne
addr16
and
rorl
mov
in
je
lds
inc
call
add
pop
pop
inc
inc
out
add
loopne
sbb
fidivs
inc
lahf
fucom
outsl
dec
adc
pop
add
es
add
fwait
jmp
mov
test
loopne
mov
movsb
icebp
inc
mov
xor
cmp
add
add
cli
test
xor
fildll
pop
dec
dec
or
addb
push
sahf
xlat
add
mov
xor
or
test
cwtl
and
dec
jle
in
or
pop
mov
rcr
add
mov
mov
xchg
repz
push
cmp
xchg
mov
dec
add
test
dec
or
adc
test
inc
paddd
pop
push
push
jp
cli
movsl
jb
mov
and
xchg
cwtl
add
repnz
mov
cmp
int
std
cmp
add
push
jmp
cmp
test
repz
mov
mov
add
seto
push
fidivl
les
adc
inc
and
inc
add
add
dec
iret
faddl
lods
aad
rorl
jle
or
add
dec
aad
je
add
dec
dec
js
add
or
mov
or
mov
add
sbb
pop
dec
mov
ret
or
mov
enter
sti
inc
jne
aad
popa
cwtl
cwtl
sub
sbb
andb
xor
mov
lock
sahf
xchg
adc
inc
jl
lock
int3
test
cmp
pop
and
add
pop
adc
sbb
or
add
cwtl
push
add
pop
loope
jmp
rcrb
rorb
ss
cmp
inc
sub
js
push
fsubrs
rclb
mov
and
mov
ja
mov
adc
cmp
jo
pop
and
mov
push
int
inc
mov
hlt
jno
mov
sahf
and
sbb
sar
jns
push
adc
scas
add
aaa
push
repnz
add
adc
test
inc
ja
call
sbb
xchg
add
loop
push
xchg
push
xor
sahf
call
cmp
addl
mov
addb
lret
sub
or
hlt
test
aas
sarl
mov
or
in
add
fsubl
or
or
lock
int
mov
inc
rorl
dec
and
mov
cmp
or
movl
adc
rclb
in
mov
nop
lods
ljmp
cmp
das
lahf
push
arpl
mov
xchg
fs
fstpt
hlt
lea
int3
inc
mov
pop
dec
out
cmp
mov
add
xchg
data16
outsl
out
faddp
add
inc
jno
xor
mov
cmp
stos
adc
nop
add
jl
int3
cmpsl
cmp
les
push
cmp
loope
jne
and
aad
add
or
push
or
les
adc
imul
nop
shlb
les
xor
fxch
dec
dec
xor
mov
xchg
iret
adc
imul
int3
movsb
adc
test
add
cmc
mov
pop
inc
and
loopne
add
pusha
mov
cltd
pop
adc
fsts
in
ret
or
cmpsb
add
jle
aaa
jo
pop
pop
xchg
mov
sbb
les
sub
test
sbb
fdivs
add
leave
lods
xchg
shll
pop
mov
sbb
testb
mov
mov
pop
add
popa
stc
addl
daa
jne
pusha
push
call
jmp
pop
pop
or
add
scas
adc
cltd
hlt
add
jg
pusha
popa
pop
nop
lea
jg
add
mov
xbegin
add
cld
cmp
xchg
outsl
inc
jge
mov
add
popfw
push
cmc
adcb
add
fcmovbe
sub
and
mov
xchg
fcoml
sbb
pop
jb
or
loopne
xor
mov
jecxz
push
ljmp
dec
adc
mov
sub
lods
ss
lods
pushf
and
and
pop
mov
fs
add
in
cmp
aas
outsl
pop
repz
pop
jne,pn
insl
fiaddl
xor
inc
and
pop
icebp
xchg
jno
sbb
testb
rcl
inc
add
or
add
loope
push
cmp
push
mov
popa
clc
inc
test
mov
push
push
mov
pop
and
add
fucomi
xchg
rdtsc
pusha
fdivs
or
fdivr
ja
mov
add
jmp
or
data16
test
add
or
ffree
xchg
add
fiaddl
cmpsl
and
xchg
cs
xchg
out
hlt
je
or
lret
jne
adc
nop
add
xor
ret
jmp
mov
cmp
xor
stos
sbb
pop
bound
cmpb
sub
inc
inc
cli
mov
into
adc
testb
lock
inc
mov
jmp
push
add
pop
out
js
or
lret
cmp
or
adc
clc
int
add
imul
repz
add
jmp
or
sbb
dec
popf
or
sti
jo
add
out
dec
cld
popa
dec
jl
add
mov
or
cltd
sbb
mov
pop
hlt
add
mov
cmp
mov
pop
imul
test
jmp
jge
fiaddl
mov
fistps
scas
jne
leave
add
addr16
sub
mov
xchg
sahf
ljmp
ljmp
xchg
jp
push
cmp
jmp
std
adc
es
aas
hlt
inc
mov
call
add
xorb
dec
mov
dec
movsl
cmpl
jge
into
add
xchg
xchg
outsb
insl
mov
dec
push
aas
add
jl
pop
mov
shr
daa
add
mov
sub
xchg
sbb
add
xor
mov
je
int
inc
or
shlb
jo
mov
cmpsb
jne
dec
out
sbb
dec
xor
popf
cmp
cmp
pop
xor
adc
add
ja
dec
add
sahf
mov
cmp
iret
test
or
pusha
jae
daa
cmp
pop
mov
cmpb
jl
xor
call
fistpll
add
call
add
pop
mov
nop
sbb
add
pop
pop
mov
adc
mov
pushl
add
add
pop
push
movzwl
pop
add
push
mov
popf
das
adc
and
rolb
in
add
add
add
sbb
test
jmp
aaa
adc
ja
sub
pusha
mov
add
das
dec
ss
clc
pop
sub
and
pop
adc
jmp
lcall
mov
out
push
or
dec
enter
add
or
scas
mov
lcall
shrb
and
adc
lea
sub
or
add
pop
ud2
leave
bound
subl
faddl
pop
push
jbe
ret
add
pusha
jecxz
sub
dec
lock
add
xchg
and
sub
add
push
jb
sbb
mov
lea
and
inc
xor
mov
add
xor
or
and
mov
lods
ret
adc
lock
sub
aaa
and
or
jle
adc
inc
sbb
xor
adc
jg
adc
lret
sub
jge
sub
mov
and
mov
xchg
sbb
push
cwtl
orb
mov
inc
push
mov
cld
jecxz
std
fstpt
mov
and
add
cmpsl
lcall
add
mov
stos
xor
cmp
push
cmp
fst
pusha
sub
cmpsb
jl
or
andb
clc
stos
sub
inc
cmp
add
mov
xchg
add
repz
add
adc
push
jb
insl
cld
aam
das
hlt
fbstp
je
out
or
ss
aam
add
sub
fwait
xchg
enter
arpl
stos
dec
mov
cmpb
stos
push
mov
daa
pusha
mov
adc
adc
aaa
or
or
inc
cltd
jle
cmpsb
jae
cmp
enter
jle
sub
inc
jae
dec
cmp
jg
adc
cmc
add
mov
mov
stc
aam
hlt
testl
dec
sub
rorb
les
cs
jo
or
arpl
hlt
sbb
adc
test
pop
adc
nop
daa
xor
mov
lahf
pop
les
mov
inc
aam
shrb
mov
les
test
jp
xchg
xchg
pop
push
pop
xchg
mov
sbb
mov
mov
and
xchg
cwtl
dec
inc
add
shrb
mov
push
jne
or
enter
and
test
dec
mov
xchg
dec
cmp
dec
add
out
inc
jle
das
fstps
and
ja
loope
adc
dec
mov
push
push
stos
cmc
in
test
sbb
daa
pop
stos
pop
or
inc
enter
test
jg
sbb
dec
cmp
push
sub
xorb
aam
cli
add
aaa
adc
dec
arpl
out
mov
add
aam
rorl
cmpsl
mov
xchg
addb
pop
mov
or
sbb
or
es
imul
leave
js
popf
dec
adc
mov
pop
in
or
filds
testl
sbb
cmpsb
std
ret
mov
xchg
das
and
leave
mov
add
test
adc
or
les
sbb
xor
clc
jle
dec
push
sub
add
mov
sub
jg
cmc
addl
adc
jo
sbb
xchg
aas
inc
xchg
stc
adc
std
or
jp
sub
mov
mov
lret
je
fsubs
ret
shr
cmp
add
loop
pop
pop
push
and
sub
cmp
jl
ret
add
jg
sub
out
mov
clc
pop
sbb
sub
pusha
repnz
xchg
ds
adc
push
cwtl
bound
mov
repz
xlat
aam
int3
add
aaa
jle
nop
jnp
pushf
push
sub
int3
je
and
es
xchg
xor
aam
or
jg
and
jl
scas
xchg
addr16
mov
adc
mov
shl
mov
fs
cmp
jb
mov
jl
scas
or
pop
inc
popa
movsb
dec
pushaw
std
aam
and
xlat
adc
pop
cmc
aam
sub
jmp
sbbb
add
mov
and
xor
loopne
mov
pusha
add
mov
add
pusha
jge
and
add
and
inc
dec
cmp
add
sub
push
cmp
add
cs
pusha
test
pop
pusha
push
mov
push
sbb
jl
in
addr16
call
sub
cmc
cld
repnz
jmp
jne
jl
push
sub
jae
out
push
push
sub
cmpsb
dec
addb
sub
sub
xchg
je
adc
neg
leave
adc
add
jecxz
enter
nop
inc
adc
xor
cmp
outsl
bound
and
bound
inc
lods
mov
repnz
mov
xor
add
andl
mov
call
fsubs
and
and
push
lods
xchg
ja
pop
aad
jge
enter
pushf
push
scas
test
sub
int3
add
icebp
clc
cmpsb
and
adc
jns
sbb
je
lds
cmpsb
add
cmp
jb
or
jo
in
mov
mov
cmp
mov
loopne
subb
dec
loope
dec
add
and
popa
jne
jle
adc
hlt
daa
xor
dec
sub
cmp
add
xchg
in
sub
and
je
mov
pushf
mov
popf
push
adc
or
aas
or
pushf
out
mov
mov
int
mov
lret
rorb
adc
fsubs
mov
add
sub
insl
sbb
inc
push
dec
test
adc
cmp
int3
jp
cmp
cmp
xchg
scas
sub
jl
fs
mov
data16
icebp
cmp
cmp
loopne
add
jno
xchg
sub
pop
or
xor
js
movsb
xor
dec
adc
lock
dec
in
sub
pusha
cmp
arpl
and
and
and
jp
cmp
push
jns
shld
pop
sbb
add
inc
push
or
pop
shrb
lods
sub
fcoms
std
and
push
pop
inc
fcoml
ucomiss
add
jge
pop
mov
push
aas
mov
push
cmpsl
inc
into
adc
push
stos
jmp
xor
sub
mov
je
push
and
pop
jecxz
inc
mov
xchg
mov
sub
mov
lea
bound
pusha
or
test
mov
mov
shrl
push
jecxz
push
outsb
or
rorb
cmp
sub
popa
dec
mov
int3
push
pushf
dec
subb
cs
pop
xor
popa
adc
scas
mov
pop
cltd
int3
dec
xchg
xor
loopne
dec
inc
inc
ret
inc
js
jno
add
lds
repz
sub
jae
cmp
mov
hlt
xchg
incb
or
mov
lret
push
push
add
mov
les
push
add
or
or
cmpsb
enter
mov
movl
sub
xchg
mov
inc
mov
jns
dec
clc
cwtl
xchg
push
add
outsb
ljmp
popa
push
imul
mov
push
ds
cmp
and
sbb
rolb
loopne
and
jb
or
xorb
add
fs
sbb
in
jl
sub
imul
sbb
ret
mov
sbb
push
adc
jno
flds
lret
pushf
adc
sbb
and
data16
bnd
or
mov
or
les
pop
xor
std
icebp
and
and
inc
mov
add
movsl
inc
ret
inc
pop
push
sub
jae
cmp
je
leave
mov
repz
pop
js
mov
out
sub
or
push
add
stos
xchg
add
xor
in
loope
addb
mov
stos
mov
cmp
add
movl
mov
xchg
sub
push
sbb
xorb
inc
std
enter
cmp
xor
cmp
inc
mov
cmpsb
dec
cmp
dec
enter
loopne
and
cmp
nop
jmp
lods
in
in
sub
loopne
inc
outsb
add
sub
jns
pop
and
cmp
sub
pusha
or
jb
mov
add
cli
inc
pushf
sbb
dec
mov
mov
xchg
pop
pop
sti
push
sbb
repz
int3
loopne
pop
dec
and
outsl
out
popa
mov
or
icebp
sbb
xchg
in
in
add
pop
cltd
aam
xor
aam
movsl
jecxz
shlb
jg
or
ret
js
iret
adc
xor
mov
jg
test
sub
pop
push
pop
push
and
cmp
and
cs
jp
data16
ljmp
add
dec
shl
pop
fisubrl
mov
out
cmp
add
mov
add
lods
inc
loopne
sub
mov
pop
das
lods
or
adc
pusha
int3
mov
aas
ja
xchg
arpl
pusha
jbe
inc
jns
popf
jo
push
sub
cmp
test
mov
out
lock
enter
rol
jno
sub
cmp
push
inc
mov
add
pop
pop
gs
cmp
xor
adc
sbb
sti
outsb
lods
push
mov
pop
jb
xlat
mov
push
ds
cmp
mov
loope
setp
call
movsl
nop
jno
mov
mov
lods
mov
add
les
xchg
mov
pop
add
push
sub
das
cmpsl
loopne
aas
pusha
sbb
lcall
clc
mov
mov
xchg
pop
mov
negb
das
or
icebp
add
bound
daa
pusha
jmp
or
inc
test
clc
dec
lock
scas
push
std
add
movsl
in
pop
adc
jbe
adc
sub
in
popa
push
icebp
enter
adc
push
shrl
adc
popa
add
jns
scas
mov
mov
mov
pop
jle
out
cli
nop
or
sub
clc
aam
hlt
mov
add
jb
sbb
push
sbb
mov
pop
pop
dec
das
shlb
addr16
cmp
rcrb
hlt
sahf
imulb
push
xchg
loopne
inc
imul
xor
je
xchg
and
add
aam
lods
xchg
hlt
or
adc
jo
xor
ljmp
inc
sub
dec
ss
mov
test
pusha
and
xor
or
jbe
adc
dec
adc
ret
push
js
or
and
lret
call
rclb
cld
cmp
jo
pop
mov
inc
push
das
test
add
outsl
imul
push
jnp
cmp
and
add
rcll
sbb
and
mov
sub
mov
adc
loopne
push
jo
mov
mov
xchg
pushf
adc
daa
add
mov
stos
les
add
mov
push
sub
xor
mov
adcl
stos
xchg
in
andb
cwtl
jae
mov
imul
mov
xor
push
and
pop
fwait
jl
inc
add
sarb
lret
xchg
pop
push
jl
dec
pushf
pmaxub
sub
lods
cmc
idivl
adc
fisubl
jge
mov
cmp
adc
repz
lods
pop
add
cmc
gs
sub
pop
pop
lods
sarb
leave
mov
mov
rclb
ret
aas
repz
push
adc
les
push
jl
pop
pop
lods
add
jmp
jo
mov
adc
xchg
imul
cltd
cmpsb
cli
fs
jp
das
cld
ljmp
push
andb
mov
mov
cmp
and
push
cmp
xchg
out
lcall
lods
bound
sub
cmpsb
pop
xchg
push
add
jbe
test
cmpsl
cmp
push
sahf
jae
int3
cmp
add
jno
cmp
jl
jg
dec
sub
mov
shll
inc
cmp
test
sbb
lds
push
dec
mov
pop
in
adc
or
fs
jle
xchg
xor
pop
imul
popf
add
mov
sub
adc
dec
je
xchg
add
jno
sti
std
sub
mov
enter
pusha
adc
xorb
jge
add
stos
lea
shr
addb
or
and
out
cld
pusha
dec
repz
adc
out
adc
std
int3
inc
mov
xchg
add
mov
sub
lock
jp
js
test
and
and
aam
mov
cmp
adc
sub
xchg
dec
mov
inc
clc
xchg
mov
sub
andb
mov
inc
jle
sbb
xchg
push
inc
mov
in
dec
or
in
cwtl
repnz
pop
cmp
flds
lcall
nop
mov
sub
arpl
and
sbb
cwtl
sub
inc
daa
jle
adc
pop
jno
ret
push
xchg
dec
jns
dec
or
fadd
hlt
add
inc
bound
push
lods
je
sbb
and
daa
cld
bound
js
xchg
mov
inc
orl
lds
mov
push
push
push
in
jl
lret
mov
sub
push
push
adc
jl
jae
lock
sub
push
repnz
mov
add
lock
enter
add
mov
sub
hlt
adcl
loopne
jno
es
inc
sub
or
mov
sahf
loop,pn
sub
imul
daa
cmc
or
pusha
mov
push
pop
ret
addb
clc
cmpsb
pushf
aad
and
mov
repz
add
subb
pop
movsb
xchg
data16
leave
jno
or
ficoml
mov
inc
ds
lret
jecxz
roll
test
and
mov
sub
shrb
adcb
adc
xorb
or
pop
hlt
cmpsb
lcall
jle
in
inc
hlt
add
test
and
mov
sbb
pushf
lahf
icebp
test
mov
sub
rorl
mov
adc
sbb
inc
outsl
fiaddl
hlt
mov
pop
sbb
mov
or
das
das
call
int3
cmp
cmpl
loopne
cmpsl
add
enter
sbb
pop
cltd
movsb
pushw
mov
loopne
mov
add
fcmovne
lahf
test
bound
shll
lret
push
lods
rcr
call
clc
sub
adc
adc
inc
cmp
xor
jnp
lock
add
pop
arpl
mov
add
pop
pop
xorl
jns
or
cmp
or
adc
nop
les
lods
lret
lds
dec
cwtl
nop
shrb
pop
sub
int
or
xor
add
mov
cwtl
clc
clc
imul
fisubs
mov
cli
sahf
stos
bound
fmul
sub
xchg
icebp
rolb
mov
dec
push
add
popaw
sarb
and
pusha
cmp
inc
loop
sub
add
push
or
jnp
fs
sub
add
push
jo
ss
adc
in
sarl
and
pop
sbb
fs
cmp
inc
push
pop
or
or
mov
enter
mov
pushf
add
ds
pusha
xchg
or
std
inc
loopne
subl
pushf
mov
in
in
loopne
ficomps
xor
les
ret
cmpsb
gs
or
cmp
and
jge
xor
mov
enter
dec
push
pop
nop
dec
adc
mov
mov
bound
or
cltd
mov
call
lds
mov
jne
push
es
jge
cli
test
cmp
and
bound
sub
popf
mov
pextrw
sarb
in
scas
in
add
in
jns
xchg
mov
fcmovnb
subl
add
jae
scas
aaa
pop
and
rcrl
rclb
and
dec
jnp
pusha
enter
imul
xchg
ljmp
jle
data16
add
pop
ffree
or
pusha
loopne
imul
addb
cwtl
call
mov
lock
insb
jae
pusha
lcall
loopne
pop
add
pop
jecxz
xorb
notl
repz
stos
adc
lret
sub
sub
loop
fdiv
or
dec
add
adc
testl
std
inc
sbb
xor
hlt
add
addr16
mov
sbb
xor
leave
jae
sub
jno
inc
sub
pop
or
pop
sub
mov
and
xchg
orb
imul
cmp
jbe
les
sbb
mov
in
add
ret
add
lahf
subb
sub
xchg
insb
inc
andl
add
mov
mov
cwtl
fiadds
add
xchg
xor
mov
xchg
cmp
push
xor
add
add
mov
jo
and
xchg
adc
cmpb
setbe
fdivr
push
adc
stc
in
in
pusha
lcall
cld
inc
fldl
fdivrl
mov
add
jns
and
push
pop
dec
add
adc
out
sub
lcall
adcl
addr16
ds
dec
fs
sbb
lods
xchg
cmp
add
test
pop
adc
pop
mov
cmp
add
add
or
stos
sbb
push
lcall
push
shll
sub
shrb
mov
jge
adc
sub
sub
and
xchg
pop
pop
ret
mov
je
cmc
and
push
and
add
adc
and
lock
repnz
adc
cmp
and
push
flds
mov
sbb
hlt
mov
sbb
xorb
push
add
test
adc
jo
enter
sbb
sbb
mulb
xlat
je
je
add
stos
test
adc
enter
sbb
pop
dec
sbb
pop
js
add
scas
daa
mov
sub
stc
add
or
xor
call
popa
pop
lods
std
enter
adc
or
push
pop
bound
stos
mov
jae
fstps
and
pop
adc
loopne
cli
mov
pusha
dec
sbb
in
xchg
add
sub
xchg
push
xor
mov
pop
jbe
pop
test
lret
lcall
cmp
sbb
sub
dec
mov
call
outsb
jle
jns
xor
cs
mov
repnz
add
inc
daa
lock
ret
orb
gs
xchg
dec
add
cmpb
add
add
sbb
icebp
mov
cmp
int
add
je
pop
fisttpl
test
roll
pop
xlat
lock
imul
les
xor
data16
add
adc
addr16
repz
xchg
dec
adc
cmc
dec
lods
adc
in
cld
sub
add
pop
dec
push
cmc
inc
idivb
or
fwait
xchg
andb
sbb
je
jle
leave
repnz
icebp
sub
addr16
cmpsl
sbb
data16
fbld
subb
sbb
ljmp
pusha
iret
cmp
add
mov
sbb
sub
in
aaa
lcall
xchg
add
lock
addl
pop
loope
add
mov
dec
gs
inc
xor
push
ja
pusha
dec
dec
lods
push
je
or
dec
mov
icebp
sub
test
inc
cmc
std
add
cmp
cltd
push
xchg
aam
xchg
adc
lret
jle
mov
ficompl
push
adc
add
mov
faddl
fldcw
add
jae
jl
lock
sub
push
les
jp
adc
adc
and
or
aam
cld
cmp
test
jae
in
pop
xor
xchg
je
fistps
add
dec
sbb
rolb
add
cs
or
dec
or
push
repnz
lock
fstpl
inc
das
popa
jmp
nop
mov
ret
shl
push
iret
test
test
call
mov
clc
sbb
and
push
add
mov
add
popf
jne
mov
lcall
push
sete
add
mov
jnp
jb
loopne
cs
inc
out
sbb
imul
cmpsb
mov
dec
xchg
xchg
or
push
mov
pop
ljmp
sub
mov
add
cmc
in
in
sbb
lds
seto
and
pusha
xor
insb
nop
add
pop
out
fidivrl
sbb
shlb
dec
movsb
and
add
mov
pop
test
sub
push
add
adc
jbe
ljmp
and
mov
jmp
jae
dec
pushf
lret
leave
push
push
jnp
iret
test
cmp
mov
add
adc
int3
or
inc
cmc
loopne
jo
or
adc
sub
xor
mov
push
bound
cmp
xchg
cmpsl
movsl
loop
add
xchg
mov
jno
aam
adc
push
in
or
js
or
xor
mov
loop
fwait
test
and
and
xchg
inc
repnz
sub
loop
outsb
mov
xor
push
stos
insl
fstl
sub
test
push
test
or
out
add
inc
cmc
and
sub
gs
push
push
in
popa
dec
std
outsl
pop
push
in
xor
rcr
mov
xor
add
mov
xchg
test
pop
inc
add
andl
sti
adc
pushf
inc
jne
sub
mov
aas
enter
test
or
in
sub
sbb
inc
cwtl
cmovp
or
inc
or
adc
negb
xorl
xor
mov
hlt
shlb
mov
aas
subb
and
push
mov
mov
adc
in
xchg
or
and
in
push
cs
stc
pop
xchg
adc
fs
sub
lea
jmp
lods
and
dec
imulb
dec
sub
testl
in
das
jnp
add
out
mov
in
out
add
sbb
inc
fcom
xor
dec
invd
adc
dec
aad
push
push
iret
fidivrl
pop
bound
or
outsb
push
and
ret
rcrb
mov
xchg
sbb
jne
adc
mov
or
int3
dec
and
cwtl
mov
jno
enter
out
out
dec
add
test
loopne
mov
push
mulb
mov
mov
roll
fimull
aas
jmp
leave
ljmp
push
int3
jo
in
fidivrl
xchg
and
loope
push
dec
xor
adc
or
test
xchg
xchg
mov
mov
mov
ljmp
cmpb
cmp
enter
mov
mov
addb
pop
sbb
jns
xor
in
rcll
das
dec
adc
dec
out
pop
aaa
enter
loopne
jno
adc
add
aam
xor
lods
loopne
add
add
out
add
lsl
push
fcmovbe
and
add
inc
or
pop
and
push
aad
data16
xor
aaa
movsl
mov
xor
mov
sub
in
or
push
xor
dec
pushf
fs
jge
jecxz
inc
cmpsl
fistpll
out
fmul
add
stc
jb
or
data16
adc
cwtl
sbb
mov
jne
xor
sub
xchg
jb
jne
or
test
cmpsl
xorb
push
sub
les
call
bound
and
cwtl
adc
cmp
loopne
mov
xor
cltd
mov
adc
xchg
repz
xchg
add
popf
in
jo
jae
sub
stc
rol
out
jne
adc
lods
add
mov
add
push
or
dec
in
pushf
arpl
mov
inc
aaa
call
push
rcrb
inc
loopne
jno
and
dec
orl
mov
sub
xchg
or
xor
mov
cmpsb
bound
mov
dec
pop
loop
ficompl
inc
jb
inc
pop
xchg
mov
rcrl
push
push
in
adc
subl
ret
inc
or
cmp
icebp
push
jmp
pop
in
pop
cmovs
addr16
loop
decb
inc
fs
add
aaa
leave
notb
adc
ss
mov
sarb
dec
dec
sub
xchg
cmp
clc
aam
sbb
mov
rcrl
jb
add
sbb
xor
cmp
out
add
push
sbb
dec
test
sub
lock
push
add
dec
pushf
xchg
nop
xor
and
insb
mov
push
in
int
call
test
mov
cmp
cmp
add
sbbb
shlb
jo
movsl
xorb
mov
push
mov
call
dec
add
repnz
sbb
int
ficoml
jno
andl
shlb
outsl
mov
pop
cli
dec
jae
mov
sbbb
adc
out
add
or
nop
call
je
cmp
push
and
push
add
dec
std
js
in
out
in
mov
hlt
aad
testl
cwtl
add
dec
inc
das
cwtl
and
out
xchg
add
nop
sub
inc
xor
aaa
adc
mov
call
out
fcom
iret
popa
xchg
xchg
and
je
add
jnp
jo
inc
xchg
dec
sarb
stos
inc
bound
lds
pop
into
or
adc
fsubr
pushf
sub
mov
fwait
add
ds
scas
lock
push
out
and
iret
cld
and
sub
sbb
sub
add
in
jns
int3
or
shl
mov
inc
add
or
mov
mov
testl
mov
add
and
mov
jne
cwtl
shlb
stos
adc
addb
fisubl
inc
dec
outsl
pop
js
sbb
shlb
punpckhwd
xchg
sti
adc
xor
ljmp
dec
cmp
mov
imul
add
arpl
fwait
sub
mov
adc
in
adc
lock
loope
sbb
cwtl
hlt
xor
add
push
mov
inc
xor
fsubs
inc
cld
xor
mov
ficoms
out
sbb
sarl
mov
push
xchg
jns
dec
subl
loopne
lods
push
je
aam
dec
adcb
xor
pop
dec
sub
mov
xchg
enter
dec
loopne
sub
jbe
sbbb
pop
fisubs
idiv
mov
nop
cmp
mov
repnz
push
mov
je
mov
decb
hlt
or
sar
pusha
jne
adc
sbb
mov
sti
jne
sbbl
xor
add
pop
adc
mov
xchg
nop
js
cs
pop
jg
sub
push
push
mov
dec
das
in
and
xor
cli
or
push
inc
addl
jb
push
add
xchg
mov
out
mov
dec
das
cmp
cmp
sbb
addr16
inc
and
loop
jl
mov
test
inc
in
loope,pn
lock
adc
rclb
push
movsb
les
shlb
hlt
add
pop
sbb
cwtl
fcompl
faddl
jae
mov
sub
jo
mov
inc
jg
cltd
in
adc
addb
fisubrl
inc
inc
xchg
sbbb
and
fcoml
xchg
and
cmp
xor
sbb
lods
lret
push
and
pop
test
div
xor
icebp
push
std
cmp
lret
cli
iret
fdivs
jl
or
push
data16
inc
daa
adc
sti
sub
cmp
inc
add
push
out
scas
pop
sbb
and
jmp
aam
test
addb
movsl
xor
sub
jge
add
rclb
ret
and
and
adc
stc
sub
adc
cs
lock
jl
sbb
add
mov
lock
orl
add
fdivrs
ds
push
das
add
inc
xchg
mov
or
hlt
rcr
xchg
xor
xchg
addl
lea
push
movsb
and
rolb
pop
mov
ds
mov
or
loopne
sbbb
inc
push
scas
cmc
add
xchg
mov
aam
sbb
ss
mov
mov
xchg
dec
cmp
mov
lods
in
adc
adc
push
lock
fmuls
adc
inc
movsb
adc
orl
sbb
lahf
add
sub
adc
push
add
imull
cmpsb
push
les
pop
pop
lods
sbb
add
jge
sbb
sub
in
jb
aas
rolb
cmp
add
imul
dec
movsl
je
out
mov
sarb
xchg
dec
mov
push
std
add
rcrb
orb
sbb
ffreep
mov
push
in
dec
rolb
inc
test
push
cmp
or
repz
out
mov
add
mov
xor
cltd
jl
inc
sbb
cmp
inc
add
cmp
leave
xor
insl
adc
jns
outsl
inc
cmp
in
jnp
daa
push
adc
cmp
popf
mov
and
add
testb
or
loope
dec
mov
add
icebp
jmp
cld
xlat
add
dec
nop
mov
aaa
mov
xor
sahf
test
mov
fidivrl
sbb
call
mov
test
fnsave
negb
mov
and
stos
hlt
dec
add
mov
inc
jmp
loopne
cli
lock
add
sub
xchg
cmpsb
aam
and
fiadds
or
testb
pop
pushf
jle
xor
xor
sub
lock
push
add
test
inc
repz
or
or
gs
les
inc
add
add
adcb
and
push
inc
xlat
xchg
push
mov
enter
xchg
mov
and
sub
cs
and
pusha
xchg
lock
pop
add
jb
adc
fldenv
sbb
xor
adc
pop
mov
sub
pop
dec
xchg
inc
addb
in
jo
loope
lock
adc
daa
push
mov
in
adc
out
xchg
dec
mov
xor
mov
int3
cmp
add
shr
repnz
add
sbb
xor
jg
adc
xchg
xchg
lock
and
sbb
adc
sbb
push
push
mov
cmp
jmp
cmp
and
sub
and
js
test
adc
cwtl
mov
shlb
add
lods
mov
sub
cwtl
xor
aaa
push
hlt
jle
fwait
dec
shlb
mov
push
loopne
inc
dec
or
test
scas
jns
jbe
in
mov
lock
push
dec
bound
and
mov
cmp
and
aas
scas
dec
xchg
dec
lods
in
lock
clc
psrad
jns
mov
inc
pop
xor
fdecstp
cmpxchg
mov
mov
adc
pop
adc
mov
pop
ja
leave
cmp
inc
dec
adc
and
xchg
daa
mov
int
icebp
mov
push
mov
inc
out
pusha
or
dec
adc
xor
scas
sub
mov
add
ss
mov
int3
add
mov
mov
xchg
rorb
jno
add
and
cmc
jl
dec
jo
call
lods
sub
lea
fcoml
jecxz
adc
push
jbe
nop
adcb
mov
je
enter
and
jno
xor
add
or
mov
xor
cmpsl
and
sbb
mov
inc
mov
out
and
dec
push
add
mov
bound
xorb
test
out
mov
mov
bound
dec
and
or
in
mov
jecxz
iret
hlt
xor
mov
mov
inc
dec
or
cld
and
sub
xorb
dec
popf
stos
add
sub
in
add
mov
aam
out
addr16
call
xor
cld
dec
imull
pop
jno
mov
xchg
shlb
and
filds
add
mov
pop
push
out
outsb
in
sbb
jnp
cmp
mov
pop
aam
push
xchg
xchg
decl
ret
adc
ljmp
fadds
mov
cmp
pop
or
or
out
daa
pop
and
int
cmp
and
movsb
in
int3
fmuls
fisubrl
aas
loopne
mov
pushf
xchg
addr16
dec
addr16
mov
sub
into
sbbb
es
pop
js
mov
adc
fidivrl
fsubp
nop
in
mov
bound
in
xchg
in
xchg
push
xor
lahf
out
push
inc
mov
xor
add
fs
inc
insb
and
dec
mov
ror
or
sbb
orb
mov
enter
adc
inc
out
inc
movsl
daa
pop
cmp
mov
je
dec
fdiv
inc
mov
add
in
enter
mov
lods
shrl
cld
jo
popf
jg
mov
fistpll
add
and
add
sahf
adc
lahf
js
mov
adc
mov
repnz
jo
mov
sub
testb
and
loopne
jno
flds
test
add
cmp
mov
jo
popf
add
or
js
out
clc
mov
test
and
mov
sbb
push
cmp
xor
in
push
lods
sub
push
add
inc
adc
movl
shrb
and
mov
push
aaa
faddl
ficomps
shll
mov
fbstp
mov
mov
sub
xchg
adc
jne
adc
dec
je
fdivrl
hlt
xorb
and
adc
inc
rorb
push
adc
mov
rcrb
or
ds
scas
call
pop
dec
movsb
out
mov
movsb
pop
sub
and
addb
lret
push
mov
mov
mov
adc
lahf
rclb
add
adc
inc
andb
xchg
inc
rorb
push
and
jl
and
push
sbb
aam
cmp
jle
inc
cmpsl
call
leave
outsb
dec
jp
stos
aaa
pop
mov
sub
and
or
mov
adc
inc
push
and
push
jl
cmpb
add
cmp
movl
ret
lock
mov
xchg
cwtl
jo
lahf
xchg
iret
and
outsb
nop
sbb
ficomps
and
mov
ss
adc
mov
push
or
pop
push
mov
daa
add
and
cmp
mov
xchg
addl
call
mov
sbb
cltd
lock
dec
jg
add
sbb
mov
adc
add
roll
or
int3
push
popf
xchg
jnp
test
negb
mov
lock
loopne
les
stc
push
ret
popf
mov
imul
mov
adc
sbb
cli
and
dec
fistpl
or
in
sub
push
inc
jno
test
mov
sbb
or
mov
mov
mov
call
movsb
dec
dec
das
hlt
and
push
push
or
pop
dec
dec
fiaddl
lcall
xor
jp
mov
xor
mov
push
mov
sub
fsubr
mov
bound
addr16
inc
cs
sbb
dec
out
sbb
es
cmp
lods
push
mov
cmp
or
xlat
andl
hlt
inc
mov
out
cmp
jns
sbb
push
push
dec
mov
inc
fdivl
dec
dec
inc
mov
cmp
inc
cmp
or
and
mov
mov
in
in
inc
jns
pusha
test
out
pop
cs
pop
and
mov
sub
mov
lock
rorl
cmpb
cmpsb
push
add
movsb
in
rcrb
flds
cld
cltd
xchg
add
cmp
fbld
add
cltd
or
loope
sub
push
add
pop
ljmp
mov
iret
jecxz
sarb
sahf
xchg
jo
inc
cmp
jae
jnp
mov
sub
inc
lock
push
loopne
xor
lods
mov
pop
mov
in
sub
loopne
jg
jle
movsb
out
je
rcrb
push
or
adc
test
push
adc
and
push
cld
clc
sub
rcll
testl
dec
aam
sbb
push
das
jns
loopne
jno
add
addr16
inc
nop
pop
ljmp
adc
sahf
dec
sbb
mov
rol
iret
xor
fsubr
clc
xor
lock
dec
aas
in
jno
rol
pop
or
adc
pop
xor
pop
dec
xchg
xor
mov
cmp
adc
xor
ror
add
xor
mov
fs
or
enter
jp
and
add
cmp
cmp
and
xor
inc
mov
in
rol
inc
dec
adc
mov
sarb
and
pop
inc
lcall
ljmp
mov
and
adc
ret
pusha
and
mov
jbe
xor
pushf
lock
sub
push
lahf
cmp
mov
cmp
add
test
jge
xchg
fsubr
add
scas
je
mov
repz
push
pop
push
xor
mov
js
into
lds
cwtl
loopne
repnz
mov
inc
aam
mov
int
scas
into
mov
mov
or
pop
in
add
mov
add
mov
adc
shlb
or
and
add
and
mov
and
xor
fsubl
scas
imul
mov
sub
mov
roll
mov
hlt
popa
test
fdivl
add
js
dec
inc
sbb
stos
int
inc
call
mov
or
stos
into
dec
jno
jecxz
in
mov
dec
sbb
jmp
loopne
iret
test
sub
add
fs
push
rolb
fsts
aas
push
dec
pop
aam
sbb
sub
call
and
daa
or
adcb
push
xor
shlb
pop
shl
pop
es
xor
adc
insb
pop
lock
dec
xor
mov
inc
and
fld
inc
sbb
les
dec
pop
mov
xorb
stos
add
sbb
adc
add
adc
adc
loope
out
jl
add
adc
or
repnz
sbb
xchg
push
push
cwtl
push
add
xorb
fnstsw
call
and
out
lea
mov
cmp
jl
mov
sub
cmpsl
in
sbb
es
addr16
pop
xor
mov
cmpl
adc
gs
or
and
andb
cwtl
test
jmp
add
jne
cmpsb
or
out
andb
outsb
push
add
cs
orl
sub
sub
pop
inc
cmpsb
add
cmp
ds
push
ficomps
test
add
cmpsb
add
sub
or
xor
adc
dec
sbbb
inc
mov
and
mov
sahf
and
and
clc
pop
cmp
test
or
adc
mov
pusha
jmp
movsl
rclb
out
mov
pop
or
lods
cmpsb
nop
sub
clc
pushf
loope
shll
xchg
cwtl
adc
pop
push
add
pop
sub
shrl
sub
xchg
and
pop
dec
or
push
enter
inc
add
mov
jns
or
mov
mov
jnp
inc
call
in
inc
stos
jno
mov
out
mov
or
clc
jns
cmp
push
enter
aaa
sub
adc
cld
loopne
jnp
js
add
jle
sbb
sub
repz
les
and
dec
cwtl
inc
lods
add
cmp
add
xor
pop
and
jns
or
mov
dec
and
sahf
or
adc
jp
pop
fcoms
sub
es
mov
call
lock
mov
mov
pop
mov
mov
into
xor
aam
je
sub
jnp
pop
jl
fwait
repnz
dec
push
or
loopne
addb
nop
push
dec
pop
mov
repnz
test
inc
mov
push
out
add
jo
lahf
add
out
cmp
cmp
call
ja
mov
cwtl
mov
inc
cmp
pop
pop
xor
and
mov
cmp
cwtl
mov
and
in
mov
int3
mov
cwtl
push
fidivl
mov
pop
das
mov
inc
add
sub
sahf
mov
jmp
roll
push
rolb
and
test
inc
addb
push
cwtl
sbb
icebp
adc
add
xchg
mov
xor
inc
shlb
push
or
in
ror
push
push
cwtl
xchg
inc
cld
inc
mov
jno
es
mov
pop
sub
xorl
int
pop
cmp
aaa
jno
pop
xor
movsl
ret
sub
and
sahf
test
shrb
mov
flds
push
pop
cmp
mov
ja
repnz
push
pusha
adc
xchg
sbb
pusha
repnz
xor
sbb
lock
lret
dec
mov
and
add
movsb
roll
and
sbb
push
dec
or
dec
je
dec
add
out
inc
ret
lret
rclb
testb
sub
shrl
out
mov
les
add
cmp
addb
scas
pop
in
adc
sub
cs
sub
pusha
pop
dec
xchg
pop
mov
sub
add
xor
lods
xchg
push
orb
sbb
aas
mov
dec
fwait
dec
push
jle
imul
add
or
sub
xor
pop
inc
lock
sbb
mov
push
add
cs
repnz
pusha
cwtl
dec
inc
lods
cmp
jb
add
adc
lahf
shlb
cmovo
push
lods
mov
in
or
out
cmp
rclb
ljmp
enter
xor
inc
ds
std
adc
je
mov
mov
add
jbe
adc
dec
test
mov
pushf
sub
sub
pop
add
jg
ss
sbb
cmpsb
add
jo
insb
add
push
jne
loopne
cmp
mov
movsb
movsl
pop
and
test
js
push
mov
mov
mov
cmp
cwtl
lar
jne
js
icebp
add
sbb
mov
pop
xchg
addb
sbb
mov
pop
adc
subb
sub
icebp
sub
mov
cwtl
mov
sahf
jmp
push
push
in
add
or
stc
or
sbb
add
mov
dec
sub
dec
sbb
mov
aas
loop
jnp
cmpsl
xchg
pushf
xchg
sub
mov
dec
std
dec
loop
loopne
fcmovnbe
ror
shr
outsl
pop
stos
cmp
inc
xchg
add
test
lret
adc
dec
adc
jbe
pop
inc
sub
inc
mov
xchg
mov
lcall
roll
add
movsl
add
enter
int3
cmc
repz
fdivr
xor
sti
outsb
popf
sub
add
jno
lods
rolb
gs
rol
mov
add
xor
rorb
les
mov
mov
enter
xor
scas
subb
and
lea
test
fstl
dec
or
in
addr16
or
adc
pop
xchg
adc
loope
cld
add
jno
inc
not
or
movsl
sbb
add
fiadds
sub
andb
out
adc
dec
outsb
jnp
push
ret
loop
cmpsb
repz
pop
add
inc
movsl
aam
outsb
test
pop
mov
test
imul
xchg
mov
ret
and
jg
cmp
pop
push
or
shlb
and
inc
mov
pop
mov
outsl
inc
lods
fistpl
pop
and
lret
int3
enter
insl
es
or
push
test
fs
arpl
call
aas
test
iret
xchg
jl
pop
out
pop
xor
aam
and
or
es
mov
test
clc
push
iret
and
mov
mov
xor
loop
pop
test
or
xor
jb
fnsave
xchg
pop
inc
add
mov
rol
add
ret
lret
sbb
adc
ret
mov
and
add
les
add
out
pop
adc
add
shll
popf
sbb
mov
push
xchg
and
sbb
cld
movsl
sbb
push
cmpsb
xor
inc
adc
pop
les
and
push
enter
xor
mov
js
xchg
adc
mov
popf
adc
add
mov
xlat
cmp
cld
cmp
dec
push
xchg
cmpsl
add
sbb
cmp
repnz
mov
mov
inc
xor
cmp
mov
push
jp
lods
ret
ret
shrl
cwtl
imul
add
test
repnz
mov
dec
sub
scas
add
sti
mov
call
bound
int
aam
mov
xorb
loopne
out
stos
mov
xchg
and
dec
loope
call
pop
xchg
and
lds
add
pop
xor
bswap
or
or
fldl
jb
xor
lret
cmp
dec
xchg
or
sub
mov
movntps
cmp
out
aam
dec
cmp
push
inc
pop
fiaddl
psrad
mov
ljmp
inc
popa
push
rclb
outsl
fcoml
cmp
clc
xor
jle
push
and
inc
sbb
mov
inc
fnstcw
add
lock
out
mov
call
adcl
xchg
or
and
in
jae
xor
sahf
mov
or
xor
les
or
and
sti
mov
fwait
ljmp
sbb
sub
adc
add
xor
xor
adc
mov
out
mov
jl
sub
pop
sub
in
cmp
aas
in
fscale
xchg
push
push
jp
mov
loopne
mov
xor
mov
inc
adc
call
or
in
add
xor
add
daa
jg
sbb
push
lea
or
push
push
sub
jmp
pusha
pop
jp
fcoml
sbb
icebp
lock
add
or
mov
lock
popa
mov
add
or
push
cmp
add
loop
adc
and
jle
adc
adc
add
sbb
mov
cli
cmpsl
stos
inc
mov
or
push
mov
fs
push
xchg
dec
sbb
ror
inc
xadd
push
in
sbb
mov
andb
dec
xlat
inc
movsb
sub
in
inc
add
or
stos
or
adc
mov
sub
dec
fsubr
add
sub
pusha
jp
bound
fidivs
fidivrs
inc
repnz
xchg
sbb
js
clc
pop
pop
or
ljmp
mov
mov
mov
mov
adc
and
cmp
cs
fildl
add
sub
lods
ljmp
pusha
dec
cmp
add
push
sub
xchg
shlb
adcb
jle
xchg
and
in
enter
dec
inc
hlt
xchg
pop
rorb
into
call
shr
rcl
repnz
stos
and
jmp
cmp
pushf
adc
cmp
adc
add
shl
xor
loop
stc
sbb
mov
sub
pop
pop
jge
and
xor
ja
sbb
in
sarl
and
lcall
xor
xchg
fs
add
pop
imul
xor
cmp
adc
pop
in
fidivrl
les
loope
inc
ss
add
clc
ljmp
xchg
test
pop
jo
or
inc
jb
xchg
js
cmpb
popf
jecxz
sarb
mov
and
out
cmp
sar
mov
add
pop
or
imul
mov
xor
jns
add
sbb
test
enter
lods
outsl
ds
addr16
scas
xor
ljmp
mov
mov
int
scas
mov
test
sub
mov
add
adc
inc
push
std
and
stc
mov
add
push
ror
pop
gs
aad
mov
jnp
jo
cmpsb
add
adc
test
popf
cmp
cld
xchg
iret
add
adc
mov
mov
flds
add
add
xchg
std
xor
icebp
sub
push
cmp
pop
mov
xor
adc
or
js
rorb
dec
nop
mov
shl
imul
xchg
pushf
cmp
icebp
jl
inc
sbb
and
push
bound
and
xchg
add
dec
mov
enter
inc
and
test
rorl
mov
push
inc
sbb
andl
ja
mov
add
sub
xorb
push
sarb
mov
outsl
mov
clc
inc
dec
jp
in
mov
cs
adc
aas
add
cmp
cmp
movsb
adc
mov
in
pusha
andl
cld
push
adc
lods
lods
adcb
add
inc
clc
mov
in
mov
je
or
inc
mov
test
mov
push
pusha
add
dec
in
es
divb
mov
or
stos
and
jmp
xor
lock
in
int3
sub
dec
mov
movsb
aam
adc
aaa
mov
add
add
jne
mov
dec
in
andl
mov
jmp
cmp
jbe
cld
mov
cmp
jae
xor
pop
mov
lods
and
add
movsl
push
rcrb
rclb
jb
mov
loop
xor
repz
jecxz
int
sub
cs
cs
mov
sub
mov
aad
mov
ljmp
loopne
add
push
xchg
and
cwtl
pop
mov
sbb
lds
inc
mov
mov
inc
nop
push
mov
pusha
fmull
dec
fmull
inc
mov
sbb
sbb
mov
and
in
jbe
add
imul
mov
mov
adc
stc
les
cmp
in
pusha
stos
cmc
push
sub
aas
mov
and
add
decb
add
sub
enter
adcb
pop
xor
dec
loope
into
aam
inc
cwtl
jg
adc
scas
xorb
sbb
mov
dec
and
lahf
sub
push
and
add
add
add
testl
and
and
sub
xor
je
andb
add
lock
xchg
loopne
mov
add
add
or
js
pusha
test
js
mov
fists
jl
lods
inc
mov
cld
scas
push
push
test
sbb
dec
mov
aam
call
dec
add
pushf
dec
push
sub
or
sti
cmp
addb
xor
es
xor
imul
sbb
adc
cwtl
repz
in
xchg
cmp
mov
popf
test
aaa
jne
js
sahf
cmp
leave
xor
adc
dec
pop
jg
or
xor
mov
pusha
or
out
repz
adc
loope
in
pop
sbb
add
mov
xchg
loopne
cli
jns
mov
mov
mov
test
call
ds
dec
and
popf
pushl
add
mov
test
sti
add
dec
rcrb
jmp
ds
add
add
insl
pop
adc
nop
push
out
into
inc
dec
xchg
sbbl
aad
aaa
shlb
fwait
dec
cmp
and
test
dec
rol
loopne
arpl
dec
and
or
mov
adc
or
dec
sbb
cs
popf
xchg
add
cs
dec
cmc
std
cs
lock
icebp
add
pop
lret
add
xlat
loope
push
mov
xchg
jg
loopne
scas
and
loopne
shr
push
mov
pop
jle
xchg
cmpsb
pusha
sbb
xchg
ficomps
into
push
cmp
js
push
xor
jnp
lods
mov
mov
jmp
test
outsb
mov
das
sti
push
mov
outsl
sub
int3
clc
sub
out
or
and
mov
dec
adc
lcall
jo
ret
or
mov
test
sub
mov
sub
je
jmp
sbb
fadds
push
fisttps
add
mov
adc
insl
sub
out
add
in
cmp
xchg
sub
push
pop
cmp
mov
xchg
in
icebp
sbb
sbb
jo
inc
or
xor
pop
cmp
mov
jb
pop
jg
mov
pusha
lds
rcrl
dec
and
roll
cli
push
into
lock
pop
pop
out
mov
xor
sarb
movsb
insb
or
add
inc
or
das
fdivl
add
sahf
cltd
mov
dec
jg
aam
aas
add
xchg
jle
or
mov
inc
mov
fnstcw
les
daa
loope
les
pop
pop
mov
leave
mov
xor
jmp
ds
fmulp
lret
aam
add
pop
fmuls
xchg
xlat
jmp
ss
sbb
jb
xor
add
push
out
repz
fidivrl
or
sti
inc
mov
shrl
js
adc
popa
adc
pop
dec
adc
push
fcoml
inc
pop
push
sbb
and
dec
push
loopne
xor
push
mov
test
add
sbb
push
test
mov
hlt
aam
or
pop
xor
dec
sbb
inc
push
jne
xor
jbe
faddl
xlat
mov
jp
jecxz
clc
mov
fstpl
dec
mov
inc
ljmp
pop
fstpt
lods
sbb
loope
or
jne
addl
push
jmp
orb
cmp
sbb
mov
stc
push
push
mov
push
mov
cmp
sub
cmp
ljmp
or
xchg
add
fdivrp
inc
and
xor
andb
add
jle
xlat
dec
leave
stos
test
arpl
xor
sbb
cmp
jge
or
push
cmp
lds
xchg
xor
adc
test
mov
cmp
add
push
and
cld
adc
cmpsb
jo
dec
les
pop
aaa
xchg
pop
jne
aad
adcb
int
dec
dec
mov
stos
or
jl
std
inc
xchg
sbb
inc
lock
mov
add
std
cmp
iret
testb
stc
mov
lret
ljmp
gs
mov
mov
push
iret
or
call
cmp
mov
sub
adcb
jo,pn
leave
loopne
sti
inc
push
fisttpll
jbe
pop
cmp
loopne
jne
shll
rorl
lods
push
add
pop
push
adc
add
sbb
out
pop
jg
lods
loopne
fcomi
dec
push
shlb
and
sbb
test
push
mov
dec
pusha
ja
add
ret
mov
stos
xchg
std
insb
mov
push
xchg
adc
leave
rorl
xchg
in
add
mov
jle
inc
mov
push
in
push
loopne
mov
aaa
push
add
and
shl
push
shl
andl
pusha
and
push
dec
xchg
and
cmpsl
xor
dec
and
add
loopne
xchg
sbb
mov
in
mov
lahf
add
sbb
and
jnp
pusha
mov
out
roll
leave
mov
cmp
or
cli
mov
xor
inc
mov
add
lock
inc
icebp
cmp
test
or
add
mov
loop
sbb
dec
add
test
mov
ds
mov
pop
add
lret
sub
mov
pop
and
mov
adc
in
iret
sbb
and
and
or
adc
lret
adcl
call
int
mov
bound
jb
add
rcl
adc
inc
aas
rclb
aaa
mov
mov
cmp
mov
dec
cli
pushl
mov
and
sub
add
and
sub
mov
call
pop
mov
or
stc
adc
inc
sbb
mov
ss
fimuls
sbb
push
push
jle
add
xlat
push
movsb
add
stos
lock
mov
xorl
js
in
ljmp
add
cwtl
mov
ljmp
int
pusha
push
adc
test
lock
insb
lds
stos
es
test
pop
inc
sub
imull
stc
and
lea
jl
adc
incl
jmp
clc
mov
pop
sbb
adc
lret
and
sbb
jmp
push
sbb
jnp
test
fiaddl
pop
sbb
fwait
jecxz
add
cmp
cmp
mov
add
push
jp
daa
jl
jo
dec
loopne
adc
push
imul
push
inc
test
dec
cs
push
inc
shl
xchg
movl
movsl
ffreep
push
adc
and
rol
popf
call
les
in
or
push
inc
jp
rcrl
and
push
mov
fiaddl
imul
popa
push
add
pop
dec
jns
in
repnz
divl
out
push
push
dec
push
into
rclb
in
out
mov
inc
add
shrl
or
add
push
notl
test
push
loop
xor
xor
add
repz
ds
adc
adc
add
pop
bound
sbb
mov
mov
add
loope
push
dec
adc
movsb
push
in
je
cmpsb
xor
hlt
add
fs
mov
fcoms
jecxz
rclb
imul
cmpb
sbb
lods
and
and
iret
mov
pop
add
scas
push
and
mov
dec
push
sbb
or
hlt
dec
js
test
loope
pop
dec
cmpsb
pop
loopne
add
sbb
xor
push
clc
add
stos
add
add
fcoml
das
into
jo
inc
rorb
pop
and
pop
push
in
js
lcall
xlat
pusha
dec
jp
dec
dec
xor
pop
pop
or
lea
and
push
shll
dec
jl
cmp
sbb
in
repnz
sahf
mov
je
dec
mov
jmp
faddl
xchg
ret
in
adc
xor
call
adc
xchg
out
fs
lret
in
and
int3
fadd
roll
lcall
cmp
shl
ljmp
add
pop
mov
cmp
sbb
sbb
mov
stos
push
mov
fcomps
sub
add
mov
jo
lahf
icebp
inc
aam
add
int3
dec
test
pop
cltd
sbb
testb
rclb
jns
dec
lods
test
fcmovnbe
ds
or
push
and
add
cmp
mov
and
loope
cmp
mov
xor
addr16
adc
jp
inc
pusha
xchg
loopne
std
add
jmp
or
xor
popf
and
xlat
add
leave
sbb
lea
imul
das
aaa
enter
jecxz
icebp
stos
into
sbb
das
out
fcmovnb
mov
adc
pop
loope
inc
mov
mov
mov
and
lock
add
dec
mov
or
in
jp
nop
js
add
mov
pop
imul
or
out
jle
test
mov
adc
adc
mov
add
add
js
add
dec
cwtl
arpl
ss
jb
jnp
mov
add
cwtl
or
popa
jb
sti
mov
out
cld
pusha
sub
popf
xbegin
adc
cmp
fnstsw
test
testl
shrl
clc
inc
xchg
pushf
or
jp
test
rolb
and
out
cmp
pop
and
add
add
mov
pusha
pushf
popa
loopne
add
andl
inc
leave
lock
jl
push
sti
add
ret
mov
div
stc
sbb
mov
push
cmp
movsl
in
pusha
stc
insl
stos
sbb
inc
mov
add
xor
jp
mov
sbb
mov
aam
pushf
iret
pusha
loop
and
push
add
ja
cs
scas
pop
fiaddl
loop
lock
inc
cmp
mov
aad
addb
rol
mov
pop
sbb
push
dec
aam
hlt
sub
popa
mov
jo
push
rorl
sbb
dec
sarb
fists
cmp
jno
sub
xlat
sbb
es
aam
xchg
and
add
cwtl
aad
add
cmp
es
mov
cmp
sub
das
or
mov
mov
add
pusha
leave
xor
cmp
inc
xor
cmp
aam
cmp
ja
lahf
fdivrl
mov
dec
xchg
adc
les
enter
leave
pop
mov
mov
push
pusha
jb
mov
rcr
add
pop
inc
mov
xor
je
sub
add
cwtl
ret
mov
loope
shll
mov
push
mov
sub
cltd
cmp
std
or
dec
inc
adc
mov
and
jl
cmp
cld
pusha
add
ficomps
inc
mov
pop
jo
into
add
pop
out
call
and
out
sbb
jmp
add
mov
scas
and
push
jae
sub
sub
sbb
mov
xchg
popa
test
int
push
or
mov
add
jno
lret
les
xlat
adcb
and
inc
test
sarb
cmp
jae
icebp
inc
push
lea
loopne
leave
cmp
andb
add
loopne
leave
dec
hlt
cwtl
out
lcall
cmp
pop
movsb
test
add
sbb
lds
pop
rolb
or
xchg
aam
cwtl
loopne
pusha
cmpsl
cmp
jbe
les
adc
add
jae
dec
adc
addl
xor
testb
sbb
out
jp
ja
pop
scas
sub
xchg
in
add
mov
pop
movsl
lea
cmp
xchg
and
or
shrl
add
scas
cmp
out
loopne
into
les
fcoms
sub
aas
xor
push
dec
rcr
lods
add
mov
inc
push
sbbb
jno
push
loopne
idivb
sub
outsl
and
ret
aaa
iret
jg
jne
push
or
in
mov
data16
and
xchg
nopl
bound
stos
lea
loope
xchg
xchg
xor
add
add
inc
push
cmp
cwtl
adc
dec
js
add
mov
icebp
sahf
mov
or
mov
dec
sbb
mov
testb
xchg
add
movsb
outsl
imul
push
add
cmp
sub
fdivs
sar
ficomps
fsubrl
pop
xchg
lcall
inc
hlt
sub
adc
xchg
fwait
out
add
cmp
mov
inc
push
add
sbb
ljmp
es
sbb
leave
add
pop
dec
arpl
sti
inc
cmp
sar
add
sbb
push
xchg
jg
aad
loopne
es
add
iret
mov
ds
and
cmp
sti
nop
add
cmp
xor
fs
adc
icebp
out
add
ficomps
pusha
and
jbe
mov
jne
add
xchg
addr16
add
movsb
and
addl
inc
pop
mov
mov
sbb
or
sub
lock
add
add
cwtl
add
sarb
push
aaa
popf
aas
mov
adc
add
mov
sub
add
dec
sbb
pop
jbe
add
pop
bound
or
or
jno
sahf
fistl
loope
inc
movsl
pop
sbb
jnp
icebp
cmp
popa
inc
arpl
inc
and
stc
dec
ds
pusha
sbbb
mov
and
sub
test
pushf
mov
cli
filds
mov
cmp
sub
loope
sahf
xchg
loopne
add
pop
lock
cmp
add
jl
add
inc
mov
loop
adcb
adc
and
cmp
add
sarl
inc
fwait
push
sbb
out
mov
arpl
nop
cmp
cmp
sbbb
jg
in
rcll
nop
popf
and
push
or
mov
xchg
mov
stc
pop
fdivl
in
mov
xor
xchg
roll
mov
addr16
xchg
orb
out
cld
movsb
add
pushf
das
mov
inc
fisubrs
jb
add
xor
xchg
add
or
cltd
insb
fdivl
pop
mov
sbbl
sbb
sbb
inc
pop
add
mov
divl
add
jp
push
cmp
adc
add
in
inc
pop
mov
test
jge
fisubrs
cwtl
pop
stc
jo
mov
aad
scas
xchg
jg
add
or
sub
add
testl
popf
jnp
cmp
or
cmpsl
push
out
les
mov
inc
add
rorl
and
pop
lds
daa
rclb
pop
push
or
adc
lahf
add
mov
mov
add
roll
add
leave
outsb
add
es
in
stos
popa
mov
inc
dec
push
add
mov
dec
dec
add
xor
mov
pop
ja
add
mov
mov
jns
shlb
mov
add
cs
inc
push
and
pop
icebp
push
push
cmp
dec
mov
outsl
cld
xchg
test
paddusb
mov
lock
clc
sub
jmp
mov
or
leave
jge
pop
adc
lock
ds
xor
orb
ljmp
xor
cmp
hlt
pop
lds
or
ret
mov
repz
leave
je
sub
add
js
mov
dec
dec
rcrb
aad
fcmovbe
or
fs
incl
mov
cld
cmpsb
nop
std
add
pop
sub
mov
lret
mov
add
jne
daa
insb
cmpsb
fmuls
cs
mov
movsb
add
cli
cltd
cmp
xchg
repz
fimull
add
sbb
or
movsb
fwait
or
xor
adc
roll
loopne
ss
cmpsl
jo
mov
mov
and
sti
and
pushf
dec
add
rclb
gs
push
test
lret
add
xchg
push
xchg
lods
sbb
lcall
shl
cmp
roll
mov
enter
cmc
add
adc
adc
xchg
add
call
and
mov
inc
addl
jl
sub
dec
in
cmp
in
mov
cmp
inc
or
push
iret
xlat
add
pushf
sub
jno
dec
lea
mov
bound
verw
mov
aad
lret
add
rcrb
clc
les
in
daa
xchg
xchg
push
cmp
outsl
push
aam
int3
dec
sbb
mov
add
inc
in
rcrb
mov
xchg
xchg
loopne
mov
mov
add
dec
sbb
cmp
loop
add
cmc
ret
fwait
xor
pop
xchg
pop
rolb
mov
mov
or
adc
inc
push
add
fldenv
and
inc
cmp
adc
int
add
dec
mov
pop
fstps
js
lahf
incl
push
push
xchg
sub
fadds
dec
dec
or
les
xadd
subb
inc
shlb
add
or
cmp
subb
testl
and
xor
repz
jbe
and
imul
pop
cmp
sub
adc
test
lock
or
insl
das
sahf
jo
mov
fldln2
std
lahf
jmp
inc
clc
into
mov
ljmp
xchg
push
and
cmc
dec
and
sbb
pushf
pop
clc
loopne
sbb
pop
rcll
add
out
lods
ja
xor
adc
jae
in
add
and
sub
cmp
or
pusha
test
cltd
outsl
push
jnp
xchg
ret
mov
add
sbb
add
inc
daa
pop
cmpsb
psubb
jbe
or
mov
aas
add
mov
inc
dec
in
ds
sub
fistps
cmp
lods
cmp
jl
mov
add
arpl
ss
sbb
outsb
add
jae
mov
adc
lds
and
in
movd
mov
add
ja
gs
add
mov
xchg
dec
add
cli
jecxz
dec
jnp
add
lods
mov
clc
test
addb
mov
sub
int3
xor
js
es
xchg
jbe
negl
lret
pop
scas
js
lods
test
pop
sbb
bound
loopne
dec
sub
adc
cmpsl
xor
mov
fistpl
std
rol
lret
arpl
in
push
add
add
addb
jp
pop
cmp
add
add
xchg
lcall
mov
faddl
pop
jnp
and
movsb
add
ja
xor
insb
push
and
sub
push
dec
jmp
cmp
in
sub
stc
and
mov
lea
shlb
inc
repz
inc
dec
inc
xorb
inc
rorl
stos
push
lock
jnp
scas
cmp
shlb
sub
mov
add
xor
ja
sub
pop
pop
jne
sbb
xor
mov
xchg
in
insb
enter
add
pop
xchg
add
jge
dec
adc
adc
cmc
ffreep
xchg
mov
in
add
mov
loop
mov
jnp
xchg
fisttpll
incl
sbb
add
mov
repnz
sub
sbb
jmp
jl
xor
dec
mov
test
sub
not
mov
cmp
and
or
clc
loop
mov
sub
rorb
cmp
add
push
pusha
xor
sbb
jb
jae
jo
add
inc
jg
add
int3
xlat
mov
int
xchg
add
lahf
incb
push
xorb
push
add
xchg
or
in
add
aaa
push
in
add
mov
jl
pop
jle
negl
rolb
mov
cmp
xchg
add
mov
push
hlt
fs
add
test
stc
xchg
xchg
shlb
pop
out
add
cld
and
inc
sbb
addl
dec
push
xorb
mov
jge
stc
fisubrl
pop
insb
add
call
inc
fucomi
push
add
xchg
push
dec
inc
outsl
or
add
fnsave
inc
movb
and
test
mov
and
fidivrl
inc
or
mov
popa
cld
rolb
jg
mov
or
xor
lldt
imul
pop
sbb
ds
or
stos
out
add
pop
add
pushf
rol
jns
push
nop
int3
add
lds
decl
nop
add
inc
add
push
sub
movsb
push
mov
aas
xchg
roll
xor
out
lret
or
and
in
imul
fwait
or
shrl
ret
mov
add
jecxz
and
call
insl
cmp
mov
add
push
ss
add
pop
cltd
jmp
stos
inc
sbb
push
adc
add
js
out
xchg
cmp
mov
mov
mov
shll
add
lret
call
gs
add
cli
shl
or
cmp
add
adc
pop
repnz
icebp
mov
cwtl
jecxz
mov
pusha
fiadds
mov
cs
loopne
movl
rclb
mov
int3
addr16
mov
cmp
add
jmp
fwait
add
inc
sub
add
mov
push
popf
sbb
pop
add
adc
jo
flds
arpl
dec
lahf
addl
mov
xchg
jns
out
cli
add
dec
daa
and
lret
lahf
xor
and
popa
inc
xor
cltd
mov
mov
add
cmc
in
xchg
mov
incb
xor
ja
or
add
test
out
shlb
push
xchg
inc
or
lods
jl
xchg
leave
mov
push
lcall
xchg
mov
call
and
xor
lret
movsb
xchg
add
mov
pop
sub
mov
lock
xchg
cmp
adc
cmp
cmp
jmp
enter
or
jb
aas
xlat
inc
push
pushf
mov
in
cmpsl
lds
push
xchg
mov
arpl
test
fcmove
lods
xchg
and
in
adcl
add
add
mov
ficomps
stos
lock
dec
insb
jo
outsb
add
xchg
push
add
sub
adc
add
inc
mov
cltd
cli
add
in
pop
or
jb
sub
cmp
add
push
xchg
sbb
mov
pop
add
arpl
sahf
add
pop
divb
aad
mov
in
pop
inc
mov
or
out
pop
test
test
mov
pop
fmull
jecxz
roll
lods
addr16
sbbb
adc
inc
adc
fs
and
sbb
push
adc
sub
sub
adcb
push
xchg
lds
xchg
push
pop
lahf
fisttps
dec
xchg
mov
cltd
out
jp
add
lock
adc
add
xor
popf
mov
dec
push
lret
add
adc
stc
rcrl
mov
push
cmpsl
xchg
add
aad
jnp
pop
or
xchg
fisubrs
pop
cmpsb
lea
subl
rorl
mov
pop
inc
ss
add
or
inc
dec
mov
test
call
cmp
ficoms
gs
lcall
or
mov
cmp
pop
lahf
loope
add
cwtl
cld
add
and
mov
test
inc
cli
jp
stos
sahf
loope
shrb
aaa
mull
mov
mov
dec
add
cmp
imul
jnp
adc
mov
loopne
mov
sub
iret
sbb
stc
ljmp
jge
xchg
test
bound
idiv
cli
ret
out
mov
sti
mov
ss
push
je
loopne
andb
lahf
arpl
adc
popa
xchg
fmull
ret
loope
and
aaa
dec
sbb
into
xorl
pop
iret
inc
and
mov
cltd
add
xor
mov
into
mov
lods
mov
mov
lock
xchg
je
sahf
cltd
cmp
lea
mov
and
dec
xor
mov
mov
dec
sbb
dec
test
xchg
pusha
jno
inc
or
nop
xchg
xchg
xchg
xchg
cmp
rorb
imul
sbb
testb
nop
push
iret
mov
inc
or
sbb
xor
add
cmp
add
popa
sub
dec
fcmovnu
dec
mov
push
cld
xchg
mov
mov
add
shlb
adc
incb
inc
stos
nop
adc
cltd
add
cwtl
scas
adc
mov
lods
lock
sub
pop
mov
mov
outsl
mov
testb
decb
dec
test
mov
cmp
or
mov
push
cmp
in
mov
inc
shll
mov
js
es
cld
mov
mov
adc
repnz
and
fs
push
in
cs
xchg
add
sub
arpl
mov
repnz
inc
incb
mov
loopne
cmpsl
mov
shrb
and
lods
sub
test
sub
mov
or
mov
sbb
sub
call
dec
cmp
inc
push
lods
dec
mov
stc
sbb
fbstp
add
and
push
xor
pop
add
imul
adc
cmp
subps
push
or
pushf
push
lcall
addr16
jae
adc
add
lcall
mov
pusha
mov
int
push
or
aad
je
cwtl
add
pop
pop
jno
fs
inc
add
cmp
out
cmp
sbb
into
jo
hlt
push
rolb
icebp
mov
fildl
ficompl
mov
mov
xor
aam
jp
cmp
add
inc
mov
pusha
dec
pushf
and
and
add
aam
add
mov
lds
cmp
and
pop
dec
mov
pushf
jmp
int
icebp
xor
sub
or
mov
mov
imul
mov
and
sub
add
outsl
and
outsl
pushf
add
jae
scas
pop
inc
dec
jne
pop
icebp
xor
fwait
loopne
xchg
popa
add
mov
imul
sahf
icebp
dec
and
ja
cmc
dec
adc
adc
dec
jg
xchg
or
dec
and
je
ljmp
repnz
dec
adc
sub
or
adc
popa
inc
jmp
mov
pop
push
fs
adc
mov
jbe
sbb
mov
push
imul
pop
imul
cwtl
jnp
inc
lahf
push
ja
inc
movb
dec
pop
push
fildl
xor
lods
dec
cmpsl
push
mov
add
loope
std
fildll
and
sub
lods
xchg
cwtl
inc
push
xlat
add
fs
adc
add
pop
jne
mov
sbb
outsb
jge
dec
fsubrs
mulb
or
add
popa
mov
xor
sbb
arpl
add
pushf
adc
xor
cli
leave
xor
movsb
in
push
pop
ficompl
bound
mov
add
shlb
popf
sub
mov
test
cmpsl
push
push
or
arpl
push
add
test
jmp
aas
data16
add
lock
or
rorl
inc
add
mov
scas
out
push
push
cmpsb
mov
and
imul
or
lret
shll
mov
test
rcr
cmp
fsubrs
or
pop
add
push
mov
fistpl
test
mov
jo
pop
and
push
fs
fidivrl
push
cld
ljmp
pop
inc
or
dec
adc
inc
add
dec
gs
adc
and
or
and
push
nop
rolb
cmpsl
call
push
inc
xor
aam
scas
dec
mov
sub
cmpb
inc
test
mov
dec
lret
xchg
aam
push
nop
adc
jp
add
ret
pusha
add
ds
fcoms
cmp
mov
jbe
adc
int
jg
dec
fadds
and
ja
sbb
rorb
cmp
xchg
or
ljmp
sbb
and
or
ret
scas
xlat
xor
push
cmp
mov
xor
shll
loop
add
pushf
or
push
and
sbb
pop
mov
adc
loope
xor
call
call
cwtl
mov
enter
xlat
cmpsl
add
pop
or
in
lret
out
arpl
rcl
sbb
add
scas
sbb
add
cmpsl
add
sub
sub
cmp
std
xchg
push
test
jmp
sbb
sti
jmp
stos
mov
jp
or
enter
add
xchg
xor
rcrl
cmp
or
cmpsl
pop
rclb
in
pusha
add
ficoml
jle
xor
or
sarl
subb
adc
addb
shr
mov
ficoml
fmull
push
xor
sbb
cld
sbb
jge
push
arpl
lcall
mulb
popf
dec
or
xor
add
inc
mov
or
or
push
mov
mov
dec
adc
add
les
movsb
jo
xor
add
jge
cmpxchg
addr16
adc
popa
xorb
add
fcomps
pop
dec
mov
and
add
dec
fdivs
pop
orb
jl
mov
and
sub
in
fs
and
lret
push
out
lds
inc
pop
xlat
add
inc
push
mov
arpl
mov
dec
inc
scas
in
xchg
mov
mov
and
nop
mov
mov
lea
mov
les
or
mov
add
sbb
mov
xor
xchg
cmp
push
push
push
pop
pop
adc
lea
mov
aad
dec
adc
andb
sub
sbb
dec
movsl
cmp
push
xchg
xor
adc
jge
test
push
or
push
or
jl
sub
adc
dec
jmp
inc
cmpsb
adc
and
ljmp
add
sbb
sbb
sbb
lret
cld
mull
lock
jae
popa
inc
and
sub
adc
test
cli
and
icebp
les
pusha
lock
mov
pusha
mov
dec
popa
out
inc
dec
lahf
mov
clc
or
insb
adc
insw
add
mov
cltd
mov
imul
cmpl
aam
push
pcmpeqd
jg
jae
orb
out
mov
popa
pushf
pusha
call
aas
add
xchg
mov
pop
arpl
xchg
in
mov
pop
inc
imul
xchg
and
xlat
decl
ret
pop
mov
push
out
dec
push
pop
mul
add
ds
xor
add
mov
sub
push
sub
or
mov
adc
inc
sbb
xchg
icebp
adc
sbb
mov
aas
nop
jo
mov
lcall
jno
push
filds
out
cmp
sahf
mov
mov
sbbb
jns
jns
sbb
xchg
inc
rcrl
cmc
rorl
dec
ljmp
add
sub
call
cmp
ja
call
push
or
fsub
pop
xchg
sbb
push
xor
in
mov
or
popf
fxch
cld
test
adc
ror
jo
lds
jo
cmp
fisttpll
jge
je
cmp
or
jge
adc
mov
in
fwait
mov
frstor
aam
cmp
fildl
in
cli
mov
mov
add
push
addb
xchg
and
popf
sub
mov
adc
movl
mov
aad
es
mov
arpl
call
ret
cmp
test
bound
pop
ret
mov
dec
sub
cld
mov
and
adc
mov
daa
pop
lea
out
stos
jge
daa
mov
fdivrs
add
and
sbb
fstpl
in
inc
outsl
sbb
push
pop
sbb
test
les
movsb
je
popf
sub
jo
movsb
cmpsl
pop
pop
xor
dec
mov
popf
pop
and
xchg
adc
out
mov
in
cs
mov
movzbl
jne
ds
subb
mov
pop
out
lret
in
pusha
cld
xor
rep
inc
inc
push
cmp
push
add
push
mov
mov
pop
rol
jmp
fwait
pusha
mov
mov
mov
shr
lods
fdivrl
test
or
lods
pop
xchg
cltd
add
loop
pop
call
dec
data16
dec
call
add
jge
hlt
jl
hlt
and
add
sub
dec
push
add
or
xor
in
sub
sbb
outsl
sub
rolb
mov
xor
movsb
addr16
mov
pushf
and
mov
pop
jg
add
xor
and
mov
sahf
pusha
mov
mov
pop
fdivrl
dec
mov
lcall
jl
or
mov
popa
nop
lret
xchg
std
nop
sbb
repz
ficomps
arpl
popa
lcall
pop
mov
dec
mov
fstps
sbb
add
cmpb
dec
cs
sti
xchg
ret
fwait
dec
lahf
dec
xor
aad
popf
jg
xor
push
adc
call
pop
loop
jo
add
sub
popf
xor
movsl
cs
imul
xchg
leave
mov
repnz
and
dec
outsb
addr16
cli
xchg
sbb
fnstenv
fistpl
cmp
movsl
pop
aaa
pusha
mov
mov
in
adc
test
inc
and
pop
popl
inc
mov
add
sbb
movl
xchg
dec
fildl
ret
sub
sbb
and
mov
rcll
sub
pushf
ja
push
cmp
jbe
and
add
push
xchg
inc
fnstcw
sarl
jge
je
add
clc
test
popa
push
jp
cmp
push
mov
stc
incl
test
dec
lea
popf
pop
mov
add
mov
add
popa
cmp
sbb
jmp
lcall
sbb
xchg
mov
pusha
out
cs
jne
and
fadd
fidivs
xchg
xlat
add
mov
xor
movsb
jle
or
and
icebp
add
cmp
cmpsb
cwtl
mov
call
fcoms
add
pop
push
push
insb
test
push
cmpsb
mov
pop
cs
sub
xor
in
jo
scas
lock
and
pop
insb
fs
pop
test
mov
add
jp
add
add
jae
pop
popa
cmc
andl
mov
adc
add
cmp
or
xchg
les
out
loopne
andb
xor
shlb
loopne
fldcw
add
jbe
jnp
ljmp
jo
sbbb
push
xlat
mov
and
pop
jmp
insb
push
ficomps
iret
je
js
add
xor
ret
in
cmp
pop
mov
mov
mov
pop
popa
push
imul
subb
jae
adc
fucomi
jb
add
gs
and
and
dec
aas
xor
push
mov
fnstsw
or
test
sub
inc
fisttpl
sbb
idivl
lods
insl
or
jne
dec
loope
xor
push
add
mov
push
xchg
out
mov
mov
lcall
jo
jg
sub
inc
pop
pop
and
adc
and
xchg
xor
or
push
mov
cmp
cs
and
mov
movd
jmp
cmpsl
lods
sbb
inc
ss
aas
data16
fdivrs
cli
lock
add
divb
push
inc
xor
xor
nop
mov
mov
mov
pop
push
sbb
nop
mov
bound
hlt
push
scas
arpl
clc
addr16
jg
dec
push
repnz
and
jl
clc
mov
dec
push
leave
cmp
cmpsb
mov
push
sbb
adc
mov
sbb
push
shrb
push
add
cld
rolb
imul
add
jmp
inc
popa
loope
andb
mov
insb
xchg
repnz
mov
mov
ss
pop
mov
inc
xchg
lock
add
fsubrs
cld
mov
movsl
cmc
or
insl
dec
ret
fstp
out
cs
inc
and
mov
inc
sub
sbb
jno
sti
jmp
push
lods
pop
in
je
fwait
xchg
add
lea
call
mov
setns
stos
and
loope
or
xchg
xchg
fst
adc
push
pop
xor
or
inc
push
xor
mov
fiadds
push
add
jp
push
and
cmp
insb
popa
or
add
sub
mov
dec
xchg
dec
xor
mov
xor
inc
push
pop
int3
jae
pop
and
adc
bound
cmp
inc
cmp
add
adc
into
and
pop
ror
cld
fdivrl
or
dec
sti
jne
and
xchg
ss
push
ljmp
out
test
push
pop
shrl
repz
push
lock
enter
mov
cld
sbb
pop
dec
mov
and
adc
or
hlt
mov
jb
push
shrb
mov
sbb
mov
dec
loopne
mov
in
inc
adc
pop
call
fsubs
lock
mov
add
jp
xor
jmp
nop
or
arpl
hlt
sbb
cmp
int
das
cli
imul
ret
pop
xor
sbb
addr16
mov
mov
mov
cltd
xor
insb
cli
call
and
push
push
dec
pop
sbb
or
xchg
mov
add
or
lds
xchg
sbb
sti
loop
call
push
cmpsb
cmp
insl
adc
lock
pop
daa
add
mov
addr16
lahf
pop
adc
mov
pop
jne
jnp
imul
add
gs
pop
clc
nop
or
jg
add
in
or
pop
fs
xor
mulb
pusha
lahf
movl
sub
sbb
and
xchg
js
lods
add
imul
and
pop
fnstcw
cli
jne
push
inc
pop
out
stc
or
sub
faddl
push
and
sub
lea
mov
lret
insb
mov
aaa
adc
mov
mov
push
jl
icebp
mov
add
adc
pop
out
mov
fildl
hlt
jne
lods
pop
fs
cwtl
jmp
xchg
mov
push
cltd
inc
fdivr
ljmp
ficoml
ret
movl
or
mov
mov
jp
aam
and
pop
mov
sbb
ds
out
loopne
lcall
mov
jno
add
adc
fsubl
mov
and
sbb
xchg
nop
scas
mov
mov
push
les
mov
pop
stc
sub
aaa
pop
adcb
jne
cld
push
imul
pop
adc
push
mov
xchg
arpl
addr16
sbbb
mov
xlat
fcmovnu
or
scas
inc
mov
pop
add
and
add
nop
jle
fimull
sahf
mov
push
adc
arpl
jmp
adc
in
pusha
sub
mov
cs
and
lret
fdivs
mov
pop
xchg
xor
orb
add
shll
add
outsb
sub
arpl
je
inc
stc
sub
xchg
mov
daa
mov
and
lods
dec
lock
cmpsb
pop
push
mov
stc
push
and
and
xchg
inc
add
push
daa
pop
insl
mov
paddsb
add
mov
and
loopne
test
push
sub
adcb
add
cli
dec
cmpb
jo
repnz
ja
or
das
and
cld
popa
pusha
outsl
xchg
add
mov
pop
cmp
push
mov
mov
in
pop
adc
adc
repnz
fs
sbb
xchg
add
cmpsb
jl
arpl
fs
in
and
dec
mov
hlt
mov
imul
stos
jno
sbb
loopne
pushf
add
adc
cmp
std
sbb
mov
mov
mul
and
mov
out
cmp
loop
fninit
das
sub
jae
push
dec
int
inc
cmp
stos
or
push
imul
or
mov
add
push
add
pop
test
and
jg
or
mov
push
xor
add
push
xor
std
adc
mov
or
mov
stos
pop
addl
mov
dec
mov
pop
xchg
add
adc
stc
cld
lods
stos
add
add
lds
sbb
inc
add
push
inc
js
pop
cltd
or
xor
mov
mov
jle
xchg
repz
test
xor
imul
aad
insl
pop
imulb
test
outsb
mov
mull
scas
mov
adc
add
fsubrs
push
adc
adc
addb
add
in
in
popa
movl
and
popa
clc
fiadds
xchg
sbb
insl
rcl
push
dec
inc
adc
jno
cmc
cmp
add
paddb
add
pop
popa
popf
jmp
mov
jno
mov
jg
test
les
call
cmp
jmp
push
jl
pop
loopne
andl
movsb
sbb
rcrb
or
xor
cmc
sbb
nop
pop
ffree
sub
out
jle
fistps
mov
or
pop
adc
jmp
jmp
inc
loope
sahf
and
into
inc
xorb
xchg
icebp
cmp
out
fdivrp
xor
push
xor
loope
sub
fisttpll
cli
sub
jl
mov
add
sbb
adc
cmpsb
sub
pusha
dec
cs
jmp
add
stc
add
xchg
xor
lods
or
rorb
jle
inc
outsl
les
je
imul
sbb
mov
dec
movsl
nop
das
and
lods
ret
mov
out
pop
aam
push
aad
jmp
test
out
loopne
addr16
pop
pusha
bound
add
fmuls
ja
cmp
aad
ret
stos
leave
inc
daa
dec
lea
stc
popf
std
and
adc
add
fs
data16
or
mov
adc
add
lea
mov
inc
adc
sbb
cmp
pop
subl
call
adc
jg
or
mov
dec
adc
or
and
jmp
cmpsl
loope
jle
mov
adc
pop
cli
mov
lret
add
int
loopne
daa
in
adc
loopne
pop
xor
or
out
popa
mov
mov
jne
pop
lods
add
pusha
push
je
pop
push
aaa
push
pop
adc
inc
lret
sbb
ret
xchg
insl
adc
mov
movsl
mov
sub
enter
push
pop
clc
stc
sbb
jo
aaa
xor
pop
or
cwtl
out
loopne
and
adc
cmpsb
and
or
popf
pop
sbb
ja
push
sub
xchg
push
insl
nop
dec
std
push
add
xchg
push
cmp
imul
push
cmp
mov
pushf
mov
lahf
imul
aad
and
cs
push
adc
ljmp
pop
stos
repz
js
xor
cmpl
shl
add
and
mov
and
add
cwtl
es
add
xor
pop
repz
js
int
imul
popa
pop
push
xchg
xor
cmc
sbb
add
setb
push
and
mov
push
stos
out
mov
jecxz
or
lcall
mov
mov
call
andl
sbb
jmp
add
xchg
mov
cmpl
orl
dec
mov
movsl
adc
jno
or
adc
and
stos
inc
cmc
dec
outsb
icebp
add
add
addb
mov
mov
xor
orl
std
dec
sub
mov
push
xor
sbb
dec
push
push
mov
in
add
push
pop
pop
addl
cmp
adc
int
cmp
shlb
sbb
push
and
jno
mov
cmp
popf
sub
mov
inc
and
mov
cmp
pushf
cmpsb
test
popf
test
lods
repz
push
mov
mov
xor
and
and
test
into
mov
mov
and
or
or
fistpll
js
pop
sbb
push
add
mov
ret
push
push
adc
dec
movlps
movsb
bound
push
insl
pop
aam
sub
lock
jnp
add
mov
cld
ret
daa
out
movsl
pop
icebp
mov
leave
int3
cmp
and
cwtl
jecxz
sub
ror
xchg
jmp
or
push
dec
int
mov
pop
std
pushf
mov
adc
pusha
mov
push
jl
and
clc
insl
dec
xlat
sti
add
xchg
push
fs
icebp
cmp
fnsave
jbe
xchg
and
cmc
test
inc
mov
xor
xchg
decl
jns
mov
daa
cltd
sbb
sbb
pop
dec
popa
adc
add
dec
cmc
mov
mov
int
inc
dec
ljmp
or
cli
jmp
xchg
mov
mov
or
inc
and
leave
pop
in
mov
add
fadd
clc
and
mov
outsl
lret
inc
add
call
mov
mov
popa
popf
ja
xchg
add
lods
pop
out
mov
add
lods
add
push
adc
push
sub
jae
inc
stc
mov
leave
notb
add
mov
push
loopne
and
mov
adc
imul
push
add
mov
popa
xchg
sbb
dec
cld
push
push
cmpsl
mov
test
and
pop
jge
mov
test
andl
scas
outsb
and
sahf
test
test
inc
and
lcall
add
mov
jb
addb
fldt
sbb
adc
push
jnp
jo
jp
testb
incb
ret
xor
aam
roll
sti
es
mov
adc
mov
cld
lock
mov
mov
mov
rcll
es
push
pop
pop
adc
or
les
ficoml
or
xchg
cmp
jmp
mov
fisttpl
sub
xor
sahf
orb
outsb
or
cltd
adc
test
xchg
xor
cmp
popf
add
jo
add
pop
out
loopne
imul
rorb
cmp
mov
pop
add
cmp
repz
or
xchg
jns
enter
addb
lds
pop
repz
lock
imul
shl
mov
and
stc
sbb
push
add
sbb
dec
into
aad
mov
add
stos
sbb
cwtl
xchg
mov
fldenv
xchg
andnps
or
sbb
fs
jmp
jmp
dec
add
in
push
add
adc
push
repnz
stc
push
je
iret
cmp
jb
jmp
aam
mov
cmp
repnz
dec
xchg
movsb
push
leave
dec
nop
insl
outsl
shl
cmp
dec
xlat
push
fwait
leave
js
mov
inc
and
or
cwtl
xchg
xor
add
push
cmpsb
xchg
lea
and
mov
and
push
sub
mov
add
nop
mov
test
inc
add
and
sub
mov
mov
daa
mov
pop
mov
adc
pop
in
inc
pop
inc
xchg
jae
push
xorl
xchg
and
nop
push
orb
movb
adc
pop
test
push
adc
cmp
add
jne
or
sbb
jno
shlb
pop
add
test
push
pop
rorb
into
cltd
push
add
mov
sub
js
jmp
test
sbb
movb
add
pop
mov
ljmp
jns
inc
and
and
and
inc
add
insl
xor
inc
sarb
pushf
push
mov
mov
inc
mov
mov
pop
nop
pusha
xlat
xchg
out
push
jo
popa
in
push
push
pop
cmc
in
push
sub
add
mov
or
inc
gs
orb
test
inc
xchg
add
ds
rcr
adc
mov
or
daa
pop
pop
out
or
push
sbb
add
popa
out
sarl
mov
push
mov
ret
fists
add
mov
dec
mov
xor
cmp
adc
mov
cmpb
into
or
push
out
loopne
fisttpll
push
fisubrs
int3
jns
add
stos
sti
loopne
sub
mov
out
loop
jge
mov
or
push
add
mov
mov
sub
or
sub
fisttpl
xchg
in
das
add
push
and
or
jmp
mov
xchg
lods
cmpb
jo
lahf
pop
scas
dec
jg
pop
adc
fadd
mov
push
hlt
xchg
sbb
mov
add
imul
data16
movsl
and
shll
dec
pop
or
mov
lcall
pop
mov
test
nop
in
pop
pusha
pop
rorb
xchg
mov
cmpsb
adc
xchg
jb
mov
fdivr
fldl
scas
test
pop
stos
and
jnp
lock
pop
jg
movsb
cltd
hlt
and
je
add
xchg
add
shlb
dec
pop
fcmovnb
subb
pop
in
add
push
pop
or
test
inc
push
mov
cmp
add
add
sbb
pusha
and
test
inc
pop
out
pop
push
rcrb
daa
cmpb
test
xchg
dec
scas
into
pop
add
mov
sub
popa
or
or
pushf
sub
or
popf
insl
stos
push
out
pop
popa
or
and
pop
and
adc
gs
lods
push
pop
outsb
outsb
or
addr16
mov
inc
and
jnp
mov
mov
cmp
dec
push
rcll
add
popf
sbb
xchg
das
mov
xchg
subl
dec
pop
popf
xchg
add
push
mov
andl
iret
nop
xchg
test
xchg
rcr
adc
das
mov
sub
pop
insb
dec
icebp
dec
cmp
xchg
clc
jge
push
inc
xor
sbbl
xchg
sbb
fnstsw
pop
add
inc
ret
rcrb
push
js
and
mov
test
lahf
cld
lds
mov
outsb
mov
adc
add
pop
mov
movsb
cld
imul
mov
rorb
arpl
int3
rorl
out
data16
faddl
rolb
js
pop
cltd
lea
xor
mov
adc
sbb
das
call
cmp
pop
jmp
leave
arpl
adc
les
daa
or
cmp
pop
aaa
stos
mov
sbb
pop
mov
pop
arpl
cmp
inc
pop
and
nop
in
or
or
std
faddl
push
cld
repz
adc
add
add
addr16
loope
jbe
dec
mov
daa
pop
arpl
adc
jle
inc
xchg
js
orb
sub
sarb
push
push
adcb
leave
inc
cli
jnp
pop
adc
push
mulb
or
cmp
mov
dec
mov
rorb
ss
pop
or
or
js
testl
xor
add
push
fcoms
negb
jbe
and
dec
and
int3
cli
jno
das
jmp
mov
lret
leave
dec
add
int
adc
sbb
adcb
xchg
iret
dec
sbb
xor
sub
pusha
mov
or
pop
and
mov
add
ss
hlt
scas
insl
add
inc
adc
leave
dec
fsubl
mov
xchg
push
test
repz
popa
jnp
jae
adc
sarl
add
mov
lcall
xor
add
repz
lock
aas
sbb
add
arpl
insb
jb
rolb
push
roll
stc
test
pop
adcl
das
sahf
add
bound
aad
dec
mov
adc
jo
push
es
bound
pop
xor
add
inc
fists
pop
mov
mov
jmp
mov
clc
jecxz
inc
or
and
rol
xorb
repnz
add
popl
sbb
fmulp
pop
cli
outsl
icebp
scas
loopne
push
or
ffreep
insl
xchg
ds
sub
xor
mov
out
daa
xor
mov
out
ret
dec
call
mov
stos
add
and
pop
fidivrl
and
sub
mov
xor
and
add
fwait
cmpsl
pop
cmp
js
mov
mov
and
push
inc
jmp
mov
mov
add
adc
cmp
stos
int3
inc
mov
xor
mov
je
and
bound
subb
add
pop
nop
jo
lods
inc
cs
out
loope
cmc
adcb
sub
popa
int
or
pushf
test
push
mov
mov
lods
fldl
pop
pusha
xorl
cld
add
imul
lea
inc
cmp
cmp
lods
sbbl
pushf
sub
mov
sbb
sub
add
push
xor
mov
ljmp
pop
pop
movsl
popa
pop
pop
iret
add
lods
adc
dec
lock
shl
mov
push
inc
xchg
subl
cmpl
shufps
popf
jge
insl
xor
out
pusha
orb
icebp
inc
mov
inc
out
or
cmp
add
ret
push
dec
or
sbb
xor
jge
in
add
xor
test
push
leave
adc
xor
jl
push
mov
ret
shl
push
push
out
jno
add
push
sarb
inc
sbbb
addb
push
pop
mov
xchg
sti
mov
cld
mov
outsl
pop
cmp
pop
inc
fstpl
push
sub
sub
add
rcrl
adc
push
ljmp
mov
adcl
xchg
insb
aas
lock
nop
xor
pop
sbb
xor
xchg
cli
xor
jmp
and
push
popa
popl
mov
outsb
decl
dec
das
es
jmp
mov
jecxz
inc
mov
fdivs
jge
add
mov
popa
push
js
mov
inc
push
add
adcb
loope
pop
js
dec
push
jne
xor
enter
or
push
js
pop
adcb
add
adc
jle
shlb
jbe
or
ljmp
mov
cmp
mov
pop
jno
jl
push
inc
or
jle
jb
pop
lret
sti
sub
push
addr16
int
loope
jo
sbb
cmp
xchg
ret
jge
or
and
cmp
jae
add
pop
mul
cmp
lret
inc
pop
sbb
pop
inc
jns
lock
jge
aas
mov
add
fstpl
add
jne
inc
pop
pusha
imul
js
test
push
sbb
and
jmp
push
push
sbb
ljmp
and
fs
inc
fdivrl
mov
sub
or
mov
out
loope
sub
lcall
lret
pop
enter
cmc
sbb
pusha
popa
fisubl
out
int3
jge
add
mov
xor
cmp
pop
mov
in
adc
movswl
in
xor
jne
xchg
push
push
ffreep
testl
insb
and
leave
inc
xorl
mov
dec
lock
inc
out
stos
mov
push
fsubrl
add
movsb
ror
out
jl
push
stc
pop
cmc
fs
and
orb
and
mov
xlat
sbbl
adc
xchg
fstpt
sub
aad
pop
filds
and
lcall
stos
and
mov
sarb
sub
xchg
push
and
mov
push
xchg
dec
add
orl
inc
hlt
loop
push
sti
jnp
cmp
cwtl
xor
mov
inc
and
stc
pop
or
shlb
sti
add
mov
xor
inc
jno
add
xchg
jge
lret
pusha
mov
xor
and
mov
jl
out
lods
repnz
ss
call
pop
adc
mov
je
sbb
inc
or
mov
push
push
rorl
and
mov
inc
hlt
mov
mov
add
push
mov
or
mov
pusha
push
xchg
cmpsl
cmp
and
lock
test
js
iret
popa
sbb
pop
push
sbb
mov
adc
adc
push
xchg
sti
add
add
nop
flds
les
sbb
add
repz
xchg
push
adc
add
inc
push
and
shrb
mov
repz
xor
sbb
inc
dec
shlb
loop
add
inc
ret
xchg
and
push
xor
rclb
dec
jo
mov
jmp
mov
xchg
nop
movsb
pop
or
rcl
call
add
outsl
and
scas
mov
dec
les
add
loope
add
sbb
je
sbb
repz
add
dec
pusha
mov
rolb
out
cli
add
popa
in
jl
nop
loop
xor
into
add
inc
in
shlb
jae
add
cvtpi2ps
popf
daa
inc
loopne
std
mov
repnz
pop
adc
and
ljmp
in
push
js
or
adc
xchg
cmc
ds
push
xorb
mov
push
mov
pusha
sub
xchg
stos
push
sub
xchg
jl
push
repz
jae
xor
shrb
inc
add
outsb
and
adc
mov
call
sbb
test
and
push
les
xchg
lret
pop
or
push
inc
insb
or
test
enter
test
mov
xchg
and
rclb
filds
cmp
add
pop
add
lock
rcr
add
sbb
js
arpl
movsl
lret
js
cmp
test
scas
rcrb
addb
sub
pushf
in
push
mov
leave
pop
push
xor
xor
adc
dec
pusha
sub
scas
and
and
xchg
adc
push
push
stc
mov
add
and
lret
loop
cmp
loopne
add
pop
loope
test
pop
cmpsl
lods
inc
xchg
pusha
push
adc
add
rcrl
or
stc
dec
test
aam
mov
imul
adc
push
test
out
sub
inc
or
fistpll
or
xor
sahf
and
inc
or
loope
dec
xlat
add
inc
shr
bound
imul
adc
add
xor
pop
sub
jl
outsb
mov
jge
mov
pushf
add
dec
je
rcl
pop
fisttps
mov
fwait
into
xchg
add
aad
jnp
add
fdivrs
xor
nop
sarb
xor
pushf
adc
add
js
adc
ljmp
cmc
jb
push
and
xor
lahf
ja
fldl
xlat
or
test
push
fldenv
fildl
fists
or
pop
popf
pop
adc
scas
mov
jnp
mov
pop
lock
gs
into
pop
xchg
sub
push
pop
rclb
outsl
popa
cs
mov
jo
sbb
push
mov
loope
stos
adcb
xchg
loop
pop
shlb
leave
sub
dec
bound
in
pusha
stos
push
popa
push
dec
add
lods
and
out
enter
mov
inc
sbb
xor
mov
popa
nop
pushf
and
jno
and
push
add
sbb
mov
loopne
xchg
inc
xchg
sub
inc
jmp
shl
sub
push
adc
xchg
add
ret
sub
mov
mov
bnd
ljmp
mov
pop
mov
fdivrs
mov
adc
fsubp
nop
loopne
test
or
leave
loop
jl
pop
mov
fnstenv
movsl
outsl
ja
jne
xchg
test
loop
and
movsb
rcll
sbb
fnsave
mov
jns
insb
jbe
scas
dec
in
add
push
dec
xchg
mov
or
xchg
test
mov
xor
mov
movsl
adc
add
jmp
mov
pop
fdivrp
pop
add
aad
sbb
sbb
mov
xchg
faddp
sub
pop
ret
loopne
cmp
dec
push
icebp
lret
into
add
sub
mov
xchg
addr16
in
and
cmp
and
lods
add
shrb
cmp
call
xchg
in
fdivrl
adc
add
add
pop
mov
pop
and
push
add
pop
pusha
in
pop
scas
push
sti
nop
push
addb
and
push
mov
add
frstpm(287
aam
mov
outsb
cmp
xor
lret
add
sub
xor
orl
add
scas
popa
loopne
ljmp
gs
scas
sub
test
xor
add
loop
mov
xor
out
adc
popl
cmp
jbe
sub
jecxz
ds
mov
bnd
push
mov
jecxz
add
xor
out
pop
pop
mov
cmp
cmp
mov
pop
mov
nop
mov
test
lret
add
dec
xorl
mov
scas
movsl
add
sti
insl
cmp
jo
repnz
push
lods
xchg
enter
mov
ds
mov
in
sar
jnp
push
cmp
mov
push
sub
pop
sub
or
pop
mov
cmp
adc
adc
mov
rcrl
sarb
rorb
add
mov
je
adc
add
dec
pop
mov
inc
in
aad
mov
loope
std
adc
aas
xchg
stos
js
cmpsl
icebp
jb
cmp
cmp
into
pusha
mov
xor
xchg
adc
inc
lods
and
popa
add
jp
lods
or
or
and
sub
fsubs
enter
dec
dec
aam
fsubs
test
fildll
rolb
pop
sbb
lds
mov
xchg
cld
mov
rolb
or
in
add
mov
push
sub
dec
or
xor
inc
in
mov
jle
sbb
dec
inc
mov
clc
int3
dec
xor
mov
push
rcrl
push
cmpl
aas
push
xor
sbb
push
test
cmp
xchg
into
cmp
inc
lods
cmp
sbb
ret
pop
mov
lret
or
adc
gs
push
mov
ja
sub
sbb
jl
inc
in
xor
int
sub
aaa
xor
pop
sahf
pop
cmpl
adc
je
out
or
stos
push
dec
orb
pop
lcall
xor
bound
pop
adc
push
cmp
leave
add
push
mov
cs
and
out
int3
mov
or
rorl
mov
xor
out
xchg
pop
das
dec
and
jge
xchg
cmp
inc
enter
or
push
aam
fmuls
mov
push
jle
cmc
push
jecxz
popa
hlt
add
mov
fisttpl
lret
pop
cmp
pop
lcall
loop
cs
stc
mov
add
and
imul
aad
mov
sti
inc
cmc
pusha
push
stos
xor
mov
add
xor
int
daa
pop
addr16
cmp
or
scas
cmp
add
mov
and
push
add
pop
loope
shll
mov
jo
jge
fsubrs
adc
inc
outsl
ss
add
fisttpl
in
mov
pop
leave
loop
pusha
inc
test
jge
add
inc
cltd
xor
cmp
xchg
popf
jno
dec
and
fcoms
add
and
in
sti
mov
fs
cmc
rcrb
add
gs
lods
xchg
imul
xchg
jns
add
mov
inc
lock
fcomps
add
xlat
adc
mov
shr
ja
ret
out
fs
or
dec
add
mov
aad
push
enter
fs
and
fcomps
shlb
pop
inc
adc
mov
repz
roll
je
loopne
icebp
or
push
js
subb
loope
cmc
xchg
add
xorb
dec
jo
and
sti
insb
add
insb
ds
push
lret
iret
cli
faddp
mov
fwait
jl
adc
test
in
pusha
repnz
add
adc
push
mov
loop
add
xor
xor
sub
mov
jae
push
andb
jp
add
test
jns
inc
pusha
jecxz
mov
ljmp
push
xor
xchg
pusha
in
sub
ret
add
incb
test
pushf
pop
mov
and
call
or
sbb
in
bound
adc
add
movsb
popa
imul
fsts
filds
mov
mov
test
ljmp
loope
lcall
jp
push
nop
call
cld
aaa
repnz
repnz
in
fcoms
loop
dec
add
xorl
and
lds
xchg
sbb
outsl
mov
mov
addr16
movsb
mov
inc
inc
aam
mov
mov
nop
mov
cmp
and
int3
cmpsl
mov
jle
pop
adc
aad
in
push
lcall
jno
mov
push
mov
mov
rol
xlat
bound
mov
jl
mov
xchg
xchg
sub
sbb
adc
jns
add
gs
out
push
mov
pop
data16
add
and
fildl
std
iret
dec
mov
fwait
jb
sbb
imul
add
test
xor
cld
mov
dec
out
fdivr
cmpb
jle
add
mov
push
rolb
or
enter
jmp
dec
xorb
in
ss
call
pop
dec
loop
jns
push
sub
nop
subl
add
mov
or
clc
mov
in
popf
mov
sub
lahf
add
push
xor
outsl
xchg
stos
ficoms
or
rclb
subl
loope
inc
clc
mov
das
add
jo
adc
mov
fnsave
cmp
stos
nop
cmp
mov
sbb
mov
call
add
cs
nop
sub
lcall
push
cmpsl
mov
mov
pop
hlt
mov
clc
xor
int3
stos
rcrb
pop
inc
imul
sbb
inc
arpl
inc
dec
icebp
fbstp
mov
xor
les
mov
fcomps
ret
or
stc
nop
adcb
pop
mov
in
das
sar
inc
pop
pusha
inc
insb
outsb
les
add
lods
enter
add
jo
fucomp
cmpb
mov
shrl
cmpsb
lret
lods
pop
popa
js
jecxz
je
mov
lods
and
push
add
xor
pop
mov
loop
addb
cmpl
push
push
les
mov
sub
in
je
nop
add
add
in
mov
pop
dec
das
sbb
pop
pop
data16
mov
daa
loop
sub
or
fadds
aas
mov
xchg
popf
lods
into
cmp
xchg
out
cmpl
jno
js
popf
xor
xlat
jl
jp
lret
and
adc
cmp
mov
adc
movsl
jle
sub
aaa
jg
cmp
stos
adc
cltd
pop
lock
jmp
add
xor
mov
jl
pop
jmp
lock
out
out
repz
xchg
mov
das
aad
adc
loopne
aas
pop
pop
test
lock
inc
mov
mov
dec
arpl
out
adcb
sub
mov
adcl
pop
popf
mov
push
xchg
pop
mov
add
fsubl
cmc
call
dec
xchg
aam
ds
jne
push
addr16
dec
cmpb
aas
jl
in
scas
add
sub
addr16
xchg
in
test
push
pop
js
aaa
add
push
out
in
mov
sub
arpl
dec
add
movsb
mov
pop
add
std
loopne
lods
fsubrl
xor
loop
pop
mov
and
popa
mov
add
ds
sbb
dec
xchg
xor
repz
inc
in
jmp
out
cmp
dec
dec
mov
dec
leave
popa
and
push
sub
mov
test
mov
cmp
imulb
outsb
or
test
ret
enter
imul
sbb
sub
mov
push
aam
mov
add
out
sahf
das
rcrl
add
inc
add
loop
mov
cld
mov
push
or
adc
push
popa
shlb
push
lcall
pop
div
or
in
or
loop
jl
rolb
clc
mov
ds
mov
int3
sbb
shll
shrb
and
jns
loope
mov
push
lret
inc
orb
sub
adc
jl
dec
sub
mov
or
inc
movsl
mov
pop
inc
cmp
adc
dec
sbb
test
mov
in
xchg
or
mov
pop
rcrl
inc
je
adc
mov
sti
mov
push
lret
dec
pop
sbb
or
or
lret
sbbb
inc
mov
mov
jo
pop
mov
add
mov
mov
pop
ljmp
xchg
pushf
shlb
into
mov
pop
xor
cmp
and
popf
dec
loop
cmp
adc
mov
or
add
cmp
mov
loope
jns
add
loop
sub
sahf
add
addr16
mov
popa
mov
shlb
mov
cmp
push
add
test
push
or
in
add
sti
dec
pushf
sbb
mov
or
in
inc
testl
add
test
in
dec
xchg
pop
inc
bnd
mov
rorl
add
cld
into
fnstenv
inc
mov
pop
or
aam
and
shlb
or
cmpb
dec
mov
dec
xchg
fcoml
int3
or
rcrb
cli
call
jg
mov
push
add
adcb
jae
xchg
xor
inc
sbb
testl
mov
push
test
sub
xlat
xchg
pop
fcomip
push
les
dec
out
leave
add
fiaddl
fdivs
adc
fidivl
test
ret
subb
mov
jge
add
loopne
gs
mov
lcall
sbb
push
shr
pop
add
cmp
jmp
ret
pop
jns
ror
insb
lret
add
sar
jge
jo
adc
arpl
adc
sub
xor
inc
push
insb
std
mov
fsubl
shl
pop
adc
dec
mov
lods
lea
addr16
pop
xor
test
orb
lods
xchg
lock
lods
sbb
jle
add
lock
fsts
cs
fwait
xor
xor
cmp
pop
push
push
xchg
add
inc
mov
mov
mov
cmpsl
mov
sbb
cltd
das
fwait
incb
xor
mov
aam
mov
sub
dec
add
xor
mov
fwait
jl
xchg
mov
dec
adc
stc
mov
mov
lods
leave
add
out
popa
fisubrs
add
call
and
test
aaa
sbb
add
xor
test
out
add
jns
add
jecxz
push
test
inc
cmp
adc
mov
dec
pop
jecxz
rorl
mov
xchg
push
icebp
sbb
lcall
sub
aad
sub
aam
icebp
pop
add
pusha
jp
iret
pop
sbb
int
pop
shlb
rcrb
fmull
jo
cmp
mov
add
imul
shrl
dec
adc
fnstenv
je
test
jle
add
ds
in
add
sub
xchg
es
repnz
pusha
nop
in
jle
adc
adc
and
shlb
mov
xchg
lock
pop
bound
dec
mov
push
cmp
enter
arpl
scas
pop
pop
xchg
aas
and
or
add
xchg
cmpb
pop
enter
out
add
es
sub
sbb
test
xlat
inc
jb
pop
and
jno
pop
adc
push
add
cmp
xchg
ret
cld
lods
add
pop
xchg
popa
pusha
dec
ja
and
adc
mov
or
add
adc
add
or
sbb
stc
das
rclb
shlb
mov
lret
shlb
loopne
push
sbb
add
mov
lock
call
pushf
add
jmp
cmp
cmp
push
loopne
xor
pushf
xchg
jb
stc
xor
adc
adc
and
inc
mov
add
in
jl,pt
fldt
adc
insb
and
inc
sbbl
mov
mov
jae
fildll
pop
into
mov
popa
pusha
fsubs
or
subb
ds
andb
jmp
dec
adc
mov
outsb
inc
call
pop
add
and
xchg
ljmp
loopne
jg
push
mov
movsb
aam
push
in
xchg
pop
ljmp
adc
dec
leave
shrb
push
mov
add
jecxz
mov
sti
dec
pop
cmpsb
mov
xor
filds
adc
cmp
push
fcomp
xchg
arpl
gs
nop
mov
rorb
xor
loopne
xchg
dec
jp
push
xchg
stos
sub
adcb
mov
hlt
add
sub
sbb
xchg
inc
fdivrl
xor
and
js
mov
fists
iret
mov
add
int3
xor
daa
in
or
and
xchg
sbb
add
inc
ljmp
stos
fwait
ds
dec
aam
xchg
cmp
fisttps
or
stc
sub
jns
sub
push
sbb
mov
fs
addl
gs
stos
or
in
jnp
inc
inc
fwait
add
xor
gs
push
add
mov
dec
or
pop
rolb
cmp
and
push
push
push
and
or
jmp
or
loopne
shlb
and
dec
outsb
aam
jge
push
subl
mov
fadd
pop
lcall
imul
loopne
cmp
xor
inc
mov
mov
add
fldt
sub
lock
fdivr
add
rcll
test
cld
add
push
rorb
adc
mov
cmp
jg
add
sbb
mov
xchg
or
aam
push
ficomps
loope
fdivrl
cmp
mov
lret
pop
pop
lock
pop
mov
add
push
sub
fadds
mov
cld
pop
pop
cmpb
cmpsb
mov
cmc
outsl
or
pusha
xchg
push
mov
pop
add
ljmp
mov
loopne
xchg
adc
inc
add
jge
daa
pop
cmovae
xchg
fcmovb
lret
cmp
cmp
add
xor
pop
pop
cmpsb
xchg
and
xchg
jl
or
inc
lods
es
lret
and
fldenv
sbb
std
xchg
and
jge
inc
dec
mov
sbb
xchg
shlb
popa
push
les
andb
sbb
lock
and
and
xor
mov
loop
mov
stc
mov
lock
outsl
push
fsqrt
lahf
in
xchg
and
add
mov
jmp
fcom
xchg
dec
mov
jae
mov
popa
pop
or
gs
in
popa
mov
add
mov
pop
and
push
xor
imul
clc
mov
push
leave
test
add
clc
addr16
aas
int3
subl
lock
inc
mov
rolb
xor
adc
push
push
call
adc
inc
xchg
add
push
fldcw
rcrl
mov
mov
mov
push
add
sbb
loopne
xor
xchg
pop
lock
mov
jnp
movsl
xchg
xor
fsubs
sub
cmp
pop
in
pusha
in
pop
cmp
jo
jnp
mov
xchg
inc
cmp
mov
sub
dec
adc
pop
add
in
mov
in
les
xchg
push
pop
add
lods
idiv
repnz
aam
and
fs
add
or
clc
sbb
or
mov
jecxz
idivb
push
xor
add
nop
xchg
je
add
jne
mov
and
clts
or
or
dec
icebp
pusha
jns
sbb
add
mov
add
xor
enter
pop
add
imul
jge
dec
enter
jge
scas
adc
add
pop
stc
bound
adc
xchg
test
dec
xlat
mov
add
mov
pop
cmp
xor
mov
mov
cld
popa
outsb
ret
dec
add
ss
cmp
clc
or
xor
out
fsubs
rorb
dec
lret
or
jae
in
mov
enter
jb
popf
mov
jp
adc
jl
add
fisttpll
xorl
sub
sub
test
push
cmp
pop
add
out
mov
pop
mov
mov
nop
adc
cmp
shrb
in
jge
add
inc
pop
jg
xchg
popa
pusha
std
aas
add
adcl
jne
xchg
pop
adc
sbbb
leave
fwait
adc
sub
push
and
add
adc
insl
mov
fwait
xchg
fsts
push
cmp
cwtl
into
mov
jmp
dec
cmp
adc
mov
std
call
mov
dec
mov
dec
je
pusha
clc
jle
scas
test
xchg
jae
lret
inc
mov
rorb
mov
andl
xor
adcb
mov
xor
daa
cmc
push
lock
shll
sbb
inc
add
fdiv
add
lea
cmpsb
iret
xor
insb
jle
mov
insl
faddl
in
adc
movsb
inc
push
incb
dec
add
insl
leave
fldpi
add
jge
cltd
int3
push
jnp,pt
cwtl
add
loope
xchg
pop
sbb
addr16
add
mov
jmp
je
test
lods
push
add
or
cld
adc
jb
pusha
push
rcrl
cmpsb
mov
or
mov
xchg
inc
gs
sbb
adc
and
shlb
aas
add
aam
cmp
xlat
pop
inc
dec
orb
mov
mov
xchg
mov
xor
pop
jnp
jo
pop
add
add
jo
add
lods
xchg
push
inc
das
add
mov
ltr
loope,pn
popa
or
nop
or
nop
push
ror
add
shlb
add
pop
sub
fdivl
fdivrl
and
int
pop
and
ljmp
dec
cmp
pusha
xchg
hlt
popf
xorl
xor
add
mov
loopne
inc
sub
cld
jge
sub
adc
push
inc
pushf
mov
pop
xchg
arpl
lock
pop
fcmovbe
dec
lods
pushf
je
jo
lahf
insb
xchg
sub
int
push
lock
xor
mov
lods
loopne
loope
xchg
jmp
mov
cmpsb
mov
adc
lea
outsb
xor
cmp
sti
xchg
lds
mov
or
xchg
mov
les
cmp
test
cmp
ds
and
lds
in
test
sub
out
testl
mov
pop
mov
mov
xlat
xorl
mov
inc
xchg
or
inc
adc
cld
mov
mov
mov
test
movsb
dec
push
adc
add
mov
in
add
mov
and
add
push
push
add
jb
gs
pop
sahf
nop
cmp
arpl
adc
add
sub
xor
push
bound
inc
lock
push
in
or
enter
sbb
jge
enter
adc
pop
mov
add
repz
shl
rolb
test
mov
or
inc
mov
push
push
xor
hlt
in
cmp
and
scas
fstps
jp
fcoms
insb
pop
adc
loopne
inc
add
cs
sub
or
and
or
inc
push
dec
dec
sbb
jge
cmp
inc
adc
or
testb
xor
popa
fs
pusha
or
pushf
mov
and
loop
sub
inc
push
int3
jne
outsb
insl
inc
dec
lea
das
push
in
rorb
pop
enter
add
push
mov
daa
sti
inc
test
ficoms
pusha
pop
adc
sahf
mov
and
jb
scas
and
push
mov
mov
dec
add
arpl
aaa
adc
inc
inc
es
sbb
rorb
mov
sub
jb
lahf
scas
pop
fdivrl
sub
test
adc
add
imul
aam
nop
add
dec
daa
xchg
adc
cs
fmull
xchg
inc
sbb
in
pusha
xchg
lea
push
and
push
xchg
fcomps
add
icebp
ficomps
xchg
je
jo
and
add
lods
movsb
inc
pop
insb
adc
ja
js
sbb
repz
js
add
push
inc
or
xchg
insl
rorb
add
repz
out
subb
dec
dec
ret
push
rclb
xor
mov
xor
bound
in
pusha
roll
jno
adc
iret
xchg
repz
outsl
xor
sbb
fs
scas
call
pusha
fistps
xor
sub
adc
pop
cs
cld
movsl
jns
mov
jge
push
xor
mov
xor
in
pop
push
push
inc
inc
rorl
pop
inc
clc
cmpsb
add
xor
adc
or
mov
addr16
add
mov
in
cmp
sbb
insl
adc
mov
gs
scas
popf
es
mov
and
hlt
ja
mov
mov
xchg
lds
repnz
mov
lods
sbb
or
int3
mov
rclb
adc
push
ficoms
rcrb
sbb
fsubl
cmp
adc
xchg
std
in
call
pop
push
lock
lret
stc
sbb
add
add
pop
push
icebp
nop
das
dec
mov
andb
leave
out
xchg
inc
faddl
faddl
add
cmp
xor
and
xchg
aaa
arpl
jno
hlt
fwait
lcall
or
addl
and
mov
les
push
dec
cmp
xchg
sub
enter
sub
mov
add
loop
jecxz
push
rcrb
push
xchg
jae
sub
lcall
xor
push
pop
xchg
je
out
add
nop
mov
pop
bound
loop
dec
loopne
jg
je
sub
out
sbb
lret
sbbb
jmp
js
dec
mov
xchg
sbb
stc
add
sub
je
movsl
addr16
imul
pop
mov
inc
jge
lods
sbb
cmp
mov
leave
mov
scas
loopne
jae
dec
push
rorb
out
les
dec
fwait
imul
subb
adc
enter
icebp
pop
xchg
jnp
cmpb
adc
inc
hlt
pop
shl
mov
loopne
add
jl
pop
mov
addb
outsb
jnp
or
xchg
into
xor
shll
adc
mov
pop
mov
or
mov
stos
cmp
or
fnstsw
mov
daa
mov
test
in
or
push
gs
das
mov
adc
icebp
push
mov
adc
xchg
pop
aad
add
shlb
add
ret
sub
jo
mov
mov
js
dec
xchg
movsb
sub
adc
ficompl
faddl
add
int3
scas
inc
ljmp
lret
dec
nop
add
aas
out
gs
pusha
pop
fwait
and
dec
in
pusha
lock
imulb
sbb
add
cmp
or
pop
jne,pt
in
std
sub
add
mov
mov
add
xchg
adc
mov
and
leave
fidivl
pop
hlt
cwtl
fiadds
shl
xor
out
xchg
in
jge
jl
addb
mov
movl
jmp
fstp
sbb
adc
clc
repnz
and
subb
movsb
int3
pop
sbb
fldcw
mov
xchg
add
add
aas
xchg
in
add
xchg
sbb
mov
je
jp
add
jns
adc
sub
adc
out
subb
or
pusha
and
pop
lods
cmpsb
mov
fcompl
jb
jecxz
mov
out
add
lods
test
out
outsb
les
push
mov
lcall
and
iret
negb
add
jmp
loop
jb
xsha256
cmpsb
shll
add
out
or
ljmp
fistl
lahf
mov
jl
sbb
ficomps
insb
add
adcb
pop
lods
mov
icebp
sub
push
popa
in
add
xor
sub
adc
push
cmp
test
jle
add
sub
jge
cli
or
dec
mov
and
pop
and
and
loopne
add
sub
mov
lcall
and
jae
mov
cmp
push
out
insb
add
xchg
inc
jl
aas
jge
cmpsl
xchg
repnz
into
sbb
fnstenv
sbb
js
das
pop
movsl
dec
pop
mov
js
cmp
adc
mov
je
jp
xchg
adc
daa
cmc
sbb
lock
jb
subb
mov
pushf
and
sub
js
inc
lea
mov
xchg
and
adc
pop
mulb
push
add
jno
sbb
repnz
cmp
xor
hlt
push
or
jne
sub
lock
mov
pusha
scas
push
pop
pop
cs
lahf
add
push
mov
mov
ret
sysenter
xchg
xor
sub
and
cmpsl
add
sub
gs
call
std
out
or
add
mov
loopne
cmpsl
out
enter
lret
cmp
mov
repnz
repnz
xor
in
fistl
adc
mov
sti
xchg
insl
dec
inc
mov
test
xor
sub
pop
add
dec
clc
add
mov
cmp
xchg
xchg
cmp
dec
hlt
test
push
and
push
in
movsl
add
xchg
fisubs
xchg
mov
adc
inc
push
fnsave
add
and
jnp
nop
dec
in
dec
xor
or
mov
dec
fmuls
iret
loope
int3
ss
push
or
dec
fnstenv
cmp
mov
mov
popf
call
ss
cwtl
out
aam
fcompl
aas
test
sbb
xor
or
sub
cmp
pop
push
loopne
loopne
je
dec
jl
shlb
inc
mov
aaa
mov
xorl
lea
sub
pop
add
in
clc
or
mov
xchg
adc
fsubr
call
pushf
or
jo
xchg
lahf
cmp
in
adcb
subl
sub
add
push
sub
xor
or
and
xor
scas
mov
ds
xchg
xchg
push
mov
mov
je,pn
add
jp
adc
pop
mov
pop
fwait
cmp
pop
push
xchg
cmp
add
or
xor
adc
pop
sbbb
jno
test
jl
mov
mov
jge
pop
mov
add
xor
sub
add
jbe
daa
rorl
sub
adc
arpl
add
iret
pop
repz
jns
sbb
push
mov
pusha
push
nop
enter
loop
sbb
cli
jne
xor
rcl
xor
sbb
adc
add
xchg
mov
or
pusha
mov
mov
decb
repnz
adc
jmp
repz
jle
in
dec
lock
es
in
mov
dec
add
push
mov
xlat
rolb
mov
xchg
data16
popf
mov
add
clc
cmpsb
movsl
mov
enter
fldcw
imul
lods
loopne
fiaddl
insl
shrb
dec
mov
xor
daa
cmp
cwtl
xor
in
jb
sbb
mov
and
mov
ret
lock
add
out
and
repnz
add
daa
sub
out
sbb
jns
mov
sub
push
add
loope
sub
xchg
shrl
les
mov
dec
jle
adc
data16
in
lahf
pop
push
hlt
outsl
add
add
add
repnz
mov
cmp
mov
cmp
or
int3
fstpl
fcmovb
xchg
andb
loopne
xor
test
insl
add
or
rcll
call
fistps
test
sub
mov
ja
sub
add
cmp
inc
lahf
rcr
andb
enter
arpl
sbb
add
dec
jno
xchg
lds
andb
pusha
push
mov
jo
pop
xor
jl,pn
dec
out
dec
push
enter
enter
fcoml
test
pop
sub
nop
mov
push
in
sub
test
add
int
std
idivb
cld
cld
xchg
sbb
lret
push
jecxz
cs
pop
cmpsb
fwait
add
mov
add
icebp
loope
in
sub
in
pop
xchg
loopne
pop
loope
test
test
pop
xor
movsb
add
push
mov
xlat
push
aam
pop
or
fistl
add
push
xor
sub
lea
nop
loope
xor
sbb
subl
orb
inc
jae
jge
or
add
xchg
adc
add
add
lret
xchg
ret
cmpsb
sub
cwtl
js
data16
pop
daa
enter
add
mov
lret
mov
loopne
push
adc
aas
fistpl
mov
lods
mov
in
pop
xlat
outsb
sbb
and
aas
pop
out
or
sub
movsb
lock
ljmp
lret
inc
push
mov
push
jno
test
or
jns
insl
fs
push
mov
xor
mov
andb
add
and
or
cmp
fwait
jp
add
out
aas
jecxz
add
jle
scas
pusha
call
popa
xor
xchg
insb
xor
dec
je
cmpsl
popf
mov
or
xchg
imul
fisubrs
aam
negl
test
mov
add
add
mov
push
push
mov
ja
pusha
in
pusha
adc
push
jno
ret
mov
fwait
xchg
pushf
dec
xchg
adc
adc
and
add
pop
shlb
shrl
aam
scas
dec
pop
inc
dec
rcll
cs
notb
push
sub
or
nop
adc
jp
add
mov
dec
sub
sahf
mov
mov
or
jae
pop
lock
jnp
add
shll
pop
cwtl
pop
push
pop
jl
leave
xor
loopne
fimuls
xchg
rcll
or
pop
inc
movsl
addr16
or
nop
inc
jbe
inc
cmp
movsb
pop
rcrb
notl
in
fmuls
inc
and
fwait
lods
cmp
pop
push
xchg
mov
or
cmc
addl
xor
add
out
int3
cld
dec
shll
dec
call
cmp
fildl
pop
sti
xchg
std
pop
test
pusha
stos
push
mov
add
movsb
mov
add
xlat
int3
dec
ds
mov
add
outsb
outsl
mov
jns
loop
js
mov
sbb
xchg
xchg
neg
in
loopne
iret
jbe
ret
pop
adc
sbbb
sub
sti
test
aas
pop
add
cmc
movb
movl
cwtl
adc
push
mov
and
stos
pop
xchg
push
pop
mov
dec
or
mov
fucomi
shrb
in
pop
mov
xchg
add
push
lock
outsl
xchg
dec
fchs
jns
sbb
add
jno
xorb
lock
push
and
cmp
rcrl
aas
mov
adc
in
fmuls
dec
push
fsubrs
addr16
dec
pop
mov
mov
cld
fadds
pushf
call
aas
popf
sbb
and
enter
fidivl
int3
push
outsl
push
loopne
and
pop
in
sbb
orb
dec
in
dec
ret
mov
pop
cld
jmp
sub
test
add
loope
into
data16
pop
cmp
cmpsb
leave
loopne
pop
add
popf
xchg
push
xor
push
add
or
mov
or
shl
xchg
fwait
mov
add
loop
insl
rcrb
fs
repz
and
pop
in
sahf
inc
mov
lea
aam
mov
test
pusha
mov
lret
fnstenv
pusha
xor
cmp
xor
and
aaa
pop
sub
xchg
add
scas
or
or
mov
adc
inc
jecxz
mov
outsb
lret
mov
repnz
xor
mov
pusha
xchg
scas
insl
xchg
xchg
clc
jo
cmpb
mov
in
mov
mov
sub
popa
in
lock
sbb
in
and
or
out
dec
pop
loopne
mov
addb
orb
sub
mov
and
imul
in
sub
push
or
popf
les
add
push
mov
xor
push
stos
pop
xchg
clc
out
and
inc
pusha
aad
push
mov
sti
dec
insb
add
fisubrl
addl
mov
stc
sub
or
lods
lods
cmpl
jl
adc
and
adc
pop
xchg
clc
adc
addl
mov
mov
repz
sub
js
jo
cmp
adc
lods
les
ljmp
int
xor
push
dec
add
jp
dec
mov
aam
add
jp
xor
adc
push
cmovp
shlb
ret
cld
or
leave
sub
xor
xor
popf
nop
adc
dec
cwtl
imul
add
push
adc
loopne
xchg
shl
inc
add
inc
insl
mov
xor
lcall
adc
aaa
mov
inc
test
cmp
jg
loop
cmpps
sbb
cli
bound
mov
xchg
xor
fiadds
add
stos
dec
mov
sarb
dec
push
call
sahf
inc
iret
mov
fs
incl
loopne
movb
imul
sbb
push
add
mov
mov
mov
lods
iret
jmp
xchg
rorb
subl
pop
xor
je
mov
adc
add
cmp
adc
shrl
sbb
nop
add
daa
repz
push
pop
push
adc
jo
add
out
and
add
inc
test
fdivl
mov
out
or
jle
jno
ror
jbe
add
cld
push
aam
mov
pop
insb
popa
in
dec
and
adc
add
pop
mov
xor
or
int
xlat
cli
or
inc
add
pushf
push
adc
inc
mov
dec
pop
pop
xchg
inc
gs
mov
int3
loope
push
leave
and
push
cmp
jl
pop
add
pusha
jnp
pop
push
rol
add
or
pop
lcall
testb
addr16
aam
adc
dec
mov
hlt
push
sahf
cmp
xlat
cmpsl
cmp
jno
push
xchg
cmp
imul
and
sub
repnz
pop
pop
mov
xchg
mov
inc
pop
push
cmp
inc
fsubl
xor
cmpsb
cltd
sub
test
add
or
cmp
push
lret
inc
enter
add
lcall
add
cmp
ret
inc
mov
pop
sarb
or
sahf
mov
dec
mov
and
or
cmp
rclb
sbb
cmpsb
dec
dec
push
or
inc
mov
mov
jb
mov
and
hlt
add
mov
pusha
adc
add
pop
scas
je
push
movsb
sahf
rolb
mov
ja
shlb
rclb
add
enter
out
xchg
lock
jns
das
mov
add
jno
add
andl
shll
mov
adc
inc
js
cld
pop
xor
mov
adc
mov
and
sahf
scas
add
and
mov
mov
mov
xor
jb
inc
lods
daa
bound
xlat
mov
adc
xor
mov
gs
cltd
add
js
jbe
fistpll
icebp
adc
xor
or
sbb
or
imul
push
add
mov
lahf
data16
jo
pop
lcall
fadds
pushf
add
mov
or
jno
call
add
xchg
xor
nop
mov
jle
les
add
rcrb
loopne
or
add
sbb
dec
stos
pushl
push
aas
stc
jns
add
mov
pusha
sub
push
ja
out
aas
test
adc
sub
lods
add
and
or
repz
out
xchg
push
mov
je
rolb
xchg
add
add
dec
mov
pop
cld
adc
in
add
fsubl
dec
xchg
mov
test
dec
lock
popa
adc
add
outsb
shlb
adc
iret
repnz
adc
add
mov
sub
iret
mov
arpl
dec
mov
add
jno
xchg
mov
lods
cmc
jne
scas
imul
mov
cmp
sub
js
sbb
pop
push
loope
in
cmp
pop
in
test
lods
and
push
fimuls
push
adc
mov
add
jbe
pop
mov
dec
xchg
test
cmc
push
cld
icebp
lock
inc
xor
adc
jns
mov
add
orb
and
jl
lret
xchg
nop
dec
in
and
test
loope
hlt
jmp
rcl
loopne
mov
sbb
xchg
jmp
sti
test
pusha
pop
push
mov
shrl
movsb
and
add
cs
cmp
and
fiaddl
addr16
cmp
sub
sub
ljmp
jecxz
pop
add
pop
jg
mov
jge
ret
or
outsl
xorl
cmp
loop
fdivl
pop
push
lahf
pop
cld
xchg
jmp
mov
push
pop
xchg
sti
adc
popf
fcoml
jecxz
mov
inc
iret
xor
js
add
addr16
loope
jp
push
jo
add
add
push
mov
mov
jmp
push
test
dec
inc
stos
pop
aad
cmp
cwtl
mov
dec
movsb
test
xor
cltd
lahf
jo
call
inc
ret
add
jne
jl
and
repz
shlb
sub
xor
or
xchg
push
arpl
mov
add
lods
add
repz
mov
xchg
and
cwtl
sub
incb
addr16
dec
incl
outsb
lock
inc
mov
mov
jns
sbb
add
mov
jmp
enter
jo
xchg
jae
pop
sarb
out
jle
mov
les
inc
pop
xlat
arpl
jge
pusha
pop
or
cmpsb
xchg
leave
popa
dec
xor
cmp
pop
add
pop
stos
push
add
aad
dec
jns
xchg
add
imul
xchg
xchg
pop
sub
add
jmp
lock
outsl
and
sbb
lidtl
int
adcb
pusha
pop
pusha
cmp
daa
mov
sub
and
adcl
xchg
add
dec
xorl
mov
or
in
sub
jo
add
les
lcall
inc
jl
push
xor
or
jo
dec
test
adc
add
push
pop
cmp
add
lods
call
and
adcb
and
cmp
inc
loop
push
sti
add
sub
jb
or
imul
mov
mov
loopne
jnp
fstl
add
hlt
xchg
mul
dec
stc
xor
mov
repnz
xor
mov
nop
cltd
push
add
sti
xor
mov
inc
cmp
dec
shl
mov
or
dec
push
ret
inc
cmp
in
add
xchg
mov
ss
dec
cmp
mov
sti
or
shlb
inc
push
mov
add
push
int
pop
xlat
xchg
adc
ret
cld
les
inc
das
repz
cmpsl
jnp
xor
enter
pop
adc
add
mov
inc
arpl
dec
popa
inc
cmp
sarb
test
jecxz
push
das
jg
xchg
cmp
movsl
test
add
mov
pusha
fsubs
pop
cli
add
push
jmp
aad
dec
pop
adc
sbbl
inc
and
ja
aad
mov
and
and
jl
add
jne
sar
xchg
mov
add
inc
lock
or
pop
cmpb
jg
mov
sbbb
dec
mov
cmpb
mov
xchg
addr16
jle
add
mov
scas
mov
jl
fcomp
jns
sbb
nop
test
add
xchg
pop
add
aaa
rolb
or
nop
sti
sub
pop
sbbb
sub
push
aam
adc
push
adc
sti
xchg
aam
jmp
xchg
and
add
or
in
rol
inc
or
pop
mov
mov
orb
adc
sbb
sbbl
rolb
out
pop
xlat
in
pushf
mov
pop
add
push
xor
pop
jmp
hlt
shll
subl
in
sbb
cmp
ret
shrl
push
in
jl
negl
hlt
dec
adc
dec
xor
add
add
inc
inc
sub
bnd
dec
push
cltd
mov
les
jge
add
lahf
pop
fisubs
and
cmpsb
dec
je
imul
cli
add
jns
mov
mov
pop
dec
aas
or
roll
insb
enter
nop
outsl
mov
sbb
cmpsb
mov
mov
xchg
adc
and
jp
test
aad
fbld
mov
or
mov
push
jp
xor
dec
in
in
mov
and
xchg
sbb
mov
pop
outsb
lock
xchg
stos
scas
repnz
aaa
xchg
rcrl
adc
cmp
dec
insb
arpl
lea
or
aas
pop
fsubl
pmaxub
mov
js
mov
dec
rol
mov
add
lds
and
pusha
pop
mov
ja
inc
clc
xchg
push
inc
sub
cli
mov
out
xchg
clc
test
jge
and
jle
pushf
or
sub
shlb
cmp
and
fdivrl
je
pusha
xlat
push
or
jmp
fwait
jle
and
lock
cmp
and
enter
repnz
mov
sarb
inc
mov
cmp
pusha
fimuls
pop
aad
sub
mov
push
repz
jmp
xor
mov
movsb
or
loopne
call
jle
mov
mov
int3
pop
aas
es
mov
out
jle
loopne
inc
sub
fiaddl
pusha
movsl
adc
add
in
xor
cmpsb
imul
addb
inc
cmp
aaa
xchg
sbb
sub
push
enter
dec
fisttps
ss
jmp
rorb
jne
add
pusha
add
stos
test
sub
sub
add
addl
imul
or
pop
test
jae
orb
or
mov
and
or
fcomps
rol
pop
out
push
popf
pop
push
ficoml
test
add
adc
pop
mov
popf
mov
jg
push
xorl
xor
shll
pop
pop
mov
push
pop
adcb
movsl
sbb
lods
call
pop
and
cmpsl
enter
jnp
jo
add
pop
mov
mov
mov
mov
scas
jecxz
inc
int3
lods
int3
add
add
pop
cmc
imul
or
add
dec
test
lret
adcl
pushf
nop
sub
pop
and
xchg
cmpsl
repnz
and
fnstcw
xor
mov
in
add
repz
inc
movsb
std
dec
mov
les
sub
out
repz
mov
ret
or
push
lahf
mov
add
ds
sbb
lock
mov
stos
or
mov
and
cmp
dec
xor
aam
jle
mov
sub
push
xsha1
cmpsb
lret
stc
jo
xor
push
scas
and
add
mov
pop
enter
scas
adc
mov
jle
fiadds
mov
sub
aad
push
cmpsl
add
repz
push
add
inc
or
rorl
str
xchg
add
insb
cmp
and
andb
jmp
clc
dec
test
shrb
jmp
sub
adc
cmpsl
and
subb
mov
das
cltd
mov
daa
and
mov
mov
repz
loopne
sub
inc
add
mov
jb
mov
add
cmpsb
cli
xor
lret
mov
in
cs
cmp
jecxz
arpl
test
pushf
les
adc
and
sub
fldl
xchg
jae
jae
loopne
adc
lods
call
je
or
pop
sarl
lahf
jns
dec
mov
mov
mov
lea
fnstcw
add
cli
cs
dec
fbld
outsl
sbb
or
adc
scas
inc
jbe
xor
xchg
pop
outsl
int
call
enter
shr
add
aas
cmc
test
aaa
and
lods
lret
cs
popa
push
and
adc
dec
out
mov
inc
je
outsb
pusha
std
and
push
pop
aad
insl
pop
fs
pusha
pop
cmp
imul
jecxz
cmpsb
add
lret
jle
jmp
adcb
addb
sub
popa
out
or
fdivrl
movsb
subb
scas
jbe
imul
and
push
push
jo
ret
scas
call
loopne
or
add
imul
movsb
daa
fstl
nop
icebp
cs
fdivrs
or
adc
nop
dec
pop
subl
jle
inc
sbb
loop
imul
repnz
dec
push
mov
sub
test
loop
in
add
jae
or
iret
fimull
dec
inc
in
stc
in
fiaddl
inc
xchg
repz
push
les
or
jmp
out
push
mov
xchg
pop
lahf
jp
xor
pop
mov
inc
sbb
movsl
sbb
testl
inc
jecxz
dec
outsb
call
fwait
mov
sbb
fwait
pushf
pop
jo
add
fwait
xor
cmp
and
xchg
inc
nop
sbb
sub
cmp
cmp
sbb
pusha
or
nop
mov
sbb
pop
loop
xor
push
add
sub
xor
mov
xchg
popf
or
sub
pusha
dec
cmpsl
je
xor
mov
mov
call
add
sbb
test
cltd
or
or
jp
das
jmp
andb
js
lods
adc
aad
mov
jno
pop
mov
or
aam
sbb
jp
sub
xchg
mov
and
jbe
jo
stos
call
add
movsl
cmp
imul
mov
outsl
dec
lds
dec
addl
das
xchg
pop
or
jp
dec
jnp
xor
inc
xor
adc
mov
bound
mov
sti
mov
push
and
outsb
test
sub
and
int3
mov
pop
dec
mov
or
add
js
or
in
dec
push
pop
jp
sub
cs
insl
push
mov
lods
sahf
in
inc
xchg
cmc
mov
push
movsb
lock
call
fs
movsb
inc
add
add
add
aam
addr16
filds
mov
ret
add
fisttpll
gs
adc
out
adc
cs
shlb
fnstenv
pop
cld
pop
jg
mov
sub
add
sti
int
xchg
loopne
dec
cmp
mov
pop
fs
jns
sbb
push
mov
adc
adc
in
add
insb
cmp
pusha
xor
lods
dec
or
dec
xchg
and
popa
nop
fs
adcl
adc
cld
or
or
aam
cmp
mov
rorl
fs
clc
rol
add
mov
ror
pusha
sub
push
cmp
fcoms
scas
test
mov
mov
jno
add
into
ja
lret
add
mov
jno
add
aaa
test
mov
lret
mov
and
dec
add
arpl
cmp
xchg
sarb
or
inc
sti
leave
cmpsb
lret
xor
or
adc
inc
push
and
daa
jae
jae
stos
mov
or
inc
fstps
mov
icebp
push
fsubp
shrb
dec
rcll
flds
jge
xor
jb
mov
fs
das
add
push
daa
adc
jmp
sbb
enter
mov
mov
lret
outsb
or
clc
aaa
orb
mov
sbb
dec
push
lock
cmp
pop
xchg
jnp
adc
lea
out
sub
mov
mov
clc
add
cmpb
xor
rolb
add
jno
mov
push
lods
inc
lods
sbb
lock
js
or
cmp
mov
xor
xchg
sbb
add
add
cli
cmpsb
mov
pop
testb
in
or
inc
jle
fimuls
jbe
cmp
pop
lds
les
inc
jecxz
cs
dec
stos
jb
and
fidivs
pop
push
adc
enter
add
movl
in
add
shl
sub
push
iret
push
pop
enter
push
cli
jns
or
decl
mov
mov
adc
dec
je
adc
mov
addl
aad
cmp
add
jbe
mov
xor
mov
in
push
xchg
add
bound
jge
ret
popa
addl
pop
mov
add
cmpb
cs
adc
daa
pop
jns
add
in
jl
stc
add
sub
mov
mov
pop
loope
cmp
push
or
mov
call
dec
popa
mov
adcb
push
pusha
int3
pop
xchg
dec
pusha
dec
adc
out
xchg
std
aad
dec
scas
lods
js
add
in
test
push
pop
mov
cmp
inc
out
scas
ret
or
sbb
cmc
fstps
roll
mov
std
loop
pop
jecxz
pop
aam
pusha
mov
insb
je
push
mov
mov
jbe
adc
pusha
test
inc
mov
hlt
mov
inc
xchg
insb
pop
shr
movb
mov
fisttpll
mov
push
mov
pop
add
loope
mov
mov
cwtl
cmpl
push
pop
out
push
cli
fiadds
push
in
stos
cmp
or
and
test
dec
push
insl
repz
inc
int
add
shrl
or
pop
insl
dec
pusha
and
orl
mov
push
add
enter
pop
scas
faddp
mov
out
xlat
pop
out
or
or
mov
or
testb
cmp
mov
jecxz
mov
and
sbb
aas
andb
xor
and
mov
add
insb
daa
and
testl
xor
sbb
outsl
rorl
sub
lret
sbb
aaa
aas
add
push
shr
lock
add
add
cli
test
aaa
mov
dec
mov
add
lds
and
ljmp
cmp
loopne
sub
pop
test
adc
test
loope
inc
add
xorb
subl
jae
xor
push
les
lock
mov
add
popf
mov
test
xchg
mull
lahf
pusha
inc
mov
pop
pop
repnz
add
out
mov
inc
dec
mov
add
xchg
imul
add
adcb
xor
stos
sarl
popf
xor
cmp
jmp
cmpsb
jmp
repnz
add
add
sub
sti
adc
mov
popf
stos
adc
loope
pusha
cmpl
mov
or
mov
sub
sbb
add
inc
xor
es
cmp
jecxz
push
sbb
push
xor
lcall
int
adc
cli
add
aad
add
push
std
inc
fcoml
mov
movsb
mov
lret
pop
addb
sub
popa
xor
add
xor
outsl
jp
push
sub
push
outsl
shrb
adc
pop
call
in
int
repnz
in
xchg
fildl
je
jp
jmp
or
nop
pop
faddl
sub
pop
leave
hlt
add
addl
rclb
mov
cmpb
push
sbb
stos
fwait
mov
loope
pop
push
adc
fimull
jle
add
ja
mov
cmpb
jno
add
sbb
addl
lcall
clc
mov
and
mov
lcall
fsts
add
cmp
cmp
and
xchg
sbb
popa
mov
sub
insl
mov
add
and
cld
aad
or
popa
mov
jp
rcrl
dec
xchg
ja
mov
daa
xlat
outsb
or
std
adc
incl
pop
pop
sub
mov
pop
mov
popf
popa
data16
cmp
ljmp
lods
mov
lea
add
idivb
push
out
pop
jmp
data16
js
ljmp
xchg
pop
shll
nop
jmp
or
fisubs
shrl
popa
inc
out
rclb
sub
cmp
cld
mov
inc
dec
push
faddl
xor
mov
call
push
std
outsl
movsb
pop
nop
ret
sub
add
mov
mov
fsubs
add
test
popa
ror
popa
fiadds
add
test
clc
or
xchg
dec
and
fildl
lods
inc
adc
adc
jmp
test
cwtl
rcl
sbb
push
push
push
xor
xor
addl
call
nop
aas
dec
adc
pop
rorb
jecxz
ja
andl
sub
shlb
sbb
pop
adc
inc
push
sbb
mov
aam
faddl
push
push
jae
stos
xor
pusha
cld
sub
sub
test
mov
xor
inc
loopne
mov
adc
adc
aad
or
xor
dec
mov
xor
jle
mov
xchg
and
mov
pushf
jecxz
bound
sbb
inc
adc
stos
lcall
int3
ljmp
out
iret
imul
push
push
popa
lea
cmc
dec
jge
mov
mov
test
inc
andl
sub
dec
mov
inc
jbe
push
ja
add
add
lods
adc
push
sbb
test
stos
ror
mov
es
inc
jb
xchg
decb
or
mov
inc
and
jg,pn
ds
sub
adc
inc
jp
add
cs
dec
gs
jns
pop
bound
test
and
mov
jo
jp
inc
mov
dec
xchg
hlt
ljmp
sbb
inc
lret
push
cmp
test
push
push
stos
pop
add
and
mov
dec
aad
and
dec
sbb
outsl
stos
add
mov
insl
mov
pop
ljmp
jne
add
and
mov
xchg
ljmp
mov
cmp
mov
cmpsb
xor
xchg
ljmp
add
sbb
cs
cmp
adc
in
arpl
mov
inc
or
and
and
xchg
jmp
add
or
mov
push
mov
std
scas
mov
add
mov
add
pop
xchg
and
mov
jno
push
add
xchg
ljmp
bound
push
pop
inc
cmp
cwtl
inc
adc
test
addb
sub
inc
and
pop
add
repz
sub
and
scas
cld
out
fsubl
or
xchg
add
add
adc
xor
sbb
dec
mov
push
pop
sbb
dec
add
and
dec
sbbb
fildl
and
or
cwtl
pop
jle
cmpsl
add
pusha
mov
rolb
or
inc
sub
subb
addr16
mov
mov
mov
xor
inc
sbb
es
test
inc
out
sbb
insl
les
fistpl
leave
jne
imull
mov
adc
shr
add
stos
pop
mov
int
mov
mov
test
and
nop
int
adc
dec
out
sub
adc
mov
iret
push
nop
and
and
push
cmp
test
gs
fxch
jle
js
mov
mov
add
jb
clc
es
nop
or
int
loopne
lcall
lods
test
push
jb
rclb
aad
add
adc
mov
jp
andb
push
and
add
cmp
xchg
lret
enter
dec
jle
ret
das
jge
pop
lret
pop
add
outsb
adc
inc
mov
inc
outsl
cwtl
daa
pop
lea
fisttpl
pop
push
jnp
js
stos
add
jl
push
shlw
sub
mov
inc
hlt
add
add
mov
loop
daa
mov
push
sbb
addr16
mov
icebp
jo
cmc
dec
das
dec
sbb
or
loop
jnp
jns
and
mov
aam
mov
test
xchg
and
dec
inc
or
xchg
cmc
adc
shlb
pop
xor
test
add
popf
pop
sbb
add
pop
fwait
xchg
mov
adc
cmp
lods
shrb
fdivrp
mov
xor
xchg
inc
jb
and
xchg
decb
int
mov
shlb
mov
jne
adc
inc
movsl
int3
outsb
or
jmp
and
out
cmp
mov
adc
dec
or
or
mov
cmpl
mov
pusha
das
push
mov
aas
es
std
xchg
mov
sbb
adc
sti
jg
cld
mov
mov
mov
jg
adc
or
push
arpl
inc
filds
push
adc
mov
sub
or
inc
loope
pop
jmp
and
and
sub
test
lods
xor
jns
fmul
xor
and
jo
push
jnp
push
add
adc
dec
ftst
jno
pop
xchg
hlt
loop
push
inc
add
sub
mov
xchg
sarb
inc
rcr
jecxz
push
daa
xor
pop
mov
cmp
mov
pop
add
in
pop
stos
shll
xchg
mov
add
fdiv
notl
addl
mov
scas
fadds
xor
add
add
pop
sub
add
addr16
cwtl
fwait
hlt
sbb
add
mov
sbb
pop
xor
xchg
push
sbb
fnstenv
jne
mov
negl
mov
cmp
inc
mov
test
mov
sub
adc
mov
mov
inc
adc
add
push
movsl
sbb
nop
inc
and
adc
jns
push
sub
mov
out
inc
dec
fistpl
mov
test
jb
mov
add
nop
fwait
pop
xor
mov
out
imul
push
mov
mov
ret
sub
jbe
lock
scas
push
sets
pause
loop
popf
dec
test
pusha
sub
std
inc
xor
push
ljmp
push
adc
xchg
push
mov
pop
imul
lret
popf
pop
sub
test
sbb
jnp
ds
je
pop
xchg
sbb
leave
add
stc
xor
subb
mov
addb
adc
mov
dec
fdivrl
shrl
fwait
pop
xorb
xchg
mov
inc
dec
mov
les
pop
adc
mov
data16
in
incb
and
add
xchg
repz
jmp
clc
cld
popf
adc
inc
mov
cli
aas
adc
add
pushf
je
push
lahf
pop
xchg
test
sbbl
andb
add
pusha
arpl
mov
or
sub
add
push
mov
daa
fprem1
inc
adc
mov
xor
popa
bound
sub
xor
sahf
js
or
int
push
hlt
jne
nop
enter
sub
lea
je
stos
mov
sub
or
adcl
or
out
pop
testb
sbb
inc
ficoml
test
push
and
nop
repnz
mov
xorb
push
jb
inc
or
xchg
adc
dec
and
test
insl
in
ljmp
filds
pop
roll
cwtl
mov
imul
push
push
add
push
push
shrb
push
pop
stos
and
mov
sub
pop
cli
imul
pop
cmpsl
mov
lret
adc
push
or
test
pop
push
xchg
jne
fcmovne
mov
jae
icebp
mov
xlat
mov
jo
bnd
sbb
movsb
jo
sbb
pop
sub
xchg
ret
inc
mov
mov
ret
or
mov
rcl
movsl
in
push
dec
add
mov
je
fs
lock
mov
sahf
xchg
je
add
es
or
pop
xor
cs
flds
jbe
add
sbb
push
mov
xchg
lcall
mov
pop
stos
movsb
sub
pusha
jo
loope
mov
ficompl
cmc
sbb
cmp
fwait
xchg
jecxz
adcb
pop
je
mov
lods
rclb
insl
or
mov
shlb
test
inc
sbb
cmp
adcl
push
fs
sbb
movsb
repnz
push
stos
out
aas
pop
jo
push
fsubl
in
mov
jnp
inc
mov
add
call
test
aas
jno
sbb
adc
mov
mov
clc
std
cmpsb
scas
xchg
mov
xchg
test
xor
push
inc
loop
xchg
adc
push
testb
incb
jge
cwtl
push
mov
es
mov
pop
fwait
inc
pop
mov
dec
or
dec
xchg
es
pop
call
insl
add
dec
insb
mov
mov
jg
inc
adc
add
jecxz
sti
xchg
je,pn
or
push
mov
ja
jge
xor
out
adc
pop
xor
mov
arpl
cmp
outsl
and
jno
ljmp
in
mov
jmp
imul
pop
negb
add
jge
popf
dec
jl
add
push
andl
je
imul
xchg
cmp
or
sbb
fiaddl
pop
xchg
mov
loopne
mov
cmp
jg
cs
lcall
idivl
ljmp
add
enter
shr
pop
pop
xchg
inc
mov
arpl
subl
rorl
push
ret
das
loopne
mov
fwait
push
test
adc
test
fistpl
adc
mov
pop
mov
shr
fwait
addb
add
mov
fdivl
jne
dec
mov
imul
movsb
dec
repnz
stc
xchg
test
xchg
fbld
test
mov
mov
loopne
mov
add
and
cmp
mov
out
dec
insb
add
xchg
xor
popf
jno
movsb
lret
adc
pop
adc
jle
add
push
not
outsl
and
mov
imul
jmp
sbb
mov
out
adc
stos
loop
cmp
sahf
aad
pusha
mov
push
adc
inc
in
mov
aas
aam
jmp
push
mov
xor
xchg
or
cmc
ret
shlb
dec
pop
fiaddl
enter
xor
jmp
or
fadd
mov
imul
mov
adc
or
jmp
pop
xor
sbbb
add
pop
hlt
xchg
pop
arpl
xor
mov
add
add
pop
mov
xor
imul
jb
xor
jne
lods
test
adc
xor
and
fsubrs
lods
sbb
stos
leave
pusha
add
in
push
fstpl
push
movsb
out
loope
sub
enter
rcr
and
or
add
into
mov
mov
pop
rcll
push
fiadds
testl
mov
jg
lods
mov
lds
rcrl
push
cmpsl
dec
xchg
inc
xor
loopne
adc
mov
push
pop
mov
sbb
addb
adc
adc
dec
add
mov
push
pusha
push
imul
pop
push
fsts
movsl
popa
mov
aad
pushl
clc
jb
repnz
add
mov
xor
add
stc
ljmp
pextrw
add
stc
adc
sub
sub
jmp
push
and
cmpsb
push
adcb
and
call
and
sbb
inc
or
lea
insl
mov
xor
inc
jp
adc
roll
mov
add
fxam
cmp
das
xor
clc
or
arpl
punpcklbw
xlat
pop
add
dec
xor
cs
or
dec
sbb
pusha
jl
mov
out
push
int3
xchg
dec
call
mov
jl
lahf
sub
xchg
cld
adc
clc
sub
add
inc
mov
add
f2xm1
pop
mulb
xchg
jae
mov
mov
xor
mov
pop
xchg
lcall
pop
dec
jb
mov
inc
popf
mov
rolb
push
inc
push
sbb
xchg
inc
scas
daa
mov
adc
ljmp
and
xor
mov
add
xor
sti
mov
mov
rorl
fstl
scas
pmulhw
test
repnz
xchg
notl
xor
sahf
xchg
les
push
xor
aad
push
and
lds
and
inc
rcll
popa
mov
aaa
clc
or
imul
or
lret
adc
mov
enter
fistl
mov
xchg
stc
xchg
or
pushl
adc
fmuls
test
xchg
push
jp
fs
mov
and
sbb
push
mov
ret
push
jbe
faddl
mov
mov
and
mov
pop
popf
xor
or
add
push
mov
testl
mov
bound
jmp
sub
out
mov
jno
jne
mov
xchg
rcrb
dec
mov
mov
xchg
outsl
jne
cs
cmc
rcrl
add
jo
mov
stc
adc
mov
aam
cmp
sub
popf
xor
nop
sbb
mov
das
and
or
mov
or
in
or
inc
dec
jmp
mov
pushf
and
pop
lds
jl
movsl
sbb
dec
add
and
lahf
jno
fcomps
loop
sbb
add
pop
pop
mov
mov
xlat
or
clc
sub
dec
flds
insl
xchg
outsb
hlt
add
ljmp
xchg
xor
fiadds
add
cs
fistps
aam
add
stc
jg
add
jg
in
mov
adc
dec
cmpsb
push
mov
cmc
fwait
lds
or
and
pop
mov
cmpsl
xchg
fcoms
cld
out
lcall
or
test
and
ret
and
jecxz
mov
fildll
jmp
stc
push
mov
push
ds
cmc
cmp
icebp
adc
adc
lods
sahf
add
sbb
gs
punpckldq
dec
mov
sbbl
inc
push
xor
and
das
xchg
mov
stos
lods
sarb
out
sub
inc
int3
dec
jmp
xor
out
or
popf
pop
scas
stos
jae
int
add
pop
les
add
aam
fsub
mov
add
cmp
and
adc
mov
mov
mov
in
push
test
jecxz
out
xchg
add
push
cld
push
out
add
mov
mov
sub
sbb
xchg
adc
fisttpl
popf
loop
lock
fs
cmp
jb
roll
inc
pop
sub
or
lods
add
adc
lods
js
xchg
mov
inc
cmp
push
lcall
xchg
cmp
mov
enter
push
pop
mov
add
xchg
stos
in
push
mov
pop
push
jae
addb
push
pop
mov
mov
pop
push
mov
pushf
pop
mov
sarl
jo
ss
lahf
call
in
arpl
pop
push
mov
sub
jo
dec
and
cwtl
push
daa
test
sbb
and
push
bnd
add
stc
mov
adc
mov
pushf
mov
pop
outsb
cli
scas
dec
mov
dec
mulb
icebp
out
dec
testl
sub
sti
inc
pop
mov
std
dec
sti
sub
cmp
dec
push
call
mov
push
sbb
push
sbb
and
fisubl
and
push
pop
popa
imull
adcb
ret
sub
cmpsb
xor
dec
into
sbb
jb
clc
pop
ret
dec
mov
jge
or
mov
push
adc
outsb
adc
xchg
mov
pop
or
cli
xchg
gs
aad
daa
add
pusha
dec
xchg
jae
jg
sbb
loope
push
pop
xor
mov
lock
pop
cmp
sahf
cmpsl
aaa
bound
aas
xchg
pop
push
add
mov
mov
mov
mov
fadds
cwtl
mov
ljmp
add
in
fisubl
xchg
sub
push
cmc
push
dec
cs
xchg
push
popf
pop
cs
mov
clc
push
mov
xchg
outsl
incb
iret
mov
in
aas
sar
idivl
call
mov
mov
sbb
repz
push
sbb
daa
insb
lcall
aam
add
mov
ja
mov
test
leave
cli
mov
stc
sub
or
sbb
es
ss
pop
mov
xchg
xchg
add
pop
jae
add
in
or
add
cmpsl
pop
and
ret
jne
adc
popf
pusha
inc
push
xor
pop
popa
call
cmc
adc
daa
mov
pop
pop
jmp
xorl
rorb
jg
sbb
lret
lcall
push
sub
or
fisubl
adc
push
inc
fucomp
adc
mov
sahf
inc
push
fistpll
cmpsl
jl
dec
cmpl
bound
gs
xchg
xchg
in
pop
sub
or
roll
call
or
mov
xchg
jns
add
cmp
lret
sub
jbe
scas
outsl
in
inc
lods
aam
jns
aaa
dec
subl
imul
dec
jmp
addr16
js
cmpsb
push
stos
pusha
xchg
movsb
inc
pop
add
movsl
inc
jmp
leave
jo
das
ficoms
xchg
ret
pop
daa
sub
inc
lcall
push
add
jbe
mov
idivb
into
xchg
in
push
push
aam
and
xchg
cmp
pop
add
mov
cmp
sub
or
add
cmp
xchg
cmp
or
addr16
popf
mov
test
mov
mov
push
add
jl
sbb
adc
pop
js
das
leave
adc
fs
add
jle
xor
call
xchg
inc
sub
jmp
cwtl
inc
nop
adc
cmpb
pop
pop
mov
xchg
sbb
xchg
repz
xor
cmp
outsl
sub
shrb
mov
or
add
pushf
mov
add
or
andb
fistps
add
jne
mov
sub
jmp
add
jo
dec
xor
xchg
nop
loope
int3
add
stc
dec
push
ss
sahf
push
add
je
push
push
jno
popf
mov
sbb
pop
cmp
inc
mov
popf
xchg
dec
lahf
testb
fiadds
aad
and
push
adc
daa
jmp
mov
test
push
pop
pop
mov
xor
xor
sbb
sti
outsl
add
xor
inc
cmp
push
frstor
cmp
add
shl
and
mov
sub
fstp
or
rcrb
rcll
pop
aas
and
add
pop
push
adc
jo
fisubrl
je
jmp
aad
pop
aad
into
orl
rcll
dec
push
lret
cmp
or
icebp
jno
xchg
int
iret
loopne
cs
sub
add
inc
cld
mov
test
add
add
int
or
cmpsb
push
pop
dec
nop
mov
add
mov
stos
jae
mov
pop
add
mov
dec
push
outsb
push
nop
inc
xchg
out
repz
icebp
ret
and
pop
or
mov
cmpsb
push
adc
loope
nop
cmp
dec
outsl
pushf
add
sub
fidivl
sub
xlat
lahf
and
leave
mov
scas
in
bound
popf
push
mov
out
loopne
gs
mov
push
pop
xchg
push
clc
in
in
dec
icebp
into
dec
add
mov
jbe
loop
rcll
add
jl
fstl
clc
mov
adc
jno
cmp
fldl2t
sti
adc
push
adc
or
mov
sbb
das
cmp
push
mov
leave
lret
cmp
fsts
dec
scas
imul
xchg
test
popf
inc
push
add
and
pop
push
add
mov
mov
mov
push
fstps
sub
cmp
adc
sbb
sahf
loope
mov
jg
scas
mov
inc
mov
popf
mov
lods
cmc
imul
popa
add
push
jl
jp
testl
dec
add
xor
pop
inc
pop
cmp
cld
je
lret
xchg
adc
mov
ja
aas
mov
xchg
pop
adc
in
ret
leave
jle
pop
jmp
cmp
pop
cmpsb
mov
add
inc
or
out
jno
and
adc
mov
sbb
lods
pop
out
add
jno
lds
test
lods
clc
add
call
dec
je
add
sub
xor
push
cmp
xor
mov
sti
or
or
mov
hlt
sbb
movsl
fs
dec
add
daa
pop
inc
in
divb
mov
jmp
stos
add
sub
mov
incl
sub
leave
sbb
mov
pop
lret
push
lock
addl
or
jl
and
out
push
addr16
mov
inc
mov
aaa
add
shll
mov
outsl
add
bound
pop
jecxz
outsl
pusha
pop
or
jno
dec
hlt
adc
fnop
mov
dec
into
fwait
push
pushf
add
pusha
mov
stos
shll
mov
lea
pop
sub
fmuls
neg
roll
or
dec
adc
add
pop
mov
adc
sbb
das
out
mov
dec
cmpsb
fbstp
in
or
lds
or
jg
mov
into
lea
or
pop
popa
into
movsl
xchg
pop
mov
xor
xchg
stc
shrl
inc
push
inc
mov
mov
or
mov
popf
pop
jne
dec
popf
out
aas
push
pop
sar
aam
xor
sub
inc
mov
pop
inc
into
daa
mov
insl
and
jns
inc
pop
aas
and
sbb
add
cmpsb
inc
nop
pop
sahf
push
cmc
adc
outsb
adc
in
xchg
lfence
pop
sbb
add
push
out
mov
sub
xchg
mov
cmp
test
add
jmp
jge
and
and
es
and
sbbl
jge
mov
mov
jae
and
loop
mov
mov
fmuls
jge
in
or
popa
daa
cmpb
rorl
and
push
mov
inc
outsl
out
and
add
mov
nop
xchg
or
add
aam
fildl
fs
sub
mov
mov
jb
jecxz
cmp
jnp
ja
pop
lock
shlb
or
mov
or
and
add
es
sbb
or
stos
sbb
hlt
add
aad
rclb
adc
sub
mov
sbb
leave
push
inc
push
cld
popa
pop
aad
inc
sbb
and
and
mov
xchg
xor
lods
filds
hlt
xchg
leave
inc
and
mov
mov
mov
imull
scas
aas
xchg
add
dec
mov
pop
adc
push
movsl
jecxz
les
mov
xchg
pop
jne
mov
mov
clc
add
mov
pop
cld
or
lock
cmpsl
idivl
lds
ljmp
repz
xchg
sbb
fistps
xor
fsubrl
push
arpl
dec
and
test
push
rclb
add
sub
mov
pop
push
and
xor
out
repnz
push
js
xchg
jb
scas
mov
rol
dec
sti
in
das
push
mov
sbb
dec
pop
adc
push
push
cmp
out
out
mov
add
lcall
sbb
pushf
inc
imul
or
mov
fistpl
push
nop
push
nop
sbb
pop
push
inc
enter
mov
test
cmp
mov
leave
shlb
nop
mov
fwait
nopl
popa
xor
cmp
mov
jo
xorl
inc
xor
imul
adc
xchg
in
add
jo
imul
xchg
inc
fdiv
in
add
mov
jno
imul
jnp
add
mov
mov
idivb
out
mov
xchg
in
xor
in
and
movb
add
dec
dec
adc
push
rorl
test
scas
push
fs
fildl
or
mov
daa
addl
jae
loope
pop
xor
fnstsw
fmull
outsb
push
xor
jne
sub
xor
push
pusha
xor
cmpsb
xchg
xchg
add
bound
cwtl
adc
ret
sahf
cld
inc
dec
pop
mov
pop
push
add
xor
xor
push
add
xchg
fstpl
xchg
sbb
das
je
out
mov
or
popf
adc
cmc
adc
fninit
addb
dec
adc
jle
dec
pop
aam
adc
in
mov
or
pop
sub
or
adc
jmp
jp
loop
and
mov
out
adc
fnsave
xchg
sbb
push
loop
les
fiaddl
xor
pop
mov
sbb
addr16
movlps
lods
inc
xchg
lret
sbb
dec
pushf
andb
push
push
mov
pop
fidivrl
call
or
or
cwtl
es
xchg
nop
pop
aam
jb
dec
mov
jecxz
call
je
icebp
repz
aad
inc
aam
sub
nop
mov
xor
mov
fadds
and
xor
add
jmp
pop
divl
jle
stc
xchg
lcall
cwtl
push
and
xor
sbb
mov
xchg
dec
push
fldcw
jp
xchg
pop
in
fiadds
pushf
mov
arpl
xchg
dec
dec
cmpb
jecxz
xchg
cwtl
imul
or
pop
loope
add
jno
ds
add
pop
xchg
mov
leave
sbb
push
add
aam
pop
inc
mov
out
push
fstp
sbb
pop
mov
call
ficoml
add
pop
addr16
ss
mov
add
pop
cs
mov
fisubs
push
add
push
inc
xchg
cs
vmovlpd
xor
in
inc
and
sbb
mov
into
or
jbe
ljmp
jae
out
pop
push
push
into
jns
mov
fwait
add
mov
loope
stc
popf
mov
inc
iret
mov
popa
popf
divb
outsb
or
push
pop
pshufw
mov
mov
sub
or
or
mov
mov
mov
dec
cmpsl
repnz
fiadds
xlat
rcrb
sbb
add
cmp
cmp
jnp
rclb
cmc
roll
lods
in
mov
push
pop
test
sbb
int3
or
xchg
push
push
popf
insl
insb
inc
inc
add
cld
add
out
popf
repnz
mov
sbb
xchg
lcall
mov
sbb
stc
pusha
hlt
ficoml
push
insl
loopne
xor
xchg
nop
imul
mov
push
test
pop
xchg
dec
push
xor
add
xlat
xor
xchg
repnz
popa
add
fstpt
push
push
popw
adc
test
enter
inc
push
mov
fwait
out
mov
xor
lret
popf
add
into
sbb
xor
mov
flds
and
jb
xchg
xchg
loop
mov
loop
and
pop
sub
mov
test
pusha
test
adc
mov
sbb
sti
outsb
fiadds
or
stc
push
popa
jl
inc
pusha
mov
push
fs
daa
mov
movsb
mov
loopne
jnp
xchg
mov
add
xor
push
cmp
cmpb
je
mov
stc
pop
push
pop
icebp
or
add
inc
mov
lahf
scas
in
bound
sub
and
mov
mov
popa
mov
dec
pop
out
roll
fsub
popa
ds
and
cld
icebp
dec
inc
jno
xor
jmp
sub
mov
out
addb
inc
cmc
sub
pop
sub
daa
pop
scas
daa
fwait
push
jmp
push
rorl
inc
addb
adc
roll
sbb
iret
js
ret
test
push
pop
mov
adc
in
dec
enter
stc
cmc
jmp
mov
sub
insb
lods
add
or
leave
fidivrs
and
xorb
or
lea
cs
idivb
push
je
pusha
icebp
lcall
adc
cmpb
push
and
xchg
jbe
shrl
add
rorb
int3
cmp
or
test
ja
movsb
or
sbbb
adc
test
mov
dec
xor
mov
popf
mov
push
cld
sub
push
fsubs
lods
pop
aaa
xchg
leave
sbb
jo
push
mov
clc
or
ror
mov
or
pushf
jns
loop
cld
jnp
jo
mov
mov
xchg
div
test
stos
lret
push
push
add
popa
mov
mov
pushf
movsl
lds
in
xor
fs
push
ja
inc
icebp
cmp
cmpsl
loopne
cmc
add
or
jg
xchg
mov
sbb
je
add
sub
lods
ret
add
mov
loope
xchg
mov
pop
jo
mov
jno
and
or
jbe
hlt
and
sbb
in
mov
loopne
mov
add
jp
roll
js
daa
and
es
sbbl
cs
xor
or
add
add
pusha
push
popf
lds
test
push
mov
lea
add
scas
and
sahf
fstps
stc
add
loopne
or
insb
and
add
dec
push
int
fnstenv
dec
or
sub
cmpsb
mov
fidivs
sbb
scas
adc
outsl
adc
scas
lock
incl
mov
jecxz
mov
sub
add
jp
movsb
jne
jge
cltd
push
addr16
out
or
dec
sub
test
vmovdqa
mov
push
out
sbb
cmp
pop
daa
lods
jmp
test
push
inc
xor
ss
in
cmp
adc
mov
test
push
sub
push
pop
push
add
mov
dec
movsl
inc
sbb
hlt
inc
lret
popa
pop
sti
out
pushf
mov
aam
push
lock
repz
rclb
cmp
pusha
pop
stos
mov
clc
jns
and
adc
faddl
stos
jbe
test
jno
add
into
lcall
add
push
popa
mov
adc
test
adc
ja
xchg
xchg
fwait
inc
les
fsubl
add
jp
fbstp
cmp
jb
xchg
dec
sub
loop
push
dec
fsubl
jmp
repz
movsl
mov
and
dec
jbe
adc
sahf
sub
scas
shrb
jnp
or
fisttpll
pop
xchg
xchg
dec
lret
fiaddl
xor
cmpsb
lret
lods
push
or
loop
add
jns
lcall
mov
shr
adc
xchg
sbbl
mov
sub
or
lahf
aas
jecxz
repz
movsl
pop
fsubs
mov
daa
pop
inc
fcomps
add
push
xor
cltd
test
jmp
stos
pop
aad
mov
sub
cli
adc
jmp
mov
rcr
das
xchg
int3
or
sbb
mov
ds
popa
xor
ljmp
subb
push
jp
mov
add
and
lea
xchg
je
inc
in
and
sub
xchg
pop
mov
sub
andl
in
jg
fdivrl
adc
pminsw
xchg
in
imul
or
addr16
filds
repnz
or
aas
lods
ficompl
add
add
mov
xor
and
enter
jbe
repz
data16
lret
mov
pop
lods
push
shlb
push
jge
daa
popa
shr
pop
sbb
insb
add
xor
mov
test
or
repnz
sub
arpl
jmp
mov
or
or
xor
push
pop
mov
mov
jmp
add
fdivrl
es
mov
jbe
add
sub
sub
out
mov
jge
xor
push
cwtl
adc
mov
sub
add
push
mov
sub
adc
rcl
mov
call
scas
sbb
push
mov
movsl
scas
mov
or
and
fsub
xchg
xchg
popf
in
dec
aad
mov
notb
pop
test
xor
lock
or
iret
add
sbb
fstpt
outsb
mov
or
cmp
cmp
icebp
mov
dec
pushf
call
lahf
scas
movsl
push
addl
fsubs
pop
out
sbb
loope
dec
jo
fnclex
xor
sub
add
lret
mov
inc
jo
pushl
sbb
cs
mov
xor
add
inc
idiv
add
les
mov
mov
fnstenv
jecxz
sub
mov
faddl
pop
push
mov
dec
jmp
dec
daa
mov
dec
leave
fs
pusha
ss
or
clc
out
lea
ss
into
movsl
shrb
lret
jge
pop
pusha
xor
mov
xor
test
push
add
xchg
popf
packsswb
jmp
loopne
repnz
xor
pop
xor
fidivrl
xor
in
adc
das
xor
ret
pop
out
stc
and
sbb
and
add
popa
into
mov
decb
daa
add
jg
pop
aas
call
or
lock
sbb
std
into
stc
push
push
clc
or
pop
js
mov
xor
imul
testl
rorb
add
xor
shlb
test
lret
das
sub
cmc
jnp
push
mov
sbb
popa
nop
cmp
cmpb
jb
pop
add
sbb
stos
and
jge
or
into
add
nop
imulb
mov
push
fmulp
mov
inc
pop
adc
pop
push
jge
stc
inc
cs
mov
nop
cmc
shrl
adc
loope
testl
stc
scas
je
repz
mov
or
xchg
fistl
or
movsl
jl
hlt
push
or
or
mov
enter
xchg
sbb
mov
and
clc
add
fmul
sbb
loope
jl
cld
xor
fldl
adc
sub
rcll
and
fildll
jnp
jl
adc
mov
push
pop
push
add
mov
xchg
pop
into
addb
push
mov
test
mov
pop
pop
sub
jp
pop
or
sbb
xor
aas
sarb
mov
int3
pop
jmp
mov
add
fld
sub
sahf
push
aad
int
cmp
mov
test
adc
fnstenv
and
cltd
sbb
stc
je
push
dec
in
dec
lahf
mov
inc
jle
into
pushf
les
bound
pop
in
icebp
inc
mov
push
aaa
fcoms
sbb
mov
or
xchg
xchg
loopne
mov
push
cmp
mov
fdivrs
loopne
or
add
insl
jo
xchg
mov
adc
inc
test
mov
aam
or
scas
lahf
nop
bound
xor
ret
push
adc
test
xchg
loope
mov
add
mov
loope
jo
lods
inc
jle
aaa
mov
setg
movb
orb
pop
in
inc
xchg
or
frstor
or
sub
push
push
aas
add
sbb
das
add
sub
inc
aaa
push
and
mov
test
arpl
add
sbb
rcrb
movsl
sbb
mov
and
sahf
andb
xor
add
or
xchg
and
lahf
ret
faddl
xor
fs
dec
dec
mov
push
nop
lahf
pop
push
inc
xchg
in
jae
jmp
and
mov
xchg
daa
xor
push
sub
popf
add
leave
add
xchg
bound
mov
xchg
fimuls
xchg
out
movl
repnz
rolb
and
jb
lret
sbb
sbb
mov
mov
andb
aad
fcompl
mov
mov
sbb
mov
out
pusha
loop
cld
js
inc
and
pop
sarb
add
sub
pop
divb
repnz
pusha
xchg
and
in
adc
sub
loopne
push
xchg
push
pop
std
fnstcw
testb
sub
ja
or
popf
stos
repz
inc
pop
push
sub
ror
mov
ds
and
movsl
je
iret
test
sub
inc
mov
fs
loopne
in
popf
adc
jo
lahf
out
xlat
dec
inc
fcompl
stos
scas
push
or
dec
int3
cmpb
fnsave
fistl
fstps
adc
daa
bound
sahf
pop
and
xlat
lds
inc
jmp
pop
cwtl
pop
cltd
cld
mov
mov
ret
scas
sahf
pop
aaa
into
add
adc
js
mov
mov
stos
fstps
pop
jge
jle
clc
arpl
iret
dec
adc
sub
sub
pop
je
push
inc
sarb
and
int
out
pop
pusha
push
cmpsl
adc
js
or
ljmp
xchg
mov
cmp
stc
jno
fbstp
out
or
and
cld
psadbw
mov
sbb
insl
in
jns
flds
xor
push
adc
push
pop
add
sbb
jmp
xor
int3
stos
mov
cli
mov
jne
push
add
xchg
jbe
dec
push
fcompl
int
mov
push
test
fisttps
pop
pop
adc
in
insl
and
leave
cmp
rcll
pushf
fisubl
stc
or
inc
or
and
add
mov
dec
in
daa
pusha
nop
push
push
ret
mov
or
aas
add
push
add
scas
sarl
xor
and
mov
inc
mov
xor
lcall
push
xor
xchg
cmp
hlt
dec
aam
push
ljmp
cmp
jb
add
xor
push
jmp
incb
pop
mov
push
mov
test
pop
push
push
bswap
gs
pop
les
lea
xor
inc
mov
and
aam
imul
add
mov
dec
cli
push
jg
push
jp
xchg
dec
andl
js
xchg
jno
sbb
add
jg
jge
cli
pop
adc
sub
in
cmp
mov
add
pop
push
pushf
xchg
popa
aad
dec
lock
pop
and
push
int3
dec
pop
aaa
lret
fwait
addb
adcl
and
cmp
fwait
shr
sbb
mov
into
ss
mov
and
dec
inc
pop
add
lea
pop
repnz
jg
mov
mov
rclb
add
mov
add
mov
loope
add
add
stc
or
or
pop
dec
add
jl
jp
dec
add
gs
pop
nop
jo
add
add
dec
std
fsubrs
loope
mov
pop
orb
xchg
dec
inc
or
aad
mov
mov
mov
or
loop
pop
pop
mov
repnz
addb
inc
sbb
jnp
jne
aaa
test
fcmovnb
cwtl
pop
mov
xor
aad
shll
ljmp
and
mov
or
xchg
sbb
sub
jno
cmpsl
fs
pusha
fnstsw
sub
in
daa
dec
pop
loope
adc
out
sahf
mov
jmp
adc
loop
or
popf
xchg
add
add
xchg
repnz
in
add
and
int
cmp
lods
sbb
adc
sbb
adc
lods
and
mov
push
adc
orl
test
lods
rcrl
pop
andb
mull
jecxz
dec
mov
inc
xchg
sbb
xor
outsl
outsl
insl
and
adc
mov
pop
testb
popa
mull
push
pop
dec
xchg
cwtl
and
xchg
pop
lret
mov
mov
or
sbb
scas
popf
mov
rol
mov
push
lahf
jge
xor
xchg
push
mov
push
push
data16
pop
xchg
mov
pop
orb
nop
das
pop
fsubs
sbbb
add
mov
lret
stos
lcall
popa
ja
inc
add
cli
shlb
pushf
bound
andb
jle
inc
adc
mov
pop
icebp
popa
pusha
mov
and
jg
cmc
aas
repz
out
fldl
push
xchg
adc
sarb
xchg
adc
cmc
xor
mov
fldcw
xlat
adc
mov
mov
decl
dec
xchg
out
mov
rolb
or
je
push
mov
ja
aam
les
inc
pop
jp
and
cltd
rcll
add
inc
sbb
repnz
fisttpl
jae
rcr
ja
sub
jl
fsubl
andl
adc
lock
imul
cmp
inc
lahf
out
adc
add
push
pop
pop
mov
dec
into
cmp
mov
sbb
xor
ljmp
ficompl
sub
test
mov
cli
into
decb
add
out
pop
xchg
fcomps
jns
shlb
or
and
add
add
or
ret
xchg
lahf
fs
cmpsl
icebp
add
cmp
and
jmp
sbb
ja
adc
pop
inc
mov
test
cmpb
add
xor
test
in
jo
mov
sarl
rorl
sub
into
pop
inc
mov
add
mov
les
mov
lcall
or
das
push
in
push
lds
cmpsb
pop
jg
outsl
and
and
xchg
sub
shlb
addr16
mov
cmp
aam
scas
neg
dec
lahf
fwait
xchg
shlb
xchg
xchg
bound
jp
rcrl
aaa
and
das
out
hlt
mov
mov
mov
clc
sbb
les
mov
cmp
ror
cmpsl
xchg
dec
xorb
pop
dec
jae
dec
shl
dec
sub
or
push
jl
xchg
jmp
test
push
sub
jle
scas
push
xchg
pop
dec
and
es
sbb
pop
insl
sub
push
dec
lods
jecxz
and
ret
popa
sub
inc
enter
cmpb
cs
pop
out
sbb
daa
add
inc
cmpsb
mov
stos
dec
push
or
xchg
pop
mov
pop
jl
clc
cmpb
ret
popw
xchg
push
jo
mov
adc
in
jno
add
out
gs
rcrb
pop
and
test
inc
nop
add
outsl
stos
aaa
sub
fidivrs
pop
xlat
sar
leave
adc
arpl
imull
adc
push
sub
adc
enter
rorl
jecxz
jo
dec
aad
pop
xor
sbb
idivl
inc
dec
xchg
pop
cmc
icebp
cmp
add
pop
call
pusha
push
shr
dec
int
and
insb
push
daa
divl
pop
stc
jno
fldl
push
gs
adc
in
les
add
mov
enter
inc
xchg
fidivl
add
push
imul
pop
fcoms
inc
pop
add
push
dec
xor
or
mov
out
lods
sub
aaa
movsb
inc
add
cwtl
js
rclb
lods
dec
mov
lods
je
adc
in
jne
mov
or
xchg
inc
aad
mov
stc
das
cmpb
mov
pop
popf
and
pop
cmc
addl
js
mov
pop
rcrb
xchg
mov
call
aas
iret
insb
and
dec
and
xchg
push
movsb
jo
mov
imul
imul
stos
stos
xchg
push
jne
mov
std
dec
jno
push
inc
pop
inc
pop
mov
pop
dec
mov
subb
call
insb
pop
push
inc
inc
aad
ret
pop
xchg
adc
inc
cmp
lods
mov
ret
fnstsw
push
aas
loope
xchg
jne
mov
push
and
daa
push
pusha
mov
cmpsl
in
rcrb
aaa
insb
mov
pop
xor
adc
push
call
push
adc
testl
pop
popf
push
icebp
push
mov
or
data16
xor
mov
sub
mov
and
xchg
leave
aaa
push
jbe
or
shrl
mov
cmp
cld
jae
movb
inc
out
add
fisttps
pop
xor
aam
ja
and
mov
or
inc
xchg
mov
mov
mov
adc
xor
lea
jb
add
pusha
dec
sbbb
clc
lods
push
xlat
out
subb
ret
std
mov
sbb
das
lahf
pop
push
sbb
or
shrb
or
push
das
mov
fisttpll
andb
jbe
dec
aad
sub
sti
pop
pusha
mov
daa
iret
aam
push
mov
pop
outsb
push
adc
rol
dec
cmp
das
and
stos
fwait
sub
adc
enter
fildl
mov
bound
fsts
mov
pop
cli
inc
push
add
xchg
dec
mov
xchg
clc
mov
pop
push
or
or
pop
and
pop
mov
outsb
pop
ds
inc
sti
cmc
jmp
in
jbe
imul
cmc
or
pusha
clc
sub
push
pop
lods
add
sbb
sbb
pop
mov
push
add
imul
fsubrs
or
mov
push
ljmp
rol
add
lods
fildll
pop
in
cmp
push
stos
fwait
arpl
int3
push
xor
sub
and
shll
sbb
push
cpuid
jmp
jbe
stc
or
add
pop
lret
jmp
cmp
mulb
adc
xchg
add
popf
ds
inc
mov
jecxz
popa
nop
sub
mov
xor
inc
test
test
pop
sub
xor
push
jge
pop
jecxz
cltd
mov
loop
popa
mov
mov
cmp
fcomi
add
std
or
shlb
mov
pop
shll
lods
inc
movb
icebp
mov
outsb
into
push
or
xor
cmc
cmp
scas
pop
shrb
insl
hlt
mov
xchg
cmp
add
sarb
shlb
mov
daa
sub
cld
imul
ret
sahf
icebp
jge
cmp
inc
sbb
sahf
adc
aam
dec
dec
jge
lods
pop
in
icebp
add
in
mov
ret
mov
mov
rcr
and
xor
lahf
xchg
mov
test
adc
jo
or
adc
lea
test
inc
ljmp
into
mov
stc
pop
push
lods
test
adc
mov
popf
int
mov
scas
jne
or
icebp
std
or
fildl
fnstcw
rcl
inc
xor
mov
jmp
aad
adc
stc
loope
sbb
mov
and
xor
jg
dec
imul
pop
outsb
fs
les
sti
mov
jl
mov
add
adc
xchg
cmp
push
dec
fcmovu
subb
outsl
mov
or
mov
adc
fiaddl
xor
mov
arpl
or
push
sti
and
jae
test
xchg
mov
adcb
popf
dec
add
sub
add
pop
adc
mov
cli
sub
popf
xor
movsb
sub
adc
and
pop
fisubs
cld
loope
lcall
pusha
rolb
jo
jg
push
dec
ret
jbe
xchg
fisubrs
jno,pt
pop
orl
in
sub
fdiv
lock
mov
xchg
add
fists
out
push
mov
subb
popf
push
jb
sbb
adc
lods
pop
mov
xchg
or
mov
jns
inc
cmp
lahf
sub
dec
rolb
xchg
cmp
stos
jnp
popf
stc
imul
dec
mov
rcrl
mov
lahf
jns
dec
testl
int3
xor
andb
fsubrp
aaa
xchg
mov
cld
rcr
add
or
mov
adcb
pop
mov
cld
lods
orl
push
pop
jo
popf
out
jno
add
push
je
dec
dec
sub
cli
mov
push
mov
push
or
aad
fs
fwait
adc
je
add
pop
dec
push
aaa
popf
mov
rolb
stc
jns
mov
iret
xor
push
aam
jg
sti
andl
add
adc
loopne
stos
and
mov
int3
mov
loopne
pop
jle
xchg
stc
mov
nop
int
xchg
cmp
imul
add
cwtl
inc
push
ljmp
mov
mov
add
adcb
mov
jg
sbb
lret
icebp
sbb
add
sub
mov
adc
loopne
pop
lock
call
mov
xor
adc
xchg
icebp
inc
outsb
sub
cmpb
mov
add
cmp
sub
and
arpl
icebp
jmp
rorl
cld
cli
les
mov
sub
out
push
mov
outsb
ficoml
ja
ror
out
fcomps
dec
xorb
add
xchg
push
pushf
aad
enter
mov
cmc
int3
dec
mov
mov
data16
mov
cmp
mov
cli
and
ss
mov
les
jns
das
sti
cli
shlb
fistpll
ss
lahf
jae
js
fstpt
lds
add
push
outsb
push
mov
inc
data16
loop
or
xor
mov
sbb
mov
push
inc
cli
pop
sub
out
adc
sarb
aad
add
shl
jo
icebp
cs
mov
daa
or
jno
aaa
mov
pusha
mov
sub
xorb
inc
sub
ret
fstpl
pop
xchg
add
fsubr
nop
in
lahf
out
sub
and
or
or
test
and
mov
dec
push
inc
xchg
sar
sub
push
push
jmp
in
cltd
push
lock
pop
dec
xchg
or
push
jmp
fistpll
xor
adc
adcb
pop
into
dec
add
and
call
mov
nop
add
insl
adc
paddusb
jp
xchg
in
lods
int
inc
xchg
add
popa
call
scas
aas
pop
and
rorb
sub
pop
stc
mov
fwait
or
inc
mov
xchg
cmpsl
movsb
ror
test
sarl
add
outsl
push
adc
pop
mov
and
ljmp
inc
mov
sbb
and
cli
lret
inc
outsl
mov
pop
sbb
sub
mov
adc
push
pushf
pop
imul
mov
push
xchg
fwait
sub
dec
sbb
push
cs
cltd
inc
pop
outsl
pusha
inc
pop
or
shrb
cmpsl
mov
or
dec
push
add
stc
cmc
aas
dec
xchg
js
mov
test
sbb
testb
hlt
add
pop
adc
jecxz
pop
cmc
mov
add
pop
cli
rclb
push
dec
push
stos
and
into
add
dec
movsl
dec
test
cmpsb
lret
popf
ja
jmp
into
sbb
test
sahf
inc
andb
lods
and
add
inc
ror
add
xchg
and
das
adc
xchg
add
or
mov
inc
js
add
dec
sub
mov
testl
mov
scas
jnp
push
ret
pop
inc
loopne
mov
push
xchg
movsb
popf
stc
mov
push
add
mov
stos
lahf
mov
add
dec
or
cltd
push
push
mov
adc
cmp
pop
xchg
dec
std
sub
or
pop
das
pop
nop
mov
pop
cmpsl
add
arpl
mov
inc
add
lcall
fsub
add
mov
inc
dec
or
lcall
pop
push
pop
xchg
jmp
mov
push
nop
enter
fwait
ret
jle
outsl
nop
test
repnz
or
into
push
loop
sub
or
mov
hlt
fbld
mov
jne
pop
xchg
mov
icebp
add
mov
xlat
sub
xor
scas
xor
dec
add
jl
cmp
pop
loopne
out
out
or
xchg
out
aam
pslld
jno
sub
mov
or
jmp
and
in
dec
icebp
adc
add
shl
cs
xor
frstor
fwait
mov
mov
pusha
cmc
nop
xchg
lock
popf
inc
pushf
inc
movsl
aam
pop
add
and
aaa
popa
pop
std
daa
mov
add
cmp
mov
addr16
push
xor
and
inc
call
and
mov
ljmp
repnz
push
repz
add
ror
sbb
out
sbb
roll
push
int
ret
repnz
and
lea
pop
icebp
add
mov
jmp
lahf
jmp
add
mov
xchg
es
or
nop
mov
add
jo
cwtl
or
movb
fs
das
adc
jge
push
popa
insb
adc
mov
inc
mov
inc
sbb
outsb
inc
add
sub
inc
push
push
xchg
mov
loop
mov
inc
adc
mov
pop
cmc
dec
inc
lods
aaa
add
cmp
into
shl
cmpsb
or
xor
pop
lods
fs
jmp
mov
adc
pusha
or
pop
xchg
sar
add
cmp
and
mov
pop
or
popa
adc
inc
add
mov
pop
fwait
jmp
fisubl
add
out
sbb
xor
and
mov
dec
xchg
js
or
adc
mov
push
sub
pop
lea
sub
out
jbe
sahf
inc
ret
or
loopne
mov
cmpsl
pop
dec
jp
cmc
or
xor
outsl
movsl
cmp
dec
outsb
hlt
cmp
xchg
pop
adc
mov
push
mov
test
mov
fs
orl
pop
sub
inc
push
pop
pop
movsl
out
leave
orl
add
adc
add
popa
add
dec
or
les
lods
stc
movsl
adc
mov
jle
or
or
out
std
leave
push
dec
xchg
gs
sub
push
inc
iret
inc
adc
jne
imul
xchg
out
cld
mov
je
dec
pop
lds
subl
inc
outsb
lock
enter
in
cmp
or
test
adc
add
push
inc
gs
loope
inc
xor
jnp
lods
mov
xchg
shll
pop
jns
and
aad
pop
push
fistpl
int
insb
pop
dec
call
out
leave
jo
fisubrl
lea
adc
adc
fsub
test
dec
adc
dec
cmpsl
and
dec
jno
pop
and
pop
into
cs
push
pop
pop
xchg
cmp
outsb
add
adc
nop
mov
sti
rorb
lret
iret
les
jnp
pop
out
add
loop
and
lds
movsl
pop
aam
dec
ja
pop
clc
in
adc
jge
pop
and
test
cmc
cli
sub
inc
jle
cmpb
pop
imul
ret
jg
les
and
dec
hlt
adc
cwtl
mov
push
cmpsl
loop
add
mov
dec
add
jno
in
add
rorl
xor
pop
out
or
pushf
add
inc
js
and
outsl
and
add
sbb
enter
add
jge
pop
mov
sbb
cmc
aas
stc
fbld
inc
add
test
fwait
add
sbb
lret
imul
das
sbb
js
mov
rorl
mov
inc
pop
fistpl
xchg
sub
loope
add
jl
mov
pusha
imul
inc
sbb
imul
out
testl
cs
outsb
stos
icebp
stc
sub
mov
or
xchg
fiadds
inc
inc
push
cmp
xchg
aas
ret
and
add
mov
add
leave
pop
xchg
daa
adc
lock
mov
cmp
sarl
into
or
xorl
mov
or
imul
jecxz
add
jg
ss
je
lock
jb
inc
inc
add
jge
lcall
popf
dec
sub
mov
add
scas
ss
scas
mov
fnstenv
lods
in
inc
or
cmpsl
shl
jecxz
mov
mov
xchg
xchg
push
inc
in
mov
lret
cmc
cmp
repnz
add
xchg
sub
jne
in
inc
testb
fst
repz
ret
adc
in
mov
jns
ja
sub
jnp
das
fisubrl
or
jne
jae
or
roll
push
lods
push
cmp
add
aaa
into
mov
xchg
fildl
pop
adc
and
repnz
mov
jmp
cmp
mov
jb
mov
outsb
enter
clc
and
cmp
call
xchg
fucomip
and
mov
sub
add
mov
aas
mov
xor
pop
push
in
mov
popa
mov
jmp
scas
popf
and
movsb
aam
adc
xor
sub
adc
dec
adc
sbb
stc
mov
add
jmp
and
jo
jge
add
cltd
fwait
in
adc
test
outsb
pop
push
dec
test
or
jbe
push
imul
cmp
cmpsl
test
lds
mov
shrl
pop
adc
pop
mov
cld
es
or
or
cmpsl
popf
jbe
inc
cmc
mov
jmp
out
or
sbb
cmove
pop
outsl
testl
fisubrs
dec
or
jne
mov
jno
test
fsub
dec
mov
ret
out
xor
push
andb
test
in
inc
flds
popf
sub
or
or
push
xchg
icebp
shll
push
xchg
jae
add
arpl
jle
cmp
sbb
add
jmp
cmpsl
cmc
mov
push
idivb
nop
push
mov
push
rolb
mov
mov
adc
mov
out
sub
cs
xor
test
inc
flds
outsb
pushf
shrl
cmp
mov
add
sub
pushf
sbb
pop
sub
push
mov
leave
mov
sub
add
xor
or
int3
dec
mov
dec
pop
pop
jmp
or
loopne
stos
pop
enter
aad
shll
mov
adc
add
sub
push
sti
in
push
dec
sahf
and
sub
std
mov
mov
dec
push
out
ds
or
mov
lea
push
jmp
push
jmp
xchg
test
sub
sbb
push
inc
pop
inc
mov
lds
adc
xor
loop
jg
add
inc
push
and
int
fs
fsubs
cmp
jecxz
add
nop
pushf
mov
xlat
and
or
jbe
and
ffreep
ret
mov
cmp
lock
fucomi
js
and
xchg
jecxz
mov
movsb
or
mov
call
mov
inc
xchg
jnp
xorl
mov
add
mov
dec
stos
fldcw
test
mov
pushf
pop
mov
imul
lods
fdiv
push
xlat
mov
and
push
out
xchg
daa
jmp
clc
push
push
pusha
xchg
push
mov
dec
popa
rolb
xor
mov
loope
call
xchg
neg
or
nop
in
lods
rolb
sbb
adc
xor
dec
shll
lds
inc
sub
add
in
cs
outsl
rcrl
lock
outsb
aad
sbb
pop
popa
movsl
cwtl
mov
or
jmp
hlt
add
adc
aam
xor
pop
ds
stos
lods
jns
adcb
push
decb
int3
cmp
and
leave
lods
jae
stos
cwtl
pop
movsl
mov
add
jne
pop
or
and
xchg
fisubl
push
xor
add
sub
call
loop
sbb
mov
and
ss
and
add
push
stos
or
shlb
push
js
leave
lock
sarb
aaa
lds
push
push
mov
xchg
repnz
daa
lods
sarb
jl
add
inc
cmp
test
mov
add
lret
and
mov
inc
mov
pop
and
or
aas
dec
add
sub
mov
dec
add
jae
pop
mov
add
inc
hlt
mov
aas
fdivrs
nop
cwtl
out
test
jns
lods
ret
hlt
xchg
and
cmpsb
ljmp
in
dec
xchg
mov
lods
addb
ss
mov
and
jmp
push
jle
dec
xor
mov
scas
das
push
sub
push
adc
xchg
mov
push
sub
orb
cmpsl
enter
aas
inc
inc
hlt
xor
push
pop
pop
loop
mov
mov
outsl
fs
pop
pushf
cmc
fs
mov
stos
sub
adcb
imul
or
scas
lods
jno
mov
repnz
cmc
jne,pn
imul
andb
xchg
add
push
imul
sub
add
add
lock
push
cmp
xchg
mov
loopne
and
cmp
mov
add
call
add
test
lea
push
sti
push
lods
stc
sbb
icebp
mov
into
cmp
mov
push
and
cmpsb
aaa
dec
mov
adc
sbb
dec
mov
out
mov
xor
cld
movsb
or
and
dec
js
popf
scas
xor
inc
cmpsb
push
push
psubd
xor
push
das
jg
sub
pusha
inc
icebp
mov
push
pop
xchg
push
mov
jp
dec
test
stos
pusha
mov
jmp
push
inc
aam
pushf
imul
sbb
xchg
push
ds
sti
cmp
mov
pop
add
mov
jne
pop
les
add
dec
test
test
mov
js
inc
mov
mov
sbb
dec
adc
subb
inc
faddp
xor
dec
in
mov
pusha
maxps
pop
or
jle
mov
daa
mov
aaa
and
mov
mov
mov
imul
sbb
push
add
pop
mov
imul
sti
mov
add
in
int
jo
or
fisttpll
fstpt
pop
jo
shl
js
cld
dec
stos
nop
push
in
and
and
xchg
sbb
mov
dec
mov
mov
mov
jo
cmp
cs
mov
cmp
aad
add
mov
stos
loopne
enter
sub
mov
sbbl
ret
cmp
ljmp
popa
inc
push
cmp
popa
movsl
imul
jp
inc
dec
or
das
mov
jmp
jmp
push
mov
inc
jns
xchg
jl
jmp
pop
jnp
inc
push
sbb
insl
aas
loopne
je
add
sub
lret
dec
daa
mov
push
dec
mov
mov
pop
aas
add
out
jmp
pushf
fs
mov
pop
add
pusha
or
dec
popa
lcall
mov
flds
mov
and
fwait
cmpsb
pop
pop
addb
mov
arpl
jns
sub
das
fs
pusha
fstl
add
les
lcall
sub
inc
ja
shll
ss
xchg
mov
xor
movsb
rorb
dec
pop
les
cmp
lahf
add
xchg
sarl
sbb
mov
cmp
dec
aam
popa
jmp
cld
sbb
add
std
decb
dec
xor
das
les
data16
mov
jge
imul
lods
or
pop
xchg
sbb
cmpsl
sti
and
std
jnp
hlt
inc
lret
mov
mov
rclb
out
sub
xchg
adc
jmp
adc
es
rclb
in
vmread
movsl
add
adcb
in
mov
add
popf
jp
adc
mov
xor
insb
xchg
mov
icebp
hlt
add
jg
insb
cmp
sub
fnstsw
push
or
pop
push
imul
dec
ljmp
pop
and
mov
add
pop
mov
push
ljmp
les
int
add
mov
pop
xor
sbb
shlb
movsb
rcrl
sbb
jle
push
pop
mov
push
fcoms
rorl
iret
flds
cmp
adc
and
mov
sti
jb
inc
pop
mov
jmp
jbe
and
sub
add
xchg
es
jo
add
cli
add
xchg
adc
adc
cmc
das
jecxz
fsts
addb
jl
or
into
jo
mov
pop
push
mov
inc
or
rcl
popa
pop
lods
inc
sbb
cmp
add
mov
push
mov
jg
jge
add
cld
add
or
pop
adc
test
pusha
jns
sub
jmp
popf
xchg
mov
shll
add
shlb
ja
out
inc
adc
mulb
loopne
mov
ret
xchg
mov
xor
or
stc
pop
dec
mov
stc
and
inc
fwait
popf
jno
adc
mov
xor
imul
sub
test
mov
xchg
pop
insl
lds
cmp
jb
and
push
jecxz
daa
ds
out
adc
loope
jo
popa
xor
loope
psrad
push
add
jp
add
xor
mov
sar
push
loop
jb
and
mov
loopne
flds
dec
and
sub
mov
mov
pop
jo
jge
xchg
and
or
icebp
and
push
mov
sahf
in
pusha
cmpb
sbbb
pop
sbb
add
push
es
call
xchg
out
and
lock
imul
enter
aam
sbb
fists
adcb
es
push
xchg
adc
inc
hlt
push
add
and
cmp
outsl
aam
add
or
adc
adc
pop
push
icebp
into
xorb
jge
push
mov
add
mov
pop
push
lahf
adc
pop
xchg
add
pusha
rclb
out
fisubl
xor
mov
addl
jmp
imul
lds
sbb
add
mov
xor
xchg
mov
daa
add
adc
pop
loope
sub
and
sbb
jle
add
jns
in
push
add
adc
jb
and
sub
cwtl
xor
cmp
test
dec
add
es
stos
or
mov
sub
cmp
cmp
add
gs
mov
in
push
and
jmp
lret
popa
jg
ja
and
negl
or
insb
pop
push
jno
fs
mov
sbb
pusha
mov
stos
dec
push
and
addr16
jae
push
das
mov
lahf
jo
xchg
jbe
push
pop
mov
and
das
cmp
push
pusha
push
enter
lods
and
loop
adc
add
test
sub
add
mov
and
push
test
out
popf
mov
xchg
lods
xor
xchg
in
inc
add
cli
add
stc
scas
sbb
addr16
pop
out
xor
test
popf
xor
outsl
orb
xchg
fmull
stos
das
jl
jns
xor
add
push
std
pop
pxor
fbstp
rclb
cmp
xchg
mov
add
popa
inc
jge
cs
mov
xor
adc
inc
add
leave
les
sbb
jmp
and
adc
xchg
in
inc
mov
lcall
inc
push
inc
jo
jbe
sub
or
dec
jmp
stc
inc
inc
cmp
sub
push
es
inc
mov
push
push
sub
out
cmc
pop
jl
dec
mov
rcrl
inc
mov
adcb
rcl
gs
mov
sub
xor
mov
fists
pop
cmp
or
jne
cmp
test
je
stos
and
push
or
mov
mov
adc
mov
stc
sbb
mov
push
cmp
stc
mov
xor
cmp
idivb
jno
stos
sub
sub
in
outsb
add
jmp
enter
xchg
nop
sub
and
mov
fistps
shlb
and
jne
fildll
or
repz
cmp
cli
subl
xchg
jno
xor
mov
add
mov
test
push
adc
adc
jp
jae
test
cmc
sub
loopne
adc
pop
aas
call
les
and
ljmp
push
inc
adc
mov
fisttpll
xlat
test
imul
es
xchg
dec
pop
jecxz
bound
mov
xlat
sbb
pop
pop
cmpsl
mov
into
hlt
add
push
xchg
push
add
leave
or
dec
imul
mov
mov
negl
mov
or
mov
inc
frstor
hlt
les
pop
cmp
loope
mov
and
pop
mov
call
lds
ds
mov
mov
adc
sub
std
fwait
test
adc
stc
inc
mov
scas
test
fcmovb
pop
cmpsl
add
adc
dec
sti
xor
push
jnp
cltd
xorl
xchg
loop
adc
mov
add
sub
lahf
lea
dec
out
test
fwait
lods
fcompl
add
jno
lock
adc
aaa
pop
mov
mov
leave
fwait
mov
inc
les
int
jns
xor
int
outsl
arpl
push
mov
std
mov
int3
repz
aaa
push
sbbb
push
test
or
cmp
movsl
mov
ja
mov
shr
outsl
cmp
iret
push
imul
sbb
pusha
loop
cmpsl
pop
mov
rcl
mov
icebp
jb
sub
lods
or
mov
push
ljmp
push
outsl
or
jne
push
pushf
jo
mov
and
mov
xor
and
add
jg
into
das
pop
mov
ss
mov
inc
icebp
jnp
add
ret
sub
stc
cs
lret
jns
stos
xor
xchg
pop
repz
leave
xor
xor
mov
mov
gs
push
adc
loopne
mov
xchg
sbb
jmp
lret
xlat
jge
xchg
sub
mov
xor
add
inc
jmp
jno
xor
cmp
dec
push
sbb
loop
mov
dec
dec
xor
fs
test
jmp
mov
lds
leave
mov
cmpsb
lret
or
add
fstl
add
imul
mov
pop
add
rep
mov
mov
add
lcall
pop
add
and
or
mov
leave
mov
or
mov
push
xor
test
push
xchg
jge
and
out
sbb
js
in
jno
out
inc
rcrb
adc
cs
in
mov
stos
pusha
xchg
mov
filds
inc
out
xchg
xchg
or
add
nop
or
or
sub
push
jle
imul
add
adc
ljmp
xchg
adc
pop
add
repz
sahf
mov
test
mov
add
adcb
sbb
in
add
repnz
aam
movsl
outsb
xchg
xor
aas
sub
in
ret
pop
mov
cmpsl
aad
scas
jno
imul
mov
adc
dec
call
push
aad
mov
out
add
test
stos
mov
mov
lea
or
inc
movsb
sub
inc
ds
dec
dec
mov
dec
cli
outsl
das
add
sub
shrb
push
adc
rorl
mov
stc
lea
stos
or
mov
mov
pusha
add
js
orb
and
jo
lock
jp
jmp
xchg
roll
cmpl
jl
loopne
jmp
rcl
inc
dec
rcrl
add
aam
sbb
push
push
pop
mov
xlat
mov
mov
or
push
xor
lea
add
mov
sub
gs
movsl
stc
jmp
icebp
aaa
rorb
jg
pop
add
in
test
push
mov
jge
test
or
hlt
dec
inc
popa
xor
arpl
inc
testb
sarb
jmp
test
stc
jmp
push
add
imul
jo
fidivs
int
mov
dec
sub
push
subb
add
lods
dec
xchg
jns
aam
cmc
xor
xchg
jns
jnp
sub
shlb
jo
scas
jbe
dec
pop
mov
pop
add
mov
jnp
ja
icebp
xchg
sbb
push
cmpsb
or
loope
cs
mov
insb
adc
stos
arpl
sbb
sbb
rol
mov
xorb
or
mov
dec
popf
xchg
stos
add
iret
mov
mov
pop
and
lds
cmpsl
nop
jle
sar
cmc
sub
pusha
xor
call
enter
pop
imul
xor
jnp
test
out
dec
push
pop
pop
jle
test
lcall
inc
xor
int
in
pusha
jmp
xor
in
add
lods
aas
mov
pop
sbb
loop
aam
imul
jge
in
icebp
insb
mov
jae
movsl
fstpl
pushl
add
push
pop
negb
jbe
hlt
cs
xchg
xchg
aaa
sub
lcall
loop
xchg
testb
ja
sub
movsbl
das
add
add
imul
cld
rcr
mov
mov
rcrl
sbb
pusha
mov
insb
aas
push
xlat
xchg
mov
mov
stos
in
mov
dec
dec
idivl
and
les
inc
fadd
sub
push
or
and
into
xchg
jnp
movsl
pop
dec
inc
mov
push
out
sub
dec
sub
mov
push
mov
andl
jno
sbb
dec
pusha
and
sub
mov
addr16
push
adc
js
mov
hlt
sub
pop
and
ret
adc
push
add
je
pop
pop
arpl
add
or
push
mov
negb
mov
and
ret
or
in
jne
ficoml
cmc
push
sbb
das
pop
imul
lcall
in
pop
jmp
and
in
jns
bound
addr16
dec
sub
mov
adc
ss
mov
bound
dec
mov
dec
ror
icebp
rorl
idiv
mov
sub
jo
add
dec
aas
inc
mov
ja
push
add
add
shlb
pop
sbb
cs
je
shr
inc
out
int3
xor
adc
out
or
jmp
ds
add
into
imul
adcl
mov
push
fs
and
stc
push
lods
push
sbb
pop
mov
adc
jno
adc
in
lock
or
jns
push
add
sahf
stos
mov
jg
lcall
fcoml
btc
or
enter
pusha
mov
add
movsb
or
daa
int
inc
es
out
add
mov
fsubl
mov
pop
adc
aad
add
mov
or
push
pop
jns
call
movsb
faddl
and
clc
mov
aas
jmp
mov
pusha
sub
mov
aad
out
cwtl
xchg
adc
cltd
sub
jp
mov
adc
sar
mov
lret
daa
mov
dec
lds
and
scas
bound
pop
add
and
roll
lds
push
loope
jp
sets
shll
repz
lret
mov
jmp
in
int3
pop
mov
cmp
lahf
adc
in
jnp
mov
sbb
aam
add
push
andb
dec
inc
je
pop
cli
into
std
adc
push
cli
cmc
jle
sbb
push
fidivs
dec
mov
mov
lods
pop
mov
cmp
push
pop
outsb
loopne
xlat
rcll
adc
jle
test
das
xchg
pop
movb
mov
cli
xchg
je
dec
pushl
mov
idiv
xchg
lods
mov
jmp
std
and
pop
pusha
int
cmp
adc
jno
add
test
mov
cmp
jg
add
out
fisubl
fs
xchg
cmc
adc
jne
loop
xor
sbb
cltd
bnd
loop
int
inc
push
pop
cs
les
inc
xorl
cmc
in
mov
xchg
rolb
xor
rcll
insb
pop
mov
push
lcall
aam
cmp
xchg
rclb
pusha
test
inc
scas
test
clc
push
mov
rolb
lock
sub
adc
or
xor
movsl
push
insb
gs
xor
add
sub
lcall
dec
pop
pop
cwtl
cmp
inc
mov
push
cmp
rolb
sbb
inc
mov
movsb
lock
dec
inc
or
aaa
inc
cmp
jl
or
add
inc
xor
or
add
and
push
mov
add
test
sub
xor
adc
mov
adc
rol
js
or
out
add
shlb
push
sbb
or
xorb
jmp
jmp
mov
add
jge
sub
sbb
xchg
or
dec
add
and
push
inc
jecxz
insb
test
stc
addl
add
adc
and
or
orb
adc
and
into
cs
xor
mov
sbb
sbbb
inc
push
repz
bound
add
es
bnd
dec
mov
push
jo
push
jo
push
lcall
inc
cmp
and
fistpll
ret
dec
popf
cmp
mov
inc
jecxz
and
leave
sub
sbb
int3
pop
push
push
aaa
inc
cmp
lock
call
adc
sub
pop
mov
minps
in
mov
or
cli
loopne
add
and
cmpl
jns
test
inc
cld
add
std
incb
dec
dec
idivl
mov
push
push
mov
xor
movzbl
lret
mov
mov
push
xor
xchg
sbb
mov
dec
cmp
lea
jmp
inc
lods
and
imul
in
adc
incl
or
push
sub
data16
mov
push
jge
xchg
adc
sbb
std
int
loopne
or
mov
adc
sbbl
push
sub
and
adc
test
xor
lods
xor
mov
push
mov
mov
test
sub
shr
lods
test
inc
adc
mov
cmp
enter
mov
stc
rolb
shr
test
rcrl
mov
xor
or
or
and
enter
in
shr
loopne
xorb
pop
es
mov
sub
xchg
ret
in
sbb
das
mov
inc
xchg
test
fwait
testl
add
mov
lea
pop
jmp
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
or
negl
decb
mov
sub
xchg
movb
push
enter
iret
mov
cltd
or
adc
aas
xor
inc
jbe
repnz
cmp
sbb
jg
xchg
push
adc
repnz
xchg
and
inc
or
jmp
pop
mov
decl
mov
clc
loopne
int3
call
inc
dec
sbb
pop
stc
call
add
xchg
rol
xchg
andl
sbb
std
inc
xor
or
test
pop
pop
rol
leave
ret
pusha
sbb
mov
or
outsl
pop
pop
call
pop
sbb
and
add
mov
imul
mov
outsb
adcb
sub
out
aaa
jnp
xchg
lock
fisubrs
int3
jne
cmpsl
add
add
adc
jp
push
mov
sub
fimuls
jmp
add
mov
int3
in
add
mov
pop
or
mov
mov
fwait
int3
nop
mov
jp
clc
sbb
or
push
dec
xchg
add
rcrl
insb
add
push
dec
jp
cltd
movl
pop
dec
sub
or
idiv
or
pop
add
sbb
xchg
jns
mov
pop
pop
jp
sarb
xor
push
cmp
les
loope
jbe
add
xlat
fildl
aaa
or
and
or
lock
push
add
jp
xchg
mov
fidivrs
out
push
andb
mov
adc
add
in
xor
fwait
or
and
cmc
lea
add
fcmovnbe
or
dec
iret
sbb
mov
sbb
faddl
mov
sbb
mov
add
sahf
adc
dec
mov
out
jecxz
add
push
mov
jae
mov
pop
hlt
rorl
cli
mov
xor
stos
push
packuswb
add
inc
xor
xchg
dec
dec
sub
add
and
fs
out
lods
arpl
das
add
xor
xor
js
push
loopne
sub
push
mov
mov
add
cmp
add
mov
sub
adc
fwait
cmpsl
xor
xor
and
stos
jo
inc
add
xor
rdtsc
rcl
sbb
fs
sbb
jle
add
sbb
popa
xchg
add
stos
add
dec
pusha
lods
call
jno
add
enter
push
mov
or
pusha
cmp
mov
pop
xadd
lret
ss
rcr
ret
add
and
add
arpl
sbb
stos
popf
lcall
loopne
jmp
push
cwtl
lret
les
mov
repnz
mov
jecxz
sbb
lahf
mov
test
pusha
push
lret
or
sub
imul
xor
adc
sbb
mov
adc
add
mov
sbb
mov
and
int
push
jae
adcl
sub
shll
push
sahf
adcb
fisubl
cvtpi2ps
jmp
mov
rcrb
dec
pop
fiaddl
sub
and
arpl
shr
push
cmc
mov
xor
pop
dec
xchg
dec
ror
repnz
lahf
out
stc
imul
rol
bound
call
pop
and
add
out
mov
jno
pop
fprem
dec
mov
xor
mov
xor
mov
mov
add
rcrb
or
leave
sbb
into
push
std
cmp
mov
and
test
or
mov
fbstp
add
shrl
stc
and
sahf
sbb
mov
sub
cs
lret
or
xor
imul
add
ret
dec
mov
rorb
add
aaa
add
loopne
fnstcw
stc
sbb
clc
aaa
adc
rolb
jo
mov
test
dec
jns
or
add
xor
imul
mov
add
dec
xchg
in
out
add
push
mov
push
pop
jns
cmp
daa
mov
mov
jo
mov
cwtl
adc
fimull
add
push
pop
in
pop
decb
add
es
pusha
sbb
push
add
in
xchg
repz
pop
sub
rcrb
and
push
or
pop
adc
fdivl
pop
loop
xchg
nop
push
stos
sub
mov
nop
sbb
rcrb
mov
rorb
add
sbb
xchg
add
mov
jns
push
xor
pop
lock
cmp
dec
popf
mov
mov
push
dec
mov
and
add
mov
stos
fdivrs
rdtsc
and
aaa
arpl
push
subb
stc
iret
popa
xchg
and
and
push
push
push
out
lahf
or
push
stos
pop
in
jg
popa
sbb
movsb
nop
mov
push
sbb
mov
add
ret
mov
cmc
add
sti
out
loopne
dec
scas
clc
sarl
fnstcw
sbb
outsl
pop
cli
sar
mov
and
imul
jbe
sbb
pusha
mov
int3
adc
mov
popa
add
xchg
sarb
sbb
cmp
in
inc
nop
popa
or
and
outsb
stc
xchg
inc
fprem
or
push
dec
mov
jecxz
nop
or
popf
cmpsl
add
repz
sbb
pusha
cli
xor
sbb
lret
lock
dec
ljmp
data16
add
pop
repnz
xor
icebp
cmovle
aaa
mov
js
add
test
daa
add
lahf
jle
jmp
data16
add
push
xchg
fildl
adc
test
xchg
dec
xor
cmp
jns
leave
sub
repz
sub
push
or
adc
aad
femms
outsb
mov
std
lds
insb
pop
nop
xchg
mov
xchg
pusha
test
jbe
cli
aas
pop
add
add
outsb
inc
mov
imul
adc
pop
jle
or
add
or
xor
xchg
fldenv
xchg
and
add
gs
fbstp
test
int
pop
fsubl
dec
xor
sub
loope
loop
jae
xorb
lock
push
xlat
out
into
stc
cmp
dec
push
out
enter
es
xlat
lea
and
int3
fsubrp
cmp
and
rorb
in
fld
rolb
pop
xor
loope
and
out
xlat
add
sbb
pop
jp
sarb
xchg
mov
and
ret
loopne
or
add
in
add
fimuls
and
shl
mov
ss
frstor
and
pop
push
ds
test
icebp
mov
cmp
xor
test
adc
call
std
adc
jp
fwait
cld
sub
orb
mov
adc
jle
xor
pop
dec
and
push
cmp
mov
mov
scas
push
mov
dec
inc
adc
divb
add
iret
sbb
rcll
mov
dec
int
adc
pop
sbb
mov
cmp
inc
in
out
cmpsb
mov
rol
ss
in
add
ror
dec
fiadds
movsl
pop
dec
inc
out
xchg
enter
sub
enter
mov
cmpsb
mulb
stos
or
fistpl
mov
enter
cmp
cmp
sbb
jno
jns
mov
rolb
jmp
stos
add
or
shl
pop
arpl
add
ret
loopne
mov
fs
loopne
jns
pop
add
and
inc
mov
cld
fiadds
inc
and
faddl
lret
imul
push
jl
add
enter
sbb
cmp
sub
mov
outsb
add
jae
push
add
or
cmpsb
outsl
pop
xchg
pop
pop
orb
test
push
les
sub
in
ja
das
jae
add
push
pop
add
pop
pop
outsl
and
adc
sub
or
add
push
stos
js
add
mov
sbb
add
add
push
dec
out
pop
inc
stos
test
mov
inc
nop
xchg
add
jg
aaa
adc
xor
mov
cs
add
xchg
rorb
ja
or
btr
mov
jp
add
mov
add
mov
neg
enter
in
add
call
jbe
add
rolb
xchg
data16
out
fdivr
lret
or
dec
jge
add
fstp
and
into
cmp
mov
ds
sub
std
sub
pop
ljmp
pop
stos
jbe
xchg
mov
scas
add
sbb
imul
or
lods
sub
lea
scas
inc
shlb
in
dec
fiaddl
inc
shrb
xchg
xor
add
mov
add
leave
setbe
enter
add
and
shlb
aam
insl
jnp
mov
pop
icebp
fdivrl
rolb
and
add
dec
sub
cld
mov
pop
add
jbe
mov
mov
fiaddl
test
xchg
int3
mov
xchg
dec
pop
ljmp
mov
cmp
cld
mov
pusha
xchg
inc
jl
lea
xor
popa
je
add
dec
into
movsl
nop
test
cmpsb
add
fidivrl
add
ret
xlat
or
xchg
xor
add
jg
add
pop
sbb
sub
adc
in
fwait
add
testb
mov
rcrb
aaa
add
insl
es
add
xor
jo
dec
or
mov
mov
sti
fdivs
xchg
fildl
mov
js
out
lret
mov
mov
int
ss
jns
mov
inc
stos
and
outsb
aaa
ds
adcl
pop
je
add
pop
adc
push
sbb
lcall
repz
add
adc
mov
ss
mov
mov
sbb
add
mov
lock
out
pop
mov
add
mov
call
repnz
pop
pop
int
lods
mov
and
mov
popa
mov
aam
jo
xor
sti
cld
call
ss
int3
scas
or
and
fdivl
dec
ljmp
or
es
clc
xchg
push
cmp
sahf
andb
xchg
pop
fsubrp
add
inc
mov
push
add
cmpl
and
jecxz
xor
nop
push
std
pop
add
iret
or
in
dec
push
test
xorb
mov
sub
rcrb
and
lcall
movsl
outsl
lods
addr16
add
pop
pop
dec
ret
jp
adc
arpl
icebp
lcall
cmpsl
pop
into
hlt
movaps
cli
mov
xlat
adcl
add
fdivrl
je
push
lcall
lea
jb
mov
jg
aad
in
pop
jbe
jb
lods
mov
inc
dec
xchg
adc
cmp
fs
fsubp
cmp
xchg
add
cld
sub
mov
add
jb
jbe
mov
push
hlt
dec
sbb
cmpsb
movb
push
scas
ljmp
js
push
es
rcrb
add
imul
mov
or
ret
sbbb
dec
lret
out
loopne
push
inc
mov
add
push
inc
pusha
pop
xchg
popa
jle
fwait
loope
je
xchg
fsubrl
mov
jno
pop
and
push
test
pop
dec
inc
aad
and
inc
jbe
and
sub
add
pusha
mov
xchg
ljmp
mov
mov
jge
mov
push
xchg
xlat
shll
test
push
ja
mov
sbb
sbb
sub
jge
add
lods
pop
push
jp
adc
xor
mov
aaa
out
pusha
jmp
add
dec
and
out
dec
je
inc
sbb
jns
add
adc
ret
sub
insb
sbb
inc
dec
xor
cmp
or
test
addr16
hlt
outsb
or
xchg
sub
insb
mov
add
push
or
stos
mov
jae
lds
aam
fiadds
jb
dec
rol
add
pusha
pop
sub
or
sbb
and
jo
daa
add
push
inc
loopne
call
aad
rcrb
adc
jns
pop
pop
aas
aas
call
mov
adc
call
lock
sbb
lret
std
hlt
add
fisubs
sarl
insb
or
or
test
nop
xchg
outsl
fbld
dec
les
add
adc
insb
aad
mov
add
jle
movsb
jo
or
add
mov
xchg
or
or
mov
jmp
add
add
cmp
mov
lea
add
lds
icebp
dec
sti
push
in
loopne
mov
loop
shrb
out
mov
gs
pop
mov
negb
sbb
push
nop
sbb
mov
rcll
cli
push
pop
movsl
test
sarl
add
out
xor
out
pop
fs
push
add
jp
loopne
sbb
mov
ds
push
ljmp
adc
mov
xchg
add
xchg
out
xchg
loop
pop
jg
cld
mov
add
fidivl
or
in
scas
insb
outsb
adc
add
icebp
mov
mov
dec
mov
add
imul
add
lret
arpl
pop
pusha
xor
aas
fcos
loopne
pop
jle
js
lods
popl
pop
sti
sbb
mov
jbe
cmp
aam
test
sub
add
daa
add
bnd
add
jno
sahf
rorb
pop
int3
clc
sub
mov
add
bnd
clc
inc
jae
cmp
mov
cwtl
les
push
mov
push
add
pop
aad
jns
sahf
loope
std
jo
cmp
cmc
ljmp
aad
jae
out
add
lods
pop
cmp
sbb
clc
hlt
fs
xchg
sbb
jl
jg
xor
mov
loopne
pop
pop
add
out
adc
daa
in
add
imul
je
add
lock
cli
inc
inc
ja
fwait
push
je
mov
cmp
jge
into
pushf
outsl
in
mov
lods
lea
cmpsl
fwait
sbb
add
mov
inc
mov
out
push
xor
lcall
and
inc
sbb
and
lahf
cwtl
adc
lock
aad
bound
add
mov
and
movsb
add
fnstcw
test
xchg
add
xchg
gs
test
ljmp
add
push
jmp
push
xor
xchg
inc
xchg
add
pop
insb
lds
adc
divps
rolb
add
icebp
xlat
aam
inc
sub
les
pop
mov
dec
ror
push
push
add
sbb
mov
fucom
pop
add
jp
xlat
xor
xor
and
add
jbe
mov
daa
aam
lds
adc
add
and
subl
cmpsb
xor
add
loopne
xor
add
or
add
mov
into
push
mov
add
inc
and
cld
pop
inc
jl
inc
sarb
push
push
xor
sbb
or
sub
mov
mov
dec
scas
and
push
add
sar
mov
mov
cli
sub
repnz
shll
pushl
xor
add
fstp
int
inc
xor
add
adc
mov
cmp
enter
mov
rclb
xor
or
xchg
paddsw
or
outsb
mov
lcall
jbe
sub
leave
adc
add
xchg
ljmp
mov
adc
rolb
aas
add
or
stos
sti
inc
pop
and
inc
mov
and
push
or
jb
enter
adc
xchg
clc
and
dec
cmpsl
jns
insb
sub
push
mov
lea
add
adc
lods
mov
adc
insb
cmpsl
leave
xchg
push
pusha
btl
inc
adc
push
add
les
add
or
adc
scas
adc
dec
outsb
add
cmp
stos
sub
mov
inc
add
fiadds
lods
or
jne
jecxz
xchg
add
rclb
adcb
sti
fdivl
jmp
push
shl
mov
or
xchg
mov
push
adc
and
mov
push
sub
add
xor
lods
and
jge
or
push
sbb
push
adc
in
je
cmp
cmp
shll
cmp
sub
jge
sub
and
mov
mov
mov
shr
inc
add
sbb
mov
iret
cwtl
push
jp
adc
pop
push
push
addb
add
pushf
sub
push
jo
cli
add
add
jbe
dec
xor
in
mov
test
add
popa
pop
push
mov
sub
jle
lods
mov
push
or
or
xor
sub
loop
adc
repz
add
mov
xor
int
ja
rol
bound
jae
daa
shrl
rolb
nop
fwait
sbb
push
sbb
inc
shll
jnp
inc
filds
ror
push
add
sbb
sbb
sbb
ds
rorl
clc
mov
jg
xor
push
mov
xchg
mov
sub
push
xchg
mov
mov
pop
imul
pop
add
scas
out
push
pop
sub
cld
leave
add
popa
clc
ficoms
movsb
push
pop
push
rclb
cmc
testb
test
jmp
pop
rcl
push
cmp
hlt
add
in
dec
dec
test
jo
lea
adc
sbb
push
pusha
clc
test
xor
jecxz
ds
pop
push
jo
push
pop
aad
add
hlt
inc
xlat
add
inc
mov
rorb
data16
push
das
jle
mov
or
shlb
sbb
ljmp
mov
lock
add
cmc
xor
jmp
push
add
mov
xchg
mov
jmp
cmpb
jp
faddl
mull
iret
jecxz
stos
in
add
adc
and
ds
sub
add
push
bswap
or
mov
stos
dec
and
rorb
sahf
mov
dec
sbb
jp
sti
add
lret
add
fldz
rolb
jp
xchg
outsl
cwtl
stos
mov
aas
lcall
dec
ret
iret
dec
rol
mov
add
loop
inc
cld
or
out
es
pushf
push
mov
int3
stc
adc
jl
js
add
mov
hlt
mov
aas
sbb
add
pop
push
mov
scas
jmp
cmp
dec
pop
sahf
mov
cmp
roll
xor
dec
lods
jne
mov
mov
add
dec
fiadds
outsl
pop
push
xchg
fwait
mov
jp
add
jle
loopne
rcrl
or
cmpsb
loopne
inc
xchg
cmc
jb
js
ret
cmp
movl
cld
sub
dec
out
lret
pop
pop
arpl
add
les
or
dec
mov
sub
adc
pusha
iret
xchg
and
sbb
mov
sub
mov
lret
into
and
dec
loope
add
std
ja
sub
divl
es
sbb
jbe
lahf
adc
pop
push
sbb
sbb
icebp
pop
jo
pop
add
aas
stos
addr16
inc
or
pop
cmp
add
notl
mov
pusha
xor
incl
into
dec
lcall
shrl
adc
push
out
mov
add
das
dec
loope
pusha
fwait
sub
mov
or
out
jns
xchg
mov
pusha
stc
sub
ret
add
pop
int3
lods
adc
outsl
mov
adc
lret
push
daa
or
shll
mov
mov
dec
clc
lea
pop
iret
add
cwtl
push
leave
out
nop
mov
xchg
mov
add
sub
stos
add
lock
cmp
shl
or
jle
icebp
icebp
ficomps
xchg
add
dec
push
pop
fcompl
dec
push
cwtl
icebp
mov
imul
push
pop
and
inc
inc
mov
call
mov
fs
cld
lcall
pushf
jg
stc
jnp
add
xchg
fisttpll
and
push
cmp
mov
test
add
repnz
outsl
int3
cltd
jno
pusha
scas
inc
push
add
mov
aad
shrl
std
inc
into
add
mov
push
jne
jp
cmp
cwtl
call
aad
mov
mov
in
pop
fcomps
lods
jg
adc
xchg
add
aam
mov
add
inc
dec
pop
mov
int3
add
aad
cmp
adc
xchg
loope
pusha
mov
sbb
sbb
cwtl
fstpt
xchg
sbb
rorl
inc
hlt
xor
inc
ficompl
cmpsl
add
mov
or
clc
fstpl
sahf
mov
stos
lret
imul
add
pop
ja
cwtl
xor
mov
adc
aam
cmpsb
pop
leave
pop
mov
sub
and
lock
xchg
neg
dec
jg
into
add
cmp
cmc
mov
sub
notb
jb
inc
pusha
inc
add
or
fiadds
rcrl
mov
push
fs
inc
mov
dec
and
jge
xchg
sbb
mov
xlat
jne
mov
and
mov
mov
cmp
jle
and
ret
inc
shlb
ja
lds
push
cmp
or
les
sbb
push
jmp
and
movntq
out
nop
bnd
sub
sub
inc
inc
mov
popa
add
lods
shrb
rol
add
popa
and
and
aad
adc
leave
mov
roll
cmp
or
jne
out
bound
mov
in
loope
repz
aad
add
aam
dec
or
mov
add
lea
cmc
cmp
dec
cmpsb
jge
in
mov
mov
addb
jb
ret
notl
mov
out
pop
aad
dec
add
xchg
sbb
dec
loop
add
jge
xchg
xchg
in
inc
cs
push
cmp
in
faddl
pop
std
cmp
addb
cmp
push
bound
pop
xchg
or
pushf
scas
cwtl
mov
sbb
das
sbb
les
test
push
cmp
pop
jge
repz
ret
add
int
scas
push
push
sub
or
mov
inc
add
inc
xchg
and
pop
enter
daa
mov
add
mov
add
popf
xchg
stos
mov
lods
mov
mov
fldl
xchg
inc
add
or
push
lret
push
jl
out
rolb
add
mov
ljmp
sub
loopne
jg
ds
xchg
mov
pushf
sti
adcb
dec
pop
lds
or
mov
mov
out
push
pop
dec
push
add
test
js
lea
rcrb
je
add
in
das
cs
cmp
jle
inc
loopne
add
pop
add
les
loopne
add
pop
inc
adc
pop
mov
add
loope
cmp
sbb
pop
jb
popa
add
xchg
add
adc
pop
add
jg
lock
dec
in
lcall
bound
scas
push
dec
mov
add
repz
bnd
mov
cmp
cmc
add
pop
push
faddl
jb
mov
rolb
fistps
dec
add
setle
jmp
ja
sbb
cmp
cld
clc
or
daa
pop
out
pop
add
xor
outsl
jns
add
push
push
sti
add
dec
inc
or
jecxz
fistl
in
divb
mov
mov
sbb
shr
out
add
ret
repnz
jg
push
enter
cmpsb
out
jnp
outsb
or
pop
dec
insl
fcomps
cmc
jo
jns
negl
push
mov
int3
inc
push
add
dec
xchg
mov
add
popf
xchg
stc
add
mov
or
sub
movsb
pop
pop
jno
or
sub
pop
add
add
fwait
adc
xor
xor
sub
sarb
or
cwtl
gs
inc
push
mov
out
stos
mov
cmp
inc
pop
lock
jne
int
shrb
sbb
stc
dec
nop
mov
push
dec
pop
rcrb
sub
pop
arpl
mov
push
sbb
mov
sbb
sarl
dec
dec
fstps
insl
add
shrl
sahf
mov
repz
dec
test
dec
and
adc
sbb
push
bound
nop
fs
imul
testb
leave
stos
call
out
mov
icebp
inc
dec
call
popl
mov
loop
pusha
enter
mov
cmpb
and
mov
add
jae
cmpsb
clc
add
fs
pop
add
mov
sarl
sub
mov
sub
ret
loope
mov
dec
sbbb
sbb
pop
cwtl
dec
push
movaps
mov
add
in
pop
jno
or
adc
scas
shlb
cs
sti
int
pusha
mov
jle
xchg
add
in
insb
lods
adc
jb
add
xchg
xor
or
jo
adc
test
sbb
add
jns
aas
xchg
push
jno
and
add
mulb
out
dec
xor
push
subb
mov
ss
jne
inc
add
mov
lret
lret
inc
mov
or
add
pusha
testb
pop
out
adc
xor
orb
adcl
into
filds
mov
ds
lods
pop
push
add
or
or
xor
arpl
stc
pop
and
stos
imul
filds
int3
test
gs
add
rorb
lea
inc
mov
adc
xchg
pop
rcr
pop
int
add
in
cltd
and
in
add
cmp
push
shrb
add
cmp
in
imul
aam
and
jo
dec
cmp
push
add
popa
xchg
ja
shl
add
popw
mov
std
movsl
sub
js
add
inc
in
leave
adc
dec
sbb
pop
pusha
or
xor
mov
psllq
shrl
push
add
jne
fsubrp
cmp
xor
cmpsb
jmp
subb
jnp
or
mov
adcb
loopne
add
cld
sbb
sbb
add
ljmp
add
loop
mov
lahf
inc
xor
rorl
cs
hlt
cmp
mov
jbe
sbb
inc
movsb
mov
jnp
cld
arpl
rcll
xor
sbb
add
pop
popf
xchg
mov
pop
adc
mov
jb
nopl
frstor
in
into
aas
or
inc
xor
lods
cmp
stc
xor
jecxz
add
pusha
lret
mov
sbb
add
fidivs
mov
push
sbb
adc
sbb
mov
mov
sbb
fcmovb
test
inc
mov
jle
add
and
sub
sahf
mov
adc
sub
adc
movsl
insb
sub
ljmp
test
fsubr
mov
jl
pop
add
arpl
lea
dec
outsl
push
mov
mov
pop
push
lahf
mov
adc
int3
mov
mov
cmp
popf
add
inc
lea
fs
prefetch
pop
movsl
cwtl
fsubrl
and
pop
sbb
mov
pop
cwtl
sub
fimull
dec
mov
test
push
jo
or
dec
fndisi(8087
roll
pusha
rolb
mov
fwait
jae
sbb
mov
add
lds
jge
pusha
test
or
fiadds
fucomi
dec
jae
dec
mov
xchg
lock
nop
mov
push
pop
in
outsl
cmc
adcb
and
cmp
mov
enter
clc
or
popf
mov
mov
sbb
pop
jns
jb
pusha
and
or
xor
or
cmp
inc
add
adc
pushf
les
sub
dec
mov
pop
shl
mov
xor
dec
xchg
mov
adc
or
xchg
cmp
sub
pop
add
imul
lds
push
lret
jmp
inc
sbb
leave
jo
mov
inc
fdivrl
cmpsb
mov
call
out
sbb
inc
jae
and
inc
mov
mov
pop
jno
mov
mov
dec
fwait
add
ja
scas
add
ror
fiaddl
mov
rclb
sub
pxor
pop
or
mov
jp
xchg
mov
mov
icebp
add
insb
cs
xchg
mov
add
add
loope
mov
roll
mov
mov
lahf
adc
idivl
clc
loope
jl
ss
or
lods
jecxz
add
lret
push
xchg
bound
or
jl
cmp
push
lea
mov
or
sub
xchg
jge
cmp
jb
sbb
jmp
jmp
or
and
icebp
mov
jo
cmpl
fldcw
add
xchg
std
jnp
inc
mov
pop
sub
test
xchg
xchg
sub
push
in
test
arpl
add
dec
and
gs
bound
es
sub
stos
mov
or
pop
jne
shrb
scas
push
into
in
into
xchg
and
jle
mov
add
cmp
inc
pop
xchg
push
jnp
movsb
pusha
and
add
fcoms
push
or
xchg
xchg
add
or
inc
repz
xchg
orb
mov
lods
ljmp
push
es
out
nop
push
andl
in
jnp
sbb
ja
aas
add
add
push
daa
adc
iret
lret
mov
mov
imulb
and
and
cmp
hlt
sub
adc
xchg
sahf
jo
or
inc
xchg
outsb
pusha
add
mov
push
jg
call
les
add
sbb
in
std
xchg
mov
mov
add
mov
cmp
and
lcall
pop
movsb
adc
sub
cltd
inc
popa
jg
mov
insl
adc
pop
add
repnz
sub
or
aad
mov
ds
cltd
and
mov
testl
mov
daa
int3
mov
cwtl
pop
and
lea
imul
stos
xchg
rcrl
mov
push
pop
jb
incb
xchg
add
jg
fimull
inc
loopne
repnz
pop
addr16
pop
adc
daa
add
test
js
push
stos
add
push
pop
into
inc
sub
or
add
scas
sbb
aam
shrl
loopne
mov
mov
stc
scas
add
test
mov
add
adc
data16
sbb
call
xor
out
and
test
test
or
fisttpl
pop
or
mov
leave
orb
je
or
sub
inc
jb
outsb
mov
incl
sbb
enter
jno
add
repz
jnp
add
ja
clc
icebp
xchg
leave
or
aad
adc
or
xchg
les
and
sbb
imul
pushf
and
mov
and
cld
aaa
cmp
imul
out
dec
push
sub
lret
add
mov
ss
sub
xchg
imul
and
push
into
adc
add
sub
in
sbb
sbb
pop
push
sub
sub
push
ret
jle
add
sub
add
shl
cltd
mov
int
out
fidivrs
inc
cs
ss
addr16
pop
cmp
je
xor
mov
and
jne
cltd
fs
das
pslld
jge
add
lods
sub
pop
loope
add
push
jne
jo
cwtl
insb
add
pop
mov
incl
cmp
inc
je
mov
movsb
push
mov
scas
push
sarb
ljmp
sbb
sub
es
cmp
push
adc
push
mov
into
jmp
cwtl
test
push
ret
mov
ljmp
loop
cmp
cld
jle
sub
nop
push
mov
dec
es
and
clc
into
adc
fiadds
lret
das
jbe
add
sub
stos
insb
push
andb
out
jl
sbb
mov
jle
dec
ja
or
mov
and
outsl
sarl
mov
shlb
psubq
inc
lcall
sub
sub
cmc
je
test
mov
leave
push
push
scas
inc
cmp
add
xor
test
mov
inc
pop
inc
lahf
add
sbb
mov
movb
dec
jg
daa
push
or
cmp
cld
hlt
or
call
dec
adc
add
sbb
xor
add
add
in
insb
mull
xor
add
and
outsl
pop
cld
or
add
xchg
outsb
xor
inc
ja
pop
and
jmp
ds
out
sub
sahf
lret
xor
lahf
or
add
cmp
sub
scas
adc
ss
orb
mov
add
pop
stos
out
pop
jne
lcall
push
add
pop
sub
pop
scas
imul
inc
shrb
ret
add
cmp
inc
jbe
lcall
movsb
cli
fwait
jo
xchg
dec
jb
mov
test
lahf
inc
xorb
icebp
jne
xor
add
outsl
and
scas
arpl
jnp
sbb
in
push
rcll
pcmpgtb
inc
mov
aam
jns
pop
pop
inc
stos
out
jl
dec
sbbl
xchg
call
cld
add
inc
inc
enter
add
pop
mov
add
pop
inc
jne
xor
loop
adc
xchg
lahf
inc
add
outsl
mov
mov
add
out
bound
shll
mov
testb
aas
dec
xchg
mov
dec
mov
sahf
mov
cmp
ret
cmp
cmp
mov
mov
jl
add
push
cwtl
cmpsl
add
icebp
cli
or
cltd
push
add
xorl
outsl
lds
jb
mov
cmp
or
xchg
or
pop
test
pop
out
adc
in
mov
les
rolb
xor
in
out
sbbb
repnz
rolb
je
and
inc
add
xchg
fcomps
sub
pop
xor
dec
clc
out
jecxz
idivb
mov
push
stos
mov
insl
cmp
ret
inc
sbb
mov
jnp
add
sbbb
repnz
ret
inc
cld
enter
add
cs
or
orb
movsb
fmul
pop
mov
insl
sub
mov
je
int3
fadds
push
test
cmp
pop
push
or
clc
jns
js
jp
negb
cld
add
jbe
addl
cwtl
add
and
rol
fidivrl
jo
rcrb
jl
cwtl
mov
scas
lock
arpl
xchg
or
jmp
xor
aam
xor
pop
rcr
ret
push
mov
inc
inc
xchg
ja
incl
scas
push
ljmp
and
idiv
call
lods
pop
add
inc
push
sub
cmp
popf
test
cmpsl
pop
push
mov
jle
pop
mov
lea
sbb
int3
dec
add
test
mov
loope
ror
cmp
fsubl
push
fbstp
push
mov
add
ret
insb
or
aad
loop
pusha
rorb
add
adc
test
cld
adc
push
sbb
addr16
pop
add
shl
lcall
push
cli
cld
rolb
jno
jle
out
stc
mov
pop
rorl
fs
sbb
pop
push
mov
test
in
mov
pop
cld
std
lock
into
push
mov
cs
cmp
mov
cmp
in
xorb
cwtl
push
arpl
jp
ja
dec
adc
pop
in
cmp
test
add
inc
pushf
js
xchg
inc
add
ret
ror
out
add
jns
dec
aaa
add
xchg
mov
mov
rorb
pop
inc
aad
sahf
rorl
hlt
sub
in
push
adc
scas
mov
nop
in
jge
dec
rcl
adc
fisttpll
jl
orb
push
xor
cmp
add
or
scas
xor
orl
add
adcb
ret
aaa
pop
call
sbb
jge
imul
lock
xor
mov
add
cmpsb
loopnew
lods
int
iret
or
jp
push
adc
pop
lea
loopne
insl
add
out
lcall
inc
cmpb
outsl
sbb
add
or
test
push
loopne
js
sahf
mov
mov
xor
xchg
imul
or
xchg
xor
fs
push
add
sub
movsb
fsubrs
add
sbb
test
push
popl
mov
cwtl
dec
add
add
jmp
ljmp
aas
push
out
testl
adc
mov
lods
inc
rolb
push
insb
jnp
divb
add
cmpsb
sarb
xchg
push
mov
andb
add
pop
movsb
fcomps
mov
xchg
jge
adc
ret
add
xlat
fimull
imul
stos
push
dec
push
mov
mov
rol
or
adc
pop
xchg
sbb
add
mov
hlt
rolb
pusha
popa
incb
imul
aad
scas
loope
sbb
roll
push
scas
mov
inc
sub
dec
pusha
and
push
jne
cmpsb
dec
pop
aam
mov
pushl
push
cs
fisttpll
sub
mov
movsb
mov
jo
jae
arpl
push
clc
jne
js
pop
mov
cwtl
in
cmpsl
cs
lcall
sar
scas
filds
or
mov
mov
in
push
sbb
inc
into
inc
dec
cmp
mov
out
rolb
lock
ljmp
add
or
popa
idiv
imul
imulb
add
push
mov
dec
out
ret
insb
ss
mov
arpl
mov
jg
jo
or
push
jae
mov
aam
jg
xchg
or
inc
lret
sarb
hlt
shlb
les
mov
pop
mov
jo
add
jg
inc
mov
cmp
dec
loope
cwtl
ja
mov
xor
xchg
or
jp
push
push
xchg
add
add
or
xor
pushf
add
sbb
dec
test
call
lods
cwtl
add
or
pushf
cmp
daa
cmp
pusha
mov
test
mov
jle
cld
out
or
pusha
popa
ror
gs
inc
xchg
stos
aad
lods
inc
and
shrl
xchg
hlt
sub
jno
popf
rol
mov
fcomps
mov
cltd
jne
pinsrw
pop
pusha
sahf
fstpt
mov
inc
test
je
mov
or
add
sbb
jg
adc
cmc
mov
add
gs
add
jle
inc
adcb
and
in
or
xchg
mov
insb
fwait
das
lds
pop
add
int3
mov
jge
ret
dec
add
dec
lock
xor
sbb
ds
cmp
dec
clc
in
mov
sbbb
xchg
add
jecxz
mov
cld
stc
inc
int
test
sub
incb
or
js
rcr
jnp
adc
push
loopne
ljmp
cmpsl
popf
cmp
jno
jbe
pop
lcall
add
lahf
dec
popf
in
pop
imul
or
push
adc
clc
daa
xchg
insb
clc
lods
add
aaa
aam
sub
cmp
pop
daa
fcmovnbe
inc
loop
jg
std
adc
arpl
mov
add
outsb
stos
int3
loopne
fs
add
jg
xor
sbb
pop
add
orl
js
add
daa
movsl
shlb
add
ljmp
add
js
enter
daa
or
add
inc
loopne
jle
cmp
cmp
loopne
jp
adc
fsubrs
inc
or
add
xchg
faddl
lahf
sub
mov
add
mov
fsubrs
das
das
int
cwtl
dec
xor
lock
mov
loopne
push
jmp
cli
inc
cmpsb
bound
loope
ljmp
sldt
push
fwait
or
mov
add
mov
jno
repz
sub
and
pop
enterw
sbb
int3
jmp
and
cwtl
fsub
mov
xchg
pop
mov
cmpsl
test
in
jl
orb
add
aad
mov
xor
cmc
lds
les
test
shrb
pop
in
adc
ret
test
sbb
es
std
xor
add
fwait
push
dec
pushf
cli
ja
pop
mov
adcl
dec
add
jnp
notl
pop
inc
xchg
or
inc
test
pop
fsubrs
fnstenv
test
ret
mov
or
add
repz
fcomip
adc
adc
movsb
add
sti
pushf
jecxz
mov
add
lcall
add
in
cld
mov
mov
push
mov
or
clc
test
cmc
mov
popl
cltd
inc
lock
mov
push
pop
fsubrl
repz
xor
jbe
add
fistl
jmp
add
loop
cmp
pusha
push
push
push
lds
pop
insl
lret
add
add
xor
scas
pop
das
sub
cmc
or
and
jecxz
sub
mov
fidivrl
xor
add
cmp
or
or
ror
jp
cmp
outsb
mov
or
cmp
mov
loopne
pushf
or
jne
pop
xor
sbb
rcrb
cmp
jnp
add
pop
out
ljmp
jo
int
xchg
push
mov
inc
add
add
in
divl
add
ljmp
dec
out
loop
sbb
inc
sub
fbld
insb
ja
stos
and
not
add
jnp
mov
scas
test
xchg
fcomi
inc
jmp
push
inc
fidivrl
push
lods
sub
add
jmp
call
jnp
mov
dec
mov
xor
or
ja
js
pop
pop
ss
adcl
loopne
sbb
mov
cmp
sbb
cmp
push
shrb
sub
lcall
adc
lds
clc
sti
cli
push
pop
std
notb
cmp
adcb
loope
dec
ds
lock
xchg
movb
push
add
push
and
popf
fidivl
add
jne
mov
xchg
addb
dec
and
les
xlat
cmpl
mov
lds
add
outsl
inc
xor
dec
mov
pop
xchg
jecxz
andl
dec
test
cmp
mov
xchg
inc
fstl
shl
shl
enter
push
and
cmpsb
mov
jae
push
adc
fldenv
je
add
loop
mov
sub
cld
dec
add
pop
cmp
repnz
lods
add
sub
in
lea
push
fsubs
mov
push
or
dec
es
rolb
pop
out
data16
addr16
push
cs
pushf
push
ficomps
sub
add
and
xor
add
jecxz
mov
add
push
mov
and
add
cld
sub
dec
out
lds
xchg
jns
movsb
add
dec
icebp
mov
push
sbb
mov
das
xor
adc
stos
add
clc
and
divl
out
int
sub
xor
inc
add
jmp
jo
dec
movsl
cwtl
adc
rclb
ja
pop
push
rol
movsb
inc
fldt
stc
in
sbb
xchg
jp
mov
fisttpll
lahf
add
fstps
repnz
add
imull
dec
cmpl
vxorps
scas
icebp
popf
pop
xchg
jle
add
xor
dec
add
pop
mov
flds
arpl
sub
jb
push
jns
and
shl
mov
mov
cmpsb
push
int3
inc
jp
xor
in
add
jle
setle
icebp
add
mov
mov
repnz
movsl
jnp
xor
dec
lds
shrb
inc
sub
movb
fs
push
outsb
xchg
int
jbe
bnd
mov
push
outsl
pusha
mov
push
dec
dec
adc
movl
cs
mov
push
push
push
lldt
int
and
add
jb
dec
mov
mov
mov
adc
xor
jge
add
addb
add
xchg
outsb
pop
add
mov
stos
imul
pop
sbb
mov
add
push
scas
adc
xchg
jo
push
add
nop
add
cmp
daa
insl
mov
xchg
cmc
cltd
out
aaa
pusha
shlb
xor
test
inc
notb
add
pop
nop
mov
sbb
fadds
jo
shrb
aaa
in
testl
pusha
sahf
inc
inc
pusha
sbb
or
xchg
das
pop
xchg
mov
xchg
push
movl
cli
push
ret
add
lods
sti
pop
mov
jp
cmpl
lret
shll
inc
fld
pop
and
dec
fisttpll
sbb
sbb
rcrl
inc
lock
pop
test
cltd
push
jns
inc
jmp
rolb
or
adc
out
lods
mov
add
adc
leave
shrl
int
push
cmp
xchg
add
and
fxch
aaa
fimull
pop
clc
pusha
jmp
pop
dec
mov
push
pop
clc
pusha
lcall
call
dec
adc
or
lret
rclb
dec
addr16
xchg
xchg
push
lock
xchg
jmp
cmp
add
push
movl
bswap
mov
mov
jecxz
out
jl
jnp
xor
mov
in
test
xchg
inc
dec
shl
adc
fcmove
sub
dec
fists
mov
mov
push
das
mov
push
add
lret
mov
aad
push
pusha
icebp
adc
in
test
pop
add
mov
ret
sbb
add
incl
loopne
das
adc
mov
pop
add
jp
mov
add
loop
add
iret
aaa
rcr
inc
jg
daa
lods
cmpxchg
mov
xor
out
fldl
in
mov
je
jns
daa
int
loopne
es
xchg
push
in
mov
jmp
into
inc
pop
aam
push
fisubrs
fsubrs
std
mov
daa
lea
paddsw
push
popa
repnz
addr16
xchg
mov
bound
xchg
fldcw
or
addr16
adc
test
add
jne
xchg
or
mov
imul
fimuls
jns
mov
jae
std
test
int3
ss
inc
cmp
xor
sbb
aaa
insb
aas
js
jge
or
and
decl
mov
cmp
ja
std
add
fisubl
sbb
cmp
dec
inc
adc
xchg
inc
enter
push
inc
mov
shlb
sub
mov
pusha
inc
xchg
cld
faddl
add
jecxz
aas
sub
xchg
sub
lods
add
dec
out
cmp
xor
std
push
add
inc
xchg
xrelease
add
mov
add
sbb
jb
xchg
mov
fs
jl
cmp
add
fisubl
popa
addr16
adc
and
mov
mov
ss
dec
xor
leave
stc
jae
fmulp
sub
cmp
outsl
ret
int
mov
add
ds
push
jge
call
std
repnz
outsb
stc
jb
leave
lods
add
jle
stos
sahf
xor
imul
xchg
push
cmpsb
push
cmc
loopne
push
orb
jne
aad
inc
lock
xchg
ss
repz
pop
pusha
fistpl
dec
add
fildll
je
inc
xlat
cld
add
sub
xchg
dec
sbb
iret
popf
into
pop
inc
adc
test
loop
orb
movl
and
int
add
cmp
pop
jmp
hlt
nop
ficomps
arpl
fcomip
jbe
add
pop
ret
add
add
int3
dec
mov
jne
add
sub
mov
hlt
push
inc
rclb
add
test
add
into
push
aas
mov
adc
push
mov
add
sbb
pop
jne
mov
loopne
sub
mov
pop
sbb
aad
movsl
pop
popf
add
and
sub
add
fsts
dec
add
mov
enter
sub
cwtl
cli
xchg
scas
push
cmp
incb
int
out
dec
popa
out
jle
jb
les
lods
pushf
cmp
adc
scas
mov
cltd
loopne
pop
lret
call
aas
or
outsl
sub
xlat
popa
pop
and
neg
in
dec
add
mov
push
sbb
fiaddl
mov
ss
test
cmp
lret
xchg
fisubl
or
das
daa
or
loopne
push
xlat
mov
ret
popa
and
iret
shlb
cld
pop
and
xchg
xor
repz
fnsave
and
shlb
cmp
daa
shll
pop
xor
cmpsb
jecxz
insl
pop
cmova
add
push
add
rcr
or
add
mov
sub
add
pop
xor
lea
push
int3
jns
add
cli
stc
xchg
adc
gs
rcr
inc
add
popa
pushf
rolb
sti
into
inc
roll
sbb
mov
jns
arpl
sbb
cld
inc
mov
fisubs
add
lods
dec
adc
jle
js
add
lock
aas
adc
xchg
xchg
icebp
inc
adc
add
mov
rcrb
jo
and
xchg
xor
cmp
jp
add
and
and
into
pop
add
adc
sahf
pop
imul
cmpb
add
cmp
cmc
inc
mov
and
push
xchg
mov
bnd
and
jb
mov
mov
or
sbb
out
pusha
inc
stc
cli
test
movsb
rorl
sahf
add
adc
pop
arpl
xchg
mov
test
pop
lahf
rcrb
mov
rcrb
cmp
daa
out
jg
lods
adc
add
cmp
sub
jl
add
popf
scas
cld
enter
inc
call
or
jge
sahf
push
adcl
mov
fnstcw
in
pop
mov
test
inc
add
xor
mov
mov
negb
loop
arpl
add
ds
xor
inc
insb
add
fcomps
add
test
cltd
adc
pop
clc
or
dec
add
cli
cmp
sbb
sbb
cmp
inc
dec
clc
lcall
jl
and
add
xor
das
into
push
adc
sub
int
gs
icebp
pop
mov
pushf
test
pusha
mov
fcomi
popf
test
add
fisttpll
xor
nop
jecxz
mov
mov
aad
adc
sub
adc
ds
sbb
sub
cwtl
pop
add
sub
sbb
push
push
dec
es
das
rclb
call
adc
xor
iret
insl
jnp
mov
xchg
leave
pop
jecxz
orl
aam
xor
adc
pop
mov
cmpb
sbb
xor
adc
pop
adc
aad
adc
incb
lcall
mov
mov
out
adc
test
inc
cs
mov
test
add
xchg
rcrb
xor
xor
mov
test
cmp
mov
testl
xor
and
cld
add
js
dec
adc
inc
jmp
mov
add
ret
aas
outsl
lock
or
dec
or
insl
gs
inc
orb
jle
daa
lock
sbb
cmp
ja
aam
cmp
push
push
popa
lock
mov
xlat
out
or
stc
inc
ds
cmp
rcll
sub
fnstenv
lret
xor
xlat
dec
in
jl
fwait
data16
lret
stc
xor
pusha
push
cmpl
mov
xchg
cwtl
jo
mov
lcall
push
clc
jb
xchg
cmp
jmp
adc
jl
pop
pusha
xchg
imul
jb
pop
mov
out
push
dec
inc
jo
add
and
movb
stc
incb
add
push
jno
and
jge
or
or
lock
and
adc
inc
dec
testl
dec
adcb
sbb
inc
repz
jnp
jb
jbe
ja
adc
fcoml
scas
mov
mov
mov
test
xor
adc
jo
lea
sbb
mov
iret
xor
push
repnz
inc
cmp
dec
xor
lcall
add
ljmp
mov
dec
adc
cmp
aaa
mov
decb
pop
outsb
jg
fsubrl
xchg
mov
mov
mov
sub
jbe
add
push
and
stos
sbb
cmc
and
ljmp
fisubs
lret
pop
adc
or
sbb
fildl
aam
leave
cmp
mov
aaa
addr16
insl
pusha
sub
xlat
add
loope
js
lock
and
addb
add
addb
dec
dec
add
lock
cmp
mov
add
pop
int
push
sbb
mov
cmp
xor
ror
push
mov
mov
aas
push
add
das
test
inc
loope
push
adcb
dec
enter
push
mov
sbb
fcoml
pop
mov
push
pop
add
js
cltd
lret
cmp
nop
mov
sbb
stc
outsl
test
push
enter
add
xchg
fildl
xor
shrb
pop
insl
inc
sbb
add
mov
jecxz
lods
mov
pop
add
outsb
lea
out
pushf
faddl
xor
rcl
mov
add
dec
pop
addb
and
sub
sbb
add
push
xchg
xor
add
inc
ljmp
rcrl
test
fcompl
andl
xchg
int
dec
add
add
mov
rorl
bound
mov
subb
jnp
cmp
not
aam
addl
in
xchg
int
ljmp
and
daa
test
inc
mov
push
imul
inc
inc
stos
dec
adc
out
mov
xor
inc
sbb
pop
sub
add
in
jmp
inc
imul
addl
mov
stos
jnp
sub
sarb
add
jae
std
call
xlat
dec
xchg
mov
rcr
pop
in
and
jno
stc
fldz
cmp
sbb
fistpl
xchg
lret
in
clc
xchg
stos
sbb
out
inc
inc
add
mov
cmc
add
ss
push
jl
sbb
mov
inc
and
add
or
test
std
push
es
clc
push
and
jb
pop
stos
add
inc
mov
pop
aaa
mov
pop
xor
mov
sub
add
cs
sarl
imul
cmc
hlt
outsb
loope
rclb
pop
gs
fbstp
repnz
repz
dec
test
add
jl
push
add
push
bound
add
xlat
mov
dec
int
jae
ret
fdivrs
inc
repz
aaa
mov
icebp
mov
add
push
cmp
test
add
jmp
iret
push
push
xorb
into
xchg
add
lret
add
and
dec
out
jae
pop
and
push
cmp
add
clc
mov
push
add
sbb
cld
nop
js
int3
jecxz
push
shll
data16
cmp
int
and
jmp
mov
in
or
ror
roll
mov
mov
adcb
dec
movsb
sub
movsb
mov
dec
sub
sub
lahf
push
push
inc
sub
je
in
dec
dec
mov
movsb
and
fidivrs
xorb
popa
cmp
pop
push
aam
hlt
fadds
pop
push
xor
pushf
test
add
mov
jle
inc
int3
mov
jo
movsl
inc
xchg
fsub
inc
addr16
mov
add
out
cmp
lret
out
pop
cs
jmp
cld
pop
jge
sbb
push
add
mov
mov
fwait
mov
sahf
scas
add
xchg
sbb
add
lods
mov
push
cs
popa
sbb
test
ljmp
mov
xlat
scas
push
outsl
adc
jne
lea
inc
hlt
je
shl
and
mov
add
aad
imul
sti
push
mov
mov
pop
mov
lods
aaa
lock
add
fcmovne
mov
push
sbb
sub
or
shlb
push
jbe
mov
xchg
pop
arpl
sbb
ficompl
in
je
das
test
jg
pusha
xchg
sub
icebp
cmp
cmpb
scas
mov
add
lods
xchg
pusha
jae
or
fsubs
push
push
sub
push
jns
in
fldenv
inc
add
cmpsl
rcrb
push
std
or
or
jmp
xor
add
adc
insl
cmp
cmc
add
pop
sub
push
add
cmpsl
iret
int3
and
loop
mov
cmp
inc
sbb
adc
pusha
sub
cld
cmp
lret
inc
test
pop
cmp
pop
sbbb
xchg
add
movsb
js
pop
int3
push
insl
mov
ljmp
or
add
cmpsl
jmp
pop
and
scas
cli
insl
clc
pop
int3
cmp
lods
push
mov
inc
rolb
ret
push
in
aas
lock
pop
mov
popf
add
call
mov
add
clc
lds
fidivl
lcall
das
cmpl
jbe
cmp
or
test
fimuls
mov
push
mov
push
pop
lock
xor
lock
mov
add
arpl
leave
push
add
push
jo
cmp
cld
jle
add
mov
add
mov
add
mov
push
jl
pop
stos
inc
push
cmp
sahf
mov
push
dec
or
push
mov
and
xorb
dec
mov
imul
and
add
sbb
push
ds
sub
xchg
xchg
outsb
add
cmp
ljmp
aam
mov
add
xchg
sbb
add
movsb
lcall
xchg
xor
sub
sbbb
loope
clc
ret
add
sub
lcall
xor
or
sbbb
repnz
add
mov
add
test
fimull
lock
out
jo
adc
adc
add
cmp
dec
sbb
xchg
fwait
lods
push
mov
cmc
out
jo
add
sub
push
adc
xor
cltd
add
sbb
xor
cmp
flds
cmp
or
fidivrs
rol
popf
clc
shr
add
nop
into
mov
sbb
addb
xchg
stos
shll
sub
call
cltd
pop
adc
pushf
mov
dec
fwait
mov
push
imul
jmp
loopne
test
add
shl
cmp
rcrb
sti
add
xchg
into
aam
mov
or
xor
fisubrl
jmp
jne
cs
pop
dec
int3
jge
push
fsubl
les
dec
mov
xchg
or
add
inc
incb
in
outsl
lcall
mov
push
add
ret
icebp
mov
push
enter
push
inc
das
dec
add
insb
add
push
out
jno
cli
push
or
sub
cmpl
loopne
dec
mov
andl
pop
bound
pop
pop
in
mov
stos
mov
dec
adc
push
inc
std
jns
sub
xchg
xchg
out
push
add
cli
hlt
and
sbb
xlat
nop
jb
add
push
fimull
xor
add
adc
rolb
jge
enter
ret
into
cld
add
mov
inc
mov
out
lods
out
imul
dec
stos
jmp
fwait
add
faddl
xchg
adc
pop
stos
orb
insb
push
adc
pop
push
lds
xchg
mov
pop
add
sbb
or
negb
mov
sbb
mov
inc
dec
pop
adc
pop
repz
outsb
xor
dec
outsl
add
and
push
add
cwtl
aas
fistpll
fcomi
xchg
testb
dec
sub
or
mov
repz
mov
jbe
cmp
jno
mov
mov
xchg
dec
orl
lahf
sahf
xchg
dec
fldl
push
cwtl
icebp
inc
outsb
out
and
jnp
stos
add
pop
mov
xor
add
sbb
mov
mov
and
jno
add
cwtl
sbb
clc
aam
jbe
das
ljmp
loope
dec
inc
pop
arpl
negb
fildl
dec
fistpll
xchg
sti
adc
inc
outsl
inc
or
std
loope
or
into
add
nop
subl
push
lret
cmp
orb
sbb
mov
in
add
movsb
add
and
xchg
jge
orl
mov
jo
pop
add
mov
cmp
loopne
cmp
add
sub
add
cmc
push
or
dec
push
xchg
mov
add
cwtl
mov
dec
je
dec
in
xor
loop
inc
dec
xor
fmul
ret
push
cmp
lcall
sub
dec
rol
je
cmp
add
dec
daa
or
sub
fprem
in
push
mov
lahf
imul
std
xchg
cmp
xchg
je
icebp
add
bound
adc
or
pop
add
outsb
nop
arpl
sbb
add
aaa
int
test
push
add
xor
sbb
adc
xor
cmp
loop
mov
sarb
daa
add
arpl
dec
or
mov
addr16
ds
mov
xchg
pushw
sbb
cld
rol
add
jo
ss
push
cmp
fadds
sbb
int3
push
add
cwtl
add
mov
and
add
sub
add
scas
pop
jp
sub
mov
inc
imul
sbb
daa
inc
cs
cmp
aad
lds
movsl
push
aam
rorb
jmp
lcall
or
add
cld
shll
cmc
pusha
hlt
xchg
popa
lcall
add
daa
ja
sbb
fcomps
cmp
pop
sti
jno
sbb
loopne
rclb
aad
dec
aas
pusha
add
popa
into
sub
mov
add
loope
int3
jnp
add
xchg
mov
cli
filds
insb
xor
ret
inc
jns
call
scas
mov
adc
push
adc
hlt
adc
test
in
add
inc
jns
icebp
cmp
fstp
push
cli
mov
push
inc
rclb
xor
aam
into
fistl
or
fnsave
adcb
mov
push
and
jecxz
bound
mov
mov
fsubl
lahf
fdivs
add
pop
mov
add
decb
sub
mov
in
push
xchg
sub
and
lret
mov
ja
outsl
push
ds
add
mov
in
or
mov
hlt
sbb
add
cmpl
cmp
loope
add
in
add
xor
aas
mulb
mov
scas
das
cmpsb
lahf
mov
or
insb
dec
mov
mov
lret
push
sbb
fpatan
mov
add
cld
pushw
arpl
pusha
enter
int3
rolb
fstps
cmpsl
testb
lret
push
sbb
lea
int
movsb
jo
clts
hlt
add
cmpb
fwait
jb
es
lret
fidivl
mov
and
lds
std
pop
jmp
int
hlt
xor
add
dec
cltd
jae
add
jbe
dec
inc
or
push
in
lret
mov
cmp
push
pop
stc
leave
pop
add
pushf
add
xor
lds
call
adc
jmp
aam
sub
lret
pop
mov
fwait
cld
add
mov
adc
add
mov
adc
or
cmp
lret
mov
mov
jle
add
mov
sar
add
mov
call
scas
into
enter
sub
clc
xchg
in
mov
lcall
adc
cmp
ss
push
and
add
insb
mov
push
iret
add
mov
add
jo
aam
fsubrs
cld
jns
roll
pop
add
shll
stos
push
dec
mov
pushf
xchg
data16
lea
push
cmp
add
jge
add
ret
jbe
xchg
add
lcall
out
add
pop
addl
int
and
cmpsb
and
stos
aas
repz
pop
sub
cmp
xchg
cmp
xor
mov
or
add
xor
xor
enter
test
shll
push
inc
daa
adc
idivl
add
in
out
cmp
add
cltd
call
add
fadd
popa
push
dec
sbb
mov
mov
movsl
jne
aam
sub
cltd
js
mov
stos
inc
xchg
jmp
dec
call
xchg
adcl
xor
ds
out
inc
cld
jae
rep
mov
leave
in
mov
fadds
in
fidivl
push
xor
add
orb
add
mov
popl
fildll
mov
mov
push
scas
add
or
mov
push
mov
fdiv
mov
popf
add
rolb
push
add
fldt
xchg
imulb
mov
cwtl
int
jmp
sub
cmpsb
xor
jmp
push
cld
leave
adc
pop
push
adc
shrb
call
mov
cwtl
xor
or
add
icebp
pop
scas
add
int3
adc
mov
cltd
div
rclb
or
add
and
aas
pop
pop
fdiv
add
add
add
and
xchg
jmp
lret
shl
jno
pop
or
jle
test
dec
push
add
xor
add
sahf
push
les
add
xchg
daa
clc
mov
hlt
outsl
pop
insl
push
sbb
sbb
dec
mov
add
addr16
dec
sbb
xchg
cli
mov
mov
popf
add
adc
movsl
sti
sbb
push
and
or
mov
icebp
clc
lods
xchg
or
shr
sub
mov
outsl
rolb
lds
push
adc
cmp
inc
test
sbb
cmp
mov
lret
enter
jnp
psubd
lea
sbb
out
xchg
adc
rcll
andl
adc
add
divb
push
jge
ljmp
push
andb
mov
pop
sub
add
adc
cmp
xor
jg
lods
add
mov
and
cmpsl
add
filds
and
int
lds
aas
sub
xchg
or
adc
adc
add
movsb
add
sub
addr16
sbb
in
xadd
add
cmpl
test
dec
pop
fistpl
xchg
insb
in
add
out
add
sub
dec
sub
add
loopne
jg
push
pop
pop
inc
out
orb
cwtl
add
add
test
jb
inc
dec
jmp
adc
cmp
xor
je
lret
dec
inc
mov
stos
fisubrl
add
outsl
rclb
loop
add
insl
sbb
hlt
push
push
lahf
add
or
cld
aad
imul
stos
or
les
cs
mov
mov
push
shl
jle
lcall
cmp
cmpsb
and
jo
xchg
cmp
loop
jnp
add
loop
lea
popa
enter
xor
movsl
jns
stos
add
cld
mov
sbb
mov
pop
push
loopne
sbb
and
push
xor
inc
cwtl
xor
sbb
lahf
add
jmp
mov
or
pop
ja
dec
cmp
jcxz
sarl
add
sti
inc
mov
mov
aas
pop
out
mov
add
in
or
bndstx
mov
out
movsb
cmp
mov
add
jle
push
xchg
add
add
jle
test
mov
scas
sub
aad
je
add
mov
or
aas
push
add
in
inc
add
jecxz
dec
sbb
cmpl
pop
shll
repnz
adc
test
sti
out
negl
pop
lods
add
and
jbe
mov
rclb
jl
dec
scas
dec
and
sbb
xchg
mov
pop
mov
lock
clc
insb
pop
and
sbb
sub
adc
mov
cld
dec
add
dec
loop
add
enter
pusha
loopne
jne
add
shlb
push
add
orl
lods
pop
cmpb
std
add
lea
repz
xchg
pop
cmpb
std
ljmp
out
ficoml
push
xor
cmpsb
hlt
int3
stc
test
pop
push
pop
xor
ds
dec
push
jecxz
divl
adc
xorb
cld
test
rcl
rolb
imul
call
push
test
xor
add
fdivrs
outsl
xor
jmp
divb
int
cmp
outsb
and
adc
pop
xlat
aam
into
sbb
adc
push
sbb
mov
js
hlt
inc
pop
jno
pop
iret
lret
cmpsl
jp
int3
mov
sbb
rdpmc
dec
sub
adc
push
push
leave
and
adc
and
cs
add
adc
push
mov
into
add
mov
fadds
mov
dec
pop
or
mov
sarl
ljmp
add
sub
xchg
pop
pusha
icebp
add
mov
cltd
call
add
inc
jge
adc
and
outsl
shll
je
jo
adc
iret
jns
push
mov
jbe
jnp
verr
enter
xlat
or
insb
testb
xor
pop
xchg
sarl
push
or
ret
mov
push
lret
inc
mov
pop
add
jmp
mov
movsb
mull
rcrl
leave
xchg
sbb
inc
je
test
xorb
add
pop
in
filds
fwait
cmp
es
and
outsl
and
push
add
in
jl
jno
add
sbb
mov
fsubrp
lret
scas
stc
mov
sbb
std
fldl
cmp
test
mov
push
adc
mov
jl
notb
dec
cmp
mov
mov
mov
and
loopne
je
mov
jne
ror
aam
in
push
add
cmp
enter
or
add
fiaddl
jnp
mov
push
sahf
arpl
into
les
push
jmp
roll
nop
lea
fimull
or
fs
rolb
add
bound
addb
jnp
enter
jle
data16
pusha
dec
or
mov
pop
in
lcall
dec
fwait
loopne
add
inc
cmp
dec
cltd
andb
xchg
add
pop
xor
out
loopne
mov
div
cmp
add
pop
lock
add
dec
enter
dec
cmp
cld
hlt
aad
sbb
push
cltd
sahf
addr16
test
push
jnp
mov
cmp
outsb
add
pop
dec
insb
adc
jbe
xor
das
cli
into
rdmsr
push
jns
add
push
xor
icebp
xor
sbb
jecxz
scas
dec
testb
fwait
dec
ds
stos
mov
js
or
pop
into
and
pusha
sub
xchg
pcmpeqw
sarl
icebp
sbb
pop
jp
push
add
filds
add
inc
sti
xor
mov
movd
addb
lods
int3
xor
lock
fsubrl
dec
add
test
hlt
mov
xchg
xor
lea
and
add
movsl
jo
add
xchg
jle
adc
jne
cld
add
fwait
cmc
fists
fmul
xor
test
mov
ret
pop
mov
movb
aad
sarl
cmp
or
in
mov
cmp
pusha
lea
mov
push
add
push
ja
imul
nop
mov
or
out
sbb
mov
add
sbb
popf
loopne
xchg
sbb
lock
sub
adc
inc
imul
test
add
leave
lea
dec
cs
push
push
pop
add
xor
pusha
fdivrp
add
inc
mov
in
add
push
insb
insl
push
adc
ss
out
roll
sub
aam
loope
sub
ret
and
pop
scas
push
mov
add
pop
cmp
sbbb
dec
inc
inc
add
popf
daa
jecxz
out
add
mov
ds
pusha
call
rorl
jmp
repz
lods
mov
jl
call
subb
jp
mov
repnz
mov
mov
ret
ficoml
cli
rolb
js
xchg
call
jb
add
fbld
jge
aas
add
lretw
js
rol
mov
je
sbb
lcall
mov
mov
mov
mov
cmp
mov
ret
adc
dec
add
lds
and
sub
cmp
jmp
je
add
arpl
add
pop
insl
xor
push
push
pop
mov
ss
ret
je
mov
dec
adc
cmp
inc
push
adc
lcall
push
call
sbb
loopne
pop
in
imul
test
jnp
push
pop
test
inc
fsubr
int3
lret
je
mov
jbe
sahf
adc
test
mov
into
mov
mov
adc
ljmp
mov
adc
jl
or
dec
ljmp
inc
mov
inc
add
adcl
aam
adc
adc
pop
insb
pop
lret
sub
sbb
mov
mov
in
out
ja
clc
call
jl
pop
pop
aas
add
shrb
sub
sbb
pop
inc
add
mov
pop
rorb
sbb
lea
sbb
popa
add
mov
sbb
pop
jne
in
add
data16
imulb
rolb
shll
push
int
xor
jecxz
push
repnz
add
mov
and
add
mov
push
aas
dec
test
jmp
mov
cs
xchg
callw
pusha
xor
and
inc
iret
in
mov
int
adc
fwait
pop
cwtl
jbe
in
xor
adc
push
cmpsb
pushf
sbb
xlat
pop
fildll
js
sbb
sbb
movsl
xchg
xor
bound
cs
insb
push
push
xchg
add
popl
mov
popf
emms
pop
filds
xor
push
flds
stos
add
mov
inc
adc
test
lock
clc
cli
cmp
mov
add
inc
fwait
test
add
cmpsb
frstor
xchg
hlt
mov
test
push
aad
dec
clc
inc
subb
test
std
pusha
push
enter
into
jne
pop
iret
xor
ja
stos
cmp
inc
cmp
push
gs
pusha
test
js
shrl
fistl
lds
gs
cltd
jmp
ret
push
adc
fldenv
xor
xor
jno
cltd
adc
sub
das
lcall
xchg
and
cmc
xor
std
or
push
inc
xor
mov
sbb
xor
and
cmc
pop
mov
hlt
xor
addb
add
push
loop
aam
sub
mov
mov
scas
lea
or
fadds
pushf
das
std
or
add
mov
inc
and
push
insl
push
jmp
cmpsb
je
rcll
mov
cmpb
mov
ficoml
cmp
enter
adcl
mov
ret
loopne
ret
scas
inc
ret
fwait
mov
mov
pop
loopne
add
add
xchg
pop
fs
jne
xchg
ret
lock
ds
imul
test
scas
inc
push
enter
loop
insb
lods
add
add
or
gs
fsubr
sub
mov
dec
adc
cltd
pop
dec
out
jnp
addl
sbb
mov
jo
xlat
add
mov
fwait
mov
add
lret
jp
sbb
add
scas
push
fadds
mov
and
xor
dec
add
pushf
cwtl
xchg
arpl
push
mov
xor
sahf
push
call
sub
adcl
subl
jb
push
inc
dec
dec
mov
mov
shll
add
sbbb
les
shrb
adc
sbb
mov
mov
pop
cmp
call
imul
push
lcall
add
xchg
orb
ret
lret
subb
and
call
xor
in
sbb
mov
add
enter
cli
push
or
mov
add
orb
jl
add
pop
je
xor
and
and
out
outsl
lock
movsl
pusha
int3
push
je
dec
push
add
mov
adc
lret
inc
add
cmpl
rcll
cwtl
mov
sbb
dec
or
mov
jns
push
pushf
imul
add
jno
scas
cmc
xor
pop
out
jl
push
dec
or
push
mov
sti
inc
add
out
rcl
scas
imul
mov
add
lds
sbb
jbe
je
iret
ret
add
add
in
inc
rcll
cmp
sub
pop
fadds
jecxz
push
xor
push
cli
and
in
add
aam
std
gs
lods
add
imul
mov
push
dec
push
cmovo
xor
cmpsl
xchg
add
idivl
loopne
mov
dec
adcb
cs
movsb
fstps
scas
clc
insl
testl
ss
pop
or
add
popf
push
mov
xor
into
pcmpeqb
shlb
add
leave
adc
aad
in
stos
add
xchg
fists
imul
aaa
mov
pop
mov
dec
push
lret
mov
subb
clc
adc
popf
lock
ficoms
adc
xor
adc
adc
cmp
sub
sbb
xchg
out
cld
xchg
movsl
nop
cs
ds
shlb
xor
sbb
daa
outsl
dec
stos
add
das
nop
push
sbb
pop
add
fwait
add
lock
divl
in
mov
aas
std
arpl
and
fidivs
add
push
rcrb
mov
scas
sti
jbe
xchg
pop
popa
push
mov
pusha
sub
xchg
out
outsl
jnp
or
jae
inc
test
cmpsb
add
iret
push
inc
lea
xchg
test
mov
mov
jmp
xchg
xor
add
mov
cvtps2pd
mov
jne
add
call
or
inc
xlat
jbe
add
sbb
ret
cmp
push
aas
inc
add
punpckhbw
shrb
pop
add
add
inc
jne
add
andb
cmp
leave
or
mov
dec
ret
xchg
scas
shl
dec
jae
sbb
orb
enter
mov
in
add
cmpsl
mov
push
pop
or
lods
push
xor
jns
sub
js
jo
add
mov
mov
push
jge
movsl
add
stos
inc
aam
popa
loopne
add
pop
jb
ret
inc
sub
out
addb
add
aad
and
clc
push
sar
iret
mov
add
out
hlt
outsb
lock
add
pop
mov
xchg
xor
mov
inc
pushl
and
rcrb
repnz
inc
add
and
and
cs
push
cmp
mov
cwtl
fisubrs
or
rolb
bound
and
adc
and
icebp
cmp
gs
mov
adc
ljmp
lods
les
jle
fidivs
add
aad
cmc
jge
cmp
add
add
add
adc
mov
or
clc
add
cmpsb
pop
mov
jge
jg
cltd
cmp
roll
inc
or
test
mov
data16
shrl
sub
add
loop
sub
xchg
add
mov
inc
sti
jmp
cmp
xor
add
xlat
add
cmp
jge
fcompl
or
push
test
rcrw
inc
add
outsb
cltd
ljmp
mov
daa
insb
pop
jp
hlt
jbe
out
sarl
adc
lret
pop
das
or
jns
cmpsl
push
add
lcall
add
add
int
lds
cmp
pop
lahf
fadds
dec
in
mov
fdivrl
add
bound
fwait
add
cwtl
ljmp
cltd
int
xor
loop
pusha
sub
or
lods
jg
add
pop
popf
stos
ret
add
push
xchg
jmp
aas
lea
lods
add
lock
mov
jecxz
stc
sbb
loop
cli
jbe
push
mov
dec
and
inc
ds
in
pop
ljmp
loopne
pusha
faddl
sub
ret
mov
lock
dec
pop
mov
mov
rolb
sbb
loopne
jmp
add
xor
jno
pop
add
fcompl
cmc
push
daa
and
enter
sbb
inc
adc
lret
in
dec
ror
pop
mov
rorb
sahf
fs
pop
imul
enter
add
popf
lea
adc
lcall
ja
cs
fsts
xchg
jl
scas
inc
clc
iret
sbb
mov
push
cli
lcall
xchg
adc
loope
shrb
lods
aad
add
jne
push
gs
in
push
stc
mov
xor
jge
or
jns
decb
jno
add
sub
pop
lds
mov
inc
das
cs
xchg
mov
jnp
add
cli
cmp
pop
add
inc
jae
and
mov
jno
popw
sub
add
jmp
add
xchg
xlat
call
repnz
cmp
ljmp
sub
cmp
movsl
add
pop
xchg
getsec
scas
aad
out
and
add
mov
xchg
add
push
subl
cmp
add
push
fcoml
pop
hlt
xor
add
adc
push
add
stos
sub
mov
jmp
and
add
sbb
jno
movsb
add
int3
gs
adc
adc
sub
mov
cmpsb
push
jnp
lock
dec
loopne
pushw
add
sub
loop
cmpsb
sahf
add
jno
cvtps2pi
cld
dec
mov
xor
test
add
and
or
sarl
aas
jge
add
arpl
sbb
cmc
mov
jp
and
xchg
xlat
test
rorl
pop
jle
jp
xor
or
dec
jbe
adc
add
imul
jge
mov
add
fimull
add
out
dec
push
add
cli
iret
mov
add
adc
cwtl
imul
rorb
mov
xor
lea
cmpsl
ret
call
cmp
mov
add
in
std
popf
pop
xor
lods
mov
jbe
in
repnz
xor
sbb
xchg
and
pop
dec
xorb
mov
cld
add
inc
es
add
pop
insl
daa
in
adc
cs
mov
add
js
cmc
inc
fs
in
fiadds
inc
add
loope
jns
xor
adc
jbe
inc
out
jne
sti
dec
loop
add
ss
loopne
loopne
xlat
lahf
push
adc
sbb
jae
push
scas
push
in
mov
push
mov
mov
xchg
sahf
push
xchg
mov
enter
add
jp
ret
shrb
std
sbb
stos
xchg
jnp
popa
mov
mov
daa
sbb
ljmp
xchg
add
cmp
in
ret
lods
push
pop
cmp
imul
push
add
jns
add
out
leave
push
bound
add
negl
lods
sub
call
add
shll
jo
push
scas
sub
add
aas
mov
sub
cmp
jnp
pushf
mov
xchg
sti
test
add
aam
test
sbb
incb
out
mov
push
xor
jo
push
jmp
add
jge
mov
loop
jne
or
sub
les
sbb
add
clc
sbb
repnz
xchg
subb
out
adcl
dec
ret
inc
insb
add
ss
mov
sahf
std
mov
add
push
xchg
das
adc
add
add
jge
mov
pop
push
fldcw
cmp
lods
lods
xchg
cmp
fbstp
pop
add
or
rcrl
into
mov
call
jb
push
sub
dec
in
je
movhps
mov
in
test
aaa
fwait
add
pusha
xchg
jo
test
loop
jbe
xor
jmp
outsb
das
sbb
imulb
sarl
mov
cwtl
sbb
sub
nop
call
add
lock
insl
xchg
or
ja
std
push
stc
jg
and
pop
addb
adc
add
cmp
add
pop
lcall
jp
add
pop
pusha
mov
inc
pusha
or
jae
sbb
fisubs
add
mov
fcmovnb
xchg
jge
ficoml
pusha
xchg
in
out
nop
xorb
iret
mov
inc
xchg
or
insl
icebp
add
popa
add
dec
adc
push
rcrb
inc
out
movsb
imulb
xchg
stc
mov
in
mov
add
hlt
add
in
cmp
in
pop
pop
sahf
stos
and
dec
dec
inc
pop
sub
jns
cmp
add
dec
idivl
mov
arpl
shlb
cmp
cmp
push
xchg
into
dec
flds
mov
das
pop
add
push
push
je
sbb
movsl
add
add
out
adc
dec
pop
cmp
call
xor
sbb
cmp
mov
sub
stos
push
arpl
filds
adc
lret
jae
test
negl
xchg
ljmp
xor
arpl
inc
movsl
divb
pop
icebp
xchg
add
insl
add
clc
mov
loopne
xor
test
push
mov
mov
fnstcw
aam
push
or
std
clc
push
xchg
push
lea
and
sbb
add
mov
popa
movsl
add
mov
pop
add
int
mov
dec
and
in
movb
mov
fnsave
pop
pop
or
dec
fadds
cli
jns
cmp
dec
int3
add
mov
pop
adc
das
mov
leave
and
scas
xchg
add
data16
lahf
xor
add
pop
mov
add
xorl
cmp
push
inc
pop
xor
shlb
inc
pop
out
stc
mov
push
divl
and
adc
jne
in
xchg
out
mov
add
inc
sbb
lea
pop
movsb
jle
or
test
cmp
ret
outsb
addb
in
xlat
cmp
sti
jg
mov
mov
jno
cli
pusha
je
add
inc
push
in
repz
add
movsb
push
sbb
test
iret
les
mov
sub
pushf
sbb
xor
popa
lcall
inc
les
add
push
inc
aam
jge
add
cmpb
cmp
add
jecxz
push
sub
add
jb
lahf
fs
pop
add
or
add
pop
push
adc
sub
xor
cs
xor
movl
scas
sub
roll
in
cmc
rolb
add
pop
and
enter
stos
hlt
xchg
inc
repz
repnz
inc
mov
adc
dec
add
cmp
cs
or
fiadds
daa
sub
jo
xchg
xchg
sahf
fbstp
dec
data16
gs
add
aaa
pop
mov
add
inc
dec
jl
mov
sbb
xor
xor
popf
push
or
mov
inc
add
js
xchg
jo
dec
adc
sbb
cmp
jns
out
popa
add
lods
jnp
insb
nop
pop
xchg
in
cmp
cmp
xchg
xor
dec
jns
xor
add
cmp
xchg
stos
add
test
roll
jge
mov
adc
add
pop
in
pop
jle
adc
imulb
subb
out
mov
add
cmpsb
and
add
pop
popf
jno
add
or
jp
ror
fisttps
dec
adc
add
lock
gs
pop
pop
add
xchg
and
cmpl
dec
push
andb
icebp
fistps
dec
push
fiadds
mov
imul
pop
fcomps
add
cmc
jle
fldt
push
les
movsb
cltd
add
es
lods
mov
add
or
sub
outsl
scas
sbb
ret
cld
push
add
bound
add
or
dec
sbb
inc
popl
addr16
sbb
addl
xor
mov
roll
push
xor
sub
pop
add
cltd
jmp
inc
mov
add
mov
dec
prefetcht2
neg
dec
movsb
shlb
adc
sub
mov
cltd
sub
add
jp
aas
add
jge
flds
data16
ror
mov
test
xchg
imul
pop
sub
mov
sub
add
or
jp
mov
push
lock
inc
movsb
xor
shlb
jg
xorb
inc
push
add
xor
mov
lock
aas
push
in
adc
add
sti
jb
inc
pop
and
add
or
pop
cmpsl
jno
into
add
repnz
mov
pavgw
addb
sub
sti
popf
adc
or
decl
jmp
idivl
xchg
inc
rcr
xchg
add
mov
leave
cmp
or
shlb
shlb
or
imul
adc
cmp
mov
sbb
fcomps
jmp
in
fdivs
inc
ud1
lds
mov
add
daa
push
adc
add
test
ja
pushf
loope
inc
outsb
aas
ret
dec
pop
sti
fucomi
inc
push
and
arpl
test
rcrb
call
adc
out
sub
in
pop
lret
add
gs
into
cltd
int
push
jae
push
call
movsl
pop
repz
aad
adc
add
cmpsl
pop
add
cmp
xor
enter
mov
push
out
inc
rolb
lods
sbb
ret
out
push
aad
cwtl
push
ret
or
mov
sub
pop
cmp
xorb
aas
and
push
xlat
clc
rcrb
lock
rcll
inc
push
dec
push
or
repz
push
push
adc
jb
push
or
jmp
cltd
xchg
add
adc
mov
outsl
nop
add
push
push
subl
inc
psubw
adc
xor
ret
add
dec
cs
xor
data16
bound
rclb
mov
dec
sarl
stos
add
cwtl
in
mov
mov
sbb
or
push
cld
cmp
jle
sub
jno
clc
and
or
cs
repnz
pop
cmp
add
int3
add
add
loope
adc
insl
out
add
mulb
and
add
jecxz
xchg
jne
add
insb
push
nop
in
sbb
cmpsb
lahf
int
or
subb
sahf
push
sub
push
loopne
mov
fneni(8087
adcb
xchg
push
mov
aas
sub
bound
and
cmp
pop
add
add
pushf
add
pop
push
push
pop
cltd
sbb
rcrb
jno
ret
or
mov
ret
cs
jle
add
loope
xchg
cli
fisttpl
mov
add
adc
lock
dec
sbb
cmp
stos
std
stos
cwtl
mov
add
out
lret
cmp
xorb
ds
and
stc
lods
lods
adc
sbb
inc
dec
add
inc
mov
mov
adc
mov
inc
cltd
mov
cmp
add
imul
mov
mov
or
pop
fwait
cltd
add
mov
sbb
in
push
cwtl
or
push
data16
jnp
mov
pop
pop
into
add
ja
mov
jnp
xchg
scas
movsl
aam
sbb
xor
sarb
fistpl
adc
incb
bound
add
dec
aam
outsl
icebp
aaa
mov
int3
dec
mov
lods
mov
jle
add
lock
popa
xor
and
add
and
add
sbb
shll
in
xchg
rdtsc
sub
add
in
sbb
mov
pop
and
jo
cli
push
loopne
xchg
add
imul
js
into
imul
pop
sub
lods
add
xor
push
ja
jne
add
push
testl
push
daa
mov
shlb
jg
jle
sbb
lahf
fldt
xchg
sbb
hlt
inc
sbb
cmp
mov
imul
sbb
or
ss
shlb
dec
movsb
add
insl
push
add
mov
pushf
negl
rcrl
sbb
push
out
sub
sbb
insb
and
stos
movsl
and
cmp
inc
shl
mov
aas
negl
push
shll
add
adc
rclb
push
and
cli
xor
add
out
jl
or
add
repnz
push
sub
xchg
cmp
cmp
hlt
repz
test
fisubrl
arpl
jg
sub
sbb
push
fsubs
pusha
push
dec
mov
dec
loopne
jmp
add
xchg
cmp
jbe
pop
add
inc
iret
and
add
push
test
inc
inc
rcrb
popa
push
xorl
mov
xchg
lret
jne
adc
xor
inc
sbb
fadds
hlt
int
mov
rorl
mov
xor
sub
or
ret
hlt
pushf
sub
test
sbb
mov
dec
pop
test
int
idivl
popa
pmaddwd
test
in
daa
add
or
xlat
pusha
xor
aad
mov
mov
sbb
jle
cmpsl
add
push
fdivs
fs
pop
jmp
mov
pop
rcrb
and
ljmp
mov
adc
loopne
add
pop
sti
dec
shll
stc
pop
cmp
fmuls
jbe
push
in
and
and
rolb
je
int
mov
xchg
rolb
jo
andl
adc
add
xchg
push
push
jno
cmp
mov
add
mov
pop
mov
mov
sahf
add
icebp
pop
jno
jae
jp
cmpsl
sbb
mov
sahf
repnz
out
mov
add
les
out
add
dec
adc
mov
pop
jb
jns
inc
dec
ss
insb
add
inc
movsl
add
dec
inc
xor
xchg
add
mov
pushf
add
fs
insb
das
add
cmp
inc
jge
stos
mov
adc
add
jo
in
ds
pusha
add
imul
outsb
sbb
iret
jbe
add
jo
cmp
clc
enter
lret
or
out
or
outsl
dec
sbb
ret
aas
jo
mov
add
out
push
dec
out
js
nop
or
cmp
dec
cli
testl
loop
pushf
gs
fwait
or
add
jmp
rcll
or
pop
add
ret
mov
cmp
shlb
ljmp
jle
xor
aas
mov
aaa
test
aas
clc
mov
push
add
sbb
lcall
or
shlb
repz
mov
add
sbb
cmpsb
pop
outsl
mov
adc
daa
and
pusha
xchg
jno
imul
add
mov
push
add
dec
bound
jge
das
mov
dec
push
mov
jno
mov
jge
out
mov
je
hlt
inc
and
inc
pop
ja
add
jp
inc
add
sarl
jmp
add
sar
mov
adcl
sbb
pop
add
cmpsb
out
aas
cmp
in
dec
aam
enter
iret
pusha
sub
test
add
dec
dec
adc
or
andb
mov
lahf
push
fsts
mov
and
pop
add
sti
ljmp
add
sub
xchg
ds
and
pop
cs
imul
push
push
xor
or
pop
cmpsb
ds
popf
movsb
lret
or
add
cmc
cmp
lcall
mov
mov
or
sub
add
mov
jmp
ja
sbb
xchg
in
add
fnsave
popa
repz
sub
mov
movsl
imul
fs
or
cwtl
mov
or
popf
in
jle
push
cmp
testl
mov
adc
add
xor
jge
jbe
xor
or
sub
add
cltd
loopne
ds
adc
adc
xchg
pop
cmpsl
push
addr16
push
mov
gs
lret
test
dec
and
in
dec
rorl
cmp
push
loope,pt
cli
fld
stos
shrb
adc
and
out
pop
lcall
mov
and
data16
movsb
mov
imul
or
inc
add
pop
inc
verw
mov
push
or
mov
pop
test
sti
enter
add
add
sahf
adc
add
adc
aad
aaa
sbb
ja
xor
jl
add
pushf
lods
insb
lahf
add
or
ja
push
add
imul
inc
rcll
push
pop
and
rcrl
pop
inc
adc
cmp
jns
xchg
shr
inc
test
add
stos
dec
cld
add
les
add
xchg
cli
inc
pop
out
mov
es
loopne
mov
jb
ss
add
mov
push
lcall
jp,pt
add
fidivrs
adc
clc
inc
xchg
nop
adc
inc
adc
mov
inc
cmp
icebp
xor
sbb
mov
pusha
popa
in
inc
cmpsl
leave
je
in
or
gs
sbb
add
loop
add
ljmp
addb
cltd
out
js
add
jae
jns
mov
cld
xor
or
jle
add
aad
sub
xchg
lds
inc
inc
pop
dec
xor
sbb
pushf
fsubr
sbb
cmp
shrl
in
lds
insb
pop
sbb
dec
push
popf
push
cld
push
in
add
mov
loope
push
pop
add
mov
andb
xor
lds
jae
cmpsl
ret
pop
mov
xor
and
sbb
aad
fs
shrl
stc
inc
xchg
loop
push
adc
add
adc
scas
pop
xor
loopne
cmp
test
mov
add
lods
and
sub
aas
xor
nop
or
mov
ja
inc
pop
mov
lds
cmp
stos
ret
adc
xor
or
popf
add
add
pop
frstor
add
nop
aam
pushf
lss
xchg
popf
imul
jno
inc
push
enter
aam
das
jo
xorb
aaa
mov
add
mov
fwait
push
out
cmp
pop
add
pop
lcall
dec
xor
sbb
out
add
insb
lea
iret
add
stos
fwait
jecxz
xlat
repnz
add
lret
add
add
dec
sub
mov
mov
add
out
dec
xor
adc
sbb
cs
pop
ret
cwtl
aas
test
push
mov
lea
add
jg
rolb
mov
adc
add
psubq
int3
loopne
ja
add
push
rol
scas
stc
push
inc
adc
xchg
push
lods
je,pn
popf
test
into
push
bound
mov
cmp
add
sbb
xchg
fisubrs
movsl
jle
sbb
adc
jl
sbb
out
cmpl
xor
mov
xchg
dec
cmp
rcrb
mov
inc
popf
cmp
xlat
add
arpl
pop
rclb
inc
mov
xchg
in
jmp
cmp
out
movb
nop
xchg
add
arpl
into
insb
push
sub
fsub
jb
ficoml
lahf
scas
cli
mov
sbb
and
js
add
test
fcoms
cmc
adc
add
cmp
push
stc
inc
xchg
xor
cltd
insl
push
add
cmp
pop
addb
test
in
jne
icebp
scas
mov
ljmp
mov
pop
xorb
out
inc
inc
repnz
lds
mov
push
add
imul
jge
jmp
sbb
mov
add
ret
test
into
cmp
add
shrb
mov
jmp
imul
xchg
push
pop
ds
aas
sbb
add
or
sbb
add
mov
jo
test
or
cmp
mov
fnstcw
mov
enter
jp
hlt
insl
movsb
sti
fldl
or
and
xchg
shll
in
das
jne
add
xlat
dec
movsb
xor
pop
sbbb
add
add
into
jo
mov
mov
adc
popf
std
adc
test
or
add
das
ret
pop
leave
incl
andl
fsubs
addb
pusha
pop
inc
sahf
andl
and
sbb
nop
divl
push
mov
in
lret
add
out
adc
sti
ss
inc
add
shlb
push
arpl
outsb
jo
xchg
ljmp
jle
sbbb
fstps
sub
mov
jl
ds
sbb
xor
xchg
dec
add
test
shrl
or
mov
add
xchg
call
ja
cmp
xor
mov
repnz
fwait
aad
popa
sub
and
repz
push
out
push
jne
pop
rorl
adc
sub
jge
xchg
xor
in
prefetch
mov
inc
in
mov
push
ja
stos
add
mov
js
sbb
add
pop
xchg
outsb
mov
cltd
fwait
sldt
push
pop
xor
test
add
je
cmp
sbb
addl
dec
pop
push
test
loope
fsubl
loopne
dec
push
cmp
or
js
xor
das
push
out
sbb
sbb
popa
mov
into
cltd
lahf
mov
stc
mov
xchg
dec
aam
and
fyl2x
mov
out
sti
add
adc
rorb
jbe
aad
scas
aas
shrb
xchg
add
jp
add
sub
inc
imul
cs
addb
and
xor
add
jbe
inc
sbb
cmp
and
icebp
add
stos
push
pop
out
lock
lahf
arpl
or
add
fdivl
cwtl
shlb
jnp
sub
das
mull
rclb
add
inc
push
js
insb
sahf
aam
ss
flds
adc
cmovnp
lret
add
mov
jno
aas
ds
pop
sbb
pop
push
std
mov
adc
push
fwait
shrl
fs
jbe
lds
out
xor
jecxz
add
shrl
into
mov
fmull
pop
scas
inc
add
push
jo
push
push
lods
aam
add
shlb
add
push
pusha
or
sbb
andps
shl
in
xor
mov
add
and
lret
cmp
inc
and
mov
push
xchg
pop
xchg
clts
mov
adc
enter
and
inc
movl
icebp
add
mov
jmp
loop
xor
add
dec
fadd
int
roll
lret
inc
sub
cmp
fsubl
int
dec
add
inc
lcall
je
and
xor
mov
test
mov
je
adc
mov
mov
cmpsl
push
xchg
or
clc
xlat
sub
sarb
xchg
aaa
add
jnp
pop
jns
nop
add
xchg
fidivrs
imul
pushf
pop
push
add
pop
add
and
dec
rorb
sbb
cmpsb
push
sahf
cmp
sbb
cld
mov
inc
add
sub
mov
mov
rcrb
adc
add
jne
xchg
cwtl
nop
inc
xor
sbb
iret
cmp
icebp
std
inc
mov
xchg
mov
adc
add
stos
je
or
aam
sub
movsb
xchg
add
stos
fstpt
add
mov
scas
ds
add
jl
aam
xchg
mov
repz
movsb
dec
xor
fildl
push
add
bound
or
cmp
cmpsl
jnp
mov
mov
adc
xchg
xor
stos
std
loopne
scas
jmp
mov
add
cmp
stos
movsb
add
push
sbb
add
sub
pop
or
sbb
adc
mov
mov
ror
test
ds
or
xor
dec
pop
sub
sub
fdivp
cmpsb
add
cld
popa
mov
or
decl
dec
dec
pusha
sbb
add
mov
jg
add
in
cwtl
inc
mov
jg
push
popa
lea
push
mov
or
icebp
mov
mov
in
ds
mov
add
or
push
fcomps
dec
sar
pop
fs
xchg
inc
jo
push
xchg
pop
add
sub
sti
mov
and
pusha
fsubrl
push
add
out
mull
cmc
daa
sub
mov
aas
popf
xor
mov
pop
adc
add
fcomps
sti
or
cli
movl
movsl
pop
inc
pop
cmpsl
mov
adc
jg
xor
adc
xchg
add
lds
incb
scas
int
aas
cs
xrelease
pop
xor
cld
daa
jb
add
jge
fwait
aam
mov
cmc
je
fldcw
or
dec
lods
lahf
pop
addb
popa
mov
sub
aad
and
scas
push
jl
int3
es
add
adc
and
adc
jp
cmp
pop
push
adc
xchg
jge
aam
pop
sbb
or
loop
mov
dec
call
loopne
repnz
inc
push
cmp
mov
loope
pusha
sbb
sarb
push
les
jp
cmpsl
add
stos
xor
sub
test
add
push
mov
add
daa
push
bound
ljmp
xchg
push
push
hlt
inc
add
sbb
cmp
sbb
fwait
inc
adc
cmpsb
mov
popa
out
add
xchg
xchg
out
mov
adc
cmpsl
pop
jne
pop
ljmp
out
xlat
xor
push
push
stc
addr16
add
loopne
mov
add
push
je
sarl
pop
add
outsb
das
sbb
or
jo
lea
pop
aam
addl
jno
sahf
jne
sub
jle
fimull
dec
andb
or
loopne
enter
daa
and
pusha
or
insb
add
fucom
inc
insl
mov
pop
add
adc
mov
rcrb
cmp
addb
cld
sbb
addr16
jg
add
and
enter
adc
push
dec
sub
or
push
insl
in
add
or
add
sbb
pop
sbb
mov
inc
test
dec
andb
pushf
add
pop
je
xchg
xor
outsb
xchg
add
xchg
data16
xor
lcall
dec
and
adc
shl
xchg
fbld
popa
add
fcmovnu
out
xchg
lret
adc
arpl
sbb
add
mov
push
add
out
into
push
push
xor
push
pop
fisttpl
lea
push
loopne
lea
loop
add
pushf
jge
mov
mov
mov
add
dec
mov
jb
adc
add
loop
dec
xor
mov
push
movsb
push
xorl
jb
adc
add
stos
lods
jle
cmp
aas
ds
add
in
test
jmp
jns
and
sahf
jno
mov
test
lock
pop
gs
xchg
rolb
or
dec
inc
ret
cli
mov
lret
lea
cwtl
jge
xchg
add
or
xchg
inc
gs
into
fcompl
sbb
pushf
and
popf
and
add
nop
sbb
loopne
push
mov
shlb
pop
test
mov
ss
subb
pop
add
sub
dec
ljmp
xchg
ja
cwtl
es
mov
xlat
add
inc
push
adc
or
pop
nop
mov
mov
jo
push
push
push
sbb
popf
mov
add
insl
inc
jb
push
jne
xchg
jns
pusha
les
mov
flds
or
jno
incb
fwait
outsb
mov
in
add
cmp
push
add
shrb
add
add
das
aaa
fstl
cld
fnsetpm(287
add
fistpll
or
dec
cli
or
sbbb
mov
xchg
int
pop
lret
inc
jge
pusha
fs
add
dec
push
sub
mov
lcall
int3
sub
add
sub
fdivrs
mov
rcr
jp
xor
pushf
loope
sbbb
push
aas
dec
clc
add
orb
add
xchg
loop
jnp
rolb
ror
iret
mov
movsl
add
push
sti
jbe
mov
and
aas
and
orb
mov
and
lds
clc
xchg
out
jl
add
push
lods
mov
add
outsl
add
stc
cmp
aaa
push
je
add
movsl
popl
pushf
cmpb
fadd
nop
mov
insb
cwtl
aam
adc
test
add
mov
arpl
inc
or
ds
cmc
mov
mov
add
inc
sub
mov
filds
jns
and
int3
pop
add
lock
inc
es
clc
add
ljmp
lock
sbbb
add
sbb
add
mov
outsb
nop
push
add
and
incl
xchg
aam
xchg
mov
sbb
cwtl
sub
add
pop
xchg
mov
mov
stc
push
adc
cmpb
sub
cs
test
rcrb
add
mov
sbb
add
aas
mov
jae
shl
pushf
push
imul
add
loopne
divl
add
lds
jg
jmp
mov
cmp
adc
mov
or
aaa
shlb
inc
sub
out
add
ret
imul
cmp
sbb
movsb
leave
sub
inc
push
adc
xor
cltd
mov
sub
cmp
std
out
int3
je
dec
sbb
inc
imul
lret
push
jge
addr16
add
mov
mov
or
pop
add
test
sub
cmp
jl
add
add
xlat
add
out
jecxz
add
rcr
or
or
sbb
xor
dec
xchg
js
mov
jb
mov
imul
xchg
pop
imul
mov
adc
outsl
jge
repnz
and
add
adc
in
mov
add
movb
gs
add
rolb
jg
sub
in
sarb
push
mov
add
push
fwait
mov
mov
pop
negb
pop
std
scas
rcrb
push
mov
leave
mov
pop
int3
lret
adc
push
pop
xchg
pop
pop
mov
push
add
add
cli
je
or
popf
fs
add
imul
push
add
add
test
sahf
pushf
and
push
mov
and
in
jns
cld
mov
add
fistps
je
add
fcomi
xchg
iret
xchg
push
dec
jne
and
addr16
rcrl
xorl
test
xor
cwtl
add
faddl
leave
push
cmp
adc
icebp
add
push
mov
cmc
mov
mov
push
rcr
sub
cmp
or
fdivrl
mov
sbb
nop
sub
add
loope
call
push
lods
or
lcall
xchg
mov
leave
pop
dec
lods
pusha
and
push
scas
cmpb
nop
adc
push
imul
mov
xchg
add
pushl
and
inc
sbb
sbbb
repz
int
leave
ds
pop
stc
push
cwtl
jne
add
insb
mov
sbb
imul
lcall
fdivrl
lock
adc
jmp
add
push
fstp
in
mov
rcrb
or
rcrl
xor
arpl
xor
test
jae
xchg
add
cltd
mov
add
scas
sahf
loop
and
add
nop
add
sbb
popf
rol
push
into
imul
jbe
add
sub
add
iret
and
mov
gs
hlt
dec
pop
mov
aad
les
daa
xchg
test
mov
in
outsl
arpl
movsl
dec
inc
imul
mov
xchg
lcall
mov
sbb
std
popf
add
cmc
xor
fidivrs
add
mov
and
enter
mov
add
inc
inc
lahf
mov
pop
arpl
and
shll
add
mov
xchg
add
iret
inc
xor
les
int3
push
jo
add
cltd
daa
push
add
xorb
insl
jp
add
sub
cltd
sbb
and
dec
fwait
mov
push
out
out
je
add
xor
stos
sub
cmp
pop
ja
dec
stc
shlb
or
push
fadd
lret
mov
xchg
subb
xor
sub
orl
inc
push
pusha
sbb
ficompl
xor
push
bound
fstpl
mov
cmpsb
cmp
dec
add
in
in
call
or
jno
movsl
and
and
out
verr
mov
xchg
push
push
jle
ss
dec
push
sub
loope
cmp
mov
and
add
jb
call
or
loopne
xchg
add
sub
repz
pop
add
jmp
lcall
rcrl
bound
add
adc
and
and
repnz
jnp
push
int3
cmp
add
aas
movsb
mov
adc
mov
add
in
and
adc
pop
adc
sub
psrlq
lcall
and
xorb
add
cwtl
pop
xchg
ret
sbb
add
push
aam
cld
pop
out
push
add
sub
scas
add
ja
hlt
cmpsb
mov
gs
xchg
add
frstor
call
add
xchg
mov
in
cmpsb
mov
push
fcmovb
add
cmp
sti
nop
add
sub
jns
call
cmp
sahf
subb
nop
jae
test
mov
call
outsl
cmp
dec
cmove
add
xchg
shll
orb
lds
mov
xor
jge
imulb
enter
lret
test
movl
bound
aam
insb
add
out
hlt
push
adc
add
push
add
aaa
mov
xor
cltd
jmp
mov
faddl
insb
popa
addr16
mov
adc
out
ss
and
push
mov
add
push
sbb
xchg
cld
mov
jo
cmp
imul
add
push
cmpsb
rcl
sbb
insb
orb
repnz
dec
cltd
adc
mov
out
sahf
add
mov
lods
es
adc
aad
in
sbb
rcrb
cmpsb
add
pop
xor
shrb
and
movl
cli
xor
push
inc
xchg
mov
mov
js
cmp
mov
cwtl
add
mov
and
cmp
jle
addb
and
push
call
imulb
mov
dec
sti
add
lahf
insb
lea
push
xchg
push
push
and
jno
pop
push
loope
push
mov
mov
ds
in
inc
shl
mov
push
mov
rcrb
jle
add
popa
mov
scas
daa
lcall
stos
in
xor
ss
inc
or
loope
add
jnp
lret
sub
mov
add
js
jge
mov
mov
sbb
dec
xchg
sbb
cmp
mov
lea
loope
lock
stos
sbb
jo
pop
add
adc
dec
pusha
add
mov
and
jnp
or
xchg
pushf
orb
test
pop
push
incl
outsl
jae
dec
pop
insl
inc
push
hlt
je
xchg
pop
cli
add
add
daa
lahf
rcr
mov
add
rcll
ret
mov
inc
rorb
cmp
and
xlat
inc
jne
movsb
xchg
cld
mov
push
dec
lock
pusha
cmp
daa
push
das
aas
cmp
sbb
adc
add
inc
pop
or
add
push
je
cs
cwtl
dec
jg
jo
add
rol
repz
rolb
lahf
xchg
inc
add
pop
pop
cltd
dec
push
lock
push
mov
xor
pop
push
test
leave
cmc
or
jbe
mov
cmpsb
or
js
pusha
sub
mov
inc
es
xor
adc
xchg
fldenv
cld
lret
or
sbb
fcmovu
mov
add
push
out
adc
stos
add
cmpsl
mov
add
sar
or
mov
jb
ds
in
mov
jo
pop
add
rol
xchg
iret
xor
cmp
hlt
orb
dec
test
ret
jb
sub
pop
add
mov
add
lods
cmp
add
faddl
lret
scas
ljmp
icebp
adc
cmp
push
mov
scas
andb
add
mov
dec
loopne
and
jae
or
sar
and
mov
test
add
test
mov
mov
mov
ror
int3
add
xor
adc
inc
pop
addl
loop
ret
add
push
mov
add
stos
sub
adc
fistpll
add
push
and
pop
pop
in
into
pop
insb
inc
iret
divb
adc
lock
dec
shr
scas
int3
in
xchg
add
mov
fwait
sbb
outsl
add
and
cwtl
inc
cmpsb
add
pop
sarb
ret
out
adc
xchg
add
jmp
mov
test
add
int
mov
mov
les
lret
pop
paddb
add
stc
shl
pusha
mov
push
sbb
dec
cmp
pop
scas
das
xchg
adc
add
in
fistps
jbe
sub
rcrl
cs
rolb
add
mov
adcl
out
xlat
add
sbb
mov
aam
mov
call
es
sub
popf
idivl
mov
in
ja
pop
fmuls
inc
or
lds
clc
push
add
xlat
sub
jb
push
push
ljmp
push
bound
sub
jne
or
push
sbb
add
or
cmp
dec
or
pusha
add
mov
jp
movb
mov
roll
js
add
mov
add
or
add
jb
iret
mov
add
dec
sbb
es
addb
cmpsl
jo
pop
in
cmp
mov
and
xchg
xor
pop
rorb
push
mov
ds
enter
pop
idiv
xchg
add
rorb
test
aad
mov
cltd
push
out
jo
aaa
adc
addb
mov
scas
fisttpll
add
and
in
xor
jge
push
dec
pop
add
gs
adc
loope
push
pop
dec
jg
mov
add
loopne
cmpsb
in
add
cmp
std
clc
mov
out
add
dec
ja
xor
cwtl
popw
and
out
hlt
adc
push
fcoms
clc
ss
mov
inc
mov
push
mov
je
roll
mov
sbb
mov
cmp
pop
and
jb
push
orl
add
cmpb
cmp
adc
adc
mov
fld1
add
push
jecxz
inc
cmp
push
and
insb
add
ret
ja
push
lods
lock
andb
push
dec
sub
and
fmul
enter
int3
or
cmpsb
iret
mov
xchg
and
bound
cmp
lcall
ror
add
je
loop
cwtl
xchg
add
daa
jmp
aaa
mov
dec
sub
das
add
sbb
repnz
or
xor
add
jae
repnz
sub
jae
add
int3
sbb
inc
xor
in
sub
jle
add
add
and
movsb
push
fsts
andl
pop
jnp
lods
out
movsl
out
xor
cmp
mov
pop
jae
sbb
nop
sbb
jnp
rcrb
mov
sbb
notb
jmp
sub
adc
ret
std
addr16
jo
je
pop
add
add
mov
lcall
lods
subl
jg
push
rclb
jge
mov
mov
pop
push
mov
dec
fs
test
add
fwait
insb
jb
js
pop
add
std
cwtl
xchg
repnz
jecxz
ljmp
xchg
dec
add
dec
dec
rcll
mov
pop
str
push
stos
sbb
mov
movl
lds
add
mov
addr16
dec
pusha
in
sbb
sbb
xor
movsb
xor
iret
negl
and
xor
mov
jae
rolb
mov
or
mov
sahf
push
jge
sbb
xchg
pop
add
loopne
pop
jae
add
lods
loop
in
in
sbb
or
add
mov
jecxz
lock
movsl
pop
and
push
faddl
cmp
push
xchg
cltd
cli
xlat
pusha
sbb
add
push
add
cmpl
add
lods
scas
jl
inc
arpl
push
stc
out
xchg
jle
adc
loope
call
pop
add
inc
movl
sub
divps
jae
mov
xor
into
dec
call
repnz
mov
push
outsb
jnp
incl
pop
pop
inc
add
out
push
mov
cmpsb
sub
push
push
xchg
lcall
push
jnp
loope
es
xchg
in
push
sar
ds
push
pop
add
lret
inc
sbb
sbb
data16
sub
enter
mov
stos
lret
int
push
and
sar
add
sbb
mov
mov
cmp
out
and
push
or
add
add
fdivrl
inc
add
dec
mov
fwait
adc
xchg
jae
das
add
in
cmp
cmp
mov
icebp
leave
xlat
pop
jg
arpl
adc
pop
shll
xchg
pop
incb
xchg
push
cmp
add
jbe
sub
and
sbb
pop
ret
sbb
mov
mov
ds
insb
mov
not
rcrl
jl
ffreep
lahf
push
mov
cmpsl
sbb
and
and
cli
nop
inc
cld
mov
xlat
pop
sbb
out
pop
fstpt
out
cmp
add
loope
ljmp
imul
std
inc
adcl
jmp
scas
sub
fistps
and
add
adc
movsb
leave
cmp
or
push
cli
notl
mov
aas
inc
adc
scas
xchg
add
loopne
push
push
stos
push
mov
cmp
cmp
mov
mov
popf
cmp
sub
dec
mov
mov
inc
cmp
add
adc
add
cs
cltd
je
addr16
nop
pop
xchg
add
cmp
add
mov
add
xor
jecxz
pusha
cmp
bound
cmc
das
push
mov
adc
shrl
movsb
pop
not
cmp
fcmovne
xor
lret
test
add
sub
lods
out
outsl
fiadds
inc
dec
movsb
push
in
add
stos
add
movsl
filds
loopne
lret
in
ja
xor
push
adc
push
int3
mov
iret
add
dec
mov
outsl
jge
ret
xor
pusha
sbb
in
sbb
pushf
add
mov
icebp
mov
pop
dec
push
cltd
or
add
xor
add
inc
or
das
add
lret
dec
dec
or
mov
add
outsb
leave
and
xchg
into
pop
pop
insl
out
push
paddsw
jecxz
arpl
pop
sub
stos
add
test
sti
sub
sbb
jmp
add
pusha
iret
sahf
add
jecxz
cmp
pop
adc
add
xor
insb
add
add
lret
lods
jge
inc
ror
pop
mov
xlat
ret
pushf
jp
pop
test
test
or
jae
cmc
push
jns
push
dec
add
jmp
push
hlt
add
aad
in
mov
sbb
push
pop
add
aas
add
sahf
sbb
testb
sarl
cmpsl
pop
fmuls
mov
jp
jmp
stc
push
dec
jl
mov
nop
xchg
inc
jns
sbb
jnp
sbb
pop
mov
ret
icebp
aam
sbb
add
sarl
je
sahf
add
cli
sbb
pop
mov
cmp
sub
dec
int
shl
pop
lea
lret
subb
adc
pop
cmpsb
inc
xor
lods
add
push
adc
xchg
jnp
cmp
mov
push
lcall
arpl
mov
ficompl
addb
loopne
mov
cmp
cmp
add
cmc
cmp
jo
aam
xor
add
cmpsb
jle
push
dec
pusha
pusha
aad
ss
xchg
add
cmp
sbb
lea
hlt
cmpsl
sub
adc
sub
or
les
sahf
pop
inc
das
cli
sbb
into
call
mov
mov
loop
jecxz
mov
jmp
fisubrl
inc
repnz
pop
or
add
dec
cld
rcrb
xor
mov
mov
lods
add
mov
pop
shl
or
enter
add
inc
fildll
pop
clc
hlt
decb
lret
add
in
cmp
test
add
xchg
or
xchg
outsb
jl
mov
mov
jge
and
daa
xor
xlat
or
cli
adcb
and
pop
add
out
inc
jecxz
xlat
and
bound
repz
cmpsl
inc
add
pusha
fcomps
sub
add
sub
and
sub
add
xor
fs
jecxz
mov
scas
dec
xor
and
jo
add
push
mov
sub
imul
dec
or
lods
push
repz
sub
test
fdivs
jnp
jb
add
mov
sbb
mov
fldcw
or
test
dec
orb
jae
mov
les
jp
nop
push
lret
subb
add
mov
cmp
mov
sti
add
xor
icebp
outsl
sub
repz
rorb
mov
inc
xor
sub
sbb
or
lahf
add
outsl
pop
fs
call
popa
in
enter
add
faddl
mov
mov
add
cmpsb
or
aad
clc
aam
mov
insb
inc
lret
or
inc
in
fsubrp
adc
xchg
cmpsb
add
xchg
icebp
mov
cmp
or
subb
lods
add
sbb
shrb
sub
or
int
cmp
mov
cmpsl
leave
mov
inc
rorb
icebp
adc
bound
scas
push
add
mov
imul
and
xchg
inc
pusha
or
test
mov
mov
sarb
into
enter
jbe
add
aaa
fldenv
js
or
loopne
or
aas
xchg
mov
lods
jp
enter
jle
add
cltd
cli
push
and
gs
lcall
aam
popf
push
outsb
clc
add
lea
sbb
push
pop
jb
sbbb
add
push
add
xchg
adc
add
mov
in
cmpsb
mov
add
cmp
in
add
stos
and
jae
pop
add
add
mov
daa
gs
dec
ret
adc
rcrb
lret
mov
add
and
nop
rol
adc
add
jle
mov
cld
ljmp
inc
in
addb
add
jmp
out
stos
mov
cld
pop
and
mov
pop
subl
loope
cmp
cmpsl
add
xchg
mov
ljmp
mov
mov
push
sub
push
out
xchg
or
insb
jp
sbb
add
or
add
and
mov
add
roll
aas
adc
cmp
add
or
outsl
xchg
mov
dec
jo
mov
pop
adc
push
in
or
xchg
cmpsb
inc
mov
jp
mov
mov
ja
je
cmp
scas
out
mov
adc
int3
es
mov
cmp
aas
inc
jp
lods
stos
add
push
sets
lahf
je
add
out
int
cmpsl
in
sysret
push
stos
shl
adc
add
pushf
adc
loopne
fldl
out
imul
shlb
mov
loopne
enter
add
pop
or
rcrb
jmp
add
adc
arpl
mov
cmpsl
xchg
and
mov
adc
lret
pop
repnz
fdivr
or
push
pop
cltd
je
add
clc
inc
add
into
pop
sub
loopne
lret
shl
or
jae
cmp
cmp
nop
push
out
push
push
add
cwtl
fwait
mov
or
add
hlt
cmp
xchg
add
lret
and
and
inc
shll
daa
add
push
push
inc
mov
shlb
mov
loope
push
call
pop
sub
adc
fstl
or
add
bound
shl
add
imul
add
cltd
fiaddl
sbb
add
xchg
ret
cmp
out
xor
xchg
ds
or
outsl
mov
test
mov
outsb
in
mov
add
jae
mov
ret
add
bound
sti
adc
imul
cmp
stos
add
in
clc
inc
je
add
clc
int
add
mov
adc
jmp
mov
and
gs
pop
jnp
add
push
lods
stos
repz
dec
add
add
aad
aas
xchg
mov
std
xor
fs
push
sahf
pusha
xchg
xor
mov
xor
push
imull
add
jno
add
xor
dec
lock
mov
inc
stos
add
inc
xor
les
aam
in
sbb
dec
cmp
cmp
sub
daa
arpl
adc
roll
popa
mov
xchg
and
filds
leave
mov
xor
lcall
outsl
add
sbb
icebp
test
into
fisubl
lds
sti
aas
add
add
mov
or
inc
pop
rolb
push
data16
or
pop
add
xchg
inc
imul
jb
cmc
xor
pushf
hlt
add
push
add
xchg
subb
inc
outsl
inc
xor
fnstenv
mov
xlat
add
xchg
cwtl
imul
push
mov
enter
push
lds
and
mov
mov
push
shll
movsb
jge
insb
loop
pop
nop
rolb
add
adc
mov
das
outsl
popa
jp
fstpl
js
add
jg
jno
xchg
negb
pop
ret
mov
subb
fmuls
pop
jno
or
xchg
lcall
jmp
push
add
sbb
sub
lret
push
dec
cmp
repz
and
into
add
fisubrl
cmp
xabort
mov
pop
pop
push
mov
cmpb
flds
cmp
pop
add
in
mov
mov
iret
scas
add
xor
shrb
xchg
std
mov
stc
add
inc
sbb
jmp
outsl
rorl
add
cmp
add
mov
add
rcrl
stc
lret
push
je
rolb
add
addl
sub
loope
add
xchg
movsl
push
pushl
dec
shll
mov
sbb
mov
add
movl
or
mov
in
jle
add
push
mov
ljmp
cltd
orb
stos
cmp
pop
stc
sbb
push
adc
mov
sub
cwtl
add
dec
add
jnp
push
rolb
sub
push
outsl
es
add
lods
roll
xchg
add
dec
or
push
subb
mov
aas
addr16
clc
sbb
cs
pop
push
add
fs
pusha
push
push
cmp
dec
inc
mov
shrb
mov
or
push
shr
aad
adc
nop
lds
hlt
enter
add
std
aam
mulb
push
rolb
loopne
xor
add
mov
lret
movsb
test
pusha
cmp
push
data16
lea
pop
ret
in
inc
and
jns
lsl
in
out
dec
sti
xchg
cmp
lock
or
pop
push
lock
aas
fsubrp
shrb
in
repz
pop
pop
pusha
mov
ret
adc
lods
push
mov
adc
pop
cwtl
cmp
dec
pop
das
out
push
das
jmp
sti
cmp
in
mov
pusha
rolb
sti
rol
or
add
mov
add
scas
arpl
adc
push
fildl
stos
fwait
push
nop
add
push
sbb
enter
outsl
push
and
int3
add
cmpsl
bound
sbb
push
imul
mov
scas
ss
sti
aam
xchg
rol
test
lock
inc
ja
pop
mov
add
or
cmpsb
cwtl
sub
push
fs
sbb
rorl
mov
mov
sub
xchg
lret
aas
add
jae
repnz
mov
dec
mov
movl
cmpb
ficomps
push
cltd
movsl
arpl
mov
lock
fs
pop
push
and
mov
jae
imul
mov
sahf
lcall
add
cltd
ja
sbb
add
push
lahf
pop
push
mov
insl
jmp
data16
imul
mulb
inc
mov
inc
pop
mov
mov
cld
or
lret
sbb
loopne
sysexit
mov
bound
xor
rolb
cli
mov
mov
xor
mov
push
leave
das
mov
loope
add
insb
in
push
rcll
add
loop
and
sub
js
cmp
pusha
mov
inc
mov
add
push
ret
int
loop
mov
adc
test
add
aaa
lea
sbb
or
jb
mov
nop
xchg
fcomi
jmp
mov
push
or
popa
test
je
add
imul
push
jecxz
stc
popf
sub
fstps
lds
jl
dec
and
add
add
mov
divb
dec
sahf
out
inc
jno
jl
mov
js
add
ds
movsb
add
icebp
mov
push
add
pop
or
pusha
lcall
jnp
add
lock
adc
inc
or
mov
jle
addl
mov
movsb
xlat
cwtl
cmp
int3
sub
mov
cmpsb
pusha
push
and
inc
mov
or
lea
add
out
xchg
mov
pop
cmp
lahf
jle
push
inc
divps
push
push
sub
dec
imulb
sbb
sub
inc
sub
cli
in
je
add
ret
pop
icebp
xlat
xchg
add
jmp
jmp
add
movsl
xchg
and
clc
jg
cli
mov
fs
add
push
xor
cmpsb
insb
out
hlt
add
mov
add
jle
add
add
adc
inc
pusha
xchg
adc
jno
fwait
add
das
into
imul
rclb
loopne
mov
ficoms
pop
clc
cmpsl
mov
lret
add
cmp
fs
fidivl
sub
and
pusha
loope
sbb
popa
stos
rcrb
add
fs
imul
stc
add
xor
int
inc
add
xchg
xor
psrlw
mov
shlb
pop
nop
sarb
daa
inc
add
adc
xlat
dec
pusha
cmp
inc
add
loopne
dec
xor
int
sahf
ds
dec
cmc
enter
sub
add
popa
push
or
push
cwtl
dec
add
repnz
mov
sbb
sub
cld
adc
adc
addr16
pop
mov
add
dec
xchg
xchg
mov
push
mov
inc
cmp
cmpsl
subb
mov
xchg
popa
add
lahf
scas
sbb
jbe
inc
sbb
pop
in
je
imul
mov
pusha
pop
cmp
lret
mov
add
js
or
aaa
stc
push
add
push
rcrb
sbb
mov
addr16
sarl
inc
jo
xor
xchg
stos
pop
inc
stos
push
push
sub
cmp
aaa
imul
xor
and
add
mov
mov
push
dec
daa
clc
pop
add
pop
addr16
in
add
cmc
dec
mov
jbe
clc
aaa
mov
cmpb
jne
and
daa
cmc
dec
mov
jg,pt
cmpb
cwtl
out
sub
iret
mov
sub
sub
dec
orl
push
xchg
loop
add
add
sbb
jg
stc
cmp
sbb
repz
push
add
shlb
add
and
cmc
mov
sub
jne
or
in
mov
lock
rcrl
adc
pushf
popa
inc
or
sub
inc
outsb
pop
pop
and
pop
dec
pusha
sbb
loope
ficoml
mov
add
iret
mov
add
mov
xor
push
repnz
add
lock
or
cmpl
adc
out
loop
add
mov
dec
add
adc
int
push
clc
insl
and
div
add
dec
pop
popf
mov
les
imul
loopne
cmp
mov
add
mov
adc
xchg
adc
push
add
ja
jns
push
lock
test
sahf
cmp
in
shlb
sbb
aam
add
pop
adc
stos
push
inc
repz
cmpsl
jmp
adc
add
cld
mov
and
cld
verr
xlat
mulb
add
pop
dec
mov
fwait
pop
push
add
nop
push
mov
pop
add
inc
cmc
loope
sub
jge
int3
sub
sbb
aaa
js
lods
movsl
addl
xchg
jb
adc
adc
cmp
test
lods
add
add
cltd
mov
movsb
push
repz
mov
sub
arpl
add
loopne
mov
cmp
mov
rcrb
push
lcall
push
sbb
rsm
jp
lods
loopne
push
push
xor
aas
in
test
aam
cmc
mov
ret
mov
pop
sbb
mov
insl
fisubl
add
loope
dec
add
sub
jp
addr16
cmp
cmpsb
pop
outsl
cwtl
les
mov
mov
lock
dec
pusha
lods
xor
inc
inc
add
les
jle
push
popa
ror
push
in
push
mov
scas
sbb
inc
andl
test
pop
pop
pop
in
add
push
lods
rclb
outsb
leave
mov
adc
repnz
gs
cli
adc
in
mul
cltd
jb
mov
cmpsb
cld
xchg
mov
lret
mov
pop
lock
inc
shll
or
out
jmp
jp
add
sub
je
mov
adc
cmp
mov
repnz
out
mov
add
add
addb
and
adc
mov
jl
mov
aas
lea
sbb
enter
jmp
notb
pop
push
roll
mov
cmp
sub
stc
iret
testb
or
xchg
xor
ret
in
add
dec
xchg
fcomip
jno
lods
sbb
insb
pop
aad
adc
pushf
sbbb
cli
mov
sahf
subb
mov
das
pop
push
popa
gs
cwtl
jge
mov
outsb
subb
ret
stos
andb
sahf
fwait
lods
jo
xor
int
aad
addl
cmp
mov
mov
incl
inc
in
fwait
mov
leave
and
out
xrelease
subl
mov
mov
hlt
dec
add
in
ret
xchg
shlb
add
daa
sbb
stos
sub
mov
pop
filds
flds
leave
xor
xchg
lock
aas
cli
cmp
pop
push
mov
loop
repnz
xor
outsb
xchg
inc
arpl
dec
xchg
dec
paddw
pop
aaa
pop
push
mov
jg
cmp
neg
shlb
in
dec
add
fsubrs
ret
cmp
and
push
add
mov
dec
rolb
xchg
pop
stc
adc
add
inc
push
xchg
sub
or
pop
add
mov
pop
xchg
mov
and
cmp
jmp
stos
sbb
push
ljmp
push
lock
test
xchg
out
fpatan
sbb
in
push
addb
xorl
and
cmp
cs
mov
jle
pop
mov
xor
pandn
push
add
xlat
dec
in
mov
mov
sbb
jmp
fdivrs
wbinvd
sbb
jae
xchg
popf
pop
ja
cmp
sub
dec
add
push
ret
shlb
lret
es
mov
cld
inc
test
and
dec
mov
imul
xor
dec
sbb
and
and
sbb
jbe
cmp
jb
and
mov
clc
fwait
sub
rolb
les
and
pushf
sbb
addr16
popf
sub
lds
add
adc
xchg
jp
pop
daa
add
add
scas
xor
cli
push
dec
andl
shl
je
jb
add
cmp
jne
js
das
jno
scas
add
shlb
cmp
mov
sbb
pusha
add
repz
loop
fwait
dec
faddl
addl
lahf
sti
int
arpl
add
cwtl
sub
push
test
arpl
or
xchg
gs
cs
jle
adcb
sbb
add
sbb
mov
inc
hlt
out
ror
addr16
add
sbb
sbb
shrb
mov
add
mov
in
push
mov
or
je
push
jmp
jbe
xlat
in
jnp
pop
ja
fcmovnb
ret
mov
xchg
call
add
pop
lds
cwtl
push
and
loopne
cwtl
mov
bound
nop
add
cmpl
cmp
cmc
add
sbb
movsl
push
push
inc
xchg
pusha
xor
es
ds
lock
rcl
rolb
cmpsl
cmpsb
aad
imul
repnz
mov
cmc
ljmp
xchg
pop
test
paddusw
pop
pop
add
sbb
outsb
xor
cmp
add
mov
sbb
lcall
into
adc
inc
and
sub
jne
add
js
out
ja
add
jns
xor
rcl
mov
in
push
fisubl
roll
sbb
adc
mov
js
add
cltd
sub
into
lea
xor
rorb
movsb
xchg
xor
cmp
test
mov
mov
leave
cmp
inc
inc
add
mov
bound
outsb
mov
daa
test
pusha
pop
popa
cmp
xor
dec
stos
add
psubb
mov
add
mov
jge
jp
add
scas
rcl
sbbb
add
sbb
inc
inc
lea
loop
iret
sti
lock
add
add
outsb
sbb
mov
fucomip
pop
xor
arpl
jo
pop
xchg
add
mov
mov
mov
mov
mov
lret
and
inc
mov
add
lds
sti
cli
add
pop
push
stc
jo
jno
fwait
xchg
mov
adc
lcall
inc
xor
aas
and
adc
add
mov
xchg
aas
fiaddl
cltd
insb
stc
jmp
shlb
push
xchg
sbb
cmp
icebp
jno
imul
mov
icebp
add
inc
outsl
mov
dec
dec
add
loopne
sti
or
mov
adc
add
int
sbb
push
movsl
mov
jbe
dec
cltd
and
pop
cmc
sar
aad
flds
cmpsb
push
scas
jo
pushf
xchg
add
out
mov
les
or
je
adc
xchg
xlat
out
push
insl
lcall
mov
stos
or
movsl
xlat
arpl
sahf
mov
jo
lods
fsubs
push
mov
dec
push
mov
adc
mov
shrd
andb
shlb
outsb
pop
mov
sub
and
out
xchg
jmp
add
sarl
add
mov
push
sbb
out
push
and
adc
push
lods
jne
inc
test
mov
pop
cmp
sub
enter
bound
pop
je
add
pushf
and
addr16
cs
push
push
push
inc
pusha
push
dec
push
xor
jge
loopne
add
stc
stos
addl
clc
cld
sbb
fstpt
cmp
add
outsb
imul
cs
add
sbb
or
test
call
add
jb
or
add
in
and
adc
pop
testb
shlb
pop
pslld
mov
jne
loop
cmp
test
ror
icebp
add
xchg
xlat
sbb
add
std
adc
pop
leave
jne
pop
mov
fcomp
sbb
cmp
dec
jno
add
add
jns
mov
pop
int3
pop
js
outsb
jno
lods
sti
adcb
je
add
testb
cmp
mov
outsb
lahf
out
mov
xor
sbb
ss
add
adc
nop
dec
btc
dec
and
fdivrs
jmp
mov
push
mov
pop
lahf
inc
jno
aaa
xchg
adcb
jle
or
add
sub
add
mov
call
add
sub
xor
enter
sub
fdivrs
add
jo
jmp
loope
repnz
lahf
rol
or
or
pop
lfs
mov
dec
jae
adc
mov
add
insb
clc
pop
add
pop
inc
repz
push
loopne
sahf
push
lds
xor
pop
cmp
andb
add
xorb
rclb
pop
lret
add
dec
sbb
popa
push
mov
xor
repz
add
cmp
dec
inc
xchg
dec
loopne
xor
or
and
mov
sbbl
add
dec
pushf
mov
add
push
xor
cltd
add
pause
sub
imul
pop
mov
cmpsb
push
push
mov
pop
imul
and
sub
cli
sbb
shlb
mov
add
inc
or
jle
pop
dec
lret
jp
sbb
mov
push
adc
fs
xorl
dec
roll
push
addr16
pop
scas
pop
aam
sub
and
xchg
push
push
out
aad
data16
lret
pop
adc
mov
or
int3
pop
aam
or
or
jne
into
and
add
push
xchg
mov
daa
jno
rcrb
fnsave
mov
mov
pop
xor
adc
ds
push
and
xchg
mov
and
sti
je
repnz
add
xchg
das
xor
adc
fildl
fcoms
jno
add
mov
das
push
and
mov
fidivrl
out
mov
push
sub
lea
dec
leave
and
pop
popf
pop
mov
or
nop
sub
aaa
mov
fsubrs
push
int
adcb
jmp
mov
arpl
ret
add
movsl
xor
and
stos
test
jg
fsubrs
push
cmc
lahf
cltd
pop
sbbb
roll
sub
out
jo
enter
insl
test
add
fwait
add
fldcw
inc
cmc
push
ds
adc
or
push
repz
bound
cmp
stos
lds
inc
push
repz
lods
inc
or
ret
inc
pop
icebp
imul
fidivs
push
add
int
push
xchg
dec
cmp
mov
shl
jnp
pop
sbb
popf
scas
fwait
ret
lock
mov
sub
add
or
unpcklps
scas
insl
pop
popa
jle
xor
shlb
jb
lcall
shrl
orl
mov
push
jbe
inc
test
in
mov
or
and
cwtl
rclb
push
insb
mov
faddl
fwait
mov
pop
add
add
mov
add
mov
mov
push
call
mov
repnz
cmp
adc
sub
std
add
dec
pop
ss
test
cmc
push
xor
pop
inc
and
push
popa
dec
inc
xchg
sub
inc
add
icebp
push
repnz
jb
cmp
or
aam
into
loopne
mov
push
in
or
jmp
add
subl
into
add
push
push
movsl
lds
incl
scas
mov
into
cwtl
xor
sub
or
lock
and
testb
cs
mov
inc
mov
rorl
dec
aaa
filds
scas
call
cmpl
push
orb
test
ret
lods
fadds
cmc
repz
dec
mov
jl
push
add
push
test
clc
cmp
add
es
fsubrl
fiadds
shrb
add
jecxz
add
in
sub
repnz
pop
ret
stc
enter
jo
mov
in
fnsave
out
dec
add
testl
pop
mov
sub
cmpl
sbb
stos
xor
ljmp
push
add
loop
add
test
xchg
orb
loope
add
push
mov
pop
outsb
mov
xchg
ret
mov
mov
test
lcall
dec
testb
pop
mov
shlb
sub
inc
mov
mov
int
mov
es
lods
out
mov
out
or
stos
push
lock
lret
les
lahf
push
cmp
cmp
stos
clc
dec
into
cmp
movl
push
or
sbb
add
or
ja
enter
in
xor
add
insl
add
xorb
out
add
stos
inc
dec
push
jecxz
dec
arpl
or
mov
or
ja
adc
push
push
cli
lea
cmp
add
mov
cld
idivb
inc
push
xor
add
dec
lods
push
cmpsb
aad
add
pop
sarl
mov
xchg
add
sarb
push
hlt
dec
mov
xchg
and
cli
pop
pusha
mov
rcrb
hlt
inc
inc
daa
insl
mov
pusha
jg
sbb
fs
sub
xor
fisttpl
add
lock
fimull
mov
lds
ja
cmpsb
cmp
mov
xor
add
es
mov
push
pop
hlt
loope
add
movsb
dec
or
in
sub
test
adc
cli
and
push
stc
mov
adc
fidivl
sbb
fnstsw
cmpsb
sub
test
adc
shlb
nop
leave
ds
pop
add
pushf
dec
js
pop
lock
es
or
lret
mov
bound
cmpsl
mov
add
adc
fists
or
xchg
ds
inc
and
rorb
pop
cli
mov
xlat
add
dec
mov
lcall
fs
enter
pop
ficomps
jno
outsl
add
icebp
call
xor
jle
dec
jge
add
mov
sbb
fsubl
inc
pop
pusha
dec
sub
xor
add
int
imul
or
out
bts
inc
orl
sbb
std
adc
ret
or
out
faddl
pushf
fistpll
imul
or
jbe
sbb
mov
cmp
inc
fadds
xor
je
loop
adc
jl
push
pop
je
add
in
int3
jnp
addl
ja
mov
loope
inc
sub
lcall
add
fdivs
add
pop
dec
xor
mov
mov
sub
sti
and
in
div
add
lea
add
sti
loopne
stc
push
loopnew
add
mov
push
add
jmp
cmp
pop
ret
out
add
xor
mov
add
cmp
cmpsl
xor
imul
adcl
pop
shl
aas
out
adc
repnz
cwtl
cli
jb
cmp
jne
sub
jecxz
jecxz
fdiv
stos
mov
add
orb
add
and
data16
add
jmp
jmp
add
and
jb
dec
scas
add
aad
push
je
sub
lea
lock
inc
jmp
outsl
or
add
xor
mov
push
ss
and
sti
fs
xor
xor
sub
in
sbb
cmp
movsb
hlt
add
daa
sbb
push
jb
iret
lret
add
gs
add
stos
fsubrl
andb
mov
mov
mov
lret
jb
lea
inc
mov
jo
push
rcrl
add
addr16
aas
sub
or
hlt
cmp
test
cmp
leave
hlt
adc
dec
test
cli
out
xchg
les
pushf
and
imul
scas
ds
pop
popa
sbb
pop
int
je
dec
jl
repnz
lea
lret
inc
loope
or
or
ss
or
add
lahf
mov
ror
adc
add
add
push
dec
ret
push
add
js
test
pop
or
and
inc
fadd
sbb
out
and
xor
lock
dec
jmp
mov
push
add
pop
push
and
insb
out
stos
repnz
orb
xchg
outsl
dec
add
test
mov
xchg
inc
repnz
cmovge
add
mov
add
int3
iret
sub
mov
pop
xor
loop
aam
add
insb
pop
mov
call
orb
add
push
das
pop
xor
and
pop
out
mov
lret
jbe
add
aaa
xor
dec
rcl
and
ljmp
popa
xchg
in
xor
ljmp
out
pushf
mov
mov
pop
rcll
adc
loopne
xor
cs
cmp
xchg
xor
hlt
push
add
nop
and
shlb
pop
shll
loopne
std
add
fs
rcll
mov
sbbb
call
sub
ret
sbb
mov
or
cmp
pop
int
test
inc
push
dec
shl
mov
mov
inc
add
out
add
xchg
in
adc
hlt
add
test
movsb
pop
or
sti
pop
loopne
xor
push
xor
lcall
stos
sbb
sti
mov
jl
sbb
mov
lea
loopne
xchg
sub
or
adc
repz
push
pop
les
xchg
ja
lock
call
jne
mov
cmp
mov
mov
loop
add
add
negb
jge
imull
mov
fdivr
mov
movsl
dec
cmp
les
sarb
add
pop
jae
add
xchg
cmp
repz
jg
rcrl
push
sbb
xor
mov
jne
sbb
fcompl
iret
mov
sbbl
fadds
jle
out
ja
lahf
icebp
repnz
jbe
add
pop
into
add
dec
push
and
sbb
mov
jne
add
cli
stos
icebp
daa
cmp
dec
pop
xor
out
cmp
sbb
xchg
repz
int3
aad
cmpsb
rclb
pop
cmp
jne
adc
stos
add
pop
in
push
add
pusha
xor
add
mov
adc
lock
sti
rcll
sar
inc
add
inc
adc
add
lret
pushf
hlt
psllq
add
dec
ja
movsb
aad
push
mov
aas
cmp
add
jbe
add
outsl
xor
mov
push
ret
mov
xchg
jo
jl
xchg
mov
out
jae
mov
or
fisubs
loope
or
clc
sbb
inc
jae
or
add
sub
adc
in
sti
cwtl
add
sbb
jmp
insb
int3
add
jns
xchg
xchg
orl
test
stos
sti
add
ret
push
in
push
add
mov
push
sub
jmp
fadds
cmp
icebp
bswap
shl
ds
or
shrb
sbbl
outsl
rcrl
icebp
pop
icebp
dec
pop
nop
jae
les
push
adc
add
cmp
or
pop
subb
test
sbb
and
add
dec
sbb
sbb
sub
sti
adc
dec
vmread
add
insb
hlt
mov
pop
lcall
scas
sbb
sbb
mov
sahf
testb
lcall
or
bound
push
arpl
int
add
mov
jns
jg
add
mov
into
and
rorl
dec
xor
mov
pop
and
stc
sarb
add
ja
lahf
xlat
loop
add
cli
adc
mov
dec
xchg
out
cld
add
add
mov
das
ret
dec
ror
mov
inc
addb
and
adc
insl
bound
xchg
xor
out
pop
mov
mov
lea
xchg
adc
mov
or
push
push
test
and
push
push
mov
sbb
movsb
ss
ret
push
fisubrs
gs
xor
lock
jecxz
lcall
and
ror
mov
loopne
inc
xchg
or
mov
shll
andl
lods
xchg
ds
in
fwait
mov
pop
sbb
push
ljmp
sbb
fcompl
sbb
je
add
aaa
movl
ja
jno,pt
add
pop
xor
loopne
push
pop
lea
fdivrs
sub
xchg
lock
cmp
mov
icebp
fidivrs
mov
je
sub
xor
add
popa
jle
bound
add
aam
leave
clc
stc
ljmp
lods
call
add
shl
clc
add
das
add
adc
and
add
push
mov
test
pop
and
mov
mov
add
or
jge
lahf
add
negl
or
icebp
dec
mov
imul
das
ret
jnp
repz
fists
push
pushf
mov
or
out
inc
mov
lds
jnp
push
jo
xchg
addr16
cmp
inc
mov
mov
stc
popf
ret
mov
loope
push
out
xchg
pop
cmpb
mov
cli
cmp
jmp
or
in
and
cmc
jnp
out
push
shrl
lea
ret
add
popa
movsb
sbb
fcomps
test
sarb
loopne
out
adc
mov
andb
clc
pushf
dec
add
xor
and
fsubrs
mov
jnp
adc
rorl
jnp
pop
sti
dec
cmp
and
dec
push
clc
test
cld
cwtl
add
insl
inc
mov
nop
adc
cmp
loopne
xor
movsl
addb
fldl
dec
lcall
inc
mov
inc
sti
sub
and
cmpb
xchg
psubusb
add
jecxz
popf
cmp
add
dec
mov
or
loopne
test
jns
xchg
xchg
xor
ror
jbe
cmp
adc
mov
rcr
sub
fcom
aas
inc
mov
in
add
jne
cmp
mov
in
fidivrs
and
rol
mov
add
into
dec
xchg
sub
pop
cmp
cltd
mov
pop
pop
cmp
jg
or
arpl
add
xor
out
push
mov
mov
xor
add
stos
orb
sbb
and
ret
and
les
mov
xchg
add
sbb
dec
pop
mov
ja
jge
lret
fs
add
mov
lahf
scas
aad
test
roll
jae
aam
adc
roll
mov
add
cmp
subl
out
loopne
mov
adc
dec
push
aaa
inc
fs
add
cmp
add
cmp
xorl
stc
xor
leave
pop
flds
cmpsb
sbb
mov
jo
add
fbld
push
lods
jmp
inc
ss
enter
adc
add
inc
getsec
dec
inc
push
scas
pusha
into
xor
jl
or
cmc
addr16
nop
sbb
pop
add
sarb
and
inc
mov
shlb
incl
adcl
sbb
jne
lea
mov
adc
mov
jns
pop
popa
das
or
mov
xor
jo
push
xlat
pop
lcall
lret
cmp
xor
adc
pusha
add
out
pop
mov
int
xlat
jge
add
stos
daa
into
add
cli
mov
sbb
adc
outsl
xor
mov
add
aaa
into
jo
out
add
mov
stos
add
pop
aad
in
add
or
loop
pop
lods
adc
stc
enter
inc
add
jle
loope
jns
pop
lcall
mov
int3
mov
leave
sbb
add
and
mov
mov
add
fistl
pushf
push
fildll
add
rorl
jnp
push
push
add
and
adc
ret
and
dec
add
daa
mov
roll
mov
cmpl
cmp
es
push
cmp
add
mov
sbb
add
lret
sahf
sbb
hlt
sub
fs
add
xor
gs
xchg
push
repz
test
mov
je
cmpsb
data16
lret
cld
and
pushf
stc
scas
dec
mov
dec
jno
sub
push
outsb
lret
aas
sub
lods
jmp
and
sti
cmc
adc
ds
push
push
xor
mov
and
mov
jg
dec
roll
jo
mov
jns
adc
cmpl
and
cmp
mov
sub
ss
xor
dec
aas
and
inc
or
adcl
xor
pop
mov
andb
sub
dec
std
inc
or
sbb
adc
jae
loope
and
push
pop
adc
inc
cmp
mov
jae
add
add
imul
and
cmp
sub
jge
add
rcrb
cmpl
out
dec
or
push
mov
lock
pop
jb
call
mov
cmpsb
sbb
add
lods
hlt
pop
sarb
push
stos
xchg
imul
daa
addr16
sub
add
fisttpll
dec
pusha
cmp
rcrl
jl
mov
pop
lock
pop
clc
sbb
xchg
sbb
inc
fiaddl
stos
scas
add
xchg
xor
or
loopne
addb
outsb
dec
mov
inc
jns
pop
invd
add
jecxz
dec
add
subb
loopne
in
in
test
mov
and
add
ljmp
test
mov
adc
inc
bound
aad
scas
dec
and
push
fnstsw
aam
mov
ljmp
add
int
xor
lock
les
call
hlt
addl
jae
lods
in
pushf
std
in
pop
mov
or
in
sbb
push
pop
jbe
mov
test
xchg
testl
push
cltd
cld
ltr
and
addr16
add
fldenv
add
in
add
nop
push
lahf
shlb
add
cli
imul
or
inc
pop
fidivrs
pop
rcrl
push
enter
dec
pusha
scas
lock
nop
es
xchg
mov
cmpsl
ljmp
insb
add
xchg
or
iret
sti
xor
mov
cld
cmpsb
adc
add
xchg
dec
sub
icebp
orl
es
lods
add
insb
clc
cltd
add
xlat
sbb
loopne
xorb
or
push
xlat
arpl
push
stos
xor
xor
pushf
rcl
mov
add
xchg
lods
mov
push
add
pop
clc
pop
cmp
les
xor
sub
xchg
fs
sti
cmpsb
in
add
mov
or
ret
or
sarl
push
jg
pushf
testb
sub
adc
ret
pusha
fwait
xchg
mov
fcoml
lods
jle
add
add
sub
insl
xor
inc
bnd
cwtl
loopne
jg
bswap
pop
fwait
mov
lock
xor
pushf
cli
add
movsl
xor
add
pop
jl
add
je
push
push
push
cmp
add
nop
call
rcll
loop
xchg
test
jb
lahf
add
pop
and
add
mov
add
dec
mov
pop
add
scas
rol
push
pop
pop
js
fidivs
mov
test
jg
jl
push
pop
sub
mov
fisubrs
and
adc
stos
insl
pop
and
scas
jo
cmp
popa
add
push
or
sub
dec
out
pop
fnop
ret
cmp
jnp
cmp
cli
aaa
or
mov
add
cmpsb
nop
jecxz
or
ljmp
stc
mull
pop
push
jns
sub
mov
sbb
lods
push
out
mov
add
pop
dec
shl
movsb
shlb
loopne
je
push
mov
frstor
jbe
mov
adc
mov
cld
bound
mov
sbb
stos
add
mov
pusha
loop
nop
aaa
add
inc
test
pop
sub
mov
inc
jmp
sbb
mov
xchg
test
andl
adc
push
inc
shld
inc
add
out
shl
add
shll
fdivr
sub
xor
pop
mov
test
lcall
popa
add
test
lds
data16
pop
stc
mov
and
outsb
add
push
push
mov
test
ss
mov
cmp
dec
sti
js
icebp
cmp
jno
and
xchg
cmp
ret
sahf
repz
mov
lods
cmp
sub
and
fadds
je
imul
jns
pop
push
xchg
flds
jb
pop
cmp
mov
add
ss
inc
inc
xorb
add
lock
inc
and
add
repnz
add
cmp
adc
inc
add
out
mov
mulb
push
pop
add
andb
imul
sbb
fsubrl
ret
dec
cmp
push
sub
hlt
sbbb
mov
rcrb
je
add
and
xchg
add
mov
lods
sar
rorb
push
and
add
and
cmpsb
add
lods
cmp
push
dec
jne
sahf
push
mov
cmc
dec
adc
test
fbld
inc
shlb
fs
rorl
add
push
jb
adc
loope
add
pop
pushf
mov
fdivs
cli
push
add
lcall
nop
cmp
jbe
mov
sub
sarl
icebp
add
in
rorb
clc
fldcw
jge
cmpl
push
mov
and
fcoml
inc
cmc
sub
mov
add
sub
cwtl
push
mov
sbb
ret
cmp
lock
pop
je
mov
imul
sub
xchg
mov
sbb
sub
jle
jbe
xorl
pusha
pop
add
xchg
mov
push
xchg
clc
sbb
lock
in
xchg
sub
pushf
cmpsl
add
aas
dec
adc
cmp
rolb
orl
push
add
add
std
adc
xor
pop
subl
scas
jae
mov
or
and
js
sbb
inc
sbb
push
lds
call
in
sub
xor
mov
addl
adc
push
jg
enter
cltd
dec
adc
lock
cmp
mov
ror
push
movsl
mov
lsl
clc
shl
add
inc
jg
aas
push
adc
das
jl
dec
sbb
cmp
bswap
push
sub
addr16
push
xlat
mov
dec
fsub
mov
stos
shlb
les
lock
xchg
inc
jle
add
imul
jns
and
add
gs
pop
jl
jne
add
lcall
jo
hlt
push
daa
xor
push
test
dec
xchg
push
add
aam
lock
stc
push
inc
lret
add
dec
push
dec
mov
or
xlat
test
inc
cmp
or
add
mov
movsl
push
loop
jl
je
mov
sub
push
cmp
add
add
es
add
fwait
subb
dec
fcomip
mov
iret
das
bound
mov
mov
mov
xchg
lock
mov
push
xor
lret
enter
add
lsl
fisubl
insl
add
lock
js
xor
jp
notb
cmp
cld
dec
dec
fmuls
out
fldcw
jne
mov
mov
cmp
test
xor
mov
pop
das
add
ficoms
jbe
add
jo
cmp
sahf
sbbl
dec
xchg
call
xchg
stos
mov
pop
enter
das
cwtl
add
cmp
mov
cmpl
jo
add
sbb
pop
sub
cmpsb
outsb
mov
insb
xor
pop
xor
cld
popa
out
out
cmp
adcl
fsubs
sub
add
rorb
cmp
push
jmp
xchg
xchg
add
push
sarl
cmpsb
in
arpl
and
loope
pop
test
sub
out
sub
into
rolb
push
mov
add
out
sbb
fcoms
enter
lret
sbb
xor
xchg
fucomip
jecxz
and
xchg
or
ljmp
movl
push
dec
add
loop
inc
mov
and
push
mov
push
aam
mov
in
dec
ja
sbb
test
and
popa
add
or
jmp
inc
pop
push
push
adc
dec
or
sbb
fcom
pusha
in
xchg
add
iret
xor
pushf
push
shlb
add
lods
lret
test
mov
inc
daa
imul
jno
xor
ja
ret
aaa
ljmp
adc
ss
pop
in
add
repz
add
mov
add
shl
out
push
aam
mov
lret
or
add
dec
mov
ss
xorb
xor
hlt
add
mov
jg
adc
add
pushf
adc
sub
out
loop
es
sub
stos
jbe
lock
sub
shlb
hlt
movsl
je
test
mov
testl
stc
or
in
out
lods
loopne
stos
mov
das
mov
sub
xlat
movlps
inc
outsl
aaa
roll
jno
pop
in
xor
cmc
mov
push
mov
cwtl
pop
sbb
push
out
cmp
inc
cmp
inc
loop
cmpsl
mov
mov
out
xchg
js
mov
and
xchg
push
sbb
mov
aad
lahf
into
add
or
repnz
add
rcll
add
out
jp
flds
jl
add
in
push
dec
pushf
pop
push
sti
add
aas
arpl
mov
js
mov
std
jnp
mov
iret
dec
cli
mov
aad
xor
mov
or
mov
sbb
and
sub
and
add
fmuls
xchg
pop
push
in
and
add
pop
mov
add
rcrb
in
sbb
xchg
add
sbb
add
cmp
out
mov
push
sbb
sbb
sar
repz
pusha
add
jo
jnp
sub
pop
or
dec
ret
ja
xorb
dec
or
fisubrs
inc
mov
mov
mov
mov
rcrb
addb
js
es
xchg
or
aad
lret
ret
mov
mov
sbb
int
jae
add
or
adc
cs
xor
lock
or
add
ljmp
add
xor
push
out
rcll
ss
aam
jecxz
dec
in
add
or
adc
xor
add
xor
cld
cmp
inc
js
aad
ss
adc
das
mov
mov
mov
lret
jae
rcl
adc
aad
add
and
add
xor
sbb
jle
popa
lcall
test
sub
mov
add
inc
add
add
dec
and
inc
add
stos
sbb
test
or
adc
fdivrs
jge
mov
mov
mov
lods
icebp
in
inc
or
ja
and
daa
mov
fst
inc
stc
lods
jnp
or
mov
add
dec
call
std
repnz
outsl
pop
fiaddl
or
jge
jae
sarl
imul
scas
mov
or
jmp
add
cmp
mov
cmp
pop
movsb
andb
mov
popf
or
aam
jnp
jne
test
jbe
push
inc
aaa
fs
add
test
sub
pop
fcomps
mov
notb
fs
pop
sub
add
jns
inc
and
push
inc
fsubrp
fldcw
xchg
and
sub
popa
mov
repnz
clc
into
jl
in
jmp
pop
inc
pop
ja
je
add
lods
stos
orl
jl
push
sbb
stc
add
sub
enter
shlb
repnz
rorb
je
js
or
jl
jb
sbb
mov
cmpsb
in
mov
add
cmp
add
xchg
andb
inc
mov
mov
sbb
add
adc
cmpb
push
mov
lahf
inc
scas
push
inc
mov
add
clc
roll
hlt
popa
cmp
rcr
nop
fwait
cmp
mov
dec
mov
dec
add
cmp
popa
mov
mov
fists
push
hlt
out
push
jns
sbb
mov
push
cld
add
sub
xor
out
inc
lahf
repnz
call
add
push
cli
xchg
cs
pop
fs
sbb
push
sub
xlat
add
push
lock
mov
js
add
loopne
das
or
push
add
lcall
out
push
repz
sub
mov
mov
mov
jae
sub
out
add
shl
pusha
loop
int
xor
repnz
xor
int3
jbe
add
jl
es
lea
lds
fiaddl
push
jp
inc
add
add
mov
jge
in
add
nop
lods
sub
bound
push
mov
xor
add
jb
int
mov
sub
nop
push
mov
lods
pop
divl
pop
sar
push
out
lds
sub
adc
jo
les
pop
mov
cmp
hlt
xchg
inc
add
rclb
loop
dec
push
iret
cmp
mov
pop
or
cmc
xorl
or
sbbl
fsubl
ret
xor
inc
mov
mov
xchg
jbe
xorb
push
xor
lock
and
sub
or
aas
sbb
les
add
arpl
cwtl
add
sbb
das
and
adc
add
scas
lock
mov
xchg
add
enter
sti
sbb
mov
fs
mov
xor
jo
out
stos
add
push
rclb
cmc
mov
xor
add
arpl
push
sub
out
xor
sbb
or
inc
movsb
adc
fwait
rclb
sbb
shl
add
daa
inc
sbb
pop
or
inc
sub
pusha
fsubr
loopne
add
push
out
xlat
mov
add
popa
mov
daa
pop
xchg
add
aaa
push
into
inc
or
ds
and
dec
dec
jl
xor
push
test
jne
xor
xchg
sbb
ljmp
fsub
nop
pop
add
mov
adc
mov
lods
daa
scas
pusha
xlat
je
jno
add
psubsw
mov
and
jnp
popa
xorb
add
dec
sub
cmpsb
movsb
imul
lret
scas
mov
xchg
in
add
sarb
pop
and
cmp
popa
orb
mov
inc
mov
cmpsl
iret
ja
xchg
and
add
or
xchg
sbb
and
mov
int
mov
sbb
out
into
xlat
ljmp
icebp
aas
jo
xchg
lods
dec
push
std
add
je
dec
inc
add
cmp
in
bound
mov
out
inc
add
cld
aaa
adc
shl
sbb
jne
adc
mov
cmp
xor
sbbb
mov
sub
test
jno
imul
sbb
push
jge
jecxz
xor
add
mov
pop
adc
xlat
testl
push
clc
lahf
rcrb
add
push
fs
jnp
add
mov
dec
sbb
adc
pusha
inc
aam
lds
jnp
iret
dec
imul
mov
mov
push
adc
outsb
adc
aad
call
jae
sbb
shlb
xchg
lcall
out
cmpb
or
das
stos
xchg
inc
iret
repz
andl
adc
or
xchg
xchg
fwait
sbb
insb
dec
mov
movsl
out
int
scas
into
rorb
imul
cli
add
xchg
and
add
repnz
inc
xor
cmp
daa
jns
add
and
lret
add
pop
cltd
cld
push
sbb
pop
fisubrl
mov
or
or
push
clc
js
xchg
add
adc
mov
push
sub
rclb
mov
mov
jmp
sub
gs
or
int3
aaa
inc
jge
mov
cmp
fidivrs
or
add
inc
rcrl
pop
pop
shll
pop
mov
ja
inc
inc
adc
add
jle
mov
fdivs
add
pop
or
in
add
mov
frstor
bound
push
push
daa
repz
int
into
mov
lods
dec
rol
test
cmc
fs
sbb
lret
ret
stos
pop
rcr
dec
mov
cmp
lcall
jg
jno
outsl
fwait
rcrb
xor
xor
cmp
jl,pn
sub
inc
inc
push
js
ja
test
sbb
pusha
fdivrs
push
out
fildl
adc
iret
fcmovu
leave
cmc
mov
add
aas
pop
subl
insl
sbbb
test
mov
jbe
jmp
nop
xor
mov
jmp
and
aaa
stc
sub
inc
mov
outsb
add
das
jl
fmul
mov
fistpl
mov
scas
aas
ss
inc
pop
push
outsb
pop
dec
call
push
mov
dec
cmp
popl
shll
add
or
stos
rol
shll
js
mov
add
mov
push
or
pop
mov
xchg
or
dec
cwtl
lahf
les
shrl
std
push
loopne
xlat
hlt
cmp
arpl
imul
mov
clc
data16
mov
add
addl
sarb
pop
stos
add
xchg
ret
test
push
out
jae
push
adc
fcmovnbe
cmp
fcom
add
mov
loop
sbb
and
add
xchg
testl
or
inc
mov
mov
jae
add
es
mov
add
lahf
cmp
push
sar
sbbb
shl
and
gs
repz
push
add
cmc
mov
jbe
dec
add
dec
or
add
nop
ret
test
lods
cmp
das
cmp
xor
pop
adc
ds
idiv
add
neg
roll
sub
test
pop
dec
and
addl
and
push
lret
add
pop
jns
pop
shll
scas
lcall
adc
sbb
pop
decl
stos
rorb
shll
and
add
pop
ret
jno
sbb
out
filds
call
popf
dec
cmp
jmp
loope
xchg
rorl
andl
xchg
pusha
mov
jne
int3
add
enter
js
xor
cld
xor
mov
data16
add
shll
push
add
jbe
push
pop
and
or
adc
add
jp
add
iret
into
pop
movsb
enter
insl
add
xchg
outsb
lret
pop
xor
dec
pop
rolb
inc
jecxz
jbe
sub
int3
roll
inc
pop
push
add
mov
rcr
fldt
sub
adc
ljmp
faddl
and
mov
js
test
inc
imul
add
outsb
rorl
rclb
pop
mov
cmp
testb
dec
lret
das
insb
clts
push
adc
xchg
insl
int
add
les
inc
cmp
mov
pop
fisubrl
pushf
sub
or
int3
or
cwtl
fs
push
jns
xchg
fnstenv
push
add
or
jno
testb
dec
mov
mov
aam
jle
sbb
pop
mov
stos
add
notb
xchg
loopne
gs
mov
jns
in
inc
or
outsl
add
jmp
js
ret
mov
push
pop
cmp
insl
jl
and
add
movsl
xchg
bound
sub
mov
idivb
sbb
lret
pop
stos
cmp
fs
cmp
or
push
mov
adc
push
push
mov
cwtl
push
add
ljmp
xchg
test
add
push
daa
or
xchg
int3
pop
cmc
add
ret
or
xor
jb
and
lods
fisttpll
fstpt
add
inc
aas
sbbb
jns
hlt
sbb
add
push
jecxz
adc
cli
xchg
add
pusha
cmpb
inc
icebp
ret
mov
dec
mov
pop
mov
pop
mov
cs
movsl
in
inc
add
outsl
pusha
into
mov
pop
dec
dec
jbe
add
mov
jl
mov
add
les
mov
int3
adc
cmc
xlat
add
pop
out
lcall
xchg
aas
dec
push
mov
in
cmp
jnp
sub
iret
push
jge
rcrb
adc
in
enter
daa
push
inc
insb
jecxz
cmp
out
or
xchg
mov
or
lock
aas
jns
es
fstpl
or
add
inc
cwtl
inc
inc
add
dec
pop
subb
adc
pop
pop
xchg
sbb
pop
lock
and
mov
fsubl
mov
mov
adc
mov
testl
out
mov
je
mov
test
add
inc
out
xor
pop
jp
in
add
add
lea
xchg
jnp
adc
pusha
out
cld
add
or
pop
jmp
shrl
inc
and
test
paddw
ja
mov
mov
nop
mov
add
mov
jbe
adc
sbb
fcomi
imul
lea
shl
push
dec
add
arpl
mov
xchg
or
xchg
mov
into
mov
add
or
dec
sbb
mov
pop
rclb
add
pop
cmp
sub
jg
add
imul
and
in
pop
pop
scas
dec
inc
add
mov
pop
cmp
and
jne
pop
cld
mov
xor
clc
cmpsl
dec
rclb
push
pop
mov
adc
xor
int
mov
add
pop
add
or
jnp
cmc
insb
mov
mov
fsub
add
jns
pop
pop
test
mov
out
rcll
std
cmp
xchg
aaa
sbb
push
mov
and
dec
lahf
andb
push
es
fs
push
cs
inc
faddl
push
pop
mov
cltd
js
rolb
add
insl
ret
mov
add
cmp
cmpsl
in
icebp
daa
dec
xor
mov
rolb
aaa
iret
push
push
xor
cmp
inc
insl
imul
add
iret
sub
push
add
pop
dec
into
push
mov
fcomps
scas
jb
cmc
inc
adc
add
insb
xchg
rolb
fsubrl
jno
add
and
cmc
push
xchg
sub
sarl
cmpsb
jns
xor
cmp
pusha
pusha
insb
pop
pcmpeqd
lret
cmpb
and
sbb
or
out
adc
arpl
in
add
int
gs
add
inc
dec
cmp
rep
loopne
add
daa
xchg
hlt
adc
xchg
movsb
sub
or
cmc
push
mov
jne
clc
nop
add
pop
repz
rcr
div
add
mov
sub
pop
mov
mov
shr
push
mov
or
pusha
push
and
jbe
cmpsl
mov
mov
adc
add
clc
xchg
rclb
and
or
adc
xchg
xchg
loopne
data16
push
add
orb
xchg
inc
push
or
pop
cli
loop
mov
call
fmuls
fs
nop
jmp
int
sub
sarb
cmp
lock
jns
adc
in
add
sub
add
clc
or
das
loopne
and
add
mov
add
pop
mov
loopne
cmp
cmp
cmp
push
mov
and
and
sahf
push
adc
ret
xchg
repnz
pop
rcrl
and
jae
loopne
jo
pop
gs
cltd
in
cli
stos
add
mov
adcl
in
je
add
sbb
imull
lock
sub
mov
stos
pop
cmp
pop
xlat
mov
mov
push
push
out
and
andb
lock
push
push
cmp
push
cmc
aam
sarl
xor
or
clc
add
add
or
push
inc
inc
xor
mov
cmp
lods
fwait
inc
test
mov
int
add
mov
cmp
pop
add
mov
cmpb
push
xchg
cmp
jbe
jg
pop
repnz
leave
and
xlat
add
outsl
popa
xor
adc
sub
int
add
xor
das
xorl
fneni(8087
push
add
xchg
js
stos
call
dec
mov
lret
shlb
add
daa
adc
add
adc
xchg
aam
in
sbb
in
jecxz
out
jl
adc
xor
pusha
pop
in
scas
shr
pop
pop
adc
mov
sub
dec
jb
push
push
pop
adcl
jg
pmaxub
cltd
pop
inc
stos
and
orb
rorl
xchg
add
or
imul
push
repz
fadd
adc
mov
cld
out
push
mov
je
pop
inc
pop
fwait
gs
add
imul
test
add
and
xchg
aaa
aas
jmp
push
cmp
fists
in
js
cmc
mov
jb
sbb
mov
rorl
or
mov
add
xchg
cmpsb
mov
aas
cmc
add
add
ds
outsb
sbb
xor
push
add
lcall
into
jecxz
dec
imulb
adc
sub
cmpsb
pop
mov
pusha
andl
jmp
iret
add
inc
cmp
stos
in
loop
xchg
dec
pop
out
push
cmp
push
sub
loopne
call
clc
test
inc
push
std
lock
aad
sub
pusha
sub
aas
cld
jge
mov
mov
dec
add
bound
fstl
mov
add
fisttps
aas
add
shll
dec
mov
add
mov
pop
sbb
fs
cmp
jb
mov
test
sub
add
iret
rclb
sbb
loop
add
cmp
add
sarb
add
mov
js
out
rcrb
je
movsl
or
mov
add
cmp
push
push
mov
cwtl
cmc
add
aad
mov
adc
sbb
pushf
enter
add
in
push
dec
adc
add
jns
inc
popa
sbb
add
sahf
ret
test
pusha
fists
add
jmp
push
mov
cwtl
je
push
push
out
test
inc
xchg
mov
mov
sub
fidivs
push
in
movsl
ret
cmp
adc
push
jo,pt
imul
pop
xchg
fabs
and
add
test
add
es
inc
cmp
jge
dec
inc
mov
int3
sub
lahf
xchg
mov
mov
add
int3
inc
enter
mov
pusha
rolb
add
test
xchg
fwait
cmp
xorb
dec
pop
sbb
clc
in
add
push
or
lock
mov
fwait
cltd
lahf
out
dec
add
insl
xchg
sbb
push
fldl
xchg
mov
test
xor
adc
add
xchg
fxch
mov
mov
test
lret
inc
lods
pusha
jp
add
popa
lret
fimuls
repnz
pop
lret
in
sub
pop
sbb
mov
mov
clc
jo
add
leave
ljmp
test
ja
data16
or
test
out
sbb
inc
and
data16
cmp
bound
ds
cmp
add
es
xchg
je
in
adc
in
leave
xchg
cmp
test
xor
xchg
sub
mov
out
cmc
xor
out
subl
cs
sarb
add
lods
jg
icebp
rclb
push
aas
dec
not
xchg
inc
push
xchg
int3
sbb
popa
shl
add
insb
add
in
in
andl
pop
add
dec
xor
ja
hlt
cmpsl
loopne
fcompl
sub
shlb
add
loope
and
push
jbe
add
push
orb
dec
add
sub
add
inc
inc
mov
ljmp
add
mov
xchg
ret
outsl
add
cmpsl
rcrl
dec
jmp
jl
add
insl
cmp
out
cmpsl
or
mov
gs
add
push
sbb
jl
xchg
adc
xchg
in
scas
call
sahf
push
pop
subl
cmp
or
dec
sub
add
adc
pop
lock
lods
dec
mov
fwait
adc
sbb
pop
test
sub
sbb
movsb
out
bound
cwtl
int3
jo
add
sub
fucomp
shlb
or
js
add
xchg
sub
repz
cmp
sbb
in
cmpb
shll
dec
aaa
repnz
bound
test
cld
imul
mov
push
mov
ljmp
shr
sbb
or
push
inc
xor
pop
add
sar
sarb
mov
nop
aad
push
ja
push
sub
cmp
add
add
fwait
inc
adc
lret
mov
je
call
lahf
out
pop
add
adc
xchg
inc
cs
push
out
loop
sub
out
cli
push
mov
fs
call
inc
add
int
cmp
mov
add
sbb
popa
adc
sbb
sbb
mov
int3
loopne
xchg
sub
out
add
cli
lcall
push
or
aad
lock
and
add
dec
xchg
dec
add
cld
or
push
jp
cmp
ret
inc
cmp
fdivl
adc
inc
stos
je
outsb
nop
add
add
push
push
incl
popa
sahf
xor
sti
mov
add
xchg
leave
mov
or
inc
aam
add
out
lret
mov
sbb
add
pushf
jg
cmpsl
sub
clc
popa
xor
mov
cli
filds
and
sti
cmpsl
ret
add
aaa
shlb
pop
dec
sahf
rolb
xor
ret
xor
add
or
nop
loopne
icebp
lret
pop
xor
mov
or
andb
inc
lock
fimuls
pop
lret
inc
push
stos
add
mov
adc
add
insb
int3
cmpsb
cltd
pop
add
push
arpl
test
lds
fiadds
divl
add
push
dec
adc
cvtps2pd
cmpb
xor
pop
stos
sbb
push
rorb
jg
cmp
sarl
jb
enter
inc
adc
ret
nop
test
dec
add
loope
test
repz
movl
andl
sbb
out
adc
inc
mov
fsubrp
fcmovnu
add
xchg
adc
popl
clc
add
out
repnz
loop
jp
jl
pop
mov
movb
call
mov
xlat
fisubrl
in
push
push
dec
gs
push
sub
enter
mov
jae
pop
push
mov
sbb
push
add
call
fiaddl
push
push
test
and
pop
hlt
sub
cmp
sub
and
dec
js
xorb
mov
loopne
add
inc
add
pinsrw
shrb
notb
mov
push
jl
mov
inc
and
hlt
add
aam
add
inc
ret
push
enter
pop
jns
out
pop
popa
adc
je
dec
jbe
mov
inc
out
stc
mov
xchg
add
lds
xchg
sub
or
inc
add
jge
xchg
lret
pop
in
or
hlt
adcb
or
les
xor
or
mov
cmp
add
inc
in
sets
inc
adc
dec
jp
sub
add
inc
cmp
mov
pop
cwtl
pop
add
loopne
or
or
add
mov
cld
popa
nop
pop
add
inc
repz
mov
xchg
into
inc
add
mov
adc
and
pop
test
jnp
sub
xchg
add
ret
scas
inc
xorb
xor
loopne
push
push
shlb
cmpb
jg
add
mov
inc
and
add
lods
mov
adc
orl
cmc
adc
fildl
mov
mov
xchg
pusha
add
cwtl
add
mov
sub
push
add
xor
mov
jl
mov
pushf
rclb
and
mov
jp
push
in
add
mov
inc
dec
fldl
inc
repz
insl
subb
inc
fcmovu
lahf
xchg
add
pop
push
jne
sbb
call
and
aad
dec
fiadds
aam
imul
push
test
add
push
mov
hlt
or
add
or
mov
addr16
sub
jbe
sub
adc
test
jbe
enter
fs
daa
cwtl
cli
push
cmp
xchg
aaa
dec
sbbb
push
popa
mov
pop
jno
or
dec
lcall
aas
cli
incl
sbb
or
fimull
jecxz
jge
loopne
sbb
ljmp
add
sbb
pop
add
add
dec
inc
lcall
or
cwtl
adc
mov
xchg
mov
scas
dec
dec
xor
mov
in
cmpxchg
add
xchg
mov
xlat
sbb
and
add
aaa
leave
std
mov
add
imul
movb
pop
push
adc
ficoml
jmp
daa
jnp
filds
mov
mov
fadds
outsl
in
test
jmp
push
lcall
int3
shr
add
push
hlt
int
aam
ljmp
pop
or
sbb
popf
add
stc
adc
sub
in
xchg
push
cpuid
add
mov
adc
cmpsl
lea
cld
fcomip
fsub
lcall
sub
scas
add
mov
cmpsl
jmp
andb
or
inc
dec
fwait
add
pop
scas
and
jge
test
inc
cwtl
mov
mov
jle
lock
lds
aas
adc
and
insl
push
stos
push
pop
xor
sti
mov
inc
testb
add
xchg
nop
adc
lods
scas
pop
bnd
inc
jno
fcmovnb
adc
roll
add
mov
mov
mov
subl
inc
or
aaa
push
jns
and
fisubl
in
lds
inc
in
or
mov
dec
shll
ret
into
mov
lock
mov
je
int3
mov
cltd
fmull
push
add
les
sub
and
stos
sbb
sbb
cmp
daa
add
aad
mov
add
jge
mov
inc
call
nop
mov
dec
xor
push
pop
add
push
sbb
mov
scas
sub
mov
bound
mov
sub
aam
add
pop
mov
pusha
push
adc
add
leave
push
scas
and
dec
adc
inc
cmp
pop
push
fisttpl
lock
stc
add
push
dec
add
push
adc
push
pop
and
hlt
jns
ret
jo
lods
cmpsl
jge
mov
iret
add
pusha
inc
jno
adc
inc
arpl
add
shlb
hlt
inc
push
lock
add
jp
std
add
fmuls
shrb
subb
cmpl
inc
add
popa
pop
daa
adc
xchg
add
cmp
lds
adc
loope
pop
pusha
shlb
cmc
inc
or
incl
inc
xchg
sub
cmp
mov
aam
dec
mov
dec
mov
and
cltd
xchg
sbb
xchg
sub
jge
jne
hlt
adc
ret
xlat
aaa
in
in
add
es
pusha
pushf
lcall
jg
cli
adc
jne
adcb
lds
add
adc
add
leave
mov
loop
push
cs
aam
xor
pop
sbb
inc
add
mov
test
fisttpl
add
mov
rclb
cmp
icebp
stc
push
sarb
fs
adc
push
xchg
push
pop
imul
inc
aaa
sbb
fsubrs
and
pusha
addr16
stc
or
test
scas
jb
xchg
mov
jl
loop
mov
xrelease
pop
es
mov
add
dec
jp
cmp
pop
fstps
pop
mov
out
test
lods
insb
or
xor
add
jmp
repz
mov
add
inc
loop
sbb
cmp
jnp
jo
or
add
cs
in
pop
mov
mov
int
pushf
pop
shr
repnz
scas
cmp
loopne
fnstenv
push
add
lret
add
mov
jo
data16
or
pop
lahf
mov
xchg
dec
hlt
and
adc
cmp
add
fadd
sub
xor
test
xorb
jle
mov
jg
insb
adc
sbb
lock
mov
inc
test
push
fst
arpl
clc
or
push
cmp
addl
cmp
js
add
insl
xchg
or
push
xchg
cltd
lcall
iret
and
mov
jl
mov
loopne
sub
sbb
stos
pop
mov
sbb
dec
and
ds
pop
and
add
in
jp
xor
or
cmp
jb
add
inc
mov
mov
add
lahf
out
mov
aaa
nop
dec
mov
pop
out
lods
sbb
add
mov
xchg
add
int
cwtl
mov
push
pusha
test
or
in
add
jecxz
dec
addb
aaa
sbb
jo
out
add
or
loope
pop
in
add
mov
dec
cmp
or
aad
cmp
in
hlt
jnp
add
and
mov
call
in
pusha
add
leave
push
push
sbb
mov
or
inc
pop
push
rolb
jne
je
push
mov
in
add
xor
sbb
sahf
pusha
divb
ja
test
loop
cmc
or
les
dec
sub
and
das
or
and
sub
jns
push
sahf
add
jmp
push
std
mov
addr16
in
adcb
mov
jecxz
mov
arpl
xchg
mov
shlb
add
jp
pop
mov
sti
aam
stos
lret
xchg
in
jl
sub
paddusw
mov
cmp
jns
push
pushf
add
call
jl
mov
dec
pop
fsubp
ret
add
mov
adc
into
add
lds
and
ja
mov
mov
sbb
sub
shlb
fxrstor
and
pop
cld
fsubrp
jle
sub
test
jmp
mov
in
add
in
pusha
shlb
pusha
in
femms
out
filds
adc
dec
jecxz
sub
loopne
push
data16
out
ss
add
cmp
test
fsubl
or
je
psrad
roll
and
pop
arpl
xor
mov
xor
shl
imul
ljmp
in
push
testb
add
std
dec
jp
sbb
imull
test
cs
adc
inc
and
dec
adc
mov
or
add
lds
add
dec
xchg
cmp
sbb
mov
pop
and
mov
push
cmp
inc
xchg
add
cmpsb
aam
inc
cltd
xchg
xor
pop
in
stos
cmp
adc
push
pop
xor
lea
xorl
data16
jle
push
pop
in
ds
add
jecxz
lcall
sbb
add
xor
shlb
push
pop
cs
loop
rcrb
add
sti
js
add
pusha
xchg
fisubrl
pop
add
mov
pcmpgtb
mov
aas
popf
jmp
xchg
in
lahf
pop
mov
or
and
xor
cmp
sub
and
call
icebp
repz
sub
jmp
imul
add
cmp
and
rol
addl
add
je
push
or
mov
test
jge
push
popf
cmp
mov
and
movb
xchg
jae
cwtl
std
movhps
movl
jnp
push
fsin
adc
loopne
mov
mov
or
xchg
push
lea
mov
push
dec
or
daa
and
mov
push
mov
aas
jp
pinsrw
dec
and
mov
add
rcrl
pop
push
add
inc
xor
add
xchg
push
dec
add
adcb
dec
add
bound
sbbl
es
and
insb
addb
cld
pop
dec
add
mov
mov
pop
xlat
int
cmpsl
cli
lock
add
pop
mov
test
mov
clc
or
push
mov
int3
add
popf
imul
and
insb
aam
mov
dec
jns
loopne
and
data16
mov
mov
sahf
xchg
cmp
test
hlt
into
adc
jnp
add
add
imul
sbb
movl
inc
jnp
xchg
mov
mov
mov
or
incl
sbb
jp
in
add
xchg
repz
xchg
fistl
into
pop
loop
push
ret
fidivrs
cmp
popa
or
push
inc
rcr
mov
orb
push
add
sahf
in
mov
xchg
inc
inc
scas
push
roll
adc
push
aas
add
jo
nop
add
mov
addb
add
and
int3
dec
or
test
push
scas
push
add
and
cmp
sarb
je
fildll
cmc
push
sbb
and
inc
pusha
sub
popf
shlb
jb
shll
and
inc
jbe
cmp
popa
jmp
mov
in
loopne
add
push
xor
filds
shlb
or
ret
movsl
inc
add
push
mov
call
out
inc
mov
and
add
push
cmpsl
iret
out
or
push
aad
loop
pop
test
lods
xorb
mov
lods
enter
jne
pop
mov
sbb
aam
mov
and
pop
testl
mov
and
or
pusha
mov
lret
pop
push
inc
sbb
aas
das
mov
rcr
test
or
pushw
flds
sbb
sbb
fists
aaa
enter
popf
in
ret
push
repz
mov
sbb
mov
xchg
adc
test
add
sbb
addr16
add
mov
pop
add
popf
xlat
push
pusha
xchg
add
push
add
or
xor
xorl
test
inc
mov
or
pop
andl
ret
add
or
clc
pop
fldl
out
das
lock
cmp
pop
sbbb
clc
inc
jae
jbe
xchg
or
pop
pop
xor
in
or
and
mov
xor
das
in
add
sti
or
je
out
insl
pop
inc
adc
add
jne
mov
pop
shll
pop
sub
jecxz
sbb
imul
or
dec
cmpsl
or
cmp
adc
sub
cmp
sbb
je
cmp
xchg
pop
sub
mov
aas
add
sbb
stos
xchg
and
inc
mov
jecxz
aas
xchg
fst
fadds
in
dec
daa
xchg
inc
cmp
push
xchg
aas
sbb
mov
rcrl
push
scas
mov
adc
pop
mov
adcb
add
jl
outsl
lret
into
ja
and
movsb
jne
mov
int3
iret
fsts
push
lret
js
lods
pop
jno
clc
mov
xor
out
jns
loope
push
and
addb
mov
xchg
shrb
add
aad
stc
shl
mov
adc
clc
repnz
repnz
xchg
jo
fistl
adc
push
xchg
add
add
roll
fwait
daa
adc
shrb
call
fstps
pop
nop
fdivl
dec
lcall
add
popf
mov
sbb
daa
jg
sub
or
clc
imul
aaa
sbb
add
lods
daa
in
roll
add
jns
jg
arpl
pop
add
insb
icebp
inc
call
adc
inc
jae
cli
aas
sub
add
push
ficomps
mov
push
in
push
rclb
fisttps
mov
fstp
sbb
rclb
push
cmp
pop
gs
sub
push
bound
call
cmp
out
mov
stc
adc
add
pop
jle
or
cs
call
test
aam
lods
pop
ret
jo
ljmp
dec
add
pop
adc
add
mov
sbb
mov
enter
cld
lea
sbbl
mov
jmp
inc
scas
push
or
xor
dec
jno
icebp
mov
shl
out
cs
xchg
aaa
es
pop
and
stos
inc
add
jge
lret
mov
out
inc
lock
inc
loopne
adc
jno
jg
add
sbb
inc
jb
sbb
arpl
insl
add
mov
inc
add
loop
in
push
imul
push
cmp
stos
and
add
inc
aas
cmp
xchg
int
cmp
xor
xor
popf
lods
or
stc
test
iret
sub
popl
imul
add
call
pushf
sub
adc
jbe
or
xor
leave
xchg
add
inc
mov
movsb
mov
int
popf
loopne
sbb
and
cmp
xchg
aam
mov
mov
into
mov
or
enter
loope
loop
jle
add
out
pop
mull
pop
cmp
lds
lods
je
add
leave
addl
in
imul
enter
cmp
scas
ret
les
sbb
lods
lret
lock
mov
pushf
xor
jl
cmp
scas
in
cmpb
sti
mov
pop
inc
in
mov
adc
add
xchg
in
adcl
dec
test
lahf
cwtl
adc
out
sbb
mov
cld
mov
pop
push
decb
add
stc
mov
mov
outsl
add
incb
sbb
dec
in
pushf
and
mov
or
xchg
lods
push
nop
adc
mov
movsl
fs
dec
inc
popf
arpl
add
inc
inc
sahf
aaa
add
call
stos
pushf
arpl
test
pop
mov
bound
stos
add
sbb
and
ljmp
mov
rolb
mov
pop
lret
or
icebp
lock
sbb
iret
pop
push
inc
pop
cli
jne
add
inc
fcompl
mov
push
add
stos
xchg
lock
jno
icebp
xchg
ret
dec
rol
in
cmp
mov
cmp
fcomip
dec
inc
inc
adc
inc
test
jns
je
add
adcb
xchg
mov
push
ss
mov
shrl
adc
push
std
out
cwtl
inc
in
add
and
pop
sbb
and
aam
das
movsb
mov
pop
add
in
mov
das
dec
xor
je
aam
or
push
mov
dec
rcrb
inc
test
test
mov
cwtl
ret
leave
iret
push
outsl
and
and
pop
dec
andb
mov
add
xor
xorb
xchg
dec
fiaddl
inc
fidivs
sbb
es
insb
pop
lods
in
mov
pop
std
ficomps
mov
add
nop
sub
mov
xchg
sub
aas
or
es
sbb
divb
adc
imul
ljmp
mov
or
xchg
xchg
test
aaa
mov
sbb
jo
dec
add
pop
xchg
add
popa
or
rorb
cli
xchg
ds
sub
pushf
ret
add
iret
int
ss
cmpsb
mov
sbb
dec
cs
repnz
xor
xchg
hlt
flds
pop
xchg
lret
xchg
cmp
jb
pop
cmc
and
icebp
jge
add
jnp
pop
push
dec
int
mov
arpl
out
cmp
sarb
pop
add
in
push
pop
fisttpll
xlat
loopne
adc
add
dec
or
add
nop
js
dec
xchg
lods
pop
add
test
fs
mov
stc
dec
xchg
aas
rcll
fsub
daa
in
addr16
add
scas
or
push
in
add
xorb
sbb
inc
adc
adcb
add
rorl
sbb
or
cmp
cld
sbb
cmp
pop
andb
das
adc
cwtl
and
adc
jle
outsb
xor
mov
sub
add
lahf
cmp
rcl
pop
fstl
add
movsb
push
jg
mov
add
push
test
pop
hlt
mov
cmp
int3
add
lea
and
in
gs
adc
inc
push
mov
push
stos
dec
adc
or
repz
sbbb
push
sahf
add
jmp
test
jmp
mov
xchg
add
sbb
sbb
movsl
push
movsb
test
cmp
mov
mov
and
lcall
sarb
push
movsb
jecxz
and
pop
add
sub
xor
fucomi
mov
xchg
rcll
add
adc
jmp
add
or
je
lods
lcall
push
scas
cld
add
push
fimuls
jno
cld
push
or
add
imul
insl
out
cmp
mov
xchg
xor
sub
cld
push
add
xorb
aaa
add
jb
adc
imul
mov
ds
jg
or
sub
fdivr
pop
out
sbb
xchg
xchg
mov
faddl
addl
adc
add
out
jno
out
add
inc
imul
inc
fsts
add
mov
ljmp
add
iret
loop
and
mov
negb
roll
sbb
mov
push
mov
incb
ja
loopne
repz
mov
ret
inc
cmc
scas
cwtl
cmp
mov
int3
clc
aaa
add
jne
pop
mov
cmp
test
add
enter
imul
hlt
es
pop
imul
jmp
pop
sbb
ds
sub
add
addr16
cld
lcall
add
mov
aad
in
faddl
push
xchg
mov
inc
sahf
sbbb
ds
pusha
add
pop
mov
jns
scas
adc
inc
pop
push
jne
roll
cld
lock
lods
inc
sub
pop
outsl
fdivrs
add
std
push
into
idivb
cmp
xchg
jns
pusha
pop
cwtl
pop
in
mov
push
rclb
hlt
movsl
xchg
add
test
jb
or
daa
movsb
jo
add
mov
pop
add
push
icebp
inc
ds
inc
add
jno
inc
in
in
dec
sub
mov
sub
sub
lret
mov
pop
add
out
insb
call
push
in
dec
add
mov
jb
push
or
pop
icebp
pop
mov
dec
inc
out
shlb
in
adc
hlt
add
xchg
test
push
sub
bswap
jno
mov
push
add
jecxz
lods
lret
or
adc
pusha
sub
popl
imul
jl
push
cmp
mov
notl
enter
mov
mov
push
or
aas
addr16
loope
pusha
shl
pushf
je
add
push
out
jo
dec
mov
add
ret
xchg
dec
or
jecxz
xabort
add
cmc
out
add
xchg
pushf
or
sub
test
imul
jno
pusha
xor
hlt
lcall
loope
add
aas
adc
mov
push
dec
xchg
jb
add
andl
jo
das
dec
push
push
mov
lods
cmp
inc
dec
mov
push
add
mov
andl
in
js
mov
pop
aas
push
xor
pop
lds
add
lret
xor
inc
lcall
adcb
lock
pop
sub
mov
fucomip
push
cmc
pop
out
loop
and
test
pusha
mov
fdiv
add
add
mov
scas
les
sub
sbb
je
pusha
sbb
jmp
rclb
adc
repnz
out
add
cmp
addr16
fwait
mov
xchg
pop
das
push
ficomps
sbb
pusha
aam
cli
add
pop
pop
and
add
lcall
jp
or
or
add
add
mov
push
cmp
sbb
xchg
nop
add
jge
xchg
jns
add
loopne
popa
out
xchg
push
add
mov
sbb
jbe
jae
push
in
movsb
pushf
xor
jg
dec
aad
nop
sbb
jecxz
addl
jne
js
stos
ss
cwtl
aas
inc
daa
inc
pop
std
or
mov
or
in
std
or
mov
pop
outsb
test
pop
jg
out
add
or
dec
pop
shld
in
and
sahf
xor
or
push
pop
xchg
jbe
fldenv
mov
mov
jb
jno
fs
stos
add
rorl
imul
call
pop
push
xchg
popf
sbb
out
clc
xchg
cwtl
lock
or
cmpsl
add
pop
inc
xchg
fdivrs
push
mov
push
adc
jnp
aam
push
sbb
adc
inc
fisubs
or
repz
nop
adc
xchg
cltd
add
push
lock
pop
xorb
xchg
pop
pop
gs
jg
push
sarb
push
stos
push
testl
das
imul
call
cmc
jg
mov
into
in
aam
popa
movl
insl
pop
ficoml
nopl
cld
pushf
mov
sbb
mov
xor
inc
xchg
inc
fimull
cli
add
fsts
test
or
pusha
lcall
sbb
pushf
clc
sbb
int
cltd
push
testl
into
enter
rclb
add
mov
jmp
shl
js
add
or
add
gs
cmpsl
and
inc
inc
sbb
mov
add
js
mov
rcll
daa
sbb
mov
jb
pop
dec
pop
nop
sbb
add
dec
jno
add
jbe
pusha
lods
in
pushf
jnp
mov
sbb
loop
incl
adc
cmp
fistps
push
add
out
out
mov
add
xor
aas
jns
add
sbb
or
push
fildl
push
push
ds
jo
pop
mov
add
insl
jo
add
loop
push
adc
sahf
sbb
inc
pop
hlt
call
aas
cmp
orb
jnp
inc
pop
add
adc
xor
ret
xor
sub
add
lea
outsl
stc
data16
mov
add
loopne
addr16
add
sbb
push
mov
adc
mov
andb
testb
adc
add
push
imul
ljmp
inc
mov
add
mov
movsl
sub
jg
add
addr16
cltd
lahf
pop
and
leave
mov
inc
cwtl
incb
jp
jo
pusha
cwtl
sbb
cmpsl
mov
add
jo
add
push
fisubl
testb
mov
and
les
and
push
add
popf
stos
andb
insb
cs
cli
or
dec
xor
or
jo
add
mov
add
scas
lcall
sub
sbb
mov
stc
lods
lods
nop
xor
loopne
push
dec
push
mov
xor
sbb
mov
adc
fs
js
roll
fsubl
adcb
scas
mov
jmp
push
xor
lcall
repnz
subl
adc
jb
mov
clc
push
test
xchg
mov
pop
xchg
lods
or
inc
inc
jns
sub
or
cwtl
xorb
imull
or
adc
test
push
pop
scas
bound
push
dec
inc
add
mov
in
data16
add
stc
mov
cmp
or
push
pop
jae
les
clc
mov
xor
dec
cs
lret
add
adc
mov
xchg
push
cwtl
aaa
dec
jae
cs
push
mov
lods
stos
movb
mov
popf
add
mov
or
into
aas
pop
int3
hlt
jo
add
pop
pop
pushf
inc
jl
or
dec
cmp
outsb
rcr
cmc
sbb
mov
and
je
pop
int3
rol
cwtl
jg
mov
subb
dec
mov
mov
fiadds
mov
nop
pop
or
and
push
sbb
out
ljmp
test
popf
mov
sbb
leave
adc
inc
cwtl
icebp
inc
fwait
add
enter
sub
loopne
mov
or
push
xchg
mov
add
mov
sub
iret
or
lahf
icebp
lea
imul
pop
decl
iret
adc
out
sbb
std
sbb
fcomp
es
sbb
lahf
mov
ljmp
sbb
mov
pusha
xchg
sub
jg
pop
popa
mov
and
add
and
cld
fs
lds
arpl
shlb
add
faddl
fisubs
jbe
rcrl
xchg
das
mov
lods
adc
lds
shlb
rcrl
cmp
repnz
pop
mov
or
out
lock
stc
js
push
das
les
outsl
or
mov
sbb
add
push
sbb
enter
fsubrs
loopne
mov
adc
popa
jg
clc
ficomps
jo
out
add
xor
fildll
push
sbb
mov
int
add
frstor
pop
fcoms
mov
or
mov
in
shr
add
xor
mov
jnp
das
stos
or
add
vunpcklps
pop
aad
aas
xchg
popf
mov
cmpsb
stos
orb
lds
aad
push
mov
and
ds
arpl
and
pop
and
fstps
addb
xchg
lret
dec
sahf
xchg
aam
loope
dec
call
push
and
out
add
mov
gs
insl
rol
stos
and
xchg
add
push
subb
xor
mov
repz
dec
popf
xchg
int
test
xchg
lahf
into
and
test
cmp
or
push
in
aaa
xor
add
push
imul
movsl
and
mov
pusha
andl
movsb
fwait
sub
shll
jo
sub
cmpsl
add
outsb
xor
sar
pop
adc
mov
shlb
push
pop
pop
pop
pop
push
add
icebp
cld
mov
push
adc
fs
cmp
add
in
mov
cmp
sbbb
icebp
ror
adc
dec
mov
imul
fmul
xchg
add
xor
fst
movsb
push
add
loop
cmovno
add
std
xor
imulb
sub
icebp
add
dec
ljmp
push
jns
xor
repnz
xchg
imul
cmp
xchg
loopne
or
lds
mov
lcall
sbb
cmc
add
inc
xor
jecxz
in
in
xchg
bound
int
sub
pop
mov
out
fbld
xchg
fisubrl
inc
add
push
lret
xchg
testl
sarl
call
mov
mov
lret
jmp
xchg
out
shlb
add
mov
adc
cmp
das
xchg
add
add
sub
enter
add
cmp
ljmp
or
sahf
lret
data16
lahf
fldl
add
inc
mov
dec
adc
xchg
out
ror
aaa
ljmp
pop
sub
xchg
xor
fwait
push
push
lret
pop
clc
mov
or
add
outsb
loopne
mov
loop
cmpb
adc
outsl
sbbb
fstpt
push
popa
cmp
sbbb
lahf
repnz
inc
cmpsb
ss
mov
push
int3
sbb
mov
add
pop
push
cmpb
dec
push
adc
loopne
popf
mov
stc
add
sub
mov
xchg
divps
ficoml
movsl
or
sti
les
js
add
mov
out
aad
test
sysret
addr16
std
or
fwait
adc
cmpsb
push
mov
call
inc
mov
xchg
xchg
pop
mov
dec
lret
or
add
sub
mov
hlt
lret
jle
pusha
add
push
mov
xchg
pop
stos
mov
add
mov
outsb
mov
adc
dec
jecxz
out
incl
cmp
jae
add
xor
leave
sub
sbb
xchg
xchg
test
ret
hlt
mov
rclb
cmp
jecxz
sarb
sbb
repz
xor
sub
stc
add
mov
jno
movl
inc
sub
dec
and
jg
and
lmsw
dec
jo
inc
dec
lods
inc
mov
push
mov
fcoms
jnp
jbe
mov
push
cld
pop
cmp
dec
dec
les
jecxz
add
add
xor
aas
add
arpl
movsb
jne
mov
push
pop
test
add
jae
lock
mov
in
dec
mov
cmpsb
jbe
mov
add
insl
add
negb
dec
nop
or
add
dec
sub
cmp
pop
xor
cmpsl
pusha
cmp
adc
mov
lret
and
or
test
add
mov
fstl
push
xchg
dec
mov
xlat
mov
sti
push
mov
rolb
cmpl
lahf
push
in
sbb
out
loopne
dec
jns
cmp
std
leave
pop
pop
cmp
out
cltd
pop
cmpl
pop
movsb
add
test
or
pusha
cmp
daa
out
add
cli
jecxz
pop
sub
lret
aam
aaa
pushf
orb
movsl
fs
mov
jo
pop
cmp
mov
in
push
dec
xchg
iret
sbb
and
cli
inc
sbbb
dec
ret
and
dec
xchg
das
xchg
cmp
push
jnp
movq
jmp
mov
pop
jb
add
xchg
call
mov
or
mov
stc
fsts
js
rcrb
in
add
aas
jl
push
xchg
arpl
mov
inc
xor
movsb
sbb
jecxz
add
cmp
add
dec
into
ret
andl
pusha
sbb
add
mull
rcl
xor
dec
add
insl
stos
push
or
jle
add
clc
cltd
fisubl
mov
xchg
pop
cmp
jno
xor
push
mov
add
mov
mov
pop
and
ljmp
push
jl
gs
mov
in
add
and
fldl
lahf
test
jp
lcall
stc
inc
sbb
adc
sbb
aam
test
jecxz
add
lods
loopne
in
sbb
out
stc
adc
and
xor
loope
loop
cmp
andl
or
or
adc
clc
xor
push
lahf
xor
pop
adc
jp
inc
bound
dec
sahf
aas
arpl
and
andb
xor
xor
and
movsl
leave
roll
nop
rolb
sub
repnz
xchg
or
pop
xchg
adc
add
enter
dec
popa
nop
add
ret
movsb
push
xor
sub
jecxz
cmpsl
add
push
aad
lret
pusha
adc
mov
add
mov
inc
dec
std
push
cmp
imul
fbstp
add
iret
rorb
and
dec
pushf
fistl
inc
or
adcb
cmpb
or
lea
loope
push
pop
mov
add
mov
imul
rol
cmp
jae
enter
mov
in
add
xor
je
dec
add
mov
stc
push
call
mov
cwtl
clc
jns
mov
mov
mov
sub
es
sub
enter
jbe
add
in
push
aaa
or
aas
cmc
add
xchg
push
inc
out
sbbl
jmp
push
xlat
loopne
and
lret
add
jge
dec
scas
fwait
shr
add
xchg
shll
push
inc
fs
add
push
imul
cmp
es
pop
imulb
xchg
sbb
in
dec
add
adc
add
pop
out
add
adc
add
movsl
cltd
enter
inc
mov
dec
mov
mov
jl
sbb
hlt
jbe
pushf
mov
daa
push
sub
sub
jle
sahf
rol
cmpsb
cs
flds
or
daa
lds
popf
xor
xchg
test
pop
leave
jle
rcl
mov
imulb
sbb
sub
sbb
cmp
xchg
sub
add
loopne
call
push
mov
lock
push
add
pop
sti
mov
mov
sbb
aad
adc
add
jmp
fs
out
sbb
stos
xchg
iret
shll
std
sub
xchg
adc
ja
outsb
or
inc
or
add
xchg
orb
nop
mov
xchg
adc
insl
add
sahf
aaa
push
sti
mov
pop
mov
and
lods
addl
push
sbb
nopl
aad
inc
mov
int3
nop
orl
adcb
mov
pop
fsubrs
and
mov
addl
xchg
popf
mov
pop
cmp
or
cltd
loopne
lret
js
xchg
cmpsb
mov
fidivs
add
mov
incb
out
jmp
mov
ja
sbb
push
daa
cmpsb
cmp
fwait
inc
in
gs
cmp
pushf
add
push
jge
fists
fucomp
fimull
insb
fdivr
inc
cmp
dec
dec
mov
fildl
fidivl
out
pop
dec
cmp
add
fs
mov
mov
idivl
imul
pop
out
sbb
subl
sbb
fcomps
mov
or
int3
add
pop
jno
enter
test
mov
jmp
rorb
cmp
xchg
add
mov
mov
mov
sarb
fidivl
stos
add
shlb
xchg
aas
mov
jb
cmp
and
fadds
outsb
in
push
add
std
divb
add
xchg
add
test
shr
add
xor
and
push
push
pop
dec
dec
pusha
lock
test
enter
jns
movsb
daa
xor
sbb
sbb
orb
add
aaa
scas
inc
mov
out
xchg
push
push
aam
repnz
cmp
xlat
movsb
lds
push
dec
push
pop
or
jl
sbb
or
sub
pusha
addr16
dec
adcl
jo
repnz
stos
add
sub
dec
pcmpgtb
in
addb
jae
dec
cwtl
dec
add
fstpl
xor
dec
add
js
and
inc
insb
push
rcpps
popf
or
add
mov
add
xlat
aam
aam
jae
clc
cmpb
and
and
pusha
push
ss
insl
lret
sarb
int3
das
adcl
cmp
test
push
aaa
orb
jge
xor
lock
push
pusha
test
orb
pop
les
in
jno
xchg
fcoms
xor
mov
addr16
add
fsubrl
jg
andl
loopne
adc
pop
add
sbb
inc
stc
inc
xchg
fwait
daa
adc
cwtl
ret
push
add
sub
xor
outsb
jae
nop
inc
push
mov
ljmp
push
testb
idivl
inc
int3
aas
or
cmp
popa
adcb
dec
push
sub
mov
adc
js
aas
mov
sub
mov
stos
cmp
xor
dec
lods
je
or
fistps
xor
add
addl
lea
mov
dec
inc
mov
jle
adc
mov
add
jp
sbb
int
aam
inc
in
mov
repz
xor
out
add
iret
cmp
mov
cwtl
test
xchg
adc
dec
inc
xchg
je
mov
cld
adc
inc
std
add
xchg
cmp
cmp
add
sub
dec
mov
pop
add
js
push
call
outsb
add
sbb
cwtl
call
mov
out
mov
test
icebp
imul
mov
in
add
xchg
xor
insl
cmpb
sarl
mov
add
aam
jg
sbb
pusha
add
pop
adc
add
or
int3
mov
add
dec
addb
mov
pop
arpl
adc
insl
adc
divb
addr16
push
and
or
lahf
jmp
push
stc
add
mov
in
hlt
aas
shl
pop
cmp
xchg
sti
stos
xor
add
dec
jb
or
add
inc
rcrb
push
mov
add
loope,pn
mov
popa
jle
mov
outsb
pop
mov
jo
cmp
xchg
insl
cmp
add
imul
inc
mov
xchg
test
add
mov
jg
cmc
mov
xchg
jno
fcoml
cs
sbb
and
or
and
and
sbb
ret
add
bound
mov
cmp
jae
clc
mov
pop
arpl
incl
dec
int3
cs
add
or
add
mov
mov
jl
add
int3
xlat
mov
and
aaa
dec
adc
rcl
mov
add
jns
mov
shlb
pop
insl
push
lahf
add
sub
pop
fadd
add
push
repnz
cmp
add
out
cwtl
in
jbe
test
into
ret
jns
sbb
cmc
pop
xor
xchg
lahf
inc
sbb
jne
jno
add
cmpsl
pop
sarl
out
mov
jl
sbbb
add
mov
push
cwtl
in
loopne
jmp
sbb
adc
or
movsl
sbb
testb
sti
call
out
xchg
jns
jns
adc
icebp
lds
lcall
mov
es
cmp
std
test
rcrl
xchg
roll
dec
scas
push
shlb
mov
jecxz
push
loope
cmc
test
jne
movl
sarl
addr16
sub
lods
ret
push
dec
or
mul
mov
loope
test
dec
jbe,pt
push
lock
mov
mov
cmc
push
dec
outsb
sbb
sbb
cmpl
jb
pop
dec
stos
ret
js
stos
test
pop
orb
andb
dec
es
jge
mov
outsl
in
mov
jns
push
sbb
push
cwtl
lock
fwait
outsb
push
xor
test
mov
sbb
dec
clc
dec
add
outsl
push
and
add
insl
dec
jge
add
inc
hlt
sbb
dec
inc
jns
adcb
js
push
out
mov
addb
mov
pop
jge
or
jbe
das
sbb
dec
and
mov
push
jge
mov
sar
test
lock
or
inc
push
add
xchg
xchg
add
push
pusha
dec
sbb
pop
dec
mov
adc
mulb
pusha
jnp
add
rclb
add
sbb
cmp
lods
testl
sbb
push
add
add
push
pushf
jo
add
cmpsl
cmp
mov
jg
sub
jge
add
or
test
jl
movaps
sti
rorb
jb
push
pop
or
mov
enter
push
lock
add
and
cmp
sbbb
lods
or
push
jno
popa
pop
dec
hlt
pop
xchg
shlb
fdecstp
xor
cltd
leave
lret
push
adc
aad
imul
lahf
mov
cld
jo
inc
mov
ffreep
push
sub
rcrl
inc
cmc
jmp
mov
push
fmul
cltd
pop
xor
arpl
xchg
ret
hlt
add
lret
cwtl
mov
loopne
pop
lds
or
cld
fiadds
ficoml
add
stos
repz
cmpl
mov
mov
or
inc
iret
sbb
inc
mov
jge
fistl
lods
mov
xor
xor
pop
fsubl
aam
divb
push
mov
inc
ret
add
sub
nop
adc
add
cmp
movsb
std
inc
insb
sbb
adc
add
dec
loop
inc
inc
pusha
jne
movsl
jp
push
pusha
push
imul
icebp
es
pusha
add
mov
ss
xor
xor
scas
popa
sub
and
fsubl
or
cmp
imull
xor
int
mov
add
xchg
movb
jmp
or
test
test
loope
bt
imul
dec
pop
into
fldl2t
addb
mov
cmc
dec
sbb
sbb
adc
aaa
jno
mov
dec
lods
cwtl
cwtl
add
sbb
add
fwait
or
cld
out
add
and
mov
dec
cmp
add
lret
mov
adc
mov
sbb
jmp
nop
dec
pop
add
inc
cmp
aad
rclb
je
sbb
call
insl
dec
hlt
add
popa
fisubrs
pop
push
add
into
inc
push
mov
inc
add
lock
lods
sbb
cwtl
fcoms
add
loopne
mov
dec
loopne
jmp
movsl
mov
sbb
aam
and
mov
sar
fisttps
sbb
cmp
mull
add
out
adc
lods
dec
inc
test
repz
or
jne
and
lods
inc
aam
fdivrs
imul
adc
aas
jbe
push
addb
pusha
or
jno
pop
je
rclb
mov
inc
push
add
sbb
jmp
mov
xacquire
cli
das
mov
testl
pop
xchg
lret
cwtl
add
dec
cvttps2pi
sarl
subb
sub
pop
add
aas
repz
outsl
pusha
jnp
int3
jo
sbb
pop
adc
repz
adc
jle
and
lods
dec
pop
in
add
cwtl
icebp
repnz
call
test
cmc
scas
lea
subb
push
push
scas
cli
lods
inc
cmpsl
adc
and
pop
clc
add
rcl
xchg
jae
sbb
out
push
jl
pop
add
sub
and
mov
lds
add
inc
out
ja
mov
add
sbb
ljmp
pop
dec
jl
pop
out
pushf
daa
test
sbb
push
xchg
add
xor
pop
popf
ret
mov
add
dec
mov
pop
add
in
popf
cmp
xor
sbb
push
imul
jl
out
mov
or
xchg
dec
push
or
xlat
mov
add
adc
std
shl
add
imul
lahf
jmp
clc
pop
sub
test
es
popf
ror
mov
in
pop
dec
mov
add
inc
lods
cmp
dec
mov
arpl
call
or
mov
in
xchg
loopne
jp
add
lock
xlat
cs
push
adc
inc
popf
xor
or
mov
aas
outsl
mov
or
dec
les
xchg
inc
add
inc
jl
cwtl
pushf
fadd
xor
mov
xchg
popa
adcb
jp
popl
add
imul
orl
ljmp
loopne
lcall
ljmp
xlat
xor
mov
mov
vshufps
nop
adc
add
repnz
je
clc
mov
sbb
xchg
push
sbb
pusha
mov
test
pop
jbe
fucomi
faddl
loopne
dec
add
mov
and
sub
movsb
add
es
inc
add
std
xchg
aad
rorb
mov
jl
xchg
cmp
mov
sub
ja
and
in
enter
sbb
mov
mov
sub
scas
out
test
jne
stos
jl
inc
lds
jbe
ffree
dec
ljmp
push
push
test
or
jae
in
int3
hlt
pop
aas
out
loopne
jl
adc
add
or
xchg
lock
push
jns
addr16
sti
cmp
movsb
pusha
add
jae
jl
stc
incl
and
outsb
sahf
add
push
fs
and
push
add
leave
nop
rcrl
inc
insb
add
lcall
add
mov
lock
mov
mov
movsb
add
inc
jbe
lock
mov
mov
mov
add
iret
fisubs
inc
std
push
and
add
das
sub
test
cmpsb
gs
shrl
pushl
add
inc
mov
push
jle
sbb
lcall
or
les
pushf
movsl
mov
mov
push
aam
add
mov
jl
iret
or
lcall
loopne
popa
xchg
or
jle
dec
in
es
cmp
inc
lock
add
lods
sbb
add
push
jge
movsb
xor
bnd
sbb
mov
dec
and
adc
or
inc
int3
jmp
lret
xchg
rolb
dec
idivl
add
outsb
cmp
shlb
mov
push
sti
push
inc
dec
mov
pop
xchg
leave
sub
cmp
adc
xchg
mov
dec
std
js
push
xor
mov
mov
or
cs
rcrl
add
push
and
push
sahf
in
mov
and
dec
int
scas
clc
pop
add
jp
fdivl
xchg
ja
inc
sub
sbb
shl
aam
stc
fldl
test
add
shl
push
jp
add
mov
nop
cmp
push
add
add
adc
pop
inc
fildll
inc
add
dec
mov
sahf
or
add
aad
out
add
movsb
sub
push
shrb
dec
pop
push
dec
dec
sub
jle
or
or
xchg
sbb
out
jno
out
mov
sti
xor
and
inc
add
sub
cmp
scas
cmp
push
push
loopne
cmp
add
xor
xor
xchg
add
or
popw
add
mov
shlb
sbb
add
scas
test
stc
in
mov
xchg
add
or
enter
cwtl
push
rcr
out
mov
ljmp
pop
loop,pn
pop
xor
outsb
fistpl
cld
mul
arpl
and
ljmp
in
testb
inc
scas
dec
add
ljmp
mov
imull
jle
jg
and
mov
rcll
cli
pop
pop
push
ds
out
jl
aas
and
mov
fs
jno
cmp
filds
mov
loopne
add
or
out
enter
pop
in
or
inc
dec
jo
enter
nop
sbb
xor
flds
xchg
mov
hlt
dec
enter
lea
push
es
popf
std
clc
mov
add
push
cmp
mov
add
ret
pop
cmp
pop
or
pushf
cmpb
dec
add
mov
fwait
into
pop
xor
cmp
adc
rolb
cli
sti
nop
fsub
jge
iret
mov
lds
repnz
arpl
pop
adc
sbb
insl
add
aaa
test
movsb
mov
jmp
in
jecxz
pop
bswap
cmp
aas
rol
mov
inc
or
add
hlt
cld
pop
xchg
pop
push
sub
mov
pop
lods
add
out
sub
adc
jle
xorl
mov
ja
inc
les
mov
fdivrs
mov
test
pusha
cli
push
repz
add
enter
fisttpll
sbb
std
pop
loope
pop
xor
add
jle
or
sbb
sahf
add
movsb
loopne
adc
mov
inc
das
pop
mov
lret
stos
filds
sub
aam
in
lods
mov
lret
repnz
adc
add
jbe
bound
add
or
ja
jae
dec
sbbb
pop
outsb
add
push
mov
adc
popa
mov
les
int3
cmp
jnp
loopne
nop
fcoms
ss
les
in
stos
pop
test
jb
inc
lret
divps
pusha
es
mov
sbb
cmp
pop
add
mov
sub
cmp
cmc
sub
mov
int3
jmp
adc
lds
outsb
inc
sub
dec
mov
and
mov
notl
mov
popa
dec
pop
stc
test
inc
or
add
sbb
push
pushf
gs
loopne
in
adc
mov
sbbb
scas
ljmp
and
pusha
mov
pop
add
dec
ret
or
insl
std
jne
mov
jle
or
sub
ja
mov
in
out
add
std
sub
and
int3
add
sub
fmull
mov
mov
jle
fistps
add
cmpsl
mov
add
dec
clc
fimuls
add
mov
or
pop
add
sub
add
imul
test
push
xor
imul
fistpl
inc
call
pop
and
mov
add
aam
testb
jo
dec
dec
cmpsl
xlat
mov
sbb
add
scas
ljmp
add
cmpsl
and
xor
add
in
push
cltd
add
dec
iret
push
ss
add
int
xor
in
jb
jns
jne
xor
push
sub
incl
loopne
mov
cltd
push
jo
add
lret
or
insl
add
outsb
cmp
cmp
add
pop
cli
in
fists
push
das
sub
jnp
add
cmc
xchg
rcrl
xchg
shrb
ds
movsl
sub
pop
out
cltd
stos
out
les
repz
push
jbe
inc
mov
jnp
sti
add
jg
jp
pop
xchg
adc
xlat
out
jo
test
push
iret
dec
cmp
ds
add
gs
xor
sbb
cwtd
add
xchg
jle
jne
or
sub
push
rol
sbb
add
fs
bound
cwtl
lcall
add
inc
pop
subl
cmp
ffreep
test
add
cmp
rorl
aad
loopne
shl
pusha
or
sahf
roll
fisubrl
jmp
add
in
push
inc
mov
inc
push
bound
pushf
jnp
jb
cmpsb
fiadds
insb
sub
les
mov
sbbb
add
jb
das
sahf
sub
fiadds
dec
test
fdivrs
cli
ljmp
mov
mov
sub
mov
add
add
pushf
out
push
nop
sbb
sub
sub
add
sti
stos
jae
iret
sub
je
add
out
push
push
clc
pop
inc
add
or
addr16
negl
inc
add
mov
out
je
mov
daa
xor
mov
jp
scas
xchg
repz
xchg
shlb
rol
mov
add
jge
push
push
lock
fmul
add
sti
std
subb
in
cmpsb
xchg
je
pop
fmull
fmull
sbb
add
ss
dec
sbb
add
and
push
cmp
sub
jnp
and
jl
add
jmp
mov
xchg
mov
popa
or
fisttpl
loopne
shlb
out
jmp
cltd
pop
jne
leave
sbb
es
insb
pop
loope
xor
inc
mov
roll
add
mov
lock
push
add
add
sar
xchg
add
test
mov
and
adc
mov
pusha
movsl
inc
add
and
jo
dec
psrlq
mov
jmp
add
jns
sbb
xchg
add
add
sbb
repnz
pop
punpckhwd
sub
clc
inc
aas
cwtl
dec
outsb
out
push
inc
add
cltd
xchg
cmp
outsb
cmp
movsb
push
nop
in
add
lods
pusha
push
xor
dec
xor
pop
pop
cmp
add
andb
sub
dec
lea
adc
add
sbb
cmc
adc
xchg
mov
lods
loope
mov
aas
jecxz
andl
orb
lds
jp
shll
nop
repnz
jbe
xor
mov
into
xchg
cmp
hlt
scas
testb
in
aaa
stc
mov
pop
fisttpll
jno
adc
add
cmp
xchg
mov
dec
cltd
pusha
add
int
push
sbb
cmp
and
fstl
mov
add
jp
in
add
mov
inc
popf
mov
add
add
aam
es
repz
sarb
push
add
inc
adc
inc
fs
testl
jnp
push
enter
mov
repz
sarb
fimuls
out
jge
rorl
mov
scas
add
mov
adc
lret
xchg
xor
inc
shll
pusha
call
test
rclb
pminsw
mov
pop
filds
jnp
mov
mov
ja
data16
rclb
test
in
sbb
lods
jbe
xor
jecxz
cli
or
int3
sbb
mov
mov
insb
ret
or
subb
cpuid
cmp
mov
enter
add
jns
xchg
push
inc
jne
pop
jge
cld
xor
adc
xchg
imul
add
add
insb
xor
or
mov
mov
sub
add
cmp
imul
add
ss
std
inc
cmc
aam
daa
add
xchg
mov
or
je
pop
dec
in
add
lds
sbb
cli
cmp
iret
into
jae
lock
sbb
mov
push
sbb
orl
ret
add
jb
mov
aad
out
add
dec
mov
jecxz
adc
pop
mov
jo
mov
movsb
fwait
push
popf
pop
insb
into
add
stc
dec
mov
fstl
fisubs
out
push
pop
mov
or
adc
aad
lds
lods
loopne
mov
dec
inc
xlat
sbbl
mov
in
mov
lock
inc
add
fstl
mov
decb
adc
lret
xchg
cwtl
and
in
inc
outsb
enter
xchg
pop
pushf
lock
dec
ficompl
out
lods
inc
sub
sbb
or
and
mov
sub
xor
in
and
jp
cs
sbb
cli
fiaddl
cmp
jge
add
xchg
lds
xorb
pusha
jo
add
ds
cmp
fdivs
push
add
cmp
enter
scas
add
add
push
sarl
shrb
lret
or
aam
rcrb
pusha
sti
andl
xchg
pusha
ret
add
add
cmp
add
mov
stos
ds
ja
sub
adc
pop
scas
nop
dec
xor
hlt
clc
add
cmp
cmp
out
add
lods
ret
mov
add
xchg
clc
push
mov
sbb
icebp
xchg
fwait
and
add
xchg
push
jb
lahf
inc
stc
dec
adc
mov
hlt
rorl
mov
mov
sbb
loope
jno
add
pop
adc
pop
lds
push
loopne
mov
sub
or
int3
or
arpl
aad
mov
mov
ljmp
push
notl
in
or
xor
cmp
pop
pop
sahf
dec
scas
add
jbe
leave
add
lds
jo
pop
pop
mov
mov
stc
mov
cld
jl
xchg
fisubrs
outsb
daa
cs
jg
add
out
cmp
std
adc
imul
dec
call
sub
out
jmp
add
lods
popa
shl
pop
sahf
adc
scas
cwtl
and
mov
xchg
and
add
adc
arpl
pusha
shrl
je
add
or
inc
pop
mov
out
lahf
xchg
adc
jo
pop
insb
sub
sub
cmpb
or
inc
and
jmp
cmpsb
pop
cld
add
dec
jnp
loop
test
add
cmp
fsubl
add
jne
xor
mov
cmp
fwait
add
in
lock
add
fdivl
out
outsb
loopne
je
mov
imul
add
mov
mov
shrl
and
hlt
push
push
test
add
cli
pop
aaa
call
dec
push
sbb
rolb
mov
fidivs
mov
add
adc
cmpsl
ror
out
jns
sbb
cld
repnz
loopew
jp
stc
adc
jnp
cld
and
mov
sub
xor
and
inc
add
loope
or
xlat
js
and
test
lahf
and
push
adc
dec
pop
push
fsub
flds
sub
xchg
into
add
mov
lea
cmpsb
jge
pusha
repz
push
cld
or
cmp
xor
fisttpl
mov
lret
gs
sbb
and
loop
stc
jnp
xor
sbb
lock
push
hlt
add
and
push
lcall
push
sub
push
ret
push
es
push
mov
xchg
sti
popa
dec
push
sbbl
lahf
pop
lcall
mov
push
dec
lock
add
test
mov
clc
cmp
jno
out
mov
dec
add
cmp
sub
icebp
incb
in
lock
jge
mov
iret
cmp
rolb
roll
lock
fisubrl
in
xor
adc
and
jno
add
nop
pop
mov
insl
or
or
xchg
dec
call
and
jecxz
fsubs
cmp
or
push
incl
pop
ds
adc
movsb
js
lods
cmp
ficompl
shll
and
fcoml
or
inc
in
xor
push
es
cmpsb
adc
into
in
or
sbb
addb
push
mov
add
mov
inc
fdiv
data16
or
scas
add
or
fwait
push
xor
js
ljmp
mov
add
push
mov
popa
jb
pop
scas
mov
test
or
pop
push
cwtl
sub
pand
lea
shll
jg
clc
test
data16
mov
inc
aaa
es
popf
cmp
push
add
lods
and
cmp
shl
cmp
stc
mov
sbb
aam
popf
addr16
nop
lahf
add
mov
shr
push
insb
stos
cli
cmpsb
add
lods
jno
jmp
or
andb
add
pop
pop
mov
mov
imul
add
jns
mov
mov
sti
and
out
dec
gs
adc
daa
movsl
cltd
sarb
jecxz
stos
adc
fldl
test
movsb
mov
popf
sub
sbb
adc
push
sbb
push
repnz
clc
nop
pop
inc
jmp
rclb
add
and
bswap
je
xchg
outsb
fiaddl
int3
lea
xadd
mov
mov
push
or
nop
push
add
mov
sbb
or
add
mov
testl
scas
in
imul
add
cld
in
add
jmp
add
shr
inc
or
adc
add
sbb
into
mov
inc
movsl
test
and
out
sub
or
out
movsl
mov
imul
in
stc
out
and
adc
test
mov
push
adcb
jne
insl
xor
sahf
add
jno
out
aas
or
inc
inc
sub
add
or
pop
xor
repnz
sbb
ret
add
sbb
mov
mov
add
sub
ja
add
or
mov
xchg
sbb
ljmp
jle
xchg
mov
push
inc
out
out
mov
scas
add
dec
push
add
jb
js
mul
lock
push
add
mov
cmp
cmp
leave
mov
add
jb
in
aas
lahf
insb
add
inc
inc
jnp
out
add
dec
push
cmp
and
loope
inc
shl
add
add
jmp
ss
cmp
add
xor
pop
mov
add
out
daa
dec
addl
sub
pop
and
jne
sarl
loope
cmp
inc
std
call
nop
in
push
fmuls
int3
arpl
and
xor
jbe
nop
addps
outsl
pusha
cli
test
push
jl
fdivrl
add
mul
outsl
sar
sbb
add
lock
dec
scas
jno
add
sub
pop
add
lcall
adc
les
cmp
call
push
adc
mov
sub
lcall
cmc
sbbl
xor
add
mov
or
out
add
out
cmp
stos
cwtl
in
xchg
int
xlat
xor
shrb
inc
add
je
arpl
cmp
fisubrs
or
pop
adc
adc
jmp
inc
push
fsubl
rolb
mov
loop
stos
add
out
adc
pusha
pop
enter
repz
pusha
sbb
add
xchg
jge
dec
andb
inc
add
jp
dec
dec
test
jl
dec
or
jle
aas
lds
aas
stos
xchg
add
adc
and
mov
xor
add
dec
sbb
cmc
add
and
add
mov
push
aam
inc
ret
lahf
and
push
add
mov
hlt
mov
rcr
rol
loope
add
inc
cld
les
pop
jb
aas
in
xchg
sub
sbbl
cmovp
sub
cwtl
in
add
enter
mov
push
je
ret
add
icebp
sbb
sub
push
sub
fs
js
mov
int3
rol
add
dec
in
test
and
cmp
inc
cld
das
add
inc
pop
insl
gs
pop
mov
add
pusha
imul
sbb
mov
add
icebp
hlt
sub
push
repnz
pop
cmp
add
fs
jnp
add
pusha
call
pop
dec
mov
pop
stos
push
add
sub
adc
push
nop
xor
cs
and
add
sbb
add
dec
sti
jnp
push
pushf
cmp
cwtl
add
push
stos
add
push
pop
insl
add
push
lret
movsl
jns
lods
add
pop
push
xorb
mov
mov
clc
orl
lock
xchg
add
sbb
xor
pop
add
push
and
sbb
popf
sub
scas
or
out
sub
inc
js
js
mov
mov
jp
add
mov
into
test
scas
add
repz
xor
pop
loopne
cltd
sub
incb
call
jmp
pop
stos
lret
add
cmpsl
sbb
hlt
push
sbb
es
lahf
test
rclb
cmpsl
pop
add
fsubs
sbb
imul
pushf
add
ljmp
and
aaa
icebp
and
out
aas
pop
mov
shlb
je
jns
mov
mov
clc
insb
add
mov
test
jge
mov
sarl
call
or
mov
push
xchg
mov
mov
mov
add
in
mov
cmp
dec
adc
fsubrl
add
push
sub
jae
push
inc
into
cmc
jo
push
inc
sub
and
shlb
int3
jmp
push
into
add
stos
adc
mov
in
bound
mov
rclb
movsb
out
or
mov
add
cmpsb
inc
sbb
add
adc
adc
add
push
push
enter
insb
scas
fisttpl
fbstp
test
adc
shr
sti
jmp
rcrl
daa
xor
les
mov
lods
add
lret
pop
loope
fincstp
dec
add
add
xor
cli
ret
in
sti
ja
jnp
mov
inc
mov
outsb
out
les
jnp
inc
int
shlb
or
pop
adc
je
movl
stos
orb
mov
inc
jno
insb
add
sub
mov
pop
push
divl
jno
jg
add
jp
push
into
fiadds
cmpsb
xor
cmp
and
or
add
sbb
in
into
xchg
imul
fadds
xchg
add
ror
jo
add
cmpsb
loope
in
xchg
aas
jg
lret
pop
roll
pusha
and
push
xchg
out
mov
popl
mov
inc
xchg
dec
pusha
sbb
cmp
inc
dec
sbb
dec
add
das
push
fabs
xchg
insb
fiaddl
adc
popa
pop
jecxz
push
lcall
jno
loope
mov
testl
vphadduwd
mov
xchg
adc
add
stos
cmp
mov
int
pop
xchg
rcr
enter
add
pop
jae
add
mov
jg
mov
add
jl
sub
call
cwtl
lds
adc
lret
jmp
cmp
cmp
inc
shrl
push
add
mov
push
add
dec
pop
sub
push
sbb
ficoms
cmp
lar
imull
adc
enter
pusha
mov
notb
mov
adc
add
stc
inc
mov
mov
gs
xchg
ficoms
add
dec
or
add
mov
add
js
sub
push
mov
inc
add
dec
pop
add
or
cmp
cwtl
movsb
inc
sahf
imul
push
push
gs
lock
sar
xor
xchg
aam
add
jmp
and
xchg
rclb
push
jne
add
push
dec
xor
mov
fbld
jg
dec
mov
sti
xor
add
fdivr
pop
xor
inc
cld
mulb
pusha
adc
fidivl
mov
sbb
das
pusha
add
flds
add
mov
or
adc
xchg
clc
bound
lret
inc
out
xlat
inc
aam
arpl
hlt
sahf
fs
add
shrb
loopne
adc
and
push
movsl
sbb
push
mov
mov
jo
mov
add
xor
inc
orl
int
lret
inc
out
add
sub
add
rcrb
add
jl
outsl
add
inc
aas
add
xchg
jae
lret
lcall
loop
add
xor
mov
bsr
mov
pop
cmp
cltd
adcb
and
lock
jno
repnz
lea
lods
add
mov
xchg
popf
add
mov
add
jbe
js
in
adc
sub
cmp
mull
jns
push
add
pop
inc
movsl
adc
fsubrp
xor
inc
dec
mov
loop
xchg
stc
adc
pop
lds
leave
xlat
mov
pop
xchg
cmpsl
mov
subb
push
mov
add
xchg
lea
push
fdivrp
fbld
pop
add
fdivl
sub
data16
jg
sbb
es
or
lahf
iret
lods
or
int3
mov
pop
adc
add
jne
add
int
dec
dec
pushf
add
inc
mov
loopne
push
pop
push
sti
enter
out
rorb
jp
mov
cmp
add
add
pusha
lds
mov
adc
mov
ret
mov
aam
in
jmp
or
cmc
dec
aas
insb
add
add
les
xchg
popa
adc
lret
adcb
jnp
xor
add
inc
mov
iret
mov
and
andl
fbstp
sub
mul
and
sbb
cmpb
sbb
aad
loop
dec
cmp
lahf
adc
loopne
fsubs
add
jge
push
pusha
outsb
pop
pop
daa
mov
mov
pop
push
out
lock
cli
cmp
lret
add
int3
push
mov
adc
mov
push
xor
mov
jo
add
inc
and
addl
fidivs
mov
xchg
in
cmp
inc
jecxz
jp
add
xchg
stos
xor
dec
cmp
jge
scas
sbb
inc
cmp
pop
mov
enter
ds
xchg
loop
pop
popl
fimull
jno
mov
setne
inc
loop
divb
mov
out
adc
lcall
sub
add
sbb
mov
pop
nop
mov
or
add
sbbb
add
ja
dec
aas
adc
or
pop
sbb
and
jl
add
call
or
mov
lret
sub
sbb
push
xchg
outsl
mov
imul
popa
inc
dec
mov
cmp
add
movsb
cmpsl
adc
shlb
cmp
or
sbb
iret
sub
and
inc
add
cmp
and
inc
out
xchg
je
int3
add
outsl
xor
mov
and
adc
mov
aas
add
cltd
pusha
lret
subb
sbb
lahf
insl
inc
fstpt
ret
or
inc
mov
xor
pop
add
fadd
pushf
mov
cmp
sbb
add
sub
dec
fcmovnb
jle
sbb
push
xor
lea
repz
aam
xor
sbb
lcall
xchg
adc
add
add
rcrb
xchg
push
xor
jo
out
ljmp
mov
jbe
mov
push
add
mov
call
sbb
add
mov
fadds
cmp
lret
dec
xchg
cli
push
cmp
popf
filds
bound
push
fdivrs
jle
pop
inc
mov
sub
loop
pop
pop
cmp
push
test
or
fcomip
inc
inc
mov
cmp
mov
mov
jo
xchg
jno
add
cmpl
shl
jbe
add
mov
add
lock
add
xchg
mov
dec
ret
pop
repnz
add
fdivl
mov
scas
pop
into
aas
mulb
outsl
pop
jbe
pop
popf
add
sub
xor
sbb
fidivs
add
lcall
loopne
sbb
punpckhwd
test
rorb
mov
mov
cmp
shrb
fiaddl
pop
xchg
mov
adc
sub
jno
mov
fdivrs
add
xchg
add
pop
aam
aas
aas
dec
cmpl
inc
mov
sub
cwtl
jne
xor
push
sbb
or
push
add
pop
mov
cmp
loopne
lcall
jns
js
mov
and
out
rorb
pushf
mov
ds
nop
in
add
pop
add
clc
ljmpw
adc
cmpb
fisubs
sbbl
mov
test
aad
mov
hlt
sub
cmp
add
xchg
lods
cmpsb
inc
fwait
adc
mov
mov
add
xor
cld
std
loope
add
mov
test
cltd
and
out
sub
lods
in
xor
inc
aad
mov
lcall
pand
dec
imull
pusha
jmp
sub
es
cmp
jle
xchg
push
pop
je
pop
test
lret
clc
int3
movsl
jge
jbe
and
cmc
pushf
add
sbb
sti
test
in
pop
adc
push
dec
mov
pop
rcl
sbb
lds
sub
jno
xchg
scas
testl
fdivrl
arpl
adc
lods
xor
mov
and
add
inc
pop
mov
pop
ret
sbb
clc
cmpb
jp
mov
icebp
jno
add
bound
push
push
mov
lock
inc
ljmp
and
add
cmp
pop
sbb
mov
add
push
mov
sub
inc
mov
loopne
pop
sbb
cmp
lods
shll
stc
push
jbe
cmpsl
cmp
mov
mov
test
add
lea
inc
add
sbb
and
add
clc
mov
pop
jecxz
sbb
cmp
cltd
cld
and
add
xchg
call
and
fnstenv
add
mov
push
lea
or
xor
test
add
mov
mov
popa
testb
jge
mov
add
adc
inc
call
test
pop
adc
call
push
rcrl
and
popf
or
mov
les
enter
cmp
sbb
jg
push
or
in
fimuls
in
in
insb
add
adc
add
dec
or
push
loope
jg
add
adc
scas
add
ret
add
push
adcl
add
xor
inc
mov
sub
pop
adc
or
and
repz
out
add
cmc
scas
or
clc
jge
mov
add
mov
loopne
lahf
add
add
jp
leave
stos
popa
fistpll
mov
pushw
sub
add
js
xchg
sti
ss
je
inc
and
cmp
adc
xor
push
xchg
sub
mov
cwtl
insb
add
pop
bound
or
out
add
dec
add
xor
mov
mov
dec
scas
rolb
inc
add
sub
outsl
insl
lcall
cmp
add
fmull
add
subl
cltd
pop
lcall
test
inc
adcb
shrb
adc
push
hlt
adc
data16
dec
gs
sarl
sub
push
add
or
leave
add
inc
sub
lock
jb
enter
nop
jp
mov
fs
dec
hlt
mov
imul
pop
iret
pusha
fcompl
xor
dec
push
andl
dec
imul
sbb
sub
in
add
xchg
add
lcall
call
adc
mov
push
rclb
movsb
cs
cwtl
pop
sbb
not
ret
push
add
popf
insl
fmul
xor
mov
popa
ja
pop
scas
aam
or
or
mov
add
mov
xchg
adc
add
jp
icebp
lret
nop
test
rcll
lahf
sahf
cmp
push
push
lret
int3
rcl
cmpb
or
add
call
lods
cli
hlt
lret
negl
add
mov
loopne
add
xchg
ret
lds
daa
sbb
sar
inc
jb
cmp
shlb
sub
in
push
add
repnz
cmc
je
push
bt
pop
mov
enter
add
inc
pop
xchg
imul
loope
je
rol
int
sub
xchg
push
sbb
jle
stos
adc
shrb
jg
cmp
add
jns
add
pop
xor
mov
addb
cmp
mov
adc
mov
sti
icebp
mov
pop
dec
add
and
jns
dec
add
call
mov
mov
fs
xor
add
sarl
idivl
add
int3
and
nop
push
addr16
mov
sub
int
fdivl
stos
adcb
je
pop
dec
lahf
jg
imul
add
lods
daa
cmp
roll
mov
push
insb
and
mov
jb
xlat
aam
gs
add
xchg
cmp
pop
icebp
pop
inc
cwtl
mov
add
add
ja
fidivl
rol
adc
mov
jle
push
movsl
cmpsl
fwait
roll
mov
xchg
fcoms
pusha
push
test
inc
or
and
push
push
add
mov
inc
mov
inc
outsl
or
decb
aaa
movsb
in
pop
cs
cli
push
pop
push
test
hlt
cmp
pop
stos
adc
push
push
icebp
push
and
aad
jae
pop
or
test
arpl
push
loopne
xchg
mov
sub
daa
mov
sub
pop
adc
enter
sbb
mov
sub
xor
pop
shrl
cmp
dec
dec
out
jl
mov
push
xor
cmc
dec
out
add
test
sub
js
fldl
aas
mov
add
cli
or
xor
and
cmp
imul
int3
xchg
push
xchg
add
call
push
in
cmp
add
push
pop
scas
cmp
xor
mov
adc
pop
xchg
mov
incl
and
out
jb
fs
pop
xor
dec
fmuls
ds
iret
subb
jns
jno
loopne
add
fistl
add
xchg
push
aad
mov
add
adc
xchg
insb
xchg
imul
rsqrtps
and
dec
add
out
sahf
in
pushf
push
add
fwait
pop
adc
mov
lods
repnz
cmpsl
rcrb
aas
insl
and
mov
popa
xchg
mov
xchg
cltd
add
lret
mov
das
incl
sahf
xor
xor
push
sub
add
test
jb
into
or
shrl
mov
add
mov
push
add
lcall
lods
loopne
xchg
stc
movsb
push
mov
shrb
xor
add
jbe
jp
pusha
mov
dec
push
pop
cld
es
add
xchg
dec
stos
test
shl
and
add
inc
add
sub
lods
sbb
sbb
test
outsl
popf
int
and
add
jge
pop
dec
sub
loope
add
jne
fstpt
frstor
sbb
dec
push
sub
and
adc
mov
leave
movsl
xchg
nop
js
roll
adc
shlb
test
das
add
stc
pusha
fildll
lcall
nop
add
ror
cwtl
stos
add
jns
icebp
in
or
mov
add
fdivs
sbb
add
fldl
fsts
add
int3
lahf
stc
adc
fidivs
es
neg
mov
scas
add
sbb
inc
stos
pop
add
push
pop
mov
loopne
ljmp
popf
pushf
mov
pop
add
mov
orb
repz
mov
add
push
out
enter
and
rcll
int3
addr16
sbb
loop
sarb
dec
inc
dec
les
test
cmp
cwtl
dec
dec
push
lock
movsl
xchg
xlat
leave
je
add
lret
xor
add
mov
imul
dec
popf
push
stos
add
filds
xor
push
add
jmp
dec
iret
pop
out
mov
mov
fcmove
mov
mov
sarb
pop
call
adc
add
jmp
call
mov
movswl
sarb
bound
mov
je
sub
and
add
dec
mov
mov
push
call
mov
xlat
inc
push
ret
add
icebp
xor
jae
out
popf
mov
mov
or
or
repnz
add
popf
andl
mov
inc
jmp
add
sti
nop
pop
test
cmc
push
cmp
std
insb
mov
xchg
daa
mov
hlt
mov
divl
xlat
inc
add
jb
mov
add
push
test
dec
inc
in
mov
sub
add
nop
push
push
js
pop
dec
loop
roll
fisttpll
mov
popa
imul
push
stos
xlat
inc
add
xchg
pop
in
pop
scas
add
adc
jle
hlt
cltd
fnstenv
jns
lods
add
xchg
rolb
add
sbb
mov
cmpl
jnp
popf
aaa
mov
xor
mov
and
sub
scas
rcrb
push
dec
sub
cli
xor
add
in
lcall
lret
sbb
and
push
arpl
jb
sbb
pushf
cld
add
sub
push
push
sti
test
sub
mov
std
or
lahf
dec
pusha
or
das
flds
inc
mov
mov
sbb
fimuls
mov
pusha
dec
push
jle
jo
add
in
dec
xchg
sbb
rolb
pop
and
js
mov
add
int
xchg
pusha
in
push
repz
sbb
or
notb
dec
lock
fs
movsl
jo
add
cmp
in
sbb
add
test
xchg
adc
or
push
dec
xor
subb
ljmp
mov
ret
ja
and
repz
adc
mov
mov
sbb
inc
cwtl
orb
adc
lods
mov
mov
rorb
loopne
jmp
ds
adc
in
add
in
data16
adc
add
repnz
mov
add
push
ja
popa
orb
rcl
cmp
pusha
push
int
je
sbb
sbb
call
fidivs
iret
and
fs
mov
mov
data16
cltd
xor
je
xor
or
push
dec
movsb
dec
add
in
inc
out
ds
negb
jo
popa
mov
fwait
jge
dec
les
enter
push
cmp
pop
popa
jo
push
adc
bound
addb
xchg
adc
mov
push
stc
stos
jmp
out
push
loope
sbb
or
push
xor
adc
or
or
pop
mov
dec
mov
sub
pushf
and
push
sub
push
imul
adc
pop
and
mov
cmpb
inc
jl
bound
mov
popa
mov
mov
mov
cld
pushf
mov
or
adc
movsb
dec
mov
cmp
or
push
push
xchg
sbb
mov
aaa
dec
fs
call
addr16
iret
flds
cmp
shrb
call
cli
or
xchg
adc
add
fstpl
push
jo
rol
push
jmp
movl
popf
aad
iret
add
mov
popa
cmp
testl
out
add
mov
sbb
lods
or
sbb
clc
or
add
jmp
jns
cld
test
or
add
loopne
xchg
adc
lods
int3
inc
sar
cmpsb
adc
add
jne
subl
push
xor
daa
sbbb
push
lcall
mov
or
out
aas
add
gs
push
xchg
adc
daa
xchg
cmpsb
lret
adc
insl
movsb
int3
cwtl
out
pop
add
sahf
shr
inc
add
lret
jmp
aaa
cli
outsb
sbb
sti
add
arpl
cmp
xchg
push
inc
dec
mov
aas
push
mov
test
add
sbb
divb
jo
mov
mov
rclb
push
lock
sti
cmpsl
out
jae
aas
sbb
pop
adc
xchg
adc
mov
fcomps
jae
or
into
jne
les
push
pop
or
mov
js
mov
ret
shlb
cmp
add
mov
rcl
psubsw
stos
jmp
cmp
popf
iret
loop
cmc
insb
sar
test
enter
test
xor
dec
ljmp
dec
in
xchg
repnz
mov
int3
xchg
inc
add
sar
xor
call
jnp
movsl
add
repnz
test
mov
xor
stos
cltd
dec
xor
dec
fstpt
push
pop
xchg
mov
aas
repnz
sbb
pushf
and
mov
popw
dec
push
scas
addr16
inc
nop
sub
sub
sbb
jmp
or
add
inc
test
lock
lock
fs
or
nop
je
jle
scas
test
mov
xchg
pop
mov
jle
xchg
ja
pop
cmp
fdiv
jecxz
add
imul
loope
mov
hlt
imul
das
mov
cld
dec
loopne
cmpl
add
ljmp
xchg
pop
push
leave
sub
add
mov
adc
sbb
cli
fwait
xor
xchg
add
dec
daa
scas
pop
jne
xor
or
push
mov
subb
int
add
lods
jnp
aaa
fistl
pushf
inc
lcall
mov
lock
mov
imul
inc
or
stos
add
push
aad
ret
xor
mov
pop
add
add
rolb
mov
sarb
pop
lcall
push
mov
out
jno
sbbb
arpl
clc
addr16
movsl
or
stos
mov
adc
rcrb
shlb
je
and
add
push
das
inc
in
push
sub
and
xchg
mov
add
js
icebp
popf
jae
xorb
push
dec
lds
or
mov
jle
mov
jnp
out
inc
cmpb
loop
dec
rorb
push
pusha
add
sarb
cmp
andps
push
cmc
repnz
dec
sbbb
inc
or
push
cli
adc
mov
sub
and
cmc
outsb
dec
test
in
dec
cwtl
push
add
fidivrl
lret
icebp
xor
test
jl
inc
or
gs
dec
xchg
mov
es
jmp
loopne
mov
add
or
loope
ss
jg
in
sbb
xchg
mov
enter
inc
hlt
dec
xchg
outsb
lcall
xchg
lods
pop
pushf
push
fisubl
adc
xchg
mov
add
xchg
les
fcoml
xor
test
xor
mov
pusha
in
movsb
sub
js
mov
xor
inc
mov
aam
dec
aas
scas
aad
inc
push
jo
int
imul
push
add
lock
adc
mov
nop
js
int
fidivrl
mov
leave
outsb
xor
icebp
in
jnp
bound
push
xchg
push
mov
lret
fsubs
mov
nop
mov
and
xchg
cmp
and
cmp
push
jbe
les
cmovns
jmp
cmpsl
add
adc
pusha
push
sti
sbbl
xchg
inc
adc
sbb
push
push
loop
outsb
cwtl
cmpsb
nop
pop
push
aad
cmpl
sub
in
test
mov
xor
out
pop
and
cmp
pop
jns
add
cltd
cs
leave
hlt
jp
inc
push
rolb
outsb
faddl
lock
pop
mov
add
or
daa
dec
sub
mov
xchg
cltd
push
insb
sub
enter
ret
aaa
jg
stos
pop
jecxz
addb
aam
adc
pushf
xchg
pushf
and
adc
mov
punpckhwd
pop
inc
mov
stos
add
out
shlb
mov
scas
les
cmp
lods
outsb
mov
icebp
push
sub
rclb
dec
arpl
or
push
and
push
and
dec
pusha
add
pop
or
push
or
mov
test
add
enter
inc
add
add
mov
xor
fisttpll
adc
or
out
and
adc
mov
test
jne
mov
and
shrb
fmuls
aas
sub
sub
loopne
xchg
jmp
cmp
cwtl
in
add
mov
push
adc
rcl
icebp
or
addl
test
and
add
popa
cltd
inc
cwtl
ja
aad
call
mov
adc
sub
pusha
sub
adc
sti
xor
push
and
add
cld
js
sbb
fs
push
cmc
and
mov
cli
shll
adc
xor
and
push
add
pop
call
mov
inc
push
roll
xor
pop
inc
stos
into
add
sbb
mov
and
fimull
mov
xchg
imul
adc
adc
sbb
sahf
inc
push
test
negl
fisttpl
mov
and
mov
fwait
mov
dec
mov
testb
test
inc
enter
dec
pop
mov
push
sahf
imul
dec
sub
dec
loop
xor
imul
add
divb
int3
fimuls
adc
add
mov
cli
dec
mov
and
add
cmp
adc
lret
in
jp
pop
jnp
adc
mov
xlat
cwtl
push
push
repz
jno
insl
adcl
sub
mov
ss
lods
xchg
cmc
cmp
pop
or
inc
cmp
jl
lods
push
xor
mov
int3
mov
jp
push
enter
leave
sub
imul
xorl
jae
pop
test
lret
mov
test
sbb
sub
or
mov
or
outsl
and
and
sub
push
fs
mov
pushf
xchg
cmp
xor
adc
push
test
and
add
mov
and
repz
shll
mov
jae
add
mov
dec
ds
jg
je
outsb
mov
cmpb
inc
mov
inc
xor
mov
adc
bound
dec
xor
or
mov
cmpsl
in
inc
stos
cmp
dec
lds
adc
sbb
add
pop
lock
add
shlb
adc
xor
ret
and
push
in
pop
xchg
adcb
xchg
jae
loopne
inc
add
cmpsb
lods
dec
push
sbb
fadds
xchg
sbb
pop
pushf
hlt
std
stc
sub
shlb
mov
add
cltd
pop
jne
mov
xchg
cltd
hlt
sbb
roll
push
leave
jnp
jb
adc
mov
pop
adc
sbb
fcomps
xor
mov
cmovge
test
fs
shl
fcomps
mov
dec
add
pop
mov
or
cwtl
fs
add
adcl
mov
adc
mov
sbbb
pop
cmc
fucom
adc
sub
fldl
jo
jg
mov
filds
mov
and
aad
test
hlt
outsb
mov
das
sub
cmp
call
addr16
mov
add
outsb
and
fcoml
mov
out
js
jo
lds
add
push
fwait
inc
pop
xor
aam
add
cmpsb
or
test
in
cmp
insl
push
test
add
scas
pushl
add
xchg
test
mov
push
jns
repz
or
test
rolb
loopne
xor
sub
pop
scas
aaa
test
pop
dec
pop
leave
imul
shlb
dec
push
gs
fwait
add
rolb
sub
jle
and
sub
inc
ret
cmp
pusha
cs
fs
mov
ret
jecxz
mov
push
out
sbb
clc
jl
lcall
mov
jl
jg
leave
enter
xor
in
jo
jb
fisubl
jmp
cmp
fwait
mov
xchg
je
sar
pop
and
xchg
in
pusha
arpl
cmpsb
lcall
out
aas
or
int3
add
sbb
add
and
jl
jp
mov
push
inc
nop
pushf
and
or
jne
stos
adc
imul
adc
pop
xchg
and
int3
daa
icebp
dec
std
filds
xchg
mov
or
pop
fisubl
and
test
std
inc
cmp
imul
inc
movsb
fcoms
sti
or
mov
jae
subb
das
into
sub
lahf
lock
orb
inc
pusha
xor
or
scas
mov
xor
popa
adc
repnz
jmp
lcall
data16
ja
xchg
flds
push
fnsave
adc
mulb
enter
sub
add
shlb
push
insb
push
add
xchg
jge
jns
in
ja
add
insl
xchg
add
jne
add
xchg
and
jg
cwtl
enter
call
arpl
inc
jo
fistl
add
sub
pop
xchg
pop
pop
add
xchg
push
ljmp
inc
jbe
lods
int3
xchg
or
and
lret
fsubs
loop
cmpsl
ficoml
addb
inc
test
push
popl
xor
cltd
lcall
adc
add
push
fcoms
repnz
or
cmp
out
push
inc
mov
test
cmp
xchg
repnz
movsb
hlt
xchg
adcl
je
cwtl
cmp
les
call
push
lock
jnp
pop
insb
mov
xchg
push
dec
mov
mov
lahf
cmp
je
xor
or
arpl
pusha
ret
nop
mov
clc
push
imul
xor
pop
mov
xor
rorb
xchg
ret
mov
popa
fldl
lods
jo
testl
add
xlat
and
and
push
or
imul
pushf
inc
jge
adcb
data16
xor
add
jl
mov
jo
and
orl
push
mov
test
add
cmp
xchg
mov
addb
nop
add
add
cmp
sbb
test
sub
rorb
add
dec
adc
imul
into
push
mov
and
add
adc
insb
subl
add
add
xchg
test
or
movsl
mov
mov
mov
es
lea
bound
rcrb
jmp
pop
add
lock
push
add
pushf
push
pop
out
adc
mov
xchg
icebp
lock
xchg
loop
pop
dec
ret
data16
sub
and
push
leave
jne
add
mov
push
fsubs
loop
xchg
int3
call
sbb
jne
jl
pop
js
add
mov
add
subl
add
lods
add
cltd
lret
test
shlb
or
scas
jecxz
int3
sub
jae
push
sub
lods
pop
jl
adc
movsb
stos
insb
lods
add
enter
xorb
fcomps
sahf
add
sarb
in
out
mov
bound
xchg
dec
das
add
lds
inc
clc
mov
lret
add
jnp
sub
pushf
fs
in
rcl
pop
sbb
subps
add
add
movsl
mov
pop
cli
adc
aas
daa
and
adc
imul
jns
arpl
cs
pushf
les
inc
into
pop
jmp
add
cli
imulb
cld
popf
nop
or
dec
cs
out
daa
sub
outsl
push
jno
ljmp
add
pushf
add
je
sub
xor
jb
add
push
push
clc
imul
adc
lret
jno
jb
adc
mov
add
xchg
or
sub
lahf
sarl
in
aam
pop
rcl
inc
and
ret
dec
push
add
jmp
xchg
xchg
stos
paddsb
aad
test
jae
shlb
pop
mov
jns
add
out
pusha
pop
push
test
sbb
inc
push
add
push
sub
enter
testl
stos
stc
or
push
nop
xor
push
scas
lahf
mov
les
cmp
pushf
push
mov
mov
cmpsb
testb
nop
cmp
xor
ja
out
adc
test
fsubs
mov
xor
stos
dec
adcl
and
push
jmp
adc
cltd
dec
sbb
mov
fnstcw
mov
dec
mov
int3
lea
pusha
in
dec
test
mov
xor
pop
fildl
xor
jno
int
cmpl
xchg
fcomip
rclb
inc
xchg
dec
mov
adc
mov
nop
clc
xor
hlt
sub
cltd
cmp
add
dec
pop
enter
sub
rcll
rcll
fwait
test
mov
add
pop
push
loope
xchg
sbb
insb
sbb
sbbb
scas
or
das
xor
leave
icebp
cmc
and
xchg
mov
jo
js
orb
jb
clc
rcrb
lret
cmp
loopne
sub
lods
filds
pop
fldl
add
inc
xchg
push
cmp
xchg
mov
cltd
mov
out
dec
and
push
shr
jmp
and
mov
add
and
sub
push
mov
leave
sub
push
aam
mov
out
cmp
das
add
cmp
mov
mov
shl
pop
pmaddwd
cltd
shl
mov
adc
adc
inc
mov
jmp
jae
or
cmp
mov
lods
enter
push
cli
add
or
gs
mov
rorb
pop
test
mov
mov
xor
jae
jnp
mov
mov
lods
sub
loop
push
add
jmp
je
pop
shlb
mov
movntps
mov
mov
jmp
or
imulb
push
add
jbe
adc
xchg
inc
loop
add
push
data16
adc
push
rol
imul
add
push
cmp
repnz
dec
in
out
cmp
adc
jo
rorl
rol
shll
sub
leave
xchg
jp
in
insl
repnz
add
pop
sub
je
stos
ja
add
cmpsl
mov
fildll
aam
rorl
pop
cmc
jo
cmp
mov
orb
test
repz
push
lods
cld
or
sahf
pop
pop
add
sbb
je
mov
or
and
ljmp
imul
sbb
lods
adc
mov
ret
mov
inc
mov
jb
lods
andb
jmp
adc
lods
or
dec
fs
push
mov
adc
pop
aam
sbbl
mov
mov
add
inc
xor
leave
or
mov
rcll
push
and
mov
add
or
les
filds
fiaddl
cmp
imul
aaa
sbb
dec
inc
add
call
and
int
scas
sar
inc
xchg
jb
add
push
pop
stc
push
insl
xor
jp
int3
fcompl
push
je
dec
add
outsl
push
add
jle
rclb
push
roll
sub
shlb
imul
lds
add
scas
jmp
mov
out
inc
arpl
loope
adc
xchg
dec
enter
push
test
jp
push
test
repnz
or
out
cmp
in
cmp
inc
or
movnti
or
pop
sbb
jecxz
pop
sbb
or
inc
lock
cmp
cli
jb
inc
stos
subb
jecxz
mov
inc
movl
loop
adc
testb
pop
sbb
enter
jl
jge
inc
pop
jne
add
pop
loop
add
orb
nop
mov
mov
mov
bound
in
andb
out
repz
push
arpl
dec
add
outsl
cmp
pop
flds
into
push
add
or
fs
repnz
pop
pop
dec
idiv
enter
push
push
push
sbb
mov
sarb
add
xchg
fadds
mov
in
movsb
xchg
add
stos
and
add
mov
lods
or
loope
pop
add
cmpl
add
lret
xor
out
mov
or
sub
cmp
pop
or
insb
xor
dec
test
xchg
adc
add
out
dec
shl
jo
ret
mov
bound
pusha
or
inc
sbb
xor
add
push
dec
inc
dec
mov
cwtl
mov
lret
add
cmp
and
enter
and
repz
int3
enter
mov
add
pop
jecxz
add
add
add
xchg
mov
adc
push
jne
imul
jecxz
stc
and
sbb
mov
mov
mov
int3
mov
stc
hlt
jno
adc
js
push
and
leave
out
cmpsb
in
dec
xchg
mov
hlt
int3
pop
rorb
bound
mov
push
enter
sub
xorb
push
xchg
add
xor
lock
adc
dec
call
mov
rorb
jne
sub
add
out
lds
loope
mov
mov
jnp
sahf
jo
sub
xchg
pop
enter
add
or
and
dec
or
push
jns
push
xor
pop
dec
or
dec
pop
in
mov
test
repnz
xchg
dec
add
and
lahf
into
xor
add
jl
mov
mov
test
inc
rcrb
sarb
in
add
fildll
add
not
popf
adc
cmc
test
dec
add
and
shl
filds
in
cld
sbb
and
mov
sbb
arpl
sub
or
cmpsb
sbbl
push
cld
push
push
rorb
xchg
inc
jle
adc
mov
mov
les
lods
mov
and
imul
push
push
add
aam
movsl
call
nop
test
add
or
aam
mov
inc
push
add
sub
inc
repz
std
jb
jl
and
daa
out
adc
outsl
add
add
jns
loope
fisttpll
push
cmp
inc
adc
les
test
mov
or
sub
ret
mov
mov
dec
cmp
push
or
pop
movb
arpl
pop
std
aad
cwtl
cmp
xchg
cmc
test
gs
es
cmp
in
push
imul
push
scas
push
or
push
lea
std
shll
popa
lret
js
test
sbb
add
repz
inc
ljmp
jl
daa
leave
add
aam
out
das
inc
or
and
sub
xor
pop
adc
mov
add
aam
mov
xchg
add
enter
cmp
add
pop
or
push
cmpsb
and
cld
movsb
push
enter
stc
mov
pcmpgtw
cwtl
jge
test
add
cmc
jo
clc
dec
xor
int3
ret
fmull
stos
cltd
imul
push
aas
add
xchg
mov
cld
leave
cmp
push
and
gs
add
jnp
test
sbb
add
btr
les
fiadds
je
jb
push
sbb
inc
in
daa
inc
push
push
mov
sbb
js
clc
or
cld
dec
mov
jl
insb
test
ja
and
dec
mov
and
out
cmp
je
dec
fcomps
data16
mov
sub
lahf
adc
mov
loope
add
push
inc
inc
sbb
mov
inc
xor
jmp
lods
inc
mov
je
fsubrs
and
call
adc
jg
pop
inc
jno
jmp
js
aas
mov
inc
lock
and
decb
mov
iret
loope
xchg
sbb
add
sahf
dec
mov
adc
adc
daa
dec
jecxz
lock
mov
cmpsb
mov
loopne
jb
fadds
or
mov
cmp
nop
xor
cmp
or
in
lock
inc
sbb
add
push
bound
and
mov
or
cwtl
gs
jbe
inc
add
jno
ror
popa
xor
fstps
add
stos
add
cltd
clc
ret
sbb
inc
iret
cli
push
sub
mov
jg
xorl
jp
sub
arpl
sbb
inc
add
les
or
dec
scas
shlb
shlb
lods
xchg
adc
dec
xor
ss
sbb
fadds
push
xor
cmpsl
out
or
xchg
jb
sub
sub
popa
rcrb
add
or
movsb
inc
aas
xor
lock
cli
push
mov
scas
sbb
clc
ljmp
ss
add
adc
hlt
dec
js
in
mov
add
push
lret
xchg
dec
add
pop
and
xor
xchg
mov
fistps
cmp
aas
xlat
add
pop
adcb
mov
adc
fsubs
push
sub
add
xchg
test
sub
mov
mov
xor
cmp
and
pop
add
fsubrs
inc
add
test
dec
lock
jmp
mov
bound
and
aam
adc
push
xchg
mov
clc
mov
adc
add
repnz
push
mov
adc
mov
add
push
lret
dec
in
mov
jnp
aam
inc
add
add
adc
jmp
or
rolb
orb
mov
push
jmp
fsub
cmp
pushf
into
push
sub
imul
add
mov
mov
in
shrl
movsb
push
fldl
add
inc
js
dec
call
and
sarl
es
les
nop
jo
adc
add
add
dec
rcrl
push
sub
adc
cwtl
or
cmc
mov
in
jnp
fdivrl
mov
scas
add
movb
xor
add
data16
mov
add
push
stos
xchg
mov
int
or
add
test
inc
pop
out
add
popa
jl
and
js
pop
add
je
xorl
add
out
insl
mov
leave
cltd
aas
popa
pop
mov
pop
fs
popa
cmpb
arpl
mov
add
jno
add
xchg
push
adc
je
inc
popa
shr
lock
outsl
arpl
xchg
adc
cmp
or
sbb
data16
xchg
inc
add
popa
aaa
push
adc
add
pop
inc
hlt
add
jecxz
les
mov
add
or
ret
cmp
add
loope
dec
repnz
popa
sub
dec
int3
push
or
icebp
xchg
mov
shl
mov
es
in
dec
enter
add
rolb
add
lret
or
rcll
xor
inc
cld
or
out
aam
ret
loop
rolb
mov
push
daa
flds
leave
adc
adc
pusha
add
dec
mov
push
inc
add
pop
jae
push
ret
and
pop
fadd
jmp
out
aam
xchg
adcb
mov
add
inc
adc
inc
and
idiv
cmp
pop
nop
movsb
add
aam
ror
test
xor
in
daa
movsl
inc
out
es
fimuls
negl
lahf
inc
push
mov
sub
pop
js
in
and
pop
movsb
pop
aam
push
shll
add
decl
repnz
rolb
inc
adc
dec
loop
add
in
clc
xchg
popa
mov
add
push
jg
call
cmp
pop
ret
aam
std
push
test
adc
inc
add
sbb
call
dec
xchg
nop
mov
mov
lods
jmp
bound
xlat
sub
lahf
xchg
lods
decb
in
cmp
test
and
xchg
ja
add
mov
xchg
push
add
aas
push
popa
dec
jmp
iret
mov
fildl
int
out
mov
sti
addr16
sub
sub
sbb
mov
or
nop
xchg
add
push
enter
push
dec
gs
mov
scas
repnz
mov
xchg
and
dec
and
ljmp
pusha
nop
push
mov
cmpsl
cmp
pop
addr16
pop
sahf
pop
sub
add
mov
nop
inc
mov
ljmp
sub
loop
les
shlb
mov
xchg
or
js
je
out
inc
and
fsubl
addb
push
jmp
xchg
xchg
and
pop
add
call
test
stc
js
sub
fs
push
es
jbe
loop
scas
shrb
adc
xor
test
xorl
sub
test
cmc
push
stc
cld
add
or
add
cmc
nop
enter
push
jmp
adc
lcall
mov
loop
jmp
hlt
xor
orl
and
rolb
fwait
cmp
xor
rorb
or
cmp
mov
sbb
out
call
or
inc
mov
icebp
add
xlat
inc
inc
out
insb
dec
bound
sar
push
nop
add
dec
fcoms
fimuls
jecxz
ja
cmp
js
out
jnp
es
dec
dec
mov
cli
xchg
adc
out
icebp
push
xchg
inc
ja
push
add
jg
push
rorl
or
cld
sbb
dec
pop
xchg
add
mov
add
std
xor
mov
add
add
mov
mov
jecxz
and
enter
add
aaa
or
dec
mov
mov
mov
cmp
sbbb
push
sarb
or
cmp
scas
mov
fwait
add
in
imul
mov
cmp
cld
jge
cmpl
stos
cwtl
push
test
fisttps
movb
inc
cmp
in
in
jnp
sub
pop
sub
jns
lret
sysret
add
cli
lods
xor
mull
lods
enter
pop
nop
sub
sub
fwait
add
xor
pop
push
nop
add
arpl
push
adc
iret
sahf
jge
pop
add
fucomip
xor
aad
cmp
test
xchg
and
outsb
push
test
fcoml
mov
ror
fnsave
test
jnp
bound
cltd
pop
add
and
aas
pop
mov
push
out
add
dec
adc
test
inc
push
sbb
xor
xchg
test
nop
insb
and
inc
add
cmc
mov
das
dec
sub
mov
out
sbb
jle
dec
cmpl
or
adc
in
insb
add
je
dec
xchg
jl
lock
jno
and
sub
mull
adc
add
add
mov
movd
js
sub
add
into
mov
pop
aam
add
mov
out
daa
or
jecxz
in
push
add
mov
adc
inc
add
mov
mov
iret
popf
push
xchg
scas
push
test
fldenv
out
pop
mov
cmp
add
xorl
mov
jns
add
rcl
inc
cwtl
cs
lock
push
xor
mov
lods
sbb
pusha
or
mov
sub
add
adc
push
lret
add
dec
jo
in
std
cwtl
mov
js
inc
push
inc
add
icebp
and
loopne
xor
pop
nop
or
ss
dec
fadds
or
cmp
gs
sbb
rorl
mov
rorb
mov
bnd
adc
jmp
dec
rorb
jmp
sub
shlb
rorl
loopne
inc
or
pop
push
and
inc
push
add
movsl
fcmovbe
lcall
pop
idivb
inc
mov
rolb
movsl
and
insl
push
loopne
add
mov
or
mov
adcl
inc
inc
dec
cmp
fs
jne
jns
rcll
fdivs
push
sub
and
xchg
jns
lcall
nop
das
pop
add
popf
cmpsb
jecxz
ljmp
add
inc
out
inc
pop
repnz
rol
push
sbb
or
adc
roll
push
xchg
dec
jb
int3
loope
outsb
sti
and
cwtl
adc
add
sub
inc
test
mov
pop
arpl
add
xchg
iret
dec
scas
mov
int
divl
aam
rolb
lea
xor
icebp
fwait
add
add
pop
add
jmp
std
pop
xor
mov
sub
fs
mov
int3
jno
add
lcall
jbe
dec
pop
mov
adc
rorb
arpl
pop
rcll
adc
fs
and
repnz
mov
sub
addl
cld
inc
aas
in
mov
loopne
test
pop
cmp
cmp
xchg
andps
add
or
mov
popa
testb
lret
jno
insb
jbe
push
push
mov
pop
pop
rcl
or
push
push
mov
call
push
xorb
cmpl
cmpsb
add
sbb
xchg
add
push
adc
sbb
test
cmp
mov
push
dec
jne
inc
jecxz
and
je
outsb
jmp
add
mov
add
inc
dec
cli
or
dec
sbb
push
loop
push
pop
mov
shll
cli
sub
or
test
hlt
jo
sub
fstpt
imulb
addr16
and
movsl
hlt
xchg
scas
cli
les
pusha
cmpsb
inc
rolb
popf
pusha
fmull
xor
dec
clc
sbb
adc
and
adc
inc
xor
repnz
mov
push
mov
mov
aaa
fwait
subb
arpl
and
and
or
push
jg
mulb
call
testb
mov
xchg
lods
sub
mov
jne
aad
pop
mov
mov
or
jno
stc
int3
add
xchg
nop
sub
repnz
cmp
aas
int
arpl
cmp
icebp
dec
lret
daa
movb
pop
cmp
add
lahf
call
or
test
cld
in
mov
xorl
adc
pop
jl
xor
enter
mov
mov
xchg
mov
lock
gs
add
popa
repnz
jae
stos
mov
shlb
or
mov
mov
adc
jg
push
mov
ret
loop
jo
adc
add
push
cltd
xchg
sahf
mov
and
mov
das
inc
test
sub
mov
ds
scas
movsl
xchg
bound
ficompl
cmp
test
imul
lahf
arpl
jb
pop
jge
sub
pop
idivb
insb
mov
or
add
mov
adc
ja
out
pusha
and
lret
mov
sbb
jle
jo
xor
cmpsb
sub
pop
or
xor
or
adc
dec
add
pop
dec
xlat
cwtl
shrb
inc
int3
xchg
rolb
and
or
pop
add
adc
adc
dec
sbb
test
testb
xchg
sbb
sbb
dec
stos
xor
adcb
into
pop
cwtl
inc
je
xchg
push
rcl
add
mov
sbb
scas
pop
ret
jl
inc
jg
bound
sbb
shrb
mov
mov
pop
test
add
xor
rclb
push
xchg
cmp
xchg
inc
jo
fdivr
shlb
nop
inc
ret
test
adc
jp
add
mov
dec
pop
loopne
cmc
dec
je
adc
call
sbb
cli
add
xor
int3
adc
out
cmp
xor
mov
mov
imul
subl
push
sbb
mov
hlt
mov
adc
push
or
rorb
enter
daa
out
and
mov
mov
pushaw
add
sbb
enter
movsb
fisttpll
or
data16
dec
aas
xchg
pop
dec
add
cmp
es
adc
mov
adc
lds
and
pop
sub
and
sub
inc
popl
push
cwtl
stos
ret
or
sub
test
jae
dec
mov
cltd
adcb
mov
sbb
adc
mov
pop
lock
sub
sbb
cmpsl
add
and
mov
jae
popf
sti
pop
push
mov
pop
adc
pop
je
jbe
test
cmpb
mov
andl
cmpsb
in
inc
push
push
call
jg
adc
js
mov
iret
shll
out
and
je
mov
cmpsb
sbb
add
leave
ffreep
sub
call
cltd
cwtl
sub
fisubl
aam
jns
add
rcrb
push
xor
mov
cld
ficoms
pusha
pop
in
mov
or
sti
mov
dec
xchg
lods
popa
cltd
or
pusha
mov
xor
sarl
cmc
or
ffree
insb
bound
dec
lods
pop
and
jmp
rolb
adc
adc
js
adcb
pop
pusha
shr
cld
in
adc
add
test
push
inc
xchg
push
mov
xchg
in
add
imul
clc
jnp
add
mov
and
xor
sti
lret
jge
andb
popf
pop
xchg
cmp
or
cmp
adc
pusha
lods
ret
and
and
pop
jg
push
leave
test
int3
lret
loop
mov
cmp
mulb
push
mov
push
jg
inc
sub
sbb
xor
nop
fldcw
mov
fsubrl
test
sub
cmc
imul
testl
mov
pop
push
adc
sbb
push
or
sbb
cwtl
and
adc
mov
add
mov
insb
xchg
outsl
add
xor
jbe
jns
clc
mov
mov
aad
and
dec
inc
or
xlat
rcll
inc
imul
pushf
cmp
mov
lret
out
dec
inc
jmp
clc
or
insb
pop
subb
test
inc
les
or
push
repz
push
bound
fsub
das
test
mov
adc
insb
xor
push
jbe
add
imul
loopne
adc
mov
add
out
jle
push
or
mov
pop
inc
pushf
in
pop
cmp
cmp
mov
sbb
push
or
mov
lahf
xorb
out
shlb
pop
jl
loop
mov
mov
outsb
lock
shl
cmp
lock
push
repnz
data16
fists
outsl
inc
jnp
or
aam
shll
pop
pop
mov
add
ss
cmp
insb
nop
lods
daa
int
jnp
lcall
adc
nop
push
add
adc
int
and
fcompl
dec
pop
pop
add
js
and
int
pushf
adc
add
xor
fmull
fisubl
mov
sarb
mov
cmpsb
add
faddp
cltd
cmc
xchg
lds
inc
loopne
push
dec
xchg
adcl
cli
jle
test
inc
add
mov
dec
pop
inc
push
xor
dec
test
clc
dec
cwtl
frstor
lcall
or
and
jp
fs
lods
and
leave
dec
stos
orb
and
and
iret
add
push
mov
adc
add
adc
gs
sti
and
jnp
or
sub
nop
mov
cmp
addr16
mov
popa
nop
pop
and
sub
add
mov
cmp
xor
loopne
popf
pop
test
test
sub
mov
shl
insl
add
or
jno
adc
mov
shlb
in
pop
js
in
add
hlt
test
imul
dec
mov
mov
pop
push
pop
mov
sub
fmull
shlb
mov
xor
add
cmp
inc
subl
push
jb
xlat
add
push
ficoms
out
sub
inc
mov
and
andb
into
inc
add
sti
add
inc
into
fadds
loopne
adc
cwtl
mov
fwait
aam
xchg
xor
rolb
daa
push
inc
inc
sbb
sbb
mov
mov
mov
js
or
dec
clc
lock
hlt
adc
lret
jb
push
mov
mov
pop
mov
mov
add
inc
scas
loopne
push
fisubrs
pop
lea
add
push
xchg
push
and
in
cmp
movsl
out
jecxz
cwtl
pop
push
inc
mov
popa
jo
js
jns
xchg
nop
add
and
cmpsb
push
shlb
loopne
lret
pushf
adc
add
sub
push
mov
xor
lds
mov
pop
mov
stc
pop
mov
clc
mov
dec
stos
xchg
dec
nop
pop
jno
adc
sbb
add
loopne
push
lcall
add
out
lret
inc
mov
push
pop
adc
add
test
cmp
push
add
lret
dec
add
sbb
xchg
insl
jns
add
arpl
aas
sub
add
push
mov
lahf
add
sub
ss
loope
mov
stc
xor
dec
xor
mov
rcr
add
in
adc
testl
shrb
inc
sbbl
jbe
shr
sub
add
jp
cmp
stos
jbe
push
add
out
mov
xchg
add
fwait
imul
fmuls
dec
insb
scas
test
dec
pusha
or
mov
xchg
popf
incb
mov
std
sbb
ficoms
cltd
ljmp
xchg
test
fsubrl
xor
add
outsb
dec
push
adc
mov
dec
pop
mov
pop
add
int3
cmp
out
xor
push
adc
or
mov
test
jne
fs
dec
mov
or
jmp
add
and
loope
stc
mov
sub
cmpb
fs
inc
hlt
dec
xchg
push
scas
je
lods
orl
push
loop
ja
into
jbe
ja
or
dec
sub
test
xor
mov
or
iret
stos
insl
jo
add
pop
mulb
cmp
pop
mov
lret
mov
in
adc
and
mov
pusha
xchg
insb
pusha
and
or
addr16
dec
andl
jmp
cmpsb
aas
ja
adc
mov
or
jmp
cltd
add
enter
mov
push
into
orl
sbb
cmpsl
xchg
inc
inc
es
fwait
sub
jmp
mov
test
mov
jmp
movsb
inc
xlat
mov
into
fwait
in
ja
push
pop
loopne
pop
sbbl
xor
mov
rolb
push
xor
sub
push
sti
dec
push
in
repz
inc
sbb
jl
add
sub
dec
nop
push
ss
inc
mov
sbb
movsl
jl
mov
push
push
jnp
push
sbb
add
popa
pop
jle
xchg
arpl
cltd
inc
loopne
pop
bound
add
ficomps
les
jle
punpckhdq
add
or
test
mov
mov
repnz
ds
pusha
mov
adc
mov
dec
add
mov
jle
sub
pop
sbb
cli
js
mov
and
inc
push
aad
fildl
cli
sub
mov
sbb
xchg
push
pop
shrb
jae
dec
xor
jmp
inc
int3
popa
test
pusha
es
imul
jo
add
xor
hlt
pop
jl
xor
sbb
xchg
jp
add
cld
inc
xor
cwtl
iret
lods
imul
xor
add
das
push
pop
adc
dec
repnz
add
imul
rcrb
sub
sbb
mov
adc
push
aaa
pop
lcall
insb
cmc
jb
sahf
sbb
imul
sbb
lods
stc
xchg
mov
jnp
in
xchg
inc
dec
or
repnz
xor
adc
pop
xchg
mov
nop
xor
mov
xor
aad
xchg
jno
cmp
jg
pop
mov
lea
arpl
insl
push
cli
movl
jae
mov
std
repnz
inc
in
repz
or
dec
lock
pop
pop
clc
push
sbb
jne
mov
stos
dec
imul
mov
add
insb
fadds
in
mov
je
int3
add
test
outsb
xchg
cmp
lret
sbb
sar
inc
incb
mov
dec
inc
repnz
cmp
imul
sub
or
rorl
adc
add
aad
pop
pusha
dec
dec
iret
outsb
add
add
dec
sahf
shll
push
sbb
cmc
sarb
out
or
sbb
inc
lahf
ror
test
add
xchg
push
jb
lcall
mov
add
mov
xchg
push
add
out
jnp
cmc
adc
add
mov
lods
into
popa
pop
jns
int3
xor
push
push
dec
in
faddp
movsb
pop
jge
mov
es
sbb
int3
popa
subl
or
mov
andl
adc
xchg
out
cmp
outsb
adcl
dec
lret
inc
adc
push
fisubl
mov
sbb
adc
and
arpl
sarl
fs
jo
inc
setl
rorb
xchg
mov
pop
push
test
dec
xchg
scas
cmp
mov
sbb
imul
xor
js
push
sbb
insb
stc
mov
addb
dec
inc
cmp
test
rep
lret
mov
sbb
dec
jns
jmp
imul
pop
adc
lret
push
loop
pusha
jb
sti
inc
dec
out
add
mov
lods
enter
lods
pop
xchg
inc
les
xchg
scas
bound
sbb
rclb
jne
imul
pop
add
adc
xor
mov
add
jg
adc
ljmp
xchg
iret
addl
or
push
jne
int3
call
mov
pcmpeqb
orl
notl
or
rorb
cwtl
inc
repnz
sub
mov
add
adc
dec
into
daa
sub
or
in
sbb
jae
aaa
add
mov
aam
lcall
rclb
repz
daa
mov
mov
and
dec
add
xor
sbb
divl
or
mov
cmp
pop
shr
pop
cmc
in
pop
or
enter
loop
mov
add
iret
mov
or
das
mov
xorb
movsl
fdivrl
std
adc
scas
adc
stos
les
add
jecxz
sub
addr16
or
repnz
mov
sti
imul
subb
or
dec
icebp
push
int3
pusha
mov
dec
pop
mov
pop
add
inc
sub
int
cwtl
sar
mov
clc
rcrl
sbb
xchg
stc
xchg
add
lods
inc
sub
sub
pop
iret
sub
ficompl
or
add
jle
lea
dec
xlat
int3
sub
orb
outsb
repz
movsb
jne
pop
dec
sbb
dec
mov
dec
clc
adcl
xorb
test
cmp
mov
or
dec
stc
mov
inc
dec
xorb
mov
scas
and
add
cmpsl
dec
scas
out
popf
sti
int
test
sbb
inc
mov
rcrl
pop
or
xchg
mov
dec
mov
xor
cmp
pop
lcall
repz
and
cli
popf
clc
xchg
mov
ret
add
pop
leave
and
push
add
sti
in
das
push
dec
lods
dec
shll
or
sub
add
pushf
divl
sub
add
clc
xor
in
inc
int3
push
adc
push
push
xchg
movsb
mov
xor
js
lea
adc
jne
subl
insl
out
xor
xchg
pop
pusha
cmpsl
pop
int3
sahf
xor
imul
ret
fwait
adc
movsb
int
sbbb
xor
je
adc
mov
adc
and
fisubl
mov
add
std
xor
fwait
ret
fisubrl
addr16
std
adc
inc
sub
add
sbb
jmp
dec
orb
xchg
je
jecxz
cltd
arpl
xchg
std
cmp
mov
outsl
pop
inc
dec
andb
mov
mov
add
jg
xor
jmp
mov
int3
stos
loope
insb
stos
mov
rol
orb
or
andl
lea
inc
adc
pop
adc
pop
stc
in
dec
add
add
cmpb
jg
add
sbb
push
or
sbb
lods
leave
test
xor
mov
or
add
push
mov
pusha
fstpl
dec
mov
enter
and
push
push
sbb
mov
je
push
lods
jge
add
into
jae
bound
mov
add
lahf
adc
mov
js
add
sbb
cs
xchg
xchg
enter
out
xor
mov
outsb
cmc
and
sahf
movsb
or
jge
mov
xor
add
mov
lods
loope
mov
cld
repnz
mov
iret
add
call
add
cmp
xchg
mov
es
testb
add
stos
dec
loop
cmp
cli
add
outsb
ret
pop
sub
inc
imul
int3
insb
mov
loop
xorb
lods
into
xchg
cmp
add
jae
js
or
pop
pop
cmp
pop
mov
repz
fsubr
int
xor
and
gs
mov
xlat
sub
pop
xchg
adc
xor
sub
pushf
dec
mov
pusha
call
xchg
clc
cmpsl
mov
pop
jb
add
inc
test
pop
mov
pop
xchg
enter
xlat
cmp
pop
cltd
loopne
leave
push
add
scas
sahf
iret
adc
xor
dec
cmp
int3
clc
push
dec
cmpsb
fs
xchg
sbb
mov
mov
es
or
je
or
cwtl
cmp
push
add
test
push
or
imul
repnz
insb
mov
and
les
mov
imul
dec
cs
pop
mov
pop
sbb
sub
and
insb
adc
test
repz
movsb
icebp
mov
sahf
add
push
add
jno
ret
cmp
sub
dec
and
iret
jae
aas
xor
xor
pop
cmp
mov
orb
je
das
pop
loop
xchg
inc
xchg
lcall
leave
dec
add
and
cli
mov
out
pop
cmpsl
lods
nop
dec
sub
sub
lret
in
push
xchg
cmp
xlat
cmp
add
mov
cmpb
sub
int3
adc
inc
or
movsb
inc
imul
incl
lock
add
ja
lds
mov
pusha
mov
ret
aaa
mov
xor
xchg
sti
sbb
cs
hlt
push
scas
ret
adc
mov
sbb
in
rcrb
in
adc
sbb
add
mov
jo
addr16
lock
cli
inc
cwtl
mov
or
mov
sub
pusha
in
popf
mov
add
les
jmp
xor
clc
sub
daa
dec
addr16
dec
in
shrb
sub
jbe
sahf
test
insl
and
repnz
pop
inc
xchg
and
subb
cmp
lret
xchg
and
pushf
jmp
mov
cli
mov
cld
lods
dec
mov
dec
repz
add
outsl
add
mov
and
push
repz
add
lahf
mov
mov
testl
enter
out
jbe
add
dec
push
das
mov
dec
cld
dec
mov
je
sbbl
in
add
ficoml
add
leave
sbb
dec
push
and
or
push
testl
sub
xchg
call
outsl
push
shrb
mov
call
dec
lcall
int3
dec
mov
sub
add
xchg
lea
rcrb
es
push
add
outsl
iret
mov
in
add
mov
test
sbb
pushf
push
bnd
xchg
inc
enter
sbb
cli
cmpsb
pop
mov
add
jecxz
adc
jno
inc
ljmp
sbb
pop
adc
and
adc
iret
mov
shlb
lods
cld
xor
sub
xchg
xchg
dec
sahf
adc
clc
repz
pushf
xchg
xchg
fstpl
repnz
loopne
sbb
ret
movsl
nop
mov
push
add
mov
scas
cmp
addr16
es
pop
pusha
leave
lret
add
xor
adc
mov
mov
dec
mov
pop
sub
add
pop
lahf
arpl
dec
sbb
enter
lock
add
sbb
insb
div
addr16
add
out
inc
pusha
pop
test
add
and
loope
dec
mov
xchg
pusha
add
loopne
xor
rolb
sti
arpl
mov
jnp
les
pop
dec
jo
cli
aam
mov
les
call
into
subb
push
cmp
jl
add
test
iret
sbb
fs
sahf
fs
sub
psrld
xor
push
loope
dec
data16
lar
cmpsb
xchg
sbb
inc
mov
adc
pushf
xor
lret
and
out
in
mov
jb
add
sub
mov
jb
mov
add
jl
xor
jmp
popa
sub
imul
test
arpl
sbb
jp
pop
xor
popa
in
jae
mov
add
es
mov
cmpsb
int3
stc
cld
and
add
dec
sub
xchg
stos
loope
sub
mov
cmp
sbb
ja
leave
mov
jnp
sbb
inc
push
out
sbb
sbb
iret
jb
push
jle
add
jmp
xchg
push
sub
sbbb
or
flds
insb
dec
adc
lods
stc
cmp
jecxz
add
pop
test
icebp
repz
mov
xchg
outsb
out
and
adc
adc
dec
dec
and
dec
add
test
je
add
jecxz
mov
xchg
jb
dec
cmp
and
pop
push
test
hlt
and
add
sbb
pusha
mov
inc
mov
pop
hlt
jg
test
push
leave
or
out
sub
xchg
or
push
mov
cmp
lea
sbbb
idivb
and
rolb
dec
rol
xor
sbbl
dec
sbb
jns
mov
mov
addl
pop
loopne
jecxz
dec
jb
xor
data16
mov
dec
and
and
xor
ss
push
and
mov
cmpb
xchg
stc
add
adc
xchg
nop
movsb
dec
push
or
pop
cmpsb
sbb
imul
mov
add
push
and
or
enter
movl
aaa
mov
int3
cmp
in
cmp
sub
and
out
stos
dec
rol
call
inc
mov
hlt
paddsw
or
je
add
push
loope
out
dec
add
mov
stos
in
xor
mov
xchg
je
xor
rcll
cmpsl
and
and
xchg
sub
pop
repz
bound
stc
in
push
inc
out
aad
dec
adc
lret
add
mov
fwait
rcl
mov
pusha
jno
cmp
enter
cmp
popa
pop
imul
out
dec
out
test
movsl
or
pop
data16
add
test
mov
movsl
add
dec
or
jne
rcrb
inc
push
ret
incb
xchg
fidivl
push
pop
or
mov
fsubr
push
mov
bound
insl
fiaddl
addb
adcb
filds
pop
or
mov
add
repnz
jecxz
push
mov
add
ficoms
dec
pusha
jmp
mov
enter
int3
cmp
mov
iret
pusha
push
adc
add
dec
repz
adc
xor
adc
inc
sub
jne
sbb
xchg
sbb
fdiv
test
cmpl
enter
pop
and
scas
mov
or
andb
add
push
fcoml
lock
pop
sbbb
cwtl
sub
lods
add
pop
mov
imul
in
dec
call
xlat
inc
insb
add
inc
xor
pop
sarb
arpl
mul
out
mov
lods
lods
stc
jp
jmp
add
fistpl
rcrb
mov
mov
add
mov
push
sbb
sti
mov
cltd
sbb
jl
fs
mov
aam
inc
push
mov
gs
push
sub
sbbb
fcoms
movb
cmc
pop
je
add
lods
lcall
ds
add
or
xchg
and
xchg
jnp
notl
add
and
mov
out
push
addb
adc
hlt
add
mov
loopne
and
ret
sbb
stos
add
fimull
jae
shrb
leave
add
inc
cmpl
sti
lcall
adcb
call
add
ja
push
pop
xor
and
outsb
popl
rcr
dec
mov
sbb
nop
pop
cmp
mov
loopne
or
rclb
pop
xchg
addl
push
cmp
loop
scas
and
inc
std
notb
sub
mov
pop
divl
dec
mov
cli
cmp
repnz
cld
lcall
inc
sbb
es
lcall
nop
rcrl
pop
or
inc
jecxz
adc
je
dec
into
add
push
movsb
sbb
add
mov
xor
adc
push
and
stos
popa
leave
cmp
sbb
mov
cmc
mov
mov
add
mov
add
mov
imul
jmp
loope
or
into
pushf
add
adc
xchg
pop
mov
add
fcoms
jnp
popa
f2xm1
mov
add
popf
mov
mov
inc
or
xlat
lcall
fdiv
mov
xor
jne
out
cmp
and
add
mov
inc
jl
sbb
mov
jge
pusha
pop
sbb
lds
mov
je
add
ret
les
pusha
sti
out
push
pushf
add
inc
test
cwtl
rolb
jnp
cmp
add
xchg
add
adc
pop
cld
mov
jbe
sub
in
fimull
cld
sbb
js
hlt
stos
je
adc
cmp
popf
inc
ror
adc
lds
gs
cld
and
imul
and
mov
xor
mov
mov
inc
mov
call
std
push
cmp
add
add
lret
sar
call
and
cmc
jns
lock
xchg
sbb
test
ficoms
pop
or
adc
pusha
xor
inc
push
cmp
sub
sbb
pop
xor
lods
aam
shlb
aad
les
xor
add
lahf
cwtl
cmp
fiaddl
decl
xor
imul
pop
mov
or
xchg
mov
lods
test
in
lcall
out
and
cld
leave
add
add
cmp
xor
adc
stos
cmp
cmp
pop
and
insl
nop
mov
andb
jmp
imul
je
and
mov
cmp
pop
adc
rolb
sbb
rolb
paddsb
mov
pop
lods
and
loopne
add
inc
les
mov
push
out
mov
dec
in
mov
in
adc
xor
sub
pop
or
imul
test
mov
push
inc
adc
mov
nop
cmp
sub
xor
cmpsl
or
loop
lods
shr
aas
fsts
call
cmpb
jnp
ret
adc
or
add
pop
xchg
test
stos
mov
dec
inc
cld
and
sbb
adcb
leave
jbe
clc
addl
adc
hlt
nop
xor
adc
adc
xchg
adc
insb
or
or
dec
hlt
xor
pushf
lcall
hlt
add
xor
cmp
mov
sub
add
sarl
xchg
ret
loope
inc
mov
mov
std
jbe
or
jo,pt
je
shlb
push
js
sbb
les
sub
sub
xor
push
mov
mov
and
aam
movsb
cld
data16
aam
sub
cmpsl
mov
and
ret
cli
push
pop
push
adc
roll
mov
cwtl
and
mov
out
sub
inc
add
ss
add
jecxz
sbb
stc
xchg
jbe
addl
adc
jg
and
nop
inc
add
xchg
enter
cmp
ret
je
pusha
cmc
mov
loopne
imul
pop
dec
repnz
or
lock
aaa
clc
call
ljmp
pusha
data16
xlat
call
push
arpl
pop
mov
loopne
insb
in
or
jo
mov
cld
call
add
mov
pop
cli
or
cmpsb
xchg
movsb
and
gs
div
push
add
lret
xor
ds
sbb
push
popa
div
jmp
add
add
popf
jae
add
mov
jmp
xchg
mov
pop
pusha
jle
lods
sbb
mov
repnz
add
and
mov
scas
push
movsl
pusha
pop
add
lret
xchg
push
dec
add
arpl
les
and
xor
push
push
add
inc
xlat
cmc
ret
add
mov
jb
adc
or
rol
fcmovu
js
cmp
push
add
pop
mov
popa
or
and
or
inc
popf
adc
push
xorl
orb
or
das
addb
call
sub
cmp
sbb
addr16
xchg
test
popa
data16
shll
push
jmp
pop
out
mov
jnp
push
pusha
jmp
dec
ret
or
lods
push
mov
mov
insl
mov
orl
jg
cmc
popa
mov
inc
pop
or
sbb
fiadds
mov
daa
stos
inc
jo
xor
pushf
rorb
cld
mov
jmp
add
inc
sub
fildll
ds
add
mov
mov
mov
sub
xchg
dec
adc
popa
or
adc
dec
fsubr
lret
add
cmc
jge
pminsw
test
add
xor
test
jecxz
add
daa
loop
nop
sar
movd
mov
or
dec
push
mov
push
lea
in
popa
and
pop
clc
push
fwait
push
imul
pop
inc
jae
lret
adc
stc
lea
sbb
adc
push
jbe
roll
hlt
fwait
cmp
cld
push
jg
or
adc
test
jo
shrb
lock
add
add
orl
lods
movsb
mov
jae
dec
adc
rcll
adc
and
push
or
lcall
add
stc
add
jo
fcomps
out
add
movl
lds
popf
rolb
orl
add
lods
or
addl
push
push
sub
enter
fstl
loope
cmp
add
inc
add
jp
cmp
cld
xchg
mov
das
rorb
push
push
call
pop
ret
inc
mov
subl
push
ret
sbb
test
and
gs
push
mov
pop
ret
adc
inc
push
ret
sbb
out
adc
jmp
and
mov
mov
fwait
inc
or
test
add
or
adc
mov
xchg
jge
addb
addr16
xor
adcb
in
dec
push
add
hlt
stos
fadds
push
ja
sbb
stc
out
add
adc
js
push
push
adc
js
ret
pcmpeqw
jmp
mov
and
xchg
or
out
cmp
call
cmp
movl
mov
flds
dec
jecxz
adc
clc
and
insb
jge
pop
cwtl
cmp
xchg
xor
jb
rcl
in
and
iret
repnz
stc
jle
mov
pop
int
adc
sarb
adc
push
aam
stos
mov
aad
es
mov
add
mov
xchg
fld1
rcrl
mov
adc
xorl
pop
adc
in
sub
iret
inc
mov
cmc
xchg
mov
jg
add
or
out
sti
mov
add
sbb
mov
jmp
push
sub
daa
xchg
or
shlb
inc
popl
dec
test
fistpll
sbb
jne
add
and
add
add
push
je
add
bswap
dec
insl
sbb
test
clc
add
mov
adc
jb
outsb
sbbb
add
mov
cmp
xchg
inc
mov
nop
stos
mov
arpl
std
add
or
shlb
mov
lods
push
fistpl
jmp
inc
push
cmp
cwtl
push
sub
nop
pop
add
addl
daa
dec
add
sub
and
lds
fnstcw
mov
inc
add
lods
arpl
inc
and
dec
int3
pop
out
add
mov
pop
add
and
xlat
arpl
xor
gs
jae
push
pop
mov
add
xchg
xor
mov
outsb
cmp
inc
mov
xor
push
mov
xor
and
pop
scas
jne
sbb
mov
add
inc
clc
std
lret
fiaddl
jne
and
adc
add
sub
add
imul
fcomp
or
faddp
push
pop
out
sbb
pop
add
jbe
rcll
nop
insb
add
test
outsl
cmp
dec
mov
jp
cmc
sbbb
add
imul
mov
mov
pop
add
or
sbb
stc
mov
rcll
cmp
add
out
orb
pusha
clc
pop
sbb
push
add
movsl
xor
repnz
rcr
nop
add
int
xchg
das
aad
xor
stc
xchg
bound
xor
pop
hlt
ret
add
mov
aaa
lret
test
mov
addb
pop
sbb
xor
jmp
add
lods
iret
or
push
gs
scas
push
test
xchg
sbb
fsubs
das
arpl
cmp
cwtl
arpl
pop
mov
test
sub
add
xchg
push
leave
mov
dec
mov
add
frstor
scas
hlt
aaa
and
outsb
imul
je
dec
or
mov
push
mov
mov
sbb
push
dec
repnz
mov
add
cmc
mov
cld
and
sbb
mov
lock
add
xchg
xor
mov
mov
push
outsb
add
cmp
dec
mov
in
bnd
in
sti
mov
push
pop
cwtl
sbb
mov
testl
jno
popa
push
pop
addr16
push
out
adc
repz
roll
pop
sahf
stos
std
mov
adc
cltd
jecxz
in
xor
jnp
cmp
push
adc
mov
sahf
rcl
mov
xchg
jb
and
rolb
push
push
out
icebp
push
mov
add
xor
add
cmpsl
mov
out
ftst
mov
popa
adc
das
push
sub
sub
lds
adc
cli
jl
fnclex
mov
xor
in
and
enter
cmpsl
add
push
fisubrl
adc
or
cmc
lret
test
add
roll
ja
stos
test
sbb
cmpps
cmp
icebp
addb
add
je
daa
and
pop
dec
pusha
adc
jbe,pn
sbb
fdiv
cmp
inc
xor
sbb
pop
test
in
jno
mov
fcomps
add
sbb
clc
aad
add
out
adc
push
loopne
sub
gs
dec
test
inc
cmp
pop
mov
mov
cwtl
push
push
out
sub
and
jnp
cli
call
fisttpll
mulps
sbb
add
xor
add
std
sbbb
cmp
xor
ljmp
mov
push
sub
rol
push
and
add
lock
add
cmp
outsb
mov
dec
add
test
aaa
or
js
xchg
fnstcw
les
xor
mov
sbb
testb
enter
add
pushf
inc
movsl
rcr
lcall
cld
sbb
cmp
addb
inc
call
loopne
shrl
out
pushf
add
xchg
jmp
add
mov
fstpt
dec
add
sbb
mov
pop
cld
mov
add
fwait
and
ss
jns
add
pop
inc
xchg
xor
xor
rorb
pop
add
gs
mov
sbb
andb
incl
mov
pop
add
xor
mov
lds
mov
pop
sbb
cmpsb
in
popf
and
test
lret
loopne
mov
push
rcr
or
cmp
mov
cld
mov
pop
outsb
adc
and
gs
jg
in
nop
add
xchg
xchg
cmp
clc
mov
jg
mov
in
sub
pusha
cmp
pop
push
addb
stos
out
mov
jle
add
inc
cmp
add
sbb
mov
push
add
out
fs
les
add
rcrl
jns
cvtpi2ps
in
std
jne
lret
repnz
sti
and
xor
pop
ret
cmc
in
jbe
cld
flds
imul
add
inc
push
dec
push
jge
jns
add
popf
push
enter
lret
cwtl
sti
mov
sbb
loopne
mov
jo
outsl
jae
lods
lahf
cmp
pop
fdivl
lret
popf
clc
imul
in
sbbb
in
add
cmp
sbb
mov
negb
add
movsb
ficoms
add
pop
test
leave
addr16
lret
stos
push
insl
jmp
add
mov
lock
mov
add
xchg
add
shll
fadds
aad
jp
inc
mov
sub
insb
xchg
and
xor
dec
cmpb
and
fwait
xor
stc
mov
mov
and
adc
addr16
xchg
add
inc
pop
jns
pop
cmp
add
sbb
dec
add
lds
or
add
imul
rorb
inc
sti
hlt
mov
call
inc
add
mov
je
jge
aam
inc
rcrb
jno
loop
jnp
in
jl
repz
rcll
nop
push
je
and
movsb
add
lahf
outsb
mov
dec
out
cs
cltd
movsl
and
fs
lock
xchg
ds
pop
push
and
add
push
inc
cltd
mov
fs
xlat
popl
or
mull
inc
cmp
pop
hlt
lods
roll
pop
dec
cltd
inc
sbb
inc
mov
lds
jp
adc
inc
test
popa
cmpsl
mov
and
fisubs
outsl
and
sarb
and
pop
pushf
add
inc
ja
andb
xor
loope
mov
add
mull
xchg
pop
add
and
orb
testl
sbb
lcall
jecxz
lahf
test
test
enter
cmp
cld
cmp
popa
lock
mov
or
and
inc
ss
cld
add
cli
loope
aam
sub
sbb
sub
outsl
leave
cmp
add
testl
sub
popf
jno
aaa
sarb
aam
out
mov
push
mov
sarb
loopne
ss
add
xchg
pop
sub
push
cld
into
xor
imul
inc
sbb
adc
aas
rcrb
mov
sub
fcomps
add
sub
lods
dec
insb
fsubrs
jge
or
push
jge
imul
or
lret
cs
push
sub
int
notb
int3
repz
adc
rolb
cmp
mov
inc
inc
jnp
and
xchg
mov
loopne
int
mov
sub
and
push
in
sub
out
test
cmc
mov
add
jo
psubusw
jmp
jecxz
cmc
enter
pop
aaa
xor
addb
sbb
call
xchg
push
push
add
mov
adc
outsl
in
incl
xchg
xor
xor
lock
mov
pop
or
xor
rol
cmp
pop
adc
dec
outsl
out
sbb
sbb
rol
lret
inc
int3
add
or
addr16
dec
dec
dec
mov
cwtl
bound
int3
jmp
cmpb
pop
mov
test
add
addl
xor
out
mov
out
mov
mov
and
cmp
mov
out
rcl
xor
cmp
add
push
xor
das
es
js
push
ds
adc
cmp
lret
and
sahf
push
call
push
sub
and
xchg
xor
push
add
mov
cmpsb
or
mov
pop
pop
andl
push
push
adc
jbe
xor
cld
lret
add
xchg
std
jmp
add
pop
cs
repz
icebp
xor
and
ljmp
scas
cmpb
inc
mov
mov
pusha
scas
add
dec
fwait
cmp
push
pop
ret
mov
adc
mov
repz
stc
insl
pusha
ds
push
sbb
mov
repnz
add
sbb
insb
test
movl
insl
daa
push
add
dec
lcall
fnsave
cmp
pop
adc
outsb
nop
es
push
lret
out
mov
or
pusha
xchg
lcall
mov
add
dec
mov
pop
sub
xchg
in
popf
pushf
orl
stos
fadds
jmp
xor
bound
in
add
pusha
jo
scas
in
cli
loopne
add
sub
add
mov
sub
jns
jg
leave
mov
or
add
pop
sbb
in
andb
push
inc
add
inc
jecxz
popa
fisttpl
sahf
std
cmp
or
ss
pop
fistl
inc
mov
lea
xlat
nop
xor
cmp
jg
enter
in
call
popf
outsb
dec
mov
add
jge
add
notb
pop
or
cmp
mov
mov
xor
pushf
jmp
fdivrs
jmp
add
push
sub
femms
adc
andb
xor
mov
add
jo
repz
mov
cmc
fstp
sbb
and
fcoml
sub
sub
test
push
iret
inc
cltd
pusha
hlt
add
pushf
out
xchg
daa
mov
cmove
push
fldl
nop
out
add
sub
fisubs
xchg
sbbb
int3
pop
add
xchg
out
mov
or
push
add
mov
sbb
popa
push
jae
jge
inc
mov
xchg
ret
xchg
aam
roll
dec
and
pusha
mov
lahf
sarb
jae
add
or
mov
add
mov
mov
fidivl
jmp
add
sub
mov
jp
add
jbe
out
xor
dec
int
rorl
gs
mov
inc
loopne
in
or
pop
je
add
mov
xor
lock
mov
je
mov
insb
bound
and
out
arpl
andb
lret
or
orb
ja
sti
add
sub
mov
loopne
insl
pusha
xor
and
add
inc
rolb
jg
les
push
jne
in
add
sarb
adc
inc
pop
fsubrs
inc
js
xor
jns
inc
mov
fwait
add
les
inc
in
sbb
add
movsl
and
hlt
maxps
inc
in
inc
jmp
add
loopne
xorl
xchg
rcrl
or
cli
adc
std
xchg
xchg
add
test
aas
jne
add
fwait
mov
push
mov
mov
mov
pusha
cmp
push
cmc
roll
repz
or
jge
shlb
xor
mov
rcrb
popl
mov
aas
mov
cmp
and
jns
shll
or
repnz
incb
inc
xor
cmp
mov
pop
and
icebp
test
xor
jbe
insl
test
call
insb
stc
lret
xor
add
add
jp
xchg
add
cmpsb
sbb
add
iret
fisubrs
push
push
in
fnsave
pusha
pop
push
rolb
add
hlt
dec
addr16
clc
push
repnz
pusha
lds
dec
stc
scas
sbb
fadd
jg
cli
ret
into
xor
clc
mov
inc
jmp
aad
push
mov
adc
scas
add
xor
cld
inc
sub
xchg
imul
sbb
add
mov
adc
fldcw
orb
sub
pop
bound
mov
call
subb
ljmp
data16
push
cmc
cwtl
or
and
add
xchg
sub
shlb
mov
mov
sbb
mov
imul
jo
jl
lcall
add
mov
sub
or
mov
push
rcrb
movsl
nop
add
pop
dec
jp
xchg
or
jmp
lea
jge
insb
dec
dec
pop
inc
inc
lret
adc
sbb
mov
lods
adc
jae
andb
imul
test
adc
shl
ljmp
stc
sbb
add
dec
addr16
incl
add
std
xchg
rol
xor
xor
push
pop
inc
inc
lret
xchg
fwait
inc
test
mov
ljmp
mov
loopne
test
mov
dec
fidivl
dec
jmp
sub
mov
scas
cmpsl
je
pop
shlb
sub
and
mov
mov
clc
sbb
add
mov
inc
pusha
mull
sub
ljmp
and
scas
flds
add
xchg
mov
mov
pop
notb
cltd
test
hlt
pusha
cwtl
mov
cli
test
sbb
mov
add
sub
ret
popa
fstl
mov
fsubl
mov
loop
jp
xor
test
mov
mov
add
ds
popf
add
aaa
sub
lods
and
add
mov
popf
nop
push
jno
push
xchg
mov
add
push
xlat
jae
ja
xorb
and
xor
dec
test
inc
add
outsl
mov
and
icebp
sub
pop
push
fisubrs
shrl
shlb
imulb
xchg
mov
push
loopne
out
flds
push
jo
adc
ror
or
fldl
cmp
mov
mov
and
add
xchg
pop
pop
aaa
xchg
add
xor
xor
std
stc
xchg
popa
jp
dec
ljmp
cs
ljmp
mov
aas
and
add
xor
or
popa
add
loope
sub
maskmovq
jnp
mov
pop
add
rcl
jl
movsb
fwait
scas
repnz
add
mov
push
cmp
in
outsb
int
andb
xchg
mov
in
and
ret
int3
int
jb
add
mov
clc
lahf
mov
mov
lea
pop
je
cmp
int3
andl
lods
inc
jg
cs
pop
orb
push
jne
xchg
pop
dec
add
imul
das
dec
in
add
loope
aam
in
loop
adc
fimuls
add
push
and
mov
cmpb
add
sub
xchg
shrl
push
sbb
es
mov
loopne
imulb
pop
cmpsb
in
shrd
pop
sub
push
push
es
sahf
add
insl
imull
lods
int3
and
mov
sbb
cmpl
and
xchg
jge
pop
sbb
cwtl
aas
jns
les
inc
hlt
shlb
add
dec
push
and
ds
andb
addb
push
test
repz
out
int
sbb
jg
or
adc
pop
test
add
push
leave
sub
xchg
inc
mov
mov
sub
clc
lods
add
inc
testl
add
lahf
ljmp
jecxz
mov
push
imul
mov
mov
jmp
sbb
sbb
pop
clc
bound
scas
cld
hlt
aas
call
xor
mov
dec
insb
insl
mov
ltr
arpl
int3
adc
jo
pop
mov
push
jmp
add
cmp
fnstsw
jp
cmpb
push
mov
lock
push
test
jae
add
lds
mov
out
pushf
cmp
adc
add
lods
mov
add
xchg
in
stos
inc
mov
in
je
in
push
add
jle
hlt
adc
add
xlat
shrl
pushf
xchg
xchg
sub
add
outsl
pop
cmp
pusha
testb
add
inc
gs
or
lods
movq
faddl
fistl
aas
lret
cmp
jp
mov
xor
mov
xchg
add
inc
popf
test
sub
icebp
fs
fldcw
jmp
call
and
mov
mov
cmpsb
add
jbe
pop
movsb
or
cld
or
addr16
or
idivb
adc
push
inc
pop
ror
dec
cmc
clc
je
add
loopne
call
dec
arpl
ud2
inc
popf
pusha
in
repnz
iret
std
jecxz
xchg
sbb
or
hlt
mov
jmp
mov
mov
inc
call
pop
shrl
lods
repnz
bound
mov
add
mov
mov
out
mov
ljmp
aas
sub
dec
out
pusha
mov
addb
and
loope
push
pop
or
cs
ljmp
aam
lods
jbe
rclb
outsl
add
in
js
mov
ja
inc
mov
mov
xor
insl
test
mov
xor
sub
cli
sbb
rolb
cmp
xchg
lock
ljmp
mov
fcmovnb
gs
sarl
xor
aad
int3
lahf
xlat
movl
enter
fs
shlb
out
call
cmc
push
add
or
pop
sbb
imul
or
lcall
iret
cmp
ret
add
je
les
mov
test
jno
rcrb
notb
movsl
fmul
into
ret
adc
jmp
pop
adc
add
cwtl
sahf
mov
jbe
popf
shlb
int
sbb
add
sbb
xlat
lods
xor
mov
xchg
cmp
jne
mov
add
jmp
sub
add
js
test
cmp
dec
add
xchg
cmc
pop
das
push
adc
add
push
push
jecxz
add
sbb
outsb
outsl
scas
inc
xor
pop
pop
lods
ss
insl
and
dec
fidivl
aas
sbb
mov
repnz
jno
pop
add
mov
mov
mov
add
jg
mov
call
mov
mov
arpl
push
add
outsb
pop
jle
xchg
jnp
xor
pusha
adc
add
into
test
in
icebp
loopne
fldt
xor
aam
inc
hlt
or
rclb
adc
in
pushf
push
and
out
add
addr16
jl
sahf
in
jns
pause
pushf
add
or
fs
mov
mov
test
aam
jae
jns
cwtl
mov
dec
xchg
cld
cmp
add
xor
adc
adc
testb
push
insl
jg
or
mov
cmpb
add
subb
sbb
mov
shl
fcoml
cltd
add
adc
mov
add
aad
lods
fstp
loopne
rorl
scas
add
enter
jns
mov
push
inc
adcl
sbb
add
jle
pop
or
pushf
push
add
pop
adc
xchg
pusha
adcl
add
fiaddl
cmpsl
or
jle
add
mov
pop
xchg
lock
bound
cmc
aad
gs
nop
popa
dec
roll
enter
jno
pusha
enter
mov
in
xlat
lds
and
inc
loopne
pop
mov
imul
sub
int3
xchg
push
or
data16
loope
aaa
add
test
mov
push
add
rcrb
cmpsl
sub
pusha
jg
add
leave
shr
iret
ja
adc
jmp
pop
jns
pop
inc
push
loope
outsl
or
inc
cwtl
add
push
lcall
pusha
addl
sti
mov
or
mov
dec
movsb
cld
and
insb
shlb
pop
shl
leave
mov
jmp
mov
inc
cmp
cmpsl
xchg
or
adcl
cmp
add
shll
mov
insb
dec
mov
mov
mov
pop
add
gs
shll
add
xor
push
cmpsl
push
jecxz
jne
aaa
in
mov
dec
and
xlat
int3
add
pop
nop
insb
add
pusha
loopne
sbb
and
lcall
pop
xchg
inc
lahf
dec
cmp
add
sub
pop
shlb
repnz
lock
js
add
data16
shrl
lret
jecxz
je
cmp
mov
push
jb
xor
add
adc
fst
add
mov
sbb
dec
jnp
pop
sub
sar
dec
dec
add
loop
fisttpll
mov
inc
nop
ja
xor
mov
shl
xor
movsb
pushf
subb
add
pop
jo
ss
add
sbbb
std
out
imul
xchg
fistps
push
call
add
popf
test
jnp
add
pop
push
std
mov
add
pop
addr16
loope
sbb
pop
outsb
pop
inc
add
imul
push
push
fcomps
test
fcoml
mov
xor
xchg
fdivrs
mov
and
aas
les
mov
add
dec
jo
and
add
cmp
mov
fstpl
cmp
outsb
faddl
push
mov
lods
lret
add
inc
js
add
push
les
jecxz
rolb
arpl
lahf
hlt
mov
add
mov
inc
add
mov
pop
inc
pusha
jne
ljmp
jge
je
add
sarb
testl
or
gs
icebp
add
int3
pusha
insb
sub
pop
cmp
and
mov
dec
mov
xor
loopne
cmp
adc
sbb
aaa
push
pop
dec
mov
inc
or
jecxz
clc
enter
sub
sub
stc
add
sub
add
xor
sbb
ret
dec
orl
mov
dec
enter
xor
adc
cmp
xchg
subb
cmp
leave
les
mov
add
shl
mov
xchg
shlb
push
mov
add
or
xlat
jmp
rcrb
cmpl
xchg
call
adc
out
or
cmp
imul
mov
aaa
mov
and
fwait
jno
vpmuludq
loopne
mov
mov
incb
xor
push
and
aaa
insb
je
test
add
out
popa
addr16
xor
xlat
mov
fs
mov
cld
fstl
sub
loopne
push
ja
or
lea
inc
idivl
ret
xchg
pop
xchg
js
dec
and
fidivrs
cmc
jb
mov
jbe
neg
sbb
mov
repz
pcmpgtw
mov
loopne
imul
cmp
call
mov
enter
lods
jbe
sub
sub
add
shr
add
jne
fsubrs
sub
adc
stos
add
mov
add
test
push
add
jge
add
lahf
aas
in
es
into
popa
and
push
add
mov
jns
adc
daa
sti
add
shl
sub
call
movsb
arpl
cmp
adc
cmpsl
jg
add
imul
pop
add
icebp
mov
hlt
ret
cli
adc
mov
add
sbb
push
inc
jmp
fnsave
insl
out
dec
cmpb
push
push
mov
pusha
cld
sub
icebp
adc
add
mov
inc
pop
aaa
inc
add
inc
enter
test
enter
add
inc
ficomps
leave
daa
push
add
jo
sbb
je
adc
sbb
add
dec
sub
dec
repnz
rorb
add
push
adc
popl
or
mov
mov
sbb
outsb
xlat
mov
mov
in
mov
fsubl
nop
jecxz
xchg
daa
in
jmp
int
bound
pop
shr
push
cmp
sbbb
jl
addl
fdivrs
xor
inc
cld
mov
or
in
xchg
jge
adc
sub
adc
js
aaa
add
xor
enter
push
cmp
adc
nop
sti
pushf
divl
leave
fmull
sub
sbb
cld
lret
inc
mov
inc
and
js
add
cmp
stc
shl
add
shr
mov
mov
loop
aas
and
ss
jl
jae
btr
xlat
mov
xchg
add
xchg
push
mov
hlt
and
mov
insl
dec
mov
and
fucomip
push
leave
shll
sbb
lods
pop
cmp
xchg
xorb
add
jbe
repnz
outsl
and
jno
xor
mov
cld
and
test
add
popa
loope
in
pop
mov
lock
add
push
dec
fnsave
add
jns
int3
clc
or
fisttpl
push
andb
in
mov
adc
mov
call
or
mov
inc
add
nop
addr16
sub
in
mov
or
or
in
jne
xchg
sub
add
push
mov
add
fidivrs
shlb
lcall
sbb
push
mulb
sbb
icebp
cmc
adc
mov
sbb
lret
ja
mov
sbb
xchg
shrl
sbb
lock
pop
lret
fcoms
gs
loope
dec
and
jl
add
jno
test
sbb
ljmp
das
dec
cs
and
lock
cmp
rcrl
mov
cmp
mov
ret
fbld
add
push
jp
sub
aad
outsb
add
push
push
dec
add
sbb
xor
nop
pop
xor
lea
test
mov
add
and
pop
bound
cs
packuswb
mov
popa
sub
cmp
adc
imul
add
cwtl
sbb
bound
xchg
add
pusha
shll
jecxz
or
or
mov
arpl
pop
in
add
add
cpuid
and
sub
xor
in
std
fisttpl
les
test
mov
fnstenv
jne
xchg
fisttps
add
mov
test
inc
pop
fiadds
mov
jo
shlb
or
rorb
add
pop
scas
lret
fstpl
mov
sbb
dec
sub
sub
sub
and
push
add
cmpsl
or
adc
repnz
add
xor
inc
xor
mov
pusha
stos
mov
and
xchg
lret
adc
nop
mov
sbb
inc
js
addb
cltd
and
and
lret
mov
scas
add
out
xchg
jmp
and
mov
inc
cmpb
in
sub
es
dec
filds
cmp
mov
or
lock
sahf
pusha
out
and
hlt
dec
add
ljmp
add
in
icebp
pop
arpl
and
inc
add
and
xchg
test
mov
fcomip
dec
sbb
rclb
aad
mov
sub
fmull
rolb
jmp
sub
nop
or
and
or
pop
fldl
imul
pop
fsubl
xchg
cmp
cmp
sub
gs
movsl
mov
xor
iret
inc
push
sarb
sar
sub
push
cmp
mov
mov
ret
dec
mov
pop
push
add
repnz
xchg
dec
pop
addl
lock
enter
adc
mov
shrb
sub
push
adc
add
and
and
fists
leave
mov
sbb
jno
sti
sub
adc
mov
pop
sbb
cltd
imul
mov
pop
pop
add
inc
cmp
xor
push
aam
dec
repnz
dec
add
mov
mov
lds
xchg
add
cli
mov
jmp
xor
ljmp
push
fimuls
fcoml
andl
stos
sarl
arpl
push
aad
and
adc
mov
sahf
out
cmp
push
int3
or
fcmove
jle
or
nop
add
inc
ss
lcall
in
sub
inc
xor
aas
jmp
inc
or
pop
dec
arpl
jo
imul
push
xor
out
add
lret
inc
add
imulb
lcall
add
mov
jmp
and
xchg
mov
aam
sarb
dec
jg
pop
sbb
push
cmp
add
pop
divb
in
xchg
mov
into
lods
inc
push
aad
sub
lcall
sbb
sti
js
jl
add
mov
inc
mov
dec
cmp
sbb
enter
mov
pop
add
dec
stos
and
cmp
popf
popl
dec
xorb
out
adc
push
jne
cs
dec
jbe
fmull
sbb
or
cbtw
push
fildl
sbb
cmp
lods
mov
imulb
or
mov
ss
pusha
mov
push
cmp
outsl
in
jle
aam
fs
and
adc
lock
insb
mov
add
pop
sbb
cmp
inc
cmpb
fiaddl
lods
cli
jns
xchg
dec
xchg
sub
add
push
mov
pop
pushf
rolb
mov
push
dec
sbb
add
pop
out
sub
adc
iret
mov
int
jl
jns
inc
fwait
lret
cmp
xor
or
sar
scas
dec
pop
cld
push
loope
lret
adcb
test
xlat
mov
mov
es
xor
cmp
dec
lods
and
movsl
add
pop
add
in
pop
add
dec
mov
lock
adc
dec
cli
add
mov
cmpb
jle
clc
mov
sti
add
xchg
adc
icebp
cld
js
add
xor
in
pop
fsts
inc
out
sbb
int3
add
adc
in
in
mov
in
jl
push
sbbb
add
mov
andl
ret
xchg
mov
inc
lds
popf
add
push
push
cld
ret
roll
dec
pop
sbb
and
cmp
int3
hlt
sbb
jmp
dec
and
fisubl
mov
push
push
fbstp
add
int3
add
cs
mov
add
cmp
dec
outsb
pop
jg
jno
and
inc
subl
add
lds
pop
ret
fstpl
xchg
or
cltd
dec
pop
shlb
arpl
mov
movsb
xor
or
dec
das
add
jne
mov
dec
add
imul
pushl
fdivs
cld
out
mov
add
lcall
aaa
sbb
xchg
mov
repz
enter
add
nop
ja
cli
sbb
adc
lock
les
jne
movsb
adc
idivb
sbb
andb
cwtl
mov
add
and
pop
push
divl
mov
sbb
rorl
subb
divl
mov
lret
shll
stos
pusha
pop
push
add
icebp
push
and
fwait
scas
add
lret
xchg
cmp
or
add
jl
inc
rol
scas
push
shlb
fsubl
mov
ja
dec
sub
push
popl
in
sbb
adc
loopne
add
repz
clc
mov
mov
add
ds
jbe
xor
add
xchg
in
dec
mov
test
rcll
sbb
push
into
cmp
insb
out
push
jmp
add
in
mov
cmp
shll
pop
fadds
in
js
sbb
fcomps
xchg
add
mov
dec
add
ret
mov
rclb
xchg
dec
js
or
test
popa
movsl
add
insb
clc
sbb
adc
pcmpgtb
and
jg
hlt
push
cmp
sbb
or
out
mov
mov
jmp
aaa
out
pop
inc
add
jge
jp
cltd
jne
mov
hlt
test
dec
mov
push
adc
lcall
lret
sub
rol
mov
inc
arpl
mov
xchg
sahf
into
jno
loope
adc
and
pop
hlt
adc
call
dec
xchg
mov
shl
adc
push
imul
lea
adc
adc
leave
cmc
cli
sub
sub
add
loop
mov
pop
jb
add
xchg
mov
fistl
xchg
and
add
imul
and
or
jnp
iret
sahf
jo
lahf
jo
nop
aam
add
jle
inc
add
push
xchg
pop
add
xchg
sbb
adc
inc
mov
rcr
lret
lock
jae
pop
xchg
test
in
sub
cmc
push
inc
cs
pop
push
pop
lea
and
add
adc
add
aas
dec
fldenv
out
add
rcrb
add
sbb
jg
mov
cmp
sub
cltd
fwait
add
sahf
shll
test
add
add
adc
pusha
add
xor
fstpl
pusha
dec
lret
stos
scas
dec
repnz
test
cmp
ljmp
mov
push
add
aad
mov
adc
push
shrl
pusha
lcall
or
dec
jb
fidivs
ja
test
aaa
inc
repnz
add
or
cli
mov
test
add
push
imul
enter
mov
es
sbb
lea
add
xor
push
and
test
add
dec
mov
push
je
loopne
xorb
xchg
in
pop
or
bound
inc
andb
mov
push
mov
push
loopne
jmp
xchg
and
push
hlt
mov
pop
les
mov
popa
sbb
mov
ja
add
pop
adc
add
add
fildll
les
xchg
add
int3
test
jg
xor
lock
adc
jae
in
cmp
adc
aam
pop
movsb
add
sub
or
push
outsb
xor
loopne
les
add
cmp
in
and
sub
add
xchg
cmc
dec
inc
add
insl
jg
ret
adc
imul
loope
push
inc
cli
mov
out
mov
mov
movsb
popa
inc
mov
mull
push
rclb
sbb
jb
mov
jmp
fbstp
xchg
add
pop
sbb
pop
aad
mov
out
inc
push
notb
out
push
inc
stc
lods
xor
add
mov
shr
mov
add
rorb
xchg
dec
push
and
cwtl
mov
aad
add
into
sbb
xor
rorb
mov
mov
adc
cmp
mov
inc
push
sbb
movl
push
mov
mov
dec
mov
mov
mov
pop
fldenv
mov
dec
orl
mov
mov
pop
dec
in
add
mov
mov
adc
mov
lds
loope
roll
cmp
movb
sub
in
jl
push
cltd
lahf
and
and
add
pop
stc
mov
mov
jg,pn
sarb
stos
xchg
add
and
pusha
inc
xchg
ret
je
add
dec
addr16
iret
and
xchg
push
fadds
mov
in
mov
cmp
jbe
shl
jle
and
xor
ja
push
sbb
jb
add
pop
ljmp
lock
inc
roll
or
inc
testb
adc
mov
repnz
lret
test
inc
push
test
jg
shll
jnp
push
cli
cmc
arpl
sahf
add
shll
notrack
add
jle
repnz
roll
imul
nop
and
cmpb
and
xchg
imul
or
rol
rolb
ret
inc
inc
movsl
xchg
pop
in
call
xor
xor
inc
in
add
xchg
add
pop
inc
or
and
sti
add
fistpl
cmp
xchg
hlt
mov
icebp
pop
data16
mov
inc
jecxz
in
lock
push
or
add
lods
add
dec
add
int3
or
add
les
arpl
inc
scas
orb
out
pop
sbb
jecxz
add
mov
mov
arpl
mov
ljmp
mov
das
add
shll
cmpsl
and
push
adc
lock
in
sbb
mov
sar
push
add
iret
xchg
jae
xchg
inc
int
xchg
cmp
rclb
mov
loopne
ds
sub
cli
jg
cmp
push
pusha
add
sbb
jmp
lds
orb
enter
jp
inc
mov
sub
mov
es
jg
add
xchg
les
and
xor
ljmp
aaa
faddl
into
ja
daa
leave
xor
and
idivb
fisttps
repz
or
mov
adc
xchg
in
mov
lahf
add
push
sbbb
lret
xor
aas
jo
pusha
push
insb
add
sbb
add
outsl
pop
mov
push
sbb
xor
sub
add
iret
sub
inc
add
adc
sahf
pop
sub
jne
daa
inc
std
and
mov
clc
sub
push
arpl
mov
cmc
movaps
jo
js
xor
or
push
mov
int
fcoms
inc
mov
mov
cwtl
add
fcmovnb
shlb
lds
xorb
cltd
sbb
xor
or
and
pushf
fisubrl
insl
inc
addb
aaa
pop
add
dec
stc
add
mov
fldl
cmc
mov
fdivrs
lds
rol
nop
lea
dec
xchg
xchg
scas
mov
add
out
mov
push
xorb
imul
pop
cld
sbb
cmp
cmp
fsubrs
lods
add
cld
add
jp
lahf
scas
cmp
add
pop
nop
cwtl
cmp
data16
loop
out
push
mov
sub
or
das
rclb
test
mov
push
lcall
sub
dec
sahf
inc
mov
ja
adc
repz
loope
lods
add
adcl
adc
mov
sub
mov
repnz
add
das
jae
fbstp
jno
adc
sub
jns
and
push
jne
or
sbb
ds
es
int
and
inc
add
xchg
push
scas
jno
andb
push
cmc
mov
ret
cwtl
mov
out
push
and
xchg
inc
xchg
fs
scas
xchg
fadd
repnz
sbb
dec
out
jle
add
and
out
lcall
and
loopne
int3
push
sub
sub
add
jmp
vmovups
mov
push
xor
mov
int3
jne
mov
adc
mov
add
rorb
add
jns
ljmp
xchg
mov
fs
inc
add
add
or
and
mov
inc
addr16
adc
pop
add
dec
add
lds
add
aaa
pushf
ret
dec
xchg
pop
movsl
inc
sbb
ljmp
and
out
push
cmc
insb
out
lods
and
pop
adc
add
jge
mov
call
lea
lahf
cmp
jg
test
add
nop
and
lods
aad
or
mov
rorb
loop
iret
inc
adc
sahf
neg
add
cmp
dec
or
in
sbb
or
loopne
scas
mov
pop
testl
loope
add
or
xor
test
movsb
cmp
jle
push
ja
adc
jecxz
add
or
mov
add
cli
rcrl
adc
iret
clc
rol
add
shr
lahf
sarb
add
leave
mov
xor
sbb
mov
adc
add
cmpsb
adc
in
pop
cmp
lds
xor
rcrb
sub
adc
sbbb
dec
pop
dec
pop
in
mov
add
data16
nop
test
add
call
ljmp
daa
inc
shll
add
sub
les
repnz
add
das
mov
in
xchg
add
ja
mov
pop
iret
jb
pop
and
stos
out
int
outsb
js
loopne
sbbb
push
jae
arpl
ret
jne
sbb
add
cmp
add
sbb
test
dec
movzwl
incl
and
add
xor
shll
out
fdivrl
mov
scas
xor
shlb
shll
aad
lock
js
and
inc
aaa
add
clc
cmp
adc
pusha
add
mull
or
in
fildl
lods
cwtl
pop
les
fwait
scas
popf
lahf
loop
cli
sbb
sti
test
lods
movl
aad
inc
repz
sbb
pop
das
jb
add
mov
cmp
adc
test
ret
je
push
inc
test
pop
sbb
pop
add
mov
inc
sub
aam
repnz
mov
hlt
das
push
xor
mov
in
out
dec
xor
xchg
adc
subb
push
pushf
mov
rolb
jmp
cli
inc
lods
add
sbbl
add
cwtl
out
add
jmp
mov
ret
xlat
pop
pop
xchg
jge
addr16
pop
fwait
repz
aam
pop
shll
inc
xor
mov
or
insl
mov
sbb
mov
add
mov
out
xor
leave
in
jns
dec
sbb
sbb
dec
gs
test
jg
je
add
test
add
pop
adc
xchg
icebp
xchg
mov
clc
gs
add
mov
in
xchg
pop
loopne
push
ljmp
add
xchg
dec
push
add
mov
adc
xor
push
add
adc
sub
shr
add
xor
cmpl
nop
mov
push
push
test
les
fists
clc
mov
divb
cld
movl
push
int3
inc
mov
ret
mov
cltd
pop
mov
stc
xor
jp
sub
lods
test
or
lcall
push
cli
xchg
cmpsb
dec
mov
mov
cmp
popf
add
add
cwtl
push
mov
cld
sbbb
adc
xchg
mov
add
xchg
add
testl
out
and
and
add
sti
cltd
add
pop
jmp
jp
shlb
mov
ret
hlt
icebp
into
repnz
pop
adc
xor
add
jns
mov
pop
and
jae
add
jb
inc
push
pusha
out
push
or
adc
mov
call
movsl
les
xlat
mov
add
push
ret
lret
pop
int3
aad
add
loope
push
ja
call
xabort
cli
inc
shlb
pop
ja
cmp
fnstsw
mov
sbb
inc
icebp
add
hlt
and
add
cmp
push
in
or
prefetchw
lds
inc
mov
stc
shrl
add
lahf
std
jle
add
cwtl
inc
push
or
call
add
push
mov
mov
or
mov
lds
dec
imul
jbe
or
test
pushf
sbb
mov
sub
movsb
rol
adc
daa
add
mov
mov
mov
cltd
or
push
test
add
cld
int3
cmp
xchg
mov
mov
imul
xchg
jnp
pop
js
adc
sub
aad
jmp
mov
int
add
sub
and
xchg
je
add
loop
lods
iret
fistpll
mov
orb
push
or
xchg
pop
inc
movsb
sarl
sahf
shlb
or
in
js
inc
cs
pop
inc
fchs
push
cmpsl
mov
xchg
test
aas
sahf
mov
lahf
fmull
add
push
shl
xchg
test
push
leave
pop
mov
out
push
mov
iret
adc
adc
add
and
push
jo
add
or
loopne
jno
add
int3
pop
int
add
sub
js
lock
push
xchg
rcr
pop
insb
cltd
sbb
add
pop
dec
add
mov
hlt
out
mov
inc
fsubrs
loopne
fstl
fs
addl
bound
adc
icebp
mov
xchg
sti
aam
movb
xor
into
ja
pop
addr16
xchg
mov
popa
pop
sbb
adc
sbb
add
fdivs
je
loop
leave
jae
or
cmp
je
clc
in
adc
add
sbb
in
aad
add
loop
rolb
add
adc
sti
inc
jns
stos
rcr
fimuls
pop
sbb
push
arpl
cmp
dec
push
in
adc
insb
inc
and
sarb
mov
mov
lock
push
or
dec
pop
int
cmp
aad
xchg
pop
int3
sub
mov
mov
pop
mov
rclb
icebp
pusha
xlat
pop
add
sub
call
dec
or
mov
add
add
repnz
mov
sub
fiadds
pop
and
add
aad
pop
repz
cmp
mov
pusha
loopne
negl
stos
imul
jb
cli
xchg
add
adc
inc
jle
sbb
xchg
mov
ret
or
out
jle
sbb
sbb
or
mov
add
mov
sub
add
add
inc
xor
xorb
add
mov
pop
loop
add
in
lahf
cwtl
cmp
inc
mov
sbb
call
push
pop
sbb
iret
lret
mov
aas
sbb
xlat
pop
shl
sti
enter
ja
add
sub
cmp
inc
es
shl
cli
push
cmp
sbb
fcomps
sahf
loopne
mov
sbb
test
fstpt
sbb
notl
adc
jno
or
add
dec
addr16
dec
nop
fimuls
pop
sub
push
icebp
add
bound
pop
add
or
mov
mov
andl
sbb
mov
add
xchg
adc
sbb
push
rcrb
jnp
scas
cmp
jo
jp
shlb
outsb
rolb
pop
xor
sub
jno
mov
js
shlb
test
jb
dec
add
xchg
in
push
pop
imul
xor
fnsave
lods
mov
cmp
clc
shr
sub
test
addr16
lock
pop
inc
add
push
push
cmp
xchg
jae
je
jne
insb
bound
cltd
cmc
mov
and
add
rcr
leave
andb
stc
or
and
jbe
or
mov
aas
jb
add
stc
ret
add
cld
pop
cmp
adc
dec
mov
push
dec
mov
data16
js
sbb
pop
insl
xlat
jle
add
testl
xchg
mov
addb
aam
test
sbb
loop
and
lcall
bound
je
sbb
pop
inc
rolb
mov
les
mov
jno
push
int3
mov
or
imul
mov
out
insb
add
sub
jo
cld
adc
add
ucomiss
cld
in
insb
push
mov
add
sbb
xor
add
mov
add
and
adc
push
dec
add
push
dec
cwtl
adc
cmp
clc
sti
mov
stos
loopne
jnp
in
inc
nop
mov
repnz
out
or
testb
jmp
pop
adc
js
jp
imul
out
test
inc
out
cmc
and
dec
mov
cmp
cmpb
test
sarb
cmp
pop
cmp
push
lock
shll
ret
sub
dec
adc
hlt
mov
add
inc
add
fisubrs
push
jle
popa
mov
cmp
rep
push
add
jns
push
add
lods
inc
adc
lods
loope
add
test
push
leave
jbe
mov
push
idiv
adc
add
movsb
inc
cmc
add
out
push
mov
fisubs
iret
mov
outsl
out
and
dec
cmp
add
lods
mov
pusha
mov
loope
fmul
pop
rolb
int
pop
lahf
lret
xlat
sahf
pop
add
push
sbb
insb
adc
icebp
add
enter
adc
clc
lods
dec
sbb
mov
loope
in
pop
rolb
lcall
xor
dec
add
add
ss
out
pop
lock
and
cmp
fbstp
mov
xchg
rolb
fsub
sbb
testb
ret
les
pop
inc
add
and
out
add
outsb
pop
pop
add
mov
js
jno
add
iret
jb
inc
pop
aam
add
pop
push
cmc
mov
xor
arpl
jmp
sbb
shrb
aam
sub
stos
enter
xchg
in
or
dec
scas
xchg
movsb
cmp
div
ret
lock
sbb
pop
adc
insb
dec
add
mov
enter
idivb
into
mov
repz
mov
push
pop
pop
jl
stos
roll
loope
loop
inc
les
mov
mov
shll
cmpsb
les
lds
in
xchg
or
push
inc
hlt
ror
xchg
add
mov
push
jl
pop
and
sbb
sbb
lock
insl
xchg
add
add
imul
add
hlt
sub
jge
movsl
add
add
icebp
dec
jne
and
add
mov
push
sub
arpl
imul
jge
stos
clc
or
mov
int
es
add
sbbl
ljmp
xor
std
lods
push
test
xchg
push
ss
lret
add
hlt
xchg
call
xchg
cmp
push
sbb
leave
lret
add
and
stc
dec
xorb
jge
mov
jnp
push
lods
mov
add
inc
jnp
mov
stos
add
jns
rcll
insl
cli
aad
fs
hlt
push
add
mov
cwtl
xchg
flds
sbb
dec
fmuls
and
adc
pop
inc
lock
and
clc
jge
add
out
sahf
std
cmpsl
gs
jbe
xchg
or
dec
pop
add
mov
pop
mov
push
add
stos
fcoms
or
out
mov
mov
xor
pushf
rolb
dec
les
xchg
add
ja
push
stos
out
lds
sti
adc
rorl
sbb
push
popf
inc
lahf
add
lds
add
scas
jge
or
pushf
mov
xor
sub
cmp
pop
repz
in
das
cmp
lods
pusha
pop
cmpsb
jo
xor
cmovae
and
inc
push
lods
out
push
mov
mov
sub
pushf
dec
inc
pusha
sbb
mov
mov
rcr
test
aad
popl
pmulhuw
jl
mov
subl
push
and
adc
adcb
xchg
in
add
sti
add
lcall
add
scas
ret
or
jae
stc
inc
xor
push
cli
mov
cmp
sbb
int
sbb
mov
mov
or
add
push
add
cmpsb
mov
fadds
push
daa
xlat
gs
fs
out
add
lret
lea
add
mov
and
icebp
jb
push
adcl
add
std
cmp
inc
cmp
xor
sti
push
fwait
inc
lret
mov
pop
add
cmp
xor
js
and
loope
fsubr
inc
adc
das
or
rcrb
pop
test
mov
add
lds
add
mov
inc
hlt
das
and
add
add
test
xchg
xor
lods
sahf
dec
lods
add
cmpb
imul
xchg
cwtl
sbb
jge
push
pop
pop
pop
pop
xor
xchg
nop
hlt
sub
add
sub
imul
push
in
jp
das
mov
arpl
add
xchg
pop
dec
dec
pop
jbe
adc
xor
mov
inc
sub
adc
cmp
add
adc
call
mov
pop
aad
jge
clc
fcompl
jb
inc
gs
movsl
cmp
jg
mov
rcl
cmp
in
lock
adc
jno
sub
push
mov
cmpb
in
test
adc
cmc
push
test
sub
loopne
out
push
ljmp
ret
mov
add
fsubrs
lcall
pop
cmc
add
sahf
mov
xor
cmp
mov
shlb
ljmp
push
imul
mov
movsb
divb
hlt
adc
pop
cmp
lcall
mov
add
mov
test
cmpb
sbb
mov
mov
or
lret
enter
mov
das
jmp
ja
paddsw
mov
into
cs
xchg
push
cmp
mov
mov
xchg
push
rclb
xchg
es
add
outsl
test
cmp
testl
mov
inc
add
daa
jecxz
pop
jge
add
push
pop
jno
adc
pop
jns
sbb
adc
sub
repz
iret
add
jo
adc
mov
rcrb
out
pop
pop
mov
pop
jo
add
ss
cmp
push
and
push
or
add
stos
mov
pusha
clc
in
mov
mov
add
cmp
bound
xchg
add
inc
push
sub
loopne
sbb
mov
mov
loope
jbe
subb
push
fxch
rclb
ljmp
pusha
fdivrp
add
ds
loop
insb
add
mov
lds
popf
fcoms
jo
xlat
jnp
or
jecxz
fcmovnbe
cmpsb
sub
lods
jae
dec
cmovs
roll
mov
add
xchg
dec
aaa
add
xor
sub
dec
jg
add
dec
rorb
fidivrs
add
sbb
vmread
jge
add
rclb
pop
add
aam
clc
shl
mov
add
ret
fisubl
lds
imulb
sbb
pop
jbe
push
jo
push
in
mov
xchg
mov
and
add
or
sbb
out
pusha
sub
xorb
stos
pusha
adc
dec
add
pop
sar
xor
std
mov
jne
adcb
out
or
jle
les
add
lahf
fstpt
and
sub
mov
and
pop
push
call
mov
out
btc
out
jle
sbb
lcall
xchg
adc
movsl
add
cmc
or
cmp
stos
jb
out
int
outsl
scas
adc
xchg
les
xlat
in
mov
in
popl
pop
in
adc
call
mov
cmp
xchg
push
jecxz
inc
mov
dec
js
add
cmp
or
add
rorl
bound
pop
lock
mov
mov
sub
lret
enter
pop
std
add
jnp
and
mov
iret
lea
push
pop
mov
sarb
les
movsl
add
test
jbe
dec
push
push
orl
mov
pop
add
pop
xor
leave
dec
das
add
pop
push
or
popl
push
jae
xchg
sbb
jp
pop
mov
xchg
test
dec
dec
insb
sbb
push
addr16
sub
xchg
mov
jno
add
movsl
outsb
fs
add
xchg
pop
sub
dec
pop
or
jl
add
add
out
xchg
jg
push
cmp
loopne
push
lahf
adc
pushf
fs
mov
xchg
inc
aas
jb
mov
test
mov
push
das
dec
mov
outsb
stc
sub
inc
xor
test
roll
data16
dec
pop
lds
push
fimull
js
mov
push
xchg
jg
or
dec
fs
ss
xchg
add
dec
add
and
sbb
in
cs
mov
jae
jo
and
arpl
xchg
daa
sub
adc
push
add
xlat
mov
xchg
cmp
aad
mov
add
cmp
jecxz
sti
rorb
xchg
push
jbe
jae
add
jae
out
and
add
sahf
pushf
roll
bound
xor
mov
in
xchg
sub
insb
mov
clc
in
dec
jmp
aad
xchg
mov
insb
std
add
test
leave
inc
int3
out
add
not
add
or
dec
add
mov
mov
mov
out
mov
dec
je
add
cmp
je
add
fcoml
cwtl
inc
cmp
push
or
test
loopne
cmp
xchg
push
out
lods
insb
add
mov
imul
es
jns
xor
push
movsb
fmul
ljmp
or
or
sbb
and
sar
popa
scas
jle
cmp
add
call
or
mov
pop
in
pop
add
out
cmp
add
mov
lret
add
xlat
mov
jnp
into
xchg
jecxz
je
add
and
jne
add
pop
mov
add
cld
cltd
jb
lock
sbb
jbe
sub
ds
jnp
testb
inc
sub
sub
mov
mov
push
mov
adc
in
ret
and
idivl
sar
xlat
stos
arpl
or
sbb
pop
sti
push
mov
lock
mov
faddl
cmp
push
xlat
iret
push
pop
jns
sahf
push
xor
sub
dec
push
jl
cmpsb
jne
lods
adc
jbe
enter
add
sub
jmp
adc
or
shr
dec
jne
jle
add
nopl
ds
cmpl
cmp
cmp
add
pop
or
cmp
inc
jbe
push
test
add
or
push
mov
inc
sub
pop
dec
in
inc
in
add
cs
lret
nop
ljmp
inc
mov
add
and
cltd
mov
add
and
cwtl
add
mov
in
loopne
pop
hlt
inc
add
push
test
or
cmp
lock
mov
fsubs
dec
outsb
jp
pop
loope
push
inc
test
mov
cli
cmc
adc
mov
into
fisttpl
xchg
xchg
add
stos
add
add
into
and
movb
xchg
insb
ljmp
adc
mov
addb
xor
mov
mov
lret
inc
es
add
stos
pop
jmp
lahf
sub
popa
ret
lea
add
mov
xchg
dec
cs
add
ds
testl
xchg
scas
add
sbb
mov
js
test
popa
cmp
mov
adc
cs
lea
mov
xchg
movl
jnp
xor
daa
pushf
push
dec
xchg
test
cltd
add
and
mov
inc
rolb
mov
cld
mov
sub
ljmp
pop
dec
mov
inc
and
mov
push
cmp
inc
mov
cli
and
lcall
pop
add
jo
ret
imul
pinsrw
mov
push
out
mov
aas
cwtl
or
movsb
fbld
and
je
jg
add
mov
ljmp
andb
push
shlb
rcll
sub
and
mov
and
sbb
in
jns
sub
mov
cmp
jmp
adc
leave
stos
adc
loopne
and
xor
xchg
add
lea
jo
jg
adc
lahf
insb
add
dec
or
xor
cli
fldenv
jnp
das
jle
mov
cltd
or
shlb
inc
adc
pop
out
add
xor
jb
add
push
stos
lret
sbbl
adc
or
jns
mov
dec
outsb
mov
les
mov
sbb
add
cmp
ja
jns
hlt
xchg
cmp
out
mov
and
xchg
add
mov
movsb
leave
popl
ljmp
paddb
nop
sbb
adc
ljmp
sbb
inc
inc
into
push
or
popf
and
popa
sub
lea
sub
insb
push
sbb
pop
adc
pop
add
scas
sub
cmp
add
frstor
xchg
dec
inc
xor
call
or
cs
fldcw
push
icebp
je
enter
xor
adc
add
je
or
mov
add
notl
call
pop
call
and
xchg
and
push
jge
adcb
pcmpeqd
add
loop
lock
mov
fidivs
cmp
add
idivl
test
test
add
cmc
add
pop
jg
xorb
pop
push
pushf
sahf
mov
mov
flds
int
mov
fistpl
pusha
fs
lods
cmp
test
adcb
sbb
loope
xor
adc
pop
push
je
add
sbb
mov
lea
or
int3
ret
or
sti
movsb
pop
pop
xor
and
cli
dec
cs
imul
cmpsb
pop
pop
adc
xor
mov
mov
orb
cmp
pusha
aaa
sub
add
jo
movsb
bound
cmp
lods
test
popf
pusha
jae
add
stos
pop
int
sahf
sub
and
aaa
roll
push
lods
jge,pn
xchg
xchg
push
pop
inc
aam
je
mov
fsubs
cmp
fs
or
jo
aaa
or
sbb
mov
dec
pop
addb
add
xor
push
testb
xadd
pop
stos
enter
add
js
aas
sahf
into
xchg
daa
in
mov
and
sbb
fdivr
and
es
xor
jae
jns
push
inc
and
jns
ucomiss
mov
pop
push
jmp
mov
lods
shll
inc
jecxz
stos
sbb
add
cmp
mov
aam
iret
dec
popf
mov
sarb
push
out
sbb
rcrl
fwait
stos
add
rcrl
inc
mov
pop
fsub
sub
popfw
and
iret
repz
add
add
mov
cld
adc
and
add
stc
mov
jp
imul
pop
jge
add
lock
mov
cmp
fwait
add
daa
jae
inc
call
call
movl
fsub
test
or
mov
add
fwait
test
add
cli
mov
push
add
imul
shlb
add
jg
mov
mov
pop
pop
sbb
subl
and
sub
or
mov
fwait
sbb
lock
inc
add
add
out
add
adc
push
call
scas
clc
bndstx
add
xor
fsubl
std
push
arpl
fld
jnp
push
icebp
add
add
adc
jge
mov
add
flds
add
fs
std
sbb
and
add
das
lret
fisttps
outsl
inc
popa
sahf
add
or
inc
in
pusha
sbb
call
adc
mov
sbb
pop
and
mov
inc
cmpsl
and
iret
mov
scas
pusha
inc
adc
stos
outsl
add
add
cmp
lret
loop
inc
dec
imul
iret
fiadds
xchg
lcall
fbstp
icebp
fmuls
cltd
jo
dec
jge
add
xor
shrb
mov
in
leave
ljmp
xor
fadds
mov
test
xchg
xor
add
negl
add
adc
loopne
sub
loop
xor
cltd
add
sbbl
jmp
pop
stos
dec
dec
mov
es
and
lods
fstpl
jl
add
insb
mov
cmpsb
push
jbe
rcrb
mov
mov
cwtl
adc
outsl
popa
sar
xchg
fmull
popa
add
outsl
add
inc
hlt
and
stc
xchg
xorb
mov
add
into
xchg
dec
loop
add
jle
mov
push
adc
mov
lahf
xchg
push
jb
push
hlt
cmp
ret
sub
std
scas
mov
mov
arpl
shlb
inc
jno
jne
dec
nop
add
leave
jns
jp
jbe
outsl
inc
cmp
stc
shl
or
ljmp
cli
or
adc
xor
call
push
sahf
fucomip
mov
or
and
pop
shrb
dec
ret
mov
fldl2t
push
push
add
stos
lods
pop
cmp
xchg
add
dec
das
cmp
cmp
lock
add
test
int3
in
xor
scas
mov
mov
pop
dec
add
add
clc
add
aaa
rcrb
dec
inc
xchg
sbb
mov
icebp
jbe
add
push
cld
movsb
mov
sub
pop
xchg
dec
fcoms
test
and
pop
mov
or
in
push
mov
aaa
jp
cmc
dec
mov
filds
aam
call
push
in
mov
cmp
cltd
sub
ljmp
jg
mov
cmp
adc
pop
int3
inc
leave
push
push
mov
add
add
mov
add
jp
and
insb
insb
add
sbb
adc
dec
push
int
pop
dec
pop
xor
enter
and
push
addl
inc
dec
lods
call
jge
in
lock
nop
mov
in
xlat
lret
mov
add
aam
mov
roll
push
stos
andl
imul
fldl
idivb
or
cltd
es
xor
cmp
adc
aad
movsl
add
popa
notl
addb
fstpl
lods
iret
and
or
sbbb
insb
es
mov
cmp
loopne
call
and
xchg
push
mov
push
jns
sbb
cmp
fadds
dec
add
addl
add
mov
sub
enter
xlat
aas
ficoms
add
shrb
dec
mov
sbb
out
clc
sbb
and
xchg
scas
sub
stos
xor
mov
xchg
icebp
incl
add
mov
scas
ret
pusha
shr
sub
sbb
jg
cmp
inc
orl
ds
mov
scas
aas
jne
orl
inc
in
pushf
and
inc
lock
adc
aam
andl
mov
in
dec
std
adc
cld
dec
jmp
nop
testb
pop
add
rclb
aam
rcr
sub
mov
adc
je
add
in
outsl
jno
pop
lods
sbb
in
lahf
inc
leave
iret
lret
push
jmp
xchg
inc
ss
push
dec
daa
lret
cmp
outsb
lahf
lock
jmp
push
jmp
xchg
dec
mov
push
sarl
xchg
add
mov
xlat
mov
movsb
data16
push
adc
bound
add
mov
dec
fpatan
inc
pop
push
pop
das
movsb
lods
popf
iret
rcrb
pop
push
add
clc
divl
loopne
add
repnz
add
mov
or
data16
jns
add
pop
pop
shlb
inc
pop
fcomps
adc
loope
and
in
add
pop
add
jbe
call
add
out
push
push
dec
adc
sti
add
out
popa
jp
pop
loop
xadd
imul
std
cmp
xchg
rolb
add
repnz
mov
adc
fldt
mov
and
or
add
jb
jae
adc
push
out
cltd
add
adc
scas
fisubrs
loopne
adc
fs
and
iret
cmp
add
pop
mov
jb
add
add
mov
sbb
pop
dec
sub
cmp
add
movsl
int
push
sub
pop
ss
jae
es
pop
in
sbb
inc
add
ss
nop
sub
arpl
push
mov
push
mov
loopne
ja
add
test
jge
push
inc
cmp
wbinvd
jmp
xchg
int3
test
popf
add
adc
cmc
dec
bound
inc
mov
std
addb
push
jns
mov
xchg
xchg
xor
sahf
or
cmp
and
push
mov
adc
dec
add
xchg
fdivs
add
mov
addr16
cmp
xchg
and
lahf
inc
add
jo
lock
cmp
xchg
mov
jns
adc
jae
mov
cmpb
fwait
out
pop
inc
pusha
dec
mov
jae
xor
inc
aad
out
sub
cmpsl
mov
mov
jg
aas
xor
pop
aam
cmp
testb
cwtl
fmulp
jmp
adc
out
sti
add
mov
jae
jno
add
adc
data16
jecxz
sbb
adc
mov
add
shll
fdivp
or
xor
xor
nop
add
sbb
cmc
or
in
mull
ds
aam
pop
loopne
cwtl
cmp
nop
add
push
rcrl
sub
or
nop
in
xchg
add
ds
into
cmp
call
cmp
aas
jge
ret
cmc
add
pop
andl
js
xor
daa
jmp
int
nop
mov
popf
cmp
sahf
mov
xchg
xchg
add
cwtl
scas
clc
clc
mov
push
lock
sub
shlb
xor
or
jmp
out
push
repz
add
and
shll
push
aas
xlat
mov
pop
jo
data16
es
mov
cmp
mov
imul
lcall
movl
push
popf
pop
mov
push
cmp
fwait
leave
je
mov
jne
add
push
push
stos
mov
mov
lea
add
mov
stc
sbb
in
gs
xchg
ret
fcoms
call
lods
in
sub
loopne,pn
stc
in
repz
fdivs
pop
dec
jbe
ret
push
js
cmp
xor
rcr
add
add
pop
jno
inc
add
cmpsb
rolb
pop
add
cmpsl
mov
cmp
or
inc
sub
xor
insl
sub
sbb
pop
fcom
adc
gs
shr
out
cltd
sub
pusha
stos
adc
sub
lods
pop
add
mov
imul
fildll
adc
add
rclb
and
fcoml
sbb
sbb
icebp
js
lret
add
mov
movsb
pop
lcall
sub
cmp
add
jbe
adc
lahf
pop
dec
loop
or
pop
mov
icebp
cmp
jmp
jl
and
daa
mov
cmp
test
cltd
ja
dec
cmpsl
flds
sub
add
rcrw
outsl
adc
pop
xchg
inc
xor
cli
cmpsl
pop
imul
add
or
shlb
lret
push
in
mov
imulb
mov
sub
or
std
out
lahf
mov
or
scas
clc
and
xor
mov
rclb
and
or
hlt
mov
adc
pop
add
popf
enter
jae
add
pop
enter
loop
rep
adc
inc
loope
icebp
adc
cwtl
gs
jae
repnz
add
out
cmp
push
cmp
arpl
and
jns
sbb
jle
lock
repz
pcmpeqb
nop
lock
add
int
cltd
add
leave
inc
hlt
iret
lock
add
xor
mov
and
jno
xor
mov
popa
xor
ljmp
mov
xchg
leave
iret
add
shrl
popf
imul
adc
in
mov
xor
xor
cmp
pop
loopne
and
add
jne
and
and
push
inc
xor
cmc
jns
adc
lods
push
bswap
xor
or
scas
push
inc
lods
and
push
cmp
sbb
test
cmp
mov
enter
pop
and
add
pop
insb
and
add
xor
or
int
xchg
ja
mov
test
push
pop
mov
rclb
stos
pop
lods
inc
xlat
xchg
mov
or
jae
fwait
xchg
imul
sarl
or
add
mov
add
stos
sub
dec
mov
out
add
je
mov
inc
add
mov
in
sub
jae
enter
xchg
mov
jo
dec
jle
add
and
shr
inc
add
sbb
leave
push
lock
test
push
stos
mov
movl
push
or
or
mov
je
ja
rep
sbb
and
sbb
xchg
add
mov
jae
xchg
vpsllq
fmulp
testb
stc
in
jmp
out
ljmp
packuswb
add
pop
daa
nop
sbbl
test
getsec
cmp
push
subb
aam
rolb
mov
xor
xor
repz
movsl
not
mov
iret
mov
mov
hlt
fistps
xchg
mov
push
pop
push
mov
gs
or
rolb
push
add
jno
sbb
arpl
xchg
lahf
aam
sub
in
add
jae
and
jne
nop
add
mov
or
mov
add
pop
sbbb
sahf
push
add
sub
decb
dec
pop
jge
mov
xor
pop
lock
call
add
iret
push
sbb
fsin
inc
xor
add
pop
insb
out
test
aaa
add
rcrb
in
jnp
es
xchg
sahf
lods
add
stc
jae
dec
enter
sbb
rcrl
add
adc
fwait
sbb
insb
sub
jmp
inc
stos
rolb
mov
or
push
fadds
or
rorb
call
js
inc
jnp
add
mov
xorl
push
jne
orb
sbb
cs
cmp
popf
adc
test
sbb
jb
das
sbb
pop
mov
sub
mov
idivl
cmc
sub
jne
add
mov
sub
pop
mov
sbb
jge
add
rol
pusha
leave
xor
les
or
push
sub
outsl
adc
pop
flds
gs
xchg
icebp
jb
fimull
jge
ror
in
pop
and
push
pushf
loopne
pusha
in
cmp
or
loopne
movsb
push
xchg
out
push
add
sbb
loopne
jne
jg
data16
add
add
push
sbbb
push
sbb
mov
add
jne
push
sub
jg
in
enter
pop
sub
addb
mov
inc
mov
adc
lcall
mov
add
pop
inc
lcall
push
cmc
cmpsb
cld
testl
out
xor
orl
add
cld
ljmp
pop
ja
push
cmpsb
add
loopne
das
inc
pop
mov
push
mov
pop
mov
mov
jb
or
push
add
sub
out
inc
call
ret
roll
jecxz
xchg
sbb
dec
inc
push
sub
add
cmp
mov
testl
bound
lods
or
add
mov
push
adcb
inc
sub
js
dec
addr16
add
or
fcompl
inc
adc
sub
push
xlat
push
test
es
mov
imul
jg
mov
xchg
ss
xor
or
je
sti
or
clc
cmp
xchg
es
stos
xor
fs
jp
dec
mov
sbb
dec
dec
cwtl
iret
in
daa
out
add
cmp
or
mov
push
rcrl
mov
sbb
andb
lock
push
fucom
cltd
loop
xchg
loopne
lds
loope
mov
jecxz
and
push
mov
inc
add
lea
fcoml
push
add
loopne
xchg
sbb
and
xchg
mov
leave
sbbb
lahf
mov
sub
cld
dec
out
and
mov
pusha
adc
sbb
lret
add
mov
daa
mov
push
xchg
inc
sbb
add
dec
add
ds
jge
dec
repnz
cmp
inc
mov
pop
dec
mov
stos
nop
jae
mov
sbb
sub
pop
shl
add
in
fisubrl
idiv
popa
in
add
nop
clc
mov
iret
xchg
add
jb
call
add
mov
ja
add
push
adc
xor
test
in
mov
fucomi
mov
cmpsb
cmp
pop
aad
popa
test
adc
les
xchg
aad
into
xor
push
mov
dec
testl
xor
lret
les
in
in
imul
mov
xor
pop
mov
jbe
loope
mov
mov
dec
mov
push
lahf
or
mov
lock
sub
add
insl
push
pop
sbb
stc
repnz
ret
repnz
in
jge
popf
inc
cltd
flds
clc
and
add
mov
xor
mov
stos
xchg
push
add
add
int
sub
pusha
or
int3
add
mov
sti
lahf
mov
test
out
out
xor
xor
stc
xchg
xchg
rorb
xchg
out
add
push
sbb
mov
jge
loope
mov
nop
push
mov
pop
add
push
mov
lds
fildll
push
dec
sub
mov
add
fldt
and
dec
in
xchg
add
mov
loop
push
leave
mov
mov
jne
fcmovnb
or
cli
addb
pusha
push
popa
iret
imul
popl
push
cmpsb
dec
sub
mov
pop
push
xchg
dec
lret
in
adc
dec
dec
sub
add
icebp
out
ljmp
xor
das
jns
mov
out
sub
fcomi
shlb
mov
mov
lahf
in
je
xchg
stc
mov
stos
push
mov
push
pop
insb
add
nop
inc
sbb
jbe
mov
adc
mov
rcl
push
mov
mov
pop
adc
xorb
push
mov
sahf
vpmacswd
jb
xor
push
sarb
imul
sub
subb
xor
pusha
scas
adc
pop
sbb
pusha
imul
xchg
push
pop
push
lea
sbb
jg
inc
ljmp
cmp
loope
mov
stc
sbb
pop
lods
in
xor
inc
push
aad
add
cmp
aas
popf
xlat
filds
dec
inc
hlt
arpl
fdivl
imul
stos
lock
pusha
frstor
fsub
xchg
jb
loopne
mov
repz
icebp
out
mov
psubusw
loop
sbb
or
push
mov
add
jle
cmp
add
mov
aam
adc
add
pop
xchg
in
sbb
and
push
jo
ffree
xchg
push
ljmp
lock
jbe
rcl
xchg
clc
jmp
stc
add
fwait
arpl
pop
xor
xchg
fstpl
into
lods
mov
pusha
inc
inc
mov
add
push
or
lods
call
int3
addr16
add
xchg
and
xor
cmp
shr
enter
sub
dec
add
xchg
ja
addr16
stc
icebp
fwait
sbb
sbb
and
fmull
outsb
lods
jne
sahf
testl
int
push
js
pop
xor
lock
fildll
dec
pop
push
pop
loopne
push
les
int
and
mov
rclb
pop
adc
or
sbb
cwtl
ds
xchg
push
cmp
and
in
repnz
xor
sbb
cmc
inc
lea
add
and
sub
inc
jbe
add
mov
add
inc
andb
and
in
pop
jns
inc
or
xor
adc
add
movsb
in
popf
push
push
aam
pusha
shrl
xor
add
out
pusha
pop
xchg
push
push
add
xlat
iret
lods
das
rorl
inc
lea
push
xchg
pop
mov
lods
in
sub
push
cmp
jmp
sub
add
pushl
add
aas
push
repz
add
mov
pop
sti
lock
stos
cmp
jecxz
sahf
testl
adc
add
sbb
js
add
out
mov
mov
mov
lcall
mov
cmp
imul
test
std
or
add
test
inc
add
jmp
jnp
xorl
pop
add
xlat
in
mov
add
mov
clc
call
dec
add
mov
add
dec
push
rolb
ret
push
out
rorb
jno
cmp
divl
je
icebp
mov
add
push
sbb
cwtl
sahf
out
add
aaa
push
ror
add
jmp
pusha
dec
add
sub
mov
mov
push
movsl
jno
and
mov
pusha
fwait
sbb
xchg
cmpsb
test
push
pop
call
mov
jae
push
jmp
nop
push
mov
pusha
sbb
cld
fiadds
or
insl
out
hlt
fiaddl
pushf
push
mov
and
stos
enter
cmp
and
and
mov
dec
mov
out
cld
in
add
call
xchg
aaa
push
xchg
pushf
mov
test
add
mov
sub
loopne
pop
push
pop
mov
aad
sub
push
add
or
add
das
lret
adc
je
dec
ror
les
nop
ret
in
and
and
pop
lahf
push
repnz
subb
mov
push
add
pop
test
mov
stc
insl
out
jnp
add
jmp
inc
push
inc
and
fscale
pop
mov
shlb
aam
mov
add
cmpsb
push
ja
movsl
cmp
mov
in
add
and
lds
sbb
call
stos
in
clc
and
aaa
outsl
add
jg
xchg
add
out
mov
lret
aad
scas
mov
mov
add
jecxz
lods
int
xor
add
lahf
fnstcw
add
test
in
push
fdivr
xor
adc
std
mov
sbb
xchg
and
test
cmpsb
add
dec
fdivr
add
js
pop
call
add
stc
sbb
pop
cmpsl
in
ds
imul
pop
add
sbb
inc
in
cmp
xor
imul
push
clc
cmp
sbb
movq
inc
shrb
xchg
xchg
add
push
cmp
js
xchg
into
loopne
test
iret
pusha
cmp
add
fisttpll
cmp
jae
add
test
lds
add
xchg
and
jne
rorb
and
add
lds
push
pop
and
nop
add
xchg
xor
add
pop
out
xor
add
and
pop
cmp
cmc
xchg
nop
in
xchg
sub
scas
push
cmpsl
jl
add
subb
add
sbb
push
out
and
sbb
nop
add
rorl
divb
outsl
fwait
ds
push
add
pop
jmp
mov
push
add
enter
lret
mov
add
adc
xchg
sbb
pop
pop
mov
addl
iret
cmp
popa
and
jge
in
push
add
pop
filds
das
mov
or
popf
ret
int
dec
inc
push
add
sub
divb
mov
mov
push
jmp
loope
mov
or
mov
cli
hlt
or
add
cmp
dec
in
jno
fisubrs
mov
testl
out
add
jmp
push
lret
aas
mov
mov
popf
pop
loopne
pop
pop
iret
cmovg
cld
inc
leave
mov
popf
cli
shrd
pushf
jmp
test
pusha
sbb
cmp
pop
xor
pushf
cmp
cwtl
stos
add
popa
mov
xor
sbb
inc
jge
fimull
sahf
loopne
mov
add
inc
and
cli
xorl
add
inc
stos
xlat
cwtl
mov
out
ds
xchg
inc
sbb
lock
dec
xchg
mov
add
int
mov
jne
push
mov
stc
or
push
pushf
adcb
push
push
cmp
inc
add
push
sbb
pavgb
add
cmpsb
fadds
std
push
fcmovbe
sarb
jae
sti
dec
add
push
pop
test
add
and
loop
out
movsb
push
ret
in
add
mov
ds
xchg
cs
rol
add
jo
test
cs
mov
pop
jmp
mov
dec
add
outsb
or
pop
jl
add
adc
repnz
pop
sbb
ljmp
repz
jo
out
push
sub
and
fisttpl
jne,pt
orl
add
inc
or
aam
movsbl
jge
mov
test
test
cmpsl
xadd
idivl
sbb
or
add
push
rcrl
pop
add
lock
push
xor
add
movsb
mov
stc
orb
arpl
cmp
sahf
insb
dec
call
mov
lock
outsb
loopne
loop
or
repnz
movsb
add
bound
mov
pop
xlat
add
jnp
out
pop
lea
mov
add
pop
add
in
or
cmc
jne
pop
scas
push
fnsave
in
cmp
rorl
sahf
or
sub
push
ljmp
loopne
out
xchg
add
imul
cld
dec
jne
jns
add
sbb
mov
pusha
and
shl
push
pop
xchg
add
stc
mov
add
imul
js
add
mov
push
sub
mov
push
imul
nop
or
adc
dec
out
add
daa
sbb
sti
sar
add
gs
push
cwtl
mov
add
jge
mov
inc
test
syscall
dec
mov
pop
mov
mov
shl
inc
das
push
push
adc
js
add
xchg
ja
in
cld
bound
out
sbb
inc
nop
cmp
sbb
pop
mov
add
and
cld
shl
add
movsb
inc
incl
adc
cmp
cltd
dec
push
or
mov
dec
cmp
cmp
mov
jmp
ret
xor
fistpl
adc
mov
lret
enter
xor
add
std
lods
jge
cs
adcb
popa
jb
add
fbld
jle
push
xchg
js
scas
inc
pusha
fdivrl
pop
jno
add
fistl
dec
aam
pop
leave
mov
in
xchg
lods
add
in
out
popl
stos
sbb
pop
jns
mov
add
shrl
add
pop
jns
add
add
test
sbb
test
push
sbb
stos
data16
fsub
xchg
fcompp
add
stos
lahf
shl
add
stc
aam
xlat
into
mov
leave
add
cmc
xchg
pop
cmc
jo
dec
mov
add
or
je
out
sar
or
sub
add
fmull
add
repnz
mov
hlt
or
lahf
sbb
pop
pushf
adc
fldlg2
adc
and
insb
das
lock
mov
jmp
scas
les
xchg
add
subb
and
mov
add
sub
mov
inc
mov
push
pop
mov
sub
loope
pop
aad
inc
jno
jnp
xchg
lock
add
inc
mov
cmp
adc
inc
stos
xor
hlt
mov
mov
xlat
push
lcall
aad
mov
jmp
stos
sahf
push
in
pop
int3
add
pusha
cmpl
sub
dec
lock
add
aad
dec
cmp
mov
xchg
mov
sub
and
pop
xchg
add
inc
rcrb
add
test
xor
xchg
cmp
pop
lock
stos
add
and
dec
push
cs
pop
insb
pop
add
xchg
out
mov
std
in
mov
fiaddl
jg
mov
adc
push
xchg
xor
mov
cmp
bound
insl
jg
loopne
daa
repnz
xchg
add
pop
sbb
fnstcw
pop
out
notl
loop
add
push
rorl
gs
mull
mov
mov
cmp
int
fldt
loop
mov
mov
sub
push
sbb
cli
lds
mov
enter
aam
and
int
ds
push
inc
sbb
add
sbb
pcmpgtb
mov
or
pop
and
es
scas
sahf
inc
mov
jmp
sbb
negb
xor
push
jecxz
jnp
ja
mov
in
bt
mov
scas
mov
mov
adc
mov
add
sahf
xchg
test
sub
inc
sub
pop
cmp
and
aam
and
sbb
or
adc
cmp
add
sub
cmp
orl
out
add
xor
ja
aam
int3
andl
scas
test
inc
or
hlt
incb
pop
mov
add
out
adc
ds
xchg
scas
xor
jle
sbb
aaa
mov
lahf
sub
or
sbb
out
fsubrs
xlat
pop
xor
adc
add
leave
sar
push
cld
in
jbe
clc
sbb
jmp
je
sbb
xchg
cli
orb
out
out
jle
lahf
add
xchg
ret
mov
loop
adc
mov
xchg
aam
inc
adc
push
and
scas
mov
xlat
xchg
mov
add
or
sub
add
push
das
jnp
cmp
dec
jle
sbbb
fldl
ja
cmp
test
sbb
lea
aam
out
dec
fmull
ja
xchg
push
add
or
loope
imul
call
fists
in
mov
and
cmc
shll
sbb
loop
out
mov
add
xor
dec
cltd
and
sahf
fs
je
repnz
leave
lods
xor
sbb
jmp
or
add
mov
lock
jo
xchg
push
enter
aaa
add
imul
pop
add
fmul
cld
jbe
add
mov
shr
imul
or
add
or
sub
pusha
shl
add
hlt
jnp
clc
aaa
iret
xchg
popa
fadds
ffreep
notb
andb
mov
push
pop
add
inc
add
push
sub
test
out
mov
mov
dec
mov
test
mov
std
xor
iret
sar
add
test
mov
jno
cli
add
inc
les
or
cmp
lock
stos
add
inc
dec
cmp
xlat
mov
jno
movsl
mov
push
fcmovnb
test
or
xor
push
ret
add
in
loopne
cld
mov
add
in
fldl
sahf
je
or
jmp
inc
pop
sub
mov
pop
imul
xchg
orl
add
inc
inc
push
outsl
dec
xor
xchg
es
js
mov
loopne
ror
inc
gs
mov
pop
and
test
xchg
and
cmp
cmp
dec
push
and
scas
ljmp
je
pop
pop
out
xrelease
add
inc
sub
dec
add
insb
or
ret
add
into
adc
mov
enter
mov
adc
xchg
sbbl
xor
icebp
adc
xlat
pop
and
xor
mov
push
sub
cmp
loop
stc
xor
add
sub
scas
cltd
adc
movaps
jle
push
cmp
cmp
scas
test
inc
stc
add
imul
enter
push
and
add
jns
outsl
cmpsb
subb
int3
push
sti
aam
dec
jno
lret
cmp
in
and
mov
movb
fcmovnb
ljmp
sahf
shlb
jb
xor
bound
and
push
jle
pop
outsb
and
add
ss
addl
xor
sub
push
loop
pop
outsb
movl
call
pop
adc
sti
gs
inc
outsb
jp
rorb
clc
sbb
mov
xchg
push
sbb
lock
add
jno
stos
add
xor
push
fstpl
mov
fsubl
sbb
pusha
push
out
mov
cmp
xorb
int3
loopne
add
loopne
mov
jbe
sub
jle
add
loop
test
dec
cmp
lahf
aad
sub
sarb
leave
ja
cs
dec
add
lock
add
adc
pop
add
sbb
lahf
add
out
xor
cwtl
movb
sbb
add
cmp
enter
test
adc
pushf
dec
icebp
xbegin
adc
rcrb
inc
or
and
sub
mov
lds
add
xor
and
adc
mov
push
cmp
add
lds
imul
mov
push
lock
sbb
or
cwtl
cli
std
add
push
mov
cmc
pop
outsb
jne
add
jle
rcll
pop
mov
adc
mov
aaa
mov
mov
ficomps
in
lock
fisttpl
lods
cmpsb
mov
jge
aad
dec
add
lahf
mov
cmp
add
push
mov
xlat
test
lock
fwait
cmpsb
loop
fidivrl
add
mov
sub
add
arpl
inc
or
jp
add
cwtl
lgs
add
repz
add
and
jge
int3
arpl
cmp
jle
xchg
xchg
mov
jnp
jl
xchg
inc
sub
xlat
jb
inc
xchg
lods
ret
add
pushw
inc
repnz
jo
call
lock
sarl
sbbb
int
push
cmp
lods
mov
adc
mov
adc
jns
add
ret
cmp
dec
adc
imul
test
jmp
add
push
push
add
mov
and
adc
add
repnz
inc
inc
mov
roll
shrb
sbb
add
icebp
jnp
les
add
ljmp
add
aas
add
test
xchg
fs
movb
xchg
jge
es
pop
xor
loope
ds
push
mov
jo
mov
xor
sbb
cltd
ret
fistl
sub
add
mov
ljmp
jb
push
xchg
sbb
dec
hlt
inc
out
add
and
dec
cwtl
pop
cmp
in
data16
iret
int3
add
cmp
popa
rolb
into
pop
xlat
fsub
dec
movnti
scas
pop
xchg
push
adc
push
mov
aaa
pop
add
scas
adc
loop
in
cmp
out
mov
call
add
pusha
roll
sub
repnz
outsl
mov
aas
bnd
not
int3
scas
ret
mov
and
cmpsb
adc
add
cmovnp
addl
rcrl
sub
pusha
in
sub
stos
in
mov
cli
mov
mov
pop
popa
push
in
aam
add
add
fprem
orb
out
jns
mov
ficoms
inc
xchg
js
push
sub
add
ficompl
lahf
pop
jne,pn
and
and
test
orb
push
decl
pop
push
in
pop
adc
cmc
mov
inc
ja
mov
ret
add
sbb
or
testb
dec
mov
fadds
xchg
clc
cmc
mov
mov
jmp
mov
sbb
scas
and
gs
add
aad
in
add
mov
fdivrs
mov
push
mov
outsb
cmc
add
cltd
inc
adc
inc
fisubrl
es
and
push
cmpsb
dec
mov
rolb
js
dec
xorb
xchg
fstps
test
sbb
loop
pusha
dec
add
pop
in
faddl
jp
xor
and
insb
push
add
stos
into
inc
iret
testl
sbb
ret
push
push
int3
push
cli
out
inc
lds
int
sbb
or
inc
sub
pop
or
arpl
mov
push
push
jne
mov
sar
in
dec
or
scas
xorb
das
jnp
adc
rolb
scas
in
data16
ret
ss
call
sbb
pop
mov
repnz
das
xchg
rcrb
xor
add
aam
popl
mov
enter
cmp
jo
push
lcall
jle
push
fwait
jge
mov
dec
out
scas
int
lahf
add
mov
popa
jge
xor
ret
enter
scas
add
push
dec
mov
stc
incl
imull
addl
int
cmpsl
xor
pop
mov
mov
add
pop
mov
push
cmp
into
adc
loopne
movsl
xchg
push
dec
jo
pop
add
cltd
and
mov
cli
fbld
lea
xchg
mov
add
icebp
clc
lods
cmpsb
xadd
add
std
sbb
test
inc
fadds
mov
mov
rcrb
add
pop
insl
cs
lret
cli
int3
or
in
push
pop
dec
mov
insb
inc
pop
es
loopne
add
mov
pop
push
push
popa
pop
rol
sbbl
and
and
or
lods
inc
daa
push
stos
dec
mov
rorb
andb
ficompl
add
mov
add
pop
je
adc
imul
inc
clc
add
xor
fdivr
or
aad
mov
adc
aam
or
pop
xchg
cmp
dec
idiv
lods
xor
loop
add
jmp
push
filds
and
shl
pop
jo
add
nop
fstps
or
fcmovnb
adc
mov
clc
repnz
fs
loope
loop
testl
xchg
inc
data16
mov
adc
pop
shrl
int3
xchg
imul
lock
aaa
bound
mov
add
mov
pusha
add
or
push
push
into
adc
ret
or
rcrb
popa
adc
mov
adc
aad
movl
mov
mov
jae
ljmp
push
inc
jne
loope
push
xchg
sbb
pusha
std
sbb
gs
loopne
sub
jne
add
int
popf
mov
inc
cmpsl
add
into
adc
pop
rcrb
cs
xor
xlat
jecxz
sbb
mov
sub
popa
pop
mov
andb
add
jno
xchg
dec
aam
add
jmp
mov
add
inc
jb
sbbb
lods
add
adc
andl
push
xor
pop
mov
rclb
dec
xchg
add
mov
xlat
in
jp
dec
movsb
lret
addl
addr16
les
mov
push
add
cmp
dec
push
xor
xchg
pusha
ficompl
jmp
fs
cmp
popa
mov
repz
pop
adc
cld
psrld
mov
mov
push
jnp
enter
rcl
je
xchg
js
add
int3
sbb
addl
in
cltd
inc
add
in
inc
orl
cmpsl
repz
loopne
jae
add
fnstcw
mov
ljmp
inc
xchg
insb
stc
loope
add
add
lret
inc
lahf
aad
faddl
pushf
leave
xor
mov
rolb
sbb
sti
add
dec
sub
fadds
stc
divl
sub
add
fistl
sub
mov
imul
mov
and
jle
mov
pop
loop
test
sarb
add
negl
push
adc
aad
into
mov
sbb
and
and
jecxz
loopne
mov
cltd
shll
and
add
push
mov
cmp
cmc
push
aas
add
pop
add
mov
aam
push
add
mov
add
sub
sbb
nop
sub
xor
ja
add
xorl
bound
lret
lahf
rorl
sti
inc
add
mov
sub
push
loope
repz
mov
pushf
or
add
imul
pop
add
sub
incb
pop
cmp
jmp
and
sbb
inc
popa
loope
js
pop
loopne
ret
add
ret
faddp
adc
add
movsb
fwait
rcl
dec
int3
shr
push
cmc
stos
xchg
add
inc
jne
fiaddl
addb
test
sbb
imul
enter
cmpsb
es
xor
xchg
testl
jg
cmpsl
loopne,pt
inc
xchg
rcll
push
sbb
addl
das
aam
out
sbb
idivb
cltd
add
push
xchg
jle
lret
xchg
push
adc
add
les
add
int
or
iret
movsb
push
mov
inc
scas
fs
mov
mov
push
iret
mov
add
push
fcmovu
add
addr16
pushf
xor
or
mov
cmc
push
inc
jb
sbb
sahf
pusha
inc
mov
add
bound
cmc
jge
dec
icebp
xor
stos
cltd
push
add
sbb
mov
enter
mov
cmpsb
mov
push
adc
mov
pop
pop
xchg
jne
rolb
and
mov
cmp
mov
xor
sbb
and
test
sbb
push
aam
test
addr16
cmp
dec
mov
add
adc
rolb
sub
cmp
stos
enter
add
jp
pushf
inc
call
jmp
add
sub
cmp
lock
push
jle
add
shr
clc
or
mov
bound
in
sub
mov
push
cmp
iret
loope
dec
sbb
mov
mov
add
lea
pushf
stos
jo,pn
add
dec
dec
or
imul
add
js
push
nop
cmp
nop
cmpsl
cmp
mov
xor
sbb
rolb
popf
add
add
stos
repnz
adc
fsubrs
xor
jo
sbb
jbe
mov
data16
negb
cmp
repnz
mov
sbb
sbbb
push
ss
jno
mov
add
inc
pop
sub
inc
mov
in
add
xlat
dec
dec
and
lods
mov
addr16
push
repnz
xchg
fistl
test
lahf
fistpll
lods
mov
and
orl
push
add
jnp
nop
push
sub
mov
push
jmp
stc
mov
dec
sbbb
jb
sarb
xchg
or
scas
mov
hlt
pop
add
out
fstpt
add
lock
jp
add
add
xchg
mov
into
cwtl
jo
call
adc
jb
dec
and
add
enter
jo
mov
insl
sbb
je
jmp
sarb
out
jb
rclb
pop
inc
out
add
repz
pop
mov
shlb
outsb
xorl
add
test
cmp
iret
mov
push
scas
addb
pop
sar
lock
not
sub
or
pop
rclb
pop
scas
icebp
adc
jmp
add
sub
add
mov
leave
add
push
les
pop
jmp
adc
lds
xchg
mov
add
das
push
repnz
adc
in
mov
add
pop
ljmp
adc
scas
mov
mov
pop
push
clc
inc
and
add
cmp
add
in
andb
sbb
xchg
pop
test
mov
inc
add
jmp
push
les
xchg
outsl
imul
xadd
sbb
or
sbb
and
rclb
sub
push
filds
pop
test
cmpsb
cld
and
shll
mov
movsb
cld
dec
add
das
leave
jg
add
ror
mov
fildl
int3
jno
loop
ljmp
mov
mov
addr16
ret
mov
fs
add
sbb
mov
enter
lds
push
out
cmp
stos
adc
enter
aaa
sub
pop
mov
jnp
shufps
sbb
in
mov
das
sbb
sbbb
add
push
or
mov
dec
cld
adc
sub
sbb
sbb
aas
repz
hlt
stc
push
mov
jb
dec
sarl
pop
xor
jmp
add
cmpsl
xorl
and
aaa
sbb
pop
add
out
add
jg
fisubl
test
inc
ja
arpl
fldt
popf
add
pop
jmp
enter
pushf
add
mov
cmp
pop
add
mov
adc
fstpt
mov
xchg
mov
cmp
pushf
add
or
jbe
xchg
add
mov
fsubrp
dec
outsb
mov
dec
shlb
ds
or
pop
sub
add
and
verw
jge
repz
in
xchg
test
pop
mov
mov
mov
idivb
int3
add
ds
popa
jmp
push
mov
cmpsl
add
inc
rorb
dec
adcb
mov
xor
inc
movd
pusha
imul
cmpsb
and
lret
testw
test
popa
mov
xor
jbe
out
push
shlb
call
fsubrs
add
and
lock
push
in
test
sbbb
es
imul
add
clc
test
sbb
xchg
xchg
add
jo
loopne
cmc
add
cmpsl
out
adc
jae
cmp
testb
add
dec
test
cwtl
rolb
and
mov
add
fs
test
xchg
add
jo
outsb
cmp
addb
mov
pop
push
imul
cmp
or
mov
mov
xchg
mov
xchg
orb
add
popf
out
es
mov
adc
jno
stos
push
jge
add
subb
pop
xchg
cli
mov
pminub
lea
mov
stos
dec
sub
cld
add
das
or
nop
out
andb
xchg
add
fisttpl
dec
mov
enter
and
mov
andb
fwait
pop
ficoml
cmp
jp
add
jmp
xchg
jae
pop
jle
mov
mov
int3
bound
add
add
fiadds
into
pmuludq
call
sub
inc
loope
adc
mov
shr
dec
rorb
xchg
imul
in
mov
push
sbb
add
sbb
add
and
xchg
lock
addl
add
stos
in
cmp
mov
ljmp
repz
add
add
mov
test
lods
jb
sbb
insb
inc
sbb
xor
mov
add
dec
loope
push
add
or
inc
fcoms
mov
mov
test
int3
mov
mov
hlt
cmp
inc
bound
orb
decb
jmp
inc
insl
loop
lahf
adc
enter
jmp
cld
mov
shlb
andb
jp
or
int
pusha
loopne
add
mov
int
and
mov
or
cmc
sub
xor
insl
shlb
hlt
sbb
mov
push
stos
ret
add
test
sahf
mov
xlat
add
and
test
pop
test
inc
xor
jns
mov
inc
ja
jnp
imul
xchg
clc
mov
imul
add
sub
js
rol
rorl
xor
add
out
cmp
dec
jo
jmp
push
lea
mov
add
jecxz
cltd
pusha
sub
or
bound
stos
sub
mov
or
mov
mov
negb
mov
lcall
sbb
les
inc
movsb
adc
add
and
cmp
cltd
hlt
sbb
dec
lcall
iret
push
push
mov
xorl
cli
addr16
jne
cmp
xchg
call
jae
cmp
sarl
pop
nop
cli
or
jecxz
mov
lret
add
stos
xor
inc
out
packsswb
lock
adc
and
add
ret
mov
jmp
in
xor
movsl
cwtl
icebp
add
mov
cltd
pop
cmpsl
nop
test
inc
hlt
inc
add
pop
test
inc
xor
loop
jmp
arpl
out
add
aam
int
dec
mov
les
xor
jge
add
and
lahf
filds
out
and
pop
dec
sbb
or
xchg
movsl
lret
xchg
rorb
or
repnz
add
xchg
les
push
dec
xchg
xchg
add
dec
add
movsl
in
dec
loopne
leave
add
push
mov
xchg
cmp
add
cld
clc
std
enter
mov
int
int3
loop
sbb
sub
inc
mov
pop
fucomi
aas
pop
or
aaa
xor
push
sbb
mov
adc
fcmovnbe
adc
ja
test
xchg
int3
faddp
cmc
sti
jecxz
add
lea
pop
pop
dec
inc
lahf
lock
add
fidivrl
pop
divb
jmp
cmp
je
jp
lret
add
mov
add
daa
adc
add
add
mov
mov
pop
or
insb
addl
push
mov
or
fisttpl
pop
pop
xor
cmp
nop
jl
adc
push
shrl
pop
shl
mov
daa
les
add
inc
dec
sbb
mov
push
cmp
scas
stos
cmp
inc
leave
sbb
mov
pop
notl
add
adc
xor
add
daa
mov
ret
enter
vpmadcsswd
test
nop
cwtl
js
pop
popf
stos
ja
call
pop
add
clc
add
shll
push
leave
scas
add
ds
out
subb
fnstsw
jno
add
xchg
and
mov
idivl
sbb
lock
sub
jb
mov
adc
stos
add
mov
and
adc
pop
xor
xor
jno
sub
cmpsl
out
mov
jp
scas
in
dec
popf
addb
enter
add
fucomip
fildl
pop
fcomps
mov
test
popf
push
mov
add
pop
mov
push
in
test
stc
add
bound
mov
and
sub
add
dec
add
fdivrl
andb
andl
ds
roll
nop
add
loope
or
out
mov
stc
subb
push
iret
inc
or
adc
popf
add
stc
add
xchg
add
push
mov
pop
mov
outsl
mov
inc
cltd
or
or
xchg
mov
add
xchg
inc
insb
popf
mov
add
dec
jbe
mov
add
out
cltd
add
iret
lods
loop
xlat
rolb
push
in
movd
insl
into
mov
add
roll
call
inc
dec
pop
sbb
pop
add
insb
sub
or
cmp
mov
loopne
or
lods
push
mov
push
rcll
imul
pop
int
xchg
lock
cmp
mov
filds
loopne
sbb
cmc
push
sbb
xchg
xor
dec
fisttpll
dec
add
sbb
je
push
sbb
lds
pushf
xchg
clc
xor
dec
xchg
or
cli
cmc
out
inc
add
jmp
ret
dec
fwait
scas
pusha
inc
push
add
in
clc
iret
and
lret
icebp
sbb
inc
adc
popf
add
ss
jge
xchg
nop
test
push
dec
loop
int3
in
aaa
arpl
stos
stos
add
jne
rorb
cmc
xchg
and
push
std
pop
sbb
fnstsw
mov
daa
pop
dec
loop
add
gs
idivb
cwtl
mov
xor
repnz
mov
dec
int3
sbb
ds
lock
rclb
add
shlb
nop
and
aaa
add
dec
push
mov
and
repnz
sbb
in
testb
dec
or
lods
add
jnp
cld
repz
jge
push
push
jns
jg
imul
sbbl
xorb
mov
sti
add
jmp
sbb
ja
add
adc
add
sub
cmp
or
sbb
fwait
xor
add
ss
push
add
arpl
add
inc
fstps
jo
imul
sbb
pushf
stc
cli
adc
lock
leave
and
xlat
and
nop
cmp
ss
shlb
inc
aam
jae
xor
cmp
pop
mov
pushf
adc
xchg
pop
xlat
add
xchg
mov
inc
and
repz
xor
addl
cmp
ja
add
int3
xor
fcmovne
inc
xchg
mov
cmp
or
mov
push
xor
sbb
push
fdivrp
add
mull
add
aad
nop
and
sbb
mov
add
in
pop
add
ss
inc
jle
add
mov
in
aas
cmp
add
sbbl
mov
repz
mov
sub
and
pusha
or
or
xor
xlat
add
or
cmp
mov
rcrl
pop
pop
xor
test
and
inc
push
add
ret
ljmp
dec
mov
lock
and
inc
sbb
dec
insb
dec
shr
mov
inc
add
xchg
mov
adcb
lahf
cltd
outsb
jns
add
dec
sbb
or
mov
repz
push
test
in
cmc
xor
loop
rolb
pusha
subb
xor
lods
add
pop
adc
cwtl
cmpsl
mov
sarb
or
addr16
mov
dec
js
cmp
add
cli
jnp
ss
int
in
inc
pop
int3
fisttpll
push
lcall
xcrypt-cfb
cmpsl
and
daa
adc
lret
cmova
cmp
push
int3
clc
push
rorl
cs
mov
sub
jmp
add
add
test
rolb
int
add
add
sti
inc
adc
dec
xchg
pop
jns
pop
jne
jge
mov
loopne
mov
es
ljmp
mov
add
add
out
add
xchg
and
popl
xchg
jnp
lods
out
pop
test
cli
imul
sub
mov
pop
sbb
into
xor
adc
js
xchg
add
mov
inc
insl
rcrb
mov
and
aad
jecxz
push
xchg
enter
pop
repz
lock
adc
loopne
cmp
sbb
les
adc
mov
push
inc
jno
sbb
in
incl
fwait
insl
addl
add
dec
and
ret
add
imul
sbb
fcmovnb
xor
or
push
icebp
mov
popf
or
cwtl
mov
cltd
movsb
rorb
enter
stos
loopne
jmp
or
outsl
hlt
iret
repnz
dec
adcb
into
inc
sahf
dec
xchg
es
je
ljmp
and
mov
mov
scas
add
inc
jecxz
cmp
mov
add
mov
fdivrs
add
sbb
cmp
sub
andb
xor
add
inc
lock
inc
push
add
out
add
add
jnp
and
mov
pop
jbe
aam
sbb
pop
popf
scas
mov
add
fdivrp
rolb
sbb
jbe
adc
aam
negb
push
sbbl
rol
mov
xchg
inc
in
inc
in
int3
mov
cmc
repnz
xchg
cltd
sbb
inc
jmp
xlat
xor
std
jg
add
sub
cvttps2pi
cmp
or
add
sbb
add
sti
out
mov
cwtl
fistpll
rclb
add
adc
imul
aam
mov
into
shr
sub
jb
add
fdivrs
cmp
cmpb
aas
add
push
repnz
or
push
sbb
adc
or
add
insb
add
dec
cltd
pushf
cmp
bound
sbb
mov
sbb
idivl
and
call
lret
daa
psubb
and
or
mov
xchg
mov
rorl
and
mov
scas
rolb
mov
das
shlb
push
xchg
or
sub
or
sub
add
xlat
push
hlt
ret
and
pop
mov
add
push
xchg
mov
sub
xchg
add
dec
scas
movb
inc
push
sbb
jecxz
sub
mov
and
cli
sbb
and
aas
popa
ja
sub
rorb
lret
add
adc
cld
xor
inc
add
sarl
jns
add
mov
sbbb
mov
pop
sbb
movsb
add
sub
xchg
outsl
rclb
scas
jno
add
mov
adc
mov
add
popf
andl
push
add
jb
sbb
mov
popa
popa
xor
loopne
add
adc
sub
aaa
addb
das
loopne
add
xchg
or
inc
pop
lock
push
pop
sub
fstpt
add
insb
xchg
int3
jne
cld
lret
add
dec
fadd
popf
sbb
inc
lahf
ds
in
add
pop
outsb
rcrl
cltd
add
jg
inc
add
sub
pop
dec
std
clc
shr
and
add
xor
hlt
mov
sahf
xor
dec
cmp
cmp
add
je
add
fidivs
int3
fdivs
adc
add
jb
pusha
out
clc
adc
jb
add
push
aas
add
xchg
adc
clc
test
or
shll
mov
add
adc
repnz
mov
xor
adc
add
lahf
loopne
das
ret
add
call
jnp
mov
add
ficompl
xor
xchg
xor
add
gs
mov
push
iret
add
movsb
sbbb
addr16
adcl
and
stos
push
shll
add
daa
xchg
add
mov
push
idiv
cmp
aas
push
sub
adcb
int
inc
fildl
test
lret
jnp
pusha
cs
popa
push
jg
push
push
dec
pop
cmpsl
scas
lds
add
out
push
rorb
or
pop
jge
cmp
add
int3
or
idiv
stos
pop
pop
shll
inc
sbb
popf
sti
dec
ret
inc
or
xchg
mov
push
in
in
ficompl
sub
or
adc
mov
fistpll
in
out
stc
test
adc
fs
sbb
ret
pusha
call
movsb
mov
loopne
jmp
andb
mov
jb
rcl
mov
xor
sub
dec
or
cmp
xor
jnp
mov
testb
sti
lods
pusha
fisubs
mov
insb
int
adc
popf
sbb
push
xor
sar
jge
stos
add
mov
sbb
cmp
popa
jns
inc
cmp
add
insb
sub
xor
addb
lods
mov
or
add
xchg
cmp
movsb
dec
aad
out
mov
imul
repz
outsb
loopne
or
outsl
dec
loopne
int3
roll
enter
cld
pop
rcll
pop
xor
lea
and
mov
jmp
jg
mov
pop
xchg
test
fdivl
xchg
das
leave
in
insl
pushf
pop
fistps
cli
mov
lock
fwait
jb
clc
push
incb
je
rcll
add
jg
sub
stos
mov
movsl
xor
add
mov
inc
jb
jae
jp
xchg
scas
repnz
shrb
or
fs
add
movsl
jle
ss
add
inc
add
pop
lds
roll
cmpsb
ficomps
in
pop
dec
cld
jo
add
adc
call
test
cmp
adc
sub
arpl
push
or
mov
jmp
cmp
nop
mov
pop
gs
call
push
push
xchg
aam
sahf
cmp
or
in
xchg
mov
inc
dec
es
shrb
pusha
cmp
bound
add
cmp
sub
cmc
xchg
or
add
pop
and
cmp
adc
fdivr
repnz
pop
jb
and
mov
xor
and
imul
packsswb
dec
out
jp
cwtl
daa
rcll
push
xchg
push
popf
jns
sub
test
xor
cli
lcall
mov
add
inc
add
xchg
mov
sbb
sbb
faddl
fisttpll
cltd
mov
out
iret
fs
call
stos
mov
and
test
pop
add
nop
loopne
xchg
filds
or
mov
lahf
dec
dec
les
fisttpl
rcll
in
bnd
add
nop
add
cs
sahf
insl
jnp
add
and
lret
loope
add
repnz
popa
out
lods
add
pop
es
sbb
xchg
pop
jg
pop
jg
cld
add
mov
mov
les
fcomps
jge
xchg
lods
inc
hlt
cmp
mov
mov
sub
push
ds
rclb
inc
mov
jne
add
js
mov
add
test
addl
lret
faddl
jl
xchg
cli
lret
mov
mov
imul
nop
xor
dec
or
mov
aaa
bound
gs
and
mov
pop
cli
rolb
and
loopne
inc
cmpsb
popf
es
icebp
sbb
int3
add
push
sub
jle
in
and
dec
and
cmpsb
or
fcom
and
jle
test
pop
cli
jmp
inc
lock
add
sub
pop
mov
pop
jbe
js
add
mov
int
add
addl
outsl
fistpl
scas
adc
add
xorl
add
daa
fisubrs
sub
inc
cltd
add
mov
add
mov
test
xchg
cmp
add
popa
je
sbb
icebp
in
sbbb
adc
mov
adc
vmread
xor
pop
cmp
aad
movsb
or
fwait
mov
dec
mov
popa
lret
inc
shlb
push
pop
mov
jmp
cltd
mov
sbb
inc
xor
add
inc
imul
je
cmp
add
call
or
add
loope
and
pop
mov
fisttpll
insl
sbb
sbbb
fstps
test
add
loopne
add
stos
sbb
jne
dec
xor
shll
rol
mov
and
mov
daa
cmc
in
mov
dec
fimuls
add
sbb
sbb
mov
xchg
mov
fildll
paddusb
push
insl
roll
dec
popa
add
xor
js
pushf
add
into
mov
add
fimull
mov
lret
push
sti
scas
mov
adc
and
arpl
xchg
vmulsd
mov
pop
adc
mov
mov
or
jno
fisubrl
sti
pop
call
mov
mov
cs
push
inc
and
clc
add
xchg
add
mov
test
xchg
add
push
je
inc
jne
cwtl
xor
adc
rep
xor
fdivl
and
add
inc
stos
fbstp
sbb
add
add
ljmp
jmp
sbb
cmp
into
mov
clc
xorb
mov
pop
rolb
jae
cmp
fnsave
add
fsubl
mov
sar
sub
add
fs
fisubs
add
adc
push
cmp
rolb
ret
push
shlb
sbb
pop
nop
add
dec
adc
stos
add
jl
imul
inc
sbb
int3
cs
jge
mov
add
imul
add
stc
fldt
or
add
ja
repz
lahf
add
sbb
cwtl
scas
loope
mov
lock
outsl
adc
gs
or
jbe
push
add
test
rcrl
pusha
inc
ret
test
cmp
pop
add
js
aam
mov
inc
pushl
flds
jbe
cli
cmpsb
shl
add
xchg
sbb
add
pop
xorb
cwtl
push
add
pop
std
dec
ret
adc
add
and
ret
pop
sub
sti
push
or
add
int3
fisttpll
sub
call
jge
sbb
adc
gs
pop
mov
sbb
mov
mov
add
jmp
push
gs
mov
push
add
lods
add
jns
loop
add
pop
sahf
pusha
xchg
push
cmp
and
fidivs
jbe
add
adc
ds
add
loop
stos
dec
jnp
cli
mov
pushf
jl
popf
inc
or
jns
fsubrs
dec
xchg
lcall
sub
add
aas
pop
stos
dec
add
in
push
add
and
repz
mov
pop
add
sub
jmp
mov
mov
add
jmp
jae
les
seto
pusha
xchg
and
lods
push
add
add
out
fsubl
subb
xor
mov
rolb
xchg
sbb
xor
and
dec
in
sbb
jl
adcb
sbb
mov
sahf
notl
add
icebp
push
loop
stc
test
push
stos
mov
add
popa
orl
jns
mov
adc
add
mov
aas
nop
les
add
xor
pop
cld
clc
mov
add
lock
xor
insl
mov
int
es
push
fcoml
pop
inc
inc
test
ret
add
fiaddl
in
add
and
push
sub
lods
pop
jecxz
movaps
lret
xor
inc
mov
add
mov
aad
or
nop
pop
xor
mov
std
mov
aaa
xorb
push
xor
adc
push
outsl
dec
mov
inc
std
hlt
gs
sahf
or
fildll
add
leave
loope
add
xchg
push
popa
xor
jmp
orl
inc
add
js
mov
adc
insb
xchg
jb
mov
andb
sbb
xchg
adc
jecxz
push
mov
cmp
mov
mov
fsubrs
dec
push
lea
mull
out
loopne
andnps
inc
sub
aam
and
fdivp
movl
jle
pusha
andb
aad
add
hlt
mov
mov
ja
or
cld
test
lcall
aad
pop
enter
mov
push
repnz
add
repz
lods
idivl
pop
mov
mov
add
out
hlt
adc
loope
je
daa
enter
clc
cmpsl
mov
cmp
dec
orb
pop
push
filds
stos
rclb
xchg
add
add
lcall
out
sahf
sbbb
adc
adc
or
fcmovu
dec
mov
pushf
pop
and
mov
mov
pop
sbb
ja
cld
mov
aam
jo
adc
add
nop
push
jmp
out
add
in
and
je
inc
add
lds
nop
inc
sbb
pop
aad
mov
cmp
or
inc
je
sub
or
and
dec
and
jmp
jp
jne
test
sub
xor
dec
and
add
dec
ds
or
or
lret
mov
fwait
andb
add
popf
sahf
add
mov
and
lret
mov
mov
nop
popf
mov
cli
add
dec
sbb
mov
add
pop
add
inc
add
rol
sub
pop
mov
stc
mov
out
loopne
add
jns
insb
flds
bound
xor
lahf
push
cwtl
mov
push
pusha
cmp
cmpsb
ficoml
jns
sub
xor
mov
pop
fwait
mov
pusha
call
pushf
addb
out
sub
subl
sbb
imull
push
xlat
mov
cwtl
outsl
add
jl
pop
adc
xor
out
and
xchg
cmp
sbb
inc
imul
rcrb
lods
leave
out
in
fidivrs
daa
movsl
xchg
ljmp
add
cmp
in
out
cwtl
lods
mov
cmpsb
rorb
cmp
add
mov
xor
jo
add
cmp
add
rcll
stc
and
sahf
adc
js
add
jns
inc
jnp
cmp
add
and
or
ret
sbb
add
mov
and
movzbl
or
xchg
popl
testb
jns
shll
add
add
xchg
xor
inc
add
adc
out
test
and
pop
adc
mov
jns
sub
fucomp
sub
add
cltd
mov
dec
arpl
jl
push
or
cwtl
sbb
movaps
addr16
sbb
enter
add
inc
pop
int3
xor
repnz
popa
addb
xchg
adc
sbb
mov
int3
stc
addl
in
mov
aad
js
inc
push
shll
pop
lcall
push
pop
smsw
call
push
xor
sub
stos
pushf
roll
fcoms
add
jb
aaa
ljmp
or
add
sbb
and
add
sbb
mov
int
xchg
outsl
xor
push
mov
jg
pop
lret
addr16
addb
mov
and
fisttpll
pop
out
mov
rorl
ret
minps
fsubrl
loope
add
pop
scas
xchg
out
jns
or
lahf
int3
mov
dec
xor
ret
imul
outsb
inc
cmp
add
mov
in
push
xchg
cmp
xor
add
andb
sahf
outsl
das
adc
mov
fiadds
movsb
sahf
inc
adc
pop
push
inc
lds
xchg
loopne
inc
scas
dec
cmp
aam
xor
jecxz
add
add
add
popa
push
es
push
and
xchg
movsb
popf
fadd
push
cmp
inc
xor
int
add
cld
xchg
rclb
sub
inc
aam
les
cmp
dec
mov
or
std
add
shlb
pop
push
add
fwait
clc
mov
pop
cmpsl
push
add
mov
movsl
add
push
sbb
sti
add
jnp
ss
pop
push
inc
dec
cmp
adc
aam
add
sub
xchg
test
cmp
lea
mov
push
xlat
pop
out
push
filds
shll
add
xchg
stos
jae
rcl
fistps
add
pop
push
cmp
jmp
sbb
xor
jg
sub
enter
lock
je
xor
dec
xor
add
inc
push
mov
stc
addb
xchg
push
sti
cmp
lahf
sbbl
shll
mov
sbb
popa
lret
mov
cmp
movsb
subl
mov
clc
add
push
lea
shr
fsubrl
shl
in
xchg
add
ficomps
mov
mov
dec
ror
into
idivl
pop
or
or
jbe
int3
xor
addr16
outsb
adc
out
je
lods
fwait
add
stos
xor
sub
jo
cmp
mov
subb
mov
in
and
inc
and
pop
jo
jmp
mov
add
mov
pop
ljmp
and
je
xor
sbb
leave
aam
add
or
lahf
inc
fdivrs
pop
jo
cmpsl
dec
in
sbb
cmpsb
sbb
add
enter
cwtl
xor
add
test
shrb
sahf
aaa
aaa
jmp
adc
inc
cmpsl
popa
lock
aaa
push
test
cld
and
cmpsb
jecxz
fsubrs
fdivs
sti
sub
cmc
hlt
and
insl
ss
jp
jo
adc
test
xor
and
cmpsb
verr
aad
addb
jne
clc
loop
adc
lock
pop
pop
push
mov
test
jns
jae
fadds
mov
mov
add
sbb
fdivrl
jns
sub
cmc
dec
add
adc
push
shlb
int
adc
insl
adc
add
adc
inc
jl
rolb
inc
add
push
iret
or
jmp
es
jmp
test
dec
pusha
les
xchg
dec
inc
addr16
lock
push
adc
sub
push
xchg
jne
jb
insb
dec
andl
imul
sbb
push
lcall
inc
fs
loope
or
add
mov
jp
push
cmc
icebp
pop
xor
nop
or
or
add
mov
aad
inc
mov
fistpll
mov
fwait
sbb
and
icebp
push
enter
es
sub
lcall
outsl
pop
into
cmp
mov
or
enter
cmpsb
cmpsl
xor
sbbb
insl
aam
push
lods
jo
mov
loop
out
movsl
add
and
add
adc
push
adc
fiadds
pop
cmpsb
movsl
jmp
loop
push
inc
inc
adc
aad
mov
pop
sub
push
xor
sahf
push
in
push
mov
pop
sti
jns
in
movb
loop
and
cmp
sbb
pop
lods
je
jle
add
addr16
repz
jge
repnz
cmp
pop
dec
rclb
hlt
cmp
sbbb
sahf
dec
cmpsl
inc
add
xchg
jnp
fstps
fidivrl
in
pop
call
shll
cmp
mov
cmp
xchg
cwtl
dec
mov
add
and
aas
popf
pop
add
and
mov
adc
xchg
addb
cmp
test
or
shlb
out
add
push
fwait
stos
add
push
fst
adc
xor
out
xchg
iret
add
cwtl
jae
xor
push
cld
add
dec
pop
iret
scas
mov
and
add
mov
lods
aaa
shr
push
int
rol
sbb
js
sbbb
and
hlt
xchg
add
je
mov
push
cmp
out
ja
sbb
fcomip
fmuls
es
pop
les
dec
outsb
pusha
outsl
push
ja
adc
pop
data16
push
inc
stos
fcompl
cmp
imul
jns
adc
sbb
aad
or
xor
dec
mov
lcall
dec
dec
outsl
push
dec
jp
fistpll
ret
stos
add
sub
sub
xor
add
cmp
ljmp
div
call
push
jecxz
inc
les
inc
test
jb
add
mov
xchg
xchg
shrb
or
add
and
fwait
in
inc
jmp
aaa
outsb
xchg
dec
call
push
add
addl
cwtl
sahf
dec
fcmovu
cmp
repz
mov
xchg
push
lock
add
test
push
add
in
xor
addb
fdivrs
les
js
fisubl
or
sarb
test
adc
test
inc
jae
or
test
pushw
cmp
out
inc
inc
xchg
arpl
in
xchg
cwtl
add
mov
or
outsb
cmc
adc
jge,pn
xchg
aam
pop
lods
lods
cs
sub
xlat
xchg
jecxz
out
repnz
xor
cmp
std
scas
ds
cmpsb
or
push
stos
mov
mov
xchg
xor
test
jo
lea
xchg
cmpsl
shll
pop
stc
sarl
loopne
ljmp
out
mov
loope
arpl
out
sbb
sub
sbb
jl
dec
inc
add
and
xlat
loopne
je
jp
xchg
sahf
fists
rolb
push
mov
push
add
int3
lahf
inc
add
dec
cmp
mov
addb
push
xor
ss
loope
leave
mov
or
push
pop
incb
push
into
add
ja
insl
push
call
mov
mov
fsubr
pop
cmpb
testl
subl
or
sbbb
les
shlb
push
sub
shlb
pop
xor
mov
xor
mov
or
arpl
loopne
cmp
aad
gs
and
aam
pop
mov
lods
mov
xchg
sbb
iret
pop
rcrb
dec
mov
add
mov
repnz
test
stos
xor
push
sbb
sub
stos
adc
pop
arpl
adc
add
test
add
add
xchg
sub
adc
or
in
xchg
outsl
mov
xchg
nop
mov
mov
repz
sbb
mov
or
adc
mov
repnz
mov
inc
pop
imul
rcll
syscall
stos
loopne
add
jl
add
popf
sub
clc
jb
inc
cli
sbb
lock
push
loopne
mov
std
pop
stc
movl
or
mov
dec
daa
add
jnp
int
fadds
xor
imul
out
dec
sub
mov
int
cmp
fiadds
hlt
xchg
in
mov
int3
add
stc
cmp
mov
mov
divb
js
adc
pop
adc
fildl
add
dec
mov
mov
in
and
add
add
imul
mov
andl
push
lret
mov
pop
stos
je
idivb
add
and
int3
push
adc
or
add
out
jmp
and
jb
outsl
lret
inc
fs
dec
or
sbb
lahf
cmpb
jns
mov
movsb
test
fdivrl
adc
inc
add
pop
add
test
rorl
push
xor
jecxz
sbb
jp
add
rorl
out
loopne
push
iret
fadd
outsb
aam
sub
mov
push
fidivrs
jnp
les
sbb
test
inc
in
icebp
repz
jno
jae
or
insl
pop
imul
push
fcompl
add
pop
pop
add
enter
pushf
imul
xor
in
push
and
loope
fcomps
or
pop
lret
sbb
inc
leave
mov
pop
add
sub
push
mov
mov
daa
dec
xor
cltd
and
das
loopne
cltd
push
jecxz
inc
push
xor
aas
stos
mov
idivb
sbb
dec
pop
jp
in
inc
rcrb
adc
pop
push
add
jo
add
mov
movl
or
ret
stos
cld
divl
sub
pop
add
adc
add
in
stc
je
add
fwait
xor
mov
xorb
mov
iret
ljmp
pop
xchg
inc
push
rorb
add
repz
in
pop
ljmp
sar
fildl
das
cs
popa
dec
scas
mov
mov
sub
and
leave
xchg
nop
int3
repz
cmpsb
jne
shrl
pop
mov
leave
sbb
adc
push
imul
xchg
rcl
popf
sbb
filds
xchg
pushf
in
lods
inc
lret
negb
in
push
add
xchg
repnz
add
out
test
pop
cmpb
ja
push
add
jmp
movsl
jg
jnp
add
icebp
mov
mov
bound
push
xchg
pop
xchg
daa
nop
fs
adc
add
das
lret
popf
jg
add
cli
adcl
aad
clc
add
jecxz
cmp
xchg
add
mov
lock
xchg
loop
add
ss
imul
sbb
out
mov
nop
pcmpgtb
xchg
push
clc
mov
aas
ss
adc
out
negb
out
mov
sub
xchg
xlat
inc
jae
sbb
out
fwait
enter
mov
cwtl
es
or
dec
aam
add
dec
faddl
dec
hlt
xor
push
mov
mov
iret
sub
lcall
ljmp
push
clc
cs
mov
lahf
xchg
nop
inc
and
jge
aaa
jno
cmp
lret
aas
dec
xlat
cwtl
stos
jp
test
notl
mov
loopne
arpl
cmp
add
xor
les
dec
shll
aam
push
add
int
push
rclb
add
mov
stc
jge
fsubs
and
es
cmp
stos
addb
add
fcmovu
jle
fs
mov
and
aad
aas
add
cmp
push
movsb
push
or
inc
cltd
leave
push
sub
add
add
jbe
mov
les
jmp
mov
cs
ljmp
sub
or
xor
mov
pushf
add
inc
movb
xchg
enter
pop
inc
mov
mov
cmp
pop
fs
out
fbld
mov
add
pop
movsb
adc
aad
ret
pop
sti
xor
inc
cmp
in
xor
inc
mov
dec
dec
sahf
xor
or
rorb
dec
popf
jno
ds
xchg
xchg
sub
fbstp
in
mov
jecxz
mov
sbb
mov
mov
dec
f2xm1
add
fsubs
or
push
jmp
add
push
sbb
addr16
testl
and
cmp
add
pop
add
cwtl
loopne
outsl
dec
mov
jne
jnp
out
mov
repnz
mov
lods
xor
dec
mov
mov
cli
xor
in
insb
lock
mov
add
or
pop
dec
lret
add
shrb
cmp
roll
stos
mov
sti
mov
repz
cmp
stc
push
fildll
int
lcall
dec
pop
jnp
add
scas
movsl
inc
jl
add
pop
lea
jg
mov
aaa
add
pop
mov
pop
push
mov
pop
dec
lock
loopne
add
out
test
fadd
clc
adc
or
add
add
test
mov
push
sbb
fidivrl
aad
ja
jo
adc
or
cmp
sub
cmpsl
ds
fstpl
inc
jmp
add
pop
decb
xchg
cmc
and
sub
add
repz
lret
jnp
bound
cwtl
sub
push
jmp
out
popf
shrb
add
cld
sbb
xor
and
addr16
or
mov
jmp
jne
dec
xchg
fsubs
mov
sub
cmp
enter
cmp
icebp
adcb
out
stos
add
and
mov
mov
add
pop
sub
repz
das
mov
adc
lret
out
cmp
add
sub
mov
jae
ljmp
add
and
pop
ret
add
xor
repnz
into
inc
or
push
jmp
mov
jns
insl
outsl
movsl
sub
add
lds
jg
scas
inc
pusha
jmp
gs
cmp
int
out
push
add
adc
inc
inc
xor
lock
mov
loopne
jbe
sub
cmp
and
subl
inc
test
lret
jl
or
xor
mulb
data16
rorb
cli
pop
xor
add
mov
insb
pop
pusha
mov
add
cmp
out
cld
cmp
icebp
test
xor
add
out
or
mov
mov
mov
xchg
push
inc
cld
dec
shlb
insb
outsl
or
add
mov
dec
cltd
lods
push
add
dec
stos
cmp
lods
sarl
mov
ds
movsb
inc
add
pop
cmp
es
sbb
mov
shlb
arpl
cmp
pop
lret
jl
pusha
xlat
call
cwtl
add
mov
clc
add
jge
or
mov
enter
addb
fcoms
add
test
aaa
pop
lea
xlat
mov
or
filds
daa
add
rcrl
sahf
mov
dec
popa
jbe
mov
lahf
lods
jno
add
adc
jg
push
incb
call
out
cwtl
add
divb
jg
cmpsb
jp
add
dec
or
push
arpl
popa
negb
add
push
in
and
mov
roll
xor
push
call
jbe
mov
ret
add
cld
loopne
repz
into
adc
or
aaa
jecxz
jg
lock
xchg
adc
inc
mov
push
je
sarl
sub
or
mov
enter
pop
popa
sub
pop
jbe
add
mov
nop
add
inc
popa
out
das
sarb
add
test
mov
inc
fcoms
movb
jg
cmp
xor
inc
inc
int
mov
mov
test
into
pushf
pop
add
jo
adc
jl
push
or
test
cwtl
xor
jmp
xor
les
out
xor
dec
push
add
rcrb
add
cmp
sbb
enter
or
adc
out
xchg
bound
xchg
enter
outsb
ljmp
cmpsb
test
mov
add
cmp
sahf
pop
test
lods
pop
pushl
xchg
add
dec
mov
add
lahf
push
xchg
mov
lret
xchg
jmp
dec
paddusb
mov
std
add
int
sbb
cmp
jle
jp
sbb
mov
or
andl
adc
lret
sarb
jbe
cwtl
stos
xor
fwait
pusha
xor
mov
iret
int3
mov
xchg
cmp
in
adc
push
pop
sub
push
and
adc
add
inc
data16
mov
and
add
jns
and
or
push
test
ds
cmp
lods
mov
pop
dec
ret
sub
push
mov
test
test
adc
mov
mov
mov
xchg
pop
or
add
into
outsb
smsw
inc
push
sub
pop
repz
popf
cmc
jp
add
insb
push
shlb
push
xchg
js
add
cmp
inc
cmp
sub
pop
movsl
jg
aas
mov
cs
add
mov
scas
mov
pop
popf
int
or
or
enter
bound
add
pop
popf
pusha
adc
add
icebp
or
lock
mov
and
or
add
adc
int
pop
cmp
jbe
push
int3
insb
pop
lods
cmp
pop
out
jl
push
add
je
mov
jae
pop
fs
cmc
in
shlb
pop
xor
shlb
into
pop
pop
push
xchg
dec
and
jg
icebp
enter
js
push
arpl
add
in
cmpsl
and
and
cmpb
in
sub
mov
or
sub
pop
insb
jns
sbb
add
sbb
push
lds
sbb
pop
aas
bt
dec
push
add
cld
mov
loop
pop
xchg
dec
call
data16
cmpsl
add
in
pusha
pop
cmp
add
pop
mov
scas
sbb
pusha
jmp
add
xlat
pop
jge
bound
loop
fstp
rcrb
cmp
into
add
push
ss
loopne
add
pop
push
aam
orb
aad
sub
arpl
cmc
fstl
lds
add
add
mov
flds
and
mov
lock
sbb
call
push
out
xchg
and
rclb
jno
and
addb
jmp
fbld
je
adc
pop
mov
mov
mov
dec
sub
ror
mov
stc
repnz
xor
shlb
xor
lret
jb
loop
cmpb
sub
sarb
loope
add
pop
sub
cmp
add
mov
mov
sbb
sbb
xchg
in
inc
cmp
push
out
insl
mov
ja
jns
fbstp
cld
inc
and
dec
inc
dec
mov
fcomps
xor
fs
pop
sbb
sbb
bound
mov
js
add
push
stc
cwtl
aam
mov
mov
pusha
fadds
daa
lahf
mov
dec
jecxz
shrb
add
pop
mov
mov
sbb
xorl
inc
xchg
add
ret
jnp
add
mov
sub
and
add
mov
outsb
sahf
push
mov
ljmp
inc
ret
add
pop
filds
pop
cmp
aaa
pop
and
xchg
push
mov
pop
sub
out
out
daa
fnsave
lods
push
mov
pusha
push
ja
jo
or
test
mov
ds
jb
xchg
jge
lret
mov
repnz
sarl
test
cltd
jnp
filds
cmp
add
jmp
ret
clc
inc
pushf
out
cwtl
or
mov
dec
mov
fstpl
mov
sbb
and
aam
pop
rorb
inc
jp
imul
jns
add
sbb
mov
jbe
dec
bound
cmp
jne
xor
or
and
enter
hlt
sbb
cmp
jb
sub
mov
add
fucomi
mov
add
mov
adc
lahf
pusha
mov
mov
xor
fcmovnbe
push
sti
es
stc
pushf
mov
pop
mov
enter
cmp
add
shl
jo
pop
clc
adc
faddl
sbb
out
dec
leave
or
push
cmp
std
dec
mov
mov
mov
call
dec
xor
mull
cmp
push
push
inc
es
mov
pusha
imul
add
ds
jmp
inc
jg
mov
orb
sahf
dec
jb
adc
andb
icebp
mov
pop
mov
push
into
mov
or
and
sub
roll
test
js
dec
inc
dec
pop
sub
mov
add
push
jno
add
cmp
rcr
mov
jo
sbb
pusha
inc
inc
mov
sahf
cltd
add
popa
sub
pusha
add
sub
outsb
and
leave
push
clc
add
mov
imul
inc
repnz
insb
popf
sub
and
adc
ja
push
sbb
mov
dec
imul
mov
out
mov
or
outsb
test
inc
xor
push
xor
insb
sub
lahf
mov
jmp
inc
or
sub
and
or
mov
mov
lret
and
mov
sbb
sti
out
std
add
lahf
dec
orb
lods
ficoms
std
add
mov
sbb
aas
stc
add
and
push
push
jae
fs
ja
cld
adc
jo
push
or
pop
daa
cmc
aam
mov
test
mov
add
jp
das
rorb
sbb
mov
or
jge
mov
movsl
inc
outsl
in
fidivrs
cs
and
clc
leave
push
orl
test
lea
and
mov
xchg
add
adc
ret
repz
add
inc
inc
pusha
call
jle
pushf
or
or
scas
and
dec
dec
sarb
jae
xor
xchg
push
push
add
loopne
flds
pusha
test
lods
xor
or
pop
dec
add
gs
add
xor
add
loopne
in
or
xor
or
gs
cmp
push
xchg
push
decl
add
mov
or
sub
pop
popa
jl
add
or
inc
shrb
lea
or
outsb
cmpsl
in
je
mov
fcoml
jle
mov
and
add
push
or
sub
loop
inc
daa
push
and
mov
adc
add
flds
cs
shlb
push
xchg
clc
ja
sbb
mov
sar
jne
js
add
loop
imul
sbb
jbe
add
pushf
sbb
add
adc
adc
xchg
and
rcr
add
roll
ror
inc
movsb
add
imull
jae
xchg
fcomps
mov
dec
add
inc
das
std
push
pusha
in
cwtl
add
jns
mov
test
stc
in
sub
int
xor
divps
popa
xchg
mov
add
add
or
and
lock
add
jge
xchg
add
icebp
nop
data16
mov
popf
cs
mov
mov
sub
add
xor
and
cmpb
mov
add
push
push
pop
xchg
xor
add
cltd
mov
add
loopne
xchg
pop
aaa
repnz
inc
push
add
or
shl
idivl
clc
mov
or
push
push
mov
inc
daa
mov
mov
es
pop
test
jp
mov
sbb
mov
lea
inc
inc
cld
data16
or
fnstenv
lods
mov
fidivs
jo
pop
or
loopne
mov
add
fistpll
inc
fs
push
mov
xor
or
add
add
sub
shlb
icebp
rdmsr
mov
add
inc
sub
sahf
movsl
mov
inc
xor
jmp
das
dec
mov
sbb
fidivrs
inc
add
jle
mov
add
test
xor
add
ret
mov
and
or
mov
sbb
add
add
loop
dec
xor
add
push
push
jecxz
rcrl
aaa
xchg
add
mov
scas
in
add
jae
addb
fdivrs
sbb
and
cmp
pop
es
inc
lret
pusha
mov
or
adc
es
or
pop
jb
add
pop
dec
xor
pop
push
add
in
and
fistps
add
imul
ljmp
and
cld
xlat
out
fs
nop
nop
xor
xor
mov
int3
jb
add
adc
cwtl
into
pop
and
mov
add
icebp
cli
fmuls
or
aas
jb
jns
xlat
mov
and
mov
in
add
inc
jl
or
in
add
sub
fdivl
rorb
jg
mov
cmp
in
pusha
xchg
scas
lcall
popf
mov
xor
sub
stc
mov
inc
pop
scas
jns
fwait
jae
mov
lahf
aaa
mov
add
in
xchg
in
test
scas
call
push
stc
es
leave
sub
in
and
add
cld
or
out
mov
int
dec
daa
fsubrl
push
pop
mov
inc
add
xor
or
and
cmp
fcoms
bound
pop
add
push
mov
into
add
iret
rcll
mov
xchg
sub
daa
mov
loopne
aas
add
arpl
mov
fxch
sarb
setne
and
aas
jecxz
push
xchg
add
or
stos
or
sahf
add
int
jbe
jp
pop
add
lret
jne
jle
jne
xor
add
shl
jmp
or
xor
jle
dec
sbb
pop
pop
adcb
adc
pop
add
and
and
and
ret
xor
scas
lods
sbb
in
push
mov
mov
cmp
call
add
push
imul
test
sub
xor
lret
sub
test
rclb
in
mov
push
popf
adcb
xchg
andb
and
movsl
inc
scas
add
and
add
xchg
imul
mov
filds
jp
mov
sub
ja
nop
outsb
out
cmc
lahf
jmp
or
and
push
cwtl
pop
sub
dec
fldcw
dec
icebp
loopne
xchg
pusha
add
and
mov
mov
loopne
mov
mov
sbb
adcl
ret
mov
add
scas
push
test
add
fcmovb
in
stos
incb
outsb
lds
or
sbbb
add
shr
pop
cwtl
pop
addb
mov
sbb
les
mov
inc
nop
pop
jns
cmp
add
and
aam
pop
sub
popl
jae
inc
add
test
je
fadds
ja
pop
fs
jbe
mov
movsl
inc
addl
push
mov
push
cs
dec
sub
jo
add
cwtl
add
in
push
cmp
lods
sbb
sbb
jle
into
add
add
adc
jge
mov
add
fimuls
lock
inc
mov
mov
mov
add
add
jmp
inc
imul
and
dec
xchg
add
rcl
aad
adc
mov
ljmp
dec
mov
jns
add
mov
insl
add
lock
mov
mov
push
cmpsl
or
into
add
mov
call
push
xor
mov
xor
rcl
push
testb
pop
and
sub
test
add
jnp
into
sub
int
mov
jl
sbb
je
repz
loopne
das
rcl
ja
cmpsl
movsl
pushf
imul
bound
jo
inc
cmp
push
xchg
insl
mov
add
lret
fstpl
jecxz
call
mov
push
add
push
xor
add
cmp
mov
xor
push
daa
mov
pop
and
mov
add
lcall
cmp
jg
lods
dec
movsb
clc
es
add
loopne
xchg
cmp
add
pop
xchg
call
xchg
pop
pop
out
movsl
loope
xchg
out
outsl
sub
push
add
les
add
fnsave
mov
loopne
fdivrs
add
mov
jno
add
leave
or
xor
loop
div
mov
xchg
roll
mov
orb
add
bound
pop
xchg
pop
xchg
in
loop
add
pop
mov
nop
faddl
fldl
dec
xchg
add
sbb
int
mul
hlt
add
popl
xlat
pop
ret
xor
add
sbb
push
push
dec
add
out
xchg
cwtl
lsl
xor
test
nop
sarb
sahf
dec
es
adc
outsb
mov
dec
out
jbe
add
cltd
pop
mov
add
adc
popf
stc
hlt
push
add
arpl
fistpl
out
xchg
in
mov
cmp
push
mov
lret
dec
inc
add
push
test
xchg
nop
test
xchg
add
jl
mov
add
je
add
lods
xor
add
pop
mov
fistl
cltd
xchg
rolb
jmp
fs
popa
iret
push
push
add
mov
adc
fstps
add
pop
push
jo
inc
roll
dec
mov
add
pop
addr16
mov
cmpsl
add
add
int3
jns
stos
rolb
inc
loop
sub
mov
push
add
lods
shrl
add
mov
sub
imul
scas
daa
cld
jp
enter
add
leave
xchg
jnp
add
xorb
xor
aaa
lods
mov
sbb
shrb
xor
jae
mov
or
test
push
gs
hlt
mov
add
lods
stos
xor
xchg
add
sub
test
cmpsl
add
cwtl
push
xchg
jmp
mov
ret
dec
add
es
repz
xchg
daa
aad
adcb
jne
or
add
imul
cmp
fwait
je
sbb
and
pop
xchg
repnz
add
jg
pushl
add
jno
pop
int3
into
push
sub
ja,pt
ficomps
out
cmpsb
adc
cld
pop
dec
popa
push
mov
dec
out
shrb
bound
mov
jge
add
mov
pop
addb
fcmovnbe
ret
aaa
shlb
fwait
xchg
insb
cmp
push
add
es
rclb
lock
negl
add
dec
lcall
lods
cmp
faddl
incb
out
addps
bound
xor
out
jp
dec
test
push
fistps
xor
push
pop
ss
mov
pop
in
out
ljmp
iret
and
xchg
add
push
jns
lcall
ja
cli
mov
mov
push
in
das
add
and
add
add
inc
jp
pop
pop
or
add
ja
loopne
aaa
dec
xchg
divb
ss
cmp
flds
xchg
fbstp
pop
ja
add
sbb
out
cwtl
cltd
push
repz
cmp
or
push
cld
into
movsl
jno,pt
add
stos
push
outsb
lock
rclb
add
jns
sbb
lcall
xchg
pop
push
jge
add
fwait
push
sbb
xchg
pop
push
xchg
mov
in
or
std
adc
in
and
rcll
fxch
push
and
or
cmp
orb
add
in
mov
add
bound
clc
sbb
pop
xchg
add
lods
cmc
inc
mov
push
add
push
mov
mov
call
xor
sbb
push
push
add
jns
loopne
test
jnp
sbb
cltd
pop
cmp
add
xor
sbb
dec
inc
outsb
add
mov
push
popf
jecxz
xchg
add
adc
test
idiv
loopne
add
sbb
in
sbb
dec
cmp
or
inc
fimull
and
in
mov
cmc
rcrl
push
cld
pushf
lcall
xor
xlat
iret
inc
xchg
adc
dec
fsubrs
mulb
ja
push
mov
push
loope
ror
adc
jmp
mov
sub
mov
cmp
pop
and
cmpsb
cmp
sbb
out
add
arpl
sarb
dec
sti
add
sbb
xchg
outsl
and
or
rcrb
mov
add
xlat
jmp
es
out
add
pusha
jmp
add
testl
gs
pop
pop
mov
pop
inc
add
push
adc
jns
add
sar
push
rcll
add
mov
into
add
xor
mov
fwait
iret
xor
push
add
sub
add
mov
std
push
rcrb
sub
pop
pop
jne
pop
fstpt
movl
pop
sub
xor
fidivs
or
out
rcrb
sub
bound
push
fnstcw
jmp
dec
clc
dec
in
add
pop
sbb
loop
add
and
jge
mov
rcrb
push
add
sbb
fistpll
add
inc
mov
loop
sub
jne
jge
add
aam
push
sbb
lret
call
mov
or
out
ds
add
jmp
in
jl
add
dec
pop
not
popa
add
divb
cli
jnp
add
push
js
or
xor
mov
xlat
add
insl
idivl
shlb
push
add
mov
lahf
dec
jp
add
pop
add
pop
dec
or
inc
clc
in
repz
les
test
icebp
xchg
or
add
inc
dec
sub
or
adc
pusha
in
notb
push
push
xchg
inc
ja
jg
jp
xchg
push
adc
dec
cs
dec
aas
add
adc
inc
or
flds
jno
cltd
lock
or
and
je
flds
mov
sbb
dec
mov
add
cwtl
adc
mov
rolb
ret
and
add
push
jg
aad
cmp
out
sbb
pop
jecxz
scas
pusha
lock
rclb
outsb
pop
pop
lods
je
pop
std
jecxz
add
add
fnstsw
add
xlat
add
sbb
lds
imul
mov
and
loope
movsl
repz
add
inc
mov
jno
add
pop
fs
mov
cmc
push
add
inc
enter
subb
push
shrl
popf
xor
cs
adc
insb
mov
in
int
cmp
add
add
jae
inc
arpl
fidivrs
add
mov
popf
add
decl
mov
or
dec
lcall
jns
push
pop
mov
out
leave
jle
js
jle
push
into
inc
push
mov
std
and
mov
ror
lea
ss
jle
lds
add
xchg
lods
sbb
mov
loope
add
cmpsb
lahf
cmp
xchg
pop
pop
mov
sub
mov
adc
sti
push
sub
inc
cmp
jae
jae
add
jae
into
fdivr
inc
add
push
test
icebp
add
shlb
dec
cmp
add
scas
sub
sbb
loope
in
cmp
outsb
in
clc
xor
in
cmp
arpl
sbb
jno
and
aam
add
sbb
movsb
gs
adc
add
hlt
push
mov
loop
nop
xlat
pusha
test
adc
movsl
adc
push
test
je
pop
std
mov
aaa
mov
cli
aas
adc
jb
add
rorl
inc
in
faddl
and
inc
cwtl
add
rolb
jbe
ljmp
mov
sub
adc
push
rol
sbb
inc
adc
or
fdivrl
add
dec
pop
sti
add
stos
rcrl
mov
dec
push
js
inc
pop
and
jecxz
sbbb
cmp
ss
cmp
out
adc
add
mov
pop
add
hlt
add
ja
pop
scas
test
add
inc
and
add
lret
sarb
add
xchg
arpl
jb
lldt
cmp
xor
dec
jl
es
inc
add
dec
and
or
xor
xchg
xchg
in
jle
cmp
orl
popf
movsb
or
pop
int3
dec
add
rcl
sbb
aam
adc
lods
sbb
sarl
mov
or
test
cmpsl
add
aam
dec
add
push
xchg
and
sahf
imul
mov
cmp
add
mov
mov
or
jp
add
and
into
mov
adc
jne
mov
add
and
es
aas
pop
ja
das
fiaddl
jp
icebp
loope
dec
and
jne
inc
cmp
out
pop
sub
mov
xor
pushf
adc
cli
dec
adc
and
and
bnd
push
leave
cmp
jbe
dec
mov
jnp
or
lret
movswl
inc
pop
ljmp
add
js
fidivs
clc
jmp
sub
mov
xor
addr16
or
sbb
outsl
sub
xchg
sub
mov
out
mov
inc
ret
pusha
test
jae
imull
cmp
clc
test
cmc
sbbb
xchg
filds
test
nop
push
in
inc
sbb
push
pmaxub
loope
insl
pusha
lea
cltd
xchg
cs
popf
inc
mov
jno
cmpsl
aad
xor
mov
sub
pop
add
f2xm1
bound
imul
ret
add
dec
int
add
cmp
cwtl
jecxz
sbb
xor
cmc
sub
add
out
cmp
adc
sbb
jmp
add
adc
sbb
cmpsl
add
movsl
or
inc
mov
dec
shrb
jne
xchg
mov
xchg
mov
add
push
notl
xor
push
adc
inc
loope
pop
pop
inc
pop
setbe
add
inc
push
cmp
or
and
flds
push
dec
add
psllq
mov
faddl
dec
cmpb
mov
adc
push
loop
std
ror
mov
shlb
ret
scas
add
sbb
sti
or
sub
or
int3
movsl
and
inc
fisubs
mov
xlat
sub
loop
sub
pusha
inc
add
mov
inc
and
mov
jno
add
adc
dec
and
in
pop
add
and
loopne
add
adc
sub
fnsave
add
sbb
add
pop
insl
sbb
inc
mov
in
xchg
adc
xchg
sbb
add
mov
lret
add
mov
add
jmp
mov
jecxz
pop
add
mov
stos
jbe
adc
mov
inc
lret
add
or
fwait
add
xchg
mov
xchg
mov
xchg
sub
ljmp
push
jp
insb
xchg
add
dec
decb
cmp
lock
push
sub
rcrb
or
aaa
rcrb
push
data16
pop
pop
sbb
mov
adc
jmp
popf
dec
cli
pusha
push
cmovg
lods
sarb
add
sbb
add
fmuls
xchg
xchg
das
sub
push
push
add
rorl
sub
clc
inc
shld
or
cwtl
loope
push
mov
cmp
loopne
add
mov
push
imul
test
mov
addr16
pop
mov
push
stos
cmpsl
sub
push
faddl
dec
pop
and
jne
cmc
mov
sbb
mov
lret
add
adc
fstpl
cmp
aaa
cmp
ja
movsb
inc
push
inc
es
out
movsl
nop
fsubrl
bound
fcoml
outsl
cmp
or
pop
push
push
and
pop
dec
aad
add
sub
mov
je
outsb
push
sbb
dec
xchg
add
mov
gs
push
cmp
mov
lcall
sbb
inc
pop
jge
add
sbb
ret
mov
sbb
or
fmuls
test
cmpsl
lods
imul
js
or
enter
xchg
add
shl
or
outsb
ss
aas
int3
ror
add
fcomip
add
sbb
mov
xor
and
and
cmp
jge
add
into
pop
rolb
loope
and
add
push
lock
adc
pop
sub
ja
arpl
xor
aas
pop
loopne
sub
ja
add
lcall
fdivrl
outsl
in
cmp
mov
js
pop
dec
xlat
ja
push
adc
scas
xorb
add
cmpsb
out
add
fcomps
push
divb
enter
icebp
add
cli
xchg
outsl
pop
push
popa
cmp
pop
add
sub
hlt
stc
addr16
push
push
adc
aam
cmpsb
pushw
mov
add
mov
add
in
cpuid
cli
jle
add
sbb
inc
cmp
scas
outsl
add
test
push
psubd
add
das
sub
cvtdq2ps
pop
fdivrp
add
inc
mov
ss
lods
je
fwait
mov
decb
mov
jae
and
ljmp
jge
and
push
xor
jg
cs
xor
adc
add
push
or
push
push
jmp
adc
cmpsb
adc
mov
loop
popa
adc
jne
add
push
add
sbb
pop
pop
cmp
pop
pop
sar
xor
sbb
push
cwtl
mov
test
pusha
mov
repnz
lahf
xchg
push
cmp
adc
adc
fwait
in
xchg
add
xor
xor
mov
aas
mov
fdivr
sbbb
xlat
testb
arpl
push
mov
mov
clc
lret
fistl
xor
xchg
jbe
enter
repz
adc
pop
rol
repnz
mov
jp
loopne
pop
mov
jne
xchg
xchg
mov
and
and
movsb
jg
pop
cwtl
sub
jmp
mov
dec
push
cwtl
sahf
das
leave
add
or
addr16
scas
outsb
je
push
imul
add
jp
cld
push
add
stc
pushf
sub
xchg
incb
sahf
mov
sarl
push
stos
push
lods
insb
pusha
out
pop
test
sbb
xlat
fidivs
push
stc
stos
sbb
xor
jo
ja
sbb
add
mov
push
stos
mov
repz
mov
inc
loope
adc
cmovge
enter
add
cmc
mov
rolb
fistpl
jmp
xchg
sub
add
pop
push
add
or
lock
rolb
mov
mov
loopne
testb
adc
jp
jmp
das
dec
pcmpgtb
lock
mov
cmp
int
sbb
les
push
jnp
je
outsb
jl
pop
mov
movsl
hlt
cwtl
pop
pop
pmaddwd
mov
push
add
frstor
cs
dec
enter
mov
sub
dec
leave
aad
loope
and
pop
cmpsl
dec
cld
cld
add
xor
jmp
aaa
inc
push
lret
adc
or
mov
sbb
dec
sbb
mov
test
add
push
arpl
sbb
jp
jb
rolb
add
push
test
jmp
push
jb
dec
sarb
add
lods
mov
pop
iret
lock
jnp
pop
add
out
xchg
pop
addb
fisubl
push
push
cs
jmp
add
sti
mov
into
and
outsb
fisubl
xor
add
xor
push
pop
xor
daa
in
add
in
imul
movsl
pop
icebp
push
cmp
loop
stos
call
cmp
cmpsl
leavew
pop
xor
add
rcll
xlat
add
std
out
mov
test
mov
push
pusha
adc
ljmp
push
mov
add
mov
cltd
or
bound
dec
mov
data16
ja
in
les
pop
or
and
jne
mov
add
mov
cmp
cli
cld
xchg
cmp
and
inc
xsha256
cmpsb
nop
mov
sahf
add
test
mov
adc
pop
sub
mov
jo
scas
pusha
and
adc
cmp
xor
or
cmp
stc
repnz
aas
add
sub
cmp
cmp
data16
ja
and
lods
sbb
add
cmp
dec
xchg
cmpb
mov
add
or
mov
std
outsb
loopne
push
or
jp
add
push
in
jo
jl
add
call
cmp
pop
shrb
xchg
pop
cld
xor
dec
lods
jle
inc
add
xchg
cmp
in
pushf
mov
cmp
add
pop
loope,pt
pop
js
sub
or
dec
or
testl
push
ret
jmp
xor
orl
imul
jbe
xchg
int3
xor
int
testb
fadds
push
ja
dec
mov
mov
testl
jne
and
cmp
xor
out
mov
rolb
popa
add
push
xchg
lds
movl
dec
mov
add
cmp
add
inc
repz
sbb
or
out
mov
xor
rorl
nop
ljmp
add
repnz
pop
jb
hlt
add
cs
dec
mov
andb
mov
or
push
lea
and
rcll
mov
stos
cmp
mov
push
mov
mov
push
test
add
fiaddl
mov
fldenv
mov
std
je
inc
mov
and
fcompl
hlt
push
jne
pop
loop
lret
push
jg
lods
inc
xchg
add
es
mov
dec
jle
dec
jae
add
loopne
add
outsl
push
in
push
or
cld
push
jbe
cmp
push
iret
ret
add
jne
stc
shll
xor
cmpsl
xchg
dec
pop
lds
push
push
add
das
lcall
popl
addb
add
rcll
and
out
jecxz
insl
sub
mov
movhps
pop
pop
cli
clc
jae
add
lds
jb
mov
adc
sbb
jmp
repnz
pavgw
or
xor
pop
adc
mov
add
in
push
enter
xor
pop
push
mov
mov
shr
cmp
scas
jno
or
sub
test
enter
add
sub
fists
pusha
xor
cmp
add
fxch
negl
adc
mov
add
cwtl
push
pop
cmp
rolb
adc
clc
add
aaa
mov
cs
movsb
add
fisttps
add
sbb
jne
sub
sbb
add
rep
push
das
pop
pop
and
rorb
ja
in
push
rcl
push
mov
aas
add
lds
dec
rcll
dec
mov
cmc
adc
xor
hlt
xchg
repz
xchg
fisttpl
filds
cmp
xor
and
out
add
mov
add
ret
add
or
cmpsb
out
aam
cmp
add
scas
loopne
test
push
pop
and
ja
pop
in
cmc
call
mov
and
add
xor
dec
cmpsl
enter
mov
add
jle
int
mov
shrl
xor
in
pop
stos
add
cmp
push
or
ret
xchg
add
out
add
cmp
jns
in
and
and
sbb
pop
sbb
fistps
int3
in
rclb
add
ret
pop
mov
sbb
mov
lret
sbb
loopne
add
ret
mov
in
pop
add
cmpsb
stos
movb
out
add
mov
push
cwtl
add
sub
mov
xchg
mov
mov
jae
int3
dec
sbb
and
add
mov
mov
cmpl
out
lock
lret
sbb
loopne
scas
hlt
mov
jns
insl
sub
lods
sbb
add
sub
mov
cmc
adcb
ljmp
cmp
inc
pop
rcll
mov
push
inc
push
shlb
xor
bound
popf
dec
clc
test
stos
sub
sub
imul
andb
les
xor
add
push
jb
add
and
add
jecxz
mov
xor
adc
add
jno
add
dec
and
cs
mulb
xor
add
aam
jg
incl
mov
nop
cmc
enter
push
add
clc
inc
stos
or
mov
xchg
test
sub
push
test
or
push
dec
mov
mov
mov
sub
or
and
mov
pop
pop
jg
pop
in
mov
mov
add
sub
pop
mov
jecxz
js
xlat
nop
or
and
ret
in
add
je
add
out
adc
ds
out
or
dec
cmp
or
adc
xchg
add
add
cmpsb
loope
cmp
cmp
lds
push
pop
fldl
loop
adcb
test
jmp
int3
gs
cmp
mov
adcl
mov
clc
mov
aam
ja
test
das
fs
aaa
jo
sti
xchg
add
orb
add
sub
jne
mov
add
or
xchg
sub
xchg
repnz
xor
lret
mov
adc
xor
xor
pop
jecxz
inc
inc
in
mov
enter
scas
xchg
sub
xlat
repnz
add
and
lock
or
dec
rcr
aaa
addr16
sar
mov
push
unpckhps
mov
cwtl
adc
popf
and
pop
nop
pop
xor
popa
xchg
rcrb
aad
jo
loopne
mov
add
adc
or
dec
pop
or
into
push
dec
js
add
adc
jl
mov
push
lea
rolb
scas
inc
jl
test
add
pandn
jp
lods
clc
dec
add
and
inc
cld
cmpsl
cld
outsb
add
or
inc
mov
and
lret
icebp
sbb
sar
jl
add
push
and
test
ret
outsl
jmp
sub
lea
hlt
and
add
into
addb
mov
mov
aas
iret
ss
cs
fcompl
inc
pop
jb
pop
clc
pushf
xchg
mov
testb
ret
in
lret
add
mov
cmp
cmc
test
shl
lea
sbb
das
out
shlb
add
nop
dec
dec
stc
and
jb
mov
push
sbb
mov
in
filds
out
add
mov
subb
cmp
out
mov
xor
mov
dec
add
push
xor
loope
sub
xor
add
push
sub
arpl
adc
and
mov
addb
push
or
adc
int3
add
es
int
sub
shll
fs
ret
cmp
add
movsb
jg
notb
insl
ja
hlt
nop
sar
aad
in
xchg
push
mov
in
xchg
ja
addr16
add
and
or
lea
mov
cmpb
test
mov
jp
arpl
and
add
push
mov
push
xor
ret
dec
leave
pushf
test
pop
lcall
pusha
mov
or
jg
popf
add
mov
add
xor
xlat
fcomi
or
xor
sbb
add
sti
jecxz
scas
pop
cmp
fidivrs
xor
cwtl
lock
mov
into
out
pop
xchg
les
rorb
mulb
push
lcall
enter
mov
push
mov
movsl
xlat
arpl
popa
ss
lret
and
out
sbb
xchg
ret
das
add
lret
add
jae
leave
mov
cmp
pop
jne
rcrb
imul
jmp
ret
subb
sti
je
sub
inc
daa
mov
xchg
dec
movzbl
add
xchg
push
test
sarl
or
xor
sahf
xchg
lods
out
inc
mov
hlt
rcrl
loop
inc
subb
pop
inc
cmp
into
push
mov
int3
jmp
add
ljmp
es
xor
inc
ja
add
pushf
add
pop
or
mov
fs
jg
movsl
sbb
stos
push
pop
lds
leave
int
mov
rorb
sub
loope
jl
add
repz
sub
das
pop
sbb
jecxz
stos
xor
loope
popa
add
inc
dec
xor
jecxz
sub
mov
pusha
add
mov
jp
or
cmp
inc
push
lods
dec
add
sbb
test
rorb
jo
fcoms
popa
mov
dec
add
pop
cli
insb
pop
pop
out
pushf
test
fld
js
rclb
imul
add
inc
call
push
movsl
std
pop
shrb
xchg
outsl
add
jo
stc
in
add
andl
push
add
pop
in
fcoms
adc
sbb
add
into
sbb
pop
xor
jge
pop
stos
mov
jo
jnp
orb
pusha
dec
add
pop
sub
insl
mov
jle
add
inc
jle
dec
in
out
add
push
cmp
cmc
or
adc
jle
add
mov
add
cmp
push
rolb
mov
mov
cmpsl
mov
xor
imul
test
lds
add
jb
lods
or
add
sub
pop
sub
ret
popa
xor
and
nop
jg
push
loopne
in
ljmp
mov
mov
arpl
lret
into
stos
stos
leave
ret
fidivrl
and
rorb
iret
rorl
add
cmpsb
loopne
add
or
mov
cwtl
pop
fists
add
test
shl
or
pusha
jae
add
and
push
add
mov
insl
push
mov
push
or
cmp
add
ja
xchg
add
mov
in
imul
cmp
mov
jne
add
nop
fnstsw
stc
add
punpckhdq
insl
rorb
cmp
and
add
les
lods
add
in
push
cmpsb
xor
pop
cmp
pop
shrb
vpaddsb
clc
sarb
out
mov
add
pushf
jb
add
pop
icebp
subb
rolb
cltd
hlt
loopne
and
cmpsb
add
scas
cmp
js
add
inc
xchg
jge
jae
movsb
cmp
ds
fsubs
inc
add
and
jecxz
dec
pop
push
in
loopne
andl
mov
push
js
stc
pop
fldl
sub
jmp
add
inc
jl
add
rcrb
fwait
xchg
pop
pop
popf
add
jle
adc
inc
outsb
xlat
pop
in
in
mov
mov
push
mov
loope
shl
dec
inc
cwtl
or
and
or
ja
loopne
pop
add
and
inc
sub
adcl
dec
aad
icebp
xchg
mov
sub
xchg
push
or
add
or
and
movsb
rol
mov
out
nop
fmull
xchg
cmp
and
jp
iret
jae
and
cmp
jne
cli
inc
add
inc
pop
push
pop
dec
call
xchg
repnz
push
jne
and
mov
icebp
cli
nop
push
ret
pop
sub
add
shlb
add
sub
jecxz
cmp
addb
sub
mov
cmp
test
pop
sub
clc
addr16
sbb
iret
sbb
xchg
add
or
adc
add
lcall
faddl
push
lods
data16
mov
loopne
mov
imul
sti
gs
mov
push
lret
andl
in
dec
repz
xchg
aas
push
repnz
add
add
cltd
leave
shlb
nop
sbb
and
je
or
clc
mov
imul
daa
adc
adc
add
call
add
in
sub
orl
mov
ss
frstor
das
jg
int3
out
add
mov
or
mov
insl
add
xor
mov
push
movq
das
jno
fimull
xchg
add
and
out
and
xor
pop
orl
adc
test
mov
lods
cwtl
lret
in
xor
jae
push
pop
sti
lea
or
xchg
cmp
xchg
imulb
mov
insl
add
call
cmp
leave
insb
cmp
pop
push
add
push
xor
pop
jo
in
push
dec
mov
pop
inc
cmpsb
pop
push
add
stos
aad
adc
jmp
popf
sbb
mov
and
mov
mov
inc
in
sbb
add
push
jnp
stc
loopne
xlat
cmp
push
test
rcr
mov
pop
jge
cmp
sti
std
cmp
jno
sub
cmpsb
inc
adc
sbb
inc
js
mov
cmc
push
nop
arpl
stos
sbb
jns
aas
push
imul
sub
pop
rorl
jecxz
adc
adc
loopne
cmp
cltd
insl
or
sbb
rorb
xchg
xchg
push
or
in
ja
test
loope
push
cmpsl
cmp
jmp
add
movsb
aaa
dec
pop
pop
rclb
loopne
out
add
mov
add
jb
xor
add
sbb
mov
and
cltd
out
ffreep
mov
cmp
jb
sbb
cmp
lods
cmpsl
mov
aam
repz
js
movsl
pop
adcb
scas
or
and
xchg
dec
in
cwtl
and
jne
add
loopne
lahf
push
jle
das
outsb
mov
loope
fbld
faddl
or
push
clc
mov
pusha
and
mov
aad
insb
mov
mov
xchg
add
jl
xor
xchg
les
add
insl
push
add
add
test
in
inc
mov
xchg
pop
jo
dec
adc
inc
sub
cmp
jge
pushf
loop
xor
sub
add
cmp
dec
push
adc
mov
lea
and
dec
test
sub
adc
popl
or
mov
inc
cmpsl
xchg
lcall
inc
sbb
cmp
sbb
jbe
fistl
cmp
cmp
in
ret
jmp
pop
faddl
mov
in
cmp
jno
push
mov
add
mov
or
add
outsl
jg
adc
xor
mov
add
dec
xchg
mov
movb
test
call
jb
mov
jmp
push
arpl
ret
fdivrl
push
adcb
rcrl
call
push
ja
sbbb
xor
sub
sub
int3
add
jl
les
pop
call
fisttpl
mov
add
mov
jae
ret
jns
add
sub
sbb
ja
xor
lcall
popl
lods
jle
add
xchg
mov
xchg
and
in
mov
pop
hlt
std
ss
push
cmpsb
loope
pop
jge
iret
dec
dec
ljmp
dec
pop
and
sbb
jne
cmp
mov
mov
xor
arpl
jb
repnz
cwtl
fistpll
add
pop
jbe
in
add
jmp
or
fcoms
fdivp
hlt
pusha
push
cmp
add
add
addb
loopne
call
dec
cmp
and
jno
mov
ret
xchg
out
in
mov
subb
shlb
add
jnp
pop
sub
xor
stos
add
fs
leave
jno
dec
cmpb
and
paddusb
cld
jge
xchg
mov
pop
divb
cmp
repz
stos
fistl
xchg
lods
add
dec
push
in
sbb
cmp
mov
mov
scas
mov
mov
add
or
shlb
insb
sbb
gs
mov
cwtl
and
jns
adc
jae
sbb
iret
adc
sub
mov
add
les
xchg
push
dec
jle
push
pop
mov
sbb
sbb
ja
flds
pop
cmp
push
idivb
inc
mov
push
add
ret
movsb
inc
cmp
add
or
add
mov
call
dec
or
add
jle
insl
mov
stos
sbb
jo
repnz
add
idiv
add
mov
add
lahf
jnp
mov
flds
sbb
daa
jne
mov
std
adc
out
out
dec
mov
or
xor
ljmp
cmp
xor
daa
jge
test
jbe
jl
imul
mov
dec
mov
mov
aas
jbe
mov
push
int3
mov
cli
and
push
mov
cmp
add
mov
xchg
inc
fsubs
xorl
push
push
jo
add
lods
imul
cmp
outsl
shlb
pop
insl
std
rorl
orl
add
pop
sbb
jbe
pop
nop
add
out
jno
pusha
mov
cmp
jecxz
xchg
in
sbb
add
pop
pop
fildl
mov
cld
add
add
and
jnp
test
fimull
int
cmp
pusha
out
cmpsb
jg
std
mov
jge
add
jle
xchg
add
sbb
lcall
sbb
pop
std
rolb
cli
pop
add
push
mov
xchg
push
enter
pop
lret
std
sarb
xchg
stos
adc
mov
add
pop
xchg
fistps
add
ret
push
add
cmpsb
add
dec
adc
in
nop
push
add
rcrb
jne
sub
pop
lea
jp
ss
add
ja
pop
xchg
push
nop
xchg
pop
push
mov
xor
and
incl
fsts
jp
jno
test
mov
or
clc
adc
jnp
mov
sub
dec
das
mov
jecxz
jle
lods
aad
dec
fistl
jns
mov
sub
mov
xor
mov
sub
and
and
subb
pop
mov
add
sub
in
cwtl
pop
fisttpll
add
int3
and
pop
pop
add
inc
jne
dec
iret
and
inc
jg
cmpsl
leave
pop
add
cmp
mov
add
mov
iret
and
out
inc
cmp
jne,pn
popf
dec
jg
out
add
out
jae
mov
cltd
fwait
mov
add
add
fcmovnu
or
ljmp
cmp
mov
fistpll
mov
leave
mov
jbe
add
cmp
inc
pop
adc
icebp
mov
pop
fstl
sbb
push
gs
sbb
lret
cld
repnz
rolb
xorb
lret
and
add
push
pop
add
clc
add
movsl
inc
mov
pop
imul
add
loopne
mov
stos
lods
or
jne
test
sbb
pop
subb
fnstsw
mov
lods
test
mov
and
inc
mov
ja
scas
insl
xor
push
or
jno
add
iret
jp
add
in
aam
lock
mov
loope
dec
int
mov
cli
sub
mov
pop
mov
stos
cmpl
dec
push
mov
inc
in
push
add
jo
out
cmpsl
loope
mov
out
or
pop
in
sahf
xor
pop
ret
pusha
ja
cmpsb
add
cmpb
mov
xor
xor
andb
add
inc
jbe
and
xor
jae
or
inc
fwait
mov
jo
pop
xchg
test
or
out
es
xchg
call
movsb
std
mov
mov
int
jmp
mov
addb
insl
or
xor
adc
sub
fmull
rclb
icebp
add
inc
pop
mov
fwait
cmp
sub
inc
je
pop
dec
arpl
add
mov
pop
insb
mov
cmp
add
jmp
jne
mov
or
xchg
pop
sbb
shlb
cmpsl
jne
sbbl
mov
int
and
nop
or
or
xchg
cmc
jge
lods
cmp
fmuls
mov
add
xchg
jno
scas
gs
popa
pop
sbb
cmp
cmp
inc
add
push
clc
addb
xchg
inc
js
lds
cmc
add
mov
popf
and
and
fisubl
out
sub
jne
mov
and
psubsw
dec
sbbb
call
rclb
jle
sbb
push
mov
ss
in
rcl
aam
and
bound
mov
pop
pop
and
inc
je
out
push
daa
sar
adc
sub
out
lret
addb
pop
divb
fdivp
xchg
or
iret
dec
jae
es
popl
mov
enter
jo
imul
fwait
pop
out
sbb
js
jnp
pusha
cwtl
jecxz
lret
add
mov
sub
shl
xor
and
xor
mov
mov
lds
ret
jo
loopne
stos
hlt
repz
dec
dec
out
clc
shrl
jns
add
hlt
out
andl
push
pop
js
add
mov
sub
or
mov
mov
jge
adc
cs
arpl
and
pop
push
sbb
xor
sbb
cld
sub
adc
addr16
inc
sub
jbe
clc
xchg
sahf
add
ret
xor
mov
lods
f2xm1
rcrl
inc
or
sbb
lock
setbe
sub
or
aam
and
call
adc
adc
jb
sbb
pop
xchg
sti
mov
add
adc
je
push
bound
in
jmp
add
outsl
int3
loope
push
mov
movb
mov
add
jnp
mov
pop
mov
xchg
xor
add
or
ss
popl
mov
pusha
out
push
inc
hlt
cltd
adc
lret
loop
sbb
outsl
iret
add
push
mov
cltd
add
shl
out
callw
and
movsl
mov
nop
cli
adc
fimuls
sbb
add
sbb
or
and
add
dec
lcall
and
cmp
push
sub
push
or
adc
mov
jge
push
bound
inc
add
leave
cmp
test
out
ficoml
sbb
cmp
cltd
mov
mov
lods
cmp
movb
lds
sbb
ret
repz
cmpl
add
call
shl
jns
jns
add
sub
mov
add
inc
push
gs
sub
adc
scas
aam
mov
add
push
mov
adc
sbb
jae
dec
jle
aas
jno
sbb
dec
inc
push
std
sub
mov
ljmp
lods
add
add
xor
dec
add
adc
mov
aad
adc
int3
add
add
scas
sarb
and
jns
xchg
xor
mov
mov
xadd
inc
mov
jnp
lret
repnz
push
or
add
inc
std
pop
test
add
add
jl
int3
scas
add
or
rcrl
add
les
pop
sub
adc
add
ss
and
rcl
or
decb
aad
xor
popf
je
addr16
aas
aam
nop
fldl
and
mov
ds
loop
lahf
or
and
sub
cwtl
in
mov
enter
mov
subl
jge
add
je
fildll
repz
cmp
adc
hlt
inc
adc
cmp
popf
mov
shll
inc
leave
sbb
cmp
inc
popf
das
std
fsubp
push
xor
xchg
decl
cmp
pop
imul
fldcw
jne
xchg
push
inc
adc
movsb
dec
sbb
fwait
lcall
add
cmp
rorb
xor
push
push
jmp
mov
loopne
or
and
out
and
jge
dec
mov
notb
arpl
aam
pop
fstps
aaa
in
lahf
mov
cltd
dec
add
imul
test
mov
pop
wrmsr
loopne
add
outsl
pop
sbb
cmp
dec
bnd
push
fiadds
das
adc
sub
mov
mov
jne
mov
int
dec
push
mov
sbb
and
adc
rorl
add
sub
scas
dec
test
inc
mov
add
add
decl
mov
imul
cmp
inc
adc
push
inc
jnp
jns
in
dec
or
add
jns
pop
pop
fstl
subl
mov
adc
jp
repnz
mov
sti
call
int
lock
ds
sbb
pop
and
fsubrl
js
push
iret
in
sbb
cmp
xorb
outsb
gs
ljmp
loopne
add
inc
xor
pop
addb
add
push
lock
cli
jae
test
enter
push
add
mov
movsl
jp
lods
xlat
jmp
inc
pop
push
adc
mov
fldcw
pop
rol
jnp
mov
scas
ret
adc
dec
in
xor
dec
out
pop
pop
xchg
pop
movb
insl
sbb
inc
cltd
push
out
dec
inc
add
cmp
add
pop
pop
inc
rcrl
repnz
ret
lahf
arpl
ret
xor
or
rcr
lea
xchg
add
adc
jg
cmp
in
add
mov
test
push
in
jmp
out
xor
or
push
dec
pop
insb
nop
inc
subb
lret
decl
or
add
and
fiaddl
sub
xor
mov
arpl
push
inc
rolb
inc
sub
scas
push
lock
jg
xchg
push
pushf
pop
or
add
or
adc
fildll
loopne
adc
jecxz
add
xlat
mov
subb
test
inc
cwtl
mov
inc
stos
daa
fdiv
add
sarl
data16
mov
dec
je
and
inc
inc
sarb
add
xchg
std
bnd
mov
sbb
inc
nop
jbe
pop
pop
mov
adc
enter
mov
aam
xor
dec
pop
mov
bound
loope
cmp
scas
add
fnop
push
mov
stos
pop
scas
xchg
push
out
push
in
jmp
cmp
test
jl
add
jg
mulb
fwait
add
inc
test
pop
adc
add
dec
push
sub
cmp
leave
xorb
repnz
pop
loope
hlt
add
call
cmpl
xchg
jmp
dec
shll
notl
je
mov
aas
orb
adc
rcrb
and
aam
sub
mov
xchg
mov
push
fdivl
sub
cltd
pop
mov
mov
add
daa
sub
mov
add
insl
pop
pop
pop
pop
cmp
add
or
or
sbb
cmpb
xor
dec
jo
jnp
fcomi
mov
aad
add
dec
cmp
testl
lock
sub
add
add
push
push
cmp
in
outsl
mov
popa
cmpb
ret
roll
add
stc
add
movsl
mov
cmp
add
sbb
mov
adc
and
fmulp
adc
push
test
sarb
lcall
xor
test
aad
add
mov
add
es
mov
sarb
sub
test
cmpsl
into
clc
ret
xor
and
add
icebp
xor
push
rcrb
mov
bound
lods
in
fisttps
xor
repnz
jne
inc
lret
mov
mov
pop
test
mov
into
pop
fbld
test
add
loope
sub
sti
or
add
add
xchg
mov
mov
mov
push
jmp
inc
add
jmp
testl
sbb
call
and
sysexit
xor
pop
push
push
mov
adc
loopne
cmp
or
pop
add
pushf
pop
lret
add
sbb
data16
arpl
out
xor
add
insb
push
inc
icebp
add
sbb
enter
and
mov
add
out
test
flds
cmp
add
neg
pcmpeqb
loopne
xchg
loop
cmp
into
add
mov
add
sub
cli
test
pop
or
push
rcrl
add
repnz
add
mov
aad
cmp
inc
cmp
loopne
imul
push
popl
xlat
pop
rcrb
dec
mov
addl
stc
je
lea
pop
add
insb
outsl
in
and
cld
inc
pop
repz
roll
int3
rcll
add
jg
cmp
add
and
add
movsb
jmp
nop
add
dec
cmpsl
xor
lret
mov
and
xor
je
out
add
outsl
lret
nop
callw
pop
mov
dec
sbb
shlb
xor
adc
icebp
sbb
sbb
add
xchg
cmpb
icebp
mov
aad
add
movsb
and
xor
shlb
sub
cmp
sbb
dec
xor
sarb
negb
xor
dec
and
ret
jl
push
cld
mov
push
mov
negb
dec
scas
pusha
mov
test
mov
int
out
pop
in
testl
add
push
jne
rolb
subl
mull
cmp
add
push
in
into
lret
add
lock
pop
sbb
pop
popl
adc
sub
jno
xchg
fcmovnu
jle
add
xchg
add
jecxz
add
lahf
dec
test
inc
in
sub
ss
jno
int
xchg
stos
js
and
add
pop
and
mov
jns
xchg
mov
mov
add
xchg
xchg
push
daa
test
push
bound
dec
xchg
pop
lret
or
daa
jp
push
rclb
xor
jg
js
nop
outsb
xchg
push
jge
jmp
ja
es
cltd
add
pop
push
push
repz
out
and
lds
imul
push
cwtl
mov
push
xchg
ret
inc
cmp
push
cmp
pop
sbb
mov
je
sbb
inc
in
mov
mov
add
xchg
rorb
add
xchg
lea
stos
jo
inc
outsb
xchg
jbe
sbb
mov
ds
jns
repz
add
stos
insb
cltd
adc
mov
adc
jg
lock
mov
cli
pop
flds
xchg
mov
sub
dec
ret
inc
nop
repz
icebp
adc
push
xchg
sarl
scas
add
mov
pop
cmp
xchg
mov
add
imul
js
xchg
xor
and
jbe
fldcw
add
jp
lcall
sub
into
cmp
adc
pop
icebp
xor
sbb
leave
nop
shrb
jno
add
push
dec
scas
lcall
push
sbb
lea
inc
mov
movsl
jns
xor
pop
jno
add
test
pop
add
jo
cmp
popf
in
mov
inc
popa
mov
inc
test
mov
cmpsb
jno
pop
out
add
popf
pop
sbb
shl
std
test
and
push
adc
lea
sub
add
mov
mov
aad
adc
jecxz
jle
lods
lret
add
push
loop
pop
adc
push
cld
pop
cmpsb
cmpl
int3
jle
pop
das
xchg
ret
add
inc
xor
sbb
add
push
in
xchg
mov
jno
adc
cld
push
add
les
jae
mov
call
jmp
iret
rcrb
add
adc
or
push
clc
add
testb
jns
push
jbe
cmpb
in
add
pusha
clc
push
cmc
test
stos
cmpsb
xchg
and
repz
add
sbb
push
dec
lcall
clc
mov
xor
inc
jle
shr
push
fs
aaa
nop
add
test
fsubp
add
push
ret
mov
daa
out
movsl
incl
jp
adc
add
xor
ja
xlat
cmpsb
shl
push
cmp
dec
inc
and
sub
jle
jns
cli
xor
mov
push
dec
inc
mov
fisttps
or
or
lret
sbbl
inc
gs
mov
pushf
popf
ds
jo
sub
sbb
lds
sbb
pop
mov
add
xor
and
and
in
lods
je
add
call
xor
enter
xchg
sub
in
outsl
add
sti
add
daa
aad
add
repz
mov
add
pop
rolb
fdivrl
xor
jge
fs
add
lahf
iret
jnp
divb
dec
push
insb
jo
mov
outsb
popf
jg
lahf
shlb
jge
add
push
push
sbb
cmp
cmc
adc
sub
mov
js
pop
fildl
loopne
movsl
xchg
addr16
add
in
lock
add
fiaddl
add
aas
test
leave
pop
push
sbb
fwait
xchg
arpl
xor
cmpsb
sub
push
mov
add
sti
das
loope
sub
insb
pushf
sbb
inc
inc
bound
pop
out
pop
or
ljmp
ret
pusha
or
mov
dec
out
in
or
inc
jo
add
pop
or
inc
or
ret
add
add
das
sub
pop
movb
push
mov
xchg
cmp
pushl
hlt
jo
iret
mov
inc
dec
add
scas
adc
shl
sub
add
jne
call
fxch
xor
sbb
sahf
mov
ljmp
sub
add
bound
aaa
dec
adc
cmp
lret
mov
mov
jge
out
add
sub
push
dec
inc
hlt
enter
rcrl
xchg
xchg
int
lods
outsb
dec
add
jecxz
and
lock
or
in
cli
loope
je
test
pop
mov
mov
xchg
outsb
shr
les
dec
mov
adc
or
cltd
or
push
aam
pop
hlt
cmp
into
adc
xor
loop
jle
xor
subb
mov
xor
push
and
in
sbb
pop
out
ds
test
invd
sub
in
shr
add
inc
jb
add
ja
or
jbe
dec
test
enter
xor
mov
add
push
pop
ret
adc
outsl
pop
pop
inc
pop
dec
lods
ds
mov
out
or
mov
shrl
add
jmp
dec
in
and
mov
rclb
cmp
add
add
adc
aam
incb
ds
lods
xor
cmp
mov
stos
insl
jno
inc
mov
cmp
es
jecxz
lret
mov
loop
add
inc
xchg
out
movl
sub
mov
inc
ljmp
dec
add
jp
push
push
push
xchg
je
cmp
inc
pop
cmc
js
leave
xchg
nop
mov
sub
or
add
adc
stc
add
les
clc
cltd
xor
push
pop
loop
lret
mov
es
add
loop
and
sbb
pop
mov
flds
icebp
gs
rorb
icebp
mov
and
add
or
mov
sbb
adc
mov
xor
jmp
scas
bound
adc
scas
mov
fnsave
out
js
test
inc
or
adc
sub
and
mov
dec
jno
outsb
mov
test
jno
test
xchg
mov
stos
mov
shl
pop
stos
clc
adc
hlt
sbb
jg
js
add
test
in
and
push
xor
sbb
cmp
mov
inc
mov
jbe
and
mov
jb
subb
fadds
call
pop
xor
dec
add
pop
inc
inc
pop
or
add
fisubl
outsl
imul
test
aam
inc
movsb
add
movsb
shll
jmp
cmp
dec
adc
aad
iret
jmp
mov
sar
pop
lahf
add
mov
dec
add
out
mov
push
push
testb
add
sbb
rcr
out
icebp
add
ljmp
add
push
jb
jno
inc
mov
outsl
sbb
aaa
inc
inc
fcomps
push
cmp
pop
in
mov
jmp
pusha
ljmp
aad
inc
push
lahf
lods
xchg
cwtl
mov
mov
push
push
scas
mov
in
and
add
mov
dec
pop
bound
orb
or
ret
xor
and
mov
jbe
add
popa
imul
xor
cmp
fbld
sub
repz
sbb
cmp
call
pop
ret
fdivs
sbb
jmp
cwtl
xor
icebp
inc
cmp
mov
xor
outsb
fidivl
xchg
mov
imul
sub
jno
push
lds
test
lret
inc
jb
jns
inc
lea
cmp
and
enter
ja
leave
add
jmp
sbb
insb
add
iret
mov
and
add
pushf
mov
out
cmp
or
adc
or
xchg
jae
in
adc
in
andl
inc
add
cli
add
inc
inc
stos
out
add
rcr
cmpsb
xor
add
mov
sbb
les
inc
andb
cmp
xchg
testb
pop
out
add
sarb
add
pushf
push
loop
or
cmpsb
dec
jge
add
cmc
jmp
or
push
mov
pop
sbb
add
ljmp
sbb
jle
js
fisubl
push
btr
mov
cltd
ljmp
push
cwtl
fildl
push
fcomps
jo
nop
or
test
lahf
or
fdivl
jl
mov
add
cmpsb
pop
loop
idiv
arpl
inc
pushf
adc
sub
call
insl
inc
sbb
loopne
adc
mov
out
nop
clc
sub
mov
push
in
cmc
add
push
mov
cmp
jg
xchg
or
fcoml
jmp
or
ret
jge
push
jno
add
mov
shrb
push
dec
daa
ficoml
rcl
push
xor
add
add
jbe
push
inc
or
test
push
add
repnz
jno
xchg
imul
int
clc
hlt
pop
out
add
fs
pop
jge
imul
shll
sbb
or
add
ljmp
out
jp
sbb
push
in
pop
adc
dec
or
in
cmpb
mov
ffree
rcrb
push
cmp
js
gs
movsl
adc
out
jmp
and
testb
neg
lods
cmp
pop
xchg
aam
cmp
sbbb
dec
jmp
jne
xor
dec
test
push
push
sub
bound
daa
mov
stos
inc
js
pop
out
jbe
xor
xchg
or
sbb
iret
shr
fsubrl
repnz
scas
sbb
push
nop
stos
add
pop
cli
and
add
icebp
fmull
cmc
and
add
rorb
cmpb
ficompl
sbb
imul
lds
sti
ds
ret
add
insb
mov
inc
sub
mov
add
lcall
arpl
add
fwait
push
push
addr16
out
retw
popa
sbbb
mov
movzwl
aad
shlb
fimuls
add
xlat
loope
pop
jae
jl
cmp
add
mov
mov
adcl
test
out
pusha
stos
and
add
mov
xchg
loop
inc
push
and
mov
and
add
jmp
pop
enter
push
add
loope
xor
mov
sbb
mov
sub
or
rcll
aam
loopne
jmp
insb
sahf
pushf
add
dec
mov
and
add
lea
ret
add
stos
push
scas
popf
mov
jno
loope
adc
lock
insl
add
push
call
push
mov
mov
or
or
mov
and
jl
mov
add
sarl
loopne
dec
les
mov
pop
mov
out
add
adc
into
add
ror
inc
idivl
sub
out
sbb
popl
inc
mov
adc
dec
mov
adc
add
andb
pop
mov
sbb
movsb
push
scas
push
cmp
mov
cmpsb
cmp
and
push
lahf
mov
adc
adc
jmp
or
dec
add
xor
mov
add
jno
or
clc
inc
sbb
ljmp
addb
and
jbe
jo
ret
cmp
stos
push
or
xchg
mov
es
lret
cmp
cwtl
stos
cmc
mov
add
sub
dec
push
nop
icebp
push
xor
scas
filds
dec
or
mov
mov
xchg
insb
jnp
hlt
movb
xchg
mov
sbb
enter
imul
test
lds
add
xchg
add
or
scas
arpl
rolb
jp
setae
pop
pusha
xchg
mov
inc
jb
add
mov
fisttpl
add
dec
pop
sbb
cmp
popa
push
push
inc
xchg
div
add
pop
cmp
or
rcr
mov
mov
add
dec
push
pop
sbb
das
int
add
shrl
stc
or
lret
sbb
loopne
clc
stos
add
cmovg
lds
loopne
mov
test
clc
ds
pop
jb
add
pop
test
mov
cmp
jmp
insl
cmp
adcb
pop
lods
push
jnp
adc
gs
add
pop
lods
loop
stos
add
clc
cltd
and
jmp
test
loopne
xor
int
sbb
hlt
lea
mov
dec
test
adc
xor
xor
or
add
or
add
jmp
es
jg
add
xlat
push
adcb
and
pop
mov
sysexit
loopne
add
adc
fildll
inc
rol
sbb
push
jecxz
iret
stos
and
cmpl
mov
sbb
dec
imul
call
fldl
hlt
jno
loopne
xchg
js
adc
orl
insl
push
adc
cwtl
adc
fildll
imul
push
insb
mov
pop
mov
add
pop
xor
add
mov
inc
orb
mov
push
sub
pop
pop
mov
sbb
mov
dec
cmp
out
mov
outsl
and
in
movsb
add
mov
aad
push
cmc
mov
fldenv
inc
sub
add
inc
mov
aaa
or
mov
cmpsb
mov
pushf
cmp
xor
add
ljmp
mov
inc
adc
mov
dec
xchg
adcb
inc
push
pop
fildl
pop
mov
rorb
jl
divl
add
daa
out
add
dec
pop
and
bound
sarb
push
inc
add
sbb
scas
dec
inc
loope
push
mov
mov
iret
push
push
and
arpl
push
shll
mov
femms
pop
cld
in
mov
das
add
int3
sbb
cwtl
add
cmp
aad
and
in
ss
cli
jno
fistl
or
jle
jb
insl
bound
sbb
and
jae
lahf
cmp
lock
lds
cld
dec
add
fdivrl
add
scas
dec
ljmp
pop
jns
call
outsb
add
push
in
mov
push
mov
add
mov
xchg
jns
dec
addr16
fcoms
pusha
push
pop
out
cmp
es
decb
pop
cmp
cmp
and
pop
iret
subb
push
ja
cwtl
cmp
lock
movsb
fcoms
arpl
cltd
dec
xchg
loopne
call
mov
cmp
in
add
or
jns
add
adc
sbb
or
pop
add
js
add
add
inc
addr16
cmp
cwtl
add
mov
xchg
pop
xor
aad
pop
scas
sub
mov
mov
and
lock
jp
xchg
sbbb
add
fsubl
fdivrs
or
imul
insb
mov
movl
dec
and
and
mov
or
adc
sub
test
scas
add
xor
jo
adc
xchg
hlt
add
cld
mov
add
push
movl
data16
mov
push
adc
and
rolb
jne
adc
lret
pushf
push
movsb
ljmp
sahf
pop
pop
call
subb
push
pop
jo
imul
fldl
inc
loopne
cs
mov
and
adc
ds
add
scas
jle
push
push
daa
aas
mov
pop
leave
enter
pop
fistpll
popf
ret
xor
stos
inc
add
mov
and
cmp
mov
fimuls
add
pop
vpsrlw
push
add
inc
pop
and
ss
push
mov
addr16
mov
ds
aas
inc
dec
subb
shlb
push
and
mov
or
add
mov
jp
jg
pop
jnp
faddl
add
dec
pop
ja
addb
sbb
inc
lldt
fwait
xchg
push
xor
or
sti
ljmp
add
hlt
mov
imul
stos
arpl
addl
lock
pusha
jo
lret
ljmp
sbb
cmp
sub
fwait
add
xor
mov
aam
xor
xchg
sub
ret
mov
lcall
pusha
xchg
sub
arpl
add
pop
xchg
pop
jb
inc
pop
add
arpl
push
push
loope
mov
les
bound
cmp
pop
sbb
xor
add
mov
dec
add
jl
mov
push
add
push
xor
sub
imul
pop
jne
add
and
xlat
or
mov
stos
orl
int
jecxz
inc
imul
jo
mov
out
add
jg
sub
scas
adc
in
addb
andb
pop
ret
std
loop
mov
mov
mov
inc
pusha
add
jg
add
out
pop
pop
sbb
lods
sbb
sti
add
aaa
xchg
je
mov
cld
push
add
movsl
rcll
add
mov
jo
aas
inc
fldl
push
out
test
add
jmp
jo
add
sub
addr16
cmp
addb
popa
jns
mov
sbb
push
jge
cld
pop
pop
sub
in
cmp
add
sarl
mov
cmpsl
aam
rcrb
adc
or
ss
filds
mov
xchg
inc
jns
push
dec
add
mov
loopne
lds
stc
das
xchg
enter
and
outsb
sub
mov
sub
adc
xorb
ljmp
shlb
add
adc
jbe
cmp
add
sbb
xchg
mov
outsl
arpl
pop
stos
flds
add
cmpsb
xchg
xor
xchg
sbb
mov
adc
stos
xor
mov
dec
sub
mov
push
push
cld
cwtl
dec
or
push
js
fwait
pop
daa
xlat
sarl
inc
xor
sub
rclb
icebp
jl
xchg
lret
cmc
push
gs
jnp
add
push
mov
jns
fcmovnb
fadds
aaa
into
pop
inc
ficoms
jmp
ja
jae
neg
loopne
sbb
add
jno
adc
cmc
loopne
aam
xor
popa
pusha
fmull
add
inc
cmp
xor
and
push
js
add
out
int3
outsb
aam
add
daa
dec
movsl
repz
mov
add
xchg
or
mov
imul
iret
cwtl
jo
inc
xor
es
out
or
test
mov
push
mov
add
addl
es
sbb
addl
cmp
mov
scas
inc
daa
shl
cltd
jmp
sbb
mov
lahf
rcrb
pop
test
xchg
inc
lea
dec
cmp
or
clc
xlat
inc
pop
cld
sbb
pop
ds
or
in
sub
lock
shrl
pop
popa
sbb
mov
xchg
shlb
fs
add
inc
jg
insb
insl
mov
jp
mov
mov
sub
mov
std
hlt
leave
jb
clc
jecxz
add
mov
xchg
jle
add
data16
pop
sub
adc
fcomi
add
pop
jg
push
ret
movl
cmp
pop
outsl
movsl
mov
pushf
ja
mov
dec
aad
inc
enter
inc
mov
adc
and
scas
inc
repnz
test
pop
addr16
pop
push
jle
sbb
jne
leave
sub
adc
pop
pop
sbb
lret
sub
in
aas
out
rolb
or
mov
lods
in
inc
xor
fsubl
outsb
add
shrb
add
lock
nop
int3
inc
or
ja
xchg
push
xor
dec
lods
add
sbb
test
or
fsubrl
std
mov
insl
mov
sbb
adc
push
fldl
rcrb
lret
sub
inc
add
dec
sarl
push
dec
aad
shll
decb
stc
mov
lock
pop
scas
int
xchg
inc
mov
push
nop
adc
add
pop
pusha
sbb
cmp
ljmp
or
pop
sti
pushf
outsb
bound
stos
sub
pop
pushf
test
andl
mov
test
imul
rorb
jp
add
add
adc
xchg
adc
mov
mov
mov
xchg
rolb
loop
outsl
arpl
mov
sbb
or
sub
int3
push
mov
mov
call
stc
push
jno
aaa
outsb
inc
add
push
ret
sbb
sub
add
mov
roll
fistl
cmp
xchg
xor
mov
xor
das
gs
mov
test
aad
add
fwait
in
xchg
cmp
addr16
inc
jle
and
and
repz
cs
lock
flds
fistpl
dec
inc
sbb
loop
add
dec
lret
xor
das
cmp
dec
mov
cmpsb
jo
jae
sbb
subb
pop
ficoml
aas
xchg
loope
inc
pop
fbld
dec
cltd
test
cmp
hlt
outsl
push
pop
or
sub
or
lea
adc
fnstsw
or
ljmp
pop
pop
add
push
jns
xchg
mov
int
and
or
bswap
enter
jmp
dec
dec
jae
inc
sbb
bound
psllw
add
mov
shr
sbb
sahf
pop
cmp
inc
mov
mov
neg
jge
lea
inc
add
inc
pushf
add
jnp
xchg
sub
mov
pusha
add
mov
das
lahf
adc
lods
cld
dec
push
subb
sets
pushf
add
mov
add
or
pop
rorb
push
add
add
jmp
jle
mov
call
and
sbb
enter
inc
shrl
ret
xchg
pop
in
and
add
mov
mov
aas
mov
clc
negb
push
lea
or
roll
shlb
sbb
sbb
cmp
cmpsb
add
pop
or
test
pusha
shr
movsl
or
sbb
mov
mov
inc
inc
mov
add
jnp
sub
or
aaa
fwait
mov
mov
js
aaa
push
inc
xchg
inc
test
fnstsw
pusha
stc
mov
or
lods
add
mov
xchg
sbb
mov
adc
insl
mov
xor
pop
or
fldcw
sub
negl
pop
xchg
pop
cwtl
sbb
lods
pusha
clc
pusha
jo
xchg
out
add
rcll
cmpsb
adcb
outsl
add
cmp
lret
xchg
jo
shlb
jns
sbb
adc
pushf
and
shrb
dec
sbb
movsb
add
push
cs
or
in
arpl
dec
pop
out
pcmpeqd
xchg
add
cltd
add
sbb
sbbb
fldt
mov
ss
shll
jne
mov
inc
mov
outsl
pop
mov
repz
and
dec
xchg
loopne
pusha
scas
pop
add
pushf
test
fdivrs
cli
out
data16
fisubs
dec
outsb
sub
popa
in
sbb
je
cwtl
repz
add
jns
leave
pop
ss
imul
mov
fs
and
pop
test
test
nop
mulb
jae
out
in
sub
stc
or
dec
movsl
mov
add
push
mov
fs
jle
xchg
cmp
fildl
enter
and
cli
repz
shll
fsub
pop
repz
add
jecxz
push
test
sti
jp
add
push
pop
and
sbb
cmp
push
loop
sub
cwtl
in
cmp
push
lret
or
jecxz
sub
or
andb
sbb
and
clc
jae
xor
pop
jle
andb
cmp
pop
test
adc
loope
push
cmp
ja
and
mov
mov
add
sub
clc
sbbl
xor
loope
mov
outsl
movsb
cmp
dec
sbb
and
xor
jle
shrl
icebp
clc
rolb
fsubrs
add
loopne
fs
sar
lret
dec
jecxz
in
adc
mov
pop
mov
fwait
cltd
mov
outsl
lds
sbb
jl
mov
dec
add
cmpsl
ret
lea
mov
cs
add
ja
xchg
pop
jno
mov
mov
add
mov
mov
add
push
insb
inc
cmp
adcb
dec
in
mov
fnstsw
out
add
fdiv
sarl
or
dec
cmp
xchg
stos
adc
jbe
pop
and
add
gs
ds
bound
xchg
pop
es
jbe
adc
or
test
mov
add
push
add
leave
fstpl
int3
loope
call
inc
mov
push
dec
push
jne
clc
dec
icebp
loop
sar
repz
cmc
mov
mov
stc
lret
mov
mov
mov
mov
loopne
sbb
adc
xchg
in
pop
add
xchg
jnp
lock
xchg
xor
xchg
std
out
jbe
repnz
sbb
popa
rcr
push
ret
add
inc
cmpb
hlt
pop
xchg
add
mov
sbb
add
push
add
push
adc
dec
scas
add
rol
pop
jno
add
dec
mov
sbb
int
cwtl
sbb
lahf
xor
add
sahf
mov
rolb
pop
pushf
xor
in
outsb
inc
pusha
add
inc
lods
pop
je
add
fimuls
rolb
inc
hlt
cmp
ror
das
fs
shl
or
xchg
jl
add
aam
aas
xor
xchg
add
nop
or
decb
je
outsl
inc
sbbb
add
mov
cwtl
or
and
add
movsl
arpl
pop
and
adc
dec
call
nop
add
stc
mov
test
loope
lahf
and
push
lea
rolb
xor
fstpt
xchg
add
in
mov
dec
cmp
xchg
add
mov
mov
sub
loop
mov
fisubl
cmp
add
xchg
xchg
jge
mov
dec
loope
cmp
add
sub
or
push
xor
xchg
push
add
nop
insl
in
ret
lret
mov
xor
fsts
repz
add
js
cwtl
insl
mov
data16
ficoms
mov
add
push
push
sub
ret
add
je
xchg
in
xor
cld
jg
add
cli
scas
cs
stos
mov
into
hlt
lret
mov
mov
hlt
ret
aas
sti
insb
fisttps
xor
jae
cli
xor
divl
pop
in
mov
movsb
xchg
arpl
sub
pop
lahf
or
dec
scas
pop
jg
jmp
jge
pushf
mov
dec
cmp
add
push
xchg
inc
sbb
dec
rclb
cmc
xchg
rcrb
xchg
cmp
dec
add
mov
loopne
int3
outsb
xor
pushf
subl
pop
and
roll
sub
jg
testb
imul
fdivl
filds
pop
std
inc
lock
stos
imul
loop
jno
lret
or
push
sub
push
imul
push
add
pop
xor
ljmp
lret
les
fdivrs
add
xor
add
and
pop
add
inc
dec
mov
mov
xchg
loop
add
popf
out
nop
push
and
pusha
add
push
leave
mov
iret
adcb
sbb
inc
add
ffree
dec
add
cwtl
fwait
inc
adc
pushf
call
jg
cli
je
jl
push
jle
push
mov
dec
pop
out
xor
add
xorb
sbb
sbb
mov
push
data16
movsb
jp
add
bound
mov
les
push
shr
or
dec
in
add
shlb
mov
cmp
orb
shlb
sub
call
xor
enter
push
push
or
add
pushf
push
dec
or
in
stc
add
addr16
lock
out
mov
out
sahf
test
xor
lods
call
decl
push
sbb
mov
rolb
js
ret
cmp
ficoms
mov
leave
imul
add
xor
scas
lcall
xor
cmp
push
xchg
aaa
jbe
xor
sbbl
mov
outsb
add
add
mov
adc
mov
ds
dec
inc
sub
lds
lahf
in
inc
xchg
inc
mov
or
xchg
inc
lods
lcall
fdivrp
mov
pop
cwtl
add
push
mov
push
adc
pop
lidtl
sti
lcall
js
add
dec
and
dec
movlps
pop
add
adc
shll
aad
fwait
and
lahf
pusha
push
add
mov
pop
aad
scas
inc
sbb
dec
scas
and
inc
xchg
in
and
xchg
ljmp
int
add
std
ja
add
dec
inc
mov
sbb
jg
xchg
add
pop
stc
sub
and
stos
add
bound
add
mov
push
testl
cmp
shrb
add
dec
mov
pushl
push
ret
hlt
popf
push
aaa
sub
or
icebp
push
clc
jl
add
lods
jb
sub
hlt
push
pusha
ret
or
stos
sbb
scas
loopne
cli
or
call
inc
das
pushf
push
enter
int3
into
mov
push
cmp
adc
imul
xor
sbb
jns
sahf
jp
fsubrp
in
push
pop
add
lods
pop
adc
add
test
pop
loop
ss
loopne
jo
inc
shll
jge
xchg
test
shlb
sub
cli
cmc
in
adc
add
add
cmp
pop
outsb
jnp
mov
hlt
dec
cld
adc
out
mov
mov
ret
mov
ds
daa
shrb
test
outsl
int3
in
pop
outsb
lods
pop
inc
cs
add
ja
mov
stos
jl
loopne
and
ja
jo
mov
and
scas
call
gs
test
mov
add
in
mov
sub
sub
inc
jne
add
inc
cli
cwtl
jb
and
out
add
xor
pop
adc
icebp
add
fildl
cmp
call
push
jecxz
add
fs
add
and
cvtps2pi
clc
jno
inc
cmp
add
mov
sbb
sbb
mov
nop
mov
call
and
xor
add
nop
push
lret
xchg
mov
les
mov
into
pop
outsb
rcrl
repz
inc
jno
in
or
mov
inc
add
fldl
add
arpl
in
or
push
loop
shrb
jns
add
test
add
sarl
jne
pushf
sahf
xor
js
sbb
stc
rol
jae
scas
jo
mov
xchg
cld
pop
jmp
jmp
xor
pop
mov
pop
add
pop
scas
jno
fbld
xchg
sub
or
int
add
imul
pop
aas
sbb
mov
pusha
iret
xor
dec
or
jb
and
cmp
incl
mov
dec
add
pop
pop
cmpsl
aas
stos
shr
dec
bswap
icebp
out
rol
movsb
repz
lea
cmp
lods
orb
enter
mov
sbb
ficoms
ret
xchg
xchg
add
inc
adc
pop
add
dec
mov
inc
fs
mov
xor
add
dec
pop
xchg
adc
cmpsl
or
sub
test
lcall
or
lock
jo
mov
jno
lods
cs
out
aam
pop
push
les
sub
push
movsb
divb
pop
pop
insl
add
and
push
add
jb
outsl
mov
adc
fnsave
inc
add
in
sbb
adc
xor
je
pop
pop
cmpl
loope
rolb
jbe
mov
inc
mov
add
cmp
das
jmp
ljmp
inc
aam
xor
mov
fldt
cmp
popa
jge
cld
sbb
rol
in
fwait
lcall
insl
sbb
insb
or
dec
add
xor
xchg
sub
adc
lock
outsl
add
aad
lret
adc
pop
xor
xlat
jbe
int
shrb
add
jne
mov
mov
andl
mov
jg
ret
mov
mov
loope
test
add
ljmp
add
jp
in
add
testl
push
add
dec
mov
xchg
add
imul
push
add
add
mov
sub
lock
dec
sub
add
inc
subb
mov
inc
popa
pop
std
into
add
lock
test
lods
mov
xor
cld
push
add
insl
rorl
add
cmpsl
sub
push
test
sti
xor
jmp
ret
sahf
js
das
push
jae
jno
xchg
sub
addb
and
test
mov
imul
repnz
mov
inc
sub
adc
xor
ljmp
aam
sub
add
imul
shlb
mov
sahf
jg
or
out
push
xor
inc
shll
enter
lock
sbbb
cmp
jns
dec
mov
mov
rcll
sbb
cli
cmp
add
inc
sbb
add
imul
hlt
adc
call
ljmp
daa
mov
das
jecxz
or
adc
fcomip
mov
sbb
out
sarb
push
jl
xor
std
push
mov
lret
sahf
sbb
cmp
add
fistl
enter
addr16
pop
or
fldenv
xchg
jnp
add
push
scas
fcomps
dec
push
or
mov
adc
cli
sbb
lret
fistl
sti
mov
adc
cld
mov
mov
xchg
mov
fisttpll
add
in
pop
add
cwtl
out
vmovdqa
test
inc
incl
dec
out
mov
add
adc
add
push
loope
bound
pushf
lods
ret
jb
call
hlt
cmp
xor
je
fwait
cmpsl
add
dec
popa
stc
sbb
push
fmuls
mov
adc
cwtl
into
in
add
sbb
add
pop
pop
aas
mov
jnp
pop
roll
scas
lahf
adcl
loop
pop
dec
cmp
add
je
inc
mov
mov
outsb
js
mov
dec
or
adcl
xorl
ds
or
xor
adc
js
jmp
adc
les
pop
jle
pop
cld
cwtl
out
adc
push
cli
dec
cmc
mov
pop
shlb
lcall
add
fldl2t
jg
cli
shlb
adc
addr16
inc
fcomps
xor
out
mov
push
lds
andb
jle
adc
insl
pop
stos
push
add
pop
dec
xchg
or
sldt
sub
fimuls
fimull
or
push
out
lret
jo
clc
add
stos
sbb
mov
adc
xor
loopne
movsb
add
mov
push
aam
pop
jmp
add
mov
sbb
lods
pop
add
lods
push
push
push
out
add
add
jne
add
loope
mov
hlt
cmc
pusha
add
jle
cmp
and
call
mov
movsl
add
ficoms
xlat
dec
les
jg
add
andb
test
mov
mov
jecxz
pop
movb
push
mov
or
dec
mov
push
rcll
iret
sti
inc
mov
ret
xor
jo
inc
and
xor
nop
imul
and
lods
sub
stos
sub
pusha
hlt
xchg
pop
adc
dec
inc
cwtl
or
lret
sub
loopne
sbb
adc
dec
les
out
je
sbb
std
cmp
out
aas
cmp
push
in
push
push
xchg
scas
jno
mov
xchg
ja
jmp
les
scas
or
stos
pop
mov
push
pushf
sahf
adc
testb
jbe
add
jle
push
out
xchg
test
pop
lahf
add
stos
push
not
cmp
add
xchg
and
fists
neg
loop
push
xlat
je
add
push
pop
jb
pop
push
fstps
push
add
aad
mov
sbb
xchg
inc
jo
movb
push
push
int
push
add
scas
pop
jmp
push
inc
xor
pop
add
pop
cmp
or
jmp
push
xchg
jno
in
and
add
cltd
hlt
dec
mov
test
sbb
loope
movsl
dec
xchg
add
loop
push
out
orb
dec
cmp
jecxz
dec
aam
hlt
adc
sarl
cmc
xor
shlb
mov
add
inc
std
repnz
jo
cmp
ret
jnp
mov
jge
inc
push
push
lock
imul
and
in
fst
push
test
add
stos
cmp
call
rolb
pusha
lcall
mov
jno
add
imul
bound
or
cmp
fnstsw
ljmp
xorb
orb
out
xchg
ss
test
arpl
pop
add
jge
dec
cmp
mov
sbb
xor
adc
scas
jns
fildl
sub
iret
adc
aas
mov
pop
jp
jecxz
jp
pusha
rcl
push
pop
mov
mov
adc
pop
xchg
lds
js
data16
cwtl
jne
fbstp
insb
add
add
inc
stos
push
sbb
pusha
jae
subl
lcall
pop
pop
aam
lock
sub
or
jb
mov
out
cmpsl
andb
jmp
add
adc
jo
jae
add
jle
lock
sbb
pop
add
lcall
mov
cmp
xlat
cmp
mov
inc
ror
jge
mov
or
inc
pushf
dec
xor
aas
adc
cmp
hlt
cmc
xchg
sarl
push
dec
inc
shlb
adcb
fidivl
imul
mov
xchg
arpl
xor
sub
pop
icebp
xor
adc
mov
lret
and
ss
cld
sbb
cmpsb
dec
mov
cmp
sub
pop
add
pop
adc
mov
xchg
pop
push
push
sub
dec
adc
aad
adc
xor
inc
movsb
cmp
mov
dec
adc
sub
push
popf
mov
mov
add
adc
arpl
sub
aaa
inc
mov
jae
and
adc
jecxz
xlat
xor
pusha
and
sahf
adc
cltd
lds
test
push
sub
mov
popa
push
inc
add
mov
ja
aad
xchg
call
in
fistpll
adc
jae
and
push
inc
push
sbb
ja
mov
cmpl
push
jmp
sub
push
lcall
shr
fistpl
lret
js
les
mov
movsl
push
add
jae
adc
scas
inc
nop
test
daa
sbb
dec
je
xor
fwait
dec
loope
sub
inc
mov
je
lock
je
mov
int3
test
and
cld
dec
aam
gs
mov
std
xchg
sub
lock
in
je
adc
sarl
or
inc
push
out
mov
out
mov
sub
xor
mov
dec
lods
or
mov
sbb
mov
popa
push
and
adc
stc
repnz
mov
repz
orb
inc
pusha
jne
pusha
out
adc
push
fwait
mov
xor
shlb
or
lahf
and
mov
push
xchg
mov
pushf
jo
dec
mov
push
xchg
cwtl
pusha
xchg
jg
and
orb
sbb
add
add
cmp
jg
cmp
rcll
aam
cld
test
sbb
pusha
sub
subl
push
cmc
mov
aad
call
push
out
in
or
xchg
je
call
jmp
dec
adc
and
dec
scas
dec
fsubl
loope
pop
xchg
and
mov
inc
and
mov
adc
xchg
aas
adc
je
dec
push
mov
data16
dec
outsb
mull
stos
icebp
inc
adc
mov
mov
fwait
xchg
add
call
jae
test
cmpsl
inc
pusha
xchg
mov
xor
lret
push
or
cmc
cmpb
mov
bound
ror
insb
ds
sub
push
loopne
addl
pop
in
xor
add
call
dec
xor
mov
insl
sub
adc
jge
mov
ljmp
popa
daa
and
lods
mov
inc
and
or
add
and
cmp
lock
icebp
pop
aas
insl
call
jo
lods
pop
and
and
scas
and
in
adcl
sub
lcall
or
push
into
lret
and
jmp
cmc
mov
data16
sub
int
dec
adcb
test
cmp
rorb
or
or
pop
jo
push
mov
or
fmuls
test
arpl
notl
cmpsb
sub
adc
data16
push
jge
adc
mov
add
jb
ror
jp
xchg
repnz
adc
cmp
cli
inc
or
sahf
int
inc
jno
lock
dec
int
mov
or
sbb
out
and
repz
pusha
inc
push
andl
pop
fidivs
sbb
adc
fsubrs
fistpl
adc
loop
popf
or
pop
lock
fimuls
or
push
sub
arpl
dec
jb
mov
cmp
test
fists
push
pusha
add
add
cli
test
cmp
add
push
jp
and
icebp
push
test
or
add
dec
cmp
push
enter
push
lahf
enter
fidivrl
lcall
push
mov
sbb
sub
or
mov
cmc
dec
test
cwtl
pop
sbb
sbb
das
pop
adc
cmp
mov
jp
sbb
mov
clc
mov
cli
inc
and
enter
push
sub
cmpsb
mov
adc
sti
push
push
adc
inc
in
inc
add
mov
adc
sbbb
cmp
mov
and
and
cmp
int3
adc
cltd
xchg
dec
je
add
cmp
decl
in
mov
cld
jp
fstl
insl
sub
cwtl
sbb
jbe
mov
test
and
sbb
sbb
inc
mov
ja
std
ret
xchg
push
xor
sbbb
pop
mov
jle
loope
clc
add
adc
movsl
les
push
stc
add
lods
js
test
mov
adc
pop
pusha
js
fcmovbe
jmp
sub
sub
and
mov
in
and
sbb
or
inc
sahf
xor
addb
lods
lds
or
cvtdq2ps
pop
push
adc
sub
lahf
dec
test
test
adc
cld
clc
pop
mov
sub
or
jmp
and
insl
jle
outsb
test
push
adc
mov
sub
add
std
sti
and
xor
cld
jno
mov
cmp
xchg
mov
xor
xor
in
aam
cwtl
adc
dec
and
mov
inc
sub
xchg
mov
rcll
out
imulb
int3
push
add
mov
cmp
xor
sub
sub
scas
adc
push
inc
pop
dec
dec
arpl
jmp
mov
stc
dec
and
add
pushf
arpl
xorb
addb
stc
std
dec
push
pop
test
es
pusha
insb
arpl
int3
negl
rol
pop
icebp
lret
adc
ja
mov
call
hlt
cmp
jae
mov
loop
add
dec
cmp
xor
ljmp
in
add
and
push
iret
cmp
jl
in
inc
adc
icebp
sub
ret
mov
dec
aad
orl
dec
test
push
jns
inc
std
fsts
push
andb
xchg
or
or
push
push
cwtl
subl
out
xchg
aam
or
dec
fdivrp
inc
xor
mov
or
or
enter
test
scas
and
sub
mov
pop
stos
xchg
hlt
dec
mov
dec
push
loopne
inc
xchg
xchg
xchg
or
sub
fs
sbb
add
pop
xchg
fisttpll
sub
enter
addr16
cmp
outsb
add
outsl
test
js
cmp
adc
cmp
mov
mov
loopne
sub
mov
outsb
shll
or
shll
inc
pop
arpl
adc
mov
jae
inc
mov
lods
pop
or
jo
cmp
flds
test
dec
lock
or
xor
leave
sub
lds
pop
div
xchg
and
pop
lods
es
and
ficompl
loopne
nop
jl
mov
push
push
shrb
or
imul
lods
js
or
or
in
add
or
cmp
nop
adc
mov
mov
and
rorb
out
jno
popf
mov
mov
test
mov
daa
loop
nop
xor
inc
adc
mov
pop
pop
jo
mov
sbb
or
nop
test
pop
or
cmp
imul
pusha
hlt
xchg
push
int
cltd
movups
mov
inc
adc
mov
hlt
sbb
jno
xor
inc
nop
dec
lahf
mov
jo
sahf
shl
pop
stos
arpl
jns
and
push
pushf
xor
movsb
mov
inc
fmul
lods
cmp
push
aam
mov
adcl
dec
in
dec
jo
jle
sub
sub
push
cwtl
cmp
or
js
arpl
rorb
enter
push
xchg
test
jp
push
cld
sbb
pop
add
xchg
fstps
mov
xor
or
or
dec
in
movsb
or
ljmp
pusha
or
hlt
sbb
adc
std
mov
test
out
cmp
dec
clc
mov
movsb
dec
mov
pop
fisttps
jl
adc
jle
add
rcrb
dec
les
adc
es
adc
mov
les
sub
adc
sbb
push
loopne
sbb
dec
or
fs
or
mov
xchg
adc
fs
fcompl
inc
insb
xor
xor
xor
mov
or
loopne
cmp
lds
pushf
lea
xchg
lcall
xchg
cmp
mov
push
adcl
int3
add
loope
push
sub
push
cmp
sbb
sbb
dec
add
mov
and
pop
lret
inc
scas
cmp
outsb
punpckhdq
add
loop
mov
arpl
add
inc
mov
cli
sbb
nop
stos
movsb
sbb
xor
mov
lock
or
mov
and
pop
jl
xor
or
mov
mov
xchg
imul
mov
jmp
cld
cmp
pop
shlb
cmp
add
lock
adc
xchg
jmp
cmc
repz
jb
or
adc
or
std
cwtl
sar
shl
aad
les
mov
mov
inc
mov
scas
cwtl
sub
or
jae
adc
ja
inc
js
xor
inc
nop
sub
fcoms
sbb
adc
adc
or
inc
ljmp
sbb
lock
xor
sub
scas
or
enter
imul
push
and
push
sbb
or
hlt
adc
clc
xchg
dec
loopne
sbb
cmpb
mov
sbb
ret
or
shl
stc
add
jb
adc
ret
mov
rolb
leave
adc
lds
xor
int3
adc
inc
data16
jne
and
mov
adc
shl
jo
fadd
or
push
lock
and
pushf
sbb
sti
ss
repz
fadd
adc
xchg
adc
and
push
mov
add
cmp
add
ffree
mov
add
adc
xor
push
les
add
insb
xlat
push
cmc
loopne
outsl
and
stos
mov
mov
xchg
cmp
and
es
push
xchg
jne
and
lock
fmuls
jb
adc
fists
sbb
or
test
inc
movb
or
aaa
or
or
jb
or
imul
repz
sbb
add
push
fdivp
mov
cmp
add
stos
fldenv
mov
loopne
mov
add
cmp
hlt
or
mov
pusha
sub
insl
xchg
sbb
insb
enter
in
add
jecxz
dec
push
arpl
adc
push
and
in
fs
add
ret
popf
call
hlt
xor
push
jle
dec
les
jmp
pop
aas
std
lcall
imul
pmovmskb
add
jmp
ja
jge
sbbl
push
push
in
clc
mov
cmp
inc
insb
cs
arpl
cmp
testb
loope
test
add
sbb
or
outsl
shl
js
add
popfw
lret
imul
out
nop
add
cmp
sub
mov
rcl
outsb
mov
sub
inc
xor
jp
or
in
or
or
inc
xchg
adc
mov
lea
rorb
std
pop
roll
pop
pop
test
jecxz
mov
jge
ss
testl
sti
lock
xchg
pop
push
movsl
push
push
repz
vmovhpd
sub
xchg
push
cmp
mov
xchg
sbb
or
sbb
cmp
sbb
sbb
mov
shrb
push
sbb
in
mov
add
and
mov
pop
sbb
add
adc
dec
leave
push
add
and
scas
or
loope
add
fcompl
cmp
pop
mov
test
cltd
pop
and
inc
sbb
add
std
int3
push
mov
sub
add
ret
pop
jl
xlat
mov
sub
nop
add
jbe
rolb
mov
or
test
pop
xor
aam
ds
xchg
add
test
mov
push
xchg
mov
repnz
sbb
loopne
sub
jp
pop
pop
add
loope
xor
pop
sbb
add
or
lock
xor
xchg
lret
pop
enter
and
xor
adc
pusha
shlb
push
or
in
jae
fldcw
rolb
pop
lret
lods
into
dec
jae
addb
adcl
and
das
mov
add
sbb
mov
push
test
std
and
loope
int3
sbb
pop
add
push
add
fadds
push
rorl
mov
xchg
pop
dec
and
enter
shlb
cmpb
inc
inc
daa
xor
add
xor
mov
hlt
int3
or
add
pop
push
inc
add
sti
jne
pop
pop
pop
cmc
inc
mov
jg
frstor
nop
push
add
das
enter
ljmp
rcll
outsl
cmpsl
test
inc
pusha
mov
les
lds
loop,pt
fisubrs
cmc
and
xorl
mov
testb
mov
ljmp
test
add
js
pop
aam
inc
incb
rcr
jns
pusha
pop
pusha
fadds
in
jbe
loopne
into
popa
add
fsubrl
adc
add
ret
ss
pusha
push
jae
repnz
push
push
aam
xor
dec
push
add
xchg
mov
xor
lods
clc
push
jg
push
or
sbb
insb
lahf
les
jp
xchg
sbb
dec
repnz
rolb
addb
adcl
xchg
nop
dec
add
dec
rcll
jns
imul
dec
push
pusha
ds
popa
pusha
aaa
sbb
add
out
in
xor
addb
mov
repz
push
dec
cmp
sbbb
cmpsl
add
loop
and
fldcw
jle
sbb
movsl
lret
lock
sbb
cmpsb
imul
xchg
push
xor
sub
adc
movsb
mov
adc
cmp
push
sbb
lea
add
adc
mov
ret
outsb
mov
shlb
les
enter
mov
push
xor
mov
gs
xlat
cld
dec
loope
aad
xor
xor
mov
shll
lret
movsl
fs
addb
mov
inc
pop
xor
xchg
add
int3
stc
cmpsb
roll
lock
dec
jne
adc
faddl
sub
mov
out
int3
mov
sub
nop
add
xor
sbb
push
lahf
aas
repnz
pop
mov
add
scas
inc
enter
outsl
add
sub
les
notb
mov
push
or
sub
add
or
or
push
cmp
adc
test
sbb
mov
ds
stos
out
rolb
fists
push
pop
inc
sbb
pusha
pop
les
jnp
mov
pop
sub
imul
sub
in
clc
jns
add
sub
cmpsb
mov
push
mov
shlb
and
scas
sub
lods
add
cmp
or
push
dec
call
xchg
xor
cwtl
jo
push
add
mov
push
dec
mov
leave
xchg
add
push
pop
ficoml
adcb
fsubrs
data16
ret
out
shlb
sub
repnz
push
sahf
add
jns
jb
mov
dec
adc
pop
fsub
andl
pusha
adc
adc
std
add
xchg
pop
enter
pop
rcl
push
xchg
push
int
js
dec
inc
pop
mov
inc
int
pop
sti
or
sbb
sbb
mov
cmp
call
clc
es
inc
add
or
push
std
xchg
xchg
mov
dec
pop
xlat
es
scas
push
xor
cmp
inc
lea
cmpsl
xor
add
inc
aam
ficoms
cmp
add
cmp
xor
ret
imul
std
jb
or
dec
mov
lds
jge
add
lea
fadd
rolb
adc
mov
divb
rclb
sbb
fldt
jno
sub
ds
pop
xor
xor
mov
xchg
or
aam
sub
js
incl
pusha
bswap
sub
cwtl
add
int3
test
fldt
mov
cwtl
xchg
pop
popf
mov
pop
cmp
and
mov
push
inc
les
inc
push
cmp
mov
outsl
stc
pop
xor
int3
dec
jo
or
fmul
add
adc
rolb
sahf
or
pusha
loop
mov
aad
test
jns
sbb
rcrl
sbb
inc
test
sub
inc
adc
adc
xchg
or
and
enter
jl
push
test
mov
jno
or
fs
ret
and
icebp
sbb
sbb
dec
pop
adcb
sbb
cmpsb
sahf
orb
jl
ljmp
movsb
or
stos
dec
lds
cmc
shrb
xchg
lea
cmp
out
dec
inc
mov
cltd
or
scas
clc
sahf
push
add
pop
pop
ljmp
or
pop
hlt
lock
lods
push
test
mov
movsb
jg
ljmp
sbb
lock
jbe
mov
pop
mov
mov
add
in
mov
mov
out
gs
ret
pop
nop
rcrl
jg
je
js
mov
or
push
cmpsl
enter
xor
jge
mov
pop
pop
dec
pop
movsb
adc
adc
iret
pop
push
js
clc
sbb
xchg
cmp
jmp
stc
add
jl
or
dec
sahf
add
jbe
inc
xchg
out
ja
lret
loopne
add
jmp
pop
or
add
sar
push
adc
adc
sub
lret
push
ret
push
jmp
or
call
jbe
rorl
adc
pop
adc
inc
pop
adc
push
movsl
mov
xchg
push
je
clc
mov
fadds
jg
and
fbld
sbb
mov
test
sbb
test
out
xchg
pop
js
pop
mov
ret
cwtl
pop
adc
pop
lds
repnz
jl
pusha
jno
inc
xchg
push
xchg
mov
xor
sbb
dec
adc
sub
testb
mov
aad
dec
inc
add
or
into
repz
jmp
js
dec
leave
and
xchg
mov
add
or
out
inc
adc
push
mov
push
pushf
inc
add
fs
xchg
xchg
xlat
mov
mov
loop
jmp
pop
or
fbld
je
std
rcll
sub
enter
jle
es
jno
push
dec
or
adc
push
or
pop
rclb
sbbl
or
les
shll
add
lret
inc
loopne
notb
add
xor
mov
rolb
push
fadd
nop
fs
int
and
sub
loope
stc
outsb
scas
inc
sub
inc
xor
pop
dec
dec
movsb
lcall
add
out
fimull
cmp
push
xor
data16
jb
or
dec
scas
push
and
dec
add
insb
js
packuswb
out
cwtl
xor
add
popa
in
mov
dec
xor
lock
std
mov
in
addb
sub
jl
loop
testl
jp
nop
in
dec
pop
imul
pop
out
xor
push
jmp
movsl
cmp
in
adc
insb
and
push
pop
clc
mov
xorb
jae
pop
and
dec
add
adc
inc
ljmp
mov
orl
and
or
popf
mov
push
rolb
jne
aam
ja
in
repnz
jg
test
add
inc
ficomps
push
mov
sbb
testb
or
das
push
push
clc
xorb
sbb
out
cld
inc
mov
fstps
mov
mov
mov
pop
xchg
sub
hlt
jecxz
and
or
fiaddl
sub
inc
mov
in
stos
js
jbe
add
xchg
inc
int3
cld
aam
rorb
pop
loopne
pop
pop
popa
jle
add
ret
fcos
xchg
adc
cmp
enter
andb
arpl
push
jo
jno
sbb
pop
lds
leave
add
jns
loop
movsb
mov
mov
fildl
xor
or
jl
por
dec
loope
jg
jns
xor
mov
cld
xchg
add
xchg
ljmp
ret
pop
loopne
push
rolb
xor
int
pop
lret
adc
or
xor
jmp
and
add
inc
add
scas
dec
and
movsl
jae
add
inc
inc
hlt
cmpsl
inc
out
jnp
add
mov
clc
pop
push
inc
mov
ret
ljmp
test
xchg
rcrb
cli
add
xchg
movsl
cmpb
aaa
push
sub
sub
lods
sbb
lahf
popf
dec
mov
and
adc
fcomps
sbb
or
addl
push
push
div
sbb
dec
lods
imul
sub
test
int3
add
lods
lcall
mov
mov
xor
adc
flds
lods
shrb
pop
mov
push
add
inc
nop
mov
add
mov
fildll
aam
lods
in
push
mov
cmp
add
add
fadds
flds
movsb
sti
and
fisubs
pop
add
outsb
mov
sub
sub
mov
aad
test
mov
sbb
push
subb
xor
mov
push
xor
fsubrl
push
aad
cmp
and
dec
xchg
inc
rcll
rcrb
jg
or
imul
push
in
ret
jae
mov
out
add
or
xor
add
jns
xor
adc
add
mulb
adc
icebp
mulb
mov
sbb
pop
xlat
icebp
into
mov
das
or
push
sbb
enter
jle
sub
xchg
mov
sti
add
imul
int
add
mov
jb
addr16
add
xchg
fdivr
aaa
mov
jl
push
adc
testl
leave
out
add
ljmp
add
insl
flds
stos
mov
and
icebp
xchg
pop
xor
pop
mov
loopne
and
das
add
dec
out
ret
add
mov
ja
je
add
bound
jne
das
decb
sbbb
filds
leave
test
imul
mov
adc
push
jne
sbb
loope
dec
add
lods
mov
or
enter
inc
cmp
mov
cwtl
mov
js
cmp
sbb
xor
fsub
imul
add
mov
pusha
add
mov
fcoms
cmp
add
cmc
test
xor
adc
pop
dec
inc
cwtd
mov
jno
sbb
test
incb
inc
into
fldl
adc
or
sbb
and
push
pusha
or
push
movsb
jo
xchg
cltd
jne
clc
in
sbb
inc
adc
insl
cmp
lret
ret
inc
xor
mov
pop
pop
in
sub
inc
mov
in
xlat
mov
push
popl
push
fucomp
fadds
push
aaa
adc
add
ror
jg
iret
add
mov
je
inc
rcrb
cmp
xor
add
pop
jg
cwtl
and
nop
add
dec
mov
mov
loop
sarb
andl
stos
loop
add
xchg
iret
jp
mov
push
hlt
sbb
and
das
add
cmp
cld
push
add
pop
sub
push
popf
adc
lcall
cwtl
inc
xor
nop
inc
mov
mov
jnp
lock
mov
sub
push
aaa
data16
cmpsb
and
testl
jg
sti
xchg
jnp
insl
leave
sbb
mov
add
in
and
or
sbb
inc
outsb
inc
or
cmc
ljmp
int
xor
pusha
add
lret
movzwl
mov
in
add
out
and
mov
add
loopne
faddl
or
xchg
cmpb
fwait
adc
loope
lods
repnz
jl
add
sub
rcl
gs
and
fcmove
add
push
pushf
int
popa
add
cld
in
outsl
pusha
inc
mov
jo
xor
and
add
daa
clc
cli
std
rorb
fldenv
dec
lcall
inc
fisttpll
cmp
call
in
pop
add
pop
mov
inc
push
and
sub
test
mov
fwait
dec
jne
mov
lea
mov
ljmp
jle
repnz
lahf
add
fldcw
insb
sbb
ror
inc
add
add
add
inc
cmpsl
mov
add
adc
fcoms
lahf
enter
subl
int
add
sub
test
xchg
mov
outsb
mov
loopne
add
and
rcl
das
add
insb
push
inc
add
rolb
and
cli
std
pusha
lock
sub
add
mov
push
rorl
add
das
and
fbstp
pop
outsl
dec
add
ljmp
jae
imul
lea
or
mov
ljmp
inc
and
lret
addr16
sbb
popa
insb
out
push
fs
sbb
out
ret
loopne
lea
jle
loopne
jg
stos
fimuls
lret
sub
orb
inc
pop
icebp
aas
pop
adc
dec
push
lret
sbb
jns
cmc
mov
scas
inc
rorb
movsb
add
push
aaa
mov
in
xchg
sbb
hlt
add
mov
inc
addr16
cld
mov
in
add
int3
sub
pop
clc
dec
push
out
cld
and
pop
jbe
mov
ret
jb
add
mov
test
je
push
mov
data16
pop
push
sub
push
dec
add
test
or
insb
sub
lock
push
xor
push
add
repnz
sub
flds
aad
adc
mov
pop
sub
arpl
xchg
mov
fwait
or
add
out
in
sbb
ljmp
inc
lock
imul
lds
fmull
lods
mov
enter
sbb
lock
or
xorl
add
xor
jge
xchg
enter
mov
movsb
sub
inc
lods
jle
hlt
lret
insb
add
xchg
out
cmp
outsl
sahf
add
sbb
mov
jo
xbegin
fisubs
add
cs
xchg
aam
les
clc
cmp
jl
sub
add
xor
push
or
pop
jecxz
xor
push
pusha
mov
test
add
cmp
push
add
andb
punpckhwd
push
mov
fdivrs
add
xor
ret
jo
repz
insl
out
imul
lahf
mov
add
pop
dec
pop
test
subl
sbb
or
popa
push
in
and
add
ja
pusha
js
enter
mov
xor
jl
push
and
xor
cmp
add
mov
lock
add
push
loope
lods
icebp
lods
add
lcall
add
filds
dec
cmp
enter
cmp
sub
cmpsb
mov
push
pop
add
sbb
xor
push
sbb
loopne
in
dec
pop
cmc
push
cmp
or
sub
stc
cld
mov
add
rclb
mov
cmp
add
fdivl
add
pop
ret
or
pop
mov
dec
fsubl
in
mov
xorb
out
bound
dec
stos
or
roll
push
in
popa
push
jae
in
jge
sub
les
adc
aaa
add
movsb
jle
shr
dec
arpl
xchg
adc
mov
addr16
les
jb
add
dec
push
jmp
fwait
nop
pop
ja
int
pusha
add
inc
push
aaa
mov
push
fs
dec
add
imul
pop
jae
gs
mov
cmpl
xchg
in
xor
cmp
cmp
mov
sub
aaa
enter
enter
pop
pusha
jnp
mov
fldcw
mov
loop
in
jnp
dec
and
cmc
add
cmp
push
push
call
mov
add
cmp
dec
xchg
sub
push
sbb
adc
mov
mov
ds
mov
in
rol
cmpsl
cmc
daa
out
cmp
xchg
add
mov
cwtl
adc
cmpsl
rorb
lods
add
ds
loopne
add
xchg
rolb
and
fldcw
lcall
repnz
scas
int3
add
and
cmp
rcrl
mov
add
pop
dec
xchg
mov
scas
jb
or
and
pusha
mov
add
push
or
lods
pop
subl
das
jp
aas
push
or
cmpsl
and
add
xchg
cs
sbb
jne
mov
aam
lcall
popa
and
int
xorb
imul
push
or
add
mov
pop
fildl
push
dec
dec
enter
adc
sub
jg
shrl
stos
sbb
inc
or
pop
xchg
dec
or
repz
hlt
jns
push
pop
out
ficoms
xchg
cmc
and
jo
pop
add
add
cmp
dec
cmp
test
icebp
std
or
add
mov
add
movsb
rol
jo
sbb
mov
add
fldl2t
lea
popf
lods
lcall
movsl
dec
push
lds
xchg
pop
hlt
rolb
push
adc
mov
pop
xchg
add
inc
std
sub
dec
and
xor
and
adc
sbb
push
mov
push
ja
dec
add
sub
mov
pop
cmpsb
cwtl
add
mov
aas
and
mov
xor
add
mov
insb
xchg
lods
popf
ret
xor
xchg
adc
sarb
adcl
std
and
jbe
sbb
add
push
and
mov
xor
lret
adc
insb
cmp
cs
jmp
data16
lahf
in
dec
xchg
movb
jb
push
mov
loopne
pop
and
rcll
rolb
test
data16
inc
mov
adc
push
movsl
push
cmp
dec
cmpb
in
mov
cli
outsl
cmp
sbb
inc
mov
mov
xchg
enter
pop
add
int
add
and
rorl
mov
adc
lods
addb
sub
iret
xchg
and
ja
and
or
out
std
pop
jne
add
cli
cld
add
fs
add
dec
cmp
lret
mov
add
ret
mov
addl
inc
xchg
xor
jbe
push
jle
insb
xor
aas
xor
add
rcrb
imul
pop
adc
movl
int3
cmc
es
or
fwait
loopne
add
out
sbb
or
pop
mov
adc
inc
jmp
in
pop
push
mov
add
movsb
mov
adc
add
enter
pop
pop
stc
add
lods
fstpl
cmp
sbb
loope
lcall
push
pusha
jo
mov
and
jecxz
add
lret
cmp
push
and
jg
adc
aad
test
adc
jo
jp
sub
leave
cmc
xor
and
add
and
ja
dec
add
sub
add
push
testb
jnp
pop
sub
cwtl
in
push
fcomi
mov
inc
test
sbb
stos
mov
dec
push
fs
add
adc
xchg
add
xorb
stos
adc
cmp
fsqrt
and
or
pusha
divl
cmpsl
jp
push
add
mov
lock
cmp
icebp
cmp
cmp
adcb
dec
pusha
mov
xor
cmp
imul
sbb
xor
pop
adc
outsl
ficomps
xlat
xchg
jns
mov
mov
cmp
movsl
add
sub
and
add
dec
repnz
push
out
add
scas
aad
or
movsb
sti
ds
int
sbb
xchg
clc
aaa
mov
xor
add
add
jge,pt
sub
pop
into
fists
inc
sbbb
repnz
jbe
jmp
movzwl
cmp
jne
or
test
sarb
cmpsb
jno
add
enter
test
hlt
mov
mov
mov
data16
cmp
add
add
mov
into
dec
je
mov
subb
js
add
jo
cmpsl
call
repnz
popf
flds
lcall
xchg
adcb
stos
dec
add
ret
leave
mov
mov
xchg
testl
dec
mov
pusha
sets
rclb
jg
add
xor
sub
mov
add
arpl
call
jb
jnp
gs
jno
mov
popf
and
scas
sub
mov
rcrl
lock
lahf
pop
repz
cmp
andb
and
shr
push
fstpl
movsb
into
or
and
mov
jp
std
ds
push
jg
cld
imul
inc
shlb
mov
pop
or
pop
push
add
ds
adc
adc
repz
add
stc
mov
cld
add
pop
xor
mov
push
out
and
movb
dec
lods
fwait
push
cmpsl
pushl
push
les
pusha
dec
add
lcall
add
push
daa
mov
std
aam
adc
cmpsb
sbb
push
test
adc
mov
sbb
test
jne
imul
mov
je
icebp
cmp
mov
nop
dec
orb
adc
icebp
adc
cmp
push
add
cld
mov
lds
jmp
pop
inc
xor
dec
pop
movsl
ljmp
scas
lock
movsb
lods
jbe
sub
sbb
cmp
nop
add
mov
sbb
ljmp
mov
mov
aad
fsubs
jge
in
lret
je
sub
push
mov
sbb
shlb
xchg
sahf
cmp
jp
enter
add
pusha
test
sub
inc
in
add
xchg
jge
fs
xor
scas
xchg
cmp
insb
jg
sub
pop
cmp
or
pop
xor
popf
sub
xchg
add
adc
add
addl
in
inc
clc
and
push
icebp
sbb
cmp
adc
pop
jne
mov
dec
or
cmp
lcall
jns
call
pop
outsb
aam
nop
add
lods
dec
jo
mov
sub
push
les
and
mov
int3
xor
add
mov
orl
mov
add
pop
or
ljmp
add
jmp
mov
int
arpl
pop
shlb
sbb
leave
push
mov
clc
mov
je
add
test
push
ss
jae
add
mov
sub
jnp
or
push
cld
imul
add
push
in
lds
push
add
adc
inc
pop
movsb
pop
xor
sarb
repnz
pop
xchg
xor
das
pop
dec
add
lock
mov
mov
mov
repnz
dec
jb
xor
shll
mov
add
and
and
js
int
pop
cmpb
aas
stos
add
jg
inc
sub
inc
xchg
jge
sbb
push
dec
in
pop
push
loopne
fcmovnu
xor
mov
pushf
dec
mov
add
ja
adc
pusha
pop
mov
pop
mov
xorb
mov
add
mov
pop
add
cmp
add
sahf
cmp
add
mov
push
push
jbe
fwait
xorb
sub
push
jae
add
mov
cli
fadds
or
mov
leave
loopne
ljmp
clc
pop
jle
inc
and
ja
and
test
or
add
push
xor
mov
pop
adc
sub
jbe
jo
stos
dec
jl
es
loopne
sbb
ret
cmp
sbb
jno
add
mulb
push
xlat
mov
mov
add
pop
mov
xor
push
push
mov
and
pusha
pop
jg
push
pushf
dec
cli
and
pop
inc
adc
add
push
cwtl
imul
shrl
lock
mov
js
pop
ret
jp
push
dec
adc
and
adc
roll
pandn
shlb
adc
xchg
dec
xor
call
cmp
sti
outsb
add
rclb
addl
xlat
xchg
jo
jns
pop
add
or
lods
push
add
push
mov
test
imul
inc
add
dec
xchg
mov
ja
ret
imul
inc
push
fldl
mov
sbb
test
adc
xor
cmp
cli
add
test
add
push
int
std
bound
stos
divb
sub
orb
sahf
cltd
inc
add
mov
test
or
imul
sbb
stos
fiadds
sub
pop
push
pushf
les
lock
sbb
popf
add
pop
cmpsb
jecxz
mov
cmp
mov
sbb
xchg
add
mov
sub
add
mov
jbe
mov
jp
ror
xchg
mov
push
add
push
test
loopne
mov
add
push
cmp
ja
inc
add
mov
test
and
int
sti
imulb
add
and
iret
cmp
mov
rcrb
sbb
cmpsl
jb
and
rolb
rcrl
ja
mov
test
mov
add
mov
mov
inc
xchg
push
lds
push
cld
mov
add
xor
into
sti
jns
xchg
inc
add
gs
xchg
leave
mov
mov
inc
pop
std
sbb
mov
mov
push
into
or
xchg
rolb
mov
rcrl
pusha
mov
add
nop
mov
adc
aam
and
das
enter
jecxz
data16
or
dec
mov
mov
ds
ror
inc
or
pushf
mov
push
sbbb
fwait
cmpsl
pop
mov
std
cmp
or
subb
jno
fcomip
mov
pusha
lods
mov
stos
push
dec
inc
out
push
inc
add
mov
mov
inc
push
sbb
add
cmp
ret
xor
inc
add
js
rorl
add
push
add
inc
xor
fcoms
dec
adc
add
cld
sbb
add
xchg
sub
dec
out
add
push
imul
jmp
cld
and
int3
sub
mov
cmpsl
jg
xchg
mov
addb
daa
mov
add
and
lcall
cmp
xchg
gs
aaa
jae
mov
cmp
and
push
or
daa
sbb
pop
cli
add
jns
inc
call
sub
cwtl
cmp
push
das
inc
mov
sarb
push
add
and
mov
jp
aas
push
push
add
cli
or
sbb
mov
adcb
add
push
int3
cmp
out
mov
inc
mov
js
ret
and
movsb
mov
clc
hlt
xor
lock
add
sub
cmpsl
out
enter
xchg
xchg
adc
adc
xchg
loope
int3
xlat
and
pop
test
sbb
cmp
mov
add
insb
jns
xlat
repnz
fimull
test
or
andb
pop
add
imul
add
sahf
lcall
rorb
add
jne
and
lret
xor
pop
and
inc
cs
call
adc
push
mov
and
inc
push
mov
jbe
add
sub
or
popf
xorl
add
shr
pop
or
or
loopne
add
enter
push
add
sahf
xor
mov
push
jo
into
pop
mov
cmp
dec
sub
add
imul
jg
in
clc
subb
aaa
test
add
push
mov
push
inc
adc
ds
popa
sub
add
clc
orb
in
xchg
xor
or
shrl
pop
fnclex
outsb
out
orb
sub
mov
lods
and
dec
loopne
adc
add
sbbl
dec
sub
test
shll
pop
and
mov
push
sub
xchg
loopne
repnz
mov
stos
shrl
cmpsl
mov
sub
aad
rcll
mov
jo
add
cs
dec
sub
jo
scas
hlt
adc
ret
sbb
xor
rorb
xchg
add
lret
arpl
dec
lds
sbb
add
stos
or
adc
xchg
shll
in
xchg
repz
add
bnd
add
loop
shlb
add
in
stos
xlat
push
jns
int3
es
jno
stos
add
lods
inc
push
mov
push
push
mov
gs
stos
xchg
leave
jne
and
into
inc
sub
dec
add
push
daa
outsl
das
ss
push
and
gs
mov
popf
ret
mov
call
jbe
in
das
movl
adcb
dec
imul
mov
lcall
jb
sti
add
add
pop
mov
or
ljmp
pop
mov
xchg
add
add
dec
lret
jl
movsl
sbb
add
jp
in
adc
inc
mov
adc
outsl
andl
rolb
ret
fcoms
jo
pop
mov
scas
fsts
aaa
push
add
and
fiaddl
ds
push
push
sti
bound
call
fcompl
jo
loop
pusha
mov
sbb
lods
test
pop
faddp
out
xchg
or
pop
push
jg
cmp
sub
push
pop
push
jl
add
mov
pop
push
lds
test
es
adc
inc
jne
sysret
call
mov
jo
sbb
sbb
sbb
or
sub
add
jmp
and
and
cwtl
rorb
add
jnp
cli
addl
push
setle
mov
stc
xor
push
pusha
or
and
jecxz
pop
mov
shrb
mov
enter
pusha
rolb
add
jg
and
cltd
outsb
std
pop
ja
add
inc
fdivl
or
call
test
cmp
push
jo
pop
xchg
add
adc
mov
inc
add
mov
in
push
mov
arpl
popa
jle
out
push
pop
into
add
pusha
stos
outsl
jo
xor
add
fstpt
mov
cmp
loopne
lahf
pop
dec
xor
add
inc
add
stc
test
push
jmp
mov
loop
add
rol
fstpl
or
jl
cmp
or
mov
ljmp
or
xchg
aaa
loop
in
nop
int
add
jo
cs
mov
push
fs
rorb
add
sti
sbb
popf
rorl
pop
add
mov
loope
mov
sbb
popa
pop
sbb
dec
shrb
out
mov
rolb
adc
xchg
or
jmp
shlb
ljmp
xor
in
add
pop
inc
or
xchg
xor
add
outsb
mov
xor
xchg
jb
add
cmc
push
cmp
incl
pop
sub
aad
iret
inc
push
jno
add
out
ljmp
mov
imul
subb
pop
add
push
mov
add
nop
hlt
push
addb
adc
leave
or
ficompl
ret
add
scas
adc
and
adc
fistl
add
ficomps
mov
lods
cmp
adcb
nop
cmp
mov
and
les
pop
loopne
addr16
mov
mov
jae
adc
lds
pop
test
out
popl
and
push
pop
sbb
lcall
imul
fdivrs
add
or
cld
clc
dec
jbe
mov
lahf
sbb
xchg
loopne
in
out
push
das
mov
dec
ja
sub
mov
add
or
dec
outsb
pusha
pop
lods
js
add
arpl
jg
sub
sbb
sub
popa
add
int3
mov
mov
in
cmp
mov
pop
push
pop
mov
jns
xchg
filds
mov
lock
stos
xchg
sbb
mov
lds
imul
test
inc
hlt
lods
add
sti
je
mov
mov
mov
lock
pop
jle
gs
xchg
add
repz
loopne
add
mov
das
cmpsl
mov
sub
jg
sub
int3
pop
pusha
out
sub
popa
add
enter
or
mov
pusha
inc
aas
dec
fmul
add
jp
mov
push
mov
jl
sub
lods
or
dec
sbbl
cld
xchg
add
xor
lock
pop
mov
adc
call
clc
push
ja
pop
cmp
add
iret
vandnps
sbb
shrl
ret
jmp
push
mov
cltd
test
jmp
xchg
loope
or
shll
call
add
jbe
jecxz
bound
dec
cli
cmpb
pop
add
jnp
cmpsl
xor
les
inc
mov
jmp
pop
mov
ja
pop
shlb
out
pop
imul
mov
xchg
imul
ret
add
inc
jmp
loope
pushf
das
push
xchg
dec
jns
sbb
mov
dec
inc
in
sub
ja
jo
into
dec
loope
add
and
les
lahf
dec
dec
mov
adc
cmp
rcl
jno
jbe
add
je
xlat
mov
inc
jg
dec
test
xor
scas
jecxz
mov
fiaddl
test
rolb
fmul
sbb
lods
sub
mov
arpl
add
xor
dec
jb
pop
inc
adc
iret
xchg
xchg
add
js
mov
jge
scas
add
stos
repz
mov
jne
mov
je
or
adc
and
push
add
xchg
inc
movsb
subb
fdivrl
shrb
inc
push
loop
notl
cmp
stos
push
add
pop
mov
fsub
sub
sbb
loop
and
xor
jbe
jne
sbb
pop
push
loope
sbb
mov
out
jge
jnp
pop
xchg
in
loopne
out
push
add
mov
out
inc
add
mov
das
pop
dec
inc
xor
adc
jb
pop
pop
xchg
add
loope
fwait
add
add
and
mov
scas
jl
fisubs
js
add
rol
fdiv
add
or
and
cltd
mov
les
hlt
add
or
add
and
fidivrl
pcmpeqd
imul
inc
lcall
out
xorb
and
cmpsb
std
repz
popf
cmp
pop
cmp
or
into
mov
iret
addl
cmc
mov
add
jecxz
and
clc
shl
dec
roll
lds
incb
sub
cltd
dec
mov
pushl
add
xchg
aaa
cmp
push
adc
cmp
add
ret
fisttpl
dec
xor
xchg
jmp
sti
sahf
cmc
test
or
pop
adc
into
add
data16
mov
add
pop
jo
imul
int
nop
sbb
rolb
cwtl
dec
andl
add
add
cli
jl
add
sub
mov
ret
jns
cmpl
inc
mov
push
inc
mov
sub
cld
mov
adc
sbb
jle
lock
add
test
scas
mov
push
ljmp
stos
cmovnp
pop
jmp
push
push
dec
sub
cmpsl
push
jg
jo
mov
or
jl
add
xchg
add
jmp
add
out
movsl
add
popl
push
xor
xor
fldcw
in
sbb
inc
fwait
xor
push
mov
sarb
inc
xor
sbb
cmp
jecxz
cmp
add
jmp
inc
sahf
cmp
cmp
add
mov
in
xchg
aad
mov
mov
sub
test
push
add
out
xor
push
or
xchg
xor
sbb
jp
adc
mov
fnstsw
je
jae
add
fmuls
xchg
jbe
sbb
into
add
cmp
shr
lods
lods
add
ja
add
mov
or
pop
sahf
ret
pop
ja
movsb
pop
enter
fildll
ret
sbb
xor
jg
sub
or
xchg
iret
lret
shll
imul
mov
and
mov
mov
imul
adc
ljmp
push
pop
jmp
xor
aaa
inc
aaa
clc
and
js
sbb
xor
stos
ret
rclb
mov
xor
pop
ret
xchg
mov
out
fwait
test
mov
and
adc
mov
iret
and
sub
dec
jmp
rcl
inc
test
pushf
inc
add
je
clc
xchg
push
scas
loop
xor
into
mov
pop
push
cmp
push
dec
ret
pushl
inc
and
ficomps
ds
push
adc
jns
in
dec
dec
inc
or
add
loopne
enter
jbe
mov
icebp
cmpsb
add
push
sbb
mov
or
loope
not
or
jb
daa
bound
add
add
add
mov
testb
sti
add
test
jns
add
adc
adc
cmpsl
add
inc
sub
fadds
push
sar
inc
mov
and
in
sub
xor
xorl
loop
cmp
add
xchg
inc
sbb
sbb
bound
push
clc
mov
add
aaa
outsl
cmp
cmpb
or
iret
shl
dec
dec
rcll
shrl
push
cpuid
add
mov
loopne
fisttpll
mov
or
jnp
pop
sahf
ss
in
sub
jae
cltd
call
jo
div
pushf
cmovo
cld
pop
xor
jmp
push
shlb
sbb
dec
out
jbe
dec
xlat
repz
fstp
pop
add
stos
aam
cwtl
adc
mov
dec
scas
popa
add
or
add
addb
ficomps
ja
add
repnz
fsubl
add
or
insb
add
jo
jge
fnstenv
push
fidivrs
pop
in
add
mov
xchg
mov
dec
add
shrb
cmpl
sub
loopne
scas
add
or
push
std
pop
add
push
insb
mov
add
rolb
xchg
xor
jl
fstpl
add
cmp
xchg
sub
pop
dec
jl
fcoms
into
ja
push
imul
push
sbb
add
jle
mov
mov
in
in
ret
dec
je
add
and
cwtl
adc
push
mov
lcall
repz
add
stos
ret
dec
pop
sub
mov
inc
add
lcall
sub
sub
push
por
sbb
mov
in
cs
inc
adc
faddl
std
xchg
add
ret
xor
mov
and
jno
daa
sahf
pusha
add
lea
lods
add
mov
repz
sub
xchg
in
add
or
and
inc
sti
xchg
dec
int3
mov
push
xor
push
test
bound
mov
mov
lods
andl
pop
out
divl
push
rorb
test
ds
jo
xchg
inc
pop
pop
push
xchg
inc
mov
add
sbb
sub
xlat
dec
call
push
sbb
scas
int3
inc
rcl
inc
out
or
jbe
cmpl
mov
stc
in
fbld
add
test
rorb
negl
jns
cmp
push
add
mov
sub
addl
cli
mov
and
xchg
add
cmpsl
cmp
push
jmp
fwait
dec
xchg
lret
ljmp
ltr
inc
push
jbe
std
adc
call
icebp
add
dec
les
testl
pusha
insb
in
shrl
pop
pop
fwait
nop
loopne
cmp
test
call
testb
mov
xor
loopne
mov
add
cmp
add
int
scas
sbb
xor
out
adc
int
add
shr
pop
lods
call
inc
sbb
mov
xor
out
jecxz
push
xor
bnd
pusha
lods
xlat
mov
es
add
jmp
imul
popf
jmp
insl
add
and
pusha
hlt
xor
adc
cli
adc
jno
lock
pop
or
popw
jmp
xchg
ljmp
mov
push
add
and
pushf
ret
xchg
jg
int
mov
scas
mov
add
fisttpll
rorb
ret
call
inc
xor
add
mov
imul
movsb
add
scas
jle
nop
add
xchg
sub
push
subb
pop
out
loopne
cmpsb
movb
call
jae
pop
adc
mov
ror
fsubrl
loopne
jp
sub
dec
shlb
cltd
shld
pushaw
cmpsb
pop
cli
ja
add
xchg
movb
mov
and
pop
arpl
cmp
add
mov
cmp
mov
push
cld
jmp
fcompl
adc
stos
push
or
or
dec
add
es
cmp
leave
outsl
xchg
dec
sarb
stc
lea
in
or
out
sub
shlb
pusha
mov
stc
mov
mov
je
pop
mov
rol
shll
cmp
xor
ss
rcrb
sub
pusha
mov
push
and
xchg
mov
addb
add
int3
jb
adc
das
mov
fcom
popa
add
mov
out
clc
sbb
dec
xor
add
xchg
push
mov
xchg
repz
mov
push
pop
inc
ja
add
mov
inc
divl
add
lds
dec
inc
adc
enter
lret
push
out
imul
add
in
sbb
aad
sub
aam
add
les
subb
inc
loop
loopne
imul
push
add
cmp
mov
cmp
pop
and
mov
push
call
mov
cmp
adc
iret
repz
dec
loop
cmp
add
jns
jo
adc
add
add
fmul
xor
test
aad
addb
fcompl
cmpsb
in
add
adc
fsqrt
mov
pop
adc
outsb
inc
jmp
add
xor
sbb
sahf
out
adc
jecxz
test
push
mov
test
lods
roll
fisubrs
or
pop
sbb
and
call
incb
xchg
sub
and
loopne
push
add
push
adc
or
push
movsl
add
pop
fcompl
mov
push
lods
rcrl
and
cmpl
and
imull
add
out
rorb
or
add
sbb
cmc
mov
pop
aad
rcll
sbb
pushf
or
test
call
ljmp
add
sbb
add
inc
lahf
xchg
pop
sbbl
sbb
mov
mov
fxam
test
cmp
mov
fcomps
lods
and
sbb
in
testb
rclb
jo
pop
xorb
mov
mov
mov
cwtl
pop
or
fldenv
dec
imul
add
out
stos
xor
pop
adc
add
push
mov
sbb
dec
clc
push
test
dec
sub
add
xlat
shlb
or
add
adc
adc
mov
xor
xor
iret
ret
lret
test
xchg
inc
mov
add
pop
xchg
fwait
add
dec
fucomi
stc
adc
adc
aad
xor
ljmp
cmp
ja
mov
push
out
xor
or
call
fstps
lret
add
pop
in
add
js
frstor
das
sbb
xor
loop
xchg
fs
inc
add
stc
aam
pop
mov
dec
pop
add
test
mov
push
scas
ds
or
fiadds
nop
inc
loopne
cmp
add
repnz
ret
mov
js
lea
add
and
enter
sbb
cmp
lods
push
xchg
mov
push
sbb
xor
adc
cmp
add
test
cld
mov
push
stos
mov
fwait
sbb
and
jp
add
icebp
jo
add
cmp
xchg
dec
addl
in
sbb
or
inc
lock
jg
lods
add
xchg
fldenv
xor
mov
cli
sbb
popa
movsl
test
push
roll
add
sbb
jecxz
fnstenv
jge
adc
call
stos
add
les
hlt
outsl
jle
push
sub
stc
add
int3
jecxz
dec
shrb
mov
mov
ret
dec
add
loopne
pop
fabs
dec
in
cwtl
rolb
mov
outsl
mov
or
mov
add
add
pop
out
xor
mov
out
jl
stos
mov
or
add
inc
mov
out
add
mov
and
add
cmp
frstor
mov
mov
xchg
test
addb
pop
ds
add
mov
add
outsl
cmp
cmp
filds
push
cld
and
ss
arpl
or
fnstsw
bound
push
dec
add
fadds
xor
js
movsb
cwtl
add
fsub
cld
or
fucom
in
mov
or
cmp
aam
clc
dec
lret
or
lcall
lods
dec
test
push
jb
cld
add
aad
add
cmp
inc
jg
push
or
push
xor
loopne
test
xor
sub
sbb
dec
cmp
jae
jge
or
das
xchg
xorb
push
cmp
ret
jle
out
ss
add
mov
lret
js
add
mov
lcall
pop
out
out
add
jmp
sub
and
push
adc
lret
fstpt
mov
sbb
filds
loopne
sbb
push
adc
sub
mov
push
fimull
add
out
adc
xor
and
and
sub
xchg
add
sub
mov
shll
add
push
outsb
cmpb
data16
mov
pop
sbb
sub
adc
cli
adcb
inc
push
lea
outsl
dec
add
add
xor
add
xor
pop
movsb
push
or
push
add
inc
adc
mov
dec
sbb
stos
add
data16
in
std
add
arpl
fldl
popf
mov
rcrb
xchg
movsl
push
shll
sbb
add
xor
ljmp
clc
add
ret
cmpl
call
add
out
fwait
rorb
cmp
in
and
in
call
and
mov
stos
shlb
pop
pop
movsb
xchg
or
push
add
call
fadds
addb
sbbl
push
xor
xchg
and
in
jae
sub
mov
subl
loopne
adc
leave
cmp
cli
add
pop
int3
xchg
push
mov
rolb
aad
or
sbb
shll
cmc
push
stos
xchg
and
daa
test
movsl
mov
inc
sub
cmp
push
add
daa
pop
rolb
pop
add
repz
jns
dec
repnz
pop
hlt
xor
pusha
cmp
retw
cwtl
divb
cwtl
es
pop
add
add
arpl
cmp
push
sbb
inc
xor
fdivrl
xchg
in
ljmp
and
inc
jns
divb
add
pop
dec
dec
cmp
add
sub
cmp
add
jne
adc
sub
push
pusha
scas
ljmp
mov
aam
test
jo
jnp
xchg
sbb
dec
ja
add
mov
xor
movsl
xchg
rol
cmpl
cld
jp
pop
push
int
and
inc
mov
lea
aas
movsb
incl
ret
test
sarb
dec
outsb
imul
dec
in
sbb
sub
into
clc
sbb
jmp
jle
addb
push
mov
popf
add
arpl
cmp
dec
orb
adc
iret
sub
push
sti
gs
xor
sub
pop
lea
adc
pop
inc
sbb
or
inc
sti
int3
sub
and
rcr
pop
adcl
cmp
in
and
pop
stos
sbb
out
sbb
or
dec
mov
in
negb
add
jb
les
push
std
icebp
and
mov
lret
add
push
push
lret
loop
out
iret
add
sub
cwtl
sub
jb
pop
movl
jge
enter
out
push
add
dec
jae
push
hlt
das
cmp
addr16
adc
dec
add
mov
xchg
jo
add
mov
ret
popa
testl
aam
std
shl
push
incl
xchg
addb
enter
mov
sbb
add
jl
jbe
jo
lret
sbb
cmp
add
xchg
mov
jnp
iret
add
sub
push
ret
sarl
push
pop
push
mov
jne
dec
cmp
bound
xchg
fimull
xchg
stos
add
sbb
std
mov
popf
fiadds
jnp
xchg
push
inc
test
loop
dec
es
testb
iret
lds
sbbb
arpl
repnz
mov
sub
movsb
add
cmc
fildl
leave
sub
adc
and
cmp
jns
mov
ret
aaa
add
cmp
dec
mov
shll
jmp
add
pop
arpl
imul
lock
cmp
mov
push
lret
fwait
add
mov
in
into
cwtl
cmpsl
and
lret
sti
push
pop
add
push
sub
out
lret
push
es
jno
fldl
cmp
fcompl
or
cld
push
adc
add
insb
scas
fsubl
jns
hlt
xor
cmc
sub
sahf
mov
cmp
adc
jo
fwait
xor
std
sbb
or
add
cmp
dec
and
outsl
adc
clc
insl
pop
sbb
sub
mov
add
jnp
adc
addb
mov
pushf
add
add
mov
sub
xchg
inc
add
jo
test
lea
add
sahf
frstor
adc
pop
js
or
inc
fsubs
pop
out
shrb
jnp
bnd
xor
dec
dec
sti
hlt
sti
xchg
or
jmp
fdivl
inc
push
sbb
xchg
add
adc
rcll
inc
out
shrb
cmpl
insl
dec
lods
jbe
add
add
test
sub
mov
pop
stos
add
imul
lcall
add
inc
pop
add
ret
bound
push
add
add
test
cld
push
mov
outsl
add
ss
xchg
mov
popl
adc
call
mov
fiaddl
inc
out
js
cld
lea
dec
add
jmp
inc
mov
add
inc
push
push
les
shlb
jp
lds
push
leave
arpl
loopne
adc
mov
xchg
les
ffreep
inc
mov
or
ss
add
mov
xchg
pop
xor
mov
xchg
push
add
mov
mov
pop
sbb
or
popf
xchg
jg
lret
mov
insl
xor
shlb
jne
add
pushf
adc
ret
fnstenv
inc
xchg
mov
sbb
nop
mov
add
dec
mov
dec
jae
mov
out
inc
in
jb
bound
rcl
mov
xchg
xchg
popl
and
mov
por
sbb
and
fs
arpl
push
or
cmp
divb
fs
repz
add
mov
jg
aas
jno
outsl
add
enter
add
inc
iret
adc
mov
aam
xor
jns
mov
shlb
pop
push
dec
ret
cmpb
push
jg
add
aam
fisubrl
xor
imul
gs
mov
jmp
jg
mov
ljmp
inc
lahf
mov
push
add
sbb
cmpsl
test
nop
dec
or
daa
adc
pop
jg
xchg
add
ret
xchg
gs
nop
outsb
sbbl
out
jecxz
ficomps
push
xchg
or
xlat
dec
push
dec
add
aas
cmp
aam
jg
add
mov
inc
xor
into
out
and
add
dec
pop
adc
lea
add
mov
je
fucom
rolb
movsl
scas
arpl
pop
das
fisubl
int3
xchg
pop
insl
roll
mov
dec
jo
lods
xchg
leave
sbb
out
add
cmp
inc
inc
mov
shll
add
mov
mov
adc
loopne
loope
jmp
sub
mov
sbb
call
mov
aaa
les
and
sub
add
add
xchg
mov
in
add
push
andl
xchg
inc
xchg
push
pusha
adc
mov
jge
cmp
fistps
pop
add
ja
dec
add
xchg
push
dec
push
cli
add
sub
adc
test
add
or
inc
sub
jb
inc
push
iret
mov
adc
pop
in
jecxz
jmp
pop
movsb
pop
mov
jns
fistps
pusha
aas
inc
xchg
adcb
fstpl
add
sbb
add
addr16
or
aaa
lods
add
inc
add
inc
cltd
fwait
fs
push
ror
subl
in
add
xor
jae
add
adc
stos
sub
arpl
mov
jg
mov
xor
fiaddl
stc
mov
push
pop
jb
cmp
pop
fs
or
push
cld
dec
dec
lcall
mull
popa
cmp
cmpsl
mov
les
add
cs
inc
add
jp
add
ds
add
incl
std
repz
out
dec
mov
aas
idivb
enter
std
aaa
adc
cmp
je
pop
dec
jecxz
add
sub
cmp
setge
stos
sub
jbe
xlat
popa
jecxz
sub
or
adc
inc
shlb
cmp
lcall
scas
dec
fnstcw
popa
test
dec
xchg
inc
adc
push
and
or
hlt
sbbl
xchg
push
jb
jne
fs
test
sub
out
xchg
insl
add
loope
and
mov
dec
add
add
stos
mov
add
insb
ljmp
pushf
and
popf
stc
rorb
mov
hlt
loop
add
or
cmpb
and
mov
filds
cs
ss
push
add
jg
std
repnz
xlat
ljmp
clc
fbstp
push
add
mov
lea
call
add
mov
adc
leave
cmp
imul
ret
pop
data16
mov
andb
pop
and
add
push
inc
pop
ljmp
sub
mov
sahf
adc
and
mov
call
pop
fwait
and
inc
stos
inc
mov
addl
jl
sub
adc
daa
xor
inc
cs
ja
add
and
adc
add
loopne
dec
rolb
sbb
imul
inc
out
shlb
loopne
aas
or
clc
jl
push
pop
lahf
and
paddsw
add
mov
test
jbe
dec
test
arpl
call
fistpl
pop
js,pt
sbb
jecxz
add
int3
call
adc
dec
adc
call
out
je
jo
sbb
prefetch
fdivl
shl
pop
lds
lock
xor
dec
out
push
push
and
pusha
inc
daa
add
push
imul
mov
sub
add
sbb
cltd
mov
push
add
mov
aas
jle
adc
add
fdivs
mov
cmpsl
adc
mov
sbb
leave
adc
mov
jecxz
gs
ljmp
arpl
jmp
xlat
pop
pusha
clc
jno
add
aaa
out
sbb
push
stos
add
or
test
xor
add
rorl
aas
add
push
xor
add
sub
test
inc
adcb
pop
and
fwait
xor
push
add
scas
in
and
into
cmp
push
xadd
pusha
sub
mov
dec
mov
sbb
aaa
inc
movsb
fadds
bound
rcll
incl
outsb
rclb
dec
cmp
adc
mov
out
mov
or
es
xlat
dec
sbb
cmp
wbinvd
xchg
data16
dec
fsubp
add
cmp
inc
lahf
hlt
faddl
cmp
jg
es
fidivrs
and
mov
mov
cmp
rcrl
insb
mov
dec
jge
add
mov
testb
std
pop
movsb
and
ret
sub
add
push
mov
push
fnstenv
sub
lret
sbb
pusha
gs
mov
push
xchg
add
fsub
xlat
add
mov
cmp
add
mov
nop
aam
icebp
scas
loope
add
clc
push
inc
orb
xchg
dec
add
gs
fldenv
in
mov
jecxz
rcr
lock
mov
imul
add
popa
push
arpl
je
cs
lcall
add
popf
add
pop
inc
movsb
faddl
mov
mov
fs
in
fnstcw
or
xor
xchg
stos
popf
dec
sbb
and
and
mov
ds
push
popf
dec
pushf
inc
cld
mov
fistpll
cmp
add
int
mov
and
iret
jo
push
dec
sbb
stc
sub
adc
arpl
adc
mov
ret
pusha
add
ficoml
inc
cltd
and
mov
stc
xor
fsubs
and
add
fcmovnb
jmp
adc
dec
sub
adc
xorb
pop
xor
fiaddl
clc
repnz
add
mov
sbbl
add
mov
xor
xchg
sub
mov
lock
lods
mov
push
add
addr16
ret
movsl
loop
add
fs
fsubrs
aaa
incb
and
push
mov
shl
sbb
arpl
fcoms
cmp
jg
dec
dec
aaa
and
imul
jne
and
out
rdpmc
push
lea
cwtl
or
fistps
xor
pop
test
sub
jo
pusha
js
cld
leave
add
pop
ret
mov
add
pop
adc
in
dec
or
insl
sbb
add
js
out
outsl
pusha
scas
cwtl
sbbl
mov
xor
xor
push
inc
mov
add
in
not
jl
push
cmovnp
inc
sub
inc
or
sbb
add
mov
repnz
mov
fwait
adc
add
mov
movsb
mov
mov
jo
cmp
xor
push
ret
pop
xor
fisttps
in
mov
sub
ret
dec
imul
mov
arpl
repnz
imulb
pop
add
push
dec
fdivl
mov
sbb
cld
and
movsb
xchg
or
mov
lcall
dec
movsl
sub
add
pushf
mov
add
pop
add
sub
adc
shr
in
out
pop
mov
aaa
and
sub
rcl
test
in
xlat
add
dec
and
push
cmp
add
ds
xor
repnz
push
add
xchg
test
sbb
pop
lock
dec
inc
ret
imul
inc
into
mov
jb
stc
and
arpl
sbb
out
mov
mov
lea
aaa
jns
add
outsb
lock
xor
and
mov
loopne
mov
mov
xor
push
out
test
scas
movsl
fisttpl
jmpw
sbb
or
jle
mov
jnp,pt
adc
pop
mov
xchg
pop
add
cld
mov
add
jmp
ds
dec
pop
cld
insb
sbb
add
nop
addb
and
mov
lcall
jns
testb
jmp
leave
idivl
and
imul
dec
jge
scas
ljmp
jns
xor
mov
add
cmp
add
loope
dec
jecxz
lcall
mov
add
inc
and
xchg
jmp
xchg
add
cwtl
subb
xor
icebp
out
adc
test
push
les
imul
pop
xchg
inc
sbb
lock
sar
cmpl
cmpsb
sbbb
fisubrs
or
inc
test
cli
loopne
fdivs
cld
inc
addb
xchg
sub
sbb
fsub
mov
add
pop
adc
setae
fmuls
jecxz
add
push
jg
iret
lods
mov
add
jne
or
push
dec
mov
in
mov
fdivs
ljmp
loopne
test
sub
adc
negl
adc
in
sbb
push
lock
cmp
add
xlat
icebp
out
sbb
lods
pop
movsb
cmp
pop
iret
xor
jo
in
add
jae
xchg
pushf
and
js
add
enter
jno
scas
add
pop
xchg
jmp
cld
pop
push
sti
sbb
sbb
cmp
pop
mov
icebp
sarb
lock
int
and
data16
pop
shlb
dec
out
xchg
sbb
add
inc
and
cltd
icebp
aad
mov
jb
lahf
inc
in
dec
loop
add
pop
inc
hlt
xor
mov
add
inc
lock
pop
cmpsl
addb
push
fcos
jae
iret
inc
sbb
out
ljmp
add
rorb
add
xchg
inc
add
cmp
xchg
shrb
and
sahf
adc
push
and
int
arpl
mov
jnp
xchg
push
cmp
xor
inc
jp
xor
add
mov
dec
sub
fcom
lcall
pop
cmp
test
pop
roll
pushf
push
fdivp
cwtl
jne
add
xlat
or
cli
push
mov
add
out
sbbl
lock
xorb
imul
loope
sahf
aas
pushl
sub
cmp
or
add
xor
sbb
push
adcb
mov
sub
test
add
jle
cmc
jg
loopne
std
push
lock
daa
pop
adc
lcall
push
int
push
mov
pop
js
push
push
ds
xchg
fyl2x
enter
add
daa
fnsave
jno
cmp
jmp
xchg
jecxz
sub
xchg
fidivs
jnp
loopne
mov
cmp
dec
xchg
and
jb
add
cld
pushf
add
push
mov
mov
stos
and
mov
fsubs
adc
out
test
rcrl
gs
fwait
mov
pop
or
ss
shlb
popa
aad
add
push
mov
mov
inc
int
add
adc
test
push
sub
and
add
popf
sbb
rolb
decb
les
fwait
add
inc
into
or
in
push
inc
cmpsl
icebp
adc
sbb
je
dec
cmovo
mov
jle
es
iret
stc
adc
in
mov
addr16
xlat
test
add
jecxz
test
xchg
rcll
je
sbb
pop
das
xchg
adc
sub
add
cmp
add
pushf
inc
jo
cld
add
rcll
inc
add
cltd
jns
add
sbb
mov
lret
pop
add
adc
in
lds
add
cwtl
int3
jecxz
and
daa
cli
in
cmp
pop
add
mov
addr16
arpl
add
call
xchg
xbegin
leave
and
sarl
mov
das
out
add
cmc
leave
adc
mov
xor
push
insl
mov
inc
outsb
testl
xor
ficompl
add
cmp
or
xchg
mov
xor
xchg
add
fxch
mov
add
sbb
inc
and
adc
sbb
jbe
inc
push
pop
add
ljmp
aam
jb
in
inc
rclb
repnz
mov
jo
out
mov
dec
push
xor
rorb
cs
jmp
dec
xchg
ss
in
and
mov
cmp
add
loop,pn
imul
lret
shrb
aam
jb
daa
outsl
cmpsl
cmp
mov
stos
in
cmp
add
loop
mov
xchg
add
adc
jecxz
decb
icebp
add
push
jge
cmc
mov
push
negl
mov
add
js
adcl
fstpt
mov
sub
add
jo
sub
test
jle
into
inc
jmp
jae
mov
push
addb
adc
cmp
mov
add
mov
js
push
sbb
incl
xchg
mov
add
ds
add
jno
fmul
jmp
repnz
ficoml
mov
cmp
cmp
out
push
inc
dec
push
sub
mov
mov
jae
rorb
rol
mov
js
pop
xor
add
lahf
shll
icebp
mov
inc
sbbb
mov
out
pop
sub
out
jne
mov
mov
popf
xchg
stc
cmp
lret
daa
xor
push
cmp
dec
push
mov
popl
mov
int3
into
call
rolb
dec
int3
test
adc
aam
loopne
dec
push
mov
inc
stos
inc
add
sub
scas
jbe
cli
repz
mov
mov
pusha
lea
push
sub
in
test
shll
aam
ret
stos
testb
sub
mov
adc
fs
mov
negb
test
loope
jns
lods
mov
movsl
popl
movsb
mov
sbb
mov
mov
xchg
add
push
jmp
daa
ret
movsb
or
ljmp
bound
jno
jecxz
int3
cwtl
sub
ret
loopne
subl
dec
or
ds
jmp
hlt
mov
add
popa
inc
lahf
rcrb
add
cmp
rcrb
lods
cmp
add
dec
sar
popl
addr16
pop
mov
inc
xor
push
aam
pushf
jno
cwtl
rsqrtps
cmp
loopne
mov
jge
sub
add
or
pushf
mov
or
mov
jb
mov
lahf
and
dec
push
js
out
in
loopne
iret
adcb
ja
cmp
jecxz
mov
cmp
adc
clc
mov
mov
in
cmp
and
orb
mov
xor
movsl
into
inc
add
sbb
pop
mov
add
and
jbe
add
cs
jb
sbb
xor
stos
out
shlb
mov
test
enter
jns
push
sarb
push
add
daa
xchg
out
dec
lcall
repz
repnz
cli
enter
add
pop
test
sub
rorb
inc
mov
in
fsubrl
dec
daa
js
xor
cmp
cmp
xor
add
cmp
xchg
or
es
cld
mov
loop
movsb
add
leave
jnp
jle
ja
pop
pop
inc
xchg
ljmp
xchg
add
fsubs
add
into
in
add
cmp
dec
add
inc
mov
add
push
fistpll
or
mov
mov
roll
ret
stos
push
inc
outsb
add
push
lock
xor
negl
cmc
addb
jmp
mov
dec
cld
imul
loopne
and
mov
or
rcrb
and
add
loop
pop
clc
incl
andl
rolb
out
aad
ss
into
mul
jb
addr16
xchg
sub
cmp
je
jle
fcoms
into
adcl
roll
not
pop
mov
add
jge
shll
test
out
xchg
add
fcmovnb
push
movsl
mov
loop
rclb
mov
xlat
es
and
jle,pt
xchg
fdivr
adc
sbb
and
push
lret
pop
adc
aad
push
dec
bound
out
scas
out
or
sbb
icebp
in
in
add
mov
jl
pop
push
add
les
cmp
cmp
add
test
mov
lret
rcll
xchg
mov
sbbl
sub
loopne
mov
bswap
jl
orb
sbb
sub
dec
sbbb
outsl
imul
in
mov
aas
or
mov
add
pop
push
lcall
pop
push
cmp
dec
in
sti
or
dec
xchg
out
jecxz
mov
mov
pop
add
dec
sbb
add
add
add
lods
sub
test
clc
in
push
mov
sub
add
adc
xchg
sub
lret
add
ja
and
jp
jnp
mov
xor
fmulp
not
cli
and
sub
jp
sub
sub
jo
xchg
mov
sbb
leave
push
bswap
mov
push
inc
fstl
popa
mov
ja
sahf
sarb
cmpsl
aas
adc
les
fnstsw
pop
nop
xchg
add
out
and
mov
mov
and
inc
dec
shll
iret
das
jge
mov
add
adc
add
in
push
cmp
pusha
mov
fsubr
add
mov
lret
lock
sub
and
hlt
xor
add
es
add
fwait
out
imul
lds
mov
out
or
jo
std
insb
jno
add
stos
mov
out
loop
test
dec
mov
dec
push
shl
sub
mov
xor
out
mov
inc
int3
mov
add
je
mov
push
cmc
lods
fistpl
inc
es
add
mov
pop
data16
mov
mov
in
and
ljmp
aam
inc
repnz
test
mov
mov
jnp
add
xor
sti
sbb
test
mov
jecxz
mov
cmp
mov
and
add
dec
addl
int
push
adc
push
mov
sahf
inc
inc
les
jnp
enter
popf
sub
adc
mov
cwtl
mov
rcrb
cmp
call
jp
mov
sbb
addr16
adc
faddl
popf
in
mov
pusha
inc
es
inc
dec
push
es
mov
sub
inc
cli
cmp
mov
daa
push
fadds
cs
add
add
and
inc
cwtl
inc
dec
out
inc
push
lcall
jb
sbb
push
pusha
mov
or
sbb
pop
addr16
in
add
mov
mov
jmp
and
sbbb
cmp
xchg
adc
cs
pop
add
mov
rorb
addb
pop
add
mov
cltd
pusha
imul
int
cmp
mov
sbb
mov
daa
inc
add
movsb
and
int
push
push
adc
pop
mov
xor
js
add
popf
jb
mov
lds
test
movsl
add
cmp
push
dec
mov
ss
pop
pop
sub
add
test
ret
pop
jb
pop
mov
and
iret
mov
inc
mov
dec
add
mov
lea
xchg
cli
faddl
ljmp
and
adc
push
mov
test
mov
lods
xchg
sub
mov
xor
stos
sbb
out
push
mov
add
pop
stos
cli
out
add
sbb
or
loopne
xchg
push
push
add
shll
add
pop
cmpxchg
clc
xchg
pop
shrl
loop
push
cmp
aad
mov
add
cmp
icebp
add
add
add
adc
add
xor
mov
fildl
fnstenv
xor
add
xchg
cwtl
shll
ljmp
es
aad
add
lea
xchg
and
and
mov
add
inc
cmp
jns
dec
data16
cmc
inc
dec
bound
fildl
xor
pop
add
lods
xchg
cli
pop
jo
add
movsl
int3
or
cmp
shl
in
cmp
inc
pop
xor
lock
les
stos
ljmp
mov
jge
mov
adcb
mov
and
movsb
cmovae
xor
int
push
rcll
shlb
pop
out
mov
pop
add
cmpsl
cmc
in
sbb
rol
ficomps
or
repz
orb
pop
loop
pop
jns
inc
mov
pop
lods
pusha
loopne
add
push
test
hlt
jle
sbb
scas
add
cmp
andl
lcall
lods
fiadds
insl
inc
dec
ss
mov
ret
fcmovne
cmp
cmp
pop
rcll
cmpsb
ficoml
add
imul
rcrb
dec
cltd
mov
mov
int
addl
push
xor
add
outsl
dec
and
ss
cmp
arpl
add
add
pop
cmpsb
jl
aam
pop
cwtl
adc
adc
sbb
mov
rclb
push
dec
add
cmp
push
or
cmp
cmp
adc
xchg
fmul
pop
add
add
sbb
sub
mov
loop
mov
test
and
xor
cmp
mov
and
das
add
imul
mov
loop
lods
add
jp
push
dec
fcoms
mov
sub
mov
lods
popa
xor
jb
adc
inc
cli
pop
xor
out
outsl
jmp
inc
cmp
movsl
add
int
jl
nop
orb
loop
pusha
cmp
icebp
mov
sub
test
hlt
cmp
jno
cli
push
test
sbb
dec
aaa
mov
pop
int3
mov
xchg
aam
ds
xchg
xor
fnsave
and
jge
adc
sub
pushw
lret
push
scas
sarl
sbb
xor
popf
or
add
stos
cli
mov
pusha
test
sub
ljmp
push
sub
pop
add
mov
fdivrp
and
scas
xchg
add
in
fisttpl
jle
dec
loop
stos
push
lock
hlt
cmp
push
sub
in
dec
addb
mov
adc
add
pop
adc
jecxz
repz
add
inc
scas
sar
push
add
push
push
lcall
add
dec
and
dec
insl
in
mov
sub
imul
or
ret
lret
jge
cmp
dec
movsb
shr
cmp
add
pop
mov
pop
or
out
mov
push
jl
nop
xchg
and
adc
sar
pop
push
sbb
adc
xchg
lds
call
movb
push
mov
jne
add
sahf
aaa
adcb
xlat
add
jl
push
xor
mov
das
out
lea
push
out
mov
push
pop
pop
daa
orb
cmp
sti
xchg
sbb
push
adc
mov
enter
out
sbb
sarl
enter
or
clc
testl
and
add
ret
jle
mov
iret
add
mov
daa
add
mov
inc
nop
sbb
adc
testb
mov
lds
push
dec
into
cmp
test
cltd
jae
push
or
into
stos
and
inc
xlat
or
push
mov
cli
ljmp
mov
cmp
jbe
push
popf
mov
add
pop
push
inc
lock
cmpsl
les
call
decl
sbbl
jnp
iret
mov
je
adc
add
jns
jbe
adc
xor
negl
sti
sbbb
xor
lock
pusha
xchg
leave
add
xchg
lcall
xor
jmp
add
xlat
orl
add
and
add
pop
lret
loopne
add
or
add
mov
imul
jl
mov
jmp
lret
sub
iret
loop
pop
push
push
cli
push
mov
jle
mov
add
add
in
gs
movsb
xchg
push
lds
mov
mov
pusha
notl
add
out
inc
es
push
test
dec
bound
adc
ja
in
xchg
lea
cmp
or
loopne
loopne
jl
add
xor
pop
pop
xor
xor
loopne
enter
push
dec
cmp
cwtl
out
pop
jbe
je
fcomps
call
cmp
out
adc
xor
jb
pusha
popa
pusha
dec
sbb
iret
jle
adc
addb
dec
inc
and
pusha
add
out
sub
add
pop
lret
xchg
dec
inc
or
sub
inc
sbb
cmpb
push
cli
xchg
sub
or
mov
xor
cmp
or
and
movsl
add
popf
scas
daa
jecxz
dec
shlb
mov
inc
outsb
dec
pop
inc
test
dec
and
scas
cmpsl
jmp
add
mov
xor
cli
add
call
pop
lea
mov
cwtl
xor
adc
or
pop
test
mov
or
mov
dec
jno
jns
inc
adc
movsb
xor
std
jns
sbb
jnp
xchg
stc
add
test
cmpsl
hlt
mov
adc
movsl
cmp
fsts
mov
nop
add
pusha
test
mov
and
nop
mov
or
outsb
sub
in
sahf
inc
scas
inc
cld
pop
mov
mov
stos
add
into
in
dec
bound
out
fsubr
xor
pop
push
call
loop
jae
mov
xchg
stos
nop
xchg
pushf
fldl
pop
sub
or
xor
jbe
mov
inc
or
cmp
pop
mov
clc
mov
test
and
outsb
jecxz
jne
sahf
jmp
add
adc
and
sub
mov
or
jnp
add
out
aas
shl
lret
xchg
add
cwtl
icebp
push
or
pusha
cli
and
nop
aaa
mov
dec
push
cmp
test
les
rcll
mov
add
divl
mov
adc
dec
add
pop
js
movb
sbb
mov
ror
mov
pusha
int
mov
xchg
rclb
xchg
pop
inc
std
pop
sarb
mov
push
adc
pop
fbstp
fildl
mov
jmp
cs
je
push
jae
or
adc
adc
mov
lea
mov
popa
xchg
rolb
inc
mov
pop
push
add
into
cmp
cli
ret
add
rolb
push
mov
pop
add
pushf
lret
pop
or
mov
sub
fs
push
push
cmpsl
es
pushf
add
jle
aas
adc
aam
stos
and
and
test
cmpsl
pop
ret
dec
jne
add
scas
out
jb
outsb
add
test
ds
rorb
movsl
jno
pop
add
ret
push
add
mov
fisubl
push
push
out
xchg
xor
mov
pop
jns
notb
lock
in
sub
jle
and
clc
xor
out
push
xchg
cmp
add
nop
add
jg
xor
cmpsb
repz
das
push
pop
mov
cmp
insb
das
ret
rcl
add
xchg
cmp
cmp
adc
fldl
icebp
aad
push
test
push
add
dec
inc
inc
lret
lret
add
push
clc
syscall
jo
jl
cmp
or
mov
rorb
add
or
add
sarb
mov
mov
add
cltd
mov
into
int
or
nop
cmp
mov
jmp
gs
add
loope,pt
imul
inc
cmp
mov
jns
add
inc
pop
shlb
add
pop
lea
nop
pop
add
test
pop
aas
cmp
ret
inc
pusha
repz
or
push
xchg
adc
out
add
ret
fsubrp
xor
jl
outsl
pop
hlt
inc
and
or
bswap
adc
lcall
dec
inc
mov
or
add
mov
test
add
inc
xchg
or
inc
inc
pop
push
loopne
xor
call
push
jecxz
mov
cmp
jo
push
les
pop
mov
adc
adc
addr16
add
lahf
push
xchg
and
cltd
add
scas
in
pop
and
xor
mov
add
push
mov
clc
dec
sub
and
cmp
add
add
or
mov
jg
xchg
push
cmp
add
mov
jno
sub
enter
insb
add
mov
mulb
xchg
call
lret
in
mov
sbb
imul
pop
mov
nop
and
add
push
xor
add
test
ret
xor
call
jno
and
cli
or
notb
sub
in
mov
jl
decb
stos
cmp
add
divl
add
out
fldenv
or
push
scas
out
add
jns
lods
mov
scas
mov
xchg
in
aas
jle
add
test
fidivl
add
pop
test
bound
leave
pop
hlt
rolb
enter
or
adc
mov
mov
mov
adc
test
ret
cmpsb
jnp
arpl
shl
es
add
add
dec
mov
test
xor
stc
jb
add
test
ja
add
jno
das
ss
cmp
faddl
mov
xchg
add
pusha
mov
jae
add
jno
add
xor
data16
cld
lret
jl
and
sar
rorl
cmpsl
add
mov
adc
add
cmp
jb
add
add
dec
or
xor
popf
add
stos
mov
add
add
add
or
mov
ja
int3
addl
roll
mov
lret
mov
add
push
mov
push
pop
add
jno
outsl
fmull
push
push
mov
fwait
aas
out
lcall
outsl
lret
adc
jae
add
xchg
sub
dec
in
mov
es
rorb
bound
and
mov
lret
cmp
stc
cmpsb
insl
cmp
jb
and
js
nop
aam
mov
mov
rcll
push
cmp
xor
imul
jle
adc
mov
aaa
fcoms
rcrb
push
sbb
aas
les
mov
add
stc
sahf
ss
mov
mov
xchg
in
add
and
or
sbb
insb
and
add
push
fs
inc
jo
aaa
nop
and
add
push
jb
repz
add
push
sbb
sar
ss
sub
sub
jmp
ja
add
pop
aad
lock
test
addl
loop
mov
or
roll
push
dec
ret
aaa
xor
pusha
xchg
aas
nop
sbb
adc
cmp
pop
outsl
pop
push
add
cmpsl
pop
sub
dec
mov
out
inc
xor
jne
add
fcom
jge
mov
add
pop
xorb
cltd
pusha
js
nop
sub
sub
aas
andb
je
sub
sbb
cmp
shl
push
outsb
adcl
lock
jae
and
sbb
ret
mov
xacquire
clc
xor
cmp
pop
push
add
jbe
cmpsb
pop
add
mov
pop
or
arpl
aaa
lods
jne
add
pandn
daa
cmpb
mov
roll
push
xchg
roll
sti
jmp
xor
mov
mull
cmp
add
and
add
adc
xchg
cmp
cmp
ficomps
jne
xor
push
lods
jo
lods
push
jle
add
movsl
rep
divb
jo
push
add
in
sub
add
sbb
mov
scas
mov
inc
mov
mov
pop
mov
xchg
jge
push
or
jo
fidivs
addb
pop
into
sub
lcall
test
stos
js
andb
cmp
pop
add
repz
cmp
add
mov
mov
add
pop
adc
mov
popf
add
xor
test
xor
jmp
push
push
scas
mov
mov
jecxz
inc
and
add
cmp
cs
jne
in
test
pop
xchg
mov
mov
pop
adc
mov
int3
imul
adc
mov
mov
pop
jp
sbb
sbb
stos
mov
push
cmp
mov
add
loop
adc
pop
xor
lods
or
pop
rcl
cmp
aas
add
lret
scas
pop
inc
rorl
mov
cmp
push
add
push
and
mov
xor
in
ret
xor
scas
std
push
in
mov
flds
cwtl
push
aam
call
inc
adc
pushl
movl
repz
ljmp
sbb
mov
pop
les
add
xor
je
in
mov
lahf
xchg
add
inc
sbbl
and
cwtl
sbb
pop
int
inc
jl
shlb
lret
sbb
flds
fcmovnb
jo
wbinvd
jno
add
adc
jle
in
ret
inc
or
or
loop
out
movb
sbb
mov
push
add
imul
in
dec
mov
out
sbbb
push
xor
and
and
sbb
add
inc
call
pushf
sarb
jmp
push
leave
loop
minps
sbbb
and
popf
movsb
shll
xor
pusha
mov
bound
adc
andb
adc
movsb
add
dec
ljmp
out
jnp
cld
lahf
dec
push
add
ja
add
add
mov
repz
hlt
dec
sub
loop
add
and
or
test
jg
lahf
in
rcll
enter
adc
xchg
add
ficoml
pusha
xlat
cltd
outsl
add
mov
call
inc
mov
add
sub
sub
pop
inc
and
mov
mov
test
xor
mov
lcall
icebp
add
sub
roll
pop
mov
inc
or
dec
js
xor
push
mov
push
sub
adc
cld
cmp
fistpll
or
nop
inc
add
inc
cmp
cmp
rcll
jge
or
push
push
add
jp
dec
sbb
inc
inc
add
repnz
cmp
inc
xchg
jae
mov
add
inc
push
loopne
repz
add
test
inc
jle
add
mov
pop
addb
out
pop
rorl
mov
lahf
mov
inc
mov
or
pusha
idivb
add
rcrb
cwtl
dec
sahf
pop
out
setnp
packuswb
nop
inc
adc
fldenv
inc
xchg
movsl
pop
cltd
pusha
outsb
sbb
aad
add
add
pand
mov
lods
notb
jnp
xor
jge
xchg
pop
cmp
cld
pop
clc
jbe
adc
and
imull
movsl
daa
pusha
fidivs
mov
jno
pop
aaa
sahf
stos
xor
jp
inc
sbb
sub
inc
cmp
add
lret
arpl
mov
add
mov
je
pop
loopne
lret
jge
addb
iret
sbb
jno
loope
test
or
inc
inc
add
in
and
push
cmp
mov
xor
jne
lret
add
mov
movsl
xchg
push
or
test
outsb
mov
shlb
or
jae
movsb
dec
mov
dec
xchg
inc
aad
je
cli
xchg
adc
jecxz
add
lret
idivb
sbb
mov
cmp
in
mov
fsubrl
xor
in
int3
push
xchg
push
cltd
testl
mov
mov
pop
mov
adc
pop
add
or
je
push
dec
dec
negl
pop
xchg
in
out
lock
push
cmc
mov
jb
repz
dec
rolb
insb
imul
add
int
pusha
fdivs
add
and
xchg
pusha
popa
test
repnz
pop
movb
cmp
test
push
enter
lahf
add
jae
xor
pop
in
add
sbb
add
inc
pop
xchg
test
xlat
mov
verr
mov
cld
lock
jo
pop
adc
in
repnz
xor
push
inc
push
cmp
add
loopne
pusha
inc
in
mov
icebp
lock
pop
inc
pop
add
sbb
jmp
cmpb
orl
daa
add
in
divl
mov
scas
cmp
pop
sbb
aaa
mov
loopne
jo
nop
sbb
mov
cmpsb
rcll
test
lods
mov
add
mov
mov
aaa
push
je
pop
out
pusha
ret
dec
lret
jo
add
hlt
mov
jnp
inc
ss
cmpsb
mov
mov
sbb
jmp
adc
addb
xchg
add
scas
and
push
test
clc
add
in
add
adc
sbb
xchg
das
xor
lea
hlt
loop,pn
add
xchg
pop
or
and
int3
je
hlt
add
mov
push
sub
imul
pop
add
cmpsl
jl
and
adc
xchg
sub
cld
fiaddl
or
push
cmp
mov
cmp
push
mov
dec
popf
pop
jns
lods
jne
out
subb
mulb
pop
daa
scas
mov
sub
add
in
repnz
inc
and
scas
cwtl
imul
pop
add
add
sbb
aaa
call
cli
loopne
inc
pushf
push
add
xchg
cltd
out
lock
inc
jo
mov
xchg
push
xchg
loopne
sbb
pop
enter
call
lock
outsl
in
pop
add
inc
dec
jmp
sbb
adc
inc
and
fimuls
push
add
mov
sbb
pop
and
imul
loopne
std
daa
jl
test
cli
cld
adc
add
or
mov
sub
mov
ret
pop
mov
aad
icebp
add
test
mov
jg
repz
jmp
lret
subb
adc
pushf
add
mov
ja
adc
cmp
fiaddl
test
outsb
sbbl
mov
add
sbb
pop
std
mov
inc
mulb
sub
cmpsl
jbe
je
lea
insl
mov
idivl
mov
imul
mov
add
mov
xor
cmp
push
pop
fisubs
add
data16
add
adc
cwtl
shlb
add
popa
cli
rcrl
lahf
sub
mov
faddl
lods
lock
xchg
add
mov
sbb
jne
inc
adc
int
xchg
sub
rcrb
leave
add
das
pop
sbb
sub
mov
push
dec
pop
xchg
aaa
push
push
add
adc
adc
jmp
mov
fnstenv
mov
loope
dec
mov
add
or
scas
mov
je
iret
data16
pop
mull
add
adc
out
and
jp
add
adc
cmp
and
fld1
xorl
pop
mov
mov
inc
pusha
test
cmc
dec
add
pop
inc
int
pushl
lahf
adc
shll
and
add
mov
cltd
cmp
cmp
dec
out
mov
dec
in
fisubs
xchg
add
arpl
push
cmp
test
icebp
add
js
dec
adc
add
cmp
mov
les
into
and
add
mov
cli
and
lahf
add
std
and
mov
fidivrl
add
shlb
add
stos
in
outsb
out
sub
mov
cmp
ret
js
mov
ss
int
push
xor
mov
cmp
pop
mov
mov
dec
mov
pop
mov
and
out
stc
mov
dec
pop
pop
add
sub
enter
sub
add
and
or
xlat
and
add
adc
cmp
iret
add
xchg
push
lods
ja
stos
sbb
and
andb
cs
jl
xchg
push
rcl
cltd
loopne
jecxz
push
xchg
cmp
ret
mov
pop
adc
rclb
adc
cmp
pop
add
mov
push
adc
ret
rolb
sub
sbb
cmp
cmpps
cmp
shl
sbb
push
mov
dec
imul
push
adc
add
add
sbb
and
add
pop
cmc
push
in
push
andb
std
test
pop
cmp
jbe
lds
add
add
loope
das
jno
add
nop
mov
mov
in
pop
dec
xor
jle
xor
cmpsb
dec
out
pop
nop
sbb
sub
sbb
xlat
push
push
or
xchg
insb
dec
adc
pop
xor
insl
inc
or
arpl
das
lock
subb
and
add
ds
ret
adc
out
fisttpll
test
out
fsubl
shlb
fildl
loop
pop
mov
fsubl
cmp
or
imul
dec
jle
out
or
cli
mov
dec
dec
data16
inc
clc
or
push
pop
mov
inc
mov
jmp
pusha
or
imul
mov
xor
icebp
dec
enter
mov
orb
cwtl
add
sub
pop
scas
add
inc
pushf
arpl
cmp
outsb
stos
adcl
shlb
add
nop
loop
xchg
test
rcrb
jp
in
or
add
pop
inc
push
or
mov
pusha
and
fnstenv
adc
lret
das
je
pop
cmp
dec
add
and
inc
add
pop
cmpsl
iret
xchg
es
out
cld
add
dec
nop
xchg
push
pushf
pop
add
fiadds
fsubr
aaa
add
add
xchg
jo
test
add
add
aas
dec
adc
fcmove
sbb
movsb
sub
sub
adc
ss
push
subl
push
xor
add
stc
iret
push
in
or
mov
add
mov
cmp
std
loop
mov
sbb
xchg
jg
add
cmp
inc
loopne
xchg
pop
cmp
in
sbb
adc
stos
mull
repz
loopne
mov
push
mov
jae
add
fidivs
add
adc
jb
mov
pop
popa
push
icebp
incl
mov
adcl
rorl
cs
in
mov
outsl
das
cwtl
out
inc
add
sbbl
es
adc
push
inc
imul
jge
xchg
add
or
es
mov
out
add
arpl
loopne
push
movb
dec
inc
xchg
xor
adc
sub
cmovle
mov
loopne
or
fsubp
cld
int3
add
add
cmpsb
add
test
ds
jbe
incl
add
push
rolb
divl
rcrl
sahf
add
int3
aas
addl
xchg
cli
add
mov
jns
pushf
add
xchg
and
xor
ds
test
jp
test
fbstp
add
cmp
dec
jbe
add
sbb
fidivrl
and
aam
fldl
xchg
mov
inc
jge
clc
sti
inc
sahf
or
jmp
fsts
aam
xchg
add
cmp
jg
mov
cltd
pop
mulb
sbb
js
add
jno
add
enter
out
dec
fxsave
mov
push
lds
loopne
inc
daa
sub
pop
sbb
pop
jle
add
fsub
popa
add
dec
ret
sub
add
iret
mov
jge
in
incb
or
push
js
xorb
add
mov
sub
xlat
pop
loopne
lock
out
and
mov
jnp
jl
add
fcoml
scas
add
out
mov
loop
inc
jns
adc
pusha
out
adc
mov
add
sbb
sub
mov
xor
add
cs
pop
jle
push
cmovs
mov
shlb
faddp
add
pushl
mov
dec
cltd
fsub
in
arpl
jecxz
xchg
test
pusha
iret
js
add
cmp
or
loopne
sarl
fisttps
mov
and
jb
repz
les
cltd
push
push
incb
sbb
jo
cmp
inc
cmp
cmp
xorb
mov
xchg
popfw
mov
adcb
mov
xor
imul
mov
fucomip
testl
andb
push
push
ret
xchg
lods
sbb
int
xchg
pop
ficoms
pop
fisubl
test
inc
xor
pop
cmp
pop
movsb
ja,pt
inc
xchg
rorb
popf
and
adc
ljmp
jp
fstpt
cmp
xor
addr16
pop
jae
or
sbb
cmc
and
jmp
das
adc
adc
cltd
sub
es
inc
mov
add
mov
test
sbb
adc
cmpsl
movsb
js
enter
xor
add
pop
fadds
lock
cmp
dec
adc
add
movsb
adc
add
adc
or
xor
mov
mov
fmulp
testl
les
repnz
pop
adc
mov
pushf
push
inc
xor
mov
xchg
fsubrs
jo
push
and
xchg
jne
outsb
adc
into
repz
test
add
popa
push
mov
add
pop
rcl
imul
loop
jl
jbe
add
push
mov
add
and
mov
adc
add
push
push
fnsave
inc
add
add
clc
ret
sbb
dec
inc
jo
mov
insb
je
leave
xor
sti
clc
lahf
mov
enter
push
movsl
or
hlt
mov
cmp
fnstenv
gs
push
cmp
nop
xchg
mov
ret
aaa
nop
inc
adc
pusha
cld
insl
pop
fstl
ja
pop
pop
cmp
in
pop
push
bound
xchg
popl
and
icebp
xchg
push
mov
scas
outsl
and
cmovne
movsb
push
pop
shl
dec
xor
ds
in
paddsw
push
add
sahf
xchg
add
data16
stc
std
add
jmp
stos
or
xchg
push
stos
clc
into
jge
or
add
aaa
fnsave
sarb
negb
cli
mov
or
aad
loop
add
xchg
jmp
fnstsw
popf
in
test
cmp
push
shrl
fcoms
inc
cmp
out
lret
insb
push
fbstp
dec
pop
push
lods
cmp
add
xor
mov
jp
movsbl
fmulp
mov
pop
add
xor
or
mov
dec
or
sub
push
mov
cmp
mov
push
mov
sub
cmpl
test
mov
insb
or
aas
jg
mov
mov
dec
sub
dec
sti
jnp
and
pop
pop
jae
iret
mov
mov
or
pop
lds
les
sbb
mov
loop
push
add
movl
push
addl
push
mov
bound
pop
pushf
pop
or
mov
cs
hlt
push
cmp
mov
mov
sbb
adc
xchg
jmp
les
popa
add
outsb
loop
pop
sbb
sbb
roll
orl
cwtl
cmp
pop
mov
push
mov
pop
call
add
popa
mov
mov
adc
aas
mov
pop
rorb
repnz
pop
pop
adc
outsb
jl
sub
lock
data16
lret
shlb
push
iret
rorb
or
add
push
stc
cmp
adc
daa
cmp
icebp
call
dec
out
add
nop
push
dec
rclb
aad
popf
test
test
cmc
lods
std
dec
inc
xchg
out
pop
icebp
sbb
sub
pop
cwtl
jns
sbb
lock
jecxz
jae
lock
lock
adcl
xor
enter
jo
out
pextrw
insb
ficomps
add
daa
xchg
add
add
inc
movl
add
xchg
xchg
cmpb
bound
adc
cwtl
dec
inc
adc
push
es
or
ret
stos
pop
mov
push
xchg
shlb
push
or
mov
testb
xorb
enter
add
rcrl
fmuls
call
push
in
inc
arpl
add
jmp
lds
cwtl
sti
mov
out
stc
xor
pop
sbb
out
sti
jo
cld
xchg
mov
mov
add
and
pushl
jns
push
mov
out
nop
ret
add
clc
roll
sbb
cmp
cwtl
loopne
lods
add
fs
push
fwait
inc
sbb
and
and
mov
testl
stos
cld
dec
arpl
loope
push
and
fwait
xor
mov
dec
imul
out
dec
sub
andl
stos
mov
xor
mov
aas
push
in
mov
mov
cmp
mov
dec
sub
push
inc
add
push
pop
push
or
xor
xchg
add
dec
mov
test
add
mov
lahf
or
loopne
into
xor
lcall
pop
jae
pop
cmp
dec
jl
shlb
add
xor
xchg
fs
pop
push
test
pusha
and
cwtl
les
sub
jno
inc
add
aad
inc
xor
add
mov
xchg
xor
iret
inc
sub
test
mov
or
sub
popa
mov
scas
jge
ds
dec
add
or
movsb
add
or
sub
add
cmp
add
add
cmp
sub
mov
rcrl
push
push
add
inc
es
stos
push
insl
add
mov
adc
push
cmc
cli
sub
movsb
add
into
out
xor
pop
pop
insb
cmp
cmp
mov
fwait
insb
dec
cld
inc
mov
adc
dec
movsb
sub
push
add
add
aam
pop
mov
add
xor
inc
pop
add
gs
jg
sbbl
divb
pusha
adc
clc
or
adc
and
or
je
nop
test
pusha
inc
mov
hlt
adcb
add
incl
jg
sti
mov
data16
add
sub
mov
adc
add
sbb
adc
in
out
mov
and
movsl
or
mov
mov
test
hlt
pushf
jge
add
addr16
addb
rolb
add
in
movsb
aam
pop
mov
inc
imul
loop
and
add
cwtl
lods
filds
into
data16
push
xor
cmp
push
sub
ljmp
pop
jns
ss
aas
stos
inc
subb
insl
mov
push
jno
jb
je
adc
and
jmp
mov
add
xchg
testl
inc
mov
in
push
scas
sbb
loopne
stc
enter
movsl
jle
sbb
mov
js
cmp
jbe
das
xchg
add
cltd
stos
mov
dec
fldt
and
adc
pop
cs
add
rolb
pop
add
xchg
or
adc
js
add
fcompl
inc
adc
adc
add
and
test
ret
sub
dec
outsl
jmp
lret
or
ss
test
lock
inc
imul
ds
or
aas
mov
xor
adc
fsub
enter
pusha
sbbl
and
inc
add
push
pop
inc
xchg
pop
movl
add
stos
mov
pop
or
testl
loope
inc
push
in
push
push
jae
add
lds
and
pusha
and
sbb
xor
add
push
mov
nop
add
sub
shll
push
inc
add
lods
sbb
add
pop
out
int
pushf
push
leave
mul
lods
cwtl
add
mov
and
mov
inc
pop
mov
fdivrl
dec
cmp
mov
idiv
mov
sub
adc
ja
sbb
imul
test
or
add
cwtl
pop
sbb
pop
xchg
flds
pop
lahf
mov
sarl
add
push
movsl
add
mov
in
mov
mov
mov
cmp
lds
les
ficompl
fs
sbb
add
cwtl
in
xchg
xor
cli
int3
add
inc
xor
sbb
push
loope
push
call
les
idiv
cmpsb
out
pusha
push
xor
add
cmp
inc
in
enter
mov
and
push
pop
and
push
adc
xacquire
adc
mov
inc
push
jno
add
test
pop
pop
lcall
add
add
xchg
mov
mov
jo
add
jnp
mov
imul
sub
add
aad
jge,pn
hlt
shlb
add
xchg
inc
pusha
sbb
mov
sahf
aas
pop
cli
das
jge
lock
jecxz
add
call
mov
cmpl
popa
call
das
cmc
stc
sti
test
movsb
fistl
loopne
and
add
push
ss
aad
push
or
dec
js
push
cmpsl
dec
dec
pop
xchg
loopne
mov
clc
int
shlb
mov
in
pop
and
sbb
fmuls
dec
dec
sbb
adc
xchg
add
cmpsl
faddl
inc
inc
inc
fstpt
or
xor
ljmp
ret
ja
mov
xlat
aas
push
rolb
xchg
out
dec
js
add
jge
rcrl
pop
rclb
mov
add
dec
fs
jmp
jg
mov
adc
sbb
arpl
add
stos
mov
cmc
adcl
into
push
and
xor
pop
lea
fwait
adc
xchg
lock
das
dec
jb
xchg
adc
sub
pop
popa
leave
cmp
pop
sub
icebp
mov
adc
out
insb
add
xor
data16
faddl
in
add
outsb
dec
jl
sbb
nop
cmp
sahf
jns
push
lock
out
cmpsb
cmp
push
cld
xchg
mov
mov
jmp
dec
test
das
add
sbb
pop
pop
dec
outsl
cld
add
cmp
or
and
sub
sbb
rclb
push
or
mov
dec
and
xor
dec
imul
test
pop
popa
jl
js
sbb
push
lods
cltd
nop
add
sbb
mov
test
jae
fcom
cli
jg
cmp
cmp
inc
xor
insl
xor
in
shll
stc
jle
pop
push
mov
cmpsb
ss
int3
inc
scas
inc
insb
and
mov
add
mov
or
sbb
push
sub
icebp
ret
jnp
push
in
mov
pop
dec
lret
mov
pushf
in
add
mov
mov
ljmp
push
xchg
inc
xchg
out
nop
push
stc
add
mov
je
mov
test
das
clc
add
pusha
jmp
in
push
jg
movsl
shlb
jns
mov
push
jne
pop
sbb
cld
das
dec
das
mov
into
lcall
sarb
lods
mov
add
fadds
push
push
push
push
pop
xor
test
add
outsb
cmp
add
sbb
cltd
inc
fmul
cld
incb
dec
mov
pushf
ljmp
pop
roll
js
adc
cmp
dec
lock
ljmp
mov
adc
call
aaa
adc
push
ficompl
cld
pop
mov
repnz
add
jl
insl
sbb
mov
xchg
loopne
fwait
nop
clc
icebp
fmull
es
jmp
popa
iret
into
idivb
pop
push
mov
push
je
mov
movsl
sub
add
ror
clc
rolb
sbb
sbb
lds
pushf
addl
push
mov
cmp
and
xchg
js
pop
cmp
adc
inc
push
adc
lea
sbb
sbb
jb
push
adc
in
inc
sub
add
mov
pusha
add
in
xor
sub
data16
add
add
sbb
mov
push
or
push
les
iret
sti
loopne
test
into
cwtl
xchg
and
nop
daa
pop
cltd
lret
sub
cmp
jbe
push
das
sub
inc
call
mov
push
push
xchg
outsb
add
sti
fsubr
in
popf
xor
sbb
xor
call
pusha
mull
rorb
mov
aad
pop
in
test
idivl
adc
adcb
inc
pop
cmp
sbb
push
sub
mulb
cmp
xchg
add
mov
mov
pop
mov
jle
add
inc
inc
je
test
loop
pushf
mov
mov
jo
and
inc
pop
push
cmovnp
jns
inc
xchg
push
cmpsl
clc
cli
add
adc
pop
xor
or
add
icebp
dec
inc
add
push
pop
mov
rclb
shlb
jno
add
lds
sbb
bswap
add
rcrl
in
pop
jp
scas
mov
mov
cmp
add
push
js
jmp
adc
nop
push
xchg
xor
into
add
inc
ds
mov
add
mov
sbb
pop
test
add
mov
sti
mov
add
in
add
jne
add
call
xor
adc
data16
pop
mov
pmaxub
and
sbb
lods
cmp
pop
pop
test
iret
je
dec
dec
cli
push
sbb
loopne
in
add
test
and
iret
mov
jge
pop
andnps
popf
push
cwtl
and
jle
mov
add
je
daa
pop
lret
inc
into
aad
rclb
jle
xor
jo
outsl
pop
xor
add
shl
add
or
dec
add
jae
scas
lock
les
insl
push
inc
sub
dec
dec
sbb
fwait
and
jbe
mov
pop
cmp
xchg
add
push
movsb
sti
xchg
imul
add
adc
adc
or
aaa
add
jne
jmp
sbb
fdiv
dec
and
test
mov
sbb
and
xorl
fstps
rorb
cmp
pop
adc
sub
repnz
dec
iret
rcll
or
adc
push
push
jo
lret
mov
shlb
shrl
in
sub
and
pop
push
jge
test
cmp
mov
adc
pop
xor
movsl
fwait
add
in
push
add
mov
in
jnp
add
loop
adc
sub
pushf
outsb
data16
xor
test
mov
xor
movsb
popf
sub
push
into
sbb
addb
or
addb
adc
aam
ficoms
js
add
mov
mov
out
pop
lea
fwait
out
bound
in
push
dec
stc
fimull
mov
or
sbb
jmp
add
jbe
out
pushl
in
or
bound
or
inc
nop
inc
testl
in
icebp
jbe
sub
sti
sub
ja
add
js
inc
mov
call
stos
mov
shlb
sbb
test
jne
test
dec
cwtl
push
add
mov
shl
mov
add
in
sti
dec
mov
adc
shl
add
jmp
xchg
popl
xchg
mov
add
fnsave
add
lcall
lret
das
popf
fadds
adc
add
xor
dec
add
les
dec
inc
push
adc
mov
mov
sbb
jno
dec
dec
clc
hlt
dec
pop
in
clc
add
rcr
add
mov
push
cmpb
add
pop
cmpsl
jbe
add
testb
adc
sub
sti
fs
ja
lds
popa
add
cwtl
test
and
imul
or
mov
mov
inc
fldt
add
inc
xchg
cmp
adc
ss
pop
pusha
jo
fsubl
out
pop
xor
adc
jecxz
add
test
sub
fwait
js
mov
pop
lea
xchg
push
mov
sbb
data16
outsb
and
add
or
repnz
xchg
mov
ljmp
add
sbb
xor
mov
mov
repz
add
pop
ss
out
add
movsl
out
cmp
mov
add
xchg
inc
add
jnp
push
mov
add
js
pop
push
add
testb
cwtl
mov
xchg
das
or
sbb
pusha
push
push
pavgw
std
pusha
cmp
pop
fstp
add
test
mov
sbb
add
inc
and
add
xchg
lcall
aad
call
in
inc
test
std
verr
outsb
mov
nop
icebp
inc
inc
add
add
sub
and
in
mul
add
adc
pop
jne
add
push
sub
mov
and
divl
adc
inc
cmp
xchg
leave
loopne
data16
add
mov
mov
add
sbb
and
mov
add
jle
mov
js
je
pop
outsl
pop
in
out
and
rcrb
outsb
inc
xchg
sbb
xor
pop
clc
sub
mov
inc
jns
iret
mov
sarb
inc
fadd
test
pop
sbb
add
cmc
push
add
shr
bound
jo
repnz
repz
shll
push
sti
insb
push
cmp
jne
mov
pop
adc
push
push
shll
sub
ljmp
cbtw
mov
mov
outsb
pusha
jae
fmuls
lret
bound
ror
add
in
dec
mov
shlb
movsl
in
mov
mov
xchg
arpl
mov
mov
inc
fnsave
cwtl
rolb
loope
dec
add
sbb
jbe
or
mov
mov
inc
stos
in
xchg
ficompl
loope
pop
jge
cld
lock
or
and
xor
out
lahf
mov
ficoml
cli
and
jo
cmp
inc
lret
lea
mov
or
seto
mov
dec
dec
les
and
adc
bound
popa
mov
fmul
or
lds
loopne
stc
jge
ja
mov
or
pop
mov
add
es
cwtl
jb
call
mov
mov
loop
push
outsb
add
lret
sub
dec
adc
call
xchg
popf
mov
inc
inc
jmp
dec
mov
mov
pop
fldenv
enter
xorb
add
mov
fcompl
push
addr16
and
pop
pop
out
add
cmp
ret
mov
jmp
dec
rcrl
dec
push
add
je
pushf
cltd
addr16
cmp
shlb
add
gs
sub
movsb
test
dec
jmp
lods
push
sub
and
jnp
lock
add
mov
add
jp
add
jl
mov
dec
cmp
cwtl
sub
push
add
repz
cmp
add
lret
xor
xchg
pop
sbb
inc
bound
addr16
cmp
andb
test
dec
pop
fwait
sbb
fsubs
inc
insb
adc
mov
xchg
cmp
xchg
test
stos
mov
xorb
push
push
hlt
push
push
dec
rcrl
jnp
rcl
dec
add
sub
mov
lcall
inc
rcll
fiadds
std
jge
sbb
gs
lcall
movsb
adc
dec
pusha
xorl
cli
cmpsb
add
add
inc
jmp
test
testb
push
pop
push
jmp
pop
mov
lret
in
insb
std
shufps
aad
push
add
loopne
xchg
and
adc
dec
cmp
int3
pop
push
les
cwtl
mov
fcomip
pop
stc
outsb
loope
jl
or
mov
push
fldl2t
rcrl
add
jo
lods
testl
push
add
add
xor
ret
mov
sub
push
add
add
add
aaa
lock
lcall
or
mov
cs
sub
add
enter
popa
xchg
push
nop
out
pop
movsl
adc
mov
test
cltd
push
psllq
stos
pop
mov
mov
decl
and
hlt
push
cmc
adc
js
add
pop
lods
or
add
adc
sbb
sub
mov
jmp
pusha
stos
dec
testl
mov
ja
lds
mov
xlat
xchg
ret
insb
mov
mov
mov
fiaddl
outsb
jae
push
inc
add
movsb
and
push
adc
inc
call
icebp
and
add
scas
test
int3
pop
iret
add
test
mov
sbb
shlb
xchg
jg
add
fisubrs
xor
add
mov
sub
repnz
sbb
push
test
jnp
out
push
ljmp
clc
add
or
cmp
push
add
xor
aam
jbe
dec
inc
les
dec
xor
xlat
test
adc
in
sbbb
ljmp
mov
mov
jg
or
inc
push
mov
cmp
push
and
mov
mov
jae
aaa
dec
arpl
hlt
std
mov
movsl
rolb
and
fiadds
outsb
cwtl
loopne
out
push
mov
dec
add
sub
xor
leave
je
sub
mov
stos
in
js
mov
inc
and
jnp
pop
pop
and
subb
sarb
cmc
mov
pop
inc
mov
inc
out
pop
or
sub
in
pusha
add
dec
out
nop
lcall
imul
mov
pop
or
sbb
inc
mov
add
pop
test
les
adc
add
faddl
pusha
jne
cmpsl
push
nop
or
inc
ret
and
push
add
fstpl
cltd
lock
cli
mov
inc
pop
orl
jl
add
aas
repz
mov
dec
push
mov
pop
push
rclb
or
out
test
lods
popa
or
test
call
je
cmp
jge
push
mov
cs
jp
sub
and
fsubrl
add
cmc
ss
push
dec
hlt
jmp
jl
add
inc
xor
pop
dec
add
jb
xchg
xor
pop
mov
xchg
mov
pop
enter
xor
add
andb
in
sbb
shr
mov
ja
sub
pop
ds
adc
mov
pop
int
xchg
mov
sbbl
or
lcall
xchg
loopne
sub
popf
jo
mov
or
popa
js
cmp
inc
pop
push
mov
and
add
mov
aaa
jb
mov
sar
xor
fmulp
jae
jge
sub
sbb
dec
addl
sub
mov
xchg
ss
sub
mov
divb
xlat
dec
loopne
mov
daa
pop
cmpsl
or
in
std
dec
mov
sub
imul
nop
cwtl
fsubr
ljmp
jp
mov
out
lea
inc
push
lcall
add
int3
clc
sbb
cltd
add
jb
fistpl
add
cmp
mov
dec
add
out
adc
sub
adc
repnz
stos
cld
loopne
add
xor
scas
push
ss
xchg
and
mov
sbb
mov
rolb
js
jnp
inc
cmp
xchg
andb
aad
jle
mov
shll
push
not
rolb
pop
mov
add
stc
inc
and
lahf
add
mov
mov
add
xor
cltd
adc
pop
sbb
dec
mov
dec
pop
sub
add
fstps
jae
and
inc
inc
dec
sub
daa
mov
inc
enter
clc
cmp
add
call
cmpb
jl
sbb
mov
paddusw
lods
pop
std
inc
xlat
movsb
loopne
adc
add
mov
jno
add
adc
jecxz
hlt
sbb
jo
jns
add
fisttps
test
push
pop
mov
mov
push
inc
or
loopne
cmp
jnp
sarb
lds
sub
dec
xor
add
stos
inc
sbb
dec
roll
pop
cmp
cld
jg
iret
adc
and
push
add
mov
inc
lret
add
incl
xchg
and
cmp
fldl
sbb
dec
mov
dec
add
cld
push
mov
cmp
shlb
sbb
ja
inc
ror
outsb
inc
sarb
icebp
shll
inc
pop
jl
and
mov
xor
sub
sbb
std
adc
push
add
sub
push
jae
dec
or
pop
aam
push
push
xlat
cmpsl
imul
aad
insl
sub
or
push
popa
xor
add
arpl
inc
cmp
jnp
adc
bound
fcoms
into
fdivp
lods
xlat
rorb
push
or
je
pop
rcll
in
pop
jmp
testl
int
mov
aas
jge
adc
jnp
cmpsl
inc
in
test
adc
test
sub
sbb
push
rcrb
cltd
cmp
dec
add
pop
mov
aaa
add
sub
add
aad
jle
inc
pop
loop
outsl
push
ja
lods
xor
mov
push
lds
dec
iret
push
mov
and
out
daa
cmc
lret
add
fimull
js
mov
jbe
adc
jge
out
in
pop
sarb
push
add
icebp
out
dec
xchg
addl
jns
add
add
cld
outsl
add
mov
or
scas
test
je
mov
jnp
imul
add
cltd
fcompl
clc
cmp
pop
lret
stos
mov
xchg
sbb
pusha
adc
and
lea
inc
idiv
addl
ss
lahf
or
test
mov
add
mov
add
xchg
js
lahf
cmp
sub
clc
mov
mov
fdivr
data16
add
fildl
add
loop
scas
add
mov
push
pop
dec
ret
je
cmp
add
test
sbb
into
pop
repz
fstps
add
jns
adc
jmp
inc
les
add
jl
into
inc
loope
mov
enter
pop
mov
pop
scas
add
in
mov
cld
cltd
add
push
sbb
jecxz
xchg
lea
sub
cwtl
bound
call
mov
and
and
fs
add
jmp
mov
push
fimull
push
fadd
or
xorb
call
lcall
imul
loope
nop
and
and
mov
inc
pushf
fcmovnu
in
das
add
sub
push
push
xor
pop
and
mov
pop
xchg
add
subl
jne
cmpsb
xor
xor
clc
sti
stos
repz
push
xchg
dec
push
pop
testb
in
add
cmc
test
gs
jecxz
xchg
test
fmull
xchg
adcb
roll
adc
mov
outsl
shrb
pop
sbb
mov
dec
and
add
inc
pop
xchg
es
lea
jg
and
fsts
out
push
jmp
add
outsl
pop
aam
and
pop
add
xchg
lret
jnp
pop
mov
mov
mov
mov
mov
push
adc
add
sbb
sbb
mov
sub
aaa
inc
lahf
clc
jnp
into
add
add
ficoms
sub
mov
int
xor
pop
sbb
jl
xchg
mov
jmp
aas
arpl
mull
jl
cmovp
jg
cwtl
adc
les
lods
int3
fisubs
in
add
lret
mov
add
stos
clc
jle
inc
loopne
adc
je
pushf
add
dec
cmpsb
adc
imul
cmp
xchg
push
dec
push
inc
and
jno
lds
and
popa
xor
adc
xchg
add
mov
jnp
repz
insb
pop
push
adc
mov
leave
rcll
gs
sbb
stos
jp
xor
cmp
fldl
sub
ja
and
add
jae
add
mov
shlb
loopne
push
lock
add
add
mov
inc
ficompl
arpl
lea
adc
orb
pusha
add
push
nopl
out
outsb
testl
push
add
fstpt
inc
pop
xchg
test
sbb
pop
aad
icebp
add
jp
pop
les
jo
jbe
jge
cmp
sti
mov
adc
daa
xchg
inc
test
mov
in
cwtl
add
add
cwtl
rcr
leave
add
outsb
in
mov
fs
addb
dec
push
aam
push
xor
and
jg
mov
imul
push
add
js
scas
dec
sub
ljmp
ja
pop
iret
std
mov
xchg
jo
scas
push
jno
shlb
add
lret
or
out
mov
push
jno
sub
xchg
int
inc
fidivrs
jnp
mov
in
xchg
xchg
cmpsl
push
rcrl
dec
inc
add
xor
mov
mov
dec
es
call
fstpt
add
mov
pop
or
in
andl
fcompl
xorl
or
arpl
lcall
cmp
loop
es
sbb
pop
lock
out
hlt
add
pop
rclb
incl
inc
sub
in
rolb
gs
and
or
fs
repnz
ret
mov
negb
add
sbb
dec
nop
cmp
psllq
inc
sbb
mov
test
and
xchg
pop
add
cmc
push
sbb
dec
cmp
pop
mov
push
mov
pushf
ret
jb
and
push
or
setne
add
jbe
testl
adc
insl
sbb
cmpb
cwtl
ret
xchg
fidivs
add
test
imul
dec
outsb
popl
out
ja
out
xor
push
inc
bound
popaw
push
mov
and
ljmp
shlb
ss
shl
test
cwtl
bound
or
cwtl
cltd
dec
out
jl
clc
jge
bound
mov
andb
push
dec
icebp
lods
add
xchg
mov
aas
dec
imul
lods
rolb
xchg
add
es
jmp
repz
pop
divl
out
mov
xor
ret
xchg
dec
pop
push
pop
add
aad
iret
pusha
pusha
jecxz
add
ss
mov
loopne
sub
je
pop
mov
adc
js
aam
mov
pop
inc
out
pop
add
pop
sahf
lock
jb
pop
sbb
inc
sbb
add
dec
or
mov
ljmp
scas
add
fwait
xchg
inc
ficoml
or
filds
rcll
ss
push
push
sbb
sbb
push
add
js
mov
cmpl
adc
cltd
push
orl
fidivs
push
xchg
xchg
cmp
mov
cmpsb
jmp
dec
add
sub
mov
push
ds
mov
in
fldenv
adc
dec
mov
add
mov
nop
js
push
js
ljmp
pop
popl
inc
sub
mov
xchg
aad
mov
cwtl
lods
add
loop
mov
jp
mov
jnp
mov
repz
inc
and
add
test
jnp
inc
mov
sbb
and
pop
cmp
and
add
jle
cmp
adc
mov
inc
mov
inc
stos
push
sub
mov
dec
cmp
testb
sub
lsl
lea
repz
mov
dec
pusha
mov
and
cld
xchg
int3
sbb
jecxz
sub
add
mov
dec
and
or
mov
imul
in
gs
push
jmp
jge,pn
arpl
mov
cmp
xchg
enter
adc
or
mov
movsb
xchg
adc
test
repz
push
and
push
nop
xchg
lahf
inc
sbb
add
ja
les
jo
sbbb
insb
fs
dec
out
sub
push
adc
add
or
insb
fldl
mov
pop
je
pop
xchg
sbb
out
repnz
add
adc
out
pushf
popa
leave
nop
dec
ficompl
add
in
or
dec
jne
mov
push
and
ret
push
cmp
nop
orb
ljmp
outsl
cmpb
into
jns
add
lahf
cli
mov
sbb
scas
push
aaa
rcrb
xor
xchg
mov
cmp
sbb
add
loope
cmp
cmp
in
aam
add
pop
lods
and
mov
stos
mov
cs
fcmovnbe
sbb
mov
int3
adc
ds
cmp
pop
jle
inc
iret
pop
mov
aas
out
cmp
mov
clc
out
cld
es
push
add
loopne
mov
pop
pop
inc
adc
cs
jne
cmp
shlb
add
int3
dec
fiaddl
lahf
sub
loop
lods
pop
mov
js
pop
sbb
xor
xor
sbb
add
lods
mov
jmp
call
xchg
popf
nop
mov
jae
add
adc
cmpsb
fcmove
xorb
push
stos
xor
test
push
adc
in
push
add
inc
jno
jg
or
push
addr16
out
push
xor
insl
imul
inc
loop
jno
nop
lcall
add
jp
adc
mov
sub
shrb
test
clc
je
add
lods
fcom
xchg
dec
dec
inc
add
pop
test
in
sub
xor
mov
cmp
add
insb
or
aaa
aas
jo
inc
fnstenv
xchg
loope
int
xchg
rcl
mov
clc
dec
mov
in
add
mov
cmp
pushf
jo
jl
add
cwtl
pop
cmp
icebp
push
es
imul
jecxz
inc
add
lds
cmp
sbb
adc
add
mov
pop
and
mov
jno
pop
add
xor
push
add
dec
jge
and
sbb
jbe
fimull
add
cmp
fdivl
imul
inc
mov
sbb
loop
data16
aam
stc
sub
mov
rorb
push
fld
scas
push
add
sbb
movsb
cmp
xchg
add
xor
pop
add
mov
iret
mov
pop
add
lods
inc
out
lods
ds
out
add
fldt
jp
shlb
add
addl
mov
shrd
lock
repz
xor
pop
push
mov
mov
sbb
jnp
daa
or
and
sbb
cmpsb
addb
test
out
dec
ss
fstpt
cli
add
scas
xor
nop
sub
cmp
jl
lahf
or
dec
stos
or
mov
outsb
xor
pop
jnp,pn
and
pop
popa
xor
inc
rolb
mov
pusha
je
popl
ds
push
out
fcompl
cmp
add
dec
push
dec
jg
add
scas
les
test
inc
add
lds
adc
ret
add
repz
sbb
ret
dec
mov
sub
push
push
adc
nop
adc
imul
rorb
fcmovnu
into
mov
rcrb
xor
scas
rcrl
call
and
sbb
add
out
icebp
fsubl
mov
jecxz
sbb
rolb
mov
sub
add
cltd
rcr
popf
dec
push
pop
stc
push
mov
push
cwtl
xlat
les
int3
add
inc
je
loop
ljmp
pushf
sahf
push
pop
iret
es
adc
inc
xchg
and
mov
push
arpl
sbb
xor
lret
icebp
std
shlb
loopne
xchg
cmp
mov
xlat
mov
icebp
jg
push
scas
jl
add
xlat
add
clc
in
add
loope
or
xor
pop
pop
sbb
popl
cmp
xor
mov
xlat
inc
sbb
popa
and
add
jl
ss
add
mov
fisubs
mov
add
lahf
pop
xchg
shl
mov
cmp
mov
int
pop
jb
movsb
push
dec
pop
mov
fdivr
mov
adc
push
mov
sub
add
fnstenv
inc
incb
shl
push
lret
fldl
mov
xchg
add
dec
in
xor
add
call
inc
shll
and
into
mov
arpl
dec
jo
adc
rorb
inc
or
jno
cmp
int3
nop
test
out
bound
lret
cmovge
sbb
rolb
sbb
ret
xor
pop
js
das
rolb
mov
rolb
mov
sub
xor
fucomp
cmpb
xor
nop
aad
adc
push
or
xchg
and
nop
push
enter
js
icebp
xor
xchg
and
data16
adc
or
lods
insb
mov
adc
test
fiaddl
mov
jnp
dec
mov
inc
cmp
cmp
test
or
icebp
or
ds
inc
ret
mov
push
jl
dec
mov
dec
or
inc
cmp
adc
add
jl
sub
out
scas
mov
cld
sub
jle
pop
pop
test
out
or
add
test
xor
sbbl
sub
adc
enter
pushf
push
daa
sbb
rolb
shlb
aas
stc
rclb
add
test
dec
inc
inc
add
jl
dec
in
cli
pusha
sub
mov
test
cmpsl
jne
pusha
pop
mov
test
addr16
fwait
push
out
fsubrl
add
cli
in
and
pop
test
sbb
imul
mov
lock
xor
outsb
rorb
inc
adcl
mov
sub
clc
aaa
and
xlat
ds
int3
jbe
and
mov
stos
mov
rol
cwtl
xchg
insb
and
cli
cmp
out
leave
dec
orl
sub
add
inc
push
outsl
jecxz
pop
dec
dec
shll
pushf
push
add
mov
jo
push
and
test
inc
inc
and
pop
inc
cld
xchg
add
addb
daa
adcb
dec
cwtl
jno
cmpsl
push
std
mov
xchg
adc
xchg
inc
push
cli
dec
test
inc
mov
adc
sub
cmp
mov
inc
or
call
out
je
pop
push
insl
xchg
xchg
or
push
jl
lock
dec
rorb
inc
fidivrs
pusha
inc
mov
inc
shl
mov
movl
clc
dec
rorl
sub
add
mov
rcr
sbb
xor
pop
and
outsb
fs
xchg
outsb
jo
mov
scas
jl
ret
jl
movsb
xchg
jecxz
cwtl
stos
xor
sub
sub
sub
scas
mov
add
pop
shll
add
dec
cld
lock
enter
hlt
push
mov
pushf
cmpb
subb
outsl
mov
call
mov
lock
adc
inc
mov
add
adc
mov
rclb
in
std
and
and
mov
xor
sbb
adc
fcompl
mov
fcoms
inc
pushf
test
cwtl
mov
inc
clc
lods
jle
add
repnz
inc
test
pop
inc
push
jmp
jnp
adc
sub
lods
push
sub
inc
clc
push
sbb
test
dec
sub
ljmp
mov
push
pushf
nop
stos
xor
mov
arpl
out
adc
xorb
jae
add
cmp
xor
xchg
and
jmp
leave
out
fdivrs
es
subb
int3
or
ljmp
gs
xchg
adc
or
fdivrs
test
pusha
push
mov
incl
add
int
ret
dec
mov
push
mov
mov
mov
cs
add
add
cmpsl
adc
sub
lds
icebp
xchg
add
xchg
aad
jns
lahf
ret
sbb
add
pop
cwtl
add
ret
fsqrt
add
cmpsl
cwtl
ret
enter
scas
cmp
roll
loope
push
add
es
mov
pop
sub
dec
lcall
fstpt
sahf
add
jnp
test
and
jl
jg
loop
imul
xchg
punpckhdq
data16
fnsave
jnp
add
js
add
inc
iret
cmpsl
es
jmp
pop
in
sub
scas
enter
outsb
fistpl
in
push
add
mov
or
movsb
mov
rcr
enter
sbb
adc
movsb
add
cwtl
ja
fildl
or
fadds
mov
adc
shrb
jo
test
lods
push
and
shll
stos
popa
inc
int3
adc
or
add
and
mov
andb
pop
add
cmc
mov
loope
mov
add
dec
fcom
jne
loopne
leave
xchg
jbe
or
jl
add
outsl
dec
dec
out
sti
xor
add
mov
dec
jmp
jnp
add
and
add
pop
mov
bound
xchg
mov
mov
sub
leave
pop
mov
cld
xor
lret
stos
lea
int
cmp
add
jge
arpl
rcrb
aad
jbe
ja
lahf
sub
add
insl
mov
sarl
dec
cs
push
hlt
out
push
mov
add
rcll
inc
roll
xchg
jl
repnz
outsl
adc
or
push
lcall
insl
add
iret
xor
aas
leave
inc
andl
js
test
fs
lds
loopne
mov
or
pushf
orb
pusha
add
in
int3
jns
add
mov
and
xchg
inc
outsl
lock
arpl
sbb
dec
and
inc
inc
popf
or
mov
inc
pop
jmp
add
iret
inc
les
bnd
sbb
xchg
shl
pop
inc
inc
and
les
imul
cmp
pop
ljmp
push
push
call
cmpsl
mov
sub
xchg
pop
mov
es
jl
shrl
int
mov
inc
movsb
dec
repz
add
sub
pop
loopne
lds
cmpb
lods
enter
stc
stos
fstl
inc
cmp
cmp
iret
int3
orb
and
rolb
sub
push
fildl
adc
in
cmp
adc
mov
jno
sar
mov
imul
xor
ficoml
cld
add
subps
xor
mov
jmp
repnz
push
cbtw
mov
stos
nop
outsl
xchg
mov
orl
in
mov
push
cmp
sbb
sub
cmp
add
jo
dec
mov
leave
in
scas
push
adcb
test
jg
fdivrl
add
out
xchg
adc
jecxz
lods
fisubrl
cmp
or
mov
xchg
mov
add
jmp
mov
movl
je
pop
insb
in
pop
loop
rolb
jecxz
add
aam
lea
add
lds
js
mulb
add
mov
ds
mov
loopne
fcmovu
add
xor
push
add
fdivrp
fimull
imul
xchg
outsb
sahf
fdivrl
aaa
nop
add
and
cmp
xchg
jl
addr16
outsb
pop
cmpsl
lds
popf
inc
push
jne
cld
movsb
sub
xchg
movsb
pop
push
outsb
mov
into
pop
cltd
jo
fnstsw
es
dec
test
xchg
in
sbbb
dec
rcl
push
sbb
stos
add
or
mov
push
or
sbbl
cmp
inc
iret
xor
mov
cld
ss
aas
xchg
push
add
or
dec
shll
int3
and
jmp
insb
les
add
xchg
cli
roll
pop
sbb
pop
add
loopne
dec
xchg
pusha
imul
inc
ret
clc
sbb
fwait
adc
imul
repz
test
and
stc
loop
cli
fiaddl
les
out
push
add
fcompl
das
mov
js
insb
add
adc
xchg
std
sbb
add
jecxz
ss
les
cmp
repz
in
mov
jmp
hlt
or
or
jge
add
adcb
test
ficoms
inc
push
bound
mov
push
and
sbb
dec
test
xchg
mov
sbb
cmpsb
mov
andb
fisubrs
dec
adc
or
in
and
aas
in
inc
xor
lea
xor
jecxz
cmp
cwtl
add
test
push
xchg
or
push
cmp
jecxz
and
add
std
inc
pushf
out
into
cli
push
mov
lock
bound
fwait
pop
pop
fbstp
ret
into
fsubrs
jo
mov
cmpb
leave
orb
push
sbb
add
pop
orb
adc
out
sbb
imul
enter
add
lods
je
add
rorl
mov
cmpsb
adc
out
add
orl
add
test
gs
fbstp
mov
push
jge
push
mov
pop
lea
stos
xchg
outsl
inc
mov
imul
jae
mov
lods
cmpsb
fs
sub
mov
lret
scas
or
mov
outsb
inc
pushf
xchg
add
cli
outsl
clc
fildll
test
sarb
jb
add
fsubr
sbb
out
push
or
add
out
cmpsb
lock
pop
jnp
clc
pop
outsb
out
movsl
inc
push
add
decl
adc
add
inc
enter
jo
lcall
lea
fwait
add
test
test
sbb
je
add
lret
xor
jp
add
cld
mov
push
add
shll
jl
popw
add
push
add
dec
test
and
loopne
clc
adc
xchg
jno
push
std
lcall
cltd
rorb
inc
inc
and
sbb
shlb
or
xor
push
push
cmpsb
or
sub
or
into
jns
pop
dec
int3
pop
add
dec
inc
orb
dec
loopne
cmp
sbb
mov
sub
push
push
sahf
cmc
pop
out
sarl
sbb
and
pop
pop
add
mov
scas
call
mov
or
mov
inc
jns
pop
push
sarb
xchg
add
cwtl
push
ljmp
jle
add
sbb
icebp
pushf
mov
jge
mov
cmp
movsl
nop
or
fisubl
dec
dec
push
adc
cltd
push
aad
add
add
sbb
sub
mov
xor
ret
add
out
je
out
adc
add
inc
push
jae
dec
jbe
sbb
cmp
add
iret
lahf
mov
aam
push
pushf
xchg
hlt
add
cmp
and
cmpsl
cmp
stc
sbbl
shl
fmuls
xor
es
fiaddl
sub
rcll
idivl
nop
add
jns
or
stos
icebp
lret
in
cltd
leave
sub
movsb
add
cmpsb
jns
clc
xlat
iret
add
xchg
jno
add
mov
inc
or
pop
add
add
adc
and
mov
ja
xchg
add
pop
lret
clc
inc
stos
sti
add
mov
jbe
dec
ljmp
fstps
add
mov
dec
loope
push
lret
mov
lret
xor
push
jmp
add
mov
clc
dec
jp
imul
aam
mov
lret
pop
or
add
mov
addb
gs
das
pop
shl
add
pop
mov
movsb
insl
sub
and
jecxz
fnstenv
push
aas
add
xchg
je
movsb
jle
add
xor
mov
xchg
test
jae
outsb
or
ds
dec
or
rcpps
iret
pop
and
cwtl
ja
xor
ret
or
mov
add
cmpsl
lcall
andl
lret
xchg
sahf
jp
dec
xor
mov
jbe
imul
sub
enter
mov
xchg
incb
adc
cwtl
mov
add
andl
sub
adc
stos
pop
cld
xlat
lea
stos
sub
pop
adc
push
inc
xorl
mov
scas
sub
cwtl
pop
add
cli
inc
in
inc
pop
aas
add
mov
jl,pn
loopne
inc
lock
or
push
dec
cld
shll
mov
add
inc
cmpl
mov
sub
nop
cmp
inc
dec
pushf
sbb
xor
fmuls
cmpl
dec
add
xor
mov
mov
mov
ja
sbb
inc
push
add
cld
pop
js
adc
mov
mov
sub
pop
mov
xor
or
inc
jbe
mov
shll
roll
push
or
pop
scas
add
mov
inc
les
flds
inc
jnp
pushf
adc
and
push
out
inc
in
pusha
xchg
negl
roll
mov
pusha
in
pop
loopne
add
sar
add
jb
pop
add
loopne
mov
xor
dec
add
idivl
add
xchg
mov
add
test
push
cmp
shlb
add
mov
sub
add
mov
mov
sub
adc
outsl
bound
aaa
adc
or
sbb
cmc
push
push
aam
fwait
lds
lods
mov
sar
xlat
icebp
insl
pushf
or
cld
in
jle
mov
call
cmp
pop
fmull
pop
add
cld
inc
adc
add
test
loopne
aas
mov
add
imul
inc
mov
fwait
mov
or
stos
daa
xchg
in
imul
out
fimull
add
sbb
jp
or
xchg
adc
push
das
lock
in
cmp
pop
pop
imul
add
test
and
mov
xor
aad
dec
sbb
lcall
add
xor
mov
push
jne
mov
add
lahf
inc
imul
xchg
adc
add
loopne
imul
cli
sub
xor
add
mov
icebp
add
jl
repz
ret
ficoms
and
push
testl
test
inc
ljmp
or
aam
scas
mov
inc
fcoml
push
mov
fiadds
cmp
and
mov
cmp
sub
push
nop
xorb
sub
shl
lcall
lds
add
push
orl
add
sti
fcmovnbe
pushf
or
std
mov
push
and
xor
dec
push
mov
mov
push
jbe
cs
sub
out
mov
les
dec
rolb
add
cmc
xchg
xor
inc
inc
cld
mov
out
or
les
mov
add
push
inc
jle
lahf
ds
cmp
fists
xor
xlat
loope
or
jle
dec
filds
iret
xchg
dec
inc
cmp
leave
int3
jbe
and
adc
popa
cmpb
comiss
lret
xor
adc
pop
jge
jl
and
adc
inc
mov
jne
xchg
int3
aas
jae
push
cli
notb
add
and
fs
enter
cmp
cmc
rorl
je
cli
pop
pusha
adc
flds
xchg
aad
repnz
dec
sub
fwait
push
cld
lods
inc
hlt
push
mov
add
ret
xor
add
cli
mov
hlt
lret
rcl
rolb
lods
dec
xor
rclb
sub
jmp
sbb
roll
add
mov
jle
adc
ljmp
xlat
cld
add
jne
or
mov
jbe
hlt
in
cmp
lods
jecxz
pop
mov
sub
cwtl
add
lods
cmp
out
sbb
cwtl
add
test
dec
xlat
sub
inc
imulb
test
mov
fildl
or
je
push
mov
cwtl
dec
aam
cmp
lock
mov
mov
xchg
clc
sbb
pmaxsw
notl
cmp
ja
pusha
add
cmp
xchg
ret
pop
mov
movsb
add
pop
xchg
sbb
daa
loope
and
fs
add
es
outsb
adc
nop
dec
mov
add
jge
lock
push
push
add
sub
movsl
out
sub
or
pop
pop
add
sbb
jae
call
cli
push
rcl
es
js
lret
pusha
push
cmp
mov
xor
out
adc
push
xchg
mov
cmpsb
sti
add
or
adc
jecxz
fs
push
stos
sbb
xlat
mov
lock
mov
call
sbb
xorl
addb
mov
mov
ljmp
aad
xchg
add
xor
cmp
mov
push
popa
orl
mov
es
scas
jae
lea
inc
mov
sbb
scas
loope
fidivrl
add
leave
and
out
xlat
aaa
add
dec
stc
cmpsb
fwait
push
das
add
or
insl
cmp
cs
pop
ss
daa
xor
adc
lds
enter
jp
push
in
outsb
cld
cltd
jbe
test
aam
xchg
xor
jb
inc
pop
or
xchg
sub
and
jecxz
add
stc
jmp
mov
lock
sbb
add
sub
and
adc
ficomps
shl
sbb
sarb
sti
mov
scas
loopne
add
std
push
or
bound
out
lock
mov
inc
sub
xchg
add
cmpb
das
or
mov
add
push
scas
xchg
clc
les
aam
inc
jb
loope
scas
add
clc
mov
push
or
ds
jecxz
sub
sbb
cmc
repnz
jbe
push
sub
lret
mov
add
rolb
loop
add
sub
add
shlb
add
sub
testb
out
dec
cwtl
push
pop
loopne
enter
add
pop
int3
mov
sub
sub
add
xchg
clc
popa
js
add
jns
lea
cld
add
mov
cmp
pusha
pop
add
push
js
lahf
outsb
push
je
mov
or
in
popf
jo
mov
add
dec
or
dec
addb
push
xchg
mov
cmpsb
pop
sarl
add
pop
add
stos
push
filds
mov
or
mov
sbbb
pop
or
outsl
cmp
mov
add
hlt
fldl
push
inc
int3
ret
sbb
and
fcomp
mov
add
out
cltd
add
and
xchg
adc
scas
rol
jns
rorl
add
mov
adc
add
dec
mov
mov
fmull
add
sub
negb
int3
scas
cmp
xchg
cmpsl
inc
movsb
mov
in
mov
add
ret
add
sub
mov
push
data16
mov
push
fs
mov
add
dec
pop
or
sub
sbb
add
push
sarl
jmp
jp
xor
imul
pop
add
test
pushf
bound
jle
add
outsb
loopne
mov
pop
rcrl
fwait
mov
mov
fdivrs
add
sub
out
hlt
data16
cmp
jle
push
mov
inc
add
sbb
loopne
aam
cmp
mov
lods
cltd
add
add
popf
lcall
mov
fwait
or
mov
add
mov
cltd
or
in
push
add
sbb
and
or
xor
and
jge
cmp
je
inc
sub
or
cmp
loop
test
loope
add
push
movsb
sahf
pop
gs
lds
or
mov
jl
mov
popa
pop
int3
adc
idivl
mov
sbb
sbb
cwtl
lock
dec
leave
mov
lret
mov
dec
or
push
fildll
mov
ret
shlb
adc
pop
arpl
add
jns
loop
orb
enter
or
and
inc
add
mov
mov
jns
pop
inc
outsl
test
aas
add
adc
outsl
testb
inc
aam
lahf
xor
inc
test
push
add
stos
test
xor
faddl
or
push
int3
pop
lds
bound
dec
pop
paddusb
lahf
pop
lret
mov
fnstcw
jae
in
loopne
jns
test
cmpsb
addr16
sbbl
add
pop
adc
xchg
lahf
rcll
repz
add
ffreep
dec
and
mov
push
sbb
pushf
or
inc
mov
in
inc
mov
adcb
popa
loope,pt
xchg
test
or
add
mov
xchg
xchg
pop
add
cmp
cmp
jo
sbb
jp
lods
dec
adc
xor
jle,pt
add
lock
lcall
sbb
add
inc
sub
mov
jo
jg
push
sbb
ret
pushf
sbbb
cli
or
jo
push
sub
cmpsl
xor
cltd
lods
inc
mov
sbb
jne
pop
aaa
xchg
cs
ss
mov
and
mov
jo
mov
jbe
or
inc
jp
aam
mov
add
rorb
xchg
dec
mov
lds
add
loope
orb
testl
cltd
mov
xchg
rcl
add
mov
stos
add
pushf
mov
cs
mov
add
scas
or
cmpsb
fildl
inc
pop
popf
hlt
lods
je
sub
shrb
test
cmp
je
into
pop
xchg
cld
mov
sahf
cmp
cmpsl
scas
aam
dec
add
test
jo
movsb
ja
cmp
faddl
int3
push
jae
mov
and
jnp
das
add
push
xor
push
pop
add
lcall
in
inc
mov
cmp
adc
inc
nop
jmp
add
sub
addb
jo
or
cltd
jecxz
popa
out
cmp
aad
push
adc
filds
arpl
mov
add
and
loop
js
cwtl
add
dec
mov
call
sbb
xchg
rolb
insb
dec
movsb
jg
out
lock
add
push
mov
xor
sbb
mov
fldl
sub
cmp
and
dec
movsl
mov
in
jnp
rorb
nop
or
sti
push
repnz
mov
cmpsb
mov
fs
popf
xchg
movsb
nop
inc
pop
addl
lods
mov
nop
or
cmp
add
dec
jp
idiv
and
dec
test
clc
add
push
add
cs
xor
scas
xchg
pusha
fldt
jno
add
mov
push
js
add
int3
mov
cmp
pop
sub
dec
cld
mov
mov
into
and
ret
mov
xor
insl
push
jle
jmp
add
bound
dec
add
add
push
mov
out
or
push
jge
add
std
fiaddl
mov
movsl
xorb
mov
in
push
loopne
mov
imul
movsb
push
lock
add
xor
sbb
sbb
cmp
inc
pusha
add
xor
xchg
pop
add
in
sbb
inc
dec
dec
clc
add
and
adc
aad
cmpsb
cmp
rorb
pusha
pop
lock
cmpsb
and
mov
fsubr
add
pop
arpl
out
pop
or
inc
lret
das
add
mov
adc
cmp
jmp
rorb
mov
or
mov
aas
pop
xor
mov
sub
add
hlt
inc
add
pusha
pop
dec
or
out
mov
ss
in
or
push
inc
stc
jae
xor
clc
in
or
aad
addb
ja
scas
outsl
lea
shrb
pop
rcr
or
add
push
test
cmp
sbb
repz
or
in
xor
mov
xchg
mov
dec
cmp
sbb
push
xlat
ds
movsl
mov
pop
xchg
popf
adc
gs
ljmp
add
push
pop
push
or
push
sahf
inc
mov
inc
add
or
in
addr16
cmpsb
sbb
fadds
jnp
jg
xlat
ret
rclb
pop
mov
ja
dec
and
adcl
sbbb
cmp
leave
in
add
repz
pop
cmc
test
decb
sub
lahf
cwtl
movsb
dec
rorb
scas
mov
mov
not
xchg
jg
insb
std
imul
pop
call
ds
xor
adc
add
fmuls
jo
add
sub
in
fidivrl
inc
mov
clc
sbb
daa
jnp
cwtl
nop
js
add
or
add
sbb
push
mov
shll
pop
pop
scas
aaa
mov
pop
rcll
xchg
or
push
jmp
push
and
es
mov
xchg
and
sahf
cmp
shll
pop
add
mov
cli
pop
add
inc
dec
push
sahf
and
jo
enter
push
cmc
or
cmp
xchg
add
mov
lea
mov
orb
roll
fucom
call
push
pop
pushf
call
mov
or
jb
xchg
add
daa
jne
add
scas
adc
scas
and
add
and
pop
nop
dec
add
pop
lret
dec
push
imul
mov
add
add
shrl
shrb
pusha
imul
loope
jne
push
jmp
mov
push
data16
std
sub
sbb
shll
mov
popa
fiaddl
sbb
pop
clc
das
loopne
and
lret
clc
sbbb
test
add
fsubrl
dec
adc
cmp
add
xor
sti
lret
add
mov
push
out
cmp
add
push
jb
and
dec
icebp
xor
add
pop
mov
lods
in
jns
cld
gs
adc
xor
cld
loopne
sarl
dec
mov
mov
mov
cli
clc
andb
or
sub
js
or
adc
push
xor
aam
xorl
andps
andb
add
test
mov
ror
dec
add
push
mov
daa
enter
or
testl
addl
add
imul
cwtl
ja
popa
lock
adc
push
add
sub
icebp
pop
mov
pop
jecxz
sub
jl
dec
lods
je
shl
sbb
sbb
jge
ror
clc
sub
dec
out
nop
sbb
inc
xor
add
push
lods
mov
lock
dec
add
adc
notb
mov
sub
and
inc
lock
pop
leave
enter
add
add
pop
add
mov
push
shl
call
testb
aam
add
mov
je
mov
pop
or
movsb
sub
mov
dec
dec
lahf
iret
sbb
adc
pusha
popa
outsl
sub
in
push
adcb
add
jae
es
jp
in
in
outsl
ret
enter
adc
std
fildl
data16
sti
mov
dec
in
enter
inc
lods
ja
pushl
mov
add
inc
push
cmp
fstpl
scas
push
cmp
xor
pusha
fsts
nop
or
cmp
and
cmc
fadds
sub
pop
jmp
cmpsl
out
add
inc
or
mov
imul
cs
fwait
cmpb
popa
adc
sbbb
add
shl
sbb
roll
dec
jno
cmp
fneni(8087
fsts
pop
cwtl
movsb
adc
xor
add
aad
xchg
cmpsb
cmp
push
and
int3
mov
jno
dec
adc
subb
ret
pushf
lea
sub
cmpl
jns
xchg
scas
sbb
mov
jne
das
mov
push
add
lea
xor
ja
fldt
add
dec
hlt
aam
daa
jb
pusha
in
or
mov
jmp
dec
dec
js
lock
mov
sbb
add
nop
mov
lcall
add
xlat
push
sub
inc
mov
lods
add
inc
or
mov
lret
adc
addr16
imul
sbb
stos
add
dec
das
add
mov
or
push
cmp
mov
mov
pop
dec
iret
dec
jg
push
add
aad
mov
sub
ret
lock
fldcw
sub
cmp
add
ret
cmc
mov
inc
push
incb
inc
daa
push
xor
push
sub
add
es
xor
es
add
jl
ret
and
mov
xchg
lods
sti
sub
incl
xor
rep
sub
daa
mov
add
jle
push
dec
fiadds
add
sbb
add
pop
in
lret
outsb
and
cwtl
cmp
loopne
lcall
in
xchg
add
stc
outsb
mov
dec
jns
es
mov
pusha
inc
sbb
jb
sub
cli
dec
fists
fs
jbe
pop
inc
and
adc
push
adc
pop
or
mov
pop
dec
add
pop
cmp
jl
xchg
outsl
imul
jo
push
jno
cmp
mov
or
mov
add
xchg
mov
cmp
adcb
pop
cmp
mov
fisubrl
insb
leave
test
mov
or
ljmp
out
pop
xchg
fabs
and
mov
sub
les
mov
loopne
pop
push
push
imul
rclb
push
jg
outsl
adc
lock
sahf
add
inc
sti
sbb
es
or
inc
popa
adc
into
xor
mov
pop
movsb
inc
mov
add
repz
inc
mov
fs
pop
add
xor
xchg
ret
or
add
add
loopne
or
in
out
pop
ret
mov
xchg
fidivrl
arpl
push
sub
mov
test
cmp
dec
popf
xor
fcmovbe
jge
add
aas
in
or
rcr
clc
aad
adc
add
addr16
inc
out
add
add
movsl
dec
pop
mov
cwtl
pop
inc
repz
add
fnsave
pop
cmpsb
daa
cmp
sub
rorb
add
and
pop
cmc
sub
push
pop
cmp
add
test
rolb
leave
xchg
cmpsb
orl
scas
jno
mov
rcll
std
fidivrs
test
nop
xchg
push
andl
inc
pop
prefetcht0
inc
inc
lods
test
lock
cmpb
cmc
hlt
adc
clc
dec
add
stc
fwait
mov
or
cmp
rolb
mov
add
les
add
outsl
sub
cmpsb
cmp
lock
idivl
les
jb
xor
imul
ljmp
mov
pop
jp
adc
mov
addr16
add
push
enter
sbb
test
rsqrtps
mov
pop
shrl
lods
and
add
std
in
add
xor
jne
lods
sbb
push
sub
dec
rcrb
xchg
lods
pop
mov
adc
shll
fadds
dec
mov
mov
stos
sahf
cmp
subb
xchg
add
or
enter
and
or
mov
rcrl
out
loop
popa
inc
idivb
jp
xchg
ds
mov
lret
and
sub
movsb
inc
ret
cmp
cmpsl
mov
enter
daa
add
iret
inc
rcl
repz
fsubrl
cmpsb
pushf
cli
add
jns
rcrb
add
mov
adc
sbb
data16
add
lds
jbe
dec
mov
or
lcall
push
ljmp
adc
int
add
cltd
cmp
or
nop
in
mov
ja
add
sub
jle
arpl
andl
loopne
add
loope
fdivs
xor
loopne
push
xchg
pop
cld
mov
clc
pcmpeqd
adcb
cmpsl
lar
mov
mov
nop
sti
mov
and
add
mov
pop
push
outsl
call
test
add
ret
dec
push
shlb
mov
xchg
out
arpl
mov
loope
sub
popf
jg
adc
or
pop
cwtl
rol
shll
add
xchg
popf
adc
sbb
add
in
or
mov
std
decl
test
roll
pop
pop
sbb
js
fsubrl
mov
mov
fneni(8087
inc
push
jl
pop
int
sub
sub
sub
ret
rcrl
push
sbb
cmp
dec
hlt
mov
xor
sarl
dec
mov
inc
popf
push
mov
cmp
in
scas
push
or
xor
add
mov
test
aas
add
fidivs
daa
test
in
dec
and
popf
fcomi
incb
jmp
clc
test
cmp
repnz
pop
aad
syscall
loopne
cs
push
loop
cmpsb
mov
xor
jne
adc
mov
add
or
out
in
add
jb
stos
pop
adc
or
mov
and
sbb
xchg
add
addb
sbb
aam
xchg
add
sub
mov
adc
add
xchg
adc
pushf
in
loope
cwtl
or
and
jb
test
xor
sbb
add
addr16
inc
sahf
repnz
pop
push
xchg
shrb
daa
pop
mov
sbb
out
stos
jmp
and
jb
add
sbb
xor
xor
jge
dec
call
xlat
addr16
sbb
jp
out
cmp
hlt
dec
loopne
mov
fisttpl
pusha
fldl
jo
sti
sbb
mov
rcr
jne
stos
scas
loop
and
out
inc
cmp
sbb
add
xchg
lahf
mov
adc
dec
xlat
inc
in
filds
push
and
mov
mov
add
mov
cmp
cmp
dec
rclb
adc
movsb
jb
jbe
sbb
std
or
icebp
orl
add
jge
lahf
int3
ljmp
inc
in
add
add
sub
jnp
add
or
decb
sbb
lock
data16
sbb
ret
sub
clc
add
fdivrl
push
xor
bound
adc
push
pop
outsb
add
ret
xorl
scas
mov
add
push
jmp
add
call
sbb
pusha
pop
cltd
push
sub
pmulhw
loope
and
cmc
mov
adc
sbb
add
xorb
int3
mov
movsb
xchg
push
mov
push
mov
lcall
data16
imul
xor
lcall
xchg
sbb
clc
jo
mov
add
mov
out
sar
push
add
cmp
xor
in
jp
add
xchg
mov
cmovl
lea
out
xchg
fidivrl
test
je
xchg
push
push
and
test
inc
lds
xor
xchg
add
push
sarl
pop
push
faddl
dec
xchg
dec
arpl
cmp
add
out
test
ret
aaa
push
js
je
sub
dec
xor
sub
pusha
pop
add
call
je
mov
sbb
sbb
pushf
add
push
xor
lret
aam
test
cmc
cwtl
inc
and
rclb
lds
cli
or
mov
push
mov
mov
aaa
adc
dec
mov
xlat
inc
or
sub
add
or
jmp
inc
push
daa
aad
add
mov
loopne
leave
dec
jns
add
or
sbb
ja
pop
xchg
imul
dec
mov
xor
dec
ret
je
cmp
fs
adc
push
mov
inc
rcr
enter
sub
les
call
in
mov
add
mov
daa
mov
inc
sbb
pop
push
cmp
scas
and
dec
popa
lods
adc
lcall
jb
push
dec
and
sub
fwait
orl
outsb
addr16
and
sbb
dec
push
loopne
bound
rorb
and
imull
aam
out
pushf
and
icebp
loopne
add
mov
adc
icebp
movsb
mov
mov
inc
cmpsl
adc
aam
or
fcomps
mov
xchg
adc
add
ds
add
cltd
scas
int3
in
mov
push
mov
push
subl
ja
and
fistpl
add
inc
pop
mov
xchg
add
stos
sbb
pop
ret
inc
sbb
sbb
popa
mov
inc
testb
pop
js
aam
mov
in
outsb
mov
adc
xor
pop
lahf
add
imul
push
mov
sub
sbbb
enter
cmp
push
sub
xor
cmp
movsb
mov
pop
mov
test
test
sbb
xorb
sub
fdivrl
xchg
cmp
inc
xchg
pushf
lret
outsl
and
cmp
pop
cltd
jnp
nop
mov
adc
lods
lsl
aaa
add
xchg
shlb
and
and
xchg
add
mov
mov
leave
sbb
cltd
or
mov
test
xchg
je
add
dec
xchg
daa
pop
sarl
mov
pusha
das
nop
mov
in
xchg
adc
pop
dec
pop
jmp
xchg
adc
daa
lock
mov
xchg
mov
inc
add
ret
icebp
mov
push
sbb
add
or
orl
fistl
cltd
js
adc
pop
mov
jne
xor
nop
cld
add
cmp
pop
test
mov
in
popf
mov
in
xchg
das
inc
dec
enter
mov
addl
cmp
jae
adc
out
les
orb
andb
dec
test
adc
bound
jbe
cmp
je
test
inc
inc
call
addr16
iret
mov
inc
lds
mov
rorb
sub
pop
inc
shl
add
cmpl
add
daa
scas
stos
aad
in
pop
movsb
push
and
pop
mov
adc
cmpsl
mov
pop
fcomip
add
cmp
imul
xor
jb
xchg
push
bound
add
out
lcall
dec
xchg
adc
add
pop
mov
insb
mov
mov
lcall
push
lods
mov
or
leave
insl
or
sbb
lock
xchg
aaa
mov
adc
cmp
mov
jb
sub
or
outsb
and
in
daa
mov
dec
xchg
inc
mov
data16
pop
pop
inc
movsl
cwtl
das
add
jb
pop
add
and
xor
and
subb
add
mov
mov
cwtl
cwtl
ds
sub
adc
xchg
in
pushf
xchg
testb
pop
sti
ss
cltd
jge
js
xor
jne
mov
test
mov
hlt
out
push
hlt
dec
add
xchg
sbb
icebp
xor
fwait
mov
lock
mov
add
jo
pushf
lds
enter
mov
push
in
sub
inc
and
mov
test
push
cld
xchg
subl
pusha
test
xchg
js
les
cmp
pop
mov
cs
js
ljmp
pop
add
cwtl
cli
or
xchg
lods
add
jns
cwtl
cwtl
rdtsc
ljmp
pop
ret
aam
sbb
ds
out
cs
mov
inc
or
sub
icebp
cwtl
int
add
insl
fcompl
ret
add
lea
add
test
and
pop
movhps
decl
movl
sti
and
adc
mov
and
cmp
inc
les
add
test
pushf
mov
add
jnp
call
fnsave
jmp
xchg
sub
into
xchg
mov
jg
pushf
sbb
and
cs
mov
ljmp
mov
adc
add
add
xor
call
in
adc
adc
push
mov
enter
ret
pop
daa
js
xor
add
xchg
xchg
scas
inc
test
filds
stc
decb
sub
add
mov
dec
loope
repnz
or
pushf
xchg
pusha
fs
repnz
xchg
pop
out
call
addb
clc
imul
les
es
inc
add
mov
add
cmc
or
ret
xchg
loope
inc
loope
pop
pop
mov
pusha
ljmp
nop
adcb
push
cld
cwtl
or
sbb
sbb
in
push
andb
adc
out
insb
xchg
shrl
clc
jae
nop
xchg
lods
sbb
les
inc
mov
or
or
cltd
pusha
int3
sbb
xor
push
pop
adc
sbb
push
xor
testl
mov
cmp
dec
mov
orl
pop
cmpsl
adc
int3
imul
test
addb
cltd
push
addb
add
into
aas
mov
dec
sbb
inc
popa
xor
sbb
scas
and
and
les
pusha
mov
xchg
jl
adc
fwait
add
and
cmp
out
add
iret
inc
orb
jb
add
adc
add
lret
shlb
jae
push
xchg
clc
rolb
pop
mov
jne
pop
lret
sti
mov
nop
xchg
cmpsl
xor
pop
adc
and
movsb
push
mov
jge
add
icebp
leave
adc
dec
sub
lret
je
mov
jp
insl
sub
cmpsl
lds
es
xor
jmp
push
pop
mov
roll
and
xlat
aam
sbb
jb
movsl
sbb
cwtl
lock
out
jb
cmp
and
ret
add
pop
subb
es
push
lret
xchg
call
test
add
popf
ja
sub
scas
jnp
pusha
sbb
mov
cwtl
and
into
add
xchg
stos
dec
sub
lods
inc
mov
jecxz
cwtl
sbb
aad
sbb
xchg
xchg
pop
sbb
mov
xchg
std
dec
imulb
add
popf
mov
and
das
push
add
inc
xor
test
lods
inc
out
add
loopne
jle
ljmp
jp
cwtl
mov
dec
or
add
pop
lds
cmp
xor
add
inc
hlt
aas
popf
stc
pop
pop
jbe
and
mov
sub
jne
movsl
insb
cmp
out
jae
fldl
or
cmp
jmp
adcb
cs
add
or
and
jp
fs
inc
inc
xor
roll
mov
sbb
xor
ljmp
mov
mov
andl
push
xor
into
outsb
test
out
jo
aad
mov
ljmp
mov
pop
push
stos
add
pop
mov
sbb
mov
sahf
test
or
test
rolb
push
loopne
add
lds
cmpsb
inc
adc
lret
sbb
jecxz
and
inc
inc
enter
xor
sub
int3
cmp
popa
sbb
mov
je
add
out
pop
mov
iret
push
ret
and
imul
mov
out
pop
sbb
xchg
shr
add
xchg
rcrl
cmp
or
test
lds
xchg
mov
les
jmp
add
push
neg
dec
xchg
xorb
outsl
mov
adc
mov
xchg
nop
out
xchg
lods
mov
or
call
dec
je,pn
sub
movsl
lds
jbe
cmp
lods
pop
sbb
xchg
xlat
dec
nop
mov
mov
cld
mov
adc
inc
xorb
inc
xorl
cltd
les
sub
iret
add
nop
in
adc
jecxz
rolb
jmp
outsb
mov
push
and
clc
mov
in
xchg
pop
sarb
ret
mov
dec
stos
mov
ljmp
xorl
sahf
add
xchg
ret
enter
jmp
sub
rorl
cmp
mov
mov
fidivrl
mov
pop
gs
scas
adc
xchg
les
sbb
shll
add
scas
push
test
xchg
xor
sbb
andb
mov
fcoml
adc
fs
add
mov
cli
inc
xor
or
or
test
pop
xchg
mov
je
dec
xchg
and
pop
sbb
pusha
dec
mov
inc
je
sbb
ja
neg
sbb
pop
xchg
inc
sbb
and
and
jl
dec
addb
cmp
cs
pop
add
dec
add
inc
sbb
shr
icebp
add
imul
or
test
xchg
popa
insb
or
in
aam
iret
adc
sub
int
shrb
mov
sub
loopne
out
inc
sbb
in
iret
movsl
insl
aam
adc
cmp
jmp
arpl
xor
je
xchg
out
cli
roll
mov
loop
add
test
jg
mov
sub
hlt
inc
mov
inc
dec
inc
dec
in
add
js
push
mov
clc
rcll
push
psubusw
into
rcll
xchg
lods
and
dec
fld
and
push
or
cwtl
xchg
insb
test
addr16
aam
sbb
fnsave
dec
jae,pn
cmp
mov
add
cmc
test
roll
mov
push
sub
out
or
sahf
ret
call
dec
mov
sub
xchg
loopne
leave
aas
mov
add
sub
xor
or
outsl
loop
dec
push
jp
and
add
int3
icebp
mov
push
pusha
mov
movsb
iret
ret
rorl
add
mov
add
repnz
jge
push
dec
and
addb
xorl
loope
mov
pmulhw
xor
lock
pushf
mov
int3
mov
xor
insb
cld
pusha
pusha
lret
data16
lock
loop
movsb
cmp
push
jns
cmp
jg
loopne
add
add
add
jns
xchg
or
sbb
or
hlt
and
or
stos
lcall
inc
mov
enter
lea
out
repnz
das
mov
or
cmc
dec
in
fsubrl
xor
or
inc
push
pop
dec
jle
and
xchg
xor
sub
mov
adc
add
addr16
xor
lods
xchg
pop
add
push
xchg
out
iret
fcom
ja
pop
and
adc
stos
mov
and
lock
xchg
dec
push
enter
mov
inc
int3
xor
lret
aam
and
push
popa
rorb
popf
add
sbb
aaa
int3
pop
pop
jae
mov
push
mov
pop
jns
add
je
cs
out
pop
lods
or
mov
jp
lds
insl
enter
adc
adc
xor
faddl
inc
iret
inc
sub
sub
xlat
mov
fiaddl
or
in
mov
cwtl
adc
dec
into
inc
pop
ret
fwait
sbb
xchg
add
movsb
jp
sub
rcr
adc
jge
test
shrl
or
out
jb
rolb
inc
lds
jne
or
sti
or
adc
jb
lea
push
aaa
or
pop
lock
dec
lret
or
sbb
and
inc
jns
int3
and
sbb
mov
jb
add
sbb
fisttpl
mov
test
addr16
leave
in
dec
pushf
shrl
jns
imul
das
mov
add
outsb
mov
sbb
sub
icebp
cmp
fiadds
dec
ret
and
outsb
and
or
mov
and
add
mov
rcr
xor
lds
fstpl
cltd
in
push
jmp
and
cld
je
lret
add
cmpb
cwtl
repz
or
inc
mov
outsl
cmp
mov
or
inc
repnz
mov
inc
test
pushf
jb
pop
or
inc
jle
push
lret
lahf
xchg
fiaddl
imul
add
in
jge
push
movsb
dec
shlb
mov
xchg
aad
insb
cs
shl
out
xor
sbbl
js
es
mov
mov
pop
sti
daa
xchg
test
clc
sub
add
push
inc
jmp
xchg
or
in
sbb
add
fidivs
xchg
in
lods
scas
iret
enter
mov
sahf
jecxz
dec
out
aaa
inc
xchg
xor
clc
push
pop
aad
pushf
and
mov
fimull
cmc
inc
jp
sbb
jb
clc
pop
test
mov
int3
test
jecxz
dec
push
fs
call
sub
je
dec
mov
outsb
add
sbb
ret
pop
push
lcall
and
fs
push
fwait
inc
scas
push
push
adc
inc
jl
icebp
mov
push
punpcklbw
xrelease
pop
and
popa
or
mov
shrb
in
cmp
xchg
pusha
dec
jnp
or
adc
fidivrl
je
pop
xor
jl
sti
mov
add
movl
inc
add
xchg
adc
dec
lods
mov
pop
sub
out
inc
pop
inc
dec
icebp
in
test
dec
mov
fsubl
add
insb
pop
jns
loop
mov
test
adc
mov
mov
rcrb
les
pop
std
lods
jp
or
outsb
mov
shrb
ret
dec
je
orl
cld
test
add
add
xchg
out
js
pop
cmp
les
push
push
jl
ret
push
shl
std
movsb
xor
mov
in
xchg
sbb
in
inc
add
xorb
adc
push
nop
out
sub
inc
adc
scas
push
xchg
fildl
add
js
or
mov
add
lock
fbld
push
inc
jae
mov
mov
cmpsl
cmp
inc
inc
lock
cmpsb
pop
lods
add
ret
in
sub
sbb
add
hlt
sub
add
ja
mov
xchg
push
xor
xor
jns
add
cmp
xchg
hlt
adc
loop
and
loop
mov
jae
cmp
push
sbb
add
xchg
pop
mov
dec
lds
in
push
divl
aam
jno
ret
add
xchg
push
mov
jb
add
addl
pop
add
mov
add
js
jns
adcb
pop
sar
add
or
xor
imul
jb
dec
mov
xor
in
fdivl
jmp
mov
jns
add
pop
inc
test
inc
frstor
and
push
das
mov
test
pusha
fsubl
movsb
loope
sub
inc
push
subl
ljmp
mov
ficomps
inc
inc
or
xchg
je
mov
movsl
test
and
movsb
xchg
das
loope
mov
lock
inc
lret
add
push
out
dec
inc
and
xchg
ljmp
add
daa
clc
iret
les
xchg
adc
adc
add
sbb
test
jmp
pop
les
xchg
jno,pt
sbb
adc
pop
out
mov
mov
addr16
andl
lock
adc
daa
jo
es
cwtl
and
les
cld
xchg
mov
pop
into
add
ret
mov
xor
mov
adc
cwtl
cmp
cmp
rorb
adc
dec
and
sbb
inc
out
add
mov
popa
pushf
add
out
adc
jo
je
jns
or
pushf
rorb
add
sub
inc
push
mov
xor
or
mov
dec
sub
xchg
lods
nop
mov
xlat
inc
add
fs
mov
and
jmp
test
mov
lock
adc
fcomps
mov
int
sub
hlt
xor
mov
jb
int3
les
lret
jl
loopne
jne
cmp
xor
cmp
xchg
adc
loope
stc
mov
orl
les
sub
mov
jp
mov
xlat
and
jecxz
fstpl
add
in
inc
cmp
and
out
lcall
sub
and
jg
jae
cmp
jmp
call
sub
jbe
or
clc
inc
rolb
fwait
pop
pop
data16
adc
subb
mov
push
jmp
push
addr16
faddl
inc
ret
sbb
mov
sbbb
loopne
leave
cld
les
orb
enter
add
in
cld
outsb
jmp
sti
dec
lret
mov
inc
and
rclb
loopne
ljmp
jp
add
nop
dec
adc
jb
mov
addr16
xor
inc
cltd
ljmp
mov
fs
inc
add
stos
out
mov
lcall
mov
lret
adc
mov
lret
adc
xlat
test
cli
mov
std
enter
movsl
out
or
inc
sbb
and
scas
pop
push
mov
pop
iret
leave
rcr
adc
movsl
unpcklps
dec
dec
push
sbb
ja
adc
movsb
mov
xlat
rcl
sti
repz
pop
fstp
adc
mov
push
lahf
rorb
xor
or
inc
jnp
je
fsubrl
push
ds
push
scas
xor
mov
pop
ret
jmp
jns
xor
mov
cmp
lods
cmpsl
push
gs
lret
jmp
dec
inc
test
add
xor
rolb
aam
popf
sub
cmp
dec
call
mov
add
in
add
jl
xor
dec
add
enter
in
xor
mov
scas
pop
xor
add
mov
or
inc
mov
xchg
adc
leave
mov
dec
scas
pop
add
lret
iret
mov
push
and
add
fistl
andl
push
int3
rolb
inc
add
mov
pop
push
push
loopne
insb
add
add
lock
inc
imul
and
mov
add
lods
fsubrs
sbb
jb
out
xchg
or
in
adc
mov
xchg
stc
add
insb
rclb
out
add
dec
pop
push
fmul
cmpsb
pop
push
jno
incl
gs
cmp
in
jnp
add
sbb
lods
out
jae
imul
add
lcall
daa
test
cmpsb
jb,pt
popa
das
dec
xchg
cmpl
addr16
adc
or
mov
repz
jb
adc
fwait
jnp
js
and
es
sub
cltd
xchg
mov
inc
fimull
jmp
popa
addr16
pushf
out
inc
sbb
movsb
iret
stos
jns
or
fwait
les
or
in
daa
add
rcrb
add
icebp
test
pushf
inc
adc
ret
mov
outsl
sbbl
out
cmp
cmp
test
cmp
fimuls
add
out
xchg
sub
add
mov
outsl
inc
mov
loope
notb
pop
push
test
loop
add
jp
jno
and
add
sbb
push
pop
cltd
push
add
ja
je
std
jge
jns
test
push
mov
leave
add
outsb
icebp
decb
add
pop
adc
dec
or
cmp
xchg
push
mov
loop
andl
pop
adc
pop
lret
mov
jnp
pop
stos
or
jp
je
cmpsb
mov
test
aad
mov
dec
push
rcrb
js
pop
in
or
xor
pop
std
cltd
ljmp
push
pop
or
inc
icebp
mov
daa
dec
mov
lret
loope
cmp
add
mov
cmpsl
jg
add
lcall
in
or
das
dec
iret
dec
sub
cs
jmp
dec
cli
sbb
dec
dec
add
or
insb
push
mov
dec
dec
push
pop
adc
les
inc
add
jle
pushf
mov
jnp
lahf
jmp
and
lcall
add
cmpsb
enter
mov
sbb
add
aaa
pop
sbb
add
mov
and
push
adc
xchg
sub
xor
add
jns
clc
test
and
das
cbtw
push
sub
dec
push
repnz
cwtl
inc
cmp
das
push
push
cwtl
sbb
xchg
pop
sbb
xchg
scas
ja
cltd
fdivs
adc
and
dec
aaa
iret
mov
xchg
mov
mov
mov
add
scas
loopne
pop
test
mov
xchg
add
jno
dec
adcb
mov
out
add
test
and
xor
xor
gs
call
int3
inc
mov
dec
push
mov
add
and
xchg
scas
lret
insl
orb
fsubl
rolb
mov
or
push
addb
push
loop
jno
stos
push
negl
adcb
adc
jle
push
gs
sbb
ljmp
dec
fsts
dec
adcb
movsb
push
or
or
cwtl
repz
mov
sbb
add
ljmp
icebp
pop
es
cs
cwtl
int3
int3
jbe
sub
mov
adc
inc
popf
jo
cmp
mov
adc
outsb
mov
lret
fimuls
leave
sbb
jo
das
mov
pop
addr16
clc
add
jbe
adc
daa
dec
clc
mov
xor
imul
add
adc
cmp
cs
sbb
dec
popf
adc
fnsave
sub
cltd
push
sub
call
pop
add
cli
sub
mulb
test
ljmp
mov
imul
pop
mov
call
jno
aam
cli
cltd
insb
test
out
cmpsl
sub
pushf
cmp
nop
jbe
mov
mov
outsl
fiaddl
fistps
inc
pop
in
lret
xchg
or
movsb
adc
jle
sub
mov
add
jp
cmp
js
sarb
dec
xor
push
xchg
mov
jo
incb
pusha
add
in
push
leave
sub
adc
loopne
mov
adc
pop
jmp
popf
pop
dec
push
movsl
pop
add
pushf
dec
mov
mov
xor
mov
add
jecxz
insb
cld
xchg
enter
mov
aas
cmp
pop
xor
shlb
lret
dec
mov
fmull
mov
aad
sub
shr
ds
pop
insb
pop
jb
mov
xchg
inc
das
add
mov
clc
ret
push
sbb
roll
and
cmc
pop
pushf
sbb
add
ret
pop
je
cmp
xor
lret
dec
inc
mov
iret
sbb
xorb
mov
clc
sub
and
sahf
ret
push
jl
sub
daa
jb
in
pop
scas
mov
push
pop
ret
and
jno
movsl
cwtl
push
lock
test
mov
jmp
jno
in
mov
incl
mov
xor
jo
push
adcl
adc
rcrb
add
pop
aaa
adc
pop
mov
lcall
out
xchg
les
out
inc
outsb
adc
inc
cmpsb
out
loopne
and
add
movsb
clc
dec
lahf
mov
rolb
fdivl
fs
sub
mov
loopne
orb
xchg
xchg
sub
and
mov
sub
jl
add
and
dec
push
mov
sbb
gs
sub
insb
pushf
pop
or
loopne
mov
push
nop
sub
sub
icebp
les
add
add
pop
push
mov
sub
lods
dec
xchg
add
dec
in
clc
ror
pop
add
or
out
pop
mov
mov
or
sub
call
add
and
lock
xor
sbb
cmp
pushf
lret
repz
popa
pop
ss
pop
add
scas
mov
inc
repnz
sub
add
pop
mov
adc
jb
outsb
mov
mov
pusha
inc
dec
lret
add
pop
add
inc
idiv
jns
adc
cltd
mov
cld
shr
pop
iret
or
nop
add
or
xchg
xchg
xchg
or
lahf
movsl
shl
push
mov
lods
inc
ret
imul
inc
mov
add
adc
in
sub
sub
test
xchg
pop
aaa
mov
add
mov
call
add
mov
xchg
test
xacquire
movsb
jb
mov
push
mov
and
or
outsl
scas
in
es
dec
dec
push
pop
enter
xor
imul
pop
cmp
jg
jecxz
mov
aam
in
ret
jecxz
pop
sbbb
les
xor
rclb
jecxz
les
xor
xchg
sbb
int3
pop
int3
add
xor
add
and
xchg
pop
add
in
mov
adc
rcll
sub
js
pop
add
xor
sbb
and
mov
test
aam
mov
rorl
pop
addb
mov
filds
fs
inc
pop
cmp
repnz
add
xchg
jg
mov
add
pusha
mov
cwtl
cld
pop
push
sbb
adc
sahf
ror
add
jge
and
inc
and
call
jp
imul
sbb
add
movsb
adc
xor
cmp
and
lods
push
mov
pop
and
clc
add
stc
xchg
xchg
les
pop
hlt
sub
add
pop
mov
cwtl
addb
push
push
pop
push
add
sub
sahf
xchg
mov
in
xchg
push
mov
pushf
pcmpgtb
or
imul
mov
xorb
nop
mov
add
dec
lock
ds
mov
fists
testb
es
pop
pushf
fmull
dec
mov
mov
or
mov
mov
sub
neg
movsl
jmp
pop
mov
test
xchg
adc
lds
negb
pop
mov
jnp
add
sbb
cmp
stos
jo
xchg
mov
mov
iret
data16
add
sarb
pop
mov
xlat
in
fisubrs
add
adc
add
in
ja
int
gs
js
xchg
mov
filds
xor
notb
pop
aad
inc
in
adc
cwtl
xor
jl
cmp
mov
mov
add
jno
xor
adcb
sarl
stos
xlat
jo
add
inc
hlt
push
adc
mov
daa
movsl
cwtl
cmp
dec
cmp
add
test
cvtdq2ps
cmpl
addr16
pop
push
mov
add
sbb
sbb
xlat
dec
push
sarl
outsb
popf
cmp
adc
movsb
or
jmp
cmp
pop
std
bound
pusha
pushf
push
jle
aam
dec
mov
cmp
int
pop
roll
mov
inc
or
jecxz
pop
ss
enter
ret
mov
outsl
cmp
add
xchg
daa
push
xchg
inc
cld
add
lods
adc
xchg
push
cmp
jnp
gs
dec
cmpsl
mov
push
fs
sbb
sbbb
cmp
mov
icebp
xchg
jecxz
cmpsb
int3
ljmp
adc
mov
outsb
ret
jbe
lock
pop
mov
les
jno
jnp
jbe
push
int
mov
push
inc
test
dec
shl
pusha
nop
call
add
sbb
dec
addr16
imul
cmp
adc
jnp
add
icebp
mov
or
push
out
jne
fdivs
cs
pusha
int
pop
lock
adc
or
inc
adc
js
lea
mov
mov
mov
sub
insb
inc
sub
mov
or
mov
push
dec
sbbb
mov
in
or
cmovns
sub
pop
or
dec
adc
add
dec
adc
jne
lea
and
cmpl
xchg
mov
inc
cld
test
add
add
pop
mov
std
pushf
loope
xor
push
cltd
mov
adc
lea
out
jo
test
pusha
pop
cld
inc
adc
cmp
mov
cmp
int3
lret
ljmp
push
pop
dec
add
ss
test
aaa
push
or
add
leave
push
pop
add
push
sbb
jnp
and
and
sub
add
cwtl
aad
mov
shl
jmp
or
incb
js
jp
fwait
pushf
je
adc
dec
ret
inc
jb
add
inc
pushf
pop
out
pop
test
xchg
in
arpl
das
int3
popf
les
xor
inc
lds
xchg
outsb
and
cltd
jnp
push
add
test
xchg
sub
xorb
or
mov
cmp
push
cmp
pop
add
mov
or
enter
sbb
int3
cmp
mov
or
or
pop
pop
inc
add
or
les
popl
adc
ret
cltd
mov
and
add
js
mov
jb
rclw
push
and
add
pop
pop
cmp
nop
shrl
test
push
jne
sub
imul
bnd
fistl
mov
sub
and
cmp
sbbb
mov
jl
jbe
outsb
cmp
and
xlat
dec
sbb
popa
add
popf
out
dec
add
les
push
psubusb
test
mov
adc
sbb
or
and
lods
cmpb
xchg
jp
add
sbb
popa
push
insb
jo
and
cmp
xchg
cmp
adc
and
or
sar
jle
mov
loopne
inc
lock
sub
add
inc
ret
push
dec
stos
add
inc
in
addr16
sbb
push
or
mov
adc
enter
hlt
addl
dec
jle
fadds
mov
adc
enter
insl
loop
sub
mov
cwtl
add
pusha
sbb
mov
mov
or
pop
adc
pop
fwait
xor
push
pusha
adc
test
or
or
cmp
inc
push
jmp
cmp
lods
add
pop
out
and
cwtl
and
and
inc
add
mov
cs
stos
mov
enter
mov
jb
add
or
mov
jmp
jbe
xchg
daa
inc
or
out
jo
jnp
fcompl
dec
adc
inc
add
adc
rol
out
add
cmpsl
inc
sbb
or
xchg
pop
arpl
or
and
cmpsl
dec
sbb
addl
mov
xor
jecxz
push
dec
cld
adcb
fs
mov
bound
in
xchg
call
in
pop
dec
cmp
add
and
mov
add
call
adcb
cwtl
movsb
inc
gs
pop
jne
rolb
push
xchg
push
mov
testb
xor
sub
arpl
jl
out
xor
test
subl
push
push
imul
inc
orl
push
addr16
or
add
xlat
in
xchg
push
inc
iret
or
cs
pop
jno
add
leave
xchg
mov
sbb
jecxz
nop
int
add
cmp
andb
add
xlat
cwtl
mov
stos
dec
sub
leave
jb
aad
xor
out
dec
sahf
shlb
clc
xor
out
mov
ljmp
daa
inc
cmp
add
insl
sti
sbb
dec
in
mov
mov
mov
call
mov
and
test
pop
and
rclb
sti
push
aam
rclb
cmpsb
adc
int3
pusha
mov
enter
mov
mov
jne
hlt
out
sub
faddl
push
push
clc
mov
or
mov
jg
shrl
jns
and
and
mov
divl
cmp
mov
jmp
mov
sbb
das
mov
jmp
mov
adc
and
nop
jg
pop
out
mov
aaa
sub
leave
and
daa
sub
repnz
sbb
mov
add
out
push
adc
xchg
or
mov
sub
push
or
bound
inc
insb
in
jo
jo
mov
pop
mov
insl
push
stc
int3
shlb
sub
and
xchg
push
adc
nop
cmp
add
mov
push
call
fdivrs
sbbl
fcoml
iret
fdiv
call
mov
mov
sbb
pop
inc
mov
adc
sbb
xor
dec
sub
and
adc
push
mov
js
test
push
push
mov
out
inc
push
mov
out
bound
in
push
mov
lock
sub
pop
push
out
inc
mov
les
add
repnz
out
nop
sbb
pop
lods
push
fs
shl
ret
add
inc
call
add
sbb
xor
pop
add
and
sbb
jecxz
add
inc
adc
or
add
nop
cwtl
mov
xchg
rolb
pop
mov
inc
out
pop
cltd
enter
xchg
leave
xor
test
sahf
push
mov
cwtl
add
cld
rolb
and
cmp
add
cmp
xchg
in
sahf
push
or
mov
mov
jne
push
inc
stos
fwait
adc
push
pop
push
cmp
xorb
fisttpl
jbe
or
mov
out
movsl
add
push
dec
sahf
or
imul
punpcklwd
iret
inc
rclb
xchg
mov
sbb
addb
orb
and
scas
aam
sub
sub
sub
out
inc
subb
andl
clc
mov
mov
adc
ja
std
mov
movsb
and
push
mov
xorb
sbb
xchg
int
jmp
fbstp
cmp
pusha
add
xlat
inc
ja
and
and
sti
dec
push
xchg
addb
push
jno
mov
push
mov
fs
dec
aam
callw
push
xor
std
mov
sarb
jb
notb
je
or
add
lods
out
push
dec
popf
push
adc
xchg
sbb
cli
mov
repnz
imulb
inc
push
add
sbbl
mov
scas
fwait
adc
ret
and
push
xchg
or
or
inc
leave
pop
dec
xchg
out
push
dec
xchg
iret
leave
lods
jg
pusha
filds
mov
add
inc
test
adc
pop
aam
pop
mov
push
push
andb
or
lret
push
lods
in
adc
pop
xchg
loop
add
jbe
dec
mov
push
sub
cwtl
inc
lret
xor
or
or
out
mov
pop
loopne
sarb
imull
js
shlb
rcrb
mov
jne
xchg
jno
mov
xchg
pop
jmp
cltd
jnp
push
dec
pushf
cmp
xorb
sbb
add
std
cmp
nop
cmp
cmp
add
pop
cld
addl
aas
icebp
mov
or
lret
add
adc
pop
pop
pop
add
inc
jno
aaa
mov
addr16
sub
sbb
dec
mov
pop
pop
negb
adc
ret
mov
insb
or
sbb
dec
gs
enter
add
fldlg2
adc
pop
or
add
sahf
lods
adc
push
addl
xor
mov
xor
imul
add
dec
adc
cld
lret
mov
cld
and
adc
imul
aaa
mov
and
xor
sbb
test
mov
fwait
mov
test
cmp
xchg
pop
es
mov
pop
mov
dec
sub
xlat
js
mov
jp
mov
in
jne
sbb
xchg
js
xor
call
push
pop
ret
pop
xchg
push
iret
add
cli
and
and
mov
xlat
mov
add
dec
or
inc
fsubl
or
bound
dec
in
outsb
divb
pusha
add
xchg
cs
rol
mov
cvtps2pd
repnz
gs
inc
add
pop
add
data16
jae
outsb
xor
int3
mov
iret
lods
xor
lcall
aad
push
lock
loop
add
adc
std
les
add
mov
push
jae
add
push
loopne
inc
jg
add
fnsave
das
add
in
rcll
ret
xorb
sbb
cld
add
inc
or
jge
dec
test
or
and
dec
mov
sub
lods
dec
add
lock
test
ja
mov
jp
inc
negl
adc
push
ret
icebp
ljmp
pop
dec
jns
add
pop
les
rolb
repz
xor
jle
jp
adc
rol
pop
add
ret
pushf
mov
mov
leave
test
push
jno
pop
insb
push
shll
pop
jne
jge
fucomi
rorb
in
into
xchg
decl
movsb
subl
push
lock
adc
les
mov
inc
add
loopne
xor
arpl
scas
leave
dec
into
and
add
in
xchg
addb
fmuls
xor
and
in
enter
inc
pop
and
jae
mull
addr16
xlat
add
dec
cmpsb
sbb
jo
cmpsl
gs
mov
scas
nop
sbb
mov
add
cmp
scas
sbb
add
add
cltd
xchg
sbb
inc
lret
cld
push
ret
pop
int3
js
shl
test
adc
xorb
daa
xchg
adc
push
add
sahf
test
mov
add
cmp
xor
mov
adc
dec
jae
or
add
cmp
ja
ror
ljmp
stos
rcrb
adc
movsb
or
roll
cmc
test
mov
mov
or
adc
dec
scas
and
aaa
xlat
xor
loope
cmpsb
frstor
enter
and
and
mov
jns
and
fidivrl
je
xchg
inc
or
and
inc
cmpb
or
loop
pop
test
xor
jb
pop
inc
lock
dec
xchg
sbb
hlt
iret
sar
shlb
lahf
mov
push
mov
shll
inc
or
cwtl
clc
cld
ret
pop
and
cmpsb
adcb
or
and
dec
sahf
icebp
cmp
jl
inc
popf
lock
adc
popf
and
bound
es
ret
clc
mov
mov
or
push
inc
and
push
sahf
add
pop
in
adc
push
and
or
sbb
xchg
aaa
lods
xor
fdivrs
test
pop
movsl
adc
push
jg
daa
enter
testl
mov
clc
add
sub
jp
add
sub
jl
add
adc
ret
or
nop
das
imul
mov
cmp
inc
inc
push
push
xchg
and
mov
popa
ret
hlt
cmp
cmc
hlt
inc
or
insl
lds
inc
lods
scas
in
mov
mov
pusha
mov
inc
sbb
xor
pop
call
mov
xchg
cld
pushf
inc
insl
scas
fdiv
inc
fcoml
iret
xchg
inc
xor
insl
cmp
mov
pop
clc
push
xchg
jecxz
mov
nop
dec
leave
mov
shrb
inc
xchg
inc
pop
les
lds
cwtl
adc
test
cltd
ds
mov
add
and
push
or
leave
pop
push
or
incl
mov
test
and
and
gs
les
mov
mov
adcb
in
stos
je
loope
xchg
cmp
pop
test
repz
fmull
addl
mov
int3
sub
adc
add
jecxz
xor
push
int
lods
add
inc
out
xchg
movsb
je
inc
pop
lret
xchg
xor
adc
ret
or
ficompl
mov
jle
cs
lock
stos
add
jg
xchg
mov
sub
xchg
push
mov
xchg
fldenv
mov
cmp
fidivs
add
call
add
aad
inc
in
rorl
xchg
jnp
pop
sahf
adc
or
and
pop
mov
add
mov
xchg
add
in
or
test
add
xchg
xor
dec
dec
inc
fstps
or
stc
sub
ret
add
inc
add
insl
mov
push
lret
adc
jle
add
insb
mov
stos
adc
sbb
pop
hlt
push
xchg
mov
and
add
sbb
jp
inc
push
sbb
adc
inc
aam
movsb
pop
inc
or
cmpsl
inc
dec
cwtl
test
add
jne
mov
data16
cld
mov
mov
inc
out
mov
in
inc
ljmp
iret
sub
adc
loop
add
pop
dec
xchg
int
add
movsb
dec
and
pusha
cmpsb
out
lcall
xorb
lock
pushf
stc
ret
cmp
or
mull
mov
dec
add
xchg
ficompl
xchg
fs
add
nop
mov
or
enter
sbb
or
jmp
enter
sub
mov
mov
pop
inc
movsb
je
adc
subl
pop
adc
mov
rclb
or
xor
mov
mov
mov
lock
mov
pop
and
push
add
and
jae
out
jp
add
fyl2xp1
sub
jno
cmp
out
jl
inc
cwtl
push
pop
jno
lcall
jl
ret
jle
inc
and
outsb
jne
or
pusha
mov
mov
push
mov
jno
loope
sbb
and
cwtl
shrl
enter
or
movsb
mov
add
xchg
mov
jns
daa
xor
adc
incb
popf
mov
jo
dec
test
adc
adc
xchg
xlat
and
mov
shlb
and
pop
pop
add
iret
dec
pusha
sarb
push
push
jae
add
pop
mov
ret
mov
mov
mov
and
rolb
cmp
out
fcoms
push
jp
adc
push
cld
and
insb
xchg
call
push
add
fnstenv
dec
pushf
hlt
daa
mov
dec
dec
mov
int3
rolb
out
and
adc
sbb
jmp
add
push
dec
xor
mov
cld
mov
in
push
add
test
jo
or
sbb
inc
jmp
mov
inc
mov
push
push
fcomps
xchg
mov
and
jl
add
or
mov
pop
or
add
int
push
add
pop
jb
sub
push
sbb
jmp
push
push
mov
clc
lock
pop
les
out
add
movsb
add
insb
cmpb
ds
mov
mov
hlt
pop
in
mov
xor
orl
xchg
add
lds
std
insb
hlt
cld
dec
mov
xchg
rcrb
std
mov
xchg
mov
fs
sbb
mov
xchg
and
mov
test
mov
cmp
sbb
stos
test
imul
add
movsl
lret
in
sar
test
stos
and
lds
sbb
stos
mov
adc
lock
push
adc
pop
and
dec
shld
pop
int3
or
loopne
add
adcl
sub
out
loopne
dec
mov
cmp
sub
xchg
add
sub
xchg
mov
cld
sub
adc
dec
test
xchg
sub
cltd
cwtl
test
or
hlt
xlat
dec
or
cwtl
xor
mov
rcrl
enter
int3
cmp
sbb
push
loope
add
adc
adc
add
jns
sbb
push
rcrb
fistpl
out
and
inc
xchg
clc
mov
pop
cmp
jl
or
aam
aas
push
adc
fidivl
rorl
push
add
adc
mov
pop
jb
adc
jl
rorb
les
loopne
xor
sbb
imul
int
call
fsts
and
add
pop
cmp
mov
lret
mov
and
jle
out
add
mov
inc
and
ret
cmp
pop
ffreep
xchg
lods
cld
xchg
aam
xchg
cmp
adc
shll
decl
mov
push
sbb
push
mov
adc
mov
in
cmpsl
pop
xchg
sbb
mov
es
hlt
dec
pop
jae
and
sbb
jle
js
xor
fwait
test
cmpsb
in
mov
mov
or
add
inc
and
mov
and
cmp
mov
ret
and
xchg
mov
mov
das
mov
mov
ret
inc
data16
ljmp
pusha
inc
dec
stc
mov
daa
xlat
inc
pop
add
sub
mov
sbb
mov
mov
add
xchg
inc
mov
sbb
cmp
fcomps
pop
shl
lahf
dec
popf
mov
mov
sub
stos
adc
mov
imul
int3
and
inc
int
and
leave
or
test
daa
jl
add
mov
sub
sbb
add
and
mov
fmul
orb
pop
andb
shrb
pop
mov
xchg
jmp
dec
cmpsb
dec
add
push
iret
mov
pop
cmp
and
push
add
sti
shl
pop
add
adc
mov
sub
scas
xchg
push
dec
cltd
cli
jo
push
adc
lods
aaa
sti
or
out
cmp
add
ss
and
inc
inc
mov
jo
lock
or
pop
std
fwait
test
dec
or
push
or
in
movsb
addb
movsl
add
in
shll
jl
push
icebp
adc
pop
fs
jo
adc
xchg
and
push
mov
or
popa
xchg
pop
cmp
push
test
rorb
pop
sbb
nop
xor
xchg
sbb
out
fidivl
sar
daa
inc
inc
xor
test
adc
push
inc
pop
jo
jmp
pop
cmp
push
movsl
add
mov
or
jl
aaa
and
sbb
or
mov
inc
subb
arpl
mov
jle
pop
pusha
lods
mov
test
sbb
mov
xchg
adc
int
shlb
mov
xchg
add
mov
sub
enter
or
and
push
or
fs
inc
pop
mov
pusha
add
sub
jl
mov
xor
lahf
cltd
or
xchg
sbb
add
xchg
in
int3
xor
shlb
add
daa
mov
ds
xchg
xchg
imul
sti
xor
popf
mov
pop
or
adc
add
push
xchg
into
push
ret
add
xchg
pusha
xchg
insb
cmpsb
lock
fwait
inc
stc
jle
xor
adc
jb
sub
sahf
sub
cmpsb
lock
adc
mov
pop
nop
in
rcr
add
leave
jbe
add
xor
shlb
mov
les
jne
or
cltd
aad
scas
xor
adc
inc
cmp
xchg
icebp
test
aaa
xlat
stos
jecxz
les
iret
jmp
dec
sbb
mov
paddsb
lret
cmp
mov
test
shr
testb
adc
dec
imul
sub
int
repnz
add
fnstcw
fnsave
xor
push
push
fwait
jp
inc
xor
aas
sbb
push
jge
outsb
in
das
cmpl
push
push
sbb
inc
or
aaa
mov
mov
arpl
pmaddwd
or
iret
je
xchg
add
popa
cltd
adc
inc
adc
orl
cmp
add
xor
or
mov
leave
and
xchg
mov
mov
jmp
clc
or
pop
cmp
test
mov
inc
push
inc
sub
mov
inc
ret
xchg
fnstsw
push
out
mov
xchg
or
and
fmulp
out
nop
add
adc
and
aad
decb
xchg
fnstsw
mov
call
jl
clc
fldl
inc
push
mov
xor
nop
push
sbb
adc
mov
or
out
mov
nop
sbb
repnz
add
mov
ja
and
mov
add
fldl
mov
cld
dec
mov
rcr
add
push
xor
sbb
mov
cwtl
sbb
jg
sahf
ret
inc
rorb
or
int3
fsubr
andb
sbbb
mov
mov
subl
lods
push
inc
sbb
xchg
das
insb
or
pop
bound
lock
inc
push
arpl
pop
inc
das
pop
movsb
or
xchg
shll
fldt
shll
cmp
mov
incb
adc
pushf
add
das
xchg
aas
daa
and
cmp
jbe
add
fdiv
cs
pop
xlat
subb
sub
adc
or
sbb
and
loop
cwtl
adc
inc
mov
sbb
sub
inc
es
inc
mov
push
movsb
mov
jg
add
bound
filds
adc
getsec
add
xchg
das
cmpb
in
add
adc
mov
lea
cltd
lret
sbb
fsubrp
dec
les
ljmp
inc
insl
sub
pushf
fnstsw
rcl
ja
pop
xor
sar
inc
test
and
jbe
or
jae
call
or
push
rcr
or
mov
pop
dec
test
or
sysenter
mov
outsb
pop
movsb
adc
mov
in
cmpsb
xor
fs
xchg
in
pusha
rol
daa
aam
add
test
scas
or
xchg
inc
add
mov
adc
fidivs
test
sub
inc
push
push
add
sbb
push
das
lock
add
mov
imul
mov
inc
or
or
push
in
mov
testl
loop
fisubl
ret
aas
push
jecxz
outsb
cmp
dec
mov
adc
stc
aas
test
arpl
add
xchg
arpl
mov
push
pop
mov
shrl
and
loop
inc
popa
sbb
je
nop
roll
shl
clc
add
add
test
rcr
dec
and
jbe
inc
enter
adc
shlb
adcb
sub
add
insb
sti
out
cmp
lcall
gs
out
add
or
push
ret
add
fcmovu
test
adc
outsb
and
mov
add
leave
fldenv
aad
push
insb
mov
add
mov
and
add
mov
jae
adcb
mov
jnp
xchg
add
fnstsw
add
add
arpl
imul
pop
aad
cs
jb
push
jns
pop
jne
fdivrs
in
std
push
aas
push
adc
dec
dec
lret
or
outsb
or
pop
mov
mov
das
xchg
out
mov
fnsave
mov
cmp
push
inc
bnd
xlat
and
and
or
ljmp
imull
sbb
inc
dec
sub
adc
inc
popf
add
test
or
rcll
cwtl
cmp
out
cwtl
add
adc
jo
jne
stos
or
subl
in
xor
loope
mov
fsubrl
cld
cmp
adc
je
popl
jns
sub
inc
sub
add
jno
mov
cmp
nop
js
enter
xchg
repz
adc
fs
inc
sub
outsb
add
insl
mov
add
push
and
and
mov
pop
sahf
push
adc
xor
lret
clc
fsubp
arpl
jge
pop
pop
add
popa
sub
adc
sahf
sub
mov
sbb
in
dec
sbb
jbe
js
and
and
xchg
mov
push
imul
hlt
jae
adc
cs
mov
je
xchg
mov
rcrb
push
push
lret
rorb
pop
xchg
test
xchg
push
adc
sbb
push
adc
rcr
leave
inc
and
push
or
ds
ret
mov
pushf
or
mov
push
es
xchg
ret
add
sbb
mov
cmc
fbstp
hlt
rclb
daa
xor
add
cmpl
mov
in
ljmp
dec
js
addl
test
nop
iret
sbb
std
daa
pop
mov
sarl
dec
dec
lahf
adc
int3
out
test
mov
sub
syscall
jo
jae
mov
in
mov
outsl
hlt
push
mov
xor
dec
fidivs
inc
xchg
or
inc
gs
push
inc
jp
push
sub
xchg
and
subl
pushl
sbb
cmp
sti
subl
popa
xchg
mov
cmpl
daa
addr16
repnz
xchg
sbb
cwtl
adc
xor
les
xchg
jmp
sub
out
push
inc
sbb
nop
orb
pop
cmp
iret
adc
push
sub
push
sbb
iret
sbb
sub
and
pop
in
sbb
cmp
adc
das
mov
sbb
inc
movhps
add
and
mov
inc
das
mov
sarb
and
adc
cmp
repnz
jno
adc
inc
add
shlb
and
pushf
rorb
arpl
push
add
fisubrs
mov
cmp
mov
mov
pop
fs
repnz
add
cli
cmp
test
mov
mov
and
cmpsb
call
sbb
ja
add
pop
push
mov
cmp
imul
sub
fstl
out
xchg
orb
add
ret
xor
ret
mov
jbe
add
notb
inc
adc
in
xor
inc
inc
xchg
xor
or
pop
jnp
jno
adc
jbe
xchg
xchg
ror
mov
add
mov
mov
mov
push
adc
enter
or
inc
pop
mov
add
xchg
xchg
pusha
sbb
adc
fs
inc
adc
ds
jbe
cmp
inc
pusha
sub
inc
and
xchg
and
dec
mov
in
pop
xchg
enter
cmpl
scas
cmpsl
stos
push
shlb
xchg
mov
daa
fcoms
add
mov
sub
or
cmc
jns
inc
inc
or
sbb
mov
cmp
cs
inc
cld
xchg
adc
push
add
cmpsb
outsb
icebp
popa
mov
lock
push
popf
loopne
xchg
test
dec
adc
fildll
dec
cmp
lock
and
xor
dec
and
shrb
out
adcl
loopne
inc
in
adc
ja
sbb
shrb
push
push
adc
cmp
xor
clc
xchg
in
xchg
cld
inc
fiadds
arpl
sbb
arpl
gs
or
adc
and
cmp
icebp
dec
jmp
sbb
or
add
es
ret
loopne
mov
pusha
xor
scas
cltd
les
inc
cs
lock
adc
xor
cltd
sbb
add
push
cmp
add
sbb
mull
cmpsl
push
outsl
shrl
lods
repnz
dec
pop
or
ja
add
into
daa
inc
xor
dec
rolb
push
sub
enter
add
pop
jne
mov
mov
orb
rcr
mov
test
mov
test
push
mov
das
call
push
out
pop
or
icebp
outsb
and
jnp
es
int
adc
sub
sub
es
adc
outsb
dec
xor
cmp
test
cmp
iret
repz
add
push
lea
movsl
push
push
xlat
rcr
dec
and
dec
and
jle
je
leave
std
and
insl
popa
mov
sub
ret
adc
mov
inc
adc
std
mov
mov
lock
andl
shll
jl
addb
mov
and
sub
fidivs
adcb
sarb
ficoml
stc
shll
mov
adc
add
ror
sbb
insl
jo
sbb
enter
sub
pusha
nop
xchg
orl
adc
dec
pop
mov
and
mov
test
add
ret
stos
cs
mov
adc
jmp
add
xlat
push
and
ds
aad
bound
or
xor
in
movsl
xlat
adc
jo
outsb
addr16
leave
in
rol
mov
test
mov
add
xchg
xchg
pushf
loop
add
dec
pop
aaa
insl
jp
push
adc
clc
out
fildll
subl
xchg
adc
leave
outsl
inc
orl
pusha
xor
add
mov
pusha
fdivs
mov
xor
cmp
add
mov
mov
sub
adc
push
scas
pop
daa
xchg
mov
test
or
mov
rcll
outsl
inc
test
in
orb
inc
add
inc
push
and
mov
out
insb
stc
sub
inc
faddl
inc
cs
pop
das
fidivrs
enter
mov
inc
fwait
adc
mov
sub
add
lret
push
out
mov
sub
jno
and
pop
std
push
jo
inc
push
fs
cmp
dec
add
test
mov
in
add
stos
pop
xor
or
dec
out
mov
adc
xchg
mov
fsubr
ret
or
and
adcl
test
push
inc
mov
pop
test
sub
xchg
arpl
shufps
push
lds
insb
divb
in
sbb
cmpsb
inc
xchg
mov
nop
inc
pusha
sahf
mov
fldl
sub
es
das
adc
add
jle
out
sbb
dec
fucom
jnp
ja
in
jo
les
mov
bnd
movsl
xor
push
push
xchg
pop
aad
fcoms
adc
ljmp
sbb
inc
movsb
sub
jns
jne
add
push
xor
mov
stos
and
mov
pushf
loopne
pop
push
add
pop
dec
mov
push
daa
sbb
xchg
dec
adc
mov
xor
pushf
call
loop
rol
cmp
add
in
es
add
test
pop
xchg
mov
addr16
test
mov
and
and
jp
std
loop
jbe
jnp
out
ss
push
mov
sbb
repnz
lds
sbb
mov
jno
gs
mov
xchg
add
ret
xchg
icebp
stc
mov
fidivl
jl
mov
add
inc
pop
enter
or
sub
pop
add
leave
sub
mov
inc
add
push
mov
xor
mov
hlt
js
add
fchs
pop
push
pop
mov
add
push
or
push
jo
sub
pop
push
inc
in
in
mov
or
inc
or
movsb
sub
test
mov
adc
or
in
mov
clc
stos
adc
cmp
sub
jbe
sbb
out
bound
or
push
es
ficompl
xor
jp
out
push
push
pop
add
pop
mov
or
int3
rcl
int3
and
out
call
push
test
cld
orb
andl
or
cmp
inc
push
outsl
rcll
jns
xor
popl
fcmovb
aam
inc
sbbb
fnstsw
mov
outsb
jl
cmp
hlt
add
mov
out
push
mov
enter
adc
xor
and
inc
js
xchg
pop
testl
out
add
sub
mov
mov
pusha
stos
push
sarl
shll
mov
hlt
or
addb
add
pop
sti
mov
xchg
int
enter
enter
mov
pop
pushf
sbb
sub
loop
jb
dec
sbb
mov
or
out
js,pn
add
lret
in
xor
pop
mov
das
adc
jo
add
fnsave
dec
outsl
insl
pop
adc
mov
adc
adc
inc
pusha
movsl
dec
push
xchg
pushf
decl
test
pop
decb
out
add
jae
push
push
sete
adc
repnz
dec
mov
mov
push
test
inc
add
je
out
pop
outsb
js
cwtl
scas
jns
adc
sbb
rcrb
add
in
das
les
xor
fadds
pop
dec
lods
addb
sti
int3
subb
sub
sbb
jp
sets
std
inc
xchg
cs
and
sub
add
sarb
fidivrl
cli
addb
mov
and
gs
and
mov
fdivrs
out
push
leave
or
mov
sti
mov
addb
sbb
aaa
sarl
lods
and
sub
andb
movsb
js
add
mov
sbb
xchg
repnz
iret
mov
xor
push
cmpsb
xchg
and
ss
xor
push
mov
faddl
mov
sub
pop
mov
sti
adc
or
outsb
stos
dec
add
adc
pushf
inc
mov
inc
push
ret
jl
push
or
add
js
jl
nop
hlt
fisubs
mov
inc
add
cmpb
mov
in
sbb
jo
insl
out
mov
add
cmpsb
and
pop
rorl
mov
test
and
mov
imull
dec
dec
sahf
add
or
pop
test
sub
and
or
pushl
pop
add
aam
xchg
push
faddl
loop
sbb
test
in
push
mov
adcb
pop
insb
cmp
xor
push
mov
cmp
adc
sbb
in
sbb
add
jbe
lea
add
sbb
and
cmp
jmp
adc
xchg
inc
sub
lods
xor
xchg
sbb
inc
stc
dec
jb
in
pop
add
sbb
aaa
mov
mov
fdivrl
jno
mov
add
out
dec
and
dec
xchg
add
out
xor
jl
add
in
fwait
imulb
dec
push
or
cli
ja
loop
xchg
sub
jns
cwtl
shlb
push
push
inc
dec
dec
xchg
mov
push
scas
mov
in
sti
ret
aas
je
pop
jge
xchg
test
jmp
jns
cmc
daa
pop
jbe
int3
push
loopne
xchg
addl
xchg
es
in
jno
js
ficoml
inc
pop
mov
push
cmp
or
xchg
popl
or
in
mov
or
rclb
adc
rcl
sub
mov
xchg
add
mov
pop
and
sub
adc
jl
mov
outsb
shlb
xchg
mov
pop
imul
xchg
mov
add
lods
mov
add
fisttpll
es
mov
mov
popa
sub
mov
add
jp
push
jb
or
sub
in
lock
and
push
mov
or
mov
cs
jae
push
ficomps
dec
sti
jl
adc
inc
push
loop
xor
lret
pop
cwtl
add
mov
pop
push
xor
xchg
xor
xor
and
aad
fnsave
sbb
jg
jl
dec
incb
aaa
inc
enter
pop
lret
fcoml
mov
cmpsl
sbb
cld
sbb
dec
cltd
ljmp
or
fidivs
test
sub
add
xor
sub
mov
mov
add
xor
add
ret
fnsave
xor
ljmp
sbb
mov
repz
negl
rcrb
and
pop
mov
pusha
cli
pop
mov
xchg
add
test
das
push
cs
mov
sub
mov
mov
add
aas
pop
popl
xor
xchg
fwait
ja
dec
das
pop
push
adc
pop
mov
daa
mov
sub
ret
imul
insb
dec
dec
and
iret
adc
and
jg
pop
jmp
push
hlt
fldcw
xchg
rolb
rcll
mov
add
jo
jo
push
add
jp
or
jb
addb
daa
shll
lcall
push
push
jl
or
out
es
xorb
mov
repnz
insb
inc
inc
or
and
call
and
xor
push
mov
data16
cmp
or
shll
mov
push
xchg
dec
adc
ret
aad
sahf
ret
fs
sbb
sbb
xlat
cmp
inc
xorb
dec
xchg
icebp
pop
and
adc
or
mov
cmovno
mov
xchg
loopne
mov
push
add
sub
mov
out
inc
inc
cmp
mov
add
sahf
xchg
sbb
jae
insl
inc
and
aas
add
jne
or
es
push
test
jl
mov
stc
fiadds
pushf
dec
xchg
sbb
mov
xchg
mov
or
jo
adc
inc
or
fsubrs
cmp
mov
fwait
sbb
inc
cmp
into
add
cmc
mov
push
negb
les
dec
push
cld
fisubrs
stos
add
xchg
mov
add
push
mov
dec
dec
cmpsl
lock
cmp
repnz
add
fst
cmpsl
loope
push
jg
dec
sbbl
nop
sbb
incb
cli
pop
ffree
mov
xchg
cmpsb
add
xchg
pop
xchg
fsubl
mov
and
mov
shlb
and
das
xor
daa
mov
out
notb
or
mov
add
xor
dec
jb
dec
jg
add
fimull
pop
cs
add
inc
in
add
ds
negb
popf
cmp
pop
popl
daa
mov
ficompl
aad
add
jl
and
push
add
push
jle
xor
sub
mov
dec
cld
push
inc
daa
test
lea
pop
mov
ljmp
add
push
sub
rolb
inc
add
xor
and
sub
dec
lret
and
sub
aam
add
cmp
pusha
imul
pop
cmpsb
out
push
mov
xchg
xor
test
push
add
pop
xor
out
xor
es
inc
lds
add
jmp
adc
repnz
inc
or
sarl
xor
mov
mov
inc
and
mov
shlb
sub
popf
push
inc
inc
addb
sbb
mov
pop
add
or
sbb
sub
pushf
xor
and
jno
fdivrl
dec
lock
mov
mov
fdivr
adc
jns
xor
rorb
into
out
hlt
daa
xchg
mov
or
je
mov
pop
ja
add
mov
in
mov
mov
cs
mov
ss
mov
inc
sub
out
xchg
fisubs
out
call
mov
es
shrb
dec
add
adc
push
mov
lods
sbbb
das
sub
jns
ret
mov
sub
xor
or
pop
push
xor
add
pusha
jl
xchg
nop
in
dec
pop
das
aas
sbb
push
add
fcomps
sub
push
mov
insb
and
mov
push
popl
push
je
mov
in
test
fadd
imull
fisttpll
xchg
mov
xor
inc
pop
mov
jnp
or
pop
add
outsl
mov
cli
push
mov
aad
ret
xchg
test
xor
cli
pushf
dec
add
and
imul
mov
in
cwtl
jae
inc
sub
and
das
sbb
inc
dec
je
jbe
cmp
xlat
clc
add
push
dec
mov
repnz
enter
out
int3
cld
add
dec
xchg
dec
adcb
lcall
sbb
xor
subl
bound
aas
add
mov
loop
inc
cmc
sbb
mov
sbb
mov
mov
fnstsw
mov
pop
xchg
mov
mov
push
mov
or
xchg
mov
add
inc
mov
or
icebp
adc
xor
sbb
flds
aas
mov
rorl
cwtl
fsubrs
dec
mov
cld
repnz
cwtl
call
adc
xor
mov
iret
or
push
int3
xor
inc
pop
nop
aam
mov
cmpsl
in
add
adc
xchg
sub
mov
add
sbb
test
xor
mov
inc
add
data16
or
sbb
add
cltd
inc
enter
push
push
mov
dec
mov
cld
pop
dec
xor
scas
stos
adc
int3
dec
dec
cld
into
or
xchg
push
cwtl
test
popf
add
je
add
inc
pop
and
add
mov
push
mov
inc
pop
push
flds
sahf
lahf
scas
sub
sub
mov
in
lret
mov
mov
cwtl
repnz
outsl
add
orl
repz
add
push
outsl
add
lods
push
xchg
mov
xchg
insl
dec
lock
add
scas
add
pop
fnstcw
cs
mov
pop
lods
repnz
enter
aam
xor
popa
rcr
pop
add
jae
ja
sbb
imul
mov
shrb
setae
pop
jecxz
add
sbb
enter
push
xchg
inc
sbb
adc
sbb
inc
sub
xchg
cli
jbe
pop
cmpsb
mov
sbb
aaa
add
ror
ret
ja
add
pop
enter
loope
or
pop
adc
in
xchg
cmp
sub
sahf
jge
push
jp
aam
or
repnz
shll
xchg
andb
jae
fldt
fbld
or
lea
mov
stos
push
int
js
push
jae
xchg
add
es
mov
cmpl
jb
add
rcrb
jecxz
sub
loope
das
inc
dec
adc
add
or
aam
inc
filds
xor
add
aam
pop
das
bound
xchg
or
xchg
xor
and
pop
add
fsub
outsb
add
jo
dec
adc
hlt
mov
out
or
loopne
sbb
xor
dec
or
fisttps
or
mov
mov
dec
repnz
in
popa
jne
pop
sub
mov
or
aam
mov
mov
je
mov
xchg
xchg
iret
js
sbb
aam
lcall
in
jae
leave
xor
ds
int3
xchg
sub
loopne
fcoml
fdivrs
sbb
loopne
outsl
out
dec
mov
xor
pop
mov
pop
jl
int
fwait
jle
js
aaa
dec
pop
jb
jbe
fcom
lds
jbe
pop
sbb
pop
xchg
fsubp
sbb
sbb
mov
sub
xchg
out
pop
sbb
mov
adc
jg
mov
mov
loope
cmp
add
cltd
sbb
jmp
std
sub
inc
adc
jno
pop
push
mov
cmp
lock
ret
movsb
mov
add
test
inc
pop
call
je
jecxz
out
xchg
pop
test
and
mov
pand
sbbb
hlt
jbe
add
inc
cmp
xor
push
fsubs
leave
jp
xchg
add
sub
cmpl
adc
cmp
jno
add
or
sbb
bound
inc
pop
scas
mov
rorb
pushf
std
js
add
jbe
sahf
movsl
push
mov
ret
xor
enter
xchg
dec
mov
lcall
pop
xor
sbb
addb
stc
aam
pop
add
lods
test
mov
cmp
adc
popa
mov
xor
imul
mov
mov
fmuls
mov
pop
popl
xchg
push
popf
fwait
stos
adc
add
lea
mov
mov
jns
seto
cmpb
dec
sbb
pop
xchg
mov
aam
cltd
and
adc
cld
add
pop
cmp
in
jp
or
mov
or
dec
sub
clc
inc
or
add
ds
add
xchg
mov
xchg
xchg
ret
loopne
cmp
insl
iret
fbstp
mov
adc
pusha
pusha
es
fidivs
lods
enter
out
test
pop
sahf
call
mov
popa
mov
mov
pop
inc
movb
push
xor
call
lock
jg
adc
pop
cmp
mov
aas
xor
dec
mov
and
inc
mov
mov
mov
xchg
fcoml
mov
aas
in
cltd
add
mov
add
imull
and
neg
cmp
mov
ds
js
or
aas
xchg
js
add
addr16
jno
push
std
xchg
out
add
cs
dec
fdivl
sub
ss
std
or
push
sub
mov
int
mov
add
andb
and
shl
shlb
inc
rcrl
mov
or
dec
jmp
adc
sbb
xor
aad
mov
hlt
int3
add
pop
mov
and
pop
test
jp
and
pop
cmp
fs
rcll
ss
inc
push
cmp
inc
push
aaa
pop
mov
mov
sbbl
xlat
push
mov
rcrl
pop
movb
sbb
cmp
fsubl
arpl
loop
cmp
add
es
add
cli
cmp
sub
mov
push
and
cltd
js
jnp
add
loope
adc
pop
lret
cmp
push
ds
je
nop
sub
rorb
mov
and
ja
push
pop
dec
fsts
lcall
jle
cmp
mov
clc
test
sub
shll
and
push
loope
loop
adc
inc
push
jo
xchg
dec
or
out
mov
jo
mov
adc
lahf
push
fsubp
pop
ljmp
xchg
xor
jo
add
jb
sub
insl
loopne
mov
xchg
int
mov
mov
dec
add
xor
shll
sbb
or
daa
sbb
mov
push
add
inc
iret
jae
das
xchg
xlat
adc
xor
cmc
cli
xor
cmp
or
xchg
rolb
add
mov
jmp
mov
mov
fdivs
pop
adc
xorl
dec
ja
add
sub
xchg
inc
enter
iret
and
mov
add
pop
or
xor
sub
pop
dec
ret
lea
or
cmp
sub
add
inc
lock
idivb
sti
mov
lret
lods
ss
xchg
pop
xchg
inc
icebp
outsb
mov
push
adc
inc
jmp
ret
js
add
dec
xchg
adc
dec
and
adc
xor
out
outsb
jnp
sub
dec
movb
inc
pop
dec
and
dec
jecxz
shl
lret
das
enter
xchg
pop
xchg
cmp
cmc
add
test
dec
sbb
xchg
out
fisubrl
xchg
enter
sbb
dec
sub
push
ds
cmp
add
inc
push
mov
mov
sub
flds
inc
or
adc
xor
in
cwtl
or
xchg
dec
add
int3
dec
xor
shlb
adc
xor
clc
adc
loop
add
insl
sub
daa
push
loopne
xchg
in
mov
ds
xor
stos
enter
repz
call
scas
jae
push
ror
fmull
gs
add
into
xchg
jbe
addl
negl
loopne
test
adc
xchg
xor
cs
ss
add
aaa
inc
and
add
and
mov
mov
adc
mov
daa
xorb
adc
pushf
xchg
adc
adc
insl
imul
xor
xor
mov
add
pop
jp
ret
push
add
fnsave
add
les
xchg
and
push
xchg
shll
and
bsf
and
addb
or
mov
sbb
loopne
push
add
shr
outsb
and
rorl
push
clc
daa
nop
mov
je
cmpsl
push
xor
mov
out
rorb
or
jl
pop
fists
clc
bound
jns
out
xor
dec
mov
lret
cli
imul
das
inc
push
pop
shlb
iret
fcompl
fildl
cmp
adc
push
andl
stos
call
outsl
outsl
cwtl
or
outsl
mov
call
andb
inc
and
repnz
inc
aas
push
unpcklps
scas
repnz
outsb
in
cs
pop
and
fnstsw
sub
data16
mov
xor
xchg
cs
mov
xchg
orl
jo
xlat
mov
lret
push
push
inc
andb
pop
and
shrb
push
cli
sarb
xor
or
or
push
cmp
dec
xchg
push
mov
add
push
push
or
pop
sub
sub
into
nop
jl
les
push
mov
push
pop
add
cmovo
loope
fnstsw
add
cmpsb
adcb
and
xchg
xchg
mov
popa
xchg
push
push
test
sbb
mov
scas
stc
pop
pop
lds
push
notb
adc
sub
xchg
imul
push
ret
jns
icebp
xchg
in
xor
push
push
pop
pop
fwait
loopne
sub
and
push
mov
mov
add
clc
mov
adc
bound
int3
or
dec
adcb
sub
mov
push
nop
push
sub
xchg
enter
cld
mov
cmp
mov
inc
repnz
jne
mov
xchg
xor
jmp
xchg
adc
lret
cmpsb
les
pop
loop
mulb
or
aas
mov
dec
dec
inc
jl
loopne
xor
inc
sub
pop
les
xchg
stos
and
lret
sbb
jo
xchg
lahf
loopne
xchg
cmp
out
add
mov
cld
or
inc
push
addb
adc
pop
xor
mov
inc
xor
sub
and
fidivrl
mov
xor
mov
dec
inc
push
jne
pop
cmpsl
mov
pop
popf
lds
and
test
jnp
dec
mov
cmp
mov
sub
cmc
fdivp
lret
rcrb
dec
mov
aad
add
ljmp
mov
in
jne
add
daa
out
jecxz
push
mov
int3
adc
or
hlt
inc
xor
add
adc
adc
in
cld
xchg
inc
add
lcall
cmp
aaa
cltd
push
pop
fildl
pusha
imul
and
pop
mov
pop
mov
adc
push
jb
jo
inc
xchg
push
inc
add
mov
out
add
and
jl
inc
aaa
fmulp
add
stos
pop
push
adc
mov
xor
sbb
adc
or
mov
xchg
lret
fsubs
sub
add
sbbl
cmp
inc
call
push
call
add
das
adcb
mov
add
fwait
movsb
daa
push
mov
and
lahf
sub
cwtl
sbb
and
and
add
lret
inc
aaa
inc
inc
stos
jp
sub
scas
jl
movsb
adc
push
xor
icebp
outsb
mov
inc
in
and
push
es
ja
xlat
test
lret
push
add
jno
pop
js
lock
jp
out
fs
xlat
pusha
aad
out
xor
sbb
cmp
mov
push
jp
mov
in
fisttpl
dec
sbb
sbb
xor
subl
std
xor
push
or
or
xlat
adc
xchg
fcmovu
outsb
stc
sub
jl
sbb
sub
dec
lds
push
ja
jp
clc
sbb
jo
push
js
push
add
push
out
addb
dec
xlat
jl
jo
add
in
add
fidivl
mov
push
push
dec
lds
inc
mov
loope
nop
cmpsl
out
cmc
ljmp
loopne
mov
sub
fs
lret
add
jle
pusha
stos
mul
push
ds
adc
fcomp
repnz
push
dec
jl
call
je
fadds
push
push
add
mov
adc
pop
dec
push
jns
sarl
pop
adc
orb
iret
pop
dec
or
les
sbb
jl
repnz
into
and
sbb
orb
loopne
jb
mov
mov
dec
inc
lahf
push
sub
out
or
add
push
rclb
cwtl
iret
add
dec
repz
ja
add
sysenter
shlb
and
dec
add
std
mov
mov
outsb
sub
faddl
cmc
aad
in
and
bound
xor
push
jecxz
mov
inc
jb
ljmp
add
mov
or
jns
les
pusha
icebp
inc
outsb
scas
jo
les
cmp
add
testb
jge
adc
add
cmpsb
aad
sbb
lret
lret
push
pop
mov
ja
inc
mov
jb
add
pop
xchg
sbb
arpl
pop
hlt
cmp
inc
inc
sub
aad
jb
xor
int3
xchg
int
add
pop
xchg
adcl
pop
and
dec
xor
das
push
sub
int3
add
adc
dec
inc
test
xchg
pop
jbe
jmp
cwtl
push
xor
ja
fldenv
fistps
out
fcmovnu
xchg
and
sub
mov
aas
aad
sub
les
sub
mov
popa
mov
xor
adc
mov
push
push
mov
jns
clc
fisttps
cmc
adc
dec
sub
push
adc
push
cmp
loopne
lock
dec
std
nop
sbb
jns
add
dec
fsubs
xor
mov
add
pop
xchg
xchg
sbb
repnz
aaa
dec
cmp
xchg
test
or
cmp
pop
mov
push
or
jb
jno
cs
mov
sbb
add
jle
push
pushf
pusha
dec
lret
aaa
adc
jl
pusha
and
sub
leave
insl
push
cmp
stc
cmp
inc
inc
mov
sub
out
xlat
fiadds
cmp
movsl
mov
test
pop
mov
pop
xor
push
cltd
pop
sbb
push
dec
out
or
add
mov
sbb
xlat
shll
mov
or
xchg
flds
or
cmp
push
rcll
loope
dec
in
or
or
or
js
xor
inc
shrb
mov
sarb
mov
cs
mov
mov
add
cld
je
add
fwait
dec
fdivrl
mov
mov
test
inc
out
sarb
or
lea
fcompl
add
inc
repz
jp
and
and
jae
sub
dec
push
jb
std
push
push
pop
in
or
adc
out
loope
adc
push
pop
leave
add
mov
fcmovnb
dec
out
xchg
sub
fmull
dec
inc
in
mov
test
leave
loopne
dec
xor
jne
movsb
lods
xorl
xor
and
add
loopne
cs
and
adc
add
inc
aam
out
pop
sbb
rorb
adc
xchg
rorb
fs
cmpsl
and
pop
and
xchg
cmpsl
dec
dec
mov
add
mov
ja
cmpsb
dec
sub
loopne
pop
or
mov
fists
repz
in
or
lds
add
test
push
std
fldenv
fisubs
pop
orb
jle
mov
add
mov
inc
add
inc
mov
imull
cmc
outsl
test
andl
fs
lret
and
adc
add
addl
cli
ds
sub
or
pop
add
mov
out
into
cwtl
lret
dec
mov
fcoms
cltd
add
dec
mov
pusha
out
and
push
pop
push
fwait
call
add
xor
xchg
push
subb
mov
inc
push
cmp
add
jo
adc
xchg
mov
cld
imul
inc
xchg
and
push
dec
ja
xchg
std
sbb
mov
sub
mov
insb
inc
cmc
push
pop
jno
pop
jle
nop
je
ja
jp
dec
std
adc
mov
lea
nop
jle
push
add
jbe
fidivs
clc
loope
jae
add
and
test
jbe
dec
dec
je
orl
in
inc
roll
mov
mov
add
or
outsl
lock
jb
and
push
enter
add
data16
adcb
dec
ret
inc
sub
int3
mov
xlat
xor
dec
and
popf
sbb
sbb
sub
loopne
loop
jo
pop
cmp
add
add
pusha
sbb
inc
hlt
mov
push
test
scas
inc
mov
adc
and
scas
int3
pop
or
loopne
dec
aas
leave
pop
xor
fnstsw
idiv
jl
lock
or
into
rcrl
pop
dec
cmc
xor
adc
scas
jb
or
pusha
jge
and
add
dec
sbbb
jp
dec
and
mov
shlb
adc
and
loope
mov
and
dec
mov
cmp
xor
inc
xor
add
loope
mov
sub
sti
sbb
dec
pop
mov
outsl
add
imul
dec
push
mov
inc
pop
mov
cld
mov
xchg
fstpt
and
rcr
adc
stos
mov
in
cmp
pop
pop
add
sarb
outsb
mov
loop
push
cmpsb
int3
call
and
fnsetpm(287
lods
xchg
loopne
add
jg
int3
fadds
call
or
in
lods
scas
jl
dec
adc
in
mov
fucompp
sarb
and
add
xor
or
inc
stos
loopne
hlt
inc
dec
out
fildl
sbb
adc
mov
sub
rcrb
ret
loopne
jl
or
addr16
hlt
xchg
pusha
sub
jg
jp
test
sbb
call
cmp
outsl
fisubl
add
xor
sbb
xor
scas
cs
or
orb
int3
jbe
or
lock
repz
call
pop
aad
and
cmc
jecxz
ljmp
sbb
jnp
pusha
add
xchg
sti
add
setl
jae
add
mov
pushf
xor
add
fcmovnb
adc
dec
scas
inc
dec
add
into
jno
inc
and
fldl
sub
fistpl
add
jle
inc
push
mov
add
and
dec
dec
push
lods
dec
inc
adcb
fwait
adc
cs
add
imulb
pop
add
enter
icebp
sbb
sub
add
or
pop
inc
fbstp
cltd
xlat
mov
or
icebp
sub
add
jp
sub
popa
mov
jne
test
xchg
ds
sub
inc
ljmp
test
jp
and
loop
adc
cli
inc
xor
imul
aas
ret
xor
jns
sbbb
ja
mov
lods
outsl
xchg
inc
push
sub
xchg
add
mov
sub
push
or
jae
rcrb
in
push
std
push
and
sub
dec
addb
ja
xlat
mov
rclb
and
sbb
jns
orl
adc
add
add
xchg
gs
jns
add
and
mov
dec
les
add
xchg
jle,pn
aas
clc
aaa
inc
cmpsb
xchg
rolb
int3
push
dec
jno
lods
js
add
inc
xor
jae
out
or
popf
inc
ret
lock
out
cmp
mov
mov
sbb
mov
or
lods
jb
movsb
movsl
mov
loopne
xchg
daa
fsubs
sbb
jo
mov
add
loope
lret
inc
sub
pop
cmp
cmpsb
lret
pop
cmp
mov
add
pop
and
mov
hlt
fsubl
rorl
lea
xchg
aas
xlat
and
stc
adc
cmpsl
adc
imul
mov
or
std
subl
icebp
das
jne
mov
add
and
or
dec
outsb
xor
popa
add
andb
clc
add
mov
cli
sbb
mov
or
test
jnp
cmp
xor
cmpb
mov
xor
mov
sbb
cmp
pop
add
aad
pop
clc
add
lods
sbbb
push
jb
xlat
mov
dec
lock
sub
or
push
dec
pop
jne
sub
add
popf
gs
call
xor
mov
in
xchg
es
jne
and
xor
inc
mov
add
xor
rol
dec
movb
outsl
mov
push
or
dec
mov
leave
dec
out
inc
add
pop
push
inc
repz
add
pop
ret
mov
loopne
xor
test
imul
xor
jmp
incl
push
fldcw
ds
mov
push
sbb
add
pop
je
dec
sbb
push
add
pop
and
push
shlb
pop
pusha
adc
cld
sahf
add
dec
repnz
pop
lahf
jo
rol
mov
jp
imul
lds
add
movsb
roll
jp
mov
fidivrs
aas
sbb
popa
fimull
paddusw
je
inc
jne
xchg
out
mov
add
ret
ja
push
popa
stos
mull
rorb
adc
stos
rcr
jmp
lods
call
push
mov
fisttps
push
mov
mov
add
adc
push
out
jb
mov
dec
and
dec
push
pop
mov
iret
adc
outsl
shrl
sbb
xlat
out
jmp
mov
sarb
loopne
in
xchg
lea
inc
adc
mov
add
fcmovnu
xor
jno
inc
or
add
mov
mov
test
ret
pop
int3
cmp
lods
and
fistl
sbb
inc
out
pusha
es
mov
pop
jb
test
sub
adc
ret
cwtl
adc
jecxz
jno
or
bound
movsl
clc
xor
test
mov
xlat
jg
mov
dec
or
cmp
movsb
js
add
push
pop
mov
mov
mov
dec
shlb
sub
and
add
ret
jne
pop
mov
fiadds
dec
mov
pop
insb
add
daa
add
in
sbbb
pusha
dec
add
js
loopne
pop
adc
sub
sbb
sar
mov
mov
loope
ja
lret
fdivrp
enter
mov
xchg
imul
clc
pusha
dec
cmp
mov
loopne
adc
nop
pusha
adc
les
addl
incl
jns
jg
leave
shl
int3
or
dec
addl
call
movsb
or
ffree
xchg
push
push
mov
cltd
sub
pop
add
aad
dec
adc
dec
sbb
xor
sbb
mov
adcb
inc
loopne
push
add
inc
mov
jbe
fadd
fninit
std
out
xor
filds
jo
push
mov
cmp
repnz
out
pop
or
shrl
js
mov
mov
jl
les
les
dec
dec
aas
dec
sbb
das
in
add
push
add
dec
add
nop
loopne
dec
add
sbb
dec
add
scas
sbb
cld
out
or
je
stos
add
jnp
xor
add
adc
add
sarb
loope
xchg
push
cwtl
fistpl
inc
mov
inc
mov
test
jo
and
and
stos
fcomps
and
mov
add
lds
adc
and
add
jp
loope
mov
imul
sub
test
std
sub
push
ret
cld
ds
subb
and
fcomps
mov
orb
push
jo
aaa
pop
push
add
jl
xchg
fldcw
mov
ljmp
jns
data16
inc
int
jae
inc
or
icebp
push
sub
rcrl
cltd
test
push
adc
cmp
loope
add
popa
loopne
adc
sub
shrb
mov
and
add
out
fisttpl
and
adc
test
je
mov
pop
dec
add
lods
fs
and
mov
test
dec
and
dec
dec
dec
cmp
add
inc
jp
dec
pop
shrb
aam
sbb
pop
je
shrb
pop
dec
jge
fmull
pusha
add
and
add
xchg
int
rcrb
cmp
in
and
dec
les
lods
mov
and
outsl
scas
add
js
push
adc
jecxz
lret
xchg
adc
add
ret
add
dec
mov
xor
pop
fs
mov
lock
pop
push
lds
aad
or
add
xchg
into
mov
mov
ret
dec
adc
loope
and
dec
and
pop
call
fmuls
inc
mov
scas
cmp
mov
jecxz
fbld
outsl
xchg
lcall
mov
out
clc
sbb
loopne
in
adc
sbb
mov
xchg
mov
outsb
icebp
xchg
jg
dec
and
dec
aaa
mov
and
push
and
pop
pop
pop
xchg
dec
dec
jg
sbb
cmp
inc
mov
test
rclb
in
imul
dec
adc
pop
hlt
rcrb
ss
pop
sub
sbb
mov
insl
cmp
outsl
ret
xor
push
popa
std
push
xor
mov
fcmovu
mov
repnz
cmpsl
push
shlb
adc
xor
add
jecxz
fistps
shl
iret
pop
dec
push
clc
jne
sbb
jl
lock
xchg
and
and
daa
mov
mov
push
jmp
pop
hlt
insb
ret
jbe
fisttpl
cld
adc
mov
loop
mov
inc
push
dec
jnp
daa
fbstp
lock
test
jb
sbb
pop
mov
or
lock
std
jp
and
add
loope
pop
rol
jo
push
or
lahf
stc
lea
adc
jae
cli
arpl
dec
inc
mov
add
rcrl
and
inc
in
push
add
imul
lret
jge
cmpsb
mov
loop
add
test
inc
fnstsw
jge
add
jnp
sub
xorb
rclb
stos
xor
cmp
loop
in
clc
push
mov
add
mov
shl
dec
les
popf
rolb
adc
pop
add
cmc
in
xor
loop
pop
push
mov
xchg
jnp
ja
cs
and
mov
add
add
jo
pop
jp
add
mov
cli
dec
out
add
mov
sub
loope
stc
jge
add
es
mov
popf
decb
in
mov
js
mov
in
push
jno
jmp
hlt
mov
je
call
xor
pop
add
xchg
mov
jo
imul
and
mov
lods
add
mov
ds
add
jbe
mov
mov
sbb
dec
xor
add
mov
dec
rclb
jns
jo
dec
jae
call
xchg
sub
push
add
cmpsb
jnp
mov
mov
les
mov
test
xchg
and
aas
mov
inc
cmpsl
and
cmp
push
fiaddl
in
dec
dec
loopne
push
mov
add
jb
std
mov
cltd
div
rcrb
jns
sub
pop
call
or
push
std
push
push
dec
dec
roll
mov
shl
and
movsb
nop
pop
add
mov
add
dec
ret
adc
mov
push
push
outsl
lea
pop
mov
jle
icebp
outsb
pop
lds
or
mov
aas
xchg
loopne
clc
sbb
or
call
nop
ja
xchg
scas
sbb
sub
xor
sbb
mov
mov
add
lret
scas
push
fidivrs
and
add
xlat
mov
dec
xchg
fdivrs
mov
pop
out
cwtl
nop
rorb
mov
add
push
dec
std
sbb
cltd
fstpt
and
sbb
ds
inc
leave
sbb
ss
xchg
xor
arpl
lahf
test
lock
and
add
push
cld
rcrb
mov
and
test
cmp
jecxz
in
stos
testl
loopne
movsb
mov
test
cld
add
sbb
outsb
inc
sub
pop
mov
je
scas
call
or
add
cmp
adc
xorb
mov
fsubl
and
add
cmp
adc
mov
or
rcrl
test
push
fisttpll
mov
jecxz
jnp
and
ljmp
sub
adc
aad
add
jb
xchg
xchg
into
nop
pop
or
mov
out
inc
out
inc
in
add
seto
and
mov
aam
arpl
in
mov
dec
dec
cwtl
xor
cmp
mov
push
loope
cmp
mov
fcmovbe
sub
outsl
jb
movsb
sqrtps
mov
pop
adc
fiaddl
dec
sub
fdivrl
inc
mov
sarl
movl
jp,pt
add
and
sub
rorb
std
stos
push
aaa
push
aas
xor
ret
or
js
dec
in
xchg
in
rcrb
mov
adc
es
cmp
jno
shl
adc
sub
add
es
neg
xor
and
jns
inc
cld
cld
sub
lock
scas
or
mov
cwtl
mov
hlt
jecxz
fmull
mov
push
loopne
in
movq
push
dec
int3
and
or
dec
mov
inc
sbb
dec
mov
xor
xchg
mov
loopne
or
sub
and
and
mov
jb
movsb
mov
rolb
mov
sbb
xchg
nop
lret
add
dec
sub
push
mov
jmp
int
xor
pop
add
mov
lea
push
das
and
das
add
jmp
jno
and
mov
xchg
out
in
and
sub
sahf
push
or
orb
lock
jecxz
inc
mov
xchg
xor
or
mov
out
inc
stos
mov
dec
cmp
or
adc
sbb
roll
push
cld
dec
inc
jl
jns
ja
ud2
cmpsb
pop
int
push
out
push
push
sbb
rorb
mov
or
cli
or
or
push
push
add
in
sub
dec
in
mov
into
push
mov
adc
add
js
mov
rolb
mov
mov
pop
test
test
ret
pop
clc
popa
ret
jae
rcl
sbb
xor
sub
and
setnp
ljmp
js
xlat
loop
clc
fists
nop
cmp
xchg
imul
push
dec
sbb
xchg
shrb
mov
insb
leave
or
ret
or
cmp
movsl
addb
scas
push
add
xchg
scas
sbb
sub
and
lds
add
mov
push
out
shl
fwait
out
dec
cltd
xor
aad
aam
insb
inc
and
mov
jb
fidivl
push
lods
sahf
sbb
loop
add
push
adc
test
call
pop
adc
psubusw
adc
ljmp
in
test
rclb
pop
mov
shll
add
jbe
clc
pop
enter
dec
cwtl
leave
mov
jl
mov
push
xlat
add
pop
jb
scas
js
jo
add
sbb
jl
out
pop
sub
outsl
mov
jmp
jp
add
cmp
or
add
mov
xor
add
xor
cmc
dec
push
nop
sbb
and
jp
add
das
icebp
dec
cmp
sub
inc
nop
or
jg
adc
or
loopne
lds
sbb
es
cmp
jge
jp
push
bound
testl
imulb
gs
fsubrs
xlat
fcom
add
ret
nop
cld
inc
jmp
pop
std
in
sub
and
mov
push
movsl
add
adcb
popa
mov
xchg
mov
or
js
iret
mov
add
in
test
cwtl
xor
fcmovnu
pop
fisubrs
pop
push
jmp
imul
add
xchg
popf
cmp
cmp
xchg
fwait
jb
mov
nop
je
dec
aas
repz
pop
xor
xchg
mov
jns
mov
xor
or
int3
loop
inc
es
pushf
pop
aad
add
mov
aad
push
xlat
pop
push
enter
dec
sbb
ds
jb
pop
daa
rcr
inc
sub
inc
int
xchg
or
or
int3
inc
cmc
or
mov
adc
pop
hlt
cwtl
cmp
loope
movb
sub
jbe
inc
mov
cmp
mov
jo
cmp
sbb
daa
push
rolb
mov
mov
mov
push
add
push
pushf
mov
inc
cmp
cmpb
sub
out
mov
push
and
or
or
dec
fs
xlat
ljmp
add
lea
das
xorl
in
fiaddl
outsl
popl
popa
into
jle
test
adc
std
push
mov
lds
push
adc
idivb
push
orl
mov
in
add
xchg
popa
jae
fsubs
cmp
mov
and
std
sbb
fnsetpm(287
xchg
xchg
sbb
loopne
mov
push
or
cmpl
inc
ja
enter
jl
rolb
jecxz
push
push
adc
mov
ja
dec
pushf
ret
inc
cld
mov
test
stos
daa
mov
and
test
mov
jge
jo
cmp
pop
lret
or
dec
mov
push
in
pusha
pop
dec
dec
addl
mov
arpl
add
dec
les
or
add
dec
hlt
rcr
mov
fsubrl
inc
add
lock
sub
lods
fcompl
test
xchg
gs
into
push
pushf
test
pop
adc
pop
outsb
push
lock
mov
loope
xchg
pop
mov
pop
dec
pop
je
jo
sbb
pop
cmp
dec
jp
pop
adc
loop
mov
sub
out
xchg
add
lods
push
enter
out
or
jp
push
mov
inc
or
pop
daa
sub
nop
or
pop
iret
xchg
add
mov
sub
push
std
mov
add
xor
out
add
push
adc
in
jge,pn
or
int3
rorb
jp
push
test
mov
in
lods
subb
mov
push
fdivs
out
jbe
and
dec
pop
pop
aad
push
dec
and
adc
push
xchg
mov
stos
sub
nop
sbb
lahf
add
mov
sbb
adc
shr
pop
cmpsb
jle
sub
inc
xchg
ja
cwtl
jo
rorb
adc
jp
jae
subb
jno
shlb
push
xchg
jl
inc
ja
fistps
lea
fcmovu
xor
jl
add
cmpsl
notl
mov
add
test
xor
rolb
andb
test
cmc
inc
jo
inc
add
les
orb
or
aas
shll
xor
add
push
mov
xor
dec
xor
decb
sbb
add
push
insb
cltd
aam
das
xlat
and
push
pop
xchg
add
push
aam
push
fcmovnu
cli
xor
mov
dec
test
sub
add
xchg
pop
or
fcmovnu
jb
pop
nop
add
scas
adc
push
neg
rcrb
push
add
icebp
sbb
loopne
dec
jne
dec
loope
hlt
jle
inc
jl
jle
cwtl
mov
andb
lods
jge
cmp
test
pop
movsl
add
adc
and
sub
jp
les
loop
push
movsb
mov
add
sti
inc
sub
push
adc
imul
mov
or
sbb
movsb
and
lock
xor
fildl
pop
dec
and
call
and
add
xor
adc
push
push
lret
fiaddl
testl
or
push
dec
aad
adc
xchg
add
mov
lret
sbb
xchg
in
scas
sar
xchg
add
jno
movsb
les
nop
inc
cmpsl
call
or
jge
lock
fdivr
inc
push
es
dec
js
xor
pop
arpl
nop
sbbb
pop
jmp
jae
jecxz
insl
mov
faddl
lock
cmpsl
mov
add
mov
testb
lods
inc
push
pop
or
and
sbb
add
sbb
fbstp
or
inc
push
sbb
insb
stc
dec
sti
frstor
shlb
in
mov
mov
push
dec
push
dec
fcmovnbe
jl
addl
shrl
jnp
xchg
xor
jecxz
lock
push
mov
sub
xorb
sub
pop
arpl
add
into
or
add
loope
adc
and
pop
push
out
xor
test
and
ret
jb
xchg
cmpl
sar
inc
sbbb
rclb
dec
dec
pop
inc
adc
faddl
shrl
dec
or
hlt
adcl
out
pop
ja
jno
mov
sub
or
xor
in
test
lea
jns
call
hlt
mov
loopne
repnz
add
xchg
les
dec
sub
push
add
das
and
aas
jge
add
lret
fbstp
lods
pop
push
jl,pt
push
sbb
and
and
jae
pop
jb
push
sub
shlb
repz
push
clc
testl
dec
sub
inc
jo
fiaddl
and
lods
cmp
mov
add
and
and
mov
rorb
aas
test
das
xor
out
pop
sbb
mov
scas
jne
rorl
lahf
bound
dec
add
xchg
dec
mov
lods
pop
subl
jbe
sti
add
arpl
jmp
shll
sbb
xchg
mov
fpatan
andb
push
cmp
das
push
shlb
shlb
adc
jb
xchg
lods
adcb
mov
pop
inc
cwtl
inc
in
cs
icebp
fs
cmp
push
dec
or
dec
inc
or
xchg
jo
push
sbb
hlt
fcoml
add
int3
testl
dec
test
scas
mov
push
jns
push
fwait
mov
or
jo
ret
sarb
cmp
dec
test
arpl
nop
filds
loope
push
xor
push
rcrb
cmc
dec
push
inc
dec
mov
fyl2xp1
add
andl
add
jns
jno
fildll
add
adc
mov
add
sbb
inc
mov
mov
imul
mov
pusha
sbb
adc
in
add
pushf
jae
mov
or
mov
cvttps2pi
sbb
iret
add
je
aas
add
push
icebp
mov
addr16
dec
aam
cltd
mov
sbb
add
sub
test
fs
push
sbb
scas
dec
outsl
add
inc
xor
pop
mov
mov
ljmp
push
inc
add
std
push
jle
sbb
daa
addb
adcb
xor
sub
pop
movsb
add
add
sahf
push
leave
xor
outsl
mov
xchg
inc
or
sub
mov
xchg
ss
lds
xchg
shl
invd
int
mov
aam
xchg
add
inc
mov
outsb
nop
jg
fiaddl
pop
inc
in
and
xchg
xchg
enter
in
out
sub
xchg
enter
lret
adc
cwtl
rcrl
add
rcr
in
int3
call
fisubl
pusha
imul
add
scas
and
sub
pop
arpl
ror
jbe
cmp
pop
add
out
fmull
jl
push
test
mov
test
add
gs
loope
hlt
paddsw
xchg
ror
inc
push
fcoml
adc
and
cld
cmc
cmpb
jbe
mov
mov
js
xchg
loop
pop
or
jo
ja
xchg
adc
icebp
inc
in
pop
cwtl
adc
bound
mov
jbe
lock
or
inc
push
fsub
xor
loop
int
mov
or
stos
or
mov
pop
in
enter
jb
rolb
adc
daa
inc
shrb
inc
jnp
add
inc
sub
add
mov
add
inc
dec
xor
sub
add
lret
scas
push
add
adc
add
mov
xchg
xor
dec
add
data16
daa
mov
movsb
int3
add
cld
rcr
outsb
cmpb
dec
add
gs
hlt
rolb
fildl
sysret
lcall
pop
outsl
iret
sbb
add
cmp
sbb
int
dec
icebp
adc
fsubl
andb
mov
dec
mov
daa
push
add
mov
in
int3
testb
cs
mov
mov
or
add
sbb
pop
and
dec
daa
shl
mov
pop
xor
jae
mov
and
add
ret
dec
ret
int3
mov
js
lahf
dec
dec
add
xor
scas
push
lea
mov
dec
add
je
pop
sbb
fisubrs
mov
cld
add
pop
mov
movsl
fwait
add
and
std
pop
pusha
nop
jp
sub
pop
fnop
faddl
inc
sub
cmc
mov
inc
inc
push
lods
into
addl
push
xchg
sahf
sarb
loope
sub
ja
sbb
push
jp
pop
js
inc
ret
andl
sub
dec
or
mov
fwait
mov
fs
rolb
add
daa
es
pop
add
jge
add
loop
sbb
push
sub
ds
add
movsl
les
xor
icebp
clc
loopne
mov
js
or
mov
cltd
pop
cmp
loopne
bound
add
and
cmpsb
jp
dec
push
pop
pushf
and
pushf
jmp
mov
push
daa
aam
mov
push
push
adc
out
add
in
inc
hlt
std
add
testb
fldl
insl
push
jns
lret
std
cmp
sbb
inc
mov
add
ret
and
ret
push
scas
xchg
lock
js
pop
sub
add
cmpb
pop
aas
mov
add
jno
sub
icebp
int3
jns,pt
lods
add
dec
pop
or
mov
sub
jne
sbb
inc
hlt
js
dec
dec
dec
push
jle
arpl
inc
call
mulb
xchg
test
mull
add
rolb
jb
pusha
std
dec
dec
loop
andb
mov
jl
cmp
cld
cmp
pushl
pop
or
push
jae
xor
insb
out
sub
test
or
out
pop
cli
daa
pop
les
je
jno
push
fcmovnu
xor
jne
sub
cmpsl
in
stc
jnp
push
jo
mov
mov
loop
pop
aas
sub
jmp
cld
in
daa
add
push
fistl
andb
cmp
jne
sub
cmp
pop
or
cltd
cmp
adc
add
lret
scas
push
add
dec
add
mov
sbb
adc
jo
and
add
int
ret
shl
lret
or
pop
fs
xlat
movsb
add
cmp
add
dec
ret
mov
sub
testb
pop
inc
xor
mov
iret
and
loope
inc
nop
sub
push
movsb
mov
dec
jg
cmp
push
pop
jo
dec
sub
popf
movsl
push
xor
mov
xor
aad
xchg
paddsw
inc
xchg
add
cmc
dec
jae
scas
aam
sahf
inc
fcmovnu
faddl
push
outsl
mov
and
je
push
test
push
shll
pop
jmp
inc
shl
cmpsb
lea
lcall
jno
ja
xchg
sub
and
in
add
insb
cmpsb
push
pop
add
sbb
cld
add
mov
sbb
dec
inc
ja
inc
orb
inc
mov
sbb
and
or
test
fiaddl
test
xorb
popf
out
arpl
xchg
or
ficompl
out
cmp
mov
test
xor
jmp
or
sbb
sbb
dec
imul
push
cmpsb
add
sub
out
bnd
int3
mov
push
push
inc
mov
jecxz
add
push
ds
pop
mov
add
insl
mov
pusha
out
roll
dec
adc
fs
arpl
cmp
scas
cmpsb
call
add
aas
outsl
inc
mov
stos
test
ja
adc
repnz
add
in
lahf
add
and
and
add
and
add
add
pusha
mov
test
mov
sub
mov
sbb
mov
or
popa
jnp
push
xor
pop
popf
imul
and
or
adc
jne
add
rcl
xor
pushf
dec
mov
sti
jae,pt
sub
mov
sbb
insl
imul
cwtl
xor
jp
mov
sbb
inc
pop
lcall
mov
xchg
push
inc
jecxz
adc
jmp
and
sub
dec
jns
jg
mov
std
shlb
sbb
push
push
add
sbb
jp
outsl
imul
push
sbb
repz
popf
addr16
ror
les
clc
pop
sarb
pop
addb
jp
xchg
and
ds
loope
leave
cmpsb
mov
aam
sbb
cli
shl
jnp
add
aaa
xchg
loop
lods
punpckhdq
sub
in
sbb
jecxz
lock
ds
xchg
mov
inc
add
dec
xlat
mov
shlb
inc
jle
xor
jo
sbb
jnp
dec
cmp
cli
mov
and
sub
movsb
loop
aaa
loope
shlb
call
pop
cs
int3
cmp
xor
add
std
insb
ds
sub
dec
cli
call
mov
filds
pop
pop
sbbl
push
cmc
xchg
loopne
jmp
and
jmp
pusha
ror
inc
fisubrl
cmp
addl
jp
rclb
add
popf
loope
clc
mov
dec
xchg
or
sahf
dec
movsl
rorb
cmp
icebp
xor
arpl
scas
and
cmp
or
add
into
psrad
cmp
mov
push
sub
in
jl
add
mov
or
push
loope
fsub
pop
adc
pusha
sbb
mov
cmp
xlat
pop
jge
push
xchg
mov
or
dec
into
dec
mov
push
leave
add
pop
stos
xchg
fistpl
add
xor
mov
mov
xor
js
or
mov
sbb
mov
mov
jp
daa
stos
dec
add
inc
arpl
stc
cwtl
or
pop
add
inc
push
das
or
mov
pushf
not
push
jo
daa
xchg
cmp
jnp
add
add
inc
pop
dec
mov
add
xor
add
mov
push
pop
push
sub
jns
add
pop
or
dec
jnp
add
xor
mov
cltd
cmp
jmp
xchg
sbb
sbb
lahf
dec
cmp
pop
insb
paddd
xlat
mov
ret
push
inc
add
and
fldenv
sti
pop
sarb
add
pop
inc
insl
leave
pop
push
push
fldl
iret
xchg
cmp
ja
mov
inc
jmp
fcoms
les
outsl
pop
and
add
xchg
cmp
scas
jne
hlt
mov
push
out
lds
pop
ja
clc
jmp
xchg
cmp
and
jle
push
dec
or
cltd
sub
repz
enter
movsl
flds
repnz
pop
adcb
pop
scas
mov
add
xor
das
add
test
jno
mov
add
and
pop
scas
pusha
dec
jecxz
add
jbe
push
loopne
cs
mov
add
test
xchg
mov
xchg
mov
loop
dec
ds
push
or
mov
stos
mov
mov
enter
int3
or
lock
push
outsb
lods
sub
inc
push
mov
lock
emms
and
stc
pop
icebp
rol
sbb
mov
idivb
stos
mov
lds
imul
dec
jo
pop
push
mov
scas
in
mov
push
pop
les
mov
or
xchg
xchg
insl
inc
lea
xor
out
xchg
mov
and
test
mov
mov
add
and
add
test
add
hlt
mov
cmp
jae
xor
and
leave
mov
cmp
cwtl
mov
sbb
mov
es
sub
xor
pop
or
jno
lock
jb
dec
jmp
sti
push
jge
pop
xchg
push
scas
jae
in
mov
ror
jg
add
adc
add
xchg
add
xlat
clc
jl
add
and
inc
pop
pusha
push
call
xor
test
mov
pop
cli
cld
add
inc
or
roll
xor
push
mov
add
inc
jg
add
sub
les
outsl
aas
adc
jb
add
test
jnp
sti
sbb
in
pop
dec
jo
pop
push
shlb
out
int
push
loopne
add
add
mov
xchg
mov
ret
push
push
lea
in
adc
arpl
fucom
sbb
nop
pusha
mov
call
jge
pop
add
sti
or
adc
inc
sahf
add
shl
daa
out
mov
sub
add
aad
mov
add
or
sbb
inc
repz
cmpsb
add
or
push
cltd
fadds
outsl
xor
pop
sub
xchg
inc
mov
int
lock
hlt
sbb
mov
jmp
jns
mov
add
pop
je
mov
mov
xorl
add
mov
fcoml
repz
xor
cmp
or
jge
xchg
imul
jb
dec
out
daa
add
sub
mov
add
jl
sbb
sbb
push
pusha
insl
in
xchg
and
add
in
cmp
push
dec
xchg
aas
inc
or
pop
push
add
mov
push
add
push
pop
shrb
xchg
push
mov
cli
cmpsb
jp
mov
addb
aam
fldl
pop
mov
jno
add
cmpsb
arpl
add
cmc
pop
cmp
repnz
sub
add
adc
pop
or
mov
js
add
xchg
mov
add
cmpsb
push
and
loopne
stos
aas
lret
in
add
test
jmp
push
rorl
movsb
sbb
sub
add
sub
cmp
int3
pop
into
add
nop
lcall
dec
sub
adc
fs
sub
out
repz
sbb
push
lock
push
inc
mov
sbb
push
in
add
xlat
xchg
mov
in
or
cld
in
sbb
das
cs
faddl
hlt
fldl
call
enter
push
jne
add
add
sbb
add
into
loopne
push
ret
mov
mov
pop
pop
sub
push
pop
or
add
cmp
movsb
add
mov
popf
ss
xor
jl
mov
int
and
fldt
fldcw
fs
lds
insl
nop
es
mov
pusha
or
add
cltd
inc
jo
sar
cld
push
sbb
add
imul
hlt
or
add
add
jecxz
push
add
mov
int
cld
mov
adc
arpl
or
inc
inc
ss
jnp
sbb
dec
mov
jae
add
xchg
inc
pop
jmp
xor
cld
add
pop
mov
scas
fisttpl
pusha
lds
not
mov
out
sub
sbb
adc
sbb
popf
sbb
hlt
mov
std
rorb
in
dec
pusha
rcrl
sub
fwait
outsl
icebp
cmc
add
lea
lcall
push
push
lret
lock
add
mov
cwtl
add
push
iret
in
sbb
call
aam
sbb
and
sbb
loopne
mov
lret
mov
push
sub
mov
xchg
jbe
add
push
and
pop
cltd
mov
sbb
sbb
hlt
inc
add
sbb
cmpsb
add
or
inc
push
cmpsl
xor
push
or
xchg
es
pop
or
adc
test
xlat
xor
or
les
mov
clc
aam
mov
mov
call
pushf
pusha
cs
inc
fwait
push
jnp
add
jno
jmp
ret
paddd
xchg
ffree
test
insb
mov
mov
pop
xchg
mov
sbb
jle
addr16
and
sbbb
cmp
xor
adc
push
xchg
and
ret
mov
jne
jne
add
lahf
mov
inc
mov
xor
push
dec
icebp
inc
loopne
adc
mov
inc
sbb
out
add
jge
cs
cld
testb
int
aam
cmpsl
add
push
lahf
fwait
scas
stos
xchg
out
add
nop
mov
adc
mul
push
or
sarb
mov
cmc
shll
or
pmaxub
inc
addb
pop
push
pop
addr16
push
add
xor
lods
cmp
icebp
dec
nop
stos
cmp
mov
in
loop
cwtl
push
cmpsl
sbb
sbb
add
mov
cmp
push
add
popf
sbb
clc
jb
mov
sahf
dec
push
and
scas
push
add
clc
sarb
repnz
xchg
push
adc
es
cmc
call
pop
xchg
aad
bnd
push
and
xor
push
js
inc
lds
xchg
fsubl
pushf
lcall
mov
cs
add
movsb
je
add
inc
xor
and
std
mov
add
push
int
cmpsl
xchg
or
xor
das
hlt
sbb
clc
jl
hlt
and
shlb
test
sub
int3
adc
and
daa
xchg
fcompl
inc
mov
inc
out
call
mov
push
pop
and
lods
jnp
push
jo
mov
mov
jne
fildl
add
lcall
push
adc
xchg
pop
add
jg
pop
xchg
sbb
jnp
add
inc
push
and
je
pop
add
imul
repnz
add
jb
std
and
addb
mov
add
insl
xor
les
movsl
jl
pop
fbstp
cmp
cli
sub
or
out
jb
cld
sub
loope
pop
js
sbb
sbb
add
es
sbb
push
fimuls
nop
pop
add
jg
add
out
cmpb
repnz
mov
mov
jae
add
xor
loope
add
pop
dec
jmp
mov
mov
push
add
lods
inc
arpl
adcl
pop
imul
adc
cwtl
orb
pop
es
orl
inc
insl
cs
add
mov
outsb
scas
stc
in
jb
add
hlt
cmp
adc
stos
xchg
or
ret
dec
lds
fistl
test
mov
sti
out
jl
cmp
shl
add
fcomp
es
pusha
push
mov
cmp
sarb
mov
or
mov
insl
xchg
ror
in
loopne
or
sbbl
dec
push
push
sahf
lret
push
pusha
sub
aaa
cmp
cli
push
or
mov
pop
ficompl
jo
add
jo
fmull
gs
pop
mov
subb
popf
pusha
call
inc
sub
jo
jecxz
sbb
cwtl
in
sbb
adc
and
rolb
or
inc
lret
test
out
ds
add
in
add
repnz
mov
out
mull
adc
add
jne
jmp
cltd
movsb
cmp
inc
bound
mov
scas
add
xchg
loope
int
fimull
mov
mov
mov
outsb
stos
shll
paddb
xlat
cld
sub
sbb
pop
cmp
add
in
mov
sub
jle
fildll
add
jno
test
loopne
cmp
mov
lock
std
cltd
add
xor
mov
pop
fldenv
cmc
loop
push
imul
and
inc
addb
addb
jbe
sbb
or
insl
lods
cltd
pusha
sub
pusha
out
push
add
push
push
das
outsb
jne
sarb
mov
cmp
pop
jnp
and
push
xchg
cmpsb
inc
sbb
ds
ds
push
hlt
cltd
or
aam
xchg
sbb
cmp
nop
test
or
inc
shl
add
and
inc
bound
mov
hlt
iret
addb
pop
lret
or
jle
xlat
clc
sti
icebp
mov
xor
rorb
sarl
sbb
push
sbb
cmp
or
or
mov
inc
and
outsb
adc
cmp
inc
fsubrp
jns
popa
lret
movsl
add
add
dec
popf
fdivl
jnp
aam
aaa
jle
addr16
sbb
adc
mov
addb
lcall
lahf
dec
loopne
fwait
pop
out
push
aas
and
fsub
cmp
cmp
pop
xlat
das
ret
mov
push
je
es
addb
adc
xor
xor
rorb
pushf
es
cmp
add
add
pop
fadds
jb
or
clc
loop
clc
idivb
ss
cmp
sbb
pop
stc
clc
imul
cld
das
cltd
jns
es
and
sbb
xor
mov
dec
push
pop
dec
pusha
fsubl
in
sbb
mov
and
inc
shr
fsubl
adc
add
cmp
or
andb
push
pop
mov
jne
mov
xchg
pop
xchg
inc
shlb
xor
mov
adc
cmp
and
std
mov
xor
dec
mov
dec
iret
sub
push
mov
add
add
or
fstps
pusha
and
push
test
fcoms
shl
jle
jmp
add
dec
ds
mov
cltd
scas
mov
leave
xchg
xor
dec
xor
add
in
dec
pop
push
adc
ss
and
or
jmp
add
cmp
loope
enter
test
jnp
aad
in
subb
dec
jp
mov
adc
xchg
jbe
push
adc
orl
mov
or
inc
lret
add
xor
sbb
lcall
mov
add
xchg
xchg
shll
mov
lret
in
add
cmp
mov
add
lds
loope
push
sbb
roll
lock
js
pop
mov
sbb
mov
adc
jle
add
add
cld
or
ret
mov
or
fucomip
mov
insb
add
adc
out
lods
push
push
aam
testb
mov
add
shll
mov
xchg
rcrb
stos
das
cmpsl
test
cmp
repnz
add
scas
leave
sbb
pop
enter
lods
dec
mov
xor
add
pop
xlat
dec
xchg
jbe
add
jge
mov
in
adc
mov
lea
flds
cmp
or
mov
xor
subl
pushf
fistps
sub
pusha
pusha
xchg
push
add
or
xor
inc
and
mov
jl
ss
push
adc
pop
mov
popa
sub
xor
sbb
push
sub
push
mov
adc
daa
jle
fs
jl
add
mov
pop
sbb
adc
pop
add
sub
sub
xor
js
lods
cli
add
and
repnz
iret
push
mov
hlt
bound
pop
cmpsl
sub
sbb
inc
dec
push
pop
pop
mov
arpl
and
cld
loope
xchg
inc
or
idivb
sbb
or
add
test
mov
adc
xlat
mov
sbb
in
repz
clc
pushw
jg
or
push
rcrb
push
mov
les
cmp
clc
jg
ja
xchg
add
xor
inc
mov
sbb
add
sub
les
mov
jle
mov
push
in
sub
rcr
and
add
push
sbb
dec
cmp
add
adc
lods
and
enter
add
aaa
mov
scas
or
cmp
stc
mov
and
pop
xchg
push
mov
mov
mulb
addr16
ficompl
jp
add
push
test
or
pusha
iret
cmpsb
xchg
lahf
out
out
jecxz
and
pusha
ret
and
lea
add
fs
or
fdivl
cmpsl
mov
add
andb
mov
add
in
sbb
jg
bound
cmp
xadd
mov
push
aam
pop
das
fdivrs
add
sahf
loop
add
dec
stos
mov
testl
rorb
xchg
cmp
dec
cmpsl
cwtl
pop
jo
xlat
filds
das
data16
in
inc
lods
stos
pop
les
cli
and
imul
add
aas
addl
loopne
and
mov
cmp
inc
lcall
fadds
dec
clc
sub
filds
scas
push
cmpb
add
and
bound
and
sbb
sub
pop
cld
xor
dec
or
xor
and
adc
ss
push
cld
pop
scas
repnz
lcall
in
test
pop
add
scas
pop
xor
mov
test
ret
inc
sub
or
pop
sbb
add
push
adc
fcmovnb
mov
mov
mov
sbb
xchg
sbbb
call
and
imul
dec
push
shrb
xor
jo
mov
add
or
lock
push
into
cmp
lea
adc
and
rolb
imul
lods
enter
xor
inc
push
inc
jg
pop
xor
dec
adcb
dec
fwait
and
push
push
and
sbb
pop
test
dec
in
push
add
mov
add
mov
and
subl
push
cmp
imul
add
inc
js
cmp
mulb
dec
sub
outsb
notb
xchg
pop
pusha
idivl
lret
adc
je
or
ficoms
cmpsl
pushf
addl
add
mov
loop
pop
jg
pusha
push
xor
inc
js
test
shll
add
inc
mov
test
mov
inc
data16
or
push
test
in
xchg
std
xlat
scas
inc
int3
jae
add
mov
stos
call
imul
addb
je
lret
pushf
repz
xor
jo
nop
in
mov
dec
inc
rcrb
lods
push
push
add
inc
dec
rorl
push
inc
sarb
lahf
dec
push
add
out
out
xchg
inc
pop
lea
mov
lock
inc
mov
adc
lret
push
mov
or
clc
lahf
in
iret
pop
jne
mov
lret
mov
insb
out
pop
sbbb
gs
arpl
add
jl
cmp
add
aas
xor
shll
subl
mov
or
faddl
xchg
cmpsb
sub
repz
out
mov
cmove
xchg
lcall
pop
subb
cmp
lret
add
js
pop
mov
dec
add
sbbb
dec
mov
negb
sbb
cld
das
add
fistl
cmp
fiaddl
adc
dec
movsl
lret
dec
mov
and
mov
pop
ds
or
pop
outsl
inc
daa
xchg
or
into
add
push
call
dec
gs
sub
push
leave
sbb
add
nop
mov
add
addl
das
cmp
daa
lea
scas
repz
int3
sub
scas
push
add
insb
sbb
ja
mov
cmpb
inc
push
add
and
sub
jo
add
js
insl
sahf
ficoml
aam
in
and
sbb
nop
les
push
nop
das
insl
loop
out
lret
add
mov
inc
add
movsb
outsl
out
xor
dec
mov
repnz
add
mov
int3
sub
push
mov
fdiv
ret
or
cmp
pop
dec
lods
mov
mov
jle
add
add
dec
hlt
push
lahf
lock
add
xor
sub
add
test
adc
or
mov
jo
inc
add
call
xor
ds
mov
add
testl
ss
add
call
mov
push
adc
and
icebp
outsl
xor
xchg
insl
add
add
xchg
mov
fnstcw
ljmp
add
lret
or
push
jae
mov
push
mov
pop
dec
inc
ja
lea
add
add
outsl
cmpsb
adc
lods
lret
in
add
xor
cmc
or
fs
leave
jecxz
push
or
push
jbe
jnp
add
pop
cmp
data16
push
loop
mov
xor
xor
pop
add
scas
imul
in
fcomip
loopne
xor
shrb
out
add
mov
sub
push
and
xorl
loope
rol
mov
inc
add
dec
sbb
popf
push
shll
movsl
and
add
pop
xor
mov
cmp
pop
pushf
insl
pop
pop
sub
test
outsb
add
jle
test
xchg
outsl
inc
in
lds
mov
pop
loopne
mov
mov
pop
movsb
sbb
or
ret
popf
sub
jecxz
adc
or
std
incl
cmp
push
and
xor
lods
adc
imul
push
add
mov
nop
inc
lea
jmp
imul
jge
add
out
lret
scas
pop
outsl
cmp
dec
and
push
dec
sbbb
adc
add
andl
mov
and
cmp
cmp
push
lret
push
mov
jg
sbbb
inc
and
pop
rcr
rolb
in
and
stos
or
add
outsb
aaa
add
outsl
in
das
sbb
cmpsl
xor
mov
jns
add
and
and
xor
les
out
loopne
add
inc
fsubrl
aaa
adc
or
mov
sahf
add
mov
jge
add
mov
clc
cmpsl
in
ds
lods
subb
stc
inc
push
add
test
cmp
out
add
call
or
sub
lds
add
jo
xor
insl
or
mov
dec
loopne
adc
lret
or
mov
add
jmp
outsl
pusha
jnp
add
pop
xor
adc
aas
rcl
fdivl
add
out
dec
xchg
enter
add
rolb
rcr
and
and
popf
or
add
rol
mov
dec
or
sub
lea
add
inc
imul
add
and
xchg
ret
pop
fnstcw
cmp
sub
add
and
adcl
stos
and
cltd
add
xor
repnz
add
xchg
pop
dec
idivb
cmpsb
mov
cltd
out
loopne
or
mov
pop
dec
dec
dec
test
add
rorl
cmp
out
and
or
rcll
dec
and
fsubl
dec
xor
mov
lods
sti
xchg
mov
lds
push
cmp
add
int3
dec
shrb
in
lds
aam
cwtl
mov
xchg
int
lret
insb
jo
jl
add
jne
pop
or
adcb
mov
in
inc
leave
mov
dec
push
notl
pusha
and
loop
xchg
dec
sbb
ficoml
add
adc
cmp
pop
add
and
xor
mov
jle
push
xorl
adc
xchg
jg
int3
ljmp
cmp
jmp
in
mov
adc
sbb
cmc
lcall
fnstcw
xor
xor
movsb
add
pop
inc
lock
add
stos
fisttpll
xor
dec
fdivs
sti
add
mov
in
jb
add
push
lea
xchg
sub
cmp
adcb
dec
inc
and
mov
sbbb
dec
xor
dec
pop
lret
movsb
divl
mov
or
push
jno
add
loope
shrb
add
xchg
pop
sbb
add
std
aam
xchg
xchg
lret
shlb
stos
xor
sbb
xor
and
jne
test
loope
lret
call
inc
xchg
adc
lds
jle
jnp
enter
sbb
xchg
imul
add
test
sub
and
adc
in
add
ljmp
lods
sbb
adc
pop
rcrb
fsubrs
push
roll
aas
cmp
addb
lcall
add
xchg
cmp
add
inc
jnp
imul
sub
or
out
pushf
mov
subl
mov
cmp
cmp
push
pop
popa
lock
out
xlat
std
add
insl
clc
mov
inc
xchg
cs
pop
push
mov
add
mov
sbb
in
sub
addb
filds
int3
xchg
mov
mov
or
mov
hlt
call
dec
lods
xor
mov
rcrl
add
jns
sbb
leave
sti
in
imul
lcall
fs
orl
cmpb
inc
lods
mov
add
cld
and
dec
fstps
add
popf
cmp
sub
jns
xor
andb
fwait
pop
inc
or
dec
cmp
xor
repnz
ficoml
xchg
fdivrs
push
jmp
lcall
pop
mov
inc
xorl
mov
outsl
mov
mov
ret
and
in
sub
xchg
add
test
cli
insb
fildl
xchg
mov
incb
jo
test
dec
add
pop
jno
bt
dec
lahf
andb
ja
adc
push
movsb
inc
mov
or
pop
cs
adc
mov
loopne
fwait
in
setge
mov
insl
call
mov
xlat
pop
aam
mov
mov
pusha
sub
push
or
out
add
lcall
xchg
pop
dec
lods
mov
push
jae
es
cmp
sti
add
xchg
push
fprem
in
dec
add
das
addr16
into
dec
mov
push
ljmp
popf
dec
fildl
addl
add
ljmp
loope
inc
jo
flds
sbb
mov
pop
adc
es
ret
add
ja
in
add
sub
dec
add
mov
ficoms
in
xchg
sbb
mov
jg
fisttps
int3
and
mov
movsb
mov
lahf
rorb
mov
lods
add
lret
cwtl
test
adc
outsb
fiaddl
mov
cmp
xor
pop
shlb
xor
sub
int3
inc
orb
cmovbe
add
outsl
cmp
cltd
push
les
xchg
add
push
sti
ds
sub
or
or
fstpt
stc
lods
jnp
inc
pusha
add
out
mov
fnstenv
into
dec
arpl
xchg
inc
adc
sub
cmp
add
jns
cwtl
xchg
cmp
inc
scas
mov
sub
push
and
inc
nop
ds
and
xor
rol
sbbb
add
pop
mov
js
cwtl
xchg
add
imul
push
cmp
add
dec
sbb
rclb
push
jo
add
lcall
movsb
add
out
lods
gs
jns
add
lea
cmc
test
insb
sbb
mov
and
add
rorl
cmp
js
aad
nop
clc
jae
outsw
ret
ficomps
imull
add
xor
xchg
in
add
in
out
test
mov
pop
adc
loope
add
lahf
add
dec
jp
mov
jne
add
shl
aad
jae
mov
mov
sub
push
sbb
loope
xchg
sub
mov
dec
push
dec
push
add
mov
stos
xor
add
bound
icebp
es
lds
add
clc
dec
cmp
inc
fdivrs
xchg
jb
in
cmp
imul
aad
push
rolb
out
mov
push
xlat
dec
mov
add
cmp
je
xor
andl
push
outsl
out
jle
add
push
push
inc
roll
dec
vmread
loop
out
outsb
ds
movsl
cmp
leave
scas
imul
addb
sbb
add
decl
jo
outsl
ja
push
push
inc
mov
add
or
out
hlt
stos
data16
push
cmpsb
movntps
dec
shrl
outsl
ret
xchg
or
push
jo
arpl
test
mov
ret
jno
ret
popf
test
add
std
sbb
and
push
jge
ret
mov
pop
jne
rep
adc
fdivs
pop
or
scas
hlt
jp
adc
cs
lods
idivb
mov
push
mov
xchg
xor
orb
add
popf
flds
cmp
xchg
jno
pop
xor
loope
jge
fiadds
arpl
mov
pop
sbb
mov
out
inc
scas
cltd
cmp
push
lock
jne
jmp
test
mov
shrb
sahf
jns
sub
add
add
and
pusha
movsb
jmp
cld
jb
add
sub
dec
add
in
enter
nop
pop
daa
or
adc
or
and
xor
push
jo
in
xor
xchg
xchg
pop
pop
loop
add
pop
cld
pop
or
sub
push
xchg
ret
add
and
add
xchg
subb
xchg
add
add
notl
xchg
movsb
fbstp
inc
fldt
add
sub
push
sbb
xchg
pop
pop
addr16
lock
orb
repz
cmp
js
jmp
cli
sbb
dec
sti
cmpsb
cmpsl
add
faddl
add
jo
in
out
bound
movsl
sbb
repz
ds
lea
out
add
stos
cmp
jno
or
mov
sbb
add
aad
mov
inc
shlb
push
lods
cmp
push
cli
adc
jns
add
sti
stos
push
pop
jmp
popa
leave
push
inc
jno
ss
adc
add
push
jae
push
pop
mov
add
daa
iret
add
push
push
add
or
cli
out
xor
cmp
mov
cmp
dec
pop
jb
xchg
sbb
mov
adc
addl
aaa
daa
movl
mov
dec
pusha
outsb
mov
out
cltd
outsl
stos
cmp
std
add
shrl
or
jle
push
mov
popa
jbe
dec
lods
mov
push
div
stc
pusha
pop
sub
fwait
mov
and
jno
add
mov
inc
mov
das
cli
or
adc
nop
cmp
and
pop
mov
add
ljmp
xorb
xchg
pop
adc
loop
js
pusha
negb
push
pop
xor
in
dec
inc
test
inc
xor
cmpsb
adc
insb
xor
mov
mov
sub
dec
and
cmp
add
sbb
mov
jns
icebp
add
jecxz
push
dec
sub
add
jmp
sbb
jl
add
imul
mov
add
sbb
push
addr16
insb
pop
jo
les
add
test
xchg
sbb
in
add
dec
and
les
outsb
mov
dec
xchg
add
dec
sub
jno
cmp
ljmp
xchg
add
dec
xchg
pop
adc
add
aad
mov
inc
lock
push
add
ja
xor
push
adc
mov
mov
sbbb
inc
sub
adcl
xlat
mov
dec
adc
ds
outsb
aaa
cli
imul
orb
mov
push
imul
add
rolb
notl
mov
ret
push
add
outsl
sti
clc
inc
jge
pop
ljmp
flds
aaa
add
call
mov
lock
ss
test
movl
mov
push
cmp
pop
adc
jne
hlt
jae
mov
mov
xchg
dec
xchg
cmp
inc
jne
adc
sbbb
xor
out
out
add
cmpsb
xor
sub
jne
aas
mov
ud1
xor
addr16
xchg
add
cltd
dec
dec
mov
pop
adc
mov
cli
std
sub
shrl
in
mov
add
sbb
int3
clc
cmp
jns
shlb
inc
or
and
lock
xor
nop
daa
popa
push
fcomp
test
and
inc
push
and
sub
stos
stc
xor
push
rorb
adc
and
clc
jnp
or
mov
inc
shrl
shlb
add
testb
push
add
loopne
bound
jbe
mov
rcl
cltd
adc
clc
in
pop
lret
movsl
rolb
lret
jae
je
cmp
sar
cmp
mov
stos
add
mov
stos
in
idivl
add
cmp
imul
pop
enter
inc
mov
jecxz
push
shrb
mov
or
pusha
lcall
add
out
ds
or
jge
ja
mov
jbe
jno
add
cli
lcall
adc
ret
sub
sbb
lds
mov
mov
lret
xchg
imul
push
lea
add
sub
push
inc
cli
lods
add
leave
into
stos
jl
mov
icebp
mov
test
faddl
shrl
es
loope
push
inc
insb
cmc
mov
repz
pop
jns
jmp
jle
das
jnp
add
jge
adc
std
cltd
mov
fcmovu
scas
in
add
outsb
add
lret
jl
and
cmp
test
add
xchg
clc
dec
ror
xchg
jns
xchg
sbb
aam
push
dec
push
pop
xchg
mov
push
xchg
test
push
add
mov
mov
adcl
cltd
add
or
pop
pop
xchg
jle
dec
mov
add
jbe
add
loope
fists
inc
add
test
ja
and
xchg
xorl
cmp
adc
adc
call
cwtl
rcrb
out
add
adc
mov
adc
psubd
fiadds
test
ds
add
push
out
into
and
and
lea
mov
adc
jp
test
add
icebp
fs
int
rcrb
or
cmp
cwtl
add
lods
push
mov
add
add
adc
iret
mov
test
sbbb
sbb
or
iret
fdivrs
stc
add
fadds
aad
mov
ret
xchg
inc
fldcw
shrl
das
and
jl
jmp
sbb
testl
add
or
fildl
leave
push
jl
lea
shll
lret
sbb
lods
test
cld
mov
add
jb
jo
stos
push
fstpt
mov
push
in
std
icebp
mov
sub
pusha
das
jmp
push
imul
push
mov
inc
pusha
sbb
cltd
lock
dec
pop
push
add
cmp
jae
xor
pusha
lahf
mov
add
ret
imull
add
mov
push
aam
sub
and
xchg
aad
shll
aaa
jns
mov
add
rorb
adc
iret
pop
mov
in
or
and
add
jge
mov
xor
push
add
inc
lret
pop
enter
pop
insb
adc
test
inc
and
sbb
add
loopne
mov
popf
and
xchg
out
cli
aam
les
jmp
inc
inc
insb
pop
repz
mov
aad
add
and
xor
enter
popf
int3
mov
in
jb
add
push
mov
xor
daa
roll
jo
das
push
subb
sbb
lcall
cltd
xchg
push
popf
dec
add
test
xor
sbb
ret
mov
inc
push
pop
or
cld
repz
popf
dec
add
pop
cmp
mov
test
int
cmpsl
sub
insl
sbb
sbb
mov
jnp
xchg
mov
int
test
in
add
adc
add
out
fistps
loope
dec
ret
push
adc
cld
sbb
add
sub
dec
cmc
sarb
idiv
insb
stos
pop
and
cmp
or
jmp
stos
mov
sub
popa
fdivs
test
loop
mov
add
out
lds
jg
aas
mov
lods
dec
ds
roll
xlat
cmp
or
mov
sub
pop
pop
push
jno
pop
daa
mov
jp
add
je
mov
or
push
jbe
filds
loopne,pt
jnp
xor
adc
cmpsl
fiadds
inc
sbb
outsl
test
add
cltd
lret
mov
sub
loopne
cmpl
or
sti
pop
inc
cmpb
xor
dec
cmp
pushf
add
xchg
dec
mov
lahf
xchg
divb
pop
mov
dec
dec
jne
dec
leave
nop
cld
jmp
adc
in
add
inc
rclb
je
add
leave
mov
push
dec
rorb
jle
jnp
xor
mov
xchg
cli
es
movsb
mov
add
push
clc
sbb
addr16
mov
pop
add
mulb
mov
loopne
push
repz
outsl
inc
xchg
icebp
inc
pop
das
mov
add
xor
ja
test
sbb
dec
jne
add
outsl
xor
js
hlt
jnp
lock
add
xchg
xor
add
xor
cli
or
leave
xor
dec
bound
iret
subl
pop
pop
inc
insb
popa
mov
xchg
leave
divb
in
in
int3
push
xor
jnp
lret
lcall
pop
dec
ret
xor
loopne
jb
pop
fisttps
jle
ljmp
ss
fcompl
add
jnp
add
adc
push
xor
es
ficomps
inc
orb
sub
daa
ret
xor
dec
mov
or
testb
cmp
xlat
pop
fdiv
je
pop
sub
jo
add
test
adc
or
mov
jl
add
andl
mov
mov
sbb
pop
dec
insb
out
xlat
fwait
dec
imulb
adc
jae
jb
stc
loope
ljmp
fnstsw
outsb
inc
mov
cmp
sub
rolb
dec
add
pusha
jne
adc
or
lret
mov
inc
cwtl
sub
add
xor
adc
push
repnz
add
add
adc
xor
cmp
push
cmpsb
pop
sarl
xor
and
hlt
cli
bnd
adc
bound
dec
inc
dec
mov
jbe
add
mov
dec
push
daa
pop
lahf
mov
and
sti
addr16
and
cmc
add
int
lcall
xor
add
test
ficomps
and
es
std
mov
sbb
pop
leave
sbb
push
cmp
shlb
push
push
sbb
leave
insb
imul
add
and
popf
push
dec
stc
push
lds
cmp
inc
mov
fdivr
adc
les
dec
or
test
xor
pop
inc
inc
in
xlat
fcomip
faddl
fstl
add
or
mov
add
lods
jge
push
mov
shll
adc
xchg
and
sub
sahf
mov
fwait
andb
pushf
xchg
jmp
nop
lahf
add
popf
or
add
xor
int3
add
push
add
test
pop
xlat
push
add
loop
stos
jmp
aam
mov
push
add
and
das
popf
sarl
out
movsl
fs
mov
jecxz
mov
call
cmpl
je
sub
mov
bound
dec
add
add
mov
loope
add
popa
jl
add
repz
es
pop
sti
add
js
pop
es
cmp
lds
jmp
cmp
stos
insl
pop
insb
cwtl
xlat
aam
add
push
clc
mov
lds
inc
add
mov
cmp
adc
pop
data16
mov
xchg
pop
fcomip
inc
or
lcall
test
aam
and
or
cmp
push
dec
add
mov
pop
push
inc
pop
mov
and
adc
or
add
xchg
or
inc
pmuludq
loopne
add
fldl
push
add
xor
inc
mov
pop
mov
jb
push
or
out
cmp
push
jb
sbb
icebp
fs
add
ja
pop
pushf
add
xchg
jns
sub
gs
mov
dec
mov
push
rcll
pop
mov
lds
data16
dec
out
imul
wbinvd
pop
sub
jns
cmp
xchg
add
fsts
bound
andb
call
in
orb
out
add
int
movsl
inc
into
xor
inc
out
stos
xchg
or
xchg
add
cmovnp
push
rclb
mov
xor
sar
loopne
dec
pop
cli
imul
xchg
and
test
pusha
int3
sbb
xchg
sub
sbb
test
xor
in
je
mov
dec
test
inc
adc
lods
add
sbb
dec
roll
add
mov
jl
push
mov
rcrl
mov
and
mov
inc
mov
push
lret
pop
cs
mov
dec
cmp
stc
out
orl
shr
mov
jae
push
pop
bound
fwait
mov
repz
push
push
rolb
in
sbb
ljmp
jl
jge
lret
pop
clc
pop
aaa
out
mov
icebp
ficoml
hlt
adc
jne
out
push
add
test
out
pop
imul
mov
cmp
xchg
add
mov
mov
add
les
pop
test
ret
mov
mov
lock
lret
cmpsl
pop
push
and
call
xor
int
sbb
mov
mov
push
test
push
jo
dec
or
and
add
push
lock
or
xor
adc
sub
bnd
push
pop
out
inc
cld
add
jns
addb
outsb
add
sahf
xor
add
rol
add
orl
push
add
fwait
mov
vandnps
jo
xchg
add
dec
pusha
xor
les
add
mov
call
mov
and
imul
mov
call
pop
inc
mov
mov
idivb
add
pop
xchg
fdivr
dec
pop
pop
sub
mov
nop
sti
loop
loopne
cld
mov
sub
jg
add
icebp
mov
fiadds
xchg
call
sbb
into
adc
dec
adcl
xor
pop
lcall
mov
das
sbb
outsb
dec
or
dec
push
aas
pop
add
shrl
xchg
rcrb
push
clc
cltd
aam
mov
or
outsl
ret
repnz
add
jno
inc
mov
mov
add
and
inc
mov
lahf
or
shlb
inc
mov
cld
insb
sbb
das
push
pop
xchg
xchg
dec
mov
or
xchg
cmp
pop
addr16
out
add
fsts
push
add
mov
sbb
cs
add
pop
cld
adc
mov
add
addb
xchg
lcall
add
push
sbb
push
sub
inc
fstl
add
ljmp
aam
inc
add
or
xlat
leave
sub
call
jmp
jnp
and
lret
lea
mov
push
mov
mov
nop
retw
jl
cmpb
mov
cmp
mov
and
push
mov
fwait
push
pop
frstor
mov
or
mov
add
test
sbb
jl
dec
sar
mov
addr16
jmp
cmp
add
xchg
xor
push
ror
sub
mov
orb
decb
icebp
dec
cmp
push
and
dec
add
xorl
xchg
jne
jnp
fdivrl
stc
push
jg
adc
pop
pop
aad
xchg
pop
xor
ds
mov
adc
dec
icebp
cld
adc
push
mov
shll
fdiv
pop
in
insb
jns
nop
flds
xchg
outsb
sahf
bound
data16
jg
add
and
mov
xchg
add
cmp
push
jl
inc
out
fsubr
and
loopne
add
jmp
inc
out
pop
iret
out
inc
mov
inc
aad
scas
enter
pushf
scas
add
mov
stos
add
lea
add
xchg
cli
sub
inc
mov
rorb
xor
movsl
test
popa
xor
add
jp
pop
pop
push
adc
jg
inc
push
cmp
xor
pop
jns
in
pop
hlt
bound
scas
cmp
pop
push
jns
cwtl
and
xchg
sub
jmp
mov
adc
jnp
in
test
and
imul
push
sbb
scas
imul
jecxz
sub
insb
xor
sub
cmc
repz
adcl
cmp
pop
lods
in
fists
sbb
push
jo
int3
add
out
movsl
sub
dec
arpl
xchg
sti
addb
adc
outsb
imull
sub
xor
add
fidivl
or
dec
xor
push
orl
or
cld
cmp
sbb
xlat
push
pop
and
cmpb
fsubs
pop
dec
add
inc
push
cmp
add
stos
adc
cwtl
xchg
or
fisubrl
mov
sarb
adc
pusha
inc
or
ja
fbld
cmp
stos
pushf
adc
xchg
pop
sub
repz
outsl
loopne
shll
mov
adc
add
cmp
hlt
addb
test
mov
or
jmp
sbb
adc
lods
gs
or
mov
push
push
xchg
push
enter
fimuls
aam
lock
sarb
adc
xorl
arpl
pop
popf
stos
add
mov
pop
adc
sarl
push
cmp
lock
mov
aas
cs
icebp
xchg
inc
pop
imul
add
dec
out
dec
pop
aad
push
xor
mov
insb
movsl
adc
sub
pop
pop
sbb
inc
add
push
and
xorb
sahf
iret
pop
repz
icebp
jb
leave
in
stos
lea
inc
loopne
mov
push
jp
je
orb
push
dec
pop
add
mov
cmp
xchg
add
subl
adc
add
jle
cmp
int
icebp
aas
das
inc
cmp
add
sub
imul
or
shll
add
mov
pop
and
pop
test
add
aam
sbb
ret
mov
cmp
das
cmova
cmp
cs
cmp
and
lods
scas
scas
add
rclb
popf
loopne
lock
jno
xchg
lods
add
loop
cld
sbb
aam
outsb
jbe
in
stos
movsl
cmp
mov
xor
andl
popa
xor
les
xchg
adc
loopne
fsubl
add
hlt
add
dec
int
bnd
les
adc
mov
pusha
das
xor
xchg
jecxz
or
and
xchg
cs
lods
inc
add
jg
fstl
add
lret
loopne
or
iret
sub
andb
addr16
inc
loopne
xor
and
dec
adc
call
xchg
or
lahf
insb
pop
push
adc
add
rorl
setge
mov
cmp
leave
or
adc
mov
push
mov
rclb
je
dec
lahf
lods
add
xchg
cmp
jns
sbb
mov
sbb
push
jmp
adc
nop
jne
call
dec
dec
sbb
jo
inc
test
rcr
negl
add
cmc
inc
push
add
es
not
add
repnz
jnp
sbb
jo
hlt
adc
int3
lods
loop
mov
pusha
rorl
mov
loopne
test
inc
popa
jb
inc
cmp
in
pop
adc
inc
movsl
scas
pop
push
mov
add
scas
mov
lods
daa
addr16
add
in
loop
test
out
dec
or
sub
nop
outsl
fwait
rcrb
pop
loop
push
inc
mov
mov
inc
test
test
sbb
xor
movsl
cli
jne
outsl
cmp
xor
imul
outsb
pop
xchg
adc
cwtl
add
sub
daa
add
jnp
jbe
es
ss
or
jmp
adc
mov
push
in
push
add
cmp
fistps
add
sbb
imul
inc
push
rorl
test
xchg
iret
jbe
sub
addr16
inc
add
or
in
fstl
int
pop
pop
mov
or
test
pinsrw
mov
inc
inc
inc
pop
es
add
inc
sbb
sub
cmp
mov
or
fdivr
mov
mov
adc
or
push
hlt
mov
rcl
add
mov
push
loopne
push
out
stos
xlat
pop
dec
inc
dec
mov
push
mov
outsl
call
faddl
inc
in
mov
pusha
std
sbb
cmp
lock
incl
add
sub
push
repz
arpl
add
jno
pop
aaa
dec
cmp
jbe
bswap
into
pushf
in
movsb
imul
repnz
push
aas
andl
bswap
mov
inc
inc
outsb
sahf
mov
mov
outsl
add
push
arpl
add
mov
sub
jno
cmp
aam
add
xor
insl
dec
bound
outsb
adc
mov
add
cmp
enter
add
in
mov
jae
mov
cmpsb
add
ss
scas
push
sub
lret
xor
sub
pusha
add
pop
js
mov
jg,pt
mov
mov
add
dec
pop
test
cmp
xchg
xor
mov
daa
sub
push
in
repnz
add
dec
jmp
pop
adc
xchg
clc
lods
inc
lock
cs
cwtl
inc
add
stc
repz
add
push
fistpl
mov
out
jae
push
sub
mov
push
push
test
pop
or
mov
and
dec
and
sbb
cs
inc
mov
xorb
push
push
cmp
inc
add
movsl
orb
int
add
movsb
dec
sbb
lahf
popl
cmp
imul
add
cmc
lods
fcmovb
adc
mov
fwait
dec
or
mov
dec
pop
insb
sbb
xchg
xorl
xchg
add
add
repnz
loopne
aas
fbstp
testl
sahf
push
cmp
add
sub
or
jge
cmpb
test
movsb
and
or
imul
cli
jmp
xor
or
or
rclb
loopne
xchg
push
in
pusha
add
dec
daa
sub
cmp
or
test
dec
clc
sub
add
shrb
fidivl
bsr
into
xor
aaa
je
add
and
mov
add
pop
xchg
push
add
or
mov
cmp
xor
aas
and
and
pop
xor
jns
mov
inc
adcb
rcr
test
cld
clc
leave
pop
sbb
mov
rol
push
mov
cmpb
nop
pusha
add
add
enter
add
mov
je
stos
insl
test
stos
cmpsl
adc
inc
mov
mov
int
fsubr
stc
lods
mov
in
lret
push
sbb
and
add
mov
loopne
mov
rolb
scas
in
outsb
add
repnz
push
add
and
add
orb
sbb
jb
outsb
js
hlt
dec
mov
scas
fdiv
hlt
aad
jns
dec
jae
xor
fisubrl
pop
in
add
adc
mov
dec
xchg
dec
popa
das
add
mov
jle
rorb
mov
jle
nop
fdivs
lcall
pusha
cltd
adc
rcr
ret
cmp
xchg
outsb
adc
pop
int
push
cmc
adc
loop
inc
add
sub
mov
data16
das
cltd
add
in
imul
stos
out
sbb
sbb
xchg
xchg
sbb
fwait
into
mov
inc
dec
add
aas
lret
out
sub
dec
loope
pop
es
sbb
xchg
std
xor
jg
cmpsl
mov
js
pop
test
jmp
in
mov
orb
pop
jmp
sbb
in
xchg
xchg
add
adc
xor
push
jo
loope
inc
mov
stc
loopne
faddl
and
mov
call
add
adc
mov
jle
xorl
outsb
nop
add
xchg
cwtl
ljmp
xor
ss
xor
test
xchg
roll
adc
or
fwait
enter
xor
loop
xchg
dec
and
jl
push
iret
rolb
adc
add
enter
adc
lods
xor
cmp
out
jb
movb
test
das
adc
xor
lods
add
iret
ljmp
andb
lret
adc
aaa
and
mov
pop
lfs
mov
pop
inc
mov
xchg
jns
push
add
mov
add
leave
in
std
and
cwtl
out
sub
pop
jbe
aaa
dec
inc
mov
sbb
roll
rol
or
fs
sahf
push
mov
shlb
mov
mov
or
test
dec
cmpsb
push
xor
and
in
jnp
add
ret
add
add
mov
cmpsl
inc
popl
ja
cmp
inc
cli
hlt
add
inc
and
add
rol
sbb
mov
cmp
rclb
push
inc
mov
je
jmp
cmp
in
jge
sbb
fwait
pop
and
iret
jb
and
or
mov
aam
jo
repz
movb
testb
add
out
mov
shlb
lea
add
cs
scas
inc
jns
xchg
decb
test
push
pop
gs
xor
inc
fildll
xchg
mov
jno
sbb
add
or
push
arpl
jecxz
in
and
filds
xor
repz
pop
popf
lret
arpl
ret
ljmp
iret
jo
in
in
adc
mov
add
add
movsb
test
mov
addb
xchg
sub
add
jnp
fcoms
add
notb
mov
xorl
cmp
rolb
mov
or
outsl
pusha
cld
in
push
cmpsl
add
in
and
in
mov
and
fnstsw
xor
sbb
cmp
test
fisubs
xor
xchg
jo
sbb
scas
loop
add
cs
shlb
clc
adc
sbb
loope
jb
and
push
add
daa
in
pop
xchg
pop
xorb
or
pop
pop
gs
jno
cmpb
xor
rcll
xchg
push
xlat
nop
pop
add
mov
lock
and
xchg
jmp
sarl
sbb
add
ret
gs
adc
xor
jl
rcrl
mov
pop
dec
inc
lock
or
add
out
std
fcomps
aad
es
add
aas
mov
mov
inc
in
mov
iret
inc
fdivr
cmpsl
add
dec
nop
push
les
hlt
and
in
mov
mov
mov
int3
add
js
jns
push
adc
cmpsl
jne
add
mov
inc
fwait
add
lods
xchg
rsqrtps
cmp
jmp
cld
icebp
lret
mov
mov
inc
hlt
and
xlat
repnz
push
xchg
add
cld
push
jbe
cmc
push
shl
pop
or
out
arpl
pushf
clc
push
cmp
add
ret
in
mov
xchg
cmp
xchg
sbb
mov
and
add
hlt
push
push
arpl
xor
rolb
and
add
fsubr
sbb
add
sbb
xor
in
mov
dec
mov
cwtl
cmp
rolb
mov
imul
jp
or
jo
xor
mov
js
subb
jl
jp
or
adc
xor
add
testl
call
jae
mov
mov
cli
xchg
cmp
addb
into
popf
and
idivl
das
push
sbb
fiadds
add
xchg
jnp
aas
movsb
in
sbb
sub
add
fmull
in
je
xchg
and
xor
popf
mov
loopne
add
xchg
cmp
fadd
and
je
add
loopne
cwtl
mov
xor
jl
js
enter
add
inc
mov
push
enter
lods
or
fimull
or
add
and
adc
pop
bound
cmp
jno
sbb
inc
and
lds
loope
push
add
pop
xchg
and
cmp
js
mov
jge
adc
cld
xchg
out
jl
mov
add
push
xlat
mov
aas
notl
jb
outsl
hlt
mov
dec
xor
inc
sbb
mov
popa
sbb
or
shlb
dec
inc
sub
test
sub
cli
mov
adc
xchg
pop
push
fisubs
lcall
iret
add
push
out
add
and
mov
or
notb
cli
pop
ja
push
pop
in
jmp
pusha
cmp
add
lahf
je
scas
pop
or
jp
sahf
mov
clc
cwtl
aaa
addb
cmp
call
test
int
dec
push
push
popa
or
add
in
imul
jno
nop
lods
add
out
mov
sub
mov
aaa
scas
add
fwait
pusha
mov
pop
add
cmp
or
mov
and
xchg
pop
mov
add
mov
inc
nop
jp
fadds
mov
into
pop
mov
lock
inc
mov
add
or
add
lock
push
mov
in
sub
mov
rdmsr
leave
repz
lods
mov
in
fisttpll
sti
scas
add
aam
lock
jle
add
int3
fucom
xchg
mov
leave
add
aam
in
pop
push
sub
push
push
rorb
jne
bound
sbb
int
add
xor
popa
add
inc
in
push
pushf
push
push
mov
subb
inc
sub
mov
add
out
sahf
dec
fdiv
loop
add
shl
aaa
enter
xor
outsb
inc
jmp
mov
adc
notb
rol
push
fdivr
sub
or
and
bound
out
sub
xchg
in
fisttps
repz
mov
clc
dec
jno
add
jge
xchg
nop
add
ficompl
cmp
push
roll
lock
push
daa
mov
add
pop
addr16
and
push
cmc
xchg
sub
xchg
inc
lret
jl
jle
out
add
pop
adc
add
movsb
push
jae
jnp
add
and
adc
test
incl
notl
mov
hlt
or
jo
cld
rolb
jns
push
lret
mov
int3
shll
cmpb
sbb
and
ja
lcall
jl
sub
in
cmp
lods
add
push
mov
jo
add
pop
cld
jge
pusha
xchg
cmp
enter
pusha
xchg
out
and
popa
sbbb
pop
cli
std
jnp
sbbl
mov
repnz
imul
outsb
dec
pop
add
ret
and
lahf
mov
xchg
iret
xchg
push
je
or
imul
mov
lret
or
dec
and
add
rclb
push
jb
scas
add
pop
mov
add
cmc
pop
jp
out
pop
jno
cmp
sbb
fiadds
enter
xor
jecxz
mov
clc
nop
out
cmp
xor
push
push
dec
and
or
sub
and
rcrl
shrb
mov
sub
popl
or
cltd
dec
push
or
xor
negl
rcll
add
in
std
or
mov
ss
inc
pop
push
repz
jmp
ljmp
daa
jnp
add
lret
sbbb
push
andl
sbb
or
add
push
pop
mov
xchg
or
push
pop
cmpsb
add
dec
movsl
mov
mov
dec
test
in
mov
pusha
add
xor
sbb
mov
mov
testb
pop
arpl
mov
insb
add
lret
shll
jne
mov
xchg
cmpsl
cmp
add
leave
add
pop
mov
popf
jle
pop
add
or
jb
xor
cmp
stos
cmp
xchg
lods
cli
inc
cmpb
in
add
jmp
imul
or
xchg
shl
jecxz
pop
lahf
out
lods
rcll
add
push
sbb
pop
mov
add
dec
push
cld
pop
ljmp
shrl
add
push
lea
clc
mov
mov
leave
out
insb
cmp
fisttpll
or
cmc
out
sub
lds
jge
daa
outsb
sbb
push
bound
push
lock
inc
cmp
add
mov
sub
call
push
dec
hlt
cwtl
fnstcw
add
fadds
dec
nop
adcb
test
fisttpl
inc
fcoms
xor
jmp
pop
imul
add
outsb
sub
inc
sub
dec
lock
enter
sbb
cmpsl
mov
pop
cmp
pmullw
out
mov
icebp
pop
rcrb
clc
inc
aas
mov
mov
push
push
les
mov
movb
add
adc
fildl
jp
sbb
mov
jecxz
rcll
sbb
pushf
xorl
cwtl
in
mov
cmp
daa
out
mov
or
aas
call
add
jno
fldl
das
push
cmc
sahf
push
data16
cwtl
pop
mov
jnp
loop
orb
add
into
lahf
out
mov
push
add
fwait
es
push
mov
iret
add
dec
rcll
mov
jns
add
aam
ret
dec
adc
jg
xor
inc
inc
test
or
mov
dec
aas
testb
fwait
jnp
sbb
inc
gs
pop
ficoml
ret
into
inc
sbb
sub
hlt
ficomps
test
dec
movl
fisubs
jns
rorb
xchg
or
leave
movsb
daa
ret
cmpb
dec
rorl
rcrb
es
sbb
dec
sub
add
jmp
scas
push
mov
push
mov
inc
cmp
fstl
pop
repnz
mov
add
dec
gs
popf
ret
mov
notl
loopne
add
pop
mov
leave
add
jl
divl
mov
dec
mov
add
cmp
jmp
add
leave
popf
push
xchg
adc
repz
xor
cmp
inc
add
pushf
frstor
inc
fldcw
mov
jb
enter
in
inc
adc
leave
or
xorl
rclb
in
cmp
lods
out
lret
pop
sbb
mov
and
xchg
test
xlat
out
mov
sbb
xor
cmpb
sbb
or
pop
mov
add
sbb
jecxz
lea
sar
cs
aas
js
cli
pop
mov
push
mov
imul
pop
pop
aas
incl
xchg
cmp
fidivl
in
imul
mov
shll
pop
mov
inc
iret
pop
jl
pusha
inc
lahf
cmpsl
xchg
stc
push
ret
jne
xchg
pop
dec
adc
je
inc
hlt
xchg
inc
lcall
push
int3
enter
mov
push
xchg
pushf
jo
adc
add
push
inc
and
in
std
ficoml
les
repz
and
nop
cltd
or
jg
pusha
in
outsl
mov
enter
sbb
push
std
adc
dec
or
and
add
xchg
lahf
fistl
mov
leave
or
les
mov
ret
sbb
aam
mov
jb
xor
faddl
xor
popl
jo
sbb
mov
outsb
popa
loopne
push
mov
subb
clc
mov
add
test
fmull
cli
sbb
add
mov
mov
jp
fnstsw
sub
sub
pop
sub
pop
sbb
pop
dec
cmp
lahf
aam
add
in
pop
sti
mov
sub
xchg
call
cmp
add
sbb
sbb
addr16
inc
mov
cmpsb
add
sub
out
add
out
lret
into
movsb
enter
adcb
cmp
adc
sarl
mov
cmp
rcrb
test
dec
test
mov
xchg
arpl
fucomp
inc
roll
lea
js
jae
enter
xchg
jno
add
test
sbb
or
dec
push
inc
test
jno
xchg
push
push
xorl
pop
dec
mov
inc
ud0
scas
mov
clc
das
pop
movsl
or
xchg
pop
je
xor
cmpsl
xchg
sbb
xchg
shrb
inc
jmp
inc
cmp
aam
int3
arpl
or
mov
aam
cmp
mul
imul
ss
add
sbb
sub
pop
and
repz
dec
sbbl
clc
aas
je
xor
movsb
scas
outsl
xchg
push
push
inc
adc
rclb
cmp
adc
lods
sub
lcall
or
cmp
and
pushf
popf
add
dec
push
jmp
cmp
dec
mov
jnp
jg
inc
lcall
nop
pop
add
xchg
imul
dec
shlb
pop
add
test
jecxz
and
sbb
or
jp
jo
sub
inc
add
inc
in
pop
je
pop
adc
mov
cmpsl
subb
stos
imul
adc
cmp
inc
lock
push
add
js
scas
add
icebp
mov
int
xchg
add
lahf
mov
imul
stos
add
repz
dec
add
cmp
mov
mov
cmp
inc
popa
ret
xor
fsts
or
push
xchg
bound
add
or
pop
int
packsswb
sbb
xchg
test
andl
mov
icebp
sbbb
xchg
inc
es
into
jb
inc
jge
dec
cld
xor
inc
ja
xor
and
sbb
inc
loopne
or
and
cmpsb
or
add
inc
xchg
ja
cwtl
mov
mov
out
js
jge
and
push
inc
dec
fsubrs
lcall
and
push
pop
and
inc
adcb
in
xor
fadds
insl
xor
sbbb
lret
jbe
rolb
dec
inc
sldt
out
pop
mov
sbb
mov
pop
test
hlt
cmpsl
jg,pn
mov
jmp
inc
inc
pop
add
out
inc
inc
push
mov
dec
push
dec
add
or
mov
idivb
aas
ror
imul
shrl
loop
adc
clc
sarl
cmpl
dec
sub
stc
sti
jne
push
add
cmpb
push
leave
cwtl
dec
inc
pop
sub
icebp
push
xor
int
loop
add
adc
outsl
sbb
xchg
mov
push
mov
jecxz
and
or
push
push
xor
xor
pop
mov
cmp
negl
add
mov
add
repnz
orb
jg
xchg
mov
push
rolb
sbb
fsubl
add
cmp
fildl
fidivs
add
dec
out
mov
jl
add
call
inc
xor
aas
cwtl
mov
incl
jp
icebp
andl
dec
xlat
stos
loope
ret
lahf
sbb
subb
or
enter
pop
mov
pusha
xchg
out
add
or
push
add
pop
push
shll
or
pusha
or
and
loop
xchg
lcall
cmp
popf
mov
mov
je
inc
movsl
add
cmp
loop
ja
in
fisubs
or
and
lahf
and
into
adc
lds
loope
dec
add
bound
int
in
pop
sub
cwtl
or
jmp
xchg
fadd
test
mov
in
sbbl
mov
pusha
cmp
jmp
adc
int
pop
shll
and
call
shl
dec
popa
js
ficompl
push
xor
and
add
inc
xor
sub
jne
push
cld
fcomi
arpl
xorb
das
add
xchg
inc
pop
push
cmp
lods
mov
ret
loop
cmp
repz
dec
out
add
or
mov
fld
cmp
mov
cmp
ljmp
lds
loopne
nop
loop
loope
add
sbb
xchg
lods
js
mov
fsubrs
stos
inc
mov
mov
movb
sub
ds
xor
gs
add
pop
repz
test
and
cmp
mov
or
mov
jmp
or
movsb
jns
sbb
add
xchg
lcall
stos
mov
pop
das
lods
repz
push
testl
mov
jbe
add
add
imul
fwait
push
frstor
ret
rclb
adc
mov
jle
xor
sarb
les
pop
fdivp
xchg
and
add
mov
push
cmp
pop
add
xor
lock
jb
sub
jl
pop
call
xor
add
es
repnz
stos
pop
enter
loop
stc
xchg
cmpsb
xchg
addr16
stos
mov
lcall
fstl
test
out
mov
std
repnz
add
cmp
lock
inc
push
shrb
jo
sahf
and
repz
mov
or
pop
popf
sbb
fdiv
push
mov
xchg
cmp
push
push
div
out
sbb
mov
clc
mov
add
mov
jge
add
xchg
mov
adc
cltd
add
xchg
adc
hlt
mov
shrl
lods
lock
push
mov
in
hlt
gs
sbb
movsl
in
add
and
fdivrl
cmc
addb
adc
les
pop
xchg
push
mov
stos
pusha
dec
mulb
jnp
hlt
pop
imul
mov
pushf
aas
add
dec
add
sbb
add
jge
clc
in
mov
xchg
xor
cmp
and
and
add
pop
xchg
add
pop
mov
mov
push
dec
lods
jae
or
add
mov
lret
cmpsl
add
lahf
pop
mov
push
loope
mov
add
xor
test
push
cmp
pop
push
pop
rcl
push
xor
rolb
xorb
push
popa
sub
int
jo
mov
add
adc
cmp
pop
out
popa
or
cmp
lcall
into
sbb
mov
daa
das
rcl
add
mov
clc
sub
pop
dec
inc
rcl
lds
outsb
add
mov
add
stos
jg
inc
andb
data16
enter
pop
cli
mov
push
lods
add
cmp
fcomip
inc
jl
imul
in
add
pop
clc
cli
xchg
add
sub
orb
add
std
jb
jge
cli
lods
into
stos
push
mov
xor
add
jg
add
inc
mov
cld
ljmp
cs
out
sahf
push
sub
xor
dec
out
push
push
stos
pusha
pop
adc
push
push
push
lret
sarb
sbb
or
or
and
mov
sub
jae
test
test
call
fwait
ds
rcr
rolb
out
or
rolb
cltd
add
dec
icebp
test
or
dec
or
scas
xchg
xchg
stos
adc
push
cli
add
js
call
fmuls
and
dec
ljmp
mov
and
cmp
sbb
and
lcall
jbe
xchg
out
clc
mov
adc
inc
ret
test
or
xchg
cmp
mov
outsl
inc
fcomp
mov
das
add
sbb
lock
adc
add
gs
push
mov
add
xchg
or
and
mov
in
mov
add
stos
sbb
sbb
mov
adc
cmpl
sub
das
enter
icebp
dec
add
subb
shrb
ja
es
adc
adc
cmp
aaa
push
pop
inc
adc
pop
scas
loopne
lret
rolb
test
scas
mov
sbb
jo
sub
mov
mov
xchg
std
popf
arpl
pushf
sarb
shrl
movsb
outsl
xor
dec
lea
and
into
js
jg
pop
add
aad
in
xlat
mov
push
jmp
pop
fstl
fdivp
and
insl
inc
or
and
arpl
jb
sbbb
xchg
inc
outsl
xor
sub
test
mov
jmp
add
pop
mov
add
test
repz
lds
inc
pop
lods
add
stos
inc
add
add
inc
and
incl
mov
jns
xchg
add
inc
stc
xor
push
add
shlb
push
leave
cli
jno
push
mov
push
mov
incb
lahf
cmp
adc
repnz
enter
jno
add
dec
xchg
lret
test
nop
xlat
mov
push
jge
call
sub
or
add
cld
cmp
rorl
cmp
xchg
pop
xorb
add
aad
jecxz
sub
inc
adc
adc
add
and
mov
out
test
inc
icebp
es
push
pop
mov
sub
add
into
or
ret
aam
cwtl
scas
jg
jo
add
adc
xchg
push
repz
push
jno
and
fisttpll
orb
add
jbe
sbb
outsb
xor
idivb
addr16
mov
add
sahf
test
pusha
adc
pmulhuw
push
add
pop
jge
jb
inc
add
mov
out
add
push
push
les
das
sub
lods
pushf
enter
lret
outsb
add
in
andb
xor
pop
xor
inc
pop
add
mov
and
in
inc
sbb
add
sar
pop
enter
pop
mov
mov
iret
sbb
lock
sbb
mov
pcmpeqd
mov
add
mov
int
pop
cwtl
mov
in
adc
pusha
adc
cmp
dec
inc
ljmp
xchg
aaa
mov
popa
add
shr
nop
repnz
jmp
push
pop
jo
aad
outsb
add
pop
push
and
add
mov
imull
nop
sub
add
ds
daa
or
inc
subl
mov
jge
ds
or
xchg
add
mov
sub
add
mov
mov
push
adc
dec
leave
mov
add
jecxz
mov
pop
lods
add
fbld
hlt
push
mov
adc
jecxz
mov
adc
aaa
add
sar
in
mov
push
xlat
sahf
repz
push
clc
nop
pop
pop
aas
rolb
mov
mov
lcall
pusha
js
add
pop
xor
mov
and
dec
push
pandn
adc
loopne
jnp
mull
sahf
lret
popa
mov
jge
lret
loopne
daa
add
js
xor
adc
out
ds
adc
or
cld
das
add
mov
es
and
push
add
into
xchg
dec
xlat
daa
sbb
leave
adc
popa
mov
call
data16
add
bound
into
movd
stos
and
and
jno
add
clc
mov
add
adc
cmp
mov
inc
and
rolb
add
sti
add
test
clc
add
jne
sbb
int
loope
mov
les
es
mov
add
inc
push
repnz
sbb
xor
add
test
mov
adc
add
in
sbb
es
xchg
push
lds
add
inc
push
shr
stos
sub
pop
dec
pop
xchg
xchg
imul
sub
data16
jecxz
test
shrb
push
fwait
inc
or
dec
out
push
sbb
fisubrs
and
adc
sbb
loopne
rolb
inc
mov
lea
loopne
cli
mov
inc
movl
pop
mov
sahf
mov
mov
cwtl
hlt
xchg
dec
in
pop
aas
adc
or
push
cs
cmpsl
adc
bound
xchg
push
popf
dec
inc
adcl
inc
jp
lret
imul
and
mov
dec
cmp
add
out
sub
adcb
mov
add
dec
cld
mov
mov
or
into
dec
mov
stos
xlat
pop
andb
mov
sub
mov
arpl
outsl
push
mov
adc
and
jae
std
add
sbb
dec
or
pop
mov
cld
and
je
in
push
add
and
mov
or
in
xorb
add
jg
test
popf
mov
rol
sahf
mov
push
add
test
xchg
add
sub
stc
je
orb
pushf
loope
lock
add
dec
fsubl
cs
adc
add
add
inc
jnp
jle
in
add
xchg
xor
mov
add
pop
in
jge
pushf
int3
add
stc
fwait
jecxz
add
outsb
dec
push
ret
fs
xchg
and
jo
fs
add
xor
clc
rolb
add
cltd
mov
or
cli
mov
testl
stc
insb
cmp
jl
dec
inc
adc
rcll
add
push
cld
and
enter
fistpll
add
rcrl
add
mov
push
in
push
pusha
xchg
dec
jbe
and
sbb
mov
popf
leave
mov
rcll
jp
sub
xchg
rcll
mov
pusha
enter
seto
sbb
push
movsl
rorl
lods
add
dec
fbld
sbb
jg
push
aad
inc
bound
inc
mov
adc
ret
inc
adc
push
loope
inc
mov
mov
mov
lcall
and
nop
add
imul
xor
cmp
add
add
xor
push
or
in
jne
es
cmpl
daa
mov
add
nop
enter
leave
int3
fnsave
cli
pop
ljmp
and
arpl
scas
mov
aam
xor
bndstx
xchg
inc
testl
repnz
inc
xor
insb
mov
jl
pop
int
sar
out
shlb
repnz
dec
nop
jb
popf
jle
add
ret
dec
lds
cmp
sbb
fcomp
imul
cltd
jp
pop
pop
add
stos
xor
cmp
push
xor
add
add
ss
pop
ficoms
and
aaa
inc
stos
inc
add
lret
mov
xchg
int3
push
js
cmpsb
add
ret
cld
movb
mov
leave
cmp
cs
or
mov
in
add
scas
or
lods
rcrb
add
jecxz
sub
xchg
mov
mov
in
nop
xchg
pusha
mov
sahf
addb
mov
movsl
ljmp
pusha
into
jle
add
mov
add
dec
mov
sbb
rcrb
dec
xchg
mov
aaa
or
pushf
es
incb
mov
dec
dec
xor
xor
das
add
sbb
or
rclb
mov
jns
pop
add
mov
arpl
into
add
in
push
mov
scas
test
mov
jno
cld
add
push
icebp
pop
leave
hlt
cmp
or
xor
add
dec
add
mov
std
mov
sub
cwtl
add
sbb
icebp
rcr
shll
xchg
sbb
pushf
xor
add
int
push
add
clc
inc
pop
lret
ficomps
add
pop
mov
ret
and
or
cmpsb
sub
sti
stos
push
or
sbb
enter
dec
insl
push
sbb
sub
in
add
cmp
fistpl
add
fucom
cld
insl
popl
aaa
mov
mov
xchg
lea
sbbb
cmp
je
or
xchg
and
js
inc
pop
pop
aas
cmp
jo
or
inc
and
enter
scas
or
pop
mov
shl
stc
stos
lahf
or
add
jmp
std
and
or
pop
insl
cmp
mov
and
rcr
sub
adc
hlt
dec
lret
loopne
xchg
loope
stos
scas
and
shr
lods
ljmp
xchg
fs
pop
xchg
lea
mov
frstor
lock
add
scas
xor
jp
dec
cmpb
mov
sbb
mov
add
lods
lahf
pusha
sbb
int
out
mov
cmp
add
lahf
rclb
rcll
mov
in
shrb
popf
mov
cs
loopne
sbbl
or
shrb
mov
jb
call
add
adc
aam
mov
arpl
leave
loopne
cld
enter
jno
mov
xchg
fucomip
fwait
add
adc
dec
in
into
clc
sub
popf
cmp
mov
sub
pop
lds
jecxz
inc
push
dec
out
rorl
inc
es
mov
or
in
fs
adc
shlb
pop
xor
add
cmp
lret
insb
mov
test
add
fs
aas
stos
stos
pusha
test
and
in
repnz
push
sahf
sub
push
xchg
sub
pop
out
add
sahf
mov
sbb
rolb
inc
ret
jl
rcpps
add
push
call
ds
xor
pusha
lock
cli
add
call
outsl
or
aaa
and
pop
add
cmp
pushf
cltd
test
add
push
adc
leave
inc
inc
cmc
cmp
nop
cltd
out
xlat
add
stos
xor
add
xor
lahf
add
pop
fidivl
xor
int
add
pop
cmp
inc
arpl
subb
jge
sub
push
mov
xchg
mov
inc
sbb
add
fs
ds
int
sub
cs
mov
sub
add
dec
sbb
les
nop
jl
xchg
clc
add
inc
ret
jp
daa
inc
mov
imul
xchg
in
into
add
mov
add
jno
aad
fidivrl
imul
sub
nop
insl
add
into
sti
sbb
std
andb
pop
add
xchg
adc
enter
pop
icebp
push
iret
push
inc
out
ss
add
inc
pop
add
push
daa
add
mov
jle
lcall
fdivrs
xor
arpl
pop
mov
inc
jecxz
inc
je
sub
dec
icebp
data16
push
mov
in
jle,pn
mov
add
sbbb
pushf
add
test
xor
and
sahf
mov
jmpw
mov
and
aaa
arpl
mov
add
ja
add
repz
into
or
add
sbb
daa
test
jge
add
sti
out
xchg
pop
repnz
dec
jo
mov
sub
add
add
shlb
pop
arpl
and
lock
push
jno
mov
notl
push
add
nop
jmp
inc
ds
insb
add
lret
cmp
iret
in
add
mov
mov
pushf
pop
andb
addb
push
imul
cmp
add
fxch
repz
sbb
cmp
inc
icebp
aad
jns
daa
push
sub
add
push
sbb
jmp
sub
lret
orl
dec
ret
pop
xchg
cmp
or
aaa
divl
dec
inc
adc
lds
hlt
andb
add
mov
jl
xchg
aas
fcmovnbe
imul
sbb
mull
push
or
test
add
inc
mov
jbe
lcall
push
add
sub
fdivrp
popf
jnp
xchg
shll
fdivl
lods
movsb
add
adc
mov
pop
cld
pop
push
or
inc
xchg
push
add
mov
push
out
cltd
pop
call
jle
xor
and
sbb
lock
add
pop
testl
test
pop
sti
adcb
shrb
psubsw
push
ss
inc
xchg
mov
lock
maskmovq
divl
push
das
sbbl
xchg
xor
mov
adc
mov
mov
add
sub
stos
cmp
sahf
add
jbe
hlt
icebp
jne
xchg
nop
enter
mov
xchg
push
or
xor
add
add
fnstcw
push
lret
sub
cmp
mov
lods
outsb
mov
and
enter
add
jle
cmpsb
testb
jns
pop
lods
or
inc
addr16
idivl
cld
sub
ret
fmuls
pop
mov
dec
add
push
pop
test
scas
lods
add
jmp
mov
insb
or
in
add
cli
dec
push
pop
jb
fs
dec
mov
insl
lcall
pusha
add
jmp
adc
popf
lahf
push
add
mov
and
mov
gs
cmp
movsl
out
cmp
xor
mov
addl
pop
cmpl
loopne
sbb
add
mov
ja
pop
mov
dec
adc
xchg
xchg
sub
jle
jb
rorb
and
lds
cmp
pop
mov
mov
push
fnstenv
ror
das
test
and
push
jle
lcall
xchg
sub
add
push
dec
out
leave
push
add
popf
lds
dec
call
xchg
mov
call
and
iret
mov
jecxz
lods
fsts
stos
lods
add
xchg
jg
sarl
dec
testb
jno
pop
test
prefetch
fs
pop
outsl
stos
in
fsubrs
jbe
int3
add
cmpsb
xchg
sub
cmp
inc
xchg
pusha
pusha
adc
mov
and
loope
scas
ds
pop
andl
dec
pop
push
and
mov
jecxz
xor
xorl
pop
mov
mov
adc
push
loope
out
add
pop
jl
es
xchg
pop
cs
and
push
push
fsts
insb
test
das
lea
rolb
lods
push
xchg
popf
xlat
data16
mov
adc
daa
and
notb
stos
push
pop
pop
sti
jmp
bound
std
add
mov
sbb
dec
or
xchg
jo
mov
test
pop
sub
cmpsb
push
je
add
dec
mov
add
daa
push
inc
sbb
repnz
rorb
or
out
imul
mov
sbb
cwtl
inc
sub
fwait
mov
dec
leave
clc
pop
pop
add
rcll
cmc
xchg
or
shll
pop
mov
popa
into
add
ret
into
and
and
cld
push
xor
outsb
imul
movl
dec
mull
mov
xor
push
call
cwtl
add
mov
mov
int3
push
dec
enter
xor
inc
out
mov
pop
add
jae
call
xchg
out
mov
flds
inc
pop
popa
dec
inc
push
xchg
cli
in
pusha
jecxz
and
cwtl
cmp
pushw
add
xchg
pop
add
sbb
add
call
aas
add
cs
adc
jecxz
nop
xor
inc
add
pop
sbb
ja
in
xor
inc
add
stos
imul
jl
add
std
out
outsl
jg
adc
push
test
ret
cld
sub
add
add
fwait
outsb
dec
pop
and
adc
sbbb
and
jmp
jae
add
out
repnz
js
push
insb
sub
push
popf
add
cli
jecxz
in
inc
fs
nop
in
sbb
mov
add
pop
mov
popf
sahf
add
sarb
mov
loopne
cmc
mov
sbb
pop
shrb
inc
inc
mov
add
xor
cmp
add
fcoml
repnz
pop
or
xchg
or
idivb
ja
pusha
cmp
or
cmc
fstps
jecxz
lods
push
mov
addb
sub
jge
and
pop
orl
sbbb
add
add
push
mov
mov
lods
out
or
leave
ficoms
mov
xor
ret
pop
add
push
or
das
mov
shrb
stc
add
pushf
movsb
lds
sbb
push
and
mov
dec
jbe
dec
and
add
dec
sbb
psraw
int
xchg
cmp
mov
add
and
mov
ljmp
es
jg
in
sahf
and
std
adc
rcrb
inc
add
xchg
scas
lods
loope
out
mov
ljmp
rorl
push
insb
xchg
dec
les
jmp
pop
ja
test
shl
imul
push
xchg
fucomip
fildl
in
je
mov
cmp
movsb
sbbb
add
jmp
xchg
test
enter
inc
xchg
push
iret
add
and
adc
jb
add
push
icebp
popf
cli
lods
add
mov
dec
addr16
pop
jns
cld
xchg
lahf
sub
pushf
sub
stc
iret
add
cltd
popl
dec
insb
into
orl
lret
mov
lock
lock
add
or
roll
repz
ljmp
push
xchg
decl
sub
dec
xchg
mov
dec
cmp
mov
data16
xchg
jnp
in
add
fld1
mov
add
mov
pop
pusha
add
add
jp
nop
daa
xor
std
movsb
mov
jno
and
inc
jmp
cmpsl
dec
pop
stos
roll
add
scas
and
mov
jge
pusha
fisubrs
inc
jmp
arpl
fldl
insl
ss
imul
mov
add
add
inc
sub
cmc
loope
fwait
jo
push
sbb
mov
movsb
in
xchg
cli
push
lret
add
and
inc
mov
mov
outsl
data16
push
add
pop
lock
fdivrs
insl
sub
pushf
popl
push
cmp
nop
fisttpl
or
js
das
es
aas
lret
fiadds
cli
out
popl
mov
push
mov
psrlw
scas
jecxz
ret
loopne
ja
sbbb
testb
out
cmp
iret
sub
cld
adc
push
repz
add
mov
xchg
jo
test
and
roll
pop
push
xlat
dec
mov
lret
stc
out
push
out
add
lods
daa
aas
loop
add
mov
pop
test
sub
jg
add
add
cli
inc
mov
add
pop
and
add
xchg
sub
add
pop
mov
add
je
loop
jge
sub
cld
inc
sub
mov
cltd
and
jne
add
dec
push
pop
or
in
push
pop
ds
sub
cmp
cmpsb
sub
and
pop
pop
add
xchg
lret
sti
lret
sbb
out
shr
jmp
mov
test
mov
xor
and
and
fcoms
call
mov
daa
je
add
mov
push
test
roll
je
loopne
scas
pop
cs
adc
imul
pop
mov
or
adc
adc
add
bound
dec
xchg
pop
inc
rorb
add
sub
ret
adc
popa
and
fnstenv
adc
mov
pop
lret
sbbb
in
inc
xor
cmp
push
add
jbe
cmc
mov
pop
test
inc
push
fs
mov
lcall
js
push
xchg
or
and
fcoml
dec
jmp
sbb
jmp
inc
mov
add
add
movsl
sbb
nop
add
adc
add
xor
jecxz
and
mov
loope
aam
sub
mov
pusha
pusha
data16
mov
and
xor
or
sub
jns
out
imul
popa
and
dec
repz
lret
pop
sub
cmp
add
scas
pop
xlat
in
loop
mov
push
scas
imul
enter
push
jle
out
andb
push
xchg
xlat
daa
in
das
xor
loop
add
ja
mov
add
dec
cs
sbb
int3
dec
pop
add
dec
lcall
adc
ljmp
adc
add
add
add
in
add
and
insb
aam
lahf
dec
add
imul
inc
subl
ret
cmp
clc
push
add
and
jo
jl
divb
outsb
adc
jge
add
int3
out
jge
or
mov
pop
arpl
and
push
or
cmp
imul
dec
aad
hlt
insl
mov
rcl
mov
add
adc
adc
out
sbb
rcrb
sbb
mov
hlt
inc
add
xor
cmp
xchg
pop
fsubs
push
mov
movsl
add
fbstp
add
leave
lods
mov
aam
jl
cmp
mov
mov
sahf
dec
ljmp
mov
bound
adc
fwait
orl
pop
out
aaa
adc
out
mov
in
insl
xchg
fildll
fistpl
and
and
pop
cli
arpl
loopne
dec
add
jmp
jge
jbe
or
fstps
mov
lods
in
insl
xor
and
sbb
push
int3
int
decb
or
add
aad
or
mov
stc
sbb
fidivrs
pop
stos
pop
push
out
outsl
int3
jl
rol
push
mov
movsb
cmp
in
daa
lret
fsts
add
imul
pop
pushf
rolb
aaa
mov
faddl
popa
test
nop
sub
fdivrl
pop
mov
cli
and
jl
xchg
add
push
push
push
lcall
imul
jb
sub
or
mov
pop
lcall
cmp
push
or
je
lods
push
add
and
shl
loop
pop
mov
add
mov
loopne
daa
ss
mov
inc
push
arpl
mov
push
mov
sub
pop
test
arpl
adc
repnz
jmp
in
push
dec
adc
add
shl
cmpsl
sbb
and
lea
test
add
mov
pop
xchg
jmp
sbb
clc
std
dec
in
out
psubsb
pop
sbb
pop
mov
test
jecxz
in
dec
cmp
clc
sbb
out
inc
mov
and
cwtl
mov
in
mov
add
xlat
repz
in
mov
add
gs
shr
add
and
hlt
ds
mov
insb
loopne
lods
in
adc
js
std
mov
or
and
lea
aad
popa
mov
pop
cmp
test
pusha
xor
pusha
cmp
xor
cmp
add
mov
dec
gs
add
pop
sub
adc
shlb
clc
pop
out
rolb
les
jnp,pt
dec
pop
int3
adc
add
in
negb
gs
pop
push
add
aad
push
xor
xor
pop
loopne
mov
add
arpl
xchg
and
cld
or
push
push
cmp
xchg
and
out
sub
sub
jb
add
inc
jmp
ljmp
out
mov
add
add
and
ficoms
rorl
and
jp
dec
adc
add
in
into
cwtl
ds
xorb
sbb
roll
xchg
mov
sti
fmull
ret
pop
push
lods
adc
orb
jmp
dec
mov
pop
std
jp
add
fisubrl
rolb
cwtl
cmpsb
pushf
out
ljmp
arpl
cmp
cmp
push
popa
aas
fsubs
aam
je
add
sub
inc
nop
mov
pop
add
adc
pop
jns
mov
jle
loope
rcll
xor
les
cwtl
fadd
jo
and
push
adc
inc
pushw
inc
mov
int3
lahf
repz
nop
xorb
add
and
addr16
xor
popf
add
in
nop
imull
mov
pop
mov
shlb
outsb
or
adc
loop
loopne
rcrb
push
pop
out
add
fistl
push
mov
bound
xor
les
cli
add
aas
mov
jle
sub
fs
mov
mov
or
pop
jno
imul
int
shrb
mov
enter
add
leave
insl
pop
and
nop
mov
push
addr16
out
push
loopne
fbld
mov
rorb
add
shlb
cmp
dec
sub
jl
lahf
int
mov
insb
adc
mov
ret
xchg
daa
dec
jmp
adc
adc
jne
push
jne
xchg
fs
mov
pop
add
negb
loopne
inc
movsb
push
hlt
push
inc
xchg
push
rorb
mov
jmp
in
push
mov
cmc
cmpb
or
sub
outsb
add
xchg
pop
pop
out
and
pop
jno
repz
stos
int3
subb
shrb
cmp
enter
outsl
mov
xchg
ljmp
stos
adc
dec
pop
sbb
ljmp
jno
adc
jg
sub
dec
xchg
sbb
rolb
sbb
mov
sbb
xchg
orb
sub
fcoms
jg
into
xor
orb
jmp
shr
fdivrl
rcrb
push
out
xor
push
or
and
fnsave
lea
add
daa
adc
cmp
cwtl
or
and
pop
fdivrp
call
stos
aam
pushf
imul
mov
inc
aad
jmp
test
imul
popf
cld
pop
sti
mov
rorb
popa
adcb
stos
cld
imul
inc
xor
int
nop
pusha
in
ficoms
push
xorb
out
xchg
pop
sub
pop
xor
and
out
clc
loopne
xchg
sbb
push
adc
pop
add
push
rclb
adc
sbb
or
hlt
int
dec
jns
lahf
adc
sbb
je
xchg
ja
insl
add
jg
sbb
dec
mov
subb
fwait
add
jecxz
dec
xchg
test
fisubs
mov
add
sahf
pusha
adc
push
inc
push
lea
sbb
out
mov
mov
sub
repz
lods
or
mov
inc
sub
sarb
js
dec
addr16
pop
mov
cmpsl
out
pusha
mov
mov
pop
mov
inc
push
add
mov
xlat
add
push
ja
xchg
inc
cld
dec
dec
call
imul
xor
mov
xchg
in
xor
and
xchg
mov
outsl
xor
add
sub
pop
daa
lret
sbb
lcall
mov
js
or
jecxz
xlat
inc
subl
xorb
ds
add
adc
xchg
rclb
sbb
inc
add
sub
xor
test
in
in
js
pop
add
testb
cmp
add
add
pop
xchg
push
push
sub
xor
add
jmp
or
pop
xor
pusha
add
scas
shrl
xchg
adc
sub
inc
mov
loopne
and
arpl
aaa
lock
insb
inc
sbb
sbb
stos
pop
popf
lock
xor
jge
push
mov
insl
add
add
loope
in
push
fs
add
pop
and
mov
rol
jg
push
push
int3
stos
add
mov
pop
and
push
pop
add
push
push
es
bound
inc
xchg
imul
mov
insb
nop
fwait
sbb
dec
das
jcxz
aad
mov
iret
pusha
xor
pushf
inc
push
pop
lods
lods
inc
or
ret
pop
push
xchg
push
dec
bound
mov
xchg
faddl
ljmp
popa
add
or
pop
jmp
sti
cmp
lcall
push
pop
popf
pop
and
les
call
stc
cli
in
mov
add
cmpsb
lock
adc
or
inc
push
and
push
jecxz
into
adc
loop
push
movsb
and
int
mov
mov
shrb
add
dec
add
testl
int3
js
mov
pushf
outsb
sub
rcrb
jbe
nop
and
sbb
jmp
insb
xor
shll
mov
into
in
ss
or
divb
insb
jmp
xchg
popa
add
fucom
xor
pop
pop
inc
mov
cmpsb
in
and
pusha
test
inc
pop
adc
adc
and
cld
pop
lds
insl
clc
add
int3
fadds
call
mov
or
dec
addb
push
add
rolb
cld
sbb
cli
jecxz
jle
dec
inc
push
sbb
js
mov
pop
shlb
dec
nop
out
dec
out
ljmp
xchg
or
sbb
daa
and
dec
xchg
mov
stos
sbb
in
xor
push
jo
adc
ja
mov
adc
ret
mov
pop
push
adc
dec
pop
in
into
hlt
in
pop
mov
xor
lock
cmp
out
pop
addb
mov
enter
jbe
aas
sbb
hlt
insb
xchg
add
cmpsb
push
lcall
ret
jle
pop
sbb
jl
jnp
rclb
pop
ss
movsb
in
mov
and
inc
bound
push
or
xchg
jns
dec
mov
maskmovq
inc
fistl
rolb
mov
ljmp
xorb
mov
sub
pop
pushf
iret
shll
fcomip
pop
xor
lret
adc
mov
aam
inc
inc
lods
aam
cmp
out
out
and
push
pusha
mov
ds
leave
cs
int3
mov
mov
test
inc
and
cmp
sarl
jl
mov
inc
mov
fs
lods
add
adc
lret
loope
or
sbb
lea
mov
dec
sub
xor
cmpsb
scas
nop
add
pop
dec
add
push
loop
and
inc
aam
or
jo
jo
fadds
dec
inc
sahf
rolb
aam
lret
loopne
add
adc
filds
xor
jno
stos
or
cmp
minps
filds
notb
test
stc
mov
aas
cld
inc
add
adc
lret
jmp
fisubs
pusha
es
enter
in
or
jne
add
test
std
add
push
sub
mov
popf
ljmp
mov
mov
enter
add
dec
rolb
and
fcomps
in
inc
push
call
movsb
jg
add
icebp
mov
push
movsb
pop
call
push
and
div
enter
addl
mov
sub
mov
push
dec
pop
sbbb
add
xor
fstl
jl
cmp
xchg
inc
in
scas
popf
repz
loopne
loopne
and
pop
inc
cmpl
clc
ret
push
mov
pusha
jecxz
add
pop
or
mov
loope
add
sbb
sub
loopne
ss
daa
jecxz
add
add
xchg
std
movsb
mov
mov
pop
aad
fistpl
sbb
xchg
scas
dec
les
inc
std
stos
out
pop
loopne
insb
aaa
add
dec
pop
repz
mov
repnz
adc
push
mov
push
sub
out
mov
in
dec
add
adc
ss
nop
push
cld
or
push
add
jge
loop
inc
arpl
xchg
scas
aaa
add
mov
dec
mov
adc
cmp
pop
add
pop
or
add
cmp
clc
sub
dec
movsb
lret
ret
mov
or
sub
mov
ss
mov
add
faddp
testl
and
pushf
push
imul
sbb
outsb
sub
add
push
testb
jb
clc
mov
scas
mov
add
outsl
cli
add
push
push
lahf
xchg
add
adc
mov
and
mov
xchg
lret
add
dec
xchg
or
rcrb
jnp
cvtdq2ps
cmp
or
lods
xchg
xor
mov
add
or
sub
js
mov
jp
add
mov
add
arpl
dec
mov
es
pop
jo
cmp
int
xor
adc
xchg
mov
les
cld
pop
pop
push
add
add
sbb
mov
jge
andb
add
pop
cwtl
xor
push
negl
mov
add
ja
insl
sbb
sti
mov
int
fs
adc
mov
cmpsb
aas
pushf
mov
pusha
nop
cmpsl
sbbl
loopne
adc
insb
add
lds
call
or
sbb
xchg
out
xor
mov
push
jns
fidivl
cmp
rolb
mov
ljmp
jp
mov
andb
inc
xchg
sub
test
cmpsl
orb
imull
dec
push
inc
loop
and
xor
lret
cwtl
xchg
pop
add
lret
sbb
rclb
pop
cmp
mov
mov
ljmp
fidivs
hlt
sbb
aaa
cmp
outsl
cmp
into
add
mov
sub
imul
cmp
add
roll
bound
jmp
adcb
pushf
adc
jnp
sbb
adc
je
stos
xchg
add
mov
data16
lcall
push
jle
add
or
pop
xor
dec
movsl
out
jo
adc
in
adc
xchg
pop
add
push
mov
push
rorb
or
add
loope
xchg
mov
pop
xor
stos
sbb
outsb
stc
leave
sti
mov
scas
shll
and
pop
int
inc
inc
out
xor
inc
shl
pop
stos
sub
or
jle
mov
jmp
xchg
pop
jecxz
mov
pop
test
outsl
fdivrs
imul
hlt
sub
xchg
mov
mov
push
pop
shlb
nop
push
pusha
jp
jne
lock
dec
xchg
jb
or
cmp
cmp
xor
add
fsubl
neg
fbstp
test
mov
and
in
cmp
stos
jl
pop
in
xchg
and
dec
jns
out
subb
bswap
pop
and
pusha
cwtl
and
or
sub
loop
in
push
add
pop
push
jnp
mov
pop
xor
jo
cld
clc
sbb
in
int3
add
xchg
push
cmp
fprem1
pop
or
mov
pop
jg
jle
nop
sbb
pop
dec
push
sub
mov
insb
int3
push
cmp
add
fcomp
pop
add
test
xchg
pop
inc
adc
popa
mov
fiadds
neg
in
fsubs
icebp
cmp
adc
mov
dec
jmp
push
les
jecxz
sbb
jae
mov
cmc
enter
add
lahf
add
inc
call
sbb
dec
das
jmp
in
xchg
lock
mov
xor
xchg
inc
jae
add
xlat
out
adc
icebp
arpl
lock
jecxz
xchg
add
inc
sub
add
pop
inc
mov
mull
decl
outsb
adc
dec
mov
sub
rclb
mov
psubsb
xchg
add
popf
jbe
add
je
out
jle
mov
xchg
pushf
rolb
sub
push
add
fldenv
in
and
int
push
sub
cmp
cmp
and
inc
add
xchg
cli
or
add
outsl
into
imulb
subb
lret
xchg
sub
mov
dec
add
imul
testl
pop
jno
mov
nop
dec
jge
add
stc
jb
dec
lea
add
fcmovu
push
adc
pop
and
cmp
xchg
inc
and
mov
add
push
mov
loope
cwtl
cli
sub
inc
imul
and
inc
or
sub
lcall
push
or
imul
inc
or
push
sbb
and
mov
dec
add
daa
sti
aas
stc
call
int
rol
repz
inc
add
jbe
out
pop
add
mov
call
add
push
popf
mov
xchg
outsl
inc
movlps
shlb
sbb
inc
scas
or
sbb
inc
mov
or
ror
xor
mov
push
xchg
push
sub
adc
xchg
out
xchg
cmp
push
repnz
sub
and
js
iret
push
adc
outsb
push
jecxz
loope
test
iret
dec
sub
sbb
mov
addb
lods
sti
push
pop
mov
xor
cmp
mov
mov
lds
add
not
mov
fwait
sub
xchg
xchg
sub
mov
pushf
add
adc
inc
outsl
add
lock
mov
pusha
xchg
js
add
sub
out
xchg
sub
fdivrl
cmp
and
mov
push
add
jge
aas
add
inc
sti
push
add
mov
int
pop
xor
scas
out
arpl
push
adc
jecxz
xchg
addr16
sbb
cmc
mov
xor
jns
adc
mov
test
pusha
cmp
add
lret
jne
sti
add
adc
pop
and
adc
pmullw
scas
sub
jmp
jecxz
lock
sahf
and
pusha
cmp
outsb
not
add
rorl
push
scas
scas
push
in
fmuls
sbb
daa
add
jge
jbe
jne
movaps
xchg
push
add
js
jae
pop
cmp
xchg
ret
lahf
mov
mov
das
mov
rol
and
inc
into
adc
sbb
add
xor
push
sub
cmp
lret
and
push
jmp
ret
in
push
mov
lock
out
insl
or
push
int3
movsl
sbb
test
in
repnz
pop
sub
sbb
pusha
outsb
outsl
xlat
leave
mov
in
mov
adc
lock
fildll
lods
add
lods
rcll
pop
push
out
scas
adc
mov
pop
cmpsl
loopne
inc
push
ljmp
dec
xor
sahf
add
sbb
cli
xor
cmp
push
jnp
fimuls
add
xchg
xchg
pop
add
andb
in
outsl
push
push
add
in
fcomps
int
or
out
pushf
fsubrl
repz
sub
inc
mov
sarb
pop
add
pushf
jge
add
push
clc
jmp
ret
or
sarl
adc
adc
adc
add
aam
mov
js
mov
jp
lret
sub
popa
xchg
adc
inc
lahf
pusha
das
outsb
loopne
add
mov
stc
lret
aam
sbb
cli
ja
dec
or
pop
das
dec
pop
and
sbb
push
adc
push
out
or
rclb
ret
mov
mov
mov
sub
prefetcht0
adc
or
and
or
mov
jge
and
ss
lret
xor
mov
mov
pop
jae
cmp
adc
inc
jne
mov
add
and
pop
add
pushf
sbb
cmpsb
and
mov
pop
enter
roll
fists
roll
sub
das
xlat
addb
sbb
jmp
jle
ret
push
mov
call
lcall
lds
mov
add
call
repz
scas
popa
or
inc
fnsave
push
add
je
out
cmp
lea
dec
or
jl
les
inc
add
pop
gs
add
xor
xor
jnp
add
fwait
sbb
adc
push
jnp
mov
push
add
and
push
out
cli
cld
pop
int3
xchg
addb
outsb
xor
xor
xor
rclb
pop
inc
mov
sub
clc
movl
jmp
hlt
cwtl
add
loopne
insl
test
rcll
jns
sub
mov
mov
sarb
add
lock
lods
dec
stos
in
nop
jg
aad
add
cmp
jno
cmp
push
imul
mov
pop
push
cmp
lds
dec
jp
add
je
andl
push
aad
sarl
inc
cltd
or
add
cwtl
xchg
adc
add
sbb
jle
frstor
test
rorb
push
cld
sub
in
add
push
inc
enter
sub
es
iret
mov
dec
stc
dec
add
sbb
add
pop
or
daa
out
add
adc
xlat
push
orl
cmp
into
jnp
cmp
push
nop
pusha
sbb
stos
ljmp
push
jne
das
lods
mov
test
and
sub
mov
in
incl
xor
pop
mov
push
lret
jp
sub
rolb
xchg
sarb
mov
dec
jb
lock
mov
xor
add
adc
push
fxtract
inc
aad
pusha
jl
aas
and
dec
ljmp
dec
rorl
add
rcrl
push
xor
or
loope
adc
pop
popa
enter
mov
jle
add
jg
in
jb
scas
add
int3
pop
cmpsl
or
add
sbb
pop
enterw
and
popa
mov
loopne
add
xchg
cld
mov
adc
add
ret
call
fwait
loopne
add
ds
and
adc
and
and
stc
dec
xor
push
pushf
mov
cltd
adc
les
stos
std
pusha
inc
mov
scas
shll
mov
movsl
inc
je
out
add
js
ds
lods
add
mov
stos
xor
cs
jg
add
mov
sub
xchg
xchg
ss
lret
add
xchg
out
mov
sbb
aad
mov
scas
and
filds
mov
xchg
test
inc
fadd
ja
xor
and
filds
push
add
push
test
lret
mov
lock
les
mov
pop
outsb
or
push
jo
mov
std
mov
je
inc
insl
jne
dec
inc
mov
out
sbb
mov
xchg
sahf
fbstp
mov
les
bswap
adc
add
outsl
in
xchg
jp
sub
xor
scas
pusha
jmp
lret
cmp
sahf
outsb
cmpsb
cwtl
jl
add
data16
mov
add
mov
mov
cmpsl
stos
add
or
push
add
cmp
mov
sbb
xchg
addb
rorl
mov
xor
je
sub
jmp
add
loopne
mov
testb
out
ljmp
mov
sub
cmp
loope
aam
mov
stc
cmp
mov
rol
add
scas
movsl
mov
mov
mov
add
adc
mov
fsubrs
push
adc
roll
pushf
loope
fiadds
bound
or
pop
cmpsl
fnstcw
add
jle
test
sbb
add
cmp
push
pop
inc
xchg
add
push
fldcw
sub
mov
mov
sub
mov
inc
rcr
push
sbb
xor
dec
adc
inc
cmp
add
bound
popa
sti
mov
mov
add
or
push
cmp
pusha
jle
stos
js
xor
imul
jb
sbb
mov
jecxz
sub
add
push
jbe
xor
mov
test
xor
xorb
cmc
add
xor
stos
dec
xor
scas
add
lods
mov
lea
add
mov
gs
fsubrl
push
sub
lcall
les
cmp
loopne
xchg
pusha
xchg
add
lahf
xchg
daa
rcr
xorb
fwait
add
adc
jnp
nop
sbb
add
push
sbb
pop
sub
xchg
add
xchg
ds
testb
lods
gs
bnd
push
cmp
mov
add
adc
dec
imul
testl
add
xor
mov
pusha
out
add
mov
cli
add
sub
push
add
cs
mov
add
mov
shlb
xor
pusha
cmp
dec
cltd
sbb
jl
add
mov
sbb
mov
mov
mov
icebp
jmp
aas
es
mov
int
xor
cmp
out
lret
or
sbb
dec
call
xchg
addr16
dec
jl
mov
lods
inc
push
pop
dec
sub
pop
sbb
lods
jb
jo
mov
aad
add
xor
push
inc
mov
stos
sbb
push
add
das
fimuls
mov
pop
je
sbb
jecxz
in
aad
sub
data16
lea
xchg
clc
xchg
add
and
test
out
loopne
pop
sub
pop
cmp
add
fwait
lods
ret
pop
lret
add
fcom
lret
dec
push
test
js
add
pushf
movl
outsl
xchg
xchg
aas
shll
jle
dec
adc
adc
jb
xlat
pop
mov
cmp
xchg
push
mov
insl
add
sbb
test
roll
add
shr
pop
inc
cmp
and
push
sub
sbb
bound
jge
popf
lock
or
pop
aaa
push
xor
mov
sarb
mov
xchg
pop
push
sbb
inc
out
shrb
loopne
test
sub
add
pusha
mov
xor
jl
or
xor
ljmp
add
outsl
lret
sub
movsl
adc
arpl
or
test
mov
pusha
shlb
mov
dec
pop
xor
dec
lock
aam
pop
mov
mov
call
add
sub
adc
stos
mov
cld
add
dec
push
aas
lds
push
push
add
inc
lret
pop
cmp
daa
add
ret
sbb
shlb
push
sbb
enter
and
mov
pop
sub
leave
adc
pusha
jne
les
jno
and
inc
mov
and
pop
push
or
icebp
ret
fadd
mov
mov
rcrb
mov
jp
and
es
fs
pusha
mov
sti
and
inc
mov
cmp
jp
adc
shl
add
pop
sti
or
fwait
mov
test
push
or
iret
aam
jns
add
call
jns
pxor
popa
add
inc
adc
lcall
mov
sahf
hlt
push
or
mov
or
add
jns
std
addl
fildll
scas
inc
jbe
inc
add
insb
mov
mov
push
or
or
mov
mov
or
xor
add
xor
inc
jge
add
rcr
inc
sar
stos
push
push
mov
and
add
ss
sub
push
or
test
sbb
mov
pop
rorl
and
stos
or
mov
lock
add
xor
je
add
add
sarb
xor
cmp
int3
pop
loopne
aam
rcrb
inc
xor
stc
into
arpl
lock
adc
ja
jle
movl
cwtl
mov
clc
jne
jno,pt
mov
ret
mov
pop
add
sub
mov
fdivs
ret
sarl
xchg
dec
pop
jl
pop
int3
mov
and
pop
pusha
lods
jns
add
sub
test
enter
dec
or
and
and
push
xchg
push
push
push
jns
cmc
filds
or
into
inc
enter
jno
jbe
mov
xchg
cs
in
push
and
addb
push
adc
shll
adc
jb
jmp
pop
jns
dec
test
call
xchg
addb
mov
mov
add
insb
mov
or
add
enter
jecxz
cmpsl
push
es
push
cmp
in
add
lahf
sub
pushf
and
pop
cmp
push
test
inc
dec
sbb
test
and
lods
movsb
outsb
mov
push
or
inc
inc
ja
loopne
and
push
sub
xorl
mov
pop
add
mov
mov
outsl
stc
divl
mov
mov
ss
ret
jns
rolb
xor
enter
test
pop
xorl
ficoml
xchg
test
push
fsubrl
sub
stos
pop
dec
lcall
push
pop
add
lahf
xor
and
in
in
addl
test
mov
and
call
xorl
rorb
lds
insb
pop
pop
ficoms
add
sti
xor
mov
popa
and
dec
push
scas
add
es
bound
mov
or
test
mov
add
xchg
pop
xor
adc
mov
rcll
int
add
jg
dec
lahf
xor
and
push
or
or
test
mov
rcl
and
mov
ja
cwtl
pop
icebp
or
push
shlb
negb
ret
push
push
test
inc
clc
jns
sbb
sti
xlat
sbb
cld
pop
jmp
ret
ror
mov
imul
cwtl
orb
or
dec
cmp
scas
nop
test
add
xor
pop
add
cwtl
adc
add
gs
inc
mov
xchg
sub
das
mov
push
pop
add
xorl
pop
enter
dec
add
pop
cmovbe
outsb
ret
jle
neg
adc
or
sbb
rclb
nop
subb
dec
mov
and
lods
out
push
ljmp
add
add
test
xor
lcall
mov
cmpsb
pop
and
leave
movsb
rclb
or
add
mov
mov
cwtl
les
lcall
add
insl
xchg
adc
pushf
dec
outsl
cmp
add
cltd
addb
mov
in
adc
sbb
cmpsl
addl
ja
jo
xchg
or
js
hlt
pusha
dec
lret
mulb
cwtl
out
fwait
stos
mov
pop
ds
out
or
hlt
dec
in
jo
fsubl
jae
in
add
ret
and
inc
cmp
mov
pop
js
lds
or
test
insb
xchg
mov
fiadds
fistpl
push
jp
add
cmp
imul
dec
shll
and
sub
repz
mov
mov
pop
inc
cld
and
leave
mov
jbe
jmp
mov
call
adc
aam
and
pop
and
cmp
pusha
pusha
sub
sbb
cwtl
lock
add
pop
pushf
or
aaa
fcmovnb
dec
nop
push
fcompl
or
add
fwait
test
add
push
inc
jo
loop
and
arpl
mov
and
sbb
jno
push
hlt
test
add
mov
ljmp
jecxz
clc
daa
mov
push
sbb
aaa
inc
les
int3
mov
adc
pop
ret
pop
mov
jno
xor
cmpsb
test
movsb
nop
dec
cmp
push
mov
bound
jns
out
jbe
cmp
sub
repnz
mov
in
or
in
cltd
jne
aam
ss
adc
add
flds
and
aaa
es
cwtl
leave
jle
add
jbe
jp
and
dec
pop
and
mov
mov
sbb
jns
dec
add
les
adc
ret
clc
inc
pop
cltd
dec
add
nop
call
add
and
leave
adc
mov
into
and
movsb
or
and
dec
fs
imul
xor
sbb
cmp
inc
jg
push
pop
loope
and
mov
and
push
jnp
add
inc
repz
push
jne
sub
rclb
hlt
and
jecxz
hlt
int
add
mov
mov
adc
shr
pusha
out
sub
notb
push
cli
sbb
xor
add
sbb
xchg
jns
pop
add
mov
aam
add
xor
test
dec
test
and
andb
orb
jle
daa
mov
push
xor
add
scas
rorl
pusha
inc
inc
push
popf
incb
dec
xchg
ret
sub
xor
je
sbb
adc
mov
dec
clc
xchg
js
add
lods
inc
push
movsb
push
jne
cmp
push
inc
mov
rcrb
addl
and
jg
test
ret
add
data16
mov
fisubs
and
sbb
pop
push
daa
push
icebp
cmc
add
int
stos
add
mov
pushf
ret
sbb
shlb
xchg
inc
stc
cmpl
add
jbe
adc
mov
push
cmp
push
popa
mov
aam
rolb
in
or
cmp
mov
fwait
ds
add
jb
mov
jo
add
cmp
lret
adc
mov
cld
aaa
push
add
repz
mov
stos
dec
lds
icebp
es
cmp
pop
mov
std
hlt
arpl
inc
add
call
mov
lret
lea
add
jmp
jb
aam
jo
inc
lret
add
sbb
add
fistps
test
push
push
pusha
cmp
sarl
cmp
cwtl
leave
inc
or
cmp
icebp
xchg
mov
adc
add
les
shlb
test
mov
jnp
bound
pop
push
insl
mov
mov
mov
cltd
std
or
jns
xor
pop
sbb
add
out
xor
jg
scas
pop
jle
jb
add
cli
dec
sti
mov
add
mov
dec
mov
push
loopne
jb
adc
or
mov
or
loopne
xor
and
mov
xchg
add
pop
xor
rclb
pop
add
movsb
dec
jo
mov
jp
inc
movsl
sbb
dec
push
or
push
lock
mov
add
shlb
add
mov
out
mov
jae
add
sbb
lds
andl
or
and
cmp
jl
pop
stos
dec
in
and
or
pop
add
sbb
ljmp
cwtl
std
test
sub
popf
push
and
sbb
add
stos
in
popf
xor
add
shlb
mov
scas
add
push
cmp
mov
popf
insb
add
sbb
or
movsb
lock
dec
add
mov
rorl
andb
rclb
cmp
push
stos
mov
add
into
in
pop
and
jns
push
pop
sub
cmp
imul
loope
mov
and
mulb
mov
outsb
lret
cld
js
xor
loop
sub
pop
add
mov
scas
jo
and
and
sub
scas
jne
or
clc
sti
loop
and
lcall
fisubs
mov
mov
ror
inc
dec
add
mov
pop
cmpb
xchg
sti
movsl
mov
mov
shl
mov
dec
mov
inc
sarb
mov
add
or
add
sbb
mov
and
or
enter
and
cmc
hlt
cltd
push
add
int
mov
pop
pop
dec
pusha
or
or
add
and
outsl
cmp
pop
pushf
movsl
dec
or
sbb
add
clc
addl
add
inc
fidivrs
pop
sbb
cmp
sub
xchg
add
mov
aad
ja
cltd
push
mov
test
fbld
add
mov
loopne
xchg
add
js
aam
ficompl
sub
cwtl
mov
or
mov
sbb
popf
add
stos
cs
sbb
add
jb
out
daa
cmp
and
je
jbe
pop
dec
ret
repz
shlb
in
andb
enter
fcoml
add
pushf
cmp
les
mov
jnp
adcb
mov
aad
and
data16
inc
xor
rclb
fprem1
cltd
fs
popa
mov
sub
insl
sbb
cli
call
pop
xchg
out
ds
add
inc
in
dec
out
cmpsl
push
fildll
scas
push
out
adc
xchg
aam
adc
cmp
add
int3
and
movsb
sub
xchg
sahf
mov
and
shrb
push
movsb
jg
add
cld
jmp
into
pop
jle
jae
or
ja
test
jge
xchg
mov
adc
sub
inc
push
pop
andb
inc
mov
outsb
sarb
ror
cmp
pop
movsl
repz
in
js
enter
sbb
dec
sbb
rcll
push
cmp
aad
mov
pause
cmp
lahf
sub
ja
and
popf
mov
adc
push
jg
addl
lret
mov
hlt
ljmp
xor
nop
jo
pop
push
out
cld
cmp
outsb
aaa
jo
mov
add
and
es
mov
add
in
clc
jl
rorl
mov
or
inc
std
aad
je
pusha
fcompl
mov
aas
icebp
add
inc
and
push
mov
push
inc
outsl
xor
jecxz
and
sbb
in
sub
cmp
addb
rolb
leave
hlt
push
push
orb
dec
and
fs
sub
mov
xchg
clc
repz
pushf
cmpb
jno
add
loopne
jmp
mov
xor
inc
fs
aas
mov
jbe
jns
sub
dec
ja
xorb
insb
in
jmp
jae
in
dec
loop
mov
nop
js
sbb
pop
cmpsl
add
inc
les
dec
mov
movb
mov
add
and
icebp
cltd
movsb
andb
jo
pop
jbe
add
xchg
iret
pop
push
pop
cmp
js
pop
rolb
jae
cmp
ud1
or
loope
jmp
jbe
pushf
pusha
inc
call
mov
push
lods
mov
push
bound
xor
andl
movsb
pop
vmwrite
add
iret
xor
mov
shlb
cmp
jns
add
das
push
lahf
out
test
bound
xor
pop
cmp
xchg
sti
add
cmpsb
inc
jl
jae
dec
cld
mov
jne
add
repnz
jo
fmull
xchg
pop
inc
gs
and
lea
push
cmp
and
add
sbb
mull
sub
nop
add
jmp
aam
leave
add
repnz
in
sbbl
sub
ret
call
mov
cli
add
stos
js
cmpsb
out
jbe
push
test
enter
add
jb
inc
lock
inc
xchg
cltd
xor
nop
les
into
lods
stos
xor
shr
fwait
and
xchg
movsl
lds
in
lock
dec
inc
dec
push
add
push
cld
sub
and
mov
movb
sub
sbb
and
mov
aam
xor
dec
mov
pop
dec
push
dec
add
push
cwtl
sbb
xor
xchg
jmp
mov
add
sub
mov
enter
cmpsb
pop
add
es
cmp
mov
rolb
test
cmp
jbe
or
loopne
mov
add
sbb
imul
xor
lret
xor
or
dec
add
test
cmp
shrl
mov
cmp
mov
add
lock
loope
mov
popa
pause
and
adc
in
ss
add
pop
jo
cmp
fwait
aad
lcall
add
out
movsl
daa
cmp
fdiv
xchg
pop
in
je
or
xchg
inc
imul
push
cmp
lret
push
add
push
sub
inc
and
mov
jb
cwtl
mov
push
xor
pop
cld
push
dec
or
adcb
dec
dec
xchg
or
imul
rol
add
mov
aad
add
xchg
gs
add
mov
sub
and
add
xchg
jb
popa
mov
and
add
xlat
dec
cmp
or
mov
or
xor
in
dec
pusha
mov
push
mov
push
nop
sbb
or
add
inc
pop
mov
fisttps
add
adc
mov
cmpb
clc
and
inc
addb
fwait
inc
out
jo
sbb
jecxz
testb
pushf
add
daa
repnz
add
nop
add
fdivl
jo
push
jle
testb
mov
jbe
cmp
and
jnp
push
insl
in
sarl
std
in
xchg
add
jge
fsubrl
mov
xor
inc
adc
jb
add
test
and
int3
push
add
xchg
xor
js
mov
dec
jae
add
sub
pop
scas
pop
fists
xor
jg
mov
incb
mov
cmp
mov
add
subl
xor
push
popf
insb
mov
pop
dec
push
adc
sbb
dec
lods
push
insl
cmp
repnz
jg
push
cs
frstor
jl
aam
add
mov
xor
adc
pop
xchg
add
mov
mov
fcoms
lcall
xchg
xchg
cmp
add
xchg
call
cwtl
and
cmp
mov
ror
mov
lds
movsb
and
add
hlt
insl
imul
xor
test
or
int3
imul
jg
inc
gs
arpl
sub
jo
add
mov
cmp
push
pusha
mov
pop
add
pushf
sbb
add
aas
cmp
arpl
mov
stos
sahf
divl
lea
loopne
mov
imul
cmp
pop
add
sbb
xchg
push
call
lds
cmp
shrl
xchg
sbb
add
and
adc
test
xlat
test
push
sub
test
add
push
sar
loop
adc
add
mov
xchg
dec
fucomp
scas
cmc
xor
movb
cmp
into
add
mov
sti
and
imul
cmp
add
enter
dec
xor
push
cmp
scas
add
inc
add
jp
add
sub
push
jne
add
sbb
pop
cld
daa
add
mov
repz
aas
inc
lahf
scas
cwtl
sbb
orl
in
and
add
pop
and
xchg
xchg
jl
add
nop
lahf
std
fmull
jbe
jno
add
inc
jmp
popf
mov
int3
jo
dec
cwtl
repnz
push
jne
ficompl
dec
xor
xor
adc
add
mov
test
or
rcl
int
fcmovnb
jo
pop
push
insl
inc
add
aad
pusha
stc
mov
cmp
call
subb
scas
inc
cwtl
leave
dec
mov
rcr
ret
or
int3
dec
mov
inc
int
push
inc
clc
fdivr
fs
and
shr
mov
movsb
test
jl
jne
in
repz
fmull
adc
xchg
shl
stos
push
sarb
andb
push
jno
xchg
rcr
xor
mov
inc
sbb
mov
pop
dec
movsb
or
add
or
inc
cmp
lahf
add
icebp
adc
into
shl
dec
test
add
sahf
cmp
mov
add
mov
dec
rol
dec
in
push
add
jno,pn
add
mov
lret
xor
inc
cld
mov
aas
adc
dec
cltd
add
lods
xor
push
xchg
popf
jl
cmp
pusha
mov
stos
insb
fwait
add
xor
into
popf
and
repz
les
shrb
pop
pop
jns
push
dec
pop
sub
xor
std
add
cld
cmp
loope
les
andb
mov
aam
adc
jo
or
dec
xor
and
arpl
scas
jbe
loope
pop
sub
in
call
stc
mov
in
into
call
push
xor
and
daa
xor
imul
repz
fidivs
loopne
mov
jb
add
push
sahf
and
adc
xchg
rorl
xor
jge
out
mov
sub
push
xchg
shrb
outsl
es
mov
and
xchg
jg
xchg
ja
cmp
xor
idivl
inc
pushf
adc
or
jecxz
incl
sub
repnz
adc
pop
stc
call
xor
or
loope
push
outsb
pushf
add
cltd
fstpt
add
das
and
fldcw
out
pop
ss
inc
and
in
orl
or
sub
shrl
mov
in
adc
nop
add
lods
cwtl
mov
xchg
out
add
lock
mov
movsb
lds
jae
mov
xlat
add
leave
add
rclb
repnz
add
or
xor
loopne
pusha
cmp
adc
add
adc
add
xchg
daa
leave
mov
out
jno
shrb
jle
ja
inc
add
xor
xor
cmp
ret
xchg
xchg
inc
notb
subb
jnp
daa
mov
sbb
xchg
lea
test
xor
lea
call
out
mov
jp
adc
add
lea
push
pop
jnp
xchg
mov
add
inc
out
repz
sarl
fwait
dec
jg
movsl
fcomps
mov
inc
sub
add
hlt
xor
nop
mov
aam
rclb
xor
xor
push
pop
leave
int
add
movsb
ja
adc
and
xchg
and
inc
mov
add
push
repnz
dec
or
rclb
pop
xor
mov
fadds
mov
cmpsl
lcall
int
jl
push
mov
mov
loope
fisttpll
pop
hlt
add
mov
clc
lret
icebp
add
mov
int3
inc
rclb
inc
and
loop
or
repnz
ret
rclb
add
pushf
loop
loope
int3
insl
or
mov
fistpl
dec
adc
les
call
in
es
fs
xchg
dec
nop
js
sub
or
and
inc
push
jb
jno
fisubrs
cmpsl
lea
sub
ds
inc
mov
add
cmp
sub
adc
xchg
loope
mov
jne
test
shlb
inc
fs
add
mov
xchg
cmpb
inc
addb
cs
sbb
push
add
loope
pusha
mov
add
pop
or
jno
imul
mov
push
cltd
sub
cmpsb
test
cs
pop
jo
sub
inc
and
mov
adc
pusha
dec
loopne
cli
cmp
mov
cmp
pusha
mov
dec
and
lea
add
cld
faddp
ret
xchg
add
jbe
jns
aas
imul
jmp
insb
setno
sub
and
and
rclb
sbb
pop
faddl
xlat
or
cwtl
dec
sbb
sub
aam
aad
mov
jmp
sub
inc
notl
stos
gs
mov
adc
add
js
nop
sub
pop
sub
inc
jge
mov
jns
pop
jmp
xor
push
pop
lret
sub
stc
in
push
add
lods
fstpl
xor
pop
cwtl
faddl
mov
andb
rol
dec
xchg
in
pop
xorb
sub
and
cmc
cmp
xchg
subl
push
shr
ficompl
arpl
xor
cmp
xchg
mov
xor
mov
cltd
cmp
push
mov
adc
mov
and
imul
sarl
adc
mov
mov
fcomps
jno
push
inc
add
pop
xchg
jns
dec
xchg
int3
jo
jne
add
lds
nop
adc
test
and
add
and
mov
jp
add
subb
xor
cld
add
sbbb
mov
cmp
jl
sbb
push
push
add
iret
leave
pusha
lock
sbb
push
xor
push
mov
imul
in
sub
aam
movsl
push
pusha
test
add
and
pusha
aas
or
call
mov
f2xm1
repz
shlb
add
dec
jb
pop
repnz
dec
fwait
lret
xor
and
pop
and
mov
fmulp
and
add
jle
andb
mov
and
imul
jl
xor
add
mov
dec
sub
xor
xorb
mov
aaa
shl
pop
mov
dec
or
add
sub
sti
fsubl
pushf
es
cmp
iret
xchg
pop
imul
cmc
mov
fsubl
testl
andl
ror
lss
sub
xor
mov
ss
or
xchg
in
sub
addb
ret
sti
add
das
sbb
notb
pop
test
and
add
push
pop
in
add
outsl
fcmovu
push
cmp
xchg
jns
or
mov
jmp
add
and
add
push
in
push
enter
fstpl
mov
adc
xor
xor
outsl
and
sbb
ja
aas
dec
jecxz
pop
mov
cmp
sub
or
cltd
xchg
inc
add
mov
pop
and
xchg
out
sbb
or
pushf
mov
shrb
add
popw
mov
jge
xchg
mov
xor
int3
les
and
inc
fdivs
stos
mov
or
dec
cmp
push
lea
sbb
insb
or
add
add
sub
jmp
pop
cmpsl
add
fucom
pop
mov
in
mov
add
add
pop
fildll
xor
xchg
sub
ret
cmp
loopne
push
sub
mov
loopne
jno
add
imul
ret
mov
repnz
sub
jecxz
pop
xor
push
dec
orl
xchg
mov
movsl
jo
mov
insb
push
sti
xchg
xor
adcb
leave
pop
repnz
cmp
ret
hlt
insb
push
mov
inc
push
and
add
incl
xor
add
cmpsl
les
mov
add
jnp
mov
xor
push
cwtl
clc
push
lock
mov
in
xorl
sarb
sub
mov
loop
pop
push
dec
and
jmp
imul
neg
push
xor
mov
jle
loope
daa
je
lahf
insl
ljmp
bound
cmp
and
add
sub
cwtl
sub
hlt
add
mov
enter
pop
rcll
outsl
add
add
mov
jbe
shlb
pop
mov
mov
add
aam
cmpsl
or
ret
hlt
xor
lds
dec
add
mov
jae
scas
in
pop
out
and
subl
dec
inc
enter
xor
stc
arpl
testb
rolb
adc
sbb
pusha
rol
dec
mov
inc
in
cli
enter
neg
push
adc
or
xchg
call
fwait
cmp
sub
push
sbb
sub
in
es
or
jp
xlat
inc
push
jne
cwtl
es
jbe
aam
jle
pop
faddl
pop
stos
movb
inc
mov
bound
add
into
jns
and
enter
fs
cmpsb
cmp
rcl
movl
in
push
xor
sub
pusha
add
loop
adc
aad
fwait
push
enter
movsb
adc
add
pop
inc
movsl
or
xor
enter
lret
test
inc
jb
je
add
jae
fs
push
shlb
mov
adc
pop
add
testb
and
sbb
pop
faddl
sub
push
push
or
lea
jno
add
mov
roll
sti
cmp
jle
scas
dec
cmpsl
add
test
lock
loop
push
dec
popa
mov
xchg
mov
nop
and
out
add
std
jg
cmc
inc
repnz
packuswb
inc
roll
es
js
outsl
andb
hlt
cmp
dec
xchg
test
pop
ljmp
cmp
push
sarb
dec
pop
sti
add
or
loopne
test
test
ret
jbe
aam
fwait
aas
movsl
call
jecxz
test
out
cmp
xor
xor
xor
ja,pn
add
cwtl
adc
push
sahf
jl
lock
lds
mov
mov
ja
or
loope
sbb
mov
xchg
cmp
sbb
adc
test
fdivrl
mov
cld
and
add
cwtl
jge
mov
mov
xchg
out
dec
in
in
or
dec
xchg
push
call
sti
and
pop
shll
stos
scas
pushf
jo
jp
inc
push
outsb
inc
mov
nop
sarb
pop
les
daa
lods
cmp
sub
cmp
push
xchg
mov
pop
pop
das
xchg
lds
or
sbb
call
xchg
push
xchg
cmpsl
xor
add
fsubl
lock
inc
cmp
sbbb
mov
add
add
and
nop
lret
add
ljmp
add
adc
cmp
das
lea
out
mov
add
out
je
lret
repz
inc
add
pushf
cmp
sahf
loope
fdivrs
jne
cmp
mov
jp
jecxz
xchg
aas
mov
push
les
add
adc
sbb
popf
inc
cmp
mov
loop,pt
lock
xor
or
push
call
add
sbbl
push
mov
adc
add
inc
xchg
movsl
mov
and
cmpb
pop
mov
inc
mov
pop
jmp
movsb
add
andb
nop
std
repnz
add
in
lods
shld
das
xor
fs
add
shrl
jbe
ret
jecxz
xor
dec
push
add
ret
jg
lgdtl
or
and
orb
adc
fsubl
jae
jno
nop
cmpsl
and
cmc
or
pop
xor
push
mov
leave
sbb
inc
or
xchg
fistl
add
mov
out
repz
and
jo
inc
mov
and
std
add
mov
fnstenv
add
ret
lcall
jmp
lock
scas
push
xor
ja
and
or
jne
xchg
ljmp
add
push
fs
shrb
in
rorl
les
pop
or
lods
xorb
push
push
xchg
int3
pushf
pop
sub
cmp
xchg
mov
scas
xchg
dec
adc
push
lods
jg
out
or
push
xchg
inc
add
sbb
bound
push
add
ds
dec
sbb
or
dec
pop
cwtl
fs
mov
popa
int3
or
pop
add
leave
les
aad
mov
fbld
cmp
add
sbb
push
push
orb
push
das
add
push
outsl
cmp
and
sbb
sbb
adc
push
add
fisttpl
test
and
sbb
mov
jo
pop
sub
enter
cmp
ja
fninit
pop
enter
jle
inc
add
pop
das
daa
inc
sub
inc
mov
xchg
mov
aam
add
sbb
cmp
push
test
add
dec
loopne
repnz
mov
pop
push
sbb
pop
add
mov
mov
pop
bound
aaa
loopne
jo
pop
xor
insb
add
sbb
pop
mov
adc
mov
add
pop
xchg
push
cld
aaa
cmp
cmpsl
ret
sar
pushf
sbb
sub
mov
fbstp
sbb
push
jge
inc
or
mov
mov
test
out
xlat
pusha
mov
mov
cs
lods
inc
mov
push
adc
mov
sbb
mov
mov
xchg
fcomp
jo
sub
shrl
cwtl
shlb
push
testb
hlt
jle
outsl
mov
or
sub
adc
test
cld
xchg
add
mov
xchg
sti
sbbl
push
pop
xchg
add
andb
lcall
dec
lahf
add
lret
mov
mov
pop
out
or
inc
int3
add
push
sub
inc
lock
mov
push
adc
and
sbb
mov
sahf
int3
sbb
adc
iret
outsl
call
outsb
aam
add
ljmp
jbe
add
jge
outsl
cmp
mov
push
sub
push
bnd
fst
cmp
push
mov
sbb
lret
add
mov
add
div
arpl
push
lds
cwtl
mov
cmpl
std
push
dec
jae
adc
cli
sub
js
add
inc
addr16
rcr
sub
or
add
mov
xchg
inc
fcoms
adc
pop
out
into
cmp
loopne
mov
cmp
xor
inc
sarb
push
pop
jno
and
jns
push
fdivrl
mov
xor
xchg
push
sahf
mov
pop
ljmp
outsl
cmpsl
jo
xor
or
mov
sbb
sbb
push
sbb
xchg
push
fdivs
dec
mov
call
arpl
mov
mov
jno
mov
dec
lea
jbe
mov
push
sarb
arpl
sbb
xchg
mov
lcall
fs
pop
scas
lea
add
xchg
les
out
js
popa
pop
sub
dec
xchg
push
add
shll
push
out
jae
cmpsb
out
dec
xchg
sub
cwtl
mov
call
ret
sbb
inc
test
mov
arpl
sub
lcall
mov
rcl
mov
add
fwait
cmpsl
mov
jnp
jae
clc
xor
insb
push
mov
cld
rorb
or
add
es
xor
in
sarb
pop
jns
push
cmp
xchg
jmp
dec
add
cmp
mov
sarl
cmp
xor
inc
push
outsb
inc
inc
xchg
daa
add
mov
and
pop
sar
test
jge
pusha
xchg
add
or
jnp
add
sahf
bndldx
bound
add
loopne
ror
aas
cmpsb
out
or
xchg
mov
mov
pushf
add
mov
hlt
or
loopne
mov
add
sbb
cmpsl
dec
xchg
pop
test
movl
xlat
out
ds
roll
fdivl
adc
cmpsb
or
mov
xor
mov
mov
xchg
lahf
clc
ja
push
ds
shrl
add
fldcw
mov
repz
inc
mov
int3
jb
nop
push
mov
add
lods
or
mov
and
fcmove
add
or
xor
pop
add
test
shlb
pop
cmp
xor
sti
inc
and
outsb
lret
test
rcr
les
sahf
iret
fnstcw
jg
add
shll
outsb
mov
dec
inc
in
daa
pop
sarb
or
out
add
loop
mov
sub
loopne
fistps
lods
add
pop
sahf
out
fidivrl
mov
repz
xor
add
push
sbb
repnz
rcll
adc
cmp
orb
js
mov
or
adc
mov
nop
push
testb
dec
mov
gs
add
push
lret
ljmp
mov
push
mov
or
or
dec
adcl
mov
rorb
sbb
test
enter
xchg
or
mov
add
in
pop
xchg
mov
add
fsubp
sti
lcall
mov
call
xchg
xor
cltd
and
fldt
sbb
mov
ss
movsl
cmp
rcll
shl
andb
stc
xchg
sbbb
les
repz
ss
pop
sub
js
mov
daa
push
mov
repnz
lods
shlb
stc
in
orl
jmp
cs
rorl
fs
daa
jmp
mov
push
cmp
add
mov
in
or
cmp
add
sub
jmp
dec
pop
xchg
mov
shrb
or
imul
ja
mov
inc
pushf
out
inc
sbb
add
mov
dec
pusha
pop
js
jno
fmuls
mov
xchg
in
jns
adc
aam
add
call
adc
pop
xchg
sbb
jb
ljmp
cmp
stos
arpl
inc
in
rcr
roll
adc
dec
ss
or
inc
pusha
enter
popf
push
subb
mov
roll
mov
test
pop
lds
or
xchg
jno
mov
or
lret
loopne
cmpl
xor
add
xor
xor
fs
cmp
xor
jae
and
jne
or
lock
scas
cmp
inc
ret
inc
add
adc
sub
adc
or
pcmpeqd
push
mov
cmpsl
add
lret
mov
pop
dec
test
push
ds
push
iret
fmulp
arpl
filds
nop
pop
lock
fisubrl
add
imul
add
jle
add
dec
stos
push
xchg
lahf
aad
aas
int3
push
and
inc
and
mov
sbb
testb
mov
mov
nop
je
test
ja
jne
sarl
loopne
sbb
lret
fwait
push
mov
pop
andl
test
push
push
pusha
dec
add
sub
or
orl
and
jmp
andb
and
rolb
pop
lret
repz
fildll
push
add
cmpxchg
jno
shlb
ficomps
ss
cmp
add
push
mov
add
adc
push
pop
loope
cmp
sbb
cmc
cltd
jae
sbbl
mov
add
lock
or
cwtl
pushf
loop
popf
cltd
adc
shlb
je
cs
in
push
inc
jne
or
mov
mov
inc
mov
iret
cmp
dec
lods
out
int
mov
inc
sbb
lods
add
dec
mov
addl
clc
es
scas
enter
add
int3
cmp
add
jmp
scas
xlat
add
jb
pop
dec
push
faddl
sahf
or
sbbb
mov
pop
in
or
nop
push
cli
push
shll
cld
xor
mov
pop
fnstsw
popa
cmp
lods
push
adc
or
add
or
fistpll
dec
sub
fdiv
push
cli
mov
and
pop
loope
or
sub
out
xchg
xor
dec
imul
int
mov
enter
xlat
push
sbb
inc
add
mov
int
mov
sub
repnz
pusha
fstl
or
rcrb
fs
add
mov
jmp
ds
popa
test
clc
push
pop
lret
mov
das
rclb
test
shl
fsubs
inc
adc
enter
out
mov
stc
push
lock
or
imul
adc
push
adc
add
or
inc
rolb
fcoms
inc
add
outsb
enter
andl
xor
dec
inc
xchg
mov
add
sbb
jl
xor
xchg
imulb
xor
xchg
dec
popa
pusha
test
push
stc
or
out
xchg
add
mov
aad
inc
psadbw
xchg
aam
int3
lcall
gs
mov
dec
push
mov
outsb
sahf
jecxz
xor
orb
xchg
add
mov
push
pop
add
xchg
cmp
sbb
add
pushf
inc
dec
ret
popa
push
or
dec
mov
xchg
or
sbb
xor
addb
and
jae
nop
sbb
lret
out
push
jnp
add
jge
rorl
push
je
push
sbb
and
add
into
dec
xchg
movsb
sarb
inc
ja
add
pushf
inc
test
mov
ja
pusha
popf
stos
dec
xchg
lock
sub
xor
mov
repnz
or
movsb
add
push
cwtl
lock
aas
inc
jge
inc
sub
rcll
insl
add
lods
mov
adc
pavgb
add
mov
jne
inc
xchg
sbb
inc
cmp
jge
jle
sbb
xchg
mov
add
or
ljmp
sbb
enter
pop
shr
leave
xchg
add
and
adc
les
xor
mov
loope
divl
dec
xorb
cmovne
and
rorl
lret
pusha
outsb
xchg
add
mov
ret
and
in
hlt
movsb
lock
test
cmp
xchg
mov
or
add
mov
mov
jg
pop
aas
cmp
and
orb
hlt
cmp
adc
sub
mov
es
sqrtps
lret
pop
sub
ret
jo
sub
add
jnp
mov
out
movsb
or
mov
mov
sbb
and
xor
aam
jle
pop
sub
enter
sbb
mov
das
call
ljmp
fistpll
cwtl
add
movsb
push
pop
ja
movsl
cmp
scas
jne
loopne
and
mov
js
push
and
jno
mov
add
pop
aad
mov
mov
test
ds
gs
mov
outsl
push
in
inc
scas
add
dec
popl
sbb
add
or
imul
lds
jne
incb
add
out
jle
sti
adc
adc
and
test
shll
in
inc
lock
add
pop
rcr
addr16
add
or
jmp
mov
repnz
mov
or
dec
int3
sbb
add
jns
sbb
aaa
adc
mov
push
pushf
add
popa
int
repnz
add
dec
push
les
xor
test
out
cmpsb
lret
adc
push
lods
or
std
sbb
push
mov
add
int3
pop
mov
repnz
fidivrs
ja,pt
adc
pop
add
adc
or
cltd
add
push
mov
push
movsb
sbb
repz
jae
pop
push
pop
pusha
and
add
jle
je
pop
cli
push
mov
or
enter
mov
repz
test
add
out
sbb
popa
sbbb
push
rcr
and
inc
mov
js,pn
push
xchg
rcrl
xchg
lds
mov
sarl
inc
test
fcompl
sbb
mov
push
pop
addr16
mov
test
ret
xor
testl
pop
sub
icebp
jnp
test
or
push
int
data16
ret
xchg
jge
push
mov
mov
je
xchg
mov
jae
vcmpeq_uqps
mov
lahf
xor
sub
ds
and
mov
cwtl
cli
ljmp
std
inc
add
dec
lods
cmp
sub
and
pop
loop
inc
jle
ja
aad
outsb
fbstp
mov
enter
xor
sub
shll
fdiv
or
cmp
es
dec
aas
les
sub
adc
mov
add
push
mov
adc
mov
loope
add
xor
rorl
mov
cmp
or
pop
add
lea
mov
test
decb
cli
jne
dec
pop
xchg
mov
lock
push
or
xor
add
aas
ljmp
xchg
sub
mov
aas
sbb
in
sub
je
rorl
pop
adc
mov
push
mov
and
and
jp
or
jg
ja
push
and
mov
cwtl
push
add
adc
push
cmp
mov
lods
cs
push
lret
out
enter
xchg
jo
pop
push
adc
or
cmp
xor
sbbb
mov
jns
inc
adc
lea
sbb
inc
push
enter
pushf
add
xchg
pop
fnstcw
lret
fs
mov
scas
sbbb
loopne
repnz
sbb
mov
cmp
sti
insb
or
sbb
xchg
mov
dec
imul
movsb
outsl
dec
xchg
adc
dec
inc
inc
xchg
inc
add
or
pop
outsl
xor
popa
outsl
test
sub
add
push
xchg
fsubs
pop
pushf
jecxz
add
andl
pop
adc
int
dec
mov
add
xorl
mov
xchg
loope
mov
mov
mov
or
mov
lea
sbb
xor
jae
mov
in
sbb
adc
out
and
mov
push
daa
andl
add
sub
adc
add
int
or
dec
iret
sub
cmp
add
lods
cs
mov
pop
pop
pusha
push
loope
mov
fidivs
xchg
pusha
push
or
inc
sar
lcall
lock
dec
gs
or
add
stos
adc
inc
ret
cmp
add
cld
push
stc
dec
push
mov
mov
adc
pop
xor
add
push
adc
jmp
inc
iret
mov
aaa
daa
out
dec
int3
cmp
mov
stc
outsb
in
adc
insb
dec
and
sub
jbe
lock
and
jns
pusha
scas
pop
mov
inc
sbb
xchg
insl
sbb
cwtl
shr
push
loop
ret
add
imul
push
in
adc
xlat
jmp
dec
lahf
push
icebp
movd
test
lock
add
xor
mov
idiv
stos
mov
push
mov
xor
stos
and
jl
or
shlb
cmp
mov
sub
aam
push
mov
sub
fwait
inc
dec
not
lods
or
add
scas
pusha
call
mov
sbb
or
mov
cld
add
in
icebp
movsb
in
pusha
mov
or
dec
pop
ror
jb
cmp
adc
dec
test
mov
mov
mov
jp
imul
aam
js
push
pop
cmp
cld
push
cmp
mov
cmpsb
jmp
clc
add
ret
mov
pop
xchg
or
mov
add
push
and
mov
push
push
scas
addb
pusha
popa
mov
xchg
iret
call
lcall
mov
leave
mov
jnp
sbb
add
clc
mov
ds
imul
popf
cwtl
push
push
outsb
pop
inc
xchg
lret
and
sub
push
addr16
stos
add
rcll
adc
adc
push
ret
pop
sub
fsts
cmp
xchg
cld
ds
mov
push
mov
dec
or
sbb
add
mov
imul
push
pop
outsl
pop
pusha
jne
shll
add
int
cmp
sbb
pop
push
push
cmpsl
daa
and
inc
mov
call
popl
mov
lahf
lds
dec
push
roll
xchg
xchg
and
sbb
xor
test
adc
inc
daa
or
sbb
outsb
sar
popa
and
jns
xchg
sub
mov
jbe
dec
push
add
lea
add
jle
add
xchg
fldenv
imul
xchg
mov
and
sub
pop
out
fsubp
pop
cmp
loopne
iret
cmp
pop
aam
mov
lret
adc
xchg
test
sbb
add
jb
out
push
pop
lods
hlt
sar
adc
jmp
mov
aam
cmc
rorb
dec
insb
movsl
clc
inc
loope
and
ret
jge
imul
aas
mov
xor
xor
sbb
xchg
push
movsb
add
mov
das
lods
sub
and
mov
fsubl
pop
add
and
repnz
add
cmc
popa
sub
mov
mov
mov
lock
xchg
and
xchg
xor
sbb
dec
jle
add
je
fstps
jbe
mov
ficompl
add
jg
xlat
rorb
mov
bound
push
fcompl
jns
add
or
fstpt
adc
jb
mov
fsubrs
cmpsl
cli
mov
mov
mov
lds
dec
das
cld
pop
jg
or
inc
pop
dec
ret
dec
inc
push
inc
xchg
in
jle
xor
sbbl
pmulhuw
cld
adc
jae
cmp
hlt
jge
mov
xor
mov
push
testl
or
fwait
push
inc
push
xchg
ja
pop
mov
sub
inc
jns
add
loop
pop
cli
insb
xlat
xor
movsb
sub
int3
movsl
add
push
rolb
sub
push
push
call
int3
pop
mov
inc
sub
sub
add
cmpb
jne
movb
mov
push
push
push
push
call
add
mov
pop
pop
ret
push
mov
pusha
mov
mov
shr
mov
mov
jmp
xor
add
add
dec
or
jne
popa
leave
ret
mov
