sub
stos
push
or
cmc
cmp
movsb
ja
fadd
xor
cmpl
jae
mov
into
iret
dec
xchg
inc
sub
pushf
fwait
pop
add
gs
adc
icebp
repnz
sbb
xorl
push
std
xor
push
sbb
aam
cmpsl
cmp
sub
and
sub
jns
or
call
es
test
loopne
pop
into
adc
lock
cmpsb
sbbl
push
pushfw
addl
test
std
iret
jnp
mov
clc
call
add
adc
fnstenv
jo
mov
adc
stc
mov
xchg
test
mov
push
xchg
in
push
mov
or
mov
dec
shll
jg
push
push
xor
lods
enter
int
dec
int3
mov
jmp
dec
dec
jecxz
lods
and
insb
ja
or
into
jmp
arpl
sbb
test
sbb
sahf
adc
jge
adc
loopne
mov
vmaxsd
sbb
int
adc
or
ret
inc
fwait
scas
jne
xlat
mov
stc
or
pop
and
sbb
mov
cmp
stc
ss
divl
fmuls
repnz
xor
add
sub
popa
mov
scas
xchg
dec
stos
pushf
or
jno
push
test
xchg
sbb
aam
pop
stos
lret
imul
xor
into
ljmp
jmp
jg
jmp
and
adc
testl
stos
xchg
xchg
or
or
sbbl
mov
cmc
xor
stos
loopne
outsb
pop
or
test
insl
dec
xor
leave
ss
sub
mov
adc
mov
insb
dec
mov
mov
je
push
scas
sar
push
popf
clc
js
pushf
xchg
push
fstpt
btr
imul
mulb
push
cmpsl
clc
into
lret
lods
cwtl
mov
jmp
mov
in
sub
jno
scas
pop
insl
test
adc
xchg
sarb
in
lret
aam
jo,pn
mov
ffreep
sbb
mov
and
fmuls
add
xchg
inc
sbb
in
xchg
adc
sbb
aas
movsl
push
aad
mov
sbbl
hlt
outsl
dec
popa
inc
sub
lds
xlat
sub
loopne
test
pop
sub
movsb
pop
jne
in
es
xlat
out
lcall
push
jle
sbb
sahf
or
dec
lods
cltd
sbb
sahf
ret
mov
cmp
or
push
stos
fnstenv
inc
cmp
mov
xor
enter
insb
sbb
es
add
ret
daa
rclb
adc
shr
dec
push
cmc
repz
test
dec
xlat
bound
movsb
mov
icebp
add
sbb
aam
ret
lret
cmp
faddl
xor
clc
xor
or
mov
imul
leave
imul
ret
xor
or
dec
fdivl
movsl
add
rcrl
push
sbb
adc
cs
aas
mov
loop
sbbl
and
jle
xor
pop
cmp
mov
lods
shrb
pusha
js
imull
aas
push
insb
leave
cmp
lock
mov
dec
in
sbb
mov
gs
push
aaa
xlat
sub
xchg
push
rcrl
hlt
adc
or
cmp
jne
sbb
testl
sub
movsl
jl
aas
test
stos
fadd
and
cmp
addr16
sbb
in
xchg
and
loope
inc
xor
xor
add
clc
and
xor
in
fs
cmp
and
test
dec
lret
xor
sub
shl
sub
aas
cld
incl
in
lret
xchg
xchg
leave
fwait
add
pop
sub
inc
adc
or
das
hlt
mov
inc
adc
dec
imul
loopne
sbb
repnz
loop
xchg
mov
push
iret
cli
gs
aam
popa
sahf
movsb
jg
hlt
jnp
jle
push
insl
push
clc
outsl
inc
ret
fnstcw
mov
pop
jno
mov
movl
cld
pusha
div
sub
or
add
sub
repnz
insb
aaa
jne
hlt
cli
or
jg
dec
icebp
sub
ficomps
mov
idivb
aam
inc
jb
imul
dec
sub
es
ljmp
loopne
test
mov
scas
testb
cmp
add
aam
push
call
xor
test
cli
xorb
das
xchg
test
cmpsb
jg
sbb
leave
mov
mov
pop
mov
inc
dec
mov
cmp
imul
push
pusha
sub
xchg
adc
testb
push
lods
addr16
xor
addr16
and
xchg
fidivrs
cmp
and
adc
das
and
sbb
orl
cmp
repz
stos
testb
pop
mov
fdivs
into
and
pop
mov
test
cmp
pop
adc
shl
cmpsl
cmp
daa
pop
xchg
outsl
mov
push
inc
clc
jns
adc
fmul
pusha
mov
pop
jne
test
jmp
push
xor
idivb
aad
jne
add
sbb
pop
int
std
sub
mov
xchg
cmc
pusha
in
sub
test
jle
rclb
jno
sahf
testb
pop
xchg
lahf
inc
mov
divb
sub
cmc
pop
jg
fbld
out
adc
imul
setl
jp
in
dec
sbb
mov
sub
std
ja
in
shl
lea
addr16
out
loope
aaa
and
fwait
push
jno
test
scas
cmpsl
jno
loope
lret
adc
je
scas
mov
mov
push
dec
xor
iret
mov
cmp
dec
les
ds
ljmp
xchg
pushf
inc
push
icebp
mov
push
into
test
mov
mov
mov
mov
mov
xchg
xor
fldl
das
and
fimuls
icebp
ljmp
dec
mov
pop
outsl
lea
insl
xor
inc
pop
xor
enter
dec
sarb
and
lret
push
sbb
and
aad
dec
or
pop
pop
popf
add
clc
xchg
test
push
nop
xchg
scas
jne
subb
mov
xchg
push
sbb
dec
into
imul
test
clc
jl
xchg
int3
imul
je
sti
shrb
dec
rorl
fistpl
inc
nop
jnp
or
mov
sbb
mov
jns
jno
jg
dec
dec
push
insl
fs
int
movsl
pop
inc
pop
lcall
popa
adc
dec
movsb
lahf
shl
or
push
push
push
int
lcall
or
stos
mov
add
cmp
lds
insb
jns
in
stc
pop
sti
jbe
ret
cwtl
in
js
shlb
sub
pop
fidivrs
mov
sbb
push
mov
int3
or
sahf
repnz
mov
push
rolb
xor
sbb
jno
dec
out
adc
lods
and
mov
add
mov
add
es
push
subl
add
gs
lcall
adc
test
movsb
icebp
fsubrs
aas
xchg
mov
inc
mov
aam
aam
jg
orb
test
sti
push
lret
aaa
mov
xchg
xor
in
push
mov
jle
sbb
enter
imull
lret
jno
xchg
push
test
repz
addr16
jg
in
and
das
sub
adc
mov
push
push
mov
jno
pop
hlt
mov
jae
inc
daa
ljmp
mov
rolb
inc
mov
mov
or
daa
hlt
fcmovne
out
mov
lods
jp
divl
imul
es
cltd
das
repz
cwtl
xor
out
dec
insb
leave
and
in
or
or
jbe
mulb
add
gs
int
sbb
pop
mov
stos
add
or
dec
cmc
mov
inc
bound
popf
ror
lea
lock
sub
mov
je
clc
in
outsw
sti
lahf
push
jno
shll
cmp
xchg
jb
mov
jmp
and
mov
jmp
rorl
fcmovnbe
and
jmp
lret
test
xor
inc
dec
sub
outsl
inc
dec
lods
lret
cli
mov
mov
pop
add
cmp
fisttpl
mull
inc
xor
and
nopl
sub
mov
pusha
shrl
jns
ficoms
xor
mov
repz
jl
cmp
fmul
sbb
arpl
lods
jp
js
pop
lahf
add
movntq
out
mov
dec
push
call
sbb
push
add
int3
jno
jnp
insb
out
push
fdivr
adc
in
iret
nop
iret
xor
test
call
dec
lret
add
jmp
stc
imul
mov
addl
add
arpl
in
imul
repnz
push
pop
dec
fld
mov
dec
jl
shlb
cmc
icebp
xchg
loop
sarl
or
jmp
das
int3
adc
jno
xor
cli
add
mov
incl
sbb
inc
lods
test
mov
icebp
xlat
loop
scas
dec
push
xor
jns
sub
sub
cmpb
fwait
lret
addb
inc
insb
mov
arpl
adc
mov
cld
ljmp
push
test
mov
pushf
sbb
mov
fsubl
iret
cwtl
pop
ffreep
std
and
pop
add
fisubrs
push
or
mov
mov
push
pop
and
aad
xor
mov
addr16
aaa
xlat
mov
xlat
dec
push
xor
add
push
pop
ret
nop
adc
sbb
es
call
dec
mov
in
in
xlat
stc
mov
test
scas
iret
cmp
cli
int
addr16
mov
mov
lods
mov
adc
pushf
in
rcll
imul
aaa
dec
mov
insb
dec
outsb
mov
js
dec
adc
inc
and
xchg
mov
dec
xchg
add
jne
jle
shlb
add
data16
scas
pop
dec
push
add
sbb
mov
imul
inc
jl
jne
pop
sbb
sbb
jmp
push
cmp
call
into
sbb
lods
dec
imul
pop
pop
jbe
fsubl
inc
pusha
nop
je
pop
ret
ret
addr16
fwait
sbb
fs
mov
cmpsb
repnz
cmp
nop
fidivrl
add
ds
mov
cmc
dec
inc
xchg
out
aad
xor
pop
xchg
or
stc
test
xor
and
jecxz
stos
add
test
jo
ja
stos
and
imul
dec
inc
adc
fwait
and
sbb
pop
sbb
mov
out
adc
dec
test
pushf
inc
pop
mov
xchg
mov
cmp
adc
xchg
sahf
repz
loopne
xchg
nop
enter
add
mov
lahf
dec
adc
xchg
inc
xchg
imul
push
ret
stos
jmp
push
xchg
mov
xor
mov
clc
adc
and
or
jno
dec
les
inc
cmp
push
rolb
push
loope
push
fnstenv
sub
and
les
into
adc
lret
and
rcll
mov
lods
dec
cmpsb
sbb
jg
inc
aaa
jo
cmp
aam
or
insb
stos
jae
or
and
xchg
mov
es
pcmpgtb
gs
xchg
and
aaa
insl
pop
and
repnz
ljmp
popw
stc
mov
sbb
lcall
icebp
dec
mov
mov
jmp
ret
movsb
lret
popa
pusha
xor
cmp
xor
jp
rclb
adc
mov
roll
movsb
sub
aam
adc
mov
jnp
dec
push
in
out
das
mov
and
adc
xchg
lret
loop
lcall
lcall
xchg
xor
lods
cmc
cmp
xchg
inc
jg
test
jmp
stos
mov
mov
fwait
mov
push
rol
pop
lods
imul
lock
push
les
jecxz
rorb
out
test
mov
add
mov
mov
lods
xor
push
in
arpl
je
ret
push
aad
jecxz
lds
cmp
mov
std
mov
imul
mov
cmp
inc
mov
test
jns
inc
lds
fwait
out
cmpsb
pushf
ja
pop
cmpsb
gs
sahf
dec
std
sub
in
mov
and
stc
sbb
mov
scas
outsl
addl
ffreep
lea
outsb
sbb
jb
add
and
xchg
and
les
jo
mov
mov
cmp
xor
and
in
mov
xchg
out
xlat
fst
addr16
push
add
pop
cmpsb
jnp
or
lcall
insl
jg
ljmp
imul
pop
dec
push
scas
sbb
dec
or
cld
dec
dec
lock
jl
cmpb
xor
push
es
mov
jl
inc
mov
inc
enter
sbb
scas
xor
add
push
mov
pusha
mov
dec
sub
in
pop
in
leave
flds
scas
mov
cmp
bound
dec
pop
jmp
or
pop
pop
arpl
movsl
xchg
movsl
clc
insb
add
movsb
fwait
insb
in
in
js
outsb
pop
repz
inc
push
mov
inc
mov
or
cmpsb
inc
repnz
icebp
es
repnz
rorl
jo
aaa
mov
jne
mov
add
imul
add
lods
push
and
pop
and
mov
pop
xorl
adc
inc
mov
cli
stos
push
and
mov
xlat
fcmovnbe
arpl
mov
jmp
pop
mov
and
movsb
and
stos
testl
dec
data16
call
or
data16
dec
mov
mov
mov
aam
jmp
xchg
push
les
movsl
mov
jp
lods
adc
sahf
sbb
push
test
mov
dec
dec
pop
popf
sarl
mov
add
lcall
pop
and
xchg
lods
and
cmc
mov
dec
test
sub
repz
push
cli
mov
push
cvtpi2ps
test
mov
add
cmp
mov
jb
fidivrl
and
push
ljmp
cmpsl
out
adc
dec
jmp
out
lahf
mov
into
enter
xor
adc
js
idivl
inc
testl
jecxz
nop
in
adc
dec
sub
inc
push
dec
cmp
es
scas
cmpsb
call
in
add
in
push
and
jg
fwait
push
or
adc
adcl
loopne
pop
loop
xorb
data16
inc
add
cmpsb
cmp
xchg
gs
sub
fcoml
mov
dec
das
cmc
orb
fidivrl
jno
inc
jl
sbb
push
add
call
jbe
jae
das
lds
xor
adc
loope
pop
or
jno
or
cmp
jle
adc
out
out
es
pop
mov
aas
mov
movsl
fadds
shr
stos
or
je
xchg
and
sub
sbb
inc
push
push
mov
test
cmp
popf
gs
xchg
leave
push
mov
stos
pop
sbb
sbb
xchg
cmp
sbb
shrb
movsb
cmp
in
push
iret
jmp
cmp
jg
push
pusha
xor
data16
rcrb
push
inc
cmp
shr
jne
inc
mov
push
std
mov
cmpsl
fistps
jne
pop
out
icebp
push
xchg
push
xchg
inc
jae
jbe
jo
push
add
sbb
fstp
setbe
daa
lods
adc
pop
push
mov
pop
add
aaa
pop
into
xor
insl
xor
xchg
rol
jnp
int3
rclb
and
fldenv
jmp
jecxz
xorl
jle
pop
es
das
mov
pop
push
push
add
sbb
out
jl
cmp
sbb
enter
mov
adcl
sub
or
fmul
inc
into
je
adc
loopne
jae
sub
fdivs
inc
jae
and
outsl
out
push
push
xor
lods
add
inc
outsl
xchg
mov
inc
loop
sbb
sbb
ja
clc
test
outsb
iret
jmp
cmp
loopne
add
call
dec
or
lret
inc
mov
fmuls
pusha
ja
jg
adc
pop
dec
jbe
mov
out
lret
inc
push
aad
repnz
imul
cmp
sbb
jp
push
sbb
inc
add
cli
xor
jne
lods
dec
push
adc
mov
and
call
jnp
mov
xlat
sti
out
leave
lahf
pop
mov
cltd
and
sar
push
aaa
in
test
and
gs
inc
nop
movsb
push
xlat
inc
cmp
mov
jae
add
sbb
inc
xor
jle
insl
push
push
addr16
ljmp
std
out
mov
ja
cltd
inc
aas
jp
xchg
lock
aad
lods
push
cltd
cltd
jno
fstpl
sbb
xor
mull
xor
push
xorl
pop
cmp
pop
xchg
xchg
jns
in
push
xchg
jne
cmp
mov
cmp
mov
fnsave
mov
xor
mov
outsl
inc
xchg
imul
pop
xor
hlt
xchg
addr16
mov
sar
push
or
out
sub
jno
int3
test
pop
xchg
mov
inc
outsl
jne
xor
insl
mov
imul
test
inc
mov
pop
repnz
push
jle
cs
jecxz
outsl
pop
xchg
rcrb
aam
rorb
push
cwtl
jb
fildll
jge
stos
jnp
insb
xorl
and
inc
daa
cmp
pusha
sub
movsl
mov
popa
popf
outsb
ss
push
leave
sti
int3
movsl
sub
inc
iret
mov
shrl
and
mov
adc
fidivrl
pop
ret
dec
clc
mov
orl
stos
cld
pop
mov
mov
inc
stc
cmc
ja
addr16
jne
mov
das
xlat
add
and
dec
jecxz
incb
sbb
mov
jne
dec
and
sbb
inc
ret
mov
mov
pusha
add
xchg
ret
cmp
adcl
ret
sbb
add
cwtl
mov
pop
pop
jecxz
and
sub
pop
mov
xchg
lods
xchg
call
xchg
inc
adc
xchg
adc
lods
ja
sub
add
mov
mov
mov
mov
mov
or
adc
shrb
fdiv
fmull
xchg
and
mul
xchg
pop
mov
das
dec
mov
clc
lds
mov
jno
loop
clc
sub
dec
loopne
jns
std
pop
loop
pusha
lret
push
mov
and
or
outsl
xor
mov
outsl
inc
mov
loopne
jl
mov
inc
mov
mov
xor
jp
add
daa
out
and
in
mov
bnd
iret
fisttpl
xchg
loopne
repnz
push
stc
push
mov
and
cmp
push
pushl
dec
ror
popf
arpl
out
outsl
into
icebp
rcll
xor
xor
xchg
out
adc
and
shrb
jns
call
in
fiadds
xlat
cli
xlat
jle
inc
into
mov
inc
dec
mov
into
cmp
pop
shlb
clc
fwait
shll
dec
or
mov
stos
movsb
rcll
mov
lds
or
mov
sbb
cmp
call
and
adc
mov
imul
sbb
jmp
gs
lahf
test
mov
repnz
daa
push
cmp
int3
dec
loope
cmpsl
mov
ja
sbb
iret
cmp
out
cmp
sub
pop
mov
mov
xor
sub
mov
shl
es
mov
sarl
fists
mov
cli
faddl
cmc
xor
shlb
fwait
add
int3
lods
inc
cmp
stc
lcall
sarl
xor
jecxz
mov
stc
movsl
pop
int3
out
inc
aam
and
stos
fs
fadds
stos
add
xor
cmc
insl
dec
push
in
dec
pop
loopne
push
scas
sub
lods
lahf
aad
xlat
fiaddl
and
shll
es
mov
scas
out
addl
mov
and
punpckldq
push
fmul
or
jbe
mov
fdivs
into
test
dec
push
fwait
nop
cmp
cltd
std
adc
in
jle
fnstsw
inc
outsl
clc
push
sub
xchg
es
sub
out
stc
outsl
sub
in
cli
testl
pop
mov
or
icebp
aas
aas
adc
pusha
and
repnz
dec
mov
repz
sahf
sbb
lock
adc
not
sub
sbb
pop
push
gs
xor
pop
inc
dec
nop
daa
lcall
push
xorl
sbb
and
and
in
dec
repnz
jge
add
jno
mov
jecxz
jge
clc
mov
mov
pop
add
lods
call
pop
xor
dec
outsb
ja
and
fstpl
pop
push
add
mov
push
shl
repz
push
mov
pusha
je
fs
push
fadd
xlat
adc
adc
imul
loope
dec
insl
std
jmp
or
aam
shll
jp
pop
xor
test
fsubr
jp
loop
mov
scas
sbb
jg
and
mov
or
add
mov
enter
rcrl
sysenter
push
lahf
or
mov
add
loope
orl
dec
xor
and
stos
popf
leave
fidivl
add
xchg
sbb
jnp
add
xchg
push
and
lods
repnz
inc
jge
cli
fcmove
sarl
sbb
cmpsb
aam
pop
push
dec
mov
loopne
xor
lcall
loope
push
pop
lret
iret
test
leave
xor
jbe
lods
leave
add
addr16
jp
mov
in
fmull
lcall
jno
aad
ja
jo
loopne,pn
cli
mov
adc
idivl
mov
push
in
pusha
push
mov
xchg
cmp
pop
mov
xorl
js
sub
push
popf
lods
xor
repnz
lea
add
mov
dec
jae
daa
repnz
adc
test
loopne
addr16
fwait
or
loopne
or
push
popf
bound
push
push
add
cmp
ss
movsb
push
push
mov
pop
aas
xor
inc
cmp
xor
repz
lds
sahf
imulb
sub
inc
ss
dec
push
push
aad
push
jl
sbb
jne
stc
cmp
jbe
pop
mov
mov
mov
mov
psrld
shll
and
fnstcw
add
jmp
lods
xchg
and
cmp
jne
lods
imul
arpl
data16
cmp
test
adc
mov
xchg
lods
adc
adcb
mov
xor
in
jnp
insl
sbb
sbb
loope
sbb
add
cmp
jnp
daa
aaa
jle
mov
fwait
mov
xchg
clc
ret
ss
loopne
cmpl
cwtl
in
aaa
rcrl
mov
or
stos
mov
adc
es
dec
or
and
rcrb
stos
pop
aas
mov
jg
imul
aam
pop
je
pop
lea
mov
neg
jne
push
enter
sarb
pop
mov
jb
dec
pop
pop
lea
fnstcw
les
insl
sbb
int3
rcrb
pop
std
sub
gs
sub
nop
cmp
in
xchg
mov
lret
jle
xchg
push
leave
cmpsb
addr16
lcall
sbb
stos
in
mov
mov
pop
xchg
xchg
xor
repz
or
leave
pop
sbb
orb
mov
loopne
sbb
mov
sbb
iret
cmp
rcrb
andb
clc
jo
int3
mov
imulb
push
std
jp
fwait
push
icebp
mov
adc
pusha
add
pop
shlb
xor
sbb
jle
out
faddl
aam
or
mov
cmp
into
int3
mov
cwtl
shll
sbb
sub
jg
outsb
fucom
and
fildl
movsl
mov
mov
sub
sbb
inc
andb
mov
mov
lds
cmp
xor
adc
jb
ss
ja
faddl
inc
inc
push
mov
dec
mov
push
and
xor
push
sbb
cld
xchg
outsl
pop
mov
imul
pop
mulb
mov
xchg
fwait
and
mov
xor
outsb
iret
xor
xchg
fisttps
sub
into
cmpsb
jp
aas
frstor
or
mov
mov
and
daa
inc
push
dec
sub
jl
test
dec
xchg
sub
push
or
loop
xchg
or
and
cmp
lret
xchg
hlt
test
push
js
sti
fisttpl
nop
and
pop
movsl
add
xchg
add
fdivl
cmc
xchg
lock
sbb
sbb
sub
jo
inc
dec
mov
test
arpl
loope
pop
sub
and
stos
cli
icebp
add
movsb
fnstcw
add
mov
mov
pushl
dec
xor
sub
inc
mov
repz
or
fwait
popf
and
sar
mov
enter
cmp
ss
repz
pop
arpl
in
push
inc
add
lock
mov
push
push
lret
imul
mov
scas
out
fistps
pop
loope
enter
or
xchg
lcall
jne
inc
fidivs
test
mov
fildll
lock
cmpsb
pop
and
dec
adc
cmp
cmp
jge
fisubl
aad
rorl
mov
inc
pop
test
sbb
cmp
in
lods
add
stos
rorl
ja
inc
stos
gs
out
out
mov
or
mov
jp
int3
xchg
cmp
and
aas
xor
jb
int3
out
stc
outsb
push
mov
mov
push
push
insb
cs
mov
jmp
add
sarb
xchg
jb
gs
popf
cmpb
ss
icebp
sub
shll
jno
pop
jnp
ds
jb
pop
out
xor
inc
mov
fstps
enter
pop
test
gs
ret
mov
lret
mov
lcall
ds
jnp
mov
into
sub
lock
cmpsb
mov
sbb
js
ss
dec
enter
xchg
ja
andl
sub
xor
xchg
sub
lcall
xchg
loope
cmp
push
and
stos
out
and
subl
sbb
jae
lods
subb
push
outsb
aas
gs
sub
test
fsubs
or
inc
inc
mov
roll
jae
add
xor
insb
inc
mov
xchg
dec
stc
sbbb
cltd
or
pop
mov
stos
test
pop
in
rcrl
mov
sbb
add
rcl
lods
sarl
and
fisubrs
movsb
sbb
push
int3
sar
push
test
sub
dec
pop
scas
sahf
test
push
push
pop
adc
scas
push
jnp
ret
cmp
repz
dec
jge
add
loop
or
xor
es
cmpl
clc
aas
push
adc
lret
mov
out
cs
cmp
dec
add
ret
das
add
sbb
pop
or
jge
sbb
sbb
movsl
adc
es
in
and
push
adc
fcoml
add
add
popa
cmp
or
jle
repz
mov
push
scas
dec
add
ds
mov
mov
cli
stos
xor
in
fcmovne
movsb
test
in
loop
pop
outsb
push
inc
imul
inc
int
mov
out
repz
mov
mov
mov
dec
add
jg
mov
popf
inc
pop
movsb
mov
push
sbb
fs
cmp
add
pop
aaa
fistpll
loope
bound
cmpsb
repnz
push
adc
fistpll
je
and
and
std
lds
les
and
les
sahf
mov
jp
ds
stc
je
stos
pop
cmc
std
mov
xor
mov
hlt
test
rcrl
dec
xchg
lock
xor
leave
dec
sub
loope
dec
dec
mov
cmp
je
lock
cmc
js
sarb
mov
cmp
inc
loop
scas
mov
rorl
in
clc
xor
stos
insl
mov
popl
pop
fstp
pop
fiaddl
aad
mov
loope
or
addl
add
push
inc
in
bound
lds
xchg
pop
aaa
xchg
xchg
sbb
or
jb
in
rol
mov
jl
cmp
ljmp
clc
cmc
ror
decl
sbb
inc
jmp
sbb
xor
mov
or
lret
jp
xchg
add
adc
test
jg
ret
popf
repz
inc
insb
mov
arpl
rorb
inc
icebp
add
jnp
je
push
mov
adc
lret
mov
fs
jmp
sbb
adc
jae
mov
clc
movsl
ret
jmp
pop
in
mov
jo
arpl
cld
inc
or
sub
sbb
rcl
dec
fists
inc
leave
and
push
leave
cld
fisubs
dec
xor
std
pop
das
mov
fs
xchg
pop
mov
adc
ror
mov
xor
out
dec
push
dec
cltd
or
mov
mov
dec
mov
ja
dec
cli
sbb
inc
or
outsl
mov
in
addr16
mov
pop
or
bound
push
es
inc
ficoms
test
bndldx
loope
pop
mul
adc
jle
repnz
add
mov
or
jge
insl
xchg
outsl
push
lret
dec
enter
cmpsl
sbb
xchg
adc
in
and
test
inc
xorb
pusha
xchg
mov
inc
lret
xchg
cmp
cmpl
mov
or
lock
scas
pop
add
sbb
lods
in
or
pop
xor
imul
js
and
imul
in
hlt
pop
shll
pop
mov
jmp
out
pop
sbb
pusha
push
dec
pop
add
adc
jo
or
iret
adc
ljmp
xor
lahf
sub
pop
add
sbb
jbe
jno
test
mov
out
jae
jnp
xor
add
jae
aam
mov
in
pop
imul
daa
ja
fadd
mov
out
rorb
xchg
pusha
xor
sbb
jmp
and
pop
es
xchg
das
adc
cli
ret
in
jge
mov
mov
adc
inc
xor
ss
rorl
aaa
roll
stc
mov
dec
push
adc
push
in
popf
incb
popa
ljmp
loope
and
bound
int
cmp
inc
lods
cs
push
scas
add
jmp
mov
popl
in
scas
push
js
jns
aas
cmp
fldt
shll
sub
sub
push
cmp
xchg
ret
jo
in
aad
jmp
add
add
push
inc
orl
adc
add
stc
stos
lods
loopne
pushf
daa
enter
pop
in
stos
push
push
inc
jns
into
lds
rcll
push
xor
pushf
das
ljmp
ss
inc
repz
ss
aas
jmp
sbb
inc
pop
pop
push
es
jp
insb
cmc
sbbl
adc
dec
adc
cmp
lret
sarl
mov
repz
push
test
jle
inc
fisubs
push
sub
int3
andl
mov
cwtl
push
out
fnsave
orb
pop
mov
adc
jge
daa
sub
rolb
xor
ja
xchg
push
jo
mov
fmuls
jle
pop
insb
and
adc
shr
cmpsl
mov
lahf
sahf
inc
sbb
jnp
leave
shlb
pop
shlb
inc
mov
hlt
or
dec
lahf
cs
pop
cmpsl
sbb
cmove
xor
lods
adc
int
xor
rcrl
notb
pop
cli
stc
cld
ret
outsl
xor
out
jmp
add
das
jmp
lret
aam
add
dec
ja
jp
cli
xchg
and
cmpsl
lret
fwait
mov
adc
xchg
jmp
nop
inc
test
xor
call
shrl
mov
jmp
cwtl
and
pop
lret
aad
inc
sbb
sub
movsl
adc
fs
cmp
push
pushf
mov
add
cmp
aaa
movb
push
ret
mov
repnz
cli
shll
pop
push
jecxz
insb
ss
mov
ror
push
or
pop
push
inc
xlat
inc
cmpsl
jl
mov
pop
testl
or
lret
jo
cwtl
mov
add
andnps
stos
sbb
add
sub
imul
rcrb
iret
sarb
fwait
mov
test
lar
add
in
jnp
pop
inc
cmp
insl
daa
sahf
mov
xlat
ja
ja
lods
pop
inc
orb
cmp
out
pusha
xor
int
mov
inc
fiadds
subps
fldcw
add
addr16
jo
repz
nop
dec
dec
xor
add
xlat
or
in
inc
outsb
adc
daa
jge
cs
clc
cmp
or
lret
mov
pop
imul
scas
pop
lret
cmpsl
fwait
xor
aaa
clc
test
in
mov
adc
dec
or
mov
pop
es
pop
mull
popa
fwait
adc
fcoml
xor
enter
mov
mov
cmp
fdivrs
cmp
test
mov
shrl
or
mov
sub
rcr
into
mov
adc
arpl
xchg
stos
test
sarb
push
shlb
dec
mov
nop
rclb
cwtl
ljmp
pop
test
in
into
arpl
inc
enter
dec
jmp
jne
rorb
call
loop
int
stc
sbb
add
popf
xor
enter
and
or
test
call
mov
dec
fsubr
cld
or
jge
loope
xchg
mov
mov
inc
pop
dec
data16
popf
pop
test
sti
mov
imul
dec
imul
fs
sub
stos
inc
push
sti
jae
jl
cmp
sarb
add
pop
cltd
mov
shlb
push
adcl
sbb
pop
and
cmc
outsb
in
scas
adc
jmp
xor
pop
in
pusha
bound
dec
and
test
add
jae
inc
mov
xor
sbb
xor
cs
cli
xchg
pusha
cmp
cltd
mov
shll
xor
cmp
push
cmp
pop
test
pop
add
mov
shlb
dec
xor
in
push
adc
jnp
or
mov
push
and
testl
cmp
push
out
inc
xorl
shld
cmc
mov
adcb
leave
arpl
iret
jns
out
xchg
lds
fldl
add
cs
xor
int3
dec
add
add
or
loopne
insb
pop
lea
ja
adcl
std
cld
xchg
mov
fisttpll
lret
xchg
scas
and
add
jmp
mov
shll
fisttpll
ror
xchg
lock
popf
sub
enter
fistpll
ret
push
jmp
jbe
sub
mov
dec
pop
xor
push
mov
jb
test
ficomps
cld
cmp
sub
push
rclb
ds
test
insb
in
jno
lock
xor
mov
add
cmp
and
mov
test
lcall
lcall
push
clc
call
je
mov
mov
adc
icebp
dec
leave
and
xorb
adc
subb
or
cmp
mov
pop
movsl
pop
leave
mov
xchg
imul
inc
or
pop
popl
sbb
cmpsb
mov
ja
adc
mov
loope
out
xchg
dec
cmc
lods
out
hlt
and
or
insb
fisttpl
inc
add
or
ljmp
sbb
lods
xlat
fdiv
orl
lods
stos
ss
dec
scas
xchg
xor
ficomps
lds
lret
shll
sbb
mov
mov
cmp
ljmp
pop
cwtl
fcmovnbe
adc
in
xchg
cmpsl
cs
sub
cs
dec
movsl
sarb
clc
fildll
test
scas
loopne
mov
pop
push
fildl
shlb
push
sbb
adc
enter
out
or
out
push
mov
outsl
shrl
jp
mov
in
mov
sub
push
xor
jg
pop
bnd
ret
out
nop
mov
mov
and
xor
rcrb
adcb
xchg
fsub
pop
cmpl
or
adc
js
addr16
pop
out
mov
fsts
sub
mov
mov
adc
cwtl
lock
pop
xchg
pushf
or
adc
jl
cmc
je
int3
movsl
xchg
inc
mov
andl
aaa
aad
out
sbb
outsb
je
aam
xchg
int
jnp
pop
lock
jge
xchg
mov
sub
outsb
jno
inc
lcall
inc
mov
sbb
jb
xor
adc
out
clc
pop
fsubp
sub
push
orl
aas
lret
xor
cmp
jg
dec
xchg
clc
mulb
addr16
sub
pop
ds
leave
mov
arpl
stc
mov
lahf
insl
dec
cmpsb
sbb
pop
cwtl
xor
in
or
fstl
dec
cmp
jle
mov
loopne
xchg
adc
lds
xor
inc
in
ja
xchg
jg
js
popa
xor
jns
sti
sti
mov
jb
jae
std
sahf
out
mov
fldt
cs
dec
loopne
imul
and
dec
and
pop
in
xchg
xor
leave
rcll
xor
sbb
insb
jb
or
test
add
inc
mov
loope
dec
jmp
inc
push
test
dec
fcompl
inc
movsl
out
dec
leave
jg
loopne
mov
test
in
jecxz
into
jns
rcl
inc
jmp
test
ret
sbb
ja
stos
cmp
fnstenv
ja
addr16
les
or
cmp
pop
jle,pt
pop
clc
sub
mov
ret
call
cmp
sub
shrb
sub
xchg
adc
negl
in
lret
in
je
test
sub
and
pusha
jl
rcll
cltd
sub
filds
or
call
xchg
push
scas
add
add
rcrb
shrb
shrb
out
stc
inc
push
lds
or
jp
push
or
dec
arpl
insl
popf
add
addr16
mov
das
cs
cmp
sbb
stos
cltd
mov
sub
xchg
cmp
fcomip
cmp
out
xor
sbb
pusha
scas
jb
and
pop
sub
and
sbb
xchg
aaa
js
rcll
push
xchg
das
aad
and
aaa
jno
mov
lea
cmpsl
dec
subb
pushf
inc
into
lahf
mov
rcrb
pushf
add
mov
mov
push
lods
cmp
inc
mov
or
mov
mov
fucom
mov
push
jge
mov
loopne
std
pop
idivb
and
pushl
dec
xor
pop
pop
cs
in
dec
testb
or
add
out
mov
es
dec
xchg
pusha
dec
popa
pop
mov
jno
jp
arpl
push
inc
jno
xor
dec
ds
outsb
fcompl
push
insb
and
test
notl
jns
mov
insb
push
int3
cmp
fnstsw
sub
out
xorl
loope
sub
pop
dec
jne
imul
xchg
rol
cmpsl
inc
aam
xchg
ja
xlat
jp
out
int3
je
xchg
jbe
rcll
jp
xor
mov
jae
mov
or
popf
mov
push
popf
adc
je
fsubr
test
push
shrl
pop
cld
jbe
xor
pushf
dec
or
rcl
repnz
lock
pcmpgtd
push
fldt
sbb
push
testl
inc
jge
and
pusha
push
pusha
popa
jno
lret
mov
adc
xor
clc
jg
out
mov
xchg
mov
or
call
mulps
shl
pop
dec
cltd
in
out
xor
ja
outsb
sbb
mov
int
aaa
icebp
lods
sub
xor
arpl
adcl
and
jge
es
outsb
jmp
jge
aas
lret
jl
or
rorl
adc
adcl
sub
push
ja
je
int3
inc
lods
stos
xchg
cmp
jo
fwait
cmp
out
add
imul
mov
dec
push
std
pop
icebp
xchg
jle
sub
push
jae
pop
call
mov
xchg
cmpsb
scas
imul
leave
js
mov
or
sarl
jno
aaa
cs
mov
outsb
or
push
jnp
lods
aam
sub
divb
out
jae
add
adc
sbb
mul
push
pop
ljmp
lock
addr16
jmp
add
xchg
lea
push
lret
clc
jmp
xor
test
andb
push
test
pop
or
out
push
fstpt
push
sbb
pop
mov
pop
call
inc
out
sbb
fmuls
or
scas
xlat
mov
jnp
dec
sub
inc
aad
addr16
xchg
adc
mov
call
xor
xchg
sbb
cwtl
push
insb
jle
xchg
jnp
pop
into
pop
jae
stos
mov
jl
loope
std
icebp
enter
shr
or
lods
adc
mov
and
adc
pop
mov
lds
cld
sbb
pop
inc
mov
ljmp
aad
in
inc
repnz
sti
filds
or
stos
jb
loope
and
in
psubusb
andl
add
add
repnz
mov
out
xchg
sahf
pushf
add
mov
shlb
or
push
sub
popf
aam
mov
adc
pop
ja
clc
jle
lds
sbb
and
xchg
clc
fisubl
push
clc
jg
dec
in
cmp
sub
dec
ja
mov
xor
jmp
out
push
jno
sbb
lods
mov
fadds
data16
cwtl
xchg
insb
test
sbb
add
lret
sti
xor
mov
xor
mov
rclb
repz
ds
fcoml
jl
or
lock
pop
cld
inc
mov
and
test
and
sub
imul
fidivl
int
jmp
xchg
ror
orl
xlat
mov
sti
leave
sbb
sbb
pop
pop
mov
push
inc
mov
faddl
lret
xlat
mov
loop
jb
or
movsb
mov
cmpsb
xchg
push
or
ret
int3
sbb
mov
mov
cli
call
test
or
lahf
or
pusha
ret
fwait
mov
cld
xor
dec
sub
pop
mov
aad
push
sub
sub
jbe
and
xor
test
les
lret
or
inc
dec
dec
int3
repz
movsb
lds
add
mov
mov
mov
arpl
lods
sarl
out
out
in
xor
cmp
stos
xor
sub
xchg
shl
push
in
in
mov
push
adc
and
sahf
jnp
popa
mov
rol
daa
xchg
add
cmp
push
xchg
lret
mov
jno
cmp
into
lret
bound
inc
mov
out
fdivl
jbe
push
mov
mov
cmp
xor
push
dec
and
std
pusha
icebp
or
inc
sti
movsb
enter
int
adc
stos
or
int
mov
sub
iret
test
xor
loop
pop
sbbl
stos
push
dec
push
push
call
stos
ds
adc
cwtl
incl
repnz
mov
push
dec
mov
sub
mov
nop
daa
mov
int3
or
dec
sub
push
test
fildl
sub
mov
loope
xchg
xchg
push
fs
stos
xlat
and
jb
sahf
add
pop
in
pop
jns
and
sbb
or
lds
and
outsl
scas
ret
std
lods
lret
mov
in
push
jl
jne
cld
ja
add
aaa
mov
adc
sbb
mov
aam
es
ret
and
xor
in
xlat
pop
movsl
jecxz
dec
fisubl
pop
sbb
pop
push
movsl
or
xchg
hlt
inc
pop
jbe
cld
insl
gs
xor
push
cmp
mov
add
mov
add
adc
cmp
add
xchg
xor
into
ljmp
and
out
and
cmp
xchg
iret
xor
jbe
dec
mov
add
hlt
jle
ds
xchg
push
lret
das
mov
inc
jne
inc
add
xor
out
dec
dec
aad
xchg
in
rolb
adc
cmpsb
mov
push
sbbb
ret
xchg
jns
mov
adc
pop
outsl
arpl
rclb
lds
lods
ror
xchg
push
in
aam
js
popf
push
cmc
sbb
xor
pop
out
movsl
lret
pop
fstps
sbb
pop
daa
cmp
fidivs
rolb
jne
mov
arpl
loope
add
mov
xorl
add
inc
mov
lea
mov
int3
adc
test
or
add
and
iret
insl
addr16
mov
scas
mov
jecxz
xchg
mov
push
cs
pop
pop
loope
call
lds
mov
leave
mov
fmul
out
adc
ljmp
and
das
push
lods
mov
push
pop
dec
or
jle
jnp
ficoml
into
mov
mov
or
jg
add
lods
aad
jnp
sub
sub
test
xrelease
xchg
xchg
mov
fdivrl
into
cmp
testb
push
cli
test
push
dec
loopne
icebp
push
icebp
pop
or
pop
and
adc
mov
mov
ss
shlb
inc
fcomi
mulb
add
add
jg
sub
inc
cs
inc
arpl
push
stos
out
sub
mov
cmp
mov
mov
sbb
gs
ja
ljmp
dec
cmpsb
fistpll
push
mov
dec
rcll
push
adc
adc
dec
test
add
mov
in
sub
sti
jle
lret
int
dec
cmp
stos
xchg
sub
popf
mov
or
or
or
call
scas
sub
lock
sbb
std
out
clc
shll
into
mov
movsb
xor
mov
pop
push
sub
test
in
loop
and
lret
xor
ja
mov
add
push
sbb
and
negb
mov
leave
pop
clc
lea
std
dec
pop
jl
adc
or
push
cld
mov
gs
int3
or
xchg
aas
sahf
sbb
pop
lds
stos
fwait
lods
jbe
mov
dec
mov
mov
mov
push
mov
fstpt
inc
sub
out
mov
cmc
repnz
or
mov
cmp
adc
gs
and
rorb
mov
mov
add
cmp
cmpsb
mov
adc
push
aam
outsb
push
dec
jno
in
stc
fs
cmpsl
add
xor
push
lods
and
add
scas
cmpsb
xchg
mov
inc
mov
in
aas
sbb
add
pop
jno
aad
lods
cmp
mov
out
insl
outsb
fadds
and
mov
ret
mov
sub
jp
imul
bound
data16
and
and
loopne
mov
sbb
xor
insl
popa
dec
cmpsl
cmp
int
dec
mov
sub
dec
or
imul
addr16
add
loope
mov
rcl
ret
jmp
in
inc
xchg
mov
popa
js
inc
push
xor
inc
mov
push
inc
and
fld
mov
dec
mov
xor
xchg
adc
shr
pushf
jne
repz
xchg
popa
dec
jg
pushf
push
sub
jl
add
mov
push
jb
ss
insb
subb
mov
jb
push
fists
fadds
mov
fists
xor
lods
xor
out
cwtl
mov
mov
incl
inc
and
mov
test
pop
filds
xchg
sub
cld
ljmp
add
hlt
test
cli
mov
xchg
push
ljmp
sub
repnz
daa
cmpsl
or
popa
sbb
cmpsb
xchg
loop
xchg
pop
or
int3
stos
push
sbb
les
pusha
out
popa
cld
test
lcall
xchg
and
test
push
fnstcw
mov
pop
mov
mov
or
xor
std
mov
cmpb
xor
and
push
fnstcw
test
mov
cmpsl
xchg
hlt
mov
or
shrb
push
cmp
sbb
mov
xchg
pop
clc
std
hlt
mov
jne
loop
call
adc
das
aas
or
push
xor
pop
insl
sub
lds
cmc
mov
pusha
push
xor
addr16
and
add
mov
cmc
in
xorl
jb
sbb
jg
xchg
mov
pop
cmp
inc
outsl
dec
add
in
movsl
jns
cmp
mov
pop
test
shrl
or
fsub
stos
bound
pop
mov
loopne
adc
mov
sub
stos
add
shrl
push
or
loope
pushf
inc
cmc
jno
add
gs
add
cld
xchg
or
int3
lcall
into
inc
aad
iret
push
cmpsl
xchg
and
rclb
jae
aaa
pushf
mov
add
and
loope
cwtl
pop
mov
pop
enter
imul
shll
fwait
loopne
cmp
leave
cmp
mov
add
sbbb
gs
into
ffree
lea
insl
pop
sub
xchg
ficoml
sub
pop
cmp
fstpt
cmc
sbb
adc
inc
movb
push
cmp
xor
push
inc
lea
std
lcall
sti
add
cld
push
xchg
nop
inc
repz
mov
icebp
das
sbb
push
adc
adc
std
jmp
pop
sbb
aas
pop
incb
push
dec
adc
icebp
or
mov
sbb
xor
lret
adcb
test
pop
cltd
sub
aas
in
and
repnz
aas
jo
test
pusha
jge
sti
mov
es
dec
and
pop
ja
mov
out
xchg
rcrb
test
jle
cmc
shrb
pop
or
mov
cmc
stos
mov
outsl
sub
fs
adcb
push
and
jb
xor
inc
test
add
call
xor
dec
das
mov
jg
push
inc
mov
sbb
lods
jl
inc
mov
sub
out
ret
addb
loopne
mov
lahf
cmp
out
mov
mov
cmp
enter
dec
out
jb
mov
dec
cmp
fwait
mov
or
std
cwtl
nop
mov
and
out
dec
sub
lret
insl
rorl
aas
vmovdqa
add
dec
mov
push
xchg
cli
movl
dec
js
sub
ret
sbb
xchg
in
dec
in
xchg
lahf
das
adc
int3
xchg
out
notb
bound
rcr
negl
fisubrs
lds
adc
pop
fdivrl
cs
stc
jae
jns
shr
outsl
add
cmpsl
fadd
and
insb
push
xchg
inc
test
and
testb
jge
insb
inc
add
mov
subb
call
mov
add
pop
std
popa
or
pushf
ds
sbb
shrl
cmc
jno,pn
and
push
in
out
popa
insl
je
mov
sbb
inc
arpl
cmpps
aas
sub
or
push
mov
or
inc
push
cmp
xchg
and
and
shll
pop
and
mov
dec
sti
out
fs
insl
jo
mov
iret
cmp
fdivs
movsb
pop
mov
das
insl
and
fbstp
or
hlt
pop
jnp
out
push
push
dec
inc
scas
jge
fsubrs
in
jmp
and
sahf
mov
cmp
push
sbb
dec
repnz
jg
arpl
bound
cli
pushf
inc
ja
das
int3
dec
bound
aad
nop
xchg
dec
jno
adc
mov
and
or
sarl
flds
adc
mov
mov
xor
add
mov
ljmp
sub
dec
dec
daa
das
cmpsb
jl
push
adc
clc
dec
ret
mov
mov
jo
dec
sbb
add
sub
sti
and
ss
lea
mov
jle
xor
xchg
test
aas
mov
lea
add
dec
repz
mov
fnstcw
out
mov
jno
mov
std
mov
adc
and
aaa
rorl
shlb
sub
push
jl
in
in
jl
out
or
sbb
or
xchg
adc
addr16
mov
adc
push
or
pop
popf
int
xor
movsb
lahf
sbb
ret
popa
jmp
xchg
mov
mov
pop
push
stos
jge
pop
cmp
or
ljmp
mov
mov
repnz
mov
divb
add
fucomi
into
iret
push
mov
jbe
push
jnp
test
das
testl
mov
mov
mov
out
out
inc
mov
cmc
push
les
mov
scas
or
jae
inc
and
jno
adc
cmp
pop
xchg
icebp
push
jmp
frstor
or
push
sub
jb
mov
aad
leave
jle
ret
mov
lret
daa
jae
pop
push
loop
inc
jb
mov
xor
addr16
pop
and
jmp
cmp
scas
out
ja
push
inc
outsl
xor
and
pop
sub
cmpsl
jge
out
or
xchg
in
xchg
sub
mov
rorl
cld
mov
lret
and
jne
inc
push
lds
leave
fisubrl
imul
and
out
pop
mov
out
inc
mov
out
jae
mov
repnz
xchg
cmc
subb
push
rol
or
push
idivl
mov
unpckhps
dec
push
mov
ja
jb
sub
add
sub
sbb
insb
dec
adc
pop
lods
mov
add
cli
mov
push
popf
and
scas
imul
addl
mov
sbb
shlb
xchg
jle
in
xor
jl
and
lds
and
push
vmovups
mov
sbb
les
xchg
decl
mov
arpl
ja
inc
mov
loopne
or
jno
and
rclb
jmp
sahf
xor
or
stos
dec
mov
loop
adc
rolb
dec
mov
lds
sahf
dec
loopne
ret
mov
sbb
inc
mov
imul
imul
fwait
mov
inc
push
mov
sbb
push
je
into
data16
out
cmp
push
mov
hlt
and
sahf
fmuls
xchg
mov
lea
sbb
jno
in
hlt
pop
dec
sbb
andb
sahf
imul
in
iret
fs
xor
sub
xor
pop
sbb
daa
dec
xor
adc
sbb
das
xchg
out
repnz
push
lea
and
adc
out
lcall
and
and
push
push
std
jle
test
movl
cs
xor
fidivl
jmp
movsl
hlt
dec
jmp
data16
movsl
jmp
sub
loopne
cmp
push
popf
jns
fisttpll
mov
aaa
jg
inc
lret
mov
xchg
lods
loopne
dec
and
inc
pop
lahf
incl
cmp
movsl
jg
out
ss
popf
dec
adc
scas
push
lods
ljmp
insb
ljmp
xchg
bound
fisubs
push
adc
mov
and
movsb
lret
xor
or
xor
xor
pop
xlat
fstl
mov
pop
stc
push
pushf
and
xchg
lret
jp
dec
in
inc
mov
mov
test
inc
add
fsubs
fistl
push
cwtl
jp
aaa
cmp
stos
xor
jb
jmp
mov
jno
cmpsb
aam
decl
cs
sub
sarl
ss
in
xchg
mov
mov
addr16
push
cmpl
std
dec
cwtl
ja
jbe
mov
imul
jge
jne
lock
leave
rorl
pop
xchg
insl
pop
push
mov
push
pop
fstpl
dec
mov
mov
mov
insb
push
cmpsb
inc
ljmp
ljmp
mov
test
lcall
jecxz
lea
fwait
in
push
dec
jnp
jg
xchg
push
stc
sbb
lods
cltd
imul
pusha
sarl
fwait
add
cli
jae
fstl
push
es
int3
push
imul
mov
sbb
cwtl
mov
xlat
js
cmp
xor
pushf
push
add
lock
xchg
lea
sti
push
xchg
lahf
lods
loopne
sbb
xchg
adc
jl
mov
aas
jno
int3
push
out
xchg
mov
lcall
test
xor
fnstsw
daa
xchg
jno
std
iret
ret
andb
dec
test
mov
xor
mov
mov
pop
mov
cmp
lcall
ljmp
pop
xchg
std
fdivl
pusha
push
dec
sub
lods
enter
jns
ljmp
loope
inc
aaa
mov
mov
mov
push
arpl
pop
mov
out
xlat
out
xchg
mov
test
sub
dec
and
mov
xchg
and
sbb
imul
push
cmpsl
and
pushf
jns
xchg
mov
subb
cmp
sbb
mov
xor
xchg
and
icebp
out
arpl
cwtl
add
stos
inc
fildl
mov
mov
and
jmp
mov
add
daa
int3
pusha
test
aam
jge
subb
and
stos
testl
push
sub
ljmp
in
fdivl
mov
xchg
mov
sbb
int
fcmovnb
mov
inc
aad
ja
pop
js
pushf
rcll
cmc
mov
inc
xchg
ljmp
lret
xchg
dec
jno
andl
cs
xor
rcr
push
push
dec
mov
out
jmp
add
xchg
aaa
and
sbb
dec
lds
aad
cmp
adcb
and
and
xchg
xchg
and
sbb
stos
movsb
push
in
rcrl
xor
mov
outsb
pop
push
inc
pop
xor
les
jne
imul
pop
xchg
scas
add
cltd
aad
xor
iret
leave
cli
and
subl
stc
mov
sub
out
scas
push
test
shll
orb
add
out
cli
mov
dec
lret
test
ss
pushf
lret
inc
cmpb
add
sub
dec
dec
mov
lock
xchg
addr16
cld
xchg
addr16
out
scas
mov
push
test
xlat
push
fldenv
lods
mov
jg
addr16
push
adc
aad
sti
repnz
push
call
dec
add
fisttpll
dec
dec
or
outsl
xchg
out
es
call
mov
push
aad
lods
addr16
jge
mov
mov
inc
inc
aas
aaa
pop
fisttps
dec
daa
mov
mov
cli
pop
mov
cmp
cmp
fmul
movsb
push
cmp
sub
push
into
jmp
out
xor
adc
aaa
in
jmp
pushf
ficompl
lcall
bound
out
nop
jecxz
stos
icebp
insb
xor
out
xchg
and
movsb
inc
pop
mov
testl
daa
inc
and
insl
cmp
scas
mov
loop
and
mov
sub
mov
sbb
xor
inc
cltd
ds
jecxz
outsl
lea
addr16
inc
jbe
push
fldt
in
dec
xor
jae
ljmp
out
adc
aam
sbb
adc
sarl
cltd
mov
cmp
mov
jno
xor
mov
data16
in
mov
call
fidivrs
push
sar
out
shrl
rcll
hlt
repz
mov
or
add
outsb
mov
mov
xbegin
mov
andb
pusha
cmp
ljmp
mov
add
adc
lahf
test
pop
ds
pop
add
data16
aas
stos
xor
movsl
fldenv
sub
cmpsb
push
ficompl
mov
test
arpl
xor
mov
roll
pop
sub
jle
pop
cmp
sbb
adc
jae
push
movsb
xchg
xorl
cmp
xchg
mov
cld
insl
lahf
jmp
loopne
ljmp
mov
iret
outsl
mov
popa
xor
aam
ret
sbb
add
pusha
xchg
icebp
jb
mov
jle
adc
fneni(8087
adc
pop
jae
jle
push
pop
dec
sub
mov
daa
cs
imul
mov
mov
xor
sbbb
or
inc
mov
dec
icebp
jnp
aaa
test
movsl
inc
mov
fdivrs
mov
mov
fnstcw
aaa
inc
cwtl
jmp
loop
hlt
xchg
jns
aas
xchg
jbe
lret
mov
fidivrl
bnd
jo
mov
into
loope
pop
jb
xor
call
scas
fmuls
lret
imul
aam
or
or
imul
xchg
sahf
xchg
int3
cmpl
adc
ds
mov
imull
lcall
call
fs
mov
fcomps
push
mov
sub
dec
test
pop
cmp
xor
je
fisttpl
xor
insl
xor
dec
mov
xchg
mov
je
pop
orl
sub
les
push
lahf
push
test
xchg
adc
nop
cmp
adc
and
lds
loopne
test
pushf
std
test
mov
adc
sub
mov
inc
jp
bound
clc
stos
dec
cmp
rcrb
cmp
dec
stc
or
adc
xchg
test
cmpsb
mov
dec
std
mov
push
push
ds
outsl
or
hlt
or
cs
and
mov
mov
cltd
notb
pusha
push
iret
dec
mov
dec
cmp
jl
sbb
insl
lret
xlat
aam
iret
testl
push
dec
jg
std
lahf
dec
addb
js
dec
sub
add
mov
inc
dec
outsb
movsl
fwait
loope
fcompl
incl
imul
xchg
divb
stos
loopne
mov
mov
push
das
out
mov
loopne
xchg
jle
movsl
cmpsb
arpl
aad
rolb
or
push
add
sahf
data16
sub
push
pop
inc
mov
lods
popa
negl
xlat
or
test
mov
xor
outsl
cmp
aaa
or
sub
js
push
mov
mull
mov
cli
imul
cmp
popa
repz
lahf
gs
mov
xor
idivl
cmpsb
fmull
enter
shrl
and
or
fcompl
andb
aad
inc
cmpb
popa
jmp
lods
shll
mov
mov
lods
inc
sub
insl
fisubl
loope
lea
cmp
adc
add
jg
cmovne
xsaveopt
enter
loopne
cmpsl
mov
nop
lret
jge
aad
lret
lods
stos
add
aaa
roll
cmp
push
and
les
xor
gs
dec
je
inc
movsb
inc
cltd
xor
fcmovbe
mov
ret
mov
in
adc
jmp
cmp
rcrb
sub
pop
shl
hlt
std
dec
je,pt
ret
or
notl
or
out
pop
fildl
cmp
test
rorl
mov
xchg
jecxz
dec
ja
jg
pop
dec
and
mov
mov
adc
fimull
dec
scas
in
int
xchg
sarb
fists
std
aad
cli
fucomp
or
mov
lods
cmc
test
jl
push
fsubr
data16
shlb
lods
xor
loope
into
and
jnp
sbb
jno
imulb
ds
and
lock
and
or
cmc
es
pushf
mov
sbb
mov
dec
iret
mull
pop
sbb
pop
cmp
push
and
mov
divb
and
popf
rcrb
fcompl
dec
or
sub
add
std
add
scas
jb
adc
mov
push
xchg
aaa
jg
push
xchg
or
adc
adc
mov
add
out
xchg
or
lahf
adc
sar
dec
into
pop
adc
cmp
jne
les
push
enter
sub
add
or
add
lret
xor
cmpsl
sbb
lds
dec
std
mov
sbb
nop
mov
aaa
mov
sbb
pop
jo
movsb
xor
sub
jnp
xor
jmp
iret
lock
imul
movsb
mov
iret
and
mov
int3
sbb
lret
bound
idivb
pop
cmpsb
je
and
push
mov
add
popf
daa
inc
loope
cmp
cltd
jns
cwtl
cmp
icebp
sbb
sahf
mulb
add
int
dec
pop
add
fsubrp
cmp
pop
xchg
mov
mov
dec
dec
pushf
fstpl
push
pop
leave
push
into
mov
test
sbb
inc
sahf
in
subb
int
jo
or
mov
in
orb
mov
aam
mov
xchg
lahf
dec
fistpl
arpl
test
sub
sbb
push
push
or
fchs
pop
sub
mul
adc
sub
mov
cmc
out
mov
mov
xchg
sbb
and
adc
sar
jbe
sti
add
ja
cmc
aas
insb
cmpsb
hlt
dec
sbb
inc
xchg
add
pop
mov
or
enter
rcrl
mov
or
cmp
pavgw
divl
pop
and
push
xor
mov
mov
sub
pop
cmp
or
sbb
mov
adc
pop
xchg
clc
adc
push
je
neg
aad
test
mov
dec
cmc
jecxz
or
xchg
fs
or
xchg
enter
lods
jl
adc
mov
idivl
jns
jle
xchg
cmp
jno
jmp
mov
jg
pop
in
cltd
in
xor
fdivrl
lcall
je
cld
mov
stos
push
pushl
xor
xlat
jbe
jecxz
jmp
pushf
test
adc
add
sti
jae
sbb
mov
mov
mov
ret
push
push
fidivrs
xor
scas
pop
add
push
andb
fcomps
std
mov
inc
es
mov
and
js
mov
adcl
loop
xchg
jno
pop
cmp
popf
mov
pop
scas
sarl
adc
mov
lret
fdivl
xor
fidivs
pop
xchg
cmp
jns
add
ret
mov
lods
or
fildll
popa
notl
mov
jns
imulb
mov
cmpl
lret
nop
rorl
xchg
push
es
pop
cmpsl
sub
popf
jecxz
push
lret
sti
mov
add
rol
test
lahf
inc
bound
sub
mov
aas
repnz
mov
mov
sub
add
es
cltd
xchg
dec
loop
fcoml
sub
cmp
lret
dec
loop
shlb
imul
adc
push
adc
das
sub
adc
xor
cmp
aad
xchg
sbb
sbb
pop
mov
hlt
icebp
jmp
pusha
cmpsb
pop
push
ret
sbb
pop
mov
adc
fsts
mov
mov
lcall
aad
inc
lea
clc
out
pop
cmp
das
in
mov
jg
adc
jo
push
push
pusha
movsl
je
push
test
add
sub
out
add
cmp
dec
pop
mov
jl
rorl
lea
sbb
inc
pop
ja
xor
outsl
cmpsl
or
mov
and
lret
push
imul
sbb
test
dec
pop
add
mov
ss
xchg
pop
sub
test
push
pop
mov
jle
or
ljmp
out
pop
add
pop
stos
mov
push
xor
dec
lahf
aad
pop
xor
add
push
xchg
adc
cmp
push
daa
sti
in
int3
push
orl
mov
imul
mov
xchg
cli
mov
push
push
ret
or
cmpsb
ret
rcr
lahf
cwtl
push
dec
push
mov
out
push
sti
icebp
cltd
sub
lcall
mov
jne
sub
xchg
pop
jmp
xchg
scas
out
pusha
mov
ja
cmp
xchg
or
imul
mov
out
in
movsl
inc
rcrb
mov
ret
adc
jmp
stos
xchg
cmp
xchg
push
sti
mov
cmp
rorl
daa
xchg
pop
cmp
ret
mov
imul
sbb
fldenv
data16
and
jo
push
mov
pop
mov
lds
adc
mov
inc
jge
sub
mov
lock
aaa
mov
jnp
adc
push
adc
add
cltd
or
jmp
add
call
dec
jecxz
adcb
adc
mov
mov
and
jo
cmp
inc
andb
push
fadds
aaa
hlt
pop
pop
data16
mov
imul
cmp
push
addr16
inc
loop
into
xor
negb
lcall
lret
nop
test
es
cmp
and
mov
mov
iret
cld
and
and
cmp
sub
js
jge
out
test
or
inc
xchg
out
cmpl
gs
cmp
aaa
xor
popf
push
lods
cmpb
xchg
stos
dec
das
in
shlb
add
scas
mov
ljmp
cmp
lods
lret
inc
lret
and
xor
adc
les
xchg
mov
and
jg
in
loop
not
int
xlat
adc
jns
test
jl
cld
pop
xor
jnp
push
loopne
scas
add
sarb
jne
mov
sbb
push
push
bound
jno
mov
add
divl
push
repnz
lods
nop
dec
cltd
sbb
xchg
inc
inc
in
testb
decb
mov
aaa
fldcw
push
test
int3
scas
adc
push
scas
out
dec
pop
mulb
jne
mov
pusha
shr
sbb
out
fcompl
stos
xor
jle
and
imul
push
iret
scas
push
je
sbbb
push
pusha
mov
sbb
mov
add
sub
out
loope
sub
jl
inc
cmpsl
mov
in
mov
fadd
movsb
xchg
sbb
daa
inc
not
add
add
nop
adc
loopne
mov
dec
sbb
or
sbb
mov
pop
mov
ds
clc
pop
insl
cs
push
adc
and
mov
cwtl
xchg
rcl
imul
adc
dec
cmpsb
pop
int3
cmpsb
cld
mov
aas
adc
movsl
lret
popf
ret
in
dec
jg
inc
outsb
lret
mov
cmpsl
jno
adc
mov
test
or
into
jle
mov
jnp
outsb
insl
push
pop
rcll
mov
sahf
inc
into
cld
xchg
add
xchg
inc
pop
mov
sub
loop
mov
mov
cmp
push
dec
fdivrl
pop
imul
mov
gs
add
sub
xor
cmpsl
gs
popa
fidivrl
and
shll
insl
mov
shr
cmp
pushf
push
rcrl
int3
mov
loopne
imul
sub
data16
in
pop
pop
xchg
lahf
not
xchg
inc
popf
pusha
adc
xchg
xchg
sub
xchg
in
inc
rorl
or
xchg
sbb
and
sti
iret
mov
testl
jne
jne
jge
call
int3
xchg
mov
mov
pop
push
ja
sub
aad
scas
mov
sub
xor
add
dec
mov
fnstcw
push
mov
xchg
pop
cld
fs
or
out
fistpll
mov
jns
loopne
mov
push
xchg
lret
cwtl
stos
pop
xchg
rcl
sbb
mov
fidivl
gs
or
dec
enter
rol
push
pop
aam
addr16
mov
popf
xchg
cmp
dec
cltd
insl
dec
push
jp
mov
add
lret
push
and
jmp
lahf
in
xchg
loopne
push
iret
cli
arpl
inc
xchg
test
clc
cld
xor
adc
jle
mov
sub
out
outsl
push
scas
cld
repnz
add
push
lcall
sub
cli
mov
out
into
xlat
in
aam
out
lret
insb
xor
cld
push
jge
add
jecxz,pn
jno
dec
lret
mov
out
shlb
and
out
and
popl
fcmovnu
scas
inc
sahf
les
xchg
inc
or
adc
xor
inc
cltd
sub
imulb
in
frstor
mov
hlt
xchg
enter
out
mov
call
xchg
ja
mov
xor
dec
adc
pop
jmp
imul
loop
mov
mov
insl
xor
push
mov
sti
in
outsl
andb
sbb
leave
and
rcr
inc
add
subb
push
inc
rcll
cmp
mov
sbb
push
addr16
test
cltd
mov
adc
or
xor
jns
dec
sbbl
mov
push
mov
nop
pop
shrl
xor
jg
dec
xchg
pop
push
mov
ret
sahf
xchg
ret
sbb
xchg
loopne
nop
add
popf
or
inc
mov
out
cld
mov
popa
ret
or
mov
call
pop
repnz
xor
sbb
cmp
push
adcl
jg
mov
xchg
push
xchg
in
and
cmp
push
pop
push
aas
jmp
mov
sub
arpl
mov
pop
ret
inc
inc
inc
xchg
sub
fwait
inc
sbb
xlat
xor
rcll
movsl
arpl
inc
xchg
xchg
aad
fistl
outsb
add
jp
mov
mov
mov
sbb
in
hlt
loop
mov
filds
inc
cmpsl
popa
shll
andb
repnz
out
mov
mov
xchg
clc
stos
inc
imul
pop
push
scas
or
pop
or
dec
cmp
xchg
dec
nop
mov
adc
cld
push
bound
subb
mov
insb
xchg
pextrw
icebp
subb
jo
pop
lock
dec
jmp
or
les
lds
fnstcw
in
ret
fcomip
add
pop
into
jno
in
push
sbb
fcmovu
je
jo
sub
std
adc
jge
insb
mov
nop
xor
cs
mov
inc
cmp
mov
mov
xchg
and
jg
std
ror
jecxz
rorl
fdivl
pop
sbb
cmpsl
subl
in
in
jae
pop
mov
mov
cwtl
push
ljmp
xor
or
ret
jbe
xchg
xchg
scas
icebp
dec
loopne
loop
xchg
and
enter
mov
or
in
push
cs
sbb
mov
or
sbb
loop
leave
jns
or
pop
inc
or
inc
xchg
inc
mov
bound
push
lods
outsl
or
add
aam
sti
push
jge
scas
leave
andb
int
sarb
in
movsl
clc
inc
imul
loopne
mov
mov
xchg
ja
cs
enter
enter
pop
xor
divb
pop
push
leave
sub
test
orl
roll
je
pop
inc
mov
dec
sbb
jl
pusha
mov
xchg
push
sti
jecxz
lods
test
ds
popf
int3
jl
lahf
scas
jg
leave
call
cltd
mov
divl
adc
or
lds
xchg
into
outsb
add
jge
push
flds
bound
repnz
inc
insb
dec
push
sub
dec
jbe
outsb
pop
ret
out
repz
mov
movsl
xor
mov
sub
cmp
add
cld
fwait
xor
test
push
fcmove
lahf
sbb
jp
push
or
and
sarb
sbb
jo
xor
push
mov
and
cmpsb
sbb
dec
adc
ror
mov
stc
pop
mov
xor
pop
xor
push
hlt
out
loope
popf
das
lds
out
outsl
push
xor
xor
js
shll
rcll
sahf
les
dec
xchg
std
fwait
mov
in
cmp
adc
test
push
popa
test
test
je
sar
in
std
xor
pusha
inc
movsb
push
popa
xor
cwtl
push
ret
ljmp
xchg
jge
sarb
shrb
movsl
dec
mov
xchg
mov
in
xchg
mov
ds
sbbl
jae
mov
mov
cltd
adc
mov
or
arpl
ja
push
aad
pop
in
loopne
sub
xchg
sub
outsb
popa
dec
sti
imul
mov
xchg
test
scas
cmp
out
inc
cltd
xor
into
pop
or
in
mov
mov
mov
mov
pusha
push
mov
push
icebp
popf
pushf
pushf
addr16
ljmp
add
jno
shr
pop
jp
leave
pop
fiaddl
push
fmuls
fadds
pop
int3
mov
adc
in
cli
lods
push
sbb
jbe
xchg
adc
mov
dec
sub
aam
jno
sbb
fsubrs
xchg
movb
jae
rcrb
xor
and
sbb
sub
fs
mov
fcompl
dec
pop
xchg
shll
daa
ss
sub
push
test
sbb
int
rcll
arpl
add
js
mov
pusha
xor
adc
fcoms
out
outsl
sbb
ret
cmp
cpuid
int
mov
lret
call
jno
push
dec
inc
cli
inc
scas
mov
and
and
iret
popa
bound
decb
mov
fdivr
push
push
rcll
mov
cmp
icebp
out
cs
out
lea
pop
enter
loop
add
decb
outsl
xchg
mov
push
cs
inc
jge
les
js
add
lds
out
test
cld
loope
movl
sbb
movsb
inc
xchg
imul
out
jmp
test
loope
fdivrs
jno
mov
rcl
mov
rclb
fwait
gs
shll
lahf
in
cli
push
in
ret
cmp
aam
repnz
mov
out
cmpsw
movsb
movsl
fisttpl
fdivr
clc
dec
fstps
inc
cmc
mull
push
jne
add
fs
mov
mov
lret
dec
lods
or
or
xchg
lahf
inc
cmp
stc
and
and
popf
push
fildll
inc
fiadds
out
jbe
cmpsl
or
mov
std
pop
xchg
sbb
testl
int
ficoms
sub
xor
inc
pop
mov
icebp
jmp
dec
fwait
mov
enter
subb
push
out
jecxz
jge
filds
bound
out
call
push
das
mov
xchg
mov
test
js
cmp
xchg
into
ret
je
adc
stc
aaa
mov
or
ret
fs
pusha
mov
inc
mov
jg
test
mov
sub
mov
repz
pop
aas
adc
jnp
sbb
dec
les
imul
imul
xorl
inc
xchg
jp
mov
hlt
xor
out
lret
and
pop
pop
xchg
dec
push
in
sbb
negb
xchg
ljmp
fnstenv
jo
fbstp
dec
adc
arpl
in
sub
lcall
aas
push
rcr
and
insl
xor
pop
mov
loopne
lret
xchg
lea
cmpsb
sti
push
loopne
mov
push
add
rcrl
sbb
xchg
scas
mov
cli
scas
inc
xchg
dec
test
std
rcrl
mov
rcll
add
into
or
or
aaa
stos
dec
push
sbb
daa
mov
sub
xor
pop
cmp
movsb
xchg
aaa
sahf
mov
adcl
aam
dec
loopew
xchg
loope
push
mov
sti
sub
std
xchg
ficomps
inc
mov
fcoms
pop
jnp
inc
cs
xorb
or
and
adc
pop
mov
mov
ds
jb
pushf
xorl
mov
frstor
ret
outsl
cmp
shll
subl
aas
pop
rorb
push
pop
sbb
dec
mov
sub
scas
pop
sbb
decl
divb
mov
movsb
add
imul
dec
push
loop
jge
jge
ret
push
xchg
fwait
icebp
add
sub
jne
int
dec
ljmp
mov
and
inc
push
lcall
mov
jge
ret
les
cmc
cmp
out
mov
mov
popf
xor
shll
fstps
cmc
push
adc
jo
pop
sbb
rcrl
mov
sbb
lock
dec
sbb
adc
clc
lock
cmpsl
or
subb
pusha
insl
pop
cmp
in
inc
jb
leave
mov
enter
mov
fisubl
pop
in
inc
popf
cli
js
xchg
cld
cld
stc
dec
in
pop
repz
sbb
test
stos
mov
not
movb
popa
mov
add
hlt
rcl
and
fwait
aam
hlt
jno
fsts
and
outsl
sahf
les
mov
mov
jb
jbe
mov
or
ficoms
jle
movsl
into
fnstenv
mov
movsl
xor
subl
dec
ss
mov
scas
sub
and
adc
sbb
in
xor
imul
lret
popa
pop
inc
mov
push
mov
jbe
sub
cmp
sar
test
push
xor
ret
les
call
push
xchg
insl
dec
sub
sbb
mov
cltd
sbb
inc
xor
cmp
inc
inc
xchg
stc
push
into
inc
nop
shr
call
jg
insb
mov
jo
cmp
sbb
sub
loopne
bound
mov
stc
pop
xchg
xchg
xor
mov
pop
mov
je
add
ret
ss
imul
sub
pop
and
jmp
ret
test
push
dec
test
cmc
mov
mov
je
jbe
sbb
movl
test
test
test
repnz
xor
and
pop
xchg
pop
test
in
cwtl
movsb
lcall
push
cwtl
mov
ja
push
push
mov
test
test
shl
jge
cld
jbe
adc
sbb
push
adc
scas
pop
push
mov
mov
cs
xor
mov
cltd
adc
idivl
fldt
cmpsl
je
jb
mov
and
xchg
adcl
pusha
mov
cmp
sub
aas
mov
popf
mov
addr16
lret
scas
push
xchg
popa
inc
mov
in
enter
test
inc
push
pop
cltd
cmc
fs
inc
outsl
sbb
repz
and
rcrl
push
pop
or
in
mov
or
mov
ret
mov
mov
js
dec
xor
add
pop
mov
inc
xor
pop
push
pop
icebp
imul
mov
xchg
sbb
jno
lret
xchg
xchg
adc
out
push
and
pop
add
and
push
pcmpeqw
sub
cmc
xchg
out
cmp
rorb
repnz
jecxz
xor
inc
scas
lcall
mov
sub
sub
mov
mov
xchg
movsb
sbb
push
xor
inc
push
dec
inc
dec
add
mov
dec
mov
adc
popf
xchg
mov
sbb
adc
add
xor
push
cmp
or
dec
mov
xchg
jbe
cmpsb
popf
mov
cwtl
add
out
sub
ret
mov
cwtl
inc
mov
setns
aas
xlat
sbb
cltd
mov
fisubrl
lods
inc
mov
andb
push
pushf
inc
cmp
pop
rol
sub
sbb
mov
push
add
nop
cmp
sub
push
adc
add
fdivl
ss
je
add
pop
nop
sti
add
dec
pop
mov
mov
sbb
loop
jno
imul
mov
hlt
lods
cmpsl
cs
mov
add
pushl
xchg
adc
sbb
test
pop
xor
cmp
mov
inc
pop
cld
test
int3
pop
mov
aam
xlat
mov
call
xor
arpl
ret
popa
mov
scas
mov
cmp
mov
mov
bound
xchg
mov
int3
cmp
xchg
adc
xchg
sahf
adc
push
dec
jp
cmp
mov
in
sbb
rolb
mov
stos
mov
aaa
xchg
scas
xchg
loop
pop
push
jp
mov
pop
xchg
cld
sub
rcrb
dec
sbb
rcrb
jbe
mov
ja
in
adc
mov
aaa
and
decb
jp
mov
push
ljmp
jbe
mov
xchg
or
loop
add
mov
adc
cs
lds
ficoml
xchg
dec
fld
mov
stos
and
fcmovu
xchg
xchg
lods
adc
and
enter
pop
mov
cmp
fwait
push
xchg
pop
scas
jecxz
es
jo
cmp
inc
insl
xor
outsb
lock
int
icebp
hlt
jecxz
aaa
sbb
push
inc
je
push
hlt
idivl
push
nop
push
adc
cmp
xor
sahf
sbb
add
add
addb
add
ret
mov
cmc
nop
rolb
popl
mov
add
lea
push
mov
jg
xchg
scas
mov
mov
inc
jbe
mov
jmp
sbb
sbb
adc
jae
das
adc
std
sbb
jb
jno
and
stos
out
or
imul
cmp
movsl
sbb
in
les
cmp
shr
stos
or
mov
add
mov
lods
jb
mov
add
xchg
sbb
scas
adcl
push
fsubr
mov
mov
ja
data16
popa
dec
jle
push
jg
movsb
xchg
je
imul
js
cltd
fwait
mov
std
inc
lahf
jne
aas
mov
mov
daa
imul
pop
or
sti
in
out
add
out
aaa
lret
fwait
iret
test
jno
mov
or
mov
dec
and
leave
adc
xchg
fisubrl
fiaddl
leave
pop
xor
stc
cmp
lods
sbb
cmp
sbbb
mov
fdivrl
sub
or
rorl
push
pop
les
icebp
in
push
testl
cmpsl
sti
scas
in
add
xchg
negb
xor
aas
fwait
js
pop
mov
ficompl
shl
rcl
xor
xchg
sti
imul
pop
call
push
add
insb
mov
dec
movsl
fiadds
aaa
je
into
inc
cmpb
cmpsl
les
int3
fsubr
es
icebp
inc
mov
mov
sbb
mov
hlt
sbb
mov
hlt
sub
add
xchg
ss
push
lock
pop
lods
push
push
mov
sahf
and
mov
fisubrl
lret
cmpsl
xor
mov
inc
dec
pop
adc
dec
insb
jp
mov
push
sub
jbe
pop
js
hlt
cmp
mov
mov
daa
push
jno
stos
push
jle
imul
and
inc
xchg
stc
leave
add
inc
cmpb
xchg
mov
mov
jge
xchg
mov
xchg
roll
mov
dec
out
push
jmp
mov
sub
in
adc
sti
adc
xor
imul
inc
shr
mov
mov
aad
mov
nop
ja
pop
imulb
sub
hlt
lret
add
cli
pmaxub
ret
pop
sub
sub
jne
in
decb
nop
dec
mov
and
adc
or
add
insb
or
or
mov
push
and
shr
inc
testb
stc
iret
jge
pop
push
sbb
dec
test
jbe
loope
mov
test
test
testw
sub
vpsubsb
ss
adc
rcll
mov
inc
mov
mov
mov
or
xor
outsb
xor
ret
push
andl
cmp
mov
cmovbe
call
lods
mov
scas
dec
sub
push
push
jp
add
in
in
cmpsl
cmp
in
ds
jg
inc
xchg
jl
lcall
mov
lret
xor
loop
mov
jge
fstpt
mov
inc
cld
mov
rcll
dec
iret
and
pop
mov
mov
jnp
xchg
pop
jne
iret
lahf
mov
sub
jmp
fwait
push
and
cld
pop
mov
or
call
xchg
jl
add
loopne
scas
adc
mov
int3
xlat
insl
dec
push
icebp
dec
addr16
cmpsb
push
pop
addr16
rolb
inc
outsl
stos
add
ret
cwtl
clc
insl
push
adc
mov
push
fsts
mov
mulb
int3
pushf
ret
lds
push
and
out
orl
xor
pop
pop
nop
or
mov
outsb
cmp
mov
lcall
in
int3
dec
aam
and
jg
bound
mov
std
stos
dec
dec
jge
xchg
ret
cld
cmc
xor
rolb
lea
pop
rorb
mov
or
jns
adc
mulb
pop
js
sbb
add
adc
lock
gs
test
subb
mov
push
mov
insl
pop
adc
jmp
into
mov
test
iret
add
nop
aas
dec
xor
insb
cwtl
icebp
pop
je
push
push
or
sbb
and
into
mov
cwtl
pusha
fistps
xor
cmpsl
test
js
jne
push
xchg
sub
xor
pop
add
dec
lea
dec
inc
push
mov
jne
pop
xchg
cltd
lcall
in
pop
fstpt
cld
xchg
pop
inc
shl
mov
pushf
or
jbe
mov
pop
arpl
cmpsl
je
fcoms
sbb
adc
pop
adcb
inc
adc
add
lds
fadd
push
fdivs
imul
out
fs
xor
xchg
sub
jb
andb
pop
test
mov
jp
mov
fidivl
adc
int
push
insb
or
stos
mov
das
aad
ret
dec
in
vmulpd
cld
push
xor
push
std
aad
decl
lcall
pop
cmp
mull
dec
xchg
adc
daa
lcall
imulb
sub
clc
xchg
lods
jecxz
adc
jmp
fldcw
into
lods
mov
mov
sub
cmp
pop
ret
jb
lds
shl
push
jmp
xchg
dec
jae
les
jp
lret
rcll
push
xchg
fidivs
mov
in
jge
adc
pop
pop
dec
push
mov
imull
lret
xor
cmp
mov
xchg
leave
aam
sub
push
inc
sub
xor
dec
cli
sbb
fcoms
push
mov
mov
jo
das
pop
adc
pop
int3
inc
cmp
inc
xchg
mov
push
into
inc
mov
imul
pushf
aad
pusha
js
cmp
out
mov
or
outsb
mov
mov
shr
into
adc
sti
movl
xor
ja
stos
add
jo
sub
roll
gs
mov
sub
mov
lret
cmpsb
dec
jae
add
add
adc
cmpl
cmp
adc
aam
imul
push
mov
cld
test
pop
pushf
jge
daa
lcall
sbb
and
adc
call
in
xor
insl
add
mov
lret
xchg
xor
or
rorl
mov
pop
cmp
mov
pop
dec
pop
hlt
aas
mov
inc
cwtl
xlat
hlt
ljmp
xor
stos
into
fisttpll
mov
and
addr16
mov
std
pop
out
pushf
lret
dec
stc
scas
or
fucomi
cwtl
jmp
loop
pushf
out
pop
test
sbb
stos
mov
dec
jg
lret
inc
jae
sbb
pop
cs
mov
cmc
ljmp
adc
adc
hlt
inc
adc
shrb
ljmp
in
xchg
nop
sahf
jb
adc
out
ret
in
hlt
pop
insb
dec
mov
cmp
xchg
xor
push
imul
mov
inc
ljmp
inc
cld
popf
push
loopne
cmp
xor
aas
and
icebp
jns
and
or
push
jg
fcom
fwait
sub
push
lcall
data16
xchg
mov
roll
mov
add
mov
sub
pop
adcb
cmp
add
xchg
sub
shlb
add
or
push
mov
pop
mov
repz
movsb
xchg
push
or
xchg
out
add
in
adc
jmp
fbld
into
aam
pop
jge
rcrb
loop
scas
mov
dec
lret
sbb
iret
leave
aam
push
lret
stos
or
push
sahf
cmp
sbb
sbb
mov
loop
pop
aaa
mov
call
push
push
dec
inc
sbb
xor
xchg
ljmp
in
jns
mov
jae
cli
clc
xchg
imul
mov
sub
scas
jo
jae
xchg
pop
jnp
fcoml
sub
and
lods
mov
fcmovnbe
push
sarb
rol
jecxz
push
addb
sbb
inc
xchg
icebp
xchg
testb
cmpsl
or
stos
adc
push
pop
stos
or
insl
loope
int3
into
aam
ds
in
and
lret
arpl
dec
test
and
lgs
imul
ret
add
xchg
push
xor
outsl
pusha
ss
out
je
addr16
lods
ds
stc
aaa
insb
out
jmp
les
movsl
jg
enter
mov
jnp
and
lcall
jbe
jg
inc
jp
sbb
popa
aad
subl
xor
fsubs
jg
inc
test
das
icebp
jbe
and
jno
and
cltd
loop
push
mov
nop
rcl
dec
lods
ja
sahf
xorb
aam
mov
inc
mov
ret
and
fnsave
jmp
mov
xchg
pop
ret
bound
sbb
add
testb
sbb
popa
ficomps
clc
cwtl
aas
mov
inc
adc
icebp
lcall
jge
js
cmpsl
ljmp
sub
ret
sub
xor
xor
dec
xor
cld
and
mov
dec
jo
or
pop
clc
push
cmp
sbb
in
sbb
lcall
and
mov
mov
sbb
mov
mov
call
test
bound
loopne
aad
imul
dec
fwait
dec
dec
dec
jp
in
sahf
bound
mov
lods
repnz
dec
fimull
or
push
pusha
fincstp
sahf
inc
inc
fldcw
mov
mov
gs
mov
sbb
xor
mov
fnsave
dec
scas
daa
push
adc
sub
call
push
cmc
mov
mov
add
push
adc
add
pop
push
fwait
sbb
jne
pusha
inc
pop
int
into
dec
xor
mov
fldl
hlt
ljmp
or
mov
mov
mov
push
into
cmpl
out
andl
jns
mov
cmp
repz
sbb
int
orl
int
jg
add
push
cmp
adc
insb
mov
into
xchg
xor
add
and
mov
mov
mov
sub
aam
sti
movsl
xor
sbb
inc
lock
pop
call
and
sbb
cli
mov
jns
lock
sbb
sahf
shrl
add
mov
pop
pop
stc
stos
jnp
daa
push
xchg
xchg
faddp
leave
orl
test
xchg
pop
bound
mov
push
jmp
test
sbb
mov
push
lahf
std
ret
movsb
cmpsl
ret
sarl
repz
scas
loop
popa
sub
mov
add
mov
xorb
mov
adc
cltd
cmp
jle
pop
push
push
mov
dec
jge
push
scas
cmp
fcomps
xorl
and
add
dec
mov
xor
and
test
xchg
clc
in
and
jmp
xchg
mov
mov
ds
jg
mov
mov
add
aad
dec
loopne
sbb
push
dec
sbb
aad
jne
ret
jle
pop
outsl
jbe
mov
cli
lods
lock
or
mov
clc
lret
pop
xor
cmp
jp
jg
xchg
dec
xor
sub
lock
inc
inc
das
in
int3
add
xchg
fidivrl
or
or
xor
in
into
popa
cs
and
pop
sbb
repnz
pop
sahf
fisttpl
cmp
in
mov
incb
arpl
xor
nop
add
insl
pop
maxps
cltd
mov
xchg
dec
sbb
sbb
cmp
and
data16
add
jbe
and
lret
and
stos
popf
xlat
mov
sarl
addr16
pop
mov
movsl
imul
jbe
sti
mov
mov
outsl
mov
cmp
mov
cwtl
gs
lcall
or
sub
pop
cwtl
jno
mov
sbb
jo
shll
inc
fs
aam
dec
jp
mov
addr16
cmp
cmpsb
jge
push
cmp
pop
push
cli
enter
mov
xchg
mov
fistpl
lock
ljmp
pushf
jo
mov
mov
dec
movsl
lret
cltd
loopne
inc
or
adc
pusha
stos
jg,pn
pusha
dec
xchg
shrl
dec
pop
sbb
inc
fwait
out
pop
mov
mov
mov
jg,pn
jbe
push
push
jg
sub
push
aam
jle
xchg
mov
orb
sbb
sub
mov
jbe
cmpsl
addb
mov
push
aad
outsb
das
mov
fmull
daa
shr
push
aad
lcall
scas
add
xchg
jns
popf
sbb
xchg
jae
xchg
mov
mulb
mov
sarb
imul
jns
mov
jnp
adc
loop
sarl
dec
cmpsb
scas
andl
and
test
inc
test
jns
test
lods
pop
or
cmc
sbb
neg
lahf
push
cli
add
test
or
idiv
xor
add
mov
pop
gs
add
cmp
cmpsl
xor
sbb
movsb
xchg
lods
and
ret
push
js
arpl
pop
mov
pop
and
movsl
sbb
xor
scas
jns
and
movsb
push
mov
push
lods
add
setb
insl
das
xchg
sub
add
pop
inc
pop
test
jo
dec
das
enter
inc
jns
xor
cmp
scas
lds
or
cmpsl
lret
sbb
jbe
cwtl
jg
xchg
cld
xchg
pop
jle
jp
inc
loopne
fldpi
mov
push
or
ja
ror
sub
sbb
sbb
inc
pushf
repz
fisubrl
decb
stos
stc
jae
sub
jnp
call
cmp
fs
cltd
ret
ljmp
mov
fisubrs
pop
pop
mov
fadd
or
xor
sti
inc
push
fiadds
aas
xchg
and
nop
adc
cmpsb
test
mov
push
mov
cmc
test
lahf
mov
in
add
xchg
push
insb
lods
add
mov
mov
sub
out
lret
cmp
out
bound
push
iret
push
mov
mov
stc
cmpb
insb
imul
shrl
in
or
mov
and
lret
add
in
push
scas
and
scas
dec
shr
or
iret
pop
push
cmp
mov
aam
into
push
stos
jle,pn
je
mov
mov
ds
divb
sbb
or
mov
sbb
cmpsl
in
xchg
lock
loope
mov
mov
ja
and
nop
mov
mov
cltd
jge
push
ja
dec
leave
repz
xor
lret
pop
mov
inc
sbb
jbe
sti
and
lcall
mov
fdivs
into
fistl
fdivs
jmp
push
imul
mov
fistps
dec
add
jge
cmp
xor
rolb
dec
mov
add
adc
lcall
dec
mov
lcall
icebp
mov
popf
iret
mov
xor
lahf
mov
xchg
xchg
cli
stc
jle
mov
cwtl
inc
dec
test
dec
cli
push
aaa
add
jbe
leave
mov
daa
xlat
fldcw
in
adc
mov
mov
scas
cs
clc
lock
into
cli
mov
mov
xchg
jns
sub
sbb
repnz
decb
adc
inc
rcr
sbb
lret
cmp
mov
arpl
xchg
mov
add
dec
fldl
orb
int
cmc
push
subb
sahf
mov
in
xor
mov
fmull
ja
iret
jae
dec
mov
icebp
es
out
outsb
sbb
insl
je
mov
hlt
je
in
aad
add
sbb
addr16
inc
mov
jecxz
cmpsl
insl
lahf
push
loop
push
sarl
aad
sarl
inc
adc
loopne
sub
jnp
cmp
into
jns
daa
jnp
mov
xchg
jl
mov
jg
je
sub
popa
pusha
add
and
testl
cmp
jb
mov
rorl
or
mov
aam
sahf
aam
jle
shlb
js
sub
mov
jo
jl
mov
push
out
cmp
repz
sarb
pop
add
pushf
dec
jg
int
cmp
shll
outsb
jne
outsl
aaa
orb
in
xlat
mov
add
bound
test
or
in
adc
hlt
imul
adc
mov
pop
dec
popa
stos
popa
movsl
arpl
stos
lods
pop
mov
aam
and
call
rcll
repnz
xchg
push
mov
pop
and
iret
lcall
adc
adc
xor
aaa
mov
ljmp
jnp
outsb
dec
jae
sbb
mov
mov
sbb
mov
popa
mov
sbb
inc
ret
jp
inc
mov
adc
mov
pop
in
xor
cld
jecxz
sbbl
lea
andb
cmpsb
mov
push
fldt
enter
fsubl
push
sub
loop
push
dec
cli
cmp
mov
pop
xchg
mov
push
jl
mov
lods
add
xchg
cwtl
fisttps
int
xchg
cs
lcall
das
cld
lret
test
sub
aam
push
cmp
scas
out
dec
jmp
pop
push
push
push
sub
popf
xor
cli
xchg
and
inc
int
mov
push
xor
fiadds
inc
xchg
sbb
mov
ds
mov
adc
sahf
shrb
rorl
xchg
cltd
data16
cmp
sub
push
inc
pop
add
ds
xchg
adc
xchg
sub
mov
xor
cmp
sub
xchg
add
dec
es
stos
aas
dec
push
cmpb
push
aam
icebp
jnp
cmpsl
cmp
stos
repnz
std
inc
iret
and
xchg
cmp
fiaddl
pop
cld
ss
jne
in
jae
jo
cmpsl
mov
imul
divl
ss
scas
sub
dec
stc
pop
add
sbb
call
cmc
dec
sub
jg
pop
inc
adc
cmpsb
ds
lret
ret
sbb
cmp
sub
lret
ja
shl
push
fisubs
shll
call
or
std
out
arpl
mov
pop
adc
xchg
sahf
lret
lret
sub
outsl
sbb
xorb
jp
fnstsw
xchg
pop
cmp
fstps
mov
push
lcall
push
lret
dec
enter
pinsrw
pop
add
push
mov
inc
stc
insl
stos
ja
lretw
mov
data16
mov
out
jnp
fimull
jbe
xchg
jge
sbb
gs
pop
adc
ljmp
loopne
jg
jns
xor
clc
mov
mov
pop
fxch
rorb
jmp
pop
pusha
ds
sub
pop
dec
sahf
dec
lcall
pop
mov
push
jg
rcrl
pop
out
add
shll
xor
xchg
je
in
cwtl
sti
xchg
jmp
and
std
or
das
mov
cmp
inc
inc
adc
clc
cmpsl
jge
and
push
gs
enter
mov
jmp
mov
jle
je,pn
pop
outsl
mov
and
dec
xchg
cmp
cwtl
mov
push
pushf
adc
int3
out
mov
pop
push
lret
insb
stos
mov
pop
dec
lods
fwait
or
sub
mov
push
push
inc
rcrb
fiadds
out
imul
xor
push
fwait
push
roll
lock
dec
mov
fmull
add
rol
add
sbb
aam
mov
sub
inc
insl
xchg
das
push
or
mov
or
shlb
jge
gs
inc
mov
in
insl
add
cld
int
orl
lock
sbb
repnz
dec
push
lods
les
lock
xor
fbld
jne
lods
fidivl
out
and
sub
sbb
loope
mov
fidivs
push
outsl
and
inc
or
xchg
addl
xor
je
xchg
push
notb
shrb
fisttpl
sbb
adc
fsubs
inc
adc
xor
les
cmpsl
sub
or
sbb
cmp
testb
push
mov
mov
cmp
cmp
adc
dec
cmp
scas
and
and
sub
out
cmpsl
dec
outsl
add
pop
pusha
mov
sahf
nop
ret
scas
pusha
int3
ficoml
in
mov
xchg
shl
dec
jmp
sahf
hlt
add
ds
sbb
iret
inc
inc
xchg
push
jae
pop
or
jg
xor
out
cmp
gs
adc
lahf
xchg
cwtl
das
jmp
dec
lods
jnp
popf
inc
lds
lock
icebp
mov
in
or
fsubp
lods
scas
lahf
enter
add
ret
mov
rolb
scas
adc
data16
push
mov
popf
sarb
pop
arpl
stc
shrl
mov
push
jns
or
dec
inc
and
pop
mov
fisubl
int3
icebp
clc
and
pslld
adc
mov
insb
mov
xchg
mov
or
lock
test
outsb
lock
outsb
cmp
add
push
sahf
jecxz
or
cmpb
outsl
and
or
iret
push
fisubs
xchg
jp
out
jb
mov
loop
mov
pusha
jle
xchg
mov
jle
imul
fbld
mov
into
cltd
clc
insb
gs
sbb
enter
jl
les
push
add
outsb
popf
mov
mov
or
inc
adc
aaa
popa
xor
cmp
dec
jb
movsb
ss
imul
sti
lret
add
outsb
pop
mov
rcrl
push
rclb
adc
imul
shlb
sahf
popf
dec
fmul
push
sub
mov
xor
repz
sti
aad
cmpsl
shl
popf
outsb
mov
dec
cltd
cmp
and
and
ds
adc
cmp
mov
pop
or
xchg
idivl
ret
mov
jle
sub
xor
punpcklbw
inc
aad
mov
jecxz
in
mov
inc
pop
inc
shrb
movsl
sub
dec
in
lds
mov
jns
xor
test
xor
pop
pushf
je
push
sub
enter
and
fnstenv
cmp
or
bound
sub
mov
xor
aas
cld
insb
stos
cmp
lods
mov
lret
cmpb
leave
icebp
std
in
movsb
sub
pop
stos
in
mov
sub
or
jg
shr
comiss
xchg
sub
and
cmp
and
push
rcll
pop
jl
pop
adc
sbb
mov
mov
push
xor
mov
pop
pop
jns
pusha
insl
jae
and
incl
mov
movsl
cli
mov
ffreep
fiadds
or
fists
pop
sub
mov
sub
fldt
cmp
pop
mov
fistl
pop
add
outsb
inc
inc
pop
cmp
and
sub
add
mulb
lods
loopne
and
dec
and
adc
or
inc
int3
sub
jmp
xor
jbe
dec
loop,pt
adc
aaa
sbb
fiadds
cld
xlat
adc
ds
inc
push
dec
imul
es
or
mov
mov
pop
pop
das
inc
ret
stos
into
adc
add
sbb
adc
rcrb
sub
mov
sbb
loope
or
insb
sub
dec
mov
sbb
push
and
pop
cld
push
loopne
cmpsb
out
mov
and
sub
dec
adc
dec
mov
sub
adc
cmp
rol
sti
icebp
call
mov
cmp
xchg
stos
push
popa
ljmp
dec
push
addr16
jle
and
sbb
andl
sbb
mov
mov
sub
call
push
push
negl
jg
sbb
pushf
xor
cwtl
stos
xor
push
pop
jmp
bound
sbb
adc
jno
fdivr
test
cmp
fsub
fildl
xchg
jb
sub
imul
jmp
mov
jl
jbe
push
rorl
xchg
pop
mov
mov
fisubs
sbb
adc
sbb
ret
xor
lret
sbb
ficoml
outsb
sbb
sbb
add
or
jp
frstor
inc
push
out
shrl
fadds
fnstsw
push
add
mov
push
cmp
fcoms
add
orl
xor
push
insl
arpl
stos
cmpsb
dec
inc
stos
jg
sbb
adc
scas
xor
add
mov
lcall
push
mov
xchg
push
clc
dec
ret
nop
test
pop
ja
inc
lret
les
loope
xchg
cmpsl
push
mov
shlb
pop
flds
popf
movsl
std
ret
or
dec
mov
mov
popf
fsts
pop
adc
mov
outsl
in
push
push
xlat
adc
movsl
setbe
adc
sub
and
inc
jmp
mov
loope
aaa
test
and
push
sbb
xchg
xor
xor
inc
test
cmp
lock
in
add
enter
mov
arpl
mov
test
push
es
xchg
jmp
inc
pop
loope
movl
and
adc
outsb
inc
lret
and
inc
in
dec
adc
jo
inc
out
je
popf
outsb
or
xchg
mov
data16
loop
jns
sub
es
xchg
cmp
lea
xchg
mov
mov
xor
xor
movsl
stos
sahf
and
lods
jle
and
mov
popa
sub
dec
jmp
repz
sti
lret
call
clc
pop
mov
push
mov
into
push
sbb
mov
pop
dec
add
cmp
sbb
test
sbb
test
movsl
mov
mov
ret
sub
cmc
lock
out
xor
mov
cmc
repnz
push
std
in
enter
add
mov
fcoml
inc
jle
mov
inc
lods
insl
sti
mov
imul
mov
pop
jle
add
mov
cmp
mov
inc
mov
arpl
jns
rorb
adc
sbb
scas
popf
mul
dec
aaa
leave
lock
movsl
sub
jo
pop
jb
xor
js
mov
mov
movsl
add
in
xor
ljmp
and
idivb
fimull
cmpsb
ljmp
imul
pusha
pop
je
jne
gs
test
cli
addb
leave
pop
js
push
mov
rclb
mov
imul
xor
shlb
pop
lret
sub
mov
mov
adc
fucomi
stos
lods
pop
and
clc
xor
pushf
enter
fbstp
or
mov
lock
adc
test
daa
in
imul
das
cmp
mov
aam
jns
lds
push
jl
fistl
leave
add
sub
lods
cltd
out
or
pop
lahf
mov
clc
sub
mov
dec
or
pushf
inc
sub
push
or
xchg
jp
dec
dec
inc
mov
adc
in
or
in
jno
in
gs
fisttpl
ret
mov
pop
out
dec
bound
imull
repz
out
and
cmp
dec
popa
ss
scas
and
sbbl
xchg
push
jmp
xchg
daa
add
cmpsl
add
jmp
js
add
fstl
or
inc
mov
inc
into
push
cld
not
xchg
add
xor
cld
pop
es
fbld
push
sbb
mov
dec
sbb
out
pop
inc
out
subl
sbb
div
xchg
iret
push
xor
and
leave
xor
aaa
mov
icebp
loope
addr16
ljmp
sub
sbb
push
stc
inc
xchg
or
fidivl
push
into
xlat
adc
lret
push
loope
aad
icebp
aad
bound
add
jge
sbb
movsb
lea
insl
fcmove
add
xchg
test
xor
mov
pop
xor
cmpsb
mov
inc
arpl
cwtl
je
xchg
pop
ja
jae
jbe
loope
inc
popa
lds
icebp
lock
xchg
add
shl
sahf
mov
popf
cmpsb
gs
xchg
xchg
xchg
adc
jo
mov
mov
cmp
dec
movsl
mov
cmp
lods
out
out
mov
sbb
mov
jle
push
or
cmpsb
xor
xchg
sub
mov
cs
adc
lock
mov
sub
push
fidivrs
lods
lods
inc
pop
push
scas
dec
pop
mov
out
loopne
inc
cmp
cwtl
nop
leave
lods
xor
and
into
xor
jno
lret
out
adc
shrb
cmp
or
xchg
push
in
out
addr16
mov
movsl
adc
pop
out
mov
pop
xchg
mulb
mov
ljmp
pusha
test
fstps
fstps
pop
jmp
xor
gs
mov
jbe
xor
push
adc
mov
andb
mov
pop
mov
and
cli
nop
test
jl
dec
bnd
je
hlt
lret
ljmp
pop
xlat
cmpl
ret
in
sti
xchg
rorb
jnp
js
mov
test
shlb
imul
adc
rcrb
and
pop
add
pop
orb
xchg
fisubs
test
into
dec
inc
out
adc
mov
out
inc
push
ljmp
adc
shl
daa
addr16
leave
rorl
adc
pop
mov
sbb
add
popf
sub
pushf
jo
cmp
pop
fidivrl
xor
rclb
lea
mov
fistl
clc
dec
cmp
aam
xchg
imulb
add
inc
pop
nop
jae
lods
bnd
xchg
push
lret
fucom
and
mov
sub
mov
or
pop
call
mov
in
push
sbb
pop
aad
sti
out
and
mov
lock
fcmovnb
jp
add
popa
push
in
ja
pusha
dec
lret
cmpsb
test
pop
inc
xchg
sub
cmp
pop
jne
cmpsl
cltd
lret
daa
dec
dec
mov
aas
push
pop
push
ror
pop
push
xorb
lret
fildl
dec
or
call
xchg
clc
inc
mov
out
ds
jns
push
out
das
push
outsb
add
adc
adc
pushf
in
fimull
xchg
js
cli
arpl
inc
cs
push
addr16
inc
sbb
lds
dec
rcrl
xchg
icebp
adc
cmpsl
sub
xlat
into
adc
jg
fisttpl
outsl
pop
outsl
rcll
jge
cmpsb
mov
outsl
insl
add
out
cmp
cmpsl
mov
testl
push
out
sti
adc
inc
push
and
mov
adc
mov
leave
sub
push
mov
mov
jno
shll
repnz
lret
adc
insl
fisubl
add
test
pushf
iret
cli
pop
out
xor
out
jbe
fsubrs
fwait
adc
inc
movsb
mov
das
pop
sub
lahf
xchg
push
mov
xor
shrl
test
std
jae
lcall
jns
cmp
add
mov
orb
or
inc
push
stc
sbb
and
and
insl
jmp
pop
adc
inc
jnp
adc
ficoms
push
xor
mov
lret
jecxz
scas
clc
scas
inc
mov
cmpsb
sub
mov
xor
cs
stos
sti
inc
sbb
jnp
push
leave
in
sahf
xor
loope
push
pop
xchg
mov
cwtl
inc
ss
mov
xor
test
sti
call
adc
ljmp
fidivrs
loopne
fdivrl
ja
cwtl
and
int3
mov
icebp
mov
ret
movsl
cld
add
jmp
mov
and
andb
lods
pop
xchg
dec
ror
adc
in
sbb
xchg
jno
pop
stc
fsubrl
cmp
shlb
jnp
into
inc
aad
push
pop
fstpt
add
dec
xor
add
xor
sarl
addr16
iret
shll
pop
out
mov
jno
fnstcw
call
movsl
mov
or
das
jecxz
movsl
add
sub
daa
into
jae
ret
inc
negl
mov
sbb
into
sub
xor
xor
xor
ds
fs
xor
push
sti
mov
dec
fsts
cli
jbe
add
pop
push
pop
rorb
cld
aam
in
adc
mov
xchg
scas
mov
je
lods
inc
sti
cwtl
addl
push
ja
fistpll
cs
mov
mov
push
cmp
lock
jbe
popl
lods
pusha
and
popa
mov
pop
int3
ss
jle
cs
stos
jge
pop
jb
fdivs
test
adcl
jns
fisttps
mov
aad
nop
ret
and
mov
fcomps
jle
dec
dec
or
pop
dec
cmpsl
dec
adc
pushf
adc
mov
int3
mov
xchg
data16
jp
jecxz
dec
jnp
mov
push
sahf
in
std
aaa
xlat
sub
push
pop
cmp
outsl
xor
push
xor
out
inc
xchg
stos
adc
jae
xchg
in
push
mov
sbb
jbe
pop
push
loope
dec
pusha
mov
data16
mov
dec
aam
or
out
lods
into
iret
mov
test
xor
sub
test
inc
enter
pop
jge
xchg
repz
dec
loope
ret
js
fildl
loope
xchg
imul
cmp
xchg
sub
push
lea
fstl
leave
je
dec
fsubp
orl
shrb
shll
hlt
ret
cs
mov
gs
outsb
add
mov
and
push
lods
in
adc
je
outsl
das
add
xchg
leave
or
or
test
push
or
inc
adcl
loopne
adc
add
clc
jp
sti
xor
push
loope
adc
rcr
cld
cmc
loope
and
addb
sbb
mov
dec
cltd
jae
xchg
shlb
adc
jmp
jmp
idiv
sub
mov
mov
sarl
scas
add
dec
rcr
xchg
add
xchg
das
mov
cmc
lret
fidivs
add
jl
mov
jmp
das
ss
fs
add
lods
pop
test
push
inc
pop
cmp
xlat
into
notl
fists
or
fisubrs
stc
adc
jnp
or
call
popa
fsts
out
lods
popf
push
cmc
jno
popa
inc
les
mov
stos
notl
gs
fisubrl
or
mov
jp
add
pop
cli
dec
ret
mov
out
movsb
lret
in
add
pop
repnz
aad
icebp
dec
mov
dec
push
stos
xor
jmp
and
push
pop
push
orl
inc
outsl
popa
push
ret
out
mov
iret
testl
xchg
lock
stos
xchg
push
aad
jb
cmp
lds
out
movsb
or
lcall
jp
in
push
gs
mov
pop
adc
cmp
out
push
xor
icebp
push
push
aad
xor
icebp
shll
repnz
pop
push
adc
arpl
repnz
push
leave
inc
ret
pop
sub
push
stos
mov
or
push
xor
dec
xor
divb
into
sub
add
outsl
push
push
enter
sbb
call
adc
lea
loope
xchg
out
pop
jp
data16
xorl
adc
fisubs
out
lods
jecxz
scas
imul
jge
xchg
movl
outsl
scas
addr16
fadds
push
cld
cmpsl
inc
fistpl
cmp
dec
sbb
inc
and
inc
push
mov
enter
movsb
cmpsb
push
mov
mov
xor
mov
pop
and
dec
out
mov
dec
je
js
xlat
pop
push
faddl
xor
imulb
cmc
hlt
cld
ficoms
dec
hlt
or
lahf
mov
jne
adc
scas
rol
push
mov
inc
sbb
cmp
loopne
sub
inc
daa
pop
movsb
cmp
cwtl
cmp
bound
mov
mov
mov
dec
pop
call
scas
or
and
jbe
fwait
cmp
cmpsl
mov
scas
sub
ret
add
jp
bound
hlt
ret
aad
sub
lcall
rcll
scas
je
jne
dec
sbb
sub
or
pop
stos
out
mov
xchg
adc
add
push
or
int
fwait
sbb
bound
xchg
jae
mov
out
fs
fs
test
je
dec
and
adc
and
xor
push
push
adc
shll
lea
pop
lret
pop
rolb
fdiv
cmp
gs
mov
mov
ljmp
icebp
out
xchg
not
xchg
and
lret
push
mov
fistpll
xchg
testl
xor
shlb
cmpsb
addr16
push
in
lret
test
jecxz
push
daa
xlat
ja
pushf
daa
loope
int
fnstsw
movsb
ljmp
add
xor
cmp
pop
xor
out
xchg
icebp
sbb
add
mov
jge
pop
vmwrite
cld
inc
add
sbb
dec
xor
test
push
jns
cli
ja
jno
les
pop
sbb
sbb
push
mov
jbe
sub
rorl
push
scas
mov
cmp
xor
addr16
pop
pop
fwait
lods
mov
pop
fisttps
adc
outsb
inc
dec
lret
jg
gs
mov
jae
shll
sbb
and
shl
loope
in
sbb
sbb
jl
cmp
dec
bound
cltd
pushf
sbb
je
cmpsl
in
psubq
sbb
cmp
mov
ds
pop
jnp
test
inc
push
shll
cmp
int
daa
mov
sbb
inc
xorb
xor
into
mov
mov
push
ds
addr16
push
inc
sub
and
inc
stos
popa
ret
mov
xor
xchg
pop
shl
sub
mov
push
push
cmp
rcrl
aas
pop
inc
lods
add
or
ljmp
out
inc
mov
xchg
dec
and
dec
cmp
popf
cltd
jns
pushf
sbb
lret
mov
lret
mov
push
stc
mov
mov
inc
and
or
enter
mov
push
xor
adcl
sub
mov
cmpsb
int3
push
and
mov
or
sbb
sar
lcall
pop
loop
lcall
push
addr16
add
fwait
lret
mov
adc
or
mov
xorb
out
inc
out
sub
jb
mov
pop
mov
adc
int3
andps
addr16
adc
mov
pop
pop
cmp
popf
pop
ficoml
pop
add
lds
enter
pop
in
and
loope
hlt
lret
loopne
adc
add
js
repz
outsl
shrl
xlat
mov
jle
xor
adc
adc
push
mov
pop
xchg
xor
xor
mov
mov
pop
and
add
or
das
adc
pushf
pop
lret
mov
pop
inc
push
repnz
xor
lock
call
lahf
jp
nop
mov
or
mov
xchg
xchg
mov
adc
and
nop
shrl
push
fdivrl
sbb
xor
xchg
or
inc
orl
dec
mov
das
jnp
loope
movsb
dec
dec
sub
idivb
dec
mov
adc
mov
scas
ja
pop
outsb
or
and
inc
dec
cmpl
addr16
dec
sub
std
add
fs
hlt
adc
mov
sub
mov
mov
test
adc
cs
mov
push
dec
lret
pop
mov
xchg
inc
adc
pop
stc
ret
mov
mov
bndstx
sti
mov
jno
jl
fsub
mov
inc
aaa
pop
jns
js
movsl
add
dec
mov
sbb
sbb
add
test
fmull
fbstp
arpl
cmp
test
add
rcl
adc
test
add
push
fiadds
mov
arpl
add
push
dec
inc
int
sbb
and
cmc
mov
xchg
aas
pop
imul
sub
jne
loopne
and
mov
fstp
test
add
ffreep
cmp
stc
enter
mov
faddl
test
pop
xor
sbb
pusha
clc
and
cmpsb
push
push
jae
sahf
enter
outsb
jno
mov
jns
test
sbb
ljmp
adcl
cmpsl
mov
dec
fsubrs
movsb
test
xor
or
add
mov
out
sbb
test
pop
push
es
sbb
dec
loop
mov
cli
test
loope
add
sbb
inc
stos
mov
xchg
cmp
ror
mov
adc
cwtl
je
xchg
or
sbb
in
fistpl
lds
mov
outsb
es
pusha
and
in
pop
push
mov
sbb
cmp
push
and
sub
movsl
repnz
dec
adc
cmp
jecxz
es
in
mov
insl
jmp
push
add
arpl
enter
cli
add
fwait
cmp
xor
fwait
sbb
lret
ljmp
arpl
fsts
aad
rorl
out
xor
mov
arpl
push
out
gs
add
adc
pushf
pop
xor
gs
push
movsl
inc
inc
cmp
pop
addr16
jl
fstpl
push
jmp
add
decl
mov
cmp
popf
xchg
add
in
push
lret
subl
xchg
jmp
xor
lea
je
aaa
sub
jp
outsl
ret
dec
pushf
push
loop
jae
sti
sub
mov
es
xlat
inc
jp
mov
push
imul
sbbb
fisttpll
mov
out
push
cmp
aas
lods
sbb
jae
adcl
fs
jno
add
les
mov
aas
out
sub
fnstenv
xor
mov
insl
pop
push
dec
mul
inc
inc
aaa
loopne
push
jno
sbb
addr16
mov
sub
xchg
es
mov
dec
cmp
jecxz
cmp
add
cmc
mov
lret
lock
sbb
jge
das
outsb
or
push
movsb
push
insl
incl
pop
insl
je
add
jae
sbb
adc
insl
pushf
jno
in
mov
push
mov
push
in
or
or
pop
fcmovu
or
es
mov
or
add
jmp
or
jo
dec
jecxz
or
mov
mov
push
cld
test
loope
add
cli
mov
fchs
das
fistps
sti
add
pusha
aaa
jg
push
xchg
add
pop
pushf
arpl
enter
jns
movsb
pop
ja
jo
push
fwait
enter
or
int
nop
mov
sahf
ficoml
aas
dec
mov
jns
cwtl
or
stos
cwtl
and
sub
in
aad
adc
sbb
loop
mov
pop
shll
loop
imul
stc
and
xchg
icebp
xchg
rorb
mov
popf
fs
test
push
popa
mov
jge
xor
lahf
notb
mov
bound
dec
and
cld
xor
fbld
pop
jae
rorb
add
jmp
neg
sbb
xchg
clc
testl
push
cmp
pop
xor
shll
mov
sub
xor
shrb
pop
lock
lcall
sub
loop
mov
sub
cmp
xchg
out
test
loop
imul
and
pop
rclb
mov
xchg
cmp
and
popa
test
sbb
clc
add
sub
xor
adc
fs
adcl
nop
xchg
and
js
cld
jmp
xor
mov
rcrl
dec
negb
pop
add
pushf
sbb
shll
out
out
sub
outsb
mov
clc
push
popf
mov
cmp
cmpsb
fxch
aas
push
sbb
inc
ss
pop
or
push
xchg
inc
push
adc
add
insl
xor
pop
int
add
imul
mov
outsl
xor
cli
popf
add
jl
fs
lret
cli
dec
stos
xchg
movl
iret
pop
inc
mov
dec
in
fadd
xchg
mov
int
ja
imul
and
call
fists
dec
dec
and
lods
cmpb
xor
cmp
leave
mov
push
into
mov
or
pop
pop
adc
jmp
jl
add
in
imul
push
pop
sbb
add
lods
cs
repz
je
hlt
lahf
test
mov
adc
jae
sbb
out
xchg
mov
mov
imul
sub
mov
imul
push
jns
push
outsb
dec
out
movb
jb
clc
push
xchg
xchg
push
mov
repnz
xchg
popa
sahf
sti
int
bswap
xorb
xchg
jle
mov
out
ljmp
ds
dec
inc
sbbb
lea
cli
lahf
xchg
pop
mov
aam
mov
std
imul
mov
mov
cmpsl
dec
mov
roll
xchg
adc
dec
out
fnsave
pop
lahf
jge
xchg
movsbl
xor
pop
jle
gs
inc
push
sbb
cmpsb
lcall
dec
cld
insb
push
imul
loopne
movb
cmp
scas
lea
sarl
rcrl
xlat
xchg
stos
les
sahf
stos
dec
push
sbb
fwait
cltd
fwait
addr16
gs
jae
dec
mov
jp
push
xor
stos
add
in
add
push
push
in
fnstcw
push
cmp
mov
arpl
and
fwait
lret
pop
mov
jbe
out
or
test
mov
pop
pop
adc
adc
int
int3
inc
mov
inc
in
fcmovnu
inc
ror
adc
jmp
fisubrl
dec
or
and
xchg
fsubl
and
jle
jecxz
sarl
loopne
int3
push
mov
jnp
out
xchg
jbe
pop
and
unpckhps
push
mov
inc
sarl
enter
cmp
mov
lods
mov
inc
sbb
dec
sbb
daa
repnz
inc
or
loopne
repnz
loop
mov
stos
data16
inc
clc
jmp
in
adc
addr16
add
jg
mov
ds
push
mov
mov
fldenv
ret
call
ss
mov
xor
dec
pop
inc
adc
mov
bound
sbb
add
enter
dec
shrb
cmc
cli
jae
scas
roll
dec
and
sbb
negb
and
repz
mov
rorl
mov
cltd
int3
idivb
sbb
jnp
xor
popf
mov
cmpsl
adc
mov
andl
in
push
ds
jle
movsl
push
mull
rclb
jl
mov
enter
lds
cmpsl
inc
imul
dec
cmp
inc
fisubrl
pushf
rol
inc
lahf
stos
shl
shll
xchg
out
xor
adc
adc
faddl
mov
push
sub
subb
dec
xlat
test
pushf
or
daa
shll
jmp
and
je
pop
rclb
or
enter
xchg
movsl
mov
adc
add
in
in
mov
dec
or
pushf
cmp
rol
pop
xchg
jmp
addr16
and
adc
jmp
or
ret
sbb
add
sub
ja
inc
and
mov
xor
push
cmc
add
out
mov
push
mov
cmp
adc
mov
push
test
xor
or
push
mov
popa
nop
add
push
js
aas
cmp
mov
aaa
mov
jge
mov
jnp
pop
push
out
outsl
out
or
push
xor
jnp
cwtl
test
les
pop
jb
cmp
in
sbb
mov
pop
or
ljmp
loopne
pop
add
dec
scas
outsl
sarb
cli
lds
mov
push
pop
and
mov
shl
mov
dec
mov
mov
xor
pop
dec
loop
into
inc
or
lcall
stos
cmpl
loope
in
and
or
mov
or
adc
push
mov
sub
shrb
loop
xchg
sub
pop
add
adc
mov
pop
dec
push
ja
iret
sub
inc
jo
and
enter
inc
jnp
movl
lahf
jmp
or
repnz
dec
mov
lods
mov
pop
push
or
xor
ljmp
and
xchg
lret
enter
cmp
sub
leave
xor
fwait
cld
push
xor
fwait
mov
and
repnz
xchg
testl
sbb
xchg
loope
iret
cs
stos
and
subl
push
cmp
cmpsl
and
jne
xlat
xor
xlat
dec
cmpl
jl
sbb
fwait
sub
add
jb
cltd
stc
add
cli
fwait
arpl
out
inc
or
xchg
movsl
pop
shrl
jb
xor
mov
jl
cmpb
dec
aas
dec
ss
ljmp
fs
rorl
cwtl
jae
cmp
inc
es
pop
fistpll
in
mov
cmp
cmp
pop
push
xorl
cmpsl
andl
push
aas
dec
insl
mov
sub
fs
mov
repnz
ds
add
lcall
mov
rorb
stc
xor
jl
mov
xor
xor
pop
jle
xchg
ljmp
cltd
pop
jg
mov
add
cmpsl
loopne
cltd
xchg
sub
repnz
mov
jecxz
add
insb
in
or
sub
out
test
movq
inc
pop
add
xor
in
sbb
mov
rclb
push
ret
into
inc
imul
or
jns
fists
addr16
outsb
push
out
pop
push
inc
adc
in
scas
xor
cmc
push
je
insl
pop
lcall
loopne
fwait
push
loope
into
fnstsw
sbb
inc
mov
lcall
fnclex
dec
jne
push
push
or
cld
sub
xchg
mov
dec
aaa
add
cmp
adc
xchg
pop
xor
mov
clc
mov
pushf
pop
test
inc
mov
xchg
mov
jnp
or
leave
daa
lret
dec
xor
fwait
dec
out
in
outsb
or
test
mov
pop
out
rcl
jp
and
push
xchg
imul
push
mov
mov
stos
call
xchg
jb
jg
fiaddl
call
out
pop
movsl
add
add
pop
ficoms
add
cltd
hlt
fadd
sub
repz
lret
xchg
in
xor
rorb
into
mov
ds
loope
mov
mov
mov
test
xor
shll
fistpl
xor
mov
or
mov
jle
push
sub
cltd
adc
sti
push
pop
iret
cld
iret
pop
pop
cli
xchg
push
mov
mov
insb
lds
imul
inc
aad
sahf
mov
test
add
sbb
lock
nop
fstl
sti
dec
mov
xchg
insl
daa
jecxz
int
and
jb
fistpl
and
or
mov
loope
adc
xor
dec
jl
mov
sbb
xchg
fstps
cltd
jl
shl
jne
jb
xor
lock
cmp
xor
aas
pushf
sub
xchg
mov
lock
not
mov
stos
lods
out
call
sbbb
mov
in
cmpsl
mov
gs
das
adc
lret
lcall
jge
lods
push
fwait
bound
pop
dec
adc
mov
push
jl
mov
es
jo
mov
gs
mov
rcll
push
addb
jne
mov
inc
cmpsb
aas
mov
xor
dec
mov
sub
paddusb
rorb
inc
inc
fwait
cmp
adc
or
dec
dec
out
fsubs
aas
add
xchg
insl
movsb
jo
lods
dec
ja
mov
ljmp
andl
pop
xor
mov
lret
mov
push
sbb
fsubp
sub
mov
testl
mov
lcall
es
jbe
dec
pop
loope
popf
in
cwtl
mov
mov
or
stos
or
nop
movsl
cmp
jo
push
add
jmp
mov
xchg
push
cwtl
sub
test
mov
outsl
lea
enter
inc
mov
sub
and
lahf
or
repnz
gs
sub
push
inc
movsl
add
pop
into
jae
subl
test
mov
ja
loop
pop
mov
add
jno
fmul
jo
push
sbb
js
lret
jmp
inc
cwtl
movsb
jae
pop
les
loop
aad
sub
scas
sbb
scas
pusha
mov
nop
add
sbb
xor
mov
jb
loope
out
push
mov
aam
mov
std
dec
addr16
add
xor
mov
cmp
outsl
xor
pop
test
aaa
inc
or
mov
dec
aaa
jne
das
inc
into
cmp
repnz
daa
fldcw
adc
dec
aas
sub
jmp
popf
xor
cld
push
xor
gs
mov
sub
pop
inc
outsb
adc
jecxz
mov
outsb
test
inc
cmp
cmp
sub
scas
jl
ljmp
cmp
jg
fsubp
xor
sub
inc
arpl
xor
sub
and
and
fistl
mov
adc
ja
pop
xlat
xchg
ret
cmp
xor
xor
es
cmpb
jno
xchg
fsubs
mov
push
rolb
mov
lods
xchg
pop
dec
out
ljmp
cmc
sub
pop
cmc
in
mov
push
fwait
push
jnp
addr16
sub
shl
add
fs
push
xor
outsb
xor
out
bound
aas
iret
call
fwait
mov
btr
jnp
xor
scas
add
lret
faddl
cmp
jmp
imul
xchg
push
cmp
pop
mov
int3
inc
jge
lods
in
mov
pop
push
pop
shrl
jl
aaa
and
jge
sub
sub
sbb
push
mov
inc
cmp
xor
in
sub
jns
gs
popa
ja
mov
sti
roll
fsubs
pop
adc
lods
adc
push
jnp
mov
push
add
js
outsl
pop
fdivr
jbe
cmpsb
addr16
cld
cli
rorb
addr16
popa
mov
sbb
add
push
shrl
dec
xor
insb
addr16
push
aad
negb
iret
jecxz
cmpb
loopne
adc
in
push
push
inc
jle
jmp
inc
adc
push
pushf
mov
sahf
shl
xchg
pop
sbbl
jp
bound
push
cmp
sti
shr
stos
sbb
or
adcl
inc
xchg
ljmp
in
arpl
mov
add
xchg
or
mov
xlat
inc
insb
mov
jae
ss
pop
xchg
fsubrs
or
shrl
icebp
or
movsl
dec
fwait
leave
mov
push
cmc
pop
test
addr16
mov
pop
mov
loope
jb
inc
idivb
mov
jmp
outsl
mov
xor
scas
adc
rcrl
popa
sti
lods
lods
mov
xchg
jo
das
sbb
cmp
sbb
sbb
sbb
pop
fcmovb
pushf
or
push
inc
and
sbb
ja
mov
sbb
in
inc
jnp
subb
out
test
jl
xor
push
mov
mov
je
popa
test
fsubrp
mov
divb
inc
mov
nop
xor
imul
fisubs
jae
subl
mov
jns
movlps
sbb
cli
lahf
sub
idivb
inc
sarl
out
imul
rcrb
stos
stc
pop
push
imul
pop
dec
iret
lahf
sbb
fsubl
addl
enter
fisttps
jmp
mov
pop
dec
and
iret
inc
fcmovu
cmp
repnz
push
push
inc
or
jp
push
outsl
jb
lahf
and
sahf
sub
clc
jecxz
imul
mov
xchg
je
inc
out
and
push
insl
in
inc
jb
cmp
sbbl
test
int3
daa
pop
ud2
leave
mov
pop
lea
loop
or
pop
pop
scas
fxch
test
ret
push
mov
sub
lret
scas
mov
push
cmpsl
and
repz
push
adc
js
inc
lds
js
mov
sahf
ficomps
nop
jl
int3
cmovb
adc
shlb
adc
xchg
cmpsb
xor
shl
imul
push
adc
push
xlat
adc
dec
jo
outsl
test
sbb
cs
aam
and
dec
adc
and
mov
pop
in
inc
andl
scas
outsl
jecxz
mov
jo
cmp
sbb
popa
lahf
jbe
push
int
mov
out
xchg
or
test
int3
in
add
iret
jecxz
cwtl
enter
sbb
hlt
lea
stos
sti
push
sahf
rolb
xor
mull
icebp
adc
and
push
js
ljmp
pop
sbb
xchg
jbe
dec
mov
jl
and
shl
call
inc
sbb
add
add
xor
xchg
add
xchg
and
fdivl
test
pop
roll
inc
mov
or
enter
and
or
sub
mov
movsl
mov
push
inc
inc
jle
cmp
dec
xchg
xorb
jne
mov
xchg
sub
mov
mov
faddl
mov
sub
or
push
cwtl
xlat
fsubrl
mov
jae
jle
cs
or
pop
scas
xchg
dec
jge
dec
in
mov
inc
in
adc
cmc
dec
adc
adc
adc
push
cltd
cmc
xlat
mov
push
dec
pop
inc
clc
mov
into
jnp
xlat
mov
test
adc
and
mov
lock
push
sub
fistl
push
mov
dec
sbb
in
ret
test
pop
push
pop
mov
mov
ret
call
rorl
inc
out
filds
jb
repnz
xchg
nop
filds
data16
mov
lods
mov
jb
push
repz
dec
shll
pop
rorl
dec
inc
mov
mov
jns
daa
loope
pop
das
jns
ss
inc
in
sbb
cmpsb
xor
hlt
inc
jbe
add
pop
lea
hlt
mov
das
cmpl
dec
lds
das
test
aam
mov
mov
and
sbb
mov
imul
cmp
cwtl
sub
or
ret
sti
xor
mov
mov
fmul
push
pushf
pop
jb
lock
or
rcrb
pop
add
repnz
mov
push
pushf
mov
jg
adc
mov
push
insl
mov
aam
mov
add
push
dec
fdivs
cmpsb
jnp
pop
or
les
sahf
das
lret
mov
inc
sub
out
lods
push
in
scas
push
jmp
pop
cmpsb
rolb
cmp
sarb
add
pusha
loopne
aam
push
sub
icebp
fwait
repz
ficoms
xor
adc
addl
push
loop
and
ljmp
shll
push
or
inc
popa
sub
in
xchg
sti
xor
mul
fwait
jne
pop
xlat
insl
js
scas
xchg
sbbl
mov
adc
xchg
loope
movsl
loopne
pop
cmp
pop
pusha
pop
mov
mov
push
ficoms
aad
pmaxsw
fwait
shll
adc
call
insl
push
test
mov
ja
stos
xchg
or
scas
gs
aad
movsb
xchg
sub
push
mov
sbb
ja
add
repz
sub
or
xchg
push
in
pop
nop
or
lds
dec
xlat
lret
cld
sub
adc
inc
sbb
xchg
mov
gs
xor
push
ljmp
add
jne
sti
inc
rol
cs
inc
jp
das
mov
rcr
xor
insb
popa
inc
loope
cmpb
inc
into
and
mov
xchg
lods
neg
and
shlb
stos
jmp
mov
sbb
and
and
test
test
sub
mov
sarl
outsl
daa
pop
fdivl
and
mov
andl
lea
arpl
in
xor
nop
cs
and
outsb
out
stc
adc
fsubrs
mov
xor
gs
add
ljmp
add
std
shll
mov
mov
test
mov
jb
lcall
fstps
push
or
adc
push
sbb
mov
cs
mov
push
jecxz
add
sti
or
jl
xchg
fidivrs
or
xchg
imul
cmp
xchg
mull
shll
add
cli
cmp
addb
insl
mov
fsubr
sti
out
pop
inc
and
sub
jecxz
push
cmp
jmp
imul
push
mov
add
icebp
dec
fisttpl
dec
adc
lcall
dec
dec
inc
push
sub
jbe
jae
icebp
and
push
das
mov
cli
loop
jle
dec
iret
bound
fdivr
inc
xchg
hlt
popf
xchg
xor
jl
repnz
mov
jbe
and
mov
shl
aad
jbe
mov
xor
push
jae
cli
inc
out
jns
fldenv
enter
iret
aad
jnp
rorl
call
stc
arpl
lahf
cmpsl
shll
pop
jae
inc
aam
and
pop
push
mov
mov
lret
in
mull
lret
cld
xchg
pop
xor
cmp
movsl
xor
mov
xor
push
stos
nop
jb
movntps
mov
xchg
mov
and
loop
stc
in
fldenv
repz
adc
ja
fadds
push
push
lcall
and
dec
sub
xchg
push
aaa
mov
lahf
mov
pop
jb
inc
call
mov
jg
or
movsl
pushl
or
or
push
rcrl
lods
inc
jno
fs
mov
out
ljmp
test
aaa
clc
or
mov
inc
jb
adc
subl
test
mov
add
dec
pop
shrl
out
in
push
flds
push
cmp
pop
xchg
adc
dec
and
jmp
pop
mov
shlb
dec
mov
sti
adcl
fistl
jecxz
cli
jo
inc
jl
mov
ficoms
pop
pop
dec
add
rcl
arpl
xor
movsl
into
cmp
mov
inc
dec
insb
stc
pusha
mov
idivb
lret
icebp
xchg
lahf
sbb
xchg
inc
sbb
out
mov
push
mov
bound
in
in
lret
stc
arpl
mov
dec
and
adc
inc
mov
sub
pushf
fldcw
lret
mov
les
int
mov
leave
out
les
sbb
loope
imul
push
pop
jl
lea
pop
popf
or
xchg
fwait
inc
push
dec
inc
js
sbb
repnz
inc
test
mov
cmc
push
xor
mov
stos
pop
xchg
xor
cmp
xchg
and
pop
test
sbb
testb
xchg
sub
pusha
pop
xor
insl
and
mov
insl
pop
or
mov
aas
mov
mov
inc
mov
cmp
scas
cld
fiaddl
fistpll
mov
xchg
or
rol
jae
jle
fst
leave
shrl
repnz
add
add
xlat
shrb
stc
sub
dec
dec
idivl
xchg
sbb
push
int
pop
lock
xor
sti
lods
mov
xchg
sbb
cmp
les
dec
daa
mov
insl
test
data16
adc
mov
les
int
or
mov
xchg
dec
jl
incl
and
cli
jne
pop
mov
bound
test
dec
cld
xchg
ja
dec
push
adc
das
bound
scas
leave
inc
push
push
and
and
sbb
dec
and
cmp
insb
repz
lret
xchg
fnstsw
dec
mov
hlt
mov
int3
push
push
fistpll
mov
rcll
repz
mov
bnd
test
mov
imul
and
add
mov
sahf
fidivrs
cmp
inc
in
mov
loope
push
lret
sub
mov
inc
dec
jle
mov
jecxz
rcll
inc
push
inc
push
dec
cwtl
pop
out
sub
fisttps
or
pop
cwtl
mov
mov
addr16
lahf
fldl
xchg
fisubrs
push
jl
testb
scas
pop
xchg
ljmp
loopne
inc
sets
cld
fidivl
lcall
test
add
in
popf
cli
cmp
out
incl
lods
mov
stos
xchg
jp
lret
ficoml
cmp
sbb
movsb
mov
add
outsl
jl
push
sub
mov
shll
sti
fildll
shll
fs
inc
cmp
push
xchg
sbb
dec
pusha
test
jns
mov
xchg
stc
jg
test
sti
cmp
ds
or
xor
loopne
pusha
fcomps
mov
xor
pop
filds
jo
clc
std
shlb
enter
lret
fsub
aas
pop
in
jne
addr16
bound
mov
cmpsb
iret
stos
dec
gs
and
imul
int
scas
cmpsb
pop
cmpsl
push
jmp
das
sbb
test
xchg
popl
pop
jbe
xchg
mov
stos
std
test
xchg
pop
je
xchg
test
jno
mov
mov
lahf
mov
outsl
daa
pusha
inc
push
shll
and
scas
sbb
sub
shl
dec
mov
repz
orb
jnp
out
sbb
ret
add
mov
xor
push
in
mov
rorl
shrl
mov
aas
bound
flds
or
mov
fstps
cmp
xor
and
sbb
subl
adc
sub
pop
dec
rolb
gs
popa
push
repnz
adc
push
push
add
mov
popf
shrb
loop
pop
or
push
mov
pop
int3
enter
sbb
push
loope
mov
cmp
add
push
std
lock
iret
daa
cmpsl
popf
cmpsl
dec
xor
xchg
clc
jbe
mov
mov
gs
xor
arpl
xchg
sahf
cli
jmp
and
mov
mov
xor
add
lret
push
lret
push
add
push
repnz
adcl
sahf
inc
mov
jge
add
inc
adc
sbb
push
add
repnz
jp
jl
rcr
div
add
mov
popa
mov
pop
into
xchg
and
faddl
jnp
xor
xchg
filds
dec
push
fildll
neg
mov
and
sbb
out
nop
jo
xor
mov
cli
data16
lret
inc
mov
jns
cwtl
xor
out
shll
pusha
and
mov
shrb
lcall
push
les
jl
add
lods
xchg
cs
xchg
data16
dec
into
movsl
sahf
int
and
add
xchg
fcoms
xchg
shrb
jg
loop
hlt
or
push
pop
lret
test
cwtl
push
jo
icebp
scas
scas
insl
or
xor
pop
shll
sbb
dec
sar
shlb
pushf
je
add
ror
inc
adc
subb
push
adc
xchg
ss
rcrb
adc
int
insl
lock
rol
sti
popa
aas
test
std
das
into
mov
sahf
push
add
push
adc
jg
out
sbb
xor
sbb
aaa
pop
cmp
xchg
pushf
cli
test
xchg
xor
movsb
push
pop
adcb
mov
jle
push
cli
mov
mov
xchg
frstor
mov
stos
inc
rsm
sbb
out
pop
add
loop
jns
adc
sbb
popa
jnp
xor
je
add
mov
or
mov
cli
scas
rorb
dec
and
inc
dec
movsl
cmc
shrl
mov
mov
outsl
lock
fiadds
in
dec
insl
rcrl
lods
stos
lods
lea
nop
repz
fldcw
arpl
fmuls
adc
pusha
push
push
movsb
iret
sub
pusha
add
stos
mov
cmc
lret
mov
stos
psllw
int3
aad
adc
jl
mov
xorb
mov
ret
adc
xchg
cmpsl
xorb
push
addl
sti
mov
xchg
int
scas
imulb
addr16
xchg
repnz
int
cmc
pop
inc
or
push
lret
adc
dec
xchg
inc
or
out
cmp
aas
cmp
add
sbb
adcb
sar
pop
clc
push
push
test
out
mov
mov
in
mov
shlb
cmp
fcmovne
sbb
adcb
lahf
push
pop
pushf
stos
push
mov
cli
mov
lods
insl
mov
adc
movsb
arpl
or
test
sbb
test
mov
push
fldcw
and
popa
xlat
mov
out
inc
pop
jns
mov
mov
push
or
pop
mov
roll
repz
pusha
mov
and
xchg
cmpsb
cmp
pop
mov
enter
pushf
mov
pop
cmpsl
adc
les
stos
cmp
xchg
push
mov
sub
mov
fs
xchg
mov
pop
in
push
in
dec
or
std
mov
fstl
jp
xor
push
and
add
lcall
cltd
or
ja
adc
js
lcall
jmp
jno
icebp
sub
mov
mov
scas
shl
clc
xchg
or
ja
fbld
or
es
movsb
jb
push
cmp
sub
fnclex
pop
test
sbbl
add
and
hlt
jecxz
decb
call
mov
imul
out
inc
sub
fiadds
inc
jno
push
push
mov
lret
jae
sub
mov
repz
pop
or
out
test
sub
es
pop
mov
test
pop
mov
mull
xorl
sub
pop
dec
cwtl
rolb
clc
xchg
icebp
pop
movb
cmp
jnp
test
and
cmp
popa
xchg
sbb
hlt
fsubrl
or
dec
xorb
insl
fstps
std
movsl
fmuls
int
pop
int3
jae
push
scas
fcomi
in
addb
jg
sti
sub
ljmp
stos
cmp
mov
fnclex
rcll
sbb
and
add
imul
addb
mov
mov
test
sub
adc
ds
mov
loopne
fs
xchg
jmp
xor
aas
adc
jb
mov
fistps
ja
push
aad
cmc
push
sbb
or
push
out
into
lock
or
cmp
or
xchg
push
cmp
sub
mov
mov
loop
sbb
or
pop
push
jl
insb
xchg
sbb
roll
xlat
mov
cmp
sub
shll
ficoms
sbb
and
mov
rcrb
ja
shl
pop
mov
sbb
and
mov
test
jbe
scas
lods
xor
pop
xor
or
mov
jg
adc
and
aas
es
cli
or
jo
adc
mov
inc
js
je
sti
out
lcall
xchg
dec
mov
mov
les
jnp
mov
jbe,pn
or
fistps
lea
negb
adc
push
mov
movsb
mov
adc
mov
mov
pop
in
pop
xchg
movsb
out
lret
stos
adc
mov
iret
cmp
push
mov
out
das
mov
js
shl
xchg
push
addr16
mov
push
cs
adc
lret
fwait
sub
lret
mov
popa
test
es
sub
xchg
cld
cmp
lahf
out
add
ret
inc
dec
add
or
outsl
aam
pop
xchg
int
cmpsw
shr
sub
and
mov
int3
das
movl
add
jae
mov
inc
pop
mov
cmp
fwait
in
pop
cmp
jne
lea
hlt
mov
mov
nop
adc
xlat
mov
xchg
add
stc
je
fldt
cmp
into
xchg
mov
insb
mov
mov
aad
dec
and
jle
clc
add
cmp
jecxz
rcrb
inc
sub
push
mov
push
mov
cs
aad
pusha
mov
inc
pop
pop
cmpsl
jg
and
das
loop
hlt
aam
inc
icebp
roll
shrb
sbb
sahf
xchg
or
xor
repz
adc
icebp
bound
lahf
outsl
loope
mov
call
push
bound
arpl
push
sbb
dec
sub
int
mov
pop
rorl
cltd
jge
ret
in
or
lds
out
jbe
or
lahf
cmp
cmp
dec
fstps
dec
xchg
mov
dec
sub
dec
jb
sti
sarb
cmp
out
lods
lret
xchg
and
inc
pop
bound
out
mov
add
inc
sub
xor
pop
cld
adc
inc
inc
mov
xchg
repnz
dec
shrl
cmp
lods
pop
mov
les
push
lods
insl
mov
sub
pop
daa
out
pop
dec
jmp
stc
loop
mov
test
mov
imul
mov
popf
fdivrl
jg
insl
rcrl
and
xor
cmp
cmp
out
jns
add
pusha
mov
out
pop
shll
lcall
insb
push
sbb
lcall
pop
repnz
cs
sub
popf
sahf
pusha
push
sub
lods
rcrl
inc
ja
pop
mov
adc
addl
test
lods
fs
push
push
sahf
mov
sub
inc
mov
out
jp
cmp
mov
fdivrl
hlt
adc
mov
dec
adcl
inc
pop
jecxz
dec
jmp
daa
dec
sahf
fsts
cmpsl
xor
movsb
cwtl
fidivs
xor
cmp
fiaddl
dec
push
pushf
cmpsl
scas
mov
les
out
xchg
adc
mov
pop
loop
pop
pop
inc
into
in
ret
cltd
adc
mov
jns
mov
mov
xor
imul
jo
pushf
xlat
lods
dec
xchg
pop
sbb
rorl
xor
movnti
lret
push
pop
iret
dec
jecxz
xor
shl
fimull
xor
into
gs
adc
es
test
das
test
push
inc
je
jno
negl
or
mov
cli
lock
pop
imul
mov
xor
div
repz
roll
xor
lahf
popf
mov
xor
clc
in
dec
loopne
int3
mov
push
mov
fs
sbb
push
inc
mov
push
rcll
sbb
aam
push
outsb
ficompl
test
ficoms
lea
adc
xchg
pushf
sub
xchg
ja
mov
jo
lahf
out
adc
xlat
fcomps
jge
orl
push
div
jbe
movsb
test
lock
gs
or
movsl
andb
mov
and
fistps
mov
and
sahf
push
jl
mov
arpl
push
icebp
int
andnps
fucomip
pop
pop
sub
inc
lock
jl
jp
ret
cmpsl
mov
push
cld
xchg
fimull
sbb
xchg
mov
std
mov
out
or
jns
cltd
insw
hlt
sub
pop
mov
xor
sarl
inc
sbb
inc
cltd
insl
addr16
leave
adc
xchg
or
jg
cmpsl
sub
add
mov
push
shrb
jecxz
js
xorl
mov
cmp
clc
cmpsl
xor
outsb
ret
stc
loopne
dec
adc
stc
adc
or
jns
sub
ljmp
jl
xchg
or
cmp
test
data16
cmp
loopne
add
sub
inc
add
cmc
xchg
dec
add
jge
xor
pop
lods
mov
jge
inc
fcoml
aas
cltd
jo
sahf
xor
adc
into
cltd
add
ficomps
dec
sbb
push
and
inc
sbb
in
pop
fmulp
adc
jmp
xchg
stos
scas
icebp
stc
cltd
rorb
cmc
imul
sbb
mov
mov
cmpsl
mov
stc
xor
xor
cltd
insb
dec
mov
pusha
and
icebp
dec
lret
pop
shrb
sbb
test
pop
incl
lret
sbb
push
xchg
dec
pop
inc
pop
xchg
rol
sbb
popf
jmp
mov
vpmacsdqh
pop
jp
loopne
xchg
das
jns
imul
and
adc
mov
or
mov
ss
lahf
sbb
test
xchg
ljmp
push
rcrl
sbbb
loope
push
mov
or
fcmove
add
cmc
fdivp
sbb
jge
test
push
adc
jmp
ret
push
leave
mov
xor
aas
jp
or
push
mov
xlat
dec
test
nop
adc
push
out
iret
jmp
mov
push
js
andl
fdivrl
inc
arpl
stc
xor
aaa
pop
mov
jle
fstpt
dec
loopne
push
mov
sti
lret
add
lcall
ljmp
iret
mov
mov
mov
sbb
hlt
insl
roll
in
scas
negl
dec
clc
hlt
pop
or
or
hlt
test
pop
lods
xchg
adc
out
outsb
jbe
cmp
mov
xchg
loop
test
orl
lcall
cmp
loope
push
outsl
sbb
outsl
hlt
cmp
mov
xorl
lcall
shll
loope
mov
push
sub
sbb
push
loope
xor
xchg
loopne
dec
aad
cwtl
inc
cmp
xchg
mov
xchg
push
jge
rclb
test
cmp
insl
dec
mov
nop
push
das
insl
out
in
xchg
ficoml
popf
inc
jp
cmp
cmp
pop
pusha
shrb
lock
mov
mov
cli
inc
stc
pusha
cmc
fs
sbb
xorl
testl
mov
adc
dec
adc
in
xlat
xchg
xor
sbb
sub
mov
xchg
adc
lock
sub
sti
cs
push
clc
clc
pop
mov
lahf
sbb
push
sbb
xlat
lret
dec
cmpsl
mov
std
pop
pop
mov
dec
fdivr
data16
jo
stc
repz
sbbl
fsts
fsubrs
call
mov
outsl
ret
jge
cmp
daa
leave
iret
test
lods
cmc
mov
ja
mov
jne
cmc
add
push
or
mov
ret
stc
clc
mov
cmp
stos
insl
sub
outsb
add
test
xor
sbb
lret
subw
cmpsl
iret
mov
pop
cmp
xor
xchg
not
cmp
mov
jge
clc
lret
cld
mov
test
je
int
xchg
push
xchg
pop
popa
push
in
fildl
je
cwtl
in
inc
mov
subl
data16
or
jb
int
stos
cld
dec
and
out
or
arpl
xchg
add
adc
mov
and
clc
in
mov
mov
add
pop
outsl
pop
cltd
push
xchg
fisubrl
mov
jns
pop
inc
repnz
cmpsb
adc
nop
xchg
push
xor
test
ljmp
cwtl
hlt
push
add
sbb
ret
sbb
sbb
lds
push
jecxz
xchg
or
repz
mov
jbe
fldl
mov
test
jno
mov
add
lcall
sub
xchg
clc
nop
mov
and
repnz
jp
jnp
dec
movsl
mov
cwtl
push
inc
adc
inc
or
dec
lahf
or
stos
into
popf
jg
dec
test
fisubl
cmp
sub
loope
xchg
sti
fiadds
mov
outsl
mov
mov
and
lret
cld
sub
sub
sub
inc
leave
icebp
pop
loopne
hlt
mov
push
inc
pop
cltd
fstpt
pop
xchg
cld
mov
xchg
push
sub
sbb
test
mov
je
repz
sbb
adc
jae
or
icebp
xchg
dec
jns
lock
push
adc
or
lahf
and
enter
cli
mov
push
mov
lods
push
addb
or
sbb
iret
cmp
inc
sbb
insl
xchg
fnsave
cwtl
call
cs
xchg
es
dec
push
les
adc
add
push
pop
inc
cmpsl
leave
or
lods
or
xchg
xchg
movl
pop
les
je
sub
jno
mov
fcom
mov
dec
adc
push
dec
fmuls
xchg
pop
cmpsb
xchg
fucom
in
mov
dec
or
adc
xchg
loope
jecxz
clc
add
mov
das
inc
cld
jle
sub
jbe
xchg
int3
fisubrs
arpl
or
fsubp
inc
add
mov
sbb
adc
jae
repz
loopne
dec
add
jg
lods
push
adc
xor
mov
xlat
out
sbb
add
xchg
push
pop
or
pop
lea
cmc
fwait
scas
or
cmpl
into
mul
adc
mov
sub
test
push
imul
jle
outsl
cmpsb
mov
dec
add
sbb
neg
mov
jg
and
jno
int3
push
cmpsl
jmp
adc
in
negl
inc
fsubrl
in
aad
pop
xchg
imul
mov
cmp
lret
xchg
dec
or
stos
test
dec
cwtl
iret
mov
cmpsl
sub
cwtl
sub
jmp
scas
loopne
fstps
hlt
subb
mull
mov
add
mov
rcrl
pusha
fsubs
xorb
add
jl
out
or
or
sbb
dec
xlat
mov
in
out
lock
mov
popw
mov
mov
lods
jne
and
dec
lcall
stc
rcrl
sub
dec
aaa
adc
ficomps
imul
cwtl
movsb
add
cmp
ljmp
push
cmp
cld
call
and
adc
and
xorb
shrl
lods
jmp
add
lds
scas
adc
add
loopne
push
or
stos
scas
cmp
scas
aam
mov
hlt
mov
movl
push
sbb
orl
push
cmp
ja
pop
fbld
lret
rorl
sbb
mov
pusha
mov
jge
push
add
insb
sbb
add
mov
inc
in
jb
push
addr16
in
mov
cmp
xchg
mov
adc
incb
pop
aas
sbb
repnz
movsb
nop
ss
push
pop
cs
push
das
aad
outsl
jmp
and
insb
or
cmp
lea
cs
mov
in
mov
cwtl
mov
adc
sub
test
sbb
scas
pop
xor
loope
repz
stos
xor
pop
fwait
pop
inc
jmp
daa
mov
or
mov
int
xchg
mov
cmp
fisubrs
ret
enter
js
push
mov
aas
std
sub
fistl
sbb
leave
inc
imul
push
in
mov
jmp
test
insl
aad
iret
dec
mov
jecxz
xchg
cmovs
std
jne
jecxz
jmp
cmp
mull
decl
xor
xor
je
add
ds
sbb
dec
mov
aas
lods
cmp
mov
pop
jmp
fstps
imul
popf
xorl
and
or
insl
out
imul
int3
add
jmp
jbe
xchg
dec
loop
jo
xchg
pop
adcl
mov
mov
and
inc
push
enter
mov
mov
aas
mov
movsl
push
xchg
add
ljmp
insl
pop
mov
call
push
mov
sarb
in
mov
push
mov
rol
in
xchg
adc
sar
cs
xchg
jns
mov
fstps
mov
xor
or
icebp
loop
imul
xor
insb
std
add
push
out
lock
jle
jle
insb
xor
adc
cmp
add
cmp
xor
xlat
xchg
fimuls
xchg
xchg
mov
pop
jl
cmc
mov
ja
sbb
int3
adc
out
dec
pop
or
or
inc
icebp
stos
adc
xchg
arpl
and
xor
roll
adc
repz
lahf
lea
imul
lods
adc
cmp
aaa
mov
cmp
int
sbb
sub
nop
sbb
jp
aas
push
scas
lds
mov
pusha
or
pop
and
or
xor
adcl
shrb
dec
stc
cs
scas
sub
lret
fs
mov
mov
pusha
cmp
mov
jge
jns
add
enter
and
cld
mov
inc
loopne
push
xchg
jge
adc
xor
mov
mov
outsb
popf
jecxz
xchg
fxam
leave
push
pop
fdivp
jne
push
ret
and
pusha
mov
or
fwait
push
js
jmp
lods
pop
gs
in
insb
aas
xor
pop
outsb
stos
lret
add
into
mov
xchg
les
and
jle
movsb
push
sub
push
xchg
mulb
pop
stos
push
insl
sahf
mov
jp
aas
jae
mov
lret
aaa
mov
test
test
cltd
bswap
or
inc
sbb
je
add
stos
mov
rcrl
mov
add
fisubrs
pusha
daa
test
movsb
adc
aam
xchg
mov
cwtl
out
enter
mov
mov
stos
push
shl
fsub
jmp
mov
lret
cmp
ret
sub
fadd
push
dec
dec
imul
push
cltd
pushf
xchg
adc
mov
pop
jo
pop
adc
xchg
aas
fwait
idivl
test
test
aad
sub
sub
out
jns
xchg
test
mov
push
pusha
ds
pop
call
icebp
mov
mov
xchg
jnp
call
roll
mov
fwait
pop
mov
sahf
fmuls
cmp
out
ret
cmpsl
loop
inc
xchg
adc
or
lods
xor
cli
sbb
jge
lret
fs
sahf
add
mov
jg
jl
fmuls
int
add
push
inc
pop
jecxz
adc
xchg
mov
notb
cmp
outsl
mov
ret
mov
lcall
movsl
int3
stos
cmpsb
jno,pt
cmc
out
movsb
cmp
add
out
xor
jp
cmc
sbb
xchg
mov
fwait
aam
repz
jbe
xchg
fcompl
mov
adc
ja
push
hlt
rcr
mov
jl
or
pop
mov
cmp
bound
cmpsl
xchg
insl
popa
sub
push
mov
and
nopl
sub
mov
inc
add
fldcw
jae
or
mov
push
imul
mov
inc
jmp
mov
xchg
jmp
aam
fdivl
mov
stc
rorl
fnstcw
addr16
cmpsl
push
or
xor
pop
fs
in
daa
data16
jns
adc
sbb
inc
ja
cld
adcb
repnz
push
pop
test
push
mov
push
bound
in
iret
or
mov
pusha
scas
fs
sub
adc
out
pop
or
lret
cltd
and
hlt
popa
add
into
lds
jbe
test
adc
push
pusha
push
push
arpl
push
insb
dec
jnp
cmp
inc
das
lods
push
sti
xchg
test
bound
xor
cmp
pop
daa
cmpsb
sahf
dec
jno
jbe
and
divb
pop
mulb
add
lods
loopne
dec
jne
out
mov
pop
dec
xor
hlt
push
inc
dec
inc
sub
arpl
gs
cmp
orb
int3
lret
xchg
xor
in
jns
jecxz
xchg
mov
jo
mov
rol
ficoms
push
push
sbb
nop
and
enter
loopne
out
mov
mov
push
or
dec
pusha
pusha
push
inc
mov
jmp
mov
add
js
in
mov
mov
imul
mov
dec
pop
mov
xchg
fisttpll
push
hlt
std
mul
jne
xor
js
pop
jbe
outsl
cli
mov
cmp
pop
push
sub
sub
push
pop
ljmp
pop
lock
movl
aam
test
fstpl
or
pop
out
in
xor
test
movsl
lds
or
cmp
aaa
adc
sub
fsubs
outsl
push
sub
xor
or
cmp
mov
std
mov
cmpsb
mov
push
or
or
rolb
outsb
xor
mov
movsl
xchg
nop
mov
mov
cmp
cmp
cmp
inc
dec
adc
aad
xor
inc
out
into
subb
cld
mov
mov
add
fistps
lds
push
and
pushf
mov
scas
xor
imul
movsl
popf
loop
jg
push
cmp
pop
test
and
dec
inc
sbb
jne
fistl
leave
mov
mov
out
mov
cmp
mov
pop
imul
frstor
mov
jne
xchg
mov
xorb
cmp
data16
lods
mov
cmpsb
loope
push
out
jle
call
jns
das
pop
and
addr16
xlat
pusha
cmp
add
push
push
mov
int
jmp
xor
loop
or
js
loope
lret
push
sbb
push
xlat
es
enter
ret
pop
cmpl
mov
fnstsw
hlt
cmp
sbb
xor
aaa
mov
inc
sbb
xor
popa
inc
sub
icebp
lea
mov
jmp
dec
inc
xchg
fld
pop
rcrb
pop
cmpsl
mov
sbb
insl
lcall
subb
daa
jno
xor
enter
imul
hlt
dec
cld
xor
ja
stos
pop
cmp
repz
out
mov
in
dec
aas
out
xor
clc
out
jmp
xchg
in
or
or
pop
outsb
inc
pop
int
cmp
cmpsb
fadds
inc
mov
aaa
jmp
and
faddl
cmpsl
popf
mov
mov
dec
fsub
ljmp
xchg
hlt
popf
in
lds
sbb
pop
daa
in
fidivrl
adc
inc
mov
mov
and
jmp
mov
cltd
ljmp
iret
mov
fxch
jbe
dec
fidivrl
mov
addr16
inc
and
cmp
jmp
mov
inc
push
js
cmpsb
inc
movsl
jge
cmp
addl
test
imul
iret
mov
addb
mov
mov
pop
cltd
mov
adc
or
daa
push
outsb
dec
add
sbb
mov
daa
lahf
mov
js
dec
pushf
add
cmp
mov
scas
push
test
cmp
test
ret
es
xor
jne
test
shll
aad
int3
dec
xchg
xchg
pop
stc
fwait
ja
mov
lret
andb
pop
loope
testb
daa
inc
cmp
sub
out
repnz
adc
jb
subb
mov
popf
shll
outsb
pushf
iret
mov
cwtl
sbb
mov
fisubs
movsb
fldl
push
int3
mov
cmpsb
or
popf
pop
lods
adc
cld
clc
js
pop
enter
arpl
xchg
sub
int
xchg
jmp
jae
mov
cmp
and
rol
add
mov
arpl
outsl
lret
sahf
pop
ret
xlat
rcll
outsb
xchg
sahf
scas
aad
lea
pop
shl
or
or
xchg
pop
add
fprem
aaa
loop
ret
lods
cld
addb
mov
mov
mov
push
and
les
add
popf
pop
out
int3
lahf
mov
sub
cmc
mov
cmp
push
testb
mov
hlt
inc
mov
xchg
scas
xchg
and
subb
pop
sar
hlt
and
fsub
mov
mov
loopne
add
xor
lods
jg
xchg
xlat
sbb
faddl
out
shrl
in
or
sub
in
and
insb
lea
adc
jecxz
and
or
imul
add
mov
cmp
push
mov
xchg
int3
cltd
and
js
mov
out
push
mov
push
je
in
or
adc
enter
addr16
pop
jno
add
fiadds
xor
cwtl
js
jmp
imul
mov
pop
imul
nop
orl
rcll
push
loopne
loope
add
int
fidivs
loop
fucomip
lods
fdivrl
jecxz
fmul
repnz
mov
ret
orl
ja
aad
divl
sbb
aas
dec
das
mov
cmp
in
cmp
jp
sub
enter
lret
rclb
xor
rcl
mov
mov
in
insb
mov
or
xchg
ljmp
lahf
test
fistpll
adc
lret
fadds
rcrb
pop
pop
fidivl
dec
hlt
or
mov
rorl
test
mov
inc
shlb
or
xor
xor
stos
fs
loop
mov
lahf
mov
not
cs
mov
mov
aas
lcall
pop
inc
push
jle
jmp
imul
out
aad
mov
push
push
popf
fisubs
or
and
fdivr
dec
test
jp
dec
pop
push
sbb
imul
push
or
clc
pushf
add
jne
stc
dec
dec
movsb
and
ds
push
mov
aas
add
pop
cmpsl
and
inc
mov
insl
dec
sub
jae
xchg
cmpsl
cmpb
lret
scas
dec
pop
jb
push
sti
out
push
insb
ss
js
aaa
xlat
pop
jecxz
ss
filds
pop
cld
adc
dec
or
jge
xchg
out
jecxz
rorl
inc
addl
push
mov
adc
sbb
xorb
insb
mov
int
pop
stos
sbb
outsb
add
fbld
imul
and
cmp
add
jno
jo
cltd
aas
lds
ja
test
pop
lock
in
out
xor
mov
and
add
cs
pusha
lcall
cmpsl
insl
sbb
xor
mov
dec
jns
aam
out
popf
lcall
pusha
lret
imulb
mov
sbb
nop
mov
in
fstpl
push
add
or
sub
orl
into
test
fisttpl
jno
jle
jnp
push
mov
lea
sub
jb
push
inc
or
sub
pop
and
sub
icebp
jne
sub
inc
enter
insb
insl
push
jp
popf
jle
push
xor
sbb
ljmp
or
push
out
mov
push
inc
fadds
sbb
and
pop
fnstsw
inc
xchg
loopne
sbb
xchg
mov
mov
inc
lret
jmp
and
xchg
mov
js
push
repnz
mov
insb
cmp
sbb
fiadds
sub
inc
cwtl
arpl
pop
mov
or
in
sub
repnz
lods
xor
lea
clc
imul
mov
rorb
jg
inc
push
faddl
loopne
mov
adc
test
push
inc
mov
cmp
mov
add
xchg
popf
adc
jae
adc
add
fisttps
xor
cwtl
push
ss
inc
stc
pop
jg
push
xchg
mov
mov
and
dec
inc
es
movsb
ja
jmp
int
pop
mov
jg
or
testb
jl
mov
pop
xchg
pushf
cwtl
mov
cli
mov
pop
cld
dec
xchg
jg
or
stos
into
or
imul
lcall
xlat
mov
lahf
xor
mov
cld
add
push
cli
and
cld
jg
inc
pop
inc
pop
sahf
in
stc
and
xchg
adc
imul
mov
sbbl
mov
cli
mov
std
pop
cmp
stos
adc
sub
pop
orb
test
xchg
movsl
pusha
pop
rclb
jecxz
xchg
sbb
xor
sub
add
cmp
push
addl
scas
scas
or
cmc
testb
imul
in
lret
fnstcw
inc
sbb
mov
add
les
fs
adc
xchg
fsubp
xchg
dec
dec
int
scas
fstps
leave
daa
add
scas
jnp
push
in
orb
sbbb
aas
jns
or
movl
push
mov
or
push
xor
icebp
movl
cmp
mov
sahf
mov
outsb
push
pop
mov
das
test
xorb
stc
dec
push
rcrl
mov
inc
mov
jbe
fldl
mov
testl
test
pop
inc
lock
jno
in
pop
daa
mov
pop
outsl
testl
mov
inc
shrl
fcmovb
sub
fcoml
stc
push
sbb
sbb
imul
les
test
push
imul
inc
mov
mov
fldl
push
adc
insl
ds
lods
dec
xchg
popf
stc
mov
xchg
jmp
cld
scas
insl
sub
dec
push
cmp
mov
add
rolb
pop
add
cli
and
jmp
js
bnd
push
push
lret
adc
subb
adc
mov
std
scas
push
jo
cld
fbstp
subl
sub
add
js
sub
les
int3
enter
jmp
js
jne
decl
aad
pop
adc
repnz
insb
outsl
popf
icebp
cmc
xor
fcomps
flds
push
adc
js
mov
adc
sbb
adc
inc
lds
out
dec
ljmp
dec
and
rolb
sub
xor
pop
add
data16
jns
loop
pop
ficomps
fidivl
out
hlt
fnstenv
push
add
cs
bound
push
in
mov
mov
cmp
cmp
call
pop
mov
bound
pop
ret
mov
jmp
mov
sti
mov
pushf
cmpsl
or
or
jne
mov
push
loope
jle
or
sbb
mov
ret
enter
push
xchg
xchg
stc
cmc
lds
clc
mov
mov
and
xlat
fbstp
aam
jle
xchg
inc
push
sbb
mov
push
lcall
ds
fiadds
rclb
sbb
push
mov
inc
icebp
jle
cmp
sbb
fcoml
and
xchg
sub
add
fucom
les
loop
lea
insl
sahf
dec
sub
std
mov
adc
add
xor
stc
pop
adc
inc
jno
cmpsb
out
cmp
lret
jo
mov
add
insl
mov
or
xchg
rolb
adc
add
leave
mov
mov
mov
fistpl
sub
jge
test
out
fnsave
pop
scas
incl
outsb
jg
imul
rcr
cmp
int3
je
mov
in
inc
clc
clc
inc
mov
xchg
lods
or
jae
sbb
jbe
sub
dec
addr16
jmp
repnz
mov
ja
mov
xchg
out
add
in
cmp
js
dec
mov
pop
insl
iret
fldenv
int
addr16
inc
adcl
je
jp
push
out
push
lcall
fnstsw
in
sti
scas
sub
add
popf
or
jb
push
mov
xor
mov
sub
or
aaa
sti
js
std
cltd
or
inc
mov
or
insb
cmp
dec
jecxz
lods
leave
mov
inc
mov
dec
es
sub
repz
and
xor
shl
dec
int3
xor
inc
daa
xchg
enter
shlb
and
jle
and
push
jbe
cmpsl
pop
jae
ds
jmp
inc
out
insb
hlt
or
lds
and
pop
pop
shll
inc
test
ljmp
dec
push
int
idivb
movsb
cld
xchg
sbb
mov
inc
push
push
loop
and
mov
and
lea
mov
cmp
inc
xor
adc
cmc
cmp
mov
jo
jmp
call
inc
loop
fwait
and
lcall
js
push
xor
push
gs
xlat
cli
jle
aaa
leave
cmp
lds
fbstp
gs
popa
fmull
movsb
aas
call
lea
xchg
negb
mov
scas
xor
add
inc
pop
pop
pushf
xchg
inc
pop
mov
sbb
jbe
js
stos
mov
and
mov
ds
xor
sub
sbb
je
dec
adc
fdivrp
test
mov
or
je
mov
mov
repnz
lea
les
inc
jo
addr16
test
popf
into
xor
jno
sub
dec
test
dec
adc
add
adc
xchg
gs
xlat
stos
aad
shll
popa
fldcw
jp
push
ds
adc
inc
jl
fs
pop
call
inc
inc
dec
movsl
fwait
ljmp
ret
add
dec
pop
ficomps
or
mov
leave
cli
lcall
push
fs
lea
cli
test
idivb
repnz
xor
xchg
or
push
aas
add
cmp
push
or
std
out
lret
inc
xor
adc
fldenv
dec
lock
das
hlt
clc
flds
inc
mov
int3
test
push
stc
add
stos
inc
jns
ror
cmp
stos
rep
stos
add
jb
out
aad
icebp
sub
or
lahf
pop
imul
xlat
fnstsw
es
sub
dec
rorb
inc
inc
ficompl
cmp
mov
mov
inc
add
dec
rol
xchg
xsaveopt
or
and
push
shl
and
jle
shll
sbb
mov
adc
adc
pop
mov
subb
cmp
xchg
faddl
push
test
mov
lar
push
data16
pop
daa
sub
sub
subb
js
jne
or
std
out
adcl
dec
test
fisttpl
adc
sarl
sbbl
or
int
sub
mov
fidivrl
mov
popf
adc
negl
adc
inc
push
xchg
xor
jb
insl
and
fdivrl
push
test
mov
fisttpl
adc
sub
adc
arpl
cmc
lea
int
roll
adc
dec
or
insl
sub
pushf
bound
lods
imul
mov
cmp
shrb
test
jae
add
aas
out
inc
pusha
jae
add
dec
decl
mov
aaa
movsl
addb
sub
inc
push
inc
and
pop
add
xor
mov
or
push
ret
inc
je
in
cmp
jnp
cld
std
mov
inc
das
and
scas
fdivs
ret
xchg
test
pop
dec
ljmpw
xchg
movsl
lret
aad
cmc
jmp
xchg
cld
cmp
xor
sub
or
cltd
ljmp
les
xchg
insb
cmp
push
and
push
xchg
inc
or
push
fistpl
dec
push
mov
movsb
xchg
loop
adc
sbb
pop
fs
outsb
fidivs
cmovl
lret
aaa
ficoml
inc
mov
lods
js
ljmp
xor
add
mov
sub
sbb
mov
dec
and
lahf
filds
test
movsl
jle
xchg
jmp
pop
fdivrs
push
xchg
mov
fwait
cli
fwait
daa
jno
pop
sbb
jns
in
movsb
jo
test
leave
or
xchg
fildl
xchg
pop
push
or
test
xchg
in
cmp
outsl
insl
cmp
sub
addr16
sub
aas
es
test
call
lods
hlt
dec
insl
fstl
push
add
cld
ret
fs
pop
or
mov
loopne
xchg
sub
stos
adc
repnz
cltd
int3
mov
rolb
ret
stc
pop
pushf
cwtl
fdivrs
enter
sub
jno
notl
data16
je
es
cmp
push
rcll
xor
fcompl
cld
pop
mov
pop
ljmp
ret
xor
daa
mov
outsb
jno
mov
mov
push
jl
or
dec
cs
aaa
push
divb
sub
mov
dec
nop
iret
imul
inc
cmpsl
daa
xchg
pop
cmp
fldl
les
scas
sahf
jle
mov
cmp
dec
ret
pop
push
stc
push
cld
ffreep
pop
cmp
mov
xchg
inc
adc
cmp
arpl
roll
adc
enter
sbb
pop
or
repz
lret
adc
test
dec
cwtl
movl
adc
stos
and
jnp
mov
movsl
mov
sarl
xor
repz
in
add
cs
loop
xchg
xchg
mov
mov
cmp
mov
lds
pop
stos
outsl
fsub
inc
cmp
addb
ja
in
push
hlt
mov
out
push
clc
add
bound
mov
and
adcb
pop
fwait
ror
mov
xor
ret
sub
scas
xorb
lcall
out
stc
in
mov
std
push
das
bnd
xchg
push
xchg
mov
js
outsl
std
addr16
insb
das
mov
jo
pop
mov
mov
mov
icebp
lret
sahf
imul
pop
adc
pop
push
insb
xor
push
shlb
repnz
mov
push
idivb
subb
inc
andb
shrb
movsl
pop
mov
xlat
inc
jl
mov
outsl
gs
andl
cmp
sbb
fcomps
fldl
lahf
ja
fs
enter
ja
add
sbb
mov
aas
push
movsl
fs
movsb
jle
pop
test
sbb
xor
cwtl
adc
sub
aad
adc
sbb
jae
mov
out
and
gs
jecxz
loop
xchg
or
sub
fldl
mov
cmp
repz
daa
ss
inc
pop
xchg
push
ret
icebp
pusha
mov
dec
cmp
xlat
sub
stos
addr16
push
mov
aad
mov
mov
clc
or
dec
lods
xchg
mov
fidivrs
subb
push
push
test
shl
xor
mov
and
mov
xchg
sub
js
and
roll
fwait
adc
test
mov
je
arpl
xlat
cli
inc
sub
into
fisubl
sub
cmc
sbb
push
mov
test
jle
sbb
int
das
sub
popf
test
cvtpi2ps
xlat
xchg
and
ljmp
fnstcw
mov
cwtl
in
dec
sub
cld
outsl
lods
dec
lods
insl
fs
push
test
pop
lods
and
bnd
leave
adc
cmc
movsb
es
xor
cmp
jae
nop
add
inc
jp
and
cmp
std
sub
inc
roll
repz
and
jp
mov
jno
jnp
pop
cmp
adc
jne
cmc
decw
push
bound
pop
sbb
cmpsb
adc
inc
cmp
push
inc
das
and
out
pushf
dec
maxps
jns
rcrb
or
xchg
xchg
jmp
lret
repnz
jp
jns
repz
out
dec
fsubs
pop
leave
inc
push
mov
pop
jmpw
shl
orb
loop
dec
sub
rorb
or
mov
inc
sub
xchg
insb
jno
push
popf
jle
ss
lds
dec
cmp
lret
xchg
aas
cmc
pop
push
hlt
pop
push
inc
sub
incl
fisubs
mov
xchg
jo
inc
adc
sub
test
mov
jne
ss
insl
repnz
push
aad
daa
fbstp
and
out
and
push
nop
loop
and
jno
addr16
sarb
out
push
jno
into
push
inc
sbb
fwait
sbb
ja
pop
and
xchg
and
add
adc
or
inc
pop
adc
inc
push
sub
fst
dec
push
ficomps
pop
cli
mov
dec
addb
mov
mov
stos
cs
cmp
nop
daa
in
outsl
lret
xor
popa
mov
or
stc
ss
mov
add
jns
cmp
add
push
pop
push
cmc
mov
pop
sbb
adc
aam
mov
mov
sub
rcrl
adc
pop
out
bound
icebp
mov
lea
pop
inc
inc
push
pop
mov
add
stc
pop
ljmp
cmc
xor
cs
ds
jns
jp
cmp
mov
xlat
sub
sahf
pop
jl
insl
push
xchg
stc
mov
pop
hlt
pop
fildll
sub
je
add
sub
lret
dec
add
mov
add
dec
jno
or
faddl
jne
popf
push
aad
in
xchg
jno
fstl
roll
jmp
aad
sbb
fnstcw
stc
mov
mov
fucomp
repnz
mov
mov
out
sub
fisttps
stos
cwtl
xor
sbb
out
fnstsw
mov
adc
loope,pn
push
sub
hlt
add
jae
and
push
mov
sub
jbe
inc
jle
in
mov
jno
jae
cs
xor
addr16
pop
push
jae
mov
inc
cmp
xor
dec
jnp
cmp
cmc
sub
and
lock
js
in
push
push
ret
cs
out
push
lahf
cmp
inc
mov
scas
add
jns
adc
sbb
cltd
dec
pop
mov
lret
jg
push
sbb
lret
lea
mov
cmove
inc
xor
cmp
dec
xor
js
int
in
mov
and
hlt
and
pop
xchg
cmp
dec
pop
es
jp
xor
dec
stos
es
cltd
out
in
dec
int
jae
adcl
xchg
mov
dec
mov
lret
mov
add
testb
mov
or
mov
insl
adc
pop
fdivr
jae
mov
imul
mov
repnz
mov
roll
ror
pop
rolb
pop
xchg
mov
jno
sbb
add
scas
call
xchg
out
test
xlat
popa
inc
jmp
mov
mov
mov
dec
cmp
jnp
or
sbb
sub
lret
push
iret
xchg
lahf
pushf
push
jae
xor
addr16
inc
xor
pop
inc
shll
jns
adc
and
insl
out
xor
cmp
movsl
xchg
jmp
in
das
jns
fwait
subb
repz
inc
pop
push
imul
outsl
or
add
add
jae
mov
leave
insl
dec
and
pushw
adc
lods
adc
mov
push
pop
cmp
xchg
cmpsl
iret
fcoml
or
loopne
stos
pop
test
add
aam
xor
jne
mov
or
xor
pop
and
loop
inc
jl
add
std
pop
add
fs
xchg
push
lea
push
or
or
pop
add
sbb
add
or
cwtl
nop
int3
mov
pop
cmc
mov
jb
imul
sbb
xor
pop
sbb
mov
sahf
push
dec
sbb
sti
add
pop
movsl
mov
ret
arpl
inc
stos
mov
aam
das
arpl
je
push
sbb
faddl
push
shlb
lea
ljmp
pop
or
mov
hlt
xor
sbb
addr16
out
jns
xor
les
inc
ja
adc
je
adc
mov
xor
adc
cbtw
popf
mov
out
addr16
cwtl
fistpl
cs
addl
imul
mov
jno,pt
sarl
loop
ret
xlat
and
addr16
cmp
scas
xor
mov
inc
jae
jbe,pt
gs
or
xor
hlt
dec
mov
jno
rclb
js
jge
xlat
lea
nop
mov
imul
cld
or
insb
cmp
push
pop
push
cld
jl
nop
mov
test
xchg
scas
jmp
xchg
add
movsl
outsl
mov
add
dec
cmp
into
jnp
inc
daa
mov
lahf
loope
rolb
lds
push
leave
adc
pop
scas
hlt
push
roll
punpcklbw
arpl
xor
mov
adc
hlt
xor
rcrb
test
sub
adc
ja
pop
sbb
fcoml
shl
scas
sbb
xchg
mov
xchg
push
and
es
adc
add
fdivr
in
insl
mov
cmpsb
aaa
int
xor
jg
out
jae
mov
cmp
int3
jle
inc
push
hlt
mov
outsb
cmpsw
push
repz
sbb
dec
add
push
cld
or
mov
adc
fwait
jb
mov
push
int3
cmp
and
pop
xor
lods
outsl
mov
inc
jp
jae
pushf
or
xchg
or
imul
xor
shl
dec
xor
mov
cmp
insl
mov
sub
dec
jmp
dec
stos
fcompl
dec
pushf
sub
cwtl
mov
push
mov
mov
xchg
add
mov
jae
adc
jmp
imul
stc
fwait
push
ljmp
push
hlt
movsl
aaa
xor
mov
mov
jmp
fstpl
xchg
xor
mov
add
es
test
ret
sub
sub
std
xchg
lds
in
inc
cmpsl
and
xchg
xor
iret
cmp
stc
xchg
leave
andb
cmp
jl
mov
out
movsb
fnstenv
mov
jb
or
sbb
ss
jo
push
xor
push
inc
test
pop
sbb
dec
cmp
jmp
pop
cmp
sub
lods
cmp
xchg
fisttps
jno
adc
pop
cwtl
lods
xchg
xchg
or
or
xchg
inc
lods
imul
lods
add
xor
push
inc
cld
aad
icebp
aam
and
cmpsb
test
xor
add
jnp
es
and
xor
add
mov
dec
stos
and
sbb
scas
dec
js
push
cmpsl
sbb
xchg
mov
xchg
cmp
sub
mov
jl
jno
sbb
push
ret
mov
sbb
xor
movsb
je
or
mov
or
aaa
sbb
sarb
hlt
and
ror
dec
pop
dec
sub
cmpsb
test
push
add
jae
cmp
sbb
in
movsb
pop
ret
push
adc
adc
das
lcall
push
clc
push
or
push
sbb
sti
mov
or
sbb
mov
xor
and
inc
aad
xchg
xchg
mov
sbb
clc
cltd
add
mov
mov
and
sub
mov
sti
pop
push
mov
lock
pop
pop
pop
dec
push
jmp
and
pop
push
insl
pop
stos
mov
insb
testl
into
xchg
int3
sbb
sbb
data16
push
and
popa
in
jae
cmc
das
in
add
cmp
aaa
arpl
push
sub
mov
fistpl
add
pop
or
push
lea
fs
pop
repnz
iret
ss
stos
divb
pop
into
mov
xor
fcompl
pop
test
mov
clc
fstps
inc
nop
scas
xchg
dec
imul
mov
imul
or
push
dec
stc
out
pop
int
imull
adc
fnsave
into
mov
cltd
subl
lock
fidivl
pop
dec
aam
sbb
pop
ret
sub
in
mov
push
ficoml
aaa
push
arpl
dec
mov
and
cmp
orb
and
loop
mov
ret
or
fwait
lea
jle
insb
mov
fmull
mov
mov
dec
fst
add
cmp
aad
les
cld
or
add
lcall
inc
inc
push
stos
dec
imul
jae
lahf
flds
jp
inc
into
mov
mov
mov
dec
cmpsl
pop
loopne
rcr
cmp
push
mov
imul
lahf
xchg
inc
rcrb
ds
test
lds
add
lods
jnp
adc
in
pop
mov
fimuls
and
add
dec
dec
push
and
inc
inc
inc
std
mov
add
xchg
jge
mov
add
out
lea
pop
inc
and
sarl
fiaddl
xlat
sub
adcb
int3
jnp
dec
mov
jb
push
adc
pop
xor
ljmp
bswap
shll
mov
icebp
dec
dec
jp
xor
scas
inc
xchg
xor
mov
mov
xlat
mov
mov
mov
cmp
aas
jecxz
and
xor
scas
adc
arpl
std
jecxz
inc
jns
call
jg
and
mov
scas
add
add
jge
int3
lds
inc
ds
xchg
dec
mov
roll
mov
push
push
jmp
pop
stc
dec
jecxz
jnp
lret
cmc
pop
fs
sbb
mov
xchg
sar
cmp
mov
js
lret
outsl
or
in
les
inc
or
fsub
mov
popf
sbb
add
repnz
ret
aaa
dec
cld
push
negb
mov
shlb
pop
xchg
shll
popa
sbb
push
mov
cmpsb
ret
xchg
lods
cmp
fsts
jae
lods
xor
aaa
js
lods
test
stos
test
push
ret
cmpl
cmc
lods
out
sub
fbld
in
add
repnz
ret
sub
fldt
mov
pop
test
lods
movsl
into
inc
xchg
rclb
lret
push
adc
push
pop
mov
es
icebp
fwait
adc
ret
mov
cmp
fadd
lret
mov
popl
shrl
lcall
insb
ja
xor
repz
in
xor
inc
sbb
add
call
or
xchg
mov
das
mov
jg
sahf
cmpsb
mov
fldcw
pop
sahf
lret
scas
and
imul
cld
test
push
pop
les
xchg
test
inc
sbb
je
rcrl
fnstenv
xor
loop
fisubs
pop
xchg
jnp
out
cmp
ljmp
mov
in
loopne
push
test
push
mov
push
mov
cmp
int
cmp
subl
dec
icebp
in
pop
push
push
insl
rclb
sbb
movsb
add
rolb
data16
mov
or
rol
hlt
xor
mov
sahf
pandn
ret
adc
lods
lds
cld
lret
push
iret
add
jns
adc
sar
pop
in
sbb
inc
aas
push
shll
jne
mov
push
push
orb
push
out
loopne
rolb
cs
ja
cltd
pop
dec
les
icebp
dec
jmp
sbb
push
clc
gs
add
ret
jne
and
jns
lods
push
sbb
cmp
dec
and
pushf
roll
ret
sbb
fstp
mov
dec
hlt
xchg
outsl
inc
add
mov
push
mov
les
nop
js
mov
adc
cmp
leave
call
call
ss
dec
xor
outsl
xchg
pop
xor
mov
push
dec
xor
push
push
lea
in
xor
pop
pop
in
fsubl
insl
popa
xor
cmp
sbb
sti
enter
cmc
push
xor
test
mov
sbb
mov
call
xchg
ret
out
cli
adc
cmp
leave
loop
mov
xor
mov
mov
push
out
pop
ficompl
sarl
cmc
sbb
enter
xor
inc
push
fldenv
jmp
fcoml
mov
fisttps
push
cmp
cmp
stos
xor
or
sbb
rorb
add
stos
push
cli
cmp
aam
dec
insl
addb
mov
xlat
std
lds
xor
dec
push
push
fdivl
sarl
ljmp
xchg
pushf
sbb
adc
jae
outsl
push
mov
clc
enter
xlat
pop
clc
cltd
adc
adc
or
ljmp
cltd
arpl
and
cli
fwait
add
or
xchg
dec
mov
dec
repz
and
xor
push
outsb
xchg
dec
xor
aas
and
iret
scas
addr16
mov
rcrl
add
arpl
push
pop
mov
adc
es
fisttpll
lret
fcomps
pop
out
fimuls
push
adc
iret
mov
out
aas
or
pop
dec
mov
inc
push
stos
mov
arpl
mov
dec
pop
leave
add
stos
jmp
loope
jg
movsb
in
adc
and
pop
adc
into
shlb
aaa
rcrb
sub
sahf
int3
inc
or
sarb
xlat
lods
mov
mov
fidivrs
xacquire
jae
movsl
sbb
lock
stc
adcl
fs
rcrl
add
sbb
push
xchg
cmp
pop
xchg
cs
repnz
pop
inc
inc
inc
adc
rcrb
outsb
inc
inc
nop
lods
jmp
mov
mov
push
imul
jnp
lods
scas
adcb
lock
mov
cld
pop
fcmovne
ljmp
inc
inc
sub
mov
mov
test
mov
loop
or
xor
outsb
testb
add
shrb
adc
sbb
xlat
sbb
es
mov
and
push
add
int
add
sub
shlb
jno
cltd
daa
sub
xor
into
out
add
jnp
sub
in
test
mov
or
mov
and
daa
xchg
lods
arpl
int
lret
sbb
jno
mov
rcrl
aas
popa
push
dec
push
mov
xlat
rep
fildl
add
pop
in
jmp
xchg
enter
adc
fcomps
rorb
test
ljmp
bound
dec
cmpsl
dec
es
mov
loope
jae
sbb
jge,pn
dec
cmpsb
and
aaa
cmp
and
cmc
add
aaa
sub
jbe
shrb
pop
and
xor
jne
cmpsb
scas
dec
adc
inc
test
xchg
cld
push
mov
hlt
loopne
jmp
imul
insl
shll
shl
push
push
mov
roll
inc
push
addl
xor
stos
cmp
push
push
jns
bound
loop
sub
push
mov
mov
mov
cmp
push
aad
sbb
pop
add
push
addps
insl
ret
push
cld
notb
mov
mov
das
in
mov
add
push
mov
int3
fs
popl
out
jecxz
add
pusha
in
add
std
lods
xchg
orl
adc
cltd
cwtl
pop
cmp
pop
sbb
addr16
cwtl
or
lret
insl
andb
jnp
gs
std
sbb
inc
out
ds
jmp
pop
xchg
add
loop
incb
rorl
sub
push
mov
mov
ds
das
mov
in
xlat
jns
mov
adc
int
xor
mov
xchg
das
xchg
jecxz
int3
and
inc
cmp
dec
and
or
lods
adc
sbb
cmp
sbb
mov
xor
xchg
leave
inc
push
cmpsb
cmp
ret
lock
or
jge
jns
sub
jmp
aaa
inc
and
dec
pop
repnz
xchg
mov
inc
cmpsb
sti
xchg
das
xor
lea
sub
jo
pop
ret
imul
mov
int
add
push
and
cmp
clc
imulb
cmpsl
stos
sbb
xchg
ret
stos
cmp
adc
add
cmp
inc
adc
inc
lea
andl
xabort
push
outsl
xor
push
mov
in
pop
addr16
xchg
jge
mov
mov
jno
out
sub
data16
testl
cmp
xchg
sbb
pop
pusha
mov
lods
test
push
shll
xchg
dec
add
jmp
inc
movb
jae
sbb
shufps
sub
or
arpl
loop
push
es
sahf
lret
out
and
mov
mov
sbb
cmp
sar
jno
outsb
xchg
aas
mov
xchg
ret
lods
test
in
js
lock
mov
inc
jns
or
cmpsb
pop
and
nop
xchg
push
pop
loop
bound
and
aas
jmp
cmp
mov
mov
lea
lahf
lcall
mov
push
sbb
mov
enter
dec
mov
mov
adc
xor
pusha
in
mov
orl
mov
in
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
fistpll
inc
sarb
shl
cli
rorb
iret
sbb
push
scas
mov
aaa
les
je
mov
add
rolb
addr16
lahf
int3
test
imul
shll
cmc
andl
pushw
jp
out
xor
dec
cltd
dec
lods
fwait
push
shll
insl
shr
dec
rsqrtps
repnz
lock
mov
inc
or
push
mov
push
mov
out
mov
cwtl
pusha
mov
in
pushf
int
dec
repnz
jmp
jne
loopne
jb
in
push
pop
ljmp
sub
jg
aad
fmulp
xor
push
cmpsb
adc
stos
lret
push
andl
mov
dec
hlt
push
dec
fsts
jnp
adc
sbb
or
xor
pop
or
or
stos
add
insb
pop
repnz
add
mov
xor
loopne
repz
jge
pop
push
push
es
movsb
mov
nop
inc
mov
sahf
fldl
xlat
imul
xchg
popf
adc
testl
mov
push
inc
mov
dec
lock
or
in
push
inc
out
push
push
cmp
mov
hlt
add
std
pop
js
rolb
stos
cmpsl
test
pop
cltd
cmp
stc
sub
mov
js
or
aam
ds
fwait
jmp
xor
int
popf
in
xchg
push
mov
jecxz
sar
ja
dec
arpl
std
addb
adc
push
xchg
add
xlat
cmp
in
sti
cmp
sub
cmpsb
add
mov
loop
dec
ret
xchg
repnz
jb
xor
or
loopne
pusha
sub
lock
iret
test
push
cmp
lds
ds
in
cs
push
pop
xchg
push
adc
adcl
std
or
push
ret
dec
xchg
rcr
mov
lret
xlat
repz
stc
push
mov
push
test
pop
pop
rcrl
jb
push
inc
xchg
lods
add
push
cmp
pop
test
mov
inc
pop
adc
fadds
ljmp
jle
stc
pop
iret
inc
or
mov
aam
movzwl
jbe
mov
ror
push
jo
jo
or
dec
popf
aaa
cmp
out
ljmpw
test
or
inc
roll
xlat
les
ret
sbb
add
mov
lods
mov
pop
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
dec
cmp
jb
push
pop
shl
push
pop
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
mov
pop
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
scas
sub
mov
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
push
pop
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
