or
add
add
add
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
fs
add
adc
adc
and
add
adc
inc
jno
add
add
adc
add
add
je
add
cld
jo
add
add
or
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
ljmp
add
add
mov
add
add
lds
mov
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
inc
add
add
add
add
sub
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
mov
mov
out
cmc
add
mov
nop
or
and
stos
xor
popf
sub
mov
stc
sbb
sub
rolb
inc
and
and
punpckhbw
dec
out
imul
xor
int3
sbb
inc
ret
adc
push
xchg
dec
cmpsb
add
sub
inc
imul
sti
xor
xchg
sub
rol
sarl
insb
jg
outsb
pop
mov
mov
stos
into
jb
xlat
fwait
mov
fnstcw
inc
dec
sub
inc
stc
pop
neg
xor
pop
jp
jae,pt
push
xchg
rolb
icebp
insb
jl
adc
mull
xchg
mov
adc
in
push
mov
ret
ds
lcall
bound
mov
jl
pop
xchg
lock
fnsave
ret
pop
mov
adc
xchg
pop
add
dec
or
fdivrl
lods
aam
push
fwait
inc
mov
roll
cmp
jb
aas
mov
and
movsl
mov
aaa
sub
aas
test
mov
jb
inc
adc
pop
jl
test
mov
lods
jno
popa
pop
insb
jecxz
shll
addr16
cmc
mull
pop
xchg
or
js
in
lods
mov
add
mov
push
push
ja
movsl
fdivrl
cmp
aaa
mov
mov
inc
sub
inc
push
repnz
jae
pop
scas
jle
leave
aam
cmpsb
pop
or
fsubl
popa
jg
jecxz
rcll
xor
movsb
je
add
mov
scas
add
dec
mov
inc
jecxz
pop
push
cmpb
push
push
jmp
inc
andl
mov
icebp
xor
fidivl
popl
xlat
movsl
adc
rcrb
or
mov
mov
or
loopne
or
pop
pop
ss
stos
sbb
push
cmp
push
sbb
inc
es
mov
icebp
data16
pop
ret
ss
pop
in
dec
aaa
add
jnp
inc
lcall
repz
or
dec
xchg
fildll
out
pop
inc
aaa
cmp
and
idiv
xor
sti
ret
sub
gs
pop
xchg
mov
imul
pop
cmp
push
pop
shrb
sbb
test
inc
lea
mov
pusha
test
aam
cmpsl
loop
inc
add
sub
sbb
jle
test
stos
nop
fwait
cmpsb
pop
mov
mov
rolb
stos
repz
scas
jp
fs
sbb
addr16
sti
inc
mov
mov
cs
stc
cmp
bound
sar
vcvtsd2si
push
sbb
pop
lcall
mov
adc
nop
or
aam
xchg
xor
lret
mov
fists
enter
sub
add
std
jmp
mov
xor
flds
or
push
pop
jmp
mov
cmp
outsl
adc
in
fildll
mov
int3
cmpb
xchg
and
enter
rcrl
cmp
imul
add
out
jo
nop
and
insl
jae
cmpsb
ds
xchg
outsl
scas
cli
lea
addb
sbb
lret
imul
movsb
sub
jecxz
or
jae
test
dec
cld
fcomip
shlb
pushf
or
decb
sbb
or
out
add
mov
ss
pop
out
push
outsl
mov
xor
push
mov
sbb
stc
adc
pop
dec
outsb
mov
pop
adc
fidivs
movsl
or
scas
sbb
jle
jno
stos
lret
dec
cli
cmp
xlat
adc
sub
fldt
loope
inc
arpl
jb
iret
mov
mov
xor
sbb
fisttps
lock
nop
stos
mov
dec
jp
rcrl
pop
or
inc
or
in
loope
jbe
or
shrb
icebp
jne
js
mov
mov
mov
sub
mov
pop
pop
jb
or
jecxz
mov
fcmovu
cmpsb
push
addr16
ret
es
inc
mov
scas
mov
test
test
subb
lods
sub
stos
ret
jecxz
insl
lret
rclb
psubd
sbbl
dec
cs
jmp
mov
ja
cmpsl
and
push
sub
mov
dec
stc
adcl
mov
fsubs
mov
js
lcall
pop
enter
cmp
sub
aam
into
in
aaa
mov
pop
std
pop
adc
add
outsb
out
lds
and
stos
sbb
divb
push
and
xchg
mov
insl
mov
aas
mov
out
je
xor
add
xchg
sbb
les
or
push
adc
push
into
das
inc
sbb
xchg
dec
outsl
ljmp
jae
ss
mov
lahf
jns
pop
jne
ficomps
sbb
xchg
call
rorb
popf
mov
mov
sbb
inc
mov
mov
nop
or
mov
jl
out
cmp
mov
test
xchg
iret
and
insb
testl
sbb
cld
jg
bound
in
cmp
bnd
rorb
les
jl
xchg
nop
stc
and
inc
and
xor
dec
fidivrs
stos
outsl
jmp
push
cmp
stc
mov
xor
or
cmp
pop
andl
in
xchg
cmp
imul
out
xlat
dec
les
cmpsb
gs
add
pop
test
aaa
jmp
mov
inc
jecxz
imul
mov
inc
cmp
in
mov
inc
les
push
cld
fdivr
data16
int
jno
out
mov
dec
rol
subl
cmpsl
ljmp
xchg
daa
lods
popa
out
fsubr
stc
loope
loope
sbb
imul
xchg
filds
ret
sub
aas
ljmp
sub
divb
rorl
movsb
into
cmc
mov
push
fdivrs
push
fwait
mov
movsb
mov
add
xor
lods
adc
jmp
ds
inc
ret
jge
lahf
lret
ja
jns
out
add
shlb
insl
adc
repnz
pop
lahf
xor
je
mov
jo
loopne
mov
pop
mov
cmp
lret
add
jecxz
subb
xor
xchg
test
inc
cmp
lock
xlat
jecxz
and
cld
push
xor
loope
and
nop
cmp
pusha
sahf
push
mov
fcoms
sbb
sarl
scas
outsl
scas
clc
daa
scas
movsl
and
ror
fnstenv
gs
cld
dec
outsl
lret
push
and
mov
pusha
jae
sbb
mov
jns
sub
scas
push
push
rclb
jmp
outsb
cmpsl
les
mov
inc
and
and
jbe
inc
mov
pop
push
and
jnp
dec
test
add
jno
call
popa
pop
sub
lcall
or
jmp
loopne
stos
jmp
cmp
push
and
mov
inc
dec
popf
in
fsubs
test
data16
and
dec
jb
jmp
xor
inc
jno
mov
jo
ds
mov
mov
dec
or
test
xor
and
std
xlat
fldln2
call
jmp
cmp
cld
test
std
in
dec
in
imul
pop
out
mov
pop
iret
xor
enter
repz
pushl
bound
dec
push
cmpl
in
idiv
jb
loopne
out
sbb
int
cmc
sub
test
andb
adc
stc
jns
mov
ss
jp
mov
sbb
sub
lahf
int
lods
divb
adc
ret
cmp
push
push
cmp
jecxz
test
roll
pushf
inc
sub
mov
jne
fiaddl
int3
cmpsl
mov
sahf
movsb
loopne
popf
xchg
stos
mov
shll
cmp
cld
and
rcr
lea
dec
inc
and
shll
xchg
mov
loopne
andl
mov
out
cmp
sub
clc
mov
xchg
mov
fwait
mov
test
mov
add
test
rorb
pop
sbb
and
add
lcall
iret
xlat
xor
jle
test
in
fistl
mov
fistps
mov
stos
lcall
push
xor
cmp
loope
cs
inc
mov
loope
setns
and
pushl
std
and
shrl
int
cltd
bound
dec
inc
pop
aam
sub
cmp
inc
add
mov
outsl
sbb
pop
xor
cmp
inc
xchg
pop
imul
xchg
aas
jnp
mov
xor
mov
dec
icebp
lret
mov
scas
cmp
or
out
inc
shl
add
push
cwtl
mov
mov
addr16
shrl
push
into
repnz
adc
shrb
dec
xor
push
jo
xchg
add
imul
incl
mov
je
xchg
pop
out
mov
andb
cmp
std
sub
mov
sbb
repnz
pop
fnsave
mov
imul
dec
dec
insl
inc
push
outsb
add
or
cmp
bound
push
jns
pusha
in
outsb
sbb
pop
sahf
lahf
add
pop
pop
xchg
dec
das
testl
sub
mov
pop
rolb
in
xor
or
sahf
jbe
cmp
repz
cmp
mov
stos
in
or
daa
mov
push
movsb
mov
inc
cmpsb
mov
add
cltd
cwtl
test
popa
add
data16
dec
pusha
vfmsub132pd
in
xchg
or
shl
pop
dec
fucomp
cs
xchg
lea
repz
cmp
mov
pop
pushf
sti
std
pop
xlat
push
aam
roll
xor
jns
inc
pop
ja
sbb
dec
mov
daa
lods
lods
adc
jmp
iret
sub
sbb
int
jecxz
mov
mov
ds
sahf
int
sahf
cmpsl
xor
cld
mov
movsl
push
adc
das
cmp
sub
test
pop
cltd
int3
cmp
out
lods
mov
mov
fdiv
jmp
add
lcall
pop
mov
test
mov
data16
jbe
in
sbb
mov
mov
mov
loop
dec
cmp
inc
and
xor
nop
fisubl
adc
and
stos
test
hlt
leave
cmp
cmp
repnz
sbb
imul
add
push
inc
test
aad
cvtpi2ps
mov
std
lods
add
xchg
lock
shll
push
mov
cmp
repnz
adc
add
cmc
imul
jp
or
xor
pop
movsb
push
adc
or
int3
sub
sub
andb
jmp
insb
jae
mov
clc
roll
rcl
lret
popf
xor
mov
test
subb
sub
jmp
xor
addr16
push
jae
incl
jp
repz
adc
mov
lea
cmp
or
call
ss
mov
js
dec
push
sub
cmp
and
or
add
fwait
imul
loop
mov
cwtl
adc
repnz
or
and
loopne
push
mov
add
lret
push
pop
mov
sbb
cltd
lods
jno
adc
push
sub
int3
rolb
imul
inc
testb
lret
xlat
xor
addr16
mov
dec
inc
jle
cmp
push
adc
daa
ret
into
aaa
sbbb
sub
popf
fcmovnu
rol
mov
nopl
pop
test
push
or
movsb
xchg
dec
loop
or
cli
jmp
cs
flds
jmp
sti
push
sub
ja
cwtl
rcrb
std
fwait
jne
mov
enter
lahf
push
mov
mov
jle
jno
sbb
jge
dec
adc
pop
fstps
jmp
sarb
mov
pop
test
repz
lock
lret
push
sub
jl
jns
push
mov
ret
mov
and
sub
sbb
sub
push
in
movsl
inc
push
call
xchg
ljmp
jmp
imul
mov
andb
pop
adc
pop
repnz
rclb
mov
inc
sub
rorl
inc
das
fildll
in
sarl
dec
mov
mov
enter
mov
sub
dec
in
cltd
pop
jns
dec
push
and
add
cmp
jg
out
scas
dec
sub
orb
pop
mov
mov
jnp
push
pop
test
dec
jae
imul
add
test
es
mov
inc
je
popf
xlat
mov
mov
jg
mov
jge
xchg
push
sub
sahf
pop
xchg
cmp
and
xor
jmp
cwtl
and
mov
jge
out
inc
daa
out
ret
jmp
push
push
jg
sbb
gs
push
cmp
lods
inc
fistpl
or
and
ss
pop
adc
sbb
arpl
imul
or
push
cli
stos
jne
xorb
or
stc
setp
jns
aas
xorl
mov
jae
mov
cwtl
fnstcw
xchg
sti
jb
inc
sbb
popf
mov
pusha
mov
mov
and
and
push
and
es
inc
adc
enter
mov
out
adc
mov
or
dec
cwtl
and
xchg
daa
adc
or
push
dec
pop
sarl
xchg
repnz
and
in
testl
loope
imul
xor
dec
movsb
or
push
sti
aam
xchg
loopne
loope
cs
lcall
shlb
bound
push
mov
or
cmp
mov
outsb
outsb
jg
fsubp
mov
xchg
push
ja
xchg
repnz
mull
dec
nop
and
repnz
ss
in
xchg
sub
mov
push
adc
fistpl
ss
stos
idivb
in
xor
sub
shll
sysenter
ret
or
xchg
out
pop
mov
imul
xlat
int
cmpsl
mov
pushf
pop
xchg
outsl
sbb
xor
dec
inc
mov
rorl
pop
and
popa
pop
push
sbbb
nop
inc
adc
inc
sub
test
jp
movsl
mov
xor
pusha
lds
mov
fwait
sarl
jecxz
fwait
movsl
cmpsb
arpl
std
rorb
add
pop
mov
in
cltd
xor
loopne
lods
test
rcll
out
ds
jl
popa
mov
sbb
sti
jno
test
shlb
push
cmpsb
cmp
lds
rcll
push
popf
ds
add
lock
or
inc
rcr
inc
movsl
sub
jle
cmp
dec
jge
je
xchg
xor
cmpsb
mov
adc
xchg
cmp
mov
out
sbb
js
fistps
dec
loope
loop
mov
mov
and
addr16
push
lret
neg
jecxz
cmp
sub
cpuid
jg
sbb
xchg
bound
xor
mov
sbb
inc
or
lahf
cmp
xor
std
xchg
and
out
sti
cmp
jb
xlat
pop
cmp
ljmp
andb
into
mov
mov
dec
jno
dec
clc
add
loop
dec
xchg
stos
das
in
dec
dec
mov
iret
movsb
and
push
movsb
xchg
shll
cwtl
imul
pop
inc
shll
out
ret
testl
and
cvtps2pd
notl
ror
pusha
sahf
xchg
bound
stos
xor
push
jno
mov
stos
lods
pop
sub
lea
shlb
jmp
ret
clc
fsubrs
cs
xchg
out
sub
fisubl
mov
test
sub
push
push
test
dec
xor
pop
cwtl
and
push
jmp
test
pop
jns
sbb
jo
fisubs
dec
sbb
shrb
ja
xchg
les
pop
push
dec
dec
cmpsl
es
leave
lret
cmp
adc
lock
fisttpl
jg
push
push
xlat
jns
fidivl
mov
add
test
mov
mov
fdiv
sub
xchg
out
icebp
nop
sbb
loop
lods
push
test
scas
and
mov
outsb
or
lock
test
js
mov
fists
xor
adc
adc
enter
bound
sbb
jmp
mov
push
icebp
mov
es
je
testb
test
adc
gs
inc
dec
mov
xor
cmpsl
xchg
cmp
addl
mov
insl
outsb
sbb
lret
lea
xor
or
sub
dec
lods
sbb
rcr
push
mov
inc
lret
cmp
sbb
jecxz
outsl
xchg
ljmp
inc
mov
test
mov
ficompl
pushf
jecxz
adc
jnp
mov
aaa
pushf
jecxz
mov
inc
jmp
imul
adc
sub
out
mov
or
sbb
loopne
pop
and
push
lods
lret
jnp
jno
pop
mov
aam
das
push
fucomp
add
aas
inc
out
cmp
adcl
dec
or
test
insb
lods
sarb
mov
xchg
test
inc
rcrl
in
aam
test
lods
pop
stos
aas
out
cmpsl
stos
test
push
clc
add
shlb
cmpsb
ljmp
pop
sbb
aam
and
xor
arpl
push
jb
shrl
pop
ret
push
mov
and
aad
sub
mov
enter
jp
push
jno
jae
mov
adc
ds
cmp
jl
gs
imul
sub
sub
ficomps
mov
sub
ret
in
xorl
imul
xor
pop
lds
mov
dec
sbb
dec
fnstenv
adc
lcall
sbbl
sub
jp
lods
inc
and
adc
sbb
xor
add
inc
jle
jmp
mov
je
call
mov
mov
inc
xrelease
sbb
xchg
inc
add
adc
push
js
mov
das
outsl
xchg
sbb
push
lods
mov
add
jmp
xchg
pop
push
cmp
pusha
xor
xor
ret
mov
cs
add
fcomps
xchg
inc
pop
nop
out
pop
sbb
fsts
sub
add
test
hlt
cmp
adc
out
data16
lods
pop
out
dec
in
sub
jle
or
mov
insb
push
clc
xor
ljmp
mov
mov
add
xchg
scas
int
add
test
mov
std
fsubrl
or
out
test
aas
cmp
addr16
mov
inc
push
cmc
add
ljmp
testb
cs
sbb
push
mov
sti
sbb
incl
imul
and
mov
cmpsb
in
rorb
shll
sahf
scas
or
pavgb
push
imul
xlat
movsb
icebp
in
mov
mov
jbe
jo
lea
sub
pop
xor
filds
pop
xchg
imul
shrl
or
jns
push
pop
fsubrl
repnz
and
inc
xor
mov
lret
pop
inc
shlb
popa
je
js
cmc
out
jle
adc
xchg
push
pushf
pop
add
daa
les
jl
mov
pop
data16
pop
xor
push
gs
movsb
adc
and
adc
lcall
stos
stos
xor
jmp
sbb
cmpl
shll
test
test
lods
and
gs
fldenv
and
stc
fiadds
negb
xchg
setbe
in
cli
adc
adc
imul
xor
and
and
outsb
cmp
data16
jmp
jnp
rcr
xchg
dec
lahf
popf
shrl
in
fsubl
stc
fiadds
cmpsb
cmp
cltd
mov
andb
pop
sub
jns
mov
in
loopne
imull
dec
das
loop
int
xchg
enter
std
inc
testl
and
pop
rdtsc
mov
dec
hlt
lahf
sbb
fimuls
pop
je
xchg
stos
ret
xchg
test
jg
outsb
lret
sbb
lds
push
xor
test
fmulp
inc
jmp
inc
ljmp
lahf
dec
lahf
jl
lcall
dec
les
adc
jo
jno
das
int3
and
inc
or
xchg
je
mov
or
scas
in
xor
cmc
mov
test
or
xchg
mov
sbb
cmpsb
mov
cs
pop
adc
lcall
xchg
jecxz
sbb
add
adc
cli
jle
lcall
gs
sub
lods
and
push
shl
adc
fstpl
pop
aad
jno
inc
mov
or
adc
jge
cld
jne
inc
pop
outsb
fnstenv
sub
add
nop
and
pop
cmp
sbb
insb
ljmp
and
rcrb
cmp
mov
in
cs
xor
pop
or
test
cmp
jno
jmp
cmp
insl
add
stc
xorl
out
fistpl
imul
or
adc
roll
dec
scas
dec
xor
push
popf
mov
push
push
mov
adc
and
inc
xchg
es
mov
add
add
rcrb
roll
mov
daa
inc
call
xchg
fsubrl
sbb
and
mov
and
aad
or
into
insb
mov
ret
sub
shlb
cmpsb
and
jns
mov
out
inc
outsl
dec
xchg
pusha
roll
jb
outsl
rcpps
push
adc
pop
mov
xchg
fwait
push
arpl
rorl
int3
dec
and
mov
dec
clc
in
imul
cmp
enter
sar
test
std
pop
xorl
lcall
push
mov
repz
sti
mov
insl
sub
pop
inc
ds
lds
mov
and
cmp
sarb
lods
add
adc
push
mov
cmpsb
xor
fs
and
inc
dec
mov
pop
and
jae
sarl
lret
cs
sub
add
ret
xor
mov
xchg
iret
stos
jecxz
or
nop
inc
jbe
xchg
jo
out
lret
clc
sbb
inc
shll
cmpsb
idivb
xor
xchg
rcrb
jae
andl
outsl
mov
pop
mov
mov
add
lods
sub
popf
cmp
in
icebp
or
mov
arpl
fldenv
icebp
mov
mov
and
mov
bound
or
test
mov
mov
cmp
push
adc
movsl
cmc
in
jecxz
sti
mov
mov
mov
pop
repz
into
leave
push
fistl
int3
loope
push
dec
adc
xor
dec
imull
xor
rolb
push
sbb
xchg
cld
lret
in
into
and
pop
pop
cltd
shll
push
add
xchg
inc
int
mov
xor
test
dec
xchg
inc
dec
mov
popa
dec
xchg
cmp
out
bound
sbb
inc
add
into
adc
movd
lret
mov
bnd
xchg
add
mov
out
jmp
inc
stc
hlt
sbb
sbb
lahf
repz
mov
or
inc
stos
xor
fs
enter
adc
xchg
and
stc
ljmp
pop
test
add
mov
lcall
sub
pop
jb
hlt
or
popa
and
les
int3
int3
in
mov
fidivrl
jge
pop
das
inc
nop
das
pop
add
stc
inc
xchg
jge
out
pushf
mov
mov
mov
adc
pushf
pop
inc
iret
cltd
mov
xor
jo
movsb
test
xchg
jp
test
lds
inc
or
push
popa
and
xor
sbb
push
stos
and
sahf
in
mov
insb
mov
jnp
clc
cmpsl
mov
das
cmpsl
mov
mov
je
int
ljmp
xlat
dec
inc
clc
out
sbb
rorb
jecxz
int
stos
outsl
add
sti
jg
pop
shlb
je
mov
mov
ja
pop
mov
mov
inc
loope
gs
mov
fs
pop
inc
push
in
movsl
and
pop
adc
fldenv
xchg
icebp
cmp
hlt
xor
nop
and
ja
das
pusha
test
and
loope
or
mov
in
dec
and
mov
cli
dec
ret
mov
mov
or
or
push
insb
dec
push
jg
jne
add
mov
out
pop
push
jg
and
andb
mov
out
je
cld
fbld
and
pop
fidivs
mov
aas
push
in
mov
pop
cmpsb
mov
ret
popf
push
push
loop
cmpsl
jecxz
std
push
or
stc
push
cmp
mov
mov
testb
ret
movsb
bndldx
outsl
sbb
add
cmc
jb
shlb
sbb
sahf
mov
gs
test
xor
adc
out
data16
leave
add
push
mov
and
clc
xchg
jle
fwait
das
lods
imul
jmp
insl
in
repnz
sub
xlat
shlb
mov
cmpsl
pop
jmp
imulb
cmp
and
mov
push
mov
mov
sub
cmc
iret
pop
insb
and
xlat
sub
cli
or
mov
sub
mov
pop
hlt
lret
fdivrp
or
pop
cmp
ret
lods
pop
mov
sahf
movsl
aas
lds
fwait
nop
inc
idivb
mov
stos
lahf
push
or
lds
call
fisttps
or
sub
fnstenv
hlt
cwtl
or
aam
bound
fdivp
mov
movsb
cmp
aaa
cmp
dec
vpshufb
cwtl
jbe
sbb
pop
dec
push
sbb
lock
lret
push
shrl
jp
xor
jb
jecxz
push
mov
add
in
vpslld
mov
xor
les
push
inc
daa
fisttpll
dec
ret
sbb
sbb
sub
out
cmpsl
adc
or
repz
jae
fildll
out
stc
ss
pushf
popf
fnsave
bt
rcll
inc
pop
icebp
push
adcb
push
mov
or
dec
loopew
adc
and
imul
push
movsl
ljmp
inc
xor
cmpsb
or
popa
pop
das
pop
mov
dec
insb
rol
xor
mov
cmpl
push
iret
and
sbb
cmp
and
shrl
pop
fs
sti
dec
add
cmp
pop
dec
cs
xor
sbb
cmp
aam
xchg
cwtl
jge
pusha
inc
mov
mov
pop
ret
dec
rcl
jb
and
shlb
jns
mov
loop
lock
adcl
push
pusha
cmp
clc
sub
leave
sub
inc
sti
fistpl
xorb
jno
int
mov
cld
ljmp
cmp
fdivrl
test
outsb
pop
fnsave
inc
test
icebp
pop
add
insb
in
arpl
jp
pop
testl
mov
jl
inc
lcall
dec
jo
bound
scas
mov
inc
into
mov
out
xchg
bound
dec
flds
xor
rcrb
ss
test
push
sbb
or
aam
aam
mov
pop
stos
jb
inc
or
and
loopne
jge
jns
out
push
xor
jle
outsb
aas
aaa
add
pop
popa
xchg
jmp
jae
push
sahf
fldenvs
xor
or
fwait
push
inc
imull
faddl
or
mov
pushf
mov
mov
push
inc
jns
pop
hlt
cmc
and
ja
xchg
sbbb
or
cld
dec
arpl
cld
jnp
jno
pop
cwtl
ja
jp
xor
or
sbb
sub
sbb
xor
pop
mov
loope
lds
jne
lods
cmpsb
cwtl
mov
stos
mov
mov
outsb
lea
negb
jl
adc
adc
cmp
fld
clc
mov
aam
notb
pop
mov
pusha
aas
gs
or
xor
ljmp
cmpl
dec
adc
push
filds
lahf
jne
iret
push
sub
shl
das
xor
push
cmc
dec
add
scas
xor
pop
shrb
xor
pushf
out
dec
push
shr
pop
or
aad
jmp
sub
mov
dec
in
xchg
pushf
cmc
loopne
mov
or
jecxz
xchg
pop
enter
xchg
enter
int3
mov
and
pop
cmpsb
cs
mov
dec
mov
or
xlat
add
stc
lret
sbb
cmp
push
movsb
jo
cmp
push
jb
jecxz
mov
add
mov
mov
pop
add
xchg
imul
cli
xor
push
or
sarl
inc
add
lea
daa
or
cltd
imul
mov
mov
test
push
mov
and
mov
jne
adcb
fdivl
and
add
add
sbb
mov
std
adc
aad
icebp
test
or
push
fsts
push
cld
fidivrl
data16
aaa
outsb
dec
cltd
push
divl
imul
out
sub
fsts
mov
lock
mov
mov
mov
inc
sarl
sbb
ret
push
lahf
leave
gs
std
jbe
and
repnz
movsl
int3
mov
scas
push
cmp
in
stos
dec
push
sub
aaa
jne
stos
sub
lock
jnp
push
xchg
pop
xchg
inc
dec
popa
sbb
movl
jnp
movsb
cwtl
adcl
and
xchg
ss
pop
cli
xor
mov
fsubrp
dec
dec
sbb
daa
pop
or
mov
mov
jae
bound
out
jg
or
sarl
insl
lock
pop
inc
imul
adc
movb
repnz
inc
mov
daa
lahf
sub
jno
sbb
adc
div
push
jae
mov
filds
pop
push
clc
mov
ffreep
pushf
scas
push
and
adc
cmp
fs
jae
fwait
xor
xchg
push
out
clc
in
push
insb
loopne
aam
sbb
sub
fs
das
pop
jae
cli
lahf
or
mov
fcomps
cmp
sub
xchg
scas
sarl
inc
xchg
dec
mov
pusha
insl
or
pop
ror
add
mov
andb
je
dec
mov
jle
into
push
adc
mov
fstps
pop
xchg
inc
sbb
or
cmp
push
or
cmp
mov
push
mov
jbe
jle
adc
add
data16
xlat
pop
cwtl
hlt
mov
popa
add
orb
in
ds
fbld
stc
popf
mov
ja
std
fnstenv
lret
jo
mov
andb
sar
mov
outsb
out
push
add
xlat
bound
fwait
mov
gs
dec
std
xchg
lea
lock
dec
jmp
cld
inc
cmp
pop
jge
xchg
push
sbb
fstpt
mov
push
fwait
push
mov
std
mov
or
cmc
mov
stos
jb
imul
cli
aas
fsts
std
push
mov
add
pop
lcall
dec
out
pop
mov
sub
gs
cmc
sbb
dec
stc
jae
pop
xchg
adc
and
xchg
cmp
mov
mov
mov
int
popf
out
xchg
sub
sbb
and
scas
jns
inc
mov
mov
mov
mov
and
stc
xadd
mov
andl
clc
cwtl
in
push
push
xchg
jbe
mov
adc
out
out
popa
xor
jle
push
mov
add
je
je
aad
xor
imul
mov
in
cmp
mov
inc
cmp
call
adc
incl
dec
lds
or
mov
out
mov
push
dec
or
pop
cmp
mov
push
out
add
inc
fdivl
insb
jne
mov
stc
push
fdivrs
ss
pop
cmc
insb
pop
sahf
push
sub
imul
lock
xor
jg
pop
or
or
loope
add
ja
dec
shll
pushf
lret
adc
xchg
test
jb
or
lret
lods
lods
jle
in
pop
xchg
adc
mov
cmp
repnz
adc
jns
mov
test
or
cmp
pop
sub
js
and
addr16
and
pop
sub
xor
pop
iret
inc
cwtl
gs
rcrb
lods
dec
xlat
dec
les
into
ficoms
inc
iret
test
outsb
and
mov
rcr
cmp
inc
push
pop
mov
pop
and
add
lret
in
cmp
xor
pop
les
imulw
std
in
jne
ret
idivl
mov
inc
push
push
decl
dec
push
enter
es
lahf
subb
les
jle
mov
pop
push
sbb
movsl
sub
inc
push
popa
mov
lret
inc
pop
xchg
xchg
jnp
jg
xchg
and
fstpl
dec
in
test
jecxz
inc
jnp
ret
xchg
cmpsl
les
adc
inc
ret
push
mov
pop
arpl
push
dec
js
adc
sbb
cmp
loope
idiv
mov
ja
or
pushf
fmul
into
dec
repnz
repz
push
inc
push
mov
std
addb
mov
and
mov
add
add
mov
pop
aaa
mov
inc
lock
popl
and
dec
aaa
cmpsl
mov
mov
stc
jp
mov
divl
pop
ficompl
fimuls
pop
sbb
ja
das
outsb
rcrl
jnp
sahf
sbb
popf
adc
les
xchg
es
loopne
mov
or
jl
cld
into
pusha
test
iret
jg
adc
lods
aam
mov
inc
dec
or
and
xor
icebp
orb
enter
out
aad
outsl
lods
sbb
aas
xor
push
ljmp
jae
scas
bswap
dec
icebp
fcmove
arpl
sbb
lods
lods
mov
inc
pop
mov
loopne
arpl
and
lcall
mov
icebp
sahf
fnstcw
sarb
xchg
mov
mov
aas
enter
cmp
xchg
xchg
inc
insb
or
cmp
lock
inc
cmc
cmp
adc
sbb
pop
outsl
sbb
int
dec
mov
mov
scas
cld
xor
lret
jo
and
mov
push
aad
popa
cmp
cwtl
or
or
xchg
test
sarb
adc
jg
out
push
push
in
ret
out
sbb
addl
es
xchg
jle
jmp
addl
and
or
imul
adc
jnp
push
pop
pop
test
aas
imul
enter
clc
or
cld
leave
xor
out
mov
ljmp
and
pop
bound
repnz
repnz
jmp
xchg
xchg
mov
out
jmp
fiadds
adc
sbb
fists
ljmp
sbb
sub
add
and
mov
test
ret
push
inc
mov
cmp
pushf
add
out
lds
notb
jle
push
es
je
mov
push
out
lea
inc
in
push
push
lret
sub
mov
jge
sub
shl
gs
inc
js
mov
pop
mov
mov
insl
or
fisttps
xchg
lods
xchg
push
pop
leave
inc
xor
fnsave
push
sbb
mov
popa
rorl
pop
mov
pop
insb
aam
jnp
lret
lods
lcall
outsb
insl
push
outsl
imul
push
aad
jmp
fistps
test
jle
push
xchg
xor
push
subb
aas
popa
adc
sti
cmc
insb
fwait
or
std
daa
es
mov
sub
pop
popf
xchg
cltd
int
adc
xor
pop
out
or
sbb
or
lods
hlt
into
jg
adc
sub
pop
jo
cmp
outsl
mov
mov
pop
aas
jbe
test
push
or
xor
fdivl
lret
in
hlt
xchg
in
loop
out
cld
outsl
sbb
jne
xchg
int
outsb
fs
push
out
je
mov
sub
test
shr
nop
sub
fnsave
add
les
or
cmp
push
push
imul
push
pop
sti
fcom
or
int
push
test
mov
pop
xor
xchg
inc
je
cmp
outsb
outsb
es
ja
xor
add
fsubr
pop
jb
mov
outsl
xor
push
mov
sahf
std
mov
cmp
xor
pop
into
loop
stc
xchg
sbb
stos
sub
popl
pop
jbe
and
nop
mov
inc
sub
pop
les
inc
xor
ds
int3
in
cmpsb
xor
pop
mov
andl
jle
mov
xlat
push
out
jbe
imul
pushf
jp
mov
jg
insb
xchg
ss
mov
stc
xchg
out
mov
pop
fdivs
pop
fs
push
ret
cmpsb
push
aad
shlb
cmp
popa
std
and
and
xchg
gs
popa
mov
jge
xorl
out
test
cmp
inc
jns
xchg
mov
dec
pop
test
pusha
insb
jecxz
adc
push
add
jge
push
inc
scas
jg
cmp
test
add
lahf
add
les
dec
lret
mov
lret
mov
int
in
add
addr16
mov
imul
cmc
into
fwait
jmp
aad
imul
insb
cmp
jnp
mov
xorl
ret
adcb
and
jno
inc
mov
popa
in
jge
mov
emms
daa
test
mov
cmp
fimuls
sbb
xor
fwait
push
ds
push
cmp
in
out
flds
xchg
popa
lret
enter
test
or
loopne
push
fdivrp
push
cmp
rcll
out
dec
add
int3
pop
sbb
xor
pop
fcomp
sub
test
dec
dec
sbb
inc
add
bound
add
add
daa
dec
int3
xchg
and
jae
or
cwtl
push
es
xchg
pop
pop
adc
xlat
mov
out
adc
push
mov
and
dec
add
stc
notl
mov
dec
pop
addl
in
and
jnp
ss
sub
jecxz
add
cmp
sti
aad
dec
aad
xchg
jne
movsb
mov
mov
push
out
xchg
mov
fs
fnsave
std
adc
inc
fiaddl
xchg
movsb
int
and
scas
test
cmpsl
popf
cmp
cli
mov
cmp
je
scas
notl
pop
mov
mov
sahf
movsb
outsl
or
lahf
mul
test
gs
cmp
sti
or
mov
int3
jge
loopne
es
ficoms
adc
mov
inc
shrl
fisttpll
xor
mov
movsb
mov
or
aad
out
nop
les
sti
insl
in
push
xchg
mov
stos
insl
ja
pop
or
mov
int3
int
fadd
test
iret
dec
lods
test
lods
adc
stc
lods
mov
mov
mov
test
add
sbbb
imul
jp
inc
cmp
mov
stos
pop
lods
add
inc
lds
insl
and
xchg
lret
js
add
inc
push
fwait
mov
jg
xchg
fimuls
in
repz
xchg
xchg
or
loope
out
mov
xchg
pop
lret
clc
or
jmp
je
inc
pushf
dec
hlt
cld
add
insb
dec
jne
and
push
add
lods
addl
cltd
push
fadds
jb
ficomps
sbb
outsb
imul
dec
inc
fdivrs
push
mov
mov
and
dec
xchg
lret
aam
or
lds
out
or
cmc
addr16
data16
adc
fnstenv
pusha
in
sub
cmp
dec
test
ds
stos
dec
mov
dec
sar
mov
add
mov
ret
mov
test
testb
push
cs
mov
inc
mov
add
mov
xor
pop
xor
pop
aad
nop
fstps
xor
daa
ret
test
iret
mov
sbbl
pop
sbb
add
in
sbb
div
fbld
enter
push
push
dec
dec
outsl
push
je
movsl
daa
fwait
mov
push
or
and
jns
pop
add
adc
or
je
or
add
fisubrl
nop
push
je
xchg
and
sti
sahf
rcrl
inc
dec
pop
mov
outsb
ffreep
outsb
scas
insb
ficompl
scas
ret
xchg
cmpsb
pop
xor
mov
dec
fmuls
push
jno
jnp
add
inc
stos
das
mulb
add
xor
loopne
dec
mov
mov
iret
jne
das
out
lea
shll
ror
mov
aaa
and
ror
xlat
rcll
fstl
es
inc
xchg
xchg
cmp
fwait
xchg
bound
xchg
vpcomuq
mov
fwait
sbb
xor
outsb
fistpl
dec
push
mov
loop
push
pop
scas
ljmp
pop
sub
mov
dec
dec
repnz
mov
lods
push
sahf
xchg
cmpsb
and
mov
cs
movsl
and
aas
inc
fucomi
popf
imul
mov
inc
icebp
push
scas
icebp
sahf
test
push
jb
out
jmp
lods
inc
push
imul
or
xchg
mov
fstl
jg
adc
fwait
xchg
pusha
test
push
cwtl
in
mov
popa
sub
fiadds
inc
sahf
mov
test
ltr
or
pop
or
pop
mov
jb
xor
inc
sti
aad
mov
fnsave
popf
ss
in
add
inc
jle
stos
aam
popf
xor
push
jae
dec
notb
push
mov
add
into
and
and
sub
pop
in
jge
cs
lret
in
lds
jle
or
pop
sbb
and
and
lcall
ljmp
xchg
sub
cltd
lcall
or
push
notb
dec
add
ret
int
add
add
outsb
outsl
ret
lret
aam
push
bound
popa
stos
xchg
mov
lods
fisubl
fisubrs
jbe
and
xor
movsl
cwtl
xchg
loopne
mov
sbb
push
test
aaa
iret
mov
leave
out
cwtl
xor
ficomps
or
out
xchg
clc
pop
pop
insl
shr
jae
imul
cmp
push
clc
divl
rcl
or
push
dec
call
and
aad
js
loopne
scas
and
cmc
add
sbb
xchg
pop
fimuls
movsl
std
jb
mov
xor
je
xchg
inc
les
or
scas
adc
iret
outsb
add
xor
iret
shl
xor
popa
mov
mov
int3
inc
or
pop
mov
adc
insb
mov
stc
xchg
adc
adc
aaa
xchg
push
hlt
or
ss
or
sub
leave
jo
mov
jg
push
xchg
adc
jle
mov
ror
ret
out
mov
int
inc
es
mov
clc
pushf
fidivl
sub
imul
out
xlat
rcrl
mov
scas
imul
das
ss
ret
cmp
push
out
loopne
adc
out
out
mov
test
dec
cwtl
repnz
repnz
xchg
aad
jmp
in
inc
push
fs
xlat
pusha
repnz
inc
fcmovb
mov
insl
sbb
push
xchg
and
xchg
mov
push
lret
mov
xlat
push
ds
scas
shrb
stos
cmc
jns
ljmp
popa
xchg
pop
cmp
and
lahf
xchg
jl
adc
call
mov
jmp
sarl
dec
mov
mov
jne
insb
jge
aam
arpl
add
ficoms
repnz
xchg
test
cmp
test
cmp
popf
stc
fldl
xlat
rol
pop
fidivrl
sti
xchg
bound
mov
fdivrl
lcall
ja
jle
std
xchg
pop
iret
stos
daa
pop
and
or
push
rclb
mov
ficompl
inc
in
jnp
jns
clc
pusha
adc
mov
cltd
xor
sbbb
fidivs
enter
iret
jno
push
loop
arpl
pop
mov
test
push
popf
sbb
sahf
stos
add
fists
loop
jns
cmpl
lcall
dec
jns
inc
inc
xor
push
rolb
mov
sub
int
jbe
es
fistpll
pop
cmpsl
repz
inc
out
jne
lods
jl
pop
sub
ds
pop
pop
inc
xor
mov
inc
jg
pop
cmpb
mov
add
loopne
call
cmp
pusha
adc
push
cltd
std
fidivs
subl
mov
sbb
add
xchg
inc
ret
test
pop
ret
sti
ss
cmp
lahf
imul
test
sub
loop
pop
xchg
int
rcrl
and
inc
iret
or
lea
mov
mov
sbb
sbb
movsl
lods
pop
inc
arpl
or
cmc
mov
mov
gs
dec
xor
cmc
mov
lcall
mov
pop
dec
ss
mov
jp
jg
lret
cmpsl
sahf
roll
jae
cltd
mov
mov
pop
cmpsb
out
or
xchg
jmp
hlt
shl
out
outsb
and
bound
repnz
and
in
xchg
mov
js
xchg
push
lcall
push
js
cmp
xchg
data16
or
adc
insb
aad
pop
sbb
out
sbb
sbb
mov
aas
pop
mov
jmp
fmuls
inc
rcr
add
xchg
pop
pop
mov
cmpb
push
into
cmc
lret
inc
loop
push
mov
int
shll
fsubrp
insl
scas
pusha
jno
scas
cs
mov
or
fadd
or
sbb
jae
mov
inc
popf
in
cs
cmp
inc
cli
popf
add
mov
pusha
jmp
push
add
and
cmp
ret
and
cmp
insb
and
out
sbb
test
and
mov
pop
xor
rorb
cmp
outsl
lahf
out
xor
or
jno
jno
jge
pusha
mov
lods
sti
and
xchg
push
or
test
push
add
jns
aam
xlat
pop
outsb
test
mov
dec
mov
imul
arpl
fbstp
imul
sti
imul
mov
out
cmp
xor
xchg
push
movsl
and
dec
int3
jg
aas
push
lock
and
roll
rcrl
imul
or
push
cli
add
inc
stc
cwtl
bnd
push
mov
and
addr16
xchg
into
movsl
addl
int3
les
jle
lock
mov
mov
jl
lea
cmp
sub
pop
scas
cwtl
and
cld
cltd
scas
add
xchg
and
add
in
pushf
int
cli
out
daa
push
sbb
mov
xor
dec
mov
pop
jne
inc
add
dec
movsb
or
and
loope
pop
lret
push
insl
push
cltd
add
push
leave
mov
jae
fcmovnbe
call
pop
cmp
loope
lock
ja
outsl
sbb
stos
add
pop
push
dec
movsb
insb
rcl
pop
aaa
mov
leave
aaa
insl
imul
dec
add
fidivrl
mov
les
push
xchg
dec
popa
xchg
mov
xchg
mov
js
gs
sub
and
push
ja
pop
jge
cwtl
or
movb
pop
shlb
scas
popa
out
push
enter
push
out
mov
loopne
sbb
mov
mov
xlat
push
xchg
jg
dec
push
xchg
or
cmpsl
ja
insl
stos
roll
xchg
mov
out
in
xchg
or
cmc
popf
mov
mov
fwait
mov
arpl
cli
shr
aas
outsl
dec
xchg
push
sub
adc
mov
mov
loop
push
testl
in
xor
adc
sub
mov
sbb
das
cmc
out
xor
cmp
mov
jp
xchg
dec
std
push
test
adc
shll
xor
lahf
hlt
arpl
mull
inc
and
das
pop
js
int3
pop
xchg
mov
fs
enter
loope
xor
sbb
ficomps
mov
rol
out
pop
and
xor
adc
mov
mov
and
stc
leave
xchg
jge
cs
and
inc
sub
out
roll
mov
or
cli
cmp
lock
jns
lcall
mov
cmp
and
mov
mov
push
fldenv
fistpll
lea
std
add
push
rolb
adc
sub
or
xchg
or
out
arpl
ja
cmp
dec
cmc
adc
stos
pushf
push
imul
ja
mov
aaa
lods
pop
movsb
dec
dec
sub
ja
inc
rcrl
lahf
mov
sub
inc
movsb
push
push
xor
ficomps
aam
dec
fs
ja
not
xor
fcomp
lret
in
fs
inc
stos
test
ret
lret
jle
outsl
inc
rcll
fwait
and
js
ret
dec
jmp
push
ds
adc
stc
xchg
outsl
and
fdivrs
std
ret
add
sysenter
sub
in
inc
mov
and
orb
jne
faddp
push
lret
add
mov
lods
or
push
xchg
call
xor
dec
in
xchg
xchg
inc
cmp
mov
xchg
sub
mov
cmp
xchg
inc
add
lods
add
std
xor
push
mov
decb
xchg
mov
adc
loop
push
jge
into
cmp
push
sahf
pop
sbb
mov
jne
call
push
in
sbb
mulb
daa
shlb
popf
add
dec
ljmp
fadds
movsl
fcomps
movsb
mov
jb
lcall
sbb
sbb
xchg
jbe
mov
sub
mov
add
adc
fnstenv
nop
mov
xchg
push
dec
loope
out
push
jecxz
mov
push
outsb
aas
jp
lds
lds
arpl
jecxz
incb
and
lods
jge
fcomps
orl
mov
xchg
jae
adcl
jg
ds
mov
push
call
adc
mov
inc
mov
jg
push
or
sub
jmp
addr16
gs
inc
push
xor
int3
cld
cli
inc
pop
xor
enter
mov
test
fwait
and
lret
mov
lock
xchg
xchg
lock
push
xchg
mov
ss
in
push
cmp
mov
jne
inc
orb
dec
js
or
or
stos
fisubrl
mov
arpl
push
int
sub
inc
iret
cli
mov
std
inc
and
lret
pop
data16
mov
inc
pop
cmp
aad
data16
push
cld
popa
lcall
stos
xor
xchg
jno
mov
iret
loop
imul
test
and
in
jg
cli
jnp
push
icebp
add
je
jmp
mov
adc
mov
rolw
pop
test
mov
insb
sbb
ja
jae
in
or
loopne
sub
fadds
xor
or
pop
push
cs
adc
inc
out
xor
hlt
fbld
stc
adc
and
test
dec
pop
sub
fdivrl
mov
je
sub
inc
fisttpl
and
add
add
cmpsb
inc
adcl
cs
lods
movsl
lods
xchg
adc
and
test
xchg
cmpsl
hlt
push
sub
sub
adc
scas
push
mov
js
dec
sbbl
mov
push
roll
push
popf
movsb
loop
addl
xchg
mov
stos
jg
or
xor
scas
or
pop
jb
pop
or
jl
sbb
adc
xchg
stos
mov
f2xm1
cmp
inc
lds
sahf
int3
mov
xchg
jns
sub
mov
clc
call
add
xor
or
jmp
xchg
pushf
leave
aam
inc
scas
pusha
in
sub
mov
mov
ret
add
scas
cmpsl
jo
into
jecxz
lock
or
inc
adc
or
out
sub
jmp
push
sub
mov
dec
jp
cld
je
shlb
push
mov
mov
leave
cltd
sbb
jnp
sahf
rorl
dec
fucom
dec
sub
mov
mov
stos
imul
jecxz
int
sbb
mov
or
pop
mov
shll
sbb
ja
mov
mov
testl
ss
or
sbb
fiaddl
stos
movsb
andb
jae
inc
cmc
cmp
xor
lret
push
cmp
dec
push
push
sbb
dec
jb
repz
dec
mov
in
in
shrl
push
outsl
cmp
adc
cmc
shlb
test
push
jno
imul
and
mov
xchg
xor
cmp
aad
popl
cld
or
in
not
pop
add
sub
lahf
add
xor
andl
xchg
scas
pop
adc
cmp
out
mov
push
jo
out
xor
in
inc
xchg
or
adc
push
pop
fs
std
mov
imul
xor
jle
ljmp
cmc
dec
adc
lret
mov
cmpsl
jmp
sarl
and
mov
push
add
aaa
xchg
int
outsl
mov
lahf
cmp
lds
insl
lcall
ficoml
gs
jb
and
fisttpll
prefetcht0
inc
or
pop
mov
xchg
dec
cmp
dec
stos
fcompp
sbb
xchg
add
mov
jo
daa
insb
int
imul
xchg
in
lret
xchg
bound
jl
fnstenv
and
adc
pushf
xlat
xor
pop
pop
jg
call
pop
jge
add
aas
mov
stos
pop
lods
loope
push
push
adc
inc
dec
les
pop
fisubrl
lds
movsl
ds
and
pusha
pushf
xchg
loop
push
sbb
adc
mov
mov
mov
lret
fwait
or
out
test
test
outsl
outsb
adc
cmp
mov
pop
sub
rcrb
mov
and
push
mov
loope
stc
inc
dec
adc
xor
xchg
fsubs
imul
lret
xor
push
dec
dec
xchg
mov
push
add
jae
xor
lcall
mov
scas
mov
insb
adc
in
out
push
cmp
jmp
push
mov
or
sub
mov
lahf
inc
jae
jmp
cwtl
outsb
pop
jle
pushf
arpl
fsubrs
push
repnz
dec
out
test
scas
scas
fidivs
faddl
xor
xchg
int
fcmove
mul
leave
fscale
jo
push
jns
fnstenv
and
ret
sub
mov
inc
mov
add
popa
add
pop
in
add
loopne
mov
mov
je
insb
cmp
arpl
ret
mov
mov
rcl
data16
lret
movsl
fwait
jl
cmp
jno
pop
inc
icebp
lds
add
pop
sbb
dec
xor
jb
int
cli
jg
outsb
into
add
push
int
dec
fmuls
call
int
dec
and
cmp
mov
lcall
or
test
insl
mov
int3
mov
fidivl
outsb
mov
lds
push
pop
sahf
cmpsl
ffree
or
jge
insb
aad
jle
sub
movb
jnp
mov
mov
icebp
es
int
aaa
mov
int
mov
jbe
in
sbb
pushf
jecxz
je
push
mov
jle
mov
sub
lahf
or
int
mov
adcl
xchg
mov
scas
sbb
imul
mov
sub
pop
notb
and
in
stos
paddsb
nop
lds
imul
cmc
outsl
fbstp
add
mov
lcall
jle
ds
and
shll
inc
jmp
dec
insl
or
jbe
sahf
dec
inc
jmp
xor
out
fadds
sbb
push
fistpll
adc
cmp
fsubs
mov
inc
mov
cmpsl
insl
ja
fs
cld
dec
lea
mov
push
push
je
add
shrl
jp
test
ret
sti
sub
repnz
or
gs
push
and
sub
shl
std
sbb
pop
in
icebp
mov
add
sbb
les
fnstcw
mov
pop
sub
mov
jb
mov
inc
mov
or
nopl
mov
dec
xor
in
mov
jecxz
fsubs
or
and
mov
jge
lret
pushf
lods
jmp
dec
mov
les
mov
fldl
out
out
jno
lea
aaa
lcall
repnz
push
in
sbb
rcl
dec
fcoms
fnsetpm(287
stc
mov
ss
add
mov
push
ja
movb
mov
enter
test
fadds
xchg
pop
inc
ret
dec
sarl
sbb
inc
jmp
cmp
loope
fsubl
ljmp
xchg
xor
fildl
and
int
push
mov
lock
sub
fbld
cmp
call
cmp
test
addb
aam
repz
mov
dec
adc
xor
cmpsl
out
jb
dec
das
mov
mov
jb
jg
lods
adc
std
mov
inc
xchg
dec
rclb
push
and
movsl
jmp
adc
dec
imul
and
shlb
xchg
sbb
dec
cmp
inc
clc
mov
pop
or
pop
movsl
xchg
mov
inc
rorl
xlat
mov
mov
pop
enter
movq
push
iret
and
push
mov
mov
lods
ss
out
or
xor
sub
int3
cmp
cmpsb
jo
gs
into
inc
pushf
jo
adc
in
mov
int
mov
pop
gs
pop
pop
fdivp
and
sub
mov
adc
daa
add
sub
sbb
inc
imul
sbb
cmpsb
shlb
sahf
shl
dec
loope
and
sbb
xchg
fsubrs
call
das
mov
cli
out
clc
pushf
loop
xor
imul
add
mov
fstps
mov
adc
je
out
sti
cmp
ds
fadds
in
loope
popf
mov
notl
in
inc
push
jno
jg
sti
xchg
or
add
int
push
mov
rclb
inc
les
test
call
mov
jae
ljmp
es
in
push
lock
xor
outsb
push
repz
repz
cmpsb
and
jl
fiaddl
cmp
push
pop
mov
xor
jp
push
sub
stc
adc
fimull
imul
lods
pop
push
cli
movl
add
lods
sub
aas
and
push
cs
data16
push
sub
stc
sti
insl
inc
mov
pop
add
and
test
out
js
shll
outsb
mov
xchg
loope
inc
imul
or
jo
cmc
jno
test
addl
movsb
and
scas
pop
in
xor
scas
add
sub
sub
pop
je
out
inc
inc
decb
dec
jp
int3
mov
adc
in
jmp
sarb
out
dec
andb
mov
lcall
adc
push
ljmp
mov
mov
add
cs
mov
loop,pn
xlat
addr16
jbe
in
cli
call
jae
push
ficoml
inc
push
jmp
pop
and
jb
aaa
mov
js
out
jge
shll
das
cmc
clc
xchg
mov
xchg
xor
loopne
pop
in
ds
or
mov
pop
xor
jp
adc
loopne
mov
push
cmp
test
aam
mov
sub
adc
dec
insl
ss
imul
xor
jmp
call
rorl
ja
mov
sbb
fs
test
jb
jo
mov
push
add
sbb
xchg
dec
insb
mov
out
cltd
jo
stos
ljmp
lcall
fwait
adc
addr16
dec
test
sbb
repnz
in
sub
mov
xchg
and
xlat
xchg
lret
jnp
ret
call
adcb
adc
aam
push
inc
sbb
je
fisubl
xchg
adc
pop
mov
scas
dec
dec
push
aaa
sbb
out
stos
xlat
push
xorl
dec
test
dec
and
fldl
dec
inc
or
mov
jno
lea
movsl
sti
inc
mov
push
xlat
mov
imul
mov
shrl
xor
int3
movsb
bnd
dec
push
sti
ret
imul
and
cld
dec
or
jl
daa
fistpl
lcall
fldt
dec
sbb
push
sbb
pop
push
mov
mov
shlb
jae
xchg
das
xchg
cmp
in
mov
xchg
pop
dec
mov
mov
mov
inc
pop
mov
test
mov
roll
fisubl
out
mov
or
subb
and
adc
ds
sti
cmp
fcoms
sub
test
pusha
pusha
lret
mov
inc
hlt
adc
repnz
xlat
outsl
jae
imul
and
out
movsb
and
mov
jb
sbb
xor
sbb
rorl
xchg
stos
call
bound
jl
je
in
enter
inc
inc
mov
lcall
pop
jle
into
xchg
stos
mov
lahf
fdivrl
aaa
movsl
push
mov
adc
dec
adc
das
and
repz
repnz
xchg
subl
sbb
cltd
or
fistps
insl
mov
xchg
mov
add
adc
clc
in
pop
cmpsl
jno
add
push
enter
jbe
lahf
push
jg
jge
lock
mov
jnp
jecxz
fcompl
gs
sbb
cmpsb
sub
fwait
mov
pushf
adc
mov
nop
cmpsb
in
xor
mov
fnstenv
bound
pushf
jmp
ret
bound
xor
or
std
push
lock
cltd
jb
cmp
movl
std
xlat
jnp
push
jo
and
inc
fnstenv
sbb
cli
dec
repnz
pop
popa
popf
pop
push
adc
clc
mov
jo
or
pavgw
mov
push
sti
iret
push
cwtl
mov
sbb
dec
xor
and
push
mov
push
out
xor
or
mov
out
jl
fnstenv
adc
fnstsw
pusha
mov
jb
movsl
cmp
adc
cld
fs
fldcw
push
scas
mov
or
mov
pop
push
cld
adc
in
imul
fisubl
std
push
aas
push
or
jmp
mov
mov
addl
insl
xor
fwait
addr16
push
dec
aaa
sub
in
push
ret
dec
int3
or
aas
push
adc
sbb
test
or
sbb
cmp
insl
scas
push
push
dec
fdivl
aad
add
hlt
icebp
mov
test
push
push
jne
fs
mov
cmpsb
jge
cmp
jmp
or
mov
sbb
fxch
jge
xorl
outsb
mov
mov
ds
ds
inc
fadd
inc
dec
mov
push
test
inc
div
sbb
cmpsl
push
les
ret
roll
mov
sbbl
fwait
or
lock
mov
pop
sti
sbb
clc
push
mov
mov
push
hlt
stos
sbb
dec
daa
inc
adc
ja
pusha
jne
loope
mov
out
pop
mov
jmp
imul
insb
mov
xor
ret
xor
xchg
cmp
js
mov
cmp
cmp
andb
inc
jno
xchg
in
or
mov
shld
fisttps
mov
ds
or
or
mov
or
in
xor
stc
mov
dec
fwait
or
mov
loopne
jae
dec
dec
jecxz
ss
xchg
leave
mov
jge
dec
insl
pop
into
inc
jp
movsb
push
es
out
int
add
xor
decl
loope
jne
es
test
das
xor
mov
cmpl
pop
les
add
xchg
or
aam
aam
mov
aad
fisubs
movsb
fs
jne
test
icebp
std
xlat
inc
cmpl
xchg
cmp
out
mov
dec
loope
cmp
outsl
xor
aam
lods
inc
movsb
mov
filds
fnstenv
sbb
aad
xor
subl
jo
clc
sub
loop
fildl
xor
adc
xchg
pop
jmp
sbb
lods
cmpsb
jg
sub
cmp
dec
inc
jmp
sub
sar
or
add
and
jmp
stc
push
push
jge
inc
stos
sub
or
add
stc
pushf
iret
out
push
and
aas
mov
adc
xor
out
je
mov
mov
iret
idiv
adc
sbbl
or
idivl
push
jmp
pusha
ljmp
xchg
mov
jne
popa
or
pop
pop
mov
xchg
sbb
push
cmp
pop
lret
xchg
mov
mov
pop
fs
ja
pop
mov
mov
fldl
sbb
cltd
mov
dec
fcompl
int3
adc
lods
mov
aas
pushf
jg
push
mov
jl
mov
lret
loop
xchg
mov
das
pusha
outsl
cmp
sub
fs
cmp
xchg
mov
imul
push
sar
push
insl
mov
in
xchg
pop
pop
das
enter
test
mov
dec
jg
testb
inc
inc
mov
dec
faddl
push
xchg
cmp
shr
and
mov
sbb
stc
push
mov
lds
lds
popa
cltd
loope
mov
cmc
das
lcall
or
jge
aam
mov
push
in
sub
loop
int3
lock
xor
cmpsl
shrl
cld
push
cmpb
mov
pusha
adc
stc
and
add
test
sti
push
shll
je
cltd
pop
pop
sbb
xchg
push
cld
jne
dec
xor
or
cmp
sub
push
push
fwait
daa
loope
sarb
mov
dec
push
out
sbb
rcl
cmp
je
outsl
adc
mov
jb
insl
push
cld
mov
mov
ss
pop
jg
pop
popa
xlat
cmp
pop
sub
cwtl
lahf
add
xchg
mov
js
lock
pushf
mov
add
xor
insl
loop
inc
jecxz
xlat
xchg
jge
adc
fs
and
insl
adc
mov
push
or
out
leave
dec
inc
mov
inc
sub
ret
scas
xchg
or
add
pop
arpl
outsl
cli
adc
lcall
sbb
push
sub
aaa
fwait
inc
xchg
dec
xchg
mov
mov
stc
fdivrp
scas
lods
adcl
sti
fucomip
xor
inc
cmp
mov
add
std
idiv
mov
mov
or
leave
push
into
cmp
aam
mov
xlat
lcall
xor
fimuls
int
jl
loop
xlat
lock
jbe
gs
pop
jb
fwait
out
test
lock
test
mov
aas
int3
mov
ds
jbe
fstpl
fcmovb
fimuls
mov
popa
xor
lock
je
pusha
or
push
and
ret
aam
push
test
cmp
push
dec
fyl2x
cmpsl
jl
das
daa
jo
in
cmp
cltd
inc
add
jle
push
dec
repz
mov
jle
pop
fnstenv
cltd
sub
lock
aam
mov
pop
repz
leave
sub
push
inc
mov
pop
sbb
scas
inc
out
lahf
cmp
into
aam
pop
jnp
popa
push
sbb
clc
jae
sbb
jg
mov
stc
push
pop
or
loop
dec
pushf
sub
int3
xor
or
push
aaa
mov
incl
lods
xchg
pop
je
inc
mov
jns
lds
je
sub
or
scas
jge
and
pop
sbb
xchg
pop
sub
and
lds
popa
push
jae
out
sbb
sub
xlat
roll
loop
cmpl
jbe
and
fistpl
lcall
push
lods
push
mov
in
rclb
and
pusha
bound
cmpl
mov
xlat
insl
push
fimull
dec
aaa
popa
xor
jnp
or
cmpsb
sti
inc
scas
jl
xlat
mov
lods
dec
sub
popa
into
xor
inc
sbb
inc
dec
mov
jnp
fildl
xchg
jns
xor
sbb
stos
pop
mov
enter
cmp
cmc
data16
sbb
push
in
scas
rclb
out
outsl
sub
mov
and
cmp
cs
cmp
clc
shlb
andl
lds
xchg
inc
aam
sub
jnp
pop
fcmovnb
sbb
ret
ds
add
adc
push
jecxz
mov
jbe
notb
push
mov
lea
mov
inc
sbb
jge
dec
mov
mov
sbb
lods
into
aas
push
xchg
clc
mov
push
push
roll
or
mov
mov
cwtl
jno
in
enter
or
dec
push
sbb
push
ficoml
push
mov
icebp
scas
add
clc
clc
pop
pop
mov
lret
push
hlt
es
das
jae
xchg
push
push
les
test
je
loop
outsl
push
outsb
loope
mov
sub
iret
stos
or
aaa
fstp
pop
movb
jbe
sbb
aas
out
addr16
inc
fcomps
repz
push
inc
sub
aas
cltd
loopne
nop
outsl
or
cmp
mov
jmp
sub
mov
sbb
mov
adc
xchg
adc
std
cmc
jae
out
lret
adc
xorl
ret
inc
rol
mov
rcr
pop
mov
pop
adc
outsb
mov
adc
movlps
and
push
and
dec
ds
pop
in
data16
cmp
xor
adc
jp
decl
popf
cmc
sub
sub
repz
fldt
or
inc
rcrl
in
xor
pop
inc
lock
jnp
stos
mov
mull
and
aam
jno
add
stos
mov
push
insb
or
cmc
push
lcall
pop
int3
mov
pop
jne
jp
dec
test
loop
sbb
faddl
loope
pop
loop
mov
cmp
push
adc
dec
cmpsl
xor
scas
lock
cmp
bts
xchg
orb
pop
jno
add
stos
mov
push
insl
sbb
mov
popf
inc
sub
or
int
loopne
push
xlat
and
out
pop
xor
fs
xor
repnz
loope
decl
mov
add
jno
jecxz
frstor
xor
enter
stc
les
add
xchg
push
xchg
push
movsb
inc
sub
pop
push
loope
rolb
insl
icebp
imul
dec
gs
js
xor
outsl
dec
xrelease
movsl
clc
hlt
inc
sub
and
push
and
lds
bound
repz
dec
andl
ss
and
int
pushf
lods
mov
out
addl
cmp
bound
adc
add
scas
mov
sahf
shl
fsubs
ret
push
jge
test
in
pop
cmpsb
xchg
jle
pop
pop
clc
mov
adc
push
mov
add
xchg
push
adc
rcrl
or
push
testb
je
xchg
sub
rolb
or
pop
inc
imull
sub
fdivl
js
inc
dec
lods
stos
xchg
pop
add
mov
xor
ljmp
jno
mov
xorb
sub
push
add
or
rolb
out
jbe
test
jb
lock
xchg
je
das
inc
je
jbe
mov
loopne
push
xchg
in
jo
lds
inc
pop
ror
aas
mov
test
dec
dec
adc
sarb
enter
push
scas
rorb
mov
jg
or
leave
lock
inc
adc
stc
mov
std
clc
pop
xchg
addr16
pop
fimuls
or
movsb
out
cmp
icebp
mov
inc
mov
xor
pop
jmp
xchg
dec
mov
repnz
xor
jmp
xchg
xchg
mov
pmaxsw
fcomps
jno
arpl
cltd
fwait
jns
test
fiaddl
lcall
in
push
push
pop
mov
jmp
int
push
clc
cmpsl
inc
scas
dec
jge
shrb
jo
loope
or
mov
aad
inc
sbb
mov
out
xchg
add
push
loopne
adc
and
insb
jmp
push
ds
inc
std
dec
xor
enter
fiaddl
cmpsl
nop
scas
fwait
ljmp
xchg
pop
xlat
les
stos
pop
jecxz
pop
and
cmc
movsb
xchg
cli
mov
pop
fwait
sti
mov
xchg
mov
and
mov
ljmp
xchg
sub
shrl
in
in
sub
fwait
xor
sub
xchg
inc
cmp
sbb
subb
or
add
mov
movsl
loop
push
pop
jne
or
add
fsubs
xchg
jmp
pop
jnp
ds
cmp
xchg
jp
adc
movd
sti
cmc
and
inc
arpl
xchg
push
repnz
mov
bound
pusha
adc
loop
and
ror
repnz
and
adc
les
lea
mov
inc
push
cmp
daa
sarl
xor
lret
push
dec
test
add
scas
push
xchg
xor
xchg
in
xorl
js
add
filds
pop
pop
jmp
or
in
in
stc
inc
mov
sti
cmp
mov
and
fimull
pop
fldt
ja
mov
pop
xchg
arpl
call
cltd
out
popa
les
dec
sbb
xor
cltd
mov
cli
into
pop
insl
test
inc
inc
mov
sbb
pop
stc
xchg
mov
pop
imul
sub
and
jp
shll
xchg
push
push
cmp
mov
cltd
dec
pop
lret
dec
scas
and
sti
cld
mov
cmpsb
sti
adc
or
inc
dec
int
ret
mov
jg
outsb
sbb
cmpsl
add
leave
testb
into
sub
inc
sbb
inc
cld
inc
imul
dec
sub
flds
add
and
adc
pop
sub
jo
daa
xor
outsb
push
loope
xchg
fsin
ret
test
pusha
or
lea
aaa
fstp
in
mov
add
fcoms
push
xor
cmp
sbb
stos
jge
cld
in
xor
sub
dec
rcll
xchg
sub
stc
push
aam
test
jmp
pop
popf
jmp
aad
pushf
arpl
adcb
repnz
pop
or
xchg
fsubrl
mov
adc
push
aaa
sub
aam
stos
jecxz
xor
xchg
xor
icebp
cmc
loope
sahf
dec
fisttpll
cmp
cmpsl
subl
mov
sub
jae
insb
subl
pop
fists
imulb
sub
add
xor
jb
negl
cmp
jb
sar
outsl
mov
pushf
cmpsb
dec
adc
cmp
mov
push
pop
test
dec
pop
shr
xlat
xor
pop
shlb
pop
iret
xor
xchg
lret
jno
xor
insb
inc
nop
fisttpl
pushf
push
sub
sbb
cld
xor
test
inc
aaa
push
jnp
mov
pop
sarl
in
mov
add
out
arpl
mov
jp
ret
cmp
ffree
mov
mov
fsts
pop
mov
int
add
sub
in
xchg
pop
xchg
push
or
scas
int
and
rorb
cmp
repz
iret
cmp
icebp
pop
stos
call
lock
nop
adc
mov
in
adc
add
dec
sbb
insl
daa
ss
outsl
dec
stc
xor
or
push
jae
sti
xchg
cli
out
rcrl
sbb
loopne
sbbb
iret
repnz
inc
js
inc
movsl
jb
fsubrl
inc
mov
lods
ret
hlt
dec
jnp
call
ljmp
pop
jle
sarb
fwait
inc
loope
cmp
xor
clc
lahf
inc
imul
xchg
sbb
mov
pusha
rclb
shll
and
test
push
rcr
dec
loopne
push
inc
dec
arpl
dec
pop
adc
clc
mov
lret
and
fstps
out
pop
or
scas
pop
je
fmull
jns
mov
dec
xor
sbb
lcall
fcmovnu
push
sbb
mov
push
inc
hlt
cmp
xchg
dec
rcll
cmp
jle
jno
and
push
mov
xchg
scas
push
dec
data16
movsl
test
shrb
sub
loop
shlb
mov
add
and
adc
jmp
sub
shll
hlt
jbe
loop
cld
pop
into
mov
int
and
cltd
dec
jmp
or
in
push
jnp
and
stos
dec
or
cmpsl
add
add
mov
fidivl
daa
dec
rcrl
mov
fcomps
neg
cld
lock
jae
and
in
sbbb
adc
lea
sbb
xchg
dec
jmp
cmp
or
cmpsl
mov
out
mov
push
push
dec
mov
inc
stc
out
push
or
subb
add
clc
pop
in
test
inc
ror
mov
leave
sti
pop
stos
dec
sub
rcrb
and
das
bound
shll
in
xchg
add
jge
stc
fs
and
jl
lret
cld
out
in
aad
push
mov
push
addr16
fnstsw
and
movsl
repz
sbb
mov
add
jne
lea
pop
outsl
xor
fsts
push
push
out
stc
insb
sub
cwtl
shlb
or
data16
push
movsl
sbb
lahf
or
out
xchg
adc
dec
iret
aas
sub
xor
nop
sahf
cmp
jns
es
dec
loop
subl
push
jns,pn
xchg
test
push
ret
ret
and
lret
mov
int
stos
insl
fadd
out
or
xchg
xchg
add
mov
inc
fwait
pop
movsb
hlt
out
rolb
or
out
push
jo
lret
mov
sub
xchg
jae
inc
push
mov
sbb
js
rcrb
sbb
sub
stc
pop
dec
fdivs
inc
mov
inc
cs
sbb
and
std
std
xchg
outsb
sbb
pop
addr16
ret
pop
inc
xchg
mov
aaa
cmpsb
sub
adc
testb
fmull
shlb
add
mov
rolb
mov
inc
push
push
stos
cli
dec
mov
ljmp
xor
pop
mov
push
jl
repz
jp
inc
movsb
out
ror
push
cmc
neg
add
cmp
cld
lods
in
mulb
fnstenv
or
out
das
xor
imul
mov
push
add
mov
adc
loopne
add
cmpsb
xor
dec
jp
ja
ja
insb
loopne
or
dec
pop
ss
sub
sub
sub
cmp
jle
loopne
out
mov
jnp
js
aas
lcall
aas
insl
sti
js
mov
into
hlt
mov
out
mov
gs
xorl
xlat
sbb
add
mov
push
push
daa
fucomp
push
jecxz
outsl
cmc
or
int3
or
dec
scas
mov
lret
std
jecxz
negb
push
dec
cmp
xchg
int3
fs
bound
in
jae
mov
lea
fmuls
cmp
neg
pop
adc
ret
dec
jl
mov
sbb
or
mov
sbb
inc
pop
mov
loopne
out
test
jnp
mov
arpl
cmp
data16
pop
cmpl
out
xlat
xor
push
ds
mov
or
adc
sub
xchg
push
pop
fstpt
or
or
in
pusha
ljmp
dec
xor
popf
mov
add
pop
add
push
push
aas
or
outsb
pop
bound
xchg
popa
add
sub
ret
push
mov
lcall
push
jns
push
inc
addr16
cs
push
jl
cmp
pushf
mov
lock
sub
daa
mov
inc
sbb
push
ret
cmp
lret
ss
mov
out
lret
push
outsb
and
mov
adc
clc
adc
mov
vandnps
loop
in
xlat
test
pop
arpl
mov
sbbl
sbb
push
jbe
sub
dec
iret
loope
fs
push
or
add
cmc
arpl
cmpsl
int3
ret
fucomp
xchg
mov
mov
jns
mov
and
inc
mov
push
cmp
sbb
in
mov
into
xlat
loop
scas
movsb
aad
sub
xchg
mov
jl
or
jns
enter
out
and
repnz
loopne
sub
sbb
in
imul
add
add
mov
push
sub
mov
das
movsl
xchg
in
sahf
dec
repnz
mov
add
stos
pop
or
and
or
stos
imulb
jno
popa
pushf
outsb
adc
mov
test
fst
and
pop
orl
icebp
jne
cmp
fisttpll
sub
ret
sub
mov
push
adc
push
xchg
ret
lahf
xchg
and
insb
jo
std
jns,pt
pop
pop
xchg
ficoms
cmp
mov
lock
pop
stc
sub
push
lods
push
xor
repnz
ja
and
push
inc
cmp
sbb
mov
pop
push
mov
xchg
mov
imul
pop
ret
cmpsl
xchg
or
push
pop
repz
adc
cmp
enter
cmpsb
sbb
xor
int
sub
sarb
lcall
decb
jb
lret
popa
pop
pop
push
fstps
les
je
xchg
fdivs
push
xchg
cmp
arpl
loope
sbb
mov
hlt
lods
dec
in
mov
cltd
ss
out
loop
mov
or
mov
sbb
xchg
and
adc
xchg
add
inc
pop
popf
push
cli
xchg
std
popa
adc
outsb
test
mov
bnd
mov
insl
pop
lret
sub
mov
jp
mov
inc
xor
cmp
ret
cmp
xor
sub
xchg
lods
call
data16
mov
dec
push
popf
add
out
ljmp
leave
pushf
gs
jno
xor
repz
adc
jg
movsl
in
cli
lods
mov
aaa
add
lahf
ss
pop
or
jmp
add
push
mov
bound
jmp
sbb
ja
xlat
sub
lds
jno
sub
dec
push
lahf
out
pop
sub
or
adc
push
movlps
popa
and
shl
mov
arpl
lret
movsl
repz
xor
xchg
xchg
ljmp
jl
jl
scas
dec
mov
iret
mov
jg
sub
inc
and
nop
xor
add
pushf
enter
cmp
push
jecxz
cmc
daa
mov
pop
mov
ss
mov
call
data16
mov
out
push
sti
into
in
mov
mov
dec
mov
fiaddl
pop
cmpsl
xchg
xchg
push
repnz
loopne
stos
scas
dec
stos
into
jg
cmp
fwait
repnz
into
mov
inc
scas
pusha
mov
xor
leave
mov
out
and
les
bound
jno
pop
sarl
sub
mov
cmp
adc
ja
in
sbb
pop
push
fisttps
mull
mov
cmp
adc
cli
addr16
cmp
rclb
jo
jg
xlat
cmp
mov
mov
mov
test
mov
jl
jp
mov
imul
dec
rol
test
pop
adc
xchg
sahf
jmp
sub
mov
and
push
fwait
mov
jo
fs
jecxz
sub
lret
sbb
mov
icebp
and
test
inc
repz
imul
iret
xchg
das
pop
enter
lahf
loop,pn
jbe
sub
lock
pusha
jge
cmp
lcall
cmp
adc
dec
dec
xchg
xor
iret
and
jp
cmp
mov
push
push
sbb
adc
push
call
stos
add
or
daa
int3
xchg
lcall
fs
xchg
sub
aas
adc
imul
jl
xchg
jae
hlt
mov
dec
repnz
test
jl
cmp
testl
or
cmp
and
ret
and
cmp
testb
mov
inc
pop
cmp
mov
sub
mov
xchg
imul
push
inc
shlb
xchg
lea
daa
rcrb
iret
sbb
xchg
je
test
fadd
push
cld
out
mov
sti
push
push
push
pop
rcrb
out
mov
sahf
jbe
mov
popf
dec
fst
into
out
shrl
fcmove
idivb
push
cmp
pop
out
xchg
adc
cmp
stos
hlt
mov
lcall
hlt
add
cltd
mov
cs
and
jne
add
ret
loope
mov
es
std
mov
dec
repz
push
mov
mov
xlat
mov
je
xchg
int3
jg
jp
stc
adc
mov
xor
insl
mov
mov
mov
adc
inc
mov
in
andl
xor
fs
lods
fs
mov
rcrb
cs
cli
lods
aaa
sbb
aaa
xchg
popf
ret
mov
adc
sbb
in
xchg
add
idiv
lods
xor
scas
notb
push
inc
outsl
cltd
cltd
cmp
cmpb
and
add
outsl
popa
aas
nop
mov
cli
addr16
in
fmull
jne
ret
push
loop
addr16
sarb
lcall
subl
lcall
js
push
jmp
popf
in
jecxz
mov
inc
ss
push
mov
xor
xchg
or
out
xchg
dec
add
xchg
push
stos
mov
mov
sarl
sbb
add
addr16
jb
outsl
mov
loopne
movsl
loopne
popf
cmp
pusha
push
inc
popf
xchg
jns
lret
repz
pop
sbb
scas
mov
out
lahf
and
mov
mov
shl
int3
std
mov
bts
adc
mov
faddl
jp
cmp
insb
mov
mov
add
lock
push
sti
adc
sbb
push
or
shlb
and
hlt
cmpsl
push
je
imull
inc
or
pop
dec
stos
jle
jae
add
xchg
xor
outsb
dec
cmp
cli
loop
mov
arpl
in
dec
jl
jne
iret
pop
jmp
add
xchg
ss
pop
inc
loopne
mov
inc
mov
mov
daa
xchg
test
popl
inc
push
push
sbb
push
les
clc
jno
inc
mov
push
xchg
loopne
mov
or
sbb
pop
jb
aad
aam
clc
arpl
arpl
pop
mov
stc
or
sti
out
in
sub
fcoml
outsl
imul
add
sbb
lods
sarl
jle
je
xor
iret
jp
add
hlt
pop
int3
push
jmp
push
cmp
movsl
mov
ret
cmp
sub
and
stos
adc
jg
pop
mov
jb
subb
push
inc
cwtl
aas
push
out
mov
mov
lahf
mov
repnz
and
mov
dec
jnp
cld
dec
orl
call
pop
xchg
pop
in
fisubl
add
test
xchg
into
or
push
scas
ficoml
cmp
sub
or
cmp
cmp
fwait
movsb
mov
adc
shlb
jg
inc
inc
data16
flds
cmpsb
jl
out
push
mov
xor
lods
imul
lahf
repz
adc
jo
out
stos
sub
stc
imul
push
dec
jo
aaa
xor
fdivrs
fnstsw
jecxz
ja
add
jo
mov
das
push
adc
adc
daa
sti
xchg
dec
cmp
cmp
out
pop
push
int
cmpsl
test
sub
inc
xchg
rclb
imul
or
mov
sbb
pop
in
in
lret
std
push
out
ja
std
das
rcrl
mov
sahf
mov
push
xlat
sub
lahf
sbb
mov
fs
pop
sbb
fstps
xchg
jae
pop
adc
les
jl
jp
pop
mov
adc
frstor
xor
mov
push
js
jecxz
hlt
test
jns
xchg
or
xor
lods
xchg
sbb
jne
mov
add
dec
sub
xchg
pop
add
ja
les
jbe
movsl
call
mov
pop
and
sub
pop
addr16
push
cmpsb
cmp
or
jg
sub
cmpsl
xchg
std
push
out
mov
push
add
imul
sub
sbb
and
pushf
add
inc
inc
scas
sub
in
pop
lcall
int3
mov
lret
cmc
xchg
cmp
jo
sti
cmc
sbb
jge
xor
shlb
or
popa
adc
xchg
gs
pop
jns
add
xor
lcall
nop
ftst
jae
out
inc
sbb
mov
mov
call
lret
pminsw
or
xchg
subb
xor
in
or
stc
cmp
rol
push
divl
nop
jb
test
xchg
xor
cltd
insb
lret
rol
aad
sub
inc
push
lahf
test
push
add
mov
push
or
stc
push
sub
lods
sbb
js
aam
sbb
pop
lods
std
loopne
dec
mov
or
jmp
inc
adc
jnp
inc
inc
push
cmp
sub
adc
inc
pop
lea
and
movsl
sbb
fimull
jmp
and
dec
imul
fildll
push
sbb
out
mov
dec
push
pop
aas
xchg
dec
xorl
push
daa
cmp
movsb
pop
add
mov
fs
mov
je
mov
mov
cmp
mov
xor
orl
sbb
fistps
scas
or
xlat
repnz
aas
lds
in
ja
mov
sub
ds
and
dec
dec
dec
add
mov
lcall
iret
js
mov
sub
cmpsl
shrb
dec
jge
cli
ret
int3
out
lcall
dec
movsb
ret
hlt
cmp
adc
lds
in
ret
movsb
sbbb
in
je
xor
es
and
sbb
mov
loope
icebp
repz
adc
mov
in
mov
rcrl
mov
xchg
sub
inc
aaa
or
xchg
pop
and
xchg
adc
jecxz
jge
pusha
call
sbb
pop
push
push
jle
scas
cmp
enter
aad
insl
dec
jle
in
or
out
cmpsl
sbb
test
push
lods
fwait
jecxz
jl
push
gs
adc
mov
add
ja
push
pop
inc
xchg
pushf
sbb
mov
adc
cli
enter
adc
cli
sbb
repnz
cmc
cmp
mov
mov
call
xchg
pop
mov
inc
das
pop
aas
add
cmp
sbb
mov
pop
ljmp
fs
mov
clc
cwtl
outsl
jb
lock
lret
push
test
or
cltd
adc
jle
loope
clc
fisttpl
sub
adc
mov
mov
outsb
cltd
mov
cwtl
mov
fwait
aad
insb
or
mov
addr16
fdivrs
jno
and
aas
and
sub
mov
fsubl
mov
push
int3
and
addr16
or
xchg
xor
pop
fldcw
dec
pop
lahf
dec
jecxz
pop
jp
mov
mov
hlt
xor
outsl
ljmp
sahf
dec
lahf
repnz
xorl
cmc
push
lcall
lea
mov
aaa
lock
and
add
or
push
cli
std
inc
xchg
jp
inc
mov
test
or
sub
push
cmp
stos
repz
sahf
jbe
or
pop
mov
roll
lea
insl
sbbb
leave
jge
jns
mov
test
daa
aad
repnz
add
out
dec
push
push
mov
lock
xor
xor
mov
xchg
jno
dec
fs
sbb
ljmp
push
cmp
stos
fdivl
aaa
sbb
in
sbb
inc
add
xchg
orl
loope
inc
addb
fildll
dec
out
or
les
ss
pushl
or
jecxz
inc
inc
mov
ja
and
xchg
dec
shlb
and
xchg
xor
in
pop
ljmp
jo
or
inc
lods
lret
adc
cwtl
out
mov
push
frstor
out
and
xlat
in
sbb
out
push
inc
xor
subl
icebp
outsl
push
idivb
ret
int3
in
jnp
mov
out
outsb
imul
repnz
jbe
addl
xchg
cmp
sub
aas
cs
and
aaa
in
dec
inc
jae
rolb
xchg
cltd
xchg
xchg
mov
mov
push
out
xchg
cmp
sbb
jmp
add
add
cld
cmp
shll
fnstenv
imul
pop
insl
out
stos
or
lahf
or
pop
push
sub
das
fwait
push
push
in
adc
jno
jmp
imull
jp
or
jbe
adc
add
mov
cld
cmc
outsl
js
sbb
popf
adc
add
mov
and
enter
mov
sarb
add
lret
scas
outsl
fcmovnu
sbb
enter
call
and
mov
xor
and
cmp
fisubs
mov
and
add
pop
subb
notb
add
fmuls
xor
movsb
lock
cmp
and
pop
repnz
mov
ss
ss
xchg
lahf
leave
repnz
popa
sub
aaa
in
repz
jle
sbb
add
test
rorl
xor
aas
cmp
and
sub
cwtl
mov
push
adcl
inc
xor
xchg
aaa
cmp
sahf
cmp
ss
jno
inc
pop
inc
dec
popf
mov
jmp
mov
aam
mov
cld
pop
mov
and
int3
and
in
scas
fbld
int
add
sub
std
and
xchg
repnz
pop
ficompl
fsubrl
pop
jb
mov
lods
call
xor
fwait
inc
repz
std
xchg
mov
pop
adc
sub
xchg
sbb
pushf
bnd
inc
test
aam
clc
pop
jns
int3
mov
lcall
ss
movl
jl
xchg
test
jecxz
lret
loope
fimuls
fisubs
xchg
lods
iret
pusha
sti
loopne
or
add
mov
ss
repnz
push
inc
fists
gs
jns
or
inc
add
nop
pop
push
imul
inc
jmp
pop
inc
push
aam
adc
fsubs
frstor
aaa
add
cmc
aad
sub
xchg
mov
andb
outsb
jo
leave
fiaddl
shlb
and
mov
dec
push
mov
mov
sbb
gs
cld
clc
mov
dec
push
cmc
cmp
aad
scas
movsb
outsl
xchg
in
xchg
scas
push
ret
dec
fsubl
mov
xlat
fucomi
rcll
add
sti
fcompl
dec
fisttps
inc
inc
gs
nop
loopne
cs
sbb
push
xor
lods
ja
add
and
movsl
lcall
sbb
xchg
mov
ss
lret
inc
mov
mov
xlat
cltd
bound
push
mov
insl
sub
cmp
inc
in
dec
push
jns
loopne
in
push
arpl
adc
xor
and
jae
hlt
inc
xor
adc
jnp
out
fldcw
rcll
or
ss
in
and
lcall
xchg
adc
andb
sti
mov
inc
scas
xchg
test
dec
movsb
in
hlt
lret
push
jge
add
inc
std
pop
scas
xchg
dec
jmp
subb
jo
sarl
push
push
mov
pop
pop
mov
arpl
cmp
faddl
lds
sbb
cmpsl
jae
lcall
je
stos
adcl
gs
imul
dec
sbb
add
in
js
xchg
imul
push
lret
cmc
in
or
fsqrt
das
xor
clc
or
or
movsl
loopne
jbe
dec
mov
lret
xchg
out
and
sub
scas
mov
ret
fwait
pop
cli
movsb
or
pop
inc
adc
shrl
sahf
fwait
mov
or
dec
jno
mov
add
inc
fbstp
cmp
mov
push
sub
stos
into
out
ja
mov
jno
fidivrl
lcall
sbb
mov
xchg
adc
jle
stos
popa
or
and
das
aas
pushl
mov
sbb
movsl
rcll
add
inc
mov
pop
mov
xor
mov
jg
inc
ret
negb
xchg
loope
lret
inc
mov
pushfw
add
shl
xchg
xor
addl
inc
xchg
sub
imul
mov
stos
test
dec
aad
jp
cmp
inc
sub
jge
std
int3
aad
pop
sub
leave
jge
pusha
and
or
dec
cmp
lds
pop
popf
imul
mov
push
xchg
ja
roll
xchg
in
sbb
lret
cmpb
pop
sahf
lock
lods
or
int3
push
mov
xchg
add
imul
fucom
dec
push
adc
and
pop
pop
lahf
mov
inc
popa
decl
pop
lods
and
gs
jle
fwait
mov
pop
rcrl
nop
jb
sbb
jecxz
push
or
sub
adc
sbb
cld
jae
mov
fadds
xor
scas
rolb
fnsave
xor
sub
and
fsts
xor
rcrb
xchg
movsb
js
dec
fstl
and
scas
jns
adc
mov
mov
out
mov
mov
push
int
mov
or
push
sbb
lcall
les
mulb
xchg
pop
int3
push
adc
jo
push
or
fsubl
pop
sub
jne
int
jl,pn
subb
xor
sub
stc
mulb
jb
jns
xor
xchg
xchg
mov
leave
xchg
out
mov
xchg
jnp
push
dec
xor
ljmp
mov
fsubrs
jo
add
push
lods
ret
sub
rcr
imul
or
mov
mov
xor
sub
mov
mov
cmp
mov
dec
xchg
ret
pop
cmp
cld
mov
leave
sti
daa
mov
mov
mov
jg
xchg
mov
fwait
push
sub
jbe
mov
je
cmp
repnz
mov
sbb
push
mov
jg
cmp
lods
dec
mov
insl
jmp
shrl
in
clc
ret
clc
pop
xchg
adc
mov
xchg
rorl
jmp
jne
jno
and
imul
mov
stos
cmpsl
push
inc
mov
aam
ljmp
push
in
js
xor
arpl
das
scas
inc
int
adc
lods
fsts
mov
jns
shlb
mov
push
push
loopne
dec
mov
fsubl
dec
xchg
sbb
test
sbb
dec
int3
icebp
pop
mov
fiadds
dec
lods
ss
popf
mov
sub
fisubl
push
clc
cmp
popf
inc
sbb
mov
lcall
out
out
mov
sti
pop
rcll
xor
fsubp
mov
lret
imul
mov
xchg
jns
mov
stc
insb
insb
adc
add
inc
push
jle
xchg
xchg
mov
pop
sub
test
lds
cmc
ja
jmp
push
mov
jp
xor
popf
ljmp
xor
aas
frstor
sbb
or
cmp
mov
fbstp
test
daa
and
pop
pop
cmp
fsubl
lods
and
int3
adc
push
mov
pop
fisttps
adc
jne
add
jae
add
aas
arpl
leave
push
shrl
ret
dec
and
mov
xchg
imul
out
leave
test
push
push
popa
xor
sbb
jmp
cltd
js
pop
and
mov
hlt
mov
std
cmpsb
cld
lahf
dec
mov
leave
pop
aas
jp
aas
cmp
dec
imul
loope
pop
data16
mov
adc
xor
dec
push
xchg
xchg
test
cwtl
ficompl
jb
add
outsl
aad
out
js
xor
rol
in
xchg
adc
lahf
mov
into
mov
push
pop
movsb
cmp
adc
or
mov
cmp
xchg
pop
popl
insl
push
ss
cwtl
addr16
mov
mov
jne
icebp
insl
rsm
xor
pop
pop
mov
das
outsb
aad
test
mov
cmpsl
inc
or
mov
dec
and
js
push
insl
outsb
dec
arpl
xchg
addb
es
ds
push
mov
sub
or
and
mov
push
cld
fs
jns
loop
jne
pusha
in
in
adc
cltd
mov
leave
xchg
shll
push
jbe
add
imul
mov
aas
pop
jnp
add
inc
pop
or
ret
lea
outsb
xor
or
mov
lock
jecxz
in
in
cs
adc
pushf
out
push
lock
mov
ds
or
popf
lret
and
cmp
jmp
sarb
mov
lahf
out
aaa
or
mov
jmp
or
inc
push
jbe
jp
mov
outsl
aaa
and
mov
jge
or
lret
add
and
add
sub
cmp
sbb
xchg
scas
mov
cmp
mov
xor
pop
les
orb
stc
cmp
shrb
mov
dec
mov
ffree
mov
cmp
loopne
xchg
sbb
test
cmpsl
decl
adc
dec
jmp
push
ret
aas
dec
push
stos
xchg
cmp
pop
mov
pop
xchg
mov
jge
xchg
inc
test
pop
mov
sbb
loope
xor
add
sbb
xor
ss
mov
nop
fwait
jb
xchg
jg
sub
jecxz
sub
push
shl
aaa
dec
int
jge
dec
insl
jbe
dec
jno
pop
inc
or
scas
sti
push
sub
test
adc
sbb
mov
stos
inc
in
lods
xchg
js
xorl
or
ja
iret
xlat
int3
dec
xchg
pop
popa
pop
or
jne
inc
sub
loope
jg
add
icebp
mov
test
sub
popa
push
mov
nop
adc
and
xchg
pop
jne
repz
dec
sbb
mov
in
push
mov
pushf
popf
cs
cmp
fadd
mull
pop
gs
cmp
adc
ret
ret
ljmp
mov
negb
aaa
sahf
dec
sbb
push
pop
jmp
or
ret
inc
mov
gs
fisubl
hlt
xbegin
mov
lahf
jl
lea
and
into
sub
cmp
sub
xchg
test
dec
jo
sbb
enter
push
push
adc
mov
pop
stos
inc
and
xor
dec
aad
pop
xchg
push
pop
xor
sbb
fwait
jb
or
cmp
jnp
sbbl
pop
rep
ss
inc
loop
dec
mov
int3
pop
js
push
cmpsb
xchg
fadds
in
fsts
sarb
jae
dec
xor
imul
icebp
lret
addr16
sbb
aam
jl
int
and
mov
or
rcrl
test
je
mov
stc
push
adc
lods
xor
hlt
mov
js
sbb
xor
sti
rclb
adc
ret
mov
shlb
jp
out
cmp
test
adc
xor
lret
into
cmc
xchg
cmpsl
pop
adc
popf
sub
out
jnp
xchg
sarl
mov
into
cs
xor
push
add
and
lods
pop
push
insb
insb
pop
push
add
fnstenv
hlt
xchg
mov
mov
xchg
aaa
mov
enter
dec
adcb
in
xor
cmp
scas
sub
or
xor
nop
cmpsb
rolb
add
arpl
stos
arpl
jle
in
fistpll
mov
mov
out
popf
sub
in
xor
xchg
push
fcmove
mov
pusha
jl
lods
mov
out
sarl
xchg
jle
orb
fwait
dec
fmull
cwtl
add
dec
pop
sti
mov
sbb
orl
cmp
add
push
mov
into
jno
xor
out
icebp
fistps
fdivs
into
xor
into
fimull
mov
sub
inc
jmp
pcmpgtw
mov
adc
fistpll
and
test
repnz
and
std
and
int3
mov
xor
ds
push
pop
xchg
mov
pop
pop
lea
pop
pop
sub
scas
mov
jl
mov
jno
mov
sti
mov
pushw
mov
aas
enter
je
inc
mov
ss
fs
test
test
roll
sbb
fistps
inc
cltd
fldenv
mov
and
push
push
fldenv
les
das
jbe
lods
sub
mov
mov
sub
inc
loop
gs
shll
loope
lds
cwtl
or
adc
into
jbe
add
pop
adc
pop
jle
popf
pop
xchg
fwait
jmp
sub
jne
lcall
shll
in
js
enter
cld
adc
mov
mov
jnp
and
dec
push
mov
inc
dec
std
test
jne
jle
pusha
push
mov
cmp
lock
aas
pop
push
lret
out
inc
pop
jmp
iret
es
xchg
cmpsb
sbb
enter
out
loopne
push
aaa
loopne
sub
in
push
pop
outsl
dec
aad
jecxz
jecxz
jecxz
js
int3
add
add
inc
int
mov
ret
scas
mov
xlat
loop
outsl
sahf
mov
or
xor
jl
mov
mov
jne
scas
mov
sahf
lods
push
jp
add
pop
xor
jb
insl
mov
xor
enter
imul
push
rolb
pop
loopne
in
arpl
test
push
fists
inc
push
or
adc
dec
out
call
mov
lret
notl
cltd
xor
mov
mov
xchg
pushf
push
pop
sti
insl
push
push
sti
das
ret
xor
cmp
mov
push
cmp
push
mov
scas
dec
xchg
stos
es
pushf
inc
mov
out
test
mov
addr16
rcrl
clc
mov
xor
push
lea
push
push
loopne
jle
fdivrl
lock
xchg
push
rorl
fdivrs
jl
mov
or
dec
lock
lds
les
fwait
add
dec
shll
rol
adc
es
out
lea
xchg
xorl
xchg
cwtl
inc
in
je
add
push
test
sub
mov
pop
testb
cmpsl
push
into
outsb
cs
lea
lret
push
and
in
mov
cld
loope
push
nop
in
iret
inc
mov
shrb
push
jmp
call
test
pop
mov
call
xchg
and
fstp
xor
jl
pop
fldcw
adc
xchg
jb
inc
sbb
icebp
cmp
and
adc
push
xlat
repnz
dec
dec
xlat
lock
jnp
mov
inc
push
dec
xchg
jg
into
xchg
das
sbb
icebp
inc
mov
es
dec
xchg
not
lcall
push
or
dec
xchg
data16
leave
sbb
ror
jne,pt
cmp
inc
cltd
sub
rorb
loop
loopne
roll
mov
adc
cmpsb
inc
inc
push
push
lods
scas
or
jg
arpl
pusha
mov
sub
mov
aam
cmp
jno
dec
iret
insl
cmpl
cld
data16
int
xor
xchg
xor
mov
fstl
icebp
sub
addr16
js
gs
pusha
int3
cmp
and
mov
les
jmp
dec
add
dec
pop
mov
stos
mov
and
add
ds
andb
add
xor
push
push
in
enter
adc
out
sbb
xor
dec
pop
push
imul
mov
add
out
xchg
push
std
in
jge
push
cmpsb
fmull
int3
pop
aam
cli
sub
lea
pop
xor
test
lret
js
pop
rcl
sub
cmp
lret
mov
insl
fnsave
in
cmp
xchg
std
iret
xchg
dec
push
scas
jmp
add
call
mov
add
or
and
push
adc
inc
pop
int3
inc
jmp
call
inc
jb
shll
adc
nop
ja
adc
loopne
pusha
or
push
stos
out
lds
dec
nop
sub
inc
pop
jns
cmp
out
mov
inc
adc
aam
popf
push
popa
cmp
notl
das
cmp
adcb
sbb
lret
js
dec
idiv
xlat
aaa
out
adc
insb
adc
pop
xor
mov
adc
dec
xchg
leave
dec
les
push
fidivrl
xor
dec
push
pop
cmp
pop
lret
jo
mov
mov
inc
xor
filds
pop
jp
xchg
mov
mov
in
inc
rcr
or
cs
into
jmp
push
lea
push
adc
xchg
stos
mov
xchg
jo
push
rclb
inc
inc
out
dec
into
dec
mov
sbbb
inc
rolb
jp
lea
shl
hlt
mov
enter
push
or
jg
icebp
les
pushf
pop
loop
xor
cmpsb
xlat
dec
out
aaa
add
mov
push
adc
or
rol
clc
daa
inc
pop
add
xor
jno
jae
cmp
adc
pushf
jp
lcall
pop
mov
int3
cmp
and
rcr
push
sbb
inc
xor
fcmovbe
pop
mov
loopne
pop
hlt
shlb
sbb
mov
push
testb
orl
mov
sar
or
inc
fs
stos
cwtl
mov
pop
push
icebp
std
arpl
pop
outsb
out
in
std
mov
mov
inc
inc
ss
inc
or
inc
test
in
mov
cmpsl
dec
and
mov
sbb
icebp
inc
or
or
mov
jne
pop
lods
xor
data16
sbb
add
push
mov
jne
stos
xchg
cmpsl
xchg
jl
pusha
lahf
lods
dec
add
or
jns
shlb
sahf
movsl
fsubrs
xor
pop
sub
addr16
push
xor
xchg
jp
test
xor
lods
iret
sbb
jge
mov
fbstp
dec
cs
xor
fiadds
push
repz
jge
sbb
rolb
sbb
adc
adc
and
cmpsb
subl
cmpsl
rclb
outsl
jae
cmpsl
push
jns
out
lret
inc
pop
enter
dec
dec
int3
jbe
sub
cli
adc
push
jmp
gs
out
xchg
call
aas
movsl
pop
and
not
std
cmpsl
in
or
dec
add
stc
mov
jg
cmp
test
dec
cld
outsl
mov
ja
std
lods
add
ffreep
lcall
jge
test
insb
mov
std
xor
add
push
divl
cmc
sbb
mov
pop
int3
sub
dec
pop
in
mov
inc
scas
mov
dec
xchg
insl
jae
jne
daa
das
and
jmp
stos
lods
daa
rcrb
inc
aaa
mov
cltd
cmp
and
jb
jmp
jp
pop
subl
or
shlb
andl
inc
and
cmp
lahf
mov
cmp
mov
inc
sub
std
pop
xor
inc
sarl
lods
dec
xor
or
jecxz
add
mov
cld
mov
ficomps
mov
push
incl
rorb
dec
loopne
test
adc
mov
rcr
sbb
mov
les
call
sub
clc
xor
sub
xchg
xchg
pop
push
and
ret
into
jp
add
sbb
addb
cmp
popa
push
xor
mov
arpl
dec
insb
ret
and
in
pop
test
jge
adc
clc
or
dec
test
icebp
jno
nop
ss
pop
and
in
fmulp
and
jno
test
rcrl
stc
mov
inc
add
imul
js
test
sub
subl
jns
aas
lock
push
xor
cmp
pop
xchg
or
cmp
push
push
dec
int3
je
xchg
push
inc
xorb
inc
mov
dec
pop
in
and
cli
xchg
pop
loope
arpl
sbb
xor
lods
lret
fistl
pusha
movsl
push
mov
lock
das
fdivr
mov
icebp
repnz
xchg
cwtl
aaa
sbb
into
add
sarb
adc
mov
ljmp
xchg
sahf
imul
and
xor
test
mov
mov
lods
xlat
cmpb
pop
xorl
or
das
aam
mov
pop
pop
mov
out
orl
lea
inc
test
pop
cwtl
iret
xchg
stos
ljmp
int
mov
ljmp
cmp
dec
lds
or
orb
lcall
int3
fwait
and
and
cmp
pop
adc
repz
jg
pop
fxch
xor
negl
pop
std
rclb
pop
rcrl
push
xlat
mov
and
insl
sub
mov
incl
sub
mov
lods
ret
cltd
push
lock
cmpsb
pop
or
add
cmp
sbb
enter
or
addr16
movsl
mov
nop
add
jecxz
stos
popf
mov
add
inc
nop
testb
in
xor
adc
in
nop
push
fdivs
or
lock
leave
and
nop
scas
xor
xor
cmp
adc
cmpl
shll
sbb
sti
push
sub
or
cmpsb
or
enter
aad
mov
out
and
outsl
cmc
out
mov
and
and
ljmp
or
scas
adc
loope
mov
inc
dec
push
cltd
add
fnstsw
nop
cmp
rorl
xchg
imul
mov
push
xor
lcall
lret
adc
decb
cmpsl
dec
push
decb
inc
lock
pop
fnstsw
xchg
jo
xchg
movsb
decb
fidivl
bound
xor
sbb
popf
fwait
push
jge
mov
sbb
jne
push
dec
push
dec
jno
mov
movsb
mov
mov
push
sarb
jge
and
mov
ret
ds
inc
or
push
push
jmp
mov
inc
push
mov
lret
hlt
jg
test
mov
scas
cmp
dec
mov
or
mov
ret
pusha
sub
aaa
imul
movsl
jecxz
ret
aaa
pop
roll
sti
lds
mov
pop
mov
jecxz
cmpsl
push
movsb
lcall
imulb
mov
push
movl
imul
inc
ret
inc
dec
cld
aam
test
cmpsb
mov
mov
cmp
in
cmp
inc
push
vcvtsi2ssl
mov
sub
lds
and
inc
push
into
xor
adc
mov
inc
inc
mov
stc
mov
lahf
xor
int3
cmp
xchg
sbb
push
stos
test
or
push
je
mov
cmp
scas
xchg
cmp
out
xchg
nop
adc
shrl
cwtl
lods
and
sbb
push
ljmp
iret
insb
jb
popa
outsl
mov
movsl
int3
xor
fnstcw
push
xchg
mov
ss
xor
iret
bound
jb
cmp
jp
popa
xchg
inc
mov
xor
xchg
leave
std
ljmp
fists
fwait
add
repnz
mov
mov
ljmp
pop
clc
out
cmp
jb
mov
and
add
outsl
cli
stos
sub
fildl
xchg
pop
xor
mov
xchg
out
jnp
xor
jmp
jg
xor
cmp
roll
cmp
loopne
fldt
mov
inc
adc
ret
pop
push
mov
xlat
jl
int
dec
push
xchg
and
xlat
inc
mov
jl
repnz
xchg
mov
pop
push
mov
cmp
aam
dec
out
mov
jle
mov
adc
movsl
lods
xchg
mov
inc
rorb
pop
cmpsb
cmp
jb
loop
and
dec
rcrb
pop
outsb
jmp
mov
mov
pop
jae
dec
adc
pop
adc
in
cli
mov
int
stos
fwait
mov
sbb
mov
add
jo
das
lods
mov
repz
and
divl
lock
or
mov
xchg
imul
clc
sbb
jns
push
iret
insb
xchg
jno
mov
test
jne
sub
jne
dec
test
lods
aam
mov
arpl
xchg
loop
xor
push
test
pusha
dec
add
mov
in
mov
lret
movsb
lock
fmuls
out
movsl
leave
adc
imul
test
sbb
stc
pop
cmpl
xor
ja
call
stc
xchg
dec
mov
jg
repz
test
outsb
dec
lds
aam
fsubl
aas
pusha
addr16
decl
movsl
jno
movsl
es
fdivp
stos
xchg
or
orb
divb
scas
lret
js
sbb
jge
mov
lcall
and
subb
addl
ljmp
mov
shr
push
or
sbb
js
sbb
mov
and
mov
xor
jae
fs
in
icebp
in
into
pop
cmp
ja
jns
mov
sub
xchg
cmpsb
xchg
and
add
mov
and
mov
popa
push
push
in
loop
dec
xor
sub
orl
popf
xor
lds
and
cli
jb
add
out
pushf
xchg
add
and
imul
movsl
inc
out
imul
je
ds
dec
mov
outsb
fistl
xchg
in
mov
lods
add
in
inc
fildl
pavgw
jge
ficomps
adc
pop
test
ss
and
push
xchg
lret
mov
pushf
iret
addr16
out
push
mov
lods
andl
mov
lret
inc
lret
and
out
cvttps2pi
ret
rcr
stc
sub
jae
xor
and
mov
xor
mov
jg
mov
lock
test
pusha
in
xlat
cmp
and
xchg
dec
jo
packssdw
ss
xchg
sub
roll
ss
addr16
dec
mov
loop
je
sbb
cmp
leave
rcr
pop
push
cmp
call
subb
lods
pop
lret
pop
cmpsl
mov
sahf
push
sub
filds
mov
sub
rorb
xchg
dec
test
sarl
pop
adc
pop
push
lods
mov
lret
roll
jl
dec
cmpb
test
ja
inc
imul
jo
outsb
lcall
test
pushf
pop
pop
ret
vaddsubps
pop
sub
xor
sub
and
sbb
jecxz
mov
or
ss
sub
inc
cmp
ljmp
jb
daa
fsubs
pushf
xchg
mov
dec
jnp
sti
mov
enter
insl
lahf
jle
mov
je
jne
xor
cltd
shlb
call
jl
dec
fisubrs
xor
sub
cmp
mov
sbb
push
or
mov
cwtl
insb
cmp
mov
dec
das
icebp
addr16
or
fwait
mov
repnz
jns
ret
test
mov
jae
out
ss
mov
roll
int
cmpsl
scas
mov
lea
cli
loopne
xor
outsb
fldl
jge
aas
adc
cmp
pop
jo
cmpsl
adc
and
sbb
rolb
fs
daa
je
enter
rolb
int
sar
adc
outsb
sahf
xorb
pop
add
aad
movsl
mov
xchg
cld
cmp
pop
fs
sarb
xchg
data16
push
lret
shll
outsb
xchg
xor
ret
pop
xorb
shrb
pop
popf
out
dec
add
mov
cmp
out
pop
pop
sbb
out
push
or
sub
push
mov
push
mov
jnp
xchg
dec
movswl
and
mov
mov
icebp
xchg
leave
adc
and
into
add
mov
cmc
or
push
add
loopne
inc
sbb
out
std
add
cwtl
fcoms
cmp
jp
sti
rcr
dec
sar
mov
mov
ja
loope
mov
cmp
cltd
mov
push
cltd
jecxz
loop
andb
in
and
pop
mov
mov
addb
push
stos
ja
ljmp
mov
das
push
jnp
stos
and
pop
int
int
mov
mov
test
cmc
inc
fisttpll
jno
roll
aad
cmp
icebp
jno
push
or
cld
add
outsl
dec
frstor
dec
sar
movsl
add
test
scas
imul
stc
hlt
lahf
jl
movsl
jb
imul
dec
clc
sub
bswap
aaa
filds
sbb
outsb
mov
mov
dec
cmp
imul
dec
add
lea
out
ret
pop
popa
or
jl
ds
rorl
rol
mov
jb
shll
dec
sbb
sub
add
std
dec
in
add
aad
sbb
jae
mov
das
jle
lret
sbb
push
sbb
out
cmp
xor
fnsave
je
stos
mov
jb
push
movsl
mov
xor
push
sub
add
mov
out
or
jno
push
mov
lods
inc
add
mov
add
and
sbb
cmc
adc
sbb
mov
adc
dec
jmp
add
jge
je
es
jmp
ss
icebp
cmpsl
sahf
js
repz
addr16
ja
sti
js
cmp
xchg
push
mov
ljmp
xor
sub
fwait
or
out
leave
notl
dec
dec
into
adc
jo
les
and
clc
adc
xchg
lds
cmpb
outsl
inc
pop
jo
sub
js
inc
nop
push
inc
fdivrs
mov
and
add
xchg
mov
and
fadd
int
adcl
enter
cmp
push
sbb
into
jg
iret
repnz
cmp
cmc
jo
jmp
add
jg
popf
mov
dec
push
cmc
fcmovu
mov
mov
lcall
push
leave
dec
sbb
loop
adc
cmp
pop
mov
add
repz
aam
jl
ficoml
lods
adc
shlb
les
idivl
mov
test
or
xor
adc
outsb
lret
jne
or
cmp
popa
mov
cmc
push
xchg
int3
mov
inc
pop
pop
stc
or
popw
imul
mov
div
shr
mul
ret
push
in
add
cmpsl
js
jmp
xor
mov
inc
xchg
or
dec
aam
xchg
cmc
and
popf
xorl
enter
cltd
sbb
aad
mov
sbb
sub
xchg
xchg
sub
hlt
cmpsl
or
popf
pop
out
lds
and
adc
jns
movsb
xor
cmc
aad
aam
lock
push
cmc
lahf
shlb
mov
cltd
outsl
jp
jp
aam
jne
iret
shrb
lret
add
shrl
pop
cmp
lock
cmp
mov
dec
inc
cmc
aas
and
stos
jb
fmull
jno
repnz
lods
push
mov
repnz
cmp
movsb
lea
imul
daa
push
xchg
jmp
xchg
push
aaa
pop
into
lds
cmp
or
dec
fstpt
mov
push
fnstsw
jb
popf
aaa
aaa
jbe
xchg
test
ficoml
cmp
jge
loopne
clc
sub
lds
out
mov
and
sti
fsubs
pop
push
pop
insb
cmpsb
int3
imul
fwait
xchg
xchg
mov
data16
push
dec
or
shr
pop
or
test
pop
cmp
or
out
cld
jge
leave
pop
sub
cmpsl
hlt
cmp
ss
ja
inc
test
pop
pop
xchg
mov
cmp
or
insl
jns
pop
xor
lret
cmpb
inc
lea
xchg
pushf
pushf
or
mov
arpl
jo
xchg
jl
sarb
adc
jbe
dec
pop
inc
push
dec
loope
or
loopne
sbb
sahf
jp
out
push
or
push
mov
pop
out
and
pop
iret
inc
out
movsb
imul
push
xchg
mov
inc
imul
out
or
jbe
mov
mov
push
arpl
scas
dec
mov
xchg
std
adc
nop
stos
dec
ljmp
fldcw
lods
sarb
daa
mov
aas
jb
push
add
fs
xchg
lea
testl
jecxz
fidivs
and
test
dec
mov
cmpb
push
scas
inc
aad
and
stc
jl
mov
mov
xchg
loope
daa
inc
andb
or
pop
push
dec
fs
dec
mov
mov
loopne
xlat
mov
pop
push
jl
in
fisttpl
mov
mov
mov
cltd
out
pop
pop
aas
pop
bound
sub
out
pop
stos
adc
mov
mov
cmpsl
popa
xchg
and
mov
xor
inc
insl
jae
or
mov
inc
aad
icebp
leave
adc
pop
push
xchg
push
js
mov
mov
lods
roll
cmp
mov
jmp
outsb
ljmp
push
scas
push
int
xchg
insb
loop
outsb
cmp
sbb
adc
fdivrl
cmpsb
popl
cmp
push
xor
jmp
fs
jb
inc
push
cwtl
data16
jle
inc
mov
in
jae
mov
jnp
push
out
mov
xor
push
inc
daa
loopne
mov
cmpxchg
xlat
pop
and
sbb
push
mov
push
and
inc
scas
cmc
jle
adc
sti
addr16
and
pop
mov
jmp
pop
insb
xor
fnstenv
or
mov
imul
dec
and
pop
hlt
mov
lods
jmp
test
and
dec
or
aaa
push
movsl
movsb
xchg
jns
popa
push
js
pushf
mov
outsl
les
gs
lret
add
xchg
mov
negb
adc
jg
test
add
adcl
xchg
push
xchg
cmp
das
ljmp
into
add
roll
xchg
jge
gs
pop
add
imul
enter
gs
aas
inc
and
add
sbb
push
roll
shlb
mov
push
or
enter
xchg
popa
jp
cmpsb
fs
cmpb
subl
movsl
inc
mov
pop
or
call
xchg
test
lods
stos
lahf
cmc
mov
lods
adc
mov
jnp
ss
adc
mov
and
movl
int
fs
pop
shlb
lcall
adc
test
test
and
sbb
xchg
add
bound
xlat
pop
fsubrs
pop
pop
insb
xchg
rcll
mov
sub
adc
cmp
fs
inc
sahf
mov
lods
and
insl
std
fidivrs
or
sub
repnz
xor
mov
pop
fstpt
or
pop
in
mov
and
cmp
add
push
outsl
sub
loop
lret
add
add
adc
jmp
mov
pop
pushf
inc
xchg
xchg
scas
test
add
pop
das
out
mov
inc
jb
push
cld
lcall
stos
or
jbe
jnp
mov
test
lcall
les
hlt
sbb
movsl
mov
sbb
mov
fnstcw
fnstenv
daa
inc
nop
cmpsb
scas
pop
xor
jno
jecxz
add
cli
fdivrs
sub
sti
xor
out
xchg
push
ret
cltd
jne
sub
sbbl
jmp
lahf
push
aam
aas
movsl
cvttps2pi
mov
das
inc
push
hlt
and
sub
pop
xchg
movsb
out
mov
lcall
push
out
out
stc
gs
fsubr
scas
dec
mov
ja
clc
out
mov
int3
sbb
ret
cmp
insl
shlb
shlb
mov
push
or
sub
xor
in
adc
xchg
inc
jmp
xchg
mov
daa
test
mov
ret
adc
and
fmuls
pushf
push
sti
rorl
adc
test
lret
cltd
sub
ljmp
lea
hlt
stc
mov
mov
dec
cmc
shl
xor
es
sub
ret
sub
dec
das
jge
xor
lds
pop
mov
add
sub
mov
cli
mov
mov
clc
mov
iret
cmp
lds
pusha
or
dec
repnz
cmp
lret
jns
jno
or
test
int
push
test
inc
mov
icebp
cmc
addr16
jl
jno
ljmp
sbb
mov
or
sub
ljmp
fldt
int
pop
lcall
sbb
loopne
test
leave
mov
or
pop
push
pushf
movsl
sub
rorb
pushf
jle
pop
add
push
popf
cmp
add
ljmp
aaa
jne
lcall
js
sbb
clc
pop
imul
adcl
adc
mov
push
icebp
push
inc
add
xchg
and
xchg
das
adc
int3
mov
pop
enter
subb
jne
aaa
push
stos
test
shrl
in
push
or
sbb
mov
addr16
dec
out
sub
jb
adc
jmp
dec
mov
or
sti
and
mov
push
jb
sbb
pop
ljmp
inc
jno
test
mov
cmc
enter
push
jnp
sub
cltd
jl
out
imul
fst
jl
std
pop
movsl
mov
out
fildll
push
xchg
lret
enter
inc
rcll
insb
inc
negb
pop
jmp
cmc
and
fbstp
rorb
and
mov
test
popf
int3
cmpsl
ret
sbb
mov
push
sub
pushf
subl
xchg
add
lods
xor
xor
adc
insl
popa
loop
shll
imul
and
inc
lea
ljmp
push
cmc
rclb
mov
or
push
inc
push
jle
mov
aam
mov
lea
scas
mov
jb
daa
jns
pop
push
push
repz
cmp
stc
sub
adc
sbb
call
or
sbb
sub
fcomp
or
jno
dec
push
adc
jg
lret
out
inc
cmp
lret
scas
fdivl
lods
jge
mov
lret
adcb
or
and
test
stos
xor
xchg
repnz
push
cmpxchg
jl
adc
dec
sub
into
testb
cli
sbb
pushf
mov
out
mov
ficompl
out
int3
imul
test
loope
xchg
mov
inc
addr16
sbb
dec
cwtl
dec
pushf
jae
insl
pusha
inc
fadd
cld
inc
lret
repz
nop
repnz
xchg
loope
fcomip
sbb
xor
xor
inc
gs
int3
insl
sub
xchg
push
mov
stc
repz
xchg
jno
push
pop
in
jb
sbb
mov
cmp
sbb
xchg
push
data16
xor
jle
adc
loop
js
aad
cli
dec
popa
hlt
test
das
in
imul
mov
arpl
adc
inc
and
and
inc
push
aam
mov
stc
bnd
jnp
cltd
mov
or
jno
mov
inc
fmul
push
loope
push
aad
and
dec
jl
test
pop
add
sti
cmp
sbb
shll
add
sti
mov
mov
cmp
lahf
sbb
test
popf
push
push
jno
jmp
std
push
ret
push
mov
push
jae
mov
pop
neg
cmp
and
or
js
bound
test
jle
pushf
xlat
xchg
mov
pop
pop
ss
push
jae
add
mov
je
push
aam
lea
andb
cmp
cmp
push
es
gs
ss
and
int3
test
jbe
sub
adc
adc
lods
std
out
inc
ja
scas
jne
mov
sub
dec
or
mov
push
jge
inc
push
les
add
jb
cmpsb
cltd
aad
sbb
xlat
sahf
push
mov
xor
jne
or
cmovne
testb
jae
rcll
ss
movb
iret
imul
jle
jp
ret
dec
mov
pop
jmp
mov
aaa
ret
test
sarb
pop
aad
jecxz
sti
mov
jecxz
test
mov
mov
ds
addb
pop
xor
lods
ret
jbe
nop
fcoml
sahf
fsubr
incl
filds
outsb
jns
or
jmp
cmpsl
push
popf
inc
scas
lock
xchg
push
pop
jecxz
adc
jle
cs
enter
es
jne
sub
inc
sti
xor
arpl
sbb
sbb
mov
inc
fnstcw
lret
pop
sahf
pop
adc
xchg
cmp
push
mov
outsl
jno
stc
imul
pop
es
xor
int
mov
pop
hlt
faddp
cmp
imulb
jp
mov
xor
xor
or
repz
sub
or
cltd
mov
shlb
stos
xchg
jbe
adc
in
fstps
inc
adc
push
xor
jl
imul
xor
xchg
hlt
into
iret
iret
fstps
mov
fildll
mov
dec
imul
mov
mov
jecxz
add
pop
and
xor
loop
pop
repnz
cmc
loopne
mov
xor
daa
xor
clc
pop
cmp
repz
or
cmp
or
push
mov
push
sbb
lcall
fsubrs
push
xor
lret
sub
sbb
shrb
mov
call
mov
je
mov
fsubl
mov
sahf
inc
icebp
out
lea
imul
pop
mov
jg
add
or
fidivrl
mov
pop
test
mov
mov
out
xor
add
test
cmp
add
iret
mov
movl
sbb
scas
push
mov
sub
cmp
mov
sbb
ret
movsl
aas
add
sbb
add
lds
adc
mov
push
sbb
je
js
xor
sub
add
adc
cmpsl
mov
sub
lret
push
je
mov
rcll
orl
pop
sub
mov
jns
ljmp
dec
insl
sub
sbb
push
jbe
loop
fdivl
mov
xchg
inc
fmull
pop
ja
shll
and
add
fimuls
jecxz
cmp
cmpsl
push
orl
push
sti
scas
clc
push
cmp
in
lret
cmp
rol
cmp
mov
pop
mov
or
stc
in
push
cmp
stos
jnp
mov
aam
into
ja
mov
rorb
mov
mov
in
and
push
test
lock
adc
sub
jle
pushf
pop
and
outsl
mov
add
out
fidivrs
mov
fst
adc
xor
push
or
add
insb
js
mov
and
and
outsl
or
mov
mov
and
sbb
or
lock
push
imul
mov
mov
ja
loop
cltd
jl
and
lret
mov
das
mov
pushf
push
punpckhbw
and
mov
push
arpl
and
ljmp
roll
mov
testl
call
mov
push
and
addr16
push
lods
sub
ret
push
icebp
fdivrs
outsl
mov
mov
call
mov
stc
pop
push
sar
sbb
fiadds
loopne
pop
lds
addr16
insl
in
aam
sbb
xlat
es
add
fs
add
mov
jns
aas
push
sbb
jecxz
out
lea
lret
repnz
out
mov
sub
adc
pop
shll
idivl
and
push
add
jge
in
fsubr
lcall
mov
jecxz
ret
aas
inc
pop
clc
mov
sbb
mov
mulps
push
loope
cmp
repz
into
adc
sbb
pop
data16
fisttpl
pushf
aaa
outsl
das
or
jno
pop
mov
pop
fnstsw
add
and
lods
add
shl
pop
stos
mov
repz
jp
mov
mov
aad
jnp
adc
push
push
push
xor
add
xchg
out
mov
test
xor
sub
addl
jg
repnz
cmp
xor
xor
into
lret
adc
js
loope
pop
orb
fwait
xchg
lret
popa
aam
shll
repnz
mov
repz
push
repnz
jl
in
dec
push
stc
lods
adc
xor
mov
sbb
cmp
jns
sub
lret
or
cmp
jb
push
sub
andl
xor
out
add
or
mov
dec
inc
ficompl
xchg
xchg
mov
push
fwait
xor
mov
lds
js
or
xchg
out
mov
loop
lock
gs
mov
push
or
xor
cld
je
in
mov
subl
fadd
stos
lea
and
pop
cmpsl
jl
cmp
jmp
daa
xchg
out
pop
popf
lds
test
lcall
mov
mov
mov
popf
cmp
jno
jns
roll
add
fwait
pop
aas
xor
xor
push
sahf
imul
fldenv
mov
push
xchg
in
jle
dec
sbb
dec
cmpl
out
ds
js
cltd
xor
lahf
sub
push
and
cmpsb
dec
and
mov
mov
adc
sub
out
clc
call
inc
loopne
xor
ds
jae
in
outsl
mov
fwait
data16
cld
stos
or
jmp
cwtl
mov
lcall
push
mov
mov
push
jl
sbb
xchg
or
mov
cwtl
lret
fdivr
sti
out
push
pop
cmp
test
jno
and
xchg
outsb
mov
pop
outsb
and
cld
lods
xor
aam
cs
and
xchg
push
nop
nop
adc
inc
pop
push
xchg
jg
and
mov
daa
loopne
sub
inc
int3
adc
mov
cmpsl
daa
jecxz
insl
iret
fdivs
inc
fildll
mov
jge
ret
call
jb
ds
inc
cmp
sbb
dec
sub
into
aad
sub
lahf
cltd
jo
or
jae
nop
stc
in
ret
push
loope
xchg
and
lahf
jle
stos
rolb
je
call
add
jne
popa
cmp
adc
jmp
clc
push
notb
das
xchg
rcll
lea
dec
sbb
out
test
mov
rcll
xchg
jmp
pop
out
jns
bound
or
jle
inc
cld
repnz
into
adc
inc
fidivrs
loope
cmpb
dec
imul
gs
popf
lods
mov
push
add
xor
test
adc
xchg
fbstp
lcall
cmpsl
mov
cmp
jle
pop
rclb
lods
and
imul
push
inc
mov
ljmp
cmp
pop
jnp
mov
aaa
lahf
addr16
jmp
inc
cmp
movsb
repz
or
aas
inc
xchg
es
sub
lods
push
gs
int3
xchg
adc
inc
das
adc
jmp
mov
xchg
xchg
repz
jle
sbb
xor
cmp
popf
int3
call
aaa
rcrl
cmp
pop
sub
mov
xchg
mov
sub
repz
mov
mov
in
xor
push
or
sahf
lds
mov
inc
sbb
lahf
or
test
mov
mov
xlat
mov
push
push
mov
leave
call
fstpt
in
sbb
mov
arpl
popa
adc
xchg
int3
or
inc
int
push
add
cmp
fisubs
sub
push
mov
adc
add
fidivrl
cld
ret
and
and
mov
stc
dec
in
test
scas
fldt
fsub
or
add
or
mov
cltd
mov
inc
addl
inc
popa
xor
mov
int3
jmp
xor
sbb
scas
rcll
mov
ficomps
jb
popa
sti
sub
mov
fmull
lahf
outsl
dec
shlb
inc
jp
mov
loopne
mov
inc
push
mov
fwait
loopne
ja
enter
pop
or
inc
sbb
test
mov
ljmp
xor
jns
cld
inc
xor
popa
mov
xor
pushf
sub
push
or
aaa
outsl
lods
xor
sbb
out
push
push
mov
loop
jne
sub
lret
adc
testl
push
xchg
push
or
les
movsl
xlat
add
sbb
push
mov
fs
ror
bound
les
pop
orl
enter
out
mov
sbb
mov
cmpsl
lods
iret
xor
mov
leave
adc
xor
aad
iret
andl
mov
or
iret
pop
jo
jae
sub
push
test
mov
and
arpl
push
xor
and
scas
lods
pusha
test
aas
jecxz
in
arpl
es
inc
es
add
mov
pop
mov
out
push
daa
lods
jnp
insl
notb
lret
clc
in
addb
push
xchg
out
pandn
es
dec
xchg
repz
fisubrs
insb
hlt
pop
jle
faddl
testl
dec
subb
and
mov
mov
inc
lcall
push
pop
out
mov
repz
xchg
push
and
push
in
out
sbb
mov
fcomps
xor
inc
outsl
int
jle
xor
imul
and
jae
js
jb
jbe
mov
mov
sub
or
xor
mov
in
sahf
mov
lret
scas
mov
xor
les
pop
mov
dec
cs
je
imul
sub
out
xchg
sbb
sti
xchg
mov
mov
inc
jl
adc
and
cmp
adc
and
or
outsl
enter
and
mov
sub
adc
fadd
dec
out
repz
ret
cmp
subb
jmp
adc
sub
pop
xor
dec
add
mov
shr
jb
jg
or
push
pop
add
xlat
sbb
push
movsl
insl
insb
subl
jb
adc
or
daa
fildll
lahf
jmp
leave
and
pop
scas
sahf
enter
cltd
movsl
fisttpll
sbb
mov
sbb
jno
addl
stc
jmp
push
cltd
ljmp
mov
mov
dec
lret
sub
stos
icebp
and
mov
sub
inc
jge
xchg
pop
lret
or
cltd
in
in
jae
jae
mov
push
push
jl
cmp
or
in
mov
xor
sub
clc
jl
call
dec
lcall
ret
cs
mov
bnd
outsb
pop
and
adc
mov
stos
in
out
cmp
ja
out
sbb
sbb
cltd
jo
mov
stos
add
rclb
and
push
shlb
ret
in
sbb
test
sbb
jnp
fiadds
dec
pop
sahf
leave
cmc
test
pop
cs
jmp
pop
imul
pop
dec
andl
aaa
mov
cmp
into
push
add
mov
lea
jge
cmpsb
mov
loopne
xor
jmp
mov
shll
subl
pop
sti
push
adc
insl
sbb
dec
andl
imul
test
out
ja
in
dec
adc
jnp
jp
push
add
cld
aas
stc
sbb
xchg
daa
stos
jge
xlat
imul
mov
sbb
gs
push
icebp
jp
outsl
stc
test
mov
lret
push
test
pop
test
cmc
pushf
dec
stc
cmp
loop
pop
sbb
and
xlat
pop
cmp
in
ljmp
mov
test
cli
or
or
aaa
cmp
or
fbld
cmpsl
test
clc
mov
mov
scas
je
and
dec
movl
mov
and
shl
fisttpl
aam
arpl
out
pop
inc
fisttpll
pop
rcll
leave
inc
ror
out
cs
in
xor
mov
inc
push
leave
iret
xor
into
pop
fcoms
jns
sarl
leave
out
cld
out
imul
push
mov
lret
test
sub
dec
xchg
lock
push
pop
cmp
ja
jle
xor
mov
jns
ret
mov
xchg
add
cmp
add
stos
hlt
loopne
add
not
and
ljmp
fiadds
sub
ljmp
outsl
push
cmp
cld
in
cmpb
cmp
push
outsl
nop
xchg
scas
lds
mov
add
divb
ss
addr16
js
add
and
int3
and
push
or
sbb
lock
xchg
jnp
or
cmp
movsb
jo
cs
lahf
adc
push
xor
add
int3
pushf
push
mov
and
lods
lret
les
inc
pop
inc
insl
leave
in
cmp
or
cmp
incb
sbb
add
daa
mov
mov
push
sub
out
stos
lock
xchg
mov
push
movsl
adc
int3
shll
fldt
shlb
scas
addr16
pop
jb
dec
testb
arpl
mov
cmp
ljmp
cmp
lods
sbb
dec
lods
add
aad
mov
and
test
add
add
out
dec
mov
mov
stc
dec
jge
arpl
lock
xor
fdivl
inc
outsb
out
sub
xchg
xor
daa
pop
sarb
and
and
xchg
dec
roll
daa
mov
imul
mov
inc
outsl
xor
cmc
pop
push
imul
adc
mov
push
adc
ss
push
cld
or
adcb
and
dec
mov
dec
jle
ret
jp
push
fistpl
cmp
sub
inc
push
sbb
cld
shlb
jmp
mov
cld
jle
sarl
mov
mov
push
je
push
movsl
xchg
lcall
sub
lret
xchg
pop
adc
test
xchg
dec
push
movsl
testl
cmp
inc
inc
jns
pop
mov
outsl
aaa
shr
das
test
sub
mov
push
ret
in
push
push
sub
xor
imul
xchg
shlb
scas
sub
dec
add
pop
movsb
sub
mov
or
lock
in
or
inc
and
es
test
pop
add
sbbb
dec
pop
in
and
xchg
jae
fcompl
xchg
mov
mov
inc
pop
stos
mov
push
pushf
lea
mov
pop
add
jb
jmp
push
xor
andl
outsl
popl
ja
jecxz
push
jno
mov
inc
or
daa
popf
sbb
jno
xor
lock
pop
imul
les
mov
mov
mul
mov
popf
daa
daa
and
repnz
add
xor
mov
and
mov
test
adc
add
dec
or
pop
aad
into
mov
shll
ja
mov
lretw
mov
pop
in
out
dec
pop
test
sbb
mov
or
xchg
dec
call
push
inc
and
xor
dec
stc
pop
in
pop
int3
cmp
mov
jle
sti
jl
push
dec
add
cltd
rcll
fwait
adc
cmp
cld
test
lods
sub
dec
inc
sti
dec
ret
scas
popf
push
pop
lock
shll
movsl
ja
jge
xor
int
cld
cmp
bound
lea
xchg
test
ret
cmp
lock
nop
sub
and
add
push
lock
aad
aad
or
add
xchg
xor
xor
sbbb
iret
add
mov
push
push
bound
mov
movsl
insl
lcall
lods
repnz
popf
je
stos
test
mov
or
fsubrl
lea
adc
je
mov
js
mov
mov
movsl
mov
sti
pop
adc
xor
rcrl
in
pop
stos
pop
sub
je
hlt
or
mov
rcrb
sub
sbb
mov
cmp
pop
or
jg
xchg
pop
es
dec
test
dec
mov
arpl
mov
clc
sarb
cltd
mov
jae
not
sbb
fucomi
fcmovne
xchg
pop
hlt
jmp
test
popf
xlat
mov
shr
cld
xor
rclb
mov
sahf
int
in
mov
and
push
sbb
dec
jp
or
push
call
call
es
cmp
neg
xchg
arpl
mov
add
jne
mov
stc
push
dec
pushf
push
in
xchg
jb
rcr
inc
push
xor
rcrb
xchg
ljmp
mov
push
add
sub
pop
mov
dec
add
xlat
jmp
lods
ja
pushl
jge
pop
or
pop
cli
dec
insl
enter
push
mov
mov
and
lahf
mov
cmp
iret
repnz
fcoms
ret
or
pop
popa
sub
pop
sub
push
xor
dec
out
je
out
leave
sti
ret
hlt
sbb
and
movhps
je
inc
shll
jmp
out
cmpsb
push
nop
adc
jbe
jp
cs
lahf
mov
movsb
xor
lods
lcall
mov
addr16
cmpsl
shlb
lahf
mov
xor
mov
adc
test
or
adc
icebp
inc
test
addl
lcall
lahf
pop
dec
out
call
clc
inc
test
lds
mov
loop
dec
jle
je
mov
sub
inc
int3
rol
call
and
daa
fidivrs
mov
pop
jae
or
js
rcrl
xchg
mov
fists
sub
ficoml
mov
dec
inc
and
xchg
sarl
pop
fxch
lock
lcall
mov
pop
and
adc
lcall
mov
xchg
or
jne
push
adc
mov
add
xor
fs
test
pop
cmpsl
fbld
xchg
cld
adc
arpl
dec
mov
int
lcall
and
pop
inc
and
sub
mov
addr16
mov
aaa
mull
xor
push
aam
dec
xorl
lahf
mov
addb
add
in
popw
mov
sbb
or
pushf
xlat
jmp
adc
les
and
xchg
mov
call
adc
jg
test
dec
cmp
lret
dec
mov
je
scas
lods
mov
cmpsl
hlt
mov
bound
add
insl
mov
incb
push
dec
xchg
xchg
dec
imul
inc
inc
out
fsts
sbb
push
test
jnp
std
push
in
test
jl
xlat
mov
pop
and
pop
in
push
incl
dec
add
out
frstor
xor
mov
dec
or
std
jbe
lock
std
sub
shll
cmp
or
adc
xchg
mov
pusha
clc
inc
xor
and
imul
lds
or
in
push
lcall
faddp
clc
jo
aas
push
lock
mov
sbb
les
and
int3
subl
xor
cwtl
fs
mov
sub
shlb
mov
mov
xchg
add
mov
lods
adc
mov
jns
iret
mov
xor
into
aam
lods
xlat
mov
lock
int3
xor
dec
dec
sbb
cld
lds
push
cmp
fiadds
fdivrs
test
xchg
jl
maxps
dec
dec
negl
sbb
outsl
rorb
inc
mov
pop
addr16
dec
mov
xchg
test
xor
inc
inc
dec
rcl
xchg
push
jno
es
cwtl
sbb
pushf
push
lcall
out
mov
pusha
cld
jnp
sub
adc
add
incb
inc
insl
mov
imul
scas
arpl
lret
les
popf
imul
inc
mov
cwtl
shll
insb
stc
push
sbb
cwtl
lea
push
fcomip
mov
xchg
or
outsl
mov
jbe
lds
rorb
scas
pushf
mov
pushf
and
xchg
pop
jne
push
jne
xchg
inc
stc
std
outsb
lds
and
inc
addr16
mov
pushw
cmc
enter
pop
sub
adcl
repz
lea
sub
imulb
ret
adc
mov
iret
rcrl
mov
cli
ret
jb
or
mov
fisubrl
lcall
clc
pop
inc
mov
ljmp
dec
jge
sub
add
inc
sahf
mov
inc
mov
adc
and
xchg
push
enter
xchg
clc
fs
rol
aas
jle
icebp
sbb
and
sbb
fwait
loopne
cmp
ljmp
inc
mov
repz
stc
mov
dec
inc
xchg
cmp
mov
mov
push
inc
daa
ljmp
and
mov
insl
lret
mov
push
lret
sub
out
je
pop
mov
cmp
imul
les
hlt
fwait
xchg
pushf
inc
pop
mov
out
out
adc
inc
xchg
pop
fcmovnbe
ret
mov
fstpl
cmp
aam
test
mov
xor
inc
sbb
lea
inc
and
int
pop
or
gs
inc
testb
in
out
mov
xchg
call
jne
sbb
mov
dec
jp
xor
shrl
push
pop
rcll
repnz
cmpb
push
sbb
adc
imul
stos
cmp
movsl
inc
notl
mov
inc
movsl
jb
in
std
jecxz
test
pop
cmp
push
sub
jecxz
sahf
push
clc
repz
or
in
mov
out
push
jbe,pt
pop
repnz
sbb
fs
lahf
add
into
lahf
push
pop
sbb
mov
mov
dec
xchg
mov
pusha
inc
pop
xchg
cmp
push
pop
xchg
sbb
ds
jmp
int
in
idivb
subb
pop
aaa
and
repnz
es
add
shll
and
add
hlt
push
jne
insb
leave
test
mov
sub
mov
sbb
cmp
lods
nop
and
int
fcompl
stc
xor
loope
idivb
out
add
cmpsb
mov
imul
fisttpl
jo
fsubp
test
dec
divb
adc
dec
repnz
fnsave
mov
ret
pop
pop
lret
jle
arpl
sbb
push
into
nop
outsl
mov
cmpsb
sbb
inc
dec
int3
outsb
roll
xchg
or
mov
jnp
sbbb
sbb
ljmp
and
pop
les
fistl
dec
loopne
and
lcall
sysret
cli
xorl
inc
xor
insl
xchg
cltd
sbb
popa
ja
pop
add
push
xchg
loopne
std
jecxz
mov
push
mov
mov
mov
sub
jmp
in
movsl
dec
int
adc
in
imul
lea
loop
and
or
or
mov
inc
divb
dec
lret
ds
mov
imulb
dec
mov
adc
movsl
popa
sbb
sbb
push
aas
dec
movsl
cmp
mov
xchg
push
mov
test
ljmp
sbb
adc
mov
insb
fldl
mov
or
xor
mov
jmp
jb
dec
xorl
js
aas
xorl
push
xchg
decl
loopne
ficomps
mov
ret
cmp
clc
jae
shl
pusha
icebp
sbb
or
repz
jl
out
outsl
jg
ds
sub
imul
sbb
xchg
mov
bound
xor
sub
repz
jb
test
mov
out
push
pusha
cmp
push
in
cmpsl
lahf
mov
in
inc
adc
ret
mov
lds
popf
push
jns
pop
enter
gs
jmp
mov
jg
cmpsb
inc
and
pusha
out
sbb
inc
jp
xchg
je
cmc
ds
and
mull
mov
js
mov
cmp
in
adcb
xchg
push
xor
mov
inc
ja
mov
flds
jg
push
shlb
inc
test
xchg
mov
mov
mov
pop
aas
sub
test
sarb
fcoml
nop
cmpsl
clc
fldt
stos
mov
jecxz
mov
js
jl
or
popf
out
push
push
xchg
outsl
dec
jg
mov
xor
mov
adc
fnstcw
inc
jns
xchg
pop
jecxz
xchg
jnp
in
iret
enter
push
out
cmp
aas
aaa
adc
push
pushf
cli
lret
outsl
pop
inc
ret
pop
insb
mov
jge
mulb
mov
pop
sar
and
xor
mov
jg
adcb
adcl
aad
sbb
int3
or
scas
cmp
and
or
inc
push
sbb
rcrl
add
inc
adc
ds
fnstcw
inc
pop
mov
inc
arpl
pop
fdivp
push
mov
aam
mov
mov
jne
mov
dec
loop
bound
cld
jecxz
mov
and
or
stos
sti
gs
pop
and
ret
lods
mov
jbe
icebp
mov
jb
dec
sarb
cld
cmpsl
mov
cld
jmp
mov
cmp
and
sub
popf
test
sahf
adc
push
xchg
mov
cmpsb
sub
cmp
daa
and
dec
lock
lea
cmp
or
mov
xchg
dec
inc
and
mov
mov
femms
xor
push
xor
mov
inc
mov
loop
xchg
push
call
stos
popa
int
mov
enter
in
sahf
fadds
adc
je
push
int
mov
insb
movsb
cmp
push
sbb
push
imul
jo
aaa
scas
inc
testl
stos
mov
cmp
xchg
push
loope
fimull
adc
out
hlt
and
orb
jne
or
mov
enter
test
mov
in
aad
mov
js
jmp
fwait
mov
aad
outsl
lods
das
inc
inc
ljmp
fnstsw
pop
js
out
dec
sahf
add
xchg
or
pop
cmp
ds
mov
add
mov
clc
les
in
lds
xor
std
imul
or
push
inc
jns
mov
pushf
data16
fs
dec
jbe
mov
popf
pusha
movsl
mov
dec
rol
out
stc
out
cmpsb
xorl
inc
add
pop
cmc
jae
hlt
movsl
imul
lahf
in
clc
mov
push
cmp
hlt
mov
gs
repz
lods
imul
xchg
push
fwait
xchg
repnz
scas
es
clc
psubq
into
pop
pop
cmp
ficoms
daa
into
mov
out
jns
dec
mov
inc
out
mov
sub
ret
popf
inc
fdivl
je
xorl
lcall
add
jmp
push
adc
popf
push
fists
mov
xor
ret
add
sbb
inc
jae
push
adc
jb
cmp
cmp
dec
cmp
shrb
and
mov
sub
xchg
sbb
das
mov
imul
inc
loop
and
loope
mov
out
idivl
loope
xchg
es
push
and
repnz
repz
sub
push
push
push
cs
shrb
insb
push
cmpb
jge
xor
adc
jle
ret
pop
inc
call
mov
adc
pop
cmp
popl
cmpsl
inc
xchg
aas
adc
cwtl
mov
into
pop
lea
jnp
shll
xor
stos
fildll
dec
lcall
lods
and
push
push
jle
out
push
xor
test
in
inc
sbb
add
ja
out
fwait
gs
xchg
addr16
sbb
scas
mov
sub
add
xlat
adc
mov
andl
cld
pop
out
mov
sahf
jge
scas
pop
cltd
push
out
mov
cli
rolb
movsl
pop
test
test
sub
lret
nop
imul
in
dec
scas
xchg
daa
aad
pushf
and
inc
xchg
xlat
movsb
insb
in
jno
ja
cmpsb
mov
leave
pop
in
dec
xchg
inc
outsb
fwait
adc
imul
inc
bound
ficomps
cmpsl
mov
dec
add
push
ret
fwait
xor
je
sbb
dec
lret
movsl
lea
sbb
mov
jmp
repz
je
lret
iret
inc
mov
sub
popf
add
fiadds
ds
ds
cmp
fldl
mov
jmp
in
ret
xchg
jb
push
pop
xchg
xchg
xchg
push
rcrb
mov
jg
hlt
in
xlat
ficompl
and
fldenv
sub
pushf
popf
scas
jg
ss
clc
cmp
adc
cmpsl
push
push
jl
mov
mov
mov
and
outsl
mov
gs
push
imul
mov
outsb
fwait
xor
xchg
pop
mov
cmp
cmp
in
add
mov
andl
aad
shll
mov
xchg
cwtl
out
fbstp
or
lock
imul
fadds
jo
test
and
les
push
outsb
xor
pop
jl
or
lods
ljmp
xchg
bound
call
dec
enter
fs
icebp
cs
lcall
pop
out
in
lock
sbbb
popl
dec
inc
jmp
ret
push
lret
test
cs
cmp
add
sbb
or
sbb
sbb
xchg
dec
push
adc
dec
int
out
cld
ljmp
movsb
adcl
insl
movsb
adc
jae
cmpsl
jno
cmp
stos
pop
imull
jge
arpl
and
fsubp
into
push
or
sbb
sub
idiv
cmp
sahf
xchg
test
stos
xchg
enter
fmulp
icebp
daa
inc
inc
frstor
mov
mov
pop
cmpsl
addr16
divl
outsb
js
out
fidivs
bound
pop
inc
xchg
aad
out
cmp
mov
sub
push
not
adc
outsl
or
out
repz
lods
dec
out
jle
cs
into
xchg
adc
adc
scas
inc
js
inc
xchg
add
mov
iret
sbb
mov
stos
and
gs
xor
push
lods
inc
cmp
push
loop
ja
scas
push
or
icebp
mov
cmp
pusha
aaa
fstpt
loope
or
lea
scas
dec
testl
popa
test
mov
dec
iret
lds
mov
jbe
mov
add
jo
test
sub
push
adc
mov
jb
enter
addr16
imul
popf
or
add
sub
ret
mov
orl
pop
pop
or
sub
dec
mov
pop
add
ljmp
fcoml
sbb
enter
nop
push
add
adc
scas
mov
das
loopne
repz
orb
adc
dec
cld
cmp
dec
repnz
cwtl
sbb
adc
xchg
insl
pop
push
mov
imul
pop
jmp
dec
jbe
sahf
aam
inc
movsl
ja
test
jge
cwtl
mov
fcom
mov
or
in
dec
mov
mov
xchg
pop
shrb
les
push
mov
data16
lock
loope
fwait
shrl
mov
sub
pop
mov
add
push
fdivrp
pop
outsl
hlt
cltd
cmpsl
lret
nop
stc
xchg
repz
daa
mov
lds
xchg
insb
inc
imul
les
test
sbb
sub
lods
pop
add
dec
fisttps
sti
scas
xor
pop
sbb
or
dec
mov
adc
loope
pushf
ljmp
fsubs
inc
lock
sbb
inc
adc
je
out
out
int3
gs
inc
dec
sub
mov
cli
aas
out
add
pop
dec
in
lods
sub
push
pop
movsl
add
std
inc
insb
aas
adc
icebp
ret
mov
inc
or
mov
mov
inc
mov
xor
cmp
xchg
dec
xchg
add
test
cmp
stos
andl
sbb
addr16
or
sti
insb
cmp
stos
mov
or
hlt
inc
jae
rorb
pop
and
js
addr16
and
mov
pop
mov
jae
dec
test
test
sti
ficoml
mov
jge
rorb
cwtl
lock
mov
cmpsl
push
insb
pop
sub
push
rclb
sub
xchg
icebp
cmpsl
popf
gs
sbb
iret
inc
adc
jb
ja
imul
inc
sbb
jp
pusha
data16
aad
dec
call
mov
das
repz
inc
push
sub
lcall
ret
repz
rcr
add
popa
adc
fst
jae
jbe
cwtl
movsb
jge
jb
pop
sub
sub
ret
ja
repnz
fs
inc
xchg
mov
loopne
and
sarb
cli
cwtl
sub
push
dec
cs
mov
sbb
inc
clc
psllq
fcoml
out
mov
cltd
imul
cmpsl
sbb
orb
cmpsb
jmp
das
push
jae
out
sbb
cmp
inc
stos
inc
dec
bound
insl
mov
jne
push
imul
into
out
and
ljmp
outsl
mov
jnp
mov
sbb
clc
mov
imull
lret
push
mov
cmpsb
lea
dec
xchg
xchg
fs
mov
in
pop
pop
rclb
scas
imul
adc
lods
push
das
shlb
clc
fsts
mov
push
jbe
insl
pushf
push
push
xchg
xchg
inc
jp
mov
sbb
scas
nop
inc
dec
cmp
jbe
or
lods
jecxz
add
std
outsl
rolb
mov
add
push
shlb
and
int3
shlb
add
mov
jbe
xor
push
xor
out
add
pop
nop
mov
adc
fistps
stos
and
dec
call
mov
push
cmp
sbb
jbe
inc
movsb
or
js
jns
mov
inc
cmova
test
jp
or
cmp
movl
fmulp
mov
loopne
or
stos
push
shlb
sub
and
pop
pop
dec
andb
insb
out
fistl
mov
add
pop
cmp
add
js
push
mov
lods
addl
mov
and
add
or
clc
xchg
sbb
mov
cmpb
loopne
pop
xor
loope
int3
je
xor
addb
mov
rorl
adc
lcall
mov
fwait
inc
mov
pop
insb
adc
out
adc
lods
mov
out
imul
imul
xchg
sahf
sub
mov
sbb
dec
xchg
jle
fsubs
pop
addr16
push
push
int3
out
mov
lret
ret
adc
mov
pop
out
hlt
hlt
xor
ljmp
sbb
sarl
jp
push
icebp
pop
xor
bound
xlat
daa
add
aas
das
push
push
or
mov
jge
fcoml
ss
pop
mov
add
jns
int
add
lds
adc
data16
div
dec
jo
lahf
and
arpl
mov
popa
dec
mov
loopne
mov
stc
xor
inc
std
xchg
cmp
ds
shrb
popa
push
adc
cmp
add
ror
sahf
fsubrs
mov
and
cli
push
repnz
in
inc
inc
xor
pop
xor
pop
out
je
pop
adc
ljmp
push
loope
xor
push
aad
mov
inc
testb
push
push
mov
adc
sbb
and
mov
cli
cmpsl
or
call
xor
cs
xor
ljmp
inc
js
mov
sbb
jge
scas
in
push
stos
xor
push
ja
mov
push
in
mov
jl
fidivl
subb
xchg
mov
aad
pop
sub
push
lods
lret
sbb
notl
adcb
jno
clc
jnp
aad
rorl
sbb
stc
mov
out
dec
in
sub
inc
das
xlat
pop
mov
push
or
inc
dec
xchg
jecxz
dec
pushf
dec
outsl
and
mov
jmp
pushf
add
aaa
xchg
sarl
dec
ret
push
fsubrl
jbe
insb
cmp
movsb
insb
clc
shrb
pop
fcoms
test
fucom
push
test
sbb
daa
add
xchg
rclb
into
out
aad
push
clc
jb
push
or
clc
or
mov
xchg
xchg
sbb
or
inc
jge
cwtl
repz
scas
pop
mov
mov
gs
ljmp
add
loopne
push
loop
add
insl
or
xchg
pop
repz
repnz
insb
lods
ret
cltd
int
xorl
pop
mov
ficoml
cli
lahf
push
outsb
sti
imul
jns
stos
out
nop
je
int3
loope
xrelease
push
add
xor
sti
sarl
or
jge
inc
mov
mov
add
ljmp
xor
add
cltd
sbb
sbb
xchg
int
data16
mov
cld
push
insb
test
push
mov
pop
mov
out
test
dec
ljmp
inc
ret
in
mov
fs
popa
mov
mov
js
test
dec
ljmp
std
pop
addl
push
std
std
test
dec
test
cmpl
mov
fs
stc
xchg
and
setno
fstl
xlat
xlat
cmp
mov
pop
clc
jnp
test
in
adc
xor
fwait
push
jecxz
das
mov
ffreep
mov
xchg
inc
jne
leave
pop
adc
loopne
in
movsb
and
mov
jl
pop
ret
lcall
pusha
out
testb
xchg
xchg
inc
adc
in
cmpsb
mov
lahf
xor
pop
mov
repz
jle
adc
xor
iret
rcrl
dec
fimuls
cmp
nop
and
lret
aad
fiaddl
push
pop
sbb
jle
push
xor
jnp
cli
cmp
push
lret
cmpsb
in
fiaddl
jecxz
mov
xchg
mov
jae
cmp
jb
dec
aaa
jo
es
pop
cmp
cltd
mov
stc
or
pop
add
and
mov
lods
pop
or
inc
fdivs
jmp
pop
jne
cs
lcall
mov
cmpsl
mov
push
push
fstpt
mov
int3
jle
add
fcmovu
loope
cli
pusha
arpl
cmp
pop
mov
xor
fcos
shll
mov
into
pusha
imul
mov
fidivrl
mov
movsb
mov
adc
jbe
inc
sub
sub
inc
sarb
xchg
shlb
inc
cmp
outsb
inc
adc
movsl
mov
add
pop
sub
data16
mov
cmp
cli
bound
sahf
movsl
testb
push
cmp
data16
es
cmp
and
cmp
lahf
xor
cmc
mov
xor
ret
sub
fistpl
rcr
loop
aas
ja
lds
pop
shrl
pop
enter
js
sahf
mov
push
je
jecxz
push
fstpl
iret
pop
push
cs
sub
add
cmp
push
ret
xchg
push
dec
aas
popf
adc
mov
xor
push
inc
inc
inc
in
adc
or
mov
ret
sbb
cmpb
jg
inc
push
push
push
outsb
sahf
adc
pushf
loopne
incb
cltd
pop
ljmp
js
push
mov
cmpl
repnz
jle
pop
ffree
aad
jecxz
pop
rcl
mov
push
push
cmpsl
stos
ret
adc
inc
jecxz,pn
ljmp
orb
adc
mov
dec
test
jmp
call
ja
repnz
push
and
je
xchg
test
imul
stos
shrl
sbb
sub
push
divps
sahf
pop
mov
test
dec
inc
ss
or
push
jecxz
shl
cmp
scas
movl
pop
aad
lea
rcrb
and
mov
xlat
jmp
repz
push
in
lcall
in
pop
frstor
rcl
jmp
testl
mov
insb
nop
insl
lods
xchg
mov
mov
push
and
sbb
dec
in
enter
and
and
addl
cmp
mov
test
cli
sbb
sti
aaa
das
enter
and
leave
aad
das
mov
in
ja
inc
inc
pushf
inc
pop
xlat
leave
lods
push
and
sti
jl
fs
or
inc
inc
sbb
dec
mov
lahf
adc
nop
cld
ds
in
outsb
scas
pop
cld
lcall
das
sub
clc
roll
nop
int3
xchg
pop
lcall
stos
cmp
movsl
pop
notb
hlt
imul
and
movsb
xor
inc
int3
inc
sbb
dec
dec
lret
mov
and
fisttpl
mov
sahf
shl
daa
dec
xor
inc
sub
test
adc
add
lret
icebp
sub
lock
icebp
lret
enter
xchg
fstps
lahf
std
bound
lods
pop
pushf
das
lds
ret
pop
add
aaa
insb
fsubrs
dec
jle
inc
inc
pop
mov
call
inc
jae
in
push
test
jnp
mov
cs
popa
adc
ret
lcall
push
insl
pop
push
int
jl
ja
mov
shlb
pop
aaa
xchg
mov
testb
add
ss
int
bound
cld
mov
and
pusha
pushf
popa
or
es
jnp
pop
jne
aaa
push
pop
mov
xor
in
dec
and
mov
add
add
enter
pop
je
repnz
div
and
mov
xchg
in
xor
je
sarb
xchg
sub
lcall
enter
xor
mov
lret
hlt
movsl
sbb
sub
cld
fidivs
test
scas
mov
mov
xor
inc
jl
add
lcall
and
add
ret
push
dec
push
adc
and
dec
sub
outsb
sbb
adc
insl
jmp
push
xor
mov
mov
add
pop
pop
dec
pusha
xor
jle
adc
push
pop
sbb
in
scas
sbb
cmpl
jle
lret
mov
sbbl
cmp
jg
inc
dec
jmp
mov
mov
inc
int
jmp
jbe
cmp
pop
cmp
enter
adc
fwait
sbb
or
cmp
fcmovnb
aaa
inc
and
scas
or
inc
fs
add
mov
out
pushl
popf
fsubr
mov
jmp
fbstp
es
sbb
ja
mov
mov
repz
ret
fldenv
fcom
ret
dec
push
lret
fbld
cmpsb
mov
pop
jge
pop
iret
shlb
sar
xlat
cmp
nop
and
ljmp
or
pop
push
xabort
iret
push
dec
push
lret
jmp
stos
ret
outsb
fisttpl
xor
mov
sbb
push
out
mov
ja
ret
stos
pushf
out
pop
jge
ss
and
pop
push
int
inc
lods
pop
test
test
mov
pusha
jl
mov
sbb
and
lahf
xchg
push
shl
cs
insb
xchg
jb
mov
pop
mov
add
jg
jl
into
sbb
lret
xor
pop
sbb
mov
pop
js
add
std
mulb
fidivrl
jno
leave
mov
inc
scas
adc
mov
loopne
sub
jo
out
lahf
pop
rolb
fbstp
jnp
fildl
adc
mov
sub
pushf
rolb
push
cmpsl
inc
pmaddwd
xor
xor
stos
mov
je
outsl
cmp
jge
insl
aam
lock
jg
mov
add
jge
insl
ret
sti
mov
shrl
in
ss
jne
icebp
leave
cmp
test
adc
pop
lret
push
ds
shlb
cmpsb
cmp
cmp
ja
mov
imul
ljmp
push
xor
loope
lods
imul
movsb
xor
xchg
push
out
pop
lret
inc
rcr
ja
mov
mov
dec
pop
jnp
out
sub
int3
ret
push
cld
dec
adc
out
sar
inc
xchg
xlat
xchg
ss
mov
and
dec
pushf
fbld
sti
movsl
sti
imul
out
fs
popf
fistpll
subb
dec
or
lret
mov
imul
popf
jbe
in
into
enter
push
imul
adc
xor
notl
mov
faddl
hlt
xchg
popa
mov
sti
nop
or
sahf
pop
jnp
and
pop
sbb
jge
pop
add
push
enter
aam
pop
iret
ds
ret
cmp
popa
dec
fxch
lret
int3
jmp
std
mov
cmp
test
inc
sahf
js
loopne
test
xchg
dec
mov
push
mov
outsl
adc
jns
mov
scas
mov
jmp
lcall
cmp
outsl
jmp
cmp
fmull
das
mov
mov
push
int3
xchg
mov
sub
lahf
mov
mov
fsubrp
mov
roll
lret
pop
push
and
mov
and
in
dec
insl
fstpt
loopne
int
int
loop
fistpll
xchg
lds
movsl
cltd
cltd
lock
pop
sub
jns
push
inc
leave
in
inc
clc
push
xchg
orb
fists
pop
int3
xor
outsl
ret
mov
mov
jg
inc
aam
sbb
xor
sbb
mov
jno
xor
mov
je
test
arpl
jl
push
sbb
call
cld
and
add
sub
mov
xor
out
movsb
cmp
inc
enter
stc
inc
mov
imul
arpl
fwait
or
push
mov
std
lds
mov
fisttpll
hlt
lock
subl
fbld
mov
push
ds
xor
inc
mov
push
in
fdivs
addr16
add
pop
xor
or
push
cs
call
inc
xchg
out
stos
fisttps
aas
cmp
jle
jl
jo
stos
mov
aaa
sub
dec
jge
les
lahf
mov
mov
mov
pushf
or
cmpsb
fucomi
push
or
push
divb
nop
push
sub
lret
pushf
orb
mov
add
in
ret
or
insb
cmp
sbb
in
pop
mov
jge
and
arpl
les
cmpb
into
pop
adc
xchg
mov
ds
inc
in
cld
pop
cmp
adc
test
punpckhdq
adc
pusha
pushf
jne
xor
jne
test
xchg
cmp
xlat
bound
cld
pop
movsb
mov
js
into
push
inc
push
inc
repz
inc
loope
push
pop
loope
std
dec
inc
mov
jnp
add
in
dec
sub
adc
ret
repz
push
das
movsl
insl
pop
jl
mov
mov
fidivl
mov
and
lret
adc
xchg
mov
inc
push
xchg
or
or
mov
out
bnd
rclb
mov
and
and
lods
cmp
jnp
adc
xchg
mov
movsl
lcall
xchg
add
call
clc
dec
mov
xchg
imul
xchg
aas
inc
ja
mov
fcmovb
or
sti
cmp
ret
or
mov
mov
arpl
insb
stos
test
lods
cmpsb
scas
mov
cmovo
je
lds
jge
stos
outsl
roll
subb
bound
ljmp
das
sar
mov
mov
mov
aad
add
dec
xchg
mov
repnz
add
leave
stos
mov
mov
cmpl
xor
jno
xchg
mov
xor
sub
cmp
jecxz
pushw
push
push
sub
cmp
sti
es
insb
jne
push
push
mov
xchg
icebp
push
mov
or
data16
in
mov
push
xchg
adc
sbb
popa
dec
cltd
out
mov
cmp
cmp
ficomps
std
adc
cmp
int3
xchg
inc
pop
adc
jmp
and
in
add
cmp
ds
xchg
test
int3
fstpt
nop
or
fs
pop
xchg
mov
das
pushf
test
cmpsb
sbb
test
lret
daa
rol
pop
push
sub
xor
cmp
pusha
imul
in
int
out
dec
mov
cmp
xor
outsl
loope
inc
dec
pop
xchg
es
mulb
enter
mov
out
or
lcall
mov
mov
insb
dec
xchg
mov
js
cwtl
or
jmp
ffreep
or
lcall
inc
mov
mov
lods
cmpsb
mov
mov
push
mov
mov
iret
out
ret
aas
testl
int
in
or
xor
orl
cmp
iret
mov
loopne
mov
fs
xor
mov
push
cmpsb
outsb
mov
cmpsl
mov
add
movsb
incb
or
test
movsl
dec
inc
xor
shll
es
dec
inc
in
mov
cmc
adc
adc
js
xchg
sub
inc
test
pusha
and
adc
xor
or
notrack
jle
xchg
cld
stos
inc
push
repnz
in
das
inc
fldenv
iret
mov
decb
pusha
dec
divl
sahf
adc
hlt
ja
std
or
lret
jmp
je
dec
cmp
cmp
sub
inc
nop
sub
insl
add
adc
jo
mov
xchg
adc
lods
fnstcw
sahf
sbb
xchg
aaa
adcl
fisubrl
or
ss
or
cmp
into
sub
jb
jnp
mov
cmp
lcall
inc
clc
pop
mul
sbb
or
cwtl
push
xchg
arpl
pop
ret
xchg
pop
cmpsb
je
imull
jge
dec
sbb
cli
xchg
mov
push
out
mov
cmpl
rcl
decl
mov
jecxz
pop
cmp
popa
sbb
adc
or
xchg
adc
adc
add
adc
out
je
or
nop
jmp
testl
rcr
add
xor
adcb
ret
or
bound
les
sub
loope
xor
mov
mov
pushf
xor
inc
pushf
xchg
clc
xor
ja
int
xchg
mov
push
pop
cmp
aam
pop
push
js
lock
aam
xchg
in
inc
je
das
and
push
ss
adc
xchg
pop
xchg
rcrb
pop
divb
outsl
lea
mov
idivb
mov
es
cli
les
out
push
mov
mov
movsb
daa
pop
sbb
push
btc
adc
cld
or
test
movsb
pop
ljmp
xor
or
popa
xchg
sbb
mov
adc
mov
ret
aas
adc
inc
ja
aam
repnz
cs
shrb
cld
ror
stos
test
jns
mov
hlt
test
or
cmp
fwait
stos
mov
mov
sbb
dec
xchg
fldenv
adc
jl
jns
push
mov
data16
nop
out
cli
mov
jbe
sbb
fdivrl
loop
push
xchg
mov
cwtl
dec
sub
outsl
and
cltd
mov
pushf
cmc
popf
insl
loope
or
mov
lea
xor
idiv
iret
dec
push
addr16
andl
popa
sub
sub
in
in
dec
sbb
ds
into
dec
fisttpll
clc
mov
adc
out
xchg
lcall
mov
jnp
or
xchg
aad
je
or
push
mov
in
jecxz
or
adc
fsubr
rorb
mov
and
sbb
add
ss
or
cmc
addr16
mov
test
xor
aam
push
push
jne
push
pushf
scas
push
lods
loope
and
dec
and
hlt
cld
inc
cmp
jns
push
or
push
fisubl
mov
clc
sub
push
pop
xchg
jbe
jmp
xor
roll
sti
push
lods
sbb
xchg
fs
adc
aaa
ss
frstor
sahf
mov
je
pusha
popa
aaa
daa
mov
or
mov
and
sti
push
mov
push
mov
gs
xchg
xor
hlt
and
mov
jno
ficompl
pop
lea
cli
xor
add
idivb
xor
cmp
xor
adc
cmp
sbb
mov
sbb
and
or
lret
jg
jecxz
les
xchg
into
lahf
addr16
jbe
out
insl
cmp
push
cmp
xor
mov
rcrb
test
cmpsl
adc
fisubs
into
add
push
push
jo
call
push
sbb
sub
cli
jl
outsl
popa
ja
aad
jbe
fcmovnbe
cmp
mov
add
jno
adc
add
and
flds
shld
leave
jge
mov
enter
add
add
outsb
inc
cmpsb
fstps
ljmp
je
dec
adc
in
imul
leave
pop
and
xchg
das
in
inc
cmp
shl
xor
ljmp
ror
lock
xor
out
out
and
scas
call
sub
imul
in
mov
adc
inc
movsl
adc
subl
fsubrl
xor
in
and
fsubrs
sub
pushf
add
mov
mov
mov
inc
adc
jb
sub
xchg
sahf
loope
cmc
jnp
or
hlt
jo
call
rorb
outsb
ret
mov
xorl
inc
push
daa
dec
pop
push
clc
sarl
or
cmpsl
ss
and
lods
sub
mov
jmp
pop
pop
add
sbb
dec
sbb
sahf
mov
popa
sub
andb
aad
mov
pop
xor
and
or
sbb
movsl
sbb
and
ss
cld
lods
xchg
das
bound
pop
add
sbb
adc
test
cld
or
lock
sbb
jl
jb
mov
add
adc
adc
fcom
out
push
xchg
xor
out
mov
faddp
insl
lahf
pop
sub
pop
mov
inc
pop
adc
hlt
jecxz
and
xchg
in
lds
and
push
sbb
addr16
pusha
sbb
mov
pusha
mov
add
idivl
push
push
push
jge
cltd
add
repz
dec
pop
mov
shll
jmp
sbb
jns
fs
xor
sub
fiadds
sub
mov
sub
mov
ret
add
push
bnd
fildll
inc
sub
mov
sbb
imul
sar
in
repz
add
int3
dec
lret
inc
sbb
inc
ret
jmp
data16
clc
fs
ret
cmp
clc
repz
add
jae
call
ret
mov
in
andl
fbstp
push
imul
imul
xchg
int
cs
arpl
sti
xor
ljmp
push
fwait
add
pusha
sbb
ftst
test
or
nop
orl
loope
adc
inc
pop
jp
or
addb
in
xchg
fs
mov
or
fmuls
adc
mov
xorl
add
test
mov
xor
test
ret
cwtl
lcall
add
push
adc
lahf
imul
lcall
std
rcrl
sahf
shlb
mov
pop
arpl
clc
mov
iret
xor
xchg
fs
add
rorb
orb
loope
loopne
push
dec
rcl
gs
and
dec
int3
cmp
stos
push
test
xor
adc
mov
mov
pop
jo
mov
and
out
lcall
add
popa
sbb
lock
inc
idivb
mov
bound
scas
mov
jo
mov
pop
push
inc
lods
test
add
jno
adc
leave
hlt
cwtl
mov
and
loop
pop
sbb
das
and
push
fsubp
rcrb
or
ret
inc
push
pop
dec
add
cmpsb
call
bswap
inc
add
out
dec
xor
sub
sub
mov
shl
push
push
adc
loopne
add
or
pop
cld
cmp
mov
push
inc
loop
jmp
dec
inc
ss
shrb
pop
ret
xchg
test
adc
sahf
sbb
cmp
mov
mov
call
sbb
sahf
inc
stos
imul
fldcw
dec
sbb
xor
test
imulb
mov
clc
in
mov
inc
dec
sahf
aad
push
mov
sarb
lret
push
sbb
inc
mov
mov
jp
out
sbb
sbb
fmull
loopne
cltd
cmp
jg
or
pop
in
out
xchg
es
cli
gs
outsb
adc
aad
std
push
loop
inc
push
nop
cld
cmc
or
aas
dec
mov
push
bnd
or
xor
movsl
push
xor
jmp
xor
mov
push
into
gs
xchg
xchg
arpl
xorb
mov
fisttps
and
xor
push
jb
loop
icebp
leave
mov
xor
or
jp
inc
jl
mov
fwait
jb
notb
mov
push
adc
and
mov
sub
pop
nop
inc
dec
cmpsl
dec
fsubrs
inc
xor
sbb
and
mov
rcrb
adc
pop
cmc
scas
mov
out
cld
in
out
mov
loop
cli
outsb
and
icebp
sbb
popa
jnp
icebp
push
int3
jne
lret
movsb
cli
xor
mov
adc
dec
push
push
xor
mov
xchg
pop
xor
mov
xchg
mov
and
cltd
cmp
pop
pushf
cli
xchg
repnz
mov
adc
xchg
aas
adc
or
mov
jo
std
jl
insb
mov
xor
pop
test
into
imul
out
and
dec
cmp
out
sub
inc
test
outsb
cmpsl
lock
popa
lock
pop
movsb
lods
add
push
in
in
sub
and
xchg
mov
xchg
xchg
dec
jns
pop
cmp
loopne
fwait
xchg
mov
xchg
and
ret
mov
xor
shr
shrl
insl
stc
shl
imul
or
pop
fidivl
mov
adc
js
js
xchg
negl
movsb
and
sti
idivl
add
xor
pop
xor
mov
or
into
jnp
dec
sub
inc
mov
and
adc
sub
add
mov
sbb
mov
mov
lret
fstl
int
pop
adc
movsb
ss
pop
cld
mov
xor
push
push
lds
and
popa
mov
pusha
sub
pop
fxch
or
sub
je
add
cltd
loop
subb
push
aaa
and
cli
imul
adc
adc
push
pop
and
pop
test
pop
mov
pop
fcoms
flds
xchg
push
adc
loope
into
push
leave
pusha
jne
ss
dec
in
leave
ret
mov
adc
test
cmpsb
sub
imul
inc
je
data16
xchg
cltd
lret
data16
push
in
mov
mov
dec
jo
mov
jnp
scas
pop
or
adc
in
das
mov
lock
mov
add
mov
mov
sub
aaa
movsl
push
mov
ret
mov
inc
inc
fwait
sub
arpl
xor
movsb
mov
dec
daa
fdivrs
sub
gs
push
pop
lahf
mov
ljmp
mov
xchg
into
or
adc
scas
mov
pop
push
in
cmp
push
rolb
comiss
call
and
xchg
test
and
jnp
sbb
and
syscall
add
faddl
jae
cmp
in
xchg
sub
mov
xchg
lods
inc
shll
mov
popl
cli
fwait
sbb
mov
sbbb
mov
fisubs
add
scas
jb
ficoms
outsl
stos
xor
xor
test
enter
pop
or
ljmp
mov
inc
cmp
mov
add
je
repz
xor
test
insl
or
sub
je
in
stos
popf
in
punpckhbw
jo
push
xor
xchg
mov
sbb
iret
cli
es
cmp
popf
repnz
sub
mov
repz
sub
into
xor
mov
adc
xchg
xchg
xchg
sub
mov
pop
aaa
xchg
ret
rcrb
push
push
fisubs
aaa
bound
lea
fistpll
mov
inc
fsubrs
int
popl
dec
pop
stos
fs
fildl
pop
mov
nop
cmc
stos
xchg
ja
xchg
mulb
int3
mov
xchg
leave
lret
dec
add
push
aas
push
ja
in
int3
es
mov
sbbb
mov
or
hlt
and
add
adc
xchg
xor
sti
mov
xchg
pop
xor
push
push
mov
test
cmp
pop
fcompl
dec
push
nop
adc
popa
sub
lods
xbegin
jp
pop
adc
popf
lret
cmp
mov
inc
xor
cmp
jecxz
and
push
or
push
mov
adc
fs
out
mov
pushf
fidivs
adc
and
adc
ja
call
dec
scas
or
cmpsb
pop
push
je
sbb
sbb
adc
add
xor
and
push
cmp
mov
mov
rcrb
xor
and
fmul
xor
and
inc
ljmp
inc
mov
adc
xchg
push
mov
dec
js
pop
pop
shll
mov
sarb
and
mov
out
push
outsb
adc
and
fistps
sahf
or
in
sbb
js
pop
ret
inc
mov
imul
inc
adcl
fldenv
jno
cmovge
and
cmp
push
rorl
int
pop
test
in
je
push
cmpsb
ret
cmp
and
aam
mov
addr16
notb
add
pop
and
jnp
aaa
aam
das
shrb
outsb
bound
int3
mov
xor
or
in
ds
ja
mov
lea
dec
icebp
xor
leave
xlat
fwait
lock
mov
fstpl
pop
lahf
rcll
aam
sub
clc
outsb
inc
fadds
mov
inc
inc
ficoms
jmp
pop
push
fldl
mov
and
stc
xor
js
icebp
xor
pop
jbe
jl
or
fs
jnp
dec
mov
addl
and
xchg
dec
jecxz
add
insb
add
or
fistl
mov
loop
sub
repz
xor
lds
loop
or
push
bnd
rolb
pop
adcb
xchg
pusha
mov
inc
fucomip
sti
pop
push
adc
mov
in
push
mov
add
outsl
nop
or
sub
jbe
dec
in
push
std
shlb
mov
test
sbb
out
add
stos
pop
xchg
lret
mov
das
sbb
dec
xchg
fstpl
mov
mov
leave
xor
js
ds
cmp
les
push
push
and
pushf
and
adc
loope
adc
xor
jmp
mov
jae
cs
in
and
in
xchg
push
loopne
imul
sbb
dec
add
xor
scas
ja
sti
xchg
sub
push
xor
add
insb
sbb
mov
adc
lret
test
inc
popa
leave
xchg
dec
sbb
imul
mov
and
mov
pop
mov
lock
ds
stc
imul
push
xchg
repnz
adc
mov
pop
sti
and
sub
jbe
pushf
jb
sbb
pop
dec
add
sbb
cmp
or
aam
cli
icebp
addr16
mov
jbe
add
xor
mov
sbb
rclb
sbb
sahf
add
dec
mov
xor
loope
clc
push
popa
adc
lock
cli
adc
test
cmp
repnz
sbb
xchg
mov
push
fiaddl
lea
mov
mov
cmpsb
push
mov
stc
in
pop
push
and
fildl
jae
fs
shlb
adc
mov
and
adc
imulb
int
rclb
pop
dec
mov
fimuls
xchg
and
ljmp
cltd
xchg
cwtl
push
mov
mulb
repz
rol
cltd
ja
or
push
dec
arpl
in
mov
sub
fdivrl
cmp
mov
sbb
xchg
xlat
out
rcrl
test
add
dec
loop
popa
jbe
scas
dec
data16
xor
mov
lcall
push
sbb
push
insb
sbb
dec
inc
mov
cwtl
add
roll
scas
jo
dec
add
cwtl
adc
pop
push
jae
mov
call
cmpl
sbb
test
and
jbe
jl
loopw
lea
lock
mov
es
sahf
jnp
je
shl
pusha
inc
mov
xchg
outsb
push
aas
push
push
mov
mov
inc
imul
sbbb
jne
xchg
out
push
mov
xchg
dec
sbbb
jge
enter
mov
sbb
mov
jns
in
jp
fdivl
popa
out
push
ret
js
and
adc
insb
dec
out
lds
loop
stos
ret
cmc
cmp
inc
xchg
icebp
dec
cltd
push
loope
iret
xchg
and
push
imul
enter
add
ss
push
push
mov
test
cmp
pusha
divl
mov
lcall
mov
mov
push
cmp
mov
int
sub
getsec
jmp
ja
and
int
push
popf
jge
push
xor
shrb
mov
or
iret
popa
lea
xchg
les
lret
addl
out
add
gs
iret
in
inc
lahf
int3
mov
fstps
add
pop
xchg
adc
shlb
data16
sub
dec
mov
dec
sbb
cld
push
cmp
lods
sub
jae
mov
in
lds
insb
mov
repnz
cli
mov
cmp
dec
test
pop
inc
fucom
push
xchg
lods
xchg
orl
fnsave
cmpl
cli
std
inc
mov
dec
arpl
cli
lea
imul
fwait
sub
mov
or
popa
repz
sub
inc
xchg
movsb
jl
fidivrs
roll
dec
int
and
aad
mov
adc
mov
leave
push
cli
ljmp
popf
push
push
test
outsl
fstps
ret
cmc
aaa
mov
dec
imul
call
loop
push
pop
dec
sarb
ljmp
loope
outsb
mov
loopne
rcrl
mov
adcl
shl
ret
js
and
pop
mov
addr16
sub
pop
aam
sub
inc
std
xor
sti
and
mov
cmp
sub
in
xor
xchg
pop
adc
sub
push
ret
loop
pop
dec
fs
jecxz
adc
gs
mov
xor
popa
xor
aas
leave
mov
scas
es
push
test
call
std
xchg
jmp
in
jl
fdivr
inc
in
inc
cmp
mov
pop
sub
sbbl
or
sbb
mov
inc
aas
pop
ret
aas
push
outsl
xorb
sub
push
or
inc
in
aas
jmp
cld
popf
lahf
movd
in
clc
mov
mov
in
addb
add
out
insb
out
xchg
lods
hlt
dec
arpl
rorl
mov
mov
into
cmpsl
icebp
fnsave
sbb
sub
loope
mov
pop
fiaddl
les
dec
cmc
sbb
dec
ret
popa
ficoml
std
sub
dec
movq
loope
add
out
push
inc
movl
jl
sub
daa
mov
leave
pop
jns
add
jmp
inc
xor
icebp
or
mov
orb
pushf
push
cmpsb
mov
mov
xchg
lret
cmpsb
dec
inc
push
sbb
cmp
mov
fs
movsb
and
inc
xchg
push
aad
mov
adc
inc
jmp
loop
in
cld
imul
ret
ja
stos
lcall
adc
add
fisubrs
sbb
in
mov
iret
in
andl
adc
mov
fs
sub
push
xchg
fildll
into
into
popf
in
xchg
push
icebp
ret
lea
sub
push
dec
addr16
scas
fwait
dec
jge
loop
jg
mov
sub
hlt
inc
pop
popf
pop
mov
pop
dec
mov
and
sub
adc
dec
and
add
mov
int
out
adc
out
push
lret
inc
daa
gs
add
mov
fsubl
inc
inc
lret
int
stc
push
mov
shlb
jmp
js
pop
push
mov
fdivl
or
push
or
adc
lret
ss
cmp
jns
ljmp
or
fistpl
jecxz
sbb
mov
imul
add
jle
inc
das
rcll
daa
mov
stos
pop
push
mov
negl
sbb
lahf
fstpt
enter
sub
mov
lds
mov
pop
or
mov
jmp
cmc
pushl
mov
mov
in
jo
mov
std
leave
les
dec
or
xchg
pop
shr
clc
mov
jns
pop
sub
stos
out
or
push
adc
jl
sbb
jae
mov
in
lds
cmp
into
clc
sahf
aaa
es
and
add
mov
xor
popa
pop
xchg
pop
clc
sbb
xchg
setp
lcall
xor
jp
add
sbb
fiaddl
sbb
and
pop
mov
or
mov
inc
pop
out
xchg
jo
cld
dec
aas
fwait
mov
adc
hlt
and
fs
push
pusha
mov
and
test
lea
out
adc
data16
dec
cmp
daa
pushf
mov
std
jae
pop
mov
nop
mov
lret
mov
movsb
shrb
shrl
addr16
push
enter
or
sbb
xor
clc
mov
in
mov
xchg
lret
cmp
xchg
or
mov
or
out
sub
push
test
pop
cltd
or
push
out
pop
cltd
jnp
adc
out
icebp
leave
fisttpll
jb
pushf
xor
sub
cmp
cltd
inc
or
in
cmp
jae
sbb
sub
or
sub
dec
fimull
popa
push
fsin
daa
aad
jbe
in
push
and
xor
push
jne
cld
inc
mov
add
mov
pop
dec
in
stos
sbb
or
outsl
or
out
aam
fistpl
jns
xor
ljmp
and
mov
sub
jae
filds
xchg
sub
push
push
cwtl
aas
sbb
mov
icebp
in
mov
cmp
lahf
pop
sbb
pcmpeqb
lods
popa
mov
push
jl
stos
pop
or
dec
pusha
mov
daa
push
icebp
fucomip
repz
jo
cld
inc
mov
movsl
push
cwtl
and
js
leave
mov
arpl
sbb
pop
mov
cmp
jg
nop
mov
add
cmc
mov
inc
mov
jl
pop
movsb
cmp
leave
push
pop
fucomp
pusha
sbbl
nop
out
pop
jbe
mov
or
aam
mov
mov
adcb
or
ljmp
int
rcr
outsl
mov
imul
sbb
call
jb
sub
fwait
imul
add
outsl
mov
sbb
sub
test
cmpsb
mov
jb
cmp
cmp
jecxz
xchg
jecxz
push
adc
xchg
sbbb
xor
sbb
in
shlb
cmp
push
lret
add
pop
loopne
movsl
rcl
xor
xor
dec
int
xchg
inc
nop
jl
scas
movsl
and
push
mov
fwait
jg
fidivrs
std
int3
ss
in
je
jp
sbb
nop
out
in
hlt
or
and
or
std
jge
push
jae
mov
pop
stos
pop
sub
ret
jecxz
mov
arpl
mov
mov
adc
jns
cmp
es
fwait
sub
test
mov
mov
cs
mov
mov
xchg
clc
mov
jo
inc
or
loop
push
lds
jecxz
mov
dec
mov
or
jecxz
lea
hlt
jbe
and
test
idivb
loopne,pn
xlat
pop
sub
and
and
lock
jmp
and
push
mov
xor
xor
insb
pushf
push
test
mov
sub
and
sbb
arpl
stos
add
push
jno
or
sarb
mov
std
cmp
mov
fildll
imul
adc
in
out
push
je
mov
inc
xchg
adc
cmc
dec
std
gs
xchg
dec
dec
dec
push
js
xlat
arpl
ret
xchg
daa
fidivrl
pop
mov
rclb
shll
mov
dec
xchg
mov
aam
jne
sbb
adc
mov
jmp
mov
mov
rcll
cwtl
adc
jo
cmova
scas
or
lods
jg
dec
stos
adc
mov
sub
adc
mov
ljmp
aam
fildl
xchg
push
test
daa
out
aas
enter
fisttpll
mov
gs
jns
cmpsl
xchg
popa
arpl
sub
xchg
mov
aad
cmp
in
nop
out
push
mov
adc
mov
arpl
push
xor
int3
call
and
push
jne
stc
negb
arpl
sbb
and
pop
add
sub
mov
lahf
sahf
movsb
jecxz
aam
sahf
call
cmp
shll
ror
or
movb
pop
gs
je
cmp
loopne
mov
lods
cld
in
sub
fs
cmp
mov
mov
ljmp
mulb
push
jp
scas
mov
and
cmp
arpl
inc
push
adc
push
dec
bound
or
or
mov
in
dec
aad
cmp
and
pushl
pop
mov
lds
inc
in
cmp
adc
xorb
push
or
adc
mov
dec
dec
xor
sbb
and
inc
pop
inc
and
mov
push
dec
sbb
pop
imul
jne
xor
mov
xchg
sub
adc
jae
xchg
arpl
enter
xor
mov
movsl
arpl
fstl
cwtl
shl
cmp
pop
and
data16
loopne
sarb
mov
ja
ds
lcall
fisubl
sbb
iret
dec
adc
nop
adc
dec
dec
sub
fsubl
cmp
adc
mov
outsb
insl
int
lret
xchg
loope
jl
jl
and
lock
cmpsb
fs
mov
add
in
sub
ss
sbb
xchg
cltd
pop
idivl
jae
leave
pop
or
test
sahf
and
add
cmp
and
lret
cltd
mov
adc
sbb
out
mov
pushf
test
add
jmp
add
adc
mov
sub
push
xor
cmp
add
movsb
inc
xchg
inc
insl
inc
jbe
out
vpand
imul
xchg
push
add
aas
add
push
subl
jmp
shll
jp
rclb
sahf
out
in
ds
push
das
cs
cmp
scas
jle
dec
xchg
xor
and
push
push
pop
or
fmull
leave
push
mov
mov
jmp
cld
jmp
mov
dec
and
js
js
mov
pop
repz
xor
add
xchg
stos
xor
push
cwtl
xchg
push
loopne
cmp
xchg
icebp
jnp
lds
xchg
pusha
add
andb
data16
inc
jne
test
frstpm(287
test
cmc
add
mov
loopne
repnz
jno
and
sbb
mov
fisttpll
or
repnz
or
aad
es
outsb
pop
push
sub
pop
inc
mov
add
in
xor
xchg
mov
in
xor
cmp
sub
aas
xlat
sbb
add
dec
fmull
bound
mov
popa
xor
int3
jle
sbb
push
mov
mov
sbb
loopne
movsl
jne
jbe
cmp
jbe
cwtl
mov
jl
mov
aam
jno
adcb
cltd
clc
fimull
scas
lretw
jl
fadds
adcb
xor
imull
sbb
or
lods
loope
sub
inc
and
and
cmpsb
mov
add
dec
and
cmc
cmc
mov
pushl
dec
and
mov
fs
lea
sarl
inc
hlt
into
push
sahf
scas
mov
leave
movsb
cmc
scas
jbe
add
mov
xchg
loop
sub
clc
inc
or
fwait
stos
fisttps
and
inc
sbb
insb
jecxz
subl
adc
out
mov
cmp
mov
aad
repz
nop
gs
sahf
xorb
cld
inc
push
mov
out
js
nop
cmp
pushl
fdivp
es
and
pop
ret
jmp
fidivrl
lock
mov
pop
lock
cltd
out
pop
push
mov
test
dec
insl
jnp
xchg
sbb
adc
mov
mov
test
inc
in
mov
jl
sti
cmp
daa
cmp
mov
lret
and
ret
mov
jmp
xor
insb
cmp
adc
sbb
lret
dec
inc
jl
movsl
roll
mov
mov
out
push
jne
push
clc
jne
sbb
pop
sbb
sbb
outsl
inc
jbe
cmp
jmp
pop
int3
iret
or
pushf
dec
xor
inc
fcomps
cs
data16
mov
sahf
movsb
sub
dec
or
mov
lods
lea
call
hlt
and
shll
fistps
shll
pop
pop
sbb
clc
mov
ficompl
sbb
sub
mov
sbb
iret
subb
dec
js
push
jmp
out
daa
sbb
mov
hlt
pop
cmp
or
jg
pop
dec
ret
movsl
pop
pusha
ds
popf
inc
das
scas
pop
add
inc
adc
incl
mov
pusha
mov
lret
enter
mov
rcrl
and
mov
xor
icebp
es
adc
push
aam
daa
sbb
nop
xor
mov
imul
es
scas
push
sub
pusha
mov
mov
jl
add
das
jbe
aam
das
push
jae
pop
sub
mov
cmp
dec
add
sub
popa
and
je
or
lahf
jb
cmc
xchg
inc
es
xchg
test
adc
lods
sub
mov
aas
in
std
xor
clc
push
jne
sti
or
pop
or
inc
into
ja
leave
xchg
rcl
dec
xchg
movsl
cmc
inc
leave
cs
pop
push
or
add
icebp
adc
nop
iret
test
shll
movsb
inc
sbb
adc
mov
inc
cmp
mov
push
std
add
lds
pop
mov
scas
pop
das
aas
pop
push
sub
iret
mul
mov
das
into
mov
dec
mov
das
mov
dec
mov
jl
int3
mov
stos
adc
xchg
xor
sarl
cmp
dec
cmp
rcl
dec
lahf
cmpsb
pop
std
mov
push
inc
test
jge
arpl
xor
dec
mov
cwtl
adc
inc
cwtl
mov
ret
or
addr16
stos
pop
adc
je
clc
arpl
mov
fnstcw
loopne
push
adc
mov
adc
lds
pop
stc
sub
lds
jb
enter
lret
jo
or
movsl
cmp
sub
movsl
xchg
stos
push
xlat
pushf
xchg
dec
lds
lds
cmc
inc
xchg
cmp
ja
gs
dec
jp
shll
insb
or
imul
mov
or
popf
js
cmp
mov
sbb
add
aaa
test
mov
daa
mov
mov
call
jle
imul
mull
jmp
test
test
cld
ds
or
sbb
adc
jmp
pop
movsb
jo
and
loope
ss
cltd
push
push
cs
shl
jbe
mov
sbb
jmp
mov
push
cmc
inc
add
jl
out
push
fistpll
cmpb
push
lea
js
in
cli
out
mov
cmp
add
push
js
repnz
mov
fcmovnu
movsl
jns
aas
adc
mov
ds
in
pop
lahf
decb
push
scas
add
aam
out
jns
popl
mov
add
sbb
mov
shll
sbb
in
out
mov
lea
addl
mov
ret
inc
idiv
jg
dec
shll
cmp
fs
dec
mov
aam
lods
cltd
aaa
in
mov
push
add
sub
and
aad
cli
lds
and
and
jns
mov
test
out
mov
sti
popf
mov
scas
lahf
or
testl
xor
mov
jp
in
xor
mov
aad
inc
adc
test
jmp
xor
cwtl
mov
add
popf
mov
subb
aam
ret
mov
jno
mov
xchg
dec
into
add
pop
cmc
lock
mov
and
iret
into
orb
add
mov
mov
mov
iret
and
mov
mov
pushf
push
cltd
jmp
mov
add
cli
xor
les
std
cmp
ljmp
mov
pushf
cld
call
sahf
and
mov
or
mov
outsl
insb
jne
jno
inc
xchg
ret
and
sbb
mov
idivb
add
sar
add
test
sbb
mov
inc
mov
aas
pushf
pop
push
repz
scas
out
add
mov
jecxz
imul
adc
mov
scas
movsb
mov
adc
push
adc
push
pop
cmp
dec
jmp
jno
cmp
rolb
inc
and
das
add
mov
adc
movsb
mov
xor
ds
sub
test
orl
mov
ljmp
daa
xchg
inc
add
xor
sub
icebp
and
xchg
nop
out
rcll
orb
aam
ja
and
xor
mov
repnz
std
in
pop
and
xchg
ficoms
mov
mov
jae
inc
dec
dec
mov
push
jge
nop
test
ljmp
push
das
bound
fildl
and
inc
fcoml
shl
cli
lret
movsl
test
push
xor
inc
dec
mov
or
dec
lretw
scas
outsl
daa
das
hlt
out
or
in
cmp
pop
aas
pop
pop
mov
mov
mov
jmp
sbb
lea
inc
lea
inc
mov
or
aaa
inc
in
lock
outsl
xchg
and
inc
sbb
pop
je
add
and
std
adc
jmp
out
mov
test
int
fsts
sbb
or
repnz
imul
cmp
mov
ljmp
inc
filds
popa
adc
loopne
loopne
mov
sub
dec
addr16
test
hlt
outsb
es
clc
lret
scas
adc
xchg
cmp
js
jmp
add
sub
mov
lods
adc
and
arpl
jg
cmp
stos
cmp
aaa
or
movl
cmp
mov
sub
or
fbstp
sbb
pop
dec
push
push
mov
lret
daa
fsubs
push
xchg
cmpsl
stos
rcrl
mov
fbstp
in
jo
jp
mov
cmpb
add
cmpsb
push
inc
adc
cmp
aam
dec
mov
out
pop
jmp
cmp
inc
mov
fsubrs
xchg
cmp
adc
mov
ds
sarl
jns
jge
mov
lods
cmp
push
dec
xchg
jg
rorb
loope
cmc
cmpsb
sti
jbe
movsb
dec
repz
and
cmp
mov
ret
xchg
orb
das
out
ja
push
loop
lods
mov
push
cmpsl
popf
push
insb
into
sbb
sbbb
ljmp
adc
cmc
mov
sbb
cmp
imul
pop
inc
mov
js
fsubs
adc
mov
jmp
cmp
fisttpl
push
push
lods
push
lret
sub
loopne
and
cmp
outsl
cltd
add
repnz
into
adc
fidivrs
sbb
das
push
nop
and
sub
or
adc
mov
sarb
jge
cmc
mov
xlat
lahf
pop
inc
jne
dec
mov
ljmp
testl
pushf
stos
xor
inc
sbb
nop
pxor
push
cmp
mov
mov
movsl
xor
or
xchg
mov
adc
pushf
data16
je
ja
pushf
mov
pop
jnp
popa
je
cmp
dec
sub
subl
adc
adc
and
clc
test
gs
scas
idivl
es
sub
repnz
push
adc
mov
mov
test
push
jl
push
out
inc
stos
pop
js
adc
xchg
iret
int
jbe
jmp
sub
mov
ret
or
sbb
sahf
mov
scas
adc
ljmp
inc
decl
mov
scas
dec
mov
stos
icebp
and
imul
cmp
mov
leave
mov
sbb
stos
in
adc
inc
es
cmp
jno
jmp
sub
adc
test
les
subb
mov
push
adc
iret
ret
xchg
and
outsl
das
or
jo
mov
and
push
out
jmp
add
and
mov
pop
fcoms
jae
or
scas
cmc
push
cs
fwait
andl
addr16
sbb
xorl
fdivrs
dec
imul
ret
outsb
dec
or
sahf
mov
xchg
cld
rol
lret
gs
jo
iret
adc
shr
add
dec
mov
mov
xchg
psubd
shrl
repnz
pop
daa
xor
jns
leave
add
adc
or
mov
movsl
mov
jne
jge
push
arpl
sub
sub
fisubl
push
jp
sub
rclb
add
cmp
movsb
mov
shl
roll
jae
pop
pop
xchg
shlb
sub
insl
mov
aas
iret
hlt
imul
adc
jno
push
stc
popa
jecxz
xor
push
pop
loop
push
inc
js
ss
scas
rorb
push
pop
fiadds
jmp
xchg
lahf
adc
xor
out
xor
scas
outsb
dec
shl
cmp
pop
cmp
ja
stos
mov
inc
pop
sbbl
jno
gs
sahf
push
fstpt
bts
in
sahf
sbb
add
push
push
ja
and
xchg
mov
stos
xor
cmpsb
or
adc
gs
outsl
ds
pop
push
insl
or
loopne
pop
xchg
out
or
stos
hlt
test
cmp
push
xchg
cwtl
loopne
cmp
std
sbb
mov
mov
jg
outsl
sbbb
mov
xlat
or
pop
mov
xchg
imul
cld
or
mov
jecxz
insl
les
lods
xchg
sbb
mov
xlat
es
dec
jl
insl
popf
adc
idivb
rclb
jns
subl
bound
cmpsl
pop
pop
out
adc
or
push
and
movhps
loopne
and
xchg
push
fidivrs
jae
cli
mov
les
fs
sub
mov
aad
mov
out
jnp
sbbb
jae
gs
and
sbb
mov
sbb
rcrb
arpl
fsts
push
inc
fidivl
fucom
xchg
sub
push
mov
push
pop
push
push
inc
adc
sbb
inc
clc
jg
int
push
cmp
outsl
add
lret
aaa
out
jnp
jg
adc
sbb
or
sbb
movsl
ljmp
pop
mov
sbb
repz
and
fildl
ja
in
icebp
push
lcall
jmp
sbb
mov
outsb
pop
inc
or
iret
iret
fwait
push
push
popa
enter
ud2
notl
sub
cmp
and
scas
dec
push
sti
out
into
out
dec
mov
bound
iret
out
push
arpl
push
jmp
js
icebp
xchg
xchg
xchg
outsl
pushf
jmp
stos
jmp
mov
sbb
pop
jne
mov
mov
add
aam
scas
and
sub
and
inc
and
scas
mov
mov
pop
mov
inc
xor
in
test
adc
inc
scas
je
sub
dec
jae
mov
and
jnp
cmpl
mov
test
cmp
sbb
pop
mov
push
pop
in
scas
jnp
lods
xlat
dec
mov
call
xchg
pop
lods
adc
mov
rep
in
xchg
jp
mov
adc
ficomps
xor
pop
stos
fwait
sbb
lds
out
inc
adc
lds
gs
lret
fists
loopne
mov
pop
stos
inc
mov
lcall
and
roll
mov
insb
dec
mov
mov
sub
scas
inc
push
xor
push
xlat
insb
inc
shl
iret
testl
lcall
popf
repz
dec
inc
push
jp
xor
add
sub
pop
xor
xor
ja
das
rcrb
das
cmpsb
sub
lea
jno
int
imul
mov
popa
jp
or
and
ret
push
and
sbb
std
mov
lahf
test
fst
xor
icebp
cmpsl
outsl
inc
adc
sbb
fldt
jge
cmp
sub
scas
in
fildll
or
out
pop
out
int
adc
shrl
mov
bound
xor
fstpt
cmpsl
inc
mov
and
push
adc
les
loopne
lahf
test
sbb
inc
cs
leave
icebp
xor
jecxz
sub
xchg
out
pop
lods
int
cmp
in
xchg
and
jo
pusha
pop
rcll
int
das
dec
add
nop
in
push
cmpsb
lock
xor
int
mov
pop
ds
ja,pt
sbb
rdpmc
fisubrs
or
sub
inc
and
mov
mov
loope
cmpsb
push
out
das
inc
pop
in
mov
inc
into
movsl
mov
scas
inc
jne
jmp
in
inc
mov
adc
inc
push
push
rclb
mov
cmp
xor
xchg
mov
mov
mov
sub
into
add
cmpl
orb
dec
mov
insl
sub
cs
gs
inc
es
out
loope
mov
cmp
clc
jne
vorps
lods
sub
pop
add
lock
pop
lcall
mov
outsl
mov
notl
aam
mov
xlat
push
push
loope
push
cwtl
nop
mov
push
and
push
jp
aaa
jg
ret
lods
sub
mov
push
jmp
mov
and
inc
jb
push
mov
in
mov
push
stos
mov
sub
outsb
scas
imull
fisubl
push
xlat
sub
aaa
mov
ret
mov
fnstcw
stos
xchg
dec
mov
cmpsl
sbb
xchg
xchg
pop
pop
fidivrl
inc
pop
bnd
mov
sub
adc
mov
std
cmp
and
andl
js
push
add
test
xor
clc
loope
sbb
xchg
into
dec
cmc
xchg
sbb
cli
dec
cwtl
stc
jecxz
pop
mov
mov
jnp
mov
adc
xor
loope
pushf
xchg
dec
fiaddl
arpl
fsts
out
js
xchg
stos
or
adc
cwtl
icebp
dec
iret
int
ret
jb
and
lcall
sahf
cmp
add
sbb
arpl
rcr
out
lods
mov
cld
movsl
and
movsb
movsb
call
xor
int3
pop
mov
add
push
xchg
ljmp
aad
lds
aaa
cmp
mov
fs
and
xor
inc
fldl
sbb
dec
aam
ds
push
xchg
mov
ret
cld
add
lcall
jnp
mov
jp
push
push
pushf
aad
fscale
jg
lods
scas
cwtl
xor
pop
sahf
xchg
addr16
cltd
push
cmpsb
add
fs
xchg
dec
fdivr
push
sbb
fldcw
shrb
pop
lods
pop
outsb
sbb
xchg
xchg
and
pop
xchg
jae
and
outsl
fsubrl
mov
test
pminsw
jecxz
es
aas
loop
loop
adc
test
outsb
int
aad
sbb
xlat
jae
mov
sub
jae
cmp
adc
jnp
and
mov
je
out
jbe
inc
ja
pop
addr16
and
shl
xor
xor
fldl
mov
push
imul
rorb
fxch
jno
int
mov
push
cmp
popf
and
mov
push
pop
inc
loope
loope
loope
push
enter
mov
outsb
sbb
andb
push
xor
scas
jnp
xchg
cmp
xchg
mov
lret
das
ljmp
pop
jge
inc
add
mov
xchg
int
pop
lods
pop
insl
lock
dec
mov
inc
inc
arpl
in
out
jns
lock
shrb
sti
fwait
imul
jmp
cmp
test
mov
in
stc
bound
xlat
iret
imul
dec
std
push
test
jecxz
popa
fidivs
jno
mov
push
cltd
dec
shl
gs
rol
dec
pop
push
jns
xchg
in
lret
pop
push
sbb
add
out
outsb
aaa
cmp
dec
sbb
daa
fs
xchg
in
aaa
repnz
and
and
ror
push
xchg
out
js
cmpsl
loope
push
add
sbb
push
sbb
cli
push
cltd
sbb
add
pop
xchg
push
addr16
push
mov
je
lods
and
cmpsl
xchg
cmpb
push
adc
push
mov
in
adc
inc
sub
cltd
cwtl
add
andb
inc
pushf
shrl
xchg
sbbb
xchg
mov
adcl
push
or
mov
arpl
pop
in
jecxz
xchg
fdivr
mov
sbb
popa
mov
pop
xor
in
std
leave
jmp
jo
data16
cmp
mov
sbb
test
and
fstps
jge
and
and
dec
xorb
mov
test
leave
xchg
stos
leave
adcb
ljmp
test
cld
xor
into
or
jae
repnz
repz
jl
imul
push
in
add
andb
outsl
fldenv
arpl
pop
jg
popf
adc
ds
mov
or
sub
push
adc
push
lea
push
mov
shl
xchg
xchg
push
mov
jge
pop
or
or
je
shll
or
loopne
stos
cwtl
and
cmp
fistpll
and
repnz
cmp
sub
fucomip
lock
fists
test
pop
inc
mov
rorl
inc
imul
inc
arpl
and
sub
int3
sbbb
fidivrs
adcl
mov
xchg
cmpl
jne
jnp
addl
sbbb
inc
cmp
cmp
adc
sbb
xchg
jle
leave
insl
pop
mov
jecxz
sbb
and
dec
push
inc
pop
test
std
cmp
in
jmp
xlat
lock
into
adc
sbb
and
jle,pn
xchg
lahf
sbb
mov
sbb
ljmp
sub
sub
mov
adc
jae
mov
outsl
pop
lahf
add
lods
or
cmp
clc
in
sti
stc
xchg
fwait
aas
or
add
popf
int3
movsl
jg
or
pop
cmp
inc
hlt
repz
jo
cwtl
pop
dec
xor
mov
cmp
jle
rol
lret
mov
sub
cmp
scas
add
stc
bound
scas
push
xor
inc
sbb
movsl
jno
xor
dec
fidivrs
jne
dec
lret
dec
jns
cli
jg
inc
and
pop
shll
adc
aas
orl
push
mov
sbb
test
push
push
rclb
mov
xchg
mov
mov
dec
dec
jo
and
lods
mov
pop
dec
xchg
jl
nop
and
pop
pushf
orb
loop
repnz
in
mov
push
xor
scas
inc
scas
sbb
jl
hlt
jl
push
in
popf
faddl
mov
imul
push
jno
and
push
imul
fsubl
dec
negl
jnp
pop
push
xor
test
mov
sub
push
pop
mov
xor
inc
fwait
inc
rorb
jbe
fdivr
ss
out
mov
mov
dec
inc
call
push
cmpb
orl
ss
stc
inc
aas
jle
jg
or
mov
xchg
icebp
pop
mov
gs
cmp
sbbl
xchg
les
push
out
mov
insb
xor
and
sbb
mov
cmp
mov
mov
mov
pop
jns
push
test
sub
jb
pop
mov
lret
mov
sbb
push
call
pop
mov
loopne
inc
pop
mov
push
frstor
mov
clc
push
imul
aaa
cmp
inc
pop
sbb
lds
push
mov
sbb
add
out
pop
add
aas
out
inc
mov
sbb
dec
es
test
fs
cmp
mov
jl
jmp
and
outsb
ret
outsl
mov
lahf
sbb
mov
out
pop
mov
das
pop
fldenv
xchg
cltd
cmpsb
ret
mov
fdivs
mov
jle
inc
xorb
out
int3
pop
xor
lods
sbb
das
fwait
lcall
cmc
mov
push
xchg
stc
cmp
jns
int3
cs
inc
pop
adc
push
out
fldcw
aad
jg
inc
das
or
jne
iret
and
xor
mov
pop
inc
dec
jge
repnz
mov
popf
cli
movsb
fdivl
outsl
inc
rcr
mulb
push
movsb
inc
sub
add
pop
std
aad
cmp
jl
jmp
bswap
sbb
mov
ss
xorl
push
out
sbb
or
mov
sbb
test
addr16
lock
loop
out
add
xor
mov
adc
mov
jno
repnz
xchg
roll
and
into
pop
dec
in
inc
adc
or
ss
pop
hlt
and
sbb
jns
scas
and
cmpsl
sbb
mov
insb
loope
lock
les
jne
jl
pop
loope
dec
test
or
imul
mov
jnp
pop
jmp
mov
andb
inc
mov
and
xchg
mov
mov
int3
in
adc
imul
mov
jecxz
mov
fisubl
bound
leave
rorl
inc
adc
popa
mov
mov
out
scas
cwtl
outsb
xchg
fcmovnbe
loop
cmpsl
scas
addr16
jnp
push
test
fisubl
jae
pusha
and
sbb
lock
or
and
movsl
jne
jg
xchg
mov
repnz
sub
lods
or
mov
cli
push
add
cmp
imul
icebp
popf
flds
add
xchg
and
push
dec
or
into
pop
ret
push
pop
test
pop
sbb
and
movsb
or
cs
sahf
loope
insl
outsl
or
out
shrl
loopne
pop
mulb
dec
std
mov
mov
ja
and
xor
lods
adc
pop
lcall
push
popf
pop
mov
outsl
dec
fcoms
cmpsl
rorl
icebp
mov
insb
outsb
iret
jmp
call
dec
hlt
adc
sbb
fcmovb
jle
jecxz
loopne
jg
mov
cmp
dec
push
mov
inc
fisttpl
lcall
scas
mov
iret
push
mov
mov
xor
adc
sub
push
add
push
xor
neg
pop
shlb
jg
pop
repnz
jle
and
push
dec
das
add
xchg
or
repnz
mov
pop
xchg
xchg
mulb
mov
cmp
leave
jbe
dec
jle
jae
mov
jle
aam
mov
or
xorl
inc
or
mov
dec
and
mov
jne
in
pop
mov
loop
je
scas
push
or
sarb
mov
dec
daa
mov
sub
addr16
fs
iret
cs
jo
jae
mov
mov
sti
outsl
dec
enter
sbb
imul
sub
test
push
data16
push
fwait
rcll
sbb
test
push
int3
lret
fwait
mov
sbb
jno
jno
add
sar
enter
arpl
into
sbb
popf
sub
call
pop
adc
mulb
add
inc
and
cltd
sub
sub
add
jge
pop
cmp
mov
jmp
repz
push
in
add
popa
fidivs
xchg
lret
int3
xchg
dec
xor
orb
jne
mov
fistl
or
rep
das
fdivl
bound
or
insl
mov
xchg
or
jle
adc
adc
jne
notl
pop
cmp
xlat
shrl
mov
push
dec
mov
sub
popa
cltd
fnsave
pusha
inc
mov
addl
and
sbb
hlt
gs
sub
xor
mov
pminsw
daa
cli
icebp
jmp
and
lcall
js
pusha
mov
pop
push
sbb
imulb
cli
and
imul
add
imul
add
stc
or
negl
mov
xchg
jbe
lods
pop
add
stc
fsqrt
aad
out
leave
test
inc
icebp
mov
push
adc
test
mov
imul
andb
cmp
lds
or
in
pop
jns
pop
test
pusha
or
scas
or
stc
sbb
in
and
ret
adc
movsb
adc
fldl
cmp
dec
jg
ret
or
inc
arpl
es
mov
test
stc
dec
dec
xchg
sarb
push
fwait
mov
enter
hlt
arpl
sub
xlat
xchg
mov
and
popa
popf
ficomps
mov
in
mov
cmp
cmp
loopne
test
adc
mov
sarl
fwait
and
pop
jp
jl
mov
popa
jmp
or
les
sbb
aam
and
jb
mov
fmull
mov
add
inc
jo
mov
inc
scas
and
sbb
out
xlat
cwtl
iret
scas
push
fldenv
or
or
sbb
inc
mov
js
repnz
push
cmp
repnz
mov
mov
xchg
sub
imul
push
out
and
add
pusha
std
push
cmpsl
sub
loop
aad
in
jo
pop
mov
fwait
sbb
call
dec
xchg
cli
xchg
lods
xchg
pop
aad
cmp
fbld
in
jle
shl
inc
jge
aaa
stos
inc
fimull
jb
mov
cmp
out
cmp
push
adc
stc
lea
leave
mov
and
addl
popf
cmpl
scas
pop
test
jl
inc
and
js
or
and
xor
mov
jnp
inc
daa
add
add
and
imul
aad
mov
pop
pop
and
dec
xchg
sub
xorb
adc
popf
jbe
mov
repnz
test
out
pop
jb
mov
loope
cli
jle
adc
fsubrs
sub
ret
mov
xor
push
sbb
xchg
push
insl
aas
out
incl
xor
push
xchg
out
xlat
loop,pt
pop
cmc
inc
add
lds
inc
pop
pop
insl
insb
xchg
sub
jecxz
lock
pop
add
sub
fistpll
push
mov
loope
push
mov
cvtps2pd
loopne
ja
add
sub
or
pop
xchg
pop
or
in
pop
add
push
jbe
mov
dec
sub
fwait
mov
mov
cmp
xchg
xchg
pop
pop
popa
addb
insb
fbld
rclb
push
cmp
pushf
or
add
mov
sub
daa
and
pop
push
rcrb
dec
xchg
je
xor
jns
cmp
add
les
out
mov
mov
data16
or
xor
repz
xchg
push
iret
sti
outsb
sahf
push
leave
es
or
jecxz
daa
lret
inc
enter
int3
icebp
mov
dec
loop
sub
jp
stos
xchg
jae
shrl
stos
xchg
xchg
fldcw
push
push
pop
loop
lea
clc
push
mov
add
push
fsubr
flds
daa
data16
mov
loope
jns
and
push
stos
nop
cli
cmp
mov
jl
pop
outsb
arpl
insb
vpackssdw
mov
rcrl
pop
addr16
and
insb
mov
jae
xchg
bnd
cmpsl
aad
dec
lcall
lea
je
hlt
ljmp
cmp
adcl
xor
lret
or
xchg
shlb
shrl
shll
mov
fistl
adc
pop
add
dec
jge
popa
cli
jle
sub
repnz
xchg
push
mov
lods
pop
ret
sub
mov
dec
mov
xchg
or
test
jp
xchg
mov
jp
xor
sti
dec
ja
lock
mov
stos
in
test
das
xchg
ljmp
adc
movsb
pusha
jbe
or
fdivrs
cmp
xor
lahf
adc
mov
test
mov
xorl
add
and
pusha
insb
mov
push
pushf
test
dec
mov
xchg
pop
sub
enter
iret
fnsave
mov
push
dec
mov
js
push
mov
push
loope
pop
clc
test
adc
jne
notb
dec
sbb
mov
movsb
icebp
leave
and
inc
scas
fwait
movsl
clc
ret
mov
jns
push
jbe
jp
xor
ljmp
jle
mov
arpl
push
mov
jge
xchg
scas
mov
fists
ret
cwtl
pop
lock
cld
daa
lods
add
mov
bound
fnstcw
jae
or
jg
mov
aam
arpl
adc
mov
inc
cmp
cmpl
fcompl
cmp
jp
inc
jns
ret
addr16
fcoms
pop
pop
adc
in
sbb
adcl
in
mov
mov
and
cmpsl
stos
mov
int
jns
cmp
mov
jo
jno
dec
dec
mov
addr16
pop
sbb
sub
repz
and
rorb
mov
imul
mov
pop
push
fsts
mov
repz
scas
mov
xor
cmp
mov
dec
orb
lods
orl
popf
jge
into
mov
xor
xor
adc
fcoml
mov
loope
ret
push
adc
xor
js
jle
jl
nop
mov
repnz
adc
outsl
in
cs
sub
lock
fstps
enter
les
cmc
aad
imul
xchg
mov
mov
pop
clc
outsb
mov
lds
jb
add
mov
xlat
push
mov
inc
push
repnz
aam
cmc
cld
into
fisttpll
and
cwtl
jo
and
lcall
fisttps
adcb
stos
dec
sub
push
fnstenv
and
sbb
rcrl
cmpsb
arpl
pop
mov
adc
frstor
into
cmpb
mov
lock
mov
fwait
sbb
lock
dec
cmpsl
fsubrs
push
cmp
lock
adc
popa
aas
xchg
in
and
fimuls
jge
stos
add
test
clc
adc
xorl
movsl
cmc
and
stos
sub
repnz
xchg
cmpsb
push
adc
repz
outsb
lods
mov
insl
mov
jae
sahf
sub
push
fnsave
xchg
popa
das
inc
nop
test
sbb
dec
adc
shll
std
sbb
mov
xor
mov
add
mov
push
cmp
dec
rclb
jmp
cli
inc
push
and
jns
jg
jg
dec
lret
push
rcr
insl
mov
js
fsubrl
pop
lret
jb
lds
stos
aam
pushf
into
mov
mov
outsl
mov
add
add
sarb
push
pop
scas
mov
xor
add
daa
pop
push
pushf
mov
cltd
dec
arpl
es
lret
cmp
and
cwtl
xlat
xor
iret
fistl
dec
add
ret
dec
fldt
mov
push
dec
inc
lret
mov
push
sub
lret
hlt
gs
hlt
xchg
ss
pop
stos
test
ss
stos
push
ss
add
push
mov
mov
das
cmpsb
movb
cwtl
cmp
mov
pop
rcrb
mov
mov
jno
data16
adcb
mov
sub
cs
hlt
fcomps
cwtl
jb
mov
or
jb
dec
mov
in
mov
in
sbb
xor
lcall
int3
call
pop
inc
mov
sub
int3
lret
xlat
repnz
pop
push
dec
mov
data16
stos
jle
addl
mov
xchg
dec
xchg
lds
inc
es
test
lret
scas
inc
push
mov
dec
jge
inc
insb
lret
xor
loopne
mov
push
fcomp
dec
outsl
stos
dec
jmp
daa
pop
mov
enter
sbb
lret
out
cmp
add
jae
aad
je
mov
out
mov
cmp
mov
or
push
add
mov
or
mov
inc
fwait
push
movsl
faddl
and
or
add
push
pop
das
lds
add
cmp
sti
inc
add
fsubl
adc
dec
adc
xor
in
cmp
popf
push
pop
pop
pop
out
stos
push
push
sbb
lods
pop
icebp
int3
mov
push
out
and
pop
and
pop
dec
cmpsl
pop
in
out
ds
shlb
movsl
and
ljmp
and
xchg
lret
sbb
aas
ret
jle
xor
xor
call
xchg
sbb
shl
js
push
mov
xchg
call
into
fstl
jl
arpl
push
jno
or
mov
lods
mov
ja
lahf
out
sbb
lea
cmpsb
filds
mov
sbb
arpl
pop
sbbl
mov
pop
add
cli
int
je
stc
push
sub
inc
incb
mov
xor
je
add
sbb
sarb
mov
fbld
loope
sbb
add
and
pushf
hlt
movsl
imul
orb
mov
jnp
popf
cmp
fcompl
jb
repnz
mov
and
mov
pop
scas
mov
sbb
pop
dec
int
rcrb
push
push
mov
lcall
mov
cmp
inc
add
or
cltd
shrl
aaa
pop
jnp
notl
roll
lahf
lock
test
inc
int
pop
pop
inc
mov
sbb
inc
push
repz
xorl
jne
test
fs
sub
nop
mov
mov
pusha
push
lods
dec
fwait
cmp
popf
stos
push
sbb
fdivrp
cmpsb
insb
and
dec
ss
pop
sub
xchg
out
fsubp
push
and
pop
mov
es
push
cltd
xchg
outsl
cmp
fldcw
mov
push
enter
imul
mov
in
add
lahf
aas
sarl
lret
in
dec
test
mov
xchg
dec
adc
divl
movsl
pop
ss
push
or
pop
lahf
mov
and
push
xor
push
inc
ret
xchg
push
jecxz
mov
pop
mov
in
in
mov
jbe
mov
sub
mov
lea
push
out
out
mov
fs
xor
sbb
mov
ret
loopne
fwait
mov
dec
jp
pop
mov
push
or
add
mov
popa
in
sub
shl
sbb
pop
adc
imul
pop
mov
pushf
iret
iret
sub
bound
ficoms
fwait
pop
jae
cmp
nop
mov
mov
insl
ja
mov
push
jl
adc
outsl
int3
pop
rorl
xchg
sub
mov
jg
mov
lahf
ja
push
lret
les
test
test
ss
adc
lea
ja
and
movsl
mov
mov
xchg
adc
inc
mov
push
push
std
cli
mov
in
mov
sahf
lcall
sub
xlat
das
roll
cltd
js
arpl
cmp
ds
pop
out
dec
xor
scas
das
adc
dec
iret
push
popa
pop
adc
lret
hlt
sub
sub
fidivrl
pop
sti
mov
popa
add
xor
push
cld
int3
cmp
out
mov
sbb
addr16
jge
xchg
pop
addr16
cmp
push
fstps
or
insb
push
aas
lcall
dec
ret
pop
cmp
inc
rcll
cmpb
mov
pop
std
ret
aad
frndint
jbe
inc
scas
dec
mov
enter
fwait
cmp
cmp
add
rcrl
loopne
lret
shlb
mov
jb
jns
lods
jns
jns
xor
negl
add
add
cmp
dec
faddl
cmp
jl
das
pushf
daa
fildl
mov
in
into
cmpsl
mov
in
std
das
outsl
inc
mov
cmp
mov
loopne
cmp
fsubrl
mov
int
stc
jle
xchg
or
add
mov
mov
rclb
out
xchg
ja
sub
ja
push
pushf
lret
insb
fs
ja
sub
mov
pop
jne
sub
sub
int
xchg
mov
xor
in
mov
out
int3
push
mov
nop
or
push
mov
dec
loop
dec
inc
ret
inc
push
inc
push
pop
jle
mov
adc
sub
cld
cld
roll
or
popf
in
or
rorl
cmpsb
mov
xchg
je
cmp
int
mov
add
jg
sbb
mov
movups
dec
movsl
add
sbb
std
push
mov
dec
rcl
pop
or
adc
ljmp
fnstsw
jl
adc
xchg
movsl
xor
jae
dec
fs
dec
aad
inc
dec
out
cmpsl
stos
mov
dec
sbb
pop
addb
mov
icebp
push
mov
sbb
js
inc
jmp
mov
adc
not
pop
cwtl
cmp
loopne
or
ffree
shll
pop
sbbl
shlb
test
test
sbb
jg
jp
ja
xchg
adc
push
jl
test
or
out
or
aam
push
or
sbb
xchg
mov
out
adc
pop
int
mov
and
cli
cmpsb
in
push
xlat
or
or
rep
mov
push
xor
dec
pushf
pop
fnstenv
in
cld
push
fsubs
repz
inc
js
imul
gs
xchg
bound
adc
test
imul
in
fwait
mov
in
xchg
xchg
xor
or
cmp
mov
or
imul
test
or
and
mov
std
xlat
sub
pop
pop
and
das
adc
sti
jae
test
pop
divb
push
dec
fcoml
scas
repz
imul
mov
or
pop
xchg
and
fildl
xchg
das
jmp
icebp
call
pusha
neg
out
mov
sub
daa
bound
mov
outsl
mov
push
test
pop
inc
push
scas
mov
xchg
push
or
sahf
popa
dec
sti
pop
push
test
rorl
leave
test
std
shrb
faddl
push
test
cmp
dec
mov
pop
pop
out
out
rcl
add
xchg
sahf
sub
mov
jb
push
out
push
and
sbb
jo
xor
lret
adc
jae
xchg
ja
stos
sahf
shll
xor
aam
sub
scas
sbb
mov
call
sar
lods
ss
test
xchg
mov
jl
test
xor
or
jb
imul
pop
and
push
mov
jp
int3
mov
pop
add
movsb
notl
ror
xchg
mov
loope
push
mov
lahf
push
movsb
cmp
xor
dec
mov
cmp
aaa
sbb
dec
jae
imulb
arpl
sub
jns
mov
stos
xor
inc
cs
pop
enter
push
data16
int3
xor
in
outsl
pop
dec
push
xlat
shlb
nop
mov
repz
or
pop
out
test
jmp
jmp
push
pop
pop
push
jecxz
jge
or
push
sub
add
or
sbb
cmp
mov
xchg
shr
mov
movsb
ret
push
addr16
sbb
into
nop
cltd
sbbb
repz
dec
sti
xchg
andl
and
adc
and
sahf
mov
mov
adc
das
lcall
push
je
xor
stos
stos
insl
pop
sub
jmp
mov
mov
push
add
cmp
mov
add
mov
push
push
mov
inc
and
cwtl
add
mov
aaa
orl
dec
jbe
dec
fucom
jmp
std
pop
add
and
cs
je
jns
dec
lods
and
cs
in
das
dec
das
pop
and
and
ja
xchg
jne
aam
jl
ss
stos
mov
fdivs
movsb
jnp
or
test
jnp
xchg
in
lods
dec
aam
mov
insb
out
sarb
mov
les
mov
and
adc
inc
shl
je
xor
and
jge
cmp
fdivrs
pop
pushf
jnp
push
and
and
sub
test
xchg
mov
movsl
and
gs
fidivrs
mov
xchg
jno
fcomps
pop
pop
dec
scas
cmp
dec
std
pop
decl
insb
les
int
xor
enter
mov
lret
inc
ds
rcll
cmp
jne
out
mov
xchg
xor
jns
shrl
fwait
inc
xchg
mov
push
scas
cltd
mov
and
adc
xchg
xorb
add
shrb
ficomps
xchg
call
jl
or
in
loope
add
dec
ljmp
shrl
cmp
adc
jmp
out
ficoml
sub
loope
jmp
sbb
mov
fildl
rcll
lcall
push
sar
inc
mov
addr16
imul
xor
pop
jmp
xor
cmp
stc
cmc
mov
adc
ret
cltd
sar
sbb
or
stc
xchg
xor
fmuls
pushaw
jb
or
mov
and
es
add
xchg
outsl
xchg
test
push
std
fs
mov
cs
in
dec
hlt
and
xlat
clc
mov
dec
gs
paddsb
and
shl
int3
nop
fiaddl
das
inc
lods
nop
pop
dec
and
movsb
inc
mov
aaa
dec
imul
and
and
ja
or
mov
movsl
add
cmp
sti
cmpsl
adc
subl
pop
inc
xchg
subl
sbb
fimuls
repz
mov
nop
sub
jmp
mov
xchg
mov
in
popf
les
mov
hlt
mov
pop
or
stc
jno
in
or
lea
ret
lahf
loopne
or
addr16
popa
and
out
addl
das
in
ljmp
js
notl
jns
jnp
shrl
xor
aaa
mov
cltd
adc
addr16
js
pop
xor
dec
mov
pop
aas
cld
jle
cs
loop
and
xor
nop
mov
push
push
pop
sbb
leave
fdivrl
mov
xor
mov
xchg
ret
cmp
outsb
lods
imul
mov
popf
xchg
adc
mov
mov
sti
lods
add
imul
sarl
insl
stc
lret
jae
jb
xchg
adc
cwtl
adc
outsl
xchg
jo
mov
inc
inc
jno
mov
fsubs
insl
adc
dec
cltd
jno
push
or
daa
cli
jp
out
or
and
or
dec
rol
dec
sbb
xchg
shlb
imul
inc
pop
jnp
pop
xchg
arpl
xchg
sub
push
jo
push
push
mov
pop
aam
jne
jl
xchg
push
imull
sbb
push
loop
and
popa
cs
mov
into
mov
sub
push
adc
icebp
icebp
sbb
push
jne
sbb
or
cmp
rcrb
jns
cmc
pop
push
idivl
sarb
sarl
adc
xchg
lock
jo
jg
popf
mov
lods
bound
push
and
sub
shl
inc
lods
les
fsubrs
popa
in
cs
mov
xchg
add
repz
and
into
jbe
imul
ret
outsb
iret
ja
cs
mov
mov
xor
addr16
lret
lods
mov
adc
fcomps
sub
mov
jnp
mov
push
and
add
and
int3
jbe
cltd
mov
int
cltd
sbb
dec
mov
movsl
int
pop
sbb
and
sahf
cmp
dec
mov
out
xor
add
outsb
movsl
gs
and
inc
jg
hlt
dec
test
call
push
jb
jmp
in
jge
mov
frstor
mov
pop
mov
popa
jnp
out
push
test
sbbl
lcall
and
ficoml
test
lret
sti
jle
cli
push
bound
test
and
mul
shlb
aam
out
mov
lret
fmull
pop
jae
cltd
es
or
gs
dec
dec
push
cmc
jb
push
je
adc
dec
cmp
ss
xorl
push
push
and
incl
inc
sarb
sub
or
pop
push
dec
xor
mov
cmc
xchg
es
adc
sarb
xchg
pusha
jl
out
hlt
mov
movsl
mov
dec
pushf
mov
push
or
mov
push
sbb
jnp
out
push
inc
aam
mov
fs
add
jg
popa
cmp
mov
push
test
rcrl
push
lods
movsb
or
aaa
popa
push
je
dec
jp
pushf
cli
out
aam
inc
jp
push
or
push
cmp
adc
adc
stc
stos
sub
xor
sub
xor
aaa
dec
out
inc
pop
sub
aas
fs
mov
dec
je
or
or
pop
sbb
mov
dec
aaa
mov
stc
lock
xchg
sbb
vandnpd
movl
or
sub
xchg
mov
push
mov
out
imul
cmpsb
mov
lds
ljmp
das
test
ljmp
and
push
mov
call
test
test
or
sbb
data16
and
iret
out
int
dec
into
push
sbb
mov
push
cmp
inc
nop
inc
subb
cs
or
dec
inc
cwtl
out
xchg
jae
fdivrl
push
gs
into
sub
sarl
pop
ja
push
mov
xor
inc
mov
add
pop
sbb
xchg
std
cmpsb
movsl
enter
push
stc
adc
lds
mov
out
or
cs
ficoms
dec
sbb
mov
or
xchg
jb
and
xor
loopne
adc
ror
xor
scas
mov
jmp
pop
fldcw
jmp
mov
add
das
mov
mov
inc
ret
adc
and
push
or
pop
imul
in
mov
dec
int
mov
dec
int3
lcall
sub
pop
fidivrs
cmp
in
movsl
pusha
mov
xor
pushf
xchg
jns
repnz
fnstsw
mov
sbbl
xchg
mov
call
ret
jg
pop
pop
and
mov
stos
loopne
call
xchg
enter
adc
outsl
xchg
rol
movsl
je
pop
out
adc
fisubs
in
sub
and
push
push
ret
and
pop
fcoms
sahf
mov
adc
jecxz
mov
inc
arpl
in
cmp
in
lods
clc
xchg
and
push
lcall
xchg
aam
cld
or
mulb
lods
mov
sub
sub
insl
sahf
xor
or
sahf
sub
lret
cmp
cmp
inc
adc
mov
cmp
adc
mov
mov
fs
adc
push
js
aad
add
push
mov
and
mov
adc
ret
mov
jnp
enter
dec
test
ret
xor
jl
xchg
jle
das
aam
outsb
sub
stos
jne
leave
adc
mov
push
call
hlt
rclb
int
lock
movsl
fists
or
and
jbe
clc
jno
test
xchg
out
mov
push
inc
loop
leave
lods
push
cmpsb
popa
xchg
mov
shlb
xchg
fisubrs
fstpl
push
enter
lahf
push
jno
aas
push
in
jbe
iret
test
ds
jle
sahf
add
inc
or
adc
cmovg
aam
cmp
in
adc
pushf
jg
fildl
xlat
cwtl
loopne
test
or
enter
aas
push
adc
mov
fsubs
xlat
xchg
jecxz
xchg
inc
and
xchg
inc
out
icebp
mov
jnp
arpl
aam
aad
add
adc
sbb
sub
aaa
pop
mov
xchg
fcoml
aam
xchg
inc
nop
and
and
xlat
rol
imul
xchg
cltd
xchg
dec
call
push
inc
insl
jb
imul
cld
cmp
into
mov
sub
insl
mov
movsl
fadd
jp
aad
std
push
dec
mov
orb
and
not
ss
cs
das
test
mov
fstl
dec
push
cmc
pop
jg
adc
enter
fs
mov
jmp
mov
int3
mov
xchg
scas
sbb
cmc
std
aas
fdiv
jae
rcrl
push
test
pusha
js
xchg
jo
pusha
aad
add
jbe
xor
mov
ret
movsl
pusha
or
sbb
xchg
sbbb
mov
lret
add
hlt
lock
adc
mov
sbb
aaa
xchg
push
test
adc
pop
sub
sub
dec
aaa
popa
divl
mov
mov
or
je
std
movsb
rorl
add
xchg
push
dec
and
bound
add
cli
lods
aam
and
test
in
xor
lea
cmp
xor
push
cmp
or
js
xchg
cmp
ret
int
movsb
push
push
or
mov
jae
or
fisubl
das
pushf
ds
inc
push
adc
popa
ret
in
data16
jg
mov
lods
lret
jle
pop
arpl
cld
into
sbb
shl
subl
mov
or
das
sub
mov
jl
arpl
enter
push
pushf
cmp
cmp
xor
adcl
inc
mov
inc
push
push
rcrb
aas
add
pusha
dec
xchg
pop
mov
cwtl
xor
cmpl
jecxz
loopne
test
adc
xor
sbbb
mov
dec
push
mov
adc
cwtl
xor
and
lock
fcoml
mov
repz
pusha
cmc
fisttps
repnz
pop
shr
iret
fistps
fnstcw
mov
dec
roll
inc
aad
leave
in
ds
test
test
stos
test
sub
cli
lods
adc
outsb
adc
add
hlt
idiv
mov
cmpsl
adc
push
stos
xor
jns
dec
and
rolb
inc
xor
add
fsubs
decb
sub
outsl
rol
adc
es
push
mov
mov
xlat
sub
rcr
das
dec
or
push
push
fidivrs
pop
scas
stc
rcrb
clc
filds
sbb
je
pop
mov
push
or
fsubrp
dec
pushf
pop
mov
push
xchg
push
cmp
jbe
jnp
jmp
push
enter
cli
es
pop
clc
lcall
xchg
shrb
xor
jno
lahf
stos
pop
adcl
inc
sub
das
xor
xchg
mov
fdivs
cmc
hlt
repnz
inc
mov
xchg
and
sub
out
js
cmp
stos
repz
insl
mov
sub
dec
loop
rclb
loop
xor
cmp
adc
stos
addr16
cld
in
add
lds
hlt
jae
adc
inc
shl
mov
ljmp
push
sbb
or
mov
out
sbb
loope
xchg
ss
lret
insl
cmp
adc
jne
adc
imul
xor
xor
pop
xchg
xchg
and
clc
xchg
call
movsl
jno
adc
lods
or
cmp
aam
adcl
dec
imul
addr16
ror
inc
enter
mov
ficompl
hlt
enter
outsl
push
xchg
sub
cmp
lock
jle
jge
xchg
scas
dec
mov
cmp
and
mov
lahf
sbb
repnz
addr16
jbe
cmp
aad
mov
cmp
cmpsb
jl
lods
mov
cmp
call
xor
jge
xchg
out
in
iret
loope
mov
pop
mov
ljmp
out
jo
addr16
push
pop
add
or
or
cli
jmp
int3
mov
inc
cmpsb
test
jp
popa
lret
pop
or
jo
ret
xor
js
loopne
scas
or
bnd
adc
mov
pop
data16
ret
push
cltd
fldl
xchg
iret
jae
mov
nop
icebp
lret
xor
invd
jo
inc
call
mov
dec
cmc
icebp
xor
pop
xor
mov
add
fucom
push
sti
pop
aaa
sbb
jae
test
loop
mov
jmp
out
pop
mov
jne
pop
out
cld
jp
inc
arpl
repnz
cmp
xchg
test
mov
jecxz
insl
and
jnp
inc
nop
or
lods
cmpb
xchg
push
gs
sub
in
mov
shlb
test
int
mov
es
pop
mov
cs
popf
and
je
arpl
das
xchg
sbbl
or
icebp
data16
cmc
xchg
ds
inc
mov
sbb
xor
sbbl
pop
and
movsl
lcall
xor
add
xor
lods
hlt
sub
mov
adcl
shll
sbb
cli
pop
add
test
xchg
test
push
mov
stc
or
rcll
daa
sub
shll
and
std
movsb
lret
jbe
dec
decl
out
ret
es
daa
jle
loope
je
scas
rcll
bound
mov
mov
jl
daa
adc
mov
in
cmp
mov
lahf
imul
outsb
xchg
sub
xchg
inc
std
std
push
dec
cmp
iret
rcl
jle
popa
sahf
sbb
lods
lea
xor
dec
fdivs
roll
pop
in
in
dec
push
inc
insb
cs
jno
fwait
mov
lret
leave
xchg
ja
aas
push
and
push
shr
or
sbb
lock
add
stc
sbb
xlat
orb
pop
xchg
push
clc
lock
in
cmc
sub
mov
inc
rolb
sbb
mov
scas
inc
les
icebp
sar
sub
xchg
xchg
xor
sub
fsubl
adc
stos
stos
mov
scas
jnp
cmpsb
add
fistl
fcmovnu
or
xlat
testl
fsts
outsl
push
dec
xor
inc
mov
cwtl
insl
cmpsl
mov
jg
sub
sbb
gs
jns
sub
dec
sub
sub
das
shrl
movsb
inc
inc
subl
cltd
or
push
shlb
rep
repz
es
test
sbb
ss
push
xchg
jb
ss
aad
bound
add
imull
push
jbe
xor
test
es
jmp
jb
sbb
loope
fbld
sahf
test
mov
test
or
std
ds
shlb
mov
ficomps
sub
mov
xor
out
movsb
lods
push
mov
scas
stos
mov
mov
cmp
ret
cmc
subb
ficomps
ret
pop
adc
add
shll
xor
inc
xchg
dec
add
lahf
sahf
in
fs
ror
cld
cmp
xchg
pushf
cmc
lahf
mov
xchg
mov
addb
pop
pop
push
fisttpl
jmp
pop
arpl
and
jae
jl
push
mov
pushf
or
cmp
sbb
lds
sqrtps
pop
mov
mov
xlat
dec
push
mov
fs
xlat
fucomip
movq
cmpb
mov
ret
cmc
pushf
shlb
dec
sbb
add
cmp
adc
in
dec
sub
xor
xchg
xor
popa
jp
dec
in
inc
adcl
imul
js
test
cld
xchg
mov
je
outsl
sar
pop
outsb
xor
push
fldt
in
scas
nop
mov
mov
shrl
sub
mov
lods
jno
enter
in
add
mov
add
mul
xchg
or
xorl
lcall
repz
rol
lods
inc
inc
inc
dec
mov
aad
inc
scas
js
and
dec
cmp
aaa
sub
pop
jg
push
cltd
fadds
int
jecxz
in
dec
mov
xor
sarb
gs
mov
fidivl
bound
mov
test
leave
test
mov
add
in
mov
scas
cmp
mov
sub
ja
popa
cmp
pop
iret
xchg
mov
cmpl
sbb
or
and
sub
stos
in
mov
sbb
dec
hlt
sbb
push
pop
jne
pop
and
xor
testl
int
jnp
shrb
mov
mov
scas
dec
xor
loopne
sbb
mov
pushf
lods
shlb
int
adc
leave
pop
jne
mov
fs
in
dec
adc
stc
movsb
add
push
orl
cmp
adc
sbb
pop
scas
push
jecxz
movd
test
jl,pt
mov
ret
jecxz
int
cs
vunpckhps
imul
xorb
dec
inc
pop
add
aad
jo
sub
fdivl
out
push
sub
mov
mov
cltd
lret
sbb
aam
jmp
jg
mov
ds
and
adc
loopne
daa
mov
stc
adc
cmc
lcall
stos
mov
icebp
into
pop
in
gs
movsl
mov
lea
iret
dec
mov
cmpsl
bound
in
test
cmp
test
sbb
push
je
pop
loopne
mov
stc
nop
popa
pop
push
dec
das
sbb
cmpb
fnstcw
push
arpl
add
inc
addr16
jb
push
pop
mov
cmp
xchg
iret
jle
arpl
ret
jae
cmp
outsl
mov
xorl
negl
add
mov
notl
mov
pop
mov
mov
stos
inc
xor
and
les
repz
lahf
std
inc
or
mov
mov
clc
mov
inc
test
cs
ljmp
push
jns
stos
inc
je
shlb
push
into
jno
pop
mul
aad
sbb
daa
jb
adc
cmp
adc
jae
lret
repnz
pop
test
pushf
imul
test
loopne
lret
mov
mov
dec
repnz
dec
iret
xchg
lea
fs
mov
or
or
inc
stos
loope
xorb
mov
dec
fisubl
in
sbb
in
fsubrp
into
test
jl
and
adc
jle
movsb
dec
fists
iret
and
icebp
mov
test
xchg
outsl
push
jbe
outsb
out
pop
bound
pop
inc
test
xchg
adc
pop
call
out
pop
mov
pop
inc
dec
into
cmp
stos
into
mov
inc
into
addl
int3
lds
mov
clc
adc
sti
imul
mov
call
rolb
mov
or
or
jge
dec
jge
outsl
push
fimull
sub
dec
push
movl
jbe
add
nop
fs
cmpl
push
pop
fucom
pusha
push
fnop
mov
jecxz
clc
dec
push
loopne
mov
jmp
adc
fs
xor
xlat
dec
and
andl
movsb
xchg
rorl
sti
xor
jl
inc
dec
jae
or
fs
mov
sbb
xchg
or
lret
mov
jl
rclb
adc
in
jbe
cli
xor
jne
je
fsubs
xchg
mov
and
or
fbstp
je
iret
push
loop
cmc
push
jp
cmp
aaa
xorl
cmp
out
cmp
icebp
stos
mov
pop
pop
jns
call
sbb
lahf
cmc
or
in
test
loopne
test
mov
push
pushf
repz
xchg
mov
mov
sbb
ret
mov
dec
sbb
pop
lock
cltd
inc
push
jns
sbbb
lcall
mov
imul
ds
push
shll
lret
or
pop
jmp
lds
add
xor
sbb
xor
fucomip
out
cmp
pop
inc
loop
pop
cli
jno
mov
movsb
mov
insl
cld
pop
xor
dec
leave
cmp
mov
pop
stos
cmp
mov
lds
add
dec
negb
test
popf
lcall
flds
adc
jmp
out
ds
loope
fwait
dec
jo
pop
sarl
lods
das
add
fisubrl
dec
mov
ret
and
jne
icebp
pusha
sub
cmp
scas
mov
mov
aaa
jb
or
adc
jo
inc
jge
js
sbb
rcrl
scas
repz
adc
cld
push
push
push
mov
add
fwait
setns
dec
sub
repz
sarl
mov
mov
repnz
and
shll
sub
leave
adc
outsb
push
jp
push
pop
mov
and
adc
sbbb
test
clc
std
add
push
lds
or
lods
dec
outsl
stos
push
movsl
call
or
icebp
or
add
pop
ficoms
ret
or
pusha
sbb
pop
stc
out
xor
and
sbb
sbb
mov
fiaddl
sub
fldl
cmp
or
or
inc
push
push
inc
jb
pop
ret
daa
push
out
mov
into
xchg
jns
adc
and
arpl
pop
popa
pop
repz
and
mov
push
sub
frstor
push
jb
out
aad
cmpsl
scas
cs
loop
ficomps
int3
mov
arpl
les
adc
repnz
adc
mov
adc
inc
ret
mov
adc
inc
jb
inc
pushf
cmp
xchg
inc
std
fwait
mov
mov
pop
roll
jle
inc
sti
xchg
cmc
testl
push
or
int3
and
push
mov
call
xchg
ret
sub
cmc
fdivl
fisubs
fwait
mov
fcmovbe
push
imul
fmul
in
inc
pop
mov
jnp
sbb
lret
popf
pop
or
test
sahf
fdivp
pop
push
push
mov
sbb
addr16
mov
repnz
push
cmp
fdivr
mov
dec
les
inc
jg
rclb
test
push
repz
jno
pop
shl
adc
jno
mov
push
xor
clc
sub
lahf
arpl
loope
push
fdivl
pop
pop
lock
sbb
cmpsb
pusha
xor
add
xor
cld
test
lds
cltd
pop
and
and
inc
or
rol
push
pop
mov
and
out
and
ljmp
es
jp
roll
out
sti
pop
push
jg
push
ret
lret
inc
jne
xchg
loopne
pop
and
imul
mov
rolb
ljmp
int3
not
mov
jge
ret
fwait
cmp
aas
vfrczpd
insl
sub
ja
fdivs
stos
pop
push
xchg
pusha
mov
jno
inc
mov
clc
push
mov
shrb
inc
int3
jecxz
fdivl
push
mov
addr16
sbb
lods
mov
mov
push
insb
sbb
pusha
push
xor
sbb
sti
popf
xor
or
es
mov
mov
sbb
jno
ds
xchg
bound
push
fistpl
or
pop
lock
inc
mov
and
scas
imul
lret
push
dec
jle
movsb
and
jl
insl
sbb
mov
inc
imul
iret
fiadds
pop
xchg
sarb
pop
sub
sub
jmp
push
jmp
ret
rorb
mov
fsubl
lea
push
pusha
in
nop
cltd
xchg
stc
icebp
aas
mov
fwait
subb
mov
and
mov
or
cmc
sbb
mov
ja
sbb
outsb
sub
xchg
sub
mov
movsb
add
xor
push
stos
in
and
jp
adc
fs
rolb
adc
pop
xchg
out
movsl
xor
adc
loop
push
cmc
ja
inc
jmp
mov
or
push
cmp
and
xchg
dec
mov
dec
xchg
into
lcall
fiadds
addl
ja
inc
je
cmp
jo
push
insb
jns
lea
lea
loop
or
cmp
pop
stos
mov
mov
adc
je
sbb
repz
stc
mov
insb
pmulhw
mov
testl
hlt
fcompl
lods
inc
adc
mov
push
or
sub
test
or
mov
rcr
xchg
test
insl
test
mov
scas
outsb
gs
lret
lea
sub
cs
mov
push
mov
aad
sub
insl
and
push
mov
andl
xor
cli
mov
sub
in
nop
pop
lcall
test
test
rorl
inc
daa
test
repnz
xorb
dec
mov
loopne
lret
pusha
xchg
das
xchg
pop
scas
cmc
ja
sub
or
gs
or
pop
add
lret
mov
mov
aas
lahf
pop
add
mov
dec
call
and
out
mov
sub
cmp
xchg
add
sahf
cmpsb
lods
mov
push
in
ja
fsubl
ret
mov
ret
jmp
sub
jl
push
adc
repz
jbe
mov
adc
adcl
repnz
mov
icebp
outsb
fisttps
mov
outsl
add
xchg
pushf
idivl
mov
cmp
mov
xchg
cmp
js
xor
push
dec
insb
inc
std
sbb
lret
repnz
add
xchg
movsb
and
ss
mov
xor
mov
pusha
mov
jl
push
clc
add
jne
xchg
pop
push
sub
cld
mov
cltd
and
mov
cmc
mov
adc
push
arpl
or
jbe
jbe
repnz
cmp
xor
inc
dec
outsl
mov
mov
mov
sbb
sbb
fs
in
mov
lret
xchg
xor
test
xchg
gs
lods
xchg
cld
jmp
jae
cmp
popa
sub
insb
jae
icebp
mov
icebp
jns
sbb
enter
mov
scas
xchg
shrl
mov
xchg
jnp,pt
rolb
jg
pop
repnz
js
sbb
aaa
fiadds
lea
ljmp
xchg
shr
inc
xchg
pushf
stc
cli
cmp
mov
movsb
mov
mov
sbb
sub
imul
and
cmp
fcmovb
add
push
xchg
fdivr
dec
sti
daa
mov
xor
xchg
in
mov
inc
xor
sub
lret
mov
in
ret
dec
aad
sub
and
adc
jecxz
sbb
stos
xor
cs
les
pop
xchg
mov
cwtl
inc
fwait
xlat
add
mov
or
jge
loop
fisubrs
addl
addr16
data16
push
inc
test
jne
scas
sbb
sahf
adc
ds
sahf
jl
outsl
bsf
data16
stos
dec
sbb
scas
aam
loop
pop
adc
sbb
dec
pusha
ja
adc
push
jne
stos
orb
addb
mov
mov
pusha
scas
jecxz
pop
daa
pop
bound
push
outsb
sbb
aaa
enter
aaa
rorl
out
push
mov
xchg
mov
sub
iret
inc
or
and
popa
pop
pop
xor
movsb
cli
mov
dec
imul
cmpsb
mov
ds
mov
in
test
jns
ss
stos
popf
ja
cmpsl
push
sbb
mov
mov
adc
aam
insl
mov
les
pop
int
popf
sub
popf
push
push
push
jns
xor
or
std
ret
push
cmp
mov
dec
mov
jo
jg
fs
add
mov
adc
xchg
test
call
fisubl
dec
fidivrs
fs
sahf
lods
dec
inc
pop
sub
or
jbe
mov
out
mov
dec
inc
in
mov
push
and
jp
jecxz
rcrl
fiadds
or
jecxz
sti
jno
shll
cli
sbbl
andb
lahf
fiadds
stos
ficoms
xlat
aam
imul
lods
pop
cmc
dec
dec
dec
es
neg
stos
sub
iret
push
loope
pop
aas
pop
add
xchg
dec
xchg
push
fcom
daa
pop
test
mov
adc
push
into
fs
sbb
enter
pop
loopne
dec
and
mov
sar
stos
insb
mov
fimull
push
mov
aas
push
icebp
cmp
sbbb
fwait
mov
addr16
cmp
inc
cltd
xchg
dec
xor
inc
bound
outsb
jae
aas
mov
and
add
mov
outsl
mov
rcrl
pop
jl
and
fsubr
push
fmull
or
xor
call
mov
lret
adc
xchg
pop
in
jb
icebp
inc
ficoms
and
fwait
dec
mov
repnz
jge
push
inc
movsl
out
mov
dec
xor
cld
mov
in
add
sbb
loop
inc
mov
mov
popf
rep
mov
jle
fsubrl
fnstsw
out
or
rcr
jbe
mov
xor
dec
stc
mov
pop
enter
jmp
sub
xchg
ds
ja
pop
xor
outsl
mov
test
repz
icebp
ret
cmpsb
cli
rolb
es
icebp
cmpb
or
pop
and
stos
or
sbb
imul
pusha
sbb
test
jno
mov
loope
jno
jb
xor
fisttpl
js
push
popa
movsl
outsb
and
jb
in
addl
lahf
xchg
ret
sahf
mov
xchg
sbb
lock
xor
mov
add
lds
fdivrl
xor
jl
xor
pop
aas
jle
cli
mulb
pop
dec
fsubs
mov
ja
insb
cmp
addl
test
lods
or
jns
insl
aas
xorl
xlat
lret
push
aad
iret
fcoms
adc
not
loope
sahf
sub
pcmpgtw
mov
inc
jne
or
imul
outsb
ret
xor
cltd
shrb
xor
push
arpl
pop
incl
dec
sti
ja
enter
lret
push
ja
sub
xor
push
mov
jge
into
in
sub
sbb
sti
ret
sbb
inc
mov
loop
cmc
push
pop
push
test
sub
loop,pn
lcall
sahf
push
jle
add
xchg
adc
sahf
push
xor
xchg
add
lds
lret
dec
push
lcall
mov
inc
and
negl
stos
push
outsb
dec
testb
test
fdivrl
sbb
xor
or
pop
mov
negl
cmp
sub
mov
sti
stos
dec
jp
cmc
or
jbe
cmp
pop
popa
add
imul
push
xchg
addr16
bound
cwtl
int
dec
cmp
inc
pop
rclb
sub
xchg
imul
addl
fsubrl
mov
inc
loope
xchg
dec
enter
dec
jno
jae
js
sbb
call
dec
mov
mov
ds
test
jmp
mov
sbb
pop
push
mov
mov
jno
cmpsb
jo
xchg
pop
lods
js
sbbl
int3
xor
cmc
mov
mov
icebp
jae
sub
mov
mov
dec
sub
dec
out
add
xchg
pop
cmpsb
ror
pop
pop
std
cmp
or
sbb
fistpl
xlat
add
cmpsl
sbbb
cld
movsb
jno
mov
cmpps
fisttpll
lods
shr
mov
jecxz
fisubrl
jne
add
jmp
js
sbb
push
mov
dec
sarb
subl
pushl
cli
or
xchg
mov
jae
inc
int3
xchg
sbb
xchg
fisubl
icebp
add
daa
cmp
into
sarb
add
mov
repz
sahf
rep
scas
inc
or
aaa
xor
pop
in
and
jmp
repnz
ret
or
cmp
inc
bound
bound
mov
out
aam
jne
cmp
and
sbb
push
add
add
mov
movsl
pop
mov
mov
and
inc
jne
adc
daa
jnp
mov
add
jne
xchg
jo
dec
das
xchg
addr16
pop
ljmp
popf
pop
add
rorl
fnstsw
ret
xchg
mov
out
arpl
outsb
adcl
dec
imul
aam
push
icebp
mov
sub
shufps
sbb
fldt
mov
mov
aas
ss
lahf
mov
clc
js
cmpsl
sbb
out
out
arpl
mov
out
repz
shl
jp
push
adc
mov
dec
mov
shll
pusha
cmpb
sub
jo
xchg
pusha
sub
xor
push
push
out
les
hlt
rclb
fcmovb
xchg
ljmp
nop
sbb
into
or
mov
fists
pop
les
cltd
rolb
cmp
xchg
jb
stos
xor
jb
fsubp
pop
xchg
int
xchg
repz
jmp
pop
pushl
iret
mov
lret
adc
dec
cmp
or
and
popa
loope
push
add
popa
loop
or
add
and
sub
enter
mov
sbb
inc
icebp
inc
jle
mov
xchg
in
mov
sti
hlt
shl
iret
push
or
jg
iret
inc
aaa
dec
shll
dec
pop
fstps
lock
shl
test
test
push
adc
andb
lea
sti
push
inc
cs
call
scas
mov
aaa
rcrb
loope
xlat
jmp
add
dec
sti
jmp
hlt
dec
dec
stos
push
inc
add
hlt
mov
fdivr
int3
mov
add
fidivl
fs
or
fnstcw
adc
cwtl
int3
js
jg
imul
mov
add
xor
and
and
lcall
movsb
sub
mov
inc
xor
jl
inc
lret
imul
inc
mov
in
inc
pop
sbbl
aam
jecxz
pop
jp
mov
icebp
adc
fisttps
stos
rol
dec
call
jbe
xor
mov
add
jb
imul
stos
sub
cltd
loopne
aam
inc
sti
mov
and
mov
jl
adc
mov
or
inc
aad
mov
jmp
div
and
dec
fs
xor
xor
in
faddl
ret
pop
aad
xchg
fisttps
leave
femms
cmpsb
mov
mov
in
sbb
pop
mov
repnz
jne
lcall
aas
push
pop
push
orb
sub
das
subl
dec
ret
dec
or
cwtl
adcb
sar
pop
mov
jnp
push
incb
testl
insl
or
mov
ljmp
hlt
repz
pushw
bound
out
cmpsl
sti
cmp
xchg
rcl
xchg
mov
js
and
loop
sbb
pop
push
shlb
mov
pushf
mov
jns
sbb
push
jno
sbb
cmp
fistpll
rcr
subl
mov
loope
vmovlps
icebp
in
sbb
and
cmp
mov
sub
insl
adc
inc
ljmp
js
adc
mov
xlat
cmp
xchg
scas
cs
mov
enter
push
cmp
pop
fwait
cmp
aaa
mov
bound
and
test
cmp
push
inc
jl
popa
out
scas
sbb
pop
jns
push
add
cltd
lock
out
push
lret
shrl
stos
jne
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
and
and
mov
lods
int3
outsl
stos
sarl
js
dec
pop
add
fcos
mov
inc
sti
lahf
xchg
into
enter
ss
mov
addr16
sub
lret
and
ret
dec
push
cmp
mov
cmp
out
dec
dec
fsubs
mov
shll
cld
std
cs
fucomp
jns
out
iret
dec
out
repz
fucomi
shlb
mov
mov
std
mov
adc
xchg
movl
lods
sbb
add
add
adc
inc
jne
cs
ljmp
add
loop
mov
mov
jmp
or
stos
inc
fucomi
xchg
imul
not
dec
push
ret
and
aaa
push
jnp
xlat
xchg
jbe
or
and
int3
sbb
aas
mov
data16
mov
pop
insl
jp
push
mull
sbb
push
dec
jge
aas
push
addr16
cmp
and
std
or
mov
dec
jmp
repnz
mov
add
inc
scas
xor
test
dec
cwtl
mov
mov
push
pop
xchg
inc
dec
cs
mov
repnz
pop
jl
popa
ja
mov
iret
cmp
imul
insb
adc
sub
repnz
ljmp
iret
jl
scas
and
out
cmp
inc
or
xor
mov
insb
and
jg
sbb
out
xchg
clc
xchg
fsubrs
cmpsl
rorl
popf
cltd
push
aas
mov
sub
aas
mov
mov
in
mov
jge
cmc
sbb
push
shr
lea
pop
mov
cmpsb
pop
dec
jnp
out
pop
inc
pop
mov
sub
xor
adc
movsb
mov
push
or
cli
push
stos
idivb
xor
sub
xchg
cmp
stos
push
xor
push
in
cmp
fisttpll
mov
iret
cmp
in
mov
jae
mov
mov
dec
add
lahf
mov
sub
mov
mov
xchg
jb
jo
push
das
sub
les
push
pop
insb
adc
daa
iret
call
shlb
xchg
jno
xor
mov
push
mov
stos
adc
and
ja
mov
push
lea
mov
xchg
jmp
lret
lock
mov
fnstenv
and
mov
adc
mov
cmp
sbb
ljmp
mov
cltd
icebp
fimuls
rol
out
mov
add
sbb
add
out
cli
add
fsubrp
xchg
and
xor
movntq
lods
shl
and
inc
je
add
or
pop
aam
or
adcb
or
mov
mov
sti
lods
in
out
inc
cmpl
shlb
jmp
xor
insl
cltd
mov
daa
repnz
dec
jp
or
ret
movsl
dec
cltd
lds
