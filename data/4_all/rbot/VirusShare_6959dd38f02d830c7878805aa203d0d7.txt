cli
repnz
ss
popa
sub
iret
jbe
loope
xor
pushf
les
jmp
or
dec
push
mov
sub
inc
cmp
add
jecxz
roll
mov
test
fidivrl
mov
adc
xor
outsb
test
aad
jecxz
mov
xor
jg
and
inc
bnd
fidivl
addr16
dec
jne
dec
fidivrl
mov
fcmovbe
out
repnz
push
bound
and
and
jecxz
mov
jl
xor
pusha
jl
pop
pushf
les
cltd
inc
or
sub
adc
andb
inc
and
mov
add
je
ss
test
adc
inc
pop
stos
shlb
jp
xchg
jl
jb
shl
add
into
pop
std
sbb
jb
daa
mov
std
in
lret
cmpsl
push
jns
into
pop
cmp
and
pop
lds
pop
shll
idiv
cmp
negb
cltd
pushf
xor
mov
or
lds
add
or
arpl
pop
push
jl
xchg
xor
mov
pop
rclb
shlb
mov
sub
lods
mov
mov
in
in
scas
jge
cltd
push
push
je
add
lods
out
xor
stos
fisttpl
adc
cmpb
xor
sarb
ds
mov
imul
mov
pop
push
dec
xor
add
sbb
jp
stos
and
andb
fwait
popf
mov
jecxz
mov
push
sub
andb
pushl
ljmp
int3
sub
push
inc
dec
fcoml
daa
clc
sub
inc
or
push
inc
xor
aad
sahf
or
push
fidivrs
cwtl
push
insl
cld
fisubl
into
jge
push
movb
cs
sub
inc
sub
or
repz
pop
xlat
aas
xor
pop
rcrb
inc
mov
bound
ss
cmpsb
mov
int3
xchg
jp
jns
and
pop
loopne
sbb
insl
ja
pop
adc
sti
sub
rorb
or
cmp
cmc
test
stos
jnp
add
loopne
daa
test
xchg
call
sahf
imul
insb
adc
add
sub
sbb
loopne
pop
xchg
aam
scas
fs
inc
sarl
lds
dec
jmp
shlb
sub
cmp
les
mov
loopne
pop
xor
faddl
in
xchg
jp
sbb
test
push
jbe
mov
cwtl
jo
jo
test
or
xor
in
xchg
sti
in
xor
xchg
adc
adc
xchg
imul
or
inc
lahf
pop
cmpsl
aam
mov
sbb
adc
int
loop
cwtl
fstps
outsl
ror
test
dec
stc
lock
orb
or
and
jbe
sub
mov
jmp
adc
cmp
fwait
je
mov
adc
sub
pop
icebp
pop
stc
add
jle
add
inc
int
xchg
pushw
jns
inc
dec
ret
xchg
dec
push
mov
jbe
or
sarb
xchg
and
shll
aaa
insb
gs
icebp
fistpl
cmp
fdivs
lods
ror
adc
dec
into
cmc
mov
mov
mov
in
add
cmpsb
popf
mov
ds
push
in
test
and
cmpsl
sub
adc
sar
add
divl
xchg
cld
push
jl
repnz
push
pop
fwait
or
test
dec
add
add
pop
push
dec
cwtl
int
add
jmp
lds
mov
mov
les
lret
and
lret
in
push
fdivs
mov
xchg
rcrb
fs
imul
in
dec
cmpsb
jno
and
es
rcll
insl
sub
fiadds
neg
loopne
push
mov
jp
push
xchg
nop
push
cmpsl
jb
xchg
jns,pt
cwtl
mov
stc
addl
xor
loope
stos
loope
aad
pop
nop
rolb
in
mov
lret
add
cmpl
jns
imul
dec
xor
cmp
insl
cmp
lret
xchg
jb
mov
mov
pop
pop
mov
mov
faddl
cmp
add
dec
std
pop
push
sbb
scas
and
xchg
mov
ds
push
iret
mov
sub
push
adc
rcl
imul
dec
popf
push
or
xchg
jb
push
lret
xor
cmpsb
jb
imul
rcrl
lods
or
adc
mov
mov
pop
inc
pop
adc
fildl
cs
fidivs
aad
mov
arpl
sbb
xchg
insl
aad
xor
pop
or
clc
lock
push
jle
mov
pop
and
lods
push
jb
cmpsb
movsb
daa
sarb
xlat
movl
pop
call
sbb
jbe
ds
enter
leave
or
jo
and
iret
dec
add
adc
adc
xor
imul
out
outsb
ja
lods
call
jne
mov
sub
in
pop
rorb
fsubrl
add
sahf
mov
cs
rcr
cmp
ret
jnp
ret
xchg
adc
mov
ss
cmp
inc
es
sub
fstpl
int3
sti
push
add
inc
mov
lock
cmpsb
add
stc
mov
adc
sbb
sbb
fs
lea
pop
enter
push
sub
iret
pop
adcb
push
adc
jns
xor
sti
mov
stc
aaa
movsb
mov
in
mov
arpl
pop
and
xchg
pop
cwtl
int3
repz
adc
jmp
sbb
sbbl
clc
fwait
mov
aam
mov
or
adc
cltd
push
adc
jecxz
adc
dec
push
cmp
arpl
jae
xor
or
fisttpll
mov
xchg
fildll
js
ret
push
daa
adc
ret
and
mov
pop
add
repz
or
jae
iret
mov
and
cmp
bound
push
sbb
ss
out
inc
sbb
fsubl
imulb
outsb
loope
xchg
and
stos
xor
out
dec
nop
cmp
cmp
imul
push
dec
mov
push
and
sbb
cmp
into
mov
mov
pop
push
dec
mov
inc
mov
push
sahf
cmpsb
adc
fiaddl
out
cs
loopne
shr
arpl
xchg
imul
lods
push
and
jb
gs
mov
adc
fidivl
or
cld
ja
pop
daa
or
outsb
fs
in
mov
push
loop
outsb
push
jl
dec
es
loope
sub
lcall
cld
int3
pusha
pop
ds
push
cmp
and
nop
loope
std
es
dec
xor
push
dec
or
fwait
int
mov
add
mov
das
sub
push
cltd
cwtl
aam
aaa
inc
jnp
inc
push
dec
xor
ljmp
inc
xor
hlt
mov
loop
adc
shlb
enter
mov
sbb
icebp
xor
xchg
cmpsl
cmpsb
sbb
jbe
mov
ret
mov
out
lock
pop
mov
fldl
imul
or
popf
mov
popf
dec
loopne
ja
into
xlat
xor
xchg
xor
mov
xor
mov
jo
jp
sbb
xor
sbb
pop
filds
movhlps
inc
pop
push
cmp
scas
jmp
pop
in
xchg
pop
fucomip
mov
xchg
cmp
xlat
xchg
mov
arpl
sahf
shrl
sub
inc
scas
loop
fists
pop
dec
mov
ret
shlb
arpl
test
xor
gs
push
insb
inc
dec
mov
fnsave
dec
je
inc
sbb
insb
xorl
aam
sub
jbe
mov
or
mov
and
loop
mov
push
pop
loop
ficoml
inc
cmp
dec
xchg
pop
or
push
jns
call
call
imul
mov
mov
push
adcl
lods
outsb
shll
xchg
pop
sbb
inc
jb
mov
fcmovbe
xchg
scas
mov
loop
jno
daa
das
jge
loop
fbld
push
push
nop
js
fistl
pop
popa
stos
in
and
mov
pop
dec
push
xor
in
cltd
dec
out
int3
outsb
repnz
insl
lret
pushf
cli
xchg
xorl
cmp
xchg
sahf
call
test
cmp
leave
jo
and
xchg
add
xchg
jle
or
dec
lret
inc
insb
aas
sbb
or
imul
out
lcall
lret
fildll
push
aam
inc
lahf
cs
pop
mov
cmpsl
and
mov
jae
stos
lock
cmp
les
xchg
mov
insb
ds
pop
outsb
cmp
fcmovnu
push
add
jno
fcomps
sti
fcmovbe
ret
call
lock
lret
push
cmp
sbb
js
cmc
mov
xor
jne
in
aas
xor
loope
icebp
sbb
inc
call
and
jo
call
push
cmpsb
push
or
dec
and
and
sub
cmp
xchg
jno
mov
jl
ds
repnz
xchg
cmp
adc
pop
test
xchg
mov
lea
pop
testl
pushf
xchg
add
ss
outsb
sahf
cmc
aas
jb
cltd
xchg
jno
sahf
data16
fstps
fadds
in
mov
addr16
mov
leave
xchg
and
jne
add
insb
js
rep
aam
push
push
mov
mov
or
and
lcall
out
xor
add
mov
scas
sub
mov
dec
and
pop
add
in
out
push
daa
add
out
mov
dec
mov
clc
mov
insb
jnp
mov
divl
movsb
je
cmp
cmpsb
lods
imul
hlt
adc
sbbl
jnp
lea
insb
pop
or
push
scas
push
mov
cmc
push
mov
push
push
leave
mov
mov
aad
insb
mov
jecxz
cmpsl
or
pop
mov
rcr
lret
or
into
into
fisttpl
in
xchg
cmp
mov
repnz
xlat
loopne
jbe
scas
sub
leave
push
sahf
sahf
jl
int
and
imul
cs
jmp
or
dec
sub
insl
sub
mov
xor
and
adc
jno
jo
in
and
pushf
jp
pop
push
and
pop
jo
cmc
or
inc
xchg
js
ljmp
cs
mov
sub
lods
pop
int
imul
pop
sub
fisubrs
cmpsb
pop
ljmp
push
xchg
in
xor
out
jno
aam
push
lcall
andb
arpl
dec
test
ja
insl
movsb
pop
mov
iret
inc
sbb
test
xchg
into
dec
cmc
fstl
lret
rcrl
adcb
pop
cmp
push
dec
call
xor
popf
push
repz
lods
add
lods
xchg
xchg
mov
loop
mov
inc
leave
cmp
lods
enter
cltd
lret
ljmp
fwait
ljmp
scas
test
sub
out
xchg
push
push
cmp
sbb
xor
mov
xchg
cmp
xchg
mov
inc
repz
sti
cmp
sbb
xchg
dec
iret
clc
cmpsl
cltd
aaa
sbb
adc
pop
ss
dec
loopne
cmp
xor
pop
je
inc
add
leave
pop
mov
pop
dec
sbb
push
aad
ret
cmp
sub
inc
fdivrl
jmp
dec
mov
leave
xor
push
pop
std
mov
cmp
sub
outsl
aam
mov
shl
clc
push
inc
dec
movsb
das
or
icebp
pop
lock
mov
jne
stos
sub
xor
int
mov
test
int
dec
mov
stc
fcoms
pop
notb
fdivr
adc
and
lea
xor
rorl
lods
lea
cli
sub
outsl
xor
js
push
scas
insl
jmp
in
mov
push
xor
dec
or
adc
and
mov
imul
pop
jbe
js
mov
gs
xor
aad
adc
ficomps
pop
pop
mov
fwait
jle
lock
lock
lods
adc
iret
mulb
iret
cwtl
out
inc
cwtl
cmp
das
aad
xchg
adc
ja
adc
sub
popa
insl
cmp
mov
std
pop
faddl
jbe
sub
xor
cmpsl
xchg
cmpsl
fs
testl
cmc
pusha
or
jae
sbb
adc
mov
out
scas
jg
mov
inc
dec
pusha
or
outsl
mov
cmpsb
lret
mov
mov
rorl
xchg
incl
cmpsb
lret
jo
add
into
jo
fnstenv
cmp
mov
jbe
jno
dec
pop
jmp
sbb
adc
jl
pushf
dec
loope
push
jl
jmp
xchg
mov
mov
or
in
nop
clc
pop
jp
cmp
repz
mov
pop
fstpt
rcll
sbb
pop
adc
or
sbb
or
bound
ja
fs
push
int
jno
cmp
push
lret
jno
jae
cmpsl
mov
sub
pop
push
mov
lock
xchg
and
dec
stos
add
lods
es
loop
mov
xchg
movsl
adc
ret
loope
jge
add
jmp
movsb
sbb
push
daa
subl
mov
mov
int3
cwtl
mov
les
adc
mov
sbb
mov
popa
xchg
es
sbb
xor
dec
add
jge
mov
lcall
pop
jge
cmp
test
ds
jns
mov
sub
scas
push
mov
jo
ja,pt
fsts
fidivl
test
ss
int3
iret
ljmp
xor
sub
sti
into
lock
pop
or
sub
notl
adc
scas
pop
popf
push
push
leave
xchg
push
xchg
xchg
dec
dec
pop
pop
pop
mov
int
fnsave
inc
movsl
cmp
mov
shrb
mov
mov
mov
gs
push
inc
cmp
in
push
fs
push
sbb
push
nop
xchg
fisttpll
lods
inc
cmp
nop
dec
xor
mov
cmpsb
xchg
cmp
cmp
mov
mov
rcrl
sub
pop
push
ljmp
inc
mov
cmp
pop
fistps
scas
lret
sbbb
out
and
push
loope
test
jns
cltd
adc
mov
daa
push
mov
mov
and
lock
js
ret
sbb
ficoms
xchg
shr
andnps
iret
popa
in
push
xchg
in
add
iret
lret
mov
cmpsl
jne
test
stos
paddsw
bswap
dec
out
jp
sub
movsb
sbb
aam
mov
sahf
xor
mov
push
pop
repnz
jg
cmc
dec
std
jbe
inc
pop
mov
mov
stc
cs
sub
loop
in
xchg
xor
xchg
cmpsl
fcmovnbe
lea
bound
jp
adc
pop
xchg
xor
adc
sbb
sbb
xchg
mov
mov
xlat
dec
dec
inc
adc
push
adc
mov
cmp
fisubrl
test
insb
popa
movsl
jb
pop
sub
mov
or
ret
shlb
or
daa
push
push
xlat
push
pop
xor
orb
enter
jns
ss
mov
stos
cmp
test
insl
jo
push
mov
push
sbb
push
fldl
mov
in
mov
int3
sti
sbb
ret
jge
push
add
movsb
and
cli
les
push
test
xchg
je
scas
bnd
fistpl
popf
adc
jae
movsl
or
add
jp
sbb
mov
lahf
xor
loop
decb
sub
push
stos
push
inc
out
mov
fdivl
sarb
imul
dec
pop
sub
sub
mov
loop
mov
loop
std
jmp
inc
add
mov
or
movsl
jae
xor
push
inc
mov
dec
stos
or
add
cmp
pusha
clc
dec
xchg
jb
sub
xchg
push
fcomps
lcall
sub
jb
lods
cmp
fisubs
mov
mov
outsl
adcl
jp
shl
mov
rcrl
pop
mov
lds
call
inc
testb
xor
xor
jle
xchg
and
adc
dec
and
in
or
lcall
lods
dec
popa
mov
cmp
xor
popf
aam
ficoms
xor
aam
fs
es
clc
add
mov
bound
stos
push
dec
push
mov
mov
notl
fldl
test
sbb
test
push
ret
sbb
lods
dec
push
push
lea
sbb
and
das
addl
ret
test
ret
xchg
scas
mov
pop
sub
and
mov
add
sbb
fmulp
push
in
imul
add
cmp
jns
push
subl
adc
mov
insb
addb
ss
xor
push
dec
xor
notb
stos
sti
adc
mov
or
sub
stc
xor
mov
push
lahf
mov
int
sbb
es
lods
xchg
mov
das
fldenv
dec
xchg
or
push
adc
xchg
adc
jl
mov
jle
lea
fs
push
jb
push
lds
mov
push
out
jae
pop
inc
add
cmc
into
outsl
mov
mov
leave
xchg
int3
js
xchg
mov
inc
add
cmpsb
jo
pop
cbtw
add
andl
xor
sub
jmp
lea
inc
pop
stos
rcr
test
mov
push
insb
std
jne
add
sub
insb
jae
jge
adc
push
jge
les
pop
jbe
arpl
hlt
out
jae
push
adc
sub
arpl
es
out
and
pop
aas
push
mov
xchg
xchg
add
jns
je
xor
imul
in
sbb
add
stc
jb
push
je
sub
and
add
xchg
inc
inc
adc
mov
xlat
ds
gs
bound
cmpsl
add
aad
nop
loope
jle
or
nop
push
inc
fwait
lds
es
pop
sub
sub
dec
les
sub
arpl
xchg
inc
mov
popf
scas
cmp
sbb
ror
ja
mov
fmuls
mov
inc
cs
add
int
shlb
js
int
movsl
test
int
cwtl
jb
inc
pop
subl
push
jo
sub
and
pop
lock
dec
pop
or
shlb
loopne
sbb
stc
fidivrs
mov
cld
ret
pusha
jno
into
dec
xor
cmp
pop
jo
and
dec
and
push
push
jo
movsl
lcall
mov
push
add
add
xchg
xchg
fmuls
mov
xlat
sarl
aaa
push
or
xor
pusha
mov
es
pusha
stos
outsb
rcr
cmp
push
or
scas
rolb
pusha
push
lcall
fmuls
jo
sub
iret
out
mov
inc
add
fbld
sbb
lock
push
cltd
or
xchg
push
and
and
pop
mov
push
aas
scas
cmp
test
dec
adc
adc
out
scas
dec
mov
mov
mov
subb
push
mov
stc
mov
cmp
scas
mov
adc
adc
sarb
jne
sbb
jae
jne
test
inc
sti
sbb
and
jg
nop
test
adc
mov
das
call
repnz
rcrb
insl
pusha
or
loop
lcall
adc
outsl
lahf
je
dec
shl
fistps
aad
xlat
clc
push
int
push
ss
js
movsl
call
xchg
xchg
dec
push
mov
lea
cmc
adc
nop
fisubs
xchg
iret
lahf
pop
stos
cmpsb
stos
int3
call
jg
and
mov
jp
jne
push
pop
mov
sti
xlat
iret
cmp
rcrl
stc
fisttpl
push
mov
inc
push
jbe
jb
mov
ret
rep
jbe
loop
rsm
cs
xor
shll
ds
lods
mov
das
dec
mov
pop
push
dec
sub
sbb
cld
add
leave
je
jno
outsb
and
test
and
insb
ss
dec
xorl
or
ljmp
mov
rorb
in
mov
je
adc
adc
in
jae
js
push
dec
addr16
adc
test
ret
inc
das
cmp
maxps
jne
pop
pop
aaa
add
call
xchg
pop
pop
push
fwait
or
mov
lods
das
xchg
loopew
aad
imul
test
mov
fbld
sub
add
cmpsb
imul
movsb
dec
fsubrs
fistps
loopne
push
mov
or
push
into
mov
pop
xchg
dec
cmp
cmpb
call
push
mov
mov
push
adc
push
pop
icebp
in
lods
push
sbb
xor
xchg
xor
xor
in
cld
mov
mov
inc
mov
daa
mov
push
adc
js
cmp
movsb
mov
das
jne
push
out
xchg
cmp
dec
stos
jb
pminsw
shr
mov
add
lret
mov
bnd
daa
test
or
pop
fildll
leave
mov
pop
mov
dec
movsb
mov
dec
movsl
sahf
sbb
fsubl
or
cmpsb
repz
imul
dec
xchg
jge
cmp
popa
es
divb
cmp
ficompl
or
inc
mov
push
cmp
in
jo
fcomps
movsb
push
in
mov
test
and
xchg
orl
add
mov
mov
mov
push
sti
hlt
insl
mov
push
enter
push
push
push
stc
stos
cmp
std
insb
adc
shrl
xchg
cmovl
push
inc
sub
std
xchg
sbb
ja
xor
idivb
fsts
pop
int3
or
pop
xchg
stos
mov
pop
xchg
pusha
or
xor
stos
add
ds
and
inc
push
fmulp
inc
xchg
mov
cmp
imul
lretw
sbb
cmp
adc
fidivs
inc
ret
lea
jecxz
das
out
mov
fildll
or
fmull
repnz
mov
loopne
mov
mov
push
dec
in
pop
lods
push
adc
leave
cmp
nop
push
scas
fcompl
push
jns
js
loop
arpl
and
std
lcall
or
push
loopne
pop
imul
lret
mov
mov
scas
dec
in
rcrb
out
inc
jno
adc
mov
popa
sbb
filds
mov
nop
and
dec
and
int
leave
rcll
jo
mov
adc
push
cmp
add
mov
sbb
sbb
das
shrb
sbb
add
es
mov
add
ret
xchg
jl
pop
mov
push
inc
push
adc
sub
hlt
fisttps
or
fstpl
in
push
sub
sbb
nop
into
xor
loopne
inc
adc
mov
sbb
push
loope
sahf
mov
lret
repnz
and
popf
mov
or
jmp
imul
jns
pop
xchg
lods
or
fs
shl
in
ret
cmpsl
cmpsl
and
jge,pt
insl
ja
jno
sbb
jne
ret
push
xchg
jecxz
and
sti
dec
cmp
imull
dec
aaa
rcr
dec
add
jecxz
int3
pop
mov
shlb
lret
rcrb
stos
hlt
cmp
cmovs
adc
insb
test
movsb
cmp
movsb
inc
jno
and
add
call
les
jl
test
fsubrl
lcall
rorb
outsl
int3
mov
jmp
daa
cmpsb
icebp
jno
push
nop
insb
jno
fldcw
push
mov
imul
pop
pop
daa
inc
jb
sbb
add
adc
or
pop
jbe
cmpl
mov
inc
outsl
hlt
lret
into
gs
xor
jmp
pop
sub
xor
xor
inc
std
cs
push
mov
fstps
mov
jmp
dec
fwait
in
push
ljmp
hlt
jmp
sub
stos
ds
adc
mov
ficoms
scas
outsl
pop
sbb
ljmp
scas
add
sahf
sti
sbb
pop
inc
mov
xor
dec
flds
bound
lcall
push
cli
jecxz
push
lret
fsubrl
outsb
or
test
fs
dec
fwait
xchg
dec
and
xor
and
scas
pop
dec
mov
inc
jns
jns
dec
cmc
daa
rcrl
sbb
es
mov
mov
test
sbb
sub
pop
divl
and
mov
leave
ljmp
pop
stos
je
sbb
call
movsl
adc
sbb
popa
cmp
jbe
mov
cld
test
daa
pop
lahf
icebp
and
shrb
adc
lret
xor
cmp
jmp
sbb
inc
push
mov
aam
mov
scas
mov
hlt
cmpsb
ret
xchg
lcall
pop
repz
call
mov
or
jnp
sbb
popf
mov
adc
inc
insl
int
or
push
fcmovbe
leave
outsb
sub
pop
int3
ret
mov
addb
and
push
push
pop
lret
test
imul
or
lock
inc
and
test
sahf
mul
fldcw
push
mov
pop
jg
pop
pushf
rclb
xchg
imul
xchg
out
fcmovnu
ljmp
stos
push
sti
xor
xchg
mov
mov
std
enter
and
data16
push
push
mov
mov
xor
std
ljmp
cmp
jmp
arpl
mov
jo
int3
lods
xor
test
mov
pop
inc
dec
imul
and
jae
in
mov
dec
fcmovb
xchg
stc
mov
add
xlat
push
scas
sarb
in
lods
mov
xchg
adc
data16
xlat
out
xor
sbb
sbb
std
shrb
std
mov
dec
call
nop
aaa
push
js,pt
out
dec
jnp
dec
fstpt
mov
clc
cltd
jecxz
imul
cmpsl
fadds
add
cli
xchg
testl
mov
jge
nop
aas
test
dec
jbe
sub
cmpsl
cmp
dec
mov
mov
enter
jecxz
sub
cmp
add
movsb
ffreep
add
jne
mov
mov
sti
movsb
fmull
cmp
shll
lock
xorb
jmp
sub
inc
scas
adc
sahf
aad
fistpl
pop
repnz
pushf
ret
xchg
sbb
into
and
mov
mov
xor
xor
imul
pop
jns
push
jno
dec
jb
push
xor
leave
push
push
or
mov
dec
outsl
dec
js
mov
mov
mov
lock
push
xchg
xlat
cld
jo
stos
scas
fistl
mov
fnstsw
inc
movb
and
xor
addl
cltd
movsb
lret
mov
push
and
ss
outsb
mov
in
fs
dec
or
das
xchg
xor
addr16
sbb
movsb
jns
cmp
aaa
inc
jmp
mov
insl
int
adc
les
sbb
inc
sub
ret
mov
aaa
inc
xchg
inc
dec
inc
rcl
adc
sbb
adc
xlat
lds
out
mov
test
mov
push
jge
cli
and
rcr
ja
sbb
mov
push
mov
sbb
cltd
in
jl
repnz
fcoms
sbb
bound
mov
inc
mov
mov
popa
pop
mov
mov
arpl
or
lahf
gs
cmp
cmpsb
push
sahf
orb
sarl
and
jo
mov
int3
jnp
test
xchg
sbb
cmp
divb
es
fdivl
add
mov
std
and
in
outsb
cmp
lea
dec
xchg
das
inc
test
andb
test
movsb
add
clc
or
inc
lret
jg
outsb
jo
scas
lahf
inc
xchg
jmp
aam
loopne
sub
rorb
push
pop
ret
loop
jmp
push
sbb
test
jne
shll
jl
insb
mov
mov
jle
lea
add
pop
insb
jns
push
push
sub
imul
xchg
cli
and
sti
mov
repz
or
xor
aas
jmp
xor
sbbb
jg
lods
or
ret
pop
mov
dec
and
or
sbb
ds
and
idivb
push
in
mov
and
iret
push
insb
pop
dec
dec
out
pop
dec
jbe
mov
push
repnz
jae
mov
lea
pop
sub
pushf
into
js
sbb
adc
mov
xor
xorl
cmp
dec
mov
outsb
testl
adc
pop
cmp
xor
pop
mov
je
mov
jb
xor
xchg
pushf
mov
mov
pop
daa
fwait
and
sti
and
out
inc
xor
xchg
cmp
jp
daa
mov
jb
iret
jne
in
inc
in
imul
adc
push
test
subl
xor
add
stos
push
inc
add
outsl
or
shl
mov
add
cmp
cld
mov
or
mov
dec
inc
subb
daa
hlt
push
sbb
or
push
mov
addr16
pop
stos
pop
out
hlt
adc
mov
sarl
cmpsb
mov
cmp
adc
aam
inc
mov
pop
js
cmc
repz
das
dec
out
and
out
call
jecxz
pop
and
icebp
xrelease
stc
cmp
int3
pop
mov
mov
jge
popf
fisubl
mov
pop
push
into
in
xor
int
jl
lret
fisubrs
daa
push
add
fidivrs
les
pusha
fisubrl
push
in
inc
and
add
lret
insl
xchg
std
push
pushw
les
mov
dec
in
mov
enter
test
or
enter
push
mov
xchg
xlat
xor
bound
cmp
mov
pop
and
adc
es
pop
das
cld
rorl
pop
jo
add
push
adc
ds
xor
dec
xchg
lcall
out
aaa
ja
sub
stos
pop
dec
fisubrl
loop
jno
push
mov
icebp
fs
jmp
jae
iret
imulb
xor
sbb
pop
add
mov
int3
xchg
adc
dec
movsb
cmpb
andl
push
mov
inc
xchg
int3
in
dec
outsl
xchg
mov
push
mov
xchg
int
in
cmpsl
push
inc
or
adc
mov
xchg
sti
pushf
lcall
mov
in
in
cmp
icebp
sbb
mov
add
daa
popa
and
in
jp
xchg
adc
mov
jecxz
jle
ds
or
push
in
jmp
mov
outsl
and
les
adc
fsubr
push
sbb
mov
out
lahf
xchg
outsl
sub
imul
cld
fstpt
nop
clc
jmp
movsb
shrl
mov
pop
pop
xor
cmp
jle
inc
aad
aad
pop
shlb
jle
int3
push
add
jecxz
and
mov
cwtl
iret
bound
jge
test
add
insl
inc
mov
push
and
out
iret
sbb
subb
xchg
test
les
subl
ret
push
xchg
adcl
loopne
inc
xchg
pop
ret
lahf
inc
cld
xchg
dec
inc
xchg
ljmp
or
xchg
add
pop
push
or
mov
rol
pop
test
sub
jmp
push
mov
pushf
jecxz
sahf
cmp
mov
push
pop
dec
cltd
xchg
add
aad
inc
in
adc
cmp
cmpsl
lcall
push
pop
aaa
sub
sahf
jle
out
cmp
or
in
loopne
push
and
sahf
mov
fisttpll
pop
je
xor
addb
int
fucomp
inc
add
ljmp
shrl
roll
jno
orl
inc
sbb
push
inc
mov
push
popl
scas
mov
in
popf
adc
push
mov
mov
pop
daa
jmp
sahf
sbb
pop
pop
hlt
cmp
into
cld
cmpsl
add
fwait
jne
xor
les
dec
add
dec
mov
mov
decl
jnp
outsl
popf
clc
js
sub
xchg
incb
sbb
push
lea
xchg
or
andl
orl
es
aaa
aaa
push
pop
xchg
roll
cmp
outsl
push
andb
mov
or
mov
cmp
mov
mov
cmp
xor
dec
sub
sbb
mov
sbb
lea
xor
std
sub
push
lock
sbb
jecxz
pinsrw
scas
cmp
les
xlat
xchg
xchg
dec
test
push
xlat
jns
or
xchg
mov
fsub
pop
cmp
and
push
aas
orl
cmp
jns
sub
decl
add
cmpsb
mov
add
cs
pop
sbb
sahf
ret
jbe
pop
iret
cmp
aad
inc
fisttpll
xchg
mov
jae
pop
movsb
movsb
push
inc
xchg
mov
jmp
xor
cld
add
subb
or
or
filds
hlt
ljmp
shll
mov
arpl
mov
arpl
flds
pop
sub
out
dec
mov
ffree
decb
mov
adc
shll
into
cmc
pushf
adc
xor
xor
cmp
jne
xorps
ss
xor
cmp
mov
and
sub
orb
ret
pop
jmp
mov
dec
sbb
leave
push
repnz
fdivs
jp
sbb
cmp
dec
ds
arpl
rcr
insb
inc
les
ss
jle
sbb
ret
jbe
popa
ret
popa
mov
jnp
popa
jl
popl
fsubl
xchg
jle
shrb
mov
mov
iret
sbb
fldl2t
pushf
enter
hlt
inc
orb
sub
hlt
sbb
inc
cld
daa
cltd
sbb
sbb
jns
or
or
jp
dec
std
adcl
push
mov
jp
fistl
addr16
xchg
test
cmp
xor
repnz
push
push
out
and
xchg
or
sar
adc
imulb
xchg
inc
into
mov
inc
test
pop
rclb
outsb
iret
cmp
ret
pop
jg
repz
rcll
icebp
insl
xor
dec
and
sbb
sub
cltd
push
or
lret
adc
aam
loop
shrl
adc
cmp
sub
jg
sub
dec
jp
push
jae
mov
jbe
lahf
decl
mov
xorb
pop
cltd
push
jb
add
xor
fmuls
das
cmp
cltd
pop
dec
imul
cmpsl
lods
xchg
jmp
jns
and
cwtl
mov
cmp
mov
in
cmc
adc
push
dec
rcl
das
lret
sbb
jbe
pop
nop
outsl
mov
icebp
hlt
sbb
inc
negb
pop
adc
negl
mov
add
xchg
sub
inc
sub
sub
pop
and
mov
psubw
cs
dec
mov
into
js
dec
push
cmc
aaa
call
and
call
sbb
inc
fwait
sbb
push
cmpsl
fisubs
adc
aas
push
cmc
pop
xlat
std
jmp
adc
pop
std
shll
jge
ds
push
adc
and
or
and
push
sbb
inc
sbb
dec
testb
arpl
mov
subb
mov
adc
pop
push
mov
movsb
js
mov
jbe
jl
or
push
out
stos
filds
negb
repz
lock
or
enter
sbbb
cmp
in
loopne
sbb
dec
adc
or
pop
scas
sbb
push
subb
mov
cmpsl
push
arpl
aam
test
dec
or
cmp
mov
pop
push
mov
mov
inc
pop
xchg
or
stc
inc
jb
lods
sub
xor
cmc
lahf
adc
inc
das
movsl
or
push
in
adc
call
in
push
jge
fmul
sbb
mov
jae
out
fs
mov
xor
jecxz
fs
dec
pop
repz
mov
sbb
cli
cmp
mov
mov
stc
inc
and
sub
fiaddl
lcall
outsl
jmp
jne
std
sbb
mov
dec
pop
pusha
cmp
push
out
sub
adc
mov
push
cmp
enter
ret
decl
sbb
sbb
xchg
std
decb
out
xor
push
repnz
xchg
repnz
inc
sub
mov
and
sub
pop
lock
mov
cmp
add
cmpsl
dec
pop
xchg
cmp
int
jae
icebp
sti
or
ljmp
mov
shll
cltd
clc
inc
push
and
mov
test
push
lret
sub
filds
scas
cmpsl
inc
push
dec
xchg
xchg
mov
sub
outsb
or
sbb
lods
andb
adc
arpl
adc
jecxz
lahf
xor
pop
cmpsb
je
rorb
add
xor
shll
sti
cmp
jnp
adcl
lret
popa
mov
flds
int
outsb
fistpll
adc
out
rcrl
rorl
rolb
fdivrs
stc
fwait
clc
movsb
sti
inc
pop
lods
xchg
and
clc
xchg
jae
ljmp
iret
dec
sbb
int3
aaa
int3
insb
ficompl
dec
sub
and
stos
cmpsb
sbb
mov
push
aam
sbb
enter
aam
dec
sbb
aaa
pop
and
imul
addl
mov
jle
imull
dec
sub
xor
ret
sbb
jbe
and
sub
insb
push
loope
jo
cli
ret
jno
jge
or
sub
push
data16
sub
inc
ss
mov
loopne
and
shl
fadds
sbb
xchg
sbb
jge
shlb
dec
mov
fsubrp
jg
sub
out
test
mov
xorl
pusha
shrl
push
cmpl
repz
sbb
jge
pop
cmp
insl
in
cmp
testb
fsts
dec
push
xchg
add
mov
mov
lods
mov
mov
jg
pop
inc
push
add
push
jp
sti
jle
sbb
stc
cwtl
xchg
lret
loopne
xchg
jo
cmpsb
shld
arpl
dec
ja
pop
adc
nop
inc
cwtl
push
pop
add
mov
xchg
or
cmc
xchg
icebp
and
adc
loope
testb
sub
mov
xor
dec
insb
in
pop
inc
mov
int3
lock
les
aam
xlat
jecxz
frstor
mov
pop
test
cmp
pop
test
push
je
inc
imul
leave
sahf
dec
and
sub
cmp
ds
fdivr
insl
stos
sbb
cmp
cmp
movsb
std
lret
test
xlat
inc
pop
add
pop
fs
data16
out
out
pop
lock
mov
dec
shlb
push
jp
ret
mov
lret
stc
and
push
push
mov
into
es
jbe
mov
cmc
sbb
mov
mov
push
jg
pop
leave
jb
mov
pusha
dec
jae
cmp
ja
mov
sbb
sub
and
push
push
daa
scas
push
mov
xchg
out
cmc
sbb
xchg
or
int
clc
mov
mov
inc
xchg
pop
repnz
inc
mov
lret
mov
dec
out
ja
push
or
stos
int
and
adc
into
cmp
sahf
std
mov
stos
lea
xchg
lds
sub
or
pushf
dec
xchg
hlt
jle
int
enter
pop
scas
push
hlt
loopne
fwait
fs
push
or
roll
fadds
test
jnp
sub
jl
inc
add
mov
jno
outsb
sbb
and
mov
inc
fisttpl
xchg
mov
and
adc
sbb
pop
imul
or
mov
mov
rcrl
xchg
cmp
movsl
nop
outsl
jl
fadd
insb
scas
inc
dec
xchg
xor
push
xchg
push
adc
aas
inc
sbb
and
fwait
popa
xchg
shlb
test
xor
das
mov
aaa
pop
sub
js
lret
push
ror
mov
stos
mov
mov
xchg
mov
push
sbb
pop
orl
push
insb
mov
clc
ret
subb
dec
jae
jns
push
pop
push
gs
adcl
dec
adc
and
aas
jns
insl
adc
arpl
call
push
and
inc
sub
ficomps
xor
xor
sub
sbb
outsl
mov
lea
push
fildll
in
ret
xor
loop
dec
cmc
stos
loope
insl
or
sahf
sbb
pop
bound
aad
iret
jbe
and
insl
jge
sub
cmpsb
adc
xchg
cmp
xchg
cltd
arpl
es
shrb
pusha
mov
scas
add
push
out
cmp
call
mov
iret
jns
jbe
test
push
test
xchg
icebp
add
cmp
std
pop
xor
mov
fstpl
iret
pushf
repz
inc
aam
fs
pop
out
dec
adc
or
mov
add
lcall
or
mov
and
jo
mov
lret
push
mov
push
insl
inc
ja
ret
imul
shl
cmp
mov
ret
popf
xchg
jnp
push
sahf
pusha
xchg
mov
pop
loope
in
lahf
sub
in
iret
lret
aas
push
or
out
nop
xchg
testb
jmp
mov
sarb
jmp
jle
jle
ret
cmp
stos
xchg
out
mov
cmp
loope
lea
adc
xchg
shlb
push
movl
and
popa
ss
in
mov
ficompl
pop
jbe
mov
das
dec
and
dec
push
orb
cmc
mov
sarb
mov
int3
xchg
outsb
mov
push
push
sbbl
jb
cmp
pusha
pop
pop
cmp
call
push
cwtl
or
cli
adc
sub
jle
push
mov
add
push
mov
dec
xchg
xor
push
repz
stc
mov
add
cwtl
xchg
nop
int3
lea
insl
test
mov
aaa
arpl
inc
xlat
mov
sub
and
mov
or
roll
xchg
pop
ljmp
and
pop
mov
jp
movsb
jmp
sub
dec
ljmp
icebp
pop
fistpl
cmp
xor
jmp
gs
jge
stos
jecxz
cmc
int
xchg
ret
ret
ja
mov
rclb
daa
xor
repz
sar
pop
inc
int3
pop
bound
test
inc
lret
add
repz
dec
stos
mov
arpl
mov
lea
clc
ret
dec
mov
xchg
jmp
lahf
jg
or
and
adc
cmp
cmp
inc
aam
fdiv
jns
in
dec
out
mov
cmp
aam
jecxz
cwtl
adcl
sti
js
pusha
adc
adc
fs
cmc
test
movsb
dec
inc
fnstenv
mov
pop
add
cld
adc
into
cmp
not
sub
mov
ficoms
loope
leave
pop
dec
push
push
lods
mov
xor
push
mov
xchg
dec
xor
rclb
dec
xchg
jp
mov
mov
jne
cli
sub
out
or
test
loop
arpl
xchg
adc
enter
push
jno
push
scas
aaa
enter
and
push
add
adc
aam
popa
push
xchg
add
jmp
xorl
cmp
lcall
push
repnz
insl
sub
out
jl
add
cmp
imul
ret
shlb
inc
rcr
sbb
sub
and
imul
in
rclb
daa
dec
mov
add
jne
push
add
mov
ss
or
cmpsb
xchg
xor
add
ret
decb
mov
push
fimuls
cld
outsl
add
nop
into
out
jle
movsl
push
dec
movsl
vmulsd
cmp
call
pop
fwait
out
mov
scas
outsl
gs
add
mov
xor
pop
cmp
cmpsb
push
sub
jbe
and
sarl
xlat
xchg
jl
lret
out
insl
adc
lea
cmpsb
in
mov
orb
loope
mov
test
mov
pusha
dec
or
dec
mov
inc
pop
pop
adc
testl
or
mov
lahf
aad
push
dec
push
dec
stos
scas
sahf
cs
jge
push
shlb
sub
lea
data16
xor
out
cli
mov
jmp
xor
je
inc
push
aad
std
mov
sub
hlt
pop
jecxz
into
js
dec
mov
add
imul
mov
sarl
pushl
pop
pop
sbbb
notl
cwtl
sti
xlat
out
les
sub
bound
xchg
sub
xchg
jnp
daa
xor
jne
out
and
pop
pop
shrb
enter
push
xchg
cmp
or
loop
adc
cmp
push
cmp
shr
dec
aaa
sbb
mov
push
popf
mov
mov
xchg
es
dec
call
lds
jle
arpl
bound
outsl
lahf
js
shll
arpl
aam
push
dec
cmp
dec
xchg
or
cmp
mull
dec
in
or
rorl
dec
adc
scas
jae
loop
xchg
sub
mov
insl
mov
clc
push
or
rorb
or
divb
out
add
push
movsb
xchg
ja
std
fisubrs
loop
add
xchg
mov
dec
leave
fldenv
mov
movsb
std
sub
jno
in
add
rcrb
add
icebp
push
lds
adc
movb
adc
nop
jp
jnp
fnstsw
das
cmp
jle
and
ljmp
mov
movl
cmp
adcb
js
and
aas
ror
ljmp
lahf
xorb
push
xor
xor
cli
fcoml
xorb
das
ljmp
test
testb
cmp
dec
lret
add
lret
mov
inc
xor
dec
rolb
test
push
and
aad
cld
sbb
icebp
jecxz
movsl
sbb
outsl
jmp
mov
inc
pop
nop
cmp
jae
and
pop
fisubrl
mov
jle
xchg
adc
push
xchg
push
hlt
mov
es
xchg
stos
lods
jae
pop
mov
adc
jmp
inc
sbb
flds
aad
adc
xchg
inc
inc
insl
insb
js
xlat
call
lret
jp
jb
jg
arpl
mov
xchg
xor
cmp
fimull
insl
test
popf
lret
int
std
les
add
daa
sbb
or
adc
loope
sbb
popf
int
shl
sub
mov
test
in
test
mov
scas
popa
pop
dec
xchg
mov
idivb
mov
jg
lret
xchg
je
lret
mov
xchg
lods
jmp
sub
lcall
and
ret
aad
mov
jo
setae
mov
push
xchg
jmp
sub
cwtl
test
sub
xor
rcrb
fs
mov
jo
mov
out
addb
push
mov
stos
push
lret
xchg
cmpsb
imull
sahf
xor
xchg
inc
repz
aas
data16
pop
lea
adc
xchg
push
push
pusha
nop
movsb
pop
inc
aaa
cmc
or
in
adc
sbb
mov
andb
xor
outsb
mov
clc
xor
pop
sub
stos
popf
fs
imul
mov
sbbb
and
mov
into
in
std
int
sahf
test
sub
pop
jmp
jp
sub
pop
cs
mov
dec
add
into
cltd
out
mov
insl
nop
adc
pop
leave
mov
adc
gs
push
pop
mov
sahf
cltd
fcomps
je
jo
insb
addr16
mov
pop
fisubs
add
addl
add
cli
mov
outsb
scas
fisubrl
push
mov
leave
inc
fcomps
xorb
or
sub
xor
lods
loopne
mov
test
testb
mov
call
or
sbb
sbb
nop
mov
jg
xlat
push
mov
jne
lea
mov
jmp
aad
incb
idiv
xlat
and
test
mov
std
aam
xlat
lret
push
rclb
rolb
adc
mov
aas
cmpsl
and
push
inc
test
insb
sti
out
mov
mov
or
xor
mov
mov
xchg
mov
jecxz
inc
xchg
inc
testl
xchg
xchg
cmpsl
bound
pop
sub
out
in
mov
or
hlt
mov
dec
push
ret
jbe
data16
stos
push
push
nop
sub
fstpt
leave
and
jno
lahf
inc
push
out
cmp
or
jne
inc
shlb
add
dec
ret
stos
jmp
loop
lret
inc
sub
mov
pop
xchg
in
xor
or
clc
sub
js
outsl
pushf
test
ja
mov
cs
jbe
cltd
xor
jne
dec
inc
movsl
insb
jecxz
xor
mov
xchg
mov
lret
pop
xchg
sti
in
mov
add
pop
cwtl
mov
jl
sbb
cmpsl
fcomps
inc
and
test
push
mov
jge
xchg
sub
jne
adc
sahf
arpl
mov
dec
pop
lds
std
sbb
test
or
les
sbb
jge
fnsave
test
sub
sti
sbb
jb
sbb
aaa
lret
jae
xor
xchg
cld
mul
fst
jp
into
add
xor
cli
popf
add
add
pop
mov
lahf
xor
adc
repnz
aad
daa
stos
shrl
cltd
imul
mov
xchg
nop
gs
jecxz
push
and
vphadddq
pop
daa
rcll
xor
arpl
out
inc
push
out
xchg
mov
out
dec
or
popa
cli
push
mov
mov
shlb
add
cmp
loop
cmpsb
cli
inc
rcll
add
and
xchg
add
cmp
movsl
cld
pop
lahf
pop
movsl
dec
mov
dec
jg
mov
fsubs
cmp
fwait
inc
jmp
insl
loope
add
mov
mov
mov
insl
sub
and
jg
sub
sbb
sahf
fmull
movsb
xor
xchg
scas
ret
adc
daa
test
sub
inc
add
ficomps
and
mov
xlat
dec
outsl
sub
inc
pushf
outsb
mov
in
push
add
mov
cmp
lret
xor
cmp
and
mov
dec
ss
std
pop
mov
out
and
rorb
cmp
test
pusha
dec
push
repz
mov
dec
xchg
cmpl
ret
mov
mov
stos
sti
mov
inc
sbb
or
int3
jg
jge
jl
fildll
pop
mov
pusha
inc
cmp
pop
in
or
stc
mov
pop
std
pop
out
fdivs
mov
insb
pop
mov
inc
test
xor
dec
stos
cmpb
fcoms
inc
je
xor
aaa
mov
mov
int3
hlt
xlat
lret
lods
mov
bound
cmc
orl
adc
es
test
out
pushf
andl
not
das
lds
inc
imul
cmpsl
xchg
dec
jno
rorl
sub
ja
adc
mov
push
ret
es
mov
movsb
cli
add
jno
aam
fwait
xor
loope
sbb
inc
inc
lds
mov
popl
push
xchg
pop
enter
stc
pop
mov
mov
mov
xchg
sahf
ror
call
push
clc
es
test
cmp
add
test
sub
lds
sbbb
or
loopne
cmp
hlt
pop
inc
cmp
fdivrs
pushf
add
xor
pop
lahf
inc
jecxz
mov
dec
outsl
jecxz
test
or
jecxz
fcmovne
jp
fsubrp
dec
fists
nop
test
cmpb
cmp
and
repz
mov
int
jno
cmp
xchg
idivl
or
sbb
out
jecxz,pn
adc
pop
sub
data16
and
push
lds
jge
sub
or
xlat
sbb
pop
insl
mov
push
push
cmc
jecxz
dec
dec
repnz
push
filds
gs
mov
pop
push
rorb
das
and
mov
mov
lahf
jnp
out
add
jnp
shlb
sub
bound
in
in
cli
ret
iret
cld
out
jae
inc
out
aam
xchg
push
push
push
mov
add
add
mov
cli
xchg
jg
or
pop
mov
add
add
push
xor
sbb
inc
fcmovb
test
xchg
push
aad
mov
outsb
dec
ljmp
pop
repnz
daa
shl
inc
stos
imul
int
mov
pop
call
ficomps
and
sub
sbb
jno
adc
and
mov
xchg
sahf
cld
jo
push
faddl
fiadds
mov
sub
call
inc
jmp
cmpsb
add
mov
or
xchg
leave
adc
pop
je
add
sbb
pop
xor
cmp
fdivrl
and
jg
popf
jb
xor
and
sarb
and
sbb
jmp
repnz
jge
data16
mov
cmpsb
pop
push
fdivrs
in
mov
cmpsl
divb
push
pcmpgtd
and
mov
into
push
in
add
call
pinsrw
push
sub
std
inc
sub
fsubs
jle
leave
xchg
jae
mov
and
adc
push
jge
adc
push
cmp
adc
and
mov
mov
inc
adc
shlb
jecxz
repnz
leave
es
in
pop
mov
mov
je
xchg
enter
andl
pop
mov
xchg
xchg
cmp
xchg
addr16
or
pop
fbstp
jae
cmpsb
inc
and
and
mov
stos
pop
fdivrl
daa
clc
rorb
cwtl
adc
je
gs
push
jae
cmp
mov
fistps
dec
scas
mov
addr16
mov
lea
jmp
pop
shrl
ret
fwait
scas
outsb
lods
out
inc
loopne
mov
jns
scas
ficompl
fs
test
ljmp
inc
sub
sbb
or
inc
sbb
inc
sub
xchg
cmp
dec
mov
xor
mov
in
divb
inc
jmp
cli
xor
xchg
clc
sub
add
aad
or
imul
mov
lds
add
jne
sbb
dec
jp
scas
mov
jecxz
sbb
xchg
fildl
xchg
pop
mov
inc
push
in
mov
add
inc
in
and
leave
inc
popl
es
leave
enter
pop
inc
sbbl
iret
pop
pop
mov
ficompl
test
cmp
mov
loope
inc
adc
xchg
adc
jle
stc
xchg
dec
mov
mov
mov
dec
addr16
addb
sbb
outsb
movsl
ret
push
orb
add
dec
dec
int3
test
test
mov
sbb
sub
pop
inc
sbb
xchg
inc
jl
sbb
call
cmp
cli
sbb
mov
dec
xchg
fwait
mov
sub
enter
add
jb
call
add
xchg
mov
neg
mov
push
cld
adc
mov
mov
pusha
mov
shrl
lods
lret
sub
into
cmc
push
notb
pop
jp
les
cwtl
mov
test
dec
sbb
fstps
pusha
add
mov
sbb
sbb
sbb
sbb
adc
imul
fildl
and
int
jno
add
and
les
or
daa
das
filds
scas
dec
pusha
bound
adc
mov
gs
ljmp
mov
fsubrs
mov
xchg
mov
gs
and
mov
and
or
loopne
fidivrl
mov
push
mov
sbb
or
fstp
pop
filds
repz
aas
fs
bts
sub
push
xor
xor
fmul
add
mov
lds
sub
and
movsl
inc
dec
xchg
arpl
mov
loop
inc
pop
in
sbb
jo
ret
push
mov
into
mov
jbe
pop
push
inc
pushf
and
adc
jb
mov
rcll
mov
push
shrl
lock
dec
jmp
and
mov
xchg
imull
mov
pop
rcrb
cmp
enter
lds
pop
ds
faddl
jno
cld
lret
pop
inc
fdivrs
xchg
jno
int3
cmp
mov
dec
insl
sbb
jecxz
or
stos
jnp
sub
shll
mov
push
andl
les
addr16
adc
and
adc
inc
movsb
add
push
mov
call
push
fnstenv
nop
jecxz
push
pop
int
jno
scas
dec
aam
inc
pop
mov
cmpsl
in
mov
loopne
dec
loopne
dec
add
pop
insb
cmp
xchg
sbbl
sub
nop
mov
int
jecxz
adcl
cmp
xchg
jo
jle
test
fnsave
arpl
mov
xor
fs
imul
andl
jno
cmp
inc
scas
rcrb
jno
jno
fnstenv
mov
sbb
cmp
enter
stos
or
xchg
shll
movsb
jae
cmpsb
dec
pop
sahf
fld
cli
pop
or
pop
mov
dec
dec
xor
or
cld
xor
and
stc
out
mov
aad
mov
xchg
test
fsubl
jmp
cmp
dec
shlb
insb
cmpsb
cs
js
cwtl
cmp
mov
xchg
dec
mov
outsb
les
rol
lret
stos
lds
dec
cmp
cmp
jecxz
jno
in
xchg
imul
ret
cmc
inc
lahf
mov
push
gs
fs
adc
jo
cmp
xlat
js
outsl
dec
and
push
les
imul
add
xor
sbb
xor
pop
dec
inc
cmp
sub
dec
mov
jb
cmp
push
xchg
ja
out
fidivrs
rclb
sbb
mov
dec
in
faddp
ror
jge
stos
push
cmp
push
in
mov
in
iret
add
scas
es
lcall
imul
outsb
or
aad
adc
scas
push
rclb
cmpsl
pop
mov
repnz
sub
shrb
jb
jmp
out
jbe
jg
jle
iret
xorl
scas
and
arpl
adc
jnp
mov
xor
mov
and
add
mov
adc
sbb
fcmovnu
inc
daa
iret
insb
push
jae
or
lret
loopne
out
jg
push
call
jl
and
add
xor
mov
mov
mov
xchg
or
daa
nop
sub
mov
mov
pop
jno
add
aam
out
and
mov
js
sti
fwait
sbbb
aad
inc
data16
movsl
and
imul
xchg
push
cmpsb
jns
lods
cmp
cmc
push
and
dec
insb
std
pop
test
sub
adc
pusha
enter
pushf
push
xchg
out
out
pop
ja
stos
dec
adc
scas
dec
testb
js
push
es
insb
popa
cld
ret
sbb
cmp
mov
fadds
inc
xor
cmp
xchg
in
loopne
fcomip
out
mov
push
pop
push
pop
movsl
nop
cmp
and
push
xchg
push
lods
loop
movsl
lret
inc
jle
jae
in
popf
lcall
inc
nop
cmpsb
push
cmp
mov
pop
and
into
iret
mov
adc
sub
dec
cmp
lret
negl
sarl
pop
push
mov
cmp
ret
enter
stos
mov
in
cmp
mov
or
pop
xor
cmp
jle
sbb
pop
icebp
icebp
stos
push
pusha
rolb
mov
imul
push
push
jno
dec
add
cmp
cltd
loope
sarl
insb
pop
sbb
cs
sarb
fidivrl
mov
mov
xor
scas
daa
adcb
into
xlat
in
enter
dec
mov
jne
shrl
fs
test
daa
movsl
add
insb
fimuls
add
or
outsl
int3
jle
push
jb
or
and
dec
xchg
sbb
jbe
lea
sbb
or
rol
cld
andb
adc
int3
cmp
jle
jae
fdivrl
push
mov
cld
fmulp
xchg
enter
inc
cmp
popa
insl
cmp
add
pop
sar
jno
cld
or
incl
mov
xchg
imul
icebp
out
enter
sar
repz
gs
pop
test
loopne
enter
out
clc
push
cli
popa
xor
idivl
jle
lret
xchg
jmp
adc
push
pop
push
push
xor
dec
push
push
cwtl
jl
pop
adc
sub
mov
shll
push
sbb
sbb
sbb
jmp
jnp
loop
inc
cmpsb
pop
fisttpll
adc
test
lods
jle
jl
push
dec
cs
sub
popa
pop
ret
es
push
into
lret
jae
xchg
shr
repz
hlt
xorl
cltd
xor
inc
mov
adc
push
lcall
fcoml
gs
cld
adc
lret
loope
rol
bound
ds
xor
sub
stc
pop
cmp
iret
jecxz
inc
inc
cltd
pop
jae
inc
inc
rorl
fcoms
ss
sbb
not
lock
xor
sub
fistpll
roll
add
xor
lea
fwait
lret
mov
outsl
rol
pop
mov
dec
push
push
dec
xlat
lods
dec
das
jg
push
faddl
pusha
xlat
mov
push
mov
fsubrs
sub
outsl
lcall
subb
xor
cs
test
aad
stc
sub
xor
sbb
push
gs
and
stc
push
and
mov
gs
loopne
loop
js,pn
mov
and
push
xor
movsb
add
ret
mov
andb
and
jbe
movsb
mov
pop
adc
sub
dec
les
push
sti
fsubr
nop
test
jmp
xchg
xlat
in
shl
xlat
stc
stos
loopne
out
insl
popf
cltd
xlat
addl
push
mov
jns
jge
or
icebp
roll
repnz
test
push
addr16
pop
fcomi
jae
xchg
sbb
pushf
mov
cmp
fldt
mov
mov
stos
sbb
mov
cmp
push
inc
rorb
push
jae
pop
pop
add
cmpsb
xchg
mov
ret
pushf
cltd
sub
cmc
mov
mov
testb
mov
outsb
xchg
mov
inc
ret
mov
js
testl
jg
xchg
sbb
fildl
arpl
jae
sbb
mov
mov
pop
mov
dec
arpl
mov
mov
sahf
jnp
pop
and
ja
ficomps
xor
and
lods
inc
pop
aad
xchg
mov
in
sarl
dec
add
mov
inc
aad
jno
inc
inc
incb
addr16
ror
pop
push
lds
movsb
out
pop
das
sub
das
int3
pop
push
sbb
fldt
pop
inc
lods
pop
adc
sub
sbb
orb
lea
scas
aaa
sub
xchg
and
std
inc
xor
mov
cld
jmp
jl
movswl
push
or
pushf
mov
push
mov
into
push
xchg
in
stos
out
in
fucom
push
jns
sbb
sub
xchg
divl
loop
add
lods
jmp
adc
lret
and
jnp
call
pop
and
dec
adc
call
pop
imulb
pop
stos
inc
xchg
dec
add
into
icebp
aaa
xchg
sub
rcll
outsb
mov
aam
jmp
aad
fdivs
dec
call
in
sub
das
mov
inc
ret
mov
fstps
adc
clc
js
dec
sbb
je
cltd
scas
orl
cwtl
in
ja
lods
pop
push
or
leave
jbe
fisubrs
shll
adc
imul
repnz
mov
mov
pop
cld
cmp
loopne
hlt
cmp
mov
cmp
call
jecxz
in
push
jae
pop
add
outsb
pop
lock
push
rorl
mov
dec
fcomps
mov
xchg
ret
movsb
call
cmp
inc
pop
inc
pop
imul
lods
outsb
mov
jae
mov
jge
insl
xor
mov
sub
int
imul
subb
ret
fs
adc
clc
je
out
or
push
xabort
push
fildl
mov
fnstsw
pop
pop
das
add
inc
push
mov
push
js
mov
push
inc
aaa
in
mov
test
xor
lock
xor
push
gs
scas
repnz
mov
mov
popa
adc
sti
dec
mov
pop
test
in
ret
cmpsb
add
ret
jl
adc
addl
sub
call
outsl
xchg
xchg
xchg
push
or
pop
lahf
ja
pop
pop
and
out
jp
and
pop
arpl
mov
sbb
cmpsl
test
jnp
and
push
pop
ljmp
cli
sbb
lea
xchg
jb
pop
dec
or
fisubl
inc
fs
icebp
in
iret
mov
pop
xchg
sbb
movsl
sbb
andl
pop
sbb
mov
mov
movsb
pop
fsubs
cli
fiadds
cs
int
fists
insl
pop
inc
cmp
jg
push
and
test
cwtl
sub
jmp
scas
leave
imul
loope
in
cltd
sahf
shl
dec
push
sbb
sub
add
aad
fcompl
lods
or
xchg
scas
jp
int3
xchg
add
repz
lods
mov
scas
dec
ror
pop
push
and
and
fs
mov
test
inc
in
idivb
stos
xchg
lahf
nop
mov
mov
dec
dec
dec
decl
cmp
sbb
adc
outsl
adc
sahf
movb
push
dec
jae
sbb
xor
addr16
adc
mov
dec
enter
mov
mov
rolb
and
fildll
pop
bnd
in
aam
add
add
mov
int3
sarl
shlb
jmp
or
mov
jmp
pop
mov
mov
ret
sub
aam
mov
sbb
jne
mov
loop
addr16
aas
sbb
jae
push
icebp
out
mov
leave
std
inc
jnp
jnp
repz
neg
dec
and
dec
push
jmp
aad
aaa
jns
outsb
xchg
int
js
ror
inc
inc
sub
test
das
add
mov
sbb
lods
sbb
mov
or
jg
add
into
push
ja
in
ror
mov
arpl
and
icebp
inc
inc
das
int
pop
stos
mulb
pop
jmp
insl
insl
frstor
mull
enter
arpl
int3
mov
ss
inc
push
les
jno
out
push
and
negl
and
sahf
pop
cmc
or
pmulhw
rcr
jle
xor
mov
pop
rorl
mov
jg
or
sub
cmp
mov
mov
inc
inc
fsubl
fdivrs
jl
mov
xor
imul
sbb
adc
sub
test
dec
and
dec
pop
push
jbe
loope
shll
add
cld
cmpsl
popf
and
icebp
test
pop
test
nop
or
imul
and
xor
cmc
add
add
push
sbb
movsb
xchg
pop
hlt
or
or
outsb
insl
in
push
je
mov
mov
lods
push
adc
add
jnp
lds
or
pusha
cmp
inc
ret
in
pop
mov
push
in
aad
stos
lods
incb
sahf
popa
addb
lea
mov
arpl
outsb
testl
insb
cmp
or
ret
data16
movsb
aam
pop
cmp
mov
and
out
sar
lock
dec
stos
or
daa
scas
fdivrs
or
dec
xchg
out
iret
lcall
push
xchg
cmp
rolb
mov
ss
mov
xchg
jnp
dec
shrb
movsb
or
cmp
sbb
pop
ret
stos
arpl
dec
add
adc
dec
scas
pop
adc
jbe
ljmp
cli
int3
inc
jle
test
mov
loopne
sbb
sbb
int
rorb
xor
and
out
ss
push
cmp
mov
sub
pop
jo
ja
cltd
xchg
stos
mov
loopne,pn
add
xor
rcrb
in
mov
mov
jle
ja
push
fucomi
push
cmp
mulb
adc
add
push
call
ds
minps
in
aad
lcall
sub
faddl
push
pop
jl
pop
xor
out
aam
loope
mov
scas
int
imul
sarl
sahf
mov
xor
ds
push
jecxz
inc
fnstcw
mov
and
sbb
jp
imul
cmp
mov
repnz
hlt
cli
pop
pop
in
mov
insl
jb
push
je
fdivrs
popf
into
sub
push
rclb
clc
repnz
pop
inc
adc
jmp
lods
pop
loope
jl
insb
inc
sbb
xchg
mov
setnp
mov
mov
mov
add
adc
aam
mov
adc
lcall
in
xchg
mov
je
jno
test
lahf
dec
cmc
mov
sbb
cmpsb
rorl
movl
mov
ljmp
mov
xor
xchg
sahf
roll
add
jl
xchg
repz
loop,pt
xchg
mov
xorb
xor
leave
xlat
add
jb
lods
scas
scas
repnz
mov
in
fcompl
xor
lods
mov
pop
mov
and
sbb
cs
and
rolb
xchg
mov
pusha
lcall
js
mov
std
clc
sbb
clc
mov
sbb
mov
cmp
fcoml
adc
pavgb
es
pop
popf
adc
addr16
daa
mov
fidivrl
mov
or
and
ficoml
in
sbb
notl
mov
mov
sbb
icebp
xor
sahf
dec
jb
loope
xor
inc
xchg
or
dec
push
sti
fscale
lods
mov
fsub
xchg
mov
popa
mov
xor
into
cs
add
sub
xor
cmp
insl
push
lahf
mov
inc
mov
xor
mov
push
xchg
cld
ret
xor
or
fstl
sub
shlb
les
inc
ja
test
sbb
inc
pop
in
cmp
inc
cmp
xor
shll
adc
sub
dec
ja
rorl
inc
pop
les
push
add
xchg
ja
push
inc
push
outsb
pop
fs
cwtl
mov
es
mov
jl
mov
and
push
push
mov
lcall
xchg
pop
jo
hlt
pop
mov
mov
out
pusha
test
ljmp
fisttpll
lahf
leave
int3
fcom
fildl
sub
sbb
push
adc
xor
aad
push
sbb
cltd
in
rolb
or
push
fucomi
ds
dec
shl
pusha
popa
xor
lret
and
xchg
dec
or
mov
ror
sahf
sbb
arpl
push
in
xchg
mov
test
clc
loop
pop
mulb
mov
push
ja
sbb
aad
rolb
cmp
cmp
xchg
test
int
push
out
and
mov
mov
sub
dec
fists
inc
aaa
push
lret
xchg
test
loop
inc
icebp
jl
push
ds
ret
push
lock
and
notl
xor
pop
xlat
jge
inc
dec
lods
add
inc
push
or
inc
rclb
ds
and
incb
add
fsts
testb
push
nop
xchg
bound
xchg
out
xor
stos
mull
rolb
cwtl
push
adc
jl
push
lea
add
push
shll
xchg
jle
movsb
sbb
sub
int3
mov
hlt
xor
sub
cmp
cmp
cmpsl
or
adc
push
js
add
mov
xlat
aam
ss
jns
and
xor
lds
nop
push
fildll
xor
dec
adc
imul
roll
and
dec
mov
jg
insb
ret
dec
push
mov
in
mov
mov
les
mov
dec
lods
dec
jecxz
xor
out
xor
dec
ficompl
pop
push
fwait
mov
sub
sbb
mov
cltd
ret
in
xor
cmp
aaa
push
cmp
sub
xchg
add
adc
test
dec
nop
in
cli
rorl
inc
add
cmp
jmp
js
xor
push
daa
jns
sub
xchg
and
push
std
pop
cmp
int
cld
test
movsb
add
cmp
jb
pop
xchg
rcrb
push
cmpsl
iret
jns
add
inc
sub
js
daa
dec
sub
mov
dec
addb
lods
icebp
insb
pop
lea
lods
sub
or
leave
shrb
inc
mov
ret
mov
lret
lea
push
fstl
out
mov
test
push
stos
push
rcrl
sub
and
fisubrs
mov
mov
add
dec
lods
mov
mov
pushf
data16
mov
adcb
dec
into
test
mov
test
int
orl
adc
repz
xor
xchg
fmuls
sub
push
and
scas
and
int3
dec
fdivrs
cmp
push
filds
push
inc
mov
pusha
jns
pop
iret
cmpsb
sahf
push
sub
jb
push
lock
rcl
shl
ljmp
pushf
inc
cmp
das
push
stc
push
jne
js
aas
daa
xchg
jo
pop
fcmovnb
cwtl
lcall
lock
sbb
out
ss
cmpsb
pushf
xchg
movsl
lods
movsl
mov
pop
push
lods
aad
fldcw
aad
jl
or
dec
xchg
sub
pop
push
inc
aas
faddl
mov
lea
out
in
test
push
roll
inc
xor
rcr
loop
adc
movaps
add
in
fs
cmp
fildll
push
fidivs
mov
mov
loop
push
push
push
fnstsw
adc
andb
pop
loope
dec
mov
push
jae
sbb
and
push
aaa
addr16
loope
xchg
out
gs
sbb
mov
sub
xchg
lods
sbb
dec
into
jnp
mov
cmp
enter
sbb
or
mov
pop
pop
adc
mov
sbb
dec
jle
stos
sahf
xchg
bound
in
adc
xor
dec
mov
lods
ret
push
jmp
icebp
mov
pop
cmp
sbb
pop
push
adc
dec
adc
and
outsb
jns
pop
push
fs
aad
inc
sti
inc
jmp
int3
xchg
cmp
fidivs
int3
jne
jne
push
lea
lea
jge
int
dec
inc
sbb
sbb
mov
lds
mov
dec
jecxz
push
cmp
data16
adc
testl
push
movsl
inc
lret
sti
xor
in
adc
ds
jle
dec
inc
aas
dec
data16
xchg
push
mov
add
lea
push
push
ficompl
insb
icebp
mov
stc
ds
rep
test
es
push
mov
out
cmpsb
icebp
nop
push
mov
push
cli
lock
ret
and
rcrl
push
sub
test
mov
xchg
mov
out
jg
mov
dec
sbb
push
sbb
ja
xchg
mov
mov
pop
mov
pusha
js
push
pop
pextrw
jne
xlat
pop
mov
mov
fistps
data16
imul
inc
aas
ja
neg
loopne
xchg
jl
inc
sbb
mov
into
adc
cmp
pushf
sub
and
adc
sbb
icebp
in
ficomps
push
push
lret
or
cltd
cwtl
add
pop
push
dec
dec
pushf
mov
jnp
push
mov
lds
mov
imul
xchg
mov
pushf
repz
xchg
push
mov
pop
mov
rdmsr
adcb
popa
or
fnstcw
xchg
ficompl
sub
in
push
inc
mov
pop
push
cmp
cmpb
repnz
sub
push
inc
lea
cltd
adc
js
popa
and
test
sbb
sub
inc
dec
adc
adc
aaa
pop
daa
adc
loop
ja
aam
adc
ljmp
push
cmp
lods
xor
ds
xchg
mov
call
dec
out
sbb
pop
enter
test
insb
ja
iret
in
mov
mov
adc
inc
jg
int
xor
insl
es
imulb
adc
inc
mov
push
inc
imul
ret
jmp
jbe
in
xchg
mov
sti
pusha
push
inc
int
aas
mov
xlat
insb
xor
scas
inc
ljmp
xor
repz
push
movsb
icebp
ror
mov
add
cs
cmp
addr16
loopne
mov
jno
sbb
out
pop
rorl
sub
adc
pop
sbb
fsubl
lds
xlat
repnz
xchg
es
mov
adc
out
pop
iret
lds
sbb
mov
or
jno
xchg
jne
jg
stos
icebp
inc
mov
pop
icebp
xchg
pop
into
or
jbe
out
cmp
popf
xchg
xchg
orb
cmc
mov
push
popf
xchg
testb
sub
aad
jmp
int3
dec
testb
fstpl
mov
lcall
sahf
and
add
or
stc
pop
mov
mov
mov
enter
adc
jmp
out
leave
adc
and
iret
test
sbb
mov
mov
test
jp
out
xor
inc
fnstsw
fistpl
roll
imul
and
and
pop
scas
sub
je
ss
ss
aad
bound
lret
push
imul
xchg
and
pop
ja
pop
mov
cmp
dec
repz
rcll
mov
ja
addr16
movsl
push
ucomiss
lret
stos
sub
lods
int
push
hlt
cwtl
or
lock
sub
push
lds
outsb
arpl
push
cs
cmp
mov
aam
cmpsl
out
lcall
push
push
adc
lret
in
jns
mov
mov
pop
xor
or
mov
test
rorl
aas
inc
ss
and
inc
fstps
jg
push
in
push
push
int3
orb
xor
mov
cmp
mov
xchg
xchg
test
bound
test
testb
sbb
sbb
leave
into
leave
stc
jns
cli
mov
mov
jb
jp
imul
push
mov
in
xor
push
add
icebp
push
icebp
push
inc
stos
stos
ss
xchg
lds
rcll
pushf
xor
xchg
push
or
mov
addr16
subl
xchg
imul
mov
popf
into
xlat
cld
xchg
xchg
imul
dec
push
inc
pop
or
pushf
push
popa
fisubrl
hlt
data16
mov
movsl
pushw
pop
mov
mov
mov
call
mov
cmc
sbb
cli
mov
or
and
hlt
dec
cmp
mov
cmpsb
sbb
daa
adc
imul
jmp
inc
lods
push
jle
movsl
clc
jg
test
mov
jae
loop
dec
je
cwtl
jo
pop
mov
punpcklwd
inc
push
popa
jp
lahf
mov
dec
mov
jmp
push
fnstcw
fs
or
xlat
stos
or
mov
out
xor
sbb
mov
push
stos
dec
or
add
pop
fwait
jno
xchg
or
insl
xor
out
shr
or
lret
cmpsl
mov
scas
shll
nop
and
insb
out
popf
pop
cmp
push
xorl
inc
scas
fxch
mov
dec
xchg
hlt
scas
and
cmp
out
leave
in
push
cld
fcomp
mov
lret
and
fdiv
das
pop
pop
pop
and
and
mov
aam
mov
pusha
mov
mov
daa
xchg
xchg
ficompl
xchg
mov
lahf
imul
jbe
fstl
leave
insl
outsb
pminsw
adc
gs
sub
push
mov
sar
adc
aad
cli
jb
or
leave
insb
push
int3
or
sub
push
mov
popf
jl
mov
in
jmp
mov
lods
int3
ds
xchg
lret
jbe
js
filds
enter
sar
cltd
jb
xor
rorl
sti
lret
cmp
insb
inc
fsubl
inc
and
js
push
cmc
into
mov
fildll
loope
cmp
fwait
movsb
cmp
outsb
inc
add
mov
out
nop
divl
es
jne
pop
in
scas
mov
push
mov
flds
push
add
out
pop
sbb
loope
add
or
dec
fisubrl
mov
and
mov
xchg
xchg
adc
push
imul
push
stos
in
fildl
add
and
mov
cld
add
add
lret
decl
push
mov
mov
shrl
sbb
adc
add
sub
mov
push
push
std
or
jp
mov
xchg
sub
jae
mov
jp
es
mov
cmp
cwtl
lds
xchg
or
push
sub
add
lret
in
cmp
mov
in
aam
into
lcall
fists
mov
dec
gs
mov
mov
inc
loop
or
push
add
mov
pop
cs
je
imul
xor
adc
adc
lods
call
or
loopne
pop
sbb
outsb
ds
or
pop
jb
xchg
pop
jge
stc
outsl
mov
jns
scas
mov
fisubrs
popa
or
stos
add
cmp
push
jg
push
pushf
sub
stos
xchg
lret
inc
or
sub
test
into
imul
scas
xor
lds
pop
lret
xor
repz
inc
inc
cmovne
jmp
jnp
jg
adc
daa
scas
das
sti
rorb
push
ds
push
sbb
std
sub
out
adc
add
filds
pop
xorb
mov
cwtl
fldenv
lds
mov
das
roll
shrb
pop
adc
in
push
and
add
cs
add
fcomps
in
lods
pusha
pop
ja
rcll
and
lret
sahf
cmp
outsb
jbe
cmp
mov
ja
push
mov
cli
jmp
sbb
lcall
cmp
fiaddl
mov
lods
pop
scas
in
sbb
fisubs
lods
into
sbb
jno
shl
loope
add
add
lret
xchg
mov
mov
test
inc
pop
repnz
inc
sub
push
sbb
or
jge
nop
in
lock
fwait
mov
jmp
push
rol
insl
pop
dec
loopne
jns
jo
cmpsb
mov
jg
add
das
and
in
fiaddl
jle
fstl
scas
jae
shrl
leave
cmp
dec
test
pop
jnp
in
aaa
and
popa
insb
jno
inc
jno
sub
jg
sbb
mov
inc
cmc
push
dec
cmp
movl
ret
aam
fisubrl
mov
popf
mov
pop
xor
mov
mov
xchg
mov
lock
fidivrl
gs
inc
shrl
xor
lahf
dec
pushf
fs
sahf
lock
mov
clc
dec
repnz
loopne
scas
movsl
cmpsb
rcrl
es
push
addr16
sub
add
lret
inc
rorb
int3
insl
mov
cmp
push
js
notb
test
fwait
rcrl
jne
sbb
push
xchg
or
inc
scas
aaa
fimull
test
sti
out
inc
testb
out
xor
xchg
mov
loopne
mov
shll
int3
adc
ljmp
shrb
sbb
add
and
mov
adc
xchg
leave
and
fimuls
ja
jmp
or
pop
aad
inc
das
lods
dec
fmul
sub
jmp
cmc
in
dec
xchg
jmp
push
roll
ficoms
cli
push
out
cmp
outsl
dec
add
sub
lock
cltd
mov
mov
adc
jbe
lcall
cli
sub
jno
out
js
and
mov
orl
mov
and
ffreep
scas
mov
adc
or
jmp
cmpsb
add
jbe
push
pop
out
icebp
push
fwait
push
fisubrl
stos
fst
dec
out
adc
ds
push
mov
inc
add
pop
les
xor
mov
mov
pusha
divb
scas
xchg
popl
mov
jmp
pop
sbb
sarb
jae
inc
je
frstor
mov
ss
adc
icebp
mov
ljmp
push
adc
enter
andl
frstor
repnz
xor
mov
popf
mov
lds
push
mov
xchg
jge
add
xchg
sub
and
pop
mov
push
dec
lret
xchg
ret
xchg
arpl
add
lea
int3
jae
in
lret
pusha
adc
pop
xor
add
push
xchg
fs
aam
cmc
jmp
push
inc
or
xlat
out
adc
into
or
aaa
sub
fldenv
pop
push
popf
xorl
sbb
fnstenv
xchg
loopne
xchg
pop
adc
jno
cmc
aas
sub
neg
mov
lahf
stos
dec
stos
adc
leave
mov
add
or
movsl
sub
sbb
adc
sti
mov
mov
fisttps
inc
jp
imul
mov
js
loopne
jns
xchg
mov
mov
inc
jmp
sub
int
adc
and
outsb
sub
mov
scas
xor
mov
cld
test
scas
in
add
into
out
add
repz
xor
xchg
fbld
push
mov
insl
xchg
pusha
add
addr16
jmp
cmpsb
mov
mov
jo
pop
cbtw
adcb
xchg
push
dec
dec
repz
and
movsb
pop
xchg
sub
sbb
enter
ficompl
lea
pop
popf
mov
in
adc
dec
imul
iret
mov
fdivr
fcoml
rol
cmp
inc
and
cmpsb
ss
xorl
cmpsb
lea
mov
inc
cs
xor
arpl
sbb
jne
lret
push
mov
in
mov
add
popf
xchg
inc
sub
cmp
or
insl
popa
aaa
inc
lods
iret
add
xor
dec
call
js
and
add
gs
inc
pop
jl
repz
sub
or
mov
shll
push
iret
and
dec
dec
pop
xchg
es
jge
test
test
mov
ret
add
jmp
movsb
pop
cmp
orb
ret
aam
test
movsl
dec
fnstsw
jbe
and
inc
cmc
xchg
push
jns
sub
xchg
cwtl
loope
cmpsb
into
adc
in
cmpsb
scas
cwtl
repnz
popa
in
sub
xor
and
and
push
lock
jb
rcl
pop
mov
push
jo
push
sbb
outsb
sub
fldcw
push
push
popa
add
or
sub
push
or
cmpsb
movsl
shlb
sar
aam
mov
mov
jg
push
mov
lret
inc
lret
es
cmp
lds
fcmovnbe
ljmp
push
add
clc
cmp
push
and
fistpl
stc
xor
ss
mov
stos
mov
insb
push
cmp
mov
lret
xchg
mov
out
out
push
dec
int
mov
add
push
test
xchg
es
fidivrl
out
inc
adc
sahf
loope
mov
xchg
imul
mov
jl
xorb
inc
mov
xor
pop
lds
cmp
fistpll
or
insl
mov
test
dec
sbb
jmp
dec
pop
pop
pushf
adc
repz
xchg
pop
enter
test
scas
mov
rorl
loopne
push
dec
outsb
jl
or
add
sbb
pop
ljmp
test
loop
and
in
imul
xchg
pop
mull
les
mov
jns
adc
test
stos
shll
mov
dec
insl
idiv
cmp
sub
xchg
xchg
sbb
adc
fidivrl
data16
adc
sub
inc
shll
pushf
and
cwtl
push
jle
push
jnp
mov
in
faddp
out
push
je
and
sub
pop
xchg
insb
ljmp
les
mov
stos
data16
ret
in
popf
mov
les
inc
popa
cwtl
and
lcall
loopne
out
dec
sub
pusha
cmp
add
sbb
push
jp
inc
ret
push
xchg
mov
stos
and
in
movsl
mov
mov
addb
sbb
sbb
sbb
pop
sahf
cmpsb
xor
test
push
in
mov
cmp
xor
jns
pop
mov
mov
mov
in
fwait
sbb
dec
jg
push
inc
xor
cmc
xchg
jl
sbb
arpl
outsl
push
jp
jp
inc
jns
mov
cmc
xchg
in
scas
lods
mov
cli
fidivl
imul
stos
inc
leave
enter
mov
mov
jge
jnp
dec
xor
outsb
jl
negl
bound
mov
sbb
cmpsl
cmpl
dec
dec
loop
sbb
push
shrb
mov
scas
or
mov
jne
ret
repz
jp
pusha
pop
add
hlt
in
test
call
seto
mov
pushf
fldt
push
or
or
lods
cltd
into
fstpt
add
rcr
sub
data16
and
pop
mov
dec
adc
shll
ret
inc
xchg
loope
sub
and
mov
out
arpl
push
mov
xor
shll
push
mov
jns
rcrb
dec
adc
sub
xchg
push
data16
mov
loope
jne
out
jns
cltd
lret
mov
jnp
or
cld
stos
dec
adc
es
add
adc
add
ss
or
mov
mov
sbb
push
or
fiaddl
lahf
ret
shrl
fcmovnu
fidivrs
into
das
lods
ljmp
pop
or
repnz
ss
shrl
push
sub
bound
lcall
push
inc
imul
ljmp
ljmp
outsl
adc
sbb
iret
lea
or
into
push
xor
mov
cmc
in
aas
je
xchg
lret
ja,pn
ss
aad
mov
xchg
stos
sahf
push
mov
push
push
sbb
add
das
outsb
mov
adc
out
testb
pop
sbb
mov
jns
hlt
cmp
dec
lcall
roll
rcll
push
and
inc
jns
inc
dec
fimuls
hlt
add
call
scas
jmp
adc
cmp
add
mov
xchg
ja
sbb
xchg
lea
add
push
xor
sarl
faddl
push
adc
icebp
mov
and
dec
jbe
mov
jae
sarb
jns
mov
arpl
jmp
test
stos
xor
xchg
movsl
sbb
push
dec
or
mov
push
fucomi
fildl
mov
mov
out
cmp
adc
sbb
sbb
loop
cwtl
mov
lods
fidivs
insb
add
lea
les
inc
fnsave
lret
daa
pop
int
sub
mov
push
push
or
cld
xor
dec
dec
sub
rorb
cmpsl
outsb
rcll
clc
xchg
pushf
and
out
hlt
in
xchg
cltd
push
popa
out
pop
push
adc
sti
je
xlat
pop
fs
sbb
dec
pop
cmpl
cwtl
lds
sbb
dec
fsubrl
mov
cli
mov
cli
insl
sub
movsl
sbb
jmp
mov
jae
mov
sahf
dec
cmp
repnz
mov
mov
lahf
aaa
xchg
lds
cmp
mov
popf
lods
je
lods
dec
and
outsb
or
lods
testb
icebp
out
shll
push
test
psrlq
clc
nop
cld
inc
cmp
cmp
xchg
mov
mov
xchg
into
xchg
inc
addr16
xor
cmp
scas
inc
adc
pop
sbb
addr16
cld
leave
sub
fnstenv
inc
cld
dec
pop
lret
jle
int
sarb
mov
jle
fstl
add
sub
jnp
adc
imul
aad
cli
jnp
adc
xchg
push
cmpsl
dec
xor
ds
sub
aam
repz
xchg
inc
test
mov
and
inc
dec
test
cmp
js
adc
clc
xchg
inc
ja
popa
cmp
xchg
jp
stos
std
mov
mov
mov
or
xchg
enter
xchg
sbb
ret
dec
lret
imul
stc
add
sub
jb
call
lret
fnsave
add
jbe
or
push
sub
loopne
dec
loope
scas
pop
out
sub
sub
push
mov
cmp
pop
aam
push
int
pop
clc
mov
call
mov
iret
jmp
shlb
daa
loopne
testb
dec
out
xor
jno
xchg
add
push
ss
xor
cmp
testl
xchg
mov
daa
nop
cs
push
or
push
xor
lock
cmc
xor
jae
pusha
sbb
loop
inc
mov
mov
test
and
mov
pop
sbb
pop
sub
sub
mov
movsl
pslld
ret
rclb
pop
push
xor
cmpsl
fidivrl
push
inc
jb
mov
or
mov
aaa
mov
enter
loope
insb
xor
rolb
lea
inc
and
or
cmp
mul
add
lret
lock
out
aaa
jecxz
pop
test
dec
test
gs
fcomps
pop
jge
jmp
cmp
dec
nop
ret
mov
push
push
out
leave
int
or
cmp
lret
outsb
inc
hlt
mov
scas
dec
mov
push
loop
fs
outsb
inc
dec
movb
or
std
ljmp
cld
enter
push
rolb
outsb
notb
sbb
xchg
pop
pusha
movsb
inc
ljmp
dec
idivb
out
ljmp
not
xchg
sub
lret
ljmp
inc
add
shll
add
shll
xor
es
inc
in
xchg
xor
aad
aad
cmpsb
fs
shlb
dec
lods
movsb
mov
pop
jns
ja
xchg
ljmp
fadds
inc
adcb
cs
mov
out
jecxz
lds
roll
mov
or
lods
scas
daa
stc
sub
xchg
add
test
pop
jo
jg
jno
mov
ljmp
pop
or
pop
jge
lret
in
test
xor
xor
xchg
divb
jg
inc
xlat
bound
dec
std
mov
xchg
xor
ret
xchg
mov
and
mov
xchg
inc
subb
lret
or
clc
pop
cltd
mov
or
xchg
or
add
ficompl
pop
mov
inc
cmpsb
mov
cmp
mov
movsb
je
aam
lods
shr
imul
rcrl
fnstcw
shrb
sarl
xlat
dec
dec
inc
lahf
ret
sbb
lea
insl
xor
out
sti
out
cmp
push
xchg
jne
xlat
jo
out
aad
mov
pushf
jg
jo
leave
js
into
push
mov
sahf
outsl
or
xor
push
scas
dec
xor
jo
test
pop
jb
cs
sbb
mov
inc
add
loope
scas
in
and
xlat
sub
js
outsb
shl
jl
and
mov
and
mul
or
or
inc
xor
xchg
mov
out
gs
push
ss
mov
adc
daa
pusha
aad
jb
in
popa
inc
pop
xor
into
or
xchg
psllq
sub
fwait
mov
mov
ret
mov
imul
inc
sarl
lret
cmc
xchg
adc
push
and
push
in
sub
sub
sbb
mov
sub
iret
movsl
push
repz
xor
and
push
and
popa
jb
movsb
xorb
mov
arpl
data16
mov
sbb
xchg
cmp
lret
in
mov
sbb
cmp
imul
mov
loopne
mov
clc
aaa
and
imul
js
sbb
dec
pop
fsubrl
sub
sbb
out
jnp
sarb
xor
push
cli
icebp
clc
add
smsw
loope
and
faddl
shrb
inc
dec
or
popa
adc
sub
inc
xor
jns
push
popl
pop
xor
pusha
adc
shlb
dec
mov
ret
mov
jae
jle
lret
lret
push
jbe
xchg
xchg
xor
loop
mov
call
lds
mov
repz
mov
sti
das
and
insl
test
push
bound
sub
imul
adc
mov
push
mov
mov
scas
hlt
add
mov
aaa
sbb
aas
mov
mov
ret
clc
loope
pop
test
test
dec
clc
test
sub
daa
inc
and
outsb
test
push
jo
cmpsb
push
xor
mov
jmp
in
je
pop
inc
sbb
inc
push
add
jne
sub
mov
incl
sub
loop
sub
xchg
movsl
dec
jnp
ljmp
push
xchg
mov
js
adc
cmp
or
dec
or
mov
adc
mov
push
fsubrl
jg
cmpb
in
icebp
xchg
push
pop
push
lret
push
cs
mov
mov
shll
js
dec
xchg
movsb
dec
inc
inc
jge
xchg
js
sub
clc
shlb
mov
sti
lock
push
mov
mov
adc
out
push
cli
pop
repnz
jmp
clc
iret
sbb
jle
pop
ficoml
jo
std
add
push
xchg
popf
dec
push
lea
push
lea
lcall
adc
push
xchg
mov
andb
mov
jb
imul
mov
lret
in
stos
xor
outsb
rorl
cmpsb
dec
pop
dec
xlat
dec
es
shrb
adc
or
xchg
cmp
sahf
mov
inc
nopl
and
mov
jb
sub
push
outsb
xchg
cltd
mov
cmpsl
mov
mov
mov
iret
stos
mov
cwtl
pop
cmc
push
icebp
fiaddl
or
pop
outsb
jbe
pop
dec
sbb
test
cld
or
xor
repz
cmp
ljmp
popf
cwtl
cltd
mov
js
mov
shll
out
cmp
mov
xor
adc
xor
adc
xlat
cmp
dec
add
pushl
inc
mov
fcomps
adc
or
add
dec
push
lret
enter
div
sbb
outsb
insb
out
int3
mov
out
or
js
test
gs
sub
pop
adc
or
add
call
ljmp
mov
sbb
cmpsl
pusha
pushf
mov
out
add
mov
test
and
repnz
cmpsb
mov
rcl
ljmp
and
outsb
xor
sbb
divl
test
xor
sbb
jns
je
and
andb
adc
add
and
leave
jmp
pop
cltd
mov
out
bound
cltd
and
jbe
sub
mov
push
cmp
sbb
jae
push
incl
jb
inc
enter
lret
xor
sbb
cmp
stos
inc
jmp
pop
adc
pop
sub
popa
or
sbb
xor
push
daa
pop
in
fcompl
imul
and
outsl
rcrb
add
push
cmp
fisubs
adc
jno
sub
pop
int
mov
iret
fnstenv
cwtl
js
sahf
int3
mov
mov
sub
mov
das
jmp
dec
cltd
insl
subb
mov
gs
or
test
out
mov
push
cmp
mov
jne
andl
xchg
out
push
or
mov
sbb
jne
addr16
sbb
rolb
mov
dec
adc
shufps
push
pop
dec
jb
insl
je
loopne
ljmp
pop
push
mov
test
inc
nop
push
dec
jnp
jb
cmp
arpl
shrl
jle
cmp
je
inc
hlt
adc
inc
mov
lcall
mov
inc
inc
xchg
jns
lahf
repz
push
scas
pop
jmp
les
rclb
mov
rcrb
adc
push
jg
push
sbb
mov
movl
cmp
cwtl
mov
sbb
sub
cmp
dec
push
xorb
and
das
sub
xor
adc
inc
jbe
and
lock
call
mov
ret
pop
push
mov
mov
xchg
lahf
stos
pop
and
mov
and
lahf
ja
cmc
lret
lea
cli
sbb
sub
and
xor
test
and
cltd
clc
jge
or
shll
aas
pop
popa
or
mov
lds
gs
fidivrl
aas
in
cld
mov
jne
in
pushf
cmpsl
icebp
cmp
lods
cmp
add
mov
out
in
ljmp
dec
cmp
int
push
and
add
add
aam
shr
xchg
xchg
and
pusha
jle
mov
out
pop
sbb
pop
mov
mov
adc
add
js
push
aas
pushf
cmpsl
pop
mov
pusha
xchg
nop
fidivs
orb
mov
push
mov
stos
and
jnp
pop
orb
pushf
ja
lods
mov
fs
stos
cmp
cltd
rcll
mov
cmp
push
push
lcall
daa
cmp
std
jo
cmp
inc
clc
and
imul
lahf
scas
pop
xchg
fwait
clc
stc
bound
cmpsb
arpl
decl
mov
out
call
sbb
jmp
mov
lret
inc
aad
fisttpll
in
jecxz
pop
or
add
add
xchg
in
add
dec
int
cmc
call
mov
ret
dec
sahf
pusha
pusha
sbb
neg
cmpsl
rclb
pushf
lock
cmp
xchg
sbb
lock
insb
cmp
mov
ss
xchg
dec
adc
xor
xorb
outsl
js
mov
in
mov
push
scas
das
xchg
insl
push
jle
dec
flds
rcrl
pop
jmp
cwtl
jge
jno
lea
pusha
mov
sub
scas
test
xchg
push
arpl
pop
pop
cli
lock
inc
insb
jo
fdivl
sahf
pop
fs
cmc
inc
cs
data16
aad
push
clc
daa
daa
xchg
jle
mov
push
pushf
jle
xchg
cmpsb
mov
int
popl
dec
jnp
fdivp
push
loop
testb
fnstcw
addl
lcall
and
enter
xor
aad
add
dec
das
mov
cltd
dec
dec
add
scas
das
pop
call
clts
lahf
xor
out
ret
int3
sbb
mov
mov
cmp
cmp
jmp
mov
fadd
or
sbb
jl
push
mov
cmc
mov
xchg
inc
lret
repz
imul
jl
pop
push
popa
xchg
cmp
into
cltd
pop
popa
loop
xchg
jb
dec
mov
imul
xor
sbb
outsl
push
sub
loopne
add
rcll
xchg
jne
out
in
imul
ss
shrb
cltd
movsb
ljmp
ljmp
lret
jo
sahf
xchg
push
addr16
fisubrs
lahf
mov
fdivrl
mov
or
cmp
cmp
xor
rcll
jmp
hlt
stos
push
inc
xor
stc
cwtl
ss
add
test
out
push
push
add
cmc
in
mov
cmp
push
in
xor
mov
sub
test
pop
lock
push
mov
pop
ss
push
inc
arpl
ss
mov
mov
jecxz
cmp
sub
and
dec
popa
adc
stc
jge
mov
cltd
ret
stos
test
aam
lods
out
fwait
or
cmp
add
mov
cltd
mov
sahf
jecxz
pop
int3
je
loopne
sti
std
in
adc
jno
sbb
out
xchg
pop
xor
aam
aaa
xchg
or
dec
xor
and
jo
into
dec
pop
adc
in
adc
jecxz
jmp
xor
dec
push
fnstsw
in
push
or
repnz
icebp
fstpt
fsubrs
jne
inc
xor
push
loop
or
xchg
inc
xor
jo
rclb
inc
or
test
xchg
std
jnp
int
lods
and
ds
hlt
mov
sub
mov
mov
and
inc
mov
mov
sub
insb
cmpl
iret
out
and
clc
and
mov
sub
pushf
outsb
jne
xlat
and
repz
jbe
imul
or
cmp
inc
aad
adc
push
jp
pop
test
imul
xor
cwtl
mulb
pushw
jmp
push
inc
enter
cld
xchg
loope
mov
imul
cltd
inc
jmp
sbb
adc
aas
pop
mov
jg
jl
fadds
loopne
push
sbb
cmpsl
inc
mov
sbb
inc
mov
xor
nop
cs
enter
ret
pop
scas
xchg
scas
push
mov
dec
push
mov
test
ss
addr16
mov
out
fwait
add
lds
gs
imul
pop
inc
xor
xor
fs
dec
iret
enter
xchg
sbb
mov
in
mov
inc
lea
add
popf
data16
cmpsl
adc
fwait
sbb
cmp
loope
sbb
rol
add
add
sub
mov
mov
sbbl
dec
jae
jnp
inc
mov
add
pop
ss
cmpb
in
xorb
addb
mov
arpl
loopne
jb
inc
xchg
cmp
gs
xchg
mov
fnstcw
mov
or
scas
mov
sbb
inc
fdiv
aas
xor
gs
xchg
and
fisubrs
inc
clc
xor
clc
push
daa
aas
cmp
out
into
jl
ja
imul
lahf
cs
outsl
fwait
mov
test
or
pop
add
test
push
cmpsb
and
in
or
les
push
lods
lret
lea
push
cmp
imul
pop
mov
orl
scas
and
jb
out
loopne
mov
ret
xchg
stos
shlb
stos
pop
pop
test
lcall
popa
mov
push
addr16
dec
ja
bound
in
pop
into
daa
lea
mov
sbb
daa
sbbb
xor
out
lret
pushf
add
mov
dec
int3
enter
repz
sub
adc
push
sbb
clc
lret
dec
lahf
sub
fwait
shrl
dec
lea
lods
std
bound
stos
call
inc
xor
sbb
ret
sbb
xchg
push
movq
fwait
dec
add
bswap
jle
enter
inc
add
xchg
mov
loope
jbe
roll
push
pop
adc
stos
lcall
add
mov
movsl
inc
sbb
andb
daa
pop
sub
lods
in
push
hlt
mull
jecxz
cld
loopne
mov
clc
lock
mov
and
dec
mov
mov
dec
clc
add
or
add
mov
repnz
out
insl
leave
add
mov
mov
nop
add
cmpsb
push
fst
out
add
push
dec
std
and
xchg
adc
mov
cmpsl
sbb
push
arpl
pop
loop
or
enter
or
lea
movsb
fldcw
test
adc
icebp
aad
aam
pop
shll
mov
shll
mov
pop
xchg
or
insb
xchg
xor
cs
scas
pop
jp
jae,pt
mov
jae
pop
inc
lcall
dec
mov
dec
sub
jbe
and
xchg
ljmp
cmp
jle
mov
in
push
mov
cltd
and
dec
mov
ds
mov
test
mov
add
sti
mov
lods
les
add
push
repnz
inc
das
inc
mov
mov
fstp
dec
mov
dec
ds
jmp
or
mov
dec
mov
cltd
loop
adc
sub
add
movl
pop
in
dec
xor
xor
jns
inc
pop
pushf
xchg
fisttps
add
adc
popa
pop
fnsave
enter
and
sbb
sbb
repnz
xlat
int
mov
jnp
test
jo
pop
sbb
ret
sub
jbe
pop
mov
dec
pop
mov
pop
push
mov
into
push
xchg
mov
cmp
jae
adcl
xchg
stos
popf
push
mov
pop
cld
loope
popf
push
inc
jno
and
pushf
and
ret
sbb
and
inc
jae
mov
test
sub
test
std
bound
ret
loopne
into
lods
push
imul
mov
loope
xchg
mov
dec
mov
das
repz
xchg
jbe
mov
xchg
nop
scas
inc
jmp
xchg
test
push
jg
stos
or
aas
sub
mov
sbb
mov
out
adc
mov
imul
shlb
or
stos
scas
add
mov
aas
mov
insl
out
rcl
shlb
fwait
pop
ds
sti
jno
pusha
jp
mov
push
xor
aas
pop
shll
cmpsl
jbe
punpcklwd
imul
lods
out
mov
jl
rorl
push
data16
jecxz
fldt
sbb
lret
add
push
fimull
jl
insb
cld
mov
push
push
daa
leave
fbld
lret
sahf
imul
dec
jb
rcrl
mov
test
dec
jecxz
sbb
out
push
pushf
push
lret
mulb
dec
sbb
jp
stos
fcmovne
pop
push
xor
pushf
stos
in
mov
imul
iret
hlt
sub
ret
jge
repnz
xchg
adc
imul
cltd
lret
dec
add
xor
leave
fwait
pop
iret
push
sbb
push
pop
mov
mov
mov
loop
mov
push
add
aaa
ret
adc
lods
pusha
leave
aaa
push
not
ja
or
push
or
imul
mov
addl
test
test
pop
cld
mov
bnd
rclb
mov
cmp
and
push
cmp
lret
push
test
popf
or
lret
loopne
cmp
sti
mov
stc
mov
loop
fcoml
fwait
mov
lret
repz
fdivrs
push
cmp
dec
hlt
sub
arpl
mov
leave
addb
mov
ljmp
loopne
fdivl
jnp
ficoml
or
cmpsb
sbb
in
orb
xchg
dec
cmpsl
shlb
mov
ja
dec
out
adcb
xor
pop
pusha
adc
mov
stos
jg
xchg
pop
and
cmp
mov
bound
or
mov
cmp
pop
sub
pop
inc
adc
xor
imul
mov
fiadds
jae
mov
inc
das
stos
ss
pop
sub
push
dec
rolb
rclb
pop
push
inc
sbb
pop
es
sub
cmp
jo
and
aaa
sbb
insb
sti
scas
sbb
mov
and
dec
inc
ja
sub
imul
pop
mov
add
xchg
mov
pop
push
pop
sbb
ficoms
sarb
in
and
or
pop
add
xorl
cmp
push
in
jp
and
inc
aad
xchg
pusha
xchg
push
rcll
pop
ljmp
ss
cld
push
cwtl
in
or
aaa
mov
pop
lods
pusha
mov
mov
fildl
pop
daa
adc
pop
inc
xor
sbb
mov
out
sbb
js
in
jle
es
stc
mov
push
pop
aaa
test
sbb
rcr
out
lcall
loope
cmp
scas
pop
cmp
jle
xchg
xchg
add
mov
subb
mov
ret
fdivr
or
jbe
pop
sbb
jmp
or
lret
iret
lods
lea
cmp
repz
dec
rorl
inc
imul
inc
and
inc
test
or
ret
jb
xor
gs
popf
inc
adcl
push
mov
scas
int3
mov
push
mov
enter
popa
ss
xchg
stc
mov
mov
sti
add
pusha
iret
lea
mov
xchg
pop
cld
pop
roll
dec
sbb
imul
xchg
int3
cld
pop
insb
inc
ljmp
loope
push
js
es
vsqrtsd
insb
fmull
ja
mov
push
jno
push
repnz
insl
push
loope
iret
loopne
pop
enter
xchg
inc
call
lds
insl
xchg
mov
xchg
fcomps
clc
aad
adc
aam
jo
dec
xchg
and
leave
dec
xchg
sbb
cmp
fdivrl
mov
push
bound
cmp
ret
xchg
lds
sub
aad
outsl
cmpsb
mov
out
iret
inc
aas
push
lds
fstps
mov
in
mov
stc
mov
pop
xchg
cmpb
lret
in
sarl
add
push
xchg
adc
jmp
xor
lods
dec
push
clc
insl
notl
dec
xor
sahf
mov
psllw
fldl
mov
jl
dec
sbb
mov
pop
adc
sbb
std
fxch
std
divl
mov
mov
scas
add
add
negl
rcrl
in
and
sbb
in
gs
jnp
lods
call
jg
je
fwait
cmp
jae
iret
pop
add
xchg
insl
pop
sbb
dec
jmp
dec
adc
movsb
pop
jmp
pop
ret
adc
popf
shr
stos
fidivrl
adc
push
mov
sub
mov
jecxz
repnz
xor
or
out
push
push
scas
movsb
push
push
or
punpckhbw
test
loopne
mov
mov
sub
cmp
push
fistpl
jbe
cwtl
dec
nop
mov
add
ljmp
cmp
pop
or
fldcw
sbb
sbb
sbb
out
or
pop
rcr
or
pop
mov
rsm
lcall
fdivr
outsb
adc
ret
jbe
mov
mov
jmp
enter
inc
aas
ljmp
rcrb
je
insb
mov
push
xor
push
arpl
fnsave
sub
stos
xchg
mov
mov
add
push
jl
stc
sbbl
cmp
ja
mov
mov
or
and
cld
mov
imul
jne
mov
mov
mov
insl
add
jbe
xor
sbb
or
cmp
mov
mov
mov
inc
das
sub
sti
push
xor
popa
pusha
pop
popf
jbe
pop
movsb
jnp
fcompl
jmp
aas
sub
xchg
lods
dec
sub
dec
mov
movzbl
aam
xor
dec
mov
jnp
shll
bound
and
jl
icebp
shll
orb
lods
sub
xlat
mov
imull
rorl
mov
aam
fistpll
adc
dec
pushf
shr
jnp
lock
jp
popf
xchg
enter
xchg
flds
mov
movsb
clc
push
stos
mulb
sub
add
cmpsl
xor
pusha
cld
sbb
aaa
sub
loop
mov
popf
pop
xor
push
cli
inc
sahf
test
sbb
mov
je
xchg
xchg
pop
mov
out
shrb
mov
cmp
or
ljmp
xchg
cmp
jo
pushf
mov
and
push
icebp
movsb
sub
imul
pop
jo
add
arpl
sub
stc
mov
test
adcb
clc
jb
xchg
cmp
or
insb
dec
fs
cltd
add
daa
je
sti
and
clc
push
or
xchg
rorl
add
sbbb
inc
mov
iret
cmpsb
lret
or
out
in
and
ja
inc
mov
movl
push
js
mov
outsl
jecxz
inc
cmp
movsb
and
dec
cmc
pop
or
jecxz
xor
push
filds
xor
xor
fsubrs
jb
mov
pop
testl
testb
inc
ret
add
inc
enter
out
push
ljmp
xor
inc
pop
cmpsl
mov
repnz
outsb
pop
stos
sbb
loope
adc
or
lret
fucomip
pusha
inc
movsb
sbb
bound
push
or
cmp
cmp
and
pop
xlat
mov
call
push
mov
xchg
jnp
or
mov
call
lods
stc
xchg
insb
jmp
cmpsb
mov
fcmovb
lret
sub
jae
jp
cwtl
mov
or
sub
xor
mov
mov
push
pop
push
dec
gs
imulb
fiaddl
ljmp
cld
cli
bound
rcrb
jle
sahf
out
lahf
test
mov
jo
addr16
faddl
lcall
in
dec
cmp
adc
xchg
add
cs
jg
fs
and
into
add
mov
inc
lds
pop
cmpsb
xchg
dec
and
add
popf
lods
mov
push
inc
push
mov
test
jle
jae
add
fisttpll
out
popa
xlat
sbb
xchg
daa
xor
test
sbb
leave
xor
mov
pop
xor
xor
xchg
mov
jmp
dec
cmp
stos
scas
push
jne
and
inc
cld
enter
adc
sub
lock
out
and
loopne
mov
and
xor
and
jno
sub
popf
add
push
mov
adc
test
gs
pop
push
xchg
cmp
sbb
cmp
lret
stc
mov
cmp
ja
sbb
mov
jae
sti
int
push
mov
iret
mov
xorb
xor
test
test
outsl
movsl
lds
xchg
pop
xlat
aam
and
push
cmp
cmc
inc
push
subb
mov
xchg
and
in
cltd
and
sbb
cmp
aad
mov
cmp
stc
adc
mov
inc
push
add
or
hlt
lods
mov
push
xchg
test
shll
loope
fwait
movsb
pop
shl
sbb
cwtl
rcrl
or
cld
xchg
mov
adc
jmp
xor
enter
mov
paddusw
cmp
loopne
xorb
mov
sbb
mov
cmp
xchg
rclb
into
fwait
ret
or
out
pushf
dec
out
lea
out
in
adc
fisubrl
xlat
sub
xor
or
iret
push
inc
sub
jg
adc
jl
ret
shlb
out
inc
js
iret
pop
pushf
lcall
mov
sub
pop
sti
popf
out
cld
je
adc
add
testb
mov
mov
cld
addr16
inc
cltd
adc
sub
mov
and
divb
sbb
xchg
adc
dec
in
out
scas
pop
mov
pop
sub
lea
jae
pop
mov
shll
fwait
sbb
out
sbbl
popw
sbb
test
push
ja
lds
out
aas
inc
fnstsw
out
mov
xorl
mov
out
mov
ds
push
mov
dec
cmpsb
ret
pop
lods
mov
sub
test
push
sbb
lret
pop
test
mov
call
in
and
pop
sbb
stos
imul
fcomip
clc
sbb
mov
mov
shl
pop
sbb
xor
aaa
int
push
ja
xor
push
stos
mov
scas
inc
jle
aad
adc
mov
cmc
das
jmp
int3
push
in
pop
jns
push
xor
loop
dec
in
mov
clc
adc
aad
mov
mov
orb
mov
lret
mov
adc
les
lahf
xchg
test
inc
mov
mov
jae
std
push
in
xchg
adc
dec
cmp
ss
cmp
inc
push
js
jp
ja
fistl
scas
dec
mov
mov
popf
mov
sbb
cltd
fdivrs
aad
mov
mov
imul
sbb
mov
test
mov
or
push
fildl
sub
leave
mov
inc
add
lret
sbb
and
and
xorl
push
fidivrs
mul
fs
and
imul
jmp
jns
fwait
mov
loope
ds
sub
ret
push
iret
cli
cmp
pop
ret
out
sarl
xchg
sbb
cmp
inc
mov
jns
repnz
add
sub
nop
push
mov
mov
push
hlt
xchg
popf
xchg
data16
call
push
icebp
insb
and
jle
pop
divb
mov
scas
lock
xchg
mov
push
push
push
add
xor
xchg
sbb
xor
xor
cwtl
add
mov
xor
daa
hlt
test
ljmp
int
mov
cwtl
es
pop
sub
xor
data16
imul
or
mov
jp
ficoml
imul
push
mov
aaa
push
insb
enter
and
ds
jns
scas
cmp
cwtl
pop
adc
bound
sbb
repz
push
sarl
or
pop
loop
jb
je
xchg
push
lock
push
inc
loopne
inc
daa
lock
ss
aad
in
in
fadds
std
adc
mov
cwtl
push
push
ret
out
pop
bound
mov
mov
popf
push
in
push
roll
cmc
xchg
stos
loopne
jb
inc
dec
cmp
repnz
or
mov
sbb
lds
shll
sub
out
ja
into
cltd
xlat
dec
arpl
mov
sar
test
xor
test
cmp
movsw
bound
adc
add
sub
icebp
sbb
loop
xor
adc
adc
lds
int
dec
leave
mov
js
inc
cmpsl
jbe
sub
sub
out
mov
enter
test
sbb
jns
insb
cmp
shlw
imul
mov
mov
xchg
pop
add
jecxz
push
sub
cs
cli
inc
out
outsl
or
push
stc
inc
xor
dec
push
ret
push
pop
mov
xchg
popf
popa
jno
outsl
test
sub
stos
in
and
loopne
sbb
sbb
push
shll
mov
inc
cmp
jne
sub
outsb
xor
loope
inc
or
repz
cld
sbb
cmc
jno
in
cmp
xlat
pop
dec
or
out
pcmpgtd
xchg
sbb
push
in
dec
mov
imul
shlb
mov
repz
fimull
inc
cmp
lret
fcompl
jae
dec
in
mov
rcl
repz
cld
icebp
es
or
xchg
push
inc
lds
insb
cltd
rcl
imul
rorb
test
xchg
push
push
lock
and
in
jns
js
imul
xchg
fildl
or
sbb
jnp
daa
enter
push
fcmovu
jge
pop
les
outsl
ja
addr16
out
dec
mov
iret
mov
jne
mov
bound
inc
scas
adc
cs
es
out
cmpsb
mov
lret
xor
in
in
adc
adc
fs
xor
cmp
mov
cwtl
mov
sub
js
lds
lods
leave
test
jp
repz
xlat
xor
addb
rorb
imul
sbb
lahf
je
mov
cmp
lret
and
call
cli
orl
cmc
iret
out
cmp
xchg
outsb
or
cs
xchg
arpl
or
addr16
nop
mov
or
inc
pop
jp
js
pop
mov
and
mov
jbe
sbb
mov
clc
and
out
loope
popf
iret
add
sbb
imul
or
int3
or
loope
mov
mov
jl
adc
stos
mov
test
push
shlb
iret
cs
pop
sbb
sub
rep
push
cmc
push
daa
iret
pop
cli
insb
movsl
sbb
out
pop
jg
leave
sbb
mov
cmc
ljmp
cmc
mov
syscall
jmp
int3
mov
loope
repnz
in
jo
fdivrs
popa
lahf
out
insb
inc
mov
lret
fildl
mov
xchg
mov
cmp
adc
push
dec
ljmp
inc
stc
xor
and
cmpsb
xchg
in
lret
cmp
jl
or
shll
scas
fsubp
in
cmpb
repnz
pop
pop
dec
fnstsw
inc
into
xchg
sahf
inc
jno
jle
rcrb
add
repz
movsb
addr16
stos
jno
mov
lods
mov
mulb
jg
fmul
add
and
outsb
dec
mov
mov
mov
out
fcmovbe
lods
imul
fwait
lock
addr16
sbb
stos
mov
xor
mov
sbb
sub
pop
insb
leave
cmp
or
pusha
mov
xchg
loopne
jae
push
mov
stc
leave
dec
inc
loope
test
addb
dec
or
insb
test
movsl
xchg
mov
mov
leave
cmp
push
adc
inc
mov
sti
aas
fsubl
jl
mov
sbb
rol
sub
addr16
lret
pop
scas
cwtl
sub
sahf
jl
xor
fsubrl
int
lods
mov
imul
xchg
fnstenv
mov
add
add
scas
push
lods
pop
push
stos
sar
gs
sub
movsl
cmp
mov
lods
test
adc
sbb
icebp
push
push
adc
inc
aas
xchg
cmp
lcall
int
mov
aaa
dec
test
cmc
xlat
add
aaa
jg
mov
inc
push
les
out
flds
imul
cmp
xchg
les
cld
ss
mov
and
xchg
xchg
mov
lcall
aam
push
push
sbb
push
std
stc
xor
lds
mov
jge
mov
mov
hlt
lcall
je
push
aaa
adc
test
stos
sub
sar
jne
or
mov
testl
xchg
shrl
pop
push
in
sub
sti
mov
fld
pushf
sub
cmp
sub
sahf
clc
js
decb
cmpsb
in
adc
mov
and
ret
icebp
pushf
cmp
je
dec
int3
mov
push
xor
in
mov
push
or
sub
and
in
pop
push
hlt
push
xor
mov
jnp
sbb
repnz
loop
lock
js
push
ret
mov
loop
pushf
pop
mov
xchg
movsb
xor
cmp
in
xor
adc
or
mov
mov
cmp
add
adc
shrb
xor
pop
cs
ja
adc
cmpsl
dec
dec
loopne
adc
orl
sbb
cmp
or
dec
jae
lret
fdivl
ret
xor
int3
mov
test
xor
adc
jg
ja
jae
leave
xor
pop
dec
jae
stos
insb
fwait
pop
mov
mov
stos
adc
add
jnp
push
fmuls
xchg
aas
fnstcw
aad
xchg
sub
xor
pop
lret
daa
push
xchg
in
mov
into
mov
add
cmpb
stos
push
popa
xor
fldcw
lods
stc
inc
cltd
push
xor
xor
xor
mov
pushf
jecxz
inc
leave
imul
mov
gs
ljmp
aam
cmp
mov
aam
lods
cmp
cli
mov
outsl
aas
push
push
and
ficoms
dec
inc
ja
pop
or
and
cli
dec
xor
or
add
insl
out
adc
mov
test
imul
xlat
adc
pop
roll
mov
out
add
and
or
mov
and
gs
sub
mov
or
data16
xchg
stc
stos
rolb
into
imul
notb
push
jg
push
mov
sahf
mov
insb
push
jbe
jne
ja
stos
outsl
mov
aas
adc
call
call
int
jl
jmp
arpl
mov
xchg
mov
add
sbb
nop
dec
cld
cmpsl
adc
push
inc
sub
jo
xchg
mov
mov
dec
and
stos
add
mov
and
out
cmp
pop
iret
fwait
mul
ss
leave
or
add
pop
mov
scas
clc
frstor
mov
adc
xchg
fiaddl
and
mov
xchg
popa
sahf
jl
in
mov
add
insl
jbe
add
das
shlb
xchg
les
mov
div
fcoms
xchg
cmp
sbb
mov
sar
inc
insl
jmp
fs
adc
mov
dec
out
inc
jbe
mov
outsb
cmp
sarb
inc
inc
xchg
repz
pusha
fbstp
icebp
push
inc
mov
fsubr
or
in
push
jg
pop
shlb
push
into
ljmp
xchg
mov
sti
imul
dec
cltd
jne
inc
fidivl
sub
ret
jns
out
push
or
andl
push
inc
jecxz
movsl
fisttpl
out
adcl
mov
dec
and
movsl
dec
daa
addr16
aas
xchg
xor
cmp
notb
mov
inc
xor
sbb
mov
mov
jno
xor
cmc
hlt
or
out
mov
xchg
int
in
xchg
cmc
inc
icebp
aaa
test
int3
ret
push
pop
sub
enter
aaa
cmp
das
xchg
cmpsl
insb
js
imul
sub
sbb
dec
into
or
mov
push
pop
xor
rcrb
push
jbe
cmpsb
mov
fisttpll
stos
mov
adc
pop
bound
jae
rolb
icebp
push
std
add
push
lcall
das
push
fnsave
jp
xchg
fsubrl
loop
leave
jns
adc
inc
loope
fwait
push
xchg
inc
dec
call
ret
sbbb
enter
adc
cmp
cmp
ffree
add
into
lods
mov
outsl
popa
add
and
jecxz
out
sbb
les
in
notb
dec
mov
push
mov
dec
or
into
push
std
dec
jmp
daa
pusha
sub
adc
inc
pop
shlb
lcall
push
fwait
xchg
adc
cmpsb
test
push
and
pop
addr16
dec
or
mov
sahf
sub
iret
and
push
lds
xor
push
imul
sahf
add
lock
aam
dec
popa
adc
mov
sbb
adc
sbb
add
or
cmpl
fiaddl
pop
call
aam
jne
int3
in
inc
jns
pop
int3
xchg
jnp
scas
nop
scas
or
or
nop
dec
add
mov
jbe
cwtl
push
and
lods
enter
shll
jp
mov
dec
nop
cli
cmp
or
lret
mov
aas
add
and
dec
out
and
sbb
lcall
out
dec
jb
das
loopne
mov
xchg
jno
bound
pusha
sbb
cli
sahf
enter
cld
inc
test
adc
dec
jo
mov
sbb
inc
call
in
rclb
sti
xchg
xchg
inc
xor
pusha
jae,pt
adc
add
pop
mov
push
sbb
cmp
dec
xchg
sbb
push
js
ficomps
or
mov
decl
fnstsw
jnp
sub
out
inc
xchg
stc
arpl
pushw
xor
mov
xchg
jbe
test
out
xor
in
mov
mov
pop
int
adc
dec
xchg
mov
outsl
mov
inc
xor
div
popa
lret
stos
arpl
nop
and
dec
pop
dec
xchg
les
push
inc
js
mov
mov
xchg
xor
or
inc
lahf
mov
pop
aaa
jl
enter
int
andb
jg
sbb
stos
int
adc
push
call
sub
jmp
sbbl
xor
push
push
out
shlb
jnp
fists
add
stos
mov
cmp
enter
bound
mov
bound
add
cltd
xor
dec
pop
sbb
inc
pop
jo
repz
cmp
lahf
sub
rol
hlt
mov
sub
movsb
mov
repnz
add
sbb
push
dec
cmp
movzwl
cmp
cmpb
jmp
cmp
add
sbb
xlat
lds
adc
add
fildl
aad
mov
push
mov
lea
and
movsb
push
fsts
or
mov
or
sub
mov
mov
xchg
icebp
jbe
pop
fstpt
lea
inc
and
imul
movsb
lret
shll
xchg
mov
pop
fidivrl
pop
xchg
addb
mov
jge
push
or
xchg
dec
adc
lods
jo
int3
lcall
repnz
es
push
mov
inc
imul
ficoms
and
xor
xchg
fidivl
into
cmc
sub
or
bound
out
pop
cltd
xchg
dec
adc
mov
pop
out
xchg
orl
xchg
xchg
cmp
push
in
adc
xchg
mov
cli
pushf
dec
popa
mov
mov
stos
pop
push
es
mov
push
inc
ljmp
cwtl
push
mov
inc
xchg
test
bound
lods
mov
xchg
pop
dec
stc
movsl
test
xchg
imul
and
int3
and
stos
sbb
daa
popa
je
fwait
ret
mov
push
xor
out
jmp
arpl
out
ss
mov
std
mov
cwtl
int3
push
push
pop
or
inc
pop
bound
jl
lds
xchg
in
jmp
add
push
sbb
mov
out
cs
fcoml
aad
mov
lea
push
dec
or
xor
mov
pop
sub
rorb
add
jne
and
imul
pop
sbb
push
fsubl
mov
push
mov
scas
in
mov
or
rclb
mov
pop
in
xor
icebp
add
push
mov
mov
sub
aaa
dec
neg
fstl
push
jl
call
jo
lea
aad
aad
cmp
inc
popf
sub
sarl
mov
fs
cmp
adc
cmp
bnd
mov
rcrl
ljmp
push
aam
test
out
adc
xchg
jnp
test
mov
or
in
push
inc
filds
inc
aam
sub
cli
ds
mov
inc
dec
xor
lds
mov
loopne
aam
mov
insb
clc
ljmp
jne
lea
jl
push
iret
in
sbb
mov
or
inc
loopne,pt
in
mov
loope
dec
mov
mov
xchg
cmpl
jle
roll
mov
mov
sbb
inc
jbe
inc
cld
cmp
jae
sbb
mov
sub
cmp
push
jb,pt
rorb
in
mov
xchg
dec
subl
into
and
not
out
and
fsubl
xchg
or
movsb
cltd
sub
and
cld
jmp
push
pop
sub
mov
mov
imul
lret
notl
lods
hlt
out
sahf
repz
fcompl
lret
fcmovbe
icebp
sbb
shrl
cld
add
cs
stos
xchg
adc
jge
out
hlt
or
sbbl
std
sub
dec
jo
inc
cmpsb
rcrl
fwait
jbe
lcall
mov
cli
add
push
sarl
sbb
lock
cmp
cmc
pushf
inc
push
mov
jecxz
cld
popf
inc
or
daa
pop
xchg
cwtl
jne
mov
mov
sub
in
subb
cmp
sub
ss
mov
stc
mov
stc
pusha
add
or
push
loope
int
adc
mov
das
mov
cmp
aam
fcomip
add
iret
and
pop
xor
dec
incl
int
or
fldt
xlat
out
test
ss
sbb
int
mov
gs
das
push
repnz
popa
ror
mov
dec
bound
mov
loope
mov
xchg
xchg
add
sub
shlb
insb
push
ret
icebp
movsl
es
dec
loopne
leave
mov
cmpsl
outsb
or
dec
call
nop
jne
clc
pop
mov
arpl
imulb
add
popa
or
cmpsl
rcrl
leave
pop
fdivrl
fdiv
or
or
insl
mov
fstl
movsb
int
in
es
push
fisubrl
mov
ret
inc
adc
sahf
sar
ljmp
mov
aad
sub
xchg
sbb
push
cld
aad
sahf
aad
xchg
out
push
fnstenv
movb
or
dec
dec
xorl
pop
mov
mov
and
jbe
rorb
in
popa
adc
movsb
in
cld
insl
movsb
push
sbb
pop
andl
xlat
gs
cmp
mulb
xchg
jg
add
fidivs
stc
mov
lods
fistl
sti
sbb
js
xchg
dec
pushf
inc
or
jle
sbb
xchg
push
pusha
xchg
mov
fisubs
ret
fimuls
aad
cmp
cli
lret
inc
mov
icebp
roll
mov
mov
xor
cmp
mov
fsts
test
mov
push
sbbb
ja
inc
or
cs
mov
cmpsl
in
dec
movl
mov
xchg
ret
cmp
xchg
bound
mov
mov
or
das
lcall
inc
mov
xchg
mov
push
pop
mov
push
sub
xchg
cmp
xchg
dec
sub
out
fnstcw
xchg
jne
mov
push
mov
mov
inc
jo
cmp
cmpb
and
std
mov
movsb
sbb
loopne
clc
cld
cld
insb
dec
movsb
sub
mov
adc
push
mov
loope
rolb
inc
mov
mov
sahf
ljmp
jae
fists
or
stos
mov
daa
pop
and
mov
inc
xor
inc
enter
adc
insl
xchg
push
adc
popf
in
addb
test
push
dec
sbbb
xchg
rep
lret
jp
xchg
loope
fdivs
mov
ds
dec
enter
fdiv
jne
sbb
mov
jl
outsb
push
sub
lret
lahf
inc
and
mov
loop
test
and
rorb
xor
mov
data16
fdiv
adc
loop
cwtl
cltd
lea
test
inc
inc
ficompl
xor
cmp
mov
dec
test
icebp
pop
ss
jle
push
test
les
push
lret
test
mov
js
and
inc
xor
out
jecxz,pt
sbb
jae
dec
ds
lds
mov
pop
and
lods
jmp
jg
mov
add
add
and
negb
pop
push
ljmp
test
das
push
mov
ja
movsl
ds
fistps
pop
mov
insl
enter
and
sub
loopne
adc
mov
add
or
leave
jns
or
jge
imul
fidivrs
outsl
mov
cwtl
test
inc
mov
push
sbb
inc
ss
data16
orl
cmp
mov
out
aad
and
movsl
push
mov
ljmp
scas
mov
push
dec
cmp
sbb
gs
push
adc
jge
imul
adc
stos
add
ljmp
xorb
mov
notb
inc
inc
and
cmp
daa
pop
ficoml
jb
sti
mov
arpl
rorl
inc
mov
loope
or
mov
jg
pop
mov
lcall
cmpsb
push
mov
xchg
mov
push
fldl
cmp
xchg
and
pop
out
xchg
lret
push
ficoml
int3
cmp
outsb
fnsave
xchg
les
add
decb
jo
and
cwtl
mov
cmpsl
and
test
repz
ret
sti
sub
outsb
ja
aaa
outsb
outsb
jnp
stc
add
movsb
fwait
mov
cmpsb
mov
lods
fwait
test
or
es
dec
mov
imul
lds
jmp
fs
fs
cmc
inc
cmc
sbb
sub
std
xchg
ss
cmpsl
cmp
int
enter
fadd
push
pop
dec
mov
push
add
inc
jle
adc
mov
pop
pcmpeqd
xchg
pop
cmp
adc
dec
ffree
sbb
cmp
push
xchg
je
repz
fucomip
push
fdivrp
ja
add
hlt
pushl
aaa
arpl
stos
bnd
loope
mov
mov
repz
rorl
fsts
rcll
push
pop
mov
xchg
mov
xor
aaa
cmp
das
call
dec
xor
sub
pop
fwait
push
cltd
out
lret
out
gs
push
cld
push
push
dec
pop
out
sub
aas
lods
pop
sub
xor
push
stc
ret
jp
pop
pop
ret
push
xchg
and
add
repnz
mov
xor
test
push
pop
leave
es
out
jp
xchg
cmpsb
cmp
adc
pop
inc
mov
les
pop
dec
roll
adc
add
mov
sti
fwait
insb
inc
movsb
jae
test
repz
mov
enter
jb
pushf
mov
leave
sbb
xor
xchg
sti
inc
sbb
push
sub
fdivr
shrb
arpl
in
inc
cmpsb
add
js
push
lcall
inc
cmp
dec
stos
cli
js
add
jg
ficoms
pop
imul
popf
loop
sub
mov
xor
dec
xor
dec
jne
int3
mov
push
jmp
xchg
cmpsb
imul
enter
cmp
lock
pop
jne
sar
out
js
dec
sahf
call
imul
mov
add
lret
xchg
push
cmpsb
subps
lcall
mov
hlt
in
push
shll
into
dec
out
orb
xchg
lret
xchg
mov
mov
sub
dec
insb
dec
cli
jns
lahf
es
vdivpd
fisttps
cmp
or
int
jnp
lret
popa
cmp
mov
lods
mov
pop
mov
mov
mov
sbb
lods
repnz
leave
xlat
mov
xchg
mov
stc
negb
push
jle
cmp
inc
lds
fadds
xchg
pop
ss
test
mov
mov
xchg
adc
xchg
pop
push
mov
jno
mov
jp
or
int
xchg
setns
sub
cmp
xor
or
je
sub
loope
sub
lcall
pop
out
mov
mov
ja
or
jle
mov
mov
lds
and
inc
adc
sbb
xor
sahf
lds
mov
inc
add
stos
in
stos
or
adc
ss
loop
fldt
xchg
popa
outsb
mov
inc
push
cmpsb
push
fldt
negb
sbb
movaps
int3
pop
and
negl
xchg
push
pop
mov
xchg
lock
and
sub
cmpb
aas
imul
mov
add
outsb
push
push
jmp
cmp
sub
sub
add
and
and
lea
jns
xor
push
inc
lods
dec
sbb
pop
dec
outsb
movsb
iret
sbb
xchg
xor
mov
jnp
stos
inc
icebp
in
in
idivb
or
js
fwait
ret
outsl
and
inc
js
andl
jmp
outsl
scas
or
in
xlat
push
cli
pop
pop
popf
cmp
push
sub
inc
sbb
dec
mov
mov
push
dec
mov
sbb
fbld
call
sbb
adc
je
into
pop
repnz
pop
inc
daa
xor
cmp
push
xor
aam
daa
hlt
mov
add
pop
out
flds
mov
les
loopne
add
mov
ret
mov
mov
idivl
aam
xchg
hlt
test
push
stos
inc
das
rorl
call
dec
clc
cmp
sbb
add
adc
mov
clc
mov
leave
int3
add
push
jle
stos
jecxz
xchg
pop
cmp
jns
repz
jne
dec
fbstp
sub
xchg
pop
mov
push
xor
fwait
pop
testl
sti
adc
pusha
ljmp
repz
shl
mov
inc
jns
fdiv
imul
ss
pop
and
imul
sbb
sub
in
inc
mov
loopne
scas
addr16
mov
jp
push
xchg
ss
push
mov
or
js
pop
into
repz
aam
pop
ja
jnp
test
jo
dec
lahf
xor
adc
imul
sbb
call
xor
unpcklps
movd
das
scas
cltd
and
sbb
mov
out
adc
out
mov
mov
xor
in
push
pusha
add
cld
data16
dec
loope
aas
leave
hlt
push
or
movsb
inc
imul
inc
sbb
mov
add
ja
cmc
jp
sbb
adc
inc
adc
jge
push
add
fs
mov
or
xor
je
aaa
mov
data16
mov
shlb
pop
push
repz
mov
jl
cs
loop
outsl
dec
test
xchg
inc
inc
cmpsb
stc
sbb
inc
mov
xchg
lea
mov
mov
mov
lods
ror
mov
add
push
lcall
add
lret
mov
dec
cs
or
loop
cmp
cwtl
sub
ds
sub
movsb
leave
cmp
cli
pop
xchg
shll
sarb
inc
loope
lock
xchg
outsl
mov
pop
jecxz
scas
add
jge
pop
mov
hlt
cmp
ds
push
fdivrs
mov
inc
les
add
and
inc
imul
cwtl
add
outsl
lods
sbb
mov
lods
jne
mov
stos
pop
jno
lea
sti
add
cmpsl
in
mov
mov
pop
inc
add
pusha
add
fsubr
in
jmp
stos
das
je
test
aaa
ss
pushf
shlb
repnz
push
mulps
fimull
jg
inc
test
mov
and
inc
pop
pop
cmp
or
fucomi
std
cmpsb
lds
ret
rclb
jne
outsl
sub
cwtl
pop
in
addr16
icebp
xor
xchg
loope
out
mov
or
add
pushf
xchg
mov
sbb
mov
out
psubsb
push
clc
pop
jne
or
mov
cli
pop
loope
cmp
adcb
mov
jae
inc
push
out
test
cwtl
insb
in
ret
in
lods
dec
out
aaa
sbb
jle
call
lea
push
scas
jmp
nop
pop
jbe
dec
inc
daa
out
mov
and
mov
xchg
dec
imul
jo
mulb
or
mov
test
xchg
ret
lcall
out
cmpsb
sub
lea
inc
filds
and
stos
orb
cmp
push
in
adc
sahf
cmpsl
dec
mov
lock
mov
push
enter
xor
cs
inc
in
inc
mov
adc
jmp
shlb
inc
push
and
xchg
cmp
cli
stos
jno
mov
das
mov
nop
loopne
repz
je
xchg
push
es
push
mov
xchg
shrl
mov
mov
subb
sbb
add
popf
lods
ds
pop
outsb
pop
into
scas
int
mov
jle
fwait
lahf
inc
retw
push
jp
cmp
jo
cltd
mov
vcmpss
push
jle
leave
shr
in
pop
int
mov
xor
dec
adc
add
outsl
adc
cmc
xchg
jmp
stc
or
clc
mov
outsb
pop
mov
mov
cld
push
jns
pop
xor
mov
popf
mov
jp
or
xor
dec
xchg
jmp
imul
cs
xor
imul
ss
sbb
adc
xor
cmp
adc
dec
sbb
scas
sub
push
cs
and
pop
push
push
nop
cmp
pusha
dec
dec
lret
pusha
out
enter
fsubl
and
pop
fs
aas
jmp
and
sub
imul
mov
int
push
adc
sarb
js
inc
testl
fidivrl
into
push
fsubp
xor
test
jo
mov
mov
movsl
mov
sti
mov
cmp
cwtl
or
js
repnz
shr
sahf
xchg
dec
movsb
mov
clc
enter
xor
ffreep
or
inc
test
xchg
xor
jno
lcall
lea
xchg
scas
inc
and
adc
push
push
jmp
mov
xor
push
out
jno
dec
ret
and
loope
stos
pop
push
mov
popf
into
add
pop
pop
add
push
popa
sub
jge
inc
out
adc
stos
lods
pop
pop
inc
inc
mov
daa
or
jge
jnp
idivl
sub
add
inc
lds
in
mov
jl
jae
jg
inc
sti
lock
push
adc
lahf
dec
cmp
jmp
sbb
pop
pop
and
jmp
inc
mov
and
mov
mov
or
cmp
cwtl
cmp
pop
sbb
lock
xor
out
out
xchg
jle
fstl
movsl
adc
dec
mov
cmp
mov
adc
sub
jl
std
cwtl
sbb
adc
aam
mov
dec
xchg
and
push
leave
jo
out
xchg
or
xor
mov
pop
adc
mov
mov
aad
mov
in
subb
jb
jo
mov
lahf
or
add
add
mov
arpl
jmp
and
stos
in
pop
fbstp
lds
pop
icebp
push
pop
mov
stos
or
xchg
daa
jns
and
xchg
iret
enter
ljmp
repnz
aas
sbb
pop
test
faddl
lret
insl
scas
fdivrl
call
sbb
xor
loopne
adc
fs
fsubrs
mov
push
sbb
xorb
adc
mov
clc
push
jp
fsts
push
cmc
dec
jge
cmp
into
call
sub
rol
in
shll
cmp
push
and
jnp
dec
push
out
addb
mov
mov
mov
pop
or
mov
adc
or
cmp
dec
xor
mov
mov
repz
xchg
xchg
dec
sbb
push
dec
cwtl
in
lds
imul
stc
std
cmp
into
test
or
sbb
movsb
dec
lock
mov
or
cmc
sti
mov
jb
and
call
xchg
xchg
test
in
lea
xchg
stos
pop
xchg
mov
and
mov
mov
insb
xlat
cli
mov
push
filds
add
arpl
insb
int3
mulb
incb
gs
incl
scas
push
sti
sub
mov
mov
mov
mov
sbb
stc
lcall
sarl
movsl
gs
fsubs
lods
push
int3
stc
cmp
fnstenv
clc
xchg
out
scas
mov
sub
pop
imul
clc
xor
movsb
outsl
xchg
loop
and
sbb
lcall
adc
push
xor
xchg
cmp
loopne
cmp
andb
sub
mov
xchg
xchg
jmp
in
mov
xor
out
xchg
push
addb
add
cmp
fimull
push
into
addr16
add
jp
mov
jecxz
cli
jl
ret
or
or
fsubrl
fdivr
out
insl
push
andb
sahf
add
push
sbb
dec
int3
decl
repnz
test
ficoms
sub
push
repz
jg
js
mov
adc
add
xchg
test
dec
ret
mov
inc
lds
pop
cmp
push
std
pusha
and
mov
inc
adc
jmp
dec
ss
pop
jmp
popf
push
outsb
mov
sub
div
movsl
add
pop
insl
inc
push
in
popa
inc
aas
add
shrb
in
imul
xor
mov
daa
xor
mov
sbb
das
fwait
lahf
in
dec
inc
subl
push
pop
inc
dec
dec
in
push
gs
or
push
adc
mov
cld
shll
fwait
movsl
xchg
and
pushf
xor
bound
pop
xchg
cmp
sbb
cmp
or
cli
roll
les
xor
jnp
aam
xchg
std
jl
nop
push
cwtl
add
out
sub
add
lcall
jae
in
xor
outsl
aaa
or
aaa
or
daa
lcall
pop
cmp
cli
or
jae
and
std
sub
fistl
mov
cltd
je
fs
push
ss
mov
jb
pop
mov
loopne
lret
neg
inc
shll
int3
push
push
dec
sbb
sbb
cmpsw
fildll
jns
add
sbb
scas
movsb
jno
pop
or
mov
and
ret
sub
add
dec
add
fistpl
mov
paddsw
pop
ljmp
mov
mov
xchg
sahf
xchg
cmp
push
sbb
enter
cmovge
push
divl
jmp
pop
shrb
pop
push
inc
mov
insb
pop
xor
imul
sub
and
or
jns
push
insb
ror
or
ja
lods
push
push
xchg
cli
imul
std
jno
fdivrl
sub
pop
shrl
std
mov
aam
ret
outsl
cmp
xchg
lock
xchg
xlat
xchg
cwtl
inc
xchg
push
jb
pop
pushf
mov
icebp
push
push
es
and
mov
dec
into
ja
push
pop
ds
adc
mov
and
and
xlat
loop
insb
je
pop
mov
and
xchg
xchg
sub
out
mov
add
out
lods
cld
and
in
cmp
cmp
insb
push
adc
cmp
fnstsw
jns
mov
negb
dec
imul
mov
xchg
adc
lret
ss
mov
dec
and
inc
sti
or
push
ret
out
movsl
jl
dec
sbb
pop
stos
xchg
scas
sbb
je
movsb
sub
clc
cmp
adc
jnp
mov
repz
xor
lahf
imul
cli
rcll
ret
jnp
insl
scas
ficoml
ret
pusha
adc
xor
popf
pop
mov
xor
in
sti
push
loopne
mov
add
mov
mov
inc
sub
sbb
push
jl
addr16
sbb
mov
sti
dec
pushf
in
hlt
dec
rorl
adc
push
cmpsl
ja
iret
aad
mov
or
fs
jge
js
cld
movsb
xchg
dec
inc
or
sbb
imul
mov
imul
xor
pop
push
into
xchg
sub
outsb
xor
and
pop
cmp
fs
and
ror
or
push
scas
jno
cmp
push
adc
dec
mov
push
mov
out
sbb
or
nop
jae
sbb
clc
jb
push
cmc
or
int3
lcall
call
push
idivl
cmp
add
cwtl
mul
outsb
jle
inc
sbb
mov
pop
add
xor
js
push
aaa
xchg
xor
shlb
cld
cmpsl
mov
jns
rcrl
cmpsl
cmp
and
xchg
movsl
mov
inc
cmp
lods
rcll
pushf
push
int
jbe
rcrb
inc
inc
push
push
mov
or
mov
daa
ret
mov
sub
mov
ss
mov
test
sub
aam
jp
inc
or
mov
jno
movsl
aad
mov
xchg
jmp
xchg
andw
push
fwait
jno
mov
lahf
fisttpll
fnstenv
cmp
flds
pusha
mov
ss
sbb
push
jns
push
add
lds
push
mov
jae
mov
jge
sbb
xchg
and
xchg
mov
or
mov
inc
pop
out
stc
xlat
sbb
sbb
adc
xlat
mov
leave
sar
mov
adc
dec
cmpsb
data16
ja
mov
ret
jo
test
std
xchg
arpl
xorb
xchg
xor
ds
insb
addr16
std
lea
mov
loop
mov
sub
cltd
fcoms
sbb
dec
sar
mov
mov
adc
testl
sub
mov
fldenv
dec
dec
add
pop
jle
stos
aas
les
cmpsb
mov
adc
aad
sub
insb
cmp
cmp
push
nop
aam
mov
pop
notb
mov
dec
mov
mov
xchg
mov
cmp
icebp
and
lret
roll
push
std
ret
xchg
cwtl
fnsave
xlat
aad
fsubrs
inc
mov
push
push
fwait
jp
lds
imul
xchg
bound
sbb
jmp
pop
mov
icebp
mov
cmp
adc
cmp
jns
repz
shrb
fucomip
sub
jmp
lret
ss
mov
cmp
adc
imulb
xor
ret
int3
ficomps
cmp
es
sbb
rcrb
sbb
cmp
xchg
imul
pop
daa
fnstcw
push
push
lret
or
movsl
aad
add
daa
dec
movsl
lcall
mov
adc
mov
mov
push
pop
xchg
sub
incb
in
dec
fsincos
sbb
jnp
outsl
sbb
push
xor
cltd
mov
js
shll
cmpl
or
mov
mov
mov
push
neg
pop
arpl
or
or
decl
adc
imul
lods
in
add
pop
cmp
stos
add
je
ljmp
enter
or
pop
cltd
sub
dec
int
cmp
pop
lock
dec
xchg
fdivrl
in
lods
dec
pop
aam
ficoms
push
or
int3
gs
in
lds
jns
pop
mov
push
push
mov
sub
fmull
add
jnp
shl
mov
leave
adc
sbb
cmpb
outsb
mov
pop
mov
das
cmp
or
mov
xor
std
mov
push
push
out
andl
xchg
push
push
inc
jmp
imul
jns
dec
jne
iret
fiaddl
xor
call
and
std
rep
in
cmp
lahf
or
xchg
cwtl
sbb
add
push
pusha
imul
jg
fists
mov
inc
pop
cmpsb
stos
mov
je
fdivs
ds
arpl
adc
bound
mov
push
mov
decl
sub
testl
jns
lcall
stc
shll
fldl
cs
mov
xchg
dec
or
loope
rolb
inc
scas
jge
pop
iret
xor
adcl
hlt
dec
add
popa
and
mov
fldt
sub
lcall
cmpsb
jnp
mov
jns
jae
ret
mov
das
mov
add
scas
mov
int3
xchg
mov
push
inc
cmpsl
daa
xchg
dec
stc
in
movsb
cmpl
mov
mov
xchg
int3
adc
repz
rcll
dec
push
mov
inc
mov
sbbb
mov
jnp
mov
lcall
dec
add
popf
mov
adc
mov
cmc
adc
pop
mov
jnp
scas
pop
mov
sbb
xor
jmp
stos
leave
aaa
xchg
outsl
loop
pusha
xchg
xchg
dec
cmc
loope
push
ret
sbb
rclb
adc
mov
les
mov
fcoms
add
inc
stc
ja
mov
cmp
roll
xchg
mov
movsl
mov
fmuls
jl
imull
test
fdivs
pushf
mov
adc
fbld
ret
dec
lods
fwait
adc
xchg
xor
and
lods
xor
mov
das
movsb
and
mov
lret
fldt
sub
push
push
inc
mov
xor
test
or
mov
xchg
lea
jle
das
adc
mov
in
xchg
roll
test
or
jne
cs
pushf
aas
push
mov
insb
cmp
mov
dec
hlt
loopne
cwtl
lahf
xor
jg
lock
iret
xor
mov
addr16
jmp
or
in
xchg
jmp
xor
xchg
dec
cmc
mov
movsb
nop
xchg
in
int
pop
shll
jle
fnstsw
fs
repz
xchg
cmp
jno
lock
mov
or
rol
imul
in
add
ljmp
mov
jecxz
push
jne
cltd
and
outsl
mov
mov
lock
jl
lahf
sbb
clc
mov
jbe
inc
xor
fst
divb
xchg
push
xor
sbb
push
push
jbe
movsl
pop
inc
movsl
jmp
cli
imulb
push
dec
pop
mov
pop
cmp
movsb
sub
push
mov
push
clc
fdiv
mov
mov
cmp
adc
mov
mov
data16
out
jo
jo
pushf
out
mov
mov
rcll
sub
aas
adc
ja
out
jnp
add
out
shll
and
pop
movsb
adc
xor
incb
cmp
das
mov
out
rclb
pop
xor
xor
pop
and
jge
jp
js
test
fisttps
dec
lcall
inc
call
xor
add
dec
xchg
dec
mov
loop
xor
cmpsl
decl
fmull
insb
jl
leave
mov
sbb
sbb
jecxz
pushf
add
xor
ss
ja
xchg
sbb
cmp
jns
mov
sub
aaa
fsts
and
ret
mov
and
add
in
std
and
xor
cwtl
sub
sbb
mov
shll
insl
lock
xor
sbb
or
imul
mov
sub
les
lcall
pop
push
cmp
dec
push
mov
pop
sbb
mov
jno
jnp
stos
push
mov
cmp
xor
dec
cld
test
xor
ds
out
adc
out
xchg
call
std
shlb
aad
xorl
pop
xchg
movsb
das
or
ret
dec
and
adc
and
pop
lret
subl
and
add
push
mov
or
push
call
rcr
aaa
stos
data16
aad
inc
mov
test
xchg
sbb
dec
push
xor
into
cmp
xchg
jp
sub
fdivrs
sbb
lock
xchg
ds
mov
xlat
or
sbb
mov
xor
mov
outsl
cli
dec
cld
jecxz
aad
push
inc
adc
int3
push
ficoms
mov
arpl
adcb
inc
insl
mov
sub
mov
fldt
shlb
xor
jno
mov
addr16
fwait
in
int
nop
repnz
push
insl
shll
cmpsb
push
ret
std
add
jbe
and
fldl
out
loopne
pop
ret
dec
adc
inc
mov
pop
insb
out
push
je
push
ret
movsb
mov
pop
fadds
std
aam
mov
inc
sbb
jle
and
mov
repnz
jg
test
data16
stos
ret
popf
out
inc
add
or
cli
outsl
sbb
add
stos
call
aad
das
adc
ds
out
pop
out
ja
xchg
mov
out
rcrl
jbe
fildll
dec
iret
pop
repnz
and
adc
jmp
push
fmuls
xor
push
or
pusha
inc
rcll
in
arpl
mov
xor
cmpsb
xchg
sub
xchg
mov
nop
lret
sub
arpl
cmp
addr16
inc
sub
jno
outsb
rorb
cmp
stos
or
lret
stc
sbb
dec
jge
iret
cmc
xchg
jno
pop
scas
xor
or
imul
ja,pn
loop
jno
pop
insb
lods
fwait
mov
aaa
inc
xlat
jno
xchg
enter
xlat
push
xor
mov
pop
or
xchg
das
je
sub
or
or
popf
mov
sbb
sbb
mov
push
out
fwait
xor
sahf
push
add
sbb
mov
xchg
mov
lret
test
movsb
jge
pop
add
jge
and
jae
or
out
mov
popa
sub
out
xlat
stos
sub
scas
lahf
dec
in
cmp
shrl
test
popa
and
mov
gs
dec
xchg
lret
les
mov
mov
adc
and
stos
shlb
out
xchg
sahf
push
arpl
dec
pop
xor
das
lahf
insl
pop
or
lock
push
fimuls
andb
roll
outsb
jbe
shrb
mov
mov
jp
jge
and
lahf
int3
icebp
test
push
sarl
cmp
sub
xchg
add
cli
ljmp
into
mov
pop
das
mov
adc
pop
jne
scas
jno
dec
and
pushf
pop
cmp
outsb
add
outsl
inc
scas
push
inc
stos
push
lcall
mov
in
adc
test
in
mov
mov
add
rorb
mov
in
call
into
inc
sub
ss
fmuls
push
fisubrl
gs
dec
loope
gs
sub
mov
test
xchg
test
and
sbb
sbb
cmc
arpl
dec
pusha
dec
std
mov
popa
adc
mov
inc
cmp
inc
push
pop
xchg
test
or
outsb
cmp
jge
sti
ret
jmp
int3
jle
data16
sub
pop
dec
fstps
xor
jnp
aas
insl
adc
mov
les
inc
rcr
pop
aaa
les
jbe
cmp
cmp
repz
sbb
sbb
roll
push
shrb
sub
imul
push
xchg
cs
xlat
lret
dec
mov
nop
movsb
mov
pop
pusha
out
jp
add
or
add
add
out
sub
pop
pop
aad
out
call
push
pusha
push
sbb
out
nop
mov
xor
sbb
xchg
ljmp
xor
arpl
nop
xor
fcmovnu
fistl
xchg
mov
data16
in
dec
push
pop
lret
and
fcoms
out
push
subb
jb
xlat
iret
loope
sub
out
enter
push
or
cmpsl
nop
xchg
sbb
push
pop
sbb
dec
xor
mov
add
adc
sub
or
arpl
jmp
xlat
or
lock
cmpsl
cld
cmp
out
push
push
push
dec
nop
enter
cs
out
jmp
shlb
dec
lret
adc
insb
das
loope
call
push
jg
xor
call
icebp
popa
movsb
xchg
in
das
mov
imul
push
hlt
out
xor
push
inc
mov
call
jae
lret
popa
loope
das
pushf
bound
fidivrs
push
push
sbb
xchg
bound
cmp
outsb
ja
pusha
movsb
sti
aad
cmp
dec
pushl
test
ret
push
daa
cmp
jle
add
lret
data16
addr16
xor
mov
pop
mov
arpl
mov
jno
sahf
add
jp
pop
daa
mov
cmpsb
jp
add
gs
xor
fisubs
push
pop
into
sbb
xchg
add
es
filds
jle
cmpsl
divl
jp
jg
and
aaa
jl
pop
and
or
xchg
out
and
pop
adc
jg
dec
popf
aam
pop
push
pop
add
jecxz
aam
add
out
or
pop
idivb
int
push
mov
mov
add
dec
sbb
fcoms
pop
notb
in
ret
fcmovnb
and
add
mov
iret
imul
test
fistl
xchg
loopne
or
sti
stc
repz
and
ret
mov
mov
sub
sbb
xor
mov
mov
in
add
sub
mov
mov
repz
mov
and
movsb
or
mov
out
jl
push
inc
ja
push
repnz
mov
mov
jns
gs
push
push
mov
jnp
mov
mov
mov
push
cmp
gs
pop
and
xor
jnp
imul
sti
bound
pop
test
sarb
push
mov
enter
ss
pop
sbb
xlat
and
test
jbe
add
sti
xor
test
daa
aaa
dec
sbb
cwtl
adc
xchg
and
fimull
and
push
rorl
sti
add
inc
xchg
popl
ds
inc
jl
mov
je
mov
int3
stc
mov
std
sbb
fstl
notl
xchg
outsb
jp
ja
mov
lahf
lcall
lds
mov
out
mov
xchg
adc
pop
imul
daa
mov
jb
cbtw
xor
iret
imul
or
cmpsl
cmpl
mov
lret
test
test
mov
mul
je
loope
int
mov
mov
cmpsl
push
jmp
jno
aam
loope
jb
lret
push
adc
pop
jnp
xor
stos
clc
jne
cmp
inc
xor
cmp
ret
xchg
sbb
sarb
xchg
mov
inc
or
dec
insl
in
out
outsb
xchg
aas
dec
leave
inc
aaa
pop
lds
popl
push
mov
sahf
lcall
lods
push
or
insb
enter
lcall
pusha
dec
arpl
loope
mov
dec
sbb
adc
add
insb
dec
mov
test
jae
imul
sbb
push
dec
mov
fisubs
inc
movsb
in
cltd
lahf
test
sub
xor
push
sub
dec
xchg
cmp
aam
add
xlat
mov
xchg
out
adc
pop
sti
adc
cmp
dec
ficoml
cmp
dec
repz
sub
fsts
movsl
imul
xlat
insb
lock
sbb
pcmpgtb
inc
sahf
mov
insb
call
lcall
xorb
les
xorl
push
popf
nop
cmp
imul
mov
sub
cmpl
inc
push
pop
xchg
out
xor
loopne
and
xchg
jecxz
mov
lods
insb
or
and
les
outsl
dec
adc
stos
inc
xchg
call
pop
rcl
sbb
roll
in
mov
cmp
mov
push
int3
repnz
inc
push
add
cli
adc
adc
pop
add
jno
xor
add
push
pop
aam
inc
pop
xor
rcrl
jmp
adc
mov
stc
sbb
enter
stos
jge
pop
sbb
lea
pop
jb
icebp
sbb
jge
fucom
loope
adc
ss
mov
ds
mov
test
jo
push
enter
faddl
push
stos
inc
adc
cld
mov
ss
and
addr16
push
loopne
sub
inc
cmp
pop
push
faddl
ljmp
mul
mov
jnp
push
vpacksswb
dec
and
sub
les
inc
hlt
cmc
rolb
outsb
dec
mov
int
fcoms
gs
jecxz
mov
push
leave
mov
shlb
adc
dec
pop
js
xor
les
jmp
fistl
xchg
push
and
push
and
dec
xor
mov
pop
loope
pop
mov
aas
jne
in
or
popa
cltd
pop
mov
sahf
test
jp
mov
int3
loopne
shrl
push
mov
pushf
movsl
and
leave
lret
dec
sahf
sbb
and
inc
pminsw
sbb
jne
mov
int
add
int
fs
dec
aam
les
out
push
mov
jecxz
icebp
fsts
and
insl
dec
pop
lock
push
scas
xchg
adc
shll
or
mov
push
mov
aaa
sbbb
jg
dec
lret
push
inc
mov
or
push
into
test
and
test
loopne
dec
fnstsw
mov
mov
sti
and
jp
sub
icebp
jg
and
mov
rolb
in
sbb
fbstp
adc
add
inc
cld
lods
out
xor
sarl
addb
pop
or
jo
jecxz
ljmp
test
inc
push
or
dec
xor
pop
shll
push
sarb
test
stos
test
negl
into
xchg
lret
outsb
outsb
push
mov
ljmp
pop
add
mov
xchg
out
jns
imul
mov
mov
addr16
fstps
xor
adc
mov
mov
out
sbb
or
or
nop
adc
xor
or
cmp
dec
cmp
add
and
push
stos
mov
and
fisttpll
pop
mov
dec
test
outsb
push
rorl
xor
jo
pop
xchg
adc
lock
add
jle
xchg
jne
sbb
out
outsl
sub
fidivrl
mov
pop
int3
xchg
lcall
dec
mov
dec
mov
inc
mov
rcll
pop
jg
xor
push
lods
inc
xchg
cwtl
pop
sti
adc
sub
sarb
js
dec
xchg
fists
pop
xchg
into
xlat
addl
mov
movsb
xchg
adc
int
ljmp
jnp
pop
or
or
xor
dec
jp
gs
xchg
aam
movsb
xchg
push
xchg
add
in
jge
sub
inc
mov
sbb
lahf
mov
stos
mov
pop
push
incl
mov
inc
lods
in
jo
sbb
in
jl
outsb
jne
fists
dec
clc
inc
mov
sub
sbb
push
sbb
inc
leave
xchg
add
mov
daa
sbb
xchg
jle
ds
repnz
push
push
enter
mov
jmp
jbe
push
jmp
lods
pop
xor
in
insl
aad
rolb
mov
xchg
icebp
mov
xor
lods
insb
add
cmp
movsb
mov
pop
jmp
cltd
and
fcompl
or
jnp
nop
jnp
adcb
fbld
les
xlat
movsl
xor
insb
test
and
popa
cs
dec
xlat
pop
outsb
cmp
sbb
repz
lcall
lds
xchg
test
dec
inc
sbb
mov
je
sbbb
lret
inc
push
cmpsl
cmp
fcoml
ud0
out
ss
fmull
movb
xor
lods
fsubl
push
or
dec
cltd
pusha
push
nop
add
scas
cmc
inc
push
jmp
ficoms
mov
jp
into
add
repz
testb
bound
loope
or
fisubrl
push
push
sub
ja
xchg
fwait
xchg
sarl
mov
in
cmp
fwait
icebp
sub
jb
push
gs
fcomps
shrl
or
pop
pop
cli
add
jae
pop
nop
stc
cmp
jl
ss
xchg
jns
in
lcall
pop
or
mov
arpl
adc
mov
inc
mov
pop
arpl
stos
cmc
push
in
hlt
xor
xchg
std
test
jg
in
push
sbb
mov
stos
leave
pop
ljmp
jne
mov
test
je
or
inc
out
cmp
leave
pop
clc
dec
inc
push
jbe
sbb
xlat
negb
cmp
int
stos
pop
testl
mov
outsb
mov
aam
notb
cld
enter
sbb
cli
in
cmc
leave
pop
lods
push
sub
lea
in
lock
flds
dec
lcall
fcos
shll
ret
bound
aad
popf
sub
pop
ret
mov
dec
inc
mov
or
movsb
fsubl
shrl
adcb
push
cmpsl
push
dec
adc
xor
enter
btr
push
flds
mov
xchg
jmp
dec
jnp
pop
stos
nop
cmp
mov
sub
jne
aad
mov
js
and
out
dec
push
std
cs
ja
mov
ljmp
adcl
pop
jmp
mov
shrl
adc
push
cmp
fistl
and
sbb
mov
dec
adc
je
cmp
dec
inc
aas
std
pop
push
movl
outsb
dec
fstpt
sub
sbb
push
or
push
mov
jb
xorl
mov
out
inc
dec
iret
in
addb
jmp
into
icebp
jmp
aaa
jp
xor
ja
lret
inc
hlt
stc
ja
lcall
test
lret
mov
mov
fsub
mov
add
ds
mov
adc
daa
adc
pop
pusha
ficomps
loopne
fcomp
or
ret
mov
or
int3
mov
add
sbbl
loop
sbb
xchg
les
inc
cs
xchg
or
xor
jbe
lods
sbb
insb
stc
jbe
xchg
roll
movsb
push
lret
sub
inc
icebp
fnstenv
ffree
fisttpll
and
mov
push
fwait
decl
cli
push
ret
out
push
mov
aam
xchg
lds
add
call
inc
fwait
js
xchg
jle
aas
xor
push
js
xor
pop
js
xor
lea
shrb
mov
repnz
jp
insb
fisubrs
fbld
pop
push
lock
insb
std
cltd
scas
cmp
adc
xchg
sbb
xlat
push
xchg
xchg
adc
push
mov
push
sub
inc
mov
mov
ja
inc
jl
inc
sub
sbb
mov
jbe
xlat
dec
mov
cwtl
jp
lret
mov
xchg
and
jle
daa
dec
jae
lret
and
scas
sarb
clc
cmp
add
add
xor
or
jne
rcrl
int3
into
repnz
mov
gs
imul
mov
cltd
mov
mov
stos
mov
xchg
add
cmp
js
cld
lret
in
fisubrl
pop
mov
push
lret
inc
insb
xchg
inc
jne
add
jmp
add
sbb
jnp
jmp
shr
push
stos
push
fdivr
out
push
add
xor
subb
roll
jb
lcall
mov
push
mov
xor
test
or
push
call
push
pop
lods
mov
sub
push
adc
xchg
test
adc
jo
sub
sbb
add
cmp
rclb
mov
test
adc
fiaddl
or
sbb
ret
daa
lcall
or
xchg
lahf
and
sbb
or
dec
mov
insl
jnp
ss
les
lret
outsb
inc
mov
jno
fstps
arpl
mov
push
or
mov
les
jmp
xchg
aaa
inc
mov
cmp
cmc
jne
rcl
in
sbb
out
in
out
jmp
mov
fs
clc
inc
in
in
decl
xor
sub
test
mov
adc
insl
xor
ljmp
fldl
push
test
pop
sbb
dec
mov
cld
cmp
add
inc
lods
mov
fcmovbe
das
cmc
sub
or
sahf
negb
mov
xchg
jo
in
jns
cmpsl
or
jbe
xchg
push
pop
pop
aam
mov
jno
in
inc
sub
jae
adc
test
lret
push
test
push
fstps
mov
das
or
outsb
push
lods
xor
jns
outsl
adc
jne
cmc
jle
outsb
loopne
xchg
push
push
cmpsb
dec
xchg
pop
xchg
outsl
sub
and
dec
adcl
cmpsb
xor
imul
data16
jb
pusha
loopne
lods
scas
mov
das
jbe
ss
movsl
fsubrl
mov
aas
and
scas
shlb
mov
cmpsl
jge
push
aad
sarb
xchg
sub
andl
add
pop
aad
push
shll
jecxz
dec
stc
sub
aam
mov
aaa
xchg
and
and
inc
push
sti
sahf
xor
push
jnp
xchg
ret
mov
sbb
xor
or
mov
pop
push
ss
mov
push
scas
repnz
repz
into
cltd
push
push
push
aas
cld
lahf
ret
js
cmpsb
pop
mov
popa
xlat
sub
jns
testl
cmp
lea
mov
mov
xor
dec
sub
and
sub
hlt
add
mov
push
das
sub
das
scas
mov
stc
mov
pmaddwd
xchg
mov
mov
call
nop
out
ss
int
into
iret
mov
xor
out
or
mov
or
push
mov
cmp
push
adc
das
push
arpl
pushf
jmp
test
xor
call
int
int3
or
lods
jmp
inc
jne
ret
jmp
pop
fmull
cmp
cli
xchg
lock
out
call
push
scas
pop
add
lret
bound
pop
jbe
std
jno
add
mov
movsb
mull
loopne
rcll
add
sbb
cmp
jl
pop
inc
js
jecxz
enter
js
push
stc
call
cwtl
loopne
adcl
xor
pop
arpl
movsl
call
and
mov
stos
push
xchg
mov
in
sarl
loop
repz
fadd
cmpsb
and
out
jge
into
or
rcrb
jae
sbb
sbb
in
or
mov
mov
lods
shrl
ds
daa
push
dec
cltd
jp
adc
mov
mov
rclb
pop
rorl
aad
xchg
setl
out
bound
mov
testb
push
and
je
xchg
inc
lret
fsubl
cwtl
pop
imul
cli
ret
jp
mov
adc
out
push
jl
jnp
outsb
add
mov
sahf
test
pop
push
fs
or
mov
mov
xor
jbe
je
bndldx
pop
fnstsw
inc
mov
mov
jecxz
mov
inc
xor
and
xchg
loopne
movsl
push
add
mov
dec
inc
test
dec
test
out
cmp
sbb
sbb
lret
lret
addb
rorb
fbstp
cmp
pop
jp
jbe
lea
mov
scas
popf
rolb
test
add
dec
repz
jmp
shlb
mov
sbb
movsl
movsl
or
gs
and
mov
lret
insl
mov
call
cmp
stc
and
lahf
dec
cmp
imul
lret
out
sbbl
add
call
and
dec
out
test
int
mov
lock
xor
mov
inc
cmp
xchg
sbb
ficompl
call
js
and
lahf
bound
lock
shl
mov
sbb
testb
je
je
out
xor
jae
cmpsb
and
lock
icebp
mov
test
xor
sbb
mov
mov
inc
mov
call
push
jp
sbb
stos
lods
xchg
mov
stos
sarl
pop
stos
pop
dec
mov
sbb
imul
add
mov
in
lret
push
cld
in
inc
shl
stos
cmp
movl
fidivl
dec
xor
jmp
mov
out
fdiv
dec
cmpsb
or
xlat
add
or
and
subb
cmpsl
jmp
cmp
pop
xchg
movsb
sti
aam
dec
ljmp
mov
in
lea
adc
push
in
cwtl
add
lret
notl
inc
pusha
pop
insb
movsl
sti
ss
into
push
push
int
shlb
dec
push
nop
xlat
roll
icebp
pop
cmp
lods
pop
xlat
ret
lods
inc
or
jne
cmp
inc
and
daa
cmp
jno
cmp
stc
xchg
in
pop
sbb
loope
jl
adc
in
sub
loopne
lret
inc
lods
pop
pop
dec
jo
mov
lahf
adc
fcoml
ret
sbbl
sahf
push
pop
mov
inc
dec
xorl
leave
lcall
xor
push
in
adc
pusha
into
cs
stos
lcall
lods
js
inc
mov
les
adcb
ja
push
and
xor
and
xlat
jo
xlat
pop
lock
mov
lods
pop
mov
dec
dec
fbld
sbb
pop
mov
pop
jnp
add
pusha
cmp
lcall
daa
xor
sbb
mov
jle
xchg
mov
rcll
stos
ss
les
stc
fcomi
outsl
bound
mov
sbb
fildll
mov
sahf
nop
div
fwait
out
hlt
add
adc
faddl
rcll
jns
inc
inc
mov
arpl
cmp
mov
mov
push
sub
and
lret
leave
dec
ret
scas
shlb
popa
xchg
adc
add
jne
icebp
mov
add
dec
xor
hlt
shlb
cld
aad
sbbb
aaa
jno
loop
pushf
or
xor
fnsave
jbe
push
call
pop
adcl
lret
cmp
inc
popa
add
adc
call
pop
outsl
push
fisubl
aad
xor
jnp
pop
arpl
sub
leave
pop
jb,pt
xor
jns
inc
mov
addr16
or
cli
fs
adc
adc
jl
pop
repnz
jg
aad
popf
or
push
and
iret
mov
pop
xchg
clc
mov
cmp
jmp
insl
cmc
mov
ss
pop
mov
cmpsl
pop
and
lea
gs
hlt
mov
xor
out
jge
sbb
mov
push
arpl
pop
jo
je
cmp
call
fsub
enter
sub
jnp
mov
xchg
mov
testl
inc
add
jl
mov
cld
sahf
ds
rcl
add
ds
xor
in
jne
jbe
popf
data16
ljmp
decb
mov
cmp
test
gs
push
lret
out
shr
xor
mov
imul
aam
mov
fcomp
lret
mov
or
and
in
jge
cmpsl
aas
add
mov
pushf
scas
xchg
jmp
daa
aas
cmp
xchg
jecxz
aad
push
mov
int3
push
std
lcall
fs
mov
mov
out
in
in
jl
int3
shll
hlt
or
imul
rol
inc
push
xchg
jae
aad
neg
repz
mov
or
push
lods
cmp
imul
jno
or
arpl
push
mov
loope
loopne
inc
mov
push
lret
xchg
iret
ret
repz
arpl
insl
imul
sti
xchg
int
push
add
mov
stos
pop
fisttpl
lds
sbb
les
and
ret
and
mov
dec
push
lahf
lcall
inc
mov
in
enter
outsb
cmp
jnp
test
bound
sub
sbb
je
xor
adc
rclb
adc
cmc
cs
in
ljmp
dec
icebp
rcll
enter
inc
iret
sbb
mov
or
dec
and
mov
sbb
jge
sti
jns
cli
insb
ficoml
imulb
inc
insb
pusha
or
dec
ret
stos
add
pop
ss
sub
dec
jecxz
sub
xchg
outsb
fwait
rorl
sbb
ja
push
ficoml
sbb
cmp
das
insb
cmp
enter
in
scas
xchg
xchg
insl
movsb
cmpsb
stos
outsb
hlt
jmp
je
pextrw
mov
adcb
sahf
xchg
jne
fst
rorl
test
add
sbb
lods
test
fcomp
movsb
popl
lock
sbb
pusha
inc
pop
mov
sbb
sub
mov
add
add
lret
or
andl
lret
cmp
test
es
xor
adc
push
icebp
mov
or
movsl
jne
pop
test
outsl
sbb
and
dec
mov
rorb
xor
repz
and
loopne
mov
pop
outsb
inc
fistl
aad
xor
int
mov
adc
sbb
jae
ljmp
xchg
ljmp
call
into
cmp
cmpsb
mulb
adc
and
jne
inc
jmp
out
adc
mov
fisttpll
xchg
out
cmpsl
sbb
cld
and
int
fadds
dec
pop
cmp
outsb
pop
add
or
cld
adc
or
mov
mov
inc
cmpsl
and
xchg
xchg
clc
das
lock
dec
mov
inc
push
lahf
aad
push
pop
push
mov
pop
pop
mov
mov
es
mov
lret
sbbl
mov
or
xchg
cmpsb
shlb
sub
popf
pop
lea
xchg
pop
sub
cmpsl
pop
stos
xchg
stos
cmpsb
sub
mov
cmpl
mov
movsb
std
xchg
movsb
movsl
mov
add
cmpsl
repz
jp
add
jecxz
pop
es
shrb
mov
loopne
jno
and
inc
in
jo
ja
ret
push
push
push
or
or
jno
adc
inc
xchg
mov
mov
xchg
incb
sub
or
cmp
sub
push
jl
fistpl
and
fwait
push
pop
sub
cmp
int3
cld
sub
lcall
scas
inc
cltd
mov
push
adc
push
push
into
es
repnz
test
fisubrl
lret
aaa
icebp
mov
mov
aad
mov
mov
mov
stos
out
mov
aad
imul
das
inc
mov
jno
mov
inc
xchg
test
icebp
lods
or
cmp
xchg
cwtl
xor
andl
jae
in
mov
cmpb
inc
pop
pushf
mov
push
fisubrs
pop
aam
add
jecxz
xor
test
lods
jnp
jne
pop
enter
je
xor
movsl
scas
lea
fisttps
mov
repnz
out
mov
call
test
xorl
xchg
inc
mov
int
push
mov
inc
xor
inc
mov
add
enter
cmp
nop
xlat
lods
jae
mov
cmp
cli
loope
int
jecxz
cwtl
xchg
or
mov
inc
jle
sbb
sub
jp
mov
adc
inc
daa
loopne
mov
rorl
xor
add
dec
cmpsb
add
mov
xor
mov
pop
into
mov
inc
adc
xchg
sti
shlb
pop
xchg
add
fldt
cs
icebp
lcall
jns
sub
adc
lods
das
sub
insb
cwtl
jecxz
mov
dec
jge
and
lds
jmp
mov
add
cld
pop
xchg
pop
mov
mov
sub
test
push
notl
fsubrp
fwait
mov
and
repz
mov
add
ds
js
push
push
or
mov
daa
xchg
outsl
add
inc
or
int3
movsl
mov
mov
test
test
scas
gs
and
stos
test
stc
xor
jbe
mov
push
add
hlt
and
xor
push
jo
aaa
nop
loopne
push
ljmp
push
mov
stos
adc
or
roll
sti
iret
mov
lcall
or
and
mov
sbb
ds
xor
add
dec
int3
sub
aad
mov
shl
mov
lock
dec
sub
mov
dec
fwait
jp
popf
jnp
mov
in
and
mov
dec
xlat
push
jae
sub
mov
out
or
fisttps
sbb
rorb
pop
jmp
rcrl
cmp
cmp
test
dec
ds
ret
xchg
cmpsb
cmp
dec
dec
push
sbb
cmpsb
pop
jbe
push
add
push
sbb
mov
inc
cmp
or
inc
push
inc
insb
push
sbb
mov
jecxz
jbe
add
xchg
popf
insb
xchg
jnp
mov
jge
xor
dec
push
lods
fbstp
rclb
movsl
or
mov
out
in
mov
out
jae
seto
sub
lods
pusha
scas
push
add
xorl
or
in
mov
sub
adc
stos
or
sub
lea
lods
js
xchg
mov
idivl
adc
mov
fnstenv
xor
je
insb
ja
xor
repnz
pop
cmp
jns
push
mov
lcall
cmpsl
dec
or
loope
adc
lds
jg
sub
cmp
mov
add
mov
fbstp
xchg
leave
or
push
xchg
xor
xor
insb
mov
into
clc
test
mov
aad
xchg
ds
or
xlat
xor
push
mov
xchg
xchg
ret
cmp
ret
and
xor
or
iret
xchg
bound
icebp
fiadds
pop
mov
push
xor
xchg
mov
test
lret
cmp
out
push
dec
inc
into
sbb
pop
sbb
jmp
mov
jmp
pop
lret
pop
lods
popf
fcmovnbe
xchg
scas
inc
push
test
cmp
or
cmp
test
pop
clc
pop
je
fildll
mov
mov
xchg
xchg
cmp
xor
cld
cmp
and
sbbl
mov
push
xchg
xchg
lea
out
bound
inc
scas
shll
mov
pop
aam
mov
outsl
lahf
ss
test
nop
ret
mov
jae
in
arpl
mov
adc
aad
sub
insl
vpsubusb
pop
lods
pop
pop
test
dec
lea
ret
and
fwait
push
bound
stc
ja
adc
or
xchg
clc
pusha
cmpsb
sahf
pop
je
lret
incl
adc
jo
cld
in
mov
mov
nop
cmpsb
pop
pop
fidivs
call
pop
pop
push
inc
jge
and
std
dec
cmp
cmpsb
mov
mov
out
or
inc
adc
loope
xchg
push
stos
movsl
jne
inc
icebp
xor
test
mov
leave
outsb
lea
jl
pop
jecxz
push
sarb
and
lods
movsb
mov
pop
rclb
add
mov
sbb
add
sub
aas
inc
sarb
push
js
adc
jg
pop
fimuls
sub
movsl
fiadds
dec
ficomps
in
mov
mov
push
pop
lea
lcall
sbb
sub
ret
into
stos
xchg
xchg
adc
push
movsb
push
mov
js
out
jmp
andb
out
xor
inc
xor
xor
xchg
xchg
outsl
push
int3
or
fdivl
js
rclb
out
cli
push
inc
out
push
pusha
mov
fs
into
jae
ja
int
push
lahf
pop
push
dec
push
sub
add
pop
pop
out
mov
mov
mov
dec
and
push
rclb
call
adc
inc
mov
popa
loop
sarb
jl
jecxz
lods
test
daa
fsubr
inc
sbb
or
stc
rcrl
in
push
enter
xchg
pop
dec
sub
enter
push
in
imul
or
and
jge
add
mov
loope
shl
sbb
lods
inc
jne
leave
xor
jl
cmp
push
mov
iret
dec
fcoms
or
sbbb
decb
add
sub
cmp
insb
mov
jno
aad
les
movsb
mov
scas
cmp
cmp
xchg
inc
clc
outsl
mov
fcmovb
mov
xchg
orb
stc
fdivl
cmp
adc
sbb
dec
mov
mov
scas
xchg
mov
je
je
jae
lock
daa
test
sbb
cmc
xchg
les
test
cltd
jmp
popf
xor
lods
mov
sti
ja
mull
xor
rcll
push
sub
add
daa
sbb
stos
out
dec
inc
cltd
insb
call
scas
stos
mov
xchg
arpl
or
xchg
cmpsl
push
jnp
or
push
scas
shr
ljmp
hlt
test
hlt
inc
jb
push
sbb
push
outsb
mov
or
stos
rol
mov
ret
mov
sbbb
xchg
sub
nop
lods
stos
sar
out
je
jae
xchg
xor
out
movsb
sahf
mov
shlb
jge
adc
pop
jae
std
test
cmpsb
fcompl
dec
push
in
jg
add
pop
arpl
call
pop
fwait
inc
mov
sub
cmp
fstpt
sahf
mov
leave
imul
mov
jmp
mov
inc
dec
pop
mov
pusha
ret
pop
shll
push
insb
mov
xchg
mov
arpl
sar
std
fwait
adc
sub
or
or
inc
cmp
dec
dec
sbb
arpl
xchg
repnz
aas
imul
add
lea
insb
push
pop
add
cli
adc
lds
xor
jmp
sub
cmc
cmp
jmp
fwait
aas
lods
jo
jge
pop
outsl
in
mov
or
sub
test
xchg
into
mov
ret
lea
mov
and
xor
push
ss
leave
pop
popa
pop
cltd
and
fmuls
push
shrb
in
or
inc
pop
jmp
jns
shll
ja
pushf
mov
jns
lahf
add
xor
jl
fwait
icebp
or
repz
out
out
int
pusha
inc
and
pop
and
cmp
out
sbb
inc
xor
in
mov
cmpsl
icebp
xorb
sub
rorl
call
xrelease
sbb
dec
jns
ret
xchg
push
fnsave
scas
jmp
ret
jle
sahf
test
push
xchg
arpl
and
aaa
push
fstpt
decb
add
or
sbb
call
fimull
xchg
lods
stos
xchg
mov
aaa
xchg
jp
add
push
mov
sbbb
in
mov
ret
fisttpll
adcb
add
nop
push
imull
dec
cmp
lods
mov
loop
jg
outsb
icebp
inc
pushf
dec
or
pop
cmpsb
mov
or
sub
dec
mov
or
mov
xlat
outsl
jge
stos
or
lret
jns
int3
sbbl
fsubs
clc
lcall
das
fucom
adc
ja
test
jmp
and
lock
fldenv
mov
out
jmp
test
cli
lea
fcoms
pushf
pop
xchg
xchg
mov
xchg
cmpsb
les
lret
ret
inc
out
xchg
adc
mov
adc
mov
fstpl
or
sarb
fbld
fwait
or
jecxz
push
mov
xor
std
or
inc
adc
and
out
pushf
mov
shlb
mov
mov
cli
pop
out
dec
out
sbb
aad
inc
iret
mov
xorb
xor
mov
daa
fadds
add
int
or
or
xchg
add
loopne
cmpb
ret
clc
dec
and
imul
dec
jmp
loopne
movsl
xlat
jbe
cmpsl
daa
dec
aad
adcb
mov
mov
jp
xchg
cs
pop
daa
adcb
push
mov
lods
and
pop
into
xor
icebp
in
push
add
cltd
mov
mov
cmpsb
loop
xor
push
xor
xor
xor
xor
cmp
pop
push
xor
mov
sub
aad
mov
adc
cmp
mov
scas
adc
insl
cs
daa
int3
inc
xor
mov
mov
adc
xchg
sbb
jecxz
adc
shlb
push
arpl
jmp
outsb
add
mov
cmp
stos
idivb
stos
mov
nop
fnstcw
jb
add
icebp
shrl
andl
out
mov
push
jns
sarb
aas
push
push
sbb
xlat
cli
les
pop
dec
les
frstor
xchg
add
hlt
popa
and
dec
inc
mov
and
jecxz
ja
jns
dec
adc
lahf
gs
mov
scas
aas
sub
mov
push
xor
sbb
lods
jbe
jge
idivb
rolb
pop
push
aaa
dec
sub
test
jecxz
xor
iret
sub
fimull
sub
sbb
dec
mov
fsubrl
mov
or
push
movsb
pop
les
push
sbb
aad
mov
mov
rcr
fwait
ret
xor
repz
jl
mov
dec
or
nop
sbbb
cmp
push
push
xor
jle
xor
iret
movsb
ss
mov
add
sbb
iret
ss
xor
jle
fistpl
pop
aam
adc
inc
mov
xchg
into
jb
cmpsl
sbbl
fdivr
mov
pop
scas
sbbl
nop
push
adc
mov
mov
popa
aas
pop
cmp
adc
loope
jp
sbb
jmp
cmp
rcll
std
fisubl
sbb
popa
inc
jp
aad
lea
flds
cmp
out
mov
mov
in
mov
sbb
dec
popa
sbb
arpl
mov
cmp
mov
clc
cmc
fadds
pop
push
data16
inc
jnp
mov
or
sbb
add
add
push
xor
popa
outsb
inc
pop
mov
in
xchg
mov
jg
adc
pop
rclb
mov
ds
es
loope
push
dec
popa
icebp
add
fisubrs
int
test
or
mov
bound
and
sbb
pop
jge
insb
int
hlt
jmp
and
adc
sub
adc
pop
out
ja
loop
gs
dec
mov
inc
or
mov
repz
pop
fildl
sti
pop
xchg
scas
xlat
add
jl
js
mov
cwtl
insb
das
or
call
loopne
sahf
jbe
std
in
subb
or
repnz
xchg
ds
mov
rclb
and
loop
js
sub
xchg
adc
pop
mov
jno
adc
adc
insb
ret
sub
cs
add
xor
testb
cmp
fwait
lret
xchg
faddp
inc
and
out
inc
movsb
mov
stos
pop
sbb
pop
dec
adc
adc
push
scas
push
fwait
mov
mov
lds
pop
dec
pop
xor
or
mov
fsts
leave
mov
xchg
movsl
push
iret
sbb
mov
push
mov
push
scas
jge
adcb
out
into
sub
inc
lods
cmp
fadds
sub
push
icebp
loop
jno
lcall
test
and
push
jg
scas
add
clc
data16
sbb
xchg
jp
pop
pop
pop
jmp
mov
pop
mov
popa
dec
mov
xchg
test
dec
into
leave
and
mov
mov
ds
int3
scas
xor
dec
or
fisubl
push
and
fistpll
std
jno
mov
push
test
xor
testl
gs
enter
sub
dec
adc
xor
ja
int
cli
xlat
out
insb
ja
mov
call
inc
ret
stos
pusha
adc
ljmp
add
iret
inc
aam
clc
in
imul
mov
mov
and
inc
dec
sub
mov
sub
or
outsb
in
lds
lret
or
cmp
and
jp
lcall
lret
pop
mov
lahf
fnstsw
lea
lea
jl
mov
or
xor
push
add
bts
cmpsb
or
out
mov
es
add
into
push
loope
mov
inc
push
sbb
outsl
cmc
mov
arpl
push
gs
mov
sbb
xor
mov
mov
roll
pop
scas
jl
leave
mov
mov
sub
mov
gs
xor
mov
or
sub
std
inc
ja
test
or
les
inc
leave
outsl
movsl
and
in
add
xchg
in
out
jl
dec
out
mov
cmpsl
loope
cvtps2pi
inc
lods
xchg
movb
jnp
out
nop
bound
dec
push
lock
xchg
mov
mov
rcrl
ds
popa
and
push
sub
sbb
xchg
inc
pop
ss
iret
push
jg
mov
cmpsl
add
andl
daa
ljmp
dec
cwtl
jns
push
loopne
inc
adc
ljmp
loope
loop
shl
out
scas
or
push
pop
xor
jp
mov
scas
lcall
inc
scas
pop
pop
mov
mov
push
jo
sti
add
cmpsb
mov
je
dec
add
xchg
xchg
daa
mov
jae
sub
pop
rcrl
xchg
xchg
xchg
les
and
cmp
aas
adc
cmpsl
mov
mov
sub
bound
push
xor
cmpsb
xchg
pop
push
pop
pop
loop,pn
lahf
pop
cmp
fsubrl
je
dec
mov
pop
sbb
aam
push
mov
es
cwtl
int
and
jne
lret
sub
fldt
loopne
pop
sarb
xor
xchg
stc
aam
ljmp
out
sbb
orl
je
repz
in
and
adc
out
sbb
aam
mov
or
lcall
pop
out
out
pop
into
and
sub
adc
stc
popa
mov
mov
iret
push
adc
mov
sbb
cwtl
inc
icebp
mov
sbb
cld
push
pop
push
mov
inc
movsl
cli
adc
out
aam
pop
addr16
jecxz
ljmp
push
sbb
jmp
adc
or
pop
xlat
pop
add
inc
stos
jl
fdivrl
adc
ss
stc
xchg
xchg
jl
xchg
pop
push
xor
xor
mov
in
or
in
jb
into
pop
int3
stc
fadds
stos
pop
adc
leave
bound
popa
pop
sbb
imul
shrl
dec
movsb
or
xchg
sbb
xchg
in
out
into
shlb
push
and
mov
cld
test
fucomp
push
or
aaa
repz
push
adc
push
imul
ds
pop
mov
into
sahf
adc
imul
lods
mov
outsb
push
lea
outsb
mov
add
movsb
in
mov
sub
mov
je
xlat
bound
test
sub
mov
neg
ret
sbb
xor
push
imul
jle
out
bound
dec
adc
jge
dec
pop
dec
xchg
inc
push
outsb
lret
inc
xchg
fwait
in
les
aas
out
mov
leave
cmpsb
xchg
das
mov
test
mov
pop
sub
xor
push
mov
mov
xchg
sub
mov
or
in
mov
dec
mov
xor
sub
lods
out
sbb
inc
fmull
sub
pop
lods
push
jo
jae
or
add
fs
data16
lock
scas
call
pop
xchg
mov
out
aad
push
inc
push
or
outsl
or
stc
sbb
loop
cwtl
movsb
and
test
ljmp
cmpl
aam
xchg
inc
rcr
lahf
add
cmpl
sub
and
and
fcoml
in
xchg
int3
out
inc
mov
ljmp
sti
mov
mov
punpckldq
int3
sbb
cwtl
fistpl
inc
mov
dec
push
data16
outsb
pop
sbbl
xchg
je
and
dec
and
mov
jmp
or
adc
cmp
mov
pusha
sti
dec
fisttpl
push
add
mov
sub
pop
mov
out
push
dec
adc
fdivrs
cmpsb
push
int
inc
pop
gs
mov
test
hlt
mov
add
dec
and
paddq
andb
daa
cmp
pushl
sub
fucomip
lret
in
lcall
jbe
loope
pop
test
ja
mov
mov
mov
out
fsubl
jge
rcll
dec
lods
inc
push
push
mov
mov
xor
outsl
iret
and
rorb
jl
mov
pop
sub
cld
cmp
inc
pop
rorb
scas
jns
push
mov
in
leave
enter
stos
fcomi
dec
push
adc
insb
lret
push
mov
mov
lock
sub
inc
push
pop
outsb
cltd
pop
lock
mov
lret
sub
fistps
jl
test
push
loopne
dec
and
rorl
mov
stc
and
and
jl
dec
int
mov
jl
subb
out
mov
mov
je
imul
shrb
addb
add
mov
mov
xor
push
dec
loop
push
adc
ret
inc
fdivrl
mov
loop
rorl
movsb
inc
loop
mov
adc
addr16
dec
dec
push
movaps
jge
pop
dec
ret
sbb
int3
andl
ss
bound
cmp
aad
inc
push
mov
or
add
aaa
push
push
outsb
lcall
inc
fstpl
jmp
fcoms
cmp
pop
push
mov
fwait
cmpsl
add
clc
mov
xchg
push
pusha
fisubrl
insb
mov
data16
pop
sbb
nop
xor
mov
loopne
sahf
xchg
leave
mov
out
ret
jae
dec
jmp
xor
xor
aaa
pop
leavew
lret
mov
push
orl
xchg
shl
imul
in
jno
popa
test
stos
fidivrl
ljmp
imul
or
fistl
jae
or
sbb
jnp
out
pusha
dec
rclb
mov
fs
add
pusha
xor
mov
add
push
out
lret
hlt
cwtl
in
stos
adc
add
adc
push
mov
jge
dec
mov
fwait
icebp
adc
ret
sub
cmpsl
dec
sub
xorb
push
xlat
jnp
shlb
cs
aas
mov
mov
push
and
test
sbb
or
mov
popa
jg
lret
xchg
pop
in
cmp
arpl
dec
mov
xchg
and
scas
mov
xchg
cli
and
cmpsb
movsl
stos
int3
pop
mov
jmp
jecxz
fsub
call
into
mov
cmpsl
movsl
sbb
lcall
in
sub
cmp
cld
mov
add
jo
xor
daa
addr16
imul
sub
ja
xchg
sahf
in
jecxz,pt
out
js
insb
push
cs
shr
sbb
mov
sbbb
jl
aas
xchg
int
mov
scas
cltd
cli
jne
popf
mov
in
push
call
popf
push
fsubr
ret
pop
push
jnp
push
push
fiadds
jae
xchg
fistpll
and
js
in
inc
inc
lock
lods
sbb
lock
popa
mov
jmp
scas
jle
sbb
insb
lods
sarb
dec
or
ds
or
pop
add
mov
jl
add
jmp
mov
mov
sub
loopne
cmp
mov
xchg
add
mov
ja
hlt
shl
imulb
imul
push
aam
adc
rcrl
sti
jne
push
out
addr16
mov
jae
mov
dec
ss
arpl
out
mov
mov
ss
sarb
pop
movsb
mov
scas
lds
or
and
ss
aam
movsb
shrb
sti
inc
dec
ds
add
insb
jno
fdivr
cmp
cmp
pop
xor
loope
lds
and
dec
add
dec
cs
das
add
imul
outsb
lcall
call
movsl
lcall
out
xor
sbb
dec
mov
jae
mov
pop
call
mov
adc
loop
rcr
dec
inc
inc
aas
cmp
adc
dec
inc
xor
push
insl
decl
jo
ret
mov
leave
mov
and
fwait
xchg
mov
scas
arpl
inc
jns
cmp
ss
xchg
shll
lcall
add
mov
xchg
pushf
jno
xor
addb
fnstsw
push
scas
insb
rcll
and
fisubl
aas
fnstsw
sarb
jg
inc
shlb
incl
jl
or
rcpps
jmp
lcall
mov
push
inc
inc
outsb
or
add
mov
push
nop
test
aaa
nop
sbb
dec
nop
aas
inc
add
adc
add
outsb
shrb
add
in
pop
and
jb
sub
aaa
jae
jae
mov
xor
jo
mov
cli
pop
icebp
jmp
rcl
test
das
ss
ficomps
dec
mov
pop
mov
xchg
cmp
das
push
mov
sub
test
cmp
cli
dec
cs
int
sub
add
movsb
fwait
jg
or
cmovs
jl
in
mov
push
cmp
jb
jp
repnz
xor
sub
or
adc
es
loopne
leave
popf
loope
ljmp
fwait
and
pop
enter
xlat
ret
daa
mov
pop
lahf
adc
dec
dec
add
ds
int3
ljmp
adc
jge
push
pop
add
jbe
clc
das
add
sub
gs
mov
jg
cmp
inc
or
lret
cmc
dec
stos
mov
loope
xchg
sahf
ja
mov
clc
movsb
dec
mov
arpl
mov
cmp
rcll
movl
or
fildll
xchg
hlt
cmpl
xor
cltd
xchg
dec
aas
insl
or
xchg
bnd
mov
mov
mov
imul
or
pop
adc
ret
ret
loopne
gs
push
cmpsb
mov
sbb
dec
jmp
inc
dec
outsb
sbb
mov
mov
movsl
and
mov
cld
aam
push
push
inc
jp
cwtl
scas
pop
ja
xchg
mov
add
or
pop
addl
push
fisubl
dec
mov
scas
lods
cmp
ljmp
dec
push
subb
adc
sbb
add
imul
jb
movsb
xor
push
out
negb
dec
fnstenv
pop
push
rcrl
push
mov
loopne
xchg
jmp
adc
mov
and
jb
loopne
push
sub
insb
fcoms
mov
cmp
sbb
and
scas
pop
movb
fmull
inc
push
lret
mov
aad
cmpsl
xor
pop
je
jge
fcomps
push
inc
jmp
test
loop
fldenv
xchg
xchg
arpl
repnz
pop
test
in
mov
jbe
adc
fdivr
jns
cmc
pop
les
jne
test
imul
cwtl
das
xor
sub
push
test
sub
scas
mov
add
and
test
aad
cli
notl
ret
jnp
mov
add
mov
cmc
testl
push
push
pusha
mov
and
add
xchg
pop
loopne
int
std
shrb
fdivrl
xchg
in
jle
sahf
jbe
test
call
in
mov
mov
test
and
jecxz
pop
jne
lret
lahf
mov
cmpsb
repnz
cmp
in
xor
test
sbb
mov
fwait
push
jns
inc
lcall
in
int3
roll
cli
xchg
dec
lret
subl
or
inc
mov
add
mov
stos
into
lock
add
sbb
in
or
and
jo
in
push
sbb
mov
iret
mov
mov
pop
or
repz
mov
jmp
rolb
shl
pusha
fisttpl
out
pop
pop
dec
dec
or
pop
add
inc
jecxz
jg
inc
mov
ja
xorl
dec
es
aaa
inc
dec
je
test
xchg
mov
pop
inc
inc
ljmp
pushf
movsb
pushf
nop
test
ret
test
inc
inc
xor
pusha
pusha
fisubrs
fsubrl
dec
fwait
cmp
pop
insl
testl
dec
inc
mov
sbb
js
mov
xchg
daa
mov
rcrb
in
mov
out
sbb
aad
inc
pop
mov
jl
insl
insb
lahf
xchg
aas
mull
dec
push
dec
adc
push
cmpsl
or
sbb
cmp
sbb
cli
lcall
cs
and
andb
mov
mov
aaa
cli
cltd
adc
sbb
bnd
jns
in
inc
pop
ret
xor
sub
jp
lcall
shr
cmp
and
lcall
je
inc
roll
daa
popf
arpl
movaps
loop
call
jg
push
mov
ss
cmpsb
sub
shlb
jae
jae
scas
stc
dec
scas
roll
push
loope
jp
jnp
in
out
daa
push
adc
mov
mov
or
mov
in
shl
test
lcall
mov
aam
adc
ljmp
or
shrl
test
xor
inc
cld
std
enter
pop
lcall
jae
and
or
fidivrs
and
jl
test
add
lods
stc
jp
sbb
ss
das
cmpsl
or
and
mov
icebp
movsl
insb
stc
and
xor
aaa
shll
ljmp
leave
and
scas
mov
int
in
jbe
scas
shll
fimuls
cmp
and
cmc
es
adc
mov
repz
lds
loop
leave
xchg
mov
in
das
cld
test
inc
das
iret
xor
adc
ljmp
sub
fnstcw
xor
testl
call
repnz
std
dec
inc
cmp
popf
mov
push
sahf
dec
ror
cs
loop
add
sub
mov
xchg
inc
test
and
adc
ficomps
clc
fs
outsb
mov
push
inc
add
in
js
fldlg2
adc
popf
mov
sysret
jg
int
imul
pushf
ja
sbb
fists
fadds
insb
arpl
lret
lcall
aad
jno
mov
mov
mov
ret
and
cld
das
in
cmp
mov
jb
mov
pop
int3
les
mov
es
mov
inc
xchg
aad
push
cltd
test
mov
fstl
inc
jnp
int3
in
sub
leave
sub
data16
ss
iret
out
nop
clc
pusha
pop
orb
cs
sarb
scas
jp
cmpl
loope
aad
and
push
aas
mov
adc
sub
stos
pop
adc
dec
mov
dec
sub
leave
fs
ret
test
cmp
popf
inc
pusha
xor
add
jp
jno
in
mov
or
lock
add
mov
inc
das
sub
and
sub
and
adc
je
cmp
push
push
jle
add
imul
push
ljmp
xchg
cs
cmpsl
dec
insb
int3
sbb
xor
cmp
les
cmp
pop
push
mov
jbe
js
push
mov
fcmovnbe
lret
loop
mov
daa
and
sub
jb
js
mov
cmpsb
xor
or
cwtl
subl
sub
je
fldt
jo
cmp
add
push
repz
or
test
mov
dec
and
outsl
cmpl
movsl
sbb
fcom
enter
or
add
clc
lds
cmpsl
jp
sbb
cltd
js
sbb
mov
cmc
mov
scas
cmpsl
call
push
fucom
xchg
je
movsl
xchg
xor
mov
jmp
in
test
dec
mov
cmp
les
jae
pop
sub
sub
inc
push
inc
mov
mov
mov
mov
xchg
sti
xor
pop
icebp
enter
call
lods
inc
add
movsl
out
push
and
pop
xlat
mov
rorb
inc
cwtl
push
xchg
fwait
xchg
mov
inc
jb
jmp
jne
cld
push
mov
in
dec
adc
mov
cs
outsb
bound
push
add
and
insb
fs
mov
aas
shrl
xorl
jne
sub
popa
pop
push
dec
lock
mov
icebp
sub
dec
mov
jne
dec
sub
xor
js
jnp
push
dec
lcall
pop
filds
int
ror
scas
call
clc
jb
mov
daa
pop
pop
emms
dec
cmp
loope
sbb
push
movsb
scas
push
mov
addr16
lea
push
push
add
jns
adcb
ret
cmc
cmc
pop
in
movsl
push
fwait
sti
fwait
out
mov
ficompl
negl
inc
cmc
jle
rcrl
xchg
and
xchg
inc
xor
push
lret
xchg
int3
mov
jmp
mov
movl
int3
mov
pop
fcoms
xchg
mov
sbb
dec
out
out
jmp
cmp
nop
or
loope
cmp
xor
xor
mov
cmpsb
add
sub
inc
xor
lock
mov
enter
lods
lock
jnp
hlt
fwait
cmpsb
and
sti
aaa
sub
icebp
cmp
shll
iret
sbb
mov
dec
xchg
iret
arpl
aaa
outsl
or
pop
out
sub
into
ret
mov
sbb
imul
jp
icebp
in
shl
rcll
jb
adc
jo
fdivrl
rclb
mov
cmp
mov
push
push
cmpsl
fwait
ret
jo
je
jmp
dec
negl
xchg
mov
push
add
jnp
imul
jg
daa
movsl
fwait
xchg
ljmp
loope
adc
loope
cmp
rcl
fstl
mov
sbb
test
mov
push
dec
dec
nop
mov
and
pslld
mov
scas
push
sbb
push
sbb
and
add
pop
aaa
js
pop
xor
sbb
les
sub
shr
add
fists
sbb
cs
bound
sahf
es
push
fstl
mov
xor
rol
movsl
std
cmp
cmp
test
das
fadd
les
push
rcl
mov
mov
push
orb
inc
or
mov
ss
cld
ret
dec
jecxz
ror
xchg
shl
push
sub
jmp
xor
repnz
mov
xor
popa
sbb
add
and
imul
lea
xor
pop
loop
mov
repnz
loope
mov
outsb
in
ja
xchg
cwtl
lods
jb
cmp
add
lahf
movsl
imul
or
insl
rclb
int3
or
lock
loopne
push
gs
pusha
pop
sbb
pop
lods
mov
enter
js
cs
movsb
mov
mov
idivb
xor
and
pop
sub
stos
push
mov
jge
paddusb
idivb
lcall
lcall
lds
jle
rorb
xchg
lods
jnp
dec
jb
les
cmp
and
inc
je
arpl
xor
push
out
out
xchg
xchg
add
mov
ds
dec
in
imul
clc
negb
test
cld
adc
out
xchg
xchg
pop
adc
mov
inc
pop
jae
je
xchg
cmp
adc
adc
aas
test
rol
xlat
leave
ljmp
lock
sub
cmp
std
mov
repnz
bnd
psubusw
imul
sub
mov
scas
sbb
cltd
mov
mov
pop
imul
inc
adc
sbb
stos
ds
mov
xlat
sub
movsl
mov
jno
in
xor
mov
mov
pop
xchg
dec
je
insb
insl
aas
lds
mov
scas
adc
mov
sbb
repnz
push
lods
cmp
hlt
in
ljmp
fnstsw
fwait
out
gs
lahf
lcall
rcl
sbb
xchg
mov
inc
mov
adc
jbe
pop
outsb
rcll
push
loop
inc
or
push
adc
dec
pop
dec
dec
adc
jp
inc
and
fucomi
jecxz
cmp
sub
mov
popf
js
and
xor
sti
add
jnp
rclb
dec
jno
lret
add
cs
push
adc
dec
popf
lret
and
ja
cmp
cmpb
std
mov
int
mov
imulb
and
ret
repnz
mov
cmp
mov
xchg
pusha
test
hlt
nop
mov
add
je
push
inc
nop
rorl
loopne
sub
add
mov
mov
add
mov
sbb
jo
xchg
xchg
ss
or
push
dec
es
insb
fsts
loope
xchg
xchg
sub
xor
jg
adc
pop
fidivrs
add
cltd
decb
and
shr
and
in
ficomps
shlb
or
pop
jecxz
dec
push
jb
loope
cmp
cli
xchg
xchg
sbbl
xchg
packuswb
push
stc
mov
pushf
push
addr16
mov
lret
inc
cmpsb
xor
ljmp
lcall
mov
ja
adc
mov
pop
jns
mov
cli
xchg
imul
sbb
push
pop
in
and
repz
out
out
hlt
xorps
pop
aaa
mov
sub
test
mov
ror
mul
mov
xchg
dec
pop
mov
inc
pop
push
xchg
das
test
out
pop
insl
mov
rcrl
cld
push
dec
mov
call
jne
cmp
leave
mov
mov
test
and
add
mov
outsl
cmpsb
ds
add
jle
jmp
adc
pop
jne
int
push
push
pop
dec
inc
pop
mov
into
cltd
xchg
add
outsb
in
xchg
rorl
jbe
jbe
jb
inc
adc
xor
xorl
pop
adc
out
or
or
mov
mov
movsb
clc
pop
in
mov
adc
add
sub
adc
inc
mov
fxam
xchg
cmc
cmpsb
testb
ret
mov
lret
cmc
mov
sarb
incb
adc
mov
cmp
xor
adc
ror
or
jo
mov
lods
setnp
xchg
jl
adc
sbb
cmpsb
shlb
sbb
adc
mov
cmc
pop
scas
pop
lahf
xchg
rorl
jae
push
mov
stc
fistpll
cmp
popf
pop
cmp
cmp
xor
iret
loope
cmp
fwait
std
dec
movsb
pop
add
adc
sub
dec
mov
mov
test
pushf
adc
push
insb
push
add
call
jl
lahf
scas
jne
jl
adc
adc
int
adc
cmp
sub
add
or
dec
mov
add
in
pop
aaa
es
popf
mov
pop
imul
dec
in
gs
cmpsl
lcall
pop
adc
shll
movsl
imull
jns
scas
cmovle
jne
ss
mov
add
mov
imul
rcrb
ret
loopne
insl
aaa
dec
lods
loopne
repz
clc
cltd
stos
jo
jo
iret
and
lret
outsb
jnp
and
mov
inc
inc
aas
mov
call
mov
out
out
push
push
add
jnp
negb
hlt
stos
push
es
lock
mov
cmp
adc
call
mov
nop
icebp
test
subb
addr16
jmp
inc
movsb
adc
sub
call
cmp
sbb
cld
das
jbe
nop
lock
clc
inc
mov
aam
inc
sti
and
cmpsl
push
push
cmp
mov
xchg
xor
out
cmpsl
xchg
mov
insl
sahf
push
sub
cmp
push
in
icebp
into
mov
pop
leave
sub
movsl
pop
xchg
cmp
les
inc
or
jae
repz
ret
std
mov
push
cmpsb
cmp
popa
mov
adc
xlat
mov
xor
adc
mov
jmp
insl
mov
cmp
mov
sub
ficoms
fwait
adc
lcall
scas
jmp
mov
imul
pop
and
push
cmp
sbb
cmp
ret
rorl
addr16
in
sbb
test
sbb
gs
cmp
or
sbb
addr16
mov
push
or
nop
dec
nop
pop
xorl
add
cmp
pop
mov
or
das
pop
dec
push
mov
push
call
addr16
or
xor
sub
sub
xchg
mov
test
pushf
add
mov
dec
sbb
xor
jbe
int
dec
dec
cmp
cmc
jnp
adc
or
inc
loopne
and
mov
mov
pushf
jb
fiadds
xor
sub
js
xor
dec
dec
daa
cwtl
and
scas
cmp
pop
inc
mov
int
int3
mov
mov
stos
jne
mov
adcl
into
ds
lahf
mov
mov
nop
movsb
pop
pop
sbb
stc
test
push
push
inc
push
inc
ss
mov
mov
mov
orb
cmp
fs
push
mov
pop
lods
lea
and
cmp
fcomi
divl
add
adc
push
fwait
les
push
fwait
jno
mov
push
push
sub
shlb
out
cmp
mov
jnp
repz
stos
cltd
imul
mov
flds
add
jle
push
scas
ret
leave
and
pop
xor
sub
or
mov
cwtl
dec
push
mov
outsb
ds
pop
pop
movsb
jp
add
mov
popa
repz
mov
sbb
push
test
inc
test
or
mov
decb
push
in
lahf
sub
fimuls
fldt
cmp
inc
dec
scas
xchg
xor
sbb
ficompl
movsb
enter
ficoml
out
cli
xchg
fnsave
jle
aas
push
mov
rcr
pop
aad
jge
push
inc
pushf
pop
xor
cmp
mov
jmp
jae
xchg
sti
mov
xchg
mov
int3
lcall
stos
sbbb
sbb
sub
inc
push
sbb
scas
js
push
mov
cmp
ror
or
add
js
leave
xchg
ret
and
mov
ret
jae
xor
gs
iret
cmc
inc
aad
frstor
scas
jl
xorb
xchg
js
scas
mov
pop
jb
lea
fadds
outsl
adc
daa
or
jnp
push
dec
jnp
pushf
ficoms
cmc
jg
ret
and
lock
repz
inc
push
jbe
fsubrl
mov
mov
lea
push
push
outsb
pop
inc
sbb
lea
mov
push
mov
fisttpll
push
sahf
adc
stc
push
aam
loopne
sub
test
test
mov
add
push
pop
lss
cmp
xor
rcl
lock
push
dec
push
push
fisttpl
in
stos
lcall
rolb
xor
mov
fmuls
pop
iret
aaa
inc
inc
sbb
mov
push
sbb
sub
lcall
mov
mov
les
loop
and
pminsw
inc
jbe
and
push
ljmp
test
repnz
add
inc
pop
jmp
sub
movsl
pop
icebp
xchg
stc
scas
xchg
cmovnp
and
mov
jg
repnz
xor
outsl
fidivrl
ljmp
out
cmpsl
and
out
cmp
inc
push
scas
popa
nop
dec
mov
andb
ja
out
in
mov
jnp
xor
stc
mov
sti
notl
mov
push
add
stos
js
mov
cmc
jb
bnd
jno
std
mov
mov
jle
adc
stc
enter
lock
fs
out
adc
xlat
int
lds
mov
lret
mov
add
inc
jecxz
or
mov
push
adc
sbb
sbb
shlb
fisubs
in
cli
loop
and
es
aaa
pop
fnstcw
pusha
scas
or
fisubrl
and
scas
mov
mov
mov
scas
cmpl
stos
mov
hlt
orl
dec
js
xor
jo
jns
jg
mov
aam
sub
aam
jns
mov
sub
cld
or
jp
jno
sti
pop
sub
fwait
imul
xor
test
mov
sbb
outsl
fwait
ja
stc
sbb
pop
jge
mov
jbe
push
push
mov
xchg
jle
jle
mov
lods
in
or
adc
out
out
mov
push
fildl
xchg
dec
sbb
out
mov
lods
jmp
ss
and
movsb
mov
mov
push
jle
inc
fsubrs
movsl
xor
mov
mov
push
insl
insl
cli
loopne
mov
push
cmp
sub
inc
dec
xchg
or
mov
cmc
jg
ret
lahf
inc
mov
sbbb
push
les
sub
jp
cmp
lahf
scas
lods
inc
mov
cs
sub
cmp
adc
sub
pushf
mov
nop
sbb
inc
clc
lods
add
outsl
lfs
jp
push
xchg
mov
fs
test
sbb
inc
dec
and
add
lds
cwtl
fisttpl
and
mov
cmpsl
lcall
je
dec
push
outsl
js
push
mov
ret
flds
jle
cs
fldl
pop
mov
std
dec
jecxz
repnz
xor
cs
loop
or
gs
push
or
adc
dec
cmp
in
ljmp
inc
nop
lret
inc
lds
std
sbb
negl
sbb
sbb
xchg
leave
repz
jp
mov
xor
pop
pop
adc
xor
mov
dec
pop
dec
popa
push
mov
push
jae
loope
aas
rcll
jle
push
or
adc
test
xchg
mov
popa
gs
push
inc
or
mov
call
test
sbb
jecxz
das
pushf
jp
sub
and
dec
and
lods
mov
aaa
mov
clc
arpl
and
push
enter
notl
lock
pop
rcrb
pop
loop
dec
or
sahf
inc
divl
dec
fstpt
sbb
cmp
repz
pop
jmp
mov
mov
js
xchg
stc
add
testb
pop
fcompl
or
std
cmpsb
push
ja
test
inc
pusha
add
lods
inc
or
insb
inc
in
mov
sub
pop
mov
xchg
in
xchg
and
push
loopne
add
das
dec
sti
pop
das
dec
mov
fs
stc
cmp
push
out
lods
push
mov
mov
dec
icebp
add
iret
stc
lods
dec
xchg
movsb
inc
add
push
pop
inc
pop
lds
push
push
mov
cmp
jns
in
mov
mov
pop
add
cltd
movsb
inc
out
lods
call
pushf
ds
xor
mull
xor
repz
push
sbb
jo
dec
scas
imul
pop
daa
jg
pop
pop
shrb
dec
inc
iret
mov
cmp
dec
popa
xchg
xor
ljmp
cld
sbb
and
popa
popa
inc
inc
pop
int3
enter
inc
mov
jp
loopne
cli
inc
movsb
inc
add
push
lock
jno
sbb
adcb
aaa
jl
push
fs
int3
add
dec
fdivl
ss
in
and
enter
xor
sbb
mov
out
xchg
mov
mov
ljmp
xchg
xchg
adc
fld
movsb
inc
dec
push
fcmovb
push
adc
and
add
sbb
adc
movsl
pop
call
stos
shll
sub
push
mov
loopne
andb
lcall
test
mov
jnp
mov
roll
pop
jmp
mov
mov
ljmp
or
ret
pop
push
dec
in
pop
mov
pop
movb
shll
popa
cmp
sub
fimuls
decb
test
aam
lods
mov
pop
pop
cmc
mov
stos
fisttpll
scas
shll
and
cmc
mov
adc
or
rolb
xchg
sbb
adc
cmp
outsl
sub
cmp
fists
std
sub
pop
aad
mov
and
pop
scas
add
xor
mov
jae
xor
or
adc
idivb
cld
arpl
cmp
outsb
xor
lods
inc
adc
sbbl
imul
mov
faddl
push
mov
cmp
adc
push
addr16
pusha
jns
fmul
inc
xlat
adc
clc
movsl
push
sub
cmc
ret
push
cmpsb
cs
dec
nop
sub
xchg
fbld
xor
push
adc
stos
aad
cmp
sbb
xchg
mov
dec
adc
jo
sbb
mov
mov
mov
rcll
and
push
and
cvtdq2ps
lret
and
loop
movsl
push
je
sbb
sbbl
xchg
jne
xchg
cmpsb
outsl
imul
add
sbb
xchg
fdivrs
in
test
xor
pop
in
xor
icebp
hlt
insb
insb
scas
out
pop
mov
xor
add
loop
jecxz
aas
insb
jecxz
adc
in
aaa
fldt
sub
push
shlb
pushf
pop
das
fnsave
dec
movsl
pop
pop
pop
incb
adc
push
push
loope
xchg
daa
xor
cmp
jns
sbb
into
adc
test
loope
lret
push
cs
xlat
fcomps
js
dec
adc
pop
into
cmp
in
cmpsl
ret
hlt
aam
jbe
cmp
jl
or
jl
inc
inc
movntps
jo
cmp
sbb
or
and
ja
loopne
iret
inc
out
stc
inc
cmpsl
les
pop
adc
adc
shl
popa
faddp
sub
push
jg
test
imul
stc
cld
xor
sbb
xlat
les
leave
popa
js
cli
and
negl
fistl
and
fsubl
cmp
js
pop
xchg
push
or
fsts
mov
pop
lret
sbb
sbb
test
push
mov
mov
sub
mov
movsl
mov
xchg
sbb
xchg
ljmp
es
lock
inc
xchg
push
xorl
and
roll
pop
orl
mov
icebp
mov
test
data16
dec
mov
add
sbb
rolb
fcoml
mov
and
push
imull
imul
and
in
jp
data16
nop
sbb
out
dec
xchg
pop
outsb
jae
pop
push
fbld
jmp
inc
lea
fnstsw
ret
aas
fsubrl
sub
adc
cmp
push
push
mov
push
test
test
insl
fwait
mov
fld
push
pop
mov
xchg
leave
lods
icebp
movsb
xor
jecxz
xchg
mov
sbbl
push
xor
lcall
jl
pushf
ret
rorb
xchg
sbb
addr16
testb
shl
ds
imul
pop
in
daa
sbb
cld
push
fiadds
add
and
icebp
pop
mov
lea
faddl
xchg
out
test
pop
out
hlt
dec
clc
stc
xchg
lahf
dec
lock
mov
xorb
insb
shll
out
out
jmp
shll
pop
addr16
and
jl
xor
iret
push
push
lret
push
inc
inc
mov
jp
sbb
jl
idivb
pop
in
aas
sbb
pushf
out
mov
mov
ret
mov
inc
cmpsb
or
dec
or
ja
sbb
xor
mov
xchg
cmpsb
shll
mov
enter
inc
cmp
jnp
push
testb
mov
mov
jl
and
daa
daa
cld
clc
add
xor
mov
inc
fmulp
dec
mov
aaa
rclb
ds
decl
jb
int3
xor
xchg
push
das
dec
mov
jmp
idivl
mov
sar
push
sub
mov
aam
mov
and
push
andb
inc
sbb
and
lds
int
arpl
jp
adc
xor
sub
xor
sub
mov
addr16
mov
cld
or
pop
xor
out
insb
and
test
push
mov
sub
iret
ret
cmp
jbe
sub
aas
push
xchg
mov
mov
popa
int3
mov
sahf
fiaddl
andb
fdiv
lret
fmull
jl
mov
pop
jle
push
ljmp
pop
fnstenv
icebp
push
dec
push
pop
jbe
fmull
mov
js
test
mov
loope
sbb
lea
sub
roll
cmp
or
std
imul
jae
cmc
faddl
dec
inc
sbb
mov
push
push
jb
popa
push
and
jnp
cli
sbbb
fistl
cltd
enter
jg
aad
ja
inc
js
adc
pop
mov
mov
es
repz
jb
jecxz
add
add
clc
jg
push
fisubl
ljmp
je
ds
scas
out
jbe
leave
daa
pop
pop
jb
pop
js
decl
movsl
jne
hlt
out
nop
mov
adc
dec
fwait
mov
and
outsl
add
pop
ja
mov
je
roll
adc
in
push
mov
jle
xchg
adc
inc
xor
movsl
movsl
sbb
mov
imul
mov
adc
sbb
jl
cmp
xchg
fcom
pop
push
je
inc
jb
and
dec
sbb
xchg
xchg
cltd
mov
stos
lret
ret
data16
imul
cmp
pop
sub
rclb
jp
enter
test
loop
mov
cmpsb
pop
pop
test
outsb
xlat
sub
cs
fldl
stos
int
adc
sbb
pop
pop
in
scas
jne
pushf
in
pusha
or
add
mov
seto
mov
push
jne
adc
add
cmpsl
ljmp
or
xchg
out
test
ret
mov
mov
xchg
in
xorl
loope
ret
ds
mov
push
xchg
bound
or
jmp
xchg
adc
cwtl
in
jle
jle
loopne
adc
push
pushf
xchg
rorl
fsubl
push
pop
ss
pop
mov
ss
mov
add
push
pop
push
add
inc
jg
xchg
out
js
es
mov
mov
stc
or
mov
inc
inc
cmp
or
loope
cmpsl
cmp
jbe
stos
push
mov
fisubs
in
into
mov
hlt
mov
jne
in
xchg
popa
movsl
cmp
imul
int
and
mov
imul
popf
xor
nop
stos
cmc
aad
std
and
and
iret
cmpsl
sbb
fnstenv
shrb
xor
dec
ljmp
push
out
mov
lret
jns
iret
and
das
dec
addr16
xchg
mov
lret
adc
add
mov
lahf
jle
pop
xorb
mov
imul
xor
mov
dec
jns
inc
lods
lds
decl
push
ja
lock
sub
push
fldt
cmp
xor
add
dec
or
add
rcrb
add
cmp
popf
nop
jno
insb
filds
lea
sub
icebp
cmp
jge
imul
ret
test
das
cmp
mov
adc
in
fsubl
xor
add
loop
shll
insl
push
mov
or
clc
pop
clc
mov
in
add
aas
data16
fs
adc
and
comiss
jge
aam
shrb
mov
xor
out
cmpsl
pusha
fwait
sbb
shll
gs
mov
and
sbb
cltd
iret
jne,pt
sti
xchg
ret
cmpsb
dec
ret
jmp
or
pop
scas
sbbb
repnz
cmp
jmp
roll
pop
mov
or
movsb
bound
push
cltd
and
sarl
out
xorb
sahf
sbbl
adc
xor
es
pushf
adc
pop
fisttps
xchg
mov
idivl
push
push
mov
xor
mov
push
xchg
sub
xchg
decl
pop
ljmp
test
out
pextrw
or
dec
addr16
mov
push
movsl
pop
insl
lcall
lcall
pop
sbb
push
sbbb
mov
push
push
leave
inc
adc
xlat
fbld
xlat
mov
addr16
cmc
adc
push
cmp
clc
dec
xor
das
and
les
mov
ret
iret
mov
inc
insl
out
sbb
or
adc
jecxz
popf
ljmp
add
idivb
jnp
inc
divl
sub
mov
jae
test
ljmp
leave
pop
insb
adc
sub
mov
outsl
sub
lret
jns
xor
jns
cmpb
add
pop
sbb
add
xor
arpl
gs
aam
je
fildll
rcl
lahf
xor
sar
gs
mov
add
shll
xchg
dec
xchg
cltd
xchg
inc
adc
repnz
sub
lods
ljmp
arpl
or
mov
icebp
mov
and
lret
call
fs
shlb
test
lock
pop
cmpsb
lds
pop
outsb
jle
out
or
ret
xchg
rorl
add
add
adc
ja
outsb
jge
sub
mov
cmp
fsubr
jne
adc
sbb
fs
xor
or
lcall
loopne
mov
add
js,pn
sbb
xchg
dec
xchg
cmpl
daa
arpl
cmp
xchg
jle
xorb
mov
imul
outsl
call
mov
mov
es
cmpsl
dec
pop
lock
out
mov
hlt
push
push
push
and
scas
dec
hlt
movsl
xchg
dec
stos
lds
jae
xchg
mov
mov
pop
jbe
mov
ret
int3
pop
aad
jge
xor
add
jge
sbb
jmp
test
pusha
xor
inc
push
add
mov
xlat
xor
mov
mov
mov
push
inc
adc
out
dec
sbb
cmp
idivl
adc
mov
clc
aas
sub
cwtl
jmp
push
pop
sub
pop
icebp
pusha
xchg
lcall
pop
jb
ljmp
or
jp
push
jb
int
adc
test
mov
adc
adc
mov
out
gs
add
sbb
cmpsb
test
pushf
into
jp
aad
loope
mov
sarb
sub
cmp
sbb
or
adc
in
cmp
stos
ret
pop
sub
cmp
inc
out
pop
cmpsb
adcl
sub
pop
popa
cmp
lret
lds
jge
mov
xchg
mov
xchg
out
cld
add
das
jnp
je
pop
adc
out
loope
es
sbbl
fdivrs
mov
adc
or
lds
and
fs
dec
movsl
lods
or
add
clc
nop
push
pop
lahf
jno
sub
jmp
and
lods
testl
jl
imul
mov
lret
and
pusha
ficoms
in
push
sbb
jno
loopne
rol
mov
repnz
cwtl
dec
enter
cmp
sarb
aad
push
insl
cmp
lock
mov
lcall
insl
jmp
mov
push
ret
leave
sub
lret
pop
pop
fisubl
fildll
repnz
pop
dec
andl
imul
icebp
rcrl
and
bound
adc
pop
cli
hlt
mov
loop
mov
pop
xchg
lea
fdivrp
fstps
xor
add
adc
clc
dec
clc
fstl
in
pop
adc
cli
int3
xor
call
adc
mov
add
sub
loope
mov
xor
cli
fs
push
jno
push
cli
ds
dec
or
push
and
daa
fucom
dec
pop
add
inc
mov
imul
jno
and
add
inc
movsl
ss
loopne
cmc
jge
inc
fsubs
mov
xor
iret
data16
and
push
cmp
ret
cmp
jno
push
decb
scas
mulb
clc
cmp
jnp
in
and
aas
dec
lds
pushf
pop
lods
lcall
pop
jge
mov
cmp
js
add
cmp
xchg
gs
push
jmp
scas
out
push
fistpl
pop
or
jg
adc
mov
flds
int
sub
ss
sub
pop
xor
dec
imul
jl
push
in
add
test
push
inc
movsl
mov
shrb
aam
cwtl
xchg
add
push
aaa
mov
cld
mov
out
inc
mov
push
lods
bound
fisttpl
lcall
out
and
dec
or
mov
pop
add
inc
pop
addr16
push
in
gs
data16
xchg
bound
je
je
lods
cmp
sub
xchg
imul
or
cmp
push
es
xor
ret
shrl
test
or
pushf
mov
clc
jae
dec
call
and
in
or
cmp
push
mov
mov
or
mov
fmuls
push
mov
fwait
cltd
inc
cmpsb
out
imul
daa
push
sbbb
lcall
sub
cli
subb
dec
icebp
mov
sbb
add
cmp
loop
and
movsb
incb
and
dec
in
inc
mov
inc
or
addl
pushl
dec
dec
xor
dec
loopne
bound
push
fidivs
loope
sahf
mov
outsl
cmp
daa
iret
sub
ljmp
xchg
pop
mov
ss
scas
in
lcall
jmp
xor
push
xchg
arpl
dec
inc
addb
faddl
and
loopne
xchg
cmpsb
std
dec
int3
and
sub
jl
pop
mov
jle
in
inc
mov
scas
cld
jae
fistpl
push
mov
push
imul
cmpb
outsb
stc
mov
cli
repnz
test
cmp
loope
insb
dec
jo
dec
mov
shlb
loop
stos
mov
outsl
leave
lods
sti
push
in
push
jno
lock
mov
xchg
push
sarl
add
cwtl
mov
jp
inc
cli
sbb
out
jne
pop
xchg
lcall
out
xchg
or
mov
xor
fisttps
in
cmpsl
cmpsl
push
fistpl
lret
xor
or
xor
in
cs
lret
js
fisubs
cmpsb
adc
cmp
pop
cli
push
cmp
add
adc
inc
lcall
push
in
cs
ret
push
and
mov
adc
test
push
movsb
and
inc
mov
bound
or
pop
iret
or
cmp
or
push
out
in
sub
movsb
mov
jnp
mov
add
jp
loope
mov
push
cmpsb
inc
jg
and
pop
jmp
dec
inc
int3
jp
sub
cs
lcall
cli
repnz
push
rcl
mov
inc
mov
xchg
popfw
adc
mov
les
push
mov
jl
mov
and
lret
jbe
push
test
fildl
jns
or
ja
sarl
cmp
mov
sbb
popf
out
out
jl
jnp
daa
repz
lods
js
pop
jge
movsl
mov
in
pop
mov
ret
jnp
xchg
lock
jl
jmp
or
jge
ror
fs
mov
add
jmp
and
daa
fwait
jmp
mov
sti
and
sub
pop
add
dec
push
test
out
ret
pop
dec
inc
adc
out
idivl
dec
decl
dec
jmp
mov
sub
ret
xchg
mov
loope
xchg
mov
jnp
enter
jmp
mov
shrb
pop
nop
push
out
xchg
cmp
pop
add
xor
xchg
rclb
xor
popa
imul
add
mov
jmp
inc
insl
cmp
orb
test
sub
jle
iret
sub
sub
or
pop
inc
mov
das
or
adc
sti
xchg
add
dec
mov
ror
outsl
popf
out
mov
cltd
lahf
sbb
aaa
mov
scas
push
cltd
xchg
xchg
outsl
push
in
bound
dec
inc
cmp
ss
jp
imul
nop
mov
xor
dec
inc
cmp
add
xchg
mov
js
lret
inc
rolb
lods
cmp
xchg
mov
or
dec
jmp
clc
sahf
std
mov
or
push
inc
and
jl
stos
shlb
mov
stos
mov
sub
pop
xor
repz
test
adc
adc
std
lcall
pop
pop
xchg
push
push
inc
repnz
sub
lods
lds
xor
push
outsb
leave
mov
or
mov
add
or
mov
xor
pushf
push
pop
jl
cmp
fisttps
jb
ret
fadd
add
mov
adcb
outsb
xor
push
and
int3
jp
cmp
subl
mov
cmp
gs
shlb
mov
jl
arpl
pop
negb
es
clc
xchg
xor
int
adc
int3
ret
insb
mov
push
frstor
inc
in
scas
lods
cwtl
mov
ret
mov
inc
jb
dec
add
rcrl
and
mov
jecxz
xchg
xor
mov
das
mov
cli
mov
icebp
repz
mov
inc
inc
and
cli
xchg
xchg
repnz
dec
mov
bound
sbb
call
push
or
cld
idivb
std
shrl
mov
pop
std
or
addr16
jl
out
sub
stc
push
imul
jnp
cmpsl
inc
ficoms
xor
subl
loop
xlat
andl
jnp
fnstcw
pop
cli
sub
in
aad
add
roll
pop
xor
fs
xor
inc
jbe
gs
scas
imul
mov
push
jmp
sub
pop
pop
cld
cmc
outsb
or
aas
addr16
loopne
ljmp
movsb
cmpsl
les
fisttpll
xor
int
lods
mov
clc
cmp
cmovo
dec
sbb
push
pop
std
cltd
jge
or
jmp
lds
sub
inc
mov
xlat
shll
push
pop
mov
stc
mov
sub
push
push
lcall
int
call
outsb
jp
fisubs
adc
lock
std
sbb
sbb
movsl
inc
cmp
mov
xor
xchg
add
shrb
add
pop
rolb
fs
xchg
daa
stos
inc
dec
scas
sbb
or
add
pop
int
pop
xor
xchg
fidivrl
cmp
aas
lahf
out
ss
inc
sbb
dec
imul
aad
xor
out
std
push
rcrl
in
fistpll
sbb
sbb
jge
cmpl
mov
xor
popf
xor
icebp
in
cwtl
in
push
mov
movsb
add
adc
dec
repz
and
xchg
sub
sbb
pushl
mov
aas
incl
pop
and
and
mov
out
scas
push
enter
scas
inc
dec
xchg
and
cmp
call
xor
push
mov
xor
pop
push
xor
ds
ljmp
outsb
stc
mov
sub
lret
call
int
push
bound
mov
add
sbb
push
imul
mov
adc
mov
out
xlat
sbb
xor
and
mov
mov
out
mov
mov
push
sbb
hlt
cld
insb
xchg
scas
or
ljmp
add
js
ds
cli
test
pop
mov
mov
movsb
loope
xchg
aas
pop
stc
dec
push
das
cmp
call
faddl
test
int3
inc
std
nop
popa
testl
je
mov
ja
mov
pop
xchg
mov
rcrl
das
leave
fistpl
xorl
jge
push
negl
out
cmp
scas
mov
xor
xchg
test
or
clc
out
cmp
mov
push
add
nop
mov
movsl
pushf
test
movsl
mov
test
jae
jbe
push
lods
mov
add
leave
sub
cmp
mov
ds
mov
jae
cmp
mov
fdivs
fadd
ljmp
test
jmp
jg
cmp
cmpsb
xchg
dec
mov
sahf
cmp
push
adc
jl
inc
repnz
es
test
xor
adc
dec
jne
movsl
in
push
adc
addr16
inc
xchg
movsl
push
adc
mov
mov
pop
and
fmuls
call
iret
arpl
out
and
sbb
jg
outsb
fwait
pop
test
stos
xchg
add
mov
ljmp
mov
sbbl
xchg
ret
pop
cli
ja
aas
xchg
pop
push
mov
adc
jp
push
add
ret
or
ds
loopne
sub
jnp
out
fmuls
ret
sbb
adc
loope
xchg
dec
or
pop
in
clc
jnp
shlb
lods
push
dec
xor
xor
inc
adc
mov
in
cltd
outsb
jmp
cmp
movb
movb
push
xchg
imul
and
into
mov
xchg
xchg
push
push
pop
pop
push
mov
movsl
out
outsl
cmp
mov
mov
xor
jp
xchg
adc
in
xor
repnz
adcl
jne
or
insl
ds
hlt
push
lods
sub
jp
sub
pop
push
into
jbe
mov
ror
lret
fwait
rorb
pop
stos
and
ss
pop
cmp
lods
outsl
stos
data16
adc
shrb
stos
jecxz
xor
dec
jbe
and
daa
xchg
lret
xor
dec
sti
xchg
fdivrs
and
mov
sbb
shl
and
or
jnp
mov
push
mov
xchg
push
sub
pop
mov
or
loopne
cmp
jo
std
shl
dec
test
cmp
inc
add
test
jge
orb
stos
mov
pop
push
fs
inc
push
fsubl
cmp
aaa
mov
xor
mov
xor
mov
jns
cmpsb
mov
aad
mov
xchg
mov
insb
mov
cmp
jbe
mov
leave
mov
gs
jnp
inc
sub
xchg
lret
or
ror
les
lods
lcall
movsl
pushf
and
add
shll
sbb
ret
xchg
and
add
mov
ds
xchg
cmp
lods
divb
gs
mov
rcrb
or
stos
dec
xor
jp
inc
cwtl
mov
leave
cmpsb
out
add
jle
fcomp
enter
inc
stos
cmc
test
test
inc
imul
or
mov
outsb
stc
aam
orl
popf
popf
add
cld
rolb
lods
ljmp
pop
clc
les
out
xor
xlat
jo
sahf
mov
sub
and
dec
ss
or
cs
or
out
xor
or
cmc
fstps
cmpsl
rep
fiaddl
popf
out
das
sbb
jno
sbb
arpl
repz
adc
inc
mov
adc
xchg
mov
cmpsb
sbb
test
mov
repnz
out
pop
dec
shrl
jmp
push
jg
dec
push
xchg
jmp
jecxz,pn
mov
and
lret
ret
push
or
jle
fnstenv
mov
lock
dec
push
add
jg
imul
cmp
test
movsb
loope
imul
pop
fisttps
hlt
inc
and
int3
pop
sti
ret
push
shl
push
mov
mov
leave
push
div
data16
sub
adc
push
pop
imul
pop
sbb
hlt
fwait
ret
xchg
pop
adc
subb
add
pop
push
dec
mov
shrb
inc
pop
cmp
xchg
jl
mov
xorb
mov
add
movsl
adc
std
add
add
jle
cmp
and
xlat
cmp
sti
dec
int
push
add
push
in
push
int
mov
sub
stos
inc
fdiv
shll
cmp
mov
mov
pop
ja
jp
sub
jmp
or
je
xchg
pop
add
psrld
ret
lret
orb
test
xor
dec
aad
mov
fiaddl
adc
xor
add
popa
aad
mov
mov
add
sub
lea
add
push
pop
lds
or
gs
lea
sub
cmp
push
in
lcall
jo
adc
dec
test
adc
fisubs
cmc
outsb
mov
cmp
fbld
add
stos
mov
mov
movsb
xchg
xlat
or
test
add
lea
data16
sub
push
pusha
mov
mov
jp
in
ja
rolb
lret
in
sahf
xor
lcall
and
add
loopne
xchg
je
imul
divb
test
imul
movsb
cmp
push
xor
stos
pop
adc
popa
pop
cmp
or
imul
test
pusha
js
add
addr16
adc
sub
push
dec
lahf
insl
mov
add
scas
and
adc
or
dec
fdivrs
xor
mov
sbb
cmp
mov
or
and
mov
inc
inc
xor
nop
mov
movsb
pushf
mov
out
mov
jns
std
inc
jecxz
sub
add
adc
outsl
adc
inc
push
dec
fistl
and
imul
mov
call
xchg
test
rcll
loope
and
pop
lds
aaa
rolb
int3
rcrl
jg
or
fildll
mov
jae
pop
jp
ds
mov
leave
add
pop
jl
cmp
push
loope
jmp
push
pop
cltd
inc
enter
cmpl
subl
into
jne
in
aam
les
call
mov
jne
repnz
sbb
gs
cwtl
mov
lods
sub
xor
and
mov
mov
cmp
mov
or
cmp
pop
sbb
lods
int
es
in
jnp
cli
repnz
rolb
lock
mov
or
test
cltd
cmp
push
out
aam
test
lods
xor
jo
cmp
sbb
outsl
pop
jae
outsl
xor
imul
push
das
xor
adc
jns
mov
iret
xchg
repz
cmp
bnd
or
push
mov
xor
inc
fnstcw
aas
inc
push
jns
add
cmpl
inc
or
or
gs
cmp
cmp
pushf
ja
inc
enter
mov
mov
lds
popf
or
arpl
mov
inc
cmc
pop
faddl
mov
out
in
mov
lods
fsubl
inc
cwtl
mov
int3
sbb
les
out
mov
jno
jg
mov
push
xchg
sbb
sub
aam
pop
dec
adc
jno
jne
dec
popf
xchg
jmp
into
xlat
ret
mov
cmc
out
jp
push
fisubl
sbb
sbb
cwtl
add
push
xor
frstor
bound
dec
add
lock
jp
pop
push
inc
dec
mov
mov
add
mov
ret
mov
orl
dec
mov
xor
push
xor
gs
fs
fdivrl
push
scas
mov
and
sbb
iret
xor
into
xchg
mov
inc
lret
inc
enter
loop
xor
mov
fsubrp
shlb
cli
cmp
jnp
jl
outsb
mov
dec
xor
push
pop
inc
scas
pop
xor
push
outsl
pop
adc
inc
fstp
out
shr
pop
jg
pop
xchg
cli
test
add
gs
lock
or
sbb
xlat
xchg
pop
test
push
sub
cwtl
ja
sub
enter
cld
or
jne
loope
aaa
and
fimuls
bound
enter
icebp
lret
pop
push
cmp
insl
push
add
mov
dec
jne
loop
dec
dec
imul
adc
loopne
stos
xchg
lds
jnp
scas
fisttpl
pop
bound
in
shlb
xchg
mov
push
mov
pop
xor
fwait
cs
fwait
xor
cmp
mov
call
out
mov
mov
xchg
fiadds
mov
les
push
xchg
adc
insb
inc
pusha
shlb
enter
mov
adc
fisubl
pop
gs
xchg
ret
xchg
dec
fs
mov
mov
test
shrl
dec
scas
mov
fidivl
in
lea
jg
and
cmp
jae
mov
imul
mov
mov
scas
jmp
xor
xchg
lret
lret
inc
or
jo
or
insl
jg
or
add
loope
cmp
mov
and
cmp
mov
loope
push
addl
je
add
pop
arpl
out
and
xor
loop
jns
js
das
xchg
adc
jns
fimull
enter
add
jns
xor
fcmovb
scas
pop
ret
fwait
sub
enter
lea
push
mov
cli
test
arpl
fmuls
jmp
push
popa
fisubs
push
cwtl
mov
pusha
mov
xchg
or
mov
xor
and
pushf
mov
in
adc
cltd
orl
aad
mov
push
adc
sarl
rcrl
test
test
dec
adc
jo
cmp
into
movb
or
loopne
jbe
or
dec
addb
xchg
cmp
cmc
cmp
mov
repz
inc
push
das
jecxz
cli
mov
ljmp
mov
fdivr
sbb
cld
lret
shlb
leave
in
aas
das
psrad
lock
stc
push
xor
cmp
jns
pop
aad
pop
das
call
and
adc
test
stos
xor
jl
out
jnp
cwtl
pusha
pop
adc
jge
adc
and
out
adcl
sub
xchg
push
adc
and
dec
xchg
aas
shrb
fbld
mov
pop
lret
clc
cmpsl
insb
lret
mov
xchg
mov
out
rolb
cmp
lock
test
pop
std
dec
mov
movsl
inc
xchg
insl
mov
rorb
ljmp
jbe
adc
dec
jb
add
xchg
movl
add
pop
int3
ret
or
movsb
inc
cmp
xorb
mov
add
sub
pop
mov
std
add
jb
jae
clc
cmp
lock
into
push
mov
xor
std
popf
in
cs
sub
sbb
mov
pop
gs
push
test
je
test
cmp
pop
pushf
outsb
and
test
jbe
mov
add
push
xor
xchg
scas
inc
and
fmull
imul
and
or
xor
adc
pop
out
scas
pop
sub
and
mov
mov
dec
call
sbb
int
dec
sub
aad
jle
jae
jae
cmp
push
aaa
cmp
cmp
fsubs
push
test
dec
mov
enter
test
in
mov
jno
pop
aad
xor
arpl
mov
add
cmp
stos
in
inc
sub
pop
dec
mov
jp
insl
inc
jp
fnsave
sub
push
push
sahf
lods
ja
iret
sub
jg
das
mov
imul
xchg
in
ds
enter
and
popf
mov
popf
pop
call
push
xor
in
jno
cmp
dec
push
cs
xor
inc
xor
sbb
xor
lea
lock
add
dec
fs
sbb
scas
stc
jge
push
xor
lcall
pop
mov
xor
aaa
test
mov
jnp
cmpsb
int3
cmpsl
jne
popl
mov
sub
mov
push
jae
xor
test
cmp
pop
out
ds
jle
stos
jle
push
stc
push
and
cmp
or
popa
sti
mov
xchg
scas
jp
mov
sti
jecxz
add
clc
push
lcall
mov
cmp
fwait
mov
push
scas
xchg
jbe
jnp
mov
idivl
leave
xor
mov
lds
cld
lock
adc
cltd
push
aas
ret
dec
insl
mov
sub
fcmovbe
pushf
frstor
insb
push
sbb
dec
push
leave
int
lock
inc
mov
js
push
xchg
addr16
loope
dec
int
arpl
clc
in
add
sbb
leave
jmp
scas
push
stc
shrl
stc
pop
push
shll
rcrb
jne
repz
loope
mov
into
jo
pop
int3
mov
sti
into
lea
inc
mov
jmp
imul
mov
arpl
and
and
int
or
call
pop
mov
jg
lock
sbb
jmp
pop
aam
mov
add
mov
shll
cmp
fmul
arpl
daa
addl
repnz
push
pop
es
scas
rcll
fwait
or
inc
sub
inc
push
mov
bound
and
mov
adc
jp
adc
sub
out
add
jnp
xor
cmp
xorl
xchg
dec
push
pop
in
sbb
dec
mov
cld
and
inc
pop
jle
out
test
mov
andl
cwtl
in
xor
or
movsl
ds
push
xchg
scas
xchg
sbb
inc
push
test
scas
cwtl
subb
lods
arpl
and
and
pop
stos
adc
imul
or
imul
repnz
in
add
sub
mov
gs
or
repnz
add
popf
insb
xchg
lea
cmp
jae
pop
dec
and
sbb
sub
mov
outsl
dec
mov
inc
bound
pusha
cmpsb
clc
or
out
and
jbe
or
lock
pop
ror
pop
insb
sti
jnp
jmp
mov
xchg
scas
and
inc
adc
loop
pop
push
das
ret
mov
dec
mov
into
sbb
cmp
outsl
dec
dec
jb
lcall
rol
and
movsb
outsb
sub
cmp
stc
jbe,pt
mov
in
jns
inc
loopne
fsubl
std
jge
clc
xchg
and
or
mov
lock
mov
sbb
movsb
pop
scas
mov
and
sbb
stos
clc
and
xor
sub
mov
mov
mov
jb
leave
mov
mov
sbb
inc
xchg
out
jmp
fidivs
add
shll
cmpb
cmc
icebp
xor
jae
mov
sub
xor
aam
cmp
cmp
pop
movsb
rcrb
pusha
mov
inc
dec
add
cltd
arpl
aas
xchg
outsl
sbb
mov
lahf
sbb
mov
iret
hlt
push
push
rol
push
lret
mov
cmpsb
add
sub
push
into
ret
xor
push
int
pusha
out
inc
dec
dec
inc
les
cs
add
stc
xor
in
jnp
adc
jmp
push
loopne
xchg
movsb
pushf
test
xor
sub
cwtl
or
jge
push
je
in
push
add
jmp
adc
push
mov
or
loop
mov
mov
repnz
int3
cmpsl
pop
inc
or
push
pop
jae
jo
jp
push
adc
frstor
out
outsl
inc
movsb
mov
mov
int
mov
jge
cmpl
lock
push
in
adc
mov
push
push
mov
out
pop
sub
or
insl
stos
fwait
push
inc
insl
out
lods
pop
pop
and
add
incl
mov
sbb
decb
or
cli
out
dec
mov
mov
ret
mov
stos
ds
sahf
arpl
lods
mov
mov
inc
dec
pop
mov
clc
mov
fwait
adc
sub
movsb
jns
out
pusha
xchg
jns
imul
shl
jae
inc
add
cs
movsb
push
aam
or
aad
les
mov
pop
insl
xor
call
pop
sbb
mov
mov
pop
fists
push
jne
mov
pop
in
insl
stos
cltd
jae
paddusw
xchg
iret
push
or
or
add
mov
inc
movsl
xchg
lods
jbe
mov
push
aas
and
repnz
bound
and
in
xchg
movb
mov
ret
inc
sahf
mov
repz
adc
mov
and
dec
cmp
lock
mov
std
pop
fidivl
dec
jge
push
ds
adc
andl
mov
and
mov
lea
xlat
loop
fisttpl
adc
aad
sbb
cmp
mov
fmuls
rcr
sub
xchg
push
jp
mov
adc
add
mov
stos
mov
jle
cmpsb
lock
xchg
iret
xor
rorl
rcll
fisubs
jno
in
lods
push
roll
ret
xchg
and
popl
add
or
into
in
pop
cli
and
aaa
clc
push
sub
xchg
pop
fs
inc
mov
out
insb
jnp
iret
mov
push
addr16
pop
pop
outsl
mov
jb
arpl
push
and
sub
xorl
jmp
popa
sub
push
popf
inc
lea
pop
clc
pop
int
movsb
lods
pop
push
stos
rcll
movsb
movsb
outsb
lea
insb
cmp
or
fwait
add
mov
pop
adc
or
inc
in
hlt
mov
rcrb
sbb
ror
lret
lods
xlat
hlt
aaa
jnp
mov
sub
xchg
pop
cli
push
imull
popf
sti
fcmove
pop
out
stos
or
loope
pop
ficoml
mov
rcrb
mov
out
cmpsb
push
push
inc
pusha
lods
mov
aaa
cmp
mov
sbb
mov
add
pop
add
jmp
and
icebp
jns
int
push
sbb
mov
out
dec
mov
sub
scas
dec
inc
stos
xor
imul
stos
xchg
mov
ds
shrl
inc
mov
scas
ljmp
loopne
jmp
sahf
mov
mov
sahf
insl
iret
les
jno
pop
stos
cmp
adc
inc
inc
jle
inc
adc
jo
rclb
in
dec
xchg
test
dec
mov
inc
push
inc
out
mov
data16
add
je
sbb
dec
push
mov
outsl
lret
mov
pop
out
aas
iret
push
push
notl
js
andb
scas
out
je
pop
gs
sbb
fs
sti
and
and
sub
insl
fwait
mov
adc
in
lods
rcr
pop
hlt
or
add
mov
jmp
push
aad
jge
mov
or
dec
inc
mov
fildll
sub
gs
cmc
pop
loop
sbb
sbb
adcb
mov
mov
dec
cmpsl
mov
rcrl
cmc
insb
dec
pop
loope
jb
adcb
fwait
jg
and
shrb
or
or
icebp
cwtl
movsl
pop
lcall
jecxz
test
loop
testl
lock
scas
xor
fisttps
out
xchg
lcall
mov
clc
adc
and
sub
pop
mov
cwtl
push
imul
inc
xor
mov
cmp
fdivrs
or
mov
jbe
push
cmc
cli
in
test
inc
mov
push
popf
call
addr16
cli
ror
inc
jmp
pushf
xchg
mov
cmc
xchg
out
lock
ds
mov
bound
adc
sbb
push
mov
jno
dec
sbb
jne
fs
cmc
rorl
mov
and
popa
ret
or
push
out
mov
nop
pop
scas
repz
mov
sbb
jne
lret
jns
xlat
lods
mov
movsl
push
add
out
add
test
cs
lret
dec
mov
sub
jmp
adc
jno
test
ds
and
add
data16
inc
push
and
fcomi
xor
push
mov
push
int3
sub
cltd
inc
ret
lcall
push
loop
add
stc
fdivrl
mov
ja
jl
cmovs
push
xchg
sti
in
or
cmp
lret
pushf
pop
ss
std
hlt
testb
cs
xchg
stos
pushf
imul
sbb
dec
or
sub
int
or
in
nop
push
incb
xor
outsb
enter
lds
call
jg
sbb
mov
mov
rcl
stos
sarl
jmp
sub
jo
sarl
jns
dec
call
add
dec
dec
pop
mov
ja
add
xchg
movsb
outsb
xchg
ror
jmp
shll
out
mov
cmp
imul
push
insl
fs
jae
xchg
leave
fidivrl
iret
shlb
pop
push
dec
push
ds
inc
lcall
imul
test
and
add
sub
leave
ljmp
add
mov
sbb
enter
repz
jp
inc
lcall
jl
mov
outsb
inc
ljmp
jg
mov
dec
das
loope
fsubp
jg
test
mov
push
call
ret
lds
mov
aaa
ror
sub
jp
shlb
jp
lea
icebp
sbb
xor
push
push
jle
jno
adc
cmc
add
dec
inc
addr16
pop
lahf
std
xor
jbe
das
loop
push
in
adc
shll
stc
andl
mov
cmp
rolb
push
rclb
and
jp
sub
xlat
xchg
arpl
xchg
xchg
fstpl
and
sub
repz
jns
mov
out
dec
jbe
cwtl
js
insl
inc
shrl
push
cmp
outsb
push
pop
jo
shl
mov
dec
fcmove
ret
mov
mov
movsb
pop
xor
inc
hlt
fdivs
mov
xor
cmpsb
shll
pusha
outsb
add
stos
cmc
adc
aad
push
lcall
xor
add
insb
fisttps
add
xchg
inc
cmp
and
je
and
repnz
xchg
jnp
scas
sub
sub
out
sub
hlt
mov
xor
pop
mov
fstl
push
xchg
xor
das
daa
mov
or
jp
rcrb
in
add
loope
push
sub
nop
cmp
fsubl
cld
lock
lahf
popf
or
icebp
cmpsl
jnp
and
mov
adc
in
jle
xor
inc
lcall
jl
subb
rcrb
ret
stos
cmp
pop
imul
and
in
ret
mov
cmp
add
lods
jp
in
pop
pop
adc
push
insb
push
push
clc
adc
xchg
shll
and
jno
insl
pushf
clc
add
sti
scas
arpl
enter
imul
shlb
xor
sbb
sub
cwtl
lds
mov
stc
sub
xor
imul
mov
push
sub
xor
sbb
add
rcr
ja
xchg
jmp
push
or
orb
or
xchg
outsb
sub
sbb
mov
int3
mov
pop
lret
fs
mov
push
outsb
push
ds
mov
sbb
pushl
aas
das
mov
fs
es
fildl
fxch
mov
icebp
xchg
push
dec
fld
lret
bnd
xchg
lods
pop
jbe
cmp
jmp
sahf
jae
shlb
and
dec
sub
popf
mov
jno
or
pop
push
cmc
daa
push
mov
call
jbe
insb
aaa
lea
leave
mov
test
sti
sbb
jmp
dec
push
lock
pop
sbb
cmpsl
inc
xchg
add
into
mov
pop
jbe
ret
cli
mov
inc
mov
movsl
sub
mov
xchg
push
pop
scas
mov
dec
icebp
dec
and
mov
std
sub
push
xchg
sub
fldl
jge
cli
or
ja
jns
mov
dec
test
adcl
dec
cmp
fadds
mov
cmp
mov
movsb
inc
in
ja
call
inc
xor
adc
cmp
pop
lock
std
adc
mov
je
sbb
add
insl
add
andl
stc
mov
bound
sbb
dec
negl
ljmp
and
test
mov
push
xchg
test
sub
xchg
inc
xor
fistpll
cwtl
test
mov
rorl
pusha
inc
push
add
aad
xchg
cs
dec
sub
hlt
adc
cmp
mov
ret
adc
add
mov
mov
data16
sbb
cld
int3
push
call
pop
jmp
mov
push
in
and
push
pop
out
mov
cs
xchg
push
xchg
enter
adc
jmp
dec
jne
mov
mov
pop
mov
lahf
jmp
or
loope
sbb
cwtl
outsl
dec
js
shl
or
jg
hlt
fcomps
repnz
push
rcr
icebp
call
inc
sbb
sbb
sbb
pop
xor
montmul
cmpsb
ret
out
stos
nop
or
enter
jp
lods
xor
movsl
in
jbe
outsl
insb
scas
sbb
int
adc
adcl
inc
xor
aam
fcoml
call
insl
or
mov
xor
sub
lret
jg
mov
inc
das
jl
push
xchg
or
add
inc
lret
loopne
mov
divb
aas
add
mov
fsubrs
stc
sub
das
add
lret
aam
repnz
imul
lock
xchg
xor
mov
loope
enter
out
and
dec
sub
outsb
pushf
jg
inc
popa
fs
mov
sbb
jno
stos
xor
cmp
jns
jne
fcompl
insl
xor
cmp
sub
mov
loope
stc
js
jmp
fldt
rcrl
inc
cli
mov
jb
scas
sub
daa
out
cmp
aam
mov
insl
pop
imul
mov
add
pop
test
sub
dec
in
fsts
or
dec
mov
jo
jge
inc
incl
orl
add
cmp
jge
lcall
push
cmp
ljmp
sub
js
or
adc
dec
or
insb
outsb
mov
jmp
fsubl
fildl
cmp
cmpsl
daa
mov
adc
fldenv
or
dec
sbb
pop
je
push
jge
das
or
mov
dec
xchg
and
xchg
fisttps
int3
sbb
inc
inc
xor
int
adc
xchg
jns
lods
jecxz
mov
sbb
adcb
insb
pop
xor
dec
push
mov
sbb
cmpsl
shrb
ds
into
sarb
stos
push
clc
cmp
dec
push
aas
mov
pop
push
outsl
shrb
inc
mov
cmpsb
mov
shrb
dec
and
fidivl
add
cmp
inc
mov
sahf
inc
cli
jmp
xor
fcompl
cld
inc
fdivs
cmp
fdivl
popa
fimull
lock
leave
mov
mov
push
cmp
test
in
fwait
sbb
stos
mov
jecxz
shll
jne
and
and
jge
rolb
sub
mov
sarb
repz
jmp
loopne
pop
jae
mov
ja
xchg
arpl
sbb
movsl
mov
gs
jne
ficoml
stc
bound
push
js
push
bound
xchg
pop
imul
arpl
shrb
inc
sarl
sub
mov
sbb
push
movsb
jl
cmp
es
mov
cmpsl
push
xchg
fimuls
adc
sbb
pop
push
dec
lds
push
lret
mov
outsl
jmp
test
nop
inc
cmp
xorl
dec
inc
xor
sub
pop
test
and
fsubl
add
test
push
movsl
addl
imul
jge
cmp
push
lea
bound
jg
mov
insb
mov
inc
mov
es
inc
and
movsb
repnz
test
jo
jo
adc
inc
push
xchg
subl
jl
rep
ljmp
pushf
mulb
ds
repnz
loopne
jle
bound
adc
cmpsl
inc
ljmp
mov
mov
jl
xchg
cmp
loopne
inc
xchg
into
xchg
repz
cmpl
int
rcl
mov
adc
dec
sbb
pop
cmp
sar
and
adc
mov
scas
orl
enter
ja
xor
sahf
mov
daa
daa
bound
mov
arpl
nop
xchg
push
sarb
mov
xor
pop
add
gs
jp
je
mov
hlt
cmp
sbbb
orl
subb
popf
orb
jbe
and
push
ret
push
loop
fldt
dec
xlat
sbb
sbb
test
rorl
cld
jl
xchg
adc
aam
xor
push
movsl
movl
arpl
dec
out
xor
xchg
cmp
idiv
xchg
inc
pushf
sahf
sahf
data16
in
jns
leave
stc
stos
push
push
popa
push
pop
add
jg
mov
stos
stos
add
pop
stos
add
cmp
xor
lahf
pop
inc
fwait
in
mov
bound
insl
mov
pop
adc
add
and
stc
outsb
mov
mov
add
mov
mov
push
stc
dec
mov
fistps
fists
repz
daa
daa
iret
or
fidivrl
dec
andb
ss
stc
dec
in
and
xor
push
push
add
mov
jne
xchg
test
cmp
jge
rcll
stos
out
push
push
lret
sub
mov
pop
ficomps
cmpsl
ret
cld
xlat
pushl
cmp
xor
push
cli
jns
dec
xchg
sbb
notb
dec
push
jb
das
int
xchg
sub
inc
inc
outsl
add
pop
jecxz
shlb
pop
jo
inc
add
out
faddl
jmp
stos
rcr
sub
xor
sti
mov
sbb
pop
sbb
push
sbb
sbb
push
arpl
or
lods
aaa
movsb
jae
test
fwait
in
lret
addl
cmpsb
addb
roll
or
scas
es
pop
pop
mov
gs
mov
push
cwtl
movsl
pop
shll
sub
dec
add
or
xlat
push
pusha
ljmp
popa
mov
sbb
mov
add
mov
and
inc
mov
xchg
nop
shll
add
stos
lret
imul
push
dec
jno
rclb
inc
rolb
xor
push
sbb
js
out
and
xor
dec
jp
jnp
xlat
aas
movsb
lret
cmpsl
nop
lock
repz
fsubs
sarb
in
pop
sub
dec
push
xchg
xor
xchg
xor
lods
jecxz
mov
fdivrp
repnz
inc
sub
adc
leave
and
dec
int3
out
mov
ffree
xchg
push
dec
inc
insl
dec
andb
mov
pop
ret
movsl
push
ja
xchg
cmp
xchg
or
aam
mov
xor
xchg
pop
mov
pop
xor
dec
out
stc
in
mov
stos
sbbl
daa
pop
clc
cmpsl
mov
jmp
cmp
orl
stc
xor
pushf
adcb
push
push
push
jle
es
shll
inc
mov
int3
test
push
sarb
test
mov
repz
in
test
sbb
adc
std
mov
xchg
cmp
pop
sbb
mov
sub
jp
aad
ret
mov
hlt
add
cs
dec
mov
into
sub
repnz
xor
and
imul
roll
out
and
popf
jge
pop
push
dec
jb
icebp
pusha
inc
aam
sbb
xor
in
push
ja
cwtl
ror
adc
cs
inc
cmp
sub
sbb
lcall
mov
push
mov
cmc
add
icebp
mov
or
loopne
lock
mov
in
mov
pop
cld
mov
push
in
xchg
pop
jg
outsl
mov
movsl
cld
xor
insb
jno
and
pop
pop
and
push
fdivrl
cmp
or
push
test
fwait
in
or
mov
jmp
sbb
cmp
mov
lea
div
add
data16
int3
out
inc
pop
neg
or
push
insb
lahf
imul
xor
bound
jae
aam
out
mov
stc
shlb
test
add
in
adc
jmp
aam
jnp
mov
mov
cmp
lahf
es
sub
decb
add
push
iret
loop
jns
daa
lret
adc
inc
in
and
stc
icebp
jmp
push
pusha
in
xchg
lock
mov
xchg
or
sbb
mov
sub
push
dec
inc
mov
or
pop
mov
add
es
mov
outsb
gs
scas
push
lcall
xor
push
jae
loop
mov
lret
mov
cltd
mov
push
fbld
lcall
push
push
add
icebp
sti
loope
shlb
test
mov
cmp
xchg
cmp
sbbb
dec
dec
jns
call
xchg
les
mov
adc
lcall
ljmp
les
pop
push
xor
inc
in
and
gs
push
fisubrs
sbb
push
push
pop
push
mov
movsl
leave
mov
dec
add
pop
push
repnz
adc
cmp
mov
pop
mov
cmp
scas
fwait
sahf
jns
arpl
xor
cwtl
lcall
push
mov
inc
jge
or
imul
int
ds
iret
inc
jg
mov
decl
dec
xor
xchg
scas
ljmp
in
loop
jb
mov
std
out
sbb
movsl
inc
into
movsb
cmp
xchg
sbb
ss
pop
push
mov
and
hlt
in
pusha
or
imul
jg
sub
push
sub
cmp
int
mov
xchg
sub
out
mov
pop
mov
clc
inc
xor
jge
insl
mov
jb
outsl
cmp
xchg
sbb
aaa
sbbb
push
jae
int
cmp
outsl
cmp
cltd
or
stc
in
adcb
sub
test
jb
sub
jae
mov
jb
rcrl
pop
addl
inc
call
adc
out
sub
and
insb
test
jge
cmp
cwtl
push
clc
imul
jle
scas
inc
push
lods
daa
pop
dec
cltd
xor
vmread
out
jmp
out
std
fsts
cmc
jge
add
fs
loop
cli
cmc
cmp
add
cmpsb
inc
mov
mov
pop
and
mov
fldenv
push
inc
or
adc
jno
adc
test
mov
and
mov
pop
mov
test
outsl
jae
aam
addl
sub
push
sti
pop
xorl
push
xchg
fcmovu
test
daa
das
mov
repz
lcall
mov
insl
fsubrl
xor
jp
rorl
pop
test
mov
sti
adc
xor
mov
in
pop
insl
in
cwtl
inc
loop
sahf
mov
pusha
imul
add
sbb
mov
mov
mov
addr16
xchg
cmp
fmulp
imul
or
fnstsw
pop
pop
sub
mov
adc
mov
jge
dec
push
cli
pushf
cmp
stc
loop
pusha
scas
cwtl
pop
xor
int
mov
loope
or
xchg
add
stos
ss
movsl
shlb
lret
roll
xchg
daa
jmp
dec
test
jne
in
adc
mov
into
cmp
in
xlat
pop
dec
fs
loop
call
adc
jne
decl
jg
insb
popf
aad
pop
mov
mov
jge
jb
loopne
sbb
jl
xor
jg
movzwl
lock
scas
testl
xchg
arpl
notl
pop
ds
jne
popf
shlb
lods
fstp
xchg
test
adc
pop
jmp
mov
cmp
imul
xor
int3
les
mov
push
xchg
cmp
fsubl
aas
es
add
xor
and
adc
add
testb
in
or
in
jp
shlb
or
pop
and
int3
dec
fdiv
out
fldt
sahf
mov
push
shll
xchg
bound
cmp
xchg
jae
mov
ja
cli
fwait
in
cmp
sbb
inc
outsb
and
loop
pop
aam
add
stos
sub
int3
popa
cld
cltd
jnp
inc
mov
push
fs
incl
jl
cli
mov
fs
jecxz
xchg
mov
xor
dec
dec
into
pop
jl
sti
pop
jb
and
outsl
outsl
fcmovbe
fmuls
ret
bound
pop
imul
cmp
sub
rcl
xchg
popa
sbb
or
js
outsb
mov
iret
sahf
lds
mov
push
ret
das
fstp
sub
xlat
fs
xchg
loopne
in
ret
inc
jmp
mov
cmc
sarb
rcrb
call
jbe
cmpsl
mov
inc
fsub
cwtl
fwait
xchg
arpl
sub
cmp
loop
xchg
loop
pop
ret
sub
mov
fcomps
xor
gs
out
cmp
pop
push
mov
jp
outsl
mov
mov
sbb
popf
cmpsl
dec
add
je
jle
jp
cmp
sub
sbb
or
jns
imul
mov
nop
mov
pop
push
dec
inc
cmp
sub
sbb
or
js
push
mov
xchg
popl
addr16
push
dec
inc
aas
aaa
das
daa
pop
pop
sysret
jg
outsl
out
into
mov
xchg
.byte
.byte
sub
add
add
add
jb
gs
xor
cs
insb
add
inc
push
add
push
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
jmp
ret
call
jmp
ret
rclb
ret
fs
stc
add
clc
add
xor
clc
dec
stc
ror
stc
stc
jmp
call
pop
xlat
mov
and
out
xlat
mov
cmpsl
inc
jg
xchg
shr
out
pop
push
xor
mov
daa
or
inc
pop
jle
jns
fisubl
or
jle
out
dec
xor
dec
mov
das
cmp
mov
imull
xor
push
inc
push
sbb
lret
out
cmp
sub
push
call
into
mov
mov
nop
repnz
fs
ds
adc
inc
in
js
mov
rorl
addl
std
pop
sahf
xor
adc
jnp
loop
and
leave
ret
mov
test
lds
scas
pusha
cmp
sub
enter
jecxz
out
fmul
es
mov
mov
add
pop
repz
or
sub
jae
pop
pop
js
shrb
sub
rclb
xchg
push
shr
push
aas
cmp
or
dec
out
rcr
sbb
popl
pop
push
inc
pop
pusha
xchg
cs
sti
sysret
jg
sub
rorb
or
notb
and
ret
push
ljmp
fnsave
lods
and
mov
pop
scas
in
mov
cmp
lock
cmp
lock
mov
pushf
mov
add
mov
arpl
xor
xor
in
sub
insb
fldt
subb
mov
popf
xor
inc
push
dec
mov
xor
and
jge
fists
imul
mov
xchg
push
test
hlt
mov
imul
jl
cmc
sbb
jp
sub
call
adc
xchg
mov
popa
mov
inc
inc
cmp
shlb
adc
adc
jno
sub
sub
rcrb
pop
sahf
cwtl
nop
mov
cld
push
inc
cmp
cmp
bound
test
mov
ljmp
shll
push
pop
mov
push
punpcklwd
pop
jbe
lret
das
movsl
adcl
std
mov
xchg
sub
cmp
dec
es
int
iret
jnp
movsb
popf
adc
fs
xchg
push
das
flds
push
imul
icebp
jno
jo
out
out
hlt
andb
xor
push
es
out
ror
sub
movsl
lahf
adc
rep
in
inc
js
cmp
js
or
jnp
cmp
rcrl
mov
cmp
and
and
hlt
sub
sbb
rorb
ffreep
mov
pusha
sbb
dec
stc
rcll
pop
push
sbb
lret
js
xor
xlat
or
stos
loopne
pop
ret
test
lock
inc
clc
cmp
enter
idiv
adc
imul
sahf
push
jl
inc
sar
mov
fwait
dec
jecxz
imul
addr16
imul
lods
cmc
xchg
and
pop
and
rol
fwait
inc
push
cmpsl
aas
cmpsb
sub
mov
sub
cmp
enter
or
pop
push
inc
shrl
mov
cmpsb
sbb
adc
sub
and
fstps
insl
jno
mov
xchg
add
ret
sbb
out
cmpsb
adc
repz
fs
aad
out
or
outsb
fwait
int
fmul
ret
mov
iret
xchg
mov
into
ljmp
xor
and
jge
push
push
jb
into
fbld
adc
xor
ljmp
xor
xor
in
adc
stc
jb
loope
mov
mov
add
test
pop
ljmp
mov
xchg
cmp
push
sbb
mov
movsl
mov
jmp
push
int
test
push
cmpsb
cmp
bnd
invd
jecxz
mov
inc
enter
repnz
push
out
repz
addr16
into
push
icebp
adc
cs
or
jmp
jg
outsl
fdivs
pop
lds
add
sbb
jmp
out
mov
ret
pop
pop
jle
cmp
lret
int
movsl
popf
aam
xchg
mov
in
gs
push
dec
inc
or
pop
aaa
pop
test
add
mov
sahf
jecxz
mov
pop
nop
stos
cld
lock
xor
xor
callw
je
insl
fcmovnbe
lret
pop
mov
data16
std
lock
sub
add
fmull
mov
lcall
ret
dec
inc
pop
popa
mov
sub
or
push
fldcw
cmp
pop
fstps
sub
push
clc
add
outsl
sub
sbb
sbb
mov
popf
addr16
mov
ljmp
sub
out
or
xlat
sahf
sbb
push
push
addr16
and
push
push
jmp
mov
mov
inc
dec
loope
mov
decb
popf
xchg
clc
and
pusha
stos
push
adc
mov
jne
sbb
push
add
ret
dec
popf
leave
lahf
push
cmc
in
gs
xor
cmp
imul
enter
stc
fcomps
mov
jo
test
ss
sub
push
mov
mov
das
lret
mov
xchg
mov
ljmp
fwait
das
cmp
mov
mov
mov
bnd
push
shlb
pop
cmp
fmull
stos
cli
jp
push
add
sub
mov
xchg
push
dec
pop
pop
leave
push
mov
fsub
cmpsl
lahf
sub
mov
xchg
gs
ljmp
out
hlt
fsubs
nop
push
sub
add
jae
mov
pop
lret
mov
xor
push
decb
push
fidivrs
outsb
sub
fwait
push
loope
cli
xchg
test
xor
mov
adc
jp
in
fisubrl
fsts
out
adc
ljmp
test
ret
cmp
ss
jmp
jp
dec
push
pop
add
sub
loopne
sbb
rol
xor
xor
lcall
ret
sbb
jns
bound
pushf
pusha
aas
testl
jb
pop
fwait
loop
inc
bound
push
loope
add
sbb
decl
leave
sarl
mov
popa
xor
inc
cmp
jp
adc
orl
ror
sarb
jne
pop
sti
test
jbe
dec
inc
cmp
mov
xor
out
xlat
test
cmpsl
clc
xchg
mov
addr16
push
insl
inc
aas
aaa
das
cltd
andb
pop
jle
outsb
out
mov
into
mov
xchg
mov
pop
push
outsb
push
push
ss
in
push
push
push
jle
outsb
in
aad
lds
xchg
lea
pop
push
dec
inc
cmp
adc
insl
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
jl
insb
jecxz
ror
ret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
jnp
imul
ror
ret
stos
mov
cli
repnz
xor
and
adc
add
push
leave
sarl
mov
stc
icebp
jmp
dec
inc
cmp
sub
sbb
or
fcom
enter
test
cwtl
nop
mov
clc
lock
inc
cmp
sub
sbb
or
xlat
iret
mov
xchg
popl
pop
push
dec
inc
aas
aaa
das
daa
pop
pop
sysret
jg
outsl
out
into
mov
xchg
mov
pop
push
dec
inc
ds
push
push
push
jle
outsb
in
aad
lds
xchg
lea
pop
push
dec
inc
cmp
adc
insl
in
aam
les
mov
push
dec
inc
cmp
sub
sbb
or
jl
insb
jecxz
ror
ret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
jnp
imul
ror
ret
stos
mov
cli
repnz
jne
adc
mov
nop
mov
add
push
in
test
cld
push
test
xor
adc
sbb
in
imul
js
insb
xchg
decl
stos
mov
enter
sti
sub
cmp
inc
fidivs
mov
shl
mov
mov
sbb
or
push
sahf
push
xchg
adc
xor
testl
cmp
sysret
jg
rcll
push
xor
sahf
xchg
mov
insl
sub
cs
push
call
push
lock
in
push
mov
movsl
popf
xchg
cwtl
je
inc
addb
mov
xor
jo
or
repz
das
pop
mov
out
das
dec
pop
test
add
add
scas
