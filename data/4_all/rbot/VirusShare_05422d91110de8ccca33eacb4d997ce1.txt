fldenv
test
jmp
ljmp
outsl
xor
jne
movsb
push
ja
or
mov
addl
rorl
test
mov
repz
inc
or
outsl
cmp
cmp
jne
pop
jl
or
xchg
or
in
jae
mov
push
bnd
lock
stc
jo
ds
rcll
shll
in
sahf
imul
lret
mov
das
insb
pop
mov
mov
add
sti
cmp
inc
jge
xchg
jge
sub
inc
arpl
cld
mov
inc
push
xlat
pop
dec
inc
jbe
subb
xchg
rcrl
sbb
mov
mov
orl
nop
add
inc
int
fadds
sub
popa
xchg
xorb
mov
mov
pop
xchg
and
mov
cmp
adcb
dec
cmpsl
call
bound
scas
xor
lret
fucomp
adc
scas
mov
in
aad
out
jp
xchg
mov
sbb
jp
lds
in
xchg
lods
cwtl
jecxz
sbb
sub
in
fsubr
in
outsl
xchg
lcall
daa
out
fisubs
test
aam
out
repnz
lret
xor
dec
push
int
adc
nop
cmp
scas
sbb
sbb
jne
cmc
mov
sbb
xchg
inc
mov
adc
insl
sbb
pusha
cmp
add
sbb
ret
popa
aas
mov
mov
push
test
lret
dec
dec
mov
into
pop
mov
xor
pop
int
js
addb
scas
ja
aam
sahf
and
call
ja,pn
dec
sbb
mov
mov
fnstenv
cmp
fisttpll
into
iret
push
addr16
jecxz
lahf
lods
fmull
fistps
pop
xchg
scas
mov
je
cli
jmp
stc
pushf
jmp
stc
sbb
arpl
enter
cmp
or
rol
das
jmp
pop
push
addb
stos
mov
adcl
jg
ret
lods
xchg
dec
pop
mov
faddp
pop
adc
push
cmc
enter
sbb
mov
or
push
sub
dec
out
pop
xor
out
ret
xchg
movsb
cmp
add
xor
lds
test
dec
or
aam
sbb
dec
jbe
repnz
or
insl
int
mov
or
cmp
inc
repz
lods
aaa
sbb
loopne
push
bound
int3
aas
mov
sub
and
dec
into
in
inc
sbb
lahf
mov
xor
or
dec
pop
outsb
or
mov
ja
and
pop
fstps
jno
mov
div
sarl
mov
cmp
inc
xor
std
push
cmc
ret
js
aad
jmp
or
in
mov
pop
sbbb
push
push
and
les
or
or
cmp
movsl
aad
push
repz
pop
inc
inc
in
mov
sub
mov
dec
hlt
xor
mov
cltd
out
pop
fdivrl
jns
cmp
push
test
add
sbb
dec
sbb
fldenv
cli
je
cld
fcompl
rol
rorb
inc
push
xor
ja
sub
orb
xor
cmc
jmp
dec
jle
pushf
sti
or
add
imul
mov
cmp
fidivrl
sub
mov
scas
push
add
push
push
popf
dec
stc
push
subb
jbe
loopne
dec
inc
fmul
sbb
lock
xor
test
lea
xchg
push
inc
add
insb
gs
cmp
outsb
fwait
jge
fwait
aaa
or
jbe
divl
idivl
mov
cmp
xchg
fs
push
sbb
adc
jnp
insb
mov
pop
test
jle
dec
mov
mov
mov
popa
pop
mov
ss
pusha
aas
shlb
daa
fisubrl
loop
xchg
mov
pop
gs
pop
pop
lret
add
dec
inc
inc
ds
scas
cmp
loope
inc
and
shrb
in
push
divb
out
pusha
xchg
movaps
mov
icebp
add
fimuls
vaddss
js
int
mov
loopne
bound
and
cwtl
add
jg
push
leave
rorb
mov
mov
cmp
inc
stc
lret
jmp
xchg
sahf
cmpsb
movsl
das
sbb
or
loope
jbe
arpl
out
and
dec
mov
push
jne
mov
mov
pop
outsb
push
jb
adc
daa
nop
adc
pop
sub
cmp
sub
imul
pushf
ja
or
rcrl
sbb
lea
aas
push
shr
rcr
je
ljmp
mov
or
ljmp
push
adc
in
int
stos
mov
dec
fcomp
cmp
repz
jmp
jmp
lahf
lock
sub
xor
adc
ds
in
popf
or
xchg
jne
in
ss
or
xchg
dec
jl
loope
sbb
or
popf
pushf
xchg
pop
pop
dec
arpl
mov
mov
testb
fcoml
inc
push
mov
repz
ds
test
sbb
scas
shl
je
xor
or
and
ds
sbb
jl
add
push
add
cmc
lea
push
inc
dec
pop
test
jnp
shr
jbe
push
push
xchg
xchg
pop
pop
and
cmc
lea
add
loop
jecxz
jecxz
inc
push
mov
pop
jge
jo
test
push
dec
pop
push
test
pop
and
stc
cmp
push
jno
not
not
pop
cmc
jns
test
call
push
xor
pop
sub
lea
push
jbe
push
push
pop
pop
pop
ror
stc
lea
jmp
xchg
xchg
imul
xchg
nop
inc
and
xor
les
fwait
loopne
xorb
pop
or
loop
push
mov
mov
xorl
std
sub
clc
ds
call
push
mov
pop
add
push
call
clc
jl
inc
into
test
scas
je
test
cltd
pop
adc
test
or
sub
mov
lods
js
sub
pop
push
popl
push
call
add
lret
xchg
and
out
clc
cmova
ja
cmp
les
mov
movl
jmp
imul
xchg
inc
jp
dec
fidivrs
roll
cmc
push
and
mov
insl
or
add
pushl
push
add
pop
add
cmp
jno
push
xor
xor
pop
jge
or
stc
jmp
push
push
push
or
pop
pop
pop
add
push
rol
pop
or
or
add
push
call
sahf
and
sbb
jno
jmp
ja
dec
mov
xchg
sub
das
rolb
pop
jmp
jmp
call
cld
or
jbe
and
stc
mov
add
stc
push
add
pop
cld
jns
and
push
jnp
add
pop
jne
or
shl
mov
xchg
push
call
or
inc
scas
sub
xlat
test
jb
sub
out
cli
int
int
pop
cmp
xchg
imul
xchg
stos
or
xchg
push
clc
xchg
cwtl
cmp
xchg
ja
add
cltd
movl
pop
jmp
pop
or
mov
add
jo
xchg
sbb
dec
shr
sti
push
int
pusha
mov
push
sub
dec
xor
cmp
mov
popf
pop
jns
add
bound
push
stc
test
dec
adc
sarb
test
inc
dec
push
xor
pop
and
cmc
mov
shr
test
jne
jmp
and
push
call
ljmp
in
add
mov
mov
mov
mov
movsb
inc
cmpsl
inc
xlat
test
call
xor
mov
cmp
sbb
test
xor
dec
pop
cmpsb
mov
mov
nop
cld
js
loop
or
cld
in
push
fs
jns
mov
loopne
pop
pop
push
mov
add
pop
jb
xor
push
cmp
pop
inc
dec
loop
jecxz
adc
inc
cmp
je
push
and
pop
jnp
jo
push
inc
pop
push
dec
pop
xor
not
not
xor
push
push
sar
pop
pop
push
xchg
pop
push
pop
xchg
pop
push
call
pushf
adc
or
xchg
mov
cmc
aaa
mov
dec
insl
mov
adc
xchg
into
in
shrl
jno
xor
repz
inc
cwtl
test
andl
out
inc
inc
push
int3
sbbl
loop
std
in
jle
call
and
sarb
fsubl
sbb
pop
in
pop
push
mov
pusha
insl
dec
clc
lahf
cld
out
dec
sbb
sahf
je
in
xor
jno
mul
mov
aas
xor
iret
arpl
out
pop
jecxz
popa
mov
int
scas
xlat
pop
xchg
repnz
jge
inc
out
sbb
xor
mov
xor
xor
test
mov
ror
inc
out
rclb
dec
jge
push
inc
inc
into
dec
mov
scas
sbb
and
mov
cltd
fnstenv
test
fwait
mov
fildl
fsubp
and
add
add
pop
push
push
pop
add
pop
add
jmp
jno
fwait
inc
mov
mov
rolb
rclb
fidivrs
lea
xor
inc
shl
leave
dec
push
sub
and
pop
dec
lea
imul
cmp
mov
mov
add
pop
je
jge
push
test
pop
clc
add
jnp
or
push
xor
pop
loop
jecxz
jae
lods
push
add
add
aaa
adc
adc
dec
push
shlb
je
mov
js
and
jmp
ret
loop
jecxz
ret
mov
push
push
rol
pop
pop
pop
add
rol
cld
cld
push
jno
or
pop
push
jb
rcl
xorb
jle
dec
xchg
jg
xorl
bnd
sub
clc
mull
das
ja
adcb
cmp
adc
mov
jae
jne
loope
out
push
es
mov
inc
inc
out
cmp
pextrw
lods
xor
out
mov
int3
sti
insl
lcall
insb
pop
jo
mov
mov
outsb
xor
push
add
mov
dec
sbb
push
shlb
mov
dec
push
push
popf
mov
fwait
or
call
inc
mov
mov
outsb
sbb
adcb
das
movsb
dec
adc
clc
je
xchg
jns
push
inc
out
mov
sbb
mov
enter
adc
sub
call
in
pop
and
xor
hlt
mov
jo
test
aad
and
ljmpw
test
jl
mov
lret
stos
cmp
xchg
cmp
insb
inc
std
mov
lcall
jge
xchg
push
lds
inc
or
loope
js
xchg
or
xor
ret
mov
sbb
mov
xchg
aas
movb
rorb
add
test
xchg
orl
adc
dec
popf
jle
lods
cli
into
pop
mov
inc
aas
pop
cmp
jo
lcall
add
cmp
mov
and
les
sub
imul
adc
fmull
add
sbb
jnp
outsl
push
pop
aas
lock
mov
jne
cmp
leave
out
cmp
mov
jo
subl
fnsave
fadd
xchg
jmp
das
in
xchg
aam
xchg
cli
loop
cli
xchg
xchg
shr
rcrl
adc
dec
mov
dec
sbb
pushf
sbb
pop
push
mov
popf
aad
mov
pop
sahf
ret
shlb
cltd
lcall
repz
jecxz
fs
jmp
outsl
fldl
int
shll
pop
sub
or
pusha
mov
mov
dec
xor
jmp
mov
sub
jo
scas
call
push
inc
loope
mov
dec
jo
xchg
pop
cs
sub
pop
imul
iret
movsl
jg
pop
lea
push
cmp
stc
lret
fwait
mov
sub
mov
jne
aad
or
or
cmp
sbb
jle
cmp
mov
jo
and
pop
mov
lods
xchg
and
cmp
rcll
fists
nop
mov
dec
jecxz
adc
stc
enter
pop
subl
fnsave
fdivrl
xchg
jmp
cs
xchg
mov
lcall
lcall
inc
adc
dec
outsb
jl
sbb
fwait
or
ret
add
test
mov
insb
xchg
push
mov
mov
mov
sahf
mov
out
or
mov
lods
or
push
popf
jle
mov
dec
insl
adcl
mov
stos
insl
leave
std
insl
inc
inc
rolb
xchg
jbe
aad
nop
add
and
and
jne
dec
mov
dec
inc
ret
int
cwtl
int
rcrl
pop
fcomps
fadds
jecxz
add
bound
mov
popa
lahf
push
add
shll
adcb
xorb
jne
add
pop
lret
mov
sbb
jle
outsl
rorb
stc
jb
cwtl
fcmovne
pop
adc
pop
xchg
or
and
or
rorl
loop
call
in
notb
rcl
mov
call
ret
scas
mov
mov
xor
clc
test
jmp
cs
xchg
dec
ds
cli
push
in
push
aad
in
add
sbb
mov
jg
sbb
jge
pop
adc
insb
jo
insb
xchg
dec
mov
fisubrs
subb
sbb
xchg
fistl
mov
jle
popf
jle
mov
dec
insl
inc
dec
mov
dec
xor
lahf
xor
cmp
inc
cld
mov
jbe
fstl
and
and
mov
test
jl
inc
int
cwtl
int
lea
pop
fcoms
stos
fadds
popf
sub
sub
sub
inc
jnp
popa
imul
popa
mov
mov
mov
jne
aam
or
pop
lret
mov
sbb
jle
jmp
fistpl
shlb
pop
int
pop
xchg
ret
lods
xchg
and
je
push
adc
call
jge
jbe
insl
enter
push
subl
fdivl
fdivl
cs
xchg
add
xchg
cli
adc
cli
xchg
mov
xchg
rcrl
sbb
imul
fwait
sbb
aaa
add
test
sub
insb
xchg
les
mov
mov
popf
mov
bound
orl
and
dec
jle
pushf
jle
pop
shl
insb
vfrczpd
mov
dec
xor
subl
mov
inc
jbe
xchg
jbe
dec
enter
loop
insl
xchg
push
insl
and
mov
xor
test
ss
inc
int
cwtl
int
inc
pop
pop
fsub
test
mov
in
jg
mov
xlat
shr
dec
jle
scas
add
scas
es
hlt
outsb
rol
cmp
nop
test
shlb
mov
jnp
push
inc
in
pusha
jbe
xor
int3
std
stc
push
pop
mov
push
adc
jbe
movsl
mov
jae
sbb
ds
outsb
shll
call
insl
xchg
movsl
bnd
or
xor
inc
jns
ja
sub
jns
fisttpl
sbb
test
repnz
push
mov
jmp
jno
mov
popa
stos
ljmp
clc
shlb
sub
mov
adc
into
jge
lock
jno
loop
ss
divl
add
add
in
pop
loop
dec
cmpl
mov
insb
push
cmp
sbb
enter
add
mov
pop
out
out
mov
stos
mov
cwtl
test
xchg
lcall
lret
xor
xchg
mov
in
jmp
shlb
dec
dec
sbb
and
pushf
jmp
jecxz
push
push
inc
cwtl
sbb
in
fwait
jno
push
xchg
imul
pop
mov
push
cmpsl
or
dec
out
push
cmp
cmp
aad
insl
jns
sbb
rcrl
add
jl
dec
mov
movsl
std
and
inc
xor
lcall
add
hlt
pushf
pusha
rcrb
xor
andl
add
and
ljmp
sub
bound
add
fisubrl
int3
jb
add
addr16
mov
ds
add
mov
xor
pop
std
rclb
inc
cwtl
cmpsb
jmp
mov
lock
mov
mov
add
cmpb
inc
xchg
dec
orl
pop
cltd
mov
out
cmpsl
mov
rcrb
inc
and
push
rclb
xor
xor
inc
push
adc
outsl
inc
mov
icebp
push
hlt
popa
movsb
mov
test
aam
adc
inc
shll
inc
dec
int3
movsb
out
xchg
add
rolb
cltd
mov
jle
lret
sbb
and
cmp
test
xor
pop
lahf
mov
pop
jmp
clc
and
jmp
nop
mov
jns
mov
aam
int3
in
xchg
push
in
or
cli
push
sarb
popf
in
and
stos
push
pop
imul
push
aad
ja
mov
inc
inc
hlt
push
jb
lea
mov
fists
cmp
xchg
pop
les
push
data16
adc
sub
lcall
adc
dec
outsl
xchg
adc
pop
adc
dec
out
loopne
into
popf
mov
mov
xchg
sub
jmp
mov
ret
repz
mov
repnz
aas
add
cmpsl
dec
mov
xchg
outsb
negl
push
daa
sbb
mov
aad
popf
xor
pop
inc
es
and
jmp
inc
xor
data16
sub
push
cmpsl
scas
xor
dec
insb
xchg
push
int3
lret
ret
lock
clc
fsubrl
sbb
mov
bound
mov
in
cmpb
xorl
addr16
inc
mov
add
push
les
push
xchg
hlt
sbb
or
out
jp
rcll
icebp
loopne
mov
aad
jns
ja
mov
cs
lcall
mov
lods
loop
or
and
pushf
mov
xchg
push
adc
sbb
jl
faddp
std
add
out
xchg
cmp
leave
repnz
js
xorl
xorb
scas
push
cltd
pusha
imul
pop
pop
mov
pop
repz
jecxz
pop
add
xor
inc
arpl
mov
popf
out
es
cmp
and
push
inc
push
test
xchg
push
scas
outsl
ja
jmp
xchg
shll
cmpsb
xor
cmp
jne
xchg
inc
or
mov
mov
popa
fisubs
stc
jmp
bnd
mov
es
push
cmp
aam
push
jp,pn
dec
cmp
faddp
jle
lods
dec
icebp
cs
icebp
inc
sub
and
lods
insb
fsubs
push
movsb
sbb
mov
repnz
pop
fiadds
in
icebp
adc
or
jge
imul
mov
scas
dec
push
insb
fnstenv
out
cmpsb
lods
jae
enter
sub
stc
pop
js
pop
scas
sbb
stc
cwtl
mulb
sbb
loope
jno
rorb
in
or
adc
mov
scas
stos
int3
pop
stos
aad
cmc
jecxz
fstps
dec
pop
fcoml
or
fdivs
cmpsb
inc
pop
jl
add
cwtl
inc
incb
dec
mov
fisubrl
std
jns
movsl
xor
sub
pop
stos
add
mov
in
xor
jp
outsl
scas
mov
jecxz
push
lahf
xlat
hlt
inc
add
or
pop
fnstcw
cmc
rcrb
push
call
cmp
fcmovnbe
enter
fistpl
fs
inc
test
push
push
cmp
fsubl
ret
les
jecxz
and
jp
pop
scas
or
xchg
sub
mov
fiaddl
in
ret
xchg
addb
add
and
dec
sbb
ret
insb
mov
ret
adc
add
pushf
mov
xchg
push
sub
lret
scas
adc
push
mov
mov
sub
fsubl
ss
fwait
sbb
jmp
mov
fcompl
sub
mov
iret
into
fs
push
adc
icebp
mov
xchg
inc
xor
sbb
xchg
ret
into
and
jae
clc
leave
js
inc
sahf
xor
mov
and
push
mov
inc
int
mov
mov
daa
stc
jg
mov
ret
xchg
adc
dec
decb
scas
inc
xchg
call
inc
lcall
popa
mov
pop
or
out
dec
stc
or
add
mov
nop
dec
xchg
int3
in
imul
movsl
mov
mov
and
add
test
loop
xchg
mov
xchg
add
or
pop
xor
lret
mov
cmp
add
out
je
push
and
data16
push
cmp
insb
hlt
sub
jp
nop
test
hlt
sahf
rclb
xchg
es
ja
xor
sub
sbb
mov
les
push
sub
pop
ret
repz
adc
std
mov
out
xor
call
insb
jne
mov
into
das
dec
add
ss
xchg
js
add
shrb
ret
mov
arpl
rcrl
loop
clc
jnp
lahf
mov
and
jbe
les
push
dec
jmp
lret
lock
inc
sbb
arpl
pop
push
mov
lret
sbbb
mov
jl
jbe
stos
or
add
sahf
push
sti
jp
filds
jge
mov
scas
pop
lret
mov
aam
pop
ss
cmpsl
or
out
sahf
shll
sbb
lds
jb
inc
sbb
mov
pop
and
xor
pop
int
jbe
sbb
hlt
ret
mov
sbb
repnz
cmpsl
aad
ret
push
in
aas
jmp
popa
xchg
cltd
ds
add
paddb
push
je
ret
pusha
loopne
cmpsl
iret
dec
lret
and
sub
clc
sub
test
xchg
xchg
std
jle
mov
mov
shll
idivb
nop
ds
xchg
int
mov
dec
repnz
in
in
fsubrs
xor
rol
rol
adc
loopne
inc
imul
mov
xchg
adc
or
movsl
jno
or
pop
js
jmp
sub
addl
aaa
pop
arpl
lcall
mov
inc
sahf
cmpsb
mov
lahf
push
add
pop
mov
jae
fwait
or
movsb
sub
inc
loopne
add
ret
addr16
rorl
mov
mov
or
mov
cmp
jns
mov
inc
test
notb
dec
ljmp
sbb
loop
push
lock
jns
mov
fidivs
aam
mov
cmp
subl
mov
jp
mov
lods
mov
test
and
pop
je
push
add
aad
scas
mov
mov
sub
xor
in
out
in
fisubs
push
jne
xchg
cmpsb
jp,pn
fwait
mov
mov
push
into
dec
sub
inc
cmpsb
cmp
xor
lahf
mov
pop
cwtl
add
ja
cwtl
and
pop
xor
fidivrs
mov
xchg
xor
jae
jb
out
ljmp
pop
xor
mov
and
mov
jmp
aam
fidivrl
mov
mov
je
push
push
sub
xlat
jmp
add
in
jge
lret
mov
jle
pop
push
cmp
inc
push
mov
xlat
mov
cmp
ret
mov
jmp
jnp
sbb
xchg
mov
and
popf
push
push
repz
mov
in
ret
out
add
mov
ret
es
out
mov
pop
daa
insl
xor
into
hlt
xchg
push
rcl
das
jbe
bound
xchg
lahf
in
or
punpcklbw
and
adc
or
gs
pop
mov
out
dec
movl
out
cmc
push
xlat
pop
imul
ret
xor
adc
xchg
ret
cltd
out
shlb
dec
test
cs
add
scas
mov
dec
jmp
inc
adc
rorb
or
add
pop
dec
imul
pusha
inc
addr16
and
adc
xor
sub
or
dec
fildll
mov
push
cmpsl
cs
cltd
jl
cmc
in
loop
mov
mov
ljmp
xlat
lret
test
jo
call
lods
iret
std
movsl
ffreep
lahf
or
push
adc
enter
jle
add
pushf
or
adc
lods
mov
sub
xchg
jne
stos
pop
jp
arpl
or
or
mov
add
enter
iret
push
orb
and
adc
std
frstor
scas
pop
mov
mov
in
in
lcall
popl
bound
adc
iret
notl
mov
inc
dec
test
jno
stos
dec
pop
sub
sbb
mov
ud2
inc
jp
test
add
lods
sub
push
scas
fiaddl
filds
es
pop
nop
scas
inc
xor
dec
outsl
mulb
imul
pop
sbb
or
mov
arpl
sahf
scas
or
outsb
adc
jb
xlat
sbb
fcompl
test
inc
fisubl
sbb
fwait
cmp
imul
cld
icebp
shl
xlat
jmp
jbe
mov
jbe
push
in
mov
xlat
negl
popf
push
inc
fdivrl
mov
enter
pop
dec
and
das
cmpsl
aaa
roll
xchg
das
mov
hlt
aad
fdivr
or
push
jg
pop
sarl
jo
mov
adc
jle
test
rcll
jno
pop
or
mov
inc
test
push
divb
cmp
mov
inc
and
or
jge
ljmpw
mov
dec
cltd
push
push
stc
dec
or
leave
rcl
xchg
inc
pop
cltd
or
jp
jge
jl
push
mov
mov
push
mov
mov
lahf
inc
jne
xchg
hlt
cmp
les
add
test
scas
andb
push
adc
dec
mov
ffree
jne
dec
cmpsl
cmp
push
js
push
and
jns
jge
jmp
stos
or
jl
insb
in
pop
out
adc
daa
imul
js
in
lea
xor
jecxz
push
mov
inc
sbb
mov
call
xchg
mov
out
sub
xchg
push
in
mov
sbb
sbb
lret
mov
out
mov
inc
cmove
dec
mov
shrb
aad
jg
fs
mov
jb
sbb
fld
jb
loope
pushf
mov
cmp
out
cmp
adc
pop
or
into
fcoml
test
lods
mov
jg
inc
leave
orl
incl
aas
jle
imul
and
push
mov
cmp
imul
insb
mov
das
lret
cmp
insb
or
inc
ja
lret
jns
cmp
cmp
sarl
outsl
lock
or
adc
je
push
int3
dec
jne
mov
leave
std
pusha
sub
ret
leave
stos
neg
xor
je
sub
dec
or
and
outsl
inc
lcall
pop
inc
mov
arpl
mov
fcompl
daa
and
repnz
jb
xor
sti
ja
adc
fnsave
loopne
mov
in
xchg
sub
popf
mov
mov
std
sbb
and
fcompl
int
incb
loope
xchg
or
dec
or
imul
inc
mov
repz
mov
cs
iret
pop
jns
push
in
lahf
xor
rcr
jae
mov
adc
aam
test
pop
push
loopne
sahf
ret
mov
scas
in
push
in
pop
adc
daa
cmp
imul
lea
mov
int
jne
mov
xchg
jmp
ljmp
das
adc
dec
sarb
jae
ja
sbb
fsub
sub
sbb
insl
leave
test
mov
and
sub
mov
loope
jnp
fs
jne
mov
imul
mov
lds
ljmp
sahf
push
out
dec
aaa
xchg
dec
cmp
push
jmp
addr16
orl
repnz
int3
popa
cmp
inc
pop
mov
repnz
sbb
mov
push
add
adc
jae
pop
jno
push
add
iret
into
hlt
sub
mov
outsl
mov
jp
fcomp
stc
xlat
or
jl
xorl
insl
iret
mov
xor
cltd
shl
pop
jecxz
sub
or
imul
xchg
data16
hlt
add
call
rorl
mov
fsubrs
lahf
ficompl
jge
jg
push
es
cwtl
mov
int3
push
xchg
shlb
ret
aad
lahf
imulb
cwtl
mov
mov
sbb
sti
imul
loop
mov
cld
xor
pop
push
xor
jb
in
movsl
jb
movsb
imul
in
hlt
nop
lea
xor
ret
rcrl
pop
insb
std
xchg
mov
jne
addr16
jmp
divps
ds
xchg
cmp
sbbb
fcompl
jmp
hlt
xor
push
inc
jns
mul
aad
movsl
mov
cld
loope
and
insb
xchg
cs
cmp
ljmp
lock
stc
mov
clc
sbb
es
adc
movsl
xchg
call
adcl
in
in
cmpsl
pop
iret
pop
add
sbb
inc
lods
mov
in
adc
cmc
jno
or
out
mov
mov
insb
cmp
push
jle
jl
mov
sbb
jmp
stc
xchg
aas
mov
nop
addr16
pop
inc
mov
js
cmp
inc
pop
cmp
and
jb
sub
push
je
xor
sarb
scas
mov
mov
fnsave
repnz
fimuls
push
mov
fstps
and
pop
xchg
out
add
mov
roll
jbe
rclb
fdivp
jecxz
push
out
fadds
sub
dec
out
and
imul
or
add
push
mov
mov
mov
jecxz
imulb
sub
push
jmp
mov
or
stc
lret
jb
mov
out
cmp
sbb
cs
notb
sub
xchg
je
div
scas
xacquire
pop
push
push
or
pop
movsl
xchg
pop
ss
sbb
xor
xchg
stos
push
mov
ja
mov
lock
out
mov
or
lock
das
xor
clc
xor
dec
sub
stos
inc
add
pop
call
mov
jbe
cmp
dec
ret
dec
jbe
pop
arpl
mov
mov
adc
xchg
pop
shr
aam
mov
movsb
pop
scas
stos
mov
sub
jge
lods
xor
pop
and
cmpsl
push
mov
fwait
mov
or
xchg
xchg
scas
mov
icebp
xlat
mov
xchg
mov
jmp
orl
mov
cs
subb
rcrl
xor
mov
mov
xchg
cmc
add
adc
roll
bound
inc
out
bound
sbb
xor
in
sbb
lret
test
jne
repnz
mov
cmp
and
clc
mov
mov
out
int3
dec
mov
inc
cmp
and
js
mov
or
add
inc
dec
inc
mov
mov
out
push
addr16
add
mov
xchg
mov
sbb
add
arpl
shlb
fistps
loop
rclb
xor
sub
or
and
pop
fwait
xor
aad
mov
fistl
adc
icebp
hlt
loopne
in
jg
jns
insb
push
mov
ret
mov
mov
andl
push
adc
dec
mov
fs
pop
jmp
adc
pushf
mov
in
inc
enter
add
jbe
and
leave
cs
stos
aam
or
shrb
bound
cltd
inc
test
add
sti
lcall
inc
ficoms
mov
mov
addr16
nop
aad
xor
jmp
lret
lea
rorb
mov
and
into
es
mov
jmp
xor
jno
jp
movsb
repz
test
cmp
and
ja
mov
outsb
arpl
jp
repnz
fdivr
or
dec
ror
adc
call
xchg
push
dec
cmp
mov
dec
imul
cmp
stos
in
insl
addb
cmpsl
push
bound
sbb
pop
es
mov
mov
push
cmp
pop
mov
sub
in
mov
xor
cli
adc
add
jae
sub
enter
inc
add
test
repz
std
ret
jge
ror
mov
inc
inc
cltd
push
or
loop
jo
test
bound
test
jbe
or
pop
call
fcoms
mov
cli
or
arpl
add
mov
mov
and
hlt
and
cmpsl
adc
shll
pop
fidivl
mov
mov
and
ret
mov
and
les
gs
mov
mov
mov
inc
rclb
sbb
push
sub
cmpsl
mov
out
sub
jecxz
cmc
cs
cmp
and
mov
dec
mov
pop
sbb
std
cli
cmpsl
sbb
cmpsb
cmp
adc
push
out
adc
push
shll
fimull
scas
sahf
jno
outsb
or
sahf
adc
pop
mov
dec
dec
sub
xchg
std
in
rcr
push
pushf
push
push
pop
cmp
test
loopne,pt
icebp
mov
push
jg
dec
int3
inc
movsl
shrl
sub
pop
xchg
jmp
aas
in
das
and
pop
cmp
and
add
lret
roll
pop
iret
aam
ret
pusha
add
fisttpl
cmp
or
gs
in
xor
rcl
and
aam
mov
pop
pop
lds
add
mov
mov
sahf
cmp
orb
lods
xor
sub
push
push
into
ja
cmp
mov
cmp
push
out
mov
lods
pop
mov
mov
push
cmp
cli
shll
cmpsl
mov
sbb
push
dec
std
clc
xchg
in
inc
adc
add
push
push
ds
rorl
in
sub
sub
jmp
das
xchg
fwait
sbb
test
or
mov
and
repz
cmp
shl
mov
iret
xchg
push
dec
nop
test
ret
push
or
dec
push
sub
jl
enter
mov
lret
pop
pop
scas
imul
cli
jbe
stos
adc
mov
add
mov
movsl
cmp
add
pushf
sbb
pop
mov
jns
out
iret
add
xchg
and
dec
cmpsb
cmp
mov
mov
repz
js
stos
insb
mov
mov
inc
or
pop
pop
xor
dec
daa
inc
fs
es
enter
sbb
inc
pop
enter
loop
sub
cmp
xor
xor
out
in
js
jl
stos
jmp
loope
inc
mov
bound
jg
dec
stc
mov
jne
dec
jl
xor
add
mov
lret
pop
sbb
in
add
and
shl
mov
sub
movsb
cltd
std
repnz
sub
mov
add
push
in
mov
mov
inc
jo
movsl
jb
sti
sbb
pop
lret
pusha
int
push
lea
mov
push
fcomps
pop
cmp
cmp
add
xor
and
xchg
jg
repz
xchg
and
xchg
int
cmp
pop
push
xchg
shlb
jmp
jg
dec
es
push
ja
cltd
ds
xchg
cmp
mov
std
in
push
hlt
add
cli
imul
shrb
push
cmp
xor
xchg
sub
sbbl
and
xchg
cmp
pop
xor
mulb
into
cmp
or
addr16
roll
jne
mov
push
inc
loopne
cltd
add
mov
cltd
psubusw
inc
data16
sbb
repnz
adcb
adc
adc
lock
sbb
out
sbb
mov
jo
pop
xor
shll
or
add
inc
push
mov
adc
jg
hlt
cli
leave
push
out
mov
rclb
loope
mov
loop
or
mov
test
popa
pushl
add
pmaxub
aaa
jecxz
xor
fs
pop
pop
sub
or
in
sbb
jge
arpl
aam
rorl
inc
roll
scas
mov
into
mov
mov
lock
and
xchg
ret
hlt
inc
mov
aad
lds
js
inc
and
das
sarb
inc
cmp
in
lcall
or
xlat
cmp
jmp
pop
sub
leave
out
adc
scas
xor
mov
sub
sub
push
sbb
push
add
cmp
inc
jecxz
and
or
or
add
lods
jmp
in
sbb
adc
inc
push
sbbb
or
lods
push
dec
cmp
scas
pusha
adc
push
sbb
aad
or
push
int
test
mov
sbb
aaa
xchg
out
cmp
sbb
xchg
cmpsb
scas
popf
dec
adc
dec
sub
add
mov
pop
outsl
ds
or
mov
add
and
insl
dec
mov
cmp
dec
jl
push
outsl
pop
sub
call
in
mov
out
stos
mov
dec
and
mov
imul
andl
ret
lret
mov
push
push
xchg
cs
insb
nop
idivb
out
aaa
rorl
std
jns
icebp
jle
dec
push
cmp
rorb
xlat
loopne
push
addb
sbbl
push
out
or
imul
pop
fnstenv
add
dec
stc
and
rcl
fimull
jl
mov
mov
popa
mov
add
add
jno
aam
add
mov
cmc
xchg
mov
scas
popf
sbb
loop
xor
xchg
jbe
adc
lret
cmp
fwait
add
add
xorl
xor
sti
jg
mov
cmpsl
inc
lods
push
jne
dec
loop
cmpsb
jne
test
xor
pop
int
and
lea
repnz
jmp
test
gs
jae
adc
lahf
loopne
jno
fdivr
stos
aaa
jp
cmpl
test
bound
fwait
dec
cmpsl
test
addr16
xchg
ss
xor
xor
les
xor
fstpt
pop
inc
imul
fdivp
lock
das
cmp
aam
add
mov
xchg
or
orl
js
ret
dec
subb
sub
sbb
add
test
cmc
subl
jle
incl
push
out
lret
and
mov
fcomps
aam
xorb
push
ljmp
inc
repz
mov
ljmp
nop
ds
pop
dec
shlb
xchg
incl
xlat
call
imul
mov
mov
sbb
mov
stos
or
sahf
mov
cmp
cs
mov
icebp
pop
sbb
outsl
inc
das
mov
jecxz
push
add
mov
aaa
js
lock
push
pop
bound
pop
sti
subl
jl
cmp
inc
insb
pop
das
inc
jmp
jb
and
mov
push
mov
jo
ds
mov
enter
xor
mov
scas
loopne
sub
sub
test
sbb
push
mov
scas
out
dec
mov
jns
xchg
out
jbe
dec
fistps
adc
mov
out
subl
aam
pop
popa
xchg
push
test
lds
loopne
mov
mov
mov
addr16
movsl
add
or
lea
lret
hlt
in
jo
dec
mov
mov
jl
push
mov
lods
fwait
mov
mov
divl
inc
cmp
loope
cmp
test
pop
mov
jge
push
xor
stos
repz
pusha
int3
cltd
pop
cltd
insl
jle
out
adc
jecxz
insb
adc
push
or
add
imul
push
repz
ss
and
cmp
in
inc
xchg
pop
xor
lods
repnz
int3
sub
dec
adc
inc
outsb
adc
xor
dec
je
inc
jmp
mov
sbb
out
cltd
leave
testb
fs
in
mov
mov
jg
cwtl
js
subl
or
scas
je
mov
push
stos
sub
scas
sub
in
call
cmp
add
inc
lahf
mov
je
hlt
cli
cmp
outsl
in
inc
pushf
dec
lret
int
mov
mov
popf
jle
rolb
leave
les
jg
mov
in
add
popa
jp
shll
mov
cmpsl
loop
and
mov
aaa
mov
jb
or
jge
mov
pop
inc
lret
xor
out
insl
fnstcw
pusha
xor
dec
fs
sub
cmp
inc
clc
push
test
cmp
cmp
subb
js
call
in
and
sub
pop
js
xchg
cmp
mov
ljmp
xlat
nop
clc
mov
shlb
add
mov
cmpl
jno
pop
shll
add
inc
bnd
mulb
xchg
push
sub
jge
jno
lahf
jp
cmp
fidivrs
sqrtps
jns
orl
add
dec
loopne
mov
cwtl
test
cmp
icebp
sub
xor
sub
inc
or
xchg
mov
sbb
add
sbb
sbb
sbb
in
in
imul
xchg
jae
adc
aad
lods
fistpll
xchg
push
out
push
cs
lahf
inc
sub
xchg
xlat
int
int3
mov
rorb
loope
or
jbe
cmc
movsb
pop
and
mov
cmc
lods
xchg
pop
jge
test
mov
lcall
mov
xchg
lcall
sub
inc
dec
push
lret
push
pop
test
push
rorl
mov
jns
dec
add
push
je
jp
push
cmc
in
sub
int
jbe
ljmp
cmc
pop
push
pop
adc
cwtl
xchg
js
jmp
pop
scas
add
icebp
jo
push
sub
or
mov
das
and
sti
int
push
pop
xchg
xchg
fcomps
push
adc
out
mov
fs
jmp
xor
fwait
fwait
jle
daa
adc
xor
mov
or
jnp
test
leave
repnz
out
movsl
int
lahf
push
jl
mov
mov
xchg
sub
mov
xor
push
mov
cltd
jae
jne
jmp
push
mov
stos
pop
nop
ja
cmp
data16
dec
scas
daa
ds
pop
cmp
pusha
mov
add
fdivl
cvtpi2ps
scas
push
repnz
mov
jne
icebp
cmc
subl
pop
shrl
ret
aas
fldenv
sub
mov
push
and
incb
push
fistpl
push
daa
lods
int3
mov
jne
outsb
enter
mov
bound
xchg
int
jae
push
jg
pusha
and
sub
xchg
gs
fistpl
in
scas
test
xor
adc
inc
cmp
cmp
inc
jbe
shr
sbb
call
test
out
xor
insb
or
pop
jne
notl
jg
mov
cmp
mov
adc
mov
sub
cmp
push
push
jle
in
push
xor
pop
loopne
xchg
into
test
dec
mov
add
xchg
movsb
push
or
inc
and
imul
test
xorl
cmp
sub
fnstcw
xor
or
mov
das
jecxz
aad
push
movl
inc
sub
jg
mov
cmp
cmp
in
out
or
mov
jge
xor
mov
add
shrl
inc
or
add
inc
and
mov
test
test
sbb
xlat
sub
arpl
lods
fstpt
frstor
jnp
pop
pop
or
pop
jns
adc
xor
outsb
iret
jnp
loope
pop
sub
scas
pop
mov
xchg
fistps
cmp
in
int
mov
push
mov
dec
push
outsb
dec
mov
cmc
pop
and
inc
addl
mov
js
nop
shll
xchg
cmp
ja
jnp
xchg
jo
movsl
cmpsb
inc
in
mov
ljmp
scas
push
mov
lods
and
cmp
push
add
ljmp
enter
jbe
and
aas
add
popf
sbb
xor
push
xchg
jb
in
fwait
mov
sahf
test
je
js
jbe
jmp
jnp
mov
dec
mov
lods
adc
xchg
add
lea
in
ja
enter
mov
pop
subl
jge
std
shl
insl
rolb
jmp
out
ret
cmp
mov
mov
andl
xchg
inc
jle
int
jno
pushf
lcall
sbb
cmp
filds
add
ret
daa
cmp
orl
inc
test
push
es
into
mov
dec
sub
jne
xchg
mov
mov
jbe
mov
xchg
mov
mov
jmp
imul
or
push
lret
mov
int
test
push
add
ss
pop
sti
insb
test
dec
imull
out
xchg
dec
lcall
fwait
add
adc
int3
test
jne
jp
xor
stos
push
out
test
mov
push
cli
push
add
in
ja
sti
xor
out
mov
scas
sbb
flds
push
leave
mov
adc
and
and
outsl
lcall
jle
fdivl
test
call
push
dec
out
mov
mov
imulb
rcr
and
jno
pop
fcmovne
sahf
popf
pop
sahf
enter
out
shll
sub
and
mov
push
xchg
repnz
data16
jmp
call
into
adc
ret
and
clc
insl
push
xchg
adc
xlat
or
nop
and
jb
jecxz
sti
pushf
cmp
push
xor
inc
xchg
adc
pop
bswap
mov
cltd
cmp
adcl
shlb
outsb
fdivl
in
cwtl
dec
ret
dec
rcrb
jmp
mov
xor
add
addl
aad
xchg
out
dec
or
cld
inc
cmp
lock
add
loop
or
mov
outsl
mov
int3
sbb
mov
enter
mov
push
out
cld
push
pop
dec
adc
iret
or
test
xlat
pop
pop
xor
mov
cmp
dec
xchg
or
mov
push
bswap
pop
add
in
adc
subl
icebp
jp
xchg
enter
popf
xor
mov
stos
jnp
test
cld
push
or
icebp
adc
shlb
imul
pop
dec
mov
fiadds
pop
hlt
mov
and
dec
or
inc
mov
or
notb
call
shlb
mov
fdivl
mov
inc
lods
adc
jle
clc
cmp
xchg
xor
sbb
fisubl
inc
daa
push
mov
rcr
or
jmp
gs
push
or
cmc
xor
sub
lret
mov
cmpsb
add
sbb
push
jmp
aam
mov
fwait
pop
and
std
int3
mov
fisttpll
sub
cmp
repnz
fstl
sub
lcall
push
dec
into
test
cmc
sub
push
or
cli
test
xchg
clc
popf
rcrl
fstl
scas
xor
jnp
dec
fistpll
aam
stc
or
lods
sbb
adc
or
cwtl
fldt
fsts
mov
rcl
hlt
dec
push
add
es
mov
int3
loopne
sub
dec
mov
frstor
adcl
or
cmpsb
push
push
mov
xlat
fcmovb
mov
lea
pushf
jns
inc
and
xchg
mov
mov
xchg
inc
or
ja
mov
inc
enter
jne
cmp
push
inc
sbb
mov
stc
inc
out
into
cs
adc
jl
sbb
fs
jo
sub
xlat
out
dec
push
xor
jb
cld
pop
mov
adc
jne
outsl
scas
cmpsl
ljmp
jnp
sahf
xchg
js
mov
pop
lock
and
scas
clts
or
mov
mov
rorl
sbb
scas
sti
btsl
and
pushl
push
scas
push
test
sti
jb
and
inc
loope
lahf
cmp
add
pop
mov
sub
out
inc
aad
adc
cmovae
push
pusha
fstl
mov
push
pop
out
mov
pop
sub
sbb
inc
pop
sbb
mov
sbb
mov
adc
shr
add
insl
outsl
cli
cltd
loope
je
push
or
and
or
cmp
mov
xor
xor
fs
hlt
mov
and
inc
jnp
cmp
or
fmull
sbb
mov
popf
mov
test
xchg
cmp
subl
cld
cmp
rolb
add
adc
mov
mov
or
cmp
mov
inc
jge
xchg
js
sub
loopne
iret
jns
fiaddl
sbb
xchg
adc
clc
adc
cmp
xor
push
lods
or
push
jg
movl
lock
pop
add
in
lahf
out
ds
mov
dec
icebp
lret
inc
xchg
mov
clc
out
loope
loope
andb
dec
jae
pop
movsl
jb
test
xlat
mov
jge
dec
push
inc
jae
mov
jne
mov
xchg
test
in
lret
notl
dec
xor
xor
lahf
daa
mov
pop
rcrl
fs
jnp
aad
cmc
rcrl
inc
shlb
mov
insl
gs
rcrb
push
or
mov
fdivrl
jo
loop
xchg
cmpb
cmp
add
jo
add
aaa
imul
push
imul
add
xchg
out
or
xchg
push
data16
fwait
int3
pop
icebp
icebp
jp
sahf
test
xchg
test
not
xorl
mov
mov
push
repnz
clc
fsts
arpl
aad
loopne
add
push
scas
xchg
jg
popf
add
out
push
cwtl
rcll
fdivl
pop
jnp
repz
jg
aam
call
clc
mov
les
mov
or
rclb
mov
stc
mov
into
xchg
pop
stos
enter
dec
ljmp
pop
hlt
jp
pop
mov
mov
jne
sub
rolb
cmp
pop
pop
mov
arpl
lret
hlt
dec
mov
adc
adc
mov
sbb
ljmp
outsb
addr16
xchg
cmp
das
jns
test
xor
jnp
cmp
and
pop
mov
pop
mov
cmc
mov
repnz
sub
mov
mov
lcall
jae
out
dec
lods
pop
cmp
rclb
test
xor
ss
xor
in
pop
insb
ret
push
rcll
fucom
repnz
cli
jae
out
js
in
insb
inc
fbstp
out
fidivl
mov
pushf
xchg
mov
cmp
movsl
dec
rcrl
rclb
xchg
arpl
leave
mov
cmp
xchg
cmp
out
inc
add
call
hlt
ror
or
jle
daa
xor
clts
out
adc
sbb
aad
pop
fnstenv
out
mov
stos
inc
dec
and
pop
jne
jae
mov
cmpsb
pop
xor
mov
mov
sub
xchg
sahf
add
ficompl
sahf
inc
xchg
push
es
aas
in
fwait
insb
nop
jmp
aam
xchg
mov
in
rorb
inc
stos
add
mov
es
push
out
dec
jge
leave
inc
fucomp
inc
add
adc
cmp
movsb
imul
add
push
out
lret
xchg
cmp
cmp
or
sbb
das
mov
or
xor
bound
mov
js
out
xor
mov
lds
jb
fcoml
imul
cmpsb
add
lods
adc
test
jbe
iret
dec
mov
lock
jge
and
stos
in
jb
dec
bound
xchg
shl
sbb
nop
daa
or
xchg
dec
push
pop
or
xor
mov
scas
pop
mov
and
jno
int3
lea
out
jne
jle
jge
add
lahf
clc
or
xchg
mov
jmp
xchg
push
push
push
dec
cmp
test
xchg
cwtl
dec
dec
nop
test
pop
sbb
push
inc
insl
mov
into
jle
test
js
shlb
lahf
sub
gs
jmp
jns
cmc
mov
inc
stc
in
or
int3
xor
jmp
imul
inc
pop
lods
mov
outsb
add
shlb
scas
pop
mov
cld
jne
je
cltd
rorb
xlat
aaa
xor
mov
bound
jecxz
es
jne
push
dec
lods
mov
in
fimull
pop
daa
jb
stos
mov
stos
in
sti
test
maskmovq
idivl
rolb
fs
xchg
dec
mov
leave
cli
sub
mov
push
jle
roll
lcall
pop
push
sti
xchg
xor
xor
and
icebp
mov
fdivrl
dec
mov
icebp
pop
or
dec
mov
adc
sub
hlt
sbb
xchg
mov
aam
cli
xchg
push
sar
xchg
push
cs
xchg
sbb
adc
or
popf
mov
pop
sahf
testl
mov
jp
cmpsl
xor
sub
xchg
xchg
fisttpl
adc
es
imul
je
test
xorl
ss
and
mov
mov
fildl
dec
aas
daa
hlt
shl
cmpsb
add
fbstp
inc
repz
sub
xorb
jo
xchg
xchg
push
inc
aam
shlb
mov
pop
jo
xor
mov
xchg
add
mov
outsb
stos
test
je
ror
in
adc
push
add
sbb
xchg
inc
fcoms
pop
jmp
xor
dec
dec
enter
das
add
mov
orl
sub
test
cs
mov
cmp
mov
mov
sti
roll
rcll
or
xor
mov
add
cmp
mov
and
xorl
shlb
inc
in
sub
je
ds
sub
lock
aam
fistpll
shll
add
fistpll
inc
inc
ss
je,pn
test
insl
cmpb
ret
imul
sbb
jno
add
stos
in
or
das
jb
vorpd
lods
xchg
and
add
adc
jecxz
jb
movsl
xor
das
add
cmp
sbb
xor
sbb
cwtl
hlt
int3
ror
cltd
in
mov
and
sti
jge
fld
xorb
jl
mov
or
stos
pop
fs
cmp
cmp
pop
cwtl
insb
sti
mov
or
data16
mov
fwait
popf
or
icebp
inc
movl
jp
pop
cmpsl
in
icebp
pop
add
push
jg
clc
push
add
lods
cmp
lock
sbb
mov
add
sar
add
xchg
push
sbb
mov
test
xor
addr16
nop
int
sub
repz
pop
inc
cmp
dec
imul
imul
cmp
loope
pop
push
sub
movsl
jae
adc
jl
pop
adc
dec
int3
arpl
ds
movsl
iret
lea
add
and
jmp
daa
xlat
mov
add
dec
lahf
out
out
jge
rclb
mov
dec
clc
or
std
dec
aas
jle
xchg
negb
test
or
loop
jle
ret
pop
sahf
ret
adc
add
out
cltd
add
inc
push
pop
and
jge
into
jle
lret
sub
mulb
enter
xchg
adc
cs
ljmp
mov
adc
push
enter
cmp
cmp
sub
jmp
jns
mov
mov
call
xchg
mov
push
rol
leave
cmp
mov
mul
push
push
int3
addr16
cmp
pop
mov
sahf
inc
cmc
mov
and
faddl
aas
mov
sbbl
subl
rorb
xchg
std
and
mov
fwait
xor
data16
sub
sbb
or
sahf
in
roll
loopne
mov
jns
ljmp
push
flds
pop
mov
push
xchg
jl
outsb
xorl
cld
and
dec
xchg
addr16
cwtl
mov
mov
roll
xchg
mov
rorl
mov
push
push
mov
mov
aaa
push
push
mov
xor
ficompl
loop
notb
daa
xor
xchg
pushf
or
icebp
orb
push
ret
fsubrs
idivb
test
xchg
and
mov
xchg
sbb
ret
jns
loopne
cmp
mov
ret
mov
cmp
enter
test
lret
pop
outsb
mov
imul
sbb
add
inc
or
pop
jmp
and
cmp
xchg
roll
jecxz
ljmp
push
adc
rolb
dec
mov
sbb
mov
pop
cmc
insl
les
aad
sbb
pushf
push
pop
pop
jo
aaa
out
push
cmp
pop
popa
mov
cmp
cli
dec
jmp
xor
pusha
push
sbb
std
xchg
pop
lea
lods
rolb
mov
cmp
pop
in
jle
popa
pop
xor
or
jnp
adc
loop
adc
mov
jle
shrl
popa
xchg
inc
arpl
push
jl
out
je
mov
push
iret
xor
ljmp
fidivrs
jg
mov
or
js
sahf
addb
push
jg
shr
sbb
fdivrs
cs
cmpsb
popa
jmp
loopne
xlat
cmp
xchg
repnz
xchg
xor
aad
ficoml
scas
jo
clc
testl
int
bound
push
xor
mov
push
pop
mov
ret
sub
aas
in
enter
out
shll
pop
xor
loop
push
push
jge
push
pop
pop
inc
in
divb
icebp
sub
and
lret
mov
dec
sub
or
test
notl
fidivrs
std
lret
jmp
cmp
dec
sbb
jb
pop
faddp
inc
cld
nop
or
cmp
push
mov
jo
push
mov
pop
add
sub
shr
fnstcw
cltd
cltd
insl
int
inc
fstpl
or
pop
adc
sbb
xor
jl
jle
inc
adc
fadds
dec
pop
mov
stos
sub
shrb
push
fdivrl
cltd
fsubl
push
into
stos
inc
adc
cmpb
repnz
inc
or
sbbl
int
push
cltd
jl
push
rclb
sub
mov
inc
insl
xchg
rol
loopne
push
xchg
test
mov
cmpsl
fadds
inc
outsb
sahf
flds
adc
rcr
cmpb
mov
into
mov
jge
inc
fsubs
clc
mov
or
das
pop
xchg
fldl2t
scas
cmpsl
leave
cmpsl
push
out
or
jl
dec
lods
inc
sbb
dec
sbb
stos
adc
or
icebp
add
in
cltd
cmp
imul
call
movsb
add
ret
add
pop
jecxz
ret
adc
jb
mov
call
roll
scas
fcmovnb
adc
cli
hlt
ds
out
lods
or
or
mov
lahf
adc
pop
mov
mov
cmpl
xor
xchg
inc
dec
pop
jb
xchg
jnp
xchg
inc
jecxz
cmp
in
jo
or
mov
add
sti
fidivrl
pop
xchg
pop
sbb
sbb
aam
int3
inc
jp
add
ljmp
pop
js
push
push
jl
adc
enter
or
inc
push
inc
inc
les
sbb
cld
or
popa
jns
mov
push
lahf
stos
jl
movd
stc
push
xchg
pop
dec
push
mov
mov
lar
sbb
pop
adc
and
cmpsb
roll
call
jne
sti
in
xchg
cmp
push
cmpl
cmpsb
rorl
lahf
mov
push
insl
std
or
addb
lret
lret
cmpb
test
lods
leave
cmpl
lds
push
in
inc
movsl
push
imul
scas
xchg
lea
mov
xchg
testl
dec
test
das
adcb
jbe
inc
pop
add
push
lcall
out
adc
jb
shll
push
push
movsb
mov
or
aam
ja
call
andl
add
ss
sbbl
jecxz
jo
push
shll
lds
jnp
imul
or
imul
sbb
adc
cmp
inc
sub
je
xchg
jbe
sbb
idivb
xchg
incl
jbe
es
incb
sbb
ret
into
and
lods
loopne
inc
xchg
repnz
aas
add
les
rcll
shrb
mov
js
ret
sahf
cmpsb
daa
pop
pop
fdivrs
aas
xor
cs
add
mov
mov
push
xchg
repnz
sbb
fadds
jno
std
in
mov
loop
pop
enter
ret
gs
inc
dec
lahf
in
jge
jmp
adc
xor
popf
or
push
imul
pavgw
icebp
stos
hlt
jl
daa
jae
push
cmpsl
leave
mov
adc
daa
adc
ja
xchg
clc
push
dec
dec
pop
dec
loop
lock
push
nop
data16
outsl
cmp
cmp
js
std
sti
lods
jae
push
adc
xchg
stc
sbb
xor
loopne
mov
movsl
in
pop
ds
sbb
dec
in
sahf
or
lods
mov
pop
sti
mov
adc
add
lret
ja
out
sub
fs
aas
cli
push
xchg
pop
push
hlt
cli
inc
or
insl
inc
loope
pop
jae
pop
iret
adc
shlb
pop
les
xchg
mov
push
pushf
inc
inc
dec
bound
sub
xor
call
jmp
xchg
int
inc
loope
pop
movsl
cmp
xlat
jo
subb
jmp
cmp
out
pop
push
sub
into
jge
xchg
inc
lret
shrl
div
int3
push
ja
cli
mov
in
bnd
stos
xor
aam
iret
negl
and
je
pusha
inc
out
sbb
xor
in
push
and
inc
mov
lds
mov
sbb
adc
mov
pop
mov
iret
pop
aas
mov
cmp
ss
xchg
push
adc
sub
and
inc
mov
adc
jo
jle
dec
jne
pop
lods
pop
and
loop
mov
stos
jns
cmp
lods
in
inc
add
jecxz
sahf
ja
lcall
outsb
add
push
adc
jg
inc
or
dec
xchg
ficompl
mov
nop
das
dec
ret
in
mov
fs
push
inc
les
aam
lret
add
fsubs
inc
imulb
orl
in
mov
das
sahf
inc
and
inc
sbb
hlt
hlt
xchg
clc
data16
add
loop
out
pop
adc
mov
adc
jae
inc
pop
sarl
jnp
inc
push
imul
fisubl
add
push
mov
mov
cli
xchg
mov
and
insl
popf
test
cld
sbb
xlat
stos
pop
adc
sbb
test
push
mov
sub
push
xchg
pop
std
sub
push
push
jl
shlb
clc
or
out
arpl
daa
lea
out
aad
mov
inc
ret
fwait
popa
mov
mov
repz
jl
pop
inc
scas
out
xor
cli
es
loopne
mov
mov
push
std
outsl
adc
mov
shll
push
aam
cmp
ficomps
push
xchg
lock
nop
cmp
mov
xor
mov
cmp
inc
daa
push
fsub
add
lcall
push
fwait
bound
call
mov
mov
pop
sbb
mov
jg
aad
inc
movsl
sub
lock
ds
sbb
pop
jp
cmp
and
rcrl
xchg
test
in
ja
and
cmp
mov
xchg
dec
xor
jp
xor
pop
or
ja
filds
fsubl
js
pusha
clc
jmp
sub
stc
xchg
fs
jb
gs
dec
hlt
insl
popf
inc
xchg
adc
push
repz
mov
aad
cltd
cmc
add
sub
sbb
sub
inc
shrb
pop
sbb
inc
sahf
repz
outsb
outsb
fcmovne
cmpsl
jne
mov
lret
xchg
ror
jg
mov
nop
dec
scas
adc
and
inc
cmc
imul
xchg
dec
or
or
fldt
aam
call
les
sub
pushf
and
mov
push
xchg
inc
out
mov
xchg
push
jle
sbb
dec
or
push
and
xchg
push
ret
inc
sarb
testb
cmpsb
sarb
repz
repnz
inc
sub
xchg
mov
mov
ss
orb
xchg
xor
repz
sub
push
lahf
lret
inc
xchg
fwait
les
jle
into
mov
sub
jmp
iret
sub
push
dec
arpl
or
pusha
lds
push
mov
dec
aaa
mov
cs
mov
adc
jg
mov
fcompl
les
sahf
lcall
sub
pop
and
cmc
xorl
in
mov
jnp
lret
jp
fists
loope
sbb
pusha
cld
jbe
clc
jne
cmp
insl
scas
scas
shlb
into
out
pop
push
dec
pusha
mov
fcmovne
add
and
js
ja
or
jmp
in
in
mov
pusha
js
cltd
inc
mov
xor
lahf
or
adc
in
test
xlat
gs
push
leave
stc
aaa
cli
dec
and
out
daa
mov
mov
jl
mov
hlt
shrb
xchg
inc
push
xor
pusha
iret
push
add
inc
add
xor
popf
pop
les
in
xchg
into
test
mov
push
xor
movsb
in
add
adc
sbb
fwait
dec
outsb
ja
cmpl
adc
inc
sub
or
dec
insl
popf
cld
cs
adc
add
insb
dec
xchg
inc
pop
idivb
gs
mov
xchg
clc
addr16
or
xor
jle
or
ja
pop
insb
in
addr16
jae
bound
jae
xor
es
lods
in
xchg
pop
das
div
minps
lret
inc
xor
sub
and
dec
sbb
sbb
pop
testb
insb
cmp
jae
pop
jmp
mov
mov
fdivrs
inc
fsub
lret
aaa
pop
aad
sub
test
push
cmp
orb
hlt
dec
jecxz
dec
cmp
xor
loop
fstps
cmp
rcrb
sub
fildl
nop
xchg
add
cmp
lahf
add
and
ficoms
xchg
cmp
fdivl
or
pop
movsl
adc
aaa
subb
jbe
stc
std
or
dec
sub
stc
test
dec
pop
mov
psubusb
rcr
mov
cli
es
test
test
inc
int
pop
es
stos
mov
jmp
jmp
adc
and
adc
pop
xchg
js
imul
repz
mov
test
insb
dec
ret
mov
leave
pusha
pop
jge
mov
xchg
ja
data16
jp
out
pop
sbb
in
add
or
push
xchg
repnz
cli
lods
arpl
and
push
add
cmp
and
rorb
sbb
push
js
or
xchg
jecxz
pop
xchg
adc
dec
in
push
cmc
into
inc
mov
adc
je
jae
roll
pusha
and
sbb
sbb
bound
cwtl
and
xchg
dec
aam
pop
cwtl
shl
cmc
sbb
aas
mov
out
inc
std
xlat
lcall
mov
dec
xchg
cs
dec
mov
mov
mov
cmp
fsubs
push
out
outsl
fnsave
movsl
and
dec
repz
and
test
mov
ds
push
icebp
notl
outsb
loopne
sub
shlb
leave
jne
aaa
int
xor
and
xor
pop
insb
pop
testl
ret
notl
xor
ja
ja
mov
ljmp
lahf
sbbl
je
inc
stos
shll
shl
mov
mov
jecxz
mov
mov
sahf
jle
dec
rclb
xor
add
popf
lcall
adc
push
sti
out
nop
sbbb
stos
std
sub
int3
cmp
sahf
xchg
pop
in
push
leave
roll
sbb
inc
sarl
adc
sbbb
stos
mov
mov
dec
dec
sbb
dec
test
faddl
rcr
mov
jb
xchg
aam
orb
add
cmpl
xor
stos
jge
insb
loop
imul
lock
jle
cwtl
jns
mov
jno
fdivrl
mov
mov
fcmovne
in
mov
imul
and
mov
inc
sub
dec
jne
jecxz
cltd
dec
inc
aad
jmp
pop
imul
sti
jne
adc
fwait
xor
ss
mov
and
jmp
and
fsub
cmp
leave
push
or
adc
aam
dec
pushf
inc
mov
popf
pop
fadds
or
or
cmp
aaa
add
adc
pop
iret
decb
ret
int3
mov
push
mov
rcll
fiaddl
faddl
leave
mov
pop
jl
test
stos
mov
xor
mov
sbb
sbb
stos
mov
fidivl
push
outsl
test
dec
fiaddl
cld
mov
mov
xchg
mov
lret
xchg
subb
mov
rcl
adc
sti
stc
jae
mov
inc
sub
jge
inc
test
test
pusha
sti
stos
adc
pop
mov
js
in
xlat
inc
pop
xor
or
and
cmp
mov
jl
xorb
pop
stc
int
pop
pop
sub
mov
xchg
and
mov
xrelease
pop
mov
jle
sub
fcompl
push
mov
fbstp
or
pop
repz
adc
jo
clc
mov
js
fs
addl
rolb
dec
or
fmulp
jle
jns
xchg
leave
imul
ds
dec
push
push
add
scas
sarl
fdivs
test
cli
insb
sti
ljmp
fdivp
mov
dec
adc
mov
add
call
lock
in
int
pop
push
push
jg
test
mov
cmp
or
ret
gs
out
out
dec
dec
sub
fs
inc
lret
pop
lods
jns
inc
popf
adc
scas
mov
notb
addr16
pop
cmpsb
inc
add
out
shrl
leave
aam
cmc
mov
imul
mov
dec
mov
xchg
mov
js
inc
into
mov
stos
jmp
fs
sbb
inc
cmp
inc
jbe
lods
rorl
inc
hlt
call
xchg
pop
add
xchg
jmp
imul
and
bound
xchg
into
addb
es
out
pop
lea
cmp
ret
jno
in
push
cmp
push
jmp
push
adc
stos
ror
outsl
cs
xchg
pusha
cmc
sub
push
push
ljmp
jmp
out
jbe
lea
shr
jmp
cmp
fldcw
bound
sub
cmp
shrb
popf
dec
pop
shll
mov
or
sub
insb
xchg
inc
das
aam
pop
mov
sub
adc
adc
sahf
icebp
mov
mov
add
xchg
xchg
dec
fisttpll
stos
fwait
mov
aaa
cmp
sarb
jns
jmp
and
test
test
aad
push
popa
js
ret
cmp
pop
jl
pushf
xor
or
stos
mov
inc
push
mov
mov
cltd
insl
je
inc
arpl
ljmp
mov
or
mov
test
inc
ljmp
movsb
call
lods
out
xchg
fwait
adc
pop
out
add
mov
mov
scas
pop
mov
dec
add
mov
cs
shll
mov
mov
lods
imul
roll
sahf
mov
push
jecxz
pop
sub
movsl
movsl
imul
fsubs
stos
dec
pop
mov
hlt
fmuls
cld
mov
inc
outsl
sub
leave
shrb
cmc
pop
mov
mov
les
repz
ret
rolb
push
into
lahf
push
push
jne
out
cli
data16
out
fucomi
mov
pusha
pop
sahf
in
lcall
arpl
xchg
or
imul
sbb
push
and
pusha
loopne
jp
mov
stos
jno
mov
xor
sbb
cmp
xor
stc
call
mov
les
lahf
js
bound
jmp
add
mov
test
fnstcw
cmp
jg
sar
inc
pop
mov
push
adc
xchg
scas
and
pop
pop
fstpt
adc
cmc
mov
jge
je
shlb
ja
mov
and
stos
mov
dec
xchg
rcrl
es
fcoml
sbb
andl
mov
fsubs
fstps
les
mov
call
xlat
inc
fadd
cmpsl
ds
aam
std
xor
adc
ja
sub
lcall
inc
add
fxch
fstpt
cwtl
or
jecxz
fildl
dec
add
pop
test
jno
add
std
mov
inc
mov
imul
ljmp
test
pop
addr16
xchg
sub
pop
push
pushl
jmp
cmp
sbb
in
cmpsb
test
push
fnsaves
inc
push
xor
fisttpll
std
out
in
inc
hlt
pop
xor
push
data16
mov
inc
mov
enter
sbb
imul
outsl
add
js
xchg
into
in
call
pop
mov
pushf
mov
std
jno
jg
rcll
pop
loop
jnp
xchg
mov
mov
sub
xlat
ljmp
aad
pop
fisubrl
and
pop
cmp
jge
push
mov
dec
push
in
add
out
xlat
sub
adc
adc
loop
fs
adcb
xor
add
ret
and
xor
jmp
sbb
adc
or
stos
test
notb
ss
jg
jl
mov
pop
push
mov
push
dec
mov
sub
sarl
mov
inc
inc
jo
and
adc
mov
rcrl
je
push
push
add
bound
pop
jge
subb
aam
fdivrl
add
xchg
sub
mov
loope
mov
mov
test
adcb
dec
cmp
ja
sbb
imul
sub
pop
sbb
dec
push
cmpsb
fwait
mov
xor
dec
inc
popl
sub
and
xor
dec
mov
into
mov
pop
mov
retw
or
cs
mov
push
enter
test
mov
lock
sarl
inc
decb
into
std
mov
xchg
sbbb
adc
mov
add
jnp
lods
test
add
jbe
cmp
push
jns
push
jb
cmp
jne
xor
dec
sub
insb
jb
or
rolb
push
cwtl
out
leave
sbb
fmull
scas
mov
sub
int3
xchg
into
and
push
xor
lock
out
or
cwtl
test
pop
or
push
in
inc
icebp
adc
sbb
repnz
mov
sbb
fiaddl
cmp
in
mov
jle
add
lcall
cmc
mov
js
lock
or
dec
aaa
cmp
popw
ljmp
je
sar
sar
mov
push
fs
rcl
aas
ret
fldl
pop
enter
xor
int3
cltd
mov
sub
rcrb
inc
cmpsl
inc
enter
dec
bound
insl
mov
xor
ss
in
stos
push
out
cmc
inc
pop
jp
xor
sahf
shl
xor
in
pop
and
pusha
or
adc
mov
rclb
mov
and
int
mov
mov
push
jle
inc
sahf
imul
pop
sbb
cmpsb
mov
fstl
data16
fidivl
push
mov
fwait
adc
lock
and
sub
loope
sbb
push
xchg
xor
push
xor
ja
push
aaa
xor
xchg
mov
test
js
popf
stos
js
inc
rorb
jo
jl
xorl
call
pop
push
inc
mov
push
dec
bound
xor
and
xor
vcomisd
std
test
mov
out
push
popa
inc
in
icebp
and
and
popa
inc
fidivrs
add
stos
sub
std
and
ss
cmpsb
dec
push
in
aas
mov
cmp
dec
cmp
lods
add
rcrb
xchg
ret
adc
cmpsl
inc
mov
dec
fnstenv
mov
sbb
add
sub
and
xor
adc
jbe
adc
aas
add
dec
and
sbb
xor
insl
push
lds
idivb
in
out
pop
mov
bound
dec
dec
rcr
xorb
movsb
loope
div
cmpsb
shrb
push
xchg
test
pushf
sbb
mov
push
gs
and
sub
fldlg2
cld
push
jmp
pop
das
and
push
mov
push
adc
test
lret
daa
push
jg
sarl
or
push
sub
mov
dec
add
sahf
fisubrl
and
daa
jp
mov
add
iret
mov
pop
or
add
mov
xchg
adc
or
je
in
pop
or
imul
test
mov
negl
cmpsl
inc
jnp
xchg
nop
repz
cmpsl
dec
dec
lcall
mov
in
and
dec
int3
adc
and
in
das
fwait
divl
adc
add
loopne
xchg
pop
mov
mov
or
ja
and
mov
cmp
sub
and
mov
xchg
shll
mov
inc
add
pop
dec
les
lea
sub
vpandn
inc
lds
mov
cmp
ljmp
jmp
push
repz
jle
inc
and
int
pop
inc
insb
sbb
cli
fbld
adc
cmpsb
and
dec
repz
mov
test
lahf
out
cmp
adc
adc
int3
inc
push
pop
mov
les
adc
ds
or
pop
fadds
mov
and
subl
outsl
mov
xchg
ds
cmp
add
pop
mov
mov
test
mov
jo
cli
icebp
outsb
and
xchg
rolb
push
pop
repnz
pop
mov
push
cwtl
jnp
cmp
stos
aad
cmp
outsb
xchg
adc
cs
lahf
and
lods
adc
cmpb
fnstsw
add
icebp
jmp
and
shrb
mov
mov
cmpsb
mov
ljmp
sbb
push
cwtl
sahf
mov
and
mov
or
cmpsb
leave
lock
push
outsl
stc
imul
add
out
jbe
arpl
cmpsb
mov
daa
imul
out
pushf
and
negb
push
shrb
lods
jle
pushf
jne
mov
cltd
add
xchg
xchg
and
dec
inc
mov
lock
fsubr
mov
test
pop
mov
lcall
push
fidivrl
mov
add
addb
dec
xchg
mov
sub
js
xor
cmpsb
xchg
sbb
inc
cmp
add
pop
push
jno
in
jae
addr16
icebp
adc
adc
inc
xor
cmp
xchg
lods
shlb
rcrb
test
xor
hlt
fs
je
and
cmp
js
xor
enter
rol
clc
addl
cmp
push
jge
bsf
push
lods
loop
mov
mov
test
lcall
jecxz
stos
fiaddl
add
es
lods
sahf
jnp
orl
add
nop
jne
daa
ljmp
inc
sbb
std
mov
jo
pop
adc
jmp
ret
push
sbb
fsubrl
xor
pusha
inc
mov
cmp
jo
push
popa
push
shrb
jnp
sub
sbb
adc
or
or
mov
aaa
fsqrt
inc
fisubs
ljmp
pop
in
out
push
inc
mov
imul
fucomi
xor
sub
cmp
ljmp
out
adc
mov
mov
das
mov
and
stc
aaa
loope
test
mov
or
push
add
icebp
inc
int
lcall
imul
es
jl
stos
xor
lret
in
loopne
ds
ret
sbb
sbb
jno
sbb
loop
scas
lret
jge
xchg
js
mov
mov
add
rcll
cld
add
pushf
push
ret
sbbb
push
mov
fisubrs
frndint
adc
xchg
pushf
and
mov
jle
xchg
lods
xchg
lock
push
ljmp
fadd
das
jmp
push
stc
pop
repnz
xchg
xor
or
add
xor
out
aam
arpl
mov
pop
dec
sbb
fbstp
pop
mov
sbb
div
xlat
ljmp
nop
fldt
jl
movsb
sub
notb
shr
fistpll
dec
out
dec
fidivrs
pop
or
adc
adc
add
aam
mov
dec
sbbl
mov
mov
fwait
push
pop
push
or
clc
xlat
and
push
mov
dec
jns
jl
into
stos
sub
movsl
sub
inc
repnz
rcrl
shl
inc
xchg
mov
loopne
sub
add
mov
add
imul
and
jbe
cmpsl
into
imul
mov
adc
adc
mov
add
sbb
out
and
fistpll
jg
mov
mov
jg
test
pop
cli
in
mov
shll
leave
dec
imul
add
mov
test
je
call
addr16
adc
sub
insb
rcr
lock
jmp
mov
sti
xchg
cmc
pop
push
mov
cmp
ret
adc
iret
rorb
ss
in
fstp
popa
imul
jno
lods
imull
testl
imul
pop
cmp
lahf
or
xor
dec
mov
ficomps
mov
lods
xor
ret
or
test
sub
aaa
pop
or
mov
xor
mov
in
push
imul
orl
mull
cmc
add
call
scas
sub
or
lahf
das
jmp
std
mov
jns
pop
cli
mov
pop
inc
mov
testl
push
xchg
int3
jecxz
jnp
adc
and
call
dec
test
push
adc
pop
insb
call
not
fcom
incl
inc
inc
or
mov
mov
sub
push
enter
add
mov
scas
xor
xlat
sbb
pop
rcrb
std
cmp
das
cmp
rcl
pop
aad
or
pop
ss
iret
mov
lds
inc
sub
jmp
xor
notb
mov
jg
mov
push
fstl
icebp
mov
test
mov
idivl
cwtl
stc
mov
cmp
lock
mov
iret
sbb
dec
cmp
cmc
xchg
call
jno
push
pop
outsb
rolb
out
or
jg
inc
dec
and
shl
pushf
shll
xchg
movl
inc
lea
mov
dec
push
sbb
pop
push
mov
movsb
int
int3
call
insl
popf
pushf
shl
jmp
mov
cmp
repz
test
icebp
aam
sbb
pop
imul
sub
pop
dec
scas
repnz
or
jno
int3
push
outsb
jle
add
repnz
leave
cmp
int3
popa
int
movsl
les
mov
pop
push
push
hlt
jno
mov
mul
aad
shll
outsb
xchg
jg
jle
mov
imul
lcall
loope
pop
and
stos
jae
imul
push
into
es
stos
push
in
xor
add
xor
fwait
mov
mov
adc
pop
xor
inc
sbb
push
mov
push
jbe
out
ret
ljmp
lret
lcall
xchg
sub
mov
cmp
pop
into
into
in
pusha
pop
cmp
push
mov
loop
jnp
pop
aam
arpl
rorb
mov
test
je
out
push
imull
and
std
inc
jo
dec
jo
out
pop
hlt
xchg
cmpsb
cmp
test
xorl
loopne
test
rorb
sbb
cmp
leave
shlb
mov
cmp
and
push
add
pop
clc
mov
push
jp
negb
cwtl
movb
xor
mov
and
xchg
cli
add
jne
mov
lods
xchg
ss
jae
xor
ss
cmpsb
fs
dec
test
xor
pop
add
lahf
arpl
mov
jmp
nop
mov
fisubl
jnp
repnz
dec
ret
mov
add
addr16
rcrb
sub
mov
mov
adc
cli
test
bound
dec
cld
out
sbb
add
cmpsb
test
and
mov
and
rcrb
sti
js
inc
scas
pop
sub
cmpsl
sub
fdivr
sub
iret
xchg
jae
dec
shlb
scas
test
les
jge
ja
sbb
popf
xor
mov
aam
dec
movsb
push
pop
inc
mov
fsubr
in
mov
mov
js
insb
mov
mov
stos
bound
and
and
ja
mov
aas
into
mov
xor
add
dec
dec
cs
pop
into
push
cs
call
inc
fldenv
mov
and
sub
lcall
add
mov
cmc
ret
test
add
push
add
aad
xchg
fidivs
pop
je
cmpsl
push
pop
ret
ror
fisttpl
dec
lods
divl
cmp
cmpl
dec
stos
mov
mov
dec
and
xchg
pop
sub
pop
push
ds
daa
dec
int
and
mov
xchg
aas
sub
fnstcw
dec
jnp
arpl
stc
mov
sbb
inc
nop
out
ljmp
push
shl
fdivs
and
mov
ret
fstps
pusha
sarb
cmc
ror
mov
das
out
int
fmuls
adc
mov
fdivrs
inc
in
jae
mov
imul
call
sub
dec
xchg
adc
adcb
push
aam
xor
xchg
xchg
sarl
cmp
lret
cli
xor
xchg
test
test
fisubl
xorb
mov
subb
addb
ss
xor
js
jle
fdivl
lods
inc
pop
aas
es
std
add
lcall
int
icebp
push
jp
cmp
lods
jecxz
lahf
iret
dec
sbb
ret
les
ret
lea
pop
xor
sbb
sti
or
loope
push
push
mov
rcrl
cwtl
push
add
sub
mov
lcall
pop
push
inc
add
aad
mov
rcll
in
es
jae
lret
pop
mov
and
sti
push
and
xchg
mov
adc
inc
test
out
xchg
int3
mov
mov
imulb
sti
or
inc
mov
jle
dec
mov
pop
mov
insb
sbb
pop
cmp
add
and
pop
test
addr16
sub
jle
je
pop
mov
frstor
mov
mov
jle
dec
orl
xchg
mov
xor
iret
mov
lock
leave
lea
push
mov
pop
pop
sbb
xchg
aam
xchg
cmpsl
in
adc
lahf
loope
movsb
fsubrl
xchg
js
xchg
inc
pop
inc
gs
push
xor
lods
mov
les
shlb
jns
jo
pop
push
jbe
push
pop
xchg
jns
fucomip
push
push
push
pop
or
ret
test
cmpsb
jns
int
inc
call
cmp
outsb
ja
insb
inc
dec
pop
cmp
rolb
inc
sub
js
rclb
fildl
jo
mov
movsb
xor
push
stc
inc
pop
xchg
mov
or
outsb
mov
lock
test
add
mov
xchg
fistpl
mov
mov
inc
test
xlat
cli
dec
sbb
sub
sub
shrb
adc
dec
scas
inc
stos
and
sub
or
enter
pop
int3
cmc
rorb
mov
mov
in
fnstsw
jbe
rorb
cmp
sbb
cmp
mov
ds
mov
xor
lret
je,pt
sub
notl
imul
dec
pop
dec
stos
jge
int
inc
in
cmc
mov
stos
add
aad
decl
mov
mov
out
jge
and
imul
stos
test
ss
jge
mov
push
or
dec
mov
scas
and
repnz
push
and
xor
test
sub
popa
iret
mov
dec
cmp
lods
mov
cmp
add
stc
sti
mov
mull
nop
mov
icebp
jae
pop
jle
xchg
pop
enter
push
adc
icebp
jg
sbbl
addb
cmp
mov
mov
outsl
fmull
sub
adc
xor
xor
lock
loop
and
push
dec
std
rolb
xchg
adc
cmp
add
cmp
adc
adc
push
scas
jno
cmp
sub
jg
cmc
clc
xchg
dec
mov
mov
jnp
es
ja
push
and
sbb
cmp
js
cmp
lret
ret
pop
push
leave
subl
and
or
loopne
xlat
jae
xor
pushf
test
cmc
xchg
add
cmpsb
mov
daa
jo
std
cmp
add
lods
mov
pop
and
push
dec
rolb
adc
mov
in
stos
add
jle
or
xor
orl
cmp
lock
into
imul
or
divb
es
out
jo
in
aas
mov
dec
xchg
outsb
hlt
add
ljmp
inc
mov
add
insb
clc
mov
repz
and
sub
lcall
movsl
leave
inc
ret
xchg
movsl
mov
data16
or
je
ficoml
jg
xchg
inc
sub
and
fildl
loopne
movsb
push
mov
movl
sub
cmp
dec
aaa
mov
arpl
sbb
adc
mov
pop
mov
xor
inc
add
lret
sub
add
mov
mov
push
jbe
repz
nop
sub
int
inc
cmpsb
mov
pop
dec
jmp
mov
icebp
xchg
sub
mov
xchg
icebp
mov
push
aam
pop
repnz
or
sbb
inc
cmpb
arpl
push
pop
cld
cli
rorb
sub
and
test
mov
sbb
test
divb
lahf
flds
loope
lods
shl
outsl
ljmp
jp
iret
sub
stc
test
dec
xchg
xor
movsl
scas
movsb
jno
cli
mov
dec
cwtl
jne
mov
cli
jno
xchg
fistpl
push
mov
repz
pop
or
xor
dec
jl
mov
mov
cwtl
sbb
test
test
inc
mov
lret
inc
ss
cmp
jb
jmp
sbb
pop
mov
jbe
imul
xor
lds
push
and
xor
rorb
pop
shlb
push
mov
push
xchg
mov
dec
in
mov
jmp
ficompl
icebp
aad
leave
add
loop
aad
push
sbb
pop
mov
imul
scas
imul
dec
sbb
stos
adc
inc
neg
fsubrl
add
cltd
negl
shl
rorb
bound
in
maxps
pushf
pop
mov
cmpb
mov
jle
xor
mov
imul
push
fstl
iret
fcomp
xchg
loopne
arpl
mov
dec
push
lahf
add
hlt
inc
adc
fstp
daa
fcompl
cltd
xchg
decb
push
repz
dec
push
and
divb
cld
iret
or
into
pop
mov
inc
lock
emms
adc
jo
popa
jbe
pop
sub
and
inc
insl
mov
repz
cltd
bnd
dec
sar
je
stc
push
jecxz
pop
cmp
adc
fcomip
sbb
rcr
mov
mov
imul
ss
or
fiaddl
sub
mov
loop
sbb
add
xor
insl
sti
xchg
jo
fcomi
mov
inc
fldt
adc
and
jne
incl
mov
and
pop
push
add
jnp
and
and
adc
add
in
cwtl
insl
jae
dec
ss
repz
push
sub
int
sub
dec
adc
out
push
add
add
jae
ljmp
in
dec
punpcklbw
cmp
loopne
fabs
xchg
jne
adc
in
int
mov
cld
scas
sbb
das
out
pop
xor
dec
cmp
int3
or
pop
or
pop
rorb
int3
mov
sub
scas
dec
xor
daa
mov
push
rcl
ret
call
movsb
inc
repz
sub
fsts
push
jb
sub
mov
out
mov
ss
lods
push
int
ss
sahf
mov
jp
pop
cmpsb
or
daa
mov
jns
mov
sbb
fldt
xchg
pusha
inc
addr16
add
sbb
xchg
popa
mov
lret
cmpl
out
cmp
push
pop
das
rorl
pop
dec
outsb
imul
mov
or
int
scas
mov
movsl
pop
cli
xchg
enter
lods
orl
or
movsl
pop
dec
jbe
mov
movsb
jp
or
cwtl
jnp
dec
fucomp
mov
cmc
fsub
inc
xchg
int3
mov
cmc
xchg
xor
cmc
jns
rcll
cmp
stos
dec
adc
fwait
andl
mov
ljmp
adc
add
push
xchg
pop
lcall
inc
inc
loope
add
add
push
or
js
hlt
rcr
fistpll
adc
movsb
int3
test
mov
mov
loop
cmpsb
iret
add
push
add
push
orb
mov
shl
push
imul
sarl
shrb
pusha
pop
and
mov
movsl
mov
cli
xchg
and
cltd
sub
int3
inc
inc
mov
leave
sbb
adc
stos
fadds
jbe
dec
and
outsb
mov
sub
mov
test
cli
adc
dec
sub
rol
rorb
fwait
shll
roll
inc
pop
in
enter
or
push
ja
mov
mov
call
jle
insb
mov
cmpsl
cmp
sub
xor
dec
ret
lea
les
iret
jnp
or
sbb
fstl
lcall
add
jae
mov
fsubs
mov
jns
jecxz
ljmp
mov
xor
gs
mov
cltd
mov
sbb
push
out
es
icebp
jle
mov
das
xchg
scas
and
add
jb
add
cmp
rclb
inc
mov
out
cltd
pop
shr
outsl
xchg
cmp
jae
add
gs
fdiv
and
test
or
orl
mov
out
in
cmp
lahf
fidivs
or
fs
adcb
aam
ret
mov
xlat
cmp
test
nopl
jo
outsl
arpl
inc
ret
daa
addr16
lret
inc
fnstenv
sub
dec
dec
xchg
push
repnz
pop
mov
stos
sbb
js,pn
jmp
xchg
leave
push
adc
xchg
cmp
ja
mov
cmp
ss
popa
das
or
mov
pop
sti
push
and
mov
xor
outsb
call
lahf
imul
dec
shr
adc
icebp
and
mull
popf
jl
pop
out
mov
adc
sbb
test
int
dec
push
cmpsl
mov
dec
push
mov
cmp
mov
cmp
bound
push
std
or
xchg
lds
insb
fiadds
add
cmpsb
or
mov
push
xor
or
test
pop
fnstenv
inc
repz
enter
jb
test
xor
and
sub
xor
push
roll
lahf
es
cld
jns
daa
cmpsb
imulb
xchg
cmpsl
jg
add
leave
sar
es
test
mov
out
cmpsb
lds
jg
hlt
dec
mov
shll
cmp
or
clc
jnp
inc
xchg
or
dec
out
and
xchg
shll
sti
fmuls
mov
mov
mov
jp
pop
loope
roll
imul
mov
push
mov
mov
sbb
rorb
push
fidivrs
leave
jo
or
cli
mov
inc
add
lcall
out
add
xchg
pop
daa
out
dec
insb
stos
or
loopne
mov
aam
mov
or
push
mov
pop
in
dec
xchg
loope
xchg
cmc
out
arpl
xchg
xchg
stos
shlb
test
jns
add
xor
pop
add
int3
cmpsb
into
outsb
scas
movsb
aad
xchg
rol
sub
xor
mov
xor
mov
push
popf
icebp
dec
mov
pop
cs
cmp
pop
in
dec
sbb
leave
outsl
popf
sub
mov
aas
inc
mov
or
mov
or
push
in
popf
fisubl
adc
dec
or
test
sub
mov
in
lods
popa
or
fwait
in
cs
lods
inc
cmpb
mov
aam
xor
pusha
out
push
xchg
lcall
jno
push
ret
mov
fstps
aad
out
cmp
pop
mov
lods
xchg
ja
pop
mov
cmova
pop
dec
adc
mov
push
nop
enter
adc
push
fiadds
lods
xchg
enter
test
fsubp
xchg
outsb
test
or
iret
fdivs
cli
lock
xchg
pop
inc
mov
in
gs
sub
xchg
or
ja
mov
ss
adc
push
into
iret
inc
xor
ficoml
mov
or
jns
xchg
mov
cld
mov
mov
sbb
iret
jno
push
mov
sbb
test
jo
cmpsl
sbb
int3
xchg
cmp
pop
daa
aad
loop
pop
daa
addl
mov
hlt
sti
mov
xchg
add
lods
mov
jge
xor
test
lcall
lcall
jne
les
jmp
lods
fdivl
jns
and
repnz
in
pop
lcall
pushf
mov
dec
das
xor
add
add
jb
lea
rolb
push
repnz
dec
mov
lea
mov
aam
outsl
dec
fwait
push
outsl
push
in
mov
int
push
test
or
cmp
lods
inc
cmpsb
mov
repnz
add
mov
jl
stos
in
popa
shrl
adc
stos
xor
jae
ljmp
push
xchg
push
mov
mov
in
out
in
push
push
mov
mov
inc
loop
outsl
les
out
sbb
pop
xor
popf
aaa
jo
pop
sahf
add
fstps
in
jle
mov
sub
into
icebp
add
adc
cmp
inc
fldl
aam
push
jl
ret
xor
dec
cmpl
mov
dec
push
test
in
sbb
jo
out
inc
mov
fiaddl
cmc
rcll
xor
sbb
pusha
insl
in
add
pop
sahf
push
les
sahf
push
jno
jmp
jge
fcomip
movsl
sbb
repz
in
xor
xchg
cmp
test
fstpl
adc
lret
loope
popa
aaa
dec
inc
inc
jns
stos
mov
cmp
pop
cmpb
sub
sbb
push
jl
lods
cld
lcall
mov
pop
xlat
icebp
sub
jnp
iret
push
mov
jp
jmp
scas
leave
in
fiaddl
push
xor
cmp
push
and
add
stos
call
test
mov
in
jle
incb
stc
push
xor
les
mov
data16
out
ljmp
loope
jmp
test
push
mov
daa
imul
pop
adc
sbb
jmp
mov
dec
ds
or
cld
add
fisubs
push
lock
test
int
mov
scas
das
ret
add
jbe
xlat
jp
loop
ficoml
jne
jle
push
adc
mov
jecxz
es
dec
dec
cmp
hlt
or
js
and
inc
test
adc
xchg
push
xchg
fisttpl
xchg
dec
les
mov
shll
or
pop
jge
pop
repz
push
aam
jno
mov
adc
push
jne
fwait
push
sub
lods
into
orl
sub
xor
pop
or
in
rcll
ljmp
or
push
ds
dec
jmp
push
cmpsl
push
or
fwait
dec
cwtl
lock
aas
aaa
sbb
adc
dec
sbb
xor
rolb
pushf
fisttps
mov
sub
mov
xor
std
mov
jno
dec
cmp
or
aad
jg
das
xchg
fucomp
xor
dec
cmc
repz
hlt
cmp
mov
clc
scas
and
stos
cmp
in
lcall
and
sbb
cmp
lcall
mov
mov
pop
hlt
add
popl
or
adcb
push
mov
popa
test
or
push
dec
imul
mov
or
mov
shrl
mov
mov
and
push
lahf
gs
cltd
lock
jns
mov
mov
les
push
out
cmp
jge
pop
and
stos
loope
ret
ret
bnd
mov
adc
dec
sbb
stc
pop
pop
std
sub
stos
loop
sub
jo
xchg
fwait
lods
into
fwait
xchg
push
ljmp
pop
daa
dec
pop
xchg
int
xlat
jb
cmpl
xor
std
mov
jmp
cmp
adc
out
jmp
out
imul
pop
addb
hlt
fadds
out
jge
imul
je
fs
movsl
pusha
push
sub
cmp
loop
inc
test
inc
mov
daa
cmpsl
lret
lret
int3
mov
jb
bound
jge
xchg
sub
sti
xor
clc
push
jb
push
ret
mov
and
mov
dec
mov
dec
es
leave
jmp
mov
jno
lret
inc
mov
jmp
pop
imul
sahf
loopne
out
enter
rcrl
imul
ljmp
cmp
loopne
jl
push
pop
or
sbbb
mov
xor
or
stc
xor
cwtl
fidivs
dec
hlt
incb
sbb
lret
test
jnp
shrb
adcb
push
sahf
sahf
adc
sub
xor
adc
mov
mul
inc
inc
inc
mov
arpl
jb
repnz
pop
push
add
leave
push
cmp
stc
sbb
shrl
sub
mov
pop
mov
test
les
pop
push
in
mov
adc
fsubrs
inc
gs
cmpsl
and
ss
sub
mov
xlat
icebp
dec
loopne
mov
push
fwait
imul
or
dec
leave
pop
in
jge
test
jnp
lcall
pop
fs
xor
cmpsl
in
mov
std
das
addr16
loopne
push
push
push
xchg
or
push
xlat
ds
fdivrl
out
xor
aas
mov
movsl
cmp
daa
add
fcoml
daa
ficomps
dec
xchg
sbb
dec
jne
test
add
xchg
xlat
or
sub
adc
lods
lock
pop
fldcw
sbb
pop
push
jbe
fldcw
mov
aad
pop
push
and
mov
mov
les
fisubl
dec
in
js
cmp
dec
sbb
xchg
or
sarb
js
incl
rorl
mov
je
pop
and
pop
stos
ja
loopne
fidivrl
push
add
xchg
shrb
add
mov
sbb
pop
or
cmp
cld
push
insl
loopne
jbe
cld
pop
shll
lods
mov
aas
cmp
mov
frstor
jp
movsb
shl
or
shrl
dec
inc
xchg
cmpsl
sub
mov
mov
and
mov
mov
scas
xchg
add
pop
sbb
js
inc
popa
push
ds
in
xchg
mov
andl
mov
add
movsb
in
push
xor
mov
cmpsl
in
dec
in
sub
dec
push
or
sub
and
out
insl
ljmp
pop
sub
daa
xchg
fs
add
loop
roll
ja
xchg
fisubs
sbb
ljmp
call
pop
or
jg
pop
add
jl
jmp
icebp
pop
or
test
lock
enter
jmp
inc
mov
ss
jp
adc
push
and
negl
or
dec
cwtl
repz
dec
hlt
popa
stc
loop
add
fidivrl
xchg
rolb
int
gs
ljmp
push
jmp
sbb
mov
fs
inc
mov
gs
arpl
imul
or
stc
ret
adc
daa
ds
jge
jp
sti
lds
sbbb
sbb
imul
pop
orb
push
fdivrs
in
mov
rcrl
loop
xor
movsb
sub
or
packuswb
xor
xchg
xor
sub
or
and
jb
jo
jle
push
xchg
jno
push
icebp
js
cmc
into
xchg
ds
not
les
sub
ret
xchg
pop
test
out
inc
pop
ss
push
or
pusha
add
and
push
push
xchg
repnz
sbb
stc
movsl
inc
xchg
add
lods
mov
arpl
not
and
sbb
pop
jge
pop
lret
sbb
cli
movsb
pusha
pop
aas
das
lods
push
roll
mov
hlt
test
lret
mov
dec
ret
test
xchg
and
push
int3
xchg
and
lods
push
mov
hlt
inc
sub
dec
scas
pushf
repz
int3
insb
dec
push
js
in
scas
dec
shll
fdiv
add
cmc
dec
mov
ss
mov
ud0
fildll
das
fnstcw
add
shl
mov
adc
aas
je
adc
jb
sbb
or
xchg
xor
sub
add
dec
das
dec
push
mov
mov
cltd
fs
es
outsb
push
inc
inc
and
inc
imul
aas
out
inc
add
pop
push
xchg
add
mov
das
pop
jl
or
sbb
ret
popf
sbb
dec
ret
mov
mov
jmp
jmp
push
mov
bnd
add
cmpsb
push
pop
rcrb
in
int
popa
pop
lea
mov
dec
je
sbb
pop
in
out
xor
popf
rorb
adc
pop
cmp
loope
loope
jmp
pop
pop
push
cmp
fiaddl
sub
cld
push
test
pop
inc
popa
test
or
push
inc
cmp
adc
sub
mov
or
out
call
fstpt
cmova
out
outsl
xor
mov
std
cmp
sti
inc
cmp
mov
insb
negl
nop
pop
int
xchg
enter
lock
rcll
and
mov
mov
push
loopne
add
or
addl
mov
gs
ljmp
fadd
movsb
and
mov
sbbl
mov
ljmp
repz
or
aam
es
hlt
out
popa
lods
jbe
insl
mov
leave
imul
movl
stos
shlb
push
push
sbb
ljmp
mov
je
mov
outsb
dec
jle
lcall
scas
push
cltd
les
pop
in
popa
mov
sub
pusha
fdivrl
lds
pop
loopne
insl
sbb
loopne
jl
fcmovbe
scas
mov
out
lret
pop
sub
mov
pusha
or
jl
adc
or
and
add
lahf
inc
push
pop
insl
fidivrs
xchg
nop
sbb
mov
mov
push
push
mov
mov
jns
or
inc
movsl
push
sub
not
rclb
add
push
and
push
cwtl
in
mov
mov
in
je
cmp
inc
outsb
mov
addl
es
jecxz
lock
stos
mov
push
loopne
das
cmp
dec
sbb
outsb
call
mov
or
mov
pop
mov
mov
je
shrb
mov
imul
pop
cli
cmp
inc
xor
sbb
cltd
mov
xchg
mov
sbb
sbb
popf
or
inc
scas
popa
and
cmp
cmp
dec
std
inc
fs
mov
jp
notl
sahf
imul
mov
inc
pop
jae
sti
xchg
stos
add
lret
jb
xor
fwait
rcll
pop
jns
mov
pop
sub
loop
cltd
push
push
out
adc
in
cmp
in
pmullw
mov
outsb
push
leave
outsl
mov
xor
push
jp
sbb
adc
scas
cmp
sbb
lods
mov
movsl
pop
nop
pop
mulps
movsl
repz
xor
adc
hlt
xor
aam
dec
mov
mov
mov
and
test
mov
test
xlat
sub
xchg
add
loopne
imul
imul
femms
lea
scas
or
sub
pop
sbb
addr16
test
rorb
out
xor
jo
aas
js
pop
stos
mov
adc
mov
jnp
fs
call
fldt
lods
mov
xchg
jo
test
pop
popa
mov
push
sahf
dec
lret
js
cmp
sarb
xor
jl
adc
scas
cltd
mov
dec
mov
std
pop
arpl
mov
mov
ja
cmp
cmpsl
bound
mov
or
pushf
jl
xlat
inc
subl
mov
dec
pushf
lods
xchg
push
sub
push
cmp
push
or
test
mov
pop
jge
fisubs
xorl
sub
ficompl
arpl
stos
cmp
out
int
fcomi
in
pop
pop
dec
imul
xchg
out
lods
sbb
pop
and
inc
mov
fidivs
jmp
fcomps
or
cltd
sub
jecxz
jns
stos
add
dec
dec
cmc
adc
add
mov
into
jae
cmpsl
mov
mov
jno
push
sub
mov
enter
sarb
stc
arpl
lcall
pop
sahf
push
loop
mov
push
cwtl
push
cs
dec
cmc
cmp
jmp
fwait
cmpsb
jae
leave
cli
mov
cld
stos
pushf
dec
rcll
xor
cmp
cmp
rcrb
popf
xchg
mov
and
ja
sub
ljmp
add
push
std
mov
in
mov
hlt
movsl
lds
lods
cmovp
jbe
push
cmp
in
mov
movsb
and
pop
pop
jns
xor
pop
adc
inc
jo
out
lret
xchg
mov
dec
or
notl
leave
xchg
sahf
push
xchg
add
pop
inc
sbb
xchg
lahf
dec
push
mov
loope
jb
pop
inc
push
test
mov
inc
push
mov
lods
bndldx
cmp
pushf
gs
sub
and
dec
out
xor
mov
psubsw
hlt
outsb
dec
pop
add
xor
dec
in
xor
ljmp
mov
add
stos
mov
fldl
ds
leave
stos
mov
or
jl
pop
xor
scas
iret
stos
aas
lahf
loop
lea
mov
fldenv
fs
mov
add
rcll
and
push
jbe
push
and
add
pop
lret
es
int3
adc
daa
mov
lock
aam
pop
sahf
add
add
insb
movsb
mov
std
sti
adc
cld
pextrw
sub
dec
loop
xchg
add
fimull
popf
jae
inc
mov
sbb
jnp
test
sub
xchg
adc
gs
dec
ljmp
or
push
mov
in
clc
mov
mov
or
fcomps
jmp
and
or
push
sbb
push
jmp
test
and
into
rcl
pop
jne
adc
add
cli
dec
xor
cltd
sbb
cmpsl
inc
int3
jmp
adc
lcall
xchg
xchg
sub
or
inc
jl
cmovb
fildll
inc
sbb
repz
xlat
push
add
mov
mov
mov
in
ret
sub
test
add
clc
xor
xlat
mov
adc
cmp
fucomi
sbb
jecxz
leave
jo
cmp
mov
add
push
pop
xchg
xchg
leave
mov
mov
jg
xchg
rcrb
inc
mov
sbb
cmp
push
mov
insb
push
pop
fstps
aam
sbb
push
inc
mov
cmp
test
and
mov
pop
imul
ss
add
mov
leave
popa
add
pop
xchg
push
sbb
push
dec
xor
cmpsl
jo
dec
rorb
inc
xor
xchg
leave
test
xchg
xchg
scas
mov
adc
rcrb
or
mov
push
add
mov
push
xor
jge
sub
lock
popf
pop
aaa
jle
les
sub
lret
inc
insb
aaa
lea
sub
mov
shlb
cwtl
repnz
cmc
cli
mov
notb
fsubrp
mov
daa
in
aas
xchg
leave
mov
xor
fmuls
cwtl
sub
jp
iret
sub
fwait
sar
gs
popf
jno
jb
in
or
sahf
insl
xchg
jb
jns
aaa
fsts
xchg
js
or
or
dec
daa
test
xor
mov
fbld
fidivl
jne
shlb
movsl
xor
imul
adc
pusha
aas
sub
lock
jnp
adc
inc
sti
lods
push
pop
mov
iret
cli
bound
outsb
lret
pop
inc
dec
and
and
adc
loop
stos
fdivr
pop
mov
insb
add
mov
js
stos
lea
xor
jmp
jo
ja
daa
loope
pop
mov
popf
out
std
js
xchg
in
out
ret
pusha
inc
jo
lret
adc
jmp
mov
push
clc
cli
jg
xchg
sub
mov
into
orb
in
xchg
sbb
test
mov
inc
mov
add
enter
inc
inc
xchg
push
lods
sar
mov
test
and
xor
fsubs
pop
lods
loopne
jl
es
sbbb
loop
jmp
jnp
subl
ret
outsl
jp
in
lret
movsb
xchg
add
orb
movb
movsl
cwtl
push
cmc
pop
push
cmc
addr16
xchg
cmpsl
mov
out
sub
sub
jbe
push
adc
fistpl
add
test
dec
mov
dec
adc
push
lods
pop
adc
mov
push
out
pop
xchg
mov
mov
adc
dec
inc
xlat
iret
and
xchg
inc
imulb
push
adc
fnsave
bnd
xchg
or
sub
pushf
lods
and
addl
ljmp
adc
addr16
fistpl
pusha
je
mov
inc
jmp
jns
fldcw
repnz
jbe
xchg
bound
ja
pop
dec
push
ja
pop
movsb
mov
add
push
scas
dec
ja
inc
sarl
adcl
dec
clc
popw
movsl
jnp
test
sbb
pop
push
mov
push
in
jmp
into
int3
popf
dec
xchg
call
pusha
mov
or
dec
ret
gs
popa
push
inc
sub
fnstsw
pop
cs
cli
shl
in
cmp
je
jmp
mov
xor
lods
test
cmc
and
mov
daa
shl
mov
push
and
and
aas
aam
and
xchg
sbb
pop
dec
push
mov
or
pusha
push
and
pusha
enter
sbb
arpl
lea
pop
scas
pop
lods
ror
jno
lcall
int
cmpsb
in
dec
or
lods
insb
xor
scas
xchg
mov
nop
mov
mov
jecxz
arpl
clc
jmp
pop
xchg
addb
sbb
jb
fdivs
inc
push
xchg
cwtl
or
inc
mov
pop
in
push
xor
push
push
pop
into
pusha
xchg
xor
jl
mov
in
lcall
divl
xchg
xchg
loop
push
loopne
std
cwtl
dec
dec
push
sub
add
xchg
dec
andl
inc
xor
insl
push
sbb
mov
inc
fadds
fdiv
cmpl
xor
ds
jbe
jnp
dec
stos
sub
jb
push
mov
iret
pop
mov
or
jo
inc
mov
sbb
mov
sti
xchg
popf
nop
pop
mov
ret
cs
push
xor
inc
inc
push
movsb
sarb
cmpb
out
pop
lods
dec
and
sbb
lret
cmp
add
adc
sbb
repnz
popa
mov
mov
push
inc
adc
es
adc
dec
mov
pop
cmpsl
aaa
pop
sub
repnz
pop
loope
xor
inc
mov
xorb
lea
es
jl
mov
push
xchg
mov
test
fisubrs
out
xchg
inc
sub
ljmp
lods
inc
mov
aas
push
cmp
outsl
mov
xor
mov
dec
lcall
or
fadds
lcall
push
cmp
mov
push
lcall
adc
movsb
mov
xor
cmp
dec
and
mov
and
dec
or
jl
inc
int3
ljmp
mov
sbbl
imul
aad
nop
stos
aad
pop
mov
shr
test
xchg
aad
sub
jnp
test
in
cld
in
mov
sbb
sbb
push
mov
fmull
movsl
sub
outsl
out
push
adc
test
call
cwtl
dec
fisttps
xchg
insl
ja
js
fsubr
jbe
testl
std
sub
fmuls
inc
iret
fstps
add
pushf
adc
leave
xor
shrb
and
les
fcoml
dec
cmp
rolb
pop
jp
insl
push
test
mov
xor
mov
les
add
mov
jae
pop
ficoml
mov
sub
nop
aaa
ds
imul
popa
add
xchg
fnsave
pop
rcrb
loop
pushf
lods
xchg
dec
pushf
data16
mov
sbb
repz
test
cwtl
jnp
mov
cmp
lea
mov
sub
or
clc
test
cmp
ficompl
pop
xor
add
cmpsb
mov
xchg
sbb
cli
inc
or
sar
pop
jbe
leave
cld
jle
ret
ret
movsl
inc
enter
xor
mov
imull
int3
mov
or
add
dec
icebp
lret
out
mov
int
cmpb
and
pop
nop
pop
mov
rcll
fistpll
int
mov
add
jle
mov
push
aaa
call
cs
sbb
cld
push
xor
fistl
int3
out
or
inc
xlat
mov
mov
xor
call
jge
jp
cmc
mov
fldpi
in
in
pop
sbb
sti
dec
pop
pop
sbb
mov
js
je
jmp
cmp
imul
loope
xchg
bound
rcll
or
int3
stc
jae
mov
dec
imul
cmp
frstor
add
sbb
add
ret
pusha
pop
adc
pop
int3
imul
xchg
lock
or
cmpsl
js
stos
mov
xor
ret
mov
add
dec
stc
dec
ss
mov
jbe
mov
jae
mov
jbe
nop
out
push
loop
cmp
adc
loopne
dec
and
inc
fdiv
std
adc
hlt
and
and
jecxz
mov
aad
test
push
in
xorb
ja
xor
cmpb
sbb
push
push
mov
les
xchg
lods
mov
scas
mov
push
mov
xchg
sti
fcoms
lods
ret
imull
jle,pn
xchg
int
mov
add
cmpsl
ljmp
jb
pop
call
mov
cmp
add
sbb
test
testl
cltd
cltd
rcrb
pop
stc
adc
shrl
add
arpl
cs
pop
mov
pop
fcoml
aad
adc
test
movsb
ficomps
fs
jge
add
xor
or
stos
pop
pop
ljmp
sbb
sub
insb
in
pop
repz
gs
subl
dec
in
jae
je
hlt
test
lods
adc
smsw
cmp
cmpsw
mov
jg
push
imul
dec
push
xor
in
inc
mov
sti
ret
es
rclb
loope
ret
mov
cmp
lds
jnp
adc
pop
andl
jbe
jns
imul
imul
paddusb
les
fwait
aaa
push
mov
jle
xchg
stos
add
addr16
lahf
dec
scas
jno
lahf
sti
push
xchg
addl
mov
cmp
adc
fwait
pop
loopne
sub
xchg
movsb
lret
loopne
out
shll
ret
popf
fldt
sub
mov
mov
jle
jl
pop
sti
in
lret
fs
test
add
iret
std
ret
inc
cltd
mov
xchg
movsb
mov
test
add
sbb
mov
call
jg
mov
fwait
gs
cmc
iret
movsb
mov
push
add
repz
and
pop
fldcw
ret
shr
lock
aad
rcrl
mov
jbe
and
jecxz
mov
pop
add
sbb
xchg
mov
cmp
mov
stos
and
mov
sbb
or
mov
js
outsl
cli
mull
popf
pop
test
jmp
mov
sarb
and
fiaddl
enter
mov
push
loopne
loopne
cld
subb
popa
pop
push
jge
sti
not
mov
adc
enter
xor
lds
hlt
in
popl
and
mov
lods
test
jmp
mov
mov
bound
or
pop
movsl
mov
cmpsb
enter
out
and
or
in
lock
push
sub
jb
sbb
ja
jge
adc
mov
mov
cmpsb
push
out
addb
add
xchg
in
jmp
iret
and
sub
rcr
out
adc
cmp
cmp
xor
outsb
jns
repnz
ds
dec
ret
mov
stos
leave
sub
jmp
popa
lods
je
hlt
pop
and
in
addb
ret
insl
outsb
inc
ljmp
stos
or
push
inc
cmp
mov
pop
movsb
sub
xor
push
mov
xchg
fnstcw
dec
cwtl
repz
jnp
inc
outsb
mul
cmp
xchg
cmp
outsb
mov
test
rcrb
xor
xor
popf
dec
clc
in
and
divb
int
test
fisubl
xor
ja
movsb
lcall
in
push
mov
pop
mov
fsubs
cli
call
cmpsb
pop
push
iret
fs
inc
stc
jmp
mov
loope
aad
jp
push
or
cmp
aad
push
pop
out
add
push
pushf
fwait
cmpsb
jecxz
jo
daa
cmp
push
adc
stc
dec
and
ret
xchg
push
mov
and
cmpsl
xchg
scas
add
mov
dec
jle
push
stos
pop
cmpsb
daa
mov
call
les
mov
in
call
movsl
fsubrs
fidivrl
pop
out
sbb
mov
xchg
lods
leave
jo
subl
inc
dec
stos
push
xchg
and
pop
cmp
mulb
cmp
cwtl
mov
add
cs
pop
pop
xor
outsl
push
mov
bnd
push
pop
mov
les
mov
and
ret
test
push
push
out
movsl
cmp
push
cmpsb
inc
test
stc
jno
dec
cmpsl
inc
xor
xchg
ror
movsb
pop
lods
xorb
mov
cmp
fimuls
clc
int
shl
xor
cld
mov
add
inc
lds
je
jl
imul
sbbl
dec
adc
out
rcll
adc
xchg
jno
add
mov
sub
rcrb
popa
fwait
rclb
orl
cmp
test
push
mov
xor
negb
popa
push
ds
cld
movsl
or
les
cltd
pop
and
jnp
jecxz
pop
fdivs
ljmp
arpl
xor
into
stos
mov
lea
mov
test
pop
lahf
int3
out
mov
lds
sbb
xchg
imul
fs
pop
add
adc
xchg
xchg
pop
push
test
es
bound
mov
cwtl
add
lods
adc
loope
push
inc
add
fidivrl
ja
push
xchg
pop
stos
dec
fucomi
mov
adc
mov
mov
adc
shl
add
in
cmpsl
ss
xor
out
test
sti
stos
ds
xlat
add
fistps
lret
push
pop
les
add
sbb
dec
xor
pop
pop
sbb
insb
xor
xor
mov
xor
ret
ret
jb
add
mov
adc
or
mov
in
mov
add
hlt
cld
pop
inc
gs
test
xchg
inc
mov
cmp
jbe
mov
add
sub
mov
sbb
adc
mov
ds
mull
mov
add
test
into
pop
inc
cmp
add
xchg
cmp
loopne
mov
jl
xchg
nop
mov
jg
leave
stos
cmp
mov
in
add
cmp
push
sbb
js
popa
push
push
iret
sub
outsl
jg
and
ljmp
cmp
push
icebp
int3
pop
int
out
in
mov
repnz
mov
fstp
push
push
das
mov
fisubs
faddl
mov
xlat
outsb
cwtl
pop
cmp
xor
nop
icebp
cmpsl
xor
out
and
jne
dec
pop
cs
repnz
sti
subb
or
mov
nop
dec
and
out
push
lret
xchg
imul
cmpsl
stc
and
pop
fmull
cmp
and
and
enter
addr16
inc
mov
sbb
mov
dec
lahf
ret
leave
orl
popa
shrl
ljmp
dec
loopne
sbb
ret
jae
lret
inc
stos
lret
lcall
pop
mov
aaa
inc
das
pop
mov
enter
fwait
mov
test
enter
pushf
add
xor
pop
cwtl
sub
cld
and
mov
push
and
mov
add
xchg
es
orl
xchg
mov
adc
push
sub
into
out
mov
xchg
popf
orb
sahf
pushf
pop
adc
aam
cmp
pop
sbb
push
dec
sbb
call
dec
rcll
in
mov
pop
nop
enter
in
stos
jo
jno
jo
sub
jae
das
hlt
pop
xchg
push
mov
xlat
aaa
fdivrl
pop
adc
lret
in
push
xchg
test
and
push
bound
jno
mov
decb
mov
mov
loop
out
xor
push
or
xchg
pushf
jne
dec
xor
es
cmpsl
cltd
stos
in
mov
jnp
and
lock
les
push
xchg
cmp
psrlq
add
test
aaa
xchg
sub
je
shrb
fs
shr
cmp
cltd
fbld
sbb
insb
fwait
dec
dec
xor
lret
inc
in
and
mov
push
sti
xchg
movsl
cmpb
in
ret
or
js
movsb
int
into
loop
or
sbb
xor
int3
mov
sbb
imul
xchg
cmpb
cmp
and
rcrl
into
fs
mov
mov
and
adc
cmpsb
or
call
dec
cmovo
mov
test
or
out
push
xchg
jae
lahf
scas
outsb
filds
jbe
ja
dec
xchg
lock
push
aam
clc
add
add
or
jo
std
sbb
ja
les
out
xchg
jg
lcall
repnz
loop
int
in
mov
push
orb
xchg
out
sub
hlt
cmc
gs
mov
mov
push
arpl
stos
out
lods
movsl
loope
lret
mov
ret
xchg
lock
cld
cwtl
pop
mov
mov
inc
aam
cmp
mov
fwait
cmp
cmc
jb
fdivs
xchg
js
data16
fsubl
push
sbb
scas
pop
je
mov
sahf
sbb
pop
ficoms
jge
insb
xor
bound
jecxz
scas
mov
call
push
pop
pop
jb
adc
dec
mov
fcmovnbe
out
outsb
mov
sbb
or
mov
testb
cld
xchg
outsl
mov
gs
adc
int3
imul
in
adc
out
push
push
hlt
xorl
xchg
mov
loop
or
aaa
mov
cmpsb
mov
mov
and
test
push
xchg
or
leave
jne
pop
ljmp
fildll
ljmp
popa
jmp
push
call
push
fistpll
pop
ss
lds
pushf
and
push
imul
in
inc
and
inc
mov
push
pop
pop
stc
mov
data16
jnp
and
dec
adc
cmpsb
inc
push
jo
ret
filds
sahf
cmp
xor
pop
jmp
add
jmp
stc
vzeroall
pop
inc
emms
iret
add
flds
sarl
out
jne
mov
xchg
dec
mov
loope
test
mov
adc
repnz
mov
lods
cmp
jge
in
pusha
push
jae
push
xchg
adc
out
test
xor
ss
cmp
xor
cmp
mov
test
mov
js
xor
adc
in
adc
sahf
xchg
sub
pop
mov
es
cmp
pop
fistpll
adc
pop
add
sti
lcall
add
fdivrl
std
sbb
dec
add
xchg
jo
loope
pop
sbbl
push
push
sub
jge
add
sub
inc
inc
cld
inc
or
mov
js
shl
hlt
aam
sbb
xlat
loop
jg
inc
inc
or
dec
inc
lds
js
lret
xor
ret
int
std
mov
outsb
dec
out
fwait
sti
std
rorl
sti
jae
cltd
imul
push
sbb
int
lds
cmpsl
loopne
inc
test
sbb
std
mov
in
xchg
stos
mov
cmp
imull
ficoml
sub
test
imul
aas
daa
idiv
xchg
adc
jnp
es
sbb
mov
and
jl
jge
dec
mov
cmpsl
sbb
stc
mov
addr16
jmp
daa
jge
pop
adc
stos
aaa
out
insb
cld
lahf
adc
mov
pop
sub
sub
nop
cld
inc
jmp
fisttpll
mov
xchg
jge
dec
jnp
sub
aaa
cwtl
fadds
push
lahf
xchg
out
das
test
cld
push
mov
addr16
andb
xchg
mov
ss
pushf
or
cmpsl
loop
addr16
std
or
jg
jmp
leave
xchg
addr16
mov
add
icebp
mov
bound
sub
xchg
std
fdivrs
dec
push
pop
mov
out
rcrl
adc
mov
cmp
push
movsl
fadds
inc
mov
pop
push
mov
faddl
iretw
cmp
stos
inc
or
dec
mov
icebp
lods
mov
mov
push
out
fisubl
and
lcall
mov
jp
mov
dec
push
lret
cmp
scas
sahf
rcr
rcrl
mov
mov
leave
sub
ret
dec
sahf
pop
daa
push
fdivs
in
daa
xchg
fdivs
sub
lahf
cmp
lea
sahf
lret
cld
push
ret
jle
int
shlb
sbb
ret
mov
gs
jns
in
sub
sub
vmulsd
fmuls
xor
xor
jge
dec
add
ret
clc
or
jmp
pusha
pop
imull
shrl
jb
mov
out
jno
cmp
lea
outsb
loopne
addr16
xchg
dec
mov
or
stos
add
enter
inc
repz
mov
and
repz
stc
push
arpl
mov
xlat
inc
aaa
pop
and
fsubrl
xor
clc
mov
jnp
mov
int3
test
pushf
outsb
aad
dec
dec
mov
inc
push
sbbl
push
in
sbb
mov
or
jo
pop
mov
xchg
divl
cmp
cmp
sub
sti
icebp
mov
hlt
mov
mov
cmp
mov
push
out
fstpl
add
sbb
fwait
test
mov
jge
xor
cmp
pop
add
arpl
shlb
imul
add
fnstsw
jecxz
out
out
mov
sbb
or
aad
mov
hlt
out
andl
daa
mov
int3
jl
ljmp
push
mov
push
iret
dec
shll
outsb
push
add
bndldx
mov
mov
loopne
scas
mov
jecxz
clc
xor
add
push
push
stc
pop
sub
and
cwtl
or
sbb
call
jb
jle
mov
cli
pop
cmpsb
xor
push
xchg
repz
mov
loopne
mov
mov
sub
mov
dec
outsb
ret
ret
lcall
fistpll
ficomps
push
insb
jg
scas
lods
lret
adc
xchg
es
jnp
push
and
pop
enter
or
sti
mov
add
adc
nop
stc
inc
jge
or
pop
or
idiv
or
test
or
ret
sbb
xor
adc
xchg
xchg
mov
push
mov
adc
pop
repz
dec
dec
movb
movb
xchg
fistpl
push
jb
daa
sub
idiv
inc
rolb
pavgb
and
jle
inc
xor
dec
inc
jno
mov
mov
push
xchg
inc
mov
jge
xchg
add
movsl
adc
lahf
ficompl
xchg
or
rclb
add
loopne
nop
iret
push
pop
je
test
mov
in
int
pop
loopne
add
and
ss
lods
cmp
movsl
rcl
mov
xchg
out
mov
ds
jb
adc
jl
leave
cmp
adc
into
lahf
jl
lock
push
fucomi
inc
sbb
ret
xchg
out
incl
mov
push
clc
test
test
xchg
push
pop
push
or
and
mov
lods
call
bound
int
mov
lds
add
mov
ret
jns
cmp
js
xchg
scas
sti
mov
hlt
fldcw
jne
xchg
sub
andb
imul
loope
push
xchg
imul
cld
jle
mov
hlt
jb
jecxz
mov
dec
shr
rcll
clc
mov
lods
das
lods
sbb
aaa
inc
ret
dec
mov
push
imul
filds
call
mov
inc
in
adc
adc
and
and
inc
cmc
mulps
jno
mov
fisttpl
dec
xor
or
jg
sahf
std
mov
adc
shr
leave
sbb
in
js
inc
push
sbb
ss
adc
loopne
mov
sub
or
and
loopne
pop
cmpsb
shll
std
iret
push
add
dec
movsb
out
cltd
push
jecxz
pop
and
adcb
insl
push
cli
or
dec
test
xor
mov
lods
add
idivb
cwtl
add
xor
ret
div
jbe
sub
and
mov
mov
shlb
and
std
sub
push
pop
sbbl
sbb
fisubrs
or
sbb
add
xor
mov
outsb
scas
in
or
lods
add
fbstp
into
stc
aaa
mov
addb
xchg
notb
inc
lret
push
xchg
inc
adc
rcll
push
jo
nop
insl
add
jl
dec
push
xor
test
out
sbb
jnp
add
push
test
pusha
lea
inc
cmp
cli
jbe
test
push
sar
fcompl
adc
std
jecxz
xchg
lods
pop
les
jg
xchg
adc
xor
push
jle
push
sbb
inc
dec
in
xchg
test
add
xor
notl
les
lock
sbb
in
pop
nop
iret
sbb
mov
in
mov
dec
mov
lods
mov
hlt
pushf
dec
add
pop
inc
mov
mov
stc
pop
push
jb
insl
push
sbb
push
fs
repnz
sub
adc
popf
xlat
sahf
jmp
push
insl
mov
test
dec
pop
xchg
sti
inc
in
gs
cmp
hlt
int3
xor
clc
and
mov
cltd
fdivr
mov
cld
dec
inc
mov
adc
xchg
imul
lods
or
fildl
push
pop
jns
xchg
mov
or
mov
inc
add
loop
lret
roll
leave
lea
subl
fstpt
xchg
pop
rclb
imul
insl
stc
jno
mov
out
add
ja
jle
mov
mov
push
pop
jne
cltd
shlb
adc
add
inc
jbe
xchg
push
dec
sub
mov
dec
jl
out
repnz
jg
fldcw
pop
or
lods
adc
or
mov
adc
jno
mov
inc
push
inc
push
fcompl
pop
push
push
mov
mov
sbbl
lock
add
test
add
pop
dec
repz
icebp
push
mov
or
xlat
test
in
sub
dec
lcall
mov
add
push
jecxz
jno
mov
lret
loop
pop
adc
or
in
mov
mov
or
mov
lds
jmp
call
add
rcr
imul
sbb
iret
mov
xchg
fbstp
push
je
lods
cmpl
jecxz
test
stc
push
aas
mov
inc
shll
ss
xchg
adc
int
popf
in
lret
lock
andl
stos
push
iret
xor
dec
sbb
push
fistpl
jge
xor
pop
mov
push
loopne
stos
jns
les
inc
ret
add
iret
xchg
shlb
pop
mov
mov
adc
add
mov
lods
push
aas
lret
ss
xchg
lea
jne
cmp
ds
mov
push
scas
sbbb
out
jecxz
cmp
shlb
cmp
nop
orl
lret
cltd
xchg
rcrl
mov
push
bswap
leave
mov
mov
add
push
sub
out
jbe
push
test
inc
sub
push
cli
cmp
scas
adc
jp
jg
cld
dec
outsb
sub
ds
and
mov
mov
dec
enter
fidivl
stos
sbb
leave
arpl
push
inc
call
adc
push
inc
jnp
out
ret
dec
rcl
ja
pop
enter
add
cmpsl
daa
arpl
fs
adc
mov
leave
add
mov
loopne
mov
push
inc
sahf
cmp
jae
popf
mov
xor
adc
cmc
adc
cmc
stos
sbb
jecxz
mov
add
dec
inc
xlat
dec
es
sahf
jmp
cmpsl
and
gs
cwtl
dec
jno
inc
aad
movsl
andl
jne
stos
pop
mov
and
mov
mov
xchg
imul
jae
inc
mov
fcomi
repnz
dec
lds
add
jno
mov
mov
out
sar
cmp
and
jp
jp
fcmovnb
dec
out
fs
pop
dec
dec
sbb
mov
mov
adc
add
js
mov
adc
add
jo
imull
ret
xor
jno
std
xor
xchg
in
aas
xchg
cmpsl
dec
insb
add
ret
mov
push
cli
pop
sbb
inc
cmp
lock
xor
push
aas
push
cmp
xlat
xchg
cs
adc
cmp
pop
or
jo
or
pop
int
ud0
outsl
inc
xor
xchg
add
int
adc
sub
in
lahf
ficoms
jmp
je
or
xor
mov
test
push
sub
out
lock
call
ror
aam
fldl
loop
aaa
je
addl
leave
inc
mov
pop
pop
xchg
test
push
push
scas
lea
ds
mov
pop
xor
xlat
inc
xor
cmp
repnz
or
mov
ret
lret
movsl
cwtl
out
rorl
push
out
xor
lcall
push
xchg
int
int
test
pop
xchg
andl
test
ss
in
pusha
pusha
xor
bound
call
and
aad
mov
jae
jbe
sahf
mov
mov
jp
repz
xor
and
add
push
or
test
pop
mov
rcr
scas
inc
push
mov
add
sub
sub
cltd
push
lahf
jno
cltd
pusha
test
dec
sbb
mov
imul
fisttpl
fists
cli
iret
sbb
lds
push
stos
dec
push
push
shll
pop
push
cmpsl
dec
xchg
outsb
mov
jecxz
cmp
clc
movsl
pushf
outsb
sub
push
jnp
lcall
setb
mov
inc
jge
xchg
pop
lods
xchg
and
sbb
adc
push
std
jbe
in
cmp
movsb
aam
pop
jecxz
test
inc
sti
inc
push
xor
shll
into
lret
push
test
outsl
xchg
cli
jns
test
in
test
test
shll
mov
jge
stc
shl
lods
ja
mov
xchg
addr16
cmp
inc
mov
xor
mov
mov
shrl
dec
xchg
pop
mov
pop
loopne
and
cs
sub
data16
dec
or
in
and
out
aas
and
aaa
inc
loop
inc
pop
pop
xor
mov
pop
roll
add
mov
orl
leave
push
scas
push
inc
lcall
lds
jl
xor
cltd
leave
in
std
push
xchg
sti
mov
call
fs
push
adc
aas
adc
jae
lods
push
sbb
xor
mov
jo
shl
data16
adc
cwtl
jbe
sbb
lea
aam
sub
pop
or
push
lods
lahf
jge
xchg
lret
pop
xchg
andl
mov
xchg
mov
inc
xor
push
push
cmpsb
sub
xor
bound
cmp
mov
mov
or
mov
dec
cli
addr16
push
and
in
mov
bound
sub
insl
orb
xchg
xchg
adc
inc
pop
cld
pusha
jg
insb
iret
test
adc
fdivrp
dec
mov
or
or
cmp
incl
inc
fwait
shrl
fmull
faddl
and
sbb
shll
jle
sbb
push
dec
jg
test
push
fstp
icebp
mov
lea
adc
aad
and
jmp
int
push
mov
mov
cwtl
lods
iret
clc
scas
js
pop
pcmpeqd
inc
cmp
adc
inc
adc
sbb
mov
mov
and
inc
jmp
adc
fs
pop
cltd
mov
mov
stc
enter
addr16
mov
mov
cmc
xchg
sarb
push
fbld
lds
or
aas
sbb
sbb
ficompl
mov
add
xchg
dec
dec
sub
das
pop
mov
sub
and
adc
aad
mov
nop
mov
rcrl
imul
scas
lahf
fs
repz
pop
inc
or
lea
mov
shl
jae
pop
imul
stos
dec
lock
cmpsl
sub
daa
sti
outsw
xor
lret
mov
pop
xor
sbb
adc
cmp
addr16
jle
std
xchg
mov
aas
notb
mov
jg
fidivrs
shll
rcrb
push
dec
inc
test
js
pushf
add
jo
mov
inc
cmp
fdivrl
add
inc
shll
mov
aam
loop
data16
es
mov
mov
call
dec
out
jl
iret
ljmp
cld
cmpsl
or
dec
mov
ret
jg
repnz
ret
rcl
rcl
pusha
nop
aas
addr16
test
shll
inc
mov
ljmp
jnp
pusha
aam
mov
pop
adc
ret
icebp
push
pop
mov
loopne
dec
inc
mov
movsb
push
sub
push
add
fs
sbb
sbbb
cmpsl
mov
lock
dec
sub
shr
push
test
insl
loopne
ja
mov
cmp
dec
jl
sbb
inc
or
test
fstpt
push
add
push
xor
push
es
add
and
pop
lcall
xor
add
sbb
lds
aam
in
mov
push
cmc
jge
mov
fucom
imul
fxch
cmp
pop
and
cmp
je
or
bound
aaa
lods
adc
fstpt
push
adcb
lds
stc
fcomps
pop
and
adc
mov
lods
xchg
inc
jb
rcrb
mov
movsb
xor
rorb
cwtl
pop
fiadds
in
pop
sti
push
mov
push
jb
add
out
sub
pop
add
jb
negb
xchg
test
or
in
inc
push
mov
and
lock
je
sbb
sti
ret
sub
pop
stc
sub
in
mov
push
aas
mov
sub
lret
jo
add
cmp
roll
mov
pop
in
movsb
sub
mov
mov
popa
repnz
filds
pop
in
lds
pop
mov
lahf
fstl
js
push
arpl
jmp
movsb
call
test
scas
xor
imul
add
jecxz
pop
inc
into
fists
dec
sahf
jmp
leave
add
icebp
ss
add
inc
movzwl
sub
cmpsl
jecxz
jb
dec
dec
pop
inc
leave
out
mov
xor
ss
cmpsl
inc
fisubrs
cmp
xorl
jecxz
or
and
mov
cmpsl
adc
sbb
in
xor
push
les
test
xchg
cmp
push
inc
fists
int
add
sub
pop
js
loope
pop
xchg
mov
mov
lods
mov
dec
mov
scas
jg
mov
scas
and
mov
out
cmpsl
sbb
inc
push
pop
movsl
sbb
cmp
mov
inc
adc
in
cmp
sbb
enter
lret
xor
frstor
cmp
mov
fnstsw
mov
mov
stos
scas
sbb
stc
repz
aaa
add
sub
fs
mov
ss
lods
sub
fwait
sti
scas
or
cli
pusha
sbb
repz
xchg
dec
dec
inc
fmull
lea
xchg
and
js
adc
jmp
sbb
outsb
into
pop
orl
fisttpl
inc
mov
push
mov
sahf
jmp
pop
pop
bound
cmp
xchg
or
mov
lahf
mov
inc
mov
mov
ret
lea
xchg
addl
jno
imul
inc
mov
push
cmpsb
mov
dec
mov
call
push
dec
gs
mov
shll
arpl
movsl
mov
ja
arpl
cmpl
jl
jo
and
inc
mov
das
sub
shlb
cmp
sbb
es
insb
sti
jb
in
movsb
and
iret
call
mov
insl
pop
inc
lahf
jne
mov
xchg
or
add
add
fidivl
mov
jbe
dec
cld
mov
fldenv
je
mov
fstpt
cmp
mov
mov
dec
sub
lahf
adc
jnp
pusha
push
add
jnp
xchg
out
pushf
cmp
ds
testb
scas
mov
jmp
repnz
push
xchg
push
imul
bound
jo
dec
cmp
sbb
test
pop
xor
clc
cwtl
ret
enter
fdiv
stos
or
sbb
sub
movsb
negb
movsl
rol
mov
into
jno
dec
hlt
mov
jo
aad
xchg
xor
push
sub
fisubs
ja
xor
movb
addr16
push
pop
mov
mov
sbb
aad
bound
xchg
push
std
adc
adc
fwait
mov
popa
inc
xchg
outsl
push
xchg
add
xchg
inc
cmp
jge
add
mov
dec
int
cmp
mov
sub
ret
ret
xor
mov
mov
mov
stc
sub
mov
jo
or
int
xor
shl
mov
sarl
in
dec
mov
pushf
in
fisubs
mov
push
sub
pop
fadd
and
in
mov
mov
shlb
lock
jge
fwait
stos
add
mov
adc
jne
push
and
in
sub
fwait
das
arpl
xor
loopne
pop
imul
jns
and
and
jne
maxps
mov
push
mov
les
fcomps
jno
lds
push
or
push
jnp
sbb
mov
sbb
add
jmp
sub
mov
fidivs
stos
dec
mov
adc
lods
sub
adc
adc
adc
push
xor
iret
cli
sbb
icebp
push
add
push
insb
loopne
ja
inc
int
cwtl
stos
mov
jecxz
sahf
imull
loope
movsb
xchg
push
push
inc
insl
xchg
movsl
jbe
lcall
insb
xchg
ret
ret
repnz
pop
scas
mov
add
lcall
adc
mov
lret
xchg
outsl
jmp
mov
ss
das
jae
jb
dec
pop
data16
push
mov
xor
enter
enter
repz
aam
xor
les
sub
push
lcall
jle
mov
add
pop
in
data16
push
sub
out
or
xor
or
dec
sub
ret
rcl
in
sti
mov
int
sahf
lock
bound
push
dec
adc
dec
cmp
cld
test
orb
xor
mov
sbb
jae
pop
test
sbb
loopne
inc
jb
jge
rol
sub
roll
mov
je
mov
pop
scas
mov
out
out
sbb
in
push
push
xchg
cmp
jbe
pushf
movsb
xor
mov
sub
ja
mov
mov
inc
pop
dec
fcomps
out
xlat
movsl
and
jl
push
movsl
push
jecxz
mov
mov
sbb
icebp
mov
lahf
clc
lcall
aaa
or
addr16
nop
mov
cmp
enter
gs
lret
xchg
cmp
mov
pop
mov
rorl
push
dec
enter
mov
jecxz
pop
pop
fists
fistpl
dec
movsl
popa
mull
popw
shl
xchg
push
and
add
repz
dec
f2xm1
lret
pop
pop
and
add
push
xchg
dec
fcom
jp
inc
xchg
and
into
std
sub
mov
sti
ret
dec
ljmp
and
jo
mov
bound
jb
addr16
aas
ret
adc
push
insl
and
xchg
nop
cmp
adc
adc
cwtl
pushf
dec
sub
cmp
in
xor
sbb
arpl
push
inc
popa
push
hlt
ja
cmpb
adc
pop
jae
xchg
cltd
in
filds
psrld
and
fldt
popf
icebp
out
ret
fstpl
xchg
jno
das
shrl
imul
mov
out
xor
rcl
ss
aad
push
pop
jl
in
mov
pop
bound
inc
jp
pop
add
mov
add
sarl
cwtl
scas
pop
pop
jns
mov
adcb
test
nop
loope
enter
and
pushf
cmp
fidivrl
inc
jecxz
add
js
xchg
xchg
or
daa
inc
lds
cli
add
aas
incb
xchg
jae
xor
fists
jl
fnstsw
mov
fisttpl
mov
inc
fsubrp
jmp
into
cmp
or
jbe
and
mov
insb
rcr
stc
outsb
loope
insb
pop
ret
jmp
mov
push
pop
jle
int3
push
cmpsl
es
rclb
sti
lret
leave
mov
out
arpl
sub
jae
cld
repz
nop
bound
pop
add
das
sbb
mov
mov
mov
jne
push
int
fwait
push
mov
movsl
aas
mul
cmp
into
or
int
fistpl
out
fs
push
pop
mov
shrb
pcmpgtb
addb
cmpsl
lea
xchg
or
ret
popl
pop
dec
jns
stos
mov
rorb
outsl
int3
in
ret
rcrl
xchg
and
data16
stos
das
inc
imul
mov
push
lcall
cli
pop
or
inc
or
pop
rcrb
es
push
jmp
or
inc
mov
push
xor
addr16
add
outsb
jnp
fldl
sub
push
mov
leave
jae
sbb
fisubrl
dec
iret
adcb
std
add
sahf
call
cld
xchg
xchg
mov
inc
add
arpl
mov
xor
push
movsb
jle
jg
add
inc
loope
pop
imul
mov
inc
outsl
int
imul
into
mov
push
mov
movsl
adc
and
adc
ss
adc
cmc
sub
jno
test
jge
mov
test
sub
mov
add
xor
add
xchg
mov
bound
addr16
sbb
inc
std
and
bound
test
push
out
lcall
outsl
and
or
idivb
sbb
cli
sbb
or
int
mov
loopne
fcmove
decb
das
in
jnp
test
jnp
add
shlb
arpl
cmp
or
aam
push
or
test
adc
cwtl
cli
push
bnd
xchg
in
push
jge
push
je
call
xchg
popf
cld
or
jae
sbb
imul
movsl
xchg
xor
mov
fists
fs
nop
xor
icebp
xor
nop
mov
push
montmul
push
mov
dec
movups
stc
fistps
xor
repz
push
clc
xchg
mov
pushl
push
cmp
or
jg
leave
lods
addr16
fwait
xchg
mov
repz
or
mov
lcall
xchg
cmp
xor
inc
out
jne
mov
fistpl
push
inc
push
push
dec
loope
sbb
lods
ljmp
xchg
adc
xchg
shrl
xchg
decl
sbb
pop
or
inc
sbb
sti
stos
inc
andl
jo
not
nop
cmpsl
mov
js
cmp
rorb
push
loope
mov
adc
mov
test
stc
push
rclb
pop
dec
cltd
and
addr16
pop
jbe
xor
pop
add
cmp
shrb
fisubrs
xchg
scas
in
push
xchg
cmpb
pop
sub
dec
movl
mov
xchg
adc
les
lock
insb
idivl
pushf
roll
adc
jo
ja
shll
adc
inc
jns
sti
lret
cmp
shrl
rorb
test
in
sub
in
mul
and
lock
sbb
outsb
xchg
arpl
dec
cmp
adc
outsb
loop
dec
inc
cmp
and
sahf
faddl
popf
jmp
add
push
in
in
push
lcall
inc
add
sbb
mov
imul
jo
addb
and
shl
or
out
insl
jnp
dec
mul
inc
cli
ljmp
loope
scas
push
push
mov
test
cmp
sarl
shrl
data16
fs
shll
mov
jmp
cli
stc
add
pusha
fwait
lret
mov
mov
cli
adc
adc
and
repz
dec
addr16
add
add
push
mov
jmp
jbe
xlat
addb
push
push
adc
adcl
mov
mov
lods
mov
scas
daa
mov
inc
push
mov
pop
xor
and
lds
push
and
push
mov
cmp
enter
jle
pop
lahf
sub
scas
jno
mov
dec
dec
pop
stos
adc
out
jae
mov
pop
dec
dec
aad
out
js
cwtl
push
sbb
xor
scas
das
fldcw
dec
cpuid
push
scas
mov
in
je
sbb
push
popf
pusha
and
xor
cld
adc
fistpl
lods
out
loope
addr16
add
jg
push
cwtl
inc
in
jg
xchg
mov
lock
sbb
adc
xchg
xchg
mov
mov
push
cmc
int
ficomps
pop
xchg
sub
xchg
mov
jo
cli
adc
cltd
pop
mov
xor
fdivl
cld
stos
fwait
jns
insl
mov
lds
or
inc
adc
cmpxchg8b
cmc
lds
insb
jbe
or
jnp
jb
xchg
fistl
push
pop
adc
stos
push
pusha
and
cmpb
add
push
dec
cmpl
stc
jae
fwait
jge
mov
cli
mov
sarl
push
xor
clc
jnp
push
mov
pop
jo
ficomps
xchg
jb
inc
in
adc
movsb
jae
or
aaa
popf
das
jg
jp
dec
inc
mov
mov
jne
adc
adc
and
into
lea
aad
mov
jns
xchg
add
inc
sbb
inc
dec
mov
push
std
inc
movsb
mov
sti
shlb
pop
call
jns
and
cmc
jecxz
dec
rcl
cmp
test
mov
mov
mov
lds
mov
mov
dec
xor
jae
in
movsl
add
mov
lret
add
imul
gs
inc
ficomps
and
movsb
push
add
nop
sub
jb
iret
sub
movsb
adc
jecxz
sub
push
icebp
fdivl
dec
pushf
ror
fs
jp
pusha
sbb
add
mov
out
lret
inc
insb
cmp
xchg
out
pop
scas
mov
inc
pop
pop
repz
insl
in
vmread
jno
jne
add
push
adc
sbb
inc
jmp
dec
push
add
int3
lds
sbb
inc
rcll
popf
mov
aad
ret
push
out
add
loope
push
cwtl
pop
lods
push
out
call
cli
xchg
lret
int
ds
xchg
dec
leave
inc
pushf
test
fwait
mov
add
mov
cltd
jbe
push
dec
roll
or
in
les
aam
lods
popf
sub
addr16
js
cltd
rorl
add
cmpsb
std
push
sbb
addb
ljmp
xchg
lret
out
fnstcw
pop
jge
mov
mov
or
or
clc
adc
mov
xchg
ret
push
xor
push
xor
testb
push
popf
loopne
or
pop
shrb
ret
ret
cld
push
xor
jo
movsb
call
loope
neg
sbb
mov
cltd
mov
rcll
and
sbb
pop
mov
cmp
out
daa
xor
arpl
inc
scas
xor
and
fmuls
mov
inc
dec
or
int3
dec
mov
test
cmpsl
ffreep
add
dec
movsl
fwait
sbbb
xchg
mov
xchg
les
int
sbb
mov
das
subl
push
testl
addb
pop
mov
andb
and
dec
xchg
sarl
je
push
mov
movsl
shlb
mov
loopne
cld
fildll
mov
cmp
int
cwtl
pop
xchg
pushf
xor
mov
les
mov
in
fs
mov
in
shlb
jbe
imulb
or
idivb
inc
movl
pop
push
stos
fisttpl
inc
xlat
push
jns
aaa
xor
jmp
push
pop
fisubrs
and
mov
mov
mov
cld
lret
dec
imul
in
push
inc
and
arpl
les
and
cltd
out
ret
jns
pop
repnz
ljmp
clc
push
testb
jmp
lods
add
imul
sub
call
pop
out
out
scas
or
xor
fstps
cmp
inc
jbe
les
movsl
xor
jge
jmp
sahf
jns
cmpsl
xchg
cmp
cmpsl
cmpsl
stos
int
push
stos
call
mov
add
push
mov
addr16
imul
or
dec
push
ja
sub
sbb
or
inc
cli
dec
adc
add
xchg
mov
stos
incl
jecxz
icebp
cld
cli
subb
mov
daa
sbb
push
mov
sahf
stc
dec
inc
lods
mov
out
mov
adc
cmpsl
or
test
aaa
jnp
call
int3
mov
push
dec
cmp
and
mov
mov
add
pop
jno
jge
cmpsl
adc
mov
pusha
sbb
jne
scas
rcrb
bound
adc
cmc
ret
repz
mov
std
cmpsb
outsl
push
bound
loopne
aaa
and
jle
push
or
jb
add
rcrb
lret
test
ret
repnz
mov
iret
mov
sahf
sti
imul
or
pusha
push
sub
inc
call
stc
jle
sub
pop
test
sub
lcall
aam
sbb
and
jno
clc
and
adc
xchg
or
cs
mov
loope
movq
xor
arpl
jo
inc
mov
fistps
dec
dec
sbb
add
cltd
pop
not
lea
mov
mov
mov
popf
inc
dec
mov
add
andl
lds
fmulp
add
dec
mov
jl
stc
movsb
cmp
fistps
push
xor
mov
mov
dec
fadd
out
adc
pop
jne
call
and
cmp
sahf
sar
mov
xor
sbbl
mov
pop
sbb
inc
sub
shl
mov
shlb
test
adc
or
pop
and
push
mov
pop
stos
fbstp
aad
add
inc
cmp
inc
push
in
scas
mov
in
sub
mov
mov
loope
in
inc
push
loopne
mov
aaa
repz
and
jle
inc
push
adcb
js
mov
ret
xchg
or
cltd
popa
sub
leave
insl
movsb
mov
imul
repnz
add
rcll
jno
je
mov
rorl
add
pop
psadbw
jg
sub
mov
fisubl
rcrb
jnp
ljmp
mov
xor
add
in
loopne
iret
jecxz
insb
cmp
test
jle
xchg
sub
push
in
pop
repz
xchg
sarb
mov
hlt
push
call
sub
mov
inc
inc
andb
in
leave
cmp
inc
jmp
loopne
mov
mov
js
jmp
and
sbb
test
stc
sbb
out
mov
jge
not
mov
in
adc
loop
outsl
data16
clc
xor
cs
clc
cli
enter
mov
mov
add
into
cld
scas
divb
dec
icebp
insb
jnp
xor
fstpt
in
adc
gs
lret
dec
xor
fiaddl
pop
outsb
rorb
and
scas
fwait
mov
loopne
cmp
push
dec
sbb
mov
fs
push
imul
xor
jle
cmp
push
in
fisubl
adc
mov
jo
das
cs
cld
ret
loopne
in
sbbl
scas
scas
sarl
inc
pop
mov
and
sbb
and
or
mov
iret
or
pop
ljmp
mov
jns
mov
stc
jg
adc
jns
stos
push
xchg
jmp
sarl
lock
pop
adc
std
and
sti
out
movsl
cmpsb
and
loope
call
mov
out
cmp
jl
xlat
sbb
inc
loop
stc
or
push
aad
pop
adc
addr16
add
inc
into
sti
mov
insb
pop
xchg
in
push
mov
dec
sbb
mov
mov
mov
sub
flds
xchg
inc
xchg
inc
or
sub
push
sahf
xchg
jge
add
in
dec
insb
mov
add
int3
incb
jmp
js
sub
jae
out
and
sarl
ss
jge
in
nop
xor
jecxz
outsl
fs
stc
jns
or
pop
es
rorl
inc
xor
pop
std
and
lock
adc
adc
aas
adc
push
jno
cmp
jp
jns
adc
cmc
imul
insl
aas
adc
sub
pop
xchg
jle
sbb
in
pop
mov
push
mov
jo
popa
insb
ds
and
dec
aas
stc
pop
leave
xor
pop
pop
orb
push
enter
mov
in
and
sti
pop
push
in
cmpsb
jae
imul
rcrl
outsb
inc
jle
movsb
inc
call
dec
mov
add
mov
test
sar
andl
mov
imul
test
pop
ljmp
pop
iret
daa
sti
add
cs
push
pop
inc
clc
mov
and
jmp
inc
nop
mov
cli
cmp
add
stos
in
out
xchg
daa
add
adc
inc
mov
mov
out
mov
cmp
frndint
mov
cs
fbld
int
leave
lock
add
es
push
cs
sbb
sub
xor
jle
pop
aam
mov
repz
cmp
into
stos
decl
out
int3
and
aad
aam
push
add
adc
popa
jb
or
xchg
dec
test
mov
lods
test
or
jg,pt
jae
push
and
iret
pop
sub
in
mov
lock
lds
cs
stos
nop
test
pushf
lret
and
pushf
or
adc
inc
and
imul
xor
inc
clc
inc
stos
push
out
jb
orl
leave
or
dec
subb
shlb
fldenv
call
mov
cld
inc
lret
fiaddl
pop
sbb
adc
mov
arpl
xchg
test
bound
pusha
adc
xor
outsl
mov
fs
mov
loopne
add
jno
stc
dec
out
sub
icebp
fwait
sub
sbb
xchg
divl
xchg
adc
lods
inc
dec
mov
loop
and
xor
pop
leave
push
mov
adc
cmp
sbb
cli
mov
cmp
cmp
fidivrl
xchg
adc
sub
daa
cmpsb
mov
lea
mov
or
cli
pop
icebp
pusha
pop
jae
iret
sti
ss
hlt
mov
or
mov
cmp
ljmp
jb
ret
hlt
inc
cmp
mov
mov
mov
orb
push
adc
add
mov
cli
cmp
cmpsl
test
sbb
sub
mov
xchg
sbb
mov
jp
out
iret
ljmp
or
popf
jg
leave
in
pushf
les
xchg
ja
adc
dec
xlat
or
lods
jno
repnz
mov
rclb
lcall
test
xchg
ss
sub
xor
lea
jnp
or
sbbl
mov
das
popa
inc
jmp
inc
fdivrl
jnp
out
dec
popl
je
cmpsl
add
push
sahf
stc
xchg
add
cld
and
dec
test
jecxz
bnd
out
lret
jmp
out
adc
inc
add
and
push
jmp
test
aam
add
xor
scas
aad
cmp
xor
xor
mull
mov
inc
lcall
xchg
popa
in
cmp
adcl
cli
and
mov
scas
imul
imul
gs
pop
inc
cmp
clc
pop
lret
or
jo
sub
cmpsb
pop
adc
adcb
mov
aas
and
int
inc
sub
cmp
and
xchg
push
sbb
pop
jae
pushf
lret
hlt
jp
movsb
fcompl
and
xchg
dec
xchg
mov
insl
xor
subl
cltd
movsl
xchg
fdivs
mov
inc
lret
sub
lahf
pop
aad
fidivl
adc
imul
pop
xlat
pop
int
jecxz
mov
cmp
sbb
lahf
or
in
fwait
cmpsl
sahf
jle
lcall
enter
test
orl
xor
ss
adc
cltd
or
push
mov
push
loope
add
hlt
mov
pop
nop
adc
jl
shl
insl
jo
xchg
jl
mov
cmp
shll
push
or
leave
mov
std
pop
mov
add
inc
fstpl
in
jb
cli
mov
push
inc
xchg
xchg
cli
outsl
xchg
jne
or
insl
dec
imul
dec
or
push
clc
insb
adc
cmpsb
jge
shlb
cmp
in
fs
add
adcl
dec
jle
fs
leave
jno
lret
test
lods
aaa
rcll
hlt
mov
idiv
inc
push
pop
mov
and
cmc
popf
sub
pop
in
xchg
jae
inc
out
test
cmp
cmp
sub
sbbl
xor
jno
cmp
lahf
ret
mov
cmc
pop
test
xor
cmp
inc
fldcw
repz
scas
nop
mov
xchg
testb
and
js
jns
hlt
insl
xor
aaa
dec
cli
xchg
lret
mov
sbb
stos
pop
sbb
std
add
xchg
mov
sarb
js
nop
cli
push
mov
rcrl
mov
data16
sbb
xchg
dec
repz
lret
pop
push
ficomps
movl
mov
testl
je
cmp
cmp
xchg
xor
sbb
pop
sbb
sub
leave
jne
cli
lds
loopne
or
jne
daa
xor
and
jns
out
ja
in
xchg
pop
dec
mov
sbb
jp
in
xor
mov
insl
lds
jge
stos
sub
jnp
test
imul
into
sbb
movsb
cmp
inc
icebp
ja
jns
and
push
enter
push
ja
sbb
adc
mov
outsb
lds
adc
xor
int
rcr
leave
lock
jecxz
cs
imul
js
scas
pop
dec
hlt
adc
jbe
repz
jno
mov
aad
xchg
cmp
stos
nop
inc
jbe
fistpll
cmp
iret
mov
jp
sub
loope
jg
adcb
inc
lret
mov
cmp
or
mov
movl
test
add
inc
cmp
mov
sahf
call
cltd
fwait
out
les
mov
sar
cmp
xchg
dec
cmpsb
push
test
cmpsl
jno
iret
fisttps
mov
jmp
jnp
aas
jge
xchg
mov
notb
xchg
mov
and
enter
loope
int3
sbb
dec
cmp
and
xchg
dec
add
shll
sub
std
subl
stos
or
fdivs
lods
hlt
scas
mov
lock
sbb
rorb
mov
push
sti
lahf
dec
add
jb
inc
mov
outsl
inc
jns
cmpsl
dec
or
lods
inc
fsubl
adc
sahf
and
mov
jb
jp
mov
cmp
xlat
andl
out
lcall
sub
mov
mov
mov
pop
in
iret
lods
sub
jl
fwait
call
frstor
dec
inc
pop
test
test
imul
jo
jmp
pop
repnz
dec
dec
test
leave
data16
jo
push
clc
cltd
and
cmp
aam
dec
inc
cwtl
adcl
xchg
sub
inc
test
jl
xchg
rcll
flds
scas
mov
mov
and
shl
in
mov
sar
subb
xor
mov
jnp
aaa
dec
jbe
xor
mov
clc
test
lret
test
mov
push
lods
dec
cmpsl
pop
jnp
sbb
and
popf
xchg
in
aad
inc
xor
xchg
enter
lock
ret
push
insl
push
stos
push
adc
pop
sbb
ret
or
lock
iret
jmp
movsl
xor
sbb
shll
adc
mov
outsl
out
push
pop
push
fs
pop
fs
mov
sub
dec
mov
jge
mov
adc
mov
movsb
shr
jne
push
in
mov
mov
mov
lods
cmpb
pusha
leave
fstps
jo
fcoml
bound
or
lods
lds
in
shlb
xchg
add
jl
shll
mov
pop
xor
hlt
std
mov
dec
lods
lret
jecxz
mov
in
sub
lahf
hlt
jae
insb
pop
fcompl
int3
and
scas
fidivrs
xchg
mov
mov
lock
adc
outsb
sub
fisubs
cmp
jne
xchg
notb
sub
sarl
pop
pop
pusha
jae
fsubrp
out
mov
mov
adc
test
test
lcall
loope
dec
inc
sbb
fsub
mov
test
cmc
fstpt
enter
jnp
jle
add
stos
sbb
ljmp
movsb
adc
mov
dec
fbld
mov
lds
mov
es
or
imul
push
inc
adc
test
adc
mov
sbbb
cmpsb
faddl
lea
xchg
lods
ret
aad
or
mov
aas
xor
jl
je
mov
lods
imul
and
pop
push
imul
mov
mov
jo
mov
out
das
inc
imul
out
stos
pop
les
pop
push
daa
scas
mov
sbb
adc
cmpsb
cmpsl
imul
je
std
sbb
xor
sub
xchg
inc
sbb
dec
mov
or
adc
fidivl
add
mov
xor
or
cs
mov
mov
les
lcall
fldcw
sbb
inc
lret
inc
xor
push
outsb
push
ss
int3
sahf
incl
push
ficomps
add
sbb
jl
or
cmpsl
inc
xlat
divl
and
fsubs
rclb
pop
lret
cld
gs
xchg
mov
pop
pop
sti
test
adcl
add
mov
orps
cmpsb
test
push
push
xchg
lock
jecxz
cmp
sbbb
in
neg
jae
popa
or
add
mov
daa
adc
sahf
jno
and
cmp
pushf
dec
adc
inc
mov
popf
mov
addb
adc
mov
xchg
and
jo
es
das
popf
mov
push
sub
in
xlat
cli
cwtl
mov
sarb
xor
lahf
outsb
imul
add
sub
fcomps
mov
adc
das
dec
pop
adc
and
add
dec
push
sub
negl
adc
fisttpll
mov
js
pop
js
out
fnstcw
data16
dec
ljmp
push
adc
push
or
stc
rolb
dec
inc
mov
dec
jb
loop
xchg
cmc
xor
adc
aaa
fimull
nop
aad
test
movsb
pop
push
add
out
adc
push
add
pop
aaa
into
add
mov
mov
cmp
sub
push
orb
adc
jno
dec
out
and
icebp
pop
fcoms
nop
mull
mov
cmpl
les
idivb
dec
push
ret
jmp
fisttps
xchg
les
and
hlt
mov
mov
mov
sub
mov
sbb
add
jmp
clc
add
push
imul
pusha
sbbl
sti
loope
repz
into
adc
mov
dec
incl
xor
and
jbe
or
inc
xchg
and
lock
pop
cmp
mov
push
jge
test
inc
jne
adc
gs
outsl
ffreep
add
pop
adc
icebp
dec
mov
pcmpgtb
jmp
mov
push
sahf
xchg
xor
jp
pop
cmp
cmp
add
mov
aad
sbb
inc
fnstenv
cltd
pop
sub
out
je
ficoms
mov
mov
mov
cltd
cmpsb
ficompl
jbe
dec
shll
loope
mov
mov
adc
inc
jns
scas
lods
outsl
cmp
jle
jae
lods
and
add
jl
int
push
mov
test
and
mov
repz
mov
push
cmp
subb
jmp
pop
sub
push
shrb
and
jae
pop
outsl
lea
sub
mov
jge
out
rclb
cmp
sub
lock
and
in
pop
test
xchg
das
sbb
movsb
test
mov
int3
mov
leave
stos
xchg
ja
add
push
std
mov
or
test
fimuls
mov
mov
pop
or
cmp
mov
test
adc
ret
insl
jmp
cmc
jge
mov
dec
ret
je
adc
mov
pop
cmp
mov
nop
adc
sub
cmp
nop
push
jns
pusha
jno
inc
shll
pop
fdivrs
xchg
push
pop
fld1
adc
jne
sarl
clc
cmpsb
ljmp
rcr
leave
mov
jne
scas
push
ret
push
mov
dec
pop
movsl
or
int3
into
mov
pop
inc
mov
pushl
cmc
push
xchg
mov
xchg
loopne
dec
test
hlt
xchg
sbb
out
mov
jmp
sbb
jp
push
out
je
sbb
inc
in
push
sbb
dec
out
mov
andb
lods
repnz
mov
pop
xor
jmp
lds
fsubrl
rol
lods
inc
nop
push
xor
jb
gs
add
fldcw
add
sbb
test
pushf
inc
xor
outsl
testb
mov
cmp
fnsave
mov
push
cli
outsb
mul
loope
mov
and
out
add
mov
int3
lea
or
imul
and
lods
repz
xchg
aas
adc
test
jle
test
ds
jb
pop
mov
mov
push
mov
push
push
jmp
repnz
fnstenv
ret
xlat
rolb
ss
jg
inc
jecxz
sbb
cmpsb
push
pop
andl
jo
cmp
leave
int
arpl
insl
mov
lea
xor
mov
jae
je
int
in
lock
scas
dec
scas
add
lret
test
sub
adc
inc
ds
addl
xor
into
xchg
cmpsl
ss
lods
pop
mov
rcrb
xlat
mov
insb
scas
cmp
nop
dec
lods
fisubl
in
jl
cltd
xor
or
xchg
add
shll
sbb
or
jno
stos
xchg
sbb
adc
mov
jae
stos
pop
adc
jno
mov
inc
cwtl
test
dec
cmc
push
jb
fnsave
push
lds
add
inc
movsl
dec
icebp
mov
jb
outsl
dec
push
mov
hlt
add
pop
dec
pusha
xchg
sub
jecxz
xchg
pop
sbb
mov
jmp
jae
shll
xchg
pop
in
add
jecxz
and
test
and
les
popf
pop
scas
dec
xchg
divb
pop
sbb
push
xorb
pop
fisubl
pop
das
push
subl
insl
adc
fldcw
xor
and
test
loope
and
lock
ffree
cwtl
enter
mov
bound
daa
aad
fsubrl
pop
and
jo
or
jmp
stos
and
mov
rorb
mov
dec
scas
push
in
xlat
jle
jo
adc
popa
lahf
mov
call
and
dec
stc
cmpsb
jno
icebp
leave
dec
sub
dec
xchg
mov
int
fisttpll
rol
shl
icebp
and
pop
in
mov
incb
dec
mov
cmp
pushf
push
push
out
or
push
and
fcomip
or
jae
mov
ss
insb
inc
loopne
int3
iret
xchg
jmp
xor
mov
pusha
cltd
pop
cmpsb
mov
mov
rolb
or
test
stos
lret
or
dec
dec
aad
pop
stos
adc
cwtl
add
fidivrl
inc
rorb
rcll
outsl
sbb
pop
cltd
imul
push
lea
jns
xor
lret
fistps
jne
jbe
test
mov
clc
cs
jle
mov
xchg
pop
pop
sub
sbb
in
cltd
test
inc
mov
pushw
out
lahf
into
pop
scas
clc
sbbb
mov
inc
dec
dec
jbe
xchg
jne
jmp
inc
jno
mov
dec
cli
push
xlat
dec
in
pop
mov
mov
cmp
cmc
fisttpl
fstpl
aaa
cli
and
lret
mov
int
lods
mov
dec
repz
pop
jg
dec
leave
mov
cs
out
sub
test
mov
std
add
loop
cmp
jl
dec
jecxz
lods
jns
sbb
shrl
pop
dec
push
jmp
in
inc
or
cmp
loope
sbb
icebp
fwait
call
mov
in
gs
scas
clc
mov
pop
je
shrl
insb
ret
ljmp
pop
leave
lret
repnz
jge
pop
xchg
mov
push
xchg
adc
sbb
test
hlt
sbb
incl
lret
inc
sbb
arpl
outsl
adc
dec
xchg
repnz
inc
mov
pushf
data16
mov
lret
leave
mov
loopne
fimull
adc
addr16
lds
orb
add
sbb
or
pop
in
loopne
es
shll
sarb
jns
pop
in
xchg
jns
cmpsb
fdivrl
cmp
or
xor
sub
fnstsw
adc
inc
arpl
jge
scas
int
lods
cld
ja
adc
push
pop
sub
inc
insl
inc
pop
fbld
mov
push
hlt
or
sbb
stc
inc
hlt
out
iret
aad
cmp
incb
notl
mov
mov
movsb
leave
mov
lds
in
add
sbb
enter
nop
out
pop
lcall
jge
mov
ret
fisttps
cmpsl
icebp
and
mov
push
mov
das
loopne
sbb
jecxz
adc
cmp
loopne
pushf
jbe
or
test
pop
pop
in
jl
dec
add
int3
cmpsb
int
mov
into
cmpsb
js
mov
push
iret
mov
lret
lahf
fiadds
inc
sub
and
pop
xor
push
sbb
sahf
outsb
inc
fbld
jp
inc
addr16
into
mov
fdivrs
fimull
add
loopne
repz
add
cltd
imul
movsl
lods
packssdw
mov
shlb
dec
pop
sbb
sub
das
shll
stc
sti
and
add
sbb
xorb
dec
cmpsb
js
sub
sub
prefetch
and
dec
insb
imul
and
repz
mov
xchg
loope
lods
cmc
jbe
leave
jge
jno
in
cmc
xor
or
scas
and
mov
xor
cli
scas
aas
stos
cmp
inc
mov
in
dec
sub
in
shlb
test
cwtl
mov
push
inc
scas
ret
push
out
test
stc
dec
jns
shl
push
loop
out
jmp
cmpsb
xor
jp
dec
pop
lcall
lahf
xor
xchg
mov
push
cmp
xor
jb
out
cltd
add
rcll
aaa
ficomps
leave
mov
mov
out
aaa
or
sbb
xchg
add
lret
jb
mov
inc
mov
xorl
mov
xchg
mov
pop
roll
arpl
jl
test
dec
or
push
cmpsb
or
xor
insl
fxtract
dec
mov
lods
sti
outsb
mov
cmp
xor
xor
insl
int
cld
out
push
test
add
hlt
repnz
pop
clc
pop
sbb
xor
out
lods
test
xlat
lock
pop
push
mov
arpl
mov
addr16
push
cmp
mov
mov
xchg
test
and
push
lods
add
push
add
mov
mov
pop
insl
xchg
pop
jb
orb
divb
push
pop
inc
in
mov
lahf
test
mov
and
jmp
lock
and
push
jb
scas
xchg
loope
inc
or
xchg
aaa
int
sub
sbb
clc
imul
mov
rcl
pop
cltd
pop
jae
aaa
or
mov
mov
loop
ret
add
je
cmc
xor
cmp
dec
push
sbb
adc
mov
stos
test
loop
xchg
push
out
icebp
leave
ficoml
sbb
jecxz
sbb
sbb
xor
and
sahf
sarl
cs
push
movsl
test
jnp
data16
divb
xchg
dec
xchg
mov
dec
gs
shrl
mov
mov
push
loope
out
call
sarb
or
push
xor
jl
push
and
dec
and
int3
adc
jg
xchg
dec
lcall
xchg
or
jl
arpl
pop
pusha
ljmp
ret
std
aaa
aaa
mov
dec
sub
cmp
jno
xor
aad
dec
sahf
push
jbe
inc
push
sahf
es
test
push
jecxz
bound
xor
cmpsb
xchg
push
stos
xor
xchg
insb
cmp
scas
dec
pusha
adc
mov
jp
inc
jge
or
lods
idivl
mov
inc
fbld
mov
push
es
mov
fsubs
ds
push
mov
arpl
mov
cmp
sbb
insb
cmp
xor
sti
jecxz,pn
addb
dec
xchg
jge
mov
add
pop
daa
sub
push
call
pop
or
cs
stos
inc
iret
inc
push
jns
jb
push
loope
jb
loop
xlat
jnp
push
int
jle
les
mov
mov
inc
arpl
inc
dec
inc
test
call
scas
lret
xor
imul
rcll
lahf
aaa
sbb
es
aas
jecxz
adc
mov
int
js
shll
push
shll
mov
ror
xchg
popa
fwait
pop
pop
in
or
imul
ficompl
cs
push
mov
push
imulb
out
cmp
in
test
push
imul
in
fdivs
test
addr16
and
xor
pop
divb
cli
imul
adc
outsb
lds
mov
int3
inc
int
rorb
pop
es
mov
push
sbb
fmulp
ljmp
fsubrl
or
cmpb
add
cli
jmp
cwtl
fldenv
mov
push
lods
mov
fistl
xchg
jp
jle
rclb
clc
lret
push
fdivp
jl
loop
aaa
or
and
pop
pop
inc
mov
push
pslld
push
cld
shrl
sub
fistps
ja
rolb
fwait
hlt
nop
lods
or
in
mov
pop
jg
pop
in
mov
sbb
or
cmp
jp
insl
ficoml
ss
mov
dec
push
and
out
inc
cs
mov
aas
and
addr16
in
jmp
data16
movsl
push
push
pop
outsb
repnz
jo
outsb
dec
mov
and
outsl
loope
leave
lods
ss
loopne
test
sub
and
cmp
pop
sbb
push
jo
daa
jecxz
aas
out
out
or
les
int3
xorb
clc
add
xor
inc
mov
sbb
push
inc
out
les
pop
test
add
mov
or
int3
int3
mov
fwait
hlt
mov
jle
adc
pop
lock
push
pop
icebp
loope
xchg
mov
or
outsl
mov
test
nop
loop
and
jmp
es
call
ret
js
fistl
dec
rolb
or
pop
aaa
cmpsl
fst
fstpt
lods
lret
jbe
dec
ss
xchg
jge
ret
cmpsl
mov
jns
ss
push
xchg
aam
cmpsl
int3
jnp
movsb
mov
inc
mov
mov
sub
push
outsl
iret
pop
inc
mov
idivl
or
lods
push
in
enter
dec
lods
lahf
fs
pop
fs
mov
daa
and
movsl
into
pop
aad
xchg
mov
scas
and
mov
push
mov
push
push
mov
arpl
ret
dec
xchg
and
cld
cmp
scas
mov
mov
jo
add
lret
jns
pusha
xor
pop
xor
and
cmpsl
or
xchg
test
aad
inc
push
push
std
xor
ret
mov
jge
enter
scas
out
jge
sub
dec
std
xchg
mov
adc
pushl
sbb
mov
xor
mov
popa
ljmp
mov
lcall
popa
xchg
xor
scas
popa
daa
lcall
cmpsb
sub
fcom
and
cld
mov
mov
les
mov
addr16
xchg
dec
mov
or
push
or
push
test
inc
loope
or
sbb
out
add
out
xor
and
adc
add
stos
cmpb
xchg
adc
mov
lahf
subl
in
inc
ret
aad
scas
stos
icebp
jno
icebp
adc
inc
xchg
and
gs
pop
stos
and
into
dec
mov
testl
dec
fs
cld
push
sub
in
movb
sbb
mov
inc
je
and
leave
sbb
and
ja
loopne
lcall
faddl
data16
xor
inc
mov
xchg
movsb
hlt
sub
hlt
jmp
xchg
cmc
push
and
add
stc
sub
test
mull
cmpl
push
or
sub
lahf
sahf
add
sub
dec
dec
sub
mov
push
add
adc
je
rcrb
jle
or
jae
imul
lods
std
cmp
rolb
mov
xor
pop
les
out
cmp
out
lods
pop
sub
jne
mov
or
xchg
int
pop
adc
lods
ret
jb
mov
push
mov
push
popf
cmpsl
push
mov
cs
mov
jg
mov
add
sahf
add
stc
mov
xor
cwtl
sbb
popl
pop
fisttps
add
adc
adcl
jg
mov
and
loop,pt
loop
pop
pushf
dec
push
dec
out
pop
xor
mov
leave
test
lds
and
adc
cmpsb
mov
rol
adc
mov
mov
lcall
data16
xchg
inc
or
sub
and
xor
out
mov
push
aas
pop
mov
cmp
dec
mov
push
push
and
in
pop
orb
mov
pop
cmp
push
pop
xor
push
mov
fstl
pop
daa
lret
adc
fs
inc
mov
sti
fnstenv
inc
or
mov
adc
mov
mov
and
out
xor
fldl
andl
and
push
or
dec
in
jbe
mov
movsl
add
jecxz
mov
in
sub
inc
fs
or
mov
sbb
lret
xlat
jg
lea
dec
sbb
mov
mov
xor
sahf
pop
inc
and
cli
mov
adc
mov
mov
sub
cmp
mov
mov
dec
iret
outsl
jle
ficompl
enter
add
test
sbb
lret
bound
mov
or
ret
or
mov
shl
jmp
je
scas
push
jb
inc
jp
mov
sbbb
adc
scas
lods
inc
dec
sub
dec
leave
dec
dec
and
xor
xor
lods
ret
adc
xchg
inc
pop
stos
sbb
or
notl
repnz
pop
pop
test
inc
xor
mov
mov
pusha
push
outsb
or
aaa
sbb
lea
push
fprem1
mov
xchg
adc
add
pusha
jno
and
lods
xor
lods
pop
lods
or
mov
cmp
int
jle
in
mov
iret
adc
dec
dec
dec
dec
and
mov
lcall
aas
jo
sub
outsb
jmp
fnstenv
mov
fldt
int
outsb
out
push
or
into
jmp
pusha
mov
jo
sub
je
je
push
cmp
xchg
lcall
movsb
sub
pop
sbb
rcll
lret
movsl
adc
repz
out
mov
inc
inc
sub
xchg
lcall
ficoms
movsb
int3
gs
popa
fwait
jmp
jo
aaa
mov
lcall
sbb
push
lds
enter
push
adc
gs
sub
dec
sbb
ds
rcrb
push
clc
js
lods
mov
push
mov
mul
out
in
jbe
cmp
sub
adc
imul
ret
xchg
fcompl
jl
shll
xor
sarb
pop
mov
pushf
jns
aam
and
ss
cmp
sbb
xchg
cmp
cmp
sbbl
mov
leave
xor
cmpsl
movsl
add
jbe
jge
mov
pop
iret
mov
ret
push
into
inc
xchg
sarl
adc
iret
les
adc
and
push
mov
lock
enter
pop
cmp
dec
push
mov
or
stc
push
test
in
or
test
adc
push
add
inc
sub
cmp
and
repz
ret
xor
dec
inc
mov
mul
or
jp
jne
out
pop
fildll
push
or
loop
aas
out
mov
pop
std
mov
xor
pop
ja
push
cmpl
xchg
and
mov
or
cs
adc
in
jecxz
pusha
pop
add
enter
or
jne
mov
dec
or
or
sbb
and
jne
insl
xchg
into
mov
cli
aam
jne
call
or
dec
test
push
insl
push
inc
lds
sbb
into
ss
inc
dec
lret
pop
int3
loopne
or
test
fwait
loop
popf
loop
cmp
jb
or
jp
pop
fdivrs
jns
inc
imul
dec
lds
dec
nop
push
mov
stc
sub
mov
jo
mov
add
sub
popf
rcll
scas
lods
xchg
mov
cwtl
jbe
mov
clc
fildll
mov
cltd
inc
dec
fndisi(8087
mov
cmpsl
sbb
mov
mov
mov
add
popa
loope
and
sbb
cmc
cmp
xchg
jns
dec
dec
sbb
into
mov
xor
enter
rcrb
mov
mov
sbb
aas
ljmp
mov
or
push
movsb
aad
jmp
push
pop
adc
lcall
inc
jbe
test
jne
dec
lret
jle
dec
mov
inc
pushf
jne
mov
cmpsb
pusha
push
lock
sti
mov
mov
lods
mov
xor
shrb
daa
mov
jp
adc
fdivs
jmp
fdiv
aad
arpl
cmp
cmpsb
push
add
sub
aaa
jmp
xchg
test
jecxz
daa
mov
adc
aaa
stc
or
sub
les
mov
mov
ss
sub
roll
inc
movsb
cmp
sbb
lea
dec
jg
loopne
sbb
lea
push
sbb
add
xor
jne
xchg
inc
test
insb
data16
out
int3
jl
es
sbbb
push
mov
cmc
xchg
sbb
xlat
xlat
or
std
ffree
jo
fldenv
roll
mov
andb
repz
add
xchg
dec
xor
cmpsb
push
jns
dec
xchg
pop
mov
pop
incb
and
aad
push
bound
adc
fidivl
int
lret
push
add
dec
mov
inc
pop
pushf
adc
xor
pop
push
mov
adc
enter
push
cmp
pop
notl
aaa
mov
push
xor
rclb
imul
jge
add
sbb
xor
push
xor
push
inc
fwait
mov
lahf
xor
mov
shll
adc
sub
pop
pop
pop
movsb
dec
and
adc
rorb
inc
jmp
lods
jp
cmp
in
arpl
rcl
adc
push
mov
xchg
repz
ret
push
pop
mov
test
lret
into
mov
lds
in
cmp
ss
inc
stc
mov
pop
dec
ds
rep
rclb
xchg
push
mov
push
inc
insl
in
js
jge
ret
ds
fldl
adc
pop
mov
shrl
mov
test
and
mov
add
adc
popa
cmp
pop
mov
test
out
ljmp
in
sbb
jo
daa
or
es
push
inc
loop
jnp
out
nop
mov
mov
mov
sub
out
mov
push
jle
mov
inc
rorl
mov
pop
pop
pop
leave
pop
insb
lods
addl
jbe
push
cs
xorb
test
xor
jecxz
mov
cmpsl
and
xor
stos
push
dec
loopne
or
sbb
stos
aam
adc
cmc
jns
adc
cli
jp
lds
test
xor
out
scas
iret
xor
lcall
int
mov
sub
or
dec
jmp
mov
add
mov
sbb
stc
cmp
xchg
add
popa
cwtl
test
imul
in
jle
jecxz
xchg
mov
out
push
nop
test
insb
lret
lcall
scas
cmp
mov
and
dec
sub
cmp
rcr
es
push
mov
lods
ljmp
xlat
sbb
dec
mov
scas
xor
xchg
js
stc
pop
sbb
xchg
cmp
ja
jns
cmp
lods
pop
mov
jne
jns
int3
pop
push
pop
bound
stc
cmp
push
or
aaa
inc
fsubrp
das
das
out
scas
into
sarl
xchg
pop
ret
testl
in
jae
fistl
cmpsl
xchg
sbb
mov
sahf
mov
or
js
pop
repnz
jbe
daa
jp
lods
push
mov
mov
sbb
add
ret
push
and
push
mov
js
lahf
mov
jns
adc
dec
push
lods
dec
xchg
jno
xchg
les
mov
jp
inc
test
dec
ja
in
popf
inc
add
insb
outsl
pop
and
stos
bound
mov
stos
leave
xchg
add
popa
fisubrl
cmp
inc
xor
push
int3
adc
mov
add
adc
rcll
and
pop
aaa
js
mov
into
push
jns
insb
mov
adc
adc
test
out
add
sub
shrl
xor
add
mov
lea
xchg
inc
fistps
addr16
pop
gs
sub
jp
cli
or
or
xor
adc
sbb
shll
mov
mov
xor
das
lea
push
jae
sub
inc
aad
nop
add
insl
jmp
lea
sub
xor
pop
adc
test
lods
lock
rorb
fsubr
nop
push
jbe
shlb
rcll
adc
push
in
in
inc
fsubp
icebp
push
fistps
loope
cmpsb
in
pushf
cs
daa
lds
and
xchg
xor
mov
cmc
retw
fs
out
in
inc
mov
sub
cmc
mov
stos
xadd
push
sub
pop
cltd
imul
sti
andb
push
inc
mov
xchg
xchg
add
sti
or
shll
cwtl
pop
lea
jne
mov
fwait
jmp
mov
adc
decb
sub
dec
sub
enter
push
mov
mov
push
jae
fmuls
sub
leave
insb
pop
sahf
inc
fmuls
mov
sub
in
cmovle
mov
imul
ffree
jnp
test
jo
popf
cmc
shll
xchg
ret
pop
shll
fldt
mov
imul
jge
lods
bound
addr16
push
sub
bnd
pop
cs
jl
enter
leave
inc
cld
fstpl
pusha
jge
lods
push
test
dec
loop
pushf
mov
inc
out
jo
pop
inc
push
fidivrs
dec
pop
outsl
fildl
inc
sbb
sti
jecxz
cli
gs
push
jmp
add
mov
adc
aad
dec
cmpsb
arpl
outsb
enter
into
push
fnstcw
scas
or
cmp
pushf
pop
and
mov
xchg
inc
loopne
sub
xchg
cwtl
jae
test
cmpsb
sbb
cltd
ljmp
test
or
repnz
cmp
fwait
rolb
xor
xchg
cwtl
test
gs
push
es
lock
test
pop
sbb
add
sarl
mov
test
dec
mov
sub
inc
xlat
test
pop
cmp
subb
sahf
lods
fs
sbb
jg
and
lea
iret
sub
rolb
pop
pop
xor
enter
pop
imul
in
and
dec
arpl
shl
or
jnp
push
push
addb
push
jno
jnp
pushf
or
adcb
outsl
jo
cs
push
pop
aad
dec
jb
stc
rcrl
mov
xchg
inc
xor
outsb
inc
xchg
test
push
dec
out
lods
sahf
lods
mov
push
cmc
aad
cld
sub
pop
xor
ffreep
mov
dec
jge
jge
sarb
out
daa
in
ret
push
mull
add
pop
dec
push
clc
cmp
pop
and
pop
stos
xor
fstpl
dec
mov
xor
push
xor
hlt
lret
mov
enter
pop
fucomi
push
fnstsw
mov
dec
sti
pushf
or
pop
and
cli
dec
push
pusha
inc
or
hlt
repz
icebp
jnp
push
jo
loope
add
orl
cmp
cwtl
mov
mov
cmp
roll
out
jnp
xchg
jb
push
test
cs
and
es
xchg
ss
cmpsl
adcb
push
mov
icebp
fisubs
test
mov
test
test
movsb
xchg
cli
out
bound
jge
scas
popa
push
sbb
test
fwait
and
and
std
dec
imull
mov
adc
cmp
ret
hlt
fldcw
out
ss
pop
stos
loope
in
lea
sub
das
ret
in
repz
gs
loopne
mov
cmpsl
xor
jne
push
lret
call
sub
push
test
mov
and
fistl
inc
rolb
int
mov
out
inc
das
xor
mov
cmp
or
or
mov
test
arpl
inc
jg
ljmp
mov
scas
adc
or
imul
jns
out
outsl
aaa
loopne
dec
aas
sub
xor
bound
xchg
arpl
mov
and
in
mov
in
int
imulb
add
push
lods
xchg
loop
cmpsl
data16
jo
sbb
mov
mov
add
xchg
lcall
or
dec
insb
leave
mov
pop
lcall
mov
jbe
pmulhw
mov
lds
flds
mov
dec
or
add
cmovle
xor
push
pop
cmp
icebp
mov
cmc
sbb
sub
aam
pop
ret
mov
xchg
pop
call
add
and
inc
rcr
sar
adc
pop
push
sub
subb
movsl
movsb
fs
sbb
jb
cmp
insl
jp
pop
loopne
xchg
sub
dec
mov
xchg
inc
inc
ss
push
xlat
into
push
jns
mov
sub
fcomp
jno
mov
push
jge
push
sbb
in
imul
pop
cs
push
mov
nop
add
inc
mov
mov
jg
mov
mov
and
add
out
aad
aam
mov
lods
mov
mov
loopne
loope
jmp
insb
loopne
rcrb
adc
or
cmc
jge
stc
adc
and
sti
clc
mov
or
mov
mov
dec
sbb
add
or
les
or
mov
pop
fucom
mov
mulb
xchg
aaa
cltd
addr16
andnps
insl
imul
out
mov
jg
bound
divb
arpl
fildll
das
inc
mov
cmpsl
lret
test
push
mov
sbb
add
outsl
mov
jg
xor
dec
xchg
push
arpl
xchg
mov
xor
lret
out
aam
aad
pushf
mov
jb
push
pop
cwtl
mov
fisttps
sub
fs
pop
lahf
pop
jg
and
cmp
lahf
out
test
adc
icebp
fimuls
mov
fimull
jae
push
mov
cmpsb
imul
sahf
jae
dec
mov
hlt
inc
and
iret
lods
dec
outsl
and
or
cmc
push
mov
push
xchg
push
adc
jne
imul
in
mov
mov
fucomip
fwait
xchg
xchg
adc
push
mov
in
mov
test
test
imul
scas
stos
pop
das
xchg
icebp
jg
sub
into
or
fprem1
inc
add
das
int3
fidivrs
sbb
pushf
or
add
lock
cltd
fldenv
jno
gs
push
out
mov
stos
setne
aam
hlt
adc
roll
jns
push
in
out
push
sbb
mov
adc
or
mov
dec
call
dec
jle
shll
ljmp
push
into
adc
mov
sbb
add
push
fs
test
ja
aaa
lahf
rcll
mov
sti
ret
pop
and
adc
xor
out
cmc
mov
pop
xchg
cmp
cltd
mov
xchg
aas
les
loop
jo
stc
mov
sbb
mov
movsb
fs
jno
push
inc
dec
pop
adc
or
loopne
test
lahf
inc
and
or
adc
pop
fldl
icebp
pop
clc
rorl
push
push
fldenv
pop
jmp
out
jmp
fisubrl
jl
cwtl
lods
add
fnstsw
mov
addb
ljmp
xlat
fcmove
in
scas
lret
stc
push
out
leave
mov
popf
out
xor
and
pop
repnz
dec
mov
push
push
je
fs
ds
xchg
and
clc
ja
jp
sub
mov
xor
add
rcr
lea
mov
fisubrl
sub
cmp
cli
loopne
mov
dec
xchg
jbe
push
jge
jnp
std
xlat
rolb
imul
adc
xchg
sbb
stos
xchg
clts
jno
or
push
pop
mul
pop
test
hlt
cmpl
mov
push
cld
in
lods
dec
in
jecxz
cwtl
dec
lcall
addb
sbb
into
sahf
mov
xor
dec
bound
lock
shl
insl
fdivl
jns
in
add
sbb
push
divl
pop
repnz
mov
out
pushf
in
dec
dec
lahf
cmpsb
pop
test
test
pushf
cmp
adc
jb
add
or
inc
and
push
lret
int
mov
cltd
jb
into
int3
popa
out
and
movsl
xor
leave
mov
sub
dec
sub
jle
jmp
push
test
mov
cmp
cld
aas
dec
cmc
dec
pop
mov
repz
loop
nop
cmp
pushf
stos
pop
movsl
fadd
clc
mov
mov
pop
inc
fs
inc
pop
cmp
dec
mov
inc
dec
lea
out
adc
out
add
inc
jmp
addr16
mov
cmc
xor
addr16
fnstsw
stc
lret
pop
or
dec
pop
pop
sbb
fldt
imul
outsl
pop
dec
je
jo
sbb
ja
sbb
jns
pop
xor
or
aas
cmp
scas
sahf
or
xlat
fs
and
cmpsb
mov
jg
sbb
xor
data16
arpl
loopne
pop
cmp
mov
jp
aas
sarb
popa
idiv
lcall
out
push
frstor
xorb
mov
adc
sub
fwait
add
into
inc
into
popf
mov
aad
and
ss
sbb
jnp
adc
sahf
mov
adc
xchg
mov
nop
xchg
and
test
mov
gs
jo
dec
jecxz
cmp
jecxz
repnz
jbe
and
ds
add
sbb
cmp
mov
push
js
std
mov
fldl
pop
insl
leave
arpl
xlat
or
dec
jl
push
out
dec
leave
xor
ljmp
fwait
mov
dec
pop
mov
repnz
sbb
leave
sbb
int
mov
lcall
sbb
lahf
adc
sarl
js
adc
addr16
dec
mov
and
movsl
cmp
mov
or
and
dec
lds
cmp
inc
inc
xchg
fcoml
mov
mov
dec
int3
lods
cmp
xor
fxch
shlb
lret
sub
daa
push
aad
xor
test
das
aas
jb
push
test
lcall
cmp
xchg
loopne
incb
push
hlt
pop
sbb
leave
aaa
push
add
sub
push
xor
jo
or
sub
stos
lds
mov
dec
out
inc
jae
lret
repnz
adc
lret
lcall
pop
push
std
out
sub
xchg
jbe
dec
pop
cli
push
pop
push
out
cmp
pop
stos
subb
cmp
lds
popa
and
inc
sbb
movsb
dec
fcompl
push
xor
das
test
cwtl
pop
xchg
ja
push
cmpsb
out
cld
inc
pop
mov
adc
lods
or
or
mov
test
fnstsw
pop
iret
sub
cmp
leave
loopne
stos
xor
mov
xor
jns
stc
dec
mov
sarl
jge
xchg
cmp
sub
dec
lock
bswap
aas
mov
mov
cs
lret
sbb
test
nop
lcall
int
adc
cmp
jbe
sub
push
dec
jp
xor
outsb
push
push
mov
aas
dec
scas
pcmpeqw
fsubl
cwtl
jmp
and
mov
pop
jbe
and
add
and
test
xor
dec
add
adc
int
pop
int
and
pop
fsubs
icebp
add
mov
sub
fadds
popa
cmp
cmc
jns
fs
jge
jne
fwait
jne
push
mov
lret
inc
and
mov
jecxz
jge
leave
jge
jge
mov
mov
cwtl
pop
popa
test
xchg
push
jae
and
lods
and
pop
cmp
out
mov
push
mov
jbe
add
subb
mov
imul
jmp
xchg
add
cli
movsb
stos
cli
xchg
dec
adc
sbb
sbb
xor
int
sbb
lret
push
test
mov
test
dec
inc
rorl
data16
test
or
sub
mov
jle
arpl
lock
imull
insl
sbbl
xor
rol
insl
inc
dec
xchg
or
nop
fisttpll
add
and
cmp
dec
mov
gs
int
pop
int
frstpm(287
pop
fsubs
fadds
jmp
add
push
sub
xchg
inc
and
cmp
scas
jns
fs
test
xorb
jne
or
and
mov
jecxz
jge
leave
jge
aaa
xchg
mov
mov
cwtl
jecxz
pop
sbb
xchg
and
lods
and
xor
repnz
adc
adc
imul
arpl
add
mov
pop
lods
fcoms
shlb
fwait
mov
es
dec
shrd
add
pop
sarb
dec
ret
xchg
sbb
and
cmpsl
enter
aas
mov
stos
sub
dec
adcb
inc
adc
inc
bound
data16
add
xor
jb
test
in
jb
ljmp
xchg
jmp
sub
inc
bound
pusha
aas
test
xchg
je
lcall
mov
push
jo
inc
mov
pmuludq
mov
test
rcr
outsb
rcr
inc
jecxz
mov
mov
aaa
fs
mov
orl
hlt
stos
push
xor
daa
test
lahf
or
sbb
adc
iret
xor
fisubs
nop
into
mov
dec
xor
push
mov
sub
inc
push
popa
andb
mov
test
movsb
pushl
add
cmpb
mov
mov
cmpsl
xor
fcmovnb
ljmp
mov
mov
xor
lods
xor
jg
cltd
pop
or
dec
jle
bound
movsb
icebp
cmc
test
test
mov
sub
repnz
fdivs
into
fdivs
push
arpl
gs
lret
mov
sbb
mov
and
repnz
push
add
in
movsl
pop
dec
test
jo
popa
jne
enter
cmp
lods
leave
ret
lods
ficomps
lock
push
call
test
cmp
out
cld
test
cmp
mov
mov
push
xchg
in
fistpll
rorb
pop
xchg
test
cmpsb
arpl
mov
addb
out
leave
in
push
das
mov
cmp
jbe
popa
insl
xchg
lret
xor
push
fisubrl
mov
ja
sub
ret
lods
fsincos
mov
mov
jmp
xor
mov
lret
and
insb
daa
mov
adc
decl
pop
xchg
pop
and
cli
out
jb
jb
mov
shl
jecxz
jae
jge
dec
inc
inc
cld
push
in
xchg
mov
sti
sub
cltd
imul
daa
mov
pop
lods
jb
pop
jle
ror
cmp
cmpl
test
sub
loopne
push
pusha
aad
call
es
inc
mov
in
test
or
add
sahf
xor
mov
jo
out
mov
js
fimuls
iret
or
push
fwait
ds
and
add
fidivrs
dec
les
out
mov
icebp
loopne
cmp
ret
mov
mov
mov
pop
inc
mov
ffreep
lock
xlat
out
push
mov
and
mov
pop
popf
xor
mov
mov
pop
sub
sub
xor
xlat
xor
cmp
stos
cmp
rcll
jg
dec
inc
adc
cmp
pop
push
into
in
or
mov
int
jecxz
xchg
movb
rcl
in
popa
sbb
sub
outsb
jns
mov
popf
cwtl
ljmp
xor
inc
xlat
std
pop
mov
out
pcmpgtb
jbe
repz
mov
inc
loop
adc
pop
xor
cwtl
cmp
or
shlb
test
scas
cwtl
aaa
or
cmp
scas
push
adc
xor
and
test
and
fdivs
add
xor
push
je
adc
pop
mov
xchg
pop
or
cmc
sbb
pop
sub
imul
addr16
fstpt
xchg
adc
fcmovne
rol
repz
ret
clc
adc
jmp
hlt
and
ficomps
xchg
jo
es
outsl
inc
imul
xchg
pushf
data16
js
scas
add
pop
andl
fwait
inc
shl
jp
add
mov
pop
sub
aam
push
push
daa
dec
add
jb
adc
xor
roll
add
mov
lock
xchg
loope
out
mov
push
mov
dec
push
jge
inc
pusha
out
ret
jp
pop
xor
adc
imul
mov
inc
cmp
sub
push
fisubrl
ja
lret
xchg
jnp
or
jle
add
loopne
push
cmpsb
int3
and
adc
ror
mov
scas
pop
nop
imul
sar
int3
mov
test
and
dec
and
jp
in
outsb
lret
jp
xor
mov
mov
sarb
fs
pop
jmp
sub
or
rolb
cmc
mov
repnz
inc
fimuls
loopne
dec
imul
cmp
out
mov
sub
repz
push
or
xor
xchg
mov
std
lods
cmp
jae
add
js
and
mov
int3
sub
scas
add
push
shl
jbe
cmpsb
or
mov
or
movsl
mov
lock
ja
dec
push
cs
fwait
mov
hlt
and
stos
sub
in
fiadds
sub
fsub
iret
sbb
lahf
out
push
adc
and
scas
jb
mov
lods
js
imul
xor
xor
movsl
test
in
stc
mov
outsl
fisubl
mov
adc
push
test
pop
pop
sbb
cmp
std
rclb
add
lret
movsl
dec
sub
clc
xchg
xor
dec
pushf
push
lahf
inc
dec
cmc
loop
sbb
pop
lds
xlat
out
lods
lods
and
dec
add
jmp
cmp
addr16
cwtl
sbb
stos
cmp
or
mov
shlb
int
mov
dec
add
shlb
adc
or
arpl
sahf
lcall
popa
jnp
sbb
pop
dec
xchg
dec
popf
loope
pop
add
mov
pusha
popf
add
cmp
or
insb
fcomip
and
cmpb
test
imul
leave
imul
mov
or
push
and
xchg
mov
rcrb
enter
pusha
jo
test
test
bound
data16
xor
mov
sub
adc
out
out
inc
xchg
fildl
mov
lcall
pop
and
cmpsb
lahf
xlat
scas
scas
fidivrl
mov
fsubl
fisubs
mov
xchg
and
xchg
fwait
clc
movsb
cmp
xchg
mov
push
sub
test
cmp
cmpb
or
rcr
div
pop
inc
jo
js
jns
jae
push
xchg
ljmp
lcall
stc
lret
mov
bound
xor
or
hlt
hlt
sub
cs
xor
outsb
aas
sub
dec
popa
mov
cld
andl
insb
xor
popf
xchg
sbb
mov
dec
mov
out
xchg
test
addr16
push
fwait
push
add
push
bound
push
popf
fimull
push
lods
inc
mov
rcrb
call
add
cmp
dec
lret
mov
inc
push
mov
jmp
jg
arpl
in
push
stos
and
jno
test
dec
lahf
outsl
fldt
xchg
ret
push
jecxz
out
adc
dec
push
pop
popa
aam
add
pop
mov
es
stc
lea
fincstp
mov
fcoms
test
pop
les
adc
xchg
in
cmp
dec
xor
jge
and
imull
pop
push
leave
mov
loop
sarl
lods
es
negl
push
pushf
outsb
in
ret
fldl
lcall
jmp
cmp
mov
xor
lock
aas
leave
cmc
scas
pop
mov
jnp
mov
sub
insb
test
sub
ss
out
mov
and
add
int
ret
push
or
pushf
adc
nop
jb
mov
sbb
sbb
xchg
adc
iret
cmc
pushf
dec
mov
aaa
repnz
jecxz
xchg
mov
out
call
and
and
fdivl
ficomps
addr16
sub
lret
or
adc
jo
lea
imul
cmpsb
std
push
test
pop
or
mov
pusha
mov
inc
pop
xchg
iret
fs
xor
into
int3
movsl
jl
fs
xor
js
fprem1
fs
add
pop
jbe
hlt
pop
push
cmp
xor
lods
daa
int3
lahf
jmp
test
mov
xchg
or
cwtl
lds
cmp
dec
mov
add
mov
sbb
sbb
mulb
jmp
rcll
pmulhuw
dec
in
mov
xchg
jmp
xchg
cmp
mov
dec
movsl
cmp
jmp
or
ja
adc
call
out
inc
scas
mov
mov
cwtl
and
pop
push
sub
lret
pop
cmc
jo
fdivrl
add
aaa
lods
sarl
xchg
mov
xor
mov
pop
or
pop
sbb
cli
push
movsb
outsl
or
test
adc
js
fwait
cmc
mov
or
icebp
ds
loop
nop
hlt
rcl
shll
mov
dec
mov
inc
test
clc
jle
push
mov
xchg
adcb
xor
ds
pop
into
into
insb
xor
xchg
jl
jmp
lret
mov
push
xchg
push
adc
fistps
decb
enter
add
push
and
push
xor
lods
adc
in
pop
xor
shlb
aam
dec
lcall
daa
icebp
xchg
cmp
sub
aad
push
loopne
cmp
push
and
lcall
pop
jno
in
loopne
rorb
pop
movsl
std
insl
mov
jle
loope
pop
sub
int
mov
nop
in
sti
fcomip
and
inc
pop
cli
pushf
jle
in
int
mov
call
nop
and
sahf
sbb
test
dec
cmc
mov
adc
push
loop
pop
pop
xor
and
push
leave
mov
out
fdivrp
fisttpl
push
cmc
addl
mov
subb
mov
jle
inc
sbb
fwait
enter
push
pop
movsb
mov
xchg
ret
aaa
mov
xchg
in
test
outsl
or
jge
insb
adc
movsb
test
mov
sbb
bound
stos
or
cmp
sti
push
or
out
add
ret
rcrl
lret
xchg
fisttps
test
jecxz
ret
aaa
push
sub
call
inc
push
into
pushf
jno
xor
daa
dec
mov
xchg
stc
loopne
pop
rclb
dec
sub
divb
fsts
xchg
pop
and
insl
lret
sub
cmp
jae
fsubrs
mov
cmp
or
inc
sub
sbb
fstpl
es
fmuls
jb
inc
aas
shlb
cmp
leave
cli
sub
cmp
xchg
stos
icebp
js
mov
jle
xchg
adc
mov
mov
popa
mov
scas
int3
orb
and
jle
pusha
jle
test
imull
insl
adcl
dec
xor
bound
stos
cmpsb
inc
stos
insl
mov
insl
inc
add
jbe
xchg
mov
insl
jecxz
insl
and
and
mov
dec
dec
inc
andb
fwait
pop
int
xchg
loop
fcomps
outsb
fadds
mov
pop
sub
dec
and
xor
xchg
cmpsl
cmpsb
fs
xorb
jne
lds
lret
mov
loopne
jge
jge
out
xchg
mov
sahf
pop
cwtl
je
fwait
lods
pop
shll
and
aaa
rorl
movsb
mov
adc
jae
mov
test
subb
mov
fistpl
fsubr
pusha
icebp
jmp
or
xchg
cli
push
cmpsl
cli
xchg
mov
stos
rcrl
sbb
cs
sbb
pop
sbb
cmp
and
xchg
lret
mov
mov
dec
mov
pusha
mov
push
xchg
or
dec
daa
int
jle
pop
jle
bound
insl
orl
bound
stos
pusha
inc
stos
insl
inc
shrb
addb
push
jbe
dec
mov
insl
popf
sbb
adc
xor
dec
dec
inc
cmp
inc
int
pop
int
dec
loop
fcom
insl
fadds
pop
in
add
fcoml
sub
add
and
xor
xchg
fs
in
xlat
cmp
push
jae
push
push
push
mov
sbbl
shlb
push
and
cltd
std
stos
movsb
push
pop
je
imul
in
pop
scas
lea
inc
in
dec
push
dec
adc
dec
lods
or
mov
into
sbb
fildll
fsub
leave
fadds
dec
xchg
dec
loopne
pop
ja
adc
test
ljmp
sti
sbbb
push
and
mov
jbe
inc
repz
push
cmc
das
aaa
mov
std
mov
adc
jno
push
call
sbb
imul
jle
testb
jno
rdmsr
xchg
fidivs
addb
leave
movsl
and
ss
jle
mov
jp
dec
push
jbe
aaa
lea
adc
sahf
and
push
scas
add
mov
leave
xchg
in
nop
pop
cmp
daa
mov
out
xchg
mov
push
fsubrl
or
lea
or
sbb
push
lea
push
dec
fs
and
rcr
pop
cs
adc
xor
push
push
bndldx
and
jg
int3
lea
loopne
sti
scas
dec
loopne
pusha
xor
adc
or
shrb
inc
jmp
pop
sub
mov
xor
lret
inc
lea
xor
or
shlb
test
xorl
dec
mov
jns
cmpsl
pop
jb
lahf
inc
jo
test
lret
ljmp
daa
pop
mov
jecxz
push
lea
add
xor
and
jo
xor
jno
enter
clc
pop
aam
mov
ret
cld
aaa
movsl
inc
xchg
sub
jbe
loop
cwtl
mov
jno
inc
adc
fcmovnbe
cmp
xchg
push
sbb
dec
lea
fnsave
rcr
fcmovnu
ljmp
test
mov
fsubs
mov
popa
jne
sbb
mov
mov
adc
add
cltd
jg
cmpsl
sub
shrb
ja
xchg
xor
pop
cmp
dec
add
pop
cmp
loop
nop
xchg
push
and
jae
jnp
and
add
sbb
imul
push
jp
xchg
push
push
or
push
into
cltd
push
scas
fs
outsl
repz
and
mov
cmp
insb
push
mov
xchg
inc
stc
cmp
jbe
hlt
adc
aas
or
lret
xor
fs
pusha
push
adc
add
in
mov
mov
test
pushf
bnd
out
or
pop
in
jmp
loopne
inc
jmp
fidivrl
fists
push
lret
mov
dec
ja
ja
fldenv
test
jnp
ficompl
cmp
test
rclb
out
xorb
add
jecxz
std
push
mov
sbb
add
dec
stos
pop
xor
add
lea
cli
ret
stos
mov
and
push
sbb
jnp
adc
cmpsl
ljmp
mov
push
insl
mov
mov
mov
fs
xchg
jnp
ds
daa
lret
pop
jnp
loopne
add
fs
hlt
push
xor
adc
cmp
xor
lock
xor
pop
adc
push
icebp
aad
aam
cmpsb
and
test
push
hlt
ss
cmp
xlat
pop
cmp
sbb
call
call
and
push
xchg
rcr
scas
aam
jmp
cmpsb
data16
and
mov
jp
or
xor
aam
jae
divb
mov
ds
gs
inc
sbb
int3
bound
cmp
shl
incb
jmp
in
in
mov
cld
fistpl
sub
xchg
mov
or
inc
jne
loope
orb
xor
mov
daa
cmpb
add
lahf
sub
test
iret
sub
jmp
sarl
std
mov
sub
iret
or
jl
and
add
cmc
xchg
dec
mov
repnz
int3
lahf
pop
aad
mov
out
jg
scas
xchg
push
js
and
xchg
jl
imul
lahf
jb
xchg
repz
add
and
shll
popa
mov
stos
call
inc
repz
lcall
ljmp
out
push
popa
xor
jno
dec
inc
sarb
push
or
or
es
cwtl
aam
int
out
mov
arpl
sti
test
cmp
or
jge
sub
jae
or
inc
ret
hlt
pop
imul
pop
sbb
pop
sahf
cmpsb
xchg
test
ror
mov
insb
je
jae
jae
xor
in
add
std
mov
pop
push
ret
xor
outsl
mov
dec
insb
aam
dec
push
adc
xor
out
mov
pop
jle
push
push
test
in
test
xchg
dec
push
sti
sub
aas
pushf
and
test
cmpsl
mov
subb
insl
xchg
in
int3
and
cli
mov
orb
lock
cli
xchg
test
or
jl
dec
jno
fbstp
jbe
jo
cmp
cmp
aaa
dec
mov
push
repz
jno
ret
aad
sbb
push
jecxz
rorb
ss
mov
pop
sbb
dec
stos
in
fsubl
adc
lods
or
fiaddl
gs
mov
int3
or
dec
push
bound
xchg
inc
mov
push
gs
stos
or
adc
lods
popw
cmp
rolb
adc
jp
or
bound
sub
jo
cmp
sub
sbb
movsl
les
divb
push
or
sbb
sbb
subb
loopne
leave
mov
loop
aaa
adc
mov
lods
add
pop
rcl
xchg
outsb
cmp
xor
dec
lret
dec
sahf
add
push
sub
in
out
cltd
in
hlt
xchg
inc
inc
fstps
dec
fldt
mov
rclb
outsl
or
repz
js
add
enter
push
pop
daa
and
mov
push
xor
pop
push
inc
cwtl
sub
mov
int
mov
jmp
mov
movb
inc
push
push
xor
adc
pop
ret
push
lcall
xor
mov
inc
cmp
cmc
hlt
xchg
sub
lods
jno
lods
notb
and
dec
outsl
xor
or
sbb
or
ljmp
inc
pop
jecxz
pop
jae
test
cltd
jl
pushl
sub
dec
or
sub
popa
cltd
stos
xor
dec
shrb
or
add
lcall
or
push
inc
arpl
adc
dec
jle
lahf
movsl
push
add
cld
and
jecxz
je
stos
ret
pushl
xorb
out
sub
dec
push
mov
sarl
mov
ffreep
or
jne
fsubl
nop
inc
cmp
mov
push
push
xor
sub
jae
loope
mov
dec
inc
lcall
inc
notb
andl
int
jge
mov
ds
mov
mov
push
movsb
or
movsb
pop
aaa
shll
call
inc
clc
bound
test
mov
stos
pop
orb
mov
outsl
dec
les
push
adc
xorb
xchg
xchg
hlt
mov
imul
je
sub
push
push
test
and
lods
jp
sbb
xorl
xor
mov
repnz
imul
jmp
in
in
jg
aam
rcrl
sahf
adc
sbb
cmpsb
aaa
ror
adc
push
rcll
sub
mov
fs
xor
xchg
daa
sbb
lret
icebp
inc
cltd
push
or
add
and
pop
loopne
negl
mov
in
aam
lcall
push
push
movsl
scas
jle
mov
mov
decb
outsb
pmaxub
negl
fldl
add
out
jae
sub
cmp
call
or
jnp
mov
xor
pushf
ljmp
cmpsl
push
sbb
jnp
inc
push
shrb
inc
out
and
shl
cwtl
inc
xchg
test
lea
incl
addr16
fsubrl
repz
add
inc
or
insl
xchg
sbb
sub
cmp
mov
jg
out
testl
jb
hlt
arpl
dec
in
lret
je
push
mov
mov
jmp
or
test
ss
mov
shlb
mov
in
jno
jmp
sarb
test
pop
or
test
fsts
push
mov
mov
mov
sub
jge
out
std
mov
mov
cmp
inc
mov
and
pop
mov
punpckldq
fwait
in
in
jo
xchg
out
add
loope
sbb
sbb
inc
bound
cmp
dec
sub
or
ret
stos
mov
add
das
aaa
idivl
mov
fiaddl
in
je
mov
xchg
insb
and
mov
sbb
outsl
rcrl
and
pop
jne
js
ja
xor
leave
jmp
cwtl
sbb
xchg
out
jns
adc
inc
xorl
mov
in
dec
test
pop
ret
fisubrs
xchg
cmp
xchg
daa
mov
mov
lods
ret
jbe
ja
xchg
divb
sbb
push
ret
sbb
icebp
outsl
shr
sarb
repnz
call
cmp
mov
inc
fsubrl
xor
cmp
xabort
xor
xor
ret
fidivs
aad
rcrb
push
sub
ret
adc
dec
test
std
sbb
jmp
dec
mov
xchg
in
mov
push
mov
jbe
xchg
imul
stc
jnp
cltd
stos
arpl
out
inc
adc
pushf
js
fisttpll
jo
pop
xchg
fcmovnb
or
test
pushl
xor
push
icebp
dec
xor
mov
lods
ljmp
dec
adc
lds
mov
dec
push
movsl
pop
jmp
mov
fwait
mov
mov
sarl
mov
jne
xchg
push
cmp
dec
add
mov
insb
push
and
dec
aad
scas
push
aam
mov
icebp
or
ret
int3
shrb
scas
sbb
fs
dec
aas
inc
mov
push
jl
rcll
dec
int
fsubs
ss
gs
inc
movsb
cmp
out
xchg
fadd
mov
cmp
lods
pop
pop
sbb
mov
loopne
out
fwait
lret
push
dec
sahf
dec
inc
mov
inc
mov
jno
in
fs
int3
lcall
pushf
lock
xchg
lcall
mov
pop
or
popf
lret
repz
push
or
adc
stos
sbb
ret
imul
or
loope
mov
shll
movsb
jnp
aam
mov
mov
mov
mov
cmp
push
mov
mov
pop
mov
adc
sbb
xchg
in
sub
shr
mov
or
xchg
lcall
cmc
insl
inc
rorb
and
jb
cmpsb
jl
or
add
lea
out
push
repnz
inc
xchg
popf
fwait
scas
test
mov
sti
cmpsb
or
mov
push
aaa
pop
mov
ja
xor
dec
mov
adc
xchg
xor
or
shrl
sbb
int3
js
mov
mov
call
push
fnsave
sub
mov
xchg
pop
jp
pusha
jb
movsl
sbb
rol
or
cwtl
or
sahf
mov
repz
mov
sbb
cmc
mov
dec
outsl
cmpsb
xchg
cltd
mov
aad
dec
imul
lret
lods
push
stos
stos
jb
xchg
rcrb
sbb
in
cmp
mov
pop
popf
push
xor
xor
and
jg
push
fldenv
push
xorb
cmp
or
inc
inc
mov
cmp
jbe
ficomps
imul
into
out
out
cli
xor
push
and
addr16
cmpsl
xor
shl
fiadds
sbb
ja
nop
mov
les
sub
loopne
mov
sbb
xor
pusha
int3
mov
adc
jg
inc
mov
ss
ficomps
jo
jne
cmp
addr16
adc
sbb
push
lods
es
subb
fcoms
pop
dec
imul
clc
test
daa
loopne
rcrb
xorl
cmp
jns
dec
inc
or
adcl
lret
and
mov
outsl
push
mov
and
popa
mov
pop
shl
mov
outsb
adc
hlt
lcall
mov
pushf
test
mov
cmp
sbb
jne
push
or
icebp
xlat
or
mov
mov
xchg
dec
ss
lret
ret
pop
mov
sbb
mov
mov
imul
fdivrl
pop
cmp
mov
sbb
ds
xchg
mov
jns
add
lcall
sarl
lock
dec
iret
adc
mov
lods
mov
lahf
je
outsl
pop
lret
fdivrl
pop
popf
push
mov
mov
dec
out
adc
cmpsb
popf
sub
fistpll
icebp
sbb
xchg
iret
dec
hlt
jl
aas
imull
xor
addr16
dec
jg
jge
inc
sub
stos
popa
jo
jecxz
icebp
out
bound
lret
or
pop
dec
loope
stos
cmp
neg
std
inc
fisubrl
xchg
jbe
lahf
push
sbb
jne
sub
push
cwtl
and
dec
lods
pop
mov
jle
repz
xchg
adc
cs
and
ret
mov
xor
xchg
test
push
sub
lahf
adc
sub
xchg
loope
cmc
inc
sarb
xchg
js
call
and
fwait
dec
push
cmpsl
pop
adc
call
outsl
enter
pop
inc
pushf
repnz
call
fisubl
addb
dec
daa
repnz
cmp
mov
arpl
stos
mov
add
repz
inc
push
jb
and
and
imulb
data16
sub
and
push
inc
and
mov
aad
das
adc
sub
pop
inc
imul
aas
sub
xor
negb
sarl
stc
lahf
push
xor
xchg
xchg
mov
shll
pushf
pop
out
js
mov
inc
cwtl
imul
xor
push
nop
pop
mov
pop
mov
fistps
xor
push
push
dec
adc
testb
mov
cli
dec
xchg
xchg
mov
lret
mov
cmc
mov
js
enter
test
pop
cld
aam
outsl
xchg
push
test
pop
rol
test
sbb
sbb
loopne
lahf
add
fs
push
sarl
imul
pop
mov
and
or
xor
sbb
sbb
outsl
inc
sub
inc
lods
mov
mov
push
lds
xor
mov
call
shrl
jo
iret
and
and
lods
and
pop
add
das
dec
add
cmp
in
jo
pop
or
lods
pop
jne
adc
cltd
lods
icebp
inc
dec
sub
add
test
fisubrl
aam
add
movsl
sbb
insb
int
lcall
xchg
push
add
xchg
pop
mov
ficoms
mov
xchg
mov
xchg
xchg
cmpsl
in
subb
int
js
add
divl
pop
lds
mov
pop
cmp
add
jle
xchg
in
and
mov
mov
push
out
cltd
xchg
iret
fildll
mov
sub
inc
pop
enter
sbb
icebp
bound
loope
popf
inc
es
mov
repnz
push
ss
xor
fdivrs
push
xchg
xor
xchg
jg
mov
mov
sub
inc
adc
pop
push
out
jns
test
bound
aaa
push
mov
jns
pop
inc
rorb
sub
push
xlat
mov
xchg
adc
jg
ret
nop
mov
in
outsb
xchg
mov
out
mov
push
int
cmc
mov
fs
add
push
inc
or
jp
push
clc
out
xchg
shr
mov
dec
lcall
xchg
or
pop
int
inc
data16
inc
cld
sbb
inc
push
jmp
iret
dec
mov
scas
adcb
dec
cmp
pop
xor
mov
mov
pop
jl
fists
push
inc
sub
lock
ljmp
lret
imul
xor
ljmp
pop
rclb
sbb
jns
mov
push
adc
adc
rol
jp
sti
lret
xorb
mov
or
inc
and
in
dec
push
js
push
or
push
pop
jno
cltd
inc
or
out
add
adc
xor
inc
cmpb
adc
out
js
or
js
jp
or
andb
xchg
fwait
mov
xchg
repnz
sub
ds
push
mov
mov
sub
jmp
pop
mov
inc
adc
call
fs
xor
fidivrs
and
hlt
cwtl
lea
mov
and
jg
mov
leave
shll
add
inc
int
push
dec
and
sub
xor
push
pushf
mov
sbb
pop
push
lret
shrl
jmp
jl
shrl
sbb
pop
into
inc
dec
xchg
popf
jecxz
jae
jle
inc
pushf
cmp
lds
enter
pop
push
cmp
leave
mov
cli
lods
aad
clc
fnstenv
outsl
stos
push
jb
pop
sahf
push
inc
mov
adc
aad
jg
pop
sub
data16
and
scas
test
fs
imull
push
sbb
ja
jle
shll
ja
scas
inc
jp
arpl
div
stos
outsl
sarb
movsb
xor
pushl
jne
pop
pop
jg
xchg
mov
pop
cld
test
into
std
mov
loop
ds
repnz
stos
mov
push
addr16
lds
incb
mov
fwait
pop
ret
in
bound
mov
mov
add
imul
lret
pusha
sbb
mov
add
xor
mov
sbb
sar
ss
xchg
or
adc
pushf
add
mov
out
push
dec
repz
adcl
jnp
rol
push
ja
jecxz
pop
dec
aad
jecxz
hlt
mov
shlb
or
mov
fstpt
xor
in
imul
mov
xchg
mov
dec
fnstsw
iret
push
dec
mov
cld
nop
mov
shrl
pop
xchg
fdivl
movsb
mov
ljmp
lahf
dec
pushf
push
mov
or
and
test
clc
mov
sbb
jl
jmp
push
test
adc
adc
sbb
ja
push
or
and
jns
aas
out
cmp
scas
xchg
pop
or
jp
dec
mov
mov
enter
sub
pop
mov
push
repnz
cltd
andl
aaa
cwtl
push
enter
mov
dec
mov
addr16
mov
iret
pusha
xchg
cmp
lods
in
mov
lock
lea
jge
jno
and
inc
dec
aam
mov
movsl
outsb
sub
iret
and
push
sbb
cmc
adc
es
mov
add
jnp
mov
ret
std
cmp
inc
es
inc
add
negb
xor
inc
jne
mov
hlt
test
pop
sub
sbb
xchg
loope
aaa
rorl
mov
je
into
jne
jne
out
jmp
fisttpl
jge
add
jns
dec
je
jle
cld
and
add
fdivs
cld
and
aas
imul
inc
jle
jb
xchg
push
cmp
jg
repnz
pop
test
scas
adc
jl
les
pushf
aas
push
jl
mov
pshufw
icebp
mov
fdivl
xchg
and
mov
loope
std
mov
mov
xchg
dec
xchg
imul
and
fucomp
shrl
lcall
adc
xchg
movsb
mov
sub
sbb
mov
movsb
or
mov
sub
mov
cmc
cmp
mov
adc
push
out
pop
fdivp
adc
jl
push
add
mov
jl
cwtl
xchg
das
mov
pop
iret
fcmovbe
push
es
sahf
mov
sar
inc
ds
or
sub
mov
test
ja
jle
mov
and
add
xor
scas
pop
mov
lahf
test
dec
out
cs
outsl
pop
cs
jb
mov
jl
xor
les
dec
call
and
leave
lods
and
cltd
adcl
xor
stos
and
movsb
mov
sub
inc
mov
ret
stos
inc
idivl
pop
adc
xchg
cwtl
call
sbb
in
mov
cwtl
pop
xchg
push
mov
mov
xchg
adc
push
mov
mov
xchg
lahf
or
bnd
push
lods
cmp
js
roll
out
shrb
mov
stos
imul
push
xchg
es
pop
lock
xchg
pxor
and
call
int
aas
jne
popf
pop
out
cs
test
imul
stc
or
mov
arpl
jns
pop
sbb
add
sbb
add
sub
fdivr
push
adc
dec
fimull
js
scas
stos
adc
add
jl
push
mov
clc
test
sub
sub
mov
rcll
loop
jg
lret
clc
sub
push
stc
jns
fldcw
fbld
cmpsb
icebp
jecxz
cmp
scas
or
sbb
inc
outsl
adc
test
push
jno
cmp
lcall
ljmp
push
enter
pop
jecxz
sbb
test
and
ds
lahf
push
scas
mov
mov
or
lsl
popa
push
mov
push
adc
dec
pop
jb
loope
xchg
cmc
stos
pop
icebp
mov
rcll
jg
pop
adc
sbb
sub
pop
mov
jb
mov
aam
inc
fcmovne
sar
sbb
pushw
push
test
int3
and
rcr
scas
repnz
add
fdivrl
int3
lea
outsb
cwtl
sahf
movsl
sbb
push
hlt
xchg
xchg
enter
and
inc
or
xor
cmp
aaa
addl
inc
mov
xor
repnz
add
sbb
fadd
xor
sbb
cmp
xor
jno
aas
stos
jns
enter
pusha
ficoml
in
fsubs
cs
xchg
iret
and
pop
fisttpll
push
cltd
jnp
mov
cmp
push
mov
pusha
mov
js
out
jne
cmp
shll
jge
xchg
loope
mov
mov
add
lcall
outsl
mov
jg
shl
mov
lods
and
jle
lretw
and
sub
mov
adc
scas
sbb
inc
mov
push
gs
dec
mov
mov
dec
lock
lahf
fistpl
out
cmpsl
jecxz
push
mov
pop
xchg
test
dec
xor
fs
lods
subl
fistl
inc
mov
stos
lret
inc
lds
push
pop
lock
cmp
xorb
push
nop
outsl
cmp
cmp
cmp
lea
pushf
pop
sbb
inc
aas
dec
filds
imul
in
fs
cli
adc
or
lds
aad
cmpsb
mov
and
hlt
push
out
arpl
cmp
jp
pop
push
jnp
jnp
push
sbb
lods
mov
or
ret
outsl
aaa
je
outsb
int3
rcrl
movsl
xchg
fimull
test
mov
scas
xor
jns
push
idivb
dec
icebp
mov
jmp
or
in
cmp
sbb
stc
mov
sbb
clc
inc
sbb
out
sub
xchg
int3
push
jo
push
cmp
repz
mov
out
inc
pop
ret
jge
dec
cmp
cli
loopne
ret
shll
jb
popa
aad
dec
aam
mov
movsl
jle
nop
or
cwtl
das
mov
jno
out
sbb
adc
jecxz
jecxz
jmp
xchg
test
sarl
xor
fists
cld
popl
sbb
dec
stos
lds
js
outsl
nop
je
or
push
dec
popf
inc
mov
sub
leave
in
je
test
shll
arpl
mov
mov
xchg
ss
inc
testb
xchg
add
pop
adc
xor
sbb
daa
pop
icebp
loop
call
adc
cmp
adc
das
pop
fsubl
sahf
pushf
adc
ret
lock
mov
xchg
jmp
add
xchg
shlb
pushf
adc
fstl
fmuls
sub
data16
push
push
cmp
inc
enter
pop
sbbl
insl
mov
sub
popf
sub
xchg
mov
lret
cld
lret
cwtl
iret
bound
pop
sub
jb
jne
lea
cmpsl
cmp
push
push
xor
pop
aam
xchg
push
sti
xorl
sbb
xor
mov
sbb
add
pop
out
je
push
or
fcoms
movsl
out
mov
ror
fadd
push
inc
dec
movsl
and
jns
pop
dec
jne
or
aas
inc
cltd
rclw
movsl
mov
sbb
inc
push
test
out
push
dec
sbb
ljmp
shrl
mov
push
jo
cli
mov
lret
int
cmp
inc
sarb
dec
inc
push
dec
xchg
cmp
out
inc
add
jb
push
pop
inc
pop
push
loopne
in
shll
pop
xor
inc
popf
adc
pop
cmpsl
pop
cmp
fs
sbbl
cmc
mov
xor
fstp
pop
or
and
xor
mov
adc
sub
lods
mov
xor
gs
sub
xlat
cmp
xchg
test
ljmp
xorb
cmp
xchg
jmp
je
jae
fs
cmpsl
subl
mov
gs
add
mov
jmp
and
sub
and
sbb
mov
int3
mov
adc
add
movsb
push
xor
sarb
pusha
push
jns
and
and
es
nop
jno
out
out
lods
mov
sbb
cwtl
daa
inc
fadd
push
loope
or
inc
ret
cmp
fidivl
push
les
sarl
mov
into
pop
neg
sbb
pop
xchg
cli
push
std
push
fstpt
aas
test
sub
add
scas
das
icebp
push
scas
int3
sub
jne
push
cmpsb
push
jno
test
mov
mov
or
scas
mov
and
and
notl
rcll
xchg
mov
jmp
and
lods
stc
xlat
dec
inc
sbb
add
out
mov
mov
inc
pusha
cwtl
or
mov
adc
sbb
pop
mov
gs
into
rorb
xchg
jae
in
es
lret
jg
test
xchg
add
jae
push
loope
xchg
orl
out
scas
inc
pop
insb
loope
sub
pushl
aaa
dec
sub
add
lea
dec
arpl
and
aas
loop
shll
adc
pxor
push
xor
das
mov
inc
xchg
ja
jnp
pop
js
xor
bnd
mov
or
hlt
adc
push
out
lahf
loopne
adc
seta
adc
push
mov
push
lret
xor
push
and
fistps
sbb
xchg
pop
clc
loop
lock
les
push
inc
shll
cmc
enter
sbbb
adc
fiaddl
fs
aad
sbb
xlat
pop
mov
add
cltd
insl
pop
cld
xor
jbe
and
sbb
ret
imul
adc
vcvttss2si
add
int
inc
enter
cltd
outsb
fstpt
xchg
pusha
ja
call
ljmp
imul
pop
push
mulb
fisubl
repnz
int3
push
sti
in
pop
push
aas
fimuls
jecxz
jo
cmpb
xor
andl
or
jecxz
clc
ds
test
into
push
fdivrl
test
in
mov
jns
ror
cltd
mov
je
fldcw
ret
iret
adc
pop
dec
jg
xchg
xchg
daa
vandps
sti
out
data16
mov
dec
sahf
orl
pop
sub
push
lock
pop
xchg
mov
dec
adc
jecxz
scas
test
clc
lahf
das
in
cmp
mov
shrb
out
call
lret
jmp
dec
in
lret
ret
xchg
mov
test
pop
lods
mov
std
andl
cmp
jecxz
loopne
divb
mov
outsb
sbb
jnp
pop
mov
cltd
daa
jecxz
jecxz
pop
jno
aaa
cld
hlt
vmread
sarb
sbb
cmc
fstl
sbb
adc
mov
sub
cwtl
add
je
or
inc
sub
lret
call
mov
xchg
test
bound
jns
pusha
sbb
scas
lahf
rolb
mov
mov
dec
lock
ljmp
adc
push
and
mov
jno
out
js
cmp
push
xchg
daa
push
or
sub
test
mov
xchg
addr16
int
add
popf
xchg
pop
or
add
pop
call
cmp
orb
in
pop
cld
test
and
add
and
fistps
ljmp
cmp
stos
loopne
movsb
inc
subl
inc
dec
jmp
ja
cmp
adc
ret
movsl
or
xor
xchg
pop
and
ss
test
and
in
movsl
pop
jge
fsub
enter
test
mov
jge
mov
ss
jl
push
mov
mov
fistl
or
cmp
cli
lret
popa
ljmp
lds
aam
sub
cld
or
cmovae
lods
das
iret
mov
shlb
jecxz
mov
outsb
shl
cli
fstps
ja
sub
mov
jmp
gs
out
mov
out
sti
sub
cmpsb
mov
xor
mov
dec
pop
setno
cmp
sbb
and
out
in
out
mov
icebp
jae
jbe
lods
xor
add
cmpsb
push
ss
push
ss
pop
pushf
jbe
xchg
in
je
inc
inc
sbb
pushw
cs
je
pop
xchg
dec
icebp
jg
flds
pop
push
lock
lds
fcmovne
sbb
mov
sub
fld
adc
ret
pop
js
cld
cmp
pop
dec
sbb
fwait
pop
xchg
add
pop
mov
ficoml
xchg
jg
dec
sbb
stos
jbe
push
int3
dec
cmp
es
or
leave
jbe
mov
xor
and
loop
xlat
fs
ja
arpl
mov
popl
adc
popf
out
jnp
hlt
mov
jbe
ret
mov
leave
rorl
pop
mov
adcb
das
sub
sub
hlt
cmpl
mov
popa
mov
pop
lods
arpl
repz
sahf
popf
inc
jp
push
pusha
mov
pop
xor
add
cmp
pop
aam
data16
mov
fiadds
or
jo
lds
mov
jge
jmp
mull
int3
fs
push
jno
out
lret
mov
dec
push
jp
xchg
imul
test
xchg
inc
push
dec
or
mov
shl
bound
push
cmc
int
mov
lea
cltd
insl
mov
pop
cld
cld
push
push
jge
push
sbb
sub
movsl
jne
shl
sub
inc
mov
and
popf
xor
sti
lahf
inc
icebp
stos
sbb
sbb
adc
adc
imul
and
cmpsl
push
ds
sub
loopne
jb
xlat
data16
movsl
push
cmp
dec
add
dec
stc
mov
mov
out
mov
sbb
ja
sbb
mov
lret
mov
cmpsb
mov
rol
mov
stc
call
fmuls
lock
sar
xor
jmp
xchg
adcl
sub
stc
add
js
adc
pop
xchg
dec
andl
hlt
or
mov
or
aaa
xchg
push
bound
lods
ljmp
or
test
filds
mov
jnp
jno
in
inc
xlat
test
dec
loop
shl
jmp
lcall
push
and
pop
pop
insb
xchg
repnz
sahf
pushf
inc
pop
out
fwait
clc
pop
insl
push
jae
in
jmp
pop
sub
mov
push
xchg
int3
ret
mov
ret
std
mov
movsl
sbb
shll
les
ja
in
cmp
insb
dec
xchg
jnp
xchg
cmc
and
xchg
inc
daa
or
test
pop
sbb
mov
inc
add
mov
outsl
pusha
pop
mov
mov
cltd
je
and
and
out
icebp
xchg
xor
jae
mov
sbb
and
push
je
stc
dec
mov
inc
or
add
sbb
push
fdivl
and
mov
pop
push
sbb
inc
adc
sbb
pop
dec
fildl
out
lds
mov
or
and
out
jecxz
outsl
adc
je
mov
inc
aas
jl
cmp
idivb
sahf
and
push
fs
icebp
sbb
push
test
or
dec
xchg
mov
lods
frstor
int3
test
xchg
dec
mov
fwait
add
lock
sbb
push
sbb
ja
or
cmp
sahf
flds
add
mov
push
xchg
jne
sti
aas
inc
mov
test
imul
push
icebp
call
mov
nop
or
faddp
ja
repz
or
lock
xor
andb
xor
dec
sub
and
xchg
lahf
dec
repz
sbbl
and
dec
andb
movsl
jg
repnz
lret
aam
and
pop
inc
loopne
hlt
dec
stos
sub
push
add
and
cmpb
xchg
dec
sub
xchg
inc
push
mov
or
mov
and
jnp
mov
enter
syscall
mov
addr16
ret
sub
lret
jae
les
xlat
sarb
sub
gs
int
xchg
sub
add
les
mov
les
fcmovbe
cmovno
mov
mov
push
xlat
sub
jl
std
xor
jb
bnd
adc
leave
rcrl
insb
mov
jg
and
sti
xchg
ud2
adc
jle
iret
in
arpl
out
cmpsb
or
test
push
gs
mov
cmp
in
loop
fdivrp
cmpsl
sahf
iret
dec
cwtl
mov
mov
lret
negb
insl
test
cltd
mov
loopne
adc
add
pop
mov
arpl
into
jns
add
shll
jno
aam
mov
cwtl
ja
sarb
imul
mov
sahf
enter
jbe
pop
xchg
mov
xlat
arpl
hlt
add
fldl
cli
dec
sub
push
jnp
jmp
mov
or
fs
call
notb
sub
addr16
mov
ret
ret
dec
push
dec
sbb
fsubl
in
inc
mov
jmp
pop
cld
mov
cmp
out
ret
std
sbb
or
add
stos
in
adc
mov
mov
mov
inc
or
jns
lock
adc
jmp
test
jl
jnp
push
push
test
xor
aaa
mov
push
inc
xchg
testl
xor
inc
or
xchg
push
sub
fnstenv
cmpsl
movsl
repz
xor
or
arpl
and
and
or
out
fxsave
xor
fcoml
leave
aaa
fisubrl
push
cmp
mov
push
lds
jge
mov
push
jae
lods
push
jns
les
in
loop
cmp
lds
push
mov
bound
add
sub
das
adc
scas
aaa
or
xchg
in
iret
mov
aas
cmc
xchg
cli
mov
jb
rorb
cmpsl
inc
cwtl
jge
push
adc
push
inc
add
jbe
dec
xor
imul
lods
ja
sbb
enter
mov
in
sbb
pop
out
mov
push
mov
adcb
es
subl
or
ja
jl
mov
nop
pop
push
push
loope
inc
loop
call
ret
mov
loop
pop
ljmp
mov
jns
stos
cld
aam
jb
clc
dec
repnz
scas
or
mov
dec
xorb
stc
sbb
js
sahf
jbe
lods
xor
pop
lods
cli
fucom
mov
out
lods
bound
movsb
xor
dec
and
xorb
mov
imul
test
or
sbb
cli
stos
fsub
ss
ss
sahf
xor
sbb
andl
in
jns
shll
and
jp
jae
cmp
insl
fs
jg
pop
sbb
js
pop
popa
lcall
fsub
or
inc
push
cmp
leave
xlat
pusha
jne
cld
fidivl
aaa
ret
push
cli
and
mov
ja
movsb
add
push
xor
scas
cli
aad
pop
loop
orl
pop
mov
jge
dec
icebp
adc
scas
cmp
das
push
push
subb
jbe
jge
mov
xchg
loopne
lea
test
xor
jae
xor
xchg
xor
std
fdivrl
add
adc
jg
in
fidivrs
add
dec
sub
out
jbe
daa
adc
push
in
ret
mov
es
lret
lock
out
lods
insb
dec
xor
cmpsb
fiadds
xor
jne
jmp
pop
sub
movsb
push
mov
add
out
push
in
lods
pop
jecxz
add
adc
adc
add
pop
fistpl
out
loopne
ret
mov
aam
mov
inc
sbbb
push
mov
inc
imul
imul
cmc
jo
push
dec
dec
ret
loope
jae
lds
add
mov
popa
daa
sub
adc
dec
ficomps
inc
mov
cs
lds
cs
test
ss
jge
jg
mov
outsb
rclb
add
xchg
ret
dec
stos
mov
mov
subl
xor
cmpsb
shll
stos
push
add
jle
rcl
inc
inc
mov
in
repz
idivb
adc
in
daa
xchg
push
loop
or
test
xor
div
ljmp
out
push
jo
push
daa
inc
ss
stos
not
xchg
pop
out
push
scas
mov
sbb
inc
jecxz
stc
pop
in
out
xor
pop
pop
jb
lea
sbb
push
dec
in
jae
lret
inc
xor
shll
out
jno
inc
xor
into
cmp
popf
imul
dec
stos
adc
adc
jb
test
and
outsb
push
add
mov
add
jecxz
mov
sbb
add
or
adc
stos
fidivs
popf
or
mull
sbb
repnz
mov
pop
push
mov
jo
sub
test
out
stos
mov
pusha
and
test
mov
pusha
mov
pop
out
aam
jecxz
pop
xchg
xchg
rcll
insl
or
lods
pop
pusha
push
test
mov
dec
rclb
nop
dec
push
inc
sub
mov
xchg
inc
xor
adc
adc
imul
cmpsb
inc
jb
imul
xor
cmc
rcll
adc
inc
add
outsb
push
fnsave
inc
sub
les
inc
popf
daa
inc
cmp
out
insb
pop
add
inc
les
lods
jne
sub
mov
dec
dec
mov
jl
jle
mov
mov
mov
inc
loopne
push
jo
xchg
xchg
mov
ret
mov
repz
jnp
mov
hlt
sub
dec
out
in
cmpsl
ds
inc
loop
cli
daa
add
popa
addr16
subb
cmove
jecxz
fcompl
bound
aas
dec
cmp
cmp
stos
push
push
xor
nop
mov
inc
xor
test
and
inc
cmp
hlt
fdivrs
pop
inc
in
sub
mov
mov
cs
loop
ffree
mov
bswap
jmp
enter
add
roll
test
or
jle
mov
mov
cmp
out
addl
mov
in
inc
repnz
ljmp
scas
push
leave
repnz
test
or
push
xchg
jg
rol
push
push
xchg
add
push
sbb
scas
stos
push
addr16
inc
cmpsb
cmp
mov
push
cmpsb
jne
mov
mov
loopne
ds
xor
mov
dec
vmovd
sbb
dec
push
mov
sbb
mov
jmp
lahf
push
sub
mov
decb
push
dec
cmp
sub
rolb
pop
add
dec
push
movsl
arpl
cmp
jbe
add
cmp
aaa
add
sub
mov
add
dec
mov
push
fwait
mov
adc
xor
push
ljmp
js
fldenv
mov
jnp
jo
nop
and
mov
sub
ljmp
lea
sahf
mov
pop
repz
lods
into
or
sbb
out
sub
fistps
mov
xor
xor
mov
and
cmpsb
inc
mov
jno
daa
test
bound
jp
in
sahf
out
imul
sub
arpl
iret
adc
enter
mov
outsb
or
daa
ret
and
jp
in
mov
or
pop
add
scas
js
xchg
ja
test
sahf
aam
popa
inc
sbb
xor
jl
pop
rol
sti
xor
loope
fwait
sub
pop
mov
cmpsl
sbb
add
fwait
push
add
xchg
push
in
jp
adc
int
out
pop
out
jo
sbb
xor
inc
and
xchg
sbb
bound
les
int3
cli
pop
dec
cld
lods
fdivrs
fdivl
cmp
cld
cmp
pop
dec
xchg
adc
bound
adc
cmpb
inc
pop
sub
repz
add
jmp
xchg
fadd
cld
leave
xchg
mov
pop
cmp
sbb
push
inc
mov
es
test
nop
ljmp
cmpsb
pop
jp
xor
mov
popa
jp
push
sub
into
rcrb
aad
and
or
add
sbb
add
pop
xor
pop
leave
in
sub
xor
stos
xor
pop
into
div
out
cmpxchg
or
cmpsl
test
pop
int
push
mov
dec
in
nop
xchg
cmc
pop
imull
jns
aaa
fbld
xchg
sti
mov
int3
jae
add
lock
lret
cs
popl
cmc
dec
divl
mov
mov
popf
fiadds
inc
dec
test
push
push
push
f2xm1
jb
je
mov
push
push
xchg
testb
or
jl
sub
mov
pop
scas
in
xchg
dec
xchg
fsts
mov
scas
cmpb
out
mov
mov
std
clc
mov
fstpt
jne
gs
aas
jmp
movsl
arpl
inc
push
fmull
jno
inc
movsl
inc
cs
popf
adc
inc
dec
int
push
jge
ljmp
addb
mov
mov
xchg
xchg
pop
testb
push
cmp
fstpl
and
stos
adc
xor
dec
mov
iret
ljmp
add
data16
lods
shll
cmc
or
enter
ja
inc
mov
mov
mov
mov
movsb
cmp
sub
sbb
add
push
leave
or
dec
pop
jmp
add
mov
xor
push
fildl
dec
dec
cmp
or
iret
pop
lret
pop
inc
sarb
pushf
pop
dec
mov
mov
in
add
xchg
cwtl
inc
xor
inc
scas
inc
dec
jno
adc
int3
out
adc
dec
push
cwtl
test
call
outsb
je
ficoms
repz
mov
mov
inc
dec
dec
xlat
testb
and
inc
xchg
iret
push
loope
xor
popf
stos
cmp
movsl
dec
dec
arpl
push
pop
mov
fdivl
jge
mulb
dec
out
movsb
pushl
push
mov
adc
and
addr16
dec
xor
and
jb
mov
sbb
mov
ret
push
mov
je
mov
rcrb
inc
leave
call
das
dec
adc
push
idivb
data16
xchg
inc
hlt
push
lret
stos
dec
xor
lods
dec
lea
mov
loopne
xchg
in
pcmpgtd
and
mov
sub
fcmovnbe
adc
xchg
pop
fidivl
sbb
mov
push
push
jecxz
insl
sub
xchg
sub
cltd
daa
add
xchg
fbld
xor
scas
loop
imul
nop
mov
xchg
in
loopne
aaa
stc
popf
mov
inc
loop
stos
imul
stos
pop
movsb
add
and
and
cltd
mov
dec
lret
mov
loop
sahf
pop
xchg
mov
or
ret
movhps
jg
shrl
sub
push
popf
inc
cmp
movsl
testb
push
add
jno
fs
out
push
mov
cmp
push
push
idivl
das
stos
in
mov
enter
and
push
stc
push
and
js
dec
mov
cmp
sub
bound
rcrl
outsl
sub
loope
jp
or
push
leave
sub
cmp
pusha
xchg
test
sub
fisttpl
sbb
je
sub
mov
loopne
cmpsl
inc
sub
popl
std
test
les
ljmp
in
pop
xchg
imul
and
lret
fcoml
push
lahf
outsb
jl
cli
leave
mov
jmp
hlt
push
sub
repnz
mov
gs
stos
aas
daa
add
inc
stc
and
cltd
sbb
das
mov
add
clc
jne
aad
js
data16
shlb
es
cmp
sub
in
pushf
push
scas
mov
outsl
arpl
jne
and
inc
xor
das
and
nop
js
sahf
adc
shlb
fildl
cltd
jle
mov
fisubs
mov
or
and
inc
cmpsb
int3
push
jne
xlat
and
cmpsb
adc
lods
mov
ret
cwtl
add
stc
gs
lret
or
mov
dec
jbe
and
lods
push
inc
movsb
sub
dec
ror
inc
pop
bnd
lcall
stc
inc
jg
mov
es
xor
xor
data16
scas
test
aaa
hlt
popf
iret
jne
cmp
out
mov
jg
mov
mov
push
xchg
loop
inc
xor
dec
stos
call
pop
mov
mov
mov
adc
loopne
xor
rol
mov
inc
bound
mov
aas
mov
jmp
out
jb
push
cmpsl
mov
cwtl
push
push
fs
fildl
and
subl
push
push
push
in
or
jnp
push
mov
movsl
hlt
dec
into
push
mov
mov
hlt
dec
fdivrp
cmp
push
xor
scas
xchg
arpl
xchg
inc
push
dec
aas
xchg
xchg
fisttpl
add
out
loop
mov
xchg
sbb
js
lcall
xchg
or
xor
lret
inc
pop
movsl
ljmp
push
adc
loop
inc
xchg
jle
stc
imul
stos
inc
jge
lods
mov
jp
xchg
ret
mov
add
test
cwtl
rorl
stc
outsl
xor
dec
out
mov
test
lock
push
popa
add
mov
testl
jecxz
adc
push
xor
xchg
lds
pop
shl
iret
jbe
lahf
xchg
out
les
jnp
push
add
xchg
decb
int
and
test
cmp
es
sub
mov
jg
loopne
xchg
mov
sbb
push
mov
stc
fildl
and
mov
jp
cmp
lock
xor
adc
mov
sub
mov
cs
jge
mov
in
roll
jg
popf
pop
add
leave
loop
inc
lea
into
sub
iret
and
mov
outsb
sub
scas
dec
aad
jbe
mov
jecxz
idivl
sub
push
xchg
push
xchg
cmp
and
lcall
and
cmc
cli
push
ret
push
gs
popf
hlt
mov
xchg
mov
lock
sbb
scas
mov
stos
or
inc
test
das
mov
mov
sbb
addr16
aam
je
xchg
outsl
jecxz
jno
inc
scas
std
hlt
add
loop
pushf
add
or
ficomps
mov
pop
jb
jo
push
push
inc
dec
add
mov
lret
les
out
sub
add
mov
subl
aaa
lock
xor
scas
add
or
jb
mov
pop
inc
mov
inc
adc
dec
mul
pushf
jmp
mul
fcoms
or
movsb
mov
sbb
jg
jecxz
cltd
repz
repnz
mov
in
mov
out
decb
outsl
lret
xchg
jle
ja
dec
xchg
xor
dec
lcall
jo
mov
xchg
stc
or
loop
stos
imul
lods
push
popa
mov
xlat
popl
mov
gs
push
jae
aas
push
inc
mov
inc
shll
mov
fdivrl
push
arpl
ret
mov
out
mov
push
repnz
cmp
in
outsb
mov
inc
js
and
push
inc
dec
es
orl
pmovmskb
push
out
inc
mov
movsl
lret
out
out
in
andb
and
dec
cli
push
fs
gs
mov
leave
push
inc
mov
xorl
test
cs
mov
add
mov
popa
mov
pop
push
dec
jp
mov
imul
pop
or
xor
push
and
or
imul
leave
mov
das
mov
lcall
cwtl
cmp
pusha
add
dec
jb
loope,pt
shrb
outsb
inc
frstor
cli
sbb
cmp
cmpl
cmp
test
sahf
dec
mulb
push
and
test
in
ljmp
cmp
or
push
daa
push
push
and
inc
jno
inc
cmp
sub
in
mov
sti
xchg
dec
aad
das
or
xadd
movsb
adc
jg
rcl
mov
jl
adc
and
xor
fsubs
cmc
adc
xor
mov
or
mov
dec
iret
jle
adc
push
mov
es
cmpsl
push
adc
mov
fwait
sti
jmp
out
scas
lret
call
out
and
push
movsb
mov
outsb
aam
push
cmp
jmp
sub
ret
or
cmp
repz
insb
cwtl
mov
subb
lock
inc
sub
in
inc
das
sbb
shll
xchg
and
nop
fmul
mov
jne
cmpsl
xchg
inc
int
inc
push
or
mov
jns
filds
pop
test
mov
popf
lods
push
push
cmc
mov
and
pushf
xchg
cmp
jge
aam
inc
mov
pop
cwtl
sub
dec
outsb
sahf
popa
xchg
adc
stc
xor
and
mov
adc
pushf
dec
cmp
outsb
call
pop
xchg
inc
mov
push
pop
mov
addb
cltd
je
xor
and
into
add
push
mov
int3
mov
cmp
push
mov
loop
sub
xor
dec
sahf
cmp
push
incl
loope
push
push
pop
int3
insb
hlt
stos
push
call
xor
cwtl
pop
pop
add
or
pop
jmp
push
xor
xchg
lahf
lret
int
pop
pop
enter
adc
lahf
test
rcrb
xor
lea
pop
sbbb
cmp
mov
xor
add
mov
push
push
ss
xchg
pop
cmp
jl
scas
push
loope
mov
jno
jae
mov
fwait
mov
ljmp
bound
jl
inc
mov
repz
shl
ret
jl
ret
mov
sbb
lea
and
push
fbld
sub
push
cmp
fsub
push
dec
lods
popf
jo
sar
out
jnp
jnp
shlb
xchg
clc
mov
mov
lea
pop
popa
pop
icebp
jo
dec
ret
cmc
test
hlt
imul
iret
add
sub
mov
stos
test
in
faddl
aaa
pop
xchg
repz
stos
dec
jne
push
popa
andb
in
mov
test
enter
test
scas
fmull
je
cmp
test
dec
movsl
mov
loopne
dec
jno
shll
addb
repz
test
popa
inc
popf
ljmp
test
jl
ss
rorb
cmp
or
std
shll
stos
lods
sbb
inc
movsl
pop
fsubr
gs
aad
sti
mov
lahf
mov
sbb
icebp
scas
and
and
add
adc
or
testl
cli
loope
call
adc
mov
cmpb
jns
and
xchg
imul
scas
mov
outsb
ds
cmpsl
int
xchg
repnz
lahf
add
add
lea
shlb
js
pop
out
mov
or
js
lock
cmpb
sti
cmp
add
push
push
mov
pop
jl
sub
sahf
xor
mov
mov
mov
sahf
sbb
or
imul
imul
cmp
movsl
dec
dec
rorb
xor
inc
dec
mov
inc
test
fdivl
xchg
inc
xor
mov
nop
xchg
int3
sbb
in
pop
jp
push
sbb
jmp
in
addr16
push
jnp
dec
inc
jecxz
enter
mov
or
stc
sti
popa
push
mov
sub
lods
or
mov
repz
popa
js
enter
or
std
jmp
adc
sbb
pop
std
psubsw
or
add
leave
jne
inc
roll
out
sub
test
jne
mov
mov
ljmp
sub
jmp
mov
outsb
fnstenv
xor
lahf
pop
hlt
mov
in
ss
push
lock
pop
dec
mov
fsubr
push
cmp
mov
xchg
lret
mov
xchg
jno
sahf
cmp
hlt
pop
xor
insl
lret
aas
lods
jns
inc
les
jb
mov
inc
pusha
sbb
pusha
push
stos
movsb
mov
aad
pop
aam
data16
dec
dec
xlat
mov
jno
stos
xchg
pop
and
pop
imul
jbe
popf
pop
jnp
or
loop
into
and
xchg
imul
inc
sub
push
and
or
cmp
push
and
dec
mov
and
dec
and
mov
pushl
push
loop
mov
mov
or
test
mov
or
sub
arpl
cmpl
adc
push
icebp
dec
loopne
cmp
fisttpl
lods
or
add
mov
sbb
ja
ds
cwtl
js
std
les
addl
add
mov
cmpl
daa
pop
cmp
es
adc
or
sub
xchg
jo
xchg
js
popa
imulb
jns
fsubl
push
jno
js
sbbl
fists
mov
dec
adcb
xor
aam
adc
xlat
loopne
sub
xchg
loop
fstpt
ja
rcpps
jbe
xchg
ja
mov
inc
inc
fs
scas
mov
testl
push
lods
aas
pop
xlat
and
cs
and
jg
or
xor
jmp
cmp
sub
in
loop
sbb
mov
mov
push
xchg
add
in
pusha
sarl
sti
jg
mov
lret
inc
ficoms
mov
jecxz
imul
mov
add
add
xchg
adcl
dec
mull
call
mov
lret
das
inc
inc
adc
jle
push
mov
lret
jle
xor
or
mov
mov
repnz
inc
scas
out
mov
flds
or
xchg
mov
jns
repz
loopne
lds
lods
loop
scas
fdivrs
adc
fcmovnbe
stc
lods
pop
outsb
movsb
pop
arpl
enter
popa
add
loope
mov
cmp
dec
call
outsl
lea
into
cmpsb
and
cmp
movsl
inc
sub
lea
add
and
call
mov
dec
mov
cmp
stc
push
leave
push
xchg
sahf
scas
inc
xchg
into
int
repnz
xchg
xchg
mov
adc
mov
cmpsb
sahf
push
cli
or
pop
mulb
std
sarb
and
push
rclb
mov
incb
popa
inc
pop
jl
pushf
das
mov
add
leave
clc
xor
adc
insb
sbbl
dec
xor
push
xor
xchg
scas
insl
inc
push
jb
jbe
inc
jbe
mov
xchg
add
and
and
lret
dec
jg
dec
inc
mov
int
dec
int
lahf
rcrl
and
faddl
sub
push
sub
push
sub
popa
xchg
jae
xchg
fs
fs
xorb
jne
sarl
lret
ret
or
mov
iret
mov
pop
mov
mov
orl
cmpsl
pushf
pop
fists
xchg
and
rorl
xchg
mov
adc
jg
mov
mov
subb
mov
out
xor
les
fsubr
insb
loopne
xchg
adc
xchg
cli
and
xchg
shrl
rcrl
lds
dec
hlt
sbb
sbb
dec
mov
test
cmp
insb
xchg
jo
mov
ret
mov
dec
mov
je
orb
adc
jle
dec
jle
outsb
xor
mov
jno
dec
lea
xor
dec
scas
insl
inc
enter
mov
pop
jp
add
test
jno
xor
dec
inc
dec
push
inc
int
dec
int
pop
rcrl
fistps
imul
sub
adc
popa
xchg
sub
xchg
sbbb
or
or
mov
iret
mov
shll
pop
orl
pop
cltd
xchg
pop
xchg
pop
jl,pt
pop
cwtl
and
jns
pushf
lret
addr16
mov
ljmp
mov
imul
pop
adc
push
fucomip
es
outsb
mov
and
mov
cmp
rcrl
cmp
sbb
nop
add
scas
xor
sub
mov
and
jns
cmp
cmp
aas
add
cmp
jle
fdivp
pop
into
loope
fsubr
popa
xlat
add
out
and
or
dec
cmpb
insb
sbb
xchg
mov
push
xor
pusha
stos
insl
inc
add
jns
gs
adc
test
and
sbb
int3
stos
push
dec
repz
inc
inc
pop
dec
enter
pop
mov
xor
adc
fcoml
mov
sub
call
out
sbb
or
push
push
jne
mov
in
mov
into
add
dec
jge
xor
mov
lea
js
and
movsl
fs
pop
push
mov
sbb
out
inc
data16
bnd
mov
popa
sub
xchg
rorb
sub
fistpl
xor
sub
iret
loopne
sub
adc
cli
push
sub
pushf
inc
mov
mov
xchg
test
adc
xchg
dec
mov
mov
mov
dec
inc
cld
adc
subb
addr16
jnp
ljmp
dec
jle
int
jmp
mull
in
jle
sbb
xor
in
stos
loopne
push
clc
xchg
stos
insl
inc
mov
jno
std
inc
jge
mov
adc
push
mov
and
jae
push
dec
lods
ss
enter
adc
pop
in
loope
pop
fadds
push
xchg
and
dec
stos
das
scas
mov
sbb
sub
adc
mov
jecxz
push
ds
add
or
mov
or
xchg
xchg
pop
inc
sbb
pushf
xchg
aad
mov
js
repnz
shll
and
pusha
daa
aad
js
jmp
pop
icebp
mov
popf
mov
cli
mov
dec
stos
outsl
add
mov
adc
ss
insb
stos
cli
xchg
mov
lcall
add
sub
dec
xchg
fdivrl
jge
sbb
bnd
sub
imul
test
enter
mov
orl
jle
dec
cmc
bound
cld
jmp
or
sbb
lcall
mov
mov
repz
xchg
xor
xlat
or
je,pt
jmp
test
mov
or
mov
pop
js
adc
or
scas
outsb
add
cmp
out
gs
xchg
fiadds
fs
les
cmovg
xchg
aad
loope
js
lret
sub
xor
ret
clc
fnstenv
int3
pop
scas
mov
mov
dec
jns
rcrl
pop
xchg
mov
jmp
mov
mov
mov
mov
enter
cld
xchg
test
push
movsb
scas
fisubl
mov
out
push
fucomip
js
adc
adcl
rcll
sbb
out
mov
lret
scas
pop
xor
lods
lds
lock
and
xchg
fcomi
xchg
add
mov
filds
dec
push
sub
mov
andl
jg
test
jo
enter
xor
scas
movsb
cli
pop
xor
in
test
mov
int
jne
jbe
adc
add
and
es
lods
push
push
xor
add
pop
inc
das
mov
dec
xchg
push
pushf
inc
aam
sub
inc
and
adc
shll
xorb
jne
jae
or
gs
scas
ret
fmull
popf
sbb
icebp
or
add
pminsw
add
cld
cmp
imul
or
inc
stos
mul
movsl
in
cwtl
add
xchg
add
outsb
cmp
lds
int3
decb
stc
lcall
push
test
inc
pushf
call
sti
sbb
sti
scas
insb
pop
mov
imul
jge
imul
rorl
iret
adc
fstps
not
and
in
repnz
lcall
imul
adc
or
jae
addb
fiaddl
out
iret
dec
jecxz
psubsb
push
and
iret
cs
lds
lds
pusha
push
or
pop
inc
sub
outsb
adc
insb
imul
xor
imul
cmp
sar
lds
jae
sub
js
into
mov
call
and
sete
xorb
jne
sub
or
mov
int
jge
mov
mov
mov
mov
bound
pop
cmp
xchg
and
xchg
shll
pop
xor
call
jmp
jbe
fstpt
adcb
subb
mov
inc
lea
fsubl
ss
enter
jo
xchg
cli
jle
cli
xchg
and
xchg
rorl
sbb
sbb
sbb
sbb
test
cwtl
stos
insb
xchg
xor
mov
push
mov
mov
sarb
or
dec
mov
jle
lret
insb
std
stc
insb
xorl
dec
xor
dec
xor
stos
lods
insl
inc
and
inc
jbe
inc
jbe
mov
nop
add
add
outsl
and
loopne
xor
xor
inc
int
dec
int
mov
pop
fdivrs
pop
fadds
sub
and
popa
xchg
and
mov
fs
xchg
fs
xorb
jne
insb
xor
pop
out
mov
int
xor
mov
popa
mov
pop
jnp
jmp
cwtl
add
mov
or
data16
shr
add
jno
inc
pop
cwtl
push
hlt
jmp
mov
push
mov
js
test
out
and
mov
xor
inc
pop
std
and
mov
xchg
sub
ds
xchg
add
rcrl
rcrb
insl
inc
or
outsl
mov
xchg
pusha
sub
xchg
dec
insb
xchg
in
outsb
xchg
mov
fnstcw
mov
mov
or
dec
mov
jge
addb
daa
mov
mov
mov
cmp
jl
iret
jle
mov
andl
pop
jg
adc
repnz
je
pop
cmp
xor
in
sbb
pop
mov
jne
and
lods
sub
jbe
arpl
clc
mov
jl
mov
iret
sub
sbb
scas
mov
div
out
outsl
mov
andb
jo
push
xchg
mov
lret
stos
sbb
and
add
out
sub
es
cmp
js
or
dec
subb
dec
cmp
adc
fidivrs
lods
dec
pushf
cli
xchg
xchg
ja
inc
call
gs
call
shlb
and
std
mov
fistpll
out
sahf
in
ss
adc
mov
les
or
push
daa
xor
pop
xor
cmp
pop
lahf
or
in
vmovd
jge
push
mov
dec
or
sub
mov
nop
sub
mov
and
mov
in
in
pop
jl
dec
dec
subb
fcmovne
mov
shrl
xor
loop
lods
add
pop
or
popa
pop
and
inc
ret
addb
mov
cmpl
pusha
push
insl
out
push
mov
hlt
adc
sbb
lcall
outsb
or
xor
dec
jmp
and
and
push
sub
adc
shlb
push
or
clc
cmp
adc
sub
in
xchg
cmp
cld
xchg
rorl
xchg
std
pop
mov
sbb
rcrb
pop
adc
mov
and
pushl
cs
mov
adc
fisttps
loopne
xchg
mov
mov
or
adc
stos
dec
jle
in
out
popa
insb
andl
sbb
gs
pushf
out
fdivrs
incb
jp
in
cld
fmuls
repnz
mov
push
cs
xchg
xor
test
push
lds
inc
or
dec
mov
push
notl
and
or
and
stos
das
mov
bound
imull
adc
clc
xorl
mov
inc
lods
mov
xchg
pusha
mov
movsl
dec
jne
sbb
nop
lea
aam
jae
rcr
mov
xchg
sbb
fcom
push
mov
sahf
int
test
xlat
cwtl
fwait
adc
in
roll
mov
sub
inc
mov
add
jo
push
mov
jmp
ffree
push
jae
into
sub
call
pop
rcrl
popf
inc
ret
adc
fcompl
and
dec
and
in
cld
test
sbb
xor
orb
mov
mov
cmp
faddp
sbb
cmp
shll
loop
outsb
in
test
mov
sahf
sarb
or
insb
cld
pop
dec
and
sahf
mov
mov
pop
insl
and
lods
mov
jg
dec
sbb
dec
mov
movsl
inc
xchg
lcall
push
shlb
xchg
and
lods
push
cs
mov
bound
add
xorb
inc
or
jbe
dec
add
lret
mov
or
rclb
mov
add
int3
shlb
push
daa
rorl
rcrl
stos
pop
leave
and
shrb
test
xchg
mov
xchg
popa
dec
jne
jge
aas
pop
out
or
mov
pusha
bound
sbb
add
pusha
sarl
sub
and
arpl
lret
ds
jp
jge
bswap
out
or
and
push
dec
lea
mov
inc
adc
inc
lahf
in
in
arpl
inc
sub
ret
repz
mov
inc
pop
or
outsb
jg
out
leave
outsb
push
xchg
mov
ja
cs
addl
and
cmp
xorb
or
fmuls
js
sub
out
pop
cmpsb
bound
jo
mov
mov
lcall
shll
loope
in
jbe
fistps
jmp
and
data16
sub
lea
add
dec
dec
clc
into
mov
sarb
or
rcl
lcall
ficoms
push
lret
roll
iret
mov
nop
loopne
or
aaa
lea
mov
lea
repz
addr16
ja
mov
adc
pop
int
xor
mov
int3
in
jns
and
adc
lret
lcall
scas
xor
outsb
mov
rsm
sbb
jmp
addr16
push
pop
cmp
js
dec
mov
not
subb
jns
movsl
mov
pop
push
mov
and
jae
insb
pop
cmp
sbb
mov
push
inc
mov
aad
xchg
inc
jbe
cwtl
xor
mov
dec
xor
jg
dec
icebp
mov
mov
pop
adc
sub
sbb
push
add
or
pop
in
cmp
dec
in
and
xor
adc
push
xchg
jl
subl
enter
xor
jns
or
cmp
cwtl
sbb
cmpsb
scas
outsl
rcr
dec
push
fnstsw
mov
pop
mov
sub
pop
loopne
xchg
arpl
lret
addr16
jns
nop
cwtl
scas
sti
test
sub
mov
rclb
shll
ss
loopne
push
mov
jae
sahf
jno
mov
popf
inc
pop
sahf
mov
mov
adc
xor
lock
sbb
push
pop
push
test
cmpsb
andb
or
js
in
mov
or
orb
push
xor
lods
dec
outsl
mov
push
data16
insb
adc
das
jecxz
orl
mov
push
push
movsl
sahf
push
sub
lret
mov
add
mov
add
test
jne
test
inc
push
inc
int3
mov
into
xor
inc
push
sbb
add
pop
sub
mov
leave
insl
sbb
xlat
loop
or
or
in
cmp
std
jne
add
int
pop
cmp
mov
inc
cmp
orl
mov
add
cltd
pop
jecxz
mov
scas
xlat
insb
leave
lcall
add
sub
mul
cmp
add
clc
push
aas
into
call
lds
xor
or
and
jecxz
sub
and
sbb
loopne
mov
loope
push
movsl
repnz
xchg
leave
sbb
shll
and
lcall
nop
clc
push
pop
popa
sub
lock
adc
outsb
in
dec
sbb
in
mov
xchg
ss
or
orl
dec
mov
sar
dec
jle
adc
cmpsl
outsb
int
loope
mov
orl
cwtl
mov
insl
lret
repnz
push
mov
dec
push
mov
cs
arpl
and
int
imul
xchg
inc
mov
jmp
nop
ret
pop
push
add
insb
mov
sbb
mov
cmp
lds
mov
lret
notb
cmp
xor
loope
mov
mov
mov
cwtl
pop
lds
xchg
and
and
xor
mov
sub
adc
push
adc
out
fdivs
out
lods
mov
arpl
ss
mov
mov
xchg
cli
dec
testl
ja
lods
jl
ficompl
dec
push
pop
sub
or
outsl
pop
xlat
dec
test
and
xchg
mov
hlt
push
dec
mov
dec
mov
pop
mov
or
gs
dec
ljmp
notl
insb
xchg
insb
cmp
orl
popa
add
dec
scas
insl
shlb
jbe
inc
jbe
add
insb
sbb
push
cmp
insb
pop
out
xor
nop
notb
cmc
fidivl
mov
imul
insb
and
xchg
int3
xchg
repnz
addr16
aam
rorb
jle
or
or
popf
stos
push
sub
cmpb
fldt
sub
or
inc
adc
add
or
dec
adc
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
