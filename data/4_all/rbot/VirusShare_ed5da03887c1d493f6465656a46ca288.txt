outsb
push
sub
push
sti
test
pushf
and
jb
push
dec
pushf
iret
lods
in
in
sub
daa
arpl
push
mov
int3
sahf
mov
mov
and
add
out
je
movsl
or
sbb
out
or
xchg
and
sarb
mov
das
pop
cltd
adc
jecxz
aaa
imul
out
movl
add
ficoms
cmpsb
cmp
mov
test
sbb
insl
pop
and
jg
mov
scas
inc
xor
lret
mov
jp
xchg
xchg
scas
xchg
dec
and
pop
ja
dec
dec
adc
jns
inc
mov
jb
out
inc
mov
rclb
out
mov
jno
mov
je
xor
inc
pop
push
stc
xchg
xor
sbb
inc
pushf
push
cmp
mov
sbb
lret
sar
and
cmp
sub
lahf
mov
andb
sub
in
jbe
imul
mov
push
jle
add
popf
add
mov
and
arpl
mov
in
ret
iret
idivb
nop
jl
pop
sub
repnz
dec
pushf
mov
push
mov
cmp
inc
aad
neg
pop
pop
jl
js
mov
push
mov
roll
pop
sub
cmp
inc
xchg
mov
jb
add
outsb
mov
sub
mov
call
push
inc
stos
push
adc
popa
inc
jne
fcmovne
mov
xchg
sbb
cld
jb
pop
sbb
popf
xlat
sbb
das
mov
mov
push
mov
hlt
mov
jno
pop
jno
jbe
or
sbb
xchg
xchg
and
inc
imul
push
xchg
xor
mov
int
mov
push
lock
sbb
sarb
pop
scas
adc
push
mov
ss
aam
inc
cmp
scas
and
xorl
jecxz
out
stc
jno
test
test
mov
mov
aas
ss
cmp
push
subb
mov
lods
lret
or
in
inc
repz
out
and
sub
mov
cmc
xchg
mov
inc
push
xchg
test
xchg
dec
ret
xlat
mov
jecxz
lods
lret
ljmp
mov
out
int3
mov
xor
pop
cmp
int
and
mov
ljmp
jp
mov
leave
push
lods
in
loope
test
pop
push
fcoms
loop
mov
cmpsb
in
outsb
mov
mov
lds
jg
out
mov
les
subb
jecxz
jmp
out
test
cmp
scas
enter
ljmp
test
stos
jge
repnz
or
imulb
test
adc
sbb
in
sahf
jg
push
arpl
push
xchg
ds
int3
dec
movl
sub
jecxz
pop
mov
pusha
sbb
mov
popf
add
fcomi
mov
icebp
mov
fs
xchg
push
insl
sub
test
es
and
lods
mov
movsl
adc
insb
enter
test
data16
xchg
add
xor
hlt
sub
in
xchg
ret
aas
pop
jge
cmp
insl
pushf
andl
sbb
test
fistps
gs
pop
inc
popa
movsl
xchg
jns
fnstsw
mov
xchg
cwtl
jle
push
outsl
mov
nop
or
mov
dec
adc
and
in
popa
push
xchg
mov
or
in
daa
call
loop
js
cld
inc
bound
decl
dec
dec
xchg
mov
cwtl
lea
test
ja
xor
popa
in
pop
lea
ret
lret
icebp
dec
jno
pop
adc
and
mov
inc
fsubl
jne
lret
ret
pop
push
cs
hlt
pop
fstl
popf
cmpsb
add
je
lods
lahf
neg
sbb
mov
fwait
inc
inc
sbb
sbb
cltd
add
mov
js
or
popf
test
sbb
mov
xchg
and
sbb
mov
enter
mov
lock
lds
loopne
xchg
pop
push
jns
push
js
stos
push
jns
lods
xor
xchg
mov
pop
mov
dec
xchg
outsb
lret
and
add
icebp
jae
aaa
mov
js
cmp
cmpsb
dec
jno
pop
cli
inc
pushf
mov
nop
nop
fldcw
test
jns
clc
push
mov
xchg
inc
dec
out
lods
sahf
stos
shl
enter
and
jge
nop
shrl
mov
mov
cli
adc
jge
push
jne
push
mov
push
mov
cld
mov
cmp
mov
pop
mov
push
ret
cmp
inc
xchg
repz
outsl
sbb
call
push
dec
aad
xchg
scas
push
push
in
xchg
in
add
xchg
push
xor
je
call
dec
and
and
pop
cmpb
gs
sbb
jle
lea
gs
pop
aam
sbb
or
int3
test
mov
jp
lods
ret
push
imul
imul
call
pop
mov
call
and
andl
call
ds
jp
insb
and
add
fidivrl
jb
stos
inc
lret
dec
inc
lods
cmpsb
mov
add
cmpsl
cmpsb
or
out
nop
sub
inc
lret
ja
pop
xor
cmc
sbb
dec
jl
mov
lret
pop
sbb
pop
js
push
sub
pop
xor
xchg
push
test
pop
push
push
push
push
lea
push
push
push
push
js
push
or
pop
je
push
push
pop
pop
clc
nop
sub
mov
lea
test
push
pop
sub
jno
push
ja
shr
pop
loop
jecxz
mov
jb
fcmovne
cs
pop
dec
into
loopne
ja
imul
push
add
or
nop
jnp
and
push
call
sbb
sub
sub
jnp
outsb
in
pop
js
out
enter
sbbb
mov
testl
add
call
jo
push
dec
pop
and
or
cmp
mov
inc
inc
inc
inc
jl
or
push
add
pop
xchg
push
call
pusha
sbb
add
pop
mov
cli
sahf
movsl
jnp
push
jbe
lcall
pop
pop
lea
and
push
jp
push
add
pop
pop
and
and
add
cld
xor
clc
push
add
pop
ja
cmp
nop
js
shr
rol
or
push
pop
shl
cld
stc
lea
mov
loop
jecxz
loopne
popf
push
scas
jp
call
jb
cmp
aam
imul
hlt
mov
and
inc
sub
dec
inc
jl
sub
clc
clc
push
jo
push
test
pop
pop
cld
cld
mov
shr
test
je
test
push
push
add
pop
pop
cmp
push
inc
pop
jne
jnp
xor
ror
push
mov
add
pop
loop
jecxz
adc
push
icebp
iret
aaa
or
xlat
imulb
test
lahf
adc
pop
inc
repz
test
test
call
ss
add
add
test
xchg
adc
daa
xor
mov
add
pop
push
pushl
xor
pop
pop
sub
push
push
and
pop
pop
or
stc
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
push
push
ja
push
add
pop
pop
rol
jp
xor
ja
push
or
pop
push
mov
pop
inc
push
dec
inc
pop
push
call
pop
jae
int3
jbe
dec
insb
dec
ljmp
jb
fimull
jge
inc
add
mov
dec
mov
adc
jp
roll
fprem1
mov
bound
out
rcrl
jecxz
and
mov
lcall
daa
mov
pop
push
bound
xor
hlt
in
cmp
data16
xchg
mov
sbb
or
mov
inc
mov
std
mov
mov
dec
sub
cs
pop
dec
jne
mov
xor
push
movzbl
push
push
and
pop
pop
jne
push
ror
pop
push
add
push
and
pop
jl
push
mov
pop
clc
jno
push
and
pop
test
push
push
pop
pop
push
jb
and
pop
push
jb
jae
jne
or
pop
jnp
jbe
add
cmp
loop
pop
jge
cmc
and
test
cld
test
push
push
test
pop
pop
push
sub
pop
push
pop
cmc
dec
jne
sub
push
call
xor
jnp
mov
ss
add
sahf
sarl
bswap
add
adc
sbb
ss
push
aaa
movsb
xorl
scas
and
into
and
or
pop
mov
and
mov
popa
cmp
add
fisttpll
mov
sub
lds
imul
cld
push
icebp
sbb
fadd
sbb
jae
xor
pop
adc
sbb
or
pop
cmp
pop
push
cmp
mov
adc
add
pop
cmp
dec
stos
ss
mov
leave
repnz
fadds
pop
test
push
inc
adc
aas
push
icebp
push
mov
imul
pop
fidivs
mov
divl
adc
or
enter
cmpsb
testb
lahf
int3
mov
pop
or
mov
in
clc
and
inc
cmpsb
dec
add
sti
loope
outsl
dec
ja
adc
mov
mov
movsl
int3
jno
sti
popa
das
mov
enter
mov
ret
jo
mov
shl
das
xchg
repz
arpl
js
pop
mov
sbb
js
mov
dec
js
loope
rcrl
rorl
mov
aam
dec
lret
jno
mov
mov
push
call
imul
or
mov
ja
insl
jmp
mov
das
jno
stos
adc
cmp
and
pop
mov
pop
pop
ja
sbb
and
pop
adc
rorl
xchg
push
mov
add
addl
xchg
jecxz
mov
aaa
loop
sti
jb
and
xor
cmp
stc
xor
int3
mov
popl
mov
xor
and
fcompl
dec
outsl
addl
ljmp
mov
push
fcomip
shl
ret
sahf
test
mov
push
sub
in
lahf
mov
jo
push
push
bound
pcmpeqw
mov
pop
mov
add
stc
int3
ret
sbbl
mov
js,pt
cld
xchg
pop
and
jns
dec
xor
sahf
mov
mov
or
sub
mov
jmp
inc
insl
bound
mull
pop
sbb
popf
scas
lds
sbb
ja
lret
push
lods
jno
push
dec
aaa
int3
ret
mov
bound
leave
testl
jg
orb
lds
sub
xor
xor
icebp
rcr
aaa
scas
jmp
int
testb
out
sub
and
and
cltd
fldenv
add
inc
or
aam
ljmp
orb
lret
xchg
mov
stos
mov
mov
jae
cmpsl
fwait
loop
cmp
ja
mov
cwtl
mov
jne
push
int
dec
cmpsl
lock
imull
adc
mov
movsb
sub
js
pop
push
or
lcall
int
imul
lea
mov
mov
xchg
ret
les
or
mov
out
int
jp
negb
push
jno
and
and
jb
stos
push
loop
jge
js
nop
jp
jecxz
aam
mov
push
aam
fnstcw
clc
xchg
rolb
adc
jle
lret
shl
dec
js,pn
roll
adcl
cmp
mov
cmp
bound
xchg
lea
sbb
and
cmpsl
ds
jo
out
loop
jg
js
loop
or
idivw
cmp
xchg
int
in
bound
ret
sbb
sti
and
clc
push
mov
push
or
push
js
jecxz
or
dec
sbb
pop
xor
bound
and
and
inc
stos
dec
outsb
add
repz
mov
mov
mov
ljmp
arpl
push
and
loopne
or
sahf
push
mov
sbb
jecxz
loop
js
jne
or
bndldx
int
int
mov
arpl
ja
add
js
and
mov
jmp
xor
jbe
and
lahf
stos
idivb
insl
mov
inc
dec
cmpsb
jecxz
cmpsb
adc
mov
insb
push
and
sub
popf
mov
cmp
or
out
lcall
iret
xchg
xor
jmp
mov
mov
pusha
mov
jecxz
aaa
mov
out
or
into
lds
add
and
fwait
lock
and
inc
inc
mov
cwtl
cld
movlhps
gs
sub
out
mov
jae
cli
dec
in
sbb
jmp
leave
adc
jnp
fwait
jge
stos
adc
add
push
daa
mov
pop
add
cwtl
in
push
sbb
shl
insl
nop
mov
arpl
sbb
cmp
insb
inc
fisubrs
add
sub
inc
lea
js
pushf
sar
ss
sarl
sbb
in
xor
loope
lea
sbb
push
out
cmp
jns
fdivs
sub
xchg
cmp
popa
sbb
inc
sahf
int
dec
andl
adc
sbb
aaa
call
jae
imul
push
stos
ljmp
mov
cmp
rclb
aas
xor
out
aam
das
scas
jp
ljmp
aaa
or
out
push
cmpsb
insl
clc
xchg
popf
ljmp
pusha
or
roll
sbb
jb
das
inc
loop
repz
sti
bound
cs
fcoml
aas
mov
add
pop
xor
out
stc
enter
pop
in
adc
push
inc
jg
push
popf
xor
shrb
push
or
sarl
xor
sub
dec
push
jge
mov
ret
rcrb
pop
xchg
push
adc
xchg
pop
mov
mov
cltd
test
xlat
les
pop
adc
scas
dec
out
stos
mov
stos
nop
sub
daa
cmp
add
and
iret
lds
lret
fcmove
push
mov
mov
loope
push
mov
jp
adc
lret
rcl
into
or
jbe
push
je
fisubrl
sti
mov
repnz
push
xchg
jge
andl
mov
cs
mov
lret
push
jne
call
out
fs
addb
sub
ret
cmp
movsb
outsb
icebp
add
or
inc
fimull
mov
loope
cld
xlat
mov
sti
test
push
arpl
adc
sub
pop
push
push
out
add
push
xor
fwait
xlat
or
mov
std
add
fiadds
std
sbb
cli
rcrb
cmpsb
inc
sbb
jmp
jp
mov
push
shll
fs
pop
cli
scas
mov
jbe
jmp
das
outsl
mov
into
mull
gs
aaa
insb
add
push
les
flds
cli
dec
out
insl
and
cltd
pop
aad
xor
pop
xor
push
sub
fs
push
inc
cmp
add
insl
test
call
xorl
in
int
inc
sbb
and
add
inc
scas
pop
adcl
mov
lret
sub
xchg
sbb
inc
add
dec
sub
push
or
bound
mov
stos
inc
mov
cmp
lea
add
jo
push
or
stos
adc
js
mov
movsb
cmp
mov
scas
mov
into
jmp
mov
mov
adc
adc
adc
xchg
stos
cmp
ljmp
hlt
mov
or
mov
test
test
and
loope
les
add
pop
xchg
jnp
mov
cmp
mov
mulb
cli
ret
mov
scas
cmp
test
inc
insb
sub
ret
inc
scas
push
aam
mov
in
jg
sarb
mov
mov
xchg
cmpsb
ljmp
fdivl
jae
in
mov
fwait
aad
stc
adc
jbe
pop
mov
imulb
mov
sbb
outsl
aad
push
xlat
xchg
in
lcall
jb
mov
jns
inc
adc
cli
inc
subl
aam
sub
push
pmullw
add
and
int
add
rclb
adc
and
in
lcall
sub
sti
js
cmp
push
mov
push
xchg
mov
mov
mov
and
aad
scas
sbb
stos
ljmp
js
nopl
les
fildl
shlb
pop
in
and
inc
cs
add
cld
dec
xchg
scas
stos
xchg
xchg
movsl
sbb
jno
mov
xchg
imul
pop
das
and
cwtl
jg
and
adc
mov
pop
mov
ret
adc
push
test
pop
jmp
and
push
cmp
jbe
inc
pop
and
mov
jo
sub
and
sbb
sub
repz
stc
adc
shr
push
mov
mov
in
pop
lods
push
jb
sbb
das
stos
arpl
xchg
sub
mov
mov
jo
jo
icebp
mov
jmp
mov
adc
add
xlat
adc
xor
sahf
xor
cmp
pop
sti
lcall
dec
xchg
mov
pushf
imulb
push
lcall
and
fists
in
mov
push
fdivrp
or
mov
sub
cltd
or
repz
iret
or
sbbb
cmp
adc
lahf
sub
repz
sarl
dec
es
and
inc
or
jnp
xchg
mov
test
insb
mov
cs
ret
xchg
mov
stc
scas
imul
cs
daa
mov
xor
inc
inc
dec
test
mov
xlat
fcomip
sub
adc
lds
adc
xor
pop
shr
cmpsl
popa
fiadds
dec
out
rorb
aam
insb
loope
xor
push
add
mov
scas
push
rcl
push
stos
sti
xor
dec
cmp
bound
push
xchg
ret
sub
shll
pop
sbb
js
sbb
mov
hlt
loope
jp
or
lods
and
fidivrs
or
add
push
gs
insl
fdivrs
pop
stos
mov
mov
push
pop
jb
add
sbb
mov
out
dec
sbb
mov
std
push
push
or
mov
pop
sub
out
jecxz
sti
jmp
sti
stc
pop
xlat
imul
mov
jge
cmp
imull
cmp
mov
inc
pop
rolb
outsb
or
test
sub
cltd
test
testb
cmc
mov
and
mov
push
push
repz
mov
mov
sub
lea
mov
arpl
and
clc
not
pushf
testl
in
cmp
icebp
dec
xor
int
into
loope
or
add
dec
jns
enter
sbbb
jo
jnp,pt
add
out
inc
cmc
inc
stos
pop
mov
mov
dec
outsb
test
pop
pop
cwtl
sti
inc
push
and
sbb
cwtl
sbb
shlb
sbb
pop
les
xchg
out
sub
xchg
faddp
loopne
push
and
mov
push
or
popa
mov
lods
push
loopne
inc
cmpsl
in
jb
push
mov
fdivrs
pop
in
cltd
sbb
scas
add
aaa
repnz
cmpsl
sub
mov
stos
dec
jl
popa
dec
test
bound
push
icebp
rolb
and
mov
inc
inc
cmpsl
repz
add
out
and
adc
mov
adc
xchg
push
lea
outsl
std
xchg
aas
mov
scas
mov
mov
jle
imul
negl
negb
inc
clc
add
das
inc
push
mov
lret
sbb
scas
lock
les
movsl
cmp
out
cmp
ss
das
testb
cmp
xchg
jae
mov
outsb
sti
into
push
push
ljmp
aas
sbb
add
mov
adcb
push
scas
adc
xor
push
jbe
loope
and
inc
sub
stos
lea
test
or
and
xor
js
pop
pushf
icebp
in
xchg
stc
lock
scas
or
scas
and
jo
cmp
je
mov
sbb
iret
shrl
es
aad
ficomps
add
hlt
push
mov
je
enter
mov
rcrl
cmp
pop
aad
jb
pop
pop
call
xchg
clc
stos
sarl
push
fsubrl
and
mov
in
leave
mov
jb
iret
mov
ds
adc
dec
cmpsl
lods
lea
in
sub
sub
dec
stos
add
and
add
test
iret
outsb
pushf
shrl
sbb
dec
cltd
jnp
lods
lea
jb
lret
mov
filds
jno
adc
xor
pushf
or
out
pushf
pusha
adc
insl
mov
dec
call
pcmpgtd
enter
test
int3
sbb
mov
shlb
test
sarl
xchg
ljmp
or
xchg
dec
sbb
xchg
push
lods
mov
testb
push
lods
adc
mov
jne
mov
sub
idivl
jecxz
popf
movsb
dec
jo
push
clc
adc
mov
jo
bswap
push
std
je
jmp
push
or
mov
push
mov
adc
mulb
lds
aad
cli
inc
pop
sbb
loopne
pop
cmp
nop
jae
inc
xor
cli
pop
and
movsl
shr
sbb
mov
push
add
scas
ret
icebp
fistl
jb
cmp
pop
out
xor
cwtl
imul
pop
stos
xor
or
repnz
mov
repnz
mov
cmp
sub
push
outsl
push
aad
call
jno
lahf
mov
out
shrl
ljmp
mov
add
stos
sbb
cmpb
arpl
adc
mov
rcrl
dec
jl
sbb
seta
fidivrs
sub
push
mov
out
dec
out
shll
repz
out
or
mov
xchg
les
mov
ljmp
push
aam
mov
xchg
popa
test
push
gs
cmpsb
push
mov
mov
fcomps
push
xor
pop
push
fstpl
or
xchg
cs
imul
sub
xor
jno
mov
daa
mov
mov
mov
xchg
pop
xchg
push
xchg
arpl
xchg
ja
mov
shrb
lods
push
outsb
or
lret
pusha
fisttpl
xor
sahf
sar
test
arpl
sbb
xor
cmp
jno
ss
sub
adc
adc
or
or
xor
xchg
sbb
fwait
clc
or
cli
pop
scas
fwait
sbb
mov
imul
sbb
cs
pop
stos
sbb
add
adc
xchg
cwtl
mov
adc
lods
jmp
packssdw
imul
int3
lds
das
test
inc
icebp
fisubs
js
sarl
int3
std
inc
sub
xlat
adc
mov
pop
inc
adc
dec
push
jnp
jns
stos
pop
dec
mov
ret
gs
test
dec
aaa
testb
xor
and
pop
and
jge
subb
jno
lods
ds
or
imul
pop
into
outsl
inc
mov
jae
movsb
in
xor
add
aas
mov
jle
cmpb
adc
stos
lock
test
ja
dec
aaa
cli
stc
dec
pop
or
pop
dec
dec
cwtl
xchg
fstpt
out
cmpsl
pop
jae
stos
lods
rcrl
stos
pop
xchg
pop
jg
das
lret
test
push
xchg
fwait
xor
mov
jae
adc
mov
jmp
inc
int3
mov
mov
shll
dec
jnp
mov
inc
adcl
fwait
cmp
jle
push
mov
in
dec
mov
dec
pop
icebp
imul
inc
inc
pop
inc
or
incb
fistps
adc
arpl
adc
jmp
or
clc
push
cmpl
cmp
cmp
out
icebp
push
sub
xchg
lcall
cmpsb
inc
dec
push
xchg
adc
sub
and
outsb
jae
lahf
sub
stc
cmp
mov
dec
push
push
ss
xor
cmc
in
and
rol
mov
pop
adcb
shlb
fnstcw
cmpsb
mov
sub
mov
lcall
push
loopne
mov
cmp
inc
xchg
adc
add
sbb
mov
xchg
repnz
xchg
lcall
and
test
cmp
hlt
fistpl
lock
dec
sub
or
push
out
add
ficompl
sub
pop
inc
cld
cmpsl
dec
jle
aaa
mov
push
in
ds
add
fmul
sub
mov
pop
pop
scas
sbb
and
xor
xor
pop
push
test
jmp
adc
xor
push
jge
out
test
das
dec
adc
rol
mov
xchg
fs
mov
mov
mov
mov
andb
mov
maskmovq
divl
jmp
bound
shrl
das
sub
xchg
sbb
das
fisttpl
dec
mov
lods
sbb
push
std
cmp
cmpsl
pop
lea
lret
js
adc
xor
mov
adc
loope
enter
insb
testb
lock
cmp
ja
dec
inc
xchg
mov
lods
std
shr
scas
lret
mov
ret
in
sti
clc
cs
lods
dec
lret
loope
push
pop
push
loop
rorb
sbb
mov
out
call
out
test
data16
fwait
mov
cmp
adc
jb
mov
les
sbb
mov
xor
call
imul
dec
out
es
pop
mov
xchg
xor
push
push
dec
enter
imul
xor
mov
popf
lahf
loop
xchg
test
dec
inc
aad
fwait
pop
push
insb
mov
add
pop
outsb
cmp
daa
pop
mov
cltd
fsubrl
inc
push
add
adc
hlt
adc
movsb
dec
mov
and
jg
pop
fistpll
xor
cmp
clc
fs
sahf
sub
js
subb
mov
mov
outsl
sbb
add
jecxz
insb
cmpsl
popf
and
mov
stos
lahf
push
xchg
jg
mov
pop
into
add
ja
insb
pop
push
push
xor
cmpsb
loop
popa
pusha
jecxz
sbb
out
sbb
clc
add
jns
pop
ret
jo
and
clc
sub
lret
and
in
xorl
in
and
or
mov
sbb
test
mov
mov
popa
test
test
adc
push
and
pop
stos
mov
sub
test
cmpsb
shl
mov
outsb
ljmp
push
sahf
insl
ljmp
and
push
push
push
rolb
lahf
mov
jo
test
addl
mov
popl
aas
iret
loop
imul
add
hlt
mov
mov
sbbb
fdiv
sbb
pushf
pop
das
xchg
and
pushf
scas
mov
loopew
test
xchg
mov
cmpsl
imul
addr16
push
rorl
andl
test
data16
xchg
rcll
mov
lds
int
jecxz
pop
ds
push
jmp
nop
mov
xchg
xchg
enter
aaa
testl
inc
lret
call
lea
and
add
ret
or
test
test
mov
in
dec
movsb
inc
jbe
in
enter
adc
mov
movsl
jmp
xchg
cmc
ja
aaa
sbb
lea
sti
mov
adc
lret
jno
sahf
fistl
xchg
addl
sbb
mov
sbb
es
add
dec
idiv
or
mov
add
cmpsl
add
sbb
in
cmp
or
js
test
mov
push
into
xor
push
push
sub
rclb
xchg
fists
xchg
in
dec
fs
dec
inc
cwtl
jne
cltd
lea
ret
test
sbb
pop
out
push
xor
dec
test
sti
xchg
mov
mov
push
push
repz
xlat
jbe
rcl
push
cmp
xor
jp
cmp
sub
aad
xchg
and
mov
jb
cmpl
aas
out
sub
lcall
add
push
pop
xchg
sub
gs
sub
jmp
xchg
mov
mov
sbb
sti
imul
push
adc
enter
mov
or
mov
cwtl
out
push
gs
xchg
adc
push
cwtl
xor
cmp
sub
icebp
loop
loopne
jl
pushf
inc
hlt
aam
mov
inc
popf
mov
jae
jecxz
stc
int
loop
cmc
fsubr
test
jle
mov
fchs
xchg
jle
jmp
sbb
addr16
sbb
imul
jb
mov
sub
out
mov
je
push
cld
loope
pop
das
popf
pop
in
push
loopne
test
pop
mov
gs
ljmp
push
cmp
dec
test
xchg
fcoms
jns
mov
add
pushf
popa
dec
js
dec
push
mov
push
aad
pop
sub
lods
stos
dec
dec
adc
fmul
stos
pop
ljmp
fcoml
fidivl
je
xorb
mov
int3
jmp
mov
das
inc
cmc
lea
mov
into
test
pop
sbb
in
ljmp
dec
jnp
test
sbb
xor
sbb
xchg
addr16
popf
xchg
loopne
int
out
or
push
insl
out
lea
or
cltd
jns
jecxz
ret
lock
sub
dec
fs
fdivp
dec
inc
divb
push
shr
cmpsl
xor
mov
fs
adc
nop
cmpsl
loopne
xor
push
ret
aas
movsl
jecxz
sub
jb
bswap
movsb
lods
lahf
and
fistpll
adc
scas
inc
sbb
bnd
outsl
outsb
lret
mov
mov
inc
imulb
stos
jne
fcompl
or
sbb
xchg
adc
or
push
jbe
xchg
xchg
inc
push
fimuls
mov
cld
pop
paddsw
les
xor
dec
push
lahf
pop
jmp
in
push
scas
inc
cmp
sub
dec
je
aam
xor
adc
aam
call
fimuls
sahf
sub
lret
imul
sti
sbb
stc
popl
push
dec
jecxz
fists
cltd
aad
push
in
cmpsl
in
adcl
pusha
out
sbb
add
jp
pop
cld
push
pop
sub
rclb
push
dec
hlt
repnz
in
ret
push
mov
cmp
ror
jbe
dec
jle
mov
xchg
or
dec
movsb
pop
dec
shlb
cs
scas
call
mov
call
into
pop
test
push
adc
mov
mov
cltd
push
lods
adc
sbb
dec
stos
push
mov
mov
jns
cwtl
or
sahf
sbb
ret
mov
out
jmp
xchg
lock
sub
inc
fwait
sbb
out
dec
jge
loopne
dec
inc
pusha
mov
stos
sbb
pop
clc
out
std
push
movsb
mov
test
jbe
cmpsb
sub
jle
sarl
cli
leave
xor
repnz
xorb
out
outsl
sahf
push
lods
shl
out
daa
pop
out
arpl
push
sub
sbbb
loop
mov
add
xor
fs
mov
mov
mov
and
sbb
or
mov
and
pushf
and
inc
and
mov
sbb
add
cmpsb
ret
aaa
sarb
fdivp
jbe
cwtl
jae
hlt
inc
scas
jp
pop
dec
pop
fcom
push
aas
hlt
xchg
adc
cmp
stos
sbb
cmc
das
in
or
pop
and
push
and
ss
jb
fldenv
test
addr16
mov
insl
ret
jno
push
xchg
fimuls
mov
movsb
test
sti
mov
jbe
lcall
cltd
lcall
push
pop
jns
dec
push
scas
movsb
loop
stos
add
lds
orb
pop
and
adc
cmp
imul
sub
push
add
pop
mov
sub
into
js
int3
data16
xchg
push
cltd
dec
lahf
mov
lahf
fisttps
pop
inc
mov
cmp
gs
loope
xchg
jg
notl
clc
enter
mov
mov
insl
mov
sub
sub
mov
dec
cs
adc
pop
xchg
int
or
mov
lods
ja
sbb
pop
lret
xchg
jne
jl
int3
add
pop
fidivrs
sbb
or
les
push
dec
mov
or
das
cmp
cwtl
and
add
jns
dec
inc
push
outsb
test
jnp
enter
fcmovnb
enter
ja
push
add
shrb
mov
pop
aad
jl
imul
jno
cmpsb
xchg
daa
xor
icebp
cli
inc
add
sbb
lret
xor
push
adc
iret
sbb
fistpll
inc
aad
aaa
jns
lret
inc
jle
pusha
push
push
jp
dec
inc
mov
mov
mov
jle
fs
xchg
jo
and
cmp
rclb
mov
mov
mov
int
incl
fwait
std
ret
jl
shrb
lcall
pop
adc
xchg
cmpsb
fcomps
add
pop
les
cmp
je
and
pop
cmp
out
and
sbb
jecxz
insl
iret
cmpl
push
push
jmp
jae
mov
cmp
add
loop
dec
ds
mov
jns
or
ret
or
lcall
test
inc
xchg
xchg
xchg
lret
xchg
cld
rolb
adc
aad
sbb
stc
jg
mov
pop
cmp
repnz
outsb
mov
dec
test
out
xchg
loop
pushf
add
sub
push
cmpsb
ror
jbe
shll
std
fisttpll
das
icebp
dec
jg
xchg
lret
cwtl
jmp
int
sbb
mov
fistpl
cmp
cmp
xor
inc
rolb
out
test
lcall
arpl
arpl
roll
dec
fwait
aam
sub
ficompl
fdivl
cmp
add
or
lcall
loopne
xor
xchg
divb
ds
fisubrl
mov
xchg
sub
leave
pop
aad
xor
pop
push
xchg
adc
add
mov
mov
hlt
jns
xor
iret
mov
or
cltd
add
cmp
jae
xchg
jmp
or
imul
inc
push
or
fcomps
aad
xor
mov
sub
push
outsl
out
sahf
loope
xchg
mov
outsl
out
pusha
push
xchg
mov
mov
jo
pusha
sti
inc
inc
mov
inc
popa
jecxz
mov
imul
push
subb
or
and
sbb
xchg
sub
insb
dec
sbb
push
xchg
push
ret
loop
mov
jnp
cmc
adc
insl
add
and
pop
outsb
jns
dec
mov
in
push
mov
pop
xchg
rcrl
and
sbb
test
add
adc
mov
xchg
pop
lods
loopne
pop
gs
cmp
fsubl
jg
push
push
repnz
lea
mov
push
addr16
push
jae
adcl
aas
mov
push
adc
enter
jg
jno
iret
push
les
cmp
cmp
inc
notb
cmc
popa
xchg
shll
pop
notl
mov
mov
and
bound
pop
sub
call
gs
dec
lods
push
adc
loop
xor
enter
push
pusha
pushf
dec
call
movlps
jne
cmp
mov
pop
dec
cmc
mov
xor
je
cmpb
enter
mov
ror
sub
pop
sbb
push
addr16
mov
inc
imul
xlat
xchg
mov
clc
sti
mov
mov
xor
mov
test
push
and
scas
jl
icebp
pusha
idivb
xchg
int
and
mov
xchg
std
xchg
or
xchg
enter
dec
cwtl
sub
mov
mov
lcall
mov
inc
jecxz
sub
fcoms
inc
sbb
jb
push
sbb
add
pusha
out
inc
mov
xchg
sbb
rcr
or
jmp
xor
lods
xchg
into
test
out
sub
das
mov
scas
fsub
ljmp
mov
lds
das
les
add
adc
and
into
not
in
lahf
scas
pop
lret
mov
ds
push
ja
lret
xchg
mov
dec
dec
push
mov
insb
sbb
int
adc
loopne
in
or
pusha
enter
xchg
jnp
xchg
repz
insl
call
adc
mov
pusha
sub
std
aaa
out
test
popf
daa
fbstp
cmp
and
mov
sub
icebp
cmp
jmp
je
aam
fcmovb
pop
in
lock
rcl
dec
dec
jge
add
in
sub
mov
insb
inc
into
scas
out
mov
push
out
int3
jns
dec
lock
rolb
js
lret
loop
punpcklbw
sbb
loope
sbb
out
sub
xchg
adc
push
in
xor
mov
cmp
pop
sbbl
sbb
mov
mov
mov
outsb
sub
mov
pop
mov
outsb
out
xchg
test
mov
adc
cmp
jp
mov
cli
pop
shll
mov
or
in
or
imul
mov
sub
and
xchg
mov
inc
sbb
xchg
shll
pop
test
outsb
flds
scas
lea
lock
jge
sub
mov
sbb
jl
mov
ret
mov
sbb
push
clc
jns
sub
lret
jno
cs
inc
lock
mov
push
std
mov
fsts
std
mov
mov
ret
cmp
adc
hlt
sbb
sub
mov
insl
lea
fmul
dec
inc
fcmovu
cli
pop
pop
add
mov
cmp
jl
rclb
lock
daa
out
jae
inc
faddl
dec
fwait
test
outsb
test
loope
enter
xor
pop
dec
jp
mov
dec
fstpt
pop
call
dec
mov
push
shll
pavgb
cs
cmp
rolb
movsl
inc
mov
adc
dec
inc
cmpsb
mov
lret
xchg
jbe
fnstcw
xchg
adc
adc
cmp
dec
stos
fs
and
js
addr16
sub
or
inc
mov
sbb
test
inc
aam
test
shr
ds
sub
les
rcll
mov
mov
pop
mov
cmp
mov
sbb
cmp
sahf
xchg
leave
shrl
xchg
movlps
nop
xchg
jbe
mov
xchg
sub
imul
mov
xchg
sahf
lahf
ss
xchg
pop
je
out
jg
ljmp
push
inc
pop
xchg
ljmp
mov
arpl
and
cli
push
cmp
frstor
aad
adc
sbb
or
sarb
idiv
dec
stos
mov
clc
stos
test
cmp
push
aas
mov
adc
xor
scas
cltd
xchg
push
pusha
pusha
insl
push
xor
mov
fwait
insl
ds
mov
or
imul
adc
jp
lret
xor
and
pop
fwait
jmp
jnp
ljmp
dec
cmpsb
das
cltd
out
pop
or
xchg
fsubl
addr16
shlb
cmp
jo,pt
inc
pop
arpl
lret
add
scas
addr16
dec
stos
stc
cmc
or
and
mov
xstore-rng
cmpsl
ret
dec
ret
cmc
ds
adc
repz
sbb
mov
xor
addl
stos
daa
clc
mov
in
or
mov
insl
push
aad
test
cmp
es
adc
mov
test
xor
mov
push
int
mov
xlat
jge
inc
and
mov
jns
clc
adc
imul
icebp
mov
flds
pop
sub
jle
in
sbb
mov
insl
push
insb
and
cmpsl
inc
pop
insb
inc
jp
add
lock
ja
test
loop
inc
int
outsl
push
sahf
jl
repnz
inc
sub
sti
std
xor
add
mul
xor
and
push
mov
xor
and
pop
in
lret
fnstcw
xchg
add
mov
jmp
jbe
xchg
sbb
pop
mov
jge
or
sbb
fs
inc
fldcw
js
jo
dec
sbb
imul
fimull
popf
pop
xor
adc
aad
ret
mov
out
sub
jl
mov
in
cmpsl
inc
xor
out
jb
in
pusha
cmp
inc
jbe
loope
push
clc
frstor
roll
mov
ss
cs
cmpsl
loop
or
frstor
lds
push
sbb
int3
or
jae
xchg
pop
pop
cmpsb
jl
sub
lahf
sbb
insb
mov
push
mov
scas
inc
jb
out
in
inc
mov
xor
fcompl
test
inc
sbb
add
inc
movsb
jne
das
clc
out
repnz
dec
incl
movsb
or
daa
adc
in
jle
sub
mov
or
cmp
roll
cmpsl
movsb
add
cmp
repnz
mov
add
insb
fst
sbb
loop
lods
mov
push
cli
pop
jns
mov
and
xor
sbb
jbe
imul
test
or
add
mov
jne
mov
inc
insl
adc
fisttps
sahf
pop
cmpsb
jbe
adc
adc
data16
pop
sub
dec
dec
js
xor
jae
push
mov
dec
scas
mov
nop
lea
pop
in
inc
add
mov
pop
xchg
jae
jo
cs
repz
cltd
xor
mov
cmc
adc
jmp
jecxz
and
push
jae
sbb
out
js
out
into
jp
and
rcrl
xor
int
lcall
add
movsb
bound
push
aaa
jge
xchg
hlt
jno
add
scas
dec
cmp
repz
xor
stc
mov
sbb
loop
popa
and
and
mov
jle
and
negw
mov
gs
adc
or
icebp
xor
xchg
lret
pop
push
aam
sbb
mov
aaa
jp
loop
sbb
jo
icebp
movsl
xor
or
stos
push
pop
push
mov
cld
push
imul
mov
adc
fnstenv
loope
outsl
rcll
add
inc
imul
jbe
sar
in
mov
mov
mov
mov
rol
daa
fisttpll
jge
negl
das
sbbb
cmpsl
push
fdivr
popa
ds
shrl
shrl
adc
orb
xchg
mov
mov
cs
aaa
cltd
cltd
or
mov
and
sahf
sahf
rcrb
jne
sbb
xor
ljmp
adc
add
inc
mov
sbb
push
loope
push
xchg
lcall
arpl
jno
pop
sbb
pop
inc
push
pop
xchg
push
or
push
dec
add
pop
repz
loopne
sub
jno
mov
fs
lret
sbb
inc
cmc
dec
aam
movsb
inc
in
cld
aad
sub
and
lds
imul
mov
psadbw
sub
cmp
push
sbb
into
mov
push
adc
xorl
adc
addb
mov
inc
mov
rcrl
xor
push
and
and
imul
sub
or
pusha
mov
lret
or
stos
movl
or
mov
add
insl
outsb
xor
jns
xchg
fucomp
mov
loop
adc
jecxz
pop
mov
xor
xchg
dec
int
mov
enter
mov
jns
fwait
lret
andb
cmp
sub
and
mov
pusha
aaa
mov
mov
pop
int3
mov
sub
xchg
sti
mov
fwait
cmp
movsl
push
or
or
rol
xchg
mov
sub
pusha
test
loop
outsb
jnp
nop
sbb
sarb
nop
mov
inc
je
call
cmc
inc
mov
pop
mov
xchg
ret
ss
or
stc
inc
and
sbb
xchg
or
xor
push
cmc
and
xor
cmp
pop
pop
popf
out
nop
xchg
pusha
push
imul
mov
ret
dec
dec
aam
push
ss
pop
gs
fucom
inc
cmp
dec
aad
cmp
dec
dec
js
mov
jo
sbb
movb
cmp
nop
loop
mov
sti
lret
insb
out
cs
pushf
addr16
aam
or
and
push
xchg
sub
adc
rorl
cli
out
out
outsb
adcl
ret
pop
cmp
pushf
mov
out
mov
lods
push
lods
lds
cld
xor
inc
outsb
jle
jno
sub
cltd
in
jle
mov
outsb
sub
pop
add
jbe
xchg
nop
ret
test
pusha
inc
ds
push
shl
das
out
cmp
lods
loope
push
mov
popf
js
sub
adc
in
subl
fadds
outsb
mov
adc
fimuls
repnz
and
popa
loopne
add
js
jae
xorl
mov
dec
xchg
daa
loopne
into
jge
push
ja
push
cwtl
or
sbb
test
lds
xor
sahf
int
clc
push
clc
push
loope
leave
mov
or
ficompl
repnz
jg
xor
out
xor
xchg
mov
ja
popa
bound
inc
mov
insl
xor
enter
and
imul
xor
repnz
dec
mov
fstpt
adc
je
popf
roll
pop
push
adc
fidivl
aad
rclb
or
fmull
jae
js
xchg
aad
inc
mov
push
clc
jnp
mov
jmp
roll
adc
cmp
jle
mov
adc
int3
pusha
or
adc
mov
rcrb
sub
add
mov
out
inc
cmp
fstl
pop
push
fisttpl
test
push
repnz
pop
fsubp
out
pop
cmc
cld
js
insb
xlat
jp
pop
nop
push
pop
dec
cmp
cltd
enter
mov
jo
out
les
sub
jp
sbb
and
clc
mov
fwait
and
cmp
jge
ljmp
pushf
cmpsl
data16
shll
push
outsl
pop
scas
jecxz
popa
cwtl
pop
mov
cs
dec
dec
mov
sarb
or
lea
cmp
movsl
aaa
and
std
bound
cmc
cwtl
jbe
test
lahf
sub
xor
loopne
mov
shrl
inc
scas
and
ljmp
adc
jmp
xchg
push
sub
arpl
jbe
add
sti
imul
cmp
dec
push
sub
fnsave
ja
and
orb
orb
push
daa
inc
imul
ja
push
or
xlat
outsb
dec
adc
int
test
aaa
outsb
inc
mov
sarl
xor
stos
mov
pop
jo
and
add
lcall
xor
dec
sub
pushf
clc
mov
addr16
movsl
fistpl
pop
sti
lds
rcr
mov
outsb
cltd
mov
ljmp
fs
dec
or
das
cs
fistpll
pop
ljmp
mov
or
arpl
and
in
fwait
mov
cmp
sbb
popa
inc
push
call
addr16
mov
xchg
inc
dec
lea
imul
outsb
add
repnz
push
cltd
pop
inc
aaa
imul
mov
cmp
pusha
sbb
and
icebp
pop
jo
int
scas
or
cld
cmp
mov
mov
push
lods
xchg
enter
adc
cmp
je
dec
xchg
mov
test
cmc
sub
pop
mov
imul
sbb
out
repz
mov
xchg
insl
rol
shl
mov
mov
mov
movsb
xor
call
push
inc
xchg
out
sbb
repnz
sub
inc
xchg
stos
dec
cmc
push
js
inc
or
loope
mov
and
hlt
jmp
push
sub
mov
adc
sbb
andl
inc
cmpsb
push
push
and
inc
jecxz
jmp
idivb
push
loopne
jl
ret
nop
xchg
enter
int
mov
xchg
insb
subb
out
pop
pop
ret
mov
cmp
stos
xor
arpl
repz
lahf
leave
mov
sbb
sub
jno
push
dec
hlt
sbbl
mov
inc
sub
mul
cmp
sarl
mov
xchg
popa
jmp
loop
mov
repnz
sub
mov
or
sub
aaa
je
sbb
push
push
cmpb
fdivp
mov
dec
roll
pop
xchg
dec
popf
xor
add
xlat
cmp
mov
inc
sbb
loopne
lret
cs
mov
fisttps
fidivl
mulb
mov
or
push
jb
push
mov
int3
out
scas
pop
pushf
mov
xchg
cwtl
clc
jnp
imul
test
pushf
mov
cmp
and
or
sbb
fists
sbb
pusha
jb,pn
pop
cmpsl
mov
fmuls
inc
hlt
shl
mov
test
lods
mov
xchg
cwtl
in
sbb
pop
div
xor
sbb
and
xchg
sub
popf
cmp
or
das
or
push
dec
sbb
cld
sbb
mov
pop
testb
sarl
stc
ret
lods
jmp
into
xchg
push
stos
cwtl
push
leave
mov
test
or
sarl
xchg
push
push
sub
fnsave
dec
ja
sbb
jg
sti
xchg
cmc
jbe
cmp
mov
mov
xchg
jle
mov
fcoms
sbb
add
jp
jp
imul
loope
out
jae
add
aam
es
cld
bound
inc
xor
cmp
jle
add
mov
in
lcall
into
jg
je
addr16
jae
xor
dec
movsb
cld
test
sub
sbb
je
inc
dec
mov
adc
addl
or
mov
outsb
cmp
xor
push
fdivrl
cltd
shrb
mov
xor
adc
cwtl
mov
shl
arpl
test
mov
lret
in
push
or
mov
clc
sbbl
jmp
adc
push
ljmp
fcmovnb
add
mov
sbb
or
ret
filds
cmp
fs
gs
test
mov
divl
lods
push
popa
das
cmpsl
push
mov
shll
jle
push
clc
popf
jnp
addr16
loopne
cmp
mov
ja
adc
out
mov
fsubrp
cwtl
insb
gs
jnp
dec
mov
pusha
xchg
pop
out
loop
int
mov
mov
je
imul
data16
mov
ljmp
lods
sub
push
movsb
add
dec
dec
nop
push
adc
in
es
inc
xchg
daa
js
mov
mov
outsl
imul
aaa
and
fcmovnu
leave
filds
push
popa
sbb
lret
xor
sub
push
and
add
xor
insl
mov
and
adc
pop
outsb
sub
push
sarl
or
inc
mov
stos
out
ds
es
mov
lds
mov
mov
and
mov
mov
mov
in
clc
pop
sbb
arpl
ret
cmc
ja
push
mov
sbb
sbb
jmp
outsl
notl
int
mov
rclb
aam
adc
sub
dec
gs
cmpsl
dec
adc
leave
jb
and
sub
cmp
xchg
fidivrs
aad
dec
loope
mov
inc
movsl
or
dec
xchg
loopne
fisttps
xchg
loope
js
jl
add
adc
fimull
xchg
mov
mov
ss
cmp
adc
cmpsl
out
and
or
dec
jg
jno
sbb
jl
jecxz
xchg
ja
dec
push
loop
xor
pusha
lret
dec
icebp
push
arpl
movsl
xchg
sbb
inc
shll
push
shlb
jb
mov
out
aam
lahf
adc
jb
lcall
mov
xstore-rng
cmpsl
inc
aad
jo
pop
add
or
loop
int
movsb
jmp
iret
xchg
and
cmp
cmp
stc
xchg
sbb
cltd
enter
jg
dec
push
xor
int3
fbld
in
loopne
lss
sub
sub
lds
sub
adc
xchg
cmp
xorl
pop
rcrb
pop
add
test
xchg
mov
cld
mov
test
mov
bound
xchg
dec
mov
pusha
ss
mov
ds
scas
and
loope
adc
fcomip
sub
int3
cli
sbb
test
iret
mov
and
les
sar
push
sub
and
push
repnz
pop
mov
sahf
sbb
mov
shl
daa
push
es
xor
or
add
xchg
jg
call
push
int3
into
or
push
xchg
push
pusha
inc
pop
pusha
scas
mov
push
sbb
mov
jae
enter
xchg
test
adc
cld
sahf
rorb
das
data16
js
pop
push
scas
jmp
push
jne
cs
adc
push
mov
push
mov
push
or
pop
pop
adc
jle
xchg
push
lcall
jp
pusha
sbb
loope
mov
push
lods
dec
scas
popf
clc
mov
aam
mov
repz
pop
rol
lahf
pop
divb
sarl
cli
rcrb
loop
push
pop
xchg
test
out
aam
ljmp
cmp
mov
aas
ss
mov
inc
or
push
scas
push
sub
daa
pushf
pop
lret
and
adc
aam
sub
cmpsb
and
cmp
mov
mov
cmp
lods
inc
sub
cmpl
jnp
dec
jbe
jb
pop
sarb
mov
mov
ljmp
loopne
test
or
sbb
adc
psraw
sbb
mov
shlb
iret
inc
cld
insb
add
or
adc
ret
jae
data16
adc
icebp
mov
mov
jp
dec
out
into
pop
fldl
ja
mov
xor
add
rcrb
xchg
or
xor
push
add
mov
mov
or
in
add
cltd
stos
jg
ds
out
jg
mov
sbb
ds
movsb
shl
add
or
jecxz
pop
cmp
lock
cmc
push
inc
add
rolb
xor
push
aam
stos
jne
or
call
inc
bound
loopne
adc
sbb
cmc
test
movsl
jno
loopne
lahf
or
imul
pop
add
xchg
xor
movsl
wbinvd
mov
jge
loopne
sub
leave
xor
in
jns
sub
mov
jo
inc
lods
scas
lahf
fs
movsl
loopne
dec
inc
sbb
dec
push
and
mov
out
pop
inc
popf
and
and
sbb
lahf
xor
xorb
jge
mov
pop
xor
push
leave
push
sub
aaa
leave
leave
imul
adc
fsub
mov
fs
mov
shl
mov
cli
sbb
xchg
jmp
lret
mov
jo
das
sub
inc
shlb
stos
rcrb
in
aaa
rolb
popa
jo
jmp
in
dec
and
push
cmp
pop
rorb
ljmp
cmp
mov
dec
mov
out
xchg
repz
pop
cld
out
ss
adc
mov
ss
loope
dec
pop
mov
pop
add
lock
mov
mov
enter
fistpll
add
add
sub
stos
incl
fistl
sbb
aam
call
data16
mov
repz
in
imul
es
test
and
aas
push
sbb
adc
and
mov
pop
sub
lock
add
jp
dec
xcrypt-ctr
cmpsl
sbb
movsb
loop
xor
stos
popl
call
cli
inc
sub
mov
inc
out
push
cmp
cmpsb
adc
xchg
adcl
decb
shrb
js
jbe
inc
dec
xchg
sub
insb
mov
cwtl
sar
pop
les
int
stc
inc
fildl
inc
cmc
rolb
adcb
cmpsl
mov
pop
imul
jge
pop
stos
stos
cmp
mov
lahf
in
insl
sahf
xchg
mov
ja
push
in
xchg
pop
repz
aaa
fwait
or
idivb
mov
loop
cs
add
xor
fdivrs
xchg
in
lcall
inc
in
adc
mov
cmp
mov
cwtl
push
das
loop
orb
sbb
push
mov
add
out
inc
enter
sbb
sub
and
test
outsl
aam
scas
out
and
cmpsl
mov
fsubrs
stos
pushf
cmp
xlat
adcl
loopne
jmp
xlat
inc
sti
adc
mov
xchg
popf
add
xor
add
jle
sbb
or
jp
nop
mov
in
lods
pop
mov
mov
inc
je
dec
lret
pop
xchg
jae
push
testl
sbb
dec
jecxz
incb
sti
hlt
int3
xchg
stos
shll
pop
lods
mov
ret
fsts
xchg
je
stos
mov
test
out
xchg
mov
rolb
ret
lret
fdivl
pop
mov
in
xchg
dec
mov
out
jecxz
cmp
pop
std
divb
lret
icebp
fisubrl
popl
dec
out
das
mov
outsb
adc
arpl
add
jnp
frstor
out
jp
pop
mov
popf
inc
inc
pop
or
dec
sbb
sbb
andb
mov
adc
xchg
outsb
rorl
adc
add
int
loopne
adc
and
test
and
jne
mov
out
lret
je
xchg
xlat
jmp
filds
leave
mov
scas
and
lret
sub
loope
adc
jmp
pop
stos
cmp
ret
leave
jbe
pop
jns
pop
cmp
xor
test
ja
mov
and
pop
mov
push
loopne
js
ja
scas
mov
lock
inc
inc
hlt
mov
add
pop
sahf
subl
lret
cmpl
mov
lahf
mov
outsl
dec
push
pop
loop
and
inc
sbb
fnstcw
stos
mov
in
jl
sub
data16
mov
dec
sbb
adc
test
and
mov
dec
add
ljmp
aas
jmp
cwtl
scas
mov
push
jecxz
adc
mov
imul
pop
or
cmc
and
dec
mov
fiaddl
daa
je
xchg
mov
int3
int
aaa
xchg
mov
loop
sarb
mov
adc
lcall
lcall
xchg
add
test
insb
sub
mov
inc
jle
enter
fs
clc
push
lods
lcall
cmc
in
ljmp
pop
xor
idivl
lret
sahf
subb
sahf
cltd
jnp
cmpsl
dec
clc
fstpl
sbb
out
out
or
jl
das
jmp
lret
cmp
int3
daa
jecxz
sbb
sub
cmp
mov
outsl
jecxz
and
xchg
xor
lret
mov
repz
dec
ljmp
mov
std
push
popl
loope
roll
inc
push
in
daa
cmpsb
cld
mov
mov
popf
es
sub
imul
xchg
pop
inc
cmc
sub
xorb
iret
test
xchg
or
jge
int
loop
jp
mov
lcall
inc
push
adc
cmpsl
mov
ret
pop
dec
mov
sbb
jnp
mov
iret
and
daa
daa
outsb
imulb
bound
ret
jbe
xchg
mov
ds
lods
movsl
xor
cmp
adc
imul
mov
mov
jmp
stos
xchg
out
iret
jg
mov
add
push
in
xlat
int3
xchg
sbb
je
xor
pop
push
and
ficompl
mov
push
xor
aad
lahf
pop
sub
loopne
in
sub
repz
push
fldt
xchg
out
int3
fs
xor
xlat
insl
into
cld
scas
jp
sbb
inc
int
les
pop
sbb
inc
test
mov
jbe,pt
out
into
test
jp
rorb
stos
mov
arpl
fldt
lods
test
inc
inc
mov
cmp
ret
dec
pop
icebp
inc
pop
add
lds
aad
and
gs
cltd
test
xchg
popf
addr16
outsl
rorl
and
push
mov
xchg
mov
andb
jg
push
or
mov
imul
je
shrb
out
lods
fs
xchg
icebp
sub
into
adc
setge
lret
xor
jecxz
pop
add
and
inc
pop
and
sub
out
ret
dec
imul
xchg
push
mov
mov
lds
jno
pop
cmpsl
xchg
dec
iret
bound
inc
test
adc
mov
hlt
stc
push
les
jle
push
aaa
cmp
xor
insl
out
inc
mov
and
adc
adc
aad
jle
adc
pop
push
pop
mov
mov
movsb
xchg
in
into
mov
sti
jg
push
ljmp
or
mov
jge
daa
nop
push
repz
add
add
movsl
ret
push
jae
dec
adc
mov
add
mov
mov
testb
popf
pop
loopne
push
push
sub
ds
iret
mov
jne
xchg
into
mov
cmp
aaa
pop
adc
in
mov
push
sub
cmp
add
mov
mov
add
test
mov
lods
test
shlb
push
out
pop
mov
jge
in
loopne
sbbl
xchg
std
pusha
mov
pop
xchg
cmp
xor
push
and
push
jbe
cmpsl
push
pop
cmp
imul
push
xchg
push
popf
in
sub
aaa
lods
iret
dec
jb
pop
sarl
mov
out
xchg
insl
push
test
dec
mov
sub
mov
repnz
aas
loopne
jecxz
dec
movsb
cmp
mov
jbe
outsb
xchg
dec
lods
xchg
add
and
mov
xchg
push
es
movsb
sbb
mov
cmp
cmp
lods
pop
popf
jge
mov
cmp
and
jp
repz
xor
xor
push
mov
mov
stos
push
jmp
ror
mov
inc
lods
ret
bound
dec
inc
push
ljmp
mov
or
hlt
jl
mov
in
jmp
imul
sub
stc
fwait
das
add
cmp
xchg
imul
add
mov
shlb
notl
repz
xlat
mov
aam
adc
lret
fidivs
roll
sbb
or
sbb
insb
cmp
cmp
enter
mov
cwtl
add
jl
sub
push
movsl
lcall
loopne
fdivrl
idivb
or
sub
ljmp
inc
xchg
cld
cmpsb
out
xorb
xchg
sti
ja
jge
fcomi
add
loopne
repnz
or
dec
roll
mov
lcall
test
jmp
xchg
imul
pop
in
adc
loope
add
notb
mov
sarl
xchg
inc
dec
pop
and
loope
xor
sbb
aad
jb
adc
shlb
out
ja
fimull
push
xchg
lret
push
fs
mov
adc
push
mov
outsl
jb
inc
popf
mov
jl
shlb
mov
repz
cld
testb
jnp
mov
aaa
lret
cmpsb
adc
int3
inc
clc
jle
dec
mov
inc
aas
dec
dec
sbb
js
bswap
test
js
fisttpll
dec
stos
jb
popf
inc
cmpsb
in
and
inc
or
cmp
testl
push
xchg
mov
orb
inc
pop
call
stc
pusha
lods
cmp
cmc
xor
dec
ljmp
movsl
cmovbe
push
jb
xor
sbb
add
leave
ret
int3
in
mov
inc
dec
aaa
xchg
bound
in
jnp
in
dec
call
sbb
lahf
testl
xchg
pop
adc
cmp
lcall
xchg
xor
sti
xchg
dec
cmp
loop
jbe
mov
clc
jp
sarb
div
addr16
jecxz
call
lea
cmp
adc
loope
shlb
and
insl
pop
pop
xor
adc
xor
xor
ljmp
pop
inc
inc
or
push
pop
xchg
or
push
lcall
stc
xor
mov
lock
sbb
dec
jge
jne
cmp
xchg
mov
ret
fnstenv
jmp
and
ljmp
adc
or
jno
inc
pop
sbb
xor
mov
call
or
adc
push
add
sbb
fstp
in
dec
cli
and
mov
or
filds
andb
lock
cmpsb
xor
push
xchg
aas
jg
fcmovnbe
add
pop
sbb
shlb
scas
iret
pop
shll
in
add
mov
sbb
jnp
call
xchg
dec
and
dec
and
scas
mov
cmc
adc
or
aas
adc
addl
fcmovnbe
and
movsl
sti
dec
movsl
cld
dec
sub
fcomip
dec
xlat
jae
pop
fs
out
push
repz
cmc
fsubrp
mov
xchg
pusha
nop
icebp
sbb
and
insl
sbb
popa
xchg
jb
shlb
aad
shr
mov
push
outsl
sahf
repz
aam
pusha
or
enter
mov
repz
daa
xor
fnsave
or
jno
add
xorb
xchg
loope
pushf
sub
xchg
mov
lahf
mov
push
lret
sub
jae
or
add
aad
lahf
stc
xor
add
dec
or
sbb
lods
es
pop
pushf
ljmp
sbb
ret
or
push
sbbb
mov
push
xlat
inc
js
daa
arpl
scas
fsubl
int
icebp
loop
cmp
inc
mov
mov
iret
jnp
and
neg
lret
push
xchg
mov
iret
icebp
push
and
mov
mov
adc
sub
insl
cwtl
mov
movsl
add
aas
mov
xor
jne
std
outsl
push
insb
jecxz
jno
repz
ja
fidivrl
enter
out
test
shrl
cmpsb
fnsave
sub
dec
and
mov
ret
pop
sub
dec
les
sub
and
andb
sub
imul
call
js
push
test
jmp
or
mov
lock
mov
divb
mov
sub
sbb
scas
sbb
fists
inc
imul
rcrb
mov
or
imul
or
fidivrs
test
clc
into
lahf
and
leave
popf
mov
imul
pop
xchg
add
enter
sub
or
xor
xor
stc
adc
jl
dec
mov
ljmp
rclb
sub
fcmovne
xchg
movsb
dec
es
roll
jbe
movsb
jne
jle
ret
loopne
scas
inc
cli
hlt
xor
xor
in
fsub
xor
call
jg
and
inc
jae
and
ds
sub
cwtl
push
cmp
into
data16
jge
outsb
xchg
fs
aaa
insb
mov
pop
out
stos
cmc
and
dec
out
popf
and
aad
push
xchg
mov
aas
add
pop
es
dec
inc
mov
dec
push
inc
cmp
ret
mov
loopne
fisubrs
sbb
scas
sub
and
std
dec
jbe
out
jo
xor
scas
jo
xchg
inc
cmpsw
stos
inc
jne
data16
imul
mov
xor
push
addr16
bound
fisttps
es
in
pop
and
jl
jnp
xchg
in
push
dec
int
aad
jp
add
xorl
inc
jo
add
mov
scas
push
dec
shl
push
shr
mov
rcll
push
inc
hlt
push
nop
or
mov
mov
and
cld
push
or
mov
cmp
fcompl
jo
les
es
mov
xchg
xor
subb
push
popa
cmp
shlb
mov
outsl
cmp
xor
jg
adc
outsl
mov
jo
pop
cs
outsb
push
xor
fs
sahf
ja
ficompl
and
mov
enter
mov
cltd
std
out
mov
mov
jae
add
jo
jo
cmpsb
pop
jns
pop
sbb
out
push
addb
xchg
and
mov
int3
mov
je
out
mov
gs
mov
pop
sbb
sti
cmp
pushf
push
in
cmc
int3
jl
idivb
xchg
mov
push
xor
push
lahf
or
mov
loop
ret
fidivrl
popa
enter
insb
mov
mov
and
pop
cmp
push
int3
mov
and
adc
pop
cld
add
in
push
push
and
movsb
out
js
dec
outsb
dec
jno
jle
cmp
inc
adc
rorl
ss
das
outsl
imul
adc
mov
push
mov
push
loopne
ds
in
adc
orl
rorb
movb
cld
test
push
ret
ret
shrl
dec
inc
dec
jns
xor
addl
imul
mov
fsubrp
adc
xor
fldenv
and
sti
pop
and
xchg
aas
popa
and
mov
mov
lahf
jb
sbb
pop
js
cmp
sbb
leave
xchg
js
xchg
mov
std
dec
dec
push
imul
popf
mov
jmp
insb
inc
push
jo,pn
lods
js
mov
roll
jno
leave
stos
sbb
aam
and
cwtl
daa
fmul
imul
push
es
addb
movsl
out
fimull
mov
out
in
fdivr
sarb
sub
scas
imul
faddl
fstp
mov
outsl
mov
fistps
mov
mov
ret
push
add
push
cmpsl
xchg
mov
cmp
xor
pop
push
sarl
or
sbb
roll
xchg
pop
xor
mov
sbbl
rcl
ljmp
imul
es
sarb
sbb
xlat
inc
inc
stos
sbb
lods
nop
repz
pop
inc
xor
cmp
loop
cmp
pop
scas
xlat
inc
test
or
pop
cltd
lcall
scas
bound
popf
push
loopne
insb
cld
mov
addl
aam
lret
mov
clc
jmp
cmpb
pop
rorl
push
imul
add
push
adc
dec
sub
and
mov
lods
into
mov
adc
sti
or
data16
and
repz
shll
lock
cmp
add
xchg
sti
sub
mov
in
mov
in
push
es
scas
push
les
sub
imul
push
xchg
icebp
jecxz
adc
fldenv
jae
xor
cmp
jb
ret
lods
repnz
xor
gs
mov
jge
pop
push
imul
pop
ret
stos
subl
cmp
mov
add
mov
test
dec
adc
sbb
jp
add
aaa
fs
sub
imul
imulb
hlt
sahf
icebp
popa
in
mov
mov
cmp
inc
pusha
mov
int3
xchg
jmp
jne
xor
pop
sbb
sub
jg
add
push
xchg
push
loop
push
mov
mov
outsl
ljmp
inc
sub
cmp
push
out
adc
push
push
lret
pop
xchg
adc
xchg
cwtl
mov
add
in
or
mov
jmp
dec
scas
iret
xchg
fcoms
aas
mov
mov
out
sub
jg
push
fwait
lds
in
jnp
pushf
lahf
push
add
cld
push
xchg
push
test
inc
adc
push
fnsave
roll
sub
push
dec
inc
test
jg
test
cmp
lcall
xchg
and
incb
cmpsl
push
shll
jne
enter
inc
div
orl
imul
dec
movsb
jae
and
add
xor
cld
arpl
or
les
sub
add
jnp
test
aaa
or
cmpsl
mov
out
xor
xor
cmp
pop
pop
inc
out
push
adc
dec
add
mov
inc
pop
jle
mov
testl
xor
test
push
mov
add
mov
mov
pop
arpl
jg
loop
iret
cs
xorb
sbb
rcll
push
nop
pop
ret
xor
inc
popa
negl
adc
mov
xor
dec
pusha
ss
subl
jmp
fidivrs
and
testb
movsl
loopne
js
xchg
add
jmp
mov
push
inc
ja
out
or
testl
sub
mov
mov
mov
bound
xor
mov
int3
xchg
add
jecxz
cmp
mov
lds
adc
push
shlb
push
imul
inc
mov
mov
imul
leave
adc
insb
call
cmp
repz
insl
mov
std
ret
sbb
sahf
in
xor
mov
hlt
lods
add
cld
add
bnd
jbe
subl
rol
cmp
lods
lret
cltd
scas
dec
or
sub
cwtl
mov
cmp
ss
aaa
adc
in
jnp
adc
outsl
sub
stos
xor
cmp
push
cmp
cmova
dec
push
mov
cmc
cmpsl
or
lahf
push
mov
jnp
stc
xchg
inc
int3
or
clc
dec
xchg
scas
in
cmc
xor
mov
addr16
xchg
adc
adcl
xchg
pop
es
inc
jle
and
dec
pop
jbe
jmp
cltd
adc
repz
xchg
pushw
call
popf
out
int3
aaa
inc
jo
xchg
sar
aam
in
std
fidivrl
cmpsb
aas
andb
bnd
mov
addr16
mov
jbe
cld
stos
add
cmp
jecxz
pop
sbb
fs
clc
adcb
jmp
cmp
js
push
mov
movb
inc
jge
mov
sub
dec
lock
sti
cli
insl
scas
stos
xchg
xchg
cmp
xor
fwait
sub
xchg
mov
aad
pop
push
std
lahf
pop
shrl
movsb
dec
out
lock
dec
std
cmp
push
clc
lock
jmp
cmp
js
mov
dec
xlat
push
sti
xchg
mov
sub
arpl
popf
loop
sub
sub
inc
xor
fbstp
rolb
imul
push
push
cmp
test
xchg
cmpsb
cmc
cmp
insl
iret
addr16
scas
out
bound
sub
leave
jmp
clc
mov
pop
xor
jb
or
jne
pop
pop
pop
popa
jne
aam
cmp
cs
push
xchg
jp
inc
sti
or
push
call
push
iret
jno
xor
imul
pop
and
incb
or
scas
xor
ret
sbb
add
add
inc
clc
std
insl
rorb
push
sti
mov
or
ds
ret
icebp
adc
int
movsb
rolb
sbb
in
fsts
test
adc
and
or
cmp
test
or
sbb
push
or
in
rcl
jne
and
inc
insb
in
lahf
mov
mov
inc
adc
adc
or
mov
pop
xor
fs
pop
mov
push
repz
js
pushl
test
cmc
xchg
dec
test
inc
jecxz
mov
rcll
pop
adcb
xchg
xchg
dec
sub
add
and
sub
or
iret
stc
adc
pushf
ss
jns
sbb
push
pop
mov
push
fldcw
mov
cli
cmpsb
ret
divb
test
push
pop
pop
mov
scas
mov
sbb
ljmp
or
lock
fimull
cmp
xlat
into
or
outsl
push
cmp
out
imul
pop
jg
jle
scas
pop
adc
cld
push
lret
xor
xor
mov
xlat
mov
ss
and
mov
shll
lahf
insl
jl
adc
pop
pop
es
dec
fadds
lea
mov
pop
iret
inc
xchg
ret
dec
jecxz
jno
push
pop
repz
aam
pop
pop
or
jl
push
fisubs
pop
or
fstpl
sarb
gs
ret
jno
jge
add
cs
jle
je,pn
dec
fbstp
jp
outsl
inc
xchg
inc
ljmp
cmpsl
pop
hlt
ret
shll
pop
cmp
scas
std
aaa
mov
mov
jl
and
scas
nop
mov
inc
mov
mov
lea
push
jge
sbb
popf
mov
cmp
cmp
iret
adc
mov
pop
das
test
ds
insb
fiadds
stc
xchg
xchg
lahf
movsb
mov
inc
leave
cmp
push
inc
pop
sahf
fistpll
rcll
into
xchg
loopne
push
or
fxtract
jo
sub
push
mov
out
jg
dec
loopne
ficomps
shlb
ret
dec
ficoms
ljmp
or
sub
jno
jb
ret
jae
lea
xor
xlat
mov
and
jge
add
cmc
dec
mov
push
divb
pop
pop
mov
test
jbe
cli
jns
rorl
roll
insb
mov
or
pop
stos
in
addr16
fadds
repz
fsubr
jp
fidivs
mov
jmp
dec
fimull
fmuls
fnstenv
leave
cmp
mov
jmp
mov
je
xchg
out
mov
fbstp
imul
push
mov
or
test
lds
xor
add
xchg
orb
les
push
sbb
scas
daa
iret
test
sbb
cs
rolb
ljmp
pop
xchg
xor
shrl
in
mov
pop
orl
mov
sub
add
mov
out
mov
pop
pop
jp
mov
andps
repz
xorb
pushl
enter
mov
loope
jnp
adcb
or
push
test
aaa
iret
cmp
mov
imulb
xchg
jae
mov
sbb
fnstsw
pop
or
inc
mov
test
sub
inc
sahf
mov
pushfw
jbe
aad
sbb
imul
mov
inc
fnstcw
pop
enter
fcomps
adc
jnp
push
xchg
fwait
or
mov
mov
mov
mov
ret
inc
loope
add
inc
sti
inc
cmp
pop
loop
jecxz
mov
jae
inc
outsb
jge
mov
insb
dec
int
sahf
sub
movsl
jne
xor
mov
push
shlb
xor
lcall
je
shll
movsb
rclb
hlt
dec
xlat
test
test
loope
cli
imul
push
cmp
incb
es
test
pushf
cwtl
test
scas
pop
loopne
mov
outsl
call
pop
lret
fidivl
imul
dec
and
adc
int3
pop
loope
mov
sbb
xchg
add
and
clc
ja
nop
shrb
dec
inc
in
icebp
in
mov
pop
or
or
nop
add
push
adc
push
pop
popa
inc
xchg
jp
mov
dec
daa
inc
clc
sub
pusha
push
add
aad
out
das
cltd
roll
shrb
jmp
andb
les
jnp
mov
xor
and
push
push
and
sub
cmp
imul
cmp
movsl
and
xor
mov
data16
adc
xchg
inc
xor
cli
test
sbbb
adc
adc
xlat
insl
cltd
stc
lds
sahf
lahf
test
or
addr16
fsubrl
data16
cld
dec
lock
xlat
mov
outsl
mov
cmp
sub
popa
jo
data16
adc
mov
xchg
lcall
xor
sahf
push
jnp
mov
dec
jnp
jmp
orb
push
outsl
fimuls
pusha
jge
dec
out
test
mov
gs
aas
popa
xor
out
pop
int3
enter
andl
push
sub
ret
aas
add
addr16
fwait
sub
sti
aaa
lahf
xchg
sahf
add
jbe
add
test
popl
movsl
cli
pushl
pop
loope
sub
xchg
mov
jb
in
outsb
lret
into
xchg
mov
xchg
insl
or
mov
xor
jle
and
dec
push
bound
lock
popa
mov
adc
lds
xchg
in
jl
sbb
sub
outsl
es
dec
movsl
addr16
aad
aad
es
cmpsb
iret
std
mov
adc
fsubrl
or
jne
and
and
cs
out
mov
cmc
ret
lock
call
mov
xchg
jg
adc
movsb
mov
mov
mov
xchg
notb
fidivrl
sbb
sbb
push
dec
fidivs
xor
into
cltd
mov
aad
mov
int3
es
dec
and
xchg
jb
dec
mov
push
mov
andl
adc
jg
dec
in
xchg
or
inc
cltd
jmp
adc
repz
std
mov
ds
std
fldenv
push
or
stos
mov
daa
hlt
fdivl
sub
decb
adc
out
and
sbb
sbb
mov
push
xchg
mov
mov
adc
mov
jne,pt
xchg
sbb
cmp
lea
pop
cli
fistpl
cwtl
lret
fdivl
and
fadds
push
dec
mov
test
jmp
xor
jae
movsb
dec
jnp
ljmp
xchg
xchg
jo
stos
imul
push
dec
arpl
pop
cld
mov
mov
push
push
jmp
cmp
jb
fs
pop
std
imul
lret
mov
push
gs
xor
add
adc
out
mov
xchg
cmp
ljmp
and
rorb
cmpsl
std
pop
jmp
sbb
lret
inc
stos
or
push
movsl
cwtl
mov
cmp
lret
inc
aad
in
lahf
jle
lret
imul
call
add
cmp
ds
push
sub
ja
adc
pop
and
jb
push
mov
inc
add
mov
add
sub
mov
movsb
outsl
xor
icebp
add
pop
idivb
imul
je
lret
xlat
decb
mov
and
cmp
mov
cmpsl
lods
leave
push
mov
cltd
inc
int
push
mov
sub
fildll
mov
cmp
inc
cmp
or
sbb
xor
aam
cmc
scas
sti
daa
daa
nop
mov
fs
pop
into
cmp
ret
push
or
push
addr16
pop
rolb
mov
add
dec
inc
js
push
add
int
pop
outsl
cwtl
je
movsb
in
int
inc
push
pop
cmp
daa
pop
shl
leave
pop
ss
xchg
testb
inc
dec
add
xchg
and
repz
mov
gs
imul
fcmovnu
inc
scas
lds
scas
sbb
jg
sub
mov
stos
cmp
gs
inc
push
xchg
sub
jmp
xchg
icebp
sbb
inc
in
rorl
lret
stc
rcr
mov
pop
lea
and
imull
dec
aaa
or
fcomps
nop
outsl
sbbb
push
ret
gs
xchg
das
fadd
mov
push
sub
icebp
fmulp
push
cmp
jns
xor
jmp
clc
shl
in
imulb
ss
lock
out
push
imul
jmp
loop
repnz
repnz
xor
sub
xchg
xor
daa
jo
stos
jae
cmp
xchg
push
leave
lods
xchg
push
push
mov
adc
cmpsl
or
push
pop
xchg
fbstp
mov
inc
jg
push
cli
jne
mov
loop
pop
pop
fcomi
and
dec
les
scas
xchg
mov
arpl
pop
movb
cmpsl
push
sub
xor
lods
or
dec
pop
mov
xchg
pinsrw
mov
mov
jns
pop
negl
xor
or
out
pop
in
sub
sbb
lods
es
inc
ja
xor
cmp
ds
pop
stos
jne
loop
insl
arpl
push
std
push
push
fst
mov
mov
mov
icebp
out
sub
jo
sub
test
inc
les
xchg
mov
and
push
lods
adc
dec
leave
cltd
xor
data16
cmp
inc
jb
adc
push
mov
xor
cmp
cmp
repnz
jl
mul
cmp
int
clc
in
arpl
loopne
pop
dec
xor
pop
das
pop
pop
lcall
push
adc
dec
roll
repz
ljmp
cmp
push
popa
insl
push
loope
andb
shll
xchg
mov
loop
cmp
jmp
jmp
rcr
jo
mov
jbe
in
insb
dec
pop
xlat
mov
shlb
xchg
mov
mov
push
daa
xor
push
cmp
sub
inc
jo
xchg
adc
movsl
into
das
mov
lret
inc
lret
mov
shlb
fwait
shr
dec
insb
adc
inc
ret
inc
xchg
mov
leave
xor
or
add
sub
test
mov
imul
lahf
mov
mov
frndint
or
xchg
mov
add
cmp
xlat
ds
cmp
adc
mov
lock
enter
inc
or
push
mov
xchg
sub
test
inc
pop
ja
pop
cmpsl
inc
and
sub
ret
out
jne
mov
notb
gs
sbb
punpckldq
push
stos
mov
cmp
pop
ljmp
sarb
lahf
push
dec
xchg
add
adc
jle
inc
lss
out
fwait
cld
in
dec
test
test
fwait
lcall
ja
cmc
lds
nop
jns
and
pop
pushf
imul
mov
rcll
cmp
lods
lret
or
roll
aam
fnstcw
inc
jnp,pt
gs
loopne
mov
adc
add
sbb
enter
stos
jne
imul
es
into
pop
push
xchg
sbb
movsb
xchg
enter
push
lret
fcoms
jle
mov
ficomps
push
pop
cmpsl
push
daa
fisttpl
cmp
loop
lods
xlat
repnz
in
mov
ss
scas
movq
xor
add
and
fxtract
adc
pop
fdivl
mov
scas
mov
addl
jo
out
push
cmp
notb
pop
arpl
dec
cltd
sbb
pop
out
add
mov
sbb
sbb
jno
aaa
insl
pop
xlat
mov
pop
shrb
sub
sti
imul
lds
roll
inc
pushl
push
mov
clc
inc
xchg
mov
cmpsl
push
decb
pop
into
and
aaa
pusha
or
mov
adc
ja
mov
mov
test
fimull
mov
xchg
repnz
ret
ret
push
mov
fsubl
inc
es
lea
movsb
data16
mov
pop
dec
inc
adc
lods
mov
in
jge
call
dec
fisttpll
lds
lret
push
fiaddl
scas
push
aam
push
loopne
enter
mov
jl
test
mov
cmp
mov
test
pop
fwait
js
sbb
cwtl
mov
mov
sub
inc
lahf
shl
divl
aam
cmpsl
mov
mov
inc
mov
inc
push
xchg
int3
jecxz
pop
mov
cmp
leave
scas
fisubs
out
pushf
cmpsb
popa
stc
push
jb
bound
pushf
sbb
fisubrl
add
inc
test
xchg
pop
imul
pop
sahf
adc
bnd
dec
cmp
ret
mov
daa
cwtl
int
das
test
movsl
xor
mov
or
or
cmc
mov
push
adc
in
dec
ljmp
pop
mov
sbb
imul
sbb
xchg
test
push
cmpsl
aad
sti
scas
adc
dec
test
mov
movsl
test
add
pushf
mov
lock
fldcw
xor
inc
lret
rolb
mov
stos
push
loope
jp
repz
adc
out
iret
cli
fidivl
stos
ljmp
insb
fdivrs
mov
sbb
mov
cmpsl
lods
mov
sub
movsl
aas
xchg
mov
inc
test
cmp
loop
sahf
scas
lcall
xchg
dec
cmpsb
popa
add
sub
stos
jae
into
jmp
aad
mov
das
or
pop
mov
gs
imul
mov
xchg
mov
jmp
mov
mov
and
jge
aas
mov
push
add
mov
nop
pusha
iret
pop
jle
adc
cmp
push
mov
mul
jae
push
sbb
dec
test
sub
cltd
xchg
inc
sbb
stos
push
inc
pop
push
sbb
push
ljmp
inc
cmp
jae
icebp
dec
cmp
and
iret
mov
fdivrs
push
loopne
cwtl
nop
dec
in
fldenv
leave
inc
sbb
gs
mov
jno
out
mov
loopne
cmp
ljmp
sbb
outsl
aas
mov
cvttps2pi
popf
movsl
mov
sbb
cmpsl
jo
sub
test
or
and
pushf
jne
dec
les
xor
jae
inc
jge
punpcklbw
adc
push
adc
pop
cltd
fsubr
pop
ljmp
scas
cmpsb
popa
mov
xchg
mov
subl
inc
cmp
lods
je
sbb
xor
adc
mov
out
inc
cmpsl
xchg
and
movsb
inc
jno,pt
mov
jg
add
cmp
jecxz
jbe
ds
push
or
repnz
cwtl
jno
repz
sub
loope
add
cmp
sub
int
jbe
pop
fnstcw
repnz
push
loopne
int3
imul
cmp
jns
fstpl
mov
leave
stos
iret
mov
fwait
aam
xor
cli
pop
add
jecxz
xor
fstpl
ljmp
insl
nop
push
cmc
fisubrl
mov
sar
and
push
push
fld
adc
fimull
ds
loop
test
xlat
rcrb
mov
cmc
in
push
lret
sub
and
add
fwait
pusha
jae
fwait
test
loopne
std
sub
add
je
lods
out
jne
rcrb
mov
inc
repz
xchg
or
inc
inc
mov
xchg
mov
pusha
adc
xor
cli
mov
leave
mov
and
roll
mov
adc
xchg
xchg
mov
xor
pop
inc
mov
cmc
stc
and
xorl
lret
cmpsb
sbb
mull
jp
mov
incb
jge
push
ss
clc
les
push
into
dec
sbb
or
mov
jo
lods
jno
dec
dec
sub
test
push
arpl
hlt
inc
dec
enter
insl
je
mov
fs
repnz
xchg
andb
push
in
mov
sbb
je
sub
and
push
es
mov
xorb
das
repnz
subb
add
mov
cmp
inc
pop
mov
push
add
and
cwtl
cmc
mov
xor
cld
sub
sahf
push
mov
adc
pop
lret
imul
lods
in
lcall
push
sub
pop
or
or
adc
jns
fs
repz
adc
xchg
push
mov
cmc
mov
mov
jle
nop
into
cmp
mov
lret
ds
adc
and
das
cmp
ljmp
insl
stc
lret
xchg
stos
test
aad
sub
push
xchg
jmp
mov
shl
mov
cmp
jo
lods
ljmp
sbb
cmp
push
daa
cwtl
push
push
adcb
jmp
das
test
imul
sti
adc
insl
xor
add
insl
mov
pop
into
or
ds
or
inc
std
movsl
sbb
push
push
lret
pop
test
lods
xrelease
mov
pop
jbe
xchg
aam
pop
andb
int
cmpsl
test
out
cmp
jae,pt
xchg
add
dec
ss
sub
stc
in
insb
out
stc
mov
les
fildl
sarb
jecxz
pop
inc
mov
jle
pop
pop
lret
cmp
fstl
jecxz
fisubs
add
inc
test
stos
lret
mov
push
dec
call
sub
nop
sub
andb
mov
inc
aam
adc
xor
and
repnz
and
add
fwait
push
inc
jecxz
adc
jbe
mov
dec
popf
mov
aas
sub
out
adc
xchg
nop
cmp
outsl
roll
cmp
sub
xorb
jbe
movsb
clc
int3
lret
push
rep
push
mov
xor
and
mov
ja
out
into
push
mov
adc
clc
pop
in
add
pusha
adc
sub
insl
push
popf
outsb
negl
loop
push
sbb
push
ret
lcall
adc
repz
daa
fwait
icebp
imul
or
jo
jbe
clc
mov
mov
cmc
push
push
idiv
cmpsb
or
js
cmp
xor
pop
adc
pop
sub
mov
dec
mov
push
nop
xchg
add
dec
mov
adc
cmp
ds
cmc
imull
sub
mov
fwait
or
jnp
adcl
mov
dec
inc
mov
scas
test
add
pop
divb
inc
adc
repz
outsb
jl
lcall
jo
mov
in
aas
lock
cmp
shr
mov
cmp
xorb
das
std
dec
notl
dec
mov
aad
mov
scas
dec
lret
sbb
cmc
jge
out
inc
sub
xchg
xor
xchg
xchg
sbb
ljmp
jo
enter
xlat
adcl
test
pop
sbb
aam
pop
ljmp
mov
aam
fistl
cmp
dec
pop
test
loope
addr16
dec
cs
sub
icebp
in
fiadds
cli
sarb
xchg
test
sub
notb
loope
in
sub
jno
lsl
mov
addr16
in
in
out
xchg
rorb
repnz
popf
mov
pusha
hlt
notl
add
pop
xchg
lds
and
ret
sub
scas
push
js
mov
orl
inc
xor
adc
xchg
inc
fdivs
gs
add
out
mov
sbb
xor
dec
and
lock
stos
out
scas
js
addr16
jecxz
ret
iret
bound
mov
mov
popa
lret
int
adc
hlt
push
mov
outsl
push
int
in
and
cwtl
lret
fiadds
ja
imul
pop
mov
cmp
mov
fdecstp
int
insb
adc
loop
shll
sub
pushf
xor
mov
and
mov
adc
aad
cmp
std
cmpb
scas
jp
int
pushf
insl
or
aam
adc
inc
sub
mov
mull
mov
mov
lds
aas
test
loopne
loopne
icebp
jmp
push
orl
in
not
pop
xchg
sbb
dec
mov
dec
ret
cmp
hlt
jp
adc
or
adc
xlat
std
shll
or
rolb
dec
mov
mov
mov
jmp
outsb
cld
ljmp
int3
ja
stos
lods
outsb
test
ljmp
lahf
lea
inc
fcmovb
imulb
inc
test
and
jmp
add
mov
outsl
xor
jmp
jmp
mov
cmp
fwait
test
xchg
ret
inc
enter
inc
push
lods
add
push
lret
cmp
mov
lret
in
imul
push
scas
or
mov
jge
pop
mov
aas
ds
pushf
je
fs
xchg
pushf
icebp
nop
aad
cmp
popw
add
jae
fdivrl
mov
or
pop
sbb
xor
add
push
xchg
sbb
stc
mov
cmp
adcb
xor
jge
jmp
mov
lds
push
stos
mov
mov
pop
insl
fisubrl
cmpsl
daa
or
fs
jae
jle
cltd
fwait
and
stos
xor
xchg
mov
jle
xchg
xchg
pop
mov
jo
adc
xor
xchg
std
pop
aad
sub
pop
push
cmp
imul
inc
and
xchg
pop
movsbl
out
dec
data16
movsb
outsb
popf
out
mov
cmp
pop
cli
mov
mov
in
repz
cli
sbb
repz
lret
test
xlat
push
sbb
add
arpl
out
cmpl
negb
mov
dec
sbb
lahf
shlb
test
in
and
int3
mov
or
pop
pushf
andb
fst
mov
cltd
add
divl
or
sbb
popfw
fbld
dec
push
xor
xchg
push
lods
cmc
lret
call
jp
mov
pop
in
sbb
push
scas
cmp
inc
sub
je
sahf
xor
addb
cmp
das
cs
jnp
add
ss
jo
mov
or
jo
xchg
cli
xor
push
sub
cmp
loope
jle
sub
mov
cmpsl
loope
mov
xchg
ret
add
dec
out
lcall
xchg
push
inc
lahf
cli
fdivrl
fidivrl
mov
inc
mov
js
dec
lods
cwtl
into
sahf
int
sbb
leave
mov
dec
out
ffree
cmp
sbb
inc
repz
pop
mov
jne
ds
in
adc
negb
loope
test
stc
ljmp
xchg
out
dec
sbb
lock
jb
add
and
je
je
add
push
xchg
xchg
cld
je
ss
fmul
cltd
mov
mov
cli
cmpl
mov
dec
daa
sub
not
sub
pop
add
shll
xchg
out
and
jnp
imul
cmpsl
jno
outsl
sub
lds
rorb
daa
movsb
sbb
pop
ss
movsb
outsb
mov
xchg
cmp
adc
dec
push
adc
in
bound
mov
mov
sub
aas
mov
dec
dec
test
arpl
pop
outsb
push
sub
ljmp
adc
icebp
test
mov
cltd
hlt
mov
ja
out
dec
test
pop
cli
inc
nop
ffreep
and
lret
hlt
mov
adc
mov
aas
xchg
cld
cmpsb
mov
add
lods
cmp
mov
enter
hlt
insb
lcall
adc
sub
push
clc
sbb
ljmp
mov
repnz
repz
inc
mov
push
add
adc
push
stos
jl
jae
pop
mov
mov
fs
icebp
xlat
stc
inc
add
push
ret
ja
sub
cmp
push
mov
or
cmpsl
pushf
mov
in
mov
dec
mov
mov
and
and
popa
sbb
sub
shlb
movsl
cs
adc
inc
push
jle
mov
mov
cmp
push
nop
sti
fisttps
add
lret
pop
jecxz
testl
xchg
add
ljmp
lock
xchg
enter
int
sbb
enter
mov
fdivrl
sub
sarl
test
js
push
xchg
mov
jb
mov
pop
sbb
mov
fcmovnu
fisubl
shll
dec
loope
dec
push
cmp
or
xchg
sub
shll
cmp
pop
pop
pop
pop
cmc
xor
pop
fstpt
push
xchg
shl
clc
sbb
pop
pop
push
shl
pop
fsts
ret
push
cmp
test
test
sub
cmpsl
subb
pop
fidivrs
pop
xor
push
sbb
sbbb
idivl
sbb
clc
leave
scas
shll
ja
jge
jg
jae
lds
iret
and
fwait
add
inc
pop
fistpl
dec
in
cmp
and
add
sbb
ret
pop
mov
jne
insb
sbb
call
test
jne
cmp
sub
test
jle
je
mov
adc
xor
lret
pop
sub
repnz
outsl
inc
xchg
icebp
pop
jbe
cmp
stc
repz
inc
leave
in
sarl
rorb
scas
scas
jg
lret
or
sbb
mov
mov
mov
outsl
mov
aam
lea
jb
mov
push
cmp
mov
repz
popf
dec
add
inc
popa
addr16
and
push
aas
in
cmp
cmp
mov
js
or
or
cwtl
cmpsl
roll
xor
adc
je
lahf
jle
insb
add
cld
cmovl
push
adc
out
mov
cmp
xchg
cmp
stc
adc
jo
lea
or
cltd
add
stos
arpl
popa
loope
test
and
dec
mov
and
dec
pusha
xlat
stos
imul
inc
shlb
lcall
loop
std
addr16
push
sub
mov
mov
daa
mov
push
add
jge
pop
outsb
inc
jp
js
add
jge
in
sbb
mov
pop
ret
pushf
out
jae
ret
xchg
and
loope
and
jno
push
mov
imulb
pop
xchg
adcl
adc
push
lret
lock
mov
cmpsl
jecxz
js
xchg
pop
inc
jne
scas
mov
aad
inc
into
lret
push
jmp
arpl
stos
inc
lret
loopne
add
divb
or
jecxz
arpl
out
daa
and
out
mov
cmc
mov
aad
pop
or
leave
shl
scas
mov
jecxz
cltd
fiaddl
lcall
lods
pop
ror
cmp
les
mov
in
lea
adc
cli
mov
push
mov
outsl
mov
out
add
lret
xor
icebp
inc
inc
call
mov
xchg
and
and
dec
aad
pop
xchg
mov
or
lds
and
sub
pop
jge
test
or
adc
ljmp
imull
orb
push
sbb
cmp
lods
xor
sbb
jb
bnd
cmc
xor
addr16
xor
or
add
xchg
lcall
rcrl
ljmp
push
jmp
sbb
notb
data16
xor
popf
iret
fnstsw
push
mov
xor
pop
sub
std
cmp
dec
pop
pop
mov
add
outsl
dec
or
inc
or
pop
scas
mov
fistps
mov
dec
fcmovne
jmp
pop
fbld
es
sbb
fbstp
jb
adc
push
nop
xchg
cmp
aad
cwtl
leave
inc
mov
mov
hlt
insl
int3
ljmp
testl
jbe
out
mul
outsb
push
sti
xrelease
cltd
and
xrelease
cmpsb
pop
fcomp
shrb
sub
imul
daa
pop
lea
or
into
mov
push
pop
movsl
mov
mov
lret
rcll
or
js
and
aaa
xor
mov
sub
cmp
xor
cmp
jae
js
mov
out
into
xor
lds
les
add
aam
dec
jl
xor
xor
outsl
mov
xchg
dec
cli
pushf
out
sbb
lahf
dec
push
loop
fldt
repnz
dec
push
inc
jns
loope
wbinvd
mov
repz
fdivrl
jno
inc
sub
int
fldl
mov
xchg
mov
ljmp
js
lcall
jbe
add
push
es
popa
mov
je
mov
rol
jnp
cwtl
cmp
dec
mov
mov
jne
mov
push
frstor
inc
aaa
xlat
adc
sahf
or
aam
nop
add
jnp
shll
scas
mov
fdivl
stos
xchg
mov
or
lret
jp
mov
decb
mov
jl
mov
mov
or
shr
jg
jns
mov
adc
jp
jl
add
mov
mov
inc
or
mov
in
xor
and
lret
jb
imul
or
cmp
sub
or
insb
jmp
xor
rcrb
fists
icebp
pop
jg
pop
test
lods
pusha
into
orl
es
out
leave
cli
test
test
das
fsub
pop
fnstenv
pop
pop
mov
pop
out
test
xchg
test
enter
sub
mov
xlat
insl
out
jle
sub
push
sub
rcll
ret
add
sub
cs
push
jg
sete
xchg
lods
dec
xchg
test
mov
aas
cwtl
pop
lea
ret
dec
pop
mov
pusha
jmp
lcall
fucom
xor
sub
pop
jmp
ror
fidivrl
fistps
inc
sbb
leave
cmp
fs
add
add
insl
loopne
scas
lcall
call
stos
pop
cmpsl
pop
nop
arpl
ret
lods
call
or
cmp
lahf
xchg
popf
mov
dec
dec
insb
repnz
cwtl
push
add
cmpsb
push
pop
xor
adc
dec
jle
push
push
mov
ss
and
mov
mov
lret
cmp
jns
pop
inc
rcrl
cmp
dec
jmp
or
cmp
push
or
push
cmp
or
mov
adc
and
jg
clc
push
xchg
int3
push
aad
clc
fldcw
call
ljmp
jo
inc
inc
dec
insb
movsl
ss
idivl
pushf
sti
test
cmp
scas
mov
pop
pop
sbb
rcl
push
les
out
loop
jno
pop
out
mov
mov
fwait
rorb
sahf
pop
fidivl
mov
push
jle
adc
imul
add
int
call
pushf
cmpsb
notl
bound
repnz
ljmp
je
dec
xor
paddsb
jge
jns
sub
push
in
and
test
pushf
hlt
decl
lds
cwtl
cs
push
xlat
rcrb
sub
cmp
mov
xchg
adc
dec
cli
adc
and
repz
pop
add
popf
mov
hlt
cld
fs
nop
adc
out
sbb
inc
sbb
push
popa
and
icebp
add
int3
enter
in
stc
cld
cltd
sbb
cmp
sbb
push
cmp
inc
js
add
fildl
inc
fstpl
mov
enter
ljmp
sbb
xchg
push
xor
adc
lcall
xchg
cmpl
fisttpll
nop
push
xchg
ret
and
fsubrl
xlat
adc
out
sahf
xchg
dec
sbb
dec
add
lcall
adcl
int
mov
mov
adc
mov
in
mov
sbb
push
ret
pop
insl
push
ljmp
push
out
jne
mov
mov
pop
scas
test
clc
push
outsl
xor
scas
aaa
or
enter
mov
push
std
outsl
leave
outsl
inc
adc
in
pop
xor
cmp
repz
xor
dec
xor
mull
dec
mov
fstpt
dec
pop
movb
fildl
push
xor
and
pop
sarl
xor
mov
mov
or
sub
insw
xlat
mov
xchg
and
mov
insl
lret
inc
lods
jg
mov
cmpsl
fwait
mov
icebp
cmp
jp
in
cmp
xor
pop
scas
das
inc
movsb
mov
xlat
repnz
in
stos
jle
sbb
pop
ja
in
jae
lahf
cmc
push
push
lock
sub
sbb
iret
inc
adc
push
mov
movsb
addr16
jnp
jnp
loope
and
out
aam
jnp
movl
xchg
xor
insb
or
and
and
cmp
insl
fld
lea
arpl
jne
xchg
pop
ja
ljmp
es
dec
cmp
lahf
push
adc
lods
out
dec
in
icebp
inc
mov
adc
sbbb
fcompl
pop
xor
jge
mov
mov
jp
inc
inc
into
call
xor
cmp
mov
pushf
mov
xor
mov
pop
icebp
mov
xchg
int
adc
cmp
test
int
fistl
pop
es
lahf
nop
in
and
inc
test
adc
addr16
jle
mov
push
mov
jo
mov
push
push
xchg
je
jle
out
leave
sti
in
sub
idivb
mov
pushf
xlat
out
loop
or
add
out
mov
jo
cmc
dec
dec
loop
xlat
adc
and
fwait
inc
cli
orl
push
daa
sahf
sbb
cmp
ljmp
into
jp
or
and
leave
aad
hlt
lock
or
ljmp
divl
mov
pop
inc
test
dec
mov
xor
sbb
mov
cwtl
jecxz
fwait
pop
inc
shll
pop
dec
dec
or
cmp
mov
push
fdivrp
sub
adc
fldz
or
dec
in
repz
or
mov
test
push
divb
mov
xor
sub
scas
cltd
rcrl
outsl
mov
outsl
scas
popa
or
rorb
inc
dec
lcall
fisttps
xlat
jle
stos
pop
fsubr
les
sub
loop
cmpsl
int
lock
in
rolb
inc
fstpl
or
inc
and
stc
cmp
ss
mov
int
pop
sbb
movl
mov
jmp
cmp
mov
inc
dec
push
call
adc
mov
cmp
mov
pop
mov
and
xor
les
int3
adc
add
mov
iret
shll
cli
aam
sarl
lret
sub
mov
adc
rcl
ss
sti
push
hlt
push
int3
adc
push
pop
push
mov
sub
xchg
gs
cmc
inc
mov
xchg
out
cmp
pop
cmp
xor
fidivrs
test
cmpsb
mov
and
sbb
cmp
mov
xchg
mov
mov
dec
sub
call
pop
mov
test
pop
pop
cmp
mov
inc
fidivs
cmp
outsb
inc
jmp
add
enter
dec
adc
mov
mov
cmp
js
ja
gs
mov
es
jae
mov
nop
jp
vmwrite
rol
adc
jbe
hlt
add
push
xchg
lcall
insl
imull
dec
stos
jl
dec
dec
add
jg
cli
cmp
jo
aad
add
jp
mov
clc
lret
dec
and
jo
mov
sbb
movsl
or
xchg
and
adc
inc
popf
outsl
in
mov
pop
popa
mov
jno
dec
jno
sbb
jae
or
out
sub
out
in
call
and
je
xchg
mov
lea
repnz
iret
scas
mov
rcrb
hlt
mov
cmpsl
fdivs
cmp
inc
scas
aam
notb
jl
cltd
sti
pavgw
dec
inc
fimuls
sub
inc
pop
icebp
pop
shlb
and
mov
fcom
imul
test
pop
test
and
mov
pop
sar
mov
cmpsl
add
add
jbe
jno
call
lock
dec
inc
ja
and
xchg
cmp
cmpsl
or
adc
enter
leave
std
sbb
jle
cmp
fstpl
cmp
lock
sub
xchg
inc
mov
mov
inc
xchg
and
mov
in
enter
jecxz
pop
insl
aad
mov
std
rorl
inc
lock
lea
mov
mov
add
cs
std
roll
xchg
mov
mov
inc
test
pop
jo
ljmp
and
inc
xor
pop
fiaddl
loop
inc
mov
adc
aad
mov
xor
data16
push
dec
pop
lock
int
pushf
cmpsb
dec
mov
jnp
xchg
lret
push
inc
sbb
into
push
in
adc
jne
mov
test
mov
adc
loopne
stos
scas
add
lods
inc
test
mov
cli
push
out
call
or
xchg
arpl
popa
add
les
push
das
in
shl
mov
jp
push
insb
jbe
lods
jae
or
popa
dec
in
aas
jcxz
cltd
add
mov
and
jge
add
pop
faddp
mov
mov
and
or
mov
sub
push
push
dec
mov
scas
fldt
shlb
xor
rcrl
sarl
mov
sbb
lods
mov
dec
sbb
cmc
jo
in
xchg
cs
sbb
mov
in
scas
out
enter
cltd
sbb
mov
xchg
jle
fsubrl
out
inc
fwait
and
and
adc
xchg
jge
fiadds
das
movl
ljmp
push
out
mov
aaa
lds
cmp
xchg
mov
push
movsl
inc
mov
pop
cli
pop
mov
jae
jge
dec
mov
loopne
mov
outsl
aaa
mov
or
icebp
stos
lods
mov
add
pop
loope
repnz
je
and
xchg
insb
fs
pop
cmp
out
cwtl
in
pusha
mov
jge
ficomps
inc
bound
std
nop
add
fstps
cmp
dec
mov
inc
fadds
sbb
pop
outsl
cmp
repz
sbb
dec
sub
test
cmp
lock
dec
xor
sub
adcl
push
les
stos
mov
pop
sbb
mov
ret
popa
das
mov
dec
repnz
mov
xorl
cmp
imul
shll
in
sbb
cmp
cmp
xchg
push
push
push
div
push
or
ss
xchg
cs
gs
loop
mov
mov
add
in
cli
mov
push
pusha
jne
jp
pop
dec
xchg
ds
mov
push
sbb
dec
dec
aad
jecxz
cli
cmp
and
mov
dec
pop
rol
cli
or
stos
xor
lret
fcoms
outsb
lret
fldl2t
jmp
mov
jl
loopne
stos
icebp
pop
inc
rcrb
inc
jnp
or
outsl
repnz
jmp
sahf
and
test
or
mov
movsb
sti
call
mov
scas
dec
jl
in
repz
or
fstpt
lea
cmp
jae
add
mov
int3
es
inc
fisubrs
ss
stos
sarb
cmp
push
dec
mov
mov
leave
pushf
lahf
push
pop
sahf
jle
push
imul
in
cmpsb
repnz
mov
mov
mov
xor
dec
scas
pop
add
adc
xchg
icebp
dec
ret
and
cmpsb
pop
push
push
insb
xchg
push
lods
inc
jg
sti
dec
fnsave
pop
jmp
or
cwtl
daa
test
cmp
cmp
dec
hlt
ljmp
or
mov
sub
lods
lds
ds
fisubs
mov
mov
daa
add
mov
icebp
lock
testb
xchg
jne
icebp
sbb
and
cmpsb
rcrl
enter
dec
mov
dec
xlat
iret
push
adc
ret
scas
push
pop
lods
jno
mov
pop
ret
sub
or
xchg
adc
or
adc
inc
mov
push
sbb
pushf
test
mov
jbe
in
push
mov
and
fstpt
jge
lcall
subl
and
mov
sub
pop
cmp
aam
add
lods
nop
mov
sub
xor
cli
jp
mov
xlat
adc
xchg
mov
cmp
ret
ss
ret
mov
rolb
dec
insb
cmpsl
bound
push
cmpsb
sbb
lahf
mov
fsubs
add
ror
sti
add
pop
inc
mov
aam
icebp
lcall
lods
mov
cmp
inc
cmc
cmpsl
outsl
adc
add
mov
lahf
clc
insb
xchg
mov
jae
mov
dec
nop
jl
or
and
ljmp
roll
fmuls
movsb
loope
inc
in
inc
mov
dec
inc
shll
mul
xchg
stos
lea
testl
stc
cmc
loop
fwait
ja
sub
int3
cmc
shrb
inc
setge
rclb
sbb
stos
jge
cwtl
bound
into
mov
push
icebp
mov
clc
das
nop
pushf
notl
xchg
xchg
testb
rcl
inc
test
ds
pop
and
adc
fwait
push
sbb
imul
xchg
daa
mov
and
lods
add
out
out
mov
jo
push
jecxz
int
cmc
add
cmp
or
jns
jg
jo
mov
loope
mov
aad
fidivl
or
sub
pop
pop
add
or
sbb
shll
fisubrl
in
popf
sbb
out
outsb
xlat
fildll
cmp
int
push
add
jne
push
fimull
mov
imul
mov
loopne
pop
inc
lods
xlat
xchg
test
pop
sub
test
sar
mov
les
mov
lcall
hlt
not
push
xorb
in
lock
insl
push
outsl
or
adc
scas
enter
addr16
jb
data16
xchg
imul
out
popf
mov
xchg
mov
imul
xor
jecxz
jnp
call
dec
rclb
mov
shlb
subb
fisttpl
movsb
jp
dec
cmp
or
mov
in
mov
cmp
cmpsl
push
jle
and
repz
jl
lret
shrb
push
outsb
inc
xchg
les
mov
xor
andb
lret
rol
and
jg
lret
and
loop
cli
push
iret
ja
push
sahf
test
jg
push
outsb
push
jge
out
mov
add
cmp
outsl
test
pop
cmp
scas
subb
loope
out
mov
xchg
repnz
aas
and
testl
iret
divb
mov
push
ret
outsl
push
mov
mov
push
insl
popf
add
inc
cmp
adc
lea
jne
ds
ficoml
sbb
inc
mov
in
jbe
sbb
push
in
test
gs
xor
lahf
outsb
btr
mov
ja
sahf
pushf
out
xlat
scas
movsl
movsb
pop
jnp
add
add
pop
fstl
jae
jecxz
mov
mov
mov
xchg
cltd
or
mov
mov
pop
scas
jns
push
jo
fidivs
hlt
jle
cmpsl
xchg
rcll
sub
jg
cli
dec
sahf
cwtl
inc
cli
bound
hlt
lock
fildl
sahf
xchg
cld
je
leave
lods
adc
out
inc
mov
add
in
push
out
jns
xor
xor
lock
sbb
inc
aam
push
sub
fdivrl
fwait
and
push
xor
pop
push
ret
sbb
mov
out
mov
xchg
dec
addr16
add
mov
inc
xchg
out
xor
ds
std
dec
fisttps
add
dec
aam
push
mov
aam
push
pop
and
pop
sbb
push
int
jge
sbb
xlat
aam
mov
addl
adc
loopne
mov
cmp
add
lea
mov
repz
mov
in
and
jecxz
in
fsubrs
ja
sbb
dec
push
jp
pushf
jnp
cmc
lret
hlt
sbb
movsb
cli
dec
shlb
testl
mov
test
jge
pop
out
pop
xlat
mov
lods
into
dec
xchg
test
lret
push
test
dec
mov
or
dec
jnp
push
adc
jno
sbb
aas
xchg
and
pop
out
adc
cs
into
xchg
jl
adc
fs
lods
outsb
mov
insb
adc
add
or
sbb
scas
adc
movsl
jo
jno
data16
cmpsl
mov
mov
mov
add
mov
gs
aaa
cmp
jl
call
and
mov
data16
xor
push
cmp
dec
jne
sub
adc
lock
and
xchg
mov
fst
ss
or
popa
cmpb
insl
cmp
and
in
out
jbe
dec
popa
mov
inc
sti
jge
mov
add
cmp
adc
lret
and
iret
into
or
adc
nop
imul
out
enter
add
mov
inc
mov
mov
xchg
lahf
xchg
mov
push
pop
inc
inc
mov
cli
sarl
scas
imul
jns
shlb
adc
adcl
lret
leave
and
ja
or
add
das
or
sbb
cwtl
fsts
mov
daa
pop
sub
sub
add
out
sub
inc
popf
aas
mov
pop
daa
shlb
sahf
jbe
ret
xchg
pop
arpl
dec
rcl
cs
lahf
xchg
std
cmpsb
orl
in
aam
xchg
lea
inc
dec
xchg
iret
lds
push
fisubs
sub
aad
xor
fldl
cmp
inc
je
xchg
adc
jns
mov
add
mov
dec
pop
shl
bound
clc
testb
xchg
push
ljmp
xchg
cmpl
stos
lods
ljmp
mov
int
bound
adc
push
xor
shl
push
pushf
pop
or
pop
lods
shll
dec
or
mov
cltd
inc
jmp
vpaddsb
mov
dec
fidivrl
jae
pop
inc
pop
js
inc
adc
stos
cwtl
jmp
mov
mov
call
push
cmp
out
test
sahf
pop
xchg
push
shlb
or
inc
inc
mov
and
pop
dec
jmp
push
xchg
ja
sbb
std
cmp
stos
sbb
aas
pushf
jl
xor
scas
addb
lahf
pop
ja
jl
cltd
inc
inc
pop
and
mov
xor
cli
lods
adc
sub
cmp
or
add
into
rcl
dec
out
push
mov
or
popa
popa
xchg
call
xor
add
lods
shrb
xchg
test
sub
mov
daa
outsb
out
pushf
lods
fisubrs
push
xor
popa
mov
les
xchg
lock
lahf
xlat
adc
imul
fidivrl
or
lea
popf
and
adcb
imul
and
stos
inc
cmpsl
dec
stc
xor
lret
and
xchg
sbb
ret
in
push
mov
leave
adc
or
jnp
iret
fstpt
fldl
cmp
call
push
stc
test
adc
lods
dec
mov
jmp
mov
jmp
ret
lcall
rol
mov
popa
adc
push
mov
push
orl
mov
dec
nop
push
jg
add
stos
test
enter
rorl
int3
sbb
shrl
mov
jnp
jbe
xor
outsb
sarl
lea
mov
inc
cmp
fidivrs
cmp
scas
fsubr
icebp
and
lock
xchg
sahf
pop
dec
aam
addr16
push
mov
outsb
push
push
ds
dec
sti
xchg
aad
jo
fstpl
inc
insl
stc
push
scas
scas
xor
mov
ljmp
inc
pop
stos
lcall
pop
adc
test
jmp
push
dec
out
punpckldq
sbb
inc
aas
lahf
das
ja
jae
jnp
adc
or
mov
adc
gs
adc
arpl
je
popf
jle
fwait
or
push
cmp
push
mov
outsl
xchg
arpl
mov
outsb
out
xor
sbb
repz
repnz
leave
add
cmp
push
popf
or
mov
lcall
push
xor
xor
outsb
mov
mov
pusha
mov
inc
daa
fmull
mov
in
mov
mov
shrb
mov
jle
mov
insl
inc
imul
sbb
movsl
or
cmc
jg
cmp
inc
and
sbb
stc
pop
jno
sub
add
dec
add
push
push
je
push
sbb
jecxz
flds
mov
mov
sarl
ret
or
roll
mov
xor
sub
les
xchg
sub
movb
and
push
push
mov
gs
pushf
movsb
cld
sbb
cmpl
jl
xor
iret
and
mov
inc
and
push
loope
push
or
movsb
clc
sub
test
outsb
in
js
jno
inc
cmp
cwtl
mov
sub
out
clc
cmpsl
shlb
aas
inc
inc
hlt
mov
sbb
fstpl
test
out
push
in
add
sub
xor
or
cmp
cmpsl
addr16
xor
gs
mov
shrl
es
inc
daa
cld
test
out
sbb
mov
adc
cmpsb
fadds
xchg
pop
mul
jecxz
lods
out
sahf
enter
sbb
cmp
mov
enter
xchg
outsl
jge
jl
into
test
inc
fldt
test
and
inc
movsl
cltd
lock
sub
mov
add
xchg
loope
sub
mov
mov
push
mov
mov
dec
inc
hlt
frstor
mov
mov
inc
test
cmpsl
xor
or
enter
cmp
mov
cs
push
jg
je
cli
repnz
sub
mov
aaa
movsl
stos
xlat
xchg
daa
xchg
jne
stos
ss
aaa
push
cmpsl
pop
loop
add
push
mov
lahf
jbe
hlt
movsl
and
stc
cltd
bound
mov
jno
popl
int
ss
sub
cwtl
mov
and
mov
inc
mov
push
xor
jp
jne
xchg
mov
push
mov
push
pusha
lods
je
imul
daa
lea
loope
clc
mov
daa
int
mov
cmpsl
inc
enter
jbe
cmpsb
sahf
sbb
ror
mov
pop
jbe
ss
out
and
sbb
jge
cmp
mov
inc
fidivrs
and
cs
mov
or
mov
ret
pop
xchg
jle
mov
in
test
movsl
jmp
adc
ja
push
out
mov
repnz
sbb
jae
pop
aam
inc
mov
imul
jmp
test
fcom
mov
loope
or
mov
sbb
mov
repnz
sub
mov
out
jp
xchg
cmpsl
xor
jnp
insl
stos
mov
mov
dec
imul
sub
popa
dec
mov
mov
lock
fdiv
adc
ljmp
pop
out
jb
mov
outsl
mov
daa
mov
xchg
mov
fisttpl
xchg
idivl
ss
int3
dec
xchg
mov
lahf
ja
test
das
xchg
or
mov
inc
cs
sub
or
jecxz
lods
hlt
int
fs
cmp
push
das
fists
dec
dec
fwait
jo
dec
push
dec
fbld
movsb
bound
aaa
mov
int
or
pop
imulb
jl
mov
inc
decb
pop
jo
xchg
pop
jl
lods
clc
lret
stos
inc
cmp
pop
or
jb
arpl
mov
gs
stc
adc
jg
cmp
sub
cmp
in
mov
cmpsl
cmp
xor
mov
xchg
pop
xchg
cmp
jecxz
dec
jne
scas
stos
lahf
mov
xorl
add
int3
dec
xchg
scas
roll
push
adc
add
ds
mov
lcall
push
dec
rcll
adc
cmp
lea
imul
or
jno
pop
pop
adc
icebp
ud1
jno
aam
inc
int3
stos
pop
mov
loopne
outsl
xor
les
test
arpl
adc
gs
pop
or
sub
stos
fldl
stos
mov
sub
imul
mov
jb
mov
divl
sub
mov
push
mov
inc
adc
in
dec
pusha
mov
jp
movsb
cmp
ja
adc
mov
mov
push
push
mov
jg
push
sub
ret
addr16
mov
jb
jle
lods
mov
out
loopne
jo
in
lods
add
in
xor
mov
pop
xchg
mov
shrb
mov
pop
xor
out
pop
sub
test
faddp
repnz
in
sub
test
fdivl
in
add
hlt
pop
dec
imul
in
inc
cvtdq2ps
fwait
lcall
mov
mov
pop
iret
mov
jae
adc
into
les
test
xchg
mov
adc
sbb
jo
mov
in
xchg
pusha
imul
adc
inc
jbe
lea
jge
fwait
inc
loope
inc
fildll
pusha
test
pop
add
cltd
inc
ret
shrl
ljmp
xor
or
pop
cmp
push
lds
inc
out
lock
xchg
lods
xchg
push
ficoml
pop
cmp
adc
cmp
sahf
mov
xor
add
add
cltd
jg
rolb
es
pusha
sub
xchg
pop
cmpsl
push
in
cmpsb
add
ljmp
mov
dec
pop
inc
insl
mov
aam
sbb
add
dec
jbe
stos
lret
sub
inc
xlat
mov
jp
scas
add
lods
adc
and
jns
test
mov
push
ds
push
or
jo
retw
jae
iret
inc
mov
enter
sub
add
pop
cltd
adc
xorb
mov
lcall
jno
lret
fiaddl
inc
push
push
les
rorb
lret
mov
xor
adc
rcrb
adc
xor
je
pop
mov
lods
or
jmp
hlt
mov
sbb
movsb
mov
jp
or
mov
clc
loope
jmp
in
mov
repnz
xchg
xchg
lcall
sub
pusha
push
adc
inc
test
add
pop
pop
outsb
jp
sub
imul
jo
push
popa
sbb
in
lea
mov
es
inc
rcll
enter
imul
shll
adc
das
push
push
cmp
pop
ss
cmp
xlat
fdivrl
icebp
cmp
pusha
shll
pop
jge
movsb
cld
lods
cs
jg
bound
sub
cmp
out
daa
pop
xlat
push
fldt
inc
sbb
icebp
stos
adc
jmp
mov
dec
jns
cli
inc
ret
test
push
aad
pusha
ficomps
mov
cli
xor
sub
jbe
or
adc
mov
je
in
or
xchg
gs
jns
lods
stc
push
mov
xchg
mov
xor
jns
mov
sub
and
xlat
xor
insb
daa
mov
and
mov
or
ja
insb
fnstsw
in
and
sub
xor
jg
push
mov
mov
seta
sbbb
jbe
mov
popf
pop
popa
popf
pop
lcall
test
inc
pop
xor
adc
lret
xchg
mov
cmp
sbb
out
mov
pop
jp
sub
aad
pop
jno
adc
inc
mov
lcall
mov
data16
faddp
mov
in
ja
icebp
and
stc
aas
xor
int
repnz
cli
pop
push
lcall
shl
js
loop
aad
dec
lahf
dec
or
pop
push
enter
mov
repz
mov
mov
lahf
jo
fcoml
fnstcw
pop
push
shrb
sub
cmc
inc
add
push
or
mov
in
or
sbb
inc
lret
push
mov
xchg
push
pop
xchg
hlt
fdiv
mov
lret
jge
mov
insb
repz
xchg
cmpsl
icebp
sbb
adc
cmp
add
clc
pop
cltd
pop
pop
cli
dec
mov
outsb
popa
dec
cli
mov
or
lock
inc
rcll
inc
push
mov
pop
sbb
movsb
aaa
inc
outsb
push
mov
inc
mov
stc
jp
gs
jo
insb
push
pop
popa
fisubl
jmp
pop
jge
mov
data16
fstl
rorl
es
sbb
fs
mov
cmpsl
push
cmpsb
mov
push
out
inc
sahf
pop
mov
pop
out
stc
lret
sti
mov
dec
and
cltd
stos
mov
adc
leave
fwait
jae
mov
loop
mov
pop
jp
cwtl
xor
imul
adc
push
loopne
mov
pop
cmp
in
add
repnz
push
pushl
sbb
and
pop
mov
jo
push
filds
mov
sbb
test
add
push
xor
nop
scas
jne
mov
mov
out
stos
jp
mov
nop
cs
push
or
stc
dec
pop
and
mov
mov
stos
mov
jmp
test
pop
push
fs
ret
dec
pusha
push
repz
js
or
aad
add
out
jg
pop
ljmp
or
sub
test
pop
lcall
mov
and
fidivs
push
insl
inc
stc
xchg
fnstenv
xchg
fdivrp
andb
test
popf
gs
mov
and
cmpsb
push
and
test
add
jge
xchg
in
popf
or
mov
push
sub
ffree
mov
lock
jne
std
xor
pop
repz
cmp
push
sbb
mov
or
add
mov
inc
stc
gs
and
cmp
add
ret
sub
xchg
mov
popa
push
xor
dec
mov
mov
sbb
scas
fistpll
out
inc
es
jle
les
sbb
mov
nop
std
cs
das
mov
inc
cmc
xchg
inc
mov
or
pop
cltd
fwait
push
push
je
pop
jl
loopne
mov
cmp
pop
pmuludq
and
dec
mov
push
ljmp
mov
test
sbbb
xchg
mov
push
push
cmp
push
les
inc
out
iret
pop
sbb
sbb
ds
mov
or
add
xchg
leave
cmp
xor
mov
mov
add
fs
jl
repnz
lods
rcrl
cmc
in
std
mov
xor
dec
outsb
movsb
ljmp
jb
and
pop
cmp
and
repz
mov
mov
lret
sbb
inc
push
and
pushf
testl
rcrl
mov
mov
lret
jbe
jl
outsb
out
aaa
xor
xchg
stos
push
bndstx
and
subb
add
jg
mov
push
imul
sahf
pop
incl
xchg
lret
mov
sbb
stos
ret
aas
pop
bnd
sahf
imul
stos
arpl
xchg
std
movsb
push
push
loope
sub
inc
sbb
ja
mov
arpl
mov
sbb
js
mov
mov
daa
movsl
ret
jg
dec
jmp
sbb
dec
arpl
cmc
and
ret
mov
test
xchg
push
sub
ret
aad
cwtl
aas
push
in
adc
sub
mov
jno
mov
jb
mov
cmp
insl
out
mov
push
outsb
imul
jbe
hlt
popf
out
insb
lret
adc
js
sbb
movsb
insb
jmp
and
sbb
inc
inc
and
fisubrs
stc
jbe
shlb
mov
popf
mov
lahf
push
rcrb
fs
lds
sti
out
xorb
test
out
rorl
inc
sbb
mov
push
mov
mov
xchg
or
je
mov
adc
push
aaa
ljmp
add
push
aaa
mov
mov
adc
sbb
lods
mov
jns
xor
out
cld
sub
cmp
or
push
sahf
jnp
aam
into
sbb
inc
pop
movsb
cmp
mov
movsb
ret
mov
push
adc
adc
fistl
cmp
xor
jp
mov
test
lret
orl
fcmovbe
ret
jecxz
fisttpll
mov
and
loopne
fstps
stos
shl
xchg
fwait
jg
jo
scas
subb
push
inc
out
das
or
lret
sub
or
mov
cld
aas
jnp
ret
adc
jnp
mov
cmp
xor
test
in
mov
xor
mov
fwait
mov
out
and
mov
jb
xchg
inc
cmp
jnp
scas
mov
mov
std
daa
jnp
pop
dec
sub
jne
push
inc
add
mov
lods
js
bnd
mov
or
imul
xchg
mov
xor
adc
jecxz
cmp
stos
mov
jae
test
repz
cmp
cmp
rorl
imul
incl
dec
mov
fdivs
mov
fsts
mov
out
add
and
pushf
cli
push
fsubrs
push
scas
cmc
mov
pop
xlat
mov
jge
fcoml
mov
in
mov
mov
inc
sbb
push
jl
mov
lahf
sbb
leave
push
ja
sti
daa
xchg
adc
outsb
xchg
outsb
jae
ja
cmpb
sbb
sarb
ja
rol
mov
xlat
enter
and
fwait
movsl
out
xor
xchg
sub
data16
mov
pop
sbb
add
dec
cs
sub
out
mov
sbb
xor
aam
adc
push
hlt
xor
outsl
adc
jne
popl
pop
aaa
jo
cmp
clc
imul
jmp
or
push
movsl
mov
loop
fcoms
movsl
imul
and
pop
arpl
call
sub
sub
push
scas
inc
int3
jns
xchg
xlat
jo
out
jns
dec
push
cli
dec
jecxz
sub
pop
inc
es
loop
cmpsb
imul
lcall
push
loop
jg
mov
mov
stos
jae
jle
arpl
or
scas
xchg
jmp
movsl
push
testb
fsubr
out
sbb
jno
lea
arpl
xor
lret
mov
jecxz
xchg
sub
stos
test
not
xlat
push
fsubp
mov
fwait
pop
adc
add
push
lock
or
cmp
shlb
sahf
cmp
inc
pop
mov
sti
mov
inc
in
dec
dec
sub
cmp
imul
pop
mov
sbb
les
js
pop
enter
das
lcall
pop
xor
pusha
inc
outsl
mov
filds
mov
cld
adc
or
xor
cld
mov
dec
jg
popa
insb
gs
cmc
mov
sbb
clc
stos
lods
ljmp
movsb
push
mov
dec
xor
cmp
jb
and
in
jns
leave
or
mov
dec
cs
cmpsl
pop
jle
xchg
sbb
jne
push
decb
inc
insl
push
jl
test
push
pop
nop
adc
push
inc
outsw
mov
xchg
dec
stc
jge
xchg
int3
sub
mov
mov
and
mov
cmp
jmp
fbld
sbb
insl
loop
ds
push
jb
push
ficomps
mov
divl
dec
mov
rcrb
jge
xchg
xor
cs
cmp
push
fmuls
and
xchg
add
jp
xchg
arpl
and
inc
fs
jmp
call
dec
orb
inc
sahf
mov
or
mov
lret
outsb
sub
xchg
adc
mov
repnz
mov
xchg
cltd
cmpl
pop
pop
mov
pop
sahf
adc
arpl
pop
std
sti
scas
fs
movsb
das
stos
push
repz
imulb
data16
mov
xor
mov
aad
ret
cmpsb
inc
mov
jmp
xorb
xchg
arpl
les
pushf
in
repz
push
push
fidivrl
or
jne
ja
adc
mov
cmp
pop
scas
mov
add
je
mov
jae
jmp
bound
pushl
aaa
or
cmc
mov
cmpsl
jmp
cmp
inc
jl
ljmp
ret
int
imul
aaa
pop
sbbb
out
lock
test
lcall
outsb
adc
outsl
push
xchg
pop
scas
faddl
loope
push
mov
fadds
leave
ret
fwait
test
popf
test
dec
dec
push
lods
mull
mov
hlt
in
int3
in
leave
jns
ss
fsubrs
arpl
mov
and
iret
lods
inc
out
lods
push
ja
popa
shll
outsb
mov
in
fstl
mov
cmp
jge
test
sbb
in
sti
rol
add
mov
xchg
loope
add
cmp
cmc
sub
call
lret
xchg
out
xchg
cltd
pop
pop
mov
jns
mov
dec
aam
sbb
sub
pushf
imul
add
fwait
mov
cmp
cmp
loop
add
out
sub
jmp
adc
mov
cs
stc
inc
or
bound
jns
sti
dec
ret
mov
push
mov
cmp
or
sbb
cmc
mov
ret
ret
out
int
outsl
xor
mov
in
mov
dec
ret
push
insl
and
mov
cmp
and
add
mov
sub
insb
xor
xchg
adc
fcoms
push
pop
jmp
fcoms
mov
pop
mov
xorb
sbb
aas
inc
pop
jecxz
cmpsb
out
jp
mov
jae
push
test
lods
icebp
pushaw
popa
sbb
ja
les
jl
mov
icebp
addr16
xor
mov
shlb
push
push
andb
xchg
fldl
outsb
xchg
dec
adc
aam
sub
mov
jg
add
shl
mov
fildl
in
pop
mov
sarl
mov
frstor
js
or
and
add
sbb
lret
adc
loopne
adc
mov
xor
movhps
mov
aad
shrb
dec
mov
aaa
cli
aas
xchg
mov
cmpsl
cmp
xchg
xor
dec
mov
roll
or
pop
jns
push
in
stos
loope
lock
sub
hlt
adc
stos
fldcw
sub
mov
out
std
cltd
sub
aad
push
jb
shl
cmp
fdivr
sahf
pop
xor
xor
imulb
adc
jns
leave
ds
dec
stc
or
jle
nop
cmpsb
push
inc
das
fdivrs
sub
pop
xchg
sub
and
test
int
outsl
sbb
movsl
xor
sbb
dec
xchg
jbe
pop
test
popf
cwtl
addr16
mov
push
repz
sahf
mov
out
daa
add
push
rclb
in
loopne
aas
add
mov
jno
jno
enter
imul
mov
ret
es
sbb
jo
dec
cmp
test
pop
movsb
icebp
adc
push
adc
pop
jnp
or
or
mov
inc
dec
cmp
clc
mov
xor
mov
sbb
or
lcall
in
fstl
jp
sbb
push
fcomip
das
orl
call
mulb
call
std
loop
adc
and
int
ss
sbb
ficoms
call
aas
dec
sbbl
icebp
xor
mov
inc
pop
adc
and
add
mov
nop
daa
jns
or
loop
inc
psubusw
cmp
xchg
lahf
hlt
sahf
pop
pop
inc
pop
loopne
or
mov
je
faddl
sub
stos
mov
jne
jnp
enter
popa
imul
sbb
test
stos
lcall
xchg
lcall
pop
lret
pop
and
inc
scas
cmp
loopne
ljmp
mov
add
jo
inc
xchg
inc
sti
aam
lcall
aaa
outsl
int3
inc
mov
test
test
xchg
mov
add
icebp
enter
repnz
mov
jne
mov
mov
mov
js
pop
ret
mov
subl
sti
cmpsb
push
aam
stos
scas
rcll
icebp
test
cli
or
jp
pop
xor
bound
sbb
xor
xchg
testb
cmp
xor
pushf
fnstcw
cmpsb
jle
mov
inc
pop
cwtl
scas
sub
mov
mov
test
push
xor
xchg
pop
imul
add
out
dec
sar
mov
push
xchg
push
divl
test
sub
aam
repnz
mul
data16
lods
inc
push
incl
push
hlt
rol
loop
dec
cvtps2pd
pop
sti
pop
dec
notl
test
fdivrl
mov
jmp
mov
push
das
sahf
xchg
add
insl
lret
dec
pop
dec
push
in
lret
lcall
push
mov
das
test
dec
sbb
aad
dec
inc
mov
jnp
or
rcl
bound
in
stos
int
sbb
jl
das
jns
xchg
or
in
adc
loop
xor
aas
xor
cld
repz
repz
in
insl
stos
cmpsb
dec
movsb
pop
add
pop
imull
jge
fwait
inc
pop
xchg
and
jmp
or
stos
les
jbe
lcall
mov
cld
jg
xor
sbb
mov
sbb
es
mov
sub
fimuls
loop
aas
push
subl
push
jne
arpl
rclb
subl
pop
inc
or
and
xor
xchg
xor
shrl
gs
sbb
jno
imul
push
call
jnp
test
in
cmp
test
stc
push
shl
test
loope
xor
mov
fisttpll
subl
adc
scas
cltd
cmp
in
pop
jg
sbb
xchg
mov
js
or
or
push
push
insb
mov
and
divl
aaa
inc
stc
push
push
cld
popf
inc
adc
pop
sbb
xchg
fldt
sub
xchg
push
or
imul
jb
stc
aam
dec
xor
lcall
sub
dec
cmp
inc
or
or
mov
xorb
mov
shlb
cmp
inc
mov
and
jle
and
mov
dec
scas
je
cld
pop
into
xor
std
mov
aad
cmp
sbb
mov
inc
mov
addr16
lret
es
add
sbb
lahf
incb
adc
pushl
push
cwtl
loope
lds
ljmp
aad
mov
jno
aaa
jae
pop
roll
pusha
call
sub
cltd
xchg
dec
popf
mov
add
mov
dec
das
push
add
sub
pop
leave
shll
mov
std
out
imulb
sti
xor
add
pusha
add
popf
cmpsb
cmp
mov
jmp
mov
aaa
cmp
dec
xchg
adc
pushf
shlb
push
dec
cmp
push
ja
sub
pushf
aad
data16
inc
mov
pop
mov
jle
mov
xchg
sub
int
call
sbb
out
sbb
movsl
and
jg
mov
xchg
popa
xor
fisubl
xor
sarl
pop
inc
sub
popf
pandn
adc
cmp
sub
in
cmp
aas
mov
stc
push
int3
mov
and
std
leave
lock
xchg
in
mov
fistps
cmp
push
icebp
arpl
pop
sub
sbb
es
adc
imul
sbb
and
outsb
adc
aad
and
cmp
dec
outsl
push
mov
adc
test
cmp
dec
fs
inc
pop
std
pop
fildll
fnstcw
pop
mov
mov
ficoml
scas
dec
cmp
bound
out
leave
mov
inc
xchg
inc
das
sbb
aam
sbb
pop
sbb
mov
test
add
sub
jl
or
adc
call
lds
scas
pusha
add
push
les
mov
clc
out
dec
adc
cwtl
lock
adc
mov
add
addb
push
lcall
adc
enter
stos
fdivrl
ja
pop
out
xor
jmp
test
add
cmp
xchg
cltd
pusha
cwtl
pushf
std
lea
movb
mov
insl
add
push
bound
lahf
int3
cmp
dec
pushf
dec
push
cmp
inc
test
dec
icebp
xor
pop
jp
dec
jnp
push
mov
frstor
mov
mov
mov
add
sahf
adc
or
mov
xchg
andb
imul
xor
add
mov
xchg
icebp
loope
mov
fisttpll
lcall
ror
shlb
xor
and
jae
test
je
int3
jl
pop
pop
xor
mov
stos
or
ds
out
std
mov
cmp
mov
mov
fstpt
sub
ja
cwtl
clc
pushf
stc
sbb
mov
xor
or
and
sbb
outsl
xor
test
dec
sarb
out
gs
mov
outsl
mov
aam
lahf
xlat
scas
in
sahf
lock
sub
jg
aaa
inc
fisubs
jmp
mov
and
fcoml
inc
push
mov
mov
sbb
jmp
inc
add
int3
outsb
imul
mov
xor
or
xchg
xchg
movsb
les
push
nop
pushf
imul
ret
xor
sbb
negl
aaa
mov
adc
cmpsb
push
int3
pop
add
mov
jmp
pop
xlat
rcrb
out
mov
movsl
adc
leave
xchg
mov
cltd
or
aam
push
add
test
fadd
add
stos
or
data16
fbstp
sbb
jbe
out
jno
sti
mov
mov
popa
xor
popf
outsb
adc
xchg
pop
xchg
adc
jmp
cmp
pop
or
pop
sbb
lock
mov
or
shl
push
hlt
rcr
push
cmp
scas
nop
aaa
sbb
aas
pop
ret
repnz
ja
lahf
clc
call
jae
repnz
xchg
clc
dec
dec
or
std
mov
fdivs
push
cmpl
rcll
xor
push
dec
sbb
mov
cltd
xor
lods
cmpsb
std
mov
cmpsl
clc
fsubs
test
adcl
hlt
stos
xchg
cld
ficoml
bound
add
mov
lret
adcb
and
aas
pop
pop
lods
xchg
adc
cwtl
clc
push
and
adc
repz
mov
sub
movsl
notl
mov
aad
shrl
lret
sbb
enter
in
lret
inc
aad
dec
lret
cwtl
in
mov
loopne
clc
das
mov
lock
sti
push
jae
lea
mov
inc
popf
mov
push
fiadds
fld
add
dec
mov
push
fistpll
mov
lret
test
jle
andb
fisttpll
mov
add
fwait
aam
sbb
lods
adc
insb
enter
mov
cmp
mov
mov
lds
push
adc
mov
jge
clc
or
sbb
outsb
popa
adc
dec
stc
lods
int
imulb
mov
sahf
shlb
dec
push
imul
mov
and
jl
jns
jb
pop
jno
stos
xchg
add
cltd
adc
mov
stc
ja
cmp
std
cmp
lea
sbb
fwait
dec
outsb
push
jp
mov
lods
loop
ds
jnp
xor
dec
fwait
in
mov
cmp
dec
lret
loope
imul
mov
cmp
inc
mov
test
push
jmp
pop
pop
adc
adc
lret
dec
out
fsts
call
mov
and
mov
xor
xchg
aam
mov
ret
or
adc
xchg
xor
js
xor
movsl
in
call
sub
push
sbb
sub
adc
push
ds
fs
sti
lahf
aas
xchg
add
cmpsl
aam
mov
sbb
imul
inc
pop
jb
xlat
mov
std
pop
insl
sbb
add
jmp
lcall
rorb
push
xor
pop
dec
push
cmpsl
mov
stos
mov
std
mov
and
cltd
sub
nop
xchg
sub
in
or
jg
xor
imul
pop
scas
mov
dec
test
mov
xor
xchg
add
subb
out
adc
cmpsl
push
mov
jle
mov
rorl
arpl
inc
shlb
add
mov
repz
xchg
sti
jp
mov
test
push
cmpsl
sbb
jp
int3
jnp
fmuls
in
cmpsl
dec
iret
mov
in
cld
pop
pushf
pusha
faddl
sub
inc
pop
sbb
sub
xor
xorb
add
dec
push
shll
imul
mov
xchg
aam
jg
leave
dec
cmp
stos
mov
jbe
sbb
and
shld
xor
and
movsb
mov
js
ja
dec
int
popa
fadd
mov
popa
cmp
mov
cmp
push
cmp
pop
jnp
push
jbe
add
sbb
repnz
adc
mov
mov
xchg
rcr
daa
fs
fstpl
mov
mov
cmp
sbb
loope
leave
cld
xchg
cmpsl
movsl
mov
xchg
imul
call
sub
cmpsb
jmp
push
or
xor
pop
jnp
jp
bound
add
jmp
fisubrl
das
dec
dec
pop
pop
inc
icebp
in
pop
cmp
inc
outsb
fstpl
std
or
loope
mov
fwait
scas
pop
fnstsw
ljmp
fmuls
mov
dec
sbb
mov
outsb
daa
hlt
mov
dec
mov
lds
cmp
gs
fbld
rcrb
test
xor
jae
cmp
jae
adc
mov
cmp
imul
orb
test
and
pop
sar
cltd
mov
outsb
rorl
rolb
mov
lock
rcll
std
in
test
sub
les
lea
in
aam
mov
je
lds
out
jecxz
sahf
mov
aad
repz
repz
or
xor
cmp
adcb
xchg
imul
add
loop
aaa
xchg
fsubrl
adc
inc
pop
repnz
xchg
mov
xorb
pushl
daa
mov
out
cmpsl
pop
xchg
cmc
cmp
jecxz
xor
and
fs
jns
nop
adc
iret
dec
xchg
push
mov
adc
mov
pop
outsb
sbb
fadds
xchg
xor
xor
cli
jp
xchg
leave
or
jmp
adc
jmp
bound
and
rol
dec
pop
mull
jge
jl
imul
cmp
or
repnz
sbb
in
ret
out
mov
imul
push
stos
mov
loope
in
pushf
pop
xor
mov
mov
sub
das
ds
sbbl
mov
push
push
sbb
rcll
cwtl
es
xchg
push
scas
lret
repz
dec
shl
rcrb
xchg
clc
ror
xchg
adc
mov
xchg
xchg
jbe
jmp
inc
push
cmpl
dec
test
adc
lcall
cmp
jbe
dec
or
and
fldl
jmp
pop
std
or
outsb
insb
addr16
loop
xor
sbb
in
cmp
movsl
dec
shl
jmp
mov
js
mov
repz
xor
mov
fs
jmp
jecxz
xchg
outsl
xor
adc
jle
clc
and
dec
es
xchg
and
sti
mov
jns
je
add
pop
sti
lods
ja
ret
dec
cmp
leave
ja
not
jecxz
imul
xchg
push
inc
pusha
je
outsb
pop
pop
scas
in
cmpl
push
mov
push
cld
jno
mov
cmpsb
cs
dec
pop
jp
fcomip
mov
sub
movsb
ror
inc
mov
roll
sbb
sti
push
push
mov
xchg
push
push
icebp
incb
add
mov
lret
stc
or
adc
int
loop
push
aam
inc
mov
and
jp
pop
outsl
cmp
mov
sti
pop
mov
and
mov
leave
negb
ss
jl
pop
mov
fisttpl
ss
in
push
sahf
sub
frstor
adc
add
pop
mov
mov
cmp
jb
pop
mov
stos
jl
mov
sbb
andl
ja
pop
rcll
lret
push
pop
in
jae
lret
lahf
or
mov
dec
inc
mov
iret
inc
insb
outsb
or
push
mov
cmp
cmp
xchg
dec
xchg
test
xorb
mov
cmp
pop
mov
cmp
dec
xor
fisttps
movsb
and
mov
testb
cs
xchg
mov
ret
sbb
leave
out
sti
rclb
inc
inc
loop
mov
std
push
xor
mov
jmp
rcl
les
hlt
dec
add
inc
shrb
xor
lcall
xor
cmp
jne
inc
cmc
adc
inc
cmp
in
push
adc
cmp
std
scas
cmp
inc
xchg
into
iret
test
movsb
dec
in
or
ror
mov
sub
xchg
mov
and
mov
xor
mov
in
cmp
pop
pop
adcb
cmp
jno
pop
push
dec
push
pop
push
mov
jp
mov
subl
int3
sbb
jno
mov
sub
add
ds
jno
icebp
xor
add
pusha
daa
enter
push
inc
or
aad
add
testb
fcomip
enter
xlat
lock
push
in
mov
outsb
inc
fadds
ret
ljmp
and
xor
cmc
push
test
xor
sahf
and
mov
out
lods
lcall
push
inc
pop
arpl
xor
mov
jne
fs
xor
cwtl
aad
or
xor
inc
insb
sahf
ret
stc
out
repz
adc
lock
pusha
fstpl
mov
or
pusha
testl
arpl
callw
xchg
ljmp
xchg
dec
mov
aaa
outsl
push
mov
mov
cmp
fidivs
xor
mov
mov
subb
sbb
xor
xchg
sarb
inc
imul
dec
and
pop
into
sub
dec
xchg
stos
mov
repnz
clc
aas
lea
lret
icebp
or
sti
push
ds
std
lcall
imul
push
gs
in
push
jae
test
lret
test
xor
lods
into
inc
sbb
pop
jp
repz
lods
arpl
das
outsl
dec
push
pop
clc
or
jae
ret
cli
mov
push
dec
roll
xchg
sti
inc
pushf
or
cwtl
adc
jo
sahf
mov
xchg
cmp
xchg
mov
pop
push
mov
mov
jbe
cmp
xchg
xchg
lahf
into
xor
xchg
push
sti
and
push
test
lods
mov
arpl
iret
test
clc
mov
xor
dec
or
adc
push
add
out
fldcw
loopne
scas
sti
movsb
scas
fwait
pop
mov
movsl
xor
enter
inc
mov
push
jnp
and
enter
push
jl
push
push
inc
test
adc
lcall
out
je
xchg
inc
iret
dec
test
imul
mov
arpl
mov
adc
pop
loope
out
orl
mov
ja
leave
xor
vpaddw
lahf
fldcw
adc
shll
out
rorb
xlat
and
dec
jb
dec
repnz
mov
mov
push
insb
and
out
sti
into
std
lds
xchg
push
xor
sub
movsb
inc
in
movsb
jnp
cmp
mov
inc
cli
cwtl
pop
scas
fwait
cmp
call
mov
arpl
ja
das
fisttpll
push
in
mov
cmpsb
mov
into
xor
jae
xchg
aad
push
pop
xchg
inc
jle
les
jno
inc
cmp
ja
jp
fsubs
mov
mov
fsubl
fwait
jecxz
sub
ret
or
jno
loop
cs
shrl
add
in
fcmovnbe
xchg
adc
dec
lcall
aad
cwtl
mov
jl
and
push
xor
xlat
xchg
cmp
jne
movsb
dec
loope
xor
iret
divl
andl
subb
xor
addb
sbb
cld
xlat
fidivrs
mov
push
jg
cmp
adc
pop
sbb
push
lret
push
jp
adc
enter
add
or
fisttpll
xor
ds
xchg
sbb
addb
jo
jmp
dec
fsubrs
and
imul
lea
xchg
pop
add
dec
test
andl
xchg
fistpll
cmp
xor
push
pop
jo
movsb
xor
icebp
jns
push
cmp
leave
push
adc
xor
pop
cmp
les
or
shrl
mov
sbb
arpl
outsl
adc
ss
hlt
pop
std
push
jne
xchg
sub
cmpsb
out
int
roll
pop
cmp
stc
and
mov
imul
xor
cmp
mov
or
rcrl
mov
pushf
push
mov
cmp
shrl
and
fcmovne
test
aaa
jnp
cs
aas
pop
push
sbb
sbb
push
jmp
dec
adc
movl
push
dec
dec
sbb
mov
add
mov
lcall
ja
ljmp
cmp
sub
push
fstpl
mov
arpl
push
enter
mov
aam
dec
scas
dec
mov
pop
pusha
add
cld
and
pop
sbb
adc
pop
and
sti
out
push
shrl
and
pop
mov
xchg
inc
xor
mov
clc
push
xchg
inc
mov
and
jae
add
mov
andl
in
cmp
push
mov
xchg
push
mov
popf
and
xchg
or
cmp
push
ja
sbb
int3
jmp
or
popa
push
cltd
vpackssdw
fldenv
test
and
dec
mov
fists
sbb
xchg
xor
dec
sbb
pop
mov
sub
test
mov
cmp
cmp
adc
jl
ja
inc
push
icebp
adc
adc
mov
xchg
push
jmp
or
sub
sub
jecxz
rcr
lods
clc
fldt
jns
imul
jmp
inc
stos
dec
xchg
cs
out
stos
imul
fidivrs
push
or
adc
mov
xor
je
sahf
ljmp
mov
xorb
jecxz
ret
cli
xor
paddw
sti
cmp
je
jo,pt
sahf
js
jns
iret
test
in
sbb
repz
add
lods
cmc
xchg
pop
pushf
xor
push
mov
or
ret
sbbl
sub
or
xor
inc
jae
rclb
jnp
ret
lret
cmp
daa
shlb
sahf
inc
fdivrs
lret
addr16
mov
faddl
xchg
inc
adc
xchg
or
xchg
sbb
lds
adc
mov
fsts
js
test
das
jecxz
fucomip
bound
sahf
addr16
cmp
fildll
fdivs
pop
and
push
xor
xchg
mov
movsb
mov
push
inc
adc
loopne
mov
cmp
dec
add
jl
ljmp
jae
test
mov
xchg
jbe
fisttpll
enter
mov
push
mull
or
and
loop
cmp
xchg
call
push
mov
movsb
push
data16
push
jmp
loop
test
sub
lahf
test
test
push
and
xchg
pop
dec
aad
lods
xchg
mov
aam
shrb
and
outsb
cmpb
sub
jp
pop
inc
add
js
mov
or
push
adc
adc
cltd
fstpt
mov
aaa
cmp
ja
lret
mov
sbbl
xlat
mov
lods
sbb
repnz
dec
inc
or
xor
cmpsl
xchg
xchg
add
add
mov
stc
xor
add
xchg
mov
and
in
inc
push
jl
xor
push
mov
xchg
mov
and
inc
sarl
jae
mov
xchg
push
gs
scas
in
out
sbb
rorl
pop
push
sbb
dec
inc
fisubl
in
lock
add
jecxz
lds
test
scas
pop
push
xor
sarl
dec
into
cmp
pop
roll
cmp
jmp
gs
cwtl
mov
xlat
mov
push
es
insb
and
mov
pop
pop
add
shll
cmpsb
sub
hlt
push
in
cmp
xchg
mul
mov
or
push
add
jg
popa
mov
jmp
dec
sbb
push
push
inc
loop
lahf
test
jnp
test
mov
pop
in
mov
sub
sub
pop
fistps
and
xor
jae
inc
mov
das
inc
xor
gs
fcoml
in
into
cli
jb
and
loopne
lock
push
push
sbb
sbb
rcr
or
js,pn
es
les
jbe
cmp
adc
je
rcrl
push
lcall
cmp
gs
xchg
adc
popf
mov
and
dec
pop
lahf
pop
mov
pop
xor
add
les
xchg
jb
or
jl
es
push
adc
dec
fcmovbe
scas
xchg
dec
fsub
pop
std
icebp
lds
add
ret
sbb
sub
out
pop
imul
stos
mov
outsl
mov
pop
push
mov
jle
cmp
imulb
movsb
ret
dec
sbb
loope
loop
aam
dec
repnz
mov
iret
add
mov
sbb
mov
xor
xor
out
jns
inc
ror
xor
imul
iret
movsb
mov
jg
loopne
les
or
jno
movsl
push
push
jmp
push
mov
data16
mov
sub
andl
fwait
int3
ljmp
leave
or
jmp
cltd
jae
pop
xor
sub
mov
fimull
mov
movhps
into
inc
loope
mov
andb
xchg
rcrb
in
mov
xchg
cmp
push
pushl
xchg
cli
and
rorl
xor
xchg
xchg
adc
mov
fstps
sbb
xorb
push
pop
mov
data16
sub
cmc
mov
orb
push
mov
cmpsb
cmp
sbb
sbb
addr16
ficoml
pop
cli
inc
aaa
sub
js
xor
mov
je
nop
cltd
mov
xchg
xchg
sub
fwait
es
test
insb
sbb
cmp
das
mov
pusha
jl
mov
adc
mov
pop
mov
inc
cs
jge
enter
test
mov
mov
dec
cli
push
wbinvd
js
dec
movsl
lret
push
dec
ljmp
sub
add
xlat
cmp
pushf
sbb
int3
inc
add
jbe
fmuls
push
rolb
push
out
adc
add
adc
out
mov
jecxz
inc
lret
cwtl
jno
fcompl
cli
add
aad
pop
push
fdivs
out
xorb
in
out
fisttpll
add
lock
insb
repnz
mov
cmpsb
insb
xor
scas
mov
mov
or
xor
rorb
sbb
push
pop
imul
pop
xor
mov
xor
jae
pop
push
sbbl
cli
dec
mov
rcr
pop
cli
xor
repz
cmp
jle
int
adc
addr16
xchg
fwait
ds
js
stos
dec
fbld
jns
and
lcall
add
rorl
std
xchg
test
aam
shlb
scas
adc
sbb
sbb
and
and
xor
rcrb
fisttps
cmp
push
sbb
pop
cmp
sbb
enter
rolb
sbb
aam
sarl
jo
pushf
loopne
jo
cmp
fisubs
mov
test
mov
test
data16
movsb
jecxz
pop
cmp
inc
fisttps
inc
bound
das
outsl
jnp
sub
and
xchg
and
loope
mov
sub
fists
jmp
movsl
mov
icebp
movsl
les
pop
es
aam
stos
loopne
in
jns
push
data16
addr16
dec
push
bound
adc
mov
lock
xchg
std
lcall
iret
shr
lods
ficoml
lret
jg
int3
push
sub
push
xor
mov
fistpl
scas
icebp
jb
mov
ja
enter
jo
mov
sbb
inc
sub
mov
inc
xchg
cmp
pop
or
shrl
pop
leave
xchg
xchg
mov
aaa
or
sub
xchg
xchg
repnz
push
mov
sti
inc
data16
push
pop
adc
adc
dec
outsl
mov
sti
push
jmp
dec
movsl
and
xor
or
ficoml
andl
jl
repnz
jle
jae
mov
xchg
fidivs
and
bound
leave
in
dec
xor
jg
xchg
lcall
adc
mov
lds
hlt
inc
lret
cmpsb
sub
iret
push
lret
sbb
imul
das
loop
push
leave
sbb
mov
mov
dec
mov
leave
sbb
cmp
mov
data16
dec
inc
mov
pop
jno
jp
loopne
jg
sbb
cli
test
jg
bound
in
add
scas
xchg
scas
outsb
xor
jne
and
hlt
jbe
xor
adc
rcrb
jns
arpl
mov
enter
xchg
or
mov
arpl
shll
jbe
or
mov
sbbl
out
popf
cltd
std
lock
adc
jno
movsb
mov
insb
stos
ljmp
mov
pop
test
jo
in
add
mov
fs
sub
movsl
xor
loop
cli
mov
xchg
idivb
xor
gs
cmp
add
inc
add
add
fidivl
or
addr16
repz
repz
stos
test
outsl
lods
adc
xor
xchg
jecxz
out
sbb
mov
pop
inc
sub
jno
mov
leave
push
xor
mulb
in
xchg
insl
mov
dec
into
xor
xlat
xor
xchg
dec
aam
test
sbb
testl
in
ret
push
pusha
popf
dec
xchg
int
mov
scas
repnz
in
push
std
fbld
imul
cli
cltd
fsubrs
xchg
es
insb
je
add
pop
clc
leave
std
xor
movsb
sub
incb
cmpsb
gs
lock
insb
ds
inc
cmpsb
outsb
push
sbb
js
ds
pop
sbb
dec
xchg
rcll
adc
inc
js
out
pop
push
xor
sub
xchg
or
clc
cmp
or
or
aas
pop
jbe
out
dec
in
fwait
repnz
mov
pop
add
addl
jecxz
repz
mov
xchg
xor
out
std
and
iret
pop
add
lcall
test
sub
mov
les
out
xor
lcall
xchg
cmp
mov
call
jmp
fcomip
and
xchg
movsb
cmp
sbb
xchg
push
dec
out
orb
mov
xor
int3
int
scas
mov
jg
cmp
lods
aad
fildll
mov
xchg
out
mov
cmp
fmuls
xchg
xor
jb
pop
shr
sbb
pop
push
pop
pop
lock
fcom
mov
ss
lahf
jbe
push
add
mov
jmp
and
adc
inc
mov
hlt
push
adc
test
push
lahf
daa
dec
test
mov
xlat
dec
addr16
sub
in
pop
mov
sub
adc
cmp
scas
sub
mov
std
ja
xchg
cld
das
xchg
daa
mov
jno
sbb
mov
ds
push
jbe
bnd
cli
cs
loopne
cld
call
inc
pop
roll
out
add
xor
jp
loop
jp
jns
nop
xchg
jne
push
dec
test
ficoml
mov
sub
lock
in
xor
stos
xor
mov
pop
in
ja
xchg
ljmp
cld
jns
in
fcomps
jo
insb
cwtl
addl
inc
mov
loopne
and
lods
push
push
sahf
scas
stc
rcrl
jge
int
and
imul
aad
loope
ja
xchg
aad
movsl
sbb
jge
ret
lock
and
dec
adc
push
push
or
mov
ja
sub
adc
or
cmp
push
sub
mov
ja
xor
fimull
mov
cmp
xchg
gs
or
sub
cmp
fadd
mov
xchg
push
xchg
adc
adc
adc
xlat
int3
loope
and
insb
testl
mov
add
jp
adc
jecxz
cmpsl
or
es
and
and
js
fimull
mov
insl
and
lret
outsb
push
jmp
and
cs
bound
je
aas
dec
call
adc
mov
xchg
enter
imul
js
adc
pushf
fs
pop
bound
imul
pushf
mov
mov
jbe
roll
adc
aam
add
or
cmp
out
mov
imul
fisubrs
js
or
idivl
or
sbb
or
movsl
lret
dec
xchg
fiadds
loop
aas
push
shll
mov
cmpsl
cld
call
and
dec
jne
jns
mov
mov
popa
ja
bound
ficoms
add
and
les
adc
popa
addr16
test
cltd
test
xchg
dec
inc
xor
sbb
outsl
fistpll
les
inc
add
xchg
jae
jmp
mov
xor
es
push
mov
push
cmpsl
jno
and
and
dec
pop
ljmp
dec
pop
nop
int3
pop
mov
aas
out
test
mov
data16
push
xchg
lcall
or
ljmp
xor
mov
and
xchg
xchg
xlat
fs
mov
mov
cmc
push
xor
sbbb
xchg
mov
dec
pop
mov
lret
inc
ficoml
xchg
xchg
ds
and
pop
in
incl
push
push
dec
aad
xchg
mov
and
sbb
sub
ljmp
mov
subl
mov
pop
cmpsb
dec
xor
dec
test
push
cmp
ljmp
fs
aaa
rep
fildl
clc
jns
movsl
jle
out
xchg
dec
push
notb
xor
iret
es
cmc
js
inc
jns
mov
xlat
cli
aam
lret
sub
jae
shrb
jo
push
scas
lds
push
repz
adc
dec
mov
out
fs
stos
pop
lret
pop
adc
jne
pop
mov
lods
xlat
and
jmp
mov
add
int
sub
std
lret
mov
cmp
sti
mov
fisubs
mov
xchg
lahf
dec
and
fwait
es
push
lds
js
lods
outsb
dec
or
test
xchg
sub
std
pop
mov
ds
push
cmp
lahf
cmp
and
movsb
push
mov
or
mov
mov
incb
int
mov
inc
in
jge
imul
add
daa
into
in
sub
mov
and
mov
outsl
test
adc
pop
shrb
and
mov
loop
adc
jne
test
mov
inc
scas
adc
into
lock
rol
add
fcmovnbe
mov
test
loop
pop
popa
pop
dec
ja
fidivrl
pop
loope
dec
mov
push
lcall
dec
add
jecxz
mov
add
cmp
mov
or
stos
enter
pop
pop
add
jecxz
fwait
xchg
pop
fsubrs
sbb
cmc
inc
push
mov
fs
sbb
cmc
and
ret
dec
mov
push
pop
add
cmp
and
nop
jle
cwtl
jbe
jl
inc
fmull
shrb
xor
cld
xchg
scas
scas
loop
fsubl
adcl
xor
mov
pop
sbb
mov
dec
push
mul
sarb
aam
out
sbb
push
scas
xor
dec
pop
cs
sbb
push
mov
fldt
push
push
jle
int3
int
ds
xchg
adc
je
leave
push
dec
call
add
cmp
test
xchg
and
inc
int
mov
push
adc
sbb
popf
lret
or
cwtl
loopne
jbe
enter
jns
jnp
inc
xor
sub
lock
je
lea
lods
push
lock
xor
jecxz
jbe
push
add
das
pop
js
push
or
push
push
jo
dec
in
aad
push
cltd
in
cmc
jmp
std
out
xor
mov
aaa
in
sub
mov
or
movsb
fistpl
sti
xor
int3
pop
push
pusha
or
cmp
xor
in
jno
mov
add
pop
insl
test
and
ret
dec
or
cltd
testb
inc
sbb
dec
dec
out
stos
or
mov
inc
add
mov
scas
stc
mov
into
mov
lds
movsl
shlb
clc
or
fcoml
or
mov
cli
scas
arpl
int3
jnp
loope
fisttps
jnp
scas
adc
out
gs
push
xor
add
inc
mov
xchg
jecxz
loope
mov
mov
lods
cmpsb
and
addr16
mov
imul
loop
nop
inc
pop
or
outsl
add
test
stc
xor
sbb
int
cmp
cli
and
mov
mov
sbb
jp
xor
add
cmp
inc
jmp
push
lea
and
pop
sub
stos
rorb
inc
push
xchg
jg
pop
inc
mov
loopne
and
pop
rolb
dec
jbe
sbb
inc
mov
push
lods
pop
mov
xlat
sub
movsb
mov
cmp
dec
mov
aam
sub
std
sbb
pushf
mov
loope
mov
pop
popa
xor
stos
shrb
hlt
cmp
and
clc
jl
arpl
testl
fucomp
push
cmp
lock
inc
stc
in
hlt
push
mov
andb
inc
mov
sbb
stc
pushf
out
add
add
add
lds
dec
jae
lods
imul
cmp
sbb
push
seta
pop
cmp
lods
mov
jle
mov
cmp
sbb
ds
adc
sub
xor
leave
mov
or
xchg
loope
jo
das
fistpl
push
mov
clc
in
pop
frstor
popf
loope
sahf
jne
fwait
xchg
sbb
orl
ljmp
mov
xor
arpl
sbbl
clc
adc
xor
sbb
stos
pop
popf
fsubs
repnz
mov
es
lds
shlb
jno
daa
out
and
lods
pop
jle
testb
lret
xor
addl
pop
jns
jne
addr16
stos
lret
mov
cmp
sub
gs
out
test
dec
int3
imul
into
ljmp
shrb
jp
push
mov
lock
and
sahf
mov
xstore-rng
cmpsl
inc
loopne
les
stos
jecxz
mov
pop
lret
shll
sti
dec
pop
sbb
jo
repnz
mov
insl
cmp
les
addr16
std
push
cmp
mov
lahf
push
jns
cmp
ret
sbbb
ss
test
addr16
lret
xchg
das
dec
repnz
stos
jae
xorl
jecxz
sub
repnz
fcmovnbe
lock
imul
imul
sbb
cmc
xor
pop
popa
push
add
pop
xor
cld
jg
mov
xchg
push
cli
push
jge
movb
clc
lahf
movsl
aaa
into
fistpl
fcompl
fcomps
dec
jne
xchg
pop
mov
push
lods
xor
js
cmp
ja
mov
cwtl
fisttpll
in
popf
sbb
fistpl
rclb
cltd
cli
push
call
rep
sti
jno
pop
rcrl
lret
sti
push
inc
xor
scas
xchg
push
pop
sti
or
cmpl
sub
dec
jl
aaa
cmp
pop
mov
mov
push
and
cs
xchg
jge
mov
pop
imul
jb
out
or
rorl
or
insl
cli
ljmp
cmp
mov
sahf
jnp
xlat
or
pop
lret
inc
movsb
rcr
mov
or
bound
dec
pop
xchg
xchg
lds
test
adc
popa
lock
sub
mov
rcrl
nop
push
mov
lret
fwait
push
xchg
cs
cmp
je
cmpsl
mov
pop
jbe
mov
scas
mov
lcall
pop
jns
jno
fsubl
jno
dec
aaa
dec
push
and
xchg
notb
xchg
cmpsb
fidivrs
cwtl
movl
out
ss
jb
or
add
inc
push
stos
dec
inc
inc
cmp
and
xchg
or
mov
mov
jmp
shlb
cmp
push
ficomps
jne
adc
jg
dec
push
push
xor
lock
pop
jo
inc
fsubl
xchg
pop
popf
mov
inc
lcall
insb
xchg
adc
cmpl
mov
push
adc
rcrl
push
mov
mov
cmp
je
movsb
cmp
inc
stc
xchg
popf
or
jnp
jecxz
testl
shr
into
pop
daa
rolb
mov
rcrl
add
xchg
mov
push
xchg
je
test
xchg
fcomps
in
rolb
mov
idivl
cmp
adc
jg
adc
or
xchg
bound
js
movb
in
xchg
mov
jg
sbb
or
test
imul
or
lcall
xchg
jno
pushl
and
add
loope
ret
adc
stos
cmp
push
xchg
in
push
in
movsb
aaa
xchg
inc
add
js
out
scas
jno
fwait
addr16
gs
lret
fs
out
and
push
xchg
sub
mov
clc
add
adc
ret
into
enter
push
mov
jl
jnp
inc
std
xchg
je
mov
cmp
mov
fbstp
dec
xchg
pop
fsubs
incl
jnp
lods
cwtl
gs
loopne
lahf
mov
aaa
jo
pop
in
or
and
call
cmp
push
dec
imul
cli
movsb
sbb
enter
jecxz
push
pop
cli
sahf
dec
cmp
dec
rcl
dec
pop
mov
and
cmc
adc
rolb
ret
arpl
jl
sbb
add
icebp
mov
pop
jno
scas
xchg
test
sub
fisttps
or
adc
mov
outsl
cmpsb
adc
lcall
mov
xchg
lahf
aaa
aam
aas
xchg
and
or
mov
pop
mov
adc
ret
rolb
inc
aam
out
fildl
imul
jl
and
push
dec
jecxz
lock
out
and
cld
pop
pop
dec
call
jecxz
mov
dec
inc
out
ret
dec
cli
mov
mov
and
cmp
arpl
loope
loopne
scas
pop
jb
ds
fwait
cs
push
and
sub
or
and
jo
push
cmp
out
dec
mov
out
push
adcb
loopne
hlt
fs
xor
cli
cli
xlat
push
mov
testb
jae
rorb
sub
sbb
add
imul
fwait
xchg
rcrb
xchg
cwtl
in
loop
pop
xchg
inc
push
std
push
inc
mov
std
pop
adc
faddp
pop
fsubl
inc
out
push
jl
inc
stos
push
in
sbb
lret
push
sbb
stos
xor
stc
mov
aam
lcall
mov
xlat
idivl
rcrl
xchg
dec
mov
jnp
stos
jmp
xchg
ja
scas
mov
not
scas
mov
out
cltd
sti
dec
cmpsb
andb
popa
add
and
mov
test
fsts
cwtl
sbb
mov
pop
int3
mov
insb
xchg
insb
xchg
dec
mov
dec
andb
add
test
xor
add
and
lahf
and
jae
pop
in
adc
repnz
mov
icebp
orb
dec
fs
bound
int
sub
std
repz
mov
mov
inc
sub
inc
cmp
rcll
dec
push
in
ret
push
sbb
fdivl
push
lods
sete
jb
lret
js
xchg
xor
and
in
dec
or
stos
cmp
ds
jae
or
sar
or
inc
out
outsl
out
inc
mov
lret
inc
mov
push
mov
lret
push
sbb
cs
push
cltd
ja
int3
nop
rclb
out
and
test
xor
test
or
daa
in
int3
and
inc
add
sbb
or
test
jge
sbb
pop
wbinvd
aam
mov
ret
imul
outsb
and
mov
xchg
movsl
push
lock
fidivrl
mov
push
bound
dec
jge
testl
cmpsl
xor
mov
test
repz
lods
dec
xor
mov
mov
mov
in
clc
pop
pop
loop
jg
shll
cmp
mov
lds
mov
xchg
mov
jb
cmp
fidivrl
adc
pop
outsb
jno
scas
test
out
sub
mov
inc
mov
icebp
sub
dec
lds
clc
pop
adc
test
mov
mov
mov
xchg
jo
inc
xor
mov
lret
jbe
jmp
jnp
cmp
inc
mov
repnz
jecxz
push
pop
leave
xchg
das
mov
popa
repz
cmp
loope
xchg
in
pop
lret
test
or
dec
fs
popf
pop
stos
js
add
scas
inc
sub
loope
nop
xor
insl
loope
hlt
xchg
jbe
add
js
and
faddp
imul
add
leave
sub
mov
push
movsl
es
lahf
mov
push
test
push
dec
clc
cmpsl
inc
push
in
xchg
add
pop
push
lret
lea
cltd
out
or
sbb
addr16
adc
jnp
add
cmp
mov
sbb
insl
xchg
add
sbb
loopne
xchg
mov
xchg
je
mov
pop
xchg
test
mov
jg
fidivrl
movsl
rcll
out
pusha
xor
fwait
push
push
arpl
int
stos
out
add
and
fcomps
pop
into
xor
imul
ss
mov
test
andl
cwtl
and
or
lods
adc
loop
pop
outsb
addr16
pop
jmp
sbb
repnz
inc
xor
sub
pop
mov
test
nop
dec
sub
testl
test
pop
inc
mov
int
push
pop
ss
repnz
jl
adc
out
mov
add
adc
jo
and
arpl
cs
xchg
lret
imul
in
ret
lcall
cmc
out
aas
outsb
popa
cmpb
jmp
rolb
fisubs
jmp
fisttpll
and
popf
and
lock
jge
sbb
stos
or
mov
jo
adc
inc
or
push
ret
outsl
jae
and
inc
sbb
sbb
daa
pop
dec
add
cmp
xchg
jbe
jbe
jmp
xchg
jge
mov
ficomps
sti
push
call
or
subb
insb
lcall
or
inc
push
ret
sahf
cli
dec
xchg
push
push
sub
sub
mov
xor
xchg
inc
aas
jmp
daa
xchg
xchg
outsl
aas
insl
jo
pop
dec
sbb
out
sub
outsb
shlb
cmp
sub
lods
push
jae
pop
cmp
sbb
fsubr
pop
rorl
xlat
inc
sti
mov
push
pop
aas
dec
movb
sahf
fsubp
insl
arpl
and
sahf
movl
sbb
iret
icebp
and
test
lea
mov
addr16
mov
mov
lcall
jmp
inc
or
stos
lods
jl
in
aaa
lods
jp
jmp
imul
xchg
addr16
fstps
inc
outsl
push
shll
cmc
call
xchg
xor
push
imul
scas
sub
pop
in
data16
nop
jmp
sbb
mov
arpl
aam
mov
xor
dec
lret
cmp
fcompl
xchg
xchg
mov
mov
fstpl
mov
mov
arpl
jge
dec
jne
inc
test
and
cmp
shlb
or
or
nop
xor
ret
ret
hlt
je
push
push
or
inc
fs
mov
push
push
sub
insb
nop
or
aam
mov
out
xor
add
pop
test
movsb
xchg
call
jb
jge
add
xchg
cli
sbb
mov
jmp
cltd
js
xchg
aad
jge
jp
cmp
aas
jecxz
pop
rcr
popf
adc
leave
call
pop
and
jnp
fimull
push
adc
ret
js
jnp
call
fldcw
test
push
shl
fistpl
push
dec
movsb
std
mov
imul
les
hlt
sbb
sbb
sub
sbb
imul
std
or
push
insb
mov
popf
or
pusha
mov
mov
and
mov
jl
leave
sbb
mov
mov
adc
adc
insl
stos
sub
xlat
push
addb
fnstenv
fadd
dec
dec
into
cmpsl
push
out
push
sarb
pop
push
cltd
xchg
or
pushf
sbb
mov
mov
inc
mov
mov
ret
sub
mov
adc
adc
mov
test
ja
std
mov
push
mov
out
sbb
xor
jne
add
dec
pop
std
push
sub
stos
dec
lahf
xchg
in
out
movsb
scas
dec
mov
and
adc
call
xlat
cmp
push
xchg
pop
sti
jae
sub
inc
or
gs
jnp
or
xor
lds
jae
mov
xchg
pop
lods
and
fsubs
out
in
clc
fidivs
jnp
push
push
and
mov
sarl
cmp
dec
sahf
cmpb
fisttps
mov
les
not
fcoml
sub
dec
dec
fstpl
push
out
das
outsl
movsl
data16
inc
dec
xchg
lods
ficoms
out
jle
sbb
xor
outsl
jle
shr
cmpsb
lret
dec
mov
cli
adc
and
rclb
xchg
inc
push
xor
cmp
mov
add
mov
jae
adc
in
cmpb
or
fwait
push
leave
mov
mov
mov
out
push
cmp
push
loopne
mov
sub
dec
lods
jmp
xchg
push
or
mov
je
ret
inc
cmp
int3
mul
adc
clc
arpl
mov
mov
data16
jns
pop
mov
xchg
xor
ja
jle
and
icebp
imul
jae
call
mov
pop
add
push
lahf
cs
loopne
subb
or
mov
inc
sarb
insb
clc
xor
jb
jno
add
sub
roll
mov
add
adc
dec
mov
mov
dec
sbb
add
repz
outsl
sarl
leave
scas
cld
sub
fwait
repnz
adc
add
push
and
inc
in
ss
ficoml
sub
in
lds
mov
inc
insl
sbb
cmpsl
fldt
pop
push
jno
mov
mul
xor
pop
ficomps
mov
fisttps
adc
pop
push
fisttps
movsb
into
test
push
es
adc
sbb
popa
push
sbb
stos
lods
and
jbe
adc
inc
orb
cli
scas
mov
jp
and
loop
mov
lea
push
insb
cmc
xchg
pop
aad
mov
rcll
ss
cmp
aam
adc
cmc
sub
pop
shl
enter
leave
in
test
jne
bound
cmp
dec
jmp
ja
movsl
test
cmp
pop
mov
mov
xor
nop
add
pop
test
fcomp
addr16
mov
daa
int
cmp
inc
mov
ja
fninit
xchg
add
mov
lea
push
cmp
xchg
hlt
lret
xor
cmc
cmp
pop
cmc
mov
jnp
into
jle
adc
mov
stc
fsts
les
into
ja
cmp
aaa
nop
adc
jno
pop
cld
imul
cpuid
test
addr16
cmpsl
into
enter
into
movsl
stc
test
mov
cmp
movsl
jl
cmp
cmp
fs
stos
jge
mov
outsl
or
dec
fldenv
or
add
cmpsb
pushf
sub
enter
cmp
jp
repnz
push
push
sbb
pushw
jecxz
fimull
fiaddl
push
fwait
add
mov
or
or
mov
xor
adc
fdivl
loop
pop
cmpsl
test
push
jp
std
sub
ss
hlt
inc
add
fistl
pop
gs
adc
jle
idivb
insl
lret
call
sti
enter
ret
sub
sbbb
ljmp
jge
cli
addr16
lea
inc
inc
je
jecxz
jo
in
mov
mov
and
cmpb
adc
stc
dec
jae
lods
sahf
ja
rclb
in
mov
mov
fs
daa
xlat
pop
movsb
ja
mov
xorl
inc
data16
aaa
mov
pushf
mov
popf
add
mov
adc
jns,pt
push
das
lods
out
sub
cld
std
jae
or
rolb
rolb
jo
push
add
in
ret
and
leave
outsb
inc
lods
adc
rclb
mov
cwtl
aas
xchg
mov
lods
cmp
mov
hlt
pop
inc
sub
loop
and
cltd
or
push
adc
cmp
lock
in
fidivrl
repnz
clc
cmp
sub
clc
pop
push
mov
cmovo
push
stos
insl
xchg
neg
repz
xor
jno
xchg
sbb
js
daa
pop
sub
pushf
sbb
jle
jb
test
mov
xor
add
push
loope
jl
sub
or
ds
sub
push
jnp
call
js
cmp
bound
xchg
hlt
xchg
and
cmc
dec
int
xor
xor
les
pop
xor
adc
movsl
cmp
shlb
cmp
popf
mov
int3
lds
dec
mov
mov
cli
imulb
add
mov
mov
jne
or
out
das
das
out
jge
xchg
loopne
add
or
jbe
xchg
insl
cmp
stos
jmp
shr
jmp
jecxz
les
push
rorb
jmp
std
xchg
mov
sbb
lret
sub
mov
and
dec
lods
push
mov
add
dec
adc
aam
jg
bound
sbb
repz
stc
into
push
mov
sbb
sbbl
out
fsubrl
icebp
inc
mov
dec
aam
inc
mov
insl
dec
or
adcb
lock
std
push
insl
cmp
out
pop
adc
or
push
popa
lret
call
andl
adc
mov
in
orb
xchg
lods
shrb
arpl
sbb
dec
jp
xlat
shlb
xchg
daa
pop
int
and
and
xchg
add
xchg
inc
or
jbe
and
aam
xor
jb
xor
das
xchg
mov
in
push
add
dec
test
mov
or
sub
sbb
mov
popa
cld
mov
cmp
xchg
jmp
mov
push
arpl
aas
shrl
xchg
sbb
cmp
repnz
ss
out
sub
and
mov
mov
mov
pop
inc
push
shlb
cmpsb
inc
push
pop
call
and
and
push
inc
jb
mov
outsl
cmp
pop
xor
scas
dec
stc
jle
sbb
push
scas
jo
dec
mov
cmp
mov
sub
shll
mov
bound
outsl
les
sarb
adc
fdivrs
inc
test
ror
push
clc
les
mov
pop
in
stc
cltd
sbb
xchg
push
sbb
push
repnz
dec
or
inc
and
pop
push
mov
xchg
fmull
call
repnz
lret
cltd
fisttps
lods
gs
add
in
mov
sbb
or
mov
lods
movsb
popa
push
ror
push
cli
nop
mov
sub
or
sbb
xor
shrl
xor
pop
loope
movsl
jecxz
lods
xchg
sub
neg
jns
movb
cmp
les
dec
cmp
nop
dec
aaa
xchg
sbb
pushf
ja
sub
xchg
mov
xor
outsb
jb
cmpsb
add
shr
sahf
faddl
push
repz
loop
jo
xor
push
or
test
mov
dec
dec
enter
pop
mov
jnp
mov
or
daa
mov
mov
mov
sbb
out
inc
rclb
add
jmp
outsl
adc
cmp
in
gs
xor
gs
mov
outsl
pusha
popa
mov
scas
and
popf
aam
bound
pop
orb
push
mov
imul
inc
jne
mov
dec
push
mov
daa
loope
dec
std
inc
out
add
jp
jne
adc
xchg
cmp
imul
fs
and
push
ret
mov
add
popa
sub
shr
push
loop
pop
inc
sbb
je
cmp
enter
add
loope
sub
out
imul
cmpsb
adc
xchg
mov
jns
rcrl
push
aam
xor
sti
subw
iret
push
cmpl
cmp
cli
push
xchg
aaa
iret
andb
inc
inc
sar
inc
mov
ret
jne
cmc
cmpsl
and
dec
rcl
dec
lods
add
scas
pushf
repnz
xchg
shlb
fisubs
jne
data16
xor
sbb
lret
aaa
test
scas
in
andb
push
mov
andb
outsb
aaa
sub
inc
mov
jmp
add
ret
pop
loop
ja
sbb
mov
lret
xchg
inc
mov
pop
icebp
cli
cmp
nop
repz
mov
neg
add
push
js
mov
lods
mov
mov
adc
mov
jne
out
or
push
ficompl
mov
mov
roll
sbb
std
das
xchg
xchg
jmp
ds
and
xor
jo
jnp
int
sbb
outsb
lcall
movsl
outsb
pop
sti
sub
js
jns
and
xchg
jbe
fs
or
insl
lret
mov
notl
adc
push
sub
imul
mov
xor
and
sbb
mov
xlat
xchg
xor
jge
and
repnz
test
das
pop
in
xor
in
jmp
andl
popf
adc
xchg
inc
add
push
cwtl
mov
test
mov
push
aaa
push
fidivs
add
mov
imul
in
sbb
cli
test
and
clc
add
pushf
pop
jle
jecxz
mov
or
mov
mov
js
cmp
lret
mov
pop
sbb
movsl
outsb
pusha
icebp
gs
mov
inc
jmp
out
jno
sub
mov
sti
lods
and
xchg
sbb
or
pop
lret
dec
xor
dec
sbb
in
mov
lds
lea
inc
mov
insb
jp
stos
pop
jbe
repnz
push
mov
sbbl
xchg
xchg
ds
sub
xchg
mov
xchg
cld
cmc
pusha
and
adcl
and
add
sub
xchg
movsl
hlt
push
in
push
adc
push
in
pop
cwtl
sbb
mov
nop
mov
aas
mov
out
out
add
cli
add
mov
dec
repnz
loopne
mov
inc
cmp
aaa
inc
lahf
push
lods
inc
pop
fimull
clc
sti
jmp
and
push
pop
in
outsb
sub
lret
push
mov
popf
add
mov
xchg
imul
mov
mov
repnz
cs
mov
in
and
fldcw
sbb
mov
cmc
mov
gs
fcoml
fistpl
xlat
out
xchg
lock
or
fmulp
xor
jb
jg
loop
dec
pop
repnz
sar
xor
out
adc
hlt
shlb
lret
mov
adc
subl
inc
jle
mov
addr16
and
shrl
cmp
jle
js
out
out
aaa
dec
pop
rep
or
fdivrs
push
shrl
movsl
cs
pop
pop
adc
xor
adc
or
cmp
jo
mov
or
lahf
inc
lret
sub
fadd
push
fistpl
or
add
movsb
mov
mov
cmc
xor
aam
sarl
adc
push
imul
dec
rcr
in
jb
popf
adc
jl
mov
mov
leave
fisubrl
lret
out
mov
movsl
jbe
fwait
or
adc
addl
jle
push
jp
cmpb
cmpsb
mov
ljmp
fistps
sahf
aas
lea
stc
out
mov
loope
jge
push
rcl
sub
faddl
xor
je
pop
jle
ljmp
insb
aas
jnp
adc
pop
inc
mov
cmp
fwait
std
xor
pushl
in
sub
call
lret
iret
mov
stc
mov
lret
push
push
push
int3
test
mov
sub
cmc
outsb
iret
or
vpsllq
fldt
or
into
int
mov
mov
pop
sbb
inc
iret
arpl
nop
sbb
insl
imul
pop
jae
sbb
jbe
lods
leave
inc
xchg
mov
and
or
lret
in
in
xchg
add
rcrl
dec
adc
sub
adc
pop
ret
cld
mov
push
push
cltd
cli
mov
mov
sbb
push
push
roll
hlt
cmpsb
icebp
cmp
pop
js
or
outsl
xorl
mov
push
pop
push
leave
inc
in
les
mov
pop
out
xchg
cmpsl
and
or
lret
xchg
pop
mov
jbe
add
lahf
push
xchg
stos
or
outsl
lock
int3
stc
add
mov
repz
dec
xor
les
mov
test
popf
xlat
sub
sbb
sub
push
pop
sub
sbb
push
stos
pushf
ss
adc
aad
lahf
popf
stos
fs
adc
out
shr
xchg
xor
jmp
jecxz
cmpsl
mov
push
push
sub
mov
xor
push
popa
sbb
dec
fsubrs
repz
mov
punpckldq
aam
mov
xor
cmp
pop
cmp
repz
cmp
movsl
lds
sbb
les
mov
iret
add
xchg
dec
or
fs
js
pop
iret
pop
fcoml
mov
imul
mov
data16
icebp
stc
xchg
add
xchg
into
lret
jmp
sti
dec
mov
mov
cmpsl
mov
inc
hlt
aaa
sub
pop
sub
mov
push
in
dec
std
lock
and
popf
sub
ljmp
bound
mov
outsb
xchg
mov
dec
cwtl
cmpb
outsb
push
lea
lea
mov
flds
idivb
in
cwtl
bound
jb
mov
add
aas
pop
lock
cmc
inc
dec
bound
cmp
mov
int
mov
xchg
inc
add
cmpsb
or
stos
adc
inc
pop
pop
xor
repz
in
push
pop
pop
adc
sbb
outsl
sub
sahf
fs
nop
push
mov
xchg
lods
jle
jp
in
je
leave
push
stos
pop
xchg
pop
and
dec
inc
pop
mov
pop
or
add
stc
outsl
mov
add
xor
mov
inc
adc
adc
pop
rorb
data16
pop
scas
sub
inc
push
cmc
xor
ret
lock
stos
and
xchg
imul
jb
add
fmull
or
movl
out
in
inc
and
cs
stos
xor
sub
xchg
jb
ljmp
cld
movsb
mov
and
cli
pop
iret
fs
sbb
ss
call
mov
test
xor
mov
ss
cmpb
in
add
jne
pushf
mov
fdivp
mov
es
subl
pusha
dec
pushf
sbb
loopne
jnp
call
inc
jns
gs
pop
xchg
out
cli
stos
xor
and
test
fidivl
jnp
mov
je
shll
sub
push
pop
or
cli
push
xlat
and
aas
jnp
jmp
ss
jmp
xor
clc
dec
mov
or
popa
inc
inc
lds
aaa
push
and
mov
daa
sbb
xor
xchg
sahf
je
es
pop
mov
pop
xchg
in
jbe
scas
dec
imul
test
jmp
sub
inc
mov
pop
inc
mov
sub
in
dec
into
arpl
rcr
cmp
push
test
push
leave
subl
les
dec
pop
mov
aas
popa
loope
pusha
movsl
mov
daa
or
mov
dec
nop
aad
xchg
pop
sbb
pusha
adc
and
mov
sbb
sbb
mov
sbb
dec
movsb
int3
insl
add
nop
mov
mov
xor
into
pop
mov
outsl
cld
xorl
add
xor
cwtl
out
sub
push
ja
mov
repnz
repnz
sub
shlb
jecxz
add
push
jb
adc
pop
jo
std
pop
sbb
icebp
mov
scas
cli
xchg
adc
pop
fstpt
xor
loopne
or
jns
dec
push
xor
addr16
xchg
mov
inc
pop
ja
mov
int3
mov
jno
xor
mov
mov
ljmp
sub
movsl
or
xor
cmpsl
mov
or
adc
lret
stos
jmp
and
mov
and
lret
clc
int
adc
loop
inc
and
les
inc
inc
in
dec
add
add
jno
insl
mov
pop
cltd
xor
leave
dec
lds
xchg
leave
in
leave
jmp
imul
cmp
stos
push
push
sub
jns
push
xor
stc
pushf
mov
xchg
inc
jp
ret
je
xchg
ljmp
pop
test
mov
or
jp
dec
dec
in
stos
fdivl
inc
jne
push
jecxz
out
aad
loop
mov
cmp
loope
pshufw
mov
lds
bound
mov
xchg
mov
add
mov
aam
cmp
push
ficomps
int3
dec
clc
dec
notb
clc
push
in
xor
out
ret
ja
aaa
pop
jmp
adc
push
sbb
js
jns
mov
jne
mov
add
push
lret
fistpll
into
je
or
and
jge
cmp
pop
dec
push
push
daa
ss
add
clc
test
add
lcall
dec
dec
out
ljmp
push
push
cmpsl
inc
call
orl
add
add
inc
adc
xchg
sbb
leave
mov
xchg
popa
bound
push
icebp
imul
sbb
sarb
pop
jl
dec
fadds
mov
or
stos
adc
adc
xor
stos
popf
xor
aaa
negb
lahf
mov
or
das
mov
pop
popf
dec
shrl
aam
cli
sub
faddl
andb
lcall
frstor
jb
mov
pushf
sbb
jb
lahf
push
lea
jbe
mov
insb
in
mov
scas
lahf
xor
mov
subl
js
push
jno
notl
cmc
or
int
scas
lock
call
addr16
mov
fnsave
cmc
cmp
jno
insl
insl
mov
push
xchg
jecxz
cmp
pop
pop
mov
popf
cmp
in
imul
inc
or
daa
jg
push
stc
mov
ljmp
pop
pop
mov
mov
imul
dec
add
lds
jmp
or
or
dec
sub
push
cltd
daa
mov
sarb
mov
cld
adc
jb
sub
cli
fsts
xchg
push
pushf
imul
add
ret
dec
test
jbe
clc
adc
and
fidivrs
subl
sbb
enter
push
cmp
mov
mov
xor
and
cmp
insl
js
jl
hlt
push
mov
xchg
xor
pop
push
jns
popf
add
inc
xchg
cmpsb
fildll
mov
lea
xor
je
ret
repz
outsl
push
xor
js
sbbl
sub
inc
inc
xchg
shrb
adc
inc
enter
cmp
and
xchg
or
out
mov
ret
in
mov
movsl
orl
pop
jno
cmpsb
stc
leave
rol
movl
out
shll
mov
sbb
push
mov
lret
mov
in
jl
mov
sbbl
or
nop
add
xchg
dec
add
ror
xor
pop
push
cmp
sbb
lock
sahf
add
lret
mov
sar
pusha
cwtl
or
jno
fistps
adc
adc
and
xor
jae
enter
lds
and
movsl
leave
pop
clc
lea
test
push
popl
stos
int3
jge
pop
bnd
adc
pop
xor
insl
mov
dec
fsubrs
movsb
xor
test
mov
addr16
jnp
mov
jne
ja
decb
fwait
pop
xchg
scas
mov
xor
js
xchg
push
clc
jp
pop
aam
inc
test
ret
loope
sarl
inc
mov
sar
aaa
aam
pop
mov
inc
xor
push
loop
add
jge
dec
adc
add
aam
mov
xchg
sub
jb
adc
dec
sbb
xchg
fsubl
stc
xchg
jno
mov
std
data16
rcl
jno
fldl
clc
cmp
lcall
or
add
dec
adc
push
sbbl
cmpsl
jg
xchg
pop
mov
push
cmp
dec
pop
sbb
sbb
mov
xchg
sahf
cmp
test
out
or
or
push
push
jp
push
pop
aas
push
sub
and
aas
out
lcall
cmpsb
add
inc
push
into
lods
out
push
dec
fs
jne
dec
sbb
xchg
loopne
cmp
nop
adc
cmpl
int
pop
loope,pn
imul
mov
ja
lcall
sbb
inc
sti
dec
cmp
xchg
callw
jp
fistpl
shr
mov
push
divb
in
mov
push
fsubl
loopne
pop
test
test
pop
mov
das
shll
inc
pop
lret
sub
fiadds
mov
jne
out
jle
into
mov
lret
rclb
out
inc
cmp
push
test
dec
fwait
push
cmpsb
xchg
mov
add
xchg
dec
data16
bnd
mov
or
xchg
add
xchg
adc
jbe
mov
pop
sub
pushf
hlt
out
pop
fisubs
jecxz
hlt
and
dec
pop
outsb
mov
xor
or
fbld
cmpsl
xor
into
jecxz
cmp
cmp
or
sub
je
movsl
xchg
or
stos
mov
rcll
into
jl
stos
jae
push
pusha
cmc
stc
mov
popf
cmp
mov
push
cmp
pop
scas
leave
out
nop
popa
pop
inc
xor
xor
hlt
or
dec
cmp
or
sbb
subl
dec
mov
bound
dec
call
and
xor
nop
popf
xchg
cmp
add
sub
lds
cmp
loop
sbb
adc
add
je
sbb
sbbb
mov
leave
mov
push
mov
push
xchg
ss
mov
mov
addb
push
push
test
push
sti
or
loopne
jae
lods
mov
into
mov
ret
pop
push
fcoms
push
adcl
pop
mov
push
cmpsl
jns
lahf
cmc
xchg
add
cmp
mov
mov
test
dec
fisubrs
adc
pop
pop
fistpl
fidivrl
sbbl
cmp
clc
rcrb
dec
repz
add
jmp
aas
cmpsb
call
shr
jecxz
shlb
lods
adc
cmp
push
jle
enter
sahf
pop
dec
gs
ret
jmp
mov
inc
push
psubsw
test
xchg
inc
lock
mulps
sbb
imul
out
popa
roll
push
cli
mov
ret
pop
sub
shlb
cmp
leave
dec
lea
lea
dec
rorl
imul
stc
ret
jecxz
lock
jo
jle
mov
imul
rcrb
mov
shrl
sahf
jns
inc
mov
jmp
jnp
mov
stc
dec
sti
lock
aam
mov
stc
test
mov
push
test
push
inc
sub
mov
aaa
and
add
pop
in
pop
mov
mov
loopne
xor
push
or
cmp
adc
notl
mov
and
orl
fisubl
loop
jmp
pop
mov
lds
xor
test
mov
adc
push
daa
outsb
je
icebp
lods
ja
imul
fucomip
mov
dec
ud0
aaa
cmp
xor
into
stos
add
dec
xchg
fsubl
out
ficomps
test
mov
sub
out
imul
add
shrb
sbb
lods
in
push
add
dec
into
cmpb
push
jle
inc
xor
dec
jl
jmp
dec
jne
push
jg
mov
mov
imul
aad
sbb
or
outsb
stos
int
movsb
mov
and
sub
pusha
xchg
jo
out
adc
call
and
test
and
mov
loopne
test
mov
push
pop
lret
xor
push
add
cld
movsl
outsl
cld
in
cmp
aas
ret
mov
dec
push
mov
adc
fdiv
jg
cltd
lcall
test
sarb
mov
mov
out
mov
loope
or
mov
sbb
sbb
pop
inc
mov
ds
xchg
sarb
hlt
mov
push
xlat
lret
sbb
in
mov
mov
xchg
dec
dec
or
pop
cmp
hlt
cmpl
sbb
ljmp
xchg
jnp
fnsave
rolb
mov
sub
adc
or
xor
pop
and
ror
movsb
lahf
jle
orb
pop
dec
sub
mov
pop
jecxz
int
nop
stos
fs
fidivl
mov
mov
push
pushf
mov
dec
pop
or
sub
fldl
leave
adc
pusha
sbb
inc
sbb
push
int3
push
push
stc
mov
add
lea
ja
iret
add
fiaddl
add
xchg
push
lea
rolb
xchg
push
pop
mov
ljmp
mov
cmp
insb
xchg
aaa
aad
call
sub
mov
push
jg
shr
call
inc
push
sbb
mov
dec
adc
dec
das
xchg
pop
dec
in
or
mov
add
push
cmp
pop
dec
mov
out
jle
dec
ljmp
xor
jp
push
std
in
aam
dec
add
pop
les
mov
int3
inc
push
mov
add
lock
insl
lock
sub
aad
arpl
push
dec
jecxz
loopne
sahf
xchg
repnz
ret
add
xchg
push
inc
mov
test
lret
sbb
adcb
or
test
dec
pop
pop
mov
in
pop
ljmp
sub
int
cltd
xchg
dec
call
xlat
jo
pop
enter
fidivrl
xor
movsl
push
mov
jbe
lahf
jnp
js
aam
loop
mov
xor
mov
mulb
fcmove
push
andb
xor
jecxz
or
cmp
and
pop
adc
lcall
enter
push
and
js
les
int3
cmp
out
mov
pop
fwait
adc
out
and
push
scas
rcrb
les
flds
mov
sub
insb
mov
nop
in
fprem1
test
push
movsl
mov
cltd
es
pop
pop
int3
push
decb
shrl
pop
mov
pusha
outsb
imull
jl
xchg
sarl
gs
outsb
mov
adc
sbb
or
mov
mov
icebp
and
xchg
mov
aam
imul
push
popa
pop
xor
hlt
lcall
sbbb
repz
add
repnz
fnstcw
sub
scas
sbb
cmp
mov
mov
and
and
mov
dec
and
movsb
stc
xchg
imul
pop
out
std
sbb
or
aas
and
sbb
ss
push
and
in
les
sbb
dec
mov
jl
div
cld
jg,pt
jbe
std
cwtl
sbb
in
movswl
into
add
dec
mov
cmp
jbe
inc
icebp
popf
pop
fs
sub
adc
mov
out
jo
dec
xor
shrl
xor
shrl
push
jg
cmpsl
addr16
sbb
and
lahf
mov
insl
or
call
mov
ds
ja
cli
inc
mov
and
mov
push
addr16
ret
mov
aad
andb
testb
jno
hlt
into
dec
jle
inc
out
mov
and
adc
cwtl
push
xor
pop
test
or
jg
jmp
add
xchg
adc
dec
pop
cmpsl
adc
in
aam
sbb
pcmpeqb
mov
clc
mov
loopne
in
or
jmp
sahf
mov
fwait
hlt
sub
pop
shlb
add
xchg
add
mov
mov
pop
cmc
sbb
inc
imul
loope
jmp
jg
cld
pop
out
lds
in
mov
scas
mov
xor
pop
jns
icebp
je
imul
cmp
dec
movsl
enter
stos
push
int
pop
dec
sub
mov
mov
fwait
sbb
mov
stos
or
imul
pop
adc
repnz
je
push
xchg
pop
insl
jno
jge
ret
rorb
dec
mov
data16
sarl
adc
and
inc
imul
jo
push
aaa
jbe
add
add
clc
xchg
repnz
loop
sub
fimull
pushf
mov
sub
dec
xor
pushf
xchg
ja
shll
push
pop
fs
daa
sahf
inc
xor
and
dec
sbb
inc
repz
rcrl
stos
mov
pop
push
xor
popa
pop
xorl
xlat
aas
bound
js
jbe
push
in
and
xchg
nop
testb
dec
mov
sub
test
adc
into
sub
pop
outsb
es
lea
jle
jecxz
lret
divl
and
adc
pop
mov
addl
dec
and
mov
enter
je
in
or
subl
out
pop
sar
inc
jns
mov
pop
xchg
addr16
imul
cmp
in
mov
dec
stos
mov
je
aam
mov
mov
outsb
dec
mov
hlt
push
sbb
lcall
jno
mov
push
pop
rcll
or
push
mov
cwtl
loope
repz
fisttps
xchg
call
push
scas
inc
cmp
imul
push
mov
test
movsl
push
jmp
sbb
into
mov
mov
inc
je
dec
test
jmp
decl
in
mov
adc
sub
popf
cmp
push
adc
inc
je
jl
adc
mov
sub
jne
out
pop
push
and
std
sub
jecxz
arpl
ds
jno
push
push
iret
adc
push
js
lahf
inc
add
cmp
mov
inc
push
lret
xlat
es
cmp
mov
dec
aas
mov
shrb
dec
popa
jge
jmp
std
mov
xor
and
mov
xor
sub
jg
mov
loopne
movsl
fadds
ja
cwtl
and
test
test
sub
fildll
pop
mov
dec
adc
and
sahf
sahf
insl
push
lods
in
pop
fldenv
enter
cmpsl
mov
les
adc
enter
and
lods
scas
imul
xchg
test
mov
jae
or
aad
int3
push
bound
cmp
subl
je
insl
jecxz
idivl
repnz
aas
outsb
jb
mov
fidivrl
push
not
clc
and
cmp
xchg
into
lret
dec
adc
inc
lahf
sti
lea
dec
int3
mov
dec
xadd
pop
dec
loopne
pop
loop
addl
je
inc
dec
dec
sbb
mov
push
xor
test
test
or
roll
test
mov
cmp
insb
ja
add
mov
push
xor
jno
pop
mov
sub
addr16
mov
xchg
mov
xor
sub
sti
mov
mov
sbb
inc
aad
popa
inc
div
mov
insb
loopne
inc
mov
fcompl
add
sbb
cli
add
cmpsb
jecxz
jns
push
mov
xchg
add
int
enter
xchg
ret
adc
xchg
or
push
and
int3
cmpsl
pop
nop
add
sahf
sahf
jno
enter
pop
sarl
popa
mov
mov
cli
sub
push
jp
jmp
into
fldt
lahf
add
lea
or
add
repnz
sti
pop
push
inc
xor
je
and
rcl
mov
fsubr
and
cld
cmp
mov
rcrb
pop
dec
lcall
gs
xor
fisubl
sub
cmpsb
dec
out
ret
arpl
movsl
sub
pusha
or
inc
call
mov
cli
pop
xlat
cmc
rol
roll
push
aaa
or
or
xorb
mov
jae
adc
imul
arpl
adc
movsb
loopne
out
jo
push
clc
or
push
jbe
mov
imul
pop
nop
lods
adc
cwtl
cmp
jno
mov
movsl
xor
test
jge
lcall
test
inc
sbb
xchg
lret
dec
int
adc
and
inc
out
or
mov
subb
in
jo
inc
call
pop
stc
scas
mov
cmp
in
push
jnp
cmp
popf
inc
aam
pop
cmp
insl
stc
jecxz
lahf
adc
jno
dec
in
aas
std
std
inc
add
mov
repnz
movsb
xlat
inc
xor
aas
jg
negb
repz
in
outsl
lods
cli
movsl
daa
iret
fst
mov
mov
into
or
dec
movsb
mov
daa
push
dec
lods
lahf
mov
push
aad
xor
push
ljmp
in
jae
ret
push
adc
icebp
call
repnz
jae
out
pop
aas
mov
mov
push
fdivs
test
inc
push
test
adc
mov
xchg
sbb
push
cmc
movsl
jo
jl
mov
adc
mov
std
dec
add
pop
popf
gs
fisubs
add
sub
sub
jae
out
inc
shrb
adc
loope
lds
into
xchg
cmpb
xor
nop
add
dec
hlt
outsb
and
sti
cwtl
mov
rorb
fidivl
mov
cmp
je
cmp
xor
cmp
in
xchg
push
shll
mov
add
test
ljmp
inc
rclb
mov
and
lret
xchg
inc
and
repnz
xchg
mov
xor
in
lcall
sbb
lret
pop
push
lret
stos
sub
or
aad
or
push
stos
ret
outsb
sbb
mov
dec
into
sbb
outsl
jb
fistl
mov
xor
gs
or
push
or
inc
jle
add
std
leave
das
outsb
loopne
pusha
loopne
jne
cli
and
and
or
in
sub
push
mov
ss
les
and
aaa
jno
mov
mov
daa
dec
or
or
mov
imul
mov
rcrl
push
stc
push
shl
adc
sbb
sbb
cmpl
movsl
add
imull
jnp
cmp
mov
repz
mov
mov
sub
mov
pusha
pushf
setp
aas
mov
sbb
jbe
ljmp
xchg
sbb
add
int3
cmp
sbb
mov
xchg
jnp
pop
aam
repnz
mov
imul
mov
and
dec
out
inc
movsl
xchg
rcll
xchg
dec
add
subb
jle
pusha
leave
in
ret
outsb
popf
pop
cmp
cmp
fs
sti
and
pop
push
dec
subb
lock
ret
sahf
roll
mov
pop
cltd
insb
mov
add
add
ret
sub
pop
jle
xor
cmc
fmuls
push
scas
mov
dec
fwait
int
les
call
xchg
and
fdivs
cmpsb
stos
cwtl
pushf
mov
sub
jg
daa
sarl
test
mov
push
jb
mov
ficoml
and
push
add
jns
nop
adc
lods
test
inc
mov
mov
lods
sub
or
push
jno
push
pop
test
adc
cmp
push
and
jge
aas
push
xchg
repnz
mov
sub
mov
or
and
and
mov
out
movsb
fs
sub
imul
stc
gs
pusha
xor
imul
mov
sub
mov
or
xchg
les
xlat
add
lods
sbb
add
jge
xchg
push
movsl
dec
lret
test
xor
and
daa
adc
mov
sub
pop
sti
push
js
xchg
cmp
jne
and
clc
adc
pop
sbb
ss
int3
pop
mov
cld
js
or
pop
clc
repnz
test
and
cmp
imul
jecxz
pop
daa
mov
add
bound
fistps
jne
aad
inc
xchg
leave
shlw
and
mov
mov
cmp
sub
in
insl
dec
arpl
fs
pop
mov
dec
scas
mov
rorl
mov
sub
mov
mov
pop
adc
push
xchg
ds
divl
jnp
xor
push
push
add
add
jge
or
dec
pop
push
jl
test
fst
or
mov
xorb
push
xchg
or
stos
addr16
movsl
mov
mov
fidivl
rcll
jbe
insb
in
xorb
or
mov
out
dec
xchg
push
imul
inc
mov
push
lea
lahf
stos
xor
rclb
incl
cmp
sti
aaa
std
rclb
xchg
data16
enter
xor
mov
add
inc
loopne
dec
push
pop
movsl
and
push
and
mov
dec
add
push
xchg
or
jne
mov
or
push
movsb
fstl
repz
mov
pop
testl
jecxz
push
addr16
push
mov
mov
scas
ja
or
shl
mov
lret
lret
fnstenv
jbe
scas
inc
jecxz
out
adc
dec
fxam
pop
jo
mov
push
push
filds
into
push
imul
test
sahf
mov
imul
out
sub
popa
xchg
out
push
popf
lea
fildl
negb
divb
ret
fwait
or
das
dec
dec
jge
ds
fimull
cs
pop
daa
sub
mov
cld
ret
xor
mov
adc
jb
sarb
adc
shll
and
orb
pop
jmp
or
jge
sbb
sbb
fdivl
push
cli
out
add
and
pop
inc
add
pop
negl
inc
push
outsb
cltd
xchg
mov
add
mov
stos
jecxz
mov
sbb
andl
test
into
out
mov
and
in
jle
push
sti
jb
lcall
push
cmpsl
cwtl
icebp
cmp
lock
ja
xchg
clc
mov
dec
aad
push
sub
dec
aas
arpl
add
test
scas
cltd
adcl
push
and
jb
lret
cmp
les
mov
pop
mov
jg
or
rcrl
adc
adc
jnp
aas
fisttps
int3
add
cli
dec
pop
pop
pop
bound
lods
fcoms
sbb
out
and
repnz
push
enter
mov
in
mov
pop
jbe
addr16
sbb
test
push
outsb
jns
mov
mov
in
mov
jmp
mov
inc
xlat
in
mov
test
mov
cmp
push
add
scas
and
add
jno
idiv
add
out
add
push
repnz
sbb
test
lea
inc
xchg
cmc
xchg
xor
push
xor
dec
fdivl
xchg
test
mov
pop
insl
sub
sar
jle
mov
sub
jae
cmp
sbb
xchg
push
addr16
xchg
cmp
mov
jg
or
mov
cld
xlat
pop
pop
sbb
mov
rclb
dec
filds
and
aam
lea
add
test
inc
addr16
iret
xchg
mov
or
repz
adc
dec
mov
repz
push
scas
orl
mov
ss
or
push
mov
xchg
dec
insb
pop
xor
faddl
mov
shlb
push
inc
inc
and
lea
push
mov
aam
mull
xor
fstpt
inc
aaa
movsl
jmp
inc
pop
jle
daa
pop
adc
lahf
scas
add
push
cmp
outsl
inc
jae
adc
movsb
sti
lds
lods
mov
push
fwait
and
mov
cmpsl
mov
add
dec
mov
andl
or
mov
aas
mov
imul
add
in
in
lods
cmc
and
test
dec
sbbl
sub
and
lock
jne
sbb
or
sbb
push
push
call
push
push
dec
scas
add
pop
lock
jno
jmp
aad
in
jecxz
mov
addr16
imul
jb
pusha
xchg
out
mov
mov
mov
cld
sbb
in
and
pushf
or
mov
and
inc
sbb
out
in
sbb
sahf
dec
imul
test
jle
aas
push
out
sub
notl
mov
in
sbb
mov
or
inc
adc
aas
or
call
add
mov
add
in
add
pop
mov
ja
inc
rorl
mov
pop
pop
stos
cmp
mov
xchg
sub
xor
pop
and
js
insl
lcall
fdivl
mov
sbb
scas
xor
push
or
ljmp
lret
push
sbb
add
cmpl
pop
notl
cmp
shl
inc
adc
xchg
fnstsw
fwait
mov
sbb
enter
arpl
mov
mov
jge
xor
mov
adc
inc
sbb
xchg
and
dec
jb
xchg
cmp
cmp
mov
sti
rcl
insb
lea
movsb
jmp
orb
arpl
cmp
and
or
inc
cmp
push
addb
ljmp
in
mov
stc
mov
adc
mov
mov
aad
lds
ss
xchg
outsb
cmp
sbb
movsb
arpl
cld
push
divb
ja
dec
xchg
aam
mov
and
jo
outsl
mov
or
push
aam
enter
andl
ss
sub
in
mov
sbb
out
mov
fcomi
push
dec
jge
loop
hlt
sub
rolb
rcl
jmp
xlat
adcl
mov
enter
leave
pop
aas
pusha
fnstsw
sbb
sub
out
cmp
dec
pop
add
and
jp
insl
mov
call
mov
cmp
add
std
mov
add
shl
orb
mov
and
adc
es
test
push
aam
push
push
mov
aad
and
mov
dec
sub
xlat
mov
sbb
outsl
or
test
sbb
jbe
bound
into
sbb
add
popa
or
or
pop
roll
cmp
pushf
jge
adc
addl
cmpps
jb
xor
inc
test
sbb
jmp
pushf
les
xchg
lods
push
rclb
cmp
and
and
loopne
jp
sahf
ss
sub
ljmp
rcrl
pusha
leave
mov
pop
sbb
mov
ss
movsl
ficoms
cmp
xchg
jae
mov
repnz
ja
jl
loope,pt
lods
popa
xchg
sub
cltd
js
mov
mov
jle
popa
pop
stc
cmp
loopne
cmpsl
sub
pop
mov
fcompl
frndint
adc
ja
mov
int
test
pushf
in
add
add
mov
call
out
mov
sub
insl
adc
jg
iret
dec
repnz
mov
rcrb
std
sbb
loopne
pop
add
rcrl
adc
mov
add
lcall
mov
je
popa
lds
daa
xchg
test
push
and
cmpsb
push
fisttps
push
sub
and
or
imul
test
cmp
loope
mov
addr16
addr16
jmp
imul
les
dec
dec
loopne
sbb
ficompl
jl
enter
pop
and
or
mov
rorl
cmp
daa
shr
ja
pop
outsb
pop
xor
enter
jnp
neg
loope
jnp
cwtl
jo
sub
push
sub
fstl
clc
test
lret
add
sbb
adc
jb
mov
adc
xchg
aaa
xorl
mov
das
xchg
loopne
loop
xor
jb
inc
lret
sub
int
cltd
aad
sub
xchg
and
mov
add
dec
in
push
inc
mov
loop
int
aam
xchg
push
push
push
lock
dec
xchg
xchg
fldcw
lahf
lea
cmpsl
ss
sub
rorl
pop
mov
mov
arpl
test
lret
shlb
push
sbb
jnp
ret
pop
and
mov
jnp
or
cmp
push
pop
imul
or
lods
or
sub
mov
out
mov
xor
adc
loope
sub
sub
and
cmc
or
push
cs
lea
repnz
mov
fwait
cmp
scas
bound
cli
shrb
in
testl
xor
hlt
outsb
enter
jg
int
rorb
mov
insl
in
and
adc
mov
xchg
sarb
and
adc
into
dec
sbb
sbb
sahf
mov
cmp
aas
ja
xlat
add
js
pop
pushf
jb
popf
push
jae
roll
push
jmp
stos
test
rcrl
push
insb
rcll
sbb
sub
out
or
pushl
adc
in
repz
sbb
stc
sbb
or
xlat
repz
stc
aad
aas
jb
out
cs
xchg
lret
imul
fdivrs
inc
jg
add
adc
xchg
lret
mov
cld
leave
movsl
mov
fs
inc
pop
push
shll
dec
stos
pop
add
and
or
xchg
jecxz
mov
repnz
sbb
loope
xor
dec
push
inc
and
sbb
ds
shlb
or
and
in
cmp
pop
dec
out
pop
mov
test
inc
mov
adc
insb
jo
mov
loop
add
aad
call
divb
lret
push
test
arpl
in
ret
aad
dec
inc
mov
loope
mov
jno
dec
pop
jnp
mov
and
cs
loopne
push
jl
push
xlat
bound
cli
popl
shrb
jge
pop
call
bound
loop
loopne
pop
data16
ficoml
push
jo
dec
and
sub
jae
popa
push
inc
mov
fisubrl
dec
js
and
jle
sub
ljmp
mov
mov
inc
arpl
lcall
add
test
daa
fidivrl
lret
mov
in
mov
jg
outsb
lods
mov
jg
jbe
bound
sub
sbb
jg
out
jl
repz
jecxz
outsl
mov
roll
dec
pushl
loopne
inc
nop
add
imul
insl
gs
cltd
dec
or
out
mov
int3
shrl
cmp
jg
adc
adc
lcall
iret
shl
outsl
pop
addr16
dec
inc
pop
fwait
int
outsb
adc
dec
pop
mov
adc
mov
ss
xchg
sbb
popa
pop
ds
dec
jmp
sub
dec
mov
or
xchg
dec
ret
lret
and
bound
sub
pop
jbe
pxor
fstpt
insb
out
pop
roll
cmpb
repz
roll
data16
adc
sti
adcb
sbb
test
pop
sahf
cmp
popf
stos
loopne
icebp
js
jg
bound
rclb
int3
test
inc
pop
xor
or
mov
lds
mov
and
pusha
xor
adc
repz
xchg
jo
push
mov
adc
data16
cmp
mov
enter
rcl
mov
call
mov
add
das
lea
in
jno
push
fldcw
jb
cmp
sbb
aam
daa
aad
into
push
inc
sub
pavgw
out
jne
mov
cmp
pop
mov
dec
js
out
ficompl
jge
sub
std
out
outsb
add
mov
mov
loop
std
jg
mov
cmpsl
imul
mov
mov
sbb
scas
mov
mov
pop
cmpsb
int
bound
pop
mov
mov
inc
stos
sub
pop
pushf
or
or
mov
sub
pop
fcmovb
xor
lcall
inc
test
cmpl
jg
jp
in
xor
stc
jge
outsl
jp
shrl
lods
xchg
xchg
cmpsl
cltd
xor
push
mov
push
pop
add
decl
fdivrs
pushl
cmp
dec
std
leave
mov
aaa
repnz
ret
mov
mov
mov
bound
xor
insb
shrb
sti
lock
push
rorl
xchg
arpl
dec
jb
cmpsb
insb
mov
xchg
jbe
fwait
and
jne
icebp
pushf
pop
add
ja
ret
fistpll
sysret
fisttps
stos
adc
jl
shl
test
mov
shll
pop
in
daa
sub
jp
jnp,pt
push
insb
xorb
inc
and
popf
andb
sbb
in
ret
out
or
add
das
mov
pop
push
in
mov
popa
and
mov
add
sub
rcll
jp
in
xor
jl
push
mov
movsb
pop
xchg
flds
add
inc
pushf
mov
out
add
lock
sbb
dec
jl
fisubl
loop
test
jge
jg
cmpsl
enter
aaa
xlat
or
outsb
xor
mov
mov
cli
aas
xchg
add
fisubrl
test
jle
imul
add
cmp
push
and
sahf
or
sbb
pop
sub
icebp
xchg
mov
dec
cmp
cs
lahf
fmull
mov
out
in
mov
xchg
jae
push
negb
dec
lcall
cmp
pop
adc
imul
sbb
push
mov
mov
sub
jle
aam
cmp
addr16
test
test
mov
mov
fisttps
pop
jb
bnd
and
enter
test
jp
lret
xchg
mov
dec
pop
gs
shlb
ret
jne
xorl
add
inc
ffreep
xor
mov
pop
icebp
sarb
roll
dec
stos
mov
sahf
vpor
or
fs
add
sti
inc
mov
push
xchg
lods
out
adc
mov
outsb
inc
xchg
aam
dec
out
push
cmpsb
fs
cwtl
js
imul
popl
shrb
mov
lods
dec
inc
stos
shrb
imulb
adc
fwait
aam
mov
jecxz,pn
shl
loop
andl
sbb
sub
stos
sub
xor
imul
popa
rcrl
xchg
xchg
add
addr16
jl
xor
xor
notl
pop
scas
aaa
dec
dec
aaa
xchg
xor
iret
lds
cmp
add
lret
cmp
insb
shll
aam
mov
sub
test
nop
rcrl
mov
push
movsb
out
outsb
push
out
add
mov
sub
jo
jno
lock
adc
dec
jecxz
mov
incl
subl
push
xchg
in
pop
cmc
pop
cmp
in
add
push
shr
rorb
pop
add
aam
push
ss
pop
cmp
loop
mov
xchg
daa
test
cmpsb
jnp
pop
or
popa
imul
addb
mov
push
xchg
repnz
cmp
fsubl
in
pop
or
hlt
fwait
jg
out
cs
stos
and
iret
int3
pop
mov
call
fidivrs
icebp
push
push
sbb
cmp
fcomp
pop
xor
add
dec
sahf
movl
pop
xchg
std
jle
lock
adc
rcl
cmpsl
xchg
xor
test
mov
push
addr16
cmpsl
out
adc
test
mov
mov
imul
jp
addb
inc
out
pop
bound
mov
mov
fisttps
mov
in
mov
sbb
inc
xchg
insb
in
popf
out
jo
imul
add
int
mov
and
bound
loopne
je
jae
movsl
and
mov
sub
lahf
xchg
inc
js
movsl
push
gs
jmp
aam
ss
testl
jg,pt
adc
mov
cmpb
negl
mov
gs
sbb
fstpt
std
int3
leave
and
inc
shl
loop
jns
add
cmp
out
in
lds
inc
lods
jns
rol
lcall
mov
es
ret
cli
jnp
xor
loop
cmpsl
mov
cli
jne
jnp
or
lcallw
aaa
mov
into
cltd
sub
lock
fdivrl
push
loope
test
lret
jae
leave
add
xchg
cmp
andl
xchg
or
xor
test
orl
in
add
add
add
mov
jae
int3
jecxz
lret
xchg
sbb
pop
insb
push
xor
mov
push
hlt
pushf
ficomps
add
subb
inc
cmpsl
jbe
inc
scas
repnz
mov
hlt
imul
repnz
fcmovne
mov
cmp
arpl
cmpsb
inc
loop
jecxz
or
popa
sarb
push
jmp
sub
int3
jbe
lret
xchg
fucomp
int
and
and
push
insb
cmpb
fsubl
mov
loop
sbb
dec
pop
jnp
inc
jmp
es
cld
push
lret
add
outsb
pop
push
sub
lods
subl
dec
push
cmp
mov
pop
or
jno
rcll
mov
mov
add
adc
jg
mul
or
nop
push
add
xchg
jp
dec
loopne
lcall
xchg
icebp
int3
inc
jbe
mov
jp
adc
mov
xor
imul
cli
add
mov
push
outsb
push
nop
sub
in
or
or
andl
mov
mov
into
or
leave
jg
repz
lea
stc
insb
mov
ljmp
jbe
fs
and
sbb
sahf
hlt
jmp
popa
sbb
not
std
in
xchg
jg
and
xchg
mov
int
inc
loope
or
or
mov
mov
adc
xor
sbb
mov
xor
xor
push
clc
dec
mov
xor
insl
sub
or
xor
mov
fs
int
push
pop
arpl
fcoml
mov
inc
and
mov
push
dec
xchg
rolb
push
dec
mov
push
int3
ret
mov
ss
xlat
out
lret
add
addr16
in
mov
lea
jne
mov
sbb
loope
sub
and
scas
sbbl
xchg
sub
int3
out
push
popa
movsl
outsb
lret
jns
mov
adcl
sahf
sarb
pop
movsb
jge
push
push
mov
aam
xor
xchg
inc
mov
or
hlt
imul
loop
inc
cmp
mov
movsb
nop
and
aaa
loopne
jle
adc
lods
push
stc
dec
loopne
mov
sbb
fadd
cmp
mov
jl
imul
imulb
orl
movsl
jl
movsb
cwtl
hlt
mov
pop
out
mov
js
jmp
or
idivb
adc
sti
sub
nop
mulb
clc
or
mov
mov
mov
mov
aaa
mov
mov
dec
inc
push
cmp
xchg
mov
mov
inc
int3
jae
popa
xor
cmp
out
or
daa
inc
fwait
adc
cwtl
push
repnz
jo
push
jmp
das
into
popf
movsl
loop
sbb
out
and
push
popa
push
std
enter
scas
pop
pusha
cltd
xor
cmp
inc
dec
xchg
push
add
outsb
push
or
imul
cmp
mov
div
jg
mov
les
sub
lret
test
adc
out
or
jp
mov
lahf
lahf
imul
sbb
lea
jge
mov
into
mov
jecxz
mov
jns
push
repz
add
into
aas
fwait
out
arpl
cmpsb
and
mov
icebp
and
and
dec
mov
xlat
jecxz
push
sub
sub
mov
ljmp
aaa
gs
nop
int3
and
fs
cmp
popf
xor
and
jg
mov
loop
dec
xchg
gs
push
idivl
jns
mov
mov
inc
cmp
mov
add
clc
testw
and
and
mov
out
loop
sbb
repnz
movsb
insl
sbb
sub
ret
ds
popa
cmpsb
cmp
inc
mov
outsb
std
and
or
pushf
movsb
scas
inc
pop
das
sub
pop
mov
mov
xchg
cvttps2pi
push
inc
faddp
lret
xlat
sub
pusha
out
inc
int
test
sub
ret
scas
jg
faddl
js
fdivr
sbb
add
inc
inc
lcall
lret
js
pop
insb
mov
dec
lock
jo
sbb
xchg
call
fwait
jb
fwait
xchg
out
push
pop
mov
cwtl
das
aam
push
mov
jmp
mov
jae
mov
xchg
push
ds
adc
push
bound
mov
inc
or
leave
xlat
in
sub
arpl
pop
sahf
xchg
lret
gs
sub
adc
jb
loopne
jb
or
lds
push
inc
push
inc
into
mov
subb
adc
sub
add
add
add
inc
nop
pop
add
pop
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
