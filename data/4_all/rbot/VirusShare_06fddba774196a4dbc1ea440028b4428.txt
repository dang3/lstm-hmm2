push
call
ret
ret
cltd
push
lds
sbb
jp
das
iret
ja
or
dec
push
iret
cmp
imul
sub
lods
adc
je
bswap
bound
xor
out
cmp
pop
push
mov
lods
pusha
pop
adc
cmpsl
sbb
add
addr16
subl
sahf
dec
xchg
pop
sub
fcmovb
test
jmp
insl
dec
data16
pusha
jecxz
ret
imul
cmp
lock
inc
mov
lds
loope
dec
lcall
and
xchg
xor
bound
rcrl
shrb
add
mov
pop
pop
pop
jne
pop
adc
and
adc
arpl
in
adc
cli
and
scas
push
aam
dec
inc
mov
call
push
fstl
pop
mov
out
rcr
shrl
xchg
pop
leave
lods
inc
fstpt
lahf
push
dec
jmp
jmp
cltd
xchg
aam
inc
sub
mov
sub
fsub
lahf
and
add
imul
inc
bound
inc
fstpl
sub
dec
inc
rcr
jge
push
or
cmp
imul
in
outsl
pop
xchg
add
shll
xor
fs
pushaw
adc
iret
ffreep
mov
aad
test
cli
xchg
je
xor
dec
fsts
xchg
fwait
outsl
mov
add
in
mov
pop
les
add
add
jmp
test
sahf
fdiv
lds
xchg
push
popf
addr16
cmpsb
das
rorb
jae
jl
aam
data16
out
clc
pop
addr16
out
in
popa
mov
out
xchg
out
mov
int
inc
in
imul
fld
shll
xchg
mov
imulb
dec
lret
mov
lds
fmuls
pushf
mov
xchg
in
ret
inc
inc
cmc
int
repnz
inc
sahf
out
pop
xorb
mov
mov
int3
cwtl
arpl
adc
into
jl
fstpl
xchg
jmp
cmp
adc
rcr
and
xchg
in
data16
push
xchg
jo
loop
mov
cld
pop
mov
pop
repz
jle
fisubl
xchg
in
out
mov
stc
je
outsb
setns
mov
jne
push
xor
lcall
mov
repnz
and
xor
mov
lock
mov
imul
aaa
shl
std
cmp
lret
jne
ret
in
sub
pusha
and
mov
jne
dec
iret
aas
add
enter
sbb
fucomi
pop
mov
sbb
pop
xchg
addr16
fcomi
in
ljmp
icebp
xlat
int
jge
std
inc
sbb
push
frstor
mov
scas
sub
add
lods
sub
xlat
sti
pop
dec
outsl
lods
mov
or
inc
or
add
adc
hlt
int
int
sub
inc
lods
jnp
lcall
js
ds
lahf
sub
rorb
or
aas
jne
sbb
arpl
sbb
sbb
enter
sub
es
leave
loopne
pop
in
lret
mov
cltd
inc
daa
in
stos
mov
out
push
in
scas
cmc
cs
fidivrs
lea
adc
dec
push
ljmp
dec
fcmovnbe
leave
mov
ja
push
dec
mov
and
xchg
and
mov
out
pop
filds
mov
and
mov
cmp
dec
xchg
enter
pop
mov
scas
mov
out
out
xchg
mov
rcrl
in
popa
adc
out
and
inc
pop
or
std
sbb
pop
jmp
or
leave
xor
addb
cmp
cmp
jp
jge
dec
cmp
adc
in
xchg
aas
sbb
insb
dec
cltd
push
cmp
mov
add
out
xchg
mov
ds
scas
pushf
jo
mov
icebp
add
add
and
insl
ss
cmp
aam
cmpb
adcb
dec
mov
fcomip
test
js
out
leave
and
xchg
adc
cmpsb
xorl
cmpsb
les
arpl
aam
add
movsl
std
jmp
jae
mov
mov
fs
cmp
jecxz
lods
inc
adc
cmp
mov
jne
pop
jp
sar
xchg
xor
fs
and
sar
pop
lea
fists
jl
repnz
cmp
pop
and
popa
in
cwtl
sbb
sub
push
dec
dec
movsb
jae
dec
enter
jno
jecxz
into
jmp
sbbb
scas
inc
pop
inc
push
jb
test
cmp
xchg
in
push
xor
ja
push
mov
insl
out
mov
xor
dec
mov
or
insb
and
fistpl
es
lock
insb
int
dec
jle
outsb
or
addr16
and
or
jns
jecxz
mov
sub
lods
or
sbb
jo
cmp
shlb
ret
repz
sub
shlb
jge
pop
in
int3
cmp
jl
out
insl
jbe
jb
xor
rcr
or
add
into
mov
cli
xor
out
insl
inc
inc
jno
inc
and
mov
xchg
fwait
mov
scas
push
dec
push
cmp
scas
dec
pop
xchg
out
pushf
fsts
imul
add
xor
subl
mov
add
push
out
cld
hlt
shlb
hlt
test
ja
ret
sub
push
adc
shl
jae
xor
lea
dec
mov
inc
jecxz
sbb
or
and
sub
push
lret
or
and
pop
dec
std
sub
and
insl
mov
stos
das
adc
and
mov
pop
out
stos
push
mov
mov
in
cld
jg
js
fwait
loopne
pop
push
js
fidivrl
sub
push
push
adc
aas
and
scas
testb
dec
scas
jecxz
xor
imul
sub
sbb
dec
jno
lods
fwait
stos
or
js
or
lock
pop
dec
outsl
mov
jb
pop
sbb
lods
sbb
clc
sbb
jb
or
lret
scas
lret
add
insb
dec
in
mov
lock
or
cmp
xor
es
test
out
sub
jmp
rclb
rolb
aaa
lods
adc
inc
sub
push
mov
sbb
fwait
sub
sarl
insb
cmp
mov
dec
mov
mov
jo
in
add
dec
mov
aaa
rolb
mov
lahf
sbb
cwtl
ss
cli
and
mov
and
cli
testl
push
jecxz
jecxz
addb
xor
stc
jle
xchg
clc
jp
xchg
nop
gs
push
xchg
inc
addr16
sbb
add
mov
mov
xor
jo
shll
xchg
or
stos
not
rcrb
sti
lods
xor
imul
lea
std
jmp
mov
mov
aaa
xchg
cmc
mov
mov
insl
mov
movl
xchg
incl
js
call
decb
push
or
ss
jne
enter
mov
loopne
or
mov
insb
pop
inc
add
loop
adc
hlt
insb
jbe
sub
or
jno
pop
mov
sti
or
jmp
pop
sub
loope
je
and
outsb
pop
cmpsb
in
lcall
mov
sbb
jg
push
stc
and
pop
aaa
leave
fisttpll
xchg
pop
fldt
popa
das
mov
cmp
addl
inc
jp
xor
call
push
adc
in
stos
and
movsl
fldenv
iret
push
sbb
mov
movsb
jmp
fs
sbb
dec
sbb
in
out
or
mov
cwtl
inc
mov
fcoms
mov
das
xlat
pusha
cmp
jne
mov
sbb
cltd
mov
testl
and
imul
add
je
inc
dec
or
fidivl
jmp
out
xchg
dec
and
push
addr16
mov
push
mov
test
mov
stos
sub
popf
data16
cmp
lea
add
mov
mov
inc
cmpsl
mov
and
xor
cmp
dec
je
in
xor
lock
push
jecxz
xor
push
push
sahf
out
xor
in
cmp
push
jo
insb
sbb
mov
iret
push
inc
inc
add
js
test
dec
ds
into
mov
cmc
repz
add
sbb
mov
inc
xchg
jns
addb
fcomps
or
mov
dec
lea
fisubl
inc
pusha
jmp
pop
lret
xor
lock
popf
mov
dec
cmp
gs
adc
push
test
push
adc
imul
fdivrs
mov
jp
cmp
or
bound
clc
add
scas
jne
sti
daa
pop
lods
insl
fisubl
jo
mov
out
pop
dec
sbb
je
andb
call
cld
cmp
inc
lahf
cmp
sub
xor
mov
mov
jecxz
push
sti
push
gs
ja
jnp
testb
inc
movsb
cwtl
stos
in
mov
mov
fdivs
mov
or
xor
jl
dec
pushf
ds
pop
sub
mov
or
and
mov
jnp
aas
push
add
jmp
mov
outsb
pop
or
leave
frstor
dec
push
aas
jecxz
inc
mov
ret
adc
add
das
pop
xchg
je
xor
or
adc
sub
outsl
cs
mov
add
or
test
push
outsb
sub
mov
aam
xor
cmp
mov
les
push
dec
inc
mov
int3
adc
or
mov
inc
ljmp
dec
xchg
mov
cmp
hlt
mov
ffree
sbb
std
push
stos
stos
jle
jno
lods
pusha
xchg
mov
push
sub
xchg
jl
ss
sub
cmpsb
fsubrs
xchg
push
jae
add
jg
or
sbb
sti
sbb
fucomp
enter
push
jo
testl
cmp
orb
mov
add
out
cmp
sbb
dec
clc
jo
cltd
ret
fdivr
gs
int
cmp
adc
mov
xor
lods
lcall
adc
and
mov
test
outsb
mov
movsb
jns
add
mov
mov
mov
cmp
xlat
pop
inc
pop
sbb
mov
aad
jmp
push
es
enter
cli
or
aad
mov
pop
ret
stc
lds
push
iret
xchg
lock
leave
mov
sbb
addr16
sub
fwait
leave
cmpsl
push
jg
xor
xor
enter
vhsubps
movsb
push
push
mov
jl
fs
inc
xlat
outsl
sub
or
or
mov
scas
icebp
sub
or
sbb
daa
jno
icebp
dec
mov
movsl
loopne
jge
orb
or
movsb
mov
and
cli
ja
ds
int3
sub
out
xor
mov
jb
sub
push
xchg
lock
push
and
cli
mov
pop
stos
inc
mov
iret
imul
cmpsl
jmp
or
and
scas
xchg
inc
pop
movsb
push
lea
imul
and
jne
lods
cmpl
xchg
mov
cmp
lret
lds
aam
test
cmc
adc
pop
adc
push
mov
lods
subl
mov
fmul
sarb
rol
shlb
out
dec
or
adc
in
mov
mov
stos
loopne
sub
leave
sbb
jne
shr
je
mov
movnti
in
dec
cli
cpuid
sbb
movsl
sub
fidivl
jae
ret
sbb
sbb
inc
out
fdivs
pop
or
fsubr
inc
shrl
out
cld
inc
lea
arpl
js
mov
or
xor
leave
fucom
addb
dec
cmc
orl
fmuls
rclb
lock
out
or
fsubrs
jo
hlt
stos
sbb
lret
nop
jae
add
in
lret
stos
mov
xchg
dec
jnp
icebp
fwait
mov
mov
xchg
fcmovu
cmpsl
popf
mov
imul
loop
js
sub
xchg
pop
ljmp
mov
stos
xchg
xor
lods
jg
push
jle
divl
stos
stos
dec
add
rcr
arpl
jnp
push
bound
loop
cmp
enter
pop
inc
mov
xor
dec
and
mov
hlt
pop
call
pushf
rorb
test
or
inc
in
inc
ret
decl
in
icebp
movsl
mov
aaa
add
cmc
lahf
movsl
scas
xor
push
out
dec
inc
mov
mov
push
push
adc
push
es
push
cli
pop
dec
mov
rcr
arpl
and
pusha
pop
loopne
fadd
aad
pop
pushf
out
fs
dec
stc
sub
lcall
mov
rolb
test
push
fwait
inc
out
jne
fadd
jp
pop
pop
xor
sbb
outsb
test
xor
pop
out
and
cli
pop
cmp
inc
jnp
or
mov
push
jne
fisubrs
subb
std
jns
aad
inc
repnz
stos
cmp
popf
fwait
push
popf
scas
jno
ljmp
subl
fwait
repnz
pop
je
cld
es
push
jae
mov
pop
sbb
dec
enter
push
mov
mov
and
jg
push
or
cltd
cmpsb
lahf
sbb
inc
lahf
fiadds
jl
cmpl
sub
sbb
mov
jl
fmull
rolb
sbb
mov
mov
xor
int3
rorl
dec
cmpb
dec
testl
loope
add
dec
les
int3
mov
mov
xchg
or
cs
inc
sub
cli
and
sub
and
sub
les
inc
sbb
mov
jp
cld
loopne
dec
mov
test
lret
enter
add
jge
sub
lahf
fistpll
dec
sbb
push
xchg
or
cmc
cmpsb
fsubs
jg
fstpt
dec
lret
jp
ds
sbb
movsl
push
pushf
xor
lahf
cmp
cmp
xor
insl
scas
cmp
in
rol
push
lds
jp
cmp
cmpsb
pop
mov
insl
out
fdivs
push
ja
jg
jno
xchg
subl
scas
xor
sar
enter
into
xchg
dec
fists
shr
dec
fnsave
pop
jns
pop
mov
into
lds
jae
sbb
jp
jl
and
stos
and
xchg
mov
push
jo
mov
add
stos
pop
jg
xchg
xor
lods
fmull
pop
out
dec
pop
xor
xor
push
in
adcb
jle
push
scas
or
pop
push
adc
mov
or
es
iret
xchg
mov
rolb
cs
xchg
adc
lds
mov
adc
mov
xchg
add
jno
sub
or
shrb
in
dec
cltd
rcl
xor
stc
push
inc
arpl
lret
sbb
dec
das
and
dec
inc
sbb
cmpsl
movsl
push
pop
xor
inc
sub
sbb
cli
dec
cmp
or
insl
or
mov
mov
push
les
jnp
mov
dec
aaa
mov
out
pushf
xchg
pop
inc
jae
lcall
sbb
fpatan
jge
das
daa
push
adc
mov
push
out
int3
jmp
adc
insl
sub
outsl
mov
xchg
xchg
daa
in
mulb
and
xor
mov
in
xorl
jl
pop
or
aad
mov
dec
dec
jae
cmp
mov
div
insb
maskmovq
negl
jbe
loope
or
jmp
pop
dec
arpl
arpl
aad
iret
add
xor
pop
xchg
fs
xchg
into
or
pop
repnz
xchg
pop
icebp
outsb
scas
shll
test
mov
in
cltd
jb
aam
les
mov
pushf
add
jb
jge
pop
adc
lds
aaa
or
push
mov
mov
lds
lea
testl
leave
pop
jae
pop
add
mov
push
pop
test
adc
xchg
pop
pushf
dec
bnd
mov
dec
fdivrl
add
cmp
fcomp
clc
mov
jmp
mov
cmp
int3
push
dec
add
lock
pop
xchg
and
dec
pop
dec
cmp
std
ja
xchg
push
sar
xor
and
cmp
int3
xchg
jnp
loopne
lret
les
jle
ljmp
cmpsl
cmp
insl
mov
mov
sti
bound
dec
in
js
sub
sub
iret
adc
jmpw
cld
dec
or
inc
movb
add
adc
enter
out
pop
cli
jno
cmpsl
xchg
jo
pop
ja
loopne
jb
aas
lea
mov
or
jge
cs
cwtl
pop
dec
cli
add
rolb
cmp
pop
xor
jns
ret
push
or
adc
js
mov
inc
add
xchg
xchg
cmpb
test
or
add
mov
inc
xor
sbb
ljmp
sbb
loope
icebp
stos
pop
cmc
mov
xchg
or
outsl
xor
cmp
xchg
pop
in
or
mov
aas
pop
pop
mov
out
push
cmovg
andl
xchg
je
imul
outsl
sbb
test
test
pop
sub
or
mov
cmc
das
cmpsl
add
xor
push
sub
dec
lock
push
fst
ss
ficoml
adc
mov
data16
mov
pop
repz
cmp
imul
push
pusha
fstpt
daa
in
out
and
sbb
movsl
daa
sub
cmp
and
dec
push
stc
fwait
xchg
je
mov
sub
es
loope
shrb
addl
push
sbb
mov
cwtl
repz
icebp
cs
mov
aad
lret
pop
pop
mov
sub
dec
test
add
push
sub
mov
xor
mov
cmp
es
out
insl
cwtl
xor
adc
in
loop
jge
arpl
sahf
push
std
fnstcw
movsl
call
movsl
xchg
in
icebp
mov
negl
push
cli
scas
aad
pop
pop
lahf
mov
and
push
iret
mul
loope
in
jecxz
push
pop
push
sahf
pop
push
jmp
add
cmp
xor
xor
jo
das
xor
out
sub
or
cmp
lret
loope
push
xor
dec
scas
add
pop
xor
ret
clc
outsb
xor
xchg
mov
and
sbb
adc
cmpsb
iret
adc
je
cmp
mov
cmp
fnsave
movsl
call
lds
sbb
inc
sar
test
mov
sbb
or
sbb
mov
push
scas
stos
cmp
movsb
mov
add
xchg
mov
call
and
lret
mov
cwtl
sbb
jo
sbb
andl
inc
mov
mov
pusha
ds
and
ljmp
mov
push
testb
outsl
popa
sbb
shrl
aam
dec
mov
mov
jns
inc
rcr
leave
sbb
pusha
stos
jp
push
push
cmp
xchg
lret
mov
mov
rclb
imul
addr16
lea
jecxz
sbb
hlt
mov
pop
pushf
movsb
sbb
xchg
jle
std
aad
xchg
xchg
inc
cmp
xchg
in
dec
add
sbb
std
enter
xchg
cmpsb
fisubrs
sbb
stos
rorb
adc
adc
mov
mov
in
mov
ds
push
add
xor
ljmp
lock
stos
mov
scas
loopne
mov
or
ja
pusha
xor
inc
cmp
cli
and
dec
gs
xchg
jo
mov
js
movsl
or
outsb
or
lods
push
mov
add
sti
pop
mov
andl
into
mov
sti
inc
or
inc
popf
pop
xchg
sbb
fcoml
or
hlt
inc
lcall
adcl
jecxz
cmp
hlt
mov
mov
mov
sbb
jg
imul
fsts
hlt
ds
movsl
mov
jae
mov
lret
pop
cmp
or
ret
rcrl
cmp
pop
cli
pop
mov
paddq
pop
mov
add
push
lods
and
int3
cltd
fidivs
test
mov
dec
inc
aad
xchg
push
xchg
out
iret
popa
adcl
and
leave
scas
lret
jp
mov
movsl
xchg
sub
cmp
push
in
sahf
jo
orb
xchg
pop
cmovae
std
adc
lahf
loop
add
push
push
ja
lods
mov
jg
jne
inc
push
out
or
lea
or
clc
adc
xchg
pop
shll
mov
clc
xchg
iret
fbstp
inc
sti
jge
pop
cmp
push
cs
push
imul
jbe
sti
sub
scas
sbb
repz
adc
in
sub
icebp
into
and
or
xor
bound
inc
and
or
xor
ss
je
xor
movsb
mov
mov
xor
xor
call
mov
sbb
mov
add
adc
and
dec
adc
jecxz
pop
push
sbb
adc
and
or
fwait
test
jp
sbb
push
adc
in
jecxz
lock
ljmp
js
cltd
push
pop
cmp
jns
lahf
adc
outsb
jge
repnz
insl
add
lods
pop
and
out
jno
scas
mov
ret
out
fwait
mov
dec
testl
loopne
inc
ret
mov
sbb
mov
mov
add
pop
mov
xchg
dec
sbb
mov
add
xchg
sbb
mov
and
xor
cmpsb
stc
mov
mov
adc
xor
stos
bound
and
push
xchg
and
dec
jne
dec
fcmovb
jo
dec
lret
cld
xorb
ret
rcl
sub
mov
add
xchg
lods
adc
jmp
sbb
mov
xchg
popf
insb
pop
inc
test
add
xor
orl
int3
cmpsl
push
dec
xchg
imul
and
push
mov
rclb
jecxz
jg
dec
mov
mov
inc
icebp
out
enter
leave
repnz
mov
addr16
sbb
out
xchg
mov
mov
cmp
mov
xor
test
aas
sbb
js
pop
mov
hlt
push
subl
fwait
popa
fistpll
and
add
fcompl
cwtl
aaa
dec
ret
inc
sbb
test
inc
data16
stos
mov
out
fmulp
lcall
push
or
js
pop
xlat
lds
cmp
xor
adc
jae
cmpb
jmp
int3
jno
aaa
fcoms
jne
xor
popf
push
test
cltd
testb
xchg
push
dec
cmpb
imulb
push
inc
out
loop
cmc
sti
addr16
fwait
test
lcall
xor
adc
mov
push
iret
fimull
ds
push
xchg
orb
pop
inc
jbe
scas
xor
sbb
push
andl
aad
cli
lods
mov
sbb
insb
lret
xlat
idivl
adc
nop
sbb
repz
cltd
dec
cli
lea
push
mov
push
pop
mov
and
lods
xor
mov
shll
add
mov
inc
push
jle
lea
mov
dec
sub
jne
inc
jg
inc
add
stc
mov
dec
int3
mov
aad
xor
inc
and
arpl
clc
mov
lret
bound
stos
jmp
test
cwtl
mul
fsts
cmpsl
adc
sub
push
cmpsb
pop
xor
dec
xchg
pop
imul
add
movsb
cmp
mov
out
add
pop
ja
mov
fisubrl
cltd
sub
mov
popa
fdivrs
jo
xor
xchg
add
or
pop
jl
push
cmp
pop
xor
iret
xrelease
push
mov
xchg
icebp
or
mov
aad
addr16
pop
fimull
fwait
cmp
sub
mov
push
and
pop
or
outsb
push
jns
sub
pop
or
mov
leave
in
inc
leave
popa
mov
std
mov
stos
data16
outsb
cmpsb
mov
out
pop
divb
jae
inc
cmp
jge
mov
movsb
shr
ret
mov
mov
sub
aaa
mov
xlat
and
imul
rcrl
ljmp
xor
dec
adc
or
push
into
push
das
jo
xchg
adcb
aaa
and
push
and
fcmovnu
cmpsb
std
test
leave
push
fs
xchg
rol
cmpl
mov
dec
and
adc
hlt
inc
add
aaa
xchg
adc
sub
scas
push
lds
mov
cmp
ljmp
mov
stos
js
adc
enter
sub
jo
mov
aaa
mov
pop
push
jg
xor
shlb
xor
je
mov
inc
lock
rol
scas
or
ja
xchg
movb
lods
subl
jnp
fucomip
pop
adc
fwait
testl
push
sub
mov
clc
lock
add
sbb
pop
mov
jl
repz
leave
roll
jns
adc
mov
in
scas
fisttpll
je
jge
xor
shlb
cli
nop
insl
xorl
clc
sub
mov
add
je
cli
popa
dec
test
push
jmp
push
loope
sub
imul
sub
add
mov
jbe
jo
sbb
std
push
rorb
jle
daa
mov
fadds
leave
sbb
call
mov
cs
into
xlat
rcr
or
mov
push
jecxz
insb
ret
xor
cli
xlat
jmp
jbe
lcall
cmp
daa
int3
nop
cwtl
push
out
je
jnp
dec
aas
ret
or
mov
popf
icebp
cmpb
inc
push
lret
jmp
sahf
mov
inc
inc
mov
mov
aaa
adc
push
add
lahf
pushf
push
inc
das
daa
inc
cs
dec
adc
out
xchg
ffreep
mov
repz
or
paddusw
lods
stos
or
aaa
mov
push
adc
nopl
sbb
and
push
pop
test
inc
sub
xchg
test
mov
xor
sbb
sti
or
mov
mov
mov
jl
imulb
cmpsb
xorl
xchg
xor
out
push
std
aam
scas
stos
adc
bound
dec
ret
mov
jo
scas
shlb
hlt
pop
mov
clc
push
jns
rcrb
adc
pusha
xchg
minps
int3
icebp
xchg
sbb
movsl
adc
dec
je
jle
sub
or
or
push
add
add
call
xor
mov
mov
out
inc
call
rorb
add
mov
pop
jle
dec
xchg
pop
shrb
call
aam
inc
int3
cwtl
loope
xchg
test
gs
and
je
imul
ljmp
cmp
lods
lea
cmp
dec
push
sbb
inc
imull
in
aas
sub
movsl
int
outsl
xor
test
adc
xchg
test
mov
sti
sub
xor
outsl
or
fdivs
add
add
pop
into
push
popf
pop
xor
and
push
sbb
add
lds
sbb
push
shlb
dec
sbb
ja
pop
test
movb
jl
xor
jnp
arpl
jns
adc
jl
xchg
mov
in
or
jmp
ja
cwtl
jns
cwtl
ss
pop
es
daa
out
push
fdivr
mov
loop
add
mov
ret
fstps
arpl
and
js
ljmp
out
pop
xchg
inc
ds
add
subb
jg
into
bound
push
insl
adc
jl
shlb
inc
test
sub
adc
xor
jne
dec
mov
mov
pop
jecxz
dec
sbb
dec
int
fwait
aad
xor
jae
pextrw
bound
cmc
inc
xor
cmc
sbb
lret
ret
pop
fs
ljmp
js
sub
nop
roll
dec
stos
jno
inc
jle
jge
imul
jp
loopne
out
lcall
adc
add
mov
mov
push
xchg
jle
icebp
add
lea
inc
cld
jnp
mov
fwait
aas
sub
mov
mov
and
xchg
int
cmp
hlt
pop
into
das
cs
out
test
cmp
mov
mov
dec
fisubrs
sub
pusha
dec
imulb
xchg
popf
hlt
fimuls
iret
call
test
and
xor
in
pop
rcr
mov
int3
or
test
xor
ds
or
test
pusha
aaa
sti
dec
push
inc
inc
in
xor
dec
scas
das
loopne
pop
add
mov
mov
adc
push
jl
or
lea
mov
in
dec
sub
bound
pop
pop
dec
cld
sarb
sbb
clc
sbb
daa
mov
gs
inc
inc
xsaveopt
xchg
mov
gs
sub
mov
jmp
scas
jbe
add
lods
jbe
cmc
add
mov
ja
insb
add
xor
sbb
cmc
sbbl
inc
sbb
cmp
fdivs
mov
int3
adc
dec
or
out
in
cwtl
xchg
popa
fs
outsb
push
loope
popf
in
daa
add
jb
sub
subl
push
cmp
jmp
mov
adc
mov
loopne
sub
adc
mov
jmp
sbb
push
lcall
ljmp
repnz
mov
mov
sti
dec
pop
adc
cli
mov
loop,pn
mov
push
lods
outsl
add
icebp
pop
shl
mov
pop
fidivl
xchg
popa
cltd
sti
pop
jg
adc
pop
movsl
mov
test
pusha
xchg
shrl
movsl
fildl
jo
pop
icebp
fidivs
data16
or
test
fadds
pushl
add
rcr
adc
je
lock
test
pop
push
stos
mov
sbb
bound
mov
adc
ficoms
sub
loop
popf
mov
inc
jl
adc
ss
xor
arpl
pop
jmp
pop
jle
add
jo
or
int3
pop
mov
and
mov
pop
add
mov
push
dec
scas
mov
loopne
cli
fs
jecxz
mov
arpl
das
jnp
lock
push
in
pop
repz
push
mov
jae
in
mov
es
sbb
dec
lock
xor
lcall
out
fwait
or
mov
jb
add
jle
inc
stc
pushf
pop
ljmp
push
jl
push
dec
jmp
test
fsubrs
adc
cmp
push
popa
add
in
or
inc
imul
pusha
xor
push
fs
dec
fcmovnu
push
addr16
dec
add
int
dec
push
fwait
pop
sarb
adc
push
inc
pop
mov
ja
xchg
sbb
cmp
stc
pop
mov
dec
insl
push
nop
sbb
mov
test
jb
mov
cmp
mov
sub
inc
cs
clc
inc
stc
or
or
push
dec
out
xchg
xchg
sbb
pusha
aam
mov
dec
pop
pusha
dec
lret
cmp
repnz
ficoml
mov
push
loopne
add
mov
cmp
int
push
sub
and
roll
jecxz
fcmovnu
jae
loope
inc
mov
rolb
movsl
cwtl
sub
hlt
mov
insb
jmp
jns
push
je
fisubrs
lret
in
into
movsl
and
mov
cmc
xor
loope
data16
add
sbb
adc
mov
cs
push
adc
mov
jnp
xor
out
adc
pop
int3
add
jl
cwtl
test
inc
add
jno
mov
fs
popa
ficoml
scas
push
lds
sti
mov
and
mov
adc
sbb
shr
mov
xor
inc
add
xchg
stos
lcall
lret
popf
int3
test
push
outsl
jo
mov
aas
jnp
aas
dec
add
mov
pushf
xor
loopne
sbb
icebp
jbe
sbb
add
lret
sbb
es
mov
imul
in
xchg
roll
xchg
add
cmp
ret
call
pop
jle
xor
sti
std
cmpl
dec
mov
sti
in
int
sahf
adc
mov
mov
inc
repz
ret
lods
pusha
cmp
fld
ljmp
imul
scas
xor
mov
push
fstpl
mov
mov
subb
mov
sub
mov
mov
jns
jl
sar
or
fbld
mov
cld
xchg
sub
cmpsl
jnp
sbb
jnp
out
adc
pop
cmp
int
jge
sbb
mov
cmp
dec
sbb
sbb
xchg
lods
mov
sarl
pop
daa
sub
mov
jae
out
mov
in
or
loop
cltd
mov
push
and
dec
jns
imul
arpl
push
pop
jge
xchg
and
cltd
dec
mov
add
mov
fcompl
xchg
cmp
inc
jl
rol
mov
dec
in
cmp
pop
les
cmpsb
push
mov
jne
in
ret
mov
jmp
pop
mov
fwait
mov
or
mov
mov
cmp
cltd
sahf
dec
mov
jle
xor
jecxz
jge
lcall
and
mov
jae
jl
xor
in
mov
xor
and
fcoml
sub
sbb
and
cli
sub
shlb
and
les
push
jb
in
fisubs
dec
mov
cli
test
test
pop
fstl
aad
stos
jo
add
lret
add
xor
jle
mov
fmull
jne
push
dec
inc
mov
aam
fbld
lcall
popf
and
stos
push
in
daa
cmp
or
mov
pop
push
div
lcall
rcrl
scas
adc
sbb
out
pop
add
inc
fs
xchg
sbb
jae
sbbb
cmp
ljmp
xor
jge
lcall
mov
mov
jle
sub
stc
xchg
movsb
loop
xchg
and
mov
mov
mov
mov
xchg
iret
xlat
sub
mov
adc
in
stc
ss
repz
nop
jno
mov
cmpsb
fwait
add
insb
dec
lret
pop
aas
push
arpl
dec
jne
inc
sbb
cmp
fistpl
test
stc
movsb
cmpsl
inc
or
aas
fisttpl
adc
mov
jmp
vpmacsdql
test
mov
xchg
pop
mov
pop
mov
mov
dec
push
push
das
cwtl
mov
lahf
ja
inc
lock
in
repnz
dec
pop
insl
cld
loope
mov
cmc
iret
orl
in
xor
int
mov
cmp
add
jmp
xor
mov
icebp
sub
shrb
orb
jg
xor
mov
leave
repnz
xlat
aad
or
loope
ja
xchg
add
and
jmp
lcall
addr16
xchg
mov
or
pop
je
push
mov
popf
inc
daa
lahf
mov
and
sahf
icebp
cmpsb
jb
in
dec
push
loope
ret
movsl
les
das
cmpsb
xchg
jp
cmp
cmpsl
lahf
fcompl
cs
jmp
push
pop
iret
jp
fsubp
outsb
rcl
ljmp
pop
xorb
daa
shrl
stos
dec
insl
cmp
sti
and
adc
push
add
dec
mov
push
fisubrs
push
and
jmp
loop
fbld
adc
pop
sub
or
neg
pushf
push
jl,pn
push
inc
and
daa
lea
add
in
bound
shll
lea
jnp
push
out
add
and
leave
push
push
xor
mov
jp
stos
mov
inc
or
xchg
jmp
jmp
mov
dec
and
add
mov
loope
into
inc
xlat
adc
or
cmpsb
test
imul
or
je
dec
std
out
ret
xchg
mov
mov
ss
push
mov
loopne
insl
sub
and
rolb
dec
or
outsb
dec
dec
outsl
push
jl
push
mov
jne
lret
sub
cmc
inc
stc
xor
rclb
scas
adc
mov
ja
mov
in
jmp
lahf
cmc
sub
push
cmpsb
test
clc
sti
movsb
jp
sub
fcmovne
pop
pop
andl
loope
push
pop
int3
xor
dec
fsubp
adc
dec
push
psubusw
jmp
out
rcll
mov
and
mov
mov
es
ds
adc
lahf
mov
popf
test
fbstp
mov
test
popa
or
sbb
mov
mov
adc
jg
inc
jnp
xchg
gs
repnz
jne
cmp
shlb
sub
jno
lods
rcll
cmp
fisubrs
cmp
ret
scas
insl
cli
stos
add
xor
cltd
cld
ljmp
lods
cs
mov
jbe
stc
fsubl
mov
adc
dec
push
insb
mov
je
jle
sbb
mov
sti
sbb
sub
bound
or
mov
dec
cld
pop
sub
adc
out
and
sbb
shll
aas
sbb
imull
cmpb
loopne
pop
add
es
adc
sbbb
mov
push
inc
jg
dec
orb
inc
loope
mov
mov
mov
sub
xchg
jb
mov
mov
or
add
jbe
or
mov
add
mov
faddl
in
inc
inc
adc
and
pushf
sti
in
cmp
rolb
add
lahf
mov
outsb
sbb
jbe
mov
mov
in
jb
idivb
inc
sbb
or
popa
push
xchg
push
xchg
mov
cmp
sbb
leave
sbbb
push
push
mov
ret
pusha
pop
loope
jb
pop
mov
dec
pop
sub
mov
outsl
in
jmp
push
in
xchg
pop
call
test
cmc
negb
imul
inc
lea
fists
jmp
xchg
les
adc
leave
and
sbb
popf
adc
xlat
lods
cmp
lds
ja
movsl
cmpb
mov
mov
mov
imul
push
out
add
test
jae
inc
aas
jle
in
sub
add
insl
jne
popf
or
jle
xchg
mov
mov
mov
cs
jns
push
push
or
xchg
sbb
pop
movsl
add
outsl
aad
jnp
inc
mov
cltd
inc
aas
and
das
popf
dec
jmp
subb
adc
cmp
orl
arpl
cmp
inc
cld
sbb
sbb
loopne
dec
popf
testb
dec
mov
mov
adc
repnz
push
push
dec
mov
xor
sub
mov
or
test
add
mov
leave
mov
rcrb
push
out
pop
std
fdivs
js
cld
inc
pop
flds
push
push
or
dec
shll
cmp
inc
mov
sahf
inc
lods
xchg
insb
shl
cmp
sub
cmpsb
mov
fucom
bound
mov
pushf
lods
cltd
pop
xchg
mov
xor
mov
loop
dec
leave
sbb
sub
xlat
xorl
je
adc
pushf
paddd
inc
push
aad
jo
arpl
push
inc
int3
jbe
adc
inc
mov
outsl
insl
loopne
lods
int3
pop
daa
loopne
call
xor
mov
das
pop
xchg
inc
push
dec
dec
sldt
sub
and
pushf
cld
jmp
fildl
mov
data16
out
lods
js
mov
clc
add
cmp
xchg
arpl
pop
test
mov
decb
jbe
sbb
ljmp
in
and
cmpb
jecxz
cmp
test
push
loop
sti
mov
and
pushl
push
or
lret
pushf
filds
jo
testb
jae
call
xchg
out
subl
dec
pusha
daa
inc
popa
push
dec
xorb
adc
cmp
cmp
and
mov
inc
into
mov
sub
mov
fldenv
leave
ss
or
jae
push
pop
imul
adc
pop
arpl
mov
into
dec
ja
xlat
imul
faddp
inc
loope
push
scas
shlb
gs
sub
pop
mov
jnp
ja
gs
xchg
xor
sub
jge
xchg
xchg
sbb
popf
ret
adc
ja
and
dec
push
in
sbb
call
in
push
movsl
jae
cmp
loopne
or
dec
lret
inc
pushf
test
jbe
sub
lret
push
sbb
sbb
push
shl
loop
pop
fiadds
rcrl
mov
jg
cmp
sub
xor
sbbl
pop
push
inc
in
sub
dec
inc
xorb
and
jl
push
gs
cs
in
cmpsl
outsl
dec
mov
lahf
mov
dec
movsb
mov
int3
nop
sbb
cmc
in
adc
shr
push
ss
gs
mov
cmp
lds
out
cmp
fadds
ja
mov
sarl
xchg
sub
cld
js
imul
aas
xor
lcall
mov
adc
and
bound
sahf
test
test
sub
lock
add
int
jmp
int
xor
push
inc
mov
enter
insl
mov
in
xor
jmp
inc
fcmove
or
xor
insl
cltd
push
cwtl
in
adc
std
mov
pop
jbe
jge
repnz
add
xchg
pop
popa
adc
mov
push
int
mov
and
repnz
in
pop
fdivs
cli
xor
jno
mov
adc
jnp
lret
loopne
xor
push
cmc
xor
add
int
test
push
xor
cmpsl
fwait
lret
ss
and
and
push
dec
lock
and
cmp
lds
sub
mov
out
int
xor
jmp
push
inc
lock
sbb
mov
lret
lock
movsb
pop
jae
jae
pushf
mov
cmp
jle
adc
sub
inc
or
sbb
imul
mov
ficomps
shll
jns
pop
mov
data16
pop
idivl
xor
pusha
adc
cwtl
cmp
aaa
mov
fdiv
jg
aad
adc
fistl
mov
and
bound
fxch
daa
dec
or
gs
test
lcall
enter
popf
pop
jae
int3
gs
fildl
mov
xor
daa
add
aam
cmc
sub
sub
mov
icebp
sbb
cmpsl
xor
scas
fldcw
add
pop
cmpsl
arpl
loop
int3
iret
jno
mov
popa
ret
in
mov
rcrl
jle
sbb
lret
in
pop
rcrb
xchg
jne
cmp
sbb
pop
sbb
out
fcoms
shl
fstpl
mov
mov
pushf
inc
sarl
jle
cmc
out
bnd
movsl
xchg
push
movsb
ss
movsb
ja
mov
insl
or
lds
stos
add
cmp
cltd
push
mov
push
dec
aaa
pop
mov
push
push
jp
mov
dec
xor
inc
mov
cmc
js
push
dec
aad
bound
xchg
clc
out
negb
test
test
mov
aas
aas
ror
movsb
mov
nop
dec
adc
sub
cmp
cltd
inc
sub
aaa
jmp
xchg
out
xchg
or
int
stc
add
push
mov
inc
xchg
sub
clc
es
fcoms
jle
sub
in
fwait
add
mov
test
or
test
cmp
and
scas
adc
jmp
adc
jb
inc
pop
sub
mov
cmc
push
je
pop
aas
imul
mov
mov
aas
insl
shlb
cmpsl
sbb
jmp
pop
cld
into
mov
nop
and
push
and
outsb
shlb
add
repnz
ss
aaa
lcall
aas
fwait
xchg
cmc
call
or
test
test
hlt
inc
mov
pop
jmp
adc
fisubs
dec
xor
pop
pop
out
mov
enter
inc
mov
lea
mov
dec
push
out
negl
sbb
pop
cmp
aad
out
adc
stos
shlb
sub
pop
dec
insb
repz
or
xchg
fimuls
stos
dec
mov
mov
std
xorb
pop
inc
scas
add
idivb
xor
clc
xchg
les
inc
xchg
ret
aas
sbb
xchg
dec
mov
cmpsb
jmp
xchg
xor
cwtl
hlt
xlat
mov
pop
jne
fcoms
add
adc
fmull
stos
bound
or
push
adc
popa
hlt
dec
fwait
and
or
pop
push
scas
push
push
lret
xlat
and
lahf
lret
out
mov
and
pusha
stos
insb
add
sub
or
xchg
ss
jg
inc
and
jnp
daa
inc
jne
push
sti
sub
pop
jge
test
mov
fstl
xchg
test
add
repz
lahf
iret
adc
mov
stos
pop
dec
arpl
enter
mov
and
inc
sbbb
or
fildll
clc
sbb
cmpsb
iret
aas
xor
push
mov
push
xchg
push
ljmp
push
mov
adc
gs
int
xor
adc
es
idiv
outsl
pop
mov
in
iret
xchg
xorb
mov
ja
mov
inc
fimull
dec
mov
xchg
js
mov
das
lret
and
outsl
mov
call
es
mov
cwtl
lahf
pop
push
ss
dec
loope
xor
fbstp
inc
mov
sub
xor
xchg
mov
repnz
jg
loop
or
adc
aam
jge
or
xor
stos
in
aad
pop
cmp
dec
mov
cmpsb
lea
cmpb
dec
fnstsw
jae
rcrb
clc
je
push
cmp
xchg
sbb
mull
ret
int
dec
mov
in
adc
aas
out
lret
imul
cmp
in
hlt
cmp
stos
icebp
sahf
pop
and
xchg
push
ret
sub
cwtl
inc
jg
pop
pusha
jmp
inc
and
repnz
fdiv
ss
xlat
fldl
push
push
mov
in
inc
sbb
test
imul
jecxz
add
fbstp
inc
lcall
scas
fcoms
sub
test
fstpt
out
sbb
lods
mov
sbb
inc
mov
and
or
adc
and
pop
bound
or
test
pop
imul
rorb
pop
xlat
push
mov
adc
repnz
addb
or
jle
mov
push
out
add
dec
sbb
pop
nop
sbb
dec
dec
es
xor
jl
adc
shrl
or
push
inc
enter
subb
pop
cld
add
mov
ljmp
repz
mov
push
das
xchg
sbb
shlb
inc
dec
idivl
add
mov
dec
jge
sub
movsl
call
out
mov
mov
lods
cmp
mov
sahf
push
int3
adc
dec
mov
push
je
adc
lods
inc
fcom
dec
push
sbb
test
jbe
dec
ficompl
mov
mov
movsl
sub
outsb
repnz
rcrb
adc
dec
xlat
or
xchg
push
mov
dec
push
and
push
xor
es
jg
aas
lahf
repnz
sub
pushf
pop
in
push
cmc
div
push
and
xchg
mov
jg
das
fucomi
pop
pop
or
and
arpl
das
add
aad
sub
out
push
mov
popa
lcall
and
sbb
dec
popa
addb
mov
cltd
mov
pop
inc
add
pusha
std
add
fadd
xchg
das
sub
sets
mov
push
jp
sti
insl
push
cmp
mov
lea
xor
and
jae
andl
je
fcoml
fisttpll
sbb
mov
lcall
lods
enter
ret
mov
cmc
cltd
push
das
inc
std
pusha
mov
out
pop
sub
xor
popa
or
std
dec
or
orl
xchg
mov
or
mov
sub
jb
out
pop
pop
movsl
sbb
pop
jnp
cmp
adc
aad
jno
ret
dec
fsubs
dec
lahf
clc
push
pop
loope
mov
lret
or
bound
mov
test
fiaddl
pop
inc
inc
dec
dec
js
out
xchg
mov
lcall
xchg
call
mov
les
push
adc
adc
cmp
inc
cwtl
decb
int3
mov
sbb
cs
jl
xchg
imul
push
and
xor
xor
insl
xchg
xchg
mov
or
push
int
aas
mov
sub
rorl
and
adc
jae
repnz
aaa
xchg
stos
hlt
push
not
lods
cmpb
stos
mov
sbb
or
out
mov
push
call
mov
dec
push
cmp
jae
mov
adc
lret
inc
ljmp
cmpsb
movsb
xor
sti
clc
fwait
scas
lahf
dec
nop
les
mov
cmp
xchg
cmpsb
mov
add
cmp
pop
xlat
rorl
mov
pop
into
scas
fmuls
or
dec
test
fmulp
mov
jnp
push
ret
hlt
push
pop
or
ja
jb
rolb
ss
sbb
or
cmp
mov
imul
jbe
cld
aaa
loop
cmpsb
cmc
dec
insb
pop
ret
mov
or
adc
jnp
aaa
jmp
xor
push
ss
fwait
inc
and
mov
test
push
arpl
jmp
icebp
cmp
jmp
jle
mull
sub
loopne
xchg
mov
cs
fistpl
outsl
xor
lret
mov
dec
insb
outsb
dec
mov
aam
mov
pop
inc
push
loope
mov
pop
cmpsl
call
leave
add
test
push
test
dec
push
mov
pushf
js
adc
cmp
cmp
mov
lods
cmp
nop
movsb
clc
lret
inc
imul
sti
ret
xorl
fwait
sub
pop
iret
call
shld
xchg
jge
adc
jl
movsb
mov
loope
sbb
outsl
pushf
sahf
and
mov
movsb
mov
sub
xchg
and
push
ret
mov
jmp
fisttps
and
xchg
sbb
sarb
mov
mov
pusha
shr
lock
scas
inc
repnz
dec
andb
cmp
test
xor
stos
scas
mov
bound
enter
xor
jno
rclb
fisttpll
in
gs
jo
mov
mov
or
adc
repnz
sub
cmpl
aas
or
or
in
cmp
jne
sbb
inc
repz
xlat
xor
out
ss
and
jl,pn
aam
pop
sub
xchg
test
jo
fwait
call
in
mov
and
sbb
inc
fsubl
jp
rclb
lcall
test
push
pop
dec
sbb
pop
aad
test
aad
iret
out
lea
cmpsb
jl
mov
fstpt
cmp
in
mov
lahf
or
dec
dec
divl
cld
mov
mov
inc
daa
test
mov
rclb
push
mov
xchg
pop
jb
test
ss
in
sbb
mov
das
dec
sub
jmp
or
scas
adc
fcoml
xorl
dec
imul
fcmovnb
mov
enter
mov
daa
push
adc
push
stos
push
nop
xchg
or
cmp
pusha
sarl
lds
cli
cmp
ds
mov
mov
inc
in
or
add
mov
cmp
or
fucom
mov
movsl
mov
cltd
in
sbb
sub
popa
or
in
fsub
dec
sub
pop
sarb
pop
ja
mov
dec
cli
lds
int
stc
inc
push
mov
ds
fst
pop
push
cwtl
push
in
mov
dec
jae
inc
adc
cmp
ret
ret
enter
pop
xor
or
fidivrs
adc
jo
push
aam
cld
jns
sub
jnp
idiv
add
pop
je
or
cwtl
jecxz
rol
dec
out
or
sbb
outsl
imul
out
cmp
call
pop
mov
and
int3
pop
ss
cmpl
push
adc
sub
dec
fisubl
ss
loop
cmp
mov
and
xchg
dec
cmpsl
mov
mov
rcrl
and
std
add
xchg
mov
jno
imul
mov
std
dec
inc
cmpsl
dec
stc
mov
imul
adc
xor
inc
jle
loopne
call
ljmp
xchg
inc
dec
cld
or
fs
mov
mov
mov
push
mov
insb
xchg
and
inc
and
sbb
push
sbbb
insb
sti
daa
dec
or
ret
or
loopne
jb
mov
pusha
or
pop
and
fnsave
lods
enter
mov
ljmp
movsl
test
daa
pushf
out
loope
data16
cs
xchg
dec
push
imul
cmp
sub
mov
movsb
fbstp
mov
jl
or
dec
mov
pop
mov
loopne
cmp
or
xor
imul
loop
pop
push
sahf
dec
push
cmpl
imul
cmp
scas
adc
or
jno
sbb
std
mov
ljmp
xchg
lods
mov
sbb
ret
es
jmp
out
cmp
bound
dec
aaa
ja
aas
rcrb
in
sti
imul
fcmovb
jg
sub
movsb
jecxz
pop
xchg
fwait
xor
xchg
dec
bound
dec
fnstsw
xchg
push
in
mov
repz
loop
cmpsl
inc
push
loope
jns
popa
xor
aam
mov
pop
xlat
lret
pop
gs
mov
lret
mov
in
test
sub
adc
push
fmulp
sub
leave
test
xor
rol
movsl
push
inc
lock
push
sub
outsl
pop
int
sub
pop
ss
leave
clc
mov
xchg
xor
lods
add
sahf
add
sbb
cmp
loopne
sbb
or
sub
jne
xlat
cli
repnz
shll
lods
xchg
mov
in
ja
cmp
sbb
mov
or
in
xchg
inc
sub
xor
into
in
xlat
push
addr16
std
push
je
cmp
jo
add
sub
xchg
mov
pushf
out
push
cmp
lea
fwait
movsb
and
not
push
icebp
pop
pop
cmpsb
std
add
and
or
xchg
cmp
aad
lahf
pop
jecxz
ret
scas
cmpl
sbb
add
inc
or
stc
cs
cli
inc
jns
in
pop
mov
mov
stc
int
inc
xchg
cmc
sti
pushf
pop
adc
mov
mov
imul
jl
mov
adc
and
push
div
adc
adc
mov
xchg
lahf
fcmovnbe
popf
xchg
cld
add
fidivrl
mov
add
or
out
imul
fdivr
ss
mov
mov
inc
ret
mov
ss
xor
andl
fwait
scas
lret
mov
fldenv
leave
push
in
mov
in
mov
cmp
lahf
push
test
repz
jl
pop
in
or
cmc
sub
xor
jno
scas
push
dec
fstl
std
sahf
push
xor
inc
les
or
inc
inc
lcall
ljmp
icebp
out
arpl
aaa
jge
or
in
push
lret
cmp
insl
jae
xorl
shll
repz
fwait
xchg
rcr
sub
out
in
inc
jecxz
dec
hlt
int
popf
sbb
xlat
push
aam
sub
ja
adc
test
test
push
inc
les
jbe
int
fwait
xor
xchg
push
lods
iret
jne
not
cmpsl
shll
mov
out
push
mov
mov
sar
jno
jmp
mov
mov
idivb
mov
sbb
dec
mov
jp
or
push
mov
ret
pop
repz
mov
push
push
push
cmp
in
out
mov
mov
icebp
jp
movsb
aad
push
shrl
dec
lahf
sbb
dec
in
xchg
inc
jnp
sub
addr16
pop
out
sub
andb
push
in
imul
loop
xchg
dec
inc
subb
mov
sub
int3
mov
or
cmp
xchg
xchg
pop
lock
fbstp
adc
cmp
fs
repz
aas
sbb
xor
or
outsb
xchg
jle
sar
popf
imul
ret
aas
fstp
sbb
sub
inc
fs
sbbl
jl
aad
xchg
pop
cmpsb
or
xchg
mov
or
xor
ja
lods
inc
lret
das
and
int3
inc
fisttpll
mov
bound
jle
mov
jne
je
pop
lea
mov
fsubrl
stos
push
lds
push
int3
xor
mov
push
adc
xchg
lret
in
lret
lcall
ficompl
add
jne
aas
adc
pop
push
sbb
xchg
and
ljmp
sbb
xchg
enter
add
xchg
ss
mov
leave
pop
mov
call
lds
mov
cltd
cmp
adc
jmp
imul
daa
mov
adc
outsb
sbb
sarl
xor
xchg
cmp
xor
push
les
lret
negb
test
mov
shll
sahf
dec
xor
in
movsb
mov
cmp
int3
les
mov
pop
dec
pop
les
sbb
sub
frstor
pop
in
jl
popf
cmpsb
sbb
sub
mov
pop
js
mov
cmp
cmpsb
pop
sub
scas
sub
push
pusha
push
insl
jb
mov
dec
inc
sub
mov
or
xor
push
test
mov
xchg
fidivrs
js
adcl
jne
dec
mov
aad
sub
fcoml
imul
test
xlat
adc
add
cmp
xchg
inc
cmpsb
xor
mov
cld
jae
and
out
cmp
mov
and
jge
xchg
pop
incb
out
sub
dec
lea
xchg
int
push
out
ret
jns
in
jp
pop
sub
jg
in
and
mov
cmp
test
arpl
pusha
stos
div
mov
inc
or
or
inc
stos
mov
je
xlat
js
or
loop
and
scas
out
cmp
shll
cli
cmp
mov
mov
mov
nop
mov
pop
sbb
out
dec
cltd
imul
adc
lcall
mov
or
not
mov
or
testb
xchg
movsl
adc
insb
inc
andl
pcmpeqd
insb
test
jo
and
mov
cmpsl
or
les
xchg
adc
data16
push
fisubs
aas
jge
ret
mov
adc
sub
sbb
mov
lock
es
insl
iret
addr16
cli
ret
xchg
pop
mov
rcrl
push
scas
push
test
inc
mov
repz
lds
testl
fcmovnbe
xchg
cmp
cmc
inc
and
test
fwait
movsb
sbb
or
daa
inc
push
xor
enter
or
dec
cmpsl
int3
and
and
pop
sub
push
xor
push
cmpsl
push
sub
into
or
adc
in
jp
xchg
cltd
jb
out
sahf
call
jo
ret
pop
sub
dec
faddl
aas
adc
push
xor
pop
pop
in
cmp
in
cli
dec
aas
jp
mov
lds
ret
mov
sbb
call
loop
jl
int3
icebp
shlb
cmpsb
inc
pop
add
movsl
jns
lods
sbb
fisubs
fs
das
dec
es
or
xchg
mov
mov
mov
repnz
rorl
pusha
or
lcall
mov
and
sahf
add
push
inc
lret
fisubl
cmpsl
out
fucompp
jmp
movsb
and
clc
cmp
addl
sahf
jle
mov
les
pop
dec
inc
sub
add
loop
cmc
fidivl
lret
pop
rolb
xor
mov
add
ja
loope
lret
pop
lds
js
hlt
push
je
jno
jg
or
call
scas
pop
mov
xor
int
jmp
adc
into
fsts
adc
sbb
test
jae
in
sti
mov
push
or
iret
jno
test
lcall
mov
ja
or
xor
lret
shrb
push
xchg
int
loop
jb
imul
hlt
cmp
nop
add
orl
xchg
mov
imul
push
divl
pop
jle
cmp
leave
mov
in
and
aam
je
cld
xchg
inc
scas
adc
pushf
sti
dec
daa
loop
pop
insl
aaa
popf
lcall
in
mov
subl
jmp
sub
nop
mov
mov
mov
sarb
popf
test
pop
test
js
mov
xchg
cmp
cwtl
andl
and
adc
inc
popa
icebp
sbbl
inc
daa
mov
add
stos
dec
adc
outsl
push
cli
cmp
cmp
and
xchg
dec
arpl
xchg
mov
bound
test
shll
test
cmp
faddl
ljmp
jo
cmp
pop
ds
outsb
push
movsb
imul
jg
test
stc
mov
outsl
push
cmp
push
or
aaa
mov
xchg
in
or
loop
inc
bound
pop
pop
out
int3
and
jp
rol
test
test
fiaddl
pushf
adc
jmp
fbstp
and
aaa
mov
into
xchg
es
push
sbb
cmp
rorb
in
lahf
cmc
lods
and
cmc
lahf
adc
stc
jge
dec
outsl
or
js
ret
push
mov
in
inc
xchg
mov
xchg
imul
pop
dec
je
lea
mov
into
inc
and
push
fs
fdivp
push
mov
pop
inc
insb
sbb
add
ss
xorl
mov
cs
cmp
xchg
sbb
dec
mov
repz
sbb
xor
sbb
mov
das
jl
jo
push
dec
sub
ret
fs
push
inc
sub
xor
jmp
mov
enter
sub
and
lret
xchg
call
imul
ficoms
xchg
xlat
mov
scas
mov
je
adc
lahf
bound
mov
loop
cld
sub
push
xchg
ja
cmpl
xor
lret
lods
sbb
pop
lahf
into
jnp
cwtl
push
push
mov
mov
mov
push
jo
xchg
sub
setnp
sbb
fmull
pop
daa
rorb
sub
mov
jmp
mov
dec
pop
cs
fcoml
and
nop
icebp
xor
push
fs
mov
jg
lcall
mov
ds
cli
mov
ret
daa
scas
orl
lahf
in
add
mov
mov
sub
and
xor
in
or
cli
pop
sbb
mov
lahf
das
ret
jle
sbb
mov
scas
stc
loope
test
cmp
cli
pop
out
pop
sarb
enter
jecxz
stos
leave
inc
and
cwtl
in
fisubrs
cmp
cltd
repnz
inc
pop
push
pop
movsl
ljmp
dec
mov
dec
add
add
pusha
lret
pusha
xor
or
xchg
int3
mov
push
mov
hlt
les
daa
icebp
ja
fadds
orl
sub
imul
testb
cmp
adc
jp
loopne
fwait
addr16
inc
fcoms
mov
test
orb
int3
nop
loope
aam
mov
insb
mov
xchg
mov
mov
pop
ljmp
cmp
es
push
shr
pop
call
int
dec
insl
stc
mov
aad
insb
dec
and
jno
nop
add
lahf
add
xor
cmpl
xchg
test
lods
mov
jl
cmp
fs
mov
sbb
int3
pop
inc
popa
repz
les
fiadds
fwait
cmc
jbe
mov
aam
shl
in
je
insl
adcb
lea
sbb
int
add
jne
iret
fnstsw
pop
mov
mov
gs
outsb
mov
cli
sbbl
aam
ret
callw
jecxz
imul
xchg
fsub
or
rcrl
ss
push
cmp
pop
out
jb
les
jle
xchg
adc
mov
xchg
mov
enter
push
adc
fisttpl
mov
pop
inc
xchg
test
inc
jmp
fwait
mov
lret
mov
adc
or
xlat
dec
ret
xor
ret
inc
sbb
adc
movsl
mov
insl
lahf
ljmp
dec
lahf
push
ds
push
stos
xchg
dec
xor
mov
push
shrl
stos
add
add
hlt
jno
push
push
jmp
jle
ret
xchg
add
inc
hlt
xchg
xchg
mov
dec
clc
mov
adc
push
sarl
ljmp
mov
stc
push
or
xor
xor
outsl
xor
jbe
cmp
mov
int3
xor
lods
adc
mov
mov
add
xor
cmp
fistpll
ljmp
stos
jno
pop
sbb
rcll
cmpb
in
or
dec
pop
or
xchg
pop
repz
ds
aam
fs
fbstp
push
mov
in
fsub
dec
iret
xor
aaa
cmp
xor
sbb
pop
fsts
fwait
cmpsb
xor
xor
loope
aad
out
outsb
and
outsb
push
jns
and
push
out
dec
mov
fwait
sub
popa
cmp
outsl
sub
rcl
and
popf
push
fisubl
sbb
lcall
add
inc
fwait
adc
xchg
ja
jne
sbb
scas
shll
sub
mov
adc
inc
mov
jp
test
xchg
mov
test
int3
add
lods
mov
mov
mov
mov
pop
push
fmul
pop
dec
mov
mov
outsb
adc
add
movsb
dec
mov
ss
mov
daa
in
or
sub
mov
xorl
cs
lock
loope
or
xor
add
mov
mov
int3
fstpl
and
sub
subb
shr
jle
mov
mov
adc
sub
sbb
xor
pop
fwait
ds
mov
aaa
imul
add
push
js
sbb
out
inc
push
and
cmpsb
sarb
je
push
xor
rolb
xor
lock
loopne
mov
pop
dec
outsl
mov
movsl
js
ror
imul
cs
bnd
testb
sahf
xchg
imul
cwtl
js
fmull
or
sbb
xchg
adc
dec
inc
jo
into
fsin
or
lahf
cmp
xor
clc
shrl
xchg
xor
test
pop
repz
sbb
and
jle
cs
mov
iret
test
jae
push
test
jo
push
movsb
cmc
pop
aas
scas
icebp
cmc
lahf
push
popa
nop
lcall
mov
pop
lcall
xor
in
shlb
add
mov
xchg
fnstenv
js
jecxz
dec
inc
test
pop
xor
lcall
or
xchg
jne
mov
mov
in
lods
leave
xchg
or
andb
mov
pop
jmp
ds
shl
xor
inc
shrb
or
out
xchg
adc
sbb
push
das
inc
jl
mov
push
or
popf
xor
jb
and
dec
pop
insb
jmp
jl
jle
jnp
sbb
dec
fwait
shlb
imul
and
push
or
sar
loop
jb
or
mov
mov
cmp
cmc
leave
int
xor
ds
test
test
filds
nop
int3
mov
imul
clc
icebp
xchg
popa
test
push
shr
add
inc
jnp
add
mov
daa
pop
mov
shrb
fldt
shrb
nop
lock
popa
das
push
mov
push
fdivl
lods
dec
jg
xlat
inc
das
jns
stc
push
out
jg
dec
and
lock
data16
add
jg
out
and
xchg
dec
ss
loop
mov
call
dec
mov
or
jb
repnz
stc
outsb
sub
ffree
nop
roll
sub
mov
frstor
movsl
data16
xchg
sbb
int3
add
cmpsb
and
jnp
xor
sbb
arpl
fwait
sbb
fisubl
push
out
mov
sbb
jg
push
sub
or
xor
xor
int
aad
inc
movsb
pop
and
andb
bound
test
and
loopne
into
out
sub
pushf
dec
xchg
faddl
mov
mov
sub
leave
jg
call
inc
and
std
mov
xor
fdivl
push
andb
sub
dec
in
mov
rclb
push
arpl
sahf
or
fisttpll
push
mov
pusha
pop
fisttps
stos
xor
fwait
inc
push
lods
jae
imul
pusha
insb
jne
outsb
jbe
outsl
jmp
xchg
xor
sub
icebp
lods
pop
inc
lret
roll
hlt
lcall
das
jp
mov
and
movb
cs
pop
addr16
imul
lea
adc
xchg
inc
jo,pt
ljmp
pop
repz
cmp
adc
ds
out
add
mov
push
sub
in
lock
addr16
jb
sbb
xchg
pop
adc
mov
add
bound
and
jne
xor
jb
sub
pop
test
jg
and
jecxz
cmc
lcall
sbb
test
inc
insl
lahf
sbb
or
sbb
inc
sub
mov
jmp
or
mov
or
sub
mov
fisttpll
jge
divb
or
iret
adc
mov
aas
sub
cmp
pop
jecxz
mov
mov
shlb
loop
push
sar
mov
dec
aas
add
lea
stos
pop
test
dec
sub
inc
inc
jae
jb
movsl
push
pop
mov
ss
sbb
sbb
dec
mov
xor
loope
fsubs
mov
sbb
pop
add
jns
cmp
mov
mov
sbb
mov
mov
fcomi
cmpsb
dec
nop
insl
popl
nop
insb
arpl
inc
mov
sub
add
jl
mov
test
cmp
xor
xor
pop
nop
jge
test
divl
cltd
jmp
ja
nop
xlat
xor
push
movsl
stos
xor
dec
pop
aad
cli
mov
cwtl
jae
out
add
ret
or
push
or
push
movsb
add
les
out
adc
insb
repnz
xchg
mov
xchg
sarb
repnz
or
pop
and
jne
dec
popf
jmp
movzbl
jl
ficomps
xchg
add
pop
mov
and
outsl
into
shrl
shl
push
push
aam
pop
adc
lods
mov
movsb
repnz
or
and
scas
insl
push
lods
in
xorb
loop
and
out
xchg
or
icebp
jnp
out
out
dec
cmp
xor
dec
in
dec
or
adc
jp
push
dec
aaa
out
ljmp
mov
sub
mov
gs
add
sub
fsubrl
fcomps
addl
out
adc
mov
imul
jg
movb
cmp
std
lock
cmp
sub
mov
int3
sub
mov
out
bndldx
cmpsb
out
test
dec
adc
pop
in
fisttpl
mov
repz
stos
sbb
mov
add
mov
pop
cltd
test
push
mov
dec
jl
push
xorl
cmc
mov
pop
adc
insb
dec
popf
ss
sub
rolb
cmpsb
push
out
jnp
ljmp
shlb
idivb
into
imull
jg
ficompl
push
mov
arpl
jnp
loope
mov
icebp
mov
stos
fiaddl
xchg
mov
gs
imul
inc
fcomps
lock
mov
icebp
mov
sub
and
sbb
stos
fsubs
idivl
ss
daa
or
or
jae
cwtl
jno
leave
jbe
xor
cmp
mov
pop
hlt
inc
add
js
fwait
sti
mov
jae
stos
das
les
mov
sbb
jbe
mov
mov
imul
ret
out
ret
into
outsl
pop
jo
iret
or
addr16
lea
fucom
add
push
insb
rcrl
mov
mov
popf
js
or
cmpsl
mov
insb
sbb
repnz
outsl
mov
cmpsl
pop
dec
pop
hlt
shrb
push
pop
shrb
dec
pop
pop
push
test
cld
and
test
mov
out
enter
mov
xchg
frstor
cmp
fidivs
outsb
xor
mov
xchg
pop
pop
xlat
movb
divl
mov
jmp
xor
mov
xor
push
mov
mov
add
out
andb
mov
movsl
jae
jg
mov
xlat
mov
adc
pusha
sarl
inc
xchg
xlat
out
bnd
adc
loope
pop
pop
xchg
stos
cmp
adc
sub
aam
mov
cmp
push
cmc
xor
pushf
fcom
dec
push
ja
in
out
dec
mov
stc
push
cmp
inc
push
dec
mov
pop
push
loopne
dec
cmpsb
sub
pop
fisttpll
sub
mov
xlat
mov
je
adc
lret
or
shll
pop
xchg
mov
mov
mov
and
pop
add
das
pop
movsb
les
jge
les
mov
roll
dec
insl
cmp
cmp
mov
insb
jnp
pop
mov
in
xchg
or
popa
repnz
jmp
push
insl
cmp
xchg
sbb
and
sar
frstor
sbb
pop
xchg
ficoml
lods
mov
xchg
push
mov
sbb
scas
pop
pop
hlt
hlt
js
xchg
insl
in
cmc
or
push
pop
pop
xor
sbb
mov
sbb
mov
and
cli
sbb
or
ds
dec
push
fcmovne
mov
push
das
sarb
lds
sbb
push
mov
push
or
ret
mov
add
cmp
adc
jmp
push
jge
inc
mov
leave
movsl
dec
out
sahf
dec
insb
loope
lods
sbbl
mov
rcrl
call
pop
xlat
scas
leave
dec
js
push
adc
outsb
xchg
and
add
outsb
xor
mov
in
adc
inc
jp
jp
fdivl
loopne
jp
jl
lock
push
jo
sub
fcomps
fstl
hlt
mov
pop
push
fimull
lret
call
push
test
nop
aad
add
pushf
adc
jo
gs
xor
out
orl
mov
xchg
sti
adc
sub
sbb
cmc
shrb
inc
pop
inc
push
jae
jae
mov
or
in
test
xchg
hlt
iret
adc
gs
arpl
out
cld
aaa
shlb
jns
add
cmp
adc
je
mov
stos
dec
jbe
ret
mov
push
vmovlpd
xor
jb
push
imul
aam
cmc
mov
outsb
outsl
pop
xor
pushf
and
test
jbe
adc
xchg
dec
mov
sbb
adc
sub
push
lods
push
push
sub
xchg
ss
push
adc
and
mov
xchg
and
jnp
xchg
cltd
mov
das
mov
pop
add
mov
xchg
fdivrl
fstl
inc
aaa
xchg
dec
xor
mov
adc
xorl
addb
insb
fs
inc
push
mov
test
movsl
sub
adc
mov
insl
cmp
or
arpl
lret
loope
mov
mov
or
add
dec
inc
jnp
out
scas
mov
insl
loop
in
mov
subl
fwait
cmp
mov
inc
std
mov
pop
in
or
lock
lods
cmp
push
xchg
and
add
test
rorb
rcr
mov
jne
lret
mull
pop
in
xlat
mov
cltd
push
push
mov
mov
inc
sub
pop
cmp
push
hlt
dec
inc
jge
push
js
pop
adc
hlt
and
fcoms
cli
and
in
jmp
enter
int3
add
popa
mov
je
hlt
mov
insl
loope
imul
mov
sub
xchg
mov
mov
loop
icebp
mov
push
rclb
sub
inc
out
loop
cli
lds
je
dec
inc
stos
popa
aad
jl
push
adc
leave
scas
mov
inc
push
shll
jecxz
loop
pop
xchg
and
and
out
test
fadd
dec
out
sub
lret
rol
push
lahf
sub
and
xchg
imul
ja
orb
fnsave
jns
push
pop
push
add
mov
sub
cli
dec
sub
pop
sub
jno
dec
sub
sarl
lret
cmp
or
loopne
mov
xchg
mov
sub
imul
test
movsb
jns
das
dec
imul
dec
push
jbe
xor
aas
in
dec
loopne
in
jg
mov
cmp
lret
add
enter
stos
test
push
loope
insb
or
or
mov
out
es
add
pushf
dec
bound
dec
push
cmpsb
jae
dec
test
add
jb
inc
popl
sbb
rcll
add
lret
aam
iret
add
repz
xchg
test
dec
mov
in
int3
outsb
adc
das
fs
pop
add
daa
imul
cli
and
jl
add
lcall
psubusb
rcrl
repz
pop
lahf
mov
sti
cli
out
push
adc
cmp
cmp
cmpl
frstor
jnp
xor
cmc
shl
mov
adc
jb
or
daa
jns
sahf
ret
std
cmpsl
pusha
test
and
out
in
sub
rcrb
mov
sbb
out
test
stos
es
add
dec
out
mov
divl
out
decb
push
inc
inc
and
arpl
jns
imul
inc
ret
rorl
stos
loope
inc
mov
andb
mov
lret
sub
lcall
pop
cli
loop
mov
ja
dec
cmp
inc
push
imul
add
cmpsb
stc
push
mov
inc
andb
mov
and
xor
mov
or
jno
clc
inc
mov
test
and
stos
jns
push
and
adc
jno
rcrb
gs
pop
cmpsl
cmp
xor
fsubs
outsl
sahf
cmpsb
xchg
iret
movsb
or
push
mov
inc
cmpsb
mov
ret
cmp
dec
fsts
incl
xor
push
bnd
cmpsl
fsubrl
mov
adc
mov
sub
jl
mov
pop
es
out
sbb
cli
lret
imull
pop
mov
or
lret
jge
dec
cmp
pop
and
jecxz
popa
jle
pop
inc
cmp
sub
jle
xor
inc
les
mov
imul
mov
pop
mov
sub
mov
mov
dec
cmp
add
rorl
fbld
mov
andb
jle
test
push
xchg
inc
int
xlat
cli
mov
pop
mov
inc
mov
cmp
jns
mov
xchg
je
std
int3
xchg
cs
test
inc
aam
add
dec
xrelease
jg
fs
inc
cmp
or
loop
push
addl
xor
in
jmp
push
fdivrl
daa
loope
add
add
mov
fiadds
push
das
sbb
xchg
cmp
lret
lods
pop
mov
popa
adc
cmp
rorl
std
xor
dec
or
xchg
subl
cmp
out
shrl
enter
pop
inc
and
aam
add
loopne
mov
sbbb
cwtl
iret
mov
jae
mov
bound
dec
mov
int3
pop
sub
inc
ja
jnp
test
inc
stos
nop
or
aam
sarl
cli
dec
adcl
mov
cmp
inc
cmpsl
std
int3
mov
rcrl
insl
jle
test
in
dec
mov
xor
das
push
loopne
adc
int
test
and
cmp
cld
mov
dec
outsb
push
jmp
dec
jns
andb
jp
dec
or
mov
sbb
push
je
fmull
mov
sbb
cmpsl
mov
adc
sahf
adc
mov
mov
add
leave
ss
jp
xor
push
enter
mov
xchg
popf
pop
pop
sbb
hlt
push
mov
aas
ror
mov
and
cmp
xorb
pop
loop
into
lea
icebp
insb
sbbl
mov
cld
xorb
xor
inc
and
push
pushf
cmp
sub
jg
jg
fildll
aaa
adc
mov
mov
add
addb
mov
cli
les
ret
push
ljmp
pop
mov
mov
push
rcrb
inc
fisubrl
adc
sub
jb
or
mov
lock
ja
shlb
push
jg
mov
push
lret
ret
in
scas
mov
pop
jmp
adc
jl,pn
testb
inc
lock
cmpsb
in
les
mov
out
sahf
push
xchg
sbb
mov
mov
clc
lcall
inc
push
jle
sbb
xor
sub
leave
push
aas
lcall
mov
or
test
fsts
in
jne
mov
repnz
je,pt
mov
mov
cltd
add
int
shlb
push
hlt
dec
pop
xchg
in
mov
int
and
cmp
dec
push
jns
adcb
push
dec
shrb
lea
jbe
lahf
cmp
mulb
out
outsb
cmp
push
std
decl
jle
movsl
mov
in
in
incb
shlb
cltd
push
jle
dec
ds
adc
frstor
xor
aam
pusha
pushl
xor
sub
adc
mov
movb
adc
jecxz
test
leave
lret
dec
pusha
sbb
call
cld
test
xor
sub
mov
pop
jno
nop
sbb
std
call
xlat
scas
mov
xchg
mov
out
gs
jae
pusha
push
into
test
das
push
and
inc
xchg
xlat
pop
movsb
pop
inc
notl
pop
rol
inc
aam
adc
aad
popf
int3
movsl
mov
xchg
inc
insb
mov
mov
sub
jo
icebp
pop
in
xor
ret
jmp
push
clc
in
sub
cmp
xchg
cltd
sahf
mov
stc
jnp
push
outsl
lcall
mov
push
aaa
lret
add
mov
jecxz
lcall
mov
sub
ss
dec
cmpsb
cmovnp
clc
mov
inc
aad
mov
jg
cmc
xchg
popf
ret
pop
insb
cmp
in
enter
push
mov
inc
xchg
adc
aad
jmp
inc
fldenv
and
mov
push
or
aaa
mov
mov
inc
push
push
mov
sbb
fnsave
mov
cmp
pop
mov
push
jbe
fsubrl
mov
dec
inc
hlt
aad
call
fs
in
addl
push
sub
push
mov
gs
outsl
or
lds
push
jne
mov
cmp
nop
repz
mov
or
cs
xor
inc
adc
xchg
inc
in
inc
sbb
sub
jbe
test
repnz
push
add
repz
mov
ret
xchg
pop
dec
je
push
xchg
jle
pop
out
stos
push
mov
jns
sub
mov
sub
xor
jno
ret
dec
xlat
or
notb
add
add
add
loope
cwtd
push
setge
adc
clc
mov
adc
inc
dec
jle
jmp
or
push
outsl
mov
xor
and
outsl
push
inc
call
mov
mov
in
adc
les
pop
inc
lcall
push
aam
pop
stc
sub
mov
pushf
sahf
mov
ljmp
adc
clc
loope
scas
jns
pop
cmp
clc
int
insb
sbb
aad
adc
pop
push
aaa
mov
pop
adc
or
push
mov
sub
leave
lds
popl
out
outsb
mov
lods
loop
insb
or
or
insl
dec
out
bound
mov
or
icebp
mov
lret
repz
xchg
push
arpl
xchg
xchg
jp
cmp
paddd
mov
stos
cmp
adc
jg
inc
push
mov
jnp
test
pop
xor
das
sbb
mov
mov
subl
inc
test
jp
sbb
roll
mov
inc
jne
dec
cld
jbe
std
jmp
cmp
popl
push
adc
repnz
int
ljmp
shll
incl
or
push
fidivrl
ds
and
mov
add
cmp
lret
add
mov
and
add
lds
push
gs
xchg
push
cmp
cmp
sbbb
adc
and
inc
add
pusha
lds
loopne
sbb
sbb
dec
add
dec
dec
and
nop
sub
out
repz
out
cmpsb
out
xchg
jge
adc
dec
rorb
popf
cld
pop
cmpl
gs
add
xor
dec
mov
xorl
hlt
cmc
push
lods
sub
xor
fst
rorl
insb
jle
movsl
out
stos
orl
sbb
mov
lods
repnz
sbb
mov
xor
mov
inc
dec
push
lea
repnz
mov
pop
mov
cmp
pop
bound
jl
inc
add
mov
pop
inc
andl
push
shrl
imul
mov
or
popf
outsl
nop
pop
inc
dec
mov
cmpsl
aad
add
shlb
clc
test
loop
and
xor
ljmp
shl
pop
jp
sbb
orl
inc
sub
in
insl
xchg
push
xchg
push
sahf
cmp
add
xor
into
inc
push
push
xlat
mov
outsl
aad
jnp
ret
push
inc
fs
ficoms
inc
pop
pop
and
movsb
in
adc
xlat
in
add
rcll
mov
pop
je
xchg
into
les
mov
jbe
test
leave
mov
mov
pushf
in
jns
cld
xor
dec
push
xor
or
scas
mov
dec
es
pop
and
cwtl
insb
sbb
adc
hlt
jg
mov
adc
test
cmp
mov
stc
push
das
inc
sarb
bound
dec
mov
test
cmp
jmp
outsb
mov
dec
pop
loop
aad
mov
or
pop
xor
mov
xchg
aaa
mov
jns
out
jmp
movsb
in
aam
add
orl
int3
mov
mov
subb
ret
sub
push
or
into
aaa
jg
push
mov
inc
jg
das
adc
mov
nop
cmp
mov
sbb
fwait
push
popf
adc
or
inc
fdivrl
jl
mov
daa
add
fcompl
xchg
pop
ret
or
in
stos
cltd
out
inc
leave
xchg
cmc
imul
movsl
lea
repnz
xchg
cmpsl
sahf
rorb
sub
fiadds
or
cmp
xor
stos
lods
xor
inc
lds
andb
mov
movsl
mov
fsub
int3
sbb
lret
stos
add
das
popa
adc
insb
notb
lcall
in
jns
shrb
cltd
dec
mov
mulb
lcall
adc
rolb
sbb
adc
xor
dec
out
stos
out
sub
dec
test
adc
sub
into
mov
ljmp
sub
xchg
aad
rcll
imul
or
jmp
push
notb
inc
clc
jl
in
mov
mov
adc
mov
mov
es
pop
sub
loopne
pusha
cmp
ljmp
xor
lcall
push
jl
jecxz
popa
jmp
mov
pop
mov
push
outsb
loope
jnp
xlat
adcb
lds
mov
mov
jnp
scas
mov
loopne
jp
push
push
inc
in
cmp
shrl
in
mov
jno
dec
repz
ja
ds
pop
lds
or
pop
shll
sub
test
mov
or
nop
and
outsb
jp
cltd
jnp
fdivl
cmp
cwtl
mov
xchg
loope
nop
out
scas
xor
test
leave
dec
inc
jnp
pop
gs
or
in
loopne
pop
mov
leave
jb
sahf
shll
insl
jmp
cwtl
add
out
push
cmpsl
add
loopne
xor
sub
ss
inc
adc
xchg
int
or
mov
xchg
add
pop
jmp
cltd
out
push
lea
xchg
negb
mov
iret
adc
test
insb
lods
cmp
jle
sbb
mov
out
inc
sbb
adc
movsl
rolb
in
mov
ficoml
pop
sbb
mov
push
loopne
call
pop
repnz
mov
lods
lret
xchg
sete
mov
mov
movsb
and
or
sbb
mov
test
movl
sbbl
add
fimuls
fs
sbb
pushf
cmp
ljmp
std
jecxz
div
div
sub
push
lds
sahf
cmp
mov
mov
mov
faddl
andb
xchg
aas
stos
jle
pushf
in
xor
push
movsb
and
cmp
lahf
cmp
cmovae
jecxz
xchg
incl
test
sub
stos
mov
cmp
fwait
mov
out
ja
sub
mov
cmp
jb
outsb
mov
jmp
popf
sub
sub
lods
ret
aad
adc
mov
arpl
pop
or
scas
sbb
sti
cs
popf
lock
cmp
out
mov
jae
sub
mov
sahf
push
or
decl
fstpl
mov
into
pusha
popa
in
and
push
in
cs
cmova
jbe
daa
jecxz
and
mov
scas
xchg
pushf
mov
bound
leave
scas
adc
mov
into
scas
ljmp
jmp
mov
jb
iret
pushf
iret
out
enter
jb
std
lea
dec
out
jns
enter
pop
aam
js
push
leave
and
xchg
cli
sub
mov
test
loopne
mov
jmp
fs
iret
cmp
movsb
sti
sbb
aaa
movsb
fdivrs
xor
cmpb
ret
inc
cmp
mov
jnp
gs
popf
cmp
mov
inc
rcrl
sbb
cmp
add
sbb
xor
arpl
add
aam
lods
push
push
cmp
sub
mov
sti
int3
fldl
test
les
xchg
adc
xchg
add
aam
fs
sub
pop
sbb
cmpl
mov
cmc
pop
dec
div
inc
or
pop
jmp
daa
jmp
cmp
dec
stc
inc
loop
repz
loope
cld
fiadds
mov
mov
ljmp
sbb
jno
pop
rolb
pop
lds
jb
add
inc
mov
and
out
cmp
pop
push
lock
or
lea
jge
out
pop
std
shlb
dec
sbb
xchg
arpl
jle
fisttps
xor
mov
inc
loop
popa
mov
packsswb
adc
cmpb
pop
in
mov
push
js,pt
inc
cltd
sbb
push
lahf
cmp
inc
add
mov
mov
sbb
das
mov
jge
shrl
add
add
or
jne
jg
sub
pop
gs
jl
imul
adc
emms
push
add
sbb
jne
mov
push
push
sub
xchg
inc
sahf
call
mov
notb
add
add
sbb
inc
mov
cmp
jg
fucomi
xchg
sbb
shlb
add
fistpll
xor
xor
xchg
and
fidivl
outsl
call
test
fisttpl
mov
out
sbbb
arpl
fidivs
shr
out
ret
out
cltd
mov
pop
and
add
cmpsl
inc
inc
and
hlt
dec
mov
sbb
jae
xor
mov
imul
jp
push
mov
adc
icebp
cmp
loopne
scas
mov
test
cltd
mov
mov
add
popa
inc
dec
xor
in
lret
lds
and
dec
insl
imul
out
fwait
push
insb
movsb
jns
push
aas
pusha
or
hlt
movsl
test
mov
push
pushf
mov
mov
jnp
xor
jne
xchg
ret
int3
jmp
or
xchg
cmp
jl
fs
push
add
lock
mov
int
icebp
mov
or
mov
les
iret
imul
call
pop
add
xchg
out
cs
cmp
mov
inc
xor
out
cs
mov
mov
cmpb
or
push
dec
mov
pop
xchg
fisttpl
xor
sahf
xchg
fstps
and
pop
mov
pop
in
lahf
stos
inc
arpl
les
add
imul
ljmp
xlat
rclb
xchg
xchg
pop
clc
movsl
mov
fistl
out
inc
nop
pop
mov
loopne
mov
add
cli
xor
sbbl
repnz
or
push
dec
into
cwtl
shlb
fsubr
outsb
popa
sub
inc
jbe
jb
stos
or
popa
mov
icebp
sub
sub
pop
mov
cmp
stc
jnp
in
pop
dec
lea
push
mov
dec
les
sbb
test
adc
aam
outsl
cwtl
mov
je
repz
mov
dec
leave
pusha
or
das
cmp
insl
loope
pushl
inc
sbb
push
aad
imul
ret
ja
mull
sub
les
sti
dec
lret
cmp
push
xchg
ss
mov
loope
and
mov
ret
add
imul
repnz
out
je
mov
mov
mov
push
jae
mov
cltd
lds
imul
inc
mov
loopne
push
lahf
mov
movsl
ret
leave
jle
lret
ds
fldt
inc
xchg
add
mov
jecxz
pop
iret
dec
sub
jge,pt
dec
xor
test
rcrl
outsb
bound
lret
mov
push
mov
or
ljmp
sbb
into
mov
jb
sbb
or
mov
clc
mov
and
dec
pop
push
sbb
fdiv
les
loop
mov
test
jae
ljmp
push
sbb
sub
call
xor
iret
je
push
arpl
add
test
or
pop
out
push
in
sbb
mov
test
daa
decb
push
cmp
hlt
xor
and
es
int
rolb
movsb
fdivl
pusha
cld
ds
andl
cwtl
and
push
dec
or
loope
icebp
inc
push
mov
dec
mov
cmp
das
push
jb
or
cmp
icebp
fstl
add
incb
push
dec
mov
sarb
enter
mov
cwtl
cltd
mov
scas
or
dec
cmp
add
fisubs
loopne
mov
inc
fwait
shlb
idivl
sub
xchg
mov
push
roll
xchg
dec
sti
sub
bound
gs
sbb
push
es
mov
stos
loopne
es
dec
loop
xor
aam
jle
nop
mov
add
sbb
mov
dec
dec
inc
mov
clc
arpl
in
insb
ljmp
fwait
out
cs
les
xchg
ds
mov
dec
push
xor
sub
jge
test
xchg
hlt
jne
outsl
mov
leave
lods
push
int3
stc
xchg
lret
push
jmp
daa
inc
mov
dec
fsubr
mov
push
addl
mov
lods
inc
mov
xchg
sub
data16
mov
jmp
mov
sti
xchg
fcoml
sbb
je
dec
cmpsb
fbld
f2xm1
sub
dec
or
mov
add
outsl
out
mov
xchg
in
push
faddp
mov
push
xchg
and
cmp
dec
incb
xorl
push
push
jnp
test
push
mov
ja
shlb
mov
sbb
cmpsl
adc
cmp
mov
inc
xorl
push
stos
mov
pop
into
loopne
mov
in
repz
test
cmpsb
and
adc
cmp
mov
pop
xchg
pop
mov
shr
cmp
or
movsl
int3
out
adc
xchg
push
mov
stos
sub
lahf
xor
jmp
sub
push
imul
push
inc
xchg
aaa
xor
mov
mov
inc
mov
jmp
cmp
arpl
hlt
scas
popf
sub
push
add
sbb
mov
popf
cmpsl
ffreep
cmpsl
adc
jge
out
jo
sub
sbb
fisttps
sub
fildl
cmp
test
push
pop
jne
xchg
gs
inc
aas
xor
pushl
inc
lock
or
inc
aaa
sub
test
xlat
les
das
sub
add
push
dec
xchg
push
inc
ds
inc
xor
shl
mov
xor
std
lock
or
fbstp
cs
bound
push
out
add
push
aam
stc
or
aaa
mov
jmp
push
js
add
jns
adc
pop
je
imul
pushf
and
inc
lcall
out
sbb
sbb
and
push
mov
push
push
push
mov
lods
fcomp
lods
push
pop
mov
cmp
push
js
fadd
bound
xor
ret
cli
stos
cld
das
push
sub
pop
cmovno
lret
test
and
mov
mov
ret
out
cs
insl
lcall
push
mov
lahf
popa
mov
push
lcall
cmp
mov
mov
imul
mov
xlat
fsubr
adc
test
cmp
bound
inc
in
inc
mov
cmpl
fcmovbe
pop
cmc
adc
lcall
js
imul
jmp
xchg
adcl
stc
or
mov
adc
pushf
in
pop
mov
mov
xchg
iret
push
dec
xor
in
cmp
lods
testb
lret
imul
sbb
movl
out
outsb
cmp
arpl
mov
ljmp
sub
fldcw
mov
xchg
xor
aam
popf
mov
insb
in
xor
dec
sbb
outsl
add
fldcw
jo
add
mov
xor
push
outsl
jle
inc
insb
jno
int
lahf
out
sar
ss
push
mov
or
dec
mov
push
sbb
mov
stos
data16
das
dec
push
es
mov
addr16
push
add
rolb
dec
xor
aad
or
sti
sub
pop
loope
pop
lahf
aaa
cmc
das
mov
cs
je
pop
sbb
jecxz
cmp
push
aas
push
sub
mov
mov
or
mov
inc
je
scas
mov
push
and
and
ret
push
sbb
pop
sarl
fwait
jno
xchg
pop
adc
movsl
sub
mov
push
fldl
stos
das
aaa
mov
jnp
lret
test
lock
imul
mov
pop
data16
int3
lcall
jge
jnp
movsl
shl
sbbl
insb
sub
mov
push
cmpsl
enter
roll
add
mov
add
cld
dec
mov
movsb
or
cmp
xchg
jmp
sub
or
xor
outsb
gs
mov
xchg
xlat
or
shlb
mov
outsb
push
mov
sub
out
fisttpll
mov
ljmp
xchg
cmpsb
mov
outsl
or
push
push
cwtl
repz
aad
push
cmp
stos
test
iret
or
jp
xlat
bound
add
jmp
inc
sbb
mov
mov
ret
add
pop
sbb
jg
jae
xor
sbb
fwait
mov
cmp
popa
xor
push
pop
xchg
mov
and
adc
xchg
movsb
movsb
dec
adc
enter
or
cmpsb
ljmp
dec
sub
cmp
stc
pop
sub
ja
fistpl
or
fwait
idivl
sbb
in
sar
jns
cmp
inc
mov
test
jmp
cmp
into
adc
xchg
cmp
out
or
jmp
jmp
push
pop
xchg
cs
popa
adc
shlb
cmp
lock
ja
add
or
push
xchg
mov
js
or
aaa
cmp
sub
push
loope
mov
pop
pop
push
push
mov
das
jmp
jo
lret
cmp
leave
repnz
pop
shll
jb
add
cmp
stos
jns
pop
dec
in
cmp
sbb
sbb
pop
push
mov
or
sub
mov
rol
cmp
jae
outsb
into
inc
addr16
ret
jne
jnp,pt
sahf
scas
addl
adc
icebp
in
jmp
js
mov
fdivl
aad
or
fisubs
pop
mov
push
rorb
push
fisubrl
es
xchg
aam
enter
gs
scas
sahf
cld
lahf
mov
insl
push
jne
addr16
xor
pop
cli
xchg
sbb
test
cmp
mov
xor
mov
pop
pop
sti
or
mov
lods
cmpsl
stos
loope
add
insl
dec
or
cmpsl
push
int
cltd
mov
imul
cmp
fs
addr16
insl
ljmp
xor
lock
mov
andb
push
xchg
in
xor
or
imul
jo
orb
lock
call
sbb
pop
sarb
andb
or
xchg
mov
mov
les
out
xchg
push
out
test
sub
push
and
add
sub
cli
lods
inc
add
insl
cmc
leave
pop
mov
popa
in
out
jg
movsb
adc
cwtl
mov
repnz
mov
and
push
dec
cmpsb
xor
aam
arpl
enter
push
lds
adc
jo
mov
lahf
pop
pop
push
mov
or
test
mov
movsl
daa
dec
dec
divb
sahf
mov
aas
jo
jp
and
hlt
lods
jbe
push
fs
pushf
in
sbb
cmpsb
jp
xorl
push
sub
add
pop
out
sar
jnp
mov
mov
inc
push
jb
xchg
sahf
fstpl
lcall
inc
inc
ljmpw
jle
popa
jno
xorb
jbe
or
sub
adc
mov
lahf
xor
xchg
or
shlb
aas
push
outsb
jmp
xchg
sbb
orb
mov
pop
out
inc
pushf
mov
and
push
ret
mov
pop
scas
sub
fistpl
icebp
sub
test
cwtl
add
nop
cmpsl
int
add
sbb
test
test
xchg
and
cmp
popa
mov
cmp
out
pop
cmpsb
fwait
ss
sbb
inc
sub
pop
xor
mov
mov
aas
clc
inc
xchg
dec
cs
lds
or
mov
ljmp
mov
in
dec
lahf
jmp
mov
inc
mov
cli
mov
jne
inc
movd
inc
scas
mov
adc
cli
enter
and
mov
pop
xor
pop
xor
shrb
shrl
sarb
mov
push
out
filds
inc
ja
sub
movsl
mov
inc
das
mov
pop
mov
jg
mov
jp
test
cs
and
dec
fisubl
iret
dec
test
int
rorb
cmpsl
cmpl
push
enter
jae
insb
add
fsubrl
mov
add
cmp
pushf
loop
jl
hlt
adc
mov
imul
pusha
xchg
mov
inc
push
or
imul
test
mov
ficoml
adc
imul
mov
xchg
lds
loope
sbb
movb
xchg
sub
sub
adc
lcall
push
aas
mov
push
dec
js
lahf
cmc
jge
push
aaa
nop
push
in
or
daa
adc
movl
mov
bnd
pop
imul
inc
or
lahf
xchg
sub
out
ss
aaa
stc
cmpsb
leave
adc
aad
scas
mov
dec
fwait
data16
pushf
xchg
dec
outsl
or
cmp
mov
xchg
aas
pop
mov
sbb
andl
cmp
lock
orl
loop
sbb
mov
pop
add
dec
iret
pop
xchg
aad
mov
jp
in
stos
adc
lahf
dec
and
sbb
fstpl
es
jno
pop
adc
gs
and
xchg
nop
pop
icebp
loopne
or
cmp
sub
push
inc
mov
jno
mov
push
jecxz
mov
add
ja
outsl
sbb
jnp
pop
jp
mov
out
popa
test
popf
and
cltd
loopne
adc
in
xchg
xor
repz
jno
push
xchg
pop
loop
flds
mov
inc
mov
mov
cmp
int3
imul
xchg
clc
out
jmp
cmp
xchg
xor
addr16
mov
lods
push
fcmovnb
cmp
fdivrl
lock
sub
sahf
lds
mov
push
decl
gs
out
inc
add
inc
pop
rcl
pop
out
dec
jecxz
pop
inc
jge
jmp
lret
mov
fcompl
hlt
clc
fsubrp
fdivs
test
icebp
mov
xchg
fistl
mov
jnp
add
mov
mov
cmp
mov
and
pusha
adc
into
js
nop
pop
sbb
sub
repz
mov
or
stc
and
cli
jg
xchg
das
cwtl
mov
cmp
ljmp
add
bound
or
shrb
mulb
add
test
mov
mov
std
int3
push
lods
xchg
insb
mov
cmp
outsl
sarl
lcall
cmp
testl
mov
mov
mov
out
lods
stos
mov
daa
icebp
sbb
stos
bound
xchg
in
sar
dec
lahf
dec
pop
aaa
push
mov
push
addl
pop
mov
push
push
mov
das
fldenv
push
loop
inc
cmp
cmp
sub
cmpl
sub
stos
xchg
xchg
cmp
aas
jbe
xchg
pop
popa
scas
stos
mov
push
mov
add
jb
cmp
jb
or
popa
shl
loop
push
add
sbb
fwait
xchg
int3
push
sbb
jecxz
xchg
and
cmpsb
mov
pop
pop
adc
scas
and
mov
jle
jnp
xlat
mov
push
int
dec
popa
aaa
popf
cmp
sub
push
jmp
mov
mov
pop
pushf
cmp
rcrb
ret
sbb
or
cmpsb
push
mov
imul
adc
adc
sub
lret
imul
and
imul
mov
push
bound
adc
adc
das
mov
pushl
push
jae
xor
ficoml
adc
out
out
mov
fistpll
xchg
inc
lret
daa
or
cli
rorl
and
sbb
lds
pop
cmp
repnz
xchg
into
xlat
fistpll
out
add
es
das
das
loope
orb
xchg
sub
add
hlt
cmp
fistps
mov
inc
mov
lock
cmpsb
mov
jo
mov
push
mov
ret
movsb
jp
rclb
rcrl
xchg
repnz
cwtl
cmc
js
in
lea
clc
mov
out
or
inc
pop
aam
xor
fsubrs
sahf
push
cli
mov
lahf
movsl
outsb
xchg
out
sbb
ja
imul
loop
je
sub
in
xlat
push
ds
outsb
ljmp
das
out
jae
push
pop
mov
scas
repz
dec
xor
dec
int
xchg
test
pop
push
addr16
dec
pushf
incl
nop
add
stos
dec
pop
aas
rolb
mov
in
mov
stos
dec
orl
mov
jnp
mov
fimuls
add
sub
les
mov
mov
push
adc
or
adc
std
mov
ds
jbe
jae
movsb
inc
sub
sahf
call
sbb
push
adc
fwait
pop
divl
jle
xchg
adc
cmc
sub
mov
mov
cmp
fisubl
adc
leave
aam
xor
test
cmp
int
mov
sub
lahf
push
jecxz
cli
mov
test
push
rclb
xorl
dec
hlt
imul
call
jo
gs
les
lods
outsb
xchg
lcall
inc
inc
fisttpll
popf
stc
inc
pop
sbb
push
setnp
push
inc
aad
jno
stos
in
fdivs
pop
ds
cli
pop
out
mov
xchg
and
cmp
pop
inc
jl
cmp
mov
pop
cmpsl
add
xchg
mov
mov
pushf
xchg
inc
mov
stos
xlat
lock
xlat
lods
push
cmp
into
hlt
lret
mov
daa
sbb
sar
mov
adc
add
mov
cmp
rep
aaa
cmp
inc
outsb
aas
push
nop
cmp
push
add
int3
repz
xchg
xchg
mov
inc
popa
xlat
mov
add
mov
and
pavgb
sub
cmp
or
or
mov
notl
mov
fsubp
jg
dec
es
xor
orl
bound
call
repz
jo
aaa
das
neg
sarl
cmpsb
cmpsb
daa
sbb
sarl
lea
mov
xchg
nop
and
push
mov
xor
xchg
add
lcall
push
cmp
js
jg
je
movsl
sbb
sbb
es
add
sbbl
xchg
ret
push
arpl
callw
leave
or
into
mov
imul
xor
imul
xor
repz
cmpsb
pop
xchg
add
adc
daa
push
inc
fmull
add
das
lds
jne
mov
jno
adc
inc
xchg
mov
xchg
adc
ret
sub
aaa
add
jp
aas
loop
mov
stos
fnstcw
and
jne
inc
lahf
pop
mov
inc
mov
push
pusha
cli
lods
jo
mov
mov
jmp
movsl
add
inc
cmp
cmp
jmp
fstpt
mov
icebp
xor
cmc
xchg
xchg
movsb
xor
aam
push
subl
and
test
iret
cmp
xor
xor
outsb
cmp
pop
mov
dec
es
add
loope
int3
pushl
adc
inc
ret
ss
mov
shl
lret
sub
sub
adc
lods
jecxz
outsl
push
xlat
mov
test
rcl
out
decl
rsm
lock
mov
sbb
inc
mov
dec
xchg
mov
mov
pop
imul
pop
cmp
pop
mov
in
sbb
lods
mov
and
iret
or
test
popa
pop
sub
xor
imul
pop
loop
sbb
push
test
xor
pop
add
dec
mov
sbb
adc
pusha
fisttps
sti
mov
ret
ss
imul
aas
mov
in
and
or
or
cmp
push
sarb
fcoml
aas
sub
inc
mov
sbb
dec
popf
shrl
or
push
and
test
out
imulb
out
sub
mov
pop
cmc
jb
nop
out
and
iret
rclb
inc
nop
sbb
sbb
fisubrs
mov
xchg
xchg
adc
cmp
clc
outsl
fwait
cmpsl
insl
inc
nop
or
push
sbb
fs
imul
fists
mov
cmp
bound
stos
decl
rclb
pushf
aas
cmp
arpl
push
clc
jmp
out
inc
out
inc
xchg
imul
push
cmp
push
js
xchg
sub
sbb
or
imul
dec
adc
adc
xchg
fldcw
mov
mov
xorps
bound
outsl
push
adc
movsb
cmpsl
outsl
test
mov
dec
mov
loop
sbb
mov
jecxz
scas
pop
cmc
sub
pushf
xor
and
in
or
insl
movsb
int3
outsb
jnp
jmp
pop
pop
sub
add
in
pinsrw
mul
imul
clc
inc
pushf
inc
xor
loop
out
push
cmp
xor
cmp
pop
add
test
loop
out
mov
in
ja
xor
cld
ret
in
and
adc
popf
mov
ret
lds
mov
hlt
in
rolb
mov
cmp
sbb
jne
cmp
data16
repz
or
push
inc
inc
outsb
dec
pushf
stos
sbb
setbe
shll
stos
hlt
mov
roll
pop
shlb
bound
mov
scas
and
and
mov
jne
cmp
push
lds
aas
lock
test
subb
int3
lret
adc
in
ud1
xchg
adc
xor
cmc
jnp
mov
cltd
mov
rclb
in
add
push
ret
push
pushf
jo
mov
mov
ret
cmp
dec
cltd
mov
jnp
push
adc
dec
aas
cmpsl
xchg
ror
mov
sti
mov
jmp
adc
xor
sub
add
pop
fidivrs
cmp
imul
or
pop
and
insl
lcall
xor
mov
hlt
negl
dec
inc
xchg
movsb
fistl
hlt
xchg
scas
pop
aas
and
filds
insb
mov
in
insl
nop
movsl
xchg
insb
sbb
jle
push
cmp
and
mov
sarb
stos
lods
roll
cwtl
aad
sti
jnp
xchg
rcll
out
fstps
pop
call
shrb
inc
inc
xor
popf
dec
pop
faddl
xchg
test
cmp
add
xor
sbb
and
fsubrl
cltd
cmp
pop
subb
js
push
pop
jne
shlb
lea
fdivrs
fisttps
insl
adc
sub
push
in
out
dec
push
cmp
lcall
xchg
xchg
adc
jge
xchg
aas
fstl
xor
test
mov
ss
loope
popa
jmp
xchg
stc
pusha
xchg
and
pop
mov
jle
and
sbb
ror
push
jmp
cmp
ss
mov
jb
stos
cli
inc
push
aaa
jae
and
cmpsb
es
fsubrl
xor
mov
push
sbb
xchg
ja
mov
loop
sbb
inc
shll
lcall
ljmp
ret
iret
inc
adc
mov
fucomp
andb
arpl
pop
sub
jecxz
je
mov
or
movsb
jg
aam
bound
dec
js
rcrb
pop
jo
push
xlat
lods
cmc
jns
shr
dec
movsb
pop
shlb
sbb
mov
sti
das
and
pop
pop
push
frstor
cli
adc
adc
fdivl
loop
xlat
scas
cld
orl
push
cmpl
xor
cmp
and
pop
std
rcrb
test
or
inc
insb
dec
lea
xchg
fimull
add
test
adc
mov
sti
in
mov
sbb
out
mov
push
sub
mov
shrd
push
out
cmp
dec
or
in
lock
gs
mov
or
jb
cmpsl
and
lds
nop
add
repnz
inc
mov
bound
and
imul
out
pop
shrl
into
arpl
push
jmp
inc
jp
push
int3
rcrl
lahf
cmc
orl
fldcw
int
fwait
movl
or
pop
push
xchg
sbb
cmp
jecxz
fs
adc
xor
pop
loop
jo
jo
sub
pop
pop
push
or
mull
push
xchg
push
inc
add
push
cmp
xlat
daa
mov
pop
dec
inc
push
mov
mov
je
in
hlt
adc
mov
xor
push
pushw
or
dec
sbb
mov
out
pop
inc
jae
gs
xor
xchg
fistpll
lods
add
movb
sbb
mov
pop
mov
adcl
in
adc
out
imul
jbe
mov
sub
mov
add
out
ficoms
adc
sbb
imul
or
xchg
fstl
mov
sbb
cltd
gs
gs
ljmp
gs
dec
lahf
cwtl
testb
dec
aam
daa
test
mov
push
pop
pusha
iret
jmp
fcomps
adc
test
pop
xor
push
loop
movl
dec
mov
dec
adc
insb
clc
popa
jo
xor
lret
hlt
outsl
inc
pushf
adc
mov
or
loopne
or
cmp
sub
xor
outsb
xorl
add
lods
sub
xchg
iret
shll
jo
pusha
sbb
add
fldenv
aad
aad
push
out
or
ret
out
imul
xlat
push
lock
inc
dec
sarl
mov
sti
out
bound
jp
loopne
jae
lahf
popa
jns
or
sub
sahf
loope
sub
pop
add
in
shll
out
sbb
fistpl
leave
and
data16
add
fdivr
adcb
sbb
fwait
cli
jne
mov
fidivrs
idivb
sub
in
sub
or
divb
jb
pop
cmp
xor
testl
es
push
jge
int
fucom
leave
adc
mov
lds
shll
mov
imul
mov
adc
and
in
mov
ss
pop
cmpsb
insb
ficompl
xchg
rorl
and
jecxz
cmp
cmp
mov
push
pop
aad
fwait
or
mov
fildl
cmpsb
loope
in
and
jae
dec
fisubs
xor
pop
in
mov
lds
xchg
divb
rorb
sti
jge
loop
leave
add
dec
mov
nop
add
dec
mov
insl
fcmove
sub
cltd
fisubrl
pop
xlat
inc
decl
pop
mov
dec
shrl
mov
inc
xchg
push
lods
sar
dec
push
insl
outsb
aas
rcrl
dec
je
mov
je
inc
jae
xchg
mov
xchg
pop
repnz
lock
mov
in
div
mov
test
stos
cmpsl
icebp
mov
fxch
mov
lea
lret
sub
ret
and
stc
or
add
mov
pop
ja
cltd
pop
outsl
aaa
mov
fdivrl
inc
arpl
sbb
cmp
data16
stc
pop
leave
loop
pop
insl
xor
push
fs
mov
outsl
lret
rorb
fwait
lcall
out
mov
push
ret
adc
call
cmp
xlat
mov
data16
push
mov
ja
repz
cltd
pop
xchg
cmpb
mov
sub
frstor
in
out
dec
and
test
jmp
dec
add
nop
xchg
in
cmp
pusha
ljmp
sub
iret
mov
cs
imul
frstor
andl
sub
push
mov
mov
cmpsl
unpckhps
pop
mov
pop
insb
out
out
dec
outsl
push
das
loopne
clc
int
test
daa
xchg
cmp
shrl
rolb
cmp
cwtl
shrb
aam
mov
mov
jg
dec
adc
insb
fldt
dec
xlat
xor
sub
stc
fadd
ss
loope
pop
jne
scas
pop
std
test
icebp
inc
jb
leave
push
xchg
adcb
jae
mov
insb
xchg
sahf
adc
jae
pop
adc
aas
mov
pop
scas
cmp
sahf
pop
int
adcl
in
ljmp
push
push
push
ljmp
dec
les
repz
ljmp
je
sub
lret
adc
cld
outsl
xchg
mov
cs
xor
mov
mov
cmpsl
and
loope
push
mov
xchg
mov
xor
out
mov
mull
adc
pusha
mov
lods
xor
jge
cwtl
imul
pop
int
cmc
jnp
jl
frstpm(287
pop
out
hlt
fiaddl
test
jl
adc
dec
into
mov
sub
pop
mov
adc
jae
leave
push
push
jno
fldenv
or
push
add
outsl
mov
push
mov
test
mov
out
xchg
sub
and
fistps
stos
fisttpll
aas
jo
jae
scas
mov
data16
dec
sub
sub
sti
mov
push
fdivp
out
sarl
outsl
cmp
add
test
fwait
sub
aam
and
popa
mov
pop
cltd
mov
arpl
sub
add
add
push
mov
mov
test
xor
add
pop
xor
icebp
faddl
ret
adc
fs
iret
fwait
in
les
pop
aad
pop
inc
mov
stos
out
fwait
dec
icebp
cmpsb
cmp
fstpl
pop
cmp
ljmp
add
mov
dec
dec
push
adc
and
push
mov
gs
aam
or
push
lds
mov
out
loop
outsl
adc
les
fcompl
mov
fs
xchg
xor
lahf
fcoms
mov
inc
fwait
or
movsl
hlt
aaa
push
dec
enter
xor
xchg
std
push
out
adc
push
sub
mov
mov
xchg
movsl
sahf
mov
shrl
call
add
cmpxchg
cmp
sbb
inc
dec
sub
testl
xor
jo
mov
ret
mull
scas
loopne
dec
frstor
int3
loopne
push
aas
repz
sub
scas
in
mov
outsb
mov
pop
bound
lahf
sar
shrb
jecxz
push
cmp
std
adc
xchg
sub
mov
pushl
jb
lret
jmp
xor
push
or
mov
ljmp
sub
adc
inc
sbb
mov
pop
sub
add
scas
jg
out
out
ja
mov
pop
push
pop
mov
dec
loop
pop
jp
sub
ljmp
iret
mov
or
popa
fs
test
pop
add
repz
repz
popa
jae
icebp
dec
dec
push
sub
dec
mov
inc
push
sub
cli
xchg
inc
lcall
inc
ja
je
sub
dec
iret
jb
cwtl
arpl
imulb
and
push
ds
aas
jmp
leave
jecxz
inc
insl
call
cs
push
mov
inc
cmp
out
outsl
dec
xor
push
mov
in
mov
scas
and
mov
xchg
es
ret
pop
mov
add
test
sub
in
dec
cmp
pusha
sbb
add
arpl
lahf
in
mov
adc
push
push
mov
cmpl
int
jg
lahf
jns
mov
jge
or
mov
adc
adc
sub
in
cmp
test
jp
ror
jno
nop
xchg
dec
sarl
xor
cmpb
lods
mov
xchg
insb
dec
jmp
daa
pop
add
mov
pop
aad
movsl
in
fsubrs
cmp
xor
sub
jbe
scas
out
lods
js
sbb
popf
movsb
gs
stos
scas
adc
xlat
lods
pop
push
mov
push
fs
mov
xor
jo
jnp
loopne
and
negb
and
sbb
movsl
popa
pop
mov
scas
gs
cmpsb
mov
jbe
jne
dec
adc
pop
aaa
jo
jo
sbbb
and
sahf
or
lds
nop
lock
dec
mov
push
scas
fldt
pop
jae
insl
das
in
cmp
push
sbb
mov
jmp
xchg
dec
incl
aas
sbb
cmp
clc
inc
xor
mov
mov
sbbb
inc
cli
add
fisttpll
and
add
notl
das
and
xorb
loop
cmpsb
jns
testl
adc
in
out
pop
movsb
dec
sbb
pop
xor
outsb
ret
cmp
inc
addb
mov
xchg
xchg
int3
es
enter
es
adc
sub
adc
dec
test
pusha
mov
dec
xchg
jae
in
in
in
aaa
cwtl
dec
daa
pop
rcl
repnz
fsubp
pop
bound
mov
mov
es
sahf
push
sub
mov
and
fsubrs
lcall
mov
jg
cld
jbe
jne
je
push
dec
ja
xchg
jg
or
outsl
dec
xor
int3
clc
mov
cmpsl
push
out
or
sub
outsb
xlat
inc
push
orl
or
cs
xor
push
xlat
pop
fdivrs
insl
fmul
stos
loop
in
repnz
push
lahf
repz
jge
aam
push
inc
cmp
icebp
inc
dec
mov
lahf
jge
mov
mov
orl
inc
cli
cmpsl
stos
addb
push
test
jne
inc
int
mov
sti
xor
pop
imul
add
rclb
push
std
xchg
push
xor
mov
sub
cmp
lret
push
jnp
jo
jl
push
fwait
or
mov
push
ljmp
ficompl
jb
lods
out
sarl
adc
hlt
dec
mov
mov
jns
mov
and
adc
xchg
sbb
pushf
es
xchg
daa
shrl
les
jp
inc
fst
movsl
inc
mov
stos
rcr
lods
movsl
sub
pop
ljmp
jnp
jns
imul
ljmp
push
call
call
cs
push
cmpsl
xchg
sbb
pop
mov
push
aad
adc
ret
js
leave
sub
aaa
jecxz
mov
jle
outsb
cltd
enter
xchg
js
jno
aad
insb
in
std
outsb
stos
js
ficoms
sahf
gs
push
push
cmp
and
adc
push
jae
rep
inc
loopne
dec
int3
inc
ds
std
pushf
aaa
jge
jo
sub
out
adc
xor
sahf
iret
and
jecxz
sub
insb
loope
scas
repz
pushw
mov
mov
sub
sbb
addl
pop
test
int3
test
jge
push
cmp
mov
test
shlb
sbb
clc
mov
test
daa
mov
xchg
jne
js
and
mov
gs
loope
or
int
dec
cmp
pop
popf
leave
filds
jle
aam
lds
cld
mov
jle
jl
insb
dec
pushf
mov
out
outsb
pop
xchg
test
or
xor
movsb
dec
lret
cmp
ja
adc
nop
lret
and
popa
scas
mov
xchg
push
xchg
mov
jbe
ss
and
mull
clc
repnz
ret
fisubrs
pop
fbld
dec
les
repz
jae
jae
and
jge
jo
xchg
mov
test
cmp
daa
jb
mov
xchg
inc
lods
loopne
stos
cs
pushf
dec
jnp
test
orb
mov
add
mov
add
sbb
nop
cmpb
inc
fwait
es
xchg
add
jl
scas
mov
sub
sarb
cmp
mov
enter
mov
cmp
jae
repnz
fisttpl
mov
aas
pop
pop
xchg
mov
or
xchg
cmp
mov
cld
outsb
push
movsb
adc
dec
pop
dec
fisubl
ret
xchg
inc
mov
mov
cli
add
fstpl
fbld
imul
xchg
push
jne
cmp
sbb
cmc
imul
shlb
out
rorb
pop
pop
jo,pt
jecxz
or
add
mov
imul
leave
jp
jno
iret
xchg
inc
sbb
out
and
cli
pop
leave
push
dec
jp
jns
jmp
jbe
push
adc
jnp
and
ds
mov
fdivp
lahf
push
push
pop
xor
add
push
cltd
xchg
and
xor
xchg
iret
mov
stos
sarb
stc
aad
rclb
push
gs
jnp
sub
cmc
scas
cmpsb
mov
jmp
outsb
lahf
les
sub
cli
and
xchg
mov
lret
mov
mov
mov
stos
jb
shlb
es
repnz
mov
clc
mov
shrb
rol
pop
xchg
or
gs
clc
cli
sahf
add
in
xor
jp
mov
test
xor
push
add
push
lock
ret
lea
mov
push
int
sbb
cmp
call
in
xlat
ja
outsl
jg
inc
push
pop
xchg
test
add
sbb
cmc
rorl
cmp
or
inc
mov
cmp
in
mov
rcrb
pushf
jl
fxch
xor
inc
cmc
mov
xor
adc
dec
fcomp
pop
mov
mov
in
cs
mov
xor
push
cmc
or
sub
or
cmp
sbb
outsb
jnp
ret
orl
sbb
inc
fdivrs
inc
frstor
mov
mov
add
fmul
mov
dec
popf
ret
loop
stos
inc
data16
jge
jns
add
mov
and
push
movsb
add
repnz
push
orl
ljmp
xor
nop
shr
arpl
sub
xchg
mov
stos
fsubrs
lcall
repz
jp
lods
vpand
mov
inc
dec
movsl
push
scas
jle
mov
add
cwtl
mov
leave
inc
scas
lcall
ret
data16
insb
aad
mov
lock
xor
outsb
jne
add
neg
add
lcall
clc
lock
or
lea
xchg
inc
pop
sbb
mov
fiaddl
xchg
mov
fildll
sub
mov
dec
sarb
jbe
in
cmp
mov
fistps
aaa
push
dec
inc
mov
pop
xchg
mov
push
inc
movsb
and
add
shl
loop
xor
ja
shr
mov
in
mov
push
mov
mov
mov
test
pop
or
or
push
clc
jb
mov
xor
std
lods
dec
outsb
fisubs
dec
sbb
or
pusha
rorl
cwtl
jae
inc
das
dec
inc
or
lret
roll
js
push
cs
outsb
lds
mov
jecxz
or
clc
mov
dec
cmp
inc
push
outsl
dec
inc
add
rcrb
iret
pop
push
icebp
inc
lods
sbb
or
lods
xor
mov
cmp
stos
add
insl
or
fbstp
mov
popf
mov
pop
cld
mov
xor
jl
mov
arpl
or
inc
lds
shll
inc
rolb
imul
pop
xor
out
and
aam
iret
cmp
jp
fs
jae
js
divb
sbb
frstor
push
in
movsl
mov
outsb
aad
push
sbb
rcrl
and
test
push
fnstenv
adc
xor
rolb
jecxz
int3
mov
pop
scas
sarl
out
loope
mov
int3
xor
lock
and
push
dec
push
push
add
push
sbb
pop
clc
ret
lock
mov
pusha
inc
call
adc
xor
in
jb
xor
fs
dec
and
pop
stos
rclb
inc
jecxz
aas
icebp
add
adc
mov
pusha
push
scas
lods
adc
mov
stos
jmp
add
pop
orl
dec
insb
cld
dec
sbb
ljmp
mov
lcall
test
adc
les
clc
nop
fisubrl
jno
incl
dec
out
sub
mov
test
jno
mov
mov
ficomps
mov
push
and
add
or
sub
sarl
aas
and
cmc
aam
pop
rclb
dec
loopne
cld
sbbb
lods
and
or
pushf
out
adc
pushf
leave
js
fcomps
dec
mov
cmpb
jno
iret
loope
jne
mov
and
fistpl
icebp
and
jge
jae
cmc
jo
clc
add
add
adc
sub
stos
test
enter
jle
dec
push
cltd
adcb
imul
stc
add
push
imul
aad
or
xchg
test
repnz
mov
pop
fimuls
adc
mov
sar
push
mov
push
ret
mov
outsl
insl
mov
push
mov
std
in
mull
cld
xacquire
mov
lret
inc
rclb
repnz
inc
aaa
sbb
xchg
sbb
aam
stos
movl
ja
js
jae
cmpsl
and
dec
push
cmp
out
mov
mov
inc
xchg
cmc
xor
xchg
and
dec
test
mov
mov
adcl
mov
cltd
jo
or
test
add
sahf
push
in
xor
push
adc
repnz
push
lret
xchg
and
jecxz
xor
rorb
flds
mov
xchg
mov
jecxz
inc
lcall
or
pushf
shll
pop
pop
add
daa
mov
inc
es
rcll
sub
addb
scas
mov
test
in
or
adc
imul
lods
into
out
adc
ffreep
fisubs
rolb
shl
sti
hlt
mov
out
xchg
push
test
push
pop
lea
je
jle
popa
pop
mov
sti
das
fxch
aaa
adc
mov
fs
sti
pusha
mov
xor
lret
mov
sub
scas
pusha
or
lock
push
or
jg
pop
pop
xor
movsb
arpl
jmp
cltd
das
out
pushf
mov
dec
test
cmpsb
cli
loop
xchg
sti
mov
lea
lds
sbb
orl
ret
out
add
or
or
hlt
xorb
sbb
das
sbb
rorl
int3
jo
outsl
es
mov
push
xchg
push
lahf
adc
ss
pop
sub
lods
out
add
cli
mov
mov
inc
or
dec
outsl
mov
les
lahf
mov
mov
cmpsb
mov
jno
and
inc
cmpsb
cs
or
sub
dec
and
hlt
or
xchg
ds
jp
arpl
sbb
cwtl
xlat
mov
pushl
bound
pop
fiaddl
mov
icebp
adc
mov
xchg
je,pt
mov
adc
dec
push
stc
jl
ljmp
subl
push
cmp
add
sar
shlb
iret
mov
mov
sub
inc
or
and
test
xlat
push
fwait
out
arpl
cmp
jle
jmp
pop
out
mov
ret
sub
mov
lods
ja
push
adc
cmp
push
fiadds
jp
in
push
xor
adcb
dec
jo
mov
sahf
jne
int
inc
out
je
add
lock
out
xchg
bound
subl
dec
mov
mov
int
insb
out
mov
mov
popf
hlt
mov
fnstenv
movsl
mov
push
inc
test
push
xchg
push
push
andb
xor
ljmp
adc
mov
cld
lahf
out
fsubp
notb
sbb
push
push
dec
push
out
ljmp
lods
rorb
jecxz
gs
nop
fsubs
xor
push
mov
aam
lcall
std
or
pop
xchg
je
dec
push
mov
adc
test
int3
jecxz
push
fisubrs
addr16
cld
fdivr
mov
popf
xor
sbb
fcoml
pop
inc
jmp
out
xchg
repnz
aaa
stos
shlb
or
add
in
test
enter
jl
scas
js
adc
loope
xor
ficoms
jb
nop
popa
les
into
cmp
add
js
jle
push
js
inc
int
int
negb
gs
jb
jno,pt
dec
frstor
hlt
and
xchg
push
and
das
imul
out
pop
push
sub
cmpsb
mov
sub
xor
nop
stos
call
mov
lcall
add
in
xchg
fcomps
add
adc
fs
xchg
repnz
pop
and
mov
jge
lea
jbe
seta
mov
mov
loopne
xor
mov
negb
les
hlt
adc
cmp
les
push
leave
sbb
out
mov
dec
cmp
mov
sarb
fadd
sbb
mov
add
mov
stos
cmp
data16
inc
xchg
xchg
movsb
inc
rcrl
fisubs
sub
pop
leave
in
push
nop
pop
jp
mov
jo
cmc
bound
inc
in
fmull
mov
mov
adc
add
cmp
gs
enter
or
das
ja
test
pop
or
in
sbb
add
je
jns
dec
das
mov
xor
icebp
mov
pop
pop
pop
xor
add
xchg
loop
rclb
repnz
repnz
filds
in
or
fdivs
lea
cwtl
or
add
jg
jmp
push
and
cmpsb
test
xor
xor
dec
lds
sbb
addr16
loop
sbbl
mov
arpl
das
jge
and
fiadds
xchg
push
pop
or
jg
pop
jno
cmp
fadd
movsb
js
mov
pop
ds
mov
inc
cmp
shrl
push
mov
outsb
mov
insb
test
ds
inc
mov
hlt
push
sti
inc
sub
mov
insb
add
aas
lahf
pop
mov
mov
testl
mov
jmp
sbb
lcall
bound
sub
and
xchg
scas
fildl
sub
sub
mov
test
dec
jns
xor
pop
in
je
aaa
cmp
push
sub
sbb
xchg
cld
push
out
cmp
adc
in
dec
adc
cltd
aam
cmp
hlt
lods
imul
sbb
test
dec
dec
lret
jns
addr16
add
icebp
xor
int3
insl
out
pop
or
daa
in
je
int3
add
in
mov
mov
lods
arpl
jecxz
sbb
arpl
popa
push
fldt
pop
shll
aam
ds
cmp
xor
in
jge
mov
ss
inc
and
cwtl
sbb
or
cmp
inc
lret
int3
pop
fldl
bound
dec
aas
ss
mov
dec
mov
push
mov
add
sub
pop
arpl
fwait
scas
push
shlb
std
jecxz
dec
lds
mov
ss
iret
arpl
mov
adc
lret
inc
mov
xchg
stos
outsb
jmp
icebp
or
in
adc
ss
data16
popa
out
sub
and
inc
orb
jns
sbb
xor
mov
aam
fcoms
mov
imul
pop
push
adc
jmp
sbb
lahf
lods
cmp
cmp
ret
mov
lahf
sbb
sub
and
into
xor
ja
pusha
pushf
xchg
stos
fistps
xor
ja
cmp
push
jns
cmp
incb
pop
clc
movl
jmp
scas
cwtl
dec
push
or
pop
insb
popf
addr16
inc
ret
sahf
mov
xor
icebp
cs
sbb
mov
xor
and
or
out
cmp
scas
shl
mov
or
inc
pop
jg
jbe
je
jae
mov
fistl
fsubl
imul
imul
jnp
adc
mov
jns
int3
sub
repnz
push
jp
pushf
and
das
xchg
jecxz
sbb
adc
lea
push
and
fs
popf
sbb
inc
lea
nop
cmpl
jno
imul
and
jno
inc
push
mov
xchg
push
push
xor
xor
bound
in
adc
inc
cli
xor
aad
jno
dec
add
sbb
and
add
jae
push
adc
into
dec
ss
lea
jecxz
mov
es
icebp
divb
dec
fmuls
xchg
xor
jmp
cmp
jl
push
repz
sub
jecxz
dec
and
test
rcr
inc
lods
dec
cli
mov
or
and
jp
mov
inc
xor
adc
ja
ficoms
cmp
jg
cmp
sub
jns
pop
sbb
xchg
jbe
sub
or
cltd
xchg
arpl
and
jno
and
mov
cmp
xchg
mov
fdivs
subb
loopne
mov
leave
mov
push
adc
divb
sub
mov
and
fnstcw
cld
lods
call
dec
mov
test
jno
cmp
ret
jno
sub
push
mov
jge
mov
test
push
or
arpl
xchg
xchg
jne
ret
shl
mov
push
ja
or
ljmp
fidivrs
xorl
xchg
gs
outsb
fsubs
xchg
pop
push
dec
pop
push
pop
icebp
fs
rcll
jge
aad
mov
xchg
pop
pop
lods
cmp
xchg
lock
sbb
leave
inc
inc
or
in
inc
out
adc
or
xor
test
arpl
ljmp
jg
mov
cmc
push
push
ds
lock
outsl
shll
clc
test
add
scas
mov
pop
aaa
packuswb
xor
lods
adc
dec
je
pop
pop
mov
lret
or
scas
pop
jg
cltd
insb
jge
fwait
shlb
jbe
jl
lods
data16
jge
push
mov
mov
stos
cmp
pop
sbb
out
adc
jp
sub
xchg
adcl
cmpsl
fistpl
out
ret
mov
pop
mov
cltd
cmp
cs
repnz
rcrl
push
mov
lret
mov
push
add
test
mov
sbb
int3
mov
lds
les
lret
idivl
jge
sub
xor
xchg
pop
dec
test
pusha
mov
dec
push
ficomps
and
push
rcrb
push
xchg
sub
dec
addb
adc
sbb
orl
sahf
addr16
cld
test
inc
mov
sbb
xchg
inc
mov
cmp
lahf
es
jnp
xchg
cmp
add
lea
mov
ret
and
out
inc
loopne
sub
fucom
out
sub
jge
les
lods
fsubp
pushf
movsl
fdivs
jne
fwait
imul
test
movsl
rolb
xor
jmp
gs
inc
push
pushf
call
xchg
cld
addr16
cli
shlb
mov
add
mov
mov
adc
xchg
dec
mov
mov
jno
clc
dec
dec
push
in
scas
sbb
or
inc
loop
sti
ljmp
xor
out
iret
out
or
and
or
movsl
push
pop
stos
pop
mov
arpl
xchg
pop
add
loope
mov
pcmpgtw
pop
push
pop
sarl
jge
bound
mov
inc
mov
cmc
mov
sub
test
dec
push
loop
push
pop
sbb
xor
push
xlat
hlt
mov
int
pusha
jno
enter
xor
pushf
sub
xor
fsubl
orl
jns
dec
mov
sbb
and
lds
add
mov
je
add
int
iret
fwait
sbb
ja
sbb
xchg
ficoms
xor
push
mov
cmc
loop
mov
adc
andl
cmp
push
ss
dec
xlat
or
xchg
xor
push
rcrb
lock
mov
aas
add
shlb
and
jg
dec
rcl
lods
clc
pop
pop
rcll
or
dec
jbe
add
xchg
sub
and
add
negl
es
out
stc
inc
test
and
lock
xchg
je
int3
rol
mov
test
ret
push
pop
pop
and
sbb
lods
pop
fbld
adc
sub
pop
in
in
mov
mov
insl
mov
repz
enter
je
jne
pop
jg
dec
or
aam
testl
mov
or
inc
pop
mov
inc
mov
xor
cmpsb
pop
je
loope
dec
mov
pop
loope
pusha
call
mov
into
les
xlat
cld
xor
xorb
sti
or
in
sub
rorb
and
push
mov
add
popa
popf
popa
push
xlat
dec
dec
xchg
jae
scas
imul
push
cmpsb
mov
das
lods
push
adc
sub
fstps
rcrb
and
scas
cltd
mov
jo
push
les
xchg
sub
or
sbb
push
data16
xchg
and
je
mov
insb
sub
mov
hlt
add
mov
lods
sub
push
in
jae
cmp
adcl
xor
stc
adc
enter
mov
call
cmc
insl
xchg
imul
mov
sub
cld
in
push
mov
jb
cmp
adc
lret
and
sti
push
mov
or
movl
mov
pop
mov
push
sti
xchg
loop
sub
mov
subb
mov
jle
jb
push
cli
push
mov
pop
scas
clc
jl
fcmovnb
push
mov
or
mov
mov
lahf
xchg
lcall
push
stos
and
and
jp
mov
mov
mov
jg
sub
mov
add
xchg
sti
or
inc
mov
fldl
insl
or
jbe
movsb
lahf
in
movsb
sub
les
xchg
movsb
aad
xlat
cmp
push
mov
cmp
int
fnstcw
jecxz
cli
push
outsb
sbb
jmp
call
fiaddl
pop
adcb
jb
scas
jb
mov
int
jnp
in
sbbl
fistl
ljmp
jge
movsl
add
adc
xor
inc
push
jae
xchg
rcrl
int3
imulb
inc
xchg
aaa
dec
xor
adc
inc
add
or
jb
xor
pop
mov
repnz
cmp
dec
or
jnp
inc
stos
and
xchg
sbb
and
loope
xor
mov
int
insl
ja
mov
sbb
adc
imul
lods
add
adc
pushf
inc
mov
sbb
mov
inc
loope,pt
jecxz
xor
inc
cmp
dec
loopne
xchg
push
cwtl
pop
ds
mov
dec
inc
xor
xor
inc
insl
add
es
mov
movsl
pop
cmp
sarb
dec
mov
mov
js
adc
sarb
gs
push
push
cmp
push
mov
dec
leave
inc
sbb
out
inc
or
xchg
fiadds
cmp
push
mov
pop
je
mov
mov
jbe
icebp
pushf
in
int
adc
mov
icebp
movl
or
data16
push
js
aas
sbb
jecxz
clc
arpl
nop
pusha
and
ret
add
out
shrl
movsb
repz
lcall
inc
pushf
xchg
adc
dec
test
push
push
adc
test
cltd
imul
inc
icebp
jmp
xchg
aaa
xor
mov
fwait
lahf
and
push
add
loopne
loop
sbb
popf
movsb
mov
and
push
inc
call
dec
hlt
inc
arpl
adc
popa
movsb
pop
sti
out
cmp
pop
mov
cmc
sub
mov
popf
lret
int
sub
push
idivl
fdivrp
push
and
adcb
fbstp
sub
imul
dec
add
das
pop
call
or
sub
ret
inc
add
enter
cli
jmp
push
cmpsl
js
dec
in
std
mov
mov
out
fcomps
push
fldl
dec
scas
adc
mov
test
xlat
xor
ficompl
lds
mov
inc
xchg
int3
sbb
repz
mov
mov
sbb
andb
test
loopne
ss
ret
inc
repz
das
xchg
push
loop
adc
loopne
cs
xor
fsubrs
imul
outsl
sahf
inc
pusha
push
pusha
cmp
dec
mov
bound
rorb
enter
mov
dec
adc
jae
imul
mov
lods
repz
fnstenv
mov
inc
and
push
mov
aam
xchg
cmp
xchg
lock
sarb
jle
sbb
inc
mov
push
scas
movsb
movsl
pop
lret
and
jo
xor
mov
and
lret
mov
or
adc
push
sub
or
mov
shrl
fbld
orb
mov
cld
push
cmp
fistpl
sbb
mov
movsl
cltd
pusha
lea
call
dec
idiv
lock
cli
cmp
xchg
and
bound
mov
mov
std
stos
jne
dec
mov
sbb
in
icebp
mov
adc
pop
addr16
lcallw
pop
andb
push
inc
call
lret
jge
ljmp
or
xchg
xor
cld
cmp
inc
add
rolb
jg
prefetch
push
xlat
mov
sub
mov
add
ds
mov
cltd
sbb
pop
xlat
xchg
jno
into
jnp
stc
dec
pop
popa
shlb
data16
in
sbb
into
lods
pop
push
add
in
or
or
jbe
jecxz
add
inc
loope
in
and
mov
sahf
popf
push
aaa
outsl
punpcklwd
mov
lcall
mov
outsb
pop
mov
mov
mov
stos
andl
rorb
iret
xor
jo
push
in
push
pop
std
cmp
daa
jl
mov
cmp
adc
loopne
mov
cmova
mov
xlat
popl
sbb
leave
push
aad
insb
push
out
shll
xor
loope
mov
addl
rorl
cmpsl
mov
roll
pop
es
push
cmp
nop
or
ficompl
inc
pop
pop
cbtw
movsl
xchg
dec
shlb
xchg
shrl
cmp
pop
aad
in
in
out
mov
jg
idivl
push
mov
mov
mov
add
ja
fstpt
push
or
dec
add
repnz
sarl
test
mov
dec
pushf
pusha
data16
popa
pop
movb
mov
dec
adc
shl
movsl
add
roll
pmulhw
pop
mov
adc
andl
loopne
mov
jb
and
cmp
push
outsb
ljmp
rcrl
loope
dec
lods
or
pop
jne
xor
hlt
dec
dec
or
xor
pop
sahf
fisubs
arpl
push
sub
pop
test
adc
lret
ret
adc
inc
fsubl
loope
lds
int
mov
or
test
sbbl
adc
push
xlat
mov
or
pop
insl
pop
add
les
pop
es
and
cltd
xchg
push
mov
mov
sbbl
outsl
pushl
ja
ret
cmp
rcl
xor
adc
ret
xor
push
shll
jge
in
pop
jbe
pop
hlt
push
mov
jl
jae
mov
lcall
adc
mov
popf
scas
out
mov
sahf
mov
ret
inc
adcb
cmc
aas
xchg
cli
pop
mov
jno
mov
push
add
or
inc
adc
int
popa
mov
jo
lcall
jmp
or
cmp
leave
lahf
movsb
into
movsb
dec
int3
rorb
mov
jge
je
sub
pop
addr16
xchg
into
shlb
lods
ret
dec
int3
ss
pop
loopne
mov
add
mov
dec
and
push
xchg
mov
fs
cmpsl
cmpsl
jo
xchg
inc
shr
repz
mov
sub
dec
imul
or
leave
add
xorl
cmp
sub
fs
bnd
or
push
fnclex
daa
jo
xchg
push
out
movsb
ds
pop
xchg
cmp
test
xor
mov
jp
adc
pop
and
sub
push
adc
push
aam
ret
xor
mov
fsubrs
fs
lret
stos
cmpsl
push
call
mov
insb
mov
cmp
mov
roll
fwait
repz
outsb
inc
xchg
in
cmpsl
test
mov
bound
adc
and
jmp
xor
mov
add
sub
mov
or
jae
push
and
popf
test
sbb
mov
rcrl
cwtl
and
aad
in
inc
adc
insl
or
insl
push
jbe
mov
divb
fwait
mov
pop
scas
mov
rolb
insl
movsl
mov
adc
mov
daa
sbb
xlat
add
ljmp
stos
mov
xor
into
les
adc
int
out
pop
jnp
jmp
jp
popf
orl
jnp
movsb
lret
xchg
push
aam
adc
into
rorb
inc
sbbl
dec
imul
icebp
out
outsl
jnp
sysexit
insl
aaa
bound
arpl
mov
xchg
std
jmp
or
pop
and
sub
and
mov
mov
sub
sarl
pop
push
lock
xchg
push
cmpsl
insb
push
aas
lock
xlat
jne
push
lret
pop
mov
movsl
xchg
enter
mov
and
xchg
sbb
aas
es
repz
jb
or
xchg
mov
or
addr16
lods
cmpl
xchg
pop
mov
repz
inc
shrb
rcrl
push
icebp
pop
hlt
mov
ss
xchg
cld
gs
cwtl
or
mov
testb
and
mov
cltd
jmp
adc
mov
xlat
add
lods
movsl
sti
or
mov
push
rcll
jmp
cld
js
add
scas
push
push
and
sub
stos
xchg
adc
ss
cs
mul
xor
imul
mov
sbb
inc
mov
jne
filds
cmp
pop
pop
in
jecxz
leave
aaa
in
out
inc
loop
pop
arpl
lahf
pop
or
enter
in
mov
movsb
and
xor
adc
in
inc
cmp
cwtl
cmp
dec
jns
arpl
outsl
notl
into
enter
inc
pop
es
ds
pop
mov
or
pop
mov
testl
jmp
nop
int3
sub
fsubs
mov
clc
in
movsl
inc
or
cmpsl
push
fcoms
xchg
adc
stos
lahf
push
addl
xor
out
push
pop
inc
mov
dec
mov
mov
mov
pop
lcall
add
int3
mov
or
push
js
jecxz
stos
test
push
movsl
iret
inc
iret
das
ret
mov
jmp
stos
and
dec
cmp
jecxz
sbb
pop
les
cmp
xchg
fs
cmp
mov
sbb
sti
lods
fildl
add
mov
add
mov
fistpl
adc
and
test
pusha
loop
or
sub
pop
pop
mov
jne
test
bound
and
mov
mov
shll
adc
data16
mov
cltd
pop
in
adc
popw
in
push
xchg
jae
lods
pop
mov
or
nop
sbb
push
mov
stc
fs
stos
aas
lods
pop
lods
pop
xchg
mov
leave
cld
pop
adc
dec
pop
mov
jnp
ret
out
test
adc
out
xchg
data16
pushf
mov
mov
fnstenv
scas
dec
push
jge
scas
daa
test
or
ret
dec
add
dec
xchg
inc
add
inc
das
pop
daa
jge
jge
lret
push
jnp
sbb
pop
jmp
addb
repnz
jmp
loopne
xchg
xchg
mov
not
rolb
scas
cli
js
and
or
dec
stos
adc
cmpsl
jnp
jns
sbb
inc
and
out
xchg
mov
mov
pop
cli
movsb
rclb
das
sbb
imul
xor
pop
xchg
push
cmp
fistps
push
ljmp
pop
stos
pop
and
jge
inc
pop
je
outsl
fsubrl
scas
adc
insl
xor
mov
cltd
lea
sbb
movsl
lea
push
test
sub
inc
movb
sbb
cli
add
and
stos
jge
aas
dec
inc
fdivl
add
les
sub
fstpl
cltd
mov
sahf
pop
arpl
or
arpl
sbb
dec
addr16
int3
or
adc
xor
jecxz
dec
mov
imul
notl
loope
mov
into
or
sub
in
jbe
add
popf
in
dec
pop
mov
mov
cs
lea
imul
clc
test
dec
mov
cmp
pop
es
mov
push
cmpsl
sbb
xchg
fwait
lea
mov
cmpsb
xchg
in
xor
shrl
popf
add
outsl
sub
shrb
int
sub
xor
clc
lret
xor
dec
je
bound
imul
cmp
sub
fldenv
mov
cli
pop
stos
ja
xor
pop
aam
xlat
stc
mov
shlb
ja
ret
and
mov
mov
lods
lods
mov
mov
adc
rcrl
lahf
cmp
cmp
in
push
jmp
xor
jns
test
test
or
insb
mov
push
add
nop
jae
aam
addr16
adc
lcall
jo
movsb
in
inc
shrl
adc
mov
fsubs
cmp
outsb
pop
push
or
ret
dec
dec
jmp
xor
lea
cltd
divb
jg
mov
aas
jbe
xchg
adc
fucomip
lods
shll
lcall
push
nop
dec
mov
xor
popf
sbb
lret
aam
into
test
jge
inc
sub
cld
fldl
sub
nop
andl
into
es
jp
sub
sub
addl
hlt
jl
sub
sbb
xchg
sub
scas
xor
jmp
push
mov
mov
and
xor
jo
pusha
aad
add
or
cmp
sarl
in
add
inc
jnp
js
les
popa
js
loope
inc
or
lret
sti
movl
lods
jbe
mov
ficomps
es
xor
push
xchg
divl
popl
loope
ss
inc
sbb
sbb
imul
dec
cs
mov
pop
jo
dec
das
aad
leave
popf
adc
inc
dec
mov
jnp
rcr
rclb
call
fs
insb
ds
xchg
mov
push
in
popf
xchg
pavgw
jecxz
fnstsw
insb
or
xchg
icebp
jmp
pusha
push
push
fwait
cmp
sti
inc
sub
fs
jne
addr16
jecxz
repnz
lahf
cli
stos
fsts
out
pop
sarb
xchg
outsl
or
lahf
mov
popa
cltd
xchg
jo
rcr
mov
cmc
sub
xchg
mov
adc
js
mov
xor
cmp
rcr
in
rep
or
push
ret
inc
mov
enter
inc
outsl
mov
mov
adc
mov
xor
fcomps
mov
fs
or
aaa
ja
or
xchg
fistpl
nop
jbe
repnz
jmp
cli
movaps
jne
lea
mov
xchg
pushf
adc
test
xchg
in
and
cld
pop
and
mov
cmp
pop
mov
std
mov
push
or
dec
cmp
jnp
pop
mov
out
incl
cmp
xor
in
into
je
push
pop
dec
adc
adc
pop
bound
in
sub
ret
pop
dec
outsl
mov
xor
pop
inc
std
pop
das
je
repnz
inc
cmp
data16
aad
sarl
mov
jo
iret
nop
insb
jge
jb
sub
pop
faddl
fdivp
clc
sbb
ds
mov
jb
lods
stc
out
mov
adc
fcoml
jnp
mov
or
or
cmpsl
loopne
push
fs
mov
adc
and
jno
jl
lds
pop
dec
dec
icebp
popa
movsb
push
sbb
mov
xchg
cmp
mov
adc
enter
shr
scas
fildll
sbb
adc
mov
ss
fstps
sbbb
test
scas
pop
pop
aas
faddl
fiadds
pushf
scas
adc
or
sbb
shll
sbb
imul
cmc
popa
push
notl
mov
cmp
popa
insb
shlb
int3
loope
fildl
sub
rcrl
and
jmp
cmpsb
shrb
adc
sub
stos
mov
and
addr16
fistpl
jno
pop
daa
repnz
ret
and
xchg
es
stos
loopne
mov
jne
daa
xchg
orl
fsubrl
and
fadd
les
incl
cmp
jmp
mov
fisubl
orb
faddl
emms
mov
fmull
ret
add
adc
popf
add
fsubrl
adc
punpcklwd
push
adc
leave
je
jne
fs
mov
loop
vmovshdup
mov
push
and
pop
push
pusha
sbb
fnsave
shll
ficoml
je
xchg
sbb
out
ss
jns
jne
insl
cmp
faddl
pop
loopne
iret
mov
xor
stos
into
mov
cld
jl
mov
jo
call
sbb
mov
adc
in
ret
xorl
add
pop
lcall
xchg
xchg
ret
or
inc
sahf
addr16
xchg
fdivr
ret
jno
jo
cmc
shrb
jmp
and
and
add
xchg
iret
add
bound
mov
cmpsl
lock
lods
xlat
js
shll
xor
insb
inc
cmp
push
fwait
inc
test
insl
int
ret
jge
clc
cmp
sbb
jno
jae
enter
out
add
lods
lahf
mov
sub
loope
and
sbb
add
lcall
pop
inc
leave
jb
jmp
jo
xor
add
cli
and
ffree
sarb
imulb
dec
mov
loopne
ss
ss
jle
pop
jle
lret
mov
in
fsubl
jl
push
fists
or
fwait
mov
mov
inc
mov
mov
jl
and
mov
fscale
pop
jg
add
inc
in
not
jae
adc
lret
pop
pop
jnp
test
icebp
inc
push
out
lcall
pop
movsl
sbb
jne
out
adc
movsl
imull
fsubl
gs
inc
add
push
mov
ss
lahf
sbb
add
lret
cld
sub
pushf
aam
sub
insb
or
stos
aad
lret
mov
dec
adc
loopne
jb
add
xorb
jb
cmpb
add
outsl
mov
rcr
mul
jle
rcll
shll
je
sahf
inc
sub
lret
cmc
int
les
ss
jg
andb
or
sbb
lcall
ficomps
mov
fst
mov
dec
push
mov
arpl
int
test
mov
xorl
aad
xchg
imul
cmp
aas
add
dec
subl
decl
hlt
int3
cli
adc
or
rol
dec
dec
jnp
hlt
adc
lret
push
and
and
cmp
lcall
push
pop
add
pop
fisttpl
loope
xor
push
push
mov
fadd
sbb
mov
sarl
and
ja
and
xor
push
sbb
sub
pop
mov
movsl
mov
ret
cwtl
sbb
loop
inc
jae
fistpll
mov
dec
adc
testl
mov
loop
dec
in
fwait
add
jnp
sub
lods
inc
mov
jl
adc
inc
pusha
movsl
sbb
nop
sub
clc
sub
daa
sub
cmc
or
ja
stc
xchg
and
mov
mov
jae
cmp
mov
sbb
cld
jle
fidivs
jg
jns
push
xchg
mov
fsubl
ljmp
add
bound
lock
cli
and
lret
dec
mov
out
in
mov
fists
jecxz
fimull
sub
xchg
in
sub
sbb
mov
cs
dec
mov
shrl
fcoms
push
cld
xchg
lcall
cld
xor
adc
mov
inc
push
pop
call
pop
sub
lods
xchg
pop
lahf
les
xchg
imul
cmp
out
or
add
mov
sarl
pop
movsb
jns
dec
lcall
inc
test
sub
pop
nop
jnp
cmp
dec
imul
daa
add
mov
add
adc
bound
xor
mov
sti
cld
mov
rcll
dec
fnstcw
cmp
xchg
lret
sub
mov
push
ret
dec
cmp
ljmp
repz
or
stos
adc
sbb
mov
std
mov
xchg
das
xor
mov
std
cltd
inc
push
lahf
sbb
mov
lods
sarl
mov
add
cmp
fdivr
out
push
fstps
nop
mov
sub
sti
mov
jmp
cmp
jo
mov
scas
mov
test
orl
lahf
lock
xchg
xor
addr16
mov
inc
mov
mov
call
nop
push
sub
imul
adcb
sbb
add
push
in
sbb
sub
push
pop
adc
icebp
and
aam
inc
hlt
js
gs
sub
pop
push
jae
push
jnp
push
pop
xchg
mov
xchg
mov
cmpl
push
enter
sbb
mov
enter
mov
mov
mov
sbb
mov
aas
cmp
icebp
jo
ret
pop
iret
jnp
int3
jmp
stc
push
or
push
jecxz
push
mov
in
mov
push
jns
inc
ret
movsl
cmp
xor
sub
dec
ds
fmuls
jmp
lret
and
mov
jbe
pop
mov
mov
adc
mov
dec
or
repz
aad
adc
jp
movsb
in
jp
mov
xor
mov
or
dec
add
pop
mov
loope
icebp
pop
repnz
rcl
popf
add
add
cmc
add
andl
xor
xchg
inc
fsubs
imul
cmp
jg
adc
enter
lea
inc
test
jns
sub
fwait
test
jb
icebp
or
push
enter
inc
in
and
or
insb
fisubl
aam
inc
mov
dec
lret
loop
sbb
cli
dec
sbb
scas
inc
nop
xchg
orb
lds
jge
jne
and
and
clc
pop
dec
sub
xchg
outsb
pusha
sub
outsb
in
shrb
repz
inc
jb
sub
outsb
pop
push
inc
fsubrs
hlt
or
js
xor
addl
jne
sub
xlat
pop
jge
pop
imul
cmp
push
sbb
xchg
in
and
loop
mov
retw
and
xchg
lock
jbe
jnp
xchg
mov
aad
iret
int3
push
cltd
fdivrl
inc
xchg
sti
cltd
lea
sahf
cmc
mov
hlt
loope
js
mov
push
xchg
push
jo
lret
cmp
dec
int
hlt
push
xchg
sub
out
mov
pop
hlt
fmuls
nop
loopne
cmp
inc
jge
mov
sub
inc
nop
mov
sub
or
dec
inc
mov
sti
clc
mov
fistps
ja
insb
ljmp
lret
in
cld
pop
xor
and
cmc
cmp
faddl
hlt
rorb
iret
add
push
mov
loop
or
xor
scas
dec
jne
movsb
in
into
dec
insl
inc
aam
push
rorb
xor
pop
sbb
jmp
push
sub
lcall
lods
dec
sti
jnp
ret
pop
daa
adc
int
jo
cs
pop
daa
test
stc
jl
lea
inc
jno
cs
jmp
cld
adc
push
push
inc
mov
jecxz
xchg
jecxz
cmp
dec
xor
scas
sub
sahf
jg
cmp
inc
push
jno
dec
repz
ja
push
xchg
sbb
jmp
inc
bound
es
push
repnz
push
inc
add
sbb
push
pavgw
cmp
and
push
in
lds
int
shlb
dec
mov
fldl
cmpsb
adcl
leave
pop
cmp
jmp
mov
mov
sub
xor
pop
sub
cmpsb
pop
push
dec
mov
xchg
cmp
cmp
xorb
arpl
and
inc
pop
imul
mov
inc
mov
divb
push
pop
jnp
notb
aam
jge
mov
ljmp
jne
adc
push
ret
aad
sub
loope
mov
js
xor
pop
cltd
xor
int3
pusha
jl
mov
xchg
aam
mov
rcr
xchg
xchg
je
adc
mov
aad
lcall
jmp
test
mov
mov
ret
shll
popa
ret
mov
rorl
sub
test
push
scas
aas
sbbl
es
int3
rolb
movsb
sti
aas
push
adc
sub
sahf
daa
jns
cmp
repz
das
pop
pop
dec
cmp
call
mov
pushf
pop
xor
incl
sbb
inc
shlb
popa
dec
arpl
mov
and
adc
or
jne
enter
sti
or
pop
mov
inc
sahf
ret
imul
cs
pusha
mov
lea
sbbl
add
rcll
sbb
add
push
pop
mov
sahf
pushf
dec
in
aaa
ror
scas
notb
pop
movsb
jge
rcl
xchg
idivb
outsb
push
into
xor
pushf
out
ret
imul
nop
inc
sub
lea
cltd
push
push
dec
sti
or
mov
mov
jb
pop
cmp
notl
roll
dec
gs
mov
aaa
push
lahf
loop
hlt
repz
hlt
and
jmp
sbb
test
shrl
aas
jb
or
adc
lods
hlt
movq
push
push
push
fidivs
or
cmp
xor
add
dec
mov
fisttps
mov
jl
inc
xchg
fidivs
push
fistps
hlt
push
jle
adc
repnz
out
sub
sbb
dec
ds
lret
jno
into
lahf
sbbl
jl
mov
mov
sarb
push
data16
popf
cmc
mov
movsl
pop
in
cld
sbbb
jo
into
out
sti
jo
xchg
pop
pop
flds
pop
cmp
pop
mov
jecxz
inc
lds
mov
jle
inc
mov
divl
ucomiss
pop
into
adc
daa
jne
and
ret
aas
mov
inc
ss
cli
mov
pusha
inc
sahf
testb
jo
outsl
lea
adc
ljmp
or
out
and
jo
dec
fdivp
mov
daa
addr16
dec
push
xorb
jmp
das
sub
dec
es
or
jp
shr
movsb
sub
sub
in
pop
fimull
cmpsb
add
inc
fsubl
div
popf
mov
sar
cwtl
outsl
or
dec
fsubs
das
add
int
rep
mov
xchg
stos
sbb
cmp
and
adc
scas
cli
lods
cmp
mov
int3
mov
repz
inc
repnz
aad
es
jl
pushf
sub
shl
adc
add
rolb
lret
adc
nop
add
cmp
je
sbb
jbe
gs
movsb
mov
mov
call
cmpsl
mov
lret
cmp
push
adc
loopne
pop
sbb
dec
movsl
cwtl
lds
ljmp
mov
repnz
aad
ss
inc
addr16
enter
dec
mov
mov
push
cmp
imul
sbb
push
or
mov
add
jb
xchg
out
push
cli
addr16
pop
in
dec
shl
imul
cmp
out
fnsave
test
inc
xchg
aam
roll
inc
popa
xorb
or
xor
push
inc
mov
cmp
cmpsb
mov
gs
shr
pop
cmc
xchg
mov
jne
push
stos
jbe
pushf
inc
and
and
test
out
out
dec
mov
xchg
cltd
mov
sub
lods
lret
je
or
pop
add
or
adc
pop
adc
popa
cmpsb
sub
sbb
je
aam
jae
fucomi
ds
movsl
push
jl
loopne
xor
cmp
pop
repnz
lcall
cld
xchg
push
mov
mov
int
and
aas
insl
nop
pop
mov
std
loop
mov
fnstenv
inc
jo
fnstcw
jno
addb
fdivp
jae
arpl
add
pusha
cmp
sbb
ficoms
dec
roll
mov
lds
outsb
or
je
jnp
jecxz
and
rclb
ret
mov
aas
out
test
push
outsl
hlt
sbb
pop
mov
mov
pop
xor
pop
ds
mov
addr16
pop
fisubs
cli
cmp
outsb
mov
repnz
out
mov
mov
in
pop
adc
adc
inc
xor
imul
inc
inc
cltd
pop
adc
cmp
push
mov
sub
sahf
mov
ja
rcll
lods
mov
movsb
out
inc
cmp
and
mov
pop
call
hlt
or
leave
jns
jnp
sub
mov
xor
add
lahf
adc
fnsetpm(287
shlb
push
push
mov
xor
mov
out
outsl
aad
cmpsl
sub
adc
adc
and
jno
in
std
mov
test
push
faddp
xor
xchg
cmpsb
xchg
adc
push
jl
cmp
mov
jp
clc
mov
divl
fisttps
jge
mov
mov
les
ja
mov
push
stc
arpl
aaa
cmp
push
push
ja
xor
mov
ss
jge
data16
lret
outsb
test
mov
dec
popf
dec
pop
dec
inc
mov
mov
dec
decl
mov
fistpl
stc
nop
cmc
repz
popf
jbe
insb
sub
fsubl
sub
jne
cmp
xor
iret
inc
fldcw
xor
out
adc
jmp
pop
popf
shrl
mov
add
mov
lods
mov
in
jl
ja
adc
subl
lock
imul
sahf
xchg
jmp
pop
adc
fildll
jns
lea
leave
mov
je
and
pop
dec
mov
jp
ret
int
mov
mov
in
pop
push
add
mov
rol
xor
mov
mov
movsb
and
das
lods
push
fsts
sub
push
cmp
pop
mov
xchg
setnp
loop
mov
cmpsl
test
xor
pop
push
popa
repnz
nop
xchg
adc
gs
cmpsb
decl
add
mov
xchg
xchg
mov
jle
mov
push
shl
ja
adc
inc
push
outsl
call
ror
mov
movsl
lods
shll
pop
cmp
sub
paddsw
dec
push
ss
test
push
les
mov
pushf
bound
loope
pop
inc
mov
enter
sar
cmp
xchg
mov
stc
scas
int
dec
fnstenv
or
test
add
stos
jno
dec
inc
lret
jp
cmc
ret
cltd
xor
insl
hlt
fsubrs
xchg
mov
push
push
fsts
aam
test
pushf
je
popa
add
cld
ds
add
inc
hlt
add
rcrb
adc
popa
ucomiss
loope
and
ret
cmp
mov
inc
sahf
mov
push
mov
and
jae
xchg
pushf
mov
ret
ret
xchg
dec
cs
sbb
sahf
rorl
mov
rcrl
test
or
adc
mov
cwtl
pop
push
addr16
or
faddl
mov
sti
popa
fmul
sub
jo
inc
mov
incl
out
daa
xchg
imul
push
adc
dec
outsb
dec
mov
mov
fisttps
xchg
mov
test
in
shrb
loop
in
jno
sbb
inc
pop
pushf
push
adc
into
cmp
push
dec
aam
add
ret
stc
mov
aam
pushf
mov
dec
in
int
cmp
mov
dec
jle
push
fildll
adc
rclb
mov
scas
mov
pop
xchg
mov
mov
mov
mov
pop
mov
cmp
pop
sti
hlt
aas
push
mov
arpl
outsb
xchg
cld
mov
fs
fnsave
jl
jmp
pusha
sub
mov
push
add
and
jnp
scas
or
push
sub
mov
jb
pop
xchg
cmp
xor
out
xor
sbb
or
pop
rcr
inc
lock
sbb
testl
mov
sub
movsl
cwtl
cmp
or
add
mov
pushf
ja
adcb
pushf
sub
xor
cwtl
inc
int
sub
xchg
ljmp
mov
in
mov
shll
fisubs
nop
push
loopne
xchg
ret
inc
inc
sbb
mov
test
adc
cmp
jp
push
divb
pop
addr16
mov
sub
je
and
adc
mov
lock
imul
lret
inc
pop
dec
jecxz
pop
inc
mov
mov
mov
test
call
cld
mov
cmp
mov
cmp
in
imull
pop
in
push
push
cmc
jno
fstps
call
push
jmp
hlt
stc
fwait
mov
dec
mov
addb
out
mov
lahf
cmpsb
cmc
mov
cmp
testb
outsb
mov
cmp
or
out
pusha
cmp
push
les
fdiv
and
fldenv
cwtl
push
jns
xor
mov
cmp
cmp
arpl
pop
sub
lret
sub
iret
insb
loop
lret
cmp
in
das
nop
xor
cli
xor
add
xor
add
inc
int3
mov
fisubs
test
pop
pop
mov
mov
push
sub
imul
and
fcoml
movsl
imulb
dec
inc
cmp
xchg
jle
nop
aam
mov
push
pushf
cmp
sub
dec
push
push
lods
mov
sahf
add
inc
jnp
js
inc
mov
inc
adc
lret
push
cli
dec
hlt
insl
inc
cmpl
push
mov
jg
dec
inc
aaa
adc
pop
cmc
shrl
stc
movsl
cmc
cmpsl
in
in
mov
ds
adc
sti
sbb
xchg
mov
imul
xchg
fdivs
fisttps
push
loope
psubq
push
ja
jmp
xchg
pop
xchg
inc
imul
in
mov
cld
aaa
loop
cmp
jne
add
cmc
testl
push
jae
jbe,pn
push
fsts
add
mov
test
lcall
hlt
jns
test
shll
sbbl
notb
ljmp
mov
mov
mov
dec
in
sarb
inc
mov
das
pop
int
lret
fistps
adc
fldl
cmp
jbe
add
or
mov
mov
movnti
roll
and
leave
add
dec
push
jns
inc
push
jmp
mov
push
xlat
sub
jmp
mov
mov
sti
xor
push
stc
outsb
mov
addl
cs
fadds
fadds
sti
iret
pop
add
add
hlt
xor
jmp
pop
rcrl
repz
fidivl
mov
daa
jg
into
js
sbb
ja
in
push
test
push
push
xor
jno
test
lcall
out
daa
loope
dec
xchg
or
out
xor
shl
iret
xchg
xchg
sbb
sub
arpl
sti
fdivs
int
bswap
into
push
addr16
cwtl
out
cmpsb
fistpll
lods
das
pusha
xchg
add
decb
sbb
lea
daa
enter
xchg
sub
xlat
int3
add
xchg
mov
pop
imul
lods
adc
aaa
cmc
ficoms
push
mov
mov
cld
add
inc
andl
jae
repz
movsb
mov
fiadds
fiadds
and
neg
xor
aas
xor
adc
aad
mov
push
adcb
xchg
jl
stos
xchg
cmc
frstor
dec
jmp
scas
jne
inc
jae
mov
mov
push
js
sbb
and
xlat
push
repnz
dec
pop
mov
mov
jecxz
xchg
add
mov
adc
daa
mov
xor
test
fcomip
out
add
scas
pop
loop
or
shr
faddl
xorb
enter
ja
stos
xorl
rcll
out
dec
int3
push
xor
adc
mov
push
je
push
mov
or
mov
imull
in
ret
dec
and
add
cmp
frstor
divl
pushf
push
xor
divl
lret
shl
fdivrs
pop
jns
fimull
pushf
arpl
lock
push
and
shll
clc
sub
sbb
inc
out
pop
dec
pop
sub
mov
pop
push
sbb
xlat
shrl
pop
mov
inc
inc
inc
mov
or
xchg
pop
jne
xor
out
mov
pop
adc
out
movsb
int
and
int
test
pop
inc
mov
push
adc
sub
in
sbb
inc
sbb
mov
iret
sbb
fcomps
mov
dec
divl
test
jl
cmp
fwait
cltd
push
fcompl
rcrl
push
inc
xor
repz
out
jge
pop
frstor
or
dec
shr
int3
inc
das
xchg
xchg
pop
cmp
xchg
jge
lock
sbb
or
clc
add
ror
push
scas
cmp
les
xchg
mov
add
ja
scas
pop
loop
test
push
xchg
lret
sbb
psrad
call
sbb
out
jbe
gs
loop
popf
push
int3
sub
int
push
incl
pusha
stos
scas
lods
rolb
xor
push
gs
repnz
in
dec
pop
sbbb
cmc
test
cltd
push
jo
mov
pop
dec
aas
scas
pop
adc
adc
or
push
stos
pusha
mov
cmp
pop
ss
outsb
adc
and
lds
enter
mov
mov
les
aas
fisttps
ret
rol
lret
push
repz
sbb
scas
movsl
sub
push
pop
mov
outsl
lret
loop
mov
daa
sbb
add
xor
xor
cmp
mov
mov
in
add
arpl
insb
cmc
sbb
inc
out
rclb
cmc
ja
dec
mov
cmc
arpl
dec
outsl
aaa
sub
push
dec
jmp
sub
add
inc
popa
in
jns
aas
push
xchg
pop
ljmp
cmpsl
fistpll
test
mov
xchg
adc
or
and
je
cmp
adc
gs
int3
psubb
inc
pop
pop
adc
pop
outsb
add
ss
filds
xchg
mov
xchg
sbb
add
out
sub
cmp
inc
sbb
pop
mov
xchg
adc
and
mov
loopne
lock
mov
mov
pop
ss
scas
lcall
ja
pop
add
inc
std
popa
outsl
fiaddl
icebp
scas
in
dec
push
add
aaa
dec
and
jno
cmpsb
imul
sub
jnp
stos
iret
setl
cs
sti
xchg
xor
arpl
popl
ds
jecxz
into
popf
push
fsub
cwtl
mov
or
push
mov
mov
icebp
and
aad
into
mov
icebp
push
sbb
mov
inc
jmp
adc
popf
sub
mov
or
hlt
xor
xchg
xchg
mov
shll
es
xchg
xor
sti
adc
adcl
pushf
dec
jne
cs
movb
mov
loop
ret
push
dec
jg
pusha
cld
mov
test
push
test
cmp
ja
add
cld
incl
dec
into
mov
and
scas
out
insb
xor
popf
mov
xchg
ret
in
loopne
outsl
ss
sbb
inc
xor
mov
mov
mov
andl
mov
push
sub
shll
xor
scas
movsb
xor
sub
sub
repz
push
jno
push
repz
repz
sbb
sub
jbe
cmp
lret
lods
sbbl
fistpl
adc
jne
addr16
scas
dec
out
lds
inc
xchg
jbe
mov
aam
leave
xchg
or
cmpsb
xor
lcall
mov
or
addr16
mov
jno
rcrb
inc
hlt
sbbb
jle
push
xor
iret
ljmp
adc
pop
outsb
in
push
xchg
mov
mov
ljmp
dec
xchg
aad
in
iret
test
jnp
gs
push
dec
inc
add
fisttps
pusha
fcompl
sti
loopne
or
fistpl
inc
out
movsb
in
lods
gs
pop
outsb
stos
mov
xor
add
pop
lret
xor
out
mov
shll
div
ret
sti
jo,pn
ljmp
xchg
clc
test
sahf
push
ja
stos
cs
push
scas
mov
adc
sub
jbe
dec
out
dec
insb
in
ja
call
cmp
sub
cwtl
sahf
push
rcrb
jbe
aaa
pop
add
pop
sarb
subps
imul
mov
fs
and
inc
clc
test
insb
jbe
or
std
aam
sub
pop
sbb
push
pop
leave
cmc
pushf
shl
lahf
pusha
pushf
push
mov
and
scas
xor
ljmp
nop
jo
pop
push
scas
in
test
sbb
jns
mov
inc
orl
or
jmp
leave
dec
inc
xorb
test
sub
xor
clc
fmull
add
popf
ss
aas
icebp
scas
sub
fwait
push
in
jae
addr16
xor
fnstsw
nop
mov
insl
mulb
imul
sub
arpl
imul
pop
lahf
mov
repnz
mov
sub
fdivrs
add
cmpsl
fwait
push
mov
repnz
decb
sub
outsl
pushf
mov
jb
inc
mov
xor
mov
mov
ljmp
ret
mov
clc
inc
inc
clc
pop
scas
cs
push
mov
pushf
dec
inc
std
movsb
adc
jmp
mov
add
int
sbb
gs
lods
mov
movsl
xchg
lret
fistps
pop
mov
test
cmp
stos
sub
leave
lds
cmp
inc
aam
insl
cmpsl
xor
in
push
jae
sub
add
out
test
xlat
jge
cld
sti
movsb
lea
add
cltd
mov
outsl
insl
fidivrs
adc
lea
mov
mov
rcr
iret
mov
test
out
jo
fcmovnb
inc
insb
cwtl
lea
push
mov
sarb
shrb
pop
lahf
stc
mov
inc
test
dec
jl
mov
std
pop
xchg
push
dec
call
lds
scas
repnz
push
in
xchg
mov
adc
pop
bound
and
mov
addr16
add
jp
cmpsw
dec
mov
sub
lcall
movsb
xor
inc
and
lods
dec
push
fwait
loop
je
add
inc
andb
cmpsb
add
loope
or
or
loope
fdivrs
cmp
push
fmuls
into
into
sbb
loopne
push
xchg
pusha
cwtl
mov
enter
fstl
test
mov
or
mov
mov
xchg
jne
xor
mov
bound
arpl
nop
ror
xchg
mov
mov
xchg
popa
iret
mov
sbb
mov
cmp
daa
xchg
push
movsb
movsl
sarb
mov
cmc
cli
sbb
gs
add
int3
xchg
or
ss
adc
movsl
push
jo
xor
daa
cli
outsl
lcall
test
popa
loopne
sbbb
dec
out
pop
aas
mov
sub
mov
xchg
sub
test
rclb
cmc
cwtl
dec
xchg
testb
jge
loopne
movsb
sbb
shlb
adc
cmp
push
cmp
in
push
movsl
mov
sub
std
sub
mov
push
mov
out
xlat
mov
push
scas
xchg
sub
mov
or
pushl
sbb
jbe
ret
lret
cltd
adc
hlt
add
fstl
xchg
jecxz
out
xor
repz
lea
xlat
pop
ss
mov
rcll
xor
xor
into
xchg
jo
outsl
push
mov
mov
xchg
add
ljmp
mov
inc
jl
xlat
xchg
aam
leave
std
push
jae
cmp
rclb
jbe
jecxz
sbb
or
sti
fistpll
push
xor
mov
jecxz
xor
sahf
cmp
pusha
and
lret
and
scas
cwtl
loope
rcrb
cld
or
mov
in
fsts
into
decb
mov
mov
sub
jne
xor
inc
jbe
mulb
xor
ja
movsb
divb
jbe
pop
leave
mov
pop
test
ljmp
or
dec
or
sub
data16
jns
lcall
dec
scas
shr
cmp
xchg
mov
cmp
insb
cmp
jmp
arpl
lret
in
lret
movsl
daa
xorl
addr16
cwtl
mov
dec
test
aas
push
sbb
notl
adc
mov
push
cmp
fucomip
xor
sbb
mov
sbb
outsb
std
popa
cmp
sub
push
push
getsec
daa
sub
cmpsb
push
rep
enter
repnz
xlat
lods
xchg
xor
loopne
fwait
xchg
pop
lea
test
rorl
mov
sub
xor
sahf
dec
mov
arpl
adc
dec
sbb
loopne
negl
lcall
cmpsl
imul
int3
inc
xchg
jnp
stos
outsb
mov
mov
pusha
pop
sbb
mov
mov
pop
lds
dec
lods
sub
in
jle
jle
mov
loope
lds
mov
cmp
int
int
dec
mov
ss
leave
daa
sar
adcl
movsl
loope
add
cmp
mov
pavgb
dec
popa
or
jo
add
sbb
or
call
push
inc
jmp
loop
cmp
mov
pop
and
out
lods
fwait
add
mov
jmp
xchg
mov
into
pop
xchg
pop
mov
mov
lret
jnp
mov
cld
clc
pusha
insl
stos
or
jo
mov
getsec
mov
sahf
push
pop
cld
outsl
push
adc
pop
shlb
mov
pushf
frstor
cwtl
jns
fmull
mov
fnstcw
adc
dec
sbb
cmp
push
sbb
jp
cli
cmc
add
xchg
lret
xlat
flds
in
negb
or
add
test
jmp
jns
push
ret
inc
push
pop
popa
daa
sbb
scas
ds
sahf
adc
inc
jl
adc
mov
stos
dec
lret
loope
mov
mov
std
cmp
push
loope
jp
cmpsl
ja
adc
jnp
and
lcall
pushw
lea
mov
pop
lock
sub
int3
dec
shrb
stos
ret
lcall
inc
fs
pop
or
adc
fstl
sbb
addr16
sub
int
fisttpl
jmp
into
lds
mov
or
clc
xchg
jbe
sub
mov
mov
adc
into
in
xchg
inc
and
ss
movsl
scas
shlb
or
mov
push
xchg
mov
dec
fmull
mov
ss
cmc
and
jmp
sub
dec
arpl
test
inc
push
les
insl
cmp
jno
xor
sbb
xor
insl
add
xchg
add
aam
arpl
cs
ds
rorl
mov
jp
mov
add
cmp
imul
cltd
loopne
int
cmp
jo
icebp
xlat
pop
out
cwtl
pop
mov
mov
push
pushf
pop
add
adc
mov
cmp
pop
sbbb
lods
rolb
add
stc
mov
add
adc
int3
cmc
xchg
cmc
sbb
in
add
pop
jae
xor
clc
pop
mov
les
test
adc
pop
cld
jb
push
daa
lods
popf
inc
imul
xchg
insb
cmc
cld
icebp
pop
pop
pusha
dec
dec
mov
out
cmp
fdivrs
inc
or
jne
fstpt
mov
xchg
adc
pop
or
or
lcall
inc
ficoml
xor
ds
sub
inc
pop
mov
fs
xchg
jl
xchg
stc
mov
shlb
cltd
xchg
jns
mov
inc
addr16
pushf
pushf
out
pushl
ss
and
mov
cmp
cmc
shrb
and
mov
loop
add
jl
inc
dec
cs
jnp
sbb
out
dec
sub
xchg
sub
push
leave
pop
xor
xor
repnz
sub
dec
add
mov
push
clc
mov
mov
cs
or
inc
fstpt
xor
loopne
insb
pop
stos
mov
adc
jle
movsl
and
pop
insb
fsubp
arpl
adc
dec
and
xchg
pop
sub
fdivl
lcall
xor
mov
inc
outsb
mov
stc
mov
icebp
dec
xor
jecxz
aad
mov
xor
jno
adc
sbb
ds
popf
dec
pop
xchg
negb
jge
mov
mov
add
movsl
sub
clc
adc
jge
push
loope
stos
xchg
mov
adcb
sbb
je
add
clc
in
aaa
outsl
les
adc
lcall
mov
aaa
xor
out
xchg
idivl
sub
xchg
cmpsl
jp
rcrb
rcl
fsubs
mov
shr
sub
adc
push
ja
daa
adc
int3
and
sub
sbb
scas
jmp
mov
pop
cltd
xchg
inc
inc
not
data16
xor
pusha
dec
xlat
cmp
movsl
sub
sbb
ret
mov
loop
sub
or
aas
mov
jne
mov
xchg
sub
xor
cmpsl
mov
and
and
bound
lret
jmp
fldpi
add
sti
test
cmp
pop
mov
pushf
ret
push
push
out
pop
cmp
iret
mov
hlt
pushf
mov
out
sbb
iret
imul
movsl
ljmp
les
in
fwait
inc
dec
cltd
add
inc
outsb
add
pushf
sbb
sti
loope
std
sbb
pop
dec
sarb
xor
cltd
bound
adc
repz
loop
ret
pop
lea
aas
inc
ret
add
int
or
call
sbb
cmc
mov
xchg
jecxz
rolb
and
lahf
add
out
add
popa
lret
ret
ds
or
sub
cmp
test
mov
test
sub
jo
xchg
out
fsts
or
outsl
int3
ss
fcoml
int3
gs
pop
cmp
sub
fcmovnb
xor
insb
ja
sub
mov
or
ret
push
jns
aam
fisttpll
jmp
shl
pop
dec
jecxz
add
inc
in
jns
sahf
mov
lret
ds
push
inc
les
and
fcomps
inc
or
in
sahf
int3
jb
and
inc
mov
lods
add
pop
dec
ret
stos
push
xchg
fs
shrb
rcr
inc
adcl
imul
push
add
xor
push
mov
pop
push
jne
jb
vpunpcklbw
xchg
or
mov
mov
mov
gs
mov
orb
sub
mov
roll
fsubs
sub
and
inc
or
repz
mov
fdivr
xor
lcall
dec
pop
xchg
fcomi
fsubrl
shll
iret
inc
popf
in
adc
xchg
jo
mov
sti
lods
stos
sub
int
sbb
adc
jecxz
sbb
movsl
lock
insl
pop
inc
ret
xor
or
xchg
add
mull
mov
xchg
test
or
dec
shrl
xchg
je
jecxz
dec
push
adc
loope
in
dec
mov
pop
daa
push
dec
xchg
je
sub
movsl
adc
mov
jbe
mov
push
mov
jge
and
into
rorl
inc
jle
inc
fwait
mov
push
adc
test
test
and
and
rcrl
insb
lods
fisttpll
push
dec
and
xchg
mov
out
loopne
sbb
mov
stos
sub
fisttpll
int3
pop
pop
jmp
inc
sub
push
xchg
fistpll
bound
cmp
mov
jns,pn
xchg
icebp
aaa
mov
mov
subb
push
and
push
mov
fcompl
xor
mov
pop
dec
jmp
clc
mov
or
push
mov
fistl
fs
sub
pop
or
sub
adcb
or
jmp
pop
in
ret
cli
repz
loop,pn
cmpl
inc
pop
jb
in
push
and
add
add
mov
adc
xchg
sahf
push
in
dec
std
or
ret
xchg
push
dec
dec
jecxz
fs
cld
ficoml
sbb
les
arpl
mov
add
cmc
fdivl
shlb
and
sub
pop
xchg
rorl
jmp
mov
push
mov
sub
gs
test
dec
ds
adc
test
pop
das
leave
cmp
leave
es
mov
ljmp
xchg
das
movsl
sbb
lock
push
jge
push
push
mov
mov
test
test
pusha
pop
mov
gs
cmp
xlat
xor
mov
arpl
insb
sbb
std
mov
addl
data16
cwtl
cmp
xor
fwait
or
xchg
push
mov
xor
sbb
fwait
and
lea
test
loopne
cmp
or
mov
aam
jp
popf
fcmove
out
pushf
rcll
test
xor
lock
ljmp
call
adc
add
dec
xchg
jne
add
movsb
and
icebp
mov
popf
popa
ljmp
adc
repnz
jl
repz
repnz
adc
pop
fs
sub
adc
ja
add
mov
adcb
jg
arpl
sbbl
mov
repz
enter
jecxz
sbb
out
mov
es
push
sarb
mov
inc
aaa
xchg
mov
mov
and
jecxz
test
or
int
cmp
ljmp
fwait
mov
push
pop
push
popf
orl
dec
leave
arpl
or
and
xor
sbb
repnz
lret
cli
adc
sub
cs
xchg
ret
dec
sub
movsb
xor
jbe
lock
ja
insl
dec
bound
aad
inc
rorb
pop
mov
fwait
cmpsb
xchg
push
out
outsl
insl
mov
repz
sub
mov
and
mov
stos
addr16
sbb
pop
dec
pop
add
cmp
pop
xchg
sub
int
lods
loopne
mov
jns
lods
xor
pop
or
mov
mov
aad
pusha
xchg
mov
lret
iret
in
push
js
loop
adc
mov
bound
push
cmpsb
cltd
and
jno
add
hlt
pop
cvtps2pd
data16
jo
in
icebp
pop
mov
lods
rcrb
and
inc
jne
movsb
mov
arpl
hlt
adc
xor
sbb
inc
std
mov
dec
icebp
ljmp
xchg
xorl
movsb
movsb
stos
and
clc
out
xlat
pop
inc
jae
mov
push
in
dec
adc
sbb
sti
into
sbb
movsb
adcb
inc
out
in
test
aaa
cwtl
jnp
loope
xlat
std
add
jl
and
call
outsl
push
mov
cmp
mov
aaa
mov
xchg
fwait
cmc
stc
sbb
push
sbb
repz
mov
stos
arpl
and
fcompl
jbe,pn
clc
repnz
add
jae
lds
loopne
stos
test
cmp
mov
shrl
int
adc
add
add
jae
sti
in
call
ret
cmp
sbb
fsubp
into
cs
add
adcl
fsub
inc
push
lods
push
mov
xchg
sub
adc
inc
pushf
cmpsl
fincstp
pop
or
lods
sbb
mov
sbb
add
lcall
mov
inc
sarb
mov
pop
in
xchg
call
hlt
aas
ja
cwtl
jae
out
sahf
repz
sub
sub
enter
lods
lret
mov
into
out
call
lret
aam
mov
cwtl
jecxz
dec
xchg
mov
lock
or
adc
bound
sub
mov
fwait
push
mov
adc
test
mov
push
dec
mov
mov
int
fisubrl
jns
push
pop
cmpsl
loopne
in
sub
js
stc
mov
decl
fs
scas
sbbl
pusha
mull
xor
inc
div
in
test
add
add
and
addr16
pop
cmp
mov
and
inc
xor
loopne
cmp
cs
aas
adc
ret
cmp
add
xlat
xor
add
iret
jae
xor
add
in
lret
xchg
std
mov
xor
jecxz
hlt
lret
in
mov
mov
int3
push
ljmp
dec
push
lods
xorl
nop
sahf
mov
pop
pop
mov
into
in
sub
jle
push
lret
jbe
ja
adc
xor
insb
add
loope
mov
cmp
jmp
ss
mov
lahf
nop
xchg
in
xlat
lea
xor
xor
loop
sahf
mov
dec
out
mov
sbb
arpl
mov
push
jp
scas
xadd
jge
push
jo
dec
xchg
push
les
push
dec
sub
stos
or
in
fdivrl
in
sub
and
jecxz
xchg
jecxz
push
mov
enter
or
sub
mov
stos
push
scas
mov
pop
cwtl
inc
fists
ljmp
wrmsr
pop
cltd
mov
jns,pn
divb
push
jne
repz
inc
cmp
xchg
xor
jmp
pop
psllq
dec
mov
dec
xchg
pusha
push
aaa
sarl
lcall
bound
mov
lock
lods
jns
in
adc
movsl
mov
int
mov
xor
cmp
adc
push
enter
add
mov
loopne
pop
xchg
mov
pop
mov
pop
ja
sub
jno
div
cmp
mov
add
lret
nop
fistps
pop
fimuls
or
inc
scas
adc
xchg
int3
repnz
loop
out
test
mov
outsl
mov
das
pop
int
filds
outsl
sbb
mov
cld
stc
xchg
push
divl
jnp
inc
inc
sub
sbb
xchg
idivb
add
fwait
lea
inc
and
cmp
jg
xchg
mov
rorb
aaa
dec
cld
data16
int
cmpsl
jge
adc
clc
mulb
icebp
mov
pop
notb
cmp
mov
push
ret
push
xorl
cltd
xchg
adcb
adc
jl
xchg
sar
cltd
pop
fwait
imul
mov
inc
jnp
lahf
push
sub
mov
push
ja
ficompl
and
mov
nop
sbb
adc
mov
cmp
and
fisubs
cwtl
loope
lods
mov
daa
or
dec
inc
cwtl
pop
stos
in
sbb
imul
inc
lods
rorb
fcomps
lret
mov
sarl
adc
stos
and
mov
add
outsb
sbb
daa
xorb
jmp
dec
lods
icebp
push
xor
inc
aam
mov
cmc
pop
jae
dec
xchg
jns
xchg
xor
das
loope
push
add
pop
insb
add
adc
ror
ss
adc
cltd
add
sub
lret
mov
add
inc
jb
stos
scas
jns
movl
aas
add
test
adc
enter
lret
aam
jno
jmp
sahf
push
sub
es
cmpsb
add
out
add
adc
push
lret
gs
repz
mov
pop
frstor
xor
mov
insl
mov
mov
mov
dec
inc
cmc
push
inc
cmp
fistpll
sbb
aam
push
fistpll
lahf
adc
addr16
cmp
out
push
sahf
ret
movsb
or
sarb
mov
lret
enter
and
lea
push
lret
xor
lock
ja
das
push
add
imul
add
jge
adc
cmp
mov
ret
test
sub
or
mov
push
sub
loop
in
hlt
lock
stc
je
push
fimull
sub
mov
or
in
lahf
cmpsb
inc
out
inc
and
inc
fnstcw
adc
and
bound
pop
data16
outsb
inc
iret
lock
movsl
sbb
out
in
xorl
sbb
xchg
push
in
aaa
adc
loop
or
roll
mov
jnp
adc
jb
pop
into
adc
adc
leave
dec
sahf
je
jg
icebp
xor
mov
pop
rolb
lock
cmpb
scas
test
pop
lods
push
push
adc
repnz
ja
and
inc
cmp
mov
rcrb
scas
push
call
and
in
repz
inc
andl
jae
jmp
mov
je
pop
mov
push
loope
inc
lret
xchg
lret
pop
in
mov
xchg
fwait
or
inc
cmp
xor
pop
shlb
jl
ret
std
ret
in
push
iret
leave
fwait
repz
popa
jmp
push
adc
push
jecxz
mov
in
add
sbb
fisubl
fisubrs
outsl
mov
iret
pop
add
dec
mov
incb
push
pop
clc
ficoml
popa
bound
xor
mov
xchg
stc
mov
sub
fwait
push
std
mov
sub
jae
mov
inc
insl
sub
xor
cmp
out
mov
ljmp
stos
xor
xchg
scas
or
jb
rorb
int
xchg
sbb
dec
sbb
stos
xor
mov
mov
jecxz
xor
xchg
andl
mov
add
test
push
scas
jns
sub
pop
leave
inc
xor
xlat
pop
pop
sahf
lret
out
ret
mov
sub
push
dec
in
xchg
stos
lock
pop
mov
and
fwait
daa
into
hlt
stc
xchg
add
lret
xlat
push
xor
outsl
jmp
std
fwait
dec
test
pop
and
lcall
cmp
jmp
ds
mov
shlb
fnstenv
xchg
jge
and
adcb
das
loop
subb
cmpb
popf
dec
pop
dec
and
jno
aad
dec
les
add
cmp
inc
sub
and
jno
add
addr16
cmp
rcr
xor
inc
inc
iret
fcmovb
sub
ret
jo
dec
cmp
mov
push
xor
sub
pop
bnd
adc
lea
mov
or
out
lock
xor
or
inc
bound
ss
dec
out
enter
scas
xlat
push
add
jo
inc
adc
cmp
push
mov
loopne
xchg
test
out
lret
repnz
jns
push
and
mov
adc
mov
imul
adc
xchg
cltd
pop
jns
mov
lahf
jg
dec
mov
xchg
cmp
or
cmc
stos
mov
inc
push
imul
aam
fbstp
fadds
repnz
mov
sbb
incb
jp
add
insb
jb
or
mov
mov
leave
out
adc
shll
jecxz
data16
cmp
repz
or
jne
decl
add
xchg
xor
xchg
adc
loop
dec
negb
imul
loope
cld
icebp
addr16
fsts
aaa
cmpsl
mov
out
and
imul
cmp
popa
std
das
icebp
xorb
mov
cmpb
and
add
sub
push
jns
fwait
call
lea
xor
sub
out
into
shlb
pop
add
pop
mov
fcoml
enter
shlb
jae
out
lds
in
add
sub
sub
idivb
lock
sub
and
test
inc
push
pop
cld
add
insb
jns
mov
ja
mov
lcall
cltd
mov
xchg
jno
or
or
mov
xor
pop
sbb
stos
mov
and
or
out
clc
and
dec
inc
shlb
adc
das
movsl
jg
add
iret
pop
push
adc
cli
fwait
mov
scas
push
push
jmp
roll
pop
xor
out
negb
adc
iret
repnz
cs
lret
mov
aad
mov
lods
mov
or
fnstenv
shrl
mov
rorl
ret
test
or
popa
js
adc
dec
mov
mov
push
in
mov
xchg
fs
divb
insl
ds
cwtl
push
add
ficoms
dec
sub
cltd
test
add
incl
movsl
push
dec
sti
lock
add
push
or
sub
bound
or
xlat
or
or
sbb
or
xchg
add
fwait
dec
addr16
push
imul
jecxz
cld
rcrl
stos
jbe,pt
push
lret
fwait
cmpsl
add
ffree
idiv
pop
sub
data16
push
aas
inc
xchg
sbb
loopne
in
pop
jl
clc
repnz
stos
mov
daa
sub
inc
and
push
lods
mov
push
or
repnz
lods
cmc
push
and
add
int
xor
push
dec
fiadds
mov
imul
xor
stc
andb
cmp
test
mov
add
gs
push
push
ror
jge
xchg
out
lcall
outsb
je
lds
ljmp
sbb
decb
xchg
adc
mov
xchg
out
jg
fcmovnb
add
dec
inc
push
paddusb
insl
sti
loop
movsl
sbb
ja
popa
mov
fwait
jg
outsb
pop
jne
jae
int3
cmc
jns
adc
mov
outsl
inc
pop
shll
pop
jb
pop
jo
cmp
loop
cmpb
cwtl
sbb
loopne
fwait
aaa
jmp
pusha
xchg
jno
mov
inc
lods
or
out
movsb
fwait
dec
xchg
mov
cmpsl
faddp
adc
mov
jb
mov
mov
sub
mov
push
aas
sub
sub
fucom
jp
xor
pop
gs
jo
mov
jnp
loopne
inc
fwait
adc
icebp
daa
and
aaa
jecxz
popf
mov
fsub
aad
ret
dec
outsb
mov
int3
sub
enter
add
push
sbb
leave
jb
pop
sbb
into
lds
repnz
repnz
jae
mov
dec
mov
divl
arpl
dec
pop
push
xor
bound
hlt
mov
ja
pop
pop
negb
addl
or
ljmp
cmpsl
out
add
cmp
or
les
aad
stos
xchg
aad
xchg
mov
xor
cmp
test
icebp
push
mov
xor
dec
cmp
push
pop
outsl
adc
fsts
adc
pushf
movsb
popf
lock
add
int3
pop
mov
xchg
adc
sub
jbe
push
jle
and
test
sarl
jbe
jno
push
sub
inc
push
dec
xlat
aaa
jnp
lahf
cmpsb
test
add
ss
adcl
dec
in
cmpl
shr
in
leave
sub
mov
or
test
sbb
adc
insb
mov
mov
sbb
cmp
cmc
mov
mov
jmp
test
data16
aam
xchg
xor
outsb
adcl
ss
and
xchg
sbb
push
clc
cmpsb
push
mov
add
lock
sub
push
negl
sub
js
xchg
popf
push
mov
sbb
mov
or
and
aaa
mov
mov
mov
popf
clc
push
jg
sahf
pop
inc
fsubrl
push
cmp
cmpsl
lcall
and
int3
test
sar
test
ljmp
jge
push
push
data16
jbe
mov
push
cmp
add
mov
inc
and
dec
test
xor
imul
mov
or
mov
xor
imul
fcomps
add
sbb
pop
cmp
ja
mov
mov
pop
scas
dec
push
mov
dec
mov
in
subb
and
inc
leave
mov
sahf
iret
ljmp
mov
repz
ds
push
mov
ficoms
xor
orl
repnz
pop
push
repz
mov
xchg
xlat
test
enter
xlat
pop
ss
xchg
or
repz
or
mov
jne
fcomip
mov
xlat
jbe
jp
movsl
cmp
and
sti
and
jb
icebp
dec
ret
cwtl
xorl
fldl
inc
push
adc
jg
adc
js
or
push
mov
call
test
sub
sar
repz
cmp
lahf
sub
aas
inc
dec
in
push
push
sarb
sub
or
pop
and
mov
pop
xor
push
in
out
hlt
xor
cwtl
sub
call
xor
adc
inc
push
xor
int3
movsb
ss
out
jo
add
sbb
fs
bound
push
pop
shlb
add
add
xchg
out
imul
or
push
loopne
inc
fwait
jo
std
icebp
xchg
call
lods
pop
fwait
sbbb
jbe
out
icebp
repnz
loopne
dec
mov
inc
iret
scas
repz
push
inc
inc
pop
mov
add
add
push
test
adc
sbb
mov
add
xor
sub
testb
sub
xchg
mov
sahf
mov
dec
xchg
rcrb
xor
hlt
pop
mov
lods
fiadds
test
cmp
pop
xor
add
fldt
dec
dec
and
push
movsl
outsb
add
out
outsb
push
sbb
je
pop
aas
jbe
nop
xor
cmp
jb
insl
sub
fisttpll
push
add
std
movsl
push
movsl
mov
cld
iret
adc
add
xchg
test
bound
jnp
mov
or
filds
sti
push
insl
inc
orl
cmc
or
push
imul
jmp
rcrb
jg
ret
ds
xor
add
ror
dec
and
adc
xchg
out
out
arpl
movsl
loopne
mov
or
cmpsl
movsl
test
das
fcom
insb
inc
into
mov
sub
sbb
dec
add
mov
fisttps
into
add
xchg
inc
aaa
inc
sub
add
or
xchg
cmp
or
test
xchg
inc
jno
xor
and
movsb
inc
test
test
xchg
fstl
inc
shrb
xlat
in
dec
mov
sbb
in
data16
xchg
mov
sub
mov
add
fwait
jmp
jmp
lret
xchg
jne
jl
xlat
mov
jae
xchg
iret
mov
fdivs
divb
rcrl
sahf
cmp
xor
ljmp
mov
in
push
cmp
movb
and
loopne
into
scas
out
imul
mov
mov
sbb
mov
sbb
mov
das
test
call
xor
and
shll
adc
fadds
ja
movsb
push
cmc
lods
and
mov
fwait
icebp
pop
idivb
pushl
push
adc
aaa
mov
xor
fcomps
jae
nop
outsl
adc
inc
xchg
add
mov
fsincos
rorl
ljmp
sahf
adc
loop
dec
fildll
inc
divl
push
push
aad
mov
mov
pop
movl
pop
pop
lahf
add
scas
sub
inc
jb
lods
lock
dec
sbb
xor
jmp
and
jle
ficomps
frstor
jno
sub
rol
negl
or
ds
pushf
sbb
cwtl
lcall
loop
cmp
xor
jae
xchg
mov
mov
inc
inc
push
dec
test
xchg
pop
int
mov
stos
push
push
in
arpl
and
adc
xchg
jno
mov
xchg
mov
jecxz
and
cli
outsl
inc
pop
fucomi
jp
call
inc
ret
dec
sub
xor
push
and
cmp
or
xchg
lcall
pop
test
adc
ret
sbb
jbe
outsl
lahf
pusha
cmp
sbb
add
ficoml
in
loopne
jg
in
fstpt
cltd
mov
and
mov
push
push
arpl
enter
imul
adc
mov
ret
in
cld
lods
mov
out
in
jne
fwait
dec
adc
mov
dec
mov
mov
sbb
mov
in
inc
test
cmp
cmpsb
add
inc
out
gs
mov
cmpsb
out
enter
cmpsb
lock
adc
in
aam
add
xor
adc
bound
lock
mov
orl
pop
xchg
mov
xchg
int
mov
pop
or
cmp
jecxz
sbb
clc
fwait
sahf
pop
mov
xor
push
out
or
movsl
ret
xchg
fildll
xchg
jo
lods
or
pop
push
pop
lret
pavgb
fistps
inc
ficoms
lret
insb
fimull
push
inc
inc
xor
or
pop
cld
js
jge
cmpsl
insb
adc
hlt
cmp
ds
or
fwait
mov
jne
mov
je
pop
jp
and
mov
xchg
and
and
and
addl
rcl
mov
ljmp
cs
jg
pop
ret
mov
pop
std
and
cmp
das
cs
cmpsb
and
mov
mov
xchg
icebp
xor
int
and
push
and
orl
andb
push
ret
lods
adc
add
out
ss
mov
daa
dec
pop
test
jle
rclb
inc
in
or
cmp
fldl
and
sub
in
push
lret
cmpb
cmp
push
aam
fdivs
jb
xchg
add
xor
aam
clc
arpl
fiadds
and
in
ljmp
jns
inc
xchg
push
repnz
jmp
leave
mov
adc
lret
or
leave
jnp
push
fsubl
bound
daa
dec
and
jbe
and
push
sbb
cmp
ffree
push
xchg
cwtl
mov
sub
stos
cld
clc
dec
mov
mov
stos
stos
rolb
scas
pop
sahf
or
hlt
arpl
adc
adc
shll
in
clc
add
mov
mov
dec
add
mov
cmp
mov
cwtl
and
sbb
push
jp
mov
sub
icebp
rolb
stc
adc
hlt
outsb
mov
idivl
lods
popa
das
xchg
mov
xor
aad
fnstcw
sbb
cltd
stc
push
or
filds
pop
add
mov
add
aaa
jmp
xchg
mov
in
cs
outsl
in
stos
leave
das
fucom
insb
sbb
nop
cmp
inc
int3
mov
mov
imul
xchg
ret
cmp
stos
or
cld
dec
dec
loop
pop
sub
in
mov
sbb
mov
jmp
inc
mov
inc
add
mov
imul
or
mov
pop
and
daa
sub
or
adc
jnp
sbb
insb
mov
mov
cli
jns
cmp
arpl
xor
sub
lret
stos
and
insl
jbe
andb
xor
clc
mov
mov
push
adcb
fnstenv
push
jno
mov
lret
les
sbb
jae
mov
mov
lods
mov
add
mov
in
pop
js
jl
je
jbe
and
outsb
jne
xchg
xlat
call
rcpps
and
mov
push
in
jl
lods
leave
adc
push
adc
adc
pcmpgtw
xchg
je
shrl
add
cmp
inc
je
out
shl
pop
ret
popa
cli
jb
add
xchg
jge
mulb
pushf
out
ljmp
mov
xor
mov
xlat
xor
push
stc
push
push
cltd
cmp
cld
jb
dec
adc
ja
and
fs
dec
push
rol
pushf
lcall
mov
sbb
out
lea
insl
fldenv
dec
mov
scas
or
push
sub
fwait
lods
inc
stc
fwait
adc
data16
lret
dec
cmp
add
imul
pop
nop
lret
jo
push
sti
and
push
lds
cld
fcmovnbe
mov
repz
xchg
repnz
daa
pusha
jp
aaa
jae
arpl
loopne
fcmovnu
test
iret
cmp
mov
int3
jae
les
mov
loop
fwait
adc
add
mov
push
out
test
lret
incb
and
dec
mov
adc
add
add
and
stos
jecxz
cs
sub
pop
sahf
mov
test
mov
and
xchg
insb
jns
testl
push
bound
mov
fsubrs
shlb
sub
fnstenv
movsl
cwtl
popf
push
fistps
lods
lret
in
pop
int
test
cmp
inc
loopne
push
cwtl
jbe
fidivl
mov
clc
pop
movsl
and
pop
or
add
mov
call
add
js
int
pop
scas
or
hlt
xor
out
in
cmp
mov
insl
push
pop
loopne
dec
cli
xor
inc
mov
lods
push
inc
lcall
shr
and
mov
add
fldenv
repnz
in
mov
adcb
in
out
arpl
inc
aad
mov
das
jmp
inc
xchg
push
sub
adc
jnp
mov
fcmovbe
cli
push
icebp
mov
xchg
insl
mov
outsb
mov
mov
dec
sbb
int
insl
test
jno
pop
xor
or
ret
pop
inc
jne
inc
daa
jnp
movsb
aad
jmp
adc
inc
xchg
hlt
fldt
sti
or
aas
cmp
imul
stc
loop
fwait
shl
ret
sub
imul
or
inc
mov
and
cli
and
dec
dec
adc
shlb
pop
add
xchg
mov
sarb
cmp
sub
xchg
jge
jg
jbe
fidivl
pushl
lret
daa
cwtl
daa
sbb
push
shrl
add
pusha
xor
lret
in
xchg
push
dec
lea
and
sar
mov
cld
xchg
and
adc
or
push
jbe
rolb
pop
sub
int
pop
les
pushf
mov
aad
jnp
cmpsl
dec
ror
ror
jno
adc
cmp
mov
mov
and
dec
sbb
push
test
push
mov
fcoml
cld
push
loope
mov
lcall
jl
dec
cli
call
out
inc
aad
iret
notb
adc
lret
xchg
dec
push
pusha
rol
fs
mov
pushf
inc
pop
lods
pusha
shrl
mov
loopne
adc
outsl
jge
sbb
div
add
and
mov
mov
sub
fiaddl
enter
cmp
loopne
ljmp
repnz
js
iret
ljmp
jo
mov
loop
ficoms
jecxz
test
out
test
inc
int
sbb
ficoml
sbb
mov
fs
sti
popf
jb
movb
inc
mov
ret
fwait
cmp
mov
xchg
pusha
pop
and
smsw
dec
movsb
and
aaa
xchg
or
rol
add
negb
add
in
aad
idivb
data16
data16
aaa
add
add
nop
cmp
push
gs
fstp
or
inc
and
test
dec
jecxz
addr16
mov
loop
cltd
into
cmp
in
pop
in
or
stos
ljmp
insl
cmpsb
popa
test
dec
incb
xor
push
xor
push
xlat
pusha
insl
xor
data16
xchg
cmpb
add
ja
adc
imulb
cmp
cmpsl
or
jb
es
mov
imul
daa
jmp
mov
pop
cld
fs
adc
inc
add
int3
cwtl
xor
inc
call
sarl
mov
jb
int
lret
adc
aaa
adc
xlat
mov
or
in
or
lock
aas
ss
xor
sbb
push
or
hlt
cmp
and
aad
hlt
shll
sbb
sbb
pusha
inc
xlat
ss
add
mov
loopne
sbb
and
mov
mov
jmp
push
sbb
repz
cltd
jo
nop
mov
adc
cmp
inc
lea
sub
sbb
inc
jle
ja
shrb
adc
cmp
lds
lds
lahf
ljmp
dec
loop
dec
and
pushf
add
xchg
test
or
push
mov
lock
fisttpll
adc
xchg
mov
les
popf
pushf
push
lds
mov
xchg
popa
das
mov
ja
jae
mov
sub
push
mov
bound
pop
imul
or
shll
pop
cmp
xchg
lock
repnz
fsubl
ret
inc
test
pop
shll
fadd
cwtl
aaa
mov
int
jmp
mov
jns
fildll
xlat
push
fcoms
loope
repnz
stos
and
lcall
mov
shrl
xchg
jo
das
sbb
int3
insb
jge
dec
pushf
push
gs
pop
imul
and
adc
sbb
aas
push
pushf
push
cs
les
mov
xchg
repnz
lcall
sbb
fldt
lret
jg
jl
mull
stos
xor
push
add
xchg
gs
scas
or
and
dec
fbld
test
out
hlt
divb
add
push
rcrl
popf
stos
xchg
adc
xor
mov
or
test
jo
mov
int
cmc
stc
xor
push
js
and
xchg
insb
enter
or
sbb
push
xor
jbe
pop
jp
lcall
add
mov
les
push
jg
pop
mov
frstor
sub
lea
cmpsb
loopne
fdivrs
mov
movsl
cmp
gs
inc
aad
or
or
scas
pop
data16
test
mov
and
mov
add
jmp
and
lea
jg
jno
mov
jecxz
push
orb
inc
ljmp
mov
inc
test
outsb
test
ret
jne
mov
jno
hlt
popf
jp
iretw
push
leave
jmp
mov
lds
dec
aad
movw
jo
scas
and
repnz
push
repz
and
fdivr
dec
stos
int3
sbb
ljmp
sbb
imul
or
sub
ds
stos
in
mov
add
outsl
jmp
out
inc
mov
scas
andb
cmp
push
int
out
jg
outsb
cltd
jmp
push
add
sub
pop
inc
adc
movsb
movsb
mov
mov
scas
push
not
pusha
sub
incl
in
xor
iret
jg
subb
dec
rol
mov
fsubrs
xchg
or
lods
pop
stc
pop
es
sti
aam
jmp
scas
fisubrl
leave
popa
lcall
loopne
stos
cmp
int3
cmc
jmp
iret
imulb
pop
xchg
cmp
adc
test
mov
stos
jle
outsb
into
pop
or
mov
stos
int3
push
mov
jb
mov
lock
adc
or
add
lret
jecxz
dec
aas
mov
lcall
psrld
push
or
dec
sub
inc
push
sbb
push
push
pop
dec
sbb
add
adc
add
xor
aad
xchg
dec
mov
cli
cmp
pop
je
out
mov
xor
adc
lret
sub
xchg
in
sti
jae
pop
outsl
mov
mov
dec
daa
in
xor
fdivrs
xchg
nop
sub
lcall
jp
mov
ret
insl
jne
mov
repnz
pop
push
mov
sub
daa
lods
call
sar
jno
andl
stc
cs
sub
lock
out
shrl
imul
sub
rorl
cmpl
sbbl
jg
inc
insb
push
shrb
push
push
leave
cmp
hlt
mov
xchg
orl
mov
xchg
or
inc
pcmpeqd
jle
movsb
imul
adc
jne
adc
sub
push
xor
cwtl
fildl
out
loopne
es
inc
rcl
mov
pushf
dec
cmp
dec
adc
rcl
fmul
aaa
jmp
dec
cmp
jl
or
and
out
ds
lret
fbstp
dec
loopne
sahf
push
lds
mov
adc
sub
psllq
in
or
loope
hlt
xchg
shll
aaa
pop
rcrl
sbb
scas
cwtl
or
jnp
adc
enter
adc
xchg
pusha
mov
fs
aaa
jnp
lret
loopw
ds
adc
adc
out
add
inc
ja
adc
inc
scas
je
xchg
cmp
dec
jns
jmp
mov
mov
sub
inc
nop
push
test
jnp
data16
xchg
cmp
ja
pop
addr16
xchg
xchg
mov
pop
and
push
xchg
inc
adcl
imul
sbb
pop
std
xchg
cmc
push
xor
pushf
aas
aaa
nop
stc
mov
lret
mov
mov
cmp
xchg
fldenv
scas
mov
cld
insb
or
sbb
jle,pt
sbb
movsl
jg
sahf
sarl
jmp
mov
push
fidivl
adc
sbb
popf
cmp
js
jae
sar
loope
rorl
mov
jg
add
jno
sbb
xlat
data16
je
cmpsb
inc
add
cmp
faddl
fsubl
mov
mov
pop
or
lea
ret
stos
cwtl
dec
push
mov
sti
or
mov
leave
jle
lahf
loope
add
sub
xor
scas
repz
scas
mov
lds
scas
xlat
dec
aaa
and
mov
lcall
in
mov
mov
xor
fmull
inc
sbb
pop
idivb
std
sbb
stos
dec
pop
lcall
push
shlb
adc
js
das
dec
or
cmc
push
lds
mov
mov
fxch
pop
xor
sbb
inc
outsl
imul
ficompl
inc
mov
out
cmp
iret
arpl
sub
inc
leave
lods
sub
xchg
mov
sub
test
mov
xchg
push
pop
lds
or
sti
mov
int
mov
sub
jg
int
push
aad
and
or
adc
xor
inc
push
lret
xor
pushf
repnz
nop
cmp
loop
mov
xor
push
bound
sbb
dec
es
mov
or
js
xchg
mov
loope
lods
ja
scas
xchg
aam
arpl
and
fdivs
mov
sub
jle
loop
ss
or
cld
jl
das
xor
std
idivl
dec
cld
loopne
test
daa
cld
jno
faddp
add
cmc
mov
andl
lods
mov
xchg
mov
icebp
sbb
arpl
out
mov
jnp
call
jns
mov
loope
dec
adc
push
or
and
sbb
pusha
popa
test
shll
or
lock
aaa
inc
clc
xchg
cmp
xchg
push
je
jmp
pop
adc
fs
jle
push
jecxz
mov
aad
sub
call
push
push
jbe
std
lret
loopne
pop
pop
xor
js
pop
loopne
mov
repz
mov
mov
and
ss
icebp
std
fimuls
int3
mov
xchg
aas
ja
add
out
sti
popf
cli
push
imul
out
mov
das
ret
xor
ja
dec
adc
std
lds
sbb
es
sbb
dec
and
insb
cmp
jl
icebp
out
sub
mov
jns
and
jmp
mov
dec
sub
push
inc
lods
adc
pop
fs
sbb
in
and
lahf
rcrb
push
cmpsb
jns
int
scas
or
stos
ror
stos
mov
sahf
xor
mov
adc
cli
lods
icebp
cld
sbb
pop
enter
scas
outsb
aad
add
cmp
lds
jne
std
mov
shr
pop
pop
jp
adc
jp
jae
mov
ss
dec
dec
mov
adc
push
mov
scas
cmp
fwait
lods
sub
out
testb
cmpsb
xchg
enter
xor
sbb
mov
cmp
xor
jae
xchg
mov
adc
dec
jbe
mov
fdivrp
or
push
inc
cld
out
pop
shlb
scas
mov
mov
sbb
cmp
imul
mov
inc
sub
aam
outsl
pop
adc
and
shlw
cmp
ljmp
push
adc
fs
dec
xlat
fs
rcl
int3
popf
out
sub
dec
clc
add
arpl
add
or
mov
into
ljmp
out
in
sahf
cmc
dec
xor
lret
pop
xor
mov
xchg
fcom
mov
addb
mov
mov
jnp
scas
je
nop
push
in
mov
test
aam
cmc
pop
fidivrs
jle
cmc
dec
loop
stos
hlt
adc
and
jp
xchg
cmp
add
push
pusha
jne
fs
jp
scas
clc
iret
roll
mov
jmp
xlat
cmp
jl
out
popf
shr
out
outsb
in
mov
in
xor
in
inc
xlat
scas
mov
repnz
ret
inc
push
pusha
in
test
and
pop
imul
push
imul
mov
xor
or
sbb
push
lahf
pop
pop
in
loopne
jno
jne
jle
mov
mov
daa
leave
es
xchg
pop
adc
cmc
fdivs
repz
test
mov
rcrl
adc
scas
sti
lock
shll
xchg
test
and
push
movsb
xor
lods
or
cwtl
aam
jo
ror
lods
fwait
push
loopne
scas
int
cmpsb
mov
in
mov
mov
xor
mov
jle
ja
and
mov
sub
call
ret
cmpsl
shll
jge
pop
ja
loope
and
les
in
scas
push
stos
dec
xor
sbb
jl
sub
xor
jb
xor
scas
add
icebp
je
add
inc
xor
add
in
inc
sbb
dec
mov
jl
pop
jl
add
cwtl
lock
xchg
aam
cmp
push
flds
mov
push
mov
das
aaa
testl
sbb
enter
sub
data16
dec
jns
mov
imul
das
in
repnz
or
adc
jo
ja
inc
test
add
inc
aaa
and
test
or
jmp
add
mov
lods
loop
sbb
hlt
stos
inc
std
cmp
fstl
jl
add
add
sbb
xor
jo
aad
or
popa
xor
add
insb
mov
shll
iret
sbb
andl
sub
and
adc
push
cmpsb
out
nop
xchg
movq
pop
pop
xchg
addl
pushf
adc
jns
int
cmp
lret
cmp
jno
adc
push
push
addl
std
pop
stos
mov
lock
leave
lret
movsl
jns
mov
aam
ret
xchg
or
popa
lods
xor
add
out
loope
insl
pusha
adc
mov
inc
adc
repz
add
cmc
or
and
jmp
mov
hlt
mov
pop
imul
mov
xchg
pop
mov
call
or
xchg
dec
out
push
sub
out
push
inc
jno
sub
xlat
cwtl
jo
push
xlat
je
xchg
hlt
mov
pop
xor
stos
aaa
jg
mov
lea
adc
iret
dec
dec
mov
icebp
or
mov
jp
or
inc
inc
fwait
ljmp
and
ret
stos
andb
andl
lods
ljmp
adc
inc
in
mov
and
rcrl
lods
cli
push
popf
pop
xor
int
in
adc
fildl
jb
push
push
iret
or
cmp
jb
and
mov
xchg
pop
mov
ljmp
popa
sti
push
fbld
fnstenv
out
sahf
mov
push
push
call
mov
inc
scas
jbe
out
or
loopne
fsub
test
or
int3
icebp
xchg
into
jmp
or
icebp
pop
dec
push
gs
mov
mov
fcompl
jmp
popa
add
fsts
push
fldl
jne
popf
adc
mov
in
jle
and
shlb
in
add
or
jae
lret
pop
fidivl
cmp
imul
enter
into
jge
les
pop
cmp
sbb
sub
cmp
sub
loopne
insb
cmpsb
or
xlat
dec
ret
out
sub
adc
xor
inc
enter
into
lods
ss
sub
test
ret
fisttpll
mov
sahf
xchg
jle
push
or
sahf
and
push
js
cmp
xor
psubd
test
ds
dec
xchg
ret
popa
paddd
inc
mov
cwtl
or
es
xchg
sub
mov
mov
jle
cwtl
xchg
xlat
mov
jecxz
outsl
jbe
leave
add
popa
jmp
fsub
scas
lcall
shl
push
pop
push
sbb
push
hlt
sub
mov
inc
mov
xchg
cli
or
loop
mov
fs
adc
out
push
cmpb
test
dec
push
mov
mov
or
xorl
fisubs
cmp
add
inc
jmp
push
mov
jno
lahf
loop
out
dec
xchg
push
test
or
sbb
popf
ret
push
ja
lea
into
mov
or
xchg
movd
jecxz
repz
std
je
push
pop
lcall
xchg
jae
and
dec
sbb
arpl
outsl
lcall
fnstsw
add
pop
sub
jmp
daa
push
and
jg,pt
mov
out
jno
lcall
or
adc
enter
dec
pop
lret
fistpl
pop
sahf
fwait
imul
sbb
xor
inc
mov
icebp
loopne
lods
rcll
mov
fwait
lahf
and
xchg
jl
cmc
xchg
rcll
mov
test
dec
push
hlt
jae
sbb
insl
popa
lahf
mov
sub
sbb
jae
andb
fsub
sub
mov
adc
mov
mov
and
leave
sub
jne
and
out
adc
cld
sub
popf
mov
lock
adc
aam
ljmp
in
loope
or
push
push
jecxz
int3
xchg
push
mov
add
int
cmp
dec
lds
std
mov
cmpsl
sub
aas
mov
mov
push
adc
lods
and
and
push
lock
or
insl
popa
cmp
fs
out
dec
mov
mov
pop
je
inc
sbb
add
aad
pop
dec
and
mov
sbb
sbb
mov
cmc
jp
xlat
push
add
lahf
les
cmp
stos
dec
in
jmp
sub
je
jp
push
xchg
mov
cld
mov
mov
xor
jno
adc
clc
sbb
pop
or
gs
and
in
inc
aaa
add
jmp
add
lock
pop
lds
sarl
mov
jbe
adc
dec
cs
movsl
ljmp
inc
outsb
mov
adc
xchg
jl
sbb
jbe
inc
loopne
pusha
sahf
psubusw
insb
xchg
pop
cmc
mov
aad
xlat
jmp
out
lea
insl
inc
dec
loope
push
jg
or
dec
scas
mov
shrb
push
das
inc
cwtl
sbb
testl
mov
push
out
mov
dec
jle
iret
mov
ret
mov
out
sti
mov
jle
xchg
mov
sbbb
cmc
jns
cld
mov
test
fnstsw
fisttpll
hlt
inc
sub
pop
hlt
push
pop
mov
ss
sbb
fldcw
ja
mov
mov
sbb
push
bound
jmp
test
adc
cmpsb
jg
cmp
jns
popa
test
outsb
repnz
jnp
cmp
jno
les
repz
xor
je
pop
jle
jns
push
push
xlat
mull
stos
pop
and
adc
in
in
bound
xor
push
enter
mov
mov
mov
jne
and
sarb
sbb
lret
xchg
sub
xor
ljmp
push
rcrb
xor
mov
nop
cmp
xlat
adc
push
adc
pop
sbb
pop
fmulp
sbb
sbb
jmp
adc
stos
cmpsl
push
xor
or
xor
mov
int
rcr
adc
int
lods
inc
xchg
mov
xor
outsl
aam
jno
cwtl
int3
out
xor
out
gs
jecxz
jb
cld
pushf
or
push
push
lahf
hlt
stos
pop
xor
mov
xor
cmp
mov
add
and
inc
push
cmpb
bnd
xor
inc
pop
jb
fs
jns
add
pop
mov
xchg
adc
adc
xchg
lret
pop
sub
push
call
mov
cmp
or
mov
sbb
sbb
push
adc
lods
ret
add
push
dec
add
repz
mov
cmp
cmp
repz
add
cmp
sbb
mov
push
push
push
sbb
test
dec
arpl
adcl
fisttps
push
pop
xor
nop
cli
mov
mov
mov
push
and
into
addb
push
cmpl
sbb
aaa
dec
insl
inc
push
pop
dec
cmpl
movsl
cmp
and
into
pop
divb
dec
negb
stos
and
iret
pop
aam
or
inc
mov
pop
faddl
jno
xchg
in
inc
pusha
dec
dec
cmpsl
dec
in
xchg
cmp
into
aam
roll
rcrl
or
inc
daa
push
fyl2xp1
xchg
pop
pop
lret
call
dec
loopne
sub
out
cwtl
fyl2x
cmpsl
mov
inc
dec
mov
rclb
jo
fs
jg
cmp
aaa
popf
ljmp
das
movsb
insb
mov
lahf
pop
cs
dec
add
jmp
xchg
jbe
jp
jl
sub
test
xchg
iret
xor
sub
jbe
out
mov
test
data16
lcall
pop
sub
pushf
adc
jo
push
mov
xchg
xchg
push
mov
dec
out
mov
mov
pop
mull
cmp
cmp
push
rcrb
mov
jmp
lock
sbb
mov
aas
pop
or
stc
xlat
xor
subb
repz
pop
sub
test
push
mov
xchg
mov
outsb
sbb
pop
cmp
fnstsw
daa
mov
fadd
push
jl
popf
sarl
cmp
shlb
xchg
rcll
push
push
notl
mov
fisttpll
mov
test
sub
sub
test
out
xchg
mov
dec
push
jae
adc
cwtl
sub
xchg
mov
out
push
pop
stc
rcrb
fs
mov
inc
cmpsl
or
xor
aam
dec
jg
or
sbb
lret
fisubrs
int
ss
cmpsl
add
inc
fists
loope
cmpb
dec
pop
mov
mov
rorl
fisubl
ss
and
inc
stc
sub
or
jnp
ss
outsl
out
adc
fs
les
push
das
sub
xchg
in
push
adc
fsubrs
push
jno
xchg
adc
inc
mov
dec
into
push
stos
xor
and
inc
lods
mov
adc
jns
loope
jb
pop
xchg
loopne
push
cwtl
add
sti
add
insl
mov
push
dec
inc
sub
int
outsb
xchg
push
jne
test
xchg
pop
xor
cmc
mov
mov
int3
pusha
push
push
sub
stos
sti
push
or
add
xchg
mov
out
sbb
and
xchg
mov
sti
inc
or
inc
push
gs
call
jp
daa
aas
jmp
shrb
rcrb
adc
jns
inc
sub
lret
pop
aaa
insl
cmp
xchg
repnz
insl
dec
lahf
int3
fiaddl
or
add
cmp
mov
xchg
sub
jl
inc
divl
mov
fstp
push
sub
icebp
lret
shrb
aas
into
push
mov
push
xchg
xor
and
jb
xchg
dec
lret
mov
xor
inc
cltd
jecxz
mov
sbb
rol
test
in
test
adc
in
lahf
jle
pushf
into
out
decb
sbb
xor
push
mov
cs
pop
out
loope
and
mov
shlb
pusha
cmp
fs
jbe
inc
aam
ja
shrl
imul
nop
addr16
jg
cmp
icebp
push
add
xlat
xchg
loopne
xchg
pop
sub
shlb
and
mov
decl
ret
shll
rcl
ret
out
loop
fnstcw
pusha
stos
rcrl
or
bound
pop
cmp
repnz
into
popf
and
insb
call
sbb
sub
mov
sbbl
aas
xchg
mov
or
leave
fildl
push
mov
movsl
ret
clc
adc
insl
add
cltd
repnz
xchg
arpl
int3
jge
decl
rcrl
fstpt
sahf
or
fs
cld
push
cmc
sbb
je
scas
mov
aas
dec
xchg
mov
sbb
in
jge
push
push
mov
pop
shlb
int3
nop
into
and
xchg
repz
aad
mov
ds
jle
loopne
imul
dec
push
jbe
sbb
sbb
push
pop
xchg
pop
mov
iret
ret
cmp
popa
jle
pop
int
loop
dec
decl
dec
mov
pop
mov
scas
cmp
push
xor
rclb
leave
sbb
repnz
mov
mov
fstpl
js
jle
or
push
into
push
scas
sar
fistpll
pop
sbb
inc
in
lods
mov
imulb
cwtl
add
inc
xor
in
shlb
int
nop
dec
fbstp
arpl
adc
imul
jno
inc
and
lret
scas
sahf
push
test
popa
mov
lods
xchg
jno
das
sub
sti
pop
push
dec
aad
stos
mov
jl
movsb
test
stos
stos
mov
pop
jl
aad
push
jle
out
dec
iret
int
loope
fbld
mov
lret
push
jne
into
mov
xor
xchg
mov
aaa
fdivl
stos
or
repnz
negl
sbb
je
shr
int3
jge
cmpsb
xor
pop
in
or
jae
imull
lcall
pop
add
jbe
and
test
xchg
cld
push
mov
out
adc
sar
mov
fidivs
in
xchg
sbb
mov
mov
test
xor
es
inc
pop
jle
lret
sarl
dec
pop
testl
bnd
sbb
call
addr16
xlat
cmp
mov
aas
xor
adc
sub
xchg
xlat
rcll
dec
outsb
xchg
lods
pop
stos
aad
sub
orl
push
ljmp
or
lret
fdivr
add
loop
call
adc
add
mov
and
cmpsl
xor
fwait
and
and
nop
ljmp
mov
clc
repnz
cli
es
ret
rcrl
orl
insl
jo
int
lret
dec
cmpsb
mov
outsl
mov
pop
testl
and
sub
cmp
mov
sub
xchg
imul
stos
cmpsl
movsl
in
int3
xchg
cmpsb
inc
push
dec
cmc
add
xchg
pushf
rorl
sub
cmpsb
push
dec
mov
mov
push
push
push
scas
pusha
xor
fnop
sahf
mov
pop
adc
ret
add
dec
pop
aas
movsb
xor
pop
stc
gs
mov
insb
sub
jl
mov
in
test
scas
xchg
arpl
cld
insb
jecxz
or
xor
adc
or
js
fadd
sarb
fisubs
fsubr
jo
and
stos
mov
xchg
pop
in
int
lahf
movsb
add
and
fwait
pusha
xor
jg
ss
pop
pop
inc
subl
rorl
test
ljmp
mov
sti
mov
sbb
xchg
in
or
int
les
aas
in
test
jo
xor
pusha
imul
mov
inc
inc
icebp
js
fmull
ss
push
fdivrl
ret
add
in
divb
push
adcb
adc
sahf
sbb
test
and
or
ret
aad
iret
stos
pop
sbbb
or
fdivp
inc
sub
push
cmp
push
shrl
cmp
pop
sbb
xlat
pop
les
movsb
add
repnz
pop
sbb
aad
pop
xchg
rorb
xchg
push
test
push
sbb
int3
loopne
mov
sub
adc
and
mov
pop
out
int3
mov
out
popa
jnp
or
push
arpl
push
mov
sbb
stos
scas
mov
sub
inc
pop
lahf
lock
rcrl
xchg
orb
add
fstpt
push
lret
mov
fistpll
xor
stos
dec
clc
jne
bound
sbbl
icebp
repnz
int
popf
fidivrl
xor
repnz
jg
inc
lahf
movsb
push
roll
lods
ljmp
or
pop
lods
inc
pop
pop
clc
loope
imul
popa
pop
sub
imul
ds
fptan
into
mov
inc
sbb
clc
outsb
aam
outsl
cli
ficomps
push
jns
xor
int3
iret
inc
cmpsb
arpl
jp
dec
call
jnp
arpl
inc
dec
lcall
jo
mov
or
jbe
outsl
fnstsw
mov
jle,pt
push
jmp
jbe
mov
fmul
xor
sub
cmp
inc
sub
orb
push
stos
aam
pop
shrl
xor
xchg
or
sub
mov
fmull
aaa
or
mul
enter
mov
mov
cmp
fwait
cmp
das
xor
insl
xorl
and
flds
jnp
dec
cmpb
negb
mov
iret
fisubrl
fiadds
iret
pop
les
repz
and
fidivs
notb
push
sub
pusha
ss
jae
and
lahf
std
pop
jg
push
jbe
das
jg
jl
call
jne
or
jne
jno
cmp
adc
outsl
imul
jbe
mov
enter
mov
jns
cltd
aas
cmp
push
negb
and
sahf
and
dec
push
loop
mov
test
ja
movsb
aad
cltd
rcrw
dec
rorb
enter
call
add
xchg
dec
cmc
adc
xor
cwtl
jns
fdivr
test
pushf
xor
cmp
imul
addb
stos
sub
shl
inc
and
pop
ret
lret
xlat
fdivrs
aaa
shrl
inc
mov
aas
fnsave
and
lods
xor
enter
jno
ja
inc
cld
clc
push
mov
cmc
shr
add
push
xor
mov
lods
ret
cmp
js
jne
pop
or
out
mov
mov
mov
imul
mov
fwait
mov
cmp
dec
mov
pop
lahf
mov
cmp
jg
xlat
adc
bound
loop
movsl
mov
mov
push
sti
mov
das
fmul
lds
cmpsl
xchg
fldenv
decl
movsl
ds
pusha
mov
test
shlb
subl
pusha
outsb
and
loopne
add
push
xlat
jne
pop
insl
clc
mov
jp
rcll
out
dec
ficoml
mov
jg
mov
mov
push
pop
jmp
dec
pop
mov
mov
mov
xchg
aad
sub
push
dec
mov
adc
inc
xchg
pop
mov
jl
fmul
dec
dec
jle
pop
add
or
setno
ja
push
jecxz
imul
jns
jl
pusha
sahf
pop
mov
es
pop
int
pop
mov
sbb
fs
bound
dec
mov
or
cmp
inc
jbe
andps
or
hlt
adc
cmc
lret
in
faddp
fcmovne
ret
sbb
addr16
xor
xor
push
add
fsts
xorl
rcr
push
or
push
outsl
push
add
mov
ret
mov
das
mov
int3
test
dec
cmpsb
mov
lahf
jae
mov
dec
jmp
xchg
inc
push
mov
dec
mov
js
pop
insb
insb
cmp
or
shrb
iret
test
shl
test
xor
inc
shll
insb
fbld
jne
aaa
cwtl
das
inc
clc
mov
jp
cmp
stos
push
scas
negl
adc
jmp
leave
inc
cmpsb
inc
mov
dec
scas
jp
pop
jnp
add
push
adc
pop
push
in
adc
es
rcll
hlt
repnz
ss
mov
ljmp
sbb
dec
xchg
faddl
repnz
aad
inc
lret
or
in
test
pop
pop
jae
int3
stos
mov
mov
and
cmp
mov
int3
jg
js
stc
add
push
shll
push
pop
cmp
insl
aam
icebp
pusha
sbb
sete
xor
adc
mov
cmpsl
call
hlt
ljmp
iret
mov
repz
lsl
ss
sbbl
scas
addb
sub
sbb
push
decb
js
jns
add
shl
into
lahf
xchg
out
adc
lcall
rorl
xchg
pusha
xlat
or
std
lea
cli
push
and
mov
inc
int
and
xchg
scas
sbb
push
out
andb
push
into
xchg
lods
xlat
dec
fwait
or
stos
sub
inc
and
pop
jmp
std
and
imulb
sub
test
cwtl
dec
inc
sub
jp
cmp
hlt
push
int
inc
mov
adc
test
xor
sbb
cmp
pop
cmp
xor
movsb
leave
out
push
shll
fcmovne
shll
adc
adc
insb
outsl
pop
sbb
push
sti
gs
fdivrp
xor
jge
call
cmc
dec
outsl
fs
inc
pop
inc
xchg
add
inc
cmp
mov
xchg
push
stos
adc
mov
xor
call
aaa
nop
test
mov
lret
ja
cs
int3
fldt
insl
mov
lret
lods
insl
and
rcll
dec
pop
pop
shlb
push
dec
push
test
add
lret
mov
mov
adc
lock
or
push
fbld
jae
rclb
dec
push
xchg
fdiv
inc
sbb
cmp
movsb
jl
rolb
shl
daa
mov
mov
xchg
dec
pusha
xlat
mov
and
xor
pop
sbb
outsl
inc
sarb
js
in
inc
repz
and
fldpi
out
popf
xchg
dec
inc
push
test
inc
mov
lods
lcall
js
push
cmp
adc
jo
mov
xchg
inc
mov
inc
sub
arpl
inc
xchg
push
pushl
mov
inc
out
xchg
insl
or
sub
cmp
mov
pop
cvtpi2ps
add
push
pop
push
das
inc
sbbb
mov
dec
add
sub
cmp
mov
fdivrl
push
jae
add
mov
push
in
mov
test
inc
jle
ret
sub
mov
cmpb
addb
cmp
fisubs
test
mov
mov
push
add
adc
inc
sbb
out
filds
cmp
inc
cwtl
lds
out
imulb
xor
dec
cmc
stc
test
jnp
and
mov
lret
xchg
jg
xchg
jl,pn
or
or
adc
pop
sbb
pushf
stos
add
jb
sbb
pop
xchg
imul
lcall
sub
lcall
scas
ret
sub
aaa
inc
hlt
jno
pop
cmp
dec
cmp
adc
push
ss
incl
movb
nop
lea
push
or
loop
sbb
cmp
jmp
push
cmpsl
icebp
pushf
sbb
shrl
inc
fldenv
clc
xchg
jb
cs
inc
ror
ficompl
movsl
mov
arpl
jecxz
dec
jns
sub
push
cmc
aaa
jecxz
adc
sub
add
push
in
adc
clc
iret
mov
jp
in
xchg
cmp
aas
notb
xchg
jge
iret
jmp
xchg
aas
cli
jecxz
mov
inc
xchg
jbe
pushw
shlb
ret
sbb
mov
call
sahf
or
dec
stos
imul
mul
mov
add
stos
insb
fs
out
xchg
mov
and
pop
notl
xor
lea
cmp
sub
sbb
and
jno
xchg
out
arpl
mov
dec
jmp
add
mov
xchg
xor
push
mov
dec
pop
mov
aaa
or
and
ss
sub
xchg
int
jge
and
loop
jno
push
sub
fcoml
adc
or
ja
aaa
bound
mov
xor
fwait
lock
add
mul
sbb
sub
adc
jecxz
setle
lret
bound
pop
inc
pop
jge
loopne
fs
xchg
scas
outsl
xor
dec
shr
int
inc
stos
push
mov
mov
add
in
mov
sub
pushf
inc
pop
lret
ss
sti
and
test
icebp
or
mov
out
in
inc
orl
pop
mov
mov
xchg
sahf
xlat
bnd
push
jne
mov
xchg
add
popf
xor
ret
jp
lahf
add
adc
jb
mov
add
mov
mov
xchg
or
xor
fmuls
jno
jle
out
cli
sub
sub
popl
adc
dec
bound
push
adc
jno
clc
rcl
mov
sub
jmp
add
ds
sub
cmp
insl
rcrb
xor
add
je
mov
sbb
hlt
mov
imulb
cmp
or
adc
pop
outsl
dec
xor
jmp
xor
insb
jle
hlt
cmp
les
adc
aad
ds
pop
sub
sub
jle
push
dec
mov
movsb
mov
mov
xor
iret
cmp
jle
in
rcrb
xor
aaa
xor
pop
in
adc
mov
outsl
adc
cmp
add
addr16
stos
jle
stc
add
aas
xchg
dec
mov
xchg
xchg
add
xchg
dec
lock
add
sbb
add
and
mov
xor
jbe
sbb
test
and
out
jae
fcompl
pop
das
cmc
fdivl
repnz
jmp
bound
pusha
sahf
shrl
aam
enter
cltd
jne
hlt
cmpsl
jp
lahf
lret
scas
imul
iretw
and
dec
mov
ja
dec
and
les
out
mov
test
sar
jne
aam
outsb
xchg
scas
pop
mov
lods
lds
mov
flds
pop
and
xchg
add
insb
mov
les
pop
mov
push
das
pop
adc
imul
ss
lea
adc
dec
or
dec
stos
sahf
ja
xchg
cmpsl
fnstcw
adc
lock
jmp
rolb
mov
sbb
mov
out
imul
fsts
or
rcll
sub
mov
sbb
push
pop
lock
loope
jl
or
subl
pop
cmp
outsb
add
sbb
mov
xor
jle
dec
lcall
and
push
pop
cs
cwtl
inc
repz
push
inc
js
subb
pop
push
inc
mov
enter
cmpb
jnp
faddl
filds
and
sarb
leave
gs
or
mov
pop
addr16
dec
pop
cmp
daa
addr16
fildl
fdivr
lret
adc
jae
nop
jae
adc
jb
pop
cmp
out
mov
in
cmp
out
and
inc
outsl
notb
stc
mov
cmc
ret
cmp
call
mov
mov
mov
or
inc
test
sti
sub
mov
mov
xchg
insl
push
push
mov
mov
inc
sbb
testl
flds
scas
xor
pop
pusha
xor
add
fstl
or
jb
sub
xlat
jmp
xchg
xchg
cmp
mov
mov
mov
lds
jecxz
gs
aaa
or
mov
mov
movsl
inc
addr16
das
in
push
pop
sbb
ja
mov
sbb
cltd
add
mov
aaa
add
xorb
push
mov
adc
enter
sar
jo
fsts
addl
orl
mov
jmp
addb
jge
arpl
in
insl
test
shll
test
add
shr
xor
or
aaa
fstpl
push
pop
and
jns
sti
outsb
or
leave
rcrb
ret
dec
in
out
jp
fs
fprem1
inc
sti
lcall
shrl
subl
sub
inc
pop
push
push
loop
idivl
mov
pop
cmc
lods
and
dec
xchg
sbb
mov
lods
dec
or
scas
rorb
outsb
push
nop
adc
ja
ljmp
fs
ljmp
out
inc
ror
cwtl
aad
out
mov
dec
sbb
push
cmp
and
xchg
xchg
mov
icebp
insl
in
or
sbb
mov
nop
pop
arpl
xchg
inc
add
lret
shlb
add
mov
xor
test
dec
das
imul
bound
cmpsl
shrb
mov
add
inc
in
ljmp
mov
mov
mov
and
test
dec
pop
dec
push
xchg
nop
xchg
mov
pushf
clc
das
test
lahf
fbstp
cltd
mov
out
popa
subl
repnz
sbb
push
cld
mov
add
movsb
adc
test
enter
or
pop
sub
and
push
jno
shll
sub
xor
lds
mov
mov
xchg
pop
push
insb
sub
popa
fsts
fisttps
pop
mov
in
push
bound
push
cmp
push
push
sub
inc
testl
cld
stos
test
sbb
inc
cwtl
fsub
xor
sbb
lret
mov
and
insl
scas
jecxz
imul
stos
insb
sub
je
mov
gs
ljmp
mov
mov
jno
sbb
stos
lret
ret
lret
out
mov
jp
pop
lods
sbb
ret
xor
xor
pop
mov
mov
outsl
mov
lds
ret
testl
push
pop
inc
ljmp
dec
test
std
pop
stos
jb
test
pop
adc
ret
sub
push
mov
mov
repz
rcrl
dec
divb
add
or
inc
fwait
jle
dec
lahf
iret
sbb
into
mov
xchg
xchg
shrb
sbb
popf
push
loop
fwait
cmp
out
call
push
push
ss
es
pop
adc
pop
dec
push
dec
xor
push
imul
mov
popa
pushf
push
test
jmp
sub
jnp
mov
pop
out
lret
dec
mov
in
cld
rcll
les
jns
inc
inc
dec
movsl
arpl
loop
push
ds
decl
sarl
int3
cmp
out
cltd
stc
dec
leave
push
roll
fmulp
jecxz
shlb
jae
jns
repnz
pop
aam
push
mov
mov
ret
stos
out
aaa
push
sti
mov
decl
fwait
in
flds
sub
pop
cmpsl
mov
sahf
jno
faddl
jmp
push
enter
es
sub
jmp
scas
gs
inc
pop
rorl
rorl
mov
nop
call
xchg
inc
push
push
dec
xor
push
xchg
ljmp
inc
jmp
dec
sub
cmp
or
aaa
in
xchg
add
push
popf
jbe
std
lods
fcoms
mov
cmp
and
bound
mov
push
mov
into
sarl
popf
out
mov
clc
mov
jge
int3
adc
ds
jle
cmpsl
sub
sbb
add
ljmp
add
lret
scas
jae
jno
pop
movsb
adc
xor
shlb
addb
pop
shll
mov
mov
loopne
cwtl
stos
mov
lret
mov
mov
cmp
mov
adc
push
jae
imul
les
xor
push
pushf
leave
mov
mov
dec
pop
push
pushf
faddl
enter
movsb
sub
sbb
js
fisubs
cmp
xor
dec
rolb
or
jg
fldt
inc
push
sub
stc
xorl
mov
xchg
xlat
ss
es
in
jmp
popf
ret
out
fists
jbe
mov
adc
out
pushf
jmp
fists
pop
test
push
pushf
popa
ret
mov
sub
xchg
outsb
adc
cmc
or
cld
add
mov
aad
cmp
mov
cmpsl
fmuls
fmul
sbb
insb
sbb
lea
xchg
pop
sbb
call
insb
inc
adc
dec
stc
adc
pusha
dec
or
or
popa
insb
ss
jne
out
pushf
js
mov
lea
outsl
fnstcw
xchg
ds
test
popa
mov
cli
push
mov
adc
or
dec
xchg
test
fsubl
mov
xchg
lcall
pop
mov
shll
xor
stc
lret
cld
lock
aaa
jb
ja
sarl
xchg
js
jp
push
xor
imul
pop
test
inc
es
call
shll
mov
ss
mov
in
addr16
jmp
es
inc
jge
sbb
pop
leave
in
push
sbbb
stc
pop
clc
in
xor
cmp
lret
xchg
inc
loopne
subb
add
out
std
xlat
enter
mov
push
jl
lret
cmpsb
lods
xchg
inc
out
add
add
sub
xchg
cmp
sbb
movsb
add
xor
push
neg
arpl
pop
inc
sbb
xor
jp
dec
lods
mov
mov
push
and
push
pop
lock
push
fdivrp
xorl
mov
nop
mov
pop
push
jmp
mov
mulps
sub
jns
mov
pop
inc
push
jge
jb
mov
cmpsl
cmp
push
xchg
dec
ds
pop
ret
clc
insl
xor
popf
icebp
jge
mov
xor
test
test
aas
ljmp
loop
xchg
pop
xchg
mov
cmp
fs
dec
jae
cmp
fwait
push
xchg
xchg
or
adc
cmp
jbe
cmpb
imul
inc
jae
stc
popa
leave
or
fisubrs
cmp
sbb
sbb
sbb
nop
enter
inc
cmp
iret
test
in
jge
mov
ds
lcall
jno
movaps
in
add
test
aad
rorl
cwtl
out
loope
insl
fstpl
mov
mov
int
mov
or
xchg
pop
add
int
mov
aad
mov
popf
popa
fcomi
xchg
in
int
inc
test
pop
push
pop
loop
dec
fists
fs
pop
or
call
gs
and
daa
call
imul
jmp
ret
mov
adc
dec
inc
ret
inc
mov
push
add
fdivs
les
dec
sbb
pop
cmp
jae
popf
pushf
pop
mov
insb
xor
jl
xchg
jo
xchg
leave
insl
add
leave
jg
inc
sbb
mov
xor
add
mov
shll
jmp
mov
lods
adcb
push
sti
jo
mov
scas
fidivrs
mov
jb
loop,pt
push
in
lcall
rep
xlat
xchg
pop
movsl
iret
pop
ds
in
aaa
inc
in
into
inc
mov
test
lea
mov
adc
dec
popa
mov
das
jmp
and
popf
icebp
push
xor
adc
rorb
rcrl
rclb
mov
mov
and
cmp
mov
add
int3
dec
inc
mov
int3
ret
dec
notb
lahf
repnz
daa
aad
loope
dec
jmp
xorb
add
xchg
jae
fists
jo
cltd
fwait
dec
add
fdivrp
pop
out
or
mov
mov
xchg
push
jae
fistl
ret
dec
and
clc
enter
popa
leave
add
and
ss
lret
pusha
or
mov
stos
daa
sahf
mov
cmc
sbb
in
nop
dec
dec
jge
test
ret
mov
add
mov
les
outsl
mov
dec
inc
and
sti
les
outsb
push
pop
inc
and
or
pop
testl
aaa
int
test
aad
aam
das
pop
lds
push
mov
aad
or
in
mov
cmc
inc
push
add
insl
mov
push
aaa
cmp
mov
jg
push
lcall
dec
loopne
cmp
lcall
add
mov
movsl
test
adc
in
das
push
jle
or
rclb
adc
outsl
stc
pop
scas
aam
mov
test
mov
ja
mov
imul
inc
fwait
mov
add
lods
int
mov
adc
dec
fists
test
sub
cmpsb
ret
test
adc
lahf
push
in
push
pop
nop
sbb
jge
xor
leave
cmp
push
int3
pop
cmc
and
jl
adc
xor
cwtl
inc
pop
popa
out
add
std
or
imul
xchg
popa
dec
fldl
mov
clc
popf
pusha
sub
jae
sub
adc
dec
ficoml
and
outsb
and
jmp
mov
mov
and
dec
sbb
shrb
rorl
imul
aam
dec
test
sbb
ja
inc
jbe
add
insl
inc
nop
adc
adc
pop
out
data16
gs
jbe
adc
clc
xlat
js
ret
pop
mov
push
ljmp
sub
jne
mov
subb
mov
arpl
inc
test
push
fisttps
xchg
or
push
push
pop
mov
xchg
jp
cmpsb
pop
add
popl
push
fldl
rorb
push
imul
mov
insb
inc
leave
mov
lods
cmp
andl
mov
ds
rclb
jns
addr16
or
jb
js
pop
in
mov
sbbl
cltd
adc
dec
jno
pop
pop
jno
pop
push
imull
push
inc
test
cwtl
sbb
aam
add
mov
push
mov
imul
out
movsw
or
js
fucomip
adc
add
ret
push
inc
mov
dec
addr16
fisubl
aas
ret
pop
stc
iret
jg
imul
mov
sub
cs
inc
jno
int
push
subl
mov
lock
mov
push
lcall
cmpsl
push
insb
adc
insb
jne
mulb
pop
cmp
add
or
inc
movsb
inc
jne
ljmp
jns
imul
out
iret
and
pop
ret
mov
adc
icebp
push
sbb
sbb
addl
pusha
sub
popa
insl
bound
rcrl
stos
pop
inc
sbb
jnp
push
test
mov
or
dec
enter
mov
xchg
xor
xchg
xchg
jp
jbe
in
jmp
push
xchg
or
cwtl
jp
les
nop
pop
dec
push
enter
sub
pop
mov
cmp
icebp
inc
rcll
mov
mov
mov
or
jno
dec
inc
add
cmp
iret
dec
js
rcll
shrl
stos
scas
mov
push
fiaddl
sbb
sbb
mov
lret
mov
dec
in
mov
scas
lcall
or
rolb
mov
icebp
xor
inc
fldenv
xchg
dec
xorl
les
and
addr16
jo
enter
push
inc
or
xchg
push
mov
sbb
cmpsb
int
pop
lods
imul
test
mov
test
ss
mov
xor
in
mov
call
inc
jb
daa
mov
imulb
adc
orb
pcmpgtb
sahf
pop
call
mov
call
pop
movsb
cmpsb
pop
sub
inc
test
add
and
lods
dec
stos
stc
mov
push
push
mov
das
int3
push
cmp
ret
xlat
movsb
cld
imul
lret
fisttpl
aaa
cld
rolb
push
push
xor
aad
ret
jg
loop
jno
mov
dec
pop
pop
leave
int3
outsl
dec
mov
cmp
push
or
sti
jbe
jle
sbb
ljmp
out
jp
pop
in
sub
pop
adc
mov
mov
lcall
inc
in
adc
out
mov
ljmp
test
push
dec
imul
fwait
out
pop
dec
std
lods
dec
adc
dec
test
push
sbb
jmp
push
enter
mov
adc
lahf
inc
mov
sub
outsb
rcrl
test
into
shlb
push
or
arpl
pop
sbb
sub
jb
cmpsb
pop
loop
aaa
mov
out
test
mov
add
fsubrs
jge
cltd
mov
jno
repnz
xchg
jb
hlt
pop
ret
negb
call
pop
insb
jecxz
inc
or
out
xor
mov
imulb
insb
fnsave
stos
ret
jo
movsb
jno
xchg
sub
sbb
rolb
lahf
add
or
int3
dec
clc
and
mov
out
sub
and
js
shl
ja
mov
and
aam
out
sbb
pop
in
push
cmp
loop
jns
loope
repz
punpckhwd
jl
fnstenv
inc
shl
aam
sub
and
add
cmp
cs
push
repnz
push
into
push
jno
and
xor
inc
fcoms
jecxz
push
lret
mov
jne
pop
ret
jns
sbb
lret
fs
orl
scas
sbb
call
scas
push
int3
pop
mov
leave
sbb
shrb
adc
add
sub
cmp
daa
insl
sti
mov
and
cwtl
and
dec
inc
mov
aad
jl
das
rcrb
loop
pop
out
cli
daa
push
aaa
xchg
ret
rol
xor
and
mov
test
mov
sbb
sahf
insb
or
jp
out
jnp
cmp
test
push
pop
pop
xchg
push
call
xor
mov
orl
adc
add
cmp
iret
in
and
fnstenv
mov
shl
mov
mov
sub
and
mov
jl,pt
fsubrs
and
addr16
in
scas
out
lcall
movsl
fistps
push
jecxz
sub
jne
adc
movsl
rcrl
movsl
xor
jne
mov
cmp
outsb
fsub
pop
lods
sbb
jae
aaa
mov
jge
mov
and
cmpsl
fdivr
cmp
jl
std
fidivrl
mov
push
adcb
xor
movsl
or
add
pop
scas
ja
xorl
fwait
mov
mov
jmp
and
pop
popa
int
fucom
sbb
cs
cmp
adc
xchg
add
xor
lret
sbb
mov
inc
mov
aad
sub
xchg
mov
push
test
xor
dec
adc
sbb
ss
add
cmc
neg
popf
add
movl
inc
adc
pushf
add
cwtl
jle
aam
aam
adc
pcmpeqb
cmp
popa
cmp
je
or
push
popl
sub
das
sub
adc
cmpsl
loope
and
and
icebp
xorb
add
mov
lea
push
or
xorb
je
in
shlb
pushf
lock
adc
jnp
jno
clc
inc
and
mov
bound
enter
loop
jno
pop
lret
inc
cmp
cmp
lahf
jmp
icebp
dec
mov
js
xor
sub
fstpl
mov
xor
cmpsl
test
fldl
push
push
stos
adc
inc
add
inc
inc
sub
in
rcll
jb
out
mov
xor
hlt
bound
jmp
sbb
pop
mov
xor
mov
fbstp
pop
out
arpl
nop
mov
repz
push
aaa
pop
add
ss
dec
mov
mov
lret
imul
clc
mov
out
dec
fstl
dec
out
insl
icebp
xchg
iret
call
pop
je
or
rcrl
test
add
aam
or
pop
add
inc
mov
mov
mov
fs
add
sbb
dec
stos
cmpl
sbb
mov
icebp
push
pop
dec
or
insl
mov
sub
push
or
add
daa
adc
lret
xchg
add
shll
shrb
gs
fisubrl
mov
inc
jns
mov
aam
rol
inc
mov
mov
shll
out
popf
inc
cmp
and
push
mov
fcomp
add
xor
cld
jo
nop
sbb
es
adc
pop
push
mov
dec
sbbl
nop
ss
sahf
xor
das
repnz
inc
jns
mulb
arpl
pop
inc
xor
ret
shrl
xchg
inc
mov
in
xchg
sbb
stos
lcall
add
rcrl
popf
std
mov
out
sbb
pop
lods
sbbl
xchg
movsl
lods
jl
push
and
rorb
sub
or
and
aam
pushf
pushf
cs
pop
sahf
jecxz
mov
nop
subl
fs
daa
mov
pop
pop
ss
jle
pop
cmp
in
repz
sbb
fsubr
cmp
rol
sbb
fs
inc
cmc
xor
cmpsl
cmpsl
fdivl
loopne
push
xor
and
mov
aaa
fs
cmc
cli
push
lods
sbb
rcll
neg
adc
mov
into
or
rclb
or
jecxz
mov
xchg
fnstcw
inc
cli
out
add
stos
cmp
arpl
mov
leave
mov
mov
push
outsb
lds
jg
push
mov
nop
inc
xchg
adc
xchg
fistl
ds
lahf
rcll
cmpsb
inc
outsl
adc
mov
fldt
jno
sti
fdivl
xchg
push
xor
test
mov
aas
pushf
into
jmp
mov
and
or
js
nop
xchg
pop
inc
cmc
cmp
mov
imul
test
cmp
jmp
cmp
sbb
sti
cmp
pop
idiv
clc
mov
xor
inc
fiadds
outsb
mov
adc
pavgb
in
inc
sti
lcall
pop
and
or
and
jp
ss
mov
orl
fistpl
mov
cmpsb
inc
lods
or
stos
adc
lret
adc
lods
push
ljmp
insl
mov
mov
jmp
call
lcall
pusha
loope
sarl
lock
aaa
aas
sub
ficoms
aam
sbb
add
cmp
pop
xchg
push
pop
insl
jle
lds
add
and
and
dec
dec
mov
enter
orl
rorl
inc
mov
sub
les
sub
scas
enter
scas
jle
xchg
fistpll
call
in
insb
stc
cmpb
mov
inc
add
lcall
and
pop
inc
dec
lahf
dec
mov
push
jg
adc
mov
lods
ss
ret
insb
repz
lret
out
xchg
popf
cmovl
xor
and
xchg
jne
sub
mov
imul
mov
xor
pop
xchg
insl
sbb
mov
cs
fdivrl
cmp
add
xor
pop
imul
jp
outsb
in
shll
push
popa
and
inc
and
dec
jns
and
fmul
pop
mov
cmp
xchg
in
mov
dec
movsb
push
cltd
cmp
cmp
dec
fistps
daa
sub
repz
inc
ret
inc
add
aas
and
jae
pop
dec
add
test
jmp
xor
inc
aas
insb
icebp
mov
hlt
jnp
mov
hlt
aas
cmpsb
rolb
cs
in
jle
add
dec
ret
aad
sahf
push
sbb
mov
mov
insb
cmpl
js
mov
xchg
jle
outsl
xlat
or
pop
mov
jp
inc
test
xchg
and
cmp
notb
fsubr
cli
loope
es
pushf
cs
mov
sub
out
cld
push
inc
fstpt
call
push
hlt
mov
mov
mov
fwait
lret
ret
shll
add
mov
mov
pop
mov
test
cmc
dec
jne
insb
jo
cwtl
dec
jl
ds
xchg
bound
adc
repnz
das
cltd
sbb
add
sti
leave
cmp
jae
pop
sti
mov
adc
sub
or
pop
cmc
xchg
lret
pop
js
inc
xchg
lcall
lret
rorb
jne
movsl
cmp
icebp
clc
and
movsb
xchg
push
rcrb
fidivrl
dec
in
je
loop
pop
cmpb
and
es
cmp
xchg
inc
mov
out
scas
pop
insb
mov
inc
dec
and
aad
adc
mov
hlt
addr16
jl
js
shrb
jl
jb
add
xchg
lods
jl
mov
loope
mov
cwtl
sbbl
add
cwtl
je
cmp
fs
cmp
out
out
test
cld
pop
and
sub
mov
insl
testb
aas
outsb
rcrl
pop
ret
dec
mov
xor
sti
mov
lds
dec
dec
pop
pusha
pop
arpl
inc
dec
leave
stos
push
pop
push
cmpsl
add
loop
adc
andb
int
xchg
sub
popa
stc
xor
je
subl
add
out
movsl
sbb
push
icebp
xorb
pushf
and
mov
dec
pop
pop
jne
jle
ret
pop
adc
cmc
movsb
outsl
xchg
mov
push
or
mov
ret
rorb
loopne
rcrl
in
bound
lret
addb
clc
mov
out
stos
push
in
fsubl
mov
popf
xor
sub
int
mov
popf
into
mov
and
iret
or
fwait
cmpsl
lahf
sub
nop
push
test
inc
pop
sub
inc
pop
insb
dec
shll
cwtl
lcall
fisubl
repnz
inc
mov
repnz
fs
xchg
cmc
cmpsl
stos
imul
je
pop
ds
pop
push
clc
rolb
cmpsb
mov
faddl
inc
pop
movsb
push
test
cs
mov
ja
out
outsb
jae
fcmove
hlt
repnz
mov
add
les
shl
and
loop
mov
inc
cmc
prefetch
or
imul
xor
dec
jbe
negl
or
imul
or
xchg
or
jmp
test
int
int3
jo
lods
mov
or
gs
scas
adc
or
xchg
and
jmp
cmp
insl
and
mov
jmp
mov
sbb
ljmp
mov
inc
and
pushl
push
jmp
add
imul
inc
fstp
and
push
or
mov
adc
test
cwtl
bound
mov
mov
lds
lahf
dec
add
jl
leave
cs
xchg
fsts
sarl
mov
pusha
cmpsl
push
adc
in
fs
icebp
popa
cmovbe
aam
nop
push
icebp
push
lods
stos
dec
mov
inc
jmp
pop
or
lcall
ret
rcrb
andb
adc
sbb
or
xor
lods
sub
push
scas
notl
frstor
movsb
aaa
imull
add
pop
sahf
test
aas
ret
sub
mov
bound
jns
mov
int
mov
mov
cmp
sub
and
aam
call
lds
add
xor
dec
sti
sub
aad
aas
ret
jp
push
jg
cmp
cmp
cmpsb
and
ljmp
and
sarl
sub
push
dec
xchg
mov
negb
pop
or
scas
xor
pop
shlb
cs
pop
repnz
test
push
and
aaa
dec
xor
mov
adc
aaa
push
mov
cmpsb
inc
push
dec
dec
dec
out
stos
arpl
cmp
push
and
cmc
adc
in
jae
call
inc
fldcw
jmp
sbb
sub
push
inc
jmp
testb
test
aam
mov
cs
adc
gs
hlt
data16
mov
xchg
add
add
and
mov
out
jns
add
pop
fs
dec
div
xchg
fnstenv
loope
xlat
fwait
aaa
pop
daa
xlat
xchg
inc
aas
js
js
and
xor
add
inc
pop
stc
mov
jmp
std
jmp
loop
jp
adcb
and
lcall
pop
or
fists
ss
xchg
pushf
mov
out
sub
xor
jle
jmp
adc
pop
cmp
pop
or
add
sbb
inc
sahf
pop
es
out
mov
jne
sbb
cmp
sti
imul
dec
add
int
mov
out
je
sbb
insl
call
ljmp
xlat
aaa
or
cli
sub
dec
sahf
dec
pop
cmpsb
pushf
mov
lods
adc
ljmp
in
bound
dec
loopne
pop
rol
les
idivb
cld
or
jg
or
aas
xchg
cmp
cmp
xchg
js
mov
inc
mov
mov
ja
mov
inc
jl
or
sbb
xchg
mov
mov
inc
mov
sub
xchg
loop
adc
lret
sahf
ljmp
fstpl
insb
cmp
push
stos
pop
mov
jne
lret
push
insb
fs
and
inc
mov
adc
add
rcr
loopne
negb
jl
and
add
mov
insb
push
mov
icebp
ljmp
stos
and
in
mov
cmc
lret
jne
int
cmc
xchg
mov
sbb
stos
gs
xchg
xor
mov
pop
push
mov
ret
aas
fstps
ss
mov
call
idivl
in
sbb
xor
fucom
mov
and
mov
and
adc
leave
xchg
lods
cmc
xor
mov
push
sahf
mov
xor
inc
mov
roll
mov
fiadds
fwait
aas
mov
pop
in
cmc
shll
or
enter
mov
xchg
push
xchg
pop
push
jne
dec
out
push
cmp
sub
insb
push
movsl
insl
jg
sub
pop
jg
xchg
pusha
movl
dec
mov
addb
in
stos
add
push
or
adc
pushf
leave
xor
cld
inc
mov
leave
push
mov
jle
imul
jno
int3
addr16
push
js
hlt
fchs
je
jno
inc
xor
xchg
jnp
dec
pop
fstpt
aas
shl
lahf
pop
pushf
cmp
data16
inc
inc
ljmp
cmp
cmp
testl
pushf
or
dec
mov
in
push
lds
test
out
mov
adc
testb
add
dec
scas
mov
cs
or
lret
push
loop
fwait
gs
or
xor
inc
std
movsl
jno
cmp
mov
cmpsb
push
push
stc
mov
movsb
jne
push
adc
lds
xor
or
arpl
pop
push
add
dec
in
dec
pusha
cwtl
dec
sbb
daa
and
stc
mov
lock
add
sub
je
pop
clc
mov
addr16
in
sarl
fildll
outsb
or
add
test
bound
push
dec
test
pusha
or
dec
jge
mov
sbb
cmpsb
or
fucom
cmp
in
sahf
cwtl
enter
cs
ljmp
jne
sub
jmp
pop
dec
inc
ret
push
aam
jo
jo
sbb
das
add
rcrb
filds
inc
insl
into
loope
sub
insl
mov
clc
jge
in
js
pop
ficompl
and
jb
bound
cwtl
pusha
mov
arpl
xlat
mov
push
mov
outsb
sbb
jmp
sub
stos
jns
push
jle
mov
fldt
xor
aas
pop
stos
or
add
mov
xor
dec
push
xlat
and
jne
xchg
pop
fsubrs
xchg
adcb
shll
mov
mov
push
or
ljmp
and
icebp
pop
xchg
adc
out
in
xor
call
lock
das
add
jge
xor
lret
rorl
andl
sbb
pop
sub
jns
jmp
or
aaa
or
xchg
pop
mov
jge
cmp
outsb
cs
testb
movsb
add
mov
mov
xchg
sbb
adc
arpl
cmp
add
dec
inc
daa
or
cmp
adc
aas
sbb
cmp
add
cmp
xchg
cs
inc
fcompl
mov
int3
dec
lds
xor
int
mov
into
cmp
ljmp
ds
mov
mov
add
pusha
adc
push
mov
iret
not
sub
dec
pop
stos
push
repnz
pop
pop
cmp
cmp
jns
out
cmp
daa
ret
and
cmc
mov
imul
mov
xchg
mov
mov
mov
ljmp
and
sub
test
xchg
ficoms
std
jmp
push
and
xor
enter
int
adc
aas
negb
jnp
loope
jge
mov
sbb
jl
pusha
push
andps
adc
addr16
xchg
jns
pop
and
ret
stos
jg
adc
push
pop
pop
sub
inc
lret
gs
add
test
lcall
hlt
cwtl
and
pop
adc
dec
mov
rorl
in
aaa
sub
jg
and
in
mov
push
jne
inc
xor
enter
sbb
js
hlt
mov
shl
bound
push
sbb
sub
ret
mulb
pop
aas
cmp
out
mov
xchg
rcr
dec
popf
movsb
filds
sub
mov
lea
orl
aam
loope
push
arpl
ficoms
add
fisubrs
mov
mov
ja
jb
icebp
out
into
push
lret
rol
cmp
fcmovu
mov
jb
jg
sti
fistps
ss
xor
mov
adc
bound
jp
inc
les
movsb
or
sbb
mov
fmuls
jb
add
js
pop
push
call
dec
rorb
mov
repnz
xchg
cmpsb
pop
rcr
push
lods
daa
addl
pop
push
fwait
mov
inc
pop
insl
push
and
popw
push
cmp
loop
ficoms
or
leave
rorl
add
roll
and
stos
mov
ljmp
sub
push
cwtl
push
sub
sub
xchg
and
and
push
popw
and
fistpl
xor
sub
mov
pop
dec
sbb
pop
iret
jns
leave
in
jo,pn
outsb
push
js
imul
cwtl
repnz
outsl
out
cld
data16
add
stos
fwait
or
add
xchg
aas
out
jp
and
cwtl
adcb
stos
mov
dec
pop
lock
dec
xchg
mov
mov
mov
mov
sub
push
movsb
fsts
mov
outsb
repnz
bound
sub
or
sti
ja
add
adc
iret
inc
scas
jnp
push
cltd
shll
aaa
imull
mov
xor
shl
iret
test
cwtl
sbbl
addl
es
call
dec
lods
test
mov
push
mov
add
ss
push
mov
dec
jle
outsl
mov
xor
movsl
icebp
sbb
jb
iret
xor
push
cmp
jp
insl
pop
lock
stos
adc
sub
cmp
int
dec
fcomi
xor
or
inc
jnp
out
push
testb
fs
pop
hlt
sub
inc
xchg
sub
or
mov
jnp
nop
call
mov
jne
in
das
test
cmp
ljmp
xchg
sarb
mov
orb
fwait
xlat
out
mov
inc
std
call
lret
add
mov
pushf
in
stos
lds
sub
pop
fwait
xchg
add
imul
cmp
mov
jns
pop
in
jo
push
pop
arpl
fwait
sahf
xchg
ret
hlt
aam
add
jmp
outsb
cmp
push
inc
sub
mov
test
mov
js
xchg
mov
mov
roll
xchg
adc
arpl
mov
js
adcb
inc
xlat
notb
mov
push
inc
pop
shrl
out
jecxz
stos
outsb
sarb
test
add
mov
lods
pop
sbb
sahf
sbb
jge
iret
aas
int
or
ret
test
xchg
pushf
jmp
or
mov
in
sbb
adc
fsts
inc
sub
in
popa
xchg
mov
pop
mov
ja
flds
push
mov
jmp
sub
ss
push
jl
loop
xchg
jg
mov
sahf
ret
mov
ss
pushf
loopne
inc
or
scas
jno
addr16
add
mov
clc
les
mov
jge
out
push
addr16
xchg
mov
cli
je
xor
push
sbb
sahf
cmp
dec
lods
xor
dec
jbe
into
mov
sub
in
bnd
mov
pop
mov
dec
xor
and
stc
in
repz
mov
div
and
lea
rcrl
das
dec
push
lahf
cs
lret
cmpsl
insb
movsb
shlb
ret
mov
imul
jg
push
out
sahf
and
pop
addr16
mov
std
push
dec
out
dec
cmp
add
enter
movsl
aas
pop
rcl
mov
mov
and
push
push
or
std
inc
jle
mov
ljmp
rorb
lret
add
out
mov
cli
int3
mov
lret
mov
add
icebp
test
mov
scas
lret
mov
lahf
and
fdivrs
inc
inc
scas
adc
inc
out
popf
mov
xor
xor
push
out
xchg
xor
mov
jo
jge
outsl
adc
push
in
les
mov
cmp
scas
and
inc
jmp
xchg
push
imul
adc
lcall
jmp
mov
dec
fldt
dec
mov
adc
bound
add
jl
pop
jo
das
jp
leave
shrl
testl
or
xor
jbe
mov
gs
ret
cmp
mov
popa
pop
icebp
mov
aas
cld
icebp
add
lcall
fdivp
jge
nop
into
out
daa
aam
mov
insb
mov
call
mov
jno
cmpsb
add
cmp
cli
ljmp
push
pop
sub
push
sbb
repnz
aaa
insl
push
add
in
mov
xor
add
sub
xlat
jae
or
rcrb
xlat
sub
ljmp
pop
test
and
sbb
fcomps
mov
inc
push
filds
cltd
out
je
cmp
xlat
fisttpl
xchg
pop
outsb
add
lret
lret
je
test
push
jmp
in
and
clc
sbb
fwait
sub
push
or
nop
dec
lcall
dec
pop
dec
cld
add
dec
and
sbb
outsb
out
dec
xchg
movsb
mov
mov
aaa
arpl
fisttpl
scas
mov
sbb
sbb
scas
xchg
jno
push
mov
dec
pusha
pop
es
lods
stos
bound
or
enter
or
cmp
pop
fcomps
sbb
add
ffreep
scas
jp
push
stos
xor
or
pop
imul
in
insl
scas
loope
movsb
fidivs
mov
insl
sub
scas
cmp
push
push
bound
xchg
xor
pop
xchg
ljmp
inc
call
pop
sub
dec
inc
ljmp
sbb
popa
cwtl
push
dec
cmp
dec
inc
inc
sub
inc
je
sar
xchg
out
or
add
jb
jb
movsb
in
shlb
jle
push
lea
sbb
aaa
popa
sbb
xchg
mov
jp
inc
fistps
add
cmp
loopne
push
out
xlat
mov
hlt
add
pop
arpl
add
or
das
pusha
pop
mov
inc
fwait
je
inc
outsl
test
aas
movsb
iret
ret
roll
int3
and
lds
mov
pop
xor
mov
xchg
or
or
popf
push
lock
daa
jecxz
pop
gs
pop
lret
jmp
test
jmp
push
call
pop
mov
mov
jns
xchg
mov
mov
daa
mov
mov
ljmp
pop
fnsave
push
and
mov
jp
or
pop
cmp
in
imulb
cld
xchg
pop
and
mov
sbb
push
je
jnp
jnp
insl
mov
jno
pop
and
inc
push
jno
mov
cltd
enter
fmuls
jmp
les
xor
pop
sbb
inc
lods
das
fsubl
mov
aaa
mov
inc
push
fstps
cltd
xor
test
lcall
arpl
push
dec
cmc
lods
outsb
aas
adc
das
add
test
xchg
push
insl
inc
xchg
out
and
mov
rol
push
jle
sbb
xchg
imul
fcomi
lret
mov
push
mov
pop
push
fs
arpl
or
cmpsl
pop
stos
pop
dec
mov
push
cmp
scas
cmc
xchg
std
mov
xor
out
cwtl
dec
jle
cltd
cmpsl
jl
into
mov
dec
mov
subb
enter
jp
and
test
push
aam
xchg
or
xchg
sarb
into
popf
inc
pop
mov
popa
xor
stos
jae
aad
cmp
aaa
lea
sbb
fs
add
aam
imul
out
pushf
int3
scas
dec
dec
xor
jne
pop
cmp
mov
jle
repnz
arpl
inc
push
sbb
gs
jp
repz
jo
ljmp
sbb
lock
es
pop
movsb
pop
inc
xchg
ljmp
push
mov
arpl
mov
pop
into
add
cs
dec
push
and
cmpsl
inc
cltd
js
movsb
mov
jle
xchg
xchg
insb
repnz
aam
mov
and
mov
sbb
xchg
push
xchg
jno
orl
in
stos
xor
push
push
add
andl
subb
sbb
jo
mov
cmp
insl
mov
xlat
stos
add
lret
mov
negl
mov
outsl
or
xor
pop
gs
dec
pop
xchg
arpl
push
sub
ret
lock
notl
daa
nop
popf
ja
or
inc
lock
aaa
shrl
sbb
inc
push
xchg
iret
lahf
call
sti
shlb
leave
pop
fadds
ret
cmp
inc
pop
inc
dec
jecxz
jno
popf
test
cltd
call
test
test
icebp
stc
jne
movsl
into
nop
sub
test
sub
andl
mov
dec
jmp
loop
imul
dec
dec
cwtl
arpl
xor
jb
es
arpl
cs
mov
push
mov
imul
imul
enter
popf
imull
xchg
imul
push
test
mov
or
repnz
cmp
fcom
icebp
arpl
lahf
fildll
jne
sbb
inc
dec
out
mov
loopne
jge
push
ljmp
cld
jb
mov
xorl
xchg
fs
push
cwtl
test
cmp
repnz
ror
test
adc
fwait
push
mov
pop
insb
dec
das
pop
xor
jb
cmp
sbb
push
push
mov
fsubl
sarl
icebp
pop
aam
cmpsb
pusha
cmpsb
notl
pop
movsb
mov
popl
ret
xor
orl
inc
mov
pop
loop
or
dec
out
push
orl
xor
xchg
pop
mov
fmull
mov
out
aam
inc
movsb
daa
popf
adcb
pop
xchg
inc
adc
sbb
cmp
cmp
aad
mov
xchg
stos
mov
xor
cmpsb
push
scas
jns
bound
or
push
loope
mov
adc
lahf
test
push
shlb
lea
jecxz
imul
in
pop
ret
js
mov
out
popf
xchg
mov
aad
push
nop
xchg
jmp
adc
mov
ret
cld
aaa
jo
pusha
shr
xchg
xchg
inc
sub
icebp
repnz
out
insl
iret
aad
inc
insl
shll
into
lcall
insb
sbb
out
jne
xchg
fadds
mov
mov
mov
lret
and
xchg
je
lret
sub
pop
or
rclb
lret
sbb
mov
lods
gs
sub
adc
stc
mov
neg
fs
jne
pop
fisubrl
jmp
lds
rcrb
enter
dec
std
cmpsb
jmp
enter
stc
xor
add
mov
dec
inc
mov
jbe
jnp
xchg
sbb
push
pop
jmp
and
inc
in
and
jb
and
sahf
add
xchg
data16
sbb
dec
out
jne
and
jae
dec
jae
pop
icebp
les
lods
fnstcw
fistpl
pop
fidivrl
fst
mov
push
or
and
loop
mov
mov
jnp
arpl
arpl
sbb
arpl
jbe
adc
push
mov
jo
jle
ds
mov
leave
outsb
fst
int3
and
sub
fcomps
lds
fs
adc
out
dec
jl
je
xchg
in
push
imul
inc
mov
ficoms
xchg
insb
into
fdivp
call
or
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
shll
std
repnz
sar
lahf
in
mov
lea
add
push
jnp
pop
pop
push
pop
add
push
push
mov
pop
pop
mov
xor
sbb
mov
push
mov
pop
sub
add
xor
push
push
mov
pop
pop
xor
mov
push
mov
popl
mov
sub
mov
sub
jne
mov
xchg
or
mov
das
out
mov
mov
and
xor
xchg
fbld
or
pusha
loope
jl
aad
rol
mov
pusha
aas
xor
ret
xchg
stos
ficompl
nop
xor
push
in
jb
leave
stos
mov
loope
pop
xor
ljmp
push
xor
pop
xchg
xor
mov
cs
push
mov
push
bound
add
mov
repnz
add
xor
sub
mov
push
cmpsb
cmp
enter
loope
fxch
fs
daa
enter
mov
sub
test
jno
test
jno
dec
dec
popf
push
loope
in
outsb
sub
add
xorb
mov
xchg
ret
dec
adc
repz
lods
imul
ret
mov
in
jmp
stos
iret
lahf
or
jp
lahf
adc
dec
dec
pusha
jo
adc
out
cmp
push
sbb
sahf
mov
ljmp
jge
dec
ret
mov
aas
rcrl
xor
mov
xchg
ret
pop
or
sbb
push
sbb
and
adc
cwtl
pop
fstps
into
push
cmp
daa
dec
dec
jae
mov
ret
test
and
push
mov
jns
insl
pop
mov
jmp
mov
mov
dec
ret
pop
pop
daa
add
xlat
movsb
adc
outsb
in
or
dec
inc
outsl
adc
lahf
popf
aaa
dec
push
sbb
aad
adc
push
push
xor
into
cli
ficoml
push
dec
mov
mov
add
xchg
in
xchg
mov
push
jp
and
cli
fidivl
repnz
in
fisubrl
pushf
pop
xchg
shrl
fcmovnb
dec
adc
bound
ja
repnz
push
ljmp
cmp
fiadds
mov
cs
cmp
repz
lods
out
xorb
cmp
ret
jp
adc
stos
pushf
jbe
jp
cld
inc
jae
je
mov
test
xchg
xor
cli
fcmovu
ret
sti
ficoml
shl
dec
adc
out
adc
cwtl
mov
xchg
adc
pop
in
jge
jmp
data16
dec
popa
in
or
add
lds
sbb
js
push
nop
js
sar
pop
daa
mov
cmp
add
psubsb
push
fwait
rclb
or
lahf
cmp
jp
xlat
pop
add
adc
stc
cmpsb
pop
push
pop
inc
inc
xor
mov
xlat
pop
add
adc
push
pop
inc
mov
add
or
pop
invd
add
or
shlb
xlat
addl
pmulhuw
imul
pop
dec
mov
ja
cmp
add
or
pop
adc
mov
xor
xlat
sbb
mov
sub
imul
lcall
pop
xchg
ret
or
mov
ret
or
adc
testl
pop
ret
or
inc
pop
into
add
cwtl
jb
ret
pop
add
enter
or
inc
aad
add
setp
inc
jne
add
jae
add
sbb
pop
paddusb
invd
js
and
add
cmpsb
push
cmp
add
addl
cmp
add
aas
insb
push
cs
invd
jp
xor
ret
push
fldl
or
mov
or
adc
int3
js
stos
add
pop
mov
xor
or
push
icebp
add
or
ficoml
inc
or
jbe
add
sbb
fnstcw
testl
out
add
pop
xor
andl
or
adc
cmp
adc
cld
jns
mov
add
mov
aas
ret
xlat
addb
pop
push
push
cmp
pop
jae
cld
inc
invd
jb
setp
mov
mov
out
rcll
sbbl
gs
invd
pop
pop
invd
add
invd
add
or
pop
xor
fdivrl
push
std
dec
rolb
push
sahf
rcll
push
imul
fiadds
movl
jle
rclb
adc
imul
subb
add
movl
fimuls
push
mov
jp
add
add
mov
adc
push
imul
aas
ja
movsl
lcall
xchg
movl
repz
adc
push
imul
fcmovnb
fadds
xchg
xor
add
pop
lar
mov
adc
push
imul
fldt
lahf
outsl
repz
or
inc
clc
inc
loopne
imul
add
or
push
mov
jp
add
add
mov
adc
pop
shrd
pop
xchg
into
lods
push
pushf
inc
adc
add
xor
inc
xor
sub
movsl
fdivr
or
popf
push
sbb
les
repnz
sub
movsl
fsubs
inc
pmaxub
dec
popa
fiadds
invd
add
xor
add
pop
pop
pop
ud2
add
invd
add
or
sbb
adc
inc
invd
jp
xchg
adc
ret
cld
inc
invd
jl
stos
std
add
ds
invd
jp
cmp
fstps
or
cli
outsb
cmp
ret
xchg
cmp
fnstenv
add
xor
jge
ret
xor
xchg
xchg
push
inc
inc
add
mov
mov
repz
jns
inc
test
bound
inc
sub
sbb
ja
xor
jb
insl
pop
lret
mov
ja
repnz
xchg
jmp
js
adc
loop
push
mov
movsb
mov
jecxz
repnz
cmp
invd
add
or
pop
invd
add
or
pop
invd
add
or
pop
invd
add
mov
pop
imul
pop
fmuls
add
sub
pop
invd
add
invd
add
or
pop
bswap
mov
invd
add
or
pop
invd
add
or
pop
invd
mov
invd
fistpll
dec
aas
cmpsl
je
lahf
and
push
mov
lcall
mov
testl
mov
popl
ficoml
cmp
int
jmp
imul
xchg
std
sbbb
push
test
andl
sbb
icebp
cmp
sub
mov
add
incb
sub
sub
in
inc
push
out
xchg
add
push
push
sub
cmp
mov
or
ljmp
fdiv
push
mov
inc
outsl
lods
aam
push
push
xor
jb
ss
mov
sub
fs
rclb
jmp
push
jl
mov
dec
xor
das
xchg
dec
outsl
jb
xchg
lret
repz
mov
add
or
add
add
add
or
add
sbb
cli
pop
add
pop
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
pop
add
stc
pop
add
cli
pop
add
pop
add
cli
pop
add
pop
add
cli
pop
add
pop
add
cli
pop
add
pop
add
sti
pop
add
pop
add
jb
fs
insb
add
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
jne
fs
outsl
push
je
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
add
push
cmp
add
cld
add
or
xchg
add
jne
adc
mov
les
and
and
and
inc
jl
push
and
addb
push
and
adc
mov
xor
mov
or
lods
mov
leave
mov
jmp
adc
or
push
je
add
xor
add
ret
xor
sub
int3
and
rolb
inc
aam
mov
adc
add
pop
push
dec
bound
add
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
sbb
test
andl
js
shlb
shlb
and
pop
add
pop
in
jb
cmp
sbb
add
inc
xchg
fmul
fsub
add
jb
cmp
cld
add
and
add
call
in
adc
or
add
call
or
inc
and
faddl
je
push
movzwl
add
jmp
sub
cltd
xor
or
js
and
xchg
pop
and
and
sbb
push
push
mov
adc
add
push
leave
call
add
test
jne
add
mov
mov
xchg
or
sbb
ret
rorb
mov
sbb
push
inc
inc
cmp
jne
add
iret
adc
push
pop
nop
add
mov
hlt
pop
je
jbe
or
call
test
dec
dec
mov
push
mov
push
or
addb
bound
inc
pusha
ret
add
jg
jle
gs
pop
push
adc
mov
nop
push
push
orb
out
pop
bound
cmp
loopne
mov
scas
cmp
inc
mov
push
or
push
jne
addl
frstor
sbb
sbb
jmp
xchg
add
add
or
cmp
jl
icebp
clc
jg
add
pop
pop
add
mov
jns
add
mov
mov
jb
inc
into
add
add
call
ja
add
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
add
divb
add
into
fldl
clc
aaa
xor
iret
pop
sub
add
sub
aas
sub
add
jl
cmp
adc
rolb
sarl
test
add
or
or
pop
cmp
cltd
inc
sbb
pop
xchg
nop
pause
mov
in
lock
jge
pop
mov
cmp
out
adc
add
or
push
add
and
sbb
cmp
testl
and
sarl
sbb
addb
mov
shlb
pop
clc
stos
fs
call
fmull
add
push
pop
push
push
push
pop
jne
jns
lret
and
cmp
ja
movsl
add
movsb
insb
lahf
in
rorb
adc
movl
adcb
call
add
mov
rorb
push
xchg
repz
nop
out
ja
inc
and
movb
ds
xor
push
push
xchg
jbe
add
cmpsb
jne
push
jae
add
sub
jo
cltd
dec
adc
cmp
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
add
add
xor
sbb
clc
call
or
pop
inc
adc
sub
fs
push
test
shrl
cmpsb
jmp
adc
mov
mov
xchg
imul
je
sub
mov
and
xchg
sahf
jmp
inc
add
pop
leave
lock
sub
cmovno
add
mov
or
out
fdivrp
lea
std
pop
sub
inc
inc
dec
pop
inc
loop
adc
add
inc
sarb
incl
aas
push
xchg
add
cmc
add
xor
pusha
movq
sub
jl
xlat
push
push
call
and
push
std
add
dec
jbe
nop
mov
fnstsw
rclb
and
adc
cmpsl
add
pop
movsl
and
add
call
insb
aaa
add
jp
pop
mov
clc
je
add
cmpsl
xchg
add
bound
dec
pop
adcb
test
inc
mov
movsb
loopne
xchg
fimull
pop
test
es
mov
das
mov
push
xor
test
es
inc
jne
test
mov
popf
out
dec
mov
or
push
or
mov
push
add
pushw
cmp
sub
sbb
mov
cmp
push
fdivs
add
cmpl
outsl
sub
imul
or
inc
movups
push
adcb
cwtl
sbb
jecxz
xor
add
push
es
sti
add
jae
ror
push
add
mov
repz
mov
mov
and
mov
push
ret
mov
cmp
inc
je
add
push
adc
out
pop
adc
add
mov
in
pushf
cmp
dec
fs
pushl
int3
andb
xor
leave
cmpb
roll
adc
ja
cmp
shlb
mov
push
cmp
add
orb
cmp
shl
hlt
add
push
rolb
daa
add
jl
movb
sub
pop
cmp
push
test
mov
ret
jmp
in
mov
les
dec
ds
add
xor
rclb
sbb
or
daa
push
xchg
push
call
mov
imul
rcl
lea
cmp
and
add
pushf
mov
pop
jo
pop
jl
scas
pop
cmpsb
orb
jmp
out
sub
jbe
in
push
pop
push
in
pop
cmp
loopne
cmp
inc
movsl
adc
add
cmp
jo
add
test
jns
cmp
stc
add
movsl
das
jne
add
jmp
xchg
pop
mov
sub
push
pusha
mov
scas
sub
pusha
dec
movsb
popf
adc
dec
add
roll
pop
add
or
movhps
test
cmp
cmpsb
adc
and
cmp
mov
les
clc
add
add
jl
add
push
cwtl
test
mov
sub
jl
adc
leave
and
mov
orb
incl
rolb
loop
cld
popa
in
test
add
adc
outsb
or
add
xor
push
sub
xchg
hlt
ret
and
sub
push
dec
fs
xor
and
or
add
dec
sub
add
push
sub
scas
bswap
xor
testl
divb
sahf
loopne
inc
andb
sarb
push
and
add
add
ret
push
fs
gs
mov
icebp
test
or
in
fadds
and
sbb
repz
inc
or
add
andl
xchg
lret
mov
and
mov
pop
dec
xchg
pop
fsub
shlb
sub
push
shl
jg
leave
fsub
ds
mov
dec
adc
add
push
xchg
in
ja
addb
pandn
add
adc
sub
in
cwtl
and
inc
xor
mov
imul
push
lcall
mov
or
clc
add
cmp
xor
add
mov
addb
mov
add
xchg
nop
add
mov
out
test
shlb
dec
lret
orb
imul
add
xchg
jmp
lcall
mov
pop
out
stc
cvttps2pi
or
dec
or
adcl
fbld
xor
add
fnstcw
add
or
add
mov
sub
adc
dec
enter
adc
pop
add
sbb
enter
lcall
lea
cld
adc
pop
or
xchg
cmp
sbb
es
sub
add
and
add
repz
je
and
aas
mov
xlat
xor
adc
and
dec
pop
xchg
aaa
insl
sub
outsl
incb
dec
sbb
addl
pop
fs
adc
xchg
pop
mov
add
fldl
icebp
call
cmpsb
add
jnp
mov
jne
add
and
mov
cmp
dec
stos
pop
dec
push
xor
addb
clc
add
dec
push
aaa
pop
bound
push
addb
jne
or
pop
ljmp
push
dec
mov
or
je
jo
ja
jg
test
sub
icebp
insb
or
jnp
or
mov
jg
jge
pop
arpl
je
push
jle
jmp
fcoml
or
push
add
inc
xor
pop
sub
mov
add
cmp
fldt
les
or
test
mov
mov
add
mov
pop
or
xor
and
dec
mov
fdivrl
bound
cmp
or
roll
add
or
bnd
dec
cmp
jecxz
push
add
pop
pop
aam
add
mov
insb
pop
mov
add
mov
mov
or
or
add
push
jo
dec
add
dec
xor
lock
pop
out
inc
fsincos
inc
pop
rolb
subl
int
dec
jge
je
jns
sub
ret
add
shlb
dec
sahf
jmp
add
hlt
lock
xchg
lahf
jno
or
or
or
adcl
cs
mov
lock
add
and
inc
sbb
daa
xor
jns
adc
loope
or
sub
inc
mov
cmp
add
xchg
and
mov
xchg
inc
push
cmpsl
pusha
adc
and
and
pushf
andl
add
cmp
inc
sub
jmp
add
jge
jb
pop
jmp
cltd
test
adc
jne
push
cmp
ret
pop
fs
inc
adc
sbb
jns
or
ret
mov
or
push
add
pop
je
mov
mov
add
sub
loopne
dec
push
int3
aas
enter
dec
sub
ret
pop
sbb
data16
xchg
push
imul
cmp
mov
or
push
addb
loop
add
xchg
movsl
scas
add
add
je
sbb
add
and
add
aaa
orl
test
mov
out
js
mov
clc
rcrl
jbe
add
or
icebp
adc
push
bound
roll
mov
and
cmpsb
fsubrs
js
addb
adcb
out
add
dec
mov
ret
add
pop
mov
mov
add
nop
enter
syscall
mov
lahf
fdivrs
jne
cmp
sub
add
add
es
mov
dec
rsqrtps
rcrb
sub
adc
or
testb
add
test
aam
scas
sti
movsb
jl
sbb
pop
pop
incb
mov
xor
or
or
and
jae
add
adc
sbb
jb
ret
push
sbb
sub
sbb
add
sub
sbb
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
add
lods
cmpl
add
jmp
dec
sahf
movsb
xchg
push
sub
dec
add
cmp
dec
pop
sub
fcoml
add
mov
xor
adc
or
jmp
dec
jmp
lods
cmpsl
imul
push
bnd
add
cmp
and
movl
cld
jmp
ss
sbb
xchg
xor
mov
ret
in
dec
sbb
psubb
adc
call
jmp
pavgb
mov
jge
jo
and
cmp
add
sbb
xchg
xlat
adc
sub
ret
test
dec
sbb
xchg
mov
mov
test
add
jl
sbb
and
pop
lahf
jne
imul
jge
pop
pop
cmp
lods
push
pusha
adc
rolb
xlat
cltd
xor
adc
cwtl
loopne
lock
or
add
call
dec
adc
add
jns
call
add
or
out
or
cmp
iret
add
into
fcmovnu
lret
fcmovu
add
loopne
jecxz
in
in
pop
or
push
mov
pop
push
shlb
gs
push
inc
push
popl
syscall
jmp
adc
enter
cmc
std
xlat
add
adc
xchg
pop
add
rep
incl
frstor
push
cld
inc
add
add
add
xchg
push
movw
or
nop
les
cld
push
cltd
cwtl
push
jb
decb
loopne
add
jbe
cmpb
jne
or
or
or
add
adc
jmp
add
and
jl
inc
push
add
push
add
test
cmp
pop
in
pusha
jnp
add
pop
rol
jl
add
cmc
add
mov
sbb
clc
mov
xor
cmp
push
leave
adc
sub
and
mov
enter
subb
out
repz
xor
inc
cmp
mov
jl
mov
jnp
shll
loopne
scas
call
enter
addr16
mov
add
imul
data16
mov
inc
jns
mov
add
imul
loope
sbb
add
mov
in
or
or
mov
insb
jl
or
fstps
add
jo
add
push
sub
pop
sbb
cmp
dec
push
sbb
add
cwtl
nop
mov
aaa
add
arpl
inc
adc
adc
add
out
shll
add
dec
xlat
xchg
fiadds
jbe
add
dec
add
mov
push
lds
shr
fwait
loopne
add
daa
repz
loopne
in
out
sbb
es
ret
sbb
dec
in
adc
pop
add
xchg
sbb
adc
push
add
add
loop
push
and
add
out
clc
add
je
mov
cmp
add
xor
dec
add
rorl
mov
push
inc
or
addl
sbb
aam
mov
adc
ret
jbe
jmp
sbb
nop
push
mov
xchg
adc
or
add
or
stos
mov
dec
xchg
stos
pop
inc
and
adc
test
les
test
add
loop
push
xchg
int3
adc
wrmsr
adc
iret
orb
in
pushf
pop
mov
or
icebp
xchg
adc
add
add
out
mov
jae
pop
sub
mov
sbb
xchg
add
pop
sub
jne
jl
add
mov
rorb
and
dec
shlb
adc
xor
xchg
jmp
enter
push
leave
ljmp
mov
push
add
add
mov
cmp
sub
sub
data16
and
cli
popa
pop
pop
hlt
pop
pusha
inc
mov
aas
sub
test
jmp
or
cwtl
addr16
add
clc
mov
add
jb
insb
fcoms
jne
pop
out
int
add
jl
add
mov
and
js
movd
js
add
fidivs
push
add
push
xor
je
ret
shlb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
test
jmp
jo
add
inc
mov
dec
jne
cmp
cmp
dec
add
pop
add
push
inc
xor
out
in
add
push
jbe
xor
es
aas
and
fdivrl
mov
sbb
and
cld
jo
jl
mov
or
loope
rolb
cmp
add
push
sbb
add
jbe
mov
push
insb
and
jne
loop
cmpsl
or
add
sub
cwtl
add
rcrl
add
mov
pop
push
add
dec
clc
jae
ss
push
add
das
push
mov
imul
cs
sub
xor
xor
mov
add
inc
hlt
mov
add
clc
mov
enter
lcall
sub
cmp
lods
push
inc
add
cld
sub
mov
mov
pushl
and
ret
or
add
mov
adcb
sbb
push
inc
add
pop
inc
outsl
jb
insb
popa
cmp
cmpb
jo
push
dec
rolb
add
popa
jae
push
add
imul
mov
add
jo
xor
mov
cs
mov
cmp
add
sbb
je
mov
add
hlt
jbe
xchg
push
add
pop
call
mov
jmp
mov
test
rolb
add
or
leave
dec
sbb
popl
jl
sub
loopne
stc
add
inc
gs
pop
pusha
fiaddl
mov
add
push
cld
push
mov
ror
stos
mov
nop
aas
fimull
gs
pop
hlt
imul
arpl
mov
add
pop
xor
jo
sbb
jmp
cmp
mov
rol
sbb
dec
jae
testb
or
cmp
clc
aaa
dec
jne
cmp
test
fxch
adc
fildl
sbb
ret
dec
add
push
push
cltd
and
sarl
adcb
add
repnz
clc
or
add
ret
pop
add
sub
enter
cld
notl
pusha
adc
cmp
pusha
lods
push
cmp
nop
rclb
or
rolb
into
movsb
cld
pop
add
adc
adc
jmp
lahf
xchg
popa
sub
push
push
push
add
cmpl
in
je
add
imul
and
movsb
or
add
or
pop
inc
lock
push
mov
inc
sub
lods
or
or
sbb
push
pop
and
dec
pop
daa
and
sbb
adc
call
add
pop
lods
mov
out
stos
push
push
call
adc
loope
jbe
push
imul
in
push
cltd
cmp
int3
aam
xchg
push
fistl
push
add
push
push
cmp
mov
rclw
pop
adc
add
push
push
or
mov
pop
cld
push
add
leave
shlb
cmp
popa
sub
or
nop
and
add
inc
add
add
xchg
push
jbe
movsb
add
loope
pop
sub
out
adc
xchg
and
or
mov
jbe
push
add
mov
and
add
inc
idiv
out
cmpsb
sldt
cmpl
cmp
orb
outsb
add
call
push
cmp
adc
test
push
mov
out
mov
dec
mov
into
cli
out
push
je
aaa
jg
add
jbe
pushf
add
ja
imul
ret
mov
loop
inc
out
and
js
mov
mov
sub
cmp
stos
push
push
ljmp
or
xchg
icebp
mov
dec
add
push
xor
fstpt
sbb
mov
sub
das
shll
rcrl
jl
inc
add
decl
mov
insl
mov
cwtl
aad
push
pop
add
inc
shrb
xor
add
lret
mov
jecxz
ss
lods
sbb
adc
or
add
jmp
push
nop
xchg
cmp
je
pop
mov
add
add
and
add
inc
cmp
add
or
dec
mov
or
and
rclb
inc
inc
add
fdivrs
jae
xor
ficoml
imul
inc
call
je
mov
imul
add
dec
fld
jns
push
popa
add
adc
mov
inc
mov
jmp
ja
jne
add
daa
and
xchg
push
loopne
adc
add
mov
roll
push
call
test
vpmadcswd
or
add
inc
ret
idivb
or
add
inc
and
cmp
push
push
push
mov
pop
add
sub
mov
push
inc
xor
xor
jne
and
or
or
pusha
sar
pushf
add
or
xchg
jne
bound
xor
fdivrp
and
push
push
adc
adc
push
lea
and
pop
lret
jecxz
dec
je
les
push
inc
pop
call
loop
addb
dec
das
xor
add
and
das
cmpsl
inc
add
shl
dec
xor
movq
inc
pop
sub
inc
push
sub
mov
adc
dec
jmp
pusha
add
les
orl
dec
add
cmp
adc
sub
add
push
pop
and
cmp
add
wrmsr
das
push
mov
es
sub
enter
leave
cmp
jmp
int
and
sbbl
xlat
aad
in
in
fdiv
push
std
or
fprem
push
daa
add
loopne
jmp
in
or
pop
and
adc
add
add
repz
push
cmc
loop
lods
dec
cmp
clc
popf
cmp
and
std
mov
adc
pusha
popl
add
je
xorb
add
pop
mov
arpl
cli
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
adc
cmp
sahf
or
stos
adc
fistps
ja
in
mov
jmp
add
add
cmp
dec
add
jo
push
or
je
cmp
cld
cmc
cmp
mov
push
scas
xchg
adc
push
add
or
mov
add
push
fstpt
sar
inc
fiadds
push
dec
xchg
sbb
and
add
sahf
mov
mov
add
or
nop
pusha
mov
sti
push
xor
je
push
push
js
inc
and
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
jecxz
lods
enter
add
or
cmpl
mov
mov
and
sub
inc
rolb
mov
add
mov
je
incl
mov
sbb
cmpl
jne
mov
pop
cld
es
mov
and
xor
testl
inc
je
sbb
lea
mov
push
push
js
daa
and
add
cmpsb
pop
cmp
add
test
add
lods
sub
imul
pop
mov
adc
adcl
add
dec
push
mov
add
inc
pop
pop
incl
addl
jp
push
add
call
test
rdmsr
ljmp
pushl
sbb
and
aaa
xchg
movsb
add
pop
adc
add
sbb
leave
test
addl
add
pusha
ljmp
sbb
sbb
add
sti
and
out
sbb
phaddw
aaa
and
push
adc
mov
loopne
xor
cmp
in
or
and
dec
mov
mov
call
pop
sub
insb
pop
push
pop
mov
mov
inc
or
or
sub
and
mov
pop
pusha
cmp
push
xchg
pop
fistps
pop
inc
fdivrl
lds
push
add
outsl
sub
ret
dec
mov
jb
add
movsb
mov
or
lret
mov
mov
sti
xchg
add
pop
add
mov
jb
je
add
jae
jns
jo
cli
aas
add
jp
sub
addl
sub
scas
lret
add
insl
mov
push
nop
mov
mov
bnd
dec
fisttpl
cmp
sbb
dec
and
jl
lock
push
inc
lret
push
lea
in
add
pusha
inc
add
movl
push
or
pop
pminsw
dec
lret
xor
or
inc
inc
jg
pusha
cmc
inc
jo
mov
pop
daa
es
sbb
dec
cmp
pop
imul
outsb
xchg
dec
add
jle
sub
xchg
mov
pop
loopne
push
adcl
repnz
or
stc
add
jo
clc
xchg
pop
xchg
jle
add
mov
xor
jnp
cmp
clc
add
xchg
or
inc
cwtl
movsl
lock
pusha
outsb
and
or
mov
clc
icebp
ds
flds
or
push
and
addb
jge
sub
mov
sbb
add
push
push
adcl
add
icebp
test
add
xchg
into
mov
fwait
in
push
add
aam
dec
ds
push
test
loope
mov
addb
mov
loop
lock
push
sub
push
or
sbb
pop
icebp
inc
xor
lahf
add
rorb
es
and
add
add
mov
pop
sub
inc
push
in
and
push
xor
bound
and
or
add
xorl
push
jbe
sti
and
cmp
mov
inc
and
nop
push
push
adc
xlat
mull
imull
pop
mov
sbb
pusha
and
add
xor
xchg
add
add
add
lahf
and
je
xor
mov
jmp
add
cmp
in
call
jp
push
sbb
jbe
testb
cmpsb
test
aaa
popa
pusha
add
mov
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
xchg
dec
lock
lods
dec
xor
pop
lea
loopne
mov
or
popl
lret
imul
mov
aaa
push
xor
ja
add
ret
ljmp
pop
and
inc
dec
push
pop
test
pop
out
mov
fwait
sub
ljmp
add
sub
cmp
add
cmp
out
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
in
rorb
dec
cld
nop
cmp
add
inc
js
or
jno
sbb
push
cmp
add
jmp
add
add
lods
push
out
inc
int3
pop
add
mov
pop
sbb
es
jl
cmp
or
add
sarl
push
sbb
hlt
insb
xchg
xchg
ret
mov
add
mov
icebp
out
adc
add
sahf
pop
mov
sub
add
cld
dec
jl
ret
dec
ret
ret
add
cmpsl
iret
data16
stc
add
cmp
setb
push
xchg
cli
jmp
fbld
xor
cld
rolb
adc
jle
cli
aad
adc
repz
sbb
mov
dec
add
jne
or
dec
cli
out
add
popf
inc
mov
mov
xor
add
scas
and
jne
cli
dec
in
es
sbb
loopne
ja
push
xlat
mov
mov
inc
scas
xor
fsubrl
rorb
stos
xor
cmp
jl
mov
add
jmp
test
aam
leave
pop
fildl
adc
enter
repz
add
fimull
push
inc
sub
in
orb
add
loop
mov
call
add
in
sub
mov
jecxz
push
adc
pop
sbb
ret
or
dec
xchg
pop
xor
add
test
pop
adc
add
leave
cltd
or
push
mov
xor
dec
sbb
mov
test
sub
push
sarb
sbbb
mov
lods
adcb
or
jecxz
pop
push
push
dec
add
cltd
and
inc
sbb
and
jg
add
rcll
add
mov
cld
inc
push
mov
add
inc
test
cwtl
scas
cmp
push
mov
add
adc
mov
push
dec
jg
sub
dec
stc
or
jb
movsb
mov
in
cli
add
adc
iret
nop
aad
add
or
pop
pop
or
push
ljmp
adc
mov
in
mov
mov
dec
or
jmp
sahf
add
inc
daa
jmp
js
out
pop
add
sub
in
popa
add
sub
and
pop
xchg
ss
repz
push
add
aad
push
add
mov
pop
lret
add
mov
roll
push
cmp
dec
add
jno
std
cmpsl
push
push
lock
sbbb
add
mov
push
inc
lldt
mov
inc
add
and
test
sbb
xchg
and
mov
test
and
pop
clc
or
test
inc
cmp
inc
adc
dec
sub
mov
jp
imul
xchg
mov
pop
push
xchg
and
adc
jp
xchg
mov
sbb
xchg
popa
pop
pop
cli
or
jecxz
stos
shrb
ds
mov
cltd
mov
push
inc
add
lea
sbb
sti
call
or
add
sarl
stos
jo
lock
ficompl
leave
jbe
adc
addb
cmp
pop
push
cmp
dec
test
cmp
push
orb
in
out
mov
mov
pop
adc
push
nop
dec
xchg
loop
fldenv
cld
jmp
jge
inc
arpl
lea
xchg
pop
ret
inc
xchg
pop
xchg
add
mov
cltd
xlat
add
xor
andb
push
loop
nop
add
mov
pop
adc
aas
mov
sbb
cmp
in
add
dec
add
dec
jne
pop
test
jg
push
out
lahf
inc
pusha
and
iret
subb
mov
movsl
notl
inc
popa
and
xchg
or
pop
pushf
leave
inc
add
dec
mulb
pop
xorb
xor
addb
and
add
test
cli
add
push
add
pushl
add
movl
imul
add
inc
sbb
mov
adc
inc
add
adc
inc
loopne
ret
or
sub
addb
or
sub
inc
in
and
mov
jae
add
jno
leave
fimull
jne
add
sbb
stc
pop
and
lret
fchs
rolb
and
ljmp
mov
stos
pop
inc
das
hlt
dec
add
mov
and
lds
addr16
sub
into
test
push
jnp
and
fadd
xor
sub
cmp
stos
ja
cli
push
bound
push
xor
test
xor
push
sbb
mov
or
or
fs
add
push
scas
aaa
arpl
or
jno
add
mov
sub
fiadds
adc
or
add
lahf
call
cmpl
jb
subl
jne
jmp
add
pop
mov
add
andb
cmpsb
lock
movsb
dec
icebp
cmp
cmpw
subb
jne
add
mov
or
inc
jmp
call
dec
mov
add
pop
pop
lahf
pusha
cmp
lret
in
cmp
push
add
inc
or
ret
cltd
jo
cmp
mov
jle
daa
add
xchg
xor
pop
popl
call
fiaddl
cmp
sub
ret
xor
or
sub
sbb
fdiv
xor
lock
adcl
pop
pop
push
cs
lock
and
sub
das
sub
pushf
rcr
add
push
cmp
adc
dec
pop
add
pop
scas
inc
shrb
push
mov
mov
test
nop
jno
add
loop
repnz
dec
jmp
add
or
iret
call
add
rclb
push
fst
and
add
sbb
mov
out
clc
add
or
or
adc
jmp
sbb
aam
inc
push
daa
push
mov
push
add
push
imul
cwtl
inc
pushf
scas
and
inc
pop
push
std
add
popa
cmp
cld
out
adc
or
and
fadds
ffree
dec
daa
xor
add
stos
ljmp
inc
add
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
jmp
dec
sub
daa
xchg
test
inc
popa
adc
push
pop
xchg
aam
imul
cmpsb
popf
clc
xchg
inc
add
inc
arpl
dec
ret
inc
add
aad
gs
rorb
mov
add
xor
shld
sub
pop
ret
les
jns
mov
sbb
add
lret
sahf
jo
inc
jge
add
jo
fiadds
and
add
loop
imul
pop
push
out
into
xchg
fldenv
fsubs
dec
add
icebp
xor
mov
cli
cmpsl
pop
pop
dec
repnz
push
sbb
cmp
or
mov
dec
call
jp
dec
fbstp
or
push
lock
imul
sub
aas
cmc
popa
add
call
add
xor
cld
xor
pop
add
insl
call
mov
cmp
xlat
cmpsb
push
shlb
nop
lcall
mov
jnp
dec
sbb
cmc
sub
cmp
xlat
add
add
dec
lock
mov
pop
loopne
push
pop
in
push
nopl
or
mov
std
dec
fcoms
dec
imul
rolb
pop
arpl
popf
xor
rcrl
push
cs
add
arpl
add
insl
push
enter
mov
or
dec
add
xor
cmpsl
add
xor
mov
es
sub
scas
jge
push
mov
pop
add
push
pusha
andl
cs
or
aaa
add
and
sbb
aam
dec
psubusb
push
shll
clc
pusha
add
add
out
add
and
incl
loope
movsl
inc
icebp
or
add
pop
pop
gs
dec
clc
inc
paddusw
push
or
lret
add
lret
inc
pop
insb
xor
cmp
add
test
clc
rorb
hlt
dec
pop
xor
cmpsb
dec
add
push
push
mov
lret
inc
int3
mov
clc
pop
jl
and
xchg
add
ficompl
sub
in
add
stc
adc
cmpl
push
imul
sub
add
mov
lods
or
cmp
lods
or
or
hlt
add
sbb
or
int
adc
sbb
pop
pop
cmpsb
and
test
pop
mov
addl
mov
loopne
push
hlt
test
add
mov
loope
sbb
popa
or
hlt
inc
push
lahf
add
je
pop
cwtl
insb
test
insl
sarl
mov
call
leave
cmp
cmp
into
orl
add
jne
add
out
call
add
mov
xlat
push
mov
cld
add
pop
orb
sub
or
push
fs
mov
cmp
int3
jnp
add
inc
cmp
popl
push
add
xor
dec
xor
mov
loope
je
cmp
ret
test
mov
loop
add
iret
aam
cmp
add
inc
jo
add
dec
movb
inc
inc
dec
lods
inc
and
cmpsl
aaa
or
add
test
and
push
pop
call
add
sub
fs
cmpsb
mov
jb
xor
ucomiss
in
shl
inc
xorb
outsb
addr16
popa
out
jno
rcl
insl
cmc
inc
inc
adc
add
cmpsl
nop
jge
jecxz
push
add
jmp
movb
pusha
out
add
icebp
loopne
das
sbb
add
lret
push
adc
jno
add
aam
and
enter
push
and
call
push
shlb
outsl
or
dec
sub
xchg
movsl
add
pop
sbb
dec
jmp
imul
push
xchg
out
movsb
int
and
inc
add
repz
add
sub
sbb
les
mov
and
scas
mov
or
jae
out
into
add
insl
dec
add
push
and
jne
sub
add
adc
pusha
or
mov
push
dec
scas
push
jne
mov
popa
in
std
push
sti
rolb
imul
es
inc
cmp
and
dec
loopne
add
data16
adc
gs
fisubs
lahf
jmp
mov
movsl
and
mov
inc
cli
mov
cmp
fmuls
hlt
cmp
je
push
dec
shll
cwtl
lods
add
sub
add
test
mov
cmp
lahf
in
inc
mov
mov
push
add
iret
movsb
pop
enter
lods
cmc
addl
rorl
cmp
cltd
add
mov
dec
push
add
push
cld
inc
repnz
add
sub
add
aas
cltd
sbb
fisubl
cld
add
je
les
add
add
inc
movb
inc
or
js
pop
add
in
clc
icebp
or
mov
stos
sub
iret
dec
pop
xor
jle
add
fdivrl
push
ljmp
pop
push
cmp
mov
xor
das
mov
ficoml
add
lea
rolb
add
lock
clc
or
mov
repz
mov
nop
aad
imul
in
stos
pop
add
xchg
xor
pop
dec
xor
imul
lock
pop
mov
in
pop
orb
mov
inc
dec
mov
add
push
adc
test
cmp
or
and
cs
mov
dec
cmpb
add
movl
add
daa
push
sbb
adc
adc
pminsw
cwtl
or
in
pop
push
and
xchg
or
mov
xchg
lods
mov
adc
pop
push
cwtl
push
inc
lock
lods
fcmove
add
cmp
mov
jle
mov
scas
into
sbb
sti
mov
call
leave
and
jae
xchg
xchg
or
cmp
push
mov
inc
inc
popa
lea
or
sbb
jnp
add
mov
dec
add
sbb
or
and
subl
sub
dec
cmp
sub
shll
addps
push
rcrb
push
orl
cmp
pop
add
dec
jle
adc
add
jne
push
cli
mov
imul
and
les
jmp
and
add
fldt
lea
adc
aam
cmp
lret
int3
add
sbb
jno
and
fmuls
add
bound
sbb
mov
nop
sbb
adc
scas
or
pop
dec
pusha
sbb
ret
push
push
pushl
push
add
sbb
pop
push
push
and
scas
popa
idivl
add
loop
sahf
and
pop
add
push
addb
add
ja
push
test
mov
pop
loope
and
pop
fisttps
movsb
sub
shlb
in
push
jbe
add
aas
pop
add
cmpl
sbb
jae
mov
push
int3
test
add
inc
xor
ret
movsb
xor
or
inc
mov
sbb
add
inc
shlb
push
add
or
mov
movb
incl
stc
stos
sbbw
nop
add
inc
dec
fiaddl
aad
push
mov
out
pusha
dec
dec
out
inc
cld
add
popf
icebp
pop
cli
adc
dec
shlb
int3
dec
pop
adc
sub
add
add
jl
mov
add
inc
cmp
je
pop
or
jp
out
jmp
dec
sub
add
into
leave
push
jne
add
dec
push
test
pop
jae
ret
xorb
in
adc
add
jne
icebp
or
mov
dec
imul
lock
jae
mov
or
mov
push
jl
add
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
pop
pop
jmp
add
add
and
push
daa
or
jne
push
lahf
push
vaddps
sub
dec
mov
bswap
ja
inc
pop
jno
orb
cmp
inc
jle
inc
jmp
mov
cmpsl
mov
inc
dec
mov
pop
aad
add
int3
pusha
incl
ret
jae
sbb
leave
and
and
in
sub
add
mov
ljmp
dec
sbb
mov
lret
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
push
jg
sub
in
rolb
js
adc
mov
pop
mov
subl
add
pop
jle
jnp
cmp
movb
push
negl
inc
outsl
add
mov
mov
or
or
adc
add
cmp
inc
sub
inc
fiadds
lret
adc
sbb
ljmp
ret
shll
push
mov
je
scas
repnz
cvtps2pi
add
fs
push
sub
mov
add
pop
add
call
adc
in
jb
cmp
pop
or
add
sbb
call
add
cmpb
fs
mov
lahf
adc
nopl
test
dec
jmp
or
clc
jl
jmp
push
mov
add
cmp
sbb
mov
dec
nop
jle
pop
das
mov
push
add
aas
aam
sub
jl
cmpsb
dec
inc
das
sub
daa
jns
pop
inc
sub
sbb
add
mov
dec
mov
or
inc
adc
test
sub
imul
add
lods
add
dec
pop
sbb
and
pop
jp
add
shlb
aam
xor
movsl
push
add
fsubs
orb
mov
mov
or
call
outsb
or
jnp
pop
add
adc
js
cld
jne
or
cmp
mov
out
adc
push
jbe
lret
mov
in
mov
push
or
call
lds
pushl
mov
mov
cmp
fs
sub
pop
xor
jno
adc
or
or
cmpsb
pusha
dec
cwtl
insl
jl
jp
orb
lret
fs
xor
cmp
sbb
pop
jecxz
cmp
and
cmp
enter
jb
cmp
sbb
add
xchg
mov
mov
lods
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
dec
cmp
and
pop
add
push
jb
pop
cmp
inc
mov
or
adc
and
add
sbbl
push
and
enter
inc
jb
cmp
sbb
xor
xor
sub
add
enter
jb
sbb
mov
rolb
shl
or
cmp
ret
sub
adc
clc
adcb
lahf
add
push
out
js
xlat
xor
dec
pop
xor
sub
mov
enter
xor
call
add
in
arpl
and
lock
or
sbb
xchg
mov
cmc
mov
clc
cmp
xor
and
and
add
icebp
mov
jb
cmp
sbb
sub
add
out
out
call
jmp
mov
jmp
pop
xchg
daa
add
in
jb
cmp
xor
inc
shlb
shll
call
enter
jb
or
ficompl
sub
add
fstl
rolb
sarl
sbb
add
les
lds
in
jb
or
sbb
and
mov
xchg
into
leave
iret
and
cmp
add
mov
mov
mov
mov
mov
and
mov
cmp
mov
and
cmp
orl
xchg
test
shrl
stc
loopne,pn
dec
ds
cld
add
repz
xor
or
cs
adc
mov
hlt
xchg
add
add
or
arpl
dec
jo
scas
mov
cmp
pop
pop
orl
call
dec
inc
pushf
cmp
add
loope
adc
pusha
test
bound
loopne
or
dec
jne
je
data16
insl
outsl
jb
cmp
pop
shrb
inc
jo
jmp
or
outsb
mov
sub
push
hlt
test
orb
lock
pop
fcomps
sbb
pop
popf
and
or
push
adc
adc
push
sub
or
dec
andb
out
cmp
inc
imul
mov
sbb
sub
xchg
rclb
adc
gs
negb
adc
add
dec
jbe
add
insb
outsl
ja
je
mov
fs
add
push
mov
sbb
or
xchg
pop
sub
imul
and
fsubrp
in
xchg
mov
and
xorb
nop
mov
and
sbb
popa
out
inc
cld
push
nop
das
push
push
sub
pop
mov
inc
inc
pop
mov
push
inc
outsl
jmp
fst
add
ror
movl
scas
fs
inc
call
or
outsl
mov
push
lods
cmp
sub
inc
pop
arpl
push
mov
insb
or
mov
push
imul
dec
inc
fldl
push
inc
lea
push
lock
or
arpl
andl
adc
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
scas
pop
add
rclb
or
cmp
addb
dec
outsl
lea
aad
pusha
in
aam
jns
aas
add
jge
and
mov
xchg
pusha
rorb
xchg
push
lods
mulps
push
andl
stc
xchg
scas
movlps
popa
rorb
movsb
cmp
jo
lcall
dec
push
and
pop
mov
pop
pop
add
add
adc
jge
cmp
or
add
adc
js
das
add
push
mov
call
dec
add
xchg
lods
dec
imul
pop
inc
and
insl
sub
cmpsl
sub
iret
das
mov
jno
cmc
cmp
mov
pop
sub
mov
add
fiadds
jo
mov
iret
jmp
sarl
aam
scas
add
jge
mov
cmp
dec
add
call
sub
jns
mov
daa
jne
stc
pushf
dec
cmp
add
addl
outsb
xchg
int3
or
fwait
imul
sarb
rsqrtps
jle
add
cmpsb
je
add
mov
mov
movsl
cli
jl
std
lea
mov
add
add
mov
push
mov
sub
or
movsb
int3
jbe
add
fadds
mov
inc
ds
arpl
mov
add
mov
sub
rclb
lock
mov
xorb
pop
loopne
pop
jmp
jbe
hlt
add
jge
mov
call
dec
xchg
sub
xor
insb
add
sub
push
inc
cmc
sahf
jae
push
addr16
xor
outsl
cltd
sbb
and
jno
add
mov
add
mov
push
dec
notb
sub
and
add
sahf
cmp
and
add
dec
in
hlt
ja
add
xor
bound
lock
leave
mov
xchg
or
daa
push
add
je
push
cmp
add
mov
sub
lret
push
aas
inc
jmp
add
out
aam
lock
stos
cmp
in
mov
sub
dec
add
hlt
imul
popf
sarl
cmp
pusha
or
pushf
test
shlb
xor
inc
bound
or
dec
push
jge
push
aaa
stos
xor
pop
pop
add
dec
leave
dec
jae
add
add
mov
push
aam
mov
mov
xor
data16
inc
stos
imulb
dec
and
enter
mov
je
push
cmpl
fwait
pop
and
dec
pop
test
mov
into
addb
fadds
unpcklps
push
test
sbb
push
out
mov
mov
pop
jg
mov
add
jmp
mov
sbbb
testl
rcrb
add
jne
dec
popf
loope
jg
idivb
add
and
mov
mov
cwtl
add
es
mov
add
in
push
pop
add
loope
xor
sbb
por
mov
mov
pop
cmp
and
sbb
and
push
lahf
popa
call
or
hlt
and
dec
cld
cmpl
mov
imull
mov
or
mov
sbb
fildl
push
cmp
outsb
out
test
shl
xor
or
test
xor
nop
sbb
mov
xor
inc
in
sti
clc
nop
add
lods
xchg
xchg
loop
add
subl
adc
push
enter
mov
sbb
lret
inc
add
psubsw
roll
sbb
inc
call
aaa
and
std
and
outsl
das
out
cmp
cmp
dec
fisubs
aas
push
pop
push
lret
cmp
repz
fwait
lret
aas
inc
inc
andb
pop
scas
push
push
add
lret
dec
das
add
jp
add
inc
sub
sub
fstps
pop
loope
stos
out
xor
xor
jmp
ficoml
mov
pop
mov
add
cmp
xorb
xor
inc
shr
mov
inc
clc
test
add
cli
daa
pop
inc
ljmp
mov
xchg
jl
mov
inc
enter
lods
and
nop
xor
jp
xchg
shlb
add
or
dec
push
inc
mov
pmuludq
dec
sub
je
add
loopne
icebp
add
push
lea
add
sbb
inc
add
flds
pop
orb
in
lea
adc
add
stos
dec
and
int
sub
adc
sub
inc
shlb
sbb
inc
or
adc
into
mov
insb
in
add
jge
repnz
push
pop
jbe
add
rorl
add
test
popf
aas
dec
add
mov
jp
add
ret
testl
icebp
das
shlb
inc
and
divl
add
cmpsl
fsubrs
lea
daa
repz
and
pop
sub
adc
rclb
movsl
xchg
pop
jge
push
inc
in
push
hlt
or
jno
add
cmp
inc
mov
inc
je
and
loopne
aas
sub
add
jmp
xor
mov
xor
cmp
xor
lods
call
mov
cmp
or
xor
aas
and
fists
mov
add
sub
xchg
fcoml
shll
mov
pop
mov
add
jae
push
fistpl
cmpb
lcall
dec
shl
in
xchg
lret
or
jg
mov
push
mov
call
addb
das
cmp
je
or
xor
jb
add
ja
imul
xor
cmp
je
adc
sub
add
push
sbb
sbb
sar
adc
push
adc
xchg
push
je
dec
fsubrl
sarl
jae
enter
jne
add
push
loopne
in
mov
and
popf
addb
jbe
cmpsb
pop
adc
in
xchg
pop
add
xor
xor
and
jno
int3
inc
xor
add
call
loopne
pop
dec
fdivrl
sub
stos
xchg
add
sub
pop
data16
adc
incb
dec
pop
push
popa
cmp
je
jg
cmp
sub
pop
add
jne
mov
testl
je
dec
sbb
orl
pop
stc
call
mov
sub
push
add
mov
lea
lods
add
add
and
add
and
sbbb
dec
push
push
push
sbb
dec
mov
fisttpll
jb
lea
mov
push
mov
dec
jbe
cmp
js
add
xorb
add
movl
repnz
cmp
mulb
jns
pop
fadds
call
inc
lahf
scas
add
pop
jne
ds
add
sarb
add
mov
mov
pop
and
lahf
mov
cmp
jmp
xchg
js
out
inc
sub
leave
and
mov
dec
sbb
lods
mov
mov
shl
fildll
sbb
lock
sbb
push
inc
jb
or
xor
divb
mov
dec
loopne
loope
test
pusha
push
sub
xor
jecxz
sub
jo
lret
mov
inc
push
add
loopne
or
lds
orb
dec
sbb
add
jg
push
sbb
add
inc
repz
ljmp
adc
jg
cwtl
pop
add
cmp
jbe
dec
mov
jne
mov
push
add
sbb
sub
subb
add
push
push
pusha
repnz
iret
call
dec
dec
shll
ret
push
add
mov
mov
and
or
mov
sub
arpl
daa
popa
stc
xchg
pusha
sbb
or
into
call
or
add
add
in
xor
cld
xchg
push
or
push
dec
sub
movsb
mov
add
loopne
lock
dec
add
add
scas
rcll
sub
add
and
sbb
in
jne
add
loopne
lea
cwtl
inc
jnp
or
inc
add
rolb
clc
xor
das
add
pop
inc
xor
add
test
pop
jge
sub
push
adc
arpl
mov
push
sbb
jns
setb
inc
cmp
xor
and
mov
add
out
ret
push
xor
inc
add
pop
in
inc
add
jg
add
movsl
outsl
leave
popa
push
pop
cmc
add
mov
sub
cmp
add
add
or
push
popf
int
dec
pop
adcb
push
or
add
pusha
mov
call
fcoms
jl
movb
outsb
jnp
sbb
jae
or
cmp
inc
orl
mov
faddl
in
mov
rolb
sahf
dec
pusha
pop
sbb
ret
roll
xor
or
mov
fdivs
rorb
push
fwait
cmpsl
add
das
inc
pop
xor
lret
sub
movsb
dec
jo
fisttpll
hlt
es
cltd
jp
cmpsw
pop
jns
add
iret
cmc
adc
or
adc
daa
add
and
addr16
jp
inc
hlt
rclb
add
clc
pop
sahf
xchg
and
mov
addb
xor
cltd
add
or
mov
mov
cmpsl
mov
adc
xchg
inc
sbb
cltd
or
iret
daa
cld
sub
push
add
icebp
imull
pop
xchg
or
test
enter
and
mov
adc
mov
mov
pop
xchg
sbb
fidivs
add
icebp
add
je
xor
add
sub
clc
test
insb
cli
add
dec
in
cmp
dec
pop
add
cmp
add
xchg
loopne
lea
out
xor
lds
popf
mov
jb
add
jle
es
popa
add
or
sti
add
sbb
clc
cmp
sbb
pop
adc
jle
jae
andb
ds
jle
xor
in
mov
cltd
mov
icebp
insl
lds
rorl
sub
pop
inc
fwait
mov
add
jl
or
leave
jne
loope
add
adc
je
mov
pusha
xchg
fcoms
jl
and
sarl
imul
cli
hlt
add
add
dec
repnz
mov
and
push
incb
and
test
jg
pop
lret
adc
push
aad
or
add
jmp
cmc
add
xchg
lock
test
mov
push
add
jl
jg
xchg
imul
adc
xchg
add
lods
mov
xchg
cltd
sbb
add
or
out
dec
js
cmp
hlt
add
ds
sub
aaa
jns
jnp
add
sub
loopne
add
repnz
mov
push
pop
pop
adc
push
cltd
mov
cmpsb
add
je
pushf
dec
push
pop
dec
mov
pop
in
mov
cmp
jb
insb
or
jmp
fisttps
loope
cltd
cmp
insb
add
es
hlt
mov
and
inc
les
adc
pop
xor
push
or
push
shlb
mov
mov
sub
cmp
test
cld
mov
out
pop
inc
dec
add
cmp
add
cmp
lds
sub
and
pop
fstl
lret
dec
ss
push
push
inc
pop
repnz
add
adc
das
inc
push
repz
add
mov
and
push
ss
and
add
mov
cltd
scas
jo
inc
sar
add
fidivrl
repnz
mov
xchg
add
push
mov
lret
xchg
pop
mov
cmpsb
mov
add
push
sub
lods
and
jns
push
adc
imul
add
call
add
cwtl
idiv
xor
in
mov
add
mov
in
and
loopne
add
je
xor
inc
pop
lock
xor
rclb
and
add
mov
jmp
add
mov
inc
add
cmp
je
mov
nop
cmp
mov
mov
hlt
js
push
sub
add
jne
fists
lahf
inc
das
cmp
sbbb
dec
out
mov
test
bnd
aad
movb
push
je
cmp
jecxz
xor
pop
in
push
test
and
pop
mov
ficoms
mov
popa
clc
outsl
mov
add
rcll
roll
test
push
add
jae
xchg
add
repnz
test
ret
scas
into
icebp
and
add
insl
mov
or
push
add
inc
mov
xchg
and
jecxz
cmp
push
mov
mov
dec
pop
sub
subb
adc
inc
add
and
or
jne
or
orb
or
push
add
aas
add
lods
push
xchg
and
cmp
jne
push
xor
les
add
pop
aas
mov
xor
add
popa
dec
adc
int
rolb
xchg
adc
nop
sbb
ficoml
add
hlt
testb
pop
daa
lahf
icebp
sbb
xorb
jmp
xchg
add
in
push
and
add
insb
sub
push
aam
cmp
pushw
inc
subb
jg
in
and
shrb
or
sub
jp
je
xor
push
and
rcrb
inc
adc
dec
mov
add
arpl
jle
push
scas
add
pushf
jns
les
adc
dec
fadds
sti
in
fsubrl
pop
jns
or
cmpl
jl
or
push
sbb
call
aam
out
sub
adc
add
adcb
test
pop
sub
fs
dec
loop
addb
add
mov
add
add
jae
push
repnz
mov
push
add
cmpsb
dec
pop
pop
add
xor
ljmp
and
mov
jne
lock
dec
ljmp
dec
nop
inc
add
push
cmp
xchg
sub
sbbb
add
scas
cld
sub
or
jae
ljmp
add
idivl
add
pop
sbb
or
add
ss
or
cmc
adc
test
je
xor
test
mov
pop
mov
rcrl
jmp
or
sbb
lods
imul
scas
ja
add
leave
lods
sub
add
mov
mov
iret
xchg
xchg
ds
sbb
dec
add
cmp
and
adc
sub
fcoms
sub
and
dec
mov
mov
out
cmp
sbb
xor
xchg
xchg
pop
sub
test
sub
sbb
pop
addb
out
je
icebp
int
add
cmp
out
imul
fcomip
push
add
scas
and
add
sub
add
and
leave
push
or
pop
jg
mov
loope
jne
jmp
sbb
adc
add
mov
call
add
jg
je
jnp
and
arpl
jne
inc
add
hlt
push
xor
pop
shl
jecxz
pop
or
jge
sahf
jne
dec
mov
mov
ljmp
push
or
inc
xchg
and
jne
enter
jmp
adc
sbb
mov
inc
mov
test
sar
imul
adcb
rcll
pop
call
adc
xor
cmpl
push
push
or
push
mov
pusha
add
shlb
call
jg
aam
xor
jnp
push
adc
sbb
pop
xor
push
in
jns
add
test
add
push
jne
sub
mov
jge
xchg
push
jns
pop
and
push
popa
test
cmp
cmp
inc
pop
xchg
das
mov
jae
out
xchg
add
mov
into
push
jnp
add
jno
or
fwait
cli
jp
dec
inc
inc
movsb
sbb
neg
roll
and
sti
mov
imul
add
shlb
and
sahf
psubsb
pop
out
and
mov
stos
xchg
dec
pop
inc
cld
dec
push
sub
add
push
add
js
xchg
add
ljmp
add
sub
lds
nop
mov
xchg
imul
inc
jne
dec
clc
push
add
cld
std
test
add
and
cwtl
loop
adc
jb
shrb
xorl
mov
cmp
inc
and
pop
daa
pushf
imul
ja
inc
dec
das
push
out
mov
push
or
add
add
fcoml
and
sbb
test
adc
push
pop
lods
mov
por
add
cs
jo
mov
dec
in
mov
jns
add
icebp
sbb
pop
xchg
int
and
adc
jns
mov
sbb
xchg
sarb
in
clc
sti
pop
cwtl
lock
das
fdivrs
add
shlb
pop
pop
in
in
hlt
sub
fistpl
das
sarl
insb
lret
add
mov
pop
add
xor
jmp
pop
mov
add
enter
pop
lock
cmp
xor
add
add
mov
inc
addb
add
sub
jae
xchg
add
nop
mov
add
jle
sbb
add
pop
or
add
sub
fnstenv
movsl
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
jge
push
add
mov
js
add
out
cmp
dec
test
add
sub
inc
or
cltd
add
bound
add
jl
xchg
mov
jnp
test
icebp
or
adc
dec
pop
jl
or
add
sbb
and
sti
jg
fnstenv
clc
cltd
add
sub
pop
ds
add
sub
je
sbb
add
push
or
jbe
les
pop
push
push
sbb
or
push
and
js
clc
push
push
inc
pop
or
jle
filds
ret
xchg
outsb
cwtl
cltd
pop
adc
scas
xor
add
add
add
les
cmp
and
addr16
add
call
mov
mov
mov
enter
dec
lds
mov
sub
stos
pop
pop
jo
xchg
add
mov
dec
or
jecxz
ret
enter
add
mov
lock
adc
mov
add
mov
ja
cmp
pop
cld
cltd
xor
sub
add
add
sarl
add
jg
fdivrs
cmpl
loopne
bound
adc
pop
roll
push
adc
dec
loop
xor
add
lahf
roll
cld
movb
fsub
addl
fcmovb
adc
add
dec
out
add
dec
mov
mov
ret
jnp
shl
leave
sub
pop
shl
fiadds
fbld
dec
leave
add
or
adc
fwait
add
or
add
out
dec
dec
xlat
pusha
movsb
add
mov
add
sbb
inc
fwait
mov
loope
hlt
push
push
imul
xlat
jno
xor
or
dec
or
inc
int3
and
add
pop
ljmp
sbb
cmpsb
pop
jmp
sbb
inc
push
jb
inc
and
add
cs
jge
or
shll
adc
scas
hlt
lods
adc
andb
and
je
hlt
add
pop
mov
adc
sbb
lock
ljmp
adc
cli
andb
pop
jo
add
popf
cmc
push
pusha
jno
pop
dec
adc
push
add
sub
xchg
loop
inc
jecxz
pop
repnz
test
push
aad
sbb
or
cmp
cmp
sbb
jle
and
add
mov
nop
or
loopne
adc
mov
movsl
mov
push
jo
cmpb
cltd
jmp
add
inc
sub
push
enter
xchg
andb
pop
jmp
lea
xor
or
add
test
roll
lahf
fsubl
addb
pop
add
lret
push
fcomps
xchg
popa
add
sub
ja
jbe
jae
add
test
test
add
clc
lahf
adc
inc
xor
jb
les
jae
mov
add
push
and
inc
ret
or
gs
or
add
orb
lock
push
shr
pop
test
dec
testb
and
pusha
incb
jnp,pt
cmpb
je
add
dec
sub
sub
inc
add
mov
sbb
pop
loope
or
mov
add
and
cmp
mov
and
ret
or
je
lret
mov
cmp
push
push
frstor
jge
les
popa
repz
enter
add
dec
push
sbb
test
and
decb
or
lldt
pop
incb
rcrb
sub
or
dec
add
mov
adc
ret
pop
imul
cs
les
push
sbb
call
int3
lret
pop
lea
lds
sti
jl
cwtl
or
cmp
inc
fdivrp
adc
daa
dec
mov
pop
mov
loope
orb
mov
bswap
fdivs
int3
adc
or
add
and
push
aas
xchg
inc
push
jl
jne
dec
xchg
mov
xchg
jnp
test
mov
sub
frstor
xchg
fcoms
sahf
jb
cvtps2pd
add
xor
add
pop
jnp
lods
adc
orb
sbb
aas
loopne
mov
jno
add
mov
sbb
dec
and
add
inc
rcl
fsubrs
data16
add
or
inc
into
adc
nop
add
popf
push
roll
inc
inc
mov
sahf
jnp
das
pop
or
shlb
or
adc
add
mov
cmpsl
popl
push
movsl
xchg
inc
cli
loopne
add
add
lods
outsl
add
insb
nop
jns
push
stos
add
xchg
pop
xor
xchg
movsb
in
stos
xchg
add
mov
adc
fdivrs
push
push
das
rcrb
add
jle
xchg
cmp
add
add
hlt
test
inc
lock
test
add
rclb
jne
add
and
nop
gs
add
jns
add
mov
add
lods
gs
mov
lds
mov
roll
jns
or
mov
jmp
insb
jo
or
pushf
cltd
push
sbb
test
push
dec
jp
cmp
cmpb
sub
or
or
pop
jne
xchg
cmp
popf
and
pop
mov
add
or
daa
add
jp
les
or
xchg
ds
sahf
add
and
inc
jmp
jg
add
scas
js
jp
pop
add
mov
inc
lods
and
pop
loop
movsb
add
sub
aam
mov
or
add
push
clc
outsb
jge
jbe
sbb
std
jb
dec
stc
shrb
test
add
loop
lahf
movsb
frndint
push
mov
mov
add
add
jne
push
add
movsb
test
stos
fs
fidivrs
xor
loope
mov
inc
cwtl
xchg
xor
dec
push
adc
ret
push
add
mov
mov
insb
xor
add
cmp
sti
add
lock
mov
ljmp
rcrl
mov
aas
mov
call
loop
sub
add
pusha
jle
jmp
mov
aad
imul
xor
add
lcall
pop
lds
test
rorb
mov
push
mov
js
jmp
ljmp
and
inc
enter
add
jg
push
rorb
fcompl
xor
or
pop
add
fiaddl
enter
xchg
lock
nop
lods
movlps
addl
mov
aaa
cli
dec
pop
les
fistps
lods
mov
add
adc
mov
add
out
sbb
or
cmp
rcrb
add
imul
add
sbb
daa
jne
push
enter
std
jns
add
pop
and
push
and
sbb
psadbw
adc
pusha
cmp
nop
out
add
push
jmp
or
popf
jns
pop
lds
mov
call
inc
rolb
cs
and
adc
and
pop
adc
mov
lods
adc
call
inc
and
xor
mov
push
popa
into
dec
lock
add
add
mov
cli
fisubrs
add
out
cld
and
dec
inc
cmpsl
add
rorb
xchg
pusha
popa
adc
sbb
mov
xabort
lret
cmp
es
inc
mov
add
test
add
or
sarb
lea
cmp
movsb
xchg
mov
push
xchg
sbbb
add
or
nop
test
das
repz
or
dec
and
add
mov
mov
inc
mov
and
icebp
add
xchg
or
out
inc
jle
push
push
bound
add
and
add
jmp
rcrl
inc
add
jp
pop
in
sub
fmull
add
xlat
adc
lods
nop
mov
jb
fs
mov
outsb
add
mov
and
loop
in
testb
test
jecxz
jmp
addb
and
paddd
cmp
mov
pushf
and
clc
jbe
shrb
add
sbb
test
add
and
arpl
cmpsl
add
xor
fildl
call
jbe
aas
ja
loope
fucomp
je
clc
jne
icebp
push
adc
and
mov
xchg
and
int3
add
add
sbb
add
xlat
push
push
std
mov
mov
jo
add
xchg
mov
mov
push
jns
sub
rcrb
dec
je
or
psubusb
jb
jmp
mov
ja
and
pop
xor
adc
subb
movl
outsl
mov
add
repz
daa
nop
dec
push
add
cld
call
popf
or
xchg
or
jb
pop
roll
and
dec
push
mov
sub
outsb
sbb
add
push
rorb
jge
inc
hlt
clc
xchg
subb
push
loopne
mov
mov
mov
popf
dec
into
mov
fcmovnb
or
xchg
aad
add
pusha
sbb
dec
mov
xchg
fidivs
insl
add
mov
xor
add
shll
sbb
lcall
nop
or
mov
mov
cmp
clc
pop
sbb
add
inc
push
bound
add
daa
jmp
out
fnstenv
aaa
in
inc
sub
push
jmp
push
les
inc
mov
fs
add
jne
add
or
inc
addr16
call
mov
jns
mov
mov
push
fmuls
sbb
mov
rolb
dec
icebp
fisttps
add
sbbl
add
xchg
movsl
or
jmp
add
sbb
push
call
dec
and
es
lock
add
movsl
mov
mov
cmpsb
in
mov
xchg
movsb
insb
data16
hlt
mov
push
dec
in
adc
xchg
xchg
mov
add
push
mov
or
mov
les
sahf
in
adc
and
shlb
push
sub
pusha
add
fsubrl
lea
pusha
imul
cwtl
push
test
loopne
movsb
xchg
repz
test
sub
sbb
and
cmpsb
cmpsl
leave
sbb
arpl
mov
add
mov
std
cmp
jmp
stos
pop
arpl
dec
dec
push
add
rolb
add
or
sbb
sub
and
pop
test
cmp
push
nop
inc
add
pop
xor
sbbl
je
loopne
add
inc
push
cli
bound
imul
into
sub
rolb
inc
mov
fisubrl
mov
xorb
and
les
cmp
or
jb
add
test
mulb
dec
push
std
push
pushf
jg
adc
add
or
add
mov
stos
cmp
add
pushf
inc
mov
cmp
inc
sahf
dec
fnsave
add
mov
cmp
or
push
or
es
add
mov
mov
mov
xor
test
fdivs
int3
inc
fsubrl
pop
mov
pop
hlt
and
adc
dec
cld
cmp
xchg
mov
push
add
dec
xor
nop
add
shlb
jo
test
add
movsb
or
inc
fdivrs
or
fdivl
loopne
lock
cmp
add
xor
sarb
pop
pusha
mov
mov
outsb
add
jmp
mov
dec
pop
cld
add
test
jl
mov
or
or
add
sub
add
dec
pop
or
inc
test
jne
add
xchg
inc
push
cmp
inc
fildl
xorb
ret
cmpsl
popa
add
faddl
pop
dec
in
sub
add
add
pop
test
rorl
xchg
testl
add
pop
fistpll
gs
test
jle
jp
sub
lods
pop
dec
jge
cmp
inc
add
sbb
adcl
add
inc
xor
push
out
mov
mov
dec
pop
daa
mov
shll
sub
push
inc
mov
jmp
jns
add
imul
sbb
xor
pop
lock
add
mov
inc
add
movsl
leave
dec
in
enter
add
jle
xchg
int3
daa
cs
add
and
and
inc
lock
pop
add
mov
fsubrs
mov
pop
inc
xchg
or
or
add
cltd
ror
cmp
add
inc
outsl
push
in
fstpl
bound
sbbb
push
xchg
mov
cmc
ljmp
popf
sub
fs
adc
add
adc
outsb
lock
sti
push
sub
inc
rol
add
sahf
sub
ljmp
add
push
pop
bound
in
js
jge
xchg
jb
test
lds
mov
cltd
stc
aas
cmp
test
outsb
fdivrs
mov
rclb
je
faddl
mov
jl
das
jno
movb
sub
sbb
pusha
mov
inc
add
cmp
imull
push
packsswb
shlb
cli
das
jbe
push
cs
fnstenv
xor
jge
subb
movsl
inc
xor
or
xchg
push
add
pusha
add
mov
movsl
add
je
xor
inc
add
nop
dec
mov
fsubrl
hlt
cwtl
add
call
mov
mov
push
add
std
call
inc
bnd
cmp
adc
pmaxsw
rolb
cld
push
add
sbb
aad
push
or
adc
lea
stos
add
setg
lret
lds
mov
loopne
mov
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
inc
int3
lret
jne
out
loope
repnz
test
or
int3
add
mov
fiaddl
test
push
push
cmc
nop
cwtl
add
and
aas
add
sbb
add
mov
add
add
das
add
movsl
push
lock
inc
daa
inc
adc
jbe
sbb
inc
fwait
mov
sub
jmp
push
fisttps
push
ss
nop
mov
mov
subl
mov
adc
repnz
inc
adc
rorb
xchg
repz
sub
in
xchg
sbb
mov
das
pop
mov
loope
pop
sub
pop
push
cmp
sahf
or
mov
pusha
adc
cmp
xor
cld
or
push
sub
rolb
nop
loope
mov
int3
lahf
test
jle
xchg
add
pop
clc
bound
cltd
in
pop
lock
shll
nop
stos
aam
lret
pushf
rdmsr
sbb
cltd
aas
jne
jbe
out
fcomps
add
bound
hlt
add
mov
jge
push
cld
push
jle
add
cmpsl
inc
push
sub
sub
sbb
fimull
or
adc
pop
xor
aad
cltd
cmp
idivb
sbb
mov
inc
push
insl
cmp
fs
test
pop
push
push
add
scas
repnz
popa
cli
or
push
jo
inc
sbbb
xor
adc
verw
nop
jecxz
push
into
add
adc
add
mov
add
add
mov
mov
add
jmp
mov
stos
and
dec
out
loop
add
inc
lods
and
and
mov
cmp
or
inc
dec
jb
mov
jns
jo
imul
push
push
inc
push
shlb
inc
js
add
mov
mov
in
mov
add
adc
add
sbb
mov
fidivl
mov
mov
fmuls
test
enter
or
cs
dec
aas
pop
nop
mov
mov
dec
orb
cmp
fisubs
or
fs
mov
add
or
es
pusha
subb
mov
aas
push
xor
cmovs
cmp
jecxz
and
enter
repnz
adc
out
sbb
dec
test
repnz
jo
adc
xor
fwait
mov
xor
inc
and
popa
in
mov
add
js
jns
aam
push
add
xor
inc
pop
add
sub
movsb
loopne
fsubl
xor
fdiv
orb
jns
js
shlb
clc
enter
dec
jge
iret
fcmovb
sub
inc
mov
mov
popl
cmp
lods
pop
mov
xlat
movsb
repz
mov
aas
mov
jp
xchg
jge
jge
addr16
mov
xor
call
aad
xor
dec
clc
sbb
push
or
je
movsb
jp
jg
fbstp
insb
setb
push
pop
sub
jbe
push
test
mov
in
dec
daa
cmp
push
and
inc
in
call
rcrb
pop
aas
or
call
adc
fdivrl
pop
push
adc
inc
and
xlat
es
mov
dec
add
stc
mov
pop
pop
mov
add
ret
add
xor
pushf
push
sub
testl
xor
pusha
in
clc
inc
mov
add
lds
mov
shr
lahf
sbb
scas
jmp
mov
and
jne
out
mov
adc
sti
add
je
add
ja
xor
mov
jle
mov
sbb
adc
sti
lods
pop
mov
add
cltd
fstpl
cmp
scas
int3
cs
lcall
lods
or
sbb
pusha
ret
mov
out
add
sub
cwtl
add
push
in
mov
cmp
std
jl
or
leave
xchg
sbb
pop
stos
inc
test
inc
mov
and
push
jmp
clc
stos
mov
pop
je
sbb
loop
or
add
stos
push
xor
dec
clc
mov
pop
cmc
andb
push
push
sarb
mov
sub
mov
xchg
ljmp
inc
sub
add
dec
stos
or
jne
add
jmp
mov
maskmovq
pop
mov
cld
les
stos
xchg
push
mov
test
testl
sti
and
mov
jmp
add
xor
pop
and
addl
adc
add
fwait
dec
in
inc
add
sub
mov
jo
add
dec
mov
div
mov
sbb
inc
mov
dec
je
dec
jne
add
pop
push
xor
jmp
add
sbb
add
inc
rol
sub
add
test
loop
orl
add
or
inc
add
pop
jbe
cli
jae
fisttpll
mov
xor
push
je
push
push
push
leave
and
sub
sub
call
jg
imull
add
fdivrl
rolb
dec
cld
push
inc
pop
ret
and
outsb
inc
add
popf
mov
cmpsb
and
std
aas
sub
jg
push
sub
pop
add
push
data16
sbb
jle
inc
call
sbb
fisubl
fisttps
xor
daa
sub
xor
inc
pop
ret
add
and
mov
mov
jb
add
jbe
sbb
jmp
scas
inc
jns
stos
out
fcoms
jnp
dec
ret
sub
lea
cld
dec
add
sub
inc
pushf
dec
mov
bound
nop
add
lock
add
mov
data16
dec
jp
cmp
push
or
cmp
shll
mov
sbb
jle
sarb
negl
sub
mov
add
xor
pop
push
mov
mov
lock
dec
or
shl
cmp
jne
or
sbb
add
and
add
add
loop
mov
cld
sbb
add
or
nop
add
add
rolb
cmp
movsl
shl
sbb
imul
out
ljmp
mov
add
aas
mov
add
push
clc
push
hlt
push
mov
mov
and
add
daa
xor
movl
ss
clc
inc
cld
mov
add
inc
inc
int
outsl
testl
jge
and
add
mov
xor
mov
push
mov
and
sub
add
testl
pop
in
ret
pusha
pop
sub
add
sub
test
ljmp
sti
movsb
or
adc
pop
inc
xchg
add
adc
outsb
cmpsb
and
ds
add
sub
faddl
sub
arpl
jne
add
add
mov
jl
pop
clc
dec
into
inc
daa
jmp
mov
sbb
sbb
dec
and
dec
mov
test
int
jno
add
out
add
lock
insb
add
or
in
push
xchg
cmp
sbb
add
mov
out
gs
dec
lea
into
add
mov
fisubrs
fmuls
sbb
jne
sbb
inc
sarb
add
in
adc
inc
subb
inc
dec
pop
or
fneni(8087
icebp
pop
xor
outsl
data16
lret
insb
pop
jmp
cmp
sahf
push
dec
rolb
inc
adcl
add
leave
repnz
jne
add
stos
mov
cltd
rcll
mov
stc
das
inc
add
movsl
mov
pusha
mov
imul
dec
add
cmp
add
inc
push
push
popa
sbb
cmpl
add
add
inc
outsb
push
jmp
fldt
sbbb
imul
cmp
clc
das
inc
add
or
sub
cli
flds
pop
loope
dec
mov
inc
dec
cmpsl
sahf
fmuls
fisttpll
sbbl
inc
je
fidivl
push
cmp
clc
add
jne
lea
mov
fwait
mov
mov
cmp
xor
sbb
bound
jmp
rolb
inc
mov
dec
add
lea
add
cmp
cmp
adc
arpl
jb
xor
mov
add
cmp
adc
jmp
add
cmpsb
xor
add
mov
sbb
and
pushf
icebp
inc
and
cmp
roll
mov
mov
add
mov
push
cs
test
enter
je
cld
jns
idivl
imul
add
mov
sahf
cwtl
js
cld
and
pop
mov
orb
cmpsl
add
add
dec
xchg
dec
push
add
js
hlt
fildll
xlat
mov
ret
sbb
xor
mov
dec
fwait
cld
adcl
mulb
or
pop
mov
or
xorb
lret
cmp
roll
cmp
and
push
and
xor
dec
ljmp
adcl
aad
aas
inc
shl
stos
mov
jmp
stc
mov
sti
je
mov
push
add
dec
jge
fisttpll
fnclex
add
mov
or
add
cmp
lds
pop
add
inc
sbb
adc
add
inc
test
cmp
je
lds
filds
test
call
pop
add
push
inc
loope
and
loopne
ret
sub
stc
add
xchg
stc
test
adc
add
loopne
ds
aas
jnp
jmp
add
test
mov
add
add
ret
mov
insl
inc
nop
fadds
cwtl
lret
push
dec
jmp
cmp
orl
xor
push
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
pop
daa
jle
loop
ss
add
test
cmp
add
call
aas
jle
je
add
mov
add
stos
call
mov
nop
push
mov
sub
pop
aas
cmp
jo
rorb
nop
adc
push
adc
and
ror
push
jae
xchg
or
or
mov
clc
add
and
loopne
adc
sbb
test
cmp
test
cmp
inc
xor
push
arpl
adc
cmp
xor
mov
sbb
jae
mov
pop
hlt
pop
stos
xchg
mov
leave
jb
scas
sbb
and
sbb
js
rclb
add
add
mov
test
mov
or
inc
jp
add
sti
lret
lcall
dec
mov
hlt
xor
add
push
not
mov
pop
or
inc
das
sbb
shl
add
xor
fstpt
add
repz
add
ret
or
fnstcw
hlt
push
inc
pop
dec
ja
ror
insl
or
mov
jmp
lea
xor
add
lcall
fdivr
fcmovb
loopne
repnz
pop
divb
adc
add
shr
mov
stc
cmp
jne
addb
frstor
add
into
add
cmp
ja
add
jp
adc
push
adc
cmpsl
cli
jae
lock
sarb
add
dec
push
add
mov
sub
cmp
jecxz
adc
int3
orb
mov
test
add
movsl
idivl
arpl
pop
xchg
push
das
test
outsl
testb
push
mov
add
into
dec
pop
xacquire
mov
lea
mov
cmp
ror
int3
leave
addb
xor
add
push
add
daa
or
adc
je
xchg
add
rol
jne
add
and
dec
pop
mov
test
dec
lock
ljmp
push
mov
jl
add
mov
or
push
cmp
push
xor
and
out
push
out
dec
popa
pop
incb
test
push
shrl
xchg
adc
add
fmul
aas
add
paddsw
push
test
cld
pop
push
ljmp
xor
lea
cmp
es
movsl
pushf
add
mov
mov
pop
inc
inc
inc
mov
jo
call
or
mov
mov
sbb
sbb
or
out
and
mov
or
adc
add
add
fldcw
data16
xor
fwait
dec
push
add
jnp
popf
push
and
mov
mov
mov
add
je
push
rcrb
xor
adc
out
pop
xchg
add
flds
or
loope
xor
xchg
adc
loop
mov
pop
testl
adc
lea
jg
add
jne
xor
add
mov
xchg
add
jne
shlb
pop
mov
pop
inc
sub
in
or
pop
bound
outsb
add
addr16
in
loopne
out
mov
mov
fcmovb
movsl
mov
loop
xlat
ljmp
pop
sub
mov
mov
aas
pop
mov
push
or
lods
adc
sahf
xchg
adc
cmp
mov
adc
lods
sbb
addb
mov
or
and
iret
and
clc
loopne
jno
dec
pop
add
sbb
pop
adc
pand
jae
cmpb
lock
sbbl
call
add
mov
sbbb
in
add
ret
add
cltd
mov
out
jl
call
ret
sbb
dec
and
and
mov
sub
int
add
sub
fdivs
inc
cwtl
rorb
mov
pop
in
ljmp
adc
cmp
repnz
add
clc
mov
fs
add
pop
das
mov
add
or
add
stos
jae
inc
push
stos
jle
scas
jbe
push
add
mov
cmpsb
pop
add
insb
inc
xchg
dec
push
js
xchg
loopne
lock
inc
cli
add
cs
pusha
test
add
mov
push
cmp
push
scas
imul
inc
rcrl
jl
or
pop
dec
inc
or
xor
add
jmp
les
in
add
add
aas
add
mov
rcrb
adc
push
iret
lret
add
xor
dec
add
jno
and
loopne
inc
add
jnp
cld
push
jl
add
dec
ja
mov
cltd
add
ret
imul
mov
add
mov
add
mov
add
fbstp
and
cmpsl
pop
lcall
call
push
repnz
xchg
jecxz
push
pop
sub
leave
rolb
sub
pop
pop
hlt
je
inc
das
ret
std
xlat
or
adc
add
roll
push
dec
pusha
mov
xor
dec
or
add
rolb
lods
xor
mov
jmp
mov
or
shr
push
fdivrs
or
sysexit
and
in
incb
pop
into
jne
xor
and
mov
testl
movsl
jns
pop
test
rolb
jns
call
pop
pop
dec
pop
dec
fiaddl
not
adc
ret
aaa
add
jno
add
or
mov
addl
add
sbb
lods
sbb
add
ljmp
sbb
movb
mov
push
cld
subb
dec
loop
xchg
add
mov
shr
loopne
imul
add
inc
sti
ljmp
add
in
movsl
sbb
inc
add
xchg
cmp
add
mov
xchg
push
int3
in
mov
testb
mov
call
jmp
inc
inc
cmp
adc
icebp
add
rcrl
cmp
fistpll
popf
les
lret
xchg
shll
cmpsb
mov
add
out
pop
cld
add
cmp
orb
cmc
add
or
add
adc
pusha
jecxz
ret
mov
es
fdivrl
pop
rorb
hlt
out
xchg
sub
jmp
jns
mov
add
pop
pop
out
dec
clc
movsl
in
add
rclb
lret
sub
sbbb
repnz
and
mov
jae
mov
push
scas
dec
add
fadds
dec
add
and
xchg
add
mov
xchg
emms
pop
pusha
mov
sub
je
add
pushf
push
lret
movsb
and
jmp
sbb
enter
jg
mov
pop
packsswb
mov
push
les
sbb
jecxz
push
pop
inc
icebp
loopne
sar
add
div
xchg
in
and
shl
mov
and
push
sub
and
movsl
jb
mov
shlb
pop
in
inc
push
mov
jo
test
cmp
cmovo
cmp
mov
pop
add
movsl
inc
insl
add
pop
xchg
push
dec
call
xchg
xchg
cld
fists
push
mov
mov
pop
sub
mov
pushf
jo
xchg
int3
xchg
adc
jge
mov
pop
or
sub
lret
dec
out
add
packuswb
mov
outsl
faddl
push
mov
pusha
pop
fstl
add
pop
scas
add
push
fmull
int3
pop
enter
xchg
ret
shlb
or
jg
je
movb
add
out
nop
add
and
mov
mov
push
adc
rcrb
movsb
push
adc
jmp
nop
xor
add
push
jnp
add
pop
mov
add
loope
jmp
dec
bound
cmc
sub
mov
jne
lock
jns
out
add
in
repnz
mov
sbb
add
push
jl
loope
sti
xchg
jo
mov
movb
dec
xchg
js
dec
sbb
pushf
sbb
mov
repnz
mov
dec
cmp
and
pop
dec
stc
xorl
inc
fiaddl
cwtl
add
xchg
adc
sub
inc
xor
pushf
xor
test
mov
popa
bswap
stos
adc
mov
xchg
call
and
lret
sub
daa
mov
loopne
add
jnp
mov
shlb
call
and
xchg
cmp
mov
add
or
pop
enter
mov
fwait
dec
or
lock
push
cmp
fstpl
in
or
mov
mov
and
in
pusha
negb
lds
fwait
inc
int3
push
fdivr
and
add
xchg
je
or
sbb
mov
nop
sbb
mov
or
sub
jge
jne
daa
pop
inc
jbe
add
repz
add
mov
aam
das
mov
and
ljmp
sbb
pop
pop
cmp
dec
xor
fidivl
push
loop
test
add
ret
xor
add
pop
aas
jg
add
les
js
pop
or
add
cli
pop
add
or
add
pop
push
mov
jl
jbe
hlt
sub
jb
iret
fistpll
xor
or
push
stc
add
cmp
sbb
adc
test
pop
xor
enter
adc
lret
pop
mov
add
jo
pop
adc
add
xchg
enter
mov
xor
jbe
shl
cmp
add
lret
lods
ss
imul
mov
adc
push
add
or
lock
mov
push
or
mov
and
scas
fwait
add
add
out
movsb
jmp
push
add
into
enter
push
dec
inc
add
movsb
fstl
sahf
add
shll
fisubs
add
add
jae
mov
xchg
cmp
lcall
jecxz
les
test
pop
inc
cmp
cmpps
xor
add
or
add
imull
enter
inc
xchg
clc
arpl
mul
dec
movsb
mov
hlt
inc
sub
daa
add
test
jl
pop
test
add
popa
mov
or
dec
mov
pushf
add
lahf
jmp
int
xor
cmp
stos
popa
loope
mov
pop
add
iret
outsl
sti
jno
fsubp
jecxz
add
cmp
mov
add
sbb
test
add
fisttpl
mov
or
inc
movsb
inc
pop
pop
fs
add
or
adc
inc
add
lea
mov
dec
add
add
xchg
shrb
clc
jo
and
add
jns
jge
mov
push
sub
test
add
popf
xor
dec
mov
pop
and
jge
inc
hlt
mov
inc
or
lds
sbb
incb
add
add
popf
mov
cltd
dec
inc
lods
xchg
cmp
add
push
lock
mov
mov
adc
dec
leave
test
mov
sbb
cmpsl
adc
adc
and
clc
sbb
lods
xor
jp
movsl
adc
add
adc
rolb
push
insb
lods
mov
das
sarb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
sbb
adc
sub
inc
mov
add
dec
fwait
sub
add
sbb
and
mov
add
pop
lret
jno
push
pop
dec
mov
fs
je
adc
jns
jno
jle
add
les
outsl
int3
pop
mov
dec
rcr
scas
push
push
xchg
rolb
addl
das
mov
in
and
ljmp
or
push
mov
cld
ja
mov
jle
push
fildll
pop
shlb
clc
push
sbb
and
ficomps
xchg
push
aaa
pop
push
add
jo
nop
push
aad
jb
daa
pop
and
inc
insb
cwtl
cmp
pop
jae
add
push
sbb
pop
sarl
lock
incb
jge
repnz
mov
xchg
sbb
push
or
ljmp
add
xor
pop
dec
push
test
insl
out
shrl
cmp
mov
inc
and
jge
dec
cltd
add
mov
dec
mov
pop
fsubs
inc
add
inc
push
gs
ret
pop
add
sub
lcall
inc
shlb
push
sbb
jge
add
test
arpl
xchg
sbbb
movsl
int3
mov
add
cli
jle
sub
fsub
es
cmp
enter
sarb
or
inc
xchg
pushf
pop
add
inc
int3
sub
add
or
pop
mov
test
add
jae
shll
lea
pop
movsb
pop
mov
lea
cmpsl
rolb
ror
pusha
add
push
adc
push
cld
es
add
enter
adc
sti
pop
adc
in
add
cltd
push
xchg
push
pop
mov
punpckldq
and
push
pop
or
cld
or
push
call
jg
clc
mov
jge
ror
mov
jp
add
mov
int3
roll
sahf
inc
inc
add
je
scas
aam
jno
test
sahf
lods
ljmp
adc
xchg
cmp
and
ret
add
clc
popf
leave
cmp
mov
rcll
add
mov
jne
ja
adc
sbb
sbb
mov
sbb
add
lea
mov
sbb
mov
out
loopne
into
add
inc
aad
push
clc
push
sarl
insb
add
inc
daa
sub
jle
push
push
mov
call
add
mov
aam
mov
mov
add
fists
add
adc
enter
add
mov
pop
iret
fnstsw
pushf
push
xor
test
orb
test
incb
dec
inc
rorl
imul
fwait
inc
lret
mov
dec
sbb
add
xor
cmp
mov
jo
pop
push
fdivrs
icebp
and
jo
mov
pop
add
movb
add
addr16
cmpsl
xor
popf
lcall
cld
fcompl
cmp
rcrl
cmpsb
xor
es
add
hlt
loopne
hlt
scas
add
and
je
cmpsl
inc
mov
jge
xor
aam
add
pop
rorb
lea
dec
cmp
fadds
mov
xor
mov
jp
cltd
mov
mull
int3
xchg
jns
jecxz
out
push
mov
adc
test
xor
mov
add
push
push
dec
and
add
pop
sbb
mov
xchg
inc
mov
ds
add
mov
adc
jg
xor
mov
add
addr16
adc
adc
pop
push
adc
pop
sub
subb
mov
jmp
push
mov
jge
fimuls
roll
jle
movsb
push
adc
pop
add
pop
push
ret
add
adc
add
jle
sub
xchg
rcrb
pop
ss
or
sbb
ret
inc
or
adc
or
add
and
add
js
rorb
push
ljmp
jmp
add
mov
stos
xchg
add
sbb
inc
out
add
dec
test
add
adc
pop
aam
mov
mov
fdivrl
add
ja
sub
cmpsb
out
adc
add
push
push
pop
jmp
cmp
dec
pop
jne
in
shll
cmp
jge
lcall
addl
or
lods
pop
xchg
mov
ljmp
icebp
push
stc
xor
ds
cmpb
add
insb
push
fbld
cli
cmp
pop
fs
and
push
aas
out
add
dec
hlt
sub
fistl
adc
into
xchg
lock
jb
push
xor
or
mov
adc
mov
ja
add
test
lret
add
enter
inc
sub
pushf
adc
out
add
add
sbbb
cmp
pop
les
pop
sub
mov
and
and
xor
jnp
jno
add
sub
inc
xor
outsb
add
outsl
addl
mov
dec
cld
push
xrelease
and
repnz
cmp
add
imul
rolb
std
or
or
je
ja
add
sbb
xchg
test
scas
popf
add
sub
lock
pop
add
mov
dec
dec
inc
mov
fwait
jbe
mov
adc
aaa
movb
addb
orb
or
aad
xchg
jno
ljmp
mov
add
movsl
ja
cli
cmpsb
add
sub
fldenv
and
jge
xchg
inc
push
nop
scas
into
ljmp
push
popa
fisubs
clc
movsl
rolb
mov
sub
add
scas
mov
add
test
adc
test
aas
xchg
ds
xor
mov
lods
push
add
es
adc
jb
adc
mov
sub
enter
aaa
andb
or
movb
add
pop
or
cmpsb
add
nop
mov
pop
pusha
add
into
sbb
pop
add
ret
sub
push
mov
cwtl
jnp
iret
and
bswap
jg
call
inc
jns
jnp
mov
imul
sub
jg
or
scas
shll
xor
push
aas
test
add
adc
jne
or
dec
pop
fstpl
ss
adc
cli
xor
push
ljmp
fnstsw
add
xchg
subl
or
jns
jg
decb
cmp
loopne
mov
fdivp
inc
pusha
data16
add
jg
xchg
mov
add
and
and
cld
loopne
sub
sbb
add
and
enter
xchg
loop
dec
jl
add
and
add
lret
std
xchg
fadds
lods
aaa
add
outsl
insl
dec
outsb
imul
hlt
xchg
jle
pop
or
jno
nop
fisttpll
out
add
push
fs
icebp
mov
call
imul
push
jno
add
lcall
add
cmp
or
imul
jnp
adc
push
cwtl
push
add
and
test
sub
mov
daa
cmc
push
loope
or
js
jne
out
and
ljmp
icebp
or
nop
push
xchg
loopne
lret
sub
sbb
stos
pop
mov
mov
lret
inc
or
fstl
add
cmp
add
xor
or
aad
clc
in
pop
lock
or
fldl
pop
enter
jno
aaa
add
test
stc
jg
adc
inc
sbb
lahf
push
outsl
dec
rcll
cld
pop
fmull
loope
in
cmp
or
inc
jmp
dec
into
push
testb
testb
shlb
add
pop
lock
loop
jno
and
mov
jnp
in
testb
icebp
add
jno
cmp
movsl
mov
sbb
mov
ljmp
mov
loope
inc
je
pusha
scas
xor
shl
or
jmp
bound
xor
pop
cmp
add
jecxz
xchg
mov
rcrl
hlt
arpl
sbb
stos
pop
push
mov
push
jle
rcrl
aas
jecxz
lods
ljmp
in
sbb
push
pop
inc
movsl
adc
addl
cltd
inc
rclb
pop
mov
jg
mov
lea
in
jnp
mov
shrl
imul
add
popf
xor
sti
push
push
pop
add
aam
clc
mov
mov
es
test
adc
lcall
sub
daa
dec
push
lret
mov
inc
push
pop
lcall
sbb
push
jb
ss
inc
xchg
sub
sub
add
pop
push
pop
xor
push
fiaddl
push
push
in
gs
mov
call
orb
cwtl
pop
cmpsl
sub
test
cmpl
fstpl
es
out
rorb
jae
pop
mov
pop
loopne
aas
cmc
inc
in
pop
pop
mov
lods
int
call
paddw
repnz
add
lock
pop
stc
push
sbb
add
push
clc
insb
pop
sub
mov
icebp
ljmp
dec
aad
es
add
jne
xchg
aas
and
add
mov
push
bound
icebp
mov
fwait
les
out
and
mov
push
add
lock
push
subl
jmp
add
icebp
je
fildl
or
dec
cs
pop
dec
add
int3
push
mov
outsb
ret
popf
in
add
inc
test
add
xor
bound
out
mov
sbb
cmp
jge
dec
shll
lods
ficompl
outsb
call
lods
mov
and
xchg
push
fsub
imul
push
je
subl
call
fs
repz
add
loopne
call
add
xlat
dec
ret
pop
xchg
scas
addr16
stos
sbbb
or
push
bndldx
loopne
inc
fyl2xp1
sub
pop
add
mov
shlb
xchg
xor
push
inc
flds
xchg
mov
out
lahf
call
xchg
xchg
mov
aas
in
stc
cmpsb
clc
shrl
mov
jo
call
jne
add
jp
jle
dec
sub
cmp
rolb
and
test
sub
cmp
mov
add
lock
inc
pop
cmp
in
or
or
add
nop
sbb
sbb
add
and
fs
cwtl
pop
add
insl
cmc
rcll
and
add
data16
xor
rclb
clc
push
add
rolb
xor
pop
add
jo
push
in
jle
cmp
popf
cld
inc
ljmp
repnz
in
pushf
dec
or
mov
test
and
int3
add
adc
add
pop
pop
add
stc
ss
hlt
scas
aas
insb
bound
test
in
jl
add
pusha
push
je
popa
outsb
jae
inc
jb
in
daa
xchg
lock
sarb
add
push
sub
cmp
cmp
mov
xchg
rol
fnsave
pop
mov
lock
out
and
adc
add
cmc
mov
add
bound
stc
sbbb
cmp
je
mov
leave
pop
jne
sahf
roll
dec
incl
test
add
jle
pop
inc
cmpsl
or
mov
lea
mov
and
testb
pop
dec
xorb
inc
jg
pop
add
and
inc
jmp
aad
and
loopne
add
cmp
iret
pop
mov
shl
addr16
dec
add
and
and
out
or
add
cmpl
add
cltd
call
push
add
stc
and
add
or
neg
xchg
cmp
add
out
adc
clc
add
fimuls
lods
jmp
add
inc
add
xchg
into
cmp
add
or
jae
sbb
adc
in
adc
add
and
add
test
mov
lock
nop
and
mov
jno
sbb
ljmp
and
push
faddl
mov
je
mov
pop
inc
mov
inc
cmp
pop
adc
add
add
ret
push
lret
adc
int
sub
sbbb
scas
jg
add
int3
out
xchg
fmull
push
adc
push
pop
mov
dec
xor
ss
jmp
and
sub
xchg
add
outsb
into
call
or
test
add
ret
adc
add
dec
movsb
les
cmp
jns
test
mov
loope
nop
out
mov
or
int3
or
iret
inc
inc
sub
in
icebp
sbb
sbb
sub
dec
push
test
jle
leave
and
roll
scas
or
xchg
or
movb
cld
sub
test
jle
cmp
inc
sub
adc
lret
inc
cmp
cmp
sbb
mov
call
cltd
and
sub
add
pop
mov
jmp
add
and
and
cs
sbb
sub
lret
mov
inc
push
imul
adcb
jno
add
and
ja
lsl
in
add
lret
enter
jle
add
add
or
loopne
push
nop
adc
bound
shlb
inc
js
and
jbe
ds
subb
mov
or
pop
in
int3
mov
push
ret
jg
xor
stc
cmp
xlat
dec
test
lds
xchg
mov
fwait
jae
add
dec
inc
push
pop
ljmp
push
add
std
lahf
sub
ret
cld
in
mov
inc
add
dec
add
add
dec
mov
pop
mov
rclb
xor
adc
rol
cmp
and
pusha
cwtl
loopne
fdivr
add
fs
int
mov
inc
aas
add
push
sub
add
xor
lock
cmp
add
or
int3
jle
inc
outsl
sub
rorb
in
mov
push
test
xor
sub
arpl
pop
icebp
pop
mov
or
fildll
add
daa
mov
add
cmc
mov
add
das
pop
jo
fstps
or
inc
jle
in
outsb
subb
pop
cli
jb
xor
push
cmp
add
or
add
adc
mov
add
nop
scas
cmpsb
loopne
fs
add
xchg
sub
sub
add
push
out
rolb
outsl
adc
loope
jl
or
sbb
xchg
jmp
jbe
add
jge
dec
add
test
push
push
dec
sahf
adc
add
push
call
and
mov
loop
pop
add
icebp
xor
out
add
jnp
cs
xor
popf
inc
cmpsb
dec
push
pop
or
xor
jecxz
stc
out
sbb
sbb
and
and
packuswb
inc
paddb
stc
cli
cmp
incb
cs
and
cs
pop
sbb
xor
and
inc
or
add
jae
add
or
mov
inc
lahf
cwtl
pushf
add
sub
xchg
icebp
movsb
add
iret
push
loop
inc
xor
sbb
add
jg
ds
xchg
out
pop
pop
inc
fcomps
aad
mov
sub
enter
testl
and
nop
sub
xor
sub
mov
popf
les
in
mov
nop
imul
enter
mov
aas
xor
xchg
sbbb
adc
inc
cmp
mov
and
or
mov
rolb
bound
imul
jge
incb
repz
add
xchg
rolb
imul
pop
fs
cmc
rclb
pop
add
xchg
rol
dec
push
push
add
adc
imul
dec
call
add
sti
inc
adc
movsl
mov
sub
adc
add
mov
rcl
cmp
or
inc
add
in
add
test
hlt
in
and
mov
mov
repz
sti
shl
pop
add
and
add
out
movsl
jns
sti
fmul
loope
xchg
add
xlat
les
cmp
add
aaa
ret
test
js
bound
cmp
xchg
or
sbb
add
adc
inc
cli
int3
push
sbb
add
cmp
lea
aas
inc
mov
add
mov
cmp
sti
add
cmc
in
add
add
add
rorb
or
loop
loopne
adc
add
fadds
add
cmp
ljmp
les
addr16
sbb
divb
addb
add
cmc
cmp
js
push
popa
popf
insl
mov
sbbl
in
sbb
mov
add
pop
dec
or
mov
les
imull
adc
rcrb
adc
cmova
pusha
cmpb
test
jo
mov
fprem
xor
jle
pop
fwait
icebp
adc
mov
push
hlt
ljmp
sbbb
pop
aam
stc
sbb
add
in
xchg
cmp
aam
sbb
mov
add
shlb
iret
in
fistl
out
adc
loopne
sbb
arpl
pusha
sahf
mov
pop
add
sbb
or
push
lods
les
test
inc
and
sub
inc
add
or
int3
out
outsb
mov
push
testl
call
mov
add
push
inc
pop
cmpsl
and
xchg
dec
stos
xchg
jo
inc
rolb
mov
add
inc
andl
mov
jmp
call
lcall
jo
pop
and
push
add
mov
orb
int3
ljmp
sub
jns
loope
jge
out
push
std
fcomps
dec
cmp
out
test
ljmp
test
aad
clc
jl
mov
out
sub
bound
stos
inc
mov
adc
add
cwtl
jge
mov
push
and
jns
add
div
test
and
mov
cmp
fld
inc
stc
call
rcl
sub
ja
add
leave
push
adcb
outsl
jmp
loopne
xor
push
jne
aaa
inc
lret
outsl
arpl
push
jg
in
inc
scas
adc
inc
decl
mov
jl
dec
cmp
jle
or
fimull
inc
or
add
nop
mov
clc
dec
sub
dec
dec
sub
pop
xlat
mov
xchg
imul
pop
mov
mov
sub
add
jae
call
dec
sub
clc
lret
cmp
sbb
or
ljmp
in
sbb
adc
cli
add
sub
cmpl
adc
adc
push
sub
sub
adc
mov
mov
cli
pusha
rcrl
push
jbe
xor
add
sub
subb
iret
pop
adc
and
addr16
adcb
inc
add
pop
xor
cmp
or
sub
inc
mov
inc
push
add
sahf
pop
aas
sarl
adc
and
add
push
decl
jl
sbb
js
jg
jge
add
sbb
or
ror
fmull
and
daa
clc
push
test
leave
outsl
insl
jno
pop
imul
inc
stc
and
xchg
ljmp
test
add
xor
jbe
mov
xchg
xor
sub
sti
mov
std
sub
mov
mov
and
enter
sub
int
or
pop
sti
xchg
adc
xchg
orb
pop
insb
rorl
movsb
faddl
pop
add
or
cmp
in
lret
in
xor
cld
bound
inc
leave
pushf
and
or
popf
idivb
cltd
mul
add
in
dec
adc
adc
sbb
clc
sbb
orb
jns
clc
hlt
mov
enter
and
or
lret
psrad
mov
or
inc
adc
test
enter
in
lret
or
icebp
and
push
rolb
adc
add
dec
fstpl
dec
clc
mov
repnz
cmp
in
addr16
enter
xchg
stc
pop
sbbb
adc
cmp
scas
add
imul
or
jmp
jnp
dec
outsb
pop
add
popf
push
lret
test
add
fs
sub
sub
and
push
cmp
loop
sbb
ds
xchg
fsubrl
push
loope
adc
pusha
dec
dec
sbb
add
and
bound
add
aas
pushf
push
clc
test
repz
aam
push
daa
add
xor
ret
xor
nop
sbb
add
mov
loop
and
sub
adc
add
push
jl
add
call
pop
hlt
in
and
sbb
pop
add
les
into
and
cli
roll
mov
test
mov
jnp
add
clc
and
sahf
or
inc
mov
jns
call
sub
add
pop
jp
js
pop
push
fcoml
jmp
dec
nop
pop
cmp
cmp
cmp
inc
or
and
dec
hlt
cmp
lcall
leave
push
sarb
loop
pushf
jmp
adc
add
rolb
divb
and
add
popa
je
cmp
push
cmp
nop
cmp
dec
in
add
push
sub
mov
adc
push
sbb
adc
addps
add
or
notl
movsl
add
pop
test
and
cs
mov
loopne
xchg
or
clc
psllw
pmaxub
push
cmp
and
xor
add
loopne
add
cs
pusha
cmp
call
xchg
aam
aaa
fsubs
add
jmp
outsb
repnz
xchg
fwait
cmp
pop
xor
add
mov
xor
add
sub
jle
jmp
sub
test
push
or
mov
rorl
pusha
pusha
sbb
mov
dec
std
call
add
mov
ds
mov
add
push
addb
rclb
out
or
cmp
adc
and
cmp
fcomps
test
sbb
std
cmp
sar
push
cmpb
xorb
je
mov
jge
xchg
test
or
mov
out
mov
adc
sti
mov
into
cmp
and
or
call
dec
popf
pop
and
xor
dec
xor
out
aad
rcl
addr16
jne
dec
adc
add
jmp
loop
push
das
loope
or
cs
ss
jb
fcmove
insl
das
jp
or
jmp
pop
pop
test
sub
addr16
add
sub
movsl
decl
xor
pop
seto
push
sbb
or
or
cmp
sbb
std
and
and
add
ljmp
out
dec
call
add
movsb
loop
mov
arpl
popa
lahf
addb
mov
dec
int3
mov
sbb
push
xor
nop
roll
or
incl
xor
pop
jno
dec
pop
cmp
inc
or
cmp
aaa
mov
xchg
unpcklps
or
clc
mov
sub
jns
push
pop
loope
sti
ja
les
add
lea
pop
xchg
add
jnp
jo
xor
pop
pop
fnstenv
push
push
pop
lods
cmpsl
dec
std
hlt
mov
sti
xor
sub
lret
lds
sbb
jle
mov
push
add
mov
mov
sbbl
xor
sub
sub
cmpsb
inc
xchg
xor
xchg
jp
xchg
jmp
scas
jae
and
adc
mov
add
lret
xchg
cmp
xchg
loopne
mov
jo
cmp
in
popf
add
inc
add
sub
movsl
add
shlb
cmp
popf
xor
mov
adc
es
add
call
pusha
and
mov
push
fdivrl
loopne
push
inc
clc
add
enter
ljmp
xchg
sub
pop
mov
or
jno
ret
pop
cmp
mov
push
fisttpll
cltd
cmp
mov
test
fwait
add
lret
cmp
sbb
pop
jl
hlt
xchg
fistpl
jl
or
cmpsl
or
push
popa
loope
add
dec
add
and
inc
push
ficomps
js
jl
pop
gs
incb
add
dec
lret
pop
leave
subb
add
mov
ja
dec
jbe
add
adc
jle
inc
pop
mov
jno
nop
outsl
scas
rcr
inc
add
adc
cld
stos
test
fistpll
iret
inc
in
cmp
jl
mov
add
sbb
out
jmp
testb
adc
add
lret
fs
push
punpckhwd
inc
cmp
jecxz
enter
sarb
xor
add
or
cmp
mov
dec
adc
sbb
mov
clc
ja
pop
mov
mov
fdivrs
xor
inc
js
mov
lahf
call
out
dec
pop
sub
dec
xchg
xor
insl
js
or
dec
push
push
xchg
inc
sub
jae
cmp
sub
cmpb
loop
shl
shr
lock
test
dec
push
add
lret
or
sub
add
dec
inc
out
add
or
cmp
lahf
nop
das
int3
pop
mov
add
stc
js
add
xchg
addr16
add
mov
daa
xor
mov
add
cmp
jg
add
shl
add
mov
jl
adc
stc
clc
and
mov
mov
es
pextrw
popa
test
and
pop
push
push
push
adc
xchg
xor
inc
inc
push
add
sbb
cmp
adc
stc
xchg
scas
loop
call
cmp
loope
icebp
dec
call
mov
pop
stos
cli
inc
outsl
scas
xchg
mov
or
dec
fcomi
lret
icebp
addb
pop
cwtl
add
jg
add
add
or
push
dec
xorl
jns
sbb
icebp
xor
pop
lret
rorb
adc
add
adc
popl
repnz
jge
es
stos
add
sbb
jo
pop
push
jne
mov
ret
jg
add
jle
add
cmp
add
pop
add
dec
mov
pusha
scas
mov
add
mov
jmp
cld
das
test
call
add
dec
je
push
inc
hlt
xor
insb
loopne
enter
in
and
mov
sbb
push
add
mov
mov
mov
mov
cmp
add
mov
lcall
dec
ficoml
sbb
sub
inc
xor
dec
pop
inc
sub
out
add
push
and
or
xor
xchg
mov
pop
jle
add
and
repnz
addb
arpl
push
or
jmp
add
jl
inc
sbb
clc
stos
jo
inc
rolb
lods
mov
mov
repz
cs
mov
jnp
rol
stos
push
push
fs
add
dec
lcall
xor
je
jmp
cmp
jecxz
cmp
lret
dec
pop
cli
cmpsl
add
inc
pushf
adc
pusha
outsb
push
inc
push
cmp
add
repnz
out
xor
inc
sub
xor
lahf
add
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fadds
loopne
repz
and
addl
cli
jb
mov
cld
pop
xor
inc
movsl
call
xchg
sbb
pushf
jp
mov
mov
fadds
add
test
add
imul
call
cmp
xlat
outsl
movb
data16
mov
vorps
or
inc
xchg
outsb
sbb
in
inc
out
faddl
nop
mov
cmpsl
push
add
orb
add
and
and
out
adc
test
add
inc
shrb
jp
js
jl
pop
roll
paddusb
loopne
xchg
add
cmp
mov
xor
out
lret
pop
sbb
pop
pop
subb
in
push
mov
hlt
sbb
xchg
mov
dec
sub
clc
xchg
add
shll
xchg
cld
xor
out
add
fsubr
fidivrl
xchg
cmp
pop
jl
add
add
je
add
enter
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
out
add
sub
subl
mov
lcall
enter
mov
aam
adc
mov
mov
sbb
shll
rcrl
add
scas
inc
js
adc
cld
loop
rcr
inc
add
adc
cli
add
nop
jecxz
jnp
push
std
mov
add
dec
daa
jne
aam
test
inc
xor
or
je
jcxz
das
push
and
add
sbb
ret
call
xchg
xor
push
imul
pop
movsb
xor
add
jle
scas
es
scas
add
repnz
incb
cmp
pop
aas
movl
sub
aas
mov
nop
or
xadd
add
jb
je
jo
add
add
rorb
in
mov
ficomps
pop
sbb
add
rcr
pop
fiaddl
sbb
dec
fimuls
ffree
sbb
sbb
add
aam
aad
cmp
pop
sbb
loope
in
call
adc
add
adc
in
xor
add
shl
xor
ss
testb
shlb
hlt
add
cld
cmp
add
sarb
ds
xchg
jno
cmp
sarb
psubw
sub
add
add
shrb
sub
inc
ljmp
cmp
add
in
inc
pusha
push
in
add
and
and
daa
add
mov
idivb
jecxz
and
add
shlb
and
data16
mov
cmp
andl
cmpsl
in
loopne
add
inc
movsb
loopne
insb
add
lods
subl
outsb
inc
scas
cmp
stos
cmp
imul
or
test
push
sarl
mov
jp
mov
enter
loopne
or
mov
jl
mov
je
push
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
mov
shlb
inc
mov
push
add
nop
adcl
push
inc
xchg
ret
xchg
daa
push
inc
push
addr16
rcll
rolb
pushf
rcrb
inc
jo
add
sahf
add
pop
cmp
xchg
lcall
or
pop
sbbb
fisttps
cmp
addl
dec
lock
rorl
rorb
dec
inc
mov
inc
or
or
or
xchg
mov
inc
call
xchg
in
sbb
push
mov
cld
jb
add
js
and
xor
push
popf
push
rcrb
jns
push
and
inc
add
push
add
mov
mov
pusha
pop
popf
add
pop
add
jno
aad
or
and
in
ja
pusha
test
jae
aas
call
mov
add
add
movl
adc
dec
sbb
xchg
push
sbb
mov
lock
add
and
fistps
jnp
scas
cmp
sub
arpl
add
push
push
data16
adc
fdivrp
mov
dec
jo
push
push
push
sarb
add
lods
xor
add
dec
push
mov
lcall
jne
dec
add
or
sub
jle
jl
pextrw
cmp
mov
add
adc
lods
add
mov
lahf
adc
pop
fisttps
pusha
push
cld
lcall
cwtl
push
lods
cmp
mov
pusha
add
jo
call
inc
in
or
adcl
lea
xchg
pop
cmpsl
and
push
xor
fadds
adc
cmp
add
aad
mov
add
jne
add
cwtl
mov
stc
xchg
inc
push
jp
push
inc
pop
scas
leave
sarb
add
daa
add
addr16
mov
stos
add
lret
sbb
mov
test
add
cs
xor
jno
out
add
adc
add
sti
icebp
dec
xchg
nop
pop
adc
mov
adc
repz
and
add
pop
pusha
cmp
loop
add
stos
nop
xlat
insb
push
stc
leave
add
icebp
pop
shlb
xchg
jmp
sbb
or
mov
jno
xchg
dec
xchg
add
into
rcrl
lret
mov
leave
icebp
add
cmp
popa
mov
into
push
cmp
mov
adc
push
les
push
add
add
mov
and
cli
jbe
and
and
push
loop
push
cmp
sub
push
adc
int3
enter
enter
xor
andb
and
pop
xchg
jno
jb
mov
add
repnz
sub
testb
icebp
dec
cld
stc
ret
push
or
sub
xchg
adc
mov
push
int3
ret
add
sbb
dec
ret
clc
lods
incb
adc
lods
dec
and
dec
inc
xchg
cmp
inc
inc
adc
xor
mov
lods
dec
xor
stc
cmp
sub
or
mov
movsl
adc
loope
add
or
mov
or
lods
int
push
inc
or
sub
test
enter
xor
icebp
sub
imul
add
aaa
sub
add
mov
fs
loopne
repnz
cmp
adc
fwait
loopne
mov
pop
movlps
rcll
add
leave
mov
mov
mov
enter
rolb
push
popf
lods
fcomp
fs
dec
or
fs
sbb
or
jecxz
jno
xchg
add
data16
inc
cmp
dec
pop
nop
or
push
ja
aam
inc
xchg
lret
add
pop
icebp
or
inc
pop
sbb
stos
and
scas
shlb
repz
or
cmp
insb
xlat
fildl
shll
cld
and
push
repnz
pop
sub
out
pushf
cmp
mov
or
add
icebp
add
pop
mov
pop
in
inc
pop
test
xchg
int3
loop
out
pusha
loopne
sbb
mov
and
lock
xchg
push
mov
adc
sbb
mov
test
scas
xor
and
popf
add
in
add
dec
or
push
add
or
cmp
inc
cmp
sub
dec
inc
addr16
addr16
xchg
pop
jge
mov
xor
test
adc
add
leave
je
push
js
mov
test
jnp
mov
xor
daa
shl
jmp
orb
dec
call
mov
ret
ucomiss
mov
mov
add
jmp
shrb
push
jno
add
ja
subb
les
mov
sub
jle
xchg
ret
mov
orl
out
sub
and
adc
add
movq
sub
add
sbb
or
jnp
in
adc
shr
pop
sub
add
jne
jno
les
pop
mov
das
div
psubd
inc
ljmp
mov
sub
jge
addb
fbstp
sub
add
lret
jg
hlt
js
add
cmp
fs
es
cmp
adc
aas
sbb
enter
repnz
or
mov
or
sub
call
cs
pop
pop
clc
pop
loop
js
add
insb
sub
cs
aas
add
div
and
add
insl
cmc
and
xchg
push
push
lcall
data16
or
mov
movsb
push
cmp
mov
or
nop
inc
adc
loopne
cmp
adc
jb
repnz
add
push
sub
adc
add
repz
pop
pop
std
jecxz
call
adc
nop
add
mov
hlt
add
cli
cmc
mov
add
lahf
jae
imul
sbb
xor
cmp
lldt
fmuls
rcrl
push
stc
jns
cmpl
sub
cmp
pop
mov
jno
orb
cmp
cmp
and
sbb
inc
in
pop
add
mov
or
cmpsl
sbb
pop
xchg
xor
cwtl
loop
add
ret
cmpsl
call
out
shr
je
mov
or
mov
and
mov
hlt
pop
sbb
pop
inc
jecxz
inc
pushl
push
add
sub
xor
add
pushf
inc
dec
add
test
filds
stc
lods
notb
add
fnclex
test
neg
mov
sti
mov
mov
cltd
push
std
out
addl
push
and
mov
mov
loopne
fsubrs
mov
sub
leave
js
jge
jg
pop
push
dec
inc
sbb
inc
inc
inc
pop
inc
inc
dec
cmp
dec
dec
dec
dec
dec
dec
push
cs
or
add
pop
sbbb
pop
bound
data16
imul
pop
pop
jg
test
jne
shlb
jns
xor
xor
xorb
sub
add
and
and
sub
mov
jge
loopne
sub
sub
daa
sbb
xor
add
cmp
push
jae
add
pop
aas
cmpsl
cmc
dec
pop
and
sar
ss
rolb
fstl
lret
mov
pop
xor
hlt
subb
bound
testl
add
fdivrs
aad
aam
cmpsb
outsb
pop
add
inc
loopnew
lcall
push
in
lahf
add
mov
add
inc
js
stos
cmpsb
mov
test
fstl
jge
xchg
hlt
in
dec
xor
cwtl
arpl
mov
rolb
sub
outsb
adc
scas
lea
push
out
movb
jle
shl
sbb
loopne
add
inc
dec
dec
jne
aam
pop
orw
dec
inc
mov
xchg
shrl
mov
xor
dec
call
ljmp
add
stos
adc
jg
push
fs
cld
dec
lock
lods
mov
rcrl
inc
mov
incl
add
and
cmp
xor
pop
and
jne
mov
repz
iret
rol
inc
pop
xor
ljmp
inc
mov
or
cmp
pop
rorb
mov
test
adc
std
add
sti
adc
cmc
inc
sub
test
xor
add
loopne
cmp
add
or
orl
add
test
inc
add
test
sbb
mov
das
data16
arpl
add
push
aam
inc
mov
push
pop
pop
push
push
mov
dec
mov
mov
sub
add
xorl
push
movsl
sub
push
test
inc
inc
and
andb
lahf
pushf
sbb
sub
adc
mov
and
es
addb
adc
mov
out
adc
add
add
cmp
sbb
sub
fs
mov
push
or
out
pushl
lahf
out
rorb
add
xchg
sbb
loop
repz
mov
and
push
mov
add
push
push
or
xchg
shrb
push
cmp
addl
jl
pop
inc
add
nop
test
adc
movsb
in
jmp
add
jbe
or
push
call
js
inc
xchg
ficompl
push
dec
subb
jl
add
mov
push
pop
shll
outsb
movsl
into
pop
mov
cld
adc
push
mov
add
add
push
mov
jno
mov
test
xchg
xchg
stos
enter
cmpb
mov
cld
dec
inc
add
mov
mov
mov
mov
pop
loop,pn
add
jae
outsb
jecxz
into
and
sbb
add
dec
inc
push
add
push
push
pop
mov
sub
push
mov
xor
cmp
in
inc
mov
inc
and
sbb
push
jp
mov
add
mov
and
insb
jmp
in
sti
popa
pop
sub
cld
mov
mov
lret
push
leave
lcall
jne
adc
loopne
dec
lock
add
adc
mov
mov
jne
add
clc
daa
push
imul
jge
sub
mov
mov
add
mov
stos
into
fbstp
fstpt
movsb
jo
add
popf
fs
pop
and
xchg
xor
movsb
add
enter
xor
ret
add
incw
and
out
sbb
mov
pop
push
adc
jb
add
sub
cmc
inc
out
clc
sub
xor
adc
push
add
rolb
jae
add
or
out
add
imulb
push
les
cmp
xchg
inc
sub
adc
ljmp
xor
movl
loop
rorb
dec
jns
sub
add
stos
enter
loopne
inc
or
dec
lcall
add
push
or
mov
dec
cltd
cli
loop
add
notl
add
push
or
cmp
jb
pusha
xor
cmp
cmp
sbb
loop
mov
jge
outsb
inc
sbb
inc
fisttpl
icebp
add
add
inc
adc
fimull
pop
or
cmp
push
jp
xchg
jecxz
mov
adc
sub
int3
decb
sbbb
fildl
cmpl
pushl
add
add
dec
and
add
inc
in
aas
add
or
icebp
inc
pop
int
add
xchg
verw
loopne
and
cmp
cmp
push
in
lds
lock
xor
mov
add
out
adc
add
cld
mov
add
or
jle
pop
aas
insl
add
inc
push
pop
lret
add
out
loopne
movzwl
clc
add
repz
movlps
ffreep
push
add
sub
jbe
lldt
dec
inc
add
shll
sub
mov
cltd
gs
add
aaa
add
push
mov
pop
hlt
cmp
test
cmp
push
add
adc
and
adc
jne,pn
mov
sbbb
add
xor
push
inc
lret
push
mov
pop
and
or
loope
mov
add
jne
push
jo
add
iret
daa
xlat
xor
push
cmc
bound
add
mov
lock
sub
fs
dec
in
add
outsl
gs
mov
xlat
leave
push
sub
in
or
or
fcoml
inc
das
hlt
jl
cmp
adc
movsl
mov
mov
nop
or
dec
dec
add
lods
add
xchg
in
es
add
or
cmp
push
xchg
or
jne
mov
mov
or
mov
mov
into
dec
repnz
enter
add
push
in
inc
push
dec
lret
ja
stos
sub
mov
gs
mov
push
in
push
aam
movsb
push
js
dec
add
insb
mov
fcoms
add
in
xchg
nop
mov
cmc
dec
add
movsb
dec
xchg
pop
add
adc
lods
adc
loop
xchg
dec
cmp
add
out
fwait
aam
repnz
cmp
ret
cmp
movsb
cmpl
adc
inc
adc
ss
and
and
or
jmp
sub
add
adc
mov
add
sub
shrl
and
and
cld
mov
ret
lahf
jl
leave
inc
loopne
push
dec
mov
xchg
test
push
xor
movsb
add
xor
adc
mov
push
add
xchg
sarl
jbe
fs
adc
in
mov
loop
push
pcmpeqw
add
dec
aam
xor
or
cmp
ljmp
dec
dec
adc
in
inc
fucom
mov
cld
dec
clc
dec
sbb
filds
test
or
adc
push
inc
add
lret
sbb
add
addl
js
add
call
fdivs
xor
pop
inc
and
push
sbb
cltd
add
icebp
add
push
int3
incl
es
sbb
flds
icebp
push
jp
pop
xchg
add
push
inc
mov
clc
imul
add
adc
mov
ds
push
mov
sbb
add
ja
mov
and
nop
lea
add
out
dec
fisttps
rol
bound
add
jne
andb
sbb
inc
xchg
cmp
xchg
shlb
push
and
rcrl
ret
xor
incl
dec
adc
aam
cmp
cmpsl
mov
xchg
sub
sub
add
or
sbb
push
mov
adc
cmp
imul
add
pop
xor
add
fcmovnb
ljmp
push
add
pop
xchg
and
sbb
lock
jg
xor
add
test
add
or
push
sbb
push
and
and
dec
or
nop
fldcw
ret
js
dec
je
jle
mov
add
sbb
dec
cli
insb
add
add
push
jb
decb
stc
sbbb
add
cmpsl
int3
adc
inc
sub
pop
daa
lret
mov
inc
fadd
xor
addl
mov
add
add
dec
pop
sbbl
mov
mov
cvtdq2ps
hlt
and
pop
and
mov
dec
cmp
inc
jb
out
test
inc
pop
xlat
cli
push
xor
les
inc
add
add
jne
pop
in
ljmp
pop
add
or
xor
shll
jmp
jg
sub
push
ret
add
and
rcrb
test
add
aad
lcall
ss
lock
cmp
cmp
jb
add
iret
xchg
arpl
rorb
add
lods
pop
fnstenv
sub
mov
mov
imul
pop
and
or
addr16
xor
jo
dec
sbb
xor
jbe
into
add
adc
fcmovu
inc
and
push
dec
dec
cmp
adc
adc
xor
dec
nop
fs
fisubrs
hlt
pop
add
lret
icebp
dec
jae
call
push
das
jb
add
dec
hlt
jne
mov
lds
aaa
jg
add
rolb
mov
dec
push
clc
jle
fstl
or
push
add
mov
dec
loopne
popa
loope
test
lcall
les
incb
push
xor
clc
lock
mov
push
gs
repz
inc
aas
push
pop
and
sbb
mov
fisubrs
add
fiaddl
rolb
inc
sti
push
lcall
imul
jmp
pushf
add
cwtl
pop
add
in
inc
cmpb
jne
lock
in
jge
pop
mov
push
je
mov
adc
and
movsl
and
lret
add
int3
add
push
xor
dec
cmpb
jne
add
call
mov
dec
psllw
push
cmp
iret
xor
je
and
cmp
add
pop
push
or
addr16
inc
addl
call
cmpsl
dec
cmp
push
jo
inc
xor
mov
add
adcb
pop
mov
add
mov
ja
inc
jae
or
sub
sbb
je
add
pushf
jbe
aad
xor
sahf
or
or
rolb
shl
shrb
xchg
cmp
adc
divb
add
sub
mov
jmp
and
push
sbb
mov
loopne
cmp
orb
xlat
and
or
rclb
aad
and
jb
xor
mov
scas
loope
add
loopne
pop
dec
and
call
mov
mov
adc
mov
cmpsl
imul
mov
inc
mov
incl
testl
movsl
loopne
call
sarb
xchg
push
xor
inc
lret
push
pop
inc
add
sbb
or
les
mov
cmp
cmp
mov
jecxz
test
je
sub
push
call
mov
add
adc
mov
cmpsb
je
lret
cli
hlt
pop
sbb
imul
xor
ljmp
das
add
and
adc
daa
jne
out
xor
mov
add
dec
push
jl
sub
push
push
push
push
xchg
pop
push
pop
mov
or
or
js
add
mov
leave
test
xor
mov
inc
pusha
adc
push
add
mov
call
sub
lods
pushf
mov
inc
add
xchg
or
daa
adc
inc
push
mov
mov
sbb
inc
and
adc
mov
jb
mov
icebp
pop
imul
inc
xor
mov
xlat
push
add
fisttps
inc
xchg
pusha
add
cs
call
sub
add
push
fs
add
push
dec
lret
xchg
or
je
mov
sbb
xchg
or
xor
lock
add
loopne
push
xchg
sub
aas
call
adc
cltd
inc
mov
in
mov
cli
sub
cmpsl
lods
sub
ret
aam
lcall
mov
stos
adc
add
or
mov
pop
sub
loop
ficoms
sbb
ds
cmpb
dec
inc
fisttps
mov
je,pn
fnstenv
popa
add
add
add
pop
add
pop
xor
sbbb
mov
data16
out
inc
mov
push
push
add
ret
add
dec
mov
jge
stos
pushl
test
pop
add
xchg
add
movb
sbb
lea
clc
js
add
mov
in
enter
lahf
sub
loop
add
dec
inc
push
pop
adc
add
aas
call
mov
pop
or
fwait
or
adc
scas
pop
outsl
xor
push
ret
sub
ss
add
in
scas
test
nop
xchg
subb
and
rorl
and
add
daa
adc
fdivl
or
call
push
pop
popl
add
dec
xchg
push
and
jns
data16
push
add
xchg
ret
and
add
xor
mov
jns
repz
loope
cs
add
push
popf
int
push
addl
push
adc
sub
add
lcall
mov
add
shlb
in
inc
or
repnz
lahf
add
popa
mov
push
sub
add
xchg
xor
add
dec
sbb
add
rcrb
jnp
cmp
clc
pop
fadds
shlb
xchg
sbb
push
ret
sub
jecxz
add
lds
invd
add
data16
sub
pop
xor
je
cltd
and
add
rcr
jg
or
es
mov
mov
sub
pop
dec
adc
mov
sahf
bound
add
pop
inc
mov
nop
in
add
inc
mov
cmp
mov
rcrb
dec
xor
clc
adc
cmp
or
sbb
and
xor
xchg
mov
or
mov
lds
jmp
mov
push
add
mov
dec
add
les
loopne
es
add
js
pop
add
loope
dec
add
pop
es
and
sbbl
incb
mov
push
leave
cmpsb
sbbb
adc
ret
push
daa
jns
dec
adc
pop
jmp
or
mov
movsl
sbb
lock
xchg
insb
add
nop
mov
or
xor
push
leave
adc
sbb
pop
fsubs
sti
mov
adc
loop
dec
sub
jo
inc
add
call
lcall
add
lock
mov
add
arpl
shlb
jge
mov
jg
add
inc
push
mov
add
imul
clc
push
sbb
subl
and
push
and
pusha
repnz
incl
mov
add
mov
stos
insl
bound
push
iret
xor
adcl
stos
xor
add
push
push
pop
fbld
popa
shlb
dec
sub
add
inc
repnz
add
xor
or
push
or
test
test
jae
cmc
add
inc
push
sub
jg
sbb
adc
push
mov
subl
xchg
jg
add
mov
mov
mov
cmp
fiaddl
out
mov
out
add
orb
fwait
pop
cltd
jg
ret
inc
adc
and
lret
les
sbb
adc
lock
or
in
stos
dec
adc
sti
mov
decl
jns
bound
push
inc
dec
or
push
pop
cltd
add
aam
push
mov
sbb
add
mov
testl
pop
add
push
dec
adc
push
push
pop
rclb
or
pop
cmp
add
pop
stos
add
xchg
cmp
dec
loop
shl
xchg
xchg
push
pop
push
dec
adc
repz
add
je
repnz
mov
in
ds
add
arpl
pop
nop
sub
test
movsl
jge
incb
fidivl
leave
push
stos
and
sbb
pop
fwait
test
adc
push
inc
mov
stc
fs
inc
xchg
pop
sub
push
inc
pop
cltd
movsl
jnp
mov
pop
jo
fwait
ljmp
lret
test
ret
push
sub
test
dec
inc
lahf
push
dec
add
push
gs
cmp
pop
mov
call
push
sbb
sti
out
inc
roll
aaa
rorl
call
cmp
ss
inc
add
xchg
adc
lret
inc
xor
mov
insb
add
ret
cwtl
push
je
or
shrl
xchg
cld
fmuls
jne
pop
enter
cltd
adc
pavgw
jmp
push
movsl
adc
es
push
add
or
sub
mov
cmpsb
or
adc
add
xchg
adc
sub
es
mov
lret
inc
xor
xorps
jnp
add
or
cmp
lea
add
mov
sbb
lret
dec
or
addr16
or
mov
ja
test
fisttpl
add
and
add
ret
test
add
shlb
add
xor
cli
mov
cld
cld
int
test
inc
pop
std
mov
push
hlt
cltd
mov
imul
sbb
mov
cli
sbb
pop
xchg
inc
in
xchg
mov
jnp
pop
shrl
dec
or
dec
xlat
shll
aas
cld
and
pop
mov
cmpsl
add
xor
push
not
movsl
repnz
xchg
push
ds
lahf
mov
ss
ljmp
lods
cmp
xrstors
push
test
insl
sahf
in
push
std
pop
sub
inc
add
addb
and
repnz
inc
ror
xchg
cwtl
rol
pop
sbb
pop
mov
es
or
cmp
subl
test
movsl
mov
in
dec
add
sub
add
rcl
mov
mov
inc
mov
add
pop
inc
out
add
or
mov
mov
sbb
orb
cs
test
and
cmp
lds
cmp
adc
stc
xor
inc
pop
adc
insb
and
jbe
movsb
mov
sbb
pop
pushf
and
mov
sbb
lods
hlt
inc
loop,pt
cs
push
jp
cmpsl
jne,pn
insl
out
sbb
loope
roll
les
and
xor
add
xchg
pop
mov
icebp
mov
xor
lods
lock
sbb
mov
or
inc
mov
cmp
pop
subb
pop
lahf
xor
add
and
push
mov
inc
mov
push
jbe
mov
movsl
aam
or
int3
loope
dec
mov
push
out
push
adc
aaa
mov
std
aas
outsl
mov
pusha
cmp
and
in
clc
push
lret
inc
pop
sub
dec
add
je
jns
mov
shrb
mov
pop
add
idivb
cli
ja
pop
leave
pusha
xchg
sub
adc
enter
ds
add
inc
inc
popa
push
cmp
add
mov
push
popf
aad
inc
jbe
in
push
mov
adc
movsb
or
xchg
loopne
push
pop
sbb
cmpsl
pusha
ret
fs
mov
cld
pop
loop
imul
ljmp
mov
lea
jp
mov
andb
or
inc
pop
das
leave
xchg
xor
add
test
pushf
into
rcl
add
sub
pop
sbb
je
jb
add
bound
add
jb
cmp
ljmp
sub
cmp
jns
pop
dec
in
lods
push
add
lods
sub
xor
jno
add
jge
lldt
insl
pop
daa
dec
adc
xchg
mov
xchg
mov
arpl
pop
jae
cwtl
fs
add
xchg
dec
lahf
js
lea
test
add
mov
mov
fbld
push
inc
jmp
push
les
or
xchg
xor
pop
imul
add
xchg
push
pop
add
jle
sahf
add
ss
and
add
stos
push
ret
jns
add
sub
test
mov
push
xchg
push
ror
bswap
hlt
add
negl
or
add
push
loope
mov
and
jne
adc
pop
cmpsb
call
mov
push
inc
addr16
cmpsb
jb
gs
jb
pop
and
lods
fwait
add
push
bound
pop
pop
xlat
inc
or
nop
popf
scas
push
insl
xchg
jnp
add
fsubrl
and
mov
arpl
cmp
adc
push
jmp
add
or
jbe
inc
aam
popf
adc
lret
in
lods
adc
out
outsb
and
scas
jbe
mov
mov
or
add
cli
cmpsb
adc
add
add
sbb
popl
ret
add
add
jns
add
lret
sti
push
out
jbe
add
mov
ja
jl
dec
test
ret
push
inc
lahf
xchg
pop
xorl
enter
cmp
leave
mov
adc
stc
insl
lds
int3
push
jg
jecxz
sub
adc
push
arpl
add
jge
pushw
jbe
add
mov
pop
dec
push
inc
jl
pusha
add
jbe
outsb
cmp
jp
imul
imul
add
push
jl
nop
jp
lods
outsb
pop
xor
andb
adc
pop
ds
inc
outsl
insb
pop
gs
push
jg
jae
jge
lret
inc
not
fs
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
dec
add
push
push
data16
cmpsl
addl
mov
add
je
jl,pn
aad
mov
cmp
addb
fs
inc
xchg
mov
or
subl
inc
outsl
frstor
sbb
inc
add
push
nop
ja
jo
out
and
test
ret
xchg
jb
loop
pop
popa
clc
in
add
je
adc
sbb
push
test
jecxz
add
leave
xorb
or
sub
cmp
push
pop
mov
pusha
add
jecxz
pop
mov
push
push
mov
adc
popa
jbe
arpl
fildl
cmp
add
nop
lods
jbe
adc
aas
imul
push
cli
mov
sbb
xor
add
or
pusha
push
cwtl
sbb
and
arpl
cmp
popa
add
rolb
mov
adc
inc
jne
mov
push
mov
out
insb
pop
xorb
mov
fwait
mov
add
adc
enter
add
jp
sbb
jle
add
in
add
daa
cmp
xchg
adc
adc
add
push
jnp
js
fadds
adc
inc
xor
lods
xchg
loope
repnz
out
faddl
in
enter
pop
mov
lock
jae
jp
add
xor
jno
loopne
mov
enter
push
sbb
add
or
mov
das
std
add
lahf
in
xor
dec
push
out
aaa
sbbl
movb
cmpb
inc
push
add
out
mov
leave
or
lahf
bound
mov
xchg
adc
or
cmp
jo
mov
mov
bswap
add
pop
popf
pop
adc
stc
roll
mov
xor
fwait
loopne
push
enter
ret
cmp
pop
jmp
pop
push
mov
psubq
dec
add
cmc
inc
ljmp
jle
dec
sbb
xadd
add
into
and
fisubs
cmp
sahf
dec
pop
mov
push
mov
xchg
xor
and
mov
inc
adc
test
push
rclb
mov
sti
outsb
mov
inc
pop
cmc
pusha
adc
add
into
adc
repz
xor
and
pop
incl
ret
fimuls
idivb
call
jecxz
sub
xchg
pop
lods
cmp
mov
add
outsb
xor
call
jnp
xor
xor
push
enter
cmp
inc
ret
xor
in
dec
add
dec
sub
xchg
push
push
push
jle
clc
push
loopne
ljmp
sbb
out
movsl
adc
xchg
dec
pusha
push
lea
xchg
adc
xor
mov
stos
sbb
jg
add
insb
outsl
and
je
mov
fiadds
mov
jg
pop
add
int
adcb
xor
xor
daa
daa
testb
loop
pop
aas
adc
je
int
fstl
mov
cmp
stos
addb
into
loopne
mov
cmpsb
and
add
bswap
fisubrs
dec
dec
lods
test
and
sahf
lock
sarb
shr
aam
mov
cli
push
and
subl
aad
mov
mov
sub
mov
andl
in
add
rclb
inc
pusha
aam
fcoms
faddl
les
ja
add
inc
lock
dec
stc
loope
lcall
hlt
les
cld
inc
sbb
cmp
sarl
xchg
sbbl
lcall
sbb
and
adc
inc
add
icebp
sbb
mov
cld
jecxz
or
testb
add
aas
adc
cmp
lds
inc
push
xor
add
jnp
cmp
inc
addb
fmuls
mov
cmp
sbb
or
rclb
jp
lods
nop
clc
sahf
jl
jae
add
fldl
pushf
or
aam
imul
mov
leave
das
push
push
pop
rorb
mov
pop
add
jae
scas
fsubrl
fadds
jle
mov
pop
sbb
inc
or
adc
add
cmp
add
xchg
rorl
scas
add
mov
sub
dec
test
and
orb
or
pop
push
cwtl
sub
adc
mov
xor
add
comiss
roll
jne
add
je
outsl
add
and
adc
aad
push
jne
add
das
pop
pop
add
in
pop
in
lret
enter
push
mov
mov
add
push
out
aas
rolb
test
addb
cmp
jne
pop
addb
add
jge
push
push
pop
iret
adc
sarb
insl
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
fsubrl
add
sub
inc
mov
jmp
sub
stos
add
addr16
jl
mov
pop
or
pusha
cmp
sub
cmp
add
mov
or
xor
roll
push
sbb
sbb
push
and
mov
cli
dec
add
or
or
fildll
shl
add
call
xor
loope
and
xlat
push
mov
rcll
cmp
jle
sbb
mov
clc
inc
mov
mov
inc
imul
or
shl
mov
and
dec
lods
andb
mov
inc
fists
in
xchg
push
cmp
pop
outsb
fs
outsl
jne
or
add
scas
xchg
test
enter
call
rorl
hlt
popa
fadds
mov
cmc
xchg
jge
push
call
jg
and
mov
mulb
nop
mov
sar
es
inc
add
cmp
call
cmp
je
jnp
popa
add
xchg
lret
jge
lcall
test
in
je
sub
pop
fiadds
jnp
subb
mov
fadds
call
adc
je
add
dec
push
cmp
mov
or
je
add
stos
pop
repnz
add
mov
xchg
sarb
xor
jmp
fisubl
pop
jae
add
mov
pop
jge
add
cmp
loop
dec
call
push
fiadds
and
pop
clc
mov
push
out
or
lods
pushl
mov
add
xlat
mov
jo
push
cs
cmp
inc
and
lea
pop
pushaw
cmp
mov
lret
add
add
jg
enter
je
pop
cmp
cmp
push
adc
add
push
out
ds
leave
cmpb
out
iret
add
cmp
cmpsb
xlat
pop
or
rol
loop
xchg
outsl
dec
add
testl
add
movl
xorb
dec
imul
inc
mov
or
inc
addb
sbb
je
mov
cwtl
add
mov
xor
sahf
xchg
pop
push
bound
or
or
xchg
in
adc
decl
scas
roll
cs
popa
arpl
and
aad
jo
jle
add
dec
pusha
lahf
push
cld
roll
stc
cmp
addl
mov
dec
fwait
repnz
rorb
or
fs
add
stc
sub
push
mov
inc
sub
fldl
call
les
aad
ljmp
stos
mov
jnp
adc
xchg
adc
mov
pushf
mov
push
dec
sahf
imul
clc
pusha
push
mov
lea
xchg
and
repz
adc
and
or
sbb
nop
cld
sbb
add
cmpsl
sbb
pop
cltd
sbb
adc
shrb
call
test
mov
add
sub
add
jo
push
jle
jae
pop
test
ds
mov
dec
lds
lock
or
jo
pop
inc
jle
jmp
xlat
jo
rclb
fiaddl
add
inc
jmp
lea
scas
cmp
ds
cmp
mov
adc
jae
mov
add
add
imull
fildl
xchg
add
sbb
add
or
fildl
add
jmp
in
add
push
add
fwait
mov
lods
jp
cmp
lea
out
jo
add
add
andb
add
xchg
addl
mov
or
and
lea
or
andb
mov
rorl
popa
xor
mov
cld
inc
add
ret
call
lock
orl
jo
add
push
cmp
fistps
and
sub
sub
add
sub
add
es
adc
call
ret
jne
cmp
jae
test
ljmp
jbe
loopne
nop
in
js
mov
add
ret
add
pushf
lret
inc
or
dec
test
adc
push
dec
shrl
xlat
iret
push
and
inc
pop
fiadds
push
push
add
add
sti
or
inc
sbb
lea
or
sub
jbe
dec
sbb
xorb
add
movl
ret
aad
test
inc
push
mov
xor
jmp
adc
and
inc
inc
pop
add
and
push
ljmp
add
sbb
or
or
xorb
fs
cmp
mov
subb
push
dec
and
inc
inc
dec
xchg
lahf
add
lret
jb
adc
test
xor
mov
add
ss
add
sbb
push
mov
lea
add
add
cmp
and
pop
sbb
push
loope
jnp
add
cmp
pop
xchg
push
and
sub
sbbb
movsl
ret
imul
mov
or
cmp
outsl
pop
test
add
pushl
icebp
nop
jle
stos
add
sbb
loopne
fisubl
add
or
pop
loope
pushf
jle
push
sbb
cmpsl
in
dec
shlb
fsubs
push
js
dec
add
xlat
nop
add
xor
jns
fnstsw
add
adc
push
mov
lods
and
sbb
pop
add
sub
sbb
push
cmp
dec
xor
addw
inc
lret
adc
xchg
cmp
mov
add
lock
or
cmpsl
add
mov
xchg
std
imul
adc
push
sbb
mov
inc
xchg
lret
or
das
mov
add
adc
clc
mov
mov
jg
imul
loope
icebp
paddusb
mov
mov
or
add
add
lret
add
daa
dec
push
sub
sub
add
mov
xorl
daa
ja
popa
add
add
fyl2xp1
pop
shlb
mov
movb
push
xor
fwait
cmp
dec
add
jns
sbbb
leave
iret
adc
sarb
add
call
rcl
mov
pop
add
int
into
push
dec
fstps
cli
jmp
enter
fs
sub
pop
rclb
add
cmp
inc
cmp
sub
cmp
test
dec
es
dec
add
ljmp
in
add
ret
lods
mov
and
mul
add
pop
adc
dec
mov
xchg
pop
mov
ret
pxor
fisttpll
in
mov
jne
xchg
add
pop
aam
dec
sub
adc
dec
push
xlat
add
test
or
mov
xchg
xchg
sar
dec
in
mov
and
fdiv
lret
add
inc
fstl
pop
or
daa
test
and
nop
jbe
push
testl
mov
stos
loope
pusha
push
push
pusha
push
and
add
lahf
clc
jge
stos
inc
imul
mov
hlt
ja
add
js
inc
je
dec
fcomp
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
push
test
inc
inc
mov
add
sbb
in
add
rcrb
je
jbe
test
xchg
xchg
jmp
ret
sub
lock
leave
jecxz
cmp
call
inc
out
add
push
call
add
ds
imul
push
gs
roll
dec
add
push
pop
jb
movhlps
push
jmp
xor
mov
gs
push
hlt
mov
and
repnz
enter
add
das
out
daa
jl
scas
add
cwtl
jo
test
push
or
outsb
add
cmp
test
or
xchg
mov
aam
add
inc
lods
push
popf
jb
sub
jnp
cmp
cmpsb
add
cmp
add
imul
add
je
xchg
out
sub
inc
mov
and
add
dec
push
add
cmp
jbe
ds
sarl
int3
or
mov
add
stc
cmp
sbb
sub
arpl
cmove
push
push
pusha
or
iret
push
push
sahf
add
dec
push
dec
jge
les
jmp
xchg
rclb
rclb
jle
sbb
jnp
cmp
cmp
aad
push
mov
mov
mov
xlat
mov
sub
cmpsb
imul
call
fs
ret
rcll
scas
cmp
and
mov
mov
cmpsl
and
loopne
push
mov
xchg
push
arpl
inc
iret
pop
mov
add
dec
pop
mov
sbb
add
loop
mov
or
adc
ret
add
xchg
ja
mull
cmp
sbb
adc
mov
xchg
ret
loop
clc
je
add
sub
dec
jb
adc
adc
fildll
sarl
je
push
cmc
xchg
inc
push
cmp
aas
xor
fisttpll
or
xchg
push
adc
mov
repz
jmp
xor
pop
mov
pop
or
shll
xor
scas
inc
out
inc
add
xor
int
sarl
loopne
scas
mov
adc
inc
movsb
jo
stos
dec
leave
add
pop
or
lock
negl
add
and
push
test
rorb
xchg
test
into
test
push
add
jbe
popf
pop
mov
push
cmp
xor
inc
add
or
movb
cmp
adcb
push
test
sub
ljmp
sub
jo
es
aas
dec
push
add
pop
clc
jae
incl
sbb
je
mov
sub
jbe
sub
call
mov
sub
pusha
xorb
cwtl
out
mov
test
jb
adc
and
movsb
lock
pop
add
add
pusha
xorb
mov
mov
jmp
enter
cld
pushf
pop
movsb
cmp
add
mov
add
addb
or
leave
and
adc
pusha
scas
fstl
inc
dec
inc
or
mov
dec
xorb
stos
ret
jae
inc
imull
dec
and
xchg
mov
and
in
test
ja
jmp
divl
daa
jb
aas
lcall
popf
xchg
push
add
leave
ljmp
sbb
es
sti
add
lahf
stc
inc
add
loopne
ret
add
pop
aam
or
xor
call
add
leave
cmp
lea
or
push
pmulhuw
ret
dec
jbe
pop
add
push
mov
or
repnz
jmp
add
xchg
shlb
jmp
rolb
push
xchg
loop
push
xchg
stos
shlb
int
and
popa
leave
xchg
inc
inc
mov
dec
add
sbb
jge
adcb
jb
push
dec
mov
add
pop
or
inc
cmpl
jmp
jge
pop
xor
xchg
je
add
and
mov
movsl
popf
adc
or
add
and
sub
add
lea
inc
add
repz
stos
daa
mov
lock
add
xor
out
mov
add
incl
mov
and
mov
add
ljmp
sub
adc
mov
aam
push
addr16
add
int3
call
enter
mov
push
sbb
push
dec
sbb
push
in
mov
cwtl
lock
inc
mov
sub
cmp
xchg
pop
xchg
sbb
mov
fmull
cs
jbe
add
and
rclb
xchg
add
hlt
pusha
cltd
xchg
push
add
fbld
leave
imul
add
xchg
gs
mov
dec
cltd
dec
xor
mov
mov
in
add
mov
jo
popa
dec
cmc
pop
add
aas
push
and
push
cs
sub
jno
pop
pushl
jge
arpl
add
ja
pop
add
sub
cmpsl
or
or
jbe
or
hlt
add
loopne
cmp
fidivl
out
or
scas
cld
cmp
pop
mov
cltd
rcll
pop
aad
loopne
jl
enter
sarl
enter
bound
jns
jp
addb
popa
loope
out
and
adc
push
mov
enter
test
add
and
les
std
mull
cmpsb
scas
cmp
pop
jg
inc
mov
mov
push
add
lret
call
add
jae
pop
mov
test
pop
lahf
jo
inc
or
push
dec
add
decl
mov
sub
sub
sub
fwait
jo
add
and
lret
ja
or
cmp
je
mov
mov
mov
sbb
rolb
mov
gs
add
jge
adc
sub
or
into
shlb
add
jmp
add
add
lahf
jb
jae
add
jge
cld
rolb
add
ss
jb
xor
push
inc
add
sub
add
adc
pop
jne
or
rolb
dec
mov
ds
add
daa
push
cmpsb
adc
cmp
pop
test
push
or
dec
out
mov
mov
addl
xor
add
ljmp
lods
push
movsb
nop
dec
sbb
or
add
aam
xchg
push
push
or
push
dec
aad
cld
dec
sub
inc
pusha
add
fs
jl
push
fldenv
cmpsb
adc
inc
mov
pusha
mov
jae
mov
sarl
addl
mov
call
add
mov
sbb
jne
add
adc
mov
in
push
xchg
or
sbb
mov
pop
xor
mov
in
inc
or
out
testl
cmc
test
sub
adc
aam
jg
xor
mov
sbb
adc
mov
and
cmp
xorb
insb
add
ja
sbb
rorl
cwtl
xlat
cmp
xchg
orb
fucomip
cwtl
cwtl
cli
add
jbe
mov
cmp
sbbb
inc
add
dec
xor
xchg
imull
and
roll
clc
pop
xchg
mov
add
out
cwtl
mov
mov
int3
cmp
cmp
andb
jnp
fcomps
in
pop
xor
sub
sub
bswap
jle
push
pop
imul
dec
flds
bound
and
rolb
cmpb
pop
aas
inc
and
test
pop
fisubrs
sbb
add
cmpsl
xchg
pushf
add
push
test
mov
pop
nopl
lret
into
jns
sub
mov
jl
mov
inc
mov
ret
hlt
decb
cmp
arpl
insb
add
orb
cmpsb
dec
pop
clc
shrl
stc
cmp
adc
fstpl
aam
lods
popl
dec
pop
lret
or
and
mov
push
push
popa
jae
xorb
ss
outsl
dec
add
dec
outsb
je
and
testl
push
and
cmp
arpl
int3
iret
pop
sahf
dec
popa
outsl
and
ds
mov
xor
in
jl
push
add
in
pop
push
mov
addl
inc
xor
push
xchg
or
jle
add
jmp
push
add
or
lret
icebp
xlat
push
shrl
in
mov
jne
call
jmp
inc
add
jmp
iret
les
notb
lahf
pop
sub
je
xor
shl
add
inc
mov
cmp
push
sbb
mov
dec
dec
test
fstpt
idivb
je
adc
adc
mov
sbb
xor
aad
insb
sub
cli
add
inc
xlat
cmpsb
mov
cld
push
and
jl
and
add
cmp
rol
in
add
jae
mov
pop
xchg
or
jp
inc
inc
add
gs
mov
dec
add
push
sub
mov
mov
arpl
or
jbe
cmp
cltd
mov
inc
add
cmpl
or
sub
enter
push
sbb
sarb
repz
adc
and
or
lea
call
pop
or
cmp
xorb
jp
je
fcompl
inc
fcom
clc
adc
call
mov
fiaddl
adc
dec
add
hlt
test
fcoms
push
imul
xchg
dec
adc
add
fidivrs
rolb
sbb
pushf
aad
call
lds
cmpsb
add
jecxz
imul
add
scas
sbb
pop
cltd
mov
in
mov
or
or
xor
and
push
jmp
data16
aaa
add
push
adc
adcl
movsb
sub
fmuls
sahf
sbb
inc
sub
lahf
adcl
lea
mov
mov
test
mov
outsl
outsb
clc
mov
cltd
jmp
jge
add
add
or
cmp
add
jmp
and
inc
pop
dec
stc
inc
add
mov
add
add
cltd
mov
aas
mov
jle
add
aam
lcall
cmp
mov
inc
pop
fwait
roll
leave
push
pop
or
pop
sete
add
dec
lods
loop
je
adc
add
xchg
paddq
movsl
fdivrs
call
clc
filds
sbb
pcmpeqb
push
mov
pop
lahf
icebp
pop
shrb
dec
lock
aaa
push
sbb
and
push
dec
xor
cmpsl
nopl
xchg
mov
movb
notl
nop
fisttpl
movsl
mov
incb
and
outsb
sub
push
xor
sbb
lock
or
add
mov
cli
call
add
mov
add
loopne
or
ljmp
es
adc
add
out
pop
push
or
outsl
fwait
ret
mov
std
add
and
fiaddl
add
push
pop
and
data16
sbb
xlat
addb
ficompl
ret
mov
mov
push
testl
pop
jg
aas
add
adc
and
cmp
sbb
inc
sbb
ja
cld
sub
add
stos
loope
aaa
pmaxsw
dec
add
dec
loopne
jb
cli
dec
add
ret
jl
inc
cmpb
jle
in
pop
jmp
cld
or
pop
adc
add
add
xor
push
ret
add
out
dec
add
sar
imulb
add
add
pop
loopne
pop
sbb
sbb
or
jo
dec
rolb
andb
rcr
or
aaa
incl
add
in
adc
loopne
mov
pop
pop
stos
daa
hlt
aas
incb
add
cli
xchg
lea
stc
cmc
add
adc
add
lods
dec
sub
mov
das
add
in
push
or
icebp
pushf
mov
cmp
addb
sub
fsubrs
add
imul
sub
lock
stc
gs
lods
sar
ljmp
cmp
sub
push
xchg
xorl
in
pop
nop
adc
andb
xchg
xchg
scas
sub
arpl
xchg
add
sbb
cs
sarb
or
add
add
cltd
or
mov
fwait
andb
mov
add
sbb
or
mov
add
orb
frstor
rolb
fld
test
scas
mov
sub
pop
ss
mov
xor
inc
cmp
xchg
or
and
test
add
sti
les
push
add
fstpl
add
xchg
pop
les
das
mov
je
leave
adc
scas
lods
xchg
jg
add
mov
adc
fimull
enter
enter
add
xchg
sbb
loopne
add
mov
push
mov
lahf
push
les
mov
rolb
imul
in
scas
rol
add
pop
popf
js
gs
add
call
lahf
lcall
push
mov
adc
lods
ds
pop
ss
inc
sbb
lret
mov
mov
lcall
in
add
adc
fstl
cmpsb
mov
xor
jnp
repnz
pusha
icebp
incb
ret
add
cld
or
inc
addl
pop
pop
iret
push
add
fwait
dec
imul
mov
pop
mov
inc
inc
out
icebp
es
mov
mov
daa
jo
testb
sbb
pop
xchg
jge
cmp
hlt
push
add
icebp
fldl
xor
movsl
cmp
push
sub
iret
and
jle
loopne
aad
jge
addl
sub
lea
and
movsb
push
cmp
inc
sub
sbb
inc
sbb
xor
add
mov
jle
aam
scas
ss
pop
pusha
shrb
or
aaa
add
testl
jmp
add
pop
cmp
add
test
fsubs
imul
mov
ud1
cmp
lea
dec
sub
popf
add
mov
mov
xor
sub
cmp
or
mov
mov
mov
enter
ret
lock
mov
cmp
pcmpeqw
adc
fdiv
add
jecxz
jle
mov
add
aaa
shr
loop
cmp
and
or
fcoml
jl
rcll
insb
adc
jns
add
cmovp
cmpsb
or
mov
nop
aam
bnd
pop
lahf
pop
stos
and
mov
out
lret
jb
aam
stos
add
xor
push
xlat
inc
or
shr
inc
xchg
movmskps
sbb
and
test
in
fmuls
stos
roll
flds
cltd
iret
adc
rclb
sbbl
mov
andb
cmp
and
and
nop
popf
lcall
dec
add
into
cld
push
mov
fists
mov
add
popl
stc
xor
adcl
aam
add
rorb
inc
xor
lods
add
sub
inc
pop
push
ljmp
mov
dec
pusha
add
fdivl
lcall
lret
loopne
je
adc
or
add
dec
sbb
es
add
ljmp
add
lea
rsqrtps
movsl
arpl
mov
add
popa
sbb
cmp
and
out
add
shr
add
movl
cmpsb
pop
mov
xchg
sbbb
sbb
sub
jle
movsl
add
dec
push
pop
dec
pusha
pop
sarb
add
or
hlt
add
pusha
or
adc
pop
daa
sbb
aam
add
pusha
jo
andb
add
xchg
add
and
add
mov
lret
xorb
or
or
or
xor
adc
enter
push
mov
push
mov
push
cmp
jb
push
push
add
leave
sbb
add
jo
xchg
xor
add
shl
sbbl
lock
add
add
das
pop
je
out
pop
not
add
jb
daa
inc
adc
add
pusha
ftst
pop
mov
iret
and
sbb
fwait
popa
mov
pop
pop
mov
stos
lods
jmp
xchg
add
xchg
imul
jg
dec
mov
cwtl
sbb
mov
sub
sbb
mov
stos
pop
mov
test
xchg
and
add
push
or
cmp
mov
xchg
or
cmp
lds
mov
xchg
inc
add
ret
adc
pop
or
jno
xor
mov
push
daa
adc
xchg
loopne
rorl
add
add
sbb
jno
pusha
add
mov
jle
loopne
add
add
cmp
cwtl
jge
add
and
jl
mov
cltd
push
mov
pushf
idivb
rcll
into
and
add
mov
mov
int3
sbb
add
fstl
and
cwtl
lods
cli
lret
and
add
loope
fmulp
call
add
dec
test
sbb
lds
or
sub
xchg
inc
add
pushl
add
pop
xor
cwtl
rcrb
and
dec
addb
leave
add
mov
shll
xchg
and
ss
mov
or
xchg
cmp
xorl
cmp
mov
add
add
add
in
push
jo
sub
jb
movsb
cmp
mov
inc
mov
add
bound
loope
xchg
dec
pop
pause
in
outsl
xor
jge
pop
stc
roll
daa
js
arpl
add
mov
cmp
pop
and
and
xchg
sub
enter
mov
add
mov
inc
push
sub
or
xchg
icebp
jmp
add
xor
stos
cwtl
mov
xor
or
lock
and
add
or
fadds
aaa
dec
jns
and
int
mov
ret
xor
pop
call
cs
add
les
jmp
sub
imul
aad
inc
mov
jo
nop
insl
add
mov
std
add
jp
shl
add
fiadds
clc
cmp
inc
add
push
push
aaa
inc
movsb
inc
mov
sbb
jo
mov
xor
or
adc
inc
rolb
add
add
jmp
push
add
push
inc
pop
add
lahf
jne
mov
leave
add
or
push
cwtl
push
inc
inc
mov
mov
shl
movsb
clc
pop
push
pop
or
pusha
scas
add
dec
cli
add
jl
add
daa
and
sub
cmp
sub
lea
push
add
pop
int
aad
shll
add
push
push
xchg
push
add
xor
rorb
adc
add
adc
lea
mov
xchg
push
mov
movsb
int3
xchg
or
mov
xor
mov
add
stc
testb
fcom
mov
nopl
xor
inc
jmp
jne
aas
sub
pop
pop
lods
fdiv
repnz
cmp
rorb
and
add
pusha
dec
sub
ljmp
xchg
or
sub
push
pop
in
add
ja
jno
movb
and
inc
dec
xchg
cmpsl
in
rolb
lret
and
popf
or
add
rorb
xchg
xchg
inc
sbb
xchg
lock
andl
adc
mov
lods
das
or
jb
jnp
dec
sbb
cmp
add
rclb
cld
mov
adc
dec
sub
testl
sub
aas
add
mov
in
mov
int3
jo
add
arpl
mov
push
fadd
addr16
popa
push
sbbb
xchg
push
jae
add
fisttpl
push
add
stos
xor
jae
cs
and
or
rcrl
mov
adc
pop
icebp
out
inc
mov
dec
jg
add
mov
fwait
jb
xor
add
adc
sbb
adc
mov
das
jle
push
into
cmpsl
xor
int3
int
iret
ror
ljmp
imul
sub
mov
add
pusha
ja
pop
les
aas
xchg
scas
push
xchg
cmp
cld
cli
add
incl
jb
jno
add
pop
add
push
add
cs
and
add
sub
or
mov
mov
daa
dec
xor
mov
clc
add
xchg
mov
iret
jns
sub
or
out
sbb
int
inc
cmp
and
cwtl
jb
add
std
add
sbb
jmp
pop
xorl
sub
inc
inc
mov
in
ret
movsb
mov
sbb
add
test
add
add
dec
sbb
je
loop
mov
jmp
sbb
enter
pop
pop
mov
pop
push
in
fldl
bound
nop
push
adc
mov
add
cmp
loopne
jae
xchg
sbb
inc
roll
push
verr
fisubl
jnp
xchg
and
adc
or
sub
cld
imul
outsb
sub
add
icebp
testb
subl
jae
add
int
dec
or
lret
movsb
add
fnstsw
popa
cli
fcoml
adc
or
lret
mov
push
inc
orl
pushf
das
add
loopne
or
shlb
mov
mov
jo
push
out
test
xchg
fs
outsb
xchg
addr16
add
and
add
push
lods
ljmp
push
pusha
call
add
or
je
xchg
bound
shlb
ret
add
mov
clc
rolb
aas
push
cmp
ret
pop
push
sub
add
lods
sbb
repnz
push
jnp
mov
or
rol
imul
js
pusha
inc
pop
inc
adc
aad
mov
insb
jno
dec
add
das
mov
and
xor
and
xor
jg
cmp
stc
pushf
bswap
or
jge
xchg
adc
data16
pop
flds
je
lcall
lock
push
loopne
and
add
loop
adc
add
and
das
cmp
inc
verw
or
adc
mov
push
push
into
aas
cmp
movsl
xor
mov
xchg
inc
test
sbb
fiaddl
add
push
or
mov
in
add
mov
sub
add
inc
jp
fimuls
lds
clc
jge
test
inc
sbb
mov
sbb
sbb
xchg
into
push
inc
sbb
add
or
test
scas
cmp
mov
mov
add
or
pop
nop
hlt
dec
push
js
add
ja
sbb
negl
sub
add
es
xchg
sbb
sbb
push
inc
jno
inc
adc
jg
in
adc
xchg
aas
jl
push
and
add
push
or
notb
hlt
jmp
sub
pop
sti
and
or
inc
pop
sub
loop
cmc
addb
pop
jge
or
push
add
xchg
add
leave
call
pop
inc
or
stos
push
and
movsl
add
mov
cltd
add
aas
shlb
dec
ret
jg
mov
add
flds
xchg
xor
clc
jecxz
add
shl
jmp
addb
lock
pop
jle
lds
hlt
fadd
mov
adc
cmp
xor
and
add
icebp
pop
xchg
hlt
xchg
add
mov
sbb
lods
jle
pop
or
ljmp
xor
and
dec
jnp
adc
mov
je
push
inc
inc
pusha
jle
pop
push
xlat
pop
ss
lock
sub
pop
in
add
popa
jae
jo
call
mov
sbb
xor
rorb
sub
sahf
push
sub
outsb
dec
add
cld
add
mov
mov
pop
cmpl
jmp
cmpsl
cld
sti
add
bnd
mov
and
xchg
add
sub
popf
and
adc
mov
jp
ret
inc
jmp
xchg
mov
mov
jecxz
mov
add
xchg
out
jl
add
aad
add
lods
add
mov
xor
clc
adc
dec
ljmp
xchg
add
xor
jl
add
hlt
rcll
and
movsl
clc
data16
insb
cmp
cmp
std
xchg
ret
or
mov
test
push
lods
stc
fsts
aam
ds
add
push
nop
jmp
add
fisttps
push
adc
stc
add
jae
lds
das
in
popa
movb
sub
or
cltd
cmp
ret
testl
xlat
jecxz
enter
xchg
notb
aam
icebp
mov
movsl
jae
mov
add
or
and
add
and
add
and
add
sbbl
cld
add
cs
not
inc
mov
push
test
sbb
and
jle
in
or
push
jne
inc
jg
shll
bnd
mov
pop
cmovg
pop
fildl
test
fwait
jmp
cmpsl
gs
adc
repnz
test
push
mov
mov
dec
or
movb
cmp
ds
pop
sub
or
mov
and
jnp
loopne
cwtl
pop
add
negb
mov
jbe
add
jno
das
inc
add
add
or
rcr
in
loopne
sahf
ja
dec
daa
mov
add
test
jb
jae
push
mov
incl
fcomps
fistpl
lods
add
mov
fmulp
xor
stos
jo
mov
mov
push
xchg
mov
and
lds
add
das
aam
and
add
test
adc
testb
mov
dec
rorb
mov
mov
in
clc
jnp
jns
add
sub
add
int3
pshufw
adc
nop
int
cld
mov
cwtl
pop
mov
addl
jne
inc
add
inc
clc
and
add
inc
data16
cltd
mov
xchg
push
add
daa
cmp
push
rclb
sbb
or
mov
and
add
push
mov
jo
add
pop
cs
rcl
or
cltd
add
sbb
addb
mov
test
sub
add
push
stc
push
and
xchg
inc
cld
adc
add
orb
adc
sub
pop
or
and
std
mov
mov
xchg
inc
inc
test
call
cmpb
pop
ret
fildl
xor
cmp
add
or
ja
add
inc
xchg
out
pop
sbb
pusha
and
outsb
jb
pop
imul
xor
push
or
rcrb
add
lock
sti
daa
and
sub
add
or
inc
sub
mov
dec
ds
mov
ret
ljmp
mov
push
xchg
cmpsl
jl
add
add
and
shll
call
nop
add
cs
jne
les
inc
dec
mov
adc
in
imul
add
jg
pop
add
in
and
add
fs
addl
outsl
je
xor
mov
aam
int3
pop
push
pop
inc
mov
adc
mov
dec
lahf
push
mull
addb
and
ds
sbb
jo
mov
xchg
pop
pop
enter
repz
lcall
dec
aas
dec
sbb
jmp
sbb
or
sbb
inc
xchg
shrl
jmp
pop
mov
pop
out
cmp
or
cmp
pop
mov
xchg
push
filds
sbb
dec
jl
xchg
add
add
shll
dec
int3
inc
movsl
and
repnz
xchg
add
lea
jo
rclb
in
push
cltd
rolb
or
sub
mov
pusha
rclb
mov
inc
mov
repnz
icebp
out
sbb
xor
mov
aad
push
add
dec
mov
dec
inc
js
jnp
mov
faddl
imul
out
adc
add
addl
lret
add
or
sub
leave
xchg
push
push
add
aaa
xchg
cmp
shll
dec
jle
jb
add
cmp
je
stos
push
jecxz
and
pop
xchg
add
sbb
dec
mov
mov
xchg
push
pop
pop
jae
rclb
into
or
loop
push
add
sub
sbb
test
add
mov
adc
fs
or
cld
test
cmp
lock
mov
or
test
jp
cmp
mov
test
push
push
adc
xor
fildl
inc
iret
pop
mov
sbb
mov
addb
imul
incb
xor
sbb
push
jae
adc
adc
add
xor
cmc
test
mov
imul
call
gs
cmpl
pop
ret
or
loop
add
or
mov
aad
shlb
stc
jne
add
cmp
pop
stos
nop
shrb
adc
popa
xchg
sub
hlt
in
cwtl
fiadds
loope
pop
sub
inc
inc
add
mov
sarb
mov
test
add
test
je
or
jne
inc
add
aam
lcall
or
nop
add
sub
push
ljmp
xchg
arpl
add
das
jmp
fcomp
test
clc
add
cltd
mov
inc
xor
or
xorb
sbb
jo
add
je
pushl
or
push
rolb
inc
inc
mov
add
mov
xchg
mov
out
repnz
xchg
pop
mov
pusha
dec
jmp
pop
fcmovne
adc
mov
cmpsb
ret
sbb
sub
xlat
mov
in
add
cld
add
add
or
dec
xchg
pusha
add
or
or
inc
pop
or
adc
ret
add
dec
or
or
add
add
std
xor
rcr
adc
jmp
cli
mov
mov
add
nop
daa
ja
add
xchg
xlat
xchg
add
add
add
lret
or
adc
add
fsubrs
dec
cmpsb
leave
push
add
xlat
out
dec
mov
sbb
dec
adc
xchg
push
adc
adc
pop
andb
mov
into
inc
pop
jo
lcall
xchg
fsubrl
ret
xor
mov
fstpt
push
mov
lret
or
xchg
add
adc
or
iret
out
lock
mov
and
add
insb
dec
fs
stos
lock
ret
add
push
adc
push
cmp
pop
sti
add
into
repz
sub
add
cmp
add
mov
andb
incl
jns
gs
push
fnstcw
in
jl
aaa
xor
std
add
lods
jne
fcmovnb
dec
gs
add
or
and
lea
xchg
mov
or
add
pop
mov
pop
sbb
clc
test
push
add
rorb
add
and
out
in
lahf
and
add
stc
xchg
dec
sbb
divb
mov
insb
push
push
add
fisubrl
push
mov
dec
jmp
fcmove
mov
hlt
out
imul
mov
flds
nop
shlb
ret
and
inc
pop
add
jae
jmp
pusha
or
add
mov
clc
ds
cmp
push
les
loopne
sub
sub
xchg
xor
in
sbb
incl
mov
pop
xor
jae
pop
in
data16
sarl
add
adc
dec
push
pop
cld
in
mov
fdivrs
mov
add
cmp
push
jl
add
mov
rolb
or
adc
sbb
or
jl
addb
fmull
repz
call
loope
xor
add
fs
enter
lret
add
add
xor
adc
ds
add
inc
and
sbb
add
inc
rclb
test
fidivs
repz
mov
add
daa
js
jno
cmp
xchg
loop
xlat
jmp
fcomip
add
imul
push
jo
adc
jp
mov
mov
mov
sbb
sub
dec
sub
fcoml
fcoms
mov
pop
inc
push
out
negb
cmp
inc
aam
add
in
or
inc
or
add
dec
test
dec
adc
lods
xor
and
test
xchg
or
mov
cld
cmpb
cltd
jp
xchg
add
out
sub
dec
dec
add
mov
fdivrs
mov
fisubs
out
nop
cmpsl
cwtl
jnp
sub
fdivs
adc
add
call
outsb
hlt
mov
mov
inc
je
sub
es
or
sub
add
mov
jmp
push
xor
int3
ja
fs
xor
or
fadd
add
and
rcll
in
out
mov
enter
jecxz
movsl
jge
inc
call
and
push
add
or
pmullw
add
sahf
inc
dec
fisubs
filds
into
test
or
in
sub
xor
hlt
enter
push
pop
movsl
ja
add
mov
and
push
and
inc
and
sbb
push
cmp
inc
cmp
jne
rolb
and
call
add
test
incl
and
push
out
add
mov
jbe
add
lock
or
dec
mov
xchg
popa
jae
ja
jb
in
add
cld
mov
sub
insb
rorb
adc
jae
mov
mov
jb
out
daa
and
addr16
orl
repz
add
pop
faddl
test
aam
inc
adc
aad
cli
loop
add
mov
mov
pop
fiadds
xor
cwtl
rorl
outsl
pop
sbbb
cmp
rcll
xchg
sbb
add
dec
dec
add
mov
mov
fs
xchg
pop
je
dec
mov
cmpl
push
mov
adc
pop
sub
xchg
xchg
pop
add
inc
add
cmp
jno
add
adc
lods
and
dec
add
in
push
add
jne
cmpsb
adc
dec
nop
lods
dec
je
jo
add
lods
inc
push
pop
cltd
pop
dec
loopne
pop
add
xchg
icebp
mov
add
mov
rcrb
std
or
test
and
pusha
out
xor
xor
int
movsb
sbb
jecxz
push
sbb
adc
add
add
add
jo
pop
push
xor
add
int3
mov
shrb
or
rol
popa
mov
roll
dec
bound
pop
push
popa
dec
jb
add
in
call
aaa
push
adc
adcl
jo
dec
xchg
add
mulb
pop
daa
dec
and
sbb
pop
add
mov
out
mov
cltd
ror
xchg
and
xchg
and
outsl
int3
cmp
bound
mov
add
inc
pop
cs
push
add
mov
movb
xor
xor
mov
and
ror
fadds
jecxz
adc
add
addb
xor
dec
and
int3
xchg
cli
mov
pop
jne
dec
jmp
add
iret
cli
stc
in
add
scas
xchg
call
add
lcall
add
adc
arpl
inc
adc
jns
push
imul
push
mov
std
jns
insl
sbb
arpl
jmp
mov
fstps
sbb
inc
psubw
mov
mov
mov
daa
mov
sbb
sbb
leave
xor
sbb
ret
imul
loopne
in
cmp
fcmovbe
aaa
mov
jl
call
dec
sbb
push
test
stos
addb
adc
add
mov
jo,pt
iret
shl
out
hlt
enter
inc
or
lock
and
aas
inc
jne
lea
mov
adcb
jg
fmuls
imul
das
sbb
fstsw
cmp
test
and
add
cmp
adc
mov
shrb
clc
pop
ja
add
sub
dec
pop
fldt
adc
dec
jge
add
and
xchg
cs
sbb
cmpsb
ljmp
mov
and
xchg
xchg
call
aad
sbb
clc
xlat
mov
jl
inc
dec
jecxz
jle
mov
roll
bound
sbb
adc
inc
dec
jl
lahf
push
add
and
cld
test
add
dec
mov
add
movsl
movb
pop
jge
and
add
jbe
add
stos
imul
std
xor
dec
push
testb
rcrb
push
add
cmpsb
enter
adc
add
pop
dec
add
mov
add
pop
aam
pop
lcall
scas
jle
jno
adc
popf
jns
or
sbb
data16
outsb
and
sbb
cmp
inc
push
inc
mov
adc
ds
jge
mov
inc
mov
sub
push
fidivrl
subl
push
stc
jecxz
mov
sub
call
xchg
add
loopne
xor
or
and
mov
rorl
lahf
mov
pop
ljmp
popa
call
sarb
inc
call
addr16
adc
les
clc
or
ja
sbb
outsb
mov
mov
jl
mov
gs
movzwl
add
cmp
or
cmpl
pop
add
das
loopne
inc
xor
add
in
nop
xchg
shll
pop
lea
out
lret
push
jecxz
clc
mov
sbb
jmp
hlt
popl
sub
add
pop
test
fs
test
lods
call
mov
push
hlt
push
mov
jmp
into
or
jle
add
icebp
add
sbb
ret
sbb
add
cmpb
adc
or
mov
pop
inc
add
mov
mov
and
push
addb
or
jns
loope
xor
add
mov
cwtl
push
add
add
add
fmuls
xchg
adc
mov
add
popl
sub
adc
push
sbb
pusha
mov
inc
xchg
aaa
in
lcall
mov
push
decl
push
hlt
cwtl
daa
lcall
push
es
test
jo
orb
xchg
xor
inc
adc
add
adc
iret
add
push
cmp
movsl
pusha
mov
enter
js
xor
push
fsts
ret
add
adc
add
fcoml
push
xchg
sub
sbb
add
shrl
sub
sub
cmp
add
les
add
dec
add
in
fmuls
scas
fsub
faddl
fucom
shl
jecxz
fisubrs
in
pop
jmp
lods
adc
push
or
test
aad
pop
xor
aam
mov
jae
jns
ljmp
adc
add
pop
scas
dec
ljmp
xchg
stos
testb
aaa
sbb
push
add
iret
aam
ljmp
in
lock
daa
xchg
jmp
adc
xchg
andl
insl
add
push
outsl
fmul
xchg
rolb
in
add
call
and
int
cmp
call
insb
inc
stc
add
push
loopne
jno
add
out
mov
jo
mov
addb
testb
ljmp
pop
add
loop
scas
nopl
icebp
call
mov
jnp
pop
pcmpeqd
add
cmc
es
arpl
mov
add
mov
nop
inc
pop
jl
sbbb
insl
jo
adc
imul
push
add
adc
jmp
push
insb
imul
scas
sarb
xchg
ljmp
ret
in
push
stos
fmull
dec
cmp
push
jb
adc
mov
xchg
orb
cwtl
ljmp
mov
add
cmpsl
popf
pop
push
add
add
sbb
pop
or
pop
pop
push
sbb
aaa
push
push
out
add
jmp
daa
inc
add
test
xor
mov
popf
in
add
jno
movsb
jne
adc
add
shlb
mov
mov
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
in
iret
or
add
cmc
push
icebp
int
in
testl
data16
pop
add
cs
jmp
out
fisubl
push
push
mov
lahf
dec
fcmovnu
pop
add
add
std
xor
add
pop
movsl
cmpsb
outsb
push
mov
lods
pushf
mov
and
loopne
jmp
ljmp
add
je
jmp
mulb
dec
add
aaa
cmp
lock
mov
xor
ret
jmp
dec
mov
test
xor
xchg
jns,pt
les
shlb
mov
mov
mov
mov
xchg
sub
push
sbb
add
jo
push
in
loope
push
pop
push
popa
mov
push
mov
jno
xor
ds
pop
std
pop
xor
int
pop
lea
mov
xor
lcall
subl
inc
mov
sbb
add
mov
or
add
cmpb
mov
js
add
pop
cltd
push
pusha
pop
xor
jbe
stc
cmc
pop
mov
adc
fiadds
mov
add
sbb
cltd
mov
xchg
aas
mov
jmp
test
andb
fnstenv
in
adc
add
test
jns
jge
xchg
cwtl
xchg
test
xchg
xchg
push
pop
dec
dec
lods
push
pop
shr
mul
jl
add
xor
pop
test
sbb
jmp
jae
ror
push
mov
ficoms
xor
sbb
jecxz
pop
add
sbb
or
adc
jge
stos
pop
pushf
push
cwtl
lret
out
jo
outsb
fs
add
popf
adcb
cmpsl
pop
jmp
icebp
lock
mov
sbb
dec
inc
cmpl
popa
repnz
sahf
dec
add
cld
cmp
and
cmp
xor
dec
scas
jmp
out
jmp
jne
int
push
test
movsb
in
mov
es
ds
popf
addb
add
jmp
test
mov
cmp
cmp
shrb
add
xchg
fiadds
mov
mov
gs
imul
add
rclb
pop
sbb
or
cmpb
push
push
iret
flds
pop
test
sahf
lods
incb
lcall
fadd
lret
loop
movl
sahf
add
movsl
mov
add
daa
insb
jbe
adc
mov
mov
loop
gs
pop
add
fstl
mov
jl
nop
test
fsubl
add
adc
clc
xchg
xor
fwait
pushf
dec
push
test
add
jg
loope
add
loop
cld
push
arpl
mov
xchg
aad
pushf
rcl
inc
rol
les
jae
xor
mov
mov
add
mov
adc
out
pop
add
adc
ja
repz
rcrl
loop
add
add
mov
inc
add
pusha
psllw
enter
xchg
mov
into
addb
mov
stos
or
pusha
sub
pop
mov
call
rcl
aam
pop
aad
fdivrs
add
jecxz
mov
ret
dec
add
xchg
xchg
jne
sti
mov
cli
pusha
stc
or
clc
fs
cld
adc
fnstcw
jno
add
fadds
popa
xchg
sub
or
out
out
mov
leave
add
sub
xchg
or
xchg
daa
imul
or
mov
sbb
jbe
mov
xchg
add
leave
lret
mov
and
mov
add
inc
ja
js
dec
add
in
ret
or
mov
popa
add
lea
add
mov
in
out
fldl
adc
jmp
cmp
cmpsl
push
mov
mov
incb
pop
lret
or
cmp
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jge
add
cmp
add
pop
je
pushf
addb
sbb
inc
inc
add
mov
cmp
mov
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
add
mov
jnp
add
mov
xor
mov
adc
mov
test
adc
loopne
sbb
xor
jbe
jp
jae
sub
or
cwtl
xor
sbb
push
add
jle
popf
mov
xor
fsubp
lcall
pop
add
cmpsl
call
ret
rolb
lea
loop
add
andb
cmp
fwait
add
mov
rorb
daa
or
xor
mov
jns
add
addr16
add
mov
cmovs
push
jbe
mov
add
fldt
jl
mov
sbb
div
test
xchg
int
mov
add
add
dec
xchg
add
mov
arpl
pusha
imul
insb
sub
in
sbb
push
call
repnz
sbb
pushf
cltd
add
mov
xor
stos
in
cmc
jne
push
mov
adc
ficoms
lods
add
jge
add
call
push
stos
cmp
stos
pushf
into
cmp
push
push
push
mov
xchg
cmp
cmpsb
lods
jo
add
xor
inc
push
mov
push
aaa
clc
lock
call
lcall
jo
add
lods
or
xor
xchg
icebp
in
ljmp
out
sub
adcl
cwtl
out
add
mov
ret
jno
fmuls
roll
stos
xor
mov
sbb
mov
cmp
movb
add
ljmp
ret
add
dec
gs
or
add
xchg
mov
movsb
add
mov
xchg
adc
pop
loopne
out
push
push
or
cwtl
add
pop
ja
sbb
fildl
scas
lods
scas
inc
dec
dec
jne
add
movsl
movl
ror
orb
add
xchg
mov
xchg
loopne
pop
mov
lcall
hlt
out
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
add
in
push
sub
inc
inc
sbb
inc
pushf
inc
add
addl
out
subb
add
push
jo
cmp
pop
pop
sbb
daa
xor
inc
dec
xchg
cs
xchg
xor
add
inc
inc
jne
fimuls
testb
jecxz
dec
test
lods
test
sbb
loopne
lahf
adc
push
cmp
dec
add
call
jbe
in
sub
fdiv
push
pop
sbb
outsb
jno
vpmulhuw
add
cmp
repnz
add
stos
stos
or
add
or
xchg
lea
dec
insl
dec
or
mov
je
and
lret
int3
sbbb
pop
add
pop
jg
jns
push
iret
out
gs
fdivrs
pushf
test
js
mov
push
mov
push
outsb
mov
orb
add
in
roll
imul
pop
jmp
inc
rol
and
idivb
inc
loopw
and
call
jo
dec
add
or
dec
add
push
int3
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
add
call
clc
jmp
pop
das
inc
dec
push
mov
test
scas
enter
add
jge
cmpsb
add
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
push
cmp
gs
into
mov
push
add
push
aas
xor
and
mov
xchg
add
and
pushf
mov
call
rcl
test
lods
adc
pop
aas
cmpsl
ljmp
mov
lea
and
leave
mov
or
add
cmpsb
sbb
enter
push
clc
push
add
sbb
sub
ss
lcall
cltd
lods
mov
data16
jmp
sub
push
aaa
movsl
ficoml
and
mov
push
test
jb
pop
add
pushf
test
mov
ljmp
flds
xchg
adc
mov
mov
mov
add
adc
or
adc
jo
pushf
push
inc
sbb
sub
add
ret
popa
cwtl
outsb
sub
or
cwtl
jb
imul
ret
pop
addb
rcr
xor
and
jne
add
push
sbb
xchg
and
ja
jb
sub
cmp
add
and
shlb
push
add
dec
rcrl
add
add
cmpb
adc
xchg
and
sub
addb
aam
jb
cmc
mov
lret
cli
mov
add
fwait
daa
push
rclb
xor
xor
std
mov
mul
mov
sub
mov
or
std
rolb
sahf
jmp
add
dec
mov
adc
hlt
add
jno
imul
aam
inc
and
inc
addl
out
add
call
and
add
out
mov
add
inc
repz
sbb
psubsb
pop
out
pop
idivl
or
xchg
cmp
out
jl
jle
add
outsl
cmpl
and
cmpsl
sarl
sbb
mov
or
pop
push
push
add
fcoml
cmp
push
add
xchg
lock
jne
add
xchg
xchg
sub
addl
push
idivl
adcl
ss
xor
xchg
add
fs
out
push
mov
fdiv
jmp
mov
sub
adc
repz
add
or
call
out
movb
mov
add
hlt
add
sbb
add
jge
pop
lret
xchg
call
daa
clc
and
add
push
mov
add
pop
arpl
pushl
aad
add
inc
sbb
cmp
sub
cld
xorl
hlt
push
clc
fcoml
int
add
lods
pop
out
int3
shl
and
adc
xlat
add
imul
fiadds
insb
add
xchg
stc
xor
fcmovnu
or
call
jge
dec
aam
sub
adc
jne
adc
in
jo
xchg
add
mov
sbb
arpl
and
inc
sbb
adc
call
cmp
add
push
push
out
mov
and
pop
sub
add
and
mov
jmp
orb
xchg
adc
cld
rorb
dec
outsl
xchg
push
mov
mov
daa
add
xor
lds
jbe
push
xchg
add
insl
sub
aad
inc
add
and
shlb
or
inc
je
add
push
sub
sbb
ja
jecxz
cmpsb
outsl
into
adc
push
jecxz
mov
ds
add
xchg
adc
add
vphadduwd
or
mov
loop
pop
data16
add
lcall
add
or
repz
out
cli
jno
add
jne
dec
jle
les
add
cli
test
andb
sti
subb
xor
repz
int
cmpxchg
add
adc
push
or
and
ds
fadds
fidivl
add
pop
cli
mov
adc
jmp
out
mov
and
mov
mov
imul
mull
adc
sbb
push
cmp
ljmp
mov
sub
mov
aaa
test
lods
imul
push
cmp
cmc
or
clc
sbb
in
or
ret
dec
stos
fiaddl
nop
pop
test
rcrb
scas
add
bound
dec
mov
xchg
mov
inc
movsl
or
push
sahf
nop
mov
xor
add
xchg
sub
add
cmc
popf
das
addb
add
mov
pop
dec
rcl
cmp
add
subl
jmp
jo
cld
sbb
test
mov
aaa
xchg
push
adc
push
sbb
iret
add
mov
dec
test
outsl
inc
adc
cmpsl
aaa
xchg
fistl
outsb
test
inc
sbb
mov
aad
jmp
cwtl
sub
in
add
cld
subb
pop
data16
jns
pop
or
and
jmp
or
cmc
inc
sub
push
add
push
js
fwait
dec
out
mov
adc
daa
in
add
and
push
cmp
insb
mov
ljmp
out
cmpb
add
fnstsw
add
mov
push
mov
pop
shrb
jbe
fisubl
sbb
mov
dec
add
xor
add
and
xor
add
xor
cmp
inc
add
dec
insb
cli
xchg
in
push
idivl
mov
push
jge
add
scas
mov
fiadds
test
lock
fwait
jp,pn
outsb
or
cmpsl
cmpb
xor
icebp
sbb
mov
frstor
sbb
loopne
clc
xor
es
cwtl
movsl
lock
out
inc
movsb
push
in
pusha
or
clc
xchg
stc
adc
pop
mov
xchg
add
test
adc
sbb
mov
push
add
adc
cmp
scas
mov
shlb
ljmp
xchg
or
std
adc
test
mov
sti
repz
shrl
cmp
inc
or
add
in
add
add
xchg
sbb
cmpsb
cld
repz
addb
mov
push
ja
xchg
add
mov
cmp
movsl
jbe
push
shl
dec
or
popa
add
scas
fldl
in
ret
incb
inc
push
mov
movsb
and
lock
dec
or
scas
pop
jno
add
mov
jmp
movsb
test
lods
cli
push
pop
or
push
xor
lea
dec
aas
add
push
sub
out
xor
pushf
fwait
push
xor
mov
add
test
add
add
xor
mov
add
jp
clc
aas
nop
mov
in
je
and
pusha
push
push
add
shlb
movsb
jle
and
or
jmp
scas
xchg
stos
test
cs
mov
push
popa
add
cmp
pop
in
cmp
or
sbb
or
push
mov
fnstsw
add
mov
jbe
adc
inc
add
jg
dec
dec
data16
pop
add
hlt
ret
add
jne
sbb
xchg
gs
iret
push
push
rorb
movhps
and
xor
jl
and
add
mov
add
pop
jge
fs
movsb
cmp
cmp
jbe
gs
push
mov
add
jne
dec
inc
dec
add
xchg
arpl
add
fadds
or
lcall
xchg
sbb
cmp
aaa
nop
movsb
add
enter
sub
test
and
loope
lret
add
nop
mov
mov
or
mov
aaa
addr16
add
jl
cltd
cmc
mov
add
jmp
add
xchg
fstl
rolb
pop
cmp
out
and
ror
jmp
ret
add
scas
cmpsb
xchg
dec
lods
leave
adc
fs
mov
das
mov
push
idiv
andb
inc
add
jns
outsb
mov
dec
cmp
andb
cmpsb
xor
movsb
push
jae
mov
adcl
mov
pop
rclb
push
fiaddl
sar
loopne
sbb
dec
adc
testl
xor
ljmp
inc
add
or
rolb
pop
aas
inc
in
and
loopne
rcrb
add
adc
sub
inc
dec
pop
add
mov
add
loope
pop
pop
and
cmp
subb
hlt
add
add
pusha
jle
repnz
nop
insb
mov
enter
fisubrs
std
arpl
push
sub
xor
adc
push
mov
popf
aaa
dec
push
lock
je
and
xor
js
nop
icebp
add
adc
push
test
inc
jg
mov
addb
lds
xchg
js
icebp
cwtl
imul
push
ja
loope
arpl
cld
or
and
mov
adc
inc
insb
add
cpuid
dec
ds
dec
ds
push
mov
fnstcw
sbb
add
fwait
outsl
xor
push
jbe
add
pop
mov
push
movsb
rcrl
adc
aas
inc
add
outsb
arpl
and
sbb
dec
inc
lock
insl
add
adcb
lret
mov
roll
push
data16
sub
sbb
fmul
mov
incb
xchg
andb
mov
inc
mov
in
lds
les
sbb
int
loopne
xlat
cmp
dec
inc
and
mov
andl
cmp
sbb
push
push
out
addb
xchg
mov
xor
sbb
dec
dec
negl
sbb
das
inc
push
cltd
sar
pop
mov
mov
push
scas
or
or
add
inc
xchg
jns
loopne
adc
cmp
inc
push
inc
dec
in
or
jmp
es
fldcw
add
pop
les
lahf
mov
cmp
sbbb
call
add
mov
add
in
adc
cmp
popf
pusha
icebp
mov
add
and
push
cmp
mov
mov
mov
nop
aas
aaa
ret
sti
sub
or
jnp
push
sti
mov
bound
addb
inc
jp
sub
xor
rcll
popf
incl
call
es
adc
push
add
mov
inc
add
test
xchg
pushf
je
push
dec
push
cmc
pop
mov
or
add
sbb
int3
mov
hlt
ret
jg
clc
in
or
pop
adc
mov
out
int
lock
mov
or
and
add
sbb
jmp
leave
mov
or
incb
cmp
jne
test
add
bound
aad
lods
jae
jo
flds
push
add
sbb
pop
testb
add
xor
pop
add
ljmp
fs
mov
and
neg
sbb
rorb
roll
cmp
pop
mov
ds
add
rolb
mov
lret
add
das
xor
sbb
add
jg
or
movsb
pop
mov
lss
hlt
xchg
add
adc
rol
sbb
cs
fstl
mov
les
fistps
mov
repnz
jb
pop
and
mov
xor
sub
andps
inc
mov
cmp
add
jb
or
out
or
inc
add
push
loop
add
mov
rcrb
xchg
in
add
rcrb
push
repnz
and
add
fildll
xor
add
cwtl
test
pushf
push
cwtl
fdivs
fmulp
add
add
mov
loop
sbb
inc
das
adc
add
mov
inc
add
faddl
repz
ffree
push
loopne
or
adc
aas
rorb
cltd
xor
jmp
add
and
inc
mov
add
imul
add
inc
andl
mov
scas
xchg
mov
ja
fsubr
add
int
add
jae
incl
and
inc
aad
dec
out
clc
lea
mov
or
or
add
cli
xor
sbb
sub
imul
inc
dec
sbb
add
or
rclb
clc
lahf
sbb
and
mov
mov
outsb
add
jl
push
cmp
js
xor
add
enterw
in
add
aad
add
cmp
outsb
cmp
mov
add
insl
push
cli
push
arpl
add
add
and
xor
or
and
or
inc
xor
cmp
push
mov
adc
jp
pop
in
dec
adc
add
fldl
mov
pop
and
mov
rcrl
jne
daa
add
sub
je
pop
add
dec
xor
cli
mov
or
add
aas
jmp
insb
add
sbb
stos
mov
add
arpl
or
mov
cmp
mov
and
inc
xor
add
or
ret
pop
adc
daa
xchg
push
push
xchg
test
les
das
and
js
adc
fcoms
test
xchg
push
add
or
popa
xchg
add
or
cmp
adc
add
adc
mov
in
cmpl
mov
jecxz
cvtps2pi
push
loopne
xchg
test
jmp
test
jge
inc
add
push
or
ds
jb
jbe
sub
inc
movsl
lock
pop
push
movsb
dec
inc
int3
cmc
add
aam
add
jl
jno
pusha
push
stos
push
and
adc
mov
fidivrl
data16
mov
mov
pop
mov
pop
fs
adc
cmp
xchg
jg
cmpl
pop
mov
and
xor
pop
adc
sbb
jno
add
push
push
cmp
mov
add
cltd
addl
lock
push
or
and
fadds
fsubrl
pop
push
or
xor
movsl
ss
pop
cmp
jnp
jo
dec
xor
pop
push
ds
mov
sub
bnd
or
push
jb
aaa
rolb
imul
pop
inc
outsb
push
add
pop
xchg
push
cwtl
out
imul
xor
shr
dec
lock
push
inc
inc
mov
mov
insl
cwtl
jo
and
push
jo
lods
dec
xor
mov
out
pushf
loopne
adc
sub
sub
xchg
dec
push
xor
std
dec
int
dec
add
fisubrs
add
shrb
cmp
in
test
dec
inc
xchg
mov
or
rorb
xlat
loop
jb
jo
stos
pop
sub
adc
mov
mov
push
lea
pause
adc
loopne
jp
je
iret
or
add
repnz
test
cmp
mov
and
ret
mov
and
in
pop
add
mov
inc
add
xor
dec
dec
or
or
dec
push
xor
popa
inc
pop
add
xor
cmp
xor
mov
aam
pop
sbb
cld
inc
add
xchg
imul
adc
mov
sub
adc
test
dec
or
add
adc
pop
add
ljmp
add
jmp
js
nop
jp
lods
push
arpl
cwtl
pop
sub
rclb
addl
mov
adc
cltd
cmp
xchg
adc
push
orl
push
add
aam
jg
pop
loop
cmp
sub
jne
inc
insb
bswap
fs
pushf
xchg
nop
int3
fisubs
xor
lret
push
xchg
and
jns
pop
es
ret
inc
dec
inc
inc
lock
add
push
sub
cmp
in
sbb
push
sub
aam
mov
add
jno
pslld
add
in
das
xchg
icebp
xchg
sarl
lcall
out
bound
fnstenv
ret
sahf
imul
outsl
jne
imul
inc
insb
cmp
roll
jo
aas
aas
lods
add
sbb
clc
out
add
test
rol
add
push
jb
popa
outsb
jae
cmp
addr16
inc
add
jne
outsl
mov
fxch
adc
stos
xchg
push
mov
mov
enter
in
push
push
add
sti
mov
jo
outsl
mov
je
mov
js
mov
adc
nop
sub
jle
cmp
call
cmp
cltd
push
push
jbe
add
add
pop
inc
popa
je
sarb
inc
sbb
clc
mov
movsb
xchg
mov
dec
addb
outsb
add
sbb
std
imul
rorb
or
nop
jo
xchg
imul
je
cmpsl
adc
test
mov
jmp
mov
push
pop
xor
dec
js
and
xor
jo
dec
and
add
jmp
adcb
adc
push
jmp
ret
mov
add
mov
mov
addr16
add
das
dec
int3
mov
xchg
and
shl
xchg
xchg
mov
enter
add
inc
jae
aas
lock
adc
je
and
add
lcall
and
sub
in
mov
pop
sub
jg
xor
adc
add
add
pop
push
mov
shll
ljmp
mov
push
push
jne
lret
add
xor
add
in
and
sub
or
add
stc
test
sbb
or
loop
xchg
push
mov
ret
adc
cmpsl
add
dec
pop
test
pop
cmpsb
test
stos
or
subb
mov
mov
mov
add
and
ret
movb
and
add
xchg
push
dec
inc
rorw
jmp
xchg
add
hlt
mov
cmp
mov
mov
lcall
pop
jl
pop
ljmp
hlt
sub
loop
or
fiadds
mov
pop
pop
pop
jp
push
pop
int
fadds
push
mov
sub
lods
dec
ret
push
decb
loop
je
fwait
push
add
cld
jmp
dec
pop
test
adc
test
addl
mov
clc
pushf
adc
sbb
add
push
push
sub
and
inc
add
insb
dec
adc
push
sbb
cwtl
adc
enter
push
mov
add
and
cmp
fsqrt
lock
ss
push
pop
es
addr16
lret
xchg
push
lods
insb
sarb
notb
jle
sbb
jne
jb
jns
pop
xchg
and
outsb
adc
xchg
dec
les
add
cmp
or
push
sarb
sub
movsb
sahf
adc
lea
leave
mov
jle
pop
faddl
push
in
mov
jb
add
or
ret
jg
into
add
push
call
enter
out
add
or
pop
sbb
movsb
mov
jne
push
add
or
push
pop
subl
jo
xchg
and
fstl
add
out
dec
clc
cltd
add
sub
xchg
inc
sbb
sub
add
xor
insl
and
pop
sbb
fs
xchg
sub
or
test
push
add
nop
cmp
cmp
in
sub
in
add
pop
add
add
mov
push
dec
pop
lcall
pop
mov
jmp
test
push
sub
mov
inc
bound
das
mov
push
dec
xor
js
pusha
hlt
fs
sub
test
inc
pusha
add
pop
pop
pop
or
testl
and
sub
fidivrl
cmp
jo
cmp
lcall
add
add
add
adc
dec
mov
lret
nop
mov
out
add
pcmpeqw
jle
jns
sbb
jb
push
mov
pop
nop
cmp
add
data16
jae
mov
mov
or
stc
call
dec
mov
push
sbb
out
xchg
ljmp
inc
mov
cs
or
adc
mov
mov
jmp
mov
inc
sbb
sub
and
inc
aas
push
add
adc
outsl
roll
add
add
xor
add
pandn
add
call
push
add
jmp
and
add
jmp
sub
verw
jb
cli
or
adc
pop
out
mov
rcrb
jb
incb
call
inc
test
or
pop
js
lea
push
inc
inc
xor
add
xor
sbb
repz
push
or
out
add
adc
push
cwtl
lods
adc
loope
pop
mov
ljmp
dec
sbb
arpl
add
push
mov
cmp
add
mov
adc
push
pop
add
xchg
xchg
mov
jns
sub
addl
xor
ljmp
add
nop
outsb
pop
cli
sbb
jnp
iret
adc
lock
add
or
cmp
jecxz
rclb
add
lea
push
popf
push
sbb
push
xchg
in
mov
loop
push
cmpsl
js
lahf
add
cmp
sbb
add
inc
daa
xor
push
add
scas
fsubl
notb
add
jne
mov
popa
jb
cmp
lret
les
shll
mov
out
std
add
aad
adc
adc
roll
je
cmc
add
xchg
dec
sbb
sub
adc
notl
ljmp
repz
xor
aam
jp
jo
rcrb
push
push
or
stc
and
dec
and
or
call
test
pusha
fisttpl
ficoms
add
scas
leave
aas
and
popa
loopne
jnp
lods
gs
lea
arpl
lgs
or
xor
jle
xor
cmp
xchg
jle
and
jo
movsb
adc
add
xor
in
pop
jno
add
in
adc
add
inc
je
mov
loopne
pop
push
lock
adc
stos
cmpsl
daa
jne
add
xor
add
dec
or
addl
mov
add
and
push
or
jo
or
in
xchg
push
cld
mov
mov
dec
xchg
inc
in
jae
arpl
add
mov
cmpl
pop
and
mov
adc
notl
jns
les
mov
jge
add
or
test
sub
jb
rorb
lods
pop
fsubrl
cmp
push
push
cwtl
in
pop
gs
loope
jo
mov
sub
ss
movaps
lock
add
fsubrs
movsl
xor
pushf
jae
add
nop
dec
les
ficoms
hlt
daa
jbe
add
test
xchg
in
movsl
jns
rorb
and
jmp
mov
sbb
popa
xlat
add
xor
test
add
rcrl
in
xchg
js
repz
add
add
mov
add
mov
enter
xchg
sbb
repnz
pop
sbb
lock
lahf
mov
pop
pushf
out
adc
push
cmp
and
add
mov
jmp
clc
hlt
js
push
inc
nop
inc
push
add
cld
pusha
shl
repz
pop
xor
push
inc
xchg
test
test
jg
add
aas
shlb
add
lahf
aad
fsubrl
or
stos
mov
or
testb
mov
ljmp
xor
fisubs
xor
mov
sub
jg
add
add
jb
test
cmp
add
add
fwait
push
ret
cmc
add
insb
ss
xor
adc
add
inc
push
jnp
fdivrl
push
addb
dec
test
cmpsl
aam
sub
jg
add
movsb
fs
sbb
lahf
xchg
jg
add
das
jne
call
mov
sbb
loop
push
popa
aas
ret
or
jne
pop
pop
pop
add
add
and
ljmp
jae
pop
add
adc
pop
mov
pop
and
nop
and
and
rolb
add
or
lfs
cmc
repnz
pusha
or
sbb
enter
adc
adc
or
inc
pop
sub
xchg
rolb
adc
add
sbb
mov
shlb
add
mov
inc
or
add
pop
ret
repnz
push
je
mov
int
mov
cmp
hlt
inc
divb
cli
jne
push
or
jae
mov
adc
push
pop
mov
add
pop
add
fs
xchg
inc
inc
iret
fcmove
popf
inc
testb
jne
mov
orb
add
mov
push
call
pushl
mov
add
int
psadbw
test
add
and
mov
cwtl
aaa
cmp
movsb
cmpb
lahf
and
pop
sbbl
and
cld
mov
stos
mov
adc
cltd
cmp
mov
cmp
add
pop
or
ffree
mov
clc
clc
add
dec
cld
lret
inc
in
add
cmp
add
ret
push
je
test
pop
dec
xor
pop
xchg
sub
es
int3
cmp
hlt
pop
test
out
iret
inc
incl
cmpsl
jge
xchg
jecxz
ret
fcomip
int3
stos
adc
jmp
pop
rolb
pop
add
sub
add
add
xlat
or
cmp
mov
lock
mov
dec
lahf
sahf
icebp
or
sub
sub
push
daa
push
push
cmc
ds
add
in
fs
mov
add
movsb
jge
cmp
xchg
icebp
jne
or
ss
mov
add
inc
xor
add
pushf
jp
cmp
adc
pop
and
cwtl
inc
cmp
jbe
call
inc
addr16
xor
je
or
or
jo
cmp
test
fsubp
and
mov
add
es
enter
or
cmp
mov
sbb
mov
lock
push
adc
add
les
sbb
in
addr16
dec
inc
sbb
stos
leave
xor
jle
sub
sub
dec
aad
fidivs
scas
cmp
and
jp
add
scas
pop
add
or
mov
sub
popf
fistpll
adc
add
add
pop
icebp
add
add
into
or
cmp
andl
cmc
jp
inc
mov
pushl
sbb
jl
pop
pop
xor
add
rolb
ja
ljmp
sub
mov
add
call
fdivrs
xchg
loope
jmp
push
inc
mov
aas
add
andb
push
cmp
add
jne
add
push
mov
jle
or
add
xchg
add
jmp
xor
call
aam
push
and
sbb
mov
add
dec
jg
jg
setne
cmp
xor
pop
out
jl
nop
jns
mov
test
add
jmp
ret
cld
add
push
pusha
mov
adc
add
cmp
sti
mov
repnz
dec
mov
add
cmp
add
mov
insb
add
add
dec
pop
mov
outsl
popf
sbb
das
sub
and
mov
cli
add
or
xor
clc
dec
and
push
out
adc
in
or
or
jne
add
das
adc
adc
int3
daa
or
clc
dec
jg
add
out
mov
add
push
and
fildll
and
movsl
pop
pop
adc
xchg
test
daa
pop
inc
adc
loopne
ljmp
jo
rcrl
add
les
cmp
push
add
mov
xor
ja
add
adc
pop
jmp
add
shll
out
sub
sbb
or
scas
add
pop
push
and
rclb
aam
add
loopne
push
push
add
fwait
jno
cmp
aas
repz
add
jecxz
bound
jp
nop
add
mov
imul
sub
add
test
lahf
add
lock
outsl
mov
pop
sub
xchg
sub
aaa
and
clc
push
andb
jge
or
movd
loopne
pop
in
sub
popf
imul
push
ss
add
inc
cmp
call
loopne
bound
ljmp
add
jp
adc
and
aam
insl
sub
inc
shl
pop
xchg
sbb
int3
xlat
mov
test
enter
outsl
mov
les
inc
shlb
adc
mov
mov
stos
sbb
push
fimuls
or
ljmp
movsb
mov
mov
mov
cli
cmc
add
and
adc
xchg
jge
add
imul
and
enter
push
add
pusha
push
insb
push
subb
and
ja
dec
mov
sub
add
and
daa
xor
test
cmpsl
sbb
and
xchg
pop
xor
insb
add
push
dec
add
jnp
cmp
pop
jg
fs
mov
sub
loop
push
hlt
push
xchg
xor
and
lock
insb
sti
push
or
cmp
adc
jne
ljmp
std
and
or
daa
ds
fadds
clc
fidivl
xor
mov
verw
push
cmpsl
jmp
cmpsb
lods
cmp
add
inc
mov
bndstx
cmp
mov
or
mov
cmp
dec
jnp
bnd
pop
lds
pop
sbb
out
xor
in
fsub
je
or
sbb
imul
inc
test
add
push
dec
sub
jp
add
xor
add
and
sahf
add
xchg
mov
jle
sbb
loop
add
mov
repz
addb
inc
mov
fdivl
sub
sbbb
adc
cmp
das
testl
ss
test
add
or
std
cmp
add
test
jbe
mov
add
lds
addb
jl
ljmp
jne
incb
inc
hlt
jge
add
je
add
aas
sbb
loopne
addb
rol
jmp
add
movzbl
sub
jne
add
xor
dec
mov
cmpsl
out
sti
jno
add
mov
inc
incb
lret
mov
add
and
outsb
pop
xlat
inc
in
pushf
dec
sbb
sbb
lds
aaa
mov
daa
es
cwtl
sahf
jne
mov
jns
popw
andb
cmp
in
add
imul
or
push
pop
mov
das
add
push
cmp
jae
lret
decl
pop
cmpsb
sbb
inc
adc
push
negb
push
shlb
or
clc
xchg
cmpb
mov
mov
jle
add
test
rolb
push
push
aad
sbb
outsb
pop
dec
mov
add
and
aad
sub
mov
add
or
sbb
idivl
daa
jle
aad
mov
les
jnp
cmp
mov
mov
cmpl
outsb
popl
lret
lea
adcb
loop
add
or
cli
push
pusha
lahf
and
pusha
add
cmp
and
js
lock
loopne
imul
std
and
adc
xlat
push
jne
mov
movsb
or
sbb
sub
call
jns
add
mov
pop
and
rol
and
and
into
push
sahf
push
push
and
cmp
enter
call
mov
faddp
das
inc
mov
jne
sbb
or
inc
cmp
add
and
dec
aaa
or
adc
imul
pop
or
pop
pushl
cmp
cmp
sbb
pushf
aad
movsb
roll
out
and
lea
mov
iret
and
push
add
jp
fists
leave
ja
xor
mov
call
add
push
xchg
fs
lds
and
lahf
or
push
in
add
addr16
movsb
scas
pusha
aas
push
les
jbe
ret
int3
adc
ja
mov
jae
add
out
pop
mov
lock
es
and
scas
sub
ja
mov
mov
push
mov
pop
call
int3
jg
daa
pop
sarl
sbb
mov
or
je
add
mov
sub
xchg
stos
add
xchg
in
sub
adc
mov
sahf
imul
mov
sub
xor
pop
andb
std
hlt
jmp
pop
aas
test
mov
cmp
popf
adc
inc
cmp
pop
movsb
aas
mov
or
dec
hlt
push
jl
movsl
push
jmp
shlb
das
cwtl
xor
mov
data16
mov
popl
pop
sub
jle
mov
mov
sub
sbb
inc
mov
add
je
sbb
xchg
jg
or
sar
popf
fistps
mov
xlat
add
outsl
je
add
sub
or
mov
inc
push
dec
dec
and
add
cs
imul
xchg
mov
adc
scas
mov
lock
fistl
sahf
rclb
adc
fadd
xchg
xchg
nop
sarb
add
sbb
mul
inc
inc
xchg
mov
outsb
add
aad
sub
repz
cmp
pop
add
frstor
iret
cmp
add
pop
ret
into
mov
jl
stos
cmp
push
add
add
aad
mov
push
sbb
mov
ficoms
adcb
add
dec
and
dec
xchg
cmp
faddl
lock
adc
scas
and
pop
and
push
and
dec
add
push
xchg
cld
jg
sub
mov
mov
std
dec
xor
int
ds
jge
cltd
xchg
dec
add
mov
push
mov
xchg
lock
cmp
add
add
or
mov
or
adc
out
ja
dec
cli
iret
sbb
dec
pusha
or
hlt
lods
add
push
mov
cmp
hlt
add
push
inc
inc
push
jb
cltd
fadd
push
dec
inc
test
add
xchg
xchg
adcb
mov
jne
sub
lods
je
add
mov
jmp
stc
add
lahf
push
js
rcl
popa
imul
push
and
cmp
sub
cmp
and
pop
xchg
pcmpgtd
outsl
sub
inc
jne
mov
cmp
cmc
rcrb
imul
jae
and
add
push
out
and
adc
add
fdivs
cmovo
es
mov
xchg
cmp
ja
pusha
add
in
hlt
add
sbb
dec
loop,pn
loop
add
enter
call
cmpb
or
xchg
rcr
sub
psadbw
das
mov
jmp
add
data16
or
add
sti
cmp
roll
mov
add
call
dec
pop
divb
mov
mov
add
outsl
xorl
pop
and
test
lods
dec
imul
mov
adc
jno
add
push
jb
and
lock
mov
add
jne
imulb
xlat
push
fidivs
lods
pop
or
cs
inc
test
pop
cmpl
or
and
cmpb
cmp
stos
movsb
pushw
push
lea
test
cmpl
add
mov
sub
mov
sbb
in
jp
push
popf
add
mov
lds
lea
nop
xorb
shrb
movsb
aaa
mov
pop
jecxz
push
mov
jo
or
mov
lea
das
mov
add
dec
call
sub
mov
int3
enter
add
cmp
jle
das
xor
jns
xchg
nop
mov
rcrb
pusha
push
sub
addb
or
adc
and
add
dec
insb
cmpsl
add
sub
in
mov
cmp
lods
pop
popa
sti
mov
mov
inc
xlat
sti
mov
imul
aas
pusha
jne
mov
and
and
incl
adc
dec
inc
cmp
add
mov
add
mov
or
int3
fildl
cmovs
addl
add
int3
add
push
add
and
adc
aam
stc
ljmp
or
shl
adc
lahf
into
cs
mov
sub
pop
push
scas
or
inc
inc
dec
sub
lock
imul
jo
cmc
dec
add
xchg
call
inc
shlb
sti
push
add
aad
ret
fnstcw
or
ja
add
adc
jo
sub
add
pop
mov
addb
and
inc
cmc
push
jo
add
movsb
stos
mov
mov
inc
cmp
pop
jl
add
insl
out
repz
adc
and
add
or
sub
push
add
pop
mov
loopne
pusha
push
inc
outsb
and
push
add
jb
inc
pusha
push
add
insb
sub
dec
inc
push
cmp
mov
enter
push
mov
inc
add
ret
jg
imul
sub
add
sbbl
fsts
sbb
sbb
sbb
add
and
add
int3
add
dec
movsb
fs
popa
jmp
cld
fcoml
push
loopne
pushf
add
add
mov
in
add
out
mov
clc
mov
push
out
call
xchg
stos
pop
pop
insb
inc
push
std
or
add
jne
imul
nop
pop
repnz
jmp
or
arpl
adc
sbb
nop
adc
rorb
add
fcmovu
adc
and
inc
cwtl
jmp
add
xor
add
stos
bound
or
add
mov
add
sbb
push
add
fwait
sahf
dec
insl
fistpl
add
sbb
filds
pcmpeqb
outsb
push
add
in
sbbb
adc
dec
mov
mov
adc
add
jne
and
js
add
cmpsb
mov
push
sub
push
or
add
insl
jno
imul
add
mov
pop
xchg
sbb
or
mov
add
sub
test
xchg
add
loopne
jo
xor
pop
mov
or
aam
das
or
and
cmp
icebp
pop
mov
pop
shlb
add
inc
xorl
add
cwtl
xchg
cld
add
loopne
test
xchg
in
adc
clc
les
mov
xchg
mov
xchg
call
add
fisttpll
and
inc
add
test
inc
push
push
aaa
adc
shlb
aas
cs
jmp
enter
adc
nop
jge
sbb
loope
fsubl
imul
and
xor
push
out
adc
push
mov
adc
jbe
dec
out
push
sbb
xchg
xor
add
dec
popa
sbb
test
inc
aaa
sbbl
sbb
sbb
xor
clc
mov
mov
and
mov
mov
test
sbb
or
rorb
insl
mov
add
rcl
pop
filds
mov
stos
js
loop
mov
ja
add
add
add
cmpsl
xor
add
fistpl
mov
inc
cmpsb
xlat
xchg
xor
clc
add
mov
xchg
xor
add
fs
push
xchg
lods
jmp
decb
stc
fisubs
dec
inc
arpl
inc
cld
ja
push
cmpsl
push
inc
leave
fldl
pop
and
aas
decb
std
or
test
add
sub
repnz
push
hlt
aad
sub
push
jmp
insl
adc
dec
movsb
stos
cld
xor
add
mull
cwtl
in
dec
rolb
mov
notl
or
loop
xor
add
lret
xor
push
test
cmp
cmp
mov
cmp
xchg
xchg
pop
adc
mov
insl
inc
sub
push
inc
pop
jmp
push
jns
add
out
add
imul
fimuls
push
cmp
add
jl
andl
inc
add
pushf
sarb
jmp
dec
sub
xchg
cmc
ret
add
hlt
mov
add
out
xor
mov
pop
ds
lock
adcb
and
add
push
dec
in
add
and
push
imul
adc
push
in
imul
sub
cmp
xchg
inc
data16
daa
das
mov
push
repz
js
add
push
in
pop
adc
movd
xor
cmp
cmpsl
sub
add
sub
adc
add
je
addr16
cmp
bound
add
sub
add
xchg
test
jo
outsb
add
push
gs
inc
pop
jne
imul
add
push
mov
call
and
cwtl
lods
dec
cmpsl
sbb
mov
jmp
jmp
push
mov
mov
ljmp
push
push
jbe
pop
fidivrs
or
fs
jno
ja
jae
jbe
jne
add
jo
fwait
js
adc
fsubrs
loopne
imul
adc
sub
sub
lahf
enter
and
das
subl
add
call
movsl
jle
mov
mov
sub
leave
pop
dec
stc
popa
rolb
addb
push
add
add
fcomps
xchg
aas
dec
sbb
daa
push
pop
push
and
add
or
xor
jnp
or
adc
mov
call
js
adc
add
fstp
das
push
rolb
or
mov
push
lahf
rclb
je
dec
add
cmpsb
cmp
inc
or
jne
loopne
inc
or
out
daa
clc
fdivrl
lret
das
adc
nop
pusha
mov
add
inc
add
enter
pop
push
sub
sub
call
jae
add
mov
pop
mov
movsl
add
jb
jbe
push
jo
roll
adc
insb
jo
sbb
add
mov
dec
add
enter
or
sub
add
nop
mov
aad
jmp
or
je
add
ja
pop
mov
jo
pop
and
xchg
or
int3
adc
faddl
sbb
sbb
pushf
push
add
neg
pop
and
and
push
jne
sbbl
test
enter
inc
push
test
and
sbb
and
outsb
insl
ret
cld
add
mov
lock
adc
adc
xor
ret
mov
xchg
test
repnz
mov
add
fsubs
leave
sub
dec
lea
shrb
shlb
ret
mov
adc
add
pop
add
js
repnz
out
jo
add
repz
mov
and
adcl
clc
add
jb
dec
stos
push
loopne
push
je
jo
fdivrl
adc
das
xlat
inc
fs
jl
gs
nop
xchg
jecxz
jne
add
hlt
test
dec
mov
dec
ret
cmp
inc
mov
nop
sub
mov
push
roll
fstps
fsubl
add
inc
arpl
mov
push
cmp
cmpb
or
ror
push
jnp
push
dec
add
in
cmc
pop
dec
in
adc
dec
addr16
mov
lcall
push
xchg
adc
add
lock
or
addb
cmp
push
xchg
lds
out
pop
xor
dec
mov
mov
out
pop
push
push
std
sbb
sub
inc
filds
js
push
mov
outsl
sbb
add
jp
movb
sbb
daa
adc
jb
sub
ja
jno
fcmovnu
jno
enter
pop
mov
xor
lahf
dec
std
pop
jecxz
in
sub
inc
into
mov
ror
add
push
xor
cmovge
add
cwtl
mov
cmc
sub
push
dec
push
stc
movb
inc
xchg
scas
test
mov
add
rcll
idiv
pop
test
cs
xchg
fisttpll
push
push
lret
jge
clc
inc
add
and
jb
adc
adcb
xchg
jne
cmpsl
mov
jg
data16
jns
hlt
push
in
push
hlt
sbb
adc
or
es
lds
das
arpl
or
scas
sbb
aas
pop
push
cmc
push
add
adc
scas
jg
adc
addps
imulb
push
test
mov
mov
dec
add
addr16
dec
add
push
or
pop
mov
testb
xor
jl
out
sub
pop
popa
cmc
mov
pop
add
cmp
bswap
push
into
mov
xchg
add
inc
add
or
cld
sub
mov
and
sub
push
add
je
mov
mov
push
cmp
inc
mov
cmp
push
mov
add
add
stc
ret
pop
adc
xchg
call
add
mov
pop
stos
add
ret
dec
cmp
pop
fcomps
and
filds
popa
sahf
xchg
ja
xchg
pop
pop
cmp
mov
cs
test
mov
insb
mov
hlt
movsl
mov
sbb
mov
jge
mov
pusha
xchg
add
sarl
cli
push
add
pop
ja
or
imul
push
movsb
repz
loopne
dec
lock
adcb
aad
jl
or
add
jg
jmp
push
mov
dec
repz
add
jnp
xor
push
std
push
movsb
jno
and
leave
cmpsl
pushf
pusha
inc
add
lret
jns
sbb
clc
pop
ljmp
mov
ds
push
add
scas
iret
rolb
and
mov
mov
lahf
jl
add
lock
addl
shrl
push
rcrl
rolb
mov
sar
rclb
enter
hlt
mov
fdivrs
jmp
jns
lret
xchg
jne
inc
add
add
push
push
sti
cwtl
mov
add
pop
pop
xor
jae
pop
jecxz
shlb
imul
mov
out
test
and
and
clc
dec
add
cmp
cs
add
dec
add
mov
cmpsb
fdivrl
sub
inc
movsl
pop
aad
insb
mov
lods
shll
add
inc
and
xor
decb
and
add
sbb
jb
jno
pop
daa
pop
fldl
arpl
lahf
push
rolb
jb
shrl
cmp
adcb
shr
push
add
aaa
pop
mov
add
pop
xor
add
movsb
xor
sbb
inc
xor
and
cli
loopne
mov
cmpsl
cmp
push
gs
add
sbb
dec
daa
ret
cmp
shlb
inc
das
add
jmp
sub
add
lods
insb
sub
lret
push
and
int
aas
jge
psubb
pop
or
jb
dec
pop
out
cmpsl
adc
add
lock
jecxz
call
jl
jns
sbb
in
jo
inc
and
pop
rorb
cmp
and
jg
xchg
add
nop
rcl
cmpsl
add
or
fisubs
push
mov
add
js
add
daa
jge
sub
test
cltd
cmp
add
nop
add
push
add
rcll
add
addr16
mov
movsb
or
add
and
popa
pop
mov
xchg
clc
test
ja
mov
jnp
sub
or
add
xor
pop
jmp
rolb
movb
add
add
or
pop
and
push
push
sub
xchg
mov
cmpsl
mov
pop
and
add
outsl
dec
orb
adc
scas
sub
cli
aam
repz
mov
mov
add
push
add
pop
jge
add
jp
xchg
mov
and
dec
add
jns
add
cld
cmc
imul
fdivl
std
dec
leave
rolb
movb
inc
in
sbb
aas
pop
test
shrl
or
mov
incb
lds
cmp
rcrb
ljmp
add
addl
shlb
out
pop
inc
inc
add
xor
add
add
cmp
and
jbe
addb
leave
rolb
and
dec
mov
mov
add
fsubr
sbb
cld
xchg
dec
mov
add
pop
and
int
inc
sbb
into
enter
out
xor
adc
xchg
paddd
or
push
add
sbb
jbe
inc
add
shr
enter
mov
into
int3
push
or
ja
jno
js
jge
mov
sub
xor
adc
add
iret
les
imul
test
add
in
in
jmp
mov
jge
cmpsb
sbb
cmp
incb
inc
fcompl
mov
cmp
xchg
adc
pop
notb
adc
jge
cmp
dec
mov
loopne
int3
aam
notb
sbb
cmp
sub
cmp
inc
or
mov
jg
sarb
jecxz
push
stos
pusha
mov
lret
test
mov
fstpl
add
adcl
add
or
outsl
push
rorb
inc
fstpl
mov
dec
mov
test
mov
and
xor
repnz
xchg
dec
shlb
adc
push
or
pop
add
cmp
or
sbb
ret
add
jmp
sub
add
xlat
cmpb
jne
add
adc
je,pn
popf
add
jb
and
or
jmp
call
push
loop
in
push
mov
aam
mov
jne
pop
add
cmpsb
fistpll
or
clc
leave
or
adc
adc
cwtl
add
xor
mov
add
cltd
jle
sbb
or
les
xor
push
daa
pop
inc
int
imul
pop
dec
cld
je
cltd
ds
mov
xchg
add
nop
xor
fsubs
test
jmp
dec
jne
and
add
lahf
out
inc
add
cld
mov
movsl
add
cmpsl
jnp
or
mov
sub
pop
aaa
add
int
xor
sbb
mov
push
mov
push
cs
add
sub
lahf
aam
bound
jne
push
xchg
cmp
sub
cmp
jno
mov
xlat
adcl
pop
xchg
adc
mov
and
and
aas
jle
and
jmp
dec
dec
stos
add
je
or
leave
sbb
add
jmp
lods
cmp
pop
hlt
cmp
cmc
push
mov
dec
call
mov
mov
inc
arpl
xor
shlb
add
or
dec
adcl
add
lods
ret
jne
mov
out
xchg
push
cmp
je
dec
or
lock
repnz
leave
mov
inc
inc
ret
push
scas
out
add
iret
mov
das
mov
mov
pusha
idivb
xchg
cmp
pusha
mov
jl
in
push
dec
adc
inc
add
adc
mov
lcall
jnp
fistpll
or
add
adc
loopnew
cmp
inc
inc
push
cltd
shlb
mov
add
cmp
sbb
push
das
es
jnp
test
insl
cmp
add
inc
inc
adc
and
jne
lock
push
mov
lahf
sbb
in
cmc
jae
pop
ret
rolb
or
push
adc
out
push
sbb
subb
andb
jae
and
sbb
popl
adc
scas
pmaddwd
loopne
test
sti
sub
lods
push
lods
adc
or
pop
add
call
lret
xchg
test
add
jp
jo
mov
push
popa
jns
sbb
xorb
jne
pusha
inc
cmp
mov
add
dec
cmp
adc
add
fcompl
or
push
mov
xor
pop
add
sbb
add
sbb
lret
add
cmpl
ss
cmp
add
cmp
mov
xchg
mov
fdivl
sub
mov
adc
mov
lret
sti
and
inc
add
add
push
push
xlat
adc
add
jecxz
cmp
add
loope
push
sahf
insl
xchg
add
lods
adc
mov
push
push
notl
or
imul
or
adc
jecxz
into
push
mov
add
cmp
cmc
add
sub
mov
sub
add
sbb
cmp
add
or
arpl
sub
ds
push
sahf
push
loop
mov
addl
mov
xchg
pushf
roll
int
movsl
lret
fldl
scas
lahf
hlt
test
pop
mov
xlat
mov
leave
mov
xchg
or
in
lea
outsb
repnz
pusha
clc
test
les
das
stos
cmp
jecxz
xor
adcb
sub
add
je
add
fdiv
inc
add
cmp
add
test
bound
push
mov
fisttpl
or
xor
mov
push
jae
pusha
mov
mov
in
dec
daa
sbb
test
add
imull
push
add
jnp
cmpsb
pushf
dec
nop
add
push
rol
enter
add
mov
cmp
jl
cmp
pop
inc
sbb
add
adc
dec
ret
pop
pop
pusha
xchg
dec
adc
mov
jnp
mov
cmp
mov
loopne
lds
mov
push
mov
cld
cmp
xchg
call
xor
loopne
or
mov
pop
xchg
incl
sub
mov
sub
lds
mov
js
loope,pt
cmp
scas
fcompl
push
daa
push
fs
sbb
xor
jp
into
insb
cld
stos
rcr
jp
sti
std
add
mov
out
add
jns
insl
clc
mov
and
ss
push
dec
xchg
jp
pop
cmpsl
sahf
aad
mov
fs
add
adc
out
imul
jge
jmp
test
adc
push
dec
adc
hlt
sti
mov
jg
test
push
add
and
add
inc
sub
push
push
jnp
push
lods
jge
mov
adc
rcrb
sub
clc
cmp
iret
push
lods
fldenv
mov
jne
jle
sbb
push
sbb
dec
adc
pushl
add
xchg
adc
pusha
in
or
lods
adc
minps
and
add
ss
sbb
cmp
call
lea
and
cmpsb
sbb
movsl
cwtl
add
add
es
jmp
addb
and
add
jge
jl
sub
jns
jmp
add
push
fdivs
and
xor
add
cmp
add
je
cli
int3
lea
add
dec
lds
pop
or
add
sahf
mov
add
test
cmp
add
cbtw
mov
adc
add
shl
add
enter
pop
mov
popl
clc
lret
pop
mov
inc
jmp
mov
add
add
fnstcw
in
stc
test
popa
add
sbb
daa
fsubrs
cmp
lods
mov
stos
sub
stos
repz
sbb
test
dec
sahf
adc
inc
push
clc
push
add
pusha
sub
xlat
loopne
add
xor
dec
xor
add
xor
mov
out
cwtl
adc
cmpl
stc
imul
lret
lcall
xor
jmp
mov
add
push
mov
xor
sub
adc
inc
dec
cld
lods
or
test
dec
adc
push
push
sbb
or
add
rorb
add
add
aaa
jne
pop
push
cmp
push
push
out
and
subl
nop
cmp
stc
and
mov
mov
push
mov
arpl
xor
dec
leave
add
mov
test
add
movsb
mov
add
fnstsw
dec
sbb
mov
pushf
add
outsl
les
jno
bound
jl
loopne
sahf
aam
popf
add
fisubs
dec
nop
lods
lea
adc
neg
rcr
or
add
jbe
lods
mov
sub
add
lods
add
push
gs
shrb
add
cmp
or
adc
imul
imul
push
int
dec
fstps
insb
je
inc
push
xchg
jnp
push
or
pop
inc
or
mov
pop
in
sub
add
jmp
pop
mov
les
mov
sub
inc
add
mov
cmp
add
rol
add
inc
dec
add
lock
cmpl
cmp
stos
xchg
in
cwtl
xor
adc
jecxz
add
push
test
je
cmpsb
and
jg
or
fbstp
frstor
icebp
mov
pop
shrb
or
call
inc
dec
and
cmc
into
jae
ds
scas
add
dec
xchg
insb
push
out
add
cmc
sbb
ds
sub
cmpsl
xlat
xor
add
cmp
lock
dec
fiaddl
jbe
mov
in
in
add
push
and
or
jmp
aas
imul
sub
add
loop
movsb
jl
sbbb
mov
xchg
clc
add
inc
push
fsubl
adc
pusha
add
sarb
orb
shlb
loop
add
dec
lods
aad
pop
mov
add
push
add
inc
out
movb
jmp
push
cmpsl
sub
jmp
mov
cmpsb
add
inc
cld
mov
push
aas
and
out
jb
add
add
inc
adc
jle
add
hlt
cli
xchg
ret
mov
decl
xchg
xor
add
jae
gs
lcall
pop
xchg
lods
xor
cld
icebp
and
je
push
ds
out
add
sub
stc
inc
jo
lods
jo
add
or
add
ret
fcomps
je
add
fists
arpl
pop
jae
mov
or
mov
insl
je
add
jo
leave
and
lcall
add
inc
and
cs
mov
lods
lea
add
pushf
scas
add
sub
into
in
stc
pop
pop
push
test
and
repz
sbb
lock
add
dec
fdivs
push
inc
faddl
inc
add
enter
in
mov
popf
fisubrs
jle
gs
pop
and
push
lea
push
test
dec
cmp
mov
sbbb
add
mov
push
cmp
add
add
pop
mov
xor
scas
in
bsf
and
pop
stos
mov
add
dec
jo
xor
mov
push
mov
sahf
iret
xor
dec
xchg
das
xchg
filds
movsl
mov
cmp
loope
cmpsl
incb
cwtl
sbb
push
push
jne
xchg
pop
push
shlb
repnz
sub
cmpsb
or
cmp
push
or
xor
and
push
aam
push
lds
cs
inc
push
cmp
xor
xor
add
fs
or
pop
add
hlt
test
add
aas
xorb
popa
add
pop
and
arpl
push
loopne
mov
jo
push
stc
cs
mov
cwtl
int3
adc
mov
add
mov
cmp
data16
lock
fidivs
es
std
add
mov
fs
push
in
mov
cmpb
mov
pop
mov
in
fcoml
mov
sbb
pop
in
sbb
add
push
lds
xchg
add
fidivl
cmp
jo
filds
bound
daa
and
clc
in
in
push
sbb
pop
incb
stc
xor
icebp
mov
call
add
push
pop
or
xor
or
jg
or
lcall
mov
lea
add
xlat
mov
cwtl
add
out
xor
mov
push
inc
cmp
add
mov
vzeroupper
fs
pusha
add
xchg
adc
mov
push
out
es
adc
jp
mov
add
add
dec
jne
xor
cmp
ljmp
xchg
ret
inc
or
in
loopne
mov
cmp
cmpb
jp
jae
addr16
hlt
jne
mov
sbb
jge
or
add
xchg
xchg
ret
adcb
movsl
add
dec
cwtl
hlt
mov
orb
pusha
clc
add
and
mov
or
loopne
or
adc
lret
addb
out
jle
xchg
add
mov
icebp
add
sub
das
add
adc
pop
sbb
inc
add
loopne
int
jp
int
fmul
or
aaa
xchg
push
add
jo
mov
mov
adc
inc
pusha
lea
or
dec
and
imul
xchg
fs
clc
mov
je
sbb
cmpsb
add
arpl
jno
inc
add
push
adc
push
xlat
outsb
mov
inc
mov
movsl
daa
push
dec
mov
xchg
or
cmp
ljmp
mov
and
pop
pop
aaa
sub
push
nop
sahf
int3
gs
clc
mov
inc
or
je
rcrb
or
xchg
ret
pop
dec
js
add
jmp
lock
leave
sbb
movsl
sub
bound
inc
into
cmp
mov
inc
push
cmp
and
dec
stc
adc
add
push
pushf
fisttpl
or
add
jnp
xchg
mov
sbb
jmp
push
xor
inc
das
xor
push
addl
call
sub
add
add
addb
aad
dec
ret
lock
mov
add
popf
sub
notb
inc
adc
jp
movl
xor
fstps
cmp
adc
call
add
inc
xchg
stos
and
pop
add
dec
lcall
rcrb
cmp
jle
mov
push
xor
jo
dec
es
xlat
add
movsl
rorb
adc
mov
xchg
add
and
jle
push
gs
insb
add
add
jg
inc
leave
xor
add
mov
dec
mov
add
pop
lea
and
je
js
ficoms
dec
mov
andb
xlat
shlb
add
ror
pop
hlt
cmpsb
add
push
in
dec
push
dec
cld
testb
adc
loopne
add
jmp
enter
push
push
cmc
outsb
sbb
add
imul
jmpw
inc
test
bound
add
push
neg
mov
ret
pop
and
out
and
xorb
lret
adc
dec
ja
sbb
push
or
out
insb
out
add
sub
pusha
push
add
jmp
sbb
mov
inc
fisttps
or
adc
rolb
subb
cmpsl
add
xor
test
ror
shrb
insb
fnsave
call
pop
lods
sub
js
sbb
in
rcr
push
mov
aam
or
push
jp
insl
pop
xchg
mov
inc
mov
movsl
adc
inc
jae
xor
jnp
sub
xor
add
inc
scas
xchg
int3
sbb
add
ja
sti
dec
and
add
movsl
push
jb
add
xor
enter
mov
scas
enter
or
adc
add
dec
jo
add
push
ds
jge
adc
pop
in
or
push
mov
or
addl
imul
pop
les
mov
add
xor
fwait
mov
mov
inc
rolb
xor
int3
pop
or
sbb
or
dec
or
imul
stc
sub
insl
inc
in
jbe
mov
in
inc
xorb
add
cltd
inc
test
jl
pop
mov
mov
push
ja
pusha
push
mov
cmp
xorb
lock
lret
add
push
push
sub
mov
mov
mov
or
out
test
adc
add
addr16
or
sub
lock
imul
pusha
rolb
outsb
repnz
icebp
adc
sbb
pop
cmp
adcb
mov
sbb
sub
test
xchg
fadds
and
pop
jo
orb
loopne
add
add
or
out
dec
add
je
push
adc
or
cmp
fidivrs
hlt
cmp
out
and
sub
adc
jns
sbb
xor
leave
add
in
adc
jge
push
inc
add
xor
cmp
dec
mov
orl
xor
cs
jae
xorb
outsb
sub
gs
cmp
out
add
push
pop
rcr
adc
push
mov
test
lea
rcrl
push
cld
lock
push
jmp
dec
add
and
xor
add
or
inc
idivb
mov
mov
add
sbb
pop
adc
add
inc
clc
movb
mov
out
repnz
dec
dec
xchg
cmp
sub
sarl
ds
sbbb
xor
cmpsb
dec
dec
inc
xchg
add
cmpl
test
inc
adc
mov
and
jo
das
add
jmp
pmullw
test
test
ljmp
jge
mov
add
inc
xor
aad
adc
fistl
sti
sahf
mov
jb
inc
shl
xor
jmp
and
out
or
jp
add
mov
pop
mov
mov
xor
cmp
cmp
xor
out
add
push
dec
nop
add
and
push
sub
in
nop
add
sub
inc
xor
inc
add
jmp
repnz
add
and
jnp
push
ret
leave
add
sub
xchg
xor
push
and
inc
test
cmpl
dec
sub
or
pop
btsl
mov
push
jnp
mov
shlb
inc
push
push
cld
jg
testb
out
inc
lahf
add
popa
fs
xor
xorl
mov
lea
inc
mov
movsl
xchg
in
add
sub
clc
icebp
jp
add
shrl
and
iret
shl
pop
arpl
mov
sub
stos
add
or
aad
mov
add
add
add
add
and
hlt
dec
les
in
add
add
adc
mov
add
ja
pop
xchg
fistps
in
lods
push
lock
or
mov
cmc
ds
out
xchg
push
fists
dec
mov
sahf
leave
push
pop
jnp
inc
ja
jmp
mov
or
inc
aam
add
pop
jl
ds
int3
jae
rolb
in
sub
xchg
mov
enter
sarl
das
jge
push
push
mov
mov
lock
rsm
faddl
sbb
jmp
dec
pop
cli
jne
add
and
daa
add
aad
shll
loope
sub
clc
aad
jae
inc
add
dec
push
add
imul
mov
fsub
push
push
add
fsubrs
cwtl
nop
pop
pinsrw
xchg
shr
jge
stos
sub
push
stc
das
cs
add
pop
or
or
push
mov
xor
xor
dec
pop
mov
std
or
imul
adc
add
insl
orb
xchg
xor
mov
push
add
adc
pop
outsl
add
pop
nop
and
int3
xchg
pusha
or
inc
push
adc
bound
lock
call
subb
jmp
inc
arpl
sti
push
add
mov
mov
and
lods
scas
leave
push
xchg
sbb
push
and
add
cld
mov
sub
loopne
dec
push
xchg
pusha
int
scas
test
fucomi
cmp
das
cmp
in
xchg
dec
dec
lods
pop
divb
adcb
push
pop
and
jbe
test
imul
inc
ret
das
inc
add
inc
xchg
mov
add
add
popf
fmul
out
push
lock
and
ss
stc
inc
add
dec
pop
and
ds
xchg
nop
in
jnp
clc
push
inc
add
aad
inc
addl
jb
add
mov
mov
imul
pop
mov
fiadds
in
stos
add
lods
stos
cmp
mov
je
dec
push
in
inc
xchg
dec
aam
daa
add
sbb
cli
mov
mov
mov
mov
dec
mov
mov
xor
and
pop
add
xchg
mov
out
inc
jns
adc
xchg
sbb
test
jle
in
inc
lds
inc
jle
xchg
mov
icebp
mov
and
ja
add
cli
imull
in
add
sub
out
lcall
in
call
xor
mov
push
enter
andb
hlt
inc
push
sub
mov
sub
fimuls
cld
cwtl
push
mov
add
add
aam
and
leave
push
popa
popf
pop
sahf
mov
add
aaa
cmpsl
jae
jmp
faddp
scas
xchg
loopne
dec
inc
adc
sub
push
call
dec
mov
ret
call
ljmp
jl
xchg
adc
leave
add
addr16
nop
lret
mov
jmp
sub
push
pop
in
mov
jle
mov
cmc
add
pop
pusha
mov
push
call
dec
add
jmp
and
sub
xor
shlb
add
and
add
jmp
and
in
leave
mov
decb
add
adc
mov
or
adc
cmp
cmc
sbb
jb
das
lods
sbb
mov
shrl
jge
add
pop
mov
cmp
and
fidivs
and
lds
add
in
mov
add
jnp
lods
xor
test
inc
fcmovbe
sbb
add
rorb
xchg
add
adcl
add
cmp
ja
and
out
jae
inc
not
cmp
rcr
add
push
dec
data16
mov
jmp
cmpsb
and
jb
push
nop
icebp
add
push
cmpsl
and
jmp
add
ja
ror
mov
add
ret
mov
dec
add
dec
adc
push
jge
inc
pushf
nop
xchg
xor
add
mov
xchg
mov
add
inc
fsubr
mov
cwtl
addl
push
dec
jl
dec
fwait
mov
inc
in
insb
push
pop
inc
cmp
add
xor
mov
orb
push
mov
jmp
mov
sub
and
mov
xchg
sahf
imul
add
push
dec
and
iret
and
cli
test
pusha
push
ds
fs
cwtl
pop
add
dec
push
jmp
add
sub
sbb
rcl
add
jo
stc
clc
adc
add
cli
stc
jb
add
adc
pushf
vmovhps
mov
xchg
sar
push
sub
pusha
mov
add
ja
push
jae
add
mov
cmpsl
mov
or
sahf
push
inc
hlt
and
stc
adc
push
ja
or
add
add
add
jp
push
add
adc
add
clc
sarb
call
mov
pop
inc
xchg
push
icebp
sub
nop
inc
xchg
jbe
add
adc
test
add
jl
pop
sub
fiaddl
jne
add
and
add
arpl
add
call
add
mov
nopl
jno
and
mov
test
mov
insb
fs
mov
sub
mov
or
add
rep
push
xchg
fistps
int3
cmp
or
call
mov
mov
add
adc
adc
loopne
in
adc
dec
pusha
out
pushl
sbb
frstor
add
pop
and
stos
pop
xchg
xchg
dec
add
and
add
iret
dec
sbb
mov
int3
push
sbb
clc
orb
adc
cwtl
sub
jmp
movsb
add
hlt
enter
sub
jae
shlb
inc
imull
add
insb
movsb
xor
ljmp
add
stos
lea
pop
inc
lret
add
dec
out
adcb
add
daa
push
adc
jl
loopne
push
add
xlat
push
lea
inc
add
movsb
stos
xor
add
or
jmp
stos
sbb
out
and
idivb
cwtl
popa
add
lock
pop
lods
sub
push
mov
add
ret
cmpsb
add
xor
add
cwtl
dec
test
add
pop
jns
pop
mov
mov
jnp
addb
cwtl
call
add
lahf
loopne
adc
pop
ret
push
sub
add
sbb
ljmp
dec
add
xchg
mov
call
mov
add
out
mov
cmp
mov
jnp
loopne
xchg
or
push
dec
inc
jmp
cltd
xchg
sbb
inc
dec
pop
cmp
jne
lcall
xchg
mov
add
adc
push
and
int3
add
mov
add
clc
xchg
ljmp
mov
mov
repnz
leave
rolb
xchg
pop
mov
cmp
push
fmul
jg
sub
pop
jbe
add
pop
rcr
fdivs
dec
inc
or
dec
jns
add
fcmove
xchg
dec
shl
or
shl
mov
pop
xchg
cmpsl
add
insl
add
mov
dec
popl
xor
int3
lock
cmp
pop
xorl
pop
out
out
lret
test
add
jns
mov
sbb
hlt
je
sub
daa
jae
push
out
mov
push
dec
cmc
mov
jg
fsubrs
lahf
add
sub
aam
add
in
or
push
mov
mov
add
xchg
mov
iret
test
shr
lea
sbb
sbb
xor
lock
push
out
pop
xchg
cmpl
enter
push
push
mov
add
call
sbb
movsl
hlt
rcll
or
imul
andb
push
movsl
js
add
sbb
cld
adc
adc
rcl
jge
push
leave
scas
clc
xchg
rolb
leave
shrl
int3
add
and
rclb
push
push
add
pop
inc
roll
inc
fidivl
or
or
repnz
cmp
xor
pop
add
sbb
xchg
addb
cmpsb
jno
add
pop
clc
les
xor
mov
add
dec
jne
xchg
out
push
sete
or
xchg
fsubl
pop
push
out
jmp
pcmpeqb
add
clc
pop
mov
add
adc
js
add
pop
dec
cld
out
test
add
cwtl
movsb
andb
push
push
push
add
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
test
pmulhw
roll
jns
pusha
fnstcw
mov
push
data16
push
jno
add
xchg
repz
mov
inc
push
push
adc
repz
add
addr16
and
jle
dec
adc
add
cwtl
jae
scas
insb
sub
pop
adc
clc
popa
out
xchg
sbb
xor
dec
cwtl
add
ret
pop
xchg
jl
jl
add
inc
push
outsl
push
dec
jne
add
popa
and
push
add
inc
loopne
out
pop
add
test
pop
cmpsb
out
imul
aad
clc
ficoml
sub
sbb
leave
jne
cwtl
xlat
clc
add
and
jb
mov
sbb
push
nop
jge
ret
aas
int3
arpl
insb
lahf
and
je
sbb
nop
aam
shlb
fsubs
data16
add
push
cli
push
mov
cmp
add
scas
add
dec
jo
cmp
adc
push
cli
lock
pop
add
loop
cmp
pushf
pop
add
fisubrl
sbb
or
pop
mov
cmp
je
or
push
add
cli
stos
and
aam
jp
sbb
jo
inc
in
jecxz
loope
add
jg
pop
test
cmp
incb
add
mov
mov
ficoml
xchg
adc
push
pop
xor
mov
sti
js
add
add
out
mov
cli
xchg
xor
cmp
subb
add
jmp
add
stos
pop
idivb
add
dec
test
mov
aas
jo
dec
sbb
imul
adc
and
psllw
mov
dec
pop
jecxz
adc
cs
add
xlat
lcall
or
xchg
cmpb
push
inc
xchg
flds
in
cmp
lea
daa
xchg
fdivr
or
lcall
add
aas
jecxz
imul
add
dec
xchg
and
cwtl
add
adc
bound
mov
inc
std
cmp
je
pop
testl
xchg
aaa
and
aas
push
inc
ds
cmp
pop
mov
mov
or
or
adc
push
mov
in
lock
loop
add
aam
cmp
adc
in
mov
cld
sub
jp
pop
hlt
pop
dec
add
xor
jmp
movsb
jge
out
dec
inc
pop
add
push
cmpsl
jmp
pop
sub
pop
cmp
andl
push
enter
dec
inc
addb
icebp
mov
add
fsubr
adc
jnp
inc
enter
pop
sub
add
xchg
loope
test
inc
fistps
cmpsl
pop
add
push
cld
sbb
aas
xor
add
les
rcrl
xchg
xchg
out
jo
mov
in
das
test
pop
stc
jmp
jo
cmp
rcrl
pop
xchg
subb
fs
add
hlt
clc
jnp
mov
rcr
jle
add
stos
adc
mov
enter
leave
cli
add
jb
mov
mov
jno
sub
arpl
dec
add
or
mov
add
pusha
xlat
stc
jl
dec
mov
out
add
cli
cmp
add
sbbl
and
movsl
xchg
fprem
ds
lahf
inc
aad
jae
push
fs
push
fsub
and
sbb
insb
cmp
add
mov
sub
xor
cld
cli
popf
je
js
les
pusha
xor
add
ja
mov
sub
push
mov
mov
jl
les
es
cmp
enter
lahf
es
add
inc
pop
imul
shl
shlb
or
pop
push
add
inc
lock
mov
pushf
add
xor
test
repz
add
add
push
add
push
lret
daa
pop
in
add
push
cmp
jbe
cmp
lcall
add
dec
loopne
inc
cmpsl
loope
dec
cmp
cmp
addr16
mov
push
iret
fcoms
cmpsb
popa
adc
pop
loopne
cld
push
in
inc
cmpsb
mov
out
jg
sbb
mov
cmp
jl
mov
jg
add
es
aam
dec
sti
cld
movsl
or
mov
inc
rorb
aas
add
les
and
add
loop
sbb
mov
imul
push
sbb
lahf
rcrl
aam
shrl
loop
imul
ror
in
and
and
out
add
repnz
mov
mov
mov
js
rorb
push
add
imul
add
in
mov
sarb
cs
dec
pop
jno
push
mov
loop
out
loope
in
lahf
pusha
repnz
add
sbb
and
cld
cmp
ficomps
je
jno
push
inc
inc
adc
filds
jb
cmp
mov
popf
add
dec
mov
add
ljmp
sbb
mov
or
push
xchg
sub
frstpm(287
sub
inc
add
jecxz
nop
add
repz
mov
adc
jge
add
push
lods
pop
pop
addb
cld
scas
xchg
and
cmpsb
sbb
fmull
enter
push
cmp
loope
adc
out
add
test
loop
xor
clc
fadds
lahf
or
sbbb
add
adc
add
lea
jnp
inc
xor
xchg
outsb
xchg
push
rcrb
call
daa
add
fcoml
mov
in
add
xchg
or
jno
xchg
adc
inc
push
pop
and
test
or
jmp
mov
pop
mov
adc
push
repnz
add
imul
fstl
mov
sbb
mov
loopne
push
test
add
mov
je
pop
nop
mov
sub
addl
mov
push
les
addb
sbb
inc
pushf
or
fiadds
outsb
dec
jle
popf
pusha
aad
das
or
jnp
flds
andl
add
adc
xor
sbb
sub
cmp
aam
cwtl
sbb
xchg
jg
add
xchg
es
in
cmp
mov
xchg
xchg
sub
mov
dec
jmp
flds
sub
push
lds
decl
hlt
lahf
imul
cmp
dec
add
fdivl
add
sub
lahf
pop
mov
aam
fildll
jmp
mov
add
inc
inc
push
sbb
xlat
js
xchg
add
pop
xor
and
add
clc
sub
add
cld
pop
aam
push
push
adc
dec
adc
add
xchg
mov
int3
push
inc
add
pop
add
dec
add
in
sub
out
jg
ds
imul
and
lods
jne
sub
xor
or
rclb
mov
push
stos
and
add
lret
ss
jp
push
sub
add
inc
xorb
add
pop
cmp
pop
mov
adc
mov
add
mov
dec
add
jne
icebp
add
ss
add
cmpsl
testl
sub
hlt
add
pop
lds
mov
lock
push
push
mov
xchg
add
cmp
inc
dec
enter
and
xchg
test
add
out
push
int
mov
sub
add
xor
pop
dec
push
call
add
sbb
jmp
xlat
jb
lods
sti
arpl
push
jae
mov
sub
sub
add
jecxz
rorl
add
sub
pop
add
cmp
cmp
rclb
dec
add
mov
push
je
or
pop
adc
cli
cld
xor
mov
adc
sub
pusha
rorb
lock
sbb
cli
lds
jmp
mov
or
decl
rorb
cld
mov
ja
add
mov
adc
js
mov
xchg
xchg
xor
inc
mov
shlb
mov
add
fildll
jecxz
sub
lock
lock
mov
test
dec
push
xchg
pop
test
pop
out
add
pop
out
jl
pop
scas
lret
sti
fistl
push
adc
stos
stc
mov
or
jmp
pop
push
mov
dec
adc
sbb
xchg
lcall
add
pop
fsub
add
inc
scas
adc
mov
jnp
cld
leave
shlb
ja
inc
dec
adc
push
lods
pusha
and
or
gs
lea
jecxz
cmp
loopne
cld
dec
add
ss
sbb
popf
push
out
add
lods
loopne
repz
add
xchg
out
clc
cmp
loop
mov
xchg
daa
push
frndint
or
inc
mov
insl
jnp
jno
mov
push
daa
cmp
mov
loope
jle
dec
jbe
xor
cltd
jmp
fidivrs
jne
lds
insb
push
pop
pop
inc
pop
stos
and
sub
fwait
out
enter
aas
jne
lahf
aad
sbbb
enter
les
addb
add
inc
dec
jne
sahf
rcll
rclb
push
add
iret
inc
cmpsl
sbb
cmp
int
cmp
push
lea
or
mov
movsb
add
jo
add
mov
mov
int3
sbb
adc
and
out
add
add
push
add
jnp
fs
adc
add
and
leave
pusha
fcmovne
jae
add
loop
mov
mov
or
push
dec
in
mov
dec
add
mov
pminub
notl
mov
subb
sub
xor
or
or
lods
testl
cmpsb
cld
mov
mov
mov
dec
addr16
adc
stos
lods
adc
pop
mov
cmp
push
inc
adc
mov
xor
mov
add
jle
popl
and
sub
sub
mov
pop
cwtl
mov
fldl
cmpsl
jp
sub
xlat
dec
in
adc
mov
popf
jno
imul
push
adc
add
mov
mov
aaa
test
lret
mov
and
dec
push
adc
inc
mov
mov
pop
inc
test
jge
jb
inc
test
mov
mov
cmp
sub
lret
popa
mov
inc
or
insl
mov
addb
ret
inc
push
mov
mov
pusha
mov
ljmp
insl
adc
mov
xchg
pushf
add
xor
push
add
and
mov
ret
add
fdivrp
xor
add
xchg
adc
movb
push
data16
jge
sub
aaa
je
mov
clc
adc
nop
add
mov
mov
sbb
push
add
or
sbb
sub
add
dec
or
cld
jo
sub
xchg
jns
add
adc
fmuls
aad
add
pop
bound
push
mov
rcrl
push
sbb
sub
aaa
lea
add
mov
or
or
jecxz
mov
in
add
out
jo
push
stos
fldenv
in
rclb
push
je
mov
push
jae
je
add
adc
sub
test
lods
cmp
and
les
or
rcl
repnz
adc
inc
cltd
cmpb
mov
add
test
and
add
ljmp
add
les
add
xor
push
sub
popf
sbb
clc
add
imul
add
cmp
jp
pop
adc
cmp
inc
add
mov
cwtl
pop
add
loop
scas
push
xchg
mov
push
call
pop
or
rolb
cmp
rcll
jp
pop
pop
test
pop
push
sub
push
jmp
push
jl
mov
cmp
mov
call
ljmp
cmp
add
or
add
fs
jecxz
fsubr
push
add
das
pop
ret
xchg
inc
roll
or
mov
xor
pop
cli
shll
xor
cli
imul
pop
les
cmp
push
adcb
dec
dec
aaa
add
inc
jne
add
add
test
pop
xor
cwtl
jnp
jno
add
lcall
push
or
inc
inc
or
dec
sbb
or
adc
inc
add
xor
jnp
pushf
add
add
je
mov
mov
add
mov
xchg
roll
ljmp
lahf
mov
andl
pop
sub
lock
daa
jnp
add
mov
ja
adc
and
ds
ljmp
js
mov
xor
push
push
jl
int
pusha
push
adc
pop
mov
inc
stos
mov
mov
scas
mov
inc
jns
inc
dec
jg
notb
add
push
pop
lcall
pop
adc
fcompl
mov
mov
mov
add
add
add
push
addb
inc
add
push
sbb
repz
or
push
daa
add
lds
adc
lret
lea
push
fsubrl
les
idivl
imul
and
incl
cltd
dec
andl
add
pop
sbb
add
push
mov
scas
add
cmp
mull
jno
push
adc
in
sub
and
popf
add
jg
mov
push
ja
popf
adc
sbb
add
ret
push
pop
pop
adc
test
aas
pop
jecxz
sahf
push
mov
lods
aam
xlat
add
add
or
enter
loop
pop
mov
ficomps
inc
mov
inc
sub
add
fmuls
adc
inc
add
jge
dec
add
test
daa
and
sarl
add
adc
cmc
clc
adc
xor
cmpsl
scas
push
mov
push
dec
subb
sbb
add
test
pop
adc
aam
and
mov
mov
rclb
pop
mov
xlat
shlb
dec
stos
jg
test
mov
in
ja
add
pusha
das
pop
sbb
dec
and
adc
add
rcll
or
sbb
ljmp
add
and
adc
sar
sbb
std
pop
xorb
testl
xor
ret
syscall
mov
fildl
xor
into
push
add
push
adc
fwait
sbb
ljmp
and
sbb
add
pop
cltd
jg
aam
jb
insb
or
cli
cs
or
push
add
sti
ret
add
jns
jmp
add
out
and
mov
add
call
lcall
or
add
push
push
xorb
rcl
xor
push
and
sub
addb
addr16
lock
stc
repz
adc
cmc
pop
hlt
add
test
push
mov
cmpb
xchg
mov
mov
push
sar
movlps
icebp
pop
incl
sbb
add
or
add
sarb
xorb
mov
cld
add
mov
pop
ror
pop
add
cmc
xchg
pop
neg
add
mov
cmpsl
add
jecxz
divb
jo
sbb
loopne
sub
mov
stos
pop
add
mov
iret
cmp
and
adc
cmp
orb
rcrb
mov
std
push
jge
or
sbb
in
jle
cmp
pushf
dec
inc
es
add
mov
mov
adc
dec
mov
jb
cmp
push
adc
frstor
addr16
shll
push
push
add
mov
and
sub
lret
add
repnz
decb
add
xchg
lds
inc
add
mov
cwtl
fldl
xor
mov
lock
cmp
xor
iret
pop
addl
pop
xor
stc
cmp
or
sub
stos
sub
sbb
lea
ret
addl
add
lret
add
shl
and
incb
push
push
or
ds
jb
add
lea
dec
sub
xchg
add
add
rol
aam
push
sbbb
lcall
pop
js
popa
movsb
cmp
add
mov
xchg
add
pop
repz
pushf
subl
and
sub
xor
dec
add
xchg
add
cmpsl
out
add
pusha
adc
cmp
add
cmc
lea
add
addr16
or
add
sbb
adc
jmp
pusha
ret
js
dec
decb
add
mov
add
les
push
xor
push
add
add
sbb
sub
dec
push
shlb
jbe
mov
pushf
adc
sub
icebp
xor
paddsb
cwtl
inc
mov
add
mov
mov
cmp
or
add
rcrb
arpl
add
xor
add
stos
pop
push
cmp
pusha
addb
or
mov
daa
add
addr16
xor
mov
add
pop
and
mov
jl
ret
dec
andb
or
mov
push
fidivrl
add
push
sub
add
dec
or
or
pop
xchg
clc
mov
add
push
add
push
add
dec
fildl
pminsw
cmpb
add
sub
inc
push
dec
adc
or
and
xor
and
pop
ret
push
frstor
xor
jle
fcom
add
inc
xor
mov
shrl
add
xor
sbb
shrb
add
xchg
ja
and
add
dec
push
adc
lret
mov
adc
lods
xchg
aam
adc
add
adcl
add
cmp
add
xlat
push
xor
pop
add
daa
sbb
pop
xor
or
cmp
jecxz
sbb
dec
repz
or
loope
cmpsb
add
push
mov
repnz
add
cmpb
mov
out
ds
mov
add
xchg
add
or
mov
pop
push
lahf
xor
adc
in
mov
cs
xchg
sbb
mov
data16
dec
pop
sbb
and
or
out
loop
sbb
add
adc
mov
add
jo
add
cltd
or
add
cmp
add
and
jb
cmp
push
xor
enter
pop
inc
repz
or
loop
sbb
or
movsb
loopne
push
dec
cwtl
pop
jb
adc
out
jmp
dec
repnz
adc
inc
add
xchg
cli
mov
out
int3
das
lds
xchg
call
inc
and
out
cmpsb
in
daa
pusha
xor
jp
pop
or
mov
pop
dec
dec
jno
iret
mov
pop
fs
movsl
jnp
add
test
fcmovne
mov
and
add
movsl
lea
xchg
pop
xor
add
test
fiaddl
or
inc
lcall
sbb
in
jle
cs
sbb
ds
cltd
mov
aam
add
push
sub
pop
and
jb
add
pop
pop
add
mov
lcall
mov
pop
cmpl
cwtl
or
ljmp
pop
mov
add
or
out
inc
mov
mov
push
fwait
pop
xor
dec
adc
iret
or
sbb
add
inc
popf
xchg
push
push
adc
add
inc
add
jo
and
jno
add
sub
inc
add
ljmp
stos
adc
mov
mov
xlat
pop
test
add
push
fbld
jge
std
mov
sub
push
testb
push
cli
push
imul
sub
gs
ds
add
rcrb
mov
aas
mov
lcall
xor
and
sbb
mov
enter
cs
fdivrl
mov
or
outsl
les
nop
add
fisubrl
adc
repz
sbb
shll
mov
add
push
add
daa
clc
pop
xor
xchg
add
ret
pop
inc
fisttpl
dec
add
mov
sub
sbb
add
pop
test
pop
mov
fwait
mov
rcrb
mov
add
loop
xchg
je
inc
in
add
pop
mov
sub
mov
sbb
movsl
test
xor
sbb
pop
push
and
add
mov
rclb
aad
mov
xchg
lods
faddl
pop
ljmp
add
sbb
and
dec
add
ja
sub
xor
adc
and
adc
add
xchg
dec
inc
test
xor
cs
jle
push
inc
pop
xor
xchg
ljmp
mov
pop
dec
packsswb
push
loopne
xchg
mov
add
mov
ret
test
mov
cmp
cmc
jmp
pusha
push
test
add
aam
add
mov
mov
mov
and
push
jge
jl
popa
or
add
dec
push
sti
add
add
sbb
dec
in
repnz
pop
rcrb
pop
rolb
adc
into
or
out
xor
add
daa
insl
dec
mov
lds
push
dec
addr16
add
in
sbb
cmp
pop
add
or
sahf
push
stos
sbb
lret
ret
adc
aad
ds
sub
add
adc
cs
int3
mov
inc
jmp
add
add
xor
stc
pop
arpl
or
or
shr
mov
ja
push
add
dec
fsubrs
mov
sbb
ror
sbb
push
fs
mov
call
push
pop
add
pop
push
sub
js
inc
cmc
adc
clc
test
or
xor
out
lahf
adcb
jmp
jo
mov
rclb
jg
add
ja
out
add
sbb
mov
xchg
add
jmp
adc
sbb
or
mov
or
add
cld
dec
push
dec
add
jbe
lcall
lea
in
subb
daa
leave
andl
es
add
outsb
and
out
mov
pop
mov
xchg
add
shl
sbb
adc
hlt
in
fstpl
pop
adc
int3
push
jle
jnp
test
cmp
inc
pop
rolb
out
jg
add
push
xor
mov
add
adc
aad
xor
divb
rorb
push
subb
mov
hlt
popl
mov
test
cld
cs
stos
cmp
add
shll
pusha
mov
or
in
rolb
sub
loopne
movsb
or
xlat
nop
sub
inc
mov
pop
lock
adc
or
pop
rcrb
xlat
add
incb
icebp
push
jecxz
and
jnp
add
std
jmp
hlt
in
add
adc
add
lea
and
lock
fsts
inc
fs
or
iret
push
add
push
rcr
gs
mov
leave
add
fistpll
pop
add
lock
add
xchg
pop
clc
cmp
dec
xchg
test
mov
add
popa
inc
repnz
iret
call
sub
inc
shlb
int3
loopne
add
out
pusha
adc
int3
pop
cmpsb
add
mov
pop
push
add
mov
push
pop
add
ud2
leave
sbb
cmp
mov
jne
int
mov
mov
mov
adc
add
cmp
or
push
repz
pop
fsubr
loopne
aam
lcall
sub
movsb
push
dec
adc
mov
les
leave
repnz
ja
add
lret
sub
xor
cli
jne
mov
or
push
popl
loopne
dec
rorb
add
ds
and
ret
testl
cltd
bswap
les
mov
add
std
add
sbb
add
cld
add
mov
leave
enter
pop
xchg
and
add
add
das
inc
mov
mov
mov
adc
add
jbe
xor
dec
loop
xchg
or
push
sbb
pop
js
loopne
mov
clc
push
cwtl
or
sbb
add
sbb
divl
imul
movsb
orb
mov
xchg
push
jg
lock
in
add
imul
adc
cmpsl
add
push
mov
rolb
lea
push
stos
sub
push
and
movhps
rclb
add
xchg
add
scas
push
mov
jmp
dec
sub
mov
or
add
xor
jnp
sbb
out
sbb
in
clc
cmpsb
and
pusha
inc
cli
bound
dec
add
xor
or
je
cmp
aaa
add
cmpb
jne
inc
add
dec
loopne
jmp
or
mov
push
jo,pt
add
cmc
jne
add
loopne
sbbl
pop
add
out
add
pop
pop
push
adc
add
dec
xor
mov
test
repnz
or
cmp
dec
xorb
pop
addb
jne
push
xor
push
pusha
sub
pop
xlat
lea
adc
int3
pushl
add
push
mov
add
pop
mov
pop
xor
push
push
das
jmp
add
mov
mov
fists
adc
jmp
mov
add
xorl
stos
sbb
not
add
add
data16
jg
push
dec
add
mov
cmp
cmp
dec
and
mov
lods
push
push
mov
adc
fcmovbe
mov
enter
pop
call
gs
jae
pop
add
repnz
add
rol
add
pop
adc
out
fnstenv
xchg
in
int
mov
lds
or
sub
gs
push
inc
adc
mov
ud1
pusha
sub
loop
push
push
xor
ret
and
leave
xlat
sub
pop
sbb
jmp
es
roll
cmp
les
lret
pop
jl
je
add
cs
in
shl
pop
mov
cmp
xor
ja
add
mov
sbb
xor
jmp
lret
dec
cmpsl
push
out
adc
pop
cld
inc
jb
movsl
add
aam
call
or
pop
jns
adc
int3
movsl
push
add
xorb
popf
push
mov
add
test
sbb
ret
dec
vmovd
add
in
sub
push
cmpb
imul
cs
addr16
not
orb
inc
movsb
sbb
add
jecxz
movsl
and
push
xor
sub
out
ja
lret
testl
int
addl
adc
ret
loop
xchg
hlt
pop
pop
sahf
cld
adc
add
push
inc
cmp
add
test
cmp
inc
enter
stos
repz
xchg
pusha
daa
shlb
pop
in
pushf
add
or
and
pop
jb
cmp
cmp
subb
xorl
subl
sbb
add
push
and
sarb
cs
sldt
sub
ds
lahf
int3
and
sbbb
adc
popl
ret
inc
icebp
push
repnz
or
push
enter
in
iret
and
and
sub
roll
fisttps
jle
repz
push
add
pop
sar
aaa
add
and
icebp
faddl
xlat
xchg
mov
push
dec
push
push
xchg
data16
sbb
sub
cmp
mov
or
add
rclb
push
xchg
lods
insl
sbb
ficoms
add
mov
and
xor
adc
clc
popa
mov
out
loop
mov
jp
mov
inc
xorl
add
or
lea
mov
add
mov
push
mov
push
inc
mov
mov
add
hlt
and
out
jb
addr16
cli
orb
inc
xchg
cmc
adc
leave
pop
enter
dec
add
push
faddl
mov
sbbb
xchg
aad
in
fistpll
cmp
test
push
call
es
outsl
xchg
add
push
mov
out
bound
xchg
adc
aas
push
jne
xchg
cwtl
out
pop
adc
add
imul
pusha
push
popl
add
repnz
sbb
pop
fiaddl
lock
add
scas
out
mov
and
movsl
push
fs
adc
repnz
jbe
add
add
pop
ret
pop
iret
dec
dec
inc
push
mov
xchg
je
js
or
sub
xlat
jle
jg
add
sbb
roll
sbbl
adc
jbe
cmpb
popa
cwtl
cmp
mov
add
mov
test
add
pop
nop
mov
push
loope
icebp
shr
add
push
cli
mov
add
fisttpl
faddl
ret
sub
testb
add
mov
ret
adc
testb
pop
lds
flds
fstpl
testl
fiadds
xchg
and
aas
add
push
add
ja
mov
add
inc
xor
pop
clc
adc
loopne
lock
repz
fadds
adc
xlat
xchg
popa
enter
cmpsl
add
cmp
sbb
loopne
adc
inc
testl
inc
rolb
jnp
inc
xor
add
adc
decl
lock
add
hlt
daa
and
flds
add
dec
test
add
popf
outsl
adc
sbb
cmp
mov
mov
subl
data16
sub
jns
push
mov
cmp
sahf
shl
dec
xchg
fcos
call
and
insl
loopne
inc
hlt
push
pop
cmp
mov
add
pop
lahf
mov
adc
pop
add
mov
shrb
ja
iret
dec
add
cmp
in
sub
fiaddl
nop
jp
popa
sbb
add
rorb
xorl
roll
mov
add
lock
rol
aas
xchg
push
add
add
pop
out
test
add
scas
sub
leave
insb
inc
mov
shl
out
pop
pop
jmp
push
lods
add
jecxz
pushf
inc
cmp
mov
jmp
aam
test
jo
or
or
pop
push
or
xor
repnz
push
pop
in
xor
inc
in
pop
or
pop
sub
add
pushl
mov
cmp
xchg
imull
daa
add
ja
inc
add
std
call
add
inc
mov
pushf
fucomip
sub
add
mov
mov
push
xchg
aam
push
pusha
shlb
roll
jne
shrl
jl
xor
stc
and
xor
add
jge
pop
add
pop
loopne
sbb
xorb
add
pop
imul
ret
inc
mov
inc
mov
stc
in
add
cmp
test
ret
bnd
jecxz
pop
mov
xchg
fstl
and
ret
sahf
mov
add
inc
popf
movsb
into
xchg
leave
dec
and
xchg
outsb
pop
inc
cmp
jle
add
dec
lods
sub
test
sub
ror
inc
repz
fists
xchg
xchg
mov
add
das
lock
add
dec
mov
add
test
add
lds
sbb
xchg
mov
rcr
push
fwait
data16
mov
stos
dec
pusha
sub
add
out
mov
jne
lcall
jno
push
jbe
nop
jne
orb
clc
outsb
loopne
ja
subl
and
fcoms
lock
mov
mov
adc
push
add
push
adc
push
lea
add
add
out
dec
add
inc
loope
pop
mov
loopne
xchg
mov
pop
add
mov
addl
sub
dec
cmp
andb
push
pop
xor
pushf
and
dec
mov
or
inc
dec
jge
dec
mov
or
push
push
cmp
lcall
popa
je
stc
add
cwtl
clc
xchg
sbb
xchg
out
mov
popa
sub
mov
dec
pop
les
jb
outsb
mov
repz
test
add
pop
sub
pusha
add
sub
mov
jecxz
push
arpl
add
adc
test
dec
mov
dec
dec
imul
xchg
pop
sarl
incl
ret
mov
and
fadds
jo
ljmp
in
dec
lcall
nop
loopne
aam
ficoms
dec
adc
mov
adc
cs
in
sbb
into
mov
xchg
inc
adc
or
cmp
fdivl
add
and
test
add
rorl
mov
push
enter
out
dec
lods
mov
nop
xchg
push
jb
loop
jnp
in
shrb
in
mov
lea
add
mov
adc
cli
lret
add
pop
mov
lock
das
push
push
add
cmpsb
int3
mov
push
push
push
pop
adc
and
cmp
jb
pop
add
mov
fwait
mov
in
pop
jbe
addb
add
push
lea
add
adc
nop
lods
add
cs
and
add
push
jmp
js
and
mov
add
pop
cmp
sub
es
inc
insl
mov
add
adc
repnz
sarb
js
cld
aaa
orb
sbb
mov
jl
or
lea
cmp
sbb
lock
call
adc
in
stos
addl
rclb
pop
xor
push
fwait
jl
sub
sbb
jg
rolb
push
insb
loop
add
lea
pop
addb
xor
add
sbb
imul
jp
push
int
inc
add
inc
xchg
mov
rcl
lcall
ljmp
jp
sarb
rorb
cmp
xchg
icebp
sarb
mov
rolb
call
xor
fdivrp
mov
aas
add
or
popa
or
fs
dec
call
icebp
add
sbb
mov
pop
fnsave
mov
add
dec
jge
scas
xchg
sub
dec
sbb
inc
faddl
lret
popa
and
mov
lods
push
stos
or
add
and
xchg
adc
jns
or
mov
add
add
add
push
pusha
popa
xchg
pop
jbe
add
pushf
push
pop
jge
sub
lea
rclb
rolb
jg
sbb
mov
aad
bound
test
jmp
mov
jecxz
addr16
adc
fsubr
xchg
icebp
lea
jp
imul
movl
add
roll
roll
ret
stos
das
rolb
pop
aam
inc
and
dec
and
add
xor
cwtl
loop
aad
daa
mov
outsl
ja
mov
aaa
mov
hlt
push
in
mov
imul
add
add
sub
push
fistpll
repnz
testb
cmp
dec
inc
add
push
mov
mov
or
cmp
je
inc
leave
cs
xchg
pop
pusha
jg
test
jbe
add
xchg
lahf
or
outsb
push
dec
cli
test
add
aaa
pusha
sbb
add
test
add
add
sub
ss
xchg
in
out
mov
fidivrl
add
push
mov
cmp
xchg
add
mov
or
push
push
mov
cmpsl
pop
xchg
xchg
sub
dec
adc
aaa
movsl
pop
push
xor
cltd
dec
adc
fwait
dec
or
adc
add
xor
sub
movsl
push
push
icebp
add
cmpsl
outsb
or
cmp
add
cwtl
popf
add
push
loope
add
dec
push
jg
push
xchg
jns
jmp
inc
test
add
sbb
add
push
sbb
xor
add
movmskps
add
icebp
das
mov
gs
mov
pop
dec
add
inc
stc
fidivrl
pop
lahf
adc
nop
add
icebp
mov
add
or
add
negl
pop
push
jl
sarb
adc
xchg
inc
sub
cmp
lret
sahf
xchg
mov
adc
mov
inc
adc
add
sub
sub
pusha
dec
or
mov
ret
enter
pop
add
or
xor
shll
cli
add
push
ja
add
cmp
add
add
fiaddl
in
stc
cld
outsl
xor
adc
pop
test
xchg
mov
rorb
push
lret
inc
push
andb
je
or
ja
xorb
or
out
dec
adc
push
in
rcll
nop
loopne
popa
or
push
add
and
aad
jbe
push
add
sub
xlat
xor
repnz
dec
add
cmp
and
add
ficoml
aad
mov
and
test
pop
mov
add
hlt
fwait
push
dec
pop
add
pop
mov
add
jl
addb
sti
mov
sbb
cmp
fldt
dec
push
jecxz
ljmp
xchg
jo
adc
add
xor
mov
negb
dec
add
iret
mov
adc
out
add
cmp
xor
cmp
lods
loope
add
cltd
aad
push
pop
lds
inc
push
adc
cmp
xor
rorb
enter
cmp
sbb
push
leave
mov
dec
jmp
shrl
sub
mov
mov
jge
cmp
dec
std
addl
or
adc
loopne
adc
pandn
daa
mov
adc
rclb
repnz
xchg
or
add
and
pslld
and
jecxz
push
inc
sbb
punpckhbw
xchg
rcrl
cmp
neg
movsl
mov
mov
jmp
pop
lea
sbb
outsb
imul
or
mov
clc
lock
ror
add
mov
enter
filds
add
add
ret
cli
mov
pop
pop
push
pop
shlb
mov
bound
push
add
jmp
ds
dec
sbbb
aas
adc
add
push
lock
cmp
jmp
pop
pop
jns,pn
jl
add
or
scas
dec
inc
iret
push
add
and
push
adc
adc
mov
cld
adc
cwtl
sub
roll
lret
xlat
mov
repz
adc
mov
pop
pusha
cmp
je
add
add
and
sub
roll
pop
xlat
mov
fwait
jne
pusha
adcb
and
addb
cli
mov
jecxz
scas
inc
jge
or
mov
add
imul
ljmp
js
and
dec
unpcklps
subb
out
or
add
cmp
add
enter
xor
movsl
data16
mov
mov
out
jmp
repnz
jae
sbb
xchg
add
ret
add
dec
inc
push
pop
ret
mov
stc
add
arpl
sahf
mov
xor
repnz
and
dec
sti
lods
jp
xchg
je
popa
adc
lcall
add
clc
nop
add
mov
mov
or
lea
add
adcl
xchg
aad
jno
add
out
xor
sub
int3
add
or
xlat
xor
pop
fadds
nop
inc
movsl
inc
out
jmp
or
pop
push
dec
adc
cmp
inc
mov
int3
fcomip
psubd
and
add
or
adc
shlb
add
aaa
push
jae
cmpb
add
or
push
jl
call
push
mov
repnz
mov
add
add
and
test
stos
xchg
push
mov
sbb
push
add
add
inc
adcb
cwtl
popf
add
pxor
dec
jmp
shll
jl
add
mov
xor
jg
add
mov
push
rolb
popf
mov
add
and
pop
sub
and
cmp
clc
xorb
jl
xor
add
test
and
mov
pop
call
lret
pop
cmc
int3
ljmp
repz
pusha
int
in
add
push
ret
orb
mov
jmp
fisubl
sub
clc
repz
add
ljmp
stc
insl
add
cmp
push
mov
push
mov
inc
lods
add
pop
or
hlt
sub
push
and
loope
nop
arpl
xor
fstps
imul
jmp
outsb
push
jb
cld
push
add
or
adc
clc
repz
adcb
jle
add
sub
add
adc
shll
pop
pushf
jns
add
lcall
push
cmp
mov
insl
pop
adc
add
inc
fistl
imul
jo
test
aam
pusha
dec
inc
lea
dec
lret
xor
jmp
add
inc
stos
aam
les
add
roll
mov
cmp
mov
popl
push
or
lds
sbb
jnp
pop
sub
loop
jge
mov
jns
pop
shl
adc
sub
aas
xlat
jo
add
cld
loopne
push
push
jl
add
mov
xchg
ljmp
das
add
loopne
repz
push
aad
cli
mov
imul
movsb
push
jnp
mov
add
xor
add
rcl
ljmp
dec
add
jo
mov
not
push
push
idivb
shr
jb
xlat
add
and
pop
jbe
loopne
add
ret
cmpsb
mov
cmp
add
cltd
pop
loope
inc
sub
addl
je
movsb
inc
add
cmp
fidivrs
aad
cmp
sub
xlat
sub
add
adc
adc
sbb
pop
add
fldcw
jo
add
cmp
jb
push
daa
xor
lret
jo
xchg
inc
loopne
xor
push
xor
lds
lcall
shlb
mov
jo
add
mov
dec
sarb
test
lea
sti
inc
add
ret
scas
call
add
imul
mov
cmp
jae
push
add
cmpsb
jl
pushf
jb
cwtl
loope
paddw
add
ss
dec
cltd
sub
pop
jge
push
xor
add
lea
add
addb
push
dec
pop
and
ss
add
sub
ret
fwait
fs
ds
push
sub
outsl
add
icebp
or
and
pop
sbb
loopne
jo
stos
dec
dec
mov
aaa
inc
jnp
roll
dec
int
cmp
lock
xchg
loope
cmp
imul
call
dec
test
pop
and
add
aad
loope
out
fmul
bound
add
push
add
mov
data16
pop
adc
add
mov
inc
cmp
jp
add
and
push
cmp
rcrl
sbb
or
loope
cmp
outsl
ljmp
pop
xchg
lock
pushf
pop
jae
add
push
cmpb
add
shrb
lea
sub
outsb
xor
or
sub
sbb
sub
dec
push
icebp
in
pop
add
mov
add
jge
xor
nop
dec
sub
adc
add
cmc
push
sbb
mov
pushf
xchg
pop
clc
out
pop
add
and
cltd
sbb
mov
adc
pop
jae
lods
cmp
or
rolb
je
cmpb
add
pop
mov
or
add
push
in
push
ljmp
mov
jb
push
dec
sub
add
int
scas
sub
xchg
cmp
addl
jl
loopne
add
inc
jp
mov
rcrb
jg
cwtl
popl
fdivr
dec
or
add
and
call
out
add
fildl
clc
cmc
add
dec
inc
mov
mov
add
sub
add
sbb
imul
loope
addr16
ret
test
add
adc
mov
aam
inc
repz
dec
fcoms
mov
add
cwtl
jne
add
adc
pop
xchg
or
int3
add
popf
cmpsb
daa
add
or
roll
jbe
es
push
add
pop
sbb
je
mov
push
enter
in
imul
jno
in
ja
add
inc
js
les
aad
add
and
leave
jnp
lods
enter
push
in
test
inc
inc
loopne
push
lds
push
dec
stos
adcb
adc
adc
nop
mov
test
add
clc
xor
jg
push
adc
cmp
xor
push
fdivs
loope
sbb
sbb
mov
hlt
aad
std
inc
nopl
loopne
add
push
xor
xor
test
test
add
ret
lahf
add
mov
jg
sub
fwait
mov
mov
fs
jo
add
mov
or
mov
push
loop
jne
mov
add
mov
das
cmp
lcall
cwtl
add
loopne
les
add
jbe
or
ja
mov
cltd
jae
inc
or
pop
push
add
jecxz
lock
or
push
call
ljmp
sub
daa
sar
add
lcall
les
add
pop
xor
mov
cmp
dec
add
sbb
xor
jl
add
pop
loop
repnz
pop
pop
jg
add
jns
jne
cwtl
xchg
sbbl
mov
jne
sbb
test
ret
out
xor
pop
push
scas
add
add
pop
roll
leave
imul
dec
loopne
push
mov
scas
pop
loop
lcall
daa
inc
sub
test
jne
or
pop
mov
cmp
add
push
stos
or
call
bound
ret
pusha
adc
cmp
add
inc
repnz
cmp
mov
mov
adc
stos
cmp
pop
aas
add
add
push
inc
test
mov
cli
sbb
and
fcoml
dec
mov
push
dec
xchg
inc
jb
and
rolb
vmaskmovdqu
lfs
push
xorb
inc
jmp
orl
add
orb
test
test
add
outsb
cmp
out
pop
add
xor
and
ret
pop
add
cltd
daa
and
stc
sbb
sbb
jno
loope
xor
mov
push
inc
jo
add
mov
push
dec
cmp
and
fs
add
fiaddl
outsl
scas
adcb
sub
or
mov
insb
fcoms
stos
dec
add
sbb
mov
and
push
or
adc
mov
leave
add
test
je
daa
mov
mov
jae
add
lods
mov
loop
stc
xor
add
repz
loope
add
add
mov
clc
add
lret
or
add
push
sub
cmp
and
jo
sub
lock
test
add
in
or
call
js
mov
pop
in
cwtl
dec
add
hlt
out
sub
aam
fildll
loopne
pop
jo
add
mov
or
and
repnz
mov
lock
add
and
outsb
and
inc
mov
push
push
push
jmp
pushf
stos
enter
daa
pop
xor
rcrl
pop
adc
push
pop
cmc
lea
shrl
add
xor
enter
add
adc
adc
push
and
and
repnz
cmp
mov
inc
jne
test
shlb
movsl
pop
fmull
mov
lea
push
mov
cltd
mov
add
orl
andb
mov
inc
add
push
xchg
mov
popa
jo
mov
aas
add
gs
mov
flds
rcll
or
or
fiaddl
dec
addb
add
inc
adc
mov
test
scas
and
cli
or
movsb
jecxz
inc
inc
mov
add
mov
nop
push
add
mov
pusha
sbb
pop
jno
imul
movsl
add
gs
jecxz
arpl
mov
mov
add
shll
mov
add
sbb
pop
lret
nop
sbb
pop
add
dec
aas
jo
lea
add
mov
sbb
mov
mov
mov
and
add
test
and
mov
js
add
cmc
or
dec
lea
rolb
js
fldenv
sbb
call
in
or
pop
jle
add
bound
testl
adc
ljmp
andb
cmp
add
movsb
jmp
inc
mov
sbb
add
mov
mov
jno
gs
pushl
push
stos
add
out
mov
incb
jecxz
push
mov
lds
add
or
and
pop
leave
pop
jle
pop
shl
mov
add
push
add
pop
inc
adc
mov
movsl
addb
fnstsw
test
in
ds
and
cmp
adc
inc
cmp
shl
inc
dec
jne
cmp
push
call
sub
pop
test
sbb
cmpsb
jne
push
adc
call
ds
push
add
ret
dec
imul
and
mov
add
aas
xchg
xchg
enter
add
fimuls
or
js
push
roll
jae
add
scas
test
pop
ror
add
sbb
add
xchg
xor
adc
and
dec
add
mov
testb
adc
aam
push
mov
cmp
mov
jge
pusha
or
pop
call
jb
mov
and
dec
orb
push
jae
push
test
into
inc
add
sarb
bound
mov
outsb
mov
sbb
jge
push
jnp
in
add
call
mov
hlt
inc
pop
lock
pop
inc
clc
sub
shll
gs
pushf
aam
cmpsb
add
add
das
aas
adc
push
jbe
int
es
clc
in
add
add
int3
mov
dec
leave
adc
xor
fbld
fs
or
movsb
add
mov
std
pusha
xchg
mov
jbe
shlb
lock
pop
sub
xor
adc
mov
push
daa
dec
ljmp
cmp
add
push
pop
lahf
and
xchg
iret
dec
add
jmp
inc
repz
out
add
mov
mov
inc
mov
xlat
push
sub
in
mov
sbb
jge
jb
pushf
push
adc
pop
mov
push
xchg
cmp
and
dec
xchg
addl
mov
push
add
inc
das
int
pusha
into
push
adc
inc
shlb
lock
imul
jne
sub
add
mov
xorl
test
mov
into
add
out
mov
mov
shl
add
push
xlat
std
test
sub
cmp
xchg
add
clc
jae
jle
add
mov
jl
mov
jmp
add
js
mov
add
and
and
or
push
jb
lret
pop
bound
dec
ss
adc
add
xor
push
xor
jmp
leave
sub
pusha
dec
and
cmc
rolb
scas
add
popf
push
ds
ret
sbb
clc
fadds
add
or
enter
movsl
divl
mov
test
jmp
dec
add
les
push
xor
mov
adc
mov
leave
add
sub
xlat
pop
fcmovnbe
add
outsl
lea
out
test
add
xor
outsb
in
pop
or
pop
sub
fbstp
mov
inc
mov
jnp
push
adcb
lret
add
enter
stc
outsl
loop
movsl
push
pusha
out
sbb
push
repz
shlb
addr16
mov
mov
mov
add
lret
repz
mov
gs
mov
stos
cmp
call
cwtl
jno
add
lea
jo
stc
sbb
sub
call
jmp
aaa
add
fbld
mov
inc
movsl
push
cs
pop
mov
mov
ja
stos
or
inc
daa
je
rorl
rcrb
das
inc
fs
addr16
xor
jl
add
sbb
push
fwait
dec
pop
mov
stos
pop
xorb
mov
add
jle,pt
adc
popf
subb
mov
fmuls
add
movsb
jle
cld
repz
mov
jb
cltd
add
push
out
addb
inc
imul
pusha
fcomps
pop
xchg
enter
lods
push
andb
add
jg
xor
add
inc
out
testl
cmp
dec
jbe
add
scas
dec
adc
lret
nop
call
mov
jg
add
fbstp
rolb
mov
inc
sbb
adc
lcall
jge
insl
clc
ljmp
call
push
adc
add
push
pop
sbb
mov
sbb
add
in
sub
mov
mov
adc
arpl
cmpl
adc
push
ja
push
stos
sbb
filds
xlat
sub
cwtl
cltd
add
call
ljmp
mov
push
xchg
pop
add
add
mov
test
pause
les
cwtl
add
negl
dec
pop
in
mov
sbb
cltd
test
loopne
mov
pop
mov
pusha
cmpb
and
cmp
loop
xor
mov
repz
rorl
pop
inc
mov
inc
pop
lret
iret
push
add
add
xchg
and
fisttpll
add
inc
hlt
rcrl
clc
or
cmc
fnstenv
mov
mov
movsb
push
pop
loopne
push
add
pop
mov
cwtl
xor
mov
jmp
aad
cmp
das
xlat
mov
inc
mov
add
adc
xchg
pop
je
inc
pop
mov
mov
cmp
add
add
xchg
addr16
imul
add
xor
int3
test
mov
add
cmp
mov
cld
cmc
in
add
cmp
pusha
mov
push
push
scas
sub
das
adc
add
add
lret
inc
pop
test
push
popl
pop
sub
mov
jne
mov
ljmp
shrb
add
xchg
add
fs
jge
add
jbe
data16
sbb
or
pop
shr
add
lcall
neg
je
add
jmp
out
je
jne
dec
add
jns
aaa
dec
iret
test
pop
in
mov
aas
pusha
and
add
sbbb
push
in
push
xor
sahf
pop
mov
pop
or
out
add
mov
std
dec
mov
add
xchg
and
and
push
loopne
push
mov
cltd
or
add
inc
sub
add
add
sbb
pop
add
ss
sbb
cmpsl
dec
and
jbe
and
test
xchg
xor
in
pop
fninit
subb
sub
cmp
lahf
add
repnz
mov
loopne
add
imul
sarl
xor
lret
movsb
addr16
add
inc
jbe
in
jp
push
add
mov
xor
rorb
lcall
scas
sbb
xor
movsl
pmuludq
or
mov
in
jo
add
mov
xor
faddl
mov
mov
add
jmp
xor
rolb
adc
negb
jno
add
and
out
orl
loopne
outsl
jle
add
stos
mov
xor
cmp
hlt
cmp
fimull
add
mov
or
push
call
or
add
addr16
pop
cli
adc
adc
mov
mov
divb
sub
rorb
sbb
sbb
jl
add
or
jmp
adcb
add
nop
xor
push
dec
rorb
lds
sub
adc
inc
iret
cmp
mov
test
sub
sarb
inc
dec
push
and
in
roll
add
loopne
aaa
test
ss
jae
lcall
add
test
jo
aas
add
pop
lds
push
rorb
and
cmc
sbb
add
inc
lods
mov
jl
add
fdivrl
xchg
and
add
ret
or
or
gs
add
pop
frstor
mov
jns
es
cmpsb
push
inc
or
inc
pop
pop
push
inc
push
push
sub
lret
int
jo
pop
mov
stc
inc
iret
push
pop
and
add
add
bound
std
cmp
aam
repz
push
jbe
adc
filds
lods
mov
inc
fsubr
mov
ret
imul
push
loop
push
mov
and
mov
add
xor
hlt
jg
or
testl
cmp
mov
pop
sub
pushf
adc
adc
push
jg
add
cltd
and
push
imul
mov
dec
pop
cmpb
sbb
dec
add
push
jne
and
sub
lea
cwtl
movsl
enter
add
leave
pop
addb
push
stc
jmp
add
pop
loop
cltd
fwait
push
cmp
int3
and
add
inc
pop
call
inc
push
push
mov
cs
sbb
xchg
js
jle
cmp
add
or
mov
add
xchg
xchg
dec
push
lock
or
mov
mov
stc
hlt
ficomps
shr
subl
add
repz
adc
mov
or
pop
sahf
xchg
psrad
add
adc
mov
imul
mov
add
mov
sub
push
imul
add
sub
dec
nop
pop
pop
mov
add
lds
and
mov
jo
in
cmp
add
sub
pop
mov
das
and
pop
mov
lock
sti
loopne
mov
add
adc
xor
add
lea
call
adc
pop
mov
xchg
xor
cwtl
push
ror
dec
rorb
cmp
xlat
or
outsb
dec
dec
pop
lock
add
and
je
push
bound
jl
sar
sbb
repz
add
sbb
jae
add
xlat
push
dec
or
aad
std
pop
ja
adc
out
xor
add
addr16
xchg
bound
in
sbb
push
and
adc
cwtl
push
jne
adc
mov
or
loopne
ljmp
das
pop
icebp
je
and
add
add
cs
in
and
mov
jb
inc
cmp
mov
dec
push
and
xor
out
sub
xchg
push
mov
push
mov
add
add
scas
ret
sbb
into
add
int
rcl
fbld
add
xor
sbb
cmp
pop
cmp
clc
or
push
ret
pop
sbb
mov
daa
fcmovbe
aam
add
add
mov
ret
shr
cmpsl
lods
inc
or
or
inc
fists
shr
add
pop
je
push
adc
add
repnz
das
pop
cs
sbb
jno
hlt
sahf
ss
in
push
daa
mov
cmp
jo
add
shlb
aas
dec
cmp
add
fldt
int3
lock
xlat
and
enter
fsubl
out
add
movsl
loopne
push
das
add
shll
mov
lcall
jp
cmpsb
cmp
scas
lock
cwtl
arpl
sub
xor
xorb
inc
cmp
lea
test
fadds
rolb
jnp
xchg
and
outsb
pushf
cmpsb
out
pusha
add
adc
addl
and
add
and
add
inc
add
pop
jmp
ljmp
hlt
in
mov
jp
pop
and
or
aad
pop
fiadds
imul
pop
add
jl
push
cwtl
add
xchg
push
xor
xchg
aaa
pop
lret
add
push
mov
add
add
fwait
cld
lret
test
in
add
rcrb
xor
mov
push
mov
lds
push
xor
test
std
cmp
jo
add
jle
repz
cld
outsl
in
mov
inc
xchg
cmc
bound
add
dec
daa
jp
inc
ret
fidivrs
cli
ds
testb
test
or
adc
incb
movl
hlt
outsb
lock
add
sbb
cmp
call
lcall
out
cmc
subl
stos
out
xor
or
lock
adc
ret
jo
adc
inc
fidivrs
enter
add
test
in
or
jae
adc
ja
xor
cmp
aas
mov
or
jecxz
repnz
ret
loop
inc
xchg
jle
mov
inc
out
movsl
bsf
push
subl
das
cmp
push
pop
mov
icebp
add
lret
mov
mov
add
xchg
mov
push
mov
dec
adc
sub
xor
lret
mov
ds
mov
gs
adc
sub
or
and
xor
ss
push
prefetch
loopne
mov
pop
or
pop
add
and
clc
bound
pop
enter
sbb
mov
lock
rclb
and
or
fmul
rclb
or
mov
pop
and
jmp
mov
adc
jo
rolb
call
xor
inc
shrl
rcrl
jbe
add
inc
push
jle
test
inc
cmp
faddl
cmp
dec
sbb
jnp
sub
push
dec
bound
subl
cld
mov
cmp
jp
sbb
push
fcomps
adc
jbe
ds
enter
jbe
fs
or
mov
cmpl
nop
add
leave
or
pop
xlat
sub
and
or
inc
fsubrl
hlt
cld
push
sub
les
mov
add
adc
ficompl
inc
mov
mov
sub
sbb
pushf
adc
nop
aam
and
pop
loope
sub
mov
pop
xor
sub
inc
mov
adc
pushl
aad
add
test
shrb
or
add
in
mov
mov
mov
inc
or
sarl
mov
fcompl
or
pop
clc
inc
mov
pop
and
and
pop
nop
mov
mov
xchg
push
hlt
cmp
or
loope
mov
loopne
mov
inc
jae
sub
fcomps
cld
mov
adc
lea
and
in
pop
mov
rclb
and
mov
xor
add
inc
pop
mov
pop
pushf
cwtl
mov
mov
orl
das
test
xchg
js
add
mov
mov
mov
mov
imul
out
pop
add
loopne
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
insl
add
in
loop
out
pop
addl
sub
cmp
sbb
xor
cmp
inc
push
and
add
or
fadd
in
pop
or
xchg
or
ds
cwtl
jo
nop
sbb
or
push
ljmp
add
clc
test
insb
jo
adc
clc
addl
or
dec
inc
pop
es
sub
lcall
xchg
mov
rorb
and
fcomip
sar
pop
shlb
adc
sub
xor
lock
pop
mulb
push
mov
fistps
or
mov
mov
add
inc
add
gs
push
add
mov
call
jmp
imul
sbb
les
je
sbb
cwtl
xor
js
cltd
add
xchg
mov
adc
push
test
dec
dec
pop
mov
push
add
push
push
pop
pop
push
sarb
add
xor
adc
jo
or
push
outsb
idivl
add
sub
and
popa
add
outsl
mov
rol
fmull
and
sub
hlt
in
test
or
cld
mov
push
imul
lock
nop
xor
fdiv
mov
es
and
inc
pushf
pusha
sarb
adc
clc
fcompl
add
adc
and
add
mov
inc
lcall
jl
lea
das
cmp
sbb
rclb
sbb
cmp
add
sbb
push
xchg
divl
test
loopne
add
rorb
into
or
add
cmc
push
int
adc
push
cli
faddl
push
add
outsb
sbb
test
jp
jge
nop
mov
dec
std
add
mov
test
xchg
in
dec
pop
lock
or
inc
add
andl
insb
add
out
inc
add
jecxz
cld
xor
sub
pop
cld
push
dec
dec
jl
mov
add
hlt
inc
cmp
or
rolb
add
movb
pop
lock
outsl
jno
pcmpeqb
dec
testl
or
push
and
popa
nop
shlb
and
cs
imul
mov
rolb
cwtl
push
push
pop
or
or
or
pop
xchg
int
mov
lea
fdivs
xchg
test
jns
add
xor
hlt
dec
inc
add
cmp
out
pop
lahf
enter
mov
push
test
xor
pop
sub
xor
push
mov
jo
mov
or
flds
add
nop
lahf
mov
and
test
paddb
inc
add
addb
mov
pusha
sub
faddl
cmp
and
cltd
int3
shrb
stc
jbe
sbb
sub
cmp
mov
xchg
ss
sub
lahf
xor
adc
or
cwtl
mov
sbb
and
pop
cltd
jno
xchg
insb
push
test
call
add
mov
adc
mov
pop
and
or
inc
ret
pop
sbb
loopne
sub
pop
call
jo
fldenv
test
mov
xorl
pop
cwtl
adc
sbb
fstl
dec
sub
pop
movsb
add
cmp
xor
and
xor
push
jns
xchg
xor
in
fdivs
sbb
fnop
push
mov
scas
sub
mov
cmp
lahf
jns
rclb
push
sarb
add
dec
popa
js
cwtl
or
and
sbb
and
rolb
aaa
cltd
inc
lods
pop
pop
aad
and
cli
and
adc
mov
adc
bound
movsb
loopne
test
adc
or
mov
pushf
mov
add
test
rolb
pop
mov
inc
or
mov
jmp
push
popa
pusha
out
sub
movsl
add
xchg
mov
or
xchg
and
adc
mov
cli
and
jl
inc
pop
mov
inc
mov
mov
mov
xor
mov
les
xchg
sbb
jp
add
fs
xchg
insb
lock
add
mov
cld
shlb
cld
and
xor
pop
mov
push
sahf
movsb
xchg
mov
mov
in
std
jo
mov
add
dec
cmp
outsb
pop
jl
mov
lcall
mul
lock
sbb
sub
cmp
dec
xchg
pop
and
cmp
adc
push
scas
adc
xchg
inc
fsubr
cmpsb
add
and
mov
push
or
mov
and
jbe
cmpsl
cwtl
xor
cmpsb
mov
lahf
js
add
xchg
sub
and
sbb
sub
ds
push
dec
bound
cwtl
mov
mov
adc
mov
clc
add
xor
dec
repz
repz
jp
mov
and
fdivr
lock
mov
and
je
mov
dec
lods
loope
int3
cld
loopne
add
or
jae
pusha
dec
stos
jo
test
movsb
mov
sbb
pop
adc
mov
mov
adc
xor
dec
cs
mov
nop
adc
xchg
rorb
and
and
imul
mov
add
cmp
dec
dec
push
add
and
daa
and
cmp
add
jge
mov
cmp
inc
adc
add
inc
cmp
fs
adc
add
jno
in
outsb
sub
out
add
xchg
inc
inc
fbstp
add
inc
arpl
mov
out
mov
add
dec
inc
jbe
pop
rorb
sbb
fldt
add
jp
push
jg
push
jb
jne
add
jecxz
push
sub
out
packsswb
push
inc
sbb
sbb
cmp
gs
add
push
add
pop
mov
xchg
fdiv
add
inc
jns
xor
add
cs
sub
add
fisubrl
inc
cmpsb
or
jbe
add
ret
sahf
jmp
cmp
bound
add
inc
js
je
cltd
sbb
xchg
add
fisttpll
jo
loop
outsw
inc
and
mov
jae
arpl
outsl
std
pop
xchg
les
or
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
pop
push
push
mov
mov
push
outsb
push
push
inc
cmp
xchg
je
or
or
shll
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
sbb
push
add
or
push
sub
dec
inc
push
jns
movl
je
cmpsl
loop
jo
adc
jp
cmp
dec
adc
push
add
adc
jb
mov
dec
cltd
jns
and
xchg
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
jo
cld
movsl
add
lret
pop
push
and
in
sub
fsubrl
pop
aaa
adc
mov
ret
rcrb
popa
add
xchg
inc
fidivl
xchg
aam
clc
testb
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
fcoms
fdivs
dec
daa
push
fcomp
inc
push
int
and
dec
into
cmp
lods
fs
adc
xor
movsb
mov
stos
adc
inc
outsl
bound
adc
add
xorl
faddl
out
int
or
add
mov
or
add
imul
test
lods
push
shll
fldenv
lcall
push
rclb
aam
push
add
mov
adc
cs
sbb
andb
cmp
push
sbbb
push
lret
add
pop
stos
rclb
add
xchg
sbb
mov
xor
insl
enter
xchg
mov
push
or
and
cmp
push
mov
xor
push
mov
push
stc
dec
pop
adc
add
rcrb
adc
inc
add
arpl
les
imul
xorb
add
mov
pop
inc
loop
cmc
bound
add
nop
cmpsl
sti
add
jo
setle
insl
inc
add
pop
sbb
enter
or
in
movsb
sub
popl
inc
jbe
ds
repnz
cld
mov
sbb
push
dec
dec
dec
adcb
fs
and
add
jle
les
repnz
hlt
das
or
bound
sbbb
inc
dec
inc
adc
push
dec
jo
sahf
pop
enter
push
daa
movq
or
test
sahf
cwtl
inc
mov
add
stos
and
imul
movsb
es
data16
rcrb
push
pop
sub
add
xor
popf
divb
lcall
fldt
mov
gs
rolb
lcall
add
mov
or
leave
sbb
sbb
mov
or
push
xchg
roll
add
lds
xor
adc
mov
lock
les
xchg
pop
mov
cmpb
in
inc
add
sahf
ja
and
repz
sbb
xchg
push
push
inc
pusha
notb
fs
imul
lea
pop
push
jns
dec
popa
mov
faddl
dec
mov
or
outsb
and
int3
push
dec
add
ljmp
add
outsb
mov
adc
movsl
xchg
idivb
add
add
stos
loopne
adc
add
or
xor
add
cmp
xchg
pop
inc
dec
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rolb
ds
call
lock
sbbb
mov
shlb
int3
adc
inc
or
pop
dec
add
mov
mov
xor
pop
lret
xor
in
xor
js
jp
jl
sbb
xor
push
popf
sub
jp
pop
push
jl
aam
cmp
mov
aas
xlat
leave
loopne
out
add
push
add
cltd
imul
icebp
clc
incl
loope
ss
push
shrl
cmp
jmp
pop
fbstp
add
inc
push
dec
push
loopne
dec
aas
ret
xor
xchg
inc
mov
in
xor
inc
pop
cmp
push
jp
sub
je
jbe
js
sbb
pusha
cmp
sahf
add
lea
add
aas
inc
daa
add
push
or
push
cwtl
push
add
adc
dec
rol
loopne
js
xchg
add
cmp
xor
inc
dec
add
test
mov
fxch
loope
ljmp
je
jbe
js
jle
xor
cmp
popf
add
sbb
inc
lahf
add
push
xchg
push
dec
cmp
iret
jno
jns
cmpl
lea
xchg
aas
xchg
aas
fwait
add
out
pop
loopne
add
loope
cmp
mov
inc
add
xchg
push
repnz
popf
iret
sbb
or
push
adc
fstps
jae
push
icebp
cmp
cmpsl
int3
mov
aam
out
repz
cmpl
loope
jmp
shlb
cld
sbbb
jle
push
lcall
into
ret
mov
and
pop
cli
cmp
cmp
add
sbb
or
and
dec
xor
jle
inc
out
ljmp
push
jb
jp
cmp
fistpll
dec
mov
mov
lock
loop
ljmp
add
or
xchg
out
sbb
leave
inc
daa
and
pop
add
jb
repnz
in
cmpsl
push
testl
in
jb
dec
sbb
jbe
stc
jecxz
add
xchg
dec
dec
sub
pop
iret
pusha
xchg
jo
js
andb
lret
mov
out
dec
rorb
in
xchg
or
lock
testl
mov
adc
xlat
sti
daa
unpcklps
dec
incl
repz
and
jo
push
test
stc
mov
mov
ds
mov
aas
sarb
fdivrs
loopne
call
sbb
xor
leave
adc
sbb
fldenv
loope
jmp
stc
inc
sbb
jae
pop
inc
aas
push
mov
ret
mov
nop
jecxz
repz
cs
popf
fistpl
push
xor
push
sub
sub
adc
shll
cmp
pusha
gs
clc
inc
cld
dec
call
stos
xchg
inc
lods
loopne
leave
mov
out
push
mov
les
cmp
hlt
aas
clc
add
out
pop
xor
daa
or
inc
or
and
loop
push
add
xchg
andb
js
cld
xchg
js
movsb
add
mov
mov
mov
shrb
movsb
jmp
add
or
or
adc
loope
jmp
push
in
call
fs
pop
insb
mov
jle
daa
js
mov
pop
mov
mov
mov
jle
jle
jle
jle
jno
add
pop
or
cmp
cmp
add
and
sbb
lahf
cmp
into
push
iret
je
js
pop
lret
orb
iret
ror
iret
enter
ror
aam
fadd
fcompl
adc
sbb
sbb
and
and
pop
sub
sub
xor
xor
inc
xchg
jo
je
js
jl
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
movl
sub
xor
add
dec
aad
cmp
out
in
push
cmp
call
icebp
add
les
add
xor
add
inc
in
mov
in
jae
cwtl
aas
cmc
mov
push
outsb
xor
clc
lahf
std
rolb
popf
add
sbb
inc
xchg
add
dec
leave
xchg
push
daa
cmp
jnp
pushf
lcall
pop
test
ja
mov
icebp
in
rolb
add
or
or
adc
adc
cmc
dec
mov
cwtl
jle
ret
aas
pop
mov
ret
shrl
insb
bnd
outsb
aas
and
mov
fstps
loope
jmp
stc
sub
lods
pop
fisubrs
insb
clc
jo
jmp
fs
out
loopne
add
xchg
rcpps
lcall
dec
repnz
xor
xor
andl
jp
jb
mov
pop
xchg
cmp
xchg
aas
lcall
ss
and
push
mov
daa
add
push
lock
sbb
inc
je
push
jns
add
or
cltd
xor
jl
jmp
js
dec
addl
add
xor
in
cmc
flds
cmp
add
je
jbe
js
add
jl
jle
xchg
pop
mov
gs
imul
jne
cmpsb
add
or
cld
dec
cmpsl
push
sahf
add
mov
decb
inc
adc
mov
add
lcall
idiv
add
adc
sbb
dec
sbb
bound
addr16
inc
lods
imul
inc
andnps
xchg
pusha
cltd
test
add
cmp
and
and
xor
mov
nop
lods
cmp
push
mov
xor
gs
lock
inc
fnstsw
insl
icebp
jg
xchg
mov
ficoms
xor
pop
add
inc
jg
add
out
loope
adc
mov
scas
xchg
loope
ss
cmp
cmpsb
hlt
add
shlb
in
xchg
call
out
clc
push
cmp
cmp
es
test
dec
orb
enter
daa
xchg
pop
sarb
leave
fs
mov
inc
cmp
cmp
cmp
mov
pop
je
in
loope
rorb
sbb
out
cmp
jno
pushf
ds
aas
mov
dec
add
mov
shr
mov
jb
or
pop
loopne
cmpb
jbe
scas
js
mov
pmulhuw
mov
pop
lret
lcall
loope
out
in
add
daa
stc
adc
or
jno
xor
sbb
jmp
test
pop
lcall
mov
mov
jbe
js
jp
push
in
xchg
es
pusha
jo
mov
jb
loope
pop
leave
cmp
add
jns
push
sub
mov
cmp
mov
lds
add
pop
and
dec
hlt
popa
nop
fwait
lock
out
cmp
cmp
add
leave
dec
push
cmp
mov
and
adc
add
mov
sbb
pop
sahf
rclb
pop
xor
je
jae
addb
popf
pop
nop
adc
adc
push
pop
or
sub
or
jle,pt
in
adc
adc
push
in
and
clc
mov
sarl
and
xchg
and
xorb
sti
pop
push
add
aas
inc
dec
dec
mov
pop
cmp
sub
xor
add
mov
push
pop
xor
repz
gs
sub
xchg
xlat
inc
call
hlt
dec
xchg
push
adc
or
adc
movsb
add
and
sub
cmp
mov
jb
je
pop
pusha
popa
xlat
push
and
das
nop
lcall
je
lods
push
jb
ficomps
lahf
in
call
add
or
sbb
and
shll
sub
xor
addl
push
add
pop
in
psubsb
inc
nop
hlt
ret
imul
ja
add
cmp
cmp
orl
mov
cmp
adc
push
pop
inc
xor
xchg
push
pop
cmp
data16
jnp
xchg
in
mov
iret
lcall
negl
cmp
adc
xor
push
je
dec
gs
repz
sbb
adc
cmp
mov
sar
ja
add
sub
cmp
push
mov
push
daa
rolb
xor
jmp
jecxz
or
orl
xor
xor
mov
adc
pcmpeqb
add
xor
clc
add
cmp
cmpsb
cmp
cli
and
inc
pusha
rorl
nop
setp
ret
int
push
sbb
mov
loop
mov
pop
enter
add
jmp
mov
cmp
aam
daa
add
adc
mov
stos
je
adc
pop
loope
icebp
mov
pop
wrmsr
loop
out
ljmp
mov
mov
leave
hlt
sbb
xor
fisttpll
das
sbb
popf
add
add
xor
in
inc
add
frstor
add
cmpl
xor
add
in
xor
cmp
mov
cmp
and
aam
ret
leave
pop
in
sbb
clc
and
and
lret
adc
cs
xchg
inc
adc
mov
cld
cmp
xchg
dec
pop
mov
cwtl
sbbb
iret
lods
cmp
popa
repnz
je
int3
add
aam
ss
jb
xchg
je
push
neg
and
in
add
pop
and
mov
insb
add
xchg
outsb
add
mov
xor
mov
inc
cld
push
add
pop
shrb
pop
xor
xchg
adc
push
pop
out
add
mov
xor
add
cmp
add
pop
xchg
icebp
add
xchg
jo
jp
pop
add
test
cmp
add
daa
mov
cmp
aad
out
cli
lret
pop
add
dec
add
and
add
fs
pop
insb
inc
in
in
cmp
add
nop
ja
jg
jnp
jnp
mov
xlat
cs
add
sub
pop
mov
lock
add
roll
shlb
xor
mov
inc
dec
in
dec
leave
dec
insl
incb
cld
aas
aam
hlt
jl
add
fmull
adc
add
jb
fidivrl
add
lret
lock
cld
arpl
add
adc
or
xchg
out
and
jl
in
pop
rorl
add
and
int3
lret
dec
fmuls
paddw
xor
or
add
sbb
js
pop
es
xor
imul
xor
mov
movsb
push
sti
shrb
fnstcw
inc
adc
jno
jle
xorl
xchg
add
hlt
les
add
cmp
sbb
daa
in
call
add
lret
xchg
xor
add
pop
int3
mov
inc
dec
orb
rorb
sbb
cltd
xor
addr16
and
shr
mov
add
das
je
bound
add
mov
dec
iret
or
pop
add
inc
pop
pop
dec
outsl
jo
ret
push
add
push
push
cli
lret
movsb
lods
push
cvtpi2ps
call
std
xor
movsb
es
lods
cwtl
stos
js
jp
push
jl
jle
pop
rcr
aas
icebp
cmp
adc
pop
pop
pop
pushl
hlt
push
jns
mov
add
adc
sarb
add
jb
dec
jae
cmp
add
je
mov
pop
fwait
add
mov
fbstp
add
xchg
repnz
sbb
push
add
out
mov
in
andb
adcb
push
sbb
sbb
and
dec
outsb
popl
add
cmp
cmp
das
ds
test
push
lock
es
dec
add
sbbb
pop
xchg
fiadds
push
pop
xor
mov
add
testb
decb
pop
xchg
or
cmp
xor
xor
xchg
scas
mov
faddp
inc
ret
cmp
add
push
add
in
insl
fs
cmc
loopne
push
leave
cmp
add
inc
ret
mov
jge
or
mov
pop
inc
aas
das
inc
add
jns
rclb
mov
cmp
leave
add
cmp
sbb
pusha
xor
in
jmp
ja
jnp
pop
add
dec
mov
iret
push
rcrl
mov
nop
xchg
add
push
cs
pop
add
jb
add
movzbl
out
sbb
cwtl
push
push
xchg
add
pop
jg
fcompl
sbb
sub
in
sbb
push
das
mov
pop
xor
ljmp
pop
shrb
lret
clc
insl
sbb
pop
sbb
push
test
add
cmp
mov
add
xor
mov
out
adc
add
cmp
addl
xchg
lcall
cmpb
push
call
xchg
pop
rorb
and
aas
or
add
sbb
mov
pusha
xor
cld
enter
sbb
dec
add
sbb
add
push
push
xor
inc
lods
lret
ret
xor
loop
inc
sub
add
clc
mov
jp
pop
add
mov
nop
out
ret
or
ss
xchg
inc
mov
stos
rcl
add
mov
mov
loope
push
js
sub
lret
loopne
add
aaa
add
ret
jne
mov
adc
sub
add
push
jnp
mov
loopne
cmp
xchg
pop
push
inc
sub
push
subl
ret
lcall
hlt
add
sbb
cld
adc
and
sub
test
aas
cmp
lahf
xor
out
int
xor
sti
lock
mov
lret
dec
clc
ljmp
and
dec
das
addl
pop
cwtl
or
jle
cmp
ret
incb
pop
mov
in
mov
dec
pop
or
push
jl
inc
mov
leave
mov
nop
into
add
nop
mov
push
sbbb
xchg
mov
jmp
inc
push
bound
cmp
mov
add
addb
xor
daa
imul
mov
push
xchg
aaa
call
pop
or
sbb
jg
xchg
cli
and
ds
push
hlt
arpl
pop
outsb
push
enter
sarb
add
sub
mov
or
lock
or
es
aaa
add
ficompl
cmp
cmp
xchg
xchg
movl
cwtl
sub
sub
leave
add
jb
je
adc
adc
out
xor
fiaddl
inc
fsubrp
mov
and
jl
cmpsb
pusha
xchg
hlt
add
xchg
call
sbb
test
cs
sub
je
add
adc
je
xchg
mov
adc
mov
push
xor
movsb
sahf
popf
loopne
mov
add
inc
aas
dec
leave
push
shll
pmaxub
xacquire
lret
scas
shll
sbb
clc
cmp
mov
popa
or
xlat
cli
loope
inc
rolb
cwtl
cmp
movsl
das
stos
adcl
mov
shll
add
imul
pusha
sub
lcall
or
ret
sbbb
sbb
ds
into
add
lcall
add
mov
js
cmp
lds
add
push
cwtl
sbb
mov
jno
mov
and
fs
mov
dec
les
aas
xor
in
xlat
pcmpeqb
sti
add
cmp
addb
or
mov
iret
pop
pusha
sbb
push
fsubrs
dec
dec
pop
mov
ja
jge
aas
jb
je
add
and
bound
in
add
pop
cmp
jge
push
imul
inc
jae
ja
xchg
pop
cmp
sub
push
lods
leave
mov
jp
mov
add
pop
adc
test
pop
cmp
outsl
shll
mov
cmp
nop
adc
insb
adc
out
cmp
in
test
and
aad
jmp
lods
push
cmp
add
dec
daa
popa
inc
ret
or
or
rol
dec
enter
cwtl
cmpsb
sbb
and
rcl
cmp
mov
sbb
insl
pop
adc
cmpsb
mov
jb
and
setbe
pop
xchg
pop
iret
shll
in
cmc
fcoml
adc
sbb
ret
add
mov
mov
nop
das
mov
add
xor
fadd
rolb
pop
rolb
fcomi
and
jmp
repz
sbb
dec
lock
xchg
xchg
loope
cmp
insb
addb
jecxz
pop
cmp
jle
mov
mov
xorb
lret
mov
adc
pop
loop
imul
or
dec
xor
in
mov
addr16
adcl
or
add
mov
lods
and
adc
sbb
mov
xor
inc
hlt
xor
pop
jle
add
mov
add
popf
xchg
fimull
out
in
cmpsl
cmp
or
inc
jle
push
jo
add
mov
adc
enter
pop
xor
cmp
mov
je
leave
dec
fcoms
jb
add
test
or
mov
popa
or
imul
cmovno
add
cmc
xor
add
cmp
ret
mov
jbe
xchg
inc
sbb
add
pop
aas
dec
and
repnz
lods
cld
mov
jne
push
push
push
xor
jle
scas
iret
fidivrs
clc
xor
or
incb
xor
stc
pop
sbb
mov
shll
adc
movsl
js
push
ds
je
pop
xor
cld
fldl
stc
pushf
adc
xor
sbb
popf
dec
sbb
push
xchg
fwait
dec
xor
cmp
and
mul
loope
ss
leave
jp
sbb
add
rolb
orl
add
mov
ret
call
push
mov
outsl
shll
add
lahf
sti
test
cmp
loopne
mov
popf
hlt
mov
sbb
jp
mov
pop
xchg
lahf
cltd
pop
scas
inc
ficoms
jno
xchg
mov
rolb
xor
cs
popf
add
sbbb
push
push
sbb
push
adc
aas
out
cld
mov
add
or
xor
pop
out
loop
pop
cli
movb
loopne
jb
dec
sbb
push
scas
adc
test
mov
dec
sub
icebp
lds
pusha
add
push
cmp
xor
dec
dec
ret
les
add
aaa
lea
jle
fistl
sarb
sub
push
inc
xchg
cmp
and
push
call
shrw
sahf
push
or
jo
add
pop
cmc
psubb
inc
add
xchg
push
fdivr
dec
jp
add
pusha
xor
xchg
sti
add
add
mov
add
xchg
sub
sbb
call
mov
ret
hlt
add
clc
or
test
cld
ret
shlb
push
clc
js
mov
adc
push
lock
sub
xor
punpckhdq
push
js
jb
pop
mov
rcrl
shr
repnz
testb
test
sub
cmp
add
dec
jbe
sbb
xlat
aas
or
idiv
xchg
adc
add
scas
xchg
aas
les
andb
shlb
pusha
dec
movb
or
dec
add
push
push
les
jp
dec
ret
or
jle
add
push
push
leave
mov
add
cs
and
sub
jne
xorl
loope
sbb
add
ja
mov
in
mov
ret
aas
js
push
jbe
mov
mov
pop
fisttps
fdivrp
mov
xor
fcoml
adc
sbb
and
sbb
or
les
lret
jbe
pop
rolb
pop
mov
sbb
inc
adcl
aas
dec
xchg
call
fcoms
addb
pop
es
add
lock
and
sbb
daa
xor
sbb
pushf
mov
in
ss
mov
div
xorb
or
add
xchg
hlt
mov
jne
or
or
insl
cmpb
psubsb
std
cli
or
leave
and
inc
pusha
loope
cmp
cmc
dec
cld
dec
daa
add
sub
in
hlt
fcoms
add
movsb
pop
or
aam
pop
mov
loopne
xor
sbb
je
daa
jp
dec
push
ror
add
aas
mov
adc
push
pop
jns
sub
add
adc
lock
cmpl
xchg
cmp
push
lcall
mov
les
cmp
daa
inc
shll
push
jg
mov
xor
rclb
jo
add
pop
or
adc
sub
mov
sub
in
test
xchg
popf
or
add
in
xor
cmp
pusha
loopne
out
mov
mov
or
mov
add
jb
je
dec
sub
push
rcll
aad
mov
pop
add
jmp
push
sti
push
stc
cmp
add
add
mov
mov
xor
mov
test
loop
shrb
orb
lahf
pop
mov
adc
sbb
add
mov
enter
jecxz
ret
xchg
cmp
dec
add
iret
loopne
cmp
shrb
lret
sbb
cmp
nop
mov
cmp
fs
mov
andb
xor
add
sub
push
and
in
push
ljmp
rorl
jnp
add
sarb
push
outsb
jo
cwtl
cmp
jl
dec
add
mov
pop
add
cmp
test
daa
xor
cmp
cmpb
and
add
mov
cmp
sub
xchg
clc
pop
add
add
add
sbb
dec
sbb
add
adc
and
cld
in
adcl
cmp
mov
leave
sbb
or
into
jns
sbb
xchg
sub
enter
aam
popa
shrb
outsl
sub
add
pop
arpl
and
mov
test
xchg
add
inc
xor
inc
xchg
outsl
mov
add
pop
xor
and
inc
sbbb
push
push
jl
mov
pop
test
xchg
add
movsl
aaa
leave
lods
scas
insb
mov
pop
cmp
dec
xchg
ret
add
mov
jecxz
repnz
add
inc
cli
sahf
pop
pop
lahf
imul
inc
mov
adc
pop
mov
push
mov
cmp
enter
pop
add
in
xor
loope
jge
add
mov
sahf
leave
lods
rclb
dec
mov
fldenv
jo
adc
cmp
cwtl
push
add
in
dec
xchg
je
xchg
adcb
mov
xchg
cmpsl
pop
lock
negl
and
cmc
call
pop
sub
xchg
pop
xchg
loopne
sub
cld
into
cmp
jle
dec
ljmp
xor
or
ret
sbb
jle
orb
ret
subb
jae
inc
pop
xchg
movsb
mov
add
fstps
pop
in
add
mov
mov
in
add
mov
scas
fnstcw
mov
mov
add
fs
call
add
iret
jnp
cmp
cmp
push
dec
pop
in
or
add
inc
clc
sbb
xor
cmpsb
rcrb
ret
pop
push
jle
cmc
inc
or
in
in
add
out
cmp
cmp
fnstsw
and
mov
xchg
js
lcall
or
jle
mov
cmpb
push
loopne
pusha
mov
cltd
loopne
adcb
pop
jmp
flds
add
popa
das
imul
sub
int3
inc
ljmp
sahf
pushf
out
pop
ret
dec
pop
fstpl
loope
je
push
mov
sub
das
sub
xchg
jle
aaa
dec
ror
add
ficoml
outsl
mov
addb
pop
pop
xchg
xchg
lcall
xor
sub
cwtl
hlt
cmp
leave
inc
shr
outsl
stos
or
mov
addb
add
or
test
in
add
insb
in
add
mov
cld
jle
mov
enter
sarb
pop
push
pop
jnp
ret
dec
xchg
ret
sarb
add
or
adc
add
fnstenv
outsb
push
or
loopne
add
and
push
pop
xchg
sarb
out
add
in
mov
or
mov
push
int3
push
cmpsb
add
jo
loopne
ss
sbb
cs
cmp
dec
add
push
das
popa
inc
mov
stc
jg
pop
bswap
scas
iret
out
and
ret
add
pop
es
jmp
inc
clc
push
mov
dec
bound
add
shrb
aas
jbe
negb
adc
pop
xor
jo
lock
fadd
or
add
sahf
in
and
outsb
pushf
pop
adc
push
mov
rorb
mov
inc
mov
push
cmp
cmp
adc
adc
data16
or
mov
sbb
addb
cmpsl
mov
lcall
test
cli
pusha
sarb
or
sbbb
and
cli
add
pusha
jl
mov
stos
cmp
aas
daa
call
inc
pop
cmp
call
aas
sahf
inc
cmp
arpl
insl
addr16
mov
mov
sbb
push
icebp
cmp
mov
mov
mov
or
xor
cmp
xor
sub
das
add
fstpt
aas
in
jmp
sbb
jbe
dec
inc
add
les
lret
xchg
jnp
pop
es
iret
mov
mov
flds
fst
xor
fimuls
and
sbb
xchg
adc
fs
push
nop
or
push
pop
movsb
or
lods
orb
dec
mov
or
mov
int3
hlt
pusha
leave
adcb
cmp
add
je
or
adc
adc
sbb
add
ss
js
cmc
imul
leave
mov
mov
les
pop
cmc
aam
clc
cli
aam
add
cwtl
push
add
sbb
and
cmp
lds
push
in
xchg
pop
mov
repz
insb
call
xchg
mov
push
in
mov
movsb
test
push
daa
ljmp
cmpsb
push
nop
je
or
test
adcb
push
lcall
cmpsl
add
test
sub
ss
enter
push
add
mov
adc
test
and
sub
xor
mov
add
loop
pop
out
cmp
jl
fmull
add
mov
faddp
loope
sub
fwait
xchg
loope
pop
clc
insb
inc
add
je
ret
jo
add
cs
dec
movsb
mov
mov
pop
pop
insb
sub
mov
notb
add
xchg
faddl
sub
in
xchg
pop
mov
stos
fs
aaa
sub
sbb
enter
adc
loopne
xor
pop
cmp
loopne
test
mov
xchg
inc
cmpsb
fimull
xor
jo
inc
fimuls
adc
cld
inc
mov
mov
aas
aam
cmp
sbb
cmp
sub
xor
iret
mov
push
leave
jno
add
adc
mov
mov
nop
in
repnz
dec
aas
pushf
inc
mov
lods
in
mov
or
mov
std
into
adc
add
mov
in
nop
or
call
push
inc
adc
xchg
nop
das
push
add
lock
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
mov
jo
push
add
adc
and
cmp
or
add
sub
jg
clc
mov
add
push
xchg
mov
adc
test
push
inc
push
pop
mov
add
push
ror
xor
or
add
push
add
cmp
mov
jne
mov
or
mov
je
sahf
push
pushl
movb
jne
cmp
mov
push
push
push
mov
push
sbb
mov
add
fisttpl
leave
je
adc
sbb
or
jmp
dec
jmp
sub
call
outsl
fwait
dec
mov
loopne
pop
pop
pop
push
bound
add
inc
sar
repz
mov
add
fwait
sub
inc
add
rcrl
add
add
and
dec
or
jbe
add
sbb
shlb
repnz
inc
test
mov
xor
push
add
addr16
mov
addl
rcrl
shr
outsb
lods
sub
mov
leave
add
pop
push
addl
sub
loopne
incl
bt
cmp
adc
push
push
xor
out
sahf
lret
mov
pop
add
add
test
pop
ret
fadd
adc
out
popa
es
add
push
lock
outsb
and
push
mov
or
xor
inc
xorl
adc
sbb
jle
cli
mov
adcl
xorb
add
add
push
mov
lods
mov
add
call
add
xor
cwtl
xchg
rorb
sub
mov
cltd
push
rorb
aas
fdivl
add
pop
roll
dec
shl
nop
arpl
cmp
jl
sbb
push
sbb
add
cmc
add
or
push
push
shll
mov
xorl
mov
dec
cwtl
adc
jmp
mov
pusha
cmp
inc
add
das
andb
or
or
cmc
add
shlb
loop
adc
mov
add
rcll
mov
add
and
and
daa
inc
xor
mov
cmp
rolb
add
pop
push
push
adc
add
testb
push
push
xchg
loop
pop
add
clc
mov
xchg
push
xlat
add
pop
mov
mov
xor
je
sbb
dec
add
mov
cmc
pop
fdivr
repz
push
sbb
add
iret
fwait
jae
movsb
roll
xorl
dec
xchg
test
lods
rcrb
add
mov
and
dec
imul
add
loope
into
mov
mov
cli
insb
inc
push
add
add
adc
dec
test
iret
add
insl
ret
add
enter
adcb
mov
adc
cld
imul
add
xlat
add
faddl
push
lcall
ret
inc
insb
lods
cs
add
pop
scas
das
cbtw
push
movsl
add
shll
mov
adc
xlat
sub
add
movsl
lcall
ficomps
jmp
lret
mov
add
loop
test
xchg
scas
nop
mov
xor
movsb
push
pminsw
clc
lcall
xchg
jnp
out
add
xchg
test
add
es
mov
or
add
mov
sbb
aam
rcl
add
inc
dec
scas
mov
into
adc
add
pusha
cmc
mov
negb
out
jo
add
inc
daa
cmp
lods
pop
add
cmpb
inc
movsl
andb
push
xchg
jecxz
daa
add
add
or
sbb
repnz
aam
dec
sbb
aam
insl
add
ror
pop
add
pop
xchg
mov
pop
push
add
roll
jne
jl
add
and
xor
mov
cmpsb
jg
pop
mov
cmp
ja
push
loopne
es
push
xor
nop
scas
test
mov
add
jmp
lds
mov
add
aad
push
andl
push
jb
jnp
push
addr16
inc
and
add
push
sub
cmpsl
push
test
add
add
mov
xlat
cmp
pop
xchg
stos
out
adcb
and
sarb
adc
pop
add
dec
lods
xlat
dec
push
fdivr
stos
mov
enter
lods
push
out
ljmp
pop
xor
bound
inc
xchg
jns
into
push
jle
add
aam
xlat
js
pop
add
push
jne
loope
iret
sbb
cmpsb
nop
add
mov
mov
jmp
subb
pushf
xchg
mov
inc
pusha
jns
jg
add
xlat
test
in
pushf
add
fwait
adc
push
ss
mov
jno
add
fsubl
mov
cmp
push
add
and
ds
je
int
sbb
add
cmp
jge
adc
daa
jge
add
in
jae
aad
push
clc
test
add
or
add
daa
aad
and
js
xchg
fcomps
mov
add
lods
pop
sub
and
in
dec
inc
dec
ret
push
imul
arpl
jne
mov
addb
push
inc
mov
inc
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
xlat
add
sub
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
mov
or
jns
pop
and
pop
or
les
jne
in
rclb
je
jne
mov
push
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
fidivl
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
sahf
mov
lcall
push
cmp
jge
in
jecxz
insl
jecxz
data16
aas
bound
jne
push
push
outsl
jmp
push
sub
xchg
push
jne
scas
pop
nop
rorl
push
rorb
inc
in
sbb
icebp
jle
fidivl
outsl
sarl
pop
icebp
jns
inc
mov
daa
dec
outsl
out
xlat
dec
push
dec
repz
pop
mov
add
add
lahf
mov
mov
cmpsl
movsb
insb
dec
ds
xchg
pop
dec
loopne
mov
aad
test
stc
repz
fdivp
jae
out
cmp
xor
hlt
mov
xor
sub
jae
adcl
xchg
int3
xchg
pusha
ljmp
fdivrl
jno
add
pusha
jae
mov
mov
int
jp
into
mov
sub
movsl
sti
mov
mov
mov
or
mov
add
ss
dec
ret
enter
push
fsubl
or
mov
nop
dec
lcall
adc
lcall
pop
push
jb
push
jge
nop
negl
push
push
xchg
arpl
jg
mov
sub
mov
loop
fwait
jae
lock
xor
data16
adc
add
mov
ficomps
pop
push
jne
sbb
sbb
movl
adc
std
hlt
sbb
and
push
gs
mov
mov
flds
dec
xor
ss
jb
sub
lret
div
fsubp
fidivl
adc
shrl
inc
sub
cltd
ljmp
out
test
sub
sarl
adc
sar
push
pop
and
mov
inc
stc
mov
stos
jmp
repnz
jge
dec
shrb
scas
rclb
jae
mov
lea
lahf
xchg
xor
mov
cmpsb
or
push
xchg
int
xor
cmp
iret
inc
repz
fiadds
paddsb
lea
outsl
aam
or
jmp
jge
pop
dec
ret
sbb
enter
pop
xchg
jb
xchg
cs
inc
mov
clc
jle
cltd
outsl
dec
loop
dec
xchg
scas
inc
adc
sahf
push
push
cmc
mov
mov
pop
dec
gs
aam
subb
cmp
negl
mov
mov
jl
push
jne
mov
sti
mov
cmp
pop
add
clc
out
jae
jmp
ret
mov
fildll
repnz
rcrb
jl
out
adc
push
xchg
in
int3
jb
iret
cmp
pop
rorl
out
jo
out
pop
fsubl
xor
pop
sbb
test
jns
dec
sbb
dec
inc
adc
xlat
test
adc
inc
add
push
rol
ljmp
mov
push
xchg
xbegin
mov
loopne
and
mov
adc
test
aaa
loopne
pop
push
pop
inc
adc
inc
test
jle
inc
aas
xor
push
rcll
cmc
lds
mov
adc
xor
mov
icebp
cmpb
sbb
ficompl
jno
in
lds
inc
jmp
xchg
jns
jmp
in
mov
xchg
out
test
add
mov
xor
out
fcompl
mov
add
cmc
aaa
and
push
sbb
xchg
cld
or
add
mov
aaa
cmpsl
test
iret
sbb
popa
lds
iret
test
shr
aas
out
cs
cltd
cmc
pop
int3
jb
sbb
xchg
in
fsubs
jne
pop
add
mov
getsec
jl
shlb
and
lret
jl
mov
lret
push
xorb
ja
into
ret
mov
mov
and
lcall
lods
mov
daa
fwait
movsb
xor
mov
jbe
jnp
ljmp
mov
aas
or
movsb
and
imul
inc
push
pushf
push
mov
jle
xchg
int
mov
jb
add
cvttps2pi
dec
out
jns
notb
das
pcmpgtw
mov
push
scas
xchg
sbb
out
and
cmpsl
mov
cmpsb
loope
sbb
cwtl
aam
push
sti
mov
mov
sbbl
int
jmp
push
or
mov
dec
insl
fcomip
iret
xchg
mov
push
sbb
sbb
roll
push
loope
out
notb
repnz
je
dec
repnz
mov
xchg
jae
imul
cs
loope
negb
mov
xor
xchg
xchg
mov
cmpsl
addr16
xchg
dec
pop
xchg
stos
lods
cltd
mov
mov
mov
xor
inc
xchg
cmpsb
jne
gs
in
jnp
cli
sbb
loope
mov
testb
dec
mov
fcoml
rorb
xchg
or
adc
inc
pop
in
sbb
pushf
arpl
in
cmc
leave
xor
mov
in
push
mov
sub
filds
fstl
adc
xchg
gs
lock
aas
lods
addr16
push
dec
cmp
lret
pop
mov
hlt
xchg
push
fs
mov
push
into
mov
inc
mov
jo
cmp
push
push
mov
mov
jo
aam
xor
cld
arpl
sahf
inc
inc
xchg
push
jbe
out
xor
add
mov
not
pop
shlb
insb
mov
sub
adc
adc
fldcw
outsb
cmp
xor
cmpsb
or
mov
cmpsb
stos
push
mov
jb
xchg
cld
cmpsb
pop
testb
mov
mov
cmp
sbb
idiv
daa
mov
ljmp
xor
ret
pop
arpl
cltd
sub
jnp
insb
xchg
or
xchg
dec
loop
mov
jecxz
bound
mov
out
les
ret
ljmp
inc
rorb
jecxz
pop
add
xchg
and
xchg
test
cmpsl
sbb
xchg
push
fs
test
dec
jl
cli
jmp
dec
out
or
adc
faddl
popf
outsb
test
cmp
mov
out
hlt
imul
cli
cmp
dec
outsb
sahf
les
xchg
jno
decb
mov
add
iret
inc
mov
daa
cltd
lods
jl
mov
or
aad
pop
rol
test
gs
push
dec
cli
jecxz
and
and
popa
aas
out
jbe
out
rep
jl
sbb
add
clc
mov
insl
adc
xor
sti
cli
cli
into
jge
cmp
add
insb
jle
xchg
fisubl
pusha
mov
add
shrl
adc
sub
shrl
jg
pop
fidivl
shll
or
mov
push
push
dec
inc
out
dec
add
ss
pop
popa
inc
pusha
out
xchg
xor
out
push
loope
mov
gs
repz
cmp
push
inc
push
adc
ljmp
hlt
or
fstp
shlb
shrb
xor
mov
cmp
mov
sub
mov
dec
ljmp
sbb
mov
jbe
in
pop
test
mov
lock
push
cwtl
mov
or
mov
pop
or
dec
rolb
outsb
stos
lods
xor
or
rcrb
sti
ljmp
pop
cmpsl
bswap
into
test
xor
jne
mov
bound
jo,pn
xchg
test
pop
sbb
dec
out
push
mov
js
das
and
test
lods
sbb
in
and
adc
leave
jle
idivb
sbb
mov
test
mov
lcall
dec
je
in
sar
enter
pop
fwait
rclb
inc
outsl
sahf
ss
cmp
jecxz
jl
je
adc
clc
sub
mov
std
jno
jns
or
mov
sub
jg
inc
imul
and
add
mov
fsubp
jbe
push
orl
push
sbb
lea
rcrl
dec
push
gs
xlat
mov
aas
cmp
mov
ss
mov
mov
push
lahf
pop
mov
out
jne
sbb
jo
test
xchg
sbb
dec
out
and
pop
popa
shrl
xor
sarb
arpl
xchg
mov
fs
fmul
and
lret
pop
lods
gs
inc
push
lods
mov
in
xor
adc
arpl
sub
ficomps
ss
inc
pop
mov
sbb
pop
cwtl
insl
jp
lret
dec
out
stos
sbb
push
and
lock
arpl
push
mov
loop
inc
jb
bound
adc
cld
lods
enter
inc
inc
adc
push
mov
sbb
inc
das
sbb
mov
ss
inc
insb
dec
das
cltd
mov
mov
out
xor
sahf
mov
les
or
stc
lds
in
sbb
cmpsb
jb
mov
lret
add
loopne
mov
mov
arpl
xor
loopne
push
cmp
sbb
and
xchg
lea
in
add
lods
pop
imul
push
test
bound
or
lock
xorl
aam
push
incb
jp
daa
cmpsl
mov
xchg
imul
mov
clc
xchg
int
out
pop
addl
shr
out
test
pop
sti
xor
xchg
scas
stc
mov
cld
paddusw
js
dec
fs
push
sbb
nop
sbb
xlat
pop
push
cmp
adc
stos
xor
lock
add
imul
inc
icebp
pop
call
std
or
je
test
push
std
test
add
lds
clc
inc
cmpsb
ljmp
add
mov
push
pop
cmp
sbb
test
mov
mov
aas
add
pop
data16
mov
push
nop
mov
in
mov
inc
add
dec
xchg
je
jo
sbb
out
ret
jl
push
jmp
xor
es
roll
js
rol
fists
es
aaa
sti
fucompp
out
sub
push
movsl
add
add
mov
dec
adc
sub
lret
or
mov
xor
xchg
cltd
or
ljmp
pop
ljmp
cmpsl
vmovq
mov
adc
ja
adc
cmpsb
jg
movsl
adc
clc
or
aam
pop
repz
imul
test
pop
mov
push
mov
mov
push
lcall
dec
insb
mov
out
je
mov
dec
aas
mov
xor
xchg
push
loop
cld
divb
or
cmp
push
jbe
jbe
test
xorl
inc
popa
jnp
popa
or
repz
stos
mov
pop
out
addr16
adc
cmp
lods
push
xor
lods
add
mov
xor
push
sub
sbb
or
adc
sub
stos
jmp
mov
xchg
outsb
popf
sub
popf
in
pop
cwtl
dec
mov
mov
inc
xor
fstps
mov
sub
inc
sbb
pop
sub
pop
addl
aaa
pop
lcall
pop
and
jle
fmul
stos
test
test
adc
popf
in
xchg
or
fldt
adc
mov
add
es
loope
sub
xorl
lea
rol
daa
cmc
cmp
pop
pop
pop
jns
loope
xchg
jle
mov
push
add
sarb
cmpl
dec
lods
scas
imul
inc
dec
sahf
dec
push
push
xor
fisttps
pop
pop
add
aaa
jbe
xchg
mov
js
xor
je
cmpsl
xchg
mov
test
popf
push
jae
jne
or
push
sub
push
cltd
xchg
insb
dec
pop
push
dec
push
es
pusha
inc
aaa
push
loope
cmc
xchg
dec
pop
mov
add
jno
scas
pop
and
rolb
xchg
xchg
jmp
cmpsb
sub
sbb
lret
dec
gs
pop
call
or
sbb
adc
push
mov
aad
lret
lods
xchg
orl
adc
shlb
mov
fs
cmp
int3
mov
mov
insb
mov
cwtl
dec
popa
jmp
and
and
push
fsubs
lock
cmp
ljmp
dec
inc
loopne
adcb
jno
sub
xor
add
jb
lods
xchg
test
nop
int
sahf
mov
inc
jb
std
inc
mov
sbb
push
dec
or
push
sub
aad
bound
fdivrp
imul
add
aam
and
inc
out
xchg
xor
rolb
fstpt
jne
cmc
lret
adc
adc
push
insb
xchg
sub
mov
sub
jge
mov
sub
jl
dec
ja
shr
jo
loope
fcmove
sbb
nop
popf
lcall
xchg
xor
or
hlt
push
sub
mov
dec
dec
mov
adc
push
stos
sub
mov
std
xchg
mov
inc
pushf
lcall
sbb
lret
adc
mov
cmp
cmp
scas
das
in
xchg
lret
dec
roll
xchg
scas
add
push
push
xor
cmpl
dec
pop
xchg
xchg
pop
les
inc
insb
mov
fcomp
add
popa
xchg
sbb
inc
repz
nop
cmp
push
aaa
sbb
add
addr16
aad
in
loope
sbb
cmpb
xor
insl
mov
push
shlb
lock
imul
pop
mov
push
inc
fsubrs
cli
in
push
into
test
lret
js
push
stos
xchg
ror
or
icebp
xor
inc
lahf
ja
inc
and
push
mov
push
cmc
in
movsb
lahf
mov
lods
es
jne
cmp
cmp
mov
cmp
or
pop
push
inc
dec
insl
sbb
xchg
push
std
shll
fs
scas
test
mulb
push
sub
adc
mov
movsb
mov
pop
sbb
stc
mov
stos
shlb
es
jbe
int
jbe
jno
or
pop
sbb
mov
cmp
dec
push
lods
pop
iret
aam
cmc
outsb
je
aam
je
inc
xor
outsb
pop
testb
out
mov
or
sub
sahf
movsb
adc
sar
adc
sarb
cs
push
aam
loopne
adc
mov
in
xor
mov
adc
mov
ror
pop
xchg
or
xor
ss
jg
dec
push
mov
and
test
inc
fwait
cmp
loope
loop
in
shlb
out
push
jmp
pop
stos
sahf
ret
jbe
jmp
push
inc
mov
mov
lock
js
std
jbe
push
dec
mov
loopne
fimuls
fsubl
inc
xchg
sub
fwait
push
adc
mov
and
add
sahf
outsl
inc
bound
out
in
fists
push
ja
in
pop
stc
ja
cmc
lods
cmc
repz
push
mov
stc
out
fnstcw
fsts
mov
imul
adc
dec
inc
jo
out
mov
adc
jbe
out
push
inc
add
outsb
cli
adc
in
inc
mov
sbb
fstp
dec
mov
mov
inc
test
lds
frstor
xchg
lret
imul
dec
div
shrl
inc
mov
inc
into
xchg
adc
and
adc
xor
sub
mov
cmp
hlt
in
negl
ljmp
jge
pop
sbb
pop
hlt
cwtl
in
shrb
mov
arpl
pop
inc
lea
sub
mov
lods
fsubrl
sti
jns
aas
mov
faddl
outsb
popf
jne
cltd
add
xchg
mov
lahf
cmpsl
jge
add
sub
clc
movsb
cmp
mov
push
ljmp
jp
jns
nop
icebp
test
mov
jmp
in
or
popa
popl
add
jmp
dec
dec
mov
mov
ret
aad
sub
out
and
shll
clc
cmp
xchg
shl
xorl
jnp
stc
jb
lret
gs
andl
addr16
jae
xor
mov
mov
loop
jno
jl
mov
push
and
test
mov
popf
int3
pop
outsb
cmp
cld
mov
in
je
mov
xor
icebp
mov
mov
inc
sti
push
std
adc
stos
sub
xchg
cld
push
fadds
outsl
adc
adc
or
jg
in
or
insb
xchg
popa
push
cmp
scas
loopne
cmp
xor
pushaw
xchg
sar
cli
jl
out
loope
pop
repnz
popf
push
jbe
add
sbb
ds
inc
sub
mov
mov
mov
sub
or
rclb
ret
add
sub
aaa
insl
stos
push
clc
shr
test
or
jecxz
scas
cmp
je
gs
fwait
sub
mov
sub
xchg
mov
mov
xor
sarl
outsl
sti
jo
jb
sbb
call
mov
movsb
pop
push
cmp
mov
mov
inc
sbb
or
mov
inc
daa
push
cmpsl
jo
inc
and
cmpsl
addb
dec
pusha
aam
cltd
add
mov
in
ret
and
cmpsb
jg
aas
sahf
dec
cld
and
sbb
insb
clc
fwait
push
adc
cwtl
frstor
aas
pop
subb
inc
adc
repz
pusha
lods
insl
loop
or
or
stos
mov
and
inc
shll
scas
ret
and
ret
call
aas
jecxz
ret
roll
ficompl
sub
xor
xor
inc
push
movsl
and
addr16
icebp
and
in
mov
adc
push
mov
cli
in
sub
xchg
push
cmpsl
fisubl
mov
addr16
testl
addb
inc
push
test
push
gs
mov
or
xchg
xchg
or
int
push
push
orb
jp
xchg
dec
popa
dec
jp
jae
push
cmp
rolb
jne
aas
fwait
pop
mov
pop
jecxz
ja
adcl
sub
sti
jmp
cmpsl
sub
pop
xor
mov
nop
icebp
data16
push
ljmp
adc
movsl
adc
cmp
addr16
loop
push
test
push
inc
out
add
pop
mov
and
movsb
inc
lret
out
mov
or
fbld
sahf
rcr
loop
push
adc
jecxz
je
mov
inc
incb
lcall
add
xor
or
sbbb
pop
sub
inc
or
lock
cwtl
lods
and
xor
push
adc
arpl
push
xchg
out
sahf
xor
push
jnp
aaa
notb
xchg
cli
add
aaa
outsb
in
pusha
xstore-rng
cmpsl
inc
cs
in
xor
jb
push
gs
imul
jmp
pop
lds
jmp
sbb
or
adc
sub
nop
push
add
xchg
sub
test
jne
dec
inc
pusha
sbb
pop
test
xchg
out
aad
push
sub
jg
add
sbb
inc
je
or
daa
mov
mov
ds
push
cmp
pop
jbe
push
sub
cmp
sbb
pop
push
or
outsl
push
xchg
out
lock
insl
cmp
idivb
repz
cld
pop
jmp
loope
fwait
xor
lcall
xorl
insb
push
cmpb
in
popf
push
xchg
fistps
pop
mov
sub
push
mov
fisttpll
ds
jp
nop
mov
arpl
ret
movsl
cld
push
mov
jb
pop
popa
imul
test
sbb
adc
mov
out
xchg
ljmp
fs
pop
cmp
out
and
lods
add
loope
dec
lret
iret
ret
jg
mov
addr16
inc
in
jmp
bound
js
sub
ljmp
pop
inc
scas
iret
ljmp
shll
stc
add
pop
scas
mov
mov
jns
and
jno
test
cmpsb
and
xor
or
cmc
test
int
clc
cmp
mov
jg
jle
or
jno
invd
scas
mov
push
add
mov
push
pop
sub
cwtl
pop
adc
lods
movsl
jo
ljmp
enter
fisubl
mov
ds
std
cmp
cmp
cmp
sbb
pop
sbb
add
xchg
jne
insb
cmp
lahf
clc
adc
adc
imull
aam
sub
pop
insb
xchg
mov
or
repnz
stc
dec
mov
or
jae
mov
rolb
int3
xor
xor
fdivrp
ror
mov
mov
mov
fldt
int
aam
js
inc
aad
lods
pop
ret
pop
pop
sbb
xchg
mov
inc
mov
cmp
mov
inc
aam
cmpsb
enter
push
mov
sub
xchg
or
imul
jmp
scas
lret
pop
popa
adcl
movsl
pop
in
sub
shll
add
fidivl
sarl
inc
push
jne
sbb
cmpsb
xor
stos
lods
dec
and
mov
stos
jo
cmp
sti
adc
cmpl
iret
gs
imul
dec
add
and
cmpsb
push
pop
mov
mov
scas
fidivrl
aas
sbb
inc
fs
repz
xchg
pop
pop
cmp
clc
xor
or
stos
dec
notb
out
lock
xor
add
mov
and
imul
ficomps
xchg
lret
mov
push
pop
mov
pop
int3
mov
and
test
and
pushf
mov
repnz
dec
loopne
add
dec
xchg
out
mov
lret
ljmp
mov
dec
int
fsubp
je
xor
fwait
sti
xor
in
add
mov
sub
inc
loopne
outsl
rcrl
mov
int
mov
jb
fistps
shrl
adc
arpl
rcrb
fsubrs
into
pop
mov
fs
enter
cltd
or
lret
in
jp
dec
add
insb
mov
lock
mulb
mov
fcoml
popa
mov
mov
gs
in
jae
xchg
cmp
mov
xchg
push
test
dec
lcall
xor
sub
andl
jle
cs
sti
rorl
cmpsb
pusha
push
ja
pop
add
dec
in
inc
xor
mov
movsb
mov
mov
push
scas
xlat
adc
mov
push
push
sbb
xchg
out
negl
lret
dec
insl
mov
pusha
xchg
cmpsl
inc
sbb
decl
push
xchg
aad
pop
jo
into
and
jne
ja
fnstenv
popa
dec
cmp
leave
and
dec
cmpsl
or
push
ret
dec
arpl
sahf
in
sbb
rolb
scas
gs
and
in
sub
out
fs
and
rcll
xchg
adc
xchg
lahf
jl
flds
add
push
push
incl
outsl
push
sub
sub
out
ror
xchg
add
bndldx
push
addb
pop
sub
xchg
test
popa
inc
sarl
es
sub
or
sti
push
pop
les
or
clc
push
clc
jnp
out
mov
jecxz
pop
mov
pusha
in
jle
aad
cmp
and
and
inc
aam
xchg
into
mov
push
pop
dec
mov
mov
fs
sub
pop
or
xchg
fcom
mov
pushf
sub
mov
out
cmp
in
push
aad
ja
push
mov
ja
stos
stos
or
mov
stos
gs
adc
jl
loope
adc
clc
loop
pop
shr
xlat
mov
cmp
stos
and
or
clc
and
mov
xchg
int3
mov
jg
inc
pop
or
adc
pop
and
lea
aam
dec
imul
push
jns
or
cmc
pop
in
repnz
in
into
pop
shll
push
arpl
jbe
xchg
pop
jge
and
cmp
ret
leave
sbbb
xchg
cmp
std
ds
aad
cmp
test
movsb
popa
mov
add
xor
mov
stos
pop
shrl
push
mov
test
fcompl
pop
jmp
xchg
jae
jp
aam
mov
sti
out
movsl
out
inc
xor
daa
sarl
ja
sub
mov
sbb
mov
or
mov
push
and
shll
cwtl
sub
sti
inc
xor
push
xchg
out
imul
lahf
push
mov
mov
xor
mov
insb
push
sub
cmp
out
ret
mov
lcall
mov
lods
loopne
leave
jmp
jo
mov
cmp
cwtl
rcll
pop
add
xchg
jns
cs
xchg
and
outsl
mov
mov
mov
dec
bound
pop
sbb
jns
js
push
push
xor
push
jb
in
lcall
pop
aas
and
arpl
xchg
push
fisubs
jb
call
aaa
adc
es
cmp
push
sbb
sbb
jle
pop
push
jge
mov
and
shl
push
daa
int
jl
dec
mov
shll
and
and
adcb
addr16
imul
iret
add
xchg
push
add
aas
xor
jmp
push
inc
call
sbb
xchg
xor
pop
lods
leave
lcall
pushf
lret
mov
jne
sub
test
and
les
add
mov
mov
mov
and
nop
in
out
pop
jg
insl
in
pop
mov
adc
sti
push
jmp
fdivrp
inc
jbe
push
or
or
out
ds
mov
and
sbbb
popf
dec
inc
leave
mov
sub
jno
jp
xchg
push
mov
rorl
out
add
mov
int
imul
arpl
push
lcall
pop
int
jle
mov
cmpsb
rcrl
fstpl
addr16
jl
sahf
xchg
sub
cmp
aaa
int
push
lret
data16
pop
pop
jnp
pop
mov
or
nop
mov
adc
and
xor
mov
jp
xchg
shl
movsl
mov
dec
leave
sub
sbb
xor
pop
lea
xor
stc
and
in
mov
js
pushf
insb
cmp
in
pop
push
rol
or
sbb
jle
push
sti
mov
shlb
dec
cmp
shlb
dec
subb
loop
int
mov
and
cwtl
xor
bound
scas
call
mov
xor
mov
ret
xor
fstps
xor
push
lea
jp
cmpsb
xor
jp
sahf
jg
fdivs
sahf
jbe
mov
inc
push
or
fimuls
add
insl
push
jecxz
filds
dec
xor
push
adc
mov
repz
popa
aam
mov
loop
hlt
daa
inc
jno
mov
dec
or
mov
cmpb
xchg
push
loopne
pop
pop
mov
sahf
jns
inc
shrl
cmc
shll
ljmp
sbbl
or
imul
notl
xchg
lcall
fdivrl
inc
add
jbe
neg
mov
mov
in
dec
faddp
jp
inc
or
jl
incl
dec
xchg
adc
dec
cmp
mov
jno
xor
loope
mov
in
cld
xchg
lret
stos
repz
dec
mov
mov
in
push
rolb
cmp
or
mov
inc
pop
xlat
pop
inc
cmpsb
mov
cmp
sub
imul
test
dec
xchg
jbe
push
pop
push
aaa
or
jmp
mov
ja
sbb
into
loopne
test
add
sbb
mov
add
cli
lds
and
lcall
mov
lret
aad
movsb
mov
pop
xchg
jmp
dec
cmpb
loope
lds
xchg
andb
sbb
or
pop
test
add
scas
sub
sub
out
add
aad
cmp
loopne
outsl
imul
or
adc
jecxz
add
aaa
xchg
test
out
pushf
pusha
pop
das
adc
pop
fiaddl
popa
jb
xchg
das
fcompl
addb
pop
or
mov
icebp
enter
bound
scas
jb
xchg
loop
lea
in
cmp
out
cmp
sbbb
dec
shrl
dec
out
cmp
cmp
faddl
xchg
mov
ss
je
mov
mov
fsubr
push
mov
push
mov
or
stos
sub
jle,pt
add
jp
inc
add
adc
jge
in
clc
leave
aas
and
xchg
sti
fistpl
xchg
dec
and
mov
imul
push
push
int3
or
or
xchg
xchg
push
int3
loope
clc
pop
dec
push
push
push
jle
loope
jae
popf
jmp
or
push
and
pop
adc
mov
xchg
pop
das
sahf
shll
push
dec
xchg
test
or
jl
add
or
inc
dec
test
xchg
push
pop
or
es
lea
ss
int3
vpandn
inc
ret
pop
fidivl
dec
lret
std
sub
rcrb
cmp
xchg
mov
sbb
fsubr
xor
or
xchg
sub
cld
cmp
stos
push
add
cmp
in
shrb
mov
int3
jp
lds
sub
dec
dec
jae
aaa
jl
andl
sahf
mov
or
fsubl
fiadds
pop
xlat
jle
mov
lcall
ret
fldl
add
dec
jl
rcll
jg
mul
fsub
mov
sub
lcall
push
lods
or
xchg
mov
sbb
int
lods
shrl
gs
mov
cmpsl
outsb
jecxz
ljmp
push
notb
mov
xor
mov
and
lock
push
ja
lret
jns
cmp
hlt
jno
inc
fbld
adc
das
xlat
pop
addb
clc
adc
in
push
sahf
aas
pop
adc
push
xor
outsb
movsb
rcr
lock
stc
ret
cmp
sbb
incb
cmpsb
out
leave
xchg
rcll
or
inc
mov
stos
dec
xor
out
dec
push
fcomps
sbb
dec
cmpsl
pop
daa
mov
fcoms
push
test
xchg
xchg
and
sub
lds
repz
dec
inc
adc
adc
lret
pushf
cmpsb
jp
mov
add
cltd
bound
or
jb
push
outsb
dec
out
js
in
negl
in
and
xor
dec
mov
stos
push
dec
add
mov
xchg
aas
pop
int3
push
xchg
or
xchg
dec
cmp
push
ficomps
mov
push
pop
pop
lret
movsl
vrsqrtps
pusha
pop
movsb
in
push
inc
gs
movsb
call
jns,pt
mov
inc
xchg
sti
sub
in
fistpll
push
xor
icebp
push
mov
enter
push
fidivrl
pop
fwait
push
fadd
je
sub
jne
jl
and
cmp
in
adc
or
push
jl
adc
push
xchg
std
cli
data16
cmp
fsts
mov
jge
inc
mov
push
add
jne
push
bound
sbb
fsubs
pusha
adc
push
sub
data16
test
cmp
push
popf
jno
test
cs
mov
enter
sbb
dec
lea
out
dec
mov
mov
push
cli
in
icebp
inc
hlt
or
arpl
xchg
mov
dec
fisubl
scas
in
pop
int
cmp
xorb
insb
push
add
sub
jle
rcrl
pop
xor
inc
fcomp
in
mov
adc
dec
add
lods
and
and
push
jo
xchg
sub
dec
lea
mov
insl
add
popa
addr16
out
push
movsl
push
fidivrl
fidivs
ds
adc
lea
sbb
addr16
mov
push
jg
mov
mov
xchg
adc
insl
mov
cmp
mov
rorb
clc
inc
rcll
cmpsl
pop
xor
xchg
inc
movsl
stos
cmp
insb
rcl
nop
jne
stos
je
cld
dec
push
addl
cmp
mov
sbb
push
cltd
test
cmp
stos
jb
pop
js
cmpsl
xchg
aaa
cli
ja
pop
setns
xor
dec
ret
pop
add
xchg
jge
mov
and
movsb
out
jmp
sbb
int
loope
adc
pop
sbb
jo
mov
sub
stc
shrb
inc
adc
add
dec
inc
aam
pop
in
fdivrs
out
sti
or
sub
sub
and
mov
sbbb
jl
nop
rcl
jnp
mov
clc
ret
dec
aaa
ss
mov
sub
mov
bound
jge
mov
xchg
mov
daa
js
mov
mov
xchg
dec
xor
icebp
popf
or
mov
jmp
xchg
push
imul
mov
mov
pop
and
je
mov
iret
in
inc
fadd
or
mov
ljmp
andb
xchg
hlt
adc
xchg
add
lods
call
jge
imul
je
inc
xchg
pop
les
mov
rcl
cmp
fstps
ficoms
mov
xchg
sarb
push
getsec
test
or
ficoms
testl
test
enter
arpl
loope
jp
dec
enter
pop
jmp
xchg
mov
fdiv
leave
jno
pop
adc
mov
push
mov
xchg
cmpsl
scas
inc
jge
pop
mov
repz
popa
rcrb
inc
mov
jle
pop
fcomi
jo
arpl
or
stc
jmp
pop
xor
lea
cmp
mov
pusha
lcall
adc
insb
cld
pusha
mov
icebp
mov
inc
mov
mov
les
mov
jg
imull
sarb
dec
pop
xchg
jl
es
mov
bound
cwtl
mov
arpl
xchg
xor
cmp
mov
pop
nop
scas
data16
lods
mov
in
pop
push
or
adc
sub
push
mov
sub
or
ret
cmp
in
fldenv
push
pop
mov
and
out
pop
outsb
xor
jge
sbb
push
add
iret
subl
sub
pushf
out
into
mov
jne
arpl
stc
pop
and
xor
jle
jl
xchg
ds
in
shlb
inc
jmp
cmp
fdiv
in
mov
cmp
pop
decb
add
stc
inc
xor
sbb
push
push
xor
adcl
mov
lret
je
mov
mov
loope
ret
sbb
mov
cmpsl
pop
mov
push
push
bound
and
daa
jl
call
test
mov
and
nop
ljmp
fisttpl
or
add
sti
es
xor
mov
in
scas
das
pop
aad
cmpsb
cltd
outsb
sub
rclb
repz
mov
mov
mov
xlat
call
fstl
cmp
mov
fwait
add
inc
jmp
call
and
js
cmpsl
push
pop
mov
ds
xchg
sbb
daa
aam
push
cs
ret
les
loop
stos
aaa
cmp
push
inc
aad
lea
xor
out
out
adc
cmpsb
fs
sbb
or
and
cmp
sbbb
cmp
inc
xchg
int3
add
xchg
cmp
pop
xchg
or
mov
cmpsb
jge
mov
aad
fsts
pop
enter
daa
imul
add
es
cmpsl
jnp
xchg
lock
pop
int
fadds
pop
pop
add
add
inc
fnstcw
xor
gs
add
xchg
adc
xor
mov
scas
mov
jp
sub
lret
shll
aam
insl
cmc
insb
mov
add
iret
inc
hlt
outsl
das
push
xor
xchg
cmp
jnp
in
roll
mov
jp
mov
xchg
bound
inc
or
dec
mov
xor
test
js
fbld
fsubrs
jmp
adc
add
shlb
push
push
pushf
pop
xchg
les
jns
sbb
cmpsl
inc
ret
or
sbb
and
ljmp
fistps
mov
xchg
jnp
inc
ja
out
in
outsb
pop
xchg
sbb
in
or
inc
xchg
negb
cmc
push
push
or
mov
or
sbb
mov
stc
adc
ja
shrl
pop
lods
into
sar
les
cmp
arpl
ss
stos
hlt
notl
out
mov
cmp
fs
ljmp
iret
push
jo
sub
fistpll
push
adc
popa
mov
add
outsl
fsubrl
xchg
outsl
push
xchg
movzwl
call
sets
jbe
jo
rcrb
cwtl
or
ja
je
jo
push
xor
jne
xor
fiaddl
mov
and
pop
mov
fdivrl
pop
mov
movsl
or
nopl
int3
push
leave
adc
fs
mov
imull
jmp
sbb
xchg
notl
fidivs
in
fisubrs
je
jnp
daa
fidivs
loop
inc
int
xor
and
jp
xchg
jmp
mov
sub
ret
cltd
lods
inc
and
or
pop
outsb
xchg
ds
mov
adc
jecxz
adc
jmp
sbb
notb
xchg
lock
in
sbb
or
mov
lea
or
insl
sbb
hlt
pop
push
and
int3
aam
mov
fisttpl
jo
aam
xor
lods
or
scas
pop
mov
pop
pop
pop
out
int3
mov
mov
inc
and
ds
ljmp
sub
xchg
loope
jg
aad
pop
jbe
mov
mov
jl
stos
fwait
subl
and
rcr
mov
fisubrs
int
push
inc
add
sub
in
pop
sbb
repnz
lret
xchg
bound
or
rcrl
dec
mov
mov
inc
and
into
les
xchg
push
mov
std
es
out
das
inc
cwtl
jg
leave
jp
outsb
adc
inc
shlb
or
jbe
add
push
cmc
cmp
iret
fdivrs
call
jge
int3
cmp
das
or
mov
out
adcl
inc
xorb
lret
scas
push
sar
popa
cmpb
out
fwait
mov
sub
bound
hlt
mov
jle
ljmp
dec
nop
sub
inc
icebp
fcompl
mov
test
add
sti
cmp
inc
pop
sbb
push
sbbb
mov
adc
pop
adc
cmc
lret
dec
fists
rcl
aad
insl
sti
sub
xor
icebp
out
and
pop
cmp
hlt
test
pop
xchg
inc
add
imul
and
lods
and
mov
mov
ror
sbb
jmp
xor
pushf
push
mov
or
xchg
push
mov
pop
mov
xchg
fptan
adc
das
idivb
loope
cmp
and
aam
cmc
clc
sub
dec
adc
and
pop
pop
jl
jecxz
jnp
xor
fwait
xchg
xor
out
pushf
dec
push
mov
aam
cmpsl
xlat
push
mov
mov
iret
push
clc
jno
dec
in
cmc
cwtl
xchg
ss
pop
outsb
mov
sub
dec
dec
cld
movsl
fmuls
ret
xchg
cltd
clc
add
ljmp
push
mov
lods
push
repnz
mov
mov
in
subl
cmp
add
push
lock
jl
mov
shll
mov
mov
jns
int3
add
test
cmp
inc
pop
mov
jl
ds
dec
repnz
je
add
movups
cmp
int
sti
icebp
std
mov
in
ds
stc
xor
iret
jb
xchg
add
mov
movsl
fs
stos
imul
shrb
pop
es
mov
rcll
and
mov
jb
fisubl
mov
or
pop
cmpl
jnp
cltd
inc
sub
sbb
add
clc
das
pop
xor
push
inc
jle
lods
sub
cli
mov
fs
orb
mov
daa
and
inc
adc
or
jmp
inc
lret
stc
sti
sti
push
mov
test
cs
movsb
imul
add
xlat
cli
push
outsl
mov
sbb
outsb
sub
xchg
sbb
sti
stos
jb
push
jle
or
pop
or
mov
add
lock
pop
roll
jb
ljmp
adc
push
cld
in
pusha
adc
jle
arpl
mov
lds
xor
push
sbb
pop
sbb
mov
bound
jle
add
push
scas
jno
and
sahf
mov
push
inc
and
mov
and
mov
pop
xor
sub
jnp
jg
push
xor
ljmp
std
sti
jg
adc
mov
mov
mov
jo
outsb
in
jnp
and
stc
mov
push
pop
jmp
aad
test
daa
aas
or
cwtl
push
sbb
enter
inc
lret
call
fucomp
pop
or
xchg
imul
ja
xchg
pusha
mov
das
and
mov
inc
rcrb
mov
jns
icebp
ficompl
lahf
inc
jle
push
xor
call
jl
dec
pop
mov
sbb
or
mov
rol
push
fisubl
dec
enter
xchg
out
loope
ss
in
ljmp
in
ret
mov
jns
fistps
dec
or
mov
push
or
mov
jge
inc
insb
into
popf
sub
std
sarb
pop
orb
dec
js
adc
mov
insl
call
dec
shlb
lds
sbb
filds
xchg
icebp
scas
cmc
adc
sbb
call
sahf
test
cmp
test
pushf
test
push
mov
lds
mov
or
inc
mov
lret
mov
je
ds
pop
pop
push
push
jns
push
lret
data16
test
mov
in
roll
push
scas
xchg
scas
push
pushf
scas
movsb
mov
mov
clc
cli
or
rcll
lahf
dec
and
cltd
adcb
jg
adc
js
aam
scas
xor
pusha
mov
xor
lret
jno
adc
int
xchg
cmc
pop
shll
xor
xor
xchg
cli
pop
xchg
xor
icebp
jbe
push
or
loopne
scas
and
in
stos
pushf
js
cmp
into
mov
das
cld
mov
dec
cmpsl
arpl
mov
jne
inc
bound
mov
dec
test
ja
fdiv
rcr
xchg
enter
dec
inc
mov
xchg
lret
push
pushf
scas
push
imul
sarl
or
enter
mov
and
in
jmp
out
jge
movsl
pusha
pop
lahf
jle
loope
mov
mov
mov
push
and
pop
sbb
mov
push
xorl
dec
xchg
dec
mov
dec
sbb
push
xchg
push
jmp
icebp
cmp
jle
mov
stos
scas
mov
out
sub
mov
sub
test
movsl
mov
sbb
or
fcompl
push
icebp
enter
lods
mov
push
jecxz
ja
fadd
pop
push
ljmp
dec
aad
les
fwait
out
push
jno
and
jl
cmp
xor
loopne
leave
and
add
pushf
daa
mov
cmpsb
jb
or
mov
and
pop
and
cmp
fldcw
mov
sub
mov
pop
cmp
je
jne
dec
popa
mov
int3
jbe
mov
in
adc
insb
dec
fs
and
mov
or
in
mov
jb
ss
xor
pop
pop
outsb
insl
scas
add
push
inc
add
adc
push
notl
cmpsb
daa
mov
lea
jnp
lods
pop
fmuls
sub
mov
sub
movsl
rcr
and
and
faddl
xchg
push
fisttpl
push
in
mov
std
in
loop
loope
ret
cmc
outsb
arpl
fmul
cld
xchg
sub
sub
movsb
sti
and
mov
cmp
mov
or
lcall
xor
or
mov
add
sbbl
fisttpl
xchg
inc
lods
push
inc
outsb
mov
mov
popa
mov
into
xchg
pop
cld
mov
cmp
jno
inc
mov
das
sbb
dec
fwait
xchg
push
mov
push
inc
sub
push
dec
fidivs
sub
dec
or
add
repz
bound
daa
lea
into
insb
movb
lcall
imul
add
addr16
lret
mov
je
rorb
sbb
mov
xchg
ret
pop
fadds
add
subb
lret
arpl
jne
icebp
addr16
pushf
cmpsb
sbb
out
or
fnstsw
imul
jge
out
fidivrl
mov
xor
ds
shlb
dec
add
sub
cmp
push
jle
in
cld
push
pop
jmp
nop
in
dec
data16
cltd
sbb
pop
loopne
and
stos
aaa
push
fisttps
fildl
ljmp
aaa
dec
sahf
lea
adc
xchg
ljmp
repz
push
push
xchg
sub
pop
xor
dec
mov
sbbb
mov
leave
lds
repz
jns
repz
sbb
je
popa
xchg
cli
and
xlat
add
mov
or
cmpl
mov
aam
pop
loop
push
dec
jmp
jl
push
sbb
ss
pop
int
scas
outsl
mov
xor
jge
fcmovnbe
cli
call
popf
stc
mov
bound
cmpsb
idivb
test
out
and
mov
sbb
cmpsb
pop
add
or
hlt
mov
imul
sbb
enter
lods
cmp
in
daa
stos
xor
repnz
mov
pop
shr
addr16
aam
pop
js
pop
inc
popa
fldenv
jnp
push
or
fnsave
mov
mov
and
movsb
mov
or
xchg
jns
and
sub
nop
push
xor
clc
mov
test
mov
out
sbb
in
inc
xchg
outsl
cmp
std
mov
test
xor
add
xchg
hlt
lcall
decb
lods
dec
sub
idivl
gs
inc
fs
xor
aad
mov
cmp
pop
ret
loope
repnz
lds
shll
cwtl
pop
aam
add
stos
test
mov
cmc
jns
inc
loopne
fistpll
pop
jl
or
cmp
repnz
mov
add
andl
popa
fdivrl
xchg
aam
and
pusha
push
insl
dec
andnps
ja
mov
shl
out
sub
mov
adc
pop
cld
in
or
loopne
inc
dec
jmp
loope
mov
nop
outsl
jo
mov
cmp
sbb
or
in
stos
pop
je
lahf
insl
lret
in
enter
push
hlt
mov
and
mov
insl
pop
adc
bound
sbb
mov
and
std
and
pop
out
pop
xor
jecxz
and
cltd
push
cmpsl
xchg
sbb
aam
xchg
mov
mov
rcll
fdivs
iret
fwait
or
loop
hlt
bound
xor
jg
sbb
jmp
adc
cltd
idiv
lcall
dec
sub
jnp
fs
ret
sub
mov
xchg
ret
xlat
imul
cs
add
pop
outsb
out
mov
fs
imul
fildll
mov
jl
mov
daa
adc
sti
or
testl
sahf
in
sti
aaa
pop
adc
call
dec
loopne
mov
andb
negl
sahf
cmp
sbb
test
in
insb
arpl
pop
jns
lods
aad
std
cmc
fsubrs
xor
inc
imul
insb
xchg
add
out
mov
ror
int
pusha
cs
pop
jnp
icebp
xchg
out
dec
mov
mov
push
loop
cwtl
data16
and
push
in
test
dec
dec
mov
push
enter
test
add
mov
inc
paddw
cmpl
jno
sub
lret
lea
test
adc
sahf
outsl
popf
or
fstpl
or
inc
mov
mov
sbbl
mov
ret
push
xor
sbb
inc
into
and
inc
pop
mov
nop
js
or
inc
mov
pusha
pop
xchg
xor
lahf
lret
roll
movsb
mov
adc
or
adc
out
mov
sub
adc
push
fdivl
aam
lcall
aad
inc
ds
sub
rol
fistpll
rcr
fcoml
mov
xchg
add
scas
push
jns
or
sbb
add
fwait
mov
ss
and
xchg
rolb
daa
xchg
jl
mov
and
arpl
std
cwtl
lret
into
mov
lcall
inc
or
cmp
filds
outsl
arpl
or
xor
mov
mov
mov
dec
pop
mov
xor
int
add
sahf
jnp
fildl
mov
sub
test
push
sub
out
mov
cmp
in
imull
popf
jecxz
shlb
cmp
sti
cmpsl
mov
xor
mov
cmc
mov
adc
dec
call
fcomip
mov
lods
aad
sbb
in
test
dec
ss
sub
pop
mov
scas
jb
pop
push
lds
fwait
jl
movups
inc
rcl
icebp
mov
jmp
lods
xor
stos
inc
fiadds
mov
push
and
test
push
push
mov
xlat
sub
push
dec
aad
imul
popf
inc
and
shl
jbe
sub
push
add
outsl
call
cmp
jle
lea
aaa
cli
cld
mulb
idivb
push
push
xor
out
in
ljmp
and
push
sti
and
out
inc
negb
loop
cmpsb
andb
mov
xorb
dec
mov
adc
mov
insb
insb
hlt
ljmp
add
pop
mov
in
leave
sub
hlt
cmp
mov
add
mov
je
jle
addr16
stc
cmpsb
or
cmc
pop
add
hlt
enter
scas
movsl
add
add
std
pop
pop
push
pop
xor
dec
fmul
insl
and
sbb
test
in
insl
into
addr16
mov
inc
pop
xor
ljmp
clc
push
cmpl
cmp
push
mov
xor
mov
jmp
in
push
xchg
dec
xor
inc
lock
lods
inc
or
add
add
cmp
jl
sbb
push
clc
fs
mov
loopne
jg
adc
aad
sbb
sub
clc
push
scas
stc
rolb
pusha
mov
mov
fwait
cmp
lock
pop
test
xchg
orb
shll
xchg
xchg
and
das
jmp
inc
addb
adc
adc
out
or
test
repz
mov
push
nop
xchg
outsl
inc
loope
xlat
sub
imul
test
sti
sbb
call
ljmp
push
sub
out
gs
inc
or
dec
xchg
lret
addl
xor
mov
xchg
mov
sub
inc
adc
xorl
mov
mov
adc
orb
fldl
inc
sbb
cmpsb
sub
pop
cmc
xchg
mov
pop
push
int
shlb
cmpsl
jmp
sub
or
mov
addb
and
imul
sub
pop
mov
inc
loopne
pop
fisubs
or
adc
push
ljmp
add
xchg
or
ds
add
jbe
mov
inc
les
sub
aam
add
or
push
add
mov
and
je
sbb
pop
repnz
xchg
add
pop
stc
push
loope
add
mov
das
sub
sub
sbb
pop
or
cmpb
aaa
dec
adc
cmp
jecxz
pusha
fildl
and
lcall
iret
cmp
nop
hlt
lret
push
stos
aas
pop
dec
clc
or
mov
xlat
insl
inc
push
addr16
ss
sbb
popa
dec
sub
das
cmc
pop
xchg
push
test
push
jns
fbld
jb
mov
nop
aas
mov
xor
sahf
inc
sbb
fildll
clc
adc
sub
jno
fcoms
dec
ret
fcoml
jmp
rcl
mov
adc
cmpsl
sub
mov
add
pop
loope
sti
mov
and
dec
outsl
add
cmp
and
out
sbb
and
xchg
push
cltd
sbb
mov
adc
cvtpi2ps
call
out
lods
or
stos
jle
fcom
sbbb
mov
adc
popf
or
pop
mov
test
insl
mov
jmp
lea
mov
jg
hlt
aaa
cs
movsb
pop
lods
aam
xchg
push
jg
sbb
gs
pop
mov
jg
jae
sbb
xlat
adc
mov
fstpt
lods
in
xlat
pop
xchg
sbbb
adc
notl
inc
out
xorl
push
js
and
ret
xor
out
mov
shll
in
ss
adc
in
lock
inc
out
cli
aad
sti
xor
sub
jae
test
sbbb
icebp
mov
and
push
fs
mov
inc
dec
dec
nop
test
imul
add
mov
rolb
xlat
jl
mov
mov
sbb
sub
sarl
mov
sbb
aam
and
inc
add
push
test
pop
cmpb
cmp
xchg
ret
or
dec
mov
jge
scas
pop
ss
dec
push
scas
std
and
add
fisttps
mov
cld
sbb
cmpsb
and
add
outsb
sbbl
sub
mov
and
jle
repz
orl
sub
mov
adcl
fs
jo
pop
das
lret
pusha
aam
push
popa
insl
mov
repnz
sub
adc
adc
frstor
xor
out
jns
pop
sarl
mov
dec
jne
and
jle
int3
adc
movsl
push
js
dec
cmp
inc
pop
sahf
pop
in
jae
mov
enter
test
mov
xor
mov
push
je
jecxz
jbe
popa
aam
out
jae
cmp
rcll
mov
sahf
push
lret
cmp
jno
mov
enter
jno
jbe
mov
cmp
xchg
jbe
pop
movsb
adc
orb
pop
inc
pop
mov
cltd
dec
jno
roll
fisttpl
push
xor
inc
stc
jl
xchg
pop
fnsave
cmp
sub
xor
add
aas
inc
into
xchg
in
cmp
sub
mov
jne
test
adc
arpl
or
jo
sbb
sbb
adc
cmpsb
mov
pop
fwait
dec
in
jo
jp
jns
je
out
ljmp
lock
movsl
push
jne
rorl
xor
pop
cmc
outsl
stos
into
push
push
test
rorl
fisubl
push
xchg
mov
call
test
shrb
adc
leave
gs
adc
jecxz
fsts
lret
fcomi
int
and
test
std
leave
cmp
mov
dec
imul
fadd
cmpsl
in
mov
mov
xor
push
jo
aaa
inc
adc
push
add
or
inc
pop
ret
fwait
adc
aam
mov
fcomps
fsubp
mov
mov
pop
out
mov
dec
xchg
push
mov
pop
out
pop
nop
lea
imul
push
int
xchg
jns
ficoms
int3
push
test
fmul
fistpl
xchg
iret
in
pushf
out
mov
dec
add
enter
cwtl
mov
pop
sbb
add
sti
push
lods
push
inc
jb
orl
inc
jno
xchg
cmc
dec
scas
mov
ja
rolb
mov
cmp
and
mov
hlt
adcb
inc
and
xchg
cmp
mov
adc
cmpsl
xchg
or
fnstenv
mov
arpl
dec
loope
es
jl
arpl
and
loopne
jnp
sahf
in
fsubrl
in
ror
sbb
dec
xchg
and
push
mov
push
push
jp
dec
je
pushw
cmpsl
mov
pusha
sbb
shld
push
into
sub
lods
dec
jae
xor
int
cmp
mov
sub
jge
inc
sbb
push
and
mov
xchg
pushf
ja
jne
repz
repz
jns
inc
jecxz
out
sub
mov
pop
and
xchg
mov
jo
add
sbb
aas
loop
loopne
aaa
push
mov
mov
sbb
iret
sbbb
fmull
sub
nop
push
call
xor
stos
xor
sbb
cmp
das
out
mov
push
sahf
jge
or
add
xor
mov
dec
push
mov
xchg
jne
and
repz
xchg
push
sti
nop
sahf
mov
lahf
pop
cmpsl
xchg
xchg
cli
pop
jp
gs
mov
sub
or
pop
inc
fsubr
xor
or
inc
cwtl
mov
cltd
pop
sub
mov
cmpsl
lret
rep
in
pop
imul
sub
pop
cmpsl
repz
jge
dec
clc
mov
sbb
inc
pop
scas
sahf
jl
fwait
hlt
std
mov
mov
sbb
arpl
mov
int
jno
sbb
test
shll
push
and
shll
push
jbe
xor
mov
push
data16
data16
lods
inc
dec
mov
jle
aad
and
mov
mov
ds
dec
pop
fiaddl
lcall
dec
clc
or
leave
inc
insb
and
push
or
dec
cmpb
test
in
jnp
fmull
inc
into
xchg
mov
outsl
hlt
or
dec
daa
xor
int3
mov
clc
jmp
data16
mov
lds
push
testl
add
repnz
insb
pop
push
sbb
fsubrl
jmp
push
mov
jl
outsl
cltd
imul
scas
inc
notl
and
mov
punpckhwd
dec
data16
push
xor
push
inc
push
cs
cmp
xchg
movsb
push
aas
outsl
or
lcall
stos
js
fmull
xor
adc
and
out
imul
and
sarl
orl
int
jbe
in
adc
jo
outsl
pop
xchg
rcr
sbb
int
xor
cmp
xlat
add
iret
cltd
and
dec
mov
stc
push
shrb
stos
imul
cli
mov
inc
add
aad
adc
mov
fs
mov
fistpl
sub
jge
aam
or
cmp
dec
popf
addl
fldl
xchg
and
or
pop
mov
sahf
add
rcll
arpl
arpl
jae
mov
mov
inc
jge
sarb
lea
test
movsl
jns
ljmp
sbb
jns
std
into
pop
ja
scas
xchg
cmp
sub
or
and
pop
adcl
in
xor
mov
add
jnp
and
pushl
arpl
rclb
ss
mov
mov
pop
out
clc
scas
adc
jae
cmpsb
xor
lahf
addl
inc
cmc
jns
mov
dec
outsb
push
into
push
jb
xlat
rcll
lcall
mov
adc
jno
mov
out
jg
gs
pushf
outsl
jb
lahf
mov
ret
fmull
sub
outsb
outsl
and
mov
pop
pop
mov
out
mov
pop
lret
rcr
in
pop
arpl
mov
add
xor
mov
mov
in
imul
mov
or
lcall
push
pop
lea
pop
int
jge
dec
cmp
loop
rcrb
jne
cmp
adc
dec
mov
inc
loope
jne
pop
aaa
dec
daa
pusha
dec
test
mov
leave
cmp
adc
out
xchg
mov
mov
fildl
scas
adc
xor
adc
lret
or
es
inc
shll
push
push
imul
sarb
and
js
int
ffreep
sbb
call
mov
xor
add
jl
and
stos
mov
aaa
test
data16
mov
loope
and
push
stos
xchg
inc
repnz
push
inc
push
cmp
lea
pop
dec
fidivrs
lock
int3
or
testb
cwtl
adc
dec
and
pop
dec
mov
sub
push
sub
out
adc
dec
mov
mov
xor
sub
shrl
add
fwait
mov
aas
push
inc
jge
cmp
jmp
ljmp
inc
test
int
xchg
mov
sbb
lcall
xchg
lods
cmp
xor
andl
out
jb
imul
cmpb
div
stc
pop
filds
mov
mov
xor
int3
faddl
lods
xchg
sub
xchg
inc
sti
pop
xorl
popa
repz
aam
cli
int3
or
cmp
scas
mov
into
dec
or
bound
sub
jg
popa
mov
lret
inc
scas
inc
xor
jp
mov
out
inc
ljmp
or
leave
mov
stos
add
les
xchg
ficoms
stc
mov
dec
xchg
inc
mov
sti
repz
rcll
lock
pop
xchg
movsb
mov
sbb
add
fildll
mov
sub
inc
inc
lods
lret
pop
jnp
push
xchg
mov
ret
adc
lret
in
jmp
inc
mov
pop
sarl
cmp
cmc
stos
mov
lods
imul
jge
stc
clc
pop
aaa
inc
inc
jle
cwtl
leave
pop
cmp
xchg
mov
lock
aam
add
lahf
pop
push
push
xor
lahf
hlt
ljmp
bound
fists
add
pop
inc
arpl
inc
mov
call
mov
xchg
xchg
sti
and
xor
xchg
rcll
jb
inc
ss
iret
mov
cmc
mov
jmp
pop
mov
sub
dec
pop
pusha
push
popa
mov
mov
push
sarl
dec
xlat
push
popa
or
repnz
mov
mov
ja
out
sub
outsl
fldenv
inc
jne
mov
out
pushl
into
insb
dec
jns
pushf
add
xchg
sbb
or
imul
mov
mov
mov
fdivrs
inc
out
rcrb
into
int3
pop
mov
and
inc
pop
or
cmp
and
xchg
push
int3
pusha
and
inc
sbb
fcmovb
flds
pusha
cli
mov
xor
mov
xor
fs
push
xchg
test
jbe
and
lock
pop
mov
sub
and
mov
add
and
pop
xchg
test
adc
jae
aam
fidivrl
inc
inc
dec
xchg
mov
cmp
jge
scas
cmp
push
mov
sub
mov
js
or
ja
sub
inc
ljmp
mov
sbb
clc
cmp
leave
popf
aad
mov
xor
cmp
test
xchg
orb
arpl
ja
fisttpl
push
mov
cwtl
addr16
dec
subl
xor
inc
cli
jg
jmp
repnz
jl
insl
ja
mov
and
cs
enter
mov
xchg
sbb
shlb
or
mov
in
ljmp
add
fidivs
daa
inc
push
mov
or
clc
add
push
push
jnp
adcb
scas
inc
icebp
ficoms
add
adcl
rolb
out
daa
mov
add
sarl
std
cwtl
push
mov
out
sbb
out
cmp
sbb
and
int
out
pop
pop
rdpmc
iret
mov
push
inc
ret
push
push
mov
push
mov
mov
push
xor
mov
jno
pop
mov
movsb
movsb
sbb
in
sbb
movsl
xlat
fsubrl
push
mov
loopne
pop
ret
mov
lcall
cmp
and
jb
and
fs
in
jle
shr
adc
and
sub
outsb
lock
aas
rorl
push
xchg
add
js
push
fnsave
inc
aas
nop
cmp
mov
xchg
pop
mov
loop
add
mov
dec
loope
mov
or
rcl
mov
fidivrl
shlb
testl
mov
mov
cmp
jmp
jns
imul
sub
and
inc
inc
aam
stc
adc
cld
adc
popf
das
pop
sub
push
add
jmp
aad
and
enter
cs
fbld
push
out
ds
orl
addr16
stos
pop
fidivs
es
movb
arpl
adc
mov
adc
fwait
loope
mov
sbb
pop
aad
jae
es
pushf
aad
jae
dec
and
lret
in
popf
sbb
ja
adc
aas
mov
std
fistl
sbb
push
and
stos
or
adc
in
shrl
jne
mov
mov
cmp
sbb
pop
mov
movsb
mov
pop
add
dec
repz
jecxz
outsl
addb
fs
stos
jno
movb
in
call
add
mov
das
xchg
fs
je
stc
jg
cmova
push
popa
pushf
mov
sub
mov
lcall
push
out
hlt
sub
or
cmpsb
loop
push
xchg
into
mov
aam
loope
rorl
sub
scas
cmp
mov
test
pop
pop
addl
int3
jbe
int3
stos
push
fisttpll
jns
cmp
fsubrs
call
lahf
nop
imul
add
or
ds
les
mov
imul
pop
mov
xor
iret
add
es
mov
iret
dec
int
pop
icebp
xchg
sub
sbb
adc
int
pop
push
in
insb
or
sub
mov
pushf
adc
xchg
scas
jl
push
xchg
fwait
xlat
inc
or
mov
pop
imul
fldcw
pop
mov
mov
shlb
into
inc
push
adcb
sub
jp
mov
sub
mov
call
imul
add
and
push
add
add
ljmp
mov
rclb
and
cmpsb
xlat
pop
fimuls
int3
xor
mov
outsl
mov
rcl
pop
out
in
out
xchg
lret
or
dec
add
lret
or
and
xor
loope
add
and
mov
cmp
imul
xor
fisttpl
in
sbbb
movsb
popf
pop
mov
jmp
cld
js
jae
lcall
ss
daa
sub
push
outsl
xor
pop
in
jns
lahf
push
xchg
jns
cmp
sub
dec
sbb
outsl
in
push
int3
dec
xchg
xchg
enter
jno
aam
rol
adc
push
stos
mov
inc
mov
push
jecxz
mov
lods
data16
ja
fxch
pop
sbb
call
mov
mov
inc
loope
jmp
or
xchg
rcrl
ja
pushf
test
mov
inc
jno
loop
cltd
mov
push
push
fwait
or
popa
cmc
xor
xchg
ret
inc
add
xchg
mov
addl
push
lods
jge
aas
adc
xchg
sub
cmp
adc
add
mov
sub
adc
inc
xor
stc
ljmp
cmp
mov
cmc
xchg
inc
push
mov
gs
sti
cmp
inc
shl
shlb
xchg
sti
xchg
out
lods
fdivrs
inc
int3
outsl
data16
xchg
jnp
leave
inc
push
push
fdivrl
sbb
jo
sahf
movsl
outsb
aaa
mov
pop
push
cld
inc
add
daa
pop
pop
cli
lock
mov
push
pusha
mov
or
push
movsl
mov
add
jl
bound
test
xchg
mov
inc
js
sarl
iret
mov
xlat
inc
xor
lods
mov
jge
dec
test
loope
movsl
call
jne
sbb
repz
xchg
dec
jmp
enter
mov
rclb
aam
and
pop
push
push
in
scas
sbb
mov
cmp
out
sbbb
xlat
mov
movsl
xchg
lods
icebp
rol
shlb
gs
mov
icebp
or
pushf
dec
lcall
lock
aam
lahf
mov
mov
push
cmp
pop
dec
lret
cmpsb
mov
pop
jle
stc
mov
sahf
fs
test
mov
ljmp
jne
push
jl
push
jle
mov
je
stos
rorb
dec
test
test
mov
inc
fistpll
adc
adc
inc
enter
fsub
pop
mov
cli
xor
movsl
add
mov
idiv
insl
xchg
inc
or
dec
jecxz
dec
fdivrp
ret
xor
xor
push
xchg
repz
or
fsubs
adc
iret
jge
xor
mov
cld
add
enter
movsb
fbld
mov
add
scas
mov
mov
dec
cmp
inc
sbb
cmc
mov
jp
jge
and
dec
and
xchg
mov
ljmp
inc
sbb
pop
cmpsl
fsubl
add
dec
popa
pushf
xor
xchg
push
into
mov
add
push
lcall
icebp
repz
imul
sarb
push
pop
fldenv
xchg
and
push
xchg
stc
rorl
dec
lods
int3
fcomps
add
es
popl
imul
dec
rolb
sbb
dec
mov
xchg
and
repnz
cs
leave
ss
jne
pop
inc
ret
jmp
movsl
push
mov
adc
jp
div
mov
jle
jo
or
xchg
push
mov
into
or
mov
push
in
out
aad
data16
mov
shll
outsb
lods
je
add
cwtl
adc
arpl
push
fidivrs
pop
fldl2e
sub
push
mov
test
jne
in
idivb
loopne
add
lods
xchg
andb
pop
cld
push
inc
ret
das
mov
stc
adc
loope
adc
ja
cmp
adc
xor
xor
mov
popa
xor
adc
out
int3
jecxz
mov
test
push
mov
sub
jnp
xor
aam
push
loope
or
cmp
das
je
mov
jl
mov
stc
sbb
ret
mov
notl
cmc
push
mov
sbb
subl
pop
mov
xchg
movsl
adc
push
mov
xlat
mov
adc
js
fs
pusha
jp
es
daa
test
mov
sbb
cwtl
cmp
jbe
xor
jo
and
lret
aaa
fiaddl
mov
mov
aas
fsubp
sbb
andb
roll
test
movsl
int
and
jmp
pushw
mov
fstps
jg
repnz
mov
sbb
mov
in
xchg
movsb
jp
push
in
fcoml
fisubrl
add
insb
jl
rorb
aad
enter
arpl
lods
mov
dec
js
incl
sarl
aaa
push
or
in
xchg
pop
add
repnz
mov
fsub
inc
jns
mov
cmp
and
pop
cltd
sbb
out
jecxz
and
ror
mov
sub
insb
cmp
ss
out
xchg
shll
and
mov
jg
dec
or
lahf
jp
lahf
insl
insb
test
push
adc
in
lea
ja
mov
pushf
cmp
add
pop
fucom
cmp
push
repz
dec
aaa
mov
addl
test
in
add
mov
stos
mov
pusha
mov
mov
and
out
mov
lea
xchg
adc
inc
data16
mov
int
aam
push
sub
push
fimuls
lret
movntps
and
pop
cmp
sub
rcll
test
cs
fs
adc
scas
out
pop
mov
stc
push
movsb
xchg
in
ss
and
sbb
push
xor
insl
mov
dec
rolb
inc
and
cld
mov
sar
mov
bound
jae
pop
repnz
sbb
imul
jb
sub
mov
push
scas
outsl
jmp
aaa
andb
addl
mov
lcall
inc
jae
push
je
dec
cmpb
cmpsl
mov
mov
mov
call
test
sbbl
sbb
fwait
inc
push
push
push
sub
int3
jae
pushf
ljmp
jnp
sbb
fiadds
ja
xor
ficompl
jmp
cli
outsl
xchg
addb
push
stos
enter
pop
test
fnsave
daa
xchg
ja
mov
cmp
mov
xchg
cltd
push
out
nop
out
test
imul
push
xor
jge
stc
pop
adcb
push
mov
sbb
nop
mov
push
incl
out
std
xchg
iret
push
dec
adc
ret
stc
dec
sbb
ds
int3
add
fwait
mov
push
xchg
mov
in
fists
mov
pop
clc
or
lods
pop
insl
or
inc
mov
inc
push
adc
nop
lods
mov
push
add
pushf
sub
sub
inc
dec
inc
cmp
mov
mov
mov
cmpb
sbb
mov
or
mov
stc
addr16
mov
aas
push
repnz
movsb
or
fstl
lock
jecxz
jnp
sub
rolb
mov
inc
adc
push
mov
imul
lock
jb
pop
bound
jno
pop
dec
sub
stc
mov
cli
pop
pop
insl
jno
and
sbb
ret
inc
lret
pop
shl
lods
sub
mov
outsl
xchg
mov
jns
sbb
xor
xor
mov
sub
mov
push
movsb
and
scas
xchg
pop
aam
jl
dec
mov
loope
mov
stos
pop
mov
pop
and
les
dec
push
cmp
dec
fs
jae
sbb
sbb
sbb
jle
mov
mov
mov
jae
mov
xor
jge
and
shrl
lock
pop
inc
sti
popf
fst
dec
outsb
push
leave
adc
lea
lock
lcall
push
cmpsl
and
mov
repnz
jnp
hlt
inc
or
jg
jge
xchg
test
jbe
push
outsb
out
arpl
pop
push
loope
int3
mov
push
enter
pushf
lods
nop
and
mov
inc
mov
cmpsb
loop
mov
mov
pop
popf
pop
sbb
test
bound
xor
push
add
in
imul
pop
mov
popf
xor
xchg
mov
or
cmp
jl
pop
bound
mov
cli
testl
stc
push
pop
lret
sbb
cmpsl
jmp
dec
jmp
mov
cmp
ljmp
ret
sub
or
jns
adc
mov
push
pop
push
aam
inc
lds
es
icebp
dec
pop
jb
scas
test
scas
pop
sub
add
lods
test
xchg
mov
pusha
mov
xchg
test
sbb
into
push
xchg
sbb
ljmp
test
call
std
mov
cmp
add
mov
mov
aad
fildll
dec
lea
cmp
xor
add
call
add
inc
pop
push
ror
es
push
fcmovnu
aaa
push
adc
push
dec
xchg
pop
fnstcw
mov
add
scas
lret
in
aam
lcall
jo
and
jmp
xchg
xchg
pop
clc
sub
fwait
in
into
sbb
pop
int
push
cwtl
add
ret
fistps
fsubr
add
pop
dec
dec
push
cltd
mov
dec
sub
pop
shrl
mov
and
pop
lret
inc
dec
jb
adc
aaa
jle
sub
popa
popf
pop
cmc
mov
jne
fcoms
mov
sub
sub
jg
jae
iret
sub
mov
xchg
movsbl
les
nop
mov
jns
jecxz
js
pop
inc
sub
call
decl
repnz
sbb
lcall
jne
fcoml
int3
out
shlb
push
jbe
xchg
push
out
stos
inc
mov
mul
xchg
outsl
push
popa
ljmp
xor
jbe
mov
push
or
dec
xor
fadds
add
mov
mov
lcall
jno
dec
sarb
xor
imul
sub
adc
push
sbb
pop
mov
pop
mov
insl
negb
ficompl
imulb
xchg
dec
inc
add
push
imul
pop
shll
mov
test
lods
sub
pop
jne
in
stos
mov
lods
aad
inc
mov
filds
push
call
jle
dec
or
insb
addr16
mov
xor
test
lret
cs
cwtl
imul
adc
pop
mov
popf
andb
ss
cld
mov
outsb
fs
mov
stc
or
sbb
dec
in
mov
lds
or
inc
inc
ret
filds
jmp
and
cmp
and
ljmp
push
push
push
imul
addr16
fwait
adc
dec
aam
lcall
dec
lahf
jns
aam
aaa
shll
ret
dec
aad
push
stos
sbb
xchg
mov
and
stos
cwtl
sub
and
ret
in
dec
xchg
lcall
mov
test
in
mov
jns
stos
in
xchg
push
stc
xchg
cmp
rcrb
out
testl
and
or
out
adc
push
imul
sbb
xor
lods
dec
xchg
mov
mov
xchg
push
je
dec
shr
sub
mov
pusha
cmp
lods
or
xor
loopne
cwtl
outsb
dec
dec
sub
push
ret
adc
pop
xchg
ret
or
xchg
cmp
scas
mov
xor
sbb
lods
addr16
repnz
aam
ds
cmp
cmp
popa
filds
or
loop
inc
frstor
scas
pop
not
jb
xchg
mov
out
je
movsb
xlat
mov
cmp
fsubr
aaa
cmc
push
mov
xor
pop
data16
in
push
and
push
jb
xlat
aam
pop
dec
aam
add
sub
add
pop
loop
cli
scas
adc
int
les
and
xor
std
aaa
jmp
rolb
sub
ret
mov
popa
pop
sub
sub
nop
or
in
shrd
fcmovnbe
push
mov
arpl
dec
pop
or
mov
movsb
adc
or
adc
ss
cmpb
leave
les
pop
jle
mov
cld
leave
and
sbb
mov
aas
xchg
push
orb
subb
or
cmpsl
sub
mov
leave
pop
jecxz
mov
xchg
loopne
xchg
out
arpl
pusha
mov
cmp
jmp
and
push
sbb
in
fdivrl
sub
incb
xor
das
lret
ds
lahf
jecxz
xchg
adc
insb
sbb
xchg
dec
ret
popf
in
dec
subl
scas
aaa
add
movsl
pushf
push
in
clc
movsb
popf
in
shl
mov
mov
mov
dec
sbb
sub
je
clc
push
lret
add
adc
sbb
cmp
sbb
andl
cltd
mov
fcoml
inc
pop
mov
push
addr16
jle
dec
mov
mov
ss
aad
xor
xor
fnstcw
push
adc
aaa
mov
cwtl
or
vroundsd
je
bound
test
jl
lret
aaa
popf
xor
dec
xchg
mulb
mov
mov
faddl
add
mov
inc
scas
ss
rol
ljmp
cli
les
out
je
dec
in
push
mov
sarb
cmc
add
push
addl
notb
imul
repz
rol
leave
or
aam
into
std
xlat
shrl
mov
push
jne
pusha
shlb
jg
aaa
cmp
pusha
jmp
cmp
out
pop
sti
adc
in
insl
ret
mov
add
sbb
sub
inc
xchg
dec
idivb
mov
sub
outsb
jo
push
addl
jp
xchg
xchg
cld
dec
and
pop
fists
in
add
icebp
ficompl
imull
sbb
mov
imul
loop
fnsave
jno
stos
stos
mov
cmc
sbb
btl
movsl
and
add
cld
enter
mov
test
sbb
sub
mov
in
andl
jbe
pop
sub
scas
jae
bound
sub
orl
cltd
pop
xlat
cmp
aam
cs
movsl
add
popa
stos
pop
je
jns
iret
mov
in
mov
and
push
rcll
fwait
mov
mov
insb
and
xchg
xor
mov
dec
or
adc
mov
add
adc
mov
push
mov
std
mov
int
pop
iret
mov
cmp
add
push
jnp
testb
sub
repz
adcb
nop
nop
stc
dec
dec
xor
adc
loopne
sub
in
dec
test
out
mov
dec
jb
mov
push
xchg
xor
sbb
xchg
xchg
mov
imul
ljmp
popf
push
fwait
shlb
lea
fsubl
sahf
cmp
jno
fdivl
mov
orl
and
loopne
inc
out
lods
bound
add
outsb
lods
push
pushf
lds
imul
dec
and
pusha
add
subl
mov
pop
sahf
insb
cmp
inc
bound
adc
xor
xchg
gs
stc
dec
rcrb
jecxz
std
cltd
shrl
fwait
cmp
leave
das
aad
or
jbe
fsubrp
stos
mov
mov
cmp
push
stos
jge
ret
outsl
rcr
aad
inc
jmp
mov
jns
movsl
stos
aam
out
jb
loopne
add
addl
shll
les
dec
adc
test
sbb
add
jns
ds
leave
add
push
dec
sbb
mov
cltd
cwtl
and
inc
subb
jecxz
sub
std
mov
shrl
lods
aad
cwtl
pop
lret
incb
clc
cli
dec
mov
hlt
stos
lret
inc
adc
outsb
repz
cmc
mov
sub
push
insl
inc
test
rorb
add
jno
out
pop
xchg
cmp
sbb
xor
out
pop
xchg
dec
sbb
dec
jno
dec
adc
xchg
or
fsubrl
lock
mov
frstor
push
repz
lahf
mov
pop
pop
icebp
jno
movsb
fsubs
mov
xchg
mov
int3
jnp
mov
xor
pop
fucomp
cmp
pop
mov
pop
or
enter
jge
dec
into
stos
mov
repnz
mov
jae
mov
sbb
es
and
inc
push
adc
popa
and
add
in
pop
jge
mov
leave
mov
jl
xchg
inc
and
and
mov
inc
ficoml
stc
aaa
xor
pop
aas
lcall
or
xor
lea
push
mov
jno
cmp
das
mov
outsl
loope
cmp
dec
cmp
push
insb
cs
mov
pop
pop
es
cmc
or
inc
pop
addb
rcll
ja
dec
push
imul
and
inc
nop
and
ss
xlat
inc
xchg
jge
movsl
cmp
push
testl
or
add
sti
insl
mov
add
fmul
jmp
jl
push
scas
sti
cmc
std
xor
and
gs
js
rolb
push
ret
aam
push
test
sbb
leave
adc
sub
jle
xor
mov
push
add
sbb
out
aam
push
das
add
in
push
ret
lock
and
inc
fiaddl
dec
add
orb
mov
into
lods
imul
push
and
sahf
inc
outsb
out
pusha
imul
lock
cmp
inc
xor
dec
cmp
popa
int3
dec
movsl
lret
lds
leave
stos
sti
pop
or
jle
adc
lret
lea
cmp
leave
jp
mov
add
data16
jae
pop
bound
adc
xchg
cwtl
sti
fidivs
test
fldt
mov
inc
jp
lret
mov
and
loope
fldenv
imul
inc
mov
cmc
js
rolb
sahf
dec
dec
inc
std
or
dec
mov
lods
push
dec
adc
push
pop
call
pop
push
mov
aas
inc
pop
sub
repnz
cltd
shll
xchg
add
sbb
lods
or
mov
ja
push
out
mov
cli
and
cmp
movsb
push
fstps
fcoml
xchg
fs
stos
lahf
roll
imul
stos
xchg
or
inc
aaa
test
xchg
cli
dec
mov
jmp
mov
xor
fisubl
sbb
xor
inc
test
and
clc
js
add
loop
cmp
scas
push
out
outsl
add
mov
testb
and
xchg
mov
xchg
push
xchg
xorl
push
outsl
push
cwtl
add
xchg
das
data16
lret
push
sbb
fcoms
out
add
jns
mov
mov
push
mov
and
and
rorb
and
out
push
push
mov
adc
mov
mov
cbtw
mov
jmp
pop
cmp
sahf
adc
cs
or
sub
dec
mov
mov
popa
cs
jb
ret
sub
loop
cmc
and
push
adc
jns
roll
sarl
push
popa
mov
js
jg
xchg
dec
jmp
repz
movsl
jmp
mov
push
push
push
push
out
aaa
lods
fsubrs
xchg
cmp
leave
dec
rclb
dec
inc
xchg
scas
clc
mov
and
ret
cmp
sbb
or
xor
jo
sbb
mov
mov
push
mov
sub
outsl
push
repnz
mov
push
fnsave
jl
stos
push
jne
ret
sbb
sub
sbb
filds
repnz
jge
jge
lods
pop
sub
bound
mov
repnz
test
in
out
inc
pushf
add
mov
dec
aas
pop
lahf
sbb
loopne
test
fwait
addr16
stos
scas
jae
ljmp
mov
inc
lods
lods
jl
bound
fadds
testl
xchg
loopne
mov
adc
or
popf
cld
mov
sahf
scas
mov
push
mov
dec
cmp
cmp
daa
jo
jmp
insl
popf
add
clc
sti
std
push
and
mov
movups
add
dec
xor
adcl
cs
cmc
xchg
mov
cwtl
out
sbb
push
out
xchg
xor
sbb
cmp
jge
nop
orb
push
ret
lcall
fbld
push
lods
loope
loop
in
or
dec
sub
or
in
imul
mov
filds
xchg
loopne
mov
sub
lock
jg
xchg
in
repz
pop
push
sbb
jno
rorb
sub
repz
outsb
shll
adcb
aam
stos
rorb
icebp
cmp
cmp
cmp
outsb
in
mov
mov
pop
jnp
test
adc
xor
push
sbb
inc
xor
sbb
push
mov
cmc
lock
pop
js
push
push
dec
je
ret
mov
loopne
decb
std
rcll
mov
push
xchg
lods
mov
mov
sub
shlb
dec
xchg
pop
adc
rclb
call
ds
and
popf
pop
xchg
aaa
dec
xchg
jb
push
adc
and
fdivrs
cmp
shlb
shlb
data16
femms
out
dec
and
jl
push
cmp
lcall
pusha
ficoms
jae
push
andb
mov
imulb
xor
stos
push
mov
pop
lcall
lds
pop
lahf
pushf
dec
repz
mov
xchg
adc
out
fcomps
jmp
xor
arpl
inc
js
popa
or
frstor
cmpsb
mov
insw
clc
cld
mov
clc
adc
pop
jno
fisttps
pop
mov
sbb
stos
lock
data16
xor
shlb
sub
mov
pop
jge
rcll
add
ret
out
test
cmp
dec
pop
sbbb
addr16
xor
sbb
gs
scas
int3
push
jo
cld
hlt
jg
imul
or
jno
je
inc
cmpsb
fs
dec
mov
mov
dec
fidivrl
dec
mov
sbb
inc
cmc
test
inc
sbb
sahf
outsb
add
ds
call
fsubrl
dec
pop
dec
jno
mov
mov
mov
pushf
inc
add
adc
lcall
arpl
adc
andl
cli
scas
pop
ljmp
push
inc
lock
pop
aam
pop
lea
pop
loopne
orb
in
mov
test
xchg
jge
dec
cmp
outsb
sarb
dec
inc
mov
inc
jb
int3
stos
sub
shll
iret
lret
mov
out
mov
push
push
dec
mov
les
popf
sbb
arpl
push
std
enter
adc
addr16
dec
pop
mov
pop
pop
outsb
lcall
xchg
jb
pusha
pop
pop
fiaddl
inc
addb
sarl
cmp
outsb
xchg
sub
int3
je
cmpl
mov
xchg
sub
jg
pop
push
stos
std
xlat
dec
push
mov
outsb
cmpb
std
out
imul
test
mov
arpl
subb
mov
mov
mov
xor
data16
popf
or
or
or
pushf
ss
out
cmp
cmp
imul
dec
pop
shll
inc
lahf
jge
test
dec
jns
fdivrp
and
lock
and
jmp
adc
mov
enter
add
pop
mov
xor
dec
fistl
sub
testb
loopne
xchg
mov
mov
dec
int
xchg
pop
jp
push
imul
lret
jo,pt
loope
hlt
jge
dec
xchg
pop
mov
outsl
lret
push
sbb
ret
outsb
nop
je
cmp
aaa
incb
dec
inc
es
ret
insl
mov
ja
jb
and
xor
inc
test
xor
mov
cli
scas
fisttps
dec
test
idivb
add
jns
jo
mov
outsb
cmp
xchg
stc
push
dec
aam
fcmovnb
sub
xchg
or
xchg
hlt
outsb
ss
adc
testb
push
bsf
adc
test
or
cmp
inc
xchg
sbb
xor
scas
das
mov
xchg
push
enter
mov
adcl
cwtl
jb
xchg
fwait
pop
sbb
adc
ljmp
push
popa
mov
jge
mov
sub
test
outsb
mov
sub
mov
shll
mov
testl
mov
gs
mov
cmp
ss
cmp
sbb
bound
cmp
push
rorl
pop
adc
mov
cmp
jp
rolb
aaa
stc
mov
jl,pn
clc
daa
pop
mov
jge
lds
or
pushf
mov
std
ss
push
jo
push
cwtl
out
clc
mov
les
sub
push
out
xor
dec
and
lret
jg
fadd
jo
or
les
lods
cmpsl
jo
dec
lods
sub
jbe
fs
or
push
ljmp
push
mov
shl
adc
xchg
xchg
or
jle
sub
pop
out
lds
add
and
mov
in
test
data16
lcall
jecxz
sbb
mov
xor
and
addr16
jo
pop
dec
cmc
out
sbb
movsl
out
adc
lahf
sbb
dec
xor
insl
and
jbe
out
and
daa
adc
xor
out
dec
repz
dec
or
ficoml
pusha
out
pusha
cmp
lods
push
insl
ljmp
repnz
aas
lcall
sub
xchg
xchg
mov
in
outsb
xor
jle
fsubr
jno
and
xchg
and
ret
push
flds
sub
mov
cmp
and
mov
lret
aad
fwait
gs
pop
imulb
mov
shll
dec
add
pop
sub
scas
mov
stos
xchg
xchg
add
jo
push
push
jle
out
sub
jno
add
jne
adc
lds
in
arpl
ljmp
in
rolb
jg
add
sbb
cltd
jg
seto
and
stos
add
dec
ficoms
lea
in
pushf
insb
jae
negb
pop
leave
dec
sbb
pushf
fs
subb
mov
jp
sbb
xchg
rcrb
mov
dec
or
mov
shll
xchg
jg
outsb
pop
out
cmp
mov
xor
stos
incl
xor
push
hlt
sub
sub
add
fsubr
imul
sbb
cltd
mov
cmp
outsb
or
mov
pusha
ja
mov
in
repnz
lret
xor
nop
sbb
push
cmp
sbb
incb
fwait
lahf
xor
sub
les
leave
shl
lea
mov
inc
sar
pusha
xor
mov
rclb
arpl
mov
pop
nop
shlb
pop
sar
in
out
mov
jl
sub
mov
push
stos
shlb
sti
cmp
mov
pop
cmp
cmp
repnz
sbb
cmp
jae
lcall
jp
fstps
out
das
outsl
test
flds
adc
movsl
xchg
sbb
ja
mov
mov
adc
out
repz
lcall
cld
inc
sub
outsb
cmp
jns
pop
or
inc
jmp
jmp
xchg
out
cmc
lret
pushf
mov
adc
push
cmp
pop
sbb
xlat
and
pop
and
jo
add
pop
mov
pop
cmp
and
inc
std
insb
repz
rorl
jnp
stc
sub
pop
stc
arpl
jge
roll
push
je
cmp
jg
mov
jle
add
lahf
aas
xchg
sbb
inc
movsb
adc
movaps
das
test
xor
adc
in
lret
adcw
cs
mov
dec
ja
mov
aaa
cld
pop
xchg
dec
sahf
scas
push
dec
shrb
shrl
das
testb
push
push
xchg
call
cmpsl
mov
stos
and
cmp
fiaddl
out
dec
push
jae
jmp
movsl
ljmp
imul
xchg
sbb
cmp
and
dec
inc
jle
ror
sbb
clc
test
lds
adc
pop
pop
aam
mov
cmpsl
loop
mov
lahf
xlat
jno
ljmp
aad
loop
int3
movsb
roll
lcall
sub
shr
out
shrl
daa
dec
clc
cli
mov
mov
cmp
mov
push
dec
hlt
pop
out
fidivl
mov
mov
sbb
mov
mov
out
call
std
fdivl
negl
stc
xchg
inc
sub
and
leave
sub
stos
js
out
lahf
cmc
cmp
std
stos
mov
mov
xchg
aad
lret
imulb
sub
loopne
mov
adc
stos
lods
popa
icebp
and
mov
pop
dec
gs
into
data16
sub
or
dec
int
xchg
rcr
inc
loope
xchg
cmp
mov
fst
lock
push
std
pop
outsb
and
scas
cwtl
mov
in
jae
add
adc
lret
dec
xor
xor
jno
push
daa
push
xor
int3
rcrb
add
mov
enter
clc
fsubs
jp
push
cmp
lcall
add
xchg
cmpsb
aaa
sub
push
sbb
out
dec
mov
popa
xor
std
sub
inc
pop
fidivrs
mov
out
xchg
xchg
flds
jg
sbb
cmp
imul
frstor
pop
cmp
xchg
inc
sub
push
addl
jnp
leave
leave
xchg
ljmp
pushf
pop
cld
out
subl
pop
pop
ds
je
loopne
fsubl
cltd
and
cmpl
pop
and
stos
push
ret
or
in
jns
test
int3
mov
or
ljmp
cmpsl
insl
lret
push
jg
cli
out
aad
adc
sbb
int3
and
ja
add
xchg
lret
mov
cltd
in
adc
iret
sub
scas
repnz
outsb
jno
dec
outsb
adc
inc
cmp
fucom
sub
jae
flds
pop
ds
int3
ja
mov
je
mov
daa
add
mov
outsb
push
in
jne
sub
mov
int
dec
test
stos
iret
adc
and
iret
hlt
dec
push
sbb
and
push
fldenv
push
push
aad
adc
or
sbb
pop
dec
mov
pop
add
fidivrl
mov
add
rclb
insb
jne
lahf
jg
mov
cmp
rcl
sarl
in
cmp
xor
xchg
push
popf
out
insl
leave
add
loopne
jmp
jbe
inc
lock
shrb
cwtl
pop
lock
stos
sbb
mov
dec
dec
aad
in
push
mov
adc
xor
dec
aas
sbb
ret
fdiv
outsb
mov
jae
inc
push
icebp
and
or
les
outsl
push
rolb
sub
jo
test
clc
lret
xlat
mov
bound
lods
push
cmp
insl
nop
xor
push
sub
das
ja
insb
cltd
aad
sti
movsb
mov
xchg
nop
jb
mov
mov
rcrb
cmp
inc
jno
data16
aad
sbb
je
or
push
mov
out
test
lea
xor
lock
fucomi
jmp
pop
push
jecxz
mov
das
sarl
dec
and
mov
orb
mov
outsb
mov
xor
mov
cli
fisubl
pushf
insb
jmp
or
call
cmp
jecxz
lods
jo
mov
es
cmc
mov
adc
js
out
push
push
push
lods
mov
int3
test
rcll
aaa
mov
mov
fucom
push
and
add
stos
les
cmpsb
je
and
jo
push
mov
daa
loope
shlb
sub
mov
test
sahf
inc
das
scas
mov
insl
test
mov
or
scas
pop
lcall
jb
sub
jp
mov
cmc
fcoml
ret
xlat
add
inc
mov
lcall
add
lret
mov
pushf
call
stc
xor
jle
pop
inc
xor
loopne
cmp
int
pop
in
test
or
imul
movsl
mov
add
test
xchg
pop
dec
outsb
fdivrl
pop
movsb
sbb
mov
sar
lds
mov
inc
push
gs
jnp
fists
in
jnp
cltd
in
sbb
jmp
loopne
sbb
bound
gs
lods
aas
mov
inc
enter
rcrl
inc
xor
lea
sbb
cld
in
push
outsb
mov
ljmp
insb
outsl
or
call
mov
adc
mov
jg
imulb
cmp
add
ds
fiadds
gs
ljmp
test
jbe
and
jb
imul
and
mov
adc
jmp
jmp
test
jecxz
jne
mov
movsl
xor
and
push
mov
push
push
inc
and
popa
push
adc
test
push
adc
cltd
aaa
mov
ror
cwtl
push
testb
or
dec
inc
popa
cmp
aaa
add
mov
movsl
jecxz
mov
add
or
fsubrs
div
rolb
cmc
fstpl
movsb
in
in
cmp
iret
inc
xchg
ret
testb
decb
pop
jns
sub
sub
gs
outsl
adcl
lock
sahf
clc
mov
mov
aad
cld
arpl
inc
repnz
push
stos
mov
pusha
add
push
out
lds
stc
and
stc
jmp
ljmp
or
adc
mov
fsts
sbb
sub
loop
aam
mov
or
dec
rolb
out
fbstp
xor
cmp
insb
xor
testb
fisttpl
jecxz
jmp
test
cmp
pop
in
lcall
push
mov
sub
leave
fwait
dec
out
pop
popfw
add
dec
xor
sbb
xchg
sub
out
in
or
add
xchg
sahf
xchg
and
stc
fsubrp
out
fs
cwtl
inc
jl
xchg
into
int3
push
scas
add
push
mov
pushf
lods
mov
cmp
mov
cld
cmp
and
imul
adc
sbb
scas
test
das
cmp
pop
test
mov
pop
adc
dec
mov
dec
shll
imul
cmp
and
js
lret
lods
push
and
push
mov
cmp
popf
mov
in
xor
lock
shll
and
inc
das
ds
stos
jle
addr16
pushf
gs
push
inc
push
or
or
pop
rol
inc
rorl
mov
arpl
inc
sub
xchg
xor
jmp
xchg
arpl
xchg
mov
adc
xor
leave
sub
mov
or
jg
adc
and
stos
std
inc
cmp
xor
addl
mov
mov
mov
xlat
mov
pop
mov
daa
out
cmp
lock
xchg
js
out
in
pusha
je
or
cmp
xchg
xor
pusha
iret
dec
pop
scas
cmpb
xchg
adc
test
push
and
ficompl
xlat
repz
mov
stos
cli
shlb
in
dec
mov
stos
mov
rorl
adc
and
ret
or
jl
mov
inc
inc
xor
adc
jne
or
test
xor
or
leave
ficomps
cmp
test
out
inc
in
cmp
dec
and
mov
jmp
inc
arpl
cmpsl
mov
jge
ret
add
dec
cmp
insl
add
cmp
int3
andl
lock
lret
xor
lcall
mov
xchg
mov
lcall
xor
mov
and
jmp
xor
andb
gs
inc
dec
sub
mov
sbb
push
pushf
movsb
dec
cltd
xor
fdivl
fcomps
adc
ss
push
test
outsl
sbb
adc
add
insb
mov
cltd
lock
pop
into
scas
fstl
gs
cmp
sub
icebp
xchg
jge
inc
jge
call
fstl
scas
cmp
pop
or
movsb
into
cli
xchg
jns
jge
sbb
mov
pop
ds
mov
sti
or
add
or
xchg
xchg
xor
xor
dec
xor
push
leave
sbb
test
out
outsb
cltd
jmp
push
mov
fidivrs
mov
pop
rol
cmc
and
sahf
or
cmpsb
int
mov
outsl
pusha
mulb
sub
push
lods
cmc
ret
sbb
jl
rcll
inc
jbe
clc
fwait
jp
xorl
jno
call
pop
adc
int
ja
mov
les
xorb
sbb
test
mov
out
fiadds
orl
mov
jno
cmp
aad
jne
movsb
mov
shlb
loopne
cmp
mov
and
jg
xor
mov
and
pop
ds
icebp
dec
lret
inc
inc
test
pushf
inc
pop
pop
into
out
mov
popa
xchg
mov
jne
jae
test
out
shrb
inc
mov
fwait
push
call
std
cmpsb
cmp
xor
add
lock
js
mov
push
cli
cmpsb
sub
lds
dec
les
and
aad
add
push
pop
fwait
cmp
pop
loope
mov
cmc
jnp
dec
add
jo
daa
jecxz
int3
push
push
jle
push
insl
fadds
sbb
je
jl
imul
mul
mov
add
dec
xchg
pusha
sub
hlt
xor
lea
push
mov
pop
jno
mov
dec
inc
push
mov
movsb
or
jle
add
repz
jne
push
mov
outsl
out
lods
fisttpll
mov
mov
pop
lock
mov
fwait
movsb
or
xor
and
js
jae
das
push
xchg
adc
ja
fdiv
cwtl
inc
push
std
ret
adc
and
shl
sbb
jg
in
and
movntq
je
mov
dec
xor
sub
sub
xor
jg
mov
inc
testl
cmp
push
dec
fwait
dec
iret
inc
cs
std
bound
std
push
cmpsb
push
sub
dec
in
cmc
lret
xor
insl
movsb
sub
mov
mov
sbb
mov
cwtl
and
notl
xchg
popf
out
xor
imul
stos
ret
dec
push
ficompl
pop
or
adc
test
dec
sub
ret
imul
in
pusha
jne
enter
mov
inc
in
mov
inc
jle
push
sbb
repz
mov
ljmp
jge
jl
sbb
jne
imul
scas
inc
sahf
mov
and
and
add
adc
jecxz
repz
loopne
sbb
adc
xlat
lods
addl
cmp
dec
pop
pop
sbb
out
dec
pusha
dec
dec
or
mov
cmp
mov
int3
dec
loopne
aad
add
and
bound
jle
xchg
xchg
push
lods
jns
repnz
lock
movsl
scas
add
xchg
arpl
pcmpeqw
addl
push
add
mov
dec
cwtl
xor
mov
bound
xchg
popf
ret
pop
mov
jmp
sub
adc
pop
nop
sub
pop
les
mov
fsts
ja
mov
aaa
inc
xchg
repz
js
hlt
mov
xor
in
pusha
jmp
lcall
rol
sub
adc
inc
add
sbb
xchg
jg
add
pop
sbb
sub
mov
pop
ss
divb
xor
jns
inc
hlt
add
push
inc
push
xchg
mov
cmp
loope
xchg
mov
push
outsb
shll
mov
push
das
push
adcl
int3
cmpsb
sub
dec
pop
adc
and
adc
xor
bound
addr16
push
pop
arpl
imulb
addr16
dec
jno
inc
pop
into
mov
mov
pop
sbb
scas
adc
les
xor
cli
es
pop
sub
cmc
std
mov
mov
ja
adc
ret
add
xchg
ficompl
pusha
ljmp
mov
es
out
sub
adcb
dec
neg
sub
jl
pop
pushf
sub
lea
mov
test
sbb
dec
shrb
mulb
mov
sahf
xchg
loopne
jns
jmp
inc
add
sub
loopne,pn
mov
mov
xor
inc
test
fbld
push
and
dec
or
sahf
cmp
orb
pop
repnz
mov
jno
sbb
pop
inc
push
cmpsl
mov
inc
and
inc
jge
pop
jae,pt
je
xchg
and
mov
sti
in
iret
adc
add
sub
inc
jb
aam
xor
pop
js
aam
into
jl
rcl
sbb
loope
gs
mov
movsl
lahf
sbb
imul
pop
aam
cmp
mov
mov
xor
ret
mov
add
loope
and
je
xor
dec
xchg
jno
aam
add
xrelease
mov
loop
cmpb
mov
andb
fsubp
dec
ret
pop
lret
mov
push
xchg
les
mov
lcall
in
adc
mov
cwtl
int3
es
addb
dec
stos
fildl
or
ljmp
cmpsb
mov
test
dec
jbe
pop
pop
movb
test
jmp
std
fldl2t
adc
xchg
sub
add
lret
sub
mov
pop
and
adc
dec
enter
in
or
cli
and
xchg
addr16
push
jne
sub
mov
lret
dec
add
push
xor
lea
sub
pusha
test
lret
push
mov
loop
out
arpl
add
jmp
fmuls
jge
es
push
mov
mov
mov
sub
lods
pop
aas
mov
xchg
arpl
mov
cmpsl
mov
inc
xchg
loop
xor
popa
adc
imul
push
fildll
lods
sbb
ret
fstpl
cltd
and
xor
pop
mov
enter
sti
jmp
sub
movsl
jno
mov
fcmovbe
repnz
call
loope
stos
stc
xchg
idivb
loope
repnz
ja
test
push
push
adc
lock
pop
out
cld
mov
iret
pop
add
mov
in
adc
add
sub
orb
ret
sub
xorb
xorl
aad
add
and
pop
mov
jecxz
xor
aam
add
movsl
pop
sub
xlat
pop
ficompl
bound
jmp
lods
mov
mov
outsb
jmp
add
insb
aas
cmpsb
push
push
jno
dec
xchg
into
js
dec
cmp
cli
lods
and
mov
xor
inc
xchg
cmp
inc
xchg
iret
pop
adcb
andl
fwait
mov
dec
cmp
or
xchg
lods
ljmp
or
ja
adc
cmpsl
fstps
in
push
xchg
cs
sub
and
fiaddl
adc
les
mov
subl
xchg
jmp
rep
or
mov
sub
pop
ss
xchg
inc
add
mov
imul
aad
jecxz
dec
mov
xor
xchg
fwait
dec
push
repz
scas
stos
cmpb
cmp
fsubrs
inc
cs
shll
outsl
sub
inc
jecxz
bound
mov
pop
sub
sub
cmp
jns
in
imul
cmpsb
inc
jg
push
pop
push
push
popa
pop
lahf
jl
cli
cld
xchg
xchg
xchg
icebp
or
cli
xor
pop
enter
insb
hlt
insb
pushl
sub
cbtw
aaa
sub
or
sahf
in
inc
leave
xchg
sbb
insl
pop
ret
mov
sahf
dec
data16
pop
pop
and
lea
lret
xchg
jl
movsb
mov
sub
icebp
push
push
add
sbb
mov
loope
icebp
mov
jecxz
jecxz
pop
faddl
mov
sti
popl
loope
and
xor
lock
add
cmp
dec
sbb
add
jp
test
fmul
fmuls
add
pushf
mul
lods
in
pushl
idiv
dec
es
lret
nop
add
cwtl
mov
xsaveopt
xor
repnz
dec
or
mov
mov
in
jmp
inc
out
jge
xchg
orb
xchg
lods
pop
std
jnp
jnp
pop
inc
mov
cmpsl
mov
fs
pop
addl
das
lods
xchg
test
std
inc
mov
lock
adc
pop
testb
fdivr
loopne
push
sbbl
mov
xchg
mov
clc
sarb
sti
push
mov
xchg
out
push
jg
enter
pop
xchg
in
xchg
inc
std
mov
cmp
mov
pop
movsl
js
f2xm1
pop
xorb
jmp
pop
mov
add
xchg
es
movsb
std
pop
fistpl
out
aas
jmp
inc
dec
orb
inc
out
mov
out
sbb
andb
clc
les
jmp
mov
dec
popa
and
add
mov
push
cli
inc
cwtl
mov
outsl
add
push
outsl
and
pop
xor
fcmovnu
stc
push
pop
mov
test
out
addr16
aad
aas
hlt
xor
xchg
fwait
pop
and
cltd
inc
xchg
xor
movsb
and
dec
lret
lds
lods
lea
push
mov
and
call
cwtl
inc
imul
int3
das
mov
in
lock
lods
xchg
inc
in
push
jecxz
fnstcw
push
shlb
leave
shl
mov
test
lcall
daa
sub
sub
push
in
mov
lret
or
inc
jno
repnz
ds
mov
jge
cmp
dec
sarb
fwait
andb
ds
sbb
lods
aad
pop
popl
clc
mov
in
out
push
push
inc
adc
add
cmp
outsb
sub
jns
or
pushf
add
cmp
xchg
inc
punpcklbw
pop
push
xchg
inc
or
dec
test
out
push
mov
mov
aam
imul
fstpl
and
shll
dec
mov
movsl
outsb
lock
cmpsl
int
xor
fdivl
bound
mov
dec
push
fdivl
test
pop
push
add
mov
sbb
fst
cmp
insl
data16
xchg
push
jo
adcb
dec
add
dec
pusha
lret
add
addb
fiadds
sbb
into
mov
icebp
sub
mov
and
or
and
nop
sub
sub
and
xchg
and
les
shl
adc
shlb
inc
add
sbb
insl
mov
out
inc
and
ficompl
mov
mov
cs
adc
popf
pop
out
and
inc
or
pop
add
jno
and
repnz
add
jg
mov
cmc
pop
fdivs
insl
das
pusha
xchg
or
ss
js
push
mov
jbe
enter
imul
xchg
enter
stos
cmp
dec
lds
add
icebp
fisubl
in
movsl
ja
pop
fs
fstpl
gs
lret
pop
cmp
lcall
add
ja
lret
sbb
adc
mov
aam
pop
inc
fucomp
push
jge
pop
pop
mov
adc
push
cmp
lods
add
enter
xchg
xlat
ret
or
loopne
jo
cmp
or
andl
inc
sahf
aas
cmpb
pop
pop
pop
test
sub
cmpsb
jno
outsb
ljmp
push
out
pop
jae
sub
dec
mov
and
loope
cmc
mov
add
insb
jnp
loope
loope
xor
mov
scas
dec
sbb
and
or
icebp
adc
mov
or
ja
lret
adc
dec
mov
jecxz
dec
adc
iret
cmc
cmp
xlat
dec
lods
loopne
push
jg
shrl
sub
pop
adc
push
ja
stc
jo
mov
push
shrl
jmp
or
xor
std
std
iret
jmp
shr
cmp
sbb
mov
imul
incb
push
pop
and
imull
fildl
out
adc
adc
adc
xchg
or
mov
adc
dec
and
arpl
test
inc
jb
inc
call
test
out
imul
arpl
in
lock
mov
push
adc
push
insb
sub
pop
js
jecxz
mov
inc
lret
adc
and
je
aam
sti
mov
ss
xlat
push
xor
icebp
xor
scas
jp
sub
std
adc
fadd
add
sti
cmpsl
inc
and
and
cmp
pop
sbb
cmp
es
push
jno
sub
push
mov
jmp
add
cmp
mov
addr16
dec
mov
and
mov
push
shl
dec
cmpsl
jae
push
incb
lea
mov
pop
stc
rcr
push
push
loopne
decb
mov
cmpsb
mov
insl
addr16
xor
push
or
pop
test
and
add
jne
nop
imul
fwait
sbb
lahf
stos
dec
sub
adc
inc
repnz
dec
ret
dec
or
pop
icebp
js
gs
clc
xor
test
sbb
add
or
add
push
mul
mov
fwait
gs
xchg
pop
in
aas
mov
incl
rcr
and
jl
das
dec
inc
icebp
fwait
push
fwait
inc
push
or
ret
sbb
xor
das
sarb
xlat
rorb
jne
cmp
dec
add
and
jae
sub
inc
jne
test
sub
insb
cmc
in
lods
cmp
lods
add
and
xchg
sub
push
sbb
push
jno
pop
xor
in
mov
stc
pushf
adc
hlt
mov
hlt
jae
inc
in
cli
aam
pop
push
jbe
pop
push
shll
lods
cwtl
dec
sbb
mov
xor
inc
and
mov
pop
xchg
repz
notb
popa
icebp
lcall
iret
repz
sbb
xchg
or
add
push
xchg
lret
rorl
xor
movsb
cld
cmc
pop
inc
mov
hlt
mov
sbb
inc
pop
xchg
incl
xchg
push
stc
lds
sbb
orb
filds
idivl
outsb
mov
xlat
sbb
lahf
adcb
cmp
add
pop
arpl
xchg
xchg
lret
xor
jp
mov
and
pop
std
mov
pusha
int3
rcll
orb
popa
clc
inc
mov
test
pop
ret
xchg
and
sbb
add
sbb
shl
ds
stos
filds
sbb
ljmp
std
mov
mov
xchg
lahf
push
movsb
cld
fimuls
inc
and
loop
ja
loope
insb
and
scas
sahf
int3
fistl
sbb
xor
inc
push
addb
pop
or
and
cltd
in
or
lds
xrelease
pop
or
or
mov
sbb
rclb
pop
mov
test
out
aam
or
cltd
jbe
bound
push
jp
je
scas
test
imul
cmp
jno
cmp
out
jae
mov
push
cmp
js
and
subb
sub
ja
mov
sahf
movsl
repz
xchg
inc
movsb
inc
xchg
pushf
hlt
push
dec
inc
and
cmp
sbb
jne
mov
and
and
push
add
push
cmp
fisubrl
xor
inc
nop
push
dec
or
inc
dec
cmc
in
add
cwtl
mov
repz
sub
ret
adc
arpl
add
js
jl
je,pn
add
out
xchg
cmp
out
sub
pop
fwait
ljmp
fmull
int3
repz
pop
mov
rclb
xor
push
adc
cmpsb
dec
push
lds
aas
int3
sub
add
xchg
inc
jo
repz
cmp
leave
xor
ss
and
imul
sub
stos
rclb
dec
arpl
test
mov
call
add
push
loopne
or
loop
push
or
rol
push
ss
pop
mov
pop
imul
ss
stos
hlt
or
inc
vaesenc
cmp
mov
pop
dec
xchg
sti
xorl
xchg
loop
cmpsb
lahf
xor
insl
je
je
xor
popa
jne
pop
mov
mov
mov
inc
enter
xchg
xchg
lcall
lods
push
gs
mov
or
cmp
or
inc
out
mov
push
or
mov
lock
pop
loopne
push
in
cld
sbb
and
push
repnz
pop
gs
sub
inc
pop
out
ffreep
fadd
pop
dec
mov
and
mov
std
iret
hlt
sub
push
dec
hlt
cs
inc
mov
or
or
mov
mov
or
aaa
add
and
ret
add
arpl
stos
xchg
pop
mov
xchg
iret
jecxz
test
mov
jo
les
sub
clc
adc
enter
mov
leave
jg
insl
mov
or
adc
sub
sahf
xlat
out
cmp
jecxz
pop
lock
xchg
mov
or
je
mov
pop
cmc
or
ret
jnp
insb
enter
bound
pop
and
or
test
xor
fcmovb
dec
pop
xchg
push
xchg
pop
aas
mov
cmc
push
daa
lods
push
pop
cmp
xchg
lcall
mov
xchg
ficoms
jnp
stos
sub
lods
lahf
cmpsb
cmp
scas
inc
stc
sbb
and
movsb
loope
cmp
xchg
xchg
cwtl
sbb
mov
insl
sbb
dec
or
pushf
lods
sti
shl
imul
flds
xor
cmp
add
mov
inc
imul
pusha
pushf
cwtl
movsl
out
cmp
sbb
jmp
ret
dec
sbb
incb
jg
xlat
shr
adc
decl
leave
icebp
ss
jle
xlat
imul
inc
inc
sar
sti
or
pop
sub
ror
push
add
jg
pusha
sbb
push
inc
fisubl
mov
push
add
sub
mov
push
sbbl
cwtl
filds
pop
push
movsl
jl
jnp
fistpl
cmc
inc
jg
mov
sti
inc
mov
add
dec
mov
imul
aam
xchg
dec
stos
jp
xlat
jmp
sarl
mov
cwtl
push
and
in
sub
popf
mov
lock
jmp
adc
fisubrl
pop
jbe
and
enter
mov
movsb
daa
pop
add
xchg
insb
clc
or
mov
sub
and
xchg
in
push
xor
push
fisttpll
mov
mov
lcall
data16
cmp
sbb
in
inc
sahf
pop
shll
mov
mov
cltd
inc
scas
add
jne
inc
insb
ds
nop
and
jnp
sbb
and
pusha
lods
mov
dec
and
dec
movsl
cli
into
pop
push
adc
mov
ret
inc
push
push
push
outsb
pop
jp
dec
out
movsl
jecxz
push
jne
leave
aas
xor
and
push
rcrl
jae
daa
daa
rcll
pop
pop
pushf
ja
lret
movsb
cld
adc
dec
fcmovnb
push
cld
rcrb
in
jnp
orb
lds
pop
jge
push
int3
cltd
dec
fimull
adc
into
jae
jbe
arpl
mov
xchg
pop
nop
in
mov
stc
repz
cmp
rcrb
mov
inc
rcl
cld
push
mov
fstpl
leave
icebp
es
inc
test
loopne
jle
test
cmp
ret
sub
lahf
rclb
not
inc
fs
gs
adc
or
pop
out
mov
lret
dec
push
sti
and
aad
roll
repz
insl
sbb
lds
pop
lea
aam
hlt
subb
cltd
mov
lods
xor
push
sub
les
mov
push
enter
inc
pop
loope
or
lea
jo
ss
repnz
cmpsl
inc
or
xchg
jmp
in
hlt
pop
pop
clc
outsb
inc
jne
mov
js
repz
mov
xor
lea
into
adc
mov
add
adc
mov
fmuls
sti
mov
cmpsb
test
popf
mov
sarb
mov
test
test
xchg
pop
xor
xchg
addr16
cmp
sahf
inc
notb
mov
test
std
cwtl
pop
adc
xor
mov
std
outsl
add
std
icebp
cmpsb
std
std
dec
fiadds
push
cmp
jb
bound
cld
push
and
jae
push
mov
cmp
or
inc
es
into
ret
iret
sbb
sub
ja
xchg
or
cltd
inc
jne
xor
lret
shr
sub
mov
jne
and
xchg
test
jb
jne
xchg
out
mov
fstps
test
leave
sbb
sti
rol
jmp
xchg
js
jecxz
jg
scas
add
jecxz
in
or
aad
int3
push
js
xor
mov
int
sahf
aam
add
mov
push
sub
out
sbb
and
sub
cmp
jb
aad
jecxz
and
mov
aaa
mov
jbe
ss
mov
out
dec
shlb
hlt
ss
mov
xchg
dec
mov
jo
pop
insb
lea
adc
adc
and
out
nop
cmpb
xor
filds
test
movsb
sub
mov
jo
shrb
sub
mov
in
add
movsl
les
dec
or
inc
xor
sub
push
mov
cltd
mov
stc
hlt
popf
mov
jno
xorl
mov
cs
mov
imul
or
add
adc
cmp
or
adc
mov
xchg
jle
mov
lcall
out
xchg
mov
mov
jl
and
and
push
mov
enter
popf
fldcw
pop
clc
mov
lahf
iret
test
dec
imulb
sarl
and
xchg
pop
scas
pop
inc
repz
ror
in
inc
inc
dec
xchg
jbe
push
xchg
cltd
les
hlt
xchg
add
push
cld
shll
stc
ret
pop
mov
in
rclb
mov
adcl
in
push
out
cwtl
xchg
add
leave
mov
mov
insb
in
dec
push
add
xor
mov
jge
ret
push
jae
jle
xlat
pop
lods
outsb
leave
imul
sbbl
sbb
xchg
jmp
push
mov
sbb
scas
sub
pop
outsl
push
scas
movsb
jecxz
mov
scas
lea
ja
mov
mov
push
leave
mov
frstor
stos
and
stos
jl
loopne
push
sub
insl
js
cltd
bnd
popa
sbb
adc
repnz
js
cltd
mov
ljmp
xchg
jno
stos
out
ror
das
leave
inc
cmp
in
xlat
xchg
out
cmpsl
imul
push
pinsrw
stos
push
sti
mov
cmpl
imul
adc
data16
js
jbe
sbb
movsb
jb
das
pop
and
fmull
and
mov
int
in
test
dec
or
mov
sarl
icebp
fmuls
mov
jae
test
dec
push
push
add
push
adc
popf
int
int
cmp
dec
cwtl
dec
out
dec
test
loopne
mov
adc
sub
mov
pop
hlt
adc
hlt
sbb
or
or
and
mov
shlb
sub
xchg
mov
add
push
lret
jns
jecxz
cmp
inc
inc
out
mov
xchg
sbb
xor
dec
xchg
sysenter
sbb
jg
dec
sub
mov
test
dec
insl
js
xor
popf
pusha
gs
or
in
cmp
shlb
mov
push
lods
repz
fwait
mov
mov
inc
push
jae
xor
jmp
pop
imul
fs
mov
hlt
sahf
mov
je
adc
bswap
inc
stos
lahf
int
ss
in
sti
xlat
push
leave
mov
pop
cmp
adc
jns
jae
add
rclb
sarb
mov
xor
dec
inc
jns
inc
ss
sbb
sub
adc
push
mov
addr16
aaa
push
inc
push
pop
pop
out
pop
insb
ffreep
sub
aas
sbb
out
xor
cmp
out
into
xor
rorb
repnz
adc
cmp
or
call
cmc
js
adc
xor
ds
cmc
mov
inc
add
loop
mov
pop
out
shrl
nop
sarl
out
lods
cmp
rclb
divb
in
pusha
in
nop
jge
cmc
add
clc
mov
jg
insl
fbld
sarb
std
aas
lcall
mov
push
js
dec
pusha
int
cmpsl
dec
out
subb
xchg
push
roll
adc
test
inc
sbb
rcr
inc
cmpsb
arpl
xor
adc
xor
fsub
cmp
inc
fistpl
add
lahf
dec
sbb
inc
cwtl
cmpsb
fdivrs
fcmove
out
jle
stos
push
mov
sarb
jl
jp
test
loopne
mov
lahf
xor
adc
push
sbb
xor
xor
fsubp
inc
int3
mov
leave
mov
xchg
mov
pop
out
lret
cmpsl
into
fistps
in
xlat
xor
fwait
rcrl
dec
pop
mov
sub
and
mov
jmp
xor
jl
mov
loop
cld
hlt
or
jge
ficomps
push
imul
add
jge
sbb
sahf
dec
xor
cltd
and
fcmovu
cmp
cmp
ret
mov
arpl
mov
mov
push
mov
test
jle
jge
lods
movsb
leave
sti
pop
sub
mov
or
stos
out
and
repz
mov
lea
push
and
mov
push
shl
mov
and
les
test
cld
mov
sbb
jae
jmp
rcll
cmpsl
push
cmp
in
out
push
inc
pop
add
rcl
leave
inc
sti
xor
cld
cmp
loopne
rolb
lds
sub
pop
nop
push
ss
inc
jge
adc
push
xchg
fwait
inc
dec
sub
pop
or
lahf
je
cltd
xchg
call
cltd
mov
repz
ret
out
test
dec
dec
daa
push
and
lcall
sub
insl
mov
dec
gs
inc
xor
scas
cltd
out
push
stos
lods
dec
xchg
lret
sub
xor
test
pop
dec
jmp
outsb
loopne
dec
xor
jbe,pt
add
cmp
je
and
and
mov
es
cmp
out
enter
rclb
xor
mov
xor
lcall
in
inc
jns
int
adc
je
ja
addr16
mov
mov
test
mov
adc
xor
movsb
fs
mov
data16
psadbw
mov
lcall
cwtl
mov
mov
add
lods
lods
mov
cmp
mov
int3
mov
push
lds
xchg
ljmp
mov
sbb
xor
sub
repz
lods
jo
sbb
cmpsl
jg
xorl
sar
repnz
popa
mov
call
pop
lret
mov
lcall
mul
fwait
mov
sarb
pop
add
in
icebp
js
lahf
into
cmc
scas
lret
ret
inc
ret
add
cmpsl
aad
jns,pn
mov
popf
das
movsb
testb
jg
lds
jo
movsl
xchg
jae
shrl
add
dec
sbbl
pop
jo
leave
xchg
mov
mov
and
jns
sub
jmp
mov
in
ds
ret
xor
inc
pop
jns
pop
stc
xor
sbb
mov
rclb
imul
in
outsb
fcomp
sbb
bound
faddl
sbb
mov
fists
fcom
clc
cmpsb
imul
shl
in
and
mov
and
dec
xor
daa
and
cmp
enter
push
xchg
subl
outsl
inc
mov
or
sub
add
jl
xchg
fdivrs
mov
mov
hlt
outsl
into
cmp
in
ds
je
push
jns
cmpsb
mov
test
sbb
sysexit
int
mov
mov
movb
fnstsw
push
add
adc
out
xor
subb
jo
mov
xor
rcl
pop
movsl
popf
lods
movl
adc
push
orl
jge
out
mov
je
pop
ss
fwait
rcll
or
sub
inc
loopne
add
mov
mov
and
fptan
inc
sub
enter
xchg
and
sub
adc
shl
cs
sub
loope
sbb
pop
xor
mov
inc
scas
call
fldenv
sbb
leave
xor
fwait
sub
ret
jl
inc
pop
and
pop
fwait
test
mov
and
scas
mov
and
aad
lds
xchg
or
cmp
popl
in
sub
sbb
neg
das
inc
or
out
xchg
push
xchg
adc
scas
bound
cmp
jmp
movl
pop
xchg
fisttpl
dec
cmc
mov
les
aas
outsl
mov
xor
push
test
cwtl
push
xor
adc
movsl
aaa
sbb
push
icebp
sub
push
nop
js
xor
aad
dec
xchg
cs
aas
sub
test
test
sbb
pop
aad
pop
in
jl
shlb
shrb
frstor
and
mov
ret
sub
fstpl
cmp
ret
clc
movsl
int3
mov
jb
mov
push
pushw
leave
push
aaa
mov
jp
adc
xlat
sub
jge
andb
xor
jl
push
or
ret
mov
jle
outsb
outsl
in
jecxz
jns
out
cli
add
mov
outsb
pop
pop
xchg
push
push
es
insl
mov
adc
dec
ret
sti
mov
push
push
xor
sahf
stos
jbe
jb
out
test
in
cmp
rcr
dec
clc
mov
shll
xor
jne
mov
std
mov
imul
sbb
mov
pop
sbb
push
mov
xor
test
fidivs
or
and
and
aam
insb
or
popf
sahf
iret
insb
popf
mov
xor
insl
pop
js
jb
hlt
jbe
adc
mov
scas
call
addr16
sarb
mov
cltd
push
push
cwtl
xchg
addr16
ds
jle
pop
add
js
mov
inc
mov
cld
lods
fdivl
fwait
inc
pusha
jno
rcrl
and
adc
loop
xchg
mov
and
xchg
jl
xor
jns
mov
jo
popa
pop
or
ds
cmp
mov
sar
xchg
loopne
cwtl
sbb
adc
mov
mov
ret
adc
insl
test
and
nop
pop
aad
pop
mov
out
mov
ret
pop
inc
hlt
aaa
pop
lock
mov
imul
pop
movb
movsl
int3
lahf
bound
ds
cmp
call
testb
stc
movsb
aad
and
pop
xchg
lds
in
push
push
pop
pop
mov
clc
in
repz
cwtl
stc
das
adc
mov
cwtl
data16
sbb
es
gs
movsl
inc
mov
pop
test
xchg
cmp
lods
push
jmp
push
fwait
imul
mov
add
outsl
sarb
pop
dec
mov
fldcw
fnsave
mov
jecxz
imulb
pop
mov
outsl
mov
lret
in
sbb
dec
lds
xor
mov
inc
add
addr16
outsb
xchg
xor
jo
inc
and
cmpsb
ficoml
push
bound
scas
add
movsb
sbbb
push
mov
mov
dec
inc
icebp
and
or
lahf
lock
lock
stos
test
xchg
jbe
jbe
push
je
dec
inc
push
mov
icebp
shl
mov
push
icebp
lods
out
out
mov
xchg
je
xor
pushf
mov
sbb
or
fisttpll
jl
or
lods
and
shlb
repnz
jmp
fld1
rorb
push
adc
inc
add
inc
mov
enter
loop
iret
sahf
mov
incl
lret
test
sub
ljmp
es
mov
insl
add
xor
ljmp
dec
fs
xchg
pop
mov
ljmp
ror
jbe
movsb
cmp
filds
cs
lahf
ss
adc
es
repz
bound
pop
sub
push
inc
dec
mov
xchg
popa
xchg
rorb
push
ret
dec
test
jp
or
or
lock
adc
inc
mov
jnp
dec
xor
out
dec
add
xchg
in
mov
stos
sahf
ret
xor
rcll
rclb
lcall
cmp
icebp
and
scas
icebp
xchg
add
push
test
or
mov
lret
add
movsl
loopne
push
rclb
leave
mov
aas
mov
stos
xor
xor
sbb
inc
mov
xorb
xchg
dec
inc
enter
insb
xchg
lcall
out
rolb
xchg
push
mov
mov
cmp
jle
jle
mov
sub
bound
fistpl
out
add
cmp
xchg
sbb
fs
pop
mov
sbb
stos
push
adc
inc
cmp
das
cltd
adc
cmp
add
or
out
aas
js
xlat
push
testl
push
in
sub
pop
enter
pushl
sub
jnp
push
jge
aam
sbb
sbb
xor
sub
sbb
scas
movsb
jle
outsb
cmp
xchg
mov
addr16
pop
push
sbb
test
lock
sarb
cwtl
and
add
pop
shlb
imul
loop
xchg
lcall
out
add
mov
or
mov
add
les
test
stos
xchg
jo
in
shl
sub
inc
loope
xchg
push
dec
cli
mov
adc
repz
cmpsb
xchg
or
cmp
adc
arpl
pop
in
xchg
fbstp
mov
pop
mov
sbb
xor
test
leave
jg
enter
ret
lea
and
ds
xlat
das
pop
loopne
das
mov
push
jmp
mov
hlt
insl
mov
or
xor
mov
lds
jne
cld
xchg
cld
lret
push
movsb
xor
stos
scas
lods
shr
xor
jnp
ss
pop
fstpt
push
daa
sbb
xchg
pop
sbb
sbb
pop
xor
sahf
or
repnz
js
insb
or
or
pop
mov
lock
jo
fcoml
leave
fucomp
dec
xchg
js
cmp
push
cmp
ljmp
pop
push
shrb
mov
mov
xor
cs
insb
pop
ret
inc
cmp
jb
es
jmp
pop
je
and
push
jo
pusha
jg
addl
lcall
out
add
les
sahf
aam
mov
pushf
mov
pop
push
jl
loope
test
mov
xor
and
xchg
mov
and
xchg
xchg
cmp
cltd
in
cmp
bnd
sbb
lcall
jno
sbb
bound
repz
sub
inc
call
int
pop
pop
lret
cs
cmpb
inc
jo
push
adc
fists
add
mov
jl
sub
xor
ret
fs
fstpl
and
pushf
test
xor
aam
or
sub
jle
sti
sarb
inc
in
out
xor
imull
in
out
jns
gs
dec
fadd
hlt
mov
fnsave
push
and
sahf
jge
test
sbb
stc
daa
mov
dec
dec
inc
pop
mov
push
popf
in
out
test
dec
xchg
das
into
mov
mov
mov
stos
and
or
or
aas
jnp
mov
mov
lods
mov
jp
pop
xor
sub
shll
test
test
cmp
jge
or
pop
inc
sub
dec
jae
inc
push
scas
xchg
push
adc
insb
out
cmp
hlt
mov
mov
dec
and
add
xchg
sbb
add
or
sbb
outsl
mov
aam
pop
or
cmpsb
imul
pop
int
inc
cld
pop
cmp
scas
mov
jmp
iret
sub
xchg
loopne
repz
fisttpll
pop
sub
mov
das
dec
jl
sbb
dec
enter
icebp
xor
pusha
jbe
and
pusha
jb
je
dec
sbb
fisttpl
test
or
sbb
jp
ds
rclb
add
imull
popa
lods
jne
lret
jmp
aam
adc
loopne
jmp
fsub
mov
out
inc
ljmp
addr16
push
out
mov
xor
lret
cmpsb
pop
jb
stos
cld
in
lret
add
mov
add
sbb
mov
pop
pusha
pop
neg
lret
gs
movsb
daa
jnp
loope
or
pop
std
adcb
or
xor
adc
adc
into
mov
shll
and
sahf
imul
add
push
pop
test
outsb
outsb
push
scas
xchg
cmpsl
xchg
test
xchg
mov
or
ja
je
mov
sbb
cmc
ja
xor
fimull
inc
xor
and
cmp
mov
and
inc
shrb
stos
pop
jecxz
push
mov
lahf
leave
fwait
andb
das
xchg
jns
dec
push
ret
mov
adc
jp,pt
int3
mov
addr16
hlt
jae
push
rolb
fldt
xchg
test
xor
dec
jmp
arpl
xor
mov
outsl
aaa
or
adc
stos
fidivl
xchg
std
nop
mov
push
cmp
sub
add
jnp
push
jl
in
xchg
mov
pop
stos
xchg
std
xor
xchg
mov
adc
cmp
jnp
mov
push
add
cmc
xchg
xor
rcl
das
cmp
sbb
hlt
or
movsl
das
sub
mov
jle
xchg
in
movsb
rcll
push
cmp
xchg
in
cmp
push
inc
push
inc
inc
fildll
ljmp
in
xchg
push
xchg
outsl
sub
cmp
repz
out
push
fiaddl
xor
inc
pushf
jmp
je
fadd
mov
and
xor
int
subl
pop
mov
jnp
movsb
hlt
adcb
pop
push
and
sbb
xchg
sub
rolb
and
sbb
sub
and
test
jb
add
cmp
inc
xor
and
stc
sub
bound
mov
cmp
cmp
inc
out
push
cmp
popa
std
cmp
add
mov
sbb
movsl
lcall
dec
sub
dec
movb
mov
and
xchg
fcomps
pop
add
lret
in
mov
mov
mov
fsubrp
dec
fmuls
and
stos
test
xchg
pop
dec
orps
addr16
lret
mov
dec
scas
aam
out
int3
fwait
xor
push
insl
mov
xor
shll
pop
mov
mov
mov
outsl
fstpl
out
adc
out
mov
lret
mov
lret
dec
lds
push
sbb
jl,pn
cmp
out
sbb
mov
sti
push
test
pop
ja
fmul
in
push
cmpb
sahf
fwait
addr16
les
mov
test
jg
loop
jge
insb
mov
adc
pop
or
xchg
in
jl
jne
mov
sub
ljmp
cmp
outsb
mov
add
pop
mov
scas
inc
addr16
aam
mov
dec
test
lods
add
xor
mov
pop
inc
adc
filds
mov
pop
sbb
aas
pop
lods
stc
pop
cwtl
mov
imul
notb
bound
push
call
xorb
xor
loop
leave
in
jge
movsl
ror
jecxz
cmp
sbb
pusha
cld
inc
fwait
lahf
push
and
cs
mov
in
sbb
aad
je
jle
lds
fistps
cld
and
leave
cld
lcall
xchg
jbe
fists
lock
je
mov
stos
mov
cmp
cmp
inc
pop
out
bound
fdivl
movsb
or
scas
and
loop
inc
popf
repnz
mov
fldt
cmp
and
pusha
adc
lea
mov
sarb
mov
pop
addr16
mov
lret
push
xor
mov
mov
mov
pop
mov
inc
jp
cmp
fstl
aad
shlb
sub
add
lods
cmpsl
mov
pusha
aam
sub
ss
dec
or
insb
add
mov
pop
mov
testb
movsl
mov
repz
orl
xchg
pop
loopne
clc
repz
mov
adc
movsl
adc
mov
sbb
pop
fdivrl
pushf
xor
cmp
xchg
jae
movsb
xor
ljmp
lcall
fnsave
addr16
test
inc
lahf
inc
jg
cli
mov
ret
mov
out
mov
into
js
fists
mov
jp
add
cmpsb
jno
mov
fidivl
ja
arpl
xchg
jb
cld
cmp
ljmp
jnp
sahf
add
inc
int
faddl
cltd
out
clc
cmc
cmp
pop
shll
xchg
ret
fmuls
jno
pop
test
sub
lcall
dec
ja
lahf
div
movsl
xor
cmp
mov
xchg
cmp
iret
gs
mov
pop
and
out
std
jl
jb
sub
xor
js
sub
mov
daa
xchg
mov
aam
push
rcll
xlat
sarb
mov
in
bound
cltd
jo
mov
pop
fwait
rolb
jo
dec
in
or
outsl
push
test
mov
push
dec
stos
mov
clc
dec
cmp
cmpsb
push
sahf
pop
mov
sub
jmp
xor
dec
mov
arpl
std
ret
data16
dec
inc
pop
sahf
je
in
movsl
jnp
outsb
pop
addr16
jne
daa
sbb
stos
mov
repnz
sbb
popa
xchg
sub
push
xor
and
out
dec
jle
push
ss
into
mov
mov
or
int
xor
aad
cmp
pop
imul
or
mov
inc
xchg
push
pop
pop
jecxz
push
pop
outsl
mov
clc
lods
cmpsb
icebp
mov
lods
adcb
sub
jb
dec
out
push
mov
divb
and
out
fsubrl
and
aam
out
stc
jno
pop
jbe
lahf
jnp
add
xor
adc
sub
mov
push
cs
mov
or
cmp
push
sub
jge
in
in
lahf
sub
and
int3
xlat
pop
lods
outsl
add
jne
sub
xor
inc
push
dec
mov
sbb
popa
inc
arpl
push
mull
mov
cmpsb
pop
lea
cmpsb
hlt
mov
xchg
adc
jmp
cld
adc
outsl
scas
inc
ss
xor
rorl
lcall
in
cmpsb
ror
es
push
pop
aad
sub
jl
filds
mov
pop
jb
lods
pushf
adc
mov
lahf
add
outsl
shrb
sahf
sbb
loop
push
xchg
add
fisubrl
lea
lds
add
mov
mov
sti
fimull
data16
scas
rcr
cmp
mov
and
mov
mov
sub
xchg
mov
push
das
pop
lcall
adc
xor
in
xchg
push
pop
adc
mov
mov
mov
jae
in
cli
push
jns
adc
cmp
int3
ss
sub
xchg
incb
sbb
fs
rorl
inc
push
xchg
loopne
sti
aam
xchg
les
je
xor
sub
sub
jne
pop
add
pop
xor
push
pop
cld
lock
sub
xor
dec
ljmp
fs
fidivl
mov
or
cld
adc
mov
cmpsb
sbb
shl
dec
add
pop
cmp
arpl
call
out
out
add
into
aas
insb
repnz
lahf
adc
out
xchg
ficoms
icebp
daa
sub
mov
and
add
inc
xlat
test
mov
mov
testl
punpckldq
push
popa
loopne
cmc
inc
lods
mov
add
into
mov
pop
pop
adc
fucomip
and
sub
or
shlb
lds
add
cld
add
test
push
and
bswap
and
repnz
ljmp
fs
cli
xchg
mov
xlat
sub
cmp
out
out
sbb
inc
fiadds
push
inc
jle
lods
mov
insl
xlat
dec
jo
jg
jmp
popa
addr16
aaa
sti
cmp
in
fsubr
adc
repz
hlt
cmc
jmp
insb
or
iret
int3
cmc
jg
ss
ret
rclb
sbbl
xchg
inc
or
mov
inc
and
sub
jne
cwtl
ds
inc
lcall
dec
test
push
rcrl
and
pop
push
jno
adc
dec
ss
push
inc
dec
jno
mov
adc
hlt
mov
mov
ds
fwait
ja
fisubl
inc
jg
jo
pop
mov
andl
out
dec
sbb
in
pop
dec
dec
jecxz
jb
and
in
adcl
inc
jge
in
or
fsubrl
mov
sbb
push
nop
sbb
shr
lcall
cld
fidivrl
daa
push
or
or
loopne
lds
ret
or
imul
add
sub
push
push
jne
mov
cld
pop
enter
dec
push
add
dec
dec
dec
hlt
sub
mov
rcr
mov
fistpll
pop
push
adc
lock
fistl
enter
sbb
lret
pop
dec
leave
shlb
fnstenv
jns
and
mov
cmp
data16
push
dec
sbb
sbb
mov
sti
and
rol
int
ljmp
pop
mov
fadds
ss
cltd
push
jo
sbb
daa
mov
lret
test
xchg
aaa
dec
inc
push
cwtl
xor
or
mov
int
jp
in
stos
push
cmp
push
cmp
je
adc
mov
push
jae
arpl
jge
sbb
test
pop
int3
call
or
mov
mov
or
inc
xor
jae
or
inc
out
movsl
push
jmp
xor
mov
pop
add
sub
mov
ret
test
test
push
or
les
sub
sahf
sbb
jl
add
cmp
bound
mov
repnz
push
jle
dec
js
loop
jo
lods
xchg
and
cmp
inc
push
je
daa
xchg
fldt
push
mov
scas
adc
adc
push
cltd
jmp
sbb
adc
sbb
jae
rcrl
stc
clc
aad
cmp
outsl
mov
mov
jge
sub
outsl
or
jg
mov
outsb
mov
mov
sbb
int
out
and
fisubs
loop
mov
xchg
mov
test
adc
loop
cwtl
mov
imul
sbb
call
push
cmp
sti
bound
inc
pop
aas
lret
or
cmp
lahf
xor
xor
push
call
or
jbe
mov
fbstp
inc
and
pop
mov
hlt
les
jp
mov
xor
mov
jo
push
shr
cltd
mov
xchg
xchg
push
pushf
push
std
cs
in
call
inc
push
xor
mov
mov
cmp
mov
das
mov
jmp
jecxz
sub
xor
shlb
lcall
push
loopne
mov
or
mov
in
mov
sbb
xchg
stc
bound
test
pop
push
jg
mov
adcl
out
es
push
push
pop
lods
mov
adc
insb
mov
and
xchg
pop
negb
push
in
adc
push
ljmp
ds
fidivrs
cmpsb
xchg
les
insb
xor
ljmp
icebp
ret
leave
cmc
nop
pop
inc
cmp
outsl
dec
cmpsb
push
mov
std
add
clc
jbe
inc
divb
jnp
dec
loope
and
xchg
xlat
add
dec
test
sbb
mov
repnz
ja
mov
hlt
cmpsl
notl
add
push
popa
mov
enter
push
in
jmp
out
add
mov
ja
incl
jl
fistpll
je
mov
nop
mov
aam
jle
orl
cltd
fisttps
lret
imul
pushf
pop
mov
not
das
mov
mov
dec
adc
insb
loopne
xor
mov
fs
movsl
movsb
movsl
xchg
cld
jmp
cld
ds
leave
jl
in
xor
andb
pop
and
data16
inc
aas
xchg
pusha
pop
cmp
cmp
popa
adc
push
jnp
cmpsb
mov
cvtps2pd
mov
mov
jge
jmp
addl
jnp
ljmp
jecxz
sbb
and
and
add
sub
sti
iret
lret
ss
pop
add
lods
iret
sub
jp
add
jne
xchg
adc
shl
in
lcall
push
jmp
or
mov
lods
nop
push
jmp
jo
sub
fsts
pop
push
gs
cmp
inc
aam
outsb
mov
cld
xlat
adc
js
cli
in
jg
and
cmc
adcl
cmc
push
or
sub
mov
ja
bound
fisubl
in
out
xlat
je
xchg
scas
je
lods
mov
sub
mov
adc
xchg
inc
jge
test
lds
xchg
mov
mov
dec
and
into
cmp
add
leave
movsl
fwait
pop
dec
lods
shrl
add
pop
sub
or
jne
adc
jns
cs
pop
cli
add
ds
ds
push
in
mov
and
and
call
sbbb
cmp
mov
mov
and
xchg
cmpsb
xor
and
adc
pop
fwait
push
jo
pop
mov
push
dec
lea
jl
outsl
ds
jno
jne
xlat
lret
sub
adc
cmp
aam
les
push
sub
in
fdiv
or
jle
aad
stos
mull
dec
mov
mov
fs
lods
adc
in
add
xchg
and
mov
jno
in
insl
in
xchg
bound
icebp
imul
ja
movsb
mov
cmpsb
int
ljmp
inc
into
mov
adc
jo
xor
jns
stos
gs
xchg
sub
push
xor
xor
xchg
test
add
mov
sbb
int
dec
add
jbe
mov
mov
addr16
pusha
push
loope
stos
push
push
mov
adc
xor
sbb
sub
mov
xchg
mov
xchg
add
addl
sub
fidivrs
hlt
lret
scas
mov
sub
filds
jl
jne
cmp
pop
pop
sub
aas
das
cld
or
filds
mov
outsb
mov
and
adc
xchg
enter
add
sub
stos
lea
and
jbe
test
and
loopne
inc
jns
xchg
xchg
mov
xchg
jp
jl
add
xor
sti
and
xchg
add
sbb
fdivrl
sub
xchg
jmp
push
cmp
sbb
fwait
stos
xchg
inc
or
popf
jmp
lret
xorb
fcoms
daa
adc
mov
sbbb
cwtl
dec
pushf
add
push
sub
jg
jg
xlat
mov
mov
cltd
sbb
xchg
lret
sbb
test
fadds
push
dec
inc
jmp
sar
call
add
jnp
arpl
pop
cmp
repnz
outsb
insl
mov
lahf
push
cmc
push
lods
cmp
pop
in
ss
les
adc
mov
out
push
in
xchg
imul
xor
sub
test
pop
sbb
dec
xchg
test
fldenv
dec
andb
jnp
adcb
lret
xor
push
jmp
sbb
add
dec
mov
mov
sub
pop
dec
mov
mov
scas
clc
pop
sbb
int
or
flds
add
ljmp
pusha
and
mov
lahf
pop
adc
inc
adcl
cmp
scas
add
dec
ret
xchg
jg
sti
sbb
pop
sub
jecxz
mov
jno
or
pusha
lea
arpl
push
adc
shll
add
push
nop
adc
inc
and
mov
mov
adc
inc
pop
sarb
push
inc
dec
lea
mov
sarl
mov
ret
xor
cli
sub
xor
adc
push
lds
pop
les
mov
or
stc
iret
add
cmp
mov
pushf
dec
lea
hlt
shr
pop
lds
adc
and
jo
daa
and
cmpsl
cli
xor
fnstcw
data16
or
lods
lcall
sub
icebp
movsb
ss
sub
add
mov
inc
dec
test
in
adc
jl
dec
test
push
dec
daa
mov
add
outsb
push
sub
xchg
mov
mov
jo
stos
mov
pop
dec
rcr
mov
sarb
scas
sahf
inc
xor
xchg
jne
rcr
mov
or
repz
cwtl
dec
popf
enter
stc
scas
add
iret
push
test
icebp
inc
in
or
pushf
mov
mov
add
das
fwait
je
mov
fsubs
dec
stos
xchg
add
js
lock
in
mov
stos
test
mov
clc
fcomip
sti
adc
cld
ficomps
out
jle
dec
pop
xchg
jnp
pop
mov
push
jmp
push
rcl
movsl
mov
push
shlb
inc
dec
xchg
or
jge
add
inc
outsb
xchg
mov
jne
mov
sti
lret
mov
xor
fs
xchg
sub
or
test
aad
fwait
push
dec
inc
lahf
xchg
dec
aad
pop
jle
push
or
lea
and
jp
imul
and
test
mov
test
and
les
pop
lret
cmp
xor
shrb
sub
cmp
mov
mov
mov
inc
jp
push
lea
jns
cltd
test
ret
mov
mov
nop
cmp
cwtl
or
call
scas
lahf
int
mov
push
mov
test
out
movl
out
lods
out
and
inc
mov
xchg
push
sub
xchg
and
dec
adc
popa
xor
fbld
lods
push
call
xchg
push
inc
mov
xchg
repnz
xchg
int
mov
jmp
add
pop
mov
xchg
orl
in
inc
mov
pop
shlb
dec
dec
insl
sbb
mov
mov
movsl
push
push
in
push
sbb
and
adcl
dec
xor
fisubrs
dec
and
sbb
push
pop
dec
outsb
repz
mov
in
sub
jns
in
mov
or
sbb
push
adc
mov
xor
out
push
xlat
stos
jmp
pusha
mov
sbb
sar
inc
shlb
outsb
inc
out
fnstcw
bound
jae
xchg
dec
jle
sub
clc
loop
cmc
xchg
add
sub
jbe
mov
mov
jmp
inc
repnz
cmp
in
add
outsl
add
mov
mov
or
mov
sub
ret
lds
pop
inc
lds
jno
sub
push
ss
lcall
pusha
rcrl
jne
sub
mov
and
shl
or
lret
cmpsl
ja
test
push
cmpsb
jecxz
xchg
shll
sub
ljmp
aas
fs
push
jne
mov
rcrb
inc
popf
mov
mov
pop
fisubs
in
xor
jae
rol
or
xchg
jle
js
mov
push
push
and
gs
cmpsl
and
sarl
cmp
lcall
add
push
add
or
outsl
push
mov
clc
pushl
inc
pusha
icebp
mov
lods
adc
xchg
mov
movsl
test
rolb
sbb
push
jno
call
lcall
ret
mov
stc
xchg
pop
mov
mov
test
inc
jmp
adc
push
in
sbb
test
xchg
lret
sub
sub
push
je
sub
mov
xor
xchg
mov
add
sub
sbbl
lcall
mov
rcll
cwtl
std
ja
call
mov
mov
add
jge
out
sahf
bound
popa
inc
shrb
pusha
mov
xor
xor
scas
mov
mov
push
loop
inc
xchg
ja
rorb
je
mov
mov
rcrb
cmp
imull
mov
ja
ret
push
mov
inc
dec
paddsb
es
cmp
nop
loopne
mov
inc
daa
jb
imul
out
lea
sub
cli
xor
and
dec
and
clc
lea
adc
lea
add
cmpl
adc
inc
aaa
mov
add
out
aad
or
scas
aaa
popf
mov
cmpsl
sbb
mov
call
cmp
js
pop
dec
int3
cmpl
jnp
lret
xchg
sbb
es
ret
subl
clc
adc
mov
dec
or
push
cmp
jg
mov
push
lods
clc
jb
cmp
jle
dec
add
xchg
loop
cmpsl
adc
xor
movaps
mov
push
in
iretw
or
push
notb
push
or
insl
jb
aas
sbb
inc
lods
inc
sub
xorb
rcll
test
jb
imul
das
lahf
fwait
ja
in
fstps
and
mov
outsb
imul
ljmp
and
mov
mov
mov
jno
xorb
addr16
mov
iret
inc
pushf
dec
push
push
aam
xchg
inc
rcr
xchg
or
sbb
mov
pop
stos
mov
push
cld
mov
ret
ss
jb
jge
mov
imul
dec
cmpsl
lds
cld
lods
xlat
xor
jp
dec
add
fdivrs
test
insb
dec
daa
cmp
outsl
xchg
jp
call
add
test
jo
pusha
jp
adc
mov
adc
int3
cltd
xor
in
sbb
mov
or
out
dec
sarb
push
in
mov
push
dec
xchg
es
xchg
inc
pop
in
jb
push
push
sub
hlt
ja
ljmp
aad
adc
or
mov
lods
ret
lods
insb
mov
pop
sbb
aad
jnp
or
mov
mov
or
incb
and
repz
dec
sub
aas
cmp
mov
xor
inc
mov
stos
mov
imul
or
xchg
push
xor
inc
jle
repz
xchg
and
and
lods
inc
ja
popf
push
cmp
and
pop
in
jle
push
stos
js
push
cmc
sbb
or
sahf
imul
inc
aad
pushf
mov
pop
sub
cmp
fsubs
stc
outsl
or
push
mov
inc
sub
loopne
adc
inc
jg
popf
test
push
mov
cmp
enter
mov
adc
rsqrtps
mov
mov
lcall
mov
ds
shrb
lock
cmpsb
adc
and
mov
cmp
xchg
adc
mov
mov
cltd
mov
sub
push
dec
negl
arpl
sbb
ja
aam
int
pop
call
fldl
bound
in
dec
outsb
iret
xor
pop
mov
ret
sbb
ss
lea
mov
push
mov
imul
xchg
or
je
inc
out
stos
mov
sbb
movsl
adc
gs
cmpsl
test
arpl
mov
fdivrl
roll
ficompl
in
adcl
cmp
fisubrs
jge
inc
out
adc
fsts
lea
push
inc
push
mov
mov
popa
jno
repz
ljmp
fs
pop
jae
aad
aaa
inc
inc
sbb
or
divb
fidivl
test
push
jne
shl
aad
push
mov
or
pop
test
mov
mov
lret
mov
cmp
mov
xchg
dec
xlat
jne
jnp
add
cld
dec
fstps
std
mov
add
mov
into
lock
sub
and
rclb
push
decl
mov
leave
mov
sahf
or
mov
lcall
or
out
aad
mov
sub
sub
and
and
mov
imul
xor
enter
mov
dec
jbe
dec
mov
insl
xchg
das
dec
out
in
mov
fcoms
pop
fucom
pushf
pop
cli
jmp
aam
push
orb
jle
outsl
mov
mov
mov
divl
ds
int
push
push
mov
mov
cmpl
inc
jae
push
stos
loope
loope
pop
fcompl
addr16
xchg
mov
dec
pop
sub
inc
and
mov
dec
push
int
dec
imul
mov
xor
and
and
add
test
push
inc
js
sbb
pop
cmc
jle
fwait
test
inc
lock
loop
mov
push
push
dec
fnstenv
stc
aaa
fwait
or
mov
pop
inc
pop
dec
dec
sub
aaa
inc
bound
sub
enter
std
xor
les
jle
mov
sub
mov
rolb
xlat
stc
mov
adc
xchg
mov
incb
