jmp
mov
jmp
mov
pop
nop
in
sbb
mov
mov
shl
ja,pt
add
andb
push
test
daa
loopne
scas
repnz
sahf
mov
iret
sub
rol
jns
repnz
cwtl
inc
sarb
jno
jmp
leave
test
gs
sub
js
shlb
xor
shlb
and
iret
addr16
cmpsl
in
mov
into
int3
repz
imul
mov
jle
mov
mov
cmp
insl
sub
jb
sbb
cwtl
adc
addr16
popa
pop
xchg
inc
ss
pop
adc
cltd
ret
sbb
jg
sbb
adc
js
mov
sti
or
xor
xorb
sti
mov
or
cs
int
xchg
mov
mov
aam
repnz
imul
aam
les
add
sarl
sbb
sbb
adc
mov
out
je
or
ret
adc
je
pop
in
mov
add
mov
jmp
pop
mov
clc
cmpsb
mov
clc
imul
mov
sbb
lahf
lock
lcall
out
pop
dec
xchg
push
insl
js
jbe
ljmp
pop
stc
add
push
fldenv
push
test
push
aad
int3
mov
sbb
mov
or
cli
xchg
imul
pop
lods
sub
mov
int3
xchg
in
add
pop
mov
pop
in
call
xchg
and
out
adc
mov
xchg
or
nop
fstps
jg
aas
loop
sbb
test
or
push
dec
jae
xchg
fs
dec
cmp
xchg
loopne
clc
mov
popf
mov
xchg
jae
repz
repz
addr16
out
lods
sti
jecxz
pop
adc
cmp
mov
ljmp
inc
in
cld
mov
fsubrl
or
xor
jb
fst
es
and
xchg
pop
add
dec
les
ror
xchg
or
fwait
mov
rcr
stc
xchg
mov
and
sarb
stc
test
dec
lods
mov
cmpb
outsb
or
push
pop
stos
xor
mov
jns
rcrl
sar
pop
hlt
adc
mov
insl
lret
jae
or
dec
iret
movsb
cld
aam
filds
loopne
mov
lret
mov
cmpl
inc
fwait
in
fisubrs
orl
mov
mov
movsb
xchg
push
xor
movsb
fpatan
or
leave
sbb
sub
inc
push
sbb
add
pop
push
push
and
pop
pop
push
inc
dec
pop
jo
test
mov
push
pop
clc
test
call
loop
jecxz
jo
adc
jmp
loope
inc
pop
ror
mov
addl
jbe
and
jl
push
and
pop
jl
dec
inc
nop
push
push
add
pop
pop
or
pop
jg
push
push
dec
pop
pop
jbe
jno
jbe
test
add
jb
jb
js
and
mov
mov
shl
xor
sub
loop
jecxz
mov
push
xchg
lcall
jo
shr
out
rcrl
xor
inc
dec
cld
or
push
add
push
mov
pop
jo
ja
push
xor
xor
pop
or
cld
cmc
nop
push
pop
jbe
xor
jne
or
rol
je
push
push
mov
pop
pop
cmp
push
ja
test
pop
stc
push
mov
pop
add
push
push
pop
call
sbbb
lods
adc
js
jae
dec
in
and
int
pop
imul
pop
push
call
inc
pop
inc
loopne
pop
mov
push
or
cmc
sub
nop
test
add
push
add
pop
push
shr
pop
push
and
pop
push
push
add
pop
nop
test
cmc
clc
stc
mov
push
cmc
push
push
push
mov
pop
pop
pop
push
movzbl
cld
push
push
ror
pop
pop
nop
push
push
xor
pop
pop
cmp
test
clc
nop
cld
nop
stc
loop
pop
push
sub
pop
cmc
cmc
cld
push
xor
xorl
stc
test
clc
call
mov
clc
sar
push
sub
pop
push
inc
pop
cld
mov
shl
or
cmc
push
jg
jbe
push
test
pop
pop
push
push
jae
jns
cld
pop
pop
mov
push
add
add
js
push
push
rol
pop
pop
push
jge
add
pop
push
xor
pop
jp
je
jo
not
not
test
jbe
sub
push
mov
pop
test
test
push
test
pop
jbe
test
push
xor
push
jo
sub
pop
test
nop
mov
push
push
push
pop
call
dec
or
mov
pop
lods
sarb
test
xchg
adc
jmp
sub
add
pop
mov
push
cmp
add
and
call
loop
jecxz
ja
sbb
xchg
inc
aam
cmc
xor
push
and
nop
dec
inc
mov
mov
or
or
push
push
add
pop
pop
nop
cld
add
call
or
jae
push
cmp
pop
jo
push
xor
pop
clc
push
sub
pop
mov
push
ret
inc
dec
jne
js
xor
or
push
jmp
adc
fcoms
mov
mov
call
scas
jbe
xor
mov
jle
lds
push
sub
int3
outsl
sub
clc
rorb
stos
mov
sbb
stos
lea
mov
push
push
push
sar
pop
pop
pop
and
jae
push
test
pop
lea
push
or
pop
sub
ror
lea
mov
loop
jecxz
inc
test
cmp
cmp
xchg
xchg
sub
or
shr
shr
or
jne
test
or
cld
mov
xchg
shr
jno
or
push
or
pop
stc
xor
add
jns
push
jb
or
pop
sar
test
jge
shr
test
nop
clc
push
pop
and
cmp
jne
jmp
loop
jecxz
add
xor
add
add
hlt
mov
xchg
arpl
mov
fcmovnbe
dec
test
lea
add
stc
cmc
mov
shr
shl
mov
jmp
mov
lods
fsubs
cmp
int3
popa
and
cmp
push
ret
stos
jnp
int
mov
jns
fadds
xchg
fwait
outsl
lea
add
loop
jecxz
faddl
xlat
inc
xorl
inc
jecxz
inc
rcrb
fcomi
push
push
mov
and
push
push
lods
aas
sarb
ds
flds
and
push
scas
push
cld
ds
fsts
loopne
repnz
xor
inc
add
inc
dec
cmc
rol
inc
dec
jmp
int3
jp
or
rcrb
or
jno
addr16
xchg
lock
and
das
cmc
pslld
gs
dec
push
imul
mov
cmp
cmp
lret
mov
mov
inc
popa
repnz
pushf
cmp
jge
or
aam
xor
xchg
and
outsl
loopne
mov
loop
stos
mov
push
and
pop
popa
push
inc
add
loop
jecxz
jmp
inc
clc
rcll
test
out
repz
inc
and
push
push
js
and
pop
pop
js
jg
xor
xor
ja
add
add
push
shr
pop
xor
cld
mov
push
xor
pop
jmp
lds
ret
lret
bnd
nop
popf
andl
mov
out
xchg
and
addb
out
loop
fdiv
aas
adc
xorb
repz
in
repnz
icebp
inc
add
mov
inc
inc
inc
je
jae
push
shr
pop
push
dec
pop
loop
jecxz
scas
test
dec
or
jne
mov
mov
mov
test
push
jnp
add
fstpt
ss
sbb
sbbb
int3
cmp
lock
xchg
jecxz
cmpsl
dec
stc
addr16
sbb
cmp
shlb
add
jmp
mov
inc
fdivrl
dec
pop
cmp
ja
adc
push
inc
mov
xchg
daa
out
inc
inc
mov
push
mov
sub
xchg
xchg
push
cmp
int
inc
lret
test
lock
scas
dec
jne
jle
and
test
add
push
mov
jmp
and
pop
ja
iret
movsb
or
cmpsb
dec
out
in
jl
adc
cli
pop
pop
pop
pop
jmp
jmp
pop
popf
jnp
or
fs
imul
rclb
aad
repz
out
dec
testl
insl
pop
mov
popl
xor
pop
jge
sub
jns
outsl
mul
mov
shlb
sub
jl
fcompl
in
das
outsb
ret
out
lret
enter
jecxz
adc
out
pop
pop
or
push
or
stos
insl
mov
dec
sbb
lods
push
dec
sub
testl
into
leave
in
pusha
jg
fnstcw
dec
xchg
lcall
out
hlt
pop
mov
push
mov
fldenv
imul
cmp
push
and
pop
push
add
pop
sub
jae
jo
push
push
pop
pop
jno
js
push
push
dec
pop
pop
sub
add
stc
loop
pop
cld
jnp
rol
push
jno
push
test
pop
pop
cld
push
popl
loop
jecxz
data16
jno
mov
sub
sbb
imul
dec
push
add
pushf
sub
fwait
mov
jge
fs
dec
cmp
loopne
lods
adc
xchg
js
test
pop
mov
test
jno
push
push
mov
pop
pop
push
mov
call
iret
add
mov
shrl
lods
adc
push
shlb
shrb
push
aas
mov
and
subl
mov
lds
out
and
rcl
cld
sub
into
xor
inc
loope
addr16
out
enter
jp
shlb
int
into
stos
int
adc
lea
jnp
push
and
lods
fwait
imul
ficompl
fcomip
outsl
xchg
dec
bound
mov
mov
icebp
mov
push
icebp
mov
imul
imul
xlat
push
fnstsw
jge
fdivrl
popa
push
icebp
dec
pop
pop
lea
stos
push
call
jg
pop
loopne
and
push
loope
xchg
ja
xor
fimull
loope
mov
mov
xor
add
pop
push
pop
push
mov
jmp
inc
jmp
add
xor
mov
fcoml
mov
dec
push
les
sub
cmc
in
leave
lret
stos
push
fwait
cltd
adc
mov
mov
and
jp
cmp
fwait
jno
cs
mov
int
loopne
mov
je
sub
push
lahf
xor
fbstp
xlat
movsl
push
mov
jo,pn
jecxz
inc
fldenv
mov
or
xchg
sub
xchg
xchg
jno
in
pop
pop
outsb
ret
std
adc
pop
fsubl
in
mov
mov
ss
ljmp
insl
pop
lahf
add
sbb
ja
icebp
stos
jge
add
push
stc
push
sbb
mov
and
es
outsb
xor
imul
inc
js
stos
stos
lcall
pop
push
pop
andb
adc
sub
sbb
enter
dec
mov
loope
pushf
pop
mov
or
add
stos
test
push
call
into
pop
aam
push
adc
testl
call
std
mov
stos
inc
mov
jmp
xor
iret
call
mov
xchg
mov
roll
test
fbstp
fmul
jecxz,pt
popa
push
jne
pop
orb
lcall
xor
dec
in
into
fnstsw
out
js
mov
xchg
cmc
mov
mov
ss
mov
scas
lods
push
mov
mov
es
fidivrl
out
mov
sarl
outsl
out
lret
mov
orb
mov
cmp
bound
jp
lcall
pop
in
push
stos
lock
jecxz
xchg
scas
or
fsubrl
xor
jle
pop
lcall
push
mov
inc
mov
dec
xchg
jmp
sahf
jl
popf
sbb
sarb
arpl
mov
xchg
or
jb
xchg
popa
xor
fldenv
pusha
fisttps
xor
lock
mov
out
xchg
rcl
sub
push
mov
mov
ret
pop
mov
ret
outsl
mov
lcall
clc
mov
out
mov
cmc
inc
mov
lea
xchg
in
mov
sbb
mov
jmp
xchg
add
mov
enter
mov
stc
insl
mov
mov
pop
daa
fldl
repnz
mov
mov
jb
add
in
cmp
adc
cs
sbb
adc
jbe
inc
repz
and
add
je
popa
mov
jo
lret
jae
xor
lock
iret
cs
leave
dec
pop
faddl
or
ret
xchg
push
jbe
imul
and
cmp
shlb
gs
push
ljmp
sub
pop
ret
in
xor
iret
lret
in
push
jl
daa
out
repz
mov
nop
jp
or
mov
sti
loope
mov
popf
dec
add
pop
xor
je
jl
push
push
push
dec
pop
pop
pop
sub
loop
jecxz
push
xchg
mov
or
xor
pop
push
cmp
pop
push
xor
xor
pop
rol
test
mov
sub
jl
xchg
into
cltd
stc
xor
fidivl
jp
pop
xor
into
cltd
lret
out
dec
je
roll
sub
add
inc
and
add
add
dec
and
add
add
add
add
dec
and
add
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
