scas
or
mov
arpl
sti
fnsave
cmpsb
sub
pusha
fldcw
ja
rorl
insb
sti
add
xchg
es
stos
mov
xor
xor
scas
jmp
aam
bound
jge
fisubl
and
aad
adc
xor
lds
mov
scas
scas
or
iret
daa
or
sub
mov
jnp
je
lods
mov
xchg
inc
xchg
xlat
sub
push
jbe
or
xor
dec
test
ds
xchg
pop
fistpl
sub
xchg
scas
mov
cmc
mov
outsl
cmp
and
lock
push
cmp
shr
add
inc
fst
les
test
jno
push
mov
mov
test
mov
or
shlb
shlb
jo
ljmp
mov
insb
test
ljmp
mov
sbb
mov
stos
fstpt
sub
xchg
insl
fdivr
js
mov
inc
xchg
jle
xor
mov
es
mov
imulb
add
adc
test
cwtl
xchg
sbb
mov
imul
inc
jnp
jecxz
sbb
imul
call
arpl
mov
add
test
sarl
fidivs
xchg
inc
xchg
add
adc
jnp
fldt
cmp
mov
jnp
mov
adc
and
fwait
push
jae
inc
adc
or
enter
aam
adc
inc
test
subb
jae
mov
mov
aaa
loope
jmp
stos
iret
push
mov
testb
mov
sub
cmp
push
mul
out
adc
sets
sub
daa
mov
xor
xchg
pop
dec
adc
popa
xchg
and
loop
ror
imul
pop
out
hlt
testb
insb
jl
data16
pop
out
push
jb
sbb
lods
and
fwait
shrl
mov
sbb
xlat
mov
enter
movsl
out
jne
pop
movsb
and
dec
push
shrl
shll
dec
pop
push
sarl
mov
out
inc
movsb
ljmp
movsb
fxch
repz
mov
ret
jg
sub
push
pushf
jle
cmpsb
push
es
add
push
pop
ret
cli
push
loop
stos
pop
nop
imul
es
mov
insl
xlat
mov
ficoms
sub
pop
or
pop
push
pop
test
das
ss
sbb
or
mov
inc
loop
inc
in
in
out
lahf
test
popf
test
dec
aam
int
cmc
jge
jno
jo
mov
fsubr
pop
rorl
mov
ds
adc
mov
sahf
xchg
xchg
add
inc
mov
jbe
mov
roll
sbb
fsts
xchg
add
dec
sub
mov
or
mov
rcrb
mov
jb
adc
fwait
inc
sub
cmp
data16
and
mov
stc
aas
inc
popa
pop
sub
mov
or
add
mov
push
fistps
sub
sub
jge
jmp
cmp
mov
jp
test
popa
push
add
scas
popa
ret
pop
sub
push
test
push
in
jl
shlb
cmp
fs
testb
sbbb
fistpl
ss
lcall
mov
mov
xor
sbb
fstps
lods
dec
jo
mov
stc
in
insb
mov
or
mov
jae
fidivrl
sub
push
inc
outsl
xchg
or
sbb
fmull
insl
cmp
shl
insw
jp
js
insl
call
ljmp
xchg
sbb
xor
sub
test
xor
mov
and
cltd
out
fwait
and
mov
pop
pop
mov
pop
and
int
pop
mov
sahf
imul
mov
jge
fidivl
inc
xchg
out
inc
insb
inc
stos
test
fs
add
aam
int3
jmp
dec
jmp
repz
adc
sahf
imul
je
mov
adc
jmp
cmp
push
pop
xchg
lods
mov
jo
movsb
push
cmp
sbb
cwtl
into
test
les
rorl
xchg
lret
sbb
xchg
int
xchg
fyl2xp1
imul
cmp
mov
sarl
and
and
dec
mov
iret
out
push
lret
jbe
push
and
xchg
and
pop
xor
mov
push
pusha
dec
mov
ss
aaa
lea
pop
jecxz
stos
cmp
mov
lods
int3
add
jno
pop
jne
dec
aad
xor
push
add
adc
js
fildll
movsl
and
xor
xor
jmp
mov
mov
mov
or
mov
imul
arpl
int3
in
push
inc
push
incl
inc
and
sub
fmull
out
sbb
push
or
sti
jns
das
push
jbe,pt
jmp
pusha
dec
and
cmc
jg
cmp
pop
in
and
mov
inc
mov
enter
push
scas
sbb
and
dec
cmp
sub
adc
cwtl
adc
test
mov
call
mov
and
orl
popa
lock
xchg
push
icebp
cwtl
fld
mov
add
hlt
xor
mov
testl
mov
shrl
outsl
push
cmp
sbb
sub
pop
jecxz
sahf
sbbb
mov
mov
ljmp
in
test
repnz
notl
out
add
popa
in
frstor
xchg
fists
out
arpl
adc
push
pusha
mov
mov
push
mov
dec
scas
sbb
inc
mov
inc
mov
or
push
push
push
push
lea
push
push
push
push
inc
dec
xchg
push
call
mov
mov
or
mov
loope
xor
lcall
dec
mov
aad
sbb
das
add
add
or
ljmp
add
into
loopne
push
push
mov
pop
push
push
push
pop
pop
pop
jle
test
je
cld
stc
add
cld
lea
jle
add
push
not
not
pop
xor
jbe
cmp
cmp
push
pop
push
shl
pop
jo
jnp
push
push
and
pop
pop
jns
push
dec
inc
pop
dec
inc
ja
stc
call
stc
push
push
push
mov
pop
pop
pop
jo
test
or
cld
cld
add
mov
dec
inc
push
jnp
rol
pop
xchg
xor
push
push
and
pop
pop
not
not
inc
dec
push
add
pop
jmp
fiadds
mov
in
gs
and
inc
cmpxchg
imul
aad
scas
push
je
push
push
cmc
cmp
int3
pop
repz
xchg
push
pop
loop
jecxz
out
sahf
test
out
jo
mov
xchg
gs
mov
pop
push
pop
sar
pop
mov
in
das
push
call
jmp
cltd
or
pop
ret
orb
xchg
push
stos
xchg
shl
sbb
pop
pop
in
push
icebp
push
div
xor
leave
add
shr
jle
test
push
add
pop
push
ja
jns
pop
or
stc
push
pop
and
cmp
je
push
movzbl
xchg
add
test
push
push
test
pop
pop
je
push
not
not
pop
jle
jb
jg
or
and
push
jge
test
pop
push
mov
pop
jge
sub
jo
jb
jo
clc
ja
jnp
sub
cmc
cmp
rol
sar
loop
pop
nop
cmc
nop
push
add
pop
push
push
pop
pop
shl
jg
push
add
pop
test
clc
clc
push
mov
push
xor
pop
pop
test
cld
cld
mov
inc
inc
inc
inc
push
push
push
mov
pop
pop
pop
inc
loop
jecxz
add
add
js
sub
xor
push
push
sar
pop
pop
or
push
ja
push
ror
pop
pop
push
push
jbe
add
pop
pop
push
mov
pop
jno
jp
test
jo
push
dec
pop
push
jbe
and
pop
cmc
and
dec
jne
push
call
std
mov
in
sub
cmp
lea
or
pop
test
insb
in
out
cmp
jne
test
xor
adc
pushf
jbe
xchg
lret
jmp
push
jnp
popa
lret
pop
int3
in
pop
dec
mov
outsl
shrl
jle
sti
pusha
lods
add
add
insl
shl
jbe
pop
jge
pop
stc
cmpb
std
cmp
mov
cmpl
or
cmp
dec
enter
mov
jp
mov
cli
fcomps
xchg
pop
test
icebp
mov
xchg
cwtl
push
cmp
add
pop
sti
mov
xor
arpl
mov
test
enter
test
daa
push
and
loop
or
stos
jnp
pop
jns
aaa
mov
xchg
cmp
mov
data16
lret
pop
jmp
clc
cmp
ret
stos
ds
mov
xchg
mov
test
xlat
mov
iret
pushf
mov
mov
data16
add
jecxz
or
fcmovnu
mov
xor
pop
xchg
rcll
xlat
push
mov
push
fisubrs
dec
xor
icebp
mov
js
nop
mov
movsl
jle
aam
cmp
into
lahf
sub
aam
in
imul
xchg
and
inc
jno
adc
fs
and
cmc
mov
ds
sbb
out
pop
mov
andps
pushf
fsts
push
and
addr16
cmp
inc
std
cmp
lods
push
icebp
dec
aam
pop
dec
aam
loopne
mov
lret
std
outsb
xor
lret
push
xor
lods
cld
sub
loop
mov
xorl
je
jmp
lcall
mov
cmpsb
shll
pop
ret
mov
adc
jmp
pop
dec
popf
mov
mov
pop
sbb
push
mov
add
pop
jb
xor
push
outsl
repz
mov
pop
lret
cld
or
pushf
scas
imul
es
pushf
xchg
push
std
mov
loope
arpl
lods
pop
pcmpgtd
cli
mov
mov
loope
lods
leave
jae
jnp
mov
pop
out
iret
faddl
jp
inc
dec
pop
loopne
aad
pop
fsubrl
and
pop
mov
push
mov
xchg
clc
cmc
mov
scas
xchg
dec
xor
mov
push
aaa
inc
fsubs
outsb
pop
leave
cmp
sbb
outsl
mov
xchg
popa
nop
xchg
and
pop
push
test
ret
push
fists
popf
in
sub
push
aas
push
xchg
add
push
xchg
test
in
mov
out
xchg
out
scas
lock
pop
jne
mov
jb
push
nop
dec
sbb
sbb
test
cmp
pop
and
aad
mov
bound
int
and
and
add
lahf
iret
push
mov
js
sub
shrl
or
rclb
stos
mov
or
bound
lea
mov
leave
or
test
adc
aam
mov
sub
jmp
mov
mov
mov
enter
fwait
jp
sti
stc
mov
push
jp
xor
mov
jmp
pop
jb
arpl
shrl
push
into
lcall
popa
ljmp
sub
push
pop
xchg
mov
jae
pop
test
out
push
pop
pop
leave
enter
or
mov
sarl
mov
dec
in
jl
rcrl
out
jns
pop
sub
out
xor
xor
cltd
je
xor
fldcw
hlt
es
es
sti
iret
iret
dec
fwait
ret
xor
mov
xchg
and
pop
test
ss
sar
in
outsb
daa
pop
aas
push
jno
clc
outsl
daa
stc
cs
pop
pop
xchg
and
hlt
and
test
cmc
pop
mov
or
jbe
or
jo
sbb
pop
mov
sar
das
pop
push
inc
adc
test
in
lock
jo
sarl
sbb
sbb
jnp
cmpsl
shlb
hlt
fwait
jno
mov
or
or
shrl
push
shrb
xlat
insl
loope
pop
sub
outsb
outsb
popa
push
mov
loop
repz
mov
fcmovnbe
insl
sbb
leave
and
xchg
fmull
nop
ss
fisubrl
sbb
mov
xchg
jle
scas
adc
mov
jno
lock
push
or
cli
leave
sbb
mov
and
lret
jo
cmp
jge
dec
stos
add
xchg
out
xor
lods
xlat
and
fisttps
fs
xor
rcpps
mov
dec
push
inc
fwait
test
cmc
pop
pushf
fucomp
clc
adc
outsl
pop
addr16
adc
pop
adc
cmpl
pop
movsb
frstor
movsl
int3
push
sti
or
ret
enter
cltd
or
inc
jecxz
add
or
cli
adc
loopne
mov
scas
jecxz
mov
lock
push
addr16
test
daa
xor
sbb
mov
xchg
mov
imul
mov
call
xchg
std
popf
data16
shlb
adc
and
sub
mov
sbb
ja
mov
test
aad
aad
push
adcb
mov
sbb
cwtl
aad
mov
lods
add
sbb
push
push
push
inc
pop
push
icebp
mov
xchg
test
mov
mov
push
xlat
push
insb
xchg
jecxz
sub
cld
aad
mov
lds
cld
sub
gs
andl
imul
fdivrl
out
ret
in
jo
movsl
clc
stos
sub
int3
out
mov
lds
sahf
shrl
loop
cltd
dec
mov
aam
push
xchg
push
sbb
sti
cwtl
lret
jbe
std
mov
outsb
push
push
ss
fcomp
adc
push
cmp
mov
ror
push
cmp
push
call
push
in
xor
jns
rcr
adc
add
test
dec
test
sub
int
jle
cli
mov
jmp
imul
add
mov
orb
xchg
jns
or
xchg
cli
lret
push
insb
shlb
cmpsb
in
ljmp
lds
xchg
and
jmp
inc
push
pop
dec
lds
pop
addr16
mov
push
add
sub
jecxz
out
sbb
test
xchg
pop
test
cld
pop
outsl
mov
jg
add
or
ljmp
fdivs
or
or
mov
sbb
inc
push
dec
push
xchg
scas
leave
push
sbb
sbb
xlat
jo
jae
int3
pop
jns
out
sbb
or
nop
push
ffree
push
lods
data16
xchg
pop
pop
cmp
xchg
xor
icebp
pop
pop
mov
out
mov
lods
xor
jnp
and
lahf
push
shlb
fcomps
mov
stc
inc
adc
sbb
in
into
cmp
xor
sti
pop
nop
movsl
mov
push
mov
popf
jecxz
xor
xor
cs
in
sub
pop
xchg
sbb
sbb
pusha
test
es
mov
sti
and
dec
aam
mov
lds
mov
push
push
mov
mov
fdiv
adc
and
cli
cmp
inc
daa
sbb
adc
xchg
or
add
xor
out
fnstenv
mov
mov
outsb
testl
cmpsb
xor
in
insb
sbb
rcrb
push
fdivrl
repnz
out
fnclex
or
push
mov
mov
xlat
add
test
mov
sbbb
pop
push
mov
mov
fwait
popf
or
ljmp
or
jne
cmp
mov
cmpsb
mov
jae
jo
mov
test
test
add
bnd
sbb
and
lahf
mov
out
inc
jle
xchg
add
pop
lcall
adc
clc
jno
in
fsubs
xor
xor
stos
cmp
lods
movsb
clc
pop
dec
cltd
and
les
sti
lock
jmp
adc
mov
rcr
negb
and
cmp
mov
fyl2x
aas
bound
and
cli
mov
sahf
xchg
loope
jmp
push
ret
lods
sub
mov
adc
jns
lret
daa
jle
out
mov
addr16
push
mov
in
cmp
stc
mov
inc
pop
out
cmp
cmpsl
cmpsb
jge
sbb
mov
popf
jae
mov
sbb
dec
fwait
sarb
and
pop
push
repz
fwait
imul
xor
lea
push
je
inc
xchg
add
xor
pop
aad
jecxz
sub
inc
mov
xchg
fdivr
mov
dec
loopne
mov
jae
flds
ja
scas
dec
dec
add
mov
sar
lret
test
aad
mov
xor
and
push
pop
mov
jae
popa
mov
hlt
movsl
add
or
outsb
fidivrl
addl
sbb
adc
jbe
sub
lret
xor
xor
pusha
mov
sub
or
leave
pop
push
push
push
lcall
xchg
jmp
push
int3
sub
and
sti
insb
and
xor
mov
shll
lea
adc
inc
test
add
pushf
xor
sub
fimull
dec
xchg
sbb
lods
lea
push
add
ljmp
xor
iret
or
pop
jmp
cmp
shlb
and
and
cmp
int
sub
clc
adc
push
pop
lret
ja
stos
stc
pop
ret
mull
mov
sahf
aaa
aad
or
out
subb
je
aaa
sub
icebp
jge
in
sti
fcoms
jae
sub
fsts
mov
mov
in
mov
lock
cmpsb
or
lret
push
out
and
loopne
jl
out
and
cwtl
insl
mov
jns
jp
test
cmpsb
xor
jl
mov
jmp
test
push
lret
dec
movsl
stos
lret
int3
jl
jns
scas
xchg
stos
test
xchg
adc
push
sahf
cltd
sub
stos
xor
sbb
enter
clc
out
movsb
js
out
inc
xchg
and
add
cmp
xchg
sbb
inc
sarl
push
fcoms
lret
mov
or
in
mov
std
adc
sbb
enter
mov
xchg
out
fwait
ja
cmpb
push
filds
mov
mov
sbb
jge
int3
out
loope
add
mov
mov
andb
sbb
mov
lcall
or
jno
dec
sub
cld
or
aas
pop
xor
js
xor
jo
es
imul
and
adc
xchg
into
jle
xor
iret
orl
jo
lods
mov
add
mov
jmp
shrl
dec
lcall
adcb
inc
sub
ficoms
sub
mov
xchg
movsl
test
dec
mov
out
dec
lret
jmp
nop
aad
sbb
xor
dec
in
pop
or
movsl
mov
sub
pop
mov
jno
fwait
das
iret
leave
adc
xchg
jne
sub
mov
or
push
sti
sub
icebp
scas
pop
lods
daa
cbtw
hlt
mov
sarl
mov
js
repnz
inc
in
arpl
push
stos
sbb
sar
jl
out
fsubrl
xchg
cwtl
test
sbb
mov
sub
call
push
shl
es
add
or
stos
lcall
shr
cli
sahf
cmpsb
popf
inc
jae
lea
pop
sbb
jle
bound
out
xor
cmp
lret
loopne
xor
insl
aam
jno
mov
outsl
jg
adc
or
out
mov
das
into
inc
sub
xchg
sti
push
sbb
jne
loop
add
repz
cmp
jg
hlt
aas
loop
jp
cmp
enter
cmp
xchg
and
fisttps
cmpsl
mov
aas
sub
pop
clc
adc
dec
scas
adc
testb
jne
ret
fs
test
inc
pop
sbb
scas
aas
cmp
sub
cltd
fmuls
addr16
mov
les
or
mov
cmp
jge
roll
mov
insb
adc
xchg
aam
pusha
ficomps
and
or
pushf
adc
stos
inc
or
push
icebp
or
sahf
imul
aaa
jecxz
sub
es
jae
pop
pop
xchg
sbb
inc
es
out
cmp
add
fdivrl
xchg
in
jnp
cmpsb
and
or
in
divb
dec
mov
aam
loop
xlat
adc
repz
pop
push
hlt
out
fisttpl
int3
pusha
pop
psllw
popa
xor
jecxz
xor
mov
es
cwtl
inc
sbb
add
dec
add
cmpb
lahf
adcl
and
add
stc
and
mov
pop
flds
push
enter
lock
outsb
mov
stc
sbbl
inc
or
inc
jbe
mov
rcl
lods
adc
repnz
mov
fucomip
dec
pop
xchg
fldl
lock
in
inc
out
imul
push
test
lock
outsb
xchg
cmp
adc
bound
fisubrs
aas
xchg
mov
cld
stos
test
xchg
decb
icebp
pusha
mov
and
movl
into
or
decl
stos
sub
aaa
loope
pop
push
daa
xchg
jmp
mov
dec
dec
mov
lea
pop
mov
dec
cwtl
xchg
push
mov
mov
push
hlt
addr16
imul
or
fmulp
popa
add
jmp
sub
out
mov
xlat
sub
je
sahf
or
mov
jecxz
lea
cmp
les
push
hlt
mov
repnz
cmpsb
jne
push
xlat
imul
mov
jno
cmc
subb
mov
xchg
icebp
icebp
out
test
call
lods
int
idivb
xchg
ja
and
dec
inc
pop
and
jb
or
or
test
xchg
mov
inc
test
in
lock
arpl
out
cmp
arpl
loopne
sbb
roll
daa
xchg
xchg
sub
lock
jae
pop
mov
pushf
les
pusha
fs
daa
into
data16
in
xor
mov
out
cmp
xor
fmul
mov
sbb
repnz
add
adc
shll
mov
mov
rorl
movsb
add
cmp
js
cwtl
in
and
mov
and
xor
ret
rcll
outsb
mov
lods
dec
push
xor
or
or
sbb
ds
push
and
sub
std
sub
jo
pop
dec
or
es
gs
xchg
out
push
insb
shll
lock
push
mov
fildll
sub
hlt
or
daa
xchg
rdmsr
imul
je
jp
cltd
orl
jg
repz
ljmp
mov
movsb
sub
lods
fstl
pop
mov
add
cs
mov
rorl
popf
xor
mov
lock
pop
iret
call
mov
out
call
popf
mov
adc
int
cmpsl
lret
push
jnp
mov
icebp
data16
out
fsubs
js
mov
inc
push
lock
iret
xchg
inc
sbb
mov
pop
xor
cmc
inc
push
inc
cs
add
pop
mov
mov
adc
add
shlb
ret
or
ja
and
lock
ljmp
aam
out
and
dec
outsl
adc
lods
fwait
insb
xchg
mov
dec
or
and
jnp
into
std
xor
ret
aas
inc
outsb
das
addr16
fstpt
adc
cmpsl
in
scas
cmp
fcmovb
mov
pop
cld
jb
xor
rcrl
push
and
ja
xor
testl
fsubrl
jle
clc
jno
cli
jnp
sub
fs
inc
orb
rclb
jbe
clc
subb
sub
out
pop
or
and
mov
imul
pushf
add
pop
fmul
int
loop
cltd
das
dec
fstl
cmp
jmp
pushf
inc
or
fdivr
dec
sub
loopne
push
ds
push
das
jge
xor
cmp
nop
lea
int3
jmp
mov
add
mov
jmp
daa
insb
add
fcomps
cmpsl
cmpb
xchg
sti
mov
inc
nop
xor
jmp
in
bound
je
pushf
lret
in
xchg
scas
test
adc
sbb
mov
inc
xor
xor
sbb
dec
add
lods
push
add
lea
fdiv
arpl
lock
cmp
das
stos
inc
cmc
xchg
xchg
adcl
subb
push
mov
and
out
mov
add
mov
jnp
adc
call
fwait
jmp
or
mov
scas
adc
outsb
mov
push
div
lods
clc
cmp
fsubrl
add
rol
aaa
cmp
ljmp
jge
dec
imul
cmp
mov
jl
xchg
lret
stc
inc
add
jp
xchg
jmp
dec
pop
adc
jbe
xchg
sub
xor
iret
pusha
jo
js
jmp
or
call
test
stos
lcall
inc
ja
push
jl
xchg
jle
ja
fidivrl
data16
call
push
sbb
inc
aaa
stos
mov
push
outsb
adc
repz
mov
insl
sub
pop
clc
and
mov
cmpsb
stc
xchg
xchg
dec
aam
shl
adc
dec
xor
mov
pop
icebp
jp
mov
ret
sbb
cmc
sub
cmp
adc
in
outsl
mov
ja
mov
sahf
jle
imull
pmuludq
sub
sbb
test
shlb
mov
pop
jge
xor
sbb
shll
aas
mov
mov
adc
mov
arpl
mov
jae
cltd
xor
xor
and
arpl
test
xorl
cwtl
push
sub
daa
jmp
ret
lahf
addr16
jnp
aad
push
xchg
iret
loope
inc
fwait
mov
dec
test
pop
xlat
test
sbb
jmp
mov
push
or
ds
out
movsb
repz
into
shl
xor
cmp
xor
cmp
and
popf
pxor
ss
icebp
mov
ret
push
mov
inc
iret
sbb
mov
dec
enter
fsubs
pop
xchg
dec
pop
sbb
pop
bnd
movups
popa
adc
xchg
dec
jmp
xchg
push
and
leave
stos
push
aad
insl
gs
call
adc
sti
ljmp
hlt
test
out
inc
fwait
or
out
dec
mov
stos
jno
lret
ds
lods
jg
jo
aad
insb
inc
dec
dec
inc
fistpll
rclb
call
stos
sbb
pop
cmp
pusha
in
jne
je
hlt
icebp
cmp
inc
outsl
sti
mov
jecxz
jg
mov
sub
mov
ljmp
sar
test
popa
push
stos
into
cmp
es
jmp
fwait
add
xor
mov
sub
push
xchg
mov
push
jp
test
adc
pop
add
jb
sbb
shlb
scas
sub
andl
pop
mov
scas
inc
fldln2
sub
ljmp
mov
adc
fildl
adc
pop
mov
or
sbb
mov
movsl
jo
dec
outsb
ret
je
ret
mov
das
stos
xchg
test
fisubrs
xchg
sub
js
push
push
addl
sahf
mov
dec
sbb
push
mov
and
outsl
sub
mov
mov
xchg
addr16
out
add
jo
iret
repz
push
sub
es
push
sub
mov
inc
pushf
icebp
iret
push
fistpl
mov
jae
add
and
xchg
popa
dec
aad
out
clc
adc
mov
adc
rorl
jno
aad
sub
push
loop
nop
mov
jbe
cmp
push
inc
mov
jne
ljmp
jbe
fs
sbb
dec
xor
idivb
leave
xor
jae
jg
xchg
lock
or
popa
push
lahf
sets
repnz
adcl
int
in
sub
or
push
jge
movsl
and
add
and
cmpsl
popa
mov
or
add
mov
cltd
add
gs
xchg
mov
sub
jp
mov
outsb
jle
aam
in
and
fimuls
in
int
pop
sbb
cmpsb
xchg
jne
adc
sub
and
fdivr
fisubrs
pop
and
dec
into
adc
mov
xchg
lret
shll
imul
dec
lahf
pop
cmp
filds
adc
bnd
xchg
iret
add
std
or
mov
and
rorb
movsb
xchg
inc
adc
lret
mov
out
ret
push
xchg
negb
push
xchg
push
sbb
mov
inc
inc
push
dec
dec
into
add
pop
fdivs
xchg
rorb
jg
mov
movsb
outsl
jge
stos
jo
add
loopne
mov
mulb
or
cmp
mov
clc
inc
add
or
mov
mov
sbb
xor
adc
cmpsl
cmpsl
add
jnp
mov
inc
xchg
stc
xchg
mov
mov
repnz
mov
stc
mov
imul
enter
mov
int3
lret
jecxz
fwait
xor
mov
scas
sub
mov
cltd
and
addr16
mov
hlt
je
pop
push
or
rcrb
add
cld
cld
dec
pushf
adc
inc
lock
jb
sti
adc
insb
jl
fisttps
cmc
push
fstpl
pop
lcall
and
xor
arpl
xor
ret
aaa
pop
and
push
jne
mov
sub
add
mov
and
pop
mov
lcall
test
rcrb
add
int3
cmp
scas
outsl
aad
push
and
sbb
sbb
dec
xchg
mov
add
test
lret
or
ret
or
je,pt
xchg
sub
shl
movsb
int3
jae
cwtl
gs
and
adcb
jae
jb
xor
iret
insb
sbbl
xchg
mov
mov
push
adc
mov
pushl
cltd
xor
cmpl
jb
test
pop
add
push
inc
sub
movsb
pop
sub
roll
ja
push
xor
xor
lret
push
dec
mov
push
stos
jmp
in
les
pop
jbe
repz
ret
cmpsb
movsl
sbb
adc
sbb
mov
ret
push
and
xor
inc
sbb
stos
cli
inc
and
xlat
lahf
push
orb
mov
inc
jl
lret
pop
sarb
fdivs
sbb
dec
pop
push
push
ljmp
mov
imul
dec
sub
test
dec
test
inc
movl
xchg
xor
sub
mov
jg
into
in
int3
in
cmp
ss
cmc
in
push
push
push
jne
imul
outsl
jns
pop
push
aas
push
mov
mov
insl
jbe
ret
mov
fs
aam
jne
dec
inc
icebp
nop
ret
mov
adc
and
adc
stc
lcall
or
sarb
int
push
cmc
nop
and
or
pusha
push
scas
mov
dec
mov
fstpt
cli
sbb
testb
sahf
push
dec
adc
sub
insl
push
xchg
inc
js
int3
std
jg
lds
into
xor
stc
cmp
shll
inc
push
jbe
cmc
call
inc
rol
aas
dec
push
xchg
adc
fsubr
cltd
push
inc
cmpb
pop
sarb
mov
xchg
test
jl
cmp
mov
cld
push
roll
ljmp
fmull
push
or
cwtl
mov
addr16
ret
push
pop
out
xor
cmp
pushf
push
mov
stos
inc
sbb
inc
xchg
dec
and
sub
lock
movsb
xchg
addb
lods
popw
mov
inc
idivl
rorb
dec
jg
mov
sarl
mov
out
mov
notb
repnz
std
xor
jne
cmc
pop
jb
pop
add
mov
andl
xchg
enter
aas
push
test
mov
popf
cmp
xchg
rcr
stos
in
cmp
out
jo
xor
sbb
sub
into
in
fsubl
sbb
adc
mov
push
lret
pop
or
fldt
cmpsb
push
das
insl
mov
jnp
out
or
xor
adc
push
in
popf
rorl
call
mov
mov
lea
cs
test
in
lea
sub
in
int3
cs
pop
adc
pop
mov
xchg
push
push
ret
cmpxchg
pop
dec
and
jne
dec
mov
push
out
mov
sub
dec
mov
outsb
fisubrl
gs
repz
sbb
bound
jecxz
out
imul
push
aad
push
int3
jnp
insb
fsubrs
pusha
dec
insl
adc
lcall
mov
or
jg
xor
xchg
sbb
lods
dec
test
lods
lret
les
xchg
sti
in
add
mov
loopne
out
iret
inc
sub
cmp
adc
pop
lahf
xchg
into
inc
imul
shr
cmp
or
sbb
fsubs
sub
and
in
pop
movl
dec
imul
and
fiaddl
addl
mov
sahf
cltd
xchg
jp
das
and
push
clc
and
cmc
and
cmc
push
loope
mov
lods
sbb
push
movsl
sbb
pop
add
pop
mov
out
dec
daa
dec
push
je
imul
dec
dec
iret
fimull
cwtl
mov
push
outsl
es
stos
dec
aam
data16
inc
adc
cwtl
aaa
scas
rcrb
push
dec
repz
mulb
mov
inc
inc
stc
nop
and
dec
mov
pop
add
jns
sbb
xor
ficoms
sub
mov
pop
mov
mov
jne
add
in
jmp
mov
xor
jl
sub
sbb
push
aaa
cs
mov
xchg
jae
cmpsl
lcall
nop
test
in
pop
aas
cmp
mov
stos
out
mov
pop
sbb
flds
lcall
cmp
out
mov
dec
ds
mov
adc
push
adc
mov
dec
jmp
pinsrw
adc
dec
sub
jp
xor
push
xor
stc
xchg
popa
fcomps
adc
mov
sbb
or
lret
into
pop
jge
bound
lcall
out
lea
mov
mov
xchg
jmp
fstl
mov
sub
rsm
push
pop
or
sbb
jl
aad
push
cmp
mov
push
pusha
pop
push
sbb
daa
and
cmp
lds
push
outsl
adc
xlat
or
out
xchg
xlat
loope
es
xor
sbb
ss
push
dec
aam
xchg
mov
mov
test
jae
bnd
or
rorb
xchg
sbb
inc
jo
fsubl
outsl
sbb
jl
xor
push
int
cmp
pusha
push
cmp
jns
push
sub
std
mov
adc
xor
test
test
cwtl
imul
mov
mov
jge
ja
push
test
sbb
outsb
ja
or
or
fsts
pop
lcall
mov
test
adc
xchg
test
movsb
call
cmp
in
ret
xchg
call
inc
mov
fcoml
sub
loop
leave
rcr
push
or
cmp
sbb
leave
jge
sar
and
lea
popa
mov
cmp
cmc
pop
jg
int
xlat
inc
push
lds
pop
add
dec
inc
mul
sbb
dec
imul
rorl
sub
lods
jle
clc
push
insl
lret
rorb
fcmovnu
mov
add
movsl
int
test
sub
ss
push
lods
xchg
adc
sub
stc
jno
adc
adc
push
pop
dec
xchg
daa
and
jae
lea
out
add
lods
in
scas
cld
cmc
out
sbb
aas
sub
cmc
mov
mov
xorl
add
cld
popf
nop
mov
xor
push
or
adc
xchg
cmp
sti
aam
iret
pushf
popa
faddl
test
lock
leave
outsb
loop
xor
or
lahf
incb
xchg
cltd
cmovp
and
adc
frstor
xchg
pop
test
or
mov
jg
fsubrs
test
mov
loopne
int3
fisubrl
cmp
js
mov
leave
in
and
out
test
push
dec
xor
pop
out
fdivl
cmp
jmp
js
mov
dec
mov
shl
pushf
pushf
xor
dec
fsubs
sti
mov
in
lds
loopne
movsb
shlb
dec
sbb
jb
iret
mov
mov
lcall
int
lahf
rcr
fcomps
enter
gs
ja
rdseed
pop
adc
add
cltd
dec
dec
test
inc
cli
push
and
fisubl
pop
inc
push
sti
pop
repz
and
std
stc
cmc
data16
xlat
cmp
fisubl
daa
and
mov
inc
xchg
std
fsin
cmp
lahf
and
lcall
cmp
test
xchg
les
lcall
adc
xor
fisttpll
cmp
popa
jnp
daa
xor
call
bswap
cld
out
shrl
lahf
movb
les
sti
push
add
icebp
test
aad
jle
jb
sub
dec
inc
stos
jno
xor
jnp
xor
and
ljmp
xchg
mov
cmp
cmp
jecxz
outsl
mov
jmp
lcall
jnp
test
dec
push
jl
pop
push
insl
pop
push
mov
int
adc
cs
mov
lret
adc
div
aad
not
xchg
loop
pop
and
push
jne
rcr
mov
stos
cmp
addr16
xor
jns
das
sti
sbb
in
mov
mov
int
cmp
out
fisubl
outsb
adc
sbb
xchg
xchg
mul
mov
xchg
push
pop
insb
int3
std
idivl
cld
dec
fmull
pop
cmpsb
int
mov
loope
mov
sbb
mov
shrb
js
and
pop
sti
dec
sub
add
aam
mov
inc
movl
movsb
call
out
daa
cmp
dec
mov
mov
aaa
int
mov
mov
mov
mov
movsl
push
sub
adcb
out
shr
cltd
sub
rcrb
dec
sbb
aaa
pop
pop
and
pop
inc
adc
xchg
push
inc
xlat
mov
jb
dec
mov
xchg
adc
dec
repz
mov
daa
or
sub
pop
mov
jg
sbb
ja
xchg
aad
sub
jg
stos
loopne
push
push
movsb
jl
scas
leave
sti
adc
xchg
fiadds
push
fs
outsl
das
mov
mov
negb
xlat
dec
cmpl
dec
mov
sarb
xor
sbb
std
repnz
mov
sbbl
shlb
shll
sar
test
and
popf
jnp
mov
pop
or
push
mov
jle
mov
daa
pop
xchg
insb
stos
pop
dec
adc
inc
fsubs
lahf
rol
dec
lds
out
mov
mov
stos
dec
mov
and
adc
push
daa
push
arpl
cs
sub
push
test
mov
pop
popa
addr16
adc
xor
mov
lea
insb
jne
enter
pop
das
cld
mov
fdivr
inc
sbb
imul
xchg
stos
dec
sbb
mov
daa
stos
inc
mov
mov
xor
pop
std
push
fsubrp
ljmp
jae
pushf
aad
xor
mov
divb
repnz
stc
push
pop
movsb
dec
pop
pop
repnz
sub
iret
loope
pop
jbe
fcoml
mov
lea
shll
adc
jp
andb
mov
sbb
jecxz
insb
push
rcl
sahf
sub
ret
cmpsb
stos
inc
in
cmp
cwtl
push
daa
in
out
lock
adc
cmc
fstl
or
aam
sbb
and
and
scas
mov
mov
inc
push
pop
stos
lea
or
inc
cmp
add
cmpsl
lods
sbb
in
cmp
adc
pop
and
mov
out
cs
xor
out
lea
cmp
fmull
sub
call
add
dec
lock
call
iret
aam
sbb
dec
inc
sub
push
pop
subl
xor
cmp
popa
jb
das
or
fnsave
jg
inc
mov
push
inc
jnp
xchg
xchg
roll
mov
sarb
jecxz
xchg
inc
sub
or
xor
nop
mov
jge
test
jmp
icebp
cmp
xor
xchg
stc
loope
or
mov
test
adc
imul
stos
push
test
cwtl
stos
in
enter
inc
cmp
jmp
inc
mov
fstpt
movsl
xchg
push
fucomip
lahf
cli
xorb
int
leave
xchg
std
xchg
andl
lea
int3
add
lret
jl
push
in
inc
lock
xchg
push
dec
push
and
enter
nop
ds
movq
xchg
ljmp
bound
xor
pop
lahf
and
dec
xlat
cltd
hlt
mov
xor
push
adc
pop
mov
ss
gs
xchg
mov
scas
or
test
hlt
mov
fisubl
mov
xor
jle
push
pop
or
push
inc
or
sbbb
loopne
movsb
gs
data16
fcoml
inc
or
xchg
mov
popa
sbb
cs
push
xchg
scas
das
sub
dec
jo
js
in
mov
mov
jecxz
push
push
xchg
and
xchg
xor
in
jnp
inc
pop
mov
cmp
cld
jecxz
shll
push
pop
fidivrs
inc
dec
rcrl
cwtl
pop
push
loopne
mov
outsl
test
xchg
and
test
jb
pop
outsl
pusha
push
ret
pop
icebp
jns
out
mov
and
mov
jmp
pop
push
rclb
xlat
cmp
cmp
loop
and
int
pop
movsl
pushf
lock
stos
adc
stos
cs
jecxz
icebp
cmp
ja
test
dec
xchg
dec
scas
fsubrs
js
sbb
and
roll
adc
cltd
dec
scas
orl
mov
scas
fnstenv
pop
aaa
and
repnz
pop
hlt
dec
inc
stos
xor
pop
mov
test
mov
jl
adc
in
mov
subl
and
fnstsw
sahf
fwait
imul
dec
xchg
fidivrl
lcall
int3
jmp
loopne
movsb
inc
mov
cltd
lcall
mov
out
cmp
stos
xchg
sbb
cs
add
mov
push
inc
push
cs
out
and
mov
decb
idivb
pop
jns
mov
inc
loop
fnstsw
sub
mov
leave
loope
mov
repz
notl
pop
lret
imul
inc
xor
lea
mov
out
pop
andl
mov
lea
nop
adc
sub
stc
push
lea
test
aas
add
rdpmc
orb
popf
jns
int
mov
test
sti
add
jge
jle
gs
xlat
sub
push
mov
sahf
pop
scas
add
xchg
icebp
or
outsb
xchg
test
mov
mov
mov
and
lock
xchg
mov
push
scas
push
arpl
popf
stos
jmp
je
outsl
testb
adc
dec
out
mov
mov
mov
mov
sbbb
popf
push
lcall
cmp
aam
push
push
pushf
xor
push
sbb
push
or
sbb
jge
sahf
ret
add
adc
aad
pop
or
scas
popf
and
jl
movsb
lds
mov
lcall
rclb
mov
mov
sbb
je
push
sbb
push
bound
mov
inc
test
imul
mov
push
fldenv
sahf
xor
push
aas
xor
inc
xor
sub
notl
insl
sarl
adc
aaa
or
push
pcmpgtb
lods
xchg
sbb
stos
jge
xorps
sub
scas
inc
in
lds
sahf
lods
jne
int3
and
cmpsl
mov
jp
stc
push
out
stos
push
jmp
and
pop
push
lahf
adc
xchg
mov
mov
lahf
filds
sub
out
popa
in
xorl
jno
ljmp
scas
xchg
out
lcall
mov
push
je
jmp
mov
outsl
mov
clc
rcrb
mov
clc
movsl
pushf
xchg
andl
orb
outsb
cld
sub
in
xor
adc
icebp
ss
loop
outsl
ss
dec
push
aad
int3
sub
shll
fisubrl
fwait
push
sarl
rclb
push
ror
into
cmp
pusha
mov
cmp
or
pop
into
sbb
mov
sahf
inc
inc
test
ljmp
call
aam
xlat
mov
xchg
loopne
dec
lret
mov
movsb
mov
imul
push
sbb
and
adc
sbb
aam
cld
divl
mov
testb
adcl
lret
gs
sahf
cmp
aaa
or
cmpsl
arpl
test
ret
jbe
ficoms
adcb
rcrl
andb
jl
xchg
mov
test
sub
ret
inc
and
push
insb
jnp
loop
xchg
fisubrs
sub
inc
lcall
in
jge
sub
jecxz
sbb
out
movsl
stos
push
pop
fidivs
pop
mov
notb
pop
test
xchg
sbb
pop
setb
adc
mov
xor
or
and
jle
xchg
mov
push
out
sbb
jb
jne
pusha
leave
imul
in
fidivrs
pop
dec
inc
aas
cs
sub
inc
adc
pop
lahf
mov
jne
int3
push
xlat
add
sbb
leave
sti
inc
dec
es
sti
lock
cltd
pop
or
lods
sub
mov
mov
loope
bound
jecxz
decl
lret
add
sbb
or
cmp
sbb
mov
adc
xchg
imul
stos
sub
sub
xchg
inc
push
mov
ds
popf
pop
jle
ss
lods
fldenv
popa
add
in
xchg
jp
rcrb
cltd
xchg
add
push
pusha
pop
jg
pop
lods
cmp
and
or
sbb
push
out
adc
mov
xchg
xchg
xchg
fistps
jecxz
add
out
cmp
imul
test
insb
push
cltd
push
jae
add
mov
lret
pop
test
mov
movsb
ss
cmpl
mov
test
pop
adcl
mov
adc
cmp
aam
xchg
jecxz
sti
cmp
test
sbb
jmp
xchg
enter
pop
sbb
jb
adc
sbb
or
data16
scas
repz
pop
jb
sub
in
fwait
jmp
insb
hlt
or
leave
jp
dec
pop
out
punpckhdq
ror
dec
je
shll
test
cmp
lods
pop
or
fwait
or
xchg
and
sub
popa
sub
mov
stos
mov
pusha
cwtl
fistps
xor
jae
cmc
mov
cli
addr16
scas
pop
sub
jecxz
popa
lods
das
icebp
add
mov
jae
nop
lret
cmpsl
and
cmpsl
pop
xchg
mov
in
inc
xchg
movsb
ret
sbb
push
ljmp
and
jle
xlat
or
scas
fxch
dec
mov
mov
inc
xchg
push
cmp
mov
push
inc
mov
dec
inc
fcomps
ja
repz
fmuls
mov
icebp
jmp
test
std
repz
idivb
popa
in
jnp
jno
test
jg
or
aas
loope
testl
adc
mov
aam
sti
orb
mov
jb
cmpsb
fmull
lods
or
lds
adc
jmp
add
xor
dec
sub
ja
addl
xchg
adc
sbb
mov
jae
pop
dec
ja
jnp
loopne
fcmovnb
mov
fisttpll
shll
es
or
pop
sti
aam
negb
fiaddl
loope
loopne
cmp
sbb
arpl
sub
das
sbb
jl
mov
push
cld
pop
jb
mov
aad
test
pushl
lret
xchg
lret
rcrl
dec
arpl
xor
or
ja
sub
lcall
enter
add
mov
xchg
call
mov
gs
cmp
or
push
sahf
fimuls
or
sbb
aam
in
cmpsl
jmp
jecxz
lds
jbe
xor
imul
lcall
cmp
scas
xor
loopne
pusha
int3
xchg
sbbl
in
addl
push
daa
xchg
and
ja
aas
pop
and
jp
ret
rcrb
shlb
outsb
int3
xchg
push
stc
dec
rcr
pop
mov
lea
out
cmp
pushf
and
jae
loopne
inc
mov
jns
mov
sub
mov
outsb
icebp
aad
xchg
test
scas
ljmp
shl
shll
sub
repz
mov
in
aad
std
dec
imul
bound
pop
js
out
setne
mov
stc
cwtl
xchg
in
test
stos
mov
mov
pop
sub
jge
icebp
imul
or
push
jns
or
dec
out
dec
clc
inc
dec
cmpsb
pcmpeqd
add
sbb
push
or
das
pop
mov
lds
adc
les
xorl
mov
jge
push
jg
aas
sub
inc
lods
mov
add
push
adc
xor
adcb
popa
clc
inc
lea
sbb
add
or
xchg
mov
push
xor
stos
sbb
sbb
mov
xor
out
cltd
dec
test
sbb
push
lock
jo
fadd
mov
daa
test
sub
inc
jl
lods
pop
inc
das
sub
movsl
fisttpl
cmp
sub
push
fld
push
leave
out
jp
add
jnp
jne
push
cltd
and
sbb
and
mov
pushf
jnp
inc
lahf
adc
pop
jecxz
jbe
mov
jp
xchg
jns
inc
adc
dec
pop
int
aas
std
outsb
and
les
mov
pop
add
dec
jle
js,pt
lret
aas
lahf
subl
or
sub
adc
or
mov
or
xor
hlt
movsb
sbb
stos
repz
mov
and
sti
in
mov
stos
push
hlt
ds
add
or
lret
add
sti
add
pop
pop
dec
sbb
sti
pop
jmp
stos
out
jae
sbb
lret
jmp
shrl
and
pop
pop
push
outsl
jns
xchg
xor
lds
inc
cs
stc
pop
sub
cmp
sub
xchg
test
lcall
mov
negb
fmuls
sbb
lret
loope
add
or
aad
negb
push
decl
mov
int
cmp
arpl
mov
in
cld
inc
and
mov
lods
adc
add
jne
call
ja
sahf
imul
daa
repnz
outsb
add
lock
pop
pop
scas
testl
stc
nop
cmc
scas
icebp
stc
aas
insl
mov
add
fistpll
mov
cmp
jl
sbb
cmp
mov
dec
imulb
cs
insl
mov
icebp
push
jp
mov
enter
sub
dec
test
in
rorl
sub
mov
data16
xchg
ret
push
or
fcomi
and
xor
mov
stc
inc
outsl
push
aam
stos
xlat
add
mov
adc
lahf
rorl
js
pop
lahf
jecxz
rorb
idivl
cwtl
inc
cli
and
push
stos
dec
loopne
add
movsb
pop
or
lods
mov
loop
adc
arpl
inc
mov
jmp
xor
pop
and
cmp
adc
sub
jmp
adc
push
sub
jge
jecxz
loop
cmp
adcl
cli
or
test
adc
lods
rcrl
stc
or
jne
es
popf
and
decl
sbb
das
ja
cmp
mov
cmp
dec
lods
and
add
addr16
sahf
into
enter
mov
push
int3
jnp
jnp
clc
adc
add
outsb
jne
mov
sbb
jns
adc
out
sarl
lds
xlat
lcall
add
push
ret
cmc
push
push
xchg
dec
xlat
xor
movsb
js
shll
pop
xor
adc
mov
mov
mov
inc
inc
sysenter
insb
sub
push
js
cmp
stc
dec
jne
pusha
into
es
inc
lcall
dec
repz
adc
in
lret
loop
in
pushf
inc
fbstp
dec
aas
out
push
fildll
fists
and
push
lock
mov
mov
mov
lock
lret
xor
sti
fwait
mov
add
test
cld
mov
in
jns
mov
lea
inc
add
pop
sti
fwait
ja
xor
out
jae
lods
lcall
or
insb
cltd
in
test
sub
xchg
mov
idivb
mov
xor
cmp
inc
push
movsl
movsb
out
adc
movsb
addr16
mov
pop
cmp
mov
mov
pop
sbb
cmpl
cltd
mov
or
sub
xchg
mov
push
movsb
mov
add
adc
jg
sbb
sbb
mov
inc
call
roll
sbb
sub
mov
add
lret
data16
nop
and
stc
push
jno
fldcw
js
cli
jecxz
push
cwtl
fstpt
cmp
daa
inc
ja
cmp
dec
sub
fwait
out
xlat
pop
jmp
and
pop
addb
aam
popa
xchg
ret
ds
or
daa
mov
dec
sbb
clc
cmpsl
sbb
cmp
add
cs
mov
and
push
inc
dec
pop
rcrl
xchg
sub
sti
sub
sarb
jmp
cmc
lahf
pop
imul
add
std
sbb
pop
dec
xchg
dec
adc
test
pushf
pop
fstpl
xchg
lods
add
pusha
imul
pop
inc
push
cs
ss
gs
push
icebp
xor
xor
adc
movsb
add
enter
js
cmpsl
gs
push
mov
push
fwait
or
popf
pop
ss
ds
inc
gs
or
dec
lods
aad
repz
lea
repz
aas
sub
cs
mov
lret
cmpsl
rclb
std
icebp
push
push
xchg
adc
pushw
fucomi
andb
sbbl
stos
cwtl
stos
push
push
cmp
mov
xorb
lods
daa
sbb
aas
ret
pop
xchg
adc
and
pop
sbb
xchg
xor
cmpsb
scas
jge
sub
dec
xor
cmpl
or
outsl
pop
in
inc
push
or
mov
xor
mov
cmp
mov
mov
xor
xor
mov
call
lods
ret
add
repz
movl
xor
ja
out
push
push
imul
cmp
pop
in
jns
pop
and
fisubl
mov
into
das
mov
sub
movsl
shll
movsb
cmpsb
ljmp
hlt
popa
test
lea
mov
shl
push
sub
sahf
loop
jo
sbbw
mov
sbb
stos
push
fdiv
xchg
pop
mov
jbe
cwtl
lock
dec
fs
inc
lahf
int
and
add
repz
in
mov
adc
sub
add
cmpsl
lcall
andb
push
insl
xor
or
lcall
cmp
fucomp
cmp
jnp
iret
jmp
dec
jo
mov
es
stos
sbb
popf
ret
inc
sbb
xor
repz
add
mov
pop
jl
lea
add
mov
lea
aaa
shlb
repnz
aad
pushf
push
xchg
push
outsb
das
push
stos
cs
jp
pop
hlt
mov
cmp
sbb
sub
fcoml
fidivs
mov
bound
lds
lahf
fnstenv
ss
dec
jbe
int3
mov
jp
add
fistpl
jbe
leave
xchg
insl
fsubrs
outsb
sub
divl
mov
lea
addl
sbb
fcoms
lahf
insb
and
and
bound
lods
cmp
and
sub
or
hlt
pop
ss
add
fildll
sbb
xchg
jl
fs
sub
adc
ficoml
jge
mov
ljmp
dec
mov
and
add
mov
stc
int
lret
pusha
ljmp
pop
mov
pop
addr16
test
scas
mov
mov
add
adc
xchg
jp
xor
mov
out
cmp
fisttps
pop
loop
push
repnz
insb
mov
jbe
movsl
addr16
insl
pop
enter
mov
lock
fnstsw
jg
rorb
sbbl
add
enter
hlt
mov
into
pop
cli
xorl
clc
cmp
inc
add
rorb
data16
insb
adc
out
out
outsl
fcoms
xchg
mov
xchg
mov
sti
inc
sbb
scas
mov
cmp
insb
test
and
in
mov
sbbl
sub
and
sub
js
iret
jl
push
mov
inc
pushf
or
mov
pop
hlt
sub
out
jne
enter
cs
nop
add
arpl
pop
mov
jb
int3
ret
mov
jp
mov
dec
mov
mov
mov
scas
sbb
jge
mov
xor
aam
test
dec
or
inc
jmp
pop
jo
and
mov
mov
cmp
mov
scas
stc
inc
in
pop
sbb
dec
dec
jb
cmp
add
push
sbb
jae
xchg
fwait
add
add
pushf
cmp
lea
adc
sbb
cmc
cmp
push
js
loope
jge
aaa
fldcw
pop
out
and
data16
test
inc
xchg
loope
data16
or
nop
gs
shl
or
mov
sarl
dec
and
mov
push
je
push
mov
cmp
call
dec
xchg
cmc
jns
outsl
pop
mov
in
rorb
xchg
jl
xorb
cmpsl
xchg
jecxz
add
sbb
mov
jno
inc
add
sub
jp
dec
fdivs
mov
and
dec
clc
cli
jecxz
aam
sub
jle
add
sbb
std
shll
jns
pushf
pop
mov
repnz
scas
jbe
xchg
std
ja
in
adc
lock
mov
push
insb
and
shll
lea
aas
sbb
lock
es
mov
adcl
cmp
scas
aaa
ss
sbb
aam
fstpt
aaa
aas
popf
cmpsl
mov
icebp
sub
push
dec
mov
jnp
jo
js
pop
and
cmpb
outsb
test
mov
xchg
daa
adc
add
sbb
mov
scas
dec
fwait
cmpsb
scas
repz
cld
test
hlt
test
test
lods
jecxz
pop
push
pop
xchg
nop
push
aas
add
mov
rcl
movsl
xlat
in
repz
jmp
cld
jecxz
mov
push
dec
inc
sub
enter
inc
mov
mov
lea
mov
icebp
xorb
daa
ds
xchg
jae
adc
and
test
or
in
jg
mov
lds
movsl
repz
and
es
lret
sub
and
imul
sub
push
mov
add
lods
jmp
repz
lret
sub
lahf
xchg
dec
std
adc
mov
and
push
roll
xlat
xor
cmp
shrb
xorb
sbb
sub
jmp
pushf
adc
push
cmp
add
popl
mov
jno
lock
mov
sti
inc
push
cmc
mov
and
out
idiv
mov
xchg
jb
inc
adc
pop
mov
aas
mov
lods
aad
mov
jns
imul
xchg
sub
call
jg
jge
cmp
adc
pop
sub
ljmp
shlb
cmpsb
cmp
test
scas
pop
sub
sbb
push
jnp
jp
inc
sbb
and
dec
sbb
js
adc
ja
jne
fiadds
orl
movsl
jg
pop
or
ret
mov
mov
jae
fs
inc
lahf
cmc
inc
subb
mov
fbstp
loop
inc
movl
push
aad
mov
adc
sub
fld
in
scas
jmp
xchg
dec
dec
outsl
mov
cmp
adc
adc
dec
into
ret
sub
out
shlb
push
jns
inc
xor
int3
or
scas
or
pushf
mov
rcll
pushl
movsl
sub
ss
das
xor
sub
pop
jne
adc
in
and
cmpsl
jl
inc
cmp
dec
mov
mov
pop
or
mov
lret
popf
and
lar
outsb
jae
cmp
pop
push
jb
ret
mul
cmpsb
jne
stos
push
out
in
out
faddp
add
sarb
cltd
out
push
movsb
cwtl
shr
bound
ljmp
bound
scas
jmp
pop
je
rcll
outsb
test
xor
loopne
daa
or
inc
pushl
pop
mov
pop
xchg
push
leave
ret
xlat
sbb
mov
jns
mov
mov
cmp
xor
push
inc
sub
and
aam
cmpsl
adc
mov
pop
fstpl
ja
adc
adc
ret
repz
mov
cld
jg
adc
xchg
outsb
and
imul
pop
lret
repnz
cmpsb
loop
inc
xchg
fs
outsl
aad
loope
popf
pusha
stos
aad
jb
in
cmpsl
adcb
js
jo
mov
pop
ss
subl
mov
cmpsl
das
enter
adc
push
fldenv
loope
sbb
xchg
mov
aas
nop
movsb
ss
sbb
sarb
out
mov
out
cmp
das
sbb
fndisi(8087
pushf
sar
pop
icebp
dec
fldcw
daa
movsl
jge
imul
lret
xor
cmp
jg
add
jmp
cmp
add
mov
jecxz
andb
jle
fs
cmp
test
sub
lret
addr16
mov
aad
pop
push
pop
sahf
add
cmp
sub
inc
test
lahf
subb
cmp
jle
push
cmp
push
movsl
dec
xchg
mov
stos
xchg
icebp
mov
push
in
or
xor
inc
inc
sub
jno
cmp
loop
inc
dec
mov
cld
or
in
cmp
flds
mov
test
cmpsl
stos
push
mov
mov
jne
ss
into
rol
inc
das
repnz
mov
mov
lds
loopne
ja
loopne
inc
addr16
test
dec
push
cwtl
jmp
mov
add
dec
loope
insl
xchg
scas
movsl
push
rorl
loopne
mov
mov
sub
xchg
sbb
jnp
lcall
or
pop
cmp
repz
jmp
sbb
xchg
out
push
xchg
cld
lods
sbb
jmp
aas
jp
dec
out
shl
jmp
rcl
pop
xor
mov
sbb
ljmp
jae
add
xchg
icebp
dec
cwtl
decb
movsb
and
pop
adc
mov
jle
pop
adc
es
add
push
mov
subl
out
xchg
cmp
or
adc
dec
fdivrl
mull
stos
lods
fdiv
jb
orl
sbb
adc
aam
sub
enter
lods
imul
mov
xchg
adc
test
int
cmp
push
fs
decb
pop
cmp
cmpsb
push
rolb
stc
mov
imul
mov
jae
xchg
pop
hlt
mov
sti
mov
jnp
pop
loope
outsb
jno
dec
xor
jmp
inc
sub
push
aaa
shlb
shll
jns
out
adc
test
popf
push
or
cmp
mov
cmc
lds
dec
sbbb
inc
stc
jmp
mov
test
orl
dec
lods
cmp
dec
adc
bound
cmp
hlt
popf
or
scas
or
cmp
mov
les
mov
mov
into
ret
cmc
aad
or
fisubs
aad
mov
js
loop
int
xor
shrl
pop
sbb
into
in
or
shll
adc
and
add
push
cwtl
xchg
sti
mov
mul
fs
mov
jmp
insl
int3
rcll
movsl
les
dec
ja
mov
loope
dec
or
xor
push
adc
or
ret
outsl
outsl
movsb
lret
dec
fmull
mov
mov
jmp
mov
test
xor
les
clc
push
inc
loop
data16
out
sti
out
or
pop
popa
movsb
mov
pop
mov
aas
inc
es
into
xor
mov
pop
mov
out
sub
dec
cli
cltd
mov
fists
mov
in
xor
sub
add
gs
xchg
pop
push
mov
xchg
push
std
loopne
dec
fimuls
test
pop
xor
push
mov
pop
lahf
stc
sub
pop
inc
add
jae
test
dec
xor
inc
cmp
test
add
dec
stos
into
in
sub
mov
daa
cld
or
imul
inc
jns
lahf
push
push
std
xchg
pop
ja
inc
shr
pushf
pop
loope
xor
testb
sbb
jbe
pop
mov
stc
addr16
push
xchg
das
mov
dec
and
sbb
ret
or
dec
insb
pop
ret
xor
jb
add
loopne,pt
cmpsl
sbb
sub
imull
addl
aad
int
push
in
mov
pop
movsb
mov
scas
les
mov
pop
or
mov
push
dec
repnz
das
daa
cmp
jge
cwtl
push
fwait
jmp
push
dec
xchg
out
push
mov
mov
pop
insb
pop
data16
inc
inc
pop
jmp
movsb
ret
fcomip
fs
xchg
shlb
pop
push
add
ds
ss
add
leave
add
gs
ljmp
lcall
cmp
js
arpl
jne
shrb
adc
sbb
xchg
cltd
xor
sub
inc
inc
inc
dec
and
mov
sub
adc
icebp
sub
enter
mov
mov
cmpsb
out
or
fisubl
clc
jg
insb
adc
or
ljmp
mov
cmp
inc
push
in
adc
fs
jp
mov
jns
add
in
hlt
jge
clc
push
adc
mov
inc
mov
xor
mov
lret
xchg
sub
mov
cmpsb
or
pop
aas
sbb
in
xor
xchg
hlt
xor
jg
add
stos
mov
scas
pop
xor
clc
dec
sub
sub
sub
dec
int3
lahf
sbb
ret
xor
mov
push
and
jmp
jno
mov
jmp
dec
test
aam
sub
loopne
mov
fldl
dec
cld
mov
jmp
out
push
sqrtps
icebp
hlt
xchg
mov
sbb
mov
mov
add
xlat
je
mov
loop
xchg
popf
mov
pop
repz
sbb
cli
sub
fiaddl
mov
aad
inc
sbb
xchg
decl
or
movsb
fadd
inc
rcrl
and
lahf
jne
cmpsl
cmp
arpl
sbbb
pop
icebp
outsb
js
or
push
ja
dec
enter
scas
mov
scas
icebp
loop
cmc
lea
fs
jo,pt
adc
inc
pop
rcll
cmpsl
cld
fwait
lods
sbbb
or
aaa
inc
insb
lock
push
dec
imul
data16
push
sti
and
pop
mov
cmp
les
inc
xchg
pushl
sarb
in
lret
imul
and
mulb
out
mov
test
fimull
iret
into
mov
sub
daa
cmc
push
push
cmp
add
insb
test
dec
jne
mov
mov
fcompl
cmpb
fisttpl
jmp
mov
rorb
ret
es
cwtl
mov
pop
dec
push
fmuls
cmp
and
fdivrs
xlat
add
mov
xchg
adc
cmpsl
push
mov
fiaddl
popf
es
pop
and
xchg
call
out
add
insb
test
out
shll
fcmove
in
dec
mov
jle
cmp
mov
jne
and
jecxz
inc
inc
insl
dec
inc
or
lods
or
inc
inc
scas
dec
sub
gs
mov
dec
fsubrl
fcomps
test
enter
pop
sub
popa
test
stos
mov
sub
xlat
push
loopne
imul
stos
lret
cmp
stc
fs
pusha
mov
andl
push
rcrb
pushf
push
iret
and
sti
add
jnp
enter
push
jbe
pop
jl
or
adc
jle
repz
xchg
cmp
pop
add
cmc
push
mov
test
in
and
es
jbe
sub
mov
sbb
xchg
pop
enter
mov
popf
pop
movsb
clc
jno
xorl
js
mov
fs
xor
sbb
xchg
popf
mov
adc
fsub
outsl
push
fdivrs
add
jb
mov
loopne
mov
inc
jne
fadd
out
cmp
jo
movsl
xchg
inc
xor
out
jmp
mov
movsl
inc
pop
in
shl
mov
xlat
fnsave
stc
mov
pop
adc
ss
pop
and
lock
daa
rolb
sahf
pop
out
adc
mov
xor
mov
push
push
bound
cs
and
jmp
stos
inc
lods
inc
sbb
rcr
pop
mov
jae
es
and
mov
imul
mov
lds
stos
dec
push
mov
xchg
push
mov
jl
mov
into
or
push
xchg
fmull
push
addr16
stos
ja
fadds
adc
sbb
cmp
clc
orb
xchg
pop
push
out
add
pop
rol
outsl
mov
push
addb
push
mov
cmp
data16
jg
pop
scas
add
xchg
ficomps
lea
pushf
arpl
dec
adc
nop
adc
insl
xorl
push
push
mov
xchg
adc
out
or
repnz
jp
icebp
cmp
dec
or
repnz
arpl
push
dec
xor
push
sub
int3
mov
jp
sbb
mov
loope
mov
cmp
mov
jne
push
xlat
enter
and
push
lahf
sbb
push
stos
int
jmp
iret
les
pop
adc
cmpsl
dec
cmpsb
xchg
jecxz
das
pop
nop
roll
mov
inc
arpl
jo
cli
aam
or
in
rorl
push
popl
mov
push
cmp
sti
popa
mov
enter
and
dec
mov
std
mov
jbe
push
jno
inc
push
ret
insb
mov
push
fstp
insb
insb
into
lods
sub
in
test
rcrb
insl
or
cmp
rorl
leave
repnz
or
mov
cmp
addr16
testl
out
mov
cmc
xor
dec
jno
push
outsb
mov
sub
bound
pop
mov
fcmovbe
ljmp
lds
clc
xchg
and
jno
push
inc
or
mov
mov
adc
mov
pop
sbb
repnz
js
lret
mov
jnp
sub
pop
or
dec
aam
jb
sub
sub
repnz
pop
sahf
in
mov
jg
in
xor
lds
add
pop
scas
xlat
jne
mov
xchg
insb
lcall
outsb
xchg
dec
sub
inc
and
sti
daa
cmp
cmpsl
mov
add
or
test
std
arpl
add
sub
xchg
or
fldl
cld
xor
dec
aam
shrb
sbb
xor
inc
lds
aad
lahf
push
and
repz
pop
push
inc
cmc
pusha
mov
adc
lret
in
push
mov
inc
dec
stos
sub
imul
xchg
jae
xchg
mov
arpl
insl
push
addr16
adc
mov
mov
cld
fwait
stos
jl
fsubrs
push
in
dec
mov
lret
loope
sbbl
jbe
test
push
ljmp
mov
mov
clc
aaa
jge
fidivrl
mov
in
hlt
es
fadds
xor
push
mov
mov
in
pop
mov
push
jb
mov
in
mov
fwait
repnz
cltd
jo
mov
pop
insl
sub
in
jg
lret
xchg
and
jle
pop
and
sbbl
jmp
les
or
xor
ds
cmp
outsb
mov
push
pushl
clc
jecxz
mov
add
in
repnz
sub
sahf
and
dec
roll
and
adc
sub
xor
repz
pop
jo
and
inc
dec
mov
out
push
mov
dec
enter
popf
pop
and
sti
je
call
rcll
jp
mov
or
push
sub
mov
cmpsb
jae
sub
imul
xchg
dec
cmp
pushw
xor
mov
aas
mov
jle
addr16
sub
call
push
jmp
xchg
outsl
xor
adc
sbb
jg
inc
jmp
test
aad
cli
shrb
insb
mov
stc
insl
sbb
sub
lods
mov
std
jbe
mov
mov
mov
mov
jne
js
outsl
xchg
std
lcall
mov
cmpsb
mov
in
les
cmp
fistl
popa
mov
or
sub
pusha
sbb
push
ljmp
sub
loopne
fsub
loop
dec
adc
rclb
push
aad
ret
and
push
push
outsl
test
pop
loope
xchg
movsb
sbb
mov
inc
push
sbb
sahf
xchg
push
stos
push
mov
je
js
xlat
fwait
mov
cmpsl
xor
mov
stos
stos
jp
xor
dec
mulb
mov
dec
mov
mov
cmp
or
jmp
jno
or
inc
xchg
mov
push
adcl
push
jp
add
leave
aas
cld
mov
jbe
int3
dec
gs
sbb
push
in
aas
jle
sub
scas
in
ljmp
jg
cld
pusha
cwtl
or
fwait
mov
mov
fabs
jecxz
xor
mov
pop
and
mov
mov
cmp
inc
lret
shlb
mov
mov
mov
cmp
adc
outsl
cmp
or
mov
ljmp
mov
mov
test
stos
adcb
sbb
sahf
jb
pop
jns
mov
mov
enter
test
pop
lods
pop
and
jbe
sub
and
jo
push
or
jbe
push
mov
stos
jae
and
jae
mov
xchg
jle
movsl
test
xchg
jp
loope
adcb
pop
mov
sbb
adc
sarl
mov
xor
xchg
bound
mov
ds
adc
sbb
xor
push
leave
movsl
ljmp
scas
int3
sbb
call
xor
adc
xchg
lret
add
aas
bound
popa
cwtl
mov
call
jg
insl
jge
scas
sub
insb
jecxz
add
dec
aas
fisubl
out
stc
hlt
jge
cmpsb
sbb
push
xchg
in
xchg
call
push
aam
ljmp
das
or
sbb
cmp
jmp
test
cld
pusha
aaa
dec
lds
fmul
lcall
inc
push
in
loope
and
arpl
or
cmp
into
adc
xor
sti
movsl
fstpt
xor
mov
mov
rolb
adc
or
sahf
pop
out
xor
lods
stos
add
test
aaa
divb
pop
mov
jbe
dec
and
mov
push
jbe
ljmp
mov
mov
fwait
xor
lods
push
in
repz
pop
jns
mov
add
jo
pop
insl
ljmp
xchg
xor
sti
add
add
aad
cld
push
push
pop
xor
lret
cmp
js
mov
dec
jae
mov
das
popa
lahf
push
mov
xlat
rcr
andb
dec
scas
aas
ss
push
stos
dec
mov
mov
mov
enter
fsubl
ja
sarb
lods
lahf
fs
mov
sbb
notb
push
add
sbb
pop
inc
sub
jl
scas
sbb
rolb
push
scas
jmp
lods
jb
or
inc
movsl
jg
fcomp
lcall
sbb
xor
scas
sbb
xchg
fnstenv
jge
dec
int
stc
orb
loope
cli
adc
fmull
xlat
sub
fistps
pop
dec
loope
cmpl
cltd
pop
mov
ficompl
fsubrl
jg
dec
pop
loope
jge
sub
cmp
mov
cmp
iret
sbb
push
and
xchg
mov
das
stos
cltd
stos
int
cmpb
xchg
push
sti
xchg
xchg
and
shlb
insb
pusha
scas
roll
fs
jle
mov
mov
jecxz
sahf
lods
cmpsl
jo
mov
movsl
mov
scas
fs
lret
pusha
insb
ja
sub
inc
jge
aaa
add
andl
adc
xor
out
and
fildl
cmp
loop
lret
pop
aaa
mov
andb
addr16
pop
jp
ljmp
cmp
out
cmp
cltd
test
nop
fisubl
imul
movsl
xchg
fs
push
fsub
cmp
adc
test
cmc
pop
add
or
lock
pushf
xor
aad
stos
jnp
sti
fsubr
sbb
add
fcompl
inc
icebp
lock
push
popf
out
mov
add
lds
out
das
xlat
inc
adc
loopne
dec
jl
movl
pop
add
adc
popf
dec
mov
lret
mov
and
push
xchg
leave
cmpb
mul
scas
sub
dec
adc
mov
push
push
dec
outsl
mov
fs
adc
js
pop
push
stos
stos
add
arpl
popf
sbb
sbb
arpl
fmuls
mov
shlb
xchg
pop
out
xchg
test
mov
add
jae
and
and
and
lahf
or
stc
pop
rorb
mov
mov
shl
lock
add
and
insb
popf
or
roll
and
fidivs
jae
adc
sbb
fs
pop
aaa
inc
mov
jmp
pop
out
imul
push
nop
fs
mov
call
xchg
or
sbb
js
pop
push
push
and
out
xchg
pop
xor
xor
lcall
mov
pop
fisubs
in
aaa
inc
xor
push
mov
wrmsr
dec
dec
lods
lahf
cli
jno
stos
je
pop
or
xchg
inc
mov
mov
mov
dec
out
and
dec
andb
xchg
sti
sbbb
aam
fldenv
pop
or
lock
icebp
mov
outsb
dec
arpl
ret
jno
add
cmpsl
xchg
testl
mov
sti
lods
jmp
ja,pn
lret
sbb
push
sbb
add
leave
pop
repz
sbb
and
stos
add
dec
or
lea
insl
mov
sub
imulb
and
add
imul
inc
ss
xor
jge
inc
sub
js
fwait
or
mov
jo
loope
hlt
out
pop
jno
cmp
mov
or
je
fmul
es
and
jne
out
or
dec
out
lods
aam
shlb
jecxz
mov
enter
cltd
and
pop
jae
mov
xchg
fwait
int
mov
bound
fsub
test
inc
call
ret
aad
add
mov
aam
aam
push
pmuludq
sub
jae
mov
hlt
push
xorb
add
xor
mov
lea
int3
cltd
std
int
movsb
inc
xor
shll
bound
push
push
cmp
jle
and
adc
sub
imul
jmp
jbe
add
cmp
addr16
pop
mov
adc
jle
sub
mov
mov
sub
push
sbb
mov
pusha
push
cmpsb
push
icebp
out
movsl
and
and
xchg
sbb
add
mov
outsl
sbb
inc
push
push
test
xchg
hlt
popa
ds
mov
std
and
mov
movsl
pop
fistpl
jmp
stc
xchg
ss
fs
lock
sbb
shlb
push
fdivs
mov
cmp
and
xchg
push
push
mov
jg
sti
xchg
mov
jle
sbb
notl
or
or
fisubrl
push
mov
pop
out
mov
sahf
sarb
mov
sub
xchg
push
negl
popa
in
mov
push
outsb
ficoml
inc
lea
fucomi
add
dec
fs
repnz
insl
leave
xchg
lcall
sub
enter
call
inc
jecxz
push
mov
xor
xchg
cmp
icebp
ficomps
fistps
xorb
loope
xor
out
add
insl
imull
push
stos
movl
mov
dec
jecxz
in
dec
xchg
xlat
mov
inc
dec
loop
sti
xchg
scas
hlt
xor
mov
lahf
lods
repz
stc
leave
add
rcr
fs
arpl
xor
xchg
call
mov
pop
jmp
xor
popa
mov
in
jle
lods
aad
mov
mov
cmpsl
pop
fisttpll
out
aas
stc
and
mov
ja
mov
pop
adc
sbb
fs
and
push
leave
cmpsb
add
cmp
or
sbb
jle
push
mov
aas
mov
lock
mov
and
cmp
adc
and
mov
shll
out
call
xor
pop
pop
stos
mov
inc
out
std
or
fcomps
std
ja
pop
stc
andb
push
pushf
xlat
dec
sbb
xchg
and
ds
pusha
inc
notb
and
push
into
mov
lahf
cmc
xchg
notl
or
and
push
leave
inc
mov
shlb
loopne
or
mov
sbb
out
fsubr
bnd
dec
test
in
mov
fidivs
fwait
lock
daa
or
cs
cmp
fldt
lods
and
lock
pop
je
sbb
push
xchg
inc
nop
jg
lds
inc
ja
mov
add
push
insb
xor
fdivrs
cmp
push
shlb
int3
loopne
xchg
inc
adc
pushf
and
xor
or
pop
jb
pop
mov
xor
add
sub
js
in
scas
popa
imul
jo
cld
xchg
jnp
adc
mov
mov
imul
rclb
jb
leave
adc
dec
dec
sahf
test
or
mov
mov
or
mov
adc
cs
inc
shlb
je
imul
xor
push
push
dec
stos
mov
mov
aam
push
negl
iret
cmpsb
adc
xchg
lock
pop
or
xchg
ret
adc
xchg
fsubs
cmpsb
inc
out
fwait
and
movsb
lcall
sbb
sti
inc
les
repz
and
fildll
inc
lods
sub
adc
out
vmovntpd
jmp
insb
jmp
mov
mov
dec
shl
push
iret
xchg
mov
push
cmc
pop
sub
mov
jb
out
adc
in
popa
mov
insb
pop
mov
inc
jae
sbb
leave
call
xor
pop
aad
std
scas
cmp
scas
adc
in
in
mov
sub
in
mov
stc
rcrb
jae
jb
out
xlat
pop
push
mov
adc
inc
enter
orb
ret
mov
les
add
mov
cli
cmp
mov
ficoms
lock
cltd
sub
add
leave
rcrl
jno
ret
mov
in
pusha
lock
mov
sbb
cli
inc
pop
fdivrl
jo
ja
sbb
add
int3
and
dec
dec
outsb
loopne
xlat
mov
aad
sub
adc
inc
mov
mov
fnstsw
cmpsl
add
fs
lahf
insl
rclb
lcall
fdivrl
mov
cmp
sbb
ret
or
push
jl
ljmp
add
cwtl
mov
adcl
int3
jns
mov
mov
cmp
pop
ja
inc
or
in
lock
adc
movsb
andb
dec
je
adc
in
add
test
in
mov
sbb
mul
adc
inc
and
ret
into
mov
lods
sti
jnp
addr16
mov
idiv
xchg
dec
daa
lods
dec
fldcw
jbe
mov
jge
and
jmp
dec
fwait
aam
push
and
add
sbb
push
cli
lods
cld
pop
sti
insl
arpl
jno
das
adc
rorl
outsl
decl
inc
daa
mov
es
mov
pop
loop
imul
xchg
xchg
inc
push
or
orb
test
xchg
pop
jns
cld
push
xchg
jnp
xor
push
aaa
lahf
int
inc
mov
xor
mov
iret
pop
and
bound
lea
add
movsl
xor
insl
sbb
add
ds
int3
xchg
push
out
mov
cli
adc
xlat
adc
dec
dec
mov
test
sbbb
mov
popf
xchg
rolb
mov
je
cmp
push
cmp
add
insb
lock
lock
add
sbb
aaa
daa
aam
push
cli
mov
out
or
rclb
mov
out
loop
scas
sub
add
jnp
pop
rcll
pop
in
xchg
aas
mov
fisubrl
hlt
data16
lock
adc
lock
popa
cwtl
jb
xchg
dec
or
sub
fsub
nop
movsl
and
jl
mov
sarb
dec
loopne
mov
enter
imul
repnz
or
jo
jge
les
jmp
sub
lret
jbe
sbb
outsl
dec
stc
aad
mov
xchg
jnp
insl
inc
sti
sub
cmc
jg
xchg
jg
mov
test
xchg
mov
add
mov
mov
jmp
into
repz
cmp
out
ret
enter
push
push
cs
push
sbb
sti
test
sbbb
mov
jge
aad
out
insl
das
fsubs
rclb
punpcklwd
push
enter
jle
leave
in
int3
imul
psrad
or
test
lock
dec
push
mov
mull
cli
les
xchg
imul
mov
cld
cmp
ficoms
es
mov
fs
jne
jne
test
and
mov
test
movsl
popa
mov
sub
shlb
and
add
mov
scas
inc
and
loope
ficoms
push
pop
adc
sbb
sbbl
popf
popf
rcll
cmp
stc
pop
mov
lea
cmp
cmpsl
xchg
cmp
out
int3
outsb
pop
cltd
not
xchg
cmp
insl
mov
xchg
paddusw
mov
insb
sbb
test
icebp
inc
outsb
jmp
push
mov
neg
push
out
jp
xorb
pop
subb
jmp
push
sub
push
cmc
insl
cmp
scas
lret
jmp
or
ljmp
rcl
ret
mov
and
sub
mov
test
aam
outsb
mov
pusha
cmp
dec
shlb
movsl
push
push
sbbl
mull
addb
pop
lahf
arpl
dec
out
pop
cli
mov
rcrb
andl
nop
arpl
push
adc
adc
mov
pop
aaa
stos
cmp
add
push
iret
shlb
je
or
outsl
icebp
test
mov
dec
adc
insl
test
sahf
sub
sub
jmp
ljmp
pop
mulb
mov
adc
mov
cmpsb
orb
jo
out
test
sbb
cmc
inc
in
push
jmp
lahf
mov
dec
dec
test
call
and
loopne
lcall
and
pop
push
aad
ljmp
push
movsb
ds
inc
js
jge
push
xchg
rcll
mov
dec
jb
das
fmulp
jp
xor
push
lret
xchg
push
xchg
dec
adc
pusha
test
push
cltd
fwait
pop
inc
mov
in
rclb
cmp
xor
insl
or
dec
hlt
fsubr
lock
imulb
cmp
add
pop
lds
cmpsb
imul
ss
filds
mov
in
test
mov
dec
sbbb
in
sub
int
adc
or
repnz
mov
jle
rclb
movsb
fcomps
lahf
inc
leave
push
dec
xchg
fwait
pop
cwtl
cli
mov
sub
add
and
mov
fwait
cld
jmp
add
lcall
pushf
jnp
mov
mov
roll
dec
xorb
insb
rcl
dec
sub
fnstcw
add
mov
push
xchg
and
mov
mov
add
add
sub
cmp
add
sbb
idiv
mov
aad
or
fists
fisttps
jmp
rcrl
mov
popa
add
decb
aaa
xchg
lahf
bound
xchg
xor
inc
add
jae
mov
popl
adc
xchg
out
mull
and
xchg
fcomi
mov
push
push
in
pop
icebp
fs
xor
push
mov
jnp
call
xor
pop
out
add
adc
test
ficoml
lcall
clc
insl
popf
stos
add
xchg
aad
xor
mov
in
notb
mov
jmp
mov
cmp
repz
or
jmp
fldln2
push
imul
adc
int
xor
and
data16
cmp
xchg
subl
mov
add
inc
add
sbb
js
in
movsb
fimuls
out
mov
pusha
mov
movsb
sub
popa
cmp
in
mov
mov
sahf
rorb
adc
loop
ret
mov
push
movsb
addr16
nop
dec
pop
mov
dec
dec
push
jbe
jbe
and
daa
xchg
movsb
xchg
mov
lock
xor
jge
stos
leave
dec
cmp
xor
sbb
dec
lds
jno
fsubl
and
jb
adc
push
sti
sub
stc
mov
fmull
fmul
lods
fsubs
cld
pop
adcb
lods
mov
fdivr
inc
fs
out
movsl
js
rcll
jl
repnz
fwait
insl
dec
mov
and
adc
dec
nop
sub
pushl
aam
rclb
mov
mov
and
inc
mov
stc
out
aas
or
inc
add
cmpsb
in
mov
jo
call
or
jo
ficoml
push
xor
cmp
pop
push
jecxz
push
aas
push
ja
push
cmp
lods
out
out
movsb
pop
push
jecxz
or
bound
in
fisubl
es
lock
mov
movsb
fstl
mov
test
ja
add
sbb
test
xor
mov
cmpsb
xchg
ret
jmp
add
push
mov
xor
xchg
je
add
fdivl
scas
add
out
pcmpgtw
mov
imul
add
les
mov
mov
daa
popa
inc
add
adc
mov
or
dec
inc
push
jnp
pop
cmp
ja
lock
cmpsb
movsb
jno
repz
je
aad
jb
mov
push
ss
imul
and
xchg
jbe
jne
sbb
mov
mov
mov
into
jne
push
adc
out
jns
ficompl
addr16
lcall
loope
int
dec
mov
xor
leave
rorl
imul
dec
ja
pop
pop
inc
shll
inc
lods
fdivs
and
xchg
dec
push
jae
mov
scas
in
incl
mov
js
lea
sub
shrb
sub
lcall
add
inc
or
push
decb
mov
jno
ss
dec
xor
imul
rorb
arpl
leave
adc
xchg
imul
ficomps
or
add
outsl
push
dec
or
ja
les
jnp
int3
pop
clc
xor
movsb
je
xchg
stos
inc
xchg
lret
shlb
mov
out
sub
aas
fnstenv
lods
aaa
push
sbb
sarb
roll
jle
mov
inc
lea
rcll
jecxz
jo
sbb
inc
jb
sbb
stos
xor
adc
outsb
jmp
mov
push
fistpll
adc
scas
cmpsb
push
jae
xchg
pushf
mov
add
fcoms
jmp
sub
sub
mov
imul
or
jne
xchg
pop
mov
neg
sti
popa
into
push
mov
pop
inc
xor
add
ss
lods
gs
fimuls
movq
jmp
mov
mov
loope
push
push
jge
imull
test
fiaddl
test
insl
dec
lods
and
orps
popa
sahf
and
popf
fdivs
cmp
int3
pop
mov
xlat
mov
mov
int
sbb
mov
push
cmpl
shlb
and
add
push
inc
or
xor
ja
cltd
ret
mov
lock
into
rcrb
loopne
repnz
cltd
mov
in
sarb
pop
cmovns
cmc
or
nop
push
popf
andl
lods
jne
aas
mov
repnz
xchg
xor
push
inc
jmp
or
insb
mov
scas
inc
mov
sub
loop
dec
jg
std
sbb
out
test
aam
fldl
push
push
jbe
xchg
xchg
loope
imul
xchg
fidivrs
pusha
and
mov
int
or
cld
push
adc
push
adc
stos
pop
xor
iret
jnp
and
lcall
lret
inc
xlat
cmp
cli
sub
insb
xor
repz
clc
mov
push
fstl
push
sbb
sbb
mov
mov
xchg
insb
bound
pop
fstpl
shll
xor
movsl
lret
popa
jns
and
push
outsb
pop
push
std
mov
enter
imul
push
mov
mov
inc
pop
scas
dec
xchg
sbb
jb,pt
out
and
mov
inc
sahf
iret
mov
leave
leave
mov
jge
hlt
jne
pushf
imul
push
nop
jno
push
mov
rep
jo
push
mov
movb
dec
add
out
pop
xchg
stos
mov
add
pop
jmp
dec
jl
xchg
cmp
and
xor
mov
retw
cli
fisttpl
out
push
std
xor
ljmp
push
push
jbe
movsb
ja
push
roll
jecxz,pt
sbb
mov
ret
add
sbb
adc
jmp
push
and
mov
xlat
out
xchg
and
cwtl
push
mov
bound
adc
mov
adc
cmp
lea
and
fmul
jnp
mov
sbb
lods
mov
test
or
and
push
cmc
aad
and
sbb
dec
pop
mov
adc
jnp
xlat
insb
cmp
xor
add
ret
add
jmp
jo
and
inc
sub
lret
mov
xor
inc
cmc
cmp
nop
add
cmp
add
bound
int3
lcall
lahf
leave
ljmp
or
push
daa
lods
add
int3
sbb
add
xchg
jmp
call
ret
or
test
test
cmp
test
lods
jmp
pop
mov
outsl
or
sub
pop
stos
je
push
xor
and
cmp
or
sti
movsl
mov
mov
ds
xchg
mov
cmpsl
mov
adc
and
stc
and
je
lds
out
and
iret
mov
mov
into
or
or
and
fwait
icebp
pop
mov
imul
gs
adc
popa
xchg
out
mov
lar
addl
adc
fidivs
sub
dec
push
sbb
hlt
enter
cmp
test
mov
push
sbb
sti
insb
pop
rolb
xchg
out
sbb
xor
sahf
pop
fiaddl
xchg
xor
sub
adc
je
nop
jg
mov
mov
xor
scas
int3
hlt
add
iret
ss
data16
imul
sub
sub
xor
insl
lcall
and
inc
outsl
adc
adc
cwtl
int3
fisubrl
mov
cmpsb
fisubrs
inc
pushf
ds
pop
fs
push
arpl
das
rorb
jge
and
repz
cltd
xchg
test
imul
jbe
cmc
cmp
repnz
pop
jo
jle
out
je
jno
push
rcrb
mov
fcompl
jp
loopne
xchg
std
pop
lea
testb
xchg
and
jmp
mov
out
xchg
loope
add
mov
mov
mov
inc
sti
jns
mov
jmp
in
jmp
mov
adc
push
mov
jno
xchg
fadds
rorl
push
sub
fnstcw
adc
fstps
ret
out
adc
es
push
mov
cmpsb
lcall
jmp
roll
adc
repnz
mov
iret
and
pop
lcall
pushw
sub
popf
jne
leave
xchg
repz
dec
scas
xchg
stos
aas
es
int
jl
xchg
loope
mov
jmp
xchg
adc
lahf
gs
std
daa
xchg
sbb
sbb
icebp
xchg
and
nop
test
add
dec
mov
push
xorl
mov
xchg
fldl
hlt
xlat
mov
lea
and
lods
rorl
or
adc
jl
cmp
int3
ljmp
and
sub
xor
pop
add
rolb
xor
loopne
out
push
push
jmp
fidivl
pop
cmpb
mov
pop
int
add
mov
imul
repz
testl
add
cwtl
sbb
sub
sbb
ljmp
daa
cmp
push
xchg
sub
jp
or
pop
mov
daa
dec
mov
mov
je
jns
mov
shlb
out
jnp
cmp
mov
arpl
ret
into
mov
out
shll
jb
pop
sub
loop
insl
int3
dec
jo
js
push
xchg
shrl
xor
adc
divps
add
jno
mov
xchg
jno
push
jnp
movsb
pop
inc
pop
sbb
and
add
cltd
lods
mov
jbe
jnp
into
call
inc
pop
out
jmp
inc
mov
add
push
dec
jnp
ss
mov
adc
mov
mov
fcomps
into
fxch
jns
aas
insl
cmp
loop
enter
jae
add
sbb
push
jnp
scas
testb
gs
mov
sbb
and
rcl
mov
and
ror
mov
or
scas
sub
outsb
sahf
adc
pop
fildll
jg
or
add
fwait
jae
sahf
jmp
sar
fcos
xlat
fnstcw
pushf
cmp
and
outsl
pop
addb
mov
jl
add
out
pushf
jmp
lcall
mov
cmp
insb
adc
dec
test
and
sbb
into
sub
inc
in
xchg
add
adc
xor
out
pop
subb
jbe
cmc
insl
fnstsw
lahf
sbb
push
mov
lret
jne
mov
mov
out
jg
aad
shll
stos
in
inc
sti
negb
hlt
pop
frstor
test
jo
dec
xchg
xchg
pop
sub
jg
jbe
popf
push
jo
ret
cld
imul
mov
test
add
leave
test
arpl
cmpsb
mov
sahf
and
stos
mov
pop
mov
insb
jb
cld
dec
jmp
imul
push
cmp
sarl
fisttpll
ljmpw
or
mov
mov
fsub
imul
xor
pop
dec
andl
sbb
xor
push
fimull
mov
adc
xchg
sahf
into
pop
xchg
ficoml
mov
das
loope
lahf
and
addr16
push
rcl
jbe
mov
test
out
inc
je
push
mov
ret
addb
xchg
xchg
in
jae
lahf
es
sub
or
jg
cmp
cmp
iret
dec
adc
xchg
add
scas
mov
cmp
inc
jb
jp
push
dec
pop
push
incl
cmpsb
test
loopne
loope
cmp
sub
adc
into
add
xor
in
ljmp
imul
cs
rorb
jge
adc
dec
adc
cmpsb
pop
out
cli
pop
dec
mov
ljmp
bnd
hlt
into
inc
lcall
fisubrl
mov
aam
jo
dec
push
xchg
xor
icebp
out
imul
adc
jecxz
add
mov
mov
mov
movsl
jb
push
and
je
shr
dec
fdivl
sti
dec
add
add
fbld
test
adc
dec
fistpll
jns
shlb
inc
sub
mov
jecxz
stc
jbe
out
xor
cmp
in
aas
js
dec
icebp
jl
xor
inc
subl
lret
pop
ret
jo
lods
jle
pop
xor
xchg
and
enter
aad
sti
jle
jmp
sti
lret
sahf
xor
adc
jno
mov
je
enter
or
jae
add
lret
arpl
xchg
adc
das
fmuls
stos
sub
pop
jbe
enter
jne
icebp
xor
jae
fbld
jmp
push
and
int3
out
cmpsb
in
sti
gs
push
movsl
inc
aas
daa
movsb
fistpl
pop
stos
std
cmc
xchg
push
or
mov
mov
jp
mov
std
add
jbe
mov
in
mov
xchg
and
xchg
sub
sub
gs
sbb
pop
imul
mov
cmc
adc
fildll
mov
cmpsb
je
ret
inc
mov
btc
jbe
fisttps
sub
nop
cmc
in
mov
js
xlat
stos
inc
jno
pushf
decl
mov
loopne
repnz
xorl
dec
loopne
mov
adc
dec
in
jnp
push
arpl
ret
iret
mov
popf
or
sahf
mov
xchg
std
lret
jecxz
inc
add
pop
cmp
call
inc
out
pop
js
movsb
fbld
lret
xlat
or
mov
dec
std
testb
ret
mov
int3
mov
mov
jno
dec
xor
test
xor
xchg
dec
js
ficompl
out
and
in
inc
mov
rcl
jmp
mov
mov
test
and
lahf
cli
or
push
dec
lods
cmp
push
mov
cmp
mov
pop
lcall
jns
add
mov
out
shlb
inc
or
out
lods
test
sub
and
fimull
push
add
aas
jnp
call
leave
adc
cmp
push
loope
push
repz
and
push
inc
pop
add
sahf
xchg
cmpsb
jns
loop
xchg
neg
fucomi
jae
push
mov
or
xchg
push
arpl
mov
test
in
pop
test
imul
jnp
mov
fbstp
mov
cwtl
jno
push
sub
pop
addr16
jb
jmp
shll
sub
call
mov
aam
test
das
push
test
pop
mov
inc
outsl
push
inc
pushl
adcb
mov
movsb
rcll
clc
adc
idivb
shrb
or
clc
push
test
rcrb
lds
out
rorb
pop
pop
es
mov
movsl
out
aaa
cmp
sub
and
cmc
adc
dec
cmpb
xlat
add
pop
popf
sbb
push
xor
cltd
mov
fmuls
cltd
jbe
in
mov
mov
lcall
mov
adc
cwtl
push
sub
or
pop
and
or
mov
sub
add
mov
fstpt
cmp
sub
jbe
or
dec
jmp
movsl
pop
movsb
popf
cmp
or
in
sub
mov
jnp
jg
shrl
aaa
scas
insb
bound
xchg
je
cltd
leave
outsl
and
movsb
sub
fdivr
mov
arpl
lcall
push
xor
cmc
pop
inc
fildll
xor
and
pushf
xchg
lret
mov
in
cmp
push
pop
aas
in
xchg
aam
testb
jle
mov
into
gs
test
add
pop
aaa
test
je
pop
pop
sub
pop
inc
imulb
adc
cmpsl
addl
pusha
and
outsb
xor
mov
dec
enter
aas
xlat
dec
sbbl
mov
fcompl
cmpsb
idiv
jno
push
dec
mov
rcrl
mov
pop
iret
cmpsb
xchg
mov
cmpb
xor
lock
inc
sbb
push
cs
pop
ret
mov
inc
xchg
rol
aad
push
or
or
mov
in
fsubrl
mov
cmp
and
adc
and
test
jae
cmp
lcall
push
mov
js
and
dec
cmp
stos
cmp
pop
je
fldl
or
dec
int
fwait
pop
lods
mov
sti
repz
push
out
xchg
jmp
pop
sub
adc
out
loope
pop
pop
sub
inc
int
sbb
bound
push
bound
aam
shrb
inc
fwait
adc
out
out
and
mov
xchg
cmc
das
xchg
pusha
arpl
loope
stos
ficoml
mov
push
dec
adc
jnp
pop
fidivrs
pop
stos
inc
in
xchg
cmp
jge
out
xchg
out
jnp
test
jecxz
dec
sub
call
lds
inc
pusha
push
jns
movsl
sti
mov
mov
scas
mov
call
fcoms
cmp
or
cmc
roll
test
enter
lods
iret
lcall
xor
inc
int
sub
jecxz,pt
ds
and
aam
and
lods
mov
mov
add
xor
inc
daa
or
mov
es
cmc
add
loope
stc
int3
mov
push
or
mov
xlat
ss
cmpb
xchg
xchg
sub
fdivs
xchg
add
jp
jle
dec
ds
push
xchg
call
int3
xor
jns
nop
flds
mov
das
mov
xchg
cmp
sub
arpl
in
loope
insb
jnp
xor
push
das
pop
lret
inc
xchg
xchg
lock
movsb
stos
dec
jg
jp
sbbb
aaa
mov
mov
lret
or
dec
pop
fisttps
or
movsb
jecxz
inc
push
cmp
lds
out
bound
mov
xor
das
popf
adc
pusha
dec
push
gs
fstl
lahf
dec
mov
ss
and
mov
ficomps
xchg
lods
cmc
mov
mov
insb
test
mov
shll
mov
lock
mov
fwait
inc
cmp
sub
test
pop
jo
push
and
lea
lock
mov
sbb
mov
sbb
scas
stos
or
in
pop
and
daa
add
jle
pushw
cmpsb
insl
xor
xor
or
xchg
push
out
aam
rcrb
jmp
ljmp
pusha
or
cltd
sahf
inc
repnz
fcomps
out
push
pop
adc
stos
sub
leave
fsubs
nop
fwait
inc
cld
push
mov
outsl
cwtl
cmp
loope
jmp
subl
jno
lods
movsl
inc
inc
popa
imul
cmpsl
imul
fimuls
sub
test
xchg
dec
adc
xor
lahf
hlt
pop
ret
xchg
sub
sub
pop
fisubl
or
jg
jl
jne
repz
arpl
inc
or
sbb
mov
aas
push
sbb
cltd
jl
dec
ds
jg
mov
int
pop
mov
jae
fsubs
push
sub
dec
mov
out
lcall
and
es
ret
lods
adc
adc
stos
out
xchg
mov
sbb
dec
out
mov
mov
data16
mov
cs
loope
inc
push
pop
out
xor
add
mov
or
aaa
cmp
push
mov
jmp
test
inc
xchg
sbb
push
lcall
dec
inc
sub
int3
ret
sub
fisubl
inc
or
jmp
test
pusha
add
popf
add
in
mov
mov
aas
loope
xchg
sub
and
insb
xchg
xchg
and
popa
pop
and
orl
mov
sub
jns
pop
push
sahf
mov
rclb
cli
mov
pop
adc
mov
dec
xor
test
testl
repz
xorl
xchg
push
stc
cmp
inc
out
or
mov
adc
add
stc
jns
movsb
cwtl
sti
xlat
mov
pusha
movsb
inc
lock
or
and
outsb
aas
jbe
dec
pushf
leave
cs
ret
push
push
mov
add
fldcw
lods
bound
pop
fstpt
insl
push
mov
out
negl
dec
inc
xchg
fwait
nop
cmp
sarl
mov
adc
jbe
fimuls
enter
addr16
xor
ds
jg
mov
add
add
adc
loopne
movsl
pop
subl
jne
cmp
ss
mov
jb
pop
mov
push
movsb
mov
test
adc
push
and
rorb
test
or
sub
mov
cmpsl
stos
imul
cwtl
out
sti
stc
cmpsb
mov
loopne
outsb
adc
shrl
sti
push
dec
xchg
cmc
mov
sub
push
inc
push
pop
pop
stos
dec
iret
dec
jecxz
jns
jae
mov
and
fldcw
mov
pop
sti
sub
xor
mov
add
jge
jge
lods
xchg
or
or
int3
pop
or
inc
xlat
jg
sub
test
pusha
fs
out
icebp
sbb
jl
or
das
imul
or
cwtl
jbe
jne
out
cmp
mov
jne
lods
ficompl
cli
rclb
xlat
sub
xchg
cmp
xchg
mov
mov
sbb
stos
cmp
jbe
jo
or
scas
js
fsubrs
mov
jnp
cmp
std
test
fadd
fcoml
out
aad
push
jp
pop
loope
fistpl
pop
cli
orl
cmp
in
out
out
push
std
xor
push
add
xchg
lock
dec
bound
mov
cmp
fcomps
aam
ds
repz
jne
fdivrp
test
pop
pop
pop
insb
inc
mull
sub
add
int
pop
stc
mov
xor
push
data16
sub
jne
and
push
in
and
adc
movsb
pop
mov
or
test
lds
insl
inc
movsb
ss
and
iret
pop
insl
lods
movsb
ljmp
mull
mov
rclb
dec
js
xchg
clc
das
pop
dec
dec
cli
jae
popf
mov
fsubl
rolb
mov
jmp
inc
fdivrs
mov
mov
rcll
inc
ss
add
jmp
and
mov
xchg
lcall
imul
pop
incb
or
movsb
icebp
iret
std
sbb
or
push
push
in
or
call
xchg
repz
fisttps
inc
cld
pop
aaa
ljmp
sarb
push
jl
push
mov
push
cmp
add
inc
movsb
aas
cs
adc
inc
sahf
mull
scas
sub
mov
push
test
xor
test
in
sub
jae
or
dec
daa
lock
jmp
and
sub
jne
mov
ljmp
add
in
lock
mov
jge
pop
fld1
outsl
xor
push
les
nop
jbe
inc
ficoml
decl
inc
jecxz
pop
in
adc
repnz
into
push
jnp
lds
out
orb
daa
xchg
jnp
mov
cmp
xchg
outsl
hlt
aaa
inc
lds
dec
int
in
mov
cltd
shlb
cmc
loopne
into
mov
imul
daa
push
insl
out
push
into
ljmp
sbb
cmp
fdivs
daa
test
and
mov
pushf
inc
out
insb
pusha
pop
push
pop
adc
push
fstps
fdivl
adc
out
jmp
pop
or
addr16
enter
mov
movsb
stos
push
push
roll
or
push
adc
orl
ss
jecxz
mov
mov
sub
jg
lods
push
mov
mov
xchg
mov
lret
fcomps
mov
mov
push
enter
enter
aam
push
out
out
out
jmp
nop
fdivrs
adc
loopne
mov
pop
aam
pushf
adc
jnp
lock
dec
jb
inc
inc
aas
dec
outsb
sbb
sbb
xor
jmp
rolb
ret
xor
mov
push
or
mov
js
jbe
loopne
fchs
test
dec
movl
pushf
arpl
mov
cmp
jge
push
leave
outsb
push
dec
cmp
leave
jle
inc
cmp
xchg
push
imul
xchg
xor
xchg
or
ljmp
add
imul
adc
sahf
movsl
lret
push
mov
mov
and
je
pop
rolb
or
arpl
cmp
ret
out
fisubs
mov
dec
mov
add
test
rol
fdivp
stc
pop
mov
test
inc
cmpsb
out
cmp
data16
rorb
jmp
fisttpl
cvtps2pi
mov
and
lret
cmp
imulb
ret
mov
fcomps
add
or
out
xor
cmp
cs
jb
sub
faddl
xchg
outsb
test
aas
pop
or
push
dec
mov
cmpsl
dec
inc
stc
jp
stc
mov
dec
lret
xchg
add
insb
subb
xchg
stc
xor
mov
pop
pop
mov
jecxz
xor
flds
lret
dec
movsl
iret
insl
or
ret
cmpsl
mov
addr16
push
mov
outsb
int3
fsts
jmp
outsb
jp
xor
jb
mov
lds
mov
aam
stc
mov
rol
pop
and
inc
popf
pop
sbb
push
jl
sbbb
pop
inc
or
pushf
jb
aas
fwait
dec
arpl
dec
jg
xchg
lock
dec
push
clc
adc
scas
int
fnstsw
lods
nop
cmp
add
in
int3
mov
and
mov
adc
lahf
dec
insl
add
push
dec
and
mov
in
std
and
andb
int3
daa
gs
mov
or
shrb
mov
fs
std
adc
cmp
fs
sub
rolb
sbb
lock
add
jp
addr16
push
sub
fwait
push
or
push
sbb
or
pop
mov
inc
or
fs
xor
sub
inc
xchg
jmp
push
fisttpl
adc
jns
push
or
xchg
cmp
mov
pop
jp
enter
movsb
dec
jo
mov
imul
insb
or
mov
or
mov
sub
push
ss
sbb
cwtl
cmp
aad
xchg
xchg
gs
pop
sub
adcl
xchg
lahf
test
cmp
test
xchg
jno
xor
shlb
push
sub
mov
sub
mov
inc
mov
dec
mov
and
js
dec
jl
push
cmpsb
or
or
movsb
dec
dec
pusha
dec
adc
insl
push
stc
xor
scas
xor
dec
sbb
nop
add
or
jg
mov
push
sahf
pop
lret
fwait
sbb
inc
ficoml
repz
sahf
xchg
cmpsl
sub
lods
adc
mov
cmp
dec
sbb
adc
mov
icebp
iret
inc
cmp
in
sub
insl
cltd
cmp
lahf
mov
icebp
pop
test
pop
ja
push
cli
xor
push
ret
and
adc
jne
ret
or
mov
lds
dec
xor
push
mov
push
cwtl
push
daa
mov
call
inc
pop
repnz
jns
mov
cmp
clc
xchg
mov
pusha
push
cmpsb
sbbl
push
int3
push
sbb
xlat
jbe
pop
xor
lea
jge
loope
xchg
xor
ret
stos
pushf
cmp
sahf
inc
push
jecxz
add
cmc
push
sbb
pop
adc
xchg
lods
sbb
adc
cmpsl
jb
xchg
jge
iret
push
outsb
push
lret
jae
pushf
xchg
daa
ljmp
mov
lret
pop
push
insb
lahf
insb
arpl
jne
or
dec
mov
repz
mov
mov
inc
inc
pop
nop
leave
inc
xor
push
iret
cmpsl
mov
das
add
mov
jecxz
jle
jno
inc
jo
mov
fwait
aad
xlat
xchg
push
in
inc
sahf
xor
inc
or
jmp
stos
pop
lods
or
xchg
push
mov
sahf
shll
fnsave
mov
movsb
rolb
push
xchg
je
js
std
dec
jb
imul
enter
rorl
adc
test
imul
or
rorb
pushf
sti
xchg
js
lods
fisubl
aam
push
insb
or
mov
xor
out
mov
xor
sbb
dec
ret
fadd
iret
cltd
and
imulb
imul
cltd
loope
jp
dec
outsb
lea
fbld
jno
insb
mov
sti
lock
fwait
dec
gs
add
xor
int3
jne
mov
xor
sbb
rcrl
cmp
jno
dec
scas
pop
lahf
movsb
inc
enter
mov
fidivl
mov
xchg
ljmp
loopne
pop
jp
leave
adc
jns
lahf
es
push
insl
cmp
sar
adc
xchg
cltd
testl
scas
sarb
or
dec
mov
mov
mov
xchg
jecxz
aaa
inc
test
in
fwait
jl
sub
cmp
mov
test
andl
mov
push
mov
inc
movsb
sbb
in
movsb
push
nop
shll
and
enter
fwait
dec
pop
aam
popf
lods
xchg
cmp
inc
pop
xchg
push
or
ds
mov
jge
sub
dec
cli
pop
adc
test
cmp
leave
int
sbb
adc
je
movsb
sbb
xchg
iret
or
sbb
cmc
inc
popf
lret
fisttpl
push
inc
in
inc
pop
mov
push
loopne
test
ret
stc
les
es
std
and
mov
pop
imul
stos
je
cmp
push
das
sub
ds
cwtl
and
stos
pop
in
pop
loopne
xchg
inc
out
inc
dec
std
loop
jb
js
pop
mov
ja
jb
xor
pop
sahf
insl
xchg
xchg
movsb
sbb
lock
xchg
adc
stc
mov
and
push
push
or
out
dec
jge
pop
jge
or
add
addl
mov
inc
dec
cmp
idiv
cmc
rorl
mov
mov
jb
test
scas
loope
ljmp
stc
and
popf
or
sub
stos
add
subb
cmpsb
shl
inc
sbb
repnz
and
sysexit
sub
mov
int
cltd
les
insb
pop
mov
in
mov
xor
xor
and
sbb
das
orl
pop
lock
pop
hlt
push
fsub
ret
jg
mov
cmpsb
cmpsb
out
inc
xlat
push
sbb
pop
jnp
fwait
inc
jmp
in
clc
xlat
ss
dec
mov
or
sbb
xchg
cmp
mov
insb
sbb
lret
jo
mov
pusha
ljmp
push
jecxz
cmpsb
adc
add
cmove
and
and
shl
xor
mov
clc
xchg
out
mov
incl
xchg
pcmpgtb
ss
sub
fs
in
inc
lea
les
push
jno
aam
movsb
push
push
jbe
arpl
popf
fs
mov
jge
inc
lret
xor
cwtl
push
lret
xchg
add
stos
cmpsb
mov
push
loopne
out
stc
inc
push
mov
add
adc
jl
fnstsw
stos
test
cli
dec
insl
push
aam
lcall
jbe
test
jmp
daa
cmp
xor
inc
insl
lds
popa
mov
cwtl
add
xor
rcrl
jne
adc
push
mov
lock
jo
sbb
adc
mov
js
inc
cltd
dec
push
add
mov
cmp
mov
daa
or
ret
loop
je
shrl
cld
adc
popa
adc
dec
in
mov
out
push
or
push
dec
xor
dec
cmp
sbb
das
push
scas
lcall
mov
mov
cld
push
and
xor
cs
and
jg
fldl
xlat
addr16
sub
scas
inc
jg
repz
pop
xchg
test
imul
dec
add
pop
pop
fwait
inc
in
xchg
jmp
jae
sub
dec
jmp
scas
aas
mov
popa
jmp
lds
div
test
xchg
ret
mov
add
push
add
shlb
add
jmp
mov
sub
lods
fsubrs
int
add
dec
and
adc
mov
mov
cld
mov
inc
xchg
daa
gs
mov
shr
inc
js
or
sub
das
jno
xor
aad
sub
loopne
aad
sbb
cmpsl
push
mov
inc
dec
add
fsub
dec
lods
mov
out
mov
mov
add
adc
push
cmpsl
mov
dec
xor
leave
mov
pop
sti
sub
cmp
shl
leave
nop
pop
inc
fcmovbe
stos
push
cltd
push
jae
mov
aaa
pop
gs
mov
loope
pop
inc
gs
cmc
testl
sbb
popl
sbb
push
lods
sub
aam
jmp
xorl
pop
in
loope
movsb
sub
pop
push
jmp
jns
mov
and
lock
adc
mov
push
and
mov
mov
insl
sub
push
adc
out
aad
shll
lahf
sub
cmp
notl
jle
movb
pushf
outsb
xor
cli
out
repz
negl
sbb
cld
lock
xor
sbb
xchg
inc
movsb
pop
fcmovb
daa
dec
cltd
in
test
add
mov
jbe
inc
cmp
mov
pop
jo
gs
inc
add
jnp
mov
hlt
lea
ja
pop
add
lea
fs
iret
test
add
pop
ljmp
scas
cmp
ljmp
jo
jge
in
jbe
inc
xchg
cs
or
std
push
out
or
jno
shlb
mov
adc
jmp
sbb
xchg
fldenv
and
push
xor
sahf
ds
push
add
add
arpl
xchg
add
mov
push
adc
xlat
out
add
add
add
or
sub
scas
jl
gs
pop
jge
pop
and
jbe
gs
sub
sbb
roll
dec
or
call
out
and
mov
nopl
hlt
add
or
popf
daa
loopne
or
and
pop
cmp
scas
jp
pop
sub
aam
mov
pusha
sbb
lret
leave
repnz
pop
ja
mov
or
push
inc
xchg
dec
fsubrs
mov
lods
sub
push
movsl
int3
push
xor
cmp
or
mov
fldl
lods
push
stc
mov
repz
jb
jmp
fistl
or
cli
les
mov
push
repnz
stos
dec
xchg
mov
mov
cmp
lret
scas
int3
fsubrs
fs
mov
fwait
adc
lods
repz
inc
lds
call
popa
sub
mov
cmp
vpandn
pushf
pop
in
add
daa
data16
cmp
sub
mov
mull
pop
das
leave
hlt
cmp
cmp
lock
fadds
aaa
and
mov
pushf
outsb
popa
lds
and
jge
lods
test
push
xchg
pop
aad
int3
pop
inc
jo
sub
stos
jge
sbb
addr16
push
notl
mov
xor
call
call
push
xor
jnp,pn
xchg
outsw
push
insl
cmp
and
cmpsl
push
adc
cs
rcrl
mov
flds
pop
int
mov
xchg
xor
xchg
out
ret
cmp
sti
or
xchg
dec
scas
pop
in
pop
xchg
pop
pop
popf
out
jmp
jmp
mov
add
sbb
lret
dec
sbb
pop
ror
mov
lods
adc
cmpsb
push
mov
or
sub
test
lret
sbb
pop
js
clc
jnp
mov
dec
popa
mov
out
and
ret
ds
pusha
sbb
ljmp
and
lcall
dec
js
imul
adc
lcall
adcl
jge
jg
lods
mov
add
cmpb
int
mov
movsb
addr16
mov
or
mov
push
das
mov
pusha
jbe
pop
divb
cmp
pop
adc
jge
jo
stc
add
fisubs
xchg
jp
lods
mov
testb
cmp
mov
ljmp
adc
test
adc
pop
jecxz
insb
and
inc
pop
sahf
dec
lcall
pop
loop
mov
mov
xchg
jbe
les
xchg
lea
jp
fwait
imul
jne
ret
popf
iret
aaa
in
pop
div
enter
and
mov
ja
aas
push
into
and
arpl
mov
add
jne
push
sbb
lret
mov
daa
stos
movsb
daa
and
mov
push
test
test
popf
xlat
mov
adc
or
adcb
pminub
jle
mov
add
pop
adc
add
inc
loopne
fcmovnb
pop
mov
jbe
mov
nop
and
adcb
mov
adc
sbb
add
lds
xchg
adc
mov
mov
xchg
pop
push
in
sub
dec
xchg
dec
sub
xor
mov
mov
das
out
jl
xor
inc
mov
xlat
adc
pop
icebp
out
push
cli
movsl
add
dec
fwait
mov
mov
dec
and
out
sahf
or
jecxz
lahf
sub
mov
movsl
enter
xchg
out
in
ss
xchg
cltd
adc
jb
jmp
sbb
adc
rol
inc
nop
xlat
push
xchg
test
aaa
and
cmp
aam
inc
dec
xchg
arpl
xchg
mov
pop
mov
adc
retw
or
std
jb
test
lods
inc
push
test
sub
shrb
sti
int
sbb
mov
sbb
cmp
jge
inc
sbb
repz
mov
cld
imul
jp
leave
or
int
lods
push
sbb
out
jae
mov
lcall
jne
lahf
pop
outsb
int
add
lret
jnp
testl
addr16
sub
jbe
sti
lock
push
ret
pusha
imul
repz
sbb
jecxz
cmpsb
jl
xchg
sub
sbb
gs
mov
pop
shr
push
test
cmp
or
dec
sbb
sahf
call
jmp
movsb
and
aam
dec
data16
sti
rol
lea
ljmp
cmp
in
lea
push
or
out
sbb
clc
adc
xor
cmpl
sahf
lock
mov
adc
xor
loop
and
lea
das
sbb
pop
mov
mov
sub
mov
push
jbe
pop
repz
add
je
mov
pop
and
push
jns
shlb
push
fidivl
xorb
fldl
test
mov
cmc
mov
dec
ss
and
sahf
mov
jae
push
sbb
jp
icebp
mov
cmp
outsl
fnstcw
push
sahf
jmp
popf
lods
fdivs
cmp
cmpb
push
push
pop
js
push
pop
sbb
cmp
cmp
xor
gs
cmp
mov
aaa
add
fstps
jmp
ja
and
xchg
fstp
jo
sbb
bound
sub
push
stc
jns
std
cmp
add
push
pop
ficomps
push
mov
lret
push
daa
mov
xor
ljmp
mov
sub
scas
int
and
js
or
xchg
sub
sbb
out
inc
int3
sti
inc
test
mov
nop
lods
outsl
sub
xchg
xor
xor
jecxz
push
mov
cmp
xor
sub
bound
inc
cmp
dec
push
adc
sbb
cmovg
hlt
mov
adc
mov
adc
mov
stos
pop
loop
cmc
jno
inc
popf
inc
push
ret
sub
pop
int3
bsr
sbb
add
inc
addr16
mov
mov
dec
loopne
stos
popa
cmp
popa
aad
gs
inc
in
push
xor
or
ret
xchg
cld
inc
sbb
mov
xor
mov
xchg
push
lret
push
pop
hlt
test
mov
popa
pop
pop
sbb
das
xchg
sbb
mov
aad
xchg
dec
test
cmp
out
rcrl
jmp
jge
arpl
mov
fmull
mov
insl
xor
fdivrs
scas
jecxz
addr16
sub
aas
pop
pusha
leave
xor
cld
movsb
or
or
add
fisubrs
pop
ds
test
daa
dec
inc
add
sar
mov
xor
inc
mov
push
leave
daa
or
cmp
adc
movsl
loope
and
inc
jno
outsl
stos
repz
mov
xchg
movsb
mov
scas
push
add
insl
repnz
insl
in
hlt
push
outsl
pop
cmpsl
outsb
adc
adc
sub
jae
mov
xor
mov
xlat
cmp
lds
or
dec
push
xchg
push
inc
mov
dec
mov
iret
sub
cmpsb
test
or
pop
std
fwait
mov
push
das
hlt
push
sub
pop
inc
xor
aam
fidivs
inc
cmp
hlt
mov
dec
add
jp
xor
pop
test
inc
dec
enter
dec
cmp
out
mov
rcrl
movsl
adc
sbb
aad
lret
aam
loop
inc
clc
lock
gs
sti
sbb
insw
std
mov
xchg
int3
iret
pop
sbb
dec
cmp
cmp
and
dec
or
aaa
mov
inc
sahf
les
imul
dec
test
pushf
or
sub
jns
dec
fdivrp
add
fucomip
clc
inc
lods
loop
mov
sti
ret
push
pop
cld
add
orl
pop
rorl
inc
sbb
pushl
sub
icebp
ret
imul
add
mov
xor
jp
inc
cmp
xchg
jg
daa
es
jbe
dec
es
inc
or
adc
sbb
sti
xchg
imul
add
mov
cmpsb
pop
xchg
and
push
push
hlt
popf
fidivs
inc
cli
xor
push
cmpsl
push
int
adc
test
cli
push
push
xchg
shrl
pop
leave
aaa
inc
out
push
jo
in
in
mov
sbb
add
xlat
outsb
cmpsb
test
inc
xchg
jg
pop
mov
xor
or
fwait
and
push
in
lods
iret
fdiv
cmpsb
ficompl
mov
dec
cmpsl
jge
sbb
push
cmp
mov
cs
out
jb
adcb
fstpl
cmpsl
jmp
movsb
push
cld
fildl
test
push
out
fimuls
mov
fcomp
and
outsb
lock
mov
xchg
mov
les
andb
sub
mov
mov
rcrl
cwtl
jmp
or
pop
in
mov
mov
ja
mov
push
sub
test
mov
push
rorb
sahf
lea
or
xor
subb
inc
push
data16
out
add
imull
mov
ljmp
inc
incb
ret
pop
int
cmp
call
xor
mov
jnp
inc
insl
pop
lods
les
lods
add
push
or
cmp
fwait
clc
sub
into
je
imul
and
xchg
jno,pn
dec
inc
in
mov
jns
xor
add
dec
pushf
cmpsb
out
dec
lds
jle
je
out
and
xchg
inc
les
fpatan
jp
mov
fwait
inc
mov
sub
mov
loopne
stc
loope
js
adc
pop
sbb
outsl
cmp
test
call
add
inc
jl
mov
xlat
das
or
js
loopne
add
js
jns
xor
lret
lds
mov
dec
imul
sbb
adc
test
pop
gs
pop
inc
les
pop
push
aaa
sbb
adc
sbb
jno
xchg
daa
je
fsubs
push
and
jno
iret
aas
popf
fs
in
test
int
dec
push
imul
mov
icebp
sub
movsb
ret
add
xor
push
test
pop
sbb
mov
xor
inc
cmp
lods
bound
out
xchg
add
roll
in
cli
or
push
mov
fdiv
pop
push
add
push
adc
loop
xchg
cltd
xchg
push
xlat
daa
mov
loopne
and
push
xchg
dec
or
and
ss
cmpsb
in
stc
or
inc
test
lcall
adc
jecxz
out
sub
push
popa
cmp
imulb
mov
sarb
pop
inc
lock
fbld
addr16
sbb
jo
sbb
div
xor
popf
call
jo
pusha
in
mov
dec
mov
stos
fnstsw
test
fisttps
mov
fwait
out
push
pop
sub
xchg
mov
add
cli
pop
add
sbb
mov
addr16
cmc
test
loope
jno
add
mov
dec
sub
lret
aas
in
fnstsw
test
cli
and
adcl
mov
fdivrl
daa
popa
add
inc
lcall
mov
sub
mov
int
xchg
or
jecxz
push
lcall
push
push
xchg
lret
jg
dec
fisubrs
dec
push
ficomps
int
aad
or
adc
mov
xor
jp
push
cmp
arpl
movsl
pushf
cmpxchg
insl
cmp
or
xor
dec
sub
repz
aas
fcmove
mov
push
pop
pop
mov
sbb
xlat
lods
mov
mov
orb
xchg
filds
mov
xchg
andl
shl
pushf
xor
sbb
push
push
inc
ds
js
fdivl
dec
sub
outsb
in
mov
xor
orl
fimull
push
fwait
notb
pop
sbbb
xlat
lds
adc
mov
sub
cmc
jo
aaa
or
xchg
cmc
jbe
jbe
cmc
in
fidivrs
jno
sub
inc
cmp
cmp
nop
rcl
pop
ret
push
out
cmpsl
addr16
xchg
popf
jnp
or
fisubl
fwait
xor
adc
inc
xlat
fsubrp
mov
xchg
lret
call
push
push
mov
stc
dec
jmp
mov
cmpsb
dec
lods
and
xor
aaa
pop
nop
es
jge
jb
sahf
adc
adc
aam
lret
rclb
bnd
gs
sub
gs
loope
add
xchg
imul
sub
std
cmpsb
xor
vpavgb
pushf
stc
out
or
sub
add
pop
pop
push
roll
stos
loop
fs
rorb
jecxz
sarb
das
pop
push
insb
movsl
add
ss
xchg
mov
jns
and
aam
pop
mov
pop
out
rcll
test
push
push
ficomps
fnstcw
add
adc
test
xlat
cmpb
aad
popf
mov
out
jno
mov
stc
cwtl
push
cmc
push
xchg
cwtl
shrb
lahf
add
jle
fildl
and
cmp
jno
fwait
cmp
push
hlt
scas
fimull
xchg
add
push
cwtl
pushf
dec
mov
cmp
popf
xchg
arpl
lock
xchg
mov
push
xchg
mov
mov
sti
push
adc
pop
aas
mov
scas
mov
push
mov
push
and
shlb
insl
jnp
mov
push
sub
ja
loope
lret
xchg
or
jb
sub
pop
push
mulb
imul
mov
aas
or
xor
adc
mov
insb
or
popa
mov
ds
mov
out
inc
pop
inc
xchg
daa
imul
xor
xchg
add
stos
sbb
ret
int3
push
mov
dec
jb
fcomps
insl
cs
mov
cltd
inc
test
dec
pop
mov
or
adc
hlt
stos
jle
ret
inc
and
fbstp
stos
dec
shlb
daa
dec
mov
fwait
push
aas
nop
daa
loope
leave
inc
shl
insb
adc
insb
inc
or
jno
adc
push
shlb
sbb
mov
add
ret
sbb
hlt
jmp
mov
imull
pusha
mov
lds
dec
mov
lret
push
cmp
and
fdivl
mov
sub
push
imul
sbb
sti
fisttpl
lret
ja
daa
data16
sub
ja
scas
and
mov
adc
mov
lcall
push
push
outsl
and
imul
loope
in
push
sub
add
imul
pop
mov
sti
sahf
xor
js
mov
push
push
in
or
jl
adc
jo
outsl
and
jnp
cmp
addr16
pop
sub
xchg
jae
dec
iret
push
sbb
push
lret
add
jl
cmp
mov
sub
sub
xchg
sub
lahf
popf
call
cmp
inc
mov
icebp
xchg
fmull
xlat
jle
mov
push
faddl
int3
adc
inc
sbb
mov
insl
jmp
dec
or
data16
shrb
push
mov
cmpsl
push
xchg
mov
push
loop
mov
out
rcll
int
or
push
push
pop
xorl
sti
stos
ljmp
es
jne
xor
mov
lods
add
and
xchg
insb
rcll
aam
fstps
and
ficompl
xor
mov
mov
das
les
xchg
push
inc
ja
cltd
aam
lods
inc
ret
mov
shrb
and
jne
push
push
negb
push
imul
cmp
dec
aas
jo
in
push
test
sbb
dec
fwait
mov
pusha
dec
test
lret
and
and
mov
xor
mov
inc
and
mov
sub
pop
out
imul
je
cmpsl
jns
add
push
movsl
and
push
les
and
test
out
fistl
add
mov
lcall
leave
mov
gs
das
icebp
test
hlt
loopne
mov
push
jns
push
insl
inc
fisubrl
popf
add
inc
es
jl
add
cmpsl
pop
hlt
insb
pop
or
dec
and
adc
sub
imul
rcrb
mov
mov
cmpsl
ret
mov
mov
sub
or
icebp
stos
cmc
daa
sub
push
ret
mov
lock
cmc
enter
push
aam
cmp
adc
aas
in
cmp
faddp
mov
ror
imul
and
sti
push
lret
jmp
repnz
imull
cmpsb
adc
xchg
jbe
dec
mov
inc
jp
mov
sub
jo
and
rcrl
addl
hlt
sbb
sahf
sbb
mov
mov
xor
lcall
jge
in
cli
inc
jne
jnp
mov
push
cmp
clc
lret
inc
test
daa
outsb
sub
hlt
cmp
inc
jp
scas
iret
lret
jl
call
data16
adc
mov
push
push
sbb
mov
push
xor
cmp
mov
lods
les
mov
imul
xchg
sub
sbb
loope
nop
sti
es
xchg
movsl
fs
icebp
xor
add
mov
stos
xchg
mov
add
int
cmp
or
gs
jae
jne
jb
cltd
push
push
mov
push
push
inc
lret
cs
jmp
adc
push
lahf
test
dec
push
aas
push
ds
repz
les
cwtl
mov
ljmp
xor
mov
mov
sti
pop
dec
sbb
mov
out
xchg
xchg
mov
add
std
int
push
lods
add
cwtl
cmpsb
enter
dec
ds
and
dec
lods
add
ja
loop
pop
jle
mov
cmp
pop
je
les
rcl
inc
jnp
dec
ss
int3
push
rolb
jno
pushf
ret
shrl
mov
mov
scas
imul
fidivl
jmp
xor
mov
int3
mov
lea
call
outsb
into
sub
addl
outsb
fstps
xchg
stos
add
sbb
push
jno
mov
fdivrl
or
repnz
xchg
jmp
mov
and
dec
dec
clc
mov
ljmp
push
shll
icebp
loop
push
mov
jg
mov
inc
pop
push
movsl
popa
aas
repnz
xor
out
call
cmp
arpl
or
sbb
daa
and
pop
inc
inc
arpl
push
sub
add
cmp
sbb
push
sbb
xlat
mov
or
mov
aaa
pop
mov
xlat
je
fdivs
add
push
add
hlt
lock
sub
xor
test
jle
mov
mov
pop
clc
lea
rcl
leave
sarb
fildll
rorl
xor
mov
and
pop
and
xor
repz
outsb
js
push
lret
xchg
mov
ja
dec
pop
lahf
out
add
or
int
xchg
dec
bound
xchg
hlt
mov
loope
test
sub
es
fwait
sub
loop
pop
fistl
adc
imul
fimull
pop
xchg
jmp
rcrb
mov
push
add
ror
idivb
adc
dec
mov
inc
dec
add
sti
xchg
push
xchg
fucomp
inc
lds
stos
inc
lcall
inc
cld
jmp
arpl
iret
mov
sbb
sbb
inc
jbe
lcall
add
jns
xor
jge
in
dec
push
pop
mov
ss
iret
mov
sbb
sub
test
sub
lret
xchg
inc
xchg
cwtl
andb
mov
add
add
or
xchg
adc
sub
arpl
sbb
call
outsb
sbb
mov
lcall
jle
daa
rsm
mov
jae
cmp
cltd
cld
and
fmuls
lock
xorb
xchg
xchg
xor
push
mov
xchg
lcall
jle
sbb
cmc
in
add
les
insb
jecxz
xor
adc
jecxz
jmp
mov
xor
pop
fsubs
sbb
cltd
dec
mov
mov
bound
fcmovb
pop
int
je
mov
jno
sub
mov
fsubl
inc
add
cltd
insl
pop
ds
mov
outsl
push
sub
cmc
sbb
pop
adc
xchg
outsl
ficomps
push
out
push
inc
data16
push
or
mov
sbb
hlt
hlt
iret
daa
add
jae
and
test
inc
push
xchg
stos
test
sbb
sub
test
pop
loopne
mov
hlt
movsb
push
mov
jnp
ja
daa
jg
pop
mov
inc
pop
jbe
sbb
mov
push
cli
pop
scas
rclb
icebp
inc
fnstsw
cmp
into
cmp
jg
pop
jmp
xchg
add
xor
pop
pop
lahf
pop
dec
pop
mov
push
fldl
outsb
mov
adc
ss
es
out
ret
xchg
loope
fsubrs
call
dec
icebp
sbb
mov
pop
movsb
andb
sub
jle
cwtl
data16
rcr
xor
cmp
test
out
cmp
adc
or
jp
repz
iret
stc
popf
pop
jo
and
mov
and
pop
xor
push
jle
mov
cmp
fsubl
xchg
pop
popf
outsl
lcall
cmpsl
jg
cmp
aaa
pop
lahf
mov
lods
aas
jmp
imul
pop
xor
das
push
xrelease
clc
bound
mov
mov
icebp
cmc
adc
leave
fcoml
jns
dec
jo
jbe
fists
push
add
mov
cltd
jl
rorb
mov
and
xchg
push
daa
xchg
add
test
sub
jle
pop
iret
adcb
mov
or
xchg
or
ret
push
fnstcw
enter
xor
dec
in
jo
nop
xor
xor
popa
mov
mov
mov
cmpsl
movsb
jle
dec
iret
inc
stos
test
nop
xchg
mov
fmull
and
push
loopne
repz
mov
push
ljmp
mov
pop
and
sbb
cwtl
movsb
jmp
lret
xor
mov
cmp
pop
jp
into
pop
mov
dec
fimuls
adc
test
mov
jmp
fwait
testb
mov
cmp
mov
loop
ret
jns
xchg
dec
clc
jg
push
sbb
jne
and
sbb
mov
pop
jge
aad
xchg
scas
lds
mov
std
pop
mov
xor
popa
cs
test
clc
movsl
dec
pop
cmp
xchg
or
retw
sub
dec
loope
sub
jmp
sub
mov
mov
pop
les
dec
xor
int
sbb
and
fsts
push
cli
mov
mov
add
lods
jns
div
push
mov
jmp
std
shl
mov
adc
jno
push
xchg
jmp
leave
push
jle
test
into
sub
cmc
adc
push
jno
mov
xor
popf
insl
frstor
ds
inc
fists
pushf
decb
push
out
inc
insl
mov
mov
cmp
mov
shlb
mov
cld
xchg
stos
rcrb
adc
dec
xor
repz
mov
stc
mov
imul
dec
xchg
insl
pop
mov
rolb
addr16
xchg
jae
jb
and
adc
jo
jg
jmp
stc
mov
jnp
fadd
cmp
lret
nop
push
clc
xchg
call
pushf
out
dec
jmp
icebp
mov
daa
push
adc
and
mov
int3
loope
mov
shrb
xchg
or
mov
dec
insb
fsubrs
in
int
loope
hlt
pop
push
pop
out
les
pop
pop
enter
add
leave
das
push
xchg
aas
xchg
push
movsb
sbb
aam
mov
xor
rcrb
mov
sbb
ss
aam
and
and
pusha
add
cmp
and
mov
stos
mov
sbb
add
cltd
mov
add
popa
cwtl
mov
pusha
call
xor
xor
dec
jbe
pushf
mov
shrl
cmpl
cld
inc
jae
lcall
dec
dec
push
push
fs
and
ficoms
adc
xor
jp
mov
push
js
loopne
add
cmpsb
push
mov
mov
popa
inc
jne
mov
stc
dec
push
cmc
mov
fcomp
mov
and
outsl
gs
and
andnps
sbb
repnz
fdivrs
cs
and
pop
mov
and
iret
jecxz
inc
adc
lock
jle
js
xchg
sub
test
incb
dec
and
push
xor
inc
clc
xor
add
das
adc
mov
adc
push
lock
int3
xor
lcall
shl
outsb
lahf
pop
fmull
dec
shll
add
test
add
mov
sbb
ja
sbb
pop
shll
mov
pop
xchg
add
aas
cwtl
push
loop
xor
pop
pop
sbb
add
ljmp
aaa
adc
sub
pop
repnz
mov
popf
push
andb
adc
fidivrs
loope
loop
mov
inc
movsl
inc
ret
sub
adc
out
imul
das
les
jb
adc
xor
and
xchg
ffreep
sbb
dec
enter
outsl
push
outsb
cmp
insl
inc
mov
xlat
sub
sbb
aad
jl
mov
mov
xorl
iret
jnp
and
mov
mov
xchg
arpl
ss
sbb
pop
inc
dec
jge
lret
js
cld
xchg
lahf
mov
pop
jne
pushf
mov
in
arpl
arpl
add
stos
mov
pop
sub
cmp
jne
fldl
or
subb
aam
dec
out
mov
add
mov
shll
loope
fisubrl
repnz
jle
pop
jb
pop
imul
push
add
mov
dec
in
ljmp
ret
mov
mov
jno
cmp
addr16
mulb
or
int
xchg
repnz
aad
ja
xchg
fdivs
xor
clc
aam
gs
enter
xor
mov
fidivl
jg
or
or
xchg
push
inc
jmp
push
lahf
bound
mov
pop
sub
pusha
aam
mov
shl
test
mov
add
push
mov
out
and
jne
out
mov
and
push
andb
out
icebp
add
mov
and
xchg
fisttps
imul
fs
fistl
push
mov
call
shlb
xchg
jo
pop
cltd
in
jl
jno
jl
jmp
dec
xor
idiv
popa
aaa
jns
sub
outsl
inc
add
idivb
pop
cs
pop
add
int
out
iret
sub
xlat
jb
pop
mov
xchg
xor
movsl
kmovb
incb
push
dec
or
pop
leave
cmp
aad
mov
adc
inc
loop
adc
pop
cmp
cld
jne
lods
jg,pt
mov
icebp
jecxz
jne
adc
jae
xlat
pop
xor
aas
lods
push
mov
dec
test
rcl
fs
test
mov
xor
test
mov
add
fstp
push
fdivrs
or
push
mov
in
sbb
sub
mov
cmp
cmp
cmp
jp
pushf
mov
dec
push
lods
clc
adc
mov
adcl
cli
jae
and
popf
std
pusha
jno
push
rorl
pop
in
in
push
or
push
ffree
idivb
push
dec
bound
and
sti
xchg
dec
pop
or
movsl
inc
out
mov
addr16
jge
or
or
sub
scas
mov
shlb
out
popf
stos
out
mov
dec
popa
fsubrs
dec
imul
dec
jb
jl
cmpsb
in
push
lcall
sbb
sub
fidivrs
jl
addr16
shrb
test
cs
mov
mov
pusha
out
jmp
sbb
push
rcrb
xor
mov
notl
jb
pusha
and
lret
xlat
out
mov
xor
out
mov
inc
jmp
cmpsb
push
je
dec
cltd
int3
insl
xchg
jl
arpl
or
arpl
add
xchg
mov
mov
ljmp
iret
inc
ljmp
cwtl
lret
call
jb
mov
les
ss
mov
in
mov
inc
outsl
and
test
pop
inc
mov
mov
hlt
push
das
mov
mov
ror
xchg
shlb
xchg
jecxz
and
xchg
fdiv
mov
int3
mov
loopne
idivl
lcall
leave
mov
call
mov
inc
js
lea
mov
fisubl
sahf
loopne
faddp
push
mov
push
xlat
mov
jne
dec
dec
shrb
fdivrl
inc
mov
mov
andb
and
stos
add
add
cli
mov
xor
mov
leave
push
mov
iret
out
inc
imul
inc
push
jle
xor
sbb
add
add
pop
xchg
cli
xlat
in
imul
jnp
inc
out
jb,pn
je
mov
daa
mov
push
pop
daa
aam
idivl
lds
rorb
std
fstps
js
fdivs
and
fwait
data16
scas
mov
jl
push
jne
xor
outsb
xchg
mov
jbe
mov
sub
or
aas
rorl
sar
adc
and
or
pop
adc
or
repz
bound
jb
xchg
xchg
jo
pop
xchg
cmp
lock
add
push
fsin
jmp
mov
xchg
adc
inc
sub
cmp
clc
sahf
leave
popf
lds
sub
mov
cli
add
adc
and
adc
mov
xor
in
aam
lcall
or
xor
cmp
push
or
rcll
adc
das
test
outsb
sub
repnz
pop
pop
lea
pushf
or
pop
lock
xchg
loopne
jae
mov
shlb
xchg
test
clc
sbb
mov
push
lea
movsl
cwtl
mov
popf
fnstcw
mov
pop
dec
ds
mov
imul
add
xchg
cmp
pop
jne
into
cmp
repnz
mov
adc
test
mov
jg
cmp
scas
pop
bound
push
lock
aad
dec
out
sbb
push
cmp
data16
in
addb
out
jbe
test
stc
scas
shll
pop
insl
fstpl
push
fcoms
push
pop
and
sbb
ret
fs
and
sub
sbb
inc
cmp
dec
lcallw
out
clc
mov
dec
out
mov
xlat
inc
adc
cmp
push
inc
add
mov
push
mov
out
loop
push
xchg
out
rolb
psrld
jo
cmp
mov
std
push
imul
bound
dec
jp
loope
cld
xor
es
lds
xchg
fwait
lahf
int3
in
push
xchg
pop
ljmp
repnz
enter
push
sub
lahf
outsl
sbb
repz
mov
pop
or
mov
inc
test
sub
cltd
imul
inc
test
mov
push
shrb
leave
pop
aad
sbb
xchg
iret
negl
push
flds
mov
shr
push
cltd
lret
push
inc
js
jp
xchg
dec
loopne
or
test
or
xchg
mov
jns
jp
fidivl
xchg
dec
push
jecxz
lret
dec
or
mov
jl
cmp
imulb
push
lret
dec
pop
adc
mov
sub
outsl
sub
add
fsubr
movzbl
stos
fwait
jp
jmp
cmp
ss
inc
enter
aas
xlat
xor
js
lock
or
addr16
inc
jne
xchg
mov
inc
pushf
cmpsl
shrb
cmc
xchg
pop
cmp
jne
idivb
mov
inc
repz
xchg
inc
std
in
mov
mov
jnp
imul
subl
popa
inc
cwtl
adc
add
mov
test
pop
jl
pop
je
pusha
xchg
ds
xchg
mov
dec
or
xor
cmpsb
jmp
xchg
loopne
cmp
int3
daa
loope
push
subps
ds
cmp
xchg
in
lahf
cvtps2pi
adc
add
cmp
mov
cmp
in
lock
inc
xor
je
icebp
sbb
std
mov
cmpsb
dec
nop
bound
cwtl
je
pop
and
fisttpll
or
push
gs
in
pop
jns
xchg
xchg
lcall
jo
pop
mov
push
mov
stos
js
int
mov
ficoml
mov
leave
andb
jmp
jae
sar
mov
aam
xchg
sub
out
fsts
sbb
xchg
xchg
cmpb
push
in
jl
fdivr
jne
xchg
lahf
jmp
and
pop
adc
add
add
gs
inc
cltd
insl
std
call
jle
jbe
inc
sub
inc
sub
pusha
lds
in
aad
clc
sbb
ljmp
jbe
cmp
clc
push
in
dec
andl
cs
loop
dec
mov
add
loope
dec
adc
push
insb
loopne
outsb
cmp
mov
jo
inc
jnp
call
shll
mov
cltd
leave
stos
icebp
pushf
imul
mov
dec
fstp
out
dec
cmp
cltd
imul
loop
stos
sub
add
mov
pop
sarb
lcall
jns
mov
fucom
insb
sbb
mov
and
jmp
xor
pop
push
pop
test
dec
inc
repz
lret
xchg
push
or
mov
fcos
daa
mov
lahf
cld
fstpt
dec
inc
subl
jp
jne
add
sub
out
jae
fwait
lds
in
push
dec
pop
sbb
or
inc
daa
jns
rcrl
scas
sub
xlat
in
call
sbb
push
test
out
pop
sti
dec
xchg
jl
outsb
lret
ss
mov
inc
dec
out
stos
ret
int
push
sbb
ss
imul
mov
add
mov
sbb
ficoml
jns
cwtd
les
lds
test
push
inc
dec
ret
std
rclb
aaa
mov
sbbl
test
in
sbb
stos
jne
lds
test
add
gs
add
lcall
ret
sarb
in
jno
lds
jb
pop
popf
and
push
inc
stc
cmp
push
fidivrs
mov
mov
test
push
adc
mov
cmp
pop
jmp
add
jbe
sbbb
fistl
jnp
mov
or
stos
cmp
call
fsubs
mov
lret
lret
in
mov
cmpsl
xchg
adc
and
xchg
scas
fisubs
div
stos
call
cmp
inc
sbb
mov
lahf
movsb
arpl
and
sbb
mov
sub
jae
nop
jbe
xchg
xlat
rclb
lahf
xor
xchg
js
cmp
lea
lahf
mov
adc
scas
lods
dec
cmp
imul
arpl
mov
and
push
inc
sbb
and
lea
push
data16
and
popa
adc
mov
push
sbb
fcmovnb
mov
mov
jbe
jae
rcrb
mov
test
jp
popa
lock
push
rcll
std
les
jb
mov
cmpl
repnz
fadd
mov
arpl
mov
mov
push
and
fiadds
and
sub
mov
lea
xor
xchg
mov
out
sahf
add
push
pop
sysexit
cmp
and
jno
scas
popa
sar
sbb
dec
scas
stos
pop
pop
xor
enter
jo
out
stos
mov
fsubrp
cwtl
mov
imulb
stc
adc
push
out
inc
cmpb
xorl
cmpsl
adc
or
mov
test
fnstenv
and
mov
cmp
mov
xor
daa
aas
mov
push
cmp
xchg
inc
decl
pop
mov
popf
mov
loopne
dec
lods
imul
punpckhdq
mov
add
test
pop
hlt
push
push
notb
pop
daa
inc
mulb
jae
pop
jg
insb
ds
dec
or
and
out
into
mov
adc
dec
and
jns
inc
mov
cmp
jecxz
shll
repnz
jmp
jbe
mov
sub
cmp
and
push
push
mov
dec
pop
dec
outsl
ret
fisubs
hlt
add
ret
imul
push
add
push
mov
cmp
pop
xor
movsb
pusha
iret
je
pusha
jg
push
add
nop
jle
pop
mov
jg
pusha
or
push
ret
mov
xor
cwtl
lock
es
xor
mov
xor
mov
push
inc
aaa
push
jb
lret
int3
and
jmp
test
mov
sub
test
ret
cltd
xlat
pop
jne
loop
stos
inc
js
add
daa
inc
ds
ret
cmp
sub
xor
daa
inc
adc
loopne
cld
scas
pop
sbb
pop
add
and
insb
popf
or
push
shrb
neg
cwtl
pop
push
jo
call
inc
test
mov
lds
les
push
adc
aas
xchg
and
movsl
ror
test
in
sub
cli
mov
lret
stos
cld
out
test
pop
insb
nop
cmp
and
repnz
xor
sbb
ljmp
lods
jnp
hlt
and
add
jae
sub
pop
mov
scas
add
gs
negl
leavew
lock
sub
xor
clc
hlt
test
mov
lahf
jge
inc
popf
or
sbb
or
popf
mov
psubsw
mov
jle
xor
push
dec
xchg
orb
sbb
xchg
xor
xchg
gs
clc
into
clc
cmpsl
jns
sbb
mov
cmp
mov
scas
loop
pop
push
add
cmp
ret
xorb
xor
xlat
mov
fsubrs
aam
or
inc
xchg
pop
push
int
repnz
stc
mov
das
je
aas
jo
mov
lods
fwait
loope
fnstcw
sub
jl
ja
jo
mov
mov
out
cmpb
lds
pop
pop
or
push
stos
xchg
subb
mov
fdiv
inc
call
add
mov
sub
popa
mov
hlt
jne
or
shr
adc
into
pop
movsb
pop
jno
mov
push
adc
enter
mov
cwtl
popf
push
fildll
lock
and
push
popa
mov
cmp
imul
jne
imulb
push
pop
fisubrs
ds
mov
movsb
cmp
pop
iret
bound
imul
cltd
mov
movsl
jne
ljmp
pop
aam
ljmp
push
push
xlat
out
sbb
xor
lock
imul
cmp
inc
stc
fisubrs
or
mov
out
xchg
sahf
push
in
addr16
sbb
and
pop
loop
sbb
mov
push
pushf
lods
insb
jmp
or
mov
sub
daa
mov
fst
cli
out
xor
push
jo
ret
pop
push
or
and
cmpsl
push
sahf
mov
xchg
xchg
inc
mov
push
mov
pop
notb
inc
js
xor
test
pop
jge
imul
dec
sub
insb
out
gs
adc
lret
je
pop
mov
sti
call
cltd
jg
int3
lea
call
fwait
arpl
test
mov
int
mov
fs
cli
shl
test
lcall
repnz
sahf
adc
mov
mov
mov
stos
in
push
pop
test
imul
pop
cltd
les
imul
aas
stos
aad
rcrl
lods
imul
mov
ds
mov
cmp
or
jo
mov
jle
inc
arpl
xor
imulb
xchg
iret
xor
rcll
addr16
fisttpl
mov
push
push
dec
iret
sbb
xor
add
lds
fcmove
js
cltd
in
add
add
fwait
cmp
enter
aad
inc
xor
inc
repnz
pop
mov
push
lcall
xorb
sbb
call
ja
outsb
mov
mov
lock
inc
scas
jbe
outsl
or
fidivrl
int
lods
add
xchg
mov
mov
xor
xchg
mov
mov
xchg
jno
movsb
jb
in
outsb
adc
cli
jmp
jmp
inc
test
cmpsb
xchg
fwait
mov
adc
mov
mov
lods
into
mov
push
repnz
fisubs
lret
push
xor
or
or
imul
aad
sbb
insb
dec
out
repnz
mov
in
stos
jno
mov
orb
sbb
pmuludq
xchg
fistl
cmpsb
lods
xor
in
out
lcall
push
or
roll
lret
sub
or
jno
outsb
imulb
iret
dec
pop
int
jmp
dec
stos
aas
sahf
xor
cmp
cpuid
fiadds
mov
dec
pop
popa
push
xchg
jg
rclb
out
dec
cmp
inc
cmp
ret
test
mov
xor
xchg
lds
sub
sbb
mov
inc
cmpsb
fisubl
mov
mov
xchg
jns
push
hlt
or
stc
ljmp
stos
cltd
or
push
sahf
add
data16
leave
jne
xchg
xchg
pop
pop
addb
add
pop
out
fwait
mov
ss
rorl
or
xchg
cmpsl
inc
aas
mov
test
dec
dec
pop
push
popw
pop
daa
stos
cwtl
test
les
cwtl
sub
fldt
cmpsl
xor
pop
aad
sahf
lods
xchg
out
mov
movsl
cmp
sbb
lds
or
lods
xor
pop
scas
pushf
into
leave
aad
xchg
inc
xor
xor
lret
pop
mov
cli
es
lods
inc
lcall
mov
mov
pushf
test
out
mov
and
inc
shll
aam
scas
data16
push
mov
mov
push
test
dec
movsl
mov
push
jg
pop
fistpl
loop
neg
pop
sub
jno
ret
sub
in
movsb
lahf
pop
rcrl
sub
stos
int3
jnp
loope
and
cmp
arpl
dec
test
pusha
imul
push
cmp
loop
pop
jp
jge
popa
push
lret
mov
xor
les
sbb
mov
iret
fcomps
sahf
mov
cli
adc
arpl
sarb
add
fsubr
xchg
xor
enter
addr16
aas
loopne
xor
shrb
jmp
aaa
sbb
lods
mov
push
xchg
inc
cmpsb
mov
jnp
sti
sub
pop
roll
es
sub
mov
movsl
sub
pop
xor
leave
addr16
jl
jmp
cltd
inc
mov
pop
mov
jl
sub
mov
push
paddsb
das
inc
lods
jle
jae
mov
ret
jae
rorb
addl
adc
dec
cld
push
mov
sub
mov
and
enter
pop
mov
lcall
test
hlt
xor
fwait
or
movsl
push
mov
std
lock
pop
cmpsb
adc
xchg
jbe
fstpt
lods
aaa
rcrb
push
in
xchg
jne
inc
push
jmp
sub
or
mov
sahf
rorb
cmp
pusha
mov
xchg
in
add
sub
fsts
bound
mov
mov
cmc
inc
cmp
xor
das
ss
das
mov
loop
add
push
push
mov
cmp
xrelease
fidivs
stc
cwtl
divl
pop
cmp
pop
ljmp
and
inc
jl
icebp
fistl
inc
stc
in
sbbb
push
ficoms
mov
dec
rorl
pop
lahf
and
push
adc
dec
sbb
push
pop
aas
imulb
jg
jbe
adcb
ret
xchg
add
jb
cwtl
mov
jb
mov
xor
and
and
sbb
cltd
js
or
mov
shll
dec
sahf
mov
sub
jg
sbb
lret
loope
mov
pop
ljmp
push
xlat
mov
icebp
pop
repz
xchg
in
enter
adc
pop
in
dec
push
and
shrl
push
lret
lods
pop
loopne
fisubl
adc
and
add
or
rclb
outsl
jge
dec
pop
shll
enter
xor
push
test
int3
int
adc
add
cmp
mov
or
repz
inc
jp
stc
jmp
negb
xchg
sub
imul
mov
pop
or
mov
or
xor
or
jp
mov
in
xor
or
inc
cmp
leave
ljmp
imul
mov
dec
lea
cmp
and
and
mov
xchg
jle
int
push
cli
fcmovnu
int
or
jo
mov
xlat
test
int
ret
jbe
adc
xor
leave
stos
das
jbe
or
sbb
add
scas
in
iret
mov
fwait
ja
fsubrl
dec
inc
xor
inc
adc
into
aam
or
rcl
push
mov
inc
call
jecxz
cmp
sarl
cmp
dec
sbb
ljmp
subb
or
subb
loop
out
aaa
mov
test
lahf
mov
dec
scas
mov
ret
mov
pop
andl
jns
stos
arpl
mov
push
fstpl
jle
jns
mov
sub
inc
inc
xchg
dec
out
sbb
aaa
or
lret
inc
add
aam
sub
cmc
fwait
jns
ds
sbb
xchg
inc
inc
les
mov
lods
ljmp
add
bound
xchg
cmp
push
out
adc
scas
lret
pop
cmc
fidivrs
data16
addr16
sub
out
insb
mov
push
aam
es
xchg
xor
sbb
loopne
inc
adc
fnstsw
jno
xorb
xor
mov
repnz
ret
rorl
fdivrs
inc
add
enter
jl
mov
ss
xchg
pop
sbb
inc
in
ja
cmp
or
in
in
mov
pop
mov
or
stc
test
enter
sbb
dec
adc
es
adc
mov
push
cmc
jnp
push
ds
insl
jge
sub
mov
imul
cmp
push
lahf
out
nop
test
xchg
push
cltd
cmp
jno
sbb
mov
call
mov
movsb
mov
decb
sbb
ret
push
mov
push
inc
mov
cmp
dec
jl
cli
jns
in
mov
mov
aad
popf
mov
push
add
ret
sub
mov
addr16
scas
popa
mov
xchg
int3
aaa
or
mov
sbb
aam
rorb
sbb
loope
push
inc
rcl
call
out
mov
je
pop
pop
jnp
mov
loop
add
cmp
ds
xchg
add
add
xchg
js
pop
je
xchg
mov
idiv
dec
xor
sub
adc
jno
lcall
test
pusha
jle
loopne,pn
cmpb
pop
jae
jns
lock
das
daa
jl
stos
jge
push
daa
xchg
adc
cltd
pushf
dec
inc
imul
aam
sub
mov
stc
mov
mov
mov
and
xchg
cmp
add
loope
loopne
ds
xchg
insb
cli
and
clc
int3
mov
adc
in
arpl
pop
inc
cmp
pop
xor
cld
xchg
icebp
outsl
lret
push
add
test
inc
aam
xchg
dec
jo
xor
cmp
imul
insl
or
jp
mull
xchg
and
mov
ret
aad
lret
mov
pushf
cmp
das
adc
mov
cmp
and
stos
jae
push
test
push
xor
cwtl
push
cmp
pop
and
cmpsl
fstpt
fsub
daa
gs
push
sub
pop
sbb
subb
repnz
repz
mov
loope
mov
pusha
outsl
in
cmp
fwait
imull
inc
dec
push
inc
mov
pop
shl
add
pop
mov
jg
mov
js
inc
dec
aaa
fstl
add
test
mov
mov
js
ret
repnz
inc
mov
iret
or
lods
orl
push
inc
dec
mov
mov
xorb
dec
fisttps
cmp
dec
dec
lods
pop
jo
shlb
das
mov
pop
xchg
popf
popf
addr16
fs
cmpsl
sti
pushf
aaa
xor
push
cmpsl
mov
push
and
mov
dec
and
test
pop
jo
mov
add
rcrb
xchg
jo
lret
cmp
leave
insl
push
push
loopne
cli
and
rol
mov
adc
jns
pop
jae,pn
test
cmp
into
mov
out
xlat
sub
mov
rorb
lods
rcrb
pop
or
push
and
or
xchg
fbstp
push
xlat
mov
in
push
mov
jo
sbb
cli
adc
jge
xchg
pop
pop
aaa
cmp
cli
pop
aas
bound
and
js
je
push
jmp
les
mov
sbb
shll
aaa
xchg
sahf
inc
cmp
mov
movb
sbb
xor
cs
or
nop
mov
jb
and
scas
test
insb
xor
ret
scas
inc
dec
dec
in
andb
adc
xchg
orl
fildll
in
push
sbb
mull
push
cmpsb
push
stos
mov
inc
ds
xchg
insb
pop
cmp
cltd
sbb
jg
sbb
out
sti
into
jle
loope
mov
push
inc
jge
cmp
jne
in
push
or
adc
sbb
pushl
sub
dec
cltd
repz
mov
mov
mov
sti
hlt
pop
mov
stc
mov
fists
add
fmull
jg
pop
in
repnz
push
jecxz
push
das
repz
xchg
mov
loopne
mov
and
cmpsb
pop
movsb
dec
cld
arpl
or
sbb
sbb
sbb
ja
in
push
test
jns
js
lcall
ret
push
cmp
fld
dec
leave
sbb
push
xor
push
inc
xor
dec
and
xor
fs
fdivs
test
inc
and
cwtl
mov
std
repz
cmp
shll
sarl
lahf
fndisi(8087
push
cltd
arpl
push
or
pop
sub
es
adc
xchg
lret
fistpll
jb
or
es
inc
pop
fs
push
push
negl
pop
cld
inc
push
mov
inc
xchg
add
jb
xchg
jb
popf
or
push
cwtl
sub
and
shrb
add
lcall
mov
pop
pop
mov
push
jo
add
xor
push
hlt
sbb
mov
push
cwtl
outsb
sbb
repz
dec
cltd
lds
notb
fistps
movsl
push
mov
sbb
inc
in
sti
jg
push
xchg
sub
sub
test
sahf
das
mov
in
jle
jp
xchg
in
repnz
add
mov
lret
outsl
ja
in
cmpsl
xchg
or
adcb
loopne
add
sbb
sahf
loope
xchg
mov
mov
jmp
and
shlb
pop
mov
mov
xor
shr
sbb
stc
dec
inc
cmpsb
dec
inc
xchg
or
push
adc
loope
xlat
or
ljmp
in
into
loopne
loopne
insl
popl
xchg
in
dec
jmp
nop
bnd
aad
push
mov
adc
push
push
or
dec
xor
daa
out
adc
xor
push
ret
add
negl
pop
mov
lods
shlb
sub
stos
push
mov
jne
fwait
aad
std
mov
adc
bound
gs
outsl
daa
out
jae
cmp
xor
dec
and
jmp
mov
dec
out
xchg
pusha
adc
mov
push
test
mov
out
jnp
inc
or
cld
fwait
sbb
mov
inc
mov
sbb
test
cmp
xchg
dec
ficomps
push
movsl
or
loop
xchg
call
pop
lods
xchg
push
cmp
pop
sub
in
fstps
adc
lahf
pop
jg
or
jbe
mov
cld
cltd
es
leave
jae
aad
mov
xor
and
adc
jne
mov
inc
sub
loope
enter
mov
dec
add
cmp
ret
sti
rolb
lods
add
add
inc
pop
lret
mov
jo
aad
cmpsb
scas
lahf
pop
jbe
pop
push
push
enter
jp
movsb
scas
es
mov
enter
pop
xchg
jno
jb
js
push
cmpsb
xor
jge
push
in
pop
imul
or
out
dec
aaa
sarl
push
push
mov
adc
out
mov
jns
jae
jle
or
adcl
nop
or
xchg
ja
mov
push
std
fists
aaa
push
push
add
inc
sbb
jg
sub
sub
push
mov
jmp
out
clc
mov
cs
or
pop
rcrb
mov
jp
scas
in
stc
js
out
enter
cmpsl
inc
call
shrb
fmuls
pop
loop
loop
sbb
sbb
lds
pushw
add
sti
mov
aam
mov
sahf
sub
jbe
mov
addl
mov
movsl
xor
mov
jg
out
aam
xor
jnp
in
enter
scas
sbb
mov
shlb
std
dec
mov
aad
mov
add
push
aam
sarl
test
cmpsl
inc
mov
dec
ret
out
inc
mov
pop
and
in
shrl
enter
loope
js
lret
pop
pop
inc
and
lea
enter
data16
arpl
xchg
xchg
jns
jb
push
dec
or
cmp
push
adc
push
or
pop
fwait
jecxz
or
xchg
inc
sahf
push
aad
pop
xchg
mov
mov
and
das
arpl
xchg
data16
dec
ror
int
gs
jb
jo
mov
mov
imul
das
in
cmpsl
and
pop
xchg
xchg
jl
fdivp
xor
aad
cwtl
bound
std
sub
dec
daa
mov
cmp
pop
loope
test
mov
clc
sti
inc
mov
scas
out
cmp
out
mov
bound
int3
xchg
pushf
pop
mov
cmp
dec
test
icebp
fwait
mov
std
or
subb
pusha
cmp
outsl
lods
xchg
mov
outsl
jle
in
data16
mov
jbe
dec
stos
push
mov
add
jle
xor
gs
andl
mov
adcl
add
xchg
fwait
ds
push
aaa
cwtl
out
cli
jae
adc
xchg
or
push
jmp
das
push
add
jg
test
imul
sub
mov
inc
out
cmp
sub
gs
and
pushf
divb
pop
inc
std
outsl
xchg
sub
shl
xchg
outsl
outsl
cmp
jbe
pop
jo
cmpsb
cmpb
dec
cwtl
jb
jno
xor
cwtl
jmp
mov
adc
push
sbb
lock
hlt
mov
mov
push
or
or
adc
aaa
stos
jl
or
jp
jnp
jmp
pop
pop
jle
ficoml
in
sbb
gs
cmp
out
push
pusha
inc
cmpsl
sarb
inc
shll
mov
dec
lds
pop
mov
jp
mov
nop
jle
mov
xor
xchg
cltd
icebp
add
loope
jl
sub
rorl
je
movsb
cwtl
dec
mov
gs
dec
pop
push
xchg
dec
repz
xchg
push
insl
stos
add
repz
movsl
inc
scas
pop
xor
dec
and
cmp
scas
test
xlat
inc
sti
adc
repz
in
fcomi
in
inc
movsb
pop
add
jns
arpl
push
dec
adc
addl
vmovaps
popa
in
and
add
test
pop
mov
push
push
pop
xchg
xchg
enter
adc
xchg
shrl
incl
add
cmp
lods
lock
pop
and
rclb
inc
mov
dec
push
outsb
or
in
xchg
movsb
in
adc
fidivs
popf
call
nop
push
in
int3
sbb
test
dec
cmp
inc
pop
out
dec
xchg
mov
adc
lahf
lcall
inc
jp
fists
cs
lods
push
xor
fadd
iret
adc
es
in
sub
int
mov
inc
je
inc
out
or
add
sbb
aaa
icebp
sub
cmpsb
dec
mov
or
scas
shlb
js
in
pop
ret
add
mov
jmp
out
and
cmp
xchg
xor
mov
jmp
out
push
mov
adc
pop
es
adc
dec
shll
inc
xor
jl
ljmp
negb
imul
out
push
mov
mov
hlt
sahf
ja
inc
test
clc
aas
jl
pop
notb
lcall
mov
push
add
push
in
orb
arpl
outsb
jbe
ja
sub
scas
jmp
mov
and
xchg
adc
mov
in
mov
xchg
xchg
mov
cs
shl
sti
dec
pushf
fidivl
push
fldt
xor
mul
xchg
mov
jl
in
stos
nop
sub
cld
pop
xchg
pop
orl
adc
sub
aas
xchg
jno
shll
fcomip
xchg
lods
lods
test
ret
push
xor
dec
inc
leave
mov
jle
idivl
mov
cmp
in
cli
aad
and
mov
inc
cmp
add
arpl
jle
rorb
and
jnp
loopne
ja
sub
mov
jbe
icebp
or
into
xchg
mov
push
fnstenv
sub
movsl
call
sar
andb
sarl
push
shrd
outsl
test
call
push
cmpsl
in
test
out
and
fstps
jmp
push
or
or
sub
mov
insl
shll
ret
push
in
mov
dec
mov
dec
xor
pop
mov
push
sub
aad
cmp
pusha
add
mov
stc
std
and
scas
cmpb
mov
sub
mov
xor
xchg
ja
ds
adc
jecxz
in
mov
adc
mov
push
mov
fstpt
lret
ret
dec
std
mov
hlt
mov
jg
lock
js
inc
daa
push
and
push
jmp
xchg
outsb
push
mov
sub
mov
into
repnz
aam
mov
pop
pop
dec
lret
fmul
testl
cli
sub
rcrl
stc
sti
fisubs
xchg
leave
mov
sbb
sahf
inc
xchg
movsb
cld
sbb
frstor
pop
stos
sub
jl
jb
jmp
fsubl
sbb
and
lock
lock
outsb
cmp
adc
subb
inc
scas
mov
repnz
mov
scas
call
lcall
mov
push
mov
imulb
xor
adc
popf
xchg
sti
subl
mov
imul
rorb
imul
fld
push
cmp
jle
fbstp
ret
mov
hlt
daa
inc
mov
fidivs
jl
mov
scas
stos
dec
mov
dec
push
mov
pop
dec
push
ds
aas
push
fs
aaa
psrlw
mov
jg
call
cld
test
jno
sub
in
outsl
xor
movsb
xlat
fxtract
xchg
inc
and
mov
movsl
mov
fmulp
cmpsl
mov
scas
xor
push
xlat
pusha
imul
negl
outsb
add
sub
loop
add
push
lods
push
int
cmp
fidivrs
clc
sbb
test
std
pop
sahf
mov
xor
pop
icebp
dec
xchg
xchg
cmp
push
fs
cmp
or
pop
xor
fidivl
sbb
ret
xor
mov
jbe
cmp
faddl
push
shl
xchg
cmp
divl
jno,pt
adc
add
push
xor
pop
es
fwait
xor
adc
test
neg
mov
mov
icebp
xchg
xchg
mov
push
cmp
mov
mov
jmp
loope
and
iret
sbb
enter
push
pusha
and
clc
xorl
jg
test
aam
fisttps
push
into
rclb
ja
sub
ret
movsl
cltd
vpunpckhwd
adc
push
jbe
add
xchg
repz
jp
mov
mulb
cs
pushf
sub
notl
cld
dec
cmp
xor
data16
push
and
adc
sub
inc
ret
stos
pop
adc
sbb
xchg
test
rorb
sbb
inc
lds
inc
sbb
add
adc
cld
xchg
adc
jo
or
jno
or
or
loopne
jnp
xchg
loop
dec
mov
outsb
leave
mov
pop
and
sub
insl
scas
jmp
adcb
divl
movsl
test
xor
ljmp
or
sti
inc
mov
stos
loope
push
mov
pop
subb
jl
xor
ret
imul
imul
or
ja
mov
lods
add
cmpsl
jmp
fcmovnbe
fcmovnbe
push
or
std
or
add
notb
ljmp
nop
out
or
outsl
js
mull
out
xor
xchg
add
test
xlat
inc
xchg
bound
jnp
pop
loopne
fbld
out
mov
mov
clc
xor
stos
mov
cmp
jmp
cmc
add
inc
outsl
xchg
dec
sbb
xor
cltd
subb
js
adcl
sarl
push
bound
mov
and
test
pop
xchg
and
dec
inc
mov
mov
fwait
xchg
scas
dec
out
push
fldenv
mov
lock
enter
xchg
sub
movsl
cmc
fisubl
movsb
jns
cmp
stos
ret
cmp
scas
cmpsb
icebp
push
mov
ret
jo
dec
mov
inc
jne
mov
xor
iret
jmp
or
xor
das
fldenv
inc
mov
inc
jns
orl
ret
pop
fisttpl
pushf
jg
mov
inc
jne
cmpl
cwtl
pop
add
mov
xor
std
in
shlb
xchg
cmpsl
hlt
cmp
hlt
test
adc
mov
xchg
pop
out
bound
fdivp
adc
sbb
and
jg
leave
stos
mov
shll
scas
outsl
stc
cld
sbb
in
and
mov
ret
and
mov
dec
xchg
iret
addb
mov
pop
lock
or
jae
sbb
mov
pop
jb
cmpsb
fwait
arpl
mov
xlat
mov
jno
subl
and
xor
cltd
ret
pushf
sbb
xchg
lds
popf
jge
xchg
sbb
dec
inc
push
dec
test
cli
push
push
outsl
cmc
adc
cmc
and
bound
xor
cmpsb
je
aad
clc
dec
or
pop
pop
jo
sbb
je
jg
add
popf
xor
mov
aam
and
sub
xchg
out
jge
sub
rcl
es
jno
into
loope
cmp
bound
pop
fwait
in
out
mov
repz
aam
and
out
decl
mov
cmpsl
add
out
jno
sub
insb
outsb
ds
sbb
repnz
jmp
rcll
lret
and
cli
push
or
subl
push
ret
pop
cmp
inc
adc
xlat
xchg
cld
sar
js
lahf
adc
mulps
lret
xchg
cmp
mov
jmp
adc
push
aam
aaa
mov
cmp
jnp
jo
pushf
or
pop
call
cs
ljmp
cmp
and
pop
mov
add
push
mov
dec
add
leave
pop
icebp
test
lock
lea
adc
jp
and
out
mull
push
pop
pusha
add
ja
and
inc
scas
pop
test
or
cmpsb
push
addl
loope
xor
leave
inc
jb
cmp
scas
dec
adc
mov
jns
cltd
jae
sub
cmp
test
jae
cltd
and
add
mulb
or
bswap
fs
xor
adc
repnz
test
pop
dec
and
or
mov
add
icebp
addr16
xchg
ljmp
pop
push
jb
jb
jb
and
movsl
push
pop
mov
mov
mov
pop
arpl
push
ficoml
icebp
rcr
xchg
push
cmpsl
enter
nop
cltd
add
sub
cmp
in
cmp
cmp
stos
mov
jns
xchg
sar
jne
in
push
sub
fld
jbe
mov
mov
sbb
xor
adc
inc
arpl
das
iret
and
js
mov
movsb
cmc
adc
mov
push
xor
movsb
leave
fidivrs
ret
adc
jp
test
fwait
jle
xor
int
call
jns
outsb
xchg
hlt
shlb
adc
stos
jno
sub
clc
and
mov
enter
cs
push
mov
add
loope
lret
xchg
fiaddl
aaa
and
arpl
je
and
std
sbb
ret
fnstcw
push
mov
loope
daa
mov
into
sbb
adc
sbb
xchg
outsl
cli
sub
sbb
push
jo
sbb
push
and
in
mov
mov
push
outsl
andb
scas
sub
aas
iret
mov
ljmp
aad
into
ret
insb
insb
dec
xchg
pcmpeqb
sbb
shll
jle
addr16
and
notb
leave
sbb
xor
dec
inc
push
and
lcall
and
or
in
mov
add
add
fs
cmp
pop
in
shlb
push
lret
cwtl
add
xchg
std
clc
dec
push
pop
adcb
in
adc
lods
mov
inc
push
int
mov
stc
pop
add
bswap
jge
testl
test
cmp
int
ss
pop
repnz
mov
in
mov
test
lcall
add
and
into
das
icebp
jecxz
or
sti
movl
fcompl
fisubl
mov
and
and
inc
cmp
jno
or
loope
cmc
and
aam
xor
add
mov
mov
mov
cs
push
jne
xchg
aaa
dec
jl
andb
add
jne
out
dec
popf
sub
jnp
test
cwtl
popf
push
mov
inc
fstps
dec
pusha
inc
cmp
aas
push
cld
inc
lods
dec
push
inc
lds
cmovns
ud2
je
sbb
jp
mov
les
imul
cwtl
jne
and
or
hlt
loop
enter
xor
cmp
jbe
xchg
cmp
loope
scas
jae
sbb
ret
mov
xor
ret
mov
jp
or
ret
mov
icebp
push
add
dec
mov
dec
repz
cld
imul
or
pop
sbb
je
les
movsb
fdiv
stc
push
dec
cmpsb
popf
out
sbb
les
adc
ljmp
cld
jmp
mov
sti
mov
cs
lds
sub
mov
dec
cmp
into
addr16
lahf
jmp
adc
sub
aad
rorb
fadds
es
cmp
mov
push
pop
dec
cli
setnp
mov
jmp
es
jb
xchg
adc
sahf
add
pop
add
xor
mov
mov
adc
mov
add
cmp
es
push
push
movsl
sbb
fwait
cmc
cmp
mov
lret
mov
loop
xchg
jbe
jns
and
aam
daa
or
movzbl
or
push
pop
jmp
into
idivl
imul
cvtpi2ps
add
xlat
inc
fildl
in
popa
sbb
stc
daa
fs
shlb
xor
subl
out
adc
push
imulb
imul
loope
outsb
xchg
daa
jnp
insl
fs
mov
in
jmp
lcall
mov
sub
push
pusha
fs
xor
xor
push
loopne
es
inc
mov
mov
fisubl
jp
leave
cli
or
cmp
lret
adc
test
cs
sub
mov
repnz
push
or
ret
jmp
mov
fsub
in
jecxz
ret
andb
mov
cltd
sti
mov
dec
adc
push
call
in
and
rolb
jb
jg
push
cs
scas
cmpsl
push
pop
pop
push
or
jge
and
mov
cmp
roll
setns
outsb
in
jo
add
inc
ja
daa
add
jbe
sbb
stos
or
and
cltd
lea
out
in
dec
fstpt
push
cmpsl
pop
adc
loop
dec
test
sub
dec
cmp
adc
pop
loopne
fs
cmp
mov
mov
jge
negl
jno
cltd
dec
jge
add
pop
push
push
sub
lods
jge
xor
enter
repnz
aas
fsubrl
aam
add
iret
add
rcll
mov
jbe
xchg
in
lock
es
mov
loopne
jb
stos
mov
mov
inc
cmp
xor
out
mull
ret
insl
and
iret
ljmp
pop
fbstp
sar
idivb
mov
push
or
cmpb
testb
dec
inc
sbb
jnp
xor
cwtl
filds
and
jg
rorb
into
add
cmp
nop
jp
sub
je
rcll
add
add
gs
pop
stos
lea
out
and
pop
test
in
cmp
jp
add
sub
rcrb
jg
sub
loopne
stos
ss
sub
sbb
cli
and
loope
jle
hlt
popf
inc
jns
xchg
loopne
jae
mov
lea
jo
push
jecxz
jo
shll
lahf
loope
mov
fisubrl
xchg
xchg
push
inc
sub
enter
sahf
lods
xchg
shlb
insl
jmp
xchg
add
xchg
scas
fwait
xlat
imul
jle
dec
out
pop
lods
pop
xor
sarl
sahf
loop
mov
mov
fcmovne
repz
cmc
mov
dec
in
in
xor
dec
dec
dec
mov
imul
cmp
repnz
lds
pop
mov
orb
push
push
mov
ret
fcoms
mov
popa
push
jb
mov
ret
mov
xchg
out
push
jae
inc
jnp
mov
mov
lcall
sbb
lcall
adc
inc
ljmp
push
sbb
pop
movsb
pop
nop
xchg
inc
imul
hlt
jns
aam
insb
sub
arpl
out
stc
xor
pusha
mov
inc
pop
icebp
jb
xchg
scas
sub
ret
movsb
rorl
mov
push
pushf
scas
jmp
push
cmp
pop
adc
mov
lret
cltd
call
lret
outsl
out
sub
fldenv
adc
adc
bound
aad
adc
and
rcll
in
ljmp
testb
push
dec
jp
iret
push
xor
popa
ror
mov
sbb
xlat
pop
pop
xchg
xchg
mov
outsl
adc
jge
bound
add
push
les
movsb
clc
pushf
scas
test
or
int
pop
sbb
mov
pop
test
pop
add
add
mull
push
fwait
xlat
pop
and
lea
rcrl
clc
test
mov
insl
cmp
jae
lret
cmp
bnd
adc
xchg
inc
fidivs
mov
je
cmp
pushf
mov
or
std
lock
push
push
xchg
not
push
pushf
jecxz
call
add
aad
popf
scas
aas
sub
cli
stc
xchg
mov
mov
add
aaa
inc
pop
inc
xchg
clc
lods
movsl
mov
jne
add
shrb
cld
insl
push
pop
fincstp
fstpt
in
xor
dec
out
orb
ret
or
pop
xor
ss
jns
int3
cs
mov
out
shrb
or
pop
push
or
fnstcw
or
dec
cmc
or
stc
roll
inc
pushf
add
sub
inc
aad
sub
and
push
iret
das
pop
sbb
jo
pshufw
jns
cld
jp
insb
pop
fdivl
andl
sub
ret
popa
fcmovb
pop
fisubl
and
in
mov
inc
jecxz
push
cltd
pop
ret
lock
jns
lods
es
push
jns
mov
insl
mov
fcmovne
sub
addl
testl
push
insl
jb
xchg
xchg
cmp
fstl
repnz
cmp
in
dec
ret
ret
test
bound
pop
test
mov
jl
mov
aad
or
and
push
insb
mov
jns
mov
pop
out
in
mov
in
push
and
das
sbb
arpl
das
hlt
cli
push
bswap
and
jp
mov
repz
les
sarb
inc
enter
mov
mov
push
mov
in
stos
mov
mov
sub
cli
add
enter
aam
lret
daa
rcrb
cmp
aam
fnsave
push
out
sub
sbb
add
mov
jp
fldt
add
scas
lods
pop
bound
jmp
sub
mov
dec
xchg
lret
cmpsl
mov
dec
clc
fwait
or
and
push
out
loopne
cld
mov
adc
or
xchg
out
pop
mov
or
sbb
ljmp
les
out
cmp
xor
cmpsl
rcrb
test
pop
jo
sbb
jge
scas
loop
fwait
ljmp
ret
mov
test
dec
nop
jbe
testl
pusha
pop
mov
mov
push
jecxz
popa
scas
dec
das
popf
gs
sti
pop
fxch
pushf
lret
xchg
pop
push
cmp
dec
adc
in
adc
mov
or
jnp
roll
jne
outsl
mov
pop
daa
push
xchg
jle
stos
mov
add
jl
cltd
or
add
sbb
cld
nop
mov
icebp
jbe
pop
mov
lds
bswap
fcoms
aad
pop
xchg
cmp
or
mov
fnsave
xchg
mov
sub
neg
sbb
je
scas
cwtl
push
test
filds
jne
sahf
jb
rclb
cmpsl
sub
mov
pushf
cmp
jno
in
mov
jge
iret
mov
sub
pop
inc
pop
in
mov
mov
cmpl
fs
mov
jmp
rolb
test
loopne
or
jne
pop
cmp
inc
push
out
jo
mov
add
sahf
test
pop
push
loop
jbe
jne
test
fsubrl
pop
xor
or
jge
psadbw
inc
or
mov
xchg
shll
cld
and
out
inc
jno
mov
and
push
das
push
pop
mov
scas
mov
sahf
sub
ljmp
mov
aam
xor
in
lea
mov
das
repz
xchg
mov
lds
movsb
in
jnp
daa
das
sbb
pop
int
stos
outsb
inc
push
in
mov
mov
into
sbb
les
xchg
add
out
dec
and
roll
neg
cli
ds
and
xchg
scas
jae
fstpt
or
add
leave
cwtl
stos
mov
jp
iret
shll
pushf
jne
ret
jle
dec
es
std
mov
das
mov
dec
jns
jg
imul
loopne
cmpb
insl
dec
dec
out
repz
adc
inc
stos
xlat
data16
divl
pop
out
xor
jge
repnz
mov
add
cmp
sbb
sbb
scas
cld
xor
inc
inc
jnp
xchg
jge
leave
push
sub
lahf
cltd
enter
sbb
adc
not
or
lahf
or
push
jns
movb
sbb
dec
lcall
fdivl
add
jg
sarb
sahf
nop
cli
stos
aaa
cmp
xor
sub
fsubs
xor
inc
sub
inc
xor
mov
adc
pop
lahf
testb
sbb
cmp
dec
add
add
jmp
je
imul
lods
xchg
test
cmp
xor
dec
cli
mov
mov
ret
and
sbb
addl
mov
rclb
cmp
fisubrl
sub
cmpsl
imul
adc
push
and
push
orb
sub
out
push
mov
ljmp
mov
lcall
insb
lock
adc
cmpsb
mov
or
mov
les
ret
aaa
icebp
fimull
sbb
push
push
pushf
mov
dec
cmp
add
vmaxss
mov
aam
sti
jp
sbb
pushf
imul
in
rorb
cmp
rclb
les
jg
cmp
jle
stos
mov
in
pushf
sbb
xor
xor
adc
push
or
stos
xor
cmp
cmp
outsb
dec
popf
mov
inc
idivl
enter
push
out
outsl
fldt
fsubr
pop
cmp
cmp
repnz
dec
shll
sahf
pushf
jne
adc
dec
xchg
daa
mov
mov
inc
or
dec
inc
out
fwait
notl
popa
inc
loop
and
mov
adc
cmc
inc
xor
sub
jp
adc
mul
and
lea
mov
lret
cli
es
jo
jl
inc
test
mov
outsl
aas
inc
mov
mov
jmp
or
cmpl
pusha
into
jg
push
jns
mov
mov
fs
mov
cwtl
mov
mov
rcrb
and
adc
stos
das
xor
xchg
clc
dec
adc
xchg
stos
aas
loope
aam
pushf
pop
int
sti
stos
push
pop
frstor
pop
jmp
cli
sbb
xchg
xor
pop
stc
xor
nop
xor
cmpsb
imul
sbb
mov
outsb
addr16
sub
repnz
stos
inc
mov
stc
je
jl
icebp
mov
fisubrl
jb
sbb
jle
mov
sub
test
aad
add
lock
lcall
jb
pop
xor
mov
adc
sub
outsl
and
xor
outsl
xor
sbb
dec
in
pop
cmc
lds
mov
ficompl
adc
xor
pop
adcb
push
inc
or
adc
mov
enter
mov
jle
sbb
xor
movsl
movsl
cmc
loopne
int
movsb
cmpsl
xchg
pop
js
jae
ret
test
outsb
and
inc
mov
stos
mov
sarb
mov
hlt
into
mov
jbe
in
loopne
mov
cmp
imul
inc
das
inc
cmp
inc
xchg
shll
sbb
add
lcall
mov
clc
fmul
adc
leave
and
inc
pop
cmpb
pop
sub
lods
xor
inc
imul
cmp
mov
movsb
loop
mov
outsl
mov
cmpsb
pop
sbb
pop
das
lret
adc
dec
add
fnstenv
push
scas
cmp
mov
and
clc
bound
pop
inc
pop
inc
add
dec
addr16
and
imul
push
push
and
xor
push
and
gs
filds
pop
adc
insl
or
in
dec
xor
shl
jne
mov
mov
mov
mov
outsb
push
cmp
andl
jno
or
mov
mov
xor
xchg
mov
xor
incb
xchg
and
sub
adc
mov
push
jecxz
insl
jbe
adc
lods
repnz
arpl
push
add
cmpsl
call
xchg
in
mov
sbb
arpl
imul
cs
mov
xchg
movsl
ss
movsl
outsb
pushf
add
cwtl
jge
mov
int3
jmp
aad
adc
mov
repnz
or
or
cmpsb
icebp
xchg
outsl
pop
cmp
gs
ret
mov
cmp
cmc
ficoms
mov
adc
jecxz
push
jmp
insb
cmp
inc
add
mov
cmp
xor
mov
cmp
inc
js
pop
je
imul
and
nop
call
cltd
push
test
sbb
jb
fdivrp
adc
loop
mov
mov
stos
rcr
sub
sub
clc
push
cs
lret
adc
add
and
jae
pushf
mov
sbb
sub
das
or
iret
es
repz
test
xor
scas
lods
push
scas
add
hlt
jb
shll
adc
and
mov
stc
mov
mov
in
test
xchg
int
mov
adc
mov
jmp
enter
mov
and
fwait
pop
inc
ss
jg
jle
adc
leave
pop
into
lahf
mov
imul
xlat
idiv
jns
mov
adc
xchg
adc
jno
mov
inc
ss
test
xchg
adcb
mov
xor
push
push
sub
imul
dec
lods
ljmp
dec
cli
es
jg
or
lcall
mov
sbb
mov
inc
scas
ja
and
xor
mov
dec
repz
xchg
push
and
push
inc
fiadds
pop
sub
out
repz
std
repz
adc
and
xchg
lcall
mov
xchg
sub
mov
repz
pop
pop
call
push
xor
imul
pop
loop
mov
int
cmp
mov
mov
cmc
or
adc
push
and
sub
test
fabs
mov
adc
xlat
adc
mov
mov
jmp
mov
push
repz
xor
push
mov
lret
push
xor
lret
jl
sub
xor
mov
xchg
sub
pop
int
dec
into
vshufpd
mov
mov
jns
push
push
adc
jne
lock
test
arpl
sbb
jns
xchg
sub
push
xchg
fsubrl
sub
out
loopne
daa
cmp
or
leave
iret
lea
out
mov
arpl
scas
mov
sbb
or
lods
pop
mov
xor
jns
ret
std
sub
mov
insl
fstl
scas
and
add
iret
sahf
les
cmc
jo
pop
pusha
jp
jge
bound
shrb
xor
test
and
dec
cld
fcoms
and
lret
adc
push
pushf
lea
and
sbb
jno
lcall
out
and
add
adc
popf
mov
out
int3
mov
aad
mov
icebp
dec
add
in
sti
push
pop
sti
fwait
cmpsl
mov
pop
aaa
outsl
repz
jle
loop
in
addr16
int3
mov
icebp
lea
jne
into
popf
mov
push
push
lahf
nop
sub
pushf
xor
ret
in
push
adc
add
dec
or
xor
mov
xor
lods
jecxz
mov
rcl
mov
test
sbbb
lret
inc
mov
push
lea
xchg
inc
push
xchg
imul
add
cmpsl
jmp
add
mov
in
pop
rorl
xor
lods
lods
inc
add
mov
push
in
push
mov
pop
push
sbb
or
clc
int
sbb
testb
xchg
xchg
mov
push
stc
test
push
daa
or
pop
xor
cmp
std
dec
mov
add
and
dec
outsl
out
cli
push
pop
add
aam
mov
shrl
fwait
hlt
adc
rep
aaa
fisubrl
sub
lds
jmp
in
fdivl
mov
or
pop
sahf
fs
loopne,pn
dec
jl
inc
js
push
mov
fs
sbb
push
sti
div
testb
mov
mov
xchg
lahf
addl
ds
cld
aam
lods
mov
gs
dec
les
enter
ret
fldl
jge
imul
xchg
or
or
sub
cmc
mov
pop
xchg
sbb
and
and
arpl
stc
xchg
leave
mov
jp
sbb
push
lea
pop
or
jl
mov
ja
xor
aam
shlb
les
insl
ret
lods
push
ficompl
xlat
scas
adc
push
adc
sub
stc
cmp
insl
jnp
add
scas
xchg
loop
inc
popa
fwait
add
fwait
mov
jbe
outsl
add
rcrl
imul
jl
xchg
xchg
or
push
ficoms
and
leave
xor
pusha
push
test
xchg
jmp
movsl
popf
xlat
out
insl
mov
lcall
fisttpl
inc
push
sub
sarl
xchg
xor
xchg
jmp
fsts
ret
aam
dec
xchg
std
push
push
dec
rcrl
push
jg
in
mov
adc
xchg
shr
lods
add
stc
sahf
cmp
int
or
xor
test
rorl
push
adc
pop
mov
mov
and
addl
scas
mov
fsubr
shr
std
mov
clc
les
sbb
inc
inc
and
sahf
jp
mov
or
ret
into
cwtl
aam
and
iret
add
jno
pop
jp
mov
and
bound
xchg
pushf
mov
add
mov
push
add
sbb
dec
subl
and
jo
mov
mov
cmp
loopne
dec
shll
sti
mov
les
int3
push
aam
cmp
fs
inc
sbb
jg
mov
lods
test
cld
insl
mov
jne
cmpsb
add
data16
aam
lcall
dec
ds
push
notb
cmp
ret
add
data16
mov
das
leave
pop
lret
repz
jb
or
xchg
jne
jnp
outsb
hlt
mov
adc
push
sbb
push
pop
outsb
test
aad
test
and
or
sub
cs
fisttpll
clc
int3
push
ret
xlat
add
inc
loop
aad
loop
cmp
enter
test
bound
jp
jmp
mov
and
gs
adc
movsl
int
dec
js
fidivrl
aad
and
add
add
ja
inc
adc
popa
andb
adc
into
mov
in
nop
movsb
scas
icebp
xchg
pop
mov
push
adc
and
xchg
ja
lock
xchg
inc
cmp
jle
arpl
fnsave
mov
test
stos
mov
out
pop
pop
ror
shr
sub
jbe
aaa
add
cmp
test
dec
imul
fstpt
dec
clc
int3
mov
es
push
fs
les
mov
mov
jb
ljmp
popa
loope
test
xor
adc
mov
jg
cmp
out
mov
loop
mov
or
mov
iret
shlb
jmp
mov
rcl
aad
cwtl
lods
cld
ss
sbb
add
je
or
imul
dec
push
roll
pop
je
insl
sub
dec
jbe
aam
sahf
adc
daa
mov
fists
pop
aam
dec
push
mov
sbbl
add
adc
orb
adc
ret
lea
lea
cmpsb
dec
adcl
push
cltd
fadds
fimull
test
pop
arpl
push
gs
pop
movsb
cmpsb
and
push
fmull
inc
rcl
sbb
inc
call
stc
and
pop
sbb
sub
int
fxch
cwtl
pop
pop
jns
add
incl
mov
mov
cmc
fadds
push
aaa
imul
outsb
jno
xor
dec
mov
push
in
or
cmp
mov
sti
repnz
pop
jae
mov
mov
pop
mov
in
test
outsb
cmpsl
add
aam
fists
mov
jo
mov
mov
cli
inc
or
dec
std
pop
lods
push
and
clc
or
movsb
mov
inc
add
sbb
ja
fcoml
xor
xchg
mov
lret
sub
add
xor
lds
fwait
outsl
or
mov
das
lods
aaa
mulps
xchg
cmpsb
jo
jnp
jns
push
pop
int
stos
fists
fwait
nop
and
aas
push
xor
out
push
mov
fsubl
inc
outsb
ret
jnp
cmp
loope
push
dec
aas
addb
xchg
cmp
mov
cmpsb
inc
mov
pop
push
enter
or
hlt
pop
add
mov
dec
adc
pop
pop
je
push
push
jl
out
icebp
repnz
mov
and
sbb
sbb
frstpm(287
mov
inc
mov
mov
imul
cmp
aad
sub
pusha
adc
imul
push
adc
sarl
mov
or
divb
adc
cmp
add
mov
xchg
js
rclb
addr16
dec
dec
lcall
adc
pop
jmp
pop
jnp
cmp
shll
mov
movsl
repz
je
pop
addl
js
pusha
hlt
daa
int3
popf
pop
jmp
into
test
mov
rolb
push
cmp
or
pop
cmpsb
dec
cmc
andl
mov
addr16
loope
jmp
cmp
in
bound
leave
mov
ror
mov
out
lods
inc
sub
sbb
mov
sub
hlt
lahf
lahf
mov
adc
enter
lahf
repz
daa
push
rorb
dec
xor
mov
cmpsl
cmp
dec
push
mov
test
out
cwtl
adc
daa
adc
push
cmp
cmp
push
mov
sub
push
fistpll
fidivrl
mov
sub
cmp
fwait
dec
pop
cmc
test
pop
ficompl
dec
mov
jno
mov
outsl
cmp
lret
xchg
jne
repz
lahf
sbbb
fnop
cmp
inc
outsl
ret
into
adc
dec
cmp
lods
jp
dec
mov
pop
xchg
push
int3
push
sub
loopne
mov
fwait
cli
icebp
mov
push
addr16
ret
pop
lock
lock
inc
es
dec
iret
std
faddl
and
or
lods
fsubl
or
jg
mov
add
add
mov
imul
or
mov
jnp
movsb
pusha
mov
pop
shrb
cmp
or
and
aaa
sahf
sti
insb
mov
cmc
test
fistpll
movsl
out
lret
into
int
imul
xchg
push
out
lret
test
pop
pop
sbb
adc
negb
outsb
sbb
and
push
imul
fwait
xor
fldcw
addr16
mov
and
outsb
sub
test
push
cmp
xchg
sub
jg
in
push
mov
jg
inc
mov
fmuls
adc
sti
mov
insl
lods
or
ret
xor
fidivrl
out
mov
mul
cld
adc
insb
addr16
sbb
push
adc
test
out
sahf
xchg
rorl
mov
in
insb
and
movsb
and
mov
xor
sar
or
je
test
mov
xchg
into
xchg
push
in
rcrl
dec
gs
pop
adc
mov
jmp
xor
stos
mov
push
dec
sti
xor
xchg
call
hlt
mov
cli
mov
repz
shrl
shlb
add
push
outsb
popa
xchg
mov
xchg
call
lea
adc
ljmp
bound
pop
dec
out
push
mov
lock
lock
in
ret
mov
jmp
pop
mov
fadd
aad
mov
icebp
movsl
xchg
sbb
push
sbb
pop
sbb
ficomps
push
mov
into
leave
push
and
xchg
jne
ds
xor
sub
out
xor
insl
ror
mov
loope
jp
in
push
and
arpl
mov
xor
rorl
and
or
push
fiadds
jmp
dec
int
dec
push
andb
and
fcompl
test
les
sub
xchg
lcall
sbbb
movsl
cs
or
ja
jg
aas
test
fnstsw
cmp
inc
rclb
pop
leave
dec
mov
loope
jmp
jecxz
hlt
movsl
fnsave
test
outsl
xchg
xchg
add
enter
or
cs
xor
in
aaa
mov
jge
addr16
ja
aad
call
daa
cltd
loopne
divl
data16
test
pushf
add
add
xlat
sar
add
mov
vpavgw
pushf
or
aaa
ret
jmp
pop
xchg
sub
xchg
shl
xchg
test
cmp
imul
test
push
add
and
cmpsb
fisubrs
push
adc
in
fcmovu
dec
hlt
mov
arpl
movsb
lret
out
add
mov
mov
jae
and
dec
lahf
mov
jecxz
mov
mov
xor
cld
xor
xchg
lahf
out
std
inc
push
lahf
stos
scas
lret
lods
sub
loopne
dec
adc
jmp
pushf
mov
insl
cmp
jo
jnp
addr16
outsl
aaa
lret
int
push
or
mov
es
mov
jbe
inc
adc
ljmp
or
mov
add
clc
in
push
pop
mov
out
nop
mov
mov
and
mov
xor
jmp
jl
scas
pusha
xchg
add
push
ljmp
push
pop
mov
mov
enter
inc
aad
rclb
pop
or
pop
outsb
lret
test
lret
icebp
mov
xor
mov
sti
adc
stos
div
xchg
in
dec
dec
imulb
adc
int3
jb
in
xchg
pop
es
jp
xor
and
dec
jno
in
stc
or
test
into
cmc
stos
lds
mov
jge
xor
xchg
xor
mov
mov
pusha
and
xchg
mov
dec
or
lcall
adc
imul
pop
xor
pslld
mov
dec
and
xchg
adc
repz
xor
mov
push
in
push
sub
mov
inc
dec
mov
add
loope
stc
daa
xchg
mov
jle
inc
decl
out
lcall
sub
dec
jp
bound
push
sahf
cwtl
inc
xchg
adc
push
xor
inc
or
xchg
mov
mov
mov
or
cmp
test
xor
mov
jne
sbb
pop
mov
movsb
cmpsl
push
jnp
add
iret
fs
daa
das
insl
pop
sbb
movl
pop
sbb
lret
lea
xchg
orl
stos
inc
fsts
sbb
lds
xchg
aad
ja
cld
cmp
mov
jne
aaa
jp
in
inc
ss
mov
jecxz
dec
out
subb
dec
int3
push
mov
sub
sahf
jle
xor
inc
jmp
push
jg
mov
cmp
cmpsl
loop
into
iret
andb
jmp
repz
inc
cmp
and
xchg
jle
imul
test
addr16
in
xor
inc
inc
inc
mov
xchg
loop
mov
pop
out
ljmp
mov
jo
inc
adc
lods
cwtl
dec
lret
cld
xor
dec
xchg
mov
cmpb
mov
hlt
inc
pop
cmp
ds
and
cmp
push
out
jmp
add
ljmp
test
pop
dec
cmp
jecxz
mov
cmp
xchg
pop
add
sbb
out
les
pop
jge
mov
dec
pop
imul
fistpll
push
test
dec
out
iret
loop
jbe
clc
pop
rcr
rcrl
rol
lea
loop
inc
pop
sub
sbb
adc
and
lods
out
cmc
sbb
xor
in
mov
dec
repnz
sbb
divl
mov
pop
popf
mov
adc
xchg
cli
mov
incb
and
cmpsl
xchg
push
cli
test
es
mov
jne
mov
rol
int
push
scas
sub
lret
or
mov
mov
pop
adc
jg
int3
test
and
pop
outsb
gs
popf
dec
mov
push
mov
int3
pusha
inc
aam
bound
movsb
push
mov
test
push
out
fnstcw
fdivs
shll
mov
outsb
pusha
aam
sbb
in
mov
adc
and
add
fbstp
lahf
add
sub
imulb
mov
or
aam
inc
and
and
sahf
xchg
sbb
pop
orb
popf
shl
sub
mov
add
outsl
rorl
test
cli
mov
rcll
insb
push
sbb
scas
and
push
scas
es
mov
nop
cwtl
pop
push
sbb
xchg
mov
pop
sahf
mov
push
aas
orb
adc
adc
mov
insl
and
les
test
adc
test
mov
inc
rcll
jbe
outsl
outsb
xor
push
mov
lea
inc
xchg
and
out
jne
xchg
stos
lods
aas
repnz
scas
xchg
cmp
int
outsb
icebp
sbb
shr
sub
ret
adc
mov
pop
add
addr16
test
adc
ds
std
int
std
popf
in
xor
shrb
add
movsb
mov
lret
xor
je
aad
push
notb
scas
pop
emms
test
add
xor
sbb
stc
push
and
fstpt
push
inc
jne
xor
or
add
pop
cmp
stos
dec
sar
addb
fsubs
shrl
xor
inc
fsubrs
test
push
fs
adc
std
hlt
pusha
pop
pop
sbb
sub
aas
imul
add
popa
aad
and
mov
test
push
push
hlt
sbb
add
aam
inc
mov
fstps
test
inc
gs
push
or
rorb
inc
cmp
dec
and
scas
or
jno
sub
pop
test
lods
lret
insl
sarb
clc
stos
mov
push
inc
sub
jbe
fsubr
loopne
mov
mov
aad
repz
mull
mov
mov
sbb
inc
xlat
out
out
xor
mov
adc
out
or
shll
mov
popf
adc
xor
jns
mov
mov
lret
pop
daa
sarl
aas
fidivl
inc
mov
iret
into
out
cld
jl
dec
xor
inc
jbe
or
ja
mov
or
mov
mov
movsb
outsl
mov
pop
inc
sbb
sbb
hlt
jl
xchg
fwait
js
ret
lds
and
out
pop
lret
or
idiv
lret
imul
dec
icebp
and
and
sub
cmp
cmp
jns
cmpl
mov
add
enter
add
cli
fwait
jae
icebp
loop
jbe
jnp
jns
xor
sbb
xor
jecxz
test
jecxz
or
push
sbb
mov
xor
rcll
mov
pop
mov
jge
fildll
xchg
mov
mov
lret
les
sbb
pop
pop
or
or
lock
fs
inc
sub
je
nop
aaa
mov
pop
psadbw
repnz
push
rol
and
inc
mov
cmpsl
fs
test
mov
jl
int
idivl
shll
xor
sbb
or
fadds
inc
mov
cmp
sub
xor
mov
lret
jg
cmp
adc
jle
push
mov
dec
rcll
out
lods
popa
xchg
mov
mov
lea
ds
fmull
sbb
ljmp
jg
lret
cmpsb
pusha
sar
pop
out
popa
adc
pop
sbb
push
lcall
dec
int3
xor
dec
ret
lds
test
js
cs
jp
push
lea
mov
fisubs
sub
mov
shlb
and
shrl
jge
lock
fnstenv
add
mov
push
stos
imul
cld
movsl
jge
sbb
mov
pop
pop
insb
sbbl
or
icebp
jne
adc
sbb
jae
xor
or
rorl
push
shl
js
xchg
addr16
movsb
lds
test
rol
test
xchg
mov
and
pop
jle
dec
ljmp
pop
mov
mov
bnd
xor
sbb
clc
pop
or
xchg
or
sub
pop
adc
adc
jle
xchg
cld
std
jno
mov
lcall
testl
paddusw
adc
out
fildl
xchg
aas
inc
mov
sub
in
mov
outsl
xchg
pusha
mov
fwait
stos
in
xor
add
pop
insb
popa
dec
insl
dec
call
dec
mov
cwtl
es
outsl
lcall
cmpsb
pop
scas
cmp
ja
add
fs
lahf
pop
addb
dec
fstps
mov
or
pop
cmp
test
sub
push
or
jg
add
sub
dec
andb
dec
inc
add
insl
and
xchg
rcr
adc
lret
sbb
or
ds
mov
or
or
pushf
mov
mov
jge
lods
mov
nop
repnz
cmc
mov
mov
repnz
jnp
mov
sti
popa
and
xor
adc
xchg
sub
lahf
sub
mov
int
mov
in
cwtl
out
inc
les
popf
into
sub
add
xor
add
es
or
sbb
pop
sarl
add
popa
xorb
jne
jns
pop
cmp
jnp
loope
adc
fcom
cmpsb
push
add
xlat
dec
dec
sub
inc
mov
fisttpll
pop
xchg
in
int3
rcrl
rclb
lods
pushl
js
and
hlt
jno
push
mov
jo
loopne
adc
out
cmpl
jg
xor
jg
mov
jae
xchg
sub
jecxz
jb
or
adc
lret
or
roll
cld
add
xchg
les
jl
aad
inc
bound
dec
sbb
add
in
ret
cmpsb
daa
push
pop
imul
lahf
shrb
pop
gs
xor
dec
dec
test
gs
mov
dec
mov
push
pushf
lret
pop
jbe
pop
xchg
push
andb
ds
jo
mov
repz
xor
lods
sbb
mov
js
push
cmc
xchg
add
mov
popf
int3
lods
test
adc
xchg
iret
frstor
imul
mov
dec
rcrl
fsubs
sub
int
mov
dec
dec
repz
cmpsl
into
cmp
out
das
sbb
xchg
vmwrite
icebp
or
daa
or
fs
cwtl
stc
call
outsb
jp
push
dec
pop
fwait
arpl
test
shll
pusha
cmp
xchg
rol
dec
outsl
cwtl
pop
das
mov
or
hlt
lods
cs
xchg
mov
insl
gs
cmp
sahf
or
jp
push
mov
adc
cld
rorl
repz
push
dec
insl
test
pop
adc
jb
pop
mov
int
cmp
cmpb
test
mov
or
loopne
xchg
inc
adc
hlt
xchg
sub
imul
data16
or
cwtl
outsb
ret
arpl
jne
lds
lds
lcall
push
inc
rorl
lret
ror
mov
nop
dec
mov
call
gs
xchg
mov
fbld
inc
mov
imul
nop
pop
pop
push
cld
in
push
inc
mov
mov
movl
mov
pop
fisubs
enter
mov
lahf
dec
adc
mov
das
pop
dec
cs
jmp
jl
pushf
or
and
je
push
lahf
mov
ret
xor
sbb
rclb
sbb
repnz
ja
popf
dec
jae
mov
cmpsb
cmp
push
mov
push
xchg
mov
jae
out
popf
sub
sub
movsb
es
sub
sti
daa
and
sub
dec
or
shll
fisttpll
outsl
mov
insb
adc
mov
mov
mov
adc
shrl
fnsave
test
mov
gs
and
dec
pop
std
adc
adc
dec
pusha
pushf
mov
adc
jg
add
lret
inc
add
mov
fidivl
xchg
aam
dec
mov
mov
pop
idivb
in
call
or
lahf
mov
push
call
sub
aam
sbb
divb
js
hlt
fmul
cmp
aas
out
inc
push
cli
pop
cmp
mov
data16
cmp
pop
pop
xchg
mov
repz
push
nop
inc
sub
lret
incl
cmp
in
mov
jp
sub
jne
lods
and
out
pop
idiv
icebp
and
sbb
mov
sbb
xor
loope
and
lock
pop
sbb
ret
popf
test
or
stos
mov
jne
repz
shll
mov
es
sub
clc
cmc
mov
scas
into
sub
dec
je
dec
dec
adc
jge
jl
mov
test
pop
push
in
adc
mov
adc
or
xchg
stos
cmp
dec
lcall
xor
cltd
xor
clc
pop
int3
adc
movsl
fyl2xp1
mov
dec
out
cmp
aas
mov
mov
pop
addr16
loopne
scas
lods
sub
cmp
mov
icebp
jmp
dec
inc
ljmp
aam
push
pminsw
add
fs
shlb
sub
push
adc
mov
cli
js
xchg
movsb
push
dec
fwait
movsb
jl
mov
cmp
and
adc
pushf
hlt
mov
sub
mov
aaa
xchg
roll
mov
cli
sub
add
push
mov
fisubs
hlt
add
in
and
bound
in
out
into
mov
xchg
adc
xor
sbb
testl
mov
out
arpl
jg
out
in
mov
jle
cmp
es
push
gs
out
imul
pushf
and
mov
sbb
mov
pop
sub
fnstsw
jp
xlat
popf
es
push
inc
push
enter
in
jge
mov
jns
sub
and
sub
out
shl
jl,pt
xor
rcrl
shrl
rcr
into
cli
sub
jb
fldl
sbb
or
push
or
xor
loopnew
sub
sub
in
xlat
aam
rcll
jle
test
add
addr16
dec
xchg
pusha
lret
aaa
and
int
mov
jbe
cli
sahf
lret
scas
mov
jp
push
push
pop
xchg
inc
jb
addr16
repz
pop
mov
pop
ret
jl
stc
jno
out
sti
xor
jnp
sub
dec
daa
or
fwait
mov
into
dec
and
mov
inc
push
incb
sub
sahf
push
cltd
ds
aaa
stos
pop
jno
pop
mov
push
ja
outsl
fsubrs
ss
aam
mov
mov
arpl
mov
adc
pop
repz
loop
outsb
pop
inc
xchg
pop
mov
inc
cmp
jbe
sub
add
dec
mov
xor
pop
sub
adc
pusha
xchg
mov
xchg
out
cs
roll
pushf
mov
cs
movsb
or
cmp
sbb
leave
sbb
aas
sbb
xor
es
cmp
mov
gs
mov
in
test
fwait
push
test
xchg
jns
cmp
lret
mov
xor
outsl
data16
arpl
call
mov
sub
adc
xchg
pop
adc
jmp
scas
push
leave
jb
inc
popa
sbb
sbb
decl
lods
loopne
ljmp
sahf
dec
adc
mov
push
out
dec
pop
repnz
in
mov
lret
pushf
in
cmp
jg
hlt
testb
xor
jae
cmp
cli
inc
lods
repz
les
and
insb
adc
std
rcl
call
mov
inc
test
cmp
cmc
mov
xchg
dec
cvtps2pi
sbb
xor
stos
pop
pop
mov
and
push
xchg
lods
dec
xchg
in
pop
jg
jle
fsubrl
dec
scas
notl
lock
mov
int
ds
cli
cmpsb
cwtl
scas
sub
dec
insl
add
cmpsl
cltd
or
js
mov
std
hlt
mov
std
and
or
jp
or
mov
or
lods
pushl
outsb
ljmp
es
mov
lods
out
fwait
jne
add
leave
cmp
aam
jbe
and
and
add
mov
shrb
push
xchg
xchg
pop
xor
hlt
pusha
shll
sub
inc
ret
arpl
scas
or
ss
xorl
mov
mov
xchg
sbb
xorb
loopne
cmp
pop
adc
inc
jae
into
fcompp
push
push
frstor
xchg
pop
xchg
cltd
orb
inc
es
cmpb
cmp
mov
faddl
inc
ret
rol
stc
negb
mov
jl
and
dec
call
stos
or
xlat
push
test
ds
push
jo
insb
imul
inc
push
cli
inc
das
mov
push
or
fcmovu
addl
jecxz
jno
pop
fs
ja
jg
aas
ret
bound
lahf
sbb
cmp
pop
daa
and
in
hlt
jg
bound
hlt
out
pop
and
inc
jmp
push
and
mov
jge
xchg
test
jg
fstp
push
cmpsb
repz
inc
lret
mov
xor
jbe
pop
pop
aad
mov
mov
mov
or
xor
sti
push
sub
fistpll
sub
push
push
inc
push
repz
mov
jns
jbe
daa
and
call
jns
shrl
sub
adc
subb
xchg
mov
ror
lds
dec
cmp
jecxz
adc
fnstsw
lods
aam
cmp
xor
fisubl
cld
mov
jp
scas
mov
xor
pusha
call
and
in
mov
ret
cmp
lret
cwtl
clc
testl
std
sbb
inc
ficomps
pop
push
xchg
out
pop
ret
clc
std
sbb
scas
and
mov
aad
in
sub
outsb
or
inc
cmpsb
es
adc
fildll
lods
sbb
or
pop
jg
lds
fnstenv
fildl
dec
out
mov
dec
sbb
sahf
loopne
fcoml
or
cs
and
shl
push
jmp
cld
sub
rorb
xchg
aaa
fimuls
and
inc
fadds
mov
sbb
data16
inc
lock
and
cmpsb
dec
push
hlt
rolb
es
outsl
das
aas
cmpsb
ds
inc
sub
cmc
mov
push
pop
mov
jb
add
stos
fwait
imul
or
pop
xor
push
push
jne
loopne
inc
push
sbb
pop
cmp
lcall
ret
mov
in
ja
xor
stc
data16
adc
inc
dec
push
mov
fisubrl
cmpsl
mov
mov
and
and
stc
ret
xor
adc
and
mov
sub
inc
fldl
push
push
cmpl
in
adc
pop
mov
ljmp
inc
out
push
and
mov
fwait
lds
jne
cmp
ja
sbb
out
aad
push
addr16
pop
jecxz
nop
cmp
dec
and
add
pop
daa
adc
jb
dec
ja
movsl
xchg
push
or
in
or
in
or
lret
psllq
faddl
xchg
sub
scas
stos
xchg
repz
fs
loope
inc
push
xor
mov
stos
jmp
ret
lahf
insb
clc
sbb
popl
xlat
add
push
fldenv
sbb
push
pop
mov
add
jg
sbbb
js
cs
out
push
sbb
mov
loopne
jl
add
mov
pop
dec
into
lock
fcoml
mov
rclb
sub
mov
cwtl
fwait
and
pop
mov
xlat
or
outsl
std
xor
int
inc
mov
lret
jne
jne
mov
aam
andb
fsubs
aaa
sbb
xor
sub
repnz
xchg
scas
loop
leave
rclb
or
cli
push
fadds
cli
scas
xchg
loop
push
jno
lret
jb
ficompl
lds
mov
sarb
fs
and
mov
jnp
push
insl
ret
jns
test
push
daa
icebp
fiaddl
pop
pop
sbb
dec
cmpsl
outsb
sahf
jne
out
xchg
enter
fildll
in
jbe
leave
jae
add
pop
je
faddl
push
xchg
rol
xchg
lret
lods
xor
pop
stos
jae
adc
lock
push
icebp
add
cwtl
lods
pushf
lret
jne
xchg
scas
inc
icebp
fidivrl
out
mov
popf
mov
test
lcall
or
push
xor
push
in
lods
stos
repz
mov
xor
inc
imul
xchg
leave
and
cmp
repz
adc
shll
xchg
mov
and
dec
test
add
cmp
loop
jp
cmp
jnp
push
lods
shrb
cwtl
sub
int3
pop
repz
pop
jb
ss
mov
add
int
lret
push
pop
lods
pop
daa
sbb
insb
cmpsb
test
nop
jecxz
call
cmpsb
adc
hlt
pop
dec
xchg
ret
cmp
dec
dec
cwtl
je
mov
imul
mov
leave
add
mov
sub
mov
adcl
xor
inc
xor
lret
call
push
in
push
orb
pop
pop
adc
mov
push
push
in
sti
push
arpl
daa
imul
enterw
repnz
mulb
dec
test
mov
ret
adc
push
or
jno
sub
and
push
or
pushf
imul
or
cwtl
mov
pop
dec
xor
cmpsl
fstps
enter
dec
insb
sub
outsb
ljmp
mov
sub
int
pop
repz
push
hlt
push
incl
or
sbb
inc
xlat
sub
lea
shrb
rolb
dec
int
daa
addr16
jnp
mov
cmp
adc
nop
fdiv
add
push
xor
pop
pop
mov
jnp
cs
imul
mov
mov
hlt
mov
loop
je,pn
sbb
inc
nop
insb
xor
jbe
add
jmp
stos
test
shrl
insb
fsub
sbb
push
dec
fimuls
fsub
jno
xor
dec
jnp
dec
pop
dec
repnz
movsl
shl
dec
das
jmp
jg
pop
add
shlb
dec
dec
dec
cld
push
xor
arpl
rcl
outsl
sbb
repnz
fldl
pusha
lret
add
bound
cmp
xor
loop
cltd
lcall
lea
pop
mov
lods
xchg
jle
lcall
fnsave
or
jae
hlt
adc
in
test
lods
das
cwtl
mov
daa
jp
jno
mov
cmp
jno
mov
jne
pop
fcomi
out
cmpsb
push
inc
xor
lret
sub
imul
cmp
xchg
out
repnz
pop
push
jnp
cmpsb
fidivrs
fistpl
dec
dec
out
inc
int
ja
dec
push
sub
ret
cmp
cmp
pop
pop
test
push
shll
shlb
push
adc
mov
cmp
or
add
cmpsb
xchg
adc
ret
xchg
mov
adc
sub
push
mov
lahf
lret
lods
sbb
imul
dec
mov
or
add
mov
in
pop
xlat
scas
push
lock
fwait
movsl
cld
mov
rcrl
movsl
icebp
sbb
pushf
insl
test
sti
ret
jecxz
adc
dec
insl
fadd
jecxz
orl
lods
nop
xor
bnd
add
mov
jbe,pn
imul
lods
push
in
clc
mov
push
mov
dec
push
pop
sahf
icebp
pop
pushf
jns
jno
cmc
cmc
xor
xchg
sbb
and
ficoms
mov
inc
imulb
dec
push
popf
mov
scas
fcmovnbe
sbb
mov
cmpsl
lods
mov
clc
je
inc
add
xchg
ss
shll
test
aam
mov
inc
jnp
adc
lcall
popf
shll
add
add
add
test
dec
adc
out
mov
outsb
and
mov
stos
adc
dec
out
int
lds
aad
test
and
int3
inc
imul
sbb
lods
add
icebp
adc
cmpsb
test
dec
and
bound
sahf
repz
bound
mov
jmp
pop
cmpsb
mov
loopne
mov
fcmovnu
into
sbb
lods
icebp
nop
aad
lock
loop
mov
je
add
add
ds
mov
sub
xchg
xchg
test
and
push
jecxz
ljmp
cmp
inc
iret
xchg
mov
dec
cwtl
lods
cmpsb
dec
cmp
ret
lret
aam
dec
add
push
sahf
adc
les
mov
inc
dec
dec
mov
loope
stos
movsb
mov
popa
jl
subl
jne
push
out
stc
add
sahf
aas
pop
and
int3
ja
daa
popf
adc
push
std
jmp
aaa
jno
inc
incl
xchg
orl
xlat
dec
mov
push
fsubrs
mov
jbe
mov
sti
mov
and
cs
fdivrl
aad
adc
in
lds
xchg
into
in
add
fiaddl
outsl
mov
repz
xlat
mov
mov
cmp
rorl
mov
push
scas
lret
cmp
jp
arpl
cmp
mov
scas
and
adc
jp
cmp
mov
add
cld
pop
sub
scas
xor
push
pop
pop
aam
jns
xorb
and
or
xchg
and
mov
sub
push
sbb
cmp
inc
pop
mov
nop
daa
ret
push
sbb
mov
jbe
inc
xor
nop
lret
outsl
mov
or
xchg
push
sahf
mov
and
lods
dec
pop
jns
bound
mov
push
out
lret
jbe
stos
sbb
mov
push
in
sti
loope
lds
sarb
in
xchg
lock
cmp
dec
jns
pop
inc
int3
lret
mov
cmpsb
and
push
xor
mov
add
mov
adc
imull
lret
cmp
pop
stc
xchg
sub
movsl
popa
push
sbb
fidivrl
js
push
dec
icebp
mov
dec
push
test
jne
pop
pop
pusha
imul
ret
or
inc
jns
cmpsb
loope,pn
stos
sbb
dec
pop
sub
pop
cmc
sti
adc
or
mov
imulb
mov
out
inc
or
test
stc
push
test
mov
in
lea
std
jecxz
in
jge
sbb
mov
cwtl
mov
push
sbbb
jns
in
and
push
je
push
fucom
xor
inc
lahf
fsubrs
inc
xchg
sbb
out
lahf
push
imulb
cmp
xchg
lcall
fcomps
push
loop
adc
inc
or
mov
pop
aam
fcomp
jb
sbb
add
mov
jnp
into
xor
imul
std
push
xchg
dec
cmp
outsl
div
sbb
in
into
cmp
cmp
xchg
add
xchg
xor
lods
pop
xchg
les
dec
mov
pop
aam
rorb
scas
mov
mov
in
pop
les
popa
orl
lock
push
leave
pushf
scas
notb
push
lock
aam
mov
js
sbb
jbe
add
repnz
stos
mov
lds
sbb
cmpsl
ja
jmp
test
add
jg,pn
xor
fimuls
fptan
addr16
std
xchg
sub
das
sbb
sub
mov
jl
xorb
jmp
mov
stos
push
fxch
pop
sbb
scas
cld
in
bound
aam
nop
inc
xchg
or
lock
fcmovb
fistpl
ret
mov
jmp
push
push
xchg
outsb
xor
pusha
inc
ljmp
data16
lret
shl
dec
mov
fldenv
shrb
and
outsl
or
dec
mov
es
cld
lret
outsl
mov
push
xchg
xchg
inc
mov
imull
je
push
movsb
or
shll
jge
jne
out
inc
imul
push
in
fwait
adc
lret
mov
outsl
adc
rclb
mov
cmpsb
cli
inc
mov
sub
insb
mov
mov
repnz
and
pop
jo
in
in
clc
movsb
sub
mov
imull
push
arpl
ficoml
jns
add
pop
inc
sahf
add
subb
or
stos
out
dec
and
mov
in
popf
testl
sar
mov
push
or
mov
push
mov
loopne
cmp
push
imul
lret
inc
dec
cmp
in
cmp
xchg
icebp
mov
stos
jb
xchg
mov
lahf
test
pop
cmp
mov
pop
mov
fbstp
jp
dec
jno,pn
imul
ljmp
dec
test
pop
mov
sub
jmp
int
pop
or
and
ja
int
push
push
mov
sub
xchg
dec
mov
jle
add
cs
ds
jae
ds
mov
icebp
dec
sub
test
sti
repnz
rcll
push
xor
loope
dec
jmp
hlt
and
jge
in
stos
mov
ret
or
shlb
or
dec
fs
xor
push
adc
mov
imul
mov
inc
adc
mov
fdivrs
std
insb
xor
fcoml
mov
cmpsb
leave
dec
in
add
pop
pusha
cwtl
xchg
outsb
test
or
aas
cltd
in
aaa
pop
adc
int
in
sahf
enter
jb
outsb
sub
addr16
out
xchg
inc
xor
mov
or
loopne
repz
rclb
pop
jbe
clc
dec
js
sbb
repnz
xchg
addb
lods
jns
fbld
and
lock
mov
fcompl
rcll
cmpsl
pop
adc
sarl
rorb
fidivs
sti
cmpsl
cli
add
mov
xchg
dec
mov
pusha
test
leave
dec
cmp
push
insb
push
xchg
cmp
rcl
or
pop
stc
cltd
cltd
mov
lahf
dec
or
pcmpeqd
cmp
rcrl
lret
mov
mov
in
fldcw
jbe
insl
ljmp
or
adc
ret
lds
mov
notb
out
repz
add
sbb
out
push
xor
pop
enter
add
nop
enter
fildll
scas
sub
leave
fcoms
add
xor
int3
jmp
and
fidivrl
adc
mov
imul
movsl
clc
test
adc
stos
mov
sub
mov
in
fyl2x
gs
mov
and
push
and
jbe
and
xchg
sti
testl
jae
dec
flds
jge
jns
or
aad
js
mov
dec
ljmp
bound
insb
xchg
adc
push
jne
rcr
imull
jle
mov
aam
mov
mov
sbb
loop
imul
int3
fistpl
xor
jmp
pushf
dec
stc
testl
push
out
ds
fcmovnb
pop
pop
mov
jmp
mov
lock
and
adc
es
mov
lea
jg
insb
dec
out
jecxz
in
push
cmc
sbb
ret
fldenv
test
orl
into
fnstenv
cmp
mov
push
cltd
pop
divl
pop
scas
push
outsl
clc
cmc
mov
pusha
sbb
jl
inc
addr16
inc
jl
sub
stos
xchg
adc
repnz
mov
and
out
xchg
mov
adc
dec
sbb
jno
jle
nop
inc
mov
sbb
dec
jecxz
mov
movsl
inc
mov
sub
jbe
and
popf
jo
loopne
imul
or
fstpt
adc
xchg
add
outsb
fidivl
push
inc
dec
hlt
int
inc
rcrb
fidivs
inc
sub
xlat
jge
lahf
imul
aaa
pop
adc
loope
cmp
aam
dec
loope
sub
add
sbb
pop
jo
xchg
dec
and
fcoms
lret
inc
add
jae
in
lds
or
loope
daa
push
cli
or
lret
test
out
dec
hlt
imul
and
ret
shll
enter
lret
and
xchg
xlat
movsl
sbb
repz
or
pop
popa
pop
mov
push
scas
push
jb
sbb
adc
lret
cmc
cmp
sub
jg
jnp
inc
xchg
sub
scas
imul
ret
repnz
lret
dec
pop
lcall
adc
aam
ss
mov
ret
testb
jg
sbb
jb
imul
movsl
sbb
push
fs
nop
xchg
movsb
push
out
pop
cmp
xchg
push
out
xor
mov
mov
arpl
dec
mov
mov
js
cmpsb
sbb
stos
icebp
aaa
pushf
in
xchg
cltd
lahf
dec
scas
mov
cli
push
push
mov
push
jge
mov
xchg
adc
shlb
fmull
repnz
popf
daa
cmp
pop
cmp
imul
test
jle
in
mov
loope
scas
int3
ss
jecxz
cmp
shrb
aaa
loopne
sbb
pop
daa
jge
cltd
pusha
call
xor
xchg
nop
in
daa
adcb
push
lea
jno
pop
imul
mov
popa
ljmp
call
sub
xchg
sub
mov
pop
popf
mov
cmp
fdivs
imul
lock
mov
movsb
and
mov
loopne
lar
lahf
sbb
out
jns
sub
adc
test
outsl
and
sub
out
xchg
jecxz,pt
xorb
fnstenv
push
sub
fdiv
push
push
mov
cmpsb
sbb
push
inc
xchg
dec
ljmp
mov
pop
cld
xor
scas
pop
adc
jno
xchg
cmp
pop
push
sub
lahf
cmp
jae
jae
cmp
mov
jo
push
jb
sti
ss
lahf
in
pop
dec
shll
frstor
inc
or
loop
cli
sub
fcomip
jb
push
xchg
aam
sbb
lahf
pop
dec
jge
inc
pusha
mov
fyl2x
ss
jmp
mov
mov
es
int
jbe
adc
jb
adc
mov
dec
dec
wbinvd
adc
xor
rcrl
adc
js
dec
loope
scas
data16
push
lcall
jg
loope
pop
xchg
fistps
fldenv
pop
fdivs
in
push
mov
fstpt
mov
push
mov
jae
popf
jnp
cmp
jecxz
xchg
and
mov
and
aaa
icebp
fcomps
jno
add
ss
cmp
dec
inc
nop
lock
fistpl
mov
pop
lea
jle
push
lods
xor
stos
in
mov
lahf
imull
orl
inc
movsl
fcoml
cmp
mov
fdivrl
pusha
inc
dec
test
push
lret
jl
mov
mov
repz
mov
movsb
adc
mov
inc
fnsave
jnp
pop
lcall
lcall
xor
rcrb
push
addl
push
or
lock
jl
rorb
sbb
cmc
daa
dec
fsub
sub
outsb
sbb
shl
xchg
push
lds
dec
bound
mov
mov
loopne
jmp
mov
out
push
loop
scas
sbb
pop
outsl
inc
xor
or
inc
fsubr
in
nop
mov
or
pop
sub
mov
cld
imul
jns
xor
dec
ljmp
pushf
sbb
mov
adc
mov
lea
mov
lahf
jnp
jle
mov
in
jnp
arpl
ret
je
cmp
into
or
push
dec
shl
push
nop
testb
jns
mov
push
insl
mov
sbb
sbb
inc
xchg
push
les
push
sti
fs
mov
fwait
popa
inc
les
ss
sbb
adc
cmp
loope
mov
push
imul
and
loop
ret
cwtl
jmp
push
rcrl
mov
jns
add
add
add
sub
leave
inc
sarl
dec
jne
sbb
add
jmp
scas
loopne
xchg
mov
popa
xor
mov
iret
leave
jmp
add
dec
fstpl
data16
lods
lahf
mov
jge
pop
outsb
stc
or
cmp
lock
rolb
test
push
xchg
lahf
lret
lahf
adc
stos
nop
add
mov
in
sahf
movsl
out
pop
mov
ss
jl
mull
mov
or
cli
jg
or
jmp
and
imul
ds
pop
mov
and
push
push
push
jmp
jp
and
das
cmp
adc
add
xchg
mov
xor
imul
inc
dec
repz
jbe
clc
pusha
test
dec
lcall
sub
sbb
scas
lods
jbe
shlb
out
jb
loop
call
bound
xchg
cwtl
pusha
jge
cmp
mov
imul
pop
imul
sub
inc
cmp
mov
pusha
test
cmp
cld
fwait
sbb
cmpsb
jae
sub
dec
or
imul
xchg
popf
xchg
sub
int
int
mov
fidivrl
bound
mov
scas
call
fidivrl
ljmp
or
adc
rol
int
int3
aam
sbb
xor
push
jno
stos
and
xlat
mov
data16
stc
pop
mov
int3
inc
lock
pusha
and
jge
icebp
clc
es
xchg
insl
push
test
jmp
jmp
shlb
adc
data16
xor
jae
mov
pop
push
outsb
scas
jle
orl
sbb
mov
mov
jnp
jo
mov
ljmp
rcr
add
outsl
sbb
rolb
stc
ljmp
bsr
or
rorl
aaa
sarl
loope
in
inc
inc
das
mov
jp
mov
and
dec
mov
and
std
add
lods
push
cmp
pop
lock
or
push
and
sbb
fildll
or
dec
daa
push
jb
mov
mov
adc
int
sub
testb
pop
adcb
push
fists
int3
adc
fsubrl
cld
popa
adc
andl
push
inc
adc
enter
push
fsts
mov
sub
add
je
sbb
dec
pop
push
push
sbb
xor
enter
movsl
mov
xor
jno
subl
lds
rcrb
push
pop
adc
sbb
inc
out
aas
add
dec
jbe
int3
pop
lret
inc
negl
sbb
mov
add
test
lock
cmc
mov
pop
dec
jno
sbb
push
jns
inc
cmpsl
addl
inc
das
mov
cmc
lcall
push
outsb
mov
and
and
add
stos
dec
lcall
shll
or
inc
data16
add
xor
adc
out
dec
adc
jmp
jmp
mov
test
scas
mov
cltd
andb
dec
mov
gs
mov
jg
loope
outsl
addb
inc
inc
xor
bound
lret
shlb
mov
rorb
add
jg
ret
std
push
movsl
aas
push
push
sbb
mov
mov
call
mov
mov
out
fs
xchg
push
lret
jae
rorl
dec
mov
popf
out
loope
in
push
jp
into
popa
xlat
and
gs
cmp
aaa
xchg
cmp
mov
mull
hlt
fdivp
insb
into
fbstp
incb
jle
dec
hlt
xchg
in
dec
out
das
fiadds
repnz
add
adc
fimull
mov
push
pop
cmc
hlt
push
mov
aas
pushf
push
sbb
ds
outsl
clc
inc
jb
jge
jns
jl
fstpt
inc
mov
aam
and
int3
sahf
xor
jae
mov
xchg
std
jnp
imul
sub
lds
test
test
cwtl
jecxz
in
icebp
movl
jecxz
or
add
mov
int
into
insb
adc
jne
pop
lret
xchg
and
fmuls
pop
push
mov
mov
loope
add
adc
mov
ret
jb
xor
outsl
mov
fpatan
push
jg
mov
push
cwtl
inc
cli
push
subb
xchg
pop
push
mov
aad
lds
test
mov
push
enter
adc
fisubrl
hlt
xor
or
in
or
pop
mov
adc
addl
insl
shrl
xchg
sub
out
push
lcall
push
add
nop
sbb
lret
jle
das
in
dec
hlt
cli
mov
faddp
adc
jmp
dec
dec
scas
fld
repnz
mov
fs
xchg
and
sub
add
add
add
inc
mov
add
or
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
