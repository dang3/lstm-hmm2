push
test
stc
sbb
sub
inc
cwtl
inc
dec
inc
fcmove
jo
sbb
out
xor
inc
stos
sub
dec
int3
sbb
push
in
mov
cmpsb
mov
cld
push
jle
dec
enter
jnp
testl
xchg
fdivs
add
add
jmp
ja
pop
xchg
or
jns
mov
adc
push
leave
add
dec
rorb
sarl
push
sti
test
lea
jnp
xchg
sub
inc
push
int
sbb
add
mov
push
xchg
sbb
xchg
pop
xchg
cmp
bound
lcall
push
or
mov
sbb
daa
adc
or
scas
lret
inc
iret
fs
rcrl
out
inc
stos
mov
aaa
or
mov
jnp
mov
les
xchg
or
sbb
mov
jo
sbb
push
sbb
std
into
jns
in
ffree
sub
ja
movsb
iret
in
xor
in
jns
sub
shrl
mov
xchg
mov
popf
or
loop
rorl
rcrb
xor
adc
pop
xchg
sar
pop
je
pop
ret
aam
insl
xchg
ret
mov
fisttpll
neg
cmp
or
test
icebp
aad
jnp
cmc
and
notl
inc
xchg
add
pop
push
subb
test
cmpsl
addr16
cld
xchg
mov
andb
lahf
fs
and
xor
mov
icebp
das
faddl
in
add
cmc
cli
and
out
or
lret
add
pop
scas
das
mov
mov
repnz
aaa
int
mov
and
cs
sti
pop
jg
dec
jecxz
scas
mov
mov
xchg
imul
sbb
mov
xchg
cmc
in
push
or
lea
in
mov
leave
sbb
mov
or
or
adc
adc
sub
das
out
aam
pop
adc
shll
jb
mov
adc
mov
mov
adc
mov
stos
xchg
mov
fldt
cwtl
scas
cmc
push
repnz
mov
pop
mov
sbb
aam
std
stos
test
mov
mov
push
dec
test
adc
dec
lods
push
into
or
mov
push
jo
pushf
clc
repz
add
out
mov
adcb
mov
jmp
imul
fildll
shlb
fisubs
ret
int3
inc
outsl
xor
mov
scas
testl
add
sti
mov
pop
jg
cmc
add
or
and
or
push
outsb
mov
daa
cltd
aas
jl
stos
aam
adc
fisubl
insl
lcall
xchg
test
shll
je
mov
pop
pop
in
inc
jecxz
jnp
out
adc
test
jbe
aam
jle
repnz
out
stc
xchg
or
add
out
push
sti
jle
cli
mov
xor
sbb
push
sahf
cmp
movl
or
addr16
sub
mov
shrd
mov
pop
or
jmp
arpl
xor
xor
call
ja
sti
aad
sub
fisubl
sbb
je
jo
cld
mov
popa
fisttpl
lcall
mov
lock
daa
xchg
dec
xor
mov
mov
mov
xor
mov
fmul
movsb
lret
inc
mov
jmp
add
sub
ds
cmp
and
ret
jg
jge
fs
sti
je
inc
pop
icebp
ret
dec
iret
pop
push
or
aad
pop
sub
dec
data16
pop
adc
sbb
mov
repz
and
fmul
push
xor
sar
jecxz
mov
pushf
push
xchg
sbb
jno,pn
sbb
or
inc
pop
jne
pop
adc
les
jge
jae
xchg
xlat
lahf
icebp
jmp
cmpsl
in
pop
or
les
inc
movaps
adc
lret
xor
cmp
aaa
addb
and
mov
dec
fstpl
cmp
sahf
jp
out
cmpb
rorl
push
test
arpl
and
int
das
ror
imul
pop
xor
xchg
jmp
imul
mov
mov
outsb
xor
cmpsb
inc
adc
lahf
add
sbb
jbe
adc
gs
mov
adc
dec
add
jb
add
ljmp
xlat
das
dec
fnstenv
incb
xchg
scas
adc
inc
sub
iret
popa
inc
and
sahf
aaa
aam
xor
mov
mov
jns
lods
sbb
andb
adc
mov
push
mov
stc
or
andl
xchg
popf
aas
cmp
repz
iret
es
es
sub
fwait
icebp
cwtl
dec
aaa
repnz
mov
and
das
imul
lcall
xchg
or
mov
ror
rorl
fildll
loopne
dec
inc
iret
lods
jae
and
mov
inc
adc
cmp
into
mov
dec
adc
jle
or
adc
push
mov
or
pop
js
lods
shll
lret
jg
jbe
pop
push
sbb
scas
sub
mov
das
leave
cmp
and
push
clc
xor
jae
push
jo
nop
mov
or
ret
in
push
dec
out
das
int3
repnz
adc
inc
mov
imul
call
mov
iret
sti
mov
ja
pop
adc
pusha
pop
mov
fwait
lods
call
mov
push
inc
insl
imul
test
lods
inc
jle
repnz
add
sub
fmulp
fs
pop
insl
or
push
jle
dec
push
addr16
or
lahf
cmpsb
mov
sar
mov
roll
clc
out
int3
addr16
push
xchg
jb
mov
repz
fiadds
frstor
xchg
push
lock
sarb
mov
ret
push
adc
add
mov
insb
push
icebp
aad
or
xor
pop
adc
pop
and
int
lahf
int
mov
push
cmp
lar
add
jbe
stc
cltd
push
cmp
mov
lcall
mov
sbb
cmp
stc
add
xchg
sbb
jns
pop
subb
sbb
lret
adc
or
or
out
stos
cmpsl
xor
jno
sbb
mov
daa
iret
repnz
push
in
or
or
pop
cmp
mov
and
shlb
test
inc
dec
dec
in
out
fwait
mov
std
cmp
cmovo
xchg
adc
data16
add
xchg
jno
subps
iret
xchg
add
push
lock
or
push
out
out
lock
popf
and
stc
xchg
popf
add
jge
dec
sbb
das
test
sahf
mov
insl
fmull
mov
xchg
mov
fdivs
add
dec
or
pop
inc
or
outsl
sub
xchg
neg
push
add
out
lods
in
clc
pop
pop
mov
test
orb
fadd
mov
xchg
mov
adc
daa
cmp
repnz
call
cmpsl
xor
inc
mov
sub
xchg
fmul
movsb
jo
lret
stos
and
movsl
mov
mov
add
xchg
xchg
flds
in
inc
inc
fsubl
repnz
stos
loope
fimuls
test
pushw
or
and
inc
cltd
fimull
inc
mov
dec
movsb
into
scas
xor
add
push
repz
inc
mov
push
incl
lea
push
jae
fs
mov
shll
out
ds
sub
xchg
stos
dec
call
pop
lahf
loopne
add
mov
std
cmp
test
mov
cmp
cli
lcall
ja
sbb
in
adc
dec
decl
repnz
fildl
cmp
out
mov
and
push
repnz
inc
mov
lods
into
xchg
or
mov
pop
or
mov
in
rolb
int3
pop
rorb
repnz
js
and
ret
lret
mov
je
fs
xorl
dec
fistpl
cmp
xor
pop
xor
ss
add
sub
std
sbb
aam
lret
push
clc
add
xorl
imul
arpl
lcall
lods
xor
js
or
push
mov
mov
loope
in
stc
xlat
and
sbb
mov
jge
mov
xchg
mov
pop
ljmp
sub
xor
scas
daa
fnstenv
jge
in
jg
mov
cmp
lods
push
xor
add
push
push
div
lock
out
rorl
cmp
jle
inc
sbb
loope
push
fldt
pop
loop
shrl
and
adc
push
pusha
je
pusha
mov
iret
adc
xor
nop
xchg
movsb
ficomps
xlat
adc
movsb
jmp
cs
in
int
jo
imul
dec
pop
or
mov
mov
shr
jecxz
stc
std
loop
push
inc
inc
mov
jg
add
gs
cli
adc
xchg
push
loope
iret
sub
adc
push
mov
jns
push
mov
lods
inc
test
pop
sar
xchg
ret
sub
je
or
xchg
cli
or
mov
or
jne
ud2
sahf
insl
repnz
mov
dec
cmp
lcall
jmp
sub
jno
sub
inc
lods
xor
adc
xchg
push
jp
push
mov
sbb
enter
jns,pn
lret
aam
inc
jmp
or
xor
sbb
mov
imull
pop
sub
movsl
mov
and
insl
add
jecxz
out
mov
pop
sbb
cmpsb
sarb
outsb
frstor
or
xchg
pusha
out
jbe
pop
push
clc
ret
arpl
es
fwait
xchg
jp
fildll
ja
inc
jl
pop
gs
arpl
or
ret
imul
cmp
pop
mov
stos
ficoml
ror
loopne
daa
ret
out
scas
xor
cmp
loopne
or
sbbb
xor
addr16
cmp
sub
add
xor
pop
pushl
jl
jae
sub
roll
cmp
dec
cwtl
dec
daa
pushf
cmp
js
nop
gs
adc
stos
lahf
mov
movsb
out
mov
cmpsb
js
mov
in
xor
pop
fldl
and
and
xchg
outsl
pop
and
add
pop
clc
mov
and
push
fwait
dec
enter
in
push
jae
in
jecxz
ret
in
pop
stos
add
add
dec
push
mov
mov
mov
pop
mov
mov
jp
cmpsl
lods
das
cmp
xchg
xchg
jl
cli
cmpsl
xor
push
repnz
jnp
fwait
xchg
in
sub
sub
pushf
jg
test
adcl
sbb
fisubrs
dec
adc
push
outsl
pop
fstpl
rclb
into
dec
mov
mull
mov
scas
sub
mov
mov
popa
dec
cmp
pushf
lods
cmp
push
mov
add
mov
sbb
mov
cmp
or
cld
mov
imul
or
inc
adc
xchg
adc
jmp
repz
cmpsl
rclb
pop
pop
ret
xor
add
cmp
outsb
pop
jl
xor
jae
mov
adc
mov
daa
lods
cmp
mov
roll
mov
mov
imull
in
dec
mov
or
loopne
jne
fwait
decb
add
xchg
adc
int3
xchg
sbb
pop
push
repz
inc
mov
loopne
ds
and
mov
rol
mov
dec
and
notl
movntq
mov
mov
scas
jns
dec
adc
jne
add
pusha
cmp
subb
aam
add
scas
aam
sub
cmp
xchg
push
cmpb
test
sbb
dec
mov
data16
popa
lds
arpl
push
mov
xor
idivb
imul
dec
sarb
sbb
movsb
pusha
mov
inc
jne
mov
dec
mov
das
ret
aam
nop
das
xchg
nop
insl
pop
xor
mov
movsl
mov
xorb
dec
lods
arpl
mov
sub
cmp
push
xor
mov
mov
jns,pt
push
mov
mov
mov
lahf
pop
lret
xchg
movsb
das
jo
data16
cltd
cld
sti
addr16
clc
mov
outsb
inc
adc
jbe
dec
imul
xor
xor
inc
inc
jno
fidivl
pop
lock
dec
jmp
adcb
xchg
cmp
ret
aaa
sub
shll
dec
rol
mov
jo
add
jae
jmp
loope
leave
lods
pop
bound
xor
add
adc
and
push
ret
mov
imul
jne
stos
mov
repnz
out
mov
xchg
fbld
or
mov
hlt
cmp
adc
int
mov
or
xor
sub
jae
pop
clc
mov
outsl
ret
fs
and
les
in
mov
pusha
out
sub
stc
dec
add
aam
inc
mov
insb
pusha
mov
push
fisttpl
cltd
outsl
add
lock
xchg
jmp
out
and
and
fwait
mov
mulb
sahf
nop
pop
and
jl
xchg
or
or
cmp
cmp
cli
por
or
arpl
in
xchg
or
pop
movsb
cltd
and
or
fisubrs
test
jmp
mov
pop
in
sbb
jb
push
jb
test
and
push
fidivrs
xchg
mov
mov
rorb
gs
mov
pop
gs
in
or
sub
inc
sbb
test
mov
sbb
jp
jb
pop
ds
cltd
dec
addl
and
andb
pushf
lret
pusha
xchg
aaa
push
nop
mov
hlt
sbb
movsb
in
sbb
cs
mov
adc
dec
xor
or
scas
mov
or
pop
mov
mov
hlt
insl
dec
pop
shrl
es
fisubrl
xchg
insl
jmp
cmpb
xchg
stos
stc
lret
dec
fimull
and
pop
pop
cmpl
movsb
sbb
outsb
lea
dec
mov
jae
in
cmp
aad
push
and
mov
mov
adc
popa
fistpl
inc
xchg
test
lods
mov
inc
xchg
jp
fistps
jge
rcrb
sti
xchg
sub
xor
mov
in
outsl
lahf
sub
inc
push
fbstp
mov
adc
outsb
aam
mov
push
mov
in
push
add
out
push
sbb
lock
inc
or
mov
fisubrs
popf
lret
jge
movsl
popf
pop
cltd
mov
es
sub
push
lock
sbb
ja
addr16
ret
pop
and
inc
xor
sub
test
aam
fs
les
pop
jns
mov
adc
mov
push
add
fiaddl
in
mov
aaa
pop
xor
add
imul
jae
xor
add
orb
jns
mov
test
cmp
rol
sbb
or
xor
or
aas
or
add
ss
sbb
sub
rcrb
mov
in
pop
hlt
cltd
stc
ss
in
hlt
mov
sbbl
in
fcoml
mov
frstor
scas
pop
insl
fildll
or
adc
leave
movsb
flds
mov
adc
rcll
cld
xlat
shl
adc
movsl
adc
mov
arpl
dec
jecxz
loopne
mov
mov
cmpsl
mov
cltd
inc
add
dec
test
cmp
inc
or
cmpsl
sbb
jae
and
or
sarb
cmp
push
pop
xchg
mov
jmp
xchg
mov
xor
arpl
stc
mov
movsl
in
movsb
jne
adc
sbb
adc
test
inc
xor
and
cmp
test
jne
imul
xchg
adc
adc
xchg
imul
mov
lods
orb
jne
lret
mov
sbbl
push
shl
in
in
roll
push
inc
jg
sub
mov
inc
into
les
out
orb
outsl
and
loopne
pop
mov
sbb
pop
iret
mov
add
cmp
test
mov
jl
ljmp
push
lret
leave
xchg
sub
outsl
mov
mov
and
imul
lea
mov
jnp
add
imul
leave
push
mov
popf
mov
mov
jg
and
arpl
dec
cs
nop
mov
int
mov
mov
pop
mov
or
mov
fs
repz
cld
movsb
mov
imul
push
adc
pop
in
dec
cmp
daa
stc
aaa
je
out
js
cmpb
stc
cmp
or
insl
push
sub
aam
jb
sahf
adc
or
sbb
test
jge
stos
shrb
inc
jnp
pop
or
mov
jmp
xchg
push
movsl
mov
mov
lds
jb
mov
xor
mov
dec
mov
jne
scas
cwtl
jl
add
mov
dec
jmp
mov
adc
lret
aam
adc
out
or
fldenv
iret
out
mov
mov
jbe
popa
out
not
pop
inc
arpl
sahf
push
daa
loop
lret
movsb
inc
cld
dec
add
xor
xor
sbb
push
cmpsl
cmp
xchg
aad
xchg
gs
inc
push
inc
mov
iret
jnp
adc
mov
fsts
jmp
pop
adc
cmpsl
pop
xchg
call
adc
jmp
mov
or
adc
lods
inc
mov
xchg
xlat
inc
iret
pop
xlat
mov
and
data16
ljmp
std
lds
and
mov
and
pop
dec
mov
fildl
lods
sti
inc
xchg
adc
in
loopne
lock
jle
mov
xchg
mov
cmpsb
stos
in
xor
push
pop
dec
push
inc
fstpt
int
neg
je
cli
iret
add
adc
jge
ret
sbbb
pop
ds
andl
xchg
hlt
imul
fsubs
jge
stos
lock
dec
pop
fistps
adc
or
and
xchg
mov
sub
add
loope
mov
in
out
and
out
or
in
cmp
inc
test
lret
xchg
pop
sbb
call
cmp
cmc
out
fsub
pop
sete
aaa
push
dec
xor
push
push
jmp
call
cld
leave
push
out
cmc
sbbl
out
xchg
je
jae
mov
repnz
in
cwtl
pop
pushf
js
in
out
movsb
jno
xor
mov
fwait
call
cmp
mov
cmpsl
les
mov
stos
mov
aaa
mov
xor
cld
cmp
movlps
bndldx
or
xlat
xchg
and
xor
jae
push
pop
lret
cli
adc
lods
xchg
shrl
lret
clc
mov
rorl
out
mov
mov
cld
or
rcr
ret
lret
cmp
shlb
mov
insl
fsubl
aas
stos
xor
lahf
fsubr
sbb
pop
outsb
xchg
faddl
mov
fcoml
addr16
ficomps
ret
xchg
pop
push
jmp
mov
pop
cs
popf
into
mov
ret
push
insb
insl
pushaw
enter
add
cmp
leave
mov
fnstcw
and
aam
addb
mov
in
xchg
adc
xchg
rcll
decl
mov
leave
orl
pushf
daa
mov
lret
or
sub
lret
add
mov
and
and
mov
dec
mov
icebp
mov
or
lret
adc
std
icebp
add
ja
mov
xchg
ds
insl
push
rcll
ret
outsb
pop
push
cmc
add
pop
pop
xchg
sbb
mov
pop
or
dec
fimuls
aad
xchg
dec
loope
mov
ds
in
pop
jb
cmp
shlb
lea
iret
or
sub
cmc
clc
xchg
push
and
mov
into
mov
jl
or
mov
adc
leave
hlt
push
xchg
out
idivl
mov
outsl
pop
xchg
or
jb
push
lret
fnsave
cld
test
mov
xlat
mov
pop
mov
in
sub
pushw
jl
ficoml
jl
cs
test
or
mov
add
pop
mov
mov
popf
xchg
test
xor
sbb
xchg
mov
stos
cmpsb
cltd
mov
jmp
mov
pushf
shl
or
cmc
sub
inc
es
sti
sti
pop
xchg
rcll
adc
pusha
cltd
daa
mov
scas
cmp
out
inc
sub
dec
hlt
sub
add
lret
jg
scas
jns
lahf
mov
adcb
mov
cmpsl
mov
xor
sbb
push
mov
imul
scas
lahf
scas
adc
enter
mov
leave
loope
adc
in
js
sub
test
aaa
gs
cmp
sub
fwait
jmp
addl
aaa
mov
xchg
sbb
adcb
imul
outsb
mov
sub
cmp
lret
mov
xchg
outsb
mov
and
xchg
mov
inc
mov
adc
xor
sti
mov
data16
mov
rcl
cld
hlt
push
xor
jbe
and
add
sbb
sbb
das
jae
flds
leave
adcl
jno
inc
adc
adc
push
push
push
mov
xor
and
movl
lods
popl
sub
push
mov
ja
mov
jmp
inc
xchg
out
out
cmc
lock
adc
test
leave
cmp
push
lahf
sbb
scas
inc
lods
jecxz
call
mov
jns
pop
sub
inc
mov
clc
scas
mov
and
mov
lock
add
stc
sti
jle
mov
int
push
cmc
dec
jp
xor
mov
push
repz
mov
adc
mov
push
inc
xor
mov
pop
insl
in
or
cmpsl
pop
fisubrs
test
xchg
xchg
add
jae
xor
xchg
and
jecxz
xor
cs
jg
pop
sbb
push
inc
add
nop
lods
inc
push
cltd
int
fsts
cmpsb
imul
mov
mov
dec
repz
sbb
or
jnp
mov
movsl
popa
shll
test
insl
mov
cmp
push
jecxz
idivb
lds
mov
jmp
xor
iret
xlat
mov
out
xor
jmp
dec
call
and
sti
aam
pusha
ret
lods
pushl
mov
sub
movsl
jno
iret
notl
add
mov
cmpsb
repz
lcall
cmpsb
pop
xchg
rorb
mov
pushl
bound
pop
inc
fisubrl
imul
lcall
imul
mov
xor
sub
mov
shl
sub
repnz
insb
fidivrl
adc
stos
inc
pop
sahf
add
pop
aad
sbb
pop
add
shll
pop
mov
push
leave
and
outsl
pop
out
and
test
jg
inc
shll
test
test
xor
xchg
push
clc
inc
out
cmp
adc
fwait
lock
lods
mov
insl
adc
xor
ror
xadd
into
repz
inc
jle
sarb
arpl
scas
xor
aas
daa
push
repnz
mov
push
pxor
or
pop
jmp
out
fsubs
mov
pop
push
out
popa
and
add
push
addl
sarb
call
jo
mov
frstor
es
shll
mov
scas
arpl
mov
out
sbb
fists
orb
in
lods
lea
dec
in
xor
cld
into
add
les
sbb
stos
push
or
out
adc
adc
es
mov
mov
add
or
test
lahf
inc
cmp
clc
cmp
jb
cwtl
push
sahf
jbe
in
aas
mov
and
outsb
lds
mov
adc
xchg
arpl
ja
stos
andl
out
mov
scas
cmp
jno
sti
push
dec
mov
rcll
js
sub
sub
lahf
push
mov
adc
push
dec
mov
sarb
inc
test
aas
int
xchg
icebp
mov
dec
push
lret
mov
push
sbb
daa
in
cmc
push
cmp
out
xchg
jae
mov
cmp
mov
push
cmp
jb
sbb
pop
int3
ja
bound
mov
push
mov
je
repnz
sti
lods
mov
add
jns
xor
sahf
pusha
sub
sub
sti
insl
and
push
xchg
sub
fnstcw
xchg
and
xchg
or
add
xchg
cmp
push
and
into
jae
and
lods
jp
or
dec
jnp
aam
mov
and
pop
adc
sbb
pop
lret
ja
enter
testl
fists
in
mov
mov
sbb
adc
lock
mov
loopne
mov
push
inc
aam
insb
xor
sub
adc
sub
bound
sub
xor
jnp
cmpsl
sub
push
push
cmp
les
bound
jge
xchg
lods
lea
clc
add
cmc
outsb
dec
dec
xchg
add
push
vmwrite
mov
cmp
push
xchg
mov
xchg
xchg
in
cli
dec
xchg
mov
fdivrs
sahf
imul
adc
andl
shrd
jae
arpl
ret
mov
out
add
mov
and
fdivs
jae
loope
xor
test
xor
or
mov
inc
aas
mov
mov
pop
push
add
push
cmpsl
mov
imul
cmp
jbe
xor
cld
rol
sbb
lock
jns
sbb
out
addr16
push
pop
sbb
push
xchg
ss
cmp
aad
rcrb
push
out
arpl
mov
icebp
rorl
call
jmp
pop
enter
ret
jecxz
or
and
dec
inc
cmp
mov
rcll
mov
mov
call
or
fwait
lods
push
in
jmp
arpl
adc
sub
testb
je
xchg
dec
mov
insl
ja
ret
sub
testl
pop
or
aas
and
sarb
add
lahf
scas
add
or
ret
cld
insl
fldt
faddp
test
jmp
mov
js
jle
ja
cmc
cld
xchg
stos
push
lods
or
nop
rol
push
mov
pop
push
cli
ss
lods
cltd
imull
ja
dec
cmpsb
pop
mov
jge
mov
adc
adc
lahf
lret
lds
xor
inc
popf
movsb
fbstp
or
or
cwtl
mov
push
rclb
stos
ss
jns
adc
imul
inc
outsl
movsb
repnz
nop
ss
iret
inc
outsl
addr16
push
fs
lret
cwtl
add
ret
fdivs
mov
xchg
adc
push
adc
in
mov
cmpsb
pop
and
or
sub
push
lock
sarb
stos
jnp
push
sub
rcll
dec
aam
dec
aas
insl
lock
jb
mov
adc
mov
call
add
dec
cmp
cli
das
adc
mov
ret
xor
popa
inc
adc
mov
and
dec
flds
loopne
sbb
rolb
cmp
rcr
dec
mov
mov
and
xchg
ljmp
pop
fldt
push
daa
gs
push
in
fwait
sub
fldt
or
cmp
in
cmp
add
push
mov
lahf
or
mov
loope
pop
lret
lock
xor
sahf
push
inc
out
and
lret
lea
mov
adc
imul
stos
mov
xchg
adc
ljmp
pop
ret
dec
int3
push
sub
dec
sub
out
mov
xorl
mov
mov
test
lods
cmp
add
adc
dec
dec
push
in
jmp
xchg
push
push
fstpl
out
in
inc
mov
inc
mov
rcrl
imul
adc
leave
or
pop
sub
aad
jg
jo
ret
mov
ljmp
into
and
daa
mov
outsl
jns
and
loopne
enter
xorb
mov
out
fldl
enter
scas
cld
outsb
shlb
dec
jnp
or
jbe
inc
mov
mov
sub
out
push
xor
test
js
sbb
jmp
push
or
gs
sub
and
fwait
adc
fsubrs
lea
sbb
add
lock
ja
jp
add
inc
incb
stos
dec
xor
cwtl
subl
mov
in
daa
in
pop
das
mov
push
xchg
mov
inc
clc
arpl
add
or
das
insl
or
cltd
inc
jg
xor
aad
sbb
adc
or
test
xor
sub
adc
dec
xchg
jmp
mov
push
fcomps
test
daa
cs
add
mov
out
xchg
jmp
clc
out
sbb
test
test
mov
test
jg
or
and
xchg
movsl
filds
cmpl
jp
push
mov
mov
and
push
or
xchg
xorb
rcl
mov
clc
scas
or
mov
clc
inc
imul
push
fs
stos
stos
sub
mov
aam
out
fistpl
xchg
push
jnp
jmp
inc
jg
or
lret
or
enter
sbb
scas
std
or
or
add
inc
idivl
and
mov
addr16
mov
mov
mov
mov
push
xchg
daa
lret
mov
scas
jmp
stc
in
aam
mov
or
mov
lret
add
leave
add
sub
decb
adc
fdivrl
pop
cmp
int3
inc
shl
mov
aam
pop
adc
sti
jecxz
sbb
nop
dec
xor
call
dec
mov
mov
or
lahf
mov
daa
sub
subl
adc
lahf
cmc
imul
pop
push
inc
push
sbb
add
mov
push
sbb
inc
mov
movl
mov
pop
xchg
add
xchg
mov
ret
fisttpll
popf
inc
jge
adc
sbbl
jbe
rcl
lock
adcb
jg
gs
test
mov
xor
orb
and
mov
cmp
shlb
out
test
ficoms
ds
jecxz
or
or
loopne
jmp
xchg
jb
je
into
mov
fidivrs
mov
aas
sbb
add
mov
xor
test
pop
inc
pusha
fstl
lret
fdivp
cmp
cmpl
pand
stos
pop
ffreep
mov
out
adc
adc
lds
lods
sti
push
arpl
pop
add
or
in
cltd
mov
ljmp
or
inc
mov
das
decl
jb
rcrb
push
stos
rcl
xchg
xchg
insl
xchg
xchg
inc
in
xor
dec
pop
clc
mov
adc
aas
ja
rol
test
mov
cld
movsb
popf
fnsave
and
cld
out
sti
iret
xchg
ret
mov
adc
jle
xchg
inc
sub
clc
pop
aas
or
fsubrs
dec
pop
movsl
fs
and
xor
pop
mov
xor
mov
lods
xchg
fsubrs
push
xchg
push
adc
and
and
shl
sub
lea
or
cmp
out
pop
mov
adc
lds
and
mov
lea
xchg
loop
adc
or
mov
subl
and
icebp
xor
repz
inc
sbb
xchg
in
test
and
and
aam
stc
mov
or
or
push
jae
rcl
test
adc
adc
sbb
and
outsl
xchg
adc
cmc
jns
mov
jge
mov
pop
in
mov
sbb
sub
fsts
sub
inc
cmpsl
xor
mov
addb
sub
cmpsl
adc
mov
mov
fdivrl
test
fcmovb
int
movsb
fmull
fwait
in
aaa
shlb
xchg
sti
pop
mov
mov
cwtl
inc
nop
dec
adc
mov
jae
or
movsb
add
sbb
scas
adc
mov
stc
pop
mov
fnstenv
outsb
in
jmp
das
sar
fnstenv
cmp
outsb
xor
push
jl
scas
aam
and
xor
mov
cmp
popf
fsubs
mov
pop
sub
repz
ret
sbb
and
lahf
mov
stc
mov
loope
jp
imul
and
and
enter
stc
fwait
mov
jne
pop
mov
push
adc
jnp
xorl
push
jns
dec
push
lret
out
sub
inc
mov
pop
in
inc
push
xchg
adc
addr16
dec
or
and
or
push
dec
popa
jg
push
mov
inc
xor
sub
fsts
sbb
mov
mov
sti
fwait
adc
fmull
rorb
jae
xchg
aas
montmul
cmpsb
inc
imul
aaa
jge
fidivs
dec
out
lods
xchg
pop
rolb
or
pop
inc
adc
mov
js
or
add
push
les
das
shrb
lock
cmp
insb
mov
loop
push
xchg
xchg
mov
xlat
ja
dec
jo
pop
fists
cmp
push
movups
sbb
cmp
lods
pop
cmp
adc
sub
adc
cmp
sahf
xor
inc
ret
ss
arpl
pop
push
or
add
ljmp
mov
mov
mov
je
sbb
and
es
dec
mov
stos
sub
je
mov
xchg
mov
int3
push
in
xor
mov
sub
out
or
pusha
lods
icebp
adc
dec
sub
cmp
divb
cmp
add
daa
mov
sub
fdivr
popf
xchg
scas
cmpsb
cmp
mov
rol
push
push
pop
lock
mov
test
jp
into
push
mov
mov
stos
call
push
das
std
stc
jne
mov
push
mov
scas
lods
and
pusha
mov
sub
inc
adc
lcall
dec
and
fimull
or
mov
push
mov
adc
lahf
lea
dec
push
jp
mov
inc
outsb
sarb
lea
lods
mov
cli
or
cmp
or
mov
jb
or
pop
sbb
mov
call
cmp
dec
jmp
shlb
test
jbe
sub
pextrw
or
lds
movsl
insl
scas
out
xor
cli
jl
sbb
and
out
nop
adcb
cmp
push
pushl
icebp
add
sub
icebp
adc
movb
je
pusha
mov
clc
xchg
scas
xchg
pop
cmp
mov
mov
jl
out
ret
add
and
lret
fcoml
inc
int3
jmp
inc
jb
idivl
mov
je
das
jle
jae
loopne
fiadds
cmp
out
or
add
scas
int3
pop
fs
mov
lock
jecxz
dec
pop
adc
iret
pop
jb
cli
and
inc
jge
push
push
out
stos
insb
roll
sub
leave
xchg
test
xchg
add
stos
push
sbb
je
je
inc
and
lahf
repz
icebp
daa
push
cmp
xor
xchg
rolb
sub
fists
outsb
sub
add
es
pusha
mov
push
pop
cmp
and
sub
add
stc
mov
rcr
aam
sub
xchg
and
push
addl
ja
movsl
out
cs
push
xchg
in
dec
movsb
mov
and
iret
fdivrs
test
orb
push
in
jns
jmp
ja
scas
in
mov
push
out
sub
and
jno
insl
loope
mov
mov
int3
ss
pop
andb
mov
aas
aaa
cld
mov
mov
adc
outsl
lret
js
pop
cmpsb
pop
je
add
lahf
imul
shll
dec
xor
hlt
cmp
xor
lock
xchg
mov
mov
xor
cmp
jb
insl
dec
lock
xor
pop
rcll
jno
cmp
add
mov
dec
arpl
fadd
int3
out
divl
jle
test
adc
sub
ds
push
sub
push
jb
ud1
dec
das
es
xlat
mov
dec
in
dec
testl
fbld
inc
adc
insl
cmp
into
ret
repz
lahf
iret
ljmp
xor
bound
push
stos
push
sub
cmp
loope
orl
mov
mov
or
les
daa
mov
lods
push
mov
inc
scas
repz
mov
rol
pop
mov
mov
lods
jno
arpl
mov
ret
movsb
cs
fadds
cmp
and
sbb
and
cmpsb
aad
loope
mov
jecxz
add
test
in
ret
mov
mov
adc
mov
lcall
adcl
mov
jg
mov
call
mov
jno
aam
cltd
jmp
int
ret
rep
out
and
out
mov
aas
add
and
adc
nop
mov
add
adc
xchg
scas
adc
stos
mov
mov
shl
dec
jns
jbe
push
pop
pop
jle
insb
add
ljmp
cmpl
mov
mov
sbb
mov
adc
pop
fwait
mov
add
in
es
dec
jne
hlt
scas
dec
xor
cmp
fistpl
icebp
add
sub
shl
or
into
dec
dec
ja
pusha
xchg
push
mov
shl
xchg
or
bound
lcall
cmp
ss
imul
push
das
push
mov
sub
sar
sbb
add
fwait
pushf
cmc
int
xor
scas
xchg
mov
mov
push
hlt
sahf
aad
popf
adc
mov
faddl
lock
lock
inc
inc
mov
lcall
fidivrl
inc
arpl
mov
mov
add
xor
lret
mov
jb
dec
loope
das
push
iret
jge
scas
push
lods
add
push
inc
or
jno
loope
inc
jae
dec
push
inc
jg
xchg
lods
sub
inc
cmp
in
les
adcl
mov
ss
adc
test
test
call
mov
jne
dec
lock
mov
insb
push
xor
loopne
cmp
out
inc
aam
test
sti
sbb
in
sbb
add
pop
sarl
mov
dec
aas
mov
cmp
mov
test
mov
iret
lock
xchg
sbb
mov
add
pop
jg
dec
and
jae
cmpsb
xor
sbb
in
pusha
popa
sbb
push
pusha
push
jecxz
xchg
in
stc
adc
sti
shlb
arpl
mov
out
popf
adc
xor
and
in
jo
adc
insb
and
fdivs
sbb
cli
call
or
xor
cwtl
fistpll
aaa
loop
je
jnp
inc
cmpb
sbb
dec
add
pop
test
xor
test
xchg
in
ret
push
sub
fnstenv
inc
sti
push
mov
fdivrl
add
les
pop
int3
push
int
dec
clc
inc
jo
pop
add
jecxz
sub
inc
xchg
inc
pop
adc
mov
pop
mov
dec
jb
adc
dec
cmc
and
add
xor
xlat
push
scas
ljmp
sub
jmp
dec
and
add
mov
and
sbb
push
xor
pop
mov
aas
ret
scas
xor
ret
sti
jne
lcall
mov
ljmp
jno
sbb
gs
push
and
adc
popa
mov
fsts
popa
ret
inc
fwait
mov
repnz
mov
pop
inc
fbstp
mov
jp
iret
sbbl
jle
leave
hlt
nop
dec
nop
add
inc
es
xlat
jae
leave
jle
sbb
out
sbb
xor
rclb
fwait
dec
mov
imul
and
pop
mov
pop
int3
movsb
or
ret
or
sbb
and
jecxz
xor
xchg
sbb
mov
test
shrl
sub
sbb
dec
rolb
clc
fidivl
fsubr
sti
adc
in
popa
adc
cmp
pop
into
add
and
out
and
pop
arpl
sub
fstpt
lret
mov
adc
loop
sbb
mov
mov
mov
mov
sti
out
fdivs
dec
movsb
cltd
inc
cwtl
fisubs
nop
mov
lret
mov
aas
mov
sbb
add
and
jae
shrl
std
inc
xlat
mov
std
std
fmuls
sar
test
push
jnp
pushl
mov
nop
inc
mov
std
shr
and
fldl
imul
xchg
je
cmpsb
lods
cmp
insl
repnz
cmc
mov
lea
sahf
call
xchg
mov
mov
mov
lret
sbb
sbb
mov
fisubl
test
addb
cmpsl
or
xlat
mov
stos
jne
and
inc
lret
arpl
fdivp
lods
sti
mov
shll
inc
outsb
fcoml
lea
addr16
pushf
nop
xchg
int3
and
push
clc
sahf
js
and
pop
out
pop
lahf
leave
dec
data16
sahf
nop
or
pop
lcall
negb
dec
dec
pop
sub
leave
xor
mov
jge
mov
sbb
mov
sahf
call
das
mov
ffreep
pop
pop
out
xlat
fbstp
test
aaa
jl
sub
aad
insb
mov
mov
iret
in
cmpsl
cltd
inc
push
icebp
sub
sbb
add
in
movsb
hlt
cmp
mov
fcoml
add
cmp
push
xor
or
repz
mov
add
push
jl
push
sbb
push
sarl
mov
push
cmpsl
or
jb
mov
daa
stos
xchg
push
cmpsl
mov
aad
aam
xchg
push
cli
mov
test
ror
xchg
insb
push
or
inc
addr16
shll
daa
jnp
cs
lods
push
mov
in
mov
divl
imul
daa
sbb
outsb
sub
sti
pop
mov
inc
out
orl
sub
jmp
mov
ljmp
repz
cwtl
iret
push
cmp
sbb
push
into
fwait
or
inc
xchg
fistpll
int
imul
mov
jno
adc
dec
sbb
adc
pop
repz
stc
add
js
or
aam
fs
sbb
pop
mov
dec
movsl
inc
pop
ss
mov
into
mull
stos
add
mov
pop
cltd
mov
jecxz,pt
jmp
clc
mov
cmpsb
test
pushf
sbb
jae
aas
dec
sbb
xchg
test
pop
push
mov
push
sahf
nop
inc
adc
xor
bound
mov
or
adc
add
js
adc
stos
xchg
ss
xchg
outsl
mov
mov
insl
jle
icebp
repz
mov
push
mov
xor
sbb
push
push
xchg
push
es
sub
rcll
adc
inc
or
out
ret
mov
pop
pushf
cmpsb
mov
lcall
adc
mov
andb
jbe
and
add
mov
or
or
pop
pop
ret
repz
xchg
adc
xchg
iret
mov
and
cmp
xor
inc
aaa
cmp
cmpb
cmpsb
out
and
and
push
ja
ror
cli
inc
dec
pop
loope
adc
mov
bound
lcall
xlat
je
and
xchg
stc
dec
in
je
insb
into
mov
push
sub
ss
aas
mov
add
movsl
int3
mov
push
pop
ja
cmpsb
test
cmpsb
and
mov
mov
mov
test
jne
into
mov
mov
sub
mov
lcall
cmpsl
mov
andl
inc
inc
dec
pushf
push
mov
mov
fmul
mov
fidivl
outsl
mov
xchg
mov
aad
xor
cmc
xor
fcomps
mov
push
sbb
repz
incb
daa
lret
push
movsb
lahf
adc
int3
xorb
repz
or
adc
sub
adc
dec
lahf
hlt
fldt
mov
cmp
in
loop
sbb
xchg
mov
dec
dec
clc
insl
add
arpl
adcb
mov
inc
mov
fldenv
jecxz
mov
cmp
ljmp
in
movsb
xchg
mov
add
xchg
loopne
in
xchg
arpl
fcoml
adc
les
cmp
fcmovne
dec
call
xchg
jae
mov
cs
xchg
xchg
mov
mov
mov
mov
pop
ret
daa
aaa
jne
and
inc
jmp
je
out
js
mov
jg
out
aaa
loop
stos
icebp
outsl
cmp
fisubrs
xchg
inc
sub
lret
subb
orb
stos
cbtw
mov
jno
adc
sbb
imul
or
push
adc
fsubrl
jle
icebp
ret
das
xor
addr16
sti
rcrl
dec
std
mov
add
mov
or
loopne
adc
lods
mov
xchg
jnp
ret
xor
insl
jae
xchg
lret
clc
sarb
jmp
mov
push
mov
xchg
inc
adc
cmp
outsl
loop
mov
or
jle
and
sti
enter
iret
or
xchg
cs
jnp
in
pop
test
fbstp
aas
pop
xor
and
jmp
mov
sub
inc
lahf
mov
sbb
sub
mov
test
adc
iret
or
shrl
cs
jg
adc
and
push
js
nop
push
inc
cmp
inc
outsl
sbb
cmp
xor
or
jno
dec
jecxz
jmp
ret
lcall
arpl
dec
nop
or
mov
loop
movsl
inc
ljmp
pminub
call
scas
inc
fldenv
fdivrl
fnstenv
or
mov
dec
fildl
clc
fs
or
and
xchg
mov
aad
lock
mov
mov
out
in
dec
sub
adc
mov
outsl
jne
test
jne
xlat
mov
and
or
pop
in
dec
nop
cltd
popl
sbb
movsl
enter
shrb
push
push
arpl
fs
sub
outsl
test
mov
rcrl
or
leave
jae
push
ret
sbb
sbb
mull
fwait
mov
xor
adc
pop
jae
mov
pushf
cmp
or
push
int
punpckhbw
cmp
xchg
pop
jmp
push
xor
sbb
add
pop
pusha
test
imul
pop
rcrb
insl
jle
scas
adc
mov
mov
mov
insl
cmp
in
adc
mov
cmp
in
fcoms
adc
adcl
cwtl
xchg
iret
push
jae
test
cld
inc
xchg
mov
jae
or
push
jmp
ret
mov
push
pop
lock
or
push
xchg
das
add
mov
xchg
icebp
insb
stos
pop
lret
cmpsb
inc
andb
fwait
xor
jbe
push
or
jo
push
push
sub
dec
inc
das
ret
mov
xor
leave
push
push
loope
rep
loopne
mov
ret
aad
jecxz
push
ret
dec
sub
iret
lahf
paddw
in
outsb
pop
xchg
inc
out
add
adc
mov
sub
jmp
jecxz
add
pop
pop
mov
pop
dec
jg
hlt
xchg
test
and
loop
pop
mov
xorl
je
call
pop
clc
jmp
xor
cwtl
mov
add
faddl
push
push
xor
call
or
enter
mov
int
mov
pop
inc
cmp
clc
cmp
std
rcl
adc
jnp
push
push
jb
mov
mov
pop
cmpsl
jno
lods
jae
xchg
popa
sbb
les
cmp
imul
fcoml
test
lods
inc
dec
mov
mov
xlat
add
shll
and
fidivrl
popf
push
stos
jne
inc
rclb
jl
insl
cli
mov
hlt
push
mov
loop
jg
clc
out
dec
cwtl
xchg
push
or
int3
outsl
add
int3
stos
rorl
je
mov
cld
jnp
clc
stos
sub
add
ds
fnstenv
clc
bound
cmp
dec
sub
jo
stos
push
mov
xchg
repz
stc
rorl
cmpsb
jne
test
pop
in
pop
lret
unpcklps
fildll
mov
cmp
mov
outsl
jecxz
sub
stc
movsb
dec
sub
sub
je
fwait
call
roll
pop
mov
sti
pop
jmp
call
ja
repnz
in
mov
shrl
lea
pop
mov
or
cld
mov
push
mov
xor
out
add
sti
sti
data16
icebp
jnp
sub
dec
mov
sbb
cmpsb
mov
or
iret
orb
sub
sub
ret
sbb
in
sub
lret
dec
mov
mov
pop
sbb
push
push
sbb
mov
add
xchg
jl
sar
and
xorb
push
mov
fmulp
dec
rol
outsb
sbb
pop
cli
dec
cmp
mov
insl
fidivs
mov
or
aas
cmp
jns
add
jns
cmp
xchg
daa
sub
xchg
cmp
fistps
xor
cmp
push
sub
mov
xchg
cld
xor
and
cmp
cmp
mov
sahf
filds
xchg
ret
ja
je
xchg
adc
pusha
mov
aas
xlat
js
inc
imul
cltd
sub
out
xor
mov
stos
inc
xor
fidivl
or
aaa
jo
dec
mov
gs
jmp
iret
sbbb
sub
dec
push
dec
add
insl
cltd
js
loop
xchg
mov
scas
outsb
jnp
pop
adc
hlt
test
mov
mov
jmp
cmp
mov
and
jne
les
mov
sbb
dec
push
inc
xor
pop
cmp
test
pop
cmp
xchg
loope
mov
ret
shll
out
pop
xchg
xchg
out
loopne
out
cmpsl
push
add
adc
jge
add
jle
imul
mov
xchg
cwtl
aad
pusha
pop
or
iret
mov
out
mov
jb
mov
in
dec
pop
cld
icebp
pop
jnp
lods
mov
cmpsb
ljmp
es
js
lds
cmp
pop
imul
fwait
loop
adc
lcall
push
jl
sub
mov
add
or
sar
addr16
insl
jmp
xor
mov
test
icebp
add
push
insb
pop
call
xorb
imul
or
sub
adc
clc
mov
js
mov
mov
dec
shl
mov
and
xor
mov
mov
inc
xor
mulps
push
adc
cmp
movsl
rcrb
sbb
xor
or
xchg
stc
scas
and
cmp
mov
push
xchg
jl
inc
xor
stos
aas
in
adc
mov
and
adc
cmc
fxch
int
adc
dec
insl
aas
mov
fwait
sub
aaa
sahf
pop
push
aas
lock
adc
add
dec
test
xor
dec
cmc
jmp
pop
inc
inc
loopne
icebp
sub
add
add
cvtps2pd
jo
cmp
imul
xchg
cmpsl
mov
verr
sub
nop
mov
jge
scas
and
mov
ds
int3
roll
or
adc
mov
orb
cmc
sarb
movsb
aas
orl
arpl
aaa
dec
adc
jb
pop
and
repz
insb
or
loopne
add
aaa
jl
in
sbb
jecxz
adc
lds
pop
js
sub
bts
jb
sbb
mov
js
sbb
adcl
roll
cld
dec
popf
imul
insb
push
sub
inc
shl
rcrl
fdivl
cld
pop
xchg
daa
sbb
cmp
movsb
add
shrl
outsl
push
xchg
loope
test
adc
inc
int
pop
xor
scas
pop
inc
dec
cltd
mov
xor
pop
adc
mov
adc
imul
insb
jg
inc
jmp
orl
arpl
inc
lods
orb
dec
inc
mov
xor
xlat
add
sub
add
pop
mov
cmp
inc
xchg
neg
gs
jns
scas
in
jmp
iret
jmp
js
cli
mov
lock
pop
adc
jecxz
iret
lock
and
nop
imul
adc
mov
pop
mov
mov
jb
jne,pn
xchg
test
pop
test
sbb
and
dec
stos
mov
add
push
arpl
inc
cmpb
dec
mov
adc
mov
cwtl
inc
sbb
adc
neg
in
xchg
es
int3
fcmove
popa
push
inc
cmpsl
adc
mov
sub
jg
mov
cld
dec
rolb
dec
mov
sahf
out
lea
xor
into
mov
outsl
mov
ja
jl
inc
sahf
dec
xor
or
out
add
mov
xor
push
stos
test
fists
in
clc
pop
icebp
fsub
jne
scas
cmp
in
push
and
add
repnz
icebp
out
sti
xlat
popf
mov
dec
jbe
rcrl
xorb
and
mov
cld
leave
jno
push
into
sbb
adc
add
imul
cs
xchg
mov
pop
stc
push
icebp
push
mov
and
out
loopne
push
inc
xchg
xchg
fidivrl
adc
dec
mov
adc
sbb
push
insb
cli
ret
add
add
jge
add
decb
mov
xor
aas
clc
icebp
into
scas
mov
jnp
lds
outsl
adc
ljmp
sub
inc
xor
cltd
xor
or
mov
jo
lods
and
fistl
inc
jb
cltd
mov
insl
fnsave
insl
mov
xchg
jmpw
popa
inc
cs
int3
jb
pop
fists
movsb
mov
sub
insb
dec
sbb
scas
or
cwtl
xchg
pop
mov
and
rorl
push
sub
mov
mov
or
fnstcw
ds
icebp
sub
ret
inc
xchg
leave
in
cmp
aas
stos
repnz
test
xchg
in
cmp
jb
xor
cmc
mov
scas
xchg
popl
mov
rorb
jge
jmp
test
daa
sub
lock
and
jge
pop
mov
mov
pop
mov
sbb
in
mov
icebp
mov
inc
sti
and
jecxz
ja
sub
mov
aas
cmp
push
stos
mov
ss
push
mov
jecxz
paddd
xchg
icebp
cmp
pop
push
cmovl
fidivs
push
ror
stc
aad
jge
test
in
gs
mov
loope
and
push
or
mov
int3
fs
int3
add
sbb
jno
inc
pop
lds
sub
xor
xchg
mov
xorl
dec
std
sti
mov
rcrl
cld
lret
int
mov
dec
mov
loop
dec
push
mov
loopne
add
xor
sbb
push
pop
cmp
cmpsl
rclb
or
add
and
loope
mov
jl
xor
cmp
lods
dec
sub
mov
daa
and
mov
mov
scas
fstps
mov
xor
out
xor
fsubl
xchg
and
ds
mov
cltd
frstor
inc
push
mov
ds
scas
inc
pushf
ja
dec
scas
jl
sahf
pushf
xlat
rep
shrb
mov
pop
cmpb
pop
scas
cmc
dec
mov
pop
and
pop
dec
stos
inc
sub
lds
and
call
movsb
sub
scas
xlat
out
fs
int
loop
imul
jns
push
push
jmp
jl
aas
mov
aad
fcomp
sbb
jl
out
add
mov
jmp
sti
mov
jecxz
rol
jb
ljmp
in
fmull
xchg
fldcw
arpl
incb
xor
jnp
sbb
pop
hlt
jno
adc
int3
aam
or
pop
insb
in
shrl
sub
out
cmp
mov
subl
testl
add
mov
cmp
xorl
sub
or
jns
aam
mov
stc
pop
inc
outsl
push
aas
call
repz
jmp
add
js
pop
adc
xor
xchg
repz
mov
mov
lea
mov
push
mov
cmp
inc
xchg
mov
sub
es
lret
insb
ds
mov
sahf
pop
mov
dec
loopne
push
mov
jo
cltd
inc
lods
sbb
daa
sbb
push
lock
jns
test
ja
add
xchg
pusha
lret
enter
je
adc
wbinvd
push
xchg
dec
fdivp
or
out
pop
or
add
mov
push
shll
out
add
stc
and
das
xor
repz
xlat
cwtl
xchg
test
push
mov
ja
mov
cld
pop
je
mov
divb
out
mov
enter
and
icebp
jae
cltd
in
or
pop
lret
stc
das
pop
fstpl
lock
leave
inc
cmp
mov
add
jne
cmp
or
outsb
cmpsb
xchg
add
and
cmp
int3
push
push
in
cltd
lret
pop
adc
test
fildl
shll
xor
or
jmp
push
and
faddp
mov
lock
xlat
jae
inc
pop
pop
pusha
negl
push
in
add
pop
insb
xor
mov
jnp
xchg
inc
mov
sub
out
mull
lock
sub
fists
cltd
pop
in
xchg
sub
aas
adc
in
add
fcomps
xchg
and
add
jmp
daa
and
sub
add
or
jge
mov
xor
repnz
lods
xor
pop
outsl
sarb
stc
mov
sahf
cmp
push
sbb
movsl
icebp
add
leave
stc
push
icebp
aam
inc
inc
or
xchg
ss
in
rorl
es
and
push
sahf
pop
jle
inc
push
inc
push
push
insl
stc
mov
push
repnz
or
jbe
mov
xchg
mov
xchg
test
dec
negb
sbb
outsl
pop
and
and
cmp
adc
arpl
cld
jns
fs
xlat
adc
cwtl
into
fisubs
divl
adc
push
inc
xchg
roll
lods
ljmp
not
je
fsts
pop
daa
add
mov
jne
mov
mov
sub
push
fdivrl
dec
push
add
and
and
lods
daa
mov
insl
test
fisubs
pop
in
push
inc
mov
in
mov
fmull
sahf
push
mov
movsb
dec
in
loopne
popa
leave
repnz
iret
addr16
call
test
add
mov
pop
int3
das
or
insb
out
sbb
adc
push
mov
roll
test
inc
lea
xchg
lcall
pop
and
jo
jge
repz
adc
and
idivb
es
mov
sbb
pop
mov
ds
scas
ss
adc
movb
push
shrl
outsl
pop
pop
push
pop
jne
data16
cmpsl
in
pop
cmpsl
add
addr16
push
dec
mov
call
xor
out
push
mov
xchg
jl
jno
xchg
ja
sbb
sub
movsl
mov
xchg
sub
push
jmp
lds
popa
scas
jmp
add
test
lahf
or
and
shrb
pop
mov
jne
popf
cwtl
mov
inc
xchg
je
pushf
and
inc
iret
popa
jns
dec
xchg
add
rorb
xchg
sti
mov
punpckhbw
mov
add
mov
movsb
flds
out
es
filds
sti
mov
inc
and
cmc
sti
shrb
out
dec
cmpsl
into
pop
adc
inc
and
idivb
lods
xor
jp
lds
xor
aam
inc
pop
dec
arpl
out
cmp
mov
je
jl
test
pop
cmpsl
faddl
sub
inc
nop
call
clc
aam
sub
icebp
mov
test
mov
add
insl
sbb
and
mov
lcall
orl
and
pop
dec
cli
and
ds
adc
xor
dec
subb
sbb
jecxz
arpl
push
call
repz
jo
jmp
lret
pop
push
add
inc
dec
xchg
fstpt
sub
out
movsb
sbb
add
mov
outsb
mov
fndisi(8087
rorl
cmp
sbb
cmp
test
mov
clc
arpl
mov
and
ds
mov
mov
xchg
mov
adc
arpl
popl
imul
shr
or
adc
enter
mov
stc
cltd
sub
imul
daa
fadd
xor
pop
fs
inc
outsb
add
mov
das
pop
xchg
insl
sub
fsubrs
ret
jnp
je
lret
fistl
jecxz
mov
dec
cmp
mov
sub
stos
push
aaa
adc
or
rorl
jns
jl
lcall
dec
lock
ss
sbb
mov
xor
call
sbb
xor
shl
mov
fcmovb
mov
jg
outsb
pop
repnz
adc
xchg
fstpt
out
cmp
data16
das
punpckhbw
jo
sti
xlat
jecxz
insl
pop
es
mov
lock
hlt
xor
cld
xlat
and
push
sti
arpl
mov
lret
lock
jno
cmp
xor
cld
aas
fisubs
mov
mov
in
loope
mov
out
cmpsl
clc
pop
test
add
aam
jno
dec
jl
int3
rcll
in
fisubs
add
mov
test
sbb
mov
dec
in
cmp
mov
xlat
in
addr16
mov
xchg
or
aad
mov
add
lahf
rorb
push
mov
test
jmp
mov
daa
lods
mov
xor
and
jne
std
out
fcompl
mov
rorl
shl
movsb
mov
leave
fwait
andl
jnp
in
xlat
push
xchg
jb
or
in
push
in
sti
xchg
xor
jmp
inc
les
inc
int3
outsl
inc
movsb
mov
sub
ljmp
jno
adc
jnp
sbb
dec
mov
lds
lods
loop
das
sub
lcall
test
movsb
mov
inc
push
nop
cmp
sar
lcall
sti
das
adc
test
cwtl
lea
sub
loope
btr
xor
in
xchg
lahf
pop
and
push
rcrl
clc
cmp
mov
lahf
xchg
test
push
sbb
push
stc
sbbl
mov
rcl
call
aaa
movsl
mov
mov
dec
lds
xchg
xor
or
imul
int
fisttps
lock
ret
dec
aad
jecxz
push
inc
jns
or
cli
icebp
lret
push
insl
movsl
es
mov
shll
shlb
push
cmpl
sbb
fisttpl
aad
pushf
mov
pop
xchg
leave
gs
imul
dec
mov
pop
or
out
sub
xchg
sbbb
add
stc
addl
fstpl
in
jnp
sub
sbb
inc
in
add
or
sarl
dec
scas
mov
out
xchg
iret
xchg
jmp
fldenv
cmp
pop
xor
xor
sub
adc
movsl
or
pop
test
mov
and
clc
stos
jge
shrb
stos
leave
psubusb
jmp
das
dec
cmp
subps
insl
daa
mov
daa
orb
aad
cmp
inc
dec
and
stc
inc
loopne
ljmp
sbb
in
aad
insb
or
hlt
nop
and
cmp
xor
imul
push
jns
and
mov
je
cltd
pop
stos
xor
inc
xchg
fwait
pop
and
sbb
mov
repz
jmp
scas
jge
stc
xor
mov
xor
sahf
repz
adc
pop
jle
push
fwait
xor
and
jnp
sbb
movsl
sub
jnp
sbb
nopl
mov
sti
push
and
mov
mov
or
fisttps
lret
pop
cmc
dec
dec
jge
mov
aaa
mov
xchg
adc
sub
scas
shlb
cltd
or
mov
lock
dec
daa
leave
or
mov
lock
or
and
xor
adc
mov
mov
gs
in
and
dec
enter
arpl
fmul
dec
jb
or
movsl
fistpll
add
and
fwait
fs
xchg
aad
rclb
mov
xor
pop
and
jle
mov
mov
add
cmp
or
cltd
sbb
pop
mov
fs
mov
aam
mov
sbbb
adc
pop
lea
inc
mov
add
fld
pop
and
cmpsl
sbb
jns
sahf
rcrl
sbb
fldenv
pop
aaa
movsl
fsubrs
mov
lret
cmp
test
shrl
outsb
sbb
stos
mov
test
pop
aas
jge
push
pop
cwtl
jg
bnd
insb
add
movsl
cld
aaa
mov
and
fdivrs
pop
or
adc
push
push
and
nop
stc
lahf
repz
insl
in
scas
testb
push
jb
mov
popa
pop
fninit
fadd
fstpl
gs
or
or
rcr
dec
or
pop
dec
ljmp
jl
pop
xchg
outsb
push
xor
jl
iret
lret
mov
cmpsb
cs
xor
xchg
and
or
or
fildll
mov
dec
xlat
hlt
lret
jnp
inc
adc
frstor
jmp
in
xor
mov
dec
and
jmp
in
xchg
negb
int3
fisttpll
sub
cmpsb
mov
jo
mov
ds
cmp
je
xchg
jne
es
cmp
loop
mov
ja
popf
and
cs
push
mov
pop
mov
push
aas
pop
cltd
pop
fmuls
and
mov
cli
shlb
lock
cmp
xor
dec
in
xor
mov
inc
out
and
jp
xchg
push
mov
push
mov
mov
push
jne
in
xchg
aas
js
sahf
and
cmpsl
push
xor
add
and
mov
shrl
jge
mov
test
mov
cmp
push
enter
movb
out
jnp
mov
lcall
mov
or
or
outsl
inc
ret
mov
ja
int3
js
xorl
cmp
jl
es
and
xor
mov
and
dec
stos
mov
clc
int
or
popf
lcall
mov
mov
addb
mov
adc
aas
xchg
lods
mov
or
lret
fwait
pop
lret
adc
cli
add
or
ret
sbb
add
stos
cmp
out
shll
cmpsl
mov
push
xchg
clc
adc
nop
lds
push
pop
bound
pusha
push
jecxz
and
push
jge
pop
scas
aas
cmc
insl
cltd
fcoml
mov
in
add
incb
subl
mov
push
xchg
imul
jmp
scas
push
xor
or
push
jmp
or
out
mov
addr16
add
mov
lock
insb
pop
pop
dec
xchg
push
lret
mov
daa
push
seta
movsb
fs
xchg
lea
pop
sub
and
jb
cwtl
adc
mov
mov
lods
pop
add
xchg
fcoml
outsl
lods
xchg
xor
stos
scas
daa
and
icebp
lahf
stc
pusha
adc
ret
cs
push
lock
mov
mov
jns
fwait
inc
cmp
mov
adc
aad
mov
frstor
mov
imul
in
sbb
lods
sbb
sub
sbb
cld
mov
cmpsb
sarl
inc
aas
movsb
mov
jmp
in
enter
icebp
clc
fistps
jecxz
std
call
clc
fldt
insb
adc
xchg
rcr
cmp
aaa
cmpsb
jb
jo
xchg
cmp
xchg
and
jmp
push
sbb
xchg
test
addr16
aas
call
cmp
jmp
repz
fmull
mov
mov
jno
adc
mov
out
xchg
mov
adc
int
cmp
aad
mov
lcall
stos
and
shl
and
insl
mov
out
xchg
call
jge
xchg
sub
mov
cwtl
fldenv
clc
stos
insl
sbb
pop
in
mov
and
notl
xor
xor
jns
and
jnp
mov
shr
adc
push
mov
mov
gs
xor
pop
lahf
pop
or
push
mov
scas
pop
lods
pop
pop
lcall
insb
mov
push
imul
mov
jo
push
lret
sub
mov
cmp
xchg
xor
scas
sbb
cltd
xchg
inc
xchg
mov
mov
hlt
jmp
pop
icebp
push
repz
mov
fs
nop
imul
inc
jnp
and
or
sbb
add
sub
add
adc
fdivs
scas
sub
cs
ret
jbe
jbe
cmp
sub
scas
add
or
mov
inc
mov
mov
mov
clc
repnz
arpl
and
jns
and
es
es
jg
mov
idiv
mov
call
mov
fcomps
jae
fs
mov
pop
or
add
push
call
fidivl
repnz
js
jbe
movsb
xchg
test
xchg
fwait
iret
daa
cli
mov
sbb
hlt
fistl
addr16
pop
xchg
pusha
bsr
xchg
and
mov
cs
in
adc
outsb
notb
cmpsb
jecxz
jl
les
jnp
sbb
aas
pop
adc
xor
lods
jns
cmp
fwait
inc
pop
jns
hlt
pop
cmp
mov
cmpb
pop
inc
and
imul
jl
adcl
stc
mov
lcall
push
arpl
cld
cmp
loope
push
mov
into
sub
cli
adc
sbb
into
sub
in
or
push
in
push
sbb
into
and
mov
xchg
aam
and
adc
bound
aad
jmp
mov
mov
es
adc
or
ss
push
out
out
push
aaa
dec
xor
fwait
cltd
ret
shl
aaa
lcall
jne
push
xor
adc
stos
mov
sub
xor
push
jbe
adc
rorl
ret
cmp
cmp
aad
jle
scas
imul
sub
jmp
add
into
paddusb
test
or
xor
inc
inc
jns
mov
push
pop
scas
int3
jo
stos
rorl
adc
mov
int
sub
leave
xchg
testl
or
sbbl
pushf
mov
mov
hlt
rol
mov
dec
shl
cmp
pop
mov
scas
dec
pop
jl
and
mov
mov
lods
rcll
cli
out
push
adc
stos
js
leave
inc
mov
pop
lahf
fidivrl
xchg
cmp
jle
push
mov
sbb
aam
sbb
movsl
add
jmp
nop
xor
cmpsl
lds
jg
stc
xchg
fbld
push
add
scas
jno
pop
add
out
fistps
push
xor
dec
adc
ret
mov
adc
cltd
addl
push
pop
sub
xchg
pop
add
push
imul
cli
mov
iret
insb
mov
xor
insb
fistpll
popa
and
rcrb
in
mov
mov
xlat
je
inc
shrl
enter
mov
into
pop
mov
mov
test
push
mov
out
mov
pop
fsubrl
jl
iret
cli
xlat
aad
jnp
pop
lret
dec
pushf
xor
out
shll
sbb
movsb
ja
fcmovu
mov
test
add
lret
sbb
insl
xchg
push
hlt
outsb
call
sub
pop
jbe
popa
jl
js
pop
sub
out
lret
in
aaa
dec
loopne
repz
xor
add
jns
cmp
pop
lret
mov
js
and
jo
or
push
push
jge
test
inc
jecxz
scas
in
rclb
int
lods
popf
enter
aas
cmp
xchg
adc
dec
cli
add
outsl
pop
adc
cmp
xchg
and
jbe
push
push
inc
dec
or
adc
stos
js
sbb
mov
mov
repz
push
rol
push
aas
dec
sub
insl
sbb
aas
pop
imul
ret
push
sbb
or
popf
xor
or
sub
sub
js
ds
enter
daa
dec
xor
in
mov
or
das
hlt
and
jae
js
push
in
cmp
jns
adc
cmp
jmp
andb
sbb
sub
lods
or
and
push
xor
pop
repz
mov
jb
xorb
test
mov
scas
je
mov
jbe
or
cmp
lret
and
fcomps
cmp
mov
mov
mov
lea
bswap
repnz
jp
lods
xchg
sti
jae
rcll
arpl
sbb
xor
inc
jnp
enter
stos
push
jns
mov
movsl
adc
and
or
push
or
iret
xchg
dec
push
shrl
movsb
cmp
scas
es
jg
xchg
popf
ds
xchg
inc
adc
push
jmp
cmpsl
dec
stc
adc
mov
adc
or
or
sbb
rcr
fisttpll
pop
sar
inc
dec
ret
and
adc
mov
rclb
push
inc
stos
jp
sti
mov
push
mov
add
movb
cmp
inc
test
adc
ror
aam
or
add
sub
xchg
sub
push
jp
adc
movsl
add
pushf
loope,pt
lcall
loope
pop
js
xchg
cmp
and
pop
add
cmpsb
jmp
nop
scas
adc
cmpsl
xor
dec
enter
nop
jmp
dec
jecxz
test
in
rclb
sbb
sbb
idivb
mov
sbb
xlat
xlat
movsb
addr16
jb
mov
je
out
mov
jge
scas
cmpsl
movsb
scas
pushf
push
js
push
and
xor
mov
lds
mov
jl
stos
or
adc
add
je
lock
inc
std
add
mov
shlb
adc
mov
leave
ds
out
add
incl
sub
roll
enter
int
dec
pop
or
or
push
push
mov
fnstcw
js
shl
mov
out
mov
adc
cli
prefetch
or
das
cmp
out
out
mov
in
mov
sub
and
sub
ret
enter
lock
mov
or
add
mov
dec
psadbw
xor
add
mov
mov
lock
out
add
aam
pop
inc
sub
dec
mov
pop
je
push
aam
fsubrl
xchg
jge
mov
ja
mov
pop
sbb
lods
loop
js
add
jmp
pushf
push
icebp
add
aam
cmp
les
ja
jmp
xor
pushf
dec
into
out
jp
cmp
or
adc
lcall
pop
sub
dec
dec
cmc
add
imul
lods
mov
cld
xor
pop
mov
cmp
outsl
xchg
lcall
push
xchg
movl
arpl
das
adc
xchg
clc
xchg
fucomp
sub
dec
adc
jbe
stc
xchg
push
pop
adc
out
imul
xchg
ja
popl
push
mov
sahf
movsl
push
stos
mov
ss
xor
pop
cwtl
cmp
cmp
and
cmc
sub
xor
in
lahf
xchg
scas
int3
xor
xchg
and
mov
call
in
and
xchg
test
jnp
sbb
pop
mov
sarb
mov
mov
and
fimull
add
or
and
in
addl
pop
sbb
inc
int
in
pop
scas
popa
sub
mov
mov
sahf
push
leave
lods
int3
mov
outsl
xchg
cmp
xor
js
xor
aam
hlt
aad
fs
aas
cmp
loope
bound
adc
add
adc
popf
in
les
mov
pop
shrl
cwtl
pop
hlt
lahf
xchg
cmp
lds
push
sbbb
mov
adc
jge
aam
mov
pop
push
push
sbbl
pop
nop
adcl
cmc
cmp
clc
add
icebp
sti
popf
dec
les
pop
push
or
or
pop
adc
add
or
mov
or
lret
shrb
mov
dec
dec
jp
int
and
dec
fdivl
jmp
dec
jne
bound
xchg
add
call
neg
arpl
mov
pusha
inc
aad
imul
xor
sub
divb
push
ss
mov
mov
roll
dec
fdivr
push
lods
push
sbb
decl
pop
insb
scas
pusha
movsl
xchg
outsl
iret
pop
sahf
push
adc
xor
pop
iret
and
pop
lret
mov
cwtl
add
je
addl
scas
dec
es
mov
and
sub
lods
mov
xchg
and
ss
inc
pop
jnp
adcl
mov
insl
jge
aas
jne
or
adc
je
push
pop
jbe
clc
fs
adc
aaa
mov
inc
or
dec
xor
dec
insl
dec
lahf
cli
mov
adc
enter
pop
adc
jmp
cmp
xor
sbb
xor
mov
jnp
sbb
scas
mov
cmp
imul
icebp
xor
jo
ljmp
cmpsl
dec
aas
addr16
sub
das
rorl
dec
clc
cmp
jp
add
les
mov
mov
sbb
jno
add
adc
loop
dec
test
insl
iret
test
out
inc
pop
adc
rorl
dec
or
lcall
ficoms
inc
pop
ss
int3
jb
add
jmp
mov
mov
incb
call
mov
push
in
or
out
ds
push
in
xor
movl
ljmp
insl
rclb
rcr
lret
out
mov
inc
out
sbb
adc
mov
stc
ret
ljmp
xchg
and
lock
mov
mov
scas
ficoms
lret
jg
loope
loopne
idiv
fistpl
add
sub
push
imul
jnp
push
mov
dec
add
lods
int3
fcmovbe
push
sbb
bnd
es
mov
pop
xor
push
adc
inc
ss
xchg
lods
pushf
mov
push
mov
daa
adc
sub
ds
cmp
fildll
shrb
cmc
push
sbb
mov
out
pushf
mov
xchg
cmp
ret
jae
dec
pop
cmpsl
movsl
ds
mov
decl
ja
popf
adc
ja
mov
cmp
push
add
push
add
jae
sbb
mov
mov
roll
mov
jne
mov
nop
mov
ljmp
out
xchg
mov
ret
mov
jns
cmp
mov
add
pop
mov
es
dec
xchg
or
aas
jno
les
push
mov
add
movsb
aam
insl
popf
or
imul
lods
push
xor
pop
mov
je
shll
mov
jmp
xor
mov
inc
pop
sbb
fistps
pop
or
xor
out
inc
jb
stos
mov
movsb
add
out
loopne
inc
jo
sub
clc
sub
sub
cmp
push
sarl
jbe
mov
or
dec
movsl
in
lock
mov
push
sbb
sbb
xchg
stos
adc
notl
jne
out
jnp
aas
xor
pop
in
jmp
adc
or
dec
pop
enter
sti
dec
nop
mov
push
std
or
xchg
scas
push
mov
jo
cmp
int
cmp
push
push
jbe
pop
fs
das
in
mov
fidivl
pushf
iret
cmp
decl
add
loop
negb
mov
xor
push
sbb
add
push
lcall
push
dec
ds
mov
stos
hlt
push
jge
fbld
and
jecxz
les
mov
stos
fidivrs
sub
push
and
daa
push
jle
rcl
ret
jp
jae
hlt
repz
mov
repz
pushf
sti
test
pop
mov
lock
out
iret
std
inc
sub
jl
int
lods
ret
cmp
div
or
pusha
add
jp
push
xor
fcmovne
add
into
mov
cmpsb
mov
cmp
mov
mov
scas
jbe
mov
das
incl
mov
adc
pop
push
cs
mov
fnstsw
pop
and
test
xor
je
sub
xchg
movsl
and
jmp
ja
outsl
and
dec
pop
xchg
jge
push
adc
mov
mov
jl
sbb
sahf
inc
mov
icebp
outsb
sub
sahf
ljmp
aam
lock
mov
popf
imul
data16
xor
ret
mov
stos
push
into
jae
repnz
scas
and
pushf
jg
xchg
mov
sbb
dec
gs
sbb
int
lods
xchg
xor
lods
ss
xchg
mov
and
es
lea
mov
ds
ret
mov
mov
fdivrl
mov
fwait
icebp
or
mov
into
adc
jno
icebp
lea
or
iret
mov
gs
aad
lds
sbb
in
in
and
sub
std
pop
in
and
and
cmpsl
mov
cmp
or
ds
mov
push
stc
test
adc
xchg
lods
add
stos
or
sub
adc
xchg
inc
mov
cmp
push
in
mov
fs
pushf
jnp
jb
sbb
fsubrs
jo
cmp
in
sub
movsb
int
push
mov
inc
mov
pop
mov
mov
fisubl
call
aaa
int
lret
jl
das
pushf
ds
cmp
call
inc
movsl
inc
pop
adc
mov
push
push
call
ljmp
mov
ljmp
xor
add
jnp
out
jb
adcb
push
push
xchg
dec
inc
test
outsb
outsb
data16
sbb
jnp
inc
test
lds
or
adc
shlb
addr16
cmp
xor
mov
popl
lcall
mov
push
pop
jbe
in
cmp
mov
jp
out
cmpsl
iret
outsb
sub
lods
sub
mov
mov
sbb
pop
pop
push
cltd
mov
mov
jecxz
or
int3
repnz
test
fcomps
pop
jo
addl
and
push
adc
ror
into
sbb
data16
stos
push
cmp
xor
push
cmp
das
and
data16
add
loopne
scas
jle
xchg
int3
aam
or
shll
out
xor
mov
xchg
adc
shrl
iret
nop
jmp
inc
cmp
scas
mov
mov
shrl
pusha
mov
jb
jge
ss
pop
das
and
cmpsb
les
xor
fsubs
add
je
inc
dec
xchg
jmp
dec
sub
out
jnp
mov
cmp
shll
push
adc
sbb
dec
mov
sbb
lahf
pop
jmp
outsl
sbb
cli
xchg
dec
pop
mov
mov
or
mov
sub
jns
mov
cmpsl
xchg
pushf
stos
loopne
iret
ds
mov
or
mov
adc
fsubrp
rolb
je
test
mov
xchg
dec
addl
mov
dec
fldt
hlt
int3
insb
and
cltd
and
aad
xor
mov
fstps
dec
ret
mov
stos
dec
jns
in
mov
mov
dec
das
xlat
adc
das
shlb
xor
icebp
mov
pop
xchg
mov
test
add
fstl
mov
add
sub
stc
mov
and
xchg
pop
ds
popf
sub
mov
sub
add
pop
mov
out
daa
xchg
jg
mov
iret
pop
dec
add
and
test
cld
and
inc
mov
jnp
cs
push
or
ss
or
inc
jae
or
sub
sti
aas
pop
repnz
pop
nop
popa
add
mov
in
or
loope
rorb
xchg
sbb
jbe
add
sbb
adc
add
jecxz
pusha
ja
and
lret
mov
sbb
mov
adc
add
fidivrs
xchg
sbb
jne
outsb
negb
add
inc
mov
xchg
lret
jge
add
fldl
jecxz
mov
mov
or
jecxz
outsl
lods
push
fdiv
jl
mov
loope
insb
push
mov
rol
pop
pop
sbb
push
mov
or
cli
fwait
mov
mov
enter
pop
mov
sti
stc
fwait
push
cmp
clc
adc
lock
adc
and
test
xchg
mov
les
mov
shl
push
jp
mov
and
call
cmp
xchg
lret
pop
dec
gs
sbb
sti
or
or
fcomip
fsubr
and
push
cmpsl
dec
loop
adc
sub
mov
outsb
mov
jno
sti
pop
pop
jne
mov
shlb
stos
out
mov
aaa
fcmovnb
xchg
jns
jmp
or
pop
in
ljmp
xor
aam
add
xor
ret
sbb
adcl
lea
iret
mov
data16
jo
xor
pandn
push
jecxz
cmp
mov
sbb
mov
adc
sub
add
xor
sub
inc
ficoms
andb
mov
push
add
cwtl
loope
popf
dec
dec
cmp
out
in
dec
stc
mov
xchg
push
je
scas
sub
cmp
sbb
ret
repnz
sub
adc
xchg
xchg
sub
sahf
mov
shl
mov
jmp
and
flds
xor
xchg
push
scas
inc
mov
ret
and
sbb
or
sbbl
js
jnp
mov
adc
and
enter
sbb
mov
mov
fcmovne
aad
pop
jmp
dec
ss
or
ljmp
push
xchg
lods
mov
mov
inc
jo
cwtl
test
jb
xchg
fdivl
mov
insb
sub
inc
in
xor
sub
dec
mov
out
hlt
insb
sbb
jmp
pushf
lret
cld
mov
cmp
icebp
mov
mov
std
es
icebp
jae
dec
adc
sbb
xchg
mov
mov
les
and
add
xchg
into
test
sub
sbb
orb
imul
or
addl
scas
lock
sub
sahf
push
leave
in
mov
in
pop
mov
scas
sub
cmp
fstps
jae
fisubl
add
add
mov
push
push
cld
nop
ja
rcrl
call
mov
jge
jae
adc
out
pop
and
xor
jmp
inc
pushf
outsl
push
and
sub
loope
xchg
jge
dec
adc
cwtl
push
and
pop
das
cmpsl
arpl
insb
push
and
call
xchg
movsb
add
dec
add
or
adc
pop
add
xchg
leave
jns
xor
jo
sub
icebp
or
dec
loope
aaa
sbb
testl
sub
lock
rcll
and
out
stos
in
cmp
mov
push
push
stos
pushl
pop
xor
mov
mov
test
push
pop
in
cmc
pop
lahf
scas
test
es
shll
cld
ss
mov
xchg
adc
lcall
inc
xor
cmp
mov
cmp
mov
jae
pop
jae
jle
fwait
push
fisubl
lret
pop
xchg
mov
cmp
xor
in
or
test
mov
cld
fisttpl
shr
xchg
pop
out
push
cmp
dec
mov
lock
stos
push
xchg
out
or
and
sbb
aaa
outsb
jnp
iret
cmc
insl
xchg
decb
dec
ss
inc
mov
sbb
or
mov
pop
lret
shlb
pop
jg
lcall
scas
dec
lahf
sbb
cmpb
hlt
sub
push
andl
lock
add
test
out
lea
mov
jns
in
xchg
inc
shlb
mov
out
mov
aam
xchg
or
mov
int3
cmc
pop
dec
leave
loopne
ds
test
aam
mov
push
inc
pop
pop
cmp
push
push
in
jo
dec
aaa
inc
lret
or
popf
mov
pop
mov
or
lods
or
add
dec
aam
inc
and
leave
shl
leave
mov
pop
mov
pop
int
jno
setge
push
jns
or
pop
out
dec
dec
rclb
leave
sub
cwtl
std
rcrb
or
lods
loopne
xchg
gs
pop
jge
ret
ja
and
jno
dec
aam
cmpsb
push
cmpsl
stc
incl
fistps
fs
add
mov
jecxz
es
jp
mov
mov
in
aad
loope
dec
xchg
cmp
dec
lahf
sub
dec
jge
clc
sarb
jae
out
pop
xchg
add
les
icebp
sub
sub
mov
movsl
add
xor
je
scas
movsb
clc
hlt
mov
push
scas
stos
in
inc
xor
das
sbbb
add
xlat
clc
icebp
adc
stc
int3
out
mov
int
sahf
mov
cmp
data16
arpl
das
jns
pop
addr16
pop
jle
lcall
mov
xor
out
notl
push
add
nop
daa
push
mov
xchg
xchg
mov
lods
xchg
pop
testb
int
sub
popf
dec
pop
or
lret
dec
filds
or
ret
inc
aas
mov
pop
ret
push
iret
mov
or
aas
jo
push
inc
push
pusha
aam
out
lahf
sub
xchg
inc
cli
dec
pop
mov
xchg
adc
cmpsb
jae
inc
or
mov
dec
mov
jb
ja
jae
jge
test
movsb
movsl
mov
aas
lret
icebp
and
pop
inc
or
mov
xchg
push
jg
loop
gs
scas
cmp
in
call
inc
loopne
enter
and
jle
imul
lods
xchg
jl
xchg
fs
cmp
sbb
jo
insb
lret
pop
fildll
mov
ficomps
jge
lds
shl
adc
test
inc
int
dec
stc
mov
bnd
jmp
or
pop
nop
push
pop
xchg
fisttpl
lock
out
mov
mov
sub
mov
xchg
dec
xchg
and
repz
and
std
and
shld
push
sbb
adc
push
jne
andl
scas
dec
push
add
xor
and
adc
push
sbb
negl
in
insl
std
sti
out
pop
jbe
xchg
lret
cwtl
in
mov
aas
aaa
pop
lods
data16
push
aas
fmul
cmp
mov
sbb
xchg
jae
cmp
xchg
scas
insl
ljmp
xchg
mov
or
jne
add
popa
sbb
add
movsb
jb
xchg
cmp
mov
int3
jbe
push
aam
clc
inc
enter
dec
and
push
insl
data16
mov
ret
repnz
aad
stos
sub
cmp
and
pop
inc
leave
push
ljmp
xchg
push
jb
movsl
jno
jno
daa
pop
pop
je
jge
xor
lods
xor
popf
jmp
mov
insl
in
push
repnz
fisubs
pop
outsb
mov
mov
mov
rorl
data16
pusha
push
sub
loope
dec
sbb
dec
dec
mov
imul
in
xchg
into
sbb
mov
xor
repnz
add
push
or
lahf
lret
sti
out
cld
prefetchwt1
or
incl
mov
bound
cmp
lcall
repz
sarb
iret
adc
fisubs
sub
mov
fcompl
rcl
mov
jge
paddd
adc
mov
push
outsl
sub
jbe
jg
cmp
and
push
and
and
out
aad
jmp
mov
push
imul
sbbl
push
push
jle
push
and
jno
xor
xor
and
mov
sbb
out
movsl
outsb
subl
rol
adc
lods
cltd
in
into
rcrb
or
pop
iret
adc
sbb
push
cmpb
pushf
push
pop
mov
dec
or
shrb
popf
mov
push
and
push
fcoml
test
xchg
neg
je
out
rclb
cmp
push
and
in
jns
call
mov
mov
jns
fldcw
or
xchg
sub
cld
dec
xchg
and
xor
inc
xor
push
adc
push
push
fisubl
gs
insb
or
jne
dec
js
insb
int3
lcall
icebp
jg
gs
mov
gs
add
pop
or
xor
scas
repnz
push
testl
ja
lods
adc
jns
sbb
stos
inc
mov
dec
test
out
test
inc
enter
and
push
and
rol
or
xchg
pop
in
outsl
or
push
mov
jecxz
in
xlat
mov
negb
or
jne
les
dec
pop
jp
idiv
sarb
mov
fwait
jmp
push
mov
push
in
xchg
ret
ljmp
flds
adc
add
pop
repz
mov
js
cli
cmp
or
fnstsw
jnp
shl
mov
mov
add
mov
sub
add
push
or
push
fisubrs
lds
repnz
adc
mov
les
nop
ljmp
data16
repz
out
rcll
or
push
enter
ja
jmp
dec
addr16
out
dec
mov
add
push
sbb
pminsw
enter
inc
adc
dec
xrelease
out
jmp
enter
outsl
xor
inc
hlt
fsub
xchg
daa
mov
xchg
xor
pusha
scas
sub
fisubs
gs
and
mov
repz
fadd
popf
mov
inc
pop
add
test
sub
dec
add
inc
daa
xor
pop
pop
movsl
push
mov
jg
xchg
xchg
aam
shlb
xchg
or
lret
or
add
push
sub
xchg
pop
xchg
xor
in
xchg
shl
cltd
bound
sub
fidivrl
inc
jno
loopne
and
lods
pop
mov
pop
cmp
mov
and
fwait
mov
jnp
in
leave
movsb
pushf
mov
outsl
lds
sbb
out
sbb
mov
mov
adc
notl
pop
pop
dec
ds
mov
pop
orl
and
test
out
les
cld
push
dec
addr16
mov
ja
xchg
cmp
lfs
push
dec
iret
inc
popa
pop
fidivl
ret
sub
and
outsb
adc
xchg
mov
cmp
clc
ljmp
pop
das
gs
data16
lods
int
dec
or
ljmp
jb
stc
inc
inc
std
adc
ret
sbb
fyl2xp1
popf
cmp
sub
imul
mov
pusha
leave
or
jmp
clc
mov
push
cli
mov
xchg
adc
push
push
mov
sub
aas
push
leave
dec
out
mov
movsl
mov
subl
movsl
fisubrl
add
enter
inc
sbb
or
movsb
sbb
mov
jl
cmp
hlt
jle
push
push
mov
pusha
adc
jae
inc
add
aad
stos
arpl
xchg
sti
stc
mov
jne
xor
dec
ds
pop
inc
insl
icebp
sub
mov
and
stos
inc
stos
add
cmpsb
loopne
jg
push
xchg
inc
clc
jnp
sar
inc
dec
dec
and
cltd
push
hlt
jb
out
inc
scas
pop
or
test
shl
pop
and
push
xor
cmp
mov
xchg
pusha
aas
xor
jl
mov
mov
fsubl
mov
and
push
sub
lea
xlat
or
jp
mov
mov
out
aaa
inc
aam
inc
adc
sbb
jge
jns
mov
or
mov
xor
sub
bound
and
dec
mov
call
add
lcall
cmpsb
xor
mov
pop
mov
or
inc
mov
push
add
jae
sub
cmp
cmpsl
nop
int3
lret
sarb
in
cmp
cmpsb
adc
or
scas
mov
xchg
cmp
jbe
or
iret
sub
push
inc
sub
and
dec
mov
dec
outsl
fdivr
xchg
stos
push
jbe
and
or
sti
add
xchg
fcoml
xchg
rclb
jbe
mov
clc
pop
xor
mov
inc
decb
or
push
mov
js
mov
xchg
into
add
call
adc
mov
in
fwait
push
sub
jle
sub
out
scas
test
iret
aas
jge
aam
ret
jns
pop
jbe
jno
mov
ret
fnsave
inc
test
fadd
enter
in
lret
pop
mov
data16
leave
fsts
jp
jb
inc
inc
and
out
insb
xchg
bound
clc
jmp
divl
mov
add
aaa
pop
mov
stos
xchg
push
xchg
jb
stc
pop
mov
and
push
orl
sbb
lock
sub
mov
mov
fwait
mov
movsl
xorl
xchg
aaa
adc
int3
scas
je
cmpsl
in
pop
inc
adc
sbb
fs
pop
rcll
popl
sbb
rcrl
out
pop
ljmp
test
fldcw
xor
icebp
sbb
cmp
mov
out
push
fcomi
emms
push
subb
out
shl
stc
add
sar
into
mov
or
or
cmc
or
or
js
xchg
pop
sbb
gs
push
mov
rcll
adc
and
cmp
xor
mov
mov
mov
xchg
push
mov
add
sahf
int3
ficompl
push
xor
inc
loopne
gs
fdivl
rcll
xchg
ljmp
push
fldt
xlat
pop
sub
fiadds
dec
and
mov
out
pop
adc
xchg
add
and
jecxz
sub
xor
jns
stos
add
push
test
arpl
push
fstpl
shll
fidivl
call
popf
or
jne
mov
idivl
xchg
mov
sbb
jae
mov
fnstsw
out
jmp
mov
push
aaa
xchg
sub
push
pop
addr16
out
lock
xor
pop
adc
in
xor
rclb
cmpsb
jg
adc
lret
inc
xlat
push
rorl
mov
enter
loop
pop
shrl
add
jne
inc
mov
cltd
shrl
mov
jns
mov
fcoms
inc
lods
mov
jnp
out
jns
cltd
mov
push
leave
cmp
mov
lcall
mov
popa
scas
lods
cmpsb
imul
xlat
aam
jo
push
or
cmp
jo
and
and
leave
inc
or
leave
jae
daa
xor
cmc
push
pop
hlt
and
and
aas
mov
add
sbb
add
test
bound
xor
aam
xchg
jbe
fs
mov
aas
sub
lahf
arpl
inc
adc
push
fmuls
push
mov
rcrb
push
push
mov
out
jg
add
jb
ret
mov
push
mov
in
and
inc
adc
add
fs
mov
pop
inc
inc
in
sarl
test
sti
jl
push
pop
insl
xor
sub
daa
pop
mov
mov
xor
jne
adc
add
mov
and
nop
aaa
shll
sbb
cltd
mov
mov
mov
repz
imul
sub
and
add
repz
or
add
mov
mov
sub
or
popa
imul
xchg
aam
mov
xchg
aam
daa
mov
xor
cmpsb
out
mov
dec
jae
xchg
mov
fisttpl
cltd
sti
subl
pop
fists
adc
mov
addr16
cmpsl
lret
cli
gs
or
mov
insb
gs
push
dec
imul
xchg
mov
loope
sub
fs
enter
adc
stc
mov
xor
cli
aad
mov
sti
sub
es
xor
addr16
xchg
mov
jb
out
les
sbb
fsubrs
or
daa
sbbl
lcall
mov
sub
sub
sbb
add
push
int3
jae
dec
push
adc
or
mov
lcall
lret
fdivl
mov
testl
mov
push
ljmp
mov
xor
jmp
loope
jnp
repz
dec
sbb
mov
jp
fwait
orw
xchg
mov
pop
xlat
mov
dec
popa
push
ljmp
mov
fcomps
sub
in
xor
mov
and
in
jmp
ds
out
xor
push
cmp
scas
lods
icebp
loop
scas
sub
push
pop
into
shll
and
sbb
pop
shl
lock
or
pop
inc
stc
xor
mov
les
in
mov
fmul
push
mov
adc
and
push
cmp
jg
std
dec
jno
mov
mov
pop
jne
or
sub
packssdw
repnz
ret
test
sbb
pop
dec
mov
cli
jae
adc
daa
jmp
cmp
shll
and
jle
mov
push
sub
adc
fstpl
sbb
int
jmp
js
xor
in
insl
push
fcmove
int
outsl
add
fldl
mov
mov
xchg
adc
sub
lcall
cmp
dec
testl
adc
jae
into
sub
mov
fcoms
in
mov
xor
insl
andl
mov
xchg
shl
sbb
cmpsb
jae
cli
lock
or
jne
push
hlt
push
push
pop
pop
jp
imul
test
jbe
bound
sub
or
fdivp
lods
cmp
into
mov
aam
xchg
dec
add
inc
pop
jle
lea
jecxz
sub
mov
cmp
mov
mov
dec
jnp
neg
jbe
imul
icebp
dec
fisubs
pop
leave
daa
add
add
daa
loopne
sbb
out
and
push
out
mov
stc
mov
sub
insl
stos
aas
scas
inc
insb
test
es
mov
outsl
or
mov
mov
imul
inc
xorl
mov
xchg
xor
ljmp
mov
adc
sub
fnstsw
dec
fisttps
mov
ret
out
xchg
sti
jg
lds
js
sbb
jl
cmp
daa
inc
mov
lds
and
jae
movsl
cwtl
jo
in
pop
xor
test
dec
jmp
mov
sub
push
inc
push
cmc
fisubs
push
lretw
push
push
pusha
xchg
jg
cwtl
int3
mov
rclb
jmp
lret
mov
inc
pop
xchg
aaa
fstl
jnp
jns
or
add
subl
jne
xor
mov
cmpsl
cs
sti
iret
push
loop
push
pushf
xchg
sbb
mov
pop
xchg
popa
in
jno
cmp
xor
xor
mov
push
jo
cmpsb
xlat
out
sub
push
sub
adc
mov
out
psrad
pop
cltd
push
sarl
fwait
pop
jne
pop
stos
sub
arpl
out
aas
popa
aaa
mov
fstps
inc
lret
loopne
inc
icebp
mov
lahf
and
lret
or
inc
dec
call
in
js
push
pushf
sbb
fidivrs
sti
pop
stos
and
add
inc
add
popa
scas
das
pop
call
sarb
shr
rorl
pop
jne
cwtl
gs
push
adc
jmp
test
das
in
out
movsb
mov
pop
js
push
sti
out
dec
cli
mov
or
xchg
xchg
inc
push
sbb
and
mov
sub
pop
movsl
scas
jns
lcall
jge
push
addr16
leave
lret
pop
filds
mov
in
jmp
xchg
data16
and
jnp
pushf
adc
fldt
pop
mov
cs
adc
dec
adc
lcall
popf
pushl
and
cmp
fisubrl
jnp
jnp
or
jp
out
sub
inc
jns
pop
jae
mov
repnz
pop
out
fidivl
mov
and
cmp
call
decl
push
aad
pusha
or
push
sahf
pop
adc
scas
pushl
lcall
je
and
jmp
in
adc
mov
js
mov
xor
jnp
lahf
lahf
sub
bound
push
xchg
aad
fsubl
das
hlt
pop
sbb
cmp
mov
dec
or
gs
pop
adc
adc
jle
jmp
ret
nop
fisttpl
lds
sub
pop
leave
fstps
adc
xlat
and
or
or
push
and
add
cmp
stos
jp
sbb
popa
xor
add
sbb
pop
test
mov
and
shlb
repnz
lods
mov
mov
mov
mov
sarl
out
jo
and
sbb
adc
sub
inc
sbb
fnstcw
mov
or
pop
cli
and
mov
and
push
mov
and
cmpsl
dec
shrb
sbb
pop
xchg
inc
mov
xchg
sbb
fisttpl
gs
mov
inc
shlb
cmpsb
cmp
test
test
cmc
adc
xchg
push
pop
mov
xor
ret
out
add
sub
lret
jae
or
dec
xchg
bts
jae
test
dec
fsubrs
jecxz
xchg
pop
inc
outsl
or
adc
mov
lcall
shll
xor
sbb
mov
push
je
dec
into
fildl
mov
dec
mov
out
cli
jo,pn
jge
inc
in
fcom
dec
add
repz
push
add
fcmovne
rolb
ror
pushf
jns
push
mov
jge
add
js
stos
fwait
inc
loop
xorb
push
cmp
cmpsb
mov
mov
inc
push
clc
add
jns
inc
lea
popa
jo
push
push
cmp
adc
aad
lock
pop
outsb
pop
jo
test
cmp
mov
call
jae
stos
movb
pop
cmp
fwait
in
dec
sbb
cld
jae
aam
dec
cmp
stc
pop
loop
fists
cmp
and
push
xchg
lcall
mov
inc
ja
xchg
pop
outsb
test
cmp
jg
add
mov
int
xchg
jmp
sub
or
dec
pop
sbb
xchg
fcmove
sub
xchg
adc
jb
scas
mov
mov
in
cmpsb
cmp
adc
sub
add
add
iret
adc
mov
dec
das
pop
inc
in
jge
add
jmp
jle
arpl
mov
imul
add
mov
out
loope
imul
movsb
adc
movsl
fcomps
repz
in
fnstenv
pop
sbb
dec
shlb
sarl
mov
add
scas
mov
loope
cli
lods
jo
call
cld
outsb
mov
popa
xlat
pop
or
push
leave
jle
jo
in
pop
cmp
mov
icebp
pop
xor
pop
in
in
enter
lods
jg
adc
stc
jns
push
pushw
aas
adc
jmp
jb
daa
pop
sub
mov
outsl
xor
in
je
rcll
mov
je
popf
sarb
dec
popa
or
scas
sbb
jmp
add
or
pop
lret
add
mov
fldcw
movsl
mov
daa
pop
sub
mov
sbb
lahf
mov
in
mov
adc
jl
sub
fs
testl
sub
es
ret
sbb
pop
enter
mov
or
cwtl
xor
sbb
adc
pop
fs
sub
movsb
jne
test
test
xchg
andl
inc
adc
pop
aaa
xchg
jno
mov
ss
add
jmp
sahf
rolb
pop
jo
ds
cmp
jb
inc
icebp
or
sbb
cmpsb
enter
lods
mov
enter
jmp
xchg
xchg
mov
cli
pop
xchg
movhps
in
mov
enter
cltd
pop
jno
cmpsb
or
cmp
sahf
pop
les
push
or
or
outsb
outsl
int
outsb
je
jmp
dec
shl
rclb
inc
mov
or
jae
lds
cld
sub
outsb
xlat
jg
push
adc
mov
enter
pushw
int3
cmp
rorb
pop
je
inc
cmp
sarl
or
and
addl
lret
cs
sbb
push
jb
and
and
add
fcmovnb
xor
js
fadds
push
push
adc
sub
jle
and
lods
pop
dec
jb
add
sbb
data16
dec
and
mov
lea
adc
and
cmp
sub
sub
xor
xlat
mov
pop
inc
adc
sbb
dec
inc
sbb
or
cmp
cmp
or
push
outsl
pop
test
jbe
dec
data16
adc
fs
scas
add
sbb
jge
push
test
dec
je
imul
or
xor
pop
cmp
push
pop
jp
pop
inc
and
pusha
ret
lret
outsb
mov
dec
xchg
xor
or
pop
jge
or
lahf
fwait
sbb
popf
adc
or
inc
mov
sbb
mov
xchg
rol
cmp
pop
mov
or
adc
clc
insl
lcall
ljmp
add
inc
adc
dec
sbb
test
sbb
jge
add
dec
adc
mov
stc
or
js
xor
dec
pusha
push
mov
popf
dec
data16
cs
dec
jl
sbb
or
jbe
dec
movsb
sbb
xlat
or
mov
fidivs
dec
pop
or
push
jns
mov
and
fnstsw
adc
sbb
mov
push
js
dec
sbb
inc
or
les
push
pop
repz
mov
pop
and
jp
lods
inc
add
outsb
mov
cmp
xor
and
add
add
push
sarb
dec
push
sti
or
fs
push
daa
fs
popa
pop
adc
sbb
and
insb
or
hlt
into
es
addr16
cli
jl
fldt
adc
xor
cmp
insb
unpckhps
fs
dec
es
fs
negb
jne
popf
pop
cmp
cmp
or
push
mov
or
int3
pop
ret
daa
fs
lods
loop
or
mov
pop
andb
push
and
iret
and
mov
lock
sbb
pmuludq
push
pop
pop
and
mov
pop
push
aad
pop
lahf
cmp
sbb
and
and
sbb
daa
mov
adc
lock
jg
pop
add
imul
repnz
ret
xchg
in
push
inc
and
sub
or
xchg
fmull
adc
jns
pop
scas
fisubrs
popf
jnp
inc
or
push
and
mov
and
and
cmp
mov
push
lods
cmp
jnp
xor
mov
push
pop
or
popf
adc
int3
mov
pop
or
pop
mov
mov
int3
outsl
cmp
cld
inc
std
sub
mov
gs
pop
insb
jns
outsl
mov
add
and
pusha
and
fs
dec
pop
insb
int
mov
jg
jae
sbb
in
and
pop
es
jle
xor
cltd
xor
jo
xor
repnz
jne
sbb
xchg
mov
mov
mov
push
imul
lret
je
push
sbb
std
in
cmp
xor
cmpsl
mov
cmc
ss
add
push
mov
enter
push
imul
addr16
int3
loope
gs
shll
mov
shrl
inc
xlat
cmpsb
insb
mov
or
xchg
sbb
push
or
xor
push
mov
sbb
pop
stos
mov
xchg
cltd
jne
inc
repnz
mov
cmc
add
and
in
repz
or
fldl
and
mov
lcall
cmc
sub
in
sbb
in
sti
pop
and
jl
cmp
mov
jae
mov
in
mull
pop
xchg
lock
lods
push
jne
jmp
scas
dec
pop
int
inc
pop
stos
addr16
xor
leave
hlt
xor
mov
nop
lret
shll
out
int
insl
fnstsw
stc
cmp
cmp
addr16
sub
aaa
cmc
xchg
and
fimuls
pop
xlat
cmp
sub
push
inc
jp
mov
fcmovb
sbb
rolb
adc
inc
add
gs
cmp
dec
mov
out
ret
sub
test
jge
mov
popf
fwait
cmpsl
sub
jae
movsl
call
movsl
and
je
sbb
adc
xor
popf
xor
dec
pop
mov
popf
jne
popf
fmuls
hlt
call
arpl
dec
mov
repnz
and
xchg
inc
fldt
in
ror
notb
aad
ds
fstps
or
cmc
pop
pusha
dec
lods
out
xchg
icebp
ja
lret
ljmp
mov
mov
cltd
add
stc
inc
adc
xchg
add
cmp
mov
pop
dec
popa
mov
dec
popa
lahf
nop
sbb
test
cmpsl
mov
cmp
cli
inc
push
and
jmp
sbb
mov
inc
cmpsb
stos
mov
loope
pop
mov
call
cli
sub
dec
loopne
and
mov
inc
pop
mov
addr16
push
xor
pop
jp
dec
loope
outsb
nop
cli
mov
test
dec
mov
clc
popa
in
popf
in
adcb
mov
add
mov
shll
xor
es
insb
into
push
rcrl
outsl
les
sbb
fwait
xchg
test
shlb
cltd
lret
jl
xchg
mov
popa
cmp
lods
jg
orl
lret
jae
test
cli
xor
push
xchg
pop
dec
insl
cmp
pop
or
add
cld
std
stos
jge
aam
je
lods
fidivl
jnp
add
pop
addr16
jp
repz
xor
inc
nop
int3
daa
leave
mov
xlat
pop
out
fwait
sbb
or
aam
rcl
jne
mov
inc
lock
jle
mov
mov
stc
rcrl
mov
jl
imul
jge
or
jle
enter
lret
imul
std
push
dec
test
hlt
pop
inc
cmpsb
lock
sbb
in
adc
pop
mov
int3
add
pushf
pop
sbb
stos
or
lods
iret
pop
dec
dec
jo
mov
push
movsl
xchg
and
scas
jg
and
adc
daa
sub
cwtl
pop
inc
sbb
jle
and
or
adc
sbb
int
int3
cld
inc
pop
cmpsl
mov
cmp
fildll
insl
sbb
or
int3
jp
pop
xorl
lods
lods
fisttpl
mov
nop
mov
adc
call
and
cld
cmp
sub
mov
dec
pop
push
mov
stos
movsl
out
pop
mov
ljmp
repz
mov
fcomp
mov
and
pop
imul
mov
loop
mov
sub
or
jns
dec
or
es
cmp
rol
jno
sti
cs
cmp
mov
sub
sti
fsubrl
mov
cmpsb
pop
xor
cwtl
in
mov
lock
add
mov
cltd
scas
mov
stos
adc
test
int3
and
dec
or
inc
sub
ds
ja
xor
loopne
popa
mov
cli
push
and
and
js
adc
icebp
and
mov
fimuls
les
loopne
ret
pop
rcll
jae
mov
in
push
xor
push
leave
jmp
aad
imul
andl
ret
jno
in
das
or
adc
cltd
dec
lods
jae
fwait
lds
ds
gs
cmpsb
iret
xchg
shrl
je
pop
lods
jge
push
cld
cmp
inc
mov
sub
add
jo
into
fcomp
or
scas
les
pop
inc
and
adc
ss
mov
loopne
mov
mov
cs
arpl
jns
adc
call
inc
jp
xor
pop
rcl
and
mov
outsb
jmp
popf
cmp
fisttpll
and
jecxz
fistpl
mov
int
pushf
cmpsb
mov
and
out
sbb
inc
push
fdivs
or
cs
pusha
test
mov
pushf
int
popa
mov
gs
out
insl
push
lods
pushf
xchg
mov
js
sbb
imulb
in
mov
movsb
inc
inc
mov
mov
jmp
loop
ret
xchg
jns
dec
jp
mov
xchg
cmp
rclb
inc
test
xor
jns
ffreep
mov
mov
sub
jb
es
push
sub
mov
add
mov
jl
inc
sbb
push
jp
mov
xor
mov
outsl
mov
inc
jno
lret
sbb
mov
fs
jle
mov
nop
xor
sub
popf
pop
pop
mov
incl
mov
jg
stos
push
mov
xchg
out
add
out
mov
push
cli
push
bound
xchg
in
movsl
or
movsb
popa
mov
dec
js
mov
mov
jg
std
arpl
out
xor
mov
mov
jo
sbb
mov
push
sahf
decb
clc
pop
add
cmp
mov
sbb
cmpsl
pop
lods
add
ljmp
xor
push
rol
jge
js
xchg
scas
cltd
or
aad
pop
dec
int3
or
subb
jne
and
js
test
push
mov
movl
stc
clc
sarb
js
and
pop
push
rorl
js
cwtl
jo
repz
pop
repz
adc
fwait
cmpsl
jge
mov
add
jg
dec
mov
incl
xchg
lods
jns
add
sarb
add
jecxz
mov
jo
pop
fdivr
or
mov
repz
movb
adc
rcll
inc
sbb
data16
sub
decl
sbb
jle
push
inc
xchg
mov
loop
loopne
jo
lahf
dec
pop
rcrb
hlt
pushl
inc
mov
jno
std
cmp
test
stc
push
test
sbb
xchg
and
push
in
arpl
gs
or
jnp
scas
cmp
call
adc
pop
mov
mov
cmp
jg
lahf
subl
push
jbe
bound
pop
lahf
jae
mov
mov
into
insl
sub
call
sbb
stos
cmpsl
mov
stc
fistps
sbb
or
cmpsb
add
dec
jl
mov
sbb
pop
test
inc
imul
xchg
pop
dec
notl
or
or
fcmovnb
clc
jp
mov
push
adc
cwtl
cmp
dec
xor
gs
and
jg
cltd
jge
stc
stc
cmp
cmpsl
mov
adc
dec
test
dec
incl
orb
lahf
rolb
sub
push
jae
mov
push
inc
inc
test
xchg
pop
call
dec
xor
or
or
clc
mov
add
aas
jns
out
push
sub
push
mov
cltd
lods
adc
sub
cmp
push
inc
lea
call
mov
mov
out
dec
jns
inc
stos
jns
aad
and
pop
dec
scas
add
out
mov
xchg
repz
notb
out
mov
mull
jae
jp
jnp
pusha
sti
mov
in
mov
nop
mov
fldcw
movb
std
loopne
stos
js
push
adc
adc
push
xchg
jbe
sar
pop
pop
iret
and
cwtl
push
adc
mov
pop
push
loope
out
cs
jae
outsl
jo
add
arpl
jne
mov
lahf
fbld
lcall
mov
stos
cmc
dec
pop
scas
adc
or
call
mov
popf
inc
adcl
jns
pop
mov
lcall
out
shl
or
mov
pusha
inc
fs
cmpsl
cmp
cmp
dec
mov
adc
repnz
cmpsb
jmp
push
adc
call
dec
mov
flds
lret
inc
sbb
loope
je
dec
adc
mov
insb
or
int
inc
pop
push
lea
sahf
decb
test
xchg
repz
push
pop
mov
stos
jne
int
movsl
leave
and
push
xor
xchg
cmc
pop
ja
fimuls
pop
icebp
lods
test
test
inc
or
xlat
test
movsb
data16
adc
xorl
inc
ljmp
arpl
negb
fsubrs
jae
or
aam
dec
push
in
dec
es
pusha
movsb
aad
test
cmp
push
insl
mov
pusha
pop
or
add
cmpsl
jl
xor
jl
lock
or
iret
fcomps
mov
mov
and
and
mov
xchg
sub
cmp
inc
stos
das
daa
mov
clc
cmp
push
scas
mov
mov
dec
sbb
jnp
push
and
adc
mov
sub
cmpsb
call
jae
mov
inc
ret
test
movsl
in
jb
in
inc
in
push
or
jmp
test
es
sbbl
rorb
addb
daa
or
jge
jo
dec
pop
test
incl
inc
jae
lret
adc
push
xor
aad
dec
out
cmp
mov
lret
sti
in
pop
jecxz
loopne
lods
jno
or
dec
pop
sub
cmpb
fcomps
mov
sbb
xchg
push
sbb
or
cwtl
lahf
fldt
vphaddubd
stos
and
pop
and
cld
inc
push
cs
cwtl
aad
mov
jmp
cwtl
out
ljmp
fisubs
lds
mov
push
stos
mov
orl
sub
mov
int3
mov
jne
vdivss
orl
insl
ja
cmp
lock
filds
mov
xchg
xor
push
fs
xlat
sub
out
shll
jns
inc
int
decb
add
bound
sbb
pop
push
leave
mov
test
cmp
test
sbb
lahf
movsb
mov
xchg
push
push
out
mov
adc
rcl
jae
mov
cmp
lcall
stos
lods
xor
mov
adc
dec
mov
cwtl
xchg
jo
fsubr
cmp
pop
clc
stc
adc
mov
push
cmp
xchg
xchg
inc
cmp
sub
ss
aam
aaa
xchg
loopne
fmull
add
cld
add
jmp
dec
mov
and
push
mulb
push
sub
dec
cltd
int
push
xor
fadd
cmp
mov
inc
dec
cmp
xchg
inc
add
mov
fsubrp
add
negl
pusha
mov
out
lock
ja
dec
fidivrs
inc
sub
jns
int3
inc
sub
mov
sahf
cmp
push
sub
mov
mov
in
shl
and
ficoms
test
mov
ljmp
std
fistpll
add
sub
popa
fsub
pop
fs
xor
in
and
imul
sbb
mov
pop
loop
lahf
fnstcw
les
aas
inc
sti
adc
xchg
dec
mov
sbb
fisubl
in
cli
fnstcw
pop
pop
cmpsl
out
xchg
cli
out
cmp
xor
cmp
cmp
enter
xchg
pop
mov
inc
nop
add
aaa
inc
hlt
mov
xor
mov
push
test
and
dec
js
test
jmp
mov
jne
icebp
aas
stc
pushl
sub
sahf
mov
cltd
push
cmp
outsb
and
dec
sahf
and
jp
jle
mov
lret
ficoml
dec
idivl
mov
pop
test
add
stos
xlat
jno
push
test
pop
sub
sbb
mov
add
xchg
inc
sub
addr16
icebp
jl
cmc
pop
push
fildll
cmp
mov
sbb
jl
mov
ljmp
jp
mov
pop
jmp
xchg
stc
std
inc
inc
pusha
pop
jl
xor
cld
std
ja
inc
fwait
mov
ljmp
jge
mov
bound
xorl
jae
ret
add
lods
mov
sbb
mov
pop
les
pop
add
mov
rorl
decb
movsl
push
push
push
mov
add
sbb
gs
mov
mov
cwtl
sbb
sbb
sahf
adc
pop
inc
lret
test
cmpsl
int3
hlt
js
stos
add
sub
sbb
cmpsb
jl
cmpsb
jb
adcb
fldcw
xor
shlb
xchg
fs
insw
std
popa
imul
ror
adc
into
inc
mov
call
mov
sub
insl
add
xchg
out
add
jge
in
movq
iret
ja
fs
jnp
test
ret
mov
pop
shr
int
loopne
insl
sahf
into
orb
cmp
xchg
add
test
addr16
fsts
pop
loop
imul
mov
mov
lcall
mov
mov
mov
sbb
and
jge
test
jne
test
out
leave
push
pushf
jne
or
pusha
lods
idivb
jl
pop
gs
daa
cwtl
iret
jbe
or
inc
dec
push
ljmp
test
push
testl
testl
push
adc
mov
loope
xchg
les
jl
popf
sub
mov
and
loop
add
outsb
xchg
sbb
subb
jbe
lret
xor
or
je
mov
mov
sbb
fidivrs
mov
mov
pop
sahf
sbb
fisubrs
lods
dec
push
imul
and
add
lcall
scas
push
jl
rcrl
stos
sbb
jns
xchg
pop
fldt
shl
push
aas
call
sahf
cmpsl
cmpsb
inc
movsb
add
dec
jecxz
nop
loope
xchg
sbb
jne
jp
cwtl
fsubl
pop
xchg
add
cmp
cmpb
mov
push
cltd
cmc
cmpsl
add
or
scas
sub
cmp
sbb
push
add
xor
cmpsb
negl
mov
adc
mov
inc
in
jbe
jo
hlt
sbb
je
fs
vpcmpeqd
or
adc
pop
push
pop
movsb
push
movb
jne
xchg
out
add
sbb
addr16
fidivs
pop
mov
jmp
cmp
imulb
add
fs
in
test
aas
nop
jg
test
mov
imul
jno
adc
popf
jmp
xchg
mov
cmp
push
adc
sbb
mov
and
cmp
mov
idivl
std
into
xor
mov
call
mov
rcll
in
rcrl
stos
inc
cmp
xchg
mov
clc
inc
lret
push
inc
fldcw
mov
test
and
pushf
jmp
out
clc
test
sub
inc
sbb
dec
incb
loope
dec
lds
fisttps
sub
jg
mov
in
fdivrl
push
pop
xor
sarb
mov
lea
mov
int
sbb
adc
bound
outsl
pushf
jge
cwtl
or
out
adc
xor
sbb
mov
mov
cmp
movsl
out
add
lds
fwait
addr16
pushf
xor
inc
push
mov
push
inc
cmpsl
in
fimull
dec
or
or
sbb
mov
out
cltd
add
inc
xlat
rolb
in
inc
pop
in
jg
leave
aam
sub
mov
jnp
cmpl
divb
inc
push
xor
mov
sub
xchg
mov
pop
inc
orb
push
mov
jbe
imul
add
push
icebp
adc
cmpsb
repz
in
push
stc
pop
scas
test
outsl
mov
in
push
mov
scas
dec
and
pop
sti
cli
dec
jae
dec
lods
movsl
xor
xchg
and
dec
jne
mov
inc
push
mov
xchg
xorl
adc
inc
mov
jo
mov
inc
sbb
addr16
jge
mov
xchg
add
push
inc
inc
stos
test
mov
mov
and
pushf
xlat
push
dec
loop
mov
or
jmp
js
arpl
inc
pop
add
inc
and
xor
cmp
or
and
mov
mov
push
fistps
xchg
test
test
cmp
mov
adc
pop
fs
fdivrs
inc
movsb
and
jmp
test
cmp
cwtl
iret
inc
sarb
rolb
jmp
sub
orb
mov
mov
lods
les
insb
test
ja
lds
xor
pop
clc
test
call
popa
adc
mov
push
mov
shlb
push
pop
mov
cmp
jne
fs
mov
push
fists
pop
test
loopne
pop
out
clc
ja
popf
adc
add
das
push
aas
out
out
push
adc
inc
and
xchg
jmp
cmp
mov
or
or
mov
mov
pop
out
mov
xor
sub
inc
je
lock
pop
adc
mov
mov
lods
enter
fcoml
adc
mov
or
xorb
adc
ss
push
jnp
pop
dec
adc
mov
movsl
jge
fwait
or
stos
mov
mov
les
jl
aam
insb
out
movsb
ja
in
adc
aad
and
iret
xor
mov
movsl
add
aam
mov
pop
adc
pop
test
mov
jl
adc
pop
fs
or
and
and
and
adc
and
cwtl
jmp
cmp
mov
or
movsl
mov
inc
or
mov
mov
or
xchg
sarb
jmp
dec
adc
mov
xchg
push
aam
mov
mov
mov
jo
enter
fdivl
loope
adc
fnstcw
lret
cmp
andl
jge
fwait
mov
movsb
jmp
hlt
adc
enter
mov
or
aam
mov
lds
cmp
mov
mov
jge
fwait
mov
or
test
loopne
push
pop
lock
jg
mov
sbb
rcrl
fld1
loop
out
xchg
shrl
push
mov
test
adc
lods
mov
pop
ds
or
pop
add
xor
in
adc
sub
lret
aas
jg
cmp
jmp
push
adc
mov
andl
aam
mov
mov
rclb
push
out
mov
or
adc
lret
fdivl
int3
mov
or
fwait
mov
inc
sbb
push
fucomip
pop
inc
test
mov
pusha
mov
pop
fs
adc
aad
and
inc
pusha
and
adc
jecxz
or
mov
movsb
test
push
out
in
ja
xchg
adc
ja
icebp
or
pop
xor
mov
and
lea
enter
clc
test
in
out
sub
imul
dec
push
mov
enter
mov
adc
mov
lret
and
jo
enter
clc
add
mov
xchg
push
pop
fdivrs
pop
jmp
enter
mov
pop
or
aam
mov
out
push
jecxz
or
fwait
push
insl
fsubrs
push
jmp
cld
adc
jnp
icebp
mov
or
aam
mov
fsubrl
and
decl
or
xor
mov
or
movsb
pop
sbb
pop
mov
outsl
movsl
cltd
mov
aam
mov
rorl
aas
cs
or
notl
jmp
or
mov
mov
aam
mov
lea
xor
adc
daa
adc
cmp
filds
cld
test
xchg
out
sub
mov
cmpsl
ds
mov
inc
push
test
shlb
push
pop
mov
or
mov
cmpsl
dec
fcmove
es
cmp
pop
jl
lock
movsl
or
aam
mov
inc
sbb
push
fcomip
pop
dec
test
mov
push
in
adc
aas
push
leave
stos
lret
and
pop
xchg
out
add
notl
jmp
or
test
loopne
movsl
movsl
mov
cltd
aam
mov
stc
mov
or
test
and
push
cmp
dec
and
jmp
sub
orb
mov
mov
xchg
int3
mov
sbb
mov
cmp
adc
sub
ja
add
xchg
xchg
push
pop
fdivrs
inc
jmp
int3
adc
pop
movsl
in
adc
and
lret
sbb
jmp
add
lahf
mov
mov
pop
call
movsl
orl
das
push
enter
and
out
add
sub
mov
add
mov
mov
push
movsl
xchg
mov
adc
pop
push
filds
shrb
js
lock
pop
adc
insl
mov
mov
lods
enter
fcoms
adc
lods
mov
cmp
adc
das
dec
insb
and
jmp
dec
adc
mov
movsl
jge
xchg
or
cmpsl
mov
mov
mov
je
int3
mov
sbb
adc
aas
jo
stos
cs
andl
jne
lahf
mov
mov
pop
hlt
adc
les
test
add
aad
mov
aam
ret
push
and
dec
and
jmp
xor
mov
mov
movsl
aam
mov
test
pop
or
cwtl
inc
rorb
jmp
dec
adc
mov
jge
xchg
or
mov
push
ffreep
pop
js
shlb
sbb
adc
cmp
mov
rorl
out
mov
jno
mov
mov
out
in
ja
lods
adc
ja
cmc
or
pop
xor
and
xchg
jne
xor
and
adc
pop
and
add
mov
mov
pop
or
mov
mov
cmp
fmul
fadds
enter
cld
pop
push
adc
mov
lahf
movsl
insl
mov
mov
movsl
sarb
test
ja
fsts
lret
rcr
insb
adc
mov
movsl
add
aam
mov
push
or
mov
test
mov
dec
cltd
adc
or
pop
push
rcr
and
sbb
ss
fistpll
sbb
sub
addb
ja
mov
inc
movsl
mov
ja
cmc
fcomps
or
xor
nop
jnp
inc
pusha
leave
cmc
pop
xchg
fisttpl
sub
pop
and
cmp
mov
mov
inc
or
mov
mov
xor
mov
cmc
imul
ja
add
mov
scas
push
pop
fdivrs
pop
jmp
int3
adc
pop
movsl
loope
adc
rcl
and
xor
ja
loope
pop
call
xchg
gs
mov
dec
inc
shlb
jmp
mov
pop
movsl
rorl
aaa
movsb
xor
fsubr
jo
enter
ds
or
xchg
mov
jmp
clc
adc
jnp
lea
das
mov
fsubl
adc
loope
pop
call
xchg
gs
mov
pop
inc
hlt
and
enter
fcoml
sbb
mov
or
fmul
fld
push
ja
add
andl
push
pop
fdivrs
inc
jmp
int3
adc
or
cmp
out
insb
ja
adc
mov
orl
fcoms
movsb
jmp
in
adc
les
lea
pop
mov
lds
inc
ds
fisttps
sub
pop
and
pop
add
mov
mov
inc
or
mov
mov
xor
cwtl
add
aas
jge
xchg
mov
mov
jns
lahf
push
imul
and
jnp
pop
rclb
mov
jae
cmc
mov
or
aam
mov
xor
fs
mov
push
fistpll
pop
mov
adc
inc
lods
adc
jae
cmc
or
sub
xchg
and
inc
fs
adc
fisttps
in
pop
mov
mov
mov
fs
fsubs
inc
mov
jnp
pop
mov
and
pop
enter
clc
out
push
ja
jns
lahf
ds
mov
mov
mov
inc
dec
inc
shlb
jmp
lods
adc
andb
lds
loop
les
mov
movsl
jno
xchg
popa
aam
mov
dec
in
inc
pop
js
aam
insb
out
test
add
adc
and
xor
js
lock
mov
scas
push
pop
fdivrs
inc
jmp
aam
insb
mov
or
aam
xchg
mov
cmp
mov
mov
popa
fcoms
test
loopne
pop
pop
hlt
adc
enter
mov
or
aam
mov
leave
pusha
pop
movl
repz
insl
add
mov
test
mov
js
adc
pop
fs
fnstcw
out
out
fstps
pop
adc
inc
pop
and
add
mov
mov
aam
mov
icebp
lods
mov
cmp
cwtl
mov
add
clc
test
call
insl
adc
mov
push
mov
int3
and
jnp
pop
mov
or
andb
rorl
shr
ja
sbb
mov
xchg
push
push
fsubs
push
jmp
rclb
mov
jae
cmc
mov
or
aam
mov
xor
fsubl
mov
decl
or
xor
mov
or
pop
sbb
push
mov
push
movsl
xchg
mov
mov
bsr
mov
mov
cmp
imul
pop
nop
test
test
cmp
mov
adc
pop
fs
fdivs
inc
mov
xor
mov
inc
pusha
cmp
sub
pop
pop
nop
test
mov
mov
mov
inc
movsl
or
jg
inc
mov
jnp
pop
mov
sub
xlat
cmc
test
jbe
les
in
pop
mov
push
aam
mov
mov
mov
js
int3
mov
sbb
adc
aas
fs
adc
iret
fsubrl
les
mov
mov
dec
in
inc
pop
js
shlb
sbb
adc
sub
ja
lea
movsl
sub
mov
popa
cmp
test
in
pop
out
clc
ja
popf
adc
pop
fs
das
push
cmp
mov
adc
mull
orl
fsubrs
push
jmp
cld
adc
shlb
icebp
mov
or
aam
mov
leave
fs
and
scas
fs
fdiv
xchg
inc
xor
mov
add
mov
mov
outsl
movsl
popf
mov
aam
mov
aad
mov
cs
or
cwtl
inc
xor
mov
or
pop
sbb
push
mov
pop
movsl
xchg
mov
adc
pop
push
fists
fs
fsub
in
and
pushf
jmp
add
mov
or
movsl
dec
mov
mov
mov
mov
add
nop
ja
xor
out
faddl
lock
pop
adc
mov
mov
xchg
enter
mov
mov
and
mov
mov
clc
add
mov
scas
push
pop
fdivrs
inc
jmp
aam
adc
mov
or
aam
mov
les
mov
or
lahf
mov
pop
adc
push
fucomip
pop
inc
test
mov
insb
cmc
adc
sub
aaa
cmp
inc
adc
mov
sbb
xchg
push
or
movsb
fnstsw
pop
pop
test
mov
fs
adc
adc
aas
pop
inc
fs
cs
jmp
sub
test
mov
mov
xchg
enter
fcoml
adc
mov
or
xorb
adc
xor
jmp
dec
jmp
jns
fwait
mov
pop
adc
push
pop
pop
test
mov
js
adc
pop
fs
adc
cmp
inc
pusha
in
cmp
out
mov
or
mov
mov
adc
lods
mov
inc
ds
or
pop
add
xor
mov
pop
cwtl
and
sbb
mov
call
out
sub
mov
mov
mov
fdivrs
inc
movsb
and
jmp
mov
sub
fs
and
hlt
fists
in
test
sub
ja
inc
adc
inc
movsl
or
arpl
movsb
and
mov
adc
sub
lret
clc
iret
insb
pop
les
push
ja
jns
fwait
ds
mov
mov
mov
pop
dec
inc
les
jl
aam
insb
pop
test
add
mov
push
xor
fadds
inc
ja
or
mov
mov
pop
inc
lock
jnp
pop
aam
insb
mov
sub
fst
cmp
or
jecxz
add
sub
addb
ja
dec
adc
push
fs
or
jae
inc
mov
or
test
pop
xchg
and
sbb
ret
push
fisttps
test
mov
mov
adc
dec
fs
fsubrs
inc
aam
insb
jmp
mov
cmp
sub
cmp
je
sti
movsl
or
aam
mov
dec
in
pop
fcomip
pop
jo
int3
mov
sbb
adc
aas
jo
stos
jecxz
xchg
ja
adc
mov
fwait
push
insl
fsubrs
push
jmp
rclb
mov
jae
cmc
mov
or
aam
mov
leave
pusha
jae
cmp
mov
push
jge
fwait
mov
or
mov
pop
lock
jg
mov
sbb
rcrl
add
cli
and
add
xor
mov
out
in
ja
xchg
adc
jae
stc
or
sub
inc
sbb
add
push
fistps
test
test
cmp
mov
adc
inc
fs
fdivs
inc
mov
or
mov
jne
insb
push
jo
enter
cld
test
out
sub
mov
mov
mov
fdivrs
inc
movsb
and
jmp
nop
inc
movsb
cmp
in
les
jmp
and
pushf
mov
movsl
push
mov
mov
xchg
sarb
sbb
mov
aaa
cmp
jmp
dec
adc
mov
movsl
jns
fwait
or
cmpsl
mov
mov
mov
js
shlb
sbb
adc
aas
fs
and
fmuls
mov
or
sub
test
cmp
mov
adc
inc
lods
adc
jnp
icebp
or
adc
inc
nop
and
inc
fs
cmp
sub
push
pop
nop
test
mov
mov
adc
inc
mov
fsubs
inc
aam
insb
jmp
mov
cmp
cmp
cmp
pop
inc
adc
mov
jno
orl
aam
mov
dec
call
pop
jo
enter
fdivl
std
adc
sub
aas
pop
inc
pusha
div
and
fistpll
sub
or
orl
sbb
pop
in
inc
mov
imul
aam
mov
in
test
aam
clc
ljmp
out
mov
mov
or
movsb
dec
adc
outsl
fs
or
add
inc
test
and
cwtl
ja
push
xchg
mov
adc
in
and
cwtl
test
mov
mov
mov
or
ja
inc
test
add
mov
inc
movsb
xor
jne
and
or
aam
mov
pop
adc
test
in
pop
test
mov
jl
adc
pop
fs
fdivs
aam
pop
ret
movsl
sub
sti
mov
popa
cmp
test
in
pop
out
clc
ja
cltd
adc
or
adc
aad
and
sbb
or
mov
mov
pushf
test
mov
test
adc
push
fs
or
prefetchnta
xor
mov
jne
lret
insb
jb
mov
cld
test
nop
out
sub
insl
adc
mov
push
mov
inc
dec
inc
shlb
jmp
lods
adc
andb
lds
and
out
jl
clc
add
mov
xchg
push
push
fdivrs
pop
jmp
enter
mov
pop
or
aam
mov
adc
cmp
mov
movsl
adc
aam
mov
insl
or
push
test
mov
lea
sbb
and
lds
fdivs
ljmp
or
and
pop
or
mov
mov
aam
mov
stc
mov
or
test
and
fadd
les
hlt
jmp
and
pushf
mov
movsl
pop
mov
mov
xchg
int3
mov
adc
xorb
adc
xchg
dec
push
jnp
pop
dec
adc
mov
xchg
pop
aam
mov
movsl
sarb
test
or
adc
lret
xchg
fsubrl
mov
movsl
add
lahf
mov
inc
sbb
inc
test
mov
push
loope
pop
rorl
aaa
rorb
mov
or
aam
mov
jns
mov
movsb
test
mov
dec
xchg
adc
or
adc
cmp
lea
ret
movsl
sub
sti
mov
popa
cmp
test
loopne
pop
out
hlt
ja
cltd
adc
pop
fs
das
push
fstp
aaa
aam
sub
mov
out
push
cmp
mov
cmpsl
movsl
inc
mov
mov
xchg
int3
mov
sbb
mov
xor
mov
xor
js
hlt
jmp
and
cwtl
mov
movsl
pop
mov
mov
xchg
enter
fcoml
sbb
xorb
adc
cwtl
fdivl
mov
add
mov
mov
push
test
mov
pusha
lea
sbb
and
leave
mov
xlat
movsl
adc
mov
inc
sbb
push
fucomip
pop
inc
test
mov
adc
adc
and
ja
lea
or
mov
insl
or
inc
test
mov
lea
adc
and
lds
aam
sahf
fisttps
sub
jmp
sbb
sub
test
cmp
mov
adc
pop
test
mov
pop
push
in
sub
mov
or
aam
mov
popa
cmp
movsb
test
mov
dec
cltd
adc
add
das
push
aas
out
out
fs
sub
mov
mov
test
adc
mov
mov
jae
stc
fcomps
or
mov
and
cwtl
ja
arpl
push
fildll
mov
sbb
mov
mov
ja
cmc
fadds
or
and
lea
aam
dec
xchg
jne
jl
cld
jmp
sub
test
mov
mov
sbb
pop
or
cwtl
adc
popa
fcomp
int3
inc
dec
and
jmp
xor
mov
mov
mov
mov
mov
or
xchg
adc
data16
rolb
jmp
and
pushf
mov
movsl
pop
mov
mov
popf
aam
insb
fbld
or
test
leave
adc
xchg
jmp
push
adc
mov
lahf
movsl
insl
mov
mov
movsl
cld
mov
push
out
mov
cmp
lds
movl
jno
xchg
gs
mov
inc
inc
clc
and
jnp
pop
movsb
adc
mov
add
mov
test
jo
int3
sbb
xchg
xchg
push
push
fsubs
pop
jmp
rclb
push
loope
adc
aad
aas
xchg
mov
cmp
mov
orl
fsubrs
push
jmp
rclb
mov
jae
stc
mov
or
aam
mov
out
jo
enter
or
xchg
push
push
fdivrs
inc
jmp
rclb
push
jmp
aam
movsb
xor
and
out
je
lock
mov
xchg
push
pop
fdivrs
pop
jmp
enter
fmuls
movsl
loope
adc
cmp
adc
sti
fs
orl
fsubs
push
jmp
les
jl
fmuls
movsl
std
mov
or
aam
mov
xor
adc
fs
fwait
push
push
fsubs
pop
jmp
les
pusha
mov
or
aad
and
out
push
out
sbb
mov
jge
xchg
mov
adc
push
jmp
cld
adc
jnp
icebp
mov
or
aam
mov
fsubrl
sahf
sbb
rorl
adc
mov
mov
push
test
mov
jl
adc
pop
fs
fdivrs
sub
xchg
cmc
add
xlat
adc
mov
jge
xchg
mov
or
movsb
jmp
in
adc
shlb
mov
or
aam
mov
rcrl
push
call
jmp
sbb
sub
test
sbb
mov
mov
add
in
adc
mov
and
lea
fcoms
xchg
jne
inc
and
jmp
and
pushf
mov
movsl
pop
mov
mov
sbb
pop
add
mov
xor
scas
cmc
les
fisttps
in
and
mov
mov
movsl
or
ja
inc
lods
and
mov
sub
push
pop
adc
inc
push
and
jmp
xor
mov
mov
mov
popf
fdivrs
or
mov
std
imul
pop
cld
test
out
sub
imul
dec
push
mov
les
jl
fdivrl
pop
mov
or
fadd
mov
je
lock
dec
ja
or
mov
mov
pop
inc
clc
and
aam
insb
pop
test
add
mov
cmp
fmull
int3
adc
mov
xchg
push
push
fsubs
pop
jmp
enter
mov
adc
aad
and
out
push
out
sbb
mov
jge
xchg
mov
or
test
loopne
pop
pop
lock
shlb
mov
cmc
aam
mov
rcrl
pop
cwtl
ret
sub
notl
add
mov
mov
push
movsl
cltd
mov
aam
mov
fsts
in
add
mov
mov
mov
out
hlt
ja
cltd
adc
or
adc
cmp
mov
adc
sti
fs
fcoms
test
loopne
pop
pop
clc
adc
int3
ja
cmc
mov
or
aam
mov
fsubrl
cs
or
mov
adc
pop
loopne
pop
mov
outsl
movsl
popf
mov
icebp
aam
mov
rorl
mov
push
sub
and
cwtl
jmp
add
mov
mov
aam
mov
lea
xor
mov
cs
cmc
inc
scas
sbb
enter
out
testl
and
sub
jmp
test
iret
cli
arpl
popa
popa
cwtl
les
adc
and
shll
mov
push
dec
jmp
xchg
dec
and
in
inc
dec
scas
repnz
mov
push
cmc
push
ljmp
mov
xchg
out
mov
pop
seta
inc
icebp
test
cmp
subb
int3
test
call
push
pop
mov
lea
cli
stos
std
jmp
rorl
insb
lock
out
insl
and
sti
pop
dec
jo
inc
push
and
dec
xor
fidivrs
sub
pushf
clc
mov
lcall
jle
aaa
adc
or
inc
dec
jnp
and
neg
insb
jp
popf
adc
les
push
pop
incb
pop
out
fwait
inc
out
ljmp
xchg
shll
cltd
xchg
mov
cmpsl
jmp
daa
movsb
test
shl
mov
insl
aam
inc
sahf
jmp
loop
scas
in
inc
mov
jne
and
inc
pop
cmp
js
pop
or
pop
inc
in
push
push
adc
scas
mov
push
cmpsl
mov
scas
sub
out
insl
movsl
jnp
mov
frstor
mov
xor
pop
adc
cli
pop
mov
mov
scas
add
push
icebp
repnz
jb
repnz
lock
nop
arpl
inc
cs
ds
mov
jnp
test
mov
mov
sbb
daa
push
pop
add
leave
xchg
fs
std
and
scas
fcomp
push
loopne
lahf
jge
ss
sub
mov
icebp
inc
aad
cli
cli
pop
movsb
fsub
add
xlat
js
call
popf
sbb
inc
mov
pop
in
fidivrl
cmc
iret
jb
or
out
add
sti
lods
jo
stos
negb
cmp
rcll
push
cmc
sbb
in
in
dec
and
dec
and
sbb
xchg
sbb
pop
cld
push
gs
call
xor
sar
shl
test
dec
sbb
fldcw
pop
fcoml
scas
push
xchg
aad
dec
xchg
test
or
dec
mov
pop
sub
adc
push
cmpsb
test
or
enter
mov
and
in
js
xchg
pop
sti
add
dec
mov
inc
pop
add
xchg
lock
insl
inc
and
outsl
xor
adc
mov
dec
xor
sub
jno
into
mov
pusha
mov
stos
or
push
outsl
mov
push
or
jo
hlt
aam
insl
pusha
lahf
lea
shl
fsubl
inc
push
mov
lret
mov
stc
movsl
jnp
cmp
mov
push
insb
or
fisttpll
adc
pop
push
std
xchg
test
mov
cmpsb
adcb
jnp
mov
arpl
fisubrs
push
arpl
mov
pop
push
lock
scas
pushf
dec
dec
icebp
push
or
pop
cmp
jecxz
in
or
test
ret
push
pop
mov
pusha
inc
cmpsb
push
test
mov
or
ds
xorb
xchg
dec
sbb
mov
mov
out
ret
stos
pop
xchg
in
push
jbe
fstl
mov
cmpb
test
mov
mov
cmp
rorb
push
popf
loope
inc
xor
stos
cmc
mov
sbb
xor
leave
insb
adc
js
inc
pop
sbb
xor
or
xchg
and
jle
jo
cltd
push
mov
pushf
cmp
outsl
and
dec
ret
fidivl
lret
pop
add
inc
cmp
dec
in
pop
test
es
pop
test
repnz
fwait
mov
mov
outsb
sbb
push
cmpsb
jle
xchg
pop
outsb
pop
xor
cld
pop
jbe
int
add
into
inc
dec
xchg
mov
js
aad
in
jno
popa
or
cld
cmp
cwtl
pop
push
jne
inc
dec
test
add
scas
scas
out
mov
outsb
cmpsl
test
pop
loope
add
sub
fnsave
hlt
in
jnp
sbb
adc
je
xor
or
jle
aam
mov
movsl
arpl
xlat
iret
lock
inc
lret
mov
pop
aad
add
shll
push
pop
pop
and
scas
jp
pop
call
cmp
inc
js
sbb
mov
ret
pop
notb
add
jno
add
dec
pushf
ds
xchg
and
imul
jb
test
jae
jle
mov
decb
sti
mov
addr16
movsb
mov
mov
in
ljmp
pop
pushf
push
out
dec
dec
xor
mov
mov
js
popa
aad
and
insb
jg
add
add
rcll
adc
jg
xchg
aam
push
cld
mov
popa
inc
rol
cmpsb
mov
add
dec
sub
aaa
das
jbe
xor
jle
cmc
sub
shlb
test
push
and
or
and
jns
xchg
mov
push
mov
lea
push
insl
mov
stos
fstpt
movsb
dec
stos
sub
popf
out
pop
inc
ja
pop
cmp
jg
sub
dec
mov
cmpsl
inc
popf
pusha
scas
jl
cli
stos
xchg
cltd
mov
xchg
xchg
fidivs
aaa
shll
push
jmp
cmpsb
in
inc
mov
push
pop
mov
call
add
int
add
call
and
outsl
ja
dec
inc
pop
add
cmc
and
inc
cltd
and
repz
out
jecxz
add
jge
pop
icebp
mov
push
lea
jp
popa
mov
hlt
lods
imul
lea
lret
xchg
add
test
hlt
outsl
inc
mov
push
add
adc
sub
scas
add
pop
and
add
icebp
mov
mov
dec
hlt
add
mov
stos
add
cmc
out
pushf
dec
out
sbb
mov
das
mov
aam
test
lods
aas
lea
std
sbb
jns
mov
sub
adc
dec
mov
test
negb
lods
imul
outsl
inc
fcoml
jp
test
ljmp
jle
sbb
mov
mov
pop
lcall
and
into
or
pop
shrl
fisubl
sbb
or
dec
das
inc
lret
popa
addr16
mov
push
inc
and
dec
dec
xchg
pop
mov
adc
cmp
mov
add
popa
je
push
add
mov
icebp
addr16
ret
inc
fmul
lock
lods
dec
sbb
or
push
mov
mov
push
data16
mov
dec
xor
lahf
xor
adc
fs
insb
sbb
xchg
stc
pop
lahf
mov
and
xor
sub
mov
aas
addr16
out
jmp
movsl
pop
mov
mov
add
inc
lods
lea
sbb
xchg
inc
leave
cmpb
icebp
frstor
xor
test
test
outsb
lock
cmp
aas
dec
mov
pop
aaa
mov
aas
sbb
jne
fcoml
data16
xor
xor
jle
mov
sub
int3
adc
or
cld
popa
pop
lods
lret
adc
in
inc
jne
jbe
std
movsb
and
dec
add
xlat
mov
xor
xchg
xchg
inc
scas
cmc
dec
add
jecxz
scas
pusha
dec
mov
cmp
jl
stos
xchg
pop
fsubrs
lret
pop
pop
stc
add
ljmp
and
lea
pop
ret
xchg
push
out
mov
insb
jbe
fidivrs
data16
loope,pn
pop
adc
movsl
fcoml
jmp
lret
lods
sbb
lahf
aaa
pop
sbb
test
cmp
mov
xchg
add
adc
push
inc
ja
push
xchg
push
popf
pop
mov
sub
loop
dec
es
loopne
sbb
leave
ss
das
sub
push
ss
mov
pusha
and
nop
push
inc
movsl
cmpb
mov
jne
aad
mov
fsubrl
dec
inc
and
mov
mov
cli
jnp
add
and
jg
lods
pop
mov
outsl
sbb
stos
sub
inc
sbb
mov
das
stc
jmp
stos
xchg
xor
jl
addr16
icebp
out
movsb
in
lods
mov
mov
inc
nop
xchg
mov
sub
sbbl
aad
or
add
add
push
testl
push
add
inc
jl
pop
mov
inc
cmpsl
pop
ds
int3
dec
movsb
or
lea
les
and
pop
xor
popa
cs
mov
mov
push
popf
or
cld
bound
fisubs
pop
cmp
mov
pop
mov
cmp
pop
fldenv
div
xchg
xor
shll
bound
cmp
xchg
aaa
mov
testb
test
sbb
lea
addl
je
xchg
int3
xlat
clc
sbb
cmp
pushf
xchg
aam
pop
add
mov
xorl
cmpsl
adc
cmp
dec
jae
dec
imul
addr16
and
push
mov
stos
and
clc
das
stos
add
data16
rcrb
ja
mov
nop
and
inc
fwait
testb
aas
mov
nop
incb
or
adc
xor
cmp
mov
nop
cmp
mov
dec
ret
xor
push
inc
pop
or
fcompl
push
inc
out
dec
testb
jge
push
adc
or
bound
je
inc
sub
loop
mov
pop
xor
gs
push
pop
pop
mov
sysexit
dec
cmc
inc
dec
or
ret
js
clc
data16
aad
adc
inc
push
sub
and
repnz
cmp
scas
mov
mov
xchg
add
addr16
notl
imul
jg
mov
aad
xor
leave
insl
and
mov
add
inc
mov
out
inc
pop
mov
in
cmpsl
movsl
adc
aaa
scas
inc
cmp
insb
add
test
out
cmp
popf
fsubr
push
mov
push
out
lods
mov
xor
pushf
pop
sub
std
mov
cs
test
out
test
cmpsb
dec
mov
lds
mov
mov
cmp
cmp
dec
std
inc
outsb
mov
scas
fs
lods
or
mov
bound
mov
pop
insl
cltd
movb
pop
jge
pop
lock
test
into
and
cmc
lds
js
fldcw
xchg
sbb
mov
mov
cmpsl
dec
fwait
pusha
sbb
test
in
sti
jns
mov
or
mov
sub
xlat
out
push
cmpsb
lds
in
push
movsb
les
cmp
in
adc
in
sub
mov
out
cmp
sub
fyl2x
pop
sub
cmp
mov
jmp
inc
imul
xchg
xchg
mov
jmp
movsl
jae
xchg
cmp
shlb
jg
les
and
pop
mov
mov
inc
xchg
cmp
cli
pop
or
cwtl
pusha
insb
xchg
inc
cmpsl
sbb
jns
xor
js
pop
fsubr
scas
test
mov
sub
fiaddl
lcall
push
pushf
inc
insb
fstpt
mov
arpl
inc
aas
adc
or
nop
adc
pop
inc
dec
imul
leave
into
cwtl
in
add
inc
div
insb
cmc
test
fisttpll
sub
fsubrl
loope
jg
pop
push
hlt
and
loop
psadbw
cwtl
test
pop
call
push
pop
cmpsb
lods
out
dec
fsubr
push
adc
daa
and
mov
rolb
pop
test
xchg
es
jbe
fdivr
jge
inc
int3
mov
pop
mov
add
movb
enter
cmpsl
out
insl
fsubrl
mov
fadds
iret
lea
jo
push
imul
outsb
and
mov
inc
xor
inc
and
clc
ds
and
stc
jae
xchg
inc
pmulhuw
je
sahf
ja
jne
arpl
lret
test
insb
cmp
xor
cmc
adc
enter
push
jo
mov
add
cmp
jno
or
inc
pop
xchg
cmp
mov
sti
popf
imul
aaa
pushf
outsb
mov
fs
jmp
std
adc
xchg
cmp
mov
add
push
push
test
inc
jp
into
daa
pop
xor
inc
push
test
js
mov
dec
or
orl
mov
mov
dec
pop
lods
pop
sbb
xchg
jns
inc
sub
arpl
rcrl
rorb
mov
xchg
popa
lahf
dec
inc
mov
mov
add
cmp
mov
stos
sub
jnp
adc
inc
jns
js
pop
cmp
push
cltd
pop
push
pop
mov
and
stos
iret
sub
jp
sub
scas
in
adcl
mov
and
outsl
inc
inc
sub
test
lsl
into
jno
int3
rolb
stos
xchg
mov
aaa
mov
mov
arpl
test
mov
loopne
out
dec
dec
repz
faddl
jo
imul
mov
xchg
lods
add
dec
pop
sub
in
ficomps
mov
test
lcall
lahf
rclb
icebp
mov
jle
std
lods
add
hlt
ss
jp
mov
mov
xchg
mov
fsubl
stos
pop
out
push
or
mov
adc
push
mov
aas
push
mov
pop
in
cmpsl
outsl
std
test
cld
movsl
cmc
std
mov
pop
or
push
cmp
fstp
arpl
or
iret
addr16
inc
out
jb
stc
lret
jno
or
jge
mov
sub
movsb
pop
movsl
jmp
ljmp
mov
add
xorl
push
and
add
iret
insl
orb
clc
loop
insl
out
daa
lods
dec
push
bound
push
bnd
sbb
stc
mov
fsubr
xchg
test
std
call
repz
jae
imul
jae
sarl
repz
cmp
test
sahf
xchg
sbb
or
dec
mov
shrb
lret
fnsave
cld
movsb
and
add
mov
xrelease
sti
stos
xor
mov
lods
inc
out
rclb
push
sub
ds
popl
or
xchg
mov
adc
sbb
sbb
pop
idivb
fstl
test
scas
push
adc
push
xlat
loope
sub
mov
pop
icebp
push
mov
call
push
lret
xchg
add
or
adc
aas
sbb
popa
mov
loope
insb
loope
movsl
stc
adc
dec
test
jge
add
aad
or
jl
adc
fwait
mov
sub
adc
and
adc
movsl
mov
xchg
data16
cmc
hlt
ds
cld
and
or
mov
in
mov
in
push
and
mov
pop
add
or
bound
adc
cmp
fwait
cltd
inc
icebp
outsb
jg
test
push
push
ret
xchg
mov
push
and
inc
pusha
mov
jp
test
lock
add
xor
hlt
popf
cld
inc
push
pop
test
jbe
jb
popf
imul
shlb
and
mov
xchg
sub
or
aam
mov
xor
daa
dec
cmpsl
ljmp
out
mov
lock
inc
rclb
jns
mov
pusha
and
jle
sub
push
dec
pop
cmp
inc
cmpsl
xchg
xchg
outsl
mov
stc
mov
in
pop
mov
inc
xor
aad
push
stc
mov
inc
std
hlt
mov
daa
stos
js
xchg
mov
les
loopne
data16
adc
inc
mov
outsl
cmp
insl
insb
jnp
and
fnstsw
mov
mov
pop
adc
or
xchg
xor
push
popa
pusha
sbb
jb
mov
jbe
mov
mov
jb
std
pushf
inc
jmp
cmc
inc
idiv
mov
add
clc
dec
sbb
scas
dec
sbb
mov
and
decb
pop
stos
push
iret
fildll
addl
loopne
popf
int3
insb
dec
jno
clc
push
xorl
arpl
shll
add
add
cmp
dec
push
mov
popa
mov
dec
and
je
in
std
test
cld
add
fcom
inc
imul
insb
xchg
dec
sbb
jne
imul
mov
adc
mov
into
xchg
add
cli
pop
mov
loop
call
adc
mov
or
fistps
pop
mov
lret
jecxz
dec
std
inc
mov
mov
cmp
sbbl
push
jle
test
and
mov
outsl
cmp
jecxz
mov
inc
mov
adcl
jo
add
nop
js
xor
fwait
sub
dec
push
dec
sbb
or
or
or
mov
repnz
and
test
xchg
or
std
cmp
in
test
mov
int
push
lods
iret
aas
pop
insb
les
ljmp
jge
inc
pop
fs
dec
dec
data16
call
aad
js
or
xor
insl
test
je
inc
out
jge
shll
insb
push
out
cmp
sbb
push
movsl
fisubrs
je
fiaddl
inc
sub
insl
lds
mov
loopne
push
rcll
lahf
mov
and
mov
jne
lods
out
pop
nop
push
test
ljmp
call
sbbb
fdivrl
insb
inc
cmpb
sbb
mov
aas
stos
adc
xor
je
add
inc
into
xchg
mov
lods
jmp
out
mov
gs
fs
popa
pop
or
and
inc
adc
bnd
sbbl
insb
fisubrs
mov
test
jno
out
ljmp
mov
sbb
cmpb
aad
lret
dec
js
xor
add
arpl
mov
xchg
adc
mov
movsl
ds
sbb
pop
test
mov
mov
daa
loope
sbbl
jmp
enter
test
sbb
popf
pop
push
loopne
pop
inc
lcall
cs
push
leave
or
dec
fyl2x
mov
sbb
imul
movl
shl
aam
test
pop
or
pop
jns
insb
add
std
cli
clc
push
test
cmp
cmp
lcall
fmull
jae
lcall
jmp
test
imul
push
call
insb
xor
jl
aad
cmpsb
sub
ja
jg
pop
dec
in
mov
ds
adc
inc
insb
and
push
in
adc
push
adc
insl
pop
adc
mov
addr16
pop
inc
fst
jns
xchg
addl
mov
pop
sub
dec
arpl
push
add
cli
ficompl
scas
jg
arpl
fnstcw
inc
mov
sbb
movsl
fisubrs
and
stos
sub
sub
icebp
and
mov
insb
pop
adcb
jb
lods
sub
bound
mov
cmp
jnp
sbb
fldt
xchg
push
add
pop
aas
pusha
pop
divb
cmp
sbb
fidivl
adc
adc
ss
hlt
cwtl
xor
mov
xchg
sbb
in
pop
loope
ja
cltd
fidivrs
push
xor
jg
test
sbb
pop
adc
jb
fdivl
cmc
mov
jns
repnz
test
mov
insl
or
inc
mul
nop
pop
mov
enter
push
jl
ficoml
add
and
or
and
mov
jne
sbbl
pop
int3
cmpb
push
call
in
and
xor
idivl
add
aas
gs
push
mov
pop
lock
sub
or
xor
or
inc
cli
in
and
dec
sarb
movsb
shrl
pop
xlat
loope
fnstsw
inc
pop
mov
mov
push
pop
stc
mov
lock
cmp
test
insb
sbb
jns
lock
aas
dec
cld
addb
data16
stos
cltd
jg
xchg
aad
es
xor
insl
mov
and
mov
mov
test
test
cmp
rorl
push
aas
rcrl
inc
or
sbb
pop
mov
iret
jne
adcl
mov
jg
shrb
inc
xor
adc
push
jmp
decl
int
popa
push
mov
push
nop
jo
insl
push
sub
adc
fstps
pop
decb
int3
xor
jg
jne
aaa
test
andb
xchg
sarb
inc
insl
aas
xchg
push
fstpt
fs
cmpl
arpl
xchg
cmp
mov
dec
testl
stc
dec
gs
cmp
pop
fisubl
push
sbb
filds
clc
in
push
es
or
pop
jns
mov
xor
lea
test
add
pop
pusha
pop
mov
aaa
inc
jl
or
aas
popf
insb
mov
jb
cs
sbb
fildll
popf
andb
mov
shl
inc
test
jg
scas
in
add
into
shlb
mov
xor
add
into
lods
cltd
std
dec
pop
inc
jo
out
dec
stos
dec
xchg
pop
jno
inc
push
xchg
mov
ljmp
pop
sbb
add
dec
ljmp
jbe
xchg
gs
cmpsb
inc
nop
adc
idivl
sub
icebp
je
cli
push
movsb
adc
add
mov
adc
and
fimuls
movsb
cld
movsb
out
je
jo
adc
xor
call
cld
sahf
jne
leave
pop
jne
js
jg
push
push
test
scas
jmp
inc
and
mov
lods
test
lds
ljmp
aas
cmp
ljmp
in
or
mov
mov
sbb
inc
push
ljmp
pminub
loopne
cmp
mov
std
gs
dec
xchg
push
test
push
lret
test
lock
outsb
rcll
cmp
neg
jae
and
fimull
add
out
xchg
cltd
fisubrs
xchg
sbb
mov
pop
jle
out
mov
add
leave
stc
jo
inc
addl
inc
mov
xor
pop
test
lret
iret
jb
mov
sub
xor
ss
ret
sbb
mov
cmp
dec
test
clc
stc
test
dec
loop
insl
std
jge
jge
xorl
daa
or
in
xor
xchg
fistpl
mov
mov
lods
add
pop
adc
xor
shrb
add
je
sub
addr16
xchg
insl
mov
sbb
and
pusha
pop
sbb
testb
xchg
push
gs
loope
adc
lds
pop
or
enter
iret
add
xchg
outsb
mov
lock
pop
inc
inc
repnz
jl
mov
ljmp
mov
and
cwtl
mov
mov
sbbb
mov
andl
cmpsb
inc
lds
and
mov
xchg
sahf
xchg
cmp
jns
sbb
inc
loopne
add
xchg
pop
sbb
hlt
pop
test
lock
xchg
and
repnz
gs
iret
data16
lret
in
ret
dec
imul
xor
or
cmc
sbb
outsl
push
cs
shll
loopne
cmp
aad
jno
scas
call
jge
mov
into
sub
push
call
nop
xor
into
push
dec
leave
dec
inc
subb
inc
sbb
cmpsb
jno
dec
pop
inc
ds
enter
and
pusha
mov
cmc
test
in
movsl
dec
das
add
jns
mov
mov
nop
out
sub
mov
and
mov
pop
pop
mov
pop
movsl
xchg
insb
outsb
pop
iret
push
dec
mov
xor
pop
test
dec
mov
push
in
dec
cltd
nop
ret
jmp
insb
cmp
scas
addr16
in
dec
mov
lock
ret
rcl
xor
aaa
in
cmp
adc
test
gs
lret
pop
filds
mov
push
out
jno
daa
pop
mov
mov
pushf
fwait
mov
pop
rcrl
data16
fsubrl
push
je
adc
xor
rolb
fcoml
push
stos
movsb
ret
outsl
jb
testb
loope
insl
mov
sbb
xchg
scas
iret
xor
out
push
aam
jle
ret
aad
jo
mov
push
xlat
jecxz
jno
push
fidivl
mov
je
mov
mov
xchg
push
out
into
cltd
lods
cli
dec
sbb
jbe
inc
jl
mov
fnsave
xchg
sub
push
push
xor
fs
aam
push
scas
cld
cmp
pop
sbb
pop
xchg
or
enter
clc
movsb
mov
rorl
sarb
sbb
jg
mov
nop
pushf
xchg
pop
addr16
lock
loope
pop
pop
leave
or
in
mov
push
sbb
divl
hlt
inc
stos
push
out
das
xchg
sub
rorl
out
mov
add
fadds
popf
jge
lods
stos
enter
rcrb
pop
inc
jbe
rorl
je
test
cmpb
movsb
lea
fsubrs
out
add
fbstp
jo
jge
movsb
loopne
in
xchg
cmc
pop
loope
fidivrl
sub
dec
inc
xchg
add
bnd
jl
pop
stc
adc
jmp
fidivs
addb
aam
scas
dec
cmp
lret
mov
in
imul
frstor
push
rol
push
push
sbb
outsb
dec
fldenv
mov
sti
push
inc
lods
mov
push
xor
cmp
into
sahf
hlt
jnp
lahf
dec
lock
insb
jnp
gs
pop
push
lret
les
cmp
mov
insb
inc
push
fdivrs
das
adc
mov
and
mov
subl
xor
or
sti
cmp
shlb
inc
mov
sub
inc
inc
and
sbb
add
out
add
cmp
nop
adc
out
sbb
test
les
imul
mov
dec
out
push
aam
jns
pop
jns
je
repnz
inc
lock
aad
lock
sub
pop
jle
xchg
mov
loop
xor
pop
in
scas
addr16
add
nop
cmpsb
ljmp
shll
nop
int
fbld
mov
sub
mov
xchg
hlt
pop
movsb
les
xor
in
in
jg
mov
std
push
xchg
push
jbe
mov
iret
rcrb
inc
cmp
repz
into
xor
add
stos
daa
mov
pop
inc
xchg
cmp
leave
dec
ret
call
push
adc
into
push
push
sahf
out
mov
inc
cmpsl
push
stc
cmpsb
lcall
xor
enter
push
loope
fsubrl
ds
cmp
out
add
aam
sbb
mov
cmp
ja
movsl
mov
push
mov
das
notl
out
xchg
mov
test
in
das
mov
in
and
jb
sub
fiaddl
icebp
popa
das
and
jae
lea
jne
lahf
mov
add
mov
and
mov
xchg
push
and
es
cmc
daa
sahf
adc
pushf
cmp
ret
and
push
in
mov
cmp
mov
push
mov
push
sbb
mov
xchg
idiv
call
andb
mov
push
pushf
mov
xchg
test
ljmp
mov
adc
faddl
inc
sub
dec
xchg
test
rclb
in
xchg
jnp
cmp
cmp
or
repnz
sbb
xchg
call
xchg
dec
test
enter
jmp
mov
hlt
frstor
inc
sti
test
out
pop
or
orl
xlat
mov
out
xchg
fucom
pop
jno
mov
sbb
pusha
jmp
xor
cmp
inc
pusha
gs
mov
cmpsb
xlat
add
jmp
js
fcmovnu
push
mov
int3
addb
in
sbb
adc
and
inc
cwtl
icebp
jno
jno
cli
cli
cmp
push
mov
inc
pop
clc
movsb
or
popf
pop
jp
test
pop
pusha
inc
cli
movsb
inc
or
scas
rcl
adc
rol
pusha
mov
cmp
and
sarl
lock
cld
cmp
stc
scas
add
dec
xor
sub
mov
xchg
and
testl
cmp
fmull
adc
fistpll
mov
push
push
jne
fidivl
test
call
cmp
pop
loopne
dec
mov
jp
fwait
xor
sub
cmp
out
and
inc
cmp
ja
dec
hlt
cs
ja
pop
call
inc
pop
imul
out
mov
jl
rcll
cmp
pop
or
insl
cmp
jge
dec
mov
jo
lds
inc
mov
xchg
rclb
hlt
les
cmp
mov
inc
jb
inc
pop
mov
xchg
arpl
mov
mov
test
mov
jle
push
scas
push
sub
push
pushf
push
lock
in
adc
sub
mov
xchg
xchg
adc
lds
scas
and
or
xlat
add
xchg
shll
cwtl
pop
scas
pop
sbb
in
mov
mov
xchg
js
mov
push
jecxz
je
repz
push
insl
nop
jbe
mov
cmp
and
jge
sub
in
push
mov
adc
repnz
pop
dec
in
ret
mov
test
test
aas
sti
push
or
push
lret
aad
push
jg
icebp
daa
cld
mov
icebp
popa
push
jo
orl
sub
xchg
push
mov
rcrb
inc
sub
pop
inc
inc
fcoml
jns
pusha
sub
cli
sarl
lds
out
pop
mov
cmp
lahf
ljmp
movsb
xchg
scas
pop
pop
arpl
and
mov
mov
mov
fmuls
mov
xchg
jno
sahf
out
je
pop
mov
push
ss
stc
mov
mov
jl
mov
movsl
fiadds
clc
leave
pop
xor
mov
dec
ljmp
inc
xchg
fidivrs
enter
js
fimull
push
jbe
sbb
mov
mov
mov
mov
xchg
inc
inc
ret
jnp
imul
loope
and
std
repnz
loope
pop
pop
xchg
fldt
aad
pop
xor
mov
ficompl
sub
mov
push
xchg
pop
and
mov
repnz
test
cmp
lock
insl
mov
jno
or
push
pop
lcall
mov
dec
mov
dec
sbb
inc
mov
test
jg
subl
test
clc
fldpi
leave
inc
push
mov
call
shll
mov
adc
ret
dec
orb
scas
inc
xchg
inc
in
adc
pop
sbb
xchg
or
pop
sbb
push
jae
aam
push
lahf
push
xor
loope
rcrb
adc
xchg
loopne
xchg
jmp
inc
idiv
outsl
dec
inc
jg
sub
mov
in
shl
xchg
pop
pop
mov
pop
push
mov
jmp
cmp
xor
xchg
fdivrs
insb
adc
lcall
insl
rcrl
pop
jmp
add
or
repnz
and
fcompl
add
fldenv
mov
pop
mov
xchg
popa
test
rclb
ret
jge
sbb
mov
movsb
push
pop
ss
and
mov
xor
lds
rorb
adc
pusha
ja
mov
add
pop
fstl
xchg
mov
sbb
scas
xchg
sbb
adc
fsubr
cmpsb
enter
cmp
jne
sbb
mov
adc
pop
rcrl
insl
cmpsl
loope
xchg
cmc
cmc
add
cmpsb
dec
sahf
ficoml
push
repnz
lods
mov
or
or
adc
mov
test
jp
mov
inc
mov
test
adc
xchg
pop
adc
xor
repnz
fistps
out
sbb
cs
or
push
ret
or
cmp
pushf
mov
push
addr16
jl
cs
jp
shll
lcall
pop
inc
jb
inc
pop
xchg
mov
push
xchg
mov
push
rcll
xchg
js
xchg
ljmp
je
sti
divb
sbb
or
cmpsb
in
les
in
inc
mov
rclb
out
mov
mov
xchg
ja
cwtl
mov
inc
mov
pusha
jle
adc
cld
mov
andl
sbb
ja
mov
pop
loop
fstpl
or
ljmp
push
outsb
mov
lcall
les
jo
pop
pop
cmp
inc
xchg
sbb
adc
push
adc
add
lcall
lea
test
xchg
shlb
sbb
mov
dec
pop
xchg
leave
fdiv
lea
aas
sub
test
pop
adc
decb
mov
clc
sbb
push
pop
add
or
ficomps
cmp
clc
mov
call
mov
cmc
movsb
test
ljmp
add
imul
push
insl
inc
rcrb
nop
imul
adc
and
popf
lods
xchg
pusha
sbb
ljmp
test
push
aam
mov
and
or
aas
mov
mov
loop
sti
add
inc
sub
mov
xor
sub
ja
mov
inc
sbb
in
jg
adc
pusha
pop
popf
cwtl
push
jno
fidivrs
in
pop
push
sti
addb
shl
jae
and
mov
js
subl
pushf
mov
nop
dec
adc
sbbl
loope
fs
stos
dec
sub
add
mov
sub
fisttps
dec
imul
pop
aam
and
jno
add
movsb
or
lcall
pop
jle
pop
sbb
cmp
cmp
add
sub
add
pop
pop
inc
mov
mov
popf
lods
cmp
clc
add
mov
push
lea
popa
js
push
pushf
push
insl
fdivrl
stos
stc
xchg
and
test
test
mov
in
fwait
and
inc
inc
cmp
add
aaa
pop
and
add
das
mull
xor
mov
or
pushf
sub
jl
pop
inc
xchg
movb
jmp
idiv
cwtl
jae
pop
mov
pop
je
lods
iret
inc
js
stc
arpl
jae
push
pop
jg
rol
scas
push
jl
pusha
in
sarl
test
addr16
xchg
test
mov
mov
sar
int
or
mov
or
mov
or
push
inc
pusha
hlt
pop
jle
in
xchg
inc
cmp
jne
adc
or
mov
bound
cmp
and
sub
imul
test
cmc
hlt
ds
movsb
stos
xlat
mov
das
adc
scas
inc
out
dec
jmp
jmp
or
inc
notb
push
sub
pushfw
gs
cmc
arpl
fdivl
jno
lock
out
sbb
mov
int
mov
stos
mov
cld
rolb
out
scas
pop
mov
pop
clc
mov
and
mov
mov
js
out
add
sbbb
push
mov
out
sub
ds
ja
aad
inc
les
shll
pop
push
les
fistps
xor
jne
push
jns
sbb
mov
bound
aam
divl
mov
jb
lea
inc
aad
and
adc
sub
ljmp
mov
rclb
aas
dec
jmp
loopne
test
pusha
push
jo
or
pop
pop
cmp
push
jmp
push
mov
pop
or
scas
addr16
xchg
fildll
pop
nop
mov
mov
lock
daa
jp
clc
pop
mov
inc
in
imul
mov
jg
and
shll
mov
inc
pop
cwtl
outsl
pop
and
dec
rclb
leave
inc
add
mov
cli
sub
dec
cmp
test
dec
inc
call
imul
jbe
test
clc
lea
sub
scas
subl
mov
mov
push
daa
bound
add
inc
inc
ret
nop
je
add
int3
inc
into
ret
dec
pop
push
mov
out
mov
and
push
push
iret
inc
or
pop
xchg
inc
xchg
sahf
jg
je
sub
inc
push
pop
out
shl
rcl
lock
sarl
jne
inc
or
and
jbe
lock
imul
mov
jp
xor
inc
sbb
sarb
jne
in
push
cld
cmp
pop
pop
out
or
inc
sbb
inc
jg
data16
add
popf
pop
or
and
leave
cli
pop
dec
js
push
aad
pop
adc
pop
adc
inc
dec
push
popa
push
test
jo
jmp
jle
test
cli
stos
fbstp
adc
mov
rcrl
adc
loopne
inc
fcoml
xor
test
add
adcl
push
xchg
xchg
add
fisubs
dec
enter
notl
fsubr
mov
and
stos
cli
mov
push
jb
mov
dec
in
inc
and
xchg
popl
js
cmpsb
in
rep
push
stos
ljmp
les
icebp
in
and
movsb
dec
leave
shlb
mov
leave
mov
das
nop
or
mov
fwait
xor
sar
aad
dec
adc
jne
bound
je,pn
bound
lods
movsb
jg
lods
jp
xchg
push
out
push
pop
add
nop
add
inc
pop
xor
out
es
addr16
sarl
rcr
gs
sub
jne
pop
jp
xor
out
into
xchg
sbb
sbb
test
pop
or
pop
or
iret
insl
jmp
inc
jmp
xor
jae
sbb
inc
inc
lock
test
pop
iret
pushf
mov
add
inc
out
int3
mov
xchg
std
jne
jns
pop
shll
xchg
movsb
push
pop
cmp
leave
adc
pop
dec
movsl
aam
in
xchg
mov
inc
mov
cmp
shl
push
aad
and
outsb
xchg
jge
xchg
pop
and
std
mov
mov
mov
or
jge
jne
shrb
push
dec
ret
lds
loop
out
mov
xor
or
out
inc
or
decb
mov
loopne
pop
outsb
lahf
je
or
xor
mov
test
xor
dec
jo
repnz
xchg
mov
adc
mov
ja
mov
pop
cmc
xchg
cld
cli
sub
idivb
sbb
bound
fisubrl
add
mov
imul
outsb
cmp
stos
ljmp
inc
adc
popa
inc
xchg
sbb
sub
xor
sbb
popa
hlt
sbb
enter
cmp
pop
test
dec
lahf
and
sub
mov
decb
dec
mov
daa
fisubrs
loopne
pop
aam
lcall
pushf
or
call
inc
subb
push
mov
inc
adc
push
js
sbbl
out
lcall
fimull
push
cmp
mov
out
mov
rolb
sbb
in
pop
jne
push
popa
adc
inc
sub
imul
mov
sub
lret
sti
mov
jb
unpckhps
ficoms
in
scas
inc
cmc
sub
sub
jmp
ffreep
cmp
and
int3
jnp
sahf
enter
stc
push
add
lock
xchg
arpl
movsl
popf
insl
push
push
movsl
lods
add
or
inc
xchg
sbb
jne
cwtl
hlt
lcall
ret
mov
and
sub
push
lcall
cld
jno
mov
add
inc
adc
nop
and
cwtl
jle
out
les
xlat
clc
into
and
sub
icebp
mov
stc
fsubrp
hlt
addl
push
popf
mov
js
ficomps
inc
jl
xchg
or
push
js
insl
sub
inc
xchg
jge
jnp
mov
jbe
mov
js
ljmp
push
xor
push
cltd
mov
lret
jnp
mov
sub
jle
sarb
std
int3
add
add
fs
xchg
add
mov
js
xchg
dec
pop
xchg
mov
jg
jmp
mov
add
pop
aad
repz
mov
insb
xor
jecxz
and
dec
addr16
dec
pop
test
jp
sub
iret
fstps
mov
mov
scas
or
sti
mov
incl
and
rolb
mov
sub
filds
or
mov
shll
popa
mov
push
cmp
jg
cmp
aad
xchg
adc
aaa
fs
scas
pop
enter
inc
add
rolb
sti
test
fadd
cmpb
ja
gs
mov
xchg
cmp
pop
pop
cmp
test
mov
xchg
outsl
inc
and
fsubrs
imul
mov
adc
xor
clc
je
pop
mov
push
push
maxps
push
loope
popa
imul
dec
add
setb
dec
pop
test
mov
test
inc
sub
repnz
in
lret
jecxz
push
push
mov
loopne
sub
mov
mull
sbb
mov
cmp
out
adc
xor
aas
pushf
idivl
test
xor
push
fs
mov
stc
sub
movsl
lods
mov
jl
imul
pop
shrb
adc
mov
push
adcb
ja
das
clc
dec
pop
mov
mov
mov
cmc
popa
jae
pop
jae
jo
push
jnp
mov
insl
in
stc
lar
or
inc
sbb
outsb
fmull
call
fs
subb
scas
popl
or
push
sti
sahf
mov
out
sub
cltd
shl
jb
pop
roll
cmc
cwtl
mov
fcmovnb
xchg
and
sub
adc
fldl2t
push
and
test
jl
imul
pop
push
test
lret
jecxz
or
mov
mov
sub
mov
sbb
adc
push
cmp
nop
sbb
jb
lcall
iret
jbe
cmp
pop
cmp
stos
in
je
loop
notb
cmp
cmpsb
mov
push
xor
push
addb
sbb
dec
aaa
add
mov
or
xchg
gs
imul
scas
in
leave
and
int
pop
mov
jl
xlat
arpl
fists
cmovle
lods
mov
mov
sub
mov
adc
js
call
xchg
adc
enter
clc
out
hlt
ljmp
or
and
or
test
push
lret
stc
inc
sbb
push
loopne
inc
dec
xchg
enter
jge
push
je
mov
insl
fnstsw
inc
outsl
mov
std
inc
dec
dec
cmp
xchg
rorb
stos
in
mov
je
inc
fmul
decb
pop
cltd
dec
andl
pop
pop
pusha
mov
xchg
mov
in
dec
scas
mov
in
pop
jo
aad
ffree
jo
mov
je
inc
push
pop
loopne
xor
test
sbb
push
lret
cli
push
jecxz
jbe
loopne
ljmp
push
sub
stos
pop
cmp
or
jp
mov
sahf
inc
pop
mov
cmp
mov
pop
and
out
lds
pop
cwtl
cmc
cmp
push
pop
pushf
inc
mov
testb
or
pop
jle
pop
mov
aad
jb
inc
jae
nop
pusha
mov
mov
pop
pop
leave
aaa
push
loopne
fldl
lods
push
nop
add
cmp
insl
popf
bound
cltd
pop
addr16
xchg
orb
or
lock
mov
xor
out
mov
cmc
popa
cwtl
imul
andl
movsb
ljmp
add
aaa
aas
subl
fnstsw
in
outsb
vpmulhuw
push
enter
lods
sbb
mov
stos
jo
or
aam
sub
mov
inc
call
int
dec
jp
loopne
movsl
imul
ja
cmc
loope
outsb
sbb
cmp
arpl
test
fldt
shl
xor
pop
imul
scas
mov
out
lds
lcall
xchg
mov
ficompl
data16
xchg
mov
sbb
jno
call
loop
fimull
adc
jg
cltd
lds
inc
jne
mov
or
dec
xor
in
icebp
mov
and
imull
cs
xlat
hlt
into
movsb
ret
movsl
and
call
mov
pop
jae
mov
dec
mov
std
fs
mov
scas
fs
cmpb
add
pop
adc
and
ficomps
push
faddl
mov
add
push
adc
sbb
jne
int3
gs
fistpl
out
lods
out
addr16
pop
add
sbb
jge
xlat
push
imul
arpl
dec
in
test
outsl
loop
enter
cli
insb
pop
ljmp
int3
or
cmc
mov
sub
test
cmp
fistpl
into
mov
shll
fbstp
mov
or
rorl
aas
mov
jo
inc
sti
lcall
add
fwait
dec
cmc
push
clc
pop
xor
or
dec
xchg
nop
pushf
inc
inc
push
cltd
mov
pop
mov
jmp
add
cmp
cli
repz
adc
add
adc
stos
ljmp
xchg
sbb
xchg
clc
scas
aas
pop
cltd
add
xchg
xchg
mov
hlt
das
lods
pop
test
pop
daa
jnp,pt
mov
in
inc
test
repnz
sbb
mov
sarl
xor
cwtl
je
les
shll
dec
mov
mov
sti
fldenv
lods
leave
inc
jo
pop
in
enter
hlt
js
lahf
mov
icebp
andb
adc
and
and
mov
sbb
inc
xchg
pushf
add
xor
mov
pusha
ja
cmpl
scas
cmp
xor
mov
aad
fs
insl
ret
xchg
pop
or
fdivrl
bound
push
cmp
adc
inc
add
pop
adc
or
ds
cmp
dec
mov
jns
jo
and
jecxz
pop
adc
aad
clc
imul
sub
int3
bound
icebp
inc
mov
cmp
movsb
sub
in
ret
mov
cmp
pop
movl
or
out
sbb
add
icebp
imul
aas
daa
call
js
jge
loopne
add
rcll
sbb
aam
fsubr
pusha
sub
cmp
stc
nop
fdivrp
xorl
clc
mov
pusha
scas
or
push
popl
enter
jge
add
lods
push
pop
scas
xchg
sbb
sahf
push
push
stc
leave
insb
inc
insl
push
pop
mov
mov
jb
std
pop
test
add
inc
xchg
fmull
cs
jbe
xchg
mov
movsl
movsb
cmp
pushl
add
stos
xor
push
inc
gs
cmp
xchg
and
mov
test
dec
and
mov
sahf
fmuls
icebp
cmp
pop
repnz
lea
xchg
or
popf
test
inc
jb
push
in
fcomi
icebp
xlat
fidivrl
cmpb
sub
std
scas
dec
not
fnstcw
mov
inc
xchg
mov
repz
stos
lcall
sbb
sbb
cmp
dec
lret
or
jbe
push
into
rol
rcrl
mov
cmc
add
in
push
pusha
xchg
aas
pop
lahf
xchg
insb
sbb
outsb
lahf
sbb
out
mov
pusha
mov
lahf
xchg
aas
arpl
pop
dec
sbb
add
and
out
ja
test
out
ja
pop
cmp
test
pop
mov
jge
adc
lods
pslld
xor
lret
sbb
rorl
int3
mov
mov
mov
cmc
sub
ja
push
push
leave
inc
and
std
aaa
pop
stos
push
jle
stc
bound
adcb
int3
mov
fistpl
daa
dec
std
inc
insb
or
pop
jns
jo
fdivrl
fiadds
enter
cld
mov
inc
sarb
pop
jne
movsb
push
repnz
arpl
enter
imul
inc
cltd
jl
cltd
xor
pop
xchg
cmpsl
or
adc
xchg
insb
inc
mov
in
in
or
inc
in
je
cli
inc
ret
aas
imul
pop
jbe
xor
popa
xchg
cmp
mov
and
jmp
and
mov
push
jmp
and
mov
notb
std
mov
inc
test
sbb
lcall
popa
nop
ss
loop
xchg
incl
sbb
popf
lods
insl
or
rorl
sub
cmpsl
and
inc
aas
mov
mov
cmpsb
pop
lock
and
movsb
out
loopne
ljmp
stc
ss
or
add
ret
mov
adc
jb
and
movsl
push
outsb
jae
mov
stc
fs
xchg
fstps
pop
cmp
subl
fiadds
fstpl
cmp
ds
test
int
loop
adc
jmp
xchg
and
adc
subb
adc
pop
xchg
sbb
cmp
sub
loop
add
add
cld
xor
inc
lahf
mov
out
push
jp
adc
inc
shrl
jb
push
fcoms
cmp
imul
sbb
sub
cmp
mov
cmp
fisttps
xor
jmp
pop
jno
add
dec
int3
xchg
pcmpgtw
mov
xor
and
leave
cmp
and
dec
lea
inc
popf
test
outsb
adc
mov
mov
and
aad
icebp
loope
movsl
and
ret
mov
push
call
mov
les
lods
jb
mov
out
xchg
pushf
stc
addr16
jp
push
push
push
push
sbb
xor
mov
or
test
cmp
loop
xchg
xchg
in
dec
mov
pop
scas
jmp
jge
test
cs
inc
loope
cmpsb
cmpsb
xchg
and
sub
shlb
sbb
pop
mov
call
pop
pop
mov
and
pusha
ljmp
insl
xor
shrl
pop
jl
dec
add
enter
lcall
jl
jno
shr
sub
mov
fs
hlt
les
inc
xchg
out
and
in
add
sarb
rcl
push
xchg
insl
dec
add
outsb
imul
fs
push
sbb
jns
adc
xchg
cmp
inc
std
test
add
cmpsl
pop
mov
xor
cmc
dec
pop
push
test
mov
sbb
xchg
fcomip
popa
gs
idivl
out
mov
adc
movsl
fdiv
xlat
nop
dec
and
aam
dec
fsubrs
sbb
xchg
cwtl
mov
stc
ja
cmp
pop
pop
pushf
sbb
xor
or
xchg
adcb
dec
mov
xchg
add
add
loope
incb
fwait
mov
stos
sub
sbb
dec
hlt
aas
int
mov
add
repz
add
fs
mov
or
push
push
dec
jno
or
loope
sub
imul
cli
out
xor
or
cwtl
or
add
daa
icebp
or
adc
hlt
cmp
xchg
in
addr16
mov
mov
and
clc
push
mov
out
mov
imul
sbb
cmpsb
mov
mov
ds
add
or
add
jb
xchg
pop
sbb
mov
inc
adc
popa
iret
js
cmp
add
enter
insl
in
or
push
sti
cmc
hlt
dec
cmp
ficoml
fisubs
dec
iret
cmp
inc
shrb
test
jle
shrb
dec
js
sbbb
dec
mov
cmpsb
sahf
movsb
ljmp
add
fldl
sub
jne
jnp
mov
sbb
aam
arpl
scas
sbb
sbb
dec
or
lods
cmp
pop
into
or
inc
gs
jmp
lock
bound
dec
shrl
sub
testl
lds
iret
pop
inc
ret
push
cmp
dec
sbb
and
push
inc
inc
cmpsb
xchg
sar
movsl
sub
push
fdivrl
xchg
mov
ja
jp
fistpll
push
stc
pop
add
pop
cwtl
rcrb
fcomps
mov
sti
cltd
mov
push
test
stc
lods
xchg
jp
mov
das
movsl
push
in
push
pop
mov
fsubs
mov
inc
mov
sbb
or
pop
mov
orl
nop
pop
into
roll
cmp
cmp
push
mov
cmp
fsubr
ficoms
jb
mov
loop
sub
add
mov
push
pop
mov
jae
add
and
or
pop
dec
xor
mov
mov
stc
push
std
sub
jl
aad
mov
inc
in
das
sub
pop
fisubs
jge
jle
push
inc
gs
insb
pop
mov
rcrb
sub
inc
jg
push
je
xor
hlt
aaa
mov
xchg
or
xchg
fldcw
pop
push
inc
mov
mov
out
xor
test
inc
jbe
and
and
cltd
jnp
add
enter
insl
rclb
adc
mov
xor
pop
stos
and
out
push
jmp
xchg
aas
gs
xchg
repz
adcl
push
adc
ljmp
popf
lods
xchg
cmp
js
xchg
pushf
sbb
lods
xor
ljmp
jg
rorb
data16
sub
xor
and
std
pop
xor
xor
xchg
rcrb
xchg
clc
jns
adc
xchg
cmp
lds
movsb
loop
fistpll
sbb
xchg
pop
add
repz
pop
sar
rolb
inc
xor
es
jge
mov
mov
pop
fsubrl
decb
jne
es
cmp
test
inc
adc
jns
push
lods
out
adc
popf
ffreep
mov
cli
push
mov
jp
add
xchg
push
fxch
jle
popf
aam
ds
jbe
mov
dec
add
frstor
pop
xadd
daa
fnstenv
fdivrs
shlb
mov
mov
mov
xor
imul
add
aam
in
test
pop
xchg
pop
mov
icebp
pop
dec
dec
mov
dec
mov
mov
jns
jle
call
inc
adcb
sbb
mov
cwtl
mov
jmp
bound
xor
push
bound
imul
xchg
sbb
roll
je
jecxz
out
fcmovnb
popa
sub
pop
fidivrs
cmp
in
jge
movsb
je
not
dec
inc
push
cltd
pop
gs
jl
gs
adc
push
dec
push
faddl
inc
mov
dec
roll
js
mov
outsb
cmp
xchg
adc
aas
je
dec
sbb
and
xchg
mov
and
test
std
out
sti
inc
inc
inc
sbb
adc
pop
or
idiv
jb
dec
cmpsb
and
movsl
jle
xchg
gs
lds
inc
cli
es
dec
fisubs
bound
call
dec
and
daa
or
out
cli
insl
mov
mov
cli
outsl
pop
ret
mov
imul
out
das
les
cmp
jbe
mov
mov
dec
out
test
fisttpl
sub
xchg
add
mov
sbb
pop
repnz
fmull
in
jne
xchg
add
push
bound
cmp
xor
stos
cmc
jb
addr16
mov
dec
push
ljmp
idivl
insb
xlat
push
daa
lods
push
inc
std
les
inc
mov
cmpsl
xchg
std
cmp
xor
sub
lock
orb
ja
sbb
xor
push
add
mov
mov
stos
cmp
mov
fidivrl
dec
jnp
ds
jg
arpl
xchg
pop
and
cmp
sbb
inc
inc
test
dec
cmp
push
lea
ljmp
mov
fwait
scas
xor
sahf
and
add
aaa
and
fistps
inc
out
mov
and
pop
push
push
xchg
fwait
mov
jmp
jge
push
and
fsts
in
mov
xchg
xor
test
repnz
pop
cmpb
sub
mov
scas
nop
fbld
fcmovb
dec
daa
mov
push
cltd
stc
pop
pusha
idiv
jg
pop
cmp
loop
mov
sbb
xchg
push
mov
and
inc
lds
insb
cmp
movsl
push
imul
imul
fldl
and
in
loop
cmp
xchg
aaa
dec
mov
push
jp
out
jo
mov
pop
push
stc
push
dec
fsubrl
xchg
pop
cld
std
out
mov
pop
add
js
cwtl
shr
mov
push
pop
jle
and
mov
outsl
xchg
bound
call
scas
adc
fisttpll
js
add
orl
or
inc
scas
jmp
dec
ficomps
stc
arpl
test
push
inc
aad
test
pop
or
lock
and
iret
or
outsb
daa
clc
out
in
fiaddl
std
and
jg
out
arpl
bound
jno
std
test
cmp
xchg
imul
and
lret
pop
push
dec
in
and
dec
enter
test
and
mov
jbe
pop
ret
push
insl
mov
out
andl
repz
push
push
enter
sub
repz
add
adc
ljmp
out
cmpsl
iret
shlb
movsl
dec
jle
xorl
xor
outsl
push
mov
and
or
nop
pop
aas
jmp
in
sbb
lret
mov
inc
in
notl
out
or
icebp
ljmp
sarl
inc
jle
testb
movb
mov
icebp
aas
add
movsb
hlt
or
xor
add
jecxz
and
fistps
or
mov
pop
into
nop
int
test
or
jns
mov
in
arpl
mov
pusha
aaa
cmp
mov
lods
inc
add
dec
inc
out
fstpl
dec
cmpl
cwtl
rcrb
addr16
mov
jno
cmp
lret
push
fsubrl
stos
or
ljmp
add
ds
test
inc
rcrb
imul
sub
fildll
mov
and
pop
ret
sbb
rcrb
jb
push
add
inc
decb
xchg
fwait
mov
loope
push
shr
or
push
sbbl
fcompl
jl
test
and
shll
inc
dec
das
addr16
daa
sub
test
pop
push
sarl
mov
pushf
lock
cltd
push
jnp
lahf
jle
aas
mov
daa
aas
pop
ljmp
fsubl
push
add
inc
movsl
sub
xchg
popa
add
push
jl
add
xlat
test
inc
mov
push
push
mov
dec
mov
cmp
mov
push
inc
pop
cmp
push
push
inc
push
cli
cmp
jmp
sahf
push
push
std
popf
add
xor
lcall
sti
and
mov
jne
mov
subb
mov
movsb
loop
lods
lret
repnz
push
xchg
push
mov
pop
shl
mov
inc
push
inc
movsl
add
insb
cmp
mov
mov
xchg
fld
pop
gs
ret
or
sbb
outsl
shld
mov
sub
nop
cwtl
jmp
xor
pop
data16
cmp
movsb
mov
ljmp
xchg
adc
icebp
lods
add
pop
xor
or
mov
add
roll
test
mov
ds
fnstcw
sbb
xor
dec
jno
jl
faddp
popf
cmp
jns
and
fldl
daa
fs
sbb
insl
in
jno
test
mov
pusha
push
dec
mov
scas
ror
adc
and
cmp
or
xor
adc
sti
inc
dec
es
cwtl
mov
ljmp
sbb
fsts
aad
inc
dec
pop
xchg
in
mov
enter
mov
and
ffreep
rclb
mov
jg
stos
scas
xchg
and
sub
dec
cld
scas
inc
cmp
cmp
adc
inc
dec
cmpsl
cmp
loopne
add
cmp
cmp
fdivrs
icebp
jle
adc
jbe
xchg
pop
mov
pop
push
pop
xchg
rcrb
cmp
in
add
xchg
sub
subb
sti
fdivr
cmp
pop
arpl
out
loop
push
repz
aas
sahf
fsubs
es
ja
fnstcw
faddl
inc
iret
mov
lcall
inc
xchg
push
adc
in
add
add
and
ss
jl
and
inc
outsl
push
aad
out
adc
pop
inc
movsl
lds
sbb
pop
ljmp
das
mov
repnz
stos
rorl
jbe
mov
dec
sti
xor
out
xchg
jle
cmc
outsb
aas
out
and
scas
stos
pop
popf
enter
dec
mov
clc
enter
mov
xchg
and
mov
andb
add
ss
jnp
jbe
or
xchg
jl
dec
out
lahf
enter
js
nop
and
cmpl
nop
cmp
je
xorl
cmpsb
in
iret
mov
out
push
addr16
fistpl
xchg
mov
pop
jbe
inc
test
pop
pop
xchg
sahf
inc
xor
roll
ss
push
mov
push
push
sbb
inc
iret
mov
push
mov
sbb
and
jle
enter
enter
flds
cld
inc
popa
pop
lods
inc
jl
lds
les
or
xchg
fdiv
ja
lds
jae
movsb
sbb
cli
mov
push
cltd
xchg
pop
fs
int
inc
dec
mov
push
jnp
sub
dec
jnp
pop
pop
adc
and
and
je
hlt
ljmp
mov
pop
roll
pop
jp
xor
aam
dec
cli
cmp
add
mov
ljmp
pop
repnz
jecxz
cmc
les
rol
push
mov
aas
loop
in
movl
fs
in
addb
aam
push
sub
clc
push
sbb
jne
jl
xchg
sub
js
pop
lcall
ja
sub
mov
inc
std
popa
imul
xchg
into
push
decb
xchg
dec
test
daa
pop
sub
inc
or
dec
and
addl
push
jl
dec
pop
pop
xchg
lods
nop
aad
inc
cmpsb
jmp
push
int3
shrl
or
jmp
ds
jo
bound
dec
push
mov
cwtl
jge
fbstp
xlat
mov
repz
sub
ljmp
pop
dec
scas
push
out
out
jle
xchg
push
sbb
and
inc
mov
out
movsb
popa
mov
and
arpl
sbb
cmp
xor
jne
pop
clc
lods
lock
jp
adc
fwait
out
push
xor
movsb
jle
lahf
xchg
add
es
mov
mov
lea
ret
shlb
test
daa
dec
mov
and
dec
add
scas
stos
arpl
jnp
sbb
dec
jle
std
cmpsb
inc
push
stos
mov
push
shr
push
cmp
cmp
arpl
pusha
lret
pop
js
and
mov
inc
rcll
insb
dec
cwtl
hlt
cmp
pop
adc
rcl
xor
aam
jns
out
fs
movsb
push
and
mov
push
sub
shr
inc
mov
sbb
sbb
jae
jl
ss
mov
call
lods
data16
mov
decb
cmp
in
ret
orb
add
jno
push
push
sbb
sbb
loopne
mov
jmp
addb
mov
xchg
push
inc
mov
in
out
out
lret
shrl
mov
push
pop
ljmp
and
adc
mov
pop
adc
pop
ds
jge
pop
or
sahf
call
imul
lcall
push
loope
dec
ds
push
pop
nop
mov
lods
idivb
lahf
ret
cld
js
dec
bound
ljmp
js
cltd
aas
jge
cmpsb
inc
daa
pop
mov
mov
xchg
nop
add
imul
fcomps
xchg
movsl
dec
and
pop
sbb
sarb
movntq
pop
dec
cmc
in
jbe
mov
or
popl
dec
xor
lock
lcall
jecxz
bound
xor
inc
inc
jmp
ja
lds
addl
js
mov
sti
sub
adc
xchg
jg
lods
lods
add
repnz
ss
sbb
mov
or
addr16
stos
dec
testl
notb
jns
xchg
push
mov
scas
mov
in
les
clc
sti
and
adc
test
pop
fsubrs
inc
notb
ja
shr
inc
add
mov
push
cmpsb
cld
out
das
mov
in
pop
enter
lock
and
inc
dec
or
lods
out
add
add
jno
mov
cmc
jle
lds
mov
insl
enter
jle
xchg
pop
mov
mov
rcll
dec
push
int
adc
xor
sub
insb
inc
movsb
mov
inc
sub
mov
in
ljmp
in
and
rcll
int3
test
xor
popf
std
fimull
sarl
rcrl
jbe
fs
scas
xchg
call
jne
aam
jg
scas
divl
inc
cmpsb
scas
jns
popl
inc
mov
shl
jp
mov
add
mov
fisttps
mov
or
mov
pop
test
add
dec
in
mov
cmp
lret
sub
cmpsb
mov
stos
cmc
sbb
xor
mov
in
imul
mov
mov
xor
ud2
push
add
and
lcall
xchg
ja
out
cmp
in
mov
cld
out
or
loopne
adc
inc
iret
arpl
aas
stc
lods
fcmovne
lcall
add
or
dec
cmp
fs
dec
jne
xchg
scas
lret
out
jge
nop
push
push
or
jp
loopne
add
gs
in
loopne
hlt
mov
push
xchg
dec
add
pop
in
cmp
icebp
mov
mov
inc
popa
in
mov
push
or
aam
push
mov
dec
sbb
add
adc
sbb
stos
jg
leave
outsl
jmp
ficompl
sub
imul
push
insl
pop
sub
dec
insl
sbb
cltd
insb
add
test
and
pop
push
cli
subb
popa
bnd
jno
xorb
adc
arpl
in
inc
dec
jae
out
sub
addr16
cmp
lock
and
push
inc
loopne
imul
ret
insb
adc
pop
repz
dec
jnp
jb
cmpsl
repnz
or
mov
outsb
test
dec
xchg
lahf
fists
add
xor
fistpll
cmc
xlat
jecxz
pushf
cld
and
lcall
or
jecxz
push
fstps
adc
xchg
into
pop
out
sub
in
cmp
arpl
lds
jge
addr16
mov
xchg
cmpsb
mov
xor
and
cmp
insl
add
test
loop
inc
or
add
in
data16
xchg
push
sub
out
add
loopne
lock
push
insl
mov
mov
enter
or
mov
jae
fchs
sbb
cmp
add
insl
movsl
sarl
pop
popf
scas
popa
cmp
xlat
sub
and
fs
fcmovbe
mov
xchg
and
in
lret
arpl
stc
pusha
add
sbbb
xchg
inc
jl
enter
into
xchg
js
in
out
mov
arpl
leave
mov
push
int
out
jnp
mov
pop
aas
cmpl
test
icebp
jecxz
jbe
mov
js
dec
push
sbb
cmp
pushf
fnstcw
push
add
jno
xorl
or
test
sbb
test
mov
sahf
fwait
adc
cmp
test
bound
pop
jo
xchg
cmp
frstor
add
cltd
lods
xor
lahf
lret
pop
fadd
inc
mov
jge
jl
shlb
ljmp
pop
add
jb
shl
cmp
ret
pusha
bound
bound
in
sub
pop
sbb
call
int3
push
rcrl
pop
cmpsb
mov
and
or
and
js
repnz
inc
nop
add
cmpsl
in
xor
std
xchg
ficomps
sbb
pop
xchg
inc
stc
cld
jnp
imul
cmpsb
mov
shll
ficoms
cmp
call
pop
je
sub
or
fnstsw
aad
ret
cli
es
mov
or
imull
dec
iret
cmpsl
or
push
into
stos
jg
mov
adc
dec
testl
sbb
addr16
pop
and
loopne
mov
addr16
cltd
out
dec
push
enter
iret
and
pop
push
mov
daa
arpl
in
and
sub
insl
stos
xchg
cmp
leave
xchg
and
mov
push
jb
jmp
in
mov
test
push
les
outsb
clc
rcrl
mov
or
push
ficoml
mov
mov
test
int3
test
enter
jl
mov
popa
mov
test
divb
js
sbb
push
loop
inc
xchg
xchg
push
mov
shll
pop
out
xor
in
inc
jo
punpckhdq
push
cmpsb
push
dec
popf
test
xor
jle
mov
sbb
out
push
roll
mov
addr16
pushf
orb
daa
aas
inc
mov
jecxz
test
mov
sbb
sub
stos
mov
push
xchg
fdivp
popa
ss
sub
mov
inc
mov
lret
stc
jmp
arpl
push
sbb
fidivs
push
stos
inc
add
movsl
lea
pop
push
xchg
outsl
test
adc
enter
insb
push
repnz
loop
jle
nop
dec
arpl
iret
sub
std
data16
adc
dec
lcall
in
jge
or
push
data16
jl
call
push
sahf
dec
popa
in
daa
dec
and
jle
push
shlb
mov
inc
inc
pusha
cltd
mov
mov
lods
add
aam
gs
ret
cmp
dec
into
mov
or
insb
xor
pop
and
fld
xchg
or
fdivr
inc
scas
ja
and
and
shl
les
xor
mov
push
pop
inc
inc
out
push
call
adc
add
lods
pop
xorl
jle
push
ja
dec
xchg
mov
hlt
ret
jns
cltd
out
pop
dec
lock
out
ds
lods
mov
inc
jo
xchg
push
dec
cld
add
das
in
inc
mov
mov
jp
dec
stos
popf
scas
dec
mulb
out
cmp
mov
pop
fdivr
inc
inc
mov
in
outsb
jo
in
push
pop
pop
jo
fldcw
pop
push
or
ja
repz
push
xchg
hlt
dec
xor
loopne
les
out
inc
loope
movsb
ljmp
sub
mov
dec
or
in
lods
es
push
dec
xchg
insb
inc
fwait
push
fdiv
ret
sbb
adc
movb
dec
dec
popa
mov
pop
test
mov
arpl
xchg
js
push
push
mov
leave
ja
fiaddl
aas
scas
stos
in
inc
mov
lds
add
mov
pusha
xchg
loopne
out
pop
add
mov
cmc
cmp
fdiv
xor
mov
jp
mov
repnz
jg
fs
fcoml
movsb
sub
stos
popa
cmp
dec
lcall
insl
or
mov
loope
and
testb
sbb
daa
bnd
or
sahf
ret
lods
cltd
sbb
sti
std
pop
sahf
adc
lods
fnstenv
lcall
dec
les
scas
or
scas
int3
dec
xor
out
or
cmp
pop
in
cltd
andb
iret
addr16
leave
cli
add
xchg
add
shlb
dec
popf
movsb
repnz
cmpsb
lret
sub
add
adc
pushf
jb
clc
jle
lret
jae
aaa
push
fsubrl
cwtl
push
repnz
scas
mov
jno
sbb
jg
mov
test
es
fisttpll
int
dec
cmp
sbb
repnz
xor
adc
jl
scas
mov
pusha
mov
repnz
into
mov
jecxz
fcmovbe
stos
mov
outsb
pop
dec
push
sahf
add
push
cmp
sub
fwait
pop
mull
sti
inc
or
pusha
xchg
sarb
jno,pt
lcall
jge
ret
aam
mov
pop
stos
jge
pop
mov
loopne
jmp
inc
and
in
pop
or
mov
push
push
adc
adc
imul
cwtl
aas
cmp
sbb
xchg
push
cmp
dec
push
int
test
popl
stos
push
or
aas
xchg
push
adc
sbb
mov
mov
popf
pop
cmp
pop
fbstp
mov
sbb
test
inc
jmp
and
add
and
std
in
inc
dec
sar
inc
movsb
dec
mov
stos
in
push
mov
or
popa
aad
push
jns
push
pop
and
aam
pop
cwtl
jmp
into
mov
add
sarl
pushf
and
pop
popa
push
sti
in
adc
jmp
and
fdivr
divb
js
xchg
stc
movsl
data16
das
ret
cmp
mov
cmp
rcrl
cld
lea
lret
sbb
int3
jg
mov
push
mov
push
mov
cwtl
sbb
push
ficoml
cwtl
arpl
test
or
popa
scas
lods
add
data16
pusha
stos
in
out
mov
imul
xor
pop
sub
ds
push
mov
aas
xchg
int3
add
inc
pop
mov
leave
arpl
je
lods
jl
je
jecxz
mov
dec
pop
lods
js
mov
leave
jne
push
xchg
icebp
xlat
push
enter
arpl
test
inc
mov
push
aas
testl
fisubrs
and
or
inc
pop
sbb
xchg
ljmp
dec
jnp
jae
sbb
les
xchg
dec
pop
pop
push
loope
dec
mov
jle
add
in
outsl
pop
cmpsb
addr16
xchg
aad
xor
pop
out
pop
std
movsl
dec
and
fs
or
aad
pop
pop
pop
add
sub
push
sbb
push
pop
loopne
add
stc
ss
insb
adc
xchg
pop
and
fistpll
out
fwait
js
mov
hlt
mov
int3
test
pop
loopne
sbb
jbe
mov
push
fcmovu
xor
inc
mov
fldl
pop
pop
inc
dec
mov
sbb
pop
lret
push
into
jle
fucomp
pop
test
imul
push
inc
pop
mov
stos
dec
sbb
scas
add
pop
and
pop
jmp
or
jp
ret
jno
imul
sub
add
ret
inc
icebp
jmp
mov
jecxz
xorb
adc
icebp
mov
lods
push
dec
inc
pop
pop
ret
add
lds
jecxz
js
in
shrl
mov
mov
ja
dec
outsb
fisubrl
lods
cmp
mov
dec
push
inc
ja
iret
push
xor
test
shll
outsl
dec
std
xchg
inc
hlt
in
incb
in
add
add
dec
fmuls
test
cmp
xchg
lock
in
insl
test
cmc
frstor
lahf
aad
ljmpw
push
test
push
rcrl
out
or
nop
jge
push
mov
push
push
shll
push
mov
es
lods
and
fs
cmp
xchg
inc
add
xchg
xchg
add
test
xor
xlat
xchg
dec
fcomps
cli
xchg
push
sbb
mov
dec
sub
adc
into
jbe
mov
dec
mov
stc
push
jbe
fcmovbe
aaa
fcos
pop
and
dec
insb
xchg
scas
cmpb
adc
pop
xor
ljmp
cmp
push
push
add
scas
mov
mov
jg
out
lret
add
add
imul
dec
adc
popf
pop
dec
outsb
test
pop
inc
repz
es
mov
push
mov
scas
push
pop
mov
mov
mov
movsl
push
sti
clc
sub
xor
das
scas
mov
cmp
ficoms
fbstp
mov
add
lcall
push
add
cmp
dec
or
lods
and
leave
and
jmp
in
fwait
sub
lds
mov
cmp
xchg
aam
xor
xlat
rcrb
daa
addr16
in
add
sbb
lcall
inc
mov
and
mov
pop
punpcklwd
lahf
shlb
into
cmp
mov
fwait
sbb
sbb
xchg
lods
jbe
sub
rcl
jno
sbb
pop
popa
aad
daa
mov
outsl
xchg
jp
and
out
lahf
bound
inc
and
inc
gs
mov
pop
add
cmpsl
push
push
daa
aam
mov
fisttpll
push
cmc
add
fnstcw
fisubs
xor
jle
pop
mov
in
dec
leave
gs
fwait
stos
inc
mov
cmpsb
mov
fsts
neg
xor
bound
push
inc
das
into
stc
iret
jno
sbb
sbb
or
dec
push
xchg
pusha
into
sub
or
jge
jl
sti
sub
sbb
mov
out
ret
cmp
adc
adc
pop
xor
xchg
int3
cmp
jnp
xchg
fdivl
sbb
aad
cmc
cmp
idivb
jb
cmovo
pop
in
inc
outsb
dec
dec
xchg
dec
inc
dec
dec
mov
jbe
dec
popl
dec
lea
test
jb
test
jbe
lods
dec
jl
popf
push
push
scas
mov
xchg
aam
cmp
pop
add
push
mov
mov
sbb
sub
mov
push
inc
mov
jmp
int3
cmp
cs
mov
pop
push
sbb
in
or
repnz
inc
jge
xchg
aas
cli
lods
test
or
mov
pop
or
stos
dec
xchg
jmp
cmpsb
sbb
inc
inc
sub
mov
repnz
jecxz
iret
xor
jnp
mov
xchg
mov
xlat
stos
sti
push
or
imull
inc
ds
inc
repz
dec
jle
cmp
movsl
dec
jge
pop
cltd
pop
mov
or
cli
rcll
lock
dec
int3
xor
xchg
mov
or
xor
mov
je
push
out
pop
mov
rorb
test
fstps
cltd
sbb
xor
dec
rclb
fldcw
movb
pop
dec
lahf
aad
dec
cmpsb
mov
pop
push
fldcw
sub
mov
fistl
xchg
push
mov
jmp
xchg
movsb
adc
lods
lods
or
add
testb
mov
movsb
jno
cmpsl
mov
dec
int
xchg
mov
pop
fidivrl
sbb
shl
jne
std
pusha
inc
rcll
mov
test
pop
lods
lock
aaa
idivl
leave
cltd
mov
or
dec
sbb
and
dec
icebp
xchg
push
inc
fimuls
and
mov
arpl
stos
testb
shl
cmp
mov
pop
adc
add
adc
jbe
jbe
add
xor
push
push
lret
xchg
xchg
xor
mov
mov
and
aam
test
bound
xchg
mov
mov
sahf
and
leave
test
or
jnp
out
int3
add
push
rol
and
movsl
xchg
frstor
movsl
fdivr
inc
sbbl
cltd
jge
inc
xchg
pop
or
jp
outsb
mov
and
ds
lret
arpl
dec
mov
repnz
dec
push
or
and
fiaddl
icebp
into
aam
jnp
imul
test
cmp
aas
out
imul
leave
cmpsb
std
leave
aas
jmp
cmc
aam
pop
cmp
xchg
mov
xchg
int3
call
dec
mov
test
data16
ljmp
jb
dec
inc
stc
je
jae
dec
or
mov
ret
jno
push
xor
mov
idivl
insl
cmpsl
repz
pop
jge
or
cmpsb
in
adc
lock
cs
mov
dec
xor
mov
ret
cltd
mov
inc
fldcw
dec
pushf
xchg
pop
inc
add
push
push
jno
pop
xor
jle
scas
xchg
stos
or
xlat
fidivl
jmp
jo
jg
gs
and
sahf
mov
mov
xchg
cs
jge
and
in
jne
inc
stos
and
jg
jg
sub
shlb
sub
std
pop
push
lret
pop
xchg
mov
dec
gs
xchg
xchg
sbb
xchg
mov
fldenv
push
fs
mov
or
out
decl
std
mov
scas
insb
pushf
je
stc
jp
sbb
mov
xchg
dec
pop
sub
push
cli
xor
sbb
sti
lods
add
scas
push
cmpsl
in
fsubs
jp
movsl
sbb
or
movsb
xrelease
std
jecxz
sub
or
jae
push
mov
ror
jp
cs
out
jmp
js
mov
ficoms
sub
test
popf
pop
inc
es
lods
cmp
or
outsb
frstor
inc
fsub
imul
add
enter
movsl
dec
addr16
cltd
movb
pop
xchg
test
out
jbe
fnop
or
jno
jg
xlat
cmp
mov
cli
les
fs
test
test
nop
inc
dec
sub
ds
inc
insb
inc
and
lock
addr16
icebp
cmpsb
frstor
mov
gs
fisubrl
push
cmc
daa
fidivl
faddp
inc
mov
mov
pop
sub
xchg
sbb
aas
test
xor
out
and
inc
add
jns
addl
nop
std
dec
shll
jnp
dec
or
call
cld
cmpsl
xor
arpl
rorl
xchg
nop
pand
imul
mov
dec
sub
mov
push
cmp
aaa
or
add
sarb
jg
sub
orb
inc
in
ret
jb
aas
mov
fstps
lret
pop
sub
mov
insl
js
sbb
sub
mov
in
imul
nop
das
pusha
adc
add
cmpsb
mov
movb
cmp
mov
push
into
std
stos
inc
rorl
lea
sahf
pop
lods
scas
push
cld
sbb
into
pop
aam
cmpsb
mov
and
adc
rorl
add
mov
xchg
mov
daa
aad
scas
and
adc
adc
loopne
test
lahf
and
in
dec
aad
sub
cltd
xchg
dec
jbe
rcrl
and
jns
pop
cmc
fimull
or
rcl
mov
les
mov
js
shrl
or
nop
pop
push
loop
out
addr16
xchg
push
mov
or
insl
xchg
arpl
lret
sahf
mov
pop
imul
mov
mov
std
dec
and
clc
nop
push
and
inc
cwtl
stc
aam
out
push
mov
clc
lret
mov
lret
addr16
fstpt
je
loope
movsb
vpcmpeqd
movsb
aas
bound
subl
outsl
nop
out
push
roll
jle
test
inc
call
pop
inc
je
fcomip
dec
push
daa
arpl
scas
fldenv
pop
lahf
mov
jg
or
mov
bound
mov
jb
mov
inc
mov
push
mov
inc
xchg
cli
stos
cmp
test
fidivrs
cmpsb
mov
inc
std
aad
xchg
or
sarb
pop
pop
dec
gs
jmp
mov
mov
dec
xor
repz
es
mov
js
pusha
jge
jne
js
cwtl
packsswb
mov
jb
mov
in
arpl
mov
imul
jl
and
push
stos
imul
add
pushf
shrb
loopne
sub
xchg
fisttpl
pop
mov
dec
fdivrl
pop
pop
mov
dec
or
insl
pusha
pop
popf
iret
mov
dec
in
aad
mov
movsb
dec
jae
cwtl
sub
inc
jle
jmp
xlat
mov
subl
push
inc
cmp
sub
movsb
mov
cmp
out
daa
cwtl
jp
lock
cmp
jge
shr
shll
mov
push
loopne
cmp
negb
or
enter
mov
push
pop
rcl
gs
out
nop
sbb
jb
mov
dec
and
pop
jno
scas
adc
pop
test
fcmove
addr16
call
pop
mov
or
lods
push
inc
movsl
test
cmpsl
jp
into
or
pusha
scas
test
pop
cmp
das
push
cwtl
das
inc
xor
lret
gs
cmpsl
cmp
cltd
xchg
fisubrs
fucom
mov
or
adcl
inc
fld
lret
sarl
pop
aas
out
pop
xor
and
pushf
jmp
sub
imul
cmp
pop
loopne,pn
mov
dec
or
mov
lea
loop
sbb
xchg
add
pop
or
adc
arpl
std
int3
gs
jbe
sub
mov
xor
jg
iret
daa
clc
jmp
mov
add
mov
leave
and
fcmovnbe
mov
movsb
loopne
movsb
insb
outsb
outsb
mov
rcrb
cmp
enter
lret
mov
jbe
push
sbb
mov
out
cmp
jae,pn
fistl
cmp
jno
jbe
jnp
roll
jge
sub
sbb
cmpsb
shrl
and
out
das
add
les
and
jno
inc
inc
mov
add
hlt
xchg
lret
add
scas
cmc
add
pop
nop
push
fldenv
add
mov
cmc
in
push
push
sub
iret
aaa
hlt
pusha
inc
lds
pop
pop
and
std
mov
xchg
pop
jno
shll
std
iret
adc
mov
push
mov
jg
enter
mov
ljmp
fnstcw
inc
cs
xchg
js
dec
arpl
addr16
fsubl
mov
imul
insb
loop
inc
xor
pop
push
in
and
sbb
cmpsl
or
mov
stc
add
adc
repz
fucomip
xor
sub
xchg
dec
fldpi
loopne
and
jle
stos
clc
hlt
dec
loope
push
imul
xchg
xor
mov
cmp
mov
imul
xchg
sbb
js
in
clc
push
call
push
sub
jle
test
xchg
jge
cmp
mov
outsb
push
bound
stc
push
jne
push
inc
xchg
jmp
xor
test
xchg
sub
fucomip
mov
add
or
cmpl
dec
xchg
or
or
push
sbb
adc
sbb
aad
mov
sbb
jno
mov
and
mov
xchg
adc
pusha
mov
in
addr16
cmc
inc
jle
pop
test
femms
aas
jle
add
lret
call
roll
xor
negl
cmp
push
adc
or
lret
xchg
mov
jb
or
mov
ds
gs
mov
xor
inc
cmpsb
mov
cmp
inc
in
ljmp
outsb
roll
enter
jbe
mov
test
pop
lods
xlat
hlt
pop
mov
gs
sarl
daa
or
mov
xchg
cmp
pop
jle
nop
mov
xchg
cld
and
cmp
sbb
inc
adc
xor
fwait
addb
pop
inc
pop
mov
gs
mov
mov
fbstp
jle
mov
test
sbb
inc
mov
lea
shl
xchg
dec
push
popf
imul
dec
push
jle
sbb
mov
int3
dec
jmp
je
jle
cld
ja
in
pushf
out
push
jno
sarl
mov
mov
jmp
add
movsl
rcrb
js
cmp
mov
cmpsl
xchg
out
inc
clc
cltd
push
or
cmp
adc
dec
push
push
out
and
ret
orl
add
push
ds
das
cli
xor
in
dec
cmp
cmp
jb
jmp
bound
into
xchg
sahf
ss
jne
cmp
lea
xchg
add
jl
test
roll
xor
sahf
cmp
push
adc
shlb
sub
pop
dec
iret
pop
mov
mov
rorl
pop
lock
jl
popf
jb
pop
xor
shll
mov
out
adc
push
add
mov
xchg
shrb
fisubl
iret
mov
push
mov
and
pop
push
jnp
mov
jne
xchg
lret
jb
cltd
mov
popa
in
and
subl
test
jmp
ret
dec
fildll
bnd
shrl
pop
fldt
mov
pusha
outsb
in
cmp
add
mov
xchg
adc
addr16
mov
or
or
ljmp
sahf
lods
pop
cltd
cmp
mov
stc
pop
fistl
jl
pop
jo
add
test
sti
out
jmp
add
sbb
sahf
enter
insl
adc
pop
dec
sbb
pop
cmovno
mov
mov
in
or
xchg
dec
push
bound
xchg
dec
adc
push
jecxz
dec
sarl
adc
xchg
test
scas
js
xchg
int3
jle
sub
insb
pop
lret
sbb
dec
xchg
and
divb
aaa
sub
add
imul
orl
icebp
loop
test
mov
add
ja
xlat
sbb
test
and
das
push
icebp
mov
popf
xchg
leave
dec
rol
int
push
pop
lret
push
stos
popf
push
shrb
jne
addr16
insl
push
loope
cmpb
add
test
repz
lcall
test
mov
add
movsb
fnstsw
push
loopne
push
sbb
inc
xlat
adc
pop
stos
imul
add
xchg
dec
cmp
sub
int
addr16
cmp
shll
fcompl
cltd
rcr
enter
pop
dec
in
mov
jl
scas
mov
jns
sbb
jb
rcrb
jo
hlt
cmc
aam
into
popf
aad
lds
jl
or
shlb
jns
push
popf
pop
pop
call
mov
lds
sbb
or
mov
movsl
and
fstps
arpl
dec
jge
fldenv
out
or
xor
iret
jge
rclb
inc
xlat
das
jmp
repnz
pusha
test
pop
nop
pop
adc
das
add
repnz
ljmp
icebp
mov
or
clc
xor
bound
pop
or
dec
mov
pop
cwtl
sbb
enter
lods
inc
call
dec
movb
or
jl
fcomip
xchg
pop
sub
loope
loop
insb
xchg
cli
push
pop
addr16
cmp
sahf
sysexit
and
leave
cmp
mov
insb
cltd
adcb
mov
sbb
repz
fstpl
je
xor
cli
pusha
pop
in
data16
aaa
imul
mov
popa
mov
fucom
lahf
cmpb
cli
ror
shll
sbb
cmp
and
lret
data16
mov
test
push
pusha
cmpsl
je
add
jl
mov
push
gs
testb
jmp
push
bound
leave
adc
cmp
sbb
in
or
add
mov
push
sbb
jle
outsb
mov
test
mov
or
movb
je
repnz
je
insl
xor
subl
push
fistps
dec
repnz
fidivrs
adc
jo
dec
inc
dec
je
enter
popa
add
movsb
rorl
dec
xchg
out
and
adc
iret
aas
fbld
xlat
cli
enter
xchg
or
insb
je
xchg
cmp
out
jge
push
pop
adc
jecxz
xchg
push
mov
fidivs
mov
mov
sbb
arpl
js
daa
mov
in
push
movsb
lock
cmpsb
mov
out
fucomp
mov
loop
xor
jns
jns
jnp
sahf
jle
test
insl
inc
inc
enter
xchg
ja
mov
jo
mov
fdivrl
pop
jbe
inc
call
cmp
cmc
sbb
xchg
mov
out
out
lods
push
mov
push
jbe
mov
punpckhdq
shlb
mov
push
adcb
and
mov
or
aad
or
pop
push
movsb
sahf
enter
icebp
mov
mov
and
jecxz
sbb
fsubs
jmp
push
jmp
outsl
xchg
push
adc
and
lahf
call
jg
test
xor
mov
lea
adc
mov
lret
adc
or
fidivs
lret
fidivs
jne
loopne
inc
insl
movsb
fnsave
hlt
mov
ljmp
lock
mov
mov
popa
mov
inc
outsl
popa
fdivrl
lods
cmc
mov
sahf
out
pop
and
aaa
pop
fsubs
jg
int3
push
cltd
outsb
dec
and
and
inc
adc
inc
jmp
clc
pcmpgtb
out
fdivrl
leave
mov
mov
xor
scas
fistpl
pop
push
dec
xchg
jmp
inc
mov
int
ficomps
and
jp
xchg
sub
cwtl
bound
cmpsl
mov
into
and
or
xchg
xor
outsb
and
cmp
cmp
jns
or
aad
cmpsb
stc
mov
aad
popf
mov
or
xchg
jno
mov
fwait
or
jnp
sub
gs
jbe
fcomps
jno
jae
shll
outsl
and
stos
mov
int3
outsb
mov
out
into
push
ret
push
add
daa
and
lods
push
call
repnz
lahf
call
das
xor
int3
mov
add
mov
ss
cmp
outsb
xor
adc
fs
lret
cmc
test
out
dec
mov
jne
rclb
imul
jbe
sbb
adc
xor
xchg
out
inc
jmp
pop
aaa
jae
icebp
ljmp
add
lcall
hlt
popa
dec
jg
jae
mov
testl
int3
popf
jmp
repz
outsl
cmp
jbe
lds
lret
pop
inc
fdivs
or
jbe
cmp
cmp
or
xor
faddl
mov
pop
rcr
jg
insl
icebp
jmp
jl
push
add
jae
ficomps
sub
arpl
imull
lods
fdivs
addb
sub
imul
sub
ss
lds
aam
fadd
les
hlt
jmp
pop
adc
mov
movsb
inc
sbb
push
jmp
cld
adc
jnp
lea
sbb
fstl
and
mov
or
mov
pop
mov
in
ja
shll
or
clc
sub
scas
enter
xchg
pop
or
aam
mov
out
jo
int3
sbb
mov
mov
dec
inc
les
pusha
jmp
mov
or
mov
movsb
xor
inc
and
jmp
cmp
mov
lods
mov
aam
mov
lds
and
mov
xchg
push
pop
fdivs
je
aam
adc
or
cmp
cld
test
cwtl
out
xor
mov
adc
push
fs
or
add
inc
test
and
lea
fsubrl
shrl
pop
mov
mov
or
test
in
inc
test
mov
sbb
adc
lret
mov
je
lock
sub
mov
mov
xchg
aam
mov
loope
mov
fsubrl
push
adc
sub
mov
add
mov
pop
clc
adc
shld
mov
or
rclb
cmp
adc
fwait
fs
or
inc
dec
inc
int3
and
test
add
test
sub
lods
push
fists
test
mov
movsb
mov
inc
ds
or
pop
xor
and
insb
lods
cmp
sbb
in
fildll
pop
test
sbb
jo
adc
pop
rorl
lret
mov
jo
movsl
add
xchg
mov
mov
mov
test
jbe
movsbl
mov
js
hlt
pop
push
adc
mov
fwait
cmpsl
push
aam
mov
mov
aam
adc
mov
cmp
mov
and
insl
mov
dec
aas
mov
mov
sbb
jb
mov
inc
pop
imul
pushf
sar
xchg
xchg
sbb
inc
shlb
bound
cltd
jnp
mov
pushl
mov
cmpsl
push
cmp
push
in
cmc
addr16
shr
dec
in
jbe
sub
xor
hlt
stos
cmp
xchg
mov
push
mov
hlt
inc
xor
jns
xchg
scas
jle
xor
iret
pop
push
cltd
out
icebp
cmc
sbb
jg
xor
mov
icebp
and
push
push
enter
and
std
push
jne
push
sub
test
push
nop
push
inc
mov
hlt
scas
xlat
aas
bound
into
push
and
sti
inc
inc
test
in
sub
movsl
push
jl
rolb
push
rcll
or
pushl
sbb
xchg
dec
repz
pop
sub
cmpb
gs
pop
incl
pusha
sub
lahf
add
lods
jl
cmp
push
lcall
sbb
fnsave
out
jge
xor
in
cwtl
es
hlt
fisttpl
in
push
add
jle
push
popl
test
jl
pusha
orl
rolb
arpl
push
call
jmp
sub
cmp
push
in
out
daa
fs
iret
mov
sbbl
push
ficomps
lahf
lods
sub
popf
adc
aad
and
loopne
gs
mov
pusha
popf
xor
cltd
xor
clc
aam
xchg
cmp
test
test
std
pop
ja
pushl
aas
adc
lods
and
cli
and
into
sub
lcall
psrlq
push
stos
shll
cmp
mov
mov
push
fs
cbtw
xchg
jmp
iret
cmp
cltd
lret
fsubrs
cld
dec
popf
lds
mov
push
mov
xchg
jnp
in
gs
push
or
pusha
mov
aaa
and
test
dec
mov
ror
push
mov
leave
inc
push
adc
popa
div
andb
cmc
sub
adc
add
or
aas
pop
std
mov
pop
sub
adc
jo
push
cltd
sbb
and
in
bound
or
aaa
cmpsl
nop
negl
push
jmp
pusha
push
adc
cmpsl
test
inc
lods
pop
mov
mov
in
dec
jl
mov
lret
aas
push
lret
cmpsl
sub
add
leave
arpl
iret
mov
jle
mov
and
ret
mov
pushf
jp
inc
daa
jnp
bound
pop
jg
fwait
stos
push
dec
in
iret
test
push
cwtl
inc
pop
xlat
fcmovnu
insl
mov
call
clc
pop
test
pop
es
loope
ljmp
cmpsl
fnstsw
add
dec
enter
cmp
jns
aas
pusha
cli
or
mov
test
pusha
insb
sub
sbb
jae
fidivl
aas
jnp
nop
pop
add
int3
jg
imul
test
mov
mov
pop
xchg
repnz
ficoml
in
jns
inc
mov
call
repnz
aad
idivb
lods
popa
and
inc
mov
adc
fsubs
out
jae
xlat
clc
cmp
xor
pop
push
rcrb
sahf
movsb
scas
mov
lahf
mov
insl
mov
mov
xchg
imul
jb
xchg
cli
jns
mov
daa
aas
jecxz
or
int3
je
test
daa
sbb
inc
jl
test
orb
jns
adc
shll
mov
pop
inc
cltd
sbb
mov
enter
imul
adc
dec
mul
and
fistps
sub
dec
in
aam
in
mov
mov
inc
arpl
fnstsw
or
jle
pop
jno
pop
ljmp
mov
sub
enter
mov
mov
addr16
mov
xor
push
sti
je
out
mov
jecxz
push
mov
mov
or
cmp
mov
adc
add
das
lcall
gs
xor
inc
cltd
and
pop
mov
je
loop
mov
mov
pusha
mov
add
daa
xchg
je
push
call
mov
mov
inc
imul
jo
rolb
not
push
cmp
rcrb
mov
inc
ja
test
mov
mov
scas
and
shrl
push
iret
popa
or
push
pop
movsl
js
or
fnsave
das
stos
mov
ja
sbb
mov
or
cmc
and
dec
rcr
mov
adc
and
js
std
daa
insb
neg
push
jb
fistpll
mov
rolb
mov
xor
or
xchg
lock
lcall
xchg
in
cltd
and
movsl
push
sbbl
pop
pusha
fs
popa
pop
das
adc
out
aad
push
mov
adc
jge
mov
push
es
popa
mov
cmp
xorl
sub
imul
into
xor
xchg
mov
sub
scas
mov
mull
popf
xor
mov
push
movsb
mov
fwait
into
cmova
or
pushf
or
je
loop
adc
daa
sbb
jp
dec
adc
frstor
repnz
jl
pop
pusha
test
pop
sbb
pop
jp
xchg
lods
or
aas
scas
mov
int
xor
repnz
or
repnz
jle
adc
mov
and
or
out
cmp
add
or
or
jle
jp
jle
jns
jle
js
jle
jg
jle
jle
jle
jge
jle
jl
jle
arpl
jle
sarb
popa
sarb
pusha
sarb
sarb
data16
sarb
sarb
imul
or
jle
imul
jle
outsl
sarb
insl
gs
ljmp
loope
mov
mov
shr
fcomps
sti
fsts
ret
in
fisubs
mov
xchg
lret
sarb
movsb
inc
adc
xchg
jnp
inc
dec
lret
mov
mov
fwait
mov
fnstenv
ret
mov
add
add
call
ss
imul
test
jmp
lds
adc
loopne
push
push
roll
mov
jecxz
sbb
push
pushf
iret
lods
xor
fmul
dec
rcll
adc
mov
rolb
dec
jecxz
mov
stc
es
data16
daa
push
arpl
data16
pop
xchg
pusha
pop
data16
dec
push
push
jns
dec
inc
lock
or
in
xor
or
js
add
push
cmp
mov
push
stos
pop
cmp
popa
mov
or
lahf
mov
arpl
pop
jno
call
adc
loop
out
or
shll
jne
in
fcompl
xchg
inc
arpl
and
icebp
push
negl
insl
fwait
pop
adc
outsb
mov
push
and
addr16
fadds
in
xchg
cld
fst
insl
lock
xchg
dec
mov
clc
pop
out
clc
outsb
mov
les
pop
xchg
out
and
repnz
hlt
jge
fidivs
jo
pushf
pop
and
aad
pop
bound
xchg
jae
enter
mov
xor
test
pop
xor
xchg
data16
cmp
mov
out
jmp
aad
mov
jmp
stc
or
out
out
push
inc
in
outsb
xchg
pusha
and
xchg
sub
jecxz
push
pop
mov
add
clc
cmpsb
push
xlat
cmc
push
and
dec
jg
push
stc
movsb
mov
dec
add
mov
sbb
fistl
stc
call
lahf
xchg
mov
sbb
loope
pop
orb
gs
cmp
shr
iret
xlat
lcall
dec
jo
or
pop
stc
adc
inc
cmp
xchg
je
addr16
mov
xchg
cli
and
xor
fiadds
int3
gs
push
jecxz
fisubrs
mov
sbb
dec
das
shl
xor
rolb
mov
outsl
out
inc
and
popf
pop
call
cmpsb
in
sbb
dec
les
push
add
xlat
outsl
out
icebp
inc
call
lcall
test
leave
push
shlb
mov
sub
mov
cs
pusha
sbb
xor
ds
into
add
cmc
add
loope
iret
cwtl
stos
push
adc
ljmp
mov
imul
out
xchg
xchg
fldcw
data16
lds
out
jmp
test
js
mov
outsb
scas
push
jne
cmpsl
push
add
push
xchg
jo
subb
je
repnz
xor
pop
pop
sbb
and
mov
inc
loop
mov
popf
aas
ja
cltd
in
mov
xchg
mov
mov
xor
clc
pshufw
or
into
pop
cs
mov
pusha
dec
fxch
addr16
pop
out
in
dec
test
push
adc
xchg
in
mov
test
cmp
fwait
loop
sub
add
pop
aaa
loopne
lea
cmp
mov
sub
mov
addr16
or
jbe
or
test
add
push
or
mov
or
add
add
lds
add
add
add
push
or
add
add
loope
or
add
add
icebp
push
or
add
add
call
add
add
add
push
or
add
add
push
or
or
add
push
or
adc
push
or
and
add
or
sub
push
or
cmp
add
or
inc
push
or
cmp
or
push
push
or
inc
push
or
pop
push
or
dec
push
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
fs
insb
add
jbe
jb
cs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
popa
jae
imul
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
dec
inc
pop
add
add
outsb
imul
add
popa
pop
xchg
aad
add
sbb
add
sbb
mull
shr
xor
add
shll
cltd
add
add
mov
mov
add
jp
dec
pop
in
loop
push
and
imul
leave
xor
icebp
push
into
aaa
mov
and
mov
add
xchg
imul
push
outsb
and
add
adc
add
mov
jbe
inc
call
je
push
jmp
fstpt
cmp
xor
sub
dec
dec
pop
mov
out
roll
xchg
add
xchg
stc
inc
rcr
dec
add
sbb
int3
mov
cmpl
jne
mov
inc
mov
add
xchg
mov
ljmp
or
push
jnp
icebp
out
adc
scas
adcb
mov
fadds
lock
call
lret
hlt
push
lea
xchg
int3
xlat
xchg
xor
pop
vunpckhps
into
push
hlt
aas
add
cmpsb
dec
pop
add
sbb
mov
xchg
and
jmp
sbb
sahf
add
shr
cmp
pop
loop
mov
and
lds
dec
test
mov
lock
scas
imul
add
or
aad
les
adc
imulb
dec
cld
lahf
je
hlt
cmp
push
ja
jecxz
push
mov
mov
or
mov
and
dec
dec
adc
dec
mov
mov
inc
xor
iret
daa
or
testl
mov
stos
add
cmpb
repnz
je
sbb
add
lret
fs
dec
jbe
sar
pop
testb
in
fcmovnbe
add
mov
cmpsl
pop
dec
add
lret
je
jne
or
inc
scas
mov
les
mov
addl
mov
ja
add
movsb
xchg
add
mov
lock
jbe
pusha
lahf
repnz
jae
loopne
roll
inc
cmp
in
push
push
pusha
fldl
mov
sbb
add
mov
int
out
or
xor
sub
xchg
or
adc
enter
or
and
stos
fwait
xchg
popa
xchg
jmp
add
pop
xor
xor
sub
fnstenv
push
add
jo
sahf
mov
adc
or
and
in
cmp
arpl
and
jbe
adc
int
add
and
addl
js
push
add
push
divl
mov
or
jne
lds
icebp
cmp
cmp
pop
add
dec
bound
mov
add
mov
movsb
jle
mov
xchg
mov
pushf
adc
xchg
leave
and
xor
es
and
push
push
cmp
adc
jne
int
jl
dec
cmpl
adc
xor
mov
add
leave
cli
xchg
pop
pop
add
ljmp
cld
int3
add
and
jo
fs
mov
popf
add
mov
fdivs
scas
outsb
shlb
orb
cmp
mov
idiv
or
aaa
push
mov
xor
adc
ret
ror
cmp
roll
push
adc
cmpsb
je
in
repnz
out
cmp
mov
xchg
push
adc
int3
adc
int
rcl
pop
fs
cmp
or
scas
xor
add
or
dec
add
push
mov
and
orb
test
cmp
cmp
pop
ret
out
xor
pop
inc
or
mov
adc
subb
ret
cmp
push
pop
cltd
or
mov
xor
dec
pop
and
pop
or
rorb
or
mov
out
mov
into
cld
add
add
xchg
mov
add
sbb
fisttpll
add
or
in
outsl
ds
xor
add
xchg
ss
out
outsb
in
add
imul
or
pop
cmc
jmp
jp
push
enter
and
or
xor
int3
adc
loop
ja
adc
les
add
xchg
js
lret
adc
push
sti
mov
pop
aam
ficompl
add
mov
add
adc
subl
cmp
jns
push
lods
out
ret
sub
inc
adc
ljmp
jae
arpl
add
loopne
loope
add
or
hlt
adc
cmp
gs
sbb
add
or
idiv
add
mov
xchg
add
fnstcw
mov
push
jp
cmova
mov
out
or
pusha
add
sub
cmp
lret
inc
add
les
mov
and
jge
add
sbb
add
push
dec
into
and
adc
cmp
push
nop
lahf
xchg
cltd
icebp
repnz
shll
insb
addr16
or
or
outsl
push
cmpb
mov
lods
mov
add
dec
cwtl
sbb
sbb
mov
add
cmp
push
jge
jae
bound
lea
sub
mov
lds
lret
xor
add
sub
push
push
leave
clc
add
or
shll
add
lods
add
xchg
add
xchg
add
xchg
or
or
pusha
clc
jge
mov
sbb
adcl
cltd
xor
mov
sub
imulb
inc
jbe
add
test
mov
cltd
mov
jnp
addb
inc
add
rcrb
dec
add
push
add
pop
add
xchg
push
xor
sub
movl
adc
sbb
or
cmp
mov
add
and
arpl
add
data16
push
sub
sbb
les
pop
cli
mov
cmp
frstor
or
and
xchg
adc
mov
or
push
inc
inc
xor
xchg
repnz
mov
adc
pop
adc
test
data16
aam
cmp
add
pop
adc
pop
das
dec
ret
fnstenv
cmp
and
inc
xor
push
add
mov
jns
add
test
adc
pop
test
add
loop
add
add
lock
dec
dec
and
je
add
jb
dec
popf
lods
shll
mov
lcall
and
and
cli
jne
push
push
mov
push
aaa
and
test
pop
inc
int3
push
stos
push
push
adc
popa
mov
rcrb
push
notl
fnstsw
mov
xchg
xchg
sub
sbb
mov
add
xchg
and
or
xor
mov
xchg
xor
adc
push
dec
mov
push
xor
or
pop
add
and
arpl
jae
mov
mov
fs
emms
jo
push
inc
test
sub
jecxz
cmp
inc
sbb
int3
or
cmc
int3
or
test
push
adc
icebp
adc
mov
addl
or
adc
adc
and
or
mov
cmp
stos
add
or
fidivs
add
add
add
add
add
sti
pop
adc
mov
xor
jecxz
add
add
pop
cltd
add
es
imul
add
or
mull
adc
jg
xor
pop
xor
jmp
add
dec
add
push
ret
loop
and
clc
or
add
mov
add
xchg
push
push
adcb
test
push
icebp
xchg
mov
xor
std
aam
xor
in
xor
push
or
xchg
dec
jns
jno
add
xor
xor
insb
mov
aaa
fwait
and
or
mov
sbbl
add
jno
sub
inc
mov
fcmovnb
adc
ljmp
fiaddl
pusha
ds
cmp
or
inc
mov
add
xor
jae
add
dec
xchg
inc
dec
push
jne
and
and
push
and
push
and
and
sub
push
push
xchg
fbld
pop
jp
jmp
fs
or
sub
or
or
or
std
fwait
adc
mov
lcall
icebp
mov
addb
inc
mov
repz
dec
enter
fisttpll
push
loope
sbb
or
call
jmp
ljmp
fsts
repz
lods
out
shll
sub
mov
push
scas
iret
push
inc
test
inc
lock
mov
cmpb
aas
dec
stos
inc
push
push
add
add
cwtl
jl
sarb
or
xchg
fnstenv
mov
pushf
mov
cmp
in
ljmp
aam
push
add
jl
daa
test
shrl
push
push
and
inc
xor
popf
dec
addb
icebp
dec
adcb
pop
andb
or
adc
arpl
pop
inc
fs
mov
sub
xchg
inc
outsl
movsb
fs
jg
or
mov
push
and
push
xlat
and
addr16
sub
subb
jmp
or
jl
push
xor
xor
stos
mov
push
push
add
mov
xchg
into
and
inc
imul
adc
and
dec
es
xor
cmpl
aaa
jecxz
pop
repz
adcb
cmc
mov
aad
ja
ljmp
sbb
mov
rorb
adc
loope
ljmp
or
jg
jb
shrl
lock
test
sbb
or
and
mov
arpl
cli
mov
icebp
mov
jnp
mov
dec
or
mov
in
push
out
adc
or
add
add
inc
xchg
jle
cmp
add
add
dec
add
adc
and
push
push
mov
xor
sbb
push
add
add
popa
pop
and
and
and
and
xor
mov
sub
rcrl
jle
cltd
popf
adc
adc
mov
cmpsb
add
test
jbe
subl
or
call
dec
lods
and
and
lods
inc
cmp
test
mov
jl
dec
fs
mov
jmp
inc
in
xlat
inc
repnz
repz
cmc
sar
gs
push
push
and
xchg
scas
mov
lock
add
inc
ds
lods
cmp
sub
pop
mov
push
mov
push
dec
jae
cmp
add
push
pop
sub
pop
cmp
inc
mov
fs
int3
or
xor
addr16
cmp
push
inc
add
mull
adc
mov
lods
into
mov
adc
mov
mov
add
mov
push
add
jb
adc
jmp
outsl
sbb
or
add
aas
mov
pop
cmp
fmuls
insl
jno
adc
pop
aaa
push
push
insb
adc
push
mov
mov
sarb
mov
in
and
jb
mov
mov
outsl
add
mov
and
push
pop
icebp
sbb
out
movsb
shl
add
push
rolb
xchg
fmuls
sbb
sbb
push
lldt
or
push
and
or
data16
outsl
adc
mov
pop
mov
push
and
sub
mov
push
cmpsb
addr16
popf
mov
inc
int
sti
lret
mov
pop
xchg
add
inc
mov
dec
lock
sbbb
sub
sbb
mov
ja
or
sbb
mov
dec
cmp
add
int3
jae
mov
sbb
icebp
sub
lock
xchg
push
daa
lret
ds
xchg
sub
xor
movsb
icebp
xor
and
add
sbb
rcll
mov
xchg
pop
cld
xor
scas
dec
sub
jmp
jo
test
adc
push
or
mov
xchg
lock
dec
stc
mov
add
or
call
inc
in
or
test
in
push
add
out
movsl
jne
pop
push
push
mov
lds
sub
and
mov
push
cmp
leave
loop
js
in
in
in
add
jnp
fcompl
sbbb
dec
in
aam
mov
sbb
pushf
lds
xor
add
add
imul
stos
inc
rorb
sbb
in
jmp
mov
inc
js
lret
adcl
push
pop
or
call
and
and
cli
out
fxch
int3
mov
add
popf
jg
xor
movb
cld
enter
push
inc
mov
es
leave
out
lock
push
push
add
mov
jbe
enter
push
arpl
lahf
shl
sbb
mov
andb
rolb
mov
or
cmc
dec
imul
dec
jno
bound
jg
xorl
or
js
and
pop
add
aas
push
inc
movsb
xchg
imul
mov
dec
lcall
fistps
mov
int3
dec
es
lret
dec
std
add
mov
sub
jecxz
pop
pushf
and
loope
jecxz
pop
cltd
mov
push
pop
dec
sub
stc
sub
jae
imul
inc
and
lahf
dec
add
push
and
nop
add
push
push
xlat
or
and
cmp
out
mov
mov
cmpsl
sarl
and
cwtl
negb
ftst
outsl
lahf
rol
rorl
pop
pop
sub
push
adc
jo
adc
lock
mov
cwtl
jp
int3
add
jecxz
daa
pushf
cmpsl
pusha
addl
clc
adc
ret
add
dec
fnsave
mov
pop
inc
out
sahf
and
mov
or
clc
incl
mov
stc
push
jo
jbe
add
fsubl
ret
add
and
sarl
pop
enter
fmul
push
cmp
sahf
rcrl
jnp
mov
mov
inc
inc
adc
pop
add
jno
out
into
xchg
add
imulb
mov
repz
sbbl
negb
mov
sub
inc
or
jmp
adc
or
outsb
inc
push
inc
iret
cmp
inc
add
in
mov
and
mov
mov
or
or
aas
div
scas
add
xor
sbb
icebp
and
cmp
jns
jae
or
jecxz
mov
add
outsl
loop
pop
xor
test
mov
dec
inc
fidivrl
inc
lcall
xchg
nop
cmc
enter
dec
ret
sub
arpl
cmp
repz
jmp
test
adc
push
in
sub
add
jmp
pop
aaa
add
mov
mov
add
add
cmc
jno
in
scas
ret
int3
add
lods
subb
dec
testl
xor
add
pop
adc
add
fwait
insb
dec
xor
les
fisttpll
test
add
stc
call
add
mov
lret
cmp
or
pop
shll
pop
movsb
loop
data16
or
xchg
pop
xchg
dec
dec
fstpl
lret
dec
cltd
sbb
push
insb
insb
inc
sub
pop
mov
mov
pusha
push
and
sub
sub
andb
mov
daa
in
sbb
popf
inc
add
testb
dec
sbb
jmp
subb
xchg
inc
mov
repnz
jecxz
jbe
mov
xlat
js
in
and
inc
decb
xchg
scas
add
dec
cmc
xchg
adc
sub
add
push
cmpsb
or
aam
and
bound
loopne
hlt
inc
mov
inc
nop
ss
add
lcall
bound
repnz
push
incl
rolb
sbb
call
jns
add
loop
push
pop
pop
dec
in
xor
or
lret
psubusb
pop
or
sahf
call
mov
in
cld
rorl
movsb
not
adc
inc
addb
adc
lcall
lret
sbb
das
lods
pop
neg
test
lret
pop
sbb
push
or
leave
test
lsl
sarb
lret
jnp
add
mov
and
and
jmp
mull
jmp
add
adc
in
xor
popa
add
aas
push
pop
inc
push
jmp
lret
mov
add
push
leave
dec
add
pusha
inc
scas
pop
bsf
fsubrp
add
jno
or
xor
add
cmp
loopne
pop
xor
in
pop
and
into
hlt
push
stos
mov
psllq
adc
inc
data16
sbb
das
push
repz
xchg
ret
add
mov
sub
add
test
pop
add
push
and
push
xor
btc
cmp
or
int
fcompl
imul
mov
not
shrl
repz
div
add
push
xor
aaa
push
pop
sbb
ret
add
scas
push
pop
pop
adc
push
inc
xor
mov
fscale
nop
add
xor
repnz
mov
jmp
fisubl
pop
or
push
or
and
and
add
aam
mov
push
adc
pop
loope
adc
cmc
repz
ret
xor
sub
call
dec
mov
dec
lds
sub
lds
bound
lret
inc
jecxz
or
outsb
cmc
xor
mov
dec
adcb
xor
sbb
adcb
sar
jno
and
lret
xchg
inc
out
scas
iret
lds
leave
dec
pop
pop
popa
outsb
shl
push
pop
add
add
seto
test
dec
push
nop
xchg
fisubs
mov
ret
mov
addl
loop
neg
inc
scas
setg
push
sbbb
into
xlat
add
shr
mov
pop
cmp
ljmp
div
fldenv
jno
adc
notb
icebp
lahf
adc
imul
in
add
xchg
cmpsl
not
mov
add
test
test
xchg
dec
adcb
pushl
loop
test
jne
or
hlt
fists
add
add
push
mov
sbb
int
adc
cltd
mov
push
iret
cmp
and
add
cmpb
pop
stc
mov
pop
mov
mov
xchg
and
neg
xor
mov
or
stc
fcoms
pop
adc
into
jns
mov
in
jecxz
ficoml
and
xlat
test
add
mov
xchg
les
xchg
movsb
xor
xor
repnz
pop
and
adc
adc
jmp
gs
cmp
cwtl
xchg
sbb
add
test
pop
cmpsl
add
and
ja
insb
adc
xchg
movb
pusha
cld
jb
add
in
popa
cmpsl
popf
adc
std
pop
push
pop
pop
sbb
xchg
into
test
and
and
cmp
pop
test
mov
out
mov
sub
rcrb
enter
gs
iret
mov
jnp
inc
sub
sbb
dec
pop
out
ret
xchg
js
sbb
icebp
sbb
xchg
mov
stc
pop
jno
std
movsb
lods
loope
shll
mov
aaa
xor
adc
push
gs
iret
sub
cli
xchg
pop
xor
nop
int3
or
xchg
sub
subl
sbb
mov
test
pop
lds
jp
lods
and
or
jne
and
addb
shlb
lret
adc
adc
inc
pop
dec
xchg
add
pop
stos
push
pop
pop
add
push
jmp
outsb
mov
leave
or
and
inc
movsb
int
fldenv
into
lcall
mov
orb
stos
mov
or
mov
gs
or
call
jbe
neg
xchg
sbbb
add
cmpsb
xor
xchg
push
bound
pop
test
daa
leave
inc
iret
and
xchg
or
adc
add
mov
xchg
cmpsb
test
in
je
push
aad
add
adc
sub
or
sub
and
popf
testl
aaa
ret
mov
xor
add
push
xchg
mov
pushf
not
cld
push
mov
out
cmp
mov
mov
hlt
aad
out
mov
push
pop
pop
setae
test
inc
inc
push
push
lcall
and
sub
pop
nop
stos
add
push
jne
push
in
dec
cmp
out
movsl
sub
xor
in
stos
andb
xor
andps
mov
lods
xor
adc
push
sub
xchg
lret
jecxz
mov
movsl
adc
adc
xor
test
sub
sarl
mov
push
jo
cmc
out
pop
mov
daa
rolb
mov
and
mov
shrl
mov
sbb
push
add
fidivrl
loope
lds
adc
out
ret
xchg
and
jb
mov
fsubs
sbb
or
pop
add
nop
ret
fwait
hlt
test
mov
neg
push
sbbb
pop
mov
shr
inc
xchg
imul
pop
or
fwait
cmp
sbb
js
sbb
notb
rolb
loope
push
mov
push
cmpl
or
or
mov
lock
neg
xchg
or
shll
push
rcrb
or
cmpb
dec
jle
push
cmp
sbbl
or
out
or
sub
sbb
loope
lods
mov
js
mov
dec
repz
les
ret
xorl
push
mov
dec
jl
sbb
out
add
not
fwait
mov
mov
xchg
divl
mov
faddl
fidivl
push
push
repz
cltd
lret
adc
inc
mov
in
or
and
bswap
xchg
fildl
adc
addr16
les
stos
mov
or
dec
jae
xchg
ret
cs
addb
in
pop
mov
lahf
adc
imul
cld
and
lret
mov
inc
dec
mov
inc
mov
insb
or
jne
mov
cs
and
or
rcll
or
rclb
fsub
and
lea
push
xchg
rcll
xchg
xchg
add
push
ficoms
sbb
mov
xor
add
inc
notb
test
pop
int
icebp
add
xchg
cmpsb
aaa
neg
sub
nop
iret
pop
shrb
adc
mov
aam
push
out
adc
adc
mov
lret
xchg
jnp
lea
add
stos
adc
imul
icebp
jne
stos
imul
add
pop
mov
aaa
jmp
push
push
add
cmpsl
add
adc
into
cwtl
mov
jecxz
fisttpl
or
add
mov
popa
and
addb
jg
insl
cmp
sub
cltd
popa
xchg
jmp
jmp
dec
aam
repnz
add
push
idiv
cltd
mov
arpl
test
test
in
in
popf
mov
loope
adc
add
popa
outsb
mov
or
andl
inc
cwtl
icebp
outsl
xchg
cmp
movsl
pop
adc
addb
shlb
sbb
in
and
jl
int3
fstpl
mov
mov
sbb
pop
addb
ret
sub
mov
adc
mov
mov
push
daa
out
popa
mov
xor
or
lahf
mov
mov
testb
dec
rclb
andps
push
adcb
and
or
lock
testl
and
jae
cmp
cmp
fldenv
pop
xor
ret
xchg
push
je
push
ds
sbb
mov
xchg
inc
push
pop
or
xor
mov
and
add
push
pop
es
inc
gs
test
mov
add
sti
mov
cmp
and
add
stc
mov
cmp
inc
pushf
add
or
aam
sub
lret
pop
sub
test
dec
dec
test
mov
or
in
mov
je
mov
mov
inc
pop
rcll
add
push
pop
pop
dec
and
sub
faddl
sbb
jno
push
push
add
dec
push
pop
mov
outsl
add
inc
dec
mov
pop
push
fisttpl
into
pop
aam
adc
ds
xor
aas
dec
fmull
xor
and
push
jge
cmc
std
jmp
jne
xchg
test
popa
push
mov
mov
mov
mov
mov
push
sub
sub
xchg
popf
adcb
pop
or
sub
sub
sub
mov
push
push
sbb
add
mov
divl
jnp
sbb
out
lock
testl
push
add
repz
clc
dec
cwtl
call
sub
dec
or
js
inc
mov
pop
aaa
leave
xor
lret
add
nop
xor
cmpsb
shr
cmp
pusha
cmc
add
fdivs
rcrl
and
sarb
push
loop
in
add
jnp
mov
add
push
aad
mov
lret
out
adc
test
adc
xor
sbb
fsubrs
rcr
xor
xlat
adc
or
test
pop
xorb
push
add
popf
fwait
orl
rcrl
out
daa
inc
pop
add
mov
sub
inc
aas
push
ficompl
adc
fcoms
push
sbb
seto
xor
mov
add
movsl
sti
sbb
addl
pop
outsb
mov
iret
pop
loop
add
mov
sbbl
fldcw
mov
add
fildll
movsb
or
out
jo
xchg
in
mov
mov
test
mov
and
shrb
jbe
lahf
pop
test
testb
sahf
xlat
sbb
add
xor
lds
mov
xchg
mov
inc
dec
dec
mov
ss
movsb
sbb
aam
mov
addr16
lret
xor
pusha
dec
mov
out
and
push
mov
sbb
movb
aam
add
icebp
sub
or
outsl
add
cmp
movb
push
pop
or
jecxz
push
enter
repnz
mov
cmp
call
mov
jp
cmp
stc
mov
pop
jno
sub
pop
sbb
pop
loope
scas
and
or
mov
push
push
add
test
sbb
loopne
sbb
push
push
bswap
add
test
ret
inc
inc
adc
orl
cmp
imul
mov
jae
stc
adc
and
xchg
mov
mull
jne
inc
mov
adc
aaa
mov
das
sbb
pushf
lahf
enter
xor
rclb
xchg
lock
in
adc
popa
xorb
xlat
ret
insl
push
pop
mov
push
dec
shll
addr16
pop
dec
push
dec
xor
add
pop
sbb
aam
inc
dec
stc
sub
imul
mov
shll
inc
testl
mov
test
xor
cltd
out
cmc
cwtl
add
mov
out
fwait
lldt
int3
insb
xchg
insl
fs
ljmp
and
sbb
inc
add
subb
sub
mov
jnp
fwait
dec
scas
push
push
xor
jns
adc
dec
pop
btr
cwtl
jg
lret
push
iret
lods
mul
sbb
inc
in
cwtl
nop
push
add
decl
cli
imull
int
test
and
scas
in
nop
enter
cli
jns
test
sbb
sub
mov
adc
test
pop
mov
push
ret
push
and
mov
cmpb
call
dec
es
leave
pushf
arpl
stos
mov
inc
or
lcall
cmp
inc
das
xor
cmp
inc
popa
xchg
add
mov
pop
mov
sub
or
and
add
inc
fsts
cmp
ja
push
pop
pop
loop
test
stc
adc
xchg
jge
mov
addb
cld
sbb
pop
push
adc
mov
fsubs
mov
cltd
stos
xchg
loope
inc
sbb
inc
sub
outsb
mov
sub
test
fistpl
add
jne
out
pusha
pop
pop
mov
inc
cmp
mov
setb
xor
adc
dec
sbb
ret
dec
in
push
sub
cmp
or
lret
push
rclb
stos
fldt
out
pop
push
addb
adc
xor
mov
adc
aaa
add
xor
insb
leave
adc
or
andb
lods
jo
dec
push
jmp
sub
pmulhw
sbb
lds
mov
lock
dec
or
enter
mov
add
push
fmul
mull
or
andb
dec
pop
mov
js
int3
jp
adc
mov
les
pop
pop
cmp
cmp
cmp
or
fiaddl
ss
loopne
fcmovnb
jecxz
push
in
call
inc
sbb
pop
sbb
shrl
pusha
mov
int
std
xchg
sbb
in
inc
jnp
lds
lds
je
jmp
xorb
pop
faddl
sub
popa
imul
mov
rolb
mov
add
shlb
adc
cmpsb
push
pop
push
leave
or
push
outsl
cwtl
pusha
orl
cltd
xchg
pop
loopne
push
test
and
push
or
push
orl
flds
sub
bound
add
xor
fs
daa
mov
pop
add
int
lret
cmpb
cmp
xor
adc
sub
dec
out
push
push
test
and
jg
add
jbe
cmpsb
jecxz
outsl
mov
pusha
mov
sahf
cmpsb
in
pop
jbe
sub
xchg
add
xchg
xor
mov
imul
mov
andb
and
dec
inc
imul
pop
enter
jg
ja
mov
xchg
cmp
lret
cs
fxch
sbb
dec
dec
inc
daa
addl
push
bound
mov
repnz
orb
popf
cwtl
xor
ficoms
mov
push
mov
and
adc
daa
shr
xor
inc
mov
ret
fdivrp
loop
add
rolb
enter
cld
dec
mov
fmull
shl
push
push
mov
fdivs
pop
cmpsl
jp
test
mov
xchg
mov
mov
into
gs
pop
fwait
aam
adc
ret
lret
mov
pop
es
das
clc
inc
dec
pop
and
int3
cld
jmp
cmp
inc
or
push
or
pop
pushf
rorl
clc
mov
loope
insl
fsts
add
insb
shrb
sub
inc
mov
sub
aaa
or
inc
shll
test
ss
push
movsb
cmp
or
mov
mov
dec
lret
inc
cs
xchg
jo
cmp
inc
fdivr
ja
stc
pop
divl
aas
inc
fs
adc
dec
adc
jg
out
lret
mov
sub
sbb
xor
outsl
pusha
mov
bswap
sub
cltd
test
push
or
out
mov
adc
outsb
dec
int
std
pop
adc
clc
xor
xor
and
insb
cli
add
imul
nop
or
mov
xor
xchg
or
sub
call
or
sub
push
sbb
fiaddl
enter
sub
pop
add
sahf
inc
loop
jo
ret
sub
inc
data16
loopne
clc
mov
ret
repnz
cmp
cmp
add
add
std
inc
xor
mov
jle
lods
notb
rclb
into
xor
or
push
adcb
dec
sti
add
int
cmp
shll
icebp
sbb
sub
inc
stos
cs
in
test
dec
inc
xchg
ljmp
orb
mov
lods
cmpsb
incl
sbb
push
mov
lea
push
int
lret
sti
adc
sbb
mov
sub
fnstenv
xchg
add
push
xchg
xor
sub
decb
rcr
inc
aad
cld
nop
xchg
cwtl
pop
cmpsl
rorb
cmpsb
pop
into
adc
iret
cmpsb
pusha
pushl
mov
fiadds
mov
push
adc
mov
xlat
cmpb
cmpsl
mov
and
loope
int3
xor
sbb
sub
test
insb
add
xchg
mov
ljmp
lea
das
xchg
jo
in
jle
sti
or
cmp
adc
cmpsb
lds
mov
push
jne
pop
loope
es
jmp
movb
dec
movsb
cld
sub
inc
xlat
mov
aam
testl
jnp
push
pop
imul
jae
cwtl
mov
xchg
subb
add
push
pop
pop
fs
mov
in
stos
sub
inc
xor
mov
dec
push
cmp
pop
xor
mov
add
jl
pop
pop
movsb
lods
push
sub
int3
ja
xchg
je
lcall
xchg
clc
out
push
enter
mov
iret
add
xchg
sahf
fs
loope
jmp
and
push
pop
ret
sbb
mov
jnp
test
aam
mov
fdivs
shll
popf
xchg
xor
or
inc
cmp
mov
flds
push
in
stc
outsl
mov
cmp
js
or
rorl
pushf
jmp
push
ss
clc
or
int3
jmp
cmc
dec
bound
out
xchg
lods
rclb
js
std
or
dec
adc
push
and
adcl
xchg
ja
and
in
cmp
int
je
adc
repnz
sub
inc
or
gs
xor
push
jne
loop
ss
mov
mov
sti
jl
xor
mov
scas
mov
stos
out
pop
xor
and
dec
jbe
mov
dec
lods
or
inc
jo
inc
dec
test
arpl
shr
adc
inc
jp
shl
rcrl
sbb
imul
int
mov
clc
mov
cmp
dec
add
mov
inc
inc
and
dec
pop
add
or
rcl
push
sbb
les
add
inc
xor
sti
push
or
mov
cmpb
add
inc
xor
in
jp
dec
cmp
mov
clc
cli
sbb
push
imul
addl
push
cmpb
sub
add
xlat
stc
push
pop
push
out
lods
fidivl
pop
dec
ficomps
cld
inc
sbb
dec
inc
fadd
push
and
mov
imul
mov
xlat
sbb
rorl
loope
das
xchg
jg
or
xor
xchg
or
push
add
xlat
pop
push
adc
out
dec
jno
dec
dec
leave
add
push
xor
cmovs
fcomp
into
lods
inc
fsubrp
push
dec
js
push
and
push
popa
pop
shrl
push
mov
adc
cwtl
or
cmp
pop
mov
outsb
push
jbe
out
add
xor
bnd
dec
hlt
mov
mov
or
test
mov
pop
lret
or
or
add
xor
dec
notl
cmp
and
cmp
push
arpl
js
int3
or
lahf
in
loopne
cs
sbb
je
and
dec
lods
lock
out
clc
mov
add
mov
push
pop
rorb
or
dec
sub
dec
pop
ror
dec
inc
xchg
cmp
mov
cmp
das
das
add
inc
dec
xorl
popa
cmp
fnstcw
cmp
push
add
dec
pop
sbb
inc
shld
popa
or
clc
inc
xlat
push
pop
dec
mov
sub
lock
out
push
pop
pop
clc
int3
stos
or
out
pop
fadds
aas
cmp
mov
pop
fstps
sbb
or
push
imul
les
cmp
or
fcoml
test
and
inc
mov
addl
jge
out
add
hlt
sub
aad
inc
sti
mov
js
adc
mov
cmp
dec
xor
adc
hlt
frstor
test
sbb
outsb
idiv
mov
test
movsl
cmp
or
filds
lea
dec
jecxz
push
xchg
cmpsl
xchg
mulps
addl
pop
mov
mov
mov
test
mov
push
mov
jo
mov
jno
mov
add
push
inc
ljmp
pop
xorb
dec
ficompl
push
sbb
push
mov
inc
lds
dec
rcll
mov
movsb
ret
fcmovnbe
testl
fsub
cmp
scas
inc
and
insb
cmp
adc
repz
xchg
mov
add
pop
dec
loope
jae
movsl
or
xchg
jmp
cmp
mov
sub
push
cltd
or
outsb
adc
adc
cmp
pop
pusha
mov
loop
test
shll
je
nop
push
add
inc
lcall
cmp
dec
mov
inc
gs
lret
aaa
sbb
popa
add
mov
dec
loop
xchg
call
cmp
cli
xor
push
lock
pushl
outsl
sti
aad
inc
jne
inc
add
pop
lret
inc
push
fnsave
clc
push
jmp
mov
sbb
adc
adc
fsubrl
push
clc
cmp
fidivrl
repnz
xor
push
jecxz
xchg
add
inc
add
dec
mov
fsubr
push
inc
ja
stc
je
repz
xor
add
push
adc
enter
mov
ss
pop
sbb
or
cmp
and
lea
inc
adcb
movsl
sbb
xor
int3
cwtl
lret
ja
jno
jmp
cmp
add
rorl
push
in
test
in
or
add
inc
in
add
std
push
aam
mov
or
call
mov
cmp
cmp
pop
pop
popf
cmpsb
stc
ds
jbe
sbb
inc
test
mov
fadd
adc
cmp
sub
jmp
iret
lods
jbe
mov
mov
push
xor
lds
push
jecxz
stos
outsb
pop
clc
jg
adc
cmp
div
jnp
sbb
mov
mov
pop
sbb
clc
or
xchg
in
xchg
pop
mov
or
loopne
ds
sub
repnz
hlt
sbb
or
or
xchg
push
movsl
pusha
ljmp
repnz
inc
inc
insl
inc
cmp
sub
mulb
daa
ljmp
cwtl
mov
adc
dec
mov
sti
or
fcoms
jo
int3
and
sti
jge
test
mov
test
push
xor
fcoms
mov
pop
mov
cs
xchg
push
or
mov
mov
xorl
ret
sarb
aad
aaa
pusha
inc
daa
lahf
test
mov
jecxz
lret
dec
cld
pusha
out
sbbl
or
cmpsl
sbb
jecxz
cmp
call
sbb
cmpb
test
insl
in
outsl
jg
stos
movsb
xchg
cs
rcl
adc
mov
out
fcmovnu
shlb
aad
sbb
pop
xchg
test
pop
push
xchg
in
sub
push
gs
enter
lret
xor
iret
into
push
mov
pusha
cmp
add
aas
rol
sahf
subb
cmp
inc
loopne
sahf
call
movsb
fbld
int
das
scas
add
dec
sbb
movsl
cmp
add
jbe
xor
call
inc
flds
jp
fstps
xchg
push
pusha
dec
jbe
rorb
repz
xchg
stos
lahf
xlat
xor
gs
inc
jmp
cmp
cs
lcall
faddl
imul
xchg
movsb
sbb
sub
arpl
fsubrp
mov
bound
lea
hlt
push
aaa
and
ret
test
sbb
fwait
bound
loop
shrl
pusha
pop
add
in
inc
clc
pop
sbb
pop
xchg
mov
rorb
and
sbb
cmpl
lock
sbb
cmp
nop
cmp
and
hlt
cmp
jg
pop
rol
lock
adc
or
and
xchg
popa
lret
add
sbb
sbb
sbb
pop
in
mov
sbb
enter
sahf
rcrb
and
cmpsl
fcomp
sub
shl
sbb
or
pop
fsubr
out
inc
cltd
xchg
cmp
ljmp
fisubrl
push
jp,pt
lds
sub
movsl
fsts
xchg
test
or
shlb
xchg
pop
xor
ja
daa
push
cmp
aas
lret
lds
inc
int
loop
imul
xorl
add
repnz
xchg
sbbl
daa
inc
or
lret
jae
cwtl
cwtl
test
insb
hlt
in
mov
lcall
dec
arpl
inc
pop
and
mov
push
cmp
leave
xchg
add
mov
test
dec
push
cld
pop
xor
rorl
add
movl
cmpsb
inc
fs
inc
push
push
aaa
orl
subb
stos
leave
dec
pop
lret
cmpsb
aam
outsb
scas
sub
push
xor
pop
pop
push
pusha
negb
les
sub
add
dec
sti
ljmp
enter
lcallw
lret
insb
cs
inc
gs
mov
lods
ret
enter
data16
add
les
jl
test
jg
adc
insb
dec
fs
sar
sbb
out
fsubrs
and
add
xlat
decl
pusha
push
fsubrl
sbb
jg
cmpsb
dec
cmp
cmpsb
das
inc
cmc
movsl
adc
hlt
scas
dec
cmp
popa
mov
xchg
and
clc
fiadds
mov
mov
mov
adc
out
sbb
pop
out
jg
sti
xlat
mov
scas
shll
push
adc
adc
leave
mov
pop
mov
mov
mov
and
repnz
push
daa
xlat
in
lret
aad
iret
mov
mov
cmp
jns
pop
fistpl
fdivl
pusha
dec
jg
mov
ret
aad
pop
leave
mov
pusha
jg
pop
sbbl
dec
bound
fsts
or
pop
pop
push
pop
mov
push
cmp
mov
nop
pop
pop
adc
or
jp
inc
icebp
push
testl
push
int3
jg
lret
addl
push
rclb
daa
pop
push
scas
scas
inc
push
pop
add
cmpsl
sti
cmpsl
dec
pop
push
into
mov
pop
adc
ljmp
imulb
stos
xorb
push
imul
sbb
or
pop
jns
popa
mov
inc
dec
insb
mov
inc
mov
lcall
jg
int
fcmovb
es
loope
int
fsubp
jle
and
add
iret
leave
mov
mov
and
ficompl
pushf
mov
ficompl
ret
mov
inc
pop
and
dec
dec
mov
negl
test
jmp
popa
sub
pushf
insb
ret
hlt
movsb
repnz
sub
xlat
inc
aaa
pop
xorl
out
jae
pop
cmpsb
adc
into
mov
pop
mov
push
inc
rcrb
inc
ret
rcll
mov
xor
int3
jns
pop
sbb
xchg
cs
cmp
xor
fnsave
ret
cmp
ret
cmp
in
cmp
pop
inc
push
jnp
mov
mov
jmp
inc
inc
push
arpl
jge
clc
nop
sahf
and
xor
icebp
adc
sbb
rorl
add
dec
push
pop
fisubrl
sbb
dec
mov
pinsrw
jecxz
jno
lret
in
leave
scas
inc
add
pop
mov
push
mov
dec
movsl
push
das
fcoml
mov
sub
pop
xor
cmpsl
lret
aam
fiadds
iret
sbb
call
mov
lret
xlat
call
xchg
mov
fcmovb
js
mov
mov
fidivrs
cmp
inc
rcrl
xchg
pop
adc
or
rorb
outsb
mov
xchg
idivl
pop
or
add
sahf
dec
push
dec
inc
lock
aas
jb
add
xchg
push
movsb
sbb
setl
bound
stc
push
stc
adc
xor
aam
sbb
sbb
push
decl
loop
ljmp
push
lahf
insb
pop
pusha
ret
sbb
sbbl
inc
push
pusha
adc
cld
mov
xchg
pop
aam
push
ret
lcall
pop
aad
jo
and
add
mov
inc
inc
inc
pop
cmp
xor
lcall
jb
mov
cmp
pop
jb
into
ret
inc
pop
sbbl
leave
loopne
arpl
and
and
cmpsl
xchg
stos
jbe
jae
rorb
inc
ja
sbb
adc
or
or
add
shll
data16
test
shl
pop
shlb
aam
cld
adc
sub
inc
pop
out
jb
rorl
xor
loope
pop
inc
fmull
pop
ret
xlat
sbb
add
jne
jbe
xor
movb
ret
shlb
push
or
movsb
cmc
add
mov
nop
into
jae
pusha
push
ret
ret
out
push
push
mov
add
sti
rclb
pop
movsl
ds
inc
stc
add
mov
dec
aad
mov
pop
dec
dec
pop
xchg
push
test
imul
push
push
sbb
in
js
cmpsl
inc
insb
jns
inc
or
pop
je
cmp
es
je
out
jo
mov
mov
bound
mov
and
shll
adc
fs
adc
mov
pushf
sbb
pop
jg
fisubrs
inc
imul
cmp
cltd
inc
das
xchg
std
ret
iret
adc
fbstp
xor
gs
or
sub
iret
push
fwait
addr16
xor
scas
cltd
in
scas
jge
xchg
inc
inc
or
xchg
mov
movsl
or
inc
cmpsl
add
cmpsl
xchg
out
clc
js
in
push
and
xor
leave
testl
rorb
cs
insl
push
adc
into
pop
pop
mov
out
xor
ret
into
jnp
cld
push
inc
xorb
and
push
mov
movsb
hlt
and
xchg
int
pop
cmp
mov
ret
xor
imul
ss
das
xchg
jl
xchg
nop
int3
sub
or
dec
lods
xor
or
ret
test
add
in
fadds
dec
aam
push
roll
cs
sub
sub
test
insb
mov
das
orb
sub
mov
dec
pushf
xor
outsb
aaa
lods
fdivr
lds
loopne
cs
arpl
xor
or
shrb
inc
clc
and
fst
or
pop
sahf
cmp
or
pop
sub
aas
or
inc
sbb
fimull
enter
test
scas
adc
outsl
daa
mov
ja
mov
adc
jns
dec
aam
pop
cmp
fisttpll
outsl
sbb
lock
call
rcrb
ss
dec
mov
pusha
imul
cli
cmc
in
mov
test
and
sub
xor
clc
pop
popa
pop
sub
add
sahf
lock
sub
fisubl
fldt
out
fcoms
nop
daa
stc
pop
inc
roll
pusha
push
push
leave
cmp
jbe
mov
rolb
xor
add
sub
inc
lods
and
jns
fs
mov
test
pop
or
hlt
cmp
test
xor
daa
movb
mov
mov
mov
pop
mov
cli
int3
movsb
add
jl
and
mov
test
pop
cmp
push
mov
mov
push
imul
push
xor
lock
xchg
add
addr16
mov
cmp
mov
or
js
movsl
jae
pop
int3
in
mov
pop
hlt
cmpl
cmp
mov
fs
cmpsl
fidivrl
mov
jl
pop
mov
mov
sub
iret
cltd
outsb
call
adc
sbb
or
xchg
and
aad
imul
inc
fiaddl
push
insb
add
loopne
test
mov
xchg
sbb
movsb
std
inc
fisubrs
cmpsb
cs
or
in
push
insb
ret
adc
push
sbb
sbb
add
xchg
shrl
lock
dec
rcr
sub
cmp
cmp
mov
daa
lds
pop
mov
push
ror
loopne
or
jo
mov
add
xor
pop
popa
xchg
es
jg
adc
push
jl
fildll
sub
mov
fsubrl
ds
inc
push
pop
inc
aad
cwtl
ljmp
dec
loopne
inc
popf
popf
rolb
sarl
jnp
adc
mov
fs
push
fld
repnz
test
filds
movsl
cmp
sbb
lods
inc
fucom
pop
dec
pusha
popa
adc
rolb
xchg
xor
or
icebp
push
cltd
enterw
mov
mov
popa
arpl
popf
mov
adc
dec
mov
cmp
sbbb
mov
in
inc
xchg
or
jecxz
inc
insl
inc
or
fistps
mov
push
in
cmc
fidivrl
push
in
repz
les
add
mov
mov
sbb
or
int3
rcll
repnz
push
pusha
pop
mov
or
xchg
mov
je
cmp
int3
fnsave
enter
scas
stc
std
orb
scas
pop
scas
loopne
dec
repz
push
ret
lea
movsb
push
out
ds
ljmp
test
and
sub
aam
mov
int3
stos
adc
push
rcll
and
jle
lret
nop
dec
cld
dec
xchg
pop
mov
jmp
dec
push
sbb
call
sbb
xlat
into
in
push
inc
mov
call
dec
testl
dec
xor
cmp
adc
inc
cmc
out
lahf
dec
pop
cmpsl
pop
in
cmovs
dec
int3
lret
cmpl
lods
imul
adc
shr
subl
push
xor
mov
out
les
dec
mov
cmp
inc
xchg
mov
pop
stos
scas
sub
pop
push
mov
mov
jl
cmp
das
nop
sbb
aaa
aam
or
fwait
mov
cmp
sbb
rcrl
mov
aam
pushf
cmpsb
in
jae
das
push
enter
or
xchg
xchg
dec
mull
loop
shrl
mov
mov
repz
and
cwtl
shl
mov
fstps
repnz
jb
dec
nop
or
lock
rorl
mov
jmp
or
subb
sbb
test
mov
lock
cmp
cmp
fimuls
mov
jne
jg
mov
cmp
push
adc
mov
and
jb
mov
lock
ret
data16
divb
add
test
aaa
mov
and
pop
xor
push
dec
push
decb
int3
testl
mov
or
stos
bound
xchg
shll
inc
xchg
clc
mov
lock
or
mov
lret
aam
nop
or
mov
hlt
mov
and
bound
loopne
shrl
cmp
fldt
xchg
orb
hlt
mov
mov
movsb
jecxz
jo
jb
stc
pop
repz
aas
pusha
jmp
mov
cmpsb
ret
sbb
out
sub
out
inc
push
adc
inc
orl
test
push
xchg
pop
or
mov
bound
mov
cmp
ficompl
sbb
push
add
movsb
mov
dec
lea
jae
shlb
jge
mov
repz
in
imul
lret
pop
push
push
add
pop
pop
jb
sbb
jg
pop
inc
xchg
pop
pop
inc
inc
test
sahf
movsb
dec
inc
leave
or
push
inc
inc
int
pop
mov
dec
cmp
fstl
mov
xchg
pop
mov
mov
dec
fdivr
sbb
mov
dec
nop
jge
push
mov
cmc
pop
pop
rcrl
lods
scas
sbb
lock
ret
pop
sbb
add
cwtl
and
mov
fildl
pop
adc
jno
dec
stos
adc
js
es
push
cltd
jae
out
xor
mov
jg
mov
jp
jl
fcmovbe
inc
cmpl
nop
dec
mov
mov
and
shl
add
scas
ja
cld
shrl
lea
xorl
xchg
and
sub
sbb
xlat
rorl
test
sbb
rol
popa
test
jb
mov
mov
adc
aas
cwtl
paddusb
mov
aaa
enter
sub
inc
cmpl
or
stos
lock
mov
subb
cltd
pop
adc
add
outsl
lret
addr16
pop
shll
xor
xor
jge
cmp
shlb
pop
je
dec
mov
cmpsl
data16
pop
jno
inc
out
inc
pop
push
mov
or
repnz
addr16
int3
bound
fnstcw
pop
sbb
outsb
ficoms
or
inc
xor
mov
pop
and
jg
xchg
mov
or
sub
push
inc
test
xor
in
mov
push
jp
xor
adc
push
sbb
hlt
fsts
pop
inc
dec
int3
jmp
or
cmp
or
xor
in
adc
lcall
xchg
add
out
rorb
ret
pop
push
repnz
pop
test
into
push
in
xchg
in
cmp
inc
jno
mov
mov
call
push
push
aam
adc
mov
jge
pop
shlb
filds
cwtl
xchg
sbb
scas
fistpl
loope
popf
push
leave
jne
cld
cmpsl
inc
movsb
adc
xlat
mov
inc
cmp
aas
cmp
fdivrs
add
or
ficoml
jle
pop
pop
les
aaa
sbb
inc
cmpsl
loopne
pushf
ja
lods
arpl
adc
call
jl
xchg
mov
fisttps
dec
adc
push
push
mov
loop
subl
js
cmp
pop
push
popl
mov
inc
es
push
add
and
rorl
xor
int
push
xchg
or
pusha
stc
stos
cmpsb
mov
mov
rorl
movsl
fwait
daa
enter
push
cmp
roll
inc
loopne
cmp
push
dec
sarb
xchg
sub
stc
mov
cltd
push
repnz
cmp
arpl
lods
xchg
je
xbegin
push
cmp
ret
mov
sbb
add
push
and
jecxz
pushf
jp
loopne
into
dec
addr16
call
inc
pop
nop
enter
sub
sti
call
inc
cmp
pop
pop
out
cmpsl
fstl
clc
rol
adc
pop
stos
movsb
scas
jb
mov
push
out
sbb
dec
mov
dec
xor
lret
or
cmpb
inc
mov
adc
call
sarb
fiaddl
sub
pusha
movsb
pop
sbb
fnstcw
pop
les
jo
sti
cmp
add
dec
mov
mov
test
xor
jno
sbb
sub
mov
sub
inc
cli
sub
pop
adc
insb
cmpsl
ljmp
push
jo
outsb
lret
cld
mov
or
inc
addl
movsb
jb
sub
daa
push
or
inc
pop
or
inc
pop
or
inc
inc
or
inc
inc
or
inc
dec
or
cli
and
das
pop
test
push
inc
test
sbb
xchg
pop
les
xchg
cli
lds
xorl
add
andb
mov
js
enter
sub
mov
insb
adc
cmpsb
and
inc
mov
imul
xor
in
xchg
mov
pop
fistl
les
aaa
fmull
mov
and
ljmp
jecxz
xchg
cmp
jae
adc
es
push
adc
test
xchg
xor
test
dec
movsl
xrelease
sar
sub
xchg
jle
pop
add
add
int3
cmp
xchg
outsl
push
push
pop
sbb
or
ss
fwait
idivb
push
add
scas
call
pop
out
in
pop
imul
or
mov
mov
jmp
test
stos
xlat
data16
imul
es
dec
in
pop
int
outsl
xlat
adc
pusha
xor
out
cmpl
and
imul
inc
inc
push
cwtl
xchg
jmp
dec
int3
pop
or
or
dec
loope
lret
xor
aad
dec
pop
push
push
jns
inc
sbb
ficompl
arpl
jmp
shr
mov
adc
test
cmp
in
aas
dec
xor
stc
pop
int
iret
stos
imul
pop
cli
lret
pop
pop
insl
call
sub
lea
mov
sbbb
cmp
popl
mov
push
int3
rol
ret
jo
mov
sub
cmp
rorl
xchg
movsb
add
call
cmp
in
push
adc
push
arpl
push
add
add
pop
cwtl
ja
sub
leave
stc
adc
sbb
adc
faddl
lahf
mov
jl
xchg
imul
mov
mov
stc
push
jno
jmp
inc
pop
xchg
int3
pop
icebp
lods
test
lea
mov
je
and
lret
aad
sbb
or
nop
xor
adc
ss
pop
das
jno
push
fdivrl
sbb
sbb
adc
or
pop
nop
sub
push
fstps
adc
cwtl
adc
lock
fstpt
js
pusha
cmp
adc
imul
cs
fildl
sbb
jle
and
adc
fmuls
movsl
adc
pop
push
jns
sahf
adc
call
fcos
outsb
dec
mov
test
int3
loopne
pusha
cmp
test
jo
daa
inc
xlat
xor
xor
dec
ljmp
add
pushf
inc
xor
xor
out
cmp
lods
xor
pushf
nop
shll
dec
and
xadd
push
cmp
jne
loope
cmc
xchg
mov
inc
gs
cmpsl
decl
loope
dec
les
mov
js
pop
mov
ficompl
push
pop
insl
jmp
push
add
mov
mov
push
movsl
adc
mov
fucomp
aas
push
aas
lret
repnz
mov
pop
add
cmp
lcall
mov
or
sbb
mov
pop
bnd
inc
xchg
ficoml
pop
adc
dec
test
arpl
stc
mov
add
test
xchg
inc
aaa
push
test
adc
sub
adc
aad
es
sti
cmpsl
aam
xor
push
or
pop
pushf
pop
loope
fimull
ss
iret
mov
push
fsubp
mov
pop
dec
adc
rorl
xchg
push
mov
ret
rcrl
mov
mov
stos
dec
jmp
rclb
nop
mov
shufps
not
and
inc
addr16
cmp
fcompl
push
inc
mov
pop
jno
lock
and
fcmovbe
scas
sbb
xchg
sub
shll
mov
xor
int3
popl
in
pop
sarl
mov
pop
push
imul
xor
push
fisttps
push
and
or
mov
loopne
cltd
xlat
xor
xor
test
push
jo
orb
or
adc
push
jle
icebp
push
jb
xchg
or
shll
jbe
add
inc
pushf
add
dec
cmpsl
cmp
adc
stc
outsl
mov
jl
push
ja,pn
fs
inc
mov
inc
fcomp
add
in
lods
inc
shlb
ds
push
je
push
mov
inc
dec
fcoms
inc
imul
inc
inc
popf
mov
dec
lea
push
data16
dec
mov
cli
cmp
and
lods
jns
sti
fmuls
xor
in
out
lds
inc
push
mov
dec
mov
enter
outsl
dec
call
ret
and
out
repnz
adc
int
int3
xchg
lcall
or
lods
and
ljmp
outsl
dec
dec
mov
cmpsl
popa
pop
fadd
add
adc
fcmovbe
mov
pop
xchg
pop
dec
das
xlat
jne
or
inc
mov
push
pop
mov
les
andb
das
add
int3
fs
das
inc
in
fadd
mov
fdivrl
inc
jge
aaa
push
mov
cli
pop
push
cmp
dec
mov
dec
lock
andl
jl
out
testb
jno
das
outsl
cmp
pop
stc
in
inc
fisubs
mov
xchg
cmp
push
fcmovu
inc
jl
push
les
movsl
out
jg
push
jle
inc
inc
sub
adc
pop
lds
stc
pop
lods
dec
inc
push
dec
testl
ret
cmpsb
jmp
aas
dec
rol
sbb
in
lahf
push
neg
inc
int3
iret
aas
xchg
cmp
jmp
and
push
pop
popa
inc
test
cmp
fcomps
jne
push
daa
arpl
sub
xchg
add
sub
push
leave
scas
push
mov
testl
mull
sahf
dec
xlat
adc
das
mov
adc
xor
repz
pop
sbb
add
sbb
xchg
fnop
rcr
enter
mov
pop
sub
sahf
lds
pop
sti
xchg
out
pop
subb
adc
adc
dec
test
or
adc
adc
add
les
sub
cmp
xor
jmp
das
fwait
push
pop
xchg
push
fstpt
dec
sbb
inc
sub
or
pop
popa
mov
pop
inc
push
fs
jg
sub
mov
pushf
sub
pop
lods
and
scas
and
mov
insb
inc
dec
mov
hlt
lds
push
add
lock
arpl
test
add
into
fmulp
repz
lea
push
xchg
cmp
pop
call
cmova
mov
jecxz
shl
cmp
cmp
test
dec
lods
jp
rolb
xor
nop
adc
rcrb
push
cmp
std
mov
inc
add
out
rorl
bound
and
mov
stc
popa
mov
orb
or
aad
and
pop
pop
in
fldl
mov
add
shlb
cwtl
adc
dec
jmp
and
scas
loope
test
movb
gs
insl
mov
sbb
dec
bound
sub
sbb
into
sbb
sbb
jecxz
inc
push
popf
adc
movsb
dec
pop
push
lret
aaa
push
js
cmpsb
cmp
pop
stos
dec
orb
inc
push
push
cmpsl
cmpsl
loop
sbb
fiaddl
dec
sub
ret
jbe
lcall
push
inc
mov
lcall
jp
fwait
test
fcoms
or
xchg
jnp
cmp
test
sbb
in
lods
inc
and
xchg
push
adc
cmpsb
add
scas
lds
lods
pop
pop
push
mov
push
in
enter
leave
lds
and
dec
aaa
cmp
jge
fstps
fs
add
loop
push
mov
shlb
js
push
jp
cmp
jno
sbb
push
in
add
out
mov
arpl
shll
dec
mov
loopne
mov
xchg
cmovns
lods
push
dec
pop
mov
sub
scas
xchg
icebp
push
adc
mov
neg
cmp
rorb
jge
or
push
in
or
outsb
cltd
fwait
inc
inc
adcb
in
inc
fcomi
pop
cli
pop
roll
sbb
adc
add
mov
mov
cmp
enter
and
daa
pop
pop
mov
fmulp
cmp
bswap
push
pushf
dec
mov
or
pop
bound
rclb
popf
cwtl
pop
out
push
jecxz
push
out
cmpsl
jne
roll
repz
and
fsubl
dec
inc
leave
iret
push
adc
push
push
dec
adcl
pop
fcomip
adc
fcoms
mov
xor
jo
push
sbb
dec
ljmp
out
out
in
pop
and
mull
mov
daa
es
dec
or
push
rcll
add
shll
out
mov
fsubrs
lcall
std
ds
popf
movsb
mov
jbe
in
out
mov
jne
adcl
popa
pop
xchg
ljmp
pusha
pop
les
pop
icebp
jbe
pop
lock
inc
rcll
mov
adc
cwtl
cmp
pushf
mov
mov
fcoms
sub
add
int3
pop
push
ret
mov
pop
mov
sbb
push
mov
xorl
xlat
mov
aad
jne
lea
repnz
jnp
lahf
sub
sbb
pop
fs
inc
dec
mov
stc
insb
dec
adcb
dec
clc
xor
loop
push
pop
jmp
mov
xor
test
xor
jne
mov
dec
mov
in
adc
test
sub
je
in
pop
roll
jg
icebp
dec
dec
dec
mov
mov
push
lds
xor
sbb
push
jg
mov
loope
out
nop
xchg
test
cmp
xlat
inc
xor
mov
push
int3
mov
xor
push
or
sbb
pop
insb
mov
mov
pop
sbb
mov
and
xchg
das
cmpsl
je
je
mov
pop
int3
rcrb
ja
xchg
dec
addr16
dec
sbb
jp
inc
pop
fmull
test
xor
pop
pusha
xor
lret
pop
inc
aam
inc
pop
lahf
pop
jno
repnz
es
loopne
xchg
addr16
cld
rcll
sbb
lds
out
mov
scas
pop
sbb
lods
insl
dec
push
lret
insl
adc
loope
fldl2e
push
or
xor
mov
sub
adc
pop
test
sbb
sub
incb
fidivs
test
lods
iret
outsl
xchg
les
push
pmuludq
fistl
ss
pop
scas
or
push
push
and
pop
pop
jl
ror
in
mov
bound
cwtl
movsl
adc
aad
add
cmp
neg
out
xchg
movsb
and
cli
xor
ret
adc
clc
jae
lret
ss
mov
inc
das
mov
ljmp
push
cli
and
inc
movsl
push
or
xchg
enter
dec
je
popa
push
pop
ljmp
pop
dec
adc
pop
xor
push
cld
adc
aas
iret
call
adc
push
fldcw
or
jmp
scas
aam
add
outsb
jl
icebp
push
push
in
les
loope
mov
and
dec
mov
pop
lds
mov
rcll
adcb
dec
sbb
push
pop
dec
das
add
cmp
inc
cs
out
sub
outsb
daa
dec
lds
js
mov
pop
push
mov
fsubs
iret
mov
sbb
pop
add
push
jmp
shll
dec
lahf
xchg
xchg
mov
or
dec
lea
adcb
jecxz
jge
int3
mov
xor
repz
xor
scas
pusha
mov
push
dec
jno
inc
jne
sahf
jns
mov
jg
push
lock
sti
xor
add
in
push
sbb
sbb
les
mov
dec
mov
pushf
ljmp
je
cmpb
adcb
in
movsb
dec
daa
and
outsb
push
push
mov
mov
fdivr
dec
mov
sub
sbb
push
cmpl
xor
std
pop
imul
jge
out
stos
ret
rcrb
out
leave
jb
cmp
std
icebp
sub
test
cmpsl
pushf
mov
out
jnp
mov
sub
add
lea
ret
inc
adc
int
pop
test
fwait
arpl
pushf
mov
dec
ret
outsl
push
add
test
scas
popa
jb
or
inc
jnp
push
mov
xor
inc
jnp
inc
movsl
or
mov
out
pop
push
adc
push
inc
add
pop
mov
bound
fidivrs
and
or
add
ret
xchg
sbb
pop
add
sbb
add
and
inc
ds
repz
jp
je
mov
add
cmp
ficompl
sub
es
jmp
stc
and
in
popf
mov
mov
jno
xlat
daa
mov
mov
mov
aam
fdiv
xchg
or
div
dec
repnz
jl
outsl
cmp
jge
inc
pop
sti
mov
push
jmp
adc
pop
scas
insl
pop
pop
dec
out
loope
inc
int
dec
cmp
je
mov
add
ret
test
push
or
pop
cltd
xchg
pop
pop
push
jae
test
cmp
ret
aaa
popa
popf
in
jae
adc
insb
dec
out
sub
xor
sub
cmp
fwait
push
repnz
test
mov
movsl
pop
sub
mov
call
jmp
sub
xchg
jge
cmp
mov
fwait
pop
dec
adc
pop
je
xlat
addr16
test
dec
mov
jge
xchg
pop
je
jbe
xchg
sub
call
add
fwait
mov
orl
mov
add
fldlg2
fdecstp
pop
imul
jge
add
dec
cmp
cmpsl
adc
in
ret
lret
shlb
daa
jecxz
xor
popf
inc
ds
sbb
aad
es
and
pop
or
adc
ficoml
test
or
lcall
sub
or
out
sbb
rorb
cwtl
jae
pop
fcompl
pop
enter
out
pushf
jnp
lcall
jl
xchg
push
das
adc
je
pushf
lret
lahf
scas
xor
pop
movsb
mov
dec
out
aas
mov
pop
je
pop
insl
imul
pop
pop
stc
push
sub
test
pop
push
es
adc
jbe
test
pop
xchg
fadds
shlb
ret
jae
sahf
fdiv
fdivrs
dec
mov
out
jne
inc
adc
mov
stos
inc
lcall
fcoml
sbb
cli
mov
mov
pushf
outsb
movsb
push
cmp
insl
jae
push
push
mov
jmp
data16
add
xchg
pop
popa
imulb
pop
rcrb
pop
pop
movsl
aaa
inc
pop
gs
pop
inc
xchg
insb
rorb
pop
push
mov
pusha
mulb
sti
mov
pop
aaa
daa
inc
add
in
cmp
das
adc
or
jno
adc
inc
mov
lds
sub
iret
dec
add
adc
fcoms
push
imul
inc
push
adc
mov
bound
or
mov
mov
pop
pop
dec
out
sub
sahf
sbb
xor
insl
adc
daa
mov
mov
lods
fmuls
dec
cmp
ds
inc
xchg
in
ret
push
gs
fldenv
mov
ret
pusha
iret
sbb
test
pushf
and
push
push
les
mov
cmp
fdivrs
pop
js
imul
sahf
sbb
dec
sbb
adc
sub
and
popf
inc
sbb
push
or
and
fimull
ret
mov
loopne
pushf
or
xor
mov
scas
xchg
in
ret
rorb
rcrl
insb
push
cwtl
fldcw
cs
cld
push
push
jae
inc
cmpl
ja
pop
les
push
add
push
xchg
sbb
inc
cmp
addr16
mov
mov
int3
repnz
or
into
mov
sub
sub
mov
xchg
sti
imul
out
scas
xor
cmp
pop
inc
scas
inc
cmp
jns
pushf
push
mov
outsl
cmp
loop
add
lcall
rcr
lcall
jno
int3
ffree
or
xchg
test
je
jne
sbb
mov
orb
int3
push
xchg
test
xchg
xchg
aas
cli
push
arpl
icebp
mov
mov
hlt
sbb
jno
int3
mov
neg
jo
mov
pop
push
aam
test
pop
and
mulb
cmc
scas
test
or
orl
pop
enter
flds
dec
mov
cmp
mov
push
mov
cmp
scas
sbb
mov
jl
or
pop
arpl
push
aad
jae
fimuls
aas
movsb
pop
add
cmp
pop
les
movsl
jnp
lock
fldcw
or
shlb
pop
fsubs
jp
les
movsb
mov
inc
xchg
adc
mov
mov
push
push
ret
and
inc
push
stos
nop
test
lock
push
add
jno
xor
mov
xor
or
adc
push
test
xchg
pushf
aaa
mov
pushf
sbb
push
sub
mov
into
outsl
cld
push
mov
cwtl
pop
sub
or
cmp
and
pop
adc
pop
loop
es
scas
orl
mov
fdivl
pop
movsb
lods
pop
jle
lret
ds
les
push
mov
mov
outsl
sub
fidivl
je
pop
mov
adc
dec
sub
addr16
adc
xchg
fsub
icebp
mov
lds
mov
cwtl
lds
lds
sub
faddl
mov
int
fildll
sub
imul
inc
insl
ss
lock
mov
in
inc
pushf
aas
movsb
pushf
cmp
sub
mov
inc
push
ret
inc
or
mov
ljmp
leave
pop
xchg
inc
sub
jne
sbb
data16
mov
mov
fimuls
pop
xorb
arpl
test
or
jecxz
inc
inc
pop
out
mov
or
das
mov
outsb
adc
mov
and
xchg
jb
daa
mov
pop
mov
std
xor
push
inc
xor
pop
mov
jo
and
inc
icebp
les
sub
sbb
sub
jp
or
int
ss
ds
jne
icebp
sti
xchg
nop
adc
fiadds
sub
fsub
pusha
sbb
mov
jl
scas
pop
jl
sub
push
fucomp
jbe
pop
mov
sub
scas
pushf
pop
leave
pop
shrl
jg
aam
pop
cwtl
push
sub
cmp
test
adc
hlt
jne,pt
das
add
test
adc
dec
cmpsb
shlb
add
sti
push
pop
dec
arpl
pop
and
movsl
mov
loopne
repnz
push
out
and
and
mov
iret
fimull
mov
shrb
push
push
xor
mov
cmp
jo
jl
inc
push
fmul
mov
xor
cmc
data16
pusha
sub
add
mov
imul
jns
daa
divl
ljmp
pop
xchg
cmpsb
mov
lock
ds
rcrl
cltd
cld
loopne
sahf
cmpsl
rorl
cmp
jl
cmp
or
lock
mov
and
js
xor
push
push
clc
aaa
adc
cmp
mov
sahf
inc
std
mov
pop
dec
test
mov
inc
movsl
adc
lods
pusha
inc
adc
cmp
out
in
fists
bound
cmp
adc
and
lcall
mov
nop
mov
ficompl
dec
jne
xor
dec
jg
pop
fcoms
loopne
iret
hlt
shrb
sub
lods
dec
jne
mov
jmp
aas
mov
pop
sbb
push
orl
cmp
imul
push
shrl
sbb
or
mov
hlt
adc
ret
cmp
inc
call
push
and
lods
add
cmp
test
mov
jmp
insl
pop
loope
dec
xorb
dec
lret
or
and
arpl
sub
xchg
xchg
push
dec
xor
mov
das
icebp
dec
ja
stc
dec
dec
adc
and
inc
loop
insb
jecxz
jb
rclb
aaa
test
je
jecxz
je
lea
out
lods
nop
pop
daa
mov
ret
lcall
sbb
or
lods
sbb
dec
dec
test
pop
inc
add
out
lods
xor
leave
mov
ds
adc
add
cli
orb
adc
sub
dec
pop
gs
lret
dec
ljmp
insb
repnz
push
cmp
push
inc
inc
adc
inc
pop
jg
mov
in
es
push
lods
xchg
push
bound
cmp
popa
xor
sbb
add
enter
add
mov
ss
cld
sbb
add
call
sbb
mov
pop
pusha
in
into
or
movsb
jl
sub
cs
dec
rorl
lds
and
and
mov
sub
mov
inc
and
and
int3
cmp
jecxz
sbb
shll
mov
or
mov
and
je
or
mov
insl
adc
lret
into
jg
add
mov
mov
mov
or
nop
mov
xchg
int
push
in
pop
inc
mov
repz
iret
sbb
mov
xorb
adc
add
add
push
shll
loope
mov
stc
into
cmp
sahf
mov
mov
repz
and
sub
mov
push
imul
cltd
mov
push
adc
jns
pushf
addl
filds
stc
std
pusha
pushf
xchg
mov
xchg
lret
jge
fs
adc
mov
inc
aaa
xlat
mov
pop
sbb
xchg
loopne
cmp
sub
cmp
ds
out
xor
add
insb
mov
mov
int3
push
inc
adc
iret
push
cmpsb
lock
xchg
jl
sbb
xchg
inc
shlb
orb
arpl
fstl
push
mov
dec
into
cli
xchg
inc
jb
je
xchg
sbb
dec
nop
shll
std
push
cmp
add
scas
aad
icebp
sti
jne
loopne
rcr
pop
xor
mov
inc
shrb
pop
xchg
mov
fnstenv
push
pop
insb
mov
sbb
lods
aaa
je
adc
inc
sbb
mov
shlb
jmp
fbld
es
jae
lret
stc
fwait
pop
outsl
jno
xlat
or
adc
ret
jne
xorb
pop
cs
cmc
inc
lahf
cmpsb
fiadds
ret
add
inc
inc
and
mov
cmp
cmp
imul
sub
adc
inc
mov
mov
out
mov
aaa
cld
gs
add
jl
cltd
adc
lret
ficompl
in
cmp
pop
lods
xor
fdivs
sub
mov
sub
or
mov
jle
add
jne
jge
xchg
ret
sbb
call
iret
mov
fdivrs
out
js
test
push
xor
lret
cwtl
mov
jo
stos
mov
lret
jmp
outsl
leave
pusha
sub
push
adc
mov
mov
and
and
push
mov
pop
mov
jbe
mov
outsb
push
test
leave
sbb
leave
push
mov
loope
push
mov
xchg
mov
shlb
insb
fsts
rolb
xchg
or
push
sbb
ja
addr16
insl
pop
arpl
inc
add
mov
pop
or
aas
movsb
jecxz
adc
or
popa
popf
xor
pop
into
add
lds
and
cld
push
dec
sbb
add
jl
add
jecxz
cmpsb
fisubrl
inc
rorb
rorl
pop
mov
cmp
bound
subb
xor
push
int
sbb
push
ja
jne
adc
call
push
ds
cmp
sub
mulb
insl
pop
inc
in
ret
pop
sbb
jne
test
jno
or
or
sub
push
and
jl
mov
js
push
cli
add
aaa
cli
jae
or
aas
mov
or
adc
out
rclb
xor
mov
and
or
or
loop
dec
shr
mov
fidivs
jp
arpl
xchg
mov
jno
cmp
inc
dec
or
adc
dec
push
dec
xchg
insb
daa
dec
sub
scas
mov
hlt
ret
or
aas
mov
cmc
mov
cmp
enter
pop
push
and
testb
clc
pop
push
inc
cmp
pop
hlt
insb
or
mov
in
sub
in
hlt
mov
dec
adc
lds
pushf
bound
lock
add
sbb
int
pusha
mov
xchg
push
es
push
dec
cmpb
negl
das
es
mov
nop
or
repz
push
push
clc
enter
popf
cmp
popa
stc
adc
sar
jne
mov
mov
jo
cli
mov
cmp
xchg
lods
and
inc
stc
xlat
mov
rorl
rcll
push
test
imul
push
inc
negb
add
popf
dec
ja
jp
cmpsl
loopne
lret
popf
lahf
push
fsubp
inc
push
popf
loopne
cld
lods
psubsb
jnp
into
or
or
fnstenv
int
inc
movsb
imul
loopne
pop
mov
cli
push
fisubrl
xor
mov
mov
xor
in
dec
pop
out
fiadds
icebp
mov
pop
adc
and
movsl
shl
inc
dec
jp
stos
into
sub
mov
pushf
gs
fucomp
and
std
mov
in
xchg
jp
popf
jo
enter
leave
in
hlt
fdivrl
fnstcw
ret
and
insl
int
dec
insb
xor
add
je
shrb
push
outsl
pop
lods
push
pop
dec
mov
loopne
movsb
inc
pop
sbb
addr16
gs
cmp
enter
dec
cmp
cld
add
cmp
sub
push
sbb
aad
adc
cmp
dec
cmp
loopne
ds
xor
mov
adc
fwait
call
push
pop
or
mov
xchg
pop
mov
jnp
insb
inc
sub
inc
addb
adc
inc
rorl
leave
inc
lods
rorb
out
jns
cli
popf
rorb
jns
dec
inc
xor
sbb
mov
jp
add
jp
jbe
hlt
cmp
push
in
lahf
mov
cmpsl
lret
aam
mov
sub
sbb
inc
cs
or
xchg
pusha
fcmovbe
and
jae
push
push
adc
arpl
add
popa
jg
addr16
fists
inc
ret
ljmp
stos
sub
jnp
lea
aad
aam
jo
fdivl
ds
adc
or
test
adc
scas
xchg
push
enter
add
xor
mov
and
cmp
insl
faddl
loop
fnstcw
mov
sub
xlat
jo
icebp
mov
hlt
repnz
inc
dec
sbb
je
sahf
push
testb
daa
rep
push
cmc
aad
ret
repnz
jmp
sbb
fisubs
or
inc
fsubr
push
addr16
stos
mov
inc
inc
mov
scas
push
sbbl
ljmp
push
push
mov
adc
test
push
cmp
das
and
das
jge
int
jg
ljmp
insb
ret
movsl
dec
and
das
lahf
cmp
mov
test
sub
add
js
dec
movsb
xor
pop
cmp
push
inc
sbb
int
sbb
repnz
mov
sarl
xchg
fxch
ds
or
sbb
mov
adc
std
mov
pop
add
mov
repnz
andb
ret
pop
mov
leave
or
rcll
movsl
inc
test
xchg
addr16
push
mov
push
xchg
cmp
rcll
aaa
dec
mov
aaa
sahf
add
adc
dec
mov
cwtl
inc
cmpsl
loop
loop
sub
pop
fdivrs
inc
sahf
out
mov
inc
lahf
mov
iret
das
adc
aas
testl
inc
lods
lahf
sbb
inc
cs
enter
movsl
cmpsl
les
mov
jns
adc
repz
push
insl
fs
daa
pop
jl
divl
sbb
mov
pop
addl
fwait
call
inc
bound
add
dec
pusha
cmpsb
dec
inc
add
int3
sti
lcall
and
or
int
fmuls
mov
cmpsb
ss
flds
xor
outsl
push
bound
push
fdivr
cli
shl
inc
aas
and
call
hlt
dec
sub
xor
and
data16
add
clc
push
and
into
or
add
daa
popa
leave
mov
and
sbb
pop
fucomip
jno
sbb
repz
shll
and
jp
inc
adc
roll
lds
ret
add
dec
movsb
push
push
ja
daa
lods
hlt
into
nopl
les
cmp
popa
pushw
push
mov
xor
fcmove
cmp
xchg
aam
adc
adc
out
imul
sti
mov
or
dec
mov
fucomip
aam
adc
insb
xor
push
add
iret
xor
pop
xchg
and
testb
add
daa
lock
das
daa
lret
pop
sbb
add
or
loopne
mov
sbb
fwait
or
mov
mov
movsb
shll
jbe
lds
inc
into
js
fcmovu
mov
cs
inc
into
push
jge
and
or
js
push
pop
cmp
std
jnp
mov
pop
push
push
jno,pn
pop
cwtl
inc
fdivs
fidivs
dec
mov
adc
cs
add
cmp
fs
dec
ret
lea
shll
adc
ret
popf
ds
cmp
hlt
arpl
pushl
mov
inc
int
call
xchg
cwtl
and
or
pop
ret
sahf
sub
ja
test
xor
ja
push
add
push
outsb
xchg
sti
int3
movsl
fisttpl
pop
mov
dec
cmp
jbe
jnp
inc
inc
das
jae
dec
fcompl
aad
enter
push
in
jp
push
cli
sub
pushf
push
mov
pop
sub
out
mov
cmp
int
pop
imull
leave
mov
cmp
iret
lods
jmp
in
pop
loopne
lods
dec
inc
adc
mov
dec
push
fnstsw
xchg
loope
lcall
dec
ja
shll
ljmp
jg
fisubs
cli
or
push
mov
leave
push
adc
dec
adc
dec
nopl
pop
adc
hlt
lret
cmpsl
add
pop
adc
cwtl
xor
pusha
xor
mov
das
and
fidivl
je
inc
lds
popa
int3
nop
in
and
leave
or
push
inc
mov
push
sbb
add
inc
clc
sbb
stc
sub
mov
shr
mov
loope
dec
push
cmc
in
push
add
or
add
dec
dec
pop
or
popf
sub
enter
aam
insl
in
mov
mov
mov
push
xchg
or
adc
mov
lds
jmp
sti
cwtl
jmp
sbb
sarb
or
mov
cmpsl
mov
and
ds
mov
cmpsl
fs
gs
mov
mov
add
and
dec
push
mov
push
or
dec
sbb
andl
xchg
mov
in
add
inc
fistl
inc
movsl
daa
ds
mov
or
dec
mov
mov
jbe
loope
and
pop
xchg
ds
in
cli
shrl
mull
cltd
test
in
sub
popa
or
fsubrs
aam
add
push
ret
ret
cs
ljmp
iret
fistpll
inc
std
out
sbb
fdivs
ja
and
push
mov
in
cmp
call
xchg
jg
mov
ss
movsb
sbb
in
add
mov
push
push
jae
pusha
mov
xor
cltd
jnp
pop
cltd
jne
jo
sub
or
add
jg
sub
aam
push
decl
xchg
insl
xorb
adc
push
and
mov
add
icebp
inc
movsb
cs
adc
mov
sbb
sbb
push
das
fdivs
sti
fadds
aad
je
aam
or
loopne
neg
jnp
mov
in
fcoml
ljmp
movsl
repnz
ret
fwait
lods
imul
dec
mov
pop
jmp
ja
lcall
and
and
mov
cmp
test
push
fs
jno
in
int3
je
nop
fsubrl
mov
and
imul
sbb
push
movsb
es
sbb
insb
int
stos
xchg
sub
dec
ja
js
movsl
inc
and
jno
insl
xchg
add
jne
cmp
and
loopne
roll
mov
sub
out
int
push
mov
mov
xchg
inc
std
pushf
mov
inc
cmpsl
scas
mov
dec
xor
int3
test
shr
push
mov
hlt
inc
ds
repz
ficoms
add
or
mov
movb
push
adc
cmp
std
out
cld
add
or
add
inc
or
add
gs
jbe
pusha
ds
sbb
sub
dec
call
loopne
ljmp
push
pop
sbbl
sub
mov
pop
cmp
mov
push
cmp
insl
inc
cmp
imul
negb
lcall
and
mov
jg
ret
cld
insb
divl
or
inc
shrb
fcmovb
pop
pop
cmp
adc
mov
ljmp
out
push
mov
jno
mov
imul
dec
popf
or
popf
pushw
adc
add
push
jbe
bound
and
sub
push
or
inc
push
popa
mov
inc
into
outsb
cld
mov
add
sbb
hlt
dec
sub
rorl
or
lret
lcall
pop
jns
cmp
cmc
popa
adc
xor
sub
push
mov
add
cwtl
out
jae
in
jmp
clc
movsb
jl
add
inc
negb
lret
sbb
lret
ds
bound
inc
cwtl
xchg
sub
xchg
jle
dec
loop
fidivrl
mov
sar
test
dec
mov
pop
lret
andl
inc
je
gs
mov
push
ret
add
mov
stc
jge
lret
push
cmp
jne
pop
adc
dec
aas
inc
dec
sarl
fnsave
adc
iret
or
push
int3
movsl
fcoml
add
ret
sub
mov
gs
jmp
push
inc
addb
jne
cmp
test
xchg
push
sti
push
ja
jl
in
mov
js
push
icebp
push
xorb
xor
les
jl
jl
inc
fsts
or
push
sahf
or
dec
inc
and
dec
wrmsr
std
dec
xor
cmp
leave
ret
or
lea
mov
repz
inc
cmpsl
int
jl
jge
rcrb
add
inc
fsubs
std
lds
es
inc
inc
pop
js
fmul
insb
push
fisubl
mov
enter
lcall
cmpsl
cld
data16
inc
jo
jle
push
fcompl
insl
shrb
cmovl
cwtl
mov
xchg
dec
adcb
add
movsbl
jns
adc
lcall
rcl
notb
push
hlt
stos
subl
or
hlt
aad
pop
sti
adc
lods
mov
outsl
rorb
shlb
fdivp
inc
mov
inc
mov
sub
arpl
add
mov
nop
pusha
adc
jp
mov
xor
roll
mov
mov
lea
aam
cs
push
mov
not
cs
int
orl
cmpsl
repz
xchg
jge,pn
xchg
cs
pop
cmp
mov
cwtl
lods
push
and
clc
dec
mov
add
rolb
inc
nop
cmovae
faddl
daa
inc
jg
xlat
jbe
inc
pop
xchg
sub
mov
cwtl
les
add
mov
cld
jle
pop
clc
inc
icebp
sbb
aad
pop
ss
sub
xor
jns
inc
inc
mov
push
pushf
mov
cmp
fsubrs
pop
inc
add
lds
sbbl
or
adc
xor
clc
mov
sbb
jae
cs
push
iret
cwtl
mov
xchg
frstor
mov
jp
fs
inc
fldenv
insb
pop
outsb
sub
jbe
ret
cli
cmp
rolb
mov
inc
adc
sbb
pop
inc
in
pushf
sbb
pop
pop
outsb
sbb
adc
call
xchg
faddl
into
call
jge
or
inc
push
mov
sbb
sub
scas
das
push
mov
mov
out
scas
add
imul
out
iret
adc
scas
cmpsb
jmp
sbb
pop
fisubrl
cmp
jb
mov
sbb
adc
ror
in
pop
sub
xor
dec
mov
pcmpgtb
test
mov
cld
sbb
push
jmp
jp
mov
imul
cmp
mov
test
jmp
push
bound
mov
adc
xchg
lock
aas
jg
cmp
mov
jo
jns
test
shr
push
pop
jp
add
nop
lcall
dec
cmpsb
and
inc
lock
sbb
sti
ficompl
inc
rol
or
scas
inc
xchg
ret
fwait
inc
push
fcomps
inc
sbb
mov
mov
inc
insl
aam
or
pop
test
and
push
dec
jnp
psubusb
xor
cmp
sub
jp
jmp
or
fstps
inc
sbb
enter
adc
inc
fs
add
pusha
cmpsl
fsts
loop
pop
testl
push
repz
lret
pusha
decb
cmpsb
ret
dec
gs
xchg
xchg
jnp
test
mov
leave
es
fimull
js
xor
or
lock
ret
fs
dec
int3
test
iret
mov
ds
adc
add
pop
cmpsb
mov
je
into
dec
inc
pop
les
inc
adc
add
xchg
pop
lcall
ret
sbb
adc
sbb
sti
pop
push
inc
fucomi
fucomi
mov
dec
xchg
movsl
mov
clc
push
push
test
lds
lods
cmp
rolb
mov
fsubl
cmc
imul
out
pop
inc
bound
nop
mov
mov
cmp
pop
pop
ja
mov
and
imul
add
mov
ljmp
stos
xlat
inc
rclb
imul
fsub
mov
scas
incl
out
push
mov
ret
jecxz
cwtl
jnp
cmp
repz
in
in
lahf
std
inc
jecxz
das
pop
fwait
jl
mov
out
cltd
adc
add
or
pop
inc
mov
ret
mov
adc
lret
push
lds
jae
sbb
mov
push
bound
scas
scas
sahf
arpl
dec
frstor
fcmovu
dec
scas
and
pop
mov
rorl
sqrtps
les
mov
inc
pop
dec
repnz
mov
and
dec
out
mulb
pop
lret
sbb
inc
test
pop
aaa
pop
mov
mov
push
outsb
jle
imulb
shl
dec
leave
ret
mov
fildll
int
pushf
sub
inc
fs
mov
or
or
inc
jmp
xchg
lock
mov
lcall
mov
mull
mov
mov
cmp
roll
fiaddl
push
in
test
cmp
sub
es
cli
cmp
lea
pop
xchg
mov
cs
ljmp
inc
test
clc
aam
ljmp
and
or
jb
arpl
cli
pop
loope
adc
stc
repnz
outsl
pop
insb
cmp
test
dec
cmp
gs
pop
push
xchg
adc
push
cltd
popa
enter
lods
mov
in
pop
sbb
mov
sub
fs
push
fisubrs
sub
mov
lods
dec
pop
es
rclb
sub
cmp
insl
xchg
fists
ljmp
or
lret
mov
out
push
adc
je
jns
lods
add
movsb
int3
insb
popa
sub
push
jne
fmul
sbb
pop
enter
nop
mov
outsb
lcall
add
outsb
lock
mov
cmp
popa
popa
cmp
test
sub
loop
dec
loopne
cs
inc
test
lock
inc
popa
jo
adc
or
xorb
fs
xchg
cli
jge
adc
scas
ja
sbb
jae
and
ja
pushf
and
mov
test
repnz
mov
cmp
stos
cmpb
jno
mov
sub
rcrb
fwait
push
emms
sub
push
repz
rcrb
fidivl
testl
in
sbb
sub
rcrl
cli
imul
mov
mov
bound
lcall
faddl
sbb
outsb
in
push
aad
push
or
rclb
mov
enter
pop
jg
int3
push
sbb
out
jecxz
cmpsb
push
dec
push
rcrl
fninit
in
in
add
imul
push
or
cmp
push
scas
adc
dec
push
fimull
sbb
daa
in
cmp
and
mov
sub
xor
jne
std
mov
pop
xchg
mov
divps
add
push
outsl
pop
push
andb
shll
sub
shrl
scas
pop
xor
pop
call
jnp
daa
add
js
rcrb
enter
xor
xchg
push
pop
daa
sub
and
add
pop
sbb
inc
xchg
jns
loop
pop
or
jbe
or
push
sarl
fs
push
fldcw
enter
insb
pop
cwtl
cli
flds
jns
dec
inc
sub
rcrl
leave
ds
in
shr
rclb
mov
mov
loope
cmp
fcmovb
mov
push
nop
lds
dec
inc
cwtl
pop
bound
add
insl
mov
and
imul
or
insb
and
loop
cld
push
inc
push
and
push
je
js
aam
xor
outsb
jo
les
push
mov
sahf
mov
push
inc
in
mov
shll
push
rol
dec
and
pop
xor
push
clc
add
jp
pop
pushf
or
lds
add
pop
cs
mov
push
xchg
pushf
and
lds
inc
sub
add
mov
in
test
cmp
je
int3
xor
cli
test
pop
pop
addl
push
mov
iret
xor
jmp
cmp
sub
jns
adc
mov
adc
push
hlt
inc
push
icebp
dec
adcb
pop
xchg
xor
pop
push
pop
sbb
stos
push
mul
push
adc
xor
rorb
pushf
insb
loopne
or
add
add
add
cmovo
mov
fcmovnbe
jle
or
sbb
shrb
sub
push
jecxz
insl
mov
lea
dec
add
vpsubusb
or
pop
into
popf
pop
subb
lds
adc
push
cmp
or
xor
inc
fwait
jb
or
adc
nop
sbb
aam
ss
add
mov
test
ret
or
sub
inc
or
pop
sbb
addr16
es
hlt
negl
add
lret
call
pop
jl
inc
push
cmp
cmp
xor
xor
icebp
cli
jmp
arpl
fmul
int3
jnp
jecxz
cmpsl
adc
jnp
clc
stc
mov
lret
sbb
scas
xchg
test
adc
test
xchg
sbb
enter
adc
jns
add
mov
inc
faddp
mov
add
jnp
adc
out
out
xchg
faddl
out
push
mov
push
and
lock
movsb
js
mov
rorl
cli
jae
lea
loopne
dec
push
sbb
dec
lret
mov
subb
in
jge
pop
adc
lcall
or
push
imul
gs
jp
sbb
sub
call
in
rorl
in
mov
cmp
ret
insb
xchg
mov
pop
rclb
mov
into
movsb
xchg
pop
icebp
add
daa
sub
fwait
xor
out
lds
imul
mov
push
add
insl
sar
lcall
mov
dec
mov
pop
mov
sbb
jecxz
dec
dec
mov
lret
cmpsl
inc
add
jae
rcrb
inc
pop
fcoml
and
pop
sub
dec
sbb
gs
cmpsb
dec
fmuls
sbb
ret
sbb
insb
add
scas
fsubs
fcoms
sbb
xchg
test
loope
xchg
lea
add
pop
iret
xor
je
lods
cmp
aas
add
inc
push
stos
and
roll
adcb
sbb
enter
push
jmp
pop
push
test
ja
inc
into
mov
insb
pop
sbb
mov
and
push
in
out
in
cmp
sahf
inc
or
addr16
mov
jb
sub
cmp
cmp
and
lea
sub
es
bnd
push
cmp
adc
lods
stos
lret
push
push
xor
pop
rclb
xchg
add
push
ret
mov
stc
lds
aaa
lock
sub
xor
mov
xor
pop
icebp
sbb
ljmp
outsb
jo
mov
or
and
push
or
adc
rclb
pop
xor
push
mov
les
stos
test
xor
sbb
or
xor
push
cmp
mov
pushf
nop
sub
jle
fistps
push
ret
dec
add
or
ds
mov
xchg
popf
stos
xchg
mov
stos
push
push
inc
push
mov
cmp
scas
cli
addr16
pop
mov
mov
adc
or
inc
lcall
mov
movsb
push
cmp
loopne
jmp
pop
push
sbb
lock
popa
xorps
push
or
mov
dec
xchg
add
inc
enter
into
sbb
pop
sbb
lahf
ret
jge
inc
push
push
icebp
inc
dec
outsl
fidivs
pop
dec
in
fsubl
pushf
into
add
in
inc
fstl
pop
jns
jle
mov
lods
mov
lahf
cmc
popa
push
or
push
push
imul
push
cmp
popa
inc
ds
mov
ss
lea
push
daa
in
les
pop
push
lds
ljmp
push
fistpl
adc
mov
aaa
popa
sub
les
into
pop
inc
push
push
cmp
add
mov
daa
xor
scas
gs
sbbb
jp
cltd
nop
icebp
fcoml
fistps
lret
aam
fwait
adcb
sbb
out
push
fadds
jmp
mov
fiadds
test
inc
mov
mulb
and
xor
shlb
push
xchg
lcall
loop
js
loope
inc
jle
adc
enter
sbb
iret
and
sahf
and
es
pop
shlb
adc
or
jb
in
push
es
mov
adc
imul
pop
sbb
cmp
sarb
sbb
xor
jb
sub
add
jnp
ret
pop
xchg
data16
mov
fistps
sbb
cmp
outsb
jno
int3
pop
or
into
jo
loopne
pusha
jne
sbb
xchg
push
add
xchg
out
imul
aas
je
mov
loopne
insb
incb
aam
push
testb
cs
bound
out
sbb
cmp
jmp
sysenter
pop
xchg
xchg
insb
sub
rolb
cmp
outsb
lods
sub
pop
jno
int3
dec
or
into
pusha
test
mov
cmp
mov
mov
insl
xchg
inc
js
adc
sbb
arpl
adc
jns
das
inc
enter
sub
jle
jne
dec
mov
or
sbb
icebp
adc
movsb
cmpsb
std
fistpll
dec
push
add
mov
jnp
in
pop
pop
clc
and
popa
and
xchg
sti
xchg
add
mov
imul
or
fsubl
pop
dec
adc
inc
shrl
pop
add
shr
sub
or
inc
adc
fcompl
les
notl
xchg
repz
adc
push
jmp
icebp
dec
push
jae
call
in
push
notb
stos
inc
inc
pop
ret
inc
mov
inc
lock
pop
ret
pop
jg
mov
es
pop
jmp
outsl
scas
stc
xor
pop
lods
pop
sub
jmp
outsl
cs
mov
imul
fadds
js
inc
enter
sbb
cmp
jb
push
gs
mov
cmpsb
dec
outsl
push
pop
les
xor
jnp
xor
cmp
aad
pop
add
add
xchg
mov
adc
add
dec
xor
lods
or
add
mov
test
dec
fdivrl
imul
sbb
out
cmp
fstl
xchg
mov
icebp
loope
or
xchg
enter
inc
aad
mov
imul
push
jns
or
movsb
jle
shl
inc
dec
adc
inc
adc
mov
cld
popf
adc
sar
addr16
test
or
iret
inc
jno
or
sbb
lahf
dec
movsb
out
mov
imul
mov
lods
push
jns
sbb
push
jg
push
push
mov
jo
mov
cmp
dec
jo
inc
mov
pop
sar
cmp
fucomip
cmp
or
dec
stos
cmp
push
iret
subl
or
iret
jecxz
fsubr
lcall
data16
ret
sbb
dec
xchg
sbb
rol
int3
cmp
xchg
inc
inc
filds
inc
pop
adc
pop
lods
sarl
mov
dec
jb
je
or
xor
xchg
push
popa
mov
jg
add
cmpsb
push
ljmp
cmp
in
push
test
add
fiadds
insl
push
inc
lret
mov
jno
cmp
push
dec
pop
or
sti
jmp
cmp
shrl
insb
push
lock
mov
sbb
cmovg
int
call
adc
sbb
or
outsl
rorb
or
push
mov
sub
and
sbb
pop
cmp
dec
pop
mov
mov
push
sub
jmp
leave
sub
and
push
dec
fldln2
inc
repnz
scas
in
cli
roll
inc
adc
or
aas
test
pop
mov
rclb
nop
lea
push
rolb
mov
jmp
inc
pop
push
add
fdivrl
inc
dec
sub
inc
inc
shrb
adc
dec
cmpsl
call
iret
inc
into
fdivr
mull
scas
push
aam
insb
std
cmpsb
inc
outsl
in
inc
jl
lds
je
cmp
xchg
sub
aam
movlhps
fsubr
push
call
push
aaa
sbb
aad
inc
adc
push
in
arpl
hlt
jecxz
les
inc
pop
decb
imul
dec
cmp
dec
into
popf
into
pop
pop
rolb
inc
rorl
jns
sbb
loopne
in
inc
lret
jge
sti
insb
mov
insl
scas
ror
dec
push
fisubl
pop
sbb
rclb
inc
xchg
movsb
je
pop
cmp
in
adc
rorl
dec
ret
pop
sti
mov
jb
mov
iret
pushf
xchg
add
pop
sub
pop
loope
dec
and
jecxz
fstpt
mull
sub
push
lock
xor
jbe
out
push
cmp
xor
test
or
pushf
push
mov
sar
inc
enter
in
cmp
sbb
nop
lahf
xor
mov
cmp
rclb
xor
insb
jo
popa
es
add
imul
lcall
dec
cmp
push
xor
and
ret
jnp
repz
rol
fisttpl
shrb
xor
insb
lahf
fwait
rclb
dec
push
shrb
jecxz
imul
push
dec
sbb
mov
push
js
and
paddusb
xchg
ja
es
test
lea
sbb
jle
repz
dec
ds
mov
push
mov
jg
xor
and
cld
iret
pop
xchg
mov
dec
push
aad
push
jl
xor
insb
aad
fisttpll
sub
int3
mov
mov
mov
pusha
aad
adc
aad
lahf
adc
test
aad
pop
outsl
inc
insl
xor
fstpt
lret
xchg
aad
xor
mov
daa
inc
clc
cltd
sbb
das
adc
add
repnz
mov
jo
ljmp
inc
mov
int3
pushf
ret
js
rolb
aaa
sbb
mov
arpl
fiadds
add
out
arpl
jle
adc
pop
pop
addr16
int3
ss
insl
sbb
add
enter
stos
aad
scas
in
or
add
loope
icebp
mov
loopne
lods
icebp
imul
dec
out
int3
lods
lret
add
add
inc
add
jne
mov
push
dec
cmpsl
cmp
jge
orl
mov
dec
mov
sub
mov
pop
dec
int3
fbld
mov
add
dec
into
je
fmuls
xchg
inc
push
cmpsl
push
adc
fcmovnb
jl
and
sub
cli
dec
les
xor
jp
push
pop
add
add
add
orl
and
dec
andl
es
aam
or
lock
mov
mov
xor
data16
lods
inc
pop
sub
xchg
mov
push
cmpsl
cwtl
lods
js
push
xor
popa
aam
mov
stos
aas
cwtl
gs
xor
nop
mov
aad
jl
pop
xor
xor
loopne
sub
xor
mov
cmp
fnsave
repnz
inc
cli
mov
repnz
sub
neg
mov
jle
decb
mov
mov
inc
mov
mov
aas
call
enter
cld
mov
loope
out
dec
sub
jg
jae
inc
pop
xchg
xor
mov
push
aad
adc
pop
int3
leave
mov
ss
pop
int3
sahf
shrl
stos
cld
clc
push
enter
mov
rcll
enter
in
rorl
add
scas
push
js
sbb
cmpb
xchg
or
cli
xorb
mov
in
int3
lods
aam
dec
jo
fwait
jmp
adc
movsb
outsl
sbb
pushf
and
and
or
sub
dec
xchg
mov
dec
pop
inc
pop
dec
enter
ficoms
rcrl
dec
enter
dec
push
push
cmp
mov
inc
fmuls
cmp
ja
cli
push
shrb
call
and
mov
cmpsb
pop
test
roll
xor
in
add
jle
daa
mov
push
inc
add
xchg
not
add
pop
lcall
int3
testb
loopne
inc
mov
sbb
cmc
mov
aam
pop
inc
aas
fdivl
cld
popf
out
enter
rorb
xchg
aaa
push
mov
dec
dec
cmp
ljmp
pop
adc
add
pop
ds
repz
sti
shr
dec
mov
jb
push
outsl
xchg
lret
cli
sub
js
mov
popf
cld
xor
pusha
fs
pop
test
insl
mov
into
dec
add
test
fsubrl
pop
pextrw
xchg
or
cmc
imul
sbb
notb
int
push
sbb
out
mov
adc
push
cltd
xchg
mov
xchg
into
jge
mov
or
mov
sarb
out
ja
mov
int3
mov
xlat
mov
add
add
jae
mov
sahf
adc
dec
fcmovu
mov
test
nop
cltd
mov
enter
or
dec
jl
push
mov
mov
pop
clc
jae
cmp
add
pop
dec
movsl
sbb
mov
loopne
jl
sub
arpl
clc
xchg
sarb
jl
out
jo
xchg
inc
dec
sete
or
dec
push
sbb
push
sbb
adcb
in
adc
cmp
shrl
js
mov
add
int3
or
aaa
inc
incb
sub
shrl
mov
dec
pop
inc
pop
pusha
stos
loope
addl
addr16
outsb
loop
pop
pop
rcl
nop
inc
cwtl
jns
ds
sahf
add
sbb
movsb
ret
or
push
lahf
dec
les
in
mov
jne
xchg
pop
in
fnsave
popf
xchg
cld
out
in
pop
cmpsl
rcr
ret
xchg
out
nop
cltd
scas
pushf
dec
push
inc
dec
mov
lahf
jo
leave
inc
jg
lret
jbe
or
sbb
or
cld
imul
push
xchg
fwait
or
cld
and
add
sub
xor
lcall
sbb
mov
mov
push
and
bswap
cmp
push
es
or
out
lcall
loop
mov
daa
jno
addr16
bound
ja
sub
orb
add
adcl
add
fldt
je
mov
push
mul
mov
dec
cmp
test
inc
xchg
das
mov
push
inc
or
iret
add
pop
mull
enter
add
scas
pop
sub
xchg
clc
add
in
dec
hlt
outsb
test
adc
add
mov
inc
jge
aam
inc
sbb
mov
cwtl
and
jle
or
ljmp
or
lods
inc
inc
adc
push
mov
stos
xor
mov
add
inc
pop
fwait
nop
or
ret
gs
iret
subb
add
mov
jae
xor
scas
roll
cmp
mov
mov
inc
jne
iret
ret
push
pusha
lock
or
or
out
jmp
mov
sarb
lcall
stc
shll
notl
xor
inc
xchg
cmc
jecxz
pop
xchg
inc
mov
xchg
fadds
jns
aas
add
test
mov
in
mov
adc
roll
lods
roll
inc
in
xor
add
xchg
popf
repnz
xchg
insl
iret
jo
inc
pop
add
iret
xchg
sahf
bswap
divb
testb
cmp
jne
fnstsw
dec
mov
stos
mov
clc
cwtl
sbb
subl
psubb
add
adcl
lret
mov
xlat
pop
testb
iret
clc
shll
dec
pop
into
mov
out
pop
push
push
jne
je
cmp
push
ljmp
xchg
push
xchg
pop
rorb
sub
xchg
jo
pop
jno
sbb
pop
das
subl
mov
out
lahf
pop
push
push
lcall
inc
test
leave
dec
cmp
ss
mov
or
inc
mov
out
add
mov
mov
mov
hlt
loopne
sbb
sub
add
jne
repz
jmp
jbe
fisttps
pop
dec
fcomps
mov
xchg
dec
pop
inc
dec
xlat
pop
mov
inc
mov
ret
and
mov
lds
jge
stc
outsb
cmpsl
and
jle
push
or
pop
dec
or
cmp
jne
inc
jns
xlat
or
ficomps
and
push
push
add
loope
push
sbb
mov
push
mov
mov
jle
lds
pop
orb
stos
in
push
not
dec
and
mov
rol
push
inc
or
pop
cmpsl
outsl
jecxz
sub
sub
jne
sub
fsubrs
lcall
das
sarb
and
in
cmp
imul
jge
clc
aaa
call
mov
cmp
mov
int
inc
insl
jo
mov
xchg
fcoms
outsl
imul
push
push
push
push
inc
ss
rorl
cmp
fnstenv
xor
push
adc
insl
or
inc
cli
out
es
sbb
sub
movsb
cmp
sbb
adc
mov
andps
or
shl
rorl
jne
das
fcompl
stos
add
daa
sar
orl
jmp
jb,pn
adcb
push
shll
add
mov
test
dec
fwait
pop
xchg
or
mov
aaa
jne
cmp
jle
mov
nop
cmp
scas
add
ja
mov
jb
jo
cmp
stc
int3
or
lea
pop
fcmovnb
jmp
inc
xchg
cmp
jnp
xchg
xchg
sti
add
stos
mov
pop
jns
in
mov
scas
sub
mov
fiadds
cmp
hlt
addr16
mov
dec
pop
sbb
inc
xor
cmp
mov
ss
sahf
inc
popf
fdiv
mov
fmul
daa
les
les
lock
inc
and
rorb
les
ret
int3
test
js
or
aam
aam
pop
pop
pop
fldenv
push
hlt
test
sarb
mov
in
cs
mov
mov
fs
cmpsb
movsb
loopne
icebp
mov
inc
mov
adc
loopne
sbb
pop
mov
mov
dec
lods
out
rol
sub
inc
jo
test
test
lock
in
jbe
push
inc
mov
test
arpl
inc
fildll
dec
jle
je
inc
or
into
ljmp
mov
xor
pop
sbb
inc
shrb
jle
sahf
ds
push
icebp
fistpll
cmpl
add
popf
fmuls
cmc
leave
shrb
cltd
gs
xchg
iret
lods
mov
adc
sahf
ret
insl
xor
mov
sbb
enter
fdiv
dec
popf
not
mov
fcomi
and
inc
rorl
call
mov
pop
gs
mov
jp
into
or
push
or
push
les
mov
pop
bound
dec
mov
and
push
dec
cmp
inc
shrl
les
jmp
push
les
mov
test
enter
imul
cmp
add
mov
arpl
xlat
rcrb
jo
rolb
ja
aad
enter
lock
addb
pop
lahf
call
add
dec
mov
xchg
pushf
mov
je
inc
or
in
enter
popf
in
movsl
xchg
addb
divb
lret
insl
inc
filds
out
iret
popa
mov
jb
inc
xchg
xor
insb
inc
or
jmp
ret
outsl
es
int3
pop
xor
pop
jo
shll
and
inc
rep
fcomps
adc
lods
scas
sarl
mov
cmp
xlat
dec
push
dec
pop
mov
insb
mov
inc
mov
or
pop
in
iret
jae
cmp
es
dec
pushf
pop
inc
shrl
mov
pusha
add
mov
inc
inc
xchg
push
outsl
and
mov
faddl
movsl
mov
inc
cs
cltd
and
test
jnp
je
inc
or
call
or
adc
pop
sub
into
lock
cmp
cmp
scas
les
sbbl
push
pop
mov
cmp
dec
lods
mov
sarl
in
inc
mov
insb
cld
cltd
bound
push
dec
les
inc
jb
add
in
out
inc
pop
lahf
mov
mov
pop
or
mov
lea
mov
xor
dec
dec
out
dec
dec
sbb
jo
add
add
fdivr
clc
push
and
int
inc
sbb
cmp
xor
sbb
pop
decb
add
iret
sbb
xchg
fwait
fwait
dec
jae
inc
aaa
lret
xchg
adc
movsb
push
mov
cmp
dec
mov
stc
ss
jle
pop
cmpsl
push
fildll
insb
pusha
dec
iret
scas
les
fadds
and
push
movsb
fmull
cmp
push
ret
mov
nop
mov
jne
icebp
in
or
add
or
sti
in
pop
pop
jg
bound
inc
xchg
and
in
xor
adc
pop
fisttpll
call
inc
stc
ret
and
repz
inc
sbb
mov
cmp
fidivs
insl
mov
fiadds
and
sbb
push
outsb
aaa
jo
jle
mov
inc
jo
sbbb
fsubl
mov
je
inc
mov
mov
scas
or
rorb
pop
sbb
push
dec
icebp
push
loope
mov
add
pop
repnz
shr
ljmp
inc
mov
xchg
inc
loop
cwtl
fcoml
push
jmp
push
lds
push
test
push
inc
cmpb
inc
mov
sarb
push
sub
mov
js
js
pop
outsl
movsb
cmp
rclb
mov
pop
rcl
add
popf
add
cmpsb
fidivl
faddl
inc
test
dec
push
fnstcw
inc
loopne
rcr
mov
cmp
add
or
jae
clc
clc
pushl
xchg
pop
or
ret
pop
lret
sub
or
push
inc
push
xor
ss
inc
out
in
out
xor
imul
inc
inc
adc
ror
pop
push
sub
adc
std
sub
mov
jb
mov
sbb
cmpsl
addr16
inc
repnz
imul
dec
mov
loopne
mov
xchg
lods
mov
loop
push
iret
je
adc
push
pusha
imul
adc
sub
adc
int
sbb
dec
cmpsb
mov
aam
dec
or
xor
or
jge
cmp
outsl
or
mov
pop
jne
shll
add
push
sahf
loop
sub
push
shr
fs
push
or
sub
pop
ret
movsb
arpl
mov
cli
inc
fnstcw
lret
in
adc
inc
js
jge
pop
inc
outsl
xchg
cmp
pop
into
push
cld
inc
fs
es
adc
std
mov
inc
mov
adc
dec
data16
mov
jmp
insl
fs
mov
jns
mov
leave
sbb
movsl
js
repnz
lea
xor
sbb
mov
test
push
sbb
mov
xor
adc
aad
xchg
mov
cmp
dec
xor
clc
mov
cmc
dec
inc
inc
ret
into
jb
add
cmp
insl
add
push
ficomps
test
cmp
andb
jmp
pop
pop
mov
cmp
mov
sbb
jo
dec
and
sub
aam
pop
fcompl
xchg
push
pop
daa
or
pushf
clc
push
ret
or
mov
ds
xorb
nop
xchg
fs
or
push
shrb
lds
iret
jle
jp
push
pop
clc
out
cmp
push
jg
inc
ljmp
sub
rorb
enter
test
mov
fldcw
jns
xor
jmp
mov
aas
fidivs
jecxz
inc
rep
out
out
jmp
iret
xor
mov
pop
mov
xchg
cwtl
inc
rcrb
mov
dec
xchg
xchg
ss
push
push
or
test
aaa
loopne
fs
fnstsw
inc
in
mov
jae
xchg
sbb
and
pop
call
adc
pop
inc
push
repz
cmc
mov
jb
inc
popf
mov
push
movsl
fimuls
add
pop
xlat
jecxz
jno
push
enter
or
dec
cmp
scas
call
xchg
enter
cmp
sub
pushl
ret
dec
daa
mov
nop
ror
push
mov
jmp
pusha
pop
daa
loope
xchg
jae
mov
movb
fprem1
jne
scas
lock
pusha
xchg
fdivrl
lds
dec
sti
repnz
les
aam
ss
pop
pop
inc
jns
or
inc
sbb
in
inc
and
or
aam
cmpsl
outsb
sub
icebp
movups
dec
aam
sub
icebp
aad
push
test
xor
fcmovnb
sbb
cwtl
sbb
test
hlt
test
dec
pop
mov
test
shlb
pop
sbbb
cmp
mov
pop
inc
push
movsb
xchg
mov
daa
cs
notb
arpl
ljmp
mov
pop
inc
cmp
outsb
dec
lods
adc
jnp
bound
aam
pop
mov
or
inc
hlt
lret
pop
movsl
cs
mov
cmpsl
dec
inc
fimull
outsl
lock
mov
jmp
jp
adc
mov
test
inc
pop
aad
inc
sbb
mov
dec
xorl
push
outsl
mov
ret
mov
jbe
sub
mul
sub
jns
xor
outsl
stos
repz
and
je
pop
stos
popa
cwtl
xor
mov
ljmp
fsts
insb
pop
imul
and
leave
jl
mov
stos
enter
push
push
xchg
cmpb
inc
int3
insb
cmp
push
push
cld
xchg
addb
in
push
outsl
mov
ret
fcomip
repnz
repnz
lock
mov
daa
out
sbb
sbb
jge
hlt
and
push
daa
cld
in
test
cmpsb
jg
hlt
and
dec
xorl
or
fistpll
and
out
insl
sbb
and
push
rep
insb
mov
adc
xchg
cld
ret
cltd
push
ds
xor
dec
mov
int
sahf
or
mov
mov
xor
shrl
mov
arpl
pop
sbb
fnstenv
mov
es
inc
pop
xor
push
sbb
lock
jl
sbb
xchg
rorl
aam
lea
ljmp
cmp
jecxz
mov
mov
les
enter
inc
mov
fidivl
push
fwait
lods
fidivrs
push
int3
xor
cmp
dec
dec
pop
imul
add
lea
jle
cmovl
ret
and
push
dec
xchg
push
inc
jnp
inc
inc
lcall
and
sahf
push
mov
dec
nop
mov
gs
out
inc
or
push
or
or
dec
mov
testb
pop
mov
out
and
mov
lea
jge
movsb
int3
pusha
cmp
in
rcll
pop
lock
adc
sbb
popa
push
cmpsl
xchg
movsb
add
inc
fidivl
das
les
xchg
int3
inc
mov
inc
bound
push
push
xchg
ficomps
cmc
lods
mov
add
jg
les
ficomps
mov
pop
push
mov
fs
ja
into
mov
hlt
add
mov
xchg
leave
shlb
leave
aaa
sbb
jmp
loop
sbb
arpl
mov
jmp
lods
mov
outsb
pop
sbb
es
cmpsl
aad
jmp
adc
sahf
aad
popf
in
pop
outsb
sbb
lret
push
cli
mov
inc
outsb
jb
popf
push
leave
ds
or
arpl
xchg
lods
adc
mov
mov
int3
adc
movsb
dec
daa
and
xchg
out
loop
pop
inc
xchg
mov
popa
pop
cltd
dec
xor
mov
xor
rcr
out
dec
sbb
daa
ss
scas
xor
fsubs
icebp
pop
lea
dec
daa
orb
mov
test
icebp
jmp
or
shll
out
xchg
repnz
ds
aam
and
or
xchg
movsb
loope
add
imul
imull
lcall
aad
nop
xchg
std
mov
cmp
jo
mov
mov
inc
test
pop
in
mov
inc
xchg
test
ret
out
shlb
push
inc
fmull
sbb
sbb
adc
lahf
push
mov
fwait
in
push
aaa
pop
dec
xor
lcall
dec
dec
push
or
scas
ror
mov
shrb
or
loope
mov
mov
ss
rorl
push
icebp
sbb
data16
daa
pop
cmp
jl
aam
sbb
push
stos
enter
pushf
push
push
push
inc
int
adc
cmp
cld
dec
cltd
loopne
js
mov
divl
add
shrb
mov
roll
fstpl
repnz
jae
and
push
mov
icebp
cmp
lret
lahf
add
xor
orb
mov
lahf
or
ds
filds
push
or
jns
push
or
cmp
mov
in
push
repnz
adc
dec
push
and
ret
sub
xchg
lcall
arpl
pop
movsb
sub
hlt
jno
lret
into
pop
cmp
ljmp
mov
adc
jle
leave
pcmpeqd
insl
xchg
inc
sbb
lds
imul
push
sbb
sarl
cmp
les
pop
cmp
or
lret
fimuls
rcrl
inc
mov
stos
nop
ret
hlt
in
inc
mov
ret
sarl
push
sub
cs
insb
inc
add
out
lcall
aaa
add
insb
cmp
sub
xor
jb
popa
in
xchg
add
mov
adc
sti
in
js
inc
push
jge
fbstp
repnz
xor
fistps
cmp
xchg
rcl
in
por
sbb
fs
dec
aad
add
and
test
mov
pop
or
pop
in
rcll
or
adc
pop
add
fsubs
push
cwtl
jae
scas
cmp
adcl
fldl
mov
loop
add
lahf
inc
lahf
mov
movsb
inc
rol
scas
es
shrb
xchg
pop
cmc
mov
inc
out
cmp
bound
xor
sbb
fs
dec
cmp
cltd
xchg
cs
sub
in
dec
lea
mov
test
mov
sbb
sbb
or
outsl
push
lock
idiv
mov
xor
and
mov
std
stos
and
sbb
xchg
int3
cld
mov
sub
add
mov
mov
outsl
out
insl
in
mov
and
ret
sarb
cmp
rclb
movsb
arpl
loopne
fsts
add
iret
or
add
ficoml
xchg
andb
mov
jecxz
cmp
js
popl
adc
fwait
lock
sbb
imul
jecxz
adc
pusha
add
xchg
int
fmul
das
cmp
adc
mov
cltd
push
xchg
roll
daa
inc
jae
add
push
sbb
xor
cmpsb
pop
pop
ljmp
fmull
inc
in
push
call
mov
aad
jp
sti
jb
repnz
fcompl
adc
push
sbb
loopne
push
and
push
xchg
ret
ja
insb
ja
out
mov
push
insb
pop
stc
out
xchg
mov
dec
sub
mov
rcr
and
mov
enter
and
sbb
xchg
pop
pop
js
in
lret
jle
mov
cmp
aas
repz
pop
jo
inc
addr16
mov
xchg
lahf
sub
mov
or
jb
add
outsb
push
fiaddl
addr16
pop
cld
jmp
dec
fucomp
pop
mov
loop
jp
dec
xchg
pop
lea
mov
gs
ret
dec
jb
xorb
adc
fnstenv
jns
sahf
out
inc
pushf
push
inc
and
add
jbe,pt
or
dec
iret
in
pop
leave
iret
adc
ss
orb
iret
dec
adc
push
xchg
add
cmpsb
xor
jno
daa
jae
fidivl
test
test
xchg
mov
cmp
cs
addr16
xor
call
mov
loop
mov
sahf
xor
push
xor
jmp
sahf
pop
shll
add
sub
ficoms
outsl
jge
inc
repz
int
pop
scas
incl
fldl
clc
cmp
mov
pop
push
mov
sbb
push
jns
ljmp
fsts
add
sub
cld
sub
cmpl
nop
fcomi
arpl
cmpsb
inc
aad
push
sbb
fucomi
icebp
pushf
pushf
mov
dec
dec
cmp
jno
sub
adc
loopne
popf
inc
insb
push
pop
dec
es
mov
in
popf
dec
or
dec
ds
push
int3
mov
or
ficoms
sub
iret
sub
pop
xchg
jne
fsts
fsubp
cli
call
popa
xor
fbstp
hlt
int3
mov
cli
loop
pop
sahf
out
push
adc
and
imul
mov
cmp
stc
pop
insb
cltd
push
and
lods
daa
cmp
addb
test
add
xorl
lahf
sub
or
cmp
or
inc
add
mov
add
lds
xor
add
cli
adc
ficoms
jle
pop
xchg
repz
dec
dec
insb
gs
lods
icebp
test
and
repnz
loop
push
stos
imul
lret
xor
cmp
mov
js
ja
jecxz
popa
push
inc
xor
inc
push
add
pop
and
mov
add
das
and
sbb
stc
pop
inc
inc
movsl
imul
add
outsl
jecxz
das
mov
sub
jl
imul
jecxz
mov
lea
push
inc
ficoms
push
imul
hlt
lea
xchg
xor
cmc
xchg
ljmp
imul
xchg
or
push
fcomps
popf
popf
sti
dec
inc
jae
dec
and
or
dec
pushf
shll
loopne
mov
inc
out
jno
inc
outsb
shll
xor
mov
dec
push
xor
pop
fmulp
outsb
in
jecxz
sub
mov
hlt
imul
inc
stos
insl
or
or
outsl
hlt
into
fisubs
push
flds
and
and
aas
sbb
movsl
dec
and
aad
es
sub
out
ficomps
push
lahf
cmp
jno
int3
add
arpl
shl
cmp
mov
sti
loopne
push
mov
cmc
lock
dec
enter
flds
push
sub
jno
cmpsb
adc
pop
cmpl
movsb
pop
or
imulb
or
xor
fists
push
jo
dec
mov
leave
stos
or
mov
leave
cmp
test
or
imul
push
inc
mov
lds
psadbw
mov
jae
xchg
pop
inc
enter
mov
push
push
jo
xchg
rolb
ret
pop
sti
jo
or
mov
orb
les
xchg
popl
mov
rcrl
push
cltd
xor
jae
clc
dec
mov
dec
lahf
pop
cli
xchg
jecxz
pop
cmp
je
mov
int
add
cmp
stos
aam
or
shl
scas
lcall
pop
les
int
sti
mov
sbb
or
adc
stc
and
sbbb
or
std
xchg
sahf
test
sbb
mov
pusha
xlat
sbb
lret
mov
xor
hlt
xchg
mov
fs
inc
adcb
jb
add
jbe
shlb
mov
push
mov
mov
shlb
ds
popf
xor
cmc
ret
cwtl
push
and
test
adc
sub
adc
sub
push
test
cmp
gs
push
stos
pop
adc
push
dec
inc
dec
jns
sub
in
fcompl
jbe
in
inc
mov
or
ds
push
les
xchg
sub
mov
mov
cli
cmp
add
ds
mov
shlb
sbb
cli
mov
sahf
push
xor
aaa
xchg
loopne
shlb
jb
dec
scas
arpl
call
out
add
es
cmpsb
faddl
jg
mov
add
push
stos
inc
jp
sbb
mov
leave
pop
aaa
fmuls
sub
popf
add
pop
shr
bound
xchg
into
ficomps
dec
fs
cmp
int3
pcmpeqd
loope
popa
dec
dec
cld
outsb
mov
icebp
add
mov
pop
inc
cld
add
bound
std
fcomps
mov
or
ret
repnz
movsl
adc
fidivrl
je
loopne
pop
pop
jno
cmpsl
clc
sbb
bound
sbb
decl
add
dec
leave
ja
pop
dec
cs
fdivl
adc
scas
sbb
mov
sbb
sbbl
dec
push
xor
dec
push
xor
movsb
mov
les
jl
push
popa
aam
into
inc
pusha
adc
imul
inc
and
or
js
fmul
adc
cwtl
rcrl
sarl
inc
inc
mov
enter
int3
std
cmp
pop
shl
mov
fcoml
xchg
jle
mov
push
negb
imul
dec
or
test
mov
in
jne
push
repnz
insl
pop
push
add
aam
mov
adcb
pop
jns
fadds
add
outsl
popa
push
hlt
mov
add
pop
or
insb
fisubs
add
les
rorb
push
push
mov
je
xlat
sub
inc
aas
xchg
mov
insl
xchg
add
imul
pop
inc
mov
add
cmp
sbbl
aaa
cmp
andl
das
xor
pusha
rorb
cltd
xchg
and
sbb
dec
mov
pop
sti
movsl
or
daa
orb
loopne
filds
int3
push
incb
push
mov
push
pop
les
push
lods
adc
je
and
mov
addr16
jl
and
movsl
sub
push
mov
add
test
cmp
mov
mov
add
push
cli
jns
fcompl
jo
xchg
into
inc
sbb
pop
push
xchg
jb
movsl
lcall
inc
dec
inc
out
pop
mov
or
or
mov
dec
aas
xor
inc
int
popa
add
xchg
je
lock
test
nop
mov
es
mov
add
inc
popf
push
xchg
mov
lds
sbb
push
iret
pop
mov
jb
add
push
hlt
daa
add
push
xchg
cmp
mov
fnsave
jp
iret
ret
fstpl
mov
repz
int3
idiv
cmc
fld
lods
das
dec
enter
xrstor
aaa
or
and
inc
jg
add
fiadds
test
loop
add
mov
sub
mov
inc
fsubr
pop
stos
pop
hlt
cmc
ret
add
movsl
insb
repnz
cmpsl
sub
lgs
aam
inc
inc
inc
adc
push
xchg
outsl
vunpcklps
in
dec
or
lcall
sub
imul
fxch
repnz
or
inc
pop
mov
stos
inc
lcall
pop
hlt
into
add
xchg
loop
dec
dec
mov
mov
dec
inc
xchg
or
int3
adc
push
xchg
and
or
push
jmp
mov
iret
inc
pop
mov
aam
jae
loop
xchg
mov
jmp
push
nop
pop
push
sbb
out
add
or
fisubl
fdiv
stc
dec
cwtl
add
loop
std
jb
pop
xchg
xor
mov
dec
jge
lahf
xlat
flds
sub
fcmovb
push
icebp
icebp
xchg
scas
ffree
imul
data16
dec
inc
fdivrl
pop
mov
push
jbe
in
push
sbbl
cmp
cltd
fwait
mov
loope
iret
fstpl
sbb
xchg
push
shrl
adc
and
mov
iret
fs
jmp
fcompl
rcl
pop
lret
mov
jns
cmp
adc
push
mov
das
and
inc
and
in
sub
push
add
inc
pop
push
xchg
popa
and
mov
jns
cmp
cmp
add
add
dec
xchg
in
sbb
adc
mov
scas
or
cmp
addb
jle
loop
data16
and
hlt
sbb
push
inc
adc
xchg
or
adc
pop
adc
and
mov
hlt
mov
jmp
push
je
shlb
addl
scas
mov
and
dec
and
test
out
data16
sub
mov
jae
je
push
pop
or
jmp
adc
mov
and
addr16
sub
lahf
add
out
out
pop
daa
out
rcrl
dec
inc
or
movsl
popa
or
or
or
out
xchg
push
cmp
push
scas
enter
ljmp
or
jge
out
das
sub
repnz
push
nop
pop
xchg
das
dec
aam
addr16
jge
mov
mov
cltd
adc
adc
sbb
and
scas
jae
push
fcoms
inc
stc
pop
jne
jmp
iret
and
popa
or
adcb
bound
push
or
fsubl
js
xchg
push
pop
push
xlat
sub
cmpsl
push
inc
daa
fnsave
push
addb
push
inc
sbb
imul
gs
xor
js
push
insl
lret
add
adc
mov
pop
xchg
cmovns
xor
mov
aas
mov
mov
fsubs
in
arpl
jecxz
mov
push
add
dec
es
out
sbb
pop
popf
add
jecxz
ret
imul
dec
xor
test
mov
sub
cmp
dec
lock
pop
aas
loopne
jo
and
addb
dec
inc
es
push
icebp
or
mov
sub
push
add
mov
push
and
popf
or
mov
xchg
and
popf
pand
xchg
sbb
cli
nop
in
gs
iret
push
jb
dec
push
inc
and
mov
inc
mov
dec
aam
dec
xchg
lock
pop
xor
sbb
push
push
loope
mov
inc
dec
lds
cli
js
lods
adc
jp
aam
cmc
pop
mov
nop
pop
mov
jno
mov
mov
jb
cmp
bound
fwait
imul
xrelease
xchg
lahf
sbb
and
ret
pop
sub
adc
leave
fnsave
movsb
inc
inc
in
xor
or
sbb
insb
jbe
xor
xchg
pop
mov
dec
mov
inc
orl
mov
lahf
push
fdivrl
mov
pop
arpl
sub
call
hlt
icebp
sub
cld
xor
adcb
out
das
call
mull
mov
jno
xchg
sub
sbb
mov
iret
fldl
xlat
int
pop
inc
add
inc
inc
roll
das
jae
pusha
add
jb
mov
test
jmp
aam
xor
xchg
out
sbb
push
movsl
int3
mov
fwait
or
ret
dec
adc
sbb
aas
hlt
popf
pop
rolb
mov
mov
sub
sbb
mov
lea
or
adc
jge
push
mov
mov
and
cmpsl
cs
push
xor
inc
andb
inc
or
nop
jb
cmp
lcall
cmp
sub
out
sahf
idivl
sub
out
xchg
lret
sti
int3
int3
add
or
mov
popa
aad
inc
out
dec
jmp
cmp
xor
sbb
jnp
sarl
pop
sarl
in
pop
fldcw
insl
jno
hlt
jg
push
xor
sub
loopne
sub
roll
xorl
fildl
dec
push
add
inc
mov
sbb
adc
pushf
or
xchg
and
inc
mov
call
xchg
xchg
sbb
sub
add
ss
add
pop
js
int3
pop
push
push
call
stc
divb
push
out
dec
insl
jne
mov
push
add
incl
mov
xchg
cli
stc
in
inc
jecxz
pop
dec
pop
sbb
push
jle
daa
andb
aad
das
pop
mov
leave
pop
cmp
cmpsb
mov
mov
popa
pop
je
adc
mov
push
cli
push
cmpl
cmpsb
or
push
insb
dec
pop
rcrb
fsubrs
sbb
cmc
push
mov
cwtl
push
xchg
addl
and
imul
into
cmp
inc
rcrl
pop
rcl
enter
dec
mov
mov
push
popf
push
xchg
sbb
and
and
sahf
pop
mov
inc
test
inc
xchg
stc
push
push
test
pop
xor
mov
jbe
cltd
scas
negl
mov
pop
decl
mov
fidivl
pop
mov
movb
inc
ret
and
or
or
popf
pushf
cmp
sbb
lcall
dec
fcmovu
icebp
negl
lea
ret
inc
ljmp
or
or
add
ljmp
inc
inc
jl
push
inc
fstp
cmp
push
sub
aaa
cmp
mov
sbb
xlat
dec
adc
movsl
je
sub
leave
sbb
dec
pop
inc
test
pushf
push
fbstp
sub
add
push
roll
push
rclb
pop
cwtl
inc
or
inc
out
addb
or
pop
dec
insb
and
mov
and
sub
loop
imul
addl
cwtl
add
dec
and
dec
inc
inc
out
hlt
loopne
xor
mov
add
xchg
mov
enter
pop
xor
sbb
in
hlt
int3
push
dec
mov
roll
sub
and
adcl
inc
cmp
inc
mov
test
sbb
fcmovne
jecxz
push
jbe
je
andl
mov
call
inc
cmp
add
outsb
mov
scas
cmp
push
adc
sub
aad
iret
jmp
js
test
lods
mov
pop
icebp
pop
mov
fsubs
xchg
push
mov
mov
iret
push
pop
pushf
xor
mov
movsl
je
sbb
push
mov
out
fwait
sub
adcb
inc
add
into
cmp
mov
lods
es
cmpsl
movsb
cmp
mov
outsb
xchg
add
pusha
xchg
clc
movsb
cmpsb
icebp
fisttps
and
jno
enter
mov
jecxz
pop
popf
pushl
repnz
das
mov
xor
mov
fiadds
add
sub
js
inc
cmp
fwait
adc
or
dec
cmpl
imul
pusha
inc
jb
int3
pop
xchg
and
or
mov
clc
les
push
in
dec
push
icebp
lret
and
pushf
and
les
push
add
or
jno
dec
jl
xchg
mov
pop
push
push
aad
cmc
push
shll
outsb
xor
repnz
sub
xchg
inc
xchg
adc
call
pop
jno
arpl
mov
dec
sarl
mov
jmp
in
je
mov
stos
inc
movsl
add
sbb
mov
sbb
cmc
sti
cmp
cltd
jl
inc
movsl
gs
push
adc
inc
mov
push
inc
int
fnstsw
cli
movsb
outsl
fwait
sub
stc
pusha
jne
movb
repz
aas
pop
ret
xchg
test
adc
stos
dec
push
xorb
ficoml
mov
push
add
adc
shrl
das
call
dec
les
add
inc
fwait
pop
mov
mov
push
sub
inc
imull
mov
pop
dec
xchg
and
push
das
adc
xor
xchg
repnz
sbb
pop
xor
and
push
cwtl
aaa
cmp
ljmp
mov
ds
iret
popa
cmp
fstl
je
adcl
in
inc
add
cmpb
sahf
push
mov
enter
mov
inc
out
dec
mov
cwtl
push
insl
vpaddq
ret
mov
cmp
xor
or
pop
inc
xchg
dec
aam
mov
fsubp
pop
icebp
fidivrl
mov
stos
sarb
out
rcrl
nop
mov
pusha
xchg
inc
adc
loope
shr
iret
loopne
ret
movsl
push
mov
mov
sbb
rorl
push
fcoms
ljmp
lea
dec
cs
mov
push
pop
insb
mov
push
mov
sbb
jne
lds
mov
cmp
rorb
decl
aam
mov
mov
xchg
inc
movl
repnz
inc
dec
popa
xor
jo
sub
or
inc
lret
mov
lea
inc
inc
adc
cmp
adcb
ljmp
rorl
rcl
xchg
mov
xchg
into
mov
and
nop
cmp
inc
fstpt
insl
setl
or
push
mov
pop
push
out
fsub
xchg
dec
pop
shl
inc
movb
push
xchg
inc
and
or
ljmp
or
xor
divl
adc
push
dec
shll
jno
adc
shrl
js
loope
negb
clc
lret
fimull
popl
push
das
repz
pushf
or
lahf
push
inc
jge
lahf
out
in
sbb
jg
xor
mov
ret
sub
sahf
lods
mov
xlat
std
les
lcall
push
xlat
jge
jp
clc
pop
ficoms
mov
leave
lahf
jno
mov
arpl
pop
loopne
push
hlt
and
test
mov
xchg
push
je
cmp
sub
lcall
aas
xlat
addr16
mov
dec
push
xchg
add
lahf
call
inc
outsb
cmpsl
xor
jecxz
xor
in
mov
pop
pop
popa
xor
pop
push
dec
pop
or
cmp
sbb
das
rcrl
mov
push
in
insb
scas
das
sbb
leave
push
pop
push
es
jle
das
fimuls
xchg
inc
push
out
and
in
sbb
mov
gs
outsb
cmp
adc
push
inc
push
loop
and
dec
fadd
mov
push
inc
xchg
fcmovbe
jo
push
add
js
push
inc
mov
data16
inc
xorl
xlat
les
bound
mov
fsubl
and
inc
int
push
dec
push
pop
and
aaa
or
fsubrl
pop
jl
push
dec
stc
pop
inc
inc
mov
sbb
fsubrp
lret
sbb
subl
fcompl
imul
cmpsb
push
mov
ds
inc
gs
movsb
sbb
imulb
inc
andb
or
dec
dec
inc
rcrl
and
push
inc
les
cmp
inc
test
adc
fdivl
cmp
and
movsb
aam
dec
pop
pushf
sbb
cmpsl
js
ret
int3
js
pop
or
daa
pushf
popf
sbb
dec
cmpsl
in
xchg
js
dec
sub
fisubrs
addl
push
sub
test
int
inc
sbb
add
jl
fldcw
js
andl
or
orb
cwtl
pop
or
fldl
sahf
aam
sub
mov
push
or
cltd
jae
cmp
sub
sbb
xor
outsb
mov
inc
js
in
insl
daa
rorl
and
paddq
dec
inc
fcomps
fldl
add
lret
pop
call
in
fmul
push
push
jle
pop
push
push
clc
cs
ret
pop
inc
pop
test
sbb
popf
or
dec
cmpsb
sti
jmp
inc
pop
loope
push
leave
push
xor
jbe
push
sbb
mov
insl
movsb
xchg
xor
mov
out
lds
rclb
cmpsl
adc
arpl
or
lods
jecxz
pop
inc
imul
mov
sbbl
xchg
lods
ljmp
in
pop
adcb
add
dec
loope
lods
push
cmp
in
bound
xchg
push
das
jecxz,pn
jmp
gs
scas
cld
mov
and
adc
jmp
add
cmp
inc
mov
dec
nop
or
fs
jae
jb
mov
push
mov
mov
scas
leave
pop
push
mov
and
push
insl
les
fst
pop
push
inc
jae
dec
xor
outsb
shl
adc
or
mov
fistl
pusha
pop
pop
inc
xor
ja
push
lods
les
jmp
xchg
adc
mov
or
rorl
adc
pop
sbb
hlt
int3
addl
stos
push
mov
das
and
inc
fdivs
ja
dec
sub
out
push
adc
xlat
pop
push
push
ds
imul
mov
int
sub
movsl
jmp
inc
pop
xor
inc
jae
dec
mov
rcr
outsl
inc
mov
push
and
clc
dec
inc
mov
inc
dec
loopne
pop
cmp
fsubp
xor
mov
insb
xchg
xor
iret
cmp
ficoml
pop
frstor
fdivp
je
mov
mov
pushl
xor
mov
xchg
push
add
mov
cmp
mov
push
sbb
sbbl
sti
add
and
sbb
add
pop
in
subb
cmp
jo
jge
xchg
call
xor
out
pop
jb
data16
sbb
hlt
push
sbb
sbb
xchg
mov
ss
fldenv
mov
jl
imul
fdiv
out
in
sub
inc
adc
pop
mov
es
dec
stos
adc
or
jno
movsb
mov
or
xchg
and
test
cltd
lods
fiadds
adcb
inc
aaa
jnp
dec
pop
pop
push
cmp
inc
loopne
lret
push
in
inc
les
lds
in
xlat
xlat
mov
pushf
lds
adc
push
dec
sbbb
push
push
out
loope
pop
idivb
fsubrp
inc
sarb
mov
push
mov
fsubs
add
dec
mov
nop
push
cmpsl
fisubrs
dec
inc
xchg
xor
sti
and
fstpl
mov
insl
mov
jo
leave
enter
inc
sub
pop
sub
lea
or
int3
inc
leave
inc
cmovge
or
add
rorl
les
or
in
push
dec
jo
insb
pop
imul
sub
push
dec
mov
sbb
das
icebp
jl
inc
mov
or
adc
notb
outsl
test
add
hlt
addr16
push
xchg
adc
push
call
inc
cmp
imul
cmpsb
inc
push
xchg
sbb
mov
movsb
movsb
push
lods
popa
add
jae
rolb
sahf
inc
mov
push
dec
jne
fmull
xchg
dec
shll
push
pop
and
sti
into
fs
mov
cwtl
sbb
lock
push
cmp
lds
call
adc
push
ret
inc
bound
jnp
adc
jmp
fsubs
shll
mov
xlat
cmp
lret
xor
fs
xchg
dec
call
jmp
lcall
ja
dec
push
mov
xor
test
inc
jnp
pop
fwait
mov
enter
rorb
jmp
adc
xor
pop
lock
sbb
lds
or
ljmp
movsl
push
inc
jge
mov
and
pop
add
in
xor
sub
lock
cmpsl
xchg
adc
mov
or
xor
nop
push
xchg
in
out
pop
sbb
or
push
push
sbb
push
movsb
inc
pop
cmc
sti
fsubrl
add
push
mov
xchg
add
mov
jl
popf
mov
pop
insl
jecxz
mov
mov
fstpl
push
push
inc
cmc
or
jge
sub
bound
in
lds
idivb
push
push
sbb
pushf
jae
das
mov
adc
inc
push
in
jae
cmp
pop
fstpt
and
xor
cmp
adc
leave
dec
in
andl
or
mov
ss
and
sbb
or
pushf
add
sbb
sub
call
jecxz
jb
mov
in
cmp
jae
pop
adc
add
jno
pop
les
lahf
mov
loope
xchg
ja
mov
sti
cmp
jb
shr
ss
int3
gs
cmp
or
sub
add
mov
adc
js
pop
ret
jno
repz
push
cmp
sbb
push
adc
shll
inc
fldcw
hlt
aas
sub
push
pop
data16
mov
das
mov
lar
sub
testl
cmp
add
outsb
divb
mov
jo
jne
cld
es
push
imul
pushf
cltd
jl
fisubrs
lcall
dec
mov
inc
mov
pop
jno
mov
pop
add
ficomps
pop
push
xor
mov
int
lahf
jle
out
sub
sbb
ret
sbb
fistpll
scas
bound
jo
in
pop
jmp
push
cmpsb
shrb
fisttpll
pop
ffree
mov
pusha
mov
das
insb
pop
ror
fs
outsb
xchg
xor
cmp
mov
dec
sub
xor
and
jl
xor
inc
sub
mov
sbb
ds
jo
dec
nopl
or
and
xchg
shl
add
dec
sub
xchg
sbb
sbb
mov
push
out
movsb
pop
rcll
ds
int3
and
xchg
sub
xor
fcomps
fsubrl
sbb
and
mov
sub
or
xor
sbb
xchg
icebp
xchg
enter
fwait
call
and
nop
cmp
xchg
xchg
imul
pop
inc
subb
cmpb
in
push
adc
or
loop
jp
dec
ds
pop
fwait
xor
sbb
stos
jmp
inc
dec
js
and
mov
inc
add
jmp
adc
std
aas
std
mov
out
cld
inc
cmp
ljmp
or
and
or
iret
add
jne
sbb
hlt
dec
push
and
push
inc
ret
mov
fisubs
xchg
lock
out
sti
popa
and
popf
out
xchg
dec
dec
add
repz
dec
inc
fucom
std
pop
mov
test
xchg
adc
insl
fbstp
mov
push
push
shl
mov
jp
call
shlb
aas
jbe
pop
fwait
icebp
dec
sub
or
push
or
and
adc
pop
repnz
lods
fisttpll
pop
cmpsl
mov
outsl
das
inc
cmc
cld
mov
pushf
add
ja
shrb
dec
aad
mov
inc
aam
jecxz
mov
mov
mov
addl
add
push
insl
push
inc
ret
xor
andps
ja
push
jle
mov
sub
into
scas
popa
in
pop
dec
mov
push
cmp
pop
pop
mov
sahf
in
movsl
or
jle
in
mov
leave
outsb
pop
inc
repz
and
jbe
inc
cmp
call
rcll
jl
push
jp
imul
addr16
jp
mov
pop
xchg
sbb
xor
push
mov
imul
mov
fbld
adc
ds
adc
ja
push
mov
insb
adc
or
cmp
sbb
sbb
xchg
je
mov
mov
aam
cmp
in
mov
popf
loop
jo
dec
dec
and
lea
cmp
ret
lods
outsb
xor
aaa
rol
push
sub
and
pop
mov
sbb
fcompl
jecxz
shrb
in
data16
jae
rcll
push
pop
cmp
loop
aam
sar
lods
repnz
int
add
pop
xchg
mov
or
inc
jge
in
daa
sub
pop
faddl
cs
iret
pop
in
mov
imul
jl
sbb
mov
cs
stos
cld
lret
shrb
inc
pop
inc
insb
insl
lock
push
push
out
cmp
xchg
sbb
mov
push
mov
xor
inc
fs
ret
les
jp
loope
mov
push
pop
push
mov
sarb
test
add
insl
popa
push
dec
dec
adc
repz
jl
loop
popf
shrb
cmp
mov
je
pop
push
jmp
rorl
inc
push
filds
sub
cmp
sbb
mull
insb
loopne
movb
push
cmp
test
sahf
sbb
repnz
aad
ret
in
lods
xor
sub
and
push
lahf
mov
gs
sub
pop
cld
leave
sbb
loope
rcrl
xchg
cmpsl
and
mov
cmp
mov
insl
push
xor
insl
ss
sub
adc
dec
mov
cs
insl
mov
sti
insb
xchg
cmp
jbe
pop
mov
and
mov
add
xor
dec
es
jecxz
imul
xor
jne
and
push
sub
mov
sbb
jno
sbb
mov
jbe
imul
jle,pt
push
sbb
mov
sub
push
sub
cmp
test
sub
subb
imul
adc
dec
inc
or
inc
jb
add
or
inc
jb
rcl
test
push
lods
or
mov
outsb
xchg
adc
and
adc
push
pop
mov
and
gs
jnp
ret
sahf
mov
or
mov
sbb
cwtl
push
jp
icebp
ficoml
and
call
fildl
and
daa
mov
lahf
and
jge
and
bound
ja
movsb
repz
js
xor
loope
push
lock
jl
in
lcall
xchg
dec
push
dec
sarl
mov
xor
xor
cli
sub
jns
push
adc
mov
jbe
lds
or
jmp
mov
sahf
adc
pop
push
ja
int3
bound
cmpsl
pop
insl
hlt
add
cs
push
arpl
jns
repz
cmp
adc
loop
test
pop
inc
sahf
push
enter
cmpsl
jl,pt
aad
mov
enter
movaps
movsl
add
pop
aad
mov
sbb
movsb
push
scas
sti
stos
and
jg
jne
push
test
adc
sbb
push
pusha
scas
and
adc
loope
fs
sub
cmp
jne
or
jmp
and
fimuls
sub
repz
in
js
mov
fiadds
scas
jl
and
or
mov
jp
cmp
repz
mov
call
add
mov
out
jae
cmc
cmp
imul
jmp
and
mov
dec
cmp
push
out
inc
jg
or
mov
push
enter
gs
lds
jecxz
push
mov
je
lret
call
dec
bound
shl
test
scas
insl
movsb
dec
or
xor
or
pop
popa
sbb
int3
and
aas
or
sbb
fs
pop
push
stos
xor
mov
sub
and
push
cmp
repz
inc
xchg
and
dec
push
push
fsubrs
je
jg
sti
lret
sub
mov
and
xlat
or
push
adc
inc
sbb
push
das
sbb
add
movsl
or
out
iret
out
sbb
sbb
ret
jns
adc
mov
push
dec
cmpsb
lret
mov
inc
jae
movsl
xor
sub
es
sti
fwait
add
push
std
insb
sbb
ja
in
sbb
lret
cmpsl
rcrb
cmp
adc
and
fwait
push
insb
lea
clc
inc
jmp
outsl
mov
in
xchg
or
fnstsw
pop
imul
mov
sub
add
dec
pop
add
test
pop
repz
pop
cmp
jb
call
add
cmp
test
out
jb
cli
push
push
or
add
pminsw
xlat
jmp
xchg
je
xchg
cs
inc
ficoms
pop
fadds
sbb
les
je
cmp
inc
fsubrs
dec
std
and
adc
test
pusha
dec
sahf
jae
lret
addr16
insb
inc
cltd
push
pmaddwd
jbe
rorl
lods
jns
and
cs
inc
sbb
icebp
dec
shr
mov
and
test
dec
int
lods
inc
push
dec
sub
dec
jbe
addr16
lds
in
rcrl
or
aaa
rorl
push
xor
xorb
jae
dec
inc
loop
pop
inc
rcll
cmp
in
jb
or
jae
xor
fmull
daa
dec
pop
mov
mov
dec
cmp
std
mov
dec
jp
mov
push
in
xchg
or
add
or
xor
inc
cmp
or
cmp
adc
sbb
cwtl
cmp
inc
gs
cwtl
xchg
fildll
add
or
sub
push
cmp
xchg
repnz
stos
adc
setno
xor
pop
int3
inc
in
dec
jbe
adc
push
cwtl
js
ja
xchg
cmp
push
cmp
arpl
in
out
mov
cmp
int
in
and
jge
mov
je
or
jno
subb
cmpb
mov
cmp
aaa
popf
les
sbb
out
outsb
insl
inc
std
pop
dec
fisttps
popf
cmpb
std
xchg
or
repnz
sub
sbb
cwtl
shlb
je
scas
aam
cmpsb
jb
call
sbb
cmpsl
mov
or
push
stos
mov
mov
pop
dec
loop
jl
mov
mov
repnz
inc
sbb
ljmp
lahf
pop
cli
mov
push
cmc
into
adc
pop
cmp
and
lcall
cmp
pop
or
sub
je
add
insl
mov
mov
cli
fld
movsl
fldenv
xchg
aas
movsl
aas
fdivl
fs
stos
or
lcall
aas
and
neg
das
popf
add
jmp
xor
popa
lods
mov
insl
push
loop
jbe
cli
aaa
out
mov
xchg
pop
cs
xor
lahf
mov
iret
cmp
jae
divl
adc
aam
popa
fsubr
push
fmull
inc
lret
test
adc
ror
call
xor
inc
xor
dec
mov
cmp
jg
sbbl
xchg
jge
cld
xchg
rcl
or
lea
rcl
scas
testb
pop
dec
subb
cmp
out
or
push
push
out
pop
jo
aas
push
sarb
and
dec
xor
rorb
cmp
add
fnstsw
hlt
lods
cltd
js
out
dec
in
push
push
push
inc
into
pop
ficompl
arpl
aas
mov
sbb
arpl
xchg
pusha
xor
mov
jp
mov
sub
pop
jns
cmpsl
push
pop
mov
sbb
pushf
or
test
add
mov
or
enter
pop
or
arpl
lcall
test
fistpll
adc
ret
add
dec
faddl
out
in
test
push
sti
lock
dec
mov
cli
repz
sub
push
xchg
sti
addr16
fwait
insb
mov
inc
xchg
dec
lods
push
and
cmp
loope
cmp
mov
xor
ja
bound
add
stos
mov
insl
pop
add
je
cmp
into
or
movsb
add
push
jmp
pop
test
xchg
in
add
sbb
outsl
je
std
pop
loop
lds
push
add
outsb
stos
nop
dec
inc
pop
pop
aas
add
hlt
inc
mov
imulb
dec
inc
xor
push
scas
sbb
enter
mov
insb
idivl
clc
pop
cmpsb
std
js
mov
bound
gs
inc
jnp
inc
sbb
enter
push
dec
lret
movsb
clc
sbbb
push
xchg
test
ret
jbe
sub
push
xchg
sbb
inc
cwtl
push
jbe
in
or
cmp
pop
insb
les
sbb
sub
jle
mov
sub
cmc
dec
mov
das
jno
pop
push
mov
dec
jns
lea
pop
lahf
pop
fsubrs
decl
push
xor
sub
movsl
andb
mov
call
inc
sbb
cmpsl
fistps
notb
loop
jl
out
mov
inc
jae
mov
jb
mov
cmpsl
int
shlb
sub
push
gs
add
mov
xor
addr16
inc
rorl
ficomps
mov
filds
push
int
adc
in
fincstp
nop
gs
rolb
xchg
mov
sbb
fs
sbb
and
adc
dec
sbb
jb
inc
mov
pusha
xor
push
movsb
or
sbb
rcll
inc
or
sti
lods
mov
jno
xor
pop
cs
movsl
popa
cs
jae
mov
testb
nop
in
sahf
loope
xor
mov
insb
testl
pop
fcomps
ret
sbb
mov
sbb
int3
mov
lcall
pop
pop
dec
stos
daa
lcall
movsl
setle
imul
fstps
jge
push
ret
or
sahf
sub
mov
jns
test
mov
push
movsl
fsubs
adc
push
adc
push
cmpsl
adc
stos
ljmpw
adc
jp
or
rolb
cmp
sub
cltd
inc
lcall
xor
xor
pushf
int3
xor
imul
dec
xchg
ss
test
or
xchg
ret
in
dec
xor
aad
ss
pop
andl
dec
dec
mov
cmp
jg
lahf
movsb
sbb
leave
sbb
jno
pop
push
inc
sti
shl
mov
movsl
push
imul
mov
stos
shl
xchg
fsts
push
pinsrw
iret
movsb
stos
repz
rclb
cmp
pop
dec
scas
xchg
aam
cli
push
outsb
stos
in
out
std
lods
cmp
loop
jne
dec
jb
mov
inc
movsl
adc
or
mov
push
xchg
sbb
pop
rclb
aad
inc
push
cli
lock
or
adc
xchg
hlt
cmp
or
sarl
dec
out
insb
insb
ljmp
pop
int
in
pop
lret
push
push
in
imul
sti
fucomp
les
push
mov
pop
daa
cli
clc
xchg
mov
or
call
pop
push
and
add
fcompl
leave
int
fwait
addr16
push
mov
ljmp
dec
cli
cmp
dec
cli
jge
or
xchg
test
cmp
shrb
inc
dec
in
insb
js
add
mov
les
sub
push
imul
mov
sub
add
sbb
loop
push
leave
lret
int3
mov
adc
push
insb
cld
sbb
in
dec
out
sar
inc
repnz
cwtl
mov
fcom
push
cmp
xchg
scas
adc
addr16
pushf
movsl
push
not
mov
mov
pop
mov
outsb
xchg
or
je
cmp
fidivrs
bound
leave
icebp
pop
int
dec
mov
xor
ljmp
pop
sub
testb
daa
jl
push
adc
movsb
push
dec
ljmp
and
pop
cmp
add
inc
shrb
ret
lahf
mov
mov
jle
sub
mov
lock
sbb
scas
les
out
into
out
pop
in
mov
add
inc
out
jnp
adc
inc
inc
int
add
add
scas
js
adc
js
popf
xor
cmp
adc
fisttpl
mov
xor
les
and
or
push
stc
out
mov
lcall
loopne
xchg
outsb
aad
dec
in
dec
inc
lock
int
mov
jmp
enter
pop
jno
dec
ficomps
sbb
in
add
cmp
jns
inc
sbb
mov
pop
cli
push
cmp
push
cmpb
jmp
dec
cmp
dec
pop
adc
lods
int3
sbb
loopne
iret
push
les
pop
fmull
pop
jns
stc
inc
fwait
jmp
fdivrs
aam
jge
out
test
mov
or
das
xchg
fadd
cmp
pop
mov
add
lret
xor
out
inc
jb
or
test
sbb
js
mulb
pop
aam
pop
hlt
push
sahf
add
sbb
or
fcompl
cs
xor
sbb
inc
fs
xor
xchg
gs
das
jne
out
bound
jp
xor
mov
in
jbe
add
dec
in
out
xor
cmovs
inc
faddl
popf
clc
daa
xchg
arpl
outsb
sbb
outsb
inc
mov
out
adc
repnz
mov
push
pop
mov
sub
mov
in
mov
add
test
bound
enter
rcll
jg
cs
loope
mov
aaa
xor
test
push
jb
mov
pop
in
jae
mov
push
dec
inc
imul
in
adc
pop
ds
movsb
lods
cmp
aas
in
stos
inc
add
mov
sub
int
das
fisttpl
pushf
std
sub
xor
sbb
lahf
mov
repnz
pop
jbe
dec
xor
dec
or
sahf
sbb
icebp
sbb
out
jge
and
gs
les
push
stc
mov
cmp
mov
lock
lods
sbb
jmp
jns
pusha
sub
push
mov
sbb
scas
push
daa
in
aad
jmp
or
test
pop
ds
std
ror
rcrl
push
insl
xor
and
adc
fsubr
cld
out
call
mov
aas
jg
fisubs
mov
shll
addr16
jne
sub
outsl
xchg
inc
stos
adc
adc
sahf
daa
loop
cmp
lock
cmp
xchg
dec
jmp
jmp
mov
das
subb
sbb
int
xchg
add
or
jp
adc
fidivrs
push
push
jnp
push
and
mov
in
cmp
arpl
jae
mov
cli
inc
pop
aad
lds
xchg
fwait
push
outsb
mov
in
xchg
cs
push
xorl
sbb
or
xchg
inc
stos
loop
es
sub
mov
mov
aaa
xchg
icebp
pop
adcl
mov
pop
sbbl
push
andl
or
add
aad
int3
and
inc
test
xchg
sub
pop
push
aaa
outsb
sub
sbb
pop
push
lahf
mov
or
sbb
or
jl
lret
jns
inc
jecxz
mov
cmp
pop
cwtl
shlb
addr16
cmp
adc
sbb
bswap
outsl
push
je
sub
cmp
fidivrl
loope
jmp
mov
cmc
mov
enter
mov
inc
cmp
stos
test
inc
jno
pop
xchg
push
stc
imul
mov
sbb
pushf
test
in
int
xor
andb
dec
push
into
push
jnp
sar
mov
xchg
ffree
or
mov
insl
xlat
dec
mov
std
pop
cltd
or
fidivs
jb
out
mov
adc
push
push
add
mov
pop
outsb
test
push
inc
xor
rcrb
mov
gs
mov
push
lock
xchg
jno
sbb
mov
out
sbb
pop
jns
ds
lret
or
fmull
lcall
push
cmp
pop
sbb
call
add
mov
add
fwait
subl
xor
test
mov
std
dec
aas
push
mov
pop
add
dec
fisubl
test
dec
jl
mov
push
pop
pop
mov
sahf
cmp
cmp
inc
add
lds
inc
adc
shrb
scas
pop
pop
repz
add
pop
fsubs
ljmp
pop
lods
xchg
clc
and
mov
push
sbb
loop
sub
xchg
xchg
pop
iret
inc
cwtl
dec
xchg
outsl
mov
sub
adc
dec
imul
pop
mov
lret
test
ret
insl
popf
xchg
lock
insb
mov
pop
xchg
imul
iret
push
add
test
test
add
mov
out
dec
sub
add
idivl
popf
and
sub
xor
adc
pop
and
je
jp
pop
stc
mov
xchg
sub
jmp
or
ret
jne
mov
pop
or
data16
negl
cmp
adc
aas
es
pusha
sub
jnp
stc
clc
sbb
inc
sbb
in
iret
cltd
adc
add
scas
rolb
jnp
movsl
jge
cmovns
jmp
jno
outsl
cld
mov
dec
ret
and
mov
jo
push
xchg
dec
jmp
xchg
jb
mov
in
and
rcll
mov
test
int3
jl
das
inc
ret
jle
rcll
mov
sbb
xor
loope
aam
loopne
xlat
mov
inc
call
mov
aas
outsb
push
inc
jle
sbb
cltd
jnp
mov
adc
dec
sbb
adc
and
mov
push
out
jge
push
jo
pop
adc
pop
minps
inc
push
mov
inc
pop
pop
outsl
int3
push
sub
mov
or
xchg
mov
or
shrb
fstpt
xor
rclb
out
jo
or
sub
mov
xor
adc
mov
xchg
push
adc
aas
xchg
cmc
imul
call
shl
push
mov
mov
fistps
es
add
adcb
outsl
and
pop
pop
scas
xchg
jge
test
aad
mov
push
out
push
pop
incl
sub
ret
call
icebp
push
jo
inc
pop
out
push
int3
lods
mov
out
xchg
jmp
punpcklwd
sbb
add
push
and
fs
inc
sub
pop
pop
jnp
mov
pop
sbb
inc
xor
leave
inc
xchg
bound
jl
push
insl
popa
push
das
lock
les
icebp
call
jle
sbb
inc
mov
adc
push
push
sbbl
js
xor
push
rorb
lods
xchg
lcall
mov
xchg
addr16
jmp
mov
jbe
sbb
sub
adc
mov
push
jo
jne
add
icebp
push
push
sbb
popa
sub
fsubrs
xchg
repz
pop
arpl
xlat
push
enter
shlb
jg
int
out
sub
shr
rcrl
psubb
imul
add
imul
jnp
pusha
sub
enter
mov
mov
inc
cli
sbb
ljmp
fldt
icebp
dec
sub
leave
mov
adc
adc
adc
and
jb
fsubrs
mov
cs
daa
stos
cs
sarb
outsb
adc
int3
ds
arpl
mov
test
xchg
mov
mov
test
ss
adc
mov
imul
daa
push
adc
or
cmp
mov
mov
jle
mov
or
mov
dec
and
pop
cmp
adc
cmpsl
or
lret
cmp
mov
sub
enter
lods
sub
int
ficoml
add
push
test
and
out
out
hlt
sub
adc
popa
fwait
call
mov
fwait
mov
jmp
or
movsb
xchg
sbb
loope
ror
sub
fs
pop
jge
lret
fsubs
sub
test
inc
call
cs
adc
lahf
fmul
sub
insl
leave
pop
mov
out
ds
or
loope
aam
leave
fisttpl
sub
inc
xchg
xchg
faddp
subb
ret
xor
leave
mov
push
sub
and
push
jle
mov
mov
insl
test
sub
xor
jbe
push
inc
adc
mov
adc
jnp
int
mov
insb
pushf
sbbl
dec
lea
int
jae
sub
mov
mov
add
pop
jnp
push
xchg
and
mov
sti
sub
ds
mov
mov
jle
xchg
mov
outsl
cmpsb
push
idiv
or
aam
mov
adc
jb
inc
pop
fbstp
pop
add
pusha
mov
les
inc
jno
pop
inc
sarb
jmp
pop
test
in
hlt
fcmove
inc
andl
lock
scas
jno
sub
stc
or
mov
sbb
push
mov
daa
adc
or
pop
addr16
add
lock
mov
jb
into
imul
sub
mov
pusha
and
push
push
or
ja
popf
out
sub
ds
divb
shlb
daa
cld
or
fidivrs
dec
insl
sub
mov
cmc
sub
iret
and
sub
dec
imul
outsb
push
es
xchg
dec
adc
mov
xchg
mov
jp
or
cs
push
mov
mov
cmp
leave
iret
jae
shrl
sbb
pop
sub
cmp
xor
mov
cli
cmp
in
imul
out
subl
in
mov
adc
mov
daa
and
mov
push
push
mov
mov
int
or
ficoms
sub
push
jno
or
adc
xchg
subb
ret
lods
orl
ja
jle
push
into
rorb
outsl
aas
fistl
mov
out
jmp
inc
add
pop
or
shlb
loope
aam
loopne
xlat
mov
inc
and
aas
or
pop
pop
pop
movsb
jo
sarl
or
mov
icebp
jl
mov
pusha
push
insl
scas
ja
ret
jp
subl
sbb
cmc
nop
es
adc
mov
in
pop
in
aas
in
imul
out
imulb
addr16
rclb
pop
scas
sub
sub
mov
enter
ja
cmp
cli
jo
mov
or
push
cmp
pop
cmp
xchg
jp
movsl
into
add
rclb
cmp
jl
mov
popa
jbe
push
push
outsb
cwtl
adc
nop
enter
arpl
inc
jge
xor
lea
insl
push
pop
lcall
push
rcl
xchg
adc
mov
push
cmp
sub
jbe
dec
inc
movsb
pop
outsb
fbld
dec
in
test
idivb
loope
xchg
pop
and
push
adc
jo
daa
sub
ficoms
and
pop
ret
fistpll
ds
and
mov
cmp
push
cmp
sub
dec
mov
mov
push
sub
dec
call
divl
push
push
or
mov
add
inc
pop
jp
mov
or
fs
mov
pop
xlat
ds
and
sub
ret
and
pushf
sahf
outsb
pop
xchg
shlb
adc
daa
and
sub
dec
inc
roll
inc
nopl
es
xor
and
nop
push
mov
xor
xlat
and
lea
mov
cmpsl
loope
xchg
pop
adc
push
adc
jge
daa
pop
push
fiadds
and
les
and
cmpsl
and
and
iret
and
pop
inc
aas
and
dec
cmpsl
out
mov
push
pop
ret
adc
adc
xor
jg
push
jbe
mov
pusha
jle
sbb
jnp
jns
ljmp
adc
xor
es
sub
add
mov
and
les
lock
pop
mov
mov
sarw
sahf
dec
sbb
jl
cmp
pop
lret
cmp
push
jl
sbb
in
sub
xchg
or
or
push
inc
inc
mov
jge
ret
xor
dec
popf
adc
adc
outsb
lock
jge
cmp
add
out
fsubs
inc
or
mov
int3
clc
cmp
fsubrs
xor
mov
jno
leave
inc
cmp
dec
incb
pop
cmp
repz
cmp
lea
add
les
scas
fwait
jge
outsl
push
jbe
push
stos
sbb
or
sub
ljmp
out
xchg
pusha
cmp
xchg
jge
mov
xor
sub
jp
out
or
pop
insl
clc
inc
mov
jge
cli
mov
pop
repnz
loopne
dec
push
cmp
sahf
imul
shll
daa
sub
rorb
shll
push
ds
pop
pop
aaa
scas
leave
xlat
jl
lret
mov
jae
jge
and
or
pop
cmp
cltd
sbb
arpl
mov
stos
inc
roll
or
adc
or
pop
outsl
mov
add
cmp
daa
mov
push
out
int3
stc
pop
push
fdivrl
mov
adc
scas
ret
mov
jmp
fs
movsb
pop
cmp
scas
cmpb
push
in
cmp
jge
lret
fcoms
adc
pop
fdivrs
inc
push
outsl
mov
sbb
pop
fdivrs
mov
js
mov
movsb
adc
pop
outsl
rcll
int3
push
addb
ds
ja
inc
cmp
cmp
mov
lret
jae
enter
sbb
jae
adc
pop
cmp
mov
pop
shr
cltd
int
mov
test
test
push
mov
cmp
addb
stos
push
aaa
into
and
inc
jno
lret
jo
mov
and
lds
gs
cmpsl
inc
out
mov
fs
inc
cld
jno
push
push
sbb
sar
out
les
aas
fsubs
cld
mov
mov
push
imul
sub
clc
pusha
cmp
and
leave
xchg
mov
pop
sub
push
fnstsw
adc
pop
add
jle
push
cmp
int
inc
flds
mov
mov
lret
pop
insl
int
jns
xchg
inc
data16
aad
pop
dec
inc
aam
clc
sub
pop
sbb
mov
jmp
clc
popa
jmp
pop
push
jns
leave
jae
in
pop
rcrb
cmp
fsubs
in
push
lret
outsb
shll
jl
call
dec
rcl
popa
mov
cmp
loop
adc
jmp
dec
push
push
jae
mov
es
add
rolb
sub
jae
mov
push
sub
rolb
mov
xor
bswap
in
in
mov
repnz
or
or
push
and
add
test
pop
test
inc
xor
push
adc
stos
orb
cmpsl
jl
jae
lds
adc
fistl
mov
out
cli
ret
mov
in
iret
mov
xor
xchg
push
call
push
shlb
loope
push
sbb
lcall
movsl
adc
adc
les
ror
mov
call
out
push
or
repz
mov
pop
rclb
test
repz
add
mov
les
inc
push
test
pop
push
xchg
push
outsl
pop
jp
in
lods
adc
cmpsb
hlt
add
cwtl
sbb
aam
addr16
dec
push
nop
les
pinsrw
add
cs
rclb
sarb
loopne
xchg
pop
je
in
and
xchg
test
jnp
outsl
dec
jnp
sbb
aam
filds
sub
xchg
movsl
and
or
iret
adc
test
fwait
shrb
jg
pop
xor
sbb
and
jno
clc
add
jecxz
mov
rol
pop
cmp
and
mov
lds
jl
sbb
xchg
into
sub
es
mov
cmp
dec
into
or
jge
call
sbb
inc
movl
jge
popl
icebp
or
push
mov
pop
insl
mov
mov
and
das
or
adc
xchg
or
popf
inc
inc
sub
decb
push
je
adc
sahf
inc
lods
addb
cmp
ljmp
inc
add
or
mov
dec
out
dec
push
adc
jo
shlb
movsb
dec
adc
out
fstl
cmpxchg
pusha
push
nop
jecxz
lcall
rorl
and
filds
sbb
imul
shl
mov
cmp
sub
xchg
mov
pop
mov
sub
and
pop
add
in
seto
scas
pop
pop
aad
test
cwtl
and
xchg
repnz
mov
leave
fs
sub
pop
inc
sbb
push
xchg
dec
push
or
out
dec
leave
adc
cld
js
gs
inc
and
sub
fsts
dec
lock
test
fdivs
ret
adc
add
pop
movsb
mov
dec
jo
nop
push
dec
repnz
sub
xor
lds
sbb
stc
sbb
mov
lock
sub
hlt
das
addl
push
test
sbb
xchg
xchg
push
fldcw
test
add
and
shll
loopne
cmp
mov
jecxz
and
movsl
pop
inc
pop
lock
dec
clc
sbb
inc
pop
int3
pop
mov
pop
iret
pop
mov
inc
stc
sbb
outsl
pop
inc
aam
jbe
xor
mov
jbe
movsl
repz
sbb
enter
add
in
and
cmpb
add
push
add
pushw
xchg
jbe
lds
shrb
rcr
jo
loopne
pusha
mov
insb
pushf
cwtl
fcompp
lods
shr
dec
mov
idivb
sub
dec
pop
fmuls
fstps
or
clc
js
call
inc
sbb
pop
and
add
pushf
rcrl
or
xor
nop
pop
pushf
push
cld
inc
pop
outsl
xor
cmp
clc
scas
pop
fwait
cld
nop
sub
outsl
mov
aaa
int3
pop
mov
pop
and
push
adc
call
xchg
insl
or
xchg
push
cld
dec
pop
lock
adc
push
xor
mov
pop
subb
xchg
mov
and
clc
xchg
js
call
push
add
pushw
xchg
jbe
lds
shrb
stos
or
sar
mov
fldcw
in
lahf
mov
sahf
xchg
cmp
je
push
dec
repnz
sub
cmp
adc
notb
lea
sbb
cwtl
fists
push
lods
shr
inc
xchg
fisubs
bound
rolb
push
add
xlat
cmc
push
inc
rorl
inc
inc
fmull
inc
inc
xor
pop
push
ret
int3
lds
pop
push
leave
sbb
push
int3
sbb
sbb
lcall
mov
cwtl
sbb
add
fs
mov
cmpsb
testb
and
cmp
mov
push
sub
rclb
jg
mov
insb
ret
push
fbld
mov
icebp
lods
mov
xor
sub
stos
inc
sbb
inc
inc
bound
adc
push
cmp
outsb
xorb
xor
and
mov
xchg
loopne
mov
mov
sar
movsb
test
add
add
pop
in
or
rcrl
es
push
pop
and
add
movsb
cltd
insb
sarl
sets
push
add
gs
jmp
mov
push
xor
jl
mov
shlb
inc
push
push
xchg
adc
loopne
jo
ljmp
test
addr16
dec
outsl
mov
clc
icebp
and
rcr
push
inc
jmp
rolb
inc
pop
add
rcr
inc
mov
out
js
pop
push
xor
call
add
mov
jne
mov
fmuls
ds
mov
es
cmp
std
rcrb
std
cli
mov
jnp
push
cmp
js
sbb
js
ficoms
test
xor
cmp
sub
adc
ss
mov
sbb
popl
hlt
movsl
fldcw
pop
push
lea
lret
ret
push
sub
push
mov
repnz
push
xor
imul
dec
add
add
les
pushf
pop
pushf
mov
addr16
add
es
jb
lock
js
add
in
dec
cmovl
mov
mov
and
xchg
rorb
sub
xchg
jecxz
dec
jecxz
dec
add
lods
xorl
mov
add
pop
pop
or
inc
test
mov
sbb
int
rorb
pushf
sub
lods
sub
push
pop
rolb
push
clc
clc
js
pop
xlat
cmp
adc
jmp
cmc
dec
stos
and
adc
lret
hlt
shr
ljmp
inc
scas
or
cmp
xchg
shll
pop
shlb
xchg
dec
push
adc
xor
dec
es
jl
sbb
aad
das
pand
push
inc
std
dec
add
xchg
push
inc
mov
mov
clc
mov
pop
dec
sbb
xchg
inc
out
push
stos
xor
cmp
rorb
xor
xchg
dec
ror
xchg
mov
xchg
cmc
mov
mov
das
adc
data16
xor
jmp
je
hlt
xchg
add
popa
repz
push
hlt
dec
jbe
dec
stc
out
dec
jle
rorb
addr16
add
fimull
out
lcall
cmpsb
jmp
das
in
mov
jge
mov
sti
sub
sarb
jle
mov
or
imul
dec
dec
test
mov
bound
arpl
dec
das
rorl
rcrb
xchg
pop
pusha
cli
sub
dec
and
shlb
fistpll
lock
out
mov
pop
mov
dec
neg
les
xor
push
cli
rorb
rol
add
sti
aas
fidivl
add
fwait
lret
sub
mov
lret
pop
repnz
test
dec
xchg
mov
stos
mov
ss
or
sbb
dec
xor
pop
outsl
out
sub
mov
dec
mov
cmpsb
cmpsb
dec
add
lahf
sbb
push
mov
mov
jne
and
jmp
push
pop
sub
dec
cltd
fisttpll
mov
test
dec
mov
xchg
sub
mov
add
in
cwtl
repz
push
jns
xchg
out
mov
mov
push
js
inc
mov
ljmp
cwtl
mov
add
sbb
das
xchg
repz
sub
dec
push
mov
dec
push
mov
imul
iret
mov
pop
jmp
movsb
outsb
pop
xchg
es
cmp
xchg
lcall
inc
decb
jb
inc
dec
ret
inc
sub
or
aaa
or
fdiv
sbbb
je
inc
and
mov
ret
jl
add
adc
push
sahf
data16
push
dec
int3
jb
outsb
or
insb
int3
or
jne
stos
jl
movsl
sub
xor
or
inc
mov
xchg
scas
cld
push
mov
je
into
sbb
sysenter
in
out
dec
inc
push
pop
sbb
or
fs
inc
dec
inc
popf
imul
mov
jno
push
cmpb
mov
sub
or
mov
sbb
mov
stos
rorb
dec
lods
mov
jmp
int3
movsb
outsb
shl
jno
mov
xchg
push
xor
jg
fdivrl
pop
loop
pop
rcrb
inc
aam
pop
test
xchg
iret
fmuls
cwtl
jp
mov
dec
xchg
mov
push
ljmp
cmp
xchg
ljmp
lea
imul
stc
popa
jo
mov
outsb
pop
cmp
sub
insb
jmp
dec
fldt
sbb
push
push
shlb
mov
int3
or
lcall
es
pop
or
lahf
cs
mov
push
in
test
test
lcall
es
xorb
push
mov
int3
loope
or
or
ljmp
loope
outsl
stos
cld
stos
dec
nop
les
test
stos
fadd
mov
aaa
xchg
movsb
std
pushf
sub
jp
mov
inc
mov
xor
mov
pop
incb
mov
sbb
push
enter
les
xor
fsub
mov
push
xchg
jnp
loope
push
xor
pop
nop
jecxz
vunpcklps
push
test
into
or
bnd
nop
cwtl
call
pop
push
cmp
hlt
data16
inc
xchg
xchg
pushf
out
lds
adc
push
sub
inc
add
cli
push
dec
or
adc
mov
out
inc
xchg
mov
inc
xchg
repnz
sbb
pop
pushf
insl
fsubr
je,pt
jecxz
pop
adc
and
daa
cli
pop
push
lret
push
ror
scas
cltd
jp
mov
jbe
xor
jo
jo
movsl
shr
mov
xchg
push
sub
add
dec
mov
inc
ja
cld
push
cmpsb
pop
test
cmp
outsb
and
adc
flds
repnz
or
push
ficomps
and
add
xchg
test
es
cmpsl
xchg
sbb
loop
or
dec
sub
movsb
and
or
ret
sarb
and
mov
pop
inc
pop
adc
insb
add
inc
mov
xchg
movsb
cld
lds
adc
insl
cmp
aad
sub
pop
inc
pushf
jp
inc
loopne
je
lcall
inc
pop
and
add
xchg
cwtl
outsb
xor
dec
nop
call
js
cmpl
outsb
mov
xor
shufps
and
or
shrl
add
xchg
jle
cwtl
inc
adc
pop
xchg
hlt
scas
add
inc
lret
xchg
incb
and
inc
push
orb
push
sbb
jbe
xor
in
inc
mov
mov
dec
mov
cwtl
flds
repnz
or
push
rcrb
and
add
xchg
lcall
pop
pop
and
ja
cmp
inc
push
xchg
insb
xor
pop
adc
push
je
pop
mov
rclb
movsb
iret
or
popa
sbb
mov
dec
dec
mull
adc
adc
dec
xor
mov
ret
call
int3
mov
or
push
leave
mov
jp
inc
insl
mov
mov
pop
sbb
orb
mov
por
loop
sbb
mov
sbb
dec
sbb
jno
xorl
cmp
jg
ds
xor
mov
mov
push
repnz
mov
adc
sbb
sbb
icebp
add
cmp
and
lahf
pop
cmp
movsl
mov
insl
icebp
push
testl
pop
scas
mov
sbb
push
adc
popf
push
xorb
imul
testl
orb
cmp
adc
iret
jne
jb
jle
roll
pop
roll
xchg
xor
repz
mov
inc
mov
fcoml
hlt
fdivrl
int3
jae
pop
mov
dec
fidivl
mov
fsubl
dec
inc
stc
adc
push
loope
mov
loope
mov
mov
repnz
jne
jo
cmp
dec
in
mov
cmpsl
les
fidivs
gs
out
and
xchg
vpsllw
scas
outsl
xor
leave
mov
cmp
nop
bndstx
test
push
pushf
pop
pop
dec
fsubrs
mov
push
sub
cmp
xor
shlb
cli
sub
sti
xor
imul
dec
xor
es
push
fisubl
das
popf
mov
xor
mov
xor
add
and
sahf
lods
jns
shlb
jb
lods
and
les
sub
mov
pop
sub
sbb
insb
imul
dec
shrl
movb
adc
push
pop
jmp
gs
adc
adc
cmpb
or
jmp
inc
push
mov
outsb
shl
lcall
roll
xchg
mov
ficomps
xor
aaa
and
fisubrs
sub
adc
in
popf
pop
ficoml
and
mov
push
setns
or
loope
add
jne
xchg
and
push
jno
cltd
bound
mov
push
in
push
faddl
push
xor
xor
lret
stos
andl
fiadds
orl
mov
in
stos
adc
xor
daa
dec
jl
popf
idiv
inc
lret
leave
movsl
popa
stc
stc
sbb
and
xchg
mov
cli
arpl
cmp
jle
xchg
cmpsl
dec
test
jmp
stc
test
mov
add
cmp
and
or
pushf
jne
fsubl
pop
loopne
push
sub
push
scas
cmp
dec
andl
je
sbb
imul
fimuls
jns
xor
pop
cld
mov
xorl
gs
jbe
xor
leave
fldcw
cmp
inc
push
int3
mov
es
mov
add
imul
cmp
add
push
pop
pop
push
aaa
aas
push
dec
lods
ret
loop
aaa
push
add
addr16
lods
add
inc
add
cmpsb
fwait
leave
imul
xchg
add
icebp
imul
cmp
or
test
je
int
test
xchg
xor
sub
sbb
addb
xchg
pop
add
dec
fistpll
out
jp
fmull
cli
int
and
gs
push
mov
sti
sbb
cwtl
pop
jmp
adc
add
jae
sub
adc
pusha
or
pop
xchg
inc
sbbl
stos
jl
ret
lods
test
lock
push
stc
inc
adc
mov
add
xor
or
and
lahf
inc
subb
cli
int3
nop
test
push
mov
push
mov
cltd
imul
lds
outsl
icebp
into
mov
popa
pop
mov
roll
and
popa
ret
mov
fiaddl
fistpl
xchg
and
sarb
cld
cmp
cmp
mov
orl
jnp
and
push
inc
adc
sub
stc
dec
sbb
ss
xchg
pop
fdivr
outsl
and
mov
arpl
loope
dec
shr
mov
xor
inc
jl
out
es
jge
or
add
gs
sub
pop
cmc
stos
mov
xor
push
dec
js
jmp
jl
lcall
test
sub
mov
and
mov
lcall
jb
loop
bound
adc
lcall
and
inc
imul
push
imul
bound
and
xchg
and
imul
and
and
imul
imul
imul
xchg
and
imul
jle
mov
fcoms
sahf
aam
dec
or
fadd
sbb
push
loop
test
loop
test
loop
test
loop
test
or
dec
jmp
and
jle
inc
fildl
inc
push
fldt
pusha
fstpt
inc
jg
filds
fucomi
inc
test
hlt
inc
ret
inc
out
stos
inc
call
jb
xor
lods
pop
xor
lods
xor
lods
sahf
xor
dec
fs
ja
xchg
xlat
jl
xchg
fbstp
cmp
lret
loop
test
loop
test
loop
test
loop
test
aas
jbe
jmp
fdivs
jmp
inc
ja
sahf
addr16
lret
sahf
xchg
push
xlat
sahf
enter
and
pop
loopne
je
xchg
je
lea
jmpw
xor
js
frstor
sarb
mov
es
dec
xor
pop
adcb
inc
pop
dec
ljmp
or
loopne
cmp
mov
mov
je
cmp
aam
sbb
push
cmpsb
lcall
inc
lcall
mov
and
imul
test
test
loope
push
xchg
insl
xor
xchg
ss
jne
test
jne
loop
test
loop
fmulp
je
dec
push
cmp
jnp
andl
fldt
push
jno
and
dec
jae
dec
insb
adc
aas
add
aas
shlb
aas
bnd
aas
lahf
add
lahf
dec
rorb
dec
push
in
jne
mov
mov
lcall
or
loop
xor
lods
sub
insl
loope
jl
mov
push
sbb
mov
jo
aaa
mov
pushf
cmp
mov
test
lock
cld
and
outsb
aam
dec
lcall
dec
cmc
aam
push
add
notl
outsl
outsl
idivl
outsl
pop
negl
testl
imul
fs
add
insl
inc
cmp
add
inc
enter
push
shlb
iret
xor
test
orb
aas
cmp
lcall
jno
jmp
inc
jb
sahf
lods
push
sti
sahf
mov
mov
ja
iret
pop
test
iret
push
test
iret
popa
test
iret
jne
mov
daa
test
jecxz
insb
iret
mov
push
iret
scas
test
iret
mov
add
cmp
mov
aas
lock
aas
xchg
aas
movsb
jne
or
leave
dec
outsl
add
dec
pop
add
enter
xlat
add
lock
dec
lcall
dec
mov
jb
xchg
pop
xchg
push
cli
xchg
jp
ljmp
fisttps
outsl
sub
sbb
mull
div
les
not
outsl
xchg
mul
insb
cmpsb
inc
cmpsb
mov
sarb
inc
test
loop
test
loop
test
loop
test
xchg
in
xorb
je
mov
je
add
jmp
lcall
or
mov
sbb
mov
sarb
js
pushf
mov
push
jmp
aas
jno
jmp
lds
cltd
mov
hlt
divb
in
rclb
xor
jmp
pop
jno
jmp
jle
int3
jmp
sahf
jno
jmp
mov
cmp
out
cmp
jecxz
les
lock
or
nop
je
xorb
pop
and
jmp
sahf
jno
jmp
mov
jno
jmp
out
cld
out
in
decl
push
fistpl
fldt
fstpt
fimull
lock
cmp
jno
iret
fisubl
in
mov
test
outsl
cwtl
neg
outsl
nop
mul
outsl
test
out
mov
and
sahf
ds
jo
inc
push
or
push
out
rorb
fsubrl
and
push
inc
stos
inc
mov
test
dec
out
out
xchg
movsb
dec
cli
lock
in
aam
dec
or
pop
dec
es
dec
dec
aam
dec
push
out
int3
pop
aam
dec
data16
fwait
stos
xor
dec
cmpsb
outsl
call
divl
outsl
lock
dec
out
outsl
inc
testl
outsl
push
negl
insl
insb
push
jp
sbb
pop
outsl
adc
outsw
sub
outsb
outsl
and
jbe
cmp
jle
imull
outsl
hlt
idivl
outsl
test
lret
mul
dec
out
outsl
inc
notl
outsl
pop
negl
outsl
push
mull
outsl
push
negl
sub
outsb
outsl
and
jbe
cmp
jle
xor
xchg
notl
outsl
mov
ret
test
outsl
xchg
cmc
fcmovu
scas
fdivrl
pop
test
loop
test
loop
test
loop
test
xchg
dec
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
ror
int3
and
hlt
and
cld
and
fidivl
xor
test
iret
int3
test
les
dec
iret
in
sbb
pushf
test
iret
xchg
mov
lods
dec
cmp
ja
mov
cmp
aam
loop
test
loop
test
cwtl
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
or
in
in
testb
mov
jae
fwait
push
outsl
in
and
cwtl
and
test
add
cmp
inc
dec
aam
sbb
cmp
mov
cwtl
nop
cmp
push
jo
lcall
les
sbb
mov
sub
mov
nop
cmp
pusha
mov
lods
fs
cli
lock
cmp
inc
decb
out
push
jne
negl
outsl
push
hlt
es
scas
setne
filds
xchg
xor
push
xchg
mov
xor
cmp
or
mov
outsb
jge
inc
cli
jg
xchg
lcall
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
lahf
call
mov
lods
lods
xor
inc
fidivl
push
or
hlt
scas
push
shlb
movsl
jbe
cmp
lcall
mov
test
and
dec
jmp
fidivrs
je
outsl
je
push
fbstp
sar
lcall
sbb
shrb
dec
dec
stos
xchg
daa
jl
inc
outsl
fistpl
sahf
sub
or
mov
adc
xor
fwait
mov
or
sahf
push
xchg
add
push
inc
sbbl
enter
mov
dec
imul
flds
dec
scas
add
xchg
enter
jmp
sub
adc
sub
std
jne
roll
and
add
adc
mov
add
lods
adc
lods
and
lods
aaa
xor
lods
lret
lods
fnsave
lods
shlb
lods
in
test
cmp
jmp
sti
pop
int3
sarb
mov
pop
dec
fldenv
cmp
cmp
fnstenv
lods
jmp
xor
jl
xor
pop
sbb
dec
mov
jl
jecxz
insb
dec
xchg
mov
xor
lods
je
ds
dec
in
inc
scas
mov
push
xchg
xchg
adc
fisubrl
out
mov
les
cmp
cmp
mov
test
fldcw
cmp
mov
add
inc
dec
sbb
popa
dec
inc
ficoml
adc
fimuls
es
shlb
inc
add
and
or
lds
push
sahf
dec
push
pop
sahf
pop
push
sub
cmpsb
push
call
sahf
mov
clc
fwait
mov
sbb
mov
sub
jmp
psrad
push
cs
or
xchg
xchg
add
pushf
iret
sbb
pop
adcl
aad
and
lods
jb
xor
dec
stos
lcall
insb
loop
test
mov
loopne
inc
movsb
push
sbb
jb
pop
push
outsl
pop
negl
insl
insb
inc
xchg
fs
sbb
cmp
mov
jne
aas
cmp
lods
sub
inc
mov
hlt
inc
mov
cmp
test
call
dec
je
add
and
or
inc
xor
in
mov
outsb
xabort
jno
jmp
into
jno
jmp
jmp
mov
ret
imul
jns
rolb
cmp
pop
fisubrs
sahf
pushf
xor
push
dec
movb
dec
ljmp
xchg
xchg
fbld
xchg
mov
push
je
or
das
aam
cld
mov
xchg
aam
dec
lcall
dec
stos
aam
inc
mov
fadds
mov
sbb
xchg
in
shlb
rcrb
xlat
shlb
cli
shrb
mov
sbb
stos
sarb
lcall
fisubrl
dec
mov
and
cli
xchg
xorb
add
xchg
adc
aas
and
adcl
negl
idivl
sahf
neg
insl
scas
inc
and
jne
loop
test
loop
test
mov
push
ljmp
fisttps
je
ss
test
movb
mov
mov
mulb
aam
xchg
mov
mov
inc
sarb
add
dec
jnp
lcall
insl
jmp
sbbl
sbb
orl
cwtl
push
push
mov
scas
or
mov
sub
pusha
xchg
cmpsb
inc
xor
or
or
pusha
outsw
ret
test
lock
aam
jae
jo
sbb
and
jge
fisubs
repnz
and
mov
aas
or
and
dec
stos
mov
je
lock
mov
ror
cmp
je
pusha
sbb
pushf
pop
rol
and
cmpsl
or
orl
or
loope
mov
icebp
xor
lods
aas
jmp
inc
fsubrp
dec
ja
mov
icebp
fs
or
scas
cmp
mov
mov
cli
ret
push
leave
xchg
jg
pop
pusha
outsl
cmp
jns
mov
inc
mov
push
jo
out
rclb
lcall
inc
jmp
adc
aas
xchg
pusha
and
jne
aas
call
imul
insb
push
loop
test
loop
test
nop
mov
sbbb
push
iret
sub
lods
mov
lods
pop
cld
aas
adc
movsl
fdivrp
sahf
and
fdivp
out
lods
int
addl
jp
lcall
inc
sahf
add
jg
cmpl
sahf
aam
outsl
dec
inc
push
aad
xor
in
or
dec
ficompl
lods
adc
pushf
dec
mov
cmp
mov
xchg
or
aas
gs
jmp
mov
outsb
sbb
aas
sti
jne
sub
xor
xchg
add
pop
out
lock
sbb
adcb
push
push
je
ds
je
jbe,pt
clc
outsl
dec
addl
push
mov
test
push
lret
jp
xchg
loop
out
repnz
sbb
cmpl
roll
cltd
add
pop
inc
ret
xor
scas
shrl
adc
test
pushf
xchg
ds
push
ds
mov
push
jbe
xchg
jge
pop
dec
lods
aad
fidivrl
mov
pop
inc
sbb
cs
xchg
lods
test
je
hlt
je
xor
test
inc
jb
pop
fstpl
ds
aam
mov
jp
inc
adc
jo
jl
xor
lods
les
insl
jns
subl
cmpsb
leave
xor
imul
fistpl
shrl
aad
adc
mov
call
js
pop
sbb
sbb
loopne
jne
bound
mov
add
testb
lock
notb
or
sahf
dec
mov
bound
xchg
test
cld
lret
imul
and
mov
jle
xor
mov
rcrb
fimull
sub
xor
mov
fiaddl
lods
mov
mov
and
loop
int3
iret
push
pusha
inc
xchg
js
popa
dec
or
inc
mov
pop
test
mov
fstps
enter
je
jmp
xor
imul
lahf
cli
stos
test
dec
jno
jmp
lods
jbe
arpl
fidivl
add
inc
mov
je
ds
dec
or
cs
add
rclb
mov
sub
push
aas
cmp
add
xor
inc
fcomp
clc
xchg
lock
xor
ljmp
rcrl
jmp
and
mov
out
data16
mov
cmp
jge
sahf
push
push
fs
sub
jle
inc
test
jne
aas
addb
inc
or
call
lcall
ljmp
test
sub
mov
loop
or
loop
jo
xchg
mov
out
add
cltd
jl
xor
fsubrp
xor
fmulp
int3
mov
or
cmp
push
jo
dec
lahf
add
inc
dec
xor
loopne
pop
xor
adc
jmp
scas
clc
test
icebp
push
jae
dec
ficoms
loopne
add
dec
scas
add
dec
mov
fnstcw
pop
fcomip
xchg
addr16
push
cmp
cmpsb
and
xor
lods
jb
adc
dec
adc
js
testb
pop
loope
aam
inc
jp
lcall
stc
jg
and
dec
gs
dec
jp
ret
aam
dec
stos
aam
push
push
jno
hlt
xchg
pop
fldt
xor
sbb
mov
push
xor
repnz
pop
dec
lods
add
inc
inc
jp
xchg
adc
push
pop
adcb
mov
lock
gs
cmp
mov
jne
aas
or
aas
in
imul
mov
sbb
das
in
xor
enter
test
stc
sub
lods
test
cld
cmp
sbb
add
push
inc
dec
cld
clc
je
cld
les
add
jmp
xchg
in
cmp
incb
outsb
or
dec
lret
movsb
add
sub
hlt
sbb
aam
pop
movsb
fdivrl
aas
jne
and
sub
stos
push
sarl
addr16
test
movsb
sbb
xchg
cli
push
test
jne
jno,pn
jmp
pop
or
and
xor
sahf
movl
out
inc
ds
xchg
jmp
and
loopne
lods
jg
lods
jmp
stos
lods
std
dec
add
neg
insb
dec
cmp
jno
cmc
sub
ss
sub
adc
xor
dec
xor
inc
lahf
fisttpl
int3
xor
add
dec
pusha
fistpll
push
sbb
sbb
icebp
mov
jp
out
or
xchg
push
out
inc
imul
or
sbb
sahf
cmp
or
js
push
dec
loop
test
loop
jne
and
divb
mov
mov
test
jl,pn
enter
loope
dec
jmp
inc
aam
je
ds
je
ds
pop
sbb
iretw
fisubrl
repnz
addl
es
jo
arpl
movsb
sarl
pop
xchg
outsb
xor
pop
add
lods
sahf
loope
mov
xchg
es
xchg
add
xor
lods
dec
inc
xor
test
pop
fsubrl
cmp
cld
dec
mov
aam
inc
cli
stc
and
rorl
aad
mov
outsl
fdiv
jl
xor
or
cltd
in
mov
cltd
jo
sub
sbb
sub
sarb
mov
mov
jmp
or
inc
xchg
add
and
cmp
jno
jmp
movsb
inc
rcrb
xchg
add
lock
xchg
or
sbb
not
leave
test
cmp
test
add
cmc
jo
mov
xchg
je
push
mov
lea
and
sbb
lahf
cli
and
sub
js
loop
ret
and
outsl
loop
test
nop
andb
daa
out
insb
mov
jbe
cli
jne
and
inc
out
or
xchg
je
ds
je
jle,pt
icebp
pop
outsl
test
nop
les
jne
and
shlb
loope
orl
call
inc
jne
jle
arpl
add
sub
gs
aam
dec
lahf
and
fisubl
push
add
fimuls
add
inc
mov
in
xchg
and
andb
push
dec
invd
divb
dec
jno
jb
push
xor
lods
out
dec
add
std
test
insl
mov
in
scas
orl
inc
lds
imul
adc
sub
dec
mov
in
cmp
xchg
testb
add
adc
fadd
aaa
pop
test
mov
or
mov
flds
inc
fmuls
or
push
adc
xchg
out
add
and
jmp
lock
dec
jecxz
test
imul
loope
inc
push
push
test
or
dec
icebp
jp
fsubs
ljmp
push
dec
aas
ljmp
out
scas
sbb
xor
cwtl
fcmovb
sbb
xchg
push
out
sahf
mov
test
sub
mov
dec
out
sub
std
mov
mov
xchg
jp
popa
popl
aaa
sbb
jo
jmp
sbb
jmp
or
and
dec
mov
lock
xor
je
add
mov
and
dec
inc
ficoms
dec
pop
call
jmp
pop
add
fdivrs
mov
enter
xchg
pushf
movsb
int3
add
test
int
ss
mov
lock
int
pop
jbe
adc
mov
jne
sub
inc
int
insb
mov
je
ds
sti
addl
jmp
dec
and
cmc
aam
push
sbb
outsl
or
adc
cs
inc
push
mov
in
adc
mov
mov
out
repnz
and
loope
leave
mov
and
push
mov
xor
push
cmp
pop
jmp
dec
cmc
adc
mov
mov
dec
aam
dec
imul
cltd
dec
ret
cmpsb
xor
lcall
aad
pop
in
subb
sbb
push
das
test
test
sub
out
shll
arpl
cmp
aaa
sub
popf
lcall
adcb
call
and
sub
addr16
push
add
xor
lods
aam
mov
outsl
pushf
decb
sub
in
arpl
sbb
mov
dec
dec
fistpl
into
inc
jge
and
jns
cmpsb
rcr
jp
sub
lcall
int3
and
and
sub
inc
sbb
sbbl
addl
fwait
pop
out
je
and
jl
into
cld
dec
cwtl
aam
inc
in
aam
pop
fidivrs
in
je
ds
je
pop
add
out
push
cmp
jmp
pop
jle
idivl
ret
fwait
push
aad
inc
fdivrp
pop
aam
sahf
je
ds
pminsw
lcall
sbb
xchg
adc
jg
cli
fcomps
sbb
inc
jmp
inc
dec
mov
mov
cmp
dec
or
scas
outsb
and
imul
je
cmpsb
dec
repz
xchg
cmp
mov
sti
dec
pop
xchg
filds
fistps
jae
out
enter
lods
jp
lods
add
lods
repz
lods
stos
xor
xor
cmc
ss
lret
mov
pop
in
mov
push
sarb
into
hlt
subb
inc
loop
test
aas
jp
cmc
sub
jp
iret
pop
test
inc
bound
dec
mov
ds
je
ds
je
ds
dec
fmul
stos
mov
or
in
negb
test
xor
push
dec
int3
clc
repz
push
inc
bound
nop
push
sbb
stos
jp
xchg
repz
js
pop
in
notl
xor
lods
aad
cmp
cltd
mov
fbstp
dec
jbe
fwait
jg
cmp
push
lret
dec
cmp
fincstp
popf
insb
icebp
pusha
mov
nop
lea
jno
cltd
inc
mov
dec
jle
inc
fdivrl
pop
loop
je
cmp
xorl
roll
ja
jle
imul
outsl
into
cmc
sub
daa
loop
fimull
arpl
xchg
shrd
cmpsl
inc
lock
mov
dec
jbe
fidivs
fmull
cwtl
pop
pop
xchg
out
das
std
enter
stos
hlt
subl
insb
mov
mov
xchg
adc
arpl
add
xchg
pop
dec
in
fiaddl
mov
fildll
mov
pop
loope
add
xchg
add
test
dec
mov
dec
fcoms
mov
lods
cli
jno
hlt
std
push
ror
lcall
xchg
cmpsb
adc
jb
cmpb
xchg
or
jne
in
repz
push
xor
jns
bound
mov
jg
xchg
test
cmp
sbb
int
dec
add
xchg
ficomps
cld
or
lcall
out
outsl
or
dec
clc
add
loop
fistl
lea
and
imul
jno
cmc
lock
push
int3
and
jo
es
pop
adc
popf
mov
fnstcw
inc
fstpt
fisttps
sbb
adc
arpl
jnp
call
jp
jle
subb
test
dec
adc
pop
or
negl
test
jecxz
push
pushf
pmaddwd
cmc
jl
push
xchg
into
cld
jno
sub
xor
js
add
pop
add
outsb
and
adc
push
movsb
fidivl
test
adc
adc
movsl
mov
mov
mov
fadds
testb
xorl
add
mov
mov
pop
mov
jg
pop
sbb
in
aam
dec
dec
aam
inc
pop
cli
mov
push
and
imul
je
in
fs
ficomps
mov
or
pop
and
push
sti
push
or
sub
xor
inc
les
xor
inc
mov
push
pop
test
dec
adc
pop
sub
es
mov
adc
fidivs
adc
mov
push
dec
lcall
inc
add
clc
cmc
mov
mov
xchg
ret
sahf
repnz
mov
cli
sbb
add
inc
fwait
or
adc
iret
push
test
sub
hlt
dec
pusha
add
sarb
outsl
inc
nop
and
mov
push
sbbl
outsb
fisubrs
test
xor
push
pop
jecxz
sbb
adc
mulb
and
xchg
sti
rolb
dec
mov
dec
adc
ret
rolb
mov
or
xor
cmp
lock
insl
fwait
push
xor
repnz
pop
hlt
dec
xor
jl
mov
cld
inc
mov
dec
or
mov
int3
push
inc
shlb
inc
or
sbb
push
out
xor
rolb
dec
inc
popf
mull
inc
dec
mov
sub
out
mov
sti
pop
cld
hlt
clc
add
out
adc
mov
int3
mov
inc
sbbb
pop
dec
push
pop
inc
push
mov
mov
sub
iret
test
cmp
sub
movsb
js
dec
stos
push
loop
scas
mov
inc
es
mov
mov
add
push
cld
xor
les
push
inc
cmp
jmp
push
test
xor
or
adcb
push
fwait
pcmpeqb
mov
add
pop
xor
cmp
jae
xor
pop
test
jae
das
mov
arpl
and
fwait
push
cmp
adc
xchg
int3
pop
das
ret
incl
into
es
dec
imul
ret
push
bound
push
and
cmc
push
push
orl
lcall
jbe
sbb
shrb
add
fcomps
dec
ljmp
add
push
inc
popa
sub
test
push
inc
xchg
hlt
add
sub
fnsave
mov
jns
fists
bound
pop
and
stos
cmp
or
in
nop
add
andl
mov
push
cmp
bswap
icebp
cwtl
outsb
mov
data16
and
imul
stos
and
inc
xor
push
cwtl
outsl
and
cld
jle
movsl
lahf
js
fidivrl
push
push
push
pop
sub
mov
jp
mov
imul
sub
sbb
pusha
pop
call
ret
push
mov
adc
je
push
add
in
add
clc
and
mov
push
fs
jne
mov
sbb
pusha
shrl
enter
and
dec
mov
inc
inc
jl
cli
add
add
mov
sahf
sar
repnz
and
mov
insl
cli
cs
inc
mov
pop
and
inc
push
jecxz,pn
popa
ds
mov
loope
leave
cmp
cmpb
jo
xor
pop
les
dec
ds
ljmp
pop
aad
cmp
or
enter
addl
cld
mov
movsb
insb
dec
lods
xchg
icebp
jecxz
mov
scas
int
xchg
sub
insb
pop
bound
rolb
push
fisubl
add
jne
jl
push
dec
sbbb
sub
aam
mulb
gs
int3
fistl
es
or
xchg
sub
sar
push
lcall
psadbw
sbb
sub
xor
mov
nop
or
jns
and
mov
rorl
jns
insb
cmpsb
xchg
pop
mov
xor
insb
sub
aad
mov
out
in
imul
lahf
scas
out
jns
out
pushf
data16
adcb
stc
jno
fstpt
adc
fxch
sub
bound
jb
lret
bnd
aam
aas
aas
sbb
dec
push
pop
dec
pop
xchg
push
hlt
xchg
dec
cmpsb
lcall
fs
sbb
jo
pushf
mov
lock
sub
add
cmp
mov
cmp
fldl
pop
cli
fcoml
test
xor
addb
inc
push
inc
cmp
mov
bound
movb
bound
adc
sbb
mov
gs
decb
gs
sub
cld
dec
and
add
xor
orl
nop
fwait
pop
jo
out
pop
rolb
pop
fs
mov
xchg
dec
cmp
sub
lods
xchg
popa
xor
repnz
pushf
ret
loopne
insb
pop
stc
push
nop
fbstp
in
scas
inc
dec
mov
ret
sub
sti
mov
es
add
popf
or
pop
push
adcl
into
arpl
stc
pop
sbb
idivb
pop
je
test
shl
insb
push
rcll
shll
mov
jg
fld
add
std
jle
push
cli
mov
cltd
leave
inc
sbb
adcl
testl
test
push
mov
lret
test
xchg
test
and
pop
push
test
and
add
ljmp
pop
pop
popf
lahf
adc
ljmp
cmp
bound
gs
test
cmp
ljmp
push
sbb
subl
xor
or
push
repnz
lahf
sar
ss
sub
xor
sbb
sub
mov
adc
or
outsb
adc
or
dec
jo
outsl
xor
pop
fidivl
dec
cwtl
push
sbb
popf
sbb
mov
or
sub
jb
repnz
push
xchg
pop
das
aam
sub
inc
cmpsb
dec
push
std
adc
add
pop
repz
xor
mov
loopne
insb
sub
jle
push
popa
pusha
mov
pop
fiadds
dec
es
clc
xchg
fcmovnu
out
ds
imul
ds
loop
pop
xchg
in
mov
pop
aaa
sbb
mov
pop
gs
push
pop
fmull
inc
sahf
aad
lock
mov
push
mov
scas
pop
dec
lretw
rolb
call
pop
sub
sub
adc
add
test
movzwl
cmp
or
neg
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
or
shr
mov
btc
test
shr
mov
dec
jmp
lcall
ret
or
sub
xor
mov
bsf
mov
cmp
bsf
jmp
lcall
xor
add
add
pop
xor
xchg
push
bt
test
cmp
shl
cmp
shl
btr
call
lcall
incl
ret
neg
sub
add
cmp
btr
xor
movsbl
xor
btr
adc
jmp
lcall
sub
xor
test
test
and
bt
movswl
mov
mov
xchg
push
push
xchg
dec
add
add
call
xor
and
and
test
mov
xor
add
mov
bsf
cmp
shr
bts
or
xor
xor
test
mov
shl
sub
xchg
mov
test
bts
sub
cmp
test
xor
inc
jmp
lcall
ret
or
xor
or
and
cmp
add
and
test
xor
call
lcall
add
xorl
pop
xor
xchg
push
or
test
adc
adc
add
or
jmp
lcall
stc
add
xchg
ret
neg
sub
mov
add
add
bsf
xor
sub
or
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
bt
bts
cmp
not
add
test
not
adc
and
jmp
lcall
or
call
dec
adc
neg
xor
or
sub
btc
bt
xor
add
mov
adc
or
movsbl
mov
sub
test
dec
call
lcall
add
bsf
movzwl
shr
and
adc
not
btr
shr
and
call
lcall
or
cmp
shl
not
sub
cmp
bsf
bt
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
test
cmp
or
or
add
movzbl
sub
inc
call
lcall
dec
rolb
ds
bt
and
bt
btc
bts
neg
jmp
lcall
mov
sub
adc
inc
test
or
sub
inc
mov
or
adc
cmp
shl
mov
test
or
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
test
cmp
sub
bt
not
and
adc
bt
bt
push
bsf
btc
shr
bt
test
bts
cmp
xor
dec
add
btc
adc
neg
or
sub
and
test
add
mov
movzwl
add
and
cmp
xor
mov
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
bt
mov
cmp
sub
bswap
bswap
add
not
call
lcall
add
mov
add
adc
test
sub
inc
btc
bsf
mov
add
cmp
dec
sub
btc
test
bswap
shr
mov
dec
sub
mov
shr
or
and
btc
btc
cmp
not
call
lcall
mov
shr
neg
bswap
btc
bt
test
test
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
add
btc
test
bt
neg
xor
shr
movzwl
bts
btr
xor
cmp
or
btr
jmp
lcall
push
pop
neg
btr
and
btr
mov
mov
add
adc
inc
bts
xor
mov
cmp
adc
inc
call
lcall
add
not
shr
bts
neg
test
btr
movsbl
test
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
shl
add
inc
or
test
sub
btc
sub
mov
adc
or
and
test
sub
sub
sub
movswl
movswl
xor
sub
dec
mov
add
not
adc
mov
add
bt
xor
or
test
mov
bts
test
lea
inc
cmp
jne
and
bt
shl
shl
mov
bsf
and
not
add
shr
bts
xor
neg
shr
btr
neg
test
sub
call
lcall
je
xor
mov
mov
adc
add
btr
add
sub
mov
shl
test
bsf
adc
shr
dec
test
sub
call
lcall
mov
adc
bsf
test
mov
shl
adc
btr
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
bt
xor
shr
xor
not
and
and
call
lcall
test
neg
btc
bswap
inc
shl
shr
bt
and
shl
add
inc
add
mov
bts
mov
bt
neg
test
bsf
mov
not
jmp
lcall
xor
out
mov
pop
adc
repz
xor
mov
add
test
add
shr
sub
and
add
btc
call
lcall
add
adc
adc
test
btc
add
xor
inc
push
pop
inc
add
loop
and
adc
add
dec
movsbl
sub
neg
push
decl
mov
add
or
or
adc
test
dec
xor
btr
call
lcall
decl
les
sti
shl
bts
xor
movswl
shr
shl
push
shll
cmp
shl
test
movzwl
bt
btr
inc
xor
btc
push
xor
shl
sub
bts
xor
and
btr
sub
mov
adc
neg
cmp
neg
shr
sub
neg
and
cmp
bsf
push
push
pop
add
add
call
add
inc
xor
or
shl
add
bsf
btr
xchg
test
bsf
bts
movzbl
cmp
test
inc
cmp
bsf
mov
btr
bsf
bsf
mov
cmp
or
mov
bt
call
lcall
mov
bsf
and
sub
btr
cmp
bswap
movswl
cmp
add
or
or
mov
sub
cmp
add
shr
call
lcall
cmp
adc
lock
dec
adc
btc
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
inc
add
or
btc
dec
bts
adc
test
mov
bt
dec
test
xor
and
and
bt
call
lcall
or
add
xchg
lea
movb
shl
shl
bts
mov
neg
adc
test
xor
test
adc
or
cmp
je
mov
xor
sub
bt
adc
movzwl
adc
shl
add
add
mov
btc
not
bts
xor
and
not
call
lcall
dec
cmp
add
adc
shr
xor
cmp
test
test
sub
sub
and
sub
or
add
cmp
shr
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
sub
xor
shr
or
bts
bsf
shr
test
push
decl
mov
add
adc
sub
shl
and
bts
adc
cmp
push
decl
mov
add
btc
or
bsf
and
cmp
btc
cmp
test
add
adc
btr
xor
sub
sub
neg
cmp
jmp
and
bts
shl
test
test
mov
bswap
mov
test
shl
bt
test
sub
adc
adc
btr
mov
movzbl
mov
or
and
btr
bts
mov
bt
add
bts
shr
mov
sub
and
bts
xor
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
or
mov
and
shl
neg
bts
bsf
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
cmp
bts
not
btr
xor
bt
not
xor
btr
push
push
shl
sub
adc
test
bt
test
shl
push
sub
mov
test
movsbl
cmp
test
xor
add
shr
btr
mov
or
not
sub
cmp
test
and
dec
call
lcall
js
mov
stc
pop
adc
neg
mov
mov
test
mov
lea
inc
xor
test
neg
add
test
cmp
sub
mov
adc
add
bts
dec
mov
btr
adc
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
shr
shr
sub
dec
btr
shr
cmp
and
dec
sub
mov
cmp
sub
and
add
neg
cmp
not
push
movsbl
and
add
mov
mov
sub
neg
push
not
btr
test
shl
shr
xor
add
push
test
neg
xor
and
and
sub
btr
shl
call
lcall
mov
not
movswl
cmp
sub
and
mov
xor
add
sub
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
dec
and
test
xor
or
cmp
adc
bsf
call
lcall
sub
mov
shl
or
adc
dec
shr
xor
add
adc
adc
mov
shr
shl
xor
test
call
lcall
mov
btr
not
not
adc
xor
bts
not
add
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
pop
inc
xorl
add
push
xchg
sbb
iret
jno
sub
pop
subb
inc
jg
add
xor
dec
out
or
add
jecxz
dec
jp
or
pop
rolb
push
cwtl
or
jb
sbb
jle
xchg
jp
lods
mov
arpl
frstor
clc
cmp
aad
stos
pop
notb
data16
jecxz
adc
mov
int
add
sub
jmp
cwtl
rcr
add
dec
sub
xchg
xchg
ss
xbegin
cmpsl
cwtl
fisttpll
pop
add
aas
fdivl
or
pop
adc
push
and
xor
jno
ret
ret
push
or
or
int
adc
adc
jmp
incb
fiaddl
cmp
or
add
mov
or
push
sbb
es
sub
adc
add
loopne
add
pop
sbb
or
push
mov
sbb
lahf
jmp
and
movups
call
pop
mov
push
adc
inc
dec
inc
push
cmp
xorb
pop
inc
aaa
cmp
dec
pop
sbb
inc
pop
inc
xor
xor
xor
pop
in
push
push
icebp
lock
inc
sbb
dec
add
dec
pop
rclb
push
cmp
jnp
cmp
push
cmovne
cmp
adc
aaa
in
inc
ljmp
dec
mov
push
push
push
inc
inc
jmp
xor
dec
inc
adc
mov
push
dec
cmc
dec
dec
inc
pop
adc
push
test
adcl
in
dec
push
dec
push
cmp
push
dec
add
push
pop
into
jns,pt
nop
push
loop
ljmp
aad
xor
je
out
push
and
pop
cmp
jno
pop
mov
cmp
cmp
inc
xchg
inc
dec
jle
dec
pop
push
inc
push
sub
aaa
in
push
fiaddl
test
add
add
add
add
outsl
jae
and
jne
addr16
je
in
je
xlat
fwait
cs
push
test
insl
shlb
jecxz
outsb
icebp
je
bound
cmp
or
push
inc
jo
and
icebp
inc
sti
or
div
dec
push
push
push
jae
je
lock
es
dec
stc
pop
push
gs
je
jo
icebp
arpl
out
outsl
outsb
out
pop
push
jne
out
xchg
mov
imul
je
in
addr16
mov
ret
test
addr16
ljmp
jb
add
and
mov
outsl
fs
pop
mov
dec
push
add
jmp
insl
sbb
data16
xchg
jmp
push
js
aaa
jne
adc
mov
cltd
add
add
aad
stc
jb
stos
test
and
push
je
or
popa
add
call
icebp
xor
hlt
iret
add
add
push
int3
fs
je
jae
popa
addr16
out
lock
nop
fcomps
jae
xchg
je
or
loope
mov
outsl
mov
xchg
or
jns
je
daa
dec
outsb
data16
outsl
bound
sub
call
insb
fidivs
push
push
cs
test
adc
popa
jns
xchg
adc
jecxz
or
leave
cmp
sti
test
push
push
dec
inc
add
push
inc
pop
push
xchg
dec
dec
mov
dec
inc
cmp
