dec
fsubs
popf
xor
cs
jmp
sub
pop
lea
or
gs
lcall
cs
lcall
iret
xchg
and
sbb
and
nop
mov
bound
repnz
push
loopne
mov
or
push
xor
inc
cmp
adc
mov
pop
sbb
or
adc
jno
inc
insb
addr16
pop
push
add
push
scas
jl
rolb
xor
dec
es
cmp
add
jnp
mov
cmpsl
clc
ret
mov
cmpsl
push
out
aad
push
push
test
gs
out
lret
dec
aad
adcb
xor
cmp
cli
cmp
fimull
testl
push
fcmovne
xchg
pop
mov
mov
add
dec
insl
imul
das
jns
sbb
fstl
and
pop
sahf
cmpsl
orl
fistpl
jb
in
int
pushf
jecxz
jno
jmp
ss
xorb
aas
sahf
cltd
std
cmc
xchg
mov
loope
inc
jecxz
jo
push
adc
xchg
jns
into
adc
rol
scas
mov
or
ret
fwait
cs
push
or
cltd
arpl
jo
popa
xchg
jns
or
add
push
cmpsl
andl
jge
es
sbb
xchg
dec
repnz
fsqrt
cli
xlat
data16
dec
loop
push
frstor
stc
xchg
pop
xor
out
mov
xchg
jno
or
ficompl
pop
sbb
sub
daa
and
cld
push
shl
jae
mov
dec
and
cltd
lret
dec
dec
xlat
sbb
push
pop
int3
jbe
rorl
mov
sti
or
and
mov
mull
inc
mov
insl
aam
bound
filds
inc
adc
push
inc
int3
ds
jmp
sahf
pop
fwait
addr16
sub
imul
int3
sti
lcall
sbbl
lods
ret
xchg
call
add
jge
mov
outsl
mov
mov
hlt
and
lea
mov
inc
pop
dec
mov
jb
aam
push
mov
cwtl
outsl
pushf
repnz
or
inc
pop
pop
add
dec
jbe
bound
orl
xchg
mov
lods
addr16
adc
sti
inc
jge
jae
mov
jnp
dec
out
js
fdivl
in
shlb
cld
fstpl
jge
movsb
idiv
fldenv
sbb
xchg
jecxz
inc
mov
mov
inc
ds
lret
repnz
call
dec
add
push
mov
xor
push
aam
and
cmp
into
popa
cmpsl
mov
aas
repnz
add
pop
xchg
pop
sbb
pop
sbb
dec
push
decl
ja
dec
mov
mov
cmp
sbb
or
sbb
pop
jo
inc
jns
fstpl
sbb
stos
xchg
jno
stos
jge
jl
xor
jb
xchg
dec
lods
hlt
scas
shlb
xchg
fcoml
clc
test
mov
icebp
mov
pop
rol
fucom
mov
pop
or
inc
repz
or
inc
pop
xchg
repz
push
cmpsl
std
mov
xor
sub
hlt
mov
imul
inc
adc
add
and
push
inc
addr16
mov
ljmp
daa
scas
cmp
xchg
ret
xor
push
dec
mov
out
push
aad
scas
cli
addr16
popf
xchg
fmuls
sahf
xchg
in
int3
ret
dec
mov
cmp
xchg
mov
xchg
add
push
push
add
inc
test
push
jnp
dec
lahf
jbe
push
sub
sahf
fidivrs
mov
in
cmpsl
xchg
test
pop
jge
lods
mov
and
jno
lea
aam
fcompl
jg
inc
popf
jg
jne
loope
inc
jo
je
push
loopne
pop
cmp
mov
iret
sub
push
aas
and
popa
cmp
cmp
sub
pop
mov
bound
loopne
cmp
push
les
sbb
jp
jbe
rep
enter
push
or
xchg
repnz
iret
popf
adc
lret
and
mov
mov
xchg
mov
xchg
div
add
xor
imul
leave
xor
sbb
fstps
xor
jmp
leave
dec
insl
lods
dec
inc
cld
sub
ss
or
sahf
mov
mov
pop
dec
pusha
and
cmp
leave
pop
fsubs
or
cmp
xor
jno
jo
and
push
pop
sub
add
inc
cmp
sub
inc
pop
xchg
inc
xor
shlb
sub
stos
cs
shll
dec
popa
mov
mov
andl
or
or
push
mov
imul
into
push
dec
jp
push
shl
mov
addr16
movsb
fwait
jmp
aad
jns
addr16
lcall
mov
rcrb
in
sub
sbb
into
inc
in
mov
repnz
jnp
pop
mov
inc
loop
or
icebp
pusha
nop
jbe
pushf
jnp
icebp
fs
loope
pusha
sar
mov
sbb
cmp
cwtl
data16
jae
jb
repz
imul
jb
int3
fsubr
aaa
and
repnz
js
inc
loope
jge
aas
stos
mov
mov
mov
ss
loop
jecxz
mov
cltd
push
jae
shrb
pop
fidivs
fcomps
les
and
sbb
jns
inc
pop
mov
sti
mov
or
call
mov
mov
inc
testl
aaa
inc
call
rcll
jae
mov
cmc
or
add
and
push
fmuls
mov
imul
int3
cs
jge
vmovss
inc
jmp
out
jno
push
mov
and
mov
xchg
push
and
cmpsb
mov
adc
xor
xchg
int
or
leave
lret
cli
jg
pop
adc
xchg
cld
add
add
inc
out
movsb
mov
ja
lods
ret
movsb
test
subl
and
icebp
pop
mov
imul
daa
or
js
pop
adc
ja
lds
and
jmp
mov
sub
add
fadds
xchg
test
cwtl
xor
push
movsl
sub
jmp
jmp
jge
lock
mov
inc
sbb
into
cmpsl
lea
psadbw
jbe
lock
ficomps
out
outsb
xchg
push
loopne
xor
fnsave
pop
lea
mov
ljmp
in
int
dec
push
sbb
mov
fwait
in
cmpsl
les
nop
ja
inc
clc
lds
mov
jb
out
sub
sub
xchg
cmc
xor
cld
jnp
pop
or
loopne
mov
pop
pop
jge
adc
xor
xor
and
ror
add
dec
inc
je
les
push
sub
pusha
ret
or
pop
out
mov
mov
jge
xchg
addr16
pop
cwtl
pop
jo
dec
pop
xor
lret
fists
iret
sub
add
pop
cmpsl
and
sbb
jbe
xchg
mov
out
mov
popf
mov
bswap
add
push
or
push
ljmp
in
jb
sbb
jmp
call
stos
mov
enter
add
xchg
out
xchg
sub
xor
cmp
mov
out
call
icebp
push
or
jecxz
xchg
lods
and
adc
roll
dec
mov
loop
or
xchg
mov
fmuls
mov
mov
ljmp
xor
sbb
popf
jmp
repz
pop
sahf
cld
add
fs
adc
cmp
enter
movq
cmp
xchg
les
push
pusha
xlat
cmpsb
movsb
cmp
ljmp
ret
sbb
aam
inc
xchg
mov
jle
or
cltd
mov
mov
xor
imul
leave
outsb
pop
nop
int
sub
mov
pop
mov
sub
ret
aad
stos
inc
in
sti
movsb
pop
movsb
icebp
out
cwtl
das
xor
icebp
and
inc
ds
xor
mov
xchg
les
pop
push
in
mov
dec
bound
jne
inc
add
or
insl
adc
dec
insl
inc
pop
test
cmp
inc
dec
pusha
out
mov
jnp
insl
lcall
jae
mov
addr16
sbb
aaa
add
mov
cmp
mov
adc
in
roll
mov
pop
mov
mov
xor
dec
pop
shll
mov
sbb
push
jae
ljmp
jge
dec
push
nop
in
dec
pop
adcl
adc
dec
rclb
push
out
nop
pop
inc
sub
aaa
and
mov
jb
hlt
push
xchg
cmpsb
push
mov
sub
je
daa
sbb
fdivs
das
dec
cmpsb
ret
xor
dec
popf
fistl
or
ss
cli
les
cmc
cltd
and
in
xchg
push
lea
lea
mov
mov
jns
cwtl
test
movsb
dec
xchg
stc
leave
movsl
inc
push
scas
ljmp
dec
dec
jne
inc
jl
jge
repz
imul
lcall
insl
mov
push
sub
mov
imul
sub
mov
lret
sbb
xchg
mov
ret
movsl
inc
fmul
adc
mov
mov
les
fisubs
in
pop
inc
std
fwait
mov
sub
cwtl
cmp
mov
pop
rcll
ds
loopne
cld
add
ss
imul
mov
xchg
das
pop
sarl
aam
mov
fstpl
fidivl
push
mov
lods
mov
adcb
shl
adc
ret
lock
cli
inc
pop
adc
push
insb
pop
xor
adc
shl
fcmovnbe
iret
test
incl
lret
icebp
andb
int
hlt
cmp
cwtl
les
cmp
out
repnz
mov
icebp
adc
push
cmp
movsl
push
sar
int3
imul
mov
cmp
pop
cmp
dec
ja
mov
shlb
test
jnp
cli
add
xor
daa
cmc
xor
test
js
pop
movlps
pop
xorl
adc
and
jmp
mov
mov
sahf
dec
sbb
das
push
xchg
pushf
mov
jns
pop
mov
cmp
fwait
pop
leave
test
pop
popf
xor
jmp
into
sahf
cli
int3
icebp
add
es
test
xlat
scas
cmp
test
scas
mov
xlat
in
bound
addl
inc
cli
add
lds
pop
out
fmul
inc
push
sahf
dec
aaa
cmp
add
idivl
jbe
es
add
jnp
and
pop
in
imul
rcrl
mov
mov
xchg
pop
mov
scas
push
ja
out
out
mov
xchg
loopne
xor
mulb
xor
add
mov
mov
fisubs
cmp
lcall
ret
aas
cmp
aad
and
icebp
nop
mov
jne
hlt
int
mov
test
popa
add
dec
bound
shlb
insl
loopne
ds
pusha
movsl
cltd
sbb
adc
in
hlt
adc
push
shl
mov
cmp
push
and
fstpt
pushf
outsb
std
cld
daa
adc
hlt
jae
adc
sbb
call
jb
cmpsb
push
adc
push
das
arpl
gs
sub
sar
arpl
mov
cmpsb
lods
mov
sub
cmpsb
sahf
int
loop
orb
lods
and
jns
and
jb
nop
pop
lea
les
filds
push
push
fld
mov
or
dec
lahf
mov
jns
pop
sbb
push
push
fwait
jge
mov
jne
std
mov
jno
int
sub
ret
xchg
sbb
int
xchg
imul
fs
das
inc
mov
sahf
sahf
leave
sub
add
loopne
pushw
pop
pusha
dec
mov
jbe
pop
jb
mov
cmc
lcall
xchg
sbb
orl
nop
jecxz
xor
push
cmp
cmp
lahf
addb
out
jno
xor
or
add
shr
mov
push
out
subb
jb
dec
mov
jg
mov
imul
cmp
mov
and
jp
push
push
popa
jl
ljmp
aas
xor
or
lds
sub
and
mov
fnstenv
fdivl
cwtl
stos
mov
sub
inc
jb
insb
insl
imul
std
xchg
enter
fwait
push
add
xlat
das
mov
mov
push
iret
pop
jmp
out
dec
sub
lcall
xor
jecxz
test
mov
faddp
stos
in
rcl
cmp
gs
inc
hlt
adc
popa
popa
inc
adc
and
pop
jg
pop
fcomps
mov
pusha
daa
lods
xchg
jge
pop
mov
das
aas
fsubr
jno
sub
mov
mov
jae
popa
and
xor
scas
jg
sbb
mov
ret
adc
mov
fisttps
sub
fidivrl
jg
mov
and
cmp
and
lds
dec
adc
xlat
xchg
cmp
xchg
ret
push
call
mov
mov
xchg
orl
cmp
mov
sbb
outsl
jecxz
das
or
sbb
sub
xor
jno
cmp
push
adc
in
or
sub
and
pop
mov
imul
shll
xor
mov
jne
out
out
mov
and
fs
or
gs
in
cld
pop
stc
and
jo
lds
pop
scas
in
dec
cmpsl
push
ret
test
add
push
jmp
push
sub
mov
and
adc
sbb
cmc
jmp
push
pop
cmp
movsb
add
testb
fbstp
pop
es
stos
push
xchg
into
iret
cmp
jnp
pop
imul
aaa
or
add
inc
sbb
mov
sub
mov
mov
sahf
into
xlat
dec
dec
and
cmpsb
scas
subl
sti
and
sahf
pop
pop
jae
xchg
jns
push
xor
pusha
sub
insl
pop
mov
and
ficompl
sti
jb
push
int
sub
aaa
mov
repnz
les
xor
mov
or
std
mov
pop
jle
inc
fwait
int
jns
sbb
xchg
mov
pusha
outsb
mov
fcoms
pushf
cltd
dec
push
insb
mov
leave
fwait
inc
and
mov
or
push
inc
ret
ds
and
int
push
inc
fildll
xor
test
lds
mov
xchg
add
jns
es
mov
int
jnp
shrl
repnz
pop
mov
dec
inc
xor
xchg
and
rcl
jp
add
jae
mov
mov
or
mov
divb
lahf
mov
sub
pop
lods
mov
inc
sub
aam
stc
rclb
xor
cmpsl
in
lahf
call
dec
push
mov
scas
ss
xchg
nop
push
dec
test
in
cmpb
xor
mov
mov
pop
fsubs
mov
inc
out
popa
cmpsl
xor
push
pop
mov
jecxz
push
stos
ret
sbb
cmp
aad
mov
dec
mov
lret
les
cmpsl
inc
in
icebp
and
das
imul
lret
sbb
test
jo
push
rcl
pop
pop
test
pop
add
mov
lock
push
pop
mov
adc
les
sahf
add
mov
pusha
ret
test
mov
add
sbb
icebp
xchg
mov
xchg
dec
ljmp
mov
jnp
mov
sti
test
fadd
jne
std
aad
mov
rcrb
pop
push
gs
sbb
shr
into
mov
cmp
scas
aaa
in
fisttpll
sahf
shll
arpl
stos
loopne
scas
scas
add
xchg
jae
mov
sbb
push
repnz
outsb
neg
inc
inc
push
scas
test
fdivrl
xchg
mov
stos
shrb
jmp
sub
jp
jae
jne
es
mov
rcrl
inc
stos
sbb
ret
mov
xlat
xor
cmp
mov
adc
imul
sbb
cmpl
aaa
sti
ljmp
jne
pop
data16
movsl
xlat
dec
xor
inc
bound
xor
mov
xchg
clc
movsl
int
lcall
cli
insb
inc
jbe
ds
fdivs
and
jp
pop
outsl
sub
sub
jo
adc
into
xor
jle
scas
adc
inc
mov
xchg
jmp
mov
mov
ror
adc
outsl
sbb
movsl
pop
lods
inc
cmp
pop
icebp
push
sbb
xlat
pop
daa
arpl
mov
mov
xchg
loop
sahf
sub
cmc
icebp
dec
push
sub
cli
jl
int
aad
sbbl
jmp
lods
ret
lcall
inc
stos
nop
cltd
xchg
mov
push
jg
outsb
loopne
mov
or
into
jns
xor
dec
pop
das
out
int3
push
inc
pushf
repz
ret
das
loope
fdivrs
outsl
cmpsb
add
xchg
mov
push
add
in
lea
cltd
gs
std
call
xor
lcall
lret
xchg
xchg
inc
fs
popf
dec
popf
call
push
sub
ljmp
repz
or
mov
test
xchg
xchg
fldenv
mov
cmp
pop
xchg
cmp
pop
inc
sub
std
jge
rol
push
repnz
mov
jge
lcall
fadds
inc
mov
cmp
adc
adc
iret
add
aam
push
cmpsl
push
hlt
jl
les
mov
dec
pop
lret
push
scas
push
sbb
mov
cltd
das
xchg
cwtl
into
lea
and
out
push
jg
xchg
call
push
add
sub
dec
adc
aad
cmp
mov
and
push
pop
sti
push
xchg
xorl
inc
push
outsb
je
xor
xchg
xchg
lea
insb
mov
xor
mov
add
fdivrs
leave
mov
adc
mov
jo
sbbb
fdivs
psubd
sahf
push
cmp
dec
jns
or
adc
jbe
sbb
inc
das
and
arpl
cmp
lock
adc
sbb
mov
lods
add
inc
jle
mov
mov
enter
in
lea
cs
pop
pusha
xchg
out
adc
mov
es
sbb
sbb
dec
cld
fcompl
xor
repnz
movsl
cmpsl
xor
rcrb
insb
out
push
pusha
pushf
clc
inc
test
pop
dec
insb
dec
push
pop
test
ud1
mov
movsl
xor
add
bnd
xor
aam
pop
test
out
call
push
rorl
xchg
add
fstpl
movsb
or
mov
icebp
sar
dec
testb
lret
cmp
cmpsl
icebp
fwait
mov
inc
pop
lea
xor
insl
clc
and
fwait
sub
ret
lock
mov
call
pop
idivb
lret
imul
scas
mov
stos
mov
rorb
dec
push
aas
movsl
push
xchg
lret
adc
inc
sub
xor
std
test
push
and
xchg
sar
fisubrl
jmp
push
dec
lcall
add
lret
inc
mov
ss
inc
cmp
pop
jge
push
jge
pop
xchg
xlat
jno
cs
imul
push
push
cwtl
shl
cld
sbb
iret
cld
inc
push
out
imulb
shlb
mov
add
cmp
push
pushf
jecxz
leave
lods
aaa
dec
inc
loop
arpl
dec
movb
outsb
clc
and
dec
inc
in
adc
inc
mov
fdivr
mov
lret
xchg
stos
fxch
loopne
lods
sub
lcall
lret
lret
icebp
ret
loopne
cmp
cmp
call
ja
add
adc
xor
aas
pop
imul
popa
gs
adc
aad
stos
test
movsl
loop
sub
arpl
mov
fnstcw
repz
idiv
scas
push
scas
mov
mov
sub
incl
sti
stos
cmp
mov
and
jmp
cmp
sahf
add
inc
push
pop
jmp
into
adcb
sub
inc
mov
inc
mov
lods
sub
fnsave
push
fcmovnu
sahf
sbb
or
daa
movsb
fimuls
push
push
mov
jbe
xor
adc
jno
and
roll
mov
mov
xlat
mov
dec
stos
inc
call
pop
mov
xchg
fiadds
sti
xor
aas
insl
pop
scas
stos
sbb
andb
mov
cmp
xor
sub
cmpsl
xchg
xlat
cmpsl
rcrl
push
cmp
push
mov
push
ds
aaa
pop
pop
rcll
lods
cmpb
inc
dec
inc
and
and
popf
stos
mov
outsl
mov
or
push
sub
jo
xchg
sbb
xchg
aam
and
loopne
dec
je
fs
fdivs
bound
xchg
js
pushf
jns
push
dec
push
fs
mov
or
adc
jae
inc
mov
inc
jle
fistpl
or
sub
inc
jae
and
cmpl
pop
in
lret
add
lods
lock
inc
mov
inc
fstps
gs
or
cmp
mov
popa
pop
xor
xchg
pop
ljmp
mov
add
inc
xor
popf
mov
in
push
xor
aad
cwtl
mov
inc
inc
lret
dec
adc
mov
icebp
and
mov
push
mov
stc
cmp
imul
cmp
cmpsl
dec
mov
pusha
push
mov
aas
aad
int3
add
fisttpll
sub
mov
cs
mov
mov
xor
fs
fwait
repz
mov
adc
jb
lds
xor
pop
mov
sahf
icebp
pop
int
dec
flds
lods
test
mov
insl
std
sahf
pop
in
test
mov
cs
aam
cli
out
xchg
sbb
pop
pop
adc
xchg
enter
sub
outsb
dec
mov
bound
das
lock
pop
pop
sbb
cltd
jo
out
das
push
jl
xchg
lock
inc
ljmp
inc
out
pop
out
push
in
nop
pushf
pop
inc
jo
or
movsb
fs
int3
mov
sbb
sub
insl
insb
data16
stos
jmp
jmp
add
jo
lret
lock
adc
sub
mov
mov
sbb
mov
mov
mov
lret
lods
pusha
sbb
mov
inc
mov
out
cmp
bound
jne
pop
xchg
xchg
adc
and
or
lret
ljmp
xor
pop
jl
xlat
mov
js
lds
cltd
ror
in
adc
jo
aaa
in
into
inc
push
jmp
pop
mov
jp
pop
or
sbb
frstor
std
push
lahf
ret
sub
popf
cmp
scas
xchg
imul
test
add
and
cs
fdivrs
sub
jns
xor
mov
repnz
mov
shll
sbb
scas
mov
lahf
ficoms
jmp
in
push
inc
or
inc
cmpsb
mov
lds
jmp
jae,pn
mov
and
mov
jns
decl
sub
rorb
bsf
lods
push
xchg
ror
bound
gs
imul
adc
or
sbb
aaa
mov
push
mov
lods
lret
fs
cltd
xchg
push
dec
test
inc
call
add
popf
aaa
mov
pop
push
mov
mov
mov
pusha
daa
ret
cmp
pop
lds
mov
out
cmp
mov
fldl
aas
cld
aam
cltd
or
xor
push
outsb
cltd
inc
mov
stos
stos
pop
push
or
ret
daa
pop
add
mov
sbb
ss
jne
clc
int3
add
ds
aad
cli
fcompl
inc
rclb
in
les
jnp
mov
inc
inc
jae
lcall
push
push
mov
shr
outsb
or
cmp
lock
pop
sub
xchg
pop
sbbb
mov
shr
mov
adc
fidivs
daa
aas
das
fistpl
jo
fimuls
mov
fmuls
aaa
jmp
sti
push
or
idivl
push
lock
mov
mov
jg
or
and
mov
bt
dec
aam
in
jp
out
std
mov
and
jg
rcrb
mov
push
movsb
ret
cmp
fildll
enter
dec
cmpsl
leave
cltd
clc
daa
cwtl
enter
jecxz
xor
mov
clc
notb
pop
xchg
push
stos
dec
add
jnp
add
xchg
adc
push
cs
inc
movsb
jbe
repnz
aad
push
mov
xchg
mov
mov
in
jbe
add
xchg
and
clc
push
xchg
adc
subb
enter
out
adc
sti
fidivrs
and
add
inc
sub
push
cmc
into
int
push
aas
jg
adc
or
mov
test
or
or
rorb
jno
add
add
das
xchg
insl
jecxz
popa
fiadds
jbe
movsl
out
testb
jmp
ljmp
cld
jge
adc
xor
aaa
adcl
lods
dec
cltd
mov
xchg
int
out
test
ffree
popa
inc
jnp
loop
mov
fwait
scas
lahf
jnp
fld
imul
lock
addr16
pop
bound
xchg
mov
cmp
test
or
sbb
hlt
aaa
fsubp
pop
xchg
adc
out
xchg
xor
mov
iret
add
jne
or
mov
jb
sub
push
mov
or
rcrb
add
lods
and
mov
loope
inc
mov
xchg
insl
and
mov
xor
pop
mov
lods
cmp
mov
or
cmc
in
sbb
movsb
adc
mov
stos
cld
rorb
dec
in
lahf
push
dec
rclb
jp,pt
xorl
jno
cmp
mov
mov
test
xchg
lock
mov
dec
lock
outsb
aam
jns
add
or
and
adc
push
pop
lret
push
out
rcl
xchg
jge
push
enter
inc
aad
lret
repz
jecxz
fistpll
cmp
and
lods
cmp
inc
or
fdivr
and
pop
xchg
pop
dec
icebp
and
mov
push
and
in
jp
fcompp
hlt
push
in
sub
sbb
cltd
cmp
jno
mov
sbb
scas
mov
pop
dec
cli
shlb
and
adc
clc
inc
jge
imul
sbb
inc
lods
decb
daa
mov
outsb
rcr
cld
scas
cmp
dec
lods
push
jns
mov
pop
or
std
jns
sub
daa
fucom
adc
test
pushf
pusha
fwait
pop
and
adc
test
adc
lds
add
pop
subb
jns
shl
mov
insb
dec
and
sti
int3
scas
mov
pop
pop
es
pop
mov
std
jmp
xchg
ret
js
push
loope
push
vshufpd
repnz
and
pop
pop
jecxz
cmc
and
addr16
aaa
xor
cltd
dec
scas
mov
jae
fld
iret
push
and
aam
xchg
scas
dec
mov
xor
fidivs
clc
xchg
pusha
cld
fcoml
lret
inc
insb
out
popa
xchg
insl
dec
adc
xchg
cmp
cmp
cmpsl
xor
stos
xchg
mov
cltd
sbb
lahf
mov
xor
fwait
out
xor
inc
ret
mov
daa
cmp
sub
iret
ret
push
inc
pop
mov
repz
sbb
mov
mov
rol
je
mov
xchg
movsb
xor
and
xor
xor
sbb
leave
notw
into
fimull
aam
gs
mov
mov
jecxz
sub
push
cmp
mov
sub
pop
jbe
mov
sbb
cmpsl
xlat
jne
arpl
mov
fnstenv
xchg
int3
es
jno
cmp
cmp
test
mov
xor
dec
lods
fldcw
shrl
pop
push
icebp
dec
adc
je
xlat
inc
push
imul
lea
dec
andb
add
push
mov
or
cli
das
push
lods
jecxz
popa
cmpsb
idiv
cmc
sbb
aas
push
sbb
or
sub
xchg
add
sub
mov
imul
and
sbb
inc
adc
inc
mov
frstor
shl
out
add
inc
jnp
inc
sbb
popf
adc
mov
pop
orb
cmp
shlb
pop
popa
aaa
dec
rol
fcomps
dec
mov
enter
inc
jbe
popa
repnz
pop
das
mov
push
pop
add
mov
and
xor
cmp
cli
pop
xor
aad
or
mov
cmp
movsb
out
mov
fstps
jns
loop
aad
push
pop
push
mov
pusha
aas
mov
push
push
push
or
xchg
cs
xor
xchg
test
mov
cmp
jae
fsubs
divl
dec
fildl
pop
pop
xchg
loope,pn
sbbb
xchg
cmc
popf
add
andb
incl
jae
aam
push
jno
rcrb
sub
xchg
fisttps
push
shll
cs
rclb
data16
xchg
xor
add
push
pop
enter
adc
mov
xchg
sub
outsl
xchg
sub
das
cmp
stc
jge
lcall
sbb
or
cmp
imul
or
mov
and
jnp
aad
mov
push
mov
push
mov
sub
pop
jg
push
cmpsb
sbb
pop
std
cmp
push
lahf
ret
ret
fbld
xchg
shll
scas
mov
jecxz
jnp
repnz
mov
rcr
jmp
mov
pop
mov
jo
push
cmpsb
sbb
ds
adc
jl
sub
lret
and
add
pusha
jl
jl
imul
inc
jae
adc
pop
xor
fldcw
push
mov
xchg
fsubl
or
popa
repz
scas
imul
mov
fwait
loop
and
into
pop
imul
jmp
arpl
stos
and
jns
xor
fwait
inc
jge
in
repz
lcall
lds
mov
or
testb
sbb
xor
and
std
inc
in
aam
xchg
add
push
mov
ret
push
pop
inc
sub
pop
pop
gs
jge
jge
mov
jnp
dec
arpl
movsl
xchg
push
in
fxch
push
xchg
pusha
rol
lods
out
inc
cmp
sub
xchg
adcl
pop
aas
xchg
cmp
sub
sub
jp
push
enter
loope
cli
cmpsb
sub
lock
or
pop
adc
loope
adc
mov
push
pop
mov
fcmovnu
repnz
xor
jbe
les
fcomps
push
jmp
jb
lahf
pop
pop
lea
jae
lods
adc
push
xchg
push
push
xlat
dec
push
pushf
js
jno
mov
sti
jne
mov
imul
aas
stc
inc
clc
mov
xchg
push
scas
pop
adc
fs
xchg
xor
cli
icebp
shlb
push
hlt
pop
xor
mull
mov
out
or
adc
mov
xchg
dec
testb
fs
outsb
stos
into
and
xor
in
jae
aam
mov
inc
scas
rol
push
sahf
jp
mov
mov
jne
test
das
pop
add
ret
arpl
push
mov
cltd
test
dec
push
pusha
adc
add
popa
call
pop
xchg
sub
jne
in
xchg
mov
unpcklps
in
pop
mov
std
push
outsl
inc
mov
subb
inc
lcall
rolb
and
insl
popa
xor
lods
cmpsb
xchg
cmpsl
in
iret
mov
push
in
adc
mov
sahf
sahf
and
shlb
xor
push
cs
das
jae
cmp
pop
stc
mov
push
stc
lret
fsubr
sub
les
shrb
fldcw
push
xchg
test
push
inc
std
xor
psubq
or
mov
push
adc
adc
fwait
push
push
mov
js
out
movsb
aas
and
insl
fs
cltd
pop
rcrl
push
shrl
adc
loop
push
jmp
mov
dec
adc
sbb
jmp
sbb
mov
rorl
and
ss
and
push
lcall
cli
sbb
mov
fsubs
pop
je
jns
in
fadds
adc
xor
enter
lret
cwtl
or
mov
pop
fpatan
ds
out
jp
mov
andb
mov
jge
dec
sub
subb
es
cmp
dec
in
clc
push
cmovge
pop
dec
mov
jmp
in
push
inc
ja
or
cmp
stos
push
rcr
mov
mov
ret
shl
xchg
cld
test
dec
push
mov
sbb
add
inc
pop
inc
mov
cmp
or
mov
loopne
push
mov
nop
and
fldl
int
cmc
mov
lret
test
xchg
and
sbb
repnz
lods
sarb
test
and
adc
outsl
popa
lea
test
je
cmp
push
or
sub
cmp
out
pop
ss
cld
push
add
xchg
and
fidivrl
sub
shl
imul
lret
imul
les
leave
xchg
lods
dec
lret
cmp
insl
add
mov
cltd
js
xorb
hlt
xlat
out
and
lods
fcomp
je
les
mov
add
lret
js
sub
xor
sbb
aas
adc
inc
out
daa
push
or
mov
divl
test
fsts
xchg
mov
add
lds
movsb
inc
inc
leave
pop
or
je
xchg
iret
mov
rclb
mov
rorl
adc
mov
adc
loop
sub
inc
hlt
mov
out
cmpsb
push
jmp
int3
mov
test
lock
xchg
add
jmp
sub
pop
jecxz
mov
push
fsubl
xor
jmp
push
xor
inc
xchg
enter
aas
inc
pop
xchg
aas
and
jge
push
pop
adc
jae
out
mov
and
jle
movsb
xchg
movsl
xlat
jne
aad
xor
lds
adc
pcmpgtw
push
in
bound
xbegin
or
xor
inc
fcmovu
adc
and
pop
das
mov
mov
mov
add
jp
in
mov
lods
xor
scas
inc
cmp
stc
pop
mov
adc
fildl
adc
in
inc
outsb
mov
mov
repnz
push
add
push
jl
sbb
mov
cmpsb
es
sub
sbb
or
mov
outsl
adcb
xlat
mov
push
dec
pop
inc
push
pop
dec
sub
mov
fistpll
push
and
cmpsl
inc
mov
faddl
push
daa
test
adc
fisubrs
pop
orb
ja
adcb
inc
test
fistps
es
sub
xor
loope
aad
pop
daa
add
ja
ret
sbbb
insl
cmp
shlb
xlat
repz
cmpsb
push
push
scas
fwait
int3
add
jne
cltd
ljmp
stc
andl
das
xor
sbb
inc
filds
shufps
push
frstor
sbb
fsubr
es
push
es
jl
cmp
inc
push
cltd
and
pusha
and
sbb
pop
pop
enter
mov
fucomp
cwtl
jl
xchg
test
jae
inc
test
inc
sbb
leave
adc
sub
int3
sbb
mov
lds
cs
shlb
fwait
pop
mov
jnp
aam
mov
imul
or
aaa
lret
aad
mov
jge
pop
push
jnp
mov
push
jecxz
in
or
mov
cmp
sti
jp
add
xor
pop
jg
dec
fadd
xchg
nop
mov
lds
cli
xchg
mov
popa
insl
fwait
jns
jp
insb
xchg
or
adc
mov
outsl
mov
and
cwtl
inc
cmp
out
sub
mov
push
cld
stos
cmp
loop
adc
mov
dec
push
cmp
frstor
out
mov
stos
xchg
and
in
push
testb
int3
shrl
and
inc
into
mov
loop
cmpsb
inc
push
pop
arpl
fs
ror
das
xor
in
daa
pop
xchg
pop
mov
xor
and
inc
out
dec
cltd
aaa
or
mov
fiaddl
ss
jne
sarb
cld
xor
testb
cli
xchg
mov
scas
xor
shll
push
imul
repnz
xchg
xchg
aaa
in
adc
add
pop
pop
jmp
lcall
lock
push
pop
inc
pop
and
xrelease
jle
mov
and
jg
int3
dec
test
insb
mov
dec
loope
in
fisttpll
mov
cwtl
jb
in
xchg
ret
mov
jmp
push
loop
icebp
dec
cmpsb
push
xor
or
icebp
movsl
adc
movsl
dec
add
and
jo
inc
pop
sub
push
ffree
js
aam
test
push
pushf
dec
jge
in
sbbl
test
outsb
sarb
fisttps
sub
cwtl
test
jns
repnz
push
into
or
int3
lret
jb
cld
imul
std
and
sub
pop
fs
xchg
jbe
pop
fdivrs
imul
leave
push
mov
xchg
clc
sub
rcrl
out
fwait
gs
add
nop
jb
pop
sub
cmc
or
or
mov
cmc
xor
lahf
mov
repz
dec
repz
fwait
test
fcomps
ficoml
inc
in
xchg
sbb
lret
repnz
cmp
sbb
cmp
insb
in
sub
cld
fiadds
aad
mov
in
outsb
mov
xor
or
pop
jle
add
clc
or
ljmp
jp
daa
fildl
cwtl
jne
xor
je
hlt
loop
jle
jns
mov
ss
jae
jge
jecxz
lret
mov
and
sub
dec
jb
scas
repnz
mov
cmp
je
mov
iret
mov
sub
inc
push
lcall
dec
ss
pusha
inc
int3
stos
push
cmc
jo
stos
mov
js
pop
sti
es
mov
jne
sti
sbb
out
lea
ret
push
enter
sub
push
xchg
mov
or
popa
mov
add
fyl2x
jl
push
adc
inc
push
daa
in
divb
pop
mov
mov
fs
popf
mov
mov
mov
xchg
fistpl
pop
mov
dec
cmp
jge
mov
adc
jo
sub
inc
push
push
or
pushf
cmpb
cmp
and
xor
aad
pop
cwtl
sbb
push
xlat
push
lcall
int3
lods
sahf
loop
mov
mov
test
jb
xchg
mov
adc
xchg
inc
sub
mov
push
sbbl
lea
or
jl
loop
and
add
xor
aad
add
hlt
jl
sbb
cld
cmp
aas
adc
movsb
pop
adc
dec
cli
loope
push
andl
add
sub
fbld
icebp
mov
mov
in
add
dec
sahf
je
in
mov
push
dec
sbb
mov
inc
lods
call
incb
xor
adc
add
outsl
fldcw
jb
in
inc
pop
push
mov
divl
nop
mov
mov
cmpl
icebp
inc
push
ljmp
xchg
mov
dec
inc
jne
enter
sub
std
pop
mov
hlt
jae
lahf
lea
mov
call
cmc
jo
vlddqu
enter
jnp
xchg
ss
jp
pushf
mov
sarl
mov
cld
stos
sbb
push
mov
rorb
cmp
pop
adc
test
xchg
ret
pop
mov
push
xor
lods
cmpsb
pop
sbb
push
adc
pop
jg
cmp
sub
ficoms
mov
movsb
sub
or
not
mov
inc
int
lret
mov
pop
fs
mov
push
lret
divl
movsl
cwtl
mov
in
cld
ja
sub
and
add
sub
insl
lcall
fidivrl
sub
lds
ror
dec
inc
imul
xchg
ret
mov
pusha
jno
jge
add
les
mov
rcr
mov
lret
cmpsb
jg
push
mov
push
daa
cmpsl
fistps
dec
stos
mov
xchg
mov
repz
sub
sub
push
jecxz
adc
imul
nop
push
shlb
jg
stos
xchg
test
shlb
into
mov
out
outsb
lcall
inc
add
aam
add
pop
in
and
andb
cmpsb
or
in
dec
mov
sub
mov
aaa
inc
xor
dec
sub
je
aaa
hlt
inc
inc
push
xchg
sbb
mov
sbb
and
sbb
fisubs
ret
cmpsb
movsb
mov
xchg
repnz
jle
fcomp
rorb
rorl
mov
jbe
add
push
mov
lahf
dec
cmp
inc
popa
jb
jbe
clc
movsl
or
and
fwait
aaa
jecxz
jns
jle
lea
pop
jmp
pop
jmp
xlat
inc
xchg
mov
dec
cmp
cld
sub
mov
or
sub
sub
loope
outsl
xor
cli
mov
fnsave
arpl
jbe
pop
nop
rorb
mov
pop
test
mov
xchg
shlb
nop
push
pop
mov
add
cmp
gs
push
mov
movsl
lds
push
rcll
sbb
mov
jl
andb
ljmp
jb
push
int3
or
loope
jbe
out
fdivrp
and
jle
lds
push
dec
xchg
test
sar
shl
cmpsb
mov
out
cmp
inc
pop
dec
pushf
xor
das
adc
fsubrs
mov
xchg
hlt
in
adc
or
inc
aad
mov
xor
mov
mov
rorl
cmp
mov
mov
xor
push
pusha
ja
xor
pop
in
sahf
loopne
ret
or
and
pushf
xlat
push
in
orb
rorb
dec
cmp
mov
mov
sub
and
cmpsb
sub
push
repz
aam
sbb
xchg
mov
jb
ds
mov
nop
inc
xor
cmp
lock
jle
daa
mov
pushf
cli
fistl
mov
test
inc
mov
cmpb
cmc
sbb
jmp
push
cmp
loopne
mov
adc
jmp
jge
fstps
dec
xchg
sarb
mov
cmp
add
inc
enter
mov
push
or
clc
test
inc
rol
loopne
sbb
aad
stos
pop
mov
pushf
scas
aad
mov
pop
jl
mov
and
int3
addb
inc
cltd
es
sahf
lahf
lea
hlt
push
jns
jle
push
bnd
jb
leave
fsubrl
rep
dec
mov
ja
dec
loope
mov
mov
lods
xchg
mov
push
popl
push
jge
test
sub
sub
insl
pop
xchg
in
int3
into
data16
sahf
dec
push
lret
cmp
dec
sbb
loope
push
adc
lea
gs
adc
add
xchg
sub
xchg
xor
inc
xlat
xchg
ror
dec
and
adc
iret
jae
adc
mov
call
dec
mov
lcall
mov
xchg
enter
mov
add
jne
pop
dec
xchg
mov
mov
cmp
int
lods
cmp
cmp
notl
sbb
imul
cmp
sbb
int3
add
jl
push
xchg
clc
sbb
add
inc
jbe
cmp
jmp
popf
outsl
jmp
rcrb
ja
std
sbb
mov
and
movsb
out
test
loope
aaa
pop
push
xchg
jae
aas
xor
roll
mov
mov
pop
jne
fnsave
sbb
stos
ret
addb
fs
lods
sbb
negb
jns
insl
jno
cmpsb
in
dec
pop
adc
js
jmp
outsb
mov
jmp
outsl
xchg
or
cs
sahf
lea
sub
sub
aas
pop
and
int3
dec
repz
test
pop
fcoms
loop
in
lret
test
dec
lahf
add
mov
xor
lock
pop
nop
add
mov
or
xor
jnp
mov
sbb
outsl
mov
inc
mov
mov
sub
mov
xor
cltd
push
lods
sbb
mov
sbb
aam
or
push
push
out
jge
lret
pop
mov
xchg
jno,pn
mov
sbb
decb
addr16
push
adc
push
add
mov
xchg
insl
jb
jae
fcompl
cmpsl
pop
lods
add
jnp
shll
jb
aad
push
rol
dec
mov
add
and
scas
or
mov
inc
mov
mov
mov
loop
lds
test
sbb
pop
loopne
xlat
pop
cltd
imul
cmpl
push
push
add
bound
std
or
pop
hlt
dec
out
push
lcall
rcr
jnp
sbb
repnz
cltd
sub
popf
mov
mov
add
call
xor
js
dec
jne
cs
cmc
push
push
fists
jecxz
and
mov
inc
xor
lods
xor
mov
in
jl
xor
enter
pop
repnz
mov
jno
mov
jle
dec
and
mov
lcall
fnstsw
arpl
push
sbb
sbb
pop
cmp
xchg
loope
mov
jns
enter
mov
and
push
je
push
mov
mov
jle
push
cli
in
loopne
jne
xorb
cmp
test
imull
jo
bound
xchg
pop
pop
inc
test
fimuls
hlt
lahf
xchg
mov
push
repz
jmp
fstps
loope
xor
push
xor
or
dec
lahf
mov
jbe
pop
pop
mov
xlat
jp
ret
loop
push
sti
cmpsb
push
or
out
add
jecxz
ljmp
inc
mov
stos
pushf
and
repz
mov
jae
and
stos
pop
rolb
pop
in
pushf
lahf
sub
pop
cmp
jo
orl
pop
push
and
jle
fbld
cmpsb
jne
push
xchg
pop
mov
nop
jle
outsb
inc
insb
add
push
scas
mov
mov
pop
sbb
inc
sarl
sbb
xor
xchg
movsb
or
out
sti
cmpsb
xor
mov
dec
das
mov
xor
repnz
xor
adc
in
add
inc
scas
jl
or
int
add
test
mov
cltd
fidivl
jp
lock
aam
xor
jae
add
mov
jne
jp
in
mov
subl
xchg
xchg
mov
pop
push
test
cli
push
scas
daa
mov
jg
jmp
jbe
inc
out
and
mov
adc
cmp
add
negl
cs
xor
inc
push
popa
icebp
and
out
cld
or
in
push
sbb
leave
add
aad
ds
jmp
pop
fstps
cltd
xchg
adc
pop
addb
mov
push
gs
sbb
movsb
shll
xlat
stc
sbb
test
shrl
imul
pusha
sbb
and
inc
push
in
cmp
sbb
push
movsl
gs
and
or
add
nop
pop
push
and
clc
daa
arpl
add
cli
push
rcl
add
cmp
ss
xor
ds
cmp
or
xor
out
sub
pop
xor
add
mov
pop
rcll
lds
push
movsb
and
sbb
push
and
push
xchg
inc
call
es
jle
sub
gs
cltd
std
jle
jb
mov
dec
int3
fisttpl
test
mov
test
jl
ss
test
inc
dec
cmpsl
out
stos
mov
xchg
dec
int
icebp
sub
in
es
int
push
mov
lods
rorb
mov
shlb
xchg
int
or
xor
repnz
lea
push
cmc
adc
pop
jle
sub
or
inc
xchg
jp
stos
or
std
cmpsl
and
dec
in
mov
jl
scas
repnz
repz
and
fcoms
mov
adc
call
dec
test
fstps
addr16
and
lock
add
iret
pop
push
push
daa
jge
jb
cltd
jle
xchg
clc
and
pusha
clc
xor
inc
lock
out
shll
add
push
adc
movsl
loop
push
add
pop
in
dec
mov
add
dec
mov
dec
push
sbb
jg
fdivp
cmp
inc
jp
inc
ja
ja
sbb
mov
in
scas
mov
int3
mov
adcl
or
adc
adc
mov
jb
jnp
or
inc
jne
loopne
dec
cmp
popa
and
pop
pop
ja,pt
pop
or
mov
aas
inc
pop
enter
dec
or
insb
or
cmpsb
pop
dec
bound
mov
adc
cmp
repz
sbbb
sahf
add
mov
dec
inc
aaa
adc
add
inc
inc
divl
enter
sbbl
add
or
fs
xchg
and
loop
and
add
dec
jnp
mov
inc
cmp
add
add
fadd
fwait
inc
stc
adc
rclb
shl
enter
cmp
mov
ret
das
leave
push
pop
pushf
jp
pop
repnz
dec
add
jno
adc
xchg
sub
jns
ljmp
stc
dec
das
les
hlt
mov
jmp
lcall
cmpps
nop
xor
xor
movsl
add
cmp
roll
js
push
mov
dec
push
xlat
movsl
jge
add
dec
ds
sub
sub
mov
adc
clc
pop
outsl
cmp
cmpl
dec
ja,pn
push
jp
xchg
mov
hlt
sub
shufps
pop
jne
push
sbb
push
fnop
jne
or
mov
pop
mov
xor
mul
inc
mov
and
mov
pop
push
pop
lcall
adc
sbb
jge
int
mov
stc
mov
jl
push
cmc
mov
or
mov
sub
rolb
jno
mov
mov
test
pushf
xor
sub
sarl
daa
das
loop
xor
pop
inc
sbb
xlat
je
ljmp
sbb
and
fisubrs
xchg
int3
js
push
push
mov
pop
das
insb
inc
insb
add
fwait
xchg
mov
dec
dec
fstpt
xchg
cmc
mov
add
mov
aaa
push
int
dec
ljmp
and
jp
lcall
out
dec
push
sub
pop
outsl
pop
insb
jo
subl
or
daa
frstor
push
mov
test
mov
imul
stc
insb
test
aas
or
jmp
andb
or
jno
inc
sbb
js
fimull
popa
push
inc
int
or
pop
add
pop
pop
xlat
iret
loop
sbbb
add
xchg
stos
mov
dec
jle
jno
lea
enter
pop
aam
movsb
push
ja
push
cmp
data16
sbb
mov
push
push
fsubrl
xor
pop
push
add
rclb
leave
adc
imul
jecxz
nop
inc
lret
call
add
xchg
cwtl
imul
push
testb
cmp
movsl
lret
stos
data16
xor
mov
lods
mov
aam
decl
mov
jge
icebp
lcall
call
sbb
in
test
pop
stos
lret
and
fadd
dec
cwtl
out
pop
test
xchg
outsb
test
cmpsl
in
jb
sbb
das
push
es
rcll
pop
ret
je
sub
sub
call
cmpsl
ds
mov
mov
cli
and
ret
repz
dec
sub
ficompl
sub
pop
sbb
in
or
jae
outsl
cmp
adc
fs
cltd
xor
aad
and
xor
xchg
jno
jno
sbb
movsl
mov
pop
rorl
fidivl
dec
pop
mov
icebp
inc
inc
xchg
dec
sbb
dec
mov
insb
pop
int
or
gs
add
leave
fcoms
ds
pop
push
adc
lods
imul
fildll
add
ret
lcall
xchg
hlt
cmp
std
xchg
out
fsubl
int
mov
lock
add
adc
rcrb
mov
and
enter
push
cmp
popa
es
pusha
push
pop
sbb
pop
jno
cmp
test
push
add
pop
xor
shl
pop
jnp
int
ds
repnz
sub
fsubrs
mov
lret
loopne
jmp
sbb
sbb
fiaddl
lret
inc
cmpsb
enter
and
arpl
pop
out
call
mov
push
mov
jo
sub
pop
inc
imul
inc
out
jl
pop
push
test
aaa
roll
icebp
jp
mov
dec
sbb
out
or
jl
ret
mov
stc
frstor
rcl
loopne
sbb
or
cmpsl
daa
sub
push
cmp
mov
mov
mov
push
call
stos
or
cmc
imul
inc
dec
jne
mov
jl
insl
dec
add
add
arpl
int3
mov
mov
push
call
cmc
or
out
mov
lock
ds
in
loopne
outsb
sub
pushf
jl
push
adc
orl
xor
sbb
test
scas
push
shlb
push
pop
lds
cmp
rep
or
lret
out
push
push
leave
pop
push
fnstsw
out
je
stos
in
test
push
xor
cmp
in
pop
int3
mov
mov
sub
imul
cmpsl
fsts
fs
into
sbb
leave
data16
push
pop
orb
push
pop
adc
jae
lret
sub
xchg
adc
xor
mov
and
das
pop
repnz
mov
int
mov
add
inc
or
and
hlt
dec
pop
icebp
popf
stos
in
pop
jmp
or
stos
cmp
iret
mov
cli
test
cli
popf
xchg
clc
mov
test
push
mov
inc
add
scas
ljmp
dec
into
mov
test
push
aam
mov
jns
int
adc
idivb
or
or
adc
js
rcrb
jae
sub
bound
mov
xchg
xchg
stc
cltd
cli
lea
mov
lods
and
xchg
insb
inc
test
call
jl
cmp
dec
add
sbb
fdivrs
inc
test
jbe
data16
cltd
pop
addl
das
jb
cmp
mov
sub
sub
xor
cltd
in
adc
je
xor
js
rorb
mov
mov
push
mov
aam
pusha
xchg
jae
inc
notl
outsb
jno
mov
cmpb
arpl
clc
outsl
cmp
lock
or
xor
mov
add
in
daa
xchg
addr16
jns
inc
mov
push
cwtl
and
mov
into
lret
inc
sbb
addr16
jno
das
scas
fistps
jecxz
inc
push
lods
hlt
das
adc
push
scas
lret
test
test
adc
negb
cmpsb
inc
sahf
push
sbb
bound
addr16
imul
out
jns
out
xor
and
cld
aas
out
pop
das
mov
fwait
push
cmp
add
mov
xchg
mov
sbb
icebp
pop
mov
mov
mov
and
cs
mov
ficompl
vpshufhw
mov
mov
adc
cmp
test
mov
push
fildl
xor
das
loope
pop
push
adc
dec
divl
out
mov
pop
and
divl
mov
pminsw
pop
or
mov
test
pop
in
mov
test
rcrl
jg
imul
push
fs
or
andl
xchg
js
mov
and
mov
stos
mov
dec
cmc
mov
pop
arpl
test
scas
daa
int
std
pop
lahf
icebp
dec
mov
pop
arpl
or
pusha
xchg
jae
jb
push
sbb
push
movl
shlb
push
mov
hlt
dec
push
popa
ljmp
iret
lods
and
loopne
insl
adc
cmpsb
iret
cmp
xor
insb
dec
jne
ds
jns
xchg
cwtl
and
pop
outsl
jg
pop
out
xorb
jno
cwtl
out
pop
or
lret
xor
pop
jae
add
sbb
sbb
fnstenv
nopl
das
in
jp
int3
mov
iret
mov
pop
mov
in
sbb
mov
jp
dec
jp
push
aam
cwtl
int
js,pn
loopne
xor
daa
push
js
xor
std
fistps
mov
cmc
sbb
stc
outsl
add
popf
shlb
jbe
push
mov
cmp
mov
cmp
insb
sub
enter
jecxz
jg
shlb
add
inc
cmc
sbb
mov
dec
cmp
mov
push
sbb
testl
xchg
or
shll
push
sub
cmp
inc
inc
clc
mov
mov
adc
icebp
pop
dec
std
xchg
mov
jb
dec
mov
ret
fwait
and
dec
add
push
out
data16
test
adc
insl
inc
mov
and
xlat
xchg
sub
mov
push
or
arpl
sub
add
rolb
mov
mov
mov
enter
clc
bsr
clc
jg
jle
outsb
pusha
popa
sub
aas
cmp
lcall
pop
xchg
in
add
loope
xchg
cmp
cmp
fsubrs
mov
in
mov
push
outsb
or
outsl
cld
loope
aas
sbb
xchg
pop
add
sub
or
stos
cwtl
lds
arpl
js
fstpt
es
mov
lret
test
pop
cwtl
cmp
adc
inc
inc
lahf
lea
dec
call
or
fmul
cltd
or
mov
sbb
mov
das
or
hlt
or
out
dec
in
and
pushf
insb
and
test
pop
sub
cltd
leave
in
cmc
mov
push
sub
int3
lds
dec
jae
lahf
jne
sar
and
push
push
shlb
popf
cld
stos
sti
popf
mov
imul
inc
or
or
pop
popl
decb
or
mov
call
sbb
das
mov
and
jmp
aas
pop
pop
data16
mov
in
roll
cld
imulb
mov
int
std
dec
test
mov
lock
cmp
cmp
jnp
arpl
inc
push
xor
es
sub
iret
test
push
cmc
dec
shrb
adc
aam
cmp
cmp
xor
or
fdivs
in
and
pop
in
clc
arpl
arpl
or
jne
cmpsl
hlt
in
or
push
pop
movsl
and
flds
insb
add
mov
jmp
shlb
insl
mov
push
jno
dec
adc
andl
call
push
aas
mov
sub
loope
mov
xor
lods
mov
gs
fwait
push
pop
cli
ljmp
xchg
mov
or
cmp
mov
lods
pop
cmpsb
adc
fidivs
cmpsb
shlb
pop
jle
in
push
mov
cmpb
cld
popf
insl
fimuls
sub
jp
testl
fiaddl
dec
aas
pop
test
cmp
imul
jg
pop
and
mov
jae
mov
das
mov
dec
loopne
and
jne
int
scas
addr16
mov
pop
fdivl
adc
cmc
push
mov
fstpt
test
stos
fildl
out
push
in
sub
mov
sub
pushf
mov
loope
lahf
sub
sub
mov
das
cwtl
pop
xor
imul
add
push
lods
mov
sahf
movsl
fs
dec
ja
pop
orl
xchg
push
jge
sbb
lcall
push
pop
mov
xchg
int3
inc
push
mov
cmp
inc
inc
adc
clc
dec
push
cmc
ror
xchg
outsl
push
jmp
stos
popa
or
dec
pushf
cmp
ja
popa
cwtl
mov
push
pop
rorb
iret
dec
les
mov
push
pop
or
aad
add
jb
fdivrl
push
mov
sub
or
jbe
dec
pop
imul
lods
sahf
mov
inc
cmp
nop
jle
xor
shr
jmp
inc
aam
or
xchg
jb
push
in
add
out
jo
out
pusha
sti
xchg
popa
imul
pusha
jb
xor
mov
pushf
fistps
mov
int
mov
imul
pop
pop
mov
into
das
push
sub
cmp
cmc
in
mov
adc
pusha
roll
inc
inc
enter
test
lcall
int
and
pop
hlt
fdivrs
ljmp
sub
lds
int3
test
push
inc
jl
adc
or
hlt
loop
in
adc
push
inc
jno
jbe
push
and
dec
pop
in
add
mov
push
xchg
add
push
jne
out
and
inc
js
daa
mov
shll
lods
vpshad
lock
int3
int3
pop
dec
inc
add
lea
xor
lcall
pushf
or
cli
stos
inc
aaa
notl
fcmovbe
scas
add
xchg
call
jmp
or
adc
mov
xchg
addb
sbb
lods
jbe
adc
jg
insb
pop
sbb
out
dec
into
call
test
sahf
jbe
pop
push
stc
push
arpl
scas
pop
or
cmpb
and
mov
outsb
leave
fwait
mov
inc
sbb
push
jnp
mov
adc
je
sub
adc
cwtl
fs
movsl
inc
shl
mov
add
push
icebp
fnstenv
test
inc
and
aad
inc
repz
sbb
bound
xchg
repnz
loope
cmp
inc
mov
sub
out
push
push
dec
lret
lcall
jmp
jns
sti
rcl
and
lods
loopne
mov
loope
sbb
mov
das
subl
sub
sub
repnz
mov
xchg
adc
int3
push
cwtl
fsts
sbb
jb
push
mov
xor
pop
dec
add
imul
call
sub
dec
inc
xor
aam
xchg
aaa
and
jl
fisubrl
btc
out
push
mov
xchg
cmp
es
inc
ljmp
jnp
in
lods
xlat
pop
inc
adc
and
or
jle
dec
mov
dec
lock
jmp
and
or
in
cmpsl
shrd
popa
mov
repz
into
and
add
xor
rcll
cmp
out
xor
mov
out
add
scas
popf
lret
add
mov
mov
add
shrb
push
adc
push
ja
mov
lret
mov
jnp
repnz
cld
scas
lret
adc
adc
loopne
add
aad
sub
flds
mov
sbb
out
add
sub
iret
insl
into
xchg
lea
xor
cwtl
int3
out
pushf
cmp
xor
jae
fmull
and
sti
sub
fisttps
pop
pop
push
iret
jecxz
fdivr
jb
je
mov
test
mov
pmulhw
inc
loopne
jb
imull
cmp
mov
rcl
and
xor
mov
rolb
push
xor
mov
lret
int3
lahf
mov
ljmp
nop
and
pop
js
js
xchg
shrl
clc
mov
xor
jle
pop
xor
jge
xchg
add
jae
or
xchg
and
les
mov
add
mov
repnz
js
and
jge
cmp
mov
add
stc
jecxz
test
pop
clc
addr16
scas
sbbb
ss
dec
jmp
cmp
adc
int
and
sub
stos
mov
mov
xchg
xor
push
ret
test
stos
sysexit
movsb
insl
inc
lods
cmp
or
lret
or
or
jb
aaa
mov
bound
cwtl
fs
cmp
stc
dec
addb
das
mov
mov
pop
sub
mov
stc
push
push
outsl
ljmp
mov
mov
aad
stc
xchg
mov
mov
ret
idivl
cwtl
loope
popf
mov
or
loop
mov
daa
cltd
xchg
mov
test
mov
add
movsb
add
cwtl
adc
add
mov
stos
imul
pop
scas
inc
dec
xchg
or
stc
add
jne
adc
pop
daa
add
sbb
lods
mov
pop
sub
push
enter
mov
gs
notb
jne
pop
iret
xchg
adc
sbb
repz
adc
xchg
inc
je
xchg
push
faddl
idivb
push
jno
sub
scas
fwait
cmp
jle
push
test
ljmp
lret
stos
decb
lock
mov
sbb
pop
jmp
insb
pop
leave
outsl
adc
aas
dec
mov
aad
sbbb
xor
test
mov
sahf
call
aam
sbb
scas
cmp
jp
cmp
ficoml
sti
gs
sbb
add
jne
sti
xor
adcb
sbb
or
push
pop
call
jno
sahf
pusha
fsubr
inc
std
test
dec
inc
dec
andl
cmp
loop
js
and
push
pop
cmp
xchg
aam
jb
pop
pop
pop
or
rclb
mov
adc
inc
lret
ljmp
rolb
scas
fisttpl
insl
adc
lahf
xchg
mov
push
scas
pop
in
insl
inc
xor
in
fstpt
sub
xor
mov
outsb
std
add
add
das
aas
clc
fsubrp
lret
jbe
cmpb
push
dec
jl
test
pop
dec
xchg
add
mov
or
ror
dec
or
arpl
push
cmpsl
out
mov
fyl2xp1
xor
cmp
push
jbe
sub
dec
mov
aas
hlt
fildl
in
inc
movsl
inc
rolb
sbb
adc
dec
filds
push
js
jmp
jae
insb
or
sub
dec
mov
adc
insl
loop
inc
filds
loop
fstp
or
pop
lea
xchg
movsl
adc
les
jl
mov
lahf
in
push
inc
pop
pop
and
adc
dec
inc
cs
xchg
fldt
sti
adc
sbb
add
pop
les
lcall
add
push
cmp
in
addr16
mov
pop
jae
inc
xchg
jg
outsb
adc
cmp
pop
loopne
scas
bound
pop
pop
ds
mov
fsubrs
jmp
jne
icebp
inc
mov
outsb
arpl
pop
xchg
movsl
cli
scas
sub
jecxz
adcb
nop
cld
std
jbe
mov
sub
or
xor
mov
mov
int3
jbe
dec
cmp
dec
dec
dec
fs
xchg
mov
jb
call
mov
push
jecxz
lea
outsl
mov
mov
divl
dec
adc
xor
xchg
cltd
popf
push
or
orl
jg
jecxz
inc
mov
jbe
ss
ret
into
or
rcrl
xchg
xor
fnstsw
andl
es
and
imul
fwait
pop
frstor
push
xor
inc
call
sub
push
out
in
xchg
cli
inc
sbb
js
mov
aas
sub
rclb
arpl
push
sbb
stos
xchg
mov
out
or
sahf
push
jbe
and
ret
push
cld
xchg
or
mov
mov
sbb
adc
mov
xor
inc
xchg
idivl
ret
pop
mov
lods
leave
inc
int
mov
sahf
mov
dec
ffreep
pop
pop
stos
dec
jne
out
adc
icebp
jle
adc
cs
mov
mov
push
mov
out
and
jp
jb
sub
inc
fcoms
cmp
jo
rorb
jmp
pop
push
mov
in
xchg
lahf
pusha
adc
setns
mov
rcrl
adc
stc
mov
mov
cmp
sub
sahf
mov
pop
jns
aad
xchg
fisttps
in
sub
jne
ret
in
mov
mov
add
aam
clc
jb
js
cmc
dec
mov
loope
scas
pop
hlt
add
test
scas
lds
pop
lock
jl
fcomps
pop
fldcw
sbb
std
inc
sbb
push
xchg
and
push
pop
pop
xor
adc
or
add
and
out
push
addr16
xchg
notb
fwait
mov
jnp
push
xchg
frstor
jns
mov
jae
xchg
into
mov
cmpsb
cld
es
add
movsb
pushf
int3
or
pop
mov
pop
sbb
fisubs
or
sub
outsl
sarl
lods
sti
jg
scas
push
pop
addl
movsl
pop
xchg
aam
daa
sahf
js
aad
lock
jle
das
jle
jmp
xor
sub
add
or
xchg
and
xlat
cmpsb
repnz
pushf
rcrb
xor
jle
sub
mov
jo
mov
or
cmp
dec
sbb
inc
cmp
add
in
mov
xor
shll
scas
and
jno
xchg
mov
incl
fdivr
mov
pop
and
jb
jno
ja
dec
inc
adcl
lods
in
inc
into
int3
divb
push
jbe
cwtl
push
cmp
ja
lds
push
aad
mov
into
push
push
ret
pop
xor
jg
das
pusha
inc
es
sahf
cmpsl
xchg
shl
andl
mov
jno
add
inc
or
jg
push
stc
popf
or
jmp
mov
inc
test
push
pop
inc
sbb
mov
pop
mov
pop
inc
sub
sti
jno
sub
pop
lahf
pop
flds
into
xchg
pop
rcrb
sbb
movsb
sbb
sbb
xchg
mov
lahf
bound
mov
xchg
test
out
stos
fstl
mov
ret
lret
mov
push
mov
mov
std
xchg
test
mov
lret
xor
xor
in
push
cmpsl
mov
sub
or
push
adc
push
int
push
sub
or
jne
ret
adc
inc
test
fisubrs
int
add
repnz
sbb
and
fisubs
sbb
mov
mov
ror
sub
cmpsb
out
mov
adc
in
in
sbb
clc
sub
push
mov
jbe
bound
cmpsb
jge,pn
xchg
xchg
les
lods
imull
sbb
add
adc
cmpsb
fldcw
popa
stc
das
pop
jns
push
sarb
sbb
xchg
mov
jae
enter
fs
scas
icebp
mov
xor
cmp
and
xchg
xlat
call
jno
mov
inc
sbb
mov
mov
in
dec
fwait
xchg
pop
enterw
push
and
adcl
xor
sbb
jae
mov
add
fldt
fmuls
int
mov
mov
jmp
out
lcall
andl
outsl
jne
cmp
es
popf
mov
mov
push
mov
xchg
imul
dec
mov
mov
loopne
into
adc
in
shl
cmp
pop
mull
nopl
or
xchg
mov
test
aam
sub
stc
xchg
mov
push
and
imul
ret
mov
sahf
out
sti
int
dec
push
push
enter
mov
inc
scas
adc
xchg
scas
pop
add
push
mov
push
lcall
ss
es
cmp
scas
jae
mov
in
push
in
fucom
test
pop
mov
hlt
das
in
scas
std
mov
lahf
adc
xorb
lock
push
push
push
out
repnz
sbb
outsl
popa
aad
cmp
inc
pusha
in
test
jg
mov
movsb
repnz
push
pop
fsubrl
in
inc
mov
mov
pusha
cmp
gs
arpl
sar
jl
clc
sbb
mov
jns
movsb
shrl
jg
ret
in
and
fdivs
aad
popa
inc
jns
cltd
scas
popa
jnp
sti
push
int3
push
hlt
xchg
fistpll
or
adc
mov
mov
inc
inc
xor
mov
cld
push
out
inc
mov
mov
jno
sub
aam
loopne
and
ss
cmpsb
gs
out
es
inc
jmp
popa
inc
push
push
sbb
jo
cmp
cmpsl
jo
pop
in
pop
aam
push
pop
adc
mov
inc
loop
xor
jle
ljmp
popa
test
scas
sbb
mov
xchg
and
mov
nop
or
mov
daa
icebp
mov
mov
je
cmp
mov
test
jo
push
sub
or
stos
pusha
cmp
sub
in
adc
dec
pop
add
sahf
pop
adc
mov
ljmp
jmp
jmp
inc
pop
out
stc
call
insl
lods
jne
in
enter
hlt
adc
pop
repnz
fstpl
outsb
cmpsb
jle
add
mov
cltd
nop
sbb
and
repnz
cmpsb
mov
mov
in
push
jbe
add
ljmp
sar
jne
dec
test
popf
aaa
xchg
mov
pop
add
and
enter
bound
and
jno
mov
test
xor
sub
in
mov
pop
or
fstp
jns
arpl
mov
pop
or
cmpl
mov
test
mov
and
frstor
or
in
adc
or
mov
lahf
pop
lahf
and
xor
in
loope
and
mov
xor
cmp
jae
xor
mov
mov
jle
xorb
push
shll
shll
btc
adc
loopne
shr
aad
xchg
inc
xchg
jle
add
mov
jle
mov
enter
leave
lock
in
or
pop
dec
cli
inc
ret
mov
xor
in
add
cmpl
mov
xchg
lods
das
ljmp
dec
cs
popf
mov
adcl
insl
subl
adc
and
xchg
sbb
lock
mov
dec
mov
mov
adc
xor
mov
imul
sbb
into
movsb
aaa
cmp
subb
test
mov
sbb
ret
xchg
and
clc
test
ja
rorb
movsb
inc
stc
sarl
dec
stos
int3
fcomip
add
aaa
rcrl
aas
cmp
add
pushf
sti
mov
das
dec
sub
lret
jp
jg
inc
or
pop
xor
in
fwait
pop
dec
sub
lret
std
and
pusha
inc
call
adcb
popa
push
jns
or
lahf
mov
sbb
lock
shll
repnz
pop
sub
repnz
adc
test
lds
scas
testl
or
adc
sbbl
mov
xor
push
dec
scas
and
xchg
mull
xor
ret
ret
adc
mov
jp
and
aam
lods
ds
aas
xchg
hlt
jns
out
imul
push
xchg
mov
rclb
xor
inc
xor
fidivrl
jp,pn
push
inc
lret
inc
out
aas
cmp
xchg
or
cmp
sub
jle
fwait
lock
call
dec
inc
cmp
dec
stos
push
popa
repnz
mov
jmp
lret
adc
cli
mov
mov
ljmp
lds
pop
std
test
cmp
leave
jp
pop
dec
rorb
adc
add
cld
shr
repz
xchg
xchg
cli
mov
push
rorb
mov
pop
cmpsb
mov
aad
scas
push
jp
gs
sub
popf
mov
hlt
adc
sahf
jo
inc
cld
rclb
lret
pop
mov
mov
pop
or
push
lods
negl
mov
cmp
lahf
into
pop
and
ret
and
push
mov
push
in
imul
mov
add
push
jnp
pop
dec
inc
mov
into
sarb
data16
adc
rcrb
loope
push
imul
xchg
dec
lds
mov
xor
sti
xchg
add
sub
sub
shlb
iret
jbe
xor
in
fisttpll
mov
sbb
cmp
push
xchg
sbb
fsubs
jnp
mov
rcrb
scas
adc
mov
repnz
inc
xchg
pop
mov
inc
ja
sbb
jns
xor
int
in
and
jmp
out
rorl
xchg
inc
jb
push
lods
xor
push
dec
stos
popf
icebp
repnz
jns
mov
in
xlat
mov
bound
jmp
push
push
pusha
out
mov
jne
mov
mov
ficomps
ds
loope
xchg
push
cmpsl
dec
nop
mov
lahf
mov
jge
data16
or
dec
lods
and
rorl
sbb
out
loop
push
and
mov
xchg
xchg
xor
mov
cmpsb
cltd
mov
push
pop
jmp
or
and
daa
xlat
xor
fldenv
or
pop
mov
mov
les
pushf
scas
fistps
pop
je
cld
or
cmpsl
push
loope
sbb
jle
mov
xchg
movsl
shlb
xchg
add
add
cld
xchg
xor
movaps
repz
sbb
enter
mov
stc
sub
sub
mov
lds
in
rclb
pop
dec
mov
ja
outsl
fld
adc
push
data16
and
add
cwtl
pushf
xor
add
mov
cwtl
sub
pop
mov
or
imul
ja
fbld
xor
mov
push
xor
dec
int
sbb
lahf
or
sub
pop
stos
cwtl
aaa
sbb
sub
add
sub
sahf
divl
and
mov
gs
lods
jge
bnd
push
pop
xchg
cmp
xlat
stos
imul
pop
xchg
imull
arpl
push
fs
ljmp
add
shll
xor
lahf
int3
cmp
jl
add
aas
rcrb
repz
xor
jnp
xchg
aaa
fisubrl
xchg
rcrl
xlat
sbb
in
jp
pop
shrl
insl
dec
sbb
pop
mov
scas
jne
lahf
sub
mov
push
sub
test
pusha
xor
outsl
sbb
sub
pop
int3
cmp
pop
jle
enter
loope
mov
push
ret
mov
cmp
mov
mov
stos
lock
gs
mov
movsb
mov
movsb
dec
ds
jl
cli
xor
fwait
iret
rcll
jae
les
in
xor
pop
jg
dec
les
jae
cmp
cmp
xchg
pop
sub
inc
in
push
xchg
jmp
outsl
dec
sub
push
jmp
xlat
push
jmp
xchg
jae
scas
jbe
movsb
rcr
push
stos
imul
mull
test
pop
negb
mov
push
repnz
outsl
and
int
and
push
inc
hlt
mov
int3
adc
cmpsb
clc
lds
fiadds
test
mov
and
sub
jb
ret
pop
cwtl
lds
sbb
inc
adc
std
cmp
cmp
xchg
cmp
orb
add
fnsave
out
popl
dec
or
push
jb
xor
dec
das
push
pop
xor
xchg
cli
adc
jnp
sbb
xchg
ljmp
mov
mov
jp
cmp
insb
jle
ret
cmp
imul
jp
xchg
and
loopne
data16
mov
sbb
or
and
mov
inc
xchg
sbb
cwtl
fisubl
scas
hlt
hlt
jo
jl
adc
je
xchg
int3
scas
std
addr16
push
enter
xchg
and
imul
insl
sbb
enter
cmpsb
adc
lock
cmp
adc
dec
les
and
out
les
mov
push
mov
dec
data16
add
adc
and
cld
jbe
pop
lahf
mov
fbstp
jns
push
push
fcomi
out
or
mov
dec
fwait
lret
rep
sbb
bound
ds
notb
outsb
movsb
out
adc
cmpsl
cmpsl
inc
ds
movsl
loop,pt
jecxz
add
xchg
test
adc
andb
repz
repnz
push
sub
mov
lds
std
gs
pop
sbb
push
hlt
clc
pop
xor
cmp
adc
mov
fildll
fistps
sbb
push
jmp
dec
mov
pusha
stos
stos
cld
jecxz
xchg
sub
es
and
nop
imul
inc
clc
movsl
xchg
xchg
repz
add
hlt
stos
push
pop
lea
leave
jne
and
xor
out
dec
imul
arpl
shlb
push
cs
imul
push
imul
andl
cli
inc
xchg
test
repz
jno
or
fnstcw
mov
dec
sub
sbb
jb
lods
add
cmp
outsl
repnz
icebp
push
shrb
jl
and
sub
mov
sbb
pop
mov
xor
dec
jmp
ret
or
cld
mov
and
into
stos
ljmp
add
pop
push
push
mov
fcomps
xor
in
pop
aaa
mov
lahf
cmp
dec
cmp
loopne
js
pop
add
lcall
push
and
pop
cmc
in
sahf
pop
ret
jae
scas
in
ret
in
movl
adc
andl
and
adc
movsb
cmp
aad
pop
subb
jp
add
xor
outsl
ds
je
cmp
xchg
and
jmp
call
lods
icebp
stos
out
aaa
in
repz
mov
inc
lahf
push
pop
lods
iret
jl
hlt
pop
inc
cmc
push
hlt
push
inc
call
ds
sub
sub
mov
data16
or
fs
dec
or
ss
leave
add
aas
pop
outsb
repz
popf
iret
xorl
add
aaa
push
adc
enter
cmp
pop
out
dec
xlat
cmp
push
lcall
popf
js,pt
fcomps
in
ss
repz
scas
mov
outsb
roll
loop
sti
incl
insb
rcrb
push
test
sbb
call
mov
repnz
xchg
je
test
add
jae
mov
hlt
cmp
sahf
adc
dec
popa
jge
aaa
cwtl
mov
pop
sbb
mov
jns
fdiv
inc
xchg
cmpl
xchg
fdivl
ss
outsb
mov
jbe,pt
scas
pusha
gs
sub
xchg
mov
repz
aad
out
icebp
xorl
xor
add
fstpl
scas
pop
inc
jg
and
hlt
mov
inc
movsw
inc
dec
mov
inc
dec
outsb
pmovmskb
sbb
push
mov
in
add
dec
ljmp
mov
clc
pop
cmp
addr16
ret
lds
add
stc
or
out
sbb
scas
pop
fimuls
sub
scas
test
roll
adc
sub
push
es
loope
ret
cmpl
mov
std
dec
les
lret
mov
cwtl
orb
test
push
fs
fs
xchg
cmpsb
cld
cli
flds
push
imull
aad
imul
push
add
inc
xchg
cmpsb
cltd
dec
sub
mov
push
dec
xchg
fdivrl
clc
cltd
adc
mov
dec
pusha
out
and
call
sub
jns
ds
adc
sub
adc
push
and
pusha
fwait
sti
and
pop
lret
jne
mov
pop
bound
cltd
mov
es
sbb
xchg
loope
push
mov
negl
scas
cmc
lcall
rol
pop
std
repz
popf
pop
inc
mov
cltd
push
dec
and
mov
jb
shll
test
stos
jmp
pop
mov
dec
out
std
sbb
std
inc
aaa
and
dec
add
pop
lret
push
aam
fwait
mov
insb
cmc
or
jno
or
inc
rolb
mov
out
or
push
scas
xor
daa
into
in
ljmp
orl
in
mov
adc
adc
inc
ficoms
loop
pop
xor
push
sbb
inc
mov
lods
inc
xchg
aam
insb
pushf
inc
adc
enter
addb
fsubl
lret
negb
dec
cmc
in
fldcw
ud2
lods
bound
test
sti
and
and
jl
in
in
xchg
cmp
jecxz
dec
fbstp
xchg
ja
movsb
daa
xchg
mov
fadd
mov
stos
sti
fisubrs
test
xchg
fsts
loope
inc
rcll
mov
jne
flds
in
ret
cmpsb
pop
test
inc
xchg
fs
cs
out
xchg
xchg
inc
dec
xchg
push
ljmp
sbb
inc
push
test
fimuls
je
movsl
sub
xor
nop
push
pop
push
int3
push
sbb
out
sub
int
stos
jns
and
bound
cmpl
scas
push
adc
fimuls
cld
sbb
lea
aaa
mov
adc
out
out
adc
mov
cmp
inc
pop
aam
mov
aaa
js
push
enter
or
or
push
dec
pop
xor
and
or
hlt
cwtl
or
pop
and
jge
xchg
jb
lret
or
inc
xlat
mov
or
push
adc
addr16
les
xchg
jbe
ret
sub
sub
pop
popa
divl
out
add
ja
xchg
xor
cmp
jp
and
jbe
push
ljmp
fstps
stc
cld
pop
mov
and
add
lds
bound
jmp
jle
jns
in
sub
inc
addr16
jecxz
stos
nop
imul
arpl
imul
sarl
lcall
sub
fcoml
lods
xchg
or
and
sbb
mov
popf
into
dec
sub
mov
ret
iret
rcrb
jg
add
cmp
repz
jg
xor
rorl
fsub
jge
pop
mov
jne
mov
xor
jnp
lea
add
pop
out
add
jbe
and
cmpsb
xor
mov
and
and
cmp
dec
lds
andb
fsts
jno
fwait
fs
jge
repz
rcl
jae
sbb
add
js
jl
mov
sbb
mov
dec
inc
dec
xchg
sbb
out
xor
nop
fs
mov
pop
stc
push
xchg
mov
push
sbb
mov
or
repz
int3
sbb
or
insb
shlb
test
push
or
xlat
cltd
mov
stc
das
aam
test
fmull
cmp
gs
cmp
cwtl
cmp
faddl
cmp
inc
dec
out
mov
push
jp
popa
cmp
jbe
rorl
pusha
call
xor
mov
inc
mov
adc
adc
cmp
sti
add
pop
sub
leave
in
adc
mov
subl
adc
jno
stos
sbb
outsl
imul
sbb
stos
mov
add
into
push
mov
sahf
ffreep
cwtl
bound
fidivrs
dec
xchg
mov
into
or
mov
sbb
cmp
ja
es
ja
mov
mov
inc
jns
lahf
adcl
jp
adc
imulb
fwait
enter
add
filds
adc
fmuls
jp
mov
xchg
push
push
and
mov
adc
std
inc
std
call
xchg
push
shr
xchg
add
jmp
jne
adc
das
daa
push
push
es
divb
mov
pop
imul
xchg
push
pop
adc
repz
mov
jno
mov
ret
mov
loopne
push
movsl
xchg
xor
in
cmp
jge
enter
in
fwait
cltd
rcrb
sub
cld
popf
mov
push
rcrl
bound
test
sub
and
or
add
and
sti
or
or
fdivr
xchg
fcomip
dec
repz
movsl
xlat
sbb
call
dec
sahf
js
inc
pop
fsub
in
mov
push
jmp
lds
xor
lret
fiadds
mov
icebp
shlb
push
lods
hlt
stos
push
or
sub
outsb
fidivs
test
sub
pop
dec
shll
and
inc
mov
push
arpl
fsubl
loope
xchg
cs
xchg
shlb
cmpsl
add
aam
mov
push
mov
sbb
xchg
dec
add
scas
movsl
or
cmp
fildl
mov
mov
rcll
and
test
arpl
je
adc
mov
pop
lods
sbb
rclb
mov
jnp
andl
pop
mov
mov
mov
adc
xchg
pop
jecxz
inc
sbb
add
xor
int3
push
rcrl
xchg
dec
inc
dec
sub
sti
xchg
mov
pop
jno
ret
loop
shlb
inc
jge
cmp
into
push
lret
data16
lahf
xchg
mov
scas
push
lret
popa
pop
bnd
adc
pop
ret
hlt
sti
das
dec
stc
sub
xlat
ja
sahf
lods
xor
jo
or
lret
mull
xor
movsl
sbb
jecxz
lcall
mov
cmc
mov
pop
mov
inc
adcb
mov
sarb
sub
lret
or
cli
sub
test
insb
sbb
and
add
call
jle
cmp
hlt
call
xor
xor
sub
push
xchg
pop
inc
sub
cmp
fsts
orb
jge
dec
clc
mov
push
mov
dec
xchg
xchg
jb
lea
arpl
cmp
popa
aas
cltd
pop
sti
aam
addr16
cwtl
mov
inc
mov
sbb
in
lret
nop
pop
pusha
adc
pop
mov
and
xor
mov
and
cmp
je
xor
sub
mov
adc
fsubs
les
pop
pop
repz
mov
xchg
pop
mov
sahf
in
mov
insb
cmpsb
sarb
jle
xlat
pop
jns
lods
pop
ja
xor
call
cmp
jle
fsub
gs
test
jb
clc
sahf
loop
jnp
push
shll
aaa
daa
mov
dec
ds
mov
mov
movsl
loopne
outsb
outsl
pusha
in
inc
inc
dec
xchg
adc
iret
mov
jae,pn
push
cli
dec
add
stos
outsb
mov
daa
dec
push
pop
and
in
xchg
in
add
repnz
xchg
stos
dec
les
xchg
repnz
cmp
cmp
js
clc
repz
jle
rcr
mov
iret
pop
insl
jp
mov
orb
out
ja
ja
in
mov
outsb
cld
add
pop
hlt
fisubrs
fldenv
sub
fwait
dec
loope
test
add
out
xor
inc
and
adc
pop
leave
add
mov
dec
call
mov
cmpsl
es
push
lock
mov
or
mov
pop
fistpll
xchg
push
in
scas
push
rcl
and
and
inc
adc
pop
loope
cmpsb
not
mov
repz
ds
popf
xor
cmpsb
xor
mov
adc
pop
hlt
jmp
adc
mov
fwait
jle
dec
xorl
ds
icebp
lret
and
notl
xor
mov
call
clc
sbb
lret
adc
aas
cmp
ljmp
sbb
push
aad
scas
xor
fdivl
mov
les
xor
out
ss
movhps
add
add
pop
adc
call
mov
stos
jne
inc
cmp
pop
sbb
sahf
push
iret
and
mov
scas
mov
js
cli
pop
xor
loopne
pop
push
mov
mov
fists
mov
pop
and
sub
adc
fisttpl
out
push
jnp
jmp
frstor
inc
lcall
repnz
xchg
bound
inc
fisttps
pop
int3
add
mov
sub
mov
xorb
xor
mov
or
xchg
sub
mov
cmp
roll
lds
fistpl
jnp
dec
pusha
lods
pop
negl
repz
fnstenv
mov
cmpl
xor
xor
int
push
imul
sbb
rorb
or
inc
addr16
sub
pop
in
pop
lcall
nop
nop
outsl
dec
adc
jae
call
dec
dec
in
sbb
pop
inc
dec
roll
int
mov
and
into
stos
push
sub
and
sub
pop
aad
jp
ret
out
cli
inc
jg
sub
jle
jb
daa
pop
cwtl
prefetchwt1
mov
mov
xchg
cli
dec
stos
inc
and
mov
int
jno
jp
dec
dec
cwtl
xchg
pop
xchg
loope
jmp
movsb
add
movsl
or
add
scas
pushw
lahf
mov
je
fs
or
cwtl
lods
fwait
insl
in
clc
mov
rcl
push
sbb
xchg
test
sbb
clc
sub
jno
pop
mov
mov
xchg
xor
addr16
inc
loope
popf
sub
and
sub
icebp
jmp
ss
jp
xchg
out
xchg
or
and
or
push
out
cmp
out
and
inc
inc
add
repnz
add
sub
out
shlb
aaa
scas
inc
hlt
inc
jne
cmpsb
lahf
daa
test
aas
movsb
add
ret
and
xor
sub
inc
or
testb
and
ret
stos
xchg
push
sbb
jns
dec
rcrb
cmpsb
iret
sub
sbb
or
jecxz
insl
lods
pop
cmp
imul
loop
mov
hlt
fs
scas
add
std
dec
add
vunpcklps
imul
adc
mov
cmp
mov
xlat
inc
fcoml
add
mov
add
add
lea
cmp
push
or
adc
aas
mov
fadds
dec
pop
testl
adc
cmpsb
mov
jl
pop
and
mov
dec
jmp
subl
add
insb
dec
std
incb
xor
pop
movsl
xor
pminub
adc
add
mov
ja
ret
jns
out
mov
dec
mov
lods
adcb
sub
orl
daa
cld
int3
jne
or
or
jmp
insl
pop
popf
test
cmp
shr
xchg
sahf
stos
cmp
and
int3
push
lahf
daa
adc
push
or
mov
ljmp
movb
clc
push
popf
and
adcb
mov
mov
movsl
jne
cmc
clc
movsl
add
sbb
imul
pop
mov
dec
popa
xor
xchg
sbb
xchg
fiaddl
and
arpl
lock
sub
push
cmp
test
and
das
repnz
or
mov
outsb
xchg
dec
arpl
xchg
aam
loope
ja
mov
xchg
xor
insl
push
inc
shll
mov
fdivp
add
cmp
xchg
cmp
ljmp
lds
and
sbb
aad
inc
mov
mov
enter
enter
cmp
orl
sti
push
mov
shlb
hlt
pmulhw
inc
ja
ror
pop
cmpb
xor
addr16
je
add
ret
cmp
jo
and
aad
sub
cltd
push
jns
adc
mov
ljmp
mov
xor
fsubl
movsb
pop
add
push
mov
mov
incl
push
mov
mov
movb
adc
adc
in
jno
mov
iret
shlb
sub
sub
out
repnz
push
mov
lods
addb
in
ja
int
push
lret
nop
push
leave
pop
mov
int3
pop
mov
add
dec
outsb
sbb
subl
adcb
mov
in
pop
push
cltd
mov
or
dec
add
subb
cltd
mov
imul
add
leave
test
movl
out
sahf
xor
ret
pop
or
sbb
ds
mov
movsl
les
ljmp
fdivrl
addr16
test
movsb
out
ss
cmp
cmpsl
or
push
inc
lret
cmpsl
or
jb
into
scas
cwtl
js
out
xchg
js
pop
push
dec
pop
push
mov
cmp
fcom
adc
pop
shll
sub
jp
aaa
lods
data16
xor
inc
dec
inc
mov
gs
inc
cmpsb
adc
inc
push
add
push
std
daa
pop
push
mov
cmp
adc
mov
mov
or
mov
test
out
mov
repz
aas
sub
pop
push
push
stos
daa
and
out
test
dec
mov
lret
push
and
es
ds
pushf
and
daa
xchg
mov
cli
mov
arpl
int3
ja
movsl
daa
out
sub
push
jnp
or
or
cmpsb
ljmp
sub
xor
dec
repnz
xchg
data16
xor
iret
dec
imul
mov
push
inc
fsubl
subb
in
aaa
test
loopne
lds
add
test
mov
dec
shr
push
sahf
pushf
sar
ret
outsl
sbb
jae
cmc
les
mov
push
mov
loope
mov
int
pop
or
test
inc
stos
jae
test
push
push
movsl
mov
mov
das
test
xlat
ret
or
enter
popa
imul
mov
dec
ret
jb
mov
ja
es
cli
pop
insb
insl
psrlq
lock
ds
jo
js
stos
ds
pop
push
xchg
stos
outsl
icebp
ljmp
jne
mov
push
mov
nop
push
lods
mov
pop
sbb
mov
sahf
jne
cmc
cld
dec
sub
sahf
add
add
enter
jnp
add
clc
xchg
dec
dec
call
inc
test
sarb
js
imul
and
aad
push
mov
in
rcl
pop
xchg
adc
and
lods
and
enter
cld
mov
pop
test
sbb
dec
inc
stc
jae
mov
push
ffreep
xchg
movsl
xchg
aas
xor
sub
mov
test
cld
imul
test
cmp
adc
cmp
sub
dec
test
add
dec
mov
mov
or
jmp
loope
jnp
gs
insb
xor
leave
add
in
add
leave
shrb
jno
mov
xorl
loopne
inc
dec
enter
mov
mov
insl
scas
loope
pop
test
fdivrl
and
add
stc
jmp
hlt
pop
scas
xchg
aad
fmull
push
jae
fwait
scas
loope
xchg
movsl
push
add
push
mov
stos
inc
cmp
sub
inc
pop
fldt
call
and
popf
inc
add
shrl
push
mov
cli
cmp
xor
xchg
shll
ljmp
cmp
fs
pop
imul
icebp
enter
mov
enter
and
mov
pop
test
arpl
pop
push
inc
movsb
bound
dec
mov
cwtl
jns
sarb
mov
jge
inc
and
mov
dec
cmp
xor
jne
inc
out
repz
dec
js
xor
jne
subl
dec
jne
stos
jnp
add
adc
iret
lods
jge
jae
in
jl
negl
fstpl
add
adc
and
js
push
jo
cmp
imul
lock
ret
lds
pop
popa
and
push
out
roll
jnp
xor
fadds
jp,pt
ljmp
jae
inc
into
dec
les
mov
inc
xchg
pop
shlb
jmp
shl
xchg
xor
mov
xor
hlt
insl
push
xlat
movsl
mov
pop
bound
dec
pop
loope
popf
fwait
andl
ja
cmp
clc
or
adc
ret
lods
cmc
dec
insl
out
jmp
cs
cmp
scas
pop
jb
loop
inc
pop
shlb
add
and
inc
and
add
loop
mov
fwait
shrl
clc
ds
dec
imul
inc
push
sub
into
push
mov
inc
in
das
test
in
inc
mov
sarl
mov
cltd
adc
mov
data16
push
out
das
hlt
and
ret
lcall
call
sbb
iret
ja
xchg
xchg
adc
xor
jecxz
inc
and
sbb
push
mov
xchg
sub
sti
sahf
out
dec
loop
cli
sbb
movsb
xchg
std
xor
mov
sub
lods
in
aaa
pop
mov
rcll
cmpsl
fidivrl
mov
mov
shrl
adc
adc
sar
mov
dec
std
xor
pushf
jle
mov
xchg
jl
lock
push
and
std
xchg
mov
and
push
jnp
fsubl
mov
lldt
test
or
fists
imul
add
fsubrl
sbb
mov
test
dec
cmp
into
fwait
sub
adc
dec
push
mov
adcl
cmp
shrb
sub
cmpsb
jae
hlt
lea
mov
faddl
lea
outsl
mov
xchg
lods
fwait
add
cld
inc
xlat
dec
jae
popf
icebp
inc
mov
outsl
xor
movsb
test
mov
movsb
mov
int
mov
mov
add
adc
jb
xchg
dec
not
pop
bnd
dec
add
sub
inc
rorb
mov
sti
test
adc
les
sahf
sbb
rorl
ret
jmp
out
cmc
ja
test
int
arpl
ror
mov
divb
pop
sub
sbb
mov
adcl
std
xor
jnp
pop
lock
jmp
sub
dec
imul
push
fstpl
jbe
scas
stos
popl
shll
jb
mov
mov
xor
or
fcomp
pusha
xchg
pop
xchg
testb
inc
sub
les
mov
jne
rcll
std
xchg
fnstcw
fwait
mov
sbb
outsl
lods
orb
pop
fwait
iret
mov
mov
daa
push
inc
dec
add
inc
adc
ja
or
adc
mov
rolb
scas
cs
jmp
andl
push
ja
out
stc
push
xchg
and
and
xchg
push
push
andb
movsl
sbbb
jne
inc
mov
mov
stos
lret
adc
stos
jne
mov
adc
mov
mov
insb
sti
sub
mov
mov
cltd
jb
xchg
add
mov
dec
xchg
bnd
cmp
jb
lret
lahf
push
push
sti
dec
adc
mov
jecxz
mov
jle
or
dec
stos
mov
pushf
jecxz
lea
fdivrl
sbb
ljmp
fnsave
xchg
ljmp
out
fcomps
add
cltd
mov
std
mov
sbb
stos
pushf
pop
adc
xchg
sub
test
fcompl
imul
imul
xchg
push
shl
icebp
gs
je
lds
jnp
add
out
add
mov
andb
mov
aad
xchg
imulb
cmc
aam
mov
out
ss
or
pop
ret
fistpl
cmpsl
dec
les
jno
push
imul
push
adc
rorl
xchg
movsb
xor
xchg
ss
shll
insb
cmp
addr16
sub
popa
pop
repnz
aad
mov
jns
repnz
std
es
int
sbb
movsb
lods
pop
loope
or
pop
mov
xor
nop
lock
adc
push
rcr
xor
leave
out
bound
jp
test
pushf
bound
ja
das
pop
mov
lds
cmp
sub
mov
xor
lock
mov
jns
or
aad
sub
movaps
jae
mov
hlt
mov
or
mov
inc
dec
xor
insl
aaa
not
sub
mov
inc
fucomi
cmp
mov
rcrl
mov
stc
fildll
imul
mov
cmp
ret
pop
push
mov
mov
pop
fildll
stc
cli
or
iret
fists
cmp
rcrb
into
rorb
cli
int3
jo
out
repz
je
push
fcomp
push
dec
or
pusha
decl
fsubrs
imulb
shll
xlat
xchg
clc
add
addb
cmp
sbb
js
mov
push
xchg
xchg
sbb
testl
pop
subl
lret
mov
int3
mov
sbb
pusha
xchg
mov
sbb
add
dec
push
xor
pop
or
mov
mov
sarl
outsb
push
dec
cmp
pop
adc
sub
fbstp
xchg
mov
outsl
pop
xlat
scas
clc
mov
lcall
add
cmp
icebp
adc
fsubrl
push
sub
out
or
pop
xchg
xor
or
push
insb
in
loop
push
and
xchg
ljmp
stc
test
test
les
xchg
sub
jmp
sahf
add
loopne
dec
pop
xchg
dec
aam
lcall
ficompl
jg
jns
enter
xchg
pop
and
js
addr16
mov
mov
outsl
sbb
hlt
stos
dec
int
mov
daa
stc
pop
xchg
mov
in
lahf
pop
cld
sub
push
and
mov
movsb
jmp
outsb
shrb
popa
adc
enter
and
lds
out
icebp
push
sub
mov
add
adcl
aaa
jg
das
into
push
shll
mov
stc
filds
push
dec
mov
mov
cmp
dec
shrb
xor
sbb
fstpt
sarl
in
or
xor
xor
or
imul
and
sub
loop
ror
pop
rcll
insb
aad
testb
pop
es
jno
pop
mov
mov
mov
xor
ss
data16
mov
and
fcoml
gs
sarb
fbstp
sti
sub
dec
dec
outsl
outsb
mov
mov
scas
dec
into
push
inc
jno
imul
pop
push
sar
add
dec
xchg
sub
subl
ret
xor
hlt
rol
fld
pop
pop
jo
dec
lahf
adc
xor
xchg
xor
mov
test
ljmp
inc
xor
sub
getsec
pop
xor
mov
dec
pop
inc
sub
and
and
jbe
jno
push
ja
jg
out
ficoms
adcb
mov
and
adc
cmpsl
add
aad
mov
fisttps
sbb
iret
movb
push
aas
adc
sub
adcl
addl
inc
push
mov
lahf
movsl
xor
mov
sahf
sbb
in
dec
cltd
sub
jne
lock
xchg
out
aas
inc
jns
pop
sbb
sub
push
inc
sbb
loopnew
xor
xchg
adc
shlb
fistpll
jno
sbb
push
outsb
aam
or
or
inc
mov
inc
cmp
mov
jns
pop
and
out
jb
dec
push
push
cmpsb
xchg
push
push
int
inc
movsb
and
pushf
int3
leave
test
pop
cmp
nop
cltd
pop
sub
jge
and
mov
jmp
xchg
rcl
mov
cld
sub
sbb
adc
fwait
lcall
sub
jae
ret
rcll
fst
mov
cld
dec
sub
cmp
sti
mov
cmpsb
adc
jp
je
jecxz
loopne
in
hlt
sbb
sub
push
ret
or
in
jo
cmpsl
jp
sub
in
cld
movsl
sahf
je
subl
mov
mov
dec
inc
clc
scas
hlt
push
xchg
mov
fistpll
aaa
fwait
inc
adc
mov
imulb
push
cs
push
popa
repz
sbb
mov
xchg
pop
dec
xchg
mov
incb
int
jle
mov
imul
or
pop
xchg
dec
fstl
int3
pop
insb
fiaddl
mov
mov
mov
adc
insb
movsb
sub
ficompl
cmp
pushf
sbb
mov
adcb
insl
stos
imul
jb
xorb
insb
fbstp
ret
or
ret
mov
ja
mov
fs
mov
orl
decb
mov
or
pop
xor
int3
mov
add
call
and
imul
lock
sbb
sbb
std
je
hlt
scas
sahf
nop
test
movsb
stc
sub
jae
cwtl
nop
add
dec
insl
out
les
jae
adc
lds
cld
mov
mov
or
mov
pop
imul
inc
mov
andb
das
dec
add
sub
dec
out
or
and
ss
sub
jmp
mov
xchg
jmp
inc
in
jp
popf
mov
mov
or
sub
lea
fildll
xor
add
push
jo
loop
jno
cld
pusha
cmp
pop
dec
and
pop
lahf
rcll
cmp
stc
add
push
mov
mov
iret
aas
gs
adc
addl
xor
jle
add
inc
in
add
repnz
xchg
sbb
gs
stc
jo
daa
push
cmp
jns
mov
loope
add
notb
in
pop
adc
mov
mov
mov
in
stos
sub
jge
nop
cmpl
mov
ret
pop
pusha
leave
push
stos
ljmp
mov
add
mov
cmp
cwtl
jg
imul
enter
rorb
clc
lods
xchg
or
or
sub
jle
pop
or
js
and
xor
jnp
jae
fldcw
enter
jae
xchg
jbe
cmc
push
iret
xchg
inc
sbb
cs
push
cld
fidivs
cld
and
in
sbb
pop
cmp
mov
push
das
push
movsb
data16
ret
pop
aad
int
outsb
mulb
sbb
dec
ss
leave
dec
nop
xor
nop
adc
outsb
ret
imulb
iret
and
imul
test
cmp
or
mov
test
jecxz
in
mov
dec
pushl
inc
js
xor
loop
loop
add
std
daa
inc
xchg
xchg
sub
xor
push
hlt
xor
add
sbbb
fisubs
lds
lret
fdivp
inc
adc
sbbl
pop
push
cli
jp
addr16
movsb
push
test
jne
jecxz
pop
mov
jb
fcmove
jae
shrb
clc
inc
sbb
cmpsb
ja
lock
sub
adc
and
test
adc
in
cmp
cmp
adc
push
lock
in
xchg
ljmp
test
jge
xor
mov
ret
or
ret
sub
arpl
mov
jge
fcompl
xchg
jl
movsb
xor
push
and
je
pop
cmp
loopne
scas
jp
inc
inc
mov
in
jb
outsb
jae
call
sahf
outsb
jge
sbb
int
insb
lahf
imul
out
pusha
lea
push
inc
shl
ja
jns
ret
int
ss
ljmp
cwtl
div
mov
jno
adc
or
lea
lds
dec
js
pop
fwait
and
mov
es
out
pop
out
out
mov
ss
xor
stos
and
imul
mov
pop
int3
test
xchg
adc
cmp
fisttpll
test
out
aad
and
lahf
pusha
sub
rcrl
popf
test
cltd
pop
mov
insb
mov
pop
addr16
xchg
daa
daa
sub
test
jbe
inc
mov
test
test
sbb
js
sub
push
xor
push
or
aaa
push
push
addr16
cmp
aas
and
cmp
mov
cld
cmp
inc
rorb
add
pop
cmp
push
mov
cmp
lahf
into
push
cmp
add
push
mov
faddl
xchg
jmp
pop
cltd
dec
sbb
aad
jg
lret
lds
pop
mov
sbb
loopne
jl
call
sarb
pop
pop
ds
fxam
inc
push
add
and
push
divl
pop
aad
not
mov
iret
test
pop
and
xchg
mov
repz
cs
xchg
mov
push
mov
jecxz
sbb
insl
out
movq
jno
popf
out
cli
or
jb
push
push
inc
mov
xchg
lret
loop
and
sub
mov
ja
or
in
loop
or
sahf
sahf
sti
pop
int3
loop
out
roll
aad
dec
xor
mov
sub
fstpt
add
icebp
in
mov
add
xchg
pop
mov
popf
pop
pusha
arpl
mov
mov
dec
mov
or
jae
jo
cmp
or
sub
test
mov
dec
test
sbb
in
sub
jne
adc
jg
xchg
in
pop
adc
into
mov
push
clc
fcomps
push
add
push
xchg
push
out
sub
xor
xchg
or
cmp
push
imul
aaa
idiv
les
enter
fnstenv
dec
fisubrs
adc
inc
pop
js
popa
not
sbb
ja
mov
xchg
jae
cmp
sbb
out
loopne
inc
xchg
and
movsl
xor
fadds
push
cmp
dec
mov
pop
out
or
fmull
sbb
cwtl
les
scas
loope
ret
sbb
sti
inc
stos
jmp
lds
or
scas
rorl
fistpll
mov
test
jne
dec
testb
cmc
and
fsubrl
mov
push
jbe
dec
loope
addr16
aaa
jecxz
mov
xchg
cltd
add
mov
ficoms
imul
or
outsb
xlat
add
cltd
iret
mov
pop
jg
adc
sbb
lds
andb
jp
cmpsb
and
lea
fnstenv
xchg
push
jecxz
nop
test
adc
and
jl
mov
xor
fsubrs
jno
cmp
stos
jge
dec
rorb
and
int3
mov
push
push
aas
or
cltd
dec
mov
call
iret
jl,pn
mov
cltd
loope
push
shrb
and
arpl
push
mov
js
cli
and
xchg
shll
repnz
cmovns
xchg
dec
shl
mov
pop
gs
lcall
push
or
mov
dec
sub
dec
xor
dec
stos
add
or
out
ret
xor
popa
cwtl
dec
xor
pop
adc
push
pushf
mov
xchg
xchg
cli
fwait
xor
lret
add
mov
popa
int
xor
fsubl
mov
pop
inc
or
push
jnp
adc
std
cmp
mov
pusha
push
enter
lret
sahf
and
mov
xchg
push
pop
sub
fcoms
insl
xchg
bt
lahf
adc
in
push
mov
ss
imul
inc
in
mov
iret
mov
push
ret
mov
movsl
adc
cli
lret
sbb
lea
loop
dec
out
mov
rorl
nop
dec
add
jo
sub
sub
enter
and
cmp
std
repnz
addl
xor
out
mov
sub
orb
push
mov
lods
push
ja
inc
sbb
push
stos
popa
inc
out
scas
lea
fnstcw
fiadds
dec
cld
or
xor
in
and
outsl
cmc
sti
sti
mov
jno
xchg
pop
outsl
ds
mov
or
arpl
add
fwait
mov
mov
call
outsl
inc
sub
int
push
dec
mov
movsb
inc
cli
jg
dec
or
jmp
sub
or
mov
xchg
pop
mov
stos
mov
loope,pt
jecxz
pop
imul
scas
add
gs
pop
cmp
aad
movsl
lods
cwtl
inc
pop
stc
inc
loopne
xor
inc
mov
jbe
icebp
mov
jnp
jne
ljmp
fcmove
sub
cmp
xor
push
call
in
pop
in
in
ds
leave
test
add
mov
pop
or
push
push
scas
ss
mov
push
icebp
mov
mov
mov
in
hlt
add
jns
mov
jge
push
ret
pop
push
leave
out
and
lea
mov
cmp
fsub
loop
iret
fwait
jecxz
jmp
lods
cmp
call
fcompl
mov
roll
test
into
push
dec
loope
inc
mov
repz
xor
mov
js
test
stc
rsm
rcrl
pop
jg
cmpsl
mov
bound
push
mov
pushf
cmpb
pushf
in
es
sub
or
js
out
mov
xchg
lcall
es
xor
and
mov
andb
add
bnd
mov
mov
out
insl
push
mov
ret
xchg
adc
in
push
xchg
push
test
inc
sub
sbbl
mov
sbb
cs
popf
es
push
xchg
imul
adc
xchg
arpl
pop
inc
fxch
mov
xor
xchg
and
gs
imul
jne
inc
adc
push
mov
xchg
push
sahf
lea
test
nop
mov
aam
dec
cli
fnstsw
ficoms
adc
call
das
mov
xor
test
sbb
outsb
jl
repnz
sbb
pusha
mov
mov
sbb
popf
ret
inc
in
xor
jno
shr
cmpsb
adc
stc
mov
pop
cmpsl
and
jge
and
sub
jnp
or
mov
sbb
adc
dec
mov
loope
xor
bound
repz
cmpsl
test
dec
out
rorb
mov
into
inc
mov
and
insl
add
cmp
xchg
add
mov
sbb
insl
dec
insl
repnz
mov
add
mov
xchg
jmp
cltd
jg
mov
ds
addr16
jo
mov
xchg
mov
dec
fdivr
mov
sub
sub
mov
sahf
mov
push
jnp
cmp
inc
mov
adc
jmp
sub
mov
bound
clc
ja
out
jbe
movb
mov
sub
mov
inc
adcb
pop
fistpll
dec
cld
jne
adc
in
lock
std
sub
jmp
sbb
jns
loope
daa
pushf
lret
and
dec
movsb
fildl
mov
sbb
sti
jecxz
adc
dec
fcompl
jns
inc
dec
or
stos
out
insl
hlt
mov
push
pop
dec
add
mov
dec
sarl
roll
std
push
push
aaa
js
mov
and
mov
aas
mov
fs
in
push
test
dec
jb
jbe
jnp
mov
add
mov
inc
mov
insl
loope
mov
push
fdivrs
xor
aam
dec
imul
cli
call
mov
pop
daa
inc
test
add
jge
in
pop
fmull
mov
popf
stos
lods
jle
mov
adc
je
je
mov
jbe
xchg
rcr
lret
addb
add
fs
xor
pop
fnstsw
adc
insl
push
jmp
psubw
repz
call
ja
cmp
sbb
ficoms
jecxz
imul
aad
push
stc
xlat
sti
push
xor
sub
fsubl
jae
cmpsl
arpl
push
adc
loope
mov
add
aaa
sub
xlat
or
mov
cltd
cmpsl
mov
lahf
jne
shll
mov
mov
out
movb
outsl
push
push
inc
scas
aad
mov
inc
mov
shl
popl
popa
mov
cmc
test
add
xchg
aaa
and
sub
in
or
jae
sbb
loope
fisubl
ds
push
loopne
dec
sbb
ret
xchg
int
mov
or
and
sub
inc
dec
inc
jb
ret
push
mov
outsl
push
insl
cli
add
loopne
or
mov
or
jb
sar
sub
mov
rol
dec
jl
pop
or
mov
and
imul
popf
push
inc
lcall
fwait
mov
dec
icebp
fs
outsl
divb
rcrl
push
das
xor
outsl
rcrl
jmp
inc
pusha
jl
mov
mov
lock
nop
orb
xchg
inc
add
jo
cmpsl
jbe
mov
mov
push
push
or
push
jno
pop
inc
mov
imul
testl
std
mov
mov
lock
xchg
int
mov
cld
addb
mov
int
dec
popf
mov
jmp
adc
mov
in
lret
push
mov
sbb
and
jle
inc
mov
hlt
mov
enter
lds
pavgb
xor
and
int3
jo
adc
ret
xchg
push
leave
jae
add
mov
inc
and
cmc
mov
mov
mov
or
and
das
pushf
ficompl
lock
and
movsl
jp
gs
imul
sbbl
pop
cmpsb
pop
pop
std
pop
dec
or
sarl
sub
mov
add
add
xor
std
je
cmpsl
or
pusha
shlb
push
mov
mov
mov
int3
xchg
push
les
dec
gs
lods
movsl
in
mov
loope
test
mov
test
pcmpgtd
sbb
data16
call
mov
xchg
hlt
das
aas
mov
test
out
repnz
sbb
ja
mov
in
or
shll
fnstsw
sbb
test
ret
cmpl
sub
nop
inc
repz
outsl
in
jno
lods
mov
push
cmpxchg
jae
push
aaa
mov
mov
lahf
movsb
add
push
pop
jmp
jnp
dec
clc
and
gs
fcomps
arpl
fs
and
sahf
sub
or
loop
cmp
jmp
outsb
inc
jo
jecxz
aam
repz
pusha
xchg
icebp
xorl
pop
and
addb
movsb
push
mov
movsl
fst
mov
hlt
jl
xor
in
sub
inc
ret
and
in
insb
fdivrs
inc
inc
les
sarl
in
fstl
dec
sub
outsb
add
and
sbb
adc
add
jle
fnstcw
or
cmpsb
sahf
daa
aad
push
jmp
mov
inc
fdivrs
mov
insl
mov
mov
pop
cmp
xorl
in
js
dec
stos
test
lea
sub
mov
mov
adc
dec
sub
xor
pop
sbb
and
imul
arpl
adc
mov
lea
jge
jg
aad
pop
ds
inc
bound
mov
jge
mov
js
aad
fcmovu
mov
or
pop
loopne
jmp
jge
cli
cmp
mov
rorb
xor
in
stos
jecxz
adc
mov
xchg
push
mov
decb
mov
mov
xor
ucomiss
xorl
leave
aaa
mov
cltd
insl
jecxz
mov
les
clc
jge
popf
sub
xchg
inc
push
pop
ds
pop
xor
in
inc
scas
sub
stos
lea
movsb
inc
mov
cmp
lret
les
or
je
cwtl
adc
lahf
pop
pusha
in
cwtl
add
xor
arpl
mov
push
scas
repnz
and
mov
sbb
int3
ss
enter
cli
push
xchg
mov
addr16
inc
jbe
push
add
and
leave
add
dec
mov
negb
xchg
push
jg
js
adc
setg
dec
mov
out
pop
push
mov
inc
or
es
lret
jmp
sub
push
out
dec
loopne
sbb
shr
fcom
dec
jno
dec
movsb
mov
jp
daa
rcrl
pop
adc
loopne
icebp
je
ja
jno
dec
sub
cmc
mov
lods
or
add
popa
jmp
xchg
xchg
adc
mov
xchg
sub
inc
cltd
shl
mov
mov
or
xchg
or
hlt
pop
sub
aas
push
xchg
fildl
fnsave
pop
pop
pop
push
mov
jne
xlat
mov
sub
enter
sbb
lahf
mov
and
sbb
mov
xchg
adc
lods
out
shlb
lahf
sbb
ss
pop
in
push
pop
mov
jo
rclb
cld
movsl
ret
jnp
imul
test
adc
inc
stc
fucomi
cmp
mov
lcall
rolb
lds
dec
xor
testl
jp
in
sub
data16
mov
je
leave
insl
sbb
test
cltd
dec
es
ss
fwait
mov
xchg
and
jge
sti
and
call
fadds
shl
cmp
test
mov
cmpsl
mov
sub
mov
ror
jp
lahf
stos
cmp
or
je
inc
fs
add
sti
ljmp
les
inc
jns
pop
cmpsb
mov
push
adc
imul
adc
out
int3
ds
clc
jecxz
cmpsl
in
fidivrl
xor
push
xor
push
cmp
lds
push
cmp
insb
lods
dec
repnz
mov
cmp
loop
or
cwtl
dec
sub
xor
cmc
in
std
out
hlt
pop
popa
mov
mov
cmp
jne
push
mov
aas
jae
cli
jle
lods
repnz
iret
pushf
jecxz
out
jle
push
cmp
addr16
xor
push
test
sbb
cmp
inc
or
shrl
dec
inc
mov
das
and
pushf
fwait
call
cmp
sub
mov
add
dec
sbb
shll
jmp
ds
cmp
loop
jecxz,pn
jmp
and
out
and
push
jno
loop
pop
iret
sbb
fidivs
ss
push
push
sub
xchg
fs
adc
adc
cmp
xchg
test
into
fadds
divb
adc
int
enter
fsubl
or
sub
adc
cwtl
push
in
in
in
mov
sbb
or
rcll
pop
sti
je
pop
dec
jl
stos
sbb
add
xor
jge
xor
insb
inc
xchg
lock
dec
push
mov
push
jo
rcl
insb
jge
dec
rolb
dec
out
ds
test
jae
inc
into
add
jno
loop
fwait
mov
mov
cmp
std
sbb
sbb
lret
test
and
mov
inc
sbb
dec
ret
cs
dec
ja
xchg
xor
push
sub
sbb
sbb
sti
pop
xlat
aaa
lods
push
mov
sub
inc
xor
lahf
pushf
sub
xchg
ja
mov
push
loop
inc
xchg
ret
ss
in
inc
movsb
pushf
or
xor
pop
push
stos
add
dec
cmp
lret
pop
jecxz
sbb
xlat
stc
lock
loope
push
inc
lds
sub
outsb
dec
rcrl
into
movsl
ds
mov
scas
fwait
inc
or
jno
popa
sub
notl
jae
dec
ficomps
push
inc
lods
mov
mov
stos
das
ljmp
push
lea
dec
mov
pop
je
mov
addb
repz
jns
inc
push
shlb
not
mov
lret
std
out
test
aaa
xchg
sbb
rcrb
push
cwtl
pop
push
out
push
and
in
jnp
xor
cmpl
leave
push
push
filds
cmp
mov
pushf
and
lahf
xor
ret
adc
mov
pop
adc
jae
std
mov
pop
jecxz
lcall
lcall
out
popa
iret
pop
dec
xchg
js
jae
mov
push
jg
ja
sbb
sahf
pop
push
mov
pop
inc
ds
mov
test
arpl
mov
pop
mov
imul
and
xchg
adc
push
pop
cwtl
test
rclb
ficomps
out
int3
lcall
pop
adc
cmpsb
ret
loop
mov
dec
inc
jae
jno
test
movsl
in
test
repz
xchg
iret
fcom
cmp
leave
push
inc
lods
test
in
jns
push
shl
xor
scas
into
cmp
daa
test
scas
fcomps
jge
call
add
xchg
jmp
mov
adcb
add
in
mov
sti
xor
mov
pop
out
add
in
adc
add
fsubl
aaa
push
lahf
and
inc
in
sarl
and
dec
movsl
mov
and
and
into
xchg
add
or
adc
scas
jl
mov
rcr
movsb
scas
repz
fdivrl
in
inc
add
es
imul
or
dec
inc
cmp
push
test
fucompp
fwait
jno
icebp
cld
mov
push
test
jnp
in
xchg
dec
sub
mov
bound
adc
lahf
and
rcll
dec
mov
sub
dec
test
mov
dec
xor
orb
dec
sub
dec
out
bound
mov
std
and
repnz
inc
inc
cli
fidivrs
cmp
push
lret
loop
aam
icebp
mov
sub
xor
lcall
out
out
add
fsubrs
jb
sbb
andb
fisubl
sbb
stc
iret
lods
adc
out
imul
jnp
or
andb
pop
mov
imul
in
sub
adcb
lods
fnstenv
fnsave
notb
lahf
loopne
xchg
jg
test
fcmovu
mov
testb
mov
cmp
mov
frstor
push
inc
jnp
mov
in
jbe
pop
dec
sub
roll
adc
or
sub
jo
insb
mov
lret
mov
ljmp
cmc
jns
in
ja
pop
popf
xor
lods
jecxz
mov
jo
add
cmpsb
adc
loopne
fldt
pushf
sbb
cmp
mov
adc
sbb
mov
inc
clc
mov
jl
cmp
sub
push
inc
pop
cli
sub
loop
or
cltd
pop
rorl
aam
ja
sahf
flds
out
push
inc
sub
push
jg
aam
roll
sbb
mov
pop
sti
jo
clc
das
shll
mov
cmp
aam
jnp
aad
cmp
xchg
in
movsb
jo
push
jl
movsb
int
inc
xchg
adc
insb
sub
push
sarb
push
and
add
mov
push
hlt
arpl
push
sbb
lds
push
add
pop
mov
mov
lods
sub
aad
imul
push
mov
or
nop
arpl
sbb
mov
dec
mov
nop
test
mov
xlat
add
in
in
jns
mov
cli
nop
aas
loope
pushf
in
add
sbb
and
scas
stc
call
fwait
sub
js
xorl
mov
lret
aam
pop
jmp
fimull
mov
lods
adcb
and
int3
daa
add
sub
jb
inc
int
pusha
in
fdiv
mov
sbbb
mov
mov
repnz
inc
add
loop
and
stc
jp
cmpsl
mov
ret
div
push
adc
mov
repz
jb
cmp
jnp
xor
cli
mov
dec
dec
je
shll
mov
pusha
push
stos
adc
add
movsl
mov
mov
pop
or
mov
cwtl
mov
data16
scas
repz
or
std
ret
push
add
jp
jmp
sbb
rcrl
fidivl
cmc
into
mov
andl
xchg
push
int
iret
pop
loop
insl
jg
rorb
jge
adc
sub
movsb
push
adc
into
call
test
iret
add
enter
call
mov
mov
fsts
pushf
out
call
aaa
or
stc
lods
rcr
sub
sbb
xor
movsl
adc
jnp
lret
push
lods
xor
dec
lods
cmpl
or
ljmp
inc
or
xor
sbb
sahf
push
sbb
sahf
or
inc
jno
xchg
and
push
test
stos
aad
rol
xchg
adc
sbb
ljmp
push
hlt
out
jae
mov
icebp
add
jno
xor
adc
outsl
daa
sub
aam
pop
xor
rcl
xor
test
js
lahf
in
push
or
daa
sbb
mov
popw
fyl2x
in
test
fisubrs
out
pop
ljmp
mov
cmpsl
daa
insl
rcll
xchg
rolb
dec
dec
jne
pop
jmp
inc
and
in
push
push
push
pusha
out
ljmp
push
push
jge
jae
pop
mov
dec
in
hlt
pop
clc
and
jl
cmpl
and
push
pusha
xchg
mov
mov
cmpsl
movsl
cmpsb
mov
cmp
stc
or
arpl
ret
faddl
in
inc
pop
push
sub
leave
mov
cltd
mov
dec
test
xor
fstp
addr16
pusha
out
push
mov
cwtl
ja
lcall
jmp
insb
lret
jg
mov
mov
insl
xor
sbb
fisubl
test
cmpsl
xor
push
xor
sar
je
mov
push
xchg
push
nop
cmc
sbb
mov
push
lods
cs
in
ffree
test
sub
sub
jg
push
addr16
cmp
push
and
sub
sbb
mov
movsl
dec
adc
je
bound
orl
scas
push
or
jmp
sub
fdiv
les
jbe
scas
out
push
inc
icebp
les
adc
dec
cmpsb
push
fstl
mov
in
sbb
mov
jle
jo
in
or
fistps
sub
lock
lods
adc
mov
enter
in
pop
jne
insb
rcrl
and
fwait
pop
xchg
and
mov
pop
lea
dec
xor
aas
out
sbb
jb
std
lds
stos
dec
push
loop
popa
cmp
xor
lock
mov
push
xchg
push
inc
pop
pop
pushf
mov
rcr
push
pop
iret
mov
add
xchg
add
or
mov
inc
adc
mov
icebp
mov
xchg
out
out
jg
push
nop
dec
mov
fstl
xor
jmp
push
insb
aas
out
xor
dec
outsb
xor
push
xor
test
icebp
fldl
test
adc
mov
out
cld
push
jns
jmp
inc
inc
cmp
or
adc
cmp
or
pop
dec
cmp
and
ret
ljmp
and
orl
mov
outsb
stos
jae
aaa
in
cmp
aaa
and
testl
push
outsl
jl
or
mov
push
or
push
and
pop
ret
jp
bound
adc
jg
in
push
mov
pop
call
sub
clc
lock
sbb
cld
mov
sbb
xchg
push
sub
imul
push
popf
mov
mov
in
ljmp
fldenv
les
js
cmpsb
out
pop
adc
push
cli
jbe
mov
xor
xchg
add
in
imul
leave
sbb
mov
dec
rcr
std
jbe
scas
out
push
mov
cmp
cli
test
insb
aas
xor
lock
dec
popf
cltd
fbstp
shll
int
and
fld
adc
add
mov
mov
jg
adc
icebp
push
imul
sub
dec
cmpsb
iret
dec
ja
pushf
add
push
outsb
aas
xor
xchg
cmp
mov
fimull
pop
scas
adc
dec
cli
andl
pop
jb
cwtl
xchg
pop
push
int3
ret
pusha
add
inc
cli
stos
mov
jo
pop
fldpi
mov
push
leave
jb
dec
mov
lods
dec
sahf
mov
daa
fcmovbe
push
js
test
add
loope
mov
shlb
sub
mov
add
repnz
xchg
mov
pop
stos
push
jno
cmpsb
push
mov
dec
subb
xor
xor
mov
outsl
fbld
mov
stc
int
fs
loop
decl
in
mov
sarl
repz
pop
pop
inc
mov
leave
mov
push
es
stc
insl
xor
push
out
cmp
cli
mov
cmpxchg
push
inc
dec
sbb
cwtl
and
enter
cmp
xchg
sahf
negb
sub
test
inc
pushf
imul
xchg
outsl
and
addb
js
shl
das
sbb
xor
aam
in
add
icebp
inc
jo
mov
es
cmpl
out
mov
jp
fnstcw
loop
jmp
lds
mov
push
cmp
add
xchg
fdivs
ret
ljmp
arpl
test
aam
stc
test
lods
test
je
in
negb
pop
popf
xchg
lahf
dec
pop
inc
cmpsl
fmull
pop
in
int
mov
aad
cwtl
leave
mov
mov
addb
in
cmpb
fmuls
adc
sarl
insb
fnstcw
sti
sbb
jp
dec
rcr
xchg
dec
push
movsb
push
mov
les
in
push
scas
add
add
and
xor
dec
rolb
mulb
jo
lock
popf
je
fs
add
repnz
clc
insl
mov
icebp
out
lods
adcb
and
repnz
aas
out
roll
mov
pop
movsb
mov
push
pop
mov
add
push
cmc
cmp
call
scas
sbb
hlt
xor
clc
mov
sub
mov
push
jnp
std
scas
sbb
imul
mov
addr16
or
add
arpl
aad
stos
xor
fs
mov
push
popf
ja
aad
in
mov
or
jge
movsl
movsb
add
cmp
stos
aas
xchg
jp
mov
jmp
add
push
iret
aam
ret
and
stos
xchg
mov
pusha
pop
outsb
pusha
rcl
in
je
fsts
jnp
lods
jp
jo
int3
sub
inc
fcomps
or
pushf
mov
mov
data16
mov
inc
inc
pop
nop
push
sub
out
push
aad
jp
sahf
pop
push
pop
mov
adc
sbb
cmc
inc
dec
insl
xlat
iret
mov
jle
xchg
cmp
cmp
pop
cmp
rcrb
pop
mov
sbb
fwait
into
dec
push
push
cwtl
adc
jl
divl
ret
cmp
fisubl
pop
ficoml
cmp
xchg
mov
pop
add
fs
inc
lahf
mov
lea
shrl
push
mov
mov
test
cmc
lahf
lcall
cmp
dec
movsb
xchg
push
mov
or
pop
push
stos
mov
mov
push
outsb
nop
addr16
sbb
fdiv
or
mov
adc
into
dec
mov
lea
jp
sub
scas
dec
cmp
mov
test
out
sbb
jle
xor
adc
mov
fldt
rcrb
mov
and
addr16
push
fidivrs
xchg
rcll
out
cmpsb
sub
and
loope
into
cmp
sar
xchg
xor
in
jns
inc
xor
mov
lcall
call
jne
loope
jae
mov
dec
xchg
lret
in
push
les
jns
addb
xor
xchg
icebp
loop
clc
cmp
mov
out
cmc
movsl
mov
in
push
in
push
scas
pushf
push
pop
jp
jecxz
mov
and
lret
mov
push
enter
cmp
ss
mov
repnz
push
insl
mov
movsb
push
adc
repnz
xor
sti
sub
sub
inc
cltd
xchg
jae
mov
mov
inc
push
cmp
pop
imul
pop
stc
sub
inc
pop
addr16
pop
fidivl
mov
dec
movsb
jp
bnd
arpl
rorl
in
sbb
jl
adc
repz
adc
popa
pop
adc
and
sbb
lret
xor
iret
fcmovne
dec
jp
adc
fmull
add
repnz
or
cld
popf
call
adc
ret
jne
iret
mov
icebp
push
dec
sbb
fistps
xchg
ljmp
jae
cmp
rorb
xchg
xor
cmp
popa
push
cmp
addb
test
xchg
cmp
mov
add
or
rcrl
xor
test
jle
pop
pushf
in
cld
dec
sub
pop
mov
mov
hlt
push
js
adc
fcompl
int
sub
cld
test
dec
mov
lock
ficompl
movsl
cmc
loopne
push
bound
add
sub
fcomps
test
and
xchg
in
int
adc
push
jb
xchg
adc
lret
adc
dec
dec
ljmp
mov
push
adc
out
js
xchg
stos
cli
push
in
scas
dec
sbb
pop
popf
mov
adc
cmp
test
inc
adc
mov
lock
push
pop
mov
dec
mov
jmp
iret
in
inc
sub
inc
inc
dec
cld
sar
test
mov
cli
out
inc
mov
jno
aad
sbb
pusha
cmp
nop
cmp
xor
mov
fadd
dec
data16
push
jno
jp
xchg
add
xchg
outsl
cmp
pop
int
jne
and
ja
fnstsw
shl
fwait
pop
inc
inc
pop
push
xor
inc
jle
insl
jns
aam
flds
xor
and
lret
adc
ss
push
mov
push
dec
push
xor
dec
fisubs
sub
xor
mov
mov
out
adc
lods
xchg
sti
scas
clc
mov
mov
mov
pop
inc
std
cmc
call
or
push
push
adc
fnstenv
xchg
and
inc
sbb
jecxz
maxps
out
cwtl
push
insl
pop
shll
ljmp
icebp
inc
jbe
orb
xchg
mov
adc
arpl
mov
leave
bnd
push
and
inc
cmp
cmp
aam
leave
mov
pop
push
loop
jbe
and
shll
xchg
test
add
xchg
out
dec
incl
das
out
out
popa
outsb
and
lea
inc
jo
fcmovu
loopne
push
aaa
sbb
ss
je
cld
outsb
mov
cmp
icebp
loope
int
sbb
insl
clc
aas
and
aam
les
jne
divb
test
jnp
jbe
mov
push
lea
cld
mov
push
mov
out
rclb
jmp
xchg
fisttps
cltd
push
inc
mov
sahf
hlt
sub
mov
ss
xchg
add
rorb
push
xorb
in
fistps
cld
movsl
fsin
cmpsl
adc
mov
push
adc
std
sbb
cltd
jge
icebp
fisubl
pop
push
ror
cmc
sbb
push
adc
push
or
adc
lods
mov
pop
dec
sbb
mov
adc
pop
jl
xor
push
cmpb
xlat
sti
repnz
decl
outsl
cmc
repz
mov
cmpsl
push
scas
inc
sbb
sbb
pop
add
imul
lret
cmp
aas
add
mov
nop
pop
lahf
adc
cli
insl
mov
cmpsb
lret
mov
pop
bound
icebp
push
sti
lret
adc
jno
lret
push
push
daa
rorb
jg
pusha
or
mov
jmp
es
inc
bound
in
jno
push
xor
nop
cmp
fstp
mov
push
jp
dec
mov
mov
fildl
stc
adc
movsb
mov
mov
or
dec
xchg
pop
xor
lret
gs
add
inc
mov
ret
fstps
and
stos
cmp
loopne
cltd
jne
inc
jnp
push
xor
cltd
xor
insl
jb
pop
lds
or
inc
stos
dec
fwait
xchg
jge
outsb
sub
dec
pop
testl
jnp
mov
inc
les
xchg
test
roll
cwtl
sub
test
push
ret
std
mov
xchg
lret
popa
mov
test
pop
vpshaw
test
add
cmp
nop
test
sbb
insb
out
push
cmpb
and
dec
add
sub
fwait
cmpsl
stc
cs
inc
sbbl
inc
shlb
loopne
cmc
xchg
sbb
sub
xor
aam
xchg
rep
jae
loop
jbe
mov
iret
outsl
inc
sub
jge
fistpl
mov
das
adc
dec
dec
and
andb
xor
aaa
mov
mov
pop
jle
pop
out
movsb
shrl
jno
sub
daa
loop
adc
int
mov
mov
pop
lds
inc
in
repnz
stc
and
popf
push
cs
jge
xchg
xchg
cmp
outsl
push
bnd
mov
enter
mov
jo
pop
mov
xchg
push
out
lods
push
sub
mov
and
push
addr16
adc
pop
sbb
mov
push
or
lea
sub
sub
mov
mov
jmp
addr16
aaa
pop
jge
pop
mov
dec
in
mov
jge
mov
push
xor
cwtl
mov
xor
leave
sub
clc
aad
std
pop
mov
add
mov
inc
inc
fisubrs
in
fildl
pop
outsl
pop
pop
cli
xor
imul
fidivrl
dec
sub
inc
outsb
out
fdivl
gs
daa
xor
or
or
sub
addr16
cwtl
lret
stos
sub
mov
inc
jae,pt
push
mov
xchg
test
cmp
xor
std
lock
mov
mov
cmp
je
aam
dec
lea
lods
or
pop
push
inc
pop
ret
jecxz
in
int
addb
gs
adc
sub
dec
or
test
movsl
mov
cmc
and
mov
inc
repnz
xchg
adc
insb
ds
test
push
in
leave
jecxz
or
imul
stos
decl
sbb
movsl
dec
fcomps
rcll
shrl
sbb
test
inc
xchg
shlb
mov
inc
lds
add
jge
icebp
xchg
lods
adc
mov
xor
jmp
xchg
in
sbb
filds
stos
sarl
rol
stos
mov
ljmp
inc
mov
cld
es
jle
dec
icebp
pop
add
pusha
faddl
xchg
ljmp
ret
xchg
js
xorb
cld
loopne
bound
ret
xchg
or
jp
xchg
inc
pop
loope
jl
mov
gs
add
aas
loope
loop
jmp
push
outsb
xchg
bound
test
es
push
pop
fdivrl
rcr
fiaddl
adc
test
add
inc
push
das
movsb
lds
mov
inc
cs
push
outsl
pop
cmp
cs
mov
mov
cmovp
scas
sarb
dec
jb
out
and
shrb
pop
in
outsb
add
or
or
sahf
sbb
xlat
jo
jecxz
and
pop
pop
pop
repz
clc
inc
mov
add
stc
sbb
or
out
call
int
mov
test
lds
ljmp
xchg
sub
stos
pop
imul
insb
mov
push
enter
push
mov
add
push
or
cmp
js
aad
push
scas
pop
aad
cwtl
loopne
sahf
dec
cs
ret
add
mov
clc
movsl
mov
mov
int
mov
fmull
imul
pop
mov
dec
imul
out
adc
out
ds
dec
sbb
mov
pop
mov
adcb
jae
mov
push
gs
sbb
ret
mov
jecxz
push
stos
push
mov
lds
subb
lcall
out
jmp
push
aaa
jae
cmp
icebp
sbb
jmp
pop
pop
adc
arpl
fwait
pop
in
jne
mov
sub
int
loop
pop
xor
movsb
push
add
jecxz
adc
loop
add
imul
cmc
add
mov
jle
sub
repz
dec
shl
xor
adc
fwait
orb
mov
add
aad
push
addr16
add
sbb
mov
js
into
popa
mov
mov
les
xchg
mov
inc
imul
jnp
js
jns
and
test
sub
mov
into
and
stos
in
add
xchg
push
pop
xchg
out
inc
bnd
movb
or
les
adc
adc
adc
cmp
xchg
rclb
shll
jge
je
in
cli
mov
sarl
inc
xchg
test
repnz
arpl
sti
enter
xchg
push
push
mov
lcall
fidivs
lcall
incl
les
fcoml
hlt
cmpb
out
loope
mov
lea
inc
shlb
in
cmp
and
push
repz
test
pop
jp
sbb
ret
mov
inc
add
sub
xchg
mov
sar
pushf
clc
clc
and
jne
ljmp
pop
leave
push
jle
daa
cwtl
movb
fildl
jnp
cmpsb
dec
fwait
lcall
xchg
shl
xchg
adc
aaa
aam
dec
sbb
ficompl
lret
rcrb
add
mov
dec
xchg
pushf
mov
push
fsubrl
test
int
mov
mov
pop
inc
pop
pop
dec
dec
mov
shr
jge
add
lock
mov
loope
adc
dec
push
sbb
xchg
inc
in
cmp
shrb
jo
push
std
cmp
inc
add
into
and
daa
ja
push
cld
mov
push
cmp
or
mov
call
mov
aad
sahf
lods
or
negb
aaa
sub
add
jb
jl
fcomps
sarb
push
das
jns
adc
subl
pushw
push
jg
iret
sub
out
mov
leave
add
mov
pop
popf
and
push
jo
adc
cmp
movsl
test
push
repnz
dec
mov
das
cmp
test
in
xor
push
fidivrl
nop
pop
mov
xchg
shl
jp
and
or
aaa
push
xadd
pop
mov
mov
mov
dec
xchg
lods
rolb
lret
shlb
lock
ret
fsubrp
not
dec
sbb
inc
or
inc
sub
cmp
inc
iret
jecxz
dec
dec
mov
add
sbb
xor
orb
loopne
mov
js
ffree
hlt
xorb
lret
add
adc
sub
lock
ja
jmp
iret
test
aam
mov
push
ret
push
cmpl
mulps
adc
loopne
lret
roll
mov
and
fdivrs
xor
xor
outsb
push
or
int
rol
pushl
add
add
pop
mov
jnp
outsb
add
dec
and
mov
fmull
or
jg
or
test
mov
fsub
shl
lods
imul
push
xor
imul
les
mov
lret
jl
jle
jle
insb
test
fldenv
dec
out
jle
mov
push
pop
call
inc
jae
in
pop
sub
and
clc
scas
or
cmp
fs
sti
mov
jg
enter
fs
dec
adc
add
sti
in
dec
mov
in
mov
mov
dec
inc
notb
loop
pop
push
in
fnstcw
sbb
xchg
iret
movsb
mov
push
xchg
push
cwtl
sub
punpckhbw
jno
stos
int3
jge
loope
pop
sub
dec
leave
js
into
mov
jmp
nop
fwait
inc
sub
ds
mov
stos
dec
in
add
aad
push
clc
test
cmp
xor
push
jecxz
pushw
cmpsb
test
aad
jae
scas
cmpsb
mov
lock
mov
mov
xor
pop
popa
sub
pushf
mov
xchg
aas
mov
or
mov
inc
out
sub
add
add
aaa
sub
and
scas
sarl
cld
out
clc
into
push
inc
xor
hlt
sub
aaa
lock
dec
stc
lock
testl
pop
mov
push
xchg
cmpsb
dec
pop
pop
cmc
aas
push
ret
lock
xchg
inc
lahf
jns
repnz
and
mov
pop
and
pop
jae
pusha
in
pop
stc
or
mov
cld
xchg
xchg
lret
push
sbb
add
insl
js
xlat
xor
aas
jb
incl
mov
nop
sbb
repz
stc
adc
mov
test
adc
mov
orl
ja
icebp
lret
jle
outsl
mov
and
aad
jg
out
idivl
ror
mov
call
xchg
jge
mov
xor
push
pushf
mov
shlb
xchg
mov
lock
cltd
sbb
out
mov
ret
jbe
mov
lock
adc
jne
xor
sti
push
daa
repnz
jne
insl
clc
mov
movb
dec
dec
pop
daa
and
xor
lds
adc
sub
jns
test
xchg
jp
test
xchg
sti
in
das
jg
cmovbe
popa
push
int3
into
out
fcomps
sub
loop
and
ds
add
imul
jns
xor
fwait
xor
cmp
or
sub
pop
sbb
jl
jle
jmp
adc
inc
jns
mov
cwtl
and
mov
negl
xlat
loop
adc
push
mov
mov
pop
mov
jp
addr16
cmp
iret
arpl
pusha
add
dec
jb
pop
jo
mov
sub
push
shll
mov
xchg
and
and
cld
mov
nop
aas
aas
jle
push
in
daa
ds
pop
jecxz
xor
stc
lret
fwait
lret
mov
mov
xchg
xlat
fsincos
cmpsl
pushf
in
das
in
insl
pop
in
mov
ret
rcll
sahf
jecxz
and
imul
loope
mov
lods
mov
es
jns
lret
and
insl
int
shr
js
or
and
loopne
negl
adc
jo
stc
popf
mov
add
pop
mov
or
cltd
outsl
or
mov
push
add
out
fcoml
clc
pop
int3
xchg
lret
pop
std
mov
push
adc
cmp
sub
and
addr16
scas
jbe
sarb
mov
fsubs
int
aas
add
mov
ret
mov
pop
sti
stos
ret
lock
xlat
inc
pop
lods
bound
aad
stc
lcall
cmp
in
xor
inc
lock
out
lret
ljmp
cmp
mov
ficoms
dec
lods
iret
xchg
sub
push
pop
adc
in
mov
repnz
inc
fldcw
in
cwtl
shrb
shl
fimull
iret
and
mov
xchg
inc
popf
xor
std
lea
mov
dec
cmp
xchg
vprotb
lods
rclb
xor
and
test
pop
stc
xor
push
xor
loop
addl
cmpsl
xchg
jmp
push
push
test
push
jno
pusha
loopne
lods
pushf
shrb
enter
adc
rorl
sbb
and
push
and
loop
mov
test
pusha
enter
jbe
outsb
adc
mov
push
in
mov
std
or
mov
test
pop
and
sbb
fisubs
push
inc
adc
in
pop
xor
jp
scas
sar
test
pop
test
jns
lods
xor
cmp
pop
lcall
test
sti
in
push
loopne
fs
roll
cmp
inc
lods
out
sub
dec
test
leave
and
fistpl
mov
cmpsb
inc
sub
orl
loopne,pn
or
jmp
add
xor
push
jle
mov
inc
fsubrl
movsl
add
push
rcl
sub
mov
mov
outsl
sbb
or
dec
or
lahf
sbb
daa
mov
das
push
pop
sbb
pop
push
fstl
mov
inc
rcll
aas
sub
jae
mov
shl
add
pop
xchg
and
bound
xor
aam
cwtl
and
sbb
repz
or
xchg
movsl
pop
add
movsb
adc
mov
jg
andb
out
pop
xor
pop
or
xchg
jb
out
mov
or
push
bound
xchg
or
popf
inc
jbe
arpl
cmp
sti
cmp
sbb
rcrb
mov
icebp
fisubl
inc
loop,pt
sub
arpl
mov
hlt
insb
sub
mov
push
cwtl
xchg
jne
lods
and
movsl
loop
mov
push
push
aad
mov
push
in
mov
inc
loopne
cmpsl
mov
sbb
xchg
cmp
inc
mov
or
jnp
sti
cwtl
cmp
ljmp
frstor
adc
test
popa
mov
sub
push
aas
daa
fidivrl
push
aam
nop
jo
pop
jmp
sbb
test
and
adc
sahf
je
arpl
xchg
pop
mov
insb
mov
je
sub
leave
mov
adc
push
cmp
sti
shl
or
add
ret
icebp
shrb
loop
mov
cmpsl
loope
lahf
xchg
je
sub
sbbb
in
sahf
popf
test
xchg
fs
ss
in
lods
mov
pop
cmp
insl
and
sub
lock
mov
outsl
or
push
in
mov
inc
push
stc
lret
out
mov
cmp
shlb
notb
rclb
mov
mov
fsubl
add
adc
or
and
mov
imul
and
mulb
xor
jne
das
rclb
in
jp
xchg
ja
xchg
out
cmc
mov
xor
popf
adc
scas
arpl
xchg
sub
test
xchg
stos
fdivp
rcl
test
rcrl
loope
leave
loope
es
rorl
std
pop
leave
jbe
mov
daa
icebp
inc
ret
push
xor
leave
js
sbb
fwait
inc
cmp
int3
es
in
inc
ret
sub
xor
cmp
outsb
lret
sbbl
arpl
in
mov
push
mov
lahf
lods
push
inc
lcall
cmpl
adcb
mov
addr16
and
mov
mov
add
gs
sbb
jle
fdivs
test
fmuls
stc
test
pusha
popa
jecxz
sub
or
xor
ret
sub
repnz
leave
add
xchg
dec
push
jge
les
and
imul
movsl
xor
xchg
adc
pop
nop
mov
in
je
xchg
inc
push
js
movsb
sbb
inc
inc
mov
movl
jne
xor
out
imul
mov
subb
add
out
ret
fcmovu
fsts
add
movsl
lret
cli
jnp
ret
xchg
iret
out
mov
add
sahf
lret
in
sar
hlt
jmp
fs
push
xchg
jo
enter
xchg
lods
or
inc
lock
dec
lret
jb
jo
mov
mov
test
repz
lea
sahf
adc
xor
mov
pop
andb
cmpl
movsl
mov
push
jne
dec
adc
sub
inc
or
push
jmp
lock
cmp
mov
sub
adc
pushf
stos
jmp
outsl
jp
rcl
inc
ret
cld
push
push
mov
movsl
cs
leave
cvtdq2ps
aad
lds
into
adc
ret
rclb
push
push
rcr
rclb
jecxz
es
mov
lahf
mov
mov
adc
add
pop
dec
cmp
les
sti
fwait
cmpsl
outsb
jmp
nop
or
mov
push
mov
leave
test
inc
sub
mov
ficoms
mov
call
sti
clc
lret
fistpl
shr
nop
push
add
xor
or
mov
xchg
push
push
lret
cli
or
nop
nop
and
stos
out
lods
pusha
add
aam
mov
popa
fs
xor
add
pop
out
push
in
orb
hlt
int3
outsb
jle
outsb
adc
mov
ss
or
inc
cmp
push
mov
adc
jecxz
and
sub
dec
xor
xchg
fmull
adc
ljmp
or
sbb
and
xchg
lret
outsl
clc
pushl
xor
pop
addr16
cmc
stos
jbe
sub
inc
sub
push
pop
into
mov
push
icebp
lock
push
stos
ds
sbb
cmpsb
add
jne
hlt
imul
out
dec
sti
sbb
stc
mov
mov
jnp
lods
add
and
lds
xchg
adc
pop
jno
mov
fmull
clc
pop
leave
fstpt
inc
out
xchg
leave
mov
jnp
adc
popa
jmp
jne
dec
in
pop
mov
fs
dec
aaa
inc
inc
or
mov
xchg
push
mov
cli
call
cmpsl
adc
xorb
sarl
adc
inc
repz
stc
jae
sbb
sub
bound
into
out
lods
lret
mov
cmpsl
rcl
push
divb
aad
lods
add
add
xor
sahf
jae
ljmp
mov
push
inc
iret
push
aaa
xchg
xorb
add
or
mov
lret
pop
xchg
cltd
mov
lahf
dec
gs
mov
outsl
cmp
test
inc
add
loop
add
stos
mov
jno
cmpsl
lods
pop
sti
cli
enter
push
push
sub
les
xchg
push
cmp
shlb
jmp
pushf
xor
in
mov
jmp
xchg
fldl
jmp
sub
jb
ss
cmpsb
cwtl
mov
add
jns
jns
and
jp
jne
or
cmp
and
push
loopne
pop
push
jb
jl
scas
or
out
mov
outsb
mov
stos
dec
idivb
adc
pop
dec
mov
imul
ret
pop
fldl
push
cwtl
cs
add
out
and
mov
xchg
and
inc
pop
inc
sbb
mov
push
jge
adc
xor
dec
movsl
sub
adc
pop
or
mov
hlt
mov
xchg
xchg
pusha
lcall
or
test
adc
stos
or
add
xchg
xor
adc
xor
xor
ret
and
jb
jecxz
xchg
inc
mov
rcl
bswap
shlb
ficomps
test
inc
mov
imul
jo
mov
cmp
and
subb
stos
xchg
xchg
fcoml
adc
add
clc
or
clc
push
test
outsb
or
adc
enter
cmp
sbb
pop
leave
mov
arpl
mov
cmpsl
stos
xchg
push
cmp
rcrb
cli
mov
insl
mov
cmp
lods
dec
add
mov
in
pop
sarb
std
scas
jle
ljmp
jp
dec
je
mov
imul
in
arpl
fiaddl
es
xchg
xor
jecxz
aam
cmpsb
jg
call
pop
mov
push
sub
loope
jns
pop
mov
mov
jmp
jb
or
dec
push
clc
lret
xchg
pop
jmp
push
shrl
fwait
jge
mov
ja
notb
test
popf
fwait
add
ja
js
jl
xchg
ror
ljmp
mov
insb
mov
dec
loopne
adc
or
and
jle
pushw
or
inc
inc
cli
hlt
push
xor
dec
cmc
sbb
cmpsb
or
or
scas
xor
pop
jo
inc
into
insb
xor
mov
jecxz
jne
and
ret
frstor
daa
xchg
inc
sub
ret
ret
jge
or
adc
xlat
push
sub
pop
sahf
pushl
jmp
and
test
inc
or
shl
mov
testl
das
mov
cmp
push
fldenv
push
loope
xor
subb
push
fwait
clc
mov
rcrl
sti
fsubl
mov
push
mov
dec
cmpsb
or
out
inc
lret
sub
in
hlt
unpckhps
les
jle
jp
into
sarl
and
outsl
fidivl
jmp
test
xor
test
lret
orl
ss
xor
out
dec
adc
inc
xor
fs
jo
lock
ror
test
inc
sbb
sub
fcomp
loopne
jo
sbb
cmc
gs
pop
and
sahf
mov
sbb
popa
mov
or
repnz
arpl
cmp
sbb
pop
jno
mov
addr16
aam
popf
add
icebp
lret
pop
push
push
push
add
mov
cmp
fisttps
or
aad
jbe
cmovp
out
icebp
jno
fcoml
mov
enter
movsb
scas
jg
les
xchg
mov
mov
dec
cwtl
in
push
into
stos
inc
mov
xor
cmp
sbb
in
daa
test
pop
jecxz
in
nop
in
or
fcomip
xchg
jns
gs
sbb
std
push
call
negb
repz
movq
insb
jmp
fcomps
cmc
adc
imul
jns
jbe
jle
adc
pop
pop
mov
test
push
dec
psraw
popa
inc
lahf
roll
mov
and
xor
cmp
lock
inc
je
push
dec
movsb
jnp
jne
mov
test
mov
fldenv
xlat
push
lcall
push
cmp
pop
ret
push
dec
push
mov
lea
nop
sti
inc
in
ljmp
stos
jae
lret
ss
mov
movsl
and
cmp
pop
pushl
cwtl
pop
or
iret
subl
js
sti
or
out
mov
ret
aam
sbb
push
lcall
scas
lods
jg
stc
inc
push
cmp
inc
and
cmc
pusha
shl
ljmp
pop
push
push
dec
adc
add
aam
or
sub
jbe
push
inc
in
jmp
or
leave
mov
cmpb
cld
jbe
test
pop
and
mov
aad
push
xor
sub
adc
jns
or
add
sahf
popa
inc
inc
faddl
pushf
pop
int3
ljmp
aam
mov
or
out
lahf
dec
loop
fwait
jns
neg
fisttpl
push
xor
jecxz
fsubr
dec
lret
xor
mov
push
adc
into
xchg
adcb
and
das
bound
bound
push
aaa
jo
dec
jae
jl
xor
fsubl
cwtl
adc
test
xor
add
add
repz
js
loopne
adc
imul
push
ficoms
inc
jb
jecxz
movsl
aaa
mulb
dec
pop
insb
sub
jmp
jo
aam
sub
shrl
jns
or
scas
cmp
addr16
jbe
rcr
imulb
lea
sub
pop
gs
dec
js
mov
roll
call
scas
stos
dec
rcll
shrl
fwait
adc
mov
add
daa
repnz
xchg
shlb
lahf
sbb
push
mov
cltd
dec
test
dec
rcrl
adc
test
inc
cmp
cmp
sbb
es
ljmp
std
popa
mov
inc
mov
mov
add
xchg
inc
aad
pop
lret
mov
loop
dec
insl
mov
mov
push
data16
cmp
scas
jns
data16
push
bound
jb
cltd
and
and
or
mov
outsb
es
dec
mov
lret
gs
call
add
xor
pop
movsl
popa
mov
xchg
mov
or
shl
ficoms
xchg
push
shll
test
push
push
int
fnstsw
out
mov
pop
inc
sbb
adc
mov
mov
data16
mov
pop
xor
negb
inc
addr16
sub
repz
mov
lcall
mov
inc
pop
xor
lods
jg
fs
pusha
movsb
test
mov
xorl
push
sbb
push
lods
clc
mov
enter
add
and
add
inc
fmull
dec
andb
rorb
imulb
pushf
pop
adc
arpl
test
xchg
xchg
lds
jg
and
rorb
mov
add
add
fildll
js
addr16
test
mov
lret
jns
and
imul
push
cltd
ljmp
or
push
fldl
dec
mov
std
es
dec
ss
fsts
int3
out
ss
xlat
lods
jne
imul
adc
xchg
cmpsl
sbb
and
imul
inc
mov
test
and
push
mov
fdivr
cwtl
sub
push
shl
sub
push
fstpl
daa
inc
clc
push
aam
jbe
xor
cmc
pop
push
hlt
sbb
xor
addb
stos
inc
movsl
and
xchg
adc
jmp
sahf
cmp
or
insb
cld
push
sahf
xor
test
jecxz
sti
aad
add
mov
into
mov
and
das
into
and
movsl
out
pop
inc
iret
cmp
adc
mov
xor
xorl
dec
jbe
loop,pn
out
push
addr16
pop
cmpsb
lock
xchg
testl
cmp
mov
xor
mov
xchg
xchg
mov
mov
cld
call
pop
popf
jg
push
out
xchg
push
xchg
sbbb
cmp
lods
xor
lds
adc
mov
in
push
stos
pop
jns
cmpsl
clc
nop
pop
loopne
imul
test
xchg
jns
js
sub
xor
mov
loope
dec
js
lret
jmp
lahf
push
xlat
movsb
adc
test
test
fnsave
fildll
inc
or
lock
jp
and
scas
adc
scas
adc
out
lret
sub
loope
cli
adc
mov
and
popa
mov
cmpsb
shrb
sub
mov
mov
mov
out
or
std
das
ja
cmpsb
out
sbb
push
pop
ficompl
aaa
insb
sbb
pop
and
bound
mov
je
push
jae
pop
lds
push
mov
pop
and
push
push
pop
adc
in
das
mov
ss
aaa
mov
and
and
inc
int3
es
in
and
leave
frndint
fldenv
fisttps
fdivrl
pop
or
jo
fwait
xchg
out
mov
cltd
aas
shrl
cltd
imul
inc
les
je
push
icebp
insl
arpl
push
sub
xchg
scas
les
or
jmp
or
xor
jnp
imul
dec
nop
pmaddwd
out
fwait
out
popf
lahf
je
shl
mov
jecxz
xor
inc
or
fwait
jae
xor
out
ds
cmp
movsb
mov
cmpl
lahf
mov
add
push
leave
shrb
lret
addr16
push
sbb
xor
or
pop
xchg
icebp
flds
and
gs
xchg
xchg
adc
jno
jae
add
data16
push
lods
or
or
sbb
les
mov
daa
mov
ds
pusha
popf
fsubl
dec
sti
movsb
dec
add
int
inc
xchg
cltd
filds
cmpsl
out
xor
mov
fcomi
jns,pn
lods
dec
dec
add
fwait
push
lret
xchg
xchg
xchg
push
mov
xchg
and
std
mov
ds
cld
push
nop
enter
rcl
sbb
sub
jge
mov
mov
fistpl
adcb
mov
add
fcoms
push
push
pop
jb
cmc
sub
aaa
inc
push
xchg
pushf
addr16
pop
xchg
das
or
leave
push
aam
add
mov
lods
mov
sbb
push
inc
adc
repnz
sarb
testl
push
xchg
mov
imul
inc
shrb
fidivs
dec
mov
out
out
mov
push
dec
in
sbb
sub
fidivrl
xor
xor
lock
out
in
shll
lcall
jbe
popf
mov
fs
and
mov
jle
movsl
lcall
jg
adc
jbe
stos
lahf
jne
es
lret
cwtl
sbbb
in
std
xor
cmp
inc
push
aad
pop
jb
stc
lea
fcoml
lods
dec
cmp
imulb
pop
add
cltd
in
out
mov
add
in
sbb
push
pop
dec
es
shll
call
dec
jle
mov
sbbb
testb
loope
lds
xchg
sbb
mov
push
jmp
fs
jbe
mov
pop
leave
jg
mov
nop
jle
dec
push
test
aam
loop
popa
adc
dec
je
inc
dec
fs
push
inc
hlt
mov
jmp
ret
jnp
mov
and
ss
push
mov
dec
ret
hlt
mov
pop
pop
stc
push
dec
hlt
mov
add
jmp
aad
xchg
inc
jnp
inc
cli
test
lds
sbb
loop
xchg
xchg
push
inc
jmp
add
sbb
leave
xlat
clc
mov
test
ret
push
lcall
inc
iret
fists
jno
mov
adc
dec
adc
adc
adc
leave
xor
xchg
test
cmpsl
pop
xchg
or
or
dec
into
dec
adc
fs
or
ret
dec
pop
icebp
stc
mov
fwait
mov
dec
out
fldt
int3
sbb
add
roll
push
adc
call
mov
inc
pop
test
sub
out
xor
cmp
in
aaa
xor
mov
and
and
ret
rclb
mov
jle
into
cld
push
xor
cmp
mov
call
jge
test
mov
outsl
mov
icebp
and
jnp
orb
jmp
xlat
push
dec
mov
hlt
sahf
mov
pop
and
pop
paddusw
jmp
mov
lods
lods
inc
and
adc
xor
repz
dec
aaa
inc
fisttps
or
ret
mov
cmp
pop
dec
xchg
or
mov
out
xor
addr16
push
sub
xchg
pop
jnp
inc
mov
out
xchg
adc
dec
movsb
cmc
push
adcl
fucom
in
pop
scas
pop
rolb
xchg
cltd
pop
xchg
xchg
mov
xchg
ficoml
push
sub
clc
mov
lret
cmpsb
hlt
addr16
cld
mov
mov
out
push
orb
movsb
mov
popaw
inc
pusha
popa
add
or
cmp
jne
not
add
sub
in
pop
and
mov
adc
loop
and
stc
in
in
mov
or
stos
or
push
clc
push
add
lds
mov
mov
enter
jge
mov
adc
mov
lret
inc
test
sbb
aas
and
xchg
and
les
movsb
sub
loope
lcall
xor
and
cmp
xor
in
and
push
mov
or
xor
mov
popf
in
les
fs
test
mov
cwtl
dec
test
fcomps
xchg
cmp
push
jns
out
cwtl
mov
test
sbb
bswap
mov
shlb
outsb
rclb
pop
inc
xchg
lcall
and
dec
mov
mov
int3
fwait
cwtl
or
push
cmp
popa
rorb
cmp
daa
loopne
std
shrl
adc
mov
iret
rcrb
pop
sub
dec
nop
mov
xchg
xchg
sub
imulb
lods
jle
jno
pop
adc
mov
sbb
xchg
int3
pusha
cmpsl
outsb
les
jae
mov
mov
pop
hlt
call
loop
mov
test
fsts
scas
mov
cmp
mov
fists
fwait
mov
fimull
sub
jp
sbb
push
pop
cwtl
test
mov
xor
and
clc
dec
sbb
cmp
and
int
cmp
test
shll
in
and
cmp
test
jno
xor
cmpsb
sbb
lret
add
push
xlat
loopne
jo
pop
cmp
adcl
lds
cmp
mov
orl
add
addr16
test
sbb
in
cmpsl
mov
lea
dec
enter
arpl
addr16
mov
into
repnz
mov
adc
dec
inc
xor
neg
mov
jno
in
xchg
int
dec
push
pop
push
add
push
pop
aad
lods
clc
dec
test
in
orb
mov
push
inc
xchg
ljmp
xor
mov
push
jle
ja
xchg
loope
or
jp
into
fcompl
adc
psubq
arpl
lds
fsubr
pop
aaa
sub
xchg
dec
fwait
adc
mov
out
outsl
adc
push
out
push
pop
movsb
sub
add
push
mov
pop
out
test
nopl
and
out
ret
dec
add
xchg
nop
and
mov
xchg
test
push
mov
enter
push
stos
imul
mov
lods
repz
bound
inc
inc
sbbb
xchg
sahf
sub
ficomps
jmp
shrb
jne
aas
dec
mov
add
xchg
xor
stos
ret
dec
data16
sub
push
push
nop
sbb
fiaddl
mov
lcall
inc
pop
xchg
mov
mov
div
mov
mov
es
addr16
pslld
cmp
jmp
push
xchg
rcrl
sti
push
jle
les
push
repnz
cmp
arpl
cwtl
pop
xchg
sahf
xlat
cmp
jmp
sub
xchg
sub
or
aas
in
xor
in
push
push
inc
or
jmp
jecxz
xlat
loopne
or
mov
stc
int3
pop
push
mov
sarb
cmp
cmp
pop
das
mov
outsb
cmp
mov
pusha
incb
stos
fmul
divl
push
int3
in
add
cli
in
pop
out
mov
and
in
jecxz
fs
cmc
xchg
ds
loope
aas
cltd
mov
ret
stc
add
adc
xchg
xchg
sub
and
out
int
sub
or
int3
stc
notl
bound
and
pusha
fisubs
into
ds
and
push
pop
rorl
push
inc
cmpsl
dec
pop
inc
or
leave
fistpl
out
std
jl
loope
stos
mov
jp
out
sub
xchg
outsb
lcall
ljmp
xor
and
stos
xor
adc
das
push
jae
mov
xchg
push
push
imul
dec
dec
in
rcrb
out
and
pop
loopne
loope
inc
cmpsb
dec
dec
mov
mov
stos
shll
sub
out
push
mov
test
cmp
xor
addr16
dec
mov
out
adc
in
push
lds
lea
cld
push
mov
mov
dec
jge
sbb
and
rsm
xchg
shlb
push
pushf
push
jbe
popf
dec
pusha
mov
les
or
jge
movsl
adc
lds
dec
ljmp
int
fbstp
mov
imull
orl
test
mov
cmc
mov
xlat
out
or
mov
jmp
xchg
adc
mov
inc
dec
dec
adc
jnp
repnz
pop
mov
iret
call
dec
sub
clc
pop
push
add
daa
push
out
imul
loope
lock
out
sarl
int
adc
jne
xor
sbb
inc
jp
in
xchg
out
push
add
push
adc
pop
stos
mov
aad
inc
cmpsl
add
pop
inc
adc
inc
loopne
and
mov
push
andb
push
add
imul
pop
lds
popf
pop
push
dec
lea
sbb
lea
scas
cmpsw
sub
test
roll
nop
or
lock
mov
loop
addr16
adc
les
arpl
sbb
repnz
xor
push
fildl
push
and
fisttps
jge
clc
mov
or
mov
dec
jg
sub
shl
push
mov
dec
dec
push
fistps
cli
mov
loopne
jns
or
mov
jb
fadds
pop
push
jp
or
loopne
rorb
popf
popl
pop
mov
lahf
xor
pop
add
call
and
negb
fcomip
outsl
js
mov
mov
subl
add
cld
lock
je
movsb
pop
inc
add
sbb
mov
adc
adc
in
adc
cmp
test
mov
dec
adc
ffreep
pop
mov
and
sahf
mov
js
add
cmp
mov
xor
jb
fsub
push
test
sub
push
inc
mov
and
cvtps2pd
dec
addb
test
idivb
sti
cmpsb
ret
push
fisubs
scas
pusha
mov
add
sub
ss
and
xor
test
jo
pop
icebp
aas
fimull
aam
jecxz
test
mov
or
clc
sub
rcll
inc
insl
ss
fcomps
add
xor
and
ficoms
sub
pop
pop
lret
addr16
jno
mov
sub
pop
push
cmp
cmpsb
int3
es
cltd
inc
sub
jbe
lock
cmc
jge
push
scas
sti
rorb
rcll
movb
push
jnp
in
cltd
fimuls
popa
and
xor
les
xor
add
imul
inc
push
ret
fcmovnu
icebp
jns
andb
repnz
push
int3
cmp
test
in
xchg
repz
mov
and
decb
filds
jge
dec
loop
out
cld
add
and
add
aam
iret
jnp
adc
divl
div
into
push
pushf
aad
into
rcrl
js
and
jg
jle
xor
imul
pop
xorl
stc
movsb
xor
push
decb
and
mov
movsb
push
and
fidivrl
in
frstor
and
bound
sub
sbb
lods
popa
cltd
jmp
sub
in
inc
jns
lods
push
mov
popa
int
addl
fs
xor
cmp
or
mov
xor
push
loop
mov
lds
dec
lods
sti
inc
xor
xchg
iret
mov
cmp
sub
pop
adc
sti
das
jnp
pop
mov
enter
insl
pushf
mov
jle
clc
pop
pop
push
jns
xor
popl
adc
stc
sti
js
in
inc
cmpl
pop
push
sahf
push
lods
jnp
dec
jl
dec
or
and
cmp
xor
enter
adc
std
setbe
cmp
xchg
js
pop
adc
ja
and
sub
in
jp
xlat
adc
sub
jne
popa
mov
mov
mov
mov
aad
pop
push
sti
and
push
clc
movsl
xchg
popa
andb
mov
cli
outsl
cwtl
sub
push
sbb
sbb
movsl
fldt
popf
stc
das
cld
jmp
push
or
lcall
xchg
mov
add
or
add
sbb
push
cwtl
pop
xchg
jmp
dec
pushf
add
or
xchg
es
repz
cltd
sub
mov
and
xchg
pusha
cwtl
iret
rcrb
or
sbb
out
das
lahf
xor
insl
add
lcall
pop
adc
push
das
mov
cld
fistpl
fsubs
jo
jns
pop
inc
das
jno
jno
dec
jae
pop
add
xchg
in
jo
jmp
add
loopne
xchg
inc
cmp
or
test
add
mov
inc
jp
sub
or
xlat
cmc
idiv
aas
xchg
fcmovu
mov
popl
arpl
mov
push
lahf
mov
or
repnz
push
stos
gs
jb
sti
push
sti
jae
insl
inc
cltd
cmc
push
sub
push
mov
cmpsb
inc
cwtl
sbb
aad
or
test
mov
lahf
sub
push
adc
jae
mov
call
dec
cmpsl
scas
jge
shll
push
enter
mov
and
test
xchg
dec
pxor
popf
lods
imul
je
dec
nop
out
aaa
pusha
lahf
add
fwait
jecxz
mov
inc
arpl
lahf
test
mov
pop
push
arpl
imul
adc
pop
je
out
push
cli
dec
cltd
dec
clc
stos
xor
lahf
jle
xor
sbb
lods
cmp
jno
mov
jp
xlat
push
call
mov
dec
dec
dec
in
das
mov
jmp
mov
dec
movsl
and
test
xchg
icebp
mov
and
icebp
int
aaa
mov
xor
sub
int
cmp
push
cli
xchg
lret
dec
out
scas
mov
cmp
pop
imul
fcompl
sahf
faddp
or
popf
sbb
in
lahf
xlat
jae
shl
in
sub
pop
rcrb
iret
mov
mov
ret
sbb
call
pop
fwait
addr16
jb
xchg
clc
jmp
and
idivl
sub
mov
inc
mov
jp
mov
rcll
stos
push
ss
data16
gs
pop
lret
sub
push
or
fstpt
ds
and
xor
mov
sub
push
cltd
xchg
and
xchg
adc
mov
rolb
xchg
dec
loop
je
fimull
jecxz
aas
jb
icebp
and
ds
pop
mov
leave
mov
pop
mov
sub
fcmovnu
push
ljmp
cmp
mov
sbb
or
push
mov
push
ror
dec
jns
lods
mov
dec
adcl
pop
or
daa
call
jecxz
and
orl
sbb
mov
dec
and
mov
shll
sbb
xchg
xorl
inc
dec
mov
mov
cltd
push
jge
incl
ret
xchg
repnz
outsb
mov
mov
aam
int
push
and
jl
lret
in
addr16
inc
adc
push
sub
es
sahf
xchg
mov
cwtl
push
push
in
adc
push
gs
inc
push
or
xchg
mov
js
jo
xor
or
mov
lfence
dec
dec
mov
cs
xchg
ud0
test
mov
mov
pop
xchg
int
lret
jl
ret
sbb
sub
insl
and
sbb
or
push
je
inc
push
dec
adc
ljmp
xchg
mov
ret
lret
ljmp
add
push
aam
js
mov
push
push
adc
mov
stos
mov
dec
or
pop
mov
push
je
out
stc
aaa
dec
jae
mov
in
ror
cmpsb
mov
lahf
xlat
testb
inc
pushf
aad
cmc
js
push
enter
dec
repnz
in
movsb
fdivr
sub
call
sbb
sbb
jmp
leave
rorb
cmp
cld
dec
mov
inc
repnz
mov
sti
ret
mov
mov
icebp
je
ljmp
jl
sbb
dec
adc
xor
lods
lahf
mov
jl
inc
test
and
push
in
cld
aad
repz
sbb
pop
in
xchg
mov
xor
dec
add
mov
adc
mov
mov
stc
aad
cmp
push
enter
shll
leave
movsb
or
jne
enter
das
stos
sub
stos
push
arpl
adc
adc
xchg
lea
clc
stos
inc
dec
push
data16
pop
sbb
fstps
int3
leave
sub
addr16
or
mov
push
rclb
add
pop
daa
dec
mov
aaa
mov
mov
ret
sbb
mov
jg
inc
lcall
cmp
stos
pop
mov
insb
mov
test
mov
mov
xchg
rol
bound
testl
lods
jg
jg
sbb
out
xchg
lods
movsb
xchg
push
dec
push
out
dec
dec
mov
sar
xchg
dec
ds
test
adcl
vorps
adc
xchg
mov
or
je
sub
dec
jmp
adc
and
sbb
xor
adc
xor
addl
fiadds
inc
xchg
gs
pop
shl
inc
cld
lcall
push
cmp
push
aas
pop
or
dec
insl
add
mov
sub
std
or
xor
push
mov
push
jp
push
jecxz
and
sti
cli
xor
mov
adc
sbb
icebp
jl
add
repnz
mov
scas
test
cmp
cmpl
movsb
jne
xchg
addr16
or
sarb
sub
outsl
movsl
push
mov
mov
cmp
scas
cmc
mov
std
mov
sbb
loop
scas
lods
pusha
rcrl
add
or
or
addr16
add
lea
push
std
js
dec
push
inc
dec
jl
xor
jae
or
and
cmc
xchg
fdivl
xchg
loop
cmp
insl
adc
je
ret
dec
push
dec
mov
test
cltd
movsb
mov
inc
xor
push
xchg
js
and
sbb
mov
xor
test
mov
xorl
and
sbb
mov
fs
aam
sbb
shlb
xor
dec
mov
jl
sti
stos
xor
movsl
mov
decb
popa
rcl
inc
mov
cmp
dec
and
ljmp
sub
das
mov
ja
lret
out
mov
cmpsl
inc
push
or
adc
call
sbb
roll
andl
push
fwait
mov
pop
les
cld
and
xor
stc
adc
pop
lds
add
inc
or
jg
in
add
cmpl
lds
xchg
pop
mov
mov
pop
pop
inc
pop
bound
mov
mov
jge
lods
jmp
pop
mov
pop
cmp
inc
je
mov
or
cmpsb
subb
ss
lds
mov
jnp
addr16
fdiv
mov
inc
push
inc
cwtl
mov
cs
xor
cmp
das
jne
rorl
add
mov
nop
push
flds
push
inc
pop
mov
cmp
sub
jns
jmp
aam
imul
test
addr16
iret
jae
xor
das
mov
ja
pusha
jle
test
sub
lahf
scas
sbb
out
sub
cmovns
push
adc
and
mov
mov
stc
and
call
mov
imul
fcoml
add
or
mov
dec
dec
mov
and
xchg
cld
lock
fs
cmp
jmp
cmp
mov
and
push
out
ficoms
das
xor
dec
mov
les
add
clc
inc
push
sub
lods
dec
cld
mov
mov
mov
faddl
lods
imul
inc
popa
insl
cmc
mov
inc
mov
insb
push
jl
and
mov
xchg
into
jecxz
adc
pop
lock
enter
fwait
add
and
das
fimull
dec
loop
mov
add
jecxz
xchg
add
daa
push
mov
cmp
gs
dec
mov
imul
ja
inc
stos
outsb
fimuls
push
pop
jnp
or
or
subb
fisubrl
sbbl
lcall
adc
sti
push
push
push
push
imul
sub
dec
scas
dec
mov
out
lret
pop
cli
push
insw
mov
adc
shrl
inc
xor
cmp
mov
mov
arpl
mov
sub
shll
and
fimuls
lods
aam
addr16
jge
xor
sbb
pop
pop
idivb
test
jecxz
mov
xor
sub
or
out
mov
mov
or
mov
test
inc
enter
dec
in
inc
pushf
inc
test
ljmp
xchg
or
cltd
inc
or
aas
lahf
pop
pop
xchg
xor
jge
jge
lea
cld
mov
lods
push
pop
lcall
scas
jnp
xor
inc
daa
xor
adc
push
jle
sub
loop
pop
jne
mov
jnp
jecxz
mov
fwait
cld
fsubrl
or
adc
pop
test
scas
push
xor
xor
sahf
js
xchg
pop
or
pop
sbb
lock
fs
sub
fsubrs
dec
cmc
das
inc
neg
test
ljmp
aad
cli
leave
jg
cs
ss
sbb
adcl
out
bndldx
cld
xor
push
jb
push
inc
call
ds
sbb
sbbl
and
push
fnstsw
add
mov
les
jbe
inc
fwait
out
mov
fsub
ljmp
adc
xadd
or
scas
push
fld
hlt
dec
arpl
pop
dec
pop
push
mov
fisubs
cmp
and
in
iret
in
daa
lcall
jae
push
rol
sub
call
sti
fistps
push
les
push
adc
ret
xchg
mov
aas
mov
adc
push
addb
test
dec
scas
push
sub
out
jle
dec
or
adc
inc
loop
aaa
pop
xchg
xor
jecxz
out
setno
sub
jecxz
into
ret
stc
leave
test
pop
xchg
lds
lret
into
pop
pop
idiv
ret
dec
inc
jg
into
jg
sub
add
psrlw
or
inc
fwait
or
ja
lahf
dec
andps
jno
js
test
and
sbb
dec
push
sti
push
lret
dec
jae
aaa
mov
jnp
push
or
adc
jg
cmp
adc
rol
fists
mov
push
adc
push
push
jmp
add
push
jne
inc
mov
fisubrl
jnp
pop
lret
pushf
and
mov
fs
fsubl
mov
out
adc
popa
add
or
adc
pop
mov
insb
jns
pop
fstl
inc
mov
pop
test
adc
arpl
inc
ret
pop
inc
cmc
test
aaa
pop
push
jb
ss
stos
jmp
ds
daa
ja
mov
imull
mov
loop,pn
push
sbb
pop
sbb
or
ljmp
inc
jae
pop
out
sub
xchg
aam
daa
push
sahf
cmp
inc
dec
fucomip
inc
dec
outsl
add
mov
push
pop
xchg
pop
jecxz
insb
lcall
stos
and
mov
sub
mov
jbe
stos
fdivr
dec
pop
aam
dec
bound
mov
push
cmp
int
add
mov
lods
daa
lods
jge
push
jbe
loope
push
pop
and
lret
sbb
mov
sar
mov
or
int
aad
iret
sbb
in
stos
sub
loopne
xor
mov
sarl
adc
stos
dec
inc
add
and
repnz
mov
test
xchg
in
sbb
popf
fwait
testb
aaa
in
sbb
add
subb
jle
xchg
add
out
aad
adc
lahf
jo
mov
xchg
cmp
jns
cmp
je
sbb
dec
fcmovbe
push
cld
test
xchg
jae
mov
mov
movl
cmp
aad
adc
mov
sbb
cmp
mov
xor
pop
loopne
fmull
in
ljmp
xor
inc
testb
mov
and
jmp
repnz
fcoms
les
xchg
adc
sar
push
dec
push
pushf
mov
dec
fwait
mov
movsb
int3
mov
enter
lahf
adc
jne
xchg
dec
enter
cmp
push
xor
andl
pop
cld
mov
xor
and
sahf
addl
cli
hlt
mov
and
out
aam
dec
clc
xlat
ss
in
outsb
lret
je
jmp
pop
frstor
hlt
xlat
pop
inc
cmc
xchg
insl
test
mov
fwait
push
inc
jle
xlat
jae
cmp
xchg
sbb
scas
cmp
out
pop
adc
and
addr16
sbb
lock
and
rcrb
and
mov
cmpsl
or
or
sbb
imul
and
loop
and
cmpsb
or
mov
add
stc
dec
mov
push
sub
jo
pushf
outsl
adcl
das
inc
jl
pop
add
mov
mov
mov
mov
daa
or
sbb
mov
and
hlt
cltd
lret
sub
sub
fstps
stos
and
lds
popf
mov
xor
jno
fwait
dec
testb
fistps
pop
movsb
push
cltd
mov
dec
inc
jae
mov
inc
in
test
xchg
jmp
cwtl
ror
mov
stc
add
loopne
in
sbb
add
cs
jnp
mov
mov
sahf
mov
in
jecxz
clc
out
push
dec
sub
and
xchg
andl
mov
inc
adc
inc
lea
lock
push
dec
push
int
loop
add
pop
adc
mov
or
sbb
sbb
imul
cld
pop
jl
aaa
orb
jb
stos
sbb
pop
dec
cmpsl
jo
sahf
mov
lods
cmp
add
or
mov
lock
pop
repz
out
cmp
loopne
fldcw
adcl
add
mov
outsl
and
mov
mov
imul
ret
fidivrl
out
sbb
lock
mov
mov
fisubl
repnz
and
ds
ljmp
icebp
push
push
fstl
scas
ljmp
jne
lret
fiaddl
mov
decl
or
cld
cs
mov
pop
pusha
pop
push
inc
scas
pop
push
fildll
xchg
mov
fwait
gs
jg
aaa
out
sbb
movsb
pop
pushf
dec
mov
mov
mov
std
pusha
lret
orb
lea
jns
pop
and
mov
pop
add
jnp
xchg
mov
sbb
pushf
aad
sbb
xlat
lret
push
xor
fwait
lcall
adc
adc
add
mov
xchg
aam
in
iret
cmp
ret
cwtl
adc
clc
addr16
sahf
inc
sti
mov
add
or
daa
xchg
ljmp
xchg
jp
jbe
dec
addr16
dec
xchg
scas
add
inc
stos
test
arpl
xor
out
cld
insl
xchg
and
aam
mov
mov
addr16
push
cmp
int3
mov
out
outsb
popa
ret
stos
pop
ret
or
mov
and
out
and
push
sahf
push
mov
xrelease
lods
outsb
outsl
dec
iret
jae
cmp
sub
mov
in
test
rcrb
xor
cmp
pop
sub
xchg
das
jbe
scas
leave
sub
pop
ljmp
out
imul
jo
in
dec
and
cmp
mov
and
mov
fistpl
cmc
add
cmp
aaa
push
int3
scas
adc
pop
push
lods
stos
mov
lret
ja
xor
inc
aam
popf
cld
mov
iret
lret
push
in
xchg
out
push
stos
adc
loop
iret
mov
test
in
lcall
stos
mov
push
lret
movl
cli
push
add
ret
mov
fiadds
outsl
push
add
adc
jne
lods
jg
int
jecxz
mov
clc
call
inc
inc
leave
mov
push
adc
es
lods
sub
mov
movsb
xor
out
pop
push
pop
lret
jo
adc
pop
addr16
jp
es
push
sub
jnp
mov
or
fdiv
das
aas
dec
or
lea
outsb
pop
jne
cmp
mov
cmpsl
cmp
inc
cmp
cmc
js
push
xchg
and
jnp
adc
pop
adcl
xor
pop
add
inc
out
rorb
mov
adc
xchg
inc
add
int3
push
ret
adc
cmp
mov
test
push
mov
insl
sub
jbe
outsb
xchg
mov
fwait
out
cmp
and
add
ss
push
gs
pop
xor
mov
ss
stos
adc
pop
jmp
sbb
pop
add
jne
push
int3
adc
cld
add
les
xlat
mov
push
fdivrl
sub
jno
test
mov
dec
mov
and
out
mov
xchg
push
jae
pop
mov
sti
scas
sbb
push
mov
dec
add
xor
or
les
pop
pop
xchg
sub
inc
loop
mov
xor
imul
push
push
dec
loopne
dec
mov
xchg
orl
inc
jmp
movsb
fidivs
cwtl
out
push
mov
insl
xor
mov
ror
cmp
cmpsb
gs
mov
pusha
push
fucomi
mov
cmpsl
in
ficompl
mov
adc
xor
and
cmp
cmp
mov
int
fildl
xor
cmp
xchg
mov
inc
les
stos
repz
mov
add
mov
pop
xor
in
outsb
and
arpl
pop
xchg
or
adc
ret
mov
mov
int3
or
ja
ljmp
out
mov
mov
mov
push
adc
out
or
push
fucom
inc
jae
add
xchg
jle
cmp
arpl
fwait
shlb
cmp
es
mov
mov
jo
out
das
mov
and
test
dec
fwait
rcrl
inc
icebp
insl
mov
sub
hlt
jmp
mov
ret
mov
outsl
dec
push
sbb
mov
xchg
lea
push
mov
adc
std
sub
mov
insl
pushf
lahf
jne
jno
cltd
inc
mov
lods
push
sub
imul
pop
dec
sti
push
cmp
gs
outsl
inc
je
mov
sub
scas
cmp
aam
dec
pop
mov
cmpsl
out
inc
bnd
daa
rorl
cli
mov
mov
cmpsb
or
ljmp
push
and
jae
cli
fidivl
addr16
fstpl
js
mov
mov
pop
aam
jns
call
repz
and
sbb
mov
mov
xor
mov
iret
fstpt
mov
jmp
push
lar
lods
mov
mov
jl
mov
jnp
xor
cmc
jo
dec
lea
or
es
jp
push
out
loope
dec
movsb
sub
imul
arpl
dec
mov
xor
mov
insb
movsl
andl
aam
cmpsb
aam
lods
xor
pop
add
sub
lret
cmp
xchg
call
aaa
stc
les
shlb
lret
cmp
push
test
dec
orb
sbb
sarb
lods
dec
or
incb
mov
jle
jno
lods
into
xor
aad
cld
mov
stc
lock
out
xor
pop
xlat
cmpsb
lcall
scas
sbb
clc
lea
ss
push
cli
xchg
dec
ss
jecxz
popf
orb
mov
mov
dec
mov
idivl
xchg
adc
mov
mov
pop
fnstenv
jp
outsb
xor
jns
frstor
testb
mov
popa
mov
push
add
push
fists
xchg
hlt
cmp
jb
inc
cld
add
inc
push
push
orb
aad
arpl
fcoms
cld
or
cli
push
sbb
insl
cmc
inc
dec
cs
mov
addb
adc
pop
mov
mov
inc
jg
mov
jl
cmc
dec
inc
mov
add
dec
or
out
xorl
fs
add
push
sarl
sub
dec
inc
daa
call
pop
cmp
sub
sbb
fcoms
dec
lret
lret
ja
in
jbe
cmp
ret
rolb
mov
cmp
xchg
mov
popf
fwait
aas
insb
jbe
inc
imul
pop
sub
repnz
push
jae
mov
mov
sbb
incl
repnz
iret
jle
or
out
imul
scas
out
xor
add
xchg
jecxz
push
stc
fistps
xchg
mov
cwtl
sti
cmp
jg
jo
xchg
test
stc
push
or
xor
and
les
jecxz
insb
stos
std
flds
out
sar
inc
arpl
jmp
mov
into
ficomps
inc
icebp
jae
stos
fst
test
pop
mov
imul
pop
xorb
ret
sbb
ficoml
pushf
lds
add
out
xchg
xchg
xchg
repz
in
jb
repnz
mov
cmpsb
iret
push
nop
orb
call
mov
loopne
roll
jp
xor
xchg
loop
cmp
ret
push
std
stc
outsl
fbld
mov
insb
idivl
in
cwtl
add
mov
mov
xorps
adc
xor
cltd
repz
mov
ss
popf
lds
push
stos
mov
pop
ss
daa
aaa
test
call
jmp
stos
jmp
push
xchg
outsb
outsl
cld
mov
push
mov
mov
sbb
subl
inc
adc
lret
ror
cwtl
insb
add
and
mov
sbb
orb
rclb
lds
xchg
pop
mov
cmp
mov
or
lret
inc
push
add
rcr
lahf
out
aad
push
push
movsb
fidivs
outsl
mov
out
sbb
xor
push
sub
clc
aaa
xchg
mov
out
mov
loopne
stc
add
xchg
add
push
pop
mov
shrl
inc
and
push
enter
pop
ret
inc
mov
lock
sbb
add
out
rclb
push
out
mov
add
shrb
mov
inc
rorl
pop
xorl
mov
xchg
inc
cmpsl
aas
pop
ret
adc
rorb
dec
sub
mov
mov
outsl
mov
xchg
mov
dec
cld
int
inc
sub
lret
push
bound
and
adc
add
les
sub
and
fsubr
dec
repnz
adc
cmp
xchg
rorb
mov
icebp
outsl
testb
push
scas
lock
ds
jnp
or
mov
and
out
sahf
add
flds
push
sar
iret
mov
les
xchg
out
enter
and
pop
mov
and
xchg
enter
sub
mov
sub
push
push
dec
or
dec
cltd
adc
adc
jge
push
inc
dec
gs
push
sbb
adc
je
stos
xor
pop
shrb
cmp
sbb
test
push
sbbl
add
lods
dec
loope
shll
ja
sbb
icebp
mov
cmc
jno
lret
int
push
inc
loopew
cli
sbb
dec
jp
shlb
xor
lcall
inc
mov
test
outsl
add
adc
xor
mov
adc
and
int
or
outsb
out
mov
imul
push
cmp
push
outsl
adc
dec
out
and
mov
lahf
or
jle
imul
dec
mov
fldt
mov
adc
cmp
subl
repz
test
sub
cmc
pop
addb
xchg
pop
aad
inc
icebp
push
repz
xor
adc
inc
xchg
pop
sbb
rcrb
pop
into
lock
lock
and
pushf
inc
add
cltd
mov
jae
jo
ljmp
inc
fadds
sbb
icebp
cwtl
adc
push
hlt
icebp
xorl
inc
jecxz
add
adc
lock
xchg
fdivs
loope
bound
push
mov
jne
mov
cmp
or
pusha
pushfw
lods
pop
icebp
mov
fists
jmp
or
or
mov
test
push
adc
addb
pop
cltd
dec
inc
xchg
dec
loop
pop
jbe
es
pushf
mov
vrcpss
nop
mov
frstor
ret
ljmp
inc
ja
imul
and
insl
ret
and
enter
inc
sub
xor
xlat
mov
jecxz
inc
pop
popa
shlb
nop
jg
mov
movsb
add
cmp
test
jg
loope
push
aaa
outsl
ljmp
add
pushf
xchg
test
imul
popf
filds
cmp
aaa
mov
mov
fiadds
mov
out
test
lret
daa
clc
adc
mov
enter
das
push
ja
bnd
sbb
or
dec
jecxz
popa
fistpll
in
lahf
lret
aad
jae
dec
cmp
and
scas
jbe
nop
cld
sub
mov
daa
test
push
jne
and
ds
nop
or
daa
xchg
insb
loopne
arpl
pop
mov
mov
mov
inc
inc
les
adc
push
mov
adc
push
test
or
cmp
cmp
inc
test
mov
in
push
push
xchg
and
inc
subb
iret
fs
inc
int3
fwait
repnz
jne
jnp
mov
sub
dec
inc
leave
dec
xchg
lock
xchg
add
testl
jp
lret
movsb
imul
lahf
mov
arpl
hlt
pop
cltd
lcall
dec
imul
and
dec
push
xchg
xor
mov
inc
iret
loopne
daa
pop
sbb
mov
aaa
mov
mov
cmp
lods
es
pop
lea
or
stos
lahf
jae
mov
je
stos
jg
jg
inc
push
call
xchg
xchg
outsb
test
jg
mov
popa
sub
or
xchg
and
pop
mov
push
sbb
xchg
cmp
or
push
icebp
jnp
daa
es
fiaddl
jp
outsl
daa
sub
fs
add
clc
push
data16
and
dec
and
out
cmp
push
in
adc
data16
std
adc
call
dec
and
add
ret
js
repz
loope
lret
jno
adc
dec
mov
pop
push
dec
daa
pop
out
addr16
rorb
stc
rcr
xchg
outsl
sbb
rorl
sbb
loop
sbb
mov
push
movsl
sbb
xchg
ds
push
push
cmp
fs
movsb
icebp
fdivs
inc
nop
pop
loopne
dec
jmp
xlat
and
pop
push
xor
jp
fbld
das
fdivs
gs
fdivr
mov
mov
mov
std
lret
pop
jle
fldl
jp
dec
aad
ret
lahf
fadd
mov
stc
adc
cld
mov
mov
push
mov
inc
scas
adc
and
pop
or
cmp
pop
pop
pop
into
pop
cltd
jmp
ret
xlat
add
call
je
cmp
lock
pop
push
mov
or
cmp
loop
into
add
cwtl
xchg
mov
int3
imul
jns
shlb
jne
test
push
imul
cld
sub
cmp
push
add
dec
lret
addr16
push
imul
in
jb
jae
push
mov
ja
fisttps
jnp
add
jo
and
mov
add
mov
sbb
outsl
loop
cmp
out
pop
mov
test
test
push
mov
cmp
push
xchg
mov
add
or
lock
ret
and
mov
pop
mov
mov
jbe
sbb
leave
iret
sbbl
pop
adc
mov
ss
dec
aad
pop
fdivrp
pop
movsb
pop
punpckhbw
sub
dec
ja
imulb
sbb
aaa
lret
pop
lcall
mov
clc
call
mov
js
into
and
add
fdivrs
sbb
xchg
push
aad
fwait
pop
add
movsl
movsl
fsubrs
es
mov
rol
mov
shlb
inc
push
inc
dec
lds
jmp
ds
jmp
out
das
cmp
mov
mov
adc
mov
je
fwait
mov
and
mov
cmp
mov
sub
gs
and
ret
xchg
jecxz
fwait
sbb
and
cli
jl
push
icebp
sub
push
mov
and
arpl
mov
jne
in
test
xchg
cwtl
push
jge
pop
lcall
out
cld
xor
and
insb
enter
shrb
add
rcr
js
jp
jo
fistpl
ja
pusha
in
dec
sbb
xchg
and
inc
mov
pop
movsb
xor
sub
in
arpl
bound
pop
adc
in
jmp
rorb
cmp
push
js
fwait
es
mov
jbe
rcrb
stos
clc
mov
aam
in
insb
adc
sbb
inc
jae
imul
pop
test
xor
adc
jle
and
sarb
inc
scas
sarl
daa
pushw
nop
jge
cmc
scas
pop
jmp
and
dec
push
int3
js
mov
out
add
nop
mov
sub
add
jbe
xchg
es
xor
sbb
or
inc
mov
out
mov
pop
push
xchg
mov
and
rcrb
dec
and
xchg
sbb
movsl
aaa
ficomps
dec
cmpsb
lods
push
mov
roll
in
mov
lcall
lods
mov
test
je
into
test
les
enter
call
xchg
pop
add
push
xchg
mov
outsb
mov
push
adc
sub
add
adc
dec
xor
xchg
dec
repnz
ss
push
mov
push
ret
push
repz
inc
xchg
cld
loope
dec
pop
inc
or
pop
movsb
inc
mov
and
iret
pop
subl
pop
or
xor
imul
testb
in
lret
fwait
cld
cmp
mov
mov
jno
mov
jmp
sbb
pusha
hlt
je
test
jp
jns
jbe
dec
xchg
int
pop
inc
aas
repz
addr16
stc
lods
outsb
cmp
jle
mov
add
push
jae
por
or
mov
sub
sub
popf
arpl
imul
ljmp
and
xor
inc
push
lea
jmp
xchg
dec
fdivr
fucomip
and
sbb
sub
jmp
imul
pop
outsb
mov
add
dec
divb
mov
cltd
xor
sub
mov
leave
ss
pop
inc
mov
aaa
cli
stos
cli
stos
mov
inc
adc
and
add
dec
into
dec
fnsave
push
cmp
inc
add
outsl
into
mov
lcall
jle
and
add
mov
push
adc
xchg
out
out
mov
push
xchg
jbe
mov
fsubl
dec
cmc
push
pushf
fistpl
popa
inc
fistpll
and
pop
inc
sbb
push
mov
ret
dec
enter
mov
out
jb
mov
enter
inc
movsl
stos
adc
repz
or
cs
out
or
mov
push
insl
xchg
xchg
mov
mov
stos
out
fbld
xchg
push
xchg
ds
push
fisubrl
out
mov
lcall
lea
mov
ret
stos
ror
jmp
mov
filds
sub
inc
sub
push
ss
xchg
jae
or
mov
add
leave
xor
jno
push
mov
and
lock
js
outsl
cmpsl
jg
test
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
.byte
in
dec
mov
dec
push
adcb
xchg
jp
testl
int
pop
aaa
ret
xchg
mov
or
fimuls
mov
nop
jmp
xchg
or
psubusw
lock
repz
mov
pusha
clc
arpl
icebp
sub
clc
cmp
mov
sbb
push
jle
lods
xor
sub
in
sub
dec
xchg
or
add
xchg
ffree
call
add
cmpsl
into
repz
in
mov
jg
lcall
jmp
int3
inc
out
hlt
movsl
les
mov
inc
adc
sbb
pop
pop
into
loopne
push
sub
mov
aad
test
fadd
addb
add
cli
inc
je
call
loopne
mov
outsl
push
test
das
leave
pushf
xchg
stos
sbb
fwait
xchg
in
pop
jae
and
xor
xchg
nop
and
je
mov
or
test
sti
push
aas
ret
dec
sub
add
cld
insl
scas
pop
ret
add
xchg
jnp
outsb
lods
jns
push
outsb
xor
and
mov
mov
push
mov
jg
xor
pop
adc
in
repz
int3
data16
loop
shlb
lods
jae
sbb
cmpsb
cld
aad
inc
add
rcrl
adc
mov
dec
mov
mov
mov
lcall
jl
jecxz
pop
mov
into
loope
in
pop
test
push
cld
push
pop
push
fcmovb
jge
ss
mov
nop
mov
inc
insl
lret
jns
xor
cmc
call
add
ljmp
sub
push
rcrb
sbb
or
movsl
les
loop
dec
sub
xor
mov
es
mov
jb
push
mov
mov
xchg
or
sbb
jbe
mull
inc
insl
xor
aad
jl
xor
sbb
in
lret
jge
cmp
dec
daa
inc
std
jo
andb
add
dec
subl
ret
push
push
les
or
subl
loope
test
jb
in
xlat
aaa
sub
les
leave
dec
adc
push
roll
pop
test
lods
push
shll
sbb
push
jnp
pop
pushf
sbb
push
mov
movsl
sub
push
jge
insl
mov
adc
out
addr16
outsb
outsl
int3
stos
dec
xchg
mov
fldcw
mov
shrl
jg
cmp
push
into
enter
push
mov
gs
inc
mov
je
mov
cmp
std
cwtl
push
fnsave
scas
mov
xor
dec
sbb
sub
ret
xchg
stc
mov
push
fwait
sarl
xchg
cmp
fucomip
dec
mov
pusha
mov
inc
sbb
or
pushf
mov
add
mov
les
adc
scas
xchg
movsb
gs
sti
lods
imul
sub
orb
xchg
xchg
dec
fs
fdivrl
fnstsw
mov
pop
push
jo
or
call
mov
loop
mul
in
int3
jbe
jecxz
lods
out
dec
addl
pop
negl
pop
jge
arpl
sub
test
insb
fmuls
dec
rcrb
movsb
inc
int3
je
adc
inc
in
inc
push
lods
shr
mov
jecxz
cld
scas
outsb
mov
mov
adc
push
and
roll
sbb
jecxz
jo
jmp
loop
in
dec
in
int3
sub
insb
xor
imul
xor
out
jnp
ret
add
mov
cltd
mov
mov
roll
xchg
or
sub
jbe
xchg
dec
push
dec
pop
xchg
test
fs
std
stos
lret
imul
jecxz
lods
movb
icebp
sub
stos
inc
inc
adc
cwtl
rcrb
pop
je
in
sub
out
cmc
aas
popf
push
imul
xchg
xchg
es
push
outsb
jne
test
mov
daa
popa
cmp
shl
outsl
and
scas
push
bound
cmp
test
sub
push
js
xchg
sahf
mov
ss
jns
andl
adc
sub
loop
xchg
pushl
mov
mov
call
cld
mov
std
ret
mov
or
inc
lahf
idivl
xchg
add
scas
pop
adc
fidivs
add
sbb
inc
lret
imul
aaa
add
mov
repz
into
xor
jno
jns
test
out
fildll
int
push
pop
jnp
mov
hlt
enter
push
imul
push
arpl
in
pop
push
scas
dec
jae
stc
fucomi
repz
arpl
ss
pop
out
add
cli
out
fnstsw
and
fs
xchg
dec
lcall
xchg
inc
cmp
fs
arpl
push
xor
ret
jno
xor
mov
out
xor
pop
cmp
lock
mov
jno
outsb
inc
das
clc
xchg
mov
in
shll
leave
shll
popf
xor
lock
mov
and
adc
mov
mov
sub
sub
addb
inc
in
jne
or
lret
or
sub
push
or
pop
sub
pusha
test
jle
xlat
mov
fisttpll
in
lock
cmp
out
ret
dec
xor
ds
push
ror
push
or
jp
incb
inc
imul
or
repnz
call
or
push
jbe
xor
pcmpgtb
jns
push
in
push
inc
int3
in
xchg
lods
fwait
sbb
rorl
cmpsb
lock
out
mov
lcall
ficoms
push
push
aad
or
inc
jo
sub
sbb
stos
inc
jmp
push
leave
ret
sbb
jb
xchg
mov
sub
aad
mov
mov
ja
shrl
fidivs
mov
lret
sbb
sbb
jp
mov
mov
pop
out
addb
push
mov
shr
cmp
xchg
xchg
hlt
test
subl
mov
dec
movsl
pushw
cvtdq2ps
push
mov
call
arpl
rorl
iret
out
outsb
pop
mov
sbb
fisttpll
sbb
and
addr16
pop
xchg
shrl
add
pop
pusha
daa
and
scas
pop
cli
pop
adc
xchg
xor
jo
stos
lods
insl
out
fsubrl
inc
insl
inc
mov
rcr
int
clc
icebp
mov
leave
push
popf
sbb
pop
imul
dec
push
adc
popa
pop
pushf
cmp
and
ja
pop
push
sub
je
adc
ret
std
loope
inc
or
xchg
bound
sarb
add
cltd
subb
pop
pusha
mov
fs
in
sub
xchg
or
xchg
push
test
mov
inc
push
jmp
mov
fcompl
scas
shrl
cmpsl
test
jnp
inc
lcall
dec
xlat
xchg
js
loope
movsb
test
fs
add
push
push
out
dec
divb
in
jp
mov
test
xor
pop
push
dec
fsubr
push
or
lds
das
fsubrl
add
test
xchg
aam
mov
adc
adc
mov
jno
mov
in
mov
inc
sub
mov
dec
push
mov
std
aad
pop
xchg
pop
mov
jle
mov
in
push
insl
xor
insl
out
dec
and
aam
xor
add
test
pop
lods
sbb
hlt
lods
rcl
jne
fwait
dec
and
adc
push
in
xchg
ds
xorb
fmull
sbb
stc
mov
mov
popa
mov
insb
inc
xor
movsb
jnp
mov
adc
xchg
and
ds
jnp
lds
iret
in
push
in
jg
les
imulb
push
stos
pop
jmp
cs
in
ret
out
xchg
scas
mov
xchg
adc
les
sbb
daa
xchg
cmp
test
stos
pop
dec
sub
inc
jnp
test
xor
jns
dec
outsb
sbb
mov
out
or
sahf
push
dec
jl
or
fstpt
lods
or
mov
lret
add
push
fdivrl
es
pop
sarb
outsl
sub
jo
inc
jmp
sbbb
and
out
xor
xchg
movsl
inc
testl
add
and
mov
cld
inc
cmovns
sbb
es
mov
fidivrs
test
inc
cld
call
dec
shrl
pop
mov
fisttps
cmp
inc
mov
cmp
push
scas
aad
and
pop
stos
sub
into
arpl
pop
sbb
dec
scas
outsl
push
adc
sbb
mov
or
xchg
push
fidivrs
mov
mov
rcll
push
lods
sarb
ljmp
dec
mov
stos
mov
and
in
pusha
pop
xor
xor
hlt
mov
xchg
mov
add
in
mov
or
and
sub
hlt
dec
xor
push
iret
adc
icebp
mov
aam
sahf
ret
mov
adc
sti
adc
movsb
movsl
imul
pop
xor
outsl
or
lods
outsb
mov
lahf
and
jno
pop
addl
and
je
dec
sub
sub
or
ret
xchg
bound
mov
inc
and
push
dec
push
cmp
mov
addr16
pusha
mov
xlat
cmp
xchg
jmp
fwait
cmpsb
cli
dec
xchg
sub
inc
fs
das
cld
cmp
pop
lret
add
test
dec
adc
mov
sub
cmp
dec
mov
cmp
std
test
sar
call
xchg
pop
pop
mov
sahf
ljmp
sub
cmp
inc
ljmp
cmp
mov
outsb
cmpsl
adc
push
dec
mov
jo
aam
jne
fcomps
lret
and
cmp
dec
adc
jl
jbe
and
xchg
xlat
xlat
mov
and
dec
mov
push
adc
pextrw
popf
push
dec
xor
fstpt
out
and
dec
cmp
testl
int
aas
and
dec
lods
xchg
pop
scas
add
movsb
shlb
or
push
adc
push
shlb
mov
dec
cmp
pop
sbb
cli
cmp
arpl
jno
cmp
xchg
pop
int
jle
cld
jge
fcmovu
and
jb
and
jo
sbb
addb
xchg
adc
push
mov
lock
and
mov
lret
pop
lock
jo
out
cld
cmp
pop
adc
cmp
shll
leave
mov
pop
call
cmpsb
ret
xchg
nop
stos
inc
pop
xor
movsl
sbb
pop
mov
loop
cmp
pop
lcall
push
lret
mov
cli
mov
les
mov
cmp
mov
add
in
cs
loop
enter
cltd
mov
mov
inc
mov
ja
lahf
ss
jae
ficompl
js
xchg
pop
divl
repz
xchg
inc
test
ret
test
mov
je
and
pop
lds
xchg
idivl
fneni(8087
test
outsl
lds
or
cmpsb
jnp
shrb
jp
sbb
xor
mov
adc
xchg
test
jnp
xchg
arpl
mov
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
and
pop
mov
pop
or
adc
aas
ljmp
push
and
out
sub
rol
fsubrs
push
inc
cmp
xchg
inc
std
aad
dec
or
aad
xchg
add
aad
inc
mov
fistl
pop
and
push
mov
and
mov
sub
inc
jne
and
push
mov
jnp
pushf
add
xor
mov
aas
push
sbb
mov
mov
jecxz
mov
xchg
xor
test
pop
subb
movsl
add
cmp
cmc
mov
adc
mov
es
mov
rcll
inc
xor
push
je
fnstsw
dec
lock
outsb
idivl
xor
mov
mov
jmp
repz
push
fstps
mull
mov
out
lods
add
daa
jo
cld
out
scas
aas
xlat
lods
sub
cmc
repnz
out
inc
xor
imul
in
jecxz
pop
mov
push
leave
jg
dec
dec
mov
mov
es
mov
lods
outsb
mov
cli
insb
insl
pushf
mov
rcll
movsb
push
cmp
dec
cmp
jae
dec
xlat
repnz
and
lds
or
out
mov
je
fstpt
xor
nop
lods
push
call
in
stos
jbe
jno
or
jno
mov
mov
sub
in
out
dec
inc
sub
sahf
jecxz
push
xor
add
in
icebp
push
inc
jmp
or
or
cld
xor
xchg
mov
lock
adc
insb
xchg
shr
xchg
sti
cmp
sbb
stos
add
fucomp
lret
sub
sbb
leave
xor
mov
xchg
cmc
mov
out
in
cltd
jae
xorb
loopne
clc
inc
ja
push
adc
lds
adc
sub
mov
clc
mov
xchg
sub
fdivr
cmpl
adc
sahf
fs
sub
rolb
jo
cmp
imul
mov
loope
push
out
aas
jbe
push
jmp
or
mov
push
jle
cmp
in
dec
in
outsb
push
flds
jbe
mov
rcrw
scas
outsb
mov
fwait
mov
sarb
inc
addl
lods
lahf
add
jmp
lods
andl
nop
pop
mov
rorb
stos
mov
mov
push
out
fmul
push
cmp
jne
das
mov
fwait
sub
rorb
sbb
lret
out
lods
lret
mov
pop
cmp
pop
movsl
mov
dec
decl
or
mov
mov
xchg
fldcw
pop
inc
mov
lock
js
enter
test
xchg
aaa
xlat
dec
fstpt
push
or
sbb
ja
push
or
ss
pusha
mov
or
xchg
add
in
jge
add
jae
jno
call
cs
loop
cmp
dec
lods
insl
cmp
push
ds
mov
lods
into
push
dec
inc
add
cli
lds
push
xchg
sub
jg
dec
lock
aam
mov
cmp
les
icebp
or
mov
hlt
mov
ror
mov
push
dec
cli
int
ljmp
mov
mov
cvttps2pi
xchg
arpl
mov
pop
in
adc
mov
ret
xchg
das
hlt
fs
push
ja
push
call
sahf
addb
adc
pop
mov
cmp
dec
negl
sahf
pop
arpl
fidivl
imul
add
insb
cmp
stos
lret
fldl
mov
push
mov
or
cs
negb
jns
aad
lahf
or
jbe
mov
xor
xchg
pop
inc
in
xorl
sbb
adc
insl
mov
cmp
xchg
ret
ret
dec
jl
sbb
dec
icebp
pop
in
xor
test
push
in
loopne
xchg
cmpl
jl
mov
testl
imulb
test
push
xor
jno
ret
rcll
loop
jl
jle
push
inc
mov
and
xchg
mov
xchg
jmp
adc
add
lods
inc
pop
adc
dec
insb
fiadds
cmpl
cmpsb
sub
push
add
and
dec
lods
cld
jge
ficoml
pop
loope
sbb
test
sub
fcmovne
adc
out
or
popa
add
shrd
adc
jg
fcmovnbe
cltd
sbb
leave
inc
out
roll
in
mov
stos
testb
cmp
jmp
adc
inc
add
jns
jp
fisubrl
nop
adc
and
push
add
inc
add
sbb
mov
jae
add
loope
push
aaa
cmc
negl
mov
mov
adc
ret
jns
xchg
cmp
cmp
or
mov
sbb
mov
pop
int3
dec
jbe
sarl
int3
ret
mov
dec
inc
aam
xor
jmp
jne,pt
adc
cmp
fs
sbb
bound
pop
cmpl
sub
test
sub
inc
sub
or
adc
and
dec
sub
mov
icebp
hlt
mov
mov
mov
adc
add
adc
lock
xor
je
mov
lcall
push
cltd
cs
clc
cli
add
sbb
sbb
cmpsb
inc
xor
cmp
enter
shll
fimull
adc
cmp
sbb
pop
xchg
pop
out
push
pushf
lods
pop
xchg
repz
dec
push
sub
push
adc
aam
add
imul
test
daa
lret
pop
pop
mov
clc
pop
pop
lea
inc
push
push
loopne
std
mov
pusha
scas
push
and
mov
int
and
mov
in
xlat
cmp
test
xchg
daa
mov
les
clc
gs
stos
sub
lods
mov
add
cli
mov
popf
push
mov
enter
jp
xlat
aam
inc
imul
inc
and
mov
mov
test
js
mull
inc
dec
and
insb
jo
stc
rcll
and
mov
inc
movb
xchg
sti
sbb
into
add
pop
adc
jg
sub
pop
jae
sbb
sub
sub
add
cmp
xor
popa
cmc
xchg
cmp
jle
movsl
int
pusha
jbe
rolb
mov
xorb
sub
mov
das
mov
xor
mov
lock
insl
decb
imul
out
ljmp
mov
std
jmp
push
jae
je
mov
call
cli
mov
xchg
movsb
add
mov
out
stos
xchg
dec
ja
nop
mov
sarb
js
inc
cmpl
and
mov
fmull
dec
or
or
mov
lret
inc
ja
mov
in
jmp
sti
out
dec
aad
jno
push
pushf
add
inc
lahf
or
jb
dec
loope
jae
sub
outsl
sbb
cltd
mov
ficoms
jge
and
push
and
or
jae
and
add
repz
mov
cli
push
ljmp
jecxz
outsb
dec
inc
stc
repnz
pop
sarb
or
jge
push
cmpb
mov
sub
adc
jnp
hlt
sbb
mov
ret
and
xor
cwtl
pushf
cwtl
and
movsb
sahf
sub
cmp
jo
mov
outsl
faddl
mov
cld
fdivrp
jp
das
xor
mov
cld
pop
sbb
cltd
lea
xchg
incl
es
and
cmp
in
das
mov
and
test
pop
std
in
and
or
ja
mov
jle
les
bound
outsb
add
jg,pn
push
inc
dec
jb
imulb
subb
push
rorb
in
add
daa
push
ror
pop
test
sub
jo
test
int3
scas
adc
adc
cmpsl
xor
xchg
add
hlt
jno
ja
and
ja
loop
ljmp
lea
push
nop
push
out
loope
outsl
rcl
rclb
xchg
xor
add
lahf
pop
mov
adc
cmp
iret
push
and
insl
popf
xor
mov
push
scas
repnz
test
inc
pop
int3
aas
mov
rcrl
jne
push
cli
idivb
repz
xchg
out
in
outsl
inc
test
mov
mov
data16
push
clc
fsubrl
or
xchg
mov
in
repnz
movsb
push
pop
cmp
inc
lea
sti
jbe
adc
or
sbb
pop
pop
cmc
fwait
push
pop
push
adcb
mov
mov
mov
fimuls
inc
xchg
jnp
or
pushf
xchg
sub
add
sbb
jp
rcr
scas
mov
jb
shlb
sub
adc
xchg
mov
fwait
jmp
inc
ss
addr16
sub
out
pop
shlb
movsl
jmp
xor
jle
jns
jbe
ljmp
test
mov
inc
mov
sti
rcl
inc
push
ja
fstpt
xchg
mov
aas
xchg
and
cwtl
lods
xor
and
loope
push
sbb
orw
and
or
hlt
sbb
or
mov
or
xor
push
cmp
sti
or
lcall
inc
sbb
push
rorl
mov
push
popa
ret
cmp
lahf
push
inc
hlt
inc
enter
test
pop
cwtl
add
lret
movsl
dec
orl
cmpb
cwtl
push
cmp
push
xor
sub
gs
or
add
mulb
dec
jno
jle
shll
jmp
in
aad
add
push
dec
in
js
mov
jnp
clc
mov
mov
adc
xor
pop
mov
xor
cmp
pop
sti
sbb
dec
cmp
insl
sbb
int3
arpl
adc
push
mov
dec
adc
das
mov
jns
jecxz
mov
icebp
inc
mull
mov
fcmovu
test
pop
add
nop
jmp
push
rcr
xchg
mov
jl
popa
fsubs
cld
push
cmp
pop
and
cmp
sbb
inc
xchg
xchg
dec
call
addl
enter
pop
push
mov
fcoms
mov
add
jae
ds
cmp
push
fadd
xchg
scas
test
adc
rorl
stc
pop
movsl
lds
and
mov
shrl
andl
mov
test
jmp
mov
notl
in
xor
shlb
arpl
out
aam
es
pop
lds
mov
rorb
adc
aad
jle
xor
jmp
cmc
xor
jl
mov
test
mov
xor
xchg
push
aaa
cmpsb
hlt
popa
enter
push
dec
sbb
and
out
iret
stc
push
outsb
xchg
in
ret
mov
mov
aam
imul
or
loopne
into
mov
cwtl
pop
adc
out
adc
stos
push
testb
pop
imulb
dec
orl
jbe,pt
jae
fcomip
mov
jb
mov
shll
sbb
cmp
mov
pushl
mov
sub
jbe
sub
dec
inc
outsb
enter
jecxz
int3
addb
hlt
inc
insb
pop
test
loopne
stc
mov
pop
jbe
cmpsl
lds
jne
out
pop
bound
icebp
cmp
aam
push
mov
les
addr16
cmp
cmp
movb
ja
js
imul
imul
movb
jae
fisubrl
fiadds
cld
push
inc
jbe
mov
dec
pop
xchg
xchg
inc
test
test
dec
ds
xchg
xor
insb
je
fmull
repz
add
inc
inc
add
xchg
push
std
rcrl
push
insl
xchg
xchg
test
or
push
xlat
xchg
xchg
sbb
and
testl
pop
outsl
pop
lcall
daa
cmpsl
sbb
shll
xchg
ds
fs
jnp
jns
inc
movsl
mov
mov
push
hlt
cmp
push
rorl
out
clc
push
fwait
and
lret
jo
inc
adc
pop
out
fsubl
imul
pop
test
aad
and
jge
enter
jecxz
adc
imul
and
mov
jne
push
fistpl
pop
mov
pop
xchg
fmull
push
ret
int
adcb
sbb
aas
push
je
mov
roll
mov
push
and
aas
imul
aam
fcomps
pop
shlb
roll
insl
sub
add
dec
repz
mov
dec
sub
jnp
sbb
push
pop
mov
and
mov
data16
arpl
cmpl
sbb
loope
push
xchg
xor
mov
cmc
fdivrp
cld
push
lcall
cmpl
mov
sbb
mov
mov
pop
xor
sub
ret
ja
popa
in
je
jmp
in
fiadds
sarl
sbb
sbb
pop
mov
mov
test
mov
push
dec
icebp
mov
pop
xchg
std
bound
dec
sti
aaa
push
pop
hlt
push
xchg
cli
andl
sub
mov
mov
cmp
jns
inc
out
testl
sub
nop
or
push
mov
aaa
clc
fisubrl
lret
scas
jg
fwait
out
pop
jns
ja
xor
push
adc
mov
add
adc
or
test
testb
setae
cld
ds
cli
cmpsl
or
test
fsub
rolb
adc
cmp
dec
lock
push
pop
sbb
inc
push
addr16
mov
lret
mov
and
inc
xchg
vunpcklps
or
ret
and
mov
adc
rcr
repnz
dec
xrelease
fidivrl
ret
fcmovbe
ret
push
outsl
push
lret
sbb
xchg
fucomi
dec
pop
or
jb
and
push
sub
pop
insl
fwait
out
cmp
lahf
mov
sbb
repnz
lds
inc
pop
xor
push
mov
cwtl
adc
in
sub
cmp
jns
ljmp
cwtl
sub
cmp
lods
pop
fstl
jo
push
stos
sub
mov
popf
xor
add
data16
imul
ficoms
push
xlat
mov
cmp
xor
push
jne
repnz
or
mov
popf
out
inc
ret
xor
jmp
imul
arpl
orl
fcmovnbe
iret
adc
test
add
sub
jp
dec
in
jp
mov
call
movsb
push
xchg
lret
ret
mov
rorl
or
shrl
enter
and
into
fildl
cs
or
ret
sbb
cmp
rcr
int
and
mov
mov
popa
add
in
stos
mov
rcrl
xor
mov
cmc
xlat
pop
pop
je
fistps
repz
into
arpl
cmp
jb
xor
or
dec
pop
aaa
out
cs
inc
push
push
pop
pop
fsubl
cld
insb
iret
sbb
in
stos
cmp
xor
lahf
cwtl
sub
sub
scas
or
add
jmp
pop
mov
xchg
push
in
imul
dec
push
fistpll
enter
in
cld
sub
out
xchg
ror
xor
testl
repz
clc
pop
loop
sub
insl
je
mov
inc
popa
push
sti
pop
test
arpl
aaa
into
clc
int3
cmc
mov
pusha
adc
dec
aad
pop
xor
add
imul
mov
mov
mov
notb
and
dec
stos
dec
xchg
cwtl
mov
sbb
jno
inc
cwtl
add
mov
mov
dec
loopne
add
lahf
pop
jle
add
lcall
les
jmp
cmp
ds
xchg
push
pop
stos
mov
mov
mov
and
xchg
jle
dec
cmp
hlt
sbb
mov
into
shlb
ljmp
inc
mov
iret
jbe
mov
sti
std
mov
mov
cwtl
add
jbe
cs
sub
or
scas
xor
and
mov
xlat
add
add
aam
pop
js
cltd
dec
lahf
sbbl
lret
notb
fcoms
sbb
xchg
sub
repnz
mov
push
mov
bound
push
jl
dec
aad
xor
and
xchg
pushf
and
fisubrs
loop
dec
call
test
adc
out
inc
lds
inc
jle
adc
jbe
rcrb
daa
adc
xor
mov
aam
fcmovbe
or
ret
out
pop
xor
data16
mov
jp
dec
inc
add
inc
js
adc
inc
sub
jno
xor
imul
mov
or
popf
pop
ja
adc
roll
dec
popa
addr16
xchg
jp
call
add
adc
iret
or
and
pop
jae
mov
dec
lods
jae
ljmp
cmp
cmpsb
jns
sbb
ljmp
mov
fcmovbe
bound
dec
mov
add
in
push
fisttpl
mov
jle
enter
sbb
push
jae
dec
test
xor
jmp
in
idivl
lret
sbb
nop
sbb
fsubrs
or
arpl
lret
mov
cld
loop
js
daa
xchg
pop
lods
mov
fcomi
sti
sub
or
add
cmp
add
lods
dec
mov
pop
dec
jbe
fcompl
push
mov
scas
cmpsl
inc
add
mov
and
pop
or
dec
out
jmp
stos
cmp
int3
enter
cs
xlat
dec
cmpsl
popf
adc
into
inc
jp
and
push
xor
inc
push
repnz
mov
loopne
fstpl
stos
inc
cli
xchg
stos
adc
je
or
mov
repz
mov
pop
leave
stos
frstor
xchg
js
sbb
icebp
fcom
inc
cmp
lret
jns,pn
mov
ret
imul
sahf
pop
mov
hlt
adc
mov
nop
xchg
pop
divb
jle
mov
dec
hlt
dec
mov
dec
aas
cmpsl
and
es
dec
mul
adcb
cmpsl
push
or
fldcw
ficoms
xchg
lea
fcoml
repz
test
cs
out
imul
sbb
jne
jne
dec
arpl
mov
sub
shlb
jbe
mov
shrl
idivb
insb
mov
mov
cmp
jmp
jnp
sub
jmp
je
popa
mov
repnz
mov
call
mov
addl
icebp
icebp
pop
repz
jecxz
cmp
fsubs
outsl
sub
les
rcll
icebp
in
pop
xor
shrl
pop
rol
fldcw
add
mov
test
mov
mov
pop
hlt
add
mov
and
dec
fdiv
push
xchg
jg
mov
inc
and
in
inc
adc
pop
and
jmp
insl
sahf
shrl
push
xchg
sub
loop
cmp
mov
push
and
add
in
inc
loope
andb
and
cmpsl
cwtl
cld
aad
inc
dec
dec
sub
ja
cmp
loopne
loopne
pop
popf
fisubrl
add
fcomip
sbb
jge
insl
scas
mov
std
mov
xchg
inc
mov
icebp
mov
inc
mov
push
or
mov
jmp
push
mov
or
addr16
mov
dec
dec
outsl
sub
rcrl
aam
xchg
mov
cltd
cmc
adcb
jg
repnz
es
mov
xlat
jne
stc
int
mov
out
loope
cmp
inc
and
mov
std
pop
in
scas
adc
inc
lcall
sbb
add
fs
insl
pop
jnp
inc
mov
fildl
std
jp
push
add
xchg
and
test
dec
xchg
jnp
lret
and
pop
in
add
sbb
push
mov
xor
pop
orb
dec
jne
mov
add
or
repz
pop
push
inc
sbb
mov
xchg
pop
into
mov
dec
inc
aaa
jl
outsl
jnp
stos
lcall
jg
outsl
test
fsubs
xchg
push
push
lret
aas
pop
cmc
aam
out
sub
mov
nop
jbe
sarl
mov
stos
addl
cmpl
in
mov
sti
int
inc
or
imul
aam
xor
sahf
leave
pop
and
fwait
mov
sarb
fs
cmpsb
lods
int3
jae
iret
xchg
adc
inc
xor
lea
lods
xchg
or
dec
and
popa
lcall
push
sub
sbb
fs
sub
xchg
xchg
sbb
loop
and
add
xor
dec
inc
ljmp
jge
adc
add
fldenv
jno
testl
xor
pop
sub
xchg
jae
call
in
nop
xlat
xor
jbe
dec
out
shr
mov
add
bound
and
fisttpl
fstps
adc
jne
aam
stos
out
or
pop
outsl
mov
inc
sub
mov
bound
push
fwait
jle
call
adc
loope
sbb
mov
dec
xorb
pop
cltd
cs
insb
cmp
xchg
jns
inc
adc
dec
leave
mov
adc
hlt
cwtl
outsb
icebp
aaa
sahf
mov
inc
stos
fstps
cmp
xchg
or
inc
xor
push
loope
push
roll
dec
mov
or
push
mov
loop
inc
ret
sub
push
push
das
call
repnz
cwtl
bound
cmp
sbb
leave
xor
fistps
loopne
push
sub
jmp
mov
push
lahf
adc
in
int3
lcall
pop
daa
push
outsb
stos
push
aam
pop
xlat
in
pop
xor
xchg
xchg
sub
xor
jle
pop
fsubs
pop
jmp
ljmp
out
push
stos
es
into
pop
add
push
dec
xor
out
jo
sbb
out
loop
mov
dec
fsts
xor
lret
sub
nop
sarb
lock
sarl
loope
xchg
sti
adc
loopne
ret
lret
sbb
adcb
push
aad
mov
adc
adc
mov
inc
adc
xchg
test
stos
sub
rol
mov
pop
cwtl
adc
loop
push
rorl
das
loope
adc
lahf
repz
cld
setae
lock
mov
adc
outsl
arpl
cltd
sbb
out
loop
sub
inc
sub
int
mov
movsl
mov
nop
jg
aaa
inc
inc
bound
insl
mov
xchg
xor
cmpsb
push
xor
data16
mov
add
cmpsb
pop
test
cmp
je
push
cld
sbb
sub
lods
inc
mov
xor
add
ss
dec
aas
subl
pop
pop
add
mov
mov
mov
js
std
enter
inc
jno
xchg
push
and
dec
sarl
fs
and
fidivrl
aad
fs
out
pushf
inc
add
lock
inc
stos
ds
popf
pusha
jbe
andb
mov
scas
dec
or
lea
pop
pushf
fmuls
and
mov
mov
aas
cmp
or
mov
add
sub
loope
or
jl
pusha
push
fistps
icebp
jl
aad
test
mov
dec
xchg
es
mov
mov
push
push
xchg
mov
inc
test
test
xor
jmp
jmp
rcl
and
scas
es
insl
aas
mov
jo
stos
and
mov
pop
pop
mov
sub
movb
xor
sbb
sbb
mov
scas
dec
xchg
js
sbbb
mov
lret
cwtl
dec
pop
lret
or
ret
push
dec
iret
out
test
push
sub
cmpsl
pop
pop
sar
sar
inc
addr16
addr16
stos
cmp
xchg
cli
xor
push
inc
sbb
jnp
shll
sbb
inc
pop
push
fcompl
insb
pop
inc
xchg
xchg
es
push
mov
lret
inc
shlb
xchg
xchg
test
movsl
ljmp
mov
and
ret
mov
nop
jo
pop
add
les
inc
jmp
hlt
jg
dec
mov
add
cmp
dec
cmp
imul
pop
insb
outsl
lods
pushf
sub
cli
xor
int3
mov
sub
xor
jns
sub
pop
jl
cltd
inc
adc
call
lahf
into
dec
fstps
and
inc
mov
jp
inc
sahf
scas
mov
push
jno
add
mov
dec
mov
stc
push
in
cmc
mov
mov
adcl
enter
mov
pop
push
cmp
inc
push
mov
sub
mov
pop
ss
loope
imull
ud1
rclb
cmpsb
mov
fildll
sub
jae
cmp
je
xchg
jo
add
add
sbb
mov
mov
inc
mov
mov
and
inc
push
push
sub
mov
push
xor
add
shrl
popf
addr16
mov
jb
jbe
je
mov
cld
enter
xorl
fsubr
xlat
in
mov
daa
mov
xor
in
scas
dec
mov
scas
mov
test
stos
xor
inc
mov
out
fst
insl
out
push
adc
add
cmp
leave
rcl
inc
mov
fildl
inc
in
dec
sbb
fisubl
jbe
sub
xchg
repz
cmc
rolb
inc
cs
aam
mov
pop
mov
adc
cltd
push
cmp
lock
dec
ds
jnp
pop
ds
mov
jp
scas
rsqrtps
pop
sbb
gs
mov
sbb
arpl
push
cmp
jecxz
push
loop
mov
push
fildl
sbb
dec
xchg
mov
ficomps
sub
addr16
je
popa
leave
fidivl
xorl
xchg
fldl
push
iret
dec
cmpsb
pop
xchg
insb
pop
push
dec
push
push
shlb
cli
mov
jg
cmp
jp
sub
jp
insl
mov
cmp
sub
sbb
in
mulb
xchg
jp
jae
aaa
sar
xchg
in
pusha
dec
std
ds
imul
insl
and
inc
rcrb
lcall
in
inc
or
add
stos
scas
jne
mov
imul
jno
bound
mov
add
cmp
leave
pop
cmpsl
popf
sahf
fldcw
xor
loopne,pn
pop
inc
inc
jne
push
loop
mov
js
pop
jl
dec
jnp
xchg
popw
out
push
mov
jno
dec
sbb
mov
push
sbb
mov
scas
dec
mov
pusha
ljmp
and
jo
lahf
inc
jns
and
insl
mov
jno
sub
lds
pop
in
xchg
pop
pop
dec
clc
inc
cmp
or
das
mov
inc
fidivrs
je
popf
or
push
fldcw
jnp
cs
sbb
in
and
dec
ljmp
push
or
jae
mov
inc
ret
jno
jnp
pop
aad
push
dec
inc
pop
stos
xor
pop
out
xchg
jl
or
xchg
dec
es
or
jg
dec
push
xchg
mov
movsb
outsb
testb
shlb
mov
imul
push
push
inc
inc
mov
inc
incb
loopne
jecxz
cmp
fcoms
pop
add
shl
loopne
iret
les
and
sbb
add
dec
and
or
sbb
push
xchg
pop
loope
push
cmp
jno
cmc
ja
adc
mov
popa
jp
mov
out
and
sbb
xchg
mov
xor
inc
mov
mov
mov
aam
push
mov
mov
adc
mov
fsubrl
out
xchg
lods
out
dec
dec
and
jg
sahf
xor
js
loopne
and
sub
sub
out
adc
in
add
arpl
ret
test
mov
pop
or
repnz
add
pop
mov
dec
scas
and
pushl
add
mov
int
sbb
jnp
sarl
loop
fbld
cltd
ficompl
push
stc
sarb
test
arpl
pop
testb
pop
scas
mov
outsl
orb
addb
jg
jno
sub
mov
enter
outsb
sub
pop
int
dec
rcrb
push
cs
mov
pushf
jns
aam
and
in
mov
mov
push
pushf
aam
mov
dec
jo
pop
mov
mov
outsb
sbb
sub
xchg
fcompl
mov
icebp
jp
iret
imul
imul
stos
adc
add
adc
or
xlat
jecxz
mov
lcall
jae
lock
jmp
dec
adc
mov
dec
jle
xor
enter
loopne
xchg
sbb
sbb
jp
ss
repnz
insl
push
mov
jecxz
xchg
pop
gs
fcoml
subb
cmp
mov
jns
xor
jecxz
repz
jbe,pt
in
fstl
cld
aam
and
into
out
jecxz
stos
adc
or
push
xor
cltd
inc
dec
adc
stos
mov
out
sub
test
push
and
cmp
das
mov
sarb
fs
mov
xchg
mov
xlat
int
nop
aas
cmp
js
sbb
jecxz
ficoms
daa
dec
adc
adc
ss
out
inc
xchg
inc
and
ljmp
dec
fcomip
and
and
jl
test
jl
lods
pop
mov
sbb
sub
cmpsl
jmp
call
adc
inc
push
xchg
arpl
outsl
pop
cmp
or
scas
jecxz
lds
jmp
pop
inc
mov
mov
cs
sub
pushf
int3
sti
inc
cmp
or
lods
cmpsb
ds
and
jg
in
bound
push
jmp
xor
mov
in
sarl
pushf
push
negl
daa
add
pop
inc
aad
subl
mov
jp
adc
call
push
ds
push
sahf
lds
jge
in
inc
push
and
or
fwait
fs
sub
in
jle
mov
jp
out
and
cmp
push
mov
fwait
push
add
fidivrs
xchg
loopne
repnz
dec
xchg
xor
sbb
and
add
cli
jns
sub
mov
repnz
inc
inc
bound
jmp
mov
int
inc
mov
jbe
fisubl
dec
sub
lds
add
pushf
stos
popf
test
jne
scas
mov
or
rcl
or
test
sbb
mov
jp
in
in
xchg
mov
inc
mov
sbb
rcrl
and
adc
mov
pop
jmp
ds
adc
xchg
fwait
mov
nop
sub
add
jne
pushf
dec
sbb
xchg
cwtl
mov
or
movsl
das
fbld
inc
loope
jecxz
jbe
dec
test
adc
jmp
sbb
xor
mov
popf
and
inc
out
das
aaa
pushf
push
cs
subb
dec
aaa
out
push
cld
es
lret
sbb
pushl
loope
loopne
dec
fsubr
in
inc
sub
mov
dec
pop
cltd
add
rorl
mov
xor
sbb
lahf
push
add
cmc
cmp
fsubs
ljmp
push
sahf
sti
andb
out
dec
adc
mov
mov
outsl
pushf
ja
cs
mov
js
scas
and
popa
mov
jmp
insl
mov
mov
xor
decl
cmp
out
mov
and
jae
lahf
movb
xchg
mov
repnz
mov
jno
lret
push
cwtl
in
push
shrb
mov
fnstsw
lods
gs
lock
ja
test
mov
xor
insl
cmc
xchg
sbb
pop
idivl
mov
adc
sub
dec
adc
xchg
movsb
adcl
or
lret
cmp
icebp
and
jae
xchg
push
or
rol
mov
lret
andl
popf
mov
movsb
xor
out
lods
mov
cwtl
decb
insb
mov
clc
mov
mov
and
jp
fdiv
xchg
fcomip
cltd
sub
sbb
pop
adcb
inc
jnp
fdivrs
add
jae
push
popf
lahf
cmp
jmp
or
inc
out
orl
sbb
sbb
push
push
into
divl
pop
mov
jp
fcmovnbe
insb
mov
popa
add
xor
push
loope
lret
out
ljmp
dec
add
pop
pop
xchg
push
into
data16
dec
jg
adc
adc
push
xchg
pop
xchg
or
inc
mov
scas
es
dec
inc
and
cmpsb
bound
addr16
mov
iret
xchg
mov
jnp
pusha
cs
dec
mov
mov
and
adc
hlt
xorps
loope
shr
and
test
mov
out
movsb
mov
cwtl
mov
enter
ficomps
insl
repz
inc
sbb
adc
push
jo
inc
pushf
les
inc
jp
xor
pusha
jo
sub
jb
and
pop
cmpsl
and
or
adc
mov
or
cwtl
push
mov
add
pop
ljmp
lret
add
sbbb
or
loop
jle
movsl
ljmp
adc
jmp
lcall
imul
lods
jae
xor
mov
adc
clc
out
out
pop
repz
pop
fadds
jmp
add
popl
daa
inc
adc
or
in
push
int3
inc
ret
mov
sbb
rcrl
les
push
or
in
rolb
sub
mov
mov
loopne
push
leave
out
popa
std
int3
mov
fldl
les
mov
cltd
cmp
stos
cmpb
out
pop
inc
jp
in
cli
mov
stos
inc
xor
in
jno
dec
inc
mov
push
dec
mov
dec
xchg
mov
mov
jo
pop
sub
sarl
pop
mov
jmp
je
insb
mov
fmull
mov
sbb
xchg
test
fisubrs
inc
cmp
add
inc
pop
stc
add
daa
and
test
shrl
ror
jecxz
bound
sub
mov
lret
sbb
fdivrs
add
in
sti
fimuls
and
das
in
scas
xchg
mov
jo
mov
pop
sbb
mov
xchg
dec
fs
icebp
ljmp
out
cld
aad
mov
cltd
and
cmp
aam
aaa
fisttps
xchg
stos
push
mov
out
adc
int3
mov
fnstcw
jae
movsl
jp,pt
stos
loopne
fmull
outsb
divb
movsb
xchg
fnstcw
loope
mov
push
popa
mov
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
cmp
cmp
and
jae
inc
cmp
les
jecxz
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
je
inc
mov
lods
lds
mov
pop
push
mov
inc
icebp
mov
outsl
xor
inc
mov
add
jmp
in
pop
add
jmp
sbb
jmp
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
lcall
mov
add
dec
das
pop
lea
out
push
lds
xor
cmpsl
inc
leave
cs
xchg
ss
sbb
mov
loopne
push
stc
mov
daa
mov
mov
idivl
adc
mov
enter
adc
ja
imul
jo
xor
xchg
cmc
imul
xchg
push
shrl
js
mov
pop
xchg
lcall
dec
cld
cmc
mov
out
cmp
push
fbld
lock
pushf
xor
inc
ja
inc
das
test
andb
das
popl
fcmovnb
adc
mov
std
hlt
std
ficomps
loopne
lret
je
mov
xlat
dec
loop
rcll
fdivs
insl
jae
mov
jno
xchg
test
or
mov
and
lret
xchg
bound
mov
or
mov
scas
or
test
dec
ficoms
inc
and
in
push
cli
std
lock
sbb
xchg
jl
pop
mov
pop
rorl
fiadds
add
jnp
push
sbb
arpl
fimuls
hlt
pop
dec
xor
add
faddp
in
pop
sbb
ror
ret
sbb
les
and
xchg
cmpsb
jge
xlat
rolb
add
mov
and
js
inc
ror
shl
aad
mov
insl
sub
push
dec
cmpsb
idivb
xchg
cmp
loope
and
and
mov
push
enter
test
xor
add
add
pop
outsl
dec
and
cltd
lcall
daa
les
fstl
push
jecxz
lret
or
in
jb
pop
push
fwait
jno
sbb
xchg
cmp
add
dec
mov
mov
xor
fcomip
shr
and
xchg
sub
shlb
pop
rorl
into
and
cmp
adc
popf
fnstcw
test
mov
sub
mov
mov
sub
sbb
xchg
mov
pop
lret
mov
iret
mov
pop
leave
jecxz
orb
dec
cmp
shrl
pusha
iret
ss
fistl
adc
add
or
cmp
jmp
imul
iret
insl
push
cmp
imul
mov
fcoms
scas
out
jo
adc
cmp
leave
push
icebp
and
or
adc
ljmp
lahf
aaa
int
mov
xor
mov
xor
mov
jecxz
sahf
jp
pop
fisubl
add
add
fdivs
test
mov
sbb
xchg
ja
stc
icebp
cmp
mov
mov
xchg
or
mov
leave
lds
sub
mov
jne
nop
mov
and
add
pop
mov
mov
outsb
mov
fdivr
fcmovbe
cmc
out
or
pushf
sub
cmp
sub
mov
cld
mov
xchg
or
push
mov
test
int
pushf
andb
addl
subb
add
xchg
push
in
loop
or
push
inc
sahf
clc
adc
jp
dec
or
fcom
push
mov
loop
mov
movsb
aas
jmp
out
jne
or
dec
lea
loope
ss
cmp
ret
push
push
fdivl
push
and
jle
jge
xor
cmp
push
xchg
ds
stos
imul
sbb
das
subb
outsl
jo
sarl
fisttps
lods
sbb
stc
inc
sub
fisttpll
sub
jno
inc
sub
mov
xchg
xchg
dec
dec
xor
es
cmpsb
scas
sub
dec
sbb
out
push
xchg
mov
shr
popf
enter
popf
loope
repnz
jae
dec
iret
notl
scas
adc
notb
xchg
inc
pop
gs
jmp
mov
sub
aaa
testb
jmp
cmp
mov
enter
ds
xchg
nop
jo
fisubl
jbe
mov
pop
jae
movsl
lock
cli
fwait
outsl
xchg
ror
mov
dec
sub
push
dec
lret
lret
outsl
jne
pop
stc
mov
xchg
dec
sub
cli
mov
out
xchg
sbb
push
adc
das
jecxz
lcall
lcall
js
mov
push
xchg
std
xor
dec
xor
push
add
lahf
movsl
in
inc
mov
sbb
mov
int3
inc
lret
ljmp
orl
aaa
push
fistl
mov
in
rorl
sbb
jecxz
mov
pop
sub
cmp
sbb
stos
nop
dec
out
xchg
cmp
or
lahf
jbe
mov
jl
subl
rcrl
in
fsubrp
jbe
cmp
out
push
xchg
fcomps
cmpsb
pop
xor
push
push
push
mov
stos
adc
xchg
addr16
sbb
stc
mov
or
fcoml
xchg
movsb
lret
pop
scas
test
pop
cwtl
movsl
inc
outsl
inc
jmp
cmpsl
jge
dec
mov
dec
sub
rcrb
xchg
into
xor
push
add
sub
lcall
daa
shlb
or
leave
jae
dec
xchg
or
or
das
lods
test
mov
fldenv
mov
add
or
push
std
dec
and
push
sbb
divl
mov
shr
mov
and
repnz
sbb
ja
loope
pop
jb
int
in
pusha
sbb
jmp
daa
add
sbb
enter
or
mov
jbe
sahf
mul
xchg
sub
add
fwait
pop
xchg
out
std
fwait
in
je
or
jbe
inc
out
push
inc
mov
or
test
or
int3
imul
stos
pushf
sete
orl
jle
inc
sbb
lahf
mov
mov
or
out
jo
test
push
mov
fiadds
adc
mov
or
fcomi
cmpsb
loope
dec
push
dec
ret
fwait
sub
repnz
cmp
into
lret
mov
jmp
aas
mov
outsb
out
sub
inc
sub
push
mov
test
sarl
inc
outsl
jnp
in
aas
adc
mov
aam
in
xchg
insl
mov
shrl
out
cwtl
add
push
push
xchg
add
fistps
fisubrl
hlt
mov
push
cmp
enter
lods
jge
xchg
pop
rolb
test
xchg
cmp
insl
out
pop
mov
test
xchg
xchg
push
dec
mov
aas
and
es
decl
ret
inc
test
test
mov
data16
push
xchg
ss
ljmp
sbb
insl
sarl
adc
test
test
or
cmpsl
sti
testb
xor
rorb
xchg
icebp
test
inc
or
sub
xchg
fstpl
jle
push
mov
insl
and
insb
cmp
mov
push
aaa
inc
sub
jbe
jne
imul
cs
mov
xchg
push
movsb
cmp
lcall
pusha
repz
xchg
cli
and
ss
out
and
andb
mov
push
les
xchg
movsb
mov
fbstp
nop
jmp
xchg
jmp
inc
mov
jb
test
inc
inc
test
xchg
dec
outsb
xor
pop
data16
dec
adc
push
mov
adc
in
adc
outsl
movsl
mov
testb
movsb
xchg
pusha
test
or
iret
pop
pop
data16
clc
pop
push
add
cmpsb
jb
inc
or
cmp
inc
inc
add
movsl
cmp
mov
cmp
and
int3
in
cs
stos
orl
test
mov
sbb
add
sti
cmp
in
shlb
arpl
nop
and
and
imul
push
jb
xchg
cmp
mov
lahf
add
mov
sarb
repnz
xor
pop
in
xor
xorl
xor
add
jno
cmp
mov
mov
add
push
mov
daa
int3
loope
pusha
cmpsl
adc
stc
cs
lret
mov
xchg
pop
sub
rclb
or
out
mov
pop
jno
jae
fwait
jmp
jle
ret
or
add
pop
roll
add
jo
rcrb
ja
inc
add
jmp
mov
mov
adc
in
sub
adc
push
xchg
and
inc
jmp
mov
mov
mov
sub
jno
or
sub
and
in
or
sbbl
or
pop
inc
test
push
jne
stos
dec
push
sbb
insl
mov
jno
sbb
inc
mov
orb
daa
adc
ffreep
push
pop
int3
xor
pusha
sbb
ficoml
xor
scas
fistpl
mov
add
cmp
nop
loopne
mov
dec
roll
sbb
sahf
lods
ds
push
in
mov
lahf
fnstcw
cmpsl
sbb
js
inc
adc
std
add
leave
push
lret
xchg
gs
or
or
push
adc
negb
test
sti
dec
sbb
dec
cmp
std
clc
pop
jnp
jae
and
mov
pop
xor
push
cmp
sub
dec
popa
dec
fnstenv
mov
test
push
das
rcrb
sbb
dec
adc
xor
movsb
sbb
fnstenv
fadd
add
loop
iret
sub
or
inc
cmp
or
cltd
jle
popf
mov
std
outsl
stos
push
and
icebp
call
xchg
decl
cmp
ret
in
mov
fiaddl
jl
repz
pop
das
jae
mov
push
lahf
pop
cwtl
lock
and
cmp
jns
sbb
add
movsl
push
pop
mov
fists
xor
push
ret
ja
adc
push
out
jno
push
fidivl
jo
mul
push
test
not
mov
push
dec
sbb
rclb
push
lds
movsl
inc
cwtl
fisubs
push
ja
push
popa
adc
nop
mov
add
maxps
clc
xor
imul
push
mov
pop
xor
addb
test
fsubs
adc
popa
out
fstpt
xchg
das
or
repz
shll
push
mov
jl
std
shlb
dec
add
in
or
and
mov
loopne,pn
loop
jp
dec
int
fcoml
insb
or
mov
pop
jp
cld
push
inc
ret
lahf
xchg
jmp
jae
mov
push
fcomi
fisubrl
inc
insl
push
xchg
mov
and
push
sbb
pop
mov
mov
mov
pop
jno
sbb
xchg
mov
bound
push
pop
lds
popa
in
xchg
cmp
aas
nop
mov
dec
divb
mov
sbb
pop
sbb
sahf
out
int3
aad
adc
inc
test
xlat
mov
into
xchg
push
pop
fbstp
add
add
mov
push
arpl
and
repnz
pop
add
movsb
fwait
xchg
xchg
adc
js
aas
inc
push
mov
popa
or
push
cmp
imul
divb
cs
mov
idivl
dec
mov
fidivs
adc
in
loopne
push
xor
sub
es
xchg
pop
inc
cmp
cmp
sarl
sbb
mov
ss
aaa
out
xorps
std
movsb
jnp
sub
sbb
adc
stos
repnz
sub
cmp
loope
push
mov
shll
fucom
dec
xchg
loop
int3
xchg
or
mov
dec
cltd
fwait
xchg
and
sub
add
mov
and
scas
stc
psllq
incl
jp
adc
rolb
jmp
rorb
xor
fcoml
mov
xchg
cmpsb
cltd
xchg
xor
push
js
inc
push
in
cmpsb
jb
dec
push
daa
daa
imul
jecxz
mov
adcb
pop
lret
je
outsl
scas
movsb
push
jns
out
jbe
pop
fwait
ret
andl
add
lds
fisubrl
ds
jge
jbe
sbb
sub
fs
push
int3
sub
xchg
fisttps
movsb
cmp
mov
fs
lock
mov
jne
movsb
mov
push
lods
aad
in
aad
mov
popa
neg
movsl
add
bound
aaa
dec
addr16
push
jns
push
out
je
in
mov
jbe
movsl
aad
jb
sub
repz
iret
shll
mov
jae
ja
mov
and
les
jl
jo
dec
enter
cmp
sti
cmp
adc
lock
and
incb
mov
test
in
mov
dec
movsl
lea
hlt
cs
or
adc
lds
push
shlb
mov
mov
mov
rcrb
mov
jne
xchg
fsubl
xchg
std
mov
out
inc
arpl
cmp
cltd
xchg
loopne
sbb
pop
inc
push
adc
xchg
shr
shll
out
sti
push
dec
ret
ljmp
inc
inc
dec
or
sub
ret
data16
and
push
mov
add
mov
pop
insb
mov
jno
lahf
movsb
les
jl
mov
mov
xor
or
int
sbb
fcom
push
xchg
cltd
push
insb
push
push
and
sbb
xchg
mov
and
inc
cmp
decb
cwtl
out
mov
push
jp
test
fidivs
push
mov
movsb
dec
mov
mov
sbb
aad
aas
test
lea
and
aaa
dec
ret
stos
bound
cmp
mov
mov
jmp
rorl
push
dec
push
fisttpl
pusha
pop
and
mov
push
mov
mov
aam
jno
enter
roll
jae
fadd
push
sbb
xchg
call
add
add
pop
mov
cli
je
insb
xchg
mov
xchg
aad
xchg
push
es
test
insl
test
inc
outsb
add
mov
dec
push
adc
test
sti
push
pop
push
pop
mov
rorb
test
jns
stos
movb
daa
add
les
push
sub
lock
lods
and
pop
dec
add
mov
pop
sbb
lds
add
je
lret
or
addr16
sbb
rdmsr
xor
sbb
mov
in
sub
pop
sbb
jbe
pop
ficoms
cwtl
jle
mov
sbb
xor
mov
or
repz
adc
mov
adc
jl
jecxz
pop
cli
gs
cld
xchg
movsb
ss
mov
add
fisubs
enter
xchg
fidivrl
or
pop
xchg
aas
hlt
js
cmp
testb
int3
addr16
enter
xlat
daa
push
add
xor
adc
adc
adc
cs
pop
mov
in
nop
mov
pop
lods
out
mov
mov
je
pop
mov
inc
ficoml
shll
out
xchg
mov
adc
jno
mov
dec
pop
lcall
fdivs
jnp
jg
cld
imul
dec
dec
nop
dec
cmp
mov
cwtl
loop
cmp
fsubrs
mov
sti
pop
stc
pop
cwtl
mov
loopne
dec
and
cmpb
sub
test
xchg
dec
mov
add
cltd
lret
aam
in
sub
movsb
test
xchg
push
mov
and
mov
shlb
loop
mov
inc
ss
xor
ss
sub
dec
cmp
ss
mov
push
jbe
pop
lods
sub
pop
xchg
adc
jo
insl
pop
mov
jb
mov
mov
sbb
sbb
outsb
cmp
psllq
gs
mov
sbb
sub
nop
adc
aaa
mov
sbb
out
push
test
xchg
mov
cmovns
stos
mov
push
jns
dec
add
sub
scas
stc
je
xchg
xchg
rcrl
add
scas
xor
mov
mov
sub
gs
test
sub
dec
adc
mov
aas
pusha
out
mov
jbe
sub
dec
pushf
adc
int3
outsb
push
add
insb
fadd
rorl
and
pop
xor
stos
push
mov
std
jmp
std
scas
sub
daa
dec
fstpt
shll
das
inc
into
push
fmulp
cmp
or
cwtl
mov
mov
sahf
ret
sbb
es
out
or
or
andl
nop
push
dec
repnz
popa
pop
or
push
in
jns
inc
push
nop
xor
iret
sub
lods
adc
xor
outsb
rcrb
hlt
inc
test
cmp
out
xor
mov
mov
hlt
in
js
iret
adc
stos
mov
loop
xchg
fdiv
sbb
aaa
dec
in
ss
adc
sahf
je
mov
fcmovb
shl
loop
into
mov
pushf
mov
imulb
shl
jl
cmp
push
movsl
jo
pop
subl
pop
push
push
lea
mov
or
mov
subl
in
popa
lods
lcall
in
fdivrl
lret
movsb
or
stos
sar
add
sub
lds
jl
repz
mov
sbb
rolb
fisttpll
push
daa
loop
imul
lock
lret
loopne
fidivrl
dec
fs
int
mov
ss
repnz
mov
adc
adc
fs
test
or
sti
imul
icebp
inc
add
lock
aam
movsb
dec
icebp
xchg
dec
sbb
out
movsb
aam
xchg
mov
mov
push
xor
mov
push
jmp
push
lods
sbb
mov
cwtl
jp
mov
icebp
mov
sbb
orl
cmpsb
jae
adc
mov
test
inc
out
lock
pop
in
mov
sbb
jmp
sbb
pusha
jo
pushf
and
mov
jae
jns
or
addr16
out
pop
aad
std
push
shlb
mov
jl
cltd
outsb
jp
mov
dec
negl
dec
mov
adc
cmpsl
enter
stos
or
add
sbbl
and
outsl
mov
scas
sarb
adc
lods
or
aam
out
loop
sub
cwtl
fcmovu
shlb
cmpl
loope
jne
add
xchg
aas
fdivl
vcvtsd2si
inc
scas
mov
out
test
fisttpl
aad
sub
repnz
jl
gs
ljmp
shll
fimuls
adc
mov
shr
pop
cmpl
jne
and
jmp
jp
ljmp
hlt
push
push
add
mov
divb
and
jne
outsl
inc
mov
mov
lods
loop
mov
or
in
dec
stos
fucom
hlt
pop
pop
cmp
cmp
int3
or
outsb
lods
leave
gs
test
cmp
das
pop
rol
sub
je
lea
pushl
xchg
cmpsb
cmp
mov
mov
out
aaa
movlps
sbbb
dec
mov
in
mov
scas
cmp
out
push
nop
adc
scas
or
pusha
stos
shr
mov
and
and
add
jecxz
repz
push
mov
cmc
repnz
test
mov
subb
xchg
daa
sub
push
mov
int3
stos
lret
lcall
cmpsb
or
inc
je
sub
jp
and
rcrb
test
cmp
xchg
pop
mov
mov
outsl
test
ds
lret
in
add
cltd
push
ss
fwait
push
add
arpl
add
add
fsub
or
xchg
out
insb
ret
and
cmp
ljmp
iret
push
cltd
ficompl
stos
shll
gs
sahf
data16
popf
aas
xchg
pop
pop
loope
xor
add
scas
into
sbb
hlt
loop
shrb
inc
mov
jecxz
and
and
mov
pop
fs
mov
aaa
aaa
push
scas
sbb
mov
outsl
xchg
mov
mov
rcl
mov
movd
dec
ja
or
push
and
inc
cmp
pop
sub
arpl
movsl
mov
push
movsb
cltd
rcrb
out
pop
sub
lret
add
daa
sub
jl
daa
pop
mov
pop
addr16
add
xchg
scas
popf
pusha
dec
push
pushf
dec
ror
jae
mov
add
mov
orb
lea
adc
jp
ret
daa
push
nop
mov
sbb
push
pop
mov
fidivl
ds
mov
shrl
int
fsts
mov
int
jmp
dec
decb
jnp
andb
sbb
out
xchg
pop
adc
fidivrs
out
add
mov
out
mov
jo
fdivrl
push
dec
fnstcw
inc
inc
xlat
add
loope
aam
daa
leave
es
jecxz
lods
lcall
fsubl
ss
xchg
xchg
int3
mov
outsb
cmp
inc
imulb
imulb
mov
fistpl
lea
rcll
fbstp
or
sbb
imul
pop
mov
scas
ljmp
int
sahf
aaa
sti
ret
cmp
shrb
mov
rclb
inc
sbb
inc
addr16
pop
sub
cmpsb
jb
and
jno
movsl
out
push
add
pop
mov
movsb
mov
or
mov
inc
cmp
stos
in
cmp
js
ffree
sbb
enter
and
and
pop
fwait
add
or
insb
add
cmp
cmp
jmp
popa
fcomp
mulb
pop
lcall
pop
imul
popf
pop
push
pop
call
pop
mov
imul
sub
sub
fdivrl
mov
jecxz
je
ds
push
adc
push
adc
lret
fldt
fadd
movsb
idivl
mov
fsubrl
mov
pop
add
or
push
lret
movsb
std
ss
mov
das
mov
push
out
ret
std
pop
jae
or
pushf
jle
ret
mov
jne
or
ficoml
and
add
es
jmp
pop
les
jle
mov
into
fst
xchg
movsb
push
mov
insl
scas
les
sub
cmpsl
xchg
movsl
pop
hlt
dec
cmp
test
scas
lds
push
aaa
xchg
bound
test
insb
imul
orl
arpl
test
inc
shld
sbb
xor
xchg
cmpsl
lcall
shlb
into
pop
mov
mov
mov
loop
mov
xchg
dec
cmp
xchg
jg
je
cltd
xorb
xchg
fidivrl
cmc
gs
test
lds
sbbb
mov
test
sub
fisttpl
jmp
adc
jmp
sahf
xor
lret
jbe
inc
in
lahf
dec
mov
stos
pop
inc
aam
or
sbb
push
sub
jns
or
imul
outsl
inc
orb
insb
mov
push
in
add
lahf
faddl
sarb
sbb
fldenv
fisttps
jg
aas
test
xorl
stc
xorl
cwtl
adc
mov
dec
add
cmpsb
dec
push
jecxz
nop
aaa
fs
cmpsl
push
jle
fsubrs
cwtl
loopne
sahf
int3
sub
jbe
lds
testb
push
xchg
lret
int
aaa
dec
enter
enter
add
mov
sti
mov
in
inc
fs
lods
jbe
sarl
lds
sub
sbb
lea
call
add
testb
rolb
je
sbb
stos
sarl
popf
mov
or
xchg
bound
js
cwtl
mov
fistpl
rorl
push
pop
or
push
pop
test
imul
idiv
cld
ja
and
jmp
and
pushf
xchg
aad
je
inc
sbbb
test
push
inc
stos
xchg
sub
mov
daa
es
mov
jp
cmc
dec
mov
outsl
jecxz
cmp
je
test
dec
mov
cmp
insb
cmc
data16
fnstsw
neg
std
in
into
bound
mov
inc
test
adc
sbb
sbb
pop
sbb
cmpsb
sub
cltd
out
push
hlt
and
rcrb
dec
or
aad
sub
pop
es
es
pop
cs
stc
ficoms
or
fwait
sbb
add
lods
les
flds
fcomps
pop
pop
int3
jle
cmp
sti
adc
mov
mov
adc
arpl
cmp
cmp
divb
dec
inc
push
leave
xchg
hlt
cmp
or
mov
xchg
or
adc
scas
cwtl
inc
push
mov
dec
int3
mov
mov
push
stos
leave
imul
cmpsb
add
ficompl
jb
imul
inc
add
cmp
push
mov
stc
mov
sub
sub
pop
lret
loope
jnp
hlt
xor
sbb
stos
pop
loope
lods
dec
or
aam
jecxz
popf
aad
out
fs
pop
push
and
scas
jb
imul
jnp
test
daa
cmp
add
stos
cmp
lret
mov
inc
cltd
rorb
arpl
pushf
and
mov
scas
and
xlat
xchg
imull
rorb
inc
mov
sbb
arpl
xor
cmpsb
test
scas
add
sub
or
jo
sti
sub
sub
shl
xchg
and
dec
cmpsb
idivl
sti
es
add
mov
dec
mov
jecxz
adc
jge
fldenv
pop
out
ds
loopne
fwait
adc
mov
pop
dec
xchg
int3
rorb
test
jge
aad
lret
xor
in
add
xchg
dec
mov
jb
fdivl
cltd
inc
push
shl
sbb
push
sbb
mov
int
outsb
mov
int3
cld
jle
push
or
fdivp
or
stc
xchg
ja
and
and
xor
push
or
xlat
and
sti
dec
cltd
sbb
testb
xorl
mov
shlb
psllw
pop
enter
aas
stc
rorl
mov
xor
leave
add
out
mov
out
in
jl
jnp
negl
push
dec
int3
adc
mov
ss
xchg
cwtl
stc
adc
dec
lods
mov
fiadds
fstps
into
fnsave
jp
cmp
add
dec
jns
mov
mov
lret
add
mov
out
mov
icebp
cmp
sub
and
dec
mov
mov
loop
jmp
mov
inc
iret
out
icebp
leave
movl
fisubrs
pop
sbb
xchg
adc
add
pop
pop
add
mov
sbb
mov
addl
mov
lcall
lea
in
pop
cmp
push
mov
idivb
lods
test
pop
mov
sub
xor
lock
ficoms
stc
pop
out
and
inc
shrl
sti
loop
aad
fcmovnbe
mov
enter
push
and
popf
popf
cmp
sub
daa
dec
std
mov
cld
cmc
fstl
in
sub
add
adcl
dec
pop
sahf
scas
or
or
dec
push
inc
push
shlb
mov
and
sub
iret
adc
ljmp
leave
mov
andb
cmp
mov
push
popa
movsl
dec
or
pop
mov
add
test
lods
push
je
add
lea
lahf
imulb
push
mov
xor
scas
mov
or
pop
or
lock
std
sub
mov
pop
push
clc
gs
rolb
vmovd
sub
jg
nop
add
xor
in
mov
jnp
push
ud2
cmp
sub
jae
cmp
fdiv
mov
pop
xchg
icebp
mov
mov
popf
mov
xor
cmp
cmpsb
je
mov
mov
aam
imul
repnz
inc
push
xor
js
xadd
lock
mov
test
daa
movsl
leave
js
stc
push
xchg
push
ja
and
pusha
mov
push
sub
pop
hlt
mov
add
fwait
lods
jo
or
push
push
sbb
xor
andl
fcompp
mov
add
lock
rcll
jmp
cmp
lods
xchg
xchg
mov
and
jge
dec
mov
or
jecxz
imul
or
pop
push
js
mov
movsl
gs
or
int
sbb
vdivss
mov
adc
cmpsl
mov
jmp
ja
mov
cmp
enter
out
inc
mov
cmc
repnz
jns
xor
xor
loope
mov
subl
js
push
cmp
clc
stos
jge
into
aaa
sub
push
test
out
iret
cmp
outsb
imul
mov
or
mov
adc
cs
cwtl
or
and
imul
cmp
mov
lods
idivl
aaa
pop
mulb
jge
and
aam
add
jnp
stos
push
sub
mov
cld
jmp
loope
iret
lds
lods
mov
movsb
imul
movsb
es
cmp
mov
dec
push
scas
in
movsl
xor
xchg
mov
cmp
mov
int3
scas
int3
mov
fbstp
bound
cmp
jmp
jae
mov
push
push
negb
lock
int3
pop
pop
push
jmp
out
test
test
inc
int
or
outsb
xchg
dec
outsb
jmp
scas
sbb
adc
xchg
jbe
lcall
push
jp
enter
jge
fldcw
fs
leave
push
outsl
dec
pop
loop
dec
and
inc
movsb
push
mov
rorb
cs
nopl
and
dec
sub
add
hlt
add
lret
in
in
mov
shl
test
or
test
scas
dec
adc
mov
adc
shll
jne
cmp
divl
mov
fmull
gs
int
xchg
pop
sub
aaa
idiv
test
nop
sub
and
mov
lahf
or
pop
fdivs
mov
sbb
xor
sahf
rorb
insb
jne
lret
cltd
es
add
in
pop
pusha
int
xchg
testb
ds
adc
jne
inc
aaa
xchg
ja
es
dec
fnsave
and
cltd
filds
jge
gs
in
in
and
and
lock
int3
mov
or
sub
push
sbb
das
ja
cmpsl
mov
push
push
outsb
in
loope
jp
dec
and
cmc
mov
sub
push
xchg
rorl
mov
jle
outsl
outsl
mov
push
dec
lahf
pop
enter
mov
adc
es
sbb
insb
jecxz
negl
outsl
mov
pop
cmp
dec
stos
jp
in
sahf
jno
push
inc
mov
push
outsl
cwtl
inc
mov
daa
cld
pop
cmp
jecxz
sbbl
stc
push
mov
mov
jle
das
push
fdivs
mov
and
es
fxam
xlat
xchg
loope
or
jge
inc
sub
insb
jmp
mov
jecxz
test
mov
xor
out
subb
jno
mov
jo
pusha
out
aad
shrb
rclb
in
mov
push
xor
fucom
mov
pusha
aaa
es
outsb
mov
mov
jl
and
push
inc
add
rorb
ffreep
jae
popa
int3
dec
test
xchg
and
call
pop
rorl
or
xor
orl
cmpsb
mov
sub
fs
dec
icebp
out
sub
inc
push
and
in
push
sahf
cmp
adc
add
notl
hlt
and
sarb
dec
fsubs
into
adc
or
sbb
decb
pop
data16
fldl
push
mov
ficoms
ret
cmpsb
popf
push
xor
inc
nop
test
lret
iret
cmp
lret
inc
jns
xor
inc
jae
push
jb
push
cs
dec
cli
in
add
mov
in
jl
fstps
sbb
in
xor
mov
out
out
push
cli
cmp
and
lahf
out
and
aas
sbb
add
add
fisubl
jg
cltd
test
mov
cwtl
add
dec
adc
test
rcll
lea
jl
push
inc
mov
inc
jnp
or
repz
inc
jl
outsl
icebp
test
cmp
lods
inc
cmp
mov
loope
jnp
xchg
jge
pop
test
mov
dec
pop
or
rcll
aaa
idivl
int
and
mov
fld
mov
jle
cwtl
dec
loopne
dec
es
into
int
push
push
das
jge
js
adc
push
lods
mov
jl
dec
add
loopne
sarb
mov
stos
rol
push
scas
jl
lea
cs
cld
xor
mov
cmp
or
inc
popa
mov
fwait
shr
hlt
popf
push
enter
mov
popa
push
rcrb
push
or
movsl
pop
pop
jmp
jp
dec
ret
push
das
in
inc
cld
adc
jne
cmpsb
int3
adc
pusha
lock
imul
adc
push
sub
xor
ja
sub
fs
jecxz
mov
jns
jmp
push
aas
sub
mov
xor
inc
jl
add
jae
jmp
cmp
push
push
mov
lret
enter
mov
dec
clc
inc
pop
sahf
fidivrl
aam
sbb
mov
mov
adc
out
adc
out
sbb
fidivl
iret
ret
mov
rorl
xchg
imul
lret
fwait
sub
mov
imul
sahf
inc
mov
or
pop
leave
pop
stos
cli
in
xor
jb
das
cmpsl
into
aad
or
out
popa
cmpsl
or
in
pop
sbb
dec
bound
mov
sbb
sbb
cmpsb
xor
adc
into
cs
stc
pop
insb
enter
iret
rcrl
mulb
movsl
cli
mov
and
sbb
jne
jnp
xlat
test
test
enter
and
jecxz
es
clc
add
ljmp
ret
fst
push
or
cltd
xchg
xor
jns
or
push
inc
or
adc
push
loop
dec
mov
cmp
xchg
outsb
xor
jmp
outsb
sbb
pop
out
hlt
cmp
cli
movsl
aaa
jo
pop
pop
sub
push
push
dec
mov
jo
dec
loope
icebp
inc
cmpsl
call
je
jne
dec
mov
stc
je
cmp
insl
fs
xchg
mov
jecxz
xchg
jg
and
popf
mov
gs
fidivs
mov
push
adc
inc
fs
fdivrs
and
cmpsb
add
xchg
icebp
mov
outsl
scas
xchg
ja
fidivrl
js
fcomi
loopne
lahf
mov
push
cltd
mov
lods
mov
mov
psadbw
sahf
lock
inc
aad
cmp
lcall
inc
sub
dec
std
dec
xor
nop
outsl
repz
push
rol
jge
push
push
mov
adc
pop
movsb
xor
inc
shrb
dec
dec
xchg
js
push
dec
and
inc
out
push
int
rcrb
scas
xor
test
lcall
jae
mov
pop
in
out
mov
ret
push
ss
shll
or
pop
jne
cld
or
ret
push
rolb
jp
stc
mov
adc
adc
ret
xchg
scas
push
outsl
pop
fldcw
stc
inc
jb
push
cmc
xchg
inc
add
js
jno
pop
daa
bound
out
dec
push
inc
movq
arpl
push
out
es
pop
ljmp
pop
gs
sub
push
sbb
cltd
push
enter
adc
test
cli
inc
iret
jae
inc
in
pop
mov
repnz
scas
insb
lods
in
adc
loopne
xlat
popa
cmpsl
lds
dec
xchg
mov
mov
lret
je
xchg
ds
sub
mov
test
xor
jno
js
popa
je
insw
aam
les
fwait
cmc
cmp
fdivl
xcrypt-ctr
cmpsl
fimull
call
pop
jmp
pop
lahf
jmp
cmp
enter
insb
sar
in
add
leave
sbb
adc
adc
sbb
mov
mov
and
dec
mov
mov
mov
scas
adc
rclb
leave
mov
xchg
pop
sbb
test
stos
xlat
dec
outsb
call
xor
add
leave
daa
insb
dec
mov
jp
jno
sti
push
sbb
push
fidivs
inc
rorb
push
inc
jle
imulb
pop
iret
out
cltd
cli
imul
popf
movsb
mov
and
mov
pop
roll
jbe
mulb
or
scas
repnz
daa
popf
adc
ljmp
and
test
mov
aas
adc
cmp
cmp
stc
jo
xor
mov
inc
mov
sbb
out
or
lock
jmp
nop
mov
mov
test
lret
fs
pop
xchg
mov
pop
cmpsl
inc
fidivs
mov
loop
int3
dec
cmp
push
test
xor
das
cltd
bound
xor
push
rol
mov
add
sahf
cmp
xor
and
jp
mov
out
dec
lods
arpl
rcll
jne
inc
shr
mov
mov
stos
push
ret
inc
adc
push
nop
add
stc
ret
repz
jecxz
or
out
aam
lods
and
jge
jbe
scas
es
jp
push
stc
dec
xchg
cmc
ja
push
jns
dec
jns
push
std
adc
ror
lcall
aas
stos
stos
cmpsl
rcrl
or
jbe
xor
adc
or
lds
sbb
pop
xor
add
jb
push
pusha
sbbb
sub
mov
cmc
fs
cmc
pop
sub
cmp
sbb
push
scas
sub
mov
push
cmp
inc
lods
inc
aas
repz
out
outsl
imull
adc
out
lahf
jge
inc
inc
mov
es
and
mov
mov
imul
out
adc
aas
ret
rcr
sar
stos
dec
jae
ret
push
int
rorb
mov
mov
icebp
movsl
push
in
icebp
loop
lahf
add
push
lds
mov
int3
leave
jnp
jg
dec
add
hlt
cmp
std
sbb
in
pop
mov
xchg
sbb
mov
clc
adc
test
pop
sbb
loop
mov
pop
loope
xchg
jmp
pop
push
add
sub
iret
push
pop
mov
sti
dec
push
mov
stos
add
cli
mov
pop
mov
or
sub
push
pop
jmp
mov
add
dec
mov
mov
sub
les
out
or
pop
aaa
in
cltd
dec
fisttps
sub
xchg
in
cld
mov
xchg
xchg
or
test
pushf
adc
adc
lds
sub
and
div
aaa
hlt
sub
and
leave
jmp
popf
xchg
add
adc
adc
or
mov
in
das
jae
mov
inc
sbb
lahf
pop
or
sub
and
push
cmc
sub
sarl
dec
pop
push
mov
icebp
xchg
inc
xchg
dec
decb
inc
shlb
loope
loop
int
lahf
jb
and
ss
push
or
enter
jne
pop
mov
pop
sub
pushf
sub
cltd
ficoms
icebp
push
adc
fsubl
mov
fdivs
ret
sub
cmpsb
adc
fisubl
popa
outsl
loopne
push
sbb
adcl
movsl
pop
pusha
rorl
das
clc
lcall
rcrb
popa
data16
sbb
call
pop
shl
mov
mov
or
push
out
mov
flds
call
xor
ret
icebp
stos
pop
cmp
shlb
and
or
movsl
jb
jge,pn
inc
dec
test
sar
lods
test
and
sbb
es
jg
fsts
mov
sub
fprem
mov
sub
pop
enter
shlb
push
sbbl
sbb
aam
mov
cmc
dec
sbbb
push
mov
insb
dec
and
xchg
lock
add
clc
dec
ret
mov
or
jg
test
mov
out
pusha
lods
call
jg
mov
js
orb
daa
push
sbb
jno
jp
and
lahf
sarl
je
lret
fwait
hlt
and
inc
jae
push
adc
push
leave
scas
mov
pop
mov
arpl
in
adc
push
loop
dec
adc
mov
jnp
mov
popa
hlt
inc
incb
nop
pusha
aad
dec
hlt
movsl
dec
sbb
mov
out
out
jno
in
pop
lods
repnz
pop
cmp
lods
dec
push
pop
ficoml
mov
popa
mov
xor
and
cmp
push
lea
movsl
stos
inc
jg
out
adc
mull
inc
sbb
inc
dec
jo
add
xor
mov
dec
sub
jne
repnz
pop
aaa
fdivrl
ds
aaa
imul
adc
mov
push
shlb
push
inc
xchg
push
cmp
aas
inc
insl
pop
xchg
and
jle
pop
fwait
adc
and
jnp
push
xchg
rep
daa
pushf
je
data16
inc
int
add
popa
lcall
movsb
js
scas
movsb
mov
stos
mov
enter
lods
mov
jne
call
ss
testb
mov
or
cmp
inc
push
jnp
lods
inc
inc
cld
jnp
add
cmpb
popa
in
and
pop
xor
mov
or
push
cmp
flds
in
adc
cmpsl
xorl
testb
inc
call
push
cld
cltd
push
dec
outsb
lahf
cmpl
std
loope
dec
loopne
or
dec
cmp
inc
repz
pop
lock
fists
cmp
ss
hlt
adc
imul
dec
jbe
in
pop
je
add
and
movl
push
adc
jne
in
ret
sub
mov
ss
jae
mov
mov
push
cmc
out
mov
pop
xchg
lods
stos
mov
jbe
dec
and
inc
shl
sbb
jg
xor
subb
daa
mov
jmp
lds
orb
inc
int
leave
in
fs
jns
pmullw
dec
hlt
xchg
push
lods
cmpsb
xor
xchg
leave
mov
shl
push
cmp
mov
inc
add
mov
xchg
pop
cmc
cmpsl
out
mov
mov
popf
outsb
pop
add
jno
popl
mov
ja
push
dec
xchg
jae
in
sub
push
gs
lret
xor
jmp
cmpsl
mov
repz
popa
sub
insb
jbe
aam
mov
ds
lods
jno
push
outsl
pop
adc
loop
icebp
popa
xchg
scas
mov
ljmp
jp
repz
or
xor
out
jle
and
sbb
aam
rorb
push
repnz
inc
add
jmp
pushf
mov
push
mov
aas
inc
test
mov
lea
sbb
sub
jge
sarb
sti
dec
mov
cld
aad
aam
std
in
test
es
mov
xor
lea
je
inc
add
mov
arpl
cmpsb
jle
fistpll
lahf
jne
incb
insl
xor
jge
pop
mulb
out
sub
lods
inc
out
dec
add
xor
int3
stc
cmp
scas
jg
in
cli
adc
jp
pop
push
mov
xchg
stos
cwtl
xor
es
orb
nop
and
loop
aad
jo
pop
mov
leave
lahf
je
dec
lock
jnp
mov
sahf
inc
ljmp
fisttps
inc
addl
pop
pop
cltd
aas
lea
popa
pop
adc
and
js
cs
out
xlat
arpl
dec
adc
jae
dec
fcmove
loop
push
pop
pop
jg
and
out
pushf
ljmp
fs
movsb
mov
stos
movaps
mov
in
mov
mov
les
adc
and
xchg
loope
add
push
outsl
pop
ja
mov
pop
ret
sbb
scas
pop
or
ljmp
sub
ret
pop
testl
mov
mov
pusha
int3
imul
jnp
pop
lret
and
pop
mov
xor
mov
sarl
inc
test
jbe
and
adc
dec
jp
add
cmp
roll
stos
dec
out
inc
lret
in
shrl
xchg
inc
mov
ds
dec
cmp
inc
enter
inc
lds
lock
xchg
arpl
sub
das
mov
cwtl
or
mov
test
jecxz
inc
pushl
pop
pop
lcall
fcmovnb
test
hlt
ret
ret
scas
push
ljmp
mov
pop
out
ljmp
inc
xchg
movsb
dec
mov
loop
popf
xlat
sub
andb
notl
ljmp
fincstp
push
loop
or
jns
ss
dec
sub
mov
mov
or
xchg
movsl
cmp
xchg
out
add
or
das
ret
movsl
cmc
push
add
js
std
iret
mov
xor
cltd
sbb
xor
dec
test
fsubrl
push
stos
dec
inc
sub
leave
jmp
inc
insl
xor
aad
scas
movl
jb
cli
sbb
cmp
sub
push
adc
add
dec
push
fbld
adc
repnz
push
das
mov
add
daa
mov
pop
iret
jp
xor
fwait
inc
push
mov
outsl
shlb
fldenv
jo
outsl
adc
rcr
push
dec
in
cmp
mov
add
sbbb
jle
inc
ficompl
sub
cmp
jp
ja
arpl
outsl
cmp
push
adc
jp
clc
cmpsb
xlat
inc
das
mov
inc
jne
sbb
frndint
pusha
outsb
mov
or
xor
push
mov
dec
test
mov
aaa
testb
test
js
lods
pop
mov
mov
fsts
xchg
xchg
popa
fnsetpm(287
mov
mov
jbe
pop
outsl
cmpsl
loope
rcll
in
lock
sbb
mov
pop
dec
or
and
xchg
xor
pushf
cltd
ljmp
pop
test
xchg
pop
ds
inc
es
fdivs
inc
leave
fwait
mov
inc
rcrb
dec
mov
stos
in
jo
roll
imul
dec
call
push
les
push
fisttpll
jb
jmp
insl
int3
idivb
push
iret
das
mov
mov
test
out
pop
jp
push
pop
popa
nop
cld
loopne
cs
pushf
bndldx
pop
xor
mov
push
or
adc
aas
in
xor
lahf
repz
aam
or
aam
int3
push
sub
rclb
mov
loopne
cld
jne
int3
imul
push
fwait
jne
pusha
das
not
cmp
sbb
jns
push
dec
test
push
push
push
lds
push
pop
bound
adc
arpl
sbb
jmp
faddl
xor
rorl
cmp
mov
test
inc
xor
mov
pop
xchg
adc
cmp
push
or
xchg
and
or
pop
mov
mov
shl
lret
dec
stc
ljmp
loope
add
shrb
mov
and
push
mov
sub
lods
add
fildll
jl
adc
pop
jae
inc
loop
inc
lcall
out
push
test
mov
jae
js
add
loop
inc
mov
shll
lock
mov
sub
adc
and
stc
lcall
mov
mov
loope
insl
popf
sub
imul
out
or
out
inc
mov
cmp
in
jne
xor
sub
or
dec
push
dec
xor
rolb
sarb
pop
and
pop
insb
movsl
add
xchg
mov
or
pop
mov
out
cli
inc
lcall
dec
out
mov
pop
adc
daa
mov
fwait
andb
mov
inc
adc
mov
push
mov
mov
adc
hlt
adc
xchg
xor
cs
sub
testl
fs
negb
mov
adc
gs
push
pop
xchg
mov
imulb
push
mov
leave
jnp
test
dec
loope
xor
jmp
repz
mov
mov
das
pop
sarl
mov
fmul
mov
pop
cmp
gs
jp
clc
in
cmp
pop
stos
fcomps
jbe
fwait
add
inc
mov
push
adc
out
shl
push
clc
adc
int3
ficompl
push
stc
int
xchg
ss
and
repz
rclb
test
sub
sub
mov
leave
int
fcmove
stc
jbe
push
fcomip
mov
pop
mov
jo
pop
add
cmp
push
pushf
popf
mov
out
push
sbb
cmp
ss
mov
mov
outsl
or
test
mov
testl
outsb
and
leave
lahf
mov
sub
xorb
bound
xchg
stos
or
ja
mov
outsb
fadds
xchg
push
pop
jno
sub
bound
mov
add
fisubs
pusha
sub
inc
in
jp
insb
or
cmp
sbb
inc
mov
cwtl
dec
jmp
scas
add
into
loope
lds
out
dec
add
mov
jg
push
lods
lods
aaa
cmp
sub
add
insb
mov
js
mov
jbe
leave
push
and
sbb
inc
sahf
mov
add
bnd
cltd
lods
testl
scas
add
mov
call
data16
movl
lret
add
pop
push
xchg
pushf
push
aas
cmp
mov
lea
int3
and
jne
cmp
les
pop
sbb
scas
lock
rol
fbstp
fsubrl
test
jmp
xor
xchg
pop
fwait
mov
cltd
inc
call
clc
ret
lahf
loope
xchg
data16
stos
or
mov
cmp
mov
xor
ret
mov
jnp
aaa
fdivp
add
xchg
mov
mov
idivb
pop
enter
sbb
cli
xchg
inc
push
push
inc
adc
das
jno
insl
pushf
inc
dec
scas
pop
imull
mov
or
iret
cltd
inc
ret
cli
xchg
mov
jg
loopne
test
pop
imul
or
rclb
xchg
add
clc
aas
pop
cmp
lock
inc
test
out
test
xchg
pop
sub
sbb
jne
gs
fsqrt
or
inc
mov
test
jl
aad
test
mov
int
inc
fs
push
aad
jae
mov
dec
xchg
fcom
and
or
inc
gs
std
notl
ss
push
jle
pop
pop
xorb
in
dec
sub
call
inc
push
lret
adc
mov
sbb
fildll
xchg
jge
into
jge
adc
stc
data16
push
js
aas
jmp
dec
push
xor
inc
add
decb
push
test
mov
inc
gs
and
fildl
je
outsb
pop
sub
hlt
dec
and
cld
and
adc
insl
test
mov
jno
insb
dec
inc
xor
jne
xchg
push
inc
aas
out
sbb
popf
popf
sbb
cmpsb
xchg
incl
cmpsl
call
call
jg
push
jo
popa
mov
int
mov
sub
cmp
mov
push
and
lahf
sub
repz
pusha
cwtl
sub
mov
ss
ds
xlat
sbb
dec
adcw
shrl
xchg
les
inc
lds
sub
dec
in
iret
sbb
push
cwtl
cmp
and
lret
and
rolb
enter
jo
les
sub
push
xchg
mov
daa
mov
sub
sahf
or
ja
dec
sbb
mov
xchg
jp
fstps
xor
filds
arpl
inc
cmc
sti
mov
orb
jno
cmpl
das
jl
gs
xchg
ss
mov
in
shr
inc
jno
mov
xor
push
frstor
outsb
rorl
mov
dec
adc
mov
adc
sarb
test
jge
hlt
lods
adc
pop
into
jae
add
and
ret
in
iret
les
jecxz
dec
dec
out
add
loope
movsb
push
repnz
adc
inc
ds
xorb
in
fisubl
mov
pop
lea
lods
pop
push
and
mov
ss
hlt
add
mov
inc
mov
push
lcall
inc
xlat
in
mov
sub
lds
test
shll
loopne
or
xchg
notl
mov
ficoml
inc
jnp
shl
adc
mov
in
lock
pop
test
inc
test
mov
andl
push
push
imul
push
sbb
shll
outsl
iret
int3
mov
fildl
sbb
jne
les
cmp
mov
lahf
ja
push
cmpsb
loope
mov
push
xchg
subb
jns
cmpsb
cmp
popa
adc
test
mov
mov
inc
sub
shrl
das
push
fcoml
mov
inc
add
rclb
mov
lods
cltd
or
in
mov
loope
jne
mov
pop
stos
lods
or
in
jb
or
xor
adc
jg
movsb
popf
xor
test
call
and
adc
and
push
xchg
cmp
dec
xchg
jecxz
mov
fwait
push
cmpsl
xchg
inc
sub
sub
notb
pop
popl
int3
nop
push
mov
mov
loopne
dec
shll
fcompl
pop
or
in
aaa
inc
aad
rolb
add
push
aad
nop
test
lods
test
sbb
or
in
scas
inc
fdivs
idivb
sub
mov
ret
mov
inc
outsb
mov
jns
imul
test
jo
mov
mov
lahf
jae
adc
or
or
jns
adc
jbe
out
add
sub
dec
scas
mov
sbb
mov
cli
inc
loope
int
lds
iret
inc
jb
mov
mov
mov
fmuls
dec
flds
movsb
andb
lock
jmp
daa
and
rorb
xchg
int
push
cwtl
xchg
lods
shll
idiv
aad
dec
push
inc
movb
push
dec
lret
xchg
push
out
fmull
fsubl
dec
xchg
xorl
mov
insl
jecxz
into
into
or
jmp
fs
adc
or
roll
cmp
mov
sbb
push
pavgb
outsl
jle
int3
sahf
fmull
push
push
push
xchg
ret
or
dec
add
popa
lcall
xchg
pop
dec
out
adc
lahf
dec
sbb
stos
inc
lcall
mov
lods
push
in
add
out
or
ficomps
push
icebp
in
outsb
adc
outsl
jecxz
icebp
cltd
inc
mov
sub
mov
sub
ds
cmp
cmp
mov
push
into
je
jae
addb
sar
insl
mov
inc
in
arpl
in
aam
or
mov
inc
or
fnstsw
in
int
fstpl
mov
jecxz
lds
jle
and
into
repnz
sbb
mov
sub
shr
xchg
fisubrs
sub
out
leave
mov
cmpsb
lret
rcr
addr16
mov
mov
icebp
sub
gs
mov
push
pop
popf
cmc
testb
int
jnp
fcompl
dec
xor
push
dec
mov
movsl
loopne
mov
movsb
dec
pop
imul
sbb
jl
idivb
ds
mov
pop
pop
jmp
add
mov
bound
ss
adc
sbb
cmp
xchg
jbe,pn
push
ss
std
mov
sbb
lods
cmp
cs
cwtl
out
sbb
jae
test
mov
int
mov
cmp
jge
movsl
mov
sub
or
mov
cmp
sub
mov
mov
mov
mov
pop
out
sbb
insb
dec
mov
pop
shll
jns
jmp
bound
movsl
xor
pop
fistpl
shrl
xchg
ret
test
iret
mov
sbb
in
mov
inc
mov
and
sbb
mov
push
push
repnz
xor
gs
sbb
xor
jbe
dec
cmp
adc
lret
or
filds
loopne
rcl
aas
stos
repz
data16
aas
repz
adc
ljmp
or
push
add
push
int
push
imul
sub
out
xorb
push
xor
cmp
xchg
cmpsl
les
stos
mov
aam
pop
jne
jecxz
mov
lods
dec
pop
repz
mov
nop
lea
cli
pushf
push
sbb
push
mov
lret
fdivrs
std
xchg
aas
sbb
xchg
dec
mov
inc
or
loope
sbb
xor
pop
mov
and
repnz
mov
push
daa
stc
imul
and
cmp
icebp
mov
and
add
out
sbb
jle
and
aaa
addl
imul
push
sti
xchg
push
pushf
add
sti
movsb
sbb
loop
out
test
cwtl
jge
adc
xchg
les
inc
inc
push
stos
aam
mov
stc
iret
dec
sbb
call
push
je
mov
jmp
cmpsl
pop
cmpsb
bound
and
inc
jbe
ja
ljmp
mov
jae
ss
dec
inc
jbe
inc
fistl
imul
fstps
in
cli
inc
add
ds
jbe
mov
xor
movsb
out
mov
adc
in
cmp
std
xor
xchg
add
aas
mov
repz
xchg
cmp
lahf
fildl
movswl
imul
xchg
push
cmp
mov
lock
xchg
xchg
push
cmp
adc
js
outsl
outsl
roll
mov
ss
jb
inc
ret
or
call
xchg
in
cmp
push
hlt
add
cmp
pusha
fcoms
jns
roll
repnz
bnd
add
fimull
mov
call
out
addr16
add
jae
data16
js
pop
jmp
ss
outsl
add
data16
adc
js
aam
mov
mov
bound
hlt
cmp
xchg
out
in
mov
adc
cld
xor
pop
pop
outsl
out
add
mov
aad
mov
mov
pop
daa
sub
sbb
cmp
fidivs
pop
add
mov
mov
xchg
push
and
sti
ret
ss
and
idivl
and
and
scas
inc
xchg
and
mov
add
mov
jbe
jno
xor
mov
icebp
pop
gs
sbb
dec
xchg
out
jl
stos
add
lds
repnz
jo
aad
rcl
sbb
cmc
cmp
rcl
mov
mov
ja
push
inc
xchg
xor
push
imul
mov
mov
in
cmp
loop
testl
movsl
mov
js
jnp
mov
push
lea
lcall
adc
sti
out
jmp
sbb
dec
imul
int3
xor
ljmp
sahf
inc
mov
std
push
or
add
scas
mov
xlat
inc
fsubs
jp
pushf
sbb
insl
jnp
out
jp
inc
je
cmpsl
jmp
mov
mov
jmp
lock
mov
jbe
lods
sub
inc
out
pop
mov
adc
inc
mov
dec
ljmp
fs
cs
pop
xchg
or
into
dec
ficomps
movsl
cs
sub
je
and
aas
mov
sbb
inc
jnp
and
flds
jo
add
lds
jo
test
pop
adcl
cmc
ljmp
jno
ficoms
icebp
pop
call
push
mov
fs
sub
sti
cltd
or
push
dec
pop
xchg
aam
xor
cmpsb
pop
shrb
cmpsl
sub
pop
out
sub
cmp
js
xor
sub
fldl
mov
loop
push
in
loop
fisubl
push
mov
sbb
cmp
adc
dec
or
and
arpl
and
inc
and
adc
add
adc
out
xchg
push
xchg
mov
cs
rcl
sub
xchg
and
nop
test
ljmp
mov
clc
inc
imul
cmp
push
push
sbb
inc
cmpsb
jne
pop
mov
iret
outsb
jecxz
insb
jnp
and
adc
mov
movsb
int
cmc
or
and
push
std
mov
mov
test
inc
movb
cmpsb
mov
fwait
adc
cwtl
loop
shl
rorb
xor
shl
filds
jl
mov
or
out
xlat
test
push
int3
cs
fwait
cs
mov
imul
das
or
mov
imul
scas
mov
repnz
xchg
jns
call
mov
cmp
push
add
push
sbb
sbb
cld
fs
mov
mov
add
jg
fdivl
arpl
push
xorl
jg
xchg
pop
push
mov
mov
cmp
insl
sarl
push
xlat
mov
out
dec
fldt
xchg
xchg
jnp
std
xor
leave
and
sar
jmp
hlt
mov
sub
arpl
fcmovnbe
add
jmp
lock
mov
dec
es
shll
xlat
outsl
pushw
out
out
jns
pop
je
xor
push
mov
test
dec
out
sbb
cmpsl
mov
xchg
aaa
mov
daa
outsb
sub
mov
adc
or
orps
aas
outsb
jge
adc
sub
rcrl
jno
pusha
or
adc
mov
mov
inc
push
mov
mov
sbb
xchg
js
jns
shrb
jmp
pop
loope
loope
out
add
mov
jnp
loop
das
pop
adc
mov
outsl
int
push
outsb
jl
pop
and
lock
ja
push
jmp
imul
pop
sti
out
mov
dec
dec
cld
mov
fildl
mov
pushf
push
jo
pop
pop
mov
or
add
in
insb
sub
jae
cmp
add
pushl
jb,pn
add
xchg
clc
jecxz
xchg
or
push
stc
sbb
cmp
bound
pop
jge
mov
pop
hlt
cld
cmp
mov
test
fdivs
jnp
cwtl
ja
inc
in
push
adc
repnz
aam
jp
andb
fdivrl
in
add
xchg
lcall
sub
jnp
jbe
cmp
xchg
dec
adc
fisubrs
iret
ficompl
subb
adc
fs
shlb
and
ret
sbb
mov
dec
ljmp
cmpb
fs
iret
add
jge
addl
test
xchg
leave
jb
popa
nop
fiaddl
test
hlt
and
push
inc
aam
cmp
insl
loope
dec
mov
mov
sub
cmp
ss
js
jl
xchg
and
gs
push
pop
and
jns
fcompl
and
sbb
sbb
xchg
data16
mov
mov
cs
pop
mov
loope
ljmp
sbb
jns
jo
sbb
push
lahf
repz
and
cwtl
repnz
cmpsb
add
data16
ljmp
cmpsl
shl
xor
pop
jae
push
xor
xchg
into
shrl
pop
xor
jecxz
or
cmpb
push
pop
push
xor
cltd
mov
lret
lds
xchg
inc
mov
push
or
xchg
loope
mov
pop
mov
and
cmpsb
jo
xchg
jb
cmp
dec
mov
inc
gs
jp
aad
mov
jo
inc
xor
pop
xor
inc
xor
and
iret
test
sub
rclb
mov
repz
daa
imul
add
mov
xchg
scas
adcb
cmp
and
mov
xchg
int
jbe
rolb
adc
pop
int
mov
mov
test
repnz
fsubrs
xchg
xchg
int
iret
inc
adcb
pop
popa
or
cmp
ja
lret
add
daa
repz
jmp
aas
pop
fldl
cli
ljmp
rcll
cmpsb
and
outsl
jns
aam
xor
cld
pop
mov
add
adc
pushf
fldcw
mov
add
inc
push
inc
lods
iret
fst
fbld
dec
shrl
scas
adc
int3
mov
jae
gs
mov
jne,pt
test
mov
push
in
cld
andb
insb
ficompl
xchg
fistl
lret
sbb
ja
cld
dec
hlt
mov
mov
push
idivl
iret
mov
repz
xlat
in
roll
sub
addr16
sarl
lcall
add
push
or
adc
jmp
or
mov
aas
cld
cmp
push
loope
stos
jecxz
fldenv
insl
push
mov
xchg
mov
or
lret
xor
xor
insl
jae
mov
jo
negl
dec
pop
and
adc
inc
fs
in
iret
xchg
fbstp
jg
rcr
inc
std
and
sbb
dec
mov
xlat
mov
xchg
sub
mov
nop
imul
push
mov
ds
jle
or
or
pop
xor
movsl
sub
xor
movsl
jmp
mov
jns
js
mov
bound
jle
mov
jmp
and
setne
sbb
mov
fmulp
pop
lods
push
xor
xor
lods
jb
inc
jb
repz
mov
test
push
inc
in
movl
fnstcw
cld
mov
or
jne
pop
mov
sub
rolb
mov
dec
xor
hlt
out
sbb
pop
lahf
es
lret
or
add
stos
add
cli
add
int3
test
or
fsubr
aas
imul
sbb
xchg
and
add
sub
lods
inc
in
adcb
ss
and
cld
lods
ljmp
jle
and
data16
int3
std
mov
mov
call
adc
mov
pop
xorl
mov
cmpsl
mov
mov
in
sub
les
mov
cld
fstp
sbb
push
sbbb
sub
jo
mov
mov
fstp
fisttpll
mov
mov
jle
xor
jo
ficoms
daa
cmpsl
inc
adc
cmp
imul
mov
lret
cmp
cmp
andl
mov
ds
gs
insl
adc
dec
out
cmp
sbb
mov
and
push
lcall
dec
xor
call
mov
and
xchg
popa
in
test
enter
push
adc
mov
adc
lcall
outsb
ret
test
shlb
idivb
lret
loopne
cmp
adc
pop
push
imul
addr16
jbe
fprem
inc
in
dec
xor
div
das
jmp
ret
aas
mov
xor
cmp
push
es
mov
fsubr
dec
mov
mov
inc
sbb
jbe
and
jo
and
xchg
icebp
add
jns
in
xchg
adc
fsubrs
mov
or
out
stc
mov
fwait
xchg
cmp
ret
negl
fs
pop
sbb
pushf
dec
dec
imul
es
push
stc
pop
pop
sbb
nop
dec
dec
movsl
mov
mov
push
out
jmp
and
sbbl
pop
xor
mov
in
jmp
mov
xchg
into
mov
cmp
jl
sbb
push
scas
and
cltd
movsl
fdivrl
enter
test
fstpl
xlat
push
aaa
cld
mov
adc
in
mov
add
pop
push
aas
movsl
lcall
aad
xlat
or
das
cltd
xchg
mov
mov
in
mov
ds
loop
xlat
stos
rcr
std
mov
cmp
push
repz
stc
cmpsb
pop
or
pop
aaa
fisubrs
or
or
dec
lea
jl
cs
or
xchg
stc
mov
imul
push
mov
loop
pop
js
fdivrs
cmc
mulb
dec
popa
mov
int
test
push
push
addr16
xchg
inc
fdivrl
jae
jp
in
pop
mov
xor
inc
movsb
popa
cli
in
int
stc
dec
repz
les
or
lock
mov
and
aaa
xchg
mov
outsb
pop
loop
cmp
out
xchg
movsb
sub
sub
scas
or
bound
mov
inc
mov
mov
adc
mov
mov
cmp
cmp
comiss
cmpsl
mov
mov
orb
fcompl
cmp
pop
das
push
lea
pop
int
or
getsec
bsf
repz
mov
addr16
scas
dec
sub
xchg
jecxz
mov
mov
inc
push
add
not
pop
ret
aas
mov
mov
cmp
in
dec
roll
mov
mov
mov
xorl
xor
push
push
ja
pushf
aam
inc
inc
andb
pop
lods
push
mov
push
cli
test
and
ja
mov
cltd
jmp
push
pop
jmp
jbe
or
pop
int
in
ds
nop
int3
xchg
bound
lcall
insb
mov
sbb
inc
sbb
inc
out
mov
inc
lcall
push
inc
dec
mov
cmp
loop
lea
subl
xchg
mov
pusha
sub
fmull
adc
into
lea
shrb
pop
cmp
sub
and
mov
test
cwtl
jecxz
cmp
sub
and
push
jp
ret
lahf
pop
cld
mov
bound
inc
inc
daa
adc
or
out
pop
jle
mull
inc
adc
rcrb
lods
int
fists
adc
iret
aam
inc
into
push
xor
shl
int3
jge
addr16
test
popf
movntq
and
mov
ds
stos
and
add
jb
mov
lds
jmp
inc
in
scas
test
test
cltd
add
lea
and
lret
mov
push
iret
pop
add
ret
int
ret
scas
psubd
push
mov
cmpsb
mov
dec
into
mov
mov
stos
xorb
out
mov
push
xor
fnstcw
rclb
and
and
mov
ror
push
mov
and
cmpsl
cmp
mov
mov
sbb
push
andb
mulb
les
xchg
popf
fstpl
dec
dec
xchg
cmp
sub
mov
pop
push
push
into
cmp
xchg
and
mov
int3
push
imul
push
ret
sbb
jnp
mov
popf
pop
test
movsb
sub
ss
jmp
sti
xchg
addl
jge
sti
in
sub
mov
pop
fsubs
lods
cmp
dec
iret
xchg
mov
adc
add
xchg
pop
sbb
dec
and
rcr
idiv
jle
push
or
jbe
shll
shrl
push
adc
mov
lret
dec
jbe
ja
aas
add
cmpsl
sub
jecxz
pop
loopne
inc
jecxz
scas
jg
icebp
inc
xchg
lock
xorl
push
pusha
adc
jmp
rcrl
mov
lret
insb
pop
mov
pushf
push
aam
into
stos
insb
mov
in
je
and
pop
addr16
rclb
cs
xchg
jno
subl
ret
sbb
je
int3
mov
push
mov
sbb
bswap
rorb
pop
call
jb
rcl
dec
xchg
add
pop
jle
cmp
jbe
enter
push
mov
dec
adc
inc
push
mov
daa
jae
in
push
mov
adc
and
jb
pop
ss
mov
push
and
gs
imul
sti
iret
subl
insl
inc
jns
in
les
push
cmp
fistpll
add
lcall
in
jo
jnp
dec
jmp
mov
in
inc
jecxz
dec
gs
mov
jnp
int
and
into
jle
je
sub
roll
dec
jp
jnp
jno
pop
and
incl
cmp
adc
int3
aam
popa
inc
shl
lret
lock
test
cmp
outsl
into
rolb
clc
xchg
das
popa
nop
cli
sbb
adc
pop
hlt
clc
cmp
imul
fldenv
and
add
or
fstpt
cmp
mov
xchg
divl
dec
inc
enter
ret
and
pop
xchg
leave
gs
stos
pop
sbb
inc
dec
jnp
mov
push
adc
leave
or
pusha
jp
outsb
mov
cli
in
cmc
test
xor
pop
mov
push
scas
cmp
sbb
lds
scas
aad
fmul
insl
mov
jmp
dec
ja
loop
sar
icebp
out
daa
lods
jae
sbb
adc
pop
dec
cmp
data16
jnp
in
sub
add
add
dec
movsb
cmp
test
add
xor
sti
pop
cld
adc
dec
es
imul
jo
bound
or
xchg
inc
xchg
sbb
jb
mov
hlt
ljmp
pop
sti
sbb
stos
add
mov
je
mov
into
nop
fisubrs
push
jmp
push
jae
arpl
add
sbb
sahf
jge
fwait
cmp
add
pop
xlat
add
les
addr16
lret
xchg
sub
lcall
enter
daa
inc
or
in
repz
mov
dec
adcl
test
xchg
hlt
pushf
and
push
data16
cmp
dec
add
filds
lret
jb
and
or
mov
mov
cmpl
mov
cmpsb
or
mov
cmpsb
outsl
cmpsl
sub
cmc
mov
in
mov
or
icebp
stos
dec
in
sti
mov
imul
aas
dec
out
add
xor
push
leave
add
mov
sub
sbb
and
loop
mov
cmpsb
sahf
cmp
test
sbb
rorl
mov
add
int
pop
add
sarb
inc
stc
jecxz
out
js
nop
imul
stc
and
xchg
jl
push
or
in
add
adc
mov
jbe
xchg
ror
inc
sbb
mov
cmp
add
xor
xor
lret
push
leave
pop
xor
or
test
lods
add
mov
xor
mov
aam
dec
mov
jmp
adc
in
push
cmp
mov
mov
nop
and
jns
leave
dec
sub
pop
arpl
mov
pop
dec
cmp
xchg
mov
out
andb
fmuls
xchg
mov
mov
or
mov
xchg
jge
xor
leave
sbb
mov
repnz
ja
xchg
mov
outsl
add
jb
insb
xchg
enter
or
mov
cmp
les
jae
mov
shlb
add
scas
lods
cs
das
and
jne
retw
adc
cmc
mov
shl
lret
ja
scas
adc
into
push
cmp
adc
jo
pusha
mov
adc
shlb
cmpsl
test
pop
je
lods
jae
or
imul
shlb
fwait
mov
push
push
push
cli
aam
adc
int3
addr16
pushf
or
mov
dec
loope
je
sub
fisubs
pop
iret
pop
add
mov
sbb
popf
hlt
sub
out
fcompl
out
ret
fildll
jmp
clc
andl
xor
pushf
rclb
sub
repz
std
pop
pop
ffree
push
mov
jae
pcmpeqb
jb
mov
add
xlat
aam
inc
sub
dec
mov
add
mov
sub
pop
xor
stc
hlt
push
mov
insl
lock
setns
and
lret
and
mov
add
rolb
dec
lods
mov
mov
mov
mov
dec
cmp
xor
ss
jecxz
mov
scas
daa
cmpsb
dec
fstps
rcr
cwtl
cmp
testl
dec
arpl
out
cmp
sbb
leave
test
push
sbb
or
test
test
inc
mov
xor
inc
pop
inc
aaa
xchg
jo
addr16
es
insb
data16
stc
pop
std
push
pop
call
add
loopne
and
cmpsl
jbe
cwtl
cmp
push
stos
xchg
aad
fwait
inc
sbb
cld
jle
sbb
mov
and
cmpsl
lcall
sub
jge
sbb
cmpsb
mov
lods
enter
cmpsl
mov
xor
loop
mov
lcall
sbb
vhaddpd
mov
push
cmpsl
mov
gs
fsubrl
lea
movsl
or
pusha
pushf
std
pop
jle
in
xchg
loopne
repnz
enter
pushf
sub
xor
xchg
pop
and
js
outsb
mov
cmpsl
pop
fidivrl
call
adc
imul
iret
arpl
mov
dec
scas
clc
mov
sub
sbb
ror
mov
mov
xchg
andps
ret
sub
stos
aam
push
aam
scas
andl
test
out
xchg
iret
in
sub
sbb
imul
or
popf
hlt
das
aam
and
xor
sbb
inc
mov
sti
jmp
sbb
outsb
push
outsl
adc
shll
xor
scas
pop
fistpl
lcall
stc
fildll
sbb
cltd
shrb
rcr
push
out
xchg
push
cmp
and
stos
jecxz
sti
iret
arpl
cwtl
cmc
mov
or
das
stos
notb
popa
jmp
out
adc
pop
dec
stos
mov
cwtl
sub
push
add
arpl
outsb
lea
out
movsb
adc
cld
das
dec
mov
incl
or
push
jmp
inc
js
addr16
inc
add
ror
sub
cld
sub
inc
mov
xchg
and
mov
and
iret
add
loop
and
adc
cltd
mov
sub
push
dec
je
push
lcall
das
dec
cmp
call
ljmp
sub
je
jne
jp
popa
cmpsl
mov
adc
jnp
rorb
movsl
cld
out
sub
mov
mov
das
pop
push
xchg
mov
rorl
or
push
int
addr16
mov
adc
out
ret
lds
in
das
orb
xchg
outsb
lahf
push
dec
mov
aam
or
popf
mov
dec
jmp
pop
lods
cmc
cmp
pop
adc
mov
adc
mov
or
push
xchg
jp
cwtl
fcmovb
aaa
inc
jno
ljmp
mov
divl
mov
pop
inc
lods
adc
add
sbb
add
push
addb
fs
jae
cmp
mov
push
add
mov
cmp
sbb
stos
xchg
push
or
and
mov
iret
in
sar
jbe
dec
test
ds
ja
loopne
push
push
lea
and
push
xchg
adc
scas
je
orb
adc
int
je
mov
pop
pop
ljmp
push
shll
dec
adc
mov
xchg
lea
loop
lret
mov
mov
mov
adc
pop
lods
inc
dec
adcb
jecxz
cmp
adc
lods
aad
rolb
negl
sbb
mov
gs
lds
jb
in
mov
add
mov
ss
es
pop
or
add
pop
shrl
push
cs
add
or
sbb
faddl
push
jecxz
or
aam
fldt
data16
ja
mov
fbstp
test
mov
jbe
mov
aas
stc
in
adc
inc
std
int3
cli
or
ljmp
ret
cs
push
mov
mov
fstl
sahf
push
lahf
jnp
mov
sbb
sti
xor
and
and
clc
sub
int
outsb
ds
adcb
xchg
cmp
add
out
enter
and
push
iret
mov
ss
adc
imul
sbb
dec
pushf
ret
loop
mov
fiadds
loope
das
std
push
mov
scas
adc
nop
mov
aad
sbb
xchg
fwait
adc
aad
shlb
out
ds
lret
mov
xor
sbb
sbb
int
arpl
insb
inc
outsl
out
xchg
out
stc
or
xorl
sarb
lcall
mov
xchg
xchg
inc
inc
jo
pusha
in
je
xor
add
mov
xchg
ds
pop
xchg
sbb
mov
lret
mulb
xor
dec
adc
xchg
dec
mov
push
jmp
scas
inc
lods
lods
mov
cmp
push
mov
mov
inc
jmp
sbb
and
jge
test
xor
cmp
pop
cmpb
sahf
outsb
nop
inc
inc
ret
fdivrs
or
push
fsub
repz
fstpt
lods
xchg
mov
pop
sub
cmp
dec
or
bound
fsubs
andl
cmp
loope
mov
stos
mov
push
xor
fsubrs
gs
fcomp
popf
xlat
mov
xchg
sub
fidivs
mov
inc
jge
gs
mov
rorl
popf
inc
fisttpl
in
je
dec
push
or
cmp
popl
cmc
lahf
call
xchg
pop
out
popf
insl
sbb
mov
adc
cli
adc
inc
mov
in
lock
xor
fnstenv
push
fwait
jecxz
adc
dec
cmp
xor
ljmp
out
cmp
pop
idivl
xchg
add
rclb
dec
cmpsl
mov
ss
cmc
lcall
enter
mov
adcb
addl
push
jg
lds
jnp
cwtl
ss
adcb
shr
sub
divb
mov
pop
les
xor
sub
rclb
pop
push
jle
push
push
stos
jle
lds
std
outsb
jbe
cs
sbb
loope
stc
xchg
enter
ret
movsl
loopne
in
scas
loop
pop
push
leave
cmc
aaa
dec
imul
mov
mov
xchg
out
push
aaa
mov
enter
lahf
xchg
jno,pn
sub
push
ss
cmp
push
rcrl
addr16
insb
sub
test
into
xchg
sub
test
jecxz
cwtl
cmp
negb
lods
mov
push
je
dec
aas
daa
repz
mov
push
dec
xchg
fisttpll
repz
adc
cs
adc
gs
cwtl
bound
cli
dec
scas
jle
adc
adc
roll
and
dec
pop
jns
push
loope
popa
adc
addl
or
dec
inc
sbb
addl
aad
cmp
fmull
mov
mov
fidivl
cld
inc
fcompl
xchg
das
adc
mov
add
sarb
pop
mov
inc
daa
icebp
sbb
imul
scas
mov
and
loopne
sub
in
push
cmp
lret
cmpsl
shl
sbb
mov
xchg
lahf
into
add
dec
je
cwtl
cld
pop
and
in
repnz
aas
or
adc
pop
imul
mov
pusha
movsl
push
loope
leave
and
cs
mov
xchg
add
repnz
sub
pop
je,pt
adc
adc
sub
and
movsb
sub
push
inc
sar
ret
xor
dec
adc
leave
lret
das
and
shlb
push
int3
add
sbb
stc
aam
or
mov
repz
out
les
sub
push
out
pusha
inc
std
cmp
pop
or
and
aam
scas
push
mov
cwtl
mov
hlt
jno
lock
mov
mov
repnz
aaa
jge
inc
pop
lods
add
movsl
add
adc
pushf
outsb
dec
jl
or
pop
dec
mov
fnstcw
xchg
cmp
sub
lea
cmpsl
aam
pop
mov
push
jp
adcb
pushf
movsb
pop
sub
push
or
push
neg
xor
jl
rolb
ds
mov
pushw
mov
imul
sub
pop
inc
adc
ret
pusha
add
sub
or
sbb
cmp
pop
clc
ss
adc
in
lock
fsubrs
roll
dec
pop
mov
fwait
pop
int3
pushf
add
insl
xor
push
loopne
loop
push
sub
stos
inc
das
push
fnstsw
xchg
jne
xor
jb
inc
int
push
pop
jmp
fcompl
test
adc
out
mov
pop
fwait
jnp
mov
xchg
jecxz
scas
testl
or
fsubs
jmp
fiaddl
inc
cmc
lahf
xchg
clc
cli
inc
jg
xchg
gs
adc
popa
popf
push
inc
aam
add
push
and
mov
sub
repnz
mov
jl
fs
data16
fs
cmp
xchg
xlat
and
cmp
pusha
mulb
cmpsb
or
jne
scas
push
outsb
push
and
into
adc
aam
in
das
fcoms
pop
push
and
or
int3
adc
xchg
or
cmp
dec
sbb
xor
dec
das
mov
push
dec
add
insb
and
xchg
jo
stos
stos
into
sbb
cmp
jmp
push
test
cmp
push
add
fwait
inc
adc
popa
push
xor
sub
push
xor
mov
lret
mov
sub
xor
dec
push
push
jb
push
loopne
dec
movsl
mov
mov
jbe
dec
outsb
xor
test
sbb
mov
add
cmp
std
insb
add
dec
movsl
leave
dec
test
ret
popf
push
push
xchg
mov
pushf
into
push
add
ds
mov
add
mov
xor
or
and
test
clc
punpckhbw
xor
shlb
sbb
sbb
push
dec
jb
cld
mov
pushl
cmpsb
mull
and
sub
sub
push
shl
cmp
sbb
xchg
sub
pop
add
and
mov
cld
mov
daa
imull
pop
pop
ficoml
dec
scas
pop
xor
xor
mov
aad
les
push
and
jbe
in
lahf
xchg
xor
xchg
enter
dec
pop
xchg
push
unpcklps
jae
mov
ja
sti
es
jnp
out
xorl
xchg
loop
jp
stos
in
pop
cmp
sub
call
leave
xchg
test
sti
sarb
cltd
adc
mov
add
shr
repz
sub
cld
test
dec
lcall
xlat
mov
mov
cmp
inc
dec
repz
stos
pop
or
rcrb
cmpsl
push
aas
fsubr
and
pop
imul
pushf
cmpsb
jmp
dec
xchg
add
in
jmp
subl
loope
mov
aad
mov
cmp
push
cmp
xchg
fsubrl
pusha
insl
jmp
test
inc
add
lock
pop
xor
loop
into
outsl
xor
cmp
or
fucomip
shll
fmull
jp
enter
push
dec
mov
add
jns
std
sub
lcall
add
lahf
fidivs
std
movsl
mov
inc
mov
nop
pop
inc
push
adc
push
and
pop
sbb
lds
shll
pop
divb
sub
adc
ret
add
ret
cmpsl
movsl
jne
inc
mov
add
shll
jbe
adcb
push
aam
dec
add
push
addr16
repz
cld
adc
pushf
mov
sbb
and
xchg
fs
dec
repnz
pop
iret
jmp
nop
jbe
xchg
mov
mov
pop
in
cli
int3
mov
stos
dec
test
push
push
lods
mov
int
jp
in
inc
sub
cmpsl
xchg
enter
jl
jns
lcall
subb
xchg
js
add
adc
jge
repz
xor
rorb
and
inc
jne
addl
incl
rcll
adc
push
mov
inc
aam
scas
aad
inc
sub
das
inc
leave
mov
sti
xor
add
sarb
cmp
aaa
ja
dec
shll
jg
adc
add
inc
or
movsl
icebp
xor
test
jg
out
cmc
aas
pusha
daa
lea
sbb
addr16
sub
in
mov
pop
or
push
sbb
pop
sub
pop
jge
mov
fmull
iret
jns
or
dec
mov
xchg
inc
rolb
lret
lods
push
mov
mov
jo
aas
outsl
cli
xorl
jmp
push
adc
push
pop
movsl
jns
push
pop
jp
add
and
pushf
mov
xchg
push
mov
xor
mov
dec
outsl
jns
dec
shr
cmp
cmp
shlb
jge
mov
loop
sub
mov
sbb
mov
jl
dec
rcll
pop
aam
in
gs
testb
int3
loope
les
mov
jp
sbb
mov
test
xor
lods
adc
push
ljmp
pop
mov
cld
inc
nop
ljmp
ss
loope
idivl
into
push
push
pand
push
sbb
pop
out
jo
xor
sub
xchg
stc
lcall
movsb
mov
repz
aas
push
and
cmc
or
inc
sbb
push
mov
dec
scas
aas
stos
mov
sbb
in
rcll
add
adc
inc
and
add
gs
mov
shlb
sub
loope
and
mov
or
jp
push
mov
lods
jl
mov
add
movsl
roll
outsl
mov
cli
and
imul
sbb
xor
dec
add
bound
mov
das
out
push
jb
push
or
jecxz
fmuls
hlt
sbbl
popa
ljmp
std
adc
lahf
out
sub
lret
adc
or
mov
negl
sbb
ficoms
add
xchg
es
inc
mov
dec
add
ljmp
out
in
xor
dec
pop
mov
pushf
ds
or
repz
cmpsl
mov
mov
cmpsb
and
or
cli
subl
jnp
mov
lds
mov
rcr
add
inc
enter
filds
movsl
xchg
in
aad
in
cwtl
call
push
jge
or
fstpt
test
jno
out
sti
xchg
or
cmpl
sbb
pop
lods
ror
out
pop
and
bound
add
push
repnz
dec
outsl
aad
jae
mov
test
movlps
frstor
xor
test
popa
stos
movsb
daa
shrb
mov
lret
cltd
mov
pop
pop
push
dec
cmp
push
das
pop
repz
sti
ljmp
xchg
shr
xchg
or
loope
push
xchg
or
ret
and
jae
or
inc
mov
sahf
je
xchg
or
sub
sbb
es
mov
mov
subb
gs
cltd
hlt
fstpl
insb
jb
xlat
mov
jecxz
negl
repnz
push
fisttps
xchg
sbb
pop
cmpsl
adc
es
mov
or
add
push
push
fistpll
pop
jg
lcall
push
hlt
iret
stos
push
sbb
insb
or
mov
lds
or
pop
les
loope
sub
lret
mov
sub
mov
scas
add
lea
jne
aam
lods
js
add
shrb
lahf
test
pop
mov
lret
popf
ret
das
jmp
pop
scas
popa
xchg
ret
mov
popf
push
fisubs
dec
js
jns
push
push
jle
les
mov
leave
jnp
fcomps
sti
stc
lock
or
inc
cmovae
add
test
xchg
outsb
sub
test
and
sbb
dec
pop
int3
pushf
or
fadd
xor
mov
testb
jle
add
jb
test
dec
xor
addr16
xchg
call
jmp
arpl
lret
movsl
repnz
faddl
inc
push
inc
insb
call
in
mov
xchg
ljmp
stos
xchg
mov
js
add
sbb
push
ss
sbb
push
jg
and
sbb
and
adc
lret
push
loopne
scas
mov
cmpsb
mov
inc
sub
mov
int
loopne
dec
push
mov
sub
ja
adc
add
idivb
pop
popf
xor
jne
jle
fnstsw
xor
sbb
sub
out
sahf
in
pop
pop
std
movsb
dec
fst
xor
ja
lods
sbb
jmp
loope
cmpsb
cld
into
orb
out
jle
imul
mov
pop
xchg
addr16
adc
stos
test
dec
cmc
ret
jp
jecxz,pn
push
adc
inc
cmp
jle
lahf
pop
sub
xchg
pop
sbb
in
ds
mov
mov
push
outsl
sbb
dec
cs
or
cmp
movsl
call
imul
int3
lret
push
cmp
xchg
or
test
dec
jo
push
sub
es
into
push
push
mov
fisubl
push
xchg
inc
pop
gs
sub
loope
inc
mov
lods
mov
iret
jbe
dec
fcomi
xlat
push
xor
pop
fs
sub
cmc
testb
adc
mov
test
jne
lods
adc
mov
out
enter
pop
and
stos
push
lcall
repz
test
jmp
fs
add
mov
fwait
icebp
mov
push
mov
mov
lods
mov
adc
loopne
xor
pop
or
ja
push
sbb
pop
or
insl
pushf
lcall
imul
inc
movsl
push
and
aam
or
push
mov
popa
bound
xchg
ds
pop
les
mov
and
jle
jnp
sub
push
imul
cmp
and
and
inc
sbb
dec
mov
leave
add
mov
push
test
adc
daa
cmpsl
add
cmpsl
mov
icebp
clc
sarl
lea
mov
dec
xor
push
daa
jle
jmp
icebp
push
ja
dec
out
mov
outsb
pop
push
addr16
shlb
mov
and
dec
push
bound
xchg
pop
pop
and
sbb
cmp
sbbb
orb
cld
sbb
and
out
dec
cld
and
push
lock
mov
in
push
xlat
aad
xchg
in
xor
loope
pushf
cmp
push
jge
xorb
inc
push
push
adc
add
xchg
sbb
pushf
push
push
cmpsb
out
int
xchg
cmpsl
mov
mov
xor
jnp
mov
aaa
andl
mov
fs
loope
pop
or
add
xchg
jns
jg
mov
fistpl
pop
add
inc
mov
sub
push
in
add
xor
in
add
mov
inc
loope
ret
pop
fsts
xchg
scas
sarl
add
mov
int3
or
out
cltd
inc
fisubs
jb
inc
mov
xchg
jmp
mov
xor
cli
stos
adc
mov
mov
ljmp
add
xor
adc
push
mov
xor
int3
adc
mov
mov
js
cmp
fidivl
sub
push
ret
inc
add
incb
add
in
ror
push
out
imulb
sub
sbb
mov
sbb
pop
inc
pop
cmpl
cmp
test
fs
movsl
cs
loopne
pop
xchg
and
adc
xchg
addb
sbb
pop
fistps
dec
add
data16
ret
into
jge
push
test
sar
and
iret
in
add
xor
and
mov
jge
xorb
jbe
sbb
mov
add
movsb
mov
repz
adc
mov
xchg
sbb
sbb
pushf
push
je
dec
add
jae
lods
popa
sub
repz
enter
mov
stos
aas
out
cmp
push
push
orl
pop
bound
push
mov
add
jle
cmp
scas
addr16
mov
loopne
jp
sbb
adc
dec
rorb
mov
pop
inc
out
dec
int
les
addl
xchg
jo
repz
adc
andb
sbbb
ljmp
xchg
hlt
and
pusha
lret
lock
in
bound
and
out
frstor
sahf
sub
adc
dec
paddw
sub
enter
in
xor
stos
mov
mov
mov
out
mov
sub
enter
xchg
mov
add
push
sub
fstl
xor
add
xchg
dec
mov
jne
lods
cltd
pop
jp
bound
pop
les
sarb
push
insb
sarb
sahf
icebp
mov
sbb
insb
fisttps
stos
lcall
outsb
xor
pushf
pop
jne
lcall
enter
push
sbb
aad
js
fistpll
out
test
loop
leave
push
jecxz
stos
inc
stos
dec
aaa
xlat
mov
in
negl
mov
lahf
mov
xchg
test
in
and
ficoms
rcll
stos
adc
jp
mov
sub
fmul
lds
push
lea
aas
push
xor
xchg
jno
fxch
mov
jnp
mov
jno
cs
xchg
inc
xchg
pop
lods
dec
mov
negb
cmovg
mov
icebp
cmp
lahf
rorl
sarb
loopne
sbb
or
jge
lahf
call
pop
jno
dec
adc
insl
dec
and
mov
jg
aaa
jp
or
cmp
cli
sub
hlt
mov
insb
subl
in
inc
dec
test
jle
inc
repz
sbb
aaa
push
iret
repz
mov
jnp
fidivrs
call
pop
adc
repnz
xchg
lcall
mov
daa
call
lcall
mov
push
jns
xchg
pushf
sti
jnp
mov
sti
inc
ss
xchg
sbb
mov
push
into
icebp
xchg
movsb
outsl
xchg
xor
sysret
jecxz
pop
ret
sub
inc
insb
rcll
xor
int
cmp
in
sub
cmp
jg
rolb
inc
repz
push
pop
xchg
out
push
inc
clc
add
add
cmp
adc
push
sbb
mov
inc
mov
jle
mov
push
cltd
or
sub
xchg
sbb
ret
add
stc
dec
sub
inc
int
inc
sub
es
fimull
icebp
test
jae
mov
or
je
xor
fld
mov
and
sub
sbb
inc
leave
pop
repnz
mov
pusha
sahf
bound
rcrb
jle
pop
andl
cltd
mov
xchg
or
inc
popf
mov
and
sub
xor
das
icebp
scas
lds
and
sbb
push
xchg
iret
inc
jg
js
sbb
aas
iret
jmp
dec
dec
adc
push
test
push
push
pop
arpl
mov
add
push
test
fsubs
and
lea
test
lahf
aam
push
out
mov
jmp
cmp
xor
repnz
aaa
xchg
cmp
pop
xchg
lock
or
sub
or
jns
lods
in
movsl
cmp
or
pop
xchg
add
fwait
sub
test
movsb
rorl
popl
xor
and
stos
loop
lds
jmp
sub
and
ja
jne
data16
push
xor
add
repz
push
mov
mov
shll
data16
adc
mov
xchg
mov
pop
add
jnp
jmp
testl
sub
div
lods
mov
inc
jmp
and
lret
xchg
sbb
cmp
and
jns
pop
sub
push
sub
sub
cli
dec
lahf
daa
add
cli
push
jae
cli
test
mov
and
mull
enter
cmp
das
aaa
aas
add
bound
xchg
call
and
mov
adc
popf
outsb
pop
gs
shll
pop
mov
or
loope
xchg
les
fwait
mov
push
int3
mov
imul
sbb
push
push
cmp
and
das
mov
jns
ss
adc
or
addl
std
fyl2xp1
adc
test
stos
jae
pop
cmpsl
out
loopne
out
jmp
cmp
xlat
sbb
rclb
xlat
decb
repnz
jp
xor
jo
sub
jnp
sbb
scas
mov
andb
jl
je
aas
lcall
into
adc
mov
push
sub
mov
fstp
scas
dec
or
imul
and
xor
push
cltd
add
xchg
inc
dec
ror
sub
icebp
and
cmp
jp
dec
out
subl
lds
or
loopne
sub
sub
or
arpl
ljmp
iret
mov
inc
jns
fs
xor
pop
ret
subb
aam
insl
dec
mov
push
dec
xor
adc
hlt
repnz
clc
dec
adc
push
sti
mov
pop
cmp
fs
fsubrp
sub
mov
add
ficompl
adc
push
movsl
incl
xchg
imul
stos
lret
adc
push
xlat
clc
dec
sub
sarl
xchg
cmp
dec
pop
cld
push
dec
pop
sbb
pop
add
into
jno
shll
mov
sbb
sbb
in
sub
push
shl
in
scas
out
lcall
push
ret
cmpsb
iret
mov
out
pop
push
mov
imul
rol
not
lahf
mov
mov
mov
push
adc
int
int3
xor
and
jge
xor
mov
xlat
push
dec
pop
loopne
xchg
mov
sbb
or
and
ret
repnz
fnstsw
xchg
pop
sbbb
xor
cmpl
push
pop
in
xor
xchg
mov
mov
pop
pop
sbb
daa
movsl
lret
jmp
xchg
mov
dec
pop
mov
ds
pop
lods
imul
scas
xchg
dec
or
mov
loopne
dec
add
mov
xor
movsb
adc
mov
ror
cs
jb
test
imul
dec
pop
push
in
addr16
iret
je
hlt
sub
leave
fidivl
dec
or
pop
or
mov
lcall
std
xor
testb
jl
aam
jo
pop
jo
sbb
fisubrl
in
pop
dec
sbb
or
je
pop
les
aam
xor
fidivrs
in
push
cltd
ret
sub
rorb
xchg
hlt
dec
mov
cmp
inc
xchg
pusha
aad
adc
pop
mov
int
add
inc
and
sub
mov
or
and
daa
xlat
xchg
repnz
loopne
jg
mov
out
into
ljmp
mov
das
inc
xchg
sub
sub
adc
in
jns
lea
into
stc
push
mov
cmpsl
sbb
or
push
data16
add
lds
jb
ret
daa
mov
adc
popf
mov
enter
clc
lret
in
and
movsl
lret
rol
cmp
pusha
pop
scas
je
loop
ds
push
stos
imull
out
add
xor
and
aas
xchg
pop
fists
aaa
icebp
addr16
xchg
push
mov
push
imul
dec
rol
add
fwait
push
xchg
loope
icebp
int3
adc
xchg
dec
add
cmpsl
mov
sbb
and
or
cmp
in
push
xchg
dec
mov
ds
imul
fmul
xchg
fadd
ja
je
sbb
add
int
adc
fdivs
inc
fs
int
lcall
xchg
sti
ret
dec
fucomip
das
jmp
cmp
sub
pop
mov
or
nop
inc
xor
loope
sbb
mov
ja
add
mov
inc
fildll
mov
test
ljmp
stc
test
mov
repnz
cltd
xchg
and
std
jb
cmc
pop
jmp
shlb
into
push
mov
xchg
rol
or
push
outsl
cmpsb
mov
xchg
int
push
push
dec
cmp
xchg
push
aas
repz
lods
popa
fdiv
xlat
adc
add
inc
pop
lretw
adc
mov
inc
mov
ljmp
cltd
pop
dec
or
xchg
xor
mov
aad
std
mov
shll
jno
mov
pop
cld
imul
repnz
dec
jge
sbb
fcoml
sarb
hlt
stos
cltd
rep
mov
mov
mov
and
fwait
adcl
clc
loop
pop
mov
xchg
inc
or
aas
out
sub
jg
adc
pop
stos
adc
mov
xchg
cmp
mov
pop
sub
xlat
sarb
push
call
xchg
in
aad
xor
mov
or
inc
sub
jne
jecxz
in
adc
sub
out
xchg
sub
out
inc
adc
in
inc
clc
push
mov
lods
popa
mov
pop
lret
gs
lcall
popf
mov
es
iret
add
mov
loop
cmpl
and
out
std
stc
dec
adc
jbe
adcb
jg
xor
cmp
push
out
or
negb
jbe
daa
in
lods
shll
jmp
insl
insl
pushf
test
repz
daa
push
push
mov
jns
fstps
jmp
push
cmp
or
rclw
xchg
pop
jmp
lods
sub
testb
stos
pop
cmpsl
lock
add
mov
push
pop
or
lret
xchg
dec
fwait
xchg
cli
stc
push
mov
and
ss
fsub
jne
int
idiv
dec
sti
sbb
mov
mov
cwtl
mov
jb
inc
jnp
push
adc
inc
fcomp
mov
adc
fst
sub
shll
in
push
testl
mov
mov
jo
jo
push
popa
dec
cmpsb
rcll
mov
pop
hlt
pop
jl
stos
xorl
daa
mov
and
test
aad
popf
inc
shlb
loop
xchg
mov
inc
lds
xor
push
test
push
cmpb
sar
cmc
xchg
cmc
jge
push
xchg
pop
jle
mov
mov
jp
lea
mov
cmp
gs
loop
test
je
lods
jnp
nop
sub
xchg
mov
push
sbb
adc
sbb
dec
int3
shrl
inc
dec
rolb
add
pop
xor
sahf
inc
mov
lock
push
jge
aas
add
sub
sets
mov
mov
fcompl
mov
jnp
jp
cmpsb
out
outsl
movsl
aaa
pop
test
popf
sub
ror
mov
cmp
xchg
testl
dec
js
bound
adc
repz
repnz
test
jmp
nop
test
cs
inc
hlt
fsubs
pop
popa
sbb
cmp
mov
sahf
xor
jb
pop
xor
inc
mov
inc
mov
mov
hlt
cmp
adc
add
orb
ja
mov
inc
mov
push
pop
cli
push
push
cli
mov
lods
cmpsb
ds
int3
inc
fcomip
mov
adc
arpl
inc
sub
movsl
hlt
or
jp
jecxz
.byte
mov
sbb
add
sbb
add
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pusha
dec
add
add
add
incl
add
add
arpl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
dec
add
add
add
mov
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
cwtl
dec
add
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
mov
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
stos
dec
add
stos
dec
add
lcall
dec
add
dec
add
incl
add
add
mov
add
add
add
mov
add
mov
add
incl
add
add
add
incl
mov
add
cmp
cmpb
add
jmp
dec
add
les
add
add
incl
add
add
les
add
add
incl
add
add
dec
add
add
add
incl
add
add
enter
add
add
incl
add
add
enter
add
add
incl
add
add
add
add
incl
add
add
lret
dec
add
add
add
sti
into
dec
add
into
dec
add
add
add
incl
dec
add
dec
add
inc
rorl
rorl
mov
dec
add
xor
dec
add
inc
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
aad
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
fmuls
add
add
incl
add
add
fmuls
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fisttpll
add
add
incl
add
add
dec
add
add
add
jmp
fimuls
jmp
jmp
fisttps
in
fisttps
lock
incl
loopne
add
dec
add
jmp
loopne
add
pushl
loopne
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
out
add
add
add
incl
add
add
call
add
ljmp
ss
add
add
add
add
push
sbb
add
adc
add
or
ficompl
or
in
sbb
add
sbb
add
or
sub
or
sbb
add
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
in
addr16
inc
shll
xchg
clc
inc
jle
ja
jl
mov
cli
cmpl
mov
and
lods
cmp
bound
xchg
aas
std
mov
adc
cmpl
jno
shlb
je
mov
and
push
js
xor
loope
push
pop
out
insb
push
xor
dec
push
dec
sbb
jae
cmc
add
jne
xchg
stc
insb
cmp
pop
jge
push
inc
lcall
arpl
inc
imul
or
add
mov
pop
sahf
jns,pn
or
sbb
mov
imul
fisttps
push
out
cmp
sbbb
das
stos
fistpll
mov
scas
in
std
fs
push
ret
hlt
mov
xor
imul
decb
dec
mov
repnz
pop
insl
xchg
ljmp
faddp
pop
out
imul
jno
mov
mov
add
divb
inc
sub
lods
mov
aad
mov
jb
mov
add
clc
and
gs
mov
cld
mov
cmpsb
mov
or
cli
in
movl
stos
xchg
rolb
fiadds
cmc
outsb
mov
into
and
lock
jo
test
ret
xchg
xchg
scas
iret
test
mov
aas
sahf
movb
sbb
sbbb
mov
pop
lcall
mov
repnz
mov
out
rorb
imul
ljmp
cmp
ret
xchg
lret
xor
mov
mov
movsb
xchg
mov
adc
add
inc
and
rcrb
mov
stos
pop
mov
xchg
imul
add
xchg
add
scas
test
call
mov
push
das
cmp
mov
xchg
int3
or
or
in
cmp
jmp
ret
xlat
dec
fists
cwtl
shrl
inc
jmp
imul
cmp
rcl
cmc
fdivrl
mov
movsl
ja
in
insl
enterw
jge
popf
xchg
or
ljmp
hlt
jne
jo
cmp
scas
or
mov
int3
es
fucomip
push
sahf
scas
push
insb
leave
sbb
mov
adc
add
scas
in
pushf
sti
jae
movsb
push
in
movsb
mov
cltd
cmp
dec
cmp
enter
sahf
sub
icebp
sub
scas
insl
or
rcrl
inc
mov
mov
mov
push
icebp
push
shrb
inc
push
aas
sub
mov
test
nop
add
andl
mov
or
jns
jbe
jge
mov
push
cmp
test
push
popa
movsl
rcl
add
aad
adcl
jns
loope
insb
dec
or
fdivrs
xchg
stos
pop
mov
std
xchg
cmc
sbb
sbb
aaa
jecxz
aad
sub
xor
sbb
daa
jl
xor
jo
scas
test
fucom
insb
add
jno
pop
pop
lahf
xchg
pop
cld
xor
sti
mov
mov
pop
push
imul
push
data16
cmc
push
std
adc
push
movsb
ss
in
push
imull
or
and
inc
push
mov
jnp
jno
jecxz
cmpsb
and
das
ret
and
lcall
or
imul
mov
pop
testb
push
aas
cmp
pop
xor
xchg
sbb
xor
popf
xlat
dec
inc
push
std
outsb
out
pop
roll
or
jecxz
in
xchg
fidivl
mov
push
and
jne
loopne
or
adc
test
xor
and
in
call
pop
xchg
fistpll
push
out
push
push
sbb
scas
mov
repnz
rclb
in
lret
adc
pop
inc
mov
dec
add
inc
loop
dec
subl
int3
lock
leave
dec
es
adc
adc
xor
adc
xchg
fadds
imul
cmp
add
push
outsb
lods
daa
pop
in
sub
and
add
adcl
inc
lret
sbb
adc
pop
push
lea
scas
pop
and
push
add
push
sbb
fmuls
ja
pop
cmpsb
pop
jno
mov
pop
ret
mov
aaa
orb
sbb
outsl
ret
xlat
sbb
pop
mov
lods
mov
sbb
or
sub
mov
aaa
cltd
mov
loope
inc
cmp
xchg
int
gs
jo
dec
mov
pop
inc
jae
pop
aaa
pop
push
ds
jnp
fimuls
sti
dec
in
sti
mov
or
stos
mov
imul
fs
mov
aad
sub
lcall
xor
lock
scas
add
ljmp
mov
mov
push
stos
stc
arpl
and
ret
add
mov
repnz
pop
icebp
out
or
sub
sbb
pushl
sbb
in
bound
adcb
xlat
mov
imul
out
jl
add
mov
incl
add
cmp
mov
adc
mov
xor
cli
dec
adc
cmp
das
push
in
outsb
inc
pop
lret
mov
pop
pop
int
sahf
add
jl
imul
xor
mov
jmp
out
add
shlb
push
pusha
daa
sbb
sbb
pop
mov
aad
popa
mov
cwtl
dec
inc
imul
and
lds
stos
xlat
fcomps
mov
out
xchg
pop
fildl
mov
shl
ds
jno
loope,pt
out
scas
movsb
and
repnz
subb
into
lret
mov
jl
sbb
call
mov
push
shlb
fmulp
jmp
scas
movsl
mov
out
mov
xchg
daa
push
sti
pop
enter
push
rcl
xchg
gs
dec
enter
add
into
sti
mov
lea
push
cmp
ss
mov
dec
add
fiadds
jbe
pop
push
jl
sar
es
adcl
fistpl
ficoms
out
push
xchg
jle,pt
daa
pop
xchg
add
dec
add
push
sub
cwtl
jb
iret
mov
arpl
push
ret
mov
lahf
inc
mov
int
leave
popa
enter
push
cli
cmp
push
lods
xor
cmp
add
cmp
add
test
test
push
stos
shr
dec
pop
int3
dec
stc
pop
jo
je
imull
push
jo
nop
sub
mov
roll
push
sti
rorl
mov
sbb
ret
adc
cmp
iret
adc
enter
outsl
leave
cld
adc
insl
add
push
push
sahf
test
mov
push
or
add
movsl
adc
sbb
movsl
push
pop
out
fwait
add
or
jl
jne
stos
jg
popa
cltd
mov
insb
cs
push
mov
or
or
xor
dec
adc
loop
push
ss
int
adc
push
fldt
test
dec
jl
mov
or
mov
ret
mov
dec
push
xchg
bound
adc
push
aam
and
xchg
addr16
cmc
sbb
inc
mov
repz
pop
pop
in
mov
xor
test
loop
outsb
inc
negb
bound
aas
push
xor
pop
js
sbb
or
push
push
ss
jg
jge
imul
cmp
push
sub
mov
jnp
aas
dec
pop
imul
cli
mov
ss
stos
daa
lahf
test
insb
mov
sahf
sti
push
in
pop
das
je
lds
xchg
and
sub
jb
cwtl
add
push
leave
sub
mov
sub
pusha
pop
pop
cmp
adc
push
mov
push
sti
push
push
xor
push
pop
push
inc
sub
inc
lds
xor
inc
cmove
inc
stos
pmulhw
daa
and
imul
inc
mov
xchg
mov
outsl
lock
mov
sub
inc
pushf
inc
fs
mov
pop
hlt
jle
inc
mov
dec
xor
cmp
repz
repz
dec
cmc
call
stos
rcrb
sub
bound
mov
dec
clc
add
and
movsl
or
sub
jecxz
js
and
sub
lret
sub
rcll
xor
scas
clc
popa
in
mov
cltd
adc
insb
xor
jno
dec
push
jnp
fwait
pop
shrl
dec
scas
mov
sub
lret
enter
faddl
lahf
nop
xchg
lds
lods
je
and
pushf
aad
jg
xor
sbb
mov
sub
in
into
jp
popa
and
dec
cmc
popf
push
ret
movsl
lahf
popf
jne
mov
in
lods
and
mov
mov
jbe
xchg
movsb
pop
movsb
loope
stos
adc
xor
sbb
xchg
mov
pop
popa
mov
dec
mov
mov
test
mov
mov
add
sti
mov
lods
call
push
or
sbb
xor
hlt
push
test
xchg
stos
hlt
pop
xchg
mov
fistps
les
and
fwait
test
cmpsl
xor
inc
cmp
cmpsl
ja
add
stos
rorl
es
push
insl
jecxz
or
xlat
xchg
loopne
jno,pt
fildl
sub
scas
lcall
pop
outsl
pushf
fwait
stc
sbb
add
xchg
push
cmp
test
jbe
push
adcl
mov
dec
xchg
mov
mov
cmp
cmp
lods
scas
xchg
adc
adc
jmp
pop
and
jo
cli
cli
mov
frstor
sbb
xchg
mov
inc
aaa
cmp
push
jo
fnsave
shrb
into
add
in
dec
mov
imul
repz
gs
and
jecxz
xor
jns
movsb
divl
adc
outsb
jl
outsb
testb
jae
in
jns
js
insb
jo
sarl
loopne
cltd
rcl
arpl
push
movb
mov
test
inc
xor
sub
inc
pop
mov
xor
and
clc
pop
inc
outsl
imull
dec
aas
fcoms
mov
jge
sti
mov
jnp
lods
arpl
mov
das
inc
pushl
or
int3
mov
sbb
jnp
xor
fcoms
xchg
or
cmp
add
pop
cmp
push
in
xchg
testb
aad
jp
out
fwait
inc
repz
out
sbb
jne
jl
cld
mov
or
xchg
sti
popa
sbb
and
repz
ret
xlat
mov
daa
loopne
aam
out
xor
inc
and
js
mov
aaa
or
push
lods
lds
xlat
dec
or
std
pop
xchg
imul
or
fildll
and
adc
sbb
inc
repnz
mov
pop
push
js
dec
push
js
mov
or
jge
adc
inc
mov
ljmp
int3
push
pop
and
rcrb
cmc
bound
gs
fnstcw
clc
bound
sarb
jmp
push
cmp
push
sahf
in
or
nop
add
sub
jg
or
fistps
push
adc
or
or
out
ret
mov
scas
js
xchg
xchg
mov
or
mov
cmp
repz
or
dec
cmpsb
notl
inc
mov
test
push
lahf
cmpsb
push
jmp
jl
imul
nop
sbb
hlt
enter
fildl
adc
repnz
icebp
pop
in
mov
insb
cli
mov
ret
and
jecxz
pop
lret
rcll
or
cmc
sbb
inc
into
jl
push
jp
mov
jl
lea
popa
std
push
mov
push
shl
idiv
mov
sbb
xchg
testl
sub
gs
mov
and
xchg
xchg
jge
into
ds
out
mov
push
scas
dec
shlb
stc
mov
jecxz
je
inc
xchg
push
add
cmc
xor
test
lds
sbb
clc
bound
xchg
push
adc
adc
pop
inc
push
mov
jge
insl
push
cld
lret
movsl
scas
daa
jl
push
mov
int
pop
and
aam
shrl
ret
movsl
and
scas
add
sbb
jge
out
push
lret
xor
shlb
or
aam
dec
cmpsb
push
test
icebp
imul
cltd
fwait
insl
inc
sbb
sub
sbb
jmp
test
cmp
sub
data16
cmp
or
push
in
sbb
std
mov
or
fstps
shlb
aam
imul
push
mov
nop
or
cmc
inc
scas
jns
cmpsb
xchg
aaa
cmp
iret
out
ret
rcll
je
mov
xchg
push
push
pop
jno
sbb
aad
out
push
ja
and
or
dec
loope
fstpt
dec
or
add
daa
xor
mov
mov
mov
sub
popl
mov
jl
out
shrd
ret
jecxz
into
loopne
int
jg
out
arpl
push
jbe
scas
cmp
aaa
sub
xlat
test
pusha
and
push
mov
mov
add
adc
lret
cmp
pop
cmp
movl
inc
sub
lods
test
dec
mov
std
xlat
leave
mov
sbb
xchg
in
rcrl
adc
jecxz
add
fs
test
imul
cmp
cmpsl
filds
pop
fisttpll
aas
or
dec
shl
inc
lahf
jno
jmp
addr16
sahf
mov
lret
dec
add
push
lock
mov
cmpsl
and
pop
add
arpl
test
cmp
or
mov
imul
sbb
sbb
cwtl
cmc
inc
daa
sbb
mov
roll
in
jmp
mov
mov
ljmp
call
aaa
push
insb
xchg
sti
mov
in
jl
scas
or
stos
push
les
in
fpatan
popf
insb
mov
mov
and
in
roll
or
sarl
rolb
mov
in
std
pop
shll
inc
ret
jns
mov
inc
movsb
mov
ficompl
push
cwtl
orb
adc
dec
xchg
stc
bound
lahf
xor
dec
dec
fimuls
push
add
mov
sarb
cmp
std
fsts
dec
mov
or
in
sbb
in
add
inc
mov
jnp
cmp
js
jecxz
push
adc
cld
vzeroupper
jp
mov
enter
push
ljmp
add
cwtl
sbb
push
push
ss
add
mov
callw
ja
dec
lea
mov
lods
mov
pop
mov
std
ja
or
subb
in
pop
push
imul
xchg
cwtl
pop
adc
sbb
xchg
lret
cmp
mov
fildl
mov
into
sub
pop
int
mov
shlb
mov
orl
sar
fidivs
push
movsl
inc
mull
call
imul
and
push
xchg
jge
jp
cmp
cmpl
inc
dec
fs
call
fs
cs
xorb
test
mov
jo
pop
iret
jle
cmp
pop
sbb
enter
cmp
rolb
mov
jmp
lods
inc
idivl
and
adcb
loop
loop
xor
loop
adcl
lahf
sub
inc
dec
scas
lahf
sbb
xchg
iret
push
mov
adc
ljmp
push
pop
ss
xor
mull
in
pop
mov
adc
mov
std
jl
mov
jne
or
imull
lock
mov
dec
inc
stos
sub
mov
sbb
cmc
iret
lret
sub
lea
jb
negl
inc
push
mov
mov
jp
sub
xchg
loopne
js
daa
mov
cmpsb
stos
xchg
and
xlat
xlat
repnz
sub
dec
sub
dec
fcmovnu
cmp
mov
push
and
adcl
aam
mov
or
pop
cmp
mov
popa
imul
push
jbe
gs
xchg
xor
in
rcl
jg
mov
jecxz
mov
in
jbe
lret
mov
mov
jo
or
idiv
cmp
cmp
pop
andl
lret
mov
push
repnz
cwtl
jle
xor
adc
push
mov
pop
cs
sti
xor
fcoml
dec
mull
lcall
cmp
or
sbb
push
sub
sbb
mov
pop
dec
std
adc
pop
in
int3
lods
jno
and
adc
cmpsl
adc
cmp
add
aas
cmpsb
mul
cmp
xchg
popa
repnz
enter
movsl
inc
sbb
lods
or
or
mov
inc
sbb
cmp
or
mov
mov
jp
scas
les
or
rolb
roll
jp
movsl
test
fadd
pop
adc
sbb
pop
jg
xor
push
outsl
mov
fisttpll
lods
out
fstpl
mov
inc
test
ljmp
sbb
jo
pop
sub
fisubrs
mov
push
test
les
sti
adc
fsubs
cmp
lret
andb
adc
adc
test
lea
mov
mov
es
pop
mov
fisttps
mov
mov
out
filds
rcl
fwait
add
ficoml
pushf
cli
ja
cmc
sbbl
repz
loope
jb
mov
int
lea
lret
and
sbb
sub
sub
cmp
inc
mov
das
sub
fwait
jnp,pt
and
test
jg
add
into
aad
and
jo
sbb
or
ret
add
add
or
pop
xchg
fcompl
stc
ja
fidivl
mov
repnz
shll
ficompl
dec
mov
loop
sti
scas
test
out
jge
sub
xchg
pop
jmp
mov
cs
fwait
leave
jnp
inc
dec
dec
punpckhdq
cmp
filds
xor
dec
xchg
inc
mov
loope
repz
les
cmpsb
xor
icebp
jo
in
fsubrs
mov
cmp
fs
push
rorl
inc
push
xor
mov
mov
nop
push
add
inc
fwait
xor
jbe
ret
fmull
jecxz
xchg
fmuls
jns
in
cltd
mov
xor
shll
mov
sub
inc
shl
dec
fbld
push
nop
xchg
cmc
in
sub
sub
repnz
xor
adc
mov
xchg
and
in
mov
push
mov
sbbl
test
into
and
jb
scas
rcr
inc
mul
repz
shlb
xor
xor
jnp
push
aam
push
fidivs
clc
loopne
pop
das
and
shlb
pusha
jae
icebp
scas
int3
negl
cmp
jno
adc
cmp
inc
jp
fistl
xchg
pop
xor
jns
test
aam
xchg
repnz
lahf
xchg
idiv
stos
jg
push
add
aad
pop
pop
into
repz
push
sbb
testl
xchg
mov
insl
mov
mov
icebp
testb
and
mov
sbb
xlat
clc
dec
mov
or
cltd
fmuls
bound
adc
xchg
in
int
push
daa
scas
and
add
ss
sub
hlt
in
jae
popl
mov
ljmp
test
decl
jp
xchg
out
imul
mov
ror
pushf
jnp
cmp
arpl
in
lret
cwtl
inc
xchg
leave
dec
and
call
insb
out
push
addr16
int3
pop
lea
xor
jns
jno
cld
mov
testl
xor
in
mov
xchg
in
in
xchg
in
jno
mov
fisttpl
jmp
ss
addr16
inc
add
push
mov
jge
into
jo
or
mov
roll
addl
enter
rcrl
dec
repnz
push
pop
push
or
fildl
mov
mov
xor
test
js
ljmp
or
dec
arpl
loop
fs
les
inc
repz
outsl
xor
jno
data16
lds
ds
sub
xchg
jg
inc
cmpb
xchg
jp
jae
add
push
add
inc
pop
mov
jp
push
icebp
cli
and
out
jns
sub
fcoml
imul
mov
cmp
adc
or
popf
shr
popf
mov
sbb
out
movsl
jl
dec
mov
xchg
lods
mov
lea
adc
pusha
jne
imul
repnz
dec
cmpsl
scas
stos
gs
adc
cmc
and
outsl
add
in
xor
sub
mov
jmp
shlb
std
lock
mov
mov
sub
fcmovnb
xor
jns,pt
fbstp
out
xor
jbe
sti
test
jnp
lcall
cli
stos
icebp
rcll
xor
cmpsl
inc
add
pop
icebp
sub
sar
xor
iret
or
ljmp
loope
outsb
push
dec
cmp
and
mull
add
movsl
lcall
popf
cmpl
sarl
cmp
push
dec
leave
sahf
jb
cwtl
insl
inc
cmpb
xor
sbb
cmpsl
xchg
daa
loop
cld
shl
scas
hlt
inc
xchg
xchg
xlat
xor
mov
xor
bound
lcall
aas
insb
in
adc
dec
aas
mov
loope
or
hlt
xor
xchg
movsb
outsl
sub
sub
gs
or
sbb
mov
push
mov
rcrb
xchg
add
daa
pop
mov
insb
mov
iret
and
add
roll
lret
pop
mov
mov
pop
fpatan
sbb
xchg
sbb
lods
add
xchg
int3
pop
jae
repz
mov
out
js
xchg
pop
xchg
mov
stos
cmp
mov
imul
cli
and
jg
popl
pop
ret
xchg
xchg
pop
mov
ds
stos
jle
cmpsl
or
mov
lahf
jecxz
fucomip
imul
mov
xchg
mov
dec
hlt
pop
popa
and
lcall
jmp
push
add
sbb
lret
mov
subl
push
mov
insb
in
sahf
mov
add
pop
xchg
mov
cmc
cmp
leave
adc
mov
insl
mov
fiadds
lods
sbbl
inc
stos
mov
lds
das
shlb
inc
pop
mov
je
xor
popf
push
shll
or
imul
int3
add
push
cmp
inc
jne
jecxz
cmp
jl
out
xchg
loop
sub
popa
shll
jae
adc
lahf
jle
mov
mov
in
aaa
push
pop
ds
lods
add
stos
pop
mov
cmp
enter
lock
or
inc
cmp
stos
leave
jbe
dec
add
aaa
in
loopne
.byte
