incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
out
insl
mov
inc
sub
dec
pop
push
add
jbe
and
push
dec
push
dec
addr16
data16
das
dec
in
mov
outsl
jmp
sub
and
outsl
jb
and
inc
outsl
jne
fsubr
imulb
outsb
jae
insb
push
and
and
outsl
pushl
push
push
inc
inc
dec
pop
push
push
push
jbe
iret
jne
inc
pcmpeqb
pop
add
cmp
out
pop
sti
ffree
gs
outsb
jg
xor
xor
mov
jl
dec
xor
inc
xor
test
cmp
dec
dec
push
inc
sahf
cmp
sbb
or
out
jae
popa
insb
jo
popa
inc
arpl
inc
pop
sti
mov
inc
outsl
pop
jae
dec
aas
adc
int
jle
pop
push
push
adcl
mov
jnp
fwait
dec
and
dec
jge
sbb
mov
incl
push
inc
dec
inc
pop
inc
dec
pop
imull
push
push
push
inc
add
dec
inc
icebp
ret
jae
add
je
aas
inc
cmp
pop
sbb
ljmp
imul
jl
fnsave
insb
ljmp
and
imul
push
and
sar
pop
imul
add
add
add
add
pop
or
or
out
decl
or
or
or
movups
adc
shll
aas
add
add
shll
push
jnp,pn
shll
pop
jle
aas
or
jl
cmp
add
add
xor
movhps
das
out
xor
jg
jg
xor
repz
add
rorl
or
xor
adc
std
jg
pusha
push
push
inc
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
adc
gs
fs
jo
bound
cld
jmp
sub
xor
cmp
jne
mov
sti
idiv
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
fidivs
jle
push
dec
mov
pop
ret
add
lds
or
cmp
mov
je
aas
cmp
je
in
mov
inc
dec
jne
adc
adc
ja
sti
sub
mov
pop
cmp
adc
enter
dec
or
sub
add
jmp
dec
or
in
sbb
xor
insl
or
adc
idivb
mov
mov
add
div
outsb
mov
mov
add
cmp
and
je
mov
dec
sub
rclb
mov
je
lea
push
push
add
lods
push
push
adc
push
movl
add
shlb
insl
xor
call
add
pop
das
mov
mov
mov
pop
pop
call
in
out
dec
fadd
add
sbb
mov
pop
add
clc
add
jb
pop
fcmovnu
jge
push
dec
push
mov
adc
mov
push
push
adc
lret
jae
push
mov
mov
out
xlat
ss
sub
jle
popf
cmpl
mov
xchg
xor
push
ss
lahf
test
mov
in
xor
push
jbe
enter
lea
in
aaa
adc
add
cmp
inc
loope
jb
fisubrl
lock
loope
es
push
dec
pop
aaa
ret
sti
mulb
pop
jmp
cmp
je
movl
ds
cmp
and
xchg
and
aas
mov
and
imul
adc
or
ja
addr16
xchg
int
mov
jmp
mov
dec
jg
sbb
test
std
adc
int3
push
pop
mov
es
mov
fadd
sbb
aas
dec
inc
adc
pop
or
out
or
mov
fcomip
adcb
and
jmp
orb
fdivs
je
inc
movsbw
popa
or
push
daa
and
mov
fcmovnu
fdivrp
adc
adc
and
inc
add
and
fucomi
add
jo
jnp
pop
push
pop
xor
dec
repnz
inc
clc
ret
mov
xchg
jno
push
mov
shlb
and
sub
idivb
fimuls
mov
je
jmp
lock
je
sbb
mov
sbb
out
mov
fcmove
in
push
clc
in
ficoml
icebp
mov
notb
or
pushf
je
mov
mov
test
pop
mov
ss
cmp
popf
push
push
int3
mov
cmpb
pop
push
test
and
or
sbb
popa
or
push
or
jae
insl
sar
lea
pop
div
stos
stos
sbb
std
mov
into
ret
in
or
pop
mov
push
add
loopne
pop
adc
or
push
push
adc
mov
or
cwtl
mov
movsb
or
fs
cmp
mov
fsubrs
in
idiv
push
incl
jl
pop
jne
and
jecxz
add
fimuls
shll
push
loop
hlt
sbbb
sub
jge
pop
ret
sbb
mov
dec
push
fldenv
incl
jbe
pop
addr16
stos
test
and
ret
bound
sub
adc
jmp
and
pusha
mov
mov
mov
fadds
lret
icebp
xchg
lea
movsl
pop
fmuls
jne
adc
adc
mov
mov
std
pop
ss
fs
cmp
rcr
mov
cmp
add
in
adc
lea
adc
sbb
or
add
lods
lret
bound
push
jae
add
sbb
pop
dec
add
mov
pusha
mov
sbb
cmp
cld
and
mov
lret
enter
add
das
and
lea
cmp
sbb
xor
aaa
xor
mov
ret
mov
mov
add
imul
es
push
xor
mov
inc
pop
inc
lcall
xchg
and
ret
or
pop
jne
mov
je
push
dec
sub
add
inc
add
jne
jle
pop
or
cmpsb
in
pop
in
jne
cmp
add
orl
and
push
sarl
test
js
push
lcall
shll
sbb
adc
push
mov
shrl
jecxz
push
xchg
adc
or
lods
pop
add
or
pop
jge
pushf
or
push
mov
add
pop
pop
in
lea
sbb
and
int3
adc
add
inc
mov
add
mov
cld
push
test
cld
negb
sub
jle
push
add
push
into
xor
fucomi
adc
or
xor
ds
mov
iret
sbb
push
inc
mov
xchg
rorl
movb
rsqrtps
jg
jl
add
xchg
jo
iret
push
in
ss
dec
in
lock
mov
mov
ret
rcrb
imul
nop
add
xor
in
rorb
xchg
out
adc
mov
or
stos
jb
mov
adc
in
push
mov
loop
add
test
jnp
rcr
xchg
data16
push
jmp
cmp
fcomps
add
enter
and
mov
ficomps
testb
loop
mov
xor
jne
xrelease
xchg
or
pusha
xor
inc
push
jne
scas
ja
in
das
mov
test
jo
test
or
cs
neg
sbb
and
or
cmp
fnstsw
jbe
or
cmp
ja
push
add
xor
fcomps
ljmp
push
pop
roll
pop
push
push
or
leave
or
pop
dec
sbb
jl,pn
leave
push
sub
push
add
jb
incl
or
push
or
cmpl
sub
mov
mov
ja
lret
jmp
jno
inc
das
or
adc
mov
jne
pcmpeqb
add
arpl
int
inc
les
or
push
insl
cmp
data16
arpl
sbb
or
les
push
fmuls
adc
loopne
movb
aas
and
test
imul
pop
pop
pop
push
dec
lods
and
mov
fsub
adc
cmp
xor
call
enter
sbb
iret
mov
jl
test
jge
sbb
lahf
lock
dec
xlat
jns
xchg
add
in
sar
lock
push
xchg
and
or
rcll
ljmp
pop
les
hlt
sbb
scas
push
xchg
addr16
push
push
sub
js
insb
imul
or
mov
scas
mov
test
xor
push
pop
jl
push
or
mov
jo
hlt
out
jge
jge
hlt
mov
mov
test
testl
cmp
sbb
ljmp
sti
insl
or
in
push
mov
push
mov
cwtl
adc
les
les
xchg
test
adc
mov
movsl
xor
add
ja
push
push
lods
rcll
push
rcrb
push
movsl
ss
outsb
sbb
dec
outsb
incb
jno
add
ret
inc
xchg
pushl
mov
add
rolb
xorl
jl
aas
fadds
jl
add
or
mov
add
or
aas
pop
or
push
jne
cmp
sbb
sub
clc
orl
cmp
jl
fisubl
ss
rcll
jnp
and
pop
das
ds
and
jecxz
push
push
dec
aam
push
addb
aad
mov
clc
or
popa
push
test
or
mov
test
fnstcw
sbb
test
jbe
outsl
mov
je
lret
mov
dec
and
in
xchg
daa
and
xor
xor
enter
jne
mulb
fadds
xor
add
sbb
mov
scas
sbb
push
adc
rorl
inc
inc
jne
js
arpl
mov
cmp
mov
fisubs
loopne
psrlq
clc
xor
cmp
clc
mov
loope
mov
test
pop
std
mov
stos
push
pop
out
sti
adc
cmp
inc
nop
or
and
aam
pusha
aam
xor
jae
cwtl
ficoml
loopne
sbb
adc
adc
aad
jl
adc
sbb
push
daa
or
ljmp
add
in
pop
es
inc
adc
es
or
or
jbe
ds
xchg
pop
push
pop
push
dec
outsb
lcall
pop
repnz
xor
clc
xor
outsb
insl
gs
std
aad
jne
sub
dec
adc
add
sbb
test
push
shrb
mov
pop
lahf
stos
or
sub
pop
and
sub
cmp
and
std
jmp
ljmp
fcmovne
imul
pop
or
push
jne
and
pop
int
xchg
push
and
cs
pop
cmpsw
push
push
jnp
scas
or
mov
das
sbb
add
and
cmpsb
adc
movsb
jbe
orl
lock
pop
fsubrs
int3
in
or
xchg
inc
clc
testl
sti
cmp
jno
inc
push
popf
cmp
push
hlt
flds
sahf
popf
in
cmp
test
mov
in
adc
jne
ds
adcb
sub
adc
jb
xchg
shr
lea
dec
je
sub
in
adc
push
enter
jne,pn
or
fwait
add
jns
popf
jle,pn
jbe
and
divb
jne
adc
cli
jmp
cmpsb
jecxz
push
cmp
lods
imul
adc
push
inc
push
sbb
test
test
lea
add
push
sub
dec
test
es
dec
mov
push
xchg
jmp
jge
je
sub
aas
sbb
push
sahf
sbb
push
cmp
iret
mov
outsb
dec
movsl
mov
shlb
mov
movsb
les
lock
pop
cmp
dec
mov
jae
insb
out
rorl
adc
sub
adc
js
adc
sti
or
xchg
jmp
sub
mov
rorb
lds
int3
lds
imul
ret
add
ss
pop
push
insb
push
xchg
jp
jne
adc
mov
xor
mov
fneni(8087
test
adc
adc
or
jne
sbb
jae
fwait
inc
loop
xor
enter
inc
and
sarb
mov
and
xor
es
inc
push
sbb
jae
je
ss
jp
adcb
pop
xchg
mov
sub
fistl
push
mov
xor
and
cmp
inc
jo
dec
je
jno
testb
mov
jmp
mov
inc
out
push
mov
and
stos
add
mov
test
cs
adc
ljmp
xchg
scas
or
adc
push
int3
or
repnz
jmp
sub
fdivr
pop
mov
sub
aas
fmull
aam
pop
fsubrs
jo
aas
sub
sbb
sub
fmuls
int
adc
push
fsubrs
or
fwait
jnp
cmp
or
or
or
jp
push
sub
cltd
sub
sar
add
xchg
pop
jns
leave
lods
std
sbb
orl
add
sbb
outsb
pop
sub
and
test
cmpsb
rclb
xor
cmp
rorl
jno
arpl
push
hlt
int3
xchg
mov
in
xor
fld
incb
ja
mov
aas
cmp
je
and
xlat
cwtl
mov
push
add
cmp
lock
mov
and
push
rep
dec
int3
ret
lret
enter
inc
daa
js
or
je
fs
xchg
fisubrs
inc
xchg
xchg
subl
dec
jl
mov
sbb
xchg
movsl
cmpb
sti
cmp
pop
je
or
je
push
movb
push
movb
sub
pop
inc
andl
test
mov
sarb
lret
pop
repz
fisubrl
xchg
push
jns
cmpb
sti
in
aaa
adc
jmp
cmp
cmp
shll
add
fcmovu
dec
or
jmp
xor
pop
add
gs
cmp
decl
dec
mov
mov
ljmp
push
jl
pop
pop
pop
dec
lea
shl
mov
or
inc
dec
jne
mov
out
jle
mov
cmp
jae
add
mov
imul
idivl
mov
jnp
push
nop
sub
add
rol
push
push
push
and
lea
aam
andb
xchg
mov
add
aas
loopne
xor
push
mov
into
sbb
cmpl
dec
das
jbe
fsubrl
pushl
jns
adc
jmp
out
cmpl
testb
mov
mov
dec
pop
aaa
and
pop
imul
push
and
add
xor
xchg
movsl
and
fcoms
loopne
add
mov
xchg
jb
or
out
inc
cmp
mov
rorb
xchg
add
fwait
int3
jmp
pushl
sbb
and
aas
int
jns
mov
cmpl
xor
mov
mov
rcl
xchg
or
add
in
sbb
or
xchg
mov
xor
or
push
pop
jmp
mov
mov
push
jecxz
fstps
mov
dec
call
or
es
fmuls
sar
call
in
pushf
insb
adc
add
nop
ljmp
pop
xchg
inc
test
lock
cmp
dec
daa
fwait
and
scas
sti
sbb
test
xchg
mov
or
loopne
pop
mov
loopne
shrl
jbe
cmp
sub
ret
or
ret
int3
mov
jmp
inc
push
mov
pop
or
insl
push
test
mov
icebp
xor
mov
stos
add
mov
rorl
push
dec
cmp
push
pop
jb
add
ret
and
inc
aad
push
fsubp
test
xchg
js
pop
in
or
out
pushl
out
pop
mov
pop
aad
addr16
cmp
mov
cmpb
je
or
cmpl
inc
pop
inc
jne
adc
sbbw
xchg
and
jnp
adc
and
push
test
bound
mov
enter
dec
adc
in
daa
adc
adc
xchg
pop
adc
inc
jl
sub
sbb
add
subl
mov
shll
stos
inc
push
cmpsl
xor
cmp
and
push
pop
dec
inc
addr16
stos
jge
xchg
push
cmp
jmp
push
xlat
sahf
stos
mov
jae
pop
mov
loop
xor
adc
push
push
das
sbb
mov
adc
hlt
pop
test
inc
pop
lahf
aam
cmp
or
or
or
std
sbb
add
or
inc
mov
test
loopne
sbb
cmpb
cmpl
push
out
jmp
mov
lret
outsl
pop
cmp
add
je
or
or
jg
das
or
add
faddl
xor
fsubrl
lret
mov
aam
ret
sub
pushf
jno
hlt
xorb
adc
pop
push
xor
mov
pop
ljmp
in
sbb
jmp
inc
push
sbb
xor
xor
mov
imull
lea
dec
shll
pop
je
jmp
lcall
pop
and
inc
add
mov
xlat
into
mov
aas
jmp
ret
lret
pop
pop
add
movb
and
inc
jmp
sbb
mov
cmp
inc
sub
or
ret
pop
push
aam
mov
rolb
cmp
lds
and
mov
mov
push
add
les
jg
stos
cmpb
mov
or
mov
mov
fnsave
call
add
and
jnp
jnp
add
pop
inc
add
pop
sub
sbb
dec
ja
lock
push
test
fstpt
or
mov
rcrl
aas
cmp
fcmovu
fdivl
sub
xchg
test
and
mov
dec
xchg
pop
ficomps
inc
jp
add
je
add
inc
jnp
ja
adc
js
mov
andl
or
jmp
addr16
sub
adc
jmp
or
jmp
in
insb
test
sub
xchg
push
popf
mov
daa
cltd
cmp
add
cvtpi2ps
push
lods
sub
mov
daa
dec
daa
dec
sahf
rorl
roll
dec
sbb
cmp
daa
stos
push
cmp
sbb
adc
and
inc
in
mov
insl
or
xlat
sub
mov
push
das
adc
push
jl
push
adc
je
dec
xchg
xchg
add
fucomip
fstps
push
pop
loope
addr16
jp
and
xchg
mov
dec
lock
rclb
sti
es
mov
and
xor
inc
notl
jecxz
in
push
mov
popa
add
mov
movsb
or
adc
ficomps
jo,pt
xchg
cwtl
sbb
fildl
test
test
mov
dec
mov
shlb
push
dec
mulb
push
das
orl
inc
cmp
pusha
mov
gs
lods
int
xor
js
fbstp
mov
orl
push
in
adc
add
addr16
xorb
bound
or
xchg
les
mov
add
cwtl
or
movsl
in
pop
fsubrs
or
sub
or
call
sub
shl
jge
call
xchg
jne
mov
jmp
push
pop
js
lret
mov
mov
divl
fistl
push
push
dec
aam
add
jle
push
cltd
cmp
sub
sub
aam
fdivs
xchg
cwtl
xor
popf
incl
sbb
cmp
jno
jb
imul
push
xchg
xchg
ds
iret
xchg
mov
jmp
andl
inc
pop
push
in
add
or
scas
std
lcall
mov
ficompl
rorb
scas
and
add
add
aaa
fildl
cmp
ficoms
adc
scas
xchg
pop
adc
add
or
ds
int3
pop
adc
add
add
nop
bound
add
mov
les
or
lods
or
lods
jmp
adc
push
add
cmp
in
cmp
out
jae
dec
inc
push
mov
mov
sub
push
push
cmp
mov
or
test
ret
dec
leave
push
adc
pop
adc
sbb
les
imul
test
mov
arpl
xlat
or
pop
xchg
sub
fnsave
scas
movsb
and
push
push
ljmp
or
xlat
sub
add
pop
inc
lods
mov
mov
xor
in
iret
aad
pushf
mov
cmp
sarl
xchg
inc
adc
dec
out
sub
jecxz
in
sbb
test
pop
add
xor
imul
push
fidivrs
mov
test
mov
pushf
insl
mov
adc
jo
xor
stos
add
cmpl
or
push
mov
imul
fldpi
inc
shlb
fs
push
mov
dec
and
push
iret
add
test
sbb
lret
ret
sbb
pop
add
push
fwait
loop
adc
pop
mov
sub
mov
mov
mov
sub
movsb
mov
adc
mov
cmp
dec
or
cmc
int
and
adc
cmp
test
sbb
mov
mov
les
data16
enter
andl
mov
or
pop
or
pusha
push
outsb
add
jge
add
fs
mov
insb
and
jmp
lods
jle
jb
fistpl
push
inc
mov
jne
push
and
xor
inc
or
das
adc
mov
pop
fdivs
xor
adc
push
mov
inc
push
or
add
addb
and
jmp
or
cmp
xchg
sbb
xchg
popl
aad
xchg
xlat
fwait
or
and
hlt
shll
xchg
loopne
sub
xlat
inc
add
adc
sub
mov
ret
sbb
shlb
or
adc
ljmp
add
xor
test
jbe
push
ret
stc
or
bound
inc
test
pop
add
mov
fwait
loopne
rorl
jmp
and
add
lcall
adc
mov
mov
inc
out
sub
lret
scas
mov
jbe
fwait
xadd
addr16
inc
push
outsb
popa
and
aam
xchg
mov
or
add
sbb
jl
sub
adc
into
icebp
ret
push
mov
testb
jne
add
mov
mov
add
int3
mov
leave
pop
outsb
mov
les
xchg
inc
sub
mov
push
cmp
aam
jne
jg
xchg
sub
mov
adc
and
push
pop
enter
xchg
into
fdiv
stos
xchg
fnstcw
push
xor
add
jb
in
loopne
data16
inc
mov
jne
rcrb
jb
inc
in
test
and
test
xor
filds
add
push
fsubrl
cmp
pop
aaa
adc
xor
fistpll
add
in
push
and
pop
sbb
comiss
pop
jl
jnp
pop
add
pop
mov
push
push
inc
icebp
push
js
nop
aaa
and
sbb
std
mov
xor
loopne
or
xor
mov
std
data16
aam
add
cwtl
les
push
mov
sub
xchg
movb
mov
sub
pop
inc
push
push
mov
dec
xor
stc
filds
cmpsb
mov
arpl
data16
jmp
outsb
into
or
lods
push
cmp
sub
jne
shll
jnp
push
or
xchg
adc
cli
xor
test
or
outsb
sub
aas
mov
arpl
xchg
push
mov
or
mov
ret
sbb
repnz
lret
jne
sub
mov
pop
int3
dec
fstl
cmc
jg
in
push
fcomps
mov
push
leave
and
xor
pop
xchg
cmpb
insb
scas
jmp
lcall
js
xorb
pop
nop
imul
cmp
add
dec
add
pushf
and
scas
jl
addr16
outsb
and
adc
and
mov
inc
fwait
aas
call
sbb
pop
pop
push
mov
arpl
pop
and
push
adc
cmp
xor
add
test
clc
cmp
mov
inc
sti
popf
jb
pop
push
and
adc
add
insb
fcomps
or
jne
test
and
stc
mull
adc
jmp
jbe
xor
push
daa
adc
loop
mov
fisttps
loope
xor
add
test
sti
add
test
xor
jmp
mov
mov
cmc
add
roll
lret
lcall
push
mov
test
and
and
cld
cmovnp
iret
xchg
jl
and
push
hlt
push
push
dec
rolb
sbb
mov
sbb
loop
lea
fidivrl
into
and
lds
lea
sub
push
inc
push
mov
add
xchg
push
add
inc
and
push
mov
arpl
mov
fistps
test
aam
daa
sbb
push
bound
adc
and
xchg
dec
dec
sub
sti
pop
sbb
stos
leave
inc
and
mov
mov
scas
mov
pusha
mov
dec
addr16
popa
jp
in
and
adc
mov
cmp
daa
push
push
sarb
cmpsb
call
je
mov
cmc
cmp
mov
ror
mov
pop
cmp
mov
fstp
add
adc
outsl
mov
jne
int
xchg
jae
mov
sub
jmp
cli
add
jge
data16
daa
jmp
lds
cmp
lea
and
xchg
jbe
add
push
insb
push
mov
dec
pop
cmp
stos
insl
insl
xlat
sub
add
fildl
jo
lea
add
add
fisubrl
pushl
pushl
shll
mov
mov
lea
mov
mov
add
mov
jmp
add
ret
neg
add
daa
pop
rcrb
mov
rcl
push
cmp
jb
cwtl
or
sbb
pusha
mov
dec
cmp
push
or
bound
jl
dec
xchg
es
xor
jbe
mov
in
adc
outsb
test
xchg
sarl
sahf
sbb
mov
push
imul
add
lea
jle
cmp
lea
cli
mov
add
mov
popa
aam
add
jl
inc
xchg
cmp
aad
mov
dec
adc
dec
fistl
push
cmp
ds
popa
add
int
or
cmc
adc
mov
pop
in
fldl
push
push
repnz
mov
push
add
out
cwtl
adc
mov
xor
mov
mov
jecxz
adc
xchg
in
xlat
hlt
lret
add
cltd
dec
mov
cmp
jge
rorb
fldcw
inc
cmpsb
and
jl
dec
pusha
mull
sbb
je
cmp
xchg
shlb
insb
cmp
adc
adc
inc
mov
cmp
mov
incb
inc
lret
sbb
or
sbb
test
cs
jo
movsb
clc
std
mov
scas
fchs
push
repz
imul
add
push
and
adc
lods
sub
xor
xor
adc
mov
fdivs
adc
mov
mov
sbb
xor
rorb
sbb
mov
cmp
je
sbb
push
call
cmp
dec
xlat
cmp
push
cmp
inc
add
in
nop
push
cld
push
push
fimull
and
mov
inc
adc
pop
cmc
mov
rolb
push
xchg
ret
pop
sbb
movsb
inc
jne
push
jmp
adc
pusha
adc
jmp
clc
and
add
jl
cmp
add
push
dec
mov
dec
enter
popl
fs
lods
call
jge
testl
jl
insb
mov
sbb
pop
mov
mov
mov
mov
lock
les
sbb
jne
adc
cmp
inc
xor
cmp
mov
fs
ja
fistps
push
or
add
mov
mov
adc
cltd
mov
int3
push
mov
mov
add
daa
loopne
sub
sti
jecxz
clc
jnp
insb
fldt
hlt
jl
xchg
aam
adcb
push
lock
add
cli
xchg
cli
cmp
setne
jnp
mov
daa
push
rcll
es
enter
ret
push
mov
mov
inc
hlt
je
cmpl
movl
push
icebp
add
push
or
fmuls
pop
rorl
adc
fcoml
das
add
sub
sbb
lret
and
fs
sbb
xor
or
lock
sub
or
add
pop
and
dec
insb
fwait
imul
or
outsl
or
je
fidivl
add
inc
addb
int
jle
push
stc
mov
cmp
push
push
sbb
ljmp
or
and
addl
sbb
cmp
sub
mov
gs
jle
int
pop
mov
mov
adc
stos
sbb
dec
add
xor
add
fwait
in
xchg
add
hlt
jge
push
push
scas
popf
lods
jbe
mov
fists
push
pop
scas
mov
push
je
inc
mov
ds
fwait
subb
push
adc
dec
adc
mov
mov
js
test
ss
or
push
inc
cs
add
mov
shr
mov
sbb
je
push
pop
jb
adc
mov
cs
mov
add
rcl
bound
je
push
sbb
adc
out
gs
xor
fcomi
popf
jb
nop
or
cmp
mov
lds
inc
sub
imul
xchg
lret
bound
jb
and
mov
roll
sbb
adc
pop
aam
mov
fsubrs
adc
or
mov
adc
push
repz
sbb
or
adc
xchg
jmp
gs
ljmp
adc
xchg
pop
lahf
jl
push
mov
sub
sub
cmp
mov
adc
in
or
sub
dec
inc
mov
and
push
inc
cwtl
dec
and
in
mov
adc
mov
ja
jbe
stos
push
mov
sbb
mov
pop
pop
mov
add
sbb
mov
repnz
lds
mov
inc
sub
aam
mov
add
pushf
in
inc
adc
loope
push
int
out
popa
inc
aaa
flds
repnz
test
stos
cli
push
dec
loopne
pop
inc
pop
push
add
inc
jb
clc
add
jne
adc
push
lods
pop
pop
pop
icebp
and
cmp
push
repnz
roll
add
popf
or
mov
mov
in
in
jo
add
daa
int
ja
mov
mov
fsub
jae
and
lcall
push
rcrl
mov
insl
and
shr
push
adc
xor
les
mov
mov
sbb
dec
push
mov
mov
rcrl
lods
cld
cmp
je
cmp
add
dec
fldt
cmp
push
push
push
pop
mov
cmpsb
push
inc
and
jl
cmp
adc
push
and
inc
jnp
fldenv
std
add
call
adc
dec
mov
dec
adc
mov
xlat
mov
inc
mov
inc
pushf
pop
pop
call
sbb
inc
fbld
inc
push
push
jg
mov
std
or
movsb
outsl
repz
data16
jmp
adc
jo
sub
shll
pop
inc
stos
mov
jge
cmp
push
sub
xor
mov
cmp
or
in
sbb
add
arpl
repnz
lret
pop
mov
push
inc
cmpsb
icebp
pop
jp
mov
cmp
push
jb
inc
je
mov
js
stos
inc
mov
jbe
sbb
jmp
ds
inc
inc
mov
testl
push
or
sbb
stos
adc
mov
das
jb
iret
movb
imul
js
orl
xor
sub
adc
cmp
push
inc
cmp
jge
xchg
mov
adc
enter
cmpsl
fiaddl
gs
jp
push
sub
cmp
dec
xor
push
mov
cmp
in
mov
das
bound
cltd
cmp
adc
int
jg
and
aad
notl
cmp
shlb
int3
xchg
mov
mov
or
sbb
add
arpl
xchg
stos
imul
icebp
push
int
adc
inc
or
stos
pop
add
cmp
mov
adc
xchg
and
mov
and
push
xchg
xor
sbb
jmp
or
popf
es
jo
cmp
insl
xor
rcl
mov
jle
pop
dec
fstpt
ds
in
test
sbb
add
add
inc
mov
dec
sub
push
push
or
in
andl
aam
mov
enter
test
popf
or
faddl
cmp
mov
fsubl
jbe
ret
xor
cmp
mov
lret
and
sub
leave
sbb
cmp
js
jne
or
aas
stos
test
jno
data16
xor
mov
jo
push
addb
mov
test
in
arpl
add
push
adc
test
lahf
sub
jne
jbe
xorb
mov
mov
out
enter
add
mov
jecxz
js
push
test
in
sbb
jo
mov
addb
imul
push
xor
sbb
adc
imul
xchg
dec
mov
loopne
sub
add
inc
push
push
add
test
dec
fadd
add
movsl
pop
cmpsb
cmp
dec
push
xchg
testl
dec
fsubrl
adc
xor
add
mov
sahf
insl
adc
in
pop
icebp
and
int
adc
es
jbe
push
int
push
pop
mov
mov
cs
jne
enter
fs
stos
mov
pop
lock
nop
pop
out
push
jns
repnz
mov
cmp
ss
mov
fsubrl
rclb
fs
jb
and
jl
mov
push
cmp
pop
stos
mov
rorl
add
enter
adc
fwait
inc
sarl
leave
jns
rcll
fsubrs
call
cs
sbb
push
shl
fs
sbb
hlt
cmp
or
adc
and
add
addb
sub
jb
lock
add
or
mov
sbb
push
cmp
sbb
pop
push
ret
lods
inc
ss
push
les
push
sbb
push
jno
ficoml
jmp
inc
mov
xchg
jnp
dec
xchg
jge
push
sahf
push
out
push
inc
and
pop
sub
push
xor
sbbb
pusha
scas
mov
das
inc
dec
sbb
pop
push
cmp
lahf
or
pop
outsb
negl
roll
dec
and
sarb
jbe
inc
andb
xchg
dec
jb
cmpsb
push
shrl
pop
mov
cwtl
out
push
arpl
stos
aam
dec
dec
mov
sub
push
push
push
or
and
push
adc
pop
jp
clc
pop
shlb
cmpsl
push
sbb
imul
sti
fistl
xorl
push
push
jnp,pt
bound
mov
je
or
pop
lods
loop
xchg
rcrb
imul
in
jae
push
pop
dec
in
adc
divps
ss
shlb
add
stos
aad
pop
popa
adc
inc
int
pop
add
pmaddwd
mov
sti
shrl
fisttps
into
adc
ja
inc
int3
jge
ss
pop
sbb
addr16
mov
movsl
shl
xchg
push
out
mov
push
push
lods
push
push
and
xchg
ret
inc
sub
pop
jnp
stos
xor
sbb
or
adc
call
or
les
pop
adc
adc
les
xor
cmp
adc
fs
hlt
push
aas
dec
and
test
insl
je
je
adc
mov
pusha
ss
stos
xchg
imulb
dec
aaa
scas
jns
xchg
movsl
pop
fs
das
cld
enter
icebp
mov
push
mov
ret
push
inc
test
jle
inc
mov
ss
pop
jnp
cmp
mov
test
sub
test
add
test
ds
mov
or
add
push
and
negb
cmp
mov
push
cwtl
adc
mov
dec
leave
add
nop
pop
inc
push
pop
jmp
pop
mov
sub
repnz
cmc
cmpb
adc
adc
jle
inc
or
jg
jmp
dec
rcrl
jg
and
mov
pop
pop
rolb
cmpl
fucomip
inc
in
and
pop
push
cmp
adc
cmp
jbe
add
ret
aaa
data16
in
addr16
test
inc
dec
iret
out
outsb
iret
dec
push
push
sahf
jo
enter
cld
xor
cmp
push
fs
lock
inc
hlt
xor
push
fmull
movb
adc
mov
push
not
mov
aam
ja
or
cmp
push
lea
xor
test
fdivr
outsb
aam
xchg
sar
inc
pushf
iret
popf
int3
mov
or
xchg
lock
push
in
rolb
movsl
mov
lret
mov
xchg
sub
fildl
pop
lea
in
lea
jge
inc
cld
or
push
aam
imul
inc
sar
xor
or
shlb
adc
lea
inc
sbb
into
idivb
inc
and
jl
pop
popf
pusha
dec
js
add
push
je
test
popa
movsb
jnp
cmp
jne
adc
jle
cmp
pop
int
pop
pop
rorb
adc
or
subl
cmp
push
pop
fcomps
mov
testl
jl
xor
ret
push
push
int
aas
pop
fldl
ja,pn
push
jne
shrl
and
push
adc
pop
jbe
sbb
mov
lods
ret
outsl
idivb
dec
ss
or
pop
cmpsb
jmp
scas
outsb
insl
inc
hlt
cmp
adc
mov
cli
add
pop
push
pop
cmp
sub
add
aam
loop,pn
je
push
sub
mov
pop
sub
dec
aaa
adc
or
call
jno
mov
aaa
sbb
and
push
mulb
mov
mov
pushl
or
leave
jmp
or
jl
add
cmc
mov
sub
cmp
jl
add
jg
shl
push
add
push
sub
push
xor
xor
leave
cmp
fistpll
sbb
push
or
push
fbstp
repnz
push
mov
jo
add
adc
fs
flds
or
jle
pop
sub
sar
hlt
push
push
fimull
pop
sub
mov
xchg
fwait
nop
call
leave
jge
fsubs
les
fs
mov
mov
bound
fdivs
and
mov
mov
lret
jmp
xchg
push
adc
xor
ja
cmpsb
pop
inc
jge
sub
push
cmp
sti
and
mov
and
mov
or
mov
mov
sbb
xchg
leave
and
inc
sub
push
lock
adc
add
popf
in
jae
and
or
in
inc
or
xchg
aas
pop
arpl
aaa
sbb
pop
jne
pop
in
rclb
jmp
lods
je
inc
lods
scas
pop
push
or
or
lock
mov
or
or
sbb
push
sub
push
sbb
push
pusha
or
stos
inc
cmp
loope
sbb
adc
loop
imul
adc
sub
jne
push
and
xor
add
hlt
lock
shll
and
push
jne
sbb
dec
push
mov
insl
add
pop
leave
js
mov
add
roll
mov
sub
insb
fisubl
ja
orl
push
add
sub
mov
adc
mov
lret
sbb
sbb
sbb
sti
mov
and
sub
mov
mov
fld
subb
cli
xadd
inc
aad
movsb
pop
dec
and
loope
jle
push
cmp
push
adc
decl
pop
cmpl
pop
or
add
adc
add
ss
jbe
in
or
in
push
jl
data16
pop
clc
push
loopne
jl
cld
pop
decb
cmp
mov
ljmp
pop
and
aad
call
pop
mov
fdiv
and
mov
cmp
or
inc
dec
mov
pop
mov
pusha
adc
push
popa
push
or
mov
mov
leave
and
mov
cmp
je
mov
mov
inc
add
dec
mov
xchg
daa
inc
pop
inc
jo
mov
ja
push
movzwl
push
adc
sub
lret
ss
rorl
ljmp
test
mov
jbe
push
test
sbb
adc
xchg
insl
sti
pop
dec
bound
sahf
xor
xchg
pop
cmp
scas
and
push
dec
add
cmp
inc
dec
mov
inc
mov
or
sti
cmpb
das
lahf
std
or
adc
dec
sahf
push
mov
cmp
xor
add
add
fnstenv
or
mov
mov
cmp
push
movl
cmpsl
loope
sbb
int
push
push
push
or
das
mov
jne
fstpt
inc
and
and
sbb
pop
sbb
push
push
or
not
jmp
leave
or
push
dec
inc
aas
or
or
fwait
and
testb
push
std
push
push
adc
adc
mov
imul
dec
pop
pop
icebp
decl
lods
insl
add
adc
shlb
sub
lea
push
cmc
das
and
jl
test
jne
lahf
xor
mov
inc
or
dec
int3
push
ret
xlat
js
insb
and
fdivrs
sti
fcomps
lods
std
xchg
js
ret
icebp
outsb
inc
js
xchg
pop
pop
mov
jb
int3
and
inc
or
fnsave
push
je
mov
mov
xor
shll
xorb
es
ljmp
mov
je
dec
je
add
adc
or
insl
pop
sub
aaa
mov
fimuls
outsb
movsl
jmp
or
insl
outsl
mov
je
cs
jmp
adc
add
and
int3
inc
mov
pop
sub
mov
popa
mov
mov
xor
orb
xor
mov
imul
adc
push
jmp
jmp
add
shr
inc
cmp
pop
shl
lea
ret
aad
stos
mov
push
xchg
insl
push
cli
push
xlat
xor
cld
clc
cmp
cmp
fstps
push
mov
jmp
and
cmc
out
in
inc
adc
rcrb
push
and
cmp
pop
sahf
add
mulb
sbb
or
pop
mov
and
mov
mov
and
pop
jmp
addr16
int3
add
or
fsts
mov
sbb
adc
stos
xor
jbe
ret
add
arpl
push
int3
jmp
sub
cltd
fcmovnu
inc
mov
push
or
mov
and
dec
dec
sbb
fdivl
cltd
xchg
xchg
rcll
ret
lea
mov
icebp
lret
cwtl
insb
xor
sub
sub
inc
jg
ja
xchg
jge
xchg
imul
cmpsb
insl
add
ss
imull
bound
push
push
stos
or
or
inc
push
ja
and
cmp
mov
add
fiaddl
lock
stos
mov
xchg
xchg
xchg
fstps
sbb
dec
mov
das
sub
sub
cmp
aas
ja
sbb
xor
sub
enter
jmp
add
pushl
mov
or
in
sub
adc
mov
push
push
adc
rol
add
push
adc
mov
cmp
gs
sub
pop
sbb
and
push
in
les
pop
pop
outsb
sbb
push
push
sbb
cmp
jnp
dec
push
dec
xchg
mov
fcompl
push
and
cmp
mov
push
lea
fstl
add
mov
js
lret
adc
sbb
push
mov
orl
and
addl
add
sbb
test
out
mov
pop
mov
jbe
bnd
pop
push
cltd
sub
inc
gs
lock
scas
jbe
sbb
push
inc
cmp
cs
mov
jmp
icebp
add
or
cld
and
lea
pop
lea
or
testb
in
or
or
add
jecxz
and
popa
pop
mov
push
jmp
or
je
mov
loop
fimuls
popf
and
sub
mov
sub
ficomps
adc
outsl
and
adc
dec
push
mov
pusha
add
add
mov
enter
scas
push
dec
sti
ss
push
or
or
cmp
sarb
sbb
dec
jne
test
fildl
adc
dec
add
and
or
add
push
sub
mov
bnd
jno
adc
aaa
push
mov
aaa
pop
sub
sbb
inc
mov
push
add
sub
clc
out
add
fwait
ja
mov
and
sbb
and
scas
sub
je
adc
pop
js
scas
and
add
sbb
and
fdivr
subl
add
mov
pushf
mov
or
xlat
push
imul
sub
data16
leave
call
nop
mov
jmp
inc
mov
inc
jp
xchg
les
stos
lea
mov
mov
xchg
sbb
jle
jno
or
subl
mov
orb
stos
push
mov
pop
aad
sub
pop
mov
sbb
and
fmull
inc
or
jne
mov
push
jp
adc
lods
push
loop
adc
jae
cmp
orl
loope
rcrl
arpl
xor
and
or
arpl
push
or
inc
lock
je
jle
outsl
jge
mov
fistl
mov
outsb
or
scas
fsubrs
test
adc
sbb
push
mov
mov
cmpw
xchg
mov
push
jmp
push
add
xor
or
pop
jo
adc
pop
je
pop
dec
cmpl
and
lods
es
sbb
cmpb
in
cmpsb
ds
popa
mov
xor
inc
lock
sub
clc
adc
pop
insl
mov
orl
jmp
and
enter
sub
gs
dec
cmp
addr16
cmpsl
sub
jecxz
out
ret
push
xor
push
pop
out
ret
fists
cmpsl
rcrb
pop
xor
mov
mov
clc
lds
mov
imul
loopne
xchg
inc
dec
add
fdivs
je
outsb
outsl
pop
push
sbb
ret
sub
jbe
inc
inc
mov
or
xchg
movsl
inc
mov
clc
aam
add
sub
lods
push
jne
pop
and
jmp
sbb
sub
popl
js
orl
xor
in
mov
mov
xorb
stos
popa
hlt
adc
loopne
sbbb
andl
dec
pop
or
adc
mov
aaa
call
mov
sbb
dec
into
push
lcall
imul
add
push
mov
lock
and
imul
push
sbb
insl
fstps
and
add
xchg
lds
push
push
mov
add
jo
fadd
nop
inc
pushf
push
sub
dec
insb
or
pushf
push
xor
inc
lahf
pop
cs
inc
and
xchg
and
or
je
mov
or
adcl
dec
inc
xchg
sbb
sbb
adc
jl
pop
cld
mov
dec
cmp
sahf
push
jne
xchg
loopne
or
push
pop
xchg
mov
fidivs
cmp
push
push
cmp
jb
adc
and
pushl
daa
dec
pop
rolb
cmpl
filds
lea
cmp
dec
pop
or
je
push
and
sbb
dec
pmulhw
lret
jmp
sbb
jb
pop
ja
mov
mov
nop
mov
mov
adc
xor
mov
shr
sub
clc
jle
mov
adc
inc
or
shl
jmp
fwait
ret
or
xor
dec
les
out
imulb
adc
or
sbb
shl
sbb
mov
or
sub
or
xor
ret
push
mov
sbb
sub
and
arpl
in
push
js
sub
test
and
pop
push
lret
aaa
add
adc
imul
inc
insb
aaa
and
xlat
enter
or
roll
gs
mov
or
adc
and
testb
int3
jle
mov
lods
mov
ficoml
movlps
dec
sarl
jecxz
push
dec
inc
dec
inc
pushl
insl
push
mov
sbb
rcrl
push
or
xor
movsl
test
cmp
adcl
jle
pop
outsb
loop
sti
int
imul
inc
and
add
and
loop
or
sub
jo
pop
xor
daa
mov
mov
in
nop
movsb
cmpl
xor
fadd
fisubrl
jge
gs
daa
jmp
pushl
pop
andl
xor
jno
mov
pop
adc
jo
inc
mov
jo
add
int3
jnp,pn
test
cmp
mov
icebp
aad
sub
push
add
or
cltd
lods
lret
sub
or
je
js
adc
or
sub
loope
pop
dec
jge
popa
ret
sbb
popa
and
add
sbb
jb
or
aaa
sbb
or
sbb
sbb
mov
sub
and
and
adc
clc
or
dec
incl
xchg
mov
outsl
hlt
push
loopne
and
dec
ret
mov
sbb
jle
jbe
pop
inc
add
mov
mov
adc
sti
jg
mov
inc
cmp
mov
jb
add
rclb
xchg
lods
pop
pop
xchg
xchg
es
js
je
jmp
sub
leave
push
push
push
sub
shlb
jne,pt
mov
sbbb
lds
mov
mov
jp
mov
jns
ss
in
mov
stos
subl
mov
sub
mov
sub
push
pop
adc
jbe
mov
sahf
add
xor
xor
mov
nop
rolb
mov
fmuls
jl
les
inc
enter
mov
or
scas
std
call
jg
add
iret
add
mov
jo
lea
movsl
movsw
push
lock
mov
call
sub
pop
jg
fsubs
jo
mov
cli
or
jae
mov
mov
and
sub
mov
fdivr
filds
inc
fdiv
fstpt
fbstp
add
mov
js
sti
cmp
add
or
mov
lods
mov
add
lods
adcb
mov
je
sub
loope
cmpl
add
bndldx
cmp
inc
orb
test
pop
mov
mov
or
imul
dec
movsl
lods
data16
pusha
mov
lret
rcrl
rclb
adc
mov
cmp
lock
inc
rclb
jge
mov
push
adc
repnz
or
insl
or
mul
popa
cmp
add
add
rcl
sub
mov
xor
gs
xchg
add
clc
adc
push
jbe
push
pop
inc
ss
je
xchg
sbb
sbb
enter
mov
push
cmp
mov
mov
out
jle
mov
movsb
push
mov
jle
out
movl
pop
sbb
mov
add
mov
push
mov
out
xchg
test
jp
add
jl
jmp
add
mov
mov
cmp
jo
out
lods
mov
cld
cmp
fidivrs
pop
dec
test
orb
pop
or
and
je
jne
inc
mov
mov
cmp
push
adc
xchg
jno
movsl
test
shlb
loope
lods
mov
out
jo
cmp
mov
push
mov
add
mov
mov
jge
sub
loop
or
add
mov
xor
mov
movsb
fucomip
xchg
inc
out
sub
mov
pop
adc
loop
int3
mov
mov
jb
mov
cmpb
mov
pop
mov
mov
add
mov
add
neg
mov
mov
or
dec
mov
push
mov
inc
daa
inc
cmp
aaa
or
push
dec
pop
cld
cmp
xchg
jmp
and
movq
shr
test
mov
sub
cmp
and
mov
or
xor
sarb
xchg
es
add
idiv
lock
mov
mov
mov
inc
inc
and
add
subl
cmpb
sub
inc
ljmp
insb
std
mov
rorb
inc
in
mov
mov
or
cmpsb
addl
pop
dec
jmp
fsubrl
js
dec
decb
mov
and
inc
mov
add
or
sbb
or
push
add
loopne
pop
add
incb
mov
inc
add
dec
jne
inc
mov
rcrb
loope
mov
cmpb
xor
hlt
or
std
fbstp
icebp
cmp
push
mov
jne
jge
xor
xor
popf
push
inc
cmp
jns
pop
movswl
jmp
mov
pusha
mov
test
mov
cs
testl
incl
sub
ds
jecxz
insl
sbb
addr16
inc
rcr
xchg
ficoms
mov
lock
jg
mov
jg
mov
push
shll
sub
test
cltd
inc
rorb
hlt
sub
add
adc
testb
push
mov
or
test
inc
clc
mov
add
sub
sub
jns
ret
sbb
xor
xor
std
aaa
mov
or
add
and
cmp
insl
mov
jmp
mov
insb
cwtl
or
jge
lret
out
imul
mov
mov
lea
adc
fnsave
decl
jle
jb
jl
inc
pop
add
mov
inc
and
or
pop
dec
inc
rcr
mov
sti
add
or
jle
dec
das
ss
mov
mov
sub
mov
mov
subl
scas
adc
lcall
mov
add
xchg
push
js
pusha
push
inc
inc
sub
fdivs
xchg
push
fimull
add
mov
pusha
fldcw
inc
adc
or
imul
adcb
or
mov
aaa
icebp
xchg
jl
and
mov
jmp
scas
xor
pop
cld
rol
inc
pop
mov
xor
dec
test
or
sahf
or
call
mov
lds
rorl
mov
jbe
mov
hlt
add
push
rclb
pop
test
dec
test
pop
scas
cmp
mov
lcall
das
mov
sbb
bound
hlt
sbb
push
je
enter
psubsw
push
cmp
test
dec
lods
xchg
adc
and
aam
adc
push
into
mov
xor
sbb
aas
adc
jecxz
xorl
adc
xor
scas
rorl
cmp
inc
jnp
xchg
and
pop
mov
enter
ret
jg
xchg
imul
leave
leave
or
adc
cld
sub
mov
int3
subl
or
or
clc
mov
mov
push
adc
jl
xlat
and
ret
cld
or
shlb
dec
in
movsb
das
in
cld
and
jmp
and
mov
test
loop
push
je
add
in
call
mov
stc
xchg
stc
js
dec
lods
rcrb
bound
adcb
cs
mov
sub
sti
mov
push
arpl
repz
popf
pop
testb
sbb
xchg
fadd
ficomps
nop
in
inc
call
shlb
and
dec
mov
fwait
inc
lea
inc
and
cmp
int
push
lcall
ja
mov
cmp
xchg
or
fcomps
xlat
mov
mov
cmp
adc
push
or
xor
fisubrl
push
sub
pop
adc
call
jbe
sub
add
out
push
push
sub
jg
sbb
add
jns
xor
jnp
sub
es
pop
lcall
add
leave
mov
sub
rorl
pop
cmp
fs
add
pop
pop
pop
xchg
or
add
shlb
jg
pop
or
jmp
jg
stc
imul
andb
cmp
or
mov
adcl
icebp
out
pop
mov
in
or
ss
addr16
jmp
pop
push
pop
lods
pop
cld
mov
cmp
jns
jecxz
or
sub
ret
jge
addl
sub
inc
call
in
or
sub
adcl
cmpl
and
pusha
in
add
fldcw
pop
adcl
add
shlb
xor
int
xorb
fwait
jmp
mov
inc
push
sbb
loope
cmpb
std
test
test
pushf
and
aad
mov
js
mov
mov
sub
add
mov
ret
mov
or
and
bound
icebp
rcrl
push
cld
fdivrl
mov
repz
sbb
adc
imul
dec
pop
in
nop
pop
fisttpl
pop
stos
fstpl
add
pop
insb
jmp
pusha
in
in
fisttpll
shll
enter
rcrl
and
xchg
xchg
sub
dec
dec
addr16
sbb
mov
sbb
loope
cld
pop
or
lret
inc
sub
or
mov
inc
es
mov
sub
mov
xor
mov
jge
imul
sub
mov
es
xor
fsubr
scas
push
stos
cld
inc
sub
hlt
and
add
nop
daa
fs
xor
lret
and
push
aam
pop
push
dec
in
and
dec
enter
inc
and
sbb
cld
dec
dec
outsb
lcall
cmp
sbb
sbb
adc
ret
jb
dec
shr
mov
es
clc
shrb
adc
ror
mov
adc
mov
or
shll
fs
fwait
mov
inc
mov
and
pop
shlb
cld
pushf
fiaddl
fistpl
inc
dec
lods
sbb
xchg
pushf
lcall
mov
cmp
xor
arpl
testb
xchg
xor
insl
or
insl
or
inc
mov
ja
pop
inc
dec
rorl
shlb
xor
rorb
sub
and
mov
test
jns
movsl
inc
inc
addr16
test
call
push
mov
pop
adc
mov
xchg
push
test
jns
xchg
jecxz
adc
pop
mov
dec
lods
lahf
adc
fnstenv
andb
or
lret
mov
lahf
sub
mov
inc
or
add
cmpsb
xor
ds
dec
int3
adc
jmp
sub
scas
xchg
mov
xchg
roll
sbb
sub
push
dec
or
cmp
and
sub
xor
push
push
mov
pop
cmp
mov
sbb
rcrb
and
jmp
mov
cli
or
push
sbb
or
cltd
call
sbb
sbb
loop
dec
nop
scas
enter
stos
fdivrp
aas
test
cmp
jl
cmpl
mov
incl
inc
out
mov
stc
push
xor
xorl
movl
mov
pop
mov
mov
mov
std
mov
inc
mov
pop
jae
xor
iret
aad
mov
or
jnp
mov
ljmp
or
mov
add
pop
mov
push
inc
add
xchg
int
popl
cmp
lock
and
dec
xor
push
mov
and
movsb
jl
icebp
push
push
test
jle
mov
jp
cmp
icebp
mov
lock
repnz
and
dec
adc
subb
mov
adc
daa
int
xor
ret
xor
jb
sub
adc
dec
adc
fdiv
mov
mov
movl
negl
rcll
fwait
push
cmp
cli
and
dec
dec
jo
pop
adc
push
popa
xchg
shrl
rcrl
pushf
or
adc
leave
dec
ret
sahf
add
int
dec
sbb
jp
pop
ljmp
sub
push
cltd
pop
idiv
jmp
dec
mov
adc
cmp
lods
xlat
jne
insl
mov
inc
fdivrl
pop
xchg
int3
arpl
cltd
push
daa
cmp
inc
cmp
ficoml
adc
mov
mov
mov
test
mov
inc
mov
sbb
sbb
and
test
flds
lds
sub
lods
sahf
adc
jbe
add
mov
movsl
into
hlt
pop
push
xor
mov
movsl
sahf
in
xchg
mov
mov
push
std
push
push
jne
and
insb
roll
cmp
stos
sbb
add
and
enter
hlt
inc
jecxz
roll
inc
subl
mov
or
cmp
adc
adc
lahf
and
jo
push
scas
or
lea
adc
test
inc
inc
hlt
xchg
inc
shr
jge
push
sti
movsl
mov
mov
mov
outsl
loopne
add
inc
add
adc
sti
sarb
je
inc
call
sbb
pop
shl
fildl
pop
jmp
sbbb
mov
shl
pop
sti
sub
cmp
sbb
jb
lea
lret
pop
cld
jl
iret
shl
inc
dec
cmp
mov
ds
push
jbe
jne
sbb
popf
sbb
sbb
mov
cmp
sbbl
ljmp
dec
lods
mov
push
sub
xchg
push
insl
jb
ror
jmp
push
loop
mov
inc
test
mov
add
test
mov
loope
xchg
or
outsl
or
xlat
cmp
cmp
icebp
fwait
jae
pop
pop
cmp
ja
mov
call
add
sti
mov
aam
mul
pop
mov
mov
data16
ljmp
in
sub
js
lods
inc
jecxz
cmc
or
push
lds
sbb
cmp
jne
call
loopne
enter
ficompl
add
or
mov
add
add
xchg
inc
inc
shl
inc
mov
jne
data16
imull
cmp
int3
mov
mov
pop
jb
mov
push
stos
loop
mov
pop
inc
and
pop
push
lret
pop
inc
add
lret
cmc
sbb
mov
adc
jne
push
aad
inc
sbb
push
ficompl
outsl
in
jbe
icebp
mov
mov
add
fimull
add
lods
insl
and
and
inc
cli
inc
mov
add
pop
push
sub
insb
and
push
mov
out
sub
and
mov
ljmp
sub
pop
sbb
fidivs
mov
adc
jl
test
mov
and
fsubrs
fmuls
sarb
outsb
inc
lods
insl
and
incb
xor
jae
ss
push
mov
out
xor
cli
add
rorb
test
lock
mov
fildl
movsb
jae
sub
stos
loop
aad
or
and
lahf
mov
jmp
xchg
add
or
sub
add
mov
adc
add
push
stos
cmpb
or
dec
inc
dec
mov
add
outsb
adc
idiv
add
and
jae
popa
adc
outsb
push
gs
pop
add
xor
cmp
xlat
mov
inc
dec
dec
cs
add
jge
gs
jo
imul
gs
icebp
jnp
xchg
xor
inc
jb
outsl
mov
lods
gs
jb
cmp
mov
sbb
dec
inc
imul
popaw
jne
je
cwtl
insb
mov
or
add
push
jge
and
xor
gs
pop
mov
adc
jae
lods
cmp
pop
jmp
outsb
popa
shll
lret
sub
insb
sti
push
mov
popa
insl
gs
out
fisttpl
insb
sub
pop
inc
dec
push
add
sub
jo
adc
cmp
add
dec
fwait
cs
pop
adc
dec
and
push
and
ret
outsb
jle
insl
inc
fs
inc
arpl
add
add
add
push
xor
fiadds
add
cli
adc
addb
call
add
inc
add
dec
add
inc
add
je
testl
inc
cmovae
inc
dec
add
push
ja
jne
add
add
inc
pop
dec
add
mov
or
inc
and
pop
adc
imul
add
dec
add
jmp
rcrl
inc
pop
push
add
dec
aaa
mov
add
push
dec
xlat
insl
scas
jnp
imul
push
cmova
fucom
mov
inc
adc
and
jne
add
jns
push
add
out
mov
or
pop
xor
xor
rcpps
in
mov
dec
inc
inc
adc
add
and
push
loopne
adc
inc
adc
jb
popa
jbe
push
mov
inc
pop
inc
dec
adc
add
sbb
adc
or
rorb
sar
idivl
out
in
sbb
add
add
push
cld
sub
dec
inc
and
pop
inc
inc
ud2
pop
sub
daa
and
pushw
outsl
mov
mov
or
xor
addb
addb
jmp
rolb
incl
push
jmp
mov
jbe
fs
dec
xchg
and
dec
push
dec
dec
enter
or
mov
outsl
xchg
xor
arpl
mulb
jae
or
or
hlt
jne
or
or
add
add
insb
enter
add
and
jbe
std
sbb
add
les
inc
and
insl
insb
xchg
frstor
or
push
or
ret
jnp
sub
inc
and
and
add
popl
and
pop
inc
divb
dec
inc
mov
and
or
and
dec
mov
dec
pop
dec
dec
and
pop
data16
xchg
insl
mov
dec
push
mov
and
add
pushf
dec
cmp
push
pop
sysexit
rcr
mov
dec
and
imul
add
in
add
dec
fwait
pop
sub
mov
or
xor
popa
ret
sbb
add
test
add
sbb
sbb
aaa
xlat
cs
or
pop
xor
add
adc
cmp
insl
xor
mov
ud2
cmp
outsl
or
cmp
add
popa
or
mov
push
cmp
fcomp
sbb
arpl
or
or
lds
cmovne
sbb
fwait
popf
or
or
add
cmp
or
or
dec
or
add
xor
in
mov
sbb
das
or
sub
int
pushf
mov
pop
or
sub
or
pop
mov
negb
cmpsl
add
and
dec
ret
ret
inc
sbb
fsub
fsubrl
and
testb
aas
notl
mov
std
in
jge
and
push
pop
and
add
add
or
aaa
pop
mov
or
int3
mov
pop
and
sub
mov
adc
pop
enter
add
cld
dec
adc
int
add
insl
mov
adc
and
mov
add
add
ja
lcall
enter
inc
adc
lods
cltd
int3
push
dec
push
push
or
mov
pop
add
or
mov
push
adc
jbe
mov
or
std
or
pop
and
imul
xchg
or
pop
push
insb
inc
es
out
inc
dec
sbb
addr16
das
pop
cwtl
lods
pop
jbe
sub
xchg
xchg
int
mov
push
lret
fs
or
in
xor
pop
call
sbb
or
cwtl
add
xchg
popf
out
add
rolb
or
xchg
aaa
and
cmp
cmp
push
sbb
mov
inc
inc
sub
sbb
cs
or
push
adc
in
fldenv
adc
lods
sub
rol
fistpl
mov
pop
mov
sbb
sbb
sub
mov
dec
in
decl
pop
lahf
adc
sub
pop
pop
in
or
push
mov
insl
adc
adc
xchg
or
dec
outsl
out
xor
push
pop
andb
cltd
add
call
mov
dec
and
sbb
repz
into
inc
adc
sbb
shlb
test
popa
adc
xor
and
push
cmpsb
add
jnp
mov
notl
ret
sbb
sbb
imul
adc
jo
inc
pop
jge
adc
adc
sbb
xchg
add
fisubrl
pop
sub
lock
fmuls
pop
daa
fimull
adc
lret
or
sbb
std
sub
mov
sbb
dec
sahf
sub
inc
movsl
xor
add
mov
jl
mov
adc
dec
push
sub
xchg
pop
pop
adc
fs
ds
aaa
aaa
inc
es
inc
aaa
arpl
push
sbb
add
pop
xor
rorb
xor
jmp
pop
fbstp
or
pusha
adc
jbe
or
or
fsubl
add
dec
leave
orl
add
adc
fwait
pushf
or
sbb
cmp
and
cmp
sub
leave
xchg
ret
cwtl
or
mov
ret
cmp
pop
ds
jge
push
repnz
inc
add
inc
add
inc
add
and
syscall
popf
inc
xchg
arpl
fsubrp
or
lods
aaa
adc
cmp
mov
jo
mov
int
pop
das
push
cmp
arpl
or
inc
xchg
inc
dec
inc
or
push
sbb
or
push
push
dec
sbb
sub
loopne
xchg
push
dec
cmp
add
push
adc
dec
cmpsb
push
popf
sbb
or
repz
incl
xor
pop
pop
adc
mov
xchg
adc
sub
pop
inc
nop
add
or
pop
or
and
pusha
pop
pusha
pusha
nop
xchg
and
pop
xchg
xor
out
push
pop
and
adc
daa
adc
pop
add
imul
pop
push
mov
adc
and
daa
adc
mov
adc
rorb
mov
or
fs
cmp
aaa
nop
xor
dec
pusha
arpl
nop
dec
enter
xor
sbbb
push
or
jns
cmpsb
sub
outsl
xor
push
pop
adc
cmp
in
dec
or
and
fs
leave
xchg
imul
adc
insb
xchg
orl
dec
jb
mov
int3
sbb
add
push
test
aas
sbb
fs
pop
add
or
test
adc
push
push
sbb
test
jle
push
jbe
pop
ret
pop
jbe
sbb
xchg
lock
ret
sbb
mov
shlb
adcl
ret
push
ja
and
adc
js
ljmp
xor
jns
cmp
sbb
inc
es
pop
sar
jge
pop
sarl
push
leave
rcll
and
adc
es
and
and
xchg
mov
jl
fisubrs
adc
mov
pop
rcll
or
push
in
cmp
push
or
pop
dec
mov
push
cmpb
or
or
les
pop
adc
pop
xorl
fists
and
xor
xor
push
add
inc
sbb
dec
mov
dec
pop
pusha
pop
test
dec
psraw
test
dec
sbbb
sbb
xor
pop
push
fbld
ret
arpl
nop
adc
fs
sahf
popa
or
dec
cmp
arpl
jo
and
das
or
hlt
sbb
jo
pop
lea
cmp
movsb
cmp
lcall
ret
dec
push
or
pop
cmp
jno
adc
mov
or
jns
push
nop
add
xchg
add
xchg
ficoms
cmc
cmp
sbbb
dec
cltd
fisttpll
sbb
dec
lcall
movsb
inc
pop
movsl
and
out
jl
add
sbb
lret
or
and
es
in
adc
or
cwtl
xchg
adc
rcrb
or
push
ret
cltd
popf
or
outsl
loope
mov
orl
cmp
pop
and
pop
mov
xchg
adc
cmp
repnz
push
mov
sarb
dec
ret
lods
pop
mov
loopne
dec
test
repnz
js
xor
sbbb
loope
addr16
xchg
sbb
and
add
xor
add
cmp
add
maxps
or
push
sbb
cmpl
inc
cmp
lods
xor
inc
cwtl
out
addb
lahf
adc
add
aaa
and
and
cs
xchg
mov
cmc
popa
test
sbb
adc
shrb
repz
xchg
jo
mov
in
push
mov
or
add
adc
nop
scas
scas
sbb
sbb
sbb
or
sbb
or
or
adc
out
add
lea
aam
xchg
leave
sbbl
fsts
mov
or
ja
jns
outsb
adc
mov
dec
cwtl
sub
xchg
addr16
mov
jge
js
repz
imul
enter
outsl
or
mov
xchg
dec
ss
mov
and
mov
xchg
mov
sbb
in
dec
out
push
leave
mov
btr
popa
adc
jmp
add
push
xlat
add
cmpl
and
xchg
sbb
loope
jb
sbb
leave
adc
and
enter
add
or
and
add
adc
jbe
inc
ds
les
add
xchg
adc
adc
fists
xor
fwait
lds
adc
int3
lds
push
adc
xor
add
xor
enter
add
cs
sbb
inc
or
or
jne
jno
dec
cmp
aam
aam
and
in
repz
shrl
lds
jno
jg
xor
or
adc
jno
add
xchg
adc
mov
in
mov
ret
and
cmp
adcl
push
jmp
roll
aam
leave
and
call
fisttpll
test
fadd
dec
fcoml
xchg
loope
mov
mov
fisubl
sbb
jbe
nop
and
call
jo
popa
lret
and
test
int3
sbb
or
fldt
and
aaa
mov
loope
or
sbb
inc
push
pop
iret
hlt
sbb
out
pop
adc
xor
or
in
sub
or
daa
adc
movsl
scas
pop
negb
dec
adc
andb
and
add
mov
adc
add
add
inc
lcall
add
cmp
fwait
movsb
or
test
imul
pushfw
and
pop
or
sub
sbb
leave
or
pop
push
xchg
in
cmp
outsl
lret
jge
cmp
imul
sti
sub
xor
adc
or
ret
xor
cmp
push
shlb
repz
adc
roll
repnz
or
testl
sti
imul
add
pop
ja
sysenter
or
pop
push
xor
pop
daa
punpcklbw
adc
xchg
add
inc
or
push
enter
or
enter
add
sub
pop
enter
push
adc
ret
adc
adc
pop
or
push
cmp
pop
cmp
sbb
sbb
sbb
add
pop
push
enter
clc
and
cmp
lret
add
and
and
punpckldq
lods
loop
xchg
push
inc
mov
adc
out
sub
add
addb
stos
xlat
cmpsl
dec
add
gs
add
ret
ret
adc
jne
push
inc
add
lret
pop
push
imul
ja
inc
jg
dec
add
xor
pop
bound
leave
fidivrs
sbb
outsl
dec
or
pusha
test
jb
add
sahf
mov
dec
and
dec
fstp
sub
mov
divb
outsb
fnsave
sub
jae
popa
jae
insl
mov
sti
bound
push
pop
jae
outsb
mov
jns
imul
out
and
mov
or
jne
xor
insl
lahf
mov
in
sbb
xor
iret
gs
imul
jbe
mov
and
push
push
ret
dec
aas
pop
push
and
sbb
outsb
or
jbe
push
xchg
imul
ja
clc
jae
mov
dec
sbb
sbb
or
frstor
xor
cmp
fwait
adc
insl
pop
negl
imul
fadd
and
je
pop
inc
cld
sbb
xchg
mov
pop
add
add
sub
adcb
dec
das
add
rcll
push
jae
pop
and
add
sub
test
in
lods
dec
inc
movsb
inc
dec
outsl
outsb
or
leave
aas
cmc
add
push
xor
pop
enter
insl
leave
sbb
test
jae
imul
inc
packssdw
jge
mov
jb
inc
push
test
and
in
jecxz
fisubrs
sub
cltd
jae
lods
movsb
out
aad
push
addl
or
xor
out
add
or
outsl
adc
xor
jae
pop
add
ret
mov
add
inc
into
add
dec
arpl
add
es
mov
mov
pushf
xchg
add
movsb
jmp
imul
adc
lahf
or
pop
ret
mov
xchg
or
outsl
int3
pop
lret
push
cmp
shlb
and
dec
push
jbe
daa
cmp
dec
add
sbb
dec
jp
lahf
xor
das
adc
outsl
add
mov
enter
sub
int3
mov
add
ds
sbb
add
xor
add
addr16
xor
inc
mov
xchg
aas
push
inc
shll
jae
jb
mov
push
inc
nop
out
lock
jmp
jae
xchg
cwtl
xchg
or
movsl
nop
dec
outsb
ja
fwait
sub
add
jo
arpl
pop
pop
ret
outsl
push
add
xor
xor
mov
add
mov
std
stos
add
inc
mov
fwait
add
out
inc
push
pop
inc
xor
rorb
leave
add
aam
inc
or
enter
sbb
push
cmp
push
or
add
mov
pop
or
xchg
sub
das
dec
cmp
push
rcr
or
insb
push
sbb
xor
dec
mov
or
mov
fwait
inc
dec
popa
cmp
pcmpeqb
cmovb
jno
add
mov
test
popa
fldenv
xor
push
ja
dec
adc
test
cmp
or
jbe
movsb
jnp
xlat
push
or
ss
stos
jns
insb
fdivl
cltd
or
hlt
popf
jp
or
adc
xchg
aaa
popa
cs
inc
pop
aam
fwait
inc
mov
pop
jmp
das
sbb
std
adc
jno
cltd
sub
sub
setb
lret
xchg
xor
pop
cmp
outsl
push
dec
xor
or
in
jnp
xchg
sbb
fnstenv
shll
xor
jg
xor
sub
gs
js
or
and
std
or
data16
or
imul
ljmp
lods
and
and
cmp
fldl
je
mov
aaa
addl
push
push
arpl
imul
xchg
das
je
gs
fwait
xor
xchg
jbe
xor
fwait
rorl
pop
pop
push
pop
outsl
sbb
inc
xor
xchg
addr16
xchg
xchg
adc
into
loop
xchg
dec
fidivrs
fwait
add
mov
pcmpgtd
mov
dec
addl
mov
popa
mov
xchg
adc
push
and
add
gs
cmc
mov
cmp
popf
pop
mov
or
push
adc
test
sub
fwait
push
pop
pop
int3
mov
cltd
movsl
or
addr16
push
cmp
inc
fisubs
arpl
shll
daa
pop
jnp
in
sub
or
mov
popa
leave
push
add
aaa
jns
pop
popf
sbb
sub
enter
int
icebp
mov
sub
addr16
arpl
cmp
dec
cs
sub
fincstp
pop
btr
outsl
fildl
adc
and
push
data16
or
pop
xor
and
xor
pusha
movsb
mov
inc
and
adc
leave
cmp
fldl2t
inc
mov
adc
subl
or
lods
pop
or
push
movsb
outsl
jne
mov
dec
loope
inc
push
pop
and
or
imul
or
jb
inc
cmp
das
or
bound
imul
and
cmp
ds
cmp
jnp
and
inc
pop
fucomip
rclb
xor
xchg
lret
ret
dec
inc
pop
outsl
pop
iret
push
mov
inc
jne
aaa
xchg
xchg
lds
dec
inc
inc
lcall
mov
enter
xchg
test
je
insl
cmpb
ja
das
add
xchg
dec
sbb
in
imul
lea
outsb
inc
mov
sbb
pop
leave
mov
push
xor
xor
pop
pop
ret
or
xor
cmpsb
xor
aaa
sbb
inc
push
add
jmp
test
out
mov
out
jmp
mov
mov
adc
pop
daa
jno
xor
lea
orl
inc
ret
inc
inc
shrl
stos
fs
jnp
mov
push
vpmacsswd
and
inc
arpl
sti
and
aad
outsl
sub
push
mov
shl
inc
adc
push
subl
inc
cmp
lret
mov
pop
inc
fstps
push
or
sub
mov
adcb
pop
cwtl
adc
fisttps
sbb
imul
dec
adc
das
xchg
rolb
mov
cmp
jp
scas
jo
icebp
jmp
sbb
out
jge,pn
or
xchg
add
xor
cmp
mov
cmp
xchg
inc
rclb
aaa
inc
notb
negb
andl
test
xor
mov
mov
andl
pop
ret
xor
paddb
pop
or
or
jb
scas
jae
cmp
adc
je
push
sub
imulb
addl
xchg
add
and
fs
jne
fs
xor
dec
sub
xchg
dec
mov
mov
sbb
cmp
mov
cmpsl
jne
jmp
add
mov
scas
leave
xor
add
ja
ficoml
mov
xchg
imul
sbb
pop
and
and
flds
cmp
xchg
stos
dec
or
xor
arpl
xchg
sub
xor
aad
lds
mov
aam
cmpsw
inc
sbb
mov
repz
mov
sbb
sub
sub
fcoms
jbe
jg
pop
comiss
pop
cwtl
or
jmp
jl
dec
cmp
ja
scas
sub
jne
rolb
mov
incl
pop
and
push
orl
cs
leave
cmp
sub
push
imul
cwtl
in
jg,pt
fnstenv
enter
xchg
outsb
and
dec
push
stos
fldenv
jae
addl
pushf
cmpsb
or
mov
inc
push
adc
add
pop
sbb
int
shrb
rcll
or
cmp
scas
cmp
insl
adc
rorb
pop
ss
fs
cmpsl
inc
shl
andl
pop
data16
popa
fbld
jg
mov
arpl
or
push
inc
cmp
mov
sub
lods
js
sub
jne
gs
stc
in
pop
rolb
cmp
and
dec
inc
xchg
mov
pop
xor
dec
fstps
jo
shrl
loopne
add
xor
ret
xchg
lods
add
dec
test
xlat
dec
pop
andl
dec
pop
ss
pop
sub
push
inc
cmpsl
pop
dec
enter
fwait
sbb
mov
add
lcall
mov
sbb
mov
xor
jae
ret
and
jmp
inc
add
sub
and
or
xor
jbe
in
outsl
adc
push
mov
push
xchg
mov
icebp
jb
xor
or
sub
adc
push
sbb
imul
mov
adc
fnstsw
mov
and
mov
sbb
add
and
outsl
adcl
es
pop
mov
loope
ja
mov
push
rorb
out
sub
fcmovne
xchg
adc
dec
mov
movsl
or
lds
sbb
popa
add
xor
mov
pusha
jnp
xadd
adc
aaa
sub
scas
loopne
add
cmpsl
pop
pusha
outsb
jmp
add
pusha
clc
cli
cmp
fwait
sbb
incb
lea
add
addb
add
and
and
sbb
stos
push
imul
push
lcall
jns
mov
lods
mov
shrl
outsl
xchg
add
mov
out
mov
jae
clc
shl
jle
dec
push
shrl
and
and
and
popf
xchg
cmpsl
cmp
push
sbb
out
in
mov
inc
xchg
cmpb
cmp
sub
cmp
jae
fcmovnbe
shlb
mov
out
out
out
pusha
into
outsb
xchg
scas
mov
gs
test
rcll
mov
data16
lahf
sub
mov
push
sbb
mov
cltd
xchg
incl
pusha
orl
pop
mov
add
adc
xchg
cmp
addb
es
add
jecxz
pop
sub
xor
push
xchg
adc
cmp
outsl
jmp
dec
fcompl
fnsave
in
daa
cltd
std
sbb
imul
mov
mov
cmp
jnp
pop
mov
sub
bound
sub
mov
jnp
sub
xchg
shrb
insb
add
adc
popa
xor
sbb
mov
push
insb
fdivr
lcall
cmp
jnp
dec
jb
mov
in
movsb
insl
loopne
dec
mov
pop
jae
lcall
jecxz
insl
xchg
cmpsl
xchg
lcall
lods
push
push
push
out
sbb
lea
fucomp
std
cmc
rclb
call
mov
fwait
in
push
dec
in
dec
and
xchg
popa
sub
movsb
mov
push
leave
outsl
ljmp
call
mov
fldenv
mov
mov
data16
std
push
pop
xor
scas
fwait
sahf
pop
mov
ljmp
cld
cmp
iret
sub
sbb
fwait
cmc
jecxz
push
loope
xor
adc
incl
stos
add
cltd
sbb
out
enter
adc
jecxz
je
js
enter
xchg
cmp
mov
or
sub
les
pop
imul
sub
in
ljmp
cmp
int
fsts
lcall
pop
mov
shll
insl
push
xor
xor
pop
mov
cmp
popf
frstor
add
inc
decl
pop
xor
enter
cmp
insb
cmp
shr
mov
ljmp
nop
pusha
and
xor
fcomps
push
xor
mov
pop
mov
xchg
lret
xor
ret
cmp
jns
push
int
adc
cmp
pop
adc
and
in
mov
minps
fstl
cmpsl
xchg
adc
cs
data16
inc
cmp
pop
sbb
imul
fidivs
shl
ja
cmp
sti
jne
mov
decl
push
pushf
sbb
pushf
mov
mov
in
or
mov
stos
sarb
test
in
outsl
in
add
jno
test
push
cwtl
out
adc
adc
xchg
das
sub
or
pop
fdivl
push
and
push
ds
in
dec
cmp
mov
xor
pop
mov
mov
nop
aaa
outsl
cld
fistps
push
mov
inc
shlb
inc
rorb
sub
incl
movsl
adc
xor
sahf
jne
icebp
xlat
and
cmp
pop
fiaddl
int
lcall
mov
out
loop
adc
sub
adc
mov
cwtl
out
sub
add
les
jg
pop
lahf
ret
cld
in
mov
in
cs
decl
sbb
adc
or
test
push
daa
inc
icebp
push
hlt
out
sbb
pop
inc
push
add
mov
inc
xchg
sbb
lret
lods
outsb
movsl
xchg
sub
jmp
push
dec
adc
loopne
fdiv
mov
ret
out
or
xchg
xchg
jmp
mov
jmp
hlt
and
dec
mov
dec
lret
and
mov
das
pop
ljmp
lcall
mov
gs
add
pop
sbb
jne
loope
popf
adc
incl
outsb
sahf
jle
inc
push
mov
inc
popa
mov
fsubrl
shl
push
xchg
or
cwtl
int3
fisubrs
outsl
lcall
ficoms
stc
dec
in
loope
and
or
jecxz
pop
test
mov
pop
in
test
mov
inc
imul
cwtl
loope
int3
or
inc
mov
in
pop
pushl
push
inc
subl
adc
mov
pushl
sbb
xchg
test
xor
sarb
movsb
aad
jnp
mov
ds
call
test
inc
push
adc
xlat
or
ljmp
movsb
cmp
xchg
stos
flds
in
jge
and
cmpl
incl
pop
aas
jne
lds
mov
out
repz
fsubl
mov
jmp
inc
sbb
and
mov
mov
cmp
sub
mov
cmp
test
addb
pop
ljmp
and
stc
pusha
pop
shrl
push
and
jno
mov
dec
decl
xchg
lods
cmp
pop
jmp
xchg
mov
jnp
stc
test
mov
pop
clc
jns
les
cmp
and
mov
push
xchg
jg
jg
jmp
adc
je
and
lcall
pop
int3
hlt
xchg
jge
mov
das
dec
imul
pop
adc
sbb
icebp
movsl
xchg
cs
pushl
ds
dec
push
inc
flds
sarb
stos
fbstp
lds
mov
lahf
jb
clc
push
mov
push
int
arpl
movsl
nop
jg
add
mov
cltd
out
hlt
fidivrl
push
call
sub
in
cmpsb
jns
fs
sub
pop
arpl
push
mov
outsb
imul
fistpll
pop
inc
popa
inc
lock
and
call
ffreep
fwait
inc
lahf
jg
loopne
add
pop
fistl
cmp
fldcw
mov
jb
sbb
pushl
xchg
inc
and
stc
add
movsb
fst
cmc
scas
stos
xchg
insb
popa
mov
sub
mov
aad
int
pop
rorl
dec
adc
ret
sub
jp
stos
js
cld
add
ljmp
idivl
mov
stc
lds
inc
scas
test
icebp
add
dec
xor
je
adc
cmpsb
imul
iret
jbe
and
mov
fwait
push
pushl
ja
aas
cld
mov
and
ret
pop
mov
jb
lret
das
lahf
mov
xor
xchg
ljmp
std
adc
rclb
cs
add
mov
jmp
xchg
aas
jle
add
aad
jnp
out
imul
fidivrl
pop
jl
mov
mov
loope
jnp
pop
addr16
fisubl
dec
scas
cmp
adc
dec
fsubs
imul
fsubl
in
dec
fnstsw
int3
clc
cmp
mov
cmp
mov
mov
jp
adc
ds
outsl
cld
decl
fmuls
call
push
ffree
pop
push
jg
mov
jg
fisubs
ficomps
mov
in
lods
cli
int3
popf
pop
xlat
scas
xchg
pop
dec
incl
ljmp
mov
push
mov
push
jns
sbb
add
inc
mov
lret
pop
clc
mov
mov
std
jmp
sub
adc
call
in
scas
mov
mov
jno
pop
mov
xor
pushl
sub
insl
je
add
or
inc
loope
dec
adcl
stos
out
jg
dec
inc
pop
dec
fisttps
pop
sub
out
push
out
add
movsl
and
icebp
clc
popa
mov
jg
rolb
mov
loopne
push
mov
adc
pop
mov
push
in
out
jb
cmp
ja
test
iret
cltd
in
lods
in
scas
dec
dec
movsl
leave
popa
sbb
add
call
push
adc
and
pop
jp
jns
dec
dec
push
push
mov
ljmp
in
aas
es
xchg
scas
dec
mov
fistl
jp
dec
das
das
lret
xchg
lcall
xchg
fbld
jb
mov
sarl
jb
sub
dec
jge
jg
mov
push
fsubr
out
sbb
xchg
dec
popl
push
aad
add
stos
pushl
dec
shlb
pusha
push
into
ret
push
in
xchg
pop
stos
adc
iret
push
in
loop
sub
hlt
lds
cmp
aad
mov
std
cmp
loopne
ljmp
popf
fwait
loopne
mov
in
cmc
dec
sarl
aas
xchg
stos
cmp
jmp
lods
inc
dec
xchg
and
enter
cmp
fsubrs
lcall
mov
test
mov
int3
js
outsl
lds
scas
in
lcall
pop
mov
ficoms
xchg
push
lret
dec
test
repz
cmp
pop
imul
stc
mov
sbb
xchg
adc
incl
test
pop
lahf
cmp
sub
mov
outsl
or
fisttps
aaa
sbb
xchg
testl
cmp
or
mov
lock
sub
cld
cmpsb
and
adc
nop
add
xor
jecxz
add
decl
push
jno
mov
cmpsl
pop
fistpl
cmp
jl
dec
fcoml
sbb
outsb
pop
sub
test
inc
or
mov
mov
ljmp
icebp
out
xor
xchg
mov
arpl
insl
adc
js
std
mov
pop
bound
mov
add
sub
jg
scas
dec
lahf
rcll
cmp
loope
sub
inc
jb
cli
decl
insl
fs
jecxz
out
pop
add
xor
push
mov
cli
imul
filds
loop
lea
repz
add
dec
cmp
iret
pop
push
jno
decl
popa
adc
aad
in
xor
das
lods
dec
popf
and
mov
aas
sub
xchg
clc
inc
mov
pop
insb
adc
inc
xchg
cmp
filds
clc
aad
xor
cli
sbb
and
ja
push
arpl
ret
add
ret
dec
popa
rorb
add
push
jge
in
lods
jnp
movd
lcall
cs
imul
leave
inc
or
mov
pushl
xor
cs
popa
repnz
in
mov
cmpl
mov
scas
lret
lcall
inc
or
lcall
add
xchg
scas
mov
pusha
sub
push
inc
jmp
iret
cwtl
inc
pop
pop
bound
mov
orb
hlt
hlt
push
hlt
or
in
lds
rolb
cld
jmp
and
test
pop
hlt
dec
lock
and
insl
jae
es
lock
xchg
icebp
pop
push
push
or
mov
in
push
test
jg
test
ljmp
jb
scas
je
stc
sub
pushl
pop
popf
sbb
in
mov
push
push
lock
add
or
push
repnz
jp
cltd
filds
fiadds
out
dec
xchg
push
in
sub
fldt
xor
mov
pushl
ud1
lea
mov
sub
in
cmp
rcr
dec
gs
in
sub
mov
cmp
mov
sar
test
push
icebp
add
cmp
bound
mov
imul
js
add
fbld
shr
daa
hlt
negl
fcom
sbb
dec
push
stc
sub
mov
call
mov
or
xchg
cli
imul
dec
inc
jnp
lds
pushl
add
lea
push
ret
sbb
orb
lock
inc
icebp
imul
sub
es
scas
testl
dec
cwtl
mov
ljmp
push
lods
sarl
scas
flds
jg
push
mov
fcomp
cmpb
xlat
or
pop
fs
test
test
mov
mov
cli
dec
push
imul
loop
std
jg
xor
mov
sub
push
aam
cltd
rcll
pop
ljmp
inc
adc
subb
or
add
pop
sub
dec
test
jg
das
lret
cltd
mov
pop
or
adc
nop
loope
xlat
insl
adc
dec
decl
daa
insl
push
push
lds
insl
leave
push
arpl
idiv
inc
adc
scas
gs
lock
or
sbb
arpl
jmp
inc
push
cmpb
mov
bound
pop
add
pop
clc
pushl
push
cmpsb
mov
movsb
pop
in
pop
pop
cmpsb
mov
push
insb
xor
mov
push
fwait
mov
aam
fwait
lret
jnp
scas
movsl
popa
ror
jne
inc
cmp
jbe
fld1
mov
pop
jbe
aaa
je
es
sbb
sbb
push
dec
test
das
icebp
das
rcr
and
insl
inc
stos
add
mov
movsb
out
decl
lret
test
loope
mov
mov
fwait
sub
lret
jae
aaa
jle
sbb
mov
cmp
jecxz
ljmp
push
ds
incl
mov
pop
sbb
das
mov
insl
into
icebp
dec
xor
ss
sarl
dec
arpl
lock
cmp
pop
dec
shll
sub
cli
into
mov
lcall
fcompl
cmp
or
shll
decl
or
rorb
inc
mov
cld
insb
repz
sbb
icebp
pop
jnp
aaa
pop
fwait
or
sahf
and
jl
adc
ljmp
or
mov
rcrb
push
push
out
sub
aaa
dec
mov
ffree
cmp
mov
jbe
mov
sub
and
mov
and
sbb
mov
std
aaa
adc
pop
or
sar
mov
cmp
mov
sahf
xor
inc
inc
jecxz
sbb
mov
add
fwait
insb
dec
jbe
stc
mov
arpl
jg
call
pushf
nop
jmp
testb
aas
pusha
stos
push
jns
mov
lods
stc
jae
push
pop
in
inc
int
insb
sbb
cmp
imulb
lcall
mov
adc
in
lahf
dec
in
fstl
aas
sarb
pop
lcall
aam
pinsrw
cmp
add
adc
ss
sub
incl
ljmp
jo
divl
cmp
xor
mov
gs
cmpsl
insl
arpl
cs
fsubrl
incl
mov
movsl
lods
dec
les
mov
decl
jecxz
lds
jbe
inc
lds
mov
jns
lods
jg
pushl
xor
pop
pop
addr16
loopne
sar
lcall
xor
inc
aad
jns
or
and
sbb
or
adc
cmpsb
and
jge
add
inc
lods
cmpsb
out
insl
aaa
out
sahf
and
bound
sub
clc
mov
stos
test
xor
adc
or
call
adc
fs
fadds
jp
and
lar
outsl
aam
xor
pop
cmpsl
adc
call
pop
in
and
icebp
cli
inc
out
pop
fwait
in
call
imul
imulb
jg
hlt
or
cmp
test
ss
push
lea
or
add
push
cmpsl
cmp
stc
push
mov
xchg
xchg
inc
lcall
mov
add
cmp
aam
fs
stc
loopne
insl
dec
negl
hlt
incl
mov
movsb
push
or
incl
std
dec
mov
insl
mov
aad
shrl
push
in
xchg
mov
xchg
into
cmpsl
xchg
lock
mov
inc
addl
fmul
shll
stos
cmpsl
imul
ljmp
cmc
stos
mov
push
imulb
ja
xchg
and
cld
sub
lds
inc
lret
or
jno
fidivrs
inc
push
inc
inc
lret
test
and
mov
xchg
imul
ljmp
movsl
and
xor
push
adc
jmp
out
cmp
or
scas
ljmp
jg
push
mov
in
into
push
push
popa
or
xchg
fldt
dec
lods
les
fucomip
movsb
mov
push
cmp
lock
mov
aam
pop
jge
dec
std
mov
xchg
mov
aaa
lret
push
ss
mov
xchg
scas
mov
fucomip
lcall
imulb
pop
cltd
dec
loopne
sub
jg
iret
roll
ljmp
subb
andl
scas
sti
jae
dec
cmp
fsubrl
sarl
add
aaa
or
adcb
or
mov
jge
adc
push
sbb
into
pusha
dec
push
add
fnstenv
loop
push
pop
wrmsr
mov
dec
add
inc
add
xorb
inc
pop
pop
sbb
rorl
adc
stos
inc
jo
sarb
xchg
inc
jb
or
mov
push
inc
insb
insb
push
or
dec
popa
jae
cltd
or
fsts
arpl
lods
add
adc
insl
adc
dec
outsl
fs
mov
adc
jbe
adc
adc
arpl
fcmovu
jns
pop
insb
arpl
or
jo
or
inc
pop
push
jb
sub
jmp
mov
push
outsl
dec
cwtl
inc
add
sbb
jbe
xchg
or
inc
or
mov
daa
addb
in
in
fnsave
adc
jo
cmp
jbe
out
int
push
push
insl
mov
and
jo
test
or
pop
ret
push
outsb
add
dec
or
inc
inc
push
dec
andb
js
ror
out
push
popa
dec
add
sbb
fldl
insl
jo
fcoml
insl
outsl
jbe
or
cmp
dec
add
jnp
jecxz
addr16
xchg
lods
cmc
dec
jp
push
mov
inc
add
cmp
add
or
pop
retw
faddl
fs
test
das
imul
push
imul
or
popa
movsl
pop
test
dec
jne
xlat
insl
leave
mov
mov
push
outsl
cmp
jb
mov
or
jns
push
outsl
sbb
xchg
mov
inc
dec
inc
push
push
push
mov
dec
add
xchg
xchg
shll
imul
pusha
sti
fisttpll
popa
cmp
rcrl
iret
push
outsl
insb
jne
lock
xchg
pop
insl
les
in
sub
loopnew
outsl
inc
adc
insb
push
xor
push
addl
xchg
popa
dec
push
or
sub
ss
cmp
jp
dec
xchg
sub
xlat
jl
dec
loopne
push
jbe
pop
rcrl
push
push
dec
notb
daa
pop
lret
dec
fwait
stc
pop
xchg
inc
vmwrite
rol
inc
loopne
add
jnp
popa
jne
adcl
pop
dec
dec
and
push
jns
add
fimull
xor
sbb
lods
hlt
leave
imul
iret
jnp
fs
adc
leave
xchg
jl
sti
inc
jae
push
insb
sub
push
scas
push
push
fstpt
jo
sub
ret
jle
or
je
xchg
fcmovbe
jae
sbb
mov
adc
jno
mov
push
cmc
dec
push
addr16
rcr
or
pop
pusha
fsubrs
outsl
frstor
jne
pop
popa
repz
inc
cltd
sbb
xchg
dec
imul
jno
insb
or
push
adcb
lds
dec
fs
jae
push
inc
int3
sub
es
jo
push
mov
sbb
dec
gs
mov
sbb
ret
jnp
push
cmp
pop
test
adc
out
int
xor
mov
adc
add
adc
mov
pop
gs
and
cltd
lods
mov
add
mov
adc
or
add
xlat
ret
leave
ret
or
fdivs
jo
jb
in
fwait
inc
fwait
dec
add
cli
arpl
imul
push
adc
dec
mov
jae
arpl
pop
xor
dec
jae
cltd
in
jo
xor
or
lods
sub
inc
or
imul
push
push
popa
popa
inc
inc
out
jae
jbe
mov
cmp
insb
addr16
or
adc
int
push
fiadds
cmp
insb
ret
push
add
pop
lods
mov
or
mov
insl
lcall
mov
jo
int
fsts
fs
sbb
sub
ret
mov
mov
fs
popa
sbb
and
and
mov
pop
lods
inc
or
icebp
roll
inc
mov
adc
inc
cltd
inc
mov
jnp
cmpsl
clc
jg
add
add
add
add
or
lcall
pop
fs
lock
add
ja
sbb
add
test
sub
push
mov
repnz
in
mov
push
jp
and
sub
adc
js
in
xor
push
je,pn
sub
fisubs
jmp
cmpsl
and
out
pusha
cs
je
sbb
and
daa
inc
shrb
jb
mov
daa
jl
ljmp
insb
sub
inc
pop
mov
add
add
add
add
add
add
add
add
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
