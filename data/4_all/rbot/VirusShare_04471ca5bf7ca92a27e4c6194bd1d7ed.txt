lds
lds
into
aas
subl
inc
xor
incl
movsb
jl
dec
insl
or
jns
push
mov
xchg
into
in
adc
test
push
aaa
bound
arpl
sar
rorb
xchg
shrb
pushw
fwait
jmp
mov
jg
sbb
aas
or
nop
enter
cli
cwtl
mov
stos
and
cmp
mov
mov
loopne
xor
xchg
cld
mov
push
loop
inc
in
sarl
sbb
popf
cld
add
cmc
mov
inc
inc
mov
sub
mov
jb
jns
pop
ret
pop
mov
push
mov
pop
je
outsb
fcoml
insl
cmp
cwtl
pop
mov
and
rolb
and
add
sbb
in
sar
mov
mov
int3
test
testl
xor
mov
add
enter
std
clc
mov
mov
mov
cmp
pop
jae
popa
lret
and
jb
add
cs
cmpsl
ret
xor
fcmovne
or
mov
lods
jge
or
dec
jmp
popa
out
mov
or
adc
lods
add
enter
addr16
mov
iret
addr16
gs
push
lds
xchg
mov
pop
icebp
ret
xor
test
popf
imul
sti
ss
mov
jnp
add
movsb
xor
pop
jae
lret
mov
dec
cltd
sub
mov
add
ljmp
andl
push
addb
push
cmp
mov
shlb
mov
xor
sub
cmpsl
push
lods
cld
and
aam
pop
insb
xchg
int3
scas
addr16
lret
push
or
xor
out
mov
inc
call
std
xchg
out
data16
iret
jb
in
push
insl
inc
dec
insb
mov
imul
movsl
mov
mov
into
push
fiadds
push
pushf
sahf
ds
fsubs
mov
jle
and
xchg
fwait
or
cltd
pop
xchg
subl
jns
jne
inc
push
inc
xor
stc
mov
insb
cmp
es
adc
dec
leave
dec
push
push
aam
lds
js
xchg
jmp
mov
lds
pushf
push
jecxz
nop
mov
lcall
jae
mov
xorb
iret
sub
inc
int3
test
push
dec
mov
cmp
mov
lds
push
add
js
fwait
or
jns
inc
leave
pop
pop
jecxz
rol
scas
addl
cmp
std
daa
fs
jae
add
pop
sti
insb
mov
sbb
xor
pushf
stos
mov
mov
mov
add
xchg
dec
rcll
and
mov
lahf
scas
jns
mov
mov
lahf
lods
ljmp
cmp
mov
pop
xor
cltd
pop
test
ja
fcmove
dec
ret
jmp
and
outsb
pop
mov
lock
inc
and
jbe
fstps
sub
and
aad
mov
mov
dec
cmp
imul
push
xlat
adc
pop
aaa
pop
sub
jns
or
outsl
ja
jne
ja
cmp
inc
jns
xor
pop
add
sub
notl
push
test
dec
sbb
adc
lds
xchg
sbb
mov
jg
mov
push
push
push
cmp
insl
jp
pop
xchg
fimull
mov
ret
sbb
mov
dec
add
int
rcl
je
or
mov
dec
call
jne
into
lds
popa
xchg
xchg
add
cld
icebp
out
xor
xor
xor
and
fwait
mul
ljmp
stos
lds
pop
mov
adc
jle
dec
lahf
aad
imul
jp
popw
movb
sub
arpl
in
xchg
aas
fucomp
mov
sub
sahf
sbb
sahf
sbbb
fdivrl
movl
fwait
cmpsb
insb
test
in
mov
push
es
loope
fnstsw
add
mulb
jne
aas
push
xor
lret
bound
dec
stc
or
mov
push
xchg
add
das
mov
mov
sub
out
into
gs
ret
pop
mov
mov
cld
or
aaa
mov
mov
pop
ds
cmp
ja
mov
mov
cmp
adc
cmpsl
mov
sbb
dec
leave
and
lret
adc
sbb
dec
in
insl
cmp
imul
ljmp
std
add
sub
outsb
add
xor
loopne
cs
addr16
sub
sub
nop
fistpl
ja
jno
cmp
jmp
or
fst
mov
adc
push
out
pop
gs
dec
adc
mov
sbb
ds
stos
sub
jp
pop
pushf
pushf
xchg
das
inc
jecxz
lds
pop
shl
out
and
add
and
lea
inc
mov
sub
jns
add
mov
jnp
fs
add
rclw
dec
shrl
jl
das
int3
dec
popa
aam
sub
adc
pusha
adc
jmp
sti
cmp
xchg
xor
inc
add
insl
jle
or
adc
ret
lret
mov
jno
jl
jmp
scas
xchg
or
loopne
add
or
shl
lret
cmp
or
inc
jbe
lret
and
dec
or
adcl
outsl
mov
lcall
pop
xchg
or
add
sbb
mov
xchg
loop
out
stc
add
je
out
ljmp
dec
and
sti
push
jmp
fs
sub
pushf
test
int3
std
int
hlt
dec
insb
pop
inc
cli
add
into
push
test
pop
sub
inc
test
cmp
fs
pop
hlt
out
test
xchg
je
cmp
test
lret
mov
jp
xchg
das
aas
cs
cmc
dec
adc
imul
gs
xchg
cmp
ret
mov
das
jle
rorb
adc
dec
stc
inc
jo
mov
push
loope
lods
pop
cs
test
insl
fcom
js
mov
cmp
sbb
push
popa
pop
mov
incb
into
gs
pop
lods
dec
pop
push
shll
cmp
mov
mov
sbb
push
std
adc
notl
fdivs
jne
push
das
xchg
sub
stos
mov
inc
jbe
sbb
mov
es
fadd
adc
jge
cmp
aas
dec
mov
cmp
jecxz
mov
scas
mov
sti
xor
pop
mov
js
xor
push
xor
lret
fadds
clc
jo
adc
int3
hlt
mov
les
cmpsb
push
mov
pop
stos
add
mov
inc
mov
daa
mov
les
adc
add
cld
sti
xor
fwait
xchg
ret
sub
xchg
mov
pop
nop
lods
mov
adc
xchg
decb
mov
xchg
aaa
jge
inc
xchg
adc
jmp
es
fcomps
clc
and
mov
adc
cmc
imul
repz
xor
dec
sub
aam
es
jbe
imul
fiadds
lahf
int3
div
push
lret
mov
jge
je
cli
popf
push
push
test
add
xchg
sbb
shlb
sbbl
icebp
mov
jle
push
xorb
dec
test
imul
xchg
lock
inc
sbb
test
mov
inc
mov
call
inc
dec
cmp
ds
jno
std
idivb
jno
xchg
out
cmp
arpl
add
cli
ret
mov
scas
out
add
enter
xor
cmpsb
push
rorl
in
dec
in
sbb
aad
adcl
ljmp
jl
xchg
add
scas
jge
nop
lret
lahf
jbe
jb
add
outsl
gs
fsubrl
xor
dec
inc
lret
data16
stc
cmp
add
dec
les
adc
pop
mov
jns
adc
pushf
iret
dec
popa
pop
gs
rclb
cmp
sub
imul
pop
sub
mov
jmp
and
aam
insl
scas
cmpsb
fistpl
movsb
xchg
mov
lods
rcl
jb
mov
push
lods
leave
dec
jmp
and
in
lret
cmp
adc
sub
test
cld
cld
jg
add
jmp
jg
mov
jb
jecxz
ljmp
sti
mov
les
push
push
test
mov
rol
in
xchg
call
int
jg
and
and
in
mov
xor
mov
lahf
mov
pop
sbb
sbbl
ja
cmpsb
je
or
xchg
mov
popa
stc
or
or
popa
test
int3
loopne
ret
fsubrl
mov
xor
mov
inc
cmp
fstpl
inc
and
and
xchg
inc
pop
dec
out
gs
ror
sub
mov
jg
add
and
add
mov
inc
xor
xor
jge
jbe
inc
int
lcall
inc
xor
add
leave
push
inc
xchg
out
or
dec
rep
push
cmp
jmp
and
ja
lea
mov
or
jnp
cmpsl
leave
jle
fildl
inc
orb
xor
outsl
jg
pop
sbb
lret
scas
mov
stos
pushf
fcomps
fstl
sahf
lods
movsb
mov
xor
push
xor
movsb
cmc
lret
in
scas
out
sub
lret
insb
pop
mov
mov
sub
sbb
aaa
sbb
mov
add
xlat
pop
and
pop
lahf
test
jp
aad
test
mov
sbb
add
iret
adc
scas
jmp
repz
scas
and
popa
lock
push
adcb
dec
dec
sub
lcall
cmp
ret
lods
jnp
sub
jbe
mov
les
dec
pop
jo
jno
movb
out
push
or
xchg
rcrl
xchg
xchg
cmp
movsl
xchg
pop
jae
mov
cmp
iret
into
sbb
cmpsl
dec
jle
fildll
mov
ja
mov
shl
sub
cmp
out
cmpl
movsl
xor
cmpsl
pop
lcall
push
sbb
ret
popf
add
xchg
push
dec
sub
or
gs
gs
push
js
or
incl
pusha
fidivrl
xor
mov
pop
scas
aam
popf
addr16
data16
repz
test
stos
idivl
jge
in
adc
pop
pushf
push
adc
and
mov
movsb
xchg
sbb
sub
or
lds
dec
ficoms
cmp
pop
rclb
sahf
sub
andl
movsb
stc
and
cwtl
and
add
pop
arpl
ljmp
mov
inc
add
scas
rclb
sub
push
cmpsb
push
cli
push
sbb
je
movsb
push
aas
and
mov
rcrb
sub
call
mov
insb
arpl
gs
push
and
mov
or
jg
das
rorl
jae
fidivl
out
fsubs
rcr
into
add
or
aam
addr16
andl
xchg
add
xchg
lods
inc
scas
or
pop
out
mov
or
and
add
inc
jb
sub
shll
pop
inc
cmp
xor
sti
jae
cmp
lcall
xlat
insb
mov
and
divb
xchg
shl
and
es
test
lcall
faddl
xchg
mov
push
mov
sbb
xor
ss
cmp
sub
call
jae
daa
je
repz
jle
shlb
insl
adc
hlt
pop
sbb
dec
cltd
xchg
add
in
inc
mov
jp
sbb
in
scas
add
lea
mov
xchg
sti
in
scas
test
inc
inc
push
inc
sbb
nop
sub
or
inc
sahf
fwait
call
or
mov
fwait
out
fwait
push
xor
popa
xchg
pop
repz
outsb
mov
pop
cmpsl
dec
xchg
sar
push
mov
and
ror
hlt
repnz
je
adc
lcall
sbb
dec
push
xchg
jg
scas
or
pop
inc
cmp
jno
testb
fiaddl
mov
xchg
and
jge
lret
aas
xor
mov
adc
sub
cmp
xlat
push
ror
adc
dec
mov
mov
jb
stos
push
cmc
dec
xchg
sub
pop
in
shr
pop
cmc
xor
call
sahf
xor
iret
test
or
ficoms
sub
pop
or
test
fstl
mov
jo
dec
adc
call
jb
pop
stos
out
neg
mov
mov
and
sub
mov
in
into
lret
les
mov
fiadds
jb
cli
movhps
adc
inc
in
xchg
sti
in
mov
or
imull
xchg
lahf
ret
cld
jp
pop
and
and
pop
int3
loope
and
nop
aad
lock
popf
or
pop
push
sti
imul
ret
test
inc
push
test
shrl
dec
roll
push
xor
mov
enter
pop
xor
les
hlt
aam
xchg
pop
and
lret
sbb
outsl
lret
int
sub
out
xor
xchg
pushf
jnp
xor
mov
xchg
lcall
xchg
loop
push
inc
xchg
mulb
inc
mov
mov
or
das
pop
dec
daa
scas
cmpsb
aaa
imul
dec
jp
outsl
cmpsb
and
xor
cmpsl
jecxz
loope
movsl
insb
dec
add
cmp
aad
jge
pop
fimuls
push
fdiv
fstl
filds
push
push
inc
inc
fisttps
incl
push
adc
jae
loope
xor
int3
mov
mov
pop
jge
enter
xchg
rcrl
cwtl
xchg
pushf
fcmove
sub
cli
fistpl
mov
popa
xchg
mov
jp
nop
mov
inc
in
xor
testl
mov
pop
mov
ljmp
jmp
imul
xchg
inc
xor
arpl
leave
or
pop
mov
mov
xor
scas
mov
into
lret
cmp
push
mov
fisttpll
js
xor
cmc
iret
cs
xor
mov
pusha
nop
divb
in
shll
sbb
sbb
shlb
mov
add
and
xchg
into
inc
mov
fnsave
inc
fs
push
dec
aaa
mov
lock
pop
push
arpl
fimull
mov
mov
and
sahf
sbb
adc
mov
fmuls
xor
jae
or
out
cltd
setbe
xor
mov
jg
adc
mov
rcr
jnp
pop
and
scas
xor
and
sti
jb
xchg
jp
xchg
ficoms
mov
or
mov
or
dec
push
dec
push
push
aad
es
xor
inc
mov
xlat
mov
push
or
mov
push
dec
sub
pop
dec
int3
arpl
xchg
movsl
sub
mov
lcall
xchg
cs
out
or
add
enter
cmp
adc
dec
leave
jmp
cmp
push
shll
adc
js
push
incb
jo
pop
fisubl
ror
pushf
xchg
lds
nop
mov
jo
popa
jb
or
add
icebp
pop
cs
dec
gs
lcall
fisubrl
divl
inc
jne
mov
cli
mov
mov
jg
loopne
xchg
xchg
int3
adc
notb
push
test
addb
orl
rorb
push
ds
cmp
into
and
lahf
jbe
push
adc
xchg
jmp
fadd
xchg
jmp
push
push
pop
and
cli
shl
sbb
ja
and
aaa
out
xchg
or
in
and
in
xlat
inc
sub
adc
push
mov
mov
adc
xor
out
outsl
lea
call
enter
mov
sti
scas
mov
xchg
scas
shll
fwait
lods
mov
aad
lods
fldt
aam
ds
add
sub
push
dec
loopne
insb
jg
out
push
lret
adc
aad
leave
aam
aam
xchg
or
outsb
in
xor
movsb
sbbl
jne
push
xchg
insb
xchg
mov
arpl
mov
xchg
mov
sub
push
inc
or
inc
dec
pushf
xor
push
jmp
xchg
imul
xlat
das
mov
loopne
out
mov
ja
or
push
xchg
adc
xor
xor
data16
enter
and
xchg
mov
push
insl
mov
xchg
jns
jnp
gs
mov
loopne
ja
fs
push
lret
jecxz
push
cmp
mov
and
jecxz
mov
iret
mov
movsl
mov
sub
mov
lods
jmp
shrl
sbb
xchg
ljmp
adc
adc
scas
dec
mov
sbb
and
ror
idivb
nop
sub
nop
sysexit
mov
inc
jle
scas
setno
fidivrs
pop
js
lods
add
or
mov
jmp
lret
hlt
into
jbe
mov
mov
sub
xor
mov
jbe
mov
mov
dec
pop
dec
insb
pushf
cmpsl
add
icebp
adc
lds
and
cmp
and
sahf
cwtl
adc
nop
pop
gs
stc
pop
pop
push
jo
pop
rol
sahf
inc
dec
pop
xchg
adc
jecxz
sahf
and
mov
xchg
xchg
pushf
imul
add
ret
inc
jne
dec
icebp
roll
dec
aas
fdiv
sub
and
js
shll
scas
sbb
push
cs
scas
xchg
movsb
push
xchg
sarl
cmpsl
push
leave
jne
lret
stos
filds
cwtl
jne
inc
jb
jmp
cmp
add
sahf
xor
mov
mov
and
aam
bound
mov
lret
lds
in
mov
push
inc
mov
jae
jnp
test
stos
in
push
pop
push
fisttpl
cli
jg
inc
movsl
mov
popa
sbb
cmovp
pop
pusha
mov
jle
js
sbbl
shr
xchg
ss
or
popf
sub
movsl
ficomps
bound
inc
pop
fbstp
push
jno
loopne
push
or
sub
push
xchg
lock
das
jbe
into
fsubs
insl
insb
and
das
es
mov
sub
stos
fisubrl
mov
jp
movsl
push
inc
lods
ret
mov
les
pop
mov
push
mov
jmp
mov
push
es
xchg
push
or
stc
pop
lods
imul
add
int
sbb
push
inc
repnz
shrl
inc
std
cld
inc
les
jo
lods
sbb
mov
pop
fdivl
xor
rcr
sub
roll
test
call
sbb
lea
xor
mov
add
dec
pop
dec
out
sbb
mov
cmpsl
mov
cmp
and
add
jo
loopne
or
xor
pop
stos
xchg
mov
sbb
lret
jo
bound
imul
mov
xor
mov
xchg
out
push
enter
and
cwtl
retw
mov
mov
inc
ja
pop
jmp
call
daa
sub
xchg
adc
dec
cmp
lahf
lods
int3
mov
mov
dec
adc
push
push
call
inc
xchg
mov
cmp
lods
loopne
dec
stc
das
push
ds
in
lods
bound
jge
push
sti
mov
or
in
inc
pop
outsl
lahf
int3
fldt
pop
repz
in
mov
ja
jns
lods
pop
pop
mov
cs
push
ret
dec
mov
scas
pusha
and
arpl
mov
adc
add
inc
aas
mov
inc
out
adc
xchg
int
enter
jge
inc
nop
inc
pop
scas
pop
mov
aad
sahf
push
popa
icebp
repnz
das
icebp
insb
mov
add
sbb
or
inc
out
scas
movsb
mov
insl
dec
xor
addr16
mov
dec
sbb
movsb
xchg
cld
ljmp
sub
addl
les
add
and
mov
push
out
js
int
cmpsb
js
lret
cmpsl
cmp
dec
sub
in
lea
mov
mov
pop
int
and
sbb
sahf
inc
jmp
imul
popa
inc
inc
out
push
lock
xor
cli
loope
sub
loope
arpl
lret
pop
mov
jo
inc
cmp
xor
stc
xlat
inc
aas
leave
pop
xchg
sbb
sub
aam
add
xor
cltd
lea
daa
mov
test
ret
sbb
scas
and
inc
cli
pop
aaa
add
mov
cmc
call
sub
mov
call
dec
fbstp
push
add
mov
xor
xchg
jle
jl
sub
xchg
mov
cmpsb
fwait
jo
pop
dec
cmc
jecxz
and
inc
cmp
jg
inc
xor
decb
mov
icebp
imul
jbe
pop
pop
fs
ds
lret
push
in
jns
sub
data16
fwait
scas
repnz
mov
mov
mov
or
cld
mov
pop
lcall
push
ficomps
lret
das
pop
push
pop
and
xchg
movsl
inc
pop
fs
jg
sub
mov
dec
and
or
ja
movsl
out
dec
mov
push
jmp
imul
cld
mov
push
enter
clc
cwtl
mov
aas
fidivs
pop
aam
sub
pop
nop
mov
or
repnz
cmp
add
jg
ja
xor
mov
xor
enter
rcll
adc
dec
fs
fs
xchg
bsr
enter
in
lods
pushf
mov
clc
push
sub
push
mov
push
adc
adc
pop
pop
scas
imul
xor
inc
mov
hlt
pop
stos
pop
inc
lods
sub
add
sbb
mov
jnp
outsl
xor
add
mov
repz
pop
pusha
sub
mov
flds
ret
fdivl
add
push
xlat
lret
and
cmp
jecxz
insb
jno
pop
enter
test
sbb
mov
fnstsw
mov
dec
test
pusha
pop
bound
stos
and
pop
push
inc
sub
into
mov
stos
scas
imul
int
pop
hlt
push
dec
sbb
jae
iret
cltd
fcoml
push
lea
outsb
push
push
mov
mov
jle
or
orl
aaa
sbb
inc
xchg
sbbl
inc
test
push
mov
or
and
mov
mov
jmp
fwait
inc
inc
loop
jae
push
sbb
mov
inc
xor
mov
aas
loope
xor
sti
scas
ss
mov
sub
not
lock
sti
into
out
adc
xchg
sarb
out
js
pop
xor
je
call
xchg
sub
xchg
fsubrl
jno
ret
xchg
roll
sbb
mov
jnp
icebp
mov
sbb
xchg
popa
les
ja
lret
lcall
outsb
pop
mov
aad
inc
add
push
lcall
mov
aaa
test
cmp
call
fnsave
dec
ret
xorb
lods
sbb
lods
ficomps
mov
mov
stos
cmp
lds
lods
xor
repnz
sub
orb
testl
clc
lea
jae
sub
js
pop
arpl
out
loopne
adc
test
adc
pop
xchg
sbb
in
sub
in
pop
or
jno
sbb
fidivrs
loopne
or
bound
jle
mov
lcall
dec
add
pop
out
cmpsl
and
dec
mov
jns
data16
dec
std
dec
hlt
or
mov
cmp
adc
mov
push
fbld
xchg
pop
ret
mov
stc
inc
jne
cltd
in
or
pop
mov
add
mov
add
sub
dec
rorl
xchg
cmp
in
dec
les
lcall
cwtl
inc
mov
cmp
enter
pop
into
mov
mov
sbb
cmpsb
hlt
mov
xor
stos
pop
pop
cmp
movsb
adc
sbb
push
mov
mov
xchg
push
scas
iret
add
pop
lds
and
push
and
or
mov
inc
push
loope
in
inc
lods
mov
test
hlt
pop
pop
lea
dec
pop
mov
out
cs
clc
pushl
pushf
insb
ret
lds
sub
inc
leave
movsb
lahf
scas
mov
rcr
jne
lock
cmp
loope
cmp
xor
xchg
xchg
add
xchg
inc
xchg
push
loopne
mov
and
fcompl
loopne
jbe
xor
subb
in
repz
repz
fwait
sbb
call
repnz
jge
jbe
adc
cmpsb
hlt
test
std
cmp
push
cmp
fisttps
mov
and
fsub
ds
in
dec
test
push
ret
push
stos
movsl
sbb
push
sub
mov
adc
xor
cmp
sbb
cmp
testl
adc
cmpsl
add
cwtl
iret
lcall
fstpl
int
cmp
aam
pop
out
mov
dec
adc
fdivrl
dec
andl
cmp
mov
mov
xchg
mov
out
mov
ret
ds
and
gs
mul
mov
test
xchg
negl
gs
loop
pop
loop
lret
jg
pop
addr16
push
inc
pop
ror
jge
js
xchg
and
fnstcw
push
cs
push
xor
xor
in
lret
rol
lea
inc
mov
xchg
push
cmc
cwtl
and
shll
mov
rclb
push
add
stos
ja
mov
lock
mov
sub
jle
sti
push
arpl
xor
xchg
xor
or
pop
cs
add
jbe
jnp
pop
push
sbb
dec
mov
or
adc
outsl
or
in
scas
mov
sti
mov
cmp
adc
in
push
xchg
push
lret
stc
xor
fld
or
hlt
mov
cmp
out
or
inc
mov
mov
mov
scas
cmp
mov
outsl
js
out
sbb
and
jbe
push
jns
add
sbb
fwait
or
sub
cmpl
sbb
push
pusha
daa
pop
stc
push
xchg
dec
dec
and
lret
aad
shlb
add
push
xchg
cmp
jno
mov
pop
les
sbb
xchg
pop
movsl
add
adc
xchg
jae
sbb
aam
jp
mov
xchg
shrl
lahf
aas
stc
jbe
or
lock
dec
data16
aam
loope
inc
jle
ljmp
or
lret
pop
dec
sub
jne
ficoml
stos
push
insl
mov
cmp
scas
xor
clc
lcall
or
in
dec
inc
icebp
xor
or
lock
aad
mov
mov
add
or
jne
xor
das
test
aam
sbb
out
imul
dec
out
arpl
dec
clc
ret
adc
cmp
push
xchg
xchg
test
mov
in
cmpsb
sbb
enter
cmp
xlat
xchg
sbb
jecxz
cmp
movsl
and
pop
xchg
and
dec
cltd
data16
xchg
mov
pop
dec
repz
cmp
inc
dec
test
lret
jno
shll
mov
gs
rol
xor
mov
outsl
ljmp
adcl
mov
test
xor
aad
xchg
icebp
xchg
dec
hlt
in
lahf
out
out
inc
hlt
dec
das
enter
pop
xlat
les
out
cmp
insb
adc
mov
cwtl
roll
push
das
mov
fsubs
cmpl
mov
xchg
cmp
push
xchg
int3
sbb
subb
xor
push
leave
dec
lods
out
ljmp
popf
lret
shll
cmc
loop
daa
or
or
data16
loope
pushf
lret
gs
add
mov
sbbb
out
enter
jb
lods
loop
cli
fcoms
sub
or
icebp
mov
mov
jbe
fidivs
inc
jl
jle
fwait
test
movsb
mov
xchg
mov
fisubrl
sbb
cld
mov
fwait
sbb
lret
lahf
repnz
out
push
inc
roll
push
push
popa
inc
adc
test
adc
out
xor
call
mov
hlt
popf
mov
add
sub
cmpsb
stos
imul
pop
pop
pop
ds
lret
test
and
sub
push
xor
xor
rcr
rorl
mov
fwait
mov
xor
pop
daa
jb
mov
bound
adc
lret
lds
lods
mov
jecxz
movl
push
pop
mov
jl
jg
dec
out
insl
stos
fwait
mov
sub
add
fstps
push
push
or
cltd
or
jmp
std
or
adc
or
mov
dec
mov
sbb
mull
inc
test
pop
std
sbb
das
sbb
in
int
jnp
push
cmp
fildl
int
dec
aaa
rclb
iret
data16
pop
add
and
decb
push
adc
mov
cwtl
or
mov
lahf
repnz
or
ljmp
sub
popa
mov
sub
pushf
jns
xchg
lods
fwait
movb
shll
ret
fs
sub
repz
xchg
cmpl
fimull
adc
incl
push
sbb
dec
popf
fcmovnu
add
add
pusha
lret
sub
ret
enter
mov
xor
xchg
xchg
cmp
std
mov
mov
out
or
cmpsl
scas
fists
xchg
pop
pop
xchg
cs
sbb
jle
mov
pusha
mov
sub
lods
and
push
pushf
pop
inc
cmpsl
out
jl
mov
jae
jb
gs
imul
daa
fwait
inc
push
pop
ret
push
repnz
loopne
inc
mov
pop
sbb
cwtl
imul
mov
jae
sub
popf
add
in
dec
rep
xchg
sahf
dec
adc
out
fsubp
pop
add
shrb
jmp
fdiv
push
scas
pop
jb
xor
loopne
xor
leave
iret
into
aam
lea
scas
filds
mov
out
pop
repz
loope
fisubs
push
xor
xor
lods
mov
sub
sbb
fsubs
sub
xchg
lds
in
lds
cmpsl
jne
stc
ja
cmp
js
std
inc
sub
xlat
inc
cwtl
loope
insb
fs
xor
lods
scas
test
repnz
mov
imul
pushf
jge
pushf
sbb
outsl
adc
inc
enter
mov
xchg
ret
push
xchg
jecxz
xchg
xchg
jns
es
xor
xor
bound
loopne
xchg
mov
inc
test
pop
mov
jg
negl
and
insb
outsb
xlat
dec
loop
mov
insl
enter
push
inc
pop
movsb
push
fdivl
pop
and
jmp
iret
cmp
push
mov
repz
mov
popa
daa
pop
fldenv
push
in
mov
cmp
lds
out
test
sub
xchg
dec
mov
fdivs
loope,pt
push
imul
sub
sarb
inc
fcompl
xchg
imul
enter
push
xlat
or
stos
lods
jle
sbb
or
mov
mov
push
shr
pop
cmc
add
mov
fstpt
jg
xchg
sub
testb
dec
mov
je
jl
or
rcrb
and
lret
scas
rorb
je
leave
fstpt
cmp
test
jbe
xor
es
xor
jmp
sub
test
inc
pop
sar
js
fwait
ret
mov
dec
cmpsl
sbb
aaa
adc
sbb
sahf
imul
mov
or
arpl
inc
pop
aad
or
mov
sbbl
decb
pusha
test
aad
and
int3
les
ja
hlt
sbb
xchg
mov
andl
inc
divb
xchg
mov
sbb
or
nop
jb
aam
sbb
test
test
jae
add
push
inc
shlb
mov
dec
ljmp
in
out
out
push
mov
jae
addr16
enter
aam
mov
out
andb
and
mov
xlat
push
repz
add
xorw
or
dec
outsl
xchg
leave
call
dec
fwait
pop
je
popa
fwait
testb
cltd
scas
push
mov
addb
adcl
or
stc
lds
ret
ljmp
movsl
jle
daa
cmp
push
cmpsl
or
movsb
and
jnp
sub
das
cli
mov
dec
adc
inc
leave
pushf
movsb
pop
sub
xchg
and
mov
shll
lcall
jbe
cmpb
push
pop
push
sbb
dec
dec
leave
and
or
mov
inc
loopne
test
or
or
xchg
rcrl
fdivrs
cltd
outsl
gs
imul
cli
or
pushf
xchg
idiv
loop
push
in
cwtl
in
push
cmp
inc
stos
pop
mov
xchg
adc
xor
add
int
movsb
jge
adc
mov
jg
xchg
sarb
adc
pop
hlt
jno
out
cmp
dec
in
cmpsb
fdivl
push
jno
dec
arpl
idivb
mov
fbld
call
lds
into
movsb
fnstcw
std
sub
mov
or
repnz
dec
sbb
lcall
sbb
loope
ljmp
pop
shr
jg
lock
icebp
int
out
mov
popa
icebp
in
test
daa
xor
cld
dec
jae
push
lret
lahf
je
ja
mov
insl
jb
xor
and
lods
test
cmp
std
test
mov
mov
lods
cmc
leave
test
pop
sub
mov
jp
and
dec
in
dec
aaa
test
xor
stos
and
pop
mov
mov
repz
shl
pop
push
or
rcrl
iret
or
dec
ret
mov
cwtl
pop
cli
das
in
ret
nop
mov
mov
popa
sbb
pop
or
inc
rcl
jp
mov
pop
scas
dec
add
or
out
iret
sbb
jle
adc
sti
add
jmp
push
ds
mov
in
xchg
lods
ljmp
daa
insl
adc
and
pushf
adc
pushf
or
xor
pop
dec
inc
dec
fwait
xlat
je
and
sbb
adc
fs
jmp
push
add
pop
punpckldq
jp
inc
sbb
mov
sub
dec
scas
push
mov
mov
sbb
iret
mov
outsl
jno
cmpsb
outsl
js
cmp
js
das
scas
lahf
ss
cld
jnp
out
push
in
cmpsb
mov
ret
adc
or
out
je
add
imul
data16
dec
stos
mov
cmpb
jne
imul
sbb
push
jle
cmp
jl
jmp
cmp
xor
icebp
mov
int3
mov
adc
xor
sub
mov
enter
push
les
dec
push
js
inc
loope
jmp
popf
aaa
das
fwait
test
mov
jl
adc
push
dec
mov
sub
and
into
xchg
aaa
mov
out
push
ljmp
mov
sbb
mov
xlat
int3
jl
dec
xor
cmc
adc
add
leave
int
mov
cmp
cld
dec
mov
mov
add
push
jge
pop
pop
sub
jp
int3
xchg
int
sbb
lcall
inc
mov
shrb
in
lahf
add
push
xlat
daa
mov
mov
cltd
xor
cli
inc
xchg
mov
pop
pop
sub
enter
sbb
dec
mov
hlt
cs
outsl
jmp
sbb
sbb
adc
adc
jne
cmp
lcall
mov
mov
repnz
cmp
dec
mov
js
xor
and
jns
cmp
sub
pop
insb
xchg
movsl
aas
lds
insb
ljmp
push
icebp
enter
mov
sbb
mov
mov
and
lret
mov
icebp
fnstenv
push
insl
and
faddl
or
mov
lock
in
dec
icebp
filds
xchg
out
pop
mov
inc
mov
shrl
xchg
adc
and
push
les
out
fistps
push
jecxz
arpl
stc
mov
lcall
xorb
mov
push
ss
push
jg
test
ret
jbe
movsb
mov
xor
cmp
cmpsl
push
popa
and
sbb
mov
je
xchg
mov
loope
daa
xor
xor
in
or
je
les
test
or
das
fucom
push
sub
aad
xor
in
mov
aad
aad
fucomi
xor
mov
iret
mov
decl
inc
outsb
pop
sub
repz
pop
lea
push
inc
sub
push
or
bound
je
iret
mov
xor
mov
adc
jecxz
neg
cmpsl
pop
pushl
mov
sub
lods
mov
sub
lods
adc
push
jecxz
adc
not
or
mov
jp
xchg
jbe
cmp
jge
cltd
ss
pushf
sub
or
rcrl
test
mov
je
imul
dec
hlt
mov
jmp
add
push
fsub
jle
cwtl
fsts
out
cmp
add
push
push
mov
insl
lahf
shll
xlat
push
xchg
stos
cmp
loopne,pt
pop
decb
sbb
lods
mov
test
filds
incb
lret
test
cmc
mov
sti
ret
out
mul
sub
aad
arpl
js
xlat
iret
nop
lods
cmc
cmp
lock
inc
mov
push
or
je
mov
mov
xor
cwtl
movl
cli
repz
cmp
mov
xchg
mov
sbb
mov
cli
xor
adc
add
iret
adc
jmp
or
lea
mov
call
jecxz
mov
popf
jb
cs
jb
nop
sti
dec
loope
lods
jge
mov
mov
lods
addb
mov
xchg
jb
push
mov
cmp
stos
data16
ljmp
inc
or
sti
xchg
inc
add
dec
adc
addr16
mov
sbb
lds
mov
inc
fsubrs
lcall
jno
call
mov
cld
cli
faddp
leave
jno
cmpsb
rcr
or
sub
aam
cmp
mov
dec
adc
or
fimuls
sbb
mov
add
jo
push
lret
mov
inc
adc
or
out
dec
xlat
aaa
push
adc
cmp
push
mov
addr16
leave
andnps
xchg
adc
in
dec
pusha
stc
lds
jl
pop
inc
jb
clc
stos
clc
push
icebp
mov
and
mov
rorl
pop
popl
rcll
movsl
or
scas
aam
sbbb
mov
aad
or
xlat
xor
movsb
mov
mov
and
mov
ja
hlt
mov
pop
mov
mov
das
das
cmp
mov
ljmp
inc
ret
sub
in
test
mov
iret
fidivrl
movsb
xor
cltd
and
cmpsl
inc
xchg
cmp
xchg
les
or
mov
jp
dec
sbb
jge
fdivs
leave
cmp
lods
sub
inc
adc
xchg
cmp
mov
adc
push
sbbl
cmp
cli
adc
repz
pop
xchg
dec
out
loopne
cmc
adc
addl
mov
mov
aaa
sbb
lock
dec
movsb
fcom
test
sbb
jg
cmp
push
aaa
popa
mov
fsub
inc
cwtl
xchg
push
loope
push
cmp
pusha
xchg
mov
pop
push
lcall
sub
adc
sbb
enter
ret
loopne
cmpsb
fstps
test
int
jns
jns
adc
icebp
testl
outsl
adc
dec
jo
fdivp
cmpsb
mov
loopne
cwtl
je
jnp
xchg
add
push
add
imul
and
mov
xchg
pop
sub
fmuls
rcr
imul
lahf
imul
pop
std
jae
cmp
sti
mov
std
inc
xchg
xor
bound
xor
inc
xlat
xchg
bswap
mov
jmp
and
insl
sbb
fsubr
push
push
or
mov
sarb
addr16
push
mov
ss
jns
addr16
dec
loop
adc
or
addr16
xor
lret
dec
notl
addb
dec
mov
fisttpll
ja
mov
xchg
push
mov
fcoml
sub
jno
jno
fucomip
mov
divl
jecxz
jp
push
jge
mov
stos
lcall
xor
push
int3
or
xchg
inc
push
mov
insb
pop
cmp
cmc
mov
fwait
add
push
rcrb
pusha
sub
lret
lret
std
and
cmpl
addr16
jge
ja
es
jo
rcr
pop
cmp
dec
out
mov
pushf
xor
mov
mov
fucomi
test
movsl
insl
mov
lock
xchg
ret
in
hlt
movb
sahf
ja
lret
test
cmp
arpl
jns
or
es
psrld
mov
subl
cmpsl
and
lock
xchg
in
lret
enter
pop
dec
aas
mov
mov
aad
xor
ret
bound
and
xor
testb
call
enter
sub
lods
cmp
add
lret
bndldx
int
jp
jne
sbb
add
andl
and
jmp
shll
js
cltd
fldl
mov
in
bound
jns
xor
imul
mov
ljmp
loopne
xor
sbb
cmp
enter
out
cmp
pop
sbb
push
sbb
cmp
call
repz
cmp
jns
dec
shrl
mov
ret
jnp
aaa
bound
in
jg
xorb
subb
xor
push
sub
and
out
test
outsl
pop
xchg
xor
std
icebp
orb
or
popa
mov
or
sub
or
pop
and
jbe
movsl
or
pop
and
jne
xor
and
pushf
pop
mov
mov
in
mov
or
xchg
adc
call
dec
jle
pop
cmp
dec
push
popa
sbb
jns
sub
clc
xor
mov
pushf
dec
jo
popa
cmp
add
ja
mov
repnz
push
repnz
gs
ret
mov
push
out
lret
decl
mov
mov
xchg
les
rorb
arpl
cld
andb
mov
mov
inc
lock
jne
rcrb
loop
push
mov
imul
xor
lods
inc
out
lods
fsubrs
jbe
lds
mov
mov
bound
inc
mul
scas
sti
nop
pusha
sbb
pushf
sub
imul
int
ret
cmp
mov
add
push
push
dec
stos
aaa
dec
adc
fimuls
add
insl
and
add
adc
push
int
insl
sahf
scas
jp
fiaddl
adc
mov
or
lock
lret
in
ret
and
ret
xorl
iret
xchg
push
push
or
lds
cmp
mov
pop
add
sti
dec
in
mov
out
sti
cs
xchg
stos
addb
add
sahf
pop
adc
or
out
jmp
jo
push
mov
ja
popf
add
enter
push
insl
lods
imul
add
lds
loopne
cld
imul
fimull
or
jecxz
mov
xor
mov
inc
mov
dec
sub
or
fisttpll
scas
push
cmpsl
jne
jl
in
mov
loopne
or
pusha
jmp
cs
push
pop
mov
xorl
hlt
push
stos
test
notl
sar
test
and
in
dec
punpckldq
push
subb
jmp
sub
dec
push
pop
pushf
mov
jo
in
icebp
sbb
fistpl
xor
sbb
out
push
inc
add
jns
dec
loopne
or
loop
sarb
lock
pushf
cvttps2pi
and
ret
data16
mov
dec
aam
sub
int3
test
daa
sbb
jne
jo
adc
pop
jge
loopne
sbb
data16
in
cwtl
and
cmp
mov
dec
call
out
or
add
pop
fs
xor
xor
push
add
mov
incl
sbb
outsb
mov
cmpsb
mov
pop
jns
jo
sub
cmc
xchg
adc
addb
cwtl
bound
cli
xchg
mov
push
fisubl
cmp
jp
vmread
insl
jnp
mov
mov
jge
mov
dec
call
pop
xchg
out
adc
cmpsb
cmp
mov
xchg
push
jb
ret
pop
mov
ds
mov
mov
ja
insb
jae
mov
mov
xor
loop
ret
mov
les
add
pushf
stos
mov
mov
cld
imul
pop
mov
and
mov
dec
fwait
push
repz
xchg
out
pop
in
jge
and
mov
pop
lcall
dec
sbb
pop
sub
mov
pop
mov
imul
divl
insb
decl
pop
dec
xor
xchg
fiaddl
jecxz
xor
mov
cmpsb
lea
jae
xchg
pushf
sub
jl
add
push
xchg
jnp
bound
fbstp
xorb
xlat
mov
mov
aad
int
mov
stos
or
test
dec
fldl
into
mov
cli
fwait
clc
mov
xchg
and
sti
addr16
sahf
int
shlb
jo
into
dec
mov
shlb
pop
xor
inc
add
xor
sarl
ret
iret
fcomps
or
dec
push
cld
xchg
loopne
push
dec
cmp
mov
and
dec
or
dec
sbb
add
mov
out
leave
sbb
daa
movsb
test
ret
sub
lret
jge
negb
mov
cmp
int3
xchg
push
xor
in
fcmovnbe
int3
fcompl
sub
pop
xor
inc
addr16
pushf
stos
icebp
mov
dec
push
cmp
push
cmp
in
fwait
mov
push
cwtl
push
add
stos
daa
xchg
xchg
out
sub
mov
je
jne
aam
xchg
xchg
jp
mov
mov
fstps
sub
or
sbb
dec
movsb
cltd
inc
add
adcb
je
sub
and
fidivrs
rcrl
fisubrl
xor
xchg
or
aam
lds
push
dec
sub
mov
movsb
jno
pusha
cmpsl
xchg
fwait
xchg
std
jecxz
fucomip
outsb
and
pop
inc
shrb
or
push
or
fdivl
jg
inc
cmp
jl
mov
xchg
pop
inc
inc
inc
mov
xor
xchg
push
std
orb
cli
out
imul
sub
adc
test
xchg
inc
ret
stc
mov
int3
mov
inc
gs
xor
push
flds
or
mov
mov
ss
cmp
insb
stos
mov
pop
jae
mov
mov
jns
cmp
sub
lret
jae
insb
sub
nop
push
imul
fisubrl
jb
adcl
sbb
dec
pop
rcll
xchg
push
mov
fs
lds
lods
mov
cmc
push
push
push
sub
mov
xchg
into
pop
xor
stos
jns
mov
jb
sub
and
aad
fwait
push
cs
fcoml
stos
jb
pop
sbb
rcrb
sbb
mov
push
fmuls
lds
mov
push
lds
mov
jb
popa
add
fldcw
mov
mov
lds
mov
pop
loop
jp
ds
sub
cmp
in
push
loopne
aas
and
lods
or
jl
sarb
dec
push
xlat
data16
mov
out
ds
pop
xchg
jle
mov
dec
ret
mov
setl
mov
lret
mov
repnz
stc
inc
mov
lret
dec
test
dec
mov
fadds
shll
mov
mov
or
daa
adcl
jmp
lret
push
mov
xchg
mov
aam
adc
jecxz
test
dec
jmp
in
stc
fildll
orl
data16
pop
das
lcall
push
push
dec
push
stos
xor
jl
mov
rcll
fisttpll
daa
pop
jno
fmul
lcall
add
push
femms
mov
shr
adc
cmp
lahf
js
lahf
popf
loopne
xchg
or
imul
ja
nop
lds
pop
stc
loopne
xchg
mov
cmc
cmpsb
inc
pushf
stos
mov
loope
sbb
jge
cs
pop
pop
cmp
mov
jg
xchg
lods
adc
mov
add
inc
mov
and
in
popf
pusha
adc
pop
adc
xchg
jo
leave
dec
test
jne
push
mov
xor
iret
ss
and
and
or
mov
sub
filds
sub
data16
cmpsb
cmpsl
mov
clc
or
outsl
sub
push
mov
int
inc
clc
sbb
popa
out
test
add
and
xor
sbb
out
adc
adc
or
pop
incb
stos
jbe
jae
push
pop
test
lock
test
xor
jp
adc
jno
sbb
push
cmp
push
pop
pop
mov
push
loope
hlt
jo
cmpsl
fcomip
jbe
stos
call
cs
add
cwtl
push
xor
je,pt
push
xchg
sub
mov
add
popf
xchg
jb
jecxz
pop
inc
dec
call
imul
and
std
mov
cmp
iret
ror
clc
out
bound
sub
push
int3
pop
jmp
lods
ret
sar
mov
nop
jge
mov
add
pop
mov
in
pop
je
lret
outsb
inc
addl
pop
push
cmp
mov
add
pushf
imul
repz
jo
dec
arpl
dec
insb
fistps
pop
push
sub
arpl
rorb
cmp
fistps
jns
call
pop
add
jecxz
jbe
dec
mov
pop
pop
std
popa
jmp
xor
lret
mov
jecxz
dec
add
mov
cli
es
test
cli
add
fsubrp
scas
xchg
pop
mov
cmpsb
cmp
sbb
data16
adc
loope
xor
dec
data16
add
inc
push
pushf
sbb
jg
gs
cmp
mov
mov
call
stc
fldt
xor
dec
leave
push
lret
lret
jg
xor
push
xlat
pop
xorl
xor
mov
std
das
pushf
xlat
je
pop
mov
lret
mov
jl
fcmovu
xchg
jmp
rorb
mov
xchg
sahf
shll
je
sbb
mov
loopne
scas
pop
or
sub
clc
sbb
sbb
dec
pop
sbbb
jbe
dec
call
xchg
lods
dec
mov
ljmp
add
aam
push
ret
jne
fstl
cmc
addr16
clc
mov
xchg
stos
cltd
shlb
cmp
jle
push
popa
xchg
popl
jg
sbb
cld
mov
cmp
es
loop
xchg
sbbl
ljmp
cmpl
out
call
cld
data16
out
insl
cmp
in
icebp
out
icebp
je
mov
iret
rcrb
xor
jge
sarl
or
and
das
in
lret
cli
cmc
scas
add
orl
push
aas
into
daa
stc
and
sti
mov
fcomps
jle
xchg
mov
pcmpgtb
push
jbe
jb
call
xor
int
rorl
inc
push
dec
mov
shlb
sub
jmp
dec
mov
ret
add
cltd
and
jl
outsl
mov
dec
or
cmpsl
xchg
stos
decb
sahf
inc
add
scas
movsb
aaa
mov
test
mov
test
outsb
daa
dec
xchg
icebp
sahf
add
mov
rorl
addr16
xchg
aaa
leave
test
fdivr
das
push
fs
data16
je
lods
mov
inc
cmp
inc
mov
int
adc
sbb
inc
dec
push
sahf
stos
outsb
dec
aas
jae
nop
arpl
daa
scas
adc
push
sti
push
jae
adcl
and
xor
xor
inc
fisttpl
sub
dec
mov
imul
mov
pop
aaa
fcompl
mov
jnp
pop
adc
xchg
dec
mov
add
ret
jbe
adc
test
fisubl
stc
push
sub
fwait
aad
andl
shl
and
mov
call
jo
mov
add
imul
leave
adc
sbbb
filds
mov
mov
stos
dec
jp
fldt
cmp
xchg
movsb
xchg
add
mov
pop
and
mov
ret
jecxz
and
cs
in
shlb
fsubrs
out
adcb
sbb
out
and
xchg
xchg
fucomp
mov
call
sahf
mov
inc
imul
subb
fwait
jo
sbb
movsb
repz
fidivs
add
mov
enter
mov
ljmp
cltd
inc
push
loopne
mov
fisubrs
das
jae
mov
into
shll
in
push
aaa
mov
adc
in
aas
mov
sbb
xor
outsl
push
daa
add
leave
push
das
or
dec
or
sub
popf
lock
inc
fcmovnu
enter
out
mov
cmpsb
or
or
xchg
inc
xchg
in
test
xchg
mov
out
in
mov
jle
mov
insb
dec
dec
xor
jae
xor
out
mov
mov
ret
insl
jg
lret
scas
pop
push
add
ss
in
ret
loopne
test
mov
cli
fs
jp
ljmp
je
push
mov
xchg
lret
test
adc
mov
mov
cmpsl
adc
dec
mov
fildl
pusha
xor
loopne
push
arpl
jbe
mov
scas
and
je
sub
std
cmpsb
sti
loope
out
mov
dec
lock
pushf
push
mov
lahf
dec
sub
lods
pop
lock
loop
inc
test
stc
ja
sbb
pop
stos
pop
cld
lds
sub
hlt
push
pop
sbbl
movsb
sbb
mov
sarl
push
sub
pop
mov
mov
test
sar
sub
mov
imul
sub
sahf
push
inc
mov
ret
jp
push
lds
rcll
dec
adc
ss
rorb
and
xor
pop
lret
dec
or
addr16
and
sti
lret
dec
sbb
cld
jmp
mov
sub
adc
jns
jns
icebp
enter
add
xchg
and
jl
scas
add
cwtl
pop
scas
inc
jnp
or
icebp
jecxz
mov
in
mov
add
xor
repnz
mov
push
pop
push
mov
cmpsb
aaa
mov
sub
adc
push
jnp
cmp
mov
bound
pop
popa
mov
pop
add
xchg
into
fcmovnu
lods
ret
je
xchg
pop
mov
cmc
mov
test
mov
push
sti
rcr
aad
rorl
imul
bound
jnp
gs
sub
fisttps
lea
sbb
add
shlb
out
or
test
insb
xlat
xchg
or
outsl
adc
and
jmp
jae
and
xchg
lods
mov
sahf
add
ffree
add
ror
int
sbb
sub
ret
aas
lods
cmp
mov
test
fiadds
add
dec
sar
cwtl
popa
out
mov
popf
xchg
fidivl
jbe
sub
aam
pop
popa
popa
icebp
aad
inc
das
loope
mov
loope
jnp
ljmp
decb
adc
shlb
cs
and
gs
mov
sarl
mov
cmpsb
leave
pop
jb
fistps
imul
adc
dec
and
pop
sbb
std
stos
lret
arpl
or
add
jl
sarb
fwait
jle
sub
std
xchg
push
lcall
pop
repnz
stos
inc
sbb
sub
adc
imul
fstl
adc
pop
out
ss
xchg
lret
lods
fsubrs
fs
aad
adc
xchg
pop
add
ficoms
pop
add
inc
cmp
out
or
jno
dec
mov
into
inc
in
stc
outsl
ja
les
negb
movsl
add
sti
cmp
aad
into
sbb
outsb
inc
inc
call
sbb
jnp
sub
daa
or
adc
pop
cmpsl
stos
mov
test
mov
ret
scas
stc
lods
repz
cmp
push
fwait
test
push
jecxz
test
arpl
sbb
push
mov
jl
sub
mov
pop
cld
xor
or
or
and
mov
fldcw
mov
adc
adc
arpl
addr16
mov
test
xlat
sbb
mov
mov
daa
or
dec
ror
adc
or
adc
add
je
jg
mov
mov
insb
push
test
and
jns
add
mov
add
daa
mov
add
mov
jno
mov
sub
ljmp
imul
test
repz
not
push
xor
fucomi
mov
xor
push
sub
jmp
rcrl
test
cltd
and
xor
sbb
xchg
insl
jne
pop
cltd
loop
fcompl
sbb
sub
jbe
cmp
sbbl
jle
push
pop
icebp
sbb
sbb
push
adc
out
sbb
imul
add
pushl
in
sub
push
sahf
sub
int3
add
xchg
jb
movsb
pop
loop
test
shl
adc
pop
lods
jne
push
push
mov
ret
sbb
stos
adc
sbb
xchg
mov
loopne
cmp
enter
aad
or
mov
and
xchg
test
add
xor
in
ja
gs
repnz
jp
jae
insl
negl
jmp
sub
pop
lret
or
fldcw
mov
dec
sarl
pop
call
or
xchg
inc
jb
jb
ja
into
cmpsb
push
jle
mov
int3
inc
jo
cmpsl
jg
out
ds
movb
incb
fstpl
movsb
inc
cmpl
imul
push
sbb
xchg
test
push
push
dec
sub
dec
in
mov
cmpsl
shll
scas
bound
add
cmp
mov
adc
outsl
loope
adcl
fcoml
mov
lods
jle
add
lock
aad
sub
decl
pop
push
lods
xor
mov
rolb
imul
out
adc
sbb
jmp
lds
lret
push
mov
or
adc
mov
sbb
mov
jo
bound
out
dec
fwait
add
and
cltd
xchg
test
add
cmp
push
inc
lahf
xchg
mov
mov
popf
push
add
pop
mov
outsl
and
ror
adc
fldcw
inc
or
es
clc
and
in
push
mov
ss
insl
mov
loope
sub
test
pushf
mov
or
cmp
dec
insl
out
jecxz
adc
out
and
loop
scas
dec
inc
nop
push
insb
cmpsb
stos
daa
or
pop
sbb
pop
mov
lahf
das
rolb
pop
and
inc
sbb
inc
cmp
jl
sbb
push
js
sahf
int
push
or
iret
out
ja
pop
les
pop
stc
and
jmp
dec
into
inc
lods
pop
pop
xchg
nop
xchg
dec
xchg
xor
lods
xor
jb
sbb
xorb
call
sahf
repz
fsubl
movsl
repz
pushf
sarl
and
and
push
dec
outsl
sahf
int
and
in
aam
mov
notb
pop
push
test
push
cmpsb
sub
xor
push
ret
cli
cwtl
jecxz
mov
int3
inc
lret
jmp
mov
icebp
cmp
xchg
das
mov
lock
adc
add
mov
mov
decb
stos
xchg
movsb
pop
lds
icebp
pop
push
cmpsb
fwait
popf
fnsave
int
mov
loop
adc
iret
ja
test
mov
add
cmp
scas
ljmp
loopne
inc
xchg
mov
and
dec
pop
sub
sub
jbe
loopne
outsl
cwtl
andb
es
cltd
and
dec
mov
inc
add
cmp
subl
call
ljmp
or
repnz
push
inc
mov
pusha
xchg
bound
push
dec
pop
inc
sub
lret
and
cmp
in
mov
sub
ret
mov
adc
jne
push
push
fsubrs
mov
or
or
je
imul
out
mov
xchg
cmp
or
pop
std
xchg
js
into
sbb
ljmp
mov
pop
pushf
sarb
jp
push
int
jg
xchg
jnp
outsb
stc
hlt
in
adc
add
ja
push
and
movsl
test
xchg
pop
dec
jne
aad
pop
std
insb
int3
fistl
cmp
in
xchg
daa
or
repz
push
inc
sti
pop
xor
sub
push
inc
fs
cltd
push
dec
mov
nop
inc
sbb
cli
dec
gs
pushf
cs
pop
fs
pop
gs
rorb
xor
mov
lock
mov
enter
push
cmpb
pusha
inc
fucom
insb
push
or
jge
jne
cs
pop
adc
sbb
xchg
fiaddl
test
imul
push
pop
sbb
xchg
jb
iret
jno
jbe
leave
outsl
loope
mov
fstpl
das
std
add
xchg
mov
inc
mov
ss
cmc
mov
js
push
jle
fmull
repz
outsb
test
mov
pop
or
sub
cmc
ffree
dec
mov
in
mov
mov
pop
outsl
loop
xchg
fdivp
cmpsb
pop
jmp
cmc
add
int3
imulb
or
mov
repz
xor
es
add
in
cmp
je
mov
push
ljmp
push
push
jl
popf
sub
adc
in
outsb
mov
lcall
adc
inc
jb
sar
pop
test
dec
mov
sub
push
mov
mov
ljmp
jp
pop
adc
enter
out
ljmp
or
pop
cmp
mov
push
jno
jno
push
push
test
lret
les
jbe
into
ret
fdivp
dec
out
in
imul
cmp
into
jecxz
xor
and
xchg
jg
inc
rcrl
in
cmp
push
xor
inc
movsb
jo
jmp
sub
fisubs
aam
fcmovu
popf
cld
push
xchg
mov
mov
and
ret
mov
filds
stc
and
sub
hlt
dec
add
push
repnz
jnp
mov
mov
inc
out
scas
pop
inc
jne
dec
cmpsl
sbb
cmpl
xor
fdivrl
adc
sbb
push
jge
sahf
and
scas
rorb
ss
mov
fldcw
dec
dec
cmp
adc
shlb
xchg
in
ljmp
xor
aam
sti
mov
test
pushf
xchg
jge
pop
test
jae
pop
outsb
stc
es
scas
mov
mov
ja
mov
into
sbbl
mov
movsl
add
cltd
jl
cmp
mov
push
mov
mov
push
or
cmp
rcrl
shlb
out
mov
jg
lock
inc
push
fs
fldcw
cmp
bound
or
std
cmp
pop
inc
mov
push
xor
lret
out
mov
push
jbe
call
daa
sbb
sub
xlat
pop
cmp
sbb
cmp
push
xor
mov
jo,pt
les
dec
jb
lret
fildl
jle
decl
jb
dec
xchg
xchg
mov
add
and
dec
mov
and
pop
fdivs
dec
xor
xor
jns
mov
push
lods
and
pop
cld
out
les
fs
xchg
pop
in
aas
fstps
cld
adc
xor
mov
and
xor
pop
stos
filds
and
xchg
push
js
popa
pop
mov
rclb
lcall
stos
addr16
mov
lret
movsl
jno
int3
adc
outsb
pop
jbe
or
cmp
sub
sbb
pop
or
shll
mull
in
addr16
xor
xchg
sub
addps
mov
xchg
in
sbb
inc
popf
adc
scas
jae
cmp
fnstsw
js
data16
adc
jmp
shl
dec
cmpsl
xchg
std
push
jecxz
mov
movsl
scas
loop
xchg
stos
inc
notb
jno
in
cmpb
in
adc
rolb
imul
pushf
sahf
cli
adc
imul
push
in
fldcw
jno
add
scas
mov
mov
dec
push
jge
jmp
outsb
adc
xor
loop
adc
lods
sub
or
push
aad
cli
jle
pop
pop
popa
cmp
test
int
repnz
or
int3
mov
xchg
sar
xchg
addb
mov
ljmp
xor
mov
call
ret
sub
pushf
push
add
push
movsb
mov
push
out
cmp
and
popf
rolb
jecxz
add
mov
adc
mov
aas
repnz
sub
ret
inc
inc
and
sub
sarl
stos
repz
xchg
xlat
clc
adc
jae
sbbl
and
pop
sub
fisttpl
xlat
mov
jl
lods
imul
adc
xchg
mov
mov
cmp
aas
ds
or
push
test
mov
das
fistpll
xchg
loope
vpavgb
std
cmp
cmp
test
ret
icebp
or
fnstsw
into
cltd
popf
mov
mov
jns
mov
pop
jl
loope
rorb
mov
xlat
push
jp
iret
psubd
iret
clc
in
dec
movsb
mov
popl
lret
lock
sub
and
loope
stos
pop
pop
mov
fcoml
scas
mul
mov
sbb
xchg
jle
movsl
push
and
dec
and
std
mov
adc
add
rol
sbb
xchg
mov
jmp
out
mov
jg
dec
in
and
xchg
movsb
cmp
pop
cmp
imul
jne
push
mulb
pop
add
int
cli
cli
shlb
js
mov
ljmp
jmp
xor
and
jg
imulb
std
ret
test
int
or
ret
dec
enter
pop
rclb
shrb
pop
xchg
aam
loop
insl
xor
push
adc
push
add
lods
cs
gs
scas
mov
jbe
xchg
sbb
pop
cltd
daa
mov
cmp
xor
js
aaa
inc
stos
push
cmp
jp
push
push
fwait
mov
ja
cltd
push
mov
add
cmp
cs
in
jno
cmc
adc
es
outsb
cwtl
jecxz
cmp
jecxz
push
inc
jg
mov
daa
mov
ds
push
pop
daa
sbb
fisttps
inc
push
jae,pt
ja
cltd
xchg
jecxz
sti
rorl
bound
mov
xchg
mov
inc
ja
xchg
call
jb
repz
popf
mov
lret
fnsave
inc
add
test
stos
xchg
push
out
ss
in
into
mov
repnz
lods
daa
add
cltd
mov
pop
in
popa
ret
stos
cmp
lods
fldenv
mov
add
lret
cmp
inc
dec
sbb
adc
js
xchg
lock
jmp
add
or
fwait
cltd
cmp
cmp
bswap
mov
mov
cld
out
dec
and
jnp
jnp
orb
pop
in
out
xchg
and
adc
mov
sub
leave
test
loop
xchg
or
sub
scas
xchg
lds
inc
inc
scas
pop
sbb
idivb
add
add
add
push
es
jne
cmp
fs
es
repz
frstor
andl
jp
jg
dec
sub
mov
movsl
adc
outsl
and
imul
adc
das
jg
mov
mov
sub
push
pop
and
and
lods
sbb
push
fs
rcll
and
pop
es
mov
imul
aad
mov
jnp
fadd
lret
btr
push
lock
in
add
jb
push
incb
adc
outsl
cwtl
lcall
dec
arpl
inc
inc
imul
dec
pop
push
cmpsl
adc
pop
push
sbb
dec
mov
lret
push
jl
xor
aam
ja
lret
ss
jge
push
loop
adc
push
adc
inc
mov
mov
sub
loope
sbb
cmp
dec
mov
jns
adc
lcall
jns
mov
xor
push
push
mov
es
lea
aas
in
mov
test
sub
mov
and
pop
loopne
mov
sub
and
mov
loop
dec
and
lods
stos
mov
cmpsl
sub
fcmovnbe
mov
inc
mov
test
cli
cmpsb
in
or
popa
pop
pop
pushf
fildll
ss
test
adc
outsl
mov
cmp
movsl
rorb
cmp
lahf
cmp
movsl
push
mov
push
dec
leave
or
repz
cmp
outsb
sub
ficoms
addl
push
jne
mov
jb
sti
xlat
rorb
fmull
addr16
in
push
inc
xchg
jno
or
mov
pop
inc
xor
je
cmp
jbe
dec
inc
sub
dec
decl
add
cmp
pop
lcall
cmpsb
sub
fcompl
inc
fstp
lods
and
jo
mov
pop
xchg
pop
test
mov
test
andl
or
add
cmp
mov
outsb
lret
je
repz
and
sub
lea
aad
mov
pop
adc
adc
aaa
cmc
pop
mov
xor
int3
xor
cwtl
xor
rolb
mov
xchg
stos
add
pop
iret
loope
add
push
hlt
jmp
adc
push
inc
rorb
sbb
outsb
leave
dec
and
test
push
out
jmp
mov
or
adc
inc
cmp
xchg
cmp
dec
mov
lret
dec
loop
dec
std
jp
mov
roll
cmp
sbb
mov
fs
pop
mov
div
addb
jle
push
in
out
mov
add
jnp
push
nop
cmp
xchg
sbb
mov
rcrl
dec
outsl
sbb
add
lods
cli
ficoms
cmp
push
mov
jb
xor
push
cmpsl
mov
sub
mov
pop
dec
dec
mov
popa
pop
scas
loop
jno
bsf
pop
xor
int3
in
int3
add
adc
dec
pop
xchg
stos
push
mov
and
outsb
mov
fsubrs
sub
add
inc
mov
shll
mov
sbb
out
pop
xor
dec
outsl
movsb
xor
inc
pop
push
push
xchg
or
shrl
iret
sahf
scas
pop
nop
inc
outsb
jl
sarl
stc
xor
xchg
mov
int
fstpl
gs
sub
mov
rcll
cmc
sbb
xchg
add
movsb
mov
adc
jmp
sbb
ret
cli
outsb
mov
incl
fsubrs
pop
mov
mov
and
fstl
cmp
jge
or
dec
mov
cli
ret
mov
addb
xchg
in
pop
sbb
ds
xchg
sbb
sbb
ffreep
add
iret
sbb
aad
enter
or
or
nop
pop
lods
sbb
fiadds
lods
mov
inc
dec
xor
cmp
lock
out
push
xor
mov
fisttps
inc
jbe
jne
and
les
lods
or
fmull
jl
cltd
mov
adc
add
lock
sbb
cmp
movsl
mov
dec
leave
pop
imulb
dec
cmpsb
jnp
xor
cli
mov
xchg
mov
and
push
xor
dec
adc
push
cmp
jns
jp
or
enter
fwait
aad
pop
inc
into
mov
mov
mov
cmp
mov
cwtl
push
ljmp
idiv
mov
add
ljmp
inc
inc
shl
push
sbb
xor
jbe
test
push
push
mov
sti
jmp
addr16
les
pop
cmpsb
mov
cmp
movsb
insb
nop
add
push
xchg
dec
sahf
xchg
lret
inc
adc
lock
cwtl
jge
push
data16
movsl
xchg
push
xor
pusha
data16
jae
push
out
push
adc
into
lea
insl
jne
imul
out
sbb
cld
jno
je
or
jns
push
cmpsl
jns
ret
fmull
pusha
scas
arpl
sbb
pop
jp
sahf
scas
stos
push
shll
cltd
movsb
lock
lcall
cmp
and
out
inc
fcmovbe
ss
lret
and
pop
xor
out
loop
cmp
shl
xchg
jno
js
test
loop
pop
js
cli
aad
jns
mov
dec
arpl
ss
test
push
dec
inc
adc
xchg
mov
mov
push
xchg
lods
cmp
pop
lcall
call
pop
imul
test
xor
xchg
fisubrl
jp
jmp
mov
movsb
adc
sbb
push
and
cmc
das
incb
test
lret
lea
repnz
push
add
xchg
push
out
test
xchg
cli
pop
and
jae
shl
jg
ja
dec
int
xor
dec
cmpsb
ret
leave
xor
popf
dec
outsb
sbb
sub
dec
pop
dec
lahf
testb
or
ljmp
repnz
jp
arpl
sub
mov
xchg
repz
lahf
fldt
sbb
mov
lcall
sahf
xor
sarb
lods
leave
stos
andb
inc
fsts
pop
sbb
icebp
cmp
shrl
insb
int3
mov
cmp
cwtl
repz
lods
fstpt
rcrb
add
dec
xor
in
pop
mov
popf
inc
dec
mov
fnstcw
ljmp
imul
and
mov
sub
cmp
mov
jo
mov
ds
or
mov
icebp
add
shlb
ret
pop
loope
insb
pushf
inc
shll
sbb
repz
cs
call
xchg
xor
pusha
call
and
cltd
imulb
jbe
sbb
pop
sbb
dec
cli
jle
into
enter
jmp
loopne
jnp
xchg
mov
icebp
insb
ljmp
mov
outsl
xor
or
scas
out
pop
mov
jmp
push
push
or
stc
mov
mov
clc
push
dec
int3
pop
push
out
and
push
aad
dec
aas
push
push
orps
mov
out
mov
mov
push
icebp
jecxz
cld
test
bound
jo
mov
sbb
pop
mov
sbb
ja
fisttps
ss
inc
and
jg
ret
lret
push
pop
xchg
jp
cld
or
in
bound
vmovlps
fists
mov
testl
adc
fldln2
mov
icebp
xchg
js
or
pop
mov
push
test
enter
in
or
or
scas
out
xor
push
inc
sbbl
add
fmull
xor
jp
or
mov
out
test
ss
sub
or
aad
std
push
push
fnsave
xchg
stos
rorl
out
xor
imul
jb
ret
pushf
adc
adc
aaa
push
stos
mov
and
addb
push
negl
mov
cs
fdivrp
dec
jbe
insl
out
jge
shll
iret
mov
pop
cmpxchg
push
or
out
jecxz
xor
das
rolb
pop
popf
add
fnstsw
in
iret
cmp
addr16
mov
xchg
adcb
inc
aaa
js
xchg
fcomi
sbb
pop
cmpsl
cs
fildll
inc
add
loope
and
jnp
testb
lahf
mov
addr16
xor
mov
or
lret
aam
mulb
bnd
jnp
in
dec
add
or
xorl
ret
out
sub
subb
inc
sarl
pop
pop
std
mov
sbb
push
cld
mov
pop
add
movsl
fcmovne
sbb
sub
mul
sbb
add
push
xor
cli
xchg
mov
sbb
mov
pop
mov
outsl
xor
push
sub
push
sbb
adc
add
je
ja
mov
inc
adc
push
jl
aad
aad
insl
mov
sub
sub
ss
and
push
xchg
jnp
int
out
mov
in
pop
xlat
arpl
inc
mov
sbb
ds
xchg
jo
inc
ss
ret
pop
cs
cli
imul
cmpsb
xor
or
cli
mov
scas
add
mov
clc
push
addl
jnp
cmp
mov
rcl
lret
xchg
sub
sub
imul
jbe
inc
dec
and
in
int3
enter
inc
clc
enter
xchg
int
add
and
cli
add
xor
fbld
and
sbb
xchg
jge
sub
mov
jae
pop
ja
lds
out
arpl
cld
jo
repz
cmp
fildl
xor
loopne
sarl
sub
push
insl
lods
add
loop
or
mov
ficoml
int3
push
aad
mov
dec
or
mov
dec
out
sbb
jnp
gs
imulb
dec
out
push
xchg
cltd
xor
dec
cwtl
or
movsl
sbb
adc
mov
sbb
stos
cs
jns
outsb
add
push
mov
jle
popa
xchg
loopne
ds
xor
jne
dec
pop
adc
fsubrp
xor
cltd
in
xchg
push
and
out
dec
jne
filds
fsubrs
loopne
iret
push
lret
pop
xchg
fstpt
sbb
fs
stos
xchg
or
lds
js
sub
daa
dec
sbb
push
loop
push
xchg
enter
aam
aam
fs
in
push
sbb
cmpsl
stos
and
mov
inc
jnp
push
inc
mov
and
sbb
mov
push
mov
enter
aad
mov
ret
push
in
xlat
xchg
push
insb
xchg
mov
rcrl
push
mov
sbb
leave
test
fisubrs
mov
in
xchg
dec
lcall
pop
insl
js
ds
aad
ljmp
xlat
int3
xorl
pop
cmp
subb
out
mov
pop
jg
sbb
push
xchg
sbb
push
movsb
or
enter
or
aam
fidivl
std
jp
data16
repz
jns
mov
loop
dec
lock
inc
daa
xchg
pcmpeqd
mov
pop
nop
xchg
mov
movsl
roll
popf
iret
jge
mov
jno
icebp
xchg
mov
sbb
cmp
pop
in
mov
repnz
and
xlat
dec
mov
stos
or
scas
sti
or
repnz
jg
out
ret
test
inc
add
movsb
mov
dec
sbb
pop
loopne
in
push
popf
andl
push
xlat
adc
stc
idivl
jle
rorb
push
xor
pusha
andb
pusha
test
shl
lea
iret
aas
jno
cmp
push
pop
push
scas
scas
addr16
mov
movsl
jo
cwtl
rcrb
xor
std
xchg
and
nop
dec
xor
xchg
xor
dec
xchg
jge
aad
test
add
loopne
mov
push
pop
imul
aas
xchg
pushf
in
fucomp
ret
add
ds
jmp
dec
sti
sahf
ss
lret
and
mov
leave
dec
call
mov
imul
jmp
fldl
rolb
add
pop
xchg
push
in
jne
lret
daa
dec
dec
pop
jmp
jno
jmp
outsb
push
cmc
loope
aaa
mov
adc
outsl
fwait
sub
in
sbb
add
call
ror
cmp
push
inc
xor
mov
jo
add
outsb
inc
pop
mov
cmp
call
test
add
cmp
sahf
pusha
cld
xor
cmpsl
sub
jb
in
and
sub
negl
xor
sbb
mov
mov
lret
mov
mov
cmpsb
out
sub
mov
rorl
xchg
fsubr
add
int3
sbb
pop
lock
in
or
cmc
push
mov
push
adcl
pop
pop
test
in
jle
cmpsl
ss
xchg
add
jb
sub
cmpsl
lock
mov
test
jo
lret
ljmp
fnstcw
and
cmp
test
jmp
js
dec
pop
xchg
pop
sbb
fidivrs
rclb
dec
pop
push
inc
jp
fcoms
add
jns
sahf
sbb
repnz
cli
adcl
dec
out
and
cmp
jo
or
xchg
xor
std
std
sbb
out
lret
movsb
add
cmp
stos
mov
pop
mov
and
pop
sub
loop
filds
loope
fsubrs
cwtl
pop
fs
movsb
sub
lret
mov
push
cs
xor
sub
mov
pop
xor
push
sbb
sub
cmp
fcompl
imul
inc
data16
es
scas
pop
cmpsl
sarl
sbb
or
scas
cmp
lahf
mov
push
int
jns
and
or
push
cld
cmp
cmp
lods
loop
lock
cmp
mov
xchg
mov
ret
xchg
mov
in
ret
out
lods
outsb
mov
and
outsl
rcr
push
jb
inc
and
imul
add
mov
xor
xor
mov
pop
sbb
in
stos
mov
lock
aam
or
pop
in
mov
push
pop
xor
sbb
lods
xor
call
xchg
hlt
push
sbb
adc
out
cmp
jo
negb
bound
cs
insl
fildll
popf
ret
jmp
dec
imul
movzbl
lahf
daa
inc
gs
fldt
mov
cmp
sub
lea
sahf
cmp
loopne
clc
mov
dec
mov
mov
mov
inc
inc
push
jne
pop
test
lret
ret
xor
ja
nop
sbb
cmpsl
mov
lret
mov
dec
jbe
adc
add
iret
nop
and
xchg
dec
loop
pusha
in
fistpl
addb
mov
pop
mov
sbb
lahf
jne
jp
clc
mov
jo
ss
roll
sub
push
jne
cli
imul
movsb
call
mov
cli
mov
mov
lods
jne
add
xchg
push
adc
push
out
test
cmpsb
aad
sub
icebp
mov
xor
test
movsb
sub
rcr
not
ja
cwtl
and
rolb
add
ret
iret
int3
ss
add
mov
push
xor
mov
inc
push
int
jne
in
out
inc
data16
dec
pushf
xor
pop
jle
lock
daa
mov
ja
in
and
jg
push
pop
inc
or
sub
ficomps
repz
adc
xchg
pop
pushf
push
imul
mov
add
gs
js
pop
lods
mov
jno
sti
and
and
mov
sub
or
adc
test
push
aad
addr16
test
fsts
shlb
mov
addr16
jge
aam
enter
or
out
bnd
lea
dec
add
inc
shrb
in
cmp
es
hlt
adc
out
sbb
out
jne
push
outsb
outsb
jno
mov
xor
cmpsb
sahf
pop
test
fadds
repz
xlat
out
popa
scas
sub
cs
cltd
jne
and
xor
mov
cld
loope
or
fnstcw
push
in
std
sbb
push
cmp
sub
or
push
bnd
incl
push
dec
test
cmp
stos
out
push
pop
call
push
rolb
sahf
jnp
xchg
jne
jmp
fs
push
pop
cmp
cltd
in
lret
test
add
inc
jb
pushf
shl
ror
call
mov
fistps
fidivrs
jb
cmc
mov
push
jmp
sbb
scas
xchg
adc
movsl
mov
jecxz
fs
inc
jae
adc
fnsave
sub
lret
adc
ret
cmp
clc
push
and
and
mov
adc
xor
add
adcb
xor
lcall
leave
jle
xorl
out
sbb
loope
fidivl
xchg
pop
xchg
mov
cli
dec
lret
xor
jp
mov
cs
xor
mov
mov
xchg
aas
repz
xchg
sbb
popa
loope
je
mov
test
lods
or
inc
mov
jb,pn
dec
test
and
push
lret
push
lods
dec
mov
out
sub
jae
sar
mov
sub
mov
stos
xchg
jo
addb
adc
pop
xchg
xor
popf
sti
xor
mov
dec
stc
into
fistpll
rcrl
outsb
adc
aas
pushf
mov
sbb
adcl
out
sahf
sub
or
call
mov
out
pop
fistl
ljmp
mov
aas
jns
enter
push
lds
pop
jno
inc
roll
loop
sbb
mov
and
popa
sbb
xor
movsb
or
into
mov
jnp
pop
rcrb
dec
jno
adc
mov
jb
mov
mov
fisubrl
inc
ret
mov
jno
in
in
lret
cli
roll
adc
shlb
js
shlb
xor
push
loope
lock
pop
jbe
sbb
rcr
out
and
test
xchg
and
js
xor
out
pop
movsb
push
inc
jle
std
loopne
stc
cmpsb
idivb
mov
cli
dec
jb
orb
sub
pushf
mov
call
ljmp
jl
adc
scas
ret
sub
add
push
in
rcll
sbbl
cmp
loope
sbb
inc
pop
ljmp
sub
popa
in
cmp
jg
cmc
sbb
pop
xchg
xchg
jae
mov
popf
stc
movsl
scas
pop
je
inc
cmp
rorb
cltd
mov
pop
in
push
cs
pushf
hlt
cmp
outsb
xor
bound
and
clc
or
push
mov
and
and
xor
imul
test
or
push
pop
mov
jle
aaa
sub
sbb
pop
mov
ss
daa
int
sbb
or
mov
scas
fcomps
imul
xchg
mov
xchg
jge
icebp
and
out
mov
lret
xchg
and
int
pop
addr16
cs
pop
sbb
adc
cs
shrl
jae
sahf
sub
inc
jmp
and
fstp
mov
mov
cmc
lea
xchg
jle
xchg
add
mov
push
loop
add
neg
push
shll
insl
cvtps2pd
push
cmpsb
jns
and
das
mov
pop
iret
xchg
les
pop
nop
adc
je
data16
sbb
xor
repz
jp
inc
dec
dec
in
cmp
rclb
jl
shlb
jne
sbb
jo
in
jecxz
xor
push
jmp
pop
jnp
jl
adcl
xchg
cmp
mov
xchg
stos
stc
aaa
xchg
scas
add
inc
ret
xchg
hlt
in
ret
incl
scas
es
fwait
js
xchg
in
movsb
sti
mov
popa
mov
push
imul
mov
fildl
mov
inc
hlt
in
add
out
outsl
or
mov
cmc
add
adc
mov
shll
mov
xchg
ljmp
pop
outsb
iret
shl
mov
nop
xchg
imul
out
popa
inc
push
fsub
mov
mov
add
xor
sti
inc
jns
xchg
lods
jl
stos
mov
cmpsb
mov
or
cmp
sti
dec
int3
enter
insl
int
xchg
and
iret
mov
push
inc
mov
pop
dec
js
push
repz
and
xchg
test
hlt
test
lods
push
incl
mov
ja
in
js
insl
mov
mov
or
sub
jno
mov
imul
or
xor
mov
jb
pop
dec
xchg
lds
inc
out
xor
sbb
push
gs
sahf
pop
jnp
std
mov
mov
xchg
gs
in
jmp
arpl
cwtl
cmp
les
stos
add
sbb
add
mov
pop
push
or
ds
lahf
adc
xchg
dec
pushf
frstor
add
movsb
les
push
ss
xor
xchg
sub
mov
sub
in
popa
mov
xchg
shrb
iret
cmpsb
int3
mov
push
cltd
lods
std
adc
jo
or
pop
mov
adc
xchg
std
not
ja
pop
mov
dec
add
push
push
sub
pop
pop
in
incb
sbb
sbb
dec
add
xchg
pop
jne
mov
mov
inc
cmpsl
xchg
lock
adc
pop
lret
in
rcl
adc
xchg
cmp
out
cmp
mov
add
movsl
stos
cmc
sbb
xchg
jb
xchg
out
mov
insl
dec
popa
arpl
push
inc
jns
out
ja
int3
icebp
repz
js
fidivrs
inc
pop
ljmp
lods
lods
es
xchg
lock
cmp
adc
mov
sub
and
cmp
mov
push
jbe
dec
ficoml
sub
add
cmp
jmp
xchg
push
cmp
or
mov
jge
shl
mov
cmc
and
ss
jp
mov
adc
mov
pop
loope
loope
sub
out
sbb
or
pop
adc
and
lcall
scas
ficoms
call
inc
dec
std
xchg
or
imul
dec
mov
jb
ds
paddb
mov
cltd
stos
jns
xchg
bound
ljmp
cld
xor
pop
jmp
rcrl
lret
popf
popa
jmp
xchg
mov
test
fwait
or
ja
je
sub
das
mov
notl
push
mov
negb
out
aam
and
push
inc
sub
mov
loope
xlat
loopne
icebp
loop
sbb
dec
mov
pop
jbe
add
aad
stos
xor
int
xchg
and
sub
icebp
loope
push
or
push
daa
shll
cltd
inc
xchg
mov
add
dec
mov
xchg
in
mov
jg
dec
test
daa
out
in
xchg
das
gs
cmpsb
scas
out
cmp
mov
jns
pop
adc
jmp
pop
and
cmp
mul
mov
pop
dec
cmp
jecxz
inc
sbb
in
xchg
nop
ljmp
push
xchg
mov
xor
aam
jnp
loop
repz
fimuls
sbb
jae
aad
cli
fdivrs
imul
inc
outsl
pop
pop
stos
js
ljmp
and
mov
mov
stos
loop
loop
xor
adc
std
pop
test
mov
bound
xchg
ss
out
cmpsb
or
sbb
xor
dec
out
add
add
cmpsl
mov
sahf
out
mull
popl
pop
enter
mov
push
test
popa
sbb
inc
mov
mov
push
scas
xorb
into
sbb
flds
cmp
sar
inc
addr16
popf
je
mov
sub
cmc
dec
es
fistpl
push
test
add
jmp
mov
sbb
push
add
gs
mov
and
popf
mov
pop
or
fiaddl
add
mov
mov
mov
push
rcl
xlat
and
lcall
mov
push
jg
jno
inc
cmp
mov
outsl
cmp
testb
jp
mov
and
addr16
enter
add
hlt
shr
push
leave
adc
sbb
dec
inc
sub
inc
cmp
loop
sbb
or
xchg
sub
divb
in
cmp
add
mov
mov
add
cmpsb
lea
js
repz
jno
mov
fstpt
insl
int
scas
or
int
add
divl
popf
std
mov
push
je
mov
fwait
test
insb
cltd
es
mov
xor
popl
notl
leave
iret
mov
pop
mov
jne
std
stc
call
add
mov
mov
pop
sub
testb
lcall
xchg
scas
enter
insb
outsb
mov
out
jb
sbb
loopne
pop
sub
inc
dec
cmp
in
aad
in
mov
and
div
push
test
iret
lock
xchg
gs
and
and
ds
fsubp
in
inc
roll
push
adc
and
pop
outsl
jle
inc
add
cmp
cwtl
or
mov
pop
out
pop
mov
fisttpll
icebp
mov
bound
and
mov
push
test
scas
and
sti
scas
sub
ss
ret
scas
push
add
jecxz
mov
mov
lret
loopne
add
scas
xrelease
pop
xchg
lds
andl
mov
into
fildll
insl
push
fucomip
lods
loope
ficompl
das
pmulhw
inc
movsb
incl
fcmovnb
cltd
je
xor
inc
add
sub
inc
jmp
mov
insb
aad
into
enter
mov
or
adc
aad
add
inc
fucomi
adc
cwtl
push
loope
cvtdq2ps
inc
pop
fs
shlb
lods
aas
lea
adc
sahf
icebp
mov
mov
inc
push
mov
fs
and
scas
call
dec
cmpsl
ds
xchg
inc
jo
push
outsb
icebp
and
jns
test
rorl
ret
imul
fldenv
lods
imul
out
imul
shrl
fcoml
push
adc
mov
adc
pusha
jg
lcall
or
arpl
cltd
mov
push
inc
lcall
sbb
xor
arpl
repz
inc
jnp
add
pop
scas
loope
js
nop
rcrb
fadds
mov
mov
dec
xchg
xor
dec
jb
push
popf
shr
or
jl
and
lcall
xchg
push
inc
daa
jb
iret
lcall
jno
daa
lret
push
adc
jnp
pop
mov
xchg
cmp
xchg
addr16
and
inc
in
pop
cmp
pop
mov
cmp
add
xor
cmpsb
mov
add
cmpsb
xor
out
cmpsl
mov
push
rcll
je
out
mov
xor
iret
testl
jp
lret
and
mov
lret
dec
test
popf
jns
ret
push
or
add
test
pushf
mov
daa
lret
das
adc
mov
fnsave
adc
adc
sub
adc
cmp
rolb
mov
pop
aam
shrl
adcl
and
cli
push
push
sub
ret
xor
pop
das
inc
xor
push
rcll
shlb
and
pop
dec
pop
rcr
fsub
stc
mov
rcrl
pop
outsb
das
shrb
rcll
push
cmp
imulb
adc
arpl
xor
lock
popf
arpl
int
call
cwtl
mov
jo
ds
adc
xchg
jbe
and
imul
cmp
inc
xor
clc
pop
ret
in
test
fisubrl
ret
inc
cmpb
jb
fdivrl
xchg
fidivrs
mov
daa
ja
loop
xchg
jmp
std
ljmp
stos
pop
jnp
sbbl
or
scas
call
es
stos
lods
in
dec
cltd
and
mov
out
lds
cmp
lods
pop
cmpsl
fwait
lret
add
mov
push
inc
shlb
stos
sub
out
testb
xchg
sbb
mov
imul
stos
gs
pop
lret
insl
gs
xor
ljmp
pop
cmp
movl
inc
fidivrs
mov
inc
mov
cmp
andb
int3
pop
add
es
and
fbld
fs
mov
dec
jl
or
jne
xor
repnz
mov
sbb
cmpsb
cmpb
xchg
inc
decl
iret
mov
cwtl
pop
pop
push
je
push
and
push
xor
add
dec
sar
test
and
fptan
ljmp
push
mov
pop
into
lock
fimuls
jl
shll
xchg
aaa
mov
inc
dec
dec
adc
loop
mov
decl
outsb
ljmp
pop
imul
jle
adc
popa
and
mov
pop
sub
xchg
popa
mov
aam
icebp
inc
and
loope
shl
loopne
lods
loopne
popa
out
frstor
add
outsl
je
js
popa
shll
push
mov
adc
sti
mov
mov
jecxz
ds
mov
mov
stos
test
sub
fwait
insb
xchg
mov
adc
mov
lret
jb
pushf
pop
stc
ret
cld
sbb
push
inc
rcr
inc
loop
in
mov
fdivr
sbbl
pop
test
outsl
test
mov
push
xor
pop
mov
mov
nop
mov
test
xor
mov
jnp
in
cmpsl
add
mov
les
or
mov
fistpl
lret
cmp
and
inc
push
lret
push
sub
jo
insb
mov
imul
mov
xchg
xchg
outsl
pop
out
int3
and
inc
jle
inc
sbb
js
mov
fnstcw
push
and
xor
loop
insb
clc
jnp
sbb
jns
ja
aam
cmp
push
inc
ss
dec
cmpsl
sbb
mov
fcoms
lods
mov
stos
shrb
push
xchg
push
xor
pop
push
mov
mov
xchg
mov
shlb
jle
fdivr
int
jl
push
push
or
sbb
dec
and
cmpsl
and
add
shll
testb
andb
call
and
and
mov
imul
push
push
loopne
pop
mov
ret
stos
push
mov
xor
xor
loop
gs
jne
dec
test
add
or
push
sbbb
movsl
insb
adcb
lods
sbb
mov
sbbl
xor
repnz
movsl
sub
jge
dec
jmp
ror
mov
sbb
add
in
popf
inc
pop
jle
fwait
gs
leave
fdivrl
idivl
loop,pt
dec
lea
cmp
divb
push
pop
mov
inc
in
fmull
lds
add
and
and
or
bound
cltd
pop
lods
cs
fwait
out
sbb
mov
fwait
lea
sahf
jne
push
or
sub
jae
cli
pop
je
sbb
stos
addr16
movsl
jmp
jne
jecxz
adc
int3
in
fisubrs
push
jmp
or
jle
sbb
jb
inc
in
xchg
pop
push
aaa
adc
les
and
mov
inc
stos
aad
mov
sarb
sbb
enter
data16
popf
sub
sub
mull
fwait
outsb
je
outsb
in
push
mov
cli
sahf
add
cwtl
xchg
adc
imul
sub
dec
dec
and
clc
push
push
ljmp
mov
or
push
scas
inc
sbb
and
add
daa
aam
mov
fistpl
jmp
movsb
jmp
and
push
cmp
fisubs
push
xchg
fwait
clc
push
int3
sahf
pop
sub
pop
popf
insb
push
pushf
lea
aaa
cmpl
imul
xor
icebp
cld
jb
mov
decb
lret
mov
idivb
xchg
or
in
xlat
jno
and
xchg
xlat
test
push
push
or
add
cmp
ficoml
dec
mov
lds
push
adc
dec
subl
lea
or
and
fidivrl
repz
cmc
stos
mov
pushf
or
xlat
lcall
xchg
lret
imul
xchg
leave
pop
adc
clc
pusha
jo
mov
lods
dec
in
inc
mov
mov
mov
pushf
test
adc
dec
xor
xlat
enter
push
ss
clc
jp
pop
mov
mov
imul
adc
pop
sti
sti
and
cmp
sub
in
mov
cmp
cmp
add
lea
lret
jnp
cmp
pop
cs
jl
imul
divb
ja
cmp
xchg
ret
lock
das
push
imul
jg
lcall
lock
sti
jne
scas
data16
leave
out
jns
out
arpl
imul
aam
mov
dec
in
in
lods
scas
test
push
je
dec
xor
clc
out
or
into
sbb
add
leave
cmp
fwait
lods
xor
imul
dec
xchg
scas
sub
jbe
loopne
jne
std
mov
jecxz
xchg
mov
fildll
leave
outsl
jo
ss
movl
mov
push
lret
xchg
out
cltd
xchg
leave
mov
mov
xchg
in
ljmp
and
mov
and
shl
dec
sbb
lock
cmp
push
std
push
scas
lcall
push
or
shll
out
imul
dec
mov
and
insl
std
jo
stos
jp
jae
or
adc
mov
sbb
adc
mov
or
push
addr16
ret
pop
cmp
icebp
push
addr16
or
sub
pop
sub
mov
cld
ljmp
add
call
mov
addl
and
les
dec
push
loope
ljmp
mov
push
test
daa
lea
std
ss
std
imull
es
adc
ret
das
rol
sarb
lock
dec
and
out
xor
xchg
fldenv
mov
lret
dec
mov
int3
xor
stos
mov
andl
into
mov
in
or
adc
enter
sbb
pop
jecxz
loopne
ja
pop
or
sub
imul
adc
jbe
int3
mov
dec
mov
fld1
adc
mov
xchg
add
inc
xchg
lcall
mov
pop
mov
adc
stos
mov
xor
inc
pop
test
nop
pop
push
xchg
mov
cmp
jns
or
pop
test
lods
insb
or
int
mov
mov
mov
dec
into
insl
mov
mov
aad
xor
sarb
mov
arpl
or
and
xchg
sbb
xchg
mov
lcall
insb
add
mov
jns
inc
test
div
test
cltd
test
push
inc
adc
lret
push
push
lock
add
sbb
xchg
std
lods
outsb
cwtl
adc
cwtl
adc
inc
es
icebp
adc
and
push
ljmp
sub
adc
sahf
arpl
jle
and
ss
adc
lds
mov
dec
lret
or
or
imul
das
fwait
cs
popa
cmc
outsl
xlat
mov
and
sub
aaa
add
jg
xchg
shl
xor
sub
cmp
int
addb
xor
and
pop
or
lret
popa
pop
jge
or
incl
push
jg
ret
scas
out
lods
ljmp
jns
xchg
movsl
leave
pusha
jg
out
mov
push
iret
jg
xchg
sti
fbld
pushf
je
in
adc
xor
sbb
popa
push
scas
add
xchg
mov
sub
sbb
mov
sub
push
lock
jl
test
lea
sub
push
aam
adc
mov
in
and
sbb
and
repnz
out
popf
sbb
sbb
and
push
push
pop
scas
cwtl
sub
inc
fmull
fcoml
xor
cmp
lret
lds
inc
add
jae
or
pop
and
sub
scas
repnz
stos
out
ret
sbb
push
fiadds
mov
cmpsl
fiaddl
pop
repz
push
iret
inc
dec
popl
lods
cmpsb
aad
stos
xchg
push
dec
push
imul
dec
adc
addl
loopne
ljmp
pop
sti
movsb
push
sub
jne
push
and
fisubs
bound
xor
lea
jnp
imull
push
xchg
adc
mov
ret
mov
sbb
inc
dec
cwtl
idivb
out
sub
jle
inc
adc
sub
push
jbe
dec
sti
inc
xor
xlat
imul
fdivr
adc
pop
scas
mov
mov
shr
lods
push
sahf
cmp
sbb
icebp
add
outsl
cmpsb
pop
cmp
and
js
inc
lods
in
incb
fidivrs
jne
lahf
push
nop
push
jge
outsl
rcrb
add
mov
stos
shl
stc
fyl2x
roll
je
mov
xlat
xor
hlt
mov
imul
push
mov
cmp
pop
loop
test
jecxz
pop
inc
xchg
sbb
insl
inc
jl
fwait
jb
adc
sahf
sub
clc
imul
hlt
aad
cmp
add
movsb
and
mov
jbe
dec
or
jno
nop
cmp
adc
inc
xor
and
mov
popf
jbe
ficoms
cmc
push
adc
outsl
adc
femms
sub
mov
mov
notl
movsl
dec
inc
add
mov
scas
cmpsl
jl
bound
push
pop
pop
sahf
fstpt
test
sub
cmc
ret
popf
mov
mov
xlat
in
int
ret
push
sahf
gs
jg
fs
mov
in
pop
sbb
adc
fsubrl
inc
aad
ds
arpl
fcmovnb
xchg
cmp
adc
and
enter
adc
dec
fsubs
and
and
das
out
push
popa
cmp
push
cvtpi2ps
mov
je
rclb
adc
mov
out
pop
call
nop
or
jl
in
fistl
adc
sub
dec
lcall
mov
incl
es
xor
jg
cmp
xabort
mov
jbe
addb
jne
cmpsb
cltd
daa
out
clc
cmp
sub
fs
inc
rcll
ret
mov
psubsw
andb
pop
sbb
std
mov
mov
add
jg
jmp
fnstcw
mov
ret
arpl
insb
out
jnp
lcall
lea
sub
gs
roll
cli
pop
call
decb
mov
xchg
xor
loopne
pushf
mov
sbb
fucomip
outsb
std
ljmp
test
add
shll
mov
orb
loope
sub
sahf
movsb
aad
test
fcomps
inc
fistpl
cli
fsincos
xchg
sub
fs
xor
fisubrs
add
mov
lret
lret
cmc
add
clc
lahf
xchg
cmp
jo
push
ret
notl
das
mov
aaa
lock
not
fists
ds
dec
pop
lret
in
jo
iret
cmp
mov
adc
adc
movntq
cli
loope
je
xchg
cmp
inc
adc
fstpt
mov
lahf
ret
mov
sbb
pop
lcall
movsl
loopne
fidivl
pop
inc
dec
stos
sub
xlat
mov
pop
jbe
daa
ffree
xchg
jb
cmp
in
jo
dec
lock
into
pop
push
add
mov
inc
adc
pop
sub
push
addr16
xchg
imul
mov
fnstsw
xchg
bound
mov
sbb
jo
and
iret
xchg
pop
xlat
jecxz
popf
jo
pop
aaa
sbb
pop
fdivl
xchg
xchg
lock
xor
pusha
pop
dec
mull
ss
stc
xchg
or
mov
fiadds
push
sub
andl
mov
cmp
adc
mov
sti
inc
push
push
xchg
xor
pop
xor
icebp
mov
fisubrl
popa
ret
jne
sbb
icebp
xor
ljmp
cli
push
sahf
sub
mov
adc
cmp
fstps
popf
mov
mov
xlat
or
popf
cmpsl
inc
mov
sub
test
addr16
rcr
mov
cmp
jle
enter
test
js
adc
xchg
pop
loope
or
dec
add
mov
stos
xchg
cmp
pop
lret
test
dec
pop
jbe
add
jns
or
sub
xor
dec
cmc
out
scas
push
cmpsb
adc
mov
ret
sbb
xchg
xor
push
jb
div
cmp
dec
out
movsb
dec
movsb
inc
xchg
dec
movsb
or
lock
push
push
sub
or
adc
inc
pop
push
push
dec
sbb
xchg
xchg
sbb
sbb
push
hlt
test
jb
fadd
es
mov
test
clc
int
mov
icebp
cli
enter
lea
testl
lret
mov
adc
mov
and
mov
call
adc
sbb
inc
or
xchg
cmpsl
cld
out
fxtract
inc
aad
mov
fists
mov
out
aas
popf
outsl
in
and
shrl
shlb
add
jns
inc
aaa
insb
push
test
shlb
imul
xor
bnd
cmc
mov
mov
push
mov
pop
mov
popf
xor
inc
push
lcall
and
rclb
test
mov
or
dec
in
in
je
dec
stos
pop
pop
push
pop
dec
sub
aad
sub
add
inc
and
imul
lea
or
jno
add
pop
aad
lds
jo
clc
and
fcmove
mov
xor
or
shr
sahf
pop
cmp
cmpsb
mov
or
push
add
shlb
adcb
jp
int3
cmp
or
push
push
mulb
xchg
into
lods
fcmovu
mov
cmp
mov
sahf
adcb
push
mov
push
adc
mov
fisubl
add
out
insl
scas
cltd
test
imul
or
sahf
aad
ja
jge
int3
imul
lcall
pop
mov
mov
push
mov
mov
inc
aad
pop
pusha
dec
cmpsl
sub
inc
mov
shll
cmpsl
cmpsl
xor
xchg
mov
arpl
frstor
add
in
fiadds
ljmp
cs
imul
cmc
push
cmp
xor
mov
cmp
sbb
popf
mov
push
sub
les
push
sbb
xor
cmc
cltd
sub
mov
and
jle
sahf
cmp
sub
dec
aad
or
int3
ss
test
daa
inc
mov
shl
mov
imul
ss
xchg
mov
push
xor
lods
jne
fwait
push
das
jbe
and
aaa
sbb
dec
push
in
add
push
mov
insl
mov
jnp
mov
lret
cmpb
int3
or
jecxz
enter
sub
and
mov
mov
repz
cmpsb
or
sbb
cld
aam
xlat
stc
repnz
popf
mov
sub
or
cmpsb
test
xchg
mov
cmc
repz
fucomp
mov
inc
and
decl
mov
sbb
mov
subb
data16
inc
rcll
orb
push
cmp
or
xchg
fisttpll
or
addr16
pop
pushf
xchg
inc
inc
mov
jmp
jg
cmp
addr16
xchg
mov
movsl
cld
sbb
andl
es
and
je
mov
mull
mov
xchg
sub
mov
push
pop
movsl
push
push
fcmovu
gs
out
inc
movsl
sarb
inc
sarl
outsb
je
cs
sub
mov
lret
cmpsb
jp
and
call
out
push
sbb
loope
hlt
push
adc
test
cmp
push
outsl
and
test
outsl
mov
outsb
inc
pop
clc
mov
punpckhwd
sbb
push
lahf
add
ds
mov
sbb
pop
push
inc
push
inc
mov
inc
adc
test
mov
xor
mov
dec
mov
sub
mov
clc
add
and
mov
popf
popf
and
adc
fs
inc
sub
sub
xlat
negl
idiv
jbe
daa
popa
rcll
lea
cmp
shr
or
mov
push
xchg
mov
mov
les
add
gs
js
sbbl
ja
sbb
jo
rorl
sub
into
mov
in
xor
push
rorl
pop
in
ds
mov
xchg
lcall
jo
xlat
scas
mov
shlb
fmulp
imul
sbb
sbb
lret
aam
lret
loope
bound
adc
xor
mov
mov
ds
out
mov
dec
fsubrs
loope
imul
push
mov
dec
xchg
faddl
adc
popf
lret
outsb
test
rorl
adcl
out
fstl
lret
push
lods
aaa
test
shrb
rol
es
mov
or
mov
xchg
roll
iret
aaa
cwtl
mov
fstl
sbb
fs
movsl
or
test
mov
pop
inc
or
fistpll
cmpsl
repz
ja
dec
ret
xchg
pop
dec
dec
loop
scas
mov
mov
and
stos
ja
add
and
fcoms
mov
or
ret
cld
aaa
jb
nop
je
pop
sbb
test
insl
mov
push
sub
pop
imul
xlat
rcrb
movsl
inc
orl
enter
sbb
test
mov
adc
je
int
cmpsl
push
imul
mov
aas
aam
push
jbe
sbb
inc
sbb
push
inc
aas
mov
repnz
fistl
aad
pop
pop
test
xchg
add
aad
setnp
xacquire
jmp
dec
sbb
std
inc
cmp
and
adc
dec
cmp
cmp
pop
push
pop
mul
xor
jne
mov
cmp
mov
lock
lods
and
shl
ljmp
inc
rcrb
xor
mov
subl
mov
jle
cmc
adc
jmp
add
enter
add
jl
or
inc
jp
and
jae
imul
sub
clc
stos
xchg
add
sub
or
test
sub
in
sbb
rclb
mov
add
dec
roll
pushf
cmp
add
das
insl
jne
xor
xor
mov
and
sbb
das
cmp
outsl
mov
adc
mov
inc
mov
icebp
push
divl
or
push
cmc
icebp
inc
and
xchg
and
mov
stc
addr16
jno
stc
mov
fwait
je
adc
cmp
jle
pop
cld
jmp
mov
lret
jmp
les
popf
js
fbld
aaa
inc
mov
shll
and
jb
iret
test
js
pop
lods
jecxz
adc
xchg
jns
sahf
fsubs
jecxz
aaa
in
pop
sti
cltd
jg
int3
jmp
clc
sbb
add
movsb
cmp
inc
lods
push
inc
rcrb
out
daa
fstps
xchg
insl
dec
fldl
sahf
mov
push
rcll
lcall
mov
inc
sbbb
mov
ljmp
push
xchg
notl
mov
or
mov
xor
dec
add
xchg
aaa
insl
aam
pop
mov
jnp
leave
xchg
xor
bound
js
xor
dec
mov
iret
or
sar
lock
call
addr16
or
loop
push
lds
mov
repnz
cmp
mov
xchg
xor
and
cmp
jo
xchg
push
xor
out
add
mov
mull
ret
in
mov
bound
inc
pop
cwtl
adc
mov
ds
mov
test
daa
pop
lods
jne
sub
and
sub
lahf
jo
sbb
mov
inc
push
xor
cmp
pop
jno
fs
outsb
stos
push
pop
gs
out
mov
clc
mov
imul
xor
or
sar
cmp
push
cmp
push
and
lret
cmp
adc
sub
push
mov
dec
push
adc
sahf
jg
or
sbb
adc
or
cmpb
mov
mov
mov
and
and
outsl
fwait
or
inc
pop
jne
lahf
call
insl
std
notl
insb
inc
rcl
subb
or
or
dec
cld
and
add
lret
inc
into
cli
ja
dec
sub
pusha
popf
outsl
ss
sahf
mov
add
sub
pusha
cmpsl
sbb
adc
sarl
sahf
mov
push
jae
hlt
pop
repz
testl
stc
sti
push
mov
push
mov
fidivrl
xor
dec
aas
cmpsb
dec
ret
sub
nop
call
sub
dec
adc
lock
jae
jge
cmp
sbb
test
inc
mov
dec
add
in
jb
mov
mov
pop
sub
negb
xor
adc
sub
or
pop
in
mov
mov
push
pop
fisubrl
cwtl
fistl
add
cltd
dec
mov
mov
jle
loopne
push
stos
fisttpll
test
jg
dec
adc
dec
mov
adc
mov
shlb
add
scas
je
rolb
push
jae
mov
rolb
xor
add
jbe
push
cltd
dec
jmp
outsb
mov
xchg
sbb
lcall
scas
push
sbb
push
push
lods
out
popf
sar
stos
or
mov
mov
imul
and
loopne,pn
test
imul
push
int3
xchg
pop
or
lahf
or
cltd
mov
pop
add
inc
fscale
lods
pop
loop
lds
cld
roll
inc
xchg
dec
shrb
cmp
je
and
jno
loop
pop
pop
dec
jbe
pop
adc
aaa
stc
insl
mov
xchg
nop
ja
int3
inc
shrl
iret
insb
push
incb
mov
scas
sbb
pop
sub
push
add
rcr
stos
adc
mov
sub
rclb
mov
pop
push
je
pop
xchg
cmpl
stos
loope
bound
pop
xchg
jns
scas
es
cmp
aas
or
cmpsb
mov
xchg
inc
mov
iret
mov
shll
inc
push
ja
jp
xchg
stos
jl
subb
mov
jle
sub
and
jmp
sbb
and
and
pop
or
das
popf
fs
cmp
in
aam
mov
dec
sub
pop
jne
fldenv
mov
addb
cmpsl
jbe
mov
test
test
ja
cs
jo
xchg
push
scas
push
ljmp
or
pop
pop
jmp
lods
mov
aam
sub
jno
pushl
sub
stos
loop
daa
data16
mov
dec
adc
push
mov
pop
into
jae
xor
mov
sbb
mov
fcom
fidivs
push
jb
rcll
cmp
daa
xor
sub
jae
lds
mov
popf
shl
adc
lock
daa
ja
push
cmp
inc
repz
xorps
in
cli
daa
scas
jl
dec
jb
add
mov
jo
inc
push
int3
ja
pop
or
cmp
xor
sahf
inc
xorl
subb
pop
imul
xor
imul
mov
decl
es
or
adc
mov
dec
adc
jo
inc
mov
pop
pop
add
mov
inc
orb
cmp
jle
or
adc
dec
or
mov
mov
arpl
lods
sub
pushl
lret
push
in
inc
shr
add
or
fwait
out
xor
inc
jmp
xchg
mov
mov
jbe
insb
pop
pop
jmp
pusha
sub
cltd
xchg
mov
insb
fiaddl
fdivs
outsl
push
mov
in
inc
jmp
in
lds
call
fists
jae
push
test
mov
jae
movsb
lret
mov
ja
mov
sub
mov
lock
cmp
mov
lahf
dec
adc
lds
shlb
daa
push
lgdtl
cmp
mov
mov
nop
adc
sub
jmp
xor
out
aas
adc
cmp
mov
mov
xlat
aas
jle
inc
cmp
in
pop
jne
cmpsl
mov
push
in
mov
lcall
lock
and
scas
mov
jnp
push
addr16
repnz
mov
sbb
mov
inc
inc
fwait
adc
pop
mov
outsb
iret
inc
cmp
sbb
int3
or
rolb
sub
sbb
cmpsb
xor
int
int
cmp
rcrl
mov
cli
sub
pop
loop
into
insb
insl
in
add
scas
fnstcw
addr16
ret
movsb
incl
mov
jns
lcall
xchg
out
addr16
lahf
cmp
xor
testb
inc
sub
dec
call
mov
fmull
mov
stos
inc
xor
adc
outsb
mov
inc
add
fiadds
or
cmpb
imul
dec
mov
jle
sub
push
adc
aam
fwait
pop
shlb
insl
int3
clc
push
push
pusha
jb
cmovbe
movsl
pop
iret
jl
and
and
out
popf
leave
in
repnz
js
cld
cmpsl
repnz
movsl
add
stos
pop
aaa
push
jbe
ret
xchg
push
cmp
lahf
icebp
lods
into
mov
and
sbb
mov
insb
adc
jmp
and
cld
rclb
iret
jns
and
das
xlat
scas
adc
sub
push
sahf
cld
adc
or
leave
sub
ljmp
dec
into
scas
sbb
aas
jecxz
push
jecxz
mov
adc
xchg
xchg
inc
loop
push
push
in
inc
in
ds
dec
aas
jbe
sbb
jae
ljmp
adc
mov
nop
out
mov
mov
scas
cwtl
inc
fisubl
nop
mov
push
rorl
clc
movsb
push
mov
lods
aaa
aad
and
loope
addr16
xchg
xor
push
sub
clc
jle
cmc
pop
test
lahf
icebp
lcall
add
cli
mov
and
sbb
insb
int3
add
clc
fiaddl
pusha
ss
shrl
scas
scas
es
enter
out
in
outsb
maxps
or
sahf
sbb
inc
sub
cmp
cli
mov
idiv
jnp
cmpsb
in
shr
xchg
repnz
scas
adc
push
push
xlat
enter
xor
mov
pop
add
shl
outsl
test
lock
stos
lret
int
pusha
loopne
adc
inc
fldlg2
mov
call
sahf
stc
movsb
pop
test
fcmovb
push
lods
shlb
inc
imul
jmp
popf
enter
inc
pop
and
mov
daa
mov
cmpl
pop
cmp
jo
xor
inc
or
ja
cmpsl
pop
lret
iret
ficoml
adc
cmpsl
and
jmp
or
pop
outsb
test
ret
roll
cmp
jae
cmp
dec
dec
mov
int3
imul
or
add
inc
nop
cmp
or
ja
out
and
test
sub
jne
pop
rcrl
pop
xor
push
pushf
imul
leave
movswl
inc
jnp
jne
arpl
push
jns
stc
mov
xchg
out
adc
xchg
xor
jns
sub
add
pop
cmp
int3
scas
jb
adc
cld
jae
dec
xchg
orl
xchg
mov
sbb
daa
mov
bound
mov
mov
jno
rolb
inc
fadds
std
jbe
mov
roll
fs
add
inc
xor
push
movsb
xor
icebp
mov
add
movsb
popa
add
test
jge
sub
andl
in
or
in
outsb
enter
imul
movsl
mov
inc
adc
in
arpl
sbb
jecxz
mull
pop
and
lock
mov
sbb
sub
icebp
cmp
xor
lret
test
jb
icebp
dec
jge
pusha
xchg
cmp
sub
and
pop
rorb
dec
xchg
jg
push
adc
test
movsb
clc
popa
inc
notl
js
aad
popl
aas
je
and
pusha
pop
lcall
or
xlat
push
xchg
push
testb
mov
inc
stos
or
mov
add
push
outsl
repnz
lods
ja
jge
divl
adcl
cmp
adc
fsts
jp
cmpsb
ja
add
in
pop
test
into
movsb
cmp
jmp
imul
lods
add
in
sub
aaa
sub
and
test
popf
test
xchg
pop
ret
inc
aas
pop
pop
aam
rcr
adc
rol
fsubl
pop
repz
addb
jg
mov
mov
add
jecxz
push
mov
aas
fimuls
mov
pop
repz
sbb
in
scas
mov
sbb
stos
sbb
sub
popa
add
or
mov
pop
xchg
into
adc
cmp
icebp
xchg
sub
test
loop
aad
in
jge
adc
xchg
xor
pop
shr
push
out
ror
test
js
mov
fdivrl
mov
arpl
loope
add
mov
js
sub
push
jns
js
das
add
push
in
jo
push
test
lret
pop
sub
pop
sar
sarl
aad
aas
mov
mov
mov
negl
mov
call
outsl
mov
in
jl
call
loop
push
push
stos
repnz
mov
mov
sarl
jmp
pop
das
cwtl
cs
in
sbb
movsl
rol
pop
ljmp
rorb
xchg
addr16
pop
xchg
ffree
notb
cltd
mov
and
cmovp
add
sub
lds
lea
pop
pop
xchg
imul
push
xor
mov
cs
nop
pop
js
sbb
movsb
out
lods
lretw
xchg
xchg
sti
fisttpll
sub
int3
sti
mov
pop
aaa
aad
push
stc
mov
cmp
out
cli
sbb
cmpsl
xchg
jge
jmp
pop
push
fcomi
pop
mov
arpl
xor
test
fildl
dec
and
sbb
bound
sub
jns
adc
add
sbb
roll
negl
jno
scas
insb
mov
ja
inc
mov
or
mov
xchg
int
cmp
daa
mov
out
adc
arpl
xchg
stc
pop
sbb
test
shll
adc
xchg
lds
pop
loop
xorl
xchg
aaa
shlb
inc
inc
jbe
mov
cld
xor
stos
mov
cmpb
fiaddl
fs
mov
cmc
and
sub
sub
in
adc
pop
lret
shlb
adc
sbb
mov
jg
sti
aaa
mov
sub
outsb
inc
adc
push
insl
imulb
test
push
jb
movsb
fadds
push
push
flds
push
sub
jl
insb
sub
ficoms
rcr
out
outsb
jns
xor
dec
aas
cli
data16
inc
jmp
sub
repnz
invd
push
bound
sub
mov
jmp
jp
int
loop
jl
dec
push
out
adc
aam
adc
fstpl
rolb
adc
jbe
sti
into
loop
or
pusha
call
ja
mov
lods
inc
mov
js
push
add
into
pop
sub
cmpsb
mov
push
pop
sahf
mov
push
jo
shll
cmp
lcall
aaa
or
push
imulb
xlat
cmpsl
inc
sbb
jne
and
in
inc
pop
inc
lcall
dec
cmpsb
iret
pop
outsl
es
imul
mov
mov
push
cwtl
stos
cmpb
fcompl
mov
jns
or
sbb
mov
dec
shll
cltd
shlb
clc
mov
loopne
xchg
in
andb
arpl
jo
loope
pop
popa
push
cli
jl
mov
inc
jmp
push
dec
cli
xchg
lds
xor
test
push
popa
lods
mov
and
dec
cmp
popf
inc
ds
lods
movsb
xchg
lds
rcrb
or
dec
pop
mov
sbb
fdivs
shll
sahf
xor
js
push
ljmp
loope
fsubrl
mov
cmp
loope
negb
jne
xchg
and
loopne
push
outsb
pop
negl
test
dec
int3
push
or
or
rorl
add
je
cwtl
push
mov
mov
mov
add
das
sbb
cmpsl
sbb
adc
shl
add
aad
inc
add
arpl
xor
mov
loope
push
loop
movsb
adc
mov
imul
cmp
inc
pop
and
xchg
adc
aam
sbb
pop
dec
sahf
lret
xor
jb
scas
push
mov
adc
inc
dec
lea
int
stc
or
dec
pop
jl
inc
lahf
mov
and
pop
push
or
push
outsl
gs
adc
mov
cli
push
jg
clc
cwtl
add
and
bound
out
les
inc
loope
inc
adc
leave
sub
lahf
hlt
adc
sub
lock
idivb
mov
sbb
sub
mov
pusha
icebp
jle
jl
rorl
sub
cmp
xchg
clc
adc
jae
ret
jne
ja
jnp
out
sbb
jno
out
push
pusha
xchg
int
mov
es
in
adc
xor
or
loope
and
sub
dec
xchg
out
and
loope
cmp
scas
mov
inc
scas
and
pop
lcall
out
xchg
mov
fdivl
jmp
inc
mov
lcall
loope
into
inc
mov
movsl
xor
ja
jle
xor
sbb
xorb
sbb
mov
mov
lock
outsl
cltd
adc
fimull
adc
adc
fwait
js
incb
cmp
jmp
xchg
sbb
mov
xchg
fwait
lods
data16
nop
sti
jnp
call
jecxz
or
mov
xchg
scas
dec
notl
std
test
jp
sahf
call
dec
add
scas
dec
adc
pop
fisubrl
push
xchg
jb
and
dec
shr
xchg
dec
fstpt
lods
and
add
daa
stos
aam
mov
xchg
dec
lock
aad
cld
test
aam
pop
jmp
out
aas
or
sbb
sub
jns
push
jnp,pn
aam
jecxz
inc
pop
dec
sub
xor
mov
out
inc
call
mov
dec
add
xlat
push
data16
popf
and
xor
ds
dec
enter
rcrb
xor
jns
sub
dec
fistpl
jle
fists
mov
cld
and
jmp
sbb
pop
mov
dec
pusha
xor
scas
sub
pop
data16
xor
mov
mov
fistps
mov
js
xchg
or
cmp
mov
mov
ja
cmpsl
scas
rorb
stc
mov
repnz
insb
adc
cmc
mov
ret
data16
mov
push
inc
cmp
jmp
leave
jg
in
adc
iret
imul
mov
callw
xchg
insb
fidivrl
jne
imul
movsb
insb
jns
jg
iret
mov
mov
xor
das
nop
rolb
sub
rorl
sub
xor
cmp
repnz
inc
lea
dec
rcrb
pop
shlb
ffreep
mov
sbb
or
ljmp
xor
test
jo
dec
pop
iret
pop
xor
shlb
lret
inc
xchg
lcall
xor
push
push
pop
jmp
out
add
js
cmpsb
dec
movl
insb
lods
test
jp
ljmp
cmp
das
aam
imul
jbe
in
imul
pusha
popa
pop
shll
push
es
sahf
mov
test
enter
push
psllq
add
mov
cltd
fisttpl
jne
sub
xchg
mov
dec
je
aam
mov
out
pop
xor
aad
lret
or
test
sti
aas
add
fsubrp
sub
mov
movsl
hlt
or
cwtl
sti
adc
add
das
or
pusha
push
movl
loop
icebp
xchg
cwtl
aam
dec
movsl
mov
jle
and
mov
stc
imul
or
jmp
dec
enter
jne
mov
ds
jnp
dec
mov
sbb
mov
lret
mov
dec
add
daa
dec
nop
gs
push
push
and
mov
jl
in
mov
fidivrl
aad
sub
outsl
loop
inc
scas
fadd
jecxz
cwtl
out
shll
xchg
push
and
cmc
mov
pop
or
test
lock
sub
std
daa
cmp
jns
push
clc
fimuls
aad
cmp
das
xor
adc
shlb
call
outsb
sbb
repnz
pop
jno
stos
and
dec
ds
sub
divb
outsl
jp
fisttpl
and
jg
and
rolb
xor
push
addr16
test
jne
lret
xor
nop
mov
das
cwtl
dec
int
jae
mov
pop
dec
aaa
jl
aad
cmpsl
call
repz
add
xchg
xor
arpl
ret
clc
movsb
mov
daa
daa
sbb
call
insl
js
sub
push
xor
and
mov
push
xor
jecxz
out
scas
xor
mov
stos
push
push
mov
mov
add
mov
jnp
mov
push
and
movsl
outsl
rdtsc
or
shll
cs
sarl
jmp
movsl
movsb
andl
mov
jb
inc
mov
loop
dec
repz
inc
dec
jns
adc
mov
movsl
jns
lock
testb
call
dec
cmp
push
ret
dec
fstpt
fstpl
in
ret
sbb
aad
adc
adc
ja
jecxz
stos
dec
xor
loopne
xchg
pop
lahf
fcmovnbe
rcr
inc
or
lds
insl
pop
push
pop
xorb
divl
cmpsb
fdivs
fwait
jmp
cmp
ds
mov
xchg
and
shr
nop
xor
push
cld
sbb
or
cwtl
outsb
mov
mov
dec
adc
insl
ljmp
dec
addr16
imul
movsb
rcrb
out
mov
int
clc
fsts
mov
insb
shl
out
bound
or
adc
mov
pop
aaa
sti
loope
hlt
loope
dec
xor
negb
pop
out
mov
in
inc
or
cmp
add
ficomps
ds
fiadds
arpl
and
push
mov
mov
iret
ja
and
dec
pop
lahf
imul
adc
movsl
sbb
mov
fwait
mov
adc
rorb
cmp
jecxz
jp
enter
mov
out
push
xor
out
imul
jno
pop
xorb
outsl
dec
scas
dec
inc
fistps
cld
in
in
shl
gs
jns
mov
int
cmp
xor
jmp
add
sbb
mov
iret
add
cmp
cmp
jge
inc
jb
cmp
jno
jle
mov
mov
rcrl
movb
loop
and
inc
mov
jbe
adc
pusha
mov
call
push
jmp
mov
nop
push
imul
bound
repz
rcrl
xor
lock
stos
enter
pop
loope
imul
icebp
shll
stos
inc
jle
lret
or
in
xor
ficoms
test
xor
push
inc
fsubr
cmp
aam
or
cmp
js
rclb
inc
bnd
and
push
aaa
lods
add
fidivl
cmc
inc
sbb
pop
in
ret
shrb
sbb
inc
repnz
push
in
jne
mov
lds
psubusw
push
mov
addb
xor
scas
cwtl
stos
or
arpl
xor
std
hlt
hlt
into
jns
push
out
xor
mov
pop
repz
loop
test
bound
xchg
stc
mov
mov
rcr
push
lret
or
jbe
ret
cmp
adcl
mov
fsubrl
adc
clc
gs
mov
mov
lret
push
out
and
adc
sub
adc
jge
mov
mov
jp
inc
pop
movsb
inc
subl
cmp
cmp
jge
cld
dec
xor
out
iret
js
dec
and
sub
das
pop
loop
and
jg
mov
out
fcmovbe
push
jne
daa
aam
xor
call
popa
xor
out
mov
aad
push
jle
push
pushf
dec
add
xchg
dec
and
popf
xor
mov
andl
add
test
imul
daa
push
lods
push
dec
js
ror
in
dec
jns
push
dec
push
cmp
ret
or
jge
mov
xlat
mov
adc
xchg
sub
inc
adc
pop
sbb
inc
sub
and
fwait
add
outsb
push
mov
subl
inc
insb
fidivl
sbb
fstps
pusha
xchg
test
mull
inc
rolb
je
mov
jmp
mov
js
in
mov
addr16
fwait
push
sahf
cwtl
mov
pop
lock
pop
mov
push
repnz
icebp
cli
pop
sti
add
push
xor
push
fldl2t
and
call
mov
jp
xchg
fidivl
push
adc
loope
lods
xchg
icebp
inc
outsb
sarb
mov
ja
es
nop
popa
out
pop
cmp
or
sbb
mov
and
cli
xchg
push
cmpsb
mov
pop
sbb
cmp
add
hlt
fsubr
add
int3
pusha
ret
iret
hlt
jmp
out
gs
pop
scas
loopne
jp
mov
out
adc
mov
outsl
imul
ljmp
add
or
mov
dec
out
aaa
mov
inc
cmp
or
daa
es
fists
xchg
testb
mov
sbb
jb
cmp
lds
popf
and
mov
bound
xchg
and
jae
je
pop
and
dec
mov
push
mov
add
cli
inc
lods
dec
pop
lods
jl
stos
push
aaa
fsubrs
in
ss
fwait
inc
and
dec
dec
sahf
lahf
adc
cs
mov
lcall
and
in
add
adc
sbb
adc
sbb
inc
test
inc
jle
xchg
iret
mov
das
fsts
inc
push
repz
cmc
jb
lods
sahf
xor
xor
hlt
sub
xchg
jns
into
push
add
test
jae
mov
xchg
lret
xchg
xchg
mov
outsl
xor
mov
xor
aam
mov
js
cmp
repz
push
jns
mov
pusha
icebp
mov
aam
xchg
daa
mov
mov
xlat
mov
mov
xor
sarb
aas
inc
or
jmp
sub
icebp
popf
inc
ljmp
mov
pop
push
orl
ljmp
fists
dec
xlat
mov
dec
andl
cmp
lock
insl
loope
mov
and
jo
push
out
push
out
push
pop
cli
inc
xchg
es
fnstcw
add
xchg
lret
pop
xchg
jmp
push
push
sahf
or
pop
pushf
mov
ljmp
mov
sti
mov
lds
jl
add
es
sub
out
mov
or
pop
push
setnp
adc
inc
mov
lcall
inc
outsb
clc
inc
imul
or
add
jmp
fidivs
outsl
pop
adc
dec
aas
fcoml
lods
adc
stos
adcl
cs
pusha
add
rcrl
mov
add
xchg
scas
cmp
pop
rcl
dec
push
jp
xchg
rolb
sub
xor
cmp
clc
jp
shlb
mov
jae
loope
jmp
ficoms
inc
xchg
inc
jns
jo
aam
cmp
lahf
cmp
cltd
imul
cltd
shrl
mov
mov
push
popa
mov
jbe
insb
push
shrb
mov
int
test
push
lret
adc
jno
ss
pop
cmp
sub
jl
mov
out
and
mov
pushf
inc
dec
neg
mov
mov
adc
adc
cmp
mov
sub
fiadds
stc
jo
fucomi
or
adc
mov
mov
sub
mov
jl
xor
dec
outsl
cwtl
xchg
jbe
loop
hlt
or
dec
mov
cmp
icebp
jo
sarl
iret
push
jns
cs
int
push
push
push
or
fstps
adc
jb
dec
das
xor
lcall
out
ret
mov
or
xor
repnz
jns
out
dec
enter
rclb
sbb
test
movl
daa
jecxz
jmp
add
imul
adc
mov
xor
adc
xlat
fiaddl
add
in
cmp
pop
lret
jp
in
daa
mov
mov
iret
xchg
dec
jp
movsb
jno
loope
out
pop
clc
adc
or
adc
nop
pop
or
sub
int
xor
jb
aaa
add
fstps
pusha
adc
push
fdivr
push
fiaddl
xchg
cmp
push
push
int3
xchg
mov
negb
mov
hlt
and
inc
pcmpgtw
jb
sbb
mov
outsb
adc
xchg
inc
sub
and
jmp
pusha
sub
jo
jne
sbb
scas
xorl
mov
stos
mov
sbb
inc
cld
jmp
insl
inc
cmp
fsubrl
je
jl
std
cwtl
jecxz
movsb
adc
push
push
repnz
adc
sbb
nop
out
cmpsb
arpl
clc
ds
nop
lods
cmpsl
clc
mov
xlat
mov
xchg
jp
testb
push
test
scas
out
cltd
adc
mov
addb
dec
gs
test
pop
mov
push
dec
jle
pop
add
jecxz
mov
push
std
dec
hlt
pop
in
fs
mov
mov
jne
pusha
xchg
push
and
testl
gs
mov
ror
xor
flds
cmp
dec
dec
sub
orl
pop
push
mov
and
call
xor
mov
sbb
popa
dec
jo
scas
and
dec
in
loopne
popf
out
xor
out
scas
sbbl
pop
adc
loop,pn
sbb
fsubs
outsb
and
jnp
in
lret
addr16
loopne
jbe
in
test
lcall
fcmovnu
push
dec
push
jno
inc
icebp
shlb
dec
lcall
das
mov
and
add
sub
dec
xor
xchg
mov
dec
adc
jae
mov
cmp
outsl
icebp
into
in
rcl
fsub
shrl
lret
lret
out
lea
loop
inc
mov
or
fwait
test
or
sarb
add
in
xchg
xchg
and
mov
popa
mov
mov
repz
fldl
ret
inc
inc
out
or
and
xor
ffree
ret
sub
lds
popf
mov
aam
test
test
and
and
pop
hlt
mov
in
jp
push
sbb
popf
out
insl
ja
sub
push
icebp
sti
mov
sub
outsl
push
call
mov
aaa
and
inc
jb
fstps
xor
dec
xlat
cmc
arpl
rcr
or
cmpsb
xor
dec
cld
add
adc
fdivl
int
arpl
notb
push
xchg
es
inc
clc
xchg
in
in
movsl
add
and
pushw
dec
icebp
sub
push
dec
or
mov
outsb
lock
cmp
jge
mov
sbb
fcoms
sbb
mov
sub
mov
pop
test
mov
xchg
rcr
mov
andl
in
or
loopne
jmp
sbb
mov
push
sub
lds
insb
inc
movsl
lahf
mov
fnsetpm(287
sbb
ficoms
cltd
inc
cltd
out
inc
jno
mov
lock
hlt
notb
fisubs
sub
repz
jnp
or
mov
into
cmpsl
lods
fsub
inc
xor
xchg
loopne
add
out
stos
xchg
mov
xchg
cwtl
nop
xor
lds
enter
cwtl
mov
test
cmp
fwait
leave
push
lcall
jle
imul
fcoml
cwtl
xchg
add
int3
dec
dec
xor
push
fnsave
jle
pop
mov
out
push
mov
insl
or
pop
sahf
or
pmaxsw
int
pop
mov
mov
and
jbe
int
call
aam
inc
jmp
adc
cltd
clc
lea
lods
mov
ret
pop
adc
mov
xchg
dec
jp
mov
loopne
fisttpl
sub
push
sahf
test
xchg
into
jl
push
sub
mov
pop
out
sbb
outsl
push
iret
sub
out
leave
dec
mov
cmovo
iret
dec
out
push
lods
aam
bound
add
sbb
shll
xchg
syscall
pop
rcrl
rcrl
adc
rclb
add
lds
rcr
and
movsb
xlat
icebp
adc
dec
mov
in
push
test
mov
mov
ss
jecxz
mov
outsl
icebp
out
paddd
jmp
ds
xlat
fsts
mov
mov
mov
fst
fsubrl
lds
rol
daa
inc
clc
in
sub
mov
rcl
cli
mov
adcl
and
adc
inc
jb
inc
adc
das
xchg
xlat
and
inc
mov
jo
aad
sbb
mov
sbb
into
inc
or
mov
xor
out
or
mov
inc
in
movsb
mov
lret
insb
sahf
mov
es
jb
sub
dec
jno
std
jo
sub
cmpsb
fsts
jo
mov
mov
pop
dec
clc
cmp
sub
sti
and
and
mov
cmp
adcl
mov
cmp
test
in
push
mov
dec
dec
push
in
xchg
nop
dec
jl
pop
sbb
inc
add
pop
xchg
adc
outsb
push
rcr
inc
xor
cmc
aas
lahf
add
mov
insb
lock
lret
cmp
mov
out
sar
aad
loope
adc
cmp
or
ret
mov
lret
test
inc
cli
xlat
mov
je
cmpb
lods
inc
mov
pop
sahf
test
ja
cmp
push
outsl
lea
jp
popa
adc
popf
ds
push
fisubrl
mov
cmp
faddl
dec
popf
shrb
mov
add
adc
rol
cmp
andl
inc
lret
push
daa
rcll
add
popa
repnz
icebp
push
xlat
xchg
mov
sub
sub
out
add
sub
xchg
push
pop
out
mov
adc
aad
andb
in
sti
into
mov
iret
pop
sub
adcl
xchg
movsl
sbbb
int
loopne
arpl
push
out
cmp
pop
stos
test
xor
test
pop
mov
in
dec
mov
pop
out
jmp
imul
xchg
jbe
mov
fildll
mov
pushf
shll
mov
lret
ret
clc
decb
cmp
sarl
xchg
mov
mov
mov
mov
hlt
sub
lcall
cmp
or
lods
pop
push
jmp
cmp
push
stos
leave
add
push
dec
mov
arpl
mov
mov
bound
push
push
or
repnz
insb
sbb
jae
imul
mul
mov
and
aam
fisubrl
leave
psllw
mov
xchg
mov
in
mov
hlt
out
ret
fstp
fcomps
dec
push
daa
fwait
outsl
mov
in
insl
into
fbld
and
xor
test
inc
scas
ss
in
sbb
jmp
pop
out
ret
je
arpl
push
mov
in
rcl
xchg
fstps
into
fldenv
pusha
gs
std
jg
jp
push
mov
and
jl
into
into
stc
jne
pop
lahf
jnp
cld
lret
or
call
xchg
xor
stc
sbb
mov
ret
add
adc
xchg
adc
nop
xlat
imul
imul
in
mov
hlt
sarl
lock
imul
push
dec
inc
dec
xor
inc
push
pop
into
dec
xchg
in
add
xlat
cli
jne
jmp
mov
in
repnz
cmpsb
jp
dec
and
mov
add
adc
xor
cli
movsl
int3
adc
mov
mov
mov
cmp
add
push
int
pop
xorl
popl
mov
out
arpl
xor
inc
bound
cmpsl
jecxz
and
adc
notb
jno
xchg
movsl
and
push
dec
adc
adc
push
scas
push
sbb
mov
mov
push
pop
cmp
insb
pop
xchg
sti
or
push
je
jle
dec
in
or
lock
add
sbb
mov
push
xor
insb
andl
inc
cltd
popf
rcll
mov
jne
fwait
imul
rorl
sub
cmp
notl
repz
xlat
mov
mov
inc
mov
and
data16
or
lods
xor
jp
dec
sub
and
mov
and
iret
cmp
or
loope
xor
in
out
inc
lret
pop
fbld
dec
pop
addb
es
outsl
mov
mov
or
and
imull
loop
sbb
adc
sub
sub
pop
test
jae
jne
dec
and
mov
inc
sbb
dec
lahf
sub
jp
retw
ficoms
sbb
iret
popf
cmp
daa
pop
cltd
inc
mov
or
outsb
sub
sub
cltd
mov
js
mov
dec
bnd
ret
fisubl
sbb
fisttps
xor
pop
lds
outsb
inc
sbbl
xchg
or
inc
mov
test
out
add
subl
jo
xor
andb
push
dec
push
mov
push
into
cli
and
inc
pushf
mov
mov
inc
adcl
sbb
mov
dec
fwait
insl
stc
sub
test
cmpsl
adc
xor
mov
scas
jg
adc
jb
stos
iret
xor
clc
push
cld
push
xor
and
fildll
jns
or
add
filds
adc
mov
stc
test
add
ja
test
jb
cmp
cmp
dec
lcall
dec
push
add
or
xchg
ds
enter
sbb
mov
lret
scas
int3
lea
out
and
inc
scas
add
sub
or
in
sub
adc
ret
cltd
sub
lds
inc
lds
push
dec
adc
pop
sahf
mov
ss
sahf
xchg
data16
lods
xor
fnstsw
xchg
enter
scas
pop
xchg
sahf
jge
dec
jbe
cmp
push
test
inc
lds
xor
add
add
and
pusha
idivb
jne
andb
and
cld
stos
jg
and
push
fists
es
or
and
jl
mov
lret
jbe
dec
ret
or
xor
adc
xchg
bound
sub
stc
out
mov
loop
in
add
push
test
lcall
stc
rcrl
xor
jno
add
mov
xor
xchg
jge
rorl
cmp
sub
lods
dec
scas
loopne
popa
push
jne
push
leave
pusha
jb
jl
mov
jo
mov
cmc
stos
mov
pusha
jl
cltd
or
int3
cmpsb
sbb
jns
test
fnstsw
mov
push
adc
pop
sub
sub
cltd
jge
cld
pop
orl
nop
popa
mov
ja
inc
stc
mov
sbbb
subl
push
cmp
or
lcall
das
cmp
stc
imul
jp
adc
mov
int
jo
jmp
inc
xor
mov
sahf
jne
dec
jo
aam
adc
cmp
adc
mov
dec
cmp
or
jbe
into
sub
xor
dec
xor
xchg
dec
ss
mov
sub
add
fs
loopne
pusha
xchg
sahf
cmp
lock
ret
pop
inc
push
hlt
and
mov
ret
rcll
cmp
sub
mov
clc
jmp
lock
xchg
sbb
xor
adcl
adc
mov
xor
and
xor
push
movsb
in
adc
std
icebp
scas
xchg
gs
inc
sahf
adc
or
cmpsb
adc
out
add
or
mov
popa
adc
adc
mov
fsts
xchg
xchg
pop
push
cs
xor
movsl
aaa
sbb
add
sahf
xchg
jb
into
mov
mov
arpl
push
lret
and
and
xchg
adc
sub
test
cmpsl
mov
mov
out
dec
cs
and
loopne
enter
adc
pop
rcr
in
imul
loope
lret
lret
popf
ficoms
fmul
fisubl
lcallw
lods
jns
out
mov
bswap
pop
sub
jns
cld
xchg
inc
lahf
lods
cmp
faddp
rcll
loopne
push
fdivl
movb
cmpsb
movsb
ret
xorl
into
xchg
xchg
pop
pop
mov
mov
lahf
mov
jne
nop
inc
add
jp
jg
into
loope
push
pop
hlt
int3
mov
add
cli
enter
push
jmp
push
repz
test
rclb
inc
lock
scas
shrl
or
pop
aaa
push
arpl
fists
lods
sbb
sahf
or
in
sub
imul
mov
cmpsl
adc
adc
scas
xlat
pop
gs
mov
and
or
mov
adc
pop
jge
xorl
mov
imul
xchg
mov
cmp
das
test
pop
out
inc
push
cmc
and
xlat
pop
dec
mov
and
rolb
pop
dec
les
rcll
arpl
push
xor
mov
in
testl
scas
xchg
sbb
jno
sub
ljmp
mov
fbstp
dec
stos
imul
adc
mov
fsubrl
mov
inc
pop
aas
ror
mov
test
and
int
ja
jae
and
movsl
push
cmpsl
push
aam
pop
shlb
mov
mov
dec
leave
in
rol
aam
mov
cs
mov
stc
ja
aas
mov
cmpsl
cmp
ljmp
rcll
jnp
xchg
data16
sarb
push
or
jae
js
inc
sbb
pusha
push
arpl
mov
adc
and
repnz
mov
mov
mov
xor
xor
std
hlt
cmc
push
roll
test
fldcw
insl
push
push
xor
sbb
and
sti
pop
rcrb
js
js
jae
out
std
push
pop
aas
pop
popa
sub
les
int3
and
or
cs
ret
cmpsl
push
in
pushf
mov
jae
lods
jns
loope
daa
mov
cmp
movsb
xchg
outsb
add
lcall
and
cmpsb
cld
movsb
xchg
or
sbb
or
loope
into
icebp
lock
xchg
or
sbb
sahf
subb
js
pusha
inc
push
inc
aas
dec
push
mov
cli
inc
mov
test
fucomi
and
mov
and
xchg
or
out
adc
scas
js
push
lds
ret
cwtl
gs
decb
in
int3
fdivrl
decb
leave
aad
pop
xchg
cwtl
int
or
xorb
mov
lea
jmp
mov
out
leave
insb
xchg
jbe
mov
in
push
rcrl
test
loopne
mov
cli
outsb
loope
scas
jb
xor
pop
fwait
xchg
add
rclb
pop
lea
adc
sbb
add
in
iret
cmp
out
add
xor
mov
pop
lds
aam
add
dec
fbld
lods
loopne
dec
jns
push
mov
mov
push
xor
je
leave
fxam
in
scas
jl
loop
out
jb
cmp
adc
and
and
add
mov
int
addb
jno
mov
mov
rorb
jbe
xchg
xor
insb
outsl
fwait
out
lods
or
xor
sbb
adc
and
push
pusha
cld
add
and
ja
or
mov
push
mov
les
in
sub
mov
in
cmc
pop
sbb
imull
aam
shll
jbe
cmpsb
or
rolb
bound
adc
pusha
out
pop
jae
nop
daa
cmp
cmpsl
je
mov
mov
aam
lds
add
dec
movsb
int3
sbb
mov
or
pop
aam
enter
lgs
icebp
cmp
nop
faddp
pop
sbb
out
loopne
mov
out
cmc
mov
adc
pop
js
mov
cs
in
lods
mov
test
jo
jbe
dec
pop
neg
ja
ror
movsl
cmp
lock
mov
mov
mov
cmp
mov
mov
adc
jnp
es
lea
data16
fdivs
or
pop
push
ljmp
dec
sti
or
cli
and
pop
mov
jmp
cmp
out
in
popf
or
filds
packsswb
push
pop
mov
adc
push
mov
adc
loope
jns
mov
sub
push
lahf
dec
repnz
push
mov
mov
in
push
cwtl
cmp
mov
fiaddl
insb
test
add
jno
xor
mov
jns
mov
dec
mov
je
mov
outsl
adc
scas
data16
aaa
xor
mov
addr16
lret
add
arpl
je
mov
and
loopne
dec
icebp
jle
lock
stos
pop
mov
push
pop
sbb
push
push
aam
arpl
out
enter
sbb
and
cs
jg
imulb
cmp
add
hlt
sbb
sbb
out
dec
pop
shlb
jmp
stos
negb
push
adc
lea
mov
adc
jo
rcll
mov
sub
sbb
test
inc
jb
dec
push
test
xor
xor
xchg
push
lret
loop
aam
pop
ss
mov
adc
or
mov
inc
mov
clc
outsb
rcll
push
sbb
adc
data16
aad
add
fbstp
test
frstor
in
jo
pop
test
in
pop
dec
fmuls
sub
push
or
cmp
pushf
mov
movsb
in
xchg
and
gs
stc
mov
into
sub
mov
loop
outsl
and
adc
dec
gs
sub
pop
lods
adc
lret
call
xor
pop
mov
mov
and
out
iret
sub
shrb
or
imul
repnz
add
arpl
jecxz
push
rcr
testl
rolb
stos
push
cmp
mov
mov
clc
inc
dec
negb
repz
imul
in
aas
xchg
mov
js
cmpsb
mov
and
push
sarb
out
and
mov
idivl
pusha
push
jns
popf
inc
int3
pop
dec
repz
outsl
pop
pop
pop
add
andb
fidivrs
jle
aaa
nop
sarb
cmp
rcrl
and
into
dec
mov
shr
ss
cmp
stos
scas
cmp
fcompl
loope
jne
adc
xchg
jge
xor
jl
mov
rcrb
and
icebp
dec
mov
mov
aas
pop
push
cmp
mov
jnp
sub
test
movsl
aad
pop
movsl
jmp
xor
cmp
insb
add
iret
inc
rolb
jp
sub
xchg
dec
pop
pop
xchg
mov
hlt
or
jae
cwtl
mov
les
loope
nop
jp
mov
or
pop
repnz
clc
mov
cmp
adc
cld
xchg
sbbl
hlt
mov
js
movsl
pop
iret
or
cmc
push
mov
lcall
out
fs
pop
pop
jae
jno
dec
cmp
and
push
add
cmp
loope
pop
lret
mov
add
ljmp
xchg
xchg
sbb
push
arpl
repnz
clc
das
hlt
jbe
cld
add
or
lfs
inc
push
sub
repz
int
clc
xchg
jmp
mov
lods
shrl
mov
pop
pop
cmp
in
xchg
sbb
sbb
cmp
push
cs
sbb
sbb
xchg
jnp
sbb
imul
and
mov
insl
bound
push
mov
decb
popa
and
dec
loope
sbb
dec
jne
pop
in
mov
scas
xchg
adc
aaa
pusha
mov
fmull
fs
test
dec
addb
cwtl
cwtl
mov
dec
and
inc
adc
test
dec
cltd
jp
cmp
pushf
jg
lods
iret
pushf
lahf
xchg
adc
xchg
lea
mov
xor
sbb
lret
enter
das
push
aas
ret
pop
ja
or
push
loopne
ss
in
test
mov
out
daa
in
inc
mov
mov
inc
repnz
and
stos
xor
mov
enter
test
or
notl
inc
sub
inc
rolb
adc
xchg
movsl
inc
push
dec
xorb
popa
inc
xlat
or
loopne
mov
je
inc
and
push
or
sahf
loop
test
push
in
nop
mov
sbb
and
les
xor
in
xor
jmp
out
loopne
aas
cmpsl
sti
sbb
jle
adc
add
mov
cmp
add
or
pop
cwtl
ds
stos
xchg
cmp
popf
loop
and
loopne
xchg
push
fstpt
mov
adc
mov
adc
xchg
add
fcompl
xor
cmp
in
mov
dec
ret
xchg
daa
dec
cmp
pop
jb
lock
mov
sarl
js
jo
push
adc
jg
sbb
jne
icebp
call
lods
repz
int
pop
cmp
pop
pop
rclb
push
nop
push
or
enter
xor
or
test
xor
mov
xchg
cmp
xchg
add
sub
pop
outsl
cli
and
dec
xor
stc
sub
or
sbb
xor
iret
fstl
sbb
xor
dec
mov
lock
xchg
lock
sbb
xchg
ja
and
pop
scas
sahf
addr16
add
adc
scas
jne
jnp
data16
pop
es
and
inc
repnz
int3
in
es
ret
inc
out
jnp
mov
lds
xor
insl
insb
jo
fisubrs
ret
sbb
les
imul
sbb
popl
dec
push
into
lahf
imul
ror
lock
addr16
adc
in
cld
ja
movsb
add
stos
add
sub
jne
inc
inc
out
inc
lret
ret
mov
sahf
loop
js
pusha
cmpsl
add
mov
jmp
jo
lds
and
or
pushf
jl
sti
rcl
lahf
adc
test
inc
das
aas
fadds
cli
or
jmp
jl
lock
sbb
dec
cmp
sub
shlb
mov
mov
lods
scas
mov
imul
es
xchg
jb
je
lock
shll
inc
mov
mov
mov
inc
jnp
mov
cmp
aam
stos
jnp
push
fwait
mov
je
dec
mov
sbb
sbb
push
jo
jle
mov
fildll
xlat
sahf
in
cwtl
shll
and
ljmp
fadds
adc
add
mov
int3
fwait
sahf
lock
cmp
add
dec
or
jmp
mov
imul
sar
push
jo
lds
push
sub
pop
and
xchg
jb
sbb
lret
clc
mov
mov
idiv
fsts
jne
push
clc
sarl
sub
mov
divl
push
xor
mov
cmp
pop
rorl
popf
icebp
xor
js
xchg
inc
and
add
pop
push
cmp
jb
dec
jmp
sbb
fcompl
mov
testb
outsl
and
and
loope
icebp
sbb
inc
inc
sbb
and
lret
inc
mov
inc
pop
mov
add
inc
ss
stos
cmpsb
mov
out
xor
sub
popa
sub
jbe
sub
jg
mov
jp
ret
mov
push
outsl
js
adc
into
adc
fwait
mov
lea
mov
sti
sbb
imul
and
stos
setnp
shll
and
sub
int3
mov
xchg
add
fdivrs
lret
sub
adc
push
mov
sub
mov
dec
sbb
pop
mov
sub
adcl
sub
cmp
test
pop
stos
mov
push
adc
push
jbe
push
fsubr
cld
dec
pop
dec
aam
push
cltd
lds
ds
cmp
push
pushf
cli
mov
and
imul
cltd
xchg
movsb
stos
jecxz
adc
jecxz
sub
and
mov
js
mov
pop
dec
mov
push
sub
and
and
jae
out
add
cwtl
into
int3
adc
cmp
sub
rolb
iret
shl
leave
adc
mov
xchg
mov
xor
adc
mov
aaa
and
push
test
fcmovnu
test
add
jmp
out
popf
mov
lret
jnp
insb
repnz
shrl
rcrl
ljmp
shrl
xchg
out
out
add
lret
test
mov
inc
shlb
test
push
pop
lcall
sub
and
lcall
ljmp
imul
ljmp
sarb
xchg
pop
lret
int3
jbe
lcall
push
sbb
or
dec
dec
jbe
cmp
cld
dec
push
outsl
negl
jmp
stc
icebp
pop
out
jge
jns
jns
sbb
movsb
repz
jo
adc
scas
pop
mov
push
sub
sbb
ds
sub
and
fs
mov
nop
sbb
movsl
or
or
adc
insb
inc
mov
lret
cld
iret
ljmp
inc
shlb
rcll
loopne
add
sub
push
ficomps
movsl
sub
cmp
out
stos
inc
dec
pop
mov
push
ret
sbb
sbb
ds
cmp
icebp
ja
mov
and
pcmpeqw
xchg
pop
mov
inc
add
cwtl
add
movsb
fsubl
daa
pusha
ror
nop
sahf
cmp
jne
sub
push
mov
sub
insl
xor
adcl
in
mov
pop
mov
or
int3
push
shlb
and
adc
mov
cmp
mov
scas
jle
pushf
mov
hlt
add
lret
mov
mov
cwtl
mov
cli
lcall
aad
pop
or
xchg
cmpsl
repz
push
xchg
mov
dec
ds
and
stos
stos
aaa
out
jmp
das
mov
in
mov
fnstenv
mov
push
clc
xchg
sbb
jno
and
cld
mov
pop
stos
icebp
cmp
jbe
lret
pop
or
sub
and
nop
xchg
cmp
pop
das
popa
out
fisubrl
popf
push
jecxz,pn
inc
mov
cmpsb
cltd
mov
xchg
adcb
divl
shrb
mov
push
dec
je
pop
adc
xchg
loope
test
shr
sbb
inc
inc
icebp
mov
cmp
cmp
icebp
cmp
push
add
xchg
sbb
pop
nop
push
stos
dec
test
jne
xchg
xor
jb
push
movsl
lahf
inc
add
mov
test
cmpsl
inc
push
mov
add
push
andl
push
adc
mov
cmp
cld
jmp
lock
movsb
pop
loopne
fstl
pop
lahf
sarb
adc
xorps
nop
inc
pushf
in
pop
push
rcll
push
mov
add
test
sub
cmpl
aam
xor
xor
sbb
push
pop
pop
sub
pop
lock
outsl
je
out
fcoml
fs
clc
icebp
cmp
pusha
jae
test
jno
mov
fimuls
lret
shll
mov
arpl
call
ss
mov
adc
imull
cmp
mov
pop
mov
and
fwait
into
scas
push
or
into
ficomps
fnstcw
pop
pusha
mov
insb
adc
push
pop
xor
test
inc
stos
jle
pop
jne
fdivs
bound
xchg
sarl
call
mov
and
aad
push
nop
lods
cmp
outsl
mov
in
loop
popf
popa
xor
lea
add
sub
dec
rorl
pop
mov
sub
loop
movsb
aas
test
jmp
inc
sub
ss
ret
and
outsb
rcll
pop
frstor
mov
dec
mov
mov
push
out
mov
fwait
aaa
js
aas
cld
cmpsl
jno
insb
sub
cmp
lahf
jge
ret
pusha
jle
mov
xor
pop
jg
xchg
fmulp
aam
push
hlt
out
or
push
fcmovnu
insb
cmpsb
sub
mov
adc
inc
inc
sub
aas
fstl
popa
jno
enter
in
cmp
pop
test
or
aaa
or
or
or
movsb
es
add
in
pushf
call
bound
adc
cmp
hlt
daa
or
cli
in
jb
stos
push
add
cmpsb
fxam
dec
sub
push
into
aaa
mov
mov
xorb
incb
pusha
shll
dec
push
inc
cmp
lret
mov
mov
sbb
ljmp
icebp
int
mov
mov
or
push
fisubs
out
in
pop
test
movsl
xchg
dec
and
jo
cli
ja
sti
inc
push
aaa
stos
out
lcall
test
shr
push
cmc
data16
outsl
and
lea
arpl
dec
arpl
imul
xchg
sub
jae
and
ss
dec
call
sbb
dec
push
bound
hlt
in
outsl
ret
popf
clc
jmp
inc
stos
cld
out
clc
test
sbb
rolb
cmpsb
cmp
cltd
jno
mov
aad
ds
pop
adc
lret
es
push
int
lock
inc
or
int3
mov
or
clc
xchg
push
aad
lret
jmp
insb
add
jbe
data16
or
sub
and
push
das
sub
or
mov
idiv
pop
cld
sbb
stos
or
in
inc
out
pop
fwait
movsl
pop
stos
sti
lea
cmpsb
jmp
js
dec
loop
rolb
xchg
stc
jg
xor
pushf
in
and
dec
stc
icebp
inc
sbb
mov
cmp
or
nop
jle
jns
sub
cmp
pop
mov
lret
cld
xchg
fs
insb
jle
mov
push
mov
sbb
cmpb
leave
mov
mov
orb
jne
sbb
out
mov
add
jle
or
pop
push
or
mov
js
sti
movsl
pushf
pop
jg
push
es
adc
lahf
clc
mov
or
stc
dec
fwait
in
sbb
out
inc
test
jae
mov
jae
pop
xlat
jecxz,pt
mov
dec
sarb
push
pushf
mov
push
add
mov
adc
pop
add
addb
cmp
mov
je
lds
movsl
xchg
sete
not
clc
or
xchg
stos
cmc
pop
push
jmp
push
jmp
aam
call
insb
pop
mov
lock
push
dec
pop
mov
push
in
imul
int
int
icebp
dec
jnp
adc
repnz
dec
sbb
mov
mov
popa
pop
adc
in
inc
jmp
hlt
inc
roll
or
fwait
and
in
inc
push
ljmp
sbb
push
inc
lods
dec
dec
lret
cli
sub
mov
cmp
add
jns
sahf
adc
mov
ret
scas
and
adc
adc
aaa
mov
mov
push
sbb
dec
cmp
rcrl
movsl
pop
jae
xchg
out
cmp
movl
in
cs
mov
mov
pushf
test
sahf
enter
push
mov
dec
pop
dec
cmp
mov
in
roll
or
xchg
movsl
mov
add
sub
mov
jl
mov
adc
cld
cli
aaa
in
inc
ljmp
enter
in
push
lret
adc
xchg
rcl
sub
nop
jne
cmpsb
xor
cmpsb
mov
cltd
dec
test
or
and
std
lock
mov
mov
inc
test
mov
subl
or
pop
shlb
dec
enter
test
adcb
movsl
mov
jmp
pop
je
es
outsb
fsub
inc
mov
mov
push
ret
cwtl
insb
rol
ret
inc
jl
mov
aad
push
fbstp
fs
mov
pusha
push
xorl
notb
aaa
les
sub
pushf
jo
std
movsb
xchg
mov
mov
or
jecxz
xor
sbb
rorb
jg
dec
nop
ds
cli
repz
imul
insl
out
repnz
xchg
lods
adc
insl
push
sbb
and
roll
shr
mov
fdivp
mov
cmpsl
rcr
mov
pop
sbb
jge
cli
jno
push
loopne
mov
mov
bound
divl
adc
push
fstps
adc
push
push
insb
sahf
mov
pop
dec
int3
mov
test
xor
dec
lret
movsb
mov
outsl
adc
xor
and
mov
ret
sbb
lahf
test
xor
repnz
shlb
mov
imul
jge
repnz
lret
std
and
xor
mov
sbb
mulb
adc
cld
pop
clc
xorb
cmp
or
stos
lock
out
inc
lods
dec
xchg
add
xor
in
jp
mov
pop
mov
inc
int3
es
mov
mov
test
aam
es
mov
jb
mov
jb
push
mov
pop
pop
xchg
and
dec
xchg
scas
adc
inc
sahf
mov
das
aas
mov
dec
gs
test
test
dec
xor
push
jbe
pusha
push
das
xchg
mov
mov
inc
or
sbb
out
jb
pop
unpckhps
sub
repnz
and
lods
int3
sbb
jbe
into
push
rcl
sti
push
ljmp
xchg
scas
push
mov
push
cmp
add
mov
cld
xor
mov
das
adc
mov
std
jb
daa
xlat
jnp
clc
jmp
rorb
mov
dec
push
xor
das
push
xchg
insl
lds
stos
lret
push
add
enter
mov
ds
dec
test
and
in
xor
jle
jno
inc
dec
inc
out
stos
pop
cmpb
inc
ds
nop
xlat
sub
pop
bound
jnp
pop
pusha
in
xchg
cmpsb
roll
dec
out
mov
mov
xchg
std
or
dec
loopne
push
push
cltd
push
mov
iret
lods
push
fiadds
mov
loope
jge
add
mov
mov
fcoms
stc
add
fisubrs
inc
and
dec
andl
cltd
mov
pop
bound
call
xchg
rcll
adc
push
outsl
idivl
scas
mov
js
mov
jge
mov
pop
jge
sbb
mov
or
adc
aas
xchg
or
mov
push
aaa
or
jae
leave
sahf
jae
ja
out
imul
mov
push
jns
jnp
mov
inc
decb
sbb
xor
xor
and
inc
leave
mov
out
testb
addb
fistpll
jb
cmpsl
shll
lods
add
jne
leave
shlb
adc
fnstenv
icebp
fwait
and
add
iret
sti
push
inc
bound
out
fldenv
mov
imul
fcomi
jnp
loopne
xor
lods
mov
cmp
mov
sbb
andb
push
xchg
aas
mov
repz
push
push
aas
pop
aas
and
into
repnz
sub
aad
lods
jne
cltd
jb
lret
popa
into
ds
dec
cmp
add
mov
pop
dec
push
mov
dec
inc
push
or
pop
stos
out
ds
xchg
dec
pop
dec
adc
ret
movsb
fcmovnb
shrl
jle
les
add
xorb
add
lock
rol
or
jmp
test
jmp
rclb
call
rorb
bound
xchg
pop
testl
in
out
test
pavgw
insb
push
adc
fmul
mov
je
lcall
mov
mov
xchg
int3
and
std
adc
cli
mov
int3
ljmp
mov
in
adc
and
ds
shr
inc
pop
cmp
ja
or
mov
mov
mov
nop
xor
std
aam
mov
out
stc
out
cmc
test
pop
divl
mov
inc
hlt
pop
scas
inc
fucomip
in
mov
mov
mov
mov
adc
loop
iret
movl
jo
repz
stos
dec
fimuls
rcll
jmp
in
inc
fxam
cmpsb
outsl
movsb
adc
pop
sbbl
loop
in
cmp
rorl
icebp
mov
mov
mov
sti
inc
mov
mov
dec
xor
sbb
push
ja
ret
mov
movsb
cmp
int
in
jns
adc
stc
jp
lret
jns
xchg
ljmp
pop
add
fsubrl
lahf
in
test
in
rcl
push
pop
jmp
adc
pop
loopne
push
push
cs
js
push
jno
test
sti
lret
push
cli
cmp
out
cmp
or
xor
adc
pusha
xchg
sbb
das
sbb
or
orl
lods
cs
sub
stos
cmp
addr16
xchg
les
jae
inc
jmp
aaa
mov
sbb
jbe
scas
add
or
pop
inc
lods
dec
popf
outsl
or
xchg
push
cmp
imul
sbb
or
in
inc
jo
jbe
int3
cltd
xchg
sahf
sub
nop
fidivl
sub
adc
pushf
in
cmc
icebp
xchg
and
aas
jns
test
sbb
fsubs
fsubrp
add
sbb
xor
mov
pop
fisttps
push
pop
movsl
stos
sub
push
xchg
add
mov
or
push
and
push
and
or
mov
pop
gs
es
mov
fidivs
sub
loope
and
repnz
xchg
dec
test
or
cmpsb
out
xor
lcall
leave
pop
fisttpl
out
mov
lock
ror
mov
jl
or
jno
fs
push
test
rcrl
call
aam
inc
out
push
mov
mov
addr16
stos
jbe
pushf
pop
xchg
int3
jae
out
pop
test
push
jecxz
inc
jo
sahf
out
or
xchg
adc
divb
lcall
adc
sbb
xor
or
imul
in
xchg
mov
xorl
jge
pop
and
push
int
das
fwait
sub
xchg
pusha
scas
clc
cld
in
ja
jbe
sahf
or
xchg
fisttpl
mov
mov
scas
test
mov
or
and
dec
xchg
sbb
pop
les
addb
push
add
ds
out
jne
dec
adc
sub
dec
fldt
push
scas
dec
nop
xor
add
push
sbb
cwtl
mov
mov
cmp
bound
fists
aam
fcompl
pop
push
mov
sar
fwait
aad
iret
jmp
inc
stos
movsb
xlat
mov
dec
ds
mov
lods
or
popa
in
add
push
xor
popf
aad
ret
clc
pop
arpl
int3
mov
imul
ja
aad
mov
shl
gs
lret
push
push
push
test
jl
or
xchg
das
xchg
or
mov
data16
add
adc
xor
pop
pop
adc
inc
ljmp
adc
inc
adc
xor
pop
cwtl
cmp
sub
dec
nop
or
adc
cmpsl
adc
cmp
inc
loop
aam
int3
push
out
xor
mov
pop
cltd
mov
dec
lods
testb
pusha
pop
add
nop
mov
sub
xchg
xor
icebp
sub
pop
and
test
mov
ret
dec
jns
push
cmp
add
inc
scas
hlt
insb
inc
jge
sarb
mov
test
pop
movsb
test
ja
cmp
outsb
pop
sbb
jecxz
push
testl
shlb
rol
adc
lret
jmp
sbb
push
fisubs
test
rep
or
pushf
push
iret
iret
push
xchg
ljmp
loope
xchg
sbb
mov
or
sub
pop
sub
cs
cmp
sar
push
add
push
mov
jb
jp
or
xor
jle
pop
sbb
mov
cmp
je
add
bound
insl
sub
out
cld
jns
clc
mov
or
add
stos
out
xchg
movsl
adc
in
sub
loope
arpl
and
mov
dec
pop
jo
outsb
push
inc
and
or
pop
xor
stos
xchg
leave
loop
lret
xchg
push
arpl
shlb
mov
lock
dec
iret
pushf
jae
lock
xor
lock
ds
mov
daa
jl
ljmp
and
pop
or
int3
negb
js
pop
lret
xchg
icebp
xchg
fcmovb
outsb
stos
jae
and
sub
in
data16
xor
dec
inc
jnp
bound
aas
loope
pop
mov
rorl
into
loope
push
dec
add
mov
lcall
dec
jb
push
jns
ret
ds
scas
das
fimuls
sbb
jae
sbb
pop
mov
loop
cli
imulb
lret
xlat
dec
decb
and
std
jle
iret
mov
sbb
cmp
pop
aam
out
xchg
add
lock
xchg
add
pop
in
insl
adc
std
push
das
xchg
jo
cmpsb
mov
add
push
xor
and
aaa
stos
aas
fnsave
dec
or
push
push
gs
mov
bnd
lahf
adc
mov
loope
rcr
pushf
adc
jns
push
sbb
call
roll
xor
bound
or
mov
popf
dec
sub
insb
lds
stos
xchg
mov
jmp
repz
jns
sbb
adc
sub
or
mov
out
ss
add
jbe
cmp
dec
jns
xor
imull
jl
push
push
dec
shlb
sub
std
adc
jle
sbb
ss
cmp
mov
pop
sub
in
stos
test
fisubrl
sbb
mov
fiadds
loopne
jg
mov
sub
ret
sub
pusha
fnstenv
popl
or
mov
in
ret
mov
test
movsb
lcall
sbb
dec
and
scas
fldt
popf
data16
mov
jle
cmc
pop
mov
mov
bound
xchg
inc
in
repnz
mov
or
add
inc
lret
aas
mov
xchg
jp
sbb
fs
call
push
and
imul
fistpll
cmpb
mov
enter
mov
jecxz
xor
popa
scas
add
dec
pop
rcr
lcall
repnz
in
cli
iret
int3
rclb
mov
pop
dec
test
push
mov
xor
stos
mov
aam
jbe
test
adc
mov
mov
mov
rol
mov
pop
hlt
stc
cmpsb
repnz
dec
xor
xor
mov
mov
and
out
jno
fsts
pop
jns
inc
or
pop
insb
lahf
das
arpl
mov
mov
mov
push
stc
fists
jl
mov
fidivrl
add
and
pop
jb
ja
pop
mov
sub
adc
pop
push
es
outsb
lahf
pop
out
psllq
data16
fs
or
.byte
cltd
xchg
mov
lods
dec
xorb
loop
ret
pusha
call
jmp
lods
xor
stos
add
xchg
ror
inc
loop
ret
xchg
pushf
push
roll
roll
sub
push
mov
lea
mov
mov
mov
call
nop
ss
dec
dec
jno
ret
inc
lock
push
cli
sub
lret
pop
xchg
outsl
bound
dec
jge
push
jp
push
pop
push
add
addl
shrl
mov
pop
lds
or
cmpsb
jg
scas
clc
jmp
int
lcall
cmp
insb
xor
push
movsl
shlb
and
jecxz
sti
rcrb
inc
sub
shr
cmp
xchg
push
mov
lret
push
leave
into
out
ljmp
mov
icebp
mov
inc
out
jno
push
push
fnstsw
adc
jp
add
lea
es
cs
push
out
mov
mov
out
push
push
mov
pop
rclb
inc
add
divb
cmp
scas
das
mov
xor
or
sbb
clc
and
xchg
fmull
mov
cltd
cmpsl
push
sub
jb
lods
and
scas
stos
pop
cmp
out
and
addr16
push
jno
push
pop
nop
shlb
mov
fbstp
inc
mov
test
movsl
roll
inc
mov
push
xor
push
pop
pop
mov
popf
aas
rorb
iret
push
ret
xor
or
push
sub
cmp
lods
ja
mov
pop
setl
imul
mov
sbb
xor
mov
pusha
add
fwait
or
imul
inc
lret
mov
pop
movsl
cmp
pcmpeqb
mov
js
decl
inc
insl
outsb
sti
enter
sub
mov
clc
stos
divb
or
test
adc
jne
mov
dec
or
daa
push
orb
mov
mov
loopne
adc
sub
pop
iret
dec
xorb
inc
lods
fs
push
add
jb
insl
jg
imul
aaa
ljmp
scas
jmp
fbstp
and
dec
sbb
dec
pop
push
ljmp
pop
fs
cmp
add
ss
scas
insl
mov
mov
or
or
clc
mov
sbb
add
lods
idivl
hlt
mov
sub
mov
ret
cmp
aaa
js
sbb
movsl
dec
pop
pushf
sarb
push
notb
mov
cmp
cs
lods
push
inc
ret
pushf
xchg
xor
cwtl
lods
test
sbb
pop
pusha
je
call
repz
adc
call
mov
and
adc
add
pop
sbb
pop
mov
shlb
lcall
pushf
xlat
xchg
cmp
push
mov
dec
inc
jae
cmp
and
outsb
jb
test
fucomp
aaa
pop
ljmp
iret
scas
mov
inc
xchg
fwait
mov
testl
inc
addb
negl
lahf
into
ss
lods
in
invd
jle
insl
add
push
dec
imul
inc
hlt
in
mov
ror
outsb
mov
insb
inc
roll
mov
mov
lea
pop
fcompl
idiv
mov
sbb
add
mov
or
pushl
mov
inc
and
in
xor
iret
lock
inc
push
shlb
jmp
fdivr
scas
in
out
shrb
ja
cmp
shlb
inc
adc
ret
es
and
stos
adc
jae
pusha
mov
shr
adc
rcrb
ret
jmp
loop
cmp
hlt
xlat
mov
add
lds
pusha
xchg
leave
clc
negl
mov
cmp
std
jo
data16
and
adc
addl
xor
xor
es
adc
mov
xor
xchg
stc
out
or
imul
lretw
mov
inc
aad
daa
push
lea
lds
xor
cwtl
add
jmp
cs
cld
mov
loopne
dec
movq
outsl
push
mov
mov
add
sub
inc
orl
insb
shrb
push
ljmp
cs
popa
cmpsl
arpl
insb
add
dec
push
addr16
jge
sub
bound
cwtl
mov
insl
fcompl
out
loopne
push
sub
and
fsubrs
addr16
lcall
ror
mov
or
outsb
cmp
ss
dec
ret
loopne
loopne
testb
in
cmp
jl
ret
in
ret
lods
das
mov
and
and
mov
jnp
lock
dec
test
push
sub
les
xchg
xchg
js
xlat
bndldx
push
js
sub
push
mov
sbb
jb
push
test
idiv
and
icebp
into
loopne
bound
aad
in
add
test
mov
push
stc
sub
ret
xchg
orb
jl
pop
mov
mov
xorb
rcrb
adc
push
loopne
inc
jb
xor
mov
mov
shlb
cltd
enter
stos
dec
fdivs
pop
inc
loope
clc
pop
loop
jne
pop
jmp
dec
shr
je
mov
mov
fcomp
mov
push
pop
cwtl
lods
and
pop
in
xchg
and
pop
shll
push
and
or
cmpsb
into
push
dec
sbb
mov
inc
xor
dec
sti
or
stos
push
sub
push
std
mov
mov
aad
push
push
pushf
cwtl
popf
push
clc
into
cwtl
mov
fdivs
mov
bound
cmp
mov
dec
pop
add
fcmovne
push
pop
js
fbstp
rcll
mov
pop
mov
adc
dec
fistpl
mov
push
cmpb
ret
clc
dec
mov
sub
sti
jp
add
or
mov
add
push
mov
fucomip
adc
cmp
scas
cli
popa
adc
inc
mov
xor
lock
sti
mov
cmp
cltd
push
mov
in
testl
mov
ss
stos
les
sbb
out
sti
insl
aaa
mov
jne
test
jno
sub
out
xchg
mull
fisttps
outsl
rcrl
adc
loope
mov
cld
jmp
pop
fisubl
mov
jae
jb,pt
lret
cmp
push
je
dec
ds
push
cmpl
adc
dec
or
push
xchg
int3
movb
cmp
dec
repnz
hlt
sub
pop
out
das
daa
fistpll
lock
xchg
popf
or
pushfw
test
sub
pushf
jo
scas
mov
js
stc
inc
int3
out
test
mov
mov
mov
inc
mov
outsb
cmp
and
mov
rclb
xor
movl
lret
sub
cltd
xor
pushf
mov
loopne
std
dec
mov
test
movsl
repz
pop
lret
sbb
ljmp
fstl
aad
cmp
push
in
pop
push
mov
out
fcomps
fucom
or
out
cmp
sbb
sbb
dec
fwait
jne
insb
sbb
adc
int
mov
iret
adc
movsl
cmpsb
mov
adc
mov
std
mov
xchg
ljmp
mov
popa
jnp
outsb
sbb
out
mov
pop
xor
mov
xchg
dec
xchg
sti
inc
or
es
mov
aas
jbe
mov
clc
adc
xor
faddl
mov
into
xchg
push
push
xchg
xchg
dec
or
add
jmp
dec
push
xor
cmp
and
mov
xchg
jl
out
or
xchg
cmp
mov
xchg
fidivrs
add
js
aam
jl
or
push
jne
out
insb
sbb
inc
add
gs
fsubr
gs
arpl
cmp
mov
nop
cmp
in
es
das
cwtl
lds
xchg
lret
scas
pop
cmp
scas
jmp
inc
mov
or
sbb
clc
pop
int
ja
ret
js,pt
mov
mov
lods
addb
mov
lahf
add
or
fucom
adc
loop
insb
cltd
and
jg
aad
shlb
adc
jl
in
jo
mov
scas
adc
pop
push
push
std
fisubrl
imul
in
push
add
cmc
adc
mov
jg
sbb
lods
add
jecxz
push
xor
stos
pop
test
movsl
arpl
inc
in
bound
data16
adc
jecxz
int
data16
adc
mov
inc
cs
movsl
stc
repz
aas
inc
pop
cltd
aam
xchg
inc
add
xchg
adc
cmpsb
je
jne
stos
ret
imull
rorb
test
pop
leave
vpshuflw
data16
mov
les
repnz
xor
ret
mov
mov
pop
in
aad
cmp
xchg
xor
mov
test
mov
xor
dec
mov
jno
and
daa
add
cmp
movsb
adc
aad
inc
sbb
mov
sbb
sub
dec
push
sarb
mov
leave
pusha
testl
fldcw
adc
sarl
inc
mov
jae
mov
push
fstpt
mov
sbb
cwtl
jo
pusha
add
mov
mov
mov
and
test
xlat
jno
and
sbb
lock
loopne
xchg
pop
pop
fdivs
lret
imull
mov
pusha
mov
mov
lret
cs
lcall
jle
cs
ss
arpl
adc
fadds
inc
arpl
push
fs
and
adc
repz
shlb
push
xchg
pop
bound
inc
and
into
push
inc
and
aaa
pushf
cmpsb
push
and
addl
imul
stc
popa
xor
add
scas
pop
mov
pop
mov
fcmovnu
outsl
fsubr
and
sub
push
sbb
imul
outsb
pop
nop
sub
dec
movsl
shr
cmp
mov
push
mov
lcall
cltd
dec
ret
test
jnp
lahf
pop
cs
call
push
js
aas
and
hlt
iret
call
push
sbb
inc
mov
mov
xor
jecxz
mov
adc
mov
loopne
pop
mov
mov
lahf
shlb
addr16
fdivp
insb
aaa
cs
xor
gs
pusha
mov
fwait
jge
mov
xor
lea
cld
xor
icebp
stc
mov
iret
movsl
push
mov
cmp
sahf
sbb
pop
cmc
and
xchg
sub
aam
adc
pop
push
adc
cmpsl
iret
xor
sub
in
mov
or
add
add
or
movsb
sub
add
sub
add
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
add
inc
add
inc
