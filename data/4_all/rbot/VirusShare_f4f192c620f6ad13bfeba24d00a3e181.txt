mov
movsl
mov
jnp
mov
aad
es
and
lock
cmp
lock
movsl
push
out
pop
rcll
jns
andb
movsb
sbb
stc
mov
cmp
mov
std
dec
idivl
pop
cmp
call
cmp
imul
fdivrl
arpl
pop
insb
xchg
jecxz
insl
mov
repnz
cmc
pop
jne
pop
lods
or
movsl
loop
sbb
sub
lds
cli
jns
mov
out
cmc
lea
in
ds
cmp
add
mov
push
lss
lods
jns
rcrb
and
mov
fs
ret
add
jb
and
jle
insl
mov
fdivl
add
stc
mov
mov
lcall
cld
mov
sub
sbb
and
pusha
mov
sbb
nop
lcall
jns
adc
aas
clc
ss
pop
in
enter
fnstsw
pusha
mov
sbb
mov
mov
mov
or
cld
and
mov
int3
cmp
sub
add
int3
mov
dec
je
sub
popf
pop
je
roll
pop
adc
pop
mov
fdivrs
mov
xor
ljmp
iret
movb
jo
mov
xchg
test
mov
imul
cmpsb
and
sub
rorl
dec
push
cmp
add
das
sbb
jle
mov
pop
jnp
je
or
xor
add
aaa
js
pop
dec
jb
lret
lods
mov
test
add
lods
jge
imull
lea
jge
add
lea
pop
add
xchg
push
add
push
cmp
push
inc
adc
jno
lcall
test
dec
cmp
fmull
xchg
fdivs
test
xchg
inc
roll
rcl
push
clc
ljmp
add
adc
cmpsl
ja
cmp
lock
add
xchg
cwtl
dec
ja
out
and
xlat
mov
lock
into
loopne
pop
in
shrl
js
rorb
sti
push
popa
lds
xor
sbb
js
ret
enter
pop
ljmp
shlb
jno
mov
pusha
sbb
mov
cmp
pop
test
push
ret
lret
cld
lret
int3
or
xor
sbb
lcall
call
mov
xchg
jle
push
adc
dec
imul
stc
xchg
nop
loopne
sub
in
test
sub
cmpl
mov
sub
mov
inc
cs
nop
cltd
bound
cmp
inc
shll
test
imul
or
sbb
cwtl
xor
test
lret
push
das
mov
ret
mov
out
pushf
jae
idivb
inc
inc
add
lea
ret
mov
or
push
scas
pop
jl
cmpsl
out
aaa
mov
sar
nop
add
or
cmp
stos
mov
cmpsl
pop
cmc
in
test
pushf
mov
mov
xchg
mov
lea
and
repz
shll
test
and
lods
jl
ret
lock
add
insb
fimuls
sbb
sbb
mov
mov
fwait
jecxz
push
xchg
nop
sub
xchg
fimull
jg
fisubrs
ljmp
sbb
cmp
or
lret
addb
jno
popf
mov
dec
jnp
mov
imul
cld
dec
inc
fidivrl
jo
jl
fwait
insb
xchg
js
xchg
stos
xor
pop
stos
add
neg
btc
rorl
add
mov
mov
add
adc
pop
xchg
orb
push
clc
fdivr
mov
cltd
fidivrl
xchg
leave
pop
imul
and
xor
nop
inc
outsb
ljmp
lods
mov
aam
hlt
mov
insl
sbb
call
mov
cmpsl
int
xorb
int3
push
test
jecxz
xor
bound
testl
insb
mov
xor
decb
fs
push
repz
push
mov
test
ret
mov
add
in
sbb
aam
imul
cmp
dec
cmpsb
pop
ja
xchg
or
mov
cld
and
cmpsl
fdivl
jmp
insl
ja
xchg
inc
mov
inc
cmp
or
cmp
rolb
or
push
cmpsb
stos
sahf
pop
sti
push
pop
stos
cmp
mov
arpl
ja
and
cltd
pop
ss
xor
mov
sub
test
mov
movsl
out
imul
jbe
mov
push
jnp
add
or
pop
lods
mov
in
popf
out
jbe
jnp
sub
xlat
pop
mov
xchg
stc
and
js
loope
mov
outsb
push
int
cmp
or
sub
lret
adc
in
stc
push
pop
ds
jnp
test
andl
inc
push
lock
and
mov
outsb
jae
dec
jle
int3
xchg
dec
outsl
lret
mov
lock
and
subl
stos
aad
out
inc
adc
jmp
jp
jmp
fstps
dec
mov
insb
cmc
cwtl
mov
shr
xlat
xchg
mov
fildl
int3
cmp
js
pop
fdivrs
sbb
add
es
push
pop
cs
insb
les
sbb
std
lea
mov
dec
xor
mov
adc
adc
mov
pop
rol
xor
pop
cmpsb
out
pop
mov
pusha
mov
jecxz
xchg
adcb
lods
push
jg
sti
jl
popl
fistpl
movsb
int3
cmpsb
or
jg
sub
cld
mov
and
sub
leave
nop
std
call
or
cltd
mov
mov
cltd
and
out
test
add
imul
inc
add
dec
add
mov
jmp
adc
mov
inc
inc
shl
xor
pop
or
and
lret
into
test
cld
dec
mov
sub
or
push
and
mov
ljmp
jge
aas
outsl
mov
fildl
ficomps
gs
test
lret
test
xchg
sahf
cld
mov
shll
pop
roll
add
icebp
xchg
jmp
or
mov
test
lock
xchg
out
mov
cmp
test
inc
mov
push
or
insb
xorb
mov
and
add
jns
les
shr
jo
or
fistpll
jns
inc
mov
repnz
test
pop
test
sub
aaa
mov
aas
mov
into
enter
rolb
push
call
sahf
loop
dec
sub
pushf
push
mov
insb
mov
inc
fisttps
adc
mov
xor
and
xor
mov
mov
mov
jp
in
loop
inc
pop
pop
xchg
xchg
sbb
imul
rorl
mov
fwait
inc
or
movsb
jns
pop
inc
inc
mov
jge
lcall
es
adc
mov
aaa
int3
pop
es
in
and
xchg
xchg
dec
out
add
adc
sbb
outsb
andb
pusha
call
cmpsb
cmp
mov
push
mov
jp
cli
jns
cmp
push
xor
lock
adc
jle
sbb
push
and
pop
ret
je
mov
ja
or
and
adc
repnz
js
ljmp
sarl
imul
push
sub
inc
mov
push
lea
mov
or
fnstsw
cmp
enter
mov
roll
inc
sahf
jno
mov
dec
adc
mov
sub
inc
cmp
into
pop
outsb
in
dec
daa
push
dec
idiv
fiaddl
mov
mov
push
testl
mov
cmp
es
pop
outsb
xorb
pop
jno
or
dec
out
mov
inc
mov
mov
cli
cmc
into
mov
xor
bound
out
push
unpckhps
insl
fwait
add
pop
pusha
out
inc
ret
std
pop
mov
cmp
mov
jmp
and
in
dec
scas
add
add
int
jae
adc
inc
pop
in
sbb
sub
xchg
jno
xor
and
sbb
pop
fcmovne
arpl
xchg
cli
aad
out
or
adc
pop
out
and
adc
dec
aaa
sarl
push
in
mov
jl
nop
xchg
add
or
mov
xchg
jnp
cmpsb
ljmp
fs
fmull
jno
mov
xor
popf
ljmp
sub
in
movsb
ficoml
push
sbb
add
shlb
pop
jp
leave
sub
pushf
shll
sbb
stos
mov
ja
lret
rclb
cltd
movsb
pop
xchg
push
fwait
adc
sub
imul
iret
aad
aam
nop
pop
jmp
stc
jl
loopne
cmpsl
jns
jmp
jge
cli
xor
sti
mov
dec
and
jns
aad
negl
lods
mov
cld
jo
or
jmp
addl
ret
dec
fistl
scas
insl
jle
sub
les
lods
sahf
add
inc
xor
sbb
and
sbb
mov
lods
rclb
aam
ror
insl
pop
sar
jge
lds
dec
aaa
push
sbb
sbb
fbld
lods
push
mov
sbb
fistps
push
push
scas
std
fwait
mov
pop
bound
loop
dec
fnstcw
or
call
shrl
popf
popf
sbb
int3
dec
or
imul
pop
mov
movsl
push
cmp
dec
push
pusha
mov
ret
mov
xor
inc
sub
aad
jmp
rcrl
cld
fidivrl
stos
sbb
fwait
inc
es
ret
add
cmp
in
fldt
rol
add
cltd
enter
and
cmc
imul
xchg
scas
xchg
mov
xor
push
adc
shll
mov
add
add
mov
outsl
fstpt
cmp
in
mov
inc
inc
inc
dec
ss
mov
push
jl
mov
mov
cmp
test
jns
das
imul
inc
inc
insb
pusha
cmp
in
dec
negb
cmp
mov
jge
mov
loopne
jne
dec
mov
xchg
sbb
cmp
xchg
pop
ja
push
inc
and
push
pusha
sub
or
in
daa
out
xor
inc
jno
mov
xor
sbb
sbb
cmovno
je
add
cs
iret
cwtl
jo
cli
dec
mov
aas
ret
push
inc
shll
sti
aad
mov
imul
lods
xor
lret
popa
lock
mov
out
push
sub
and
aad
jmp
xor
les
lods
movsl
pop
xchg
mov
adc
push
xchg
out
stc
loop
test
into
insl
mov
sbb
pop
mov
add
xor
notrack
and
popl
mov
mov
ret
pop
xlat
sbb
movsl
scas
sub
xchg
stos
es
mov
or
pop
mov
add
std
ror
test
aad
or
add
shlb
cmpsb
xor
mov
movsl
xlat
pop
mov
xor
ja
push
inc
adc
pop
mov
mov
popa
lret
and
push
insl
push
xchg
mov
pop
les
add
les
fstpl
cmc
pop
sbb
insb
test
sub
movsb
inc
into
subb
cmpsl
lret
mov
xor
jmp
or
pop
jp
mov
cmc
lret
test
push
cmpsl
notb
aas
fs
or
push
push
mov
inc
lods
inc
imul
push
inc
sahf
ret
popa
mulps
mov
mov
stos
lahf
test
cltd
adc
bnd
inc
fwait
cmc
mov
mov
in
ficoms
jns
sti
add
pop
mov
cmpsb
push
cmpsb
int3
ss
lahf
sbb
mov
mov
jns
loopne
xchg
add
xchg
jmp
lcall
mov
push
rclb
movsb
inc
jo
xchg
inc
imul
sub
or
sarb
pop
xlat
xchg
xchg
mov
notb
push
in
mov
push
shll
cmp
adc
iret
push
repnz
push
cmp
insl
and
xor
cmp
outsb
mov
int
adc
sub
xlat
xor
stc
dec
pop
and
data16
jmp
mov
in
daa
lret
cltd
leave
js
in
int3
fldcw
mov
cmp
add
hlt
stos
mov
add
or
and
xchg
cli
outsl
cmp
arpl
push
pop
sarb
arpl
push
mulb
test
loopne
insb
cmp
inc
cmp
sbb
pop
xchg
icebp
inc
and
imul
pusha
xor
xor
mov
imull
mov
jb
add
and
in
loopne
iret
or
mov
js
jb
fnsave
into
push
push
fildll
and
mov
mov
mov
xchg
mov
cmp
push
inc
sbb
jg
jae
jmp
ret
cmp
lods
inc
xchg
stos
lods
xchg
adc
stos
lods
inc
cmp
push
xor
in
xlat
dec
pop
mov
adc
stc
push
stos
jae
jnp
xor
jecxz
ljmp
and
cmp
and
and
adc
lret
or
xor
or
add
dec
inc
jo
mov
cltd
in
in
push
repz
std
hlt
mov
mov
pop
and
lods
and
repz
jle
fdivr
rolb
push
aad
insb
idivb
xlat
push
shlb
mov
push
cmp
push
xor
negl
dec
push
mov
out
push
xchg
adcb
data16
push
push
or
or
test
out
xchg
xchg
mov
out
mov
popf
negl
cmc
cmc
cltd
rclb
sbb
adc
rolb
inc
mov
pop
icebp
add
push
dec
dec
hlt
lahf
out
adc
test
in
popf
orps
outsb
clc
dec
dec
scas
jnp
adc
mov
iret
push
jbe
pop
cld
adc
cwtl
dec
fistpl
pop
sbb
mov
inc
or
int
test
test
xor
sub
fdivl
inc
mov
pop
mov
loope
movsl
fwait
ds
push
sbb
icebp
shrb
cmpsb
mov
loop
cltd
jle
and
mov
adc
pop
les
lret
mov
cmpsl
arpl
xchg
mov
pop
sbb
cmpsl
stc
mov
mov
adc
xchg
mov
mov
cld
dec
jl
sti
pop
or
dec
insb
push
or
mov
cli
gs
cmp
dec
add
inc
das
imul
inc
rcrb
jg
mov
adc
push
push
iret
cli
cli
jge
and
sbb
and
fistps
sub
cmc
icebp
daa
pop
mov
ret
lds
mov
leave
or
jl
in
sub
mov
and
push
stc
pop
jmp
add
popa
test
inc
jno
cmp
jmp
cmp
lret
push
pop
stos
cli
sahf
into
jg
test
jns
int3
mov
or
andb
xor
jge
in
sbb
in
cwtl
mov
mov
imul
negl
cwtl
addl
into
fnstenv
imul
leave
push
cmp
gs
loope
in
sub
mov
inc
jp
dec
sub
jl
cmc
rorb
inc
stos
inc
mov
cmp
ds
cli
sbb
add
cltd
cmp
and
insl
xchg
ds
push
mov
scas
lcall
lods
insb
cmp
and
pusha
pop
adc
push
jge
mull
enter
lea
or
ds
jmp
ret
add
jne
lds
jg
out
andb
aaa
lds
jp
fidivrs
and
out
inc
or
rorl
stos
fwait
adc
mov
cli
inc
mov
sti
mov
jno
or
aam
repz
mov
in
or
scas
cmc
rol
test
shrb
movsl
pop
xchg
stos
mov
mov
inc
xor
or
aad
pop
mov
test
aas
mov
aas
xchg
stos
mov
shlb
dec
push
and
and
clc
cltd
or
stos
adc
test
jge
mov
sbb
mov
jge
dec
xchg
push
mov
mov
xchg
fs
js
in
cwtl
popa
mov
sub
mov
xchg
sbb
dec
cwtl
cmp
adc
cmc
xchg
sub
loopne
out
xor
inc
push
imul
lods
lcall
sbb
test
pop
mov
cmp
aas
fisttpll
xchg
jge
pop
lcall
mov
sub
dec
pop
fsub
nop
scas
jmp
jg
pushf
add
jg
push
imul
aaa
push
inc
jg
adc
xchg
and
adcl
mov
leave
sahf
pop
repnz
sbb
xchg
test
das
cltd
arpl
inc
outsl
jl
int3
push
xor
lret
pop
inc
imul
pop
sub
push
cmp
pop
mov
xor
jle
xchg
inc
lret
mov
adc
inc
sbb
fisttps
cmp
stos
daa
mov
mov
lret
jmp
xor
int
inc
fs
aad
mov
jmp
sbb
cmp
mov
cmp
push
mov
push
pop
push
mov
or
jo
mov
sbb
movsb
xorb
test
xor
xor
jp
out
mov
jbe
das
fmuls
mov
push
pop
js
fiaddl
cld
ffreep
mov
pop
dec
popl
sub
fld
rcr
lcall
add
xchg
movsl
stos
pop
movsl
js
test
cmc
clc
mov
mov
aas
mov
addl
rcrl
out
outsl
imul
pop
push
or
test
jnp
out
push
adc
inc
ret
xor
push
sarl
loopw
rcl
inc
pop
jns
xlat
mov
call
dec
outsb
lods
imul
outsb
sbb
stos
ljmp
fs
divb
hlt
test
add
lahf
or
push
or
dec
sub
jne
or
stos
scas
mov
jne,pn
test
fs
popa
xchg
sbb
dec
xor
test
adc
mov
xor
cld
or
xchg
fildll
pop
scas
mov
ss
push
aaa
xor
mov
mov
mov
fdiv
cmp
les
mov
mov
ds
bound
sbb
push
and
popf
mov
call
ret
scas
loop
sbb
lret
popa
and
jo
ja
jbe
loope
and
mov
cmpsb
mov
fdecstp
and
andl
add
rcrb
adc
shll
loopne
and
ds
popf
ret
pop
popf
push
sbb
xor
andb
xor
xor
xchg
stos
rol
popa
add
add
js
pop
push
adc
iret
xchg
pop
loope
into
iret
and
pop
out
adc
push
sahf
ss
pop
adc
mov
xlat
scas
cltd
std
fs
js
push
das
lods
pop
fidivrs
mov
sub
push
adc
out
push
cmp
mov
xchg
negl
loop
fwait
stos
stos
outsb
out
fisttpll
sub
lahf
mov
sbb
jns
cmp
xor
push
fnstsw
inc
xlat
daa
inc
push
or
pop
cmp
and
cs
jge
lahf
jecxz
lock
mov
pop
push
movsl
adc
xor
pop
sbb
popa
mov
inc
jmp
fwait
iret
mov
sub
xchg
jle
bndldx
xor
stos
sbb
mov
cmpsb
pop
mov
mov
xor
fidivrl
arpl
sub
xor
outsb
dec
popa
rolb
arpl
hlt
rcll
pop
push
push
jns
mov
add
mov
inc
outsb
int3
repz
scas
inc
or
fs
fsts
jbe
outsb
sti
push
mov
inc
bound
inc
inc
fdivs
shll
xor
ljmp
or
pop
xchg
dec
push
das
bnd
pop
ficoms
sub
mov
lods
or
xor
pop
in
push
fcmove
fbld
jp
cli
sbb
imul
dec
push
pop
mov
dec
xchg
cmp
or
inc
es
and
aas
push
scas
dec
jge
aaa
sbb
add
xor
sbb
mov
pop
jecxz
test
inc
insl
jbe
mov
lea
push
inc
push
push
mov
mov
cmp
or
subb
mov
jl
in
cmp
mov
sbb
flds
rclb
jle
and
shlb
loopne
sub
jne
lcall
pop
and
push
adcl
jo
jns
or
mov
outsb
jmp
jo
enter
nop
pop
stos
inc
adc
inc
cmc
pop
clc
ret
ja
mov
pop
pop
lret
mov
jge
mov
enter
cmc
xor
ret
lods
jbe
inc
mov
inc
xor
mov
mov
push
mov
xchg
or
not
or
insb
fistpl
lods
and
xchg
data16
rorb
and
fld
push
pop
push
mov
into
inc
lcall
mov
adc
and
add
sbb
cmc
push
inc
xor
and
shll
inc
popa
add
lds
mov
stc
mov
push
loop
mov
and
pop
sarl
push
dec
test
dec
or
lds
addl
jnp
test
movsl
mov
xchg
js
in
add
jg
arpl
jmp
push
sbb
mov
jo
jnp
sub
cmpsb
sub
jge
iret
es
fld
xchg
dec
aaa
daa
xchg
orb
push
cmp
push
movl
pop
pop
lea
loop
mov
and
mov
jbe
bnd
movsl
inc
andl
adc
std
pop
mov
inc
mov
fadd
jnp
gs
enter
into
imull
jne
mulb
push
hlt
mov
call
lret
mov
addr16
pusha
xor
adc
lods
cmp
mov
inc
jno
or
out
call
and
pop
lret
aam
xor
pop
push
and
fs
cmpsb
xchg
push
add
add
push
add
cmp
dec
dec
sarl
adc
insb
pop
fldcw
ljmp
dec
pop
fnstsw
nop
adc
je
aad
pushf
lds
jno
cmc
stc
rol
sbb
jb
pop
insl
push
mov
push
aad
or
push
popa
push
int
inc
dec
push
pop
insb
mov
cli
xor
push
pop
mov
in
sub
mov
push
insl
in
arpl
movl
cmpsl
pop
mov
lea
lret
push
lret
sub
fisubl
je
pop
fdivs
inc
mov
shl
pop
lods
or
ja
add
sub
pop
sub
pop
ja
or
push
xchg
xor
sub
leave
cmp
sbbb
cvtps2pi
fwait
sarb
fwait
pop
jne
inc
inc
pop
int
hlt
imul
sub
neg
or
mov
xor
sub
cmpl
fists
cld
int
xchg
std
dec
dec
fistpl
adc
jb
rolb
pop
sub
and
cwtl
icebp
jbe
mov
insl
aad
adc
movsl
inc
mov
lret
fidivl
mov
mov
cmp
mov
imul
mov
lods
sbb
popf
mov
fnsave
cmpsb
jecxz
mov
arpl
jg
ret
es
jge
test
out
cmp
xchg
fiaddl
mov
loopne
fildll
pop
repnz
jne
push
mov
push
shlb
inc
xorb
sub
sub
repnz
shlb
or
push
cmpl
ss
cmc
sbb
aaa
dec
cli
cld
jne
test
inc
or
lcall
jecxz
mov
xchg
into
scas
arpl
pop
repnz
fstps
sti
mov
push
pushf
mov
jmp
adc
mov
push
ss
push
ljmp
mov
cld
add
push
dec
dec
loopne
pop
xor
cwtl
adc
cmp
push
pop
lds
sbbb
xor
xchg
sbb
ds
mov
fcmovb
sbb
fs
mov
cmc
loop
shlb
test
pop
add
jp
sti
and
cmp
leave
movl
bsf
test
test
insl
mov
add
es
inc
dec
mov
pop
xchg
sbb
aad
cmp
nop/reserved
push
xor
lods
cmpsb
rclb
or
jb
sub
sub
pop
rcll
and
clc
sbb
mov
mov
enter
lahf
bound
sub
pop
sub
pop
xchg
shrl
ret
jmp
jno
inc
adc
loop
outsb
adc
lods
pop
or
dec
or
stc
mov
test
fldl
orl
mov
push
push
mov
pusha
ror
ss
test
push
into
cmp
adc
insb
filds
mov
stc
repz
jg
jnp
out
adcl
or
sbb
jb
cmp
bswap
mov
mov
xor
pop
fisubrl
aam
int3
mov
or
andb
or
int
aad
jno
stc
movsl
ret
or
outsb
sub
lret
adc
push
hlt
addr16
gs
test
mov
in
addr16
mov
dec
xchg
sbb
lcall
arpl
push
push
pop
lods
sub
add
push
push
test
sahf
add
dec
xchg
orl
inc
sbb
imul
test
insl
orb
mov
and
imul
sbb
imul
incb
ss
mov
sbb
xchg
cli
adc
push
cmp
loop
xor
mov
sbb
fadd
xchg
xor
lret
test
push
je
js
and
or
testl
jmp
lds
jmp
jg
xchg
lret
push
ret
sub
mov
jp
push
xchg
scas
jne
mov
jmp
cld
clc
mov
in
jge
mov
out
fwait
jne
fwait
movsl
xchg
mov
lret
jae
addr16
sahf
cli
xchg
out
mov
hlt
jnp
addb
aam
push
ja
cmovb
jmp
cmc
fstpl
add
jl
inc
lock
cmp
out
mov
nop
pop
loope
cmp
xor
fcmovnb
inc
fidivs
or
leave
fldcw
mov
dec
enter
subb
fidivrs
leave
pop
lret
cltd
imul
dec
ja
add
add
clc
sbb
xchg
push
pusha
stos
inc
ds
mov
aaa
test
pop
mov
dec
jo
loopne
mov
xchg
mov
cmp
mov
hlt
sub
push
test
addl
call
mov
mov
push
mov
movsl
arpl
pushf
pop
repz
pushf
imul
jb
fwait
cmp
je
jge
or
pop
push
xor
cmp
mov
mov
push
xor
into
sbb
test
mov
scas
ja
in
stos
out
and
push
cmp
hlt
and
in
xor
cmp
stos
testl
jl
out
push
je
cld
into
sbbb
xor
pop
fdivs
sub
ss
or
or
dec
lods
mov
and
adc
filds
lahf
jbe
inc
frstor
pushf
mov
callw
mov
jo
imul
imul
xor
cmc
mov
in
cmp
loop
ficoms
fstl
sub
push
adc
mov
clc
pop
ret
push
outsl
mov
and
rorb
push
xchg
dec
sbb
mov
sub
outsb
mov
adc
ja
mov
insl
push
imul
and
dec
sti
pop
into
jp
mov
pop
scas
gs
clc
rdpmc
push
mov
mov
pushf
pop
insb
cmpsb
ficoms
inc
fdivl
mov
leave
ja
icebp
jp
ret
mov
out
ja
insb
ljmp
xlat
sbb
lea
xorl
mov
idivb
and
shlb
jge
imul
inc
repnz
lds
in
dec
and
fistl
mov
icebp
leave
jae
or
jge
mov
icebp
jns
nop
imul
mov
scas
aas
add
stos
push
inc
mov
mov
cltd
les
sbb
or
sub
enter
xor
in
or
popa
dec
in
xorl
mov
shrb
xchg
stos
push
add
xor
mov
xor
cmp
stos
jecxz
mov
nop
in
cmpsb
cmpsb
test
jo
push
sbb
rcrl
jmp
pusha
xchg
or
and
cmp
jo
sub
and
sub
jecxz
push
test
or
xchg
jle
outsl
mov
inc
iret
mov
cmp
xchg
xor
in
icebp
fidivrs
test
adc
stc
or
ret
pop
xchg
test
dec
mov
loopne
imul
hlt
fcomps
insb
dec
rcrb
and
xchg
cmp
and
sbb
or
push
aaa
add
lcall
mov
sub
int3
outsb
int3
scas
and
cmp
lret
test
out
and
pop
jg
dec
jno
or
push
adc
inc
jnp
je
sbb
sbb
loop
xchg
mov
xchg
sub
mov
xchg
inc
xor
out
add
push
aad
ljmp
loop
mov
xchg
divb
or
cmp
mov
movsb
adc
inc
sbb
xor
mov
xor
popa
mov
and
cmp
jl
jle
fdivs
pop
pop
out
aas
dec
fdivl
ror
cmpsb
cwtl
lods
or
outsl
push
dec
shll
sbb
mov
mov
push
outsl
jae
xchg
sub
push
cmp
insl
cmpsb
js
inc
jmp
testl
jb
mov
daa
cmp
ljmp
mov
dec
insb
xlat
or
mov
arpl
xorb
test
sbb
out
popf
mov
test
fmuls
outsb
xlat
lret
and
xchg
jl
int3
test
lcall
xchg
sub
stos
push
cmp
xor
ljmp
std
adc
mov
or
rcr
insb
cmc
push
mov
inc
aad
jno
adc
cmp
xchg
inc
mov
enter
rclb
jnp
push
xlat
shl
xchg
add
push
stc
stc
out
cmpsb
test
aas
xor
push
jl
inc
scas
pop
mov
loop
in
std
test
outsb
inc
sbb
scas
cmc
nop
out
add
push
icebp
push
add
xchg
xlat
scas
jp
or
addr16
sub
add
pop
or
lock
ljmp
mov
inc
cltd
push
sub
mov
push
jp
jg
cld
and
mov
lret
or
lcall
sbb
loop
and
push
adc
mov
pop
cltd
mov
testl
cmpsl
pusha
dec
dec
lock
mov
cli
sub
jl
callw
outsl
out
push
inc
ficompl
ljmp
add
fistl
jae
push
mov
fisubrs
lods
pushf
mov
inc
jg
jecxz
roll
ds
sbb
dec
mov
je
fiaddl
adc
xor
add
sysret
leave
stos
pop
ljmp
sub
je
test
call
jp
sbbl
pushf
add
fbstp
adcb
insl
xlat
sbb
fldt
push
pop
outsl
pop
pop
rorl
and
jae
dec
loop
lods
add
jmp
pop
sbb
or
mov
xchg
std
push
mov
daa
insl
loope
insl
aas
cli
jmp
leave
fiadds
outsb
sub
test
aaa
aaa
aam
cmp
movsb
std
xchg
lds
sbb
cmp
sbb
jg
arpl
test
dec
or
and
rclb
adc
sahf
lret
mov
dec
xchg
inc
loopne
fwait
jns
addr16
icebp
xor
jbe
icebp
shlb
xchg
inc
clc
jle
lock
lret
add
adc
xchg
sti
mov
push
jle
pop
js
pushf
in
and
and
mov
mov
arpl
shrb
cmp
dec
jns
adcl
mov
xor
cmc
xchg
push
jns
fsubr
out
mov
fmuls
scas
ret
stos
imul
inc
vmovhlps
dec
mov
add
fwait
or
xorl
ret
aas
pop
call
mov
aam
lret
inc
fcmovbe
daa
lods
popa
loope
gs
out
daa
or
inc
cmp
insl
xor
xor
out
adc
ljmp
mov
rcr
je
in
dec
mov
add
js
cmp
dec
sbb
inc
sbb
dec
jle
fisubs
mov
mov
ret
pop
inc
mov
pop
hlt
imul
leave
nop
xor
test
jecxz
repz
fists
data16
mov
dec
jl
pushf
loop
nop
incl
fsts
dec
pop
int
xchg
ret
ja
and
and
cmpl
aad
jg
adc
das
aam
cmp
xlat
ret
mov
xchg
movsb
aad
jg
sub
jne
xor
mov
dec
pop
insl
inc
or
in
movsb
icebp
jb
push
mov
pop
mov
sbb
aaa
xor
pusha
jno
push
cmpsl
fbld
popa
adc
js
mov
out
dec
push
fistl
popa
insl
push
popf
cmpsl
gs
mov
or
cmp
outsb
nop
in
ret
nop
ret
repz
lods
adc
lods
into
mov
clc
fwait
push
push
scas
jecxz
addl
sbb
fwait
mov
scas
or
jnp
and
jg
xchg
inc
cltd
ss
lods
sbb
out
roll
mulb
sub
mov
rcr
sub
repz
cmpsl
fcomip
in
push
push
imul
cmpsl
push
pop
sti
sub
or
divl
sub
fisubrl
insl
mov
in
repz
incb
orl
aaa
cli
pop
pop
sub
cmpsl
fcomp
fisttpll
lock
and
sbb
mov
pop
mov
bound
js
mov
lods
insl
inc
mov
cmp
iret
pop
popa
and
mov
dec
xlat
jge
cmp
insl
test
iret
outsl
cmp
cld
mov
xchg
out
lds
and
std
cmp
mov
dec
and
or
or
add
or
xlat
or
fs
push
jbe
jmp
call
call
pusha
loope
fadd
xlat
rorl
mov
les
cli
imul
inc
out
clc
in
fwait
in
mov
pop
or
fs
roll
sbb
mov
or
rcl
lds
movsl
cmp
or
and
push
aad
inc
pushf
out
or
mov
int3
dec
lds
in
sbb
ja
mov
xor
and
push
push
mov
push
and
mov
scas
sub
mov
sub
mov
xchg
jmp
pop
ret
subb
sbb
mov
adc
ds
fsub
pushf
test
out
cmp
fistpll
sbb
push
in
dec
cmpsl
test
sub
insb
ror
ljmp
mov
and
sub
test
or
xorl
imul
sbb
sahf
xor
outsl
pop
dec
mov
loop
pop
push
pop
rcll
xchg
pushf
aas
idiv
sub
xlat
pusha
daa
xor
xchg
jge
shrb
push
lea
push
cmp
pop
test
cltd
fisubl
push
insl
enter
insl
jp
push
pop
cmpsb
enter
test
pop
or
test
shll
test
mov
xchg
daa
out
std
jno
aad
test
leave
dec
aaa
push
xlat
push
hlt
outsb
lret
lock
mov
cltd
das
adc
sbb
jg
pop
jmp
push
mov
mov
sbb
insl
sub
mov
jns
fbstp
insl
xlat
cmp
pop
push
sahf
add
inc
lods
sahf
mov
hlt
or
lret
mov
in
jne
das
push
xor
je
jb
push
cmp
pop
dec
dec
cli
sub
cmp
xor
sbb
std
cmp
pop
add
imul
mov
mov
lods
pop
lahf
fld
adc
push
and
shrb
xlat
xor
mov
scas
mov
pop
push
repz
rorb
and
ss
mov
pop
adc
adc
in
sti
xorl
ja
sbb
xorb
in
push
xchg
movsl
adc
test
popf
xlat
ja
fistpll
inc
jns
nop
loop
push
cmp
outsl
cltd
jle
cld
mov
lcall
or
dec
jne
and
sub
or
arpl
movsb
adc
fcmovnb
imul
and
addb
jmp
inc
addr16
leave
jbe
and
dec
in
subb
sub
arpl
daa
sub
in
sub
ret
sub
adc
test
out
outsb
inc
ret
daa
icebp
orl
jmp
mov
sarl
mov
mov
add
out
lock
sub
out
add
xchg
xchg
sbb
lea
push
and
mov
call
loopne
inc
dec
or
dec
mov
in
mov
int
out
jnp
outsl
clc
jle
rorl
jp
subb
add
and
jno
popa
jl
push
mov
push
fidivl
ja
lcall
xor
fwait
push
insl
das
pop
loope
push
jge
dec
sub
hlt
mov
add
cmp
test
lods
mov
mov
out
jge
jb
cld
pop
adcl
mov
nop
daa
mov
cltd
push
add
mov
add
test
imul
insl
push
xor
out
cmp
cmp
lea
xchg
inc
test
cwtl
sbb
and
mov
cmp
fcoms
outsb
dec
iret
push
push
xchg
fdivp
xchg
mov
inc
xlat
cmp
and
pushf
cmovns
jecxz
add
pop
mov
mov
sbb
add
int3
pop
or
lea
out
jle
xor
in
enter
jecxz
lock
adc
sti
test
ret
leave
js
int3
jge
cmp
mov
add
lods
icebp
jnp
popa
ficoms
jns
inc
sbb
xor
adc
pop
inc
pop
xchg
mov
iret
loopne
mov
xor
pmulhw
mov
cmp
sub
inc
js
jnp
mov
movsl
repz
sbb
pop
or
hlt
mov
scas
xchg
icebp
das
and
jecxz
xchg
scas
pop
icebp
dec
inc
add
pop
mov
cmpl
cmp
xchg
inc
js
jmp
inc
inc
pop
and
add
jp
push
lods
jg
mov
sub
sbb
test
push
jmp
adc
push
fstpt
test
insb
push
cmp
mov
sbb
dec
mov
inc
cltd
add
sbb
pop
dec
aas
movsl
sbb
or
test
xchg
ss
xchg
mov
cbtw
xorl
xchg
repnz
and
add
imul
adc
les
dec
and
inc
adc
ja
push
stc
push
adc
push
xlat
ret
pop
and
pop
mov
mov
xchg
jp
stos
stos
imul
add
mov
ljmp
cltd
dec
adc
add
fs
xchg
fsts
mov
les
cmpsl
mov
jns
mov
negb
jle
stos
sbb
out
movsb
rorb
ljmp
insb
fcoms
cmpsl
push
mov
sarl
and
enter
daa
cmp
ja
and
fldenv
sub
aaa
push
mov
mov
lret
mov
ljmp
and
add
sbb
adc
add
xor
ror
inc
test
outsl
jae
mov
aas
or
ror
out
sub
mov
jnp
mov
mov
outsb
lods
scas
jmp
outsl
adcl
into
out
sub
jmp
pop
add
iret
sub
inc
xchg
mov
inc
mov
adc
dec
std
or
pop
adc
mov
jp
xorb
jg
je
push
sub
iret
shlb
xor
cmp
test
imul
dec
cmc
or
decb
decb
mov
or
sbb
push
cmpl
loop
dec
add
and
and
insl
js
mov
xor
movsl
sti
mov
jg
push
jecxz
add
stos
jge
aam
rolb
mov
imul
cwtl
out
xor
pop
ljmp
test
sub
mov
je
inc
adc
ss
nop
scas
inc
mov
xchg
mov
subl
push
push
faddl
inc
mov
jge
mov
in
xchg
push
sahf
xor
xor
lret
dec
mov
jle
wrmsr
adc
lock
lds
inc
or
mov
and
pop
push
cmp
dec
cld
sbb
inc
je
push
insb
mov
insb
mov
and
push
gs
jg
int3
push
loop
dec
pushf
lret
jle
sub
xchg
jmp
dec
jnp
lret
cmpsb
fldl
jl
imul
or
imul
cmc
push
dec
sub
cmc
sbb
adc
pop
pop
in
pop
xchg
fdivs
mov
int3
push
inc
cmp
das
mov
rclb
dec
fisubrs
pop
cmpsl
mov
ret
mov
lret
push
inc
dec
jmp
xor
pop
mov
adc
popa
xlat
aam
call
fsubr
sub
jne
pushf
add
lcall
dec
xor
xchg
sbb
ret
adc
dec
fs
sarl
push
cmp
jnp
in
xor
fiaddl
cmc
shlb
mov
sub
lahf
jne
scas
mov
ret
cmp
cmpsb
das
cmp
or
sbb
loope
xor
push
loopne
sub
jle
mov
mov
jl
jb
test
cmp
sbb
movsb
stos
outsl
ja
lret
cmp
clc
mov
pop
dec
out
sbb
shrl
sub
mov
inc
ror
mov
stc
jb
lds
fadd
ret
test
lock
neg
jo
cmc
pop
dec
cmp
push
sti
sub
mov
into
sbb
sub
aas
movb
fcoms
pop
test
dec
jecxz
or
dec
mov
jmp
xchg
sbb
adc
fst
xlat
lock
mov
adc
adc
je
jmp
cmp
jecxz
insb
sbb
xor
push
sbb
imul
sahf
or
rcl
xor
cwtl
jae
loope
push
xchg
dec
dec
fwait
lods
dec
jbe
xlat
cs
lds
dec
dec
nop
ficoms
psllw
loope
push
into
push
or
xchg
push
andb
xchg
int
sub
icebp
and
test
loope
nop
cmp
clc
sarb
mov
lahf
cld
pop
aas
pop
ljmp
or
roll
nop
insl
pop
mov
nop
ret
stos
pop
cmp
jmp
adc
inc
dec
or
insb
push
sahf
mov
xchg
mov
or
xchg
or
movsb
orl
and
mov
adc
xchg
testb
dec
subb
xchg
mov
in
sahf
clc
cs
mov
popf
pusha
in
nop
js
cmpsb
stos
mov
dec
repnz
std
lcall
call
ret
ret
inc
stos
ret
outsl
push
std
or
fisubs
or
and
mov
pop
push
pop
sbbl
fxch
daa
or
loopne
scas
mov
and
push
jecxz
ficompl
sbb
xchg
sub
dec
pop
cli
sbb
sub
xor
sbb
pop
loop
xchg
les
aad
sbb
sbb
push
mov
lock
insb
lahf
cmp
insl
adc
cltd
aaa
push
fwait
ljmp
rolb
loopne
mov
push
test
negb
jecxz
cltd
stos
popf
test
pop
mov
and
dec
jl
mov
mov
pop
int3
fnstcw
test
mov
into
xchg
add
mov
dec
xor
lret
mov
gs
iret
or
data16
cmpxchg
lock
insb
mov
scas
mov
jne
in
pop
movsl
jbe
xchg
or
pop
dec
cmp
push
push
and
sbb
xchg
adc
loope
ss
push
scas
movb
insb
mov
xchg
leave
ret
inc
cmpsb
adc
or
mov
ds
cmp
xor
push
ds
es
jbe
cwtl
dec
or
xchg
jmp
pop
inc
dec
mov
insb
pop
repnz
push
jmp
test
cmp
gs
or
addr16
xchg
imul
addb
and
lods
fidivl
lea
mov
or
shlb
test
jae
sub
mov
push
sub
and
call
mov
push
push
cmpsl
nop
popf
mov
dec
pop
cmp
push
ds
cmp
fmul
xchg
xchg
adc
nop
pushf
out
std
ret
leave
mov
dec
or
push
mov
adc
xchg
popa
cmp
inc
dec
rclb
mov
jnp
ja
xchg
fsubs
dec
sbb
xchg
pop
pop
dec
inc
dec
stos
sbb
jle
xchg
negl
rorb
dec
out
mov
cld
out
roll
es
daa
lahf
lcall
clc
dec
cmpsb
dec
insl
xchg
pop
and
in
dec
xchg
sub
inc
mov
and
leave
testb
and
and
xchg
push
mov
sub
cmp
insl
and
mov
loope
out
mov
rcll
std
inc
add
shll
add
lods
and
das
mov
jno
cli
pop
mov
mov
push
repz
xor
loop
cmpsb
push
jge
add
ljmp
xchg
movsl
or
adcb
mov
cmp
adc
jne
adc
out
push
cmc
adc
fidivs
js
mov
pop
jbe
push
and
nop
imul
xor
mov
jno
mov
push
cmc
push
rcll
mov
daa
lahf
jo
pop
cmpsl
inc
int
loope
je
mov
pop
gs
xchg
cmp
cmp
mov
and
out
js
mov
repnz
mov
es
inc
js
aaa
xchg
int
dec
jnp
dec
mov
rolb
mov
jne
orl
pop
repnz
icebp
dec
mov
xor
xchg
inc
inc
ljmp
lcall
sub
lds
xchg
imul
xchg
ret
scas
or
adc
pushf
sbb
in
mov
cld
cmp
imul
push
dec
inc
shr
push
in
xchg
xchg
arpl
jnp
lea
or
xchg
in
jns
out
int3
mov
xor
sbb
out
cmp
mov
in
jmp
pushf
stos
popf
and
jne
mov
fisubs
sub
aaa
lods
push
inc
testl
rol
lea
jmp
lcall
les
test
arpl
mov
scas
cmpsl
lea
mov
cmp
xchg
cmpsb
aas
xchg
rcl
sti
mov
push
ret
lret
out
loop
das
jmp
fyl2x
inc
mov
or
push
repnz
subl
nop
mov
or
pop
sub
aaa
adc
test
mov
or
xchg
faddl
sbb
push
mov
or
xchg
mov
fnstcw
ds
xchg
shl
mov
cltd
mov
scas
jecxz
rclb
das
adc
xchg
sbb
lea
notl
jge
sbb
cli
dec
jns
dec
pop
cmp
mov
jne
arpl
mov
cwtl
pop
cwtl
inc
mov
rcrb
jle
bswap
sahf
adc
adc
add
or
dec
sub
and
ret
mov
int3
xchg
lcall
dec
add
cmp
fistps
push
xor
jp
push
jae
jmp
adc
cmpl
pop
cwtl
lahf
push
mov
je
addr16
fwait
das
test
testb
iret
lret
dec
adc
cld
push
xchg
dec
mov
jmp
adc
call
lods
push
repnz
fsubr
pushf
xchg
fdivl
push
inc
inc
cs
ja
mov
insl
xchg
test
or
adc
jb
dec
add
push
fcmovnbe
in
dec
inc
cmp
or
lods
dec
test
cwtl
int
cmc
jo
cmp
push
mov
xor
sti
es
mov
fxch
mov
lds
cwtl
mov
bound
xchg
xchg
roll
adc
pop
fisttpll
pop
adc
adc
mov
xchg
sbb
je
push
push
push
lahf
lret
mov
sub
sub
xchg
bound
jb
inc
adc
or
adc
sbb
dec
ret
xchg
inc
mov
out
nop
mov
imul
stc
lea
cmp
dec
hlt
fdivrs
ja
sub
xor
rolb
pop
shl
stos
mov
mov
xor
inc
std
mov
and
xchg
and
fcoms
inc
mov
jp
and
out
fwait
cmp
xor
popf
aaa
insl
and
int3
adc
pop
pop
sahf
push
cwtl
xlat
jl
popf
cmp
mov
jle
xchg
leave
or
loop
push
call
adc
add
xor
sbb
jl
cmp
ret
xlat
fsubr
stc
js
jecxz
lahf
fsubrl
cwtl
ljmp
outsb
fimuls
scas
sbb
jb
fsubl
add
and
shll
inc
cwtl
roll
out
insl
mov
jmp
movsl
popa
ss
mov
sti
inc
aaa
mov
and
xlat
divb
mov
inc
push
push
rolb
imul
sbb
pop
lds
neg
jmp
adc
out
outsl
add
cltd
and
or
adc
lahf
out
add
popf
ror
mov
inc
je
jmp
push
sbb
jmp
sbb
pop
cwtl
add
imul
out
jmp
dec
les
jge
sub
fsts
mov
mov
pop
insl
jbe
sub
arpl
or
in
cwtl
int
fstps
pusha
rorb
mov
add
push
pop
call
shll
cmovl
xor
sahf
sub
icebp
ja
sub
popf
jmp
push
xchg
hlt
sbb
pop
movsb
sbbl
and
dec
out
popf
adc
mov
pop
and
mov
lcall
into
inc
inc
fmulp
dec
mov
cmpsl
fistl
decl
mov
xor
fwait
je
aas
or
std
sub
jp
negb
in
fildl
mov
arpl
mov
ja
xor
jns
dec
push
ret
mov
out
cltd
lea
add
cli
rcrl
cmp
test
das
and
insb
fcoml
cmc
sub
inc
enter
xor
inc
pop
add
ret
scas
lea
repnz
mov
or
adc
lds
nop
sub
fnstenv
jmp
or
cmp
out
xchg
inc
ret
cmp
sbb
adc
lret
jnp
cmp
clc
or
ret
fsin
lahf
loopne
out
sub
pop
cmc
scas
mov
pop
jle
rcl
mov
pop
mov
and
je
push
aam
adc
cs
ds
imul
cmc
xor
outsl
jbe
repz
jae
cmp
xchg
jae
fwait
cmp
push
push
repnz
and
push
push
fidivs
aam
lea
ss
jg
pop
fs
push
push
arpl
jmp
lods
push
cmp
xor
shrl
stc
jnp
cli
int
scas
adc
js
scas
cmp
pushf
daa
in
jmp
lds
xor
or
scas
fs
adc
or
mov
mov
push
repnz
in
add
hlt
mov
loope
in
mov
mov
lods
push
dec
cmp
add
adc
jl
iret
out
and
sub
xchg
jge
data16
push
std
cld
es
loop
jnp
lods
iret
popf
cmpsb
imul
enter
sti
cmp
cwtl
arpl
fisubrs
cltd
inc
lahf
outsb
cmp
jno
adc
popf
fwait
cmp
sti
push
push
xchg
sbb
inc
insb
xchg
scas
sbb
or
or
pop
scas
cmp
scas
mov
inc
mov
pop
mov
shrb
dec
inc
add
jl
xor
inc
icebp
push
fldl
xchg
dec
mov
stos
xor
movsb
dec
jo
cmp
jge
loope
scas
mov
xor
in
add
lods
push
mov
push
insb
shll
mov
jl
jnp
xchg
jmp
pop
mov
loope
mov
sbbb
iret
mov
call
aad
mov
inc
popf
jbe
dec
jecxz
popa
fwait
push
aaa
sbb
push
cs
fdivrl
mov
inc
bnd
out
add
arpl
outsb
pop
push
fwait
pop
xorb
xchg
cmp
fwait
lods
bound
out
pop
pop
dec
fisubrs
jmp
cmp
lret
lret
imul
insb
inc
clc
jbe
int3
push
sbb
xchg
sbb
or
adcl
cmp
xchg
adc
in
jbe
inc
adc
mov
pushf
or
sub
in
mov
and
mov
dec
mov
push
jo
add
or
pop
jmp
xlat
cmpsb
rcll
xchg
pop
leave
dec
rep
cmpsb
call
xor
ja
jle
shll
push
stc
jle
arpl
dec
pop
xchg
dec
scas
push
inc
mov
adc
xchg
push
add
push
es
repz
leave
andb
or
adc
outsl
fwait
idivb
testl
push
inc
lea
loopne
shrb
pop
xor
test
xor
or
movsb
mov
mov
outsb
jne
imul
mov
push
ss
push
dec
adc
dec
icebp
xlat
inc
dec
clc
ss
jnp
out
mov
cltd
inc
pop
sbb
adc
pushf
lret
mov
or
sub
lods
in
mov
ror
push
leave
cmpsb
into
pusha
inc
sub
out
and
mov
mov
outsb
loopne
shll
ja
divb
lahf
aas
or
mov
rorl
out
push
std
jge
inc
pop
movsb
xchg
andl
sti
or
sti
xchg
fistl
lahf
push
sub
and
fwait
add
dec
push
mov
cmpb
stos
fisubs
xor
lea
or
cmp
clc
jb
rcll
test
cli
xchg
adc
fldenv
icebp
xor
out
mov
lock
scas
shrb
dec
pop
jns
and
or
daa
mov
mov
mov
dec
and
outsl
out
dec
cmpsb
out
loope
in
push
xchg
test
enter
adc
push
icebp
ja
popa
xor
mov
pushf
das
pop
js
divl
aaa
sbbl
popf
movl
sub
push
or
cld
outsb
pop
aam
mov
jge
fstpl
test
mull
daa
mov
add
cmp
subl
out
lods
stos
push
mov
and
aam
incl
aaa
jno
enter
aas
pop
mov
hlt
mov
cmpsb
into
jno
rcll
popf
cmpsb
jl
out
bound
movsb
lods
int
or
fstps
in
cmp
or
mov
or
inc
cmpsl
xchg
jb
cmpsb
mov
andl
outsb
jnp
cmp
lods
xchg
dec
pop
test
out
xor
mov
sub
mov
imul
into
ret
rorb
jecxz
cli
push
xor
sub
notb
sti
rolb
fs
dec
cs
daa
test
mov
adc
dec
lret
mov
lret
rorl
xchg
pop
dec
push
and
call
es
mov
xchg
iret
not
out
lds
daa
dec
pop
jbe
jno
js
and
mov
rcl
les
sub
sbb
jmp
into
dec
fadd
pop
shrb
mov
mov
lahf
jmp
dec
sbb
sub
fcmovnbe
and
add
mov
ret
push
jge
adcl
mov
cmc
je
sbb
push
inc
adc
push
shlb
cld
int3
mov
inc
jge
sqrtps
ja
out
outsb
dec
mov
mov
repnz
loope
xchg
in
outsl
or
add
stc
dec
and
jl
bound
pop
pop
subb
mov
push
loop
xchg
lcall
mov
ss
in
and
in
inc
fwait
stc
xor
clc
pop
test
test
in
out
lods
cmpsl
push
cmpsl
dec
sbb
mov
push
inc
mov
mov
xchg
mov
stos
or
pop
ffree
insl
lock
pop
mov
dec
xorl
inc
mov
imul
jle
xchg
cmp
mov
and
sub
lahf
pop
xor
push
adc
cmp
push
xor
in
test
sahf
loopne
dec
fisttps
lret
add
cmp
int3
mov
push
scas
adc
jle
ffree
xchg
inc
add
pop
into
jne
insb
leave
mov
cltd
aam
in
addr16
adc
je
mov
inc
clc
std
in
loop
mov
int
gs
test
and
repnz
push
jb
call
xchg
xchg
imul
cwtl
invd
orl
pop
outsb
mov
rorb
das
or
test
and
push
orb
hlt
lret
mov
cmp
sbb
sti
loopne
xchg
push
ret
push
pop
adcl
stos
ja
cmpsb
rcrb
in
cmp
outsb
scas
push
arpl
jle
ret
pop
lds
nop
call
in
inc
sub
push
cwtl
leave
fs
cmp
lea
push
or
pop
and
inc
sbb
and
xor
mov
push
mov
aas
call
xchg
imul
hlt
stos
fstps
shlb
leave
jle
mov
push
xchg
and
addr16
dec
hlt
fcoms
xor
or
and
pusha
xor
xchg
pop
les
add
xchg
sub
xor
inc
int3
jl
dec
addb
mov
push
adc
xchg
cmp
addl
push
adc
mov
daa
mov
fidivs
into
in
rorb
push
pop
pushf
aam
lret
lret
outsb
mov
or
dec
enter
movsl
rcll
sbb
int
push
add
sarl
cmpsl
cli
daa
mov
jmp
jne
pop
mov
xchg
fldenv
sub
mov
xchg
adc
scas
inc
xchg
add
mov
ss
ja
mov
dec
push
jo
in
leave
and
mov
scas
flds
stos
lds
mov
jg
cli
and
sti
aas
sbb
add
sub
jmp
sarb
add
sub
dec
jne
lea
sub
arpl
sub
push
insb
sub
pop
incb
pop
push
mov
mov
dec
lods
nop
pushf
loopne
or
mov
add
xor
enter
sub
repnz
add
push
sbb
xor
out
sbb
loop
xchg
popl
lahf
fdivrl
mov
outsb
or
cltd
mov
clc
pop
lds
cld
cs
std
or
pop
pop
pop
fnstsw
xchg
cmp
sub
aaa
mov
xchg
pause
sub
das
mov
in
jge
push
pop
push
gs
ds
scas
add
cwtl
xchg
push
and
or
shlb
mov
outsb
scas
and
xchg
sbb
insl
movsb
rcl
jge
and
adc
sbb
int3
cmp
dec
gs
imul
mov
les
outsb
adc
jle
sbb
mov
xorl
or
lret
into
push
lcall
cli
lea
or
cs
sbb
xorb
arpl
lods
insl
sahf
andb
je
jns
in
fildll
mov
daa
aad
xchg
mov
push
pop
test
sbb
jecxz
dec
sub
inc
pop
mov
lahf
ss
and
sbb
push
xchg
sub
aad
mov
nop
stc
ret
push
add
incb
mov
sbb
xchg
out
adc
and
mov
pop
adc
ficompl
add
sbb
jg
fadd
push
mov
cmpsb
pop
fisttpl
js
or
loopne
mov
notb
and
addl
stos
dec
jae
mov
imul
sahf
push
pop
sub
xor
flds
movsb
fnstsw
mov
xchg
dec
sub
mov
fdivs
cmp
push
in
hlt
jmp
aas
inc
arpl
mov
loope
add
mov
adc
cwtl
dec
data16
repnz
pop
testl
lods
call
dec
cli
pop
decl
cli
int
pushf
test
pop
push
adc
adc
mov
fidivrl
sbb
out
les
push
jns
push
gs
sti
push
jb
stos
fistpl
adc
es
push
jno
jne
aas
pop
cmp
sbb
lods
mov
sub
aam
sbb
xchg
mov
xchg
inc
sub
xchg
cmp
clc
cmp
mov
add
cmp
aad
movl
push
dec
jmp
push
pop
jno
scas
jge
cwtl
dec
cmp
aad
jg
push
jecxz
inc
jp
xchg
xlat
loope
xor
or
pop
push
push
xchg
and
or
pusha
add
xchg
xor
mov
lods
dec
mov
mov
dec
enter
cld
sub
inc
push
data16
push
bound
imul
cmp
fcmovbe
jl
and
imul
sahf
or
push
ret
push
and
std
cwtl
testb
bound
push
es
or
sarl
hlt
xor
and
ficoms
cmpsb
xor
pop
sahf
add
mov
ficomps
push
rclb
jecxz
xchg
push
mov
xchg
or
rolb
lret
adc
fsub
sub
inc
enter
add
lret
lds
xor
pop
jl
xor
stos
sub
push
sahf
and
lret
popa
cld
pop
outsl
shrl
inc
sub
sub
or
cmp
fsubl
mov
mov
xlat
pop
ljmp
in
insb
fwait
xor
mov
ret
js
inc
clc
cmp
sub
jg
mov
aad
lods
push
jp
dec
adc
cmc
decl
push
sub
mov
add
xchg
pop
out
je
push
std
mov
cmp
aas
sub
movsb
sub
jo
aam
push
sbb
ficoml
pop
lret
ret
es
or
rcrb
xor
fsubrs
push
cmp
movsb
lea
sbb
cs
lret
inc
mov
cli
loope
push
and
jecxz
mov
fsubl
jle
lods
xor
jne
shll
dec
loope
je
in
xor
push
xor
stc
or
jnp
xor
or
iret
or
enter
jno
ss
pop
fwait
mov
push
adcl
mov
test
add
nop
outsb
xchg
leave
dec
punpcklwd
scas
or
cs
faddl
rcrl
adcl
mov
sbb
pushf
fcoms
sahf
xor
mov
dec
dec
dec
out
mov
push
and
pop
fistpl
cmpsb
lea
scas
adcb
ds
and
fistl
shll
jns
sub
jne
xchg
ds
xchg
aam
inc
out
mov
jmp
bound
add
mov
cmp
xorl
inc
mov
jne,pt
sbb
insl
lcall
in
cmpsl
test
jle
sub
roll
xchg
dec
dec
fldt
push
test
mov
mov
sar
enter
xor
push
enter
lods
lods
mov
sbb
ss
es
cs
push
pop
ficomps
aaa
and
push
sub
push
mov
cwtl
out
mov
fbld
aad
mov
popa
sub
push
inc
aad
leave
sub
arpl
call
dec
rorb
xchg
jle
pusha
adc
cmp
ljmp
mov
adc
mov
xor
fisubrl
and
repz
xor
pop
xchg
scas
push
adc
jnp
push
fcoms
ret
cwtl
outsl
scas
xor
xchg
ja
lahf
mov
pop
add
les
mov
xchg
dec
mov
data16
lock
lret
cmc
arpl
je
sbbl
shlb
xchg
cmp
inc
mov
out
cmpsl
dec
pop
jb
addr16
sbb
jecxz
sub
es
jbe
mov
push
adc
cs
mov
gs
test
add
mov
push
sbb
imul
cmp
and
cli
call
ficoms
lret
frstor
mov
mov
jnp
iret
gs
push
loopne
or
in
pop
ret
sub
fdivl
xchg
lea
movsb
sti
and
or
mov
mov
adc
clc
xor
imul
cld
je
push
or
pusha
jmp
or
adc
int
xor
inc
jo
imul
adc
int3
ret
stc
test
les
dec
add
sahf
shl
xchg
lret
decl
mov
or
fisttpl
mov
cwtl
shl
loopne
jg
inc
pop
adc
push
aad
int3
into
sbb
loopne
adcl
mov
daa
mov
insl
mov
add
call
sbb
mov
popf
sbb
ljmp
xor
push
aam
sbbl
lods
stos
test
int
mov
sbb
adc
fistpll
adc
daa
out
xchg
and
xchg
mov
lods
mov
arpl
aaa
jae
loopne
jmp
mov
lods
test
aas
shlb
test
enter
js
push
bswap
and
and
inc
leave
into
xchg
inc
xlat
push
stos
mov
dec
adc
fdivrs
xlat
fsubrs
push
lahf
mov
arpl
stos
pop
and
mov
sbb
mov
sbb
lahf
out
stc
imul
pushf
push
mov
jae
int
xchg
mov
push
jbe
fwait
pop
std
das
pop
adc
cmpb
inc
push
jo
pop
and
mov
mov
pop
pop
push
mov
dec
pusha
icebp
dec
loope
add
adcb
adc
mov
dec
cmp
ja
lret
stc
xchg
clc
sbb
mov
repnz
sub
out
mov
inc
inc
jp
sahf
test
xor
adc
mov
cmpl
pop
pop
out
ljmp
fadds
pop
fnstsw
shll
xchg
pop
incl
mov
xchg
and
mov
add
sbbl
mov
sbb
adc
adc
mov
neg
rorb
lret
xor
sbb
add
stos
pop
sub
mov
in
int
cmpl
pop
sbb
add
mov
je
add
clc
fiadds
push
call
adc
jnp
fs
cmp
adc
test
into
mov
inc
xlat
notl
mov
dec
mov
dec
xor
fs
inc
or
xchg
cmc
cld
orl
or
xchg
movsl
inc
dec
rolb
cmp
and
les
jecxz
dec
or
cltd
repnz
adc
jns
and
and
test
mov
scas
sub
cmp
sbb
stos
addr16
lret
and
fcoml
fists
call
arpl
call
push
mov
sti
mov
jge
jge
push
fdivl
repnz
cmc
stos
dec
sub
inc
aaa
scas
shrb
adc
loopne
push
jnp
aaa
mov
push
sbb
aad
int3
push
cmp
push
xor
call
inc
clc
repz
repz
popf
xor
lret
repnz
popf
xor
fstl
jne
and
jbe
mov
or
out
cmc
mov
pop
fisubrs
adc
aad
push
mov
imul
les
test
jo
fistpl
cmpsl
mov
icebp
push
and
cmp
sti
jbe
pop
insb
jno
sbb
cld
jecxz
icebp
loopne
inc
add
stc
mov
cltd
mov
in
jne
or
dec
loopne
ja
rcll
aas
sub
loop
imul
nop
mov
add
xchg
aad
push
lds
cmp
add
or
push
xchg
xor
fiadds
test
daa
jnp
stos
mov
xchg
mov
jl
mov
loope
outsl
movsb
pop
sahf
outsl
cmp
roll
adc
jb
negb
sbb
add
xor
pop
test
or
aam
jbe
data16
ds
and
fstpt
test
cmpsb
addb
scas
cld
inc
jae
push
jge
loopne
enter
mov
and
push
lea
add
test
mov
loop
dec
popl
jno
lock
popf
cmp
fildl
adc
push
mov
lret
lods
xor
test
sbbb
sub
adc
out
mov
push
cmpb
jne
push
fldt
and
pushf
call
push
pop
pop
ljmp
test
mov
addr16
ja
pop
mov
or
fisubs
aas
or
xchg
mov
lret
cmp
or
outsb
inc
or
mov
xlat
xchg
xorps
enter
mov
es
or
push
test
jnp
push
mov
jbe
lea
xor
lods
mov
test
aas
mov
movsb
aam
jl
and
inc
shll
hlt
xor
xor
std
outsl
clc
scas
fwait
inc
or
das
xchg
bound
ss
mov
call
xor
dec
mov
lret
icebp
int3
imul
insb
lock
es
scas
mov
adc
jae
pop
push
push
jl
mov
push
mov
test
or
nop
cmpsb
andl
mov
out
movsl
ret
fwait
cmp
inc
adc
and
scas
fcoml
jmp
lcall
cmp
stc
sbb
lods
imul
fimull
jmp
idivb
cmp
call
cmp
lahf
fwait
sub
lods
inc
rorl
mov
pop
test
mov
adc
fimull
cld
shlb
dec
xchg
aad
lahf
push
add
dec
mov
xor
or
jbe
insb
sti
mov
push
testl
int
inc
sbb
insb
lock
lahf
clc
cltd
shll
fstps
lcall
aas
pop
push
mov
push
cs
sti
dec
add
outsl
xchg
ljmp
jno
push
jge
adc
mov
mov
pop
int
mov
mov
insb
or
and
out
stc
pop
test
into
fwait
cmp
fs
fdivr
or
jle
fcmovnu
push
sarb
inc
inc
pop
test
cli
cmp
adc
sarl
mov
jns
or
shrl
outsl
test
jne
cmpsl
adc
popf
xlat
add
push
cmc
imul
js
add
fildll
sbb
mov
es
sub
pop
mov
inc
int3
test
lea
push
popa
sub
pop
dec
jge
pop
pushf
lret
pop
and
pop
dec
cmp
xor
call
inc
movsb
jg
outsb
in
call
into
xchg
insb
pop
js
inc
je
jl
cmp
es
sub
mov
lock
lret
orb
mov
mov
adc
lret
sbb
fs
sahf
hlt
mov
mov
scas
and
scas
stos
cmp
and
push
xchg
inc
mov
addb
jbe
pop
cli
and
inc
sub
adc
dec
jns
xchg
adc
movsl
stos
dec
xor
aad
andl
add
loope
shrb
out
jmp
jg
in
hlt
pop
sti
mov
cmp
sbb
pop
add
inc
mov
bound
push
pop
in
jbe
cs
and
loop
in
outsb
pop
je
mov
loope
cmp
jp
jno
add
fsub
dec
add
and
sub
push
dec
push
mov
jno
mov
fsubl
movsl
cli
push
pusha
dec
out
fs
jns
cmpsb
or
pushf
push
push
push
pop
stc
sub
test
cmpsl
popf
inc
fisttpl
gs
stos
iret
sub
inc
dec
daa
das
lods
shl
cs
loopne
or
jbe
add
out
aas
fdivs
inc
add
add
pusha
mov
lret
pop
out
ja
mov
xor
pop
add
xchg
add
xlat
mov
push
loope
xor
dec
jb
stos
inc
dec
inc
and
mov
cmp
dec
inc
mov
xor
fstl
scas
test
and
loop
cmp
mov
jmp
mov
mov
daa
call
mov
sbb
int3
and
ja
imul
cmpsb
jno
or
test
mov
xor
xchg
mov
ret
movsl
cmp
jbe
mov
cli
mov
imul
imul
mov
pop
and
cmpsb
lea
xor
subb
cwtl
lock
inc
movsb
mov
insb
xchg
dec
lock
dec
out
or
pop
mov
outsl
lret
ss
push
fdivrl
stos
enter
push
mov
lock
dec
push
sbb
add
and
dec
mov
jbe
js
inc
das
or
sub
leave
sahf
stc
aam
pop
clc
add
jo
xor
jp
lock
jbe
orl
xchg
pop
sarl
mov
je
cs
xor
dec
aas
cmpl
sbb
mov
mov
addl
or
fs
mov
xor
sub
jl
inc
inc
jmp
push
xchg
inc
psllq
mov
cmp
ja
mov
mov
int
das
adc
dec
jle
inc
xlat
mov
jl
aad
mov
mov
xlat
and
or
or
xorb
adc
jmp
int
repz
inc
xchg
pop
xlat
lods
and
mov
xor
and
imulb
add
iret
cwtl
pop
mov
adc
jno
xchg
dec
cltd
mov
jle
jnp
mov
cmp
fs
outsb
xchg
movsl
and
dec
arpl
lret
push
add
mov
lcall
and
jnp
test
add
addr16
adc
fdivrs
sbb
pop
scas
repnz
sbb
and
test
stos
jae
loope
lahf
xor
fdivrs
lcall
add
cwtl
mov
add
adc
int
in
jb
and
xlat
std
pop
stos
test
stos
push
fisttpll
scas
int3
xor
stc
sbb
or
push
ret
cltd
movsl
push
xchg
mov
inc
dec
subl
push
leave
add
add
fwait
push
je,pt
es
xlat
daa
pop
or
pop
inc
adcl
xor
scas
jmp
or
dec
aad
insb
pop
pop
lcall
cmp
inc
adc
addb
scas
mov
pop
into
aaa
mov
push
imul
mov
push
xchg
push
mov
mov
test
adc
mov
and
sbb
jle
lods
icebp
test
mov
cwtl
pop
mov
dec
mov
mov
repnz
fdivrs
inc
aas
stos
mov
pop
popl
pop
rcrb
loopne
outsl
lods
or
in
mov
or
es
or
cmp
in
outsb
cmp
adc
int3
inc
mov
mov
call
std
xchg
movsl
push
mov
outsb
mov
test
insb
and
and
out
dec
idivb
pop
in
inc
xchg
lcall
cwtl
pop
or
or
arpl
cmpsb
xor
hlt
dec
mov
adcl
sub
pop
lret
stos
js
fs
xlat
push
aaa
sbb
pusha
mov
mov
mov
in
and
pop
lds
dec
adc
push
outsl
jbe
xchg
add
mov
inc
xor
xor
push
mov
xlat
push
xlat
or
xchg
push
or
push
pushf
stos
cmc
ss
cmp
filds
dec
jp
clc
sub
int
roll
lret
cmp
mov
sbb
xorb
imul
sbbb
ss
add
roll
fisubrl
jns
xchg
dec
loopne
jecxz
jb
cmp
insl
in
lahf
mov
cmp
lahf
or
sub
aad
and
out
cmc
cli
xchg
lock
fsts
add
xor
in
testb
shlb
or
mov
inc
adc
push
inc
out
jbe
and
xchg
std
in
add
stos
mov
cld
std
xchg
or
out
or
xchg
into
negl
or
ret
enter
or
mov
sub
ljmp
js
or
in
adc
mov
adc
and
loop
xchg
aad
xchg
dec
sti
icebp
shrb
popa
add
movsl
xchg
test
aad
push
adc
add
stos
mov
mov
js
add
mov
out
imul
mov
shll
jg
or
pop
xor
add
iret
sub
insl
icebp
and
sti
push
push
sub
icebp
testl
mov
cmp
jp
dec
mov
and
jns
movsl
clc
adc
cli
es
prefetch
or
jle
mov
repz
xor
addl
xor
mov
adc
adc
lds
xor
lea
rolb
inc
cli
pop
xor
into
xchg
fisttps
push
inc
mov
mov
das
xchg
leave
mov
cwtl
push
icebp
stos
mov
or
fwait
xlat
pop
add
idiv
scas
fildll
not
int3
or
out
sub
pop
push
xchg
xchg
test
enter
pusha
and
xchg
and
pop
xchg
popa
mov
cmp
sbb
cmp
mov
rorb
jmp
shll
jmp
popa
adc
xor
or
test
inc
shl
insl
jbe
lods
xor
movnti
mov
inc
ret
push
test
das
ret
cmp
test
aaa
jle
push
jb
das
pop
jmp
mov
fnstcw
jo
das
mov
rcrl
int
inc
inc
pop
push
xorl
out
lods
and
les
pop
cmpsb
and
pop
negb
arpl
mov
mov
adc
or
out
inc
flds
or
mov
pop
ret
mov
cs
mov
lret
push
lahf
les
popa
mov
push
cs
scas
cmc
add
sub
rcll
fadds
ss
sub
xchg
test
in
stos
cmc
push
mov
mov
pop
inc
push
call
xchg
mov
shlb
jg
faddp
out
adc
dec
outsl
cmp
rcrl
mov
xchg
test
xlat
lea
or
or
and
jmp
movsl
int
add
xor
jb
fstpl
and
bound
push
mov
lret
adc
icebp
inc
les
cmp
ljmp
sbb
and
std
jb
popf
movsb
xchg
add
xor
sub
test
fmuls
and
push
inc
scas
push
ret
test
mov
sbb
jo
out
inc
outsl
call
push
jae
mov
cmpsl
lods
fldt
and
and
scas
rcrl
inc
sahf
dec
js
frstor
mov
adc
ljmp
xchg
cmpsl
ljmp
jle
xchg
jp
ljmp
mov
sarl
or
sbb
xchg
push
jbe
mov
cmp
pop
mov
inc
cltd
xchg
xchg
fcompl
in
jecxz
test
pop
outsl
std
in
adc
movsl
sub
data16
inc
or
repnz
fs
dec
psllq
sbb
enter
inc
add
cmp
sbb
test
push
cmp
mov
and
sbb
in
xor
stos
mov
je
dec
dec
pop
dec
orb
dec
jne
jae
scas
outsl
es
fmul
jno
incl
fisubrs
fsubp
outsl
inc
xchg
ss
xor
xor
stos
mov
xor
outsb
pop
stos
das
mull
xchg
cmpsb
rolb
lret
jl
and
daa
lea
xchg
pop
push
test
push
adc
dec
loopne
jbe
stos
xchg
pop
ljmp
jns
jl
or
add
mov
leave
adc
loop
ds
rorl
xchg
sti
push
outsb
xchg
ss
mov
xchg
psubsb
std
xchg
aad
sti
aas
inc
inc
sbb
in
pushl
pushw
test
sbb
maxps
insb
mov
push
xorb
pop
lahf
int3
jo
jae
imull
mov
or
loopne
das
dec
adc
fwait
daa
adc
addr16
andb
aad
cmpsl
inc
jne
and
cmp
or
pop
repnz
mov
push
aam
cmpsb
hlt
sbb
icebp
cmc
pushf
je
inc
cs
daa
or
xor
pop
into
dec
adc
ds
out
outsl
sub
fwait
cmp
or
bound
dec
adc
push
add
test
inc
sub
mov
xchg
jecxz
dec
sub
inc
es
data16
xchg
xchg
sub
call
repz
inc
fwait
adc
enter
and
cmp
movsl
cmp
adc
dec
test
sub
mov
inc
inc
cmp
and
shll
in
insb
cmpsb
mov
cmc
scas
add
push
cld
jns
pop
in
dec
ss
inc
or
ja
movsb
dec
xchg
sbb
repnz
push
sub
cmp
xchg
mov
shl
insl
cmpsb
xchg
sbb
int
push
jg
mov
jno
sub
push
inc
leave
scas
pusha
add
aas
jge
adc
fwait
lods
fbstp
mov
mov
aaa
stos
fsubs
das
loopne
inc
aam
test
dec
inc
and
out
loop
push
inc
mov
jne
mov
inc
xor
test
mov
lahf
jno
loope
sub
lret
push
xchg
cmp
scas
pop
push
popa
testb
test
mov
mov
add
es
push
pop
jp
push
inc
nop
roll
test
cmpsb
xchg
mov
jnp
cmpsb
mov
in
push
mov
cmp
xchg
jne
shlb
add
sbb
out
pop
inc
dec
push
mov
dec
js
cmp
mov
in
mov
stc
push
cmc
or
das
fstpt
mov
xchg
dec
jno
rorb
mov
jmp
outsl
call
mov
bound
push
std
jne
xor
mov
out
daa
les
out
mov
subl
mov
xor
sbb
inc
or
imul
sub
into
mov
adc
mov
adc
les
and
mov
add
int
dec
inc
adc
xor
pop
dec
insl
shll
push
mov
imul
pop
adc
xchg
jne
out
sub
add
lahf
xor
shll
out
imul
lea
std
sbb
stc
pop
in
into
aas
cmpsl
notb
and
psubq
xchg
ja
inc
cmp
fldcw
adc
loope
adcb
xor
or
in
lahf
lret
repz
sarb
imul
cli
cmc
pop
into
xchg
scas
movsl
ljmp
jne
outsb
out
sarb
jl
mov
mov
aad
mov
fistpl
adc
insl
pop
insb
push
xchg
pop
je
push
xchg
dec
lods
ss
fistpll
jno
mov
dec
xor
ret
inc
push
addb
sbb
cmpsb
xor
pop
jg
aad
das
popa
addr16
movl
sub
inc
inc
fs
jae
push
jo
adc
mov
adc
push
pop
pop
mov
push
mov
pushf
sti
push
dec
or
imull
or
adc
sbb
ret
sbb
xor
ja
jbe
push
lret
scas
mov
jmp
ljmp
mov
aaa
cmp
pusha
push
mov
dec
pop
js
inc
mov
xor
ja
popl
loop
jle
loopne
popa
and
pop
push
dec
shrb
xor
fstp
loope
jnp
in
jle
cmp
mov
fwait
ror
mov
cmp
xorl
xchg
cli
adc
push
sbb
dec
cwtl
push
shll
jg
stos
enter
cmpl
jbe
sbb
ffree
inc
jbe
adc
adc
aam
daa
or
fbld
rorb
push
inc
or
fdiv
mov
arpl
inc
loope
cmp
pop
cwtl
lret
daa
fs
ljmp
andl
xchg
cli
and
dec
shll
sbb
inc
sbb
xor
push
lret
push
sbb
out
jmp
ficoms
ds
jecxz
mov
cmp
stos
dec
mov
pop
mov
mov
cmp
insl
lea
mov
testb
and
fs
je
fadds
adc
or
inc
inc
xchg
fisttpl
or
sbb
jo
sbb
xor
loopne
inc
adc
mov
mov
or
and
fcmovnu
add
xorb
cmp
xlat
pop
xlat
je
or
inc
sub
sti
stc
pusha
cmp
mov
xchg
fisttps
adc
pop
inc
mov
cwtl
xor
stos
push
and
insb
out
lds
jecxz
jg
and
add
jnp
xchg
dec
cltd
adc
push
push
mov
out
xchg
xor
shl
imul
push
cmp
inc
aaa
fsubrl
sbb
stos
lcall
push
enter
mov
bound
push
jae
or
dec
pushf
xchg
push
movsl
test
cltd
mov
adc
sbb
les
sahf
mov
jno
mov
ret
jecxz
sarb
sbb
push
mov
add
ljmp
jno
mulb
jne
add
fs
rolb
out
mov
in
ret
addr16
push
mov
mov
shlb
xchg
or
xor
repz
scas
adc
and
cmp
je
mov
test
pop
fucom
test
pop
cmp
aas
jno
in
sbb
mov
and
out
xchg
pop
and
insl
mov
divb
pushf
mov
mov
sbb
aad
mov
fucomi
hlt
ret
dec
shlb
push
inc
mov
or
addr16
cmc
and
xchg
roll
imul
cltd
movsl
inc
ret
pop
loop
mov
into
xchg
sbb
mov
cld
scas
sbb
fs
cltd
sbb
addr16
sbb
mov
lods
stos
frstor
mov
mov
jecxz
in
mov
mov
xor
jo
stc
js
icebp
xor
fcmove
xchg
dec
xchg
inc
pushf
loop
in
enter
insl
int3
movsl
push
or
push
mov
sti
lret
mov
dec
push
jle
mov
jae
addr16
or
mov
sbb
xor
ret
push
sar
arpl
push
int3
sahf
enter
mov
test
test
pop
js
test
stos
xchg
adc
inc
or
ret
pop
xchg
mov
enter
pop
jns
adc
xchg
pop
je
jle
loop
and
aas
mov
lods
insb
dec
in
out
fists
aaa
icebp
push
call
cli
dec
mov
mov
mov
into
dec
xlat
test
test
stos
fs
mov
jnp
jbe
sbb
mov
mov
sbb
daa
jg
cs
inc
out
pop
rcrl
and
addl
xchg
pop
xor
cmc
pop
out
outsl
xor
pop
pop
adc
inc
push
outsl
incl
or
xlat
push
and
frstor
ret
pop
out
fsubrl
popa
pop
fmull
and
dec
xchg
lock
cmp
call
inc
ret
jbe
lret
jge
xor
imul
or
mov
scas
ja
push
add
and
cltd
push
jmp
rorl
loope
dec
mov
jb
add
nop
pop
dec
call
pop
inc
jno
jmp
fisubrs
shr
cmp
das
stc
lret
cld
mov
bound
xor
pushf
loope
dec
sbb
es
adc
ret
inc
std
pop
fs
ds
outsl
int3
out
fldenv
xor
jns
mov
in
shlb
pop
daa
sets
inc
fnstcw
mov
test
stos
out
scas
gs
xchg
mov
push
out
push
jae
out
push
pop
scas
inc
mov
pop
adcl
mov
cmp
xor
in
push
push
mov
mov
dec
rep
xchg
or
dec
inc
jg
test
cmp
push
sub
scas
jne
je
lock
xlat
add
push
jl
fmulp
repz
mov
fiadds
aas
or
nop
pop
inc
mov
sub
scas
arpl
inc
push
push
mov
pop
push
int3
adc
sub
leave
mov
leave
test
lds
jae
dec
cmp
addl
mov
mov
daa
xor
adc
mov
jg
add
mov
int
shrl
into
fisubrs
mov
subl
mov
es
sbb
jnp
adc
out
dec
or
cwtl
or
or
adc
pop
rcrb
incl
aad
pop
in
or
xchg
jl
fists
and
mov
es
cs
sub
sbb
xlat
add
xor
xor
sbb
push
xor
ljmp
scas
or
clc
sub
add
mov
iret
sub
arpl
xor
fidivs
sub
add
orl
mov
fstpl
repnz
inc
mov
mov
cmp
push
addb
in
dec
or
dec
pop
rolb
orb
dec
mov
stos
or
stos
call
mov
pop
pop
xor
xor
inc
inc
push
xorl
mov
jae
pusha
xor
fcmovnb
insl
ret
pusha
cmp
xchg
je
mov
adc
jno
mov
sbb
pop
fldcw
lret
sbb
int
gs
dec
mov
pop
loopne
test
aaa
inc
loopne
sub
mov
cld
xchg
loop
and
lds
in
sub
scas
inc
shlb
enter
or
mov
into
lahf
pusha
or
cmc
sbb
push
sub
xor
xchg
mov
inc
jns
test
cmpsb
jb
inc
fnsave
bound
push
cmpsl
add
cmp
cltd
add
int3
shrb
xrelease
mov
lods
sbb
loop
aas
mov
xchg
push
int
les
sub
adc
out
and
or
jne
ja
mov
stos
adc
add
fstpt
mov
in
xchg
mov
adc
insl
mov
xor
addr16
stos
or
gs
xchg
fdivs
iret
dec
pop
ja
mov
aad
mov
jg
jns
xor
dec
and
or
inc
ss
sbb
fisubl
ret
imul
jle
mov
loopne
cmp
or
or
sti
movsl
mov
lret
mov
ja
sbb
add
xchg
cmp
into
subl
mov
xchg
shrb
js
test
aad
mov
stos
lods
jle
std
add
popf
or
push
xchg
mov
fucomip
and
into
fbstp
rolb
xor
out
or
daa
stc
popl
fldcw
adc
outsb
mov
popf
es
push
push
ss
sbb
xchg
sub
rcr
sbb
sub
cld
test
rolb
sub
adc
in
movsl
fwait
mov
xor
mov
rorb
lods
pop
dec
sbb
cltd
push
add
dec
xorb
mov
daa
sub
jecxz
ja
inc
inc
xchg
adc
lcall
inc
or
movsb
jb
test
mov
ret
loop
push
adc
xor
rcrb
or
pop
aas
stos
int
stos
push
mov
lock
push
jle
fdivl
fs
push
icebp
test
ljmp
dec
dec
push
les
std
jp
adc
rcr
push
andl
sbb
and
loope
cmc
lahf
scas
mov
xchg
adc
mov
mov
xchg
rep
add
fdivl
jge
pop
jp
out
inc
xor
lahf
ret
jle
jne
and
ret
adc
mov
rcll
into
push
in
xchg
sub
movsb
dec
inc
sti
sub
clc
jg
shlb
nop
add
nop
inc
in
or
xchg
pop
pop
mov
adc
repnz
shlb
jmp
adc
inc
or
stos
repz
pop
push
push
sbb
pop
in
pop
outsl
lods
inc
cmp
pop
push
push
and
addr16
ficompl
jg
push
loopne
negl
repnz
mov
cwtl
dec
jo
dec
test
addps
and
lcall
sbb
mov
ss
imul
out
xchg
jge
pop
push
shrl
aas
fcmove
std
xchg
pop
add
cs
pop
mov
fstps
adc
sub
mov
test
mov
jge
jle
fucomp
cld
in
int3
cmp
stos
add
outsl
ljmp
leave
out
mov
xor
adc
popf
mov
or
test
inc
xlat
nop
push
fbld
loop
mov
mov
inc
xchg
cmc
jno
clc
ret
dec
lds
in
sbb
mov
dec
sub
mov
add
shrb
je
lock
bound
mov
sarb
and
fcoml
incl
sbb
xchg
xor
push
mov
popf
fs
mov
mov
push
mov
inc
or
gs
xor
push
insb
pop
mov
arpl
popa
cmpsb
sahf
sbb
sub
pop
cmpsb
fsts
adc
dec
fwait
cmp
mov
mov
dec
clc
test
sbb
add
mov
mov
fidivrs
fldenv
lods
jnp
in
lret
ffree
int
je
rclb
pop
fmuls
das
in
stos
test
mov
stos
test
int
clc
jno
inc
nop
jmp
les
and
inc
pop
das
jmp
aad
ds
inc
push
mov
lret
js
dec
movsb
stos
xchg
jo
adc
call
jmp
in
jecxz
and
cmc
dec
mov
insl
cli
add
into
adc
outsl
dec
xor
sub
push
test
loopne
pop
fcomps
sub
cs
sbb
jbe
cmp
push
or
movsb
jns
pop
enter
mov
cwtl
sti
xor
mov
xor
push
jno
mov
inc
pop
hlt
xchg
js
mov
inc
icebp
jl
mov
stc
hlt
dec
cmp
mov
mov
mov
add
jb
sub
vmovlpd
mov
stos
lret
ss
outsl
jo
lret
icebp
and
icebp
cmp
sub
mov
adc
mov
lahf
mov
jl
inc
imul
pop
test
in
mov
jae
cmpsl
in
mov
or
mov
inc
bound
frstor
stos
cld
iret
nop
jle
stos
loopne
out
test
or
pop
and
cmp
dec
mov
div
lret
adc
dec
loop
xor
xchg
and
lret
cmp
adc
es
jmp
mov
and
dec
cli
mov
sbb
test
repz
pop
jno
xor
aaa
jl
pushf
inc
cli
or
arpl
mov
cmpsb
jl
loope
add
gs
xchg
sub
cmpsb
inc
inc
sub
sbb
xor
adc
in
cmovo
sti
dec
stc
and
mov
shlb
fs
aaa
pop
lock
mov
insb
xor
push
stos
jb
cld
xchg
dec
fmull
in
mov
add
jne
jmp
xchg
adc
cmp
mov
adc
mov
lods
rcr
xor
lea
and
pop
insl
xor
pop
in
aas
and
cltd
es
or
jne
mov
sbb
das
dec
stos
and
add
dec
int
push
lea
jge
cmp
inc
inc
popf
and
int3
rorl
or
in
iret
test
aaa
lret
mov
arpl
mov
lret
in
popf
jo
jo
leave
aad
push
sarl
movsl
pop
mov
ss
test
fiadds
mov
mov
inc
lds
testb
or
ds
adc
gs
ret
ret
in
popf
mov
aad
gs
lods
addr16
xor
jge
dec
or
inc
mov
out
xor
adc
add
imull
sti
hlt
push
cwtl
cmc
clc
out
ret
cs
jecxz
mov
mov
pop
push
jno
pop
xor
jo
iret
jns
adc
push
les
les
push
scas
cld
adc
imul
cmpl
fwait
test
les
pop
or
push
sub
pop
outsb
cs
sbb
stos
jg
hlt
dec
sarl
pop
sub
pop
sbb
xchg
popa
xchg
cmpsl
xor
daa
mov
loop
lods
dec
movsb
mov
aaa
mov
popa
jns
adc
dec
push
mov
dec
pop
mov
mov
jne
adc
insb
lret
test
dec
arpl
xor
movsl
lahf
mov
jp
sbb
push
and
nop
ja
jno
or
enter
mov
stc
popf
inc
subb
dec
adc
jne
or
cmp
push
mov
aad
imul
push
and
testb
das
jmp
lcall
xor
inc
mov
fiadds
xchg
dec
scas
and
and
add
push
xchg
mov
mov
mov
cmp
xchg
sar
lea
jmp
stos
mov
mov
mov
mov
dec
iret
outsl
out
mov
idivb
jne
pushf
ret
popf
mov
stos
cli
das
sahf
je
int3
nop
flds
inc
pushf
mov
dec
imul
imulb
into
xor
mov
push
push
inc
in
cmp
ds
inc
push
mov
xchg
xor
adc
imul
gs
mov
sub
daa
loope
mov
aad
int
mov
mov
jge
xchg
je
cld
sarl
je
fldt
push
lock
mov
pop
lahf
int3
push
aam
mov
pop
cmp
mov
stos
mov
jge
sbb
cltd
lahf
xor
or
push
je
nop
outsl
and
xor
ljmp
push
cmpsb
dec
dec
push
push
aam
loopne
testl
pop
aam
xchg
mov
in
negl
pop
jnp
dec
loopne
inc
mov
dec
dec
push
fwait
mov
stos
pop
cmc
jno
inc
xchg
outsb
daa
cmp
pop
push
sub
shll
xchg
xorl
es
outsb
ja
ja
repz
fwait
jno
aad
arpl
pop
push
hlt
les
daa
in
pusha
call
dec
pop
ror
add
insl
push
xor
dec
lret
pushf
sbb
xorl
pop
xchg
adc
leave
sbb
out
dec
cmpsb
hlt
push
push
sbb
xchg
xor
or
add
cmp
fwait
stc
test
jne
sbb
scas
mov
lock
adc
pop
dec
mov
movsl
das
xor
subl
mov
xor
aam
popa
mov
sbb
adc
mov
jmp
inc
shlb
fcmovne
jl
repz
fmuls
xchg
insb
xchg
cmpsb
outsb
pop
rol
aad
sbb
rolb
arpl
jge
xor
insl
jns
inc
xor
lcall
mov
js
inc
lods
insl
f2xm1
mov
js
test
sarl
mov
mov
or
loopne
std
adc
inc
lea
xchg
inc
mov
inc
add
stos
cmp
daa
jno
mov
dec
imul
push
push
mov
fstps
sbb
sub
lods
ret
lods
ficomps
jle
out
push
pop
mov
loop
lock
dec
mov
mov
movsb
inc
push
mov
xor
adc
outsb
ja
fidivl
test
stos
inc
push
fistl
inc
aaa
adc
sbb
mov
xchg
xor
pop
cmp
xor
movsl
sub
in
imul
push
xchg
pusha
or
jne
in
jge
out
adc
and
imul
ljmp
out
jecxz
xchg
push
sub
jbe
lcall
js
pop
push
shll
sbb
jp
and
mov
adc
insl
cmp
jb
dec
cmc
leave
mov
mov
push
rcll
insb
out
ror
or
xchg
and
pop
push
xor
aas
xor
push
fadds
std
sarb
inc
hlt
imul
cmc
leave
and
fistpl
imul
sbb
lods
adc
mov
and
push
sub
fiadds
out
scas
xor
subb
push
into
loop
int3
gs
lods
or
addr16
cmp
mov
sub
fwait
jo
cld
xor
pop
lds
cmpb
mov
outsb
add
mov
jl
pushl
lods
or
shrb
cs
pmaddwd
inc
das
inc
jo
test
ja
cwtl
mov
or
cmc
pop
jb
mov
fisttpl
xchg
and
lods
lods
dec
test
inc
movsl
sarb
leave
cmp
fmuls
or
lds
addr16
xor
mov
jno
adc
mov
hlt
push
inc
daa
shr
inc
cmpsb
inc
mov
iret
fninit
sarb
test
mov
mov
lock
adc
push
insb
jae
stos
pop
or
cli
out
and
lds
ret
das
addl
aad
lret
and
and
jnp
aaa
lcall
sbb
lret
cmp
inc
cli
jge
mov
int3
icebp
fwait
jno
xor
cwtl
nop
inc
adc
jae
jb
mov
sbb
arpl
or
outsb
dec
push
inc
test
das
inc
add
pop
ficoml
xchg
stos
inc
sbb
cmpsl
adc
dec
lods
pushw
pushf
arpl
cmpsb
movsl
sbb
mov
aas
mov
xor
cs
mov
incb
push
sti
movsl
xchg
push
dec
ja
pop
dec
mov
or
scas
lcall
fwait
das
aaa
adc
push
add
fimuls
outsl
int3
sahf
jns
sub
jmp
int
mov
push
pop
pop
fcoms
aaa
or
push
inc
test
test
dec
xor
mov
loopne
ja
cmp
sub
add
jmp
test
fcompl
dec
lahf
pop
and
mov
sahf
jnp
jle
lds
xchg
adc
sbb
jo
or
and
faddl
mov
mov
ret
ja
in
push
push
push
xchg
cmpsb
decb
sbb
push
adc
insb
rolb
addl
sbb
adc
and
or
cwtl
jmp
push
xchg
jge
sub
lock
inc
or
jnp
push
mov
fcmovnb
jmp
xchg
pop
cs
stos
xchg
rorb
daa
call
mov
dec
sbb
dec
cwtl
xchg
std
jle
pop
push
mov
sbb
fstpt
pop
es
pop
es
rorl
xor
pusha
hlt
jae
les
inc
lret
jnp
cmp
mov
pop
push
test
mov
jno
jg
sti
out
lret
inc
stc
jge
dec
push
test
pop
dec
push
jae
and
xor
mov
ss
lea
pop
jnp
jmp
inc
dec
sub
outsl
scas
pop
push
movb
stos
cmp
out
mov
mov
nop
xor
pop
sbb
dec
out
fsubrp
je
popa
stc
mov
jbe
inc
push
lahf
aam
stc
sbb
incl
dec
ret
out
aas
cmp
jae
dec
or
jle
cmp
pop
je
aas
mov
call
mov
mov
add
fcompl
push
add
xchg
inc
in
pop
pop
cmp
dec
aaa
sbb
cwtl
test
jmp
jle
fcmovnbe
sbb
xchg
xchg
xchg
push
xchg
add
adcl
sub
cltd
pop
insl
mov
push
or
sub
cmp
sub
cmpsb
sbbb
pop
sub
jbe
dec
jns
push
aas
std
push
pop
push
filds
leave
fisubs
inc
popa
icebp
inc
fs
push
popa
or
pop
pop
push
shrl
inc
push
movsl
daa
pop
sub
and
fistps
ds
outsb
addr16
lods
push
adc
xchg
pop
fmuls
inc
sahf
cmp
or
dec
in
cltd
shlb
xlat
lret
sbb
mov
or
in
xchg
lret
jnp
jle
sub
push
loope
adc
lds
mov
dec
add
xchg
inc
inc
fisttpll
das
add
out
mov
add
std
dec
jns
inc
fdivr
shll
iret
mov
jno
dec
out
mov
sbb
xchg
mov
loopne
ljmp
lea
xchg
je
and
addr16
inc
mov
or
push
rclb
dec
mov
pop
or
inc
sti
out
mov
dec
push
xor
ds
adc
jne
shr
fnstcw
mov
daa
sbb
into
popl
jge
sbb
pusha
xchg
test
xchg
fucomp
lret
bound
fld1
xlat
push
or
stos
ds
outsl
gs
stc
inc
dec
fldl
xchg
pop
es
mov
jo
mov
add
fcompl
movsl
pop
test
cmp
pusha
inc
fldcw
cmpsb
pop
jmp
sub
dec
outsb
stc
lock
cld
lods
mov
jno
in
fdivrs
pop
dec
scas
lds
iret
dec
ss
xchg
dec
pop
push
sub
mov
in
mov
adc
int
sub
cltd
sub
jecxz
lods
std
mov
insb
in
mov
or
mov
mov
fsubrl
gs
ret
adc
addr16
mov
push
leave
sbb
add
sbb
mov
pop
fwait
mov
loop
inc
lock
or
sbb
or
cmpsb
lods
mov
enter
insb
enter
nop
gs
dec
shl
ss
inc
lret
jge
cmp
xchg
lods
cli
es
cmpsb
pop
xor
jecxz
and
lods
adc
js
push
cmp
push
or
xchg
inc
fadds
in
adcb
lods
sub
sub
adc
push
test
pop
xchg
mov
mov
out
or
ss
testl
test
hlt
adc
les
pusha
cwtl
sbb
pop
lea
lea
add
cltd
ds
mov
lahf
dec
test
dec
jo
in
ljmp
push
push
in
mov
xchg
jl
lds
xorb
mov
out
mov
sbb
xchg
xor
mov
mov
data16
lds
add
out
roll
push
cmc
jmp
scas
add
or
mov
jmp
and
lahf
shrb
lods
lahf
inc
xor
dec
jo
cmpsl
sub
pop
imul
pop
pop
rcl
sbb
ss
mov
jle
fnstenv
jg
add
push
pusha
mov
sub
adc
daa
sbb
sub
jl
pop
adc
mov
int3
arpl
dec
mov
mov
push
dec
jge
dec
xchg
out
andb
mov
mov
lds
cmpsb
pushf
and
rcl
jmp
sub
lret
adc
pop
scas
and
and
push
jne
sub
dec
mov
out
mov
inc
popa
xchg
aaa
xchg
pop
adc
movsl
jge
test
cmc
mov
pusha
sub
mov
adc
xor
daa
sti
sar
dec
and
dec
or
xchg
std
jb
sub
dec
lret
cmp
ds
push
mov
adc
dec
jp
cmp
les
sbb
xchg
inc
add
pop
pop
or
xchg
cmp
mov
dec
scas
lods
ljmp
and
iret
xchg
add
pusha
pop
fidivl
outsl
cmp
cmpsl
dec
ja
imul
xchg
xchg
sti
xor
sbb
icebp
out
idivb
or
pop
into
insb
lods
xchg
inc
adc
inc
or
sub
stos
sub
lea
in
mov
aas
jp
fisubrl
or
push
mov
js
pop
jmp
outsl
push
out
clc
xlat
xor
push
movsb
xor
jbe
and
mov
cmp
or
fdiv
out
test
sbb
and
pop
stos
sub
sahf
inc
ss
mov
xchg
add
cld
adc
insb
call
insb
pop
fisubl
xchg
mov
aad
mov
out
inc
inc
xchg
std
outsb
popf
movsl
push
adc
ficompl
lahf
jecxz
int
jp
out
dec
hlt
aad
xorl
jns
test
popf
clc
inc
or
jns
pop
jno
out
movsl
rorl
push
dec
mov
pop
sub
push
and
xor
add
mov
imul
jmp
xor
or
addb
adc
xor
pop
dec
lock
shlb
push
jae
xchg
jb
outsb
sti
dec
jae
push
inc
test
test
movsb
test
insl
xlat
sbb
inc
sahf
lret
adc
stos
lret
pop
and
pop
adc
mov
fadds
adc
je
cmp
xor
pop
add
daa
cli
and
fidivrs
mov
enter
fwait
andb
data16
fimull
pop
mov
jo
sub
leave
fisttpl
rolb
jo
in
lret
push
nop
jae
jmp
rclb
sti
jmp
pop
and
out
inc
jge
les
dec
xor
and
insb
sbb
loope
mov
sub
jbe
adc
push
aaa
out
and
dec
mov
ror
jne
inc
mov
roll
cmpsb
push
xchg
push
inc
aad
lods
fwait
xor
jmp
mov
or
push
cmp
in
xor
push
jb
jo
or
and
out
pop
mov
push
lcall
ret
mov
and
enter
inc
xor
arpl
cmpsl
inc
shll
push
cmp
xor
gs
outsb
pop
lds
pop
jl
inc
fsubl
imul
xchg
inc
and
sbb
add
mov
das
in
jb
xor
lret
push
xor
loop
shrl
sbb
fstps
scas
es
xor
in
std
pop
cwtl
pushf
push
fs
mov
cmp
push
mov
outsb
call
mov
cmc
scas
mov
mov
inc
aam
add
mov
xchg
test
movsl
outsl
pop
dec
add
pop
mov
js
out
lcall
fistps
popa
shl
cmp
lods
mov
jp
ljmp
cltd
imul
adcl
lods
pop
dec
cli
lret
flds
jp
ret
inc
xchg
fistps
pop
ret
sub
mov
outsl
test
cli
add
movsl
xchg
popa
mov
es
adc
pop
pop
push
scas
pop
add
test
lret
sub
loopne
repz
stos
jge
cli
xchg
lods
mov
or
arpl
stos
pop
das
out
call
out
mov
mov
mov
inc
movb
sub
mov
push
shl
negl
jmp
icebp
popf
les
loop
icebp
jp
xchg
jl
arpl
pop
out
in
dec
mov
adc
popa
sarb
mov
lret
mov
sbb
cli
lcall
aas
sbb
pop
xor
lret
xchg
iret
dec
push
mov
mov
ds
jp
and
xchg
gs
push
xor
testl
dec
dec
mov
int
xchg
rcrb
mov
push
mov
xchg
xchg
testl
es
mov
dec
lcall
inc
mov
cmp
or
nop
xchg
bound
sbb
aas
iret
pop
push
jns
sub
inc
mov
rcl
lds
xchg
and
setno
or
adc
daa
setl
arpl
pop
outsl
mov
sahf
add
shll
fadds
dec
sub
cli
cmovno
pop
cmpsb
sub
adc
lret
sbb
test
insb
add
sti
lock
cwtl
pushf
xor
out
push
cmp
gs
pop
sti
inc
ds
mov
stos
jg
sbb
inc
inc
inc
stos
test
jge
mov
adc
pop
and
mov
sub
add
xchg
cmp
xchg
movsb
adc
add
or
push
ljmp
jb
fildll
mov
mov
bound
xor
shlb
bound
jae
fcmovnbe
xlat
dec
out
jbe
inc
mov
jne
js
movsl
pop
and
inc
mov
fdivrs
cmpsb
addb
and
mov
xor
mov
es
sbb
lods
mov
adc
stos
lods
sub
adc
out
aad
iret
jle
inc
mov
bound
lods
pop
mov
cmc
jg
out
cmp
push
lds
add
xor
rcrb
cwtl
fisubrs
movb
bound
test
aas
mov
dec
push
push
pop
ja
push
fsub
jge
stc
in
mov
sbb
sbbb
shlb
sub
lock
dec
add
daa
negl
inc
sbb
and
xor
scas
cld
fmuls
ds
xor
clc
lods
arpl
arpl
pop
out
rcrb
cltd
rcr
sub
add
push
out
push
jnp
xchg
jb
sbb
insl
push
test
cmp
scas
lods
iret
mov
rcll
dec
pop
xchg
int3
xor
cmpsb
mov
hlt
addr16
movsb
and
xchg
adc
test
gs
pushw
push
sub
cwtl
ret
ds
test
cmp
in
sbb
add
sahf
jg
xchg
jecxz
cmp
mov
mov
sbb
xor
lret
sub
xor
lock
out
enter
or
sub
cmp
adc
inc
pop
dec
inc
cmc
je
xchg
dec
pop
cmp
and
xchg
dec
les
mov
xor
inc
popf
sbb
adc
std
push
cmpsb
out
mov
daa
iret
adc
xchg
adc
pop
or
imul
int
push
push
pop
outsl
ja
and
pop
sub
in
inc
es
dec
pop
or
mov
and
mov
or
aad
iret
cmpsb
aam
push
sar
add
enter
repz
rclb
ret
into
imul
jnp
adc
push
test
mov
cmp
faddl
dec
sti
test
and
into
xor
pop
mov
out
or
scas
inc
mov
cmp
sub
mov
mov
pushf
out
push
je
sbb
cltd
adc
sub
mov
jmp
push
jmp
bound
lods
and
mov
cli
sti
stos
lret
mov
or
mov
inc
movsb
shll
decb
cwtl
addr16
mov
lods
lea
push
adc
es
jg
mov
pushf
pop
sub
push
and
rcrb
and
mov
clc
xor
mov
fwait
add
and
movsl
inc
jno
mov
imul
sub
adc
rolb
lock
and
jecxz
adc
ljmp
repnz
sbb
fidivrl
call
jge
out
leave
mov
push
rorl
out
dec
push
test
mov
add
out
mov
sub
pop
fistpl
cmpsl
dec
mov
ds
pushf
pop
or
or
sub
push
movsl
jl
mov
push
mov
xchg
int3
sbb
std
inc
push
xchg
sub
int
std
and
mov
or
das
inc
inc
sub
test
rorb
mov
popf
aad
es
cld
rcrl
adcl
xchg
sub
mov
arpl
int3
aad
mov
leave
in
xchg
xchg
addl
hlt
fnstcw
sbb
dec
adc
nop
adc
push
mov
jg
decl
pusha
rclb
repz
test
mov
es
mov
mov
adcb
in
arpl
lds
outsb
in
jmp
test
and
aad
xor
mov
dec
jmp
push
push
pop
and
insb
addl
andb
xchg
dec
dec
repnz
inc
shll
pop
sahf
add
jge
stc
xchg
insl
out
jge
mov
mov
cmp
cmp
push
mov
jecxz
rorl
inc
dec
loope
fsub
pop
fsts
adc
xchg
lret
fcomps
neg
lret
jg
mov
outsb
arpl
pusha
add
popf
pop
or
inc
outsl
in
fld
into
clc
fisubrl
mov
out
cmp
or
sub
adc
adc
mov
xchg
lret
cltd
cld
scas
jl
cltd
int3
ret
pop
or
cmp
fdivr
sub
cmp
xchg
leave
inc
xor
fisubs
xchg
sub
and
pop
jo
and
jl
int3
fwait
inc
pop
pop
mov
sarl
adc
test
cmp
out
rcr
pop
subl
loope
mov
gs
lea
or
int
jmp
je
scas
jo
mov
add
xchg
or
es
sub
jo
inc
dec
icebp
fs
arpl
mov
jmp
mov
aam
lcall
adc
cwtl
hlt
outsl
fiadds
mov
xchg
mov
xor
sbb
mov
or
mov
and
inc
or
es
ds
lret
leave
js
lret
pop
ljmp
jg
leave
inc
dec
sbb
mov
xchg
mov
repz
adc
test
or
pop
mulb
mov
fs
fiadds
pop
call
jbe
inc
cs
das
mov
int3
jg
inc
adc
pop
bound
push
dec
pop
aaa
mov
add
mov
shll
shl
mov
mov
cld
mov
mov
jb
push
mov
clc
jae
cmovns
and
xchg
fcmovnbe
push
nop
js
cwtl
call
cld
in
adc
add
stos
es
mov
cmpsb
mov
xchg
add
and
ja
pop
lret
inc
mov
dec
addl
in
cmp
or
fcomp
inc
jbe
cmpsl
data16
push
sbb
ret
or
fwait
pop
xor
or
sub
jp
dec
jg
pop
mov
popa
mov
js
imul
aad
xor
pop
cwtl
sub
popa
aam
xchg
dec
jl
sbb
insb
stos
xchg
sub
sub
stos
mov
mov
ljmp
sub
sahf
movsb
push
daa
inc
pop
or
jecxz
pop
cmp
gs
stc
push
in
insb
xchg
in
add
lret
push
out
jb
cli
ror
mov
popf
ret
sub
sub
xor
lahf
mov
and
and
cmpsb
sbb
bswap
xor
stos
mov
sub
mov
push
fdivl
outsb
stc
adcl
cltd
xor
das
pop
add
arpl
mov
sbb
xchg
dec
or
int
pop
jl
dec
test
aad
stos
dec
sbb
jnp
mov
ss
cmpsb
add
mov
mov
lret
in
inc
mov
mov
outsb
mov
je
mov
sbb
lret
dec
je
sub
jp
loopne
popa
mov
into
test
xchg
cmp
jle
xchg
ss
scas
das
rcrb
xor
jae
ret
mov
std
sbb
ss
sub
fcmovne
fmul
or
test
add
sub
mul
add
mov
jo
cli
shlb
push
outsb
cs
jne
subl
pop
mov
or
lock
or
popf
ja
rorl
push
aaa
test
and
stos
iret
mov
into
xchg
and
loop
ja
fbstp
xor
xchg
inc
out
xor
mov
popa
xor
cli
push
xchg
ss
leave
notb
or
jge
ficoml
rclb
xor
xlat
fisubl
sarl
xorb
jle
dec
mov
sbb
ret
mov
test
scas
out
dec
lret
ss
pop
in
mov
clc
jo
lcall
lods
lret
jmpw
add
pop
movsl
push
js
pop
cmp
pop
bnd
fdiv
repz
shll
push
fdivr
and
dec
xchg
push
pop
inc
les
jbe
pushf
popa
inc
xor
pusha
repz
cmp
sahf
loope
pop
inc
out
jnp
cli
daa
inc
iret
and
mov
cmpb
cs
cmpsl
out
int3
add
outsb
notb
mov
jnp
clc
mov
or
lcall
cmpsl
push
xor
mov
sbb
shlb
insb
inc
in
sub
jg
pop
loop
in
ja
fs
popa
in
mov
adc
stos
ror
dec
fists
pop
or
mov
rclb
push
push
dec
jg
mov
cmp
add
popf
pop
in
push
mov
rcrl
xlat
cmp
mov
call
and
clc
pop
cmp
add
cmc
negl
orb
stos
push
imul
adc
cmp
sub
addr16
or
xor
inc
out
push
rclb
jae
clc
ret
jns
sbb
je
ficomps
jg
shlb
inc
ds
rcrb
mov
cmc
inc
pop
shl
addr16
cs
mov
adc
pop
dec
dec
fdivrp
data16
loop
outsb
iret
mov
imul
es
pop
nop
pop
jb
and
sub
mov
cwtl
mov
push
clc
or
fisubrl
clc
mov
mov
pop
scas
outsb
mov
cmp
cltd
dec
out
dec
cmp
into
imul
mov
outsb
outsb
lret
jne
repnz
dec
sub
ja
jmp
push
push
pop
xchg
xor
movsb
dec
cld
ret
push
cwtl
rorb
add
adc
movsl
mov
xor
mov
inc
jp
lds
insb
xchg
rcl
fidivrs
std
imul
mov
and
mov
pop
dec
pusha
cmpsb
fwait
ljmp
or
or
xor
sub
pusha
pop
fwait
xor
lods
mov
pop
icebp
or
imul
daa
mov
jecxz
jbe
fmul
jbe
shl
out
add
aam
jo
rcl
in
addb
mov
jb
loop
adc
aad
jmp
ljmp
ficomps
cmp
scas
dec
imulb
lret
popf
mov
jne
das
outsb
xor
pop
mov
add
mov
pop
sub
pop
mov
jmp
nop
push
fcoml
shlb
jg
xchg
aaa
cmp
push
mov
popf
xor
pusha
xor
outsl
movsb
mov
add
mov
orl
mov
and
sub
xor
adc
xchg
movl
int
cs
jbe
gs
adc
lods
xor
vphaddubw
in
or
pop
mov
leave
jbe
scas
cli
mov
cs
mov
add
adc
xchg
rcrl
negb
jle
test
lods
sub
cmp
fucomip
push
inc
cwtl
xchg
sbb
lea
sub
jbe
jecxz
bound
inc
xchg
into
cmp
mov
iret
fists
movsl
mov
mov
std
stos
lret
rcll
into
mov
jo
xlat
pop
jecxz
xchg
dec
lock
sub
pop
in
pop
push
xorl
or
lea
push
add
dec
push
jle
lea
push
xor
mov
mov
fdivp
pop
inc
mov
pop
in
call
scas
mov
inc
sbb
mov
sbb
jl
arpl
gs
mov
mov
push
jl
popf
mov
ret
or
dec
mov
daa
pop
and
out
das
jns
add
pop
inc
addr16
adc
push
cmc
repnz
mov
ljmp
fisubl
inc
cltd
aam
cmp
add
jo
adc
cltd
movsl
xor
ret
pop
in
xchg
out
add
idivl
insb
sbb
popa
in
or
xor
jnp
and
xchg
aaa
mov
cmp
inc
jecxz
es
int3
and
mov
mov
pusha
mov
jp
push
enter
in
cmp
mov
and
and
sbb
mov
push
mov
fsub
dec
hlt
xor
cmp
imul
in
or
sbb
push
inc
sub
outsl
sahf
push
mov
cmpl
jb
xor
jae
cmpl
ljmp
jns
or
iret
jle
mov
add
jl
xchg
les
cmp
xchg
std
push
inc
inc
inc
pop
cmp
rcll
cli
pop
adc
sahf
loopne
jns
sar
pop
xchg
subb
ficoms
mov
cwtl
xchg
int3
out
push
inc
stos
xchg
jnp
movsb
pop
adc
and
inc
push
stos
mov
pushf
xchg
stc
sbbl
in
fstps
cli
sub
cs
test
adc
loopne
push
lods
push
mov
push
gs
iret
xor
sbb
xor
imul
mov
mov
sub
addl
arpl
dec
add
mov
mov
mov
add
cmpb
repnz
insb
xchg
jmp
in
in
out
nop
cmpsl
inc
xchg
outsb
lret
push
sbb
dec
lcall
sbb
push
inc
test
push
lea
mov
ret
dec
and
add
push
fadds
or
mov
out
dec
xchg
cwtl
icebp
pop
rorl
jb
inc
pushf
mov
adc
shlb
lcall
jecxz
add
xor
push
out
out
adc
pushf
jne
in
inc
pop
test
dec
inc
les
fs
cld
adc
test
iret
sarb
adc
repz
dec
cmc
pop
jg
cmp
xchg
xor
mov
loope
fsubl
add
adc
xor
inc
cmp
mov
mov
ret
or
fdivrl
xlat
and
sub
push
jno
shl
das
insb
daa
into
stos
stos
lret
call
cmp
in
test
jae
stc
add
push
sbbb
out
lods
pop
sub
sbb
test
sbb
mov
mov
dec
fcomps
daa
mov
out
sti
ffreep
cmp
call
cmp
inc
aaa
in
push
mov
mov
imul
and
shll
inc
lret
cmpb
jmp
pop
lock
adc
int3
iret
and
movsl
adcb
inc
gs
jno
mov
adc
sbbl
mov
mov
xor
jl
loop
imul
arpl
mov
inc
bound
mov
out
xor
dec
in
jl
mov
xchg
popf
cmp
adc
mov
dec
ficomps
in
adc
inc
fwait
xchg
hlt
cmp
imul
ret
inc
jecxz
or
cs
sbb
fidivrl
push
mov
and
sub
cmp
xchg
pop
insl
lahf
jle
ljmp
lock
and
xchg
inc
ljmp
jae
mov
mov
test
mov
mov
adc
lcall
mov
ja
aam
add
lret
lock
iret
sbb
ja
and
sbb
scas
cmc
sarl
sbb
hlt
psubsw
movsl
arpl
test
sub
sub
mov
dec
inc
and
mov
jo
mov
mov
stos
loope
mov
xchg
imul
idivl
add
aad
adc
dec
clc
stos
mov
imul
out
jno
mov
mov
ror
mov
xor
adc
pop
test
bnd
sbb
xor
push
mov
mov
xchg
loope
xchg
sub
xchg
insl
lcall
mov
repz
stc
test
sub
aas
gs
cld
mov
xchg
testb
aas
stos
mov
aas
cmp
in
jbe
dec
fs
fidivl
mov
mov
cli
add
icebp
inc
aaa
test
mov
test
adc
dec
clc
adc
nop
jbe
mov
and
shll
lahf
jge
add
inc
push
push
mov
negb
inc
mov
out
xorb
loop
or
jb
mov
daa
mov
xchg
test
ja
mov
add
mov
jle
lea
push
mov
pop
fsubr
cwtl
in
loop
jnp
pop
out
sahf
xor
push
or
sub
pop
add
out
enter
call
test
outsb
ja
lea
jecxz
cli
movsl
inc
xchg
mov
adc
jmp
fstps
adc
fwait
sub
daa
jb
icebp
stos
mov
push
sbb
mov
adc
dec
test
inc
in
enter
out
xchg
cltd
dec
inc
sub
add
add
rcll
shll
cmpsb
xchg
enter
jecxz
mov
andb
pop
push
dec
jle
imul
out
add
or
add
pusha
ds
jl
icebp
xchg
std
ja
nop
data16
mov
loop
adc
dec
cwtl
negl
pop
xchg
aam
inc
mov
push
jno
sbb
xchg
mov
add
je
jno
dec
jnp
adc
push
mov
clc
nop
in
jne
mov
popa
into
pop
and
xchg
call
adc
sub
inc
xor
in
scas
mov
fstpl
cltd
xchg
dec
push
push
add
and
mov
pop
xor
fdivrs
mov
or
outsb
xchg
cmpl
ss
jae
stc
inc
or
aaa
hlt
dec
cmp
inc
cmp
mov
cmp
sub
out
cwtl
mov
cmp
js
push
or
dec
mov
pop
lea
and
jg
mov
or
gs
aas
mov
aam
dec
add
inc
push
leave
add
adc
lods
out
and
mov
xlat
add
test
rorb
sub
push
push
dec
and
insb
add
out
adc
jmp
shlb
sbb
cmp
fmul
mov
fisubrl
pmaxub
andl
cmp
gs
fs
jg
or
adcb
adc
fmull
sbb
mov
adc
fstpt
sbb
dec
aad
mov
xor
popl
push
mov
or
daa
pop
jno
test
dec
dec
pop
repz
dec
jg,pt
pop
and
bound
lcall
jbe
fldcw
inc
mov
xchg
loope
dec
test
js
in
dec
adc
push
sub
lea
jle
dec
jmp
xor
lret
loope
mov
sub
xchg
cwtl
sbb
sbb
nop
add
out
enter
pop
push
or
test
cs
adc
lret
js
pop
in
stc
add
mov
dec
ret
xchg
xchg
push
jae
pusha
daa
shll
xlat
scas
neg
mov
dec
jmp
mov
xor
ljmp
leave
mov
divl
pop
mov
and
or
and
movsb
js
shlb
dec
push
inc
mov
xor
adc
push
out
sbb
or
jns
xchg
push
adc
int3
or
mov
mov
aas
call
int
stos
pushf
mov
sti
test
pop
or
push
dec
and
mov
push
movsl
arpl
ret
xchg
ret
add
call
mov
mov
mov
rorl
pop
mov
jbe
repnz
imul
jnp
lcall
push
cmp
int
sub
sarb
pop
mov
fimuls
add
loopne
in
sub
add
aas
stos
lods
xchg
jnp
testb
mov
pop
fwait
push
int3
clc
jb
inc
add
loop
insb
dec
test
xchg
add
adc
mov
mov
adc
aad
jb
ret
inc
in
cmp
xchg
mov
mov
bndldx
popf
out
lahf
jp
popf
cmp
enter
movsl
jb
lret
push
jp
push
add
xchg
mov
mov
outsb
xor
pusha
clc
shll
push
jbe
jl
mov
jne
xchg
sti
jo
cld
mov
or
mov
xor
insl
sub
frstor
push
mov
mov
xchg
outsl
leave
cmpsl
neg
mov
mov
andb
faddl
push
out
xlat
pop
dec
lods
out
scas
insl
jae
push
in
xor
jno
adc
push
daa
sub
push
imul
cmp
mov
jp
xchg
repz
xchg
mov
dec
test
stc
lock
mov
jno
and
mov
xchg
or
fwait
mov
xchg
pop
and
mov
mov
fwait
push
fdivs
sub
pop
in
notl
or
lahf
and
cmpsl
dec
sub
mov
dec
popf
inc
mov
enter
mov
xchg
movsl
sub
mov
dec
sbb
xchg
jp
mov
out
loopne,pn
sub
aad
jnp
inc
mov
xchg
add
dec
addl
sbb
dec
arpl
fdivl
dec
pop
mov
aad
scas
mov
push
push
out
xor
push
sti
mov
out
call
sbb
jne
or
fimuls
bound
jmp
mov
rclb
je
insb
push
or
in
push
xchg
lahf
idivl
ss
aad
mov
roll
push
jne
repz
test
int3
pop
inc
rcl
mov
testb
mov
sub
ret
loop
rcll
push
mov
push
xchg
xchg
int3
in
push
cmp
sub
xor
pop
icebp
xchg
outsb
ljmp
jne
pop
jmp
ret
sub
movsb
rorl
in
sub
xor
test
cmpsl
leave
fcoml
or
leave
test
inc
into
int3
mov
add
into
add
mov
ret
jbe
mov
stos
inc
adc
adc
sbb
dec
pop
mov
push
mov
pop
xchg
mov
roll
movl
js
inc
push
popa
sbb
loopne
flds
loopne
insl
fs
mov
ja
inc
mov
stos
loop
push
out
sbb
pusha
ja
into
insl
sarb
pop
add
in
shlb
inc
pop
sub
out
adc
sub
cmp
fisttpl
call
popa
in
add
and
jg
mov
ret
xor
aas
pushf
xor
leave
mov
sarb
mov
add
dec
addr16
lret
dec
repz
push
aad
out
lea
int3
pushf
mov
rorb
jns
xor
cmp
enter
out
pop
mov
dec
add
aas
rcll
jecxz
mov
pop
xchg
call
and
add
jle
rol
xchg
out
mov
dec
movsl
imul
ret
fdiv
daa
repz
mov
and
into
leave
lcall
lret
mov
xor
in
pusha
jns
add
inc
lea
cld
mov
mov
push
push
dec
inc
xchg
adc
add
into
xlat
cmp
xchg
sbb
test
cmp
pop
std
mov
cmp
bound
out
lods
imul
in
movsb
sbb
negl
es
fwait
nop
mov
popa
and
or
in
cltd
outsl
decb
pop
cwtl
pop
adc
clc
mov
push
or
imul
jno
mov
dec
push
ljmp
xchg
ret
add
cmpsl
add
xchg
int3
pushl
add
mov
xchg
inc
dec
push
mov
dec
loop
cmpsb
jecxz
pushf
cmp
faddp
dec
outsl
roll
movsb
test
pop
push
aad
add
add
dec
mov
ds
push
sbb
sbb
push
rorl
stc
dec
lcall
mov
sbb
icebp
loope
cmp
cld
int3
sbb
inc
ljmp
mov
xchg
cmpsb
push
loopne
adc
sarl
jno
out
roll
insl
lds
dec
xor
mov
out
push
lret
pop
mov
xchg
rorb
xor
mov
xor
pop
aas
loop
cli
fistps
inc
jno
xchg
pusha
pop
push
or
arpl
hlt
call
in
out
dec
xor
mov
inc
xchg
pop
jno
inc
jp
jecxz
push
push
fdivr
cltd
lret
cmpsb
cmp
xchg
fxch
movsl
insb
aas
out
mov
push
adc
mov
jo
cmp
cmp
jb
addl
or
and
fnstenv
sbb
mov
push
push
push
cli
fiadds
pop
and
mov
hlt
jp
dec
add
sbb
xor
sub
push
xchg
jb
add
push
stc
cmp
adc
push
jp
xlat
mov
int3
sbb
lret
xor
stc
scas
cli
mov
leave
je
xor
adc
lods
add
xlat
mov
cld
outsb
in
mov
mov
xchg
fs
push
or
jno
jl
xlat
fucomi
dec
jl
aas
xchg
push
cmp
add
pop
ja
jo
cmp
sbb
lahf
sub
cli
pop
and
ret
mov
gs
mov
cmp
sub
mov
cltd
ret
rorb
add
lock
leave
sub
mov
and
jb
fcmovnbe
scas
jbe
inc
sub
or
add
enter
mov
xacquire
add
sahf
adc
add
add
cmp
lret
push
daa
sbb
sub
sub
pushl
fnstenv
int
dec
xchg
push
loope
and
fst
and
cwtl
insl
add
aas
mov
or
ja
loopne
test
in
and
in
push
mov
sbb
call
and
das
mov
pop
aaa
cmp
mov
and
movsl
inc
push
lods
push
and
popa
in
orb
mov
scas
or
dec
lock
mov
dec
and
sbb
and
ja
cmp
inc
mov
lcall
xchg
add
aam
icebp
lock
std
push
xor
add
dec
enter
in
cmp
xchg
xchg
cmp
cmp
inc
jae
pop
insb
scas
cmp
pop
movsl
into
sbb
sub
ljmp
sbb
mov
aad
roll
push
adc
or
ret
jbe
lret
inc
stos
aad
loop
xor
add
pop
je
push
dec
jo
pop
aam
in
lock
test
ficoms
mov
add
leave
cltd
push
cmp
xchg
int3
and
push
sahf
jge
xor
fisubrl
mov
adc
popf
mov
xchg
shlb
push
or
lock
stos
std
push
jno
jo
sub
inc
daa
jne
jg
sub
inc
push
xchg
sub
into
jns
lea
pop
jmp
mov
inc
into
ret
mov
stc
int
addb
cltd
gs
mov
dec
jp
cwtl
xchg
sbb
push
aad
mov
stos
xchg
daa
mov
test
je
xlat
fnstsw
jle
jne
icebp
and
gs
cmpsb
rcrl
daa
xor
add
inc
hlt
dec
push
pop
dec
ds
or
ss
mov
jg
les
sub
lea
push
mov
xchg
sbb
adc
ss
xlat
push
dec
stc
sub
pop
cmp
jae
outsb
sahf
mov
cwtl
cs
jmp
adc
mov
test
and
inc
xor
jne
hlt
push
nopl
jnp
scas
shlb
lahf
cld
xor
dec
outsl
scas
fldt
ret
in
imul
test
int
dec
inc
test
insb
inc
loopne
sub
or
dec
outsb
imul
cmp
jl
jns
in
js
xor
sub
sbb
mov
pop
jb
mov
int
mov
xchg
adc
shrl
out
in
add
xor
sub
lea
lock
test
jmp
int3
mov
or
cmp
dec
bound
out
pop
cmc
sub
inc
xor
or
cli
mov
fidivrs
jge
add
popa
orl
cltd
cltd
add
xor
mov
adc
lret
xor
jno
adc
es
xlat
negb
pop
jo
in
sbb
adc
sub
add
repnz
int
ss
xorl
push
xchg
clc
les
outsl
cs
sub
sbb
std
movsb
imul
jnp
out
lret
xchg
div
push
sbb
pop
insb
mov
adc
xor
pop
ja
out
jecxz
fwait
xchg
sub
mov
jg
daa
inc
fimull
test
xor
aaa
add
mov
stc
mov
push
pop
sub
loopne
sti
mov
push
fisubrs
or
sbb
inc
in
test
sbb
add
lret
inc
cmc
nop
notl
sahf
std
mov
inc
sbb
xor
adc
push
jmp
sub
dec
adc
loopne
sbb
inc
mov
addr16
mov
rcr
jp
mov
lret
orb
jle
aad
pusha
in
cld
inc
lock
jmp
repnz
lods
mov
outsl
bound
bound
jmp
or
jns
push
repz
jge
in
mov
or
in
rcll
cmpsb
test
dec
adc
test
xchg
cld
shl
lods
xor
mov
ret
roll
cmp
lods
sub
ret
add
in
dec
push
push
fwait
ljmp
rcll
dec
mov
cmpsl
fcoms
mov
insl
fmull
icebp
xor
call
add
pushf
adc
push
adc
sahf
mov
aaa
or
lock
lds
fmul
and
fmul
divl
lds
add
mov
dec
xchg
pop
xchg
out
push
xor
repz
test
fdivrp
cli
xchg
xchg
add
fisttpll
push
test
lods
or
popa
aam
cmpb
fsubs
in
xor
xchg
pop
mov
push
addr16
xlat
sbb
jmp
shr
test
and
adc
push
ss
cltd
add
xchg
fwait
in
jp
ficompl
loope
lahf
outsl
iret
push
lcall
push
add
lret
cs
cmp
jge
mov
push
mov
and
mov
jmp
pop
cmc
dec
mov
pop
lea
divb
lss
xchg
lahf
inc
sub
lea
mov
les
cmpsl
xchg
addl
mov
mov
out
sbb
inc
call
cwtl
iret
out
xor
adc
cmpsb
cmp
lods
lods
pusha
xchg
pusha
lea
inc
addr16
cmp
sub
inc
cmp
xor
sub
aad
js
and
and
mov
mov
ret
fbstp
cs
pop
mov
inc
pop
push
or
negb
pop
xchg
inc
inc
inc
push
cmpsl
ja
and
or
dec
scas
cmpsl
nop
and
int
dec
xchg
push
imul
push
sbb
out
push
aam
lret
sbb
into
inc
stc
push
mov
push
jle
cs
dec
or
mov
mov
lods
xor
filds
push
cmp
inc
mov
mov
push
fisubs
cwtl
gs
movsl
cld
daa
jmp
lea
rorb
or
push
push
sub
data16
jmp
add
mov
mov
les
and
call
jbe
mov
add
sahf
cmpsb
sbb
arpl
push
inc
in
test
lcall
mov
lret
sbb
add
lock
jle
cmp
ds
sbb
dec
imul
or
xor
fcompl
dec
loope
cmp
bound
lea
sbb
mov
call
fisubrs
dec
jp
pop
sbb
loopne
jbe
or
mov
cltd
xlat
shrb
or
mov
int
mov
cmp
popa
adc
cltd
cmpsb
mull
mov
pop
pop
pushf
dec
sbb
out
cmp
dec
fstps
xchg
out
push
and
fsubrl
lea
jne
test
addr16
lahf
xchg
xchg
enter
xor
repnz
inc
dec
and
sub
movsl
das
nop
or
xlat
je
jae
leave
mov
push
inc
cmp
adc
push
push
ljmp
push
mov
test
inc
fwait
clc
out
ds
pop
mov
testb
pop
push
xor
dec
js
cmpsl
mov
inc
mov
outsb
pop
inc
loopne
jno
ja
push
add
push
mov
jns
push
mov
push
idiv
mov
adc
stos
add
and
testl
adc
leave
ret
jecxz
pop
push
sbb
push
inc
dec
xchg
inc
push
inc
std
and
sub
lods
jge
insl
imul
ja
fcompl
cmp
lcall
jns
loop
mov
push
sub
or
mov
xchg
mov
cwtl
mov
aaa
sbb
sbb
in
push
cmp
mov
lahf
add
in
fidivrs
sbbb
mov
push
mov
pushf
js
test
mov
pushf
int3
je
in
sbb
lahf
inc
mov
push
dec
pop
scas
inc
push
push
dec
xor
sar
cltd
mov
push
mov
cli
outsl
add
gs
add
inc
stos
push
push
pop
pop
test
push
jnp
adcb
dec
jb
inc
sub
xor
mov
or
gs
subb
push
push
fldl
aad
adc
fldcw
jge
pop
hlt
div
sub
lods
or
pusha
and
outsl
lods
push
lret
mov
adc
push
xor
mov
into
pop
push
in
add
push
push
icebp
lcall
inc
repz
je
sbb
jb
fisubs
fiadds
jp
jp
adc
add
jne
jmp
xlat
pop
adc
stos
inc
fisttpll
lret
jp
mov
aad
lret
cmp
and
mov
and
leave
test
push
add
xor
jg
and
pop
mov
loopne
sahf
fadds
add
or
call
fiaddl
mov
lods
out
xchg
rcll
fs
in
push
pop
popa
arpl
dec
or
cs
dec
sarl
and
push
jnp
fsts
mov
pop
dec
loop
movsb
and
das
add
pushf
jbe
fdivs
and
adc
sbb
mov
lcall
in
aas
es
push
cmpsb
out
xlat
popf
sti
jb
mov
pop
mulb
in
sbb
popf
jae
jmp
lret
and
and
jae
xor
loop
dec
mov
pop
xor
ret
cmp
push
test
das
or
mov
sahf
popa
jl
xlat
cmp
int3
mov
xor
es
aam
push
leave
data16
pop
sbb
xchg
and
dec
xchg
les
jmp
test
or
out
ja
mov
adc
aad
push
xor
addb
mov
mov
add
jnp
decl
arpl
sbb
mov
jmp
lahf
jg
adc
pushf
jge
lret
mov
push
cmp
ljmp
les
movsb
rclb
repnz
mov
xor
pop
in
cmpsb
outsl
sbb
ss
fistpll
add
outsl
jl
and
jne
inc
aaa
fisttpll
xlat
dec
orps
jmp
cltd
fildll
cmp
lds
adc
xchg
pop
fincstp
cmpsb
mov
or
rcrb
inc
ror
addb
xchg
and
jecxz
and
mov
stos
rcll
js
lahf
jmp
xchg
sbb
pop
movsl
mov
imul
push
push
cmpl
sti
leave
inc
adc
mov
or
in
aaa
movsb
cmp
stos
mov
lock
pop
xor
jecxz
sub
pop
jnp
in
mov
and
roll
xor
mov
pop
jbe
cli
push
or
or
aad
ret
rcr
sarl
fmuls
test
aas
movsl
insl
adc
and
cmp
mov
mov
push
outsb
mov
popa
outsl
inc
sub
mov
lods
sbb
or
popf
mov
adc
cmpsl
imul
out
dec
out
pop
fdivl
mov
and
fldcw
cld
mov
and
jmp
fwait
push
or
fildl
hlt
loopne
inc
xchg
fcmove
add
nop
and
xor
int
aas
je
pop
ret
std
les
pop
push
repz
cld
loope
dec
stos
jo
or
mov
inc
mov
cwtl
fists
sub
inc
arpl
sbb
insb
idiv
in
rcll
ja
movsb
call
xor
movsb
pop
out
cs
xchg
pop
inc
test
xchg
daa
stos
xchg
xchg
dec
mov
adc
rorb
sbb
das
test
mov
jmp
jae
dec
dec
std
jns
xor
cwtl
js
div
and
push
fs
mov
push
in
mov
out
repnz
nop
sub
jb
cld
mov
cld
cli
loopne
mov
cmpsl
loopne
inc
test
in
jp
shr
adc
aas
daa
xor
fisttpll
roll
mov
movsb
jmp
add
cmp
xchg
xlat
outsl
pop
out
sti
das
shl
scas
jae
aaa
cmp
mov
mov
jae
movw
sti
insl
inc
bound
icebp
inc
pop
push
pushf
jmp
imul
testl
xchg
pop
xlat
scas
or
push
sbb
ljmp
ret
lock
pop
push
inc
dec
cmp
push
lods
test
jge
xchg
fmuls
popa
sub
push
jg
mov
mov
pop
shl
sub
adc
adc
std
xor
repnz
inc
pop
pushf
lret
rorl
inc
or
xchg
cmp
fs
dec
fildl
dec
rcrl
and
dec
andl
divl
dec
sahf
dec
sbb
mov
pop
outsl
xchg
add
cmp
inc
ds
jbe
pop
mov
jg
ret
ret
sub
js
pop
repnz
std
and
mov
adc
adcb
mov
pop
or
inc
insl
jge
push
dec
adc
js
add
das
xchg
jnp
bound
mov
ficoml
pusha
les
fcmovbe
ret
stos
xchg
xchg
cmc
sahf
sbb
fsts
lret
mov
and
xor
rolb
xor
das
jl
mov
cs
mov
sub
cmp
js
pusha
icebp
xchg
test
cmp
bound
rolb
dec
push
jne
das
sbb
mov
cltd
ret
popf
popa
inc
jne
xor
js
lods
dec
mov
sbb
add
xchg
xorl
aam
sub
push
daa
ja
push
push
nop
mov
insb
stc
sahf
jo
sub
std
inc
adc
fcomps
pop
sub
aaa
cmp
mov
xchg
lret
or
test
ds
adc
pop
jno
xchg
push
loop
repz
cmc
jno
loop
cld
mov
je
mov
dec
push
inc
rcl
mov
push
xchg
and
xchg
jbe
movsl
cmc
mov
mov
ret
push
xchg
mov
icebp
call
lock
in
mov
xchg
and
and
insl
sbb
cmp
enter
xor
into
and
mov
bound
inc
sbb
or
xchg
pop
scas
xor
popf
ss
mov
push
notb
mov
mov
fs
and
loope
in
stos
mov
pop
lret
push
fistl
mov
dec
mov
jnp
and
cmp
dec
xchg
bnd
or
ret
out
sarb
test
mov
cli
xorl
flds
xor
sub
pop
cli
js
scas
ss
push
orb
mov
enter
outsb
mov
ljmp
dec
mov
adc
push
adc
push
test
rclb
add
jne
lock
mov
je
ffreep
jge
xor
iret
xor
pop
mov
mov
and
jg
pop
cmp
stc
ljmp
pop
add
mov
movsl
mov
mov
pop
sub
adc
imul
or
es
in
iret
shll
dec
sub
xorps
out
sbb
pop
sahf
jge
mov
pop
or
push
mov
insb
push
cmp
sarb
inc
mov
cld
shlb
cs
repz
xchg
jno
cwtl
pop
xchg
jnp
loopne
loope
pop
sbbb
shlb
cli
out
adc
adc
gs
into
push
dec
rorb
into
dec
xchg
lret
inc
jge
push
mov
stos
or
lock
aam
cmpsb
ljmp
and
xchg
rcll
jle
ja
outsb
push
out
pop
dec
inc
mov
or
mov
fwait
cmpsb
dec
mov
push
pop
adc
dec
or
mov
shrb
inc
in
loopne
mov
mov
jno
or
loop
sbb
leave
add
mov
dec
or
mov
push
add
outsl
cmp
nop
sub
mov
stos
jb
push
js
pop
xor
mov
aas
icebp
jp
ret
adc
leave
push
loop
inc
mov
jge
sbb
mov
cmp
fstpt
sub
shrl
clc
cltd
dec
push
cmp
mov
fildl
or
sahf
add
pop
movsb
leave
push
adc
xor
lcall
fcmovnbe
js
adc
dec
mov
mov
mov
jg
sbb
or
xor
fnstsw
fnsave
mov
test
inc
push
sti
nop
fcompl
pushl
jnp
stos
mov
ret
or
aaa
xchg
mov
or
add
mov
js
mov
lods
push
fistpl
int3
jns
push
jle
mov
dec
pop
out
or
mov
aam
jmp
icebp
push
or
push
add
mov
in
inc
sbb
rcrb
fmuls
pop
cmp
mov
xchg
lahf
sub
aaa
jecxz
into
movsb
fwait
push
dec
pop
jl
xor
xchg
repz
jbe
pop
and
iret
adc
jnp
popa
int3
sub
push
in
cmp
push
add
xor
inc
scas
cmp
sbb
mov
mov
sub
push
cmp
sar
lret
enter
push
imul
into
popa
aam
jb
loop
stos
sarl
or
pop
mov
or
nop
popf
or
pop
stos
out
icebp
pushf
or
aam
xor
in
movsl
and
and
pop
sub
push
sub
mov
popf
jmp
jbe
dec
loopne
sbb
add
sub
cmp
xor
repnz
jecxz
fcompl
inc
add
xchg
gs
jecxz
cmpsl
push
jle
insb
out
pop
add
rcr
mov
and
inc
stos
add
add
pop
dec
mov
inc
daa
xor
mov
ljmp
shl
andl
push
ret
imul
sbb
mov
ljmp
aam
push
mov
pop
adc
jp
pop
dec
and
mov
lods
jo
mov
push
and
add
mov
lea
mov
bnd
loop
inc
sbb
mov
stc
jbe
pop
mov
sbb
jo
movsl
add
es
sbb
loope
add
xor
cmp
cmp
sub
inc
stc
imul
cmc
push
sbbl
dec
jge
sbb
jo
cmp
cmp
adc
pop
cmp
dec
mov
xor
insl
fdivrl
pop
mov
pushf
scas
outsl
mov
rorb
inc
fwait
ds
test
jno
mov
loop
xchg
and
mov
mov
adc
loop
pop
jl
int
stc
jge
cli
aas
subl
gs
dec
enter
mov
dec
repnz
dec
jecxz
cs
popf
pop
cmp
les
rorl
daa
sub
in
outsb
out
cmpsb
jae
adc
data16
sbb
xor
add
jb
pushf
dec
inc
pop
or
or
imul
dec
fst
sub
mov
pop
enter
repz
adc
jmp
xchg
mov
ds
cmpl
das
loope
pop
pushf
repnz
jmp
shrb
test
xlat
fcomps
loope
ret
mov
xor
jmp
add
jb
lods
push
xchg
dec
or
fidivrs
mov
lcall
ret
add
test
repz
and
and
pop
fsubr
mov
loop
push
fs
xor
shrl
xchg
xor
test
pop
jae
mov
leave
mov
sub
jge
jge
and
dec
mov
in
xor
jl
lcall
sbb
rclb
repz
cmp
adc
lcall
imul
cmpsl
shr
and
test
outsb
mov
test
mov
push
lea
lret
iret
inc
inc
ljmp
lods
pop
lea
and
out
jle
sbbl
stos
cmpsb
cmp
add
repnz
test
xor
xchg
arpl
and
loop
shrl
lods
fistpl
xchg
cmp
sbb
lahf
rcrl
dec
xchg
in
dec
mov
loop
popf
rcll
dec
les
ret
es
mov
std
je
rcr
jb
dec
sbb
int3
xchg
fincstp
fwait
outsb
sbb
xor
pop
hlt
fcmovb
aad
stos
mov
je
out
out
mov
lcall
xchg
lea
push
jge
jl
test
inc
mov
cmp
test
ds
cmp
in
and
mov
scas
pusha
push
mov
rolb
push
stos
sub
into
loop
cmpsl
mov
adc
mov
xchg
in
or
mov
sub
test
add
lea
fwait
sub
into
sbb
dec
iret
sub
negl
or
mov
xchg
ret
call
push
repz
xchg
jg
popa
mov
imul
push
test
push
in
jnp
sbbl
mov
outsl
cmp
mov
or
lea
cli
push
adc
add
jmp
add
bound
bound
xchg
mov
ret
data16
js
cmp
xor
push
inc
xchg
push
mov
popa
arpl
jp
insb
shrb
into
xchg
jmp
adc
jb
lret
mov
push
push
pop
xlat
push
fst
lea
inc
xchg
stc
adc
test
pushf
fstl
cmp
add
sbb
repz
out
sbb
sbb
sbb
pop
lods
sbb
mov
lods
push
insl
dec
test
mov
push
or
or
cld
aas
jno
jp
add
inc
inc
orl
dec
sub
inc
mov
mov
xchg
mov
ss
inc
mov
popf
and
push
mov
mov
and
mov
pushf
jmp
es
sub
adc
mov
jmp
push
inc
lret
add
icebp
inc
movsb
jmp
addl
mov
sub
pop
loop
and
insl
adc
push
mov
lds
fwait
mov
es
adcl
mov
xlat
movsl
pop
mov
ret
cmp
ljmp
lods
repz
mov
lods
adc
and
mov
enter
scas
test
pop
repnz
push
stc
clc
add
mov
xchg
xor
dec
pop
adc
sub
add
and
lods
rcll
jno
push
fnstcw
jmp
jns
jl
inc
inc
add
cli
sub
shl
lret
and
mov
mov
or
vpsllq
popa
arpl
mov
mov
sbb
decl
test
sub
das
outsl
leave
pusha
xor
fdivl
dec
test
mov
stos
loop
xor
cmp
adc
sub
in
clc
sti
adc
lock
dec
cmp
jb
pop
jae
clc
fistps
or
mov
and
scas
push
stos
pop
in
adc
jmp
ljmp
std
sti
add
xchg
xor
inc
cmpsb
pop
push
pop
push
mov
push
mov
frstor
call
ret
stc
dec
jno
mov
adc
fldl
xor
or
pop
sbbl
les
pop
mov
xor
sub
leave
fisubrs
lcall
aam
or
dec
sar
ja
push
xchg
push
mov
sbb
mov
inc
jecxz
push
push
ja
mov
mov
inc
scas
sub
mov
out
repnz
lahf
into
inc
cmpsl
jnp
fisttpll
test
jg
cmpsl
sbbb
cmp
insb
es
jg
push
sbb
dec
shll
std
and
int
rcll
mov
jnp
jb
loopne
mov
test
in
inc
sub
xchg
mov
push
stc
test
outsb
imul
mov
sbb
call
fstpl
test
pop
inc
scas
or
lcall
mov
jae
lock
popa
pop
jo
mov
out
mov
rclb
push
cmpsl
sub
loop
cmp
adc
ds
adc
mov
add
sti
ror
xor
lcall
push
dec
lahf
inc
in
inc
loope
adc
sbb
aaa
mov
in
test
test
jne
aaa
lods
mov
mov
sbbl
add
push
in
nopl
mov
jno
outsl
mov
ds
mov
cmp
cmp
imul
cmp
sbb
jo
mov
repnz
push
cmp
push
loope
or
loop
cmc
and
das
sbb
stos
dec
mov
sti
mov
scas
rolb
popf
clc
cmpl
or
enter
push
jl
xchg
in
mov
pushf
ret
and
sub
iret
pusha
adc
lock
in
hlt
mov
mov
int
test
fistl
adc
push
cmp
mov
fnstcw
sbb
scas
ds
addr16
into
rcrl
lcall
add
cmp
bnd
mov
iret
add
mov
movsl
popa
xor
repz
daa
cld
ljmp
jo
int
push
jnp
inc
sbb
test
inc
inc
mov
or
add
idiv
shr
stos
rcrl
or
call
jb
xchg
pop
mov
cld
les
popf
sub
jge
xchg
dec
daa
hlt
test
push
mov
imulb
or
jmp
inc
dec
mov
pop
mov
outsl
lret
push
jb
ss
shlb
dec
insb
lea
push
fdivs
loope
ds
inc
push
add
xor
adc
sti
jmp
mov
pop
cmp
jle
push
out
push
cmp
and
rcrl
xor
mov
dec
sahf
stos
inc
or
add
mov
stc
cmp
or
fstpt
scas
jle
pop
cmp
mov
popa
jne
dec
xor
fldl
shl
rdpmc
flds
cmp
inc
ljmp
test
imul
mov
push
lods
idivl
scas
enter
lahf
inc
pop
jmp
lahf
imul
jg
lret
mov
movsl
ret
ficompl
ja
add
mul
adc
aaa
push
mov
xchg
add
inc
iret
repnz
nop
jnp
sub
mov
mov
std
ds
xor
xchg
lret
stos
icebp
andl
mov
inc
dec
sbb
in
push
lods
pop
xchg
and
push
jae
scas
dec
sahf
in
jo
jp
mov
lret
xchg
push
xorb
popf
lock
stos
sbb
inc
jno
adc
insb
dec
push
lcall
not
ljmp
int
nop
aaa
xchg
mov
xchg
jne
loope
or
xchg
xchg
ljmp
dec
mov
cld
int3
pop
push
push
xlat
in
push
sbb
inc
aad
iret
cmp
mov
xchg
cltd
sub
jp
cltd
loopne
or
sub
sub
loopne
aam
push
and
outsl
popa
mov
jp
aad
jb
and
jl
lods
imul
pop
sub
mov
pushf
mov
cwtl
mov
mov
int
aad
cmp
cmc
cmp
push
push
gs
add
mov
pusha
push
add
adc
xor
sbb
pop
add
xchg
pushf
sarl
xchg
rorl
dec
popf
adc
jae
test
stos
aaa
and
mov
sahf
add
mov
pop
sbbl
sub
xor
inc
repz
insl
imul
mov
dec
std
orb
mov
dec
aam
out
cltd
xor
loopne
movlps
rclb
xchg
int3
rcrl
mov
addps
imul
mov
out
lock
push
adc
daa
loopne
xlat
lret
dec
sarb
xchg
cwtl
test
or
ret
or
sub
cmp
cmp
fs
or
mov
xchg
inc
dec
cltd
shl
das
dec
in
mov
mov
push
xor
push
jno
cld
sub
ljmp
lods
adc
add
mov
movsb
in
test
inc
xchg
loope
ds
add
xor
cmp
lahf
and
sub
ret
adc
mov
in
sahf
nop
test
and
test
dec
or
mov
adc
imul
in
jns
pop
push
movsb
ja
outsl
out
cld
stos
loope
loop
shlb
xorb
mov
mov
pop
jae
push
push
incl
inc
add
call
mov
cs
jbe
push
mov
jmp
rclb
jbe
or
xor
pop
int3
push
xor
xor
push
push
test
add
mov
insb
daa
or
fisubs
out
push
nop
stos
and
or
std
or
shlw
pop
xor
iret
push
arpl
mov
adc
and
lods
cmp
cld
mov
in
frstor
inc
stos
out
movsl
mov
scas
push
push
cmpsb
sbbl
push
and
add
pop
lea
pop
divl
enter
mov
inc
pop
mov
xchg
adc
fs
pusha
push
ss
test
mov
in
mov
mov
inc
hlt
pop
inc
mov
push
or
jne
fucomip
push
mov
insb
outsl
push
repnz
lods
cli
dec
push
or
and
lods
sar
push
iret
mov
sub
xor
xchg
fnstcw
jmp
inc
push
xor
in
mov
aad
jl
sbb
daa
int3
scas
aam
xor
sbbb
divl
repnz
jle
and
mov
mov
or
xor
loop
in
or
mov
sbb
sub
jecxz
mov
cmp
or
push
cmp
cmp
shll
pop
pop
popa
jle
popa
jmp
jl
cmp
mov
xchg
inc
jl
sbb
lea
mov
jno
rcrb
dec
jnp
pop
xor
push
mov
sub
mov
loop
or
xor
cmpsl
cli
xor
push
sbbb
outsb
mov
test
jbe
call
pop
lds
imul
xchg
jnp
cld
ret
data16
mov
sarl
or
cmp
cld
sub
pop
mov
jne
cmp
xchg
pop
les
push
mov
lret
pop
out
loope
push
fs
fildl
or
jge
jge
cmp
inc
jno
pushf
xor
lret
int
add
stos
sahf
and
aad
add
insl
scas
int
pop
mov
jmp
push
cmpsl
push
xor
cmp
shrl
mov
ss
mov
in
fwait
mov
jne
rcll
cltd
andl
mov
fdivl
mov
fs
mov
idivl
test
cmp
rorb
call
xor
popfw
scas
or
push
jo
inc
loope
shll
out
lret
or
jae
sub
fsubrl
xchg
loopne
aaa
xor
xchg
icebp
fdivl
pop
jmp
and
pop
sub
sbb
push
xchg
xchg
dec
outsl
pop
push
jp
xchg
aam
loopne
jno
mov
stos
jle
aas
xor
das
shl
push
sub
pop
in
into
xor
insb
add
jae
mov
inc
jmp
mov
xor
mov
fistpl
decl
xchg
cmpb
sti
sub
add
mov
iret
sub
jno
push
mov
dec
iret
cmpl
add
jne
icebp
add
mov
fsubr
sub
mov
bound
arpl
xor
jae
ljmp
neg
mov
cmp
jns
ds
push
mov
pusha
lds
sub
js
aad
pop
mov
mov
jp
mov
lahf
sub
xor
sbb
lret
mov
cmc
mov
lods
jp
outsb
pushf
pop
sbb
clc
icebp
hlt
inc
movsb
pop
xorb
cmc
mov
cld
sub
outsb
fwait
aaa
sub
jae
inc
aam
hlt
in
les
push
int3
push
inc
or
pushf
or
mov
fadds
mov
dec
jmp
pop
xor
adc
and
adc
push
push
jecxz
nop
mov
ja
mov
cmpsb
dec
loope
repz
out
mov
inc
cmp
dec
decb
dec
xchg
cmp
add
outsl
inc
addb
mov
add
sub
cmpsb
pop
gs
sbb
add
push
adc
mov
mov
jae
repnz
mov
jmp
cld
xchg
pop
nop
pop
popa
cmp
sbb
scas
sbb
mov
call
out
out
shll
or
push
jl
andb
fdivrl
jle
out
test
pop
mov
loop
clc
mov
les
lcall
mov
lret
sub
push
xlat
add
mov
fcmovnu
mov
adc
iret
loop
inc
inc
mov
mov
cmp
mov
xor
repnz
pusha
das
out
dec
mov
sub
push
jp
jno
lods
or
ret
adc
push
xor
xor
jbe
add
jae
xchg
jno
shrb
out
bound
mov
cmp
repnz
into
rcll
fiadds
fwait
je
xor
les
mov
xor
xor
int
das
sbb
or
jno
enter
je
clc
fs
and
pop
pop
cmpsb
test
sbb
arpl
icebp
xor
hlt
arpl
lds
sbb
aad
cmpsl
stc
jo
push
fsubs
fstl
scas
xor
adc
sub
sbb
jbe
dec
les
loope,pt
add
mov
es
or
ss
ficompl
add
sub
adc
ficoml
push
ficompl
add
pop
imul
fsts
xor
mov
push
loopne
sbb
xor
pop
fsubs
lea
stos
jnp
cs
cltd
ljmp
test
pop
jg
idivl
insl
mov
ret
mov
idivb
sub
and
or
and
pop
xchg
outsl
jle
sbb
xor
and
rol
ds
adc
cmpb
pop
dec
call
lds
jge
sbb
cs
mov
lret
or
aad
call
jp
out
and
or
mov
mov
clc
movsb
xchg
mov
sti
inc
inc
xchg
mov
add
xchg
xchg
out
inc
mov
xchg
add
mov
xor
out
inc
fdivp
pusha
mov
sbb
popa
cmp
sbb
pushfw
popa
call
sub
es
lods
inc
mov
test
pop
xor
cmp
pop
fidivl
nop
iret
xor
les
in
ret
dec
cmc
ja
lret
mov
pop
ds
imul
xor
or
add
ss
or
inc
inc
pop
jp
xchg
cmp
dec
stc
pop
xorl
and
mov
lods
add
add
rcrl
push
out
int3
or
loop
and
jg
stc
cmp
les
int3
nop
xchg
xchg
fistps
jge
icebp
movb
jg
fisubs
pop
xor
pop
dec
mov
mov
cli
fisttpl
sbb
xchg
inc
adc
mov
adc
adc
push
dec
out
in
pop
outsl
add
push
mov
sub
pop
push
into
push
adc
movsb
fiaddl
icebp
adc
aam
fwait
psubb
loopne
mov
mov
push
loop
pushf
mov
mov
push
mov
pop
pop
movsl
daa
stos
orl
sbb
pop
add
sbb
aaa
lret
incb
push
or
loopne
jmp
jne
mov
bound
movsl
pop
add
notb
xchg
shrb
and
in
lahf
sahf
out
lods
add
push
sbb
cmpsl
in
push
decb
out
inc
popf
adc
mov
jecxz
xor
jl
lcall
arpl
scas
gs
addl
lods
mov
jno
int
clc
adc
scas
cmpsl
xchg
dec
das
pop
cmpsl
xchg
xchg
loop
add
stos
mov
fs
loop
stos
dec
push
leave
mov
cmp
std
sbb
test
jmp
lcall
inc
jmp
out
cmpb
popf
insl
icebp
leave
inc
movsl
xor
fidivs
adc
movsl
repz
rcr
lcall
fwait
bts
jno
add
mov
js
xchg
and
and
aad
jge
outsb
sbb
mov
add
cmp
xchg
push
ficoms
insb
cmp
rorb
add
insb
sbb
cld
dec
idivb
cmp
sub
push
insb
mov
mov
jp
enter
test
jne
jmp
adc
ret
push
sub
sbb
hlt
ds
loope
enter
xchg
cmpsl
aam
sub
cli
popf
mov
sahf
ret
cltd
data16
or
and
arpl
pop
adc
pop
push
aad
adc
pop
mov
addl
out
je
cmp
xor
jge
insl
jnp
or
bound
ret
in
pop
xor
add
inc
inc
aaa
imull
stos
jnp
lret
mov
dec
lahf
jge
test
xchg
mov
mov
bound
cltd
clc
in
add
orb
fnstsw
fstps
leave
add
cltd
addr16
jl
push
xchg
sbb
mov
out
bound
cmpsb
and
cmp
mov
shll
movsb
outsl
pop
sub
cld
or
fdivl
jnp
mov
or
ret
popf
cmp
push
xchg
xchg
push
out
mov
xchg
mov
cltd
andb
mov
add
mulb
fcomps
stc
cs
insb
adc
fucomi
scas
inc
lods
insb
adc
das
pusha
add
sbb
jne
scas
inc
xor
shl
pusha
fldl
lock
push
dec
inc
pusha
rcl
nop
and
sub
sbb
cwtl
sbb
je
xchg
add
mov
jnp
lea
pop
dec
cmpsb
mov
xchg
outsl
lds
mov
mov
jne
repnz
xor
lcall
push
sub
mov
popa
mov
xchg
sub
lea
jbe
les
pop
mov
pop
icebp
mov
ljmp
outsl
ret
jne
adc
inc
xor
jmp
fwait
stos
add
xchg
jecxz
or
dec
or
sahf
gs
testb
sbb
push
jae
dec
cs
add
pop
rorb
add
and
jbe
cwtl
mov
xchg
insl
repz
call
ja
or
mov
and
sbb
ret
sbb
push
fidivrl
lret
ss
xchg
cmpsb
xchg
xlat
std
stos
or
inc
push
xor
bound
movsb
sbb
add
jmp
sbb
and
push
rcrb
jle
jle
fdivrs
pop
aas
adc
sbb
testl
xchg
xchg
cld
or
jae
dec
dec
mov
push
cs
adc
imul
cs
pop
inc
outsl
dec
loope
mov
inc
jnp
mov
popl
add
stos
mov
cmp
andl
inc
or
and
jb
js
jg
mov
sub
sub
or
in
xor
and
out
mov
clc
mov
pusha
lods
add
or
push
xchg
notl
or
push
xchg
in
mov
dec
fdivp
addr16
imull
and
dec
cwtl
dec
orb
adc
mov
sbb
cmc
jg
adc
insb
vdivpd
pop
and
cmp
push
and
orl
mov
xor
inc
jbe
test
jbe
insb
div
lret
call
mov
mov
mov
popf
pop
sahf
sbb
cmp
les
shr
psrld
stos
cmc
sbb
fmuls
xor
xor
pushf
je
adc
jg
out
push
cmpsl
adc
add
call
add
jmp
cmp
cmp
out
sub
or
mov
pop
mov
push
cld
shrb
sub
fsubs
or
push
jl
push
dec
mov
lcall
mov
push
je
int
cmpb
or
push
stos
into
jno
push
pop
std
test
fcoms
jl
push
pop
ljmp
or
jb
das
inc
adc
cwtl
push
movsb
jb
push
out
adc
xchg
in
out
or
iret
xor
sub
aaa
sub
out
lea
movsl
xor
and
sbb
idivl
daa
jne
add
mov
sbb
fwait
push
imul
mov
dec
rolb
jnp
cltd
cli
xchg
cmp
sti
sub
mov
fnstenv
and
cmp
jae
xchg
push
jae
adc
stos
or
fwait
outsb
je
jl
ret
lcall
inc
mov
jg
inc
out
mov
cmp
xor
ds
or
xchg
xor
mov
xchg
mov
popf
xchg
cld
ljmp
add
xor
or
cmpsb
out
loope
or
ljmp
ljmp
fildll
pop
enter
ficomps
dec
mov
sub
jae
je
and
fstl
imul
xor
or
hlt
daa
fistpl
sub
sbb
icebp
ljmp
push
gs
rolb
mov
jb
addr16
jle
scas
sbb
pop
cs
les
fsubs
jne
mov
aas
inc
lods
push
cs
rcrl
pop
push
divb
sbb
push
and
dec
cmpl
jmp
les
pop
ja
sbb
lods
or
and
pop
lahf
lret
adc
mov
dec
repnz
lods
push
cli
into
neg
jns
pop
lcall
inc
cmp
in
push
and
dec
cmp
pop
jbe
push
test
clc
pop
lods
out
xlat
push
mov
and
inc
push
in
jb
sub
mov
dec
pop
pusha
mov
lods
jg
arpl
xor
out
insl
in
sbb
dec
addr16
std
inc
sbb
mov
and
test
cmp
inc
ljmp
jb
je
adc
ret
push
xor
fst
int3
sbbl
and
dec
out
mov
pop
push
das
int
dec
or
das
ljmp
adc
mov
fnstsw
mov
or
ja
cs
or
adc
fldenv
es
rorl
movsb
subb
pop
nop
in
imul
orb
les
outsb
nop
repz
dec
or
popa
sti
les
testl
mov
ds
jne
jae
mov
pushf
or
das
es
cwtl
cli
fisubl
mov
aas
lcall
mov
push
and
cmc
and
adc
xchg
test
push
pop
movsl
cltd
rclb
test
out
rorl
sahf
inc
mov
loope
pop
in
add
js
btc
sbb
data16
add
lds
jle
sbb
mov
or
pop
inc
int
int
mov
fdivs
movsb
mov
mov
pop
in
imul
cli
cmpsl
and
stc
jmp
push
mov
cmpsl
bound
sbb
shlb
mov
and
pop
lret
mov
or
adc
mov
push
jbe
in
shrb
sub
pop
or
es
xor
push
pop
adc
jl
scas
es
add
push
dec
popf
pop
movsb
push
push
push
rorl
cmp
fidivl
xor
lahf
mov
dec
lahf
daa
sub
xchg
mov
inc
jmp
lods
inc
out
in
sub
scas
sbb
outsl
mov
push
sbb
inc
mov
mov
xchg
int
mov
inc
jge
int
into
or
rep
jo
lods
ja
sub
xchg
push
and
jno
sti
test
jmp
iret
loopne
add
jmp
and
and
rol
sarl
insl
jle,pn
out
stos
paddsb
sub
or
dec
out
sbb
lods
leave
xchg
push
cli
push
jge
aaa
test
jl
out
cmc
scas
mov
mov
push
and
pop
xchg
push
fimull
add
push
sbbb
in
loop
mov
cwtl
movsl
xchg
leave
test
sahf
pop
jle
fs
pop
jns
xchg
jg
fadds
sbb
fbld
jo
adc
pop
lock
mov
ljmp
mov
mov
arpl
cmp
outsb
or
jne
pop
pop
sub
mov
dec
lret
popf
pop
xchg
mov
enter
adc
inc
cld
inc
adc
inc
sub
imul
cmc
sbb
idivb
pop
adc
lret
into
xchg
mov
lahf
cmp
in
es
xchg
jp
dec
push
hlt
lret
xchg
fildl
cltd
pop
jle
subl
push
dec
xor
inc
test
sub
rorl
or
lds
fldl
add
int3
fwait
ljmp
sub
fisubrl
sti
pusha
cmp
sub
test
pop
jo
cs
mov
scas
repz
and
lea
cltd
and
xchg
cli
fmulp
out
jp
ss
daa
jbe
adc
movsb
pop
mov
jl
push
negb
mov
push
jno
xor
mov
jl
iret
sbb
fldl
xchg
inc
jae
sti
mov
push
sbb
js
stc
xor
call
push
jle
jnp
movsl
pop
fimuls
fsubs
sub
jnp
andb
sbb
jmp
mov
sub
or
repnz
cwtl
xchg
lea
sub
cmp
mov
inc
addr16
inc
nop
xchg
and
shll
aaa
mov
arpl
xor
mov
adc
or
push
xor
stos
dec
push
in
inc
outsb
mov
test
xor
test
nop
xorb
stos
je
mov
stos
and
mov
das
pop
aas
repnz
ror
inc
cltd
ret
leave
xlat
xchg
cmp
mov
sbbl
clc
fwait
sub
xor
imul
and
jae
or
lods
mov
sbb
sbb
lret
xchg
mull
dec
neg
mov
das
or
and
add
mov
test
and
test
cmpsl
andb
or
mov
cmp
cwtl
pusha
jns
mov
pop
add
popa
xor
cmpsl
imul
mov
testb
jno
outsl
jp
xchg
enter
sbb
pushf
cmp
xorb
xchg
mov
or
arpl
mov
aaa
lods
hlt
in
jp
mov
inc
in
pop
icebp
lahf
repnz
stc
mov
push
loopne
xor
mov
jo
sub
in
inc
iret
push
lret
in
and
pop
ss
cld
pop
sti
inc
mov
pop
ret
push
xchg
mov
in
mov
cmp
call
insb
or
insb
test
cmp
loopne
xor
fabs
inc
dec
jo
cmp
data16
lahf
jle
not
loop
mov
jo
pop
fs
add
pushf
loopne
imul
shr
insb
cs
inc
pop
imul
aad
hlt
mov
xchg
cld
out
out
and
fdiv
cmp
stos
mov
jb
add
adc
sbb
dec
aad
sarl
insl
int
inc
sarl
or
add
xlat
dec
sbb
out
sub
leave
and
inc
push
mov
loopne
sub
sbb
pusha
push
cs
inc
mov
xor
gs
popa
cs
fidivrs
or
jae
push
pop
dec
pop
stc
xchg
mov
popa
sar
or
cmpsl
xchg
or
rolb
ficoml
inc
cmpsl
push
clc
push
mov
dec
shl
and
cmp
in
leave
jmp
repz
bound
fbld
stc
push
mov
xor
or
xor
inc
mov
es
mov
das
mov
and
aam
loop
mov
mov
xchg
sub
pop
repnz
call
cwtl
sub
and
pop
jmp
dec
int3
inc
cmp
stos
jecxz
and
push
out
sub
xchg
or
pushf
dec
push
movsl
shlb
dec
cmpsb
or
cmp
fldt
dec
adc
stc
rorb
movsb
stos
sbb
pop
inc
mov
cmp
inc
sbb
ss
adc
sar
mov
xor
jb
cmpsl
loopne
aaa
clc
sti
jbe
lahf
arpl
pop
xchg
jmp
subl
mov
cmpsl
adcl
sub
mov
lock
hlt
mov
and
sti
repnz
pop
dec
loope
and
sbb
rol
xor
jae
xor
and
cwtl
cmc
and
xor
stos
outsb
lahf
add
jae
stc
in
pop
mov
push
add
xchg
xchg
pop
mov
in
cli
cmp
adc
xor
and
cmp
aam
data16
xchg
xor
mov
fldlg2
into
pop
dec
cmc
mov
les
repnz
mov
cli
jl
pop
repz
push
stos
mov
mov
jl
lret
inc
rorb
bound
fcmovu
aas
notb
in
or
or
pop
jl
mov
gs
call
xchg
jl
dec
xchg
dec
js
mov
into
or
int3
jmp
jp
stos
ss
out
sub
push
je
int3
pop
dec
xchg
and
push
out
outsl
addr16
jo
es
lret
and
mov
lock
cmpsb
sbb
dec
sub
jno
arpl
jne
and
add
and
mov
jae
rclb
xchg
ret
mov
jle
mov
pop
enter
xor
mov
shl
mov
mov
fimuls
clc
xchg
dec
push
test
jbe
push
jle
adc
cmp
lret
add
icebp
dec
jns
mov
push
stos
cmp
push
hlt
adc
cltd
sub
push
rcll
fcomps
pop
arpl
fiaddl
sub
mov
inc
pop
jae
clc
fbld
outsl
jp
xchg
clc
xor
push
mov
xchg
xchg
jbe
jae
es
and
cwtl
push
ret
or
popf
jnp
sarl
hlt
push
imul
sub
mov
inc
xor
add
arpl
jge
cmp
push
mov
mov
xor
adc
add
inc
push
pusha
lea
jno
mov
push
insb
adc
xchg
push
xorl
ds
scas
aad
neg
aam
xor
insb
adc
ljmp
push
sub
cmp
scas
lcall
aas
sub
cmc
cmp
cmpsb
push
lock
outsl
adc
xor
and
minps
jecxz
fsubrl
iret
and
mov
int3
add
jae
add
push
movb
icebp
fwait
jmp
repnz
push
inc
in
and
xchg
xchg
sub
cli
je
iret
cltd
cmp
mov
fwait
and
mov
je
sahf
stos
loop
movsb
jl
inc
mov
sbb
xchg
mov
adc
xchg
pushf
mov
mov
das
or
enter
faddl
shl
out
mov
sbb
sub
imul
in
test
mov
enter
cwtl
movsl
es
clc
cli
mov
xchg
inc
repnz
out
push
adc
cmp
arpl
pop
inc
roll
mov
cmp
jbe
sub
xor
xchg
xchg
pop
or
add
iret
sbb
cmp
cmpb
movsl
dec
adc
test
xlat
repz
jne
popf
lods
testl
mov
mov
mov
testl
test
mov
mov
pop
in
mov
mov
mov
pushf
out
mov
outsb
push
xchg
push
jecxz
rcll
xchg
test
outsb
data16
pop
sahf
mov
aaa
push
in
push
stos
xor
aaa
fnstcw
bnd
dec
in
data16
aad
dec
push
cmpsl
aaa
or
ljmp
mov
jns
push
cmp
mov
ss
scas
jmp
nop
mov
subl
sub
nop
cmc
scas
fdivrs
mov
or
sbb
pop
insb
fdivl
fisubrs
pusha
loop
popa
xchg
gs
inc
popa
fmul
inc
outsb
mov
ss
push
push
js
inc
or
push
dec
xor
faddl
adc
xchg
cli
aas
jbe
inc
cld
test
push
sub
shlb
sub
pusha
test
adc
dec
push
sub
or
sti
mov
out
push
mov
cmpsl
xor
mov
nop
and
jmp
adc
cwtl
mov
fisubl
xchg
jge
cltd
mov
test
xchg
sbb
loop
mov
fidivrs
fistps
push
arpl
jl
andl
roll
xchg
and
jnp
ds
or
dec
adc
mov
push
jmp
mov
sbb
repnz
fdiv
ds
jecxz
mov
ja
xchg
je,pn
jmp
mov
mov
cmp
inc
adc
push
or
lret
mov
mov
in
jnp
mov
insl
mov
stos
iret
jne
dec
aas
or
pop
pusha
or
aas
or
sti
mov
mov
xor
sbb
scas
dec
lret
push
jbe
cmc
cltd
outsl
jbe
jo
imul
push
push
loop
add
out
dec
add
movsb
dec
jo
cs
fwait
push
pop
pushf
xor
imul
xchg
icebp
jmp
lret
jmp
int3
cmp
and
ret
cmp
xlat
xor
inc
cmp
mov
sub
fisttpl
in
dec
or
rolb
imull
xor
int3
aam
push
cli
repnz
push
adc
outsb
xchg
popl
inc
sbb
mov
test
in
pop
imull
dec
cmp
mov
movsb
dec
or
push
fucomip
sub
mov
pop
push
cmp
outsl
adc
dec
and
inc
nop
cli
ljmp
fdivrs
stc
in
sub
inc
and
push
jge
pop
dec
dec
cmp
and
cs
mov
cltd
dec
fisttpll
cltd
jo
stos
mov
int3
xchg
pop
enter
pushf
xchg
mov
repz
inc
or
add
loop
ret
icebp
test
outsl
ljmp
loopne
and
in
mov
in
inc
mov
sbb
pop
jo
pop
movsl
ljmp
xchg
pop
cmpsl
ret
jecxz
mov
or
fwait
sub
push
add
add
sub
pop
sarb
pushw
ret
shlb
mov
jae
lods
sub
sub
xor
push
cld
jae
and
push
andl
stos
xchg
lahf
in
popa
inc
or
pop
inc
mov
ret
inc
mov
rcrb
imul
sub
or
pop
and
test
out
mov
cltd
jp
dec
hlt
popf
dec
or
imul
xchg
dec
dec
xchg
faddl
fstps
leave
adcl
adc
and
icebp
mov
fcomps
subb
call
stc
dec
push
es
out
mov
imul
jl
pop
repz
jb
ljmp
lret
movsl
imul
pop
aad
push
jbe
movsl
sub
mov
mov
stos
lods
pop
lahf
iret
cld
ficoms
sub
bound
xor
xor
jge
cmp
mov
subl
rcrl
add
pop
add
scas
in
shrl
rcll
mov
jle
mov
or
xor
aad
sub
stc
xchg
fs
mov
inc
sbb
jb
mov
lret
or
and
pop
cmpsb
stos
fldl
into
jmp
aam
jns
pop
pop
stos
lock
loope
mov
lret
add
lcall
mov
mov
push
adc
outsb
mov
push
jae
dec
dec
cmpsl
jecxz
hlt
mov
add
xchg
aam
into
add
jp
mov
shl
test
cmp
push
xor
push
push
nop
fs
mov
push
mulb
pop
cltd
pop
add
repnz
loop
mov
in
pop
mov
adc
mov
adc
cld
push
mov
je
test
inc
subb
add
jle
mov
orb
ds
gs
pop
and
cmp
je
jns
sub
inc
loopne
xchg
xchg
sarl
out
cltd
sub
pop
loope
out
push
jnp
jle
inc
sub
scas
jmp
add
jno
xchg
iret
inc
dec
and
add
loope
pusha
fs
sub
sub
xor
loope
repnz
inc
movsl
jo
add
mov
aam
dec
sub
fld
xor
inc
jecxz
ja
inc
and
sbb
mov
pop
xchg
dec
mov
and
cmpsl
shl
push
and
jecxz
jbe
mov
dec
fwait
iret
sbb
xor
aas
shrb
mov
pop
add
xor
pop
and
repz
add
push
add
nop
cltd
inc
add
jnp
lods
loope
sbb
adc
pop
sub
into
in
pushf
movb
imul
insl
adc
or
xchg
pop
add
jge
icebp
in
gs
inc
and
repnz
xor
test
push
mov
xchg
icebp
cmp
inc
movsb
clc
inc
pop
jo
add
cltd
out
js
repz
hlt
lret
ficomps
les
adc
sub
sub
adc
data16
or
in
stos
and
movntps
sub
loop
jmp
repz
adc
and
sti
lret
pop
adc
lret
out
leave
icebp
cld
xorps
dec
decl
shrl
movsl
repnz
imul
jge
xchg
cmc
ret
enter
pushl
aam
jl
shl
jbe
imul
repz
inc
and
pop
dec
cwtl
fstpl
js
cmpsb
xchg
mov
and
stos
inc
nop
aaa
insb
aad
fistps
inc
popf
jae,pn
push
dec
pop
push
popa
push
test
mov
ret
mov
fs
and
mov
repnz
enter
mov
stos
test
and
andl
nop
mov
repnz
test
jmp
int
mov
dec
or
test
out
dec
cld
aam
and
rclb
jg
hlt
shrl
ret
fidivrl
and
xchg
push
stos
jmp
mov
add
imul
or
xchg
pop
mov
stos
into
and
outsl
adc
pop
jp
mov
inc
mov
mov
ja
fs
mov
cmp
test
jnp
ds
sbb
xor
mov
ret
arpl
dec
int
iret
push
fcomps
cs
cmp
add
cwtl
sub
test
push
ja
jno
popa
sub
imul
mov
imul
cmpb
dec
add
int3
cmp
int
lret
and
inc
push
mov
push
add
mov
lods
in
mov
adc
imul
mov
mov
cmpsb
adc
lea
cli
jecxz
pop
cld
jle
fnsave
dec
jl
mov
test
jne
mov
push
cmp
popa
es
fisubrs
daa
dec
xor
testl
dec
outsb
stc
scas
jae
pop
sti
les
push
and
add
outsb
or
punpckhbw
imul
cmpsb
mov
sub
lock
inc
ret
xchg
test
dec
mov
ss
push
imul
jge
stos
xor
ljmp
sub
add
cmp
and
inc
mov
test
xor
leave
ret
and
movsb
aad
sub
and
inc
mov
or
xor
mov
daa
arpl
or
mov
idiv
sub
mov
jne
daa
es
dec
cmc
add
xchg
sub
ja
push
xchg
fsubl
or
mov
lods
dec
rcr
cmp
xor
loop
pop
lods
xor
sbb
push
cmp
dec
sti
cmpsb
ja
xor
sbb
mov
ret
push
outsb
push
xchg
xchg
cld
aam
in
xchg
pop
mov
out
mov
les
sub
aaa
mov
lret
mov
aaa
adc
xorb
xchg
sbb
ss
loop
dec
jmp
cmpsb
sti
dec
scas
sarb
push
dec
jo
adc
push
jne
out
push
add
mov
repnz
int3
cmp
xor
scas
cs
dec
jle
sbbl
xor
xchg
dec
shrl
pop
into
jb
in
jbe
cmp
outsb
aad
cmp
add
rclb
aas
mov
and
and
and
in
outsl
jg
mov
insb
cld
outsl
xchg
add
dec
in
push
xchg
mov
ret
push
in
add
sbb
mov
adc
xchg
mov
std
ret
or
pop
push
inc
and
xor
adc
cltd
rol
cmp
iret
mov
inc
inc
mov
sub
inc
hlt
inc
inc
push
cmp
sub
inc
fucomp
inc
test
popa
fimull
leave
arpl
nop
xor
scas
pop
and
cmc
leave
movsl
xchg
shrb
sbb
fmulp
inc
sub
sbb
jp
fwait
rclb
jns
sbb
adc
dec
mov
adc
sub
out
mov
repnz
inc
dec
fldt
cmp
test
pop
ss
ds
repnz
dec
mov
and
pusha
scas
adc
dec
cmp
or
cmc
inc
push
push
jle
inc
lret
repz
data16
inc
shrb
push
mov
jecxz
push
dec
push
cwtl
dec
scas
call
dec
pop
les
aam
and
daa
adc
inc
out
stc
out
les
out
fisubrl
icebp
xor
or
or
mov
jle
mov
leave
mov
js
cmp
insb
lret
aad
imul
lahf
adc
pop
mov
negb
sbb
xchg
out
pusha
xlat
imul
adc
pop
dec
test
lods
and
jmp
outsl
mov
movsl
mov
xchg
rol
pop
hlt
cmpsl
dec
sub
dec
push
mov
dec
or
or
repz
jecxz
insb
push
and
adcb
adc
stos
adcl
ja
popf
sbb
scas
mov
ret
daa
push
pop
pop
lods
mov
inc
xchg
popa
cmp
push
or
jno
insb
cmp
sti
xor
ficoml
out
inc
fidivrs
int
or
cmp
xor
rcl
inc
gs
mov
and
jne
jp
adc
scas
push
jns
xorl
inc
lods
pop
jo
and
xor
sbb
jo
mov
and
sbb
mov
inc
fldenv
add
jl
dec
mov
lret
addb
mov
and
cmp
cmp
pop
mov
pushf
inc
decl
int
dec
fdivrl
or
aam
xchg
dec
sub
out
lods
pop
out
les
js
jae
dec
push
data16
ja
add
mov
sahf
lret
lods
jne
xchg
test
mov
outsb
add
ret
ljmp
push
mov
dec
and
or
sub
jb
repnz
cmc
and
fucomi
sbb
in
fstpt
adc
fbld
jge
dec
mov
mov
stos
add
or
subb
mov
cli
pop
test
outsl
insl
adc
rcrl
jns
in
lods
or
imul
cld
pop
sbb
out
cld
fistpl
inc
push
rorb
es
xor
xchg
mov
mov
push
imul
idivl
fildl
sub
dec
mov
inc
xchg
add
test
ljmp
push
ret
inc
adc
dec
arpl
incl
in
test
pushf
pop
mov
and
fdivp
imul
and
mov
add
lcall
add
push
stc
add
xchg
or
sbb
aad
jae
fwait
mov
push
sar
jge
loop
cmp
in
fcmovbe
xor
and
cmp
inc
add
jp
jae
pop
xchg
loop
out
dec
lahf
sub
aam
jl
push
jne
sti
and
mov
adc
cwtl
scas
push
xor
inc
jmp
lods
mov
negl
stc
pusha
pusha
xchg
sti
arpl
push
dec
mov
add
push
loope
sbb
cmc
sbb
iret
jle
pop
cmpsl
fistpll
cmp
es
ljmp
xchg
aad
lcall
mov
outsb
into
inc
bound
lods
js
push
dec
stc
mov
outsl
sbb
inc
add
mov
int
sbb
pop
ret
dec
mov
push
mov
icebp
inc
fidivs
dec
lahf
cmp
mov
pop
fcompl
rolb
pop
mov
aad
das
mov
imul
mov
mov
lds
movsl
or
in
lods
repnz
adc
dec
sub
out
jae
out
negl
popf
insb
cmpsb
scas
jo
push
rorb
mov
mov
jmp
pop
mov
js
pop
pop
shlb
jmp
sub
jne
addr16
fstps
hlt
stos
mov
inc
sti
movsb
test
lock
cli
jmp
or
aas
mov
push
cmp
rol
fwait
rorb
hlt
sbb
nop
dec
mov
cmp
cmpsb
fstl
push
iret
lahf
movsl
cmc
inc
lods
or
decb
gs
mov
inc
ss
rorl
rorl
mov
cmp
jl
and
lahf
push
jg
sahf
pop
xor
mov
sub
push
inc
mov
add
ret
loope
les
and
push
push
aaa
das
cmp
and
pop
shrl
out
sub
pop
mov
fcom
sahf
mov
mov
sub
out
sbb
pop
sbb
lret
mov
aaa
mov
divl
mov
mov
jns
mov
aaa
std
cmp
lret
dec
sub
scas
rcrl
push
or
cwtl
jae
sub
sti
mov
and
jo
mov
imulb
nop
int
pop
lds
xorb
inc
xchg
adc
pushw
jne
xor
sbb
fwait
pop
cli
and
inc
je
out
lret
push
mov
inc
out
nop
mov
or
jp
pop
rcl
arpl
into
sbb
xor
sub
cmp
out
jecxz
daa
dec
and
ret
push
mov
push
clc
push
imul
pushf
dec
xor
mov
pop
test
or
addr16
adc
xchg
cmc
movsb
pop
imul
sbb
movsb
cli
adc
mov
sbb
sti
push
or
sub
icebp
cmp
ret
xchg
xlat
mulb
sub
iret
push
xchg
dec
jge
adc
shlb
orl
adc
dec
sub
sub
sub
imul
mov
dec
xor
mov
jge
add
testb
hlt
mov
imul
iret
push
xlat
push
lods
shlb
dec
cs
std
and
iret
jae
in
les
pop
lret
test
dec
repnz
decl
popf
push
and
lret
fnstenv
stos
cwtl
outsb
xchg
std
loope
ret
lods
icebp
mov
jge
and
lret
mov
ds
pushf
pop
mov
jecxz
aaa
sub
dec
out
xchg
ffreep
call
popf
fdivrl
cli
lock
out
daa
add
sbb
cltd
lds
aam
lcall
mov
push
xor
push
mov
xchg
jne
jnp
icebp
inc
sahf
mov
jae
ficoml
adc
std
sub
lret
and
shll
sub
mov
out
adc
rcrl
rcrb
aad
pop
movsl
and
ret
mov
cld
xor
mov
lahf
pop
jno
pop
lods
mov
mov
into
sbb
lods
mov
adc
xor
cmc
ret
sbb
fldcw
fsubs
xlat
push
add
lea
std
xchg
sub
pushf
cmpsl
addr16
fistps
enter
cmp
cmpsl
int3
push
sarl
push
je
cmp
cs
mov
xchg
std
dec
push
jns
popa
add
xchg
push
shll
mov
adc
into
xchg
jmp
lea
imul
rcrl
nop
push
or
sub
dec
pop
mov
xchg
push
xor
aam
jg
dec
cmp
loop
insb
add
mov
sarl
xchg
jg
loop
jb
mov
movsb
das
dec
addr16
mov
dec
cld
fsubs
adc
add
adc
ret
add
daa
nop
inc
dec
shlb
or
mov
push
push
fsts
pop
aas
ds
loopne
cmpsb
xor
sahf
xchg
sub
enter
and
aas
cmp
repnz
or
fimull
pop
testl
daa
hlt
ds
out
and
cmc
mov
push
xor
push
fists
adc
add
mov
push
vpmacssdd
jecxz
or
loope
sahf
dec
or
lahf
enter
ret
je
add
cmp
ljmp
inc
or
cld
pop
push
stos
sti
pop
call
or
xchg
rolb
xchg
pop
aam
xchg
jns
push
adc
inc
mov
pop
dec
xor
es
dec
rcl
jl
test
xchg
loope
mov
fsubrp
std
and
xor
or
inc
add
lret
pop
jmp
xor
lret
frstor
shl
lds
xor
dec
aaa
xchg
and
mov
push
dec
sub
lcall
xchg
aam
or
jl
xor
jmp
xor
lods
es
or
mov
js
into
jae
aad
xor
ljmp
dec
int
inc
mov
inc
push
add
rcl
adc
icebp
dec
imul
addl
cmp
and
into
mov
xchg
pop
pushl
clc
pop
mov
push
add
sub
sub
adc
sbb
cmpsl
sbb
and
and
mov
push
inc
cmc
stos
fsubrl
pop
xlat
inc
ss
pop
loope
popf
insb
cs
xor
rcrb
sarl
and
into
aaa
insl
loopne
outsl
push
cmp
mov
xor
movsl
sbb
rcll
mov
int3
fisubs
pop
sti
insl
sub
test
inc
stos
popf
daa
test
sub
push
push
mov
imul
addr16
push
data16
mov
sub
push
insl
popa
mov
testb
arpl
mov
les
mov
cmp
sub
iret
in
xor
mov
insb
pop
int
pop
mov
xchg
or
xchg
jl
jno
push
push
int
mov
outsb
jg
dec
bound
push
enter
xchg
mov
push
mov
xor
sbb
cmp
xchg
push
sbb
push
ss
mov
mov
sbb
loope
dec
inc
inc
sbb
pop
xor
ficoms
lahf
jg
shll
lcall
rcrb
or
push
xchg
test
insb
jo
mov
pop
sub
jns
add
cmp
mov
mov
dec
pop
jnp
out
repz
xchg
and
mov
push
ficompl
push
pmaxub
adc
xchg
pop
sub
arpl
mov
xchg
outsb
insb
adc
jmp
movsb
and
enter
test
add
loope
cmpsb
push
adc
lea
xor
imul
xchg
jbe
sbb
cmp
int3
sub
pop
xchg
pop
sbb
clc
aas
out
pop
pop
jo
loop
and
push
ljmp
orl
cltd
jns
js
inc
xlat
shrb
lahf
roll
mov
mov
subl
movb
in
in
jne
in
mov
insl
ret
mov
ljmp
in
or
xchg
sub
jle
inc
xchg
push
add
push
aad
in
fdivrs
jle
es
push
hlt
dec
jbe
test
in
inc
or
ss
push
mov
lods
and
loopne
pop
notb
mov
jbe
icebp
jp
mov
mov
adc
dec
lea
sub
or
pand
mov
adc
jns
jnp
inc
sub
mov
xor
popf
loop
pop
xor
lea
xchg
in
cli
daa
xchg
push
shlb
pop
sub
sub
into
adc
fsubr
movsl
pop
ds
sbb
xchg
xchg
stos
xor
jmp
adc
shr
ret
cli
lret
test
adc
inc
fidivrs
xor
je
or
adc
cmp
out
dec
xlat
push
jp
ss
ja
add
ficoml
fucomip
fdivs
lcall
cmp
cli
pop
push
insb
cltd
inc
mov
cmp
clc
enter
shr
sarl
sub
mov
adc
fdivrl
lock
push
nop
dec
jmp
mov
mov
cmp
xorl
js
call
je
in
data16
mov
and
mov
ja
sahf
js
pop
in
nop
push
imull
pop
je
test
pop
mov
sbb
pop
jo
pop
or
dec
pop
daa
inc
pop
inc
cmp
xor
add
in
or
and
call
and
lahf
and
movsl
cwtl
sub
add
popa
mov
icebp
cmp
repz
cmc
push
jno
hlt
xchg
fwait
div
jne
inc
pop
and
daa
sbb
xchg
mov
jne
push
imul
pcmpeqw
js
sahf
jg
fs
lods
or
jo
repz
sbb
add
out
xor
pushf
inc
iret
sub
test
lahf
inc
lret
aaa
add
fcoms
inc
daa
popa
cmp
add
sar
mov
int3
movsl
cmpsl
popa
pop
xor
cltd
pop
lds
pop
scas
add
push
mov
mov
jns
add
adc
setp
cmp
ret
jge,pt
jg
repnz
cmc
xor
adc
popa
jo
popl
pop
int
out
sub
mov
imul
sub
scas
mov
dec
es
scas
xchg
jg
sub
aam
lea
adcb
je
dec
mov
es
pop
and
into
fwait
out
test
and
stc
das
inc
in
sahf
jl
mov
aas
jb
xchg
and
mov
sub
inc
sub
mov
popw
sub
xchg
in
mov
jl
xor
inc
xchg
mull
mov
test
mov
push
aam
cmovs
jge
mov
insb
push
shl
out
xor
xchg
dec
out
fsubrs
lds
xchg
cld
mov
add
xchg
enter
mov
adc
inc
adc
sub
mov
sbb
push
sahf
push
xchg
scas
into
mov
dec
hlt
bound
shll
pop
shrl
loopne
adc
lahf
adc
sub
dec
jbe
stos
pop
jae
sub
sub
popf
push
push
loope
and
clc
stos
push
mov
mov
adc
mov
rcrl
mov
mov
mov
mov
jge
pusha
mov
or
je
pop
or
sub
mov
addr16
push
test
fisubs
lret
int3
xchg
scas
out
fcoml
into
jg
ss
mov
xlat
stos
mov
cld
sbb
mov
test
icebp
cmpsl
adc
bound
stc
movsb
aad
push
pop
stos
lcall
xchg
adc
push
mov
xchg
xchg
cmp
enter
loope
jnp
jecxz
divb
inc
out
mov
cmp
jne
into
mov
jne
jl
sahf
xor
repz
movsl
mov
cmp
sbb
notb
jo
sbb
mov
lcall
xchg
imul
adc
inc
sbb
cmp
cli
cmp
jnp
lcall
mov
push
outsb
int
mov
shll
xchg
les
xor
call
xor
add
jns
sbb
xor
and
jo
fnstsw
dec
movsb
ss
rclb
fwait
rorl
lret
jle
addr16
xchg
ror
jns
mov
mov
rcl
xor
fs
jne
adc
clc
loop
adc
inc
mov
xchg
mov
push
lcall
out
jecxz
cmpl
js
cltd
popf
in
mov
sub
or
and
cmp
cmc
repz
jmp
dec
cmp
rclb
out
sub
fists
push
inc
cwtl
lcall
outsl
mov
mov
sahf
xor
in
jl
mov
sub
cmp
popa
xor
pushf
fs
daa
jmp
pop
sub
aas
bt
cmp
pop
mov
imul
scas
in
sbb
xchg
orl
aad
inc
movsl
cmp
xor
int3
icebp
fisttpll
cmp
sbb
adc
adc
adc
test
out
into
sbb
stos
xor
cmp
shl
mov
and
pop
mov
sbb
jnp
fs
aas
inc
loop
dec
aad
mov
mov
cmp
pop
jl
mov
fs
ja
pshufw
test
or
mov
sbbb
sbb
push
aas
imulb
mov
jbe
mov
adc
loop
sbb
cld
in
out
jecxz
jb
popa
push
fwait
cmpsb
pushf
faddl
and
dec
fdivrl
mov
loope
sub
sub
cmpsb
and
ja
dec
dec
ds
mov
mov
jl
test
jp
jns
mov
mov
sar
inc
ror
test
enter
cltd
inc
jo
push
fwait
xor
dec
xchg
cmp
dec
sbb
gs
out
mov
push
push
inc
mov
jp
mov
arpl
mov
cmp
and
ljmp
sbb
das
aas
jbe
push
sbb
in
addr16
jge
xor
and
jle
fstpl
pusha
xchg
into
xor
fisttpll
mov
sub
jmp
je
and
fnstcw
scas
in
cwtl
data16
inc
rcrl
ss
cmp
pop
das
mov
push
add
test
push
mov
sbb
mov
pop
loop
mov
fistps
jnp
mov
adc
bound
aad
out
xor
pop
inc
pop
jg
push
sbb
je
ja
sbb
sbb
push
sbb
movsb
xchg
fs
dec
xchg
into
fistps
fwait
shrb
sarb
cmc
add
outsb
std
inc
cwtl
dec
xor
adc
jle
in
pushf
cmp
fcmove
aas
lea
aas
mov
data16
test
cmp
insb
jmp
es
pop
jp
in
sbb
lods
fdivrl
mov
insl
mov
and
std
push
mov
test
fldt
add
ret
aad
das
xor
mov
pop
jge
push
or
sbb
mov
push
psubd
insl
lahf
inc
dec
mov
iret
pop
imull
pop
inc
mov
lods
cmpsl
imul
sbb
or
push
inc
repnz
xchg
jmp
and
sbb
jno
ret
ss
mov
cmpsb
loope
adc
cmpsb
setae
sti
sti
push
lods
jb
shll
push
repnz
cmp
push
movl
inc
pop
jno
addr16
or
sarb
mov
fldt
dec
sub
lea
jae
push
lret
sub
repnz
or
ja
aam
or
ffree
jecxz
add
push
loope
push
lret
or
pop
loop
push
into
cli
popa
xor
dec
cmpl
adc
xchg
loope
mov
jg
cmpsb
aaa
out
aas
icebp
ds
and
nop
testl
jno
jecxz
les
pop
loop
and
jae
sbb
fstl
cmpsl
test
aaa
pop
test
dec
fcmovbe
xchg
hlt
fisttps
stos
jg
pop
sbb
mov
int3
rolb
jb
mov
cs
adc
cmc
xor
adc
lods
xchg
push
hlt
push
imul
push
xchg
rcrl
xor
mov
pop
cmp
idiv
pop
and
fwait
sub
dec
sti
clc
sbb
outsl
mov
pop
lock
movb
nop
or
push
popf
data16
sub
sti
xchg
mov
ror
adc
cmp
fsubs
out
mov
cmp
xor
lods
in
xlat
push
add
movsb
xor
aad
jo
enter
mov
aas
aas
jns
jle
addr16
mov
jmp
mov
popa
cwtl
xorl
pop
mov
movsb
jbe
push
inc
call
mov
lods
mov
out
sbb
lods
aam
inc
int
je
add
addr16
pop
jle
repz
into
inc
jl
lods
sub
out
pop
push
iret
adc
cmpsb
inc
andl
dec
add
sarl
cmp
test
sub
pop
push
pop
jg
cmp
insb
clc
xchg
call
stos
in
loopne
lods
pushf
xor
dec
pop
idivb
or
das
call
adc
fiaddl
mov
and
repz
xchg
mov
movsb
jae
add
and
lds
jmp
pushf
mov
je
mov
cli
cwtl
shlb
mov
aaa
sub
fwait
sbb
test
xchg
addr16
mov
lds
inc
das
aas
mov
fld
sub
mov
ret
dec
sbb
out
mov
aaa
out
pop
test
cmp
pushf
push
xor
shl
inc
movsl
gs
movl
xchg
sub
addr16
and
mov
sti
les
sbb
shl
inc
out
mov
in
or
mov
mov
xchg
cmp
mov
sbb
jns
test
dec
inc
lahf
subb
mov
adc
data16
add
les
clc
std
mov
mov
mov
jae
adc
mov
aas
stc
movsb
lret
jno
and
mov
mov
je
aas
add
push
lods
mov
push
repnz
repnz
mov
pop
js
sar
mov
test
mov
testl
dec
roll
sahf
mov
pop
aaa
push
test
or
loop
sahf
cmpsl
pop
and
fnstcw
insb
or
int
mov
mov
cmp
sub
popf
mov
push
and
leave
outsl
inc
adc
adc
or
sbbb
dec
sbb
add
sbbl
out
push
out
lahf
fisttps
fwait
mov
sbb
dec
mov
stc
push
pop
adc
daa
mov
jmp
jg
sub
insb
xlat
mov
or
shr
and
sbb
mov
loop
xchg
loopne
ret
cmc
mov
fbld
jbe
add
nop
jno
ret
push
sub
push
pushf
sbb
ss
cltd
push
mov
cli
in
inc
pop
mov
sbb
xor
insb
pop
mov
sbb
repnz
ret
loop
inc
dec
pop
lret
jp
pop
push
mov
or
push
aaa
cs
xchg
insb
jne
pop
jle
jl
add
ljmp
shlb
mov
add
imul
popf
and
dec
jp
aam
test
xchg
pop
rcrb
and
fisubrl
add
sbb
pop
pop
pop
sar
dec
ret
sub
out
popl
cli
push
cli
mov
stos
mov
ret
bound
out
dec
xchg
cmp
test
stc
bndstx
or
mov
push
cmp
cwtl
pop
shr
outsb
add
sub
and
jmp
aad
adc
inc
iret
sub
pop
std
push
cmp
jb
pop
outsl
push
ljmp
xor
movsb
test
sbb
sti
insb
add
adc
call
mov
or
fdivr
or
int
and
sub
jnp,pt
push
addr16
inc
lcall
ja
push
mov
in
sbb
adc
and
jmp
mov
ret
sbb
dec
orb
mov
and
daa
rcl
inc
or
and
pop
sahf
jns
add
xor
adc
fidivrs
mov
stos
int3
jo
push
xchg
ja
mov
mov
nop
cltd
or
in
or
cmp
mov
xor
daa
xchg
fs
out
pop
push
adc
out
xor
jns
dec
in
mov
popa
in
rcr
ds
mov
push
mov
repz
lahf
sub
pushf
add
adc
inc
lods
das
mov
sbb
dec
sbb
and
jns
xchg
pop
inc
push
pop
cmp
fcmovne
scas
xchg
xchg
cmp
pusha
js
pop
das
add
push
sbb
adc
fmul
adc
test
enter
leave
xor
add
mov
and
loop
in
jne
aam
insb
xor
mov
loope
cmp
sahf
cmp
pop
and
inc
idivb
cmc
pop
orl
ja
cli
mov
stc
test
outsl
adc
or
push
mov
cld
fmull
inc
in
or
push
popf
ret
cli
jae
fcoms
mov
adc
dec
mov
inc
inc
adc
pop
lret
or
pop
push
push
fiadds
ret
stos
ffree
cmp
inc
adc
popf
mov
jecxz
jp
or
xor
xchg
loop
jle
fsts
push
mov
sbb
fxch
enter
shlb
cs
fcmovnb
js
inc
int
xchg
dec
loopne
add
sub
ret
in
inc
pop
mov
sub
sti
mov
inc
push
roll
aam
pop
lahf
push
xchg
stos
int3
and
lods
outsl
in
inc
lods
outsb
pop
xor
mov
dec
enter
call
adc
xor
jno
nop
pop
mov
lahf
mov
les
scas
loopne
lret
mov
or
int
mov
out
jmp
mov
aad
int
inc
in
push
sbb
push
xlat
insl
test
insl
aad
xor
cmp
push
rorb
mov
fcmovne
dec
fldt
push
adc
or
fistpll
lret
and
inc
dec
and
dec
fidivrl
stc
aad
insl
inc
mov
pop
pop
mov
out
icebp
mov
movsl
mov
in
push
scas
sbb
jne
loope
jo
cli
xor
into
sub
sub
sbb
in
mov
in
lret
andb
inc
arpl
mov
push
jne
mov
cmp
lret
jb
scas
cmpsb
push
push
outsl
icebp
mov
xor
andb
and
mov
add
mov
adc
pop
jecxz
test
mov
inc
push
inc
arpl
movsl
mov
mov
and
jmp
ficomps
insb
ret
inc
xchg
fldlg2
jbe
lock
and
movl
inc
sbb
testb
mov
inc
test
mov
add
je
ret
faddl
xor
xchg
adc
pusha
mov
ja
xchg
out
and
clc
sub
sbb
pop
jmp
mov
and
mov
push
mov
fsubrl
pop
mov
sub
and
cld
test
or
ljmp
jnp
clc
sbb
sub
movsb
test
pop
repz
rorl
push
ljmp
das
jg
data16
mov
out
jecxz
cld
xchg
mov
push
sub
pop
push
lock
dec
push
mov
lea
inc
jb
scas
dec
pop
test
sbb
ds
and
push
mov
mov
mov
jl
mov
xchg
mov
divl
jnp
inc
fsubs
mov
sahf
pop
mov
or
lret
or
outsl
pop
stos
xorl
push
push
es
bound
mov
push
fdivrl
dec
icebp
jbe
cmc
mov
inc
mov
mov
xchg
mov
nop
mov
and
adc
jno
push
lahf
jne
add
pop
sub
repz
aas
ret
fisttpll
xchg
jp
cmp
mov
mov
scas
in
mov
and
adc
insl
aaa
sbb
inc
sub
and
cwtl
ds
insl
pushf
cmpsb
jns
mov
js
sbb
pop
adc
xchg
xor
pop
and
repz
mov
add
mov
mov
aam
rol
mov
leave
movsl
decl
sti
adc
sbb
out
cmc
mulb
sub
dec
sahf
push
mov
cmp
ror
andl
mov
enter
ss
gs
cmp
sub
jne
arpl
stc
inc
pop
add
loopne
arpl
outsb
sbb
scas
loop
in
and
xor
dec
test
stos
fwait
cs
push
mov
dec
inc
cmpsl
xchg
filds
xchg
jne,pn
movsb
jno
jle,pn
aaa
sbb
rcrl
dec
add
pop
repz
add
push
dec
xorl
pop
xlat
in
pop
or
push
mov
outsl
fnstsw
dec
mov
dec
sub
and
cmp
jge
push
cmp
add
aad
ja
cmp
sti
xlat
cltd
dec
ficoml
es
dec
fstpl
out
mov
outsb
sbb
jp
xchg
f2xm1
mov
and
xlat
sahf
mov
pop
sar
dec
movsl
and
popf
mov
cmc
and
hlt
sbb
xchg
pop
jae
or
pop
xchg
fmul
mov
sub
rorl
stc
stos
rep
sbb
lcall
fs
xor
out
repz
add
dec
inc
push
fsubrp
mov
inc
fmuls
or
mulb
pop
jg
fdivr
dec
pop
push
aam
mov
daa
jnp
add
imul
push
push
sub
cli
pushf
jne
jne
mov
mov
pop
sahf
out
nop
dec
loopne
pop
cvtpi2ps
addr16
cmp
adc
daa
fisttps
shlb
dec
hlt
enter
sub
stc
lret
dec
lods
bound
mov
aad
mov
jle
enter
ja
movsb
cmp
mull
adc
push
or
fimuls
jp
or
mov
push
add
lock
or
outsb
div
xor
loopne
push
sahf
sbb
shl
xchg
mov
cs
aam
mov
xchg
sarb
enter
pop
jno
cs
push
xchg
pop
sete
repz
or
ret
sbb
icebp
cwtl
mov
addr16
pop
imul
mov
inc
cmp
mov
jo
add
sbb
out
cltd
or
xchg
or
icebp
shll
push
pop
mov
iret
xchg
loopne
xor
adc
mov
pop
xchg
or
es
test
mov
mov
xor
shll
data16
lea
jb
mov
add
mov
mov
sbb
sub
mov
add
xchg
xchg
jle
es
dec
pop
pusha
pop
ret
pusha
cltd
imul
add
rclb
lar
mov
insb
mov
imul
ret
loope
mov
sbb
mul
dec
ja
push
jmp
adc
fcompl
sti
mov
or
fildl
mov
or
fstpt
dec
sub
pusha
mov
inc
xlat
testb
inc
xchg
xchg
push
jmp
mov
icebp
sbbl
bound
inc
and
nop
ret
mov
jnp
bound
mov
repnz
shl
jb
in
test
mov
adc
out
ret
pop
out
and
sub
outsb
and
int3
cmp
stc
loope
inc
cmpsl
pusha
test
add
in
negb
clc
shrb
pop
lret
or
or
iret
cmc
xor
inc
shlb
cmp
loopne
xchg
xor
enter
mov
xchg
test
int3
repz
or
cmpsb
sub
mov
orb
and
inc
stc
pop
cmpsb
pop
add
and
into
out
call
push
lret
bnd
xor
das
mov
sti
sub
lea
mov
add
pusha
or
and
ficoms
lock
imul
xor
shrb
cmc
out
mov
jnp
xor
add
xchg
mov
sti
repz
xor
jecxz
enter
es
inc
pop
add
and
fistl
mov
cmp
ret
push
pop
fwait
pop
xor
sahf
test
mov
jae
lcall
dec
mov
shll
mov
push
hlt
mov
jmp
pop
repz
stc
mov
cmp
or
push
shr
scas
xchg
popf
dec
mov
cmp
or
pop
push
or
or
imul
push
jne
sub
jns
fs
inc
scas
mov
pop
and
push
pop
sbb
pop
js
fldenv
xor
out
loop
dec
and
std
jmp
and
pusha
mov
add
push
dec
repnz
cmp
xor
inc
dec
stos
scas
neg
push
cwtl
repnz
out
sbb
bound
mov
aad
rcrb
mov
xchg
dec
out
mov
ds
stos
add
jmp
hlt
stos
sbb
iret
daa
repz
lds
add
push
int3
dec
xor
xchg
or
and
ljmp
xlat
stos
cld
ficoml
verr
and
pusha
arpl
imul
or
stc
mov
push
jb
inc
cltd
push
subl
and
shll
cmpsb
sbb
clc
aaa
lods
loope
nop
mov
popf
sbb
outsb
lret
cmp
or
pushf
aas
cmpsb
loope
push
pushf
les
out
mov
cmp
mov
loopne
pop
mov
sahf
jle
into
dec
sahf
dec
sbb
inc
dec
movsl
adc
jnp
cld
test
shrl
jp
sbbb
dec
sbb
stos
or
orl
bound
aad
pushfw
pop
fldcw
pop
fsts
fbstp
xchg
out
fdiv
lret
mov
aas
sub
stos
negb
cmp
adc
je,pt
call
pop
into
lods
repz
push
pusha
sbb
or
push
jge
xchg
out
mov
scas
ret
or
fiadds
xor
inc
cwtl
lock
mov
scas
ret
jbe
dec
jmp
leave
mov
push
dec
inc
out
iret
push
cmp
sbb
sub
mov
mov
stc
lcall
in
mov
outsb
outsb
adc
mov
push
and
clc
xchg
insl
jg
adc
dec
cmpb
iret
mov
pop
sarb
mov
pop
rcrl
cmp
testb
mov
pop
repz
sbb
mov
in
xor
pop
pop
or
sub
lcall
jnp
fistl
int
sbb
pop
orb
jp,pn
fisttpl
jae
jnp
sahf
loopne
xchg
rcll
adc
subl
into
jno
insb
xchg
dec
jo
ds
fs
imul
pop
out
dec
das
outsl
push
lcall
mov
push
dec
and
push
sbb
xor
ffree
sbb
rcll
pop
xchg
inc
into
dec
imul
je
nop
mov
inc
push
pop
and
bound
test
add
clc
sbb
pop
inc
inc
loop
or
rcrl
inc
rolb
dec
insb
adc
push
mov
mov
or
inc
in
pop
and
pop
or
dec
sub
repnz
jle
or
dec
sbb
add
aam
test
cmpsl
fmuls
out
cmpsl
push
pop
leave
and
pop
push
mov
je
sub
aaa
xchg
jb
or
sti
adc
mov
or
inc
test
in
lods
int
jg
mov
pusha
cmp
xchg
mov
js
in
dec
dec
add
and
imull
xor
jecxz
fs
mov
data16
es
xchg
scas
fdivs
in
pop
xchg
out
jb
nop
fsts
imul
push
repnz
ja
fnstcw
lret
xchg
addr16
out
mov
or
loope
or
mov
dec
fisubs
std
leave
shrb
ds
dec
in
pop
dec
jmp
rorl
ss
scas
pop
rorb
inc
pusha
aas
sahf
stos
nop
test
dec
xor
movl
adc
out
scas
mov
out
stos
and
sbb
xchg
fninit
pop
xor
sub
jb
cwtl
je
pop
les
std
inc
dec
ret
or
adc
jle
js
cmp
inc
cmp
stos
daa
xchg
rcr
xchg
or
out
bound
jp
pop
push
leave
es
pop
mov
sub
loopne
out
in
lcall
xchg
push
mov
stc
inc
ret
fcompl
inc
xchg
sub
push
test
pop
ja
fistpll
inc
sbbb
dec
bound
push
repnz
loopne
mov
or
outsl
push
pop
repz
movsl
loop
adc
gs
jae
pop
jo
test
fnstenv
cmp
xlat
cwtl
daa
bnd
adc
daa
fsub
dec
pop
lahf
jle
fcmove
add
cmpsb
ss
or
call
mov
inc
jmp
enter
test
popf
icebp
mov
sbbb
punpckldq
jle
les
or
aaa
mov
sub
xchg
mov
shlb
pop
out
movsl
sbb
mov
mov
xchg
orb
dec
mov
fstpl
pop
xchg
xor
jle
jge
stos
mov
pop
fstpl
clc
arpl
mov
mov
jl
xor
pop
add
sub
mov
jg
cmp
shlb
outsb
xor
sbb
fidivs
hlt
fs
fimull
iret
dec
ret
mov
out
pop
mov
and
mov
mov
xor
sub
xor
mov
addr16
fsub
loop
adc
loope
jle
pop
int3
pop
cli
xor
in
mov
pop
and
sub
and
xor
orl
mov
adcl
xchg
cmpsl
mov
rol
lods
in
dec
adc
bound
inc
lea
inc
lds
lcall
loop
sbb
arpl
gs
push
repnz
ret
mov
or
add
notb
fidivrl
sub
push
mov
rolb
xor
lods
inc
js
ss
add
dec
sub
cmpsb
pushf
in
clc
pop
iret
pop
jbe
lcall
ljmp
mov
sbb
cmp
pop
sbb
outsl
scas
popa
jb
sahf
push
test
push
cmp
stos
lcall
loopne
int3
popf
inc
mov
xchg
sbb
jmp
insl
jmp
aas
into
loope
fistpl
movsl
mov
lods
sub
jo
das
xlat
clc
pop
data16
xchg
cmp
xor
xor
xchg
adc
dec
xor
outsl
cmp
loopne
sbb
cmp
jmp
ret
ret
cmp
xchg
push
outsb
pop
mov
into
lcall
js
jne
push
adc
pop
add
sbb
pop
cmp
add
jmp
aad
lock
jg
pop
fs
mov
push
mov
mov
enter
dec
mov
outsb
gs
cwtl
cmp
cmpsw
mov
les
mov
test
popf
andb
push
lret
ret
inc
push
push
das
lods
stos
js
inc
outsl
imul
int3
cmpsb
lea
xchg
outsl
insl
sbb
js
jecxz
cmp
inc
cmp
cmc
add
js
fdivs
leave
dec
cmpsl
arpl
fcmovu
pop
je
adc
jmp
fldlg2
loope
pop
scas
or
fnsave
out
jecxz
movsb
and
sysret
leave
call
sbb
push
adc
out
loopne
mov
sub
or
pop
add
mov
and
push
or
inc
add
push
push
mov
adc
rcrl
ljmp
mov
and
jo
cltd
loop
adc
leave
jle
or
stos
mov
mov
sbb
fbstp
push
jbe
sti
jo
jns
rcll
arpl
or
stos
aad
jbe
xor
mov
frstor
mov
mov
insl
push
fldt
lods
add
cltd
pop
cmpsb
sbbl
movsl
daa
mov
loope
mov
inc
and
mov
mov
insb
insl
data16
mov
mov
mov
xchg
push
cmpsb
xlat
and
jecxz
call
inc
adc
cli
test
ss
push
call
ret
pop
pop
push
ljmp
inc
cmc
mov
fdivs
jae
cli
sbb
jns
in
cmp
out
sub
lret
sar
into
fstps
pop
inc
bound
shrb
and
add
mov
cli
dec
add
jo
sub
mov
je
sti
ficomps
xchg
push
add
jmp
inc
and
inc
pop
lea
mov
cmovns
std
cbtw
icebp
lret
nop
movsb
inc
xor
out
mov
enter
xchg
fimuls
lret
addr16
shl
repnz
pop
xchg
in
mov
hlt
int
sbb
mov
xlat
imul
shrl
push
je
cmp
addr16
push
and
scas
and
mov
imul
fsubs
inc
push
fidivrl
or
inc
shll
nop
or
xchg
popa
mov
js
cltd
stos
pop
add
mov
adc
adc
pusha
add
insb
mov
mov
je
mov
sbb
xchg
sar
jle
in
push
push
sub
imul
pop
mov
aaa
dec
inc
mov
outsb
scas
subb
xchg
lds
dec
in
mov
adc
lds
scas
pop
dec
inc
std
inc
sbb
scas
jge
cs
clc
sbb
cmp
stos
ja
iret
sarb
sub
jge
sar
adc
out
pop
pop
jge
adc
mov
sbb
push
adc
arpl
jb
pop
push
shlb
mov
and
jmp
add
aas
iret
mov
sbb
inc
out
sbb
fwait
cmp
repz
es
mov
les
ret
ss
in
mov
jo
clc
push
fbld
rep
push
inc
js
mull
sarl
mov
inc
hlt
std
pop
lods
mov
sbb
jl
mov
fsubrl
jne
repnz
ljmp
dec
gs
movsb
mov
cmc
jns
pop
push
jnp
mov
xor
adc
inc
repnz
push
sbb
xor
mov
aas
sub
leave
icebp
addr16
inc
mov
xor
or
cmpb
adc
out
call
ljmp
stos
sub
imul
pop
sbb
adc
rol
movsl
dec
and
jno
out
mov
cwtl
in
add
add
dec
bound
fstpt
cmovno
mov
mov
push
ljmp
pop
xor
call
or
mov
dec
jne
movl
xchg
imul
ja
dec
dec
sbb
or
cmp
pop
or
xor
jne
insl
xor
call
xor
push
repnz
xchg
or
into
addb
es
test
aaa
iret
mov
sub
add
scas
jnp
imulb
loopne
push
jp
xchg
jecxz
in
int3
loopne
jo
orl
gs
es
dec
cmp
cmp
or
sub
or
mov
dec
jp
dec
out
in
mov
rep
xchg
adc
sub
sbb
xchg
or
cmc
xchg
clc
cmp
inc
add
pop
cmp
xor
dec
push
push
ja
rcrb
in
sbb
jnp
daa
or
div
xor
inc
in
pop
das
mov
int
aas
add
decb
mov
lods
nop
hlt
insb
out
dec
popf
add
ret
push
mov
int
inc
sub
out
mov
js
xlat
mov
pop
sbb
cwtl
test
movsb
dec
lds
scas
pop
insl
dec
pop
push
sbb
sbb
xlat
lret
stos
jno
mov
dec
pop
lret
sub
adc
and
rolb
lret
pop
cmp
les
addr16
lods
sub
mov
sti
mov
ja
and
add
dec
pop
inc
add
pop
mov
roll
jbe
stos
dec
mov
rorl
sub
call
sub
fidivl
xchg
cmp
ret
daa
cmp
iret
pop
cmp
jecxz
popa
into
xchg
pop
fstps
pop
movsl
std
test
in
xor
aam
cmp
adc
push
ds
fstpt
movsb
jp
lret
cmp
inc
sub
xchg
popw
mov
mov
sub
cmp
outsb
inc
mov
outsb
xorl
push
and
imul
jno
addl
jl
push
addr16
filds
orb
add
mull
adc
add
test
inc
push
jg
clc
ficompl
mov
mov
mov
xchg
cltd
pop
pop
mov
outsb
js
push
xor
inc
out
sbb
leave
mov
subb
xor
outsl
dec
or
movsl
or
push
dec
in
loope
imul
iret
addw
and
pop
pop
pop
insl
fmull
aam
cli
jb
outsl
daa
xor
movsl
lret
lret
inc
ret
pushf
cmp
ret
xlat
sti
inc
add
int
mov
push
mov
push
inc
jmp
sarl
sbb
stos
xor
insb
sbb
lock
stos
lret
and
bound
xchg
out
inc
loopne
xor
fldenv
and
jg
xchg
dec
add
or
push
push
popa
dec
rorb
stc
scas
push
test
xchg
and
jge
rcrb
cmp
lret
fucomi
mov
jl
sti
enter
fisttpll
fisubs
or
mov
xchg
mov
popf
fisubl
ret
pop
dec
gs
cli
lea
out
fmull
fdivl
rorb
push
xor
stos
cwtl
stc
add
out
push
push
cmpsb
sub
outsb
adc
xchg
ljmp
cmpsb
cmp
xchg
cmp
fildl
sarl
push
or
pop
dec
pop
mov
jl
pop
stos
ds
fstps
cmp
dec
imulb
and
sub
xor
movsb
sub
arpl
dec
sub
cmpsl
mov
in
flds
lods
mov
insb
add
mov
push
xchg
daa
jge
sbb
cmp
sub
out
test
cmp
lcall
mull
cli
int
sbb
outsl
pop
jmp
pop
xchg
inc
jp
lea
add
mov
aas
mov
sar
jno
mov
xor
out
fstpt
lret
or
xor
std
cli
out
pop
movsl
rclb
fcmove
sbb
cli
sub
popf
movb
sub
cmp
js
fmull
sbb
xchg
cmp
scas
jns
adc
scas
cmp
xchg
pop
mov
adc
xlat
push
pusha
pop
push
dec
fnstcw
xchg
sbb
xchg
sarl
pop
shl
scas
add
shl
in
jb
mov
adc
insb
andl
sbb
test
stc
test
jnp
das
adc
lds
int
dec
xchg
sahf
daa
inc
shrl
aad
movsl
mov
aas
ja
das
in
cwtl
adc
or
mov
nop
sbb
idivl
fistpll
sbb
and
mov
fdivl
and
jmp
in
inc
icebp
xor
dec
xor
jne
ss
ljmp
xchg
cmc
movd
dec
push
es
pop
ss
xchg
stc
jmp
mov
out
loop
xor
in
xchg
or
inc
ljmp
or
mov
xchg
int
mov
xchg
push
mov
out
push
mov
sbb
ljmp
push
push
jo
popa
inc
popf
push
pop
fmulp
sbb
cmp
sub
lds
mov
fsubs
stos
fidivs
icebp
xchg
mov
adc
dec
mov
jmp
inc
nop
xchg
pushf
xor
bound
or
cmc
addr16
xor
icebp
repnz
fcomps
rorl
movsl
and
sahf
cmc
push
idiv
xchg
xchg
xor
shlb
mov
cmc
ret
ret
andb
aad
inc
js
js
or
mov
jmp
repz
aas
pop
cmpsb
rcl
dec
into
inc
test
or
std
xor
jg
and
imul
sbb
adc
or
push
fildl
jb
xor
inc
cs
popf
mov
mov
xchg
fisubl
ss
shrb
aad
cli
cmc
inc
nop
rclb
leave
pushf
cld
nop
xor
fwait
mov
xchg
xchg
pop
movsl
and
orb
mov
shl
jp
fnstcw
daa
std
push
push
push
and
inc
outsl
aam
jbe
push
movb
and
push
cltd
loope
jge
out
jle
adc
stos
test
push
jnp
cmc
mov
pop
add
jne
mov
cli
or
test
lea
cmp
into
outsl
pop
loopne
out
insl
cltd
sub
jecxz
cmpsl
jle
and
add
xor
pop
bound
push
fildll
gs
outsb
lret
or
jmp
movsb
pop
mov
dec
sub
mov
inc
mov
fisubrl
imul
rorb
jnp
mov
xlat
repz
sub
cmp
lods
cs
out
push
pusha
inc
or
cmp
xor
nop
adc
fisttpll
fdivrl
mov
insb
lods
mov
orl
and
push
lods
inc
mov
dec
aad
cmpsb
push
stos
or
scas
ret
jp
and
add
test
cmpsl
fsubs
testb
pusha
enter
shrb
xchg
movsb
add
outsb
loope
mov
adc
push
sub
jbe
cmpb
and
lods
int
loope
repnz
cltd
les
push
push
jbe
imul
lret
add
mov
lods
mov
fcomps
and
mov
add
loop
sbb
mov
push
aas
xchg
dec
jl
xchg
sub
jge
xchg
jmp
mov
jg
je
lret
lret
pop
add
das
dec
cmpsb
rol
pop
stc
push
mov
mov
ret
lret
or
adc
mov
jbe
jb
cmp
mov
shlb
roll
cmp
push
leave
xchg
ljmp
push
sub
push
dec
out
push
repnz
rolb
and
mov
ja
inc
mov
xchg
repnz
pop
xor
mov
cmpsb
in
and
vmaxps
out
adc
lret
mov
enter
inc
xor
jmp
pop
rorl
mov
sbb
xchg
cli
xor
pusha
or
push
or
aaa
push
pop
mov
or
mov
xchg
faddl
xchg
lods
enter
sbb
or
imul
pop
lods
fiaddl
xchg
std
dec
jb
adc
scas
sti
adc
add
or
sub
push
stos
mov
lret
jne
mov
xchg
insl
add
sahf
mov
pop
cmpb
dec
push
fucomp
xor
mov
push
int3
push
pop
push
jle
imul
lahf
jp
pusha
adc
xchg
adc
or
sub
iret
xorl
mov
cmpsl
mov
mov
adc
dec
adc
rcrb
push
loop
push
adc
mov
xor
in
movsb
mov
jle
loope
dec
int3
add
mov
jecxz
test
mov
pusha
xor
lock
sub
pop
mov
mov
mov
out
adc
jmp
outsb
push
xor
sbb
arpl
xor
xchg
scas
fsubrs
jl
jbe
shll
repnz
dec
adc
pop
dec
fists
leave
fidivs
lcall
cmp
lods
repnz
loope
or
ret
movsb
adc
pop
xor
repnz
adc
dec
fs
test
dec
in
jbe
and
scas
xchg
cltd
insb
mov
pop
int3
rorl
aad
sbb
xor
mov
push
adc
xor
sbb
arpl
out
push
xor
jne
cltd
out
sub
call
fbstp
mov
icebp
push
lahf
mov
sub
fistpll
or
icebp
divb
push
insb
and
mov
add
pop
stc
adc
adc
sbb
jmp
pop
scas
xchg
imul
shlb
push
sub
into
pop
lret
out
stos
mov
lods
inc
loop
shll
mov
pop
push
in
pop
lock
ljmp
cmp
cli
rorl
add
push
sub
cmp
ror
enter
mov
insb
sub
fimuls
outsb
push
lret
test
or
pop
nop
mov
imul
bound
test
sbb
cwtl
pop
enter
jo
xor
and
or
std
lea
pop
mov
shl
xchg
jl
add
loopne
xchg
mov
jl
pop
cltd
andb
aas
cld
xchg
push
xchg
loop
fistps
pop
call
or
cmp
fmull
pop
outsb
cmp
cwtl
mov
dec
ds
jne
clc
mov
xchg
js
mov
inc
notb
mov
lods
mov
pop
aas
sahf
sbb
aad
mov
lods
mov
outsb
xchg
sbb
sub
cmp
int3
dec
aas
add
mov
in
stc
dec
stc
fildl
out
dec
cmp
sbb
ret
loope
cltd
push
push
cwtl
inc
xchg
cmp
adcb
lods
sub
out
lret
or
xchg
repz
xor
push
ja
pop
adc
repnz
nop
data16
lods
jg
mov
cmp
lret
push
xor
enter
inc
aad
dec
jns
lods
mov
ret
sub
mov
mov
mov
js
mov
cs
das
movsb
adc
adc
mov
div
lock
insl
xchg
push
lods
dec
add
jo
fistpll
adc
or
jbe
daa
or
sub
sub
sbb
adc
insb
sub
and
cmp
fcomps
jnp
mov
addr16
jl
test
insb
dec
sti
ljmp
dec
lock
sti
insb
test
cmp
mov
adc
daa
pop
sbb
mov
and
adc
dec
adc
lea
shlb
or
sti
mov
leave
mov
scas
and
add
adc
outsb
or
jbe
ret
mov
dec
stc
inc
jo
aad
mov
mov
in
and
sarl
inc
add
add
add
pop
inc
rclb
ljmp
pop
pusha
push
mov
and
fistps
sub
add
out
enter
hlt
gs
fisubrl
sahf
in
dec
div
jl
addr16
sub
es
das
adc
sub
jbe
pusha
push
sbb
das
lea
jb
daa
ret
dec
pop
mov
sub
test
fbld
xchg
inc
push
inc
in
aaa
ficomps
fnsave
push
arpl
push
nop
xor
nop
test
bound
xchg
pop
sbb
add
popf
xchg
mov
push
add
and
mov
pop
mov
jg
xchg
pop
jp
movsl
xchg
dec
inc
fmull
mov
xorl
mov
movsb
insb
dec
adc
lods
or
push
test
pusha
and
cmp
xorb
imull
add
or
cmp
cwtl
jg
mov
fcompl
ret
xor
and
pop
mov
lock
xchg
pop
xor
jle
cld
pop
arpl
adc
rol
or
into
in
int3
sbb
ljmp
aam
lods
leave
push
clc
stos
sbb
mov
popl
sbb
push
jge
call
xchg
das
repz
fcomps
lcall
or
fwait
mov
adc
add
dec
repz
movsl
push
mov
add
aam
adc
call
pushf
out
shlb
pusha
gs
sub
pop
popf
stc
mov
mov
xor
xor
popa
bts
sub
dec
sbb
aam
sbb
or
ret
adc
hlt
inc
dec
push
test
mov
idiv
xor
push
or
cmp
add
ja
cli
lcall
enter
inc
out
sbb
jp
lods
cwtl
push
js
out
push
out
dec
lret
xchg
adc
aam
cmp
je
push
pop
dec
fcmovu
cmc
adc
push
int
jb
jecxz
aad
ss
jp
jp
sub
je
inc
sbb
data16
pop
xor
ss
bound
ret
notl
aaa
daa
pop
jl
sub
adc
adc
pop
test
add
sahf
movsb
add
ljmp
pop
arpl
xlat
cmp
ss
mov
jb
inc
push
xlat
mov
xor
and
outsl
xor
sub
leave
mov
leave
stc
daa
or
jmp
xchg
imul
nop
xor
rcll
sbb
mov
mov
jmp
mov
int3
je
mov
jo
bound
in
lea
shrb
sbb
xor
push
inc
xor
sarl
xor
jne
dec
and
sbb
and
push
lock
or
xchg
push
rorb
xchg
addr16
ds
pop
jmp
mov
out
js
mov
lcall
mov
xor
mov
mov
mov
test
push
jbe
stc
sbb
imul
pop
and
in
jb
jo
fmulp
pop
jb
jmp
inc
jmp
inc
jne
notl
add
dec
mov
es
in
lcall
dec
dec
mov
sbb
xor
in
inc
xchg
sub
add
leave
movsl
cmp
mov
imul
dec
jne
pop
stc
in
stos
sub
out
xchg
scas
iret
rclb
into
pushf
push
ds
push
or
sti
sbb
or
das
scas
jne
mov
push
xchg
shll
mov
cli
xchg
stos
xchg
cmpsb
dec
push
jae
mov
cmpsb
cmp
mov
int3
loopne
xchg
sbb
mov
push
fiadds
fdivl
pusha
add
add
xchg
dec
push
pop
daa
js
xor
aam
lods
or
and
xchg
mov
scas
loope
rolb
mov
fstpt
inc
scas
push
xchg
jmp
sti
xchg
cmpb
push
mov
sub
dec
out
lds
adc
pop
int3
adc
or
jbe
inc
ja
or
insb
stos
and
test
xchg
mov
inc
pop
dec
cmp
imul
cmp
sbbl
sub
jg
push
xor
push
sahf
in
test
dec
icebp
outsl
imul
mov
xor
gs
xlat
into
lahf
push
cmc
cld
xchg
sub
mov
mov
call
pusha
mov
fwait
nop
sub
test
loope
xchg
addr16
data16
call
cmc
add
xchg
js
stos
adc
insl
or
jmp
ret
fiadds
loope
jp
das
lcall
jmp
movsl
icebp
jb
push
aas
jno
jmp
rorl
jb
pop
adc
add
jne
call
add
sbb
arpl
fistpl
mov
test
jg
arpl
xchg
pop
outsl
jg
sub
or
shll
jp
mov
aaa
add
sti
lods
add
sub
popf
lods
xor
test
jno
mov
je
mov
sbb
sub
ja
movsb
jnp
xchg
push
jl
add
pop
xchg
dec
out
cmp
ret
imul
jp
mov
dec
scas
dec
in
mov
jno
int
jno
movsb
mov
into
push
cld
add
add
mov
xor
ss
push
mov
ljmp
lods
imul
in
and
popa
jg
inc
push
jb
insb
jecxz
out
icebp
inc
mov
and
clc
and
push
jl
pusha
inc
aas
ljmp
sub
xchg
jg
push
sbb
outsl
sbb
lods
mov
cltd
cmpsb
adc
int3
bound
rolb
mov
aad
sub
sub
subl
push
sbb
mov
ret
lcall
inc
aas
jecxz
sti
dec
js
mov
scas
cmp
aas
jbe
mov
sub
push
add
fwait
in
jae
jno
imul
mov
scas
pop
mov
fs
push
mov
pop
dec
jbe
in
fcmovnbe
sahf
idivb
push
fcoml
int3
cwtl
mov
cmpsb
lcall
mov
cmp
icebp
leave
pop
mov
fcompl
sbb
inc
popa
jmp
and
mov
in
cmpsb
jne
ret
pop
xor
jae
jbe
mov
pop
pusha
add
lods
pop
les
pmulhuw
test
mov
hlt
mov
test
sub
movsb
push
cwtl
out
cwtl
out
jmp
jb
push
jmp
mov
push
and
jno
mov
mov
xlat
div
inc
mov
mov
push
xor
mov
mov
daa
mov
xor
aaa
jb
jecxz
es
bound
repz
imul
xchg
stos
test
mov
inc
insl
lods
scas
push
cmpsb
adc
mov
icebp
push
bound
jge
push
jb
cmpsl
xlat
mov
clc
lcall
cmp
mov
add
dec
xchg
and
popf
jo
out
sub
dec
inc
data16
std
mov
cmp
popa
and
jb
sub
mov
mov
pop
clc
fdivp
loope
lock
aas
jge
sbb
pop
push
sub
pop
decl
aam
adcl
sub
xchg
cmp
icebp
push
shrb
movsb
es
xor
mov
mov
test
xor
jno
adc
cld
cmp
test
imul
enter
cld
test
xlat
inc
shrl
or
or
push
pusha
fiadds
into
and
mov
lds
xchg
aam
orb
je
adc
fistpll
scas
xor
inc
iret
nop
sub
out
repnz
pop
push
sbb
mov
addb
scas
cmpl
aaa
push
adc
pop
push
lcall
das
adcb
mov
pushl
xchg
xchg
movsl
add
pop
call
push
mov
cld
leave
jb
inc
leave
std
pop
mov
inc
lods
pop
mov
ljmp
mov
adc
mov
lods
push
enter
add
push
mov
enter
in
gs
orb
xor
sbb
add
sbb
lret
imul
rep
and
lods
adc
dec
pop
mov
icebp
sbb
push
outsl
sbb
aam
mov
xor
fidivs
sub
stc
cmpsb
xchg
jg
fnstcw
in
sub
inc
das
daa
and
xor
addb
dec
in
sub
xchg
jnp
cmovb
int3
pop
sti
sbb
cmc
in
popa
dec
and
adcl
int3
push
imul
les
out
test
lock
sbb
subl
cltd
cmpsb
lods
jno
jns
gs
pop
mov
scas
roll
xor
and
mov
cmp
xor
xchg
outsb
mov
pushf
cmpsl
out
jo
aad
lock
mov
ss
lds
test
pop
test
sub
jle
pop
and
hlt
sbb
ret
dec
mov
xchg
subb
sbb
pusha
sub
dec
push
cmp
mov
in
dec
sbb
jns
inc
dec
mov
push
mov
push
inc
rcll
fistpl
and
cmpsb
lods
mov
mov
leave
faddp
cmp
mov
jbe
test
push
mov
mov
pop
mov
adc
cmp
push
sahf
jge
add
xchg
xor
ret
pop
incl
fisubrs
outsl
pop
es
out
stos
lea
cmp
mov
push
sub
cltd
and
xchg
push
inc
std
xchg
cmp
xchg
test
cmpsl
das
or
das
and
mov
pop
dec
in
or
cmp
call
int3
sub
call
ss
ljmp
lea
jno
fcmovbe
pop
out
xor
pop
mov
movsb
fsubs
mov
add
jle
std
not
popa
shlb
aad
jae
mov
and
jno
test
sub
xchg
or
pop
jge
mov
adc
add
outsl
int
in
movl
xor
sbb
repz
sbbl
jb
push
testb
nop
pop
adc
sub
ret
je
cmp
inc
jo
push
addb
push
pop
sub
mov
jp
mov
or
orb
in
fisttps
popf
insl
lods
sbb
add
inc
lret
cltd
mov
aam
mov
cli
dec
mov
dec
std
add
mov
push
pop
shr
mov
inc
fsubr
xor
mov
push
repz
cmp
lcall
flds
repnz
inc
sub
repnz
loopne
idivb
and
cmc
add
cwtl
scas
jmp
ljmp
xor
mov
xor
inc
mov
mov
sub
or
rcll
push
ss
addb
push
xor
xchg
push
jge
andb
xchg
or
cmp
out
in
pop
mov
push
mov
adc
push
add
jg
xor
jp
adc
add
mov
hlt
cwtl
sub
or
into
loopne
in
jge
inc
push
jmp
pop
dec
movb
and
mov
pop
xor
jmp
push
push
adc
addb
jecxz
dec
dec
jl
mov
pusha
xchg
fistps
xor
arpl
mov
push
fstps
ret
pop
mov
cltd
jae
bound
fstpt
lods
sbb
xor
push
mov
push
int3
xchg
adc
ficomps
lret
xchg
rorl
test
ja
sbb
and
mov
dec
movsl
lret
dec
and
jmp
shl
test
out
insb
inc
shl
jle
cmp
iret
mov
sub
jp
mov
andl
fnsave
xor
and
xor
adc
test
pop
add
pusha
inc
adc
mov
enter
jb
ss
stc
adc
mov
sahf
jbe
pushf
aas
rcr
xchg
lahf
shlb
dec
cmc
push
idivl
push
push
push
mov
rorb
sub
add
jecxz
mov
lods
push
test
scas
inc
iret
lret
xchg
ds
adc
pop
gs
sbb
sub
ds
hlt
mov
data16
stos
pop
out
icebp
mov
mov
sub
repz
bound
mov
cwtl
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
.byte
xlat
.byte
cmpsl
push
sbb
outsl
pop
xor
and
aaa
lahf
add
sbb
dec
sti
jmp
decl
lock
neg
outsl
fsubrs
sub
push
add
ret
fidivrl
cmpsb
stc
mov
scas
jne
std
mov
sbb
pop
inc
xorb
std
into
inc
scas
ret
mov
mov
adc
imul
xchg
arpl
mov
push
xchg
lcall
or
fistl
out
jbe
das
add
ja
add
adc
push
jmp
lret
lds
push
cs
loope
xchg
inc
or
js,pt
call
in
cmp
fmuls
imul
push
cmp
inc
orl
lods
cmp
or
inc
frstor
enter
or
sahf
idivb
xchg
nop
inc
lock
xor
jmp
cs
lds
stos
xor
fs
push
js
push
aam
inc
dec
mov
inc
xor
xchg
popa
rorb
pop
shl
ret
xchg
lret
movsb
lea
mov
cmp
push
loopne
movsb
fs
xchg
leave
pop
sahf
sub
jmp
pop
adc
aam
out
movsb
movsb
out
mov
test
decl
stc
repz
xchg
stos
pop
sub
sbb
das
cmpsl
mov
pop
popa
xchg
movsl
xchg
hlt
jmp
mov
stc
imul
and
or
fsubl
mov
sahf
jge
loopne
adc
mov
dec
cmp
inc
jmp
mov
mov
stos
inc
sahf
rorl
mov
mov
loopne
les
stos
add
lods
inc
mov
xlat
cld
test
or
icebp
or
outsb
std
arpl
sbb
xorl
inc
sub
xlat
dec
adc
push
push
xor
and
aaa
mov
mov
mov
mov
lahf
jo
cmpsb
subb
mov
sub
shr
jmp
ret
add
imul
leave
ss
jp
lea
xor
add
mov
inc
pop
lcall
sbb
fldenv
lock
inc
es
fisttpl
mov
cmp
jmp
sbb
movsb
rcl
test
fs
icebp
cmp
out
jbe
in
and
push
cs
lahf
sbb
ret
fnsave
inc
aaa
cs
ds
out
push
imull
mov
adc
clc
pop
inc
fwait
push
push
add
lods
add
or
lret
enter
push
add
pop
mov
sbb
in
dec
or
jp
and
mov
inc
outsb
and
push
sar
and
scas
ja
xchg
push
mov
iret
out
sbb
hlt
xor
cmp
movsl
jl
mov
fwait
lret
xchg
pop
mov
dec
shlb
outsb
stc
mov
out
fidivrs
es
loopne
xchg
mov
enter
sub
fisttpl
movsb
aas
rcl
test
mov
or
mov
out
ds
xchg
out
clc
inc
adc
ds
les
fcmovnu
fistps
push
sbb
insb
std
or
xchg
fnsave
jge
mov
fwait
je
sbb
pusha
jg
push
test
rclb
in
xlat
sbb
test
fcomp
cs
sub
sbb
scas
mov
inc
gs
mov
movsl
dec
nop
loopne
sbb
sub
cmp
pop
addr16
insb
and
lds
push
movsl
aaa
movl
xchg
or
lahf
and
daa
cmpb
lret
xlat
stc
retw
xchg
fidivrl
mov
and
mov
ret
add
icebp
aad
aas
jae
incb
pop
dec
cmp
in
dec
push
enter
push
fildll
fs
adc
or
pusha
es
inc
aaa
stos
repnz
mov
and
mov
hlt
cmp
and
and
clc
sbb
ja
pop
cmp
insb
push
std
and
aas
lcall
aam
sbb
lret
mov
lcall
mov
cmc
mov
lea
pop
ret
mov
adc
dec
sbb
xchg
cmc
fdivs
iret
rol
daa
add
adc
dec
test
test
dec
pop
xor
jmp
xor
cmpsl
jg
out
int3
jg
scas
das
adc
adc
xchg
pop
pop
pop
cmp
push
dec
jp
inc
xor
shrb
aaa
arpl
cli
xchg
jae
mov
pop
mov
and
sbb
loopne
ja
sar
pop
aad
daa
cmp
in
stos
mov
cmpsb
cmpsb
sub
xchg
mov
xor
fldl
and
cmpsb
enter
xor
fnstenv
dec
xchg
stc
idivb
mov
inc
imul
push
insb
ljmp
and
nop
jb
fidivs
nopl
mov
push
lcall
enter
ret
cmp
test
ffree
sarb
cmpsb
xor
scas
hlt
adc
adc
sbbb
xor
scas
insb
and
or
ret
sarl
lock
dec
xor
cmp
lea
loope
punpckhwd
sub
pop
gs
icebp
add
dec
push
movsl
add
rolb
pop
iret
aad
jne
mov
mov
sarl
inc
aam
es
in
mov
stc
bound
popf
call
mov
mov
movsl
pop
sahf
xor
test
sbbl
out
test
shl
ja
push
xchg
ljmp
movsl
cmc
out
arpl
sub
inc
cmp
loope
mov
mov
xchg
push
pop
pop
xchg
or
xchg
sbb
fsubrs
rep
xchg
std
cs
sub
sahf
outsl
xchg
lret
lret
stos
add
and
cmovge
mov
cli
cmpsl
lock
scas
ja
mov
sub
xor
sub
lea
nop
shlb
popa
pop
scas
inc
sar
scas
mov
pop
test
push
enter
je
mov
fwait
mov
ret
mov
pop
xor
ljmp
clc
add
bound
add
fwait
adc
push
and
adc
insl
nop
pop
ret
int
ret
daa
in
sbb
xor
fwait
ret
mov
js
and
pop
ja
andb
ljmp
push
jne
call
mov
or
je
mov
push
inc
or
xchg
pop
sbbb
lcall
aas
xor
pop
loop
xchg
fidivrs
xchg
push
push
int3
sbbl
ficoms
cmp
aam
pop
popl
add
repz
aaa
movb
in
cmp
pop
pop
aaa
inc
aam
push
sbb
scas
xchg
lods
fs
jo
addr16
ret
mov
jbe
cld
push
adc
popa
sub
adc
mov
jp
dec
es
or
bound
sbb
dec
inc
out
dec
add
and
or
scas
xchg
xchg
int
inc
out
add
fidivs
add
rcr
pop
movsb
rcl
sti
aad
dec
mov
fsubs
xchg
inc
adc
xor
sub
cltd
clc
fsubrl
push
or
xlat
shll
ret
jbe
punpckhbw
lahf
pop
in
sbb
xchg
jne
xchg
push
push
jge
xor
mov
out
jp
adc
mov
inc
jge
add
pop
dec
stc
stos
jo
popa
gs
sti
sub
sarb
int
mov
ret
cmpsl
inc
rolb
cmp
loopne
mov
sarb
es
add
pop
ret
inc
jno
sbb
pop
dec
jo
dec
inc
push
push
test
fmulp
or
scas
sti
jne
dec
mov
mov
leave
inc
ret
dec
test
sbb
outsb
lret
inc
push
ficoms
cmp
mov
das
pushf
push
mov
cwtl
stos
fucomi
cmp
push
movsb
movsb
cmpsb
and
inc
and
or
and
loopne
ja
push
ret
adcl
sub
in
cmp
call
aad
cltd
jge
push
rcrb
cmp
ret
ljmp
loope
push
cmp
cmp
xor
mov
test
push
sti
mov
mov
test
popf
cmpb
nop
das
addr16
ja
mov
in
inc
mov
pop
pop
cmp
fdivl
xchg
mov
and
xor
sub
aad
mov
into
xor
in
test
test
test
jb
mov
push
filds
push
xor
sbb
insb
inc
dec
inc
notb
mov
emms
sub
pop
sbbl
repz
mov
fbstp
jle
sbb
xlat
std
fwait
or
nop
or
cwtl
call
adc
inc
in
lret
dec
repnz
sbb
add
inc
cmpsb
sbb
push
adc
sbb
pop
insl
cs
inc
fwait
and
rorl
call
fwait
jbe
mov
cmpb
push
pop
pop
hlt
mov
das
and
jno
or
jnp
add
rorl
mov
repnz
clc
in
cmp
subb
push
ljmp
rcrl
cwtl
mov
adc
or
test
dec
pop
pop
sub
es
add
cmpsb
imul
lds
outsl
shr
loopne
add
mov
pop
clc
les
xchg
sti
jecxz
fmuls
clc
scas
mov
lods
or
mov
shll
fildll
adc
mov
arpl
cmpsb
ror
mov
mov
ss
loopne
aam
test
out
addr16
mov
dec
pop
push
stos
dec
dec
push
push
dec
rol
mov
data16
aad
test
adc
jno
outsb
popf
loopne
fwait
cmpsb
in
dec
cmp
mov
imul
or
js
loope
popa
sub
mov
jle
mov
movsl
pop
cltd
movsb
xchg
cltd
aam
scas
je
pusha
test
adc
add
mov
testb
add
xchg
adc
sub
mov
test
add
cmp
cmpsb
pop
std
jae
jbe
xchg
mov
xchg
pop
adcl
test
sub
pop
xorl
popf
xor
add
lods
out
outsb
mov
xchg
push
mov
fidivrs
iret
push
orl
sub
pushf
xchg
push
dec
fldl
cwtl
insb
data16
or
add
jle
test
push
add
inc
clc
jmp
jp
cmp
fcoms
je
mov
scas
stos
sbb
jbe
xor
sub
sbb
rcr
adc
xchg
push
bound
outsb
xchg
fisubrl
lret
sbb
jae
in
adc
mov
xor
jne
adcb
xchg
mov
mov
shlb
pop
rcrl
xchg
pop
js
push
jb
push
mov
mov
scas
dec
mov
dec
aad
cmp
cmp
out
pop
aaa
cli
xchg
lret
and
into
aad
mov
clc
mov
ficompl
jecxz
inc
aam
fcomi
mov
jmp
stos
insb
inc
lcall
fst
and
xor
stos
cmp
inc
add
mov
int
or
sbb
dec
xor
hlt
shr
cmc
in
sbb
in
outsb
and
repz
push
sbb
jae
movsb
sbb
inc
pop
push
cmpsb
xchg
pushf
pop
pop
rorb
jo
push
jae
fsubl
outsl
sub
fsubrl
inc
jae
push
out
ljmp
pop
addr16
data16
loopne
je
outsl
pop
xchg
fs
fistps
xchg
dec
aaa
jo
jmp
pop
dec
fscale
shrl
fs
stos
sti
repnz
lcall
rcll
nop
push
jmp
subl
cmp
cmp
push
inc
sbb
sub
subb
ljmp
seta
movsl
push
inc
dec
cmp
push
cmp
mov
sub
cwtl
cmp
clc
xor
and
aas
int
stc
push
mov
or
sbb
clc
xchg
and
sti
jge
ss
jecxz
inc
mov
movsl
mov
cmp
mov
out
es
movb
imul
gs
pushf
call
jno
or
add
push
icebp
icebp
fisttps
push
push
cmc
nop
fisttpll
push
push
mov
and
dec
aaa
ljmp
pushf
stc
ficompl
icebp
fsubs
fcomps
test
adc
and
out
adc
cmpsb
std
or
fistps
sub
pusha
mov
xchg
jl
add
dec
jae
lret
jae
adc
dec
icebp
and
jb
psubsb
jne
pushf
mov
das
pop
inc
xchg
lock
fisttpll
cli
jle
ja
sub
lcall
mov
xchg
fisttps
xchg
add
ss
sbb
jg
ret
faddl
icebp
insl
int3
lret
ss
mov
mov
inc
sahf
cmpsb
dec
add
dec
adc
xlat
ret
lock
shrl
sub
aas
out
fdiv
cmpsl
stc
push
push
push
adc
jnp
adc
or
adc
xlat
lret
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
.byte
xlat
.byte
cmpsl
lea
mov
xor
xlat
lods
cmp
adc
aaa
aad
iret
sub
jo
or
test
add
ret
loop
add
mov
aad
notl
sub
sub
jmp
pushf
push
ja
ljmp
and
aad
jl
lahf
mov
inc
xchg
adc
or
sbb
push
mov
pop
sarb
dec
das
dec
daa
aaa
test
dec
mov
orb
int3
loop
ret
push
bound
push
enter
jbe
ret
inc
scas
fwait
xchg
mov
addr16
add
out
arpl
out
in
or
mov
xchg
xchg
mov
jmp
or
add
ljmp
pop
mov
mov
out
xchg
mov
das
ret
loope
fcoms
xor
test
cltd
sbb
call
mov
test
mov
lds
mov
sbb
mov
and
lret
in
mov
repz
fldcw
cs
cli
add
sub
test
lods
adc
dec
dec
xlat
in
ret
push
add
cmp
sbb
hlt
call
or
mov
sub
push
hlt
shlb
cs
stos
flds
movl
test
adc
cmp
sbb
add
sbb
nop
mov
jp
xor
pop
push
dec
sbb
hlt
push
iret
adc
inc
cmc
cmp
cmp
inc
cmpsb
sbb
mov
or
push
sub
icebp
fisttpll
dec
xchg
fidivrl
in
fdivr
pop
adc
int3
jno
out
pop
adc
mov
xor
jae
inc
jne
test
subl
notl
inc
mov
fsubs
inc
cmpsl
inc
xchg
mov
in
shlb
or
xor
sahf
fcoml
mov
mov
js
cli
mov
fildll
fldt
leave
add
mov
xlat
lods
pushf
lcall
out
push
mov
sbb
dec
mov
ficompl
xchg
insb
fdivrl
pop
mov
or
inc
pusha
inc
ds
or
out
ljmp
movsb
xchg
cmp
add
pop
inc
mov
jnp
xor
in
ja
adc
pop
or
filds
sbb
push
inc
testb
subl
push
mov
or
js
or
or
pushf
stos
out
pop
out
mov
cmpsb
nop
outsl
mov
xor
xchg
in
sbb
addr16
add
mov
fiaddl
in
adc
adc
les
sbb
in
dec
jle
test
sbb
mov
or
mov
mov
push
into
inc
ret
aam
pop
or
sbb
loopne
dec
cmc
and
ret
xor
jge
ljmp
repz
inc
test
mov
insl
jae
rorl
adc
orb
xor
insl
fs
lds
dec
xchg
mov
push
movsl
imul
aas
cmp
sbb
inc
pop
xchg
push
inc
jnp
mov
rorb
mov
xor
pusha
cmp
and
mov
movsl
and
cmp
cmp
add
scas
inc
in
test
test
add
inc
or
mov
cmpb
stos
cmp
jne
sub
cltd
adc
in
movl
mov
mov
jge
push
imulb
lods
dec
adc
inc
in
sarl
arpl
and
enter
aas
and
pop
dec
cmp
xchg
aad
lock
mov
aam
xor
inc
je
aad
sarb
push
divb
std
xchg
adc
mov
mov
in
mov
rcrb
and
add
push
ja
daa
rclb
sahf
fidivrl
jbe
out
mov
mov
jae
and
addl
mov
and
mov
sbb
daa
gs
es
stos
fidivs
test
mov
mov
rorl
jae
sti
and
xchg
lods
push
mov
fsub
add
xor
xchg
jne
pop
pushfw
jp
xor
outsb
jge
lahf
inc
mov
push
bound
cmpsb
addl
fs
push
int
fcmovnu
mov
pop
repz
mov
cmp
cmp
push
dec
dec
or
jmp
ds
push
cmp
fwait
dec
mov
scas
mov
pop
cld
xchg
inc
es
mov
aad
adc
or
sbb
fwait
add
adc
xchg
cld
xor
mov
mov
cmp
sahf
jmp
test
cli
subl
mov
jnp
and
arpl
jne
shrl
and
mov
mov
xchg
push
cmpsl
inc
adc
pop
adc
cld
push
push
cmp
cmp
jmp
xor
push
cwtl
popa
jne
jge
sbb
adc
stos
pop
and
aas
ret
inc
lods
pop
lock
mov
jnp,pn
pushf
rclb
dec
repz
flds
fists
xchg
dec
daa
pop
pop
dec
ds
stc
mov
mov
add
fisubrs
sbb
jmp
sub
cmp
push
inc
ja
add
xor
das
sub
jmp
sti
xchg
aaa
mov
nop
testb
and
sti
lods
cmp
add
leave
sbb
lods
mov
pop
es
icebp
cwtl
cmp
jge
pop
adc
sahf
popa
mov
add
outsb
ds
leave
inc
add
adcb
add
push
ret
inc
pop
in
mov
mov
or
dec
movb
xchg
ret
in
insl
test
mov
mov
popf
rcl
sub
cmp
out
sbb
pusha
loope
cmp
inc
mov
cmpsb
add
popl
cltd
in
xor
mov
push
outsl
loope
dec
xchg
lret
xchg
jbe
push
pop
sahf
push
in
notl
inc
sti
mov
mov
add
adc
cmp
cmp
inc
adc
insb
pop
cmpsl
mov
cmp
jbe
das
inc
ljmp
fcoms
sub
xor
jo
pop
adc
adc
sbb
mov
stc
in
sbb
sub
out
loopne
mov
loop
stc
gs
mov
adc
push
fadds
fs
adc
push
test
inc
iret
xlat
repnz
xchg
nop
mov
dec
xor
xor
mov
dec
flds
bound
dec
mov
cld
movsl
pop
sti
and
roll
lret
mov
sub
jge
faddl
xor
repnz
adc
push
pop
xchg
xchg
xor
pop
adc
pop
jae
outsb
and
pop
jb
xlat
fcomps
mov
lret
adc
pop
push
popf
mov
es
mov
sbb
hlt
mov
popf
push
das
repnz
sbb
xchg
sbb
das
hlt
ret
cmp
pop
mov
popa
or
in
test
jecxz
pop
daa
dec
imul
adc
add
adc
xchg
in
ljmp
dec
mov
xchg
jg
pop
or
fldt
fldl
push
jbe
out
lods
sarb
test
jecxz
mov
xchg
cmp
lods
or
aad
in
jge
adc
xor
imul
pop
shr
stc
cmp
pop
push
stos
jmp
imul
sub
in
bnd
rcl
fadds
xor
repnz
jg
fsubl
flds
adc
adc
or
xor
sbb
icebp
dec
mov
xchg
mov
add
push
lods
push
mov
or
mov
movlps
xlat
xor
mov
loop
mov
ficoml
and
fdivs
test
ret
mov
scas
into
mov
insb
adc
pop
ja
or
dec
pop
xchg
mov
mov
cmp
lods
imul
cmovo
mov
sahf
lret
add
cmc
imul
fbld
mov
mov
push
ja
fs
int
jns
in
ja
mov
in
mov
into
push
push
xchg
outsb
lcall
js
inc
test
mov
or
enter
sarl
leave
mov
xchg
and
pop
testb
and
push
dec
push
and
in
sbb
adc
and
out
aad
lock
cmp
cs
je
fdivrs
push
push
pop
ja
mov
fs
mov
mov
scas
mov
pop
das
into
test
push
aam
or
fidivl
xchg
and
pop
sbb
stos
sub
insl
mov
and
inc
stos
xor
or
in
cmpsb
int3
sub
ljmp
lods
int
dec
xchg
jmp
xor
xchg
add
push
hlt
mov
dec
aas
popa
pop
jp
mov
sub
fmulp
xchg
lret
dec
inc
loopne
fs
call
clc
cmp
imul
sbb
cltd
out
jg
into
cmpsb
jno
inc
or
cli
int
xor
iret
and
sahf
lahf
psllq
cwtl
stos
in
dec
xor
cld
adc
jmp
shll
mov
popa
cmc
mov
mov
mov
xchg
lahf
jo
xchg
in
dec
mov
mov
roll
mov
jge
inc
cmp
out
mov
xor
cwtl
jle
dec
mov
sarb
xchg
in
adc
lahf
jecxz
jo
dec
lods
dec
ljmp
lds
sahf
dec
mov
movsl
mov
leave
out
jo
rol
loop
pop
fdivs
aad
fildll
or
inc
mov
je
outsl
dec
addb
inc
xchg
jge
test
jmp
or
or
or
rol
data16
cltd
rep
sbbl
testl
lods
xor
xchg
dec
mov
vcvtsi2ssl
xchg
sahf
ds
movl
pop
jne
mov
xor
xor
dec
in
out
clc
mov
fldt
leave
and
sbb
or
push
call
lods
fst
jns
call
dec
pop
imul
rorb
jp
push
andb
jnp
cmpsl
mov
adcl
addr16
scas
and
lahf
stos
add
rclb
or
das
pop
xor
add
xlat
push
adc
pop
in
test
mov
sti
pop
loope
imul
jne
sub
leave
cmc
sbb
or
xchg
repnz
push
dec
inc
push
rol
lcall
sbb
dec
movb
push
mov
je
outsb
add
inc
inc
dec
xlat
pop
mov
jmp
int
xor
push
mov
push
imul
inc
stos
nop
outsl
xchg
iret
mov
jecxz
mov
mov
mov
pop
push
mov
pusha
test
pop
or
xchg
clc
sbbl
mov
pusha
popa
pop
mov
pop
lds
repz
cmpsb
jne
insl
lock
hlt
inc
inc
test
cwtl
andl
out
adc
xor
mov
fisttpl
outsb
adc
ret
test
sahf
jae
mov
inc
xchg
add
sub
fiadds
popa
xor
fs
push
clc
and
roll
cmp
inc
pop
push
aam
hlt
cwtl
xor
pop
mov
rcll
outsb
popf
or
inc
adc
insl
inc
je
adc
jnp
xchg
adc
out
and
cwtl
mov
mov
les
pusha
scas
ror
mov
ljmp
call
inc
ret
daa
sarb
lcall
fstpt
add
add
mov
call
jns
jg
xor
jmp
pushf
mov
fstp
sub
sbb
jl
aaa
negl
and
sbb
test
or
jecxz
subb
lock
mov
lcall
push
adc
or
push
push
testl
fistps
inc
int3
sbb
aas
insb
sub
push
cmp
mov
dec
stos
jns
add
mov
and
orl
xor
mov
mov
mov
js
loope
add
xchg
and
stc
daa
sbb
les
xor
sub
sbb
xchg
jg
or
nop
xchg
push
clc
aam
fistps
stos
in
lds
dec
dec
sub
inc
jb
adc
ret
loop
cwtl
push
bound
sub
jnp
ss
fldln2
pop
shrl
sahf
pushl
rcrb
clc
lret
testl
bound
sahf
ljmp
add
xor
xor
lret
ret
inc
mov
jbe
jge
fldt
pushf
fincstp
xchg
sbb
lods
mov
mov
jb
fidivrs
loope
call
jne
pop
pop
xchg
mov
add
sub
mov
daa
xor
ss
dec
stos
rorb
cmp
xor
pop
bound
and
add
xor
fdivrl
call
mov
movl
sub
sarb
xchg
movsb
ret
mov
lods
mov
daa
je
into
daa
dec
cld
mov
popf
xor
js
cmp
lock
and
xor
aam
test
cmp
push
xor
add
das
add
stos
or
mov
sarb
and
inc
mov
test
mov
jle
fldcw
inc
inc
pop
lahf
addb
imul
sbb
cli
sub
push
push
mov
unpckhps
add
and
shrb
ret
mov
push
inc
mov
lret
sub
test
inc
inc
rol
scas
fwait
sti
jl
and
arpl
cmp
sub
push
or
loopne
movsb
test
inc
adc
bnd
pop
pop
fcmovnb
pop
dec
adc
outsb
push
jecxz
outsb
push
push
push
mov
push
mov
aam
dec
out
arpl
cmpsl
les
fwait
mov
fsubl
or
mov
or
jno
je
sbb
mov
imul
push
lods
ss
mov
arpl
cwtl
lods
push
sub
mov
pop
cmc
mov
nop
iret
cmpsb
jge
pushf
pop
pop
mov
loope
push
xor
mov
pop
lcall
mov
cmpl
push
xchg
ret
jnp
xchg
mov
hlt
add
mov
xchg
or
lods
daa
cmp
clc
push
pop
cltd
xor
mov
jecxz
jl
lahf
dec
loope
xchg
out
addl
mov
pop
mov
testb
in
pop
mov
pop
sub
sbb
inc
bound
xchg
push
push
lods
and
jnp
ljmp
mov
mov
dec
ficomps
and
clc
cwtl
rcll
dec
aam
or
push
pop
aam
dec
jnp
push
mov
pop
adc
fwait
cltd
sbb
jne
sbb
fwait
jp
sbb
mov
xchg
sbb
sarl
mov
cwtl
fwait
arpl
int
ret
fldl
adc
cmp
sbb
in
and
lahf
daa
xchg
sbb
in
dec
add
iret
mov
add
push
or
out
xor
fs
in
mov
sbb
ljmp
push
cmpsb
lcall
or
outsb
push
push
into
rolb
xor
mov
sbb
mov
lret
cmp
flds
fsubs
js
jb
movsb
stc
xchg
mov
imul
stc
lock
popf
mov
sbb
cmp
shll
fcmovb
mov
and
mov
cmp
movsb
insl
popf
push
stc
dec
cmp
aad
pop
dec
and
cmp
dec
pop
js
adc
mov
xchg
fbstp
pop
pushf
mov
insb
faddl
push
fists
pushf
std
mov
cli
js
push
mov
sub
lock
lds
call
out
sub
dec
data16
dec
lock
push
mov
test
cmp
mov
cmc
mov
inc
jns,pn
and
movsl
icebp
mov
aad
enter
jle
dec
testl
push
or
sbb
mov
xor
or
fstps
cmp
pop
mov
xor
xchg
push
xchg
jno
ljmp
sbb
xchg
scas
sbb
push
jo
sahf
push
and
pop
imul
cmp
js
pop
pop
push
movsl
jle
icebp
imul
adcb
push
incb
fcomip
clc
xor
test
mov
scas
fs
xchg
and
jb
test
push
ret
or
lret
jnp
rorl
out
dec
ljmp
stc
or
clc
outsl
sub
and
dec
into
icebp
clc
mov
add
out
pop
sarb
mov
push
mov
call
xor
dec
fldt
addr16
leave
leave
iret
hlt
jbe
push
fdivrs
in
pop
ffree
xchg
jnp
mov
sahf
imul
imul
cmpsb
jb
push
daa
jae
orb
pop
mov
cmpb
pop
repnz
sahf
sahf
dec
sahf
push
and
test
adc
stc
inc
lcall
sahf
push
es
cmc
push
outsb
roll
mov
imul
lcall
out
jp
aaa
scas
pop
or
rclb
inc
push
lahf
movsl
adc
cld
mov
ja
pop
pop
and
insb
fstl
mov
scas
popf
pop
and
fucomp
data16
push
cli
and
add
add
cmp
fstpt
sbb
in
pop
and
mov
repnz
int
inc
cmp
fcoms
mov
mov
inc
loop
cmp
xchg
add
notl
leave
dec
cmp
je
sub
rcl
in
cld
mov
mov
fisttps
jmp
push
inc
lods
stc
ljmp
lret
inc
int3
int
adc
lods
mov
hlt
adcb
xor
sub
inc
jg
xchg
mov
mov
call
inc
push
adc
pop
shll
int
mov
int
icebp
add
xchg
jmp
jecxz
mov
pop
scas
xor
stos
sti
xor
stos
push
mov
jnp
and
lock
out
jp
fiadds
mov
pop
cld
add
rcll
mov
push
xor
bound
add
aas
lods
jp
test
enter
xor
xchg
cmp
push
lahf
pop
xchg
xchg
ds
mov
icebp
mov
mov
push
lods
int
inc
and
xchg
test
insl
loopne
xor
xchg
or
xchg
dec
mov
scas
and
daa
cmp
add
lds
and
dec
dec
sub
xchg
inc
arpl
dec
mov
xchg
testb
fisttpl
cmp
add
mov
data16
repnz
rclb
pop
addb
dec
dec
adc
xor
mov
dec
xor
sbb
nop
es
jecxz
xlat
jns
outsb
or
das
push
sub
jno
add
cltd
fsubrp
or
add
mov
push
repz
fdivrs
fimull
mov
xor
or
xchg
int
or
push
cmpsb
jo
es
jp
push
out
pusha
jle
jne
aad
mov
xchg
je
ss
or
lret
mov
int
cwtl
xor
jbe
cmp
jnp
mov
shrb
jmp
jle
dec
dec
cmp
fnstenv
repnz
mov
xchg
jns
jle
jb
add
cmp
ds
ss
xchg
add
or
enter
test
pop
icebp
sub
les
xor
jnp
arpl
cmpsl
stc
pop
lods
rcrw
fisubrs
and
xor
push
and
sti
push
bound
jge
hlt
hlt
jmp
mov
imul
or
pop
in
pop
fnstsw
sbb
or
test
mov
stos
cwtl
fwait
xchg
ljmp
dec
movsl
jno
cwtl
and
hlt
repz
dec
mov
mov
rorl
push
mov
mov
add
dec
xor
mov
inc
and
cli
es
psraw
cmp
cmp
xor
shlb
sahf
dec
xchg
repz
orb
pop
lea
push
push
sahf
lock
mov
cmp
test
stc
dec
mov
aas
pusha
pop
cld
xor
mov
movsb
push
int3
sub
fdivrl
mov
ja
negb
cmp
icebp
xor
ret
pop
lret
mov
xorb
inc
jle
pusha
fbstp
dec
cmp
cmpsl
inc
push
inc
std
add
arpl
in
push
sub
outsb
xorl
xor
shll
mov
int
xchg
je
mov
or
lcall
mov
mov
lahf
aaa
jle
fdivrs
mov
xchg
sbb
std
mov
mov
outsl
out
xor
mov
rorl
push
in
pop
cltd
repnz
es
lds
xor
cmp
lret
sahf
or
mov
fstl
loope
pop
mov
enter
dec
and
das
jns
mov
movsb
call
call
xchg
and
outsl
push
sti
int3
dec
sub
push
xlat
jb
gs
mov
jmp
notl
jbe
mov
rcrb
xor
jns
mov
jbe
std
or
shll
daa
sub
mov
ret
pop
add
xchg
xchg
imul
push
add
in
sbbl
cmp
xor
jne
and
pop
inc
lcall
sub
cmp
ss
insl
out
fnstcw
sbb
out
mov
xor
mov
call
loope
insl
xchg
lods
pusha
js
pop
sub
es
testl
jmp
fsubs
shrb
xor
aam
lahf
jle
dec
mov
mov
stos
enter
xchg
xchg
push
scas
pop
iret
xor
aaa
test
fs
int3
sub
mov
add
push
lahf
sub
aam
push
add
inc
fildl
lahf
stos
adc
fwait
loop
inc
jb
pop
int3
dec
push
aaa
sahf
testb
stc
cmc
dec
sub
push
inc
cmp
or
fldt
and
rcll
inc
pop
test
or
sbb
sub
dec
dec
adc
mov
imul
daa
jecxz
jl
rolb
popf
add
jl
iret
mov
mov
stos
ss
xlat
and
cmpsb
insb
mov
push
aam
sub
xor
xchg
in
fwait
adc
push
lds
push
jle
inc
ljmp
pop
fwait
mov
xor
dec
adc
aad
mov
sbb
xor
pop
mov
test
push
inc
adc
add
ret
jno
push
adc
and
jle
cmpsb
pop
fwait
imul
mov
add
mov
dec
mov
jno
ficoms
test
mov
mov
fldenv
jo
mov
movsl
repz
add
pop
mov
andl
cmp
scas
out
xor
loopne
in
adc
pop
xchg
movsl
mov
xor
mov
ficoml
dec
inc
loope
out
pop
mov
sarb
loope
stos
dec
mov
aas
rcrb
lock
sub
mov
xor
mov
sub
das
adc
adc
in
xor
push
pmullw
movsb
cmc
ss
sbb
mov
sahf
mov
sub
mov
ret
stc
sbb
lret
imul
dec
jne
js
popf
mov
add
and
je
into
jne
xchg
push
mull
adc
xor
pop
stos
add
addr16
mov
push
mov
cltd
ljmp
lcall
icebp
mov
dec
daa
scas
mov
cmp
push
add
mov
jl
dec
lahf
je
insl
mov
push
cs
loope
mov
sub
int3
mov
jge
fadd
push
mov
mov
dec
add
aaa
xlat
enter
push
in
pushf
sub
fisttpl
jecxz
push
mov
cmpsl
loope
mov
adc
or
xor
cmp
jb
cmp
clc
movsl
xlat
sbb
lahf
sub
jl
cmp
mov
in
sub
jl
inc
mov
cmp
pop
jmp
push
gs
mov
lcall
jge
cmp
enter
or
xchg
xchg
xor
jle
push
je
ljmp
xchg
pusha
mov
sub
out
imul
into
ror
sbb
scas
add
je
and
cmp
mov
adc
scas
add
xchg
xchg
js
inc
stos
sub
and
add
and
sbb
js
inc
sbbl
test
cmp
and
inc
add
fsts
scas
jmp
lea
xor
sbb
sub
in
divl
incb
aad
xchg
movsl
cs
or
jae
sahf
inc
jl
push
push
mov
loop
dec
or
cwtl
sti
and
outsb
xor
mov
jmp
mov
or
out
add
lds
inc
xor
loope
int
shrl
pop
mov
lea
or
iret
inc
stos
aam
fadd
dec
cmp
sub
scas
mov
jae
xchg
pop
mov
adc
dec
adc
add
aas
mov
or
sahf
dec
cmpsl
repnz
bnd
aad
add
xchg
call
dec
pop
cwtl
cmp
add
mov
into
test
cmp
jl
pushf
pop
mov
jne
jp
push
movsl
xchg
popf
iret
mov
or
jg
and
lea
mov
aad
test
leave
and
mov
and
loope
add
jmp
imul
es
and
push
insb
sub
mov
xchg
ret
mov
mov
daa
dec
xchg
addr16
push
lods
ror
lcall
or
adc
repnz
repnz
xchg
mov
sbb
jne
arpl
stos
inc
test
dec
jnp
gs
mov
add
into
mov
test
in
jno
pop
mov
and
ljmp
arpl
or
imul
into
aaa
lahf
ds
dec
jecxz
enter
push
xchg
cmpsl
addl
into
mov
loope
pop
and
mov
mov
gs
jbe
data16
movsl
pop
leave
adc
cmp
inc
xchg
cmp
daa
repz
jae
int3
mov
adc
sbbb
adc
fs
pushf
fsubl
mov
sbb
arpl
jle
xlat
cmpsb
jns
jo
jle
iret
lahf
loop
and
dec
adc
movsl
mov
sub
loopne
pop
jle
notl
xchg
dec
cli
cmp
mov
and
xor
rclb
mov
lea
pop
addr16
and
push
add
pop
mov
mov
pop
sub
sub
pop
cmpsl
adc
mov
sub
pop
lods
add
shll
push
hlt
sar
bnd
packsswb
xchg
mov
in
adc
mov
inc
dec
mov
icebp
cmpsb
mov
adc
mov
loop
js
addl
cmp
ret
pusha
inc
fcoms
shlb
lcall
dec
insb
loope
add
int
mov
test
mov
mov
pop
inc
add
fsubl
or
push
xor
inc
ret
adc
sub
sbb
cmp
lea
cmpsb
jno
test
vpavgw
xchg
sbb
test
mov
pop
outsb
push
sbb
nop
fisubrl
and
popa
mov
stos
out
popf
rclb
xchg
jno
insb
dec
sbb
flds
scas
jecxz
mov
fisttpl
lret
scas
cs
outsb
inc
nop
push
xor
or
outsl
and
lret
mov
xor
sub
scas
or
dec
dec
lret
xchg
jmp
mov
dec
mov
inc
stos
ret
mov
sub
movsb
dec
ss
push
xchg
cld
imul
orl
aam
mov
es
and
je
dec
cmc
cmp
scas
add
ljmp
sti
xchg
adc
mov
sub
xchg
fdivl
and
loopne
sbb
mov
cmp
pop
cmc
xor
lcall
sbb
adc
pop
adc
push
ss
cmc
push
ljmp
dec
pusha
in
xchg
mov
jp
fisubrl
dec
ja
cmp
inc
shll
pop
popf
fwait
pop
mov
imul
stos
pop
mov
test
add
sub
jle
aad
adc
jl
sub
ret
in
jbe
mov
xchg
ret
pop
sub
xchg
iret
std
cwtl
mov
add
addr16
sub
inc
js
lods
push
cmc
or
adc
test
inc
mov
hlt
xor
jp
mov
pop
mov
popa
sub
aad
inc
sub
jl
xchg
cltd
lods
adc
mov
lahf
std
cmp
imul
idivb
fsts
mov
sbb
jnp
aad
pushf
jne
mov
jmp
and
jecxz
dec
fsubrl
sub
std
imulb
std
lea
insb
addr16
cmc
fisubs
inc
pop
sub
daa
jne
xor
push
push
xor
inc
fstl
jb
addr16
mov
and
mov
pusha
insl
jne
mov
sub
adc
xchg
inc
arpl
orl
aad
jp
pusha
cmp
push
into
adc
push
ss
pop
stc
pusha
fs
jo
icebp
pusha
xchg
lret
inc
sbb
orl
mov
ss
loopne
lods
mov
cltd
mov
fwait
hlt
push
xchg
push
insb
test
popf
sub
adc
data16
or
test
outsl
adc
sar
mov
xchg
and
inc
lahf
lds
std
idivl
jmp
pop
mov
push
mov
add
lahf
sbb
or
addb
popf
fldcw
std
mov
test
adc
mov
in
cld
jae
fwait
call
es
mov
lahf
sub
je
cli
lcall
jmp
call
dec
repz
mov
cmpsb
cltd
stos
add
pop
leave
call
xchg
sub
data16
imul
das
icebp
pop
stos
scas
mov
inc
adc
sub
jo
pop
xor
mov
add
cmp
scas
add
mov
inc
dec
jnp
jp
add
cmp
orl
mov
icebp
mov
aad
cmp
sub
int3
and
xor
adcb
fldcw
xor
pop
push
outsl
imul
pushf
pusha
mov
inc
outsb
mov
loop
xor
sub
add
jg
and
ja
push
add
stc
ret
jnp
cmp
ffree
out
xor
int
loop
mov
popa
jo
inc
or
xchg
jl
dec
cld
adc
stos
popa
pop
mov
jb
jl
imul
iret
and
test
les
int3
outsb
fyl2xp1
lret
adcl
jo
push
mov
int3
or
rclb
jge
ds
push
pop
and
pop
jl
jecxz
mov
mov
push
daa
add
pushl
jge
adc
jge
iret
sbb
insl
adc
fisubrl
movb
rol
dec
outsl
sbb
pop
adc
mov
js
sbb
mov
push
cmp
nop
push
jne
xchg
mov
cmpsl
sbb
and
iret
xchg
dec
icebp
sti
mov
jns
lock
lea
imul
jecxz
fdivrs
mov
jbe
lea
movsl
dec
popf
jno
pusha
xor
insl
clc
xchg
adc
pop
out
aaa
inc
jno
xor
dec
xchg
fcompl
jne
lds
mov
mov
or
adc
inc
sbb
enter
test
or
xchg
pop
subb
nop
pop
ret
stos
mov
inc
hlt
adc
sub
add
movsb
mov
adc
jns
cmp
mov
dec
xchg
sub
pop
jne
mov
mov
pop
push
imull
scas
outsb
fwait
das
roll
xchg
repnz
lahf
in
xor
scas
xchg
or
xchg
xchg
nop
mov
mov
movsl
mov
stos
mov
scas
jp
jl
jns
and
dec
int3
pop
inc
cltd
cmpsb
mov
mov
js
xorl
pop
jbe
sarb
mov
dec
dec
push
fstpl
call
imul
clc
sub
loop
inc
rorl
fiadds
outsb
jns,pt
and
scas
stos
sub
pushf
imul
dec
add
adc
repnz
add
push
xor
xchg
push
jg
cwtl
pushf
scas
adc
lret
nop
subb
aas
sub
push
stos
daa
imul
mov
cwtl
je
cwtl
mov
dec
mov
mov
mov
dec
repnz
sti
pushf
leave
mov
mov
dec
out
inc
sub
cmc
gs
pop
mov
jb
and
imul
or
scas
cmp
jmp
and
xchg
mov
and
sbb
add
scas
or
inc
shrl
inc
rcrl
pop
lock
push
fldt
lods
mov
nop
jg
xor
cmpsl
and
sahf
lret
push
jne
mov
mov
adc
cld
or
sbb
push
xchg
aam
sub
and
bound
xlat
mov
shll
mov
ss
fistl
aad
jnp
int
rcl
jnp
rcl
cmp
enter
cmp
push
sbb
xor
in
pop
loopne
rcll
push
inc
cmp
mov
movsb
push
stc
jns
adc
jle
imul
repz
adc
lock
lods
dec
test
test
mov
jg
xchg
mov
push
lret
inc
in
std
jae
pop
xchg
mov
stos
sbb
into
mov
pop
outsb
std
ja
jp
push
movsb
xor
adc
cmp
mov
loope
ss
pop
fs
mov
adc
psubsb
and
scas
insl
das
nop
mov
adc
pop
fidivs
shrb
xchg
sub
mov
mov
inc
shl
sub
xor
mov
pop
or
int
adcl
xor
je
mov
push
sub
shll
sub
sbb
add
xchg
inc
push
addr16
pop
dec
sbb
loope
movsl
insl
rorb
pop
sbb
jmp
notl
and
or
xor
jb
ja
adc
pop
lea
push
push
inc
xor
into
lods
sahf
jnp
out
add
adc
push
sbb
pop
sub
out
ljmp
xchg
pop
push
jbe
out
inc
dec
mov
jns
popa
iret
jg
inc
sti
cmp
and
or
shrl
ret
or
ja
mov
mov
sbb
or
adc
aas
cmc
adc
mov
adc
insb
test
cmp
sub
mov
leave
out
cmpsb
or
notb
or
push
sbb
mov
cmc
loope
pop
xor
jnp
in
int
scas
xor
pusha
mov
sbb
or
sti
repnz
dec
shll
in
lds
xor
cmp
fsts
dec
cmpsl
inc
ljmp
sarb
adc
mov
and
pusha
xor
clc
cmpl
aam
repz
cmp
mov
jecxz
std
mov
inc
and
daa
mov
loope
punpcklwd
jle
cmp
mov
xor
or
or
inc
cwtl
adc
je
mov
xor
lret
insl
xor
cmp
aaa
aam
pusha
cs
xchg
push
lea
enter
daa
shll
jns
sub
cli
dec
jno
ret
cmp
mov
pop
iret
mov
mov
je
mov
push
cli
les
add
in
pop
cmc
add
sbb
inc
mov
jae
dec
jge
push
imul
js
mov
std
lea
sbb
outsl
repz
test
and
int3
movsb
dec
lret
xchg
xchg
idivl
jp
pop
frstpm(287
loope
nop
repnz
xchg
loop
xchg
or
stos
and
cmp
mov
push
fidivl
push
stos
cmpsb
jge
jno
mov
aaa
mov
adc
add
mov
push
icebp
jge
mov
cmp
pop
push
lods
pushf
jg
fs
sbb
aad
movsl
stos
gs
in
addb
xchg
cmp
leave
push
dec
lret
mov
sbb
cmc
cmp
jno
mov
cmp
notb
ds
pop
imul
mov
add
jg
push
icebp
lock
je
sbb
dec
inc
xchg
cmp
stos
dec
add
push
jno
jno
js
lods
mov
sahf
mov
sbb
xchg
jns
testl
outsl
and
cmp
ret
lods
mov
lcall
dec
hlt
orl
pop
jb
dec
call
jmp
fwait
les
in
mov
mov
out
bnd
xor
andb
dec
lds
mov
cmp
repnz
pop
out
mov
jle
stos
pcmpgtb
push
xchg
stos
jge
insl
xor
and
push
ja
inc
dec
cmpl
push
loopne
sbb
adc
jle
popf
jl
jo
mov
fisubrl
faddl
xor
mov
mov
push
xor
shll
xchg
sbb
clc
ret
cld
andl
push
lds
testb
lods
fdivs
fmul
stos
xchg
in
pop
mov
jp
out
and
push
fs
mov
adc
mov
lea
loopne
inc
jl
jmp
adc
mov
les
cmp
cmc
stos
push
push
mov
pop
andb
stos
lea
inc
rclb
shlb
scas
mov
xor
hlt
std
daa
stos
xor
fisubl
cmp
roll
daa
outsl
mov
testb
mov
lret
dec
cltd
cld
in
xchg
insl
push
mov
jp
xchg
imul
or
xchg
xlat
or
ds
fcmovne
cmp
add
xorl
fisubs
cmc
xchg
test
int3
sub
and
add
adc
pop
pop
fidivl
and
bound
push
mov
sub
sbb
inc
ss
shll
adc
xchg
sbbb
and
push
adcb
scas
sahf
mov
ja
shl
mov
sarl
inc
jp
lahf
nop
aas
fistl
add
push
push
pop
mov
dec
mov
lret
fsubrl
mov
out
dec
jb
pushf
fwait
sbb
lret
or
cmpsb
aam
and
popa
out
pop
mov
sar
hlt
aaa
or
push
cmc
mov
ljmp
aad
jns
int
add
nop
and
addr16
scas
push
loop
mov
mov
lea
jg
lahf
movsl
jg
rclb
jle
inc
add
jnp
rcll
ss
or
mov
and
int
dec
nop
cld
xor
bound
fdivr
mov
xchg
jb
mov
test
out
ret
xchg
jge
div
or
dec
sti
xchg
bound
jne,pn
pop
andb
inc
subb
into
rclb
pop
sub
sbb
jae
adc
dec
pop
rorb
xor
addb
mul
cmp
jmp
push
sbb
movsl
inc
lret
mov
cmp
int
xchg
lods
js
xor
mov
movsb
jno
js
xor
cltd
sub
pop
shr
mov
push
xor
lock
std
dec
sub
cmp
daa
mov
loop
xchg
push
cmpsb
adc
cmp
in
xor
adc
loope
fucomp
cli
jp
rolb
out
in
pop
aam
xchg
imul
ljmp
adc
mov
shlb
mov
je
imul
pop
mov
pop
adc
cmpsb
pop
test
mov
lret
out
mov
jg
mov
fildll
xor
shll
es
pop
xchg
pop
insb
sti
out
add
and
sub
xor
leave
and
xchg
jno
popa
cmpsb
js
adc
pop
cli
mov
mull
push
xor
enter
ret
xor
jl
cmp
sbb
sub
inc
pop
cwtl
jl
into
push
loope
fisttpll
sbb
or
mov
mov
cmp
ret
jl
mov
loop
or
test
inc
add
xor
dec
gs
push
popa
popa
push
dec
mov
cmp
pop
xor
int3
lods
adc
rclb
push
mov
out
cmp
inc
adc
scas
xor
iret
mov
jbe
sub
ds
stos
jl
cli
fdivl
sbb
les
mov
icebp
add
cmp
lock
aas
pop
or
mov
cwtl
sbb
insb
inc
movsl
int
fdivs
dec
jp
pop
imull
push
fcomps
pop
test
push
scas
sbb
inc
cwtl
jb
mov
xchg
iret
mov
ja
pop
ffreep
out
mov
stos
flds
daa
cmp
or
scas
mov
pop
adcb
cmp
jp
or
inc
cmp
cli
sub
jb
sahf
and
stos
inc
std
push
sbb
mov
mov
nop
add
mov
push
loop
pushf
xchg
xchg
mov
aaa
sbb
std
mov
cs
xchg
rorl
ret
sar
cmp
inc
insb
mov
cwtl
adc
mov
push
dec
lret
mov
or
cmp
sub
cld
mov
inc
mov
xchg
cmc
out
jmp
sbb
enter
dec
sbb
push
andl
mov
clc
scas
and
add
outsb
shll
mov
icebp
mov
mov
xchg
xor
andb
in
sbb
xchg
loope
cmpl
sub
xchg
dec
es
movsb
lcall
jnp
mov
rol
insb
lahf
dec
push
jae
in
and
jecxz
cmp
das
inc
pop
rcll
mov
jp
adc
mov
das
jbe
ud1
or
sti
lea
iret
mov
out
addb
mov
or
or
stc
and
shrl
enter
cli
mov
jle
shrl
mov
cwtl
xchg
sar
add
es
lahf
leave
sub
cmc
ja
rcll
adc
loopne
jg
or
lahf
xchg
sub
in
sub
cmp
push
movsb
and
aaa
xchg
xchg
pop
int
int
push
fs
popf
inc
mov
or
std
push
push
repz
dec
ficoml
je
cs
clc
adc
setl
mov
imul
dec
lret
inc
adc
stos
inc
add
daa
mov
or
mov
ds
lock
lcall
cmp
push
bound
loopne
pop
out
aad
dec
iret
jp
inc
pop
pop
pcmpeqw
andl
xchg
cwtl
test
ss
test
fisubl
sub
mov
insl
jo
sub
mov
sti
mov
add
shlb
push
xchg
ds
orl
subl
pusha
and
enter
xor
xchg
xor
mov
pop
add
inc
sub
test
subb
cmp
ret
xchg
push
mov
ljmp
push
sti
stc
dec
popa
fs
data16
xchg
loope
push
aas
pop
pop
gs
fdivrs
adc
jns
andl
fcmovbe
nop
mov
jb
mov
jnp
in
add
push
mov
in
stos
in
inc
push
adcl
add
ds
pop
into
sub
sbb
push
stos
pushf
fcmovnb
cmp
bound
inc
std
inc
sbb
pusha
jno
xchg
lcall
mov
imul
inc
push
nopl
push
xchg
jg
xchg
mov
in
add
addr16
and
repz
cmp
xchg
sub
push
loopne
mov
enter
shll
les
xchg
enter
dec
dec
mov
iret
jecxz
add
sarb
jno
shll
sub
jae
jo
mov
mov
pop
imul
sbb
push
pop
sbb
pop
call
repz
ja
popa
in
mov
inc
mov
sub
push
fidivrs
push
jle
jle
int
add
mov
sbb
stos
mov
ds
add
call
push
adc
stos
mov
jae
push
inc
adc
add
jo
add
loope
mov
sub
lret
jae
and
fisttpll
xlat
stos
mov
pop
or
jl
push
aad
or
adc
outsb
daa
xchg
push
test
shrl
pop
popf
xor
movsb
adc
mov
xor
adc
cld
stc
lret
mov
sub
mov
ljmp
jge
aas
xchg
jb
dec
mov
out
ds
xchg
dec
fcomip
idiv
mov
sbb
stos
loope
pushl
cmpl
js
mov
hlt
lcall
cmp
push
xor
inc
test
xchg
jp
lcall
xchg
xchg
mov
xor
and
subl
push
movsl
arpl
mov
leave
ds
out
push
sbb
xor
inc
dec
jmp
out
jmp
add
push
push
cmp
or
clc
pop
aas
jg
test
lcall
xchg
dec
test
cli
push
pop
lock
jl
xchg
mov
inc
xor
dec
mov
bound
div
adc
subb
adc
jg
imul
pop
mov
scas
cmp
fistps
add
pop
lea
sbb
sbb
stos
dec
in
test
mov
in
or
sbb
je
push
inc
adc
in
shll
insb
or
jae
dec
push
iret
and
jmp
mov
push
jp
add
adc
or
inc
xchg
xchg
jmp
pop
in
push
inc
sbb
dec
cwtl
shll
dec
in
push
mov
mov
jecxz
mov
inc
dec
popa
sti
add
xor
and
movsl
lock
pushf
cmc
aaa
imul
pop
adc
pop
add
xchg
inc
mov
push
iret
push
mov
mov
pop
out
dec
dec
add
cmp
mov
add
xchg
test
xor
xchg
mov
add
sbb
iret
mov
xchg
hlt
pop
sub
and
jo
imulb
lock
mov
loope
mov
lcall
mov
int
adc
sbb
into
lahf
inc
sub
and
adc
sarb
xchg
jge
lret
cmpsb
push
dec
pop
out
jne
test
pop
inc
inc
push
aam
xlat
add
addr16
xor
mov
mov
out
xlat
loopne
pop
mov
mov
icebp
cmp
ja
sahf
xchg
xchg
mov
or
xchg
add
xor
adc
out
cmp
jecxz
jp
sbb
jg
inc
mov
aad
mov
sbb
and
out
pusha
mov
push
test
dec
fs
ja
into
cmp
pop
mov
mov
and
jb
mov
xchg
or
test
sbb
mov
xchg
je
add
push
inc
add
jl
stos
je
mov
cwtl
je
dec
xchg
mov
sbb
ds
repz
sub
loopne
ds
rep
fnstcw
xchg
ds
or
aad
das
jge
mov
sahf
and
pop
clc
cmp
loope
orl
out
scas
dec
mov
mov
inc
pop
mov
rolb
mov
sbb
outsb
xlat
xchg
ss
jae
test
jp
sti
xor
test
mov
jle
cli
push
in
lea
loopne
mov
adc
aas
test
shrl
and
add
aam
into
mov
sbb
dec
jmp
adc
sub
adc
sub
jge
pop
lods
hlt
dec
xor
fidivrl
and
mov
jle
inc
push
clc
and
jo
insb
mov
inc
stos
iret
enter
inc
out
cld
aas
xchg
jl
lret
pushf
or
stc
mov
test
rcl
xlat
in
sub
xchg
filds
jp
dec
jge
cmp
add
scas
stos
jge
cmpsl
pop
inc
mov
jle
jae
es
and
adc
push
mov
negl
shr
daa
lahf
adc
jns
dec
js
out
ljmp
insb
in
pop
lret
or
in
and
insl
mov
inc
rcrb
adc
and
or
icebp
jmp
adcb
hlt
cmc
outsl
and
enter
jbe
mov
push
cmpsb
adc
mov
sbb
jmp
xchg
pop
push
pop
scas
jmp
mov
fsubrs
jecxz
repz
ljmp
arpl
xchg
imul
arpl
jo
imul
mov
jbe
out
into
aas
bound
and
popl
popf
mov
xchg
fcom
xchg
mov
lds
mov
inc
push
push
insb
pop
clc
movsl
sub
lahf
stos
sub
dec
notb
sbb
mov
gs
lds
lds
cmp
fisubrl
mov
adc
lods
test
and
repz
in
push
dec
sar
lea
lds
mov
push
aam
push
lcall
xor
push
xchg
xor
ljmp
cmp
in
add
jno
mov
gs
outsb
pushf
sarb
out
cmp
jno
ljmp
and
jecxz
cs
mov
cmp
cld
xchg
scas
sub
enter
scas
jns
popf
icebp
lock
int3
pop
xchg
cmpsl
adc
leave
jg
pcmpgtw
mov
mov
roll
movsl
enter
cs
mov
xor
inc
cmp
push
shrb
xor
imul
mov
cs
sub
sbb
pop
push
add
mov
pusha
jne
rcll
jnp
xor
fcmovnbe
jne
or
notb
fcoms
lock
jge
inc
mov
out
les
jge
mov
in
clc
xchg
pusha
pusha
test
scas
scas
out
adc
dec
test
fistpl
mov
mov
popa
jbe
pop
inc
data16
push
into
cltd
addr16
push
mov
repnz
fwait
pop
idivl
cmp
pop
icebp
xchg
inc
add
inc
lock
out
sahf
aaa
and
rcll
jb
add
mov
cs
in
dec
dec
jnp
mov
adc
jae
sbb
sub
and
mov
popf
or
add
sub
rcrl
rolb
jne
dec
mov
xchg
outsb
out
mov
addr16
inc
jmp
loopne
pop
jmp
and
rcl
lea
push
sbb
adc
lea
jp
xchg
jl
scas
cmp
add
add
xchg
in
xchg
xor
call
xchg
outsl
xchg
sub
rcr
int
mov
push
ljmp
fstpt
hlt
rclb
push
rorl
jnp
jae
rorl
and
arpl
inc
fdivs
cmpsl
mov
movsl
push
pop
jge
icebp
dec
cmp
xchg
mov
cmp
mov
mov
dec
bound
fcmove
push
sub
subl
pop
lret
aaa
fidivs
mov
notb
mov
lahf
add
test
inc
inc
ret
pop
ds
and
imul
and
fnsave
aam
add
pop
sbb
push
in
rol
dec
jno
pop
stc
push
sub
jge
in
sbb
push
cmp
adcb
loop
ja
xchg
sahf
shrl
xchg
sub
movsb
xor
and
aaa
scas
xchg
xchg
icebp
push
sub
push
sarl
jb
xor
and
lds
scas
sbb
std
data16
fildll
push
in
add
jg
ja
enter
pop
popf
sbb
daa
push
cmp
or
pop
daa
pop
xchg
sahf
jl
lock
cs
and
inc
orb
aas
je
jge
sbb
outsb
ljmp
mov
adcl
add
push
cmc
rcrl
or
adc
mov
jmp
inc
push
push
jg
incl
lahf
xchg
mov
mov
clc
std
push
jbe
repz
das
in
das
pop
fcoms
xor
lret
or
mov
lret
loope
roll
jns
andb
js
mov
out
and
or
lcall
insb
mov
call
repz
adc
push
in
jns
roll
cmp
or
pushf
fsubr
sub
mov
scas
sub
pop
fildl
mov
mov
sub
inc
js
pusha
fwait
popf
push
cmpsb
std
inc
mov
aad
repz
cmc
cmp
mov
cmp
jno
shrd
stos
lods
out
adc
xor
jmp
dec
lods
out
jg
mov
popa
jecxz
mov
icebp
sbb
scas
cs
mov
cmpsl
repnz
in
mov
in
push
dec
add
sahf
daa
je
cmp
es
andl
cs
mov
mov
imulb
ds
dec
subl
arpl
gs
sbb
repnz
mov
inc
pop
add
hlt
mov
pop
lock
xchg
push
shlb
mov
pop
or
and
aaa
xor
aaa
sub
hlt
hlt
ss
dec
aam
shlb
test
dec
pop
div
adc
push
dec
pop
ss
and
sbbl
cmc
push
test
gs
lcall
cmp
add
ja
mov
lret
idivb
cmp
pop
insb
inc
subl
incl
xor
ljmp
pop
dec
call
loope
hlt
push
icebp
out
loop
jge
loop
cmp
pop
cmp
pop
xchg
lods
xor
jle
or
mov
add
ja
jns
or
pop
push
dec
fsub
adc
adc
imul
fiaddl
pusha
mov
jmp
sbb
test
testb
pop
imul
mov
in
jg
test
dec
push
into
adc
lods
cmp
icebp
lret
or
pop
mov
addr16
push
jecxz
loope
mov
pop
jne
cmc
ds
mov
leave
sbb
cwtl
mov
sbb
das
dec
imul
fmul
je
leave
loop
xchg
xor
mov
sub
je
sbbb
stc
lcall
and
repnz
data16
push
rorl
test
dec
sarb
cmp
pop
insb
out
inc
lock
fs
jae
cs
dec
mov
sub
push
jns
mov
dec
fs
sti
and
jp
shll
cmp
mov
addr16
jae
sbb
mov
lahf
daa
out
aaa
in
aad
lods
sub
lea
mov
ret
pop
xlat
cmp
leave
xor
hlt
shrb
and
ljmp
lret
add
sub
addr16
dec
sbb
dec
insl
mov
es
jnp
je
jmp
nop
push
or
ret
mov
cmp
mov
enter
mov
adc
jg
and
or
movsl
push
in
popa
xor
add
out
cmc
or
je
into
rorb
popf
cli
and
jae
cmp
xchg
popf
repz
dec
in
lock
jbe
mov
test
cmpsb
add
sub
xor
adc
outsl
mov
dec
dec
xor
sbb
insl
sub
daa
sub
aas
out
jge
fs
xchg
cmp
cld
hlt
in
jp
dec
andl
cltd
adc
int3
jne
scas
lret
sbb
xor
mov
mov
add
pop
stc
mov
movsb
into
push
jne
fdivrl
fidivl
movsl
add
pop
std
cmp
lods
clc
ja
js
icebp
lcall
mov
adc
mov
xchg
inc
nop
xor
jno
xchg
xchg
imul
repz
mov
sub
idivb
int
ficomps
and
daa
imul
adc
cltd
jae
sub
inc
mov
in
xchg
lcall
pop
xchg
movb
adc
ja
fs
push
inc
fdivrp
or
pop
out
loope
repnz
pop
mov
lods
out
lahf
sbb
inc
push
pushf
jmp
gs
push
or
movsl
iret
pop
sbb
jbe
lods
and
ret
mov
jbe
xchg
call
mov
add
stos
scas
push
mov
pusha
sbb
test
jl
rcrl
fcmovne
jg
adc
sub
sbb
xchg
shll
xchg
jl
or
pop
add
hlt
data16
daa
mov
aas
filds
insb
or
je
mov
adc
out
cltd
sbbl
push
add
sahf
and
mov
imul
lcall
js
aad
and
inc
aad
dec
xor
sub
jnp
mov
adc
rcrb
inc
pop
mov
jg
cmp
xor
insl
or
ret
fbstp
je
dec
inc
outsb
lea
or
data16
rcrl
roll
pushf
sbb
sub
hlt
fisubrl
dec
jg
ret
test
shrb
sarb
jmp
push
pop
fnstcw
cmp
sti
clc
imul
icebp
mov
rcrl
push
stos
test
mov
push
dec
mov
mov
and
jae
xchg
lods
imul
ja
dec
fsts
cmpsb
xchg
shlb
movsl
xchg
je
xor
pop
cmp
xchg
cmp
add
or
fdivrl
test
sub
insb
jmp
daa
add
sbb
jg
lret
shr
int
daa
jg
insl
mov
in
imul
sub
inc
mov
inc
add
aam
neg
and
cmp
jo
adc
xor
jge
outsb
test
adc
push
rclb
pop
sbb
push
xchg
add
and
sti
xchg
fldenv
aas
jg
ss
pop
aad
cli
fwait
sbb
daa
loopne
iret
pop
or
pop
das
loope
mov
inc
jg
sub
inc
lahf
lods
and
add
lret
dec
pop
js
movlps
mov
mov
cltd
jb
clc
xorb
sbbb
mov
lods
pop
div
pop
mull
aam
mov
xor
mov
mov
ljmp
and
lahf
fistps
addr16
pop
and
mov
mov
and
ja
push
repz
adc
cmp
jmp
fildl
dec
mov
into
mov
lcall
dec
cmp
jnp
mov
mov
jo
lds
ret
mov
nop
lods
xchg
or
js
jl
stos
movsl
cmp
or
or
aaa
int
in
push
add
inc
sbb
stos
pop
add
and
add
cmp
stc
push
div
aaa
pop
push
push
movsb
ss
pop
scas
pop
outsb
mov
jl
inc
mov
inc
insb
push
mov
dec
inc
xchg
inc
pushf
dec
cs
sbb
movsb
nop
adc
dec
cmp
or
inc
mov
fcoml
scas
cmp
stc
and
rolb
sub
mul
jmp
and
xor
mov
adcl
fnstenv
sub
add
mov
dec
movsl
jbe
xchg
iret
xchg
jge
in
cs
pop
adc
fcoms
leave
mov
mov
fidivs
lret
sbb
push
push
mov
scas
cmp
je
fcmove
dec
jb
test
sarb
push
enter
flds
sahf
xor
ds
repz
dec
add
pop
push
into
cmpsb
mov
test
enter
inc
adc
test
js
lcall
jae
filds
outsb
push
bound
and
xchg
inc
xor
out
dec
xchg
lret
iret
loopne
xchg
lcall
test
pop
js
inc
mov
mov
sbb
inc
cmc
mov
push
mulb
xor
sub
cs
andb
cmpsl
cmpsb
test
fcoms
int
loopne
notb
mov
fistps
or
push
pop
xchg
scas
imul
xchg
outsl
into
icebp
push
dec
pop
ds
and
pop
inc
push
jmp
add
inc
dec
and
icebp
ds
mov
cli
pop
dec
mov
push
xor
insb
mov
popf
adcb
mov
push
mov
sti
outsb
inc
pop
pop
adc
stc
push
test
les
dec
mov
mov
aas
fwait
sbb
push
xor
mov
jg
sahf
flds
add
xchg
insb
or
jp
adc
inc
call
cmc
inc
sbb
out
cli
aad
mov
pusha
xor
jne
int3
sbb
pop
lcall
andb
pop
adc
shl
mov
sbb
out
add
adc
xor
jns
fistpll
jmp
fstpt
adc
pop
addr16
es
cmpsl
loope
mov
add
fdivrp
roll
lock
mov
push
fdivp
lock
not
mov
outsl
or
pop
push
fisubs
sbb
mov
test
xchg
ljmp
add
mov
movsb
push
pop
cmp
lret
cmp
fwait
mov
cwtl
jbe
cmp
pop
mov
mov
cwtl
add
pop
jne
ficomps
out
stc
cmp
adc
pop
pop
test
ucomiss
mov
outsb
bound
addr16
ja
imul
push
and
mov
rorl
sbb
mov
insl
push
mov
push
pop
insl
xchg
shufps
mov
idivb
inc
repnz
scas
add
imul
jno
fistl
dec
scas
pmaxsw
aas
jne
loope
cmpb
test
jo
sbb
pop
lds
jae
fdivl
inc
pop
inc
mov
fs
lock
add
adc
cmp
das
fisttps
jmp
dec
mov
add
push
mov
push
push
sub
cmp
cmpsb
sbb
outsl
pop
daa
addr16
bound
rclb
adc
pop
movaps
or
inc
js
insl
sbb
push
fistl
mov
add
ret
mov
test
loope
adc
mov
mull
or
mov
pop
cmp
out
ret
push
fbld
fidivrl
loope
ret
movsl
or
push
insb
test
cwtl
pop
fimull
inc
movsb
sbb
fs
adc
iret
insb
repz
inc
xor
mov
mul
loope
inc
xlat
mov
mov
xchg
sub
jb
cmp
lea
inc
inc
imul
cli
in
test
push
in
divl
adc
mov
bound
or
and
mov
out
pop
push
sti
mov
or
jle
leave
xor
imul
pushf
pusha
push
jp
mov
loop
pop
jl
pop
fsubrp
push
arpl
mov
je
int3
mov
dec
ja
jae
gs
movlps
sbb
fidivrl
pop
imul
pop
popf
aad
xlat
or
dec
repnz
iret
or
es
dec
test
inc
loop
cmpsl
pop
lods
orl
dec
sub
xor
lods
sahf
xor
cmpsl
icebp
add
adc
cmp
daa
gs
dec
test
jns
cmp
jns
rol
or
fimull
icebp
imull
stc
popa
sbb
xchg
or
popf
cmp
cltd
xor
repz
jae
jmp
adc
push
pop
mov
mov
jp
pop
and
ss
test
lcall
add
sub
addb
inc
sbb
je
cmpsl
jl
add
jecxz
mov
enter
inc
mov
inc
xchg
push
scas
xchg
and
out
xor
loope
xor
hlt
sti
clc
mov
dec
xor
add
cs
push
adc
rcll
jo
cmp
mov
sub
pop
add
sbb
movsb
pop
sbb
sub
jl
add
push
arpl
out
dec
mov
rol
icebp
aas
add
xchg
jno
pop
mov
nop
add
fcmove
movsb
jae
scas
cmp
dec
sub
mov
dec
mov
popa
fwait
cli
mov
movsl
mov
jno
or
jb
lahf
cmp
and
in
xor
nop
lods
push
fidivrl
pop
test
xchg
push
arpl
add
or
jecxz
ficoml
push
repnz
fldcw
adc
inc
mov
mov
jle
add
jo
icebp
in
adc
mov
sub
xchg
or
popa
cmpsl
inc
pop
mov
xor
xchg
or
iret
mov
mov
push
jns
jno
push
orb
movsb
lock
das
mov
iret
out
push
adc
stos
mov
mov
add
popa
dec
lock
test
push
mov
adc
cmp
pusha
xlat
add
push
xchg
roll
call
mov
adc
mov
inc
nop
jp
xor
dec
movsb
insb
fldl
adc
xchg
addb
xlat
pusha
repz
sbb
iret
push
mov
pop
xor
repz
jmp
rolb
jns
and
inc
daa
inc
mov
push
jbe
aas
inc
sub
mov
cwtl
lret
sbb
sbb
push
loop
mov
pop
jne
mov
add
xchg
inc
adc
imul
xchg
cmp
dec
mov
pusha
out
pop
add
into
cmpsb
or
insl
aas
insb
push
ds
int3
xchg
lcall
mov
adc
data16
fs
mov
sbb
push
outsl
xor
xor
dec
xchg
lahf
sbb
mov
addb
jle
enter
cmp
bndldx
roll
sub
negl
xchg
mov
movsl
jle
or
test
cmp
adc
loopne
mov
ss
or
and
stos
jbe
cmpsb
mov
ficompl
arpl
dec
clc
dec
push
sbb
pop
jge
sub
faddl
insb
ds
mov
mov
xchg
or
int3
test
sub
xchg
xchg
cmp
mov
push
xlat
mov
in
sbb
movsl
test
add
and
mov
call
mov
xor
dec
das
push
jnp
repnz
int3
mov
repz
inc
pop
cmc
dec
pop
mov
imul
cmp
adc
movsb
mov
mov
and
and
or
imul
lret
inc
mov
and
clc
pop
stos
sahf
jle
xchg
mov
enter
ljmp
test
leave
push
sub
iret
xor
dec
mov
inc
fists
inc
push
pushl
or
popa
iret
mov
xchg
pop
mov
inc
aad
rcll
fdivrl
in
and
outsl
les
mov
mov
xlat
or
add
or
xchg
xchg
inc
fcompp
lahf
movsl
push
sarl
xchg
lock
sub
call
out
xchg
scas
fnstsw
add
or
nop
pop
xchg
filds
shll
and
aas
repnz
add
pop
aam
ret
and
or
lds
outsl
or
dec
pop
sti
and
pop
invd
cmp
jp
mov
decb
ret
enter
mov
xchg
fwait
addr16
insl
add
xor
xor
push
es
or
mov
inc
push
adc
lret
cli
mov
mov
mov
or
in
or
and
mov
jle
notl
dec
pop
mov
dec
aam
xchg
mov
repz
repz
pusha
dec
push
add
pusha
xchg
cmp
push
pop
mov
xchg
in
cmpsb
fdivl
and
xchg
out
jmp
add
or
xor
xor
shrb
cwtl
pop
xchg
std
lret
mov
dec
loope
lret
arpl
pop
shlb
movsb
xor
shlb
dec
push
adc
arpl
fst
mov
mov
jae
mov
in
ret
shrb
adc
rorl
pushf
lds
jnp
loope
cmp
add
ja
lea
cmp
loopne
loop
das
sub
mov
addr16
sahf
mov
stos
aaa
insl
dec
rorb
and
imul
lods
inc
leave
adc
dec
dec
sbb
pop
dec
sub
adc
movsl
cmp
test
pusha
or
stos
adc
jne
jbe
mov
aam
cmc
clc
ds
push
ljmp
or
sub
dec
push
jmp
cwtl
movsb
add
jp
push
mov
int
add
icebp
cmc
int3
push
and
in
mov
nop
sbb
jmp
pop
aad
mov
pop
orb
mov
iret
cltd
ret
or
mov
icebp
cmpl
fisttpll
mov
jecxz
or
aas
lea
mov
data16
pop
test
arpl
inc
cwtl
push
pop
clc
mov
test
js
xchg
repnz
les
punpckhbw
dec
pop
arpl
xchg
push
popa
pushf
jnp
xchg
inc
divl
jp
jno
mov
leave
int3
xchg
dec
jo
cmp
rcr
add
cmpsb
mov
movsb
int
cmp
pusha
les
dec
cmp
mov
fmul
jnp
pop
js
sbb
add
and
mov
bswap
push
shrl
xchg
es
dec
insb
in
fdivr
enter
hlt
rcll
fiadds
lods
adc
dec
pop
test
cmp
mov
and
pop
jecxz
pop
enter
mov
push
and
jne
jbe
das
bound
pop
shr
loope
aas
cwtl
mov
cld
outsl
sarl
inc
leave
stos
out
fisubl
adc
jg
popa
fildl
cmp
xor
ljmp
pop
add
rcrl
pop
dec
add
das
fidivs
jne
xor
mov
jg
pop
cmp
add
adc
out
xchg
inc
fmull
movsl
mov
jge
xor
push
mov
es
cld
cmp
mov
mov
jge
popa
jmp
mov
xchg
arpl
jnp
cmc
es
jecxz
into
mov
xor
lock
rorb
stos
arpl
xchg
cmc
cmp
shl
dec
sub
add
dec
outsb
aam
test
and
inc
jmp
xor
xchg
xchg
roll
or
cmp
mov
outsb
smsw
mov
sbb
ffree
test
jbe
dec
shrb
repz
pusha
iret
push
and
notl
lret
and
jno
std
insl
and
adc
imul
xor
mov
imul
sbb
les
imul
aaa
mov
in
push
out
and
in
push
loope
gs
add
lods
mov
pop
and
clc
sub
or
add
lods
data16
call
fsubrl
push
rcrl
add
jno
push
sub
dec
xorb
lods
cmc
add
orps
addr16
mov
jae
push
sub
lcall
aas
into
ret
in
lret
pop
dec
push
adc
xchg
mov
xor
jnp
loope
ja
xor
xlat
xchg
insb
cmp
dec
pop
sahf
aas
cmp
repnz
mov
sahf
mov
les
fwait
inc
pop
out
icebp
adc
jle
pop
jecxz
cmp
inc
xchg
adc
stos
out
or
mov
gs
sub
or
int3
mov
mov
jb
and
jg
cmp
fistpl
push
cmp
icebp
lock
stos
push
mov
lea
push
cltd
mov
push
scas
xor
rclb
push
ret
mov
fistps
cld
lret
or
mov
or
test
hlt
ja
push
cli
and
adcb
orl
js
test
fsubrs
xor
mov
test
orl
ss
movsl
cld
mov
fsubs
rcll
sub
int3
popf
mov
or
add
adc
test
cs
pushf
sub
fiadds
xchg
cmp
fdivr
sahf
mov
push
in
dec
mov
and
jbe
or
mov
add
adc
lock
jnp
movsl
push
rcrl
inc
lret
or
dec
or
stos
in
aad
sub
das
das
cmp
hlt
mov
fld
imul
mov
sub
sub
orl
movsb
xchg
int
idivb
jnp
mov
div
jl
xchg
pop
and
jp
mov
imul
push
out
inc
xchg
adc
out
pushf
adc
jno
fcoml
cmp
push
fidivl
jg
and
loope
data16
lea
xlat
xchg
in
adc
mov
or
cmp
je
insl
pushl
pop
sub
cli
mov
lret
lods
mov
add
push
cmp
jecxz
mov
in
dec
push
lods
sub
xor
test
in
sbb
in
cmp
inc
pop
into
mov
sub
add
dec
pop
lahf
mov
xorb
fldt
sti
or
sbb
sbb
cmp
and
scas
xlat
mov
jge
jae
dec
xlat
or
fxch
ret
inc
test
lret
hlt
dec
jbe
add
hlt
inc
sbb
cli
das
es
or
sahf
fs
mov
movsl
dec
mov
sahf
and
xor
mov
adc
aad
and
and
pop
adc
stc
cwtl
xchg
leave
insb
jnp
and
xchg
scas
push
push
inc
mov
adc
and
mov
js
outsb
xorb
das
xlat
adc
inc
iret
xchg
push
inc
pop
pop
call
dec
cs
fadds
test
or
loop
repnz
xchg
jnp
sarb
inc
lret
pop
cs
adc
fsubs
aas
jb
xchg
cli
or
sbb
imul
jo
hlt
sub
jmp
stos
into
mov
push
popf
js
sub
or
push
and
cmpl
sub
push
hlt
in
xor
pop
sahf
loopne
or
jns
mov
xor
jne
pop
cmp
icebp
outsb
inc
ret
mov
sbb
pop
jle
arpl
pop
scas
sub
sbb
sbb
test
xor
shrb
push
sbb
push
js
arpl
loope
fldcw
lods
das
loop
inc
or
sbb
out
dec
subb
pop
or
test
jmp
jecxz
enter
fists
loop
mov
faddl
cltd
cli
xchg
and
repz
loope
mov
lret
xchg
sub
push
ss
sub
add
outsl
mov
loop
das
mov
mov
stc
fnsave
lret
popf
xchg
xchg
negl
sbb
and
jns
jge
jb
mov
movsb
pop
adc
imul
sub
dec
rcll
in
fs
add
cmc
inc
test
mov
add
xlat
and
inc
mov
iret
aad
ds
push
xor
pop
or
or
inc
xlat
or
mov
js
cmp
mov
cmp
fnsave
pop
push
jnp
mov
jmp
insl
pop
rcll
push
mov
push
xchg
dec
scas
pop
push
push
mov
popa
push
mov
roll
cmpsl
popf
into
adcb
mov
sbb
xlat
out
mov
xor
idivb
idivb
add
mov
dec
icebp
dec
scas
fstps
ja
pop
sahf
loopne
push
sub
scas
cmp
into
in
daa
cld
stos
dec
leave
sti
mov
pop
enter
cmp
andl
enter
sub
ja
xchg
mov
and
sbbl
mov
adc
sti
inc
jle
test
push
xchg
into
dec
outsb
adc
movsl
mov
js
pop
mov
sbb
test
out
pop
jo
mov
int3
ret
cmp
ret
nop
cs
or
test
shrl
and
jmp
pop
mov
cmpl
sub
inc
xchg
pop
das
inc
ja
xchg
dec
xor
pop
mov
sub
push
sub
repnz
ret
int3
hlt
in
sbb
jecxz
in
loope
xchg
outsb
lds
add
loope
shlb
out
push
inc
rolb
adc
dec
into
mov
add
mov
test
xchg
pop
ficompl
mov
rcl
inc
jp
dec
stos
stc
sbb
pop
mov
outsl
loopne
mov
mov
cmp
in
call
lods
pop
jnp
sbb
add
push
xchg
pop
adc
dec
lret
into
or
xchg
fcmovnu
sbb
in
adc
jecxz
xor
je
push
cmpsl
jnp
mov
int3
fwait
or
movsb
push
cld
mov
stc
xor
lret
pop
rorb
cmp
sbb
jns
mov
into
adc
call
mov
addr16
dec
daa
div
mov
gs
fisttps
xchg
lcall
dec
xchg
push
sahf
loopne
ret
stc
dec
cmpsb
dec
or
ja
jp
pop
xor
add
add
in
mov
into
and
sarl
add
cmpb
mov
mov
cld
addl
adc
pop
outsl
sbb
rcr
ret
pop
iret
cmpsl
insl
adc
jecxz
adc
repnz
jns
movsl
std
mov
insl
imul
int3
les
push
mov
mov
lods
mov
data16
icebp
inc
addl
xchg
mov
sarl
lret
mov
and
es
fstps
lret
aam
mov
inc
mov
cmp
imul
cmpl
inc
test
enter
adc
and
clc
add
mov
inc
lds
push
push
sahf
mov
push
mov
addl
mov
das
cmp
int3
lock
adc
aaa
cli
xor
cmp
pop
gs
jg
pop
arpl
pop
js
add
cmc
addr16
mov
mov
push
mov
jno
adc
and
jno
xchg
sub
daa
or
fs
xchg
decl
into
stos
add
jns
call
mov
in
into
mov
mov
xor
fcomp
or
jg
into
iret
jl
cli
cwtl
sahf
xchg
adc
jge
mov
pusha
fdivrl
je
stos
dec
jne
push
sahf
insb
hlt
dec
faddl
into
dec
xor
fimuls
mov
mov
sbb
push
mov
and
pop
repz
addb
scas
inc
bnd
aaa
mov
repnz
dec
aad
inc
stc
icebp
xor
inc
stc
sbb
mov
mov
aam
xor
sbb
scas
inc
jge
hlt
xchg
inc
pop
adc
out
jno
mov
jg
jo
hlt
jecxz
jb
call
pop
test
or
int
cmc
mov
ds
das
ret
mov
and
shl
xchg
jp
sar
btc
test
xchg
and
lock
jb
push
lret
cmp
ljmp
pop
popa
loopne
mov
mov
lret
outsb
xchg
cmp
sub
imulb
notb
xchg
stos
push
aam
or
add
jp
mov
jae
push
mov
addr16
pop
pop
xor
jmp
xor
mov
rclb
in
sbbl
jge
jne
repnz
mov
sbb
in
xchg
sbb
and
testb
aaa
les
push
sbb
test
ljmp
leave
je
in
pop
outsl
mov
xchg
xor
stc
fisubrl
decl
push
std
jns
cmp
pop
mov
daa
push
cwtl
rclb
cwtl
in
jb
sub
adc
dec
cld
cmpsb
and
and
je
andl
xor
stos
ljmp
pop
out
xlat
add
ja
std
es
xchg
test
sub
xchg
pop
cbtw
mov
push
in
xchg
daa
mov
nop
cltd
cmpsl
shl
popa
fiadds
xchg
jne
push
sub
or
aas
fsubl
xchg
adc
mov
aaa
test
lods
mov
popa
daa
push
rcrb
nop
lock
cmpsl
adc
add
mov
lds
jb
sahf
insb
out
clc
dec
sub
test
lret
sahf
stc
arpl
xor
add
outsl
xchg
call
shl
fwait
mov
je
repz
into
pop
mov
mov
outsb
pop
mov
sub
lods
jb
fsubrs
nop
or
inc
aaa
and
loop
adc
sub
adc
jno
adc
or
stos
inc
loopne
lret
sbb
dec
add
dec
jo
adc
jns
lock
and
in
pop
jnp
je
ljmp
icebp
mov
test
jp
movsb
sbb
out
xchg
xchg
inc
pop
cmp
jae
call
dec
mov
mov
rclb
in
outsb
push
sahf
into
mov
mov
in
lock
stos
fadd
les
imull
push
insl
fisttpll
cltd
mov
jno
test
nop
xchg
dec
or
rcr
inc
lock
icebp
sti
xchg
sub
and
and
pusha
jb
pop
add
jnp
jae
insb
lds
lods
jne
test
hlt
negl
pop
sub
add
cmp
and
jmp
pop
decb
sbb
mov
cltd
cwtl
xor
jecxz
xor
int3
push
push
jae
or
insl
adc
jg
insl
rorb
test
stc
shrb
inc
sahf
repz
cmc
outsb
rorl
loopne
xor
xchg
and
lds
jl
inc
mov
mov
arpl
lahf
cmp
rcll
mov
in
popf
and
xchg
add
push
or
mov
mov
in
orb
in
imul
lcall
lea
shlb
mov
lahf
mov
movsl
fdivrs
inc
add
sbb
sub
jbe
jp
fnsave
xchg
lock
leave
jb
mov
xor
or
popa
jo
jle
xchg
inc
in
mov
jle
test
inc
int
pop
and
rdtsc
xchg
cld
xor
sub
cmp
outsb
cmpsb
mov
sub
add
jnp
sbb
cmp
ret
pop
jl
mov
cltd
push
or
dec
movsb
xchg
repz
rolb
enter
fmul
jg
mov
inc
push
mov
inc
in
ficompl
rcll
push
mov
or
inc
pop
fisubl
mov
pop
out
popf
and
hlt
into
testb
xor
iret
std
jns
popf
and
pushf
mov
adcb
pusha
mov
call
sti
mov
cmpsl
mov
sub
pop
sub
mov
in
sbb
test
push
cmc
popa
nop
dec
nop
cs
push
sub
inc
xor
xor
je
pushf
cwtl
loope
xchg
nop
mov
or
inc
shll
fdivs
dec
iret
add
push
loopne
adc
jmp
lret
ret
rcll
outsb
sbb
cmp
jl
dec
inc
xchg
xchg
inc
shll
pop
xor
cli
hlt
iret
rcrl
pushf
push
xlat
jecxz
mov
pop
dec
push
lea
xchg
jg
mov
gs
push
testl
cmp
loopne
inc
shl
jl
fwait
jae
shrl
dec
sub
into
mov
mov
pop
push
into
or
popf
and
inc
lods
mov
dec
loopne
adc
cs
ljmp
dec
ss
and
js
out
sbb
cmpsl
neg
mov
sbb
mov
jmp
cwtl
add
inc
movsb
shll
rcrb
or
fsubrp
insl
out
cmp
test
in
xchg
arpl
addr16
imul
and
adc
sub
test
xchg
mov
cltd
call
shlb
sbb
sahf
addr16
push
nop
add
inc
pop
pop
adc
add
outsb
call
xchg
cmp
xor
cmpsl
ds
loop
gs
addr16
ss
pop
mov
insl
repnz
addr16
dec
aam
or
shrl
insl
mov
outsl
mov
cmp
inc
iret
jle
fsubrs
sbb
ret
dec
cmp
std
in
dec
jne
xchg
and
fcompl
movsb
sbb
lahf
adc
mov
push
shll
out
movsl
sub
push
xchg
flds
sbb
lds
pop
dec
loopne
lods
cmp
sbb
ret
or
inc
and
mov
fucomp
out
jnp
lret
scas
aas
mov
mov
lcall
push
add
and
xor
mov
cmp
xchg
popf
jo
and
lock
bound
pop
lods
and
inc
and
cmpsb
mov
dec
rcl
test
divl
out
test
icebp
sub
lret
stos
xorl
mov
out
addr16
mov
cmp
js
scas
mov
xchg
mov
pop
aas
fwait
jmp
aas
loopne
aaa
stos
orb
lahf
xchg
int
out
jae
or
bound
cli
inc
out
mov
test
xchg
adc
in
filds
sti
aaa
aaa
mov
addl
cwtl
add
jne
sub
pop
adc
mull
sahf
xlat
dec
pop
or
pop
pop
push
xchg
ljmp
in
and
and
idiv
sbb
mov
testb
and
push
or
xor
lahf
jo
jne
mov
cmpsb
lcall
add
sti
enter
pop
pop
fisubl
xchg
sbb
ja
sub
fmull
xchg
mov
inc
sbb
or
adcb
dec
xor
add
rcrb
hlt
shlb
xchg
mov
ror
cld
dec
jg
dec
in
pusha
lock
inc
js
sub
rolb
or
mov
xor
xchg
mov
pop
daa
mov
dec
ja
ss
and
cwtl
rcl
and
fsubl
lea
cmc
mov
int3
bound
ljmp
jno
adc
pcmpeqw
jl
add
test
push
mov
push
dec
cmc
and
and
call
sahf
inc
pop
sbb
push
out
mov
popf
sub
or
cmp
mov
sti
xor
int
ret
xchg
aad
or
cs
xorb
addl
cwtl
rolb
mov
add
mov
aas
fucom
loope
push
lock
in
push
inc
pop
stc
aad
das
adc
cmp
aam
jmp
pop
fildll
sbb
jecxz
sbb
stos
mov
nop
lds
negl
int3
mov
or
xchg
std
lcall
imul
movsl
inc
sarb
mov
mov
loop
pop
fs
decl
adc
inc
out
bound
add
imul
mov
or
push
cwtl
int3
inc
sub
pop
push
dec
icebp
push
stos
xchg
test
adc
in
xor
pop
xchg
call
out
outsb
xchg
in
aam
pop
fsubl
xchg
dec
scas
inc
push
mov
test
push
add
mov
test
jle
jo
xchg
lods
lret
testb
dec
dec
cmp
lret
or
into
in
aaa
fidivrl
lahf
ljmp
clc
and
push
ret
daa
pop
inc
lock
out
lods
test
out
push
neg
jp
dec
in
fbld
or
mov
pop
nop
sub
push
pop
imul
icebp
fisubl
js
mov
lds
jge
dec
mov
stc
call
stc
lock
jo
jo
mov
sbb
dec
cwtl
xchg
fldcw
cmp
xchg
xor
xchg
jmp
pop
adcb
fwait
and
imul
sbb
ret
adc
movsb
pop
lret
inc
shl
mov
jae
push
xchg
call
jno
shl
adc
or
ret
ds
outsb
or
push
aam
or
fprem
std
loop
ljmp
lds
push
mov
sbb
lds
jbe
mov
add
sub
ret
jb
dec
sub
xchg
lret
imul
lods
jg
frstpm(287
outsb
sub
loop
mov
leave
fisubrs
mov
add
jl
cmp
gs
xorl
dec
les
mov
adcl
adc
hlt
mov
cwtl
jge
test
inc
popa
pushf
roll
rcll
sub
add
adc
rorl
mov
sub
mov
or
mov
mov
jnp
sar
aam
adc
scas
addr16
decb
mov
mov
popa
push
dec
js
jo
ljmp
std
loope
call
pop
movsl
cli
mov
ficompl
mov
or
ds
and
sub
push
out
mov
jle
and
jno
cmpsb
jg
cmp
sbb
popf
jecxz
xchg
mov
pop
mov
cltd
xchg
fisttpll
dec
xor
jg
inc
push
sbb
arpl
pop
jnp
mov
test
sub
mov
sti
sbb
or
adc
add
jb
and
rolb
pop
popf
pop
insb
pop
shl
mov
scas
cltd
sbb
cmp
cmpsl
aad
xor
in
outsl
xor
lea
add
test
jnp
xor
popf
sub
sbb
and
out
push
inc
out
cmp
xor
sbb
loope
push
and
nop
xchg
push
inc
fwait
sti
xor
push
jle
fidivrs
fcom
sahf
jg
push
mov
sub
loopne
mov
xchg
cmp
in
lcall
or
inc
sub
icebp
lods
push
loope
pavgw
rcl
fwait
xor
cmp
lahf
xor
jmp
mov
and
test
ds
or
add
mov
add
loop
pop
cmp
subl
push
inc
out
xchg
lods
pop
xchg
pop
and
orb
jg
inc
mov
js
icebp
inc
test
in
insl
arpl
jnp
add
std
pop
or
and
push
pop
ret
push
sbb
mov
sub
push
sbb
sbb
stc
sbb
jae
fiaddl
jl
or
sub
js
cmp
repz
fs
lods
leave
leave
je
dec
or
lcall
mov
cld
fimull
jg
cwtl
stc
xor
and
in
and
mov
jp
stos
push
lea
ret
xchg
fs
loope
das
or
mov
push
stos
inc
cmp
ror
sti
jmp
jno
mov
xor
fdivrp
push
movsb
inc
sbb
jo
insl
xchg
sbb
es
int
fsub
jno
sbb
fcoms
dec
pop
cmp
pop
mov
sub
cmp
mov
gs
ljmp
lcall
cmp
outsl
add
dec
and
adc
sbb
add
inc
fldenv
cld
imul
mov
cmpsb
mov
int3
cli
lea
cmpsb
outsb
xchg
int
movd
add
insb
imul
mov
jo
adc
or
mov
mov
fcoms
in
js
loope
xor
bound
idivb
ds
lret
shlb
pop
jae
add
ret
rolb
and
cmpsb
adcl
jo
pop
aad
daa
pop
adc
inc
sbb
or
mov
dec
sub
jmp
cmp
jmp
in
jae
lret
pop
cmp
fnstenv
xor
fimull
add
dec
xchg
shrb
mov
fdiv
movsb
imul
mov
outsl
pop
sub
daa
xor
cmpl
pusha
mov
jbe
popa
and
ret
push
rolb
fnstenv
call
out
stc
pop
jnp
cmp
idivl
das
inc
pusha
fs
hlt
add
call
cwtl
ds
mov
xor
cmp
popa
mov
push
cmp
mov
loopne
jle
push
stc
xchg
icebp
fmul
jp
inc
fcomps
jno
shrb
cmp
jno
jmp
xor
and
movsb
jmp
mov
aas
inc
cmc
cld
mov
pop
lcall
testb
jecxz
test
das
adc
xorl
xchg
in
mov
cltd
fidivs
xchg
lods
cmp
js
out
mov
push
push
aaa
and
inc
nop
js
xchg
imul
nop
fdivrs
shl
mov
cwtl
popf
push
sub
xchg
addr16
mov
gs
pop
lret
roll
movsl
or
sbb
addr16
sub
mov
jle
lods
ret
pop
cmp
xchg
push
scas
addr16
aad
xchg
cmp
fnstcw
push
stos
notb
xor
js
xchg
stos
xchg
add
jecxz
and
mov
inc
hlt
sub
popa
mov
and
out
ldmxcsr
orl
sub
test
lcall
fs
mov
or
imul
push
dec
sbb
inc
mov
pop
sbb
scas
inc
add
aaa
pop
mov
lret
or
aaa
dec
pop
daa
aam
pop
xchg
repnz
inc
pushf
or
mov
mov
pop
aam
fiaddl
sub
jae
mov
int
mul
fisttpll
data16
notl
jno
xchg
jbe
xor
dec
addb
adc
xlat
and
pop
sqrtps
pushf
or
leave
xchg
or
lods
jge
inc
leave
pop
fldenv
enter
sbb
mov
fwait
divb
enter
and
inc
loop
or
and
jle
ljmp
mov
xchg
clc
xchg
jno
bound
popa
ss
shrd
xchg
push
xchg
pop
sub
jecxz
pop
lock
js
pusha
adc
adc
dec
sbb
jns
fistl
jo
jae
test
adc
sub
scas
js
add
pop
stos
dec
adc
ja
pop
jmp
xchg
popf
add
push
mov
aaa
movsb
jae
pop
ret
jae
cmp
mov
std
push
pop
cmp
xchg
clc
sub
lret
aas
or
adc
aas
or
out
pop
pushf
add
cmpsl
dec
out
repnz
xor
sub
jmp
xchg
ret
xchg
mov
sbb
insb
xor
fnstsw
jns
lcall
shrl
sti
jecxz
faddl
cwtl
sbb
leave
xchg
test
push
ljmp
mov
mov
mov
or
leave
inc
sub
test
call
loopne
lret
imul
or
pop
cmp
iret
cmp
and
cmp
aaa
pop
mov
das
sub
push
pushf
pop
push
push
mov
fdivr
xor
sub
push
shrl
sbb
fucomp
mov
out
sub
imul
fstpl
cmc
mov
in
sahf
mov
testl
cs
test
mov
into
ret
xor
cwtl
adc
stc
aad
fadds
aad
enter
add
xor
jmp
arpl
mov
std
aaa
mov
mov
mov
repz
lcall
stc
adc
or
jne
arpl
pop
or
in
ja
sti
fnstsw
out
mov
add
pop
pop
pop
add
in
jge
xlat
sub
mov
int
mov
adc
pop
int
lods
icebp
inc
test
test
pop
mov
je
fisttps
arpl
and
lret
sarl
insb
shrb
push
xchg
xlat
mov
fisttps
daa
mov
leave
out
or
movsl
lock
cmp
xorb
adc
dec
out
inc
jle
lret
lods
je
ja
inc
push
add
dec
jmp
and
lret
adc
push
dec
out
cmpsb
mov
xor
movsb
jns
pop
cmpsl
xor
icebp
js
cli
inc
in
stc
mov
dec
popa
sbb
jne
mov
daa
out
pop
sbb
fildll
das
test
jp
cmpsl
enter
ljmp
stos
ret
dec
push
push
mov
cli
lret
mov
lods
mov
clc
bound
xchg
in
popf
jns
test
mov
in
jle
xor
in
lea
notl
mov
cmp
mov
cwtl
push
stc
mov
xchg
ret
add
jb
sahf
mov
das
mov
pushf
mov
or
lahf
push
stos
addr16
mov
imul
vpaddq
add
add
insl
or
add
push
filds
stc
mov
jl
pop
sbb
cmpsl
shrb
and
in
mov
ret
jmp
inc
or
dec
dec
mov
lods
out
popa
int3
scas
lret
inc
push
xor
add
filds
inc
mov
jge
hlt
sub
cs
sbb
jg
out
mov
xlat
and
pop
test
pop
cmp
add
push
insl
loopne
clc
test
add
das
adc
xor
lret
rclb
mov
pop
lods
cmpsb
fs
adc
divl
fmul
pandn
stos
cltd
dec
mov
sub
insb
pop
popf
jae
repz
xor
gs
add
in
jg
mov
divl
test
adc
mov
push
xor
clc
fstpl
cwtl
ja
pop
fldenv
mov
fnsave
xor
mov
push
or
jmp
movsb
frstor
test
loopne
dec
cltd
stos
inc
push
out
sub
cmp
mov
mov
push
mov
psllq
xchg
and
jo
cwtl
gs
mov
add
aad
stos
xchg
cmp
push
pop
js
adc
lret
cmp
roll
lea
lea
clc
add
in
push
sbb
in
xor
dec
push
adc
icebp
adc
shr
push
addr16
mov
pop
out
cs
sub
sbb
insl
clc
scas
ficoml
arpl
insl
pop
xchg
fwait
sbb
ss
fdivrl
jecxz
movsl
sbb
adc
stc
xchg
loop
out
and
bound
lret
lcall
cmp
addl
fnstenv
test
call
test
movsl
dec
lods
jl
jno
add
push
mov
inc
inc
test
dec
add
or
aam
jmp
sbbb
maxps
insl
subb
adc
or
imul
push
ret
cmp
pop
nop
mov
xchg
fs
mov
sarb
into
test
test
lds
pop
pop
push
xor
iret
shlb
and
jae
cld
sub
or
pop
xor
dec
xchg
das
pushf
add
repz
stos
inc
adc
mov
mov
shll
aaa
addr16
pop
lcall
jnp
mov
pop
shll
cmp
pop
mov
rcrl
sbb
jne
adc
insl
dec
ficomps
xchg
pop
mov
pop
loopne
dec
adc
xor
js
inc
add
out
out
fstpl
stc
xor
sbb
mov
jbe
int
sahf
aam
es
pop
lea
or
push
fidivs
cmp
adc
pop
test
into
fldcw
xchg
mov
data16
mov
lock
jno
add
movsb
shll
es
jae
add
adc
nop
sahf
lahf
mov
jecxz
lahf
mov
vaddps
mov
lock
les
mov
sbb
adc
sbb
jmp
mov
and
cld
popf
cmp
fcoms
jno
or
imul
jg
push
jl
cwtl
xlat
or
push
lcall
les
cmp
mov
out
or
and
sbb
inc
mov
cmp
pop
lea
data16
push
cltd
outsl
pop
outsl
add
pop
icebp
mov
xor
jl
xchg
mov
jmp
sub
pop
pop
dec
add
loop
daa
pop
xor
cmp
loopne
push
push
xor
or
outsb
push
in
and
lret
cltd
ljmp
inc
popa
mov
inc
or
test
or
outsb
dec
mov
and
push
jle
cmc
mov
push
mov
movsb
fiaddl
in
insl
divb
fs
js
push
pop
fsubl
cmpsl
xor
mov
out
push
repz
filds
lock
cmp
xor
mov
and
lods
jg
inc
and
rorl
cmp
and
cmpsb
movsb
sub
inc
cli
mov
stc
mov
pop
popf
inc
mov
mov
mov
fcmovnb
rcl
jno
mov
xor
or
faddl
add
push
loopne
orl
icebp
outsl
in
movsb
and
xchg
xlat
fidivl
outsb
or
mov
push
fldl
mov
fistl
nop
xchg
int3
les
adc
inc
inc
loopne
leave
push
cmp
jns
jp
jb
mov
aam
xorb
sarl
sub
cmp
dec
pop
nop
adc
lcall
dec
imull
push
popa
fs
mov
lea
jnp
jae
inc
bound
pop
popa
inc
test
pop
imul
jecxz
cld
inc
int3
push
xor
mov
ficoms
shl
pop
mov
adc
pop
xchg
jb
or
es
ret
push
imul
lock
lds
push
daa
fistps
sbb
fisubl
div
sbb
shll
adc
fsubrs
sbb
xor
sbb
test
shlb
mov
jecxz
push
mov
mov
mov
imul
adc
cmc
shlb
mov
pop
outsb
cmp
fsubrl
sub
sbbb
shll
mov
sub
test
js
sbb
jl
mov
push
push
test
xchg
aam
inc
and
dec
cwtl
arpl
xchg
xchg
fcomip
fcoms
push
int
sbb
test
fidivrl
clts
lahf
or
in
mov
cmp
jmp
or
loopne
sbb
dec
mov
gs
sbb
fistpll
gs
and
fldenv
pop
mov
je
ss
cmp
or
xchg
or
leave
xchg
imul
sub
mov
shll
test
icebp
lahf
inc
xor
stc
jle
imul
add
subl
call
movsl
test
add
pop
push
out
mov
xchg
jnp
js
cmp
test
mov
cmp
scas
adc
add
frstor
icebp
sbb
pop
leave
or
and
inc
popf
dec
outsl
adc
mov
push
cmpsb
arpl
mov
lea
popa
loope
nop
fs
push
fs
pop
dec
cmp
fcmove
dec
mov
pop
pop
lret
fmul
je
inc
sub
sub
out
movsb
add
aaa
mov
pop
cmp
mov
or
in
in
call
test
inc
fidivrl
mov
adc
hlt
sbb
mov
mov
ss
dec
push
xchg
mov
test
inc
sbb
es
or
lret
jp
lcall
push
je
sbb
mov
sub
adc
cwtl
mov
out
lahf
xor
stc
das
inc
addr16
pusha
in
lods
push
movsb
scas
into
pusha
out
into
pop
fnstenv
cli
dec
movsb
mov
mov
mov
shrl
test
imul
sbb
js
push
xchg
pusha
sub
inc
mov
xchg
push
inc
sub
sbb
adc
fnstsw
and
test
sbb
mov
rorl
sub
and
inc
test
inc
adc
loop
mov
test
adc
imul
add
lds
xchg
sub
xchg
mov
pop
sbb
jo
mov
rclb
jne
inc
adc
and
out
je
cmp
int
push
mov
stos
cwtl
loope
repz
push
out
aam
out
add
adc
cld
lret
sub
and
inc
pop
adc
popa
out
cs
jmp
mov
gs
xchg
fdivrl
iret
lret
decb
int
dec
push
fwait
shrl
in
loope
dec
cmpb
ss
in
loope
adc
inc
fdivrl
sub
push
and
aas
fidivrl
fsts
cwtl
cmp
xchg
addl
or
enter
mov
aad
aas
mov
mov
push
int3
xor
dec
fs
in
or
xor
ss
inc
lret
mov
jg
push
and
leave
mov
xchg
adc
push
repz
outsb
jne
mov
mov
mov
std
ret
push
in
push
repz
lds
ds
dec
inc
test
sbb
xchg
dec
sbb
je
mov
add
pop
jo
enter
mov
std
adc
dec
or
pop
fdivr
in
or
push
mov
pushf
fiaddl
test
xor
sahf
test
cmp
pop
outsl
cmpsl
in
cmp
mov
pop
add
adc
das
mov
add
adc
les
sbb
ffreep
mov
out
sbb
mov
cmp
mov
imul
sbb
cwtl
or
mov
in
xchg
and
mov
dec
inc
jb
aad
imul
idivb
and
push
jecxz
imul
push
stc
jle
sub
and
out
aaa
or
into
add
mov
inc
enter
sub
repnz
lahf
out
test
iret
xor
lcall
fcomps
fsubl
xlat
scas
roll
fdivs
xor
xchg
lea
clc
loopne
addr16
xchg
std
lahf
aaa
fildl
pop
mov
sbb
ret
fs
xchg
sbb
repz
das
cmp
sbb
mov
xchg
or
jo
lcall
xchg
stc
int3
ljmp
jmp
xor
add
add
mov
or
sbb
jecxz
and
andl
mov
mov
ljmp
stos
data16
mov
push
in
push
sub
add
cli
incl
call
sub
cltd
xlat
hlt
into
ljmp
lods
xor
inc
cltd
mov
lods
jle
xchg
lds
fcmovbe
dec
sub
imul
push
sahf
mov
cmp
cwtl
xchg
dec
xor
dec
or
arpl
cmpsl
cld
xchg
popf
lods
cmpb
inc
adcb
cli
adc
mov
test
insb
add
dec
adc
stos
imul
inc
das
test
xor
mov
out
fcomi
adc
aas
test
push
scas
nop
and
add
and
fidivl
cwtl
test
sbb
mov
cwtl
cs
cltd
lds
in
jno
mov
cmpsl
ret
orb
ljmp
push
lret
ret
aaa
sub
lret
or
dec
adc
lahf
pop
jle
mov
movsl
dec
int
sbbl
mov
lods
mov
mov
mov
add
push
ss
sbb
mov
add
cmp
xor
test
add
test
sbb
sub
add
adc
imul
xor
inc
inc
hlt
xchg
fs
test
out
in
mov
push
or
arpl
pop
ja
fidivs
mov
test
mov
jns
shll
xchg
inc
imul
das
mov
lcall
or
inc
cmc
rorl
not
pop
sahf
sub
repnz
or
iret
std
xor
arpl
jl
clc
push
jnp
add
fisttpll
sbb
cmp
imul
fimuls
jb
xchg
sbb
xor
andb
pop
jl
inc
sbb
rcrl
push
dec
repnz
jle
cmpl
jp
ja
jb
outsb
cld
ljmp
fiaddl
lds
in
lret
adc
sti
punpcklbw
xor
test
fcoms
fisubrl
pop
mov
xchg
xchg
movsl
mov
xchg
or
inc
adc
mov
fsts
mov
imul
push
dec
daa
rorl
mov
mov
mov
fsubs
xlat
adcb
nop
pop
pusha
xchg
notb
xor
stc
int
enter
mov
pop
int
ret
sti
neg
add
push
btl
mov
cmp
out
pusha
lret
repnz
loopne
cmc
pop
orb
xor
jl
xchg
in
out
mov
in
add
push
pop
repz
ret
and
and
push
mov
call
xor
jmp
repnz
add
test
mov
xchg
xchg
jmp
call
and
push
cmp
mov
ja
mov
jmp
dec
pop
xchg
adc
pop
or
or
leave
stos
mov
xor
fwait
icebp
out
mov
mov
push
pop
fidivrl
mov
lahf
mov
jae
lahf
cwtl
inc
jecxz
daa
push
jns
inc
int
cwtl
in
mov
out
jnp
mov
mov
mov
outsl
mov
sub
sbb
imul
cmpsb
jno
mov
das
cld
in
mov
in
dec
mov
out
or
and
sub
jmp
add
imul
inc
jecxz
cs
sbb
sarb
push
mov
cmp
cltd
outsb
xor
ljmp
push
sub
xchg
sub
lds
cmp
lret
inc
popa
xchg
mov
jle
bound
mov
dec
jb
add
lahf
test
xor
mov
mov
push
pop
leave
xchg
cs
jnp
sbb
mov
jp
mov
xchg
dec
js
xchg
jb
push
dec
addr16
fdivl
or
pop
int
xlat
js
mov
stos
push
ret
nop
pusha
loope
inc
arpl
in
push
sahf
add
lcall
add
pop
and
cmp
and
int
jle
aas
lds
and
or
leave
push
loop
sub
dec
pushf
xchg
testl
test
dec
les
lea
jno
aad
pusha
sbb
mov
aas
imul
xchg
and
lock
jb
cmp
xchg
cmp
xchg
stos
jmp
mov
loope
push
icebp
jne
sub
jg
aam
orl
inc
stos
flds
jae
and
mov
inc
add
add
pusha
aam
sub
dec
or
aaa
jne
inc
inc
add
and
mov
mov
dec
inc
popa
xor
add
cmp
iret
in
and
out
jg
push
xor
inc
loop
aaa
pop
aas
cmp
xor
outsb
fistpl
mov
loop
out
movsl
pop
shlb
sub
mov
ss
lods
push
jecxz
or
incl
and
fisubrl
xchg
xchg
pop
jnp
leave
lock
add
fscale
cld
shlb
shrb
sbb
xor
xor
sub
mov
sahf
inc
push
test
loopne
mov
xor
mov
lcall
dec
mov
lahf
adc
mov
fnsave
in
mov
sarl
decb
fsubrp
sub
cmp
push
jns
cmpl
push
jl
and
nop
nop
stos
cmpsl
xor
jne
pop
popf
je
jns
inc
int
cmp
or
pop
push
ds
jo
mov
decb
rolb
nop
jecxz
or
jbe
nop
xchg
sub
pusha
lock
mov
sbb
xor
fcoms
adc
push
pop
pop
sbbb
fistl
clc
aaa
sti
int3
stc
ljmp
cmp
shl
xchg
imul
cmp
in
inc
movb
adc
sub
push
fistps
or
stos
pop
iret
mov
std
leave
jns
dec
dec
insl
push
or
xchg
fs
sub
cwtl
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
mov
bound
.byte
xlat
.byte
cmpsl
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
sbb
add
adc
add
xor
add
add
add
add
pusha
jb,pn
popa
je
add
push
sbb
add
xor
add
adc
add
add
inc
add
inc
cs
je
add
add
push
add
add
add
inc
add
shrb
gs
add
add
add
add
add
mov
add
enter
add
add
add
jb,pn
popa
je
add
cmp
or
add
jp
add
add
cs
je
add
add
jo
add
jo
add
sbb
add
mov
add
add
add
add
xor
xor
call
pusha
call
add
in
mov
scas
adc
movsb
gs
fldcw
das
or
jecxz
inc
in
dec
mov
and
push
mov
xor
pop
mov
cmp
mov
cmp
add
dec
imul
add
call
jle
add
out
xchg
add
clc
inc
in
or
clc
cmp
mov
push
jl
sbb
aas
nop
mov
call
arpl
jb
jp
loop
movsl
pop
icebp
cmp
or
hlt
push
shll
rol
dec
push
sbb
mov
icebp
js
dec
fwait
sbbb
add
push
sbb
test
lahf
inc
add
mov
jmp
adc
mov
pop
jmp
pop
xor
iret
sahf
mov
push
data16
imul
fadd
loop
cmp
lahf
xchg
sub
jno
sub
outsl
push
test
test
stos
add
lds
outsl
popf
idivl
lds
nop
mov
inc
xor
imul
fsubl
mov
js
fcomi
movsb
pop
enter
cmp
daa
sbb
jp
dec
or
hlt
mov
inc
lea
rorl
mov
mov
mov
jmp
sub
aaa
jmp
icebp
xlat
test
mov
xchg
pushf
repz
imul
lahf
xchg
jb
xor
sarl
enter
movsl
or
rolb
dec
sbb
sbb
add
loopne
iret
or
add
adc
add
push
push
add
sub
das
dec
stos
push
add
lahf
cltd
adc
sbb
or
cmpl
div
cmp
in
fs
jbe
xchg
jno
ds
lds
bswap
fdivp
mov
add
cs
pusha
push
into
sub
cmp
fs
mov
and
sub
imul
fdivl
nop
mov
mov
xchg
maskmovq
adc
push
insb
pop
mov
subb
sub
inc
xor
dec
shl
sbb
loopne
in
sub
mov
lahf
outsb
jnp
pop
jb
xor
mov
dec
rolb
mov
shll
in
xchg
lret
pop
repnz
enter
js
sub
sub
jo
shrb
cltd
inc
xchg
pop
mov
cmpsl
int3
fcomi
xchg
jne
mov
out
stos
pop
lahf
or
mov
cmc
xor
and
mov
out
mov
sub
cmpsb
jl
pop
popf
sub
sub
and
loop
lods
pop
mov
inc
adc
outsl
nop
cmp
sbbl
repnz
push
add
clc
or
mov
jl
popl
or
sub
jle
xor
sub
mov
dec
mov
sbb
pop
add
mov
loopne
sub
mov
cs
inc
nop
mov
sbb
add
jne
jnp
dec
mov
push
jb
dec
daa
mov
ret
add
insb
adc
xor
fs
and
pop
xchg
int3
jb
pop
outsb
xor
fwait
pushf
dec
mov
mov
cs
xchg
cltd
sbb
jp
push
add
fcmovbe
dec
push
pusha
decb
outsb
inc
ret
cltd
das
popa
sub
mov
sbb
ds
stos
inc
pop
in
jbe
xor
push
cmp
sbb
mov
gs
orb
repnz
sbb
sub
lcall
icebp
sahf
mov
repz
cltd
xchg
mov
lods
rep
incb
sbb
jne
dec
pop
sub
sub
adc
mov
mov
out
mov
loop
xchg
mov
sahf
leave
nop
xlat
insl
in
rclb
push
xor
stos
and
cmpb
cmp
ljmp
or
div
call
negl
sub
shrb
lcall
mov
hlt
xchg
inc
mov
cmp
gs
lahf
jg
gs
incl
into
testb
loop
test
in
sbb
jne
aas
or
mov
sbb
dec
data16
mov
fsubl
fs
sbb
scas
call
into
fstpl
jo
mov
lock
push
movsb
sub
mov
cmp
popf
cmc
dec
inc
add
pushf
insl
pop
mov
pop
mov
sbb
push
test
xchg
loopne
xchg
xor
ja
inc
xlat
adc
or
test
push
test
xchg
movsl
out
movsl
or
test
in
or
dec
push
pop
popa
cmp
xchg
icebp
data16
mov
adc
cmp
xchg
pop
mov
mov
leave
cmp
out
icebp
clc
inc
call
pop
inc
mov
and
jb
testl
fisubrs
add
or
out
cmp
mov
lcall
mov
jmp
je
sbbl
and
cmp
adc
fidivs
in
pop
mov
xchg
ret
xchg
repnz
lock
cmp
out
adc
xchg
sub
push
addps
out
insb
ret
or
enter
mov
in
dec
fldenv
cmpsb
std
add
sbbl
pop
lret
and
in
mov
sarb
pop
popf
dec
push
mov
inc
cmpsl
out
dec
loop
fwait
push
gs
push
test
add
cmc
rep
movsl
sahf
int3
mov
add
mov
out
jbe
les
repnz
push
mov
gs
push
iret
mov
xchg
sbb
push
xor
xchg
add
stc
jno
and
xor
adc
ret
or
sub
repnz
sub
test
in
dec
cs
cmpsb
js
test
stc
repz
out
lea
push
mov
dec
xor
shl
dec
mov
int
jge
sbb
or
stos
jbe
xor
fucomp
jbe
insb
pop
shrl
push
insl
inc
shll
mov
lods
push
jecxz
xor
rolb
xchg
cmp
or
repnz
jle
ret
fwait
daa
cmp
pushf
pop
bound
shll
jp
add
int
pop
and
lea
push
test
adc
sbb
push
mov
mov
jecxz
aad
or
add
pop
fwait
mov
ljmp
lret
test
inc
cmp
xchg
or
dec
mov
cmc
jno
dec
int3
dec
cmc
adc
cmp
mov
push
cs
inc
adc
push
mov
in
and
xor
adc
loope
xor
std
fildl
jb
adc
xchg
ret
into
iret
insb
or
sbb
and
sub
jbe
into
mov
fnstsw
aaa
in
xchg
dec
jne
jge,pt
fdiv
ja
and
push
or
dec
dec
jecxz
jle
and
mov
into
and
adc
leave
ds
cmp
pop
mov
cli
and
or
mov
fdivr
lods
into
and
scas
sub
add
mov
sub
daa
mov
jae
movsl
je
dec
ret
jnp
movnti
out
xchg
fistps
idivl
cmpsl
ret
das
scas
sbb
xor
adc
add
jp
inc
stc
push
notl
decl
leave
repz
andb
dec
repz
cld
sub
addr16
iret
sbb
cmp
mov
mov
js
ss
fsubs
mov
repz
arpl
cmp
mov
pushf
cmp
adcl
or
cli
mov
rorl
jl
out
pushf
cmp
xchg
pop
fmull
test
shlb
xchg
push
lods
fwait
cmp
push
aam
adc
rorb
sbbl
mov
lret
ds
add
in
addb
xor
movsb
insl
mov
dec
inc
iret
out
and
sti
mov
ljmp
sbb
fnstcw
ds
das
aam
in
cmpsl
sub
xor
or
imull
adc
gs
call
sbb
push
mov
int3
mov
movsb
xchg
pop
sub
in
add
test
fsts
notl
mov
jmp
xchg
inc
inc
sar
sub
mov
icebp
and
sbb
and
popl
xor
lds
into
xor
pop
in
adc
decb
lds
movsb
dec
push
inc
mov
lret
stos
push
or
sub
pop
add
adc
addr16
inc
sbb
stos
arpl
popf
and
push
adc
sub
mov
mov
push
stc
hlt
int
jge
das
call
sarb
lea
sti
inc
pop
scas
push
movb
pop
sbb
pop
or
imulb
sarl
outsl
int
shlb
or
insb
or
mov
xor
sub
icebp
xor
loopne
pop
inc
subl
xor
fwait
out
jo
sbb
mov
mov
mov
inc
mov
rorb
idivl
insl
push
pop
enter
call
adc
divl
fdivrp
cli
jns
fadds
sbb
jg
stc
pop
movsl
xchg
test
mov
pop
jne
xlat
xchg
mov
xchg
dec
pop
jecxz
enter
je
mov
mov
mov
or
int3
sub
or
clc
cmp
adc
jbe
sbb
orl
mov
ds
popf
dec
push
push
mov
jmp
adc
lods
adc
incl
shll
data16
cld
faddl
xchg
push
xchg
inc
mov
xchg
fidivs
inc
push
xlat
xlat
push
movsb
notb
movb
data16
scas
idiv
dec
fcomps
test
je
xchg
es
add
dec
cwtl
ljmp
jnp
push
dec
xor
lea
shrb
push
mov
or
shl
test
arpl
scas
or
mov
out
adc
leave
pop
aaa
in
stos
cmp
jmp
adc
push
pusha
in
imul
aas
add
flds
and
mov
daa
mov
cmp
repnz
or
std
push
mov
ret
sbb
jle
loope
je
out
mov
in
and
push
hlt
in
movsl
xor
cmp
mov
xchg
insl
xor
decb
fisubrs
repz
out
ror
push
xchg
ljmp
adc
mov
out
pop
repz
imul
cmpsl
and
addr16
cmp
mov
add
mov
xchg
rorl
xor
xchg
cmp
fisttps
arpl
add
push
adc
outsb
and
cmpsb
sbb
sbb
cmpsb
pop
loop
in
int3
leave
pushf
ljmp
sbb
pop
orl
fbld
adc
outsb
jne
jbe
cmp
ja
add
sbb
cmc
mov
dec
adc
cmp
xchg
rcll
rcrb
out
mov
cmp
cmp
rolb
cmp
test
mov
sub
adc
jle
andl
inc
jns
pop
out
mov
xchg
insl
lahf
sub
inc
sbb
sbbb
icebp
jae
insl
fildl
lahf
addb
push
sbb
mov
xchg
push
aam
mov
loopne
inc
out
and
bound
jno
jnp
stos
xchg
lcall
leave
imul
cmpsb
pop
inc
jno
push
mov
hlt
jne
push
jnp
stc
cltd
cmpsb
dec
and
push
cmp
mov
loopne
int
or
shr
xchg
xchg
xor
icebp
cld
or
test
and
add
pop
sub
fwait
stos
movsl
push
fwait
and
mov
add
sub
out
jo
xchg
fadd
ret
mov
out
mov
sbb
mov
cmpsl
xchg
xchg
xchg
xor
and
scas
cmp
xor
mov
jb
cmc
std
adc
inc
mov
loopne
xchg
testl
push
mov
out
sub
mov
dec
repz
popa
push
js
popf
jae
scas
cld
jecxz
adcb
lcall
cmp
mov
fidivrs
fmuls
sbb
jle
or
es
cltd
push
pop
mov
les
ret
test
add
je
jne
add
icebp
jo
mov
fwait
outsl
and
and
repnz
cmp
or
cmpsb
dec
or
push
push
dec
push
in
cs
cmpsl
fdivl
movsl
stc
dec
andb
cwtl
cld
shrl
pop
cltd
adc
push
push
mov
insl
sub
jl
aad
aas
sbb
out
ficoml
stos
add
into
or
push
fstps
push
or
imul
dec
lret
xor
dec
pop
fnstcw
mov
push
mov
pop
inc
cli
mov
sub
mov
mov
vpunpckhwd
fdivrl
and
sub
enter
pop
test
push
addl
or
add
dec
adc
ss
es
sbb
in
sti
xchg
and
jns
dec
lahf
lock
sub
shl
pop
adc
mov
cwtl
gs
shl
sbb
rorb
pusha
fbstp
ret
and
aas
fcmovne
enter
mov
sbb
imul
jb
rol
adc
adc
imul
sub
mov
stos
mov
f2xm1
jl
fsubs
dec
cmp
ljmp
cmp
jmp
jge
popf
ja
out
daa
shr
iret
dec
scas
xor
in
mov
inc
stos
shr
mov
xchg
sbb
ret
popf
jo
jl
jp
push
outsb
add
mov
lret
cmp
daa
xchg
mov
inc
mov
jo
xor
outsb
in
sti
cwtl
push
mov
xchg
and
out
mov
push
ret
shll
jmp
xchg
fsub
int
sbb
scas
cltd
jb
enter
cwtl
sbb
jno
int3
push
jl
push
jbe
ds
adc
imulb
mov
xlat
in
mov
gs
mov
aam
loop
add
pop
xor
ds
aas
das
adc
mov
roll
and
cmp
pop
sub
cmp
clc
pop
notl
shrb
sahf
inc
mov
icebp
inc
jb
mov
fildl
dec
dec
mov
dec
sar
dec
in
push
push
xchg
loopne
pop
clc
push
or
cmp
mov
std
insl
sub
cli
in
cmp
call
inc
insl
out
dec
stos
cmpsb
rcrb
in
mov
mov
push
or
sbb
jle
sub
cmp
cmp
mov
and
insb
fisubl
insl
sbb
dec
push
push
pop
mov
nop
mov
lock
fbstp
jbe
cld
mov
mov
xor
sahf
test
mov
nop
mov
popf
popa
jmp
add
rolb
inc
inc
popa
mov
add
pop
sbb
outsl
lea
lahf
cs
out
idivb
xchg
repz
sahf
xchg
or
ret
ret
jnp
or
js
push
xlat
adc
cmp
jecxz
dec
movsb
iret
add
xchg
loop
sbb
xchg
das
insl
xchg
call
int
jns
int3
jle
lret
imul
adc
xchg
imul
arpl
ljmp
and
or
cmp
pop
scas
es
inc
or
dec
mov
in
add
ret
adc
or
iret
clc
jecxz
add
pushf
lret
mov
cmc
push
push
sbbb
imul
test
hlt
cmp
aad
cwtl
pop
enter
xchg
xchg
xor
fmull
mov
push
mov
into
or
cmp
cltd
clc
sub
ljmp
in
lods
rclb
fwait
insb
cmp
mov
dec
nop
push
or
jge
dec
cmp
lea
sbb
bound
ds
sahf
push
push
jl
push
nop
sub
movq
mov
test
inc
insl
loopne
push
mov
sub
imul
adc
outsl
inc
popf
push
cmpsl
sub
fdivrl
lea
mov
cmpsl
fwait
aas
mov
je
mov
pop
sbb
sub
out
and
push
pop
push
lcall
fidivrs
sbbl
fldl
rcrl
sbb
inc
add
in
push
or
xchg
sti
repz
fsub
xor
and
sub
cmpsl
xchg
pusha
xchg
jl
pusha
sub
stos
es
aam
dec
test
in
inc
lea
cmpsb
leave
cmp
cmp
aas
mov
xchg
insb
sbb
xchg
loop
sub
xchg
pop
sbb
or
je
xchg
or
inc
and
outsl
cs
jno
call
inc
xchg
leave
inc
cmp
add
inc
loop
mov
ljmp
cwtl
jno
idivl
xor
mov
inc
std
mov
lcall
in
jbe
test
shrl
xchg
popl
into
xlat
xchg
inc
jp
or
shll
mov
fildl
inc
xchg
repz
gs
shll
fwait
test
jmp
nop
pop
popa
mov
lods
add
jb
push
xorb
mov
adc
push
fcompl
mov
mov
push
andnps
dec
xchg
pop
jecxz
mov
enter
jge
mov
mov
stos
dec
inc
xor
cwtl
sbb
cmpsb
lds
xchg
sbb
fists
out
push
insb
inc
mov
xchg
movsl
mov
mov
fcmove
aas
lahf
xchg
or
sarb
mov
adcb
add
outsl
test
stos
adc
movsl
mov
xchg
aaa
arpl
ljmp
mov
add
adc
jg
test
sub
insl
lds
and
pop
xacquire
mov
sub
sbb
push
out
sahf
mov
aaa
call
or
pusha
dec
in
cmp
cmpsl
add
test
es
mov
or
mov
fidivrl
jecxz
rcr
call
xor
out
inc
out
xlat
jp
xchg
xchg
sbb
push
sub
pop
xchg
sti
add
jg
xchg
xchg
xor
ds
shll
xlat
mov
call
sahf
lahf
jbe
fcomps
les
cmp
jb
xor
pop
inc
aad
mov
xchg
sbb
and
orl
lcall
mov
andb
jmp
cmp
jecxz
loopne
pusha
jns
roll
xchg
inc
out
push
orl
sbb
or
aas
daa
loop
repnz
sbb
dec
mov
movsl
mov
mov
imulb
mov
sub
ss
popf
andb
out
fsubl
add
add
aam
sahf
mov
fdivs
das
fildll
push
lea
sub
divb
or
scas
andb
mov
lret
ret
insb
push
and
shrl
mov
sbb
pop
cmc
sbb
cmp
lret
mov
mov
dec
add
out
ds
enter
sub
mov
stos
lcall
dec
mov
sahf
push
je
pop
stos
sub
xchg
add
in
add
enter
nop
icebp
xchg
aad
aam
adc
loope
xor
lock
cmp
mov
les
or
rolb
stc
lds
mov
stc
dec
dec
push
jle
push
leave
loope
jg
shl
stos
pop
push
cmp
orl
push
sbb
je
cltd
xchg
dec
out
add
sbb
push
in
lods
dec
aaa
into
cmc
outsl
cmp
mov
and
fisttpl
jle
add
cltd
sbb
mov
movsb
subl
daa
push
inc
xchg
mov
xchg
mov
pop
jl
insl
push
mov
std
cmp
leave
inc
stos
mov
xchg
jge
jecxz
popw
das
stc
mov
scas
jne
movsl
push
js
in
mov
call
insl
scas
shrb
insb
addr16
or
mov
notl
jne
addb
mov
add
aad
or
bound
popf
xor
push
jg
jne,pt
icebp
ss
out
rcrb
cmpsl
orb
sub
jge
es
xlat
nop
stos
push
outsb
aam
rcl
jl
inc
xor
mov
mov
inc
adc
lock
aam
add
fimull
pop
xor
gs
orb
or
xor
imul
pushf
jo
push
sbb
imul
dec
aaa
dec
fsubs
xor
cmpsl
mov
fists
dec
std
sub
or
jg
add
and
jbe
or
jae
dec
jnp
mov
cmp
adc
lahf
pop
les
sub
sbbb
dec
rcrl
repnz
aad
jmp
mov
addr16
repz
pop
out
and
add
addr16
mov
rolb
pop
mov
loop
push
addr16
stos
mov
push
xchg
pop
add
loope
out
or
es
roll
daa
ds
repz
scas
iret
filds
inc
xchg
push
sbb
jne
call
es
test
cs
fnsave
and
insb
and
jmp
dec
jle
xor
cmc
jnp
xlat
call
stos
loop
cmp
xchg
mov
dec
jns
popf
or
nop
jp
les
cmc
test
movl
lock
clc
rcrl
sub
adc
mov
push
fisttpll
dec
out
pop
js
sahf
pop
xorl
mov
add
sbb
leave
jp
out
lcall
and
hlt
mov
fdiv
mov
in
lock
jmp
sub
sbb
movsb
dec
mov
fidivl
dec
loopne
icebp
jnp
mov
and
inc
int3
lods
sbb
enter
sub
mov
mov
xor
or
and
sbb
ss
mov
nop
call
jno
arpl
sbb
fstpl
push
add
stos
jp
mov
shlb
test
sbb
int3
fs
nop
lods
ds
ret
flds
popf
and
dec
outsb
clc
hlt
add
inc
loopne
inc
lods
loope
pop
cwtl
jmp
add
xor
orb
inc
nop
test
pushf
and
pop
je
pop
cmp
out
mov
cmp
push
repz
cwtl
cmp
xor
sbb
mov
pushf
popa
push
jne
fimull
xor
xchg
bnd
mov
push
dec
mov
mov
insl
inc
xchg
or
push
and
sbb
aas
shr
arpl
inc
dec
sbb
shll
aad
rclb
icebp
sub
dec
push
jne
jnp
pop
insl
lret
pop
testb
xlat
dec
cmp
xchg
outsb
hlt
inc
mov
scas
cmp
sahf
push
hlt
mov
insl
or
rolb
lock
jo
outsb
imul
subb
mov
push
int
outsb
loopne
and
movq
mov
rolb
lods
and
inc
sbb
xchg
xchg
push
pop
xchg
cmp
adc
imul
mov
in
loop
fmull
mov
xchg
insl
mov
xchg
push
aas
icebp
scas
icebp
fsubr
fs
mov
push
push
inc
addl
cmpsl
mov
out
xor
push
fstpt
inc
xchg
mov
mov
pop
or
and
testl
popa
hlt
daa
pop
nop
mov
aas
cmp
ds
cmp
jl
xchg
negl
mov
push
sarl
xlat
xor
aas
leave
jbe
inc
mov
sarb
fnstenv
std
lea
mov
enter
mov
in
mov
mov
fcompl
ret
add
fsubr
lods
mov
test
cltd
mov
dec
push
add
fidivrl
imul
cpuid
xor
jnp
mov
jg
cmp
push
push
js
sub
scas
dec
adc
sub
sub
adc
fcomi
cmp
inc
imul
cmp
je
nop
sbb
add
mov
int
fsts
fildl
lcall
mov
in
ja
dec
shrb
jecxz
xor
xchg
imul
leave
int
out
fdivp
cmp
xchg
rol
xchg
add
pushf
stc
push
arpl
or
cmp
mov
jp
sub
clc
divb
mov
adc
in
pop
xor
jno
jne
or
cltd
stos
push
push
fisubrs
xchg
repz
out
mov
mov
imul
ss
jp
xchg
decb
inc
hlt
dec
mov
pop
outsl
sub
mov
setge
mov
inc
mov
sbb
push
aad
cmp
cs
sbb
inc
call
fdivrs
or
loopne
pop
roll
mov
xlat
lds
mov
movsl
cmpl
xchg
mov
jmp
or
pop
mov
dec
xlat
fsubrl
shlb
pop
cli
stc
add
fs
clc
inc
jo
cmp
jecxz
jne
pop
outsl
mov
cs
cltd
cmpsl
inc
lret
adc
fiadds
in
xor
pop
sbb
mov
add
push
sbb
mov
scas
mov
les
repz
lahf
rcrb
pop
jmp
pop
and
lock
inc
mov
test
push
loope
lahf
mov
pop
gs
fsubrp
in
out
cmp
inc
cmpsb
xchg
sub
xchg
jle
inc
jnp
dec
fwait
inc
sbbb
inc
jne
push
jns
flds
lods
jl
in
fadds
and
jge
loop
jmp
cmp
test
jns
sbb
int3
or
adc
and
xchg
mov
mov
mov
imul
fs
pop
das
push
ret
push
adc
mov
scas
sahf
dec
cli
mov
jne
ds
inc
fs
and
adc
std
bound
mov
sbb
add
jno
ret
dec
mov
mov
sub
dec
lock
xchg
stc
xor
or
lahf
pop
lahf
ret
add
mov
jl
aad
pop
cwtl
lock
gs
inc
ja
add
mov
je,pt
add
jge
xor
leave
mov
or
pop
jle
sahf
fldt
adc
jns
xchg
pop
mov
mov
outsl
mov
out
imull
pusha
movlps
lods
mov
ss
mov
or
imul
in
jp
xchg
test
ss
jecxz
fs
cmpsb
adc
fcmovne
lock
sbb
repnz
add
pop
jge
mov
loop
mov
das
jnp
insl
and
mov
int3
push
jg
into
jmp
je
xchg
fdivl
lea
int3
enter
dec
cmp
adc
inc
fsts
or
push
xorb
inc
lock
sub
sbb
es
jo
push
fcomi
inc
xchg
push
xor
insb
ljmp
pop
nop
clc
push
sub
in
sub
mov
test
and
push
mov
push
xchg
cmp
test
js
cmp
cwtl
cmp
hlt
xorl
mov
lods
pop
test
sub
scas
arpl
xchg
jmp
push
out
push
cmpsb
sbb
int3
subl
clc
daa
cmp
andl
lds
or
das
subl
sti
pop
xchg
mov
mov
lcall
pop
test
or
int
or
sub
inc
cs
test
dec
arpl
aaa
fs
sub
mov
pop
mov
xor
outsl
fildl
mov
xchg
sbb
dec
mov
repz
push
ret
test
insl
clc
mov
sub
insb
jb
repnz
and
xor
test
repnz
sub
and
iret
repnz
inc
and
jecxz
out
mov
test
cli
addr16
adc
jo
aad
cli
adc
or
pop
andl
std
loop
xchg
fdiv
outsl
xchg
and
xchg
push
xor
fimuls
or
push
fbstp
mov
aaa
sub
imul
aad
or
jo
sbb
xchg
cltd
in
mov
xor
jno
sahf
int3
push
rolb
xor
push
adc
lods
mov
or
sbb
pop
test
daa
jge
insl
ucomiss
or
loope
push
pop
sahf
lahf
xor
pop
fs
push
pop
jbe
mov
or
out
mov
mov
adc
popf
jmp
pop
and
jmp
sub
inc
add
jne
lcall
cmpsl
in
fldt
xchg
test
je
mov
xchg
lds
pop
movsb
pop
mov
and
cmp
xor
mov
sahf
leave
add
xor
cld
fwait
loop
sbb
xor
pusha
daa
and
cmp
mov
pop
jno
mov
inc
push
push
lret
mov
jns
or
into
std
jno
fistl
jmp
sub
pusha
mov
xchg
add
test
push
mov
jae
sbb
or
stos
push
mov
repz
stc
lods
arpl
cmc
sbb
std
fldt
xor
sub
fsubl
mov
xchg
cmp
mov
loop
fnsave
or
movsb
imul
inc
jp
lcall
jmp
fbld
aas
scas
add
and
push
push
xor
xchg
mov
cmc
mov
aaa
inc
and
sbb
subps
aad
int3
cwtl
sub
orl
clc
nop
push
mov
enter
out
xchg
inc
cltd
mov
or
xchg
adcb
push
fcompl
lcall
clc
test
jle
fdivrp
sbb
outsb
cmpsl
in
cld
inc
cmp
and
das
xchg
pop
mov
cwtl
jno
mov
ljmp
leave
xor
int3
fistl
add
adc
push
cmp
lock
inc
push
ljmp
ffree
add
fdivr
lcall
out
push
and
leave
lret
mov
xchg
in
in
cmpl
adc
pop
aas
out
or
cmp
dec
jns
stos
or
lret
inc
lcall
push
scas
pop
cmp
inc
sbb
jg
fcoms
jg
push
pushf
test
inc
mov
fistpll
aaa
mov
shl
scas
push
add
in
pop
bound
sbb
xor
pop
gs
sar
jle
jo
movsb
mov
cmp
inc
xchg
inc
loope
sub
ljmp
aaa
pop
lret
les
mov
ret
pop
mov
mov
aad
jmp
mov
dec
outsb
lret
les
flds
fsubl
es
sbb
xchg
ret
repnz
test
mov
add
filds
sbb
rorb
sbb
adc
inc
ret
cwtl
dec
xchg
cmp
cmpsl
stos
iret
ja
call
gs
and
daa
or
out
cld
lahf
int
aad
push
jo
ss
and
fisubs
push
mov
imul
fs
inc
inc
lcall
and
sub
gs
psubusw
xor
or
lret
daa
push
inc
pop
ljmp
js
fcomps
insl
ret
jbe
dec
xchg
pop
xchg
add
aas
outsb
nop
mov
cwtl
inc
fiaddl
stos
mov
push
ja
movsl
adc
imul
gs
aas
xchg
jb
adc
dec
push
clc
sub
mov
cmpsb
or
push
pop
add
fistpll
in
ja
cmc
pop
push
aad
push
or
xchg
mov
mov
push
shll
jle
xchg
lods
jp
int3
icebp
jnp
jl
mov
dec
sub
aam
push
das
pop
push
xchg
mov
mov
and
and
dec
test
mov
cmpsl
pop
sahf
out
sbb
add
negb
adc
pop
pusha
adc
xor
loope
sbb
imul
sbb
xchg
outsb
nop
sbb
por
sti
mov
mov
arpl
subb
add
popf
add
arpl
sbb
ja
scas
sbb
in
fistpl
pop
fistps
negb
aaa
loope
insl
adc
mov
insl
std
push
inc
mov
subb
xor
bound
inc
lods
out
fcmovbe
pop
aam
std
mov
in
sti
inc
cmp
ss
sub
loope
mov
pushf
inc
adcb
or
ljmp
mov
inc
sbb
add
adc
daa
outsb
push
pop
dec
add
xor
push
pushf
pop
ret
adc
sbb
xchg
adc
sub
mov
xchg
dec
cmpsl
lret
pop
insl
sub
lods
pop
add
xor
dec
pop
aas
push
cwtl
lea
insb
jne
outsb
xchg
mov
push
cld
cwtl
xor
outsb
mov
mov
neg
mov
xchg
add
das
push
pop
xchg
xchg
mov
jg
nop
rolb
push
push
lods
icebp
adc
mov
fptan
push
popf
and
mov
mov
fs
xchg
xchg
ficomps
push
mulb
mov
mov
test
xor
push
fisttpl
sbb
int3
push
inc
je
cs
sub
mul
push
adc
push
loope
xchg
pop
xor
mov
dec
mov
cld
es
cmp
into
add
stos
dec
scas
adc
shl
pop
pop
dec
xchg
loop
dec
jmp
movsl
outsb
pop
sbb
mov
xlat
and
sti
fidivrs
pop
fs
mov
test
xchg
clc
lahf
jbe
call
push
movsl
repz
sbb
inc
test
jle
std
hlt
ret
mov
adc
mov
push
aam
outsb
mov
cltd
pop
pop
je
push
rcll
xor
movsb
pop
cmp
fs
inc
sub
and
xchg
xor
adc
mov
xchg
mov
adc
and
pop
inc
pop
xchg
lahf
adc
inc
lea
outsb
dec
mov
addl
cmp
ss
push
icebp
or
sbb
fdivr
adc
inc
push
fadd
pop
inc
push
addr16
pop
test
test
out
push
or
mov
lret
push
push
push
inc
jmp
xchg
push
aad
xor
inc
mov
xchg
jle
ljmp
cmp
adc
out
fisttps
insl
adc
out
mov
js
push
xlat
jo
lahf
cmp
rcr
sbb
add
inc
les
sbb
add
icebp
iret
dec
xorl
lock
jg
scas
cmp
jae
cli
rorl
and
and
enter
lcall
xor
push
loop
in
pop
xchg
mov
aas
xchg
add
fdivr
inc
jbe
popf
in
lock
and
push
sub
rcll
loop
in
arpl
test
shlb
pop
movsb
aaa
loopne
push
mov
mov
mov
jae
ret
inc
out
jmp
lret
dec
mov
and
in
pop
sub
es
cmp
mov
cli
inc
aas
sahf
fld
ljmp
cmp
stos
inc
adc
adc
loop
stc
dec
rclb
xchg
scas
lock
dec
in
out
lods
xchg
add
jbe
fsubrl
out
mov
push
or
jmp
cmpsb
test
adc
test
mov
xchg
fldt
inc
mov
mov
jbe
jmp
and
insl
xchg
icebp
pop
mov
aaa
sub
js
nop
pop
xchg
cmp
xchg
pop
xchg
nop
mov
lods
into
arpl
fwait
jno
xchg
mov
jge
mov
sahf
xorb
and
loope
dec
pusha
xchg
cmc
dec
out
xchg
jge
dec
cli
push
push
mov
into
clc
mov
icebp
fs
data16
js
sti
jle
cs
mov
xor
movsb
xchg
adc
sarb
lds
dec
push
xchg
adcb
and
xorl
sub
inc
popf
adc
mov
xor
mov
jp
inc
call
mov
rolb
nop
or
inc
lret
stos
fiadds
std
dec
jb
out
fwait
sub
mov
sub
cltd
test
jle
shlb
add
test
jb
cmc
push
mov
enter
jo
es
mov
inc
js
imul
insb
outsb
sub
fistpl
gs
fiadds
dec
or
jg
lcall
cli
insb
push
xor
mov
cltd
add
popa
push
fdivrl
push
add
push
mov
cmp
xchg
xor
dec
fs
imul
ljmp
pop
xor
cmp
and
adc
fsubp
sbb
mov
lret
cmpl
in
fistpll
and
stos
add
mov
add
filds
push
jnp
xor
and
int
mov
ret
sbb
lcall
popa
arpl
add
xchg
int
push
dec
xor
xchg
mov
jecxz
adc
sti
dec
dec
pop
or
call
test
cmp
jno
mov
cmp
roll
mov
aas
lahf
xor
test
test
daa
mov
adc
imul
inc
sbb
cmpsb
push
jp
mov
aas
dec
test
ss
pop
xchg
push
lods
call
lcall
pop
mov
mov
out
xchg
int
pop
pop
stc
cmp
add
inc
cwtl
fsubr
pop
negl
into
dec
dec
dec
jae
xor
push
lods
push
gs
pop
outsb
cmp
ja
sub
leave
lods
addl
imul
pop
mov
and
xchg
sbb
cs
or
or
xchg
and
jle
insb
adcl
xor
add
les
iret
into
dec
pop
out
xchg
mov
and
sbb
inc
xchg
inc
cmp
pcmpeqw
subb
mov
stc
ret
inc
push
sbb
arpl
fnsave
into
nop
daa
push
popa
lock
jl
xlat
les
sub
and
mov
jge
stos
and
mov
ljmp
lds
mov
int3
sbb
imul
test
dec
cmp
or
sub
adc
sbb
fs
daa
sahf
cmp
std
scas
pop
mov
and
add
cmp
pop
rorb
mov
int3
lret
xlat
test
aad
lret
loop
sbb
imul
jne
out
xlat
pushf
mov
enter
psadbw
mov
mov
mov
inc
cld
arpl
fldl
mov
or
int3
data16
loope
insl
and
aam
and
cmp
test
push
mov
ror
mov
or
jbe
xlat
stc
shrb
cs
and
lods
andl
pusha
jmp
or
inc
cmpl
out
cltd
xchg
cmpsl
mov
cli
dec
add
daa
out
loopne
jb
arpl
cli
cmp
inc
cmp
adc
xchg
andl
int
mov
pop
push
inc
cmp
or
mov
inc
cmp
push
mov
pop
fwait
dec
sub
iret
ret
and
add
cmp
sar
fcmovne
xchg
jbe
cltd
mov
add
lea
jle
in
lds
lret
mov
push
jne
and
pop
inc
daa
and
jo
js
lods
rorb
xlat
xchg
lods
lock
xchg
imul
push
insl
xor
dec
pop
lret
cld
xor
push
cs
cmpsl
inc
pop
in
outsb
pop
jg
mov
lret
scas
pop
pop
or
jb
je
int3
gs
int
sub
test
jp
xchg
je
mov
adc
push
and
dec
std
mov
sbb
or
scas
notl
xor
in
sub
lds
mov
sbb
mov
test
add
and
jg
jle
movsb
push
push
mov
es
cwtl
inc
sub
loope
aam
clc
lea
inc
aas
test
fcmovu
and
push
cli
dec
fwait
xlat
repz
dec
out
imul
lret
aaa
or
stc
jno
stos
movsb
jg
mov
push
and
jg
push
sbb
aas
test
fsubr
and
out
dec
hlt
push
arpl
inc
cmc
adc
dec
test
cmp
dec
pcmpgtd
shlb
jmp
push
inc
pop
jbe
aad
mov
dec
xor
and
add
inc
lea
ljmp
mov
out
jg
int
push
ja
xor
push
je
mov
mov
stos
gs
sub
test
mov
cltd
pop
cli
mov
mov
mov
pop
and
aam
insl
pop
pop
jne
enter
and
lcall
in
rcl
fwait
scas
adc
stos
outsb
shr
jle
and
push
enter
shlb
mov
inc
push
sbb
pop
arpl
mov
movsl
sub
popf
or
mov
xor
sarb
out
cltd
imul
push
push
cmc
pusha
rcl
stos
xor
jmp
dec
test
mov
lret
aad
loop
push
jnp
popa
xor
xor
or
mov
enter
push
mov
push
cwtl
pushf
push
imul
lds
jp
sub
mov
js
cmpsb
add
jns
jl
or
xlat
or
xor
mov
xor
subl
in
mov
add
or
cmp
sub
fsubrl
into
addr16
imul
and
sti
cmc
lcall
pusha
mov
push
push
pop
sub
mov
xor
mov
adc
ds
out
pop
ja
or
push
pop
js
movsb
mov
xchg
cmpsl
pop
enter
mov
xor
xchg
mov
inc
cld
das
stc
fidivrs
inc
xchg
mov
dec
cs
sub
movsl
jae
dec
pushf
iret
push
xor
cwtl
mov
push
push
imul
or
or
sub
out
xor
js
xchg
rclb
add
sub
shrl
mov
pop
pop
push
test
mov
ljmp
es
cli
sub
and
enter
or
xor
dec
xchg
mov
ja
cmp
addr16
test
lahf
cmp
mov
push
cmp
xchg
pop
scas
dec
mov
inc
jne
ljmp
pop
clts
jmp
mov
jb
mov
xchg
lret
jle
pop
dec
mov
jmp
inc
cmp
aam
cltd
fcoml
pop
frstor
adc
jl
out
pushf
push
iret
mov
adc
mov
jns
sbb
push
or
mov
sub
mov
or
int3
mov
inc
push
fsubs
xchg
jno
mov
sub
jp
push
dec
cli
les
mov
repz
je
movsb
insb
fcmovnb
adc
rcr
push
rcrb
jg
cmpsb
fstpt
inc
add
mov
in
mov
xchg
sub
mov
xchg
mov
test
add
push
xor
add
xor
jnp
mov
and
jl
push
cmpsl
cmp
das
js
divb
adc
scas
mov
inc
mov
repz
mov
add
or
add
mov
jno
daa
call
xor
dec
mov
rcll
or
leave
ds
imul
jge
out
add
rclb
mov
ljmp
shl
dec
addr16
cwtl
mov
bnd
mov
stc
push
and
shr
pop
inc
xlat
dec
shl
iret
add
in
loop
xchg
dec
call
and
lahf
or
inc
push
mov
sbb
cmpsb
popf
addr16
std
lret
mov
pop
xor
outsb
adc
nop
pusha
mov
vmread
cmp
aam
ret
xor
sub
mov
adc
daa
mov
cmpsl
dec
lods
out
and
cld
inc
sbb
mov
js
sub
xchg
aaa
mov
movsb
add
popf
cmp
dec
stc
and
ljmp
inc
inc
nop
add
xor
add
ss
ret
lock
mov
ja
inc
inc
imul
and
xchg
dec
mov
sar
fisubrs
sub
jg
popa
faddp
imulb
repnz
xchg
test
mov
dec
and
jae
pop
jno
inc
mov
sub
sub
xor
pop
jecxz
loope
lds
jne
pop
adc
aad
pop
cmp
add
aas
repnz
mov
orl
adc
pop
cli
test
mov
sub
cmp
mov
hlt
pop
xor
iret
mov
fimuls
cmpsl
popf
mov
sub
bswap
ja
in
mov
inc
sub
aad
inc
fdivrl
sbb
xor
ljmp
mov
aas
ret
sbb
test
out
push
and
stc
or
pop
mov
aam
mov
in
and
popf
push
cmp
jb
jbe
push
push
jne
pop
call
andb
into
fs
lds
rclb
mov
jnp
adc
rcr
andb
lods
enter
cmpsl
xchg
add
mov
cmp
mov
cmp
push
outsl
js
and
xorl
adc
sub
and
add
sbb
pusha
pmuludq
jo
insb
and
pop
fdivrs
leave
xor
push
jg
ret
pop
cmp
push
push
test
mov
pop
and
ss
hlt
dec
pop
and
lahf
daa
add
adc
xor
ss
adc
push
mov
adc
push
ficomps
mov
paddw
pop
pusha
popf
je
mov
data16
inc
push
mov
jo
cmpl
fdivl
icebp
mov
movsb
dec
pop
mov
loope
sti
mov
and
jnp
in
jnp
cmp
fimuls
mov
cwtl
and
popa
inc
xor
pop
push
outsl
pop
or
jg
jle
subb
xchg
fstpt
sbb
mov
clc
insb
add
mov
jne
jg
cmp
stos
stos
dec
outsb
imul
hlt
xchg
test
push
add
mov
mov
ljmp
inc
mov
inc
es
inc
xchg
into
sbb
cmp
pop
rcrb
ffree
and
loope
test
cmp
adc
in
inc
sub
jno
into
mov
add
addr16
cs
mov
js
jecxz
rcl
xchg
cmpsb
jae
inc
xor
fadds
nop
outsl
or
pop
iret
icebp
mov
sub
or
jmp
stos
jne
cmp
femms
pop
stos
ficoml
adcb
xchg
fimull
pop
mov
cmc
xchg
cmc
sbb
or
jmp
lods
mov
into
leave
pop
dec
mov
sar
cs
lea
data16
pop
scas
jle
decl
mov
mov
out
push
cwtl
cmpsl
xchg
mov
out
add
add
loopne
imul
sbb
stc
insl
and
jns
scas
enter
push
xor
or
mov
jg
aam
lcall
mov
out
filds
rcll
sbb
pop
mov
push
sbb
jae
adc
out
mov
push
jns
fwait
nop
out
dec
xchg
test
dec
stc
add
clc
aad
and
rorb
stos
daa
sub
aad
xchg
fnstsw
cld
test
testl
adc
push
imul
cltd
add
sti
nop
fwait
adc
push
in
cmc
jl
stos
fildl
popa
dec
push
popf
push
or
and
or
aad
movsb
xor
pop
inc
add
cmc
mov
dec
and
dec
cli
dec
in
jle
xchg
fnstsw
mov
pop
lret
xchg
sbb
sbb
mov
sti
inc
jno
scas
rolb
enter
xchg
cmp
and
popa
push
pop
mov
mov
daa
mov
sar
mov
jmp
scas
mov
ja
xor
je
xchg
adcb
frstor
clc
cmp
pushf
mov
pop
push
jo
mov
push
in
dec
and
push
daa
in
insl
jnp
movsb
jb
stos
xchg
adc
xor
jle
push
jne
inc
xor
leave
je
gs
pop
or
imul
jbe
into
or
sbb
mulb
mov
lea
mov
push
test
push
mov
sub
sbb
in
push
xchg
cmp
hlt
inc
cmp
std
addr16
sbb
pop
pop
mov
int
xor
push
pop
xchg
cmc
push
inc
mov
out
mov
icebp
add
mov
jmp
add
into
pop
sub
clc
dec
ja
xchg
fisttpll
enter
mov
add
push
push
add
mov
pop
insl
mov
jmp
adc
andl
mov
lcall
in
ret
ja
adc
sub
jp
jmp
adc
mov
push
fnstsw
stos
xor
adc
fdivs
sbb
or
das
push
adc
je
shll
dec
and
lods
or
mov
adc
test
and
push
xor
xchg
adc
push
movq
sbb
mov
xor
shrl
push
fisttps
mov
xor
sub
negb
mov
pop
daa
push
sbb
mov
sub
sbb
xlat
xchg
icebp
ja
fnstenv
icebp
movsb
scas
je
ret
mov
jb
dec
jne
xchg
lock
inc
popa
cmpl
test
imul
idiv
xchg
adc
ret
lds
sub
push
orb
dec
test
arpl
xorl
add
push
in
test
push
xchg
push
jg
fistpl
cmp
and
cmc
int
popf
adc
clc
ret
push
ja
push
rol
mov
sbb
xor
aad
test
sub
dec
xor
gs
jb
fisubl
bound
fistps
aas
and
sbb
mov
daa
push
addr16
mov
ja
push
inc
push
adc
pop
mov
add
es
jae
pop
stos
sub
add
inc
and
ret
rclb
sub
or
cmpsb
xchg
cwtl
xchg
rclb
push
pop
in
call
mov
jmp
dec
rorl
mov
sahf
inc
gs
jg
into
das
fldt
xchg
test
cwtl
inc
lahf
xchg
and
daa
add
lods
iret
or
repnz
ss
test
sub
dec
ljmp
imul
sub
cmp
push
ds
mov
dec
sub
icebp
ror
repz
push
mov
out
cmp
add
xchg
mov
inc
pop
or
scas
mov
imul
push
jb
insb
pop
jae
cmp
hlt
loopne
pop
mov
pop
sub
cmp
cmp
adc
adc
add
mov
in
mov
insl
cli
iret
mov
xorb
pop
shlb
cltd
mov
xor
xchg
ret
ret
or
rcr
sbb
cld
adc
and
or
fiaddl
bound
mov
mov
cmp
jg
cmp
imul
jno
divb
cld
mov
leave
in
and
hlt
outsl
into
cmpsl
jb
jae
sub
pop
jmp
push
dec
data16
adc
scas
mov
jns
fwait
and
mov
and
ds
sti
pslld
adcl
lahf
cmp
insl
mov
mov
cmp
test
jae
inc
leave
and
test
sub
mov
xor
mov
mov
ds
in
insl
mov
or
in
loop
inc
or
shll
mov
cmp
or
xlat
jae
pop
adc
mov
dec
add
push
icebp
and
daa
fadd
sub
shrb
jg
cmp
cmp
mov
addr16
clc
and
dec
rorl
pusha
lods
lea
cmp
cmc
pop
repz
mov
je
mov
mov
ljmp
xchg
paddusb
jmp
adc
shlb
cmp
int3
pop
push
pop
mov
mov
cmp
loopne
clc
xchg
ss
sbb
movsl
sub
mov
mov
inc
sbb
jmp
cmp
mov
lds
adc
push
mov
mov
cmp
ret
fsubrs
ja
rol
das
mov
mov
in
stos
add
ja
je
gs
pop
xor
push
test
cwtl
dec
adc
xchg
dec
jo
test
xchg
enter
lods
pop
xchg
push
daa
test
mov
jbe
repz
inc
in
jp
sahf
outsl
sbb
xlat
call
insl
ret
sti
mov
mov
and
movsb
into
movsb
lods
nop
maxps
xorl
and
ds
fucomi
and
sub
cmp
mov
sbb
cmp
push
push
fildl
jp
inc
lds
pop
imul
mov
insl
pavgb
pusha
mov
jae
call
push
stos
lds
mov
pushf
lret
xlat
push
stc
sub
push
flds
jno
mov
lret
mov
mov
stc
sbb
cmc
out
psrad
lods
mov
add
jnp
clc
stos
mov
mov
imul
cmp
cmp
adc
adcb
int3
outsb
adc
inc
dec
cmovne
hlt
mov
mov
fwait
push
or
pusha
lahf
add
mov
push
mov
mov
jno
push
cmp
and
mov
xchg
dec
push
mov
je
les
mov
mov
fstps
jl
push
xor
aam
arpl
mov
pop
das
xchg
inc
dec
jmp
in
rclb
outsl
pop
push
lret
mov
add
mov
xor
inc
add
mov
aad
add
sub
test
mov
scas
dec
mov
clc
loopne
pop
and
cmp
cwtl
lret
loopne
inc
inc
and
test
cld
adc
jbe
nop
mov
stc
and
jl
std
jl
in
cmc
mov
sub
loope
mov
or
mov
push
mov
inc
mov
pop
int3
mov
mov
jmp
mov
xchg
fdivrl
inc
cmc
test
and
cs
lock
std
xlat
sarl
mov
nop
leave
mov
push
fwait
jge
popa
push
lahf
dec
push
popf
mov
mov
fidivs
mov
sub
or
lods
les
add
sti
jnp
push
fimuls
dec
xor
dec
imul
aas
xchg
out
jb
sub
icebp
das
pop
jmp
and
pop
aad
jbe
int
nop
shll
jnp
cmp
enter
push
sub
in
push
test
sarl
pop
dec
cld
mov
xchg
mov
jbe
outsb
ss
lret
cld
xchg
or
cmp
rorb
ss
loopne
fldcw
fistpl
cmc
ret
fcomps
jge
shl
adc
cmp
int
adc
int3
add
lret
push
mov
jae
sbb
aas
adc
sbb
out
mul
mov
mov
movups
aas
test
int3
icebp
repz
xchg
inc
ljmp
push
mov
stos
xlat
cmp
pusha
cli
add
out
sbb
push
pop
push
pop
jno
xor
rcrl
inc
popa
das
jge
mov
mov
sbb
cmpsb
insb
enter
mov
cmp
leave
add
mov
dec
pusha
jle
pusha
cmpsb
inc
movsb
mov
int
pop
mov
push
sub
xor
pop
pslld
jne
lds
lods
and
mov
das
jecxz
pushf
add
pushf
inc
lret
push
add
cmpl
aaa
or
xchg
popf
mov
mov
pop
jmp
fstps
xchg
sub
lea
fwait
add
sbb
ret
clc
jne
push
icebp
les
and
cltd
mov
pop
cmc
popf
mov
aam
sar
lods
mov
outsb
cld
call
xor
cli
jbe
add
aam
mov
lods
xchg
xchg
push
mov
inc
xchg
pop
xchg
dec
dec
dec
mov
jge
jo
xchg
mov
cs
or
add
inc
enter
cmp
pushf
push
xor
and
int
mov
aam
dec
push
ljmp
push
push
inc
insb
adc
int3
cli
sub
inc
sbb
int3
out
dec
adc
push
negb
cmpsl
cld
bound
inc
adc
das
xchg
mov
lahf
shlb
jg
test
insl
aad
cmp
jno
xor
mov
jbe
push
mov
mov
mov
sbb
pusha
xchg
out
sbb
pop
push
lcall
dec
iret
out
dec
push
dec
div
inc
lods
fdivr
fwait
es
in
ljmp
push
push
icebp
jo
sub
gs
xchg
out
out
xchg
subb
pop
int3
mov
add
sbb
cmp
nop
lods
int3
xor
and
mov
stos
and
push
xlat
es
out
pusha
fwait
enter
xlat
movsb
pop
aam
cmp
aaa
cwtl
lea
inc
push
cmpsb
cmp
add
cmp
mov
clc
test
jmp
inc
pop
push
mov
dec
iret
inc
lods
and
mov
pop
pop
aaa
shrb
jbe
popa
cmc
insl
repnz
outsl
jbe
fldl
sub
data16
lods
xchg
xor
mov
mov
xor
xor
push
cmp
dec
fdivrs
cmpsl
fsubs
push
xchg
push
popa
and
jne
fnsave
mov
mov
fisubs
dec
test
enter
push
mov
movsb
shrb
pop
jle
inc
adc
sbb
xchg
stc
pushf
push
mov
bound
sbb
xchg
pop
sbbl
jmp
popa
shlb
jbe
in
repnz
push
ret
call
dec
cmp
int
adc
mov
cmc
sbb
shl
enter
xchg
xor
lcall
jl
mov
js
stos
dec
xchg
pushf
adc
stos
xlat
inc
cmp
je
pusha
cwtl
mov
pop
repnz
popf
fnstcw
fcoml
mov
jle
pop
lea
jne
pop
or
hlt
sub
adc
sbb
leave
jne
mov
stos
mov
enter
enter
mov
pop
aam
push
push
in
loope
movsb
mov
in
adc
fiaddl
xor
mov
jmp
add
push
stc
inc
mov
inc
pop
mov
mov
or
into
nop
pop
stc
cmp
outsb
add
fcomp
mov
cmp
sbb
leave
mov
mov
mov
out
movsb
es
mov
aas
aas
out
out
xchg
arpl
pop
xchg
jecxz
hlt
outsl
test
std
or
lcall
push
shlb
ffree
aas
popf
sbb
mov
pop
push
add
inc
arpl
aad
push
loope
ss
sub
mov
or
pusha
mov
mov
mov
call
jecxz
push
or
sub
cmpsb
jns
arpl
aam
inc
mov
fildll
jecxz
clc
adc
sahf
push
inc
jmp
test
insl
xor
pop
push
aaa
in
xchg
fs
ret
mov
xor
and
popa
dec
mov
and
clc
mov
rorb
leave
enter
pop
cld
out
adc
aas
add
mov
inc
test
or
jbe
std
out
cmpsl
shrb
std
gs
cmp
es
cmpsl
fidivrl
imul
lret
push
fstps
les
vmptrld
cmc
cmp
aam
add
in
cmpsb
bound
mov
sti
test
dec
inc
xor
sub
insb
mov
cmp
insl
inc
ud1
cmpsl
nop
movsl
sbb
inc
inc
jbe
int3
in
lods
fiadds
or
daa
es
pop
dec
xchg
push
out
mov
jle
pop
pop
xchg
aas
push
loopne
cmp
sbb
cmc
xchg
adcl
and
sbb
lea
pushf
orl
pop
push
pop
stos
icebp
mov
addl
loope
fwait
lret
loopne
jecxz
pop
cmp
mov
sbb
xchg
arpl
cmp
mov
das
shlb
cmp
sub
add
lahf
xchg
adc
pop
jmp
xchg
insl
xchg
arpl
push
jb
add
jl
mov
adc
aas
sub
test
les
adc
mov
cmp
sub
mov
mov
lret
fisttpll
mov
out
jns
loopne
inc
ret
dec
dec
or
repz
xor
mov
mov
and
add
and
sbb
mov
xchg
xor
scas
fstpt
mov
xchg
fsubs
pop
fisubs
rcr
jmp
mov
mov
xor
pop
scas
aam
ljmp
int
pushf
mov
mov
out
mov
rcl
xchg
bound
dec
push
adc
insb
clc
cmp
stos
mov
lcall
loop
sbb
push
clc
xlat
hlt
pusha
mov
shl
adc
sbb
aad
mov
ficompl
add
int
aam
push
rorl
mov
dec
inc
lds
cmc
dec
push
fmulp
dec
mov
adc
cmpsl
inc
xchg
jmp
scas
out
sub
rcr
js
test
mov
in
jns
push
in
xor
xor
sbb
inc
insl
aas
icebp
int3
adc
jne
push
mov
mov
jmp
fbld
mov
mov
imul
and
xchg
sbbb
shr
leave
push
or
mov
adc
outsl
out
es
ret
cmp
scas
sarl
mov
enter
and
xchg
mov
jmp
and
pusha
outsl
sarl
xor
stc
pop
mov
cmp
loopne,pn
or
mov
stos
jno
iret
pop
mov
sub
mov
mov
stc
icebp
or
iret
scas
sub
mov
jb
xor
xor
test
xchg
out
sarb
sarb
fidivl
js
add
movsl
das
imul
in
mov
out
lahf
sbb
mov
add
mov
mov
in
aad
fwait
mov
xchg
sub
sbb
push
fisubrl
push
xchg
mov
mov
mov
jg
add
adc
leave
stos
cld
rolb
add
insl
in
dec
jbe
lock
lods
push
sbb
sbbb
adc
pop
mov
scas
or
lods
int
adc
lahf
jp
jns
movsl
popa
lds
mov
das
pop
push
mov
imul
mov
lea
push
cmp
pop
aad
inc
lds
cs
cmp
or
or
push
in
or
lahf
mov
jns
or
clc
cltd
and
inc
cltd
in
xor
sahf
push
cld
xor
xor
and
shl
addb
dec
jle
mov
dec
dec
cmpsl
pop
sub
pop
pop
mov
cmp
cli
cli
or
fs
out
out
cld
add
add
mov
pusha
stc
into
inc
mov
out
cmp
add
enter
mov
insl
mov
int
mull
mov
in
xchg
mov
cmpsl
sub
adc
mov
aaa
cmp
sub
or
inc
sti
xor
js
cmpsl
int3
mov
and
mov
sbb
pushf
adc
xchg
mov
mov
mov
xchg
and
insb
sub
loopne
mov
ds
sti
jp
pop
scas
pushf
mov
or
add
repnz
mov
pop
in
xchg
and
ret
or
pop
xlat
inc
out
das
mov
or
test
cmpl
aaa
lods
xchg
mul
je
sahf
lods
movl
mov
das
inc
mov
lods
scas
cmp
and
sub
out
repnz
pop
aaa
in
frstor
lcall
shrb
lcall
stc
call
lcall
stc
add
xchg
insb
cmp
xchg
add
fs
inc
push
je
cld
adc
mov
enter
pop
adc
in
add
inc
dec
mov
cmp
ret
adc
xchg
rcrl
jno
loopne
hlt
adc
xchg
sbb
and
inc
inc
pop
pop
shll
xchg
sub
ret
mov
xlat
fwait
shlb
movsb
xchg
push
xchg
aas
sub
lcall
sub
insl
lock
and
pushf
xchg
hlt
push
adc
bound
test
mov
fdivrl
dec
testb
mov
scas
push
and
cmp
sbb
sbb
inc
cld
xor
not
inc
pop
inc
sbb
insl
jno
sbb
scas
jb
or
mov
mov
jnp
aas
aaa
aaa
sub
inc
or
mov
lret
popf
or
pop
mov
cmp
mov
dec
xchg
lock
inc
in
mov
lods
or
fsts
sbb
lcall
lret
push
or
faddp
shlb
rorb
or
push
cltd
pop
push
mov
incl
add
arpl
dec
pop
aad
leave
sub
mov
cmp
mov
jmp
repnz
mov
mov
inc
ds
out
jae
adc
mov
mov
and
sbb
lock
jbe
fldcw
sub
loope
fisttps
cmpsb
shll
int
xchg
dec
fst
mov
stc
outsl
and
jge
pop
mov
mov
add
xchg
cmpsl
in
lret
out
sub
push
into
fstps
jns
lcall
and
movsl
out
loope
xor
cli
mov
repnz
dec
push
fisttpl
cmp
jb
dec
scas
xchg
dec
mov
xor
jae
xchg
ss
adc
cmp
faddl
test
cli
jcxz
in
xchg
dec
cmp
enter
inc
out
cmpsb
or
out
lock
jb
inc
inc
mov
imul
jle
insl
push
dec
clc
inc
cld
mov
stos
lret
ds
mov
or
or
adc
pop
imul
cmp
adc
shrl
ss
test
mov
mov
scas
or
mov
inc
jge
and
nop
test
push
xchg
popa
fwait
cmovns
enter
call
push
lret
dec
pop
xchg
popl
push
xor
xor
out
xor
jecxz
orl
gs
push
cli
sub
int
lret
fcmovnb
test
sahf
or
and
inc
cltd
rol
inc
push
sbb
test
push
push
jb
cmpb
xchg
xor
jl
test
mov
mov
pop
aaa
jg
shlb
inc
xchg
sub
mov
popa
shr
lods
cmpsb
inc
mov
mov
int
ljmp
adcl
iret
cmp
rcrb
dec
aas
mov
cmpsb
call
xor
in
fimuls
je
add
scas
lds
pop
xchg
pop
mov
pop
sub
dec
adc
stos
jbe
popf
jb
es
fmul
shll
push
cld
icebp
aas
cli
out
lcall
popa
lahf
movsl
sbb
stos
jno
movsl
lret
push
aaa
jmp
test
mul
jne
cmpsb
cmpsb
movb
push
jecxz
test
inc
sar
insb
xchg
adc
pop
and
add
add
dec
mov
xor
jecxz
and
jns
mov
cld
loope
test
test
jmp
leave
xchg
repz
dec
mov
push
and
inc
push
cmp
dec
mov
mov
xor
xchg
mov
mov
mov
enter
ljmp
cli
dec
mov
ljmp
lds
or
mov
push
pop
leave
scas
shl
bound
xor
and
adc
sbb
call
sti
mov
fistps
xchg
mov
mov
fst
paddb
mov
and
xorb
push
jnp
or
fidivrl
mov
adc
push
dec
dec
xchg
out
std
clc
call
xor
pop
adc
or
movsl
cmp
int
call
sbb
popa
cmp
les
sbb
sub
les
fcomps
inc
cltd
es
push
fs
aaa
cltd
fldpi
sbb
xchg
jo
cwtl
mov
inc
push
adc
mov
jg
mov
dec
loop
jae
stos
xchg
dec
sbb
adc
mov
jge
or
pop
das
or
scas
xchg
push
add
jno
adc
mov
mov
lret
pop
arpl
mov
sub
into
adc
sub
mov
test
popf
xchg
fidivrs
mov
fistpl
sbb
and
out
add
loop
je
aad
vpunpckhdq
xor
pop
push
arpl
iret
int3
and
mov
inc
cmp
jo
or
repz
mov
sbb
xchg
xor
xor
mov
dec
and
bound
in
lret
int
pop
leave
mov
mov
fldl
dec
iret
lret
enter
ret
cmc
out
xchg
sbb
je
mov
mov
loop
iret
enter
jle
dec
repnz
mov
mov
xchg
ficomps
int3
or
std
fildll
jecxz
mov
loope
mov
xchg
pop
fstl
leave
aaa
fwait
cs
add
xchg
outsl
or
sub
push
inc
cltd
sbb
ljmp
stos
test
or
scas
cmpsl
or
or
mov
cld
push
fcmovb
movsb
pop
leave
xchg
mov
mov
in
cmpsl
cmp
push
lods
adc
imul
mov
pop
lret
dec
into
add
pop
stos
add
and
cs
pop
iret
movsb
sub
sbb
jmp
jmp
cmc
mov
or
jl
movsl
fwait
stos
cwtl
jnp
sub
outsb
lods
scas
inc
scas
in
es
jo
pop
iret
dec
mov
push
in
sbb
mov
mov
aas
cmp
pop
mov
pop
xor
cmc
push
push
mov
push
push
mov
movsl
or
pushf
jo
bound
int3
js
cmpsl
fucomp
addr16
xchg
fsts
cmp
sbb
jb
in
pusha
mov
mov
lahf
mov
out
pop
dec
ljmp
inc
lcall
mov
daa
es
stc
int
add
push
pop
push
and
adcb
jno
lock
xchg
fists
and
cmp
or
and
xor
pop
lcall
testb
push
repnz
stc
inc
fstl
dec
mov
mov
cmp
push
les
xchg
pushl
lock
addb
mov
cs
scas
dec
mov
mov
cmp
bound
xchg
dec
mov
nop
inc
idiv
and
mov
xor
cmp
pushf
cmp
pusha
loope,pn
mov
pop
pop
enter
outsl
add
push
xor
pop
das
gs
and
mov
xchg
adc
lods
mov
pushf
xchg
dec
in
pop
stos
sub
add
mov
push
pop
ljmp
enter
cmp
popf
or
add
push
mov
push
cld
into
mov
xor
andl
and
nop
inc
dec
cmpsl
mov
pop
orb
mov
lock
cmp
sub
mov
or
insb
adc
nop
pop
pop
std
mov
daa
clc
jae
pop
jne
jo
imul
dec
and
lds
or
addr16
pop
cmp
adc
rcl
outsb
adc
popf
sbb
xchg
push
sbb
sahf
out
outsl
fnstsw
lea
inc
fdivrs
mov
lods
fimuls
aas
sbb
imulb
sub
push
push
cmp
aam
xor
push
dec
cli
push
dec
or
stos
cmc
cmpsl
fwait
rep
or
pop
or
pop
sbb
rcrb
jecxz
adc
in
xor
in
sbb
test
setbe
and
push
fists
mov
sub
imul
sub
or
mov
inc
jg
xlat
out
sahf
subl
out
mov
push
inc
pop
rcl
mov
xor
stos
or
mov
xchg
xor
fucom
jecxz
leave
sbb
int
dec
mov
cld
dec
pop
lea
xlat
push
sub
pop
pop
repnz
pushf
fdivs
test
shll
in
mov
cmp
popa
cwtl
xchg
cltd
push
pop
sbb
clc
cltd
cmpsb
mov
movsl
js
push
mov
mov
fs
pop
hlt
dec
testl
xor
subl
clc
repnz
jl
sub
xlat
and
add
fsts
push
xor
or
dec
lock
repnz
or
pop
in
or
sarl
lcall
dec
sbb
xchg
sahf
xchg
cmp
les
push
daa
pop
and
mov
push
incb
jmp
sahf
data16
mov
negl
push
fimull
sbb
mov
jp
int3
push
mov
test
sbb
outsb
add
xchg
mov
inc
mov
push
sbb
xor
inc
mov
int
xchg
sbb
fldcw
lcall
stc
and
xchg
or
jbe
sub
xor
sbb
or
hlt
add
add
ja
popa
cld
enter
mov
push
jg
mov
stos
sbb
mov
inc
push
outsb
pop
ds
lret
popf
fs
mov
in
push
xchg
add
dec
enter
lds
popf
sbb
jnp
or
xor
inc
mov
addr16
enter
test
popf
shrl
lahf
mov
xchg
dec
push
or
fs
pusha
pushf
push
shlb
xchg
out
lcall
jb
mov
xchg
ds
bound
scas
lds
loop
std
shlb
pop
mov
out
xchg
lcall
cmp
imul
pop
movsb
stos
or
sar
sti
lret
data16
ja
adc
jno
sbb
add
pop
mov
repnz
and
sahf
in
and
xchg
imul
rcrl
adc
iret
arpl
fildll
dec
out
movsb
cmpsl
pop
push
mov
and
scas
into
sub
inc
mov
dec
popf
push
sub
aam
inc
mov
int
bound
orb
mov
xor
lods
stos
pop
pop
cs
lods
add
hlt
and
jecxz
cmp
and
dec
popf
addl
dec
cmpsb
sub
xor
test
dec
cmp
and
inc
pusha
mov
fcompl
sbb
fs
push
lock
mov
inc
pop
movb
xor
ret
and
cmp
lahf
dec
and
repnz
or
das
mov
cwtl
xor
dec
sbb
sbb
stc
push
or
fisttps
pop
shlb
loope
inc
or
xchg
or
into
lret
fcomps
sub
aas
roll
pop
add
or
lea
push
and
lret
add
inc
cmpsl
fmull
xor
and
clc
cli
mov
shlb
inc
dec
es
push
sarb
fbld
movsl
mov
loope
pop
pop
jae
or
test
sub
aaa
xor
hlt
or
adc
mov
ret
out
fldcw
xlat
xor
in
push
sub
loopne
std
repz
or
lods
movsb
jno
stc
popf
pop
shrb
rclb
aaa
dec
fdivrl
outsl
repz
rclb
out
add
cs
std
sub
cmp
sub
in
loope
dec
adc
fs
mov
scas
lods
xor
adc
scas
aas
xchg
into
test
cmpsl
sub
sbb
or
push
mov
mov
adc
std
adc
ja
dec
ficompl
mov
outsl
hlt
shll
in
pop
icebp
xchg
xchg
in
add
adc
cmp
push
sbb
or
xchg
jmp
or
dec
jl
inc
lcall
ds
dec
into
xchg
ss
add
insl
lds
je
shrl
push
mov
cwtl
sub
xor
mov
cmp
push
pop
in
mov
and
xchg
insl
mov
iret
xor
add
push
fldl
mov
inc
shrb
dec
call
testb
adc
pop
push
pop
sub
roll
std
pop
in
mov
mov
adc
fildll
testl
mov
faddl
mov
cli
pushf
arpl
lea
adc
out
pop
xlat
lock
loop
mov
in
call
or
push
test
sbb
xor
call
shl
mov
lds
mov
icebp
pop
sub
fadd
stc
cmp
inc
cmp
fisubl
clc
sub
adc
idivb
or
stos
sub
ret
addr16
movq
leave
mov
pop
decl
leave
les
ret
scas
xchg
test
mov
test
xchg
and
icebp
mull
mov
pop
lods
sub
bound
cwtl
push
xlat
dec
pop
das
rcl
pop
pop
lock
mov
adc
mov
mov
nop
ds
std
addr16
adc
fnstcw
or
add
adc
addl
sahf
sbb
mov
rorb
orl
xor
arpl
mov
loope
push
jo
sbb
jns
adc
inc
sbb
xchg
outsb
orps
pop
jl
push
jb
sarl
push
mov
xor
sub
in
ficoms
fiadds
popa
sub
pop
jnp
adc
in
dec
aad
inc
adc
rclb
sub
fadds
or
repz
lods
ds
insb
movsl
adc
stos
outsb
dec
adc
push
lcall
iret
inc
inc
not
cltd
fdivl
mov
xchg
dec
cmpsl
imul
jnp
mov
mov
pushf
sub
jne
pop
dec
or
mov
fcoms
mov
inc
xlat
out
jg,pt
scas
xor
jae
jl
imul
pop
loop
std
push
repnz
mov
dec
inc
inc
dec
movsb
or
jne
pushf
inc
pop
lahf
stc
sub
ja
mov
cmc
mov
push
jmp
mov
clc
out
idiv
xchg
jmp
pop
testb
pushf
das
cwtl
jne
cmp
dec
push
movsl
adc
ss
enter
jb
pop
aad
frstpm(287
test
test
xor
or
mov
jle
ja
fnstsw
jnp
xchg
xchg
mov
ret
cltd
mov
fisttps
mov
add
jl
lods
gs
adc
jmp
mov
shlb
shrb
idivb
filds
and
jne
mov
test
push
dec
iret
rcll
outsl
ret
adc
jnp
mov
and
stos
xor
out
ret
addr16
sbb
xchg
xor
pop
aas
mov
mov
in
lcall
pop
aas
and
mov
call
add
shll
divl
aas
div
ja
xor
adc
hlt
movsb
inc
shrl
mov
in
xchg
mov
test
ret
inc
xchg
les
or
movsl
mov
add
xchg
pop
popf
jmp
add
sub
pop
imul
in
shrb
or
mov
filds
clc
sbb
test
aad
mov
jmp
push
in
add
adc
mov
xchg
push
aas
and
sub
inc
data16
sub
inc
mov
sub
dec
loop
fisubs
add
ss
jmp
lods
aad
adcl
shl
cld
mov
sbbl
outsb
dec
push
pop
push
lock
inc
pop
or
xchg
loopne
sbb
std
cmp
fists
mov
mov
push
dec
pushf
imul
push
es
sbb
cmp
mov
scas
loopne
pop
inc
and
sbb
outsl
inc
lret
xor
jge
push
fists
mov
rcr
adc
addr16
mov
mov
or
jl
mov
sti
cmp
jecxz
push
pop
sub
push
fwait
aaa
jae
push
cmp
cmp
scas
xor
dec
aam
mov
and
push
gs
sbb
xor
cmpsl
jge
insb
and
into
fcoml
mov
je
ror
mov
movsl
push
cwtl
xchg
insl
sti
xor
call
icebp
ret
xchg
cli
xor
jl
sbb
ffree
rcll
or
pop
lea
lods
loope
mov
imul
out
jge
cmp
xchg
push
iret
cmp
fstps
mov
and
add
inc
rol
xor
adc
pop
imulb
and
gs
sub
mov
pop
mov
mov
mov
jl
out
fcom
and
mov
imul
inc
jbe
icebp
pop
fists
ljmp
ljmp
jmp
mov
nop
dec
shl
mov
dec
jg
pop
push
mov
lahf
mov
xor
and
aas
arpl
in
jmp
scas
or
icebp
sbb
jno
or
dec
lahf
xchg
and
in
xchg
addr16
out
adc
mov
cs
rclb
inc
pop
arpl
cs
repnz
je
sbb
xorb
mov
call
cmp
cmp
and
fcmovnb
dec
std
xorl
adc
iret
imul
pop
xor
mov
cmp
cmp
enter
sbb
jns
or
lahf
out
xor
sbb
lock
xchg
fst
cmp
xchg
lods
fidivs
out
icebp
test
fstpt
test
jp
test
int3
stos
in
fdivs
daa
pop
or
inc
insl
cmp
mov
lock
cmp
sbb
and
pusha
sub
das
pop
nop
arpl
add
pusha
mov
sbb
lcall
pop
jbe
stc
or
xor
daa
fcmovnbe
xchg
enter
and
popf
ficomps
sub
ss
call
fs
or
cmpsl
out
subb
sub
mov
test
lods
mov
dec
movsl
xor
repz
imul
push
sub
out
arpl
fildll
push
cmp
inc
jne
cld
dec
out
mov
mov
data16
inc
mov
mov
push
push
lods
pop
xchg
push
mov
ss
aas
movsb
jnp
jb
mov
fimuls
xor
mov
nop
fists
fsubrl
das
mov
fwait
xchg
mov
cmpsl
insb
ja
sbb
or
pop
dec
outsl
subl
sahf
ljmp
jle
mov
push
sub
lcall
xor
inc
xchg
pop
add
repz
jno
xchg
rorl
cmc
outsb
xchg
lret
ja
sub
push
pop
ret
push
sub
cmp
jge
loopne
jo
add
pop
or
or
mov
cmp
imul
das
rcrl
je
test
push
pop
scas
fidivs
fimull
mov
repz
int
jnp
mov
dec
fcoml
pusha
add
lods
loop
mov
pop
push
sub
lods
mov
mov
fbstp
mulb
mov
test
dec
imul
mov
jns
arpl
cld
cmp
or
imul
cmp
cmp
shlb
stos
mov
mov
inc
ficompl
jbe
outsl
cmp
sbb
pop
outsl
out
xor
or
mov
icebp
jne
mov
xchg
push
mov
push
addr16
sbbb
mov
orb
ret
jbe
sbb
add
lea
xchg
jns
fwait
shr
in
xchg
int3
arpl
and
mov
add
mov
lock
rclb
pop
xlat
jecxz
push
mov
insl
fiaddl
xor
inc
lcall
xchg
cmc
lcall
in
test
jecxz
adc
stos
jae
adc
in
push
jge
cmp
push
inc
cmc
xlat
std
sub
jp
inc
and
mov
enter
cld
jecxz
xorb
fcomps
add
rcrl
pop
frstor
lcall
cld
test
cmp
out
or
mov
les
movsb
mov
lahf
add
mov
pop
cltd
pop
inc
push
arpl
mov
out
xorl
add
sub
and
arpl
out
mov
push
adc
rorl
cmp
sbb
nop
insl
lret
mov
lahf
mov
mov
mov
scas
push
mov
xchg
insl
pop
mov
sbb
dec
lret
fadd
inc
insb
out
add
xor
pop
jnp
dec
xchg
data16
sar
lea
mov
jp
sbb
mov
test
xor
hlt
popa
test
stos
ja
and
pop
shll
and
xor
sub
jl
fisttpl
adc
or
adc
xchg
dec
sbb
cmpl
divb
cmpsl
adc
pop
mov
ror
push
jecxz
lret
aaa
out
stc
and
out
mov
out
gs
cmp
push
pop
in
and
mov
adc
pop
sbb
fwait
sar
ds
dec
jno
cmp
cmpsb
sbb
cmp
jae
push
mov
sbb
mov
outsl
jmp
push
enter
and
push
repnz
xchg
lea
and
les
sti
mov
xor
xchg
adc
jmp
push
xor
cmp
ljmp
pop
xor
push
or
inc
push
les
insl
xchg
sub
xchg
mov
fmul
data16
pop
pop
pop
in
sbb
pusha
cmp
sbb
sbb
cmp
mov
and
cmpsl
pop
jo
pop
lahf
fs
xchg
insl
cmpsb
jge
cli
inc
stos
jnp
cmpsl
test
or
out
orb
or
bound
loop
xor
or
jge
je
shlb
lds
xchg
adc
in
jae
enter
repnz
mov
das
adc
sti
movsl
clc
popa
stc
out
mov
jecxz
adc
imul
repnz
ffreep
pop
ja
fidivrl
push
testb
pop
xchg
lahf
int3
outsb
mov
pop
orl
in
fbstp
cmp
push
xchg
scas
jnp
push
bound
pop
or
pop
sbb
dec
fs
dec
mov
xlat
scas
push
jae
hlt
aas
mov
ss
aam
mov
pop
mov
cltd
adc
ret
mov
sub
mov
dec
xor
ljmp
orl
jg
rorb
pop
adc
push
adc
bound
aaa
mov
popa
or
or
push
inc
sub
sbbl
mov
test
mov
cmpsl
lods
aam
xlat
in
pop
add
mov
and
cmp
jo
cld
stos
lods
dec
enter
and
lds
push
xor
jge
xchg
dec
cmpb
mov
xchg
xor
add
xchg
test
and
jns
mov
fwait
pop
mov
inc
mov
aas
xchg
push
out
ds
push
das
pop
fsubl
sbb
loope
jle
mov
mov
pop
push
sub
cmp
mov
adc
mov
in
xchg
into
movsl
add
xchg
fwait
fisttpll
cmp
cmp
push
add
imul
sub
xchg
sub
mov
jne
in
pop
xchg
test
cmp
or
scas
cmp
aaa
cmp
pop
rcll
sub
mov
imul
lea
jg
jns
jp
xor
jns
jae
int
out
or
sbb
adc
pusha
scas
rep
add
cmp
gs
add
ds
mov
push
arpl
ret
sarb
mov
ss
and
sarb
inc
cmp
mov
sub
mov
das
aam
lea
dec
push
das
mov
inc
adc
gs
popa
das
pop
inc
inc
cmpsb
das
add
sub
out
shrl
fdivs
push
ret
cmp
mov
and
pop
or
xor
les
sub
js
and
inc
cmpsb
sahf
pop
pop
xchg
aam
inc
mov
jle
scas
insl
loope
mov
mov
out
cmpsb
pop
jae
popa
test
inc
mov
outsb
add
mov
mov
and
lds
and
iret
dec
call
mov
jmp
push
xchg
mov
cmp
sti
add
fisttps
bound
xchg
cmp
outsb
pop
movl
lods
push
sbb
inc
repz
cmpsl
mov
out
dec
mov
xchg
add
cmp
add
xchg
pop
xor
sbb
por
aad
jmp
lret
pop
push
pop
mov
sti
or
std
mov
jae
int
xor
xor
leave
xor
dec
js
data16
inc
xchg
push
imul
je
mov
pop
iret
inc
das
add
fsts
push
push
aas
lret
sub
xchg
adc
test
sub
pop
jnp
sbb
jle
cmc
xchg
popa
and
in
hlt
xchg
les
pop
or
cli
jb
std
out
mov
push
pop
lods
rcl
stos
sbb
jno
lret
mov
mov
or
fs
outsl
mov
xchg
aam
cltd
xor
iret
sbb
aad
call
mov
cwtl
jmp
cmp
mov
lret
cmpl
and
rcll
out
mov
lods
push
and
aaa
and
mov
stos
lods
cmp
xchg
inc
bound
xlat
cmc
pop
aaa
filds
adc
inc
cmp
push
mov
into
int
jns
gs
mov
or
stos
dec
std
and
sbb
adc
imul
cmc
xchg
idivb
shll
js
xor
xchg
fcomip
or
add
scas
mov
xchg
fists
subb
mov
idivl
sub
stc
es
ret
outsl
scas
loope
mov
daa
fwait
sub
jmp
adc
cmp
pop
inc
pop
pop
jp
rol
outsl
fisttpll
jle
test
loopne
xor
in
ret
sbb
hlt
xlat
iret
fadd
js
sub
jecxz
pop
jmp
push
fdivrl
outsl
ficompl
mov
sub
push
in
lock
mov
clc
xchg
xchg
sbbl
mov
sub
push
mov
or
cmp
inc
push
sti
aas
mov
mov
and
dec
lret
mov
popa
into
lods
daa
scas
jecxz
xchg
lret
mov
xor
and
nop
adc
mov
xchg
and
push
addr16
out
addl
std
mov
inc
mov
or
out
sbb
sbb
adc
repnz
shrb
sub
lret
jp
jge
pusha
mov
cmpsl
insl
and
push
xor
mov
dec
mov
fs
rorb
cwtl
dec
pop
xchg
repz
lahf
cld
mov
cmp
pop
ret
dec
enter
repz
test
std
cmp
cmpsb
cmpsb
idivb
das
and
and
std
sar
lret
and
push
mov
sub
sbb
jl
sbb
cmc
xor
fwait
push
in
push
cli
mov
xchg
ds
xchg
mov
xlat
lret
stos
push
xchg
and
popf
cwtl
arpl
jo
xchg
cmc
lret
jg
xchg
xchg
in
call
std
or
inc
pop
repnz
loope
mov
adc
jge
call
add
lock
jg
adc
or
pushf
dec
js
loopne,pt
jo
xchg
popf
mov
push
inc
jle
mov
call
roll
ret
inc
add
out
pop
and
cmpsl
mov
and
test
sub
mov
sub
test
scas
or
gs
fsubp
dec
jmp
out
es
xor
bound
cmc
xor
subb
push
jbe
hlt
popa
adc
std
jmp
mov
add
imul
into
and
scas
pop
cmp
idivl
sarl
jecxz
outsb
xor
cmpsb
mov
insl
jecxz
sbb
cmp
cmp
add
stos
adc
clc
push
jnp
or
and
jg
xchg
or
sahf
fisubrs
imul
loop
sbb
stos
pop
push
push
es
dec
and
icebp
push
push
cs
adc
fcmovb
lret
mov
push
cmp
jg
cmc
jnp
lahf
lods
pushf
iret
pop
jl
stc
dec
xchg
cmpb
shrl
mov
lret
mov
ret
sub
dec
fdivrp
xchg
clts
mov
sbb
push
cmp
fldenv
testb
pusha
cmpxchg8b
lret
and
xor
fdivrl
shr
clc
nop
es
mov
repz
ja
and
push
les
ja
inc
ret
imul
xchg
pop
out
adc
push
inc
sbb
aaa
adc
ds
outsl
mov
cmp
push
adc
xchg
mov
mov
aaa
or
dec
sbb
test
out
loope
call
fisttpll
lahf
pop
xor
into
outsb
and
inc
add
mov
repnz
popa
or
xchg
inc
sti
jns
idiv
stc
rcrb
adc
adc
mov
sbb
inc
aad
cmpsb
dec
mov
add
iret
jo
cld
scas
addr16
lock
in
or
cli
jae
leave
dec
sbb
movsl
fcompl
pop
aam
cmp
popa
jp
pop
xchg
dec
xchg
sub
dec
push
mov
in
sbb
lret
idivl
int3
jmp
add
shll
xorb
add
pop
cmpsl
push
in
andb
fwait
test
jp
aaa
pop
cli
loopne
insb
inc
mov
bound
and
pop
add
mov
xor
and
cmp
pop
inc
mov
orb
jecxz
pop
xchg
adc
icebp
and
int3
jge
bound
jecxz
ficompl
pop
popl
or
sub
adc
ficoms
ja
inc
push
jl
jmp
ja
lahf
push
adc
jnp
loop
xchg
mov
stc
popa
mov
add
jae
inc
outsb
cmp
nop
cmpl
and
fs
jmp
lds
xchg
js
cld
sbb
dec
icebp
cltd
popa
std
xor
mov
rorb
imulb
outsb
cmp
mov
mov
adc
stos
pop
jne
dec
enter
jg
inc
sahf
bound
std
mov
es
mov
push
mov
mov
mov
and
ja
dec
lret
xor
ljmp
pusha
loopne
repnz
shll
shrl
int3
das
xor
sti
cld
sub
sbb
jbe
sbb
fstpl
scas
mov
lods
out
stc
lret
movsb
or
and
call
inc
or
in
cmpsb
fildl
jae
out
adc
jp
jmp
popa
lret
js
sub
push
cmp
xchg
push
retw
mov
frstor
std
mov
shr
sti
inc
das
and
fstps
jne
pop
nop
test
add
xor
out
and
test
fstpl
dec
aas
and
push
test
andb
stc
mov
cmp
xchg
std
sarb
jmp
xchg
in
push
leave
data16
ret
aas
cmp
xchg
xchg
push
clc
add
sti
sbb
int
insl
mov
nop
fistl
pop
test
out
dec
repz
jmp
fnstcw
fldt
dec
inc
xlat
lcall
adc
mov
in
mov
mov
rorl
sbb
add
push
mov
cmp
push
lea
jmp
mov
hlt
fisubrl
loop
movsl
or
cltd
mov
xor
dec
dec
lods
mov
push
testb
pop
loopne
test
add
jne
ds
xchg
rclb
pop
ficoms
push
and
cli
mov
popf
ret
push
cld
sahf
dec
pop
movsl
xchg
lcall
call
lea
mov
push
cmpsl
mov
adc
cld
test
addr16
out
in
scas
lcall
push
xor
push
in
fadd
pushf
pushf
testb
fisubs
fucomi
lret
test
leave
pop
into
pop
shrb
cmp
insl
pop
rorl
mov
fbld
outsb
xchg
add
dec
or
stc
cmc
mov
xchg
and
mov
subl
jae
repz
push
inc
adc
testl
insl
test
inc
lret
out
fstl
and
sub
out
int
test
enter
call
inc
mov
imul
add
push
popf
jb
add
mov
in
inc
mov
lahf
sub
hlt
pop
sub
sbb
mov
mov
cmp
xchg
ljmp
xchg
shll
pop
sbb
mov
xorb
rorl
pop
out
lcall
push
repz
jo
enter
jne
pop
scas
mov
cmc
or
push
pop
pop
inc
sbb
or
nop
mov
sub
and
in
fcomps
mov
mov
subl
lea
xchg
cli
sarb
cmpl
mov
in
enter
fldt
mov
jl
repz
xlat
cmp
jbe
cmpb
test
pop
mov
xchg
jae
mov
xchg
movsl
mov
loope
scas
dec
add
in
mov
insb
or
pop
vmwrite
mov
mov
ss
and
add
pop
mov
xor
outsb
inc
push
mov
inc
out
push
lock
jg
data16
js
xor
out
mov
cmp
aad
subb
mov
pop
pushw
fnstcw
mov
or
inc
xchg
in
das
mov
jae
ss
push
mov
jle
push
mov
xchg
jno
cli
add
rdmsr
jae
dec
jo
enter
sub
mov
mov
cwtl
icebp
xor
jmp
popa
mov
adc
xchg
es
or
mov
lods
mov
push
ret
test
mov
mov
or
or
mov
xchg
fists
sbb
cmp
arpl
jge
bound
out
icebp
mov
addr16
lds
cmp
or
ljmp
pop
fisubrl
push
enter
and
cmp
or
dec
iret
mov
cmp
mov
loopne
sub
dec
jg
inc
sbb
dec
popf
rorb
xor
or
cmp
aas
add
xchg
xorl
pop
aas
lock
lods
shlb
xlat
out
insl
fs
or
mov
add
inc
movsb
cld
aas
xchg
lods
test
and
jo
inc
out
loop
lcall
dec
lahf
sub
pop
adc
sbbl
lret
fiadds
cmpsl
mov
dec
xor
adc
mov
sub
mov
xchg
lret
popa
inc
pop
enter
sbb
push
test
aas
sub
cmp
adc
pop
lret
ret
inc
mov
lds
pop
test
xor
inc
mov
xor
clc
or
into
pop
mov
sbb
add
mov
aad
mov
sti
cli
fwait
popf
mov
cmp
mov
imul
jge
shl
lods
adcb
adc
jns
out
stos
sbb
push
push
xchg
pop
push
sbb
test
mov
lods
je
jb
adc
mov
jle
cmp
sbb
aas
cltd
vmovss
adc
mov
sub
adcl
imul
inc
in
test
test
jp
movsb
inc
dec
xlat
fisttps
shrb
nop
jge
push
inc
pushf
cmp
add
loopne
inc
lahf
inc
mov
lcall
in
repz
push
jg
cmp
cli
hlt
mov
pop
out
mov
pop
sbb
imul
mov
inc
sbb
sbb
mov
push
xchg
push
out
adc
xorb
adc
push
and
and
call
aad
out
xchg
mov
pop
je
imul
fmuls
add
push
mov
push
mov
jb
or
and
jo
push
and
outsb
lahf
int
adc
addr16
std
or
das
lret
fsubp
push
in
or
rorb
lret
cs
push
pop
mov
adc
cmp
push
aaa
in
mov
fiaddl
fidivl
insb
fldenv
lods
push
mov
sub
xchg
cwtl
push
cmp
add
xor
sub
shr
xor
loop
ret
mov
mov
push
int
mov
movsb
add
sub
sbb
lret
mov
enter
insb
std
mov
fsubrl
jbe
cmp
sahf
sbb
pop
mov
xor
jns
adc
sub
mov
addr16
jmp
pop
pop
aaa
cmp
sbb
mov
fcomps
xchg
int
sarl
or
adcb
dec
mov
xchg
add
add
cmp
dec
fbld
and
aad
fstps
popa
xchg
fdivrp
inc
xchg
icebp
in
xchg
and
sub
adc
mov
mov
xorl
imul
push
js
fsubl
in
fiaddl
adc
decl
or
cmp
shl
lret
sbbl
movl
and
add
mov
xchg
jg
add
mov
sub
mov
js
out
and
and
loop
fs
repnz
pop
add
add
fisubs
sbb
insb
arpl
stc
push
ret
dec
mov
jns
jecxz
out
mov
inc
inc
jmp
into
sub
mov
mov
in
sub
stos
pop
lret
xor
push
lcall
out
sbb
movsl
jbe
shrl
pushf
mov
arpl
iret
clc
inc
xor
hlt
test
xchg
insb
and
shll
inc
or
fldcw
adc
aad
mov
cmp
cmc
arpl
xchg
xor
aam
lcall
cmp
subb
sti
cmp
cmp
and
cmp
add
push
es
pusha
in
add
mov
fs
pusha
arpl
inc
jo
in
fs
scas
inc
mov
jmp
sub
aam
dec
xchg
jl
shl
push
js
scas
in
cmp
adc
sbb
ret
adc
mov
mov
xor
test
mov
lods
insb
in
add
and
insl
iret
adc
test
mov
inc
jnp
rcrb
xchg
xchg
fsubp
jecxz
popl
sti
sub
push
out
sub
pop
js
ljmp
pop
sarl
xor
arpl
fidivl
jle
sbb
pop
pop
jb
pop
outsl
push
mov
rorl
pusha
lcall
loopne
shll
inc
arpl
and
test
dec
jl
stos
inc
hlt
push
out
add
jbe
out
jne
insl
push
repnz
lods
pusha
lret
jo
loope
push
ljmp
add
mov
stc
sbb
jp
push
inc
test
js
dec
nop
xchg
inc
jl
cmpsl
mov
push
les
aaa
into
sbb
iret
mov
js
enter
cmp
add
mov
xor
fidivrl
js
pop
mov
jo
dec
in
xchg
mov
ret
lahf
mov
lret
push
or
jmp
push
ret
roll
lahf
mov
test
jno
fstl
jecxz
dec
sbb
sar
add
in
sub
rorl
xor
add
popw
rol
jne
pop
in
ja
add
pop
pop
sub
mov
dec
out
xor
adc
or
mov
mov
int3
cmpb
out
pop
lret
int
fwait
lds
sbb
cmpsl
into
push
xchg
pop
sub
push
lahf
jg
sub
pop
popl
mov
dec
xchg
add
inc
inc
pop
repz
push
dec
add
scas
jg
lret
lcall
xor
or
hlt
mov
test
add
sahf
in
sbb
jne
sub
rorb
xor
lds
fnstcw
fwait
sarb
scas
insl
add
xchg
xor
jge
dec
call
mov
dec
adc
clc
div
stos
xchg
xor
xchg
in
or
std
fisubl
jno
rorl
mov
mov
jp
mov
movsl
das
and
test
dec
cmp
mov
sti
sbb
jecxz
cli
inc
pop
push
jae
sub
push
pop
pop
dec
lods
dec
shlb
ja,pn
enter
aam
xchg
jnp
sbb
push
push
inc
fs
sbb
jmp
xchg
mov
out
push
stc
pop
imul
mov
notl
bound
lock
cmp
arpl
push
enter
sub
cltd
mov
jb
loopne
xchg
leave
pop
mov
mov
sti
and
sub
aas
mov
mov
into
in
push
mov
nop
cmp
mov
testb
adc
movsb
imul
push
xlat
mov
inc
mov
inc
inc
mov
mov
arpl
mov
outsb
xchg
and
inc
arpl
xchg
daa
xor
aaa
dec
scas
push
cmc
push
std
jnp
jo
mov
pop
push
or
xor
add
in
dec
cmp
stos
aad
fiadds
xlat
testl
ret
ss
aas
pop
aam
aas
les
iret
mov
or
xchg
fs
jo
sbb
movsl
mov
add
xchg
dec
xlat
jp
sub
stos
jne
or
push
jns
sub
outsl
gs
dec
pusha
mov
arpl
mov
cmp
psllq
sbb
fists
sub
mov
add
mov
mov
cmpsl
add
push
mov
jns
dec
sbbl
jbe
mov
sbb
sub
fnstsw
outsl
insb
pop
neg
and
jno
cmc
and
rolb
sub
xchg
test
out
and
cmpsl
xchg
push
fsubl
add
xlat
in
jo
cmp
dec
dec
cltd
mov
arpl
xchg
cli
daa
std
xor
dec
test
fcmovb
ret
icebp
jne
leave
adc
add
push
or
dec
fwait
jne
adc
aad
pop
cmp
sti
mov
repnz
cmpsb
adcl
mov
pop
and
xorl
lret
pop
jno
loope
cmp
pop
mov
test
xor
int3
xchg
pop
stos
fnsave
or
sub
addl
cmp
adc
sbb
sub
rorb
add
pop
pop
xor
arpl
pushf
fsubrl
test
into
ret
add
leave
popa
adc
xchg
jle
lock
icebp
mov
inc
or
and
cmpsb
pop
or
adc
les
out
lds
sub
mov
and
xor
fcoms
repnz
lcall
mov
sub
mov
std
sti
int3
mov
xchg
and
sbb
mov
imul
and
lods
in
int3
sbb
int3
add
lahf
jge
cs
xchg
fiadds
jae
pusha
shrb
rorl
into
sub
test
inc
jb
jnp
adc
jb
fs
mov
push
es
pop
mov
cld
out
loope
and
jbe
xchg
sar
or
or
in
ret
inc
icebp
mov
cmp
pop
adc
test
and
mov
test
loope
pop
dec
shrl
stos
xor
mov
jmp
lahf
lea
repnz
pop
and
addr16
ret
iret
add
into
or
mov
jb
dec
mov
dec
cltd
add
or
and
stos
mov
imul
insb
repnz
sbb
cwtl
imul
stos
sub
bound
push
pop
js
jmp
mov
cmp
or
shll
out
dec
dec
icebp
enter
mov
mov
aaa
and
sbb
call
dec
repz
pop
daa
inc
fs
jnp
pushf
push
adc
rclb
rolb
inc
jl
jle
xchg
popa
pop
roll
push
lock
ss
cli
inc
xor
and
pop
addl
ljmp
cmpl
inc
add
and
ficompl
xlat
pop
sbb
inc
xchg
sar
lea
cltd
in
sbb
cmp
xchg
popf
shll
xor
sbb
in
xor
sbb
imul
cmp
test
xchg
jle
cmp
ljmp
dec
outsb
pop
in
jno
push
shll
mov
lock
xchg
xor
cmpsb
sbb
shrb
stc
movb
sub
sti
rol
mov
push
in
jmp
mov
mov
cmp
pop
mov
popf
pop
sub
xchg
in
sub
clc
jno
cltd
cmpsl
xchg
or
jbe
in
mov
ljmp
fildl
pop
arpl
mov
scas
daa
in
popf
iret
push
dec
and
sbb
aas
xchg
rcll
add
inc
cmpsb
fcmovbe
jp
mov
mov
mov
add
or
lods
outsl
lret
pop
out
sbb
into
movsl
mov
gs
push
ud0
inc
xor
cmp
dec
in
fsubrl
and
fnsave
dec
cwtl
mov
mov
jno
jno
adcb
ss
sbb
jo
shl
int3
mov
xchg
test
mov
mov
mov
test
mov
ljmp
std
cmp
sub
push
ret
add
inc
lds
and
xlat
cli
in
xchg
pop
outsl
mov
das
xchg
test
jo
shlb
dec
sahf
std
arpl
sbb
xor
xlat
popf
push
aad
out
inc
fistl
add
inc
jne,pn
or
mov
aaa
ja
jge
lock
pop
insb
add
xchg
sbb
pop
push
stos
pop
in
mull
rolb
lock
js
imulb
jnp
inc
cmpl
repnz
adc
jno
cmp
pusha
adc
out
subl
cmp
stos
sub
loop
add
loop
jnp
jae
jae
mov
pop
fstp
push
xor
addl
push
pusha
clc
lahf
mov
pop
gs
lret
das
cld
push
dec
dec
jbe
xchg
xchg
inc
lock
lret
jmp
int3
push
and
sub
popa
movnti
int3
clc
sar
push
out
jb
ljmp
arpl
and
imul
xchg
cmp
mov
insl
shrb
cmc
lds
push
adc
retw
xchg
sub
push
adc
int3
sbb
cmp
pop
sahf
jmp
mov
push
push
daa
sub
movsb
push
jp
repnz
test
sbb
inc
pop
inc
fstpl
idiv
cli
cmp
mov
out
sbb
sbb
jl
dec
dec
imul
bound
frstor
leave
adc
fwait
mov
les
test
dec
aas
mov
fcompl
into
mov
out
cmpl
dec
adc
out
cmpsl
neg
ret
xorl
pop
sub
push
add
mov
js
push
shlb
mov
jno
mov
shrb
mov
mov
loop
scas
mov
pop
das
stos
cmp
mov
mov
sub
lret
jecxz
cmpb
jg
cs
xchg
sub
lods
or
pop
pop
push
nop
ja
xor
push
aas
push
and
sbb
and
jbe
lock
out
je
sbb
mov
add
or
test
leave
fists
mov
cmpb
xchg
pop
rolb
sbb
mov
cmpsl
mov
sub
pop
and
or
adc
es
hlt
jb
jbe
and
insl
cmp
xchg
xchg
add
inc
ja
mov
and
jbe
sub
cmp
push
stos
mov
lea
arpl
adc
sub
je
lret
in
in
jnp
jns
inc
in
sahf
daa
into
adc
fnstsw
cmp
adc
lret
lods
and
popf
jmp
ret
xchg
les
aad
sub
mov
mov
int
mov
xor
sub
push
or
out
aas
xchg
clc
cmpsl
push
cltd
cld
out
mov
push
and
mov
and
mov
mov
mov
and
outsb
shlb
pop
adc
popf
daa
mulb
push
sbb
call
adc
push
mov
cmp
sbb
xchg
lds
cmp
fldcw
rolb
mov
sub
cld
dec
mov
jle
push
push
loopne,pn
dec
and
inc
add
or
test
aam
setp
jg
mov
push
outsb
es
lea
mov
leave
sub
xor
ret
mov
mov
jecxz
data16
jb
sbb
imul
pop
imul
jge
cmpsb
pop
das
outsb
dec
pop
cmpsb
push
and
ret
sub
testb
mov
pop
mov
les
push
sub
test
cwtl
imul
vshufpd
cmp
out
lds
pop
xor
popa
and
xchg
out
jae
xor
movsl
push
jmp
lock
lea
jmp
pop
pop
cmpsl
jp
dec
js
xor
dec
cli
jecxz
mov
jmp
mov
xor
mov
or
outsl
mov
nop
add
or
inc
sub
sbb
nop
in
addr16
pop
push
test
iret
adc
xchg
lar
mov
jne
cmp
sub
inc
je
and
jmp
pop
push
push
outsb
jns
mov
inc
push
in
out
xor
cwtl
rclb
outsb
mov
sbb
out
les
pop
mov
cwtl
or
mov
leave
call
popf
mov
movsb
mov
insl
inc
fldl
dec
pop
cmp
ja
pop
ds
mov
lret
lods
sbb
lret
nop
push
cmpsl
fildll
pop
jle
jmp
pop
daa
inc
mov
pop
add
es
inc
adc
daa
and
aad
scas
sub
lcall
xor
jg
ficompl
cs
adc
push
icebp
cmpsl
ss
movsb
jae
fldl
or
push
lea
adc
js
jnp
out
mov
mov
push
mov
jp
insl
xchg
and
cli
cltd
sub
dec
or
je
adc
xorb
faddl
cmp
cmp
subb
mov
test
mov
repz
inc
lds
add
data16
pop
daa
sub
sbb
jne
xchg
aad
lea
mov
in
popf
fs
xchg
cmp
cmp
xor
push
pop
cld
and
inc
cmp
stos
cmpsb
cmp
loopne
mov
in
ss
popf
jae
mov
fcmovnu
push
lret
cli
push
mov
mov
adc
jns
pop
outsb
mov
std
scas
aam
cmp
mov
push
push
test
sbbl
sub
ss
or
pushf
negl
push
sti
inc
xor
lcall
shlb
jmp
jmp
push
shlb
inc
aaa
jb
ret
dec
push
addr16
repz
daa
mov
out
dec
or
inc
jle
popf
push
les
fucom
int3
aaa
cmpsb
mov
lock
mov
adc
aaa
or
mov
leave
ljmp
in
push
scas
repnz
das
sub
xchg
push
inc
ljmp
mov
add
notb
inc
push
mov
inc
pop
loope
cmp
lods
jbe
cmp
xchg
sbb
sub
js
xor
and
push
and
cmpsb
rol
mov
je
iret
in
or
sti
pushf
inc
in
rcr
sub
and
pusha
sbb
mov
iret
popw
aam
push
test
subb
xchg
mov
jns
jb
mov
mov
nop
push
jns
int
fstpt
out
dec
cmp
insb
dec
and
rcrb
jle
scas
ss
jp
push
cmp
jmp
iret
xlat
dec
or
sub
mov
cltd
mov
test
movsl
lods
fisttpl
sbb
mov
sahf
push
push
jo
sub
mov
pop
int3
adc
mov
jecxz
nop
int
std
aad
jp
cld
je
xchg
rcl
aad
pop
lcall
movsl
push
cmp
mulb
lret
ja
test
and
cltd
xchg
mov
cmpl
repnz
sqrtps
or
in
into
mov
cld
fsts
popa
test
adc
data16
inc
fdivrs
shr
mov
jno
xor
jecxz
mov
in
clc
rorl
sbb
sahf
in
mov
ja
jno
lods
ret
test
ret
dec
cmp
fsubl
les
in
mov
rclb
mov
jns
cld
inc
pop
ficomps
sub
scas
xchg
cmp
hlt
out
aad
out
lea
lods
not
add
stos
iret
lock
mov
mov
pop
or
jne
aad
mov
ljmp
ljmp
je
mov
inc
lcall
jge
lahf
adcl
popf
sub
mov
ss
aas
ficompl
adc
jnp
sub
mov
dec
mov
mov
lea
roll
fcmovnu
xchg
jle
jge
imull
imul
mov
out
or
jecxz
push
cmp
push
subl
aaa
jnp
push
push
scas
in
in
jp
dec
xchg
inc
iret
test
test
and
test
sub
inc
enter
jmp
mov
pop
loope
mov
hlt
shlb
xchg
xor
push
sub
mov
sarl
lods
mov
inc
ret
dec
call
xor
rcrb
mov
xor
sub
mov
repz
jl
sub
xor
jg,pt
and
mov
lds
adc
das
mov
sti
mov
std
mov
add
cli
xor
cmpsl
cs
jo
mov
lock
enter
lahf
mov
ret
shll
enter
arpl
insb
push
fildl
test
mov
push
sub
cld
push
pop
imul
or
push
cltd
sahf
adc
jae
inc
sbb
movsb
sbb
addr16
mov
sub
ret
mov
sbb
add
mov
lock
fiadds
xchg
in
fcompl
push
and
jns
push
fst
scas
xchg
xor
out
xor
and
rolb
xchg
xor
testb
xchg
push
test
xlat
mov
push
movq
negl
scas
loope
stc
cmp
rcll
mov
movsl
out
mov
add
aad
cmpsl
aas
jl
sub
aam
imul
aad
push
sub
sub
out
mov
cmp
xchg
mov
movsl
jne
mov
pop
xchg
add
mov
and
mov
mov
sbb
sub
in
dec
inc
inc
shl
cmp
into
mov
push
repz
adc
push
ret
in
rcr
sbb
sub
adc
btrl
hlt
sti
sbb
enter
test
scas
inc
movsl
mov
adc
or
cwtl
mov
pop
xchg
xchg
cld
data16
inc
dec
imul
jbe
aam
imul
sahf
adc
adc
push
xor
sbb
ljmp
dec
xchg
shl
in
sbb
pop
mov
xor
das
sub
lret
out
repnz
aad
adc
ss
xchg
adcb
inc
xchg
call
daa
outsb
movsb
mov
arpl
inc
sbb
enter
mov
and
int3
mov
adc
ret
and
sbb
and
push
mov
pop
cmp
out
sub
push
sub
popa
hlt
push
adc
mov
pop
cmpsb
test
dec
mov
arpl
cmp
mov
or
add
sbb
push
into
push
imul
mov
xlat
sub
pop
pop
imul
outsb
movsl
xchg
mov
add
scas
orl
push
int3
lcall
push
jge
ds
mov
push
lock
and
outsl
lahf
inc
xor
sarb
or
seto
mov
dec
pusha
shrb
shrb
imul
lods
aas
push
cmp
leave
cmp
mov
test
cmp
scas
repz
sbb
push
jmp
in
pop
cli
out
std
xor
fsubrs
ds
ja
aas
ljmp
pop
mov
jecxz
ss
mov
cld
dec
push
pop
xchg
les
mov
in
mov
hlt
xor
mov
scas
mov
movb
jp
test
pop
subl
popf
out
lcall
sub
in
lock
pop
rcl
shlb
push
enter
dec
sahf
insl
popf
jle
push
or
adc
test
in
dec
cmp
inc
inc
aaa
sarb
ret
scas
push
xchg
cmpsl
sbb
push
dec
push
pop
pushf
mov
and
fisubl
in
les
and
fdivr
sbb
add
xchg
dec
inc
mov
les
lock
dec
pop
mov
inc
lret
maskmovq
notl
or
inc
lahf
dec
rcl
fisttpl
outsb
clc
ds
repnz
iret
stos
pop
pop
push
jb
mov
cmp
aas
mov
sbb
lods
mov
xchg
or
cli
into
mov
cli
out
mov
mov
push
scas
mov
inc
out
mov
cld
cmp
or
add
pusha
call
sub
imul
and
div
js
and
mov
xor
xor
cltd
xor
stos
out
aaa
or
sub
jmp
popf
movsb
int3
movb
cmp
loopne
leave
pop
sbb
cli
dec
lods
pop
xorb
mov
xchg
cs
sub
rclb
and
mov
pop
ss
mov
push
cld
shrl
rcrl
mov
jle
xor
loop
js
stc
stos
leave
pop
in
xor
dec
sub
push
mov
jno
mov
mov
xchg
mov
bswap
movsb
dec
std
push
and
loop
aaa
and
insl
aaa
fwait
cli
ds
test
jmp
jae
push
lcall
jl
cmp
mov
lock
pop
xchg
loop
bound
daa
jae
inc
div
pop
stos
or
or
stc
je
loopne
and
pushl
andb
dec
push
je
test
sub
dec
or
ss
in
cmp
xor
enter
movsl
nop
push
test
push
push
lcall
mov
je
jl
add
mov
mov
pop
outsl
les
add
loop
inc
inc
sbb
imul
iret
xor
add
icebp
adc
inc
sbb
out
test
aam
push
iret
mov
repnz
add
dec
bound
jne
pop
pop
fcoml
inc
xor
sbb
mov
repnz
push
adc
fstpt
lods
xor
cmp
mov
in
xor
cmpb
mov
pusha
mov
jne
cmpsl
cmp
icebp
inc
jno
ud0
aad
movsb
inc
xchg
mov
test
xchg
xor
xchg
inc
aam
ljmp
mov
jecxz
push
inc
bound
xchg
fwait
loopne
mov
insl
sub
lret
sub
push
pop
mov
jl
imul
add
lret
mov
jecxz
hlt
mov
scas
xor
lret
imul
insb
xor
inc
sbb
push
mov
daa
lcall
sub
leave
jb
or
lcall
jl
add
add
ret
dec
add
and
fisubl
enter
xlat
xor
shlb
outsb
dec
stos
adc
mov
int3
insl
ret
xor
lret
sub
dec
jne
adc
sub
jp
sbb
movsb
enter
pop
and
jbe
jno
cmp
inc
insb
inc
fcomps
mov
sbb
cmp
cs
dec
cs
lds
iret
fs
xor
mov
js
pushf
fsubrs
shrl
dec
mov
or
pop
xor
aam
call
sahf
xor
stc
daa
sbbb
jcxz
xor
dec
cmpsl
jg
orl
adc
sub
jmp
movsb
adc
andb
pop
jg
mov
mov
inc
dec
idivb
jae
add
xchg
cmp
xchg
test
mov
ret
or
popf
mov
dec
xchg
xchg
sub
inc
out
rclb
add
addr16
jbe
mov
inc
out
push
test
mov
xchg
andb
fnsave
adc
in
xor
cmp
xchg
jmp
in
daa
sub
rorl
sub
xor
test
lods
and
mov
das
jb
mov
xchg
cwtl
xchg
ss
mov
pop
fmuls
stc
enter
jmp
pusha
xor
popa
sub
dec
inc
dec
cmpsl
mov
fucomi
imul
dec
out
sub
jno
dec
pushf
or
mov
test
outsb
jb
adc
jb
cmp
popf
jl
push
or
push
xlat
mov
sahf
sbb
sbb
xor
and
xorps
jbe
jne
add
adcl
cmc
lret
loop
sbb
fidivrl
mov
mov
mov
cmp
mov
comiss
sti
jb
inc
adc
push
outsl
aad
jns
mov
test
cld
iret
insl
mov
gs
cli
scas
rorb
int
or
pop
pop
jmp
pop
cmp
fsts
jp
dec
sbb
pop
add
leave
lahf
les
jecxz
mov
je
and
sar
mov
leave
stos
loopne
icebp
mov
and
ja
inc
push
pop
mov
push
test
addl
stos
xor
push
shll
inc
adc
jno
xor
jno
inc
fisubrl
aaa
fstl
das
and
mov
or
fdivrp
scas
popa
inc
cmp
adc
and
cmp
xor
mov
cwtl
pop
mov
cmp
in
sub
add
dec
inc
dec
push
into
lods
push
rorl
in
add
aaa
arpl
dec
inc
into
js
xchg
fisubs
test
xchg
lods
mov
push
fwait
cmp
xor
lds
pop
push
mov
mov
cmpsb
pop
test
sahf
or
xchg
ss
xchg
adc
test
inc
jne
sahf
xchg
ljmp
xlat
inc
mov
sbb
inc
pusha
add
adc
jl
in
test
repnz
outsl
inc
push
sbb
add
pusha
pop
out
push
shlb
test
divl
dec
mov
cmpsl
pop
rcrb
fwait
push
out
and
push
jo
xchg
ss
nop
dec
xchg
cmp
xchg
cltd
mov
add
rorl
iret
pop
or
xchg
clc
orl
fstpl
or
stc
imul
add
inc
aam
mov
sub
mov
pop
iret
lock
push
stc
mov
jp
dec
test
and
jae
dec
mov
mov
call
fdiv
and
push
dec
ret
mov
push
sbb
pop
movl
mov
jecxz
and
fisubrs
pop
fldcw
cltd
orl
and
arpl
inc
test
and
aas
scas
pushf
cmpsl
cmp
test
pop
pop
mov
into
pop
sub
out
mov
stc
mov
test
or
mov
mov
test
dec
pop
imul
sbb
push
cld
je
aad
push
jb
into
loopne
xchg
ljmp
sub
out
jb
mov
test
in
sti
mov
popf
test
imul
and
push
inc
sbb
mov
jmp
pop
sbb
imul
push
or
xchg
mov
fs
jnp
push
das
das
push
cli
dec
ret
rolb
jp
push
xchg
fistps
ss
jns
popa
scas
rcl
test
cli
and
into
sub
sbb
out
dec
push
shlb
xchg
or
addr16
sbb
pop
popf
shrl
or
pusha
cwtl
cmpsl
dec
lods
mov
shlb
lds
or
dec
xchg
cld
movsb
es
movd
adc
test
in
pop
stos
dec
jb
imul
jecxz
not
push
pop
sub
mov
adc
fldcw
pop
out
mov
cltd
mov
mov
es
inc
outsb
xchg
inc
dec
lods
jb
mov
ljmp
fldenv
mov
sbb
addr16
mov
jmp
or
lods
icebp
mov
int
dec
out
xchg
fildll
fsubp
mov
cwtl
stc
xchg
test
mov
shrl
dec
sbb
xchg
popa
push
ja
popa
pop
push
cmp
call
fists
lock
and
repz
data16
mov
sbb
sti
mov
lcall
mov
loopne
fnstcw
push
out
jae
inc
xchg
test
mov
sub
sbb
lea
incb
lahf
pop
stos
pop
mov
lds
cmpsl
inc
ljmp
xor
leave
in
add
jo
push
xor
popa
mov
jae
and
outsl
adc
inc
std
or
cld
icebp
test
jb
inc
and
rorb
sbb
jnp
in
push
enter
jno
loope
or
pop
push
pop
push
aad
push
call
jb
sbb
lds
xchg
mov
inc
leave
sub
sbb
fimuls
xchg
inc
xchg
adc
mov
lcall
cli
repz
cltd
insl
or
rorl
mov
or
cmp
insb
pusha
pop
sub
in
add
and
push
scas
xorb
push
cwtl
push
andl
aam
sub
hlt
jbe
pushf
xlat
in
cmpsb
or
xchg
stc
mov
cmp
dec
sti
das
cmpsb
jmp
pop
int
repnz
jmp
stos
mov
pop
push
cltd
push
test
rorl
xchg
outsl
mov
fwait
out
and
cltd
xor
ror
adc
dec
clc
clc
mov
sarb
in
sbb
push
dec
ret
add
inc
pop
aas
jae
shlb
mov
fstpl
lock
push
scas
pop
ret
sbb
mov
gs
imul
test
ljmp
les
lods
fiadds
dec
test
jecxz
add
test
xchg
into
dec
jb
roll
mov
push
cltd
mov
out
arpl
or
ljmp
push
fistl
push
or
pushf
bound
xlat
daa
andb
outsl
fstpt
repnz
inc
stos
arpl
pop
popf
mov
lods
inc
dec
xor
adc
test
dec
jecxz
or
arpl
sahf
or
aas
xchg
iret
push
jne
mov
orb
mov
ljmp
loopne
fsubl
pop
or
xor
in
mov
xor
pop
mul
stos
loop
sub
out
mov
dec
jo
nop
test
lods
add
and
lret
daa
ror
xor
jne
xor
inc
cmc
xor
xchg
mov
jle
adc
pusha
or
sub
shl
in
mov
xor
inc
and
subl
cmpsl
cmp
.byte
mov
add
imul
fsubrs
add
imul
adc
sub
cmp
dec
insb
or
add
or
add
or
add
insl
or
add
insb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
insl
dec
add
add
add
dec
add
incl
add
add
outsl
dec
add
add
add
incl
add
add
jno
add
add
add
incl
add
add
jbe
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
ja
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
orl
incl
add
add
orl
add
incl
add
add
xchg
add
add
incl
add
add
xchg
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
mov
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
into
dec
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
incl
add
add
ljmp
dec
add
in
add
add
add
add
add
add
add
decl
in
dec
add
add
dec
add
add
lea
lcall
decb
add
add
incl
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
jmp
push
dec
add
push
dec
add
add
add
incl
or
or
dec
add
add
add
call
dec
add
dec
add
dec
or
add
or
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
adc
add
add
incl
add
add
adc
imul
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
imul
bound
gs
js
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
cmp
dec
add
dec
add
call
dec
add
add
pushl
dec
add
dec
add
incl
sbb
ljmp
sbb
mov
sbb
incl
add
add
sbb
add
incl
add
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
and
add
add
incl
add
add
daa
dec
add
add
add
incl
add
add
sub
add
add
decl
sub
incl
add
add
sub
jle
dec
add
add
add
incl
add
add
dec
add
call
dec
dec
add
incl
add
dec
add
mov
dec
dec
add
imul
add
add
jp
or
add
add
add
add
add
pusha
or
add
or
add
imul
out
or
add
insb
or
add
insb
or
add
or
add
or
add
insb
or
add
insl
or
add
insb
or
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
into
add
popa
jb
push
inc
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
std
or
fst
pop
and
push
inc
push
pop
into
pusha
dec
aad
mov
dec
add
push
cmp
and
std
outsb
mov
and
and
and
mov
enter
repnz
mov
and
jbe
dec
sub
negl
push
enter
shll
pop
pop
arpl
adc
push
clc
mov
divb
pop
xchg
sbb
faddp
stc
mov
push
and
cmp
cmpsl
and
add
aaa
pushf
or
ds
scas
or
cmp
cmp
adc
int
out
mov
push
sarb
jl
dec
inc
mov
lock
in
dec
gs
push
fiadds
add
xor
std
push
imul
out
repnz
push
pop
jge
jg
xlat
out
cs
scas
imul
out
or
ljmp
pop
add
nop
push
aad
sub
fidivrs
sub
andb
test
dec
xchg
jge
inc
xchg
mov
ja
clc
clc
xchg
loopne
pop
mov
or
enter
push
shlb
test
test
pop
int
sahf
adc
sarb
sarb
sarb
iret
cmc
ret
or
pusha
xor
xor
scas
jg
in
rorl
sbb
hlt
pop
fwait
into
add
test
xor
add
sarb
inc
test
jge
loopne
fidivrs
sub
xlat
adc
in
fwait
aaa
cmp
push
lds
jmp
dec
inc
insb
inc
cld
adc
sub
mov
ret
cmp
repnz
push
sahf
jbe
lret
sti
rorb
push
lds
shrl
int3
rclb
loope
sbb
loopne
mov
data16
scas
stc
inc
ss
call
cmp
xchg
sbb
int3
repnz
mov
jg
pop
adc
cmp
loopne
test
pop
adc
insl
mov
mov
or
lds
in
xor
pop
sub
inc
push
stos
adc
and
mov
enter
jge
jecxz
or
call
popf
jmp
jo
mov
mov
ret
jae
and
rolb
mov
insb
mov
loop
or
cmpb
push
movsb
xchg
mov
sar
nop
int
cmp
mov
fcoml
sub
mov
loope
shrl
movsb
mov
enter
repz
xor
add
sub
notl
add
rcrb
jp
std
test
and
adc
icebp
or
adcb
sti
div
adc
shl
or
lock
scas
jns
xor
inc
insb
adc
lahf
adc
into
xchg
and
xchg
out
and
cmp
mov
jmp
sbb
pop
pop
jo
inc
shlb
add
pop
das
jle
cld
or
lret
xchg
pop
stos
out
jnp
fstpt
int3
pop
inc
rolb
lahf
gs
fnstenv
pop
push
addr16
xchg
pop
inc
out
cli
xor
dec
cmp
jnp
dec
push
jecxz
xchg
and
les
jno
sbb
in
cs
xor
stc
adc
xor
pop
cmp
push
push
scas
cmp
pop
test
sbb
add
cld
cld
data16
xchg
ja
mov
xor
sub
xor
and
popa
rorb
dec
ja
xor
adc
add
mov
add
das
push
arpl
mov
movsl
orb
in
xor
xor
jmp
pop
lret
arpl
xor
pop
or
mov
mov
and
mov
xor
and
and
movups
pop
out
sarb
test
xchg
jle
push
jp
pop
add
jl
in
cmp
or
in
and
fdivr
scas
insb
add
rclb
lret
je
ja
jnp
pop
sbb
les
sbb
mov
jmp
sti
shll
push
imull
subl
scas
jns
dec
pop
jg
cmp
lahf
aaa
jmp
sub
pop
xchg
popf
call
mov
fadds
mov
adc
add
ret
mov
adc
mov
mov
psllq
mov
jae
fs
ds
sub
scas
lods
nop
mov
dec
clc
lcall
js
mov
sbb
push
cmpsb
je
arpl
dec
ret
movsl
in
inc
push
repnz
clc
out
aam
out
pop
outsl
decl
sub
mov
addb
cs
mov
shl
call
rclb
xchg
add
insb
jb
inc
or
lret
aas
test
sub
sub
dec
inc
and
sar
outsb
jae
xlat
mov
sti
sub
add
int3
movsb
imul
mov
insb
aam
int
or
insb
mov
add
push
push
cmovge
push
cmp
jg
jae
inc
cwtl
cmp
cmp
add
je
pop
ja
xor
cmpsl
jmp
mov
jg
inc
mov
into
pusha
sub
insb
push
cmpsl
and
mov
adc
mov
lods
cmc
sbb
fnsetpm(287
nop
mov
push
loopne
and
jns
cmp
shlb
dec
shlb
daa
les
out
rol
mov
adc
xor
add
cmp
movb
dec
cmp
scas
xorl
push
push
sbb
xor
lds
data16
addr16
mov
sub
or
sbb
test
es
dec
rclb
fdivs
dec
sbb
jle
add
adc
sub
lods
loop
adc
hlt
fs
jns
stos
scas
enter
mov
std
outsl
inc
clc
nop
test
adc
push
push
popa
cmp
lods
cli
int
dec
and
js
pop
mov
cltd
mov
add
iret
out
jle
test
mov
and
stos
jo
cmc
or
push
and
jo
test
sahf
rol
push
icebp
mov
std
bound
ret
lahf
lods
dec
outsb
pop
inc
in
stc
xlat
jnp
decl
in
mov
int3
sub
mov
popa
push
repnz
imul
lcallw
lcall
pcmpeqw
pop
aas
xor
stos
test
mov
jmp
dec
outsb
icebp
jns
sbb
into
mov
mov
lret
mov
in
sub
jmp
xchg
pop
faddl
arpl
outsb
sbb
lcall
out
clc
and
cmp
pop
mov
or
popf
fisubl
xchg
bound
pop
cmp
jle
pusha
mov
shrb
mov
jge,pn
jp
imul
sbb
mov
jecxz
adc
ds
in
mov
scas
inc
les
lahf
lret
int
cmp
inc
or
push
int
mulb
ljmp
adc
test
rorb
jb
aam
and
pop
ja
mov
pushf
sub
adc
xchg
sahf
jl
movsl
mov
pop
xor
fbstp
sub
out
jge
fisubl
cwtl
pop
mov
jns
bound
ljmp
xchg
sbb
in
lahf
lcall
test
loope
mov
sub
mov
dec
daa
test
xor
jb
loop
movsl
add
jle
aas
jb
movsb
push
push
mov
or
cld
jo
aad
pop
sbb
in
xchg
cmc
sub
xchg
inc
dec
sti
js
cmp
xchg
inc
sbb
dec
test
inc
out
arpl
or
call
into
test
jns
lods
or
movsl
fimuls
fsubs
pusha
push
je
jo
jl
jmp
pushf
ds
mov
or
mov
mov
inc
imul
jbe
fs
daa
fcmovbe
mov
lahf
sub
cs
pop
inc
stc
and
arpl
popf
pop
daa
push
mov
test
sahf
daa
psadbw
data16
sub
xchg
xchg
cmp
adc
rcrl
or
pusha
mov
mov
into
lahf
adc
aam
lret
ficoms
jecxz
mov
push
lods
sarb
popa
and
push
mov
mov
adc
xor
mov
leave
or
dec
pop
mov
jge
push
pop
add
dec
es
jae
dec
add
movsl
mov
mov
inc
sub
mov
jl
daa
add
fisubrs
dec
or
xchg
or
out
cmp
sbb
pop
ds
sbb
jb
addb
mov
ja
add
popa
fcmovnbe
fnstenv
sarl
xor
jb
sbb
js
aad
lcall
xchg
inc
or
dec
daa
aam
in
rclb
mov
and
pushl
jmp
push
sbbl
popf
into
push
pop
lods
sbb
fsubrl
stos
add
or
or
dec
std
iret
or
pop
inc
inc
or
and
xchg
mov
ret
in
xchg
ja
js
dec
adcb
out
ret
xor
test
pushf
in
xlat
cltd
jge
mov
cmc
iret
pop
pop
mov
inc
push
lds
jg
movsl
push
rolb
rcl
jp
repz
pop
iret
lret
lock
mov
sbb
outsl
inc
push
fdivl
sbb
sbb
cmp
add
cmpsl
js
inc
das
mov
testb
pop
or
notl
mov
inc
sbb
push
test
mov
mov
sbb
jns
push
sub
cmp
insl
stc
call
insl
lock
pop
psraw
push
xor
add
sbb
ja
cwtl
mov
pop
sbbb
push
fdivrl
js
loope
sub
sarl
aas
xor
loopne
loop
mov
movsl
pop
and
out
test
fcmovnbe
inc
leave
lock
add
ret
jecxz
shl
and
rcr
es
das
jns
xchg
in
xchg
cmp
arpl
inc
jae
cmp
out
inc
sbb
mov
in
sub
loope,pn
pushl
fidivs
xor
mov
imul
bnd
fnstcw
lock
sub
enter
ret
mov
jg
aam
sub
pop
or
adc
pusha
push
cmp
dec
mov
loope
jge
dec
adc
pop
inc
adc
ja
rcrb
fstpt
imulb
inc
cmp
in
or
pushf
adc
push
adc
push
in
dec
add
popf
pop
imul
nop
scas
jg
mov
test
cld
cs
and
mov
pop
xchg
xchg
xor
mov
push
sbb
loopne
out
push
mov
jnp
leave
cmc
and
add
bndldx
lock
movsl
or
fiaddl
in
and
jo
pop
xchg
ficoml
xchg
xchg
pop
cmp
sti
or
ljmp
xlat
ds
movsb
jg
cmpl
add
imul
insb
push
and
add
fmuls
or
cmp
inc
sar
lcall
xor
inc
or
push
pop
sbb
sub
lfs
enter
stos
cmp
scas
out
push
sub
fs
mov
inc
cmp
add
push
stos
mov
cmc
xchg
out
and
addr16
daa
sub
cmp
rorl
outsb
adc
xchg
jbe,pn
cmp
mov
repz
cmp
out
xchg
int
cmp
cmpsl
mov
add
pushf
addr16
es
test
pop
push
sub
cs
in
pop
loop
shr
adc
mov
fimuls
inc
lcall
stos
mov
dec
test
in
xchg
ds
js
es
int
push
mov
mov
pop
call
inc
or
out
mov
mov
dec
pop
jno
ss
dec
rcll
xchg
dec
lds
jae
fidivrs
lret
add
ja
loopne
add
das
test
fmul
sbb
sub
jmp
dec
cmp
push
mov
inc
movsb
jmp
xchg
and
or
mov
in
arpl
hlt
cmp
cmp
xor
js
sub
xchg
lret
out
sbb
lret
mov
call
fnsave
inc
push
mov
insb
and
cld
inc
iret
jne
cmp
test
or
test
jle
cltd
cmp
cmp
out
aad
lods
mov
sti
shlb
cltd
loopne
loopne
lock
imul
cwtl
cmovno
jle
jae
add
jge
addr16
mov
pop
repnz
mov
lret
jnp
out
in
sub
out
jge
cmpsb
xor
xchg
xchg
cmc
lock
stos
pop
mov
shrb
js
mov
pop
mov
mov
pop
cmpsl
shrb
sub
data16
inc
int3
test
gs
lret
mov
adc
jns
sub
and
roll
nop
scas
pop
dec
cwtl
into
jmp
imul
in
mov
shll
scas
mov
repz
xor
scas
cld
push
mov
repnz
jl
loop
test
xchg
leave
add
inc
aad
jge
jg
adc
push
testb
ja
and
cmp
and
inc
ljmp
test
xchg
fsts
push
xor
jl
mov
jecxz
mov
add
xchg
xor
incl
dec
mov
jmp
pop
rolb
ret
addr16
aas
in
push
nop
sub
repnz
lcallw
inc
inc
lret
xchg
mov
cmpb
adc
cmp
lds
das
push
adc
enter
adc
je
xchg
mov
pop
pop
imul
stos
std
pop
loope
xchg
or
lock
sbb
nop
mov
or
gs
aad
add
xlat
pop
dec
mov
or
frstor
cmpsb
movsb
pushf
cld
mov
sub
fisubs
add
and
movsl
jl
enter
pop
testb
xchg
cmp
inc
mov
mov
mov
lea
add
stos
addr16
lds
iret
mov
enter
mov
cmp
and
fdivl
dec
xor
pop
sub
jp
movb
mov
ret
pop
insb
mov
push
imul
jecxz
imull
and
pop
popf
test
lret
xor
xor
es
movb
out
je
inc
xchg
arpl
sbb
jo
ret
movsb
sbb
jbe
xor
cmc
add
adc
dec
fisttpll
or
add
push
outsb
subb
popf
push
mov
pop
subl
cld
dec
ljmp
inc
testb
cltd
sub
cmp
into
mov
fwait
jl
cwtl
ret
pushl
lods
push
fmull
inc
or
into
fcmovnbe
lds
mov
ret
mov
inc
ss
pushf
jns
sub
scas
dec
loop
sub
adc
out
shlb
pop
call
and
fisubl
xor
mov
outsl
outsb
pusha
and
lods
adc
sub
int3
xlat
jl
lret
mov
jg
aas
leave
shlb
popf
ss
sub
out
lret
aad
mov
into
into
out
xor
outsl
cmp
cmp
sbb
into
lret
sbb
mov
ja
addr16
mov
sbb
rdpmc
mov
pop
stos
push
jmp
roll
or
enter
mov
into
jae
or
and
aam
ljmp
push
sbb
icebp
mov
popa
jns
inc
fisubrs
xlat
pop
sub
sbbb
roll
mov
cltd
xor
int
call
xlat
sub
ret
adc
fcmovnu
lret
pushf
push
js
bound
jl
inc
mov
fxtract
xchg
mov
pusha
xchg
jle
push
xor
sub
mov
and
cli
pmaxub
adc
test
jg
xlat
mov
imul
fnstcw
push
add
shl
loope
mov
add
fcompl
inc
mov
arpl
push
jne
pop
lret
mov
push
aaa
stc
adc
inc
mov
jmp
call
icebp
dec
xor
repnz
inc
jecxz
movb
adc
rorb
mov
inc
in
cld
xlat
test
mov
pop
incb
xor
pop
mov
adc
cs
and
push
or
pusha
loope
dec
stos
cmpsb
popa
fistps
push
mov
and
je
stos
ffreep
xlat
push
pop
jmp
mov
lret
mov
pop
pop
push
pop
cmp
ds
or
mov
and
xor
fnstcw
mov
push
fisubl
inc
repz
movsl
mov
je
std
loop
jmp
lods
aam
ret
int
sub
js
sbb
sub
add
adc
addr16
pop
cld
pop
pusha
add
jns
in
insb
mov
jbe
pop
sti
aad
cmpsb
jne
dec
sub
sbb
fadds
insl
mov
jecxz
push
outsl
or
add
stos
out
insl
aad
out
loopne
and
mov
insb
jb
cmp
mov
push
nop
das
mov
add
mov
pop
ficoml
stos
mov
push
lahf
mov
jb
jecxz
xor
gs
repnz
push
je
add
iret
cmc
andl
xor
push
gs
lret
ss
and
push
push
xor
imul
lds
push
adcb
add
and
movsb
push
push
sbb
pop
fwait
cmp
pop
jge
dec
sahf
dec
dec
movsb
mov
shrb
movsl
push
mov
ret
arpl
test
sub
sahf
mov
test
push
rcr
scas
cmpsb
sbb
ds
xchg
cmp
jp
lods
jnp
lret
pop
test
or
fimull
adc
dec
insb
dec
mov
stos
cld
cli
cmp
fsubp
dec
inc
jge
mov
icebp
addl
mov
inc
mov
movhps
jo
add
cltd
out
fldl
stos
inc
arpl
inc
cmp
rclb
out
cmp
cwtl
in
jp
push
or
mov
aam
lahf
les
xor
cmp
repnz
lock
insb
test
pop
mov
xchg
insb
popf
das
mov
add
loope
sub
std
push
pop
int
adc
lret
in
push
mov
mov
xchg
outsl
add
cmp
mov
or
arpl
and
lock
pop
cmp
push
stos
sub
test
aas
xor
sub
push
aaa
push
outsl
sahf
leave
adc
and
and
sbb
fidivs
shrl
std
mov
in
rol
pusha
adc
or
gs
dec
mov
and
mov
dec
icebp
test
insb
cmp
xchg
mov
or
cmp
push
jl
mov
sbb
mov
lock
jb
mov
ja
jbe
sbb
mov
and
cli
iret
into
out
cs
adc
repnz
dec
push
cmp
clc
enter
cmp
sub
pop
add
mov
jae
aam
outsb
pop
and
cmp
imul
jns
cmpsl
inc
mov
push
icebp
jecxz
pushf
ss
ficoml
test
dec
stos
mov
ret
add
pop
add
pop
dec
cmp
xchg
jmp
pop
lods
sbb
mov
adc
xor
jne
xor
aam
jbe
push
icebp
cmp
mov
xor
and
fadds
sub
bnd
lods
mov
loop
or
repz
incb
ds
flds
aad
andl
and
test
and
add
pusha
rclb
adc
enter
popf
jmp
ja
xor
push
mov
mov
push
gs
aam
mov
paddb
pop
sub
jne
jl
je
iret
scas
sahf
mov
and
xchg
ljmp
es
out
lds
adc
sti
sub
cld
int
mov
push
xchg
and
mov
sbb
jp
dec
sbb
adc
and
pop
jle
jmp
dec
cmp
jg
pop
std
pop
rorl
mov
xchg
scas
out
fidivs
jae
inc
stc
xchg
lods
pop
rorb
ss
cmpsl
cmp
xchg
mov
aaa
test
cltd
sub
test
mov
hlt
cmc
sar
fisttpll
lret
and
in
inc
mov
jp
mov
pop
push
and
lea
mov
add
xchg
in
out
out
rorb
pop
push
popf
mov
adc
jg
pop
roll
mov
cmpsl
cmp
std
outsl
and
mov
jl
xchg
jno
es
hlt
into
mov
and
pop
mov
adc
xchg
push
into
xchg
insb
daa
in
push
pop
or
aam
in
aad
add
shlb
ljmp
xchg
adc
repz
mov
jge
stos
and
dec
int
daa
out
loop
xor
shrb
mov
pop
lock
push
and
fsubrs
rorl
fiadds
dec
pop
call
popa
lret
or
push
lahf
jns
insl
out
jg
xor
test
test
push
inc
ljmp
into
jl
or
xor
test
into
mov
arpl
cwtl
shl
xchg
js
outsw
and
mov
call
fwait
push
fs
jmp
mov
loop
add
out
sbb
mov
mov
repnz
shlb
jns
mov
jb
pop
or
push
call
mov
in
xchg
fdivrp
fwait
sbb
fbld
jbe
in
fidivl
sub
adc
xchg
xlat
sbb
inc
lret
cmp
pop
outsl
xchg
iret
aam
out
arpl
in
mov
jecxz
in
clc
stos
xchg
xor
sbb
inc
fwait
test
ffree
lret
mov
pushf
cmpsb
inc
cmp
movsb
jecxz
push
lcall
and
xchg
and
imul
and
dec
ds
fucomip
pop
cli
sbb
lds
push
stos
mov
mov
fistpl
test
and
ror
jbe
les
xor
xchg
inc
sbb
lods
push
ljmp
sub
bound
add
mov
int3
adc
push
xchg
hlt
rcrl
bnd
adc
inc
insl
sub
cmp
mov
sahf
mov
ds
fisubrs
stc
xchg
cmp
insb
stos
jnp
xchg
lods
push
shll
lret
clc
jne
das
push
mov
fildl
xor
mov
jno
testl
cmpsl
xor
lahf
or
and
xor
dec
mov
inc
cli
ret
jl
loop
mov
mul
jp
or
or
push
mov
inc
xor
dec
push
cld
dec
inc
icebp
mul
xchg
xchg
add
adc
iret
lods
bound
or
std
xor
xchg
push
fisubl
mov
inc
sub
mov
mov
xchg
and
jnp
inc
sti
cmpsl
movsb
push
subl
pusha
sub
add
mov
ffreep
sub
out
jp
dec
shl
je
push
aam
pop
mov
in
neg
xor
sbb
addr16
jg
pop
sbb
call
push
data16
loope
ljmp
stc
dec
pop
and
push
xchg
shll
inc
and
js
jmp
xchg
cli
roll
rcll
lret
divl
xchg
ja
scas
push
nop
in
in
pop
pop
les
jecxz
fcmovnb
lret
xor
mov
sbb
sti
and
dec
cmpsl
inc
adcl
std
loope
cmp
add
imul
mull
daa
push
lods
call
in
or
loopne
cmp
mov
cmpsl
movsl
and
nop
xchg
call
