push
sbb
in
cmpl
pop
call
push
push
add
fucomi
xchg
sbb
cmpl
loopne
loop
loopne
rolb
mov
push
push
add
sbb
arpl
and
and
mov
jge
dec
les
pop
sbb
add
cltd
les
jle
loopne
hlt
pop
pop
pushl
call
push
xor
adc
sub
loopne
push
push
mov
adc
roll
call
and
mov
ret
pop
lret
push
call
rolb
jle
mov
pushl
lds
mov
adc
push
pop
cmp
jne
movsb
mov
adc
fs
xor
pop
lods
xor
or
or
xor
das
add
clc
decl
test
sarb
inc
cmp
je
xor
es
inc
add
or
call
inc
scas
or
push
push
adc
pop
push
mov
mov
sub
lock
push
push
sbb
mov
and
adc
cld
pop
fsubrs
jne
cmpsl
push
push
pop
imul
inc
add
pop
cmp
sbb
enter
sbb
mov
cld
std
xchg
adc
mov
push
movsb
adc
jl
and
fs
popf
dec
and
pop
out
in
mov
mov
leave
xor
cmc
cmp
mov
inc
repz
dec
push
pusha
fs
xor
sub
push
popf
or
enter
xor
mov
div
xor
ljmp
add
adc
and
or
pop
and
outsb
or
xor
addb
sbb
add
ret
sub
xor
mov
mov
shlb
push
inc
mov
xor
sbb
pop
sbb
rcrb
lret
in
push
adc
rcrl
and
push
or
inc
and
je
test
mov
inc
icebp
je
or
dec
es
or
in
sbb
adc
jg
mov
scas
call
hlt
push
fidivs
push
mov
push
xchg
inc
or
add
sti
pop
or
add
mov
mov
lods
push
xchg
and
mov
ja
adc
ficomps
lea
sub
mov
enter
mov
and
push
and
les
push
and
pop
cli
pop
iret
dec
ljmp
inc
inc
les
sub
jne
push
mov
es
push
pop
fadds
mov
sub
adc
jmp
push
mov
and
pop
lea
cmp
sub
mov
pop
pop
in
orl
dec
or
iret
decl
hlt
add
add
lea
mov
adc
shlb
sub
mov
add
jbe
xor
jmp
mov
inc
clc
or
add
adc
test
sbb
xchg
push
cmp
test
mov
xchg
in
add
push
mov
cld
xor
test
hlt
mov
mov
data16
hlt
cs
jne
call
outsl
and
xlat
pop
jne
push
ds
adc
inc
mov
or
shl
add
hlt
adc
mov
add
ljmp
mov
decl
push
push
loope
adc
addl
jmp
lods
cld
adc
cmp
movsb
in
pop
mov
call
adc
out
cmp
push
sub
push
and
in
sbb
insb
sti
and
hlt
add
in
loopne
xor
ret
inc
cmp
mov
inc
cmp
fdivrs
sti
setg
pop
pop
xchg
shl
xchg
add
je
nop
pop
lea
movsl
fdivrs
sub
mov
fadds
dec
gs
mov
cli
sbb
and
andl
mov
je
xchg
sub
call
jne
add
stos
xchg
jg
es
dec
mov
les
sub
repz
xchg
cmpl
aas
ss
enter
test
aad
sub
sub
pop
adc
xor
mov
sbb
pop
push
les
mov
jb
pusha
in
inc
loope
andb
add
insl
jp
aas
mov
adc
pop
mov
rol
adc
jg
outsl
push
push
mov
inc
sbb
aam
sub
push
cld
es
dec
adc
adc
rcll
test
sbbb
outsb
lret
and
frstor
pop
mov
ret
add
cltd
and
add
leave
jne
shlb
insb
sbb
mov
movsb
les
nop
fs
cwtl
mov
add
mov
pop
cmp
fdivrl
cmp
rclb
les
push
push
mov
andl
bound
lds
mov
adcl
out
and
adc
push
lea
mov
dec
jl
adc
int
and
and
mov
sub
es
das
aaa
sbb
nop
or
shr
clc
cmpsb
adc
mov
mov
cmpl
mov
nop
divl
inc
inc
cmp
mov
and
mov
and
xchg
mov
and
add
or
into
inc
cli
and
adc
pop
xor
pop
bound
push
xchg
sahf
loopne
sub
adc
inc
sub
sub
pop
adc
je
pop
add
leave
ret
cld
adc
fidivrl
enter
inc
mov
cwtl
rorl
nop
inc
xlat
adc
outsl
mov
lret
push
sbb
fildl
int3
imul
and
xchg
dec
mov
adc
push
jno
dec
int3
push
outsb
les
or
imul
loopne
outsb
add
push
call
test
add
call
add
and
and
jmp
pop
and
mov
cltd
loopne
stos
rcr
loope
je
xor
mov
inc
push
lret
in
xor
adc
mov
inc
fadds
sub
or
inc
sub
mov
fprem1
dec
bound
lods
and
or
call
push
fstl
sbb
or
lret
aas
add
sub
adc
mov
lret
clc
inc
cli
sti
adc
push
add
or
pop
inc
insb
or
loop
xor
dec
push
add
adc
out
neg
cld
add
inc
mov
imul
cwtl
mov
pop
lcall
xor
cli
push
or
stos
call
lahf
inc
mov
dec
mov
push
sbb
or
inc
mov
pop
xchg
icebp
andb
sub
dec
stos
and
sub
imul
inc
sbb
push
push
lds
adc
push
mov
mov
sub
movsb
stos
ja
push
mov
jae
sub
xchg
in
and
sub
mov
shrb
repnz
loopne
push
lea
xlat
pinsrw
jge
jg
dec
mov
ss
or
test
and
adc
push
jle
cmc
movsb
add
adc
sub
mov
test
cli
push
lahf
jnp
rclb
call
mov
mov
add
inc
jl
cmp
sbb
sub
jne
dec
push
je
jb
sbb
and
loop
test
pop
pop
ret
imul
xor
inc
or
xor
daa
adc
or
mov
cmp
inc
sahf
and
lea
pop
push
add
inc
cmp
mov
cmp
adc
rcrb
push
push
in
nop
jae
call
cld
loop
adc
cmpb
lods
or
fildll
xchg
adc
je
add
clc
andl
insb
xor
cmp
jge
mov
cmp
rcrb
jge
lret
cmp
ret
cmp
je
push
pop
jbe
lods
jb
daa
mov
cmpsb
mov
cld
or
popf
inc
call
xor
cmp
and
and
mov
dec
dec
les
sar
cmp
jne
sub
push
cmpsl
mov
push
movsb
sahf
xchg
call
ljmp
jne
mov
mov
push
or
loop
je
pop
lea
mov
lret
inc
insb
ret
dec
mov
push
mov
rclb
or
faddl
inc
xor
std
adc
jb
xor
inc
and
add
dec
pop
push
or
mov
xor
inc
cmp
and
lock
test
sub
es
test
mov
push
mov
mov
movsb
add
scas
je
dec
xor
int
test
jno
pusha
push
and
mov
cltd
or
inc
nop
push
std
test
movb
push
pop
adc
push
mov
add
jo
mov
or
or
mov
push
or
dec
sti
pop
fistpll
inc
sbb
ja
xorl
mov
icebp
sbbb
dec
stc
movsl
daa
lcall
subb
sub
push
lock
lret
shlb
push
xor
incb
in
sub
dec
adc
xor
add
bound
aam
inc
add
push
dec
push
sti
ficoms
add
js
and
je
push
add
testb
stc
add
sub
mov
je
lods
ljmp
push
push
push
xor
or
lods
sbb
and
and
push
mov
adc
call
inc
adc
mov
enter
sbb
divb
add
incb
adc
add
fnsave
push
faddl
test
rcrb
and
mov
push
lods
and
push
push
or
pop
and
adc
test
inc
aas
dec
shl
int
es
movsb
or
mulb
xchg
inc
cli
imul
stos
movb
adc
fs
sbb
and
mov
scas
push
cwtl
inc
fsubrs
push
les
mov
test
rorl
je
or
inc
idivl
inc
lret
or
sbb
inc
add
mov
pushw
movsl
mov
je
and
mov
in
lret
or
push
repnz
out
fdivrl
aam
cwtl
adcb
xor
cld
inc
js
clc
and
add
movsb
movsl
adc
dec
adc
jne
xchg
int
jmp
push
or
out
mov
or
and
clc
cmpsb
dec
dec
fcoml
cmp
aam
pop
rcr
lods
or
inc
xchg
addr16
and
gs
xchg
out
adc
mov
mov
sub
xchg
movsl
jmp
or
fistps
loop
mov
and
dec
mov
xor
into
dec
daa
cwtl
in
pushf
cld
xchg
add
adc
adc
loopne
rorl
in
cld
hlt
jg
dec
mov
mov
mull
stc
jge
mov
sbb
or
dec
cwtl
sarb
xor
movsb
or
sub
push
or
push
call
add
cltd
pop
idiv
test
jne
into
movb
inc
jmp
pusha
mov
mov
mov
cmp
cmp
stc
jae
andb
pop
sub
jns
mov
cmove
fisttpll
sub
xor
and
sbb
add
mov
fnstcw
or
xchg
and
jb
inc
lret
jl
xor
add
mov
mov
lock
enter
call
mov
push
nop
out
call
sahf
or
andl
inc
or
shrb
dec
xchg
daa
lods
jge
lods
in
and
lods
stos
mov
push
hlt
xchg
jp
cld
or
mov
cltd
pushf
in
cmp
insb
cs
sbb
mov
sbb
or
dec
cwtl
lods
sbb
xor
add
call
dec
ret
xchg
daa
and
clc
call
pop
loope
and
test
cmp
mov
mov
mov
popa
stos
sbb
push
or
jo
add
adc
lret
add
pop
and
es
pop
sahf
and
mov
inc
mov
mov
adc
daa
add
or
and
pop
movsb
popa
adc
xor
sub
sub
inc
std
adc
sti
repnz
and
test
push
or
xchg
and
mov
cmp
add
jmp
out
xchg
enter
lea
ret
rorb
add
adc
pop
xchg
xchg
repz
push
dec
mov
push
repz
adc
or
jmp
xchg
and
mov
cmp
les
jmp
and
pop
mov
lods
cld
in
cmp
inc
push
inc
inc
sbb
test
test
and
push
cld
sarl
xlat
pop
test
orb
fidivs
test
xor
fdivs
xchg
sub
jl
imul
aas
mov
sub
ds
push
dec
daa
adc
and
push
in
xor
movl
and
mov
lret
jno
insb
add
jo
sub
adc
loopne
lods
cmp
je
pop
dec
sti
add
add
xor
and
or
inc
cmp
jl
xor
test
cwtl
bound
jmp
addr16
call
xchg
or
lock
out
mov
popf
adc
push
push
pop
mov
dec
icebp
ds
incb
addl
adc
mov
mov
inc
mov
repz
mov
or
cmp
xchg
add
cmp
loop
popf
add
repnz
add
dec
xchg
fdivp
adc
xchg
cmp
pop
push
sbb
push
xor
xor
xor
jmp
or
sbb
mov
fiadds
xor
jl
push
inc
or
xor
or
ss
add
inc
xchg
mov
xchg
lods
bound
nop
push
inc
fadds
setge
inc
jmp
enter
sbbl
xchg
sbb
inc
popa
lods
xor
bound
inc
push
dec
icebp
gs
inc
sbb
sbb
fsubrl
pop
hlt
push
adc
dec
and
sbb
push
xor
sub
je
das
xor
jne
pop
adc
mov
aam
ret
cltd
or
jb
add
xor
xchg
rorl
push
imul
fldenv
orl
add
cli
andl
mov
test
call
dec
xor
or
push
je
xlat
pop
dec
xchg
mov
cmp
sahf
inc
sub
cwtl
jns
sbb
mov
inc
testb
xor
pop
adc
cmp
test
mov
cmp
push
adcb
sbb
pop
pop
popa
push
popa
inc
inc
cmp
shlb
xchg
insb
xor
push
sub
mov
or
mov
cmp
int
inc
push
push
jle
sbb
push
rclb
test
mov
xchg
and
repz
jmp
mov
popf
and
into
jo
inc
push
lea
test
mov
adc
xor
xchg
add
test
xor
jl
mov
bound
jp
std
cli
jb
ljmp
push
adcb
mov
push
cmp
leave
imul
mov
xchg
insb
adc
or
add
shlb
push
cmp
test
inc
cmp
jb
orb
adc
or
lods
add
inc
jo
mov
adcl
shr
xchg
dec
xchg
mov
xchg
enter
adc
scas
pop
pop
add
jbe
cmp
rol
jmp
mov
jp
mov
cmp
std
push
or
insb
sub
jmp
inc
inc
int
mov
gs
xor
sbb
test
lea
out
lret
or
push
xor
mov
adc
dec
adc
or
fs
sub
xchg
or
sbb
mov
inc
pop
pusha
push
push
push
mov
xchg
clc
sbb
sarb
and
cmpl
int
pop
inc
adc
push
push
push
mov
lret
outsb
adc
inc
shlb
mov
inc
das
sarb
mov
dec
push
dec
xor
push
mov
sub
aas
outsl
or
sub
mov
jbe
inc
jne
jns
mov
hlt
sub
jne
ret
mov
rcll
push
jl
and
xchg
or
dec
push
and
cmp
sub
nop
cmp
push
daa
mov
sub
mov
push
sub
mov
es
adc
xchg
cs
adc
inc
jne
jecxz
stos
and
xor
push
leave
sahf
leave
sbb
jmp
cld
xor
hlt
or
mov
push
jl
je
xchg
xchg
clc
ret
jno
jne
sub
sub
push
ret
cltd
cld
sub
mov
mull
mov
and
xor
adc
push
fstps
adc
and
push
mov
cmp
adc
cmc
jmp
inc
sub
mov
cltd
cli
sbb
mov
scas
adc
andl
pop
cmp
mov
mov
iret
sub
mov
push
adc
pop
pop
pop
inc
outsb
je
mov
mov
push
jge
scas
stos
push
aaa
or
cld
jp
and
jnp
dec
adc
mov
fiaddl
inc
scas
pop
and
clc
xor
daa
in
pop
mov
loop
rclb
and
inc
sbb
add
cmp
mov
inc
xor
popf
out
out
mov
cmpl
xchg
mov
xchg
sahf
aad
mov
push
into
sbb
sub
sub
sbb
and
adc
nop
repnz
adc
jmp
test
mov
fwait
xor
adc
test
lods
ret
cmpb
inc
inc
mov
scas
inc
movl
adc
sar
push
je
pusha
push
cmpb
das
addl
jne
inc
dec
xchg
outsl
adc
mov
mov
push
in
sbb
and
adc
inc
push
push
cld
repnz
mov
dec
stos
or
add
mov
inc
push
or
faddl
push
jno
add
scas
sub
xor
test
inc
sbb
das
test
mov
fcompl
sbb
push
mov
xchg
or
rclb
jne
mov
or
or
sbb
test
xor
testb
loopne
scas
loopne
clc
cmp
je
push
call
mov
insb
inc
sti
in
push
lods
aas
lret
xchg
cli
xchg
mov
pushf
mov
mov
stc
mov
mov
mov
outsb
in
jge
add
push
lock
inc
push
lret
dec
stc
mov
and
das
jl
fwait
push
rorb
call
mov
je
and
inc
orb
pop
adc
pop
mov
shrl
pop
push
sub
or
adc
and
ds
push
mov
clc
fsubrs
xchg
sbb
loop
clc
adc
jmp
mov
push
jp
xchg
lahf
sbb
mov
mov
or
or
jbe
shrb
inc
clc
in
pop
test
aam
and
out
js
mov
test
sub
shll
outsb
popf
push
xor
aaa
push
pop
pushf
xchg
enter
sbb
xchg
nop
jp
dec
mov
mov
push
imul
out
cmp
xchg
rorl
out
xor
cltd
popf
add
sbb
cld
inc
push
imul
or
repz
push
pop
hlt
or
jmp
cmp
xorl
inc
arpl
fs
pop
data16
cld
push
hlt
push
push
rcll
shrb
or
add
push
inc
idivb
mov
jne
adcb
pushf
or
mov
mov
cmp
push
sbb
pusha
inc
mov
cmp
shlb
outsb
push
ds
insb
adc
mov
hlt
xor
sbb
jo
push
sbb
ficoml
pop
pop
mov
lahf
xor
sub
pop
orl
xor
shrb
jno,pt
pop
push
outsb
xor
test
fxch
push
rorb
test
sub
lret
or
cmp
push
pop
pushf
add
mov
pushf
push
or
icebp
jb
shll
inc
movsb
push
in
xchg
pop
dec
sti
lret
stos
or
in
and
lea
clc
sub
cs
sbb
xor
dec
pop
fisubs
mov
add
outsb
mov
mov
adcl
and
sub
pop
shl
dec
sub
lret
cmp
pop
inc
sbb
pop
imul
pop
xor
push
xchg
add
mov
out
and
sub
cmove
call
fs
dec
pop
daa
jne
jnp
or
cld
jno
fisubl
test
mov
sub
call
pop
mov
sub
test
movl
and
inc
xchg
sub
mov
cmp
cli
and
adcl
xor
mov
pop
fsubs
inc
sbb
sarl
mov
inc
xchg
dec
movsl
push
and
cld
in
test
push
das
add
sbb
push
mov
data16
jl
add
add
bound
push
sub
jmp
or
sbb
sub
dec
sub
inc
sub
loope
or
icebp
pop
add
push
jmp
stos
or
sub
sub
aad
inc
cmpsb
fwait
xchg
pusha
mov
mov
sub
or
and
mov
bound
and
or
or
rcrl
adc
push
daa
rorl
shrl
je
or
pop
pop
dec
out
cmpb
jae
cmpb
and
test
inc
divb
hlt
push
jno
or
test
jmp
mov
mov
aad
pop
pop
pop
cld
add
and
inc
nop
pop
inc
inc
cmpsl
jns
cmp
jb
jne
mov
inc
dec
subb
sub
test
xchg
or
mov
fildl
dec
mov
or
jmp
mov
lahf
cmp
imul
and
xor
data16
test
popf
imul
insl
and
pop
mov
sti
jnp
popa
test
add
pop
push
stc
mov
in
je
movsl
cmp
out
call
cmpsb
sub
inc
cli
call
rcl
cld
push
cwtl
pop
mov
jmp
pop
push
mov
out
stos
test
je
dec
push
and
sub
cmp
jne
add
js
movsb
jge
add
push
push
mov
sbb
dec
mov
testl
xor
push
xchg
adc
out
rorl
aam
pop
mov
das
mov
sub
push
cltd
in
test
test
mov
push
lds
daa
fistl
je
jl
xlat
inc
enter
sbb
xor
cmpsb
cmp
push
jmp
mov
out
pop
out
sub
add
bound
stc
adc
dec
mov
lods
mov
inc
push
inc
shr
sub
test
gs
outsl
es
lods
cs
push
fisubs
xor
test
mov
mov
xor
push
inc
push
js
test
fs
inc
push
mov
sarb
adc
mov
adc
insw
xchg
adc
std
mov
lds
pusha
lea
jmp
inc
lods
or
hlt
mov
cwtl
adcb
arpl
test
imul
sahf
and
or
inc
mov
fmull
mov
fdivs
cld
jbe
adc
sub
adc
dec
lret
xlat
sub
dec
jge
in
xor
bound
idivl
pushf
sbb
stos
push
adc
scas
inc
jge
inc
cmp
int3
shrl
mov
push
inc
xor
sbb
mov
or
jmp
je
inc
cld
inc
jo
lock
mov
sbb
shrb
adc
mov
or
test
push
xor
pop
adc
jg
clc
fcomps
movsb
adc
and
jno
scas
xor
mov
adc
sub
mov
inc
ret
jmp
push
je
and
inc
adc
cmp
or
inc
in
scas
xor
or
ret
inc
insb
mov
adc
addb
jmp
sti
cmp
pop
mov
or
ljmp
pop
into
ljmp
aad
dec
adc
add
cmp
lods
add
hlt
mov
aam
cltd
test
cmp
sbb
or
lcall
xchg
cld
cmp
repz
mov
jecxz
sarb
test
fdivs
std
sbb
and
jns
mov
adc
add
jae
adc
jmp
es
cmp
lods
sbb
sbb
stc
jle
and
push
fisubrl
push
outsl
call
iret
and
push
xchg
std
jns
aas
mov
lock
loope
jns
rolb
add
sbb
lods
cmpsb
sbb
inc
mulb
sbb
adc
adc
or
dec
pop
in
xor
nop
fmuls
fistl
mov
lods
inc
and
sbb
mov
out
pop
comiss
enter
push
ret
in
inc
in
push
stc
jmp
icebp
call
sbb
call
adc
imul
pusha
clc
rorb
sub
mov
movb
cwtl
push
mov
sbb
into
add
sub
mov
inc
xor
data16
syscall
je
call
adc
out
sub
adc
enter
movb
and
sub
inc
sbb
adc
inc
or
imul
adc
mov
push
andw
adc
and
or
adc
xchg
push
mov
dec
enter
rorl
movsb
push
mov
and
add
fwait
and
aad
push
jbe
cmp
inc
fbstp
clc
xor
enter
push
divl
add
adc
mov
fnsave
and
xchg
cmp
fmuls
fsubrs
mov
adc
mov
enter
push
mov
jb
pusha
test
push
inc
mov
leave
mov
fucomp
push
lea
scas
inc
and
test
mov
sub
inc
ds
jbe
jns
mov
jle
jmp
retw
adc
mov
cmc
adc
mov
mov
add
mov
jns
jg
push
cmp
mov
mov
enter
into
push
mov
mov
and
popf
push
push
dec
xor
adc
std
test
mov
dec
lcall
sub
or
ud0
out
je
nop
cld
or
fstpt
sti
test
std
inc
push
loope
inc
or
sbb
xor
mov
and
sub
mov
xor
inc
push
adc
enter
addr16
in
cmp
imul
sbb
in
or
add
and
pushf
and
pop
cmp
sbb
push
push
sbb
rorb
and
cmp
pusha
gs
xor
push
push
popf
ret
in
lock
adc
hlt
inc
sub
test
inc
imul
mov
xchg
pusha
fs
bound
or
dec
xor
or
movsb
inc
inc
and
add
pusha
xor
add
daa
js
ret
inc
cwtl
and
inc
dec
and
inc
int3
and
inc
xor
adc
adc
enter
sub
test
int3
adc
lock
or
int3
xor
inc
mov
fdivl
inc
and
call
cmp
mov
or
xchg
aam
mov
ficompl
aam
or
mov
or
fadds
sbb
inc
andb
xchg
xchg
test
or
rcrb
ljmp
pop
adc
or
orb
scas
call
mov
add
test
mov
mov
push
xor
cltd
faddl
mov
js
inc
sbb
fs
adc
dec
fs
xchg
adc
or
xchg
xlat
nop
fmull
mov
xchg
sbb
xor
loop
push
loop
cmp
sub
fwait
loope
jne
xchg
jo
push
movsl
add
ja
push
mov
adc
or
xor
mov
or
shrb
je
adc
lret
inc
mov
or
inc
xor
test
inc
mov
and
imul
in
adc
les
xchg
xor
xor
pusha
or
mov
aas
jo
and
rcrl
stc
punpckhbw
add
cmp
xchg
js
mov
inc
fst
adc
fs
xor
adc
mov
popa
clc
or
mov
xor
call
or
mov
es
out
mov
inc
add
loope
sbb
sbb
adc
enter
xor
test
inc
sbb
mov
and
inc
movsl
sub
inc
cltd
and
nop
enter
xor
xor
jno
jo
imul
inc
cmp
pop
and
imul
fs
xor
mov
adc
and
or
mov
jecxz
test
arpl
push
or
or
xchg
and
aam
sub
dec
and
add
inc
and
lock
jo
or
xchg
aam
add
adc
add
test
xor
in
sub
aam
and
lret
jb
and
in
jbe
xor
push
add
mov
call
movsb
int3
loopne
sbb
adc
das
mov
or
and
fnstenv
sbb
dec
mov
lods
roll
and
adc
nop
and
and
inc
and
push
jl
and
mov
jp
or
xchg
push
xor
sub
fadd
sbb
push
xor
inc
or
xorb
mov
mov
movsb
mov
mov
fcomps
mov
and
xorb
mov
sub
sub
or
fimuls
xchg
bound
add
push
and
xor
sub
dec
push
cmp
cmp
ljmp
cltd
enter
mov
gs
rcrb
test
inc
xor
shl
dec
mov
fadds
test
sahf
sub
je
mov
and
les
xor
sbb
pop
xor
mov
movsb
xor
les
aas
inc
sub
nop
mov
sbb
mov
adc
lods
push
xchg
dec
xchg
sbbb
into
mov
mov
fcmove
dec
push
mov
je
sub
pop
pop
loopne
movsb
ret
inc
and
sub
dec
push
xchg
xor
enter
xor
cld
mov
xlat
fcoms
or
movl
test
out
cmp
and
inc
adc
adc
xchg
xor
adc
cmp
and
pop
lods
sbb
and
pusha
xor
xlat
or
pushf
cmp
lahf
mov
adc
xor
xor
ror
imul
mov
in
cmp
xchg
mov
adc
inc
and
movups
or
sbb
sbb
xchg
fadd
iret
sub
in
nop
push
loop
sbb
es
jne
clc
loope
loope
adc
xchg
adc
push
lret
leave
or
cld
pusha
in
push
das
nop
xchg
idivb
push
je
or
push
mov
cwtl
pop
cmpb
xor
test
push
push
call
dec
fadds
pop
mov
jecxz
in
incb
push
or
call
ret
sbb
xor
stos
adc
sahf
movsl
push
lahf
lds
aam
outsb
inc
jl
fisttpl
cltd
pop
in
in
mov
in
mov
movsb
push
lahf
xor
rcll
or
mov
movsl
fsts
pop
jmp
and
mov
xchg
jns
test
mov
xor
or
aad
jo
xor
mov
push
jge
call
xchg
sar
shrl
sub
jle
mov
cmp
je
inc
or
clc
add
xlat
jl
inc
das
ds
jle
cmp
pop
jne
lea
movsl
cmp
add
bound
mov
or
idivl
pop
or
sub
adc
jl
movsbl
add
add
pop
jl
or
jp
pop
sub
out
call
jg
xchg
insl
pop
push
mov
push
push
mov
jnp
daa
icebp
fs
push
and
enter
sbb
adc
cmp
jg
or
or
inc
jmp
fldl
push
sbb
je,pn
jmp
adc
out
dec
rolb
pusha
shlb
adc
xchg
int3
jnp
push
call
mov
rorb
sub
add
and
xor
push
push
popf
test
adcb
sub
xchg
loope
les
testb
ss
xchg
add
je
bound
pop
dec
mov
push
mov
out
mov
push
push
mov
les
rcrl
dec
push
enter
cmp
sbb
push
pop
mov
cmp
hlt
dec
inc
add
sbb
inc
mov
sub
into
dec
mov
add
xchg
in
jmp
mov
movsl
xchg
jae
and
mov
add
inc
call
lock
pop
enter
movsl
shrl
aas
or
in
pop
das
mov
push
ss
in
xchg
dec
xrelease
pop
sub
roll
mov
jle
pop
ljmp
push
inc
xchg
sub
pop
xor
add
rol
sbb
psrld
xchg
aaa
jne
and
cmp
rcrb
sar
sbb
jp
inc
rcll
push
mov
dec
outsb
push
push
shlb
mov
jbe
pop
rolb
jo
cmp
xchg
lock
cld
adc
sub
sub
push
jmp
mov
or
movsb
fcmovnu
push
mov
or
test
aam
pop
fadds
js
push
scas
jbe
pop
mov
scas
pop
je
sub
mov
push
or
push
sar
xor
in
pushf
cld
pop
sbb
outsl
inc
pop
mov
jle
xchg
adc
int
es
fbstp
jbe
lret
imulb
jl
xchg
data16
mov
dec
js
in
and
and
sbb
cmp
pusha
mov
daa
outsl
mov
jg
add
inc
mov
dec
loopne
jle
pop
pop
or
rclb
or
icebp
call
dec
icebp
jmp
jo
lahf
xor
mov
and
roll
mov
pop
call
dec
or
pop
or
data16
pop
adc
dec
lods
sub
test
mov
inc
aad
push
hlt
int
push
dec
add
enter
std
lsl
pop
jge
and
jmp
dec
out
fiadds
adc
or
push
icebp
inc
cmc
loop
sbb
shll
dec
pusha
out
jg
mov
add
out
mov
or
lret
scas
lock
sbb
sti
jne
in
mov
pushf
jmp
ret
or
inc
daa
fildll
out
cmp
bound
pop
dec
cmpsl
stos
lock
je
or
test
jle
ret
jg
fsubl
adcb
push
cltd
sbb
push
adc
pop
mov
adc
dec
xor
shlb
pop
mov
mov
rcll
xchg
or
and
pop
je
ret
dec
jmp
jge
das
push
and
sbb
adc
and
test
dec
push
cmc
xlat
inc
or
inc
ret
and
mov
and
adc
xor
and
adc
test
and
jge
sbb
jbe,pn
sbb
outsl
stc
cwtl
or
mov
ja
je
lea
stc
adc
pusha
wbinvd
mov
mov
xchg
ret
and
mov
inc
sub
ss
adc
das
and
and
popa
pop
sbb
inc
mov
pop
add
pusha
cmp
inc
into
mov
test
jb
xor
and
ret
xor
push
dec
pop
xchg
and
cs
inc
dec
mov
adc
add
add
add
stos
add
push
add
push
or
mov
add
jp
fistl
dec
push
mov
and
sub
dec
pop
inc
pop
mov
mov
xchg
or
stc
push
jo
int3
mov
xor
or
clc
adc
cmp
test
pop
cld
int3
mov
js
mov
cmp
fs
cmp
xor
sub
push
jg
iret
mov
jmp
jmp
xor
add
sub
hlt
mov
std
or
std
or
inc
push
ss
emms
cwtl
and
pushl
jne
and
push
test
je
sub
arpl
inc
mov
mov
gs
clc
push
mov
into
out
or
xor
adc
mov
test
fsubs
xor
call
mov
clc
xor
push
push
or
push
les
aas
add
pop
push
ret
sbb
sub
mov
mov
xchg
movsb
clc
cmp
ss
pop
push
push
pop
daa
cmp
jp
xor
hlt
loopne
incl
xlat
testb
ret
orl
mov
inc
sbb
clc
fcmove
mov
push
pushl
cmp
pop
pop
cmc
add
mov
mov
and
xchg
add
call
xor
sbb
jge
cmp
inc
adc
in
aas
dec
in
addr16
push
and
loopne
cltd
call
icebp
push
test
sbb
xchg
mov
pop
push
call
adc
pusha
imul
mov
scas
repnz
xchg
and
or
nop
inc
mov
in
and
push
xlat
mov
mov
faddl
push
push
sbb
xchg
jno
movsb
add
mov
inc
xchg
cwtl
or
or
cmpl
pop
adc
or
pop
mov
int3
xchg
sbb
and
adcb
adc
std
dec
mov
mov
sbb
jne
lret
jge
test
xchg
sbb
in
mov
shlb
fwait
xor
jo
add
inc
and
mov
sbb
sub
adc
loopne
nop
push
test
mov
inc
imul
adc
pop
call
rcrb
or
enter
rorb
mov
pop
adc
jecxz
enter
aaa
fisubrl
icebp
movsb
sbb
sbb
inc
mov
bound
lds
push
and
js
cmp
mov
and
push
or
sub
dec
out
jl
inc
loop
xor
xor
mov
fs
and
mov
sub
adc
imul
sbb
mov
cmp
in
inc
pop
and
push
sub
fsubrs
adc
repnz
jl
push
ret
sub
inc
cmp
mov
sbb
inc
and
push
and
pop
pop
jmp
xchg
outsl
push
jl
inc
test
cs
or
call
and
outsb
fdivrs
dec
xchg
pop
add
push
nop
mov
jnp
pop
xor
add
or
xor
inc
and
pusha
lret
add
sbb
loop
fisttpll
or
leave
or
inc
mov
and
stos
dec
dec
add
sub
sbb
jne
push
push
in
add
test
lock
mov
or
mov
xor
lods
ja
xor
test
jne
mov
push
sub
inc
cld
or
dec
outsl
xor
getsec
sub
popf
notb
pop
pop
or
loopne
xchg
mov
sysret
adc
pusha
inc
or
cmp
add
enter
lds
pop
bound
sub
and
clc
test
push
fcomi
push
rcll
or
dec
lret
jo
sub
int3
pop
mov
adc
adc
loopne
dec
adc
dec
daa
sub
mov
int3
add
xchg
mov
call
cmp
shlb
push
rorb
ja,pn
roll
sub
mov
xchg
pop
mov
mov
xor
xchg
shl
xlat
mov
movsb
bound
xchg
dec
hlt
es
jle
les
cld
mov
cmp
jmp
sbb
push
and
mov
lea
es
adc
sub
push
mov
repz
dec
xchg
in
push
dec
jmp
mov
push
push
sub
stc
lahf
in
dec
dec
mov
aaa
push
push
call
adc
mov
jbe
and
adc
adc
dec
and
enter
test
jmp
and
sub
adc
in
sub
mul
cmp
jno
pop
lock
sbb
adc
or
mov
sbb
mov
sub
pushl
add
xor
mov
imul
fdivrs
fidivs
pop
sti
pop
hlt
push
xor
xlat
jno
xchg
in
mov
add
and
testl
adc
in
aad
jb
add
add
ljmp
sti
xor
or
inc
or
ss
dec
inc
add
push
insb
push
adc
pop
jne
ret
pop
inc
sub
inc
push
std
and
clc
das
enter
sbb
xchg
js
pop
ficomps
push
xchg
jmp
sub
xor
fistpll
nop
inc
loopne
sub
je
push
jmp
jecxz
das
xchg
lock
or
and
inc
xchg
push
notb
cmp
or
inc
gs
add
cmp
xchg
push
lods
ret
adc
inc
sarb
sbb
es
nop
and
xchg
adc
call
inc
push
push
call
sbb
mov
mov
xor
push
test
in
out
stc
fisttpl
pushf
out
clc
xchg
jbe
or
inc
je
cmp
test
or
mov
or
in
jno
inc
cld
sbb
inc
das
add
daa
sbb
push
test
popl
pop
into
and
or
add
or
jmp
test
sbb
nop
sub
sbb
inc
or
dec
decl
mov
lock
pop
je
pop
push
outsb
hlt
ja
ljmp
iret
ficoml
and
ds
adc
pop
push
ds
movsb
psraw
aaa
adc
clc
mov
or
flds
or
gs
adc
scas
and
mov
jl
xchg
shl
das
push
inc
js
dec
je
and
pop
and
sub
movsb
mov
je
sub
popf
or
adc
and
outsb
ljmp
inc
cmp
adc
jns
fs
or
xchg
enter
dec
out
ljmp
jbe
lret
push
cmp
stos
je
xchg
add
push
push
push
gs
rorb
xor
dec
cmpsl
jb
outsb
add
cmp
jb
jmp
push
into
stos
mov
sahf
pop
je
sbb
ljmp
mov
punpckhbw
xchg
or
ficoms
push
movsl
jecxz
dec
clc
xor
cmp
mov
mov
repz
or
and
adc
jecxz,pt
dec
out
xchg
mov
xor
push
call
stc
add
push
jle
lea
shrl
call
ficoms
or
out
inc
pushf
push
movzwl
add
xlat
inc
fdivs
add
adc
add
mov
cmpl
stc
cmc
call
shlb
and
ljmp
addl
cwtl
and
lods
inc
lock
or
fistps
sbb
orl
scas
push
lods
clc
push
je
cmpl
inc
pop
fs
mov
pop
test
lea
and
ljmp
mov
call
and
lods
arpl
and
test
or
mov
jno
in
mov
jge
arpl
aas
ret
shlb
inc
les
or
pop
ss
dec
xor
cli
cmp
sahf
repnz
xor
sub
jp
sub
movsl
ljmp
add
mov
cltd
mov
or
lret
pushf
xlat
vreducepd
iret
mov
mov
dec
xchg
enter
push
mov
mov
cs
lahf
sub
shr
dec
inc
ljmp
enter
test
and
jne
aam
lods
in
pop
cmp
jne
pop
adc
aam
mov
in
loopne
cmp
and
aas
inc
adc
push
iret
faddl
mov
stos
mov
push
jns
or
test
lods
ljmp
mov
test
inc
les
dec
call
mov
fwait
ss
cmp
dec
fdiv
pusha
mov
add
int3
push
das
in
fwait
aam
loop
dec
repz
adc
mov
mov
jmp
sarl
jl
cmp
dec
outsb
or
int3
mov
push
es
sahf
pop
ror
and
xchg
sti
dec
divb
enter
sahf
dec
push
int3
and
sbb
outsb
push
mov
cmp
int3
jg
mov
adc
scas
adc
popa
cmp
dec
mov
pop
jle
aam
pusha
add
dec
cmpsb
jb
sub
mov
mull
xor
sarb
push
jecxz
pop
add
dec
jmp
mov
mov
imul
or
push
and
mov
mov
sbb
mov
mov
adc
imul
sbb
xchg
and
inc
sub
and
psubsb
addl
les
aam
push
or
sub
push
jns
mov
pop
push
fnstsw
and
sbb
sub
pop
xor
mov
pop
movsb
inc
push
clc
or
xchg
jo
jle
xor
or
jmp
mov
inc
mov
pop
or
mov
es
mov
jmp
cs
jb
jo
fmull
mov
cs
mov
inc
adc
sub
add
push
and
mov
sub
rcrb
xor
je
push
xor
std
add
or
adc
lods
and
adc
inc
mov
lcall
jo
roll
cmp
push
pop
push
test
jne
push
cli
inc
mov
ret
icebp
add
push
dec
stos
and
xor
out
cmc
mov
int
dec
inc
inc
scas
out
bound
sbb
and
movsb
loope
mov
mov
mov
je
rolb
sar
les
and
test
jmp
arpl
mov
adc
cwtl
sbb
test
jmp
lods
push
inc
pop
and
push
out
int
sbb
in
mov
pushf
lods
mov
rorl
cli
mov
add
xchg
and
jle
adc
inc
inc
daa
int
imul
insb
jg
mov
add
push
push
push
stos
daa
pusha
dec
xor
and
push
sbb
or
jne
pop
push
ljmp
mov
stc
jg
jb
cmp
adc
pushf
jmp
push
insb
adc
je
or
mov
xor
les
stc
xor
and
fsubl
sub
or
call
movsl
xor
lods
jmp
push
pop
mov
subl
pop
cmp
add
lods
cli
dec
pop
mov
cmovns
popa
cmp
push
adc
aam
rorl
leave
xor
push
insb
shrl
sub
pop
add
cmp
std
repz
adc
push
sub
insl
xchg
adc
sub
pop
sbb
lods
sub
push
mov
scas
jbe
mov
mov
loop
call
dec
cmpsl
mov
inc
mov
and
mov
xchg
jne
lods
inc
test
ss
cs
lods
std
test
xor
push
mov
shrd
push
and
lods
jle
sarb
or
push
int
aas
push
push
subl
inc
fmull
popa
and
aaa
lcall
push
movsl
lods
inc
sti
xor
sub
mov
xchg
hlt
adc
mov
hlt
ljmp
addb
fcomip
stos
mov
nop
inc
xor
or
rcll
xchg
jns
subl
sub
ljmp
cmp
mov
cltd
or
mov
fs
and
mov
dec
push
ret
loope
and
mov
add
mov
das
mov
push
ret
movsb
cmpl
sub
jecxz
dec
test
jmp
mov
xchg
add
pop
icebp
outsl
cmp
mov
add
or
fildl
jo
xchg
cli
jp
pusha
cmp
rcll
pop
pop
iret
popa
stos
xor
jge
aam
fs
in
jg
mov
cmp
stos
jo
push
add
mov
out
sbbl
sbb
daa
lds
ljmp
loope
cwtl
and
or
arpl
mov
jo
stc
sbb
push
cmp
mov
call
scas
mov
dec
ret
mov
aam
mov
and
movsb
les
nop
shrl
call
adc
xchg
pop
and
xchg
outsb
xor
ret
pop
mov
jne
call
pop
xor
int3
sbb
cmc
mov
push
test
mov
dec
sbb
pop
and
mov
xchg
add
xor
push
loopne
hlt
paddb
call
stos
sarb
aad
dec
sub
into
mov
jg
sbb
mov
loop
int3
pop
or
jnp
and
in
push
and
mov
movsb
dec
push
lods
push
nop
adc
push
and
cld
or
adc
test
out
inc
push
fidivrs
loop
mov
and
mov
ljmp
pusha
ficoms
fwait
shrl
and
pop
inc
sbb
push
sti
negb
mov
xchg
mov
cmp
je
cmpb
jne
sub
mov
mov
lcall
movsb
push
xchg
push
inc
cmpb
dec
jp
sbb
in
pop
jp
mov
or
cmp
icebp
xor
in
or
shll
mov
push
add
fs
or
pop
insb
or
das
jecxz
adc
inc
int3
je
xor
lods
sub
fmul
imul
in
dec
lds
xor
mov
jmp
xchg
add
push
pop
enter
cmp
aas
mov
stos
push
cmp
es
in
bound
push
lock
icebp
mov
inc
mov
sahf
and
movsl
inc
out
fs
mov
xor
mov
dec
adc
dec
insb
lahf
sahf
or
pushf
in
push
push
jp
lock
xor
pop
dec
sub
idivl
mov
or
cmp
in
out
inc
pop
xchg
sbb
out
inc
mov
jge
dec
jge
or
dec
jne
mov
jmp
add
inc
sbb
sub
pop
cmpb
movsb
xchg
mov
mov
xor
mov
push
xchg
pop
mov
inc
and
jbe
sete
pop
fs
push
scas
adc
push
sbb
int3
sbb
loope
lahf
cmp
dec
mov
test
sbb
test
jo
fwait
adc
mov
dec
or
add
rcrb
dec
in
inc
pop
and
popa
sub
ret
call
adc
jne
adc
xor
nop
xor
xchg
xchg
sarl
aas
xchg
add
movb
fnstenv
sub
testb
add
dec
or
add
clc
jge
popf
int
mov
dec
push
loopne
imul
adc
adc
nop
xchg
xchg
in
mov
test
push
sti
adc
inc
jbe
hlt
dec
bnd
add
add
jl
jmp
jo
rorb
and
sub
aas
lret
xor
add
add
roll
cmc
xchg
pop
daa
jp
or
out
add
scas
push
pusha
and
push
inc
adc
sub
repnz
or
ret
loopne
mov
cli
fdivl
xchg
mulb
cld
inc
sbb
push
ss
ret
or
and
sarb
sbb
inc
push
nop
out
pop
addr16
dec
mov
ds
jl
lock
je
imul
mov
sub
pop
jo
mov
adc
jns
imul
sbb
and
loopne
andb
mov
les
sbb
pushf
jmp
inc
xor
jmp
mov
mov
cmp
std
mov
js
lahf
test
arpl
movsb
push
and
push
mov
clc
ja
call
pusha
adc
fbld
adc
pop
xchg
add
and
lock
arpl
pop
pop
inc
scas
inc
daa
fwait
lret
xchg
xchg
shll
nop
dec
in
adc
sub
push
add
aad
and
jecxz
dec
lea
dec
and
mov
mov
adc
ss
pop
sub
push
fildll
push
add
jo
mov
test
sbbl
push
inc
push
cmp
mov
dec
in
cltd
xor
ficoms
fwait
jne
push
pop
movsl
aas
mov
xchg
clc
ljmp
pop
mov
cmp
outsl
mov
je
mov
jle
enter
das
sub
mov
jmp
jne
cmp
test
sub
jb
push
in
inc
popl
adc
lahf
mov
push
pop
push
repnz
es
lret
mov
sbb
stc
adc
xchg
pop
push
add
push
stos
ficoms
mov
jmp
orl
xchg
cwtl
in
xor
and
xchg
lods
jg
push
dec
xor
sbb
dec
jge
inc
lcall
je
jmp
jbe
cwtl
inc
scas
lds
cmp
push
push
push
cltd
clc
push
dec
cli
mov
rclb
addb
das
pop
mov
adc
jbe
push
cmp
mov
jbe
adcl
jl
fiaddl
mov
int3
sahf
lds
or
dec
popa
mov
dec
setae
add
xchg
ret
add
icebp
sbb
and
sbb
push
adc
xor
adc
mov
lds
pop
popf
pusha
lahf
test
pushl
mov
shlb
mov
push
mov
je
cld
lahf
outsl
pop
add
int
mov
movsl
inc
mov
xor
sbb
pop
mov
filds
xor
xor
roll
push
out
add
inc
mov
das
hlt
adc
adc
cmpsl
mov
push
sbb
mov
or
jbe
or
jg
mov
shlb
fdivs
es
xchg
push
mov
push
cli
and
push
daa
xor
mov
push
adc
sub
in
dec
adc
movsl
dec
cld
cmp
jo
out
loop
and
sbb
aam
fimuls
push
sbb
lock
push
and
add
call
push
pop
mov
fadds
jl
movsb
or
add
sub
mov
dec
xor
jle
bound
and
jmp
adc
dec
dec
movsb
push
mov
pop
add
mov
je
imul
lea
stos
test
or
xchg
push
xchg
cmpsb
or
adc
and
ds
ss
les
mov
and
add
mov
and
jmp
leave
adc
pop
push
mov
dec
push
push
adc
mov
clc
mov
inc
outsb
dec
dec
incb
das
dec
test
sub
add
dec
push
inc
add
adc
and
inc
cmp
adc
cmp
adc
cmp
nop
sub
ljmp
enter
and
mov
adc
adc
inc
mov
mov
push
cmp
ret
aas
adc
mov
bound
sbb
push
loopne
jmp
inc
aam
pop
xor
or
test
test
add
call
and
cs
lods
pushf
inc
sub
or
push
and
or
pusha
jo
push
adc
pop
adc
cmp
sub
pop
add
push
jecxz
scas
lock
or
punpckhbw
inc
popa
hlt
jmp
mov
adc
and
adc
mov
xchg
sub
dec
inc
mov
add
dec
dec
test
test
in
es
adc
cwtl
sub
lods
sub
push
cmpsl
fwait
mov
cwtl
inc
js
sti
aaa
aaa
add
insb
sub
push
adc
mov
nop
dec
mov
adc
stos
dec
js
xor
sub
adc
push
bound
sbb
inc
and
add
mov
mov
adc
ss
or
loope
and
push
and
pusha
bound
dec
sub
hlt
adc
pushl
sub
xor
mov
push
jle
adcl
call
mov
aaa
cmp
repnz
inc
jg
sub
and
lret
cwtl
inc
ss
jp
push
adc
xor
enter
fidivrs
xlat
test
cltd
sub
jb
je
adc
mov
jo
adc
js
push
fs
adc
aad
cmp
adc
xor
push
jno
or
mov
sbb
push
and
loop
push
lcall
and
cmp
mov
sub
and
adc
and
ret
mov
fisubrl
jb
adc
lods
sub
or
cltd
and
and
cmp
inc
add
xor
pop
mov
pop
or
in
jne
mov
cmpsb
fs
fdivrs
test
add
cmp
jne
push
lcall
inc
dec
jo
mov
add
xor
call
add
push
test
adc
in
subb
inc
and
hlt
incb
add
cwtl
imul
and
pop
mov
add
xchg
push
das
xor
or
cmp
test
cmp
adc
pushf
sub
jl
adc
test
xchg
and
leave
cmp
push
and
cmp
mov
jo
cmp
cmp
pop
dec
xchg
imul
test
or
xchg
nop
hlt
or
pop
shl
dec
aad
and
mov
dec
lock
dec
push
pop
sub
xor
sub
shrb
push
inc
xlat
enter
cwtl
cmc
sbb
daa
and
push
jp
lahf
sub
cmc
mov
shlb
dec
loop
xchg
ljmp
or
data16
xor
push
xchg
inc
xchg
test
push
outsl
dec
cmp
shrl
mov
ficoms
push
inc
pushf
outsb
xor
lea
push
push
outsb
xor
mov
sbb
and
push
dec
stc
shl
sahf
test
mov
xor
jge
xor
push
fadds
adc
repz
into
mov
lret
push
addr16
mov
cmpsl
popa
push
jl
jmp
rolb
lds
faddl
int3
movsl
adc
pop
mov
nop
shl
adc
or
and
push
adc
adc
data16
xchg
mov
or
sub
mov
icebp
daa
cmpsb
or
jo
inc
pop
es
js
push
adc
es
pop
jo
and
inc
push
test
and
jg
movsl
adc
jp
cmp
cwtl
inc
test
pusha
sbb
cmp
mov
inc
cmp
pop
and
inc
adc
pop
or
sub
sbb
iret
and
sbb
xchg
lea
jns
add
and
daa
and
in
sub
dec
inc
pop
sub
inc
cmp
pop
and
cmp
push
and
ret
dec
lret
pop
std
sbb
adc
jmp
adc
mov
jno
pop
cmp
xchg
pop
mov
nop
fsub
dec
mov
int3
inc
test
sub
sbb
xchg
aam
mov
sarb
popa
test
xchg
sbb
and
mov
stos
sbb
fs
sub
loope
sbb
xchg
or
sub
push
sbb
cwtl
ret
cmp
enter
sbb
lahf
adc
cmp
jl
stos
sbb
cmp
xor
sbb
sbb
in
cmp
sbb
fs
cltd
push
pusha
or
test
hlt
push
inc
je
and
sub
or
inc
mov
mov
cmp
and
ret
mov
fstl
push
push
dec
ja
movsb
adcb
iret
or
stc
push
or
mov
add
adc
add
adc
imul
mov
xchg
or
and
and
mov
iret
mov
sub
data16
jmp
or
pop
rolb
or
test
addr16
insb
xor
inc
pop
ret
dec
adc
les
movsb
int
cmp
test
sti
mov
dec
mov
xor
or
sub
xchg
add
mov
out
inc
shll
adc
movsb
pop
and
pop
and
daa
mov
jne
lods
mov
inc
mov
push
and
xchg
pop
sbb
push
or
dec
sbb
call
push
sub
and
jmp
rorl
mov
and
inc
or
or
inc
jb
fs
into
ja
mov
test
sbb
or
push
xchg
sbb
and
pushf
and
inc
pop
enter
or
adc
mov
or
or
sbb
enter
orl
cmpb
les
and
push
add
movl
mov
adc
push
and
je
gs
mov
std
mov
xchg
lahf
fstps
dec
jne
mov
mov
and
and
test
pop
test
iret
dec
dec
pop
sub
lds
add
inc
inc
mov
mov
jmp
inc
fs
push
sbb
bound
adc
adc
adc
add
adcb
sub
outsb
adc
fs
xlat
adc
ret
inc
push
dec
pop
jno
or
push
push
sbb
xor
sub
push
adc
dec
ret
cmp
pop
push
adc
cmp
adc
or
mov
cmp
mov
in
cmp
test
and
cmc
push
sbb
xchg
mov
movsl
test
adc
sub
or
pop
push
add
adc
or
lret
out
dec
pop
pop
jp
cmpsb
sub
adc
inc
pop
dec
in
jo
or
or
loopne
dec
sub
mov
jb
loopne
adc
pushf
inc
push
fadds
aam
adc
test
xchg
in
cmp
rorb
rclb
or
mov
inc
push
mov
push
mov
mov
test
push
addr16
lcall
call
or
cwtl
jo
add
add
mov
test
jbe
or
dec
cmp
xchg
pop
add
imul
fs
test
clc
call
aam
cmpb
jmp
lahf
fs
mov
enter
clc
mov
jb
xchg
push
mov
sub
add
inc
ret
lea
push
rcr
pushf
test
pushf
adc
pop
repz
test
mov
aam
xchg
out
and
mov
push
lds
cmp
out
stos
xchg
shl
nop
sbb
inc
movsl
adc
mov
lea
test
insb
ret
sarl
inc
xorl
xorb
xchg
xor
dec
push
roll
ret
mov
test
test
jmp
mov
ret
push
jnp
test
fadd
in
pushf
pop
dec
xor
les
or
mov
sbb
test
jb
xchg
xor
push
xchg
test
cmp
loopne
data16
mov
and
arpl
xchg
push
inc
cmpsb
or
push
xor
pop
inc
or
jmp
icebp
cld
inc
inc
hlt
aaa
pop
fldcw
adc
inc
sub
or
pop
push
push
lahf
movsb
xor
adc
daa
jg
dec
testb
fisubs
dec
jo
adc
in
mov
push
imul
shr
pop
cmp
add
test
stc
mov
pop
inc
mov
cmp
pusha
xor
push
push
mov
jmp
sub
mov
sbb
push
test
leave
adc
nop
xchg
xor
movsl
and
sub
adc
rorb
popf
mov
mov
inc
inc
sub
lods
xchg
je
inc
mov
sahf
mov
sub
sub
xor
in
test
pop
sub
xchg
xchg
std
cmp
sub
and
inc
xor
pop
psignd
or
xor
push
push
push
loope
mov
ficoml
test
push
cmp
push
jmp
inc
in
sbb
clc
aas
pop
fadd
call
push
fdiv
xchg
fsqrt
inc
movsl
loopne
pop
ret
adc
adc
push
jl
push
xchg
jne
inc
inc
jmp
push
data16
mov
je
push
call
inc
inc
in
or
aas
lea
call
mov
cld
jo
sub
es
pop
sub
add
jmp
xor
fmuls
mov
sub
es
dec
sub
movsb
test
aas
mov
mov
fsubl
in
repz
inc
mov
mov
push
push
mov
dec
inc
push
sahf
and
mov
popa
mov
les
push
adc
fdiv
push
mov
push
pop
rcr
repz
aad
add
pop
movsl
dec
jp
clc
repz
push
or
in
test
outsb
mov
sbb
push
mov
or
adc
pop
dec
subb
sbb
inc
loop
mov
cmp
sub
mov
mov
mov
cmp
test
out
stos
xor
call
adc
push
cltd
insb
jno
sbb
or
shr
fwait
ja
sbb
out
mov
out
mov
and
test
test
test
push
out
test
pop
jle
mov
mov
mov
cmp
lds
test
lods
insl
push
or
mov
ss
jmp
fs
mov
sbb
dec
ljmp
mov
push
andb
mov
jmp
dec
inc
inc
test
test
xor
and
mov
and
sub
push
adc
xchg
and
and
xor
mov
sbb
cmp
push
mov
or
jmp
test
call
jmp
ljmp
pop
dec
jb
pop
test
dec
lods
inc
adc
cld
adc
or
sbb
inc
out
adc
pop
mov
or
ds
add
lock
xor
inc
xchg
cs
lock
cmc
test
push
and
cmp
icebp
jg
imul
jne
push
xchg
jmp
lea
jle
pop
mov
mov
mov
add
cmp
ljmp
sbb
jb
shlb
int3
bound
push
hlt
pushl
int
imul
xchg
nop
cmc
pop
ret
push
aam
popa
dec
push
mov
ret
bound
xor
add
fdiv
cs
sbb
mulb
push
and
insb
adc
or
cmp
insb
test
hlt
rep
lods
fisttpl
into
ret
and
ret
mov
call
std
adc
sub
ret
cs
jmp
sub
xor
jbe
adc
mov
push
cmpsl
fwait
ret
push
jmp
aam
and
pop
mov
adc
dec
xchg
add
cmp
or
mov
test
rolb
inc
or
aaa
out
sar
xchg
xor
jp
pusha
pop
jle
mov
out
add
push
mov
je
pop
sub
or
cmp
popf
jl
and
popf
push
sahf
inc
mov
xchg
out
jmp
pop
inc
leave
dec
mov
xchg
mov
mov
ud2
int
sub
push
andb
cmpl
sti
lds
int
add
jle
xor
add
xchg
ja
jp
pusha
push
lds
push
mov
adc
or
mov
movsb
jb
and
xchg
icebp
sub
adc
test
lea
insl
jno,pn
xchg
adc
jmp
mov
nop
xor
xchg
xchg
xchg
orb
cmp
dec
mov
mov
push
cmpsl
jae
cli
adc
test
loop
es
pushf
pop
push
nop
pushf
mov
fidivl
mov
mov
mov
xchg
cltd
es
repnz
xchg
int3
cmp
mov
mov
lea
jmp
adc
orb
sbb
and
jne
push
inc
adc
outsl
inc
data16
fwait
or
test
fisubs
unpcklps
and
popa
or
imul
xchg
or
adc
repnz
shll
adc
lock
inc
movsl
push
mov
mov
sub
outsl
jns
sahf
jno
dec
mov
mov
pop
imul
mov
lea
mulps
mov
movsl
ja
xchg
mov
cmp
jmp
jl
lcall
push
adcb
lds
divb
xchg
andb
push
xor
adc
int3
and
test
jmp
jb
les
aam
pop
lods
call
push
adc
jg
xor
loop
push
popf
or
les
xor
and
andb
mov
pop
inc
fs
enter
sub
mov
dec
sti
orl
mov
pop
fsubrl
push
cmp
aas
xor
mov
jmp
test
adc
mov
cld
mov
pop
push
jns
fdiv
push
sub
dec
adc
mov
xor
push
sbbb
cwtl
inc
cmpsb
push
mov
push
mov
in
xchg
jmp
push
sbb
and
sarb
cs
push
mov
pop
jle
xor
aas
mov
xor
mov
and
xlat
push
aaa
outsl
dec
das
jmp
xlat
xchg
repz
mov
movsw
lock
pop
pop
push
jmp
push
push
dec
sub
ljmp
or
cmp
mov
xchg
fsubs
mov
add
mov
adc
add
xor
outsl
push
test
mov
fsts
hlt
out
loop
or
mov
adc
test
inc
jg
xchg
push
jne
movsb
aas
mull
jg
inc
and
lds
push
pop
inc
shll
and
pop
enter
nop
inc
and
mov
xchg
jmp
xchg
stos
push
gs
rorl
popf
lock
cli
pop
movsb
mov
inc
and
cwtl
mov
push
jmp
sbb
test
and
scas
mov
push
adc
mov
sub
jp
mov
add
jecxz
pop
adc
nop
pop
or
aas
xor
sbb
fstps
xor
stc
inc
cwtl
push
adc
jnp
jmp
push
je
push
mov
shlb
push
inc
in
push
sbb
call
push
stos
sub
push
movsb
inc
dec
inc
adc
xchg
adc
push
test
pop
fisubs
lock
inc
out
xor
les
mov
mov
mov
push
pop
xchg
adc
ds
insb
inc
cli
inc
cmp
mov
enter
aad
and
popa
push
cltd
lret
sbb
mov
xor
test
or
jle
inc
jg
or
push
and
and
out
cli
fs
xchg
jmp
jge
andl
add
mov
adc
leave
scas
rol
inc
fcoml
jne
sub
pop
mov
and
or
into
bound
or
and
insl
stos
mov
adc
jle
cwtl
lods
mov
xlat
dec
clc
inc
pop
imul
xchg
jns
fwait
jmp
mov
push
repnz
add
jmp
adc
push
adc
dec
sub
xor
adcb
xchg
xchg
jnp
push
and
adc
hlt
push
nop
jge
testb
sbb
adc
or
push
and
leave
mov
dec
enter
pop
add
xchg
cmc
xor
sub
mov
push
call
mov
mov
idivl
add
and
pop
stos
test
push
mov
test
xchg
insb
clc
xchg
xchg
test
and
jge
rorb
cmp
movl
and
fnstenv
gs
mov
mov
lea
mov
cmc
add
mov
sbb
stc
push
outsl
lret
mulb
pop
or
push
or
add
cmp
aaa
jne
sub
imul
loope
inc
dec
push
lea
cmp
add
lods
mov
lods
mov
or
and
xchg
pop
mov
mov
addr16
int3
and
push
and
lcall
stc
lds
cld
cld
mov
pop
inc
ss
call
push
sbb
xor
popa
pop
jle
xor
je
or
dec
push
xchg
cmp
or
ret
xorb
lret
cmp
sub
dec
or
xlat
sbb
fwait
push
jbe
push
inc
gs
ret
adc
cli
or
test
dec
sti
mov
or
leave
mov
andb
or
push
cwtl
xor
lret
es
aas
adcb
test
mov
notb
xchg
push
test
jno
movsb
mov
or
xor
cmc
or
jbe
push
scas
ret
adc
sub
or
test
test
sbb
inc
sti
mov
sbb
inc
push
push
xor
pop
nop
mov
addl
mov
in
jne
cwtl
add
dec
sti
and
stos
dec
imul
jne
notb
movsl
pop
mov
pop
pop
sbb
push
jbe
mov
adc
popf
test
cwtl
fs
mov
inc
mov
shld
push
dec
lret
dec
push
and
fildll
mov
mov
mov
mov
scas
nop
mov
mov
test
cli
and
push
xchg
sbb
inc
dec
or
xchg
xchg
xchg
call
inc
int
je
out
and
mov
cli
test
or
adc
bound
inc
fldt
mov
inc
jmp
adc
or
or
push
ret
dec
add
rclb
scas
and
push
je
imul
cld
insb
jae
je
daa
push
aad
or
rcrl
out
fldcw
js
scas
pusha
cmpb
sbb
and
mov
push
lock
sub
dec
stc
adc
jne
daa
or
mov
fdiv
shrb
mov
into
pop
mov
enter
inc
mov
add
pop
push
fdivs
in
push
and
dec
and
inc
in
jno
adc
sub
adc
inc
fsubl
andw
xchg
ret
fisubrs
jne
rcrl
inc
stos
dec
fsubr
dec
cmpsb
flds
and
pop
insl
dec
iret
lea
imul
cmpsl
test
mov
sub
call
lret
xor
test
divb
jo
pop
mov
sbb
xchg
mov
cmp
xor
stos
add
xchg
cmp
pop
add
push
jno
testl
sbb
push
clc
dec
adc
in
adc
dec
pushf
leave
jbe
xchg
adc
inc
or
lea
sbb
jmp
test
jg
pop
shrb
sbb
xor
fucomp
sub
pop
add
and
mov
sbb
adc
test
jg
sub
adc
iret
mov
pop
or
or
push
cmp
xchg
mov
or
sub
ljmp
xchg
mov
lcall
dec
es
lods
dec
push
lcall
in
dec
sub
cs
stos
and
xchg
jp
gs
ds
jmp
sub
or
fsubrs
mov
jp
sbb
movsl
push
cli
adc
inc
add
ficoms
adc
bound
fmuls
mov
xor
inc
cmp
jae
or
jb
jne
subb
std
bound
sahf
xchg
jle
decb
pusha
test
sub
out
xchg
out
stc
loopne
sbb
xchg
sbb
jb
mov
push
mov
push
mov
sar
rcll
int
mov
push
imul
nop
shrl
dec
sub
xorps
das
or
faddl
inc
add
sub
pop
cmpsb
inc
sbb
mov
push
adc
inc
cld
mov
sti
or
jae
jl
cld
mov
cmp
and
mov
out
cmp
icebp
push
cld
or
es
sti
jp
push
adc
subb
sbb
xor
enter
or
mov
mov
loope
test
roll
call
sub
fdivrl
test
ucomiss
and
enter
dec
push
pop
jnp
and
adc
push
adc
bound
pop
dec
dec
mov
sub
inc
out
jne
push
adc
int
ret
or
sub
addb
pushf
outsl
xor
fsubl
test
arpl
mov
loop
or
inc
and
insl
insl
add
sbb
les
jl
lahf
adc
pop
mov
mov
xchg
mov
movsb
mov
popa
mov
mov
inc
outsb
mov
dec
lret
fadd
adc
aas
sbb
push
sar
movsb
lods
push
and
loopne
adc
orb
add
adc
cmp
or
std
les
inc
xchg
push
popa
mov
add
rolb
scas
push
bound
xchg
inc
adc
subl
mov
cli
mov
pop
mov
cmp
cmpsl
aas
out
jo
and
subb
outsl
dec
sub
jno
mov
loopne
dec
int3
push
iret
dec
test
rolb
push
pop
jmp
enter
pop
pop
mov
sarl
enter
test
cwtl
jb
adc
stos
jmp
icebp
int
push
sbb
cmpsl
push
xchg
in
push
rcrb
imul
adc
insl
sub
negl
inc
mov
pop
jns
mov
hlt
cld
xchg
int
add
pop
or
cmpb
xor
and
cld
xchg
js
inc
mov
es
out
cwtl
inc
je
rol
addr16
xchg
or
push
or
out
or
xchg
imul
and
jno
jo
test
sub
inc
or
aaa
pop
or
das
and
push
sub
sbb
xchg
in
test
pop
mov
je
sbb
andb
arpl
je
dec
and
das
jmp
aaa
leave
inc
cwtl
ret
out
addr16
mov
push
jno
mov
mov
adc
dec
inc
or
push
jecxz
sbb
mov
test
lock
movsb
dec
test
mov
sbb
jo
imul
loop
jg
cwtl
xor
add
pop
dec
lods
add
imul
cmp
cmpsb
jge
xchg
push
loopne
push
push
add
pop
lea
scas
shl
sbb
out
lds
es
jnp
mov
enter
pop
jnp
xor
ret
inc
sbb
mov
les
into
sbb
shr
add
and
iret
test
movsl
scas
cmc
xchg
xor
cmp
adcl
inc
jmp
addr16
rorb
mov
xchg
dec
push
imul
inc
dec
test
cmp
adc
xchg
das
leave
pop
lea
js
mov
fs
adc
test
pop
and
push
call
xor
and
push
test
xor
and
sub
push
mov
das
push
test
arpl
add
mov
mov
sbb
dec
push
xchg
adc
and
or
insl
mov
insl
aam
and
pop
ja
mov
fs
ret
xorb
jnp
cwtl
xchg
mov
lods
dec
pop
push
mov
adc
shlb
sub
cmp
push
push
iret
push
mov
ficoms
loope
in
dec
adc
call
bound
push
sub
scas
adcb
shl
cmpsb
pop
push
push
add
xor
aam
call
icebp
push
dec
mov
pop
clc
shrl
sbb
sub
testb
ss
fmull
js
jb
mov
adc
jo
push
bound
sbb
or
push
stc
out
cltd
mov
adc
or
inc
outsl
add
jg
fistps
jnp
testb
dec
cmp
add
sbb
cmpsb
mov
push
jp
jo
std
xchg
or
je
push
movsl
leave
xor
push
cmc
orb
icebp
je
mov
js
pop
pop
in
cmp
or
in
popa
call
adc
cmpsb
dec
adc
push
mov
mov
inc
xor
movsb
xchg
testb
out
xchg
popa
push
dec
sub
loope
gs
mov
add
push
sbb
inc
js
dec
mov
addb
movl
out
push
jmp
cmp
sarl
push
sub
test
push
jbe
and
movsb
popf
mov
mov
adcb
sub
mov
call
fs
and
sub
sahf
fs
xor
xor
sbb
inc
mov
scas
fisubl
filds
dec
adc
bound
inc
mov
mov
test
fldcw
clc
aaa
or
mov
test
iret
push
subb
jmp
popa
hlt
add
je
adc
jge
xor
xchg
or
movsb
psubsb
bound
jno
ficoml
frstor
mov
es
les
xor
aam
mov
pop
test
mov
call
enter
inc
inc
xor
jg
out
test
push
daa
pop
jmp
mov
sub
cmp
jecxz
dec
scas
lock
inc
lcall
nop
enter
push
imulb
sbb
adc
jp
jmp
mov
cld
lahf
sub
in
mov
xor
inc
pop
je
clc
sub
push
jae
push
pop
or
shll
sbb
xor
and
stos
sbb
push
cmp
rolb
sti
shr
lahf
mov
and
inc
adc
outsl
and
adc
mov
adc
arpl
mov
ja
ret
lahf
popa
shl
leave
or
sarl
xchg
mov
xchg
jmp
or
sbb
idiv
sbb
and
out
dec
adc
push
add
jb
dec
xchg
mov
nop
daa
cmpb
out
xchg
sub
in
inc
scas
xchg
xchg
or
pop
or
and
es
inc
lds
and
fildll
dec
push
int3
mov
add
pushf
lds
mov
jne
adc
sbb
mov
pop
lret
lahf
cld
pop
pop
pop
xor
and
push
jp
stos
xor
andb
cld
dec
testl
pop
add
inc
or
cmp
mov
das
fiadds
movsl
sub
sub
push
dec
add
nop
pop
push
test
std
dec
fiadds
push
push
call
pop
sub
ss
icebp
insl
mov
cmp
jne
push
jmp
fdivl
leave
mov
cmp
test
shr
scas
les
lods
sub
addr16
sbb
sar
jp
popf
or
outsb
cli
push
fisubl
push
ja
dec
xchg
sti
loope
notb
and
in
sbb
adc
dec
add
enter
push
ja
stos
jmp
in
hlt
mov
and
sub
lahf
push
andl
jne
and
pop
addl
in
and
mov
aad
push
fsubrs
cld
fwait
mov
sub
clc
inc
bound
int3
sbb
inc
je
or
xor
or
xor
out
jp
push
cmp
call
mov
outsb
jmp
out
addr16
and
push
mov
xchg
mov
cmp
mov
and
inc
pop
out
iret
and
adc
cli
and
adc
lock
cs
and
mov
pop
pop
call
and
test
inc
cld
adc
push
je
shlb
dec
mov
test
or
mov
ljmp
sbb
mov
add
mov
or
and
push
mov
xchg
mov
add
fistl
ret
or
dec
push
lods
mov
clc
xchg
daa
inc
addr16
inc
lea
jo
mov
call
gs
adc
into
das
sub
out
push
mov
dec
cmp
push
adc
std
dec
cltd
fsubrl
lret
add
pop
pop
lock
pusha
cmc
ret
orb
repnz
into
test
cmp
je
dec
push
sbb
xor
nop
adc
pop
cld
lret
sbb
sti
fidivs
psubw
and
fdivs
cmp
outsb
push
sbb
cli
xchg
sbb
lret
mov
es
or
subl
das
mov
and
mov
add
push
jbe
and
and
test
add
inc
add
mov
sub
or
jb
push
insl
loop
incb
push
add
incb
jp
mov
lahf
fdivrp
dec
std
in
cmp
leave
cld
jmp
in
outsb
arpl
push
jne
or
or
shlb
push
fnsave
mov
pop
push
dec
mov
sahf
xchg
enter
lcall
shr
mov
ds
jl
cmp
mov
cmp
adc
je
adc
push
test
xor
sbb
je
imulb
add
adc
dec
daa
scas
adc
push
push
push
popf
imul
mov
push
adc
mov
or
pop
push
adcl
jo
add
je
adc
pop
hlt
pop
mov
push
ds
pushf
mov
xchg
pop
or
je
xor
or
movsl
inc
add
cmp
bound
or
dec
imul
gs
sbb
dec
and
adc
fdivrs
mov
rorb
inc
sbb
les
xchg
dec
push
sub
jg
repz
push
mov
aas
clc
mov
xchg
loop
sahf
mov
xor
jge
sub
mov
stos
movb
mov
push
mov
sbb
mov
cwtl
and
movsbl
sub
mov
cmp
xchg
das
mov
push
call
sub
rolb
insb
push
and
adc
cli
enter
sub
jmp
nop
cmpsb
mov
or
clc
add
out
mov
pop
je
decl
jp
pop
or
daa
jle
push
add
fstps
xchg
or
je
inc
mov
mov
js
push
pop
and
fsubr
push
decl
lahf
mov
mov
call
xor
enter
xor
jmp
daa
cmp
xor
ret
nop
dec
sub
mov
mov
lods
inc
dec
clc
enter
shr
add
jne
movl
mov
sbb
mov
adc
popa
out
sub
aad
aas
push
push
sub
dec
movsl
negl
and
shr
fnstcw
mov
push
jp
fwait
inc
adc
in
stc
mov
leave
inc
push
push
pushf
andl
std
adc
fstpt
das
push
mov
call
ljmp
ljmp
jmp
out
xor
cmp
sub
adc
pop
xchg
or
sbb
inc
lahf
xchg
and
mov
push
pop
loopne
fstpl
test
lock
jnp
call
adc
orl
pop
rol
mov
popa
xchg
push
and
in
dec
in
daa
or
xlat
stos
mov
mov
stc
dec
sbb
imul
in
push
out
lret
sar
dec
cmp
in
dec
lret
repz
push
ds
ljmp
enter
in
movsb
and
ss
inc
add
jmp
jno
or
lds
mov
fldcw
push
aad
dec
dec
hlt
sub
xchg
repnz
push
mov
andl
mov
push
push
and
sub
pop
sbb
push
das
clc
mov
sbb
or
in
mov
jecxz
das
fs
push
or
push
fsts
mov
mov
fbld
rcrb
adc
ret
dec
fucom
aaa
xor
fwait
adc
mov
enter
and
mov
enter
pop
and
aam
jmp
and
inc
roll
mov
rolb
call
int3
mov
and
aam
sub
sub
adc
or
cmc
inc
xchg
dec
push
scas
cmp
push
sub
lret
xlat
mov
xor
adc
call
in
and
and
mov
fiadds
in
pusha
mov
cld
scas
in
mov
pusha
adc
adc
xchg
inc
or
dec
fstpl
sub
add
mov
fldcw
adc
cmpsl
push
mov
outsl
add
sbb
out
mov
lret
pusha
jle
std
mov
jno
mov
xlat
mov
ficoml
int3
cltd
fsubp
or
jmp
ljmp
leave
xor
loopne
je
cmpl
int
test
jmp
mov
gs
adc
rolb
or
inc
jns
inc
cmp
jb
jne
xchg
cmp
mov
jmp
mov
andl
push
sbb
xchg
out
sub
call
lcall
xchg
dec
xor
xor
insb
jmp
jmp
inc
dec
jecxz
push
fs
xor
push
jmp
push
stc
std
popa
hlt
xor
adc
or
and
push
push
jl
lock
xlat
and
fisttpl
or
mov
mov
lcall
or
push
adc
mov
sub
cmp
mov
imul
mov
or
ret
jb
sub
pop
or
repz
mov
xchg
sub
lret
push
int3
int3
pushf
aam
mov
mov
mov
add
mov
mov
mov
mov
jle
insb
addl
mov
clc
test
dec
or
adc
push
xlat
cmc
bound
imul
je
add
push
sbb
scas
dec
dec
jmp
repnz
daa
cld
aam
mov
clc
lea
inc
in
popl
bound
rclb
add
cmp
mov
imul
test
mov
dec
sbb
dec
cmp
inc
inc
std
pop
sub
pop
cmp
xchg
jno
ret
stos
outsb
popa
dec
adc
testl
and
push
inc
inc
dec
or
or
repnz
clc
fwait
testb
push
add
adc
mov
test
sub
adc
lcall
movsl
movsb
cmp
in
pop
arpl
inc
add
mov
movsb
test
dec
jl
pop
loope
lock
xchg
cmp
ss
mov
sbb
int3
dec
insb
out
pop
cmp
out
xchg
push
sbb
enter
push
xor
cltd
mov
mov
add
xor
dec
call
adc
call
test
das
popf
fsubp
les
pop
inc
push
loop
sub
pop
dec
jg
shlb
fmull
inc
pushf
cmp
xchg
cwtl
xor
repz
pushf
mov
pop
sub
outsb
cmpsl
nop
mov
lahf
inc
mov
mov
in
call
cmp
shrb
daa
sahf
aad
cmp
cli
orl
enter
and
jecxz
pop
pushf
push
es
enter
cmp
cmp
xchg
and
jmp
or
mov
xor
daa
adc
xchg
loope
jl
and
loop
das
adc
push
push
scas
inc
inc
push
and
push
ficoml
test
lret
js
call
inc
fdivrl
or
add
or
sbb
sub
inc
xor
push
daa
jmp
fbld
lock
sub
adc
mov
pusha
cmpl
push
lods
xchg
xchg
xchg
push
popf
jle
imul
jno
imul
adc
mov
sti
movsb
sub
mov
push
xor
push
dec
push
sub
sbb
add
loop
lret
adc
in
mov
call
inc
clc
jmp
xchg
out
dec
dec
or
aam
out
gs
cmpsl
dec
push
mov
fmulp
adc
daa
je
xchg
fsubs
call
xor
dec
dec
adc
pop
stos
sub
xchg
or
sub
mul
and
enter
or
rorl
sub
loop
or
cltd
mov
lods
cmp
in
sbb
push
jmp
test
aam
cmp
add
daa
jl
jle
lret
push
add
fsubrl
jg
popa
sbb
movb
pop
push
jge
dec
jmp
pop
dec
outsl
dec
mov
adc
dec
dec
stos
std
cmp
repnz
push
push
push
in
dec
jmp
lret
cmp
jle
sbb
push
push
and
cwtl
jge
push
imul
inc
push
cmp
jl
fidivrl
push
bound
pop
mov
mov
push
enter
rcl
mov
xor
mov
call
or
inc
iret
adc
inc
cmp
cmp
pop
cli
sub
push
dec
pop
jmp
ret
or
pop
imul
push
cmp
xchg
dec
jmp
test
test
inc
das
adc
mov
or
jo
inc
mov
push
mov
or
push
xor
and
sub
sti
inc
xchg
pop
jo
andl
loopne
xlat
repz
jns
adc
loopne
test
jge
mov
push
loope
sbb
cmp
add
push
cmp
js
or
xor
je
xor
ds
jo
sbb
insb
and
jnp
pushw
scas
inc
fs
jl
push
pop
pop
sarl
cmp
and
add
dec
pusha
daa
sbb
icebp
cmpsl
dec
add
or
add
adc
push
inc
sbb
mov
fwait
cli
mov
inc
test
imul
jmp
and
inc
inc
decl
dec
pop
ljmp
sbb
sbb
aaa
and
push
push
loop
sbb
cmpsb
adc
adc
add
xchg
in
repz
enter
icebp
mov
xor
dec
or
and
jne,pn
sbbl
fs
inc
cmp
ret
dec
mov
adc
je
lea
pop
push
ret
sbb
mov
adc
sbb
mov
into
movsb
adc
mov
insb
dec
xchg
shll
push
je
push
pop
xchg
fs
faddl
dec
fsts
lds
dec
cwtl
push
push
mov
jp
xchg
inc
ss
add
and
call
add
mov
lds
xchg
pop
std
in
cmp
push
mov
inc
shl
aas
cld
mov
pop
movl
pop
push
into
inc
dec
fmuls
pop
cli
push
dec
fisubrs
fcoms
push
mov
push
mov
push
dec
push
xor
cmp
addb
inc
pop
jmp
xchg
pushf
add
cmp
fcomi
daa
int3
jl
fwait
repnz
mov
mov
pop
pushf
bound
ja
inc
xchg
je
jmp
lahf
and
test
pop
shlb
sti
shrb
add
dec
es
cs
mov
mov
imull
and
pop
int3
fidivs
shlb
clc
sbb
imul
jno
leave
iret
imul
vmovlps
daa
push
sbb
adc
lcall
sub
aas
movsb
xor
push
pop
mov
aas
and
inc
fmuls
lods
daa
inc
inc
fmuls
movsb
imul
mov
nop
cmp
roll
sbb
push
push
jp
lods
inc
cmpsl
hlt
and
sub
cmp
xor
and
in
and
push
xchg
push
scas
mov
call
pop
adc
pusha
pop
jle
dec
mov
stos
in
repnz
inc
push
or
and
mov
rorl
inc
pop
int3
inc
adc
push
mov
or
and
pop
jb
jmp
push
xor
dec
inc
stos
add
addb
push
rclb
cmpl
and
jne
push
xor
jae
pop
or
je
cltd
and
dec
nop
and
dec
loope
inc
or
in
jge
pop
ficoms
sub
add
stos
loop
xchg
stos
fdivrs
inc
adc
test
aas
and
push
mov
imul
scas
jne
inc
mov
loope
inc
sbb
daa
and
into
dec
push
ret
daa
rcll
mov
inc
push
loop
xor
xchg
test
dec
ds
loopne
sub
adc
fsub
xchg
xor
data16
mov
lods
sub
das
loop
adc
shrb
cmp
insb
cmovb
mov
push
fisubrl
enter
pop
imulb
hlt
sub
jmp
call
leave
push
cli
inc
loopne
jl
sbb
push
mov
sbb
pop
sub
notb
add
gs
ret
js
les
test
int3
push
add
mov
mov
push
imul
pop
xchg
shlb
and
sub
fistps
add
jne
psrlq
das
jle
aas
mov
push
mov
enter
bound
or
insl
or
xor
sub
or
cmp
lds
dec
dec
sbb
sbb
icebp
out
push
sbb
ss
arpl
xchg
or
add
and
mov
lds
loop
ja
or
int
xor
insb
mov
push
gs
add
cld
xchg
push
jmp
cmp
jb
imul
inc
mov
popf
or
sub
or
ret
push
gs
or
mov
mov
lods
push
inc
mov
add
or
push
fmull
arpl
dec
aam
mov
in
xchg
push
mov
bound
push
in
pop
mov
dec
hlt
ret
hlt
mov
mov
jmp
push
push
loop
insl
and
or
cld
nop
outsb
jbe
pop
sub
mov
dec
inc
sbb
insb
cltd
adc
dec
fistl
rcl
and
cmp
jbe
mov
pop
cmp
jne
push
cli
or
test
mov
or
inc
cmp
jne
mov
jb
notb
or
jns
jle
push
pop
jl
repnz
adc
aaa
dec
shll
out
mov
stc
xor
push
inc
push
mov
adc
sub
push
decb
pushf
fsubl
mov
cmc
cltd
dec
xchg
sub
loop
js
jbe
decl
lret
mov
adc
adcl
sbb
je
push
je
jnp
cwtl
cmc
pop
or
jmp
out
pop
cwtl
push
mov
inc
xor
insl
pop
add
outsl
inc
jo
add
push
jmp
xor
leave
mov
inc
push
inc
cmp
xor
int
or
inc
and
and
es
jge
mov
adc
rcrb
insb
pop
imulb
push
xchg
les
xor
pop
pusha
mov
jg
cwtl
cmp
je
mov
shrb
or
add
int3
or
fs
repnz
push
jg
pop
in
push
adc
push
adc
shlb
daa
push
adc
clc
xor
pop
mov
incl
jmp
mov
ds
add
cmp
mov
mov
sub
mov
dec
outsb
add
cltd
xchg
adc
bound
adc
call
jmp
sub
clc
fidivl
jae
fsubl
inc
mov
sbb
cmpl
mov
push
sub
test
pop
and
clc
aas
adc
daa
pop
lods
ljmp
add
push
call
add
and
dec
or
adc
inc
mov
fidivl
cmp
adc
repnz
insb
jecxz
inc
std
leave
xchg
push
cmp
push
pop
in
xor
clc
or
pop
inc
das
dec
int3
or
inc
icebp
jns
sbb
ret
pop
outsl
or
jns
bound
mov
loopne
xchg
inc
in
or
or
pop
jbe
sub
dec
andl
jecxz
adc
in
or
sub
imul
or
or
push
add
icebp
sub
ret
je
dec
insl
sub
cli
mov
mov
dec
daa
enter
rorb
dec
push
cltd
xlat
or
inc
or
sub
xchg
xor
imul
sbb
or
or
cli
divl
mov
pop
mov
inc
pop
cmc
mov
clc
loope
daa
stos
iret
insl
jl
inc
mov
movsl
xlat
sbb
cmp
jp
repnz
ficomps
aam
and
push
push
shlb
test
stos
into
icebp
dec
jp,pn
dec
add
adc
aam
in
iret
and
vmovlps
adc
adc
push
push
out
shlb
adc
lret
insb
lea
jnp
sbb
jb
ret
or
sbb
add
and
mov
sub
sub
mov
mov
shll
adc
jle
xor
add
pop
mov
les
or
inc
mov
mov
xchg
cli
sahf
adc
stos
adc
push
sti
or
push
or
and
or
fildl
inc
mov
sbb
add
or
je
jmp
pop
add
add
call
dec
adc
pop
cmp
dec
nop
popl
inc
and
test
mov
clc
or
xor
lret
xchg
xchg
add
and
ret
lcall
or
mov
sbbl
ret
loop
xor
cltd
iret
push
loopne
mov
sbb
mov
les
pop
mov
pop
jbe
jl
or
lock
mov
xor
ret
push
inc
cmp
jb
and
pop
dec
les
loop
add
dec
adcl
rcl
mov
jmp
push
xor
mov
mov
cmp
fstps
repz
xor
ret
mov
cwtl
std
sahf
dec
repz
icebp
aaa
sub
and
pop
pop
test
adc
mov
dec
mov
cld
outsl
movsb
in
add
adc
dec
jmp
aaa
or
mov
test
push
fisubrl
decl
push
sub
mov
je
out
imul
lcall
sub
pop
movsl
pop
sbb
dec
jb
or
fsubrs
mov
mov
jns
or
jne
push
push
fadds
in
adc
repnz
inc
mov
inc
pop
divl
push
adc
mov
cli
or
addb
cli
push
inc
or
jmp
or
stos
sub
and
mov
sbb
add
push
je
mov
test
pop
sub
out
xchg
inc
dec
repz
lds
mov
dec
cmpsb
ror
adc
jno
orl
repz
ret
xlat
shl
and
adc
popf
inc
outsl
movb
pop
test
or
test
mov
fmull
and
mov
fistpl
sbb
sbb
jp
ss
jo
push
jmp
mov
push
shl
pop
dec
pop
push
movsl
sar
inc
jne
mov
cld
outsb
sub
inc
mov
pop
jmp
push
dec
adc
or
call
adc
mov
insb
push
push
stos
mov
pop
fcomps
out
inc
xor
fildl
mov
cwtl
dec
test
enter
jno
cmp
mov
mov
int3
jne
mov
jbe
les
pusha
rcll
adc
ds
add
jecxz
push
mov
pop
popf
jbe
ret
adc
das
test
adc
jne
ja
push
xlat
dec
jno
stos
movsb
xchg
xor
dec
addr16
mov
fldcw
mov
dec
cmp
push
xchg
push
test
and
sbb
adc
push
adc
rcrb
je
orb
xchg
inc
cwtl
inc
jl
mov
cli
clc
push
sub
dec
cmp
xor
in
pop
adc
cmp
jmp
popf
mov
nop
scas
or
inc
xor
xor
xchg
pop
rclb
adc
mov
xchg
jnp
insl
adc
hlt
xchg
mov
or
sub
or
mul
lock
or
pop
nop
push
push
mov
test
lods
xor
jbe
inc
inc
jo
in
push
push
insb
ror
and
and
push
sbb
add
outsb
fsubrp
mov
test
add
fbstp
fs
push
call
lret
es
xor
pop
ja
jb
andl
stc
inc
adc
or
inc
xchg
inc
mov
inc
aaa
dec
xor
sub
es
bound
adc
adc
xor
or
dec
jae
pop
push
sub
add
roll
ret
pop
adc
pop
dec
pop
and
loop
push
inc
dec
iret
sub
push
dec
mov
add
mov
lods
ljmp
dec
mov
jge
add
jl
bound
lods
or
mov
outsb
and
inc
aas
pop
pop
mov
aaa
xchg
add
and
and
adc
add
sbb
shlb
pop
mov
jmp
jmp
and
jno
lret
jo
loope
adc
mov
pushw
mov
xor
dec
inc
push
or
mov
cmpsb
fs
pop
je
push
xchg
pop
push
sub
int
sub
in
out
pop
mov
pop
push
inc
je
dec
xor
sub
and
push
adc
popa
test
sti
or
push
push
pop
cli
daa
push
daa
fnstcw
adc
push
sub
stos
mov
pusha
pop
cmp
popa
das
icebp
push
cmp
sub
loop
pop
call
adc
clc
or
mov
cs
test
call
push
cmpsb
arpl
mov
push
insb
mov
mov
jne
insb
adc
push
test
insb
push
cld
push
lret
add
push
in
and
xor
inc
xor
sbb
add
push
pusha
js
call
mov
adc
xchg
sbb
and
daa
cmp
sub
jne
inc
mov
pusha
xchg
sub
pop
bound
and
sub
sub
cmc
add
or
aam
jmp
sti
mov
pop
or
adc
jg
adc
pop
lcall
fs
insb
jno
pop
je
pusha
sub
mov
mov
repnz
mov
inc
idivb
in
xchg
add
xchg
add
lcall
sahf
sbb
or
test
or
test
or
test
or
test
pop
and
pop
or
inc
pop
adc
pop
test
pop
and
pop
or
inc
pusha
adc
popa
test
bound
shlb
aam
fs
gs
fcoms
fisubl
fsubrl
fiadds
adc
push
loop
and
insb
or
inc
insl
pop
lds
ljmp
out
jno
lock
repnz
jae
hlt
je
divb
clc
jbe
cli
inc
ja
cld
js
jns
add
and
jnp
add
jl
push
jge
or
or
or
lods
adc
scas
test
scas
and
mov
adc
mov
push
mov
sbb
sbb
mov
push
mov
and
and
mov
sub
sub
mov
xor
and
loopne
xor
loope
ss
cmp
and
in
cmp
in
ds
inc
out
inc
call
adc
test
and
or
adc
test
and
or
adc
test
and
or
adc
test
and
or
jg
cli
adc
test
and
outsb
inc
sbb
incl
mov
dec
jl
fildl
inc
cmp
jb
xor
popf
adc
pusha
mov
jp
das
mov
repz
cmp
repnz
push
adc
ljmp
pop
mov
sub
repz
shll
pop
adc
ja
cmc
ret
loopne
add
add
sub
mov
and
addl
push
pop
stos
leave
push
cmp
jno
hlt
xor
je
movsb
push
lods
cmp
aad
and
adc
stos
fst
pusha
mov
inc
sub
push
xchg
add
pop
or
jne
jmp
and
adc
es
stos
hlt
adc
iret
dec
mov
add
lret
push
inc
sbb
adc
incl
orl
add
test
push
out
out
adc
loope
ljmp
jnp
xchg
add
nop
test
jge
sub
js
aad
xchg
call
sbb
mov
and
cmp
cmpsl
inc
mov
mov
lea
lret
jecxz,pt
jne
sbb
jge
sbb
push
enter
push
xchg
pusha
or
ja
mov
and
add
push
call
addb
xchg
aam
or
std
xchg
adc
cld
cmp
mov
pusha
and
je
call
jle
push
paddsb
xor
cmp
scas
scas
and
mov
inc
push
add
outsb
subb
call
inc
insb
out
push
jno
cs
push
add
shr
sti
popf
lret
pop
mov
imul
aas
rorl
mov
jle
xchg
cltd
mov
adc
xchg
mov
loop
xor
jl
mov
dec
mov
add
or
xor
xor
cmp
adc
sbb
and
loopne
js
and
sub
xchg
push
mov
and
lds
cld
inc
push
mov
adc
jmp
and
popa
or
js
adc
mov
out
adc
pop
sbb
jmp
nop
insb
enter
in
xchg
adc
movsb
jmp
pop
push
or
sbb
inc
inc
insl
or
xor
hlt
or
push
inc
shrb
cli
nop
mov
fmull
or
sbb
cld
push
andb
rcrb
or
call
test
stos
adc
push
pop
test
aas
jne
lret
xlat
cmp
lret
and
je
xchg
shll
inc
sbb
ret
andb
dec
cmp
lret
arpl
pushl
int3
adc
adc
push
jl
xor
loop
cmp
mov
adc
pop
jo
and
push
jne
mov
or
inc
and
cmp
sub
inc
stos
pop
out
xor
pop
lcall
push
stos
mov
stos
out
pop
imul
out
and
cmp
sbb
push
mov
stos
push
aam
pop
cmp
data16
and
mov
jg
hlt
shrb
sar
and
stos
stc
inc
out
jmp
daa
les
in
adc
pop
mov
xor
xor
ret
addr16
pop
adc
pop
or
xchg
xor
sub
fisttps
cmp
push
lods
movsl
fdivl
hlt
inc
clc
mov
jae
sbb
test
out
mov
sbb
adc
inc
inc
add
cmp
sbb
or
inc
push
jmp
test
cs
or
call
xor
xchg
les
jge
xor
or
lcall
scas
push
fimull
cli
sahf
addr16
push
sbb
shrl
loope
and
bound
and
popf
ljmp
outsb
adc
ret
xor
pop
mov
and
adcb
cmp
notl
loopne
pushf
call
hlt
push
out
xor
xchg
add
daa
shr
push
lods
mov
inc
xor
jbe
xchg
add
mov
and
cmc
icebp
cmp
decl
push
or
lcall
mov
and
lahf
gs
sbb
push
pop
or
pop
pushf
or
push
dec
push
mov
cmpb
int3
pop
mov
push
insl
mov
pusha
cmpsb
adc
lea
aam
adc
or
pop
inc
iret
insb
mov
addr16
and
les
insb
call
mov
shl
add
loop
movb
or
mov
call
imul
adc
and
xchg
cmpsl
dec
pop
jo
xchg
fldenv
adc
mov
dec
push
mov
dec
mov
les
movsl
push
inc
stos
gs
rorl
mov
ljmp
repz
adc
mov
mov
sbbl
mov
inc
insb
in
jne
or
shlb
es
imul
jl
jp
push
lea
flds
mov
inc
scas
sbb
adc
pop
js
movsb
cmp
outsl
cmp
add
and
scas
fstl
push
fs
cmp
test
clc
jb
jmp
out
or
in
jb
cld
pop
movsl
xchg
ficomps
and
and
pop
jne
sbb
out
mov
js
push
xchg
inc
sti
loop
xchg
add
jle
mov
js
je
add
mov
add
imull
loope
pop
and
daa
xchg
mov
andl
push
inc
pop
mov
cmp
leave
xor
mov
dec
adc
and
out
pop
dec
out
lret
enter
jecxz
iret
test
cmp
or
xchg
in
jbe
ss
sub
mov
xchg
out
and
lret
dec
lret
mov
fisubrs
sbb
xor
sub
xchg
ss
aam
jge
loope
stos
or
mov
jnp
idivl
pop
je
add
jb
inc
and
sahf
fistpl
pop
xchg
mov
and
inc
sub
push
aam
push
lea
xorl
adc
test
mov
pop
pop
ret
std
shl
and
inc
or
bound
test
inc
mov
dec
shrb
jno
mov
add
inc
or
test
jle
cmp
je,pt
adc
push
sbb
add
cmp
nop
iret
mov
xor
adc
push
and
add
rcrl
sbb
aas
xchg
shrb
cmp
mov
adc
pop
ret
mov
dec
sbb
shlb
and
or
push
mov
fidivrs
cltd
jle
pop
sbb
pushf
jne
xorl
inc
sbb
cld
jae
cmp
pop
cmp
test
leave
jmp
inc
js
fs
iret
xor
or
enter
xor
pop
mov
inc
ret
mov
fs
xor
outsl
pusha
jne
cli
sub
adc
inc
sbb
outsl
loope
clc
loop
lock
dec
addr16
mov
pop
dec
pusha
pop
lea
mov
xchg
in
jnp
fisttpl
in
fsubrs
daa
shrb
mov
call
cmp
push
xchg
jmp
cli
dec
pop
push
add
sub
daa
xchg
out
pop
lock
imul
add
sub
mov
adc
cwtl
sti
inc
mov
adc
int
dec
movsb
cmpsb
pusha
xchg
sbb
push
pop
push
daa
xor
shl
add
nop
add
sub
dec
shr
inc
ret
xchg
hlt
push
mov
test
leave
pop
roll
lcall
fwait
clc
inc
dec
add
mov
inc
dec
cmp
and
inc
pop
js
into
ljmp
cmp
add
fisttpl
decb
mov
fldl
xchg
xchg
mov
mov
ret
jb
lea
mov
lret
ljmp
scas
pop
cli
or
jno
push
mov
aas
std
sti
stc
mov
enter
add
sbb
xchg
jns
xor
sbb
std
fnstcw
sbb
xchg
xchg
nop
pop
stc
inc
int3
lods
push
dec
cmp
sub
push
nop
out
es
sbb
mov
xchg
or
ret
in
cmp
adc
into
cwtl
xchg
jno
mov
xor
adc
mov
jge
sub
adc
xor
insl
mov
cmp
and
mov
cmpsb
dec
popl
xor
das
sbb
stc
push
or
pop
sbb
xor
pop
pop
inc
scas
arpl
push
dec
rorl
enter
and
clc
xor
cmp
clc
mov
pop
les
pusha
mov
cmp
pop
jne
cmp
sbb
jno
ds
repz
cmp
jge
cmp
je
push
movsb
daa
adc
mov
adc
fdivrs
mov
jmp
das
xlat
stos
or
add
inc
enter
gs
sti
inc
jmp
lret
xorb
psubw
fwait
mov
xchg
pop
stos
ss
or
dec
mov
mov
and
je
cmp
push
sub
jp
inc
or
adcl
cmp
lods
adc
pushl
outsl
clc
test
add
mov
adc
test
dec
cmp
and
inc
jae
mov
push
and
pop
sub
adc
cmpb
repnz
adc
mov
xchg
or
pop
dec
pop
out
test
pop
xor
nop
adc
xchg
inc
or
aaa
jne
adc
dec
push
mov
cmp
popf
mov
or
les
mov
push
rcrb
jl
xchg
leave
push
jb
sbb
inc
push
and
inc
mov
or
or
pop
mov
jp
out
adc
ss
mov
sub
rorb
or
and
nop
bnd
dec
int3
addr16
fcomps
xchg
aam
add
jle
sbb
test
or
fstp
sub
mov
jp
cmp
dec
lcall
movsl
add
sahf
push
data16
mov
addr16
rcrb
add
sbb
pushf
test
jmp
aam
addl
stos
sbb
mov
dec
shrl
xor
pop
push
jns
stc
lea
xchg
sbb
push
fcomps
movsb
shrb
mov
push
into
push
test
xlat
stos
adcl
mov
hlt
ljmp
push
xchg
mov
popf
mov
mov
lea
inc
fdiv
push
daa
push
loopne
and
cmpb
mov
push
or
cmp
ljmp
out
inc
in
push
dec
cli
xchg
pop
mov
push
and
push
sbb
and
jae
push
nop
out
and
popf
loopne
jecxz
test
xor
clc
push
xchg
inc
and
es
sub
fdivrl
cs
arpl
das
insb
inc
adc
pop
or
hlt
loop
orb
jmp
xor
push
mov
adcb
call
int
cmp
lahf
xchg
jno
sub
push
adc
sub
sbb
push
inc
dec
subl
in
movsb
mov
dec
ljmp
decl
add
cmp
mov
push
xchg
loope
sub
testb
add
pop
xor
jmp
mov
push
cltd
dec
out
sub
mov
outsl
stc
push
sarb
dec
adc
and
test
or
adc
mov
pop
pop
scas
popl
inc
xchg
push
test
jno
sub
loop
adc
adc
test
sub
mov
jge
inc
and
ret
inc
push
mov
xor
mov
pop
pop
hlt
xchg
lock
clc
dec
push
xor
push
adc
adc
dec
add
lods
xlat
int
mov
les
jl
push
or
cwtl
mov
test
out
fbld
test
xor
push
jl
cmpl
cmp
shl
mov
mov
out
xor
cmp
cltd
aam
mov
mov
adc
test
inc
mov
mov
test
repnz
loopnew
mov
iret
sbb
jp
in
leave
into
push
dec
repnz
pop
push
add
movl
jo
mov
adc
rcr
ss
lock
mov
inc
mov
sub
andb
sub
inc
mov
mov
and
je
push
xor
addr16
in
notl
adc
rorb
sarl
xchg
pop
jmp
cltd
and
sub
mov
sarl
xorl
or
sbb
and
out
push
cwtl
inc
add
mov
lods
push
adc
cmp
imul
shlb
mov
mov
xchg
push
stos
jo
daa
inc
cmpsb
mov
cmp
push
cwtl
and
mov
mov
and
mov
popf
popa
and
dec
mov
xchg
add
xor
or
and
sbb
or
inc
stos
dec
rclb
test
push
in
push
shl
push
xchg
lcall
fmull
and
insb
jmp
push
nop
scas
mov
and
fsubrs
push
adc
jl
adc
imul
and
or
dec
jb
addb
add
in
movsl
pop
dec
fistps
or
cld
xchg
mov
ret
adc
test
clc
out
push
mov
or
shr
pop
movsl
out
jae
rcr
xor
and
mov
test
xor
enter
push
outsb
mov
fcomps
dec
push
mov
lods
divl
repnz
inc
mov
sub
ficoms
mov
cmpsl
daa
les
call
push
jno
inc
jmp
jmp
inc
lret
das
fs
dec
sbb
mov
mov
je
mov
push
addr16
mov
stc
add
aam
mov
in
std
js
pop
and
xchg
popa
push
add
jns
hlt
mov
insb
clc
movsl
xor
or
ja
dec
fisttpl
jb
push
sub
pop
mov
push
or
adc
push
aad
mov
ds
sbb
inc
mov
xchg
adc
push
mov
leave
sub
and
xor
loop
and
adc
enter
loopne
sub
sbb
xor
and
test
and
xor
cld
inc
push
mov
lock
sar
mov
je
cmp
add
dec
and
and
in
je
clc
scas
es
imul
cmp
dec
call
sub
push
adc
popf
pusha
push
out
rorl
clc
push
inc
out
les
sub
les
out
and
inc
xlat
cmp
xchg
lret
mov
nop
add
dec
fwait
mov
and
jne
stos
cmp
in
and
mov
add
sarb
rcrb
aam
dec
shrb
cmpsl
inc
add
dec
xor
sub
divb
inc
fisttpll
jno
cmc
sbb
mov
xor
stos
aas
xor
cmp
push
mov
sub
orb
rolb
push
jno
xchg
xor
pusha
sti
or
xchg
idivl
sub
inc
ret
test
add
dec
test
or
pop
adc
ret
test
cmp
in
adc
xlat
leave
push
dec
andb
mov
mov
jae
in
jbe
test
outsl
inc
jmp
mov
les
jp
and
mov
pop
lds
int3
adc
and
jmp
fs
mov
add
pop
enter
jmp
stc
mov
loop
pop
ljmp
sub
dec
dec
lock
sbb
pop
sub
addl
in
loopne
jne
add
scas
xchg
push
mov
rcrl
sub
fwait
jge
int
ret
lock
and
mov
cmc
and
xchg
ja
repnz
cltd
push
in
jno
push
inc
sti
test
je
sbb
mov
in
jno
jmp
les
push
pop
call
add
pop
dec
aad
inc
fcoms
aam
inc
inc
adc
xor
mov
push
in
hlt
add
dec
les
popfw
rorb
jb
dec
add
pop
fistps
in
cs
sbb
aas
dec
add
in
push
xor
cmp
jmp
das
mov
loop
sbb
dec
call
push
mov
lahf
inc
inc
xor
push
or
jp
in
xchg
rolb
push
xchg
testb
sti
mov
js
dec
push
stos
mov
jmp
cmpsb
cmp
or
push
outsb
cmp
sti
pusha
push
inc
call
push
mov
jne
xor
pop
daa
loop
sub
jecxz
mov
pop
cmpsl
js
in
sar
add
cwtl
mov
xchg
std
push
xchg
scas
loop
adc
xor
sti
inc
sub
and
xor
or
dec
std
dec
inc
fs
xor
inc
sub
push
or
mov
adc
pop
mov
sub
and
jmp
call
dec
aad
mov
sbb
lret
adc
and
std
or
sub
and
popf
xor
adc
std
loope
sbb
bnd
pop
xchg
jne
push
dec
and
mov
push
in
add
je
shlb
sbb
cmp
add
sub
cs
and
int3
mov
or
jne
mov
in
jl,pt
or
movl
adc
push
add
mov
mov
jle
rolb
cmp
test
je
mov
cmp
es
xor
pop
cmpsl
fisttpll
lret
sub
xor
or
pop
add
cmp
movsb
dec
or
shll
pop
jmp
mov
das
rolb
shlb
pop
in
jmp
and
mov
and
je
push
sub
pop
pop
push
jne
rorb
pop
mov
pop
ret
fnstenv
adc
mov
adc
sub
inc
push
enter
push
mov
je
jae
fdivrl
or
testb
test
xchg
cwtl
pushw
xor
mov
add
inc
sbb
shrb
lods
and
adc
jg
in
inc
movsl
cltd
mov
mov
idivb
decl
js
into
push
push
sub
and
mov
pop
int
aam
push
mov
mov
sbbl
add
mov
ja
rcrb
mov
cld
pop
or
and
push
xor
lret
adc
xchg
inc
xchg
sbb
jmp
daa
mov
and
pop
dec
fs
sub
orl
inc
daa
cltd
inc
aaa
icebp
jmp
data16
dec
or
in
ret
and
xchg
inc
je
sbb
fwait
dec
xchg
and
cmp
push
jmp
stos
leave
pop
xchg
adc
push
rclb
jne
adc
mov
mov
ja
rolb
mov
call
and
mov
nop
sbb
cwtl
adc
sub
inc
mov
add
xor
mov
scas
ficoms
dec
dec
outsl
cmp
lret
push
xor
or
push
repnz
call
iret
push
das
cmp
or
fadds
les
cmpb
rcr
push
popa
cli
or
addb
sub
enter
mov
inc
add
scas
jp
or
lcall
xor
or
and
push
lcall
adc
and
cmp
or
mov
addb
sbb
push
push
inc
push
mov
or
mov
sub
inc
clc
loopne
or
and
jmp
sbb
mov
stc
sub
ret
jne
mov
sarl
or
addr16
jmp
or
into
inc
in
add
addb
add
jmp
cmp
mov
push
mov
std
and
testb
jg
cmp
icebp
pop
cmovno
push
lock
pop
fcmovnb
xor
dec
jmp
mov
inc
sbb
dec
or
cmp
mov
or
fimull
ret
push
push
xor
add
inc
je
push
and
sbb
fwait
xor
jmp
mov
or
gs
ja
scas
fcoml
jmp
sbb
xor
and
sub
sbbb
cmpl
add
push
call
push
and
sub
sub
lcall
outsl
inc
das
pop
out
inc
scas
xor
or
ss
fdivp
or
sub
test
dec
iret
incl
mov
or
adc
neg
jno
mov
ljmp
cwtl
cli
sbb
push
sbb
jg
int3
and
pop
stc
jb
ja
push
ret
call
movsl
jae
jle
add
and
filds
cmp
jb
mov
mov
adc
and
jg
sbb
je
popf
mov
pop
add
mov
xor
inc
mov
and
mov
push
mov
shll
jbe
hlt
adc
outsb
mov
loope
out
sahf
sub
jecxz
and
xchg
out
dec
pop
adc
xor
js
xchg
dec
mov
stos
mov
xchg
mov
aam
xor
cmpsb
and
and
xor
or
push
test
cmpsb
bound
aas
jmp
sbb
rep
or
sbb
movsl
and
outsl
scas
leave
subl
xchg
and
mov
sub
pusha
nop
test
ret
jge
cs
dec
push
outsl
add
je
mov
and
mov
adcl
pop
jg
inc
cld
dec
push
jnp
dec
jge
pop
push
mov
push
cmpsb
inc
cmp
aam
sbb
mov
jne
lahf
xchg
push
test
cmp
sets
lock
cltd
and
inc
push
and
jns
or
and
sub
dec
pop
mov
jne
and
mov
push
push
push
and
adc
pop
add
cmp
loop
and
dec
popf
dec
add
inc
or
scas
fcmovu
mov
ret
cs
adc
ja
lcall
nop
or
outsl
int3
push
lods
add
push
pop
push
lods
mov
jne
sbb
mov
jmp
and
or
sbb
loopne
inc
icebp
lret
dec
xor
aam
cmp
int3
or
inc
xchg
push
ret
loope
cld
push
shll
ret
xor
pushf
enter
xor
cmpl
push
stc
test
inc
and
ret
dec
dec
lcall
mov
mov
and
or
and
sbb
push
cmp
push
adc
test
mov
add
xor
or
xlat
pop
mov
subl
or
and
xor
pop
xor
and
inc
mov
call
dec
mov
test
jle
adc
xchg
insb
and
inc
xchg
adc
mov
test
sub
negb
call
or
and
mov
jae
push
jo
and
or
adc
or
lahf
icebp
sbb
adc
lahf
ret
lcall
or
shr
inc
sbb
push
push
and
shr
dec
fisttpl
leave
jne
ss
pusha
dec
fs
inc
pop
cwtl
out
jb
arpl
push
ja
ret
shufps
or
xor
leave
es
mov
jb
cmp
sbbl
daa
roll
or
push
mov
jns
pusha
aas
xor
movsb
cmp
inc
out
mov
fsubrs
dec
lea
sar
xor
and
push
fmuls
inc
adc
xchg
adc
adc
push
lea
fxch
mov
or
xchg
enter
push
adc
dec
lcall
mov
push
lret
push
jbe
mov
dec
fs
dec
popa
xchg
sub
lock
rclb
lea
in
cmp
nop
scas
pop
add
fwait
mov
add
jmp
je
movsb
lods
pop
dec
adc
mov
push
pop
sub
mov
push
xor
sub
mov
push
pop
xor
push
dec
or
subb
pop
cmp
mov
call
or
cmp
dec
mov
push
jne
mov
inc
add
mov
pop
out
pop
xor
xchg
lret
jp
add
test
je
icebp
mov
pop
notw
js
xor
jp
dec
sbb
sub
add
sbb
leave
cmp
or
sbb
cmp
jbe
ret
test
xor
cld
imul
filds
pop
dec
test
push
cmp
imul
test
mov
xor
sarl
and
and
or
cmpl
fxch
sbb
jl
daa
sbb
mov
and
xchg
addb
fisubl
pop
sets
sbb
adc
imul
aam
add
mov
add
cmp
push
nop
add
outsb
pop
and
pop
or
lret
loop
ja
xor
pop
mov
lcall
and
pop
repnz
push
dec
add
sub
xchg
cwtl
add
xchg
inc
push
mov
cmc
shll
and
xor
sub
mov
call
or
testb
shl
push
nop
gs
add
shll
mov
shl
fsubr
add
sub
in
insb
push
movsb
push
or
sbb
add
push
sbb
add
lock
into
bound
shll
rclb
faddl
test
jne
mov
jmp
int
xor
loopne
cmp
shrb
jecxz
add
movntps
lds
sub
mov
add
and
and
call
leave
mov
mov
mov
into
lock
outsl
das
jno
mov
ficomps
divl
out
shl
pop
dec
cwtl
or
or
jne
lcall
lock
lea
ret
push
mov
jne
es
add
sbb
push
fucomip
stos
mov
outsl
mov
jmp
lea
sbb
sub
mov
popa
ds
push
aas
repz
testl
xchg
push
sub
or
les
pop
cmp
sub
es
sti
or
mov
pop
and
xchg
divb
push
or
dec
add
mov
pop
push
mov
xor
pop
mov
push
outsb
sbb
cld
dec
push
cld
hlt
and
repnz
push
jl
inc
push
call
lcall
mov
sbb
dec
std
imul
pop
ret
flds
inc
lods
push
pop
mov
jmp
test
call
inc
ret
sbb
lahf
xchg
rcll
xor
xor
push
push
gs
pop
scas
add
cmpsl
cmp
in
sbb
or
nop
std
sbb
arpl
adc
clc
loopne
ret
pop
pop
sbb
subb
inc
cmp
clc
cmp
inc
dec
mov
jl
lea
mov
dec
std
adc
inc
cwtl
adc
cmp
aad
add
push
pop
xor
add
cmpsl
xor
and
cmpsl
stos
mov
and
push
adc
cmpsb
bound
pop
ret
jb
and
int
jo
iret
inc
adc
and
adc
add
xor
mov
xchg
or
jmp
jge
daa
and
xchg
inc
shr
and
mov
insb
adc
push
adc
dec
jne
dec
jl
mov
js
adc
sub
and
sbb
imul
sbb
push
and
mov
lcall
xchg
subl
xchg
es
push
int3
adcb
lea
ret
push
cmpl
mov
or
mov
addr16
push
dec
dec
cmp
push
inc
mov
or
sbb
add
shl
jbe
mov
cwtl
xor
pop
pop
mov
mov
call
dec
test
int3
sbb
pop
sub
mov
and
inc
out
and
cli
icebp
imul
cld
push
fwait
and
or
push
mov
dec
adc
mov
cmp
icebp
je
mov
cmp
call
push
sub
test
pop
mov
int
sarb
sbb
xchg
sarb
cmp
xchg
jns
xor
pop
in
test
jl
ret
leave
push
cmpsb
out
push
sub
pop
lods
stc
jecxz
push
cmp
subl
xor
call
cld
sti
inc
hlt
mov
cld
pop
lock
mov
xor
mov
fadds
cmp
ds
dec
add
cltd
sub
cs
dec
pop
aam
mov
and
xor
add
cmpl
gs
repz
sub
das
pop
inc
add
mov
aaa
rclb
sbb
add
jmp
cmpsl
push
add
test
mov
xchg
push
in
divl
mov
and
in
mov
add
jg
lock
push
push
dec
repz
xor
xor
pusha
test
xchg
shrb
xor
mov
or
mov
jl
cltd
sbb
push
cwtl
cld
inc
outsl
call
jmp
popl
sub
or
imul
nop
push
outsb
cmp
or
cmp
pop
jmp
xor
and
inc
out
add
pop
pop
ret
lock
push
push
pop
ja
icebp
mov
push
lea
clc
lea
inc
out
push
movsb
and
and
adc
shl
add
xchg
pop
adc
add
fxam
iret
loopne,pt
push
movsb
adc
fcoms
jcxz
push
ficoms
or
mov
pop
divl
lret
add
and
xor
popf
cmpsl
test
out
jb
add
loope
test
sbb
pop
and
enter
out
addb
mov
cmp
je
xchg
xor
out
push
fcoml
daa
ret
jbe
xor
adc
xchg
jmp
pop
mov
and
adc
xchg
lock
add
push
push
inc
aaa
pop
imul
adc
pop
ret
dec
or
cmp
push
jne
nop
ss
ficoms
shlb
clc
jne
les
xchg
and
data16
mov
xor
mov
cmpb
mov
sbb
cmp
and
hlt
inc
push
les
scas
adc
decl
push
mov
cmp
or
inc
in
cmp
cltd
inc
sub
jp
mov
mov
fimuls
adc
js
movsb
outsb
je
dec
flds
pop
ret
mov
call
jmp
or
jo,pn
decb
inc
pop
pop
das
jmp
pop
sub
jo
adc
je
mov
mov
gs
add
adc
flds
pop
or
movsl
les
xor
cmp
sub
lds
mov
out
mov
adc
and
popf
mov
adc
and
fdivl
mov
mov
dec
and
fmull
mov
out
cwtl
dec
inc
fadds
hlt
push
mov
push
les
pop
pop
jb
cmpb
jne
cmpsl
out
cmp
jo
je
xchg
andb
inc
mov
sahf
lock
and
mov
xor
clc
pop
les
je
mov
or
testb
add
inc
jmp
sbb
and
inc
push
pop
sahf
xchg
push
call
or
cld
lret
inc
adc
sub
sbb
sti
cmp
pop
lret
cmp
push
push
push
jle
pop
mull
pop
and
adc
adc
fwait
cld
jl
dec
cmp
sub
lea
test
xor
mov
sbb
popa
inc
sub
mov
dec
xor
or
adc
lea
or
or
and
inc
and
push
insb
mov
scas
std
mov
outsl
les
mov
out
sti
dec
cmp
pop
jg
fadd
mov
ret
inc
inc
push
and
jne
scas
ret
mov
test
add
mov
add
inc
mov
jmp
ds
xor
dec
or
cld
stos
add
fdivrs
or
andb
sbb
or
inc
les
ret
repz
pop
dec
adc
push
aaa
mov
fstps
repnz
pop
fs
test
inc
into
repz
mov
and
call
jmp
pop
inc
les
les
push
ret
std
dec
fistl
in
insb
pop
insb
movsl
jp
adc
leave
shlb
cmc
or
adc
orb
sbb
movsb
push
dec
or
mov
add
icebp
jae
imul
iret
lcall
andb
divl
in
daa
sub
xchg
xchg
les
xchg
mov
mov
pop
jae
mov
dec
dec
cs
icebp
icebp
pop
outsl
cld
pop
xchg
adc
or
xor
jmp
repnz
cmovs
xchg
aam
xor
xchg
or
mov
inc
subb
insb
sbb
sub
shr
push
mov
sub
mov
xor
push
xchg
pop
cmp
add
add
push
clc
jmp
mov
and
movl
sti
xchg
sub
call
jle
and
inc
setg
and
ret
in
icebp
sbb
pusha
mov
sbb
xor
adc
jmp
divl
enter
xor
mov
adc
insb
dec
sahf
push
pop
in
pusha
scas
test
adc
adc
mov
cs
and
nop
adc
adc
les
pop
pushf
jae
cmpl
sub
in
or
scas
mov
and
inc
add
cmp
mov
adc
dec
sbb
test
arpl
psllq
pop
data16
sub
adc
enter
sbb
xor
jle
or
sbb
lret
or
push
xchg
jl
and
repz
add
jg
push
cmp
xor
cltd
ret
movhps
jnp
mov
inc
adcb
dec
pop
or
add
jmp
call
mov
fs
cmc
fadds
ret
and
or
mov
inc
nop
dec
repnz
fldenv
aad
sbb
adc
mov
sub
pop
daa
lods
adc
js
out
sbb
fld
cmpsl
inc
fildll
sbb
add
mov
fsubrp
rcl
push
fstps
mov
pop
adcl
rolb
shrb
sub
mov
fidivrl
rorb
notl
push
jne
mov
add
mov
or
test
push
mov
scas
out
lahf
or
add
mov
jne
push
mov
sbb
inc
jbe
imul
repnz
repz
xor
sbb
sbb
jno
loopne
jns
or
rol
mov
adc
sti
cmpsl
mov
subl
add
and
inc
mov
push
mov
mov
jp
adc
in
rorb
push
xor
add
je
test
loop
xchg
fdivl
mov
sub
push
insb
inc
out
xor
shll
add
clc
aad
rclb
insb
repnz
jo
popf
jl
bound
pop
and
or
xchg
cli
lcallw
xchg
xor
scas
mov
loope
in
mov
popf
hlt
dec
ds
jg
or
dec
pusha
inc
or
mov
push
cwtl
inc
sub
or
out
loope
in
pusha
sbbl
add
and
sub
xor
and
call
cmpw
pop
jne
ret
dec
cmp
enter
inc
lcall
sbb
fs
push
add
loopne
jmp
das
cmpl
jnp
stos
mov
test
push
sbb
or
mov
jne
dec
lahf
add
xchg
push
sbb
push
lahf
cmp
mov
adc
cmpsb
mov
xor
adc
pop
sbb
jge
sbb
inc
in
inc
icebp
add
pop
mov
popf
mov
cmpsb
es
lea
insl
push
dec
adc
idivb
nop
stc
jl
dec
loop
std
add
adc
xchg
pop
inc
or
dec
mov
loope
cwtl
negb
loope
int3
push
jmp
push
pop
cmp
jne
push
jp
xlat
inc
xchg
cmp
addb
call
xchg
adc
jmp
mov
or
push
call
sar
and
pop
pop
test
and
push
mov
aas
test
pop
sbb
cmpsl
dec
mov
pop
pop
adc
xchg
notb
jnp
inc
insb
sub
or
data16
xor
inc
ficoml
in
mov
pop
sub
inc
enter
aad
sbb
or
dec
or
or
jmp
outsb
xor
loopne
pushf
notl
add
mov
rclb
mov
sub
dec
mov
cmp
add
mov
mov
pop
adc
pusha
dec
xor
sbb
xlat
lock
loopne
lcall
add
add
sub
ret
or
jo
insb
cmpsl
rcrl
outsb
mov
push
lahf
jno
add
sbb
nop
fs
add
and
lds
shrl
enter
hlt
inc
roll
ror
add
dec
add
or
daa
loopne
shr
or
mov
mov
jp
push
add
push
sbb
out
call
lahf
push
pop
xchg
adc
call
ds
hlt
pop
out
pop
scas
inc
or
je
and
xchg
push
addb
jmp
mov
aaa
decl
iret
call
ss
outsl
out
lahf
in
and
dec
das
and
mov
pop
aam
fimull
test
inc
pop
sub
mov
cli
inc
xor
inc
repnz
or
jl
sti
and
js
jg
ret
push
fcompl
dec
jge
mov
out
orl
ret
clc
add
cmp
test
enter
push
rorb
and
sbb
push
inc
out
popa
cmp
xor
enter
fsubl
loopne
clc
fdivs
jmp
sub
sbb
or
aad
add
repz
inc
ss
aas
je
clc
or
xchg
xchg
lret
sbbb
je
push
add
cmp
jne
sbb
pop
add
cmp
aaa
fisttpll
sub
pop
cmpsb
jmp
sub
inc
inc
rorb
and
cltd
inc
push
push
and
inc
or
add
out
cli
jmp
sbb
or
and
insb
mov
or
rcl
sbb
inc
ror
xor
lret
or
in
adc
jne
push
jg
xor
push
inc
jnp
xchg
outsb
xor
mov
sbb
sbb
cmc
or
sub
test
jb
inc
jne
test
bound
enter
jb
xchg
stos
dec
jo
push
divb
ljmpw
imul
inc
rcll
aas
adc
sbb
fmuls
add
orb
jecxz
fsubs
ret
sbb
inc
adc
pop
mov
pop
or
and
add
fldl
adc
in
xor
jne
mov
xchg
mov
daa
add
pop
sbb
lret
push
xchg
xor
ret
fstpl
fdivl
in
bound
mov
ret
and
push
sub
sbb
adc
adc
push
or
sub
jp
push
insl
or
bound
mov
jge
sbb
or
jge
fistpl
cvtps2pd
or
les
leave
adc
sbb
in
or
sub
fsubs
add
test
add
das
rorl
psubsw
int3
daa
mov
mov
mov
jmp
dec
out
dec
lds
popf
es
inc
test
cltd
xchg
or
clc
cli
mov
sti
xor
mov
push
jno
and
and
sbb
pusha
inc
jmp
mov
sbb
add
lahf
xchg
xor
pop
inc
add
jnp
push
out
sbb
lret
imul
mov
jmp
inc
jmp
or
mov
cmp
adc
and
out
inc
je
inc
cmpl
or
test
push
sbb
add
mov
sbbl
movsl
mov
add
dec
jnp
xchg
xchg
or
pop
adc
loop
dec
sub
imul
xchg
mov
daa
cmp
cld
cmp
inc
into
cmpl
sub
jo
outsb
cmp
shr
dec
adcb
jmp
or
popa
ss
pushf
adc
sub
mov
inc
in
mov
sbb
adc
sbb
or
mov
rorb
addr16
push
fs
or
sbb
jmp
imul
jecxz
cwtl
lock
sub
xchg
adc
jnp
sbbl
and
xor
sbb
adc
jl
movsl
pop
jae
imul
add
jne
mov
push
sub
jbe
movsb
or
push
adc
or
divl
testl
mov
loopne,pn
popa
mov
jbe
lcall
and
in
cltd
push
ljmp
shll
sbbb
jno
nop
push
or
addb
movb
dec
add
pop
mov
into
xorl
or
and
std
inc
mov
mov
and
lds
inc
sub
or
add
mov
imul
fsubrl
out
xor
in
xor
adc
les
and
leave
and
mov
cmp
stc
aaa
dec
jecxz
je
mov
push
xor
and
inc
or
cmpl
lock
sub
movsb
out
jmp
mov
mov
cmp
inc
pop
in
mov
push
pop
lods
call
rcrb
jmp
in
in
add
and
xchg
add
dec
cwtl
sub
adc
aaa
or
fistpl
test
xor
pop
mov
cld
add
pop
pop
shrb
add
cmp
sbb
xchg
enter
or
fisttpl
jne
pop
adc
and
imul
loop
adc
and
cmpsb
data16
cmp
jne
push
xchg
fs
inc
pop
fs
sbb
inc
sbb
and
gs
add
mov
jmp
movsl
adc
hlt
xor
push
sub
pop
ret
insb
inc
popl
cmp
and
mov
push
mov
imul
push
ja
or
xor
jmp
call
adc
dec
add
or
fcomi
push
call
push
push
jecxz
dec
add
in
lods
lea
cmp
lcall
push
mov
or
xor
fwait
xchg
int3
xor
xchg
adc
push
or
jp
cld
sti
or
jmp
jne
outsb
push
inc
cmc
loopne
es
jae
or
xchg
jle
and
adc
jmp
aad
lds
or
push
mov
cld
gs
adc
xchg
mov
mov
or
inc
mov
loope
jmp
lods
inc
xor
pushf
push
iret
je
lret
cmp
cmpl
lcall
jae
mov
je
fisttpl
repnz
jne
incb
dec
add
pop
lea
ret
ret
leave
xchg
lods
cwtl
jle
movsb
push
mov
push
xor
mov
and
cmp
movq
pop
js
add
push
jmp
cmp
push
mov
add
mov
push
cmc
dec
loop
add
cmp
subb
jb
add
mov
test
movsb
and
pop
pushf
mov
xor
xor
jge
addl
cmp
je
je
lock
jmp
lods
movsb
add
ds
into
mov
sub
inc
aas
aas
jnp
xchg
popf
mov
std
ret
cmp
leave
mov
add
inc
mov
sysenter
outsl
es
sbb
les
mov
add
test
jbe
lret
daa
xchg
dec
or
mov
adc
ret
cwtl
dec
bound
sub
test
call
fsubr
xchg
push
pop
jp
loope
xor
adc
adc
and
jne
mov
push
xchg
sub
sbb
add
xor
test
std
and
fmuls
and
jb
pushf
jl
jle
mov
or
dec
adc
pop
push
mov
inc
inc
aas
js
out
cld
sahf
push
fsubrl
or
cmp
sub
xchg
inc
sub
ret
mov
in
sbb
push
and
sbb
je
mov
inc
jne
pop
cmp
movb
cmp
mov
repz
pop
sub
adc
mov
sub
adc
rolb
inc
mov
xchg
cwtl
test
ljmp
inc
sub
sub
mov
sub
incl
mov
sub
ss
cld
xchg
jbe
push
icebp
push
adc
movl
dec
adc
rolb
xchg
or
dec
je
mov
adc
adc
xchg
dec
add
jmp
sub
mov
pop
fs
mov
movsb
push
add
popa
mov
imul
mov
aas
pop
jne
cwtl
or
mov
and
loopne
and
pop
mov
mov
and
cmp
cld
and
sbb
in
push
push
and
je
mov
adc
pop
sub
insl
jo
lods
push
cwtl
jnp
je
jne
cmp
add
inc
or
jmp
out
cmp
movsb
dec
dec
mov
or
and
cmp
jae
lock
or
fidivrs
ljmp
push
mov
sub
mov
movb
mov
or
loop
adc
jne
xor
jmp
mov
inc
push
enter
and
pop
sbb
adc
add
icebp
pushf
cltd
mov
jge
outsl
adc
repz
test
inc
nop
jb
pop
push
jmp
lret
jbe
mov
push
ja
jne
lea
enter
push
or
cld
or
jl
or
xor
sub
xchg
inc
add
rolb
loop
adc
stc
xchg
loopne
and
cmp
or
mov
iret
test
xchg
mov
inc
mov
jmp
mov
test
or
mov
int
jl
lret
in
pop
inc
sub
shrb
mov
pop
push
and
lock
push
mov
fmull
jmp
adc
push
fadds
ljmp
pop
push
push
and
sub
xor
aam
sub
stos
or
cmp
xchg
and
xor
mov
pop
pop
test
push
add
xor
mov
popa
push
mov
or
fstl
add
or
mov
pushf
jmp
fldcw
in
mov
fdivl
repz
int
bound
fildll
arpl
test
dec
pushf
dec
xchg
test
ljmp
adc
xchg
jmp
sbb
push
movsl
xor
pop
adc
lods
or
imul
inc
or
dec
inc
cmpb
xor
popa
sbb
andb
jb
pop
loopne
in
loop
jmp
pop
hlt
sbb
jg
call
push
add
andb
aaa
enter
fs
sarb
jb
xchg
sub
mov
jne
mov
cltd
add
xchg
cmpsb
dec
push
or
inc
and
or
dec
leave
adc
xchg
and
and
push
loopne
mov
pop
rorb
test
loope
pop
sub
mov
sub
dec
xor
or
test
xor
jmp
mov
sarl
std
cmc
and
pop
cmp
enter
cmp
shlb
jle
jbe
pop
pushf
out
sbb
pop
xchg
test
dec
leave
pop
rol
lds
stos
xor
push
je
and
xchg
or
out
mov
icebp
mov
sbbb
push
sbb
repz
xor
ss
lods
lcall
xlat
or
es
je
into
enter
nop
mov
fsts
in
cwtl
mov
push
addr16
adc
inc
js
outsb
or
cmp
mov
adc
int3
lea
mov
test
mov
pusha
int3
lea
pop
in
fsubr
sub
cmp
dec
cmpsl
loopne
add
rcll
enter
cmc
outsl
xchg
je
nop
adc
outsb
add
and
pop
das
mov
push
test
inc
test
mov
jle
add
int
inc
cli
pushw
sub
ret
adc
dec
std
pop
cld
sbb
sti
inc
xor
dec
or
ja
mov
add
jmp
push
shrb
bound
mov
inc
pop
ja
pop
pop
cmp
mov
sbb
int3
push
cld
orl
sbb
jno
push
popf
inc
mov
nop
test
call
sbb
jns
xor
mov
stc
pop
cmp
add
xchg
arpl
fldl
and
sub
cmp
push
data16
sbb
bound
cmp
mov
stos
into
xor
jbe
cmp
imul
mov
in
jae
fsubl
adc
sub
dec
adc
adc
adc
xchg
jnp
imul
ret
and
aam
dec
sbb
sbb
mov
cs
add
mov
adc
push
lock
or
xor
adc
repnz
xchg
imul
punpckhbw
mov
push
dec
repnz
jbe
or
xor
or
adc
inc
mov
data16
and
testb
or
add
xchg
lea
sub
mov
inc
xor
xor
inc
push
fs
adc
or
das
outsb
dec
adc
mov
in
jle
mov
orl
das
push
dec
cmc
cmc
outsb
loope
lret
clc
xchg
add
adc
add
sarb
or
or
and
loopne
clc
subl
clc
xor
or
das
shr
pushf
fstpl
push
jbe
lds
dec
roll
push
pop
or
xchg
clc
xchg
cmp
sbb
das
push
decl
xor
adc
das
jmp
enter
mov
sar
ljmp
out
add
or
andb
in
pop
pop
lock
sbb
cmp
stc
sbb
or
xor
in
ret
mov
sti
xorl
pop
pusha
add
push
add
dec
mov
and
in
push
cmp
sbb
push
or
or
jmp
and
pop
sbb
sub
arpl
andl
xchg
sbb
lock
lds
iret
stos
lret
add
enter
sti
mov
sbb
push
or
mov
pop
xor
push
stc
addb
test
shrl
inc
mov
jle
lret
pop
mov
inc
in
lahf
inc
movq
aas
jns
or
std
cli
ds
pop
xlat
pushf
int3
les
imul
sbb
adc
fisubrs
inc
in
cmovb
xchg
leave
jge
int
stc
or
jp
xor
movb
in
loopne
add
add
dec
push
andb
mul
sub
xor
jge
inc
cmpsb
xchg
arpl
mov
test
ljmp
mov
pop
mov
pop
and
sarl
cmp
or
loope
dec
insb
je
push
repz
sbb
cmp
adc
inc
add
and
jp
jmp
xchg
push
mov
xor
lret
ret
and
add
je
mov
inc
mov
or
push
sub
push
out
pop
jne
icebp
inc
add
push
cmp
jge
popa
je
inc
sbb
mov
and
aam
mov
sub
out
mov
or
js
push
sbb
mov
mov
std
dec
xchg
mov
add
xchg
stc
or
sub
ljmp
mov
dec
shrl
xor
adc
mov
dec
shll
int
push
push
and
cli
jo
and
roll
inc
cmpb
jmp
mov
mov
pusha
lds
sub
xor
sbbl
sub
push
and
pop
sbb
pop
das
adc
push
or
dec
xchg
sub
and
xor
jno
or
int3
push
jno
popa
adc
adc
loopne
in
pop
sar
call
movl
scas
adc
ljmp
sbb
idivb
xor
jb
sub
push
pop
movsb
scas
loop
jp
test
xchg
push
out
ljmp
inc
mov
sub
mov
inc
and
xor
adc
mov
push
pandn
mov
ret
and
mov
cmp
mov
add
rclb
shlb
add
adc
ficoms
add
cs
subb
rcl
ja
test
push
sub
pop
rorb
lods
mov
adc
out
movsl
rol
mov
es
jmp
int3
add
pop
jle
inc
or
sub
adc
sub
and
lret
scas
sub
pop
int
or
test
jmp
push
push
test
ljmp
popa
add
jb
cmp
mov
call
cmp
xor
or
cwtl
sbb
mov
push
add
push
sub
repz
sbb
mov
sub
cltd
push
inc
sbb
dec
adc
or
ret
mov
imul
outsl
push
mov
mov
lahf
les
sbb
xchg
testl
fiaddl
movl
pop
push
lea
adc
fcoms
push
jp
push
aad
inc
or
jb
inc
rclb
jge
into
out
fadds
inc
mov
dec
idiv
das
sub
bound
cld
shr
loop
imul
mov
add
addl
cld
ret
roll
push
lea
mov
jo
hlt
ljmp
xchg
test
cmp
or
je
cli
add
dec
addl
jbe
push
pop
mov
cmp
loope
inc
xchg
and
mov
jae
sbb
dec
add
add
andb
mov
push
and
sbb
dec
loopne
loope
mov
push
adc
mov
outsl
push
inc
cmpsl
pop
addr16
add
hlt
mov
adc
pop
or
pop
xchg
aam
jbe
pop
clc
in
jecxz
hlt
mov
jne
and
subb
pop
test
xchg
nop
clc
ss
fcmovnbe
xorl
ficompl
mov
push
jno
into
xadd
pop
add
and
dec
add
jne
xchg
add
jmp
lea
push
sbb
and
inc
pop
mov
xchg
mov
or
pop
loopne
and
jl
mov
loopne
std
mov
imul
pop
pop
dec
pop
or
pop
ja
enter
jne
dec
mov
inc
dec
inc
sbb
jae
cmpb
push
and
push
inc
ss
or
or
pop
push
inc
test
sbb
sub
adc
push
es
and
cmpsb
mov
movsl
subl
mov
daa
lock
imull
dec
mov
cmp
xchg
adcb
shl
add
or
inc
mov
dec
and
xor
or
adc
ficompl
pop
test
or
jmp
push
adc
pop
push
or
jo
mov
adc
mov
mov
add
and
loopne
adc
int3
inc
push
adc
push
stos
dec
pop
pop
or
adc
mov
sub
add
or
adc
push
inc
fiadds
sbb
mov
dec
pop
inc
or
shll
push
mov
int
push
xor
rolb
rcrb
test
or
push
push
lcall
andl
cmpb
jbe
mov
sbb
mov
cwtl
dec
dec
adc
adcl
jmp
xor
ja
jle
mov
lods
data16
pop
lahf
jnp
es
dec
jbe
xor
jb
fildl
ljmp
xor
test
or
inc
cmp
pop
sbb
push
add
or
dec
and
sub
out
and
pop
jb
jo
bound
cmp
js
es
insl
add
iret
shr
lea
inc
adc
dec
clc
call
mov
xchg
or
mov
iret
adc
mov
lock
add
sub
orl
mov
mull
add
dec
mov
mov
push
sahf
inc
ljmp
mov
inc
inc
lods
enter
shlb
mov
lock
js
add
roll
ljmp
ja
or
xchg
hlt
popa
push
xlat
sub
fsts
and
ljmp
cld
sti
add
jl
cmp
fldl
jle
mov
cmovne
daa
add
popa
adc
rclb
inc
cld
sar
cmp
xor
push
clc
jbe
nop
dec
bound
mov
stos
pushf
or
sub
outsl
inc
clc
ret
out
inc
nop
and
add
add
sbb
jmp
dec
fstps
jl
bnd
push
xchg
or
push
cmpsb
or
rcr
mov
dec
je
addr16
nop
xor
xchg
negb
hlt
loope
sti
add
lret
inc
adc
leave
pop
fcmovne
or
push
loope
pop
adc
and
pop
and
cli
adc
sbb
inc
mov
and
and
lret
dec
ja
lret
insl
bound
pop
inc
push
nop
mov
dec
call
out
incb
stc
inc
mov
sub
jmp
ja
cmp
jge
sbb
mov
cwtl
inc
dec
outsb
pop
xor
and
sarl
add
andl
rcrl
je
mov
call
cmp
into
and
jo
push
lret
pop
and
push
cmp
jo
ja
je
repz
lods
ja
mov
fdivrl
or
jno
sub
jns
dec
xor
lea
in
cltd
loope
push
push
push
movsb
cmp
test
push
mov
fs
and
inc
push
inc
into
and
and
sub
dec
xchg
inc
sbb
mov
pop
popa
out
and
sbb
loope
and
push
mov
cmp
pop
cmp
lds
mov
shr
call
or
push
not
call
fadds
hlt
cmp
sub
adc
stc
loope
mov
iret
lock
ret
adc
stos
rcr
jb
lds
jne
cli
or
adc
jns
or
mov
jno
mov
inc
mov
xchg
cli
pop
jmp
xor
fwait
sarl
ficoml
mov
pop
lea
rdtsc
stc
inc
orb
fbstp
jl
sub
xchg
xlat
je
jne
xor
pop
add
lds
push
pop
jmp
cmpl
dec
ret
inc
mov
es
loop
or
in
test
and
mov
pop
pop
jmp
jbe
test
cmpl
jg
mov
shl
inc
hlt
leave
mov
sbb
inc
push
icebp
xor
sub
cmp
or
add
dec
dec
sbb
pop
popa
addr16
sbbl
xchg
add
jl
mov
pop
in
and
jl
sbb
jne
xor
lock
and
or
sub
push
daa
mov
enter
or
enter
inc
clc
shll
les
adc
ljmp
jmp
and
mov
dec
enter
or
mov
and
bound
jae
xchg
cmpsb
dec
test
or
iret
mov
test
dec
or
or
stos
mov
ret
aaa
ljmp
or
or
adc
loope
out
shll
leave
out
hlt
imul
lea
and
les
cmp
mov
mov
mov
imul
xor
inc
jecxz
lahf
dec
push
inc
les
aam
xor
push
add
pushf
cmp
or
jle
test
pop
pushl
jbe
push
mov
adc
pop
add
sahf
ret
je
push
imul
xorb
dec
and
stc
adc
push
je
mov
mov
pop
and
scas
xchg
dec
mov
sub
loope
fdivr
fcomps
or
jle
jle
nop
xchg
jne
flds
test
cmp
add
out
dec
fldcw
call
leave
inc
mov
cmpsb
cmc
dec
test
mov
jge
stos
clc
bound
stos
add
xchg
leave
enter
stc
add
fidivrs
add
mov
js
nop
or
hlt
je
pop
mov
cmp
jo
decl
xor
add
inc
xor
test
int3
adc
in
xor
xor
popa
mov
insl
push
xor
mov
push
mov
jmp
scas
clc
insl
mov
call
imul
pop
ud0
mov
jmp
lods
rep
test
shlb
cmp
jne
dec
or
add
and
mov
push
inc
and
clc
add
jmp
test
add
xor
cmp
mov
pop
ficoml
or
inc
sub
mov
sub
ret
adc
mov
add
add
pop
jne
push
jge
in
addb
adc
dec
inc
int
cmp
inc
mov
sbb
movb
mov
pusha
shll
add
ret
popa
fdivr
mov
jmp
mov
jl
and
je
popa
inc
test
mov
adc
dec
cmp
je
in
push
xor
sub
sbb
call
movsl
jbe
adc
or
pusha
jbe
pop
js
enter
inc
cli
pushl
movhps
std
lods
fwait
jmp
mov
add
clc
pop
shll
or
inc
add
xlat
jo
cmpsb
shlb
in
add
stos
dec
mov
push
cmp
ret
sub
andb
or
adc
orl
and
jb
sub
cld
js
sahf
adc
mov
add
ret
mov
and
test
xor
cwtl
xor
push
nop
adc
and
fs
or
and
cmpl
add
inc
out
or
scas
adc
int3
mov
dec
dec
sub
fimull
sarb
inc
cmpsb
lret
dec
ss
and
in
or
pushf
inc
stc
cltd
pavgb
fcoms
shlb
dec
rclb
inc
mov
mov
dec
adc
mov
mov
mov
add
inc
jnp
jp
inc
push
cmp
cmc
xor
and
push
push
mov
mov
enter
stos
adc
mov
xor
push
mov
or
icebp
cwtl
jp
testl
lock
xchg
mov
les
and
lods
int3
sbb
or
mov
add
ss
dec
out
ds
sub
test
stc
or
push
push
nop
sub
dec
pushf
mov
out
mov
dec
push
lret
pop
dec
andps
inc
pop
mov
and
dec
sbb
and
sbb
adc
xchg
and
jmp
and
jmp
jns
pop
and
int3
or
aam
sub
mov
hlt
push
adc
mov
jb
das
je
jno
lods
dec
inc
jbe
dec
jns
movsl
pop
xor
jno
mov
mov
xor
cmp
sub
jb
cld
ja
je
inc
mov
or
xchg
into
out
out
or
or
xchg
adc
mov
cs
dec
les
popa
pop
fisubl
clc
push
push
jg
je
out
sub
or
inc
cmp
mov
pop
xor
adc
leave
adc
jmp
je
adc
jmp
loope
pusha
mov
adc
jmp
cli
out
cld
and
into
in
jmp
arpl
jne
je
sti
mov
bound
mov
adc
lods
mov
push
jne
test
aam
orl
cmpsl
sarb
data16
mov
sub
cmp
stos
sbb
adc
cmp
xchg
int
add
mov
pop
dec
ljmp
push
xchg
ffreep
clc
cmp
dec
jge
and
std
add
add
mov
in
pop
inc
loopne
lcall
adc
xlat
test
xor
mov
into
mov
xor
cmp
mov
xor
je
clc
lcall
adc
pop
xor
cmpsl
dec
movl
lret
xor
sub
or
and
jb
adc
adc
call
mov
push
and
movsl
fidivrs
pop
ljmp
mov
repnz
jmp
pop
outsl
and
adc
rolb
aas
add
add
add
adc
adc
cmp
dec
mov
leave
fisubl
adc
cmp
or
pop
test
cltd
in
cs
cmp
ret
outsl
mov
ljmp
xor
push
jp
lahf
xchg
fcmovnbe
cltd
test
sub
scas
loop
inc
push
jne
adc
push
call
nop
pusha
mov
jmp
sbb
adc
push
mov
or
push
sbb
or
adc
ljmp
enter
ret
mov
push
pop
ljmp
push
out
dec
mov
ret
mov
jge
icebp
mov
and
ljmp
pop
sbb
rorl
subl
push
repnz
cmp
pop
je
inc
pop
or
jle
sub
cmp
ja
insl
inc
pusha
sbb
mov
jg
aas
cmp
mov
add
mov
inc
inc
sub
mov
je
and
fstl
fcompl
loopne
les
pop
jne
mov
sub
test
shll
jns
or
xchg
inc
mov
insl
xchg
pop
dec
add
and
dec
stos
sbb
sbb
test
mov
adc
adc
loopne
inc
xchg
or
notl
bound
stos
and
or
inc
push
and
push
setg
enter
lock
dec
shll
mov
outsl
pop
and
sbb
add
mov
ds
aam
adc
inc
sbb
dec
dec
outsb
jno
sbb
add
test
or
aad
les
add
add
or
inc
adc
adcb
dec
jns
neg
les
sub
jl
cmp
pop
shll
and
dec
mov
sbb
ret
imul
adcl
push
mov
sbb
call
inc
pop
or
pop
jmp
or
xchg
sub
fiaddl
sbb
xchg
lret
addb
inc
adc
push
push
sarb
sbb
sbb
repnz
call
ljmp
sub
cmpl
push
and
sbb
xchg
movb
lods
inc
insl
sub
imul
cmp
sub
and
sub
xor
add
cmp
sub
jno
lahf
add
fwait
jge
neg
inc
gs
jl
imul
movsl
daa
mov
push
push
dec
or
sub
test
sub
adc
inc
rclb
lock
push
and
cmc
mov
cs
adc
inc
add
push
pop
inc
call
leave
js
subl
xchg
lock
movsb
test
es
or
subl
setl
and
jl
mov
sub
push
sub
xchg
mov
push
sbb
cmp
jmp
stos
and
dec
std
and
call
aaa
dec
imul
cs
out
popa
cmp
xor
stos
sbb
push
daa
cli
mov
jns
insb
lret
lea
push
ds
cmc
add
or
incb
xchg
add
sbb
add
pop
clc
enter
lock
fdivl
insl
mov
cmp
jo
inc
jne
mov
jmp
or
push
ret
icebp
std
mov
xor
add
jmp
or
jle
cmp
addr16
lods
lea
fs
jmp
jnp
sub
inc
push
push
insb
in
and
or
sub
sarl
push
xchg
jle
adc
rolb
cmp
cmp
imulb
int3
xor
js
xor
mov
push
xor
and
xchg
js
cli
push
leave
daa
add
mov
pop
jno
in
dec
jecxz
or
cmp
mov
xor
rol
adc
mov
push
les
popf
jp
dec
aam
test
test
pop
loopne
fcoml
dec
inc
mov
and
call
lds
adc
sub
daa
fcomps
daa
mov
dec
ss
sti
pcmpeqd
sub
xchg
dec
aam
mov
sub
les
push
pop
sbb
testb
push
cmp
xchg
cmpsl
pusha
push
pop
loopne
dec
std
aam
orl
test
inc
or
xchg
xor
shlb
movl
je
and
jno
jge
adc
imul
add
add
xchg
aas
les
test
jl
shrb
imul
je
notb
je
jecxz
mov
xchg
push
jmp
push
cltd
inc
sub
cltd
in
lods
adc
sarb
fdivl
sub
mov
loopne
aam
mov
mov
jmp
int3
xchg
into
push
enter
enter
dec
aad
out
call
pop
les
and
out
sbb
dec
cs
dec
call
jl
xor
movsb
ret
adc
mov
mov
inc
mov
jno
or
fistps
stc
clc
daa
sbb
adc
adc
loop
push
cmpsl
jne
and
movsb
leave
clc
push
je
sub
ret
cmp
or
int3
mov
sbbl
ss
lea
push
call
movsl
neg
sbb
mov
jmp
add
mov
sbb
sbb
icebp
fdiv
and
int3
pusha
dec
mov
and
lods
fnstenv
incl
sub
or
rcrl
mov
or
and
push
lock
pop
add
mov
lret
xor
or
pushf
xor
subl
xorl
insl
and
add
call
pop
mov
incb
push
sbbl
fildll
daa
or
mov
dec
push
add
in
cmpb
mov
pop
jo
push
jle
xchg
jl
call
rcll
dec
je
jp
outsl
xor
ret
add
adc
add
pop
push
inc
call
adc
mov
pop
clc
ret
mov
mov
xor
xchg
mov
inc
sbb
rorb
movsl
mov
adc
jle
xchg
dec
lods
adc
ret
xorl
xchg
into
inc
testb
mov
sbb
dec
mov
insb
cmpb
call
or
inc
push
sub
js
pop
or
inc
sub
sbb
xlat
daa
push
add
ljmp
jl
jp
call
push
out
lret
rorb
push
and
inc
fcompp
pushf
cwtl
test
xchg
cli
dec
xor
jo
testl
inc
adc
add
loop
lret
push
inc
js
jecxz
xlat
movsb
or
jg
lock
js
les
outsl
add
mov
dec
or
xchg
cs
dec
fwait
in
or
mov
out
fwait
les
pushf
cwtl
fdivl
and
sbb
sbb
jns
adc
add
adc
mov
test
in
xlat
dec
roll
ds
adc
push
mov
rorb
or
and
xor
xchg
jae
mov
mov
pop
pusha
test
jle
cmp
cmp
push
sub
xor
adc
pusha
sbb
cmpsb
mov
test
jle
fs
cld
xchg
adc
sub
cmp
push
das
xor
mov
sub
adc
mov
xchg
add
or
enter
fadds
aad
jge
push
inc
into
sbb
test
mov
xchg
push
dec
aam
pop
add
cli
std
and
or
test
sub
dec
icebp
xchg
fs
dec
dec
add
and
fisubrs
mov
inc
add
bound
dec
or
jns
pushl
sbb
mov
mov
add
xchg
mov
cmc
rol
lea
lods
push
mov
fisubrs
xor
sub
lds
cmp
pop
mov
jmp
pop
lret
leave
sub
lcall
mov
hlt
idiv
or
lahf
mov
sbb
cmpsb
sub
inc
sti
xor
add
dec
inc
adc
outsl
mov
adc
test
jmp
pop
sub
inc
and
fimuls
adc
inc
in
hlt
pushl
sahf
das
push
add
adc
insl
cld
mov
pop
pushf
shll
fucom
pop
adc
testb
mov
ret
xchg
ja
jmp
and
outsl
or
mov
sub
and
xchg
push
jmp
mov
mov
xor
sti
adc
addb
adc
in
inc
mov
fwait
push
dec
outsl
sti
xor
movsb
test
incl
dec
pop
lea
cs
xchg
jmp
mov
test
cmp
jb
pop
jo
mov
rclb
mov
jle
out
push
lahf
push
aad
push
and
test
lcall
dec
and
jo
xchg
jae
push
popa
aaa
jl
je
jg
aas
lahf
jnp
mov
push
fwait
sub
and
adc
adc
inc
xchg
xor
sub
mov
xor
jo
or
dec
insl
shl
sti
inc
test
movl
addb
gs
fmul
fs
or
cmp
arpl
cmp
mov
jnp
adc
cmp
lods
push
inc
pop
mov
call
jecxz
aam
mov
outsb
cs
mov
mov
shlb
hlt
fldcw
fnstsw
xchg
inc
int3
enter
imul
pop
jno
lods
inc
outsb
outsb
cmp
mov
dec
les
mov
jo
lods
xchg
adc
mov
mov
and
inc
push
mov
dec
mov
push
cld
cld
setp
call
in
cmp
pop
jno
loop
mov
sub
dec
jb
pop
mov
or
mov
or
sub
les
lock
daa
cmc
cmp
fsubr
in
xchg
out
ja
int3
xor
xor
cmp
jg
fistps
push
push
or
adc
pusha
mov
orb
mov
data16
fcompl
fiadds
call
sub
mov
cmpsb
rclb
in
sbbb
xchg
cmpsl
stc
das
cld
pop
leave
leave
push
or
mov
mov
leave
push
push
jmp
jmp
dec
mov
fs
cmp
push
aad
adc
xor
push
out
add
xrelease
call
popf
pop
fdivrl
ds
xchg
out
sub
xchg
jbe
sub
mov
sbbb
cmpsb
mov
sbb
xchg
cmpsl
shll
test
xchg
sbb
stos
sbb
dec
xor
movsb
daa
dec
test
add
ljmp
daa
fcompl
stc
sbbb
pop
arpl
std
imulb
jmp
imul
xlat
add
int
mov
inc
sahf
adcl
push
out
lret
sti
push
mov
jge
sub
jne,pt
fnsave
pop
nop
fstpl
xchg
pop
jmp
or
enter
bound
ret
out
mov
data16
cld
jb
stc
jg
shrl
pop
test
push
push
bound
mul
cmpsb
cmp
pop
sbb
movsl
aas
std
in
mov
movsb
dec
mov
adcl
add
xchg
roll
pop
lcall
mov
jmp
aas
and
mov
push
cmp
cmpsl
orl
mov
inc
aas
lea
and
and
xchg
adc
push
loopne
icebp
roll
je
data16
es
divl
pop
ret
push
sub
sti
sbb
or
mov
sti
push
lret
mov
or
arpl
pop
mov
out
xchg
push
sbb
lock
data16
stos
add
call
and
xor
ret
adc
dec
mov
mov
stos
add
stc
shl
inc
adc
je
or
push
out
andl
add
sarb
ja
sub
pop
inc
cld
pop
test
and
adcb
inc
ja
rclb
rcrl
std
cli
inc
xchg
xor
inc
push
push
cmc
push
push
mov
mov
and
or
out
push
cmp
test
cs
sub
mov
push
ja
jne
xchg
sub
lods
pop
inc
pop
div
and
jmp
std
adc
cwtl
stos
jmp
sub
std
mov
sbb
or
adc
inc
jns
sub
and
pop
xor
popa
adc
jp
push
pop
dec
cmpsl
cmp
out
adc
inc
mov
pop
test
call
leave
push
arpl
jg
mov
and
mov
pop
lret
shll
rclb
in
push
rolb
decl
xchg
jb
xor
push
mov
pusha
mov
lret
mov
nop
cltd
aam
sub
mov
aad
xor
jg
outsb
lods
pop
inc
xchg
rep
xchg
test
hlt
in
cmp
gs
xor
cmp
cmp
arpl
push
pop
pop
inc
sbb
adc
jne
push
jle
jns
mov
jp
jbe
ljmp
dec
jmp
adc
ror
sbb
decl
pusha
lock
mov
add
add
xchg
cltd
push
mov
cmp
sub
push
add
es
inc
jp
push
or
mov
nop
mov
jbe
cmc
inc
xchg
mov
dec
pop
sar
mov
add
shll
or
movl
lea
icebp
aaa
pop
ds
aaa
and
pusha
add
ret
inc
jecxz
jns
mov
lahf
call
push
rcrl
jb
xchg
pop
push
mov
clc
and
or
outsb
sub
add
mov
pop
orb
jo
or
xchg
dec
test
cltd
add
and
in
inc
aam
jp
jae
push
cmp
clc
jne
pop
int3
mov
mov
sub
cs
icebp
test
adc
cld
jne
setb
add
leave
push
xor
add
ds
std
push
call
lock
sbb
inc
xchg
std
mov
sbb
fisubs
loop
lock
or
call
pop
out
add
cli
xchg
push
cmp
mov
inc
jmp
movsb
sbb
or
jne
dec
xor
jmp
add
movsl
adc
out
cmpsb
sahf
xchg
popa
xchg
mov
jmp
sbbl
in
mov
roll
rclb
mov
mov
call
or
imul
rolb
sahf
out
pusha
adc
outsb
movsl
xor
mov
push
call
jmp
dec
clc
xchg
lret
adc
cmc
stos
nop
mov
dec
testb
add
xor
inc
inc
xor
sbb
nop
stos
push
jne
and
and
out
mov
cs
aaa
je
stos
shl
or
push
ret
and
jne
jmp
andb
in
mov
and
pop
ret
std
orb
andl
cmp
bnd
mov
icebp
filds
mov
add
stos
jecxz
daa
pop
mov
inc
adc
dec
jbe
mov
sar
mov
inc
mov
popa
cmp
mov
rclb
cmp
gs
stos
cmp
sub
push
dec
pop
dec
cmp
daa
mov
cmp
mov
push
sarb
xchg
shrb
cmp
js
sbb
ret
cld
mov
dec
ljmp
hlt
inc
inc
pop
dec
test
and
rorb
pop
jae
stos
push
jae
sahf
and
or
and
add
aad
rolb
test
inc
js
fdivrs
ret
test
test
scas
push
leave
mov
adcb
dec
adc
dec
jecxz
dec
fdivs
add
add
shr
jp
adc
call
inc
xor
adc
mov
xor
sbbb
faddl
adc
mov
pop
adc
fsubl
xor
mov
inc
movlhps
dec
dec
and
inc
jg
sub
sbb
test
and
and
add
jmp
aam
add
call
movsl
and
lcall
or
in
fcomps
in
push
clc
push
enter
sbb
add
pop
jmp
sub
and
and
sub
pop
jmp
fwait
lea
sbb
cli
pushf
into
sub
or
test
xchg
xor
mov
mov
and
jmp
fwait
mov
inc
mov
sub
cli
lcall
fxrstor
loopne
inc
sub
mov
dec
mov
jne
cmp
and
sub
lds
xor
in
sub
pop
and
test
lcall
xchg
clc
jne
sub
sbb
fldl
jo
adc
insb
push
enter
adc
dec
leave
add
mov
sarl
mov
xchg
leave
add
push
push
pushf
pop
ror
xor
push
popf
pusha
pop
sub
je
js
push
mov
lock
adcl
in
call
add
inc
incl
mov
repnz
cmp
sbb
movsl
pop
lock
mov
push
dec
ret
into
cmp
movsb
incb
push
push
and
mov
fstpl
jne
call
sub
mov
and
push
inc
and
sti
adc
aad
arpl
jb
xchg
test
sub
faddl
dec
subps
and
xor
jmp
call
cmp
pop
pop
pusha
shlb
inc
jp
enter
clc
dec
and
xorl
leave
xlat
test
jno
dec
mov
cltd
les
cmp
cld
cmp
mov
jmp
rcrb
push
call
subl
sbb
out
pop
jge
cmp
jp
jne
push
andb
pushl
js
inc
iret
lret
cmp
ret
leave
iret
clc
xchg
xchg
in
cmp
pop
jle
and
xchg
lahf
xor
add
lret
sub
adc
pop
dec
mov
jne
hlt
jne
rclb
mov
xchg
jns
rclb
mov
jne
in
stos
addb
sbb
cmp
push
push
fisubs
pop
in
sti
and
dec
popf
bnd
int
dec
add
lahf
add
cmp
jae
enter
pop
add
mov
repz
mov
jmp
leave
js
out
mov
mov
sbb
mov
add
mov
adc
rorb
dec
dec
clc
mov
add
ret
mov
scas
and
sbb
inc
js
xor
fs
dec
push
jns
cli
inc
or
int3
pop
lret
icebp
int
dec
imul
mov
imul
push
rcll
xor
das
cld
or
xor
bound
inc
ja
dec
add
sbb
sbb
mov
push
push
inc
dec
sbb
push
fisttpll
or
sarb
pop
in
rclb
pop
or
or
push
sub
incb
lock
mov
pusha
leave
and
frstor
jo
cmpb
mov
fnstcw
fists
cmp
clc
push
stos
int3
dec
hlt
inc
push
dec
mov
test
sub
adc
stos
jmp
shrb
fst
mov
rcll
cmp
sub
sbb
nop
or
cmp
cmp
std
xor
adcl
lea
es
outsl
fadds
mov
push
lods
pop
add
sbb
add
pop
xchg
mov
jle
mov
imul
push
push
inc
mov
test
cmp
sub
and
fisubrl
ljmp
movsl
and
call
cld
adc
pop
push
nop
cmc
mov
lea
mov
test
add
and
xor
xchg
arpl
dec
pop
in
call
push
test
mov
mov
stos
adc
push
mov
lret
pushf
and
sub
or
or
cmp
jb
popa
clc
mull
push
adc
imul
sub
lods
cmp
adc
mov
test
cltd
sbb
adc
stos
popa
cmc
scas
sarb
and
pop
pop
mov
lret
jbe
sbb
test
sbb
mov
jnp
xor
int3
push
fbld
outsl
cmp
sub
filds
pop
loop
mov
add
push
push
pop
jne
movl
sub
inc
push
xchg
test
test
test
xor
lea
andb
inc
invd
xchg
inc
pop
dec
mov
and
rcrl
hlt
jmp
pop
in
xor
mov
dec
xor
fucomp
insl
xchg
and
mov
add
mov
xor
testb
inc
inc
jmp
mov
sub
pop
je
cs
adc
and
in
cmp
iret
add
sbb
andb
adc
adc
and
or
cli
loop
push
leave
pop
pop
sbb
stos
push
fsubrs
mov
aam
xor
mov
push
add
jmp
cmp
mov
cmc
shl
mov
test
je
adc
jne
or
jmp
sbb
inc
xchg
arpl
or
ss
int3
push
pop
inc
cmp
mov
jb
mov
cli
cmp
sti
adc
popa
cmp
pop
pop
cmc
aaa
imul
aas
lock
add
cmc
cmp
jne
jmp
aas
mov
movl
fs
dec
jl
popa
sbb
or
in
jne
test
incl
pop
push
mov
clc
stc
movl
mov
or
cmp
dec
adc
imul
lock
jle
out
stos
mov
or
flds
pop
cmpl
mov
pop
lea
xor
stc
and
mov
aas
add
addr16
f2xm1
cmp
sub
shrb
loope
mov
sar
sub
jmp
xor
inc
pop
je
movsb
popf
push
es
sbbb
rcl
sahf
dec
int3
cmpb
add
mov
inc
push
xorl
mov
push
ljmp
pop
pop
push
inc
cmpsl
dec
daa
jne
push
or
dec
xchg
sub
and
maxps
dec
sbb
dec
call
and
andl
jnp
mov
or
and
incb
in
loope
add
repz
cmp
pushf
inc
icebp
adcb
xor
pop
gs
stos
adc
push
int3
popa
mov
out
and
mov
adc
lahf
mov
push
clc
fdivp
ret
jno
imul
and
outsl
and
push
adc
xor
mov
xor
push
sahf
xor
xchg
xorb
enter
cmp
cmp
test
shlb
pop
dec
jne
xlat
mov
fldt
bound
or
push
je
pop
andb
sub
or
xor
jns
jg
sbb
lds
sbb
dec
pop
repnz
jne
stos
push
mov
sub
movsb
sar
jmp
push
adc
popa
dec
xor
imul
notb
sbb
std
and
dec
fimuls
and
inc
mov
or
pop
and
or
jbe
repnz
inc
sub
adc
mov
inc
scas
cli
push
sti
add
fcom
sub
mov
add
jmp
inc
movsl
cwtl
and
jge
dec
pop
mov
push
mov
call
mov
dec
fldl
mov
sahf
xchg
xchg
and
and
outsb
or
add
mov
sub
and
jecxz
adc
fwait
mov
fimuls
and
mov
dec
stc
test
cmp
jae
das
xchg
push
adc
jl
cwtl
dec
xorb
xor
in
push
xchg
adc
shr
sti
inc
mov
push
push
push
push
test
push
lret
and
fdivrs
test
jl
jmp
mov
aas
jle
push
pop
sub
mov
aas
dec
repnz
or
sub
stos
dec
lods
mov
lret
cmp
shll
cmp
cli
mov
mov
mov
or
adc
sahf
adc
jae
or
lcall
insb
dec
add
inc
inc
cmp
jl
push
loopne
outsl
nop
cmp
ds
mov
je
add
jne
leave
xor
dec
fstl
cmp
sub
push
fs
mov
das
pop
mov
add
dec
add
dec
or
js
pop
or
test
andl
inc
cmp
add
mov
add
push
cltd
mov
adc
sbb
dec
shll
and
fs
dec
jge
in
dec
and
outsb
jnp
leave
in
cmp
movsb
xchg
sti
sub
and
aas
lock
jno
lahf
subl
sbbb
xor
mov
int
subb
or
nop
pusha
sub
mov
cmc
call
push
lock
mov
inc
sbbb
jne
push
call
ret
mov
xchg
orl
daa
or
sub
push
pop
adcb
adc
out
sbb
loop
add
sbb
lret
aas
mov
jb
fistps
and
pop
and
xor
add
movlps
sbb
addb
sar
or
pop
mov
adc
test
dec
in
mov
or
sub
mov
mov
call
or
cli
mov
xacquire
sbb
pop
call
adc
cmpb
rorb
testb
and
hlt
orl
push
sbb
clc
incb
test
push
gs
xor
mov
scas
inc
daa
mov
mov
mov
inc
or
dec
or
sub
sbb
jmp
sbb
inc
cmc
adc
xor
push
add
adc
popa
add
mov
jg
mov
arpl
das
jb
fcmovu
mov
cwtl
or
mov
inc
xchg
mov
mov
xchg
dec
cli
popa
rclb
popf
adc
sub
xor
add
or
lea
push
mov
sar
adc
add
adc
sbb
push
push
ds
sbb
sub
inc
dec
das
iret
test
loopne
jg
jecxz
stc
jbe
push
lret
jge
cmp
adc
mov
scas
lcall
push
cmpsl
pop
loopne
and
fdivl
xchg
out
sub
lret
sub
sub
testl
and
cld
and
arpl
xchg
test
clc
push
pop
pop
mov
pusha
push
cmp
or
push
sub
jae
sbb
push
or
insb
mov
sarl
lret
cwtl
aam
test
mov
sub
add
pop
xor
test
mov
dec
dec
adc
testl
je
nop
andl
inc
imul
and
stc
inc
dec
jns
or
das
call
sbb
jns
out
push
push
je
mov
adc
test
pop
std
js
js
dec
cs
push
call
std
mov
loope
stc
or
xlat
adc
inc
testl
mov
sbb
pop
pop
ret
mov
sahf
jae
push
out
and
dec
lds
mov
jecxz
pop
xlat
movsl
clc
push
mov
adc
xlat
test
bound
cmp
pop
xchg
dec
stc
cmp
or
movsl
xchg
cmp
xchg
jge
loopne
dec
dec
movsl
sbb
dec
sub
dec
jle
cmp
sub
pop
ljmp
push
fs
std
sub
push
pop
jb
cmp
mov
xchg
pushf
cs
enter
and
pusha
xchg
call
in
mov
cmpsb
xchg
data16
ficoms
aas
sbb
sub
add
lods
add
lods
inc
add
cmp
add
xor
fnstcw
sub
scas
cwtl
cmp
pop
stc
jne
mov
and
or
add
gs
jg
and
ljmp
jns
xchg
dec
dec
bound
pop
ja
repz
rcrb
push
push
xchg
mov
repz
push
test
sarl
and
repz
ret
fldl
enter
sbb
and
rcll
cmp
jb
xchg
mov
mov
rcrb
pop
call
or
testb
add
fdivrl
cmp
jae
xor
xchg
pop
je
data16
popf
and
inc
pop
aaa
add
and
mov
fsubl
pop
decb
adc
mov
cmp
xor
pop
cwtl
mov
cmp
mov
sar
sbb
cmp
xor
jo
mov
add
test
daa
adc
lods
daa
sbb
and
push
xor
and
lcall
fsubrs
push
or
adc
mov
arpl
and
cmp
fdivp
ja
mov
and
fnstcw
das
pop
xchg
fsubs
mov
sti
jne
bound
and
cmp
cmp
repnz
pop
test
fiaddl
mov
cmpsb
jg
mov
and
outsb
orb
stos
dec
sbb
lods
bound
cmp
xlat
sbb
and
inc
jp
pop
dec
stos
ror
dec
adc
cmp
daa
sbb
xor
adc
sbb
inc
sbb
jno
xchg
pop
cltd
jo
repnz
sbb
addl
adc
adc
test
mov
adc
cld
jle
adc
hlt
imul
push
in
and
push
pop
sub
int
daa
sub
lds
xor
mov
mov
cmp
sub
movsl
dec
cmp
popf
mov
ret
inc
push
out
xchg
push
adc
cmpsl
or
xorb
ret
popa
mov
push
or
sbb
bound
pop
ret
pusha
loope
or
nop
mov
or
inc
or
lock
cmp
and
sahf
js
and
jl
sbb
mov
cmp
add
mov
idivb
mov
jmp
nop
or
xchg
and
nop
cwtl
mov
fs
and
xchg
and
mov
sub
and
incb
cmp
ror
jo
fs
adc
xchg
jbe
mov
sbb
inc
mov
xchg
jo
inc
xor
cmp
out
lret
nop
inc
or
popa
adc
adc
adc
loop
jl
adc
jns
inc
js
xlat
adc
cmpsl
cwtl
inc
jl
mov
test
and
inc
test
sbb
cmp
les
mov
fs
push
int3
add
mov
popf
fldt
jbe
inc
push
out
cwtl
mov
cmpsb
inc
popf
fistl
xor
push
aas
jns
addr16
paddw
add
cld
lret
or
fs
rclb
mov
ljmp
pop
insb
out
outsb
lret
jo
popf
gs
cld
adc
mov
jb
aas
data16
movb
pop
or
or
loop
sbb
push
lret
and
or
push
ret
bts
jmp
jg
push
leave
incl
mov
movb
mov
les
and
fwait
adc
add
sti
test
jne
addl
add
xor
and
std
inc
inc
loope
add
sbb
out
push
mov
scas
inc
cmp
testb
je
mov
lods
subl
movsb
mov
sub
xor
mov
movsl
mov
cwtl
loopne
repnz
out
adc
or
cmpb
test
add
pop
push
rcl
jle
rorl
inc
pop
cmp
jne
lock
mov
adc
movb
add
fs
dec
cmpsl
cmpl
out
adc
inc
or
out
int
jmp
sbb
adc
or
fcomp
push
mov
sha1msg2
inc
data16
out
repnz
loope
popf
xchg
loop
xor
jb
push
lret
test
cmpsb
cltd
inc
or
icebp
lea
es
and
jae
lcall
mov
call
into
mov
lahf
adc
push
xchg
jmp
aaa
or
popa
adc
hlt
xor
mov
adc
cli
adc
daa
pop
lock
das
cwtl
lds
les
sub
cmpl
shlb
jae
pop
adc
mov
mov
mov
mov
nop
lcall
loop
ss
xchg
adc
mov
pusha
sub
les
aam
dec
inc
lea
jbe
jno
push
lea
cmp
xor
out
idivl
loopne
jg
fimull
repnz
ljmp
jb
notl
jae
arpl
mov
or
aas
xchg
ljmp
inc
jl
popf
shrl
pushf
push
inc
push
push
or
call
push
jns
sub
mov
icebp
adc
or
dec
scas
aaa
daa
test
push
mov
pop
aam
notl
mov
push
pop
push
and
ret
and
scas
addb
sti
pop
xchg
mov
fisttps
pusha
add
lock
jmp
repnz
pop
sarb
sub
out
add
cmp
bound
sub
clc
ds
and
loop
dec
mov
or
dec
jbe
nop
aad
sahf
mov
dec
pop
push
mov
jnp
rclb
call
xchg
nop
in
xlat
in
adc
shl
add
push
call
jne
dec
xor
and
scas
push
mov
pop
lret
stos
xor
sub
loope
add
xor
insl
add
std
decl
dec
stos
xchg
sub
xor
mov
add
les
call
dec
stc
mov
jmp
xor
ja
std
inc
xor
or
inc
test
mov
scas
mov
pop
loopne
cmp
test
push
idivl
inc
push
sbb
push
ljmp
jecxz
adc
sub
and
stc
std
adc
jne
push
jmp
pop
xor
and
mov
mov
xor
jge
xchg
rorb
xchg
cld
movsl
pop
sti
inc
xor
fldcw
icebp
xchg
movsl
or
sub
movb
jae
pop
or
push
jbe
jl
mul
pop
inc
push
push
shrb
push
sbb
test
or
inc
sbb
add
push
and
ljmp
inc
popl
leave
jns
lods
or
incl
sbb
xor
jmp
xchg
xchg
dec
or
adc
subb
xchg
mov
pop
lret
movb
or
xor
test
ljmp
ret
lret
and
and
cmp
inc
aaa
out
int3
mov
ret
cwtl
paddw
jbe
test
enter
and
scas
sarb
inc
and
daa
jae
ljmp
fstl
repnz
fwait
in
jecxz
push
outsl
push
mov
sub
sar
inc
mov
int3
inc
mov
loopne
or
jge
xchg
stc
sarb
je
mov
mov
push
or
dec
adcb
rcrb
mov
or
mov
rclb
mov
and
pop
mov
or
sub
shlb
mov
or
unpcklps
sbb
and
sub
xor
cmp
dec
sub
sarb
jo
or
sarb
adc
pop
stos
or
jne
jns
or
jg
and
sbb
mov
in
shlb
adc
movb
sub
scas
pop
push
sbb
aam
addb
pop
and
sub
std
sbb
enter
lock
jmp
and
inc
lret
andb
adc
into
or
test
pop
xor
cmp
out
lock
aaa
mov
xor
in
mov
mul
mov
je
add
dec
or
dec
xchg
mov
loopne
xor
sbb
mov
daa
rcll
inc
jg
je
mov
ret
sbb
cmp
push
inc
add
sub
dec
inc
dec
adc
outsl
inc
mov
add
push
nopl
ret
adc
stos
mov
sub
and
daa
pop
dec
movsl
popf
xchg
test
or
not
and
xchg
ret
push
add
fsts
nop
sbb
add
shll
jns
les
add
or
dec
test
sub
push
mov
movsl
cltd
and
push
or
call
loop
ljmp
pop
sbb
mov
sbb
dec
add
push
jle
push
in
push
add
loope
clc
std
and
ja
mov
adc
mov
outsl
mov
ljmp
fsubs
or
das
inc
push
xor
or
daa
or
xor
pop
pushf
sub
sbb
or
imul
jne
sub
jl
push
ficompl
dec
and
ds
xchg
enter
call
in
dec
pop
clc
fs
pop
push
or
cs
jp
imul
pop
mov
sbb
fnsave
push
data16
sbb
lock
fwait
jecxz
loopne
add
and
imul
sbb
mov
mov
mov
lret
sub
xchg
movsl
mov
addb
cld
mov
mov
jno
in
mov
and
cmp
lods
sub
adcl
addr16
loope
lret
call
pop
loop
adc
rolb
shr
cmp
fsubrp
inc
and
hlt
pop
fmuls
dec
loop
popa
div
pusha
jmp
outsb
mov
and
popw
jno
add
sbb
cmp
pushf
dec
mov
add
aaa
sub
dec
pop
lods
mov
add
or
out
les
push
push
enter
or
dec
lods
lea
repnz
fcomps
adc
je
lea
add
das
push
les
inc
push
xor
pusha
inc
cmp
sub
xor
pop
lret
mov
dec
nop
push
or
pusha
dec
pop
sub
push
cld
xor
mov
stos
add
dec
jne
fildll
mov
and
nop
or
lock
push
popf
cli
xchg
jae
mov
ljmp
jp
pop
lret
in
sarb
push
adc
xlat
mov
and
je
xor
out
fdivrl
or
in
out
push
push
push
popf
loope
sub
int3
cmpb
jl
pop
or
mov
bound
dec
orb
and
call
sbb
movzwl
ds
or
and
leave
dec
push
push
flds
mov
and
out
fnstcw
movsb
or
sahf
mov
hlt
dec
add
push
jne
xor
ret
cmp
sarl
hlt
stos
add
mov
mov
push
inc
call
dec
sub
testl
mov
or
stc
jge
jmp
aas
sbb
or
and
inc
mov
lret
and
lds
mov
push
and
jmp
cmp
test
jl
fs
ret
mov
loop
mov
add
test
jae
lret
imul
jg
sbb
fucomip
outsl
int
pop
xor
add
shl
pop
mov
cmp
add
hlt
subl
mov
push
clc
fisttps
fwait
and
and
sbb
roll
sti
xlat
mov
xchg
push
out
sub
push
les
cmc
in
xchg
cld
jecxz
dec
jns
mov
pop
xor
dec
xchg
sbb
lahf
and
mov
or
xchg
inc
ret
sbb
je
inc
push
pop
into
adc
or
mov
add
movb
jno
fstpl
cmp
outsb
push
push
in
jae
clc
sub
mov
pop
pop
popa
mov
outsl
out
sbb
data16
out
cmp
imul
je
push
xor
xor
cs
imul
cltd
sub
dec
cmc
sti
shr
jae
push
das
orb
sub
push
add
ja
sub
add
and
xor
mov
mov
fldenv
je
cmp
xchg
sarl
mov
sub
out
and
adc
rcll
mov
or
or
jmp
dec
add
loop
arpl
sbb
pop
enter
aam
loop
test
jg
pop
adc
sub
dec
push
shl
shr
or
add
aas
shrb
sub
or
insb
iret
leave
sahf
dec
jne
repz
das
das
push
aad
jne
shr
es
cld
mov
imull
mov
cld
jno
jae
adc
mov
jge
stos
pusha
dec
sbb
xchg
push
int3
sbb
fcoms
pushf
adc
mov
add
call
jbe
faddl
mov
cli
mov
adc
or
sbb
rclb
inc
add
test
out
roll
push
or
roll
aad
mov
into
nop
push
mov
and
cmp
adc
mov
into
xor
or
lds
jns
pop
popa
xlat
je
cmp
lea
mov
test
rcrl
jp
xchg
mov
add
jb
cwtl
inc
add
adc
loop
mov
mov
test
aaa
xchg
push
incb
or
addr16
or
mov
leave
test
sbbb
or
jmp
call
ds
mov
adc
mov
push
adc
int3
call
in
or
shlb
cmp
or
adc
sti
pop
xchg
daa
dec
push
fldcw
mov
test
cmp
and
nop
xchg
jae
sti
jg
jno
jp
cld
stos
rorb
sub
movsb
sti
lret
sub
aas
in
sbb
dec
xor
add
dec
out
dec
mov
out
xor
xchg
call
cmp
psubb
pop
or
or
out
std
xchg
hlt
or
jmp
stc
jmp
push
enter
mov
aaa
adc
push
mov
mov
mov
mov
aas
cwtl
mov
loop
shr
mov
pop
call
popf
inc
push
popa
adc
xchg
adc
mov
inc
inc
inc
dec
and
xor
add
push
jg
mov
xchg
adc
cmp
lea
cld
xor
fisubs
imul
test
xchg
sbb
fs
mov
test
inc
xor
je
idivb
jge
jg
out
fs
int3
jecxz
push
inc
addb
sub
lret
pop
adc
lock
adc
pop
inc
or
daa
pop
repz
dec
mov
and
cmp
xchg
jl
dec
nop
movsl
jno
xor
out
mov
aam
adc
add
je
rclb
pop
xor
je
fnstsw
jecxz
jne
sbb
push
outsb
dec
adc
aam
cmp
stos
jbe
gs
fstl
call
pop
lock
mov
mov
loop
xchg
jnp
adc
out
sub
mov
inc
cmp
xchg
fmull
mov
xor
loope
mov
push
add
fistl
mov
cmp
test
push
rorl
ficoms
clc
imul
mov
jbe
push
push
xchg
fadds
add
sbb
out
dec
mov
or
data16
jb
jmp
and
push
or
adc
xor
add
ret
push
or
xor
cmpsl
daa
aaa
sub
inc
bound
jmp
jnp
daa
and
scas
pop
adc
add
jmp
mov
jmp
and
in
push
mov
mov
jge
frstor
cmc
cltd
sti
movsb
mov
les
enter
sti
xchg
mov
and
shr
xchg
adc
push
adc
stc
lret
or
cmc
or
std
push
pop
fldl
add
inc
icebp
mov
imul
adc
int3
hlt
adc
inc
es
fwait
lods
daa
js
clc
sbb
or
lock
cs
push
out
inc
pop
adc
out
ja
mov
filds
fcoml
cmp
lahf
mov
and
mov
orl
popf
loopne
push
xchg
adc
stos
bound
sub
cs
adc
lcall
fcompl
pop
mov
leave
ret
sti
pop
adc
out
sub
repz
or
cld
adc
inc
test
push
scas
inc
mov
xor
icebp
popl
sar
cmc
push
add
daa
xchg
mov
xchg
and
mov
call
sub
scas
adcb
add
shll
dec
mov
adc
adc
outsl
pop
es
jmp
inc
shr
push
adc
iret
dec
adc
add
cmp
push
ret
xor
mov
add
or
mov
jae
pop
or
push
mov
loope
cmp
shll
cmp
or
lock
sub
jge
add
and
fstl
lcall
aad
or
std
xchg
mov
and
adc
fbld
and
and
jecxz
sbb
out
leave
add
or
or
or
ds
loopne
cmpxchg
adc
shll
dec
dec
jecxz
js
sbb
aam
adc
sbb
jge
mov
pop
dec
add
aas
push
xchg
lahf
mov
leave
adc
icebp
push
and
testb
dec
es
adc
or
mov
testl
fistps
mov
push
xor
sbb
or
jne
sub
mov
aaa
sti
xor
lret
jle
adc
or
orl
popf
loope
pop
mov
loop
sbb
xor
sbb
lret
add
dec
or
mov
push
dec
pop
mov
stos
loope
and
outsl
ret
inc
mov
sub
das
xchg
push
test
sarb
negb
jmp
sti
jmp
fnstsw
xor
dec
push
ss
inc
mov
adc
in
xor
sub
sub
popf
icebp
xor
or
js
bnd
pushf
jnp
movsl
and
push
rcrb
sub
rcrb
sub
jbe
shrb
jbe
sbb
push
jmp
and
loopne
add
fldl
mov
xchg
sub
or
mov
scas
pop
push
daa
loope
push
dec
jl
adc
leave
addr16
into
xchg
or
fmull
push
dec
inc
cmp
pop
xor
rorl
dec
push
add
mov
and
mov
or
mov
dec
add
ds
jge
sub
test
sbbl
insl
repnz
jl
mov
dec
jne
ljmp
sbb
jmp
xor
add
mov
std
rclb
adc
lahf
or
inc
sub
out
pop
pop
ja
clc
jns
xchg
add
jecxz
adc
push
add
test
jae
ret
jecxz
in
ja
mov
in
push
add
out
xor
xchg
xor
pop
add
pop
pusha
and
shlb
ja
and
or
call
mov
jle
sbb
push
mov
pop
mov
aam
cs
pop
daa
in
adc
lock
or
mov
mov
mov
sub
cmpsl
cld
cld
daa
call
jae
sub
cli
dec
int
pop
push
stos
sub
mov
in
mov
jmp
cmp
call
test
xlat
imul
inc
xor
adc
or
push
mulb
fldz
fmulp
fs
imul
xor
mov
leave
adc
adc
xor
mov
push
jo
lahf
in
mov
add
adc
outsb
cld
sub
inc
push
sbb
lods
cmp
and
aad
in
mov
mov
push
add
mov
js
insb
daa
mov
sbb
or
out
jl
jmp
push
and
movl
sbb
js
dec
jl
adc
lods
push
cmc
les
frndint
xchg
loope
adc
rcrl
push
pop
push
add
clc
add
lds
popf
jo
scas
decb
lcall
add
lock
or
test
stos
adc
or
adc
daa
sub
xchg
mov
enter
add
pop
sbb
insl
adc
nop
inc
lret
test
je
xor
out
shll
mov
mov
enter
jnp
or
inc
ja
leave
data16
and
nop
js
mov
movsb
jmp
cwtl
adc
shll
add
or
pop
add
or
sbb
add
jmp
les
sbbl
mov
jns
mov
and
push
jecxz
mov
and
ljmp
push
out
test
or
mov
fwait
and
dec
or
mov
or
push
loop
inc
aad
and
or
into
push
jp
nop
push
mov
sbb
mov
add
xlat
mov
fwait
dec
or
aam
inc
adc
fucom
mull
sub
add
adc
inc
push
and
sbb
jmp
sbb
mov
repnz
pushf
push
jle
js
lods
jp
mov
inc
xchg
jmp
push
push
repnz
push
mov
push
sub
sbb
cltd
cwtl
stc
int3
scas
sbb
xor
aam
or
rcr
pop
cli
pop
cmp
sti
das
or
push
and
dec
add
sbb
divb
cmc
out
adc
or
xchg
adc
jmp
and
xor
pop
mov
lods
mov
mov
adc
add
lods
call
sub
sub
test
and
mov
aam
das
push
fmul
or
cmpsb
daa
and
jg
outsl
cmp
mov
dec
mov
outsb
adc
jbe
and
and
call
iret
scas
call
dec
mov
push
test
mov
sub
pushl
mov
pop
cmp
sbb
ret
inc
xchg
xlat
mov
fistpll
or
fistl
inc
inc
lds
mov
popf
cmp
lea
or
push
daa
ljmp
inc
cmp
or
loope
add
flds
cmp
sbb
xor
test
push
push
mov
mov
jmp
jecxz
ret
pushl
clc
popa
and
adc
rolb
pop
call
mov
out
movsl
stos
das
fists
dec
sti
subb
or
xchg
or
loope
jae
push
pop
or
pusha
jno
ret
and
add
adc
sub
outsb
jae
je
add
jmp
call
cmp
cmc
or
fists
xorl
jmp
jge
inc
push
mov
jg
enter
push
fisttpll
gs
mov
repz
dec
mov
push
xor
cmp
push
popf
pop
pushf
arpl
ret
scas
pusha
cmp
call
sbb
and
dec
pop
lret
or
jae
lods
xor
daa
mov
jnp
daa
pop
aas
mov
js
ds
mov
add
add
pusha
inc
xor
push
mov
and
pop
sti
ja
xor
fsub
out
adc
and
sbb
enter
jmp
lea
or
in
loopne
xlat
mov
loope
lret
jo
cmp
push
mov
stc
cld
repnz
jmp
repnz
iret
inc
ljmp
xor
mov
jg
cmp
jle
inc
and
cmp
xor
jbe
xchg
ss
shll
call
lcall
cli
incb
dec
negl
out
inc
jbe
ljmp
mov
cmpsl
push
orl
dec
adc
aaa
aam
test
das
mov
in
add
ljmp
jg
jns
cli
loope
inc
in
jae
test
sub
sbb
pop
scas
in
jmp
push
pushf
out
insl
lods
inc
pop
test
je
in
mov
inc
movsl
faddl
dec
and
jno
mov
pop
dec
pop
stc
movsl
push
mov
jne
clc
push
leave
push
aam
mov
dec
cmpsl
pop
pop
scas
bound
pop
call
shld
adc
mov
or
jmp
mov
pusha
mov
jae
jge
test
xchg
inc
je
xor
jl
or
jg
pop
add
jmp
stc
mov
push
add
mov
cs
dec
add
bound
inc
and
jns
mov
push
bound
push
add
insl
lock
sub
mov
jns
sub
jle
xor
dec
sbb
popl
addr16
jmp
xchg
test
or
dec
dec
jnp
pop
nop
xchg
dec
fsubs
jmp
lcall
sbb
mov
xor
add
mov
and
xchg
fldt
insl
ja
imul
bound
jne
jmp
mov
cmc
cmc
adc
sarl
dec
enter
push
jmp
sub
adc
mulb
xchg
sub
cmp
sbb
xorl
loope
sbb
and
xchg
cli
loop
push
mov
test
cwtl
in
pop
mov
fisubl
addb
sub
push
das
out
int
push
push
cs
cmp
cmpb
jl
out
mov
pushl
aas
sub
repz
jbe
lds
jg
or
pop
hlt
or
mov
pop
and
or
sahf
jne
xchg
fnstcw
lea
test
mov
xor
jmp
cwtl
out
hlt
movsb
or
pop
and
xor
add
sub
adc
and
int3
sub
mov
loopne
mov
inc
rclb
out
mov
mov
sub
xlat
pop
dec
scas
push
push
pop
lea
xchg
punpckldq
cmc
dec
loopne
dec
pop
cmp
fadds
mov
adc
ret
daa
and
sbb
add
rcrl
or
frstor
dec
mov
ror
int3
mov
mov
push
das
shr
add
cld
push
add
or
add
adc
xlat
les
in
js
pop
or
aas
pop
add
jno
mov
dec
inc
ret
insb
call
adc
addr16
aam
mov
mov
inc
fiadds
dec
repz
sahf
adc
and
adc
and
sbb
sbb
rorl
mov
and
leave
jne
nop
jb
int3
or
dec
ficoms
loope
mov
adc
and
inc
out
add
aas
scas
pusha
mov
push
push
inc
add
and
inc
or
add
repz
cmp
icebp
js
sahf
adc
xchg
mov
inc
maskmovq
sub
push
push
inc
push
xchg
ljmpw
rolb
mov
stos
and
adc
inc
decb
movsb
paddusb
outsl
hlt
dec
pop
jecxz
inc
imul
sbb
push
jmp
loope
mov
mov
imul
lret
mov
jbe
sbb
shr
lods
inc
pop
dec
imul
arpl
popf
jle
sub
adc
mov
pop
jecxz
lods
inc
adcb
jge
lock
lahf
jb
mov
lcall
and
add
je
jg
add
clc
add
xor
std
daa
xchg
aad
jmp
xor
add
push
aas
xchg
cmp
dec
rorb
es
cwtl
inc
adc
cmpsl
icebp
push
sub
idiv
and
or
dec
ss
adc
push
inc
fldt
rcll
push
test
jnp
push
and
jge
movsl
push
sub
xor
or
mov
les
es
cmp
jo
imul
add
lcall
cmp
lea
and
test
jne
stc
std
push
cmp
jae
or
add
decw
sub
mov
js
or
data16
sahf
mov
lahf
dec
jb
sub
ss
not
aas
movb
jmp
nop
hlt
and
adc
nop
add
pusha
and
ret
jo
je
in
dec
xchg
fcomps
jb
sti
out
push
popa
mov
jae
inc
sbb
push
push
test
cmp
dec
je
or
ficoml
inc
idivb
cmp
sub
jmp
les
and
addl
inc
ljmp
test
outsb
rolb
sub
mov
mov
jb
pop
lock
jge
imul
add
pushf
scas
sub
fstl
xchg
fdivr
in
popa
les
stc
mov
add
lret
jecxz
push
pop
or
scas
adc
pop
in
xor
or
sbb
fmull
jle
cmp
add
movl
daa
dec
mov
push
movsb
adc
mov
jge
lea
inc
add
mov
inc
inc
push
imul
sbb
or
mov
cld
jne
pushf
push
mov
pop
les
imul
pop
bound
xchg
loope
popa
addb
cli
or
ret
xlat
inc
pusha
xchg
or
cwtl
fildl
mov
mov
mov
jne
jl
or
rolb
je
daa
or
and
cmp
jb
call
mov
fsubs
mov
xchg
rorl
mov
add
inc
mov
subl
sub
cmp
loope
or
push
outsb
cmc
fs
adc
leave
lret
movsb
xchg
add
call
sbb
and
push
pop
or
lods
xchg
jnp
dec
or
pop
call
inc
or
mov
lret
inc
ret
dec
andl
add
stos
pop
roll
stc
and
std
mov
call
stos
cmp
xlat
popa
mov
jg
sbb
and
push
mov
subl
push
pusha
sub
outsl
sahf
nop
dec
jb
gs
aas
test
inc
mov
pop
adc
mov
jmp
jns
cltd
mov
or
add
sarb
je
dec
xor
dec
pusha
dec
lock
hlt
sbb
jg
hlt
mov
sbb
clc
jne
add
push
push
pushl
call
stos
jecxz
clc
int3
jo
popf
je
push
insl
lock
add
in
enter
adc
add
xchg
add
leave
cmpsb
outsb
mov
and
sbbb
fadds
scas
or
loop
fnstsw
dec
push
jae
sub
pop
fsubs
sti
imul
and
dec
lret
aaa
ljmp
jno
xlat
xchg
push
cmp
xor
sub
gs
fcmovnu
and
loop
les
xchg
xor
icebp
cmp
aaa
adc
cmc
fisubrs
xor
jae
fcmovnbe
dec
out
stos
or
dec
add
or
and
jmp
ss
pop
mov
pop
mov
andl
push
pop
std
lcall
xor
adcb
sub
ret
inc
pop
je
jge
testl
cs
xorb
inc
je
icebp
mov
push
mul
sbb
leave
ret
push
shlb
xor
cmpl
mov
lock
push
add
loop
push
popf
inc
push
stos
leave
insl
xor
mov
lock
jns
adc
mov
jge
and
mov
mov
push
lret
cmp
jno
xchg
int3
add
jmp
int3
inc
or
inc
stos
or
mov
in
push
jmp
mov
dec
cmp
pusha
and
dec
adcb
aam
cld
adc
add
xor
xchg
push
and
insb
orb
dec
rclb
lea
xor
xchg
pop
and
jle
mov
dec
rclb
mov
inc
dec
pop
xchg
jo
test
mov
dec
out
repnz
and
sub
mov
pusha
and
dec
adcb
into
mov
adc
add
mov
or
and
dec
or
and
cltd
pop
inc
or
pop
and
dec
adcb
mov
and
dec
cld
lea
xchg
mov
or
and
inc
inc
push
mov
jo
jl
mov
into
out
xchg
sbb
sub
cmp
insb
jle
push
add
or
xchg
or
add
jae
pop
xchg
or
add
add
pop
or
pusha
and
sbb
and
or
jae
adc
push
adc
sub
add
inc
inc
dec
pop
add
jo
push
outsl
imul
push
arpl
outsb
popa
jbe
nop
iret
jg
xor
push
cmp
outsb
pop
dec
push
lret
pop
dec
push
pop
insb
inc
xor
popa
imul
pushf
mov
mov
or
outsl
call
cs
xor
insb
sti
mov
outsl
ficompl
lea
mov
je
xchg
pop
shrl
outsb
pop
and
bound
cmp
mov
push
pop
jno
mov
cmpsl
gs
adc
push
dec
imul
test
mov
xchg
pop
mov
push
sub
dec
shl
cwtl
jo
sub
cmpsl
je
nop
sub
notb
bound
xor
test
push
cmp
adc
decb
jne
sub
jae
aam
shll
test
pushf
imul
push
js
xor
push
shll
jbe
sti
out
idivl
arpl
filds
push
lods
xor
mov
sub
popa
sbb
jge
test
and
push
add
or
add
dec
dec
dec
xor
loope
inc
fmul
mov
movsb
ss
mov
out
insl
jo
jecxz
cs
sbb
push
addr16
xor
xor
ja
add
out
mov
les
hlt
push
xor
mov
mov
add
movsb
mov
aad
in
add
mov
pop
sub
mov
mov
repnz
mov
test
aam
sbb
in
insl
push
jns
add
movl
test
fs
bound
std
in
leave
mov
add
adc
insb
push
arpl
cmp
or
xchg
cmp
imul
aad
jno
cmp
roll
add
std
add
or
xor
leave
mov
mov
xor
pop
filds
or
cmp
fldenv
pusha
loop
cmp
add
enter
mov
and
les
mov
mov
sub
mov
add
and
or
das
adc
stos
sbb
sub
faddl
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
xor
aam
call
xor
stc
add
mov
push
add
mov
cmp
insb
fs
add
out
push
imul
add
sbb
xor
test
pslld
xchg
push
mov
roll
or
movb
mov
push
jmp
mov
mov
frstor
sub
roll
mov
aam
pop
popa
mov
dec
into
sub
mov
add
inc
movsl
fisttps
xchg
fadd
shll
push
imul
inc
mov
sarb
sub
add
xor
or
fnstsw
add
daa
jno
add
mov
and
mov
xorb
mov
in
into
push
stc
ficomps
cwtl
leave
fldcw
and
mov
test
xlat
pop
cmp
hlt
add
pop
mov
rolb
cmpl
cmp
cmp
adc
je
inc
aad
cmp
ja
popf
adc
push
add
jae
or
test
add
push
or
dec
add
in
decl
xchg
daa
scas
loopne
pop
mov
pop
jge
mov
add
xchg
add
inc
add
imul
add
jno
insb
sbb
cld
imul
sbb
loopne
rorl
adc
dec
frstor
outsl
fistpll
mov
mov
jbe
pop
mov
call
xchg
shll
cmp
fisttps
icebp
addr16
cmpsb
fldl
mov
add
mov
fisubrl
or
or
pusha
jp
add
ret
out
fists
addr16
mov
add
imul
sbb
outsl
and
push
xchg
ja
int3
add
inc
or
add
es
lds
add
sub
add
ret
add
mov
sahf
fldcw
mov
fs
es
add
insl
add
test
ss
jmp
addr16
pop
jb
push
add
add
mov
jnp
cmp
mov
fwait
mov
xchg
add
out
fdivrl
or
lock
add
mov
push
add
push
mov
testb
ja
outsl
pusha
inc
mov
out
cwtl
jle
jo
ud0
cmp
subpd
add
and
push
clc
rorl
popa
add
push
js
add
mov
push
addl
dec
ret
cmp
add
notl
pusha
rorb
add
ds
push
shrl
or
filds
cmp
aaa
push
clc
mov
mov
inc
add
pushl
les
adcb
and
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
mov
sbb
add
or
loopne
add
add
inc
dec
push
dec
mov
mov
push
push
fisttpl
inc
dec
push
loop
push
or
push
jo
popa
mov
jecxz
shlb
jle
js
aam
jne
movsb
cmc
data16
push
adcl
lret
inc
xor
inc
xchg
pop
lods
std
xchg
inc
bswap
das
inc
pop
int
pop
leave
mov
cmp
inc
pop
or
ja
mov
mov
mov
jae
ds
gs
pushfw
insb
push
jns
ficoml
lods
jp
jo
xchg
cmp
and
push
mov
into
mov
aas
or
inc
pushf
dec
xchg
dec
xchg
jae
sbb
sbb
and
sub
and
sub
dec
add
popa
outsb
xchg
gs
sub
pop
ljmp
xor
inc
outsl
nop
pop
or
je
cmpsb
cmpsl
push
lahf
push
insb
shlb
xchg
add
int3
fs
mov
dec
daa
gs
aas
pop
inc
fs
in
insl
and
inc
dec
push
jmp
js
loop
test
dec
jecxz
push
cmp
andl
pcmpeqb
sub
push
xchg
mov
jge
bound
imul
jbe
out
push
jns
jns
inc
cmp
inc
xor
inc
outsl
mov
int3
lcall
push
sbb
xor
xor
mov
push
cvttps2pi
cltd
or
in
xor
push
movsb
add
dec
push
popf
push
rolb
iret
fdivs
ljmp
xor
adc
into
inc
aas
push
pop
test
xchg
push
gs
je
push
inc
push
je
sbb
xor
dec
std
testb
mov
aad
inc
add
js
mov
xor
pop
sbb
sub
stos
push
pop
or
test
sub
dec
push
push
and
push
popa
call
orl
pxor
push
cmpb
push
push
mov
in
aaa
je
and
enter
push
adc
add
xchg
mov
arpl
inc
icebp
push
push
push
inc
or
and
shll
push
gs
push
gs
jns
jmp
lds
sbb
pop
push
outsl
addr16
movsb
mov
mov
inc
xor
lds
loopne
jne
addb
dec
inc
mov
adc
int
inc
sub
push
pop
xor
stos
inc
sti
pusha
sub
mov
push
imul
sbb
push
or
insb
ds
inc
cwtl
jb
dec
dec
push
hlt
dec
cmp
ds
sub
das
mov
and
inc
scas
or
dec
inc
pop
mov
dec
mov
mov
dec
jge
es
inc
jae
cmp
adc
bound
sub
xor
lcall
lcall
push
dec
xlat
lds
xchg
adc
cwtl
inc
movsl
repnz
and
adc
addr16
push
imul
pushf
sub
testl
movsl
jae
addr16
cmp
xchg
jl
add
push
aam
movl
loopne
gs
lds
insl
ret
adc
cmp
pop
movsb
aaa
loopne
mov
lea
or
add
arpl
adc
fs
push
xlat
xchg
push
outsb
jae
inc
dec
xchg
fisttps
clc
inc
movsb
or
insb
shll
xchg
test
xchg
arpl
nop
cmp
sub
pop
sbb
or
insl
gs
dec
popa
loopne
dec
outsl
mov
jne
jmp
nop
in
test
dec
shrb
xchg
test
and
mov
push
push
test
bound
inc
inc
xchg
jnp
lret
inc
dec
aas
lcall
cli
movsb
clc
cli
popf
pop
cmp
stc
jp
pop
das
xchg
jb
or
xchg
dec
and
lcall
push
mov
sub
or
fnstenv
imul
insl
jns
xor
push
inc
popa
mov
jb
sarb
out
arpl
mov
adc
js
outsl
addr16
cmp
ficoml
push
adc
push
or
ljmp
testb
adc
or
or
dec
inc
or
jo
push
inc
popa
loope
add
into
xchg
sub
fucom
xchg
inc
dec
push
and
hlt
mov
cmpsl
adc
icebp
pop
push
enter
aas
fsubrl
xchg
xor
add
dec
add
jns
inc
popa
mov
cmp
gs
cmpsb
mov
and
sbb
jmp
insb
push
cmp
dec
pushf
sub
push
mov
xor
cmp
xor
xor
inc
mov
jo
je
push
hlt
ljmp
jg
mov
inc
dec
push
push
aas
imul
and
mov
jmp
mov
push
pop
repnz
xor
outsl
xor
clc
imul
dec
push
push
inc
inc
imul
xor
hlt
sub
dec
pop
data16
pop
mov
mov
fwait
xchg
divb
cwtl
sub
xor
arpl
xor
iret
xlat
xor
dec
dec
imul
js
pop
orl
loop
js
rcrb
imull
arpl
xor
pop
inc
xor
fiadds
pop
inc
cmpsb
dec
and
sub
mov
in
xor
xorb
dec
inc
push
insl
and
jns
and
rep
or
jae
xchg
ret
mov
loope
push
ret
adc
out
and
push
insl
or
imul
inc
lock
and
inc
sbb
bound
iret
imul
add
inc
shlb
cmpsb
inc
test
and
out
xor
ds
inc
lahf
and
in
mov
addl
lods
dec
inc
and
cmpsl
mov
outsl
jbe
mov
and
sub
insl
nop
dec
push
sub
inc
lcall
sbb
push
xchg
rorb
shrb
aam
push
insl
ret
sbb
inc
sbb
dec
arpl
adc
adc
xor
xchg
dec
xchg
lods
inc
and
cmp
loopne
fisubrs
les
xor
jg
mov
push
sub
cmp
fisttpl
adc
ljmp
fs
hlt
insb
push
inc
adc
aam
xor
cmp
or
and
dec
jg
int3
mov
ret
or
jb
cmp
pop
aas
inc
dec
mov
lods
sbb
jno
mov
divl
or
stos
pushf
sub
mov
insl
pushf
enter
push
sbb
insb
inc
mov
adc
or
sub
dec
popa
pop
fs
aaa
cmp
fwait
pop
es
mov
jo
mov
or
and
leave
dec
adc
jge
jmp
testb
insb
call
pop
movsb
rorl
push
cli
sbb
cmp
imul
sbb
pusha
jl
inc
mov
xchg
add
and
out
mov
adc
and
rcrl
dec
mov
inc
add
mov
push
mov
add
xor
movsb
fmul
dec
bound
call
or
inc
imul
push
sub
ljmp
out
xchg
adc
mov
mov
int3
ds
lods
mov
mov
ja
mov
test
cmp
xor
addr16
pop
inc
lods
xchg
xchg
mov
dec
cmc
push
sub
mov
jae
adc
dec
outsl
pop
xchg
and
in
xchg
std
jae
inc
out
fisubl
adc
fsubl
adc
inc
adc
inc
push
inc
jne
rolb
rclb
xchg
pushf
mov
imul
mov
xor
cs
push
mov
cld
xchg
mov
mov
outsl
das
push
mov
inc
stos
iret
dec
ljmp
mov
push
adc
dec
xor
inc
xor
andl
inc
addr16
pop
jbe
mov
mov
outsl
cwtl
add
sub
dec
adc
xchg
jb
lea
push
cmp
jbe
clc
and
push
cmpsl
popl
mov
dec
pushf
push
adc
and
mov
sbb
inc
test
jbe
jb
ljmp
pop
or
stos
insl
imul
sbb
cmp
jo
inc
idivb
sub
call
stos
dec
inc
dec
sub
mov
jecxz
or
ljmp
mov
dec
and
mov
jae
dec
xchg
in
and
js
adc
lret
nop
inc
xchg
jge
jo
push
outsb
pop
cld
fsubs
and
and
out
adc
cmp
inc
dec
cmpsb
mov
sub
cmp
dec
test
in
sbb
dec
jo
dec
sbb
dec
mov
xor
sbb
xor
xchg
test
sbb
pushf
gs
aam
cs
cmp
shll
inc
shlb
subb
pusha
shll
gs
mov
lods
or
push
cltd
in
sub
clc
lock
ficoms
in
lret
jne
test
andb
sbb
das
out
pushf
in
xlat
roll
xor
stos
adc
dec
xchg
adc
pop
je
push
imul
adc
outsl
mov
jae
mov
lods
sub
push
or
adc
ds
mov
sbb
mov
and
shll
in
xchg
fs
fs
sub
or
pop
jne
mov
daa
arpl
dec
mov
inc
insb
cwtl
les
ret
jg
daa
test
xchg
and
cmp
fwait
int3
cmp
jp
lahf
xchg
hlt
out
out
pop
push
jmp
into
mov
and
hlt
arpl
mov
fs
xchg
das
ficoml
jne
movsb
sti
test
sub
test
imul
xor
adc
cld
dec
cmpsb
cmp
mov
in
fisttps
and
sbb
cmp
data16
push
jbe
pop
cltd
jo
and
cmp
or
xchg
das
test
xchg
rolw
adc
mov
cmp
pop
push
fs
outsb
jmp
push
inc
inc
popa
mov
xor
mov
aam
xchg
mov
rorl
inc
movsb
xchg
mov
sub
bound
rcrb
jns
xchg
frstor
mov
pop
insb
leave
jp
mov
push
mov
imul
jo
sti
inc
adc
sahf
shrb
dec
sub
rorb
in
cmpsl
dec
mov
push
xlat
dec
mov
push
cmp
out
sbb
inc
mov
adc
test
loope
out
hlt
sub
pop
mov
dec
fucomi
mov
jg
outsb
and
inc
daa
movsb
pop
mov
out
dec
add
cs
and
push
fs
test
mov
fcoml
inc
scas
mov
adc
shll
and
pop
mov
in
hlt
mov
sub
fildll
xchg
lods
mov
divb
push
xchg
or
fnsave
or
dec
sub
sbb
sbb
dec
addr16
dec
popa
orb
mov
xchg
dec
pop
and
cmc
imul
in
leave
je
rcl
inc
cmp
pop
pop
lea
mov
je
jmp
mov
int3
outsb
push
cmp
cmp
sub
sub
lods
daa
popa
adc
adc
in
daa
push
dec
xchg
add
loop
push
mov
dec
xchg
das
aam
aad
and
test
push
clc
mov
inc
adc
aam
push
sbb
cmp
sub
add
insl
bound
aam
fs
stos
push
aam
loopne
adc
inc
mov
and
jb
stos
or
sbb
imul
insb
roll
jne
mov
or
cs
fs
cli
scas
mov
mov
cmp
cmp
mov
inc
jne
mov
sbb
jl
and
pop
mov
dec
je
cltd
test
dec
ja
cmp
imul
dec
cmp
dec
jb
mov
cwtl
xchg
push
movsb
mov
push
push
outsb
cmp
shrl
scas
ror
sbb
repz
adc
xchg
jne
addr16
jne
mov
mov
test
dec
push
nop
cwtl
dec
rclb
push
xlat
and
aam
mov
dec
loope
mov
pop
insl
push
nop
mov
ljmp
inc
sbb
inc
xchg
push
lahf
lahf
sahf
movsl
addr16
mov
or
dec
cmpsb
aad
cmp
leave
insl
imul
insl
pop
sub
repz
jne,pt
mov
test
fabs
push
jae
cli
int
or
inc
cmc
push
in
xchg
fldenv
or
lcall
sub
ret
addr16
xchg
fisubrl
iret
mov
insl
adc
iret
sahf
pop
inc
mov
in
lods
sub
pushf
in
ds
push
sub
dec
xor
stos
sub
xchg
dec
insl
or
xchg
sbb
jle
dec
sub
fdivl
jge,pn
xchg
lea
push
movsl
push
pop
bound
dec
cmp
jl
dec
jp
stc
mov
repnz
or
pop
movsl
pushf
cmpsb
mov
jp
neg
stc
or
mov
mov
push
outsb
sbb
sbb
mov
jo
in
jl
fdivrl
jne
int
pop
inc
inc
enter
insl
lret
dec
or
and
cmp
sbb
and
inc
lods
arpl
mov
lods
js
fwait
pop
and
and
push
jle
push
movsl
lret
jmp
and
add
dec
push
push
dec
xchg
jecxz
jne
xchg
in
loopne
bound
sub
lods
outsb
cmp
pop
pop
inc
push
push
out
or
sub
pop
shll
xor
jns
movsl
fs
test
jecxz
inc
cs
mov
dec
inc
jge
lock
or
cltd
popf
sbb
outsl
jns
add
das
dec
pop
lret
sub
xchg
dec
mov
lods
jo
test
or
ja
inc
and
test
or
jbe
and
inc
inc
dec
push
roll
xchg
sbb
pop
jmp
loop
jae
cmc
nop
lea
jo
jno
push
jb
xor
push
adc
xchg
jne
xor
mov
and
push
push
test
xchg
sbb
imul
ficompl
arpl
fwait
test
ss
push
sub
insl
rcll
bound
xchg
jp
test
inc
cmp
and
inc
sub
in
int
add
dec
psubsw
push
push
dec
adc
pusha
push
dec
xor
push
or
xor
cmpsb
movb
cmpsb
dec
and
sub
and
cli
xor
xor
and
mov
dec
push
pop
or
mov
js
mov
mov
push
dec
xor
add
inc
xor
xchg
lds
sbb
pop
inc
mov
imull
push
push
inc
dec
jge
fdivl
inc
xchg
mov
or
dec
xor
push
inc
inc
mov
inc
pop
jmp
inc
dec
push
dec
pop
jl
daa
int3
inc
stos
inc
scas
cmp
dec
push
enter
out
shrl
clc
push
push
dec
repnz
push
repz
movl
in
mov
add
adc
push
xchg
mov
sbb
sub
cmp
add
sub
mov
inc
xchg
sbb
popa
dec
push
pop
sbb
sbb
hlt
jne
push
push
in
rorb
sbb
sbb
pop
mov
sbb
dec
jg
dec
mov
dec
dec
push
and
out
push
dec
dec
cmp
cmp
push
xor
inc
inc
pushf
mov
dec
dec
sbb
sahf
stos
sbb
test
xor
adc
inc
sbb
cmp
aas
dec
cmp
ds
enter
ja
jl
adc
adc
movsl
xor
mov
pop
sub
xchg
lea
dec
outsl
outsl
sbb
mov
xor
xchg
adc
push
dec
insb
jnp
sbb
jl
lds
push
ss
int3
es
jmp
pop
mov
dec
ds
sti
pop
cmpsb
sub
hlt
or
push
cmpsb
sbb
inc
xor
xor
xor
addr16
sbb
push
push
js
sbb
cwtl
xor
dec
sbb
inc
decb
insl
sub
cmp
adc
shl
int
or
or
push
inc
dec
xor
push
outsb
mov
rclb
push
nop
push
xor
std
and
or
int3
scas
inc
mov
mov
jno
or
dec
ds
stos
pop
mov
push
mov
lret
sbb
in
sbb
xchg
sub
pop
aad
test
dec
enter
adc
es
mov
dec
mov
out
jle
mov
movsl
fadds
dec
loop
lods
cmp
inc
fcoml
addl
inc
dec
js
icebp
dec
xor
xor
cmp
adc
xor
or
or
pop
jns
adc
dec
mov
fs
sub
loope
push
dec
je
or
adc
cmp
sbb
sbb
cmp
lods
lea
jb
inc
or
dec
fldcw
sbb
testb
sbb
jno
in
es
scas
adc
pop
xor
pop
or
pushf
push
sub
cmp
jno
adc
sbb
sub
fidivl
sub
fstps
mov
and
xor
xor
pop
fs
and
test
push
mov
out
inc
mov
xlat
or
movsl
sub
fcompl
dec
inc
negl
sbb
and
and
lds
ret
and
push
push
or
dec
jg
pop
rcrb
cmp
xorps
gs
sbb
mov
sub
and
lods
mov
in
xor
enter
dec
aad
idivl
inc
pushf
mov
and
inc
dec
sti
sti
sub
dec
mov
test
call
and
ss
sbb
sub
xchg
test
and
ds
mov
repnz
mov
or
cmp
nop
dec
in
or
jbe
dec
or
dec
insb
icebp
orb
clc
dec
cld
inc
lret
adc
stc
push
repnz
cmp
faddp
aas
cmp
xchg
and
xor
in
push
sbb
push
sbb
shlb
adc
adc
push
inc
sub
out
dec
jp
out
movsb
inc
push
ret
sbb
pop
inc
test
aaa
sub
mov
inc
push
sbb
inc
xor
sbb
cmpsl
sub
icebp
inc
popa
test
movsl
xor
xchg
cmp
call
sub
lahf
jp
inc
sbb
push
aaa
inc
sub
jl
sbb
push
add
lcall
leave
dec
negl
sub
dec
adc
fbld
inc
and
jmp
push
push
inc
xor
lahf
imul
sbb
dec
or
sub
inc
adc
dec
shll
test
inc
or
dec
xchg
dec
push
aad
mov
dec
and
cltd
outsl
dec
or
push
sbb
mov
call
dec
or
inc
inc
lods
xor
fsubrs
push
pusha
cmpsb
mov
or
mov
sub
aas
jnp
insb
jnp
sub
addr16
xor
sbb
nop
dec
cmp
dec
outsl
and
sub
cmpsb
aad
push
jmp
jb
dec
push
push
or
dec
or
dec
mov
xchg
dec
out
sbb
fists
jbe
sbb
cmp
xor
aaa
pop
rcrl
jmp
lds
shll
out
fwait
and
nop
aaa
mul
push
push
adc
push
dec
pop
aaa
bound
xor
lds
out
jne
scas
loopne
mov
jns
call
adc
dec
mov
shlb
or
cld
lret
in
inc
dec
dec
ss
mov
adc
out
ja
cs
sub
push
and
ret
scas
adc
mov
xchg
stc
test
xchg
push
push
icebp
mov
push
rclb
inc
jg
movsb
sub
notl
push
sub
and
test
jns
sub
dec
movsb
xor
jnp
arpl
shll
cmp
test
add
xor
mov
sub
cld
mov
loope
or
adc
fst
push
or
cli
dec
movsl
sbb
or
dec
mov
mov
cmp
adc
xor
pop
push
push
cmp
filds
xor
jl
xchg
shrl
sbb
pop
mov
repz
xchg
inc
push
xor
jle
test
and
mov
test
sbb
std
sub
cmpsb
test
push
push
dec
imul
popa
and
push
pop
dec
push
jl
sub
xchg
push
dec
lret
and
cli
mov
push
rcrb
mov
add
sub
and
and
enter
sub
pop
xor
push
jl
cmp
pushf
adc
rcr
or
pop
push
inc
movsb
xor
sbb
sub
dec
push
inc
aam
movsl
pop
inc
pop
push
push
xor
jo
in
sub
movsl
test
jecxz
xchg
adc
movups
push
ds
ret
or
aaa
cmp
jmp
pop
xchg
push
mov
sub
dec
cmc
arpl
lahf
add
cmpsb
lods
in
dec
jns
lods
or
loope
std
adc
pushf
out
roll
and
in
and
push
pop
or
fdivrl
popa
aam
mov
sub
inc
imul
cmpsl
iret
hlt
sub
inc
xchg
adc
bound
sbb
neg
jl
push
sbb
mov
sarb
lret
sbb
rcll
jl
mov
xor
rolb
push
or
pop
sbb
je
lcall
mov
into
out
push
aad
fists
dec
mov
nop
mov
mov
dec
scas
sub
inc
push
xor
xor
and
dec
sbb
pop
jne
adc
push
test
pusha
out
xchg
jns
scas
and
cmp
out
dec
dec
icebp
dec
push
dec
adc
lahf
cmp
push
cmp
aas
add
or
pop
cmpsb
sbb
xor
test
push
sbb
xchg
test
jge
dec
push
push
dec
imul
hlt
fsub
xchg
xor
loopne
adc
adc
icebp
xchg
imul
cmpsb
insl
sbb
popf
shll
mov
ficompl
int
xor
pop
mov
inc
loop
cmpsb
dec
inc
dec
aad
test
pop
cmp
xchg
and
movsl
push
scas
push
xorl
fcomp
push
cli
push
sbb
dec
nop
mov
xchg
xor
sbb
xor
sbb
and
movsl
loop
push
or
xchg
xor
mov
sub
mov
das
dec
or
or
bound
and
sbb
inc
xlat
mov
lds
loop
fstps
inc
cli
pop
adc
sub
icebp
push
sub
dec
sbb
dec
mov
neg
cmp
lods
sub
insb
sbb
pusha
test
int
dec
and
fstps
inc
cmp
cmpsl
lret
outsb
icebp
mov
jge
call
and
mov
ja
mov
aam
adc
push
dec
or
and
adc
sub
inc
dec
pop
sbb
dec
sarb
jb
push
sub
sbb
push
push
movsb
cltd
sbb
fisttps
push
push
push
or
push
inc
lcall
out
mov
mov
adc
pop
shrb
insl
dec
sbb
insb
fildll
imul
mov
out
pop
sbb
sbb
inc
and
dec
popa
push
dec
sbb
les
jae
add
push
dec
test
cmpsb
sbb
shrl
dec
sbb
dec
pop
and
pusha
xor
push
push
inc
dec
pop
sub
or
inc
enter
jb
push
jno
mov
inc
imul
adc
adc
lret
push
sbb
stc
loope
dec
mov
inc
dec
pop
inc
adc
sbb
sub
adc
dec
in
inc
sub
and
test
sbb
test
in
xchg
cmp
and
dec
sbb
je
pop
nopl
in
sbb
movsl
sub
outsb
dec
test
test
scas
aas
aas
push
or
push
cmp
jle
and
mov
or
push
mov
out
sub
mov
adc
dec
and
jae
inc
fldenv
sbb
movsb
inc
leave
hlt
inc
in
pop
clc
inc
mov
or
movsl
scas
mov
dec
sbb
int
sub
and
lods
cmp
sbb
popa
mov
xor
icebp
inc
sub
inc
xchg
leave
mov
pop
adc
jl
imul
mov
adcb
pop
cmpsb
sub
and
xchg
test
ja
in
xchg
mov
and
int3
dec
sbb
inc
insb
sub
stc
dec
xchg
ret
stos
inc
mov
and
cmp
dec
sub
push
pop
lret
imulb
shlb
bound
xor
movsl
adc
repnz
inc
je
dec
fdivp
aas
dec
adc
xor
inc
loope
dec
sub
sub
sbb
or
out
sbb
xchg
inc
or
adc
nop
sbb
ja
mov
scas
sub
xchg
xchg
sbb
adc
sbb
out
cltd
and
fcompl
sub
in
out
push
movsb
or
test
and
ljmp
pop
bound
xchg
arpl
push
dec
sub
cmpsl
ret
inc
dec
xor
push
pusha
loope
xchg
jbe
push
lock
mov
sub
push
dec
cwtl
inc
adc
inc
adc
push
imul
push
adc
pop
sub
lea
sbb
push
inc
inc
push
clc
inc
mov
jb
adc
jno
cmp
aam
sub
bound
jne
cmp
dec
or
lret
adc
add
mov
sub
mov
cmp
adc
cmp
cmpsl
xchg
movsb
aas
mov
ficompl
hlt
sbb
or
xor
lods
in
and
insl
pop
xchg
and
mov
or
stc
ror
or
or
and
dec
jb
cmp
fsubs
push
and
xor
insb
push
cmp
xlat
lcall
sbb
jecxz
sbb
inc
xor
lret
subb
and
inc
sub
rcrl
sub
call
sbb
das
push
xor
fs
inc
sub
and
test
dec
push
inc
cmp
push
fdiv
leave
push
stc
pop
jno
mov
lds
lret
inc
lods
cwtl
aas
push
fstl
rorb
and
lcall
das
inc
mov
push
iret
cltd
xor
rolb
pop
or
inc
insb
adc
std
push
rcll
sbb
and
out
push
pushw
arpl
stc
daa
dec
pop
jle
push
pop
cmp
pop
mov
cld
scas
push
mov
dec
xchg
in
cwtl
int
jns
mov
jbe
sbb
sbb
or
pop
sub
pop
popa
je
jne
imul
add
mov
dec
mov
pop
loope
aas
or
jmp
and
shlb
mov
test
int
pop
mov
aaa
insb
adc
faddl
jb
loopne
int
imul
test
and
jmp
mov
js
inc
sbb
imul
popa
cmp
sbb
cmc
push
mov
jno
push
out
ror
idiv
mov
jae
insl
xor
jb
sbb
jno
inc
pusha
outsl
xchg
adc
bound
xor
xor
loope
popf
add
popf
les
sbb
pop
adc
dec
or
mov
pop
mov
or
enter
pop
mov
mov
inc
and
iret
adc
fsubrl
fidivl
push
mov
movsb
enter
jmp
xor
sub
pop
inc
sub
lcall
aam
data16
mov
pop
inc
mov
xchg
dec
ds
jp
int
adc
cmp
sub
icebp
cltd
inc
bound
popa
inc
dec
jae
lret
data16
dec
jo
je
mov
push
outsl
push
xchg
sbb
mov
add
mov
bound
adc
sub
mov
jne
and
pop
push
mov
jns
je
xchg
out
inc
or
xor
cmp
fs
pop
ljmp
sbb
push
jge
jo
or
add
std
dec
or
or
cltd
xor
les
dec
lock
test
aam
jg
aas
aad
xor
mov
je
inc
outsb
dec
jne
sarl
adc
adc
mov
rcrb
test
fistl
inc
insb
adc
xor
or
sbb
ljmp
aaa
cmp
cli
or
test
ret
or
sbb
xor
fsubrs
cltd
les
and
and
push
movsb
cld
shlb
or
cmp
xchg
insl
dec
call
xor
hlt
js
adc
in
lret
or
lods
in
push
dec
loopnew
clc
dec
mov
inc
xor
add
mov
and
cld
mov
arpl
inc
loope
inc
or
lahf
out
xchg
in
jmp
sbb
push
sub
jle
andb
ss
leave
dec
or
test
nop
leave
cmp
ret
sub
lret
mov
cmp
sbb
jl
and
test
inc
dec
pop
adc
pop
lret
cmp
add
mov
pop
les
dec
or
cmp
xor
clc
or
inc
inc
sbb
sub
push
cmp
loope
cmp
rcrl
test
movsl
mov
sub
sub
pop
inc
test
sub
xchg
xchg
and
xor
stos
lea
pop
cmp
and
fnsave
mov
movsb
cld
push
fs
sti
sbb
add
sbb
mov
je
sub
or
popa
leave
in
insl
fsubrp
fldt
int3
pusha
imul
cmpsl
jl
fwait
sub
adc
dec
push
in
jmp
mov
add
call
sub
stc
mov
jmp
pushf
push
rcll
jp
imul
xchg
aas
cmpsl
dec
xor
leave
adc
dec
cld
sbb
hlt
fs
xchg
cmp
push
ljmp
adc
inc
mov
mov
mov
push
sub
xor
inc
jge
xor
xchg
xchg
fnstcw
movsb
pop
outsb
mov
rclw
adc
dec
jg
push
scas
xchg
fs
push
data16
aas
test
jns
lods
sbb
jb
cmp
call
daa
push
hlt
jecxz
jo
bound
mov
lcall
jnp
sbb
mov
outsb
xor
inc
add
push
adc
cmp
gs
loop
repnz
pop
imul
inc
mov
xor
and
outsl
or
and
add
cmp
outsb
jbe
xor
cmpsb
add
in
scas
push
das
sub
push
xchg
cmp
test
pop
cmp
and
loope
adc
mov
sub
mov
mov
mov
and
xor
jge
xor
dec
jl
pop
pushf
pop
pop
mov
fistpll
data16
rcl
xor
fwait
jb
push
push
scas
push
xor
push
rdtsc
inc
xor
or
inc
test
shrb
scas
pop
mov
adc
pop
je
sub
sbb
cli
jb
dec
jl
movsb
push
sbb
xor
dec
sub
sub
insb
jmp
dec
cs
fnstsw
push
movsb
sti
mov
sub
xchg
out
cs
inc
xchg
push
clc
mov
lock
outsl
jbe
inc
movsl
add
negl
push
xchg
push
test
test
xor
xchg
push
jecxz
lret
inc
hlt
into
push
xchg
jl
sahf
cltd
dec
pop
les
js
lahf
cmp
gs
gs
sub
pop
jl
inc
inc
mov
xor
and
sub
jno
cs
imul
push
sub
dec
stc
bound
pop
shrl
jo
mov
xor
push
aad
ja
in
test
cmp
mov
xchg
daa
call
mov
xor
pop
imul
lods
sti
mov
lahf
stc
push
cmpsl
cld
xchg
lods
loopne
xor
fstpl
shll
xchg
outsb
test
daa
sub
test
or
push
scas
leave
mov
jecxz
sbb
and
js
les
and
lods
push
lods
and
ljmp
movsl
inc
ljmp
dec
outsl
push
dec
and
insb
jne
mov
and
mov
add
scas
and
outsl
imul
ljmp
jae
test
fwait
dec
cmp
dec
outsl
push
inc
inc
cmc
xchg
test
sti
rcrl
pop
sub
test
dec
add
fcmovnbe
inc
push
push
mov
fistpll
rorb
test
and
sbb
jae
scas
pop
push
dec
mov
xor
jb
les
out
jb
cs
and
push
sbb
or
xchg
fimuls
jg
pop
aam
test
rcll
lret
stos
push
sbb
insb
xchg
xchg
and
and
push
jp
pop
jbe
jbe
sbb
push
sbb
xchg
jle
movsl
cmp
xor
push
sbb
xchg
add
xor
in
sub
pusha
nop
dec
jge
sub
in
aas
xor
decb
pop
popf
mov
xor
dec
pushf
adc
enter
push
jl
call
jne
dec
inc
lret
push
adc
push
mov
gs
hlt
stc
xor
fiadds
sbb
mov
and
sub
sbb
inc
adc
insb
and
scas
adc
mov
movsb
mov
shlb
mov
dec
std
sub
sbb
gs
and
push
movsl
test
and
imul
mov
jp
loop
dec
add
into
data16
xchg
push
dec
inc
cwtl
in
pushf
inc
xor
xchg
mov
fsubr
pop
xrstor
sbb
jno
sub
sbb
inc
cmpsl
idiv
jmp
out
hlt
sub
and
leave
push
insl
cmp
in
adc
jp
shrl
sar
fs
mov
xchg
pop
cmp
push
sbb
or
push
icebp
and
xor
or
and
pop
leave
xor
imul
and
mov
xchg
jp
xchg
cltd
jnp
pop
fimuls
mov
pop
pop
cmp
lahf
icebp
js
inc
shr
push
pop
xchg
sub
sub
mov
in
dec
push
loope
mov
inc
push
fs
xchg
push
push
cmpsb
test
xchg
mov
jmp
xor
fs
fsub
idivb
pop
sub
fisttpll
dec
lahf
sub
pop
fisttps
in
mov
fld
es
dec
pop
add
add
sub
mov
jo
or
stos
push
popa
and
loop
hlt
pop
adc
inc
sbb
and
addl
clc
sub
movsb
test
jmp
int
add
fstpl
ret
rcrl
insb
jo
les
xchg
or
push
mov
and
adc
repz
or
mov
dec
push
add
jb
or
es
xor
add
daa
mov
jp
test
and
and
inc
popa
xor
es
add
push
inc
push
mov
lcall
adc
es
or
aas
loopne
push
cmc
dec
and
cwtl
sahf
cld
adc
ja
cwtl
sbb
popf
rorl
dec
clc
jmp
nop
adc
cwtl
insl
push
out
sub
inc
xor
lret
rcrl
cmp
push
test
mov
jae
sbb
jge
add
inc
sbb
sbb
fs
imul
stc
jg
and
sub
lahf
imul
sarl
mov
fstpt
sbb
dec
push
fidivs
pop
nop
stos
addl
inc
or
adc
rcrb
negl
dec
mov
sbb
or
jo
or
sahf
jg
sbb
sbb
or
add
loope
std
outsl
lahf
xor
adc
add
hlt
and
fs
sbb
add
inc
and
dec
movsb
loop
jo
fwait
sbb
add
adc
add
shlb
xor
push
or
xchg
dec
aam
in
xor
adc
scas
int3
or
mov
out
jp
xor
loopne
movsl
mov
jo
adc
or
arpl
insl
pop
inc
cmp
and
cld
pop
js
leave
sbb
add
jnp
push
gs
mov
or
or
jl
jne
rorb
pop
xchg
popf
and
pop
ret
aad
das
mov
cld
clc
pop
or
dec
fldenv
or
jne
add
jo
sub
add
jbe
inc
jl
pop
dec
aas
and
fildll
lods
hlt
int3
int3
adc
inc
sub
das
adc
ja
sar
mov
mov
fs
mov
and
or
scas
aas
imul
adc
dec
inc
xchg
or
outsl
and
and
inc
sub
sub
jnp
pop
leave
xlat
xchg
in
push
push
or
scas
je
xchg
and
adc
sub
push
stos
hlt
adc
pop
ret
push
cld
mov
xchg
gs
out
sub
imul
sahf
loopne
or
mov
adc
orl
out
jae
aaa
enter
imul
cs
cli
cmp
psubsb
dec
in
or
int
movsl
adc
adc
jne
xchg
jo
jl
adc
mov
test
and
cmp
sub
nop
inc
fnstsw
or
inc
adc
fdivs
pop
inc
push
inc
and
pop
cmp
jecxz
inc
sbb
jecxz
outsb
adc
push
sub
xchg
loop
inc
and
push
push
aaa
cmp
pop
mov
adc
outsb
imul
sbb
inc
in
dec
rolb
addr16
and
dec
jo
xor
mov
rolb
xchg
mov
sub
movsb
mov
dec
nop
aam
jmp
pop
pop
xor
dec
cmpsb
and
imul
movsb
and
adc
xchg
in
xlat
sbb
or
push
outsb
adc
or
xchg
int
xchg
xchg
add
mov
push
sbb
xor
sub
sub
or
jae
sbb
cmp
push
xor
or
add
ret
movsb
adc
es
icebp
sub
or
adc
ficomps
and
mov
negb
and
insb
dec
xor
xor
cld
push
loop
cld
lock
in
push
mov
xor
in
xchg
lds
xor
fstps
xor
popf
add
outsl
jae
xor
add
add
iret
inc
or
and
dec
push
shrb
mov
out
lods
fsubs
jp
arpl
xor
fcomps
les
adc
repz
mov
cmp
fs
xor
testl
lea
dec
sti
or
jl
sub
cmpsb
add
outsl
pop
ficompl
mull
push
jo
push
xor
sub
gs
xor
sti
inc
pop
sub
pop
movsb
test
test
std
imul
mov
daa
cltd
cld
sub
cmp
mov
aaa
insb
mov
fstps
cmpsl
stos
ficoml
mov
imul
jmp
cli
fs
pop
jg
inc
push
ds
xor
mov
aas
sub
inc
lds
cmp
subl
push
push
nop
lea
leave
push
adc
jg
or
xchg
cmp
lods
ret
jmp
pop
push
lret
jae
rorb
push
ficoml
inc
mov
fbstp
xorb
pop
cld
fsts
gs
lock
das
cltd
scas
cmp
mov
xchg
jp
and
and
lods
mov
loopne
int
add
jo
xor
or
adc
and
xchg
call
adc
fsts
cli
mov
pop
cld
int3
jmp
fistps
inc
sbb
xchg
adc
mov
inc
insl
adc
jbe
xchg
out
push
push
bound
fimuls
mov
dec
dec
in
popf
push
into
mov
movsb
cmpsl
jno
inc
push
cmp
dec
dec
jp
iret
mov
jae
mov
lahf
rcrb
xchg
pop
adc
mov
repnz
sub
sbb
outsl
rorl
jbe
cmp
fs
mov
dec
test
push
mov
ror
call
mov
out
add
mov
mov
push
sbb
sbb
pop
inc
and
lret
inc
fs
jmp
xchg
pop
and
push
sahf
adc
mov
push
jbe
dec
scas
xchg
les
fisttpll
push
jl
jne
lcall
adc
pop
inc
rcrb
nop
stc
aas
jne
repnz
pop
test
das
jno
xchg
popf
xor
out
mov
imul
test
and
js
and
or
loop
pop
push
int
gs
fsubl
cmp
pop
push
test
add
xor
mov
mov
insb
push
pop
push
loopne
aas
imul
mov
dec
sub
and
mov
hlt
imul
out
je
jp
dec
mov
cs
ljmp
cs
pop
pop
imul
movsb
xchg
cs
test
imul
xor
cmpsl
dec
mov
cmp
mov
push
pop
sub
inc
push
push
aas
xorl
jp
jmp
int3
inc
adc
pop
clc
mov
sbb
enter
enter
mov
aaa
dec
ret
in
sub
mov
jl
sub
adc
adc
fs
pop
mul
dec
mov
stos
cmpsb
xchg
dec
adc
cmc
icebp
sbb
and
imul
in
sbb
bnd
or
rcrl
dec
imul
xchg
mov
adc
sbb
mov
inc
cld
aam
loope
adc
sub
outsl
xchg
pop
lcall
mov
lahf
ja
push
sub
fsubrl
cli
fbld
mov
lahf
enter
outsl
lahf
in
add
ret
js
insl
pop
das
aam
pop
xor
out
aas
adc
add
dec
push
movsl
shl
jb
iret
sbb
jne
push
test
dec
pop
fs
stc
and
cld
fwait
mov
jnp
cmpsl
xor
push
xor
icebp
sub
pop
inc
pop
jp
loopne
push
dec
or
out
adc
xchg
add
mov
pop
xlat
add
push
inc
jne
call
mov
int3
mov
lret
adc
jns
sbb
add
adc
pop
xchg
mov
dec
aam
xor
in
dec
jg
sub
sbb
shlb
imul
xchg
shlb
mov
in
sbb
pop
and
jmp
dec
andb
add
popl
cld
ds
cmpsb
mov
scas
jle
lods
jne
insl
pop
push
mov
xor
ja
xchg
inc
cmp
stc
imul
mov
inc
pop
mov
jo
nop
cmc
sub
pop
jmp
cmp
or
pop
xor
fmul
sub
sub
sbb
mov
dec
mov
aaa
mov
mov
xor
daa
mov
pop
sahf
stc
mov
mov
loope
repz
cmp
cwtl
cmpb
mov
sub
lods
mov
adc
xchg
and
adc
xorb
ljmp
adc
movl
ja
mov
mov
inc
add
lock
popa
or
add
or
popa
xor
adc
pop
dec
dec
adcb
cmpsl
nop
or
dec
sbb
jmp
add
adc
add
add
add
jo
mov
pop
or
cmp
pusha
jb
roll
fnstenv
js
sti
inc
xchg
jecxz
add
ret
push
jne
insb
sub
in
out
pushf
cwtl
sub
pop
test
mov
add
push
scas
cmp
adc
test
shll
mov
inc
add
push
inc
dec
cld
inc
add
push
and
and
push
aaa
add
or
or
push
add
adc
adc
adc
push
add
sbb
sbb
sbb
push
add
and
and
and
add
sub
sub
sub
cs
inc
cmp
cmp
add
aas
inc
inc
inc
inc
incl
dec
dec
dec
add
dec
push
push
push
mov
pop
add
pop
pop
pop
pop
pop
pusha
push
popa
bound
pop
add
imul
cltd
sub
jne
ja
jns
add
jl
jle
lret
sub
shlb
sti
push
arpl
test
sub
mov
jle
adc
ljmp
jle
push
inc
fwait
mov
decl
mov
pop
scas
jne
loope
aas
sbb
movsl
inc
jle
push
test
sub
mov
push
add
std
es
add
sub
add
and
xor
inc
add
push
add
and
push
ds
lret
ja
xor
add
add
cmpb
add
mov
cmp
loope
xchg
fiaddl
test
je
mov
xor
sub
js
jp
xor
lahf
xor
mov
pop
rclb
xor
sub
pop
mov
inc
or
xchg
lods
adc
cmp
adcl
jne
dec
jg
or
push
loopne
sub
add
addb
out
fwait
push
rclb
mov
ror
dec
jno
or
pusha
inc
mov
add
clc
ret
movsl
add
and
xchg
arpl
jl
aaa
mov
cld
bound
cwtl
or
xor
testl
lea
lock
pushf
mov
mov
inc
in
shrb
out
push
sbb
push
xchg
leave
mov
or
inc
cvtps2pd
enter
adc
xor
popa
cmp
sub
gs
sub
push
cmp
sub
adc
mov
sub
pop
xor
movsl
in
test
cmp
mov
je
aaa
nop
xor
sub
push
out
in
scas
sbb
aas
pusha
xor
push
in
iret
xor
mov
pop
mov
adc
jno
xor
pop
clc
pop
and
mov
and
test
xchg
pop
mov
push
sbb
nop
and
aaa
in
stc
xchg
pop
outsl
in
push
xor
in
xor
push
outsb
mov
mov
sbb
dec
pop
push
mov
mov
cmc
scas
push
xchg
xchg
jb
jae
mov
mov
or
aaa
jle
sarl
ds
daa
pop
jae
popa
fcoms
in
cli
or
and
xchg
jl
sub
aad
mov
push
insl
adc
cmp
shl
into
jne
sub
pop
xor
test
mov
gs
jns
inc
mov
xor
sub
cmc
dec
fiadds
sub
bound
in
sub
pop
pop
leave
pop
clc
sbb
and
xor
inc
jl
xor
jo
sub
adc
mov
testb
in
sahf
adcb
adc
fimuls
test
sub
dec
pop
push
and
das
out
cltd
mov
enter
inc
lods
adc
leave
dec
jns
mov
inc
and
dec
bound
cmp
outsb
inc
sub
mov
scas
clc
out
xchg
jns
or
jmp
jne
leave
dec
or
or
push
add
adc
gs
adc
cmp
xor
mov
sahf
fs
push
jbe
es
adc
and
cli
or
dec
pop
or
or
add
adc
xor
add
adc
mov
and
jne
inc
mov
mov
pop
or
xchg
adc
cwtl
ret
xor
push
dec
test
ret
cmpsl
out
stos
call
pop
fiaddl
lods
je
ret
ja
jae
stos
sbb
outsl
sub
jo
push
dec
push
cwtl
or
or
dec
rorb
cs
adc
pop
movsl
jmp
ss
test
mov
out
scas
testl
mov
stos
cmp
scas
sahf
and
inc
shlb
subl
lcall
inc
or
jle
jno
sbb
popa
shrl
add
mov
jnp
fisubs
sbb
gs
into
sbb
js
xchg
inc
into
pop
xchg
dec
adc
xor
stc
cmp
jns
and
xor
clc
mov
and
ret
cwtl
or
jg
hlt
je
adc
sbb
and
and
xlat
mov
fs
xor
mov
xor
and
fidivrl
sbb
cmp
lcall
inc
gs
jne
lods
aas
lret
push
xlat
lcall
jne
sub
mov
fstpl
mov
xchg
les
push
outsl
jo
push
adc
adc
jo
pop
jno
gs
mov
dec
xor
pop
ss
mov
mov
dec
iret
dec
dec
fisttpll
dec
jmp
repnz
stc
cwtl
add
and
jg
mov
push
or
inc
lcall
in
push
add
lods
pusha
call
sbb
sub
mov
pop
or
inc
nop
lock
sub
mov
icebp
pop
add
orb
cmp
subb
push
insb
gs
movsb
or
out
pop
loope
in
pop
add
mov
pushl
addr16
lret
cld
dec
imul
lods
stos
movsl
js
and
xor
dec
adc
push
in
xor
sbb
add
sub
mov
enter
dec
mov
daa
and
stos
daa
out
xchg
pop
ret
shrl
cmp
xor
push
mov
xor
sbb
jmp
mov
sub
stos
mov
pop
inc
pop
mov
jmp
xorb
sqrtps
adc
and
adc
test
adc
jbe
stos
mov
icebp
xchg
in
sbb
sub
and
add
and
sub
int3
mov
mov
xchg
inc
mov
xor
out
hlt
jmp
xchg
add
and
and
not
int3
and
xchg
ljmp
dec
push
sub
dec
or
loope
outsb
mov
cmp
inc
add
imul
shll
add
adc
jb
dec
xor
cmc
clc
movsl
xor
inc
test
leave
scas
and
lods
xchg
in
xchg
push
mul
out
jo
in
in
lea
inc
pushf
jo
jno
cmp
push
add
rcl
outsl
push
loope
xor
mov
cmp
add
xor
ja
add
ja
pop
dec
out
push
das
adc
xor
mov
js
ljmp
movsb
shll
pushf
pop
xchg
add
ds
imul
sub
xor
dec
add
dec
xor
cmp
sahf
jo
daa
and
scas
bound
cmp
push
dec
mov
or
sbb
cmp
stc
imul
repz
out
xchg
out
mov
dec
and
pop
adc
sbbl
enter
inc
lea
and
test
enter
out
push
inc
andl
xchg
std
ljmp
push
pop
inc
jbe
adc
add
jecxz
fs
dec
mov
xor
jg
push
sub
push
pop
xchg
add
cmc
add
cmp
test
mov
or
bound
xor
mov
out
and
inc
int3
jb
mov
xchg
je
loope
in
rcrl
jmp
cmp
mov
aaa
nop
shlb
test
fimull
xor
jp
jmp
lret
or
xor
cmp
mov
pop
inc
divb
pushf
ret
add
mov
js
push
push
nop
cmp
adc
dec
jae
fidivl
jmp
and
sub
outsb
cmpsb
cmp
lods
xchg
and
loop
add
inc
inc
push
jl
mov
sub
or
icebp
ljmp
or
fs
add
test
mov
push
inc
xor
mov
aas
lcall
xor
adc
xor
adc
xchg
int3
lds
cmp
jns
and
adc
jge
inc
push
movb
inc
aam
pop
and
lahf
xchg
xchg
mov
or
cmpsl
or
jbe
sbb
lcall
add
sbb
adc
rclb
movsb
shl
push
movsb
adc
sti
push
rorb
shr
jae
jbe
and
call
jbe
inc
add
add
add
mov
sbb
xchg
adc
sbb
pop
dec
or
mov
bound
mov
xor
add
push
or
add
imul
in
dec
dec
cmp
mov
cmp
insl
jb
push
insb
or
jb
cmp
cltd
add
cmp
insb
jae
mov
sub
sbb
cmp
ret
xor
xchg
or
sub
dec
add
and
or
jmp
pop
dec
xor
mov
xorb
loop
cli
jmp
call
negb
pop
xchg
imul
xor
fsts
movsl
aas
lcall
mov
add
enter
sbb
xchg
shrb
jne
add
sbb
fdivrl
xchg
adc
mov
js
pop
stos
push
in
cmp
mov
push
test
adc
arpl
outsb
sbb
mov
repz
jno
mov
xchg
lret
iret
or
into
gs
shl
fs
es
leave
add
cwtl
stc
fwait
cwtl
sub
sub
lock
out
add
repz
lretw
ss
popa
inc
orb
insl
xor
test
fbld
pop
repnz
cwtl
int3
adc
fimuls
frstor
pop
add
daa
mov
inc
jno
cmp
enter
dec
ret
rclb
jnp
pop
pop
jno
addr16
fdivrp
in
leave
jmp
idiv
fdivr
cmp
cltd
fimull
in
repz
adc
loope
test
popf
clc
std
aas
mov
shlb
ljmp
cmpsl
jl
cmp
popa
mov
lock
jl
ret
clc
cli
cmp
jmp
add
sbbb
test
and
push
add
inc
dec
or
rclb
dec
add
out
add
mov
mov
shrb
sub
mov
add
adc
lahf
call
dec
in
rorl
lock
push
add
test
shlb
andb
push
sbb
inc
stos
jns
call
or
xor
sub
sbb
adc
or
xor
adc
inc
or
iret
adc
xchg
in
sbb
adc
xchg
or
add
jne
or
mov
or
and
inc
add
dec
fcoml
mov
mov
push
inc
inc
cmp
or
add
clc
aas
add
dec
fcoms
lods
mov
and
dec
insb
xchg
pusha
and
cmp
sub
sbb
or
and
clc
ds
in
loopne
rclb
les
dec
lods
in
dec
mov
push
xor
and
adc
or
clc
cmp
dec
int3
xchg
shlb
inc
movsb
nop
mov
pop
xchg
dec
and
xor
mov
adc
inc
cld
cmp
lock
loopne
rolb
mov
mov
dec
push
inc
inc
xor
sub
sbb
adc
hlt
cmp
mov
adc
xchg
and
adc
dec
mov
adc
add
clc
cmp
in
xchg
in
aam
enter
adc
je
fs
pop
dec
mov
and
dec
sbb
and
inc
fmul
mov
mov
pusha
push
mov
cmp
xor
xchg
adc
add
lock
mov
adc
xchg
cwtl
and
adc
dec
xor
sub
sbb
adc
hlt
aaa
sub
dec
mov
inc
xchg
test
pusha
dec
push
xchg
dec
and
xor
mov
or
clc
ss
dec
fcoml
mov
movsb
inc
xchg
test
pop
dec
push
xchg
inc
and
inc
sub
mov
or
cld
xor
xchg
fsubs
int3
inc
shlb
dec
je
and
adc
add
in
xor
fsubl
dec
rclb
mov
push
dec
dec
xchg
cmp
xor
and
inc
or
inc
xor
mov
adc
and
dec
mov
test
cwtl
xchg
mov
jl
je
mov
and
dec
sub
and
adc
or
insb
xor
adc
and
dec
lods
xchg
mov
jl
jo
fs
dec
dec
xchg
cmp
xor
mov
clc
xor
call
xchg
shlb
inc
movsb
xchg
mov
dec
xchg
cmp
xor
mov
testb
in
fsubs
int3
inc
shlb
dec
js
insb
and
push
cmp
adc
mov
das
adc
and
inc
mov
jl
insb
dec
pop
xchg
push
and
xor
mov
or
cld
cs
dec
loopne
fsubs
enter
lods
inc
mov
je
push
and
xor
inc
adc
inc
sub
aam
enter
test
pushf
inc
mov
push
dec
cmp
or
inc
sub
mov
adc
and
dec
mov
inc
xchg
test
pop
dec
push
xchg
cmp
mov
or
adc
hlt
sub
int3
mov
and
dec
jo
pusha
and
cmp
xor
and
dec
or
and
inc
aam
mov
cwtl
xchg
mov
jl
insb
pusha
mov
and
dec
sub
cld
sub
mov
adc
and
dec
lods
xchg
movsb
and
je
push
xchg
dec
and
xor
adc
or
and
inc
les
and
dec
mov
fs
mov
inc
and
dec
sub
sbb
adc
inc
daa
in
mov
adc
and
dec
mov
inc
xchg
test
pop
dec
push
xchg
inc
and
sub
hlt
es
dec
rclb
nop
mov
push
inc
dec
cmp
xor
and
sbb
mov
in
aam
enter
test
pushf
and
push
adc
dec
sub
adc
and
call
xchg
les
mov
cwtl
mov
pusha
dec
push
xchg
dec
and
sub
adc
or
and
inc
int3
mov
and
dec
test
pop
dec
mov
xor
dec
or
cld
and
mov
adc
nop
and
pop
adc
cmp
xchg
sbb
or
clc
and
mov
adc
and
dec
mov
movsb
and
adc
dec
xor
and
adc
or
inc
and
mov
adc
and
dec
mov
movsb
and
jo
fs
dec
dec
xchg
cmp
xor
adc
and
inc
clc
pop
or
xchg
loopne
aam
enter
adc
fildl
inc
test
dec
pop
in
mov
xchg
into
lock
push
push
adc
inc
outsl
je
xor
pop
lret
adc
mov
cmp
insl
cmp
repnz
cli
aaa
insl
cs
sub
xor
pusha
or
push
adc
pop
jo
lods
jae
inc
cmp
jno
int3
ds
xor
insl
fmull
xor
gs
and
jns
fidivrs
ja
outsl
jb
and
jae
push
test
imul
dec
push
dec
xchg
jae
add
outsb
imul
popa
je
sub
js
shrb
ljmp
outsb
imul
mov
and
outsl
data16
mov
push
jae
rcll
insb
fs
lods
xor
je
int
imul
aas
xor
rorb
addr16
xor
push
jne
addr16
jo
and
or
dec
jae
xchg
fdivs
shlb
push
inc
inc
cmp
xor
sub
and
sbb
adc
inc
add
and
dec
fcoms
enter
cli
inc
cmpsl
push
out
dec
fs
xchg
cwtl
and
test
andb
je
insb
and
push
mov
and
dec
sub
adc
scas
cwtl
loope
clc
inc
add
and
call
aam
adc
xchg
aam
les
mov
lods
and
mov
andb
insb
xchg
and
pop
dec
mov
dec
cmp
xor
sub
and
mov
adc
adc
xchg
or
add
adc
inc
add
and
dec
loopne
fsubs
rolb
mov
dec
adc
mov
mov
inc
mov
push
xorb
js
jo
fs
pop
xchg
push
and
xor
sub
sub
dec
sbb
adc
or
adc
cld
cwtl
mov
or
mov
adc
int3
sbb
and
jo
adc
pusha
mov
push
and
dec
inc
xchg
inc
and
inc
xor
mov
adc
and
push
pop
dec
sub
sub
cmp
or
and
nop
scas
jecxz
ljmp
push
cmp
inc
and
sub
adc
jne
sub
inc
add
mov
test
add
sub
aam
mov
imul
in
loopne
or
inc
fsubr
dec
add
xor
push
xorb
inc
sub
stc
sbb
mov
inc
or
add
shlb
xor
mov
jo
lods
ret
push
or
or
or
clc
rolb
into
or
cmpsl
dec
js
inc
and
pop
sbb
jb
cmp
push
loopne
or
cmpl
inc
jne
cwtl
xor
add
push
rolb
xor
call
push
cli
push
call
fnstenv
roll
and
aas
cld
jo
push
pop
ret
xor
ret
les
je
pop
add
push
sub
sbbb
inc
add
rep
mov
stos
push
push
jno
cmp
xor
or
push
incl
add
test
ret
cmp
stc
xor
clc
repnz
sub
out
add
js
insb
and
je
cmp
call
or
cmp
mov
fdivs
repz
dec
mov
inc
cmp
cmc
mov
insl
outsb
dec
arpl
sbb
jle
sbb
jns
shrl
and
jg
lods
mov
sub
xor
rclb
pop
dec
mov
in
std
cmp
xchg
in
rorb
imul
cmp
scas
jp
nop
mov
data16
sbb
or
jne
fadds
int
loope
iretw
mov
dec
xchg
flds
inc
icebp
out
sub
dec
adcb
enter
sbb
push
test
movsl
mov
push
fs
mov
addr16
or
or
xor
adc
int
enter
cwtl
or
inc
test
pop
shrb
push
push
xchg
enter
movsl
xor
mov
lcall
subb
fdivs
pop
out
inc
add
in
xchg
pop
aas
push
xchg
add
jb
mov
ret
adc
xchg
rclb
inc
test
pusha
pushf
push
xor
rcrb
mov
xchg
jne
add
xor
pushf
push
jbe
jns
pop
push
cs
jne
xor
jle
pop
lret
jns
pop
and
adc
xchg
in
xchg
adc
or
fnstenv
inc
jp
adc
imul
nop
jecxz
and
popf
mov
cmp
fcomp
lcall
dec
xchg
jge
adc
sarb
out
mov
out
or
into
sbb
jbe
movsb
aaa
xor
std
jle
xlat
cmp
not
mov
jl
jae
loope
push
dec
inc
int3
fistps
repnz
sub
incb
pop
testl
inc
push
push
push
dec
push
dec
cmp
inc
js
mov
iret
xor
pop
push
sub
int3
sub
repz
sbb
push
xor
xor
popa
push
dec
push
dec
xor
cmp
inc
push
in
and
xor
cmpl
nop
jae
pop
test
adc
hlt
dec
rolb
or
aam
jo
fldenv
sub
loopne
mov
dec
outsb
push
fs
outsl
push
ja
jae
xchg
repnz
inc
or
xchg
cmp
cmp
inc
adc
fidivl
adc
repnz
push
inc
lahf
enter
add
cmpsb
or
into
push
sbb
pushf
adc
push
and
dec
push
dec
or
sbb
repnz
dec
sbb
scas
xor
push
out
xchg
pop
loopne
jne
lret
loopne
pop
adc
mov
bound
xor
cmp
xor
inc
loopne
lret
add
inc
lret
adc
add
sti
sbb
sub
pop
test
add
adc
adc
andl
mov
and
adc
dec
cmp
cmp
push
mov
shrl
rclb
imul
pusha
jge
add
pusha
shrb
cmp
mov
adc
fldcw
jo
call
mov
mov
test
mov
pop
mov
mov
adc
add
inc
inc
pop
ss
adc
xor
xchg
repz
mov
js
test
add
cmp
adc
sbb
adc
xor
int
jmp
add
dec
mov
mov
and
or
cwtl
add
inc
or
psubusb
xorl
sub
xchg
mov
arpl
cmp
lcall
aaa
adc
add
popf
lods
adc
and
jb
outsl
data16
xchg
popa
insb
sti
popl
pop
jne
sub
jg
sbb
inc
sahf
sbb
xor
mov
jo
cs
test
cmp
adc
inc
fs
andl
mov
js
push
xor
and
cs
sbb
div
mov
rorl
cwtl
jae
or
xor
or
add
add
ret
inc
out
adc
imul
dec
inc
sbb
or
xchg
test
mov
arpl
shlb
pop
mov
mov
andb
mov
mov
pop
dec
add
and
test
ja
adc
sarl
rolb
stc
mov
xor
js
mov
lea
cld
test
cltd
or
sbb
mov
bound
pop
and
dec
or
or
cltd
sbb
movaps
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cltd
sbb
or
pusha
push
pop
jl
insb
sbb
jo
mov
lods
push
cmpsb
xor
mov
orl
and
xor
and
dec
sahf
adc
jb
movsb
cltd
jo
sbb
scas
mov
xlat
mov
pop
xor
enter
hlt
movsb
cmpb
inc
mov
or
add
inc
movsb
add
pusha
cmpb
dec
sbb
mov
loopne
or
jle
cwtl
test
shll
cld
adcl
mov
mov
push
iret
mov
in
call
nop
mov
mov
ficompl
rcrb
loope
or
stc
xorb
movsb
cmp
into
or
aas
pop
xor
dec
inc
push
int
adc
fsts
or
push
cmp
adc
call
mov
adc
sbb
and
sbb
inc
sbbb
adc
mov
jns
movsb
and
xchg
cld
mov
push
cmp
mov
sbb
mov
inc
or
mov
cmp
xchg
inc
xchg
lret
add
pusha
js
mov
dec
sbb
cs
sub
and
sbb
adc
adc
mov
in
mov
adc
and
dec
enter
rolb
mov
mov
lods
dec
test
movsb
and
mov
andb
push
and
xor
push
add
sbb
adc
add
add
les
popa
mov
jg
rol
hlt
fcmovb
pushf
sub
dec
sub
mov
lret
popf
repnz
and
fs
in
dec
jg
xchg
es
inc
adc
dec
adc
nop
mov
fwait
pop
or
mov
xchg
and
push
mov
adc
mov
xorb
inc
rclb
push
mov
and
dec
mov
or
sub
adc
enter
sbb
xchg
pushf
mov
add
adc
mov
and
js
mov
es
push
add
clc
pushl
out
jg
outsb
icebp
sbbb
dec
inc
fs
xor
jo
adc
icebp
js
ret
push
pop
mov
sub
inc
hlt
es
js
pop
insl
pop
push
or
push
inc
cmp
jo
xchg
xor
dec
adc
cltd
xor
dec
adc
xor
cmp
lret
or
and
dec
adc
enter
insb
lret
or
mov
enter
cli
or
repnz
inc
or
push
ret
movhps
and
adc
push
andl
add
mov
and
pop
ret
add
lock
mov
sub
test
lds
std
and
dec
sbb
xor
xchg
add
xchg
inc
push
add
sahf
add
mov
adc
idivb
aad
iret
decl
js
jp
outsl
loopne
jmp
mov
test
push
daa
cmp
jl
add
mov
stc
popf
sti
jmp
add
jbe
int3
add
sub
test
adc
stos
clc
scas
push
jecxz
cli
clc
jmp
cmpsl
aam
mull
iret
add
int3
xchg
push
cmpsb
scas
add
or
cmp
dec
dec
pop
inc
in
cmpsl
xchg
cmp
xor
push
hlt
in
pop
cmp
sahf
xchg
pop
call
cmpsb
lock
movsl
mov
popa
rcrl
and
add
xchg
clc
repz
mov
fldl
xchg
and
mov
push
pusha
les
int3
inc
add
add
aas
jno
or
mov
clc
pop
add
dec
lea
cmc
add
shrl
pop
mov
icebp
adc
and
lds
mov
insb
add
jmp
xor
in
xchg
mov
jno
add
popa
test
ja
stos
in
das
add
dec
les
leave
cmp
add
jne
int
clc
lcall
xchg
cmp
push
mov
iret
clc
and
and
loop
loopne
xor
jp
rclb
add
jle
push
jl
mov
out
das
lea
mov
sti
inc
dec
loope
jmp
pop
jg
sub
jge
mov
jl
rcr
push
arpl
push
int3
and
call
cli
cmp
jp
and
lods
cmp
mov
cmp
addb
add
xlat
cmp
mov
pop
or
mov
jecxz
cmpsb
jl
dec
mov
cltd
jne
fldt
cmp
sbb
and
xor
dec
nop
pop
add
cmpsb
xchg
js
add
mov
cmpsl
add
inc
pop
mov
sub
add
sub
scas
cmp
pop
add
rcr
add
call
mov
pop
push
xchg
cmp
push
andl
sbb
gs
std
rorb
adc
add
ror
add
cmpsb
fmuls
mov
