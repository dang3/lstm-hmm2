jmp
xor
and
add
sbb
gs
and
push
and
jmp
jno
cmpb
add
fsub
ret
jmp
les
jmp
push
pop
shrb
pushl
jmp
pop
popa
dec
mov
jmp
gs
jmp
jb
shr
stos
mov
jmp
jnp
jmp
ret
cli
add
add
add
push
call
jmp
push
push
jmp
and
jno
jmp
cmp
jmp
mov
popl
jmp
dec
sbb
les
add
call
mov
inc
out
pop
dec
call
sub
jecxz
fwait
pop
je
fadds
lea
repnz
inc
out
in
out
dec
ljmp
dec
mov
xor
add
and
cmp
inc
es
pop
cmp
das
lret
out
popf
inc
in
sub
jecxz
sbb
rcrb
dec
std
fiaddl
popf
pop
jecxz
fwait
pop
inc
test
inc
in
int3
mov
ror
xchg
dec
mov
in
popf
inc
out
mov
pop
jecxz
dec
add
add
and
and
iret
out
pop
pop
jmp
add
cmpsl
pop
into
or
iret
xor
dec
xor
mov
sbb
xor
loopne
es
pop
into
or
insb
into
sahf
xchg
jns
inc
movsb
jmp
dec
test
imul
mov
xchg
rcl
cmp
mov
sub
aad
push
mov
out
mov
into
mov
fwait
scas
mov
jge
sub
inc
out
dec
int
pop
xor
sbbb
xor
bound
jecxz
fwait
pop
jge
mull
sub
sub
mov
or
jecxz
repnz
xchg
es
pop
into
ret
inc
sbb
inc
xor
mov
fildl
and
daa
push
incb
out
mov
jno
rcrl
clc
sub
inc
out
cmp
test
cmp
pop
jecxz
popf
inc
out
fldt
mov
imul
popf
pop
into
cltd
cli
cmp
mov
cmc
pop
jecxz
fwait
pop
das
scas
jbe
out
push
addr16
push
into
mov
jno
std
xchg
into
data16
pop
jecxz
popf
inc
out
pop
cmpsl
push
lds
pop
cmp
dec
je
push
xchg
gs
pop
mov
dec
dec
fstpt
adc
es
inc
in
or
mov
cmp
dec
in
lret
pop
or
cmp
and
dec
lds
pop
rcrl
dec
xlat
cltd
push
ljmp
cmpsl
ljmp
push
loop
icebp
popa
dec
out
push
into
jp
pop
jle
dec
pop
int
dec
ficoms
leave
out
add
es
inc
out
out
add
jp
pop
loop
fxam
jecxz
popf
inc
call
and
xchg
dec
stc
dec
out
xor
outsl
lcall
outsb
lcall
insl
call
fwait
pusha
iret
jmp
call
push
or
sub
push
lcall
cli
adc
aas
insb
into
pop
xchg
cmp
pop
cmpsl
add
and
cld
aas
vpmacssww
mov
dec
sahf
out
rorl
fwait
es
pop
into
xchg
cltd
push
jnp
mov
int
popf
cmp
sbb
xor
dec
out
or
icebp
popa
pop
iret
jle
pop
out
fwait
pusha
inc
loopne
mov
cmp
pusha
outsl
pop
inc
shrl
test
in
sbb
xchg
lcall
and
push
imul
shll
dec
xchg
into
ds
inc
inc
ss
pop
into
inc
sahf
loopne
rcll
into
sbbb
into
cs
fildll
cmc
das
aam
shlb
push
es
pop
into
push
lcall
out
sub
and
sbb
lds
iret
mov
jno
pop
bound
jbe
arpl
adc
fsubrl
adc
int
cmp
push
xchg
loop
ret
pop
pop
add
fsub
es
lods
xor
sbbb
pushf
jnp
ljmp
push
loop
xchg
cmpsl
pop
into
ficompl
call
jecxz
pushf
in
cmc
aaa
mov
sub
and
loope
jmp
in
dec
cmp
jge
pop
jecxz
cmp
addr16
xor
ja
mov
std
arpl
mov
xchg
pop
into
rcrl
dec
cmp
mov
daa
jbe
scas
into
scas
xchg
int
inc
xor
out
dec
cld
push
sub
pop
jecxz
popf
inc
out
push
dec
es
test
rorb
mov
push
lcall
es
inc
out
aaa
pop
iret
ret
aad
xchg
shrl
subb
sbb
inc
out
daa
fldcw
rcrl
call
rcrb
mov
jecxz
popf
inc
out
pop
inc
sbb
push
xor
dec
push
arpl
cmp
scas
insl
pop
dec
lds
pop
and
dec
cmp
out
and
pop
inc
mov
out
fldenv
cmp
das
mov
es
fildll
ret
cltd
gs
test
inc
and
insl
jecxz
ss
aaa
push
xor
pop
loop
aaa
daa
mov
loop
sbb
icebp
jge
jecxz
mov
adc
pop
mov
dec
adc
aas
mov
cmpsb
stc
push
fldt
mov
lods
stc
push
fistpl
xchg
mov
in
pop
pushf
out
mov
gs
xor
dec
inc
mov
outsb
repnz
jge
cmovb
cmpsb
insb
pop
jecxz
pushf
shl
push
sbb
mov
cltd
call
int
mov
out
lcall
or
sbb
outsl
sub
call
and
das
outsl
inc
add
pop
pop
pop
in
xor
repz
stos
fildl
jbe
cmp
pop
insb
sbb
out
jb
mov
movsl
es
rorb
sub
cli
ljmp
daa
out
stc
imul
xor
popw
int
pop
mov
movsl
sbb
es
pusha
cmp
xlat
call
cmpsl
jne
out
and
into
dec
sahf
jecxz
dec
imul
es
pop
jnp
pushf
inc
jecxz
xor
in
rcrl
test
cmp
push
pop
jecxz
xchg
add
dec
sub
pop
dec
es
pop
jns
xchg
mov
daa
dec
dec
imul
lret
sub
out
popf
out
out
cmp
jp
xchg
fisubl
xchg
pop
jecxz
fwait
pop
jecxz
pushf
jno
jge
call
imul
dec
inc
stos
xchg
dec
out
and
pop
fstpt
adc
dec
sarb
xchg
arpl
rcrl
mov
arpl
pushf
and
dec
jbe
mov
mov
pushf
cld
dec
inc
fwait
pop
fldt
jecxz
cltd
push
lods
mov
push
inc
iret
lds
in
pushf
lods
pop
push
xchg
pop
loop
scas
pusha
jecxz
fsubp
es
pop
sub
xchg
popa
jecxz
pushf
pop
sbb
into
and
mov
pop
sub
pop
jnp
pushf
inc
jecxz
xor
out
aad
outsl
xchg
das
push
out
cmp
ret
inc
popa
jecxz
fwait
stos
ret
fmull
popf
jecxz
popf
out
dec
pop
in
dec
lods
jecxz
pushf
pop
loop
scas
pop
jecxz
pushf
push
sbb
jns
loop
dec
insb
sub
dec
pop
sub
ret
dec
pop
outsb
scas
sub
dec
sub
mov
loop
xor
es
dec
sub
ss
dec
pop
loop
out
mov
push
popf
mov
stos
dec
fsubrl
lods
pop
in
dec
lods
pop
push
mov
ret
scas
pop
jecxz
pushf
push
inc
push
imul
in
jae
sbb
mov
fdivr
xchg
in
ss
jecxz
inc
pusha
jecxz
dec
adc
pop
jnp
pushf
inc
jecxz
das
imul
cmc
inc
rcrb
xchg
lods
out
sbb
pop
loop
scas
popa
jecxz
fwait
adc
push
sub
les
stos
dec
scas
into
mov
movsb
pop
dec
pop
sbb
dec
into
jae
xchg
arpl
rcrl
add
cmp
xchg
sbb
fmull
ds
sub
cmpsb
cmp
push
inc
lds
popa
out
and
iret
mov
pushf
push
dec
out
pop
stc
sub
mov
lea
into
icebp
xchg
repz
cmpsb
into
mov
xor
dec
les
dec
sub
test
loop
out
mov
push
popf
ret
dec
jmp
jecxz
jecxz
pushf
lods
dec
push
pushf
pop
loop
scas
popa
jecxz
pushf
push
repnz
fwait
push
pop
pop
dec
mov
jp
push
inc
lds
popa
out
cs
and
sub
inc
or
fisttps
aam
outsb
lcall
call
sub
pop
cmp
dec
lahf
and
or
sub
popa
and
cs
es
dec
call
icebp
popa
mov
cmpsl
es
pop
cmpsl
xchg
ss
mov
ss
adcb
xchg
ss
mov
ss
mov
ss
mov
ss
mov
ss
adcb
xchg
ss
mov
ss
mov
ss
imul
jns
test
movsl
push
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
fsubrs
cmpsl
xchg
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
pop
cmpsl
adc
xchg
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
rorl
mov
call
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
ss
mov
fiadds
xchg
clc
jnp
cmp
mov
lret
aas
sbb
lods
movb
mov
dec
lret
outsb
pusha
cmp
cmpsl
cmc
in
jns
sbbl
mov
inc
jae
pop
test
bound
ljmp
xchg
mov
pop
xchg
push
cmpsl
inc
or
mov
jae
into
popf
outsb
stos
cmp
mov
jmp
adc
xor
cmp
lahf
popf
mov
aaa
push
popf
sbb
pop
ret
fistps
in
iret
in
fwait
jge
sub
mov
mov
stos
mov
add
es
lds
movsl
and
xchg
or
mov
cmp
bound
dec
inc
mov
sti
mov
mov
dec
mov
sub
lock
sbb
test
int3
pop
xchg
cmp
lods
mov
inc
and
and
xchg
fistpll
outsb
fcomp
sub
xor
jp
xchg
xor
loopne
push
and
rorb
testb
jno
dec
jl
negb
in
jno
push
pop
mov
jge
sbb
adc
sbb
ss
or
xor
xor
scas
jle
pop
fisttps
cltd
nop
cmp
xchg
test
pcmpeqd
mov
xor
scas
stos
pop
arpl
dec
and
inc
xchg
cmpl
push
stos
cmp
adc
add
sbb
mov
xchg
ljmp
sbb
test
ja
ret
and
dec
push
add
push
shrl
pop
mov
insb
inc
mov
inc
xor
sahf
test
mov
iret
popf
xchg
aaa
mov
adc
xlat
repz
mov
inc
push
push
or
mov
ret
xor
inc
loop
inc
repz
bound
cs
mov
jnp
and
mov
sub
mov
adc
lret
sbb
mov
loop
inc
jle
mov
lret
test
stos
xor
fs
mov
mov
mov
mov
and
fistpll
cmpb
lahf
mov
mov
mov
mov
jle
or
andb
fdivl
xchg
sub
ljmp
sub
imul
adc
mov
mov
ss
pop
dec
cmp
adc
push
out
shlb
jb
jmp
pop
inc
dec
dec
pop
mov
jne
js
gs
lods
mov
outsb
or
push
bound
mov
out
push
mov
out
aad
outsb
push
fxch
lret
dec
je
lods
sub
data16
sar
xor
push
mov
lret
sti
push
sbb
pusha
popa
fcoml
movsl
mov
stc
dec
or
aad
lock
add
inc
xor
int
int3
push
fwait
ss
cli
sub
jmp
adc
jns
pusha
xchg
test
mov
jnp
mov
out
cwtl
jge
mov
aaa
push
fildll
pop
cltd
stos
and
loope
cs
or
mov
loop
fistpll
daa
leave
ljmp
inc
mov
cmp
es
cmp
call
and
xor
push
js
test
aas
dec
adc
sub
adc
fdivl
or
inc
cs
and
addr16
mov
scas
call
ret
mov
adc
jmp
popa
test
dec
pop
das
shll
xchg
into
ljmp
mov
test
dec
or
fisttpll
xchg
inc
add
cmp
adc
fists
jae
push
fisubrs
push
pop
add
shrb
sahf
ret
in
push
nop
repz
test
xchg
sbbb
out
std
stos
fwait
push
test
dec
mov
pusha
add
or
xchg
push
add
or
cmp
xchg
loop
add
mov
mov
jns
rolb
loop
and
xor
imul
jo
movsl
scas
dec
mov
cli
xorb
pop
cmp
dec
aaa
movsb
into
push
pop
cld
loopne
idiv
push
cmc
int
xor
xchg
in
stos
rcrb
or
mov
gs
dec
leave
div
jle
sub
add
scas
xor
mov
daa
imulb
adc
mov
xchg
xchg
mov
or
jo
cmp
adc
leave
inc
jp
and
movsl
inc
loop
lret
cwtl
or
ficoms
je
lds
or
or
fcompl
movsl
or
popf
sub
ja
std
stos
xor
or
cmp
jb
pop
mov
loopne
push
dec
pop
scas
and
add
ret
ret
xor
std
pop
shrb
adc
outsb
js
shr
dec
pop
or
pop
out
shll
mov
sti
push
aaa
scas
xor
loop
pop
sbb
aam
jno
dec
inc
rcll
fcom
inc
add
jbe
dec
shl
aad
test
jmp
push
push
xchg
aad
aad
and
ja
cmp
lds
out
mov
call
call
jl
dec
stc
stos
jo
or
push
xchg
jnp
je
lcall
dec
push
push
dec
bound
push
mov
lea
js
and
jno
pop
adc
add
subl
inc
mov
mov
sbb
js
call
jle
pop
push
or
mov
dec
cmpsb
leave
stos
lahf
fistpll
jb
sub
adc
gs
inc
call
xor
add
inc
hlt
test
sbb
das
pushf
jns
add
push
dec
cmp
jns
in
sbb
sub
push
inc
test
aam
xchg
jo
xor
mov
stos
pop
cld
mov
icebp
jp
cltd
loopne
push
sub
cli
mov
or
out
push
div
insb
test
pop
push
sub
jp
repz
cs
sub
out
jl
fcomps
jo
lock
cmpsb
jp
or
push
mov
sbb
cltd
fdivr
sbb
adc
jg
sti
xchg
icebp
mov
popa
pop
js
add
lea
or
push
dec
stos
sarl
adc
jb
push
popa
jnp
test
sbb
mov
or
sub
jns
test
test
or
movsb
in
jbe
fld
sub
xchg
enter
outsl
jb
inc
test
add
int
mov
negl
jecxz
ret
jle
outsb
mov
insl
es
pop
rcrl
das
adc
jb
shrl
faddl
mov
mov
fdivrs
adc
ror
mov
repnz
arpl
test
dec
dec
sbb
add
stos
adc
lcall
lock
scas
xchg
aaa
jne
pop
push
in
ds
daa
lahf
jo
je
mov
adc
and
cbtw
popf
and
cwtl
repz
movsb
ficomps
stos
cli
nop
push
mov
xchg
iret
imul
aas
cmpsb
pop
adc
roll
addl
outsl
rorb
int3
mov
lds
adc
dec
jecxz
xor
mov
pop
nop
rclb
jge
inc
mov
leave
inc
add
pop
xchg
inc
addl
add
add
test
push
jl
xchg
pop
sbb
fcmove
mov
pop
dec
roll
loop
mov
push
xchg
mov
and
jno
xchg
xor
lcall
leave
xchg
sub
scas
xor
sarl
xchg
fs
test
repnz
fnstenv
dec
mov
xchg
ret
inc
xchg
ud0
mov
sub
ss
rclb
imull
imul
in
push
mov
jg
in
inc
pop
enter
mov
insb
rcl
xlat
rorb
insb
insl
xchg
nop
dec
sbb
cmp
mov
mov
adc
sbb
or
ljmp
jae
cwtl
inc
adcb
mov
cmp
lea
jp
shll
mov
jl
mov
pop
data16
add
dec
daa
dec
cmpsl
enter
out
in
insl
push
mov
pop
imul
lahf
mov
adc
daa
aam
mov
inc
inc
sub
mov
adc
lcall
push
aam
xor
imul
mov
nop
stc
cmp
mov
insl
jns
cmpb
orb
xchg
dec
cmpsl
cmp
jno
sbb
es
mov
out
lods
call
ss
scas
pop
dec
mov
cmp
jg
mov
xor
loop
jmp
and
mov
push
push
pushf
test
popa
mov
jg
sti
dec
pusha
pop
lock
aaa
mov
gs
mov
fsubrl
pop
and
into
mov
and
fiadds
and
xchg
into
ret
inc
inc
jmp
lret
cmp
push
lcall
xor
xor
push
xorl
fwait
adcl
adc
clc
shrl
sarb
lock
xor
jns
imul
sahf
mov
ret
or
clc
sbb
mov
out
cmp
xchg
mov
adc
loopne
pop
scas
stc
jmp
or
push
jae
xor
cmp
add
mov
and
rcr
iret
cmp
and
mov
pop
mov
sub
popf
xor
or
aaa
mov
pop
movsl
dec
movsl
mov
mov
jecxz
push
gs
leave
mov
clc
imul
loope
push
in
mov
bound
imul
inc
icebp
or
pop
les
aaa
pop
pop
insl
jbe
sbb
daa
faddl
pop
pop
sub
mov
lds
pop
jne
jmp
jno
aam
dec
pop
test
cmpsl
lret
cld
mov
popf
or
daa
inc
pop
fs
repz
notl
jo
sbb
cmp
mov
stos
mov
icebp
sub
je
lods
xchg
and
lcall
addr16
add
sarl
cmp
xchg
xchg
and
add
mov
or
adc
out
mov
das
sub
iret
push
sbb
inc
push
std
sbb
xchg
push
out
sbb
add
inc
lahf
push
pop
call
add
stc
arpl
rol
pop
cmpsb
ljmp
rorb
mov
mov
jp
mov
gs
mov
sbb
push
mov
mov
out
and
jb
aam
dec
push
or
aas
loop
pop
jle
mov
rol
pushl
inc
push
nop
cmp
inc
adcb
xor
rorb
sti
add
jnp
mov
fistl
in
pop
xchg
push
movsl
cmpsb
jbe
bound
push
loop
mov
rorb
aam
dec
fwait
mov
mov
mov
sbb
ss
in
iret
dec
pop
cmpsl
jne
into
sub
out
ja
sti
out
int
loopne
scas
insl
iret
dec
gs
cmp
je
int3
fimull
mov
fisubrs
mov
xchg
jmp
iret
out
scas
mov
add
insl
mov
out
repz
sbbl
dec
mov
mov
push
loop
lahf
outsl
pushf
ret
pop
shrb
push
pop
out
subb
int
negb
mov
hlt
bound
inc
dec
pop
jmp
jmp
js
ffree
or
loopne
cld
mov
push
push
dec
cmc
pinsrw
pop
mov
push
mov
pushf
aas
out
pop
add
and
sarl
sbb
setg
nop
cmp
sub
adc
js
out
jno
cs
mov
fstpt
test
rcll
lret
push
jecxz
cwtl
xadd
sub
pop
mov
lods
push
cmp
pop
mov
mov
mov
sti
cwtl
sbb
xor
test
jmp
mov
daa
cmpsl
dec
call
stos
xlat
loop
xchg
add
adc
faddp
push
in
pop
xchg
xchg
xchg
jnp
push
loope
jmp
outsb
roll
mov
lds
mov
or
dec
out
aas
mov
cwtl
lahf
lcall
push
push
and
lods
mov
movsb
test
es
leave
test
cmp
lods
cmp
and
sub
xor
xlat
mov
jmp
out
mov
jmp
xor
call
ret
dec
mov
cmpsl
xchg
dec
addb
insb
sub
sbb
iret
cmp
movsl
pop
and
filds
into
jge
insl
lret
xchg
icebp
cmp
jb
xor
push
dec
dec
jg
mov
inc
ja
pop
dec
ret
lret
ss
cltd
or
cmp
or
xor
inc
outsb
xchg
dec
das
mov
and
pop
mov
mov
scas
lret
and
repnz
push
inc
cmpsb
or
stc
xchg
lahf
or
mov
or
fucomp
adc
divl
xor
pop
xchg
inc
pusha
mov
mov
cmp
dec
jo
scas
pop
mov
xchg
mov
movsl
or
rcrb
inc
add
mov
push
jno
jge
mov
testb
mov
shlb
fs
pop
pop
mov
cmc
stc
cmp
or
add
push
popa
inc
mov
sbb
add
repnz
cltd
cmp
gs
test
sub
cmp
pop
sbb
and
jle
cwtl
lds
pushf
movsl
xchg
insb
ret
jo
inc
jb
arpl
call
stc
add
pop
push
roll
icebp
cmp
outsb
std
push
add
xchg
sub
xor
cmp
mov
mov
sbb
and
push
xchg
in
and
cmp
add
ret
mov
hlt
popf
fucomip
push
pop
sbb
int
mov
adc
cli
std
adc
push
lods
mov
repz
daa
outsl
mov
fstps
lret
add
xchg
mov
aaa
inc
daa
mov
pushf
inc
divb
mov
xor
aam
push
xchg
les
vcvtss2si
inc
jl
out
jno
into
data16
jb
sbbl
inc
out
imul
les
call
or
jne
movb
bound
pop
and
cmp
cwtl
comiss
std
lods
add
push
mov
cmpb
add
inc
dec
and
add
ret
xor
lahf
lret
pop
mov
cmp
bound
jl
mov
add
sub
push
xchg
aad
addl
lock
adc
jbe
or
inc
add
add
out
popa
ljmp
pop
in
and
xor
push
pop
xor
push
or
ss
loop
lods
lods
mov
mov
xor
sti
push
push
popl
xor
lea
sub
cmpsl
sub
ret
add
lock
sbb
lods
sbb
push
xor
xor
pusha
xchg
mov
inc
push
repnz
xchg
sbb
push
xorl
sub
dec
pop
adc
in
dec
leave
sbb
cs
add
push
outsb
xlat
daa
mov
ret
mov
aam
adc
dec
int3
repz
mov
pop
mov
out
mov
mov
or
push
stos
xor
push
xchg
fwait
imul
inc
dec
arpl
outsb
call
mov
push
mov
xchg
test
and
jno
rorb
out
jmp
out
scas
cmp
mov
mov
mov
mov
in
jno
mov
jl
pop
test
cmpsl
lock
push
test
dec
orl
dec
xchg
mov
inc
cmp
push
mov
cld
jno
xchg
popf
sbb
sti
dec
sub
jns
mov
std
ret
mov
dec
sub
ljmp
movsl
and
pusha
adc
and
jmp
jl
push
je
popa
test
cli
jmp
mov
not
dec
jl
out
adcb
mov
imul
in
in
jg
sub
insb
stos
fisubl
push
imul
es
int
dec
sub
jbe
pusha
or
stos
lock
add
arpl
test
sub
incb
subb
mov
or
insl
ljmp
push
adc
fidivs
jo
jnp
or
aad
notl
jae
sti
cmp
dec
pop
push
jnp
rolb
push
inc
mov
call
xor
lds
mov
fs
sti
cmpb
or
and
sbb
mov
mov
test
jb
adc
sub
cmp
lods
test
dec
add
cmp
mov
roll
ret
or
rclb
sbb
push
add
xchg
call
sbb
loopne
dec
xchg
outsl
test
in
lock
jge
mov
cmp
test
add
pushl
movsb
in
adc
mov
out
fldcw
push
ljmp
in
push
out
sub
into
loope
nop
sub
outsl
push
pop
inc
push
sti
jns
sub
jg
jle
cwtl
loopne
pop
mov
or
orb
adc
aas
pop
daa
mov
cmpsb
fwait
scas
sarb
out
xchg
add
in
fimull
jmp
imul
mov
push
xchg
jno
outsl
add
pop
sub
sbb
xchg
mov
mov
shrb
jge
int3
fwait
mov
insl
push
mov
mov
mov
mov
push
dec
dec
mov
test
push
std
shlb
sti
xor
mov
popa
fbstp
mov
bound
add
push
sahf
mov
mov
jmp
nop
sahf
or
stos
mov
and
mov
mov
xchg
inc
inc
scas
sub
inc
mov
xchg
jns
sbb
dec
shrb
idivl
andb
and
cs
cmp
sbb
mov
call
icebp
out
pushf
mov
sahf
data16
push
and
scas
add
jg
rorl
sub
popl
sub
insb
mov
mov
jne
stos
fadd
daa
lock
test
mov
dec
notl
icebp
outsl
lods
xor
xchg
mov
mov
into
cmp
aaa
push
mov
andb
adc
jns
sbb
adc
syscall
clc
fists
lods
jecxz
aam
or
adc
shlb
or
jo
cmp
mov
pop
cmc
jecxz
lahf
mov
ret
fmulp
jmp
inc
pop
adc
in
xchg
cs
pop
lds
pop
dec
ret
sbb
in
mul
test
add
cwtl
mov
sub
xchg
les
xchg
in
push
pop
and
daa
out
cwtl
pushf
mov
shr
jmp
stos
lahf
jnp
dec
xchg
inc
subl
pop
lea
mov
dec
lods
xor
mov
popa
jl
aad
mov
pop
mov
lcall
dec
sbb
dec
repz
test
cmp
push
ss
mov
mov
jb
sarb
xchg
mov
add
js
jg
and
inc
out
pusha
pop
daa
jno
dec
dec
std
daa
mov
scas
les
mov
inc
cmp
pop
rolb
out
mov
int3
int
xchg
enter
xchg
dec
cmp
and
xchg
fcompl
pop
insb
rcl
les
or
mov
fnstsw
jecxz
scas
push
pop
icebp
jne
out
xchg
push
xchg
sarl
loope
cmp
xchg
jmp
mov
aaa
mov
ja
push
pop
lcall
out
jae
inc
out
into
mov
insl
test
dec
and
int
sub
xchg
add
js
mov
xchg
fidivl
sub
sti
pop
and
cmp
test
cmp
rorl
data16
sbb
out
sbb
fistps
js
ret
cmp
cwtl
cmpsl
adc
les
push
out
imull
fidivs
mov
addr16
mov
adcb
push
xchg
cmp
add
pop
stos
scas
xchg
jle
pop
and
ret
mov
mov
lahf
and
scas
jmp
popa
adc
popf
jle
scas
add
mov
fistpll
push
cli
cld
imul
mov
mov
cltd
or
es
sub
jp
not
or
xchg
sbb
jnp
sub
xor
mov
push
lret
repnz
add
pmulhuw
dec
sbb
fdivrs
sarb
in
jle
dec
call
mov
lcall
ret
sbb
pop
sbb
stos
adc
rolb
pop
sub
adc
pop
cltd
out
aaa
testb
pop
sbb
cld
sbb
pop
pop
fbstp
enter
addl
dec
mov
aad
movsb
daa
mov
ret
lcall
ds
mov
add
sub
cld
jg
scas
cmp
roll
lods
cs
imul
data16
inc
xor
add
and
test
mov
iret
fnstcw
cmp
in
xor
add
loopne
or
xor
aad
ret
cltd
outsl
decb
adc
mov
cld
rcrl
cli
repnz
aad
fabs
mov
or
cmp
pop
out
stos
pop
dec
scas
stc
fsub
xor
jg
xor
lods
mov
movsb
lods
movsb
loope
dec
ret
rcrb
push
lods
mov
inc
or
pop
jbe
mov
sbb
pop
and
dec
std
inc
push
aas
ljmp
jp
xchg
push
mov
sbb
lret
mov
fisubl
fwait
xchg
ficoml
sti
xchg
ja
repz
cli
loop
out
fisubrl
xchg
nop
and
mov
icebp
adc
sti
jmp
cmp
in
lret
repz
push
aaa
pusha
stos
jnp
push
fnsave
push
cli
xchg
jno
pop
inc
mov
fs
fwait
add
sbb
adc
mov
dec
jnp
popa
cltd
dec
sub
and
xor
mov
sbb
sub
inc
rcrb
repnz
clc
sbb
testl
inc
dec
lret
pop
test
dec
gs
mov
xchg
aas
pop
lahf
sub
xchg
rclb
mov
out
jae
jg
jns
mov
daa
cwtl
insl
lods
mov
fildll
and
idivl
jl
aam
outsl
test
movsl
push
mov
sti
and
pop
aad
pop
fnsave
adc
and
test
mov
pop
in
pop
aas
aad
mov
ret
lcall
std
enter
mov
out
imul
jle
cld
fwait
cltd
mov
iret
out
std
add
cmp
mov
aad
es
jp
test
fbstp
inc
lods
push
lods
ljmp
test
inc
sub
cmp
jecxz
lcall
andl
fwait
out
js
xor
data16
testl
rcr
push
mov
sbb
out
sbb
xor
mov
jno
orb
in
jne
arpl
insb
and
or
xor
push
ss
shll
lret
cmp
and
mov
and
jno
mov
insb
dec
cmp
xchg
inc
sbb
jne
lret
loop
xchg
lret
push
aam
aas
aam
mov
pop
les
push
mov
out
mov
sbb
adc
lret
clc
jae
sub
lods
pusha
subl
mov
movb
movl
stc
jb
xlat
addr16
add
out
mov
mov
rolw
clc
jae
sbb
and
adc
jb
mov
mov
mov
roll
clc
jae
and
arpl
or
sub
jmp
fdivs
xorw
jmp
rcl
sarl
sub
push
ljmp
ret
add
add
add
test
ret
mov
addb
dec
cmpsb
or
and
jecxz
mov
push
mov
cs
stos
pop
int
ja
incb
mov
pusha
xchg
mov
lahf
fnsave
dec
dec
xchg
pop
js
push
nop
cmp
sahf
imul
nop
sub
or
aam
sahf
test
sbb
push
xchg
sub
dec
xchg
push
adc
pop
mov
or
call
call
xor
test
rorb
mov
add
cli
ret
dec
js
push
pop
lcall
pop
ror
insl
jo
clc
xor
test
lret
xor
push
mov
jo
mov
sub
aad
pop
pop
fwait
int3
aas
sbb
pop
xchg
sub
inc
mov
or
mov
repz
sarl
insl
inc
scas
xor
cmp
out
pop
gs
push
scas
test
mov
rorl
inc
add
insb
cmp
into
inc
mov
jb
or
cltd
mov
sub
push
sub
mov
fcmovnu
popf
mov
adc
cmc
xchg
das
pop
scas
ret
mov
daa
add
test
fildl
push
mov
stos
stc
std
push
pop
xchg
jl
or
adcb
aas
aaa
push
imull
sbb
cwtl
sbb
push
aad
aad
jo
orb
adc
cmc
jb
dec
inc
inc
mul
aas
mov
add
pop
repnz
inc
pop
ja
sbb
jo
out
jmp
clc
out
iret
loopne
or
cmc
push
jle,pn
xchg
pushl
push
js
xlat
pushf
insb
inc
pop
fsubrs
jl
lret
push
push
cli
and
out
adc
ret
dec
out
add
dec
xchg
scas
test
mov
sets
xor
ret
aam
pop
push
sarb
mov
and
or
rcrl
enter
jl
out
das
sbb
pop
adc
or
add
push
dec
out
push
pusha
sub
sarl
mov
xchg
rcr
mov
push
sub
lret
scas
insb
jp
addr16
repnz
sub
jb
pop
and
lds
andb
push
aad
pop
mov
movswl
js
mov
adc
xor
xchg
aaa
popf
add
add
loopne
add
add
add
add
xor
test
sbb
cmp
cmc
outsl
ficoml
loopne
repz
repz
repnz
xchg
jo
jae
nop
sti
je
shll
inc
dec
xchg
dec
mov
lcall
push
jo
cmp
dec
imul
pop
mov
inc
cli
ficoml
jbe
push
dec
test
push
pop
rclb
jp
pop
popf
push
push
push
das
jp
repz
inc
loop
fdivl
mov
mov
lea
push
addr16
push
in
jno
sti
xchg
add
push
add
sahf
add
add
add
add
push
push
ja
xchg
fstps
out
xchg
pushf
adc
xor
std
imul
dec
pop
hlt
flds
ret
movsb
xchg
int3
xchg
sub
sahf
jns
das
inc
jno
int3
std
ljmp
jns
movntq
out
hlt
ret
mov
adc
dec
push
mov
movsl
cmp
jb
sbb
lds
aam
add
int
dec
ficoms
daa
popf
test
adc
fldl
pop
push
gs
shl
ret
push
mov
inc
mov
movsl
clc
aaa
push
jo
jne
inc
mov
data16
fst
shlb
addl
push
xchg
mov
xchg
cmp
pop
mov
loopne
mov
fidivrs
or
popf
push
jle
xorl
xchg
cmp
js
jbe
jns
sub
aam
fnstenv
jns
add
stos
cltd
cltd
test
inc
cmp
lea
add
fnstsw
or
adc
push
out
pushf
jecxz
cmpb
xor
scas
xchg
or
push
frstor
out
sahf
testb
add
adc
rcll
divb
jnp
popf
xchg
jg
dec
or
movsl
jp
push
xchg
popf
inc
in
cmpb
sub
cmp
shrl
push
or
rorb
mov
jbe
out
xchg
popa
pop
push
xchg
mov
xchg
lahf
push
cltd
hlt
inc
xchg
movsb
aam
fcom
out
ret
dec
cmp
sbb
push
pop
inc
arpl
mov
xchg
cmp
dec
lcall
test
mov
into
adc
stc
leave
movsb
mov
cli
xchg
test
add
ss
popa
jno
mov
popa
jmp
test
mov
push
iret
inc
int3
in
and
imul
adc
std
fidivl
daa
rclb
out
push
scas
jbe
clc
add
imul
dec
cmpsb
sbb
add
mov
fnstenv
loop
inc
lret
fimull
test
ljmp
hlt
mov
push
lcall
aaa
dec
ds
loop
test
xchg
daa
jp,pn
inc
adc
dec
movsb
dec
xchg
lret
cmp
aam
cmp
sbb
fs
push
mov
mov
push
xchg
sahf
pop
sti
and
insb
sub
in
jne
sbb
pop
mov
pop
dec
adc
or
push
xor
repz
cmp
sub
pop
sub
dec
mov
sbb
jnp
dec
mov
cmp
pop
adc
push
xor
jno
test
cltd
hlt
push
pushf
les
adc
sbb
dec
and
push
fwait
leave
cmpsb
mov
scas
icebp
mov
dec
adc
sub
leave
inc
aad
cli
xor
movl
loop
dec
pop
jbe
dec
cmp
push
xlat
jbe
xor
mov
lahf
or
lahf
insl
push
mov
mov
xchg
adc
inc
sub
loop
jae
xchg
and
xchg
xchg
cmp
addr16
rcrb
sbb
adc
out
cltd
icebp
movsb
sub
sub
sahf
sbb
inc
shrb
xchg
or
test
pusha
outsl
inc
aad
lahf
int3
ret
rclb
cltd
sbb
cs
xchg
leave
add
or
fisubs
xor
lahf
arpl
pop
fldcw
lcall
jge
pushf
lock
mov
data16
popl
or
cld
outsl
xchg
adc
or
add
mov
insl
push
scas
cmp
jo
or
cmpsb
lahf
pop
or
cmc
xor
cmc
adc
ret
or
dec
scas
ss
mov
mov
subl
mov
pop
xor
mov
or
in
jmp
mov
dec
and
imul
call
dec
roll
dec
addr16
adc
push
call
pop
adc
push
push
outsl
loop
sbb
inc
or
or
xchg
addr16
mov
cmpsb
push
and
mov
pop
aaa
mov
jb
std
inc
cmpsb
rorb
fmulp
add
xchg
push
sub
pop
out
cmp
mov
inc
out
mov
ja
data16
sub
les
push
mov
cmpsb
sbb
push
adc
or
es
enter
sbb
loope
out
int3
mov
scas
das
std
int3
mov
add
and
sbb
jo
adc
das
repnz
or
add
icebp
loopne
add
incl
add
add
lcall
mov
push
leave
fwait
and
mov
mov
jle
push
orb
arpl
sub
test
xor
pop
inc
addr16
push
in
cmovbe
repnz
lods
unpckhps
jo
sbb
pop
stos
and
outsb
insl
sbb
mov
adc
jno
push
dec
dec
mov
lea
sub
or
popf
pop
jmp
dec
push
int3
mov
fiaddl
lret
sahf
adc
fs
loopne
daa
xor
arpl
jecxz
push
stos
sbb
shll
sub
stos
je
lret
cmpsb
nop
add
xor
inc
in
ret
data16
in
stc
dec
pop
and
test
pop
xchg
sbb
sub
scas
mov
adc
gs
push
and
add
push
ds
xchg
jge
pop
mov
scas
adc
jp
scas
arpl
popf
fldlg2
jbe
jmp
inc
jg
stos
dec
jo
loopew
iret
adc
mov
call
cs
jl
pop
push
into
hlt
jnp
out
push
and
add
push
push
and
sti
fcomp
mov
xchg
push
mov
ret
or
les
movsl
xchg
mov
ret
dec
rcl
xor
outsl
jbe
and
push
je
jns
cmp
jmp
pop
aas
push
jmp
jg
bound
and
stos
frstor
push
gs
jg
mov
in
sahf
out
sub
pushf
outsb
lods
dec
icebp
pinsrw
shlb
mov
xor
sbbl
inc
lock
lea
cmp
data16
cmp
or
add
outsb
ret
inc
jge
shll
repnz
pop
and
push
loope
divl
or
mov
inc
or
repz
inc
lea
aaa
out
add
fcmovu
push
pop
mov
or
push
pop
xor
xor
fsubrp
inc
mov
pop
insl
mov
fcoms
jae
jne
pushf
xor
xlat
hlt
inc
stos
call
das
cmpsl
ljmp
mov
push
ja
loope
mov
push
sbb
scas
jno
sub
add
lret
jae
mov
rcll
and
jge
call
adcl
push
in
adc
cmp
test
sbb
lods
pop
cmc
jo
push
ret
push
dec
rorb
mov
clc
test
imul
adc
pop
xlat
ficoml
inc
cmp
sub
mov
mov
mov
and
mov
cmp
jge
insl
jecxz
xor
popa
add
adc
stc
rorb
pop
repnz
jo
fildl
jmp
sbb
inc
fildl
pop
pop
fiadds
fistpl
cmp
jl
stos
repnz
sti
insb
jbe
jg
push
pop
jo
out
mov
int
dec
mov
push
xchg
mov
lock
in
pushf
sar
mov
aad
sbb
dec
mov
xor
ljmp
pop
and
mov
or
mov
dec
sub
repz
add
pop
rcl
lret
idivb
cld
xor
xchg
sarb
push
cmp
ficompl
pop
dec
adc
aaa
imul
xor
push
dec
es
mov
test
mov
jle
lock
inc
adc
fadd
xor
nopl
adc
fstpl
mov
lret
xchg
pusha
ret
fwait
mov
xchg
mov
pop
inc
in
sbb
sbb
fwait
mov
push
adc
pushf
xchg
mov
dec
pusha
pop
jns
inc
mov
sub
add
aam
mov
sbb
sub
dec
scas
das
imul
mov
inc
movsl
jge
xlat
push
adc
cmp
es
add
les
jle
jnp
xchg
mov
and
xor
daa
push
icebp
lcall
cmp
cmp
jge
and
jle
or
sbb
iret
lock
pop
cs
push
sub
jmp
jnp
imul
outsl
imul
pushf
xchg
mov
dec
pusha
pop
add
stos
mov
sub
add
lret
jae
mov
pop
or
xchg
push
sbb
icebp
in
and
xor
inc
jns
pop
jecxz
mov
andb
shlb
push
dec
dec
inc
stos
shl
xchg
or
lret
jle
push
outsb
out
jl
scas
push
rcrb
push
sbb
out
lds
mov
jo
stc
sbb
out
inc
fdivrl
inc
lcall
loopne
xchg
and
rcrl
int3
mov
icebp
jl
push
js
arpl
aam
pop
inc
lcall
sahf
inc
xor
add
in
outsb
lea
adc
adc
xor
sbb
cmp
xchg
inc
xor
ljmp
xor
in
sub
test
xchg
aam
adc
adc
add
sarl
cmp
or
push
hlt
stos
lcall
push
mov
lret
add
sub
fwait
xor
mov
mov
or
ss
sub
enter
sub
inc
test
fiadds
jl
orb
cs
pusha
add
and
jb
xlat
xor
cwtl
repz
mov
jge
inc
xchg
orl
mov
cmp
stos
ds
cli
sub
cmc
scas
jbe
xor
cmp
movsl
mov
sbb
push
push
mov
je
xor
int
out
jmp
mov
xchg
pop
sub
js
aaa
test
mov
mov
or
push
popl
push
mov
dec
ffreep
frstor
fpatan
outsl
inc
push
adc
cmpsl
cmpsl
cmpsl
test
add
loop
out
pushf
dec
sbb
jle
mov
and
dec
cmp
movsl
mov
sbb
push
push
mov
je
xor
int
out
jmp
mov
xchg
pop
sub
js
aaa
test
mov
mov
or
push
popl
push
mov
dec
ffreep
frstor
fpatan
outsl
inc
push
adc
cmpsl
cmpsl
cmpsl
test
add
loop
out
pushf
dec
sbb
jle
dec
mov
push
fbld
inc
push
push
mov
je
xor
int
out
jmp
mov
xchg
pop
sub
js
aaa
test
mov
mov
or
push
popl
push
mov
dec
ffreep
frstor
fpatan
outsl
inc
push
adc
cmpsl
cmpsl
cmpsl
test
add
loop
out
pushf
dec
sbb
jle
xor
pop
or
das
jge
add
enter
aaa
lds
push
xor
mov
jle
push
imul
daa
inc
stc
sub
sbb
movsb
and
subl
cmp
movsb
std
xchg
sub
imul
shlb
and
repnz
or
push
add
call
and
jge
inc
jge
pop
mov
and
lods
aaa
shrb
addr16
ljmp
aam
js
xchg
pop
sbb
and
mov
sbb
push
push
mov
je
xor
int
out
jmp
mov
add
xchg
sti
cs
and
clc
jns
out
fwait
pop
cmp
out
aaa
xchg
lret
pop
arpl
or
test
adc
pop
xor
sub
dec
mov
push
lret
es
arpl
jno
jns
jg
stos
lea
lahf
cmpsb
dec
jmp
mov
sahf
xchg
xor
es
fdivl
sti
push
and
jmp
mov
pop
sbb
xchg
adc
stc
dec
xor
imul
jecxz
jge
lods
adc
dec
dec
insl
in
cltd
aad
cmp
into
ds
fdivrp
js
add
adc
repnz
lea
and
cmpsl
sbb
call
stc
pop
xor
adc
mov
gs
adc
or
ljmp
aad
pop
mov
shrl
insl
jno
add
adc
mov
shlb
cmp
stos
xor
cwtl
and
addb
mov
imul
or
lcall
mov
add
xor
mov
mov
or
ss
sub
lcall
mov
fildl
jbe
jg
push
and
sbb
in
jl
mov
xlat
push
sub
aam
dec
inc
push
cmp
nop
xor
push
lret
es
arpl
jno
jns
jg
stos
lea
lahf
cmpsb
dec
jmp
mov
sahf
xchg
xor
es
fdivl
sti
push
and
call
in
lds
jae
movsl
les
jo
iret
push
les
imul
jecxz
jge
lods
adc
dec
dec
insl
in
cltd
aad
cmp
into
ds
fdivrp
js
add
adc
repnz
lea
and
pop
adc
pop
subl
gs
inc
pop
pop
mov
push
fmull
mov
ljmp
aad
pop
mov
shrl
insl
jno
add
adc
mov
shlb
cmp
fistpl
dec
daa
push
cmp
mov
lcall
mov
add
xor
mov
mov
or
ss
sub
ffreep
hlt
and
cmp
jo
test
mov
clc
addb
xlat
int
xchg
or
mov
dec
rcll
in
mov
sti
gs
shll
rol
movsl
xor
test
call
mov
add
jne
iret
enter
cld
dec
ffreep
frstor
fpatan
or
cmpb
cmp
stc
push
jg
add
jne
fld
and
adc
pop
sbb
ds
scas
adc
jno
nop
sub
xor
mov
ja
pop
cmp
cmp
push
push
sub
stos
cltd
push
xor
push
fmull
mov
ljmp
aad
pop
mov
shrl
jge
pop
negl
out
rcrb
jg
mov
inc
lea
lods
adc
dec
dec
insl
in
cltd
inc
outsb
mov
inc
xor
inc
fistps
nop
loope
dec
push
xchg
or
pop
mov
mov
sti
iret
enter
cld
dec
ffreep
frstor
fpatan
or
cmpb
cmp
stc
push
jg
add
jne
fld
and
adc
pop
sbb
ds
scas
adc
jno
nop
sub
xor
mov
ja
mov
cmp
in
ljmp
test
push
aas
sub
inc
push
mov
push
sbb
pop
fwait
or
dec
idivl
pop
nop
add
push
in
adc
adc
mov
pop
jmp
les
sahf
fs
test
movsl
dec
cwtl
sub
mov
dec
into
or
jecxz
imul
fisubrs
xchg
adc
ffreep
xor
and
lods
adc
dec
dec
insl
in
cltd
xchg
adc
xor
inc
mov
or
notb
mov
sbb
and
movsb
es
or
sbb
add
in
dec
test
adc
or
ljmp
aad
pop
mov
shrl
addr16
xor
lods
mov
cltd
sbb
and
test
orb
and
les
pop
sub
pop
pop
inc
and
mov
pusha
add
and
jb
xlat
xor
lret
inc
add
and
cmp
push
cmp
hlt
hlt
dec
sub
push
lahf
add
dec
ljmp
icebp
sbb
xor
mov
mov
mov
sub
fwait
xor
mov
mov
or
ss
sub
data16
pop
sbb
add
xchg
imul
or
fldt
xlat
stos
mov
push
xlat
cmp
pop
jmp
imul
mov
icebp
add
jne
iret
enter
cld
dec
ffreep
frstor
fpatan
inc
scas
dec
jmp
lods
lret
lods
fsubl
rclb
cmp
pop
ljmp
sub
jo,pn
pop
xor
std
outsl
fisttpl
cmp
pop
icebp
inc
pop
pop
mov
push
fmull
mov
ljmp
aad
pop
mov
shrl
addr16
xor
lods
mov
cltd
sbb
and
inc
in
mov
cwtl
sti
subl
jp
divb
ljmp
inc
and
mov
pusha
add
and
jb
xlat
xor
lret
inc
add
and
cmp
push
cmp
hlt
hlt
dec
sub
push
lahf
add
addl
aad
pop
gs
ds
or
out
jbe
sub
fwait
xor
mov
mov
or
ss
sub
data16
pop
sbb
add
xchg
imul
or
les
jnp
mov
shl
mov
test
mov
icebp
add
jne
iret
enter
cld
dec
ffreep
frstor
fpatan
lret
sub
xchg
and
add
ret
xchg
and
push
insb
mov
fsub
adc
pop
sbb
ds
scas
adc
jno
nop
sub
xor
xor
fs
inc
inc
mov
xor
push
jmp
mov
pushf
test
push
lret
es
arpl
jno
jns
jg
stos
sub
sub
sahf
movsb
lock
outsl
in
rclb
mov
daa
or
popa
cltd
sbb
incl
and
out
inc
xchg
inc
xlat
push
lds
clc
jnp
sbb
jno
jmp
clc
or
xor
inc
mov
mov
inc
cmp
jne
lds
fwait
xor
mov
mov
or
ss
sub
enter
sub
inc
test
fiadds
jl
and
aam
or
mov
dec
rcll
in
mov
sti
gs
shll
sbbl
xor
mov
cmp
jns
aam
inc
movsl
jecxz
test
push
lret
es
arpl
jno
jns
jg
stos
sub
sub
sahf
movsb
lock
outsl
in
rclb
mov
daa
or
popa
cltd
sbb
incl
and
out
inc
xchg
inc
xlat
push
lds
clc
jnp
sbb
jno
stc
dec
dec
shll
inc
jmp
mov
sub
jbe
cmp
stc
aad
loopne
scas
jnp
movsl
and
dec
mov
sti
adc
dec
lcall
mov
xchg
out
xor
cli
popa
fst
jecxz
cmp
test
sub
cld
jns
int3
and
repz
inc
cmp
and
cmp
mov
add
mov
fiaddl
movsl
negb
ss
outsb
and
jno
xor
sbb
xor
pop
sahf
cmp
pop
mov
xchg
stc
daa
mov
loope
clc
mov
push
cmp
ret
popf
pusha
mov
push
cmp
js
mov
or
mov
repnz
sbb
mov
sbb
xchg
pop
cmp
repz
pop
mov
jmp
and
pop
or
mov
mov
xor
dec
pop
sbb
adc
test
xchg
pop
int
jle
cmp
popa
and
inc
mov
add
test
xchg
mov
mov
shl
fildll
pop
mov
aam
insb
xchg
mov
or
idiv
mov
dec
jnp
bound
shrl
jge
xor
jb
movsb
push
jg
inc
pop
insb
rorb
into
es
mov
aas
add
cwtl
sahf
push
lods
mov
je
rolb
pushf
dec
movsl
dec
shll
cmp
lods
dec
dec
nop
jl
xchg
shlb
inc
xchg
test
inc
mov
cmp
jbe
lret
xchg
repnz
push
sbb
lods
int3
jge
out
into
stos
outsl
jp
shlb
lahf
lahf
mov
cld
pop
stc
outsb
aas
punpcklwd
decl
mov
fimull
das
cmp
ret
sbb
std
cwtl
fwait
rcrb
mov
sti
cmpl
daa
and
cmp
movb
cltd
std
inc
sub
sbb
lds
imul
push
ljmp
inc
les
dec
stos
jnp
stos
cld
and
jae
lods
pop
xor
inc
shrb
sbb
cmp
test
jae
ljmp
nop
xchg
ja
lds
xor
mov
sub
scas
les
mov
das
add
stos
enter
enter
mov
ljmp
adc
cltd
and
jne
dec
xor
ja
andl
lock
clc
dec
xchg
or
movsb
xor
sub
stos
popa
inc
shr
push
cmpsb
jl
adc
push
dec
hlt
jo
shrb
test
dec
xor
pop
push
mov
jle
and
jae
sti
scas
mov
cld
xchg
or
cs
mov
ret
mov
xor
xor
cmp
pop
cs
aad
xchg
jg
imul
inc
mov
call
ds
push
fimull
lahf
jp
fs
cmc
push
cli
aam
or
cmpsl
dec
repz
mov
and
test
pop
repz
mov
jle
out
mov
frstor
mov
pop
cmp
mov
cmp
inc
push
lcall
adc
xor
jmp
and
aam
test
or
loope
imul
jge
std
es
xor
mov
pop
cmp
imul
mov
fstpt
fildl
jmp
mov
jp
cmp
push
and
lea
ficoml
popa
or
enter
sbb
mov
cli
xor
pop
xchg
filds
mov
pop
adc
out
shlb
divb
mov
aaa
aam
rcll
xor
mov
daa
mov
enter
pop
pusha
lock
sbb
adc
filds
and
icebp
or
push
ror
test
jns
dec
pushf
mov
add
xchg
lock
jne
loop
adc
push
xchg
mov
call
pop
daa
inc
lret
sahf
cmpl
pop
subb
pop
into
sti
repz
adc
sbb
fldl
adcl
mov
push
ja
jecxz
out
dec
cld
lcall
js
and
mov
add
lahf
sbb
insl
gs
cld
push
mov
push
jno
pop
push
xor
rcl
adc
lock
mov
lret
push
adc
sub
or
push
pop
lret
sbb
mov
jbe
adcb
inc
ret
jp
cmp
adc
mov
inc
cmp
lea
jnp
and
add
and
movsb
add
lods
mov
rclb
icebp
nop
je
cld
stos
and
arpl
repz
iret
iret
out
mov
jb
int
xor
xchg
inc
imul
dec
dec
fcmovnb
loope
jne
jmp
out
ret
std
cltd
push
adc
cmp
shl
mov
adc
shlb
into
add
or
gs
je
pop
and
jp
sahf
pop
bound
clc
imul
push
pop
je
inc
xchg
jo
es
jg
xor
ffreep
hlt
pop
repnz
rolb
dec
cltd
test
mov
mov
roll
or
mov
aas
and
jle
gs
test
push
adc
shrb
xor
scas
jnp
xchg
mov
lret
mov
push
inc
bound
cs
sbb
xor
jge
or
test
mov
dec
or
sub
and
adc
push
add
inc
push
repnz
sub
pop
push
sti
push
dec
movsl
dec
inc
outsb
popf
adc
jp
fmul
lods
cmpsl
aas
and
add
add
repz
popf
or
mov
lret
fidivs
xchg
sbb
cmpl
dec
xchg
dec
pusha
iret
adc
fstpl
std
mov
push
dec
pushf
ret
cmp
std
cs
adc
pusha
clc
sub
arpl
imul
stos
xchg
xor
lret
add
sbb
imul
movsl
imul
idivl
ficoml
stos
int3
push
shl
xchg
test
push
lods
inc
xlat
cmpsl
push
jnp
adc
xchg
inc
xchg
add
xorb
pop
movsb
cvtps2pi
movsl
mov
fdivr
mov
sbb
mov
inc
push
push
test
mov
mov
testb
call
fldt
sbb
iret
dec
xlat
fidivs
mov
sbb
xlat
sbb
nop
and
add
stos
or
lahf
adc
mov
dec
push
push
pop
imul
pushf
fnstsw
fs
jns
xor
push
fstpt
xor
and
inc
mov
fwait
adc
fstpt
pop
fisttpll
cmp
ja
rcll
dec
andb
scas
or
jne
shrl
outsb
mov
int3
jp
push
cmpsl
fistpll
stos
cmc
cmp
scas
outsl
lahf
push
mov
scas
cmpsl
sbb
push
inc
cli
pop
cmp
fstps
sbb
xor
rcll
out
inc
jno
mov
loope
leave
push
outsl
or
push
mov
adc
jae
lea
pop
adc
mov
or
inc
scas
inc
mov
cld
mov
sub
mov
pop
inc
outsb
push
mov
adc
cli
jb
inc
push
popf
shll
js
mov
insb
in
cmpl
add
mov
bound
adc
push
mov
xchg
jnp
repnz
cmp
mov
fsubrs
lods
push
sti
daa
repnz
jl
sbb
mov
stos
and
rcpps
addl
insl
enter
stc
cmp
jecxz
mov
adc
adc
jecxz
rol
dec
out
scas
cmp
fisubrl
subb
cmc
jnp
dec
add
mov
stc
lret
push
xor
add
pop
aas
or
dec
pop
sbb
sbb
hlt
fidivrs
adcb
cmpsl
jns
add
and
jl
mov
test
jo
xor
hlt
inc
add
int
mov
mov
or
jns
out
push
fnstenv
shll
mov
mov
inc
sahf
aas
mull
mov
xchg
add
movsb
in
int3
cmp
mov
jg
jb
loop
leave
mov
cs
cmpsl
sbb
xor
pop
int3
mov
incl
loopne
push
sub
cmp
flds
cmp
mov
sub
or
and
sub
enter
or
mov
push
sbb
fldt
stos
push
mov
xor
cmp
jb
mov
shl
xor
sub
fisubl
push
xor
cs
mov
aaa
repnz
stc
push
mov
outsb
pop
add
sbb
iret
and
jmp
sub
xor
pop
popf
xor
push
and
stc
xor
push
dec
lods
sti
jge
aas
clc
add
and
pop
fcomp
xor
sbb
in
das
sub
mov
cwtl
pop
ja
leave
mov
outsl
cmpsl
icebp
test
xorb
push
orb
dec
test
pop
bound
mov
push
jne
sbb
inc
fcmove
mul
mov
adc
push
popf
hlt
jg
insb
pop
jmp
aam
jg
xchg
das
xorl
jle
cs
mov
pushw
cmp
fs
push
push
cmp
sbb
mov
xchg
cmp
push
cld
scas
mov
dec
ljmp
xchg
xlat
push
jno
push
lcall
or
cmp
sbb
adc
sbb
lahf
add
push
jb
and
inc
pop
icebp
mov
arpl
jge
into
dec
ret
popa
xchg
fisubrs
or
hlt
std
out
aaa
sub
jns
pop
pop
xchg
mov
faddp
pop
add
rolb
xor
and
jle
sub
lds
push
jmp
arpl
push
cwtl
movsb
mov
mov
mov
arpl
cs
bound
mov
mov
mov
gs
jle
xchg
inc
sub
repnz
add
or
mov
push
push
sbb
rclb
ret
dec
inc
and
jb
sub
or
xchg
jmp
pop
xor
rcrl
dec
push
inc
xor
sub
test
lret
mov
lock
mov
mov
mov
mov
cli
xor
ret
cmp
add
hlt
loope
nopl
jge
lock
ret
pop
adc
iret
pop
fisubrs
jo
pushl
enter
fisttpl
xchg
or
ret
and
cs
insb
jp
inc
fildl
fwait
movsb
popf
popa
push
mov
mov
mov
and
mov
jl
nop
and
dec
hlt
xchg
dec
out
mov
push
sbb
ja
data16
dec
mov
push
into
inc
stos
xadd
rclb
jae
repnz
imul
jecxz
pop
xor
dec
repnz
and
sub
dec
les
in
loop
std
pusha
cltd
subl
pop
xchg
cmp
adc
into
mov
adc
xchg
cmc
inc
insb
fiadds
lahf
cltd
jp
cmp
out
or
or
je
out
inc
stc
mov
or
mov
out
mov
dec
test
imul
mov
decl
push
pmaddwd
push
push
data16
dec
sbb
xlat
sarl
arpl
rclb
mov
cmc
ja
pop
mov
xor
or
hlt
sbb
push
pop
cmp
mov
dec
loope
int3
inc
pop
push
fstpl
dec
dec
or
push
orl
int3
xchg
and
in
sub
pop
sub
lds
mov
jno
cmp
sub
mov
outsb
aad
push
fldcw
stc
mov
cmpsb
clc
inc
cwtl
push
cmp
lcall
into
inc
daa
in
xor
cmp
pop
adc
cmp
lds
insb
mov
std
leave
jmp
and
push
into
mov
dec
and
and
xchg
jle
jno
pop
outsl
addr16
and
negl
imul
fmull
jne
shrb
dec
mov
adc
pop
lods
xor
mov
pop
ja
shll
mov
push
in
enter
or
adc
call
lds
cmp
xchg
pop
loope
test
mov
jno
cmp
mov
xor
sahf
pop
popf
jmp
fs
mov
pop
mov
mov
push
pop
mov
nop
inc
push
mov
notb
mov
ds
inc
dec
mov
push
sti
in
je
pop
insl
inc
mov
or
repnz
and
cmc
fs
ss
jge
xchg
sbb
ret
mov
xchg
insl
cmpb
jg
in
xchg
lods
and
mov
loopne
ds
lea
push
out
inc
stc
fdivl
add
test
fisttpll
inc
xchg
dec
stos
push
cmp
pusha
sub
leave
push
in
call
inc
mov
in
jo
aaa
push
mov
in
lock
pop
xchg
addr16
ja
nop
mov
pop
mov
jns
jg
mov
lock
rolb
push
jo
repz
inc
std
js
hlt
arpl
in
pushf
testb
mov
cmc
fistl
aaa
mov
ljmp
scas
fistps
movsb
lret
jmp
adc
xlat
dec
jbe
pop
mov
pop
fnstcw
push
loope
sbb
sub
lret
or
xor
addr16
sahf
cmp
adc
add
stc
or
cmc
adc
xchg
xchg
and
cld
sarb
test
cltd
ror
imul
clc
sbb
je
mov
xchg
inc
adc
mov
fiadds
sub
inc
inc
test
aad
mov
sbb
xor
xchg
out
andl
sub
cwtl
push
enter
das
js
push
dec
pop
sub
stc
ljmp
aad
dec
jns
daa
arpl
xor
mov
and
mov
mov
push
inc
add
out
test
mov
adcb
mov
ljmp
js
arpl
test
cs
mov
sahf
jge
jge
jle
rcll
xor
dec
jg
iretw
cmpb
outsl
mov
ds
mov
mov
add
xor
add
mov
xchg
jle
mov
iret
cmp
and
xor
fisubl
cmp
dec
aaa
add
das
pusha
nop
push
or
jmp
test
nop
clc
sub
enter
lret
and
fisubrs
xchg
cmp
ja
rorl
lock
in
into
dec
dec
es
les
xchg
adc
xorl
adc
decl
mov
pop
dec
dec
daa
aas
call
lret
xchg
xor
lahf
fnsave
rep
ja
pop
pop
adc
pop
in
mov
loopne
pop
mov
scas
cmp
add
in
stos
or
or
in
lods
subb
in
jae
scas
cmp
pop
dec
or
or
adc
lahf
mov
cli
int
xor
cmp
call
xchg
mov
iret
out
aas
leave
cmc
mov
xor
cmpsl
shrb
cld
adcl
icebp
sub
push
xchg
jecxz
mov
shlb
mov
loope
ds
mov
cmp
pop
testb
mov
das
inc
adc
divb
fldl
cmp
or
push
mov
mov
push
pop
or
cmpsl
jne
adc
test
mov
fmuls
pop
inc
cmovo
aam
or
dec
xchg
popa
out
jecxz
xor
ljmp
sbb
sahf
addr16
adc
xorb
dec
in
psrlq
data16
inc
stos
push
rep
or
pop
jbe
add
shrl
ja
mov
pusha
dec
roll
js
sbb
pop
mov
sbb
ss
outsl
popf
ret
sbbl
push
push
mov
jno
inc
js
dec
push
xchg
inc
notl
mov
push
aas
push
popf
jg
mov
lcall
cmp
pop
jnp
fistps
cmp
daa
push
dec
mov
cmp
pop
mov
add
insl
pop
arpl
jne
pop
jne
test
leave
dec
stc
or
and
imul
cmp
addb
cmp
cs
loope
and
les
lock
lds
inc
bnd
dec
and
or
mov
cmp
insb
cmp
fadds
loope
xorb
dec
loop
xchg
adc
add
in
adc
pusha
mov
add
sub
sbb
xchg
mov
mov
mov
cmp
push
loopne
xlat
aad
scas
lods
mov
mov
pop
mov
xor
add
lss
out
pusha
call
cmpsl
mov
push
out
stos
pop
in
pop
jmp
movsb
stos
jg
fnsave
push
cli
out
nop
lods
test
jge
mov
sub
mov
addb
xchg
cmp
repz
push
or
adc
cmp
repnz
rclb
add
pshufw
in
jnp
jbe
sub
ret
add
adc
loope
fdivl
aad
daa
movsb
scas
jecxz
ds
icebp
testl
mov
inc
dec
mulb
lods
push
mov
mov
xchg
shll
jbe
lods
xor
and
cmp
das
xchg
or
lret
cmc
jo
mov
lret
pop
xchg
ss
sarl
leave
pop
mov
mov
sbb
fwait
cld
jo
mov
outsl
jp
mov
push
and
adc
test
sub
cmp
loopne
add
lret
pop
and
call
adc
mov
movsl
mov
mov
pusha
jno
arpl
pop
lods
jge
lods
mov
das
pop
stc
dec
xor
in
xor
sub
push
cs
into
push
mov
push
inc
test
rol
fcoml
adc
pop
cmp
gs
cmp
repnz
ror
mov
xor
insl
jle
lret
enter
mov
push
clc
icebp
jns
cwtl
cltd
test
hlt
in
mov
or
xchg
jecxz
xchg
mov
leave
mov
sti
out
mov
inc
outsb
pop
inc
cli
pop
pop
in
sub
push
jecxz
stc
stc
mov
sti
mov
les
inc
mov
shll
jmp
xor
cmp
es
sbb
rorb
aas
cmp
sub
mov
inc
dec
popf
loop
lret
stos
cwtl
bound
mov
out
sbb
xchg
cwtl
cltd
nop
adc
push
outsb
loopne
mov
andb
icebp
sbb
jmp
add
jnp
xor
xchg
pop
push
repnz
push
rcll
hlt
decb
xchg
call
push
call
or
jge
fcoml
jae
xor
stc
cmc
xchg
hlt
push
add
xor
dec
mov
cmpsl
adc
pop
outsl
and
sahf
xlat
xchg
push
bound
insl
push
ljmp
add
adc
and
cli
mov
mov
jg
sbb
cmp
int
lods
iret
das
sbb
mov
je
stc
push
inc
push
add
outsl
mov
mov
dec
call
xor
xor
nop
mov
xchg
movb
add
cmp
jns
movsl
sub
jns
push
bnd
test
xor
push
jmp
jge
iret
outsl
rol
jp
sahf
test
loop
adc
dec
jne
jmp
and
adc
insb
mov
jb
fistpll
fcoml
imul
mov
xor
cmp
fmul
xchg
lea
sub
enter
ret
push
sahf
test
js
fsubr
push
pop
clc
ds
into
jg
test
push
inc
xchg
sbb
cmp
add
and
into
and
adc
js
aad
and
xor
stos
mov
pop
rclb
int3
shll
or
fnstenv
cmp
cmp
xchg
movsb
lods
xchg
mov
pop
push
iret
out
xchg
mov
inc
pop
cmp
pop
test
push
adc
movsb
movsl
outsl
xchg
mov
cli
cmp
imul
std
ret
and
fnstsw
cmp
adc
xor
sysret
mov
sbb
add
int
xlat
mov
js
popl
cmp
pusha
adc
sbb
cli
ret
mov
cs
or
mov
or
xor
sbb
xchg
je
mov
gs
dec
call
hlt
loope
mov
cli
pop
xchg
cmpsb
hlt
mov
popf
sbbl
outsb
clc
test
push
xor
sbb
mov
aaa
addl
and
outsl
lods
xchg
cmpl
mov
push
lret
fwait
jp
sub
aaa
xor
mov
in
fwait
push
aam
push
mov
mov
and
mov
out
pushf
pusha
jo
dec
test
and
mov
xchg
outsb
mov
xor
test
pop
cmp
inc
jno
jns
daa
xor
stc
mov
cmpsl
adc
lret
pop
fcmovnu
les
push
fs
sub
xor
andb
movsb
add
testb
lock
push
icebp
cmpsb
add
mov
outsl
pop
pusha
dec
jg
gs
arpl
ja
pop
push
mov
lret
inc
xchg
insl
add
ret
filds
aaa
mov
pop
shlb
push
arpl
fisttpl
movsb
jne
fadds
fisubl
mov
mov
jnp
mov
mov
xchg
fsubl
xchg
mov
push
mov
into
sahf
fs
iret
xlat
pop
loope
lret
adc
or
jno
jmp
xchg
icebp
subb
cwtl
outsl
mov
push
adc
sub
add
je
test
fbstp
mov
ja
movsl
adc
push
cld
int3
sub
jp
fstpt
std
ds
mov
push
dec
inc
xor
xor
test
cwtl
outsb
sub
mov
sub
mov
xchg
lock
add
mov
adc
push
mov
stos
scas
gs
popa
mov
scas
lahf
lods
xchg
push
jo
lock
cmp
mov
mov
cwtl
aaa
jae
xor
adc
push
pop
or
adc
loope
loop
fs
lock
lds
outsb
xchg
stc
lea
in
mov
test
adc
push
shrl
addr16
lcall
sbbl
imul
xor
fs
inc
pop
sarl
and
add
xchg
cmp
lahf
int
cmc
rcrb
xchg
cmp
push
xchg
int3
fldcw
inc
xor
cmp
dec
arpl
popf
jno
inc
test
push
fstsw
in
adc
es
add
test
adc
lods
jg
push
fldcw
xlat
xchg
popa
call
push
fiaddl
push
ja
adc
gs
test
push
xlat
mov
lds
add
jmp
push
cmp
jg
popa
jo
aas
lahf
push
stc
nop
les
dec
repnz
je
mov
xor
addr16
mov
mov
jbe
xchg
les
or
das
test
fnstcw
aaa
inc
lods
pop
lods
pop
dec
test
out
enter
pop
rcrl
pop
aam
sbb
push
iret
mov
pusha
sub
movsb
xchg
les
insb
daa
shl
les
push
stc
mov
sub
jle
or
loopne
aas
xchg
mov
push
xor
test
imul
mov
cmpsb
dec
fisttpl
push
lods
das
gs
fwait
int3
sbb
sbb
out
push
into
push
in
or
adc
aam
rcll
and
pop
test
pop
inc
aad
movsb
ss
fists
sub
mov
iret
mov
lahf
arpl
mov
push
push
lock
lret
jo
jo
fistps
fidivl
mov
inc
mov
mov
mov
sbb
mov
mov
vsqrtss
pusha
add
mov
mov
xchg
aam
push
pop
adc
insb
cmp
das
sbb
jne
jae
test
fildl
cmpsl
pop
jg
inc
jo
out
xadd
bound
jmp
stos
ret
pushf
push
add
sti
aaa
mov
push
lea
or
xchg
fisttpll
fs
sub
jbe
xchg
cmp
out
inc
push
dec
popa
fstps
add
out
pop
movsl
mov
or
cld
popf
push
or
in
lret
int3
sub
sti
mov
das
inc
stos
aam
call
repz
sti
movl
pop
clc
es
push
into
bound
cmpl
outsb
iret
mov
xchg
insb
hlt
daa
imul
clc
jb
mov
sub
dec
inc
in
adc
jbe
test
orl
idivl
cltd
negl
or
ffree
and
cmc
push
xchg
fisubs
pop
mov
cmp
xor
add
or
and
pop
xor
outsb
cwtl
insb
mov
in
xor
adc
aad
or
std
imul
test
dec
and
mov
sub
aad
and
test
mov
out
shl
push
pop
sub
lret
dec
fcoms
negl
push
gs
or
cmp
inc
push
stos
lahf
insb
inc
and
pop
mov
imul
fs
pop
inc
mov
pop
aam
ret
sbb
lret
or
fstp
adc
stc
aaa
jne
repz
sbb
divb
jp,pt
inc
iret
pop
xor
mov
insl
notb
pop
xor
pop
nop
cli
mov
cwtl
pop
xchg
lret
pop
push
popf
jge
adc
pushf
or
mov
or
shlb
cmp
add
xlat
aas
jle
adc
push
sub
jnp
insl
insb
mov
shr
iret
insb
lret
sahf
or
rorl
push
dec
pop
scas
jbe
fcmovnu
les
or
and
jg
push
in
aas
enter
setbe
out
mov
ja
jl
std
out
pop
jo
inc
push
push
in
pop
cmp
lods
jae
or
or
mov
scas
lahf
or
jnp
inc
popf
pushf
pandn
or
ds
lods
xchg
insl
sbbl
je
or
sub
add
xor
stos
scas
mov
stos
or
leave
cltd
jne
repz
push
fucomi
dec
scas
aaa
out
push
inc
push
and
ja
pusha
mov
fmuls
repnz
call
dec
mov
xlat
fcmovbe
jl
je
addr16
xor
imul
mov
test
popa
jne
imul
ss
mov
fcoml
jne
or
ja
enter
inc
mov
push
add
dec
fwait
mov
stos
xchg
and
mov
push
jb
outsb
dec
push
mov
out
adcb
in
dec
rol
add
or
out
xchg
iret
cmpsl
stc
and
rorb
lahf
cmp
out
push
div
les
clc
popf
push
pop
popa
dec
and
test
jecxz
pusha
and
xchg
sub
mov
bound
xchg
cld
inc
ds
pop
lods
aas
cli
ja
in
dec
mov
es
insl
iret
repz
pop
decb
cmc
dec
movsb
dec
mov
add
dec
xchg
sub
cmp
pop
loopne
mov
fiaddl
fnstenv
sbb
inc
jmp
xchg
aaa
arpl
cmp
pushf
std
push
hlt
mov
mov
fptan
add
pop
and
sbb
roll
pop
bound
addr16
mov
cmp
ljmp
sbb
xchg
pop
loop
jmp
push
shl
cmp
and
jns
hlt
imul
or
cli
xor
pop
lock
nop
popf
js
mov
jnp
sbb
leave
pop
dec
xlat
pop
lock
pop
xchg
shll
js
out
dec
jp
jmp
ror
jecxz
nop
dec
adc
pusha
sbb
cld
pop
mov
repz
push
mov
sub
shll
dec
mov
hlt
loopne
notb
mov
mov
jg
pop
xchg
icebp
ret
inc
rcr
repz
lret
insl
imul
jne
pop
in
cltd
dec
sahf
gs
aas
add
jecxz
sarb
mov
push
fldcw
add
insl
inc
push
push
xor
inc
pop
int3
jmp
insb
push
push
xchg
lods
aad
mov
mov
jecxz
int3
mov
fyl2xp1
push
mov
and
stos
sti
nop
add
or
xor
fidivs
aad
jnp
fadds
add
hlt
orb
inc
push
stos
stos
mov
inc
xchg
enter
or
xor
cmp
imul
jl
mov
inc
mov
inc
xchg
add
lods
dec
jo
scas
mov
jno
test
dec
jecxz
js
jecxz
xchg
mov
loopne
cmp
sbb
nop
mov
sbb
pop
mov
pop
mov
lahf
push
sub
dec
jge
adc
push
nop
fildll
adc
not
in
test
and
pop
std
inc
jbe
stc
mov
fnstcw
ljmp
popa
lock
and
add
arpl
mov
fiaddl
stos
push
neg
and
xlat
jb
aas
jbe
int
fs
sbb
inc
push
negl
mov
int3
cmpsb
gs
and
insb
cmp
jae
inc
adc
pop
mov
xchg
jnp
and
cmp
lret
sbb
lret
sbb
lcall
addr16
cli
sar
mov
in
sub
pop
in
rolb
push
cmpsb
xchg
inc
or
jne
dec
push
inc
and
iret
jl
mov
loopne
ret
mov
push
cmp
stc
popa
in
push
clc
mov
push
dec
and
idivw
and
pop
dec
mov
das
jle
or
mov
xchg
sbb
inc
arpl
sbb
adc
fiaddl
daa
and
clc
mov
pop
add
das
pop
loope
lret
cmp
mov
popa
pop
std
aaa
nop
xorl
mov
sbb
mov
xchg
push
fcoms
sbb
push
mov
sbb
jmp
mov
and
aaa
insb
sub
pusha
adc
jge
add
gs
stos
mov
sub
icebp
push
cwtl
inc
movsb
dec
mov
and
or
sti
imul
mov
cmpsb
pop
out
jno
lahf
or
outsl
adc
push
stos
mov
stc
popa
ficompl
push
cli
or
xor
fdivp
pop
aad
add
flds
repz
aas
or
sub
sti
add
rcll
nop
cmpsl
stos
jne
inc
dec
pop
sbb
mov
mov
dec
mov
mov
cltd
push
or
dec
xor
aaa
xchg
arpl
dec
cmpsl
sti
pop
jo
xor
xchg
sub
mov
push
adc
notb
test
test
lahf
je
cmp
adc
sbb
jb
xor
pop
mov
rcrl
cltd
mov
adc
inc
mov
rep
jg
cwtl
mov
jb
inc
push
xlat
dec
and
das
mov
push
push
imul
nop
add
cltd
sub
fisttpll
ret
cwtl
rcrb
incl
push
in
movsb
scas
cwtl
push
inc
in
loope
mov
popf
sub
xchg
jbe
xchg
in
aad
lea
adc
jne
pop
adc
or
push
mov
shlb
fidivrl
sub
subl
movsl
xlat
daa
lcall
shrl
bound
xor
sbb
sbbl
xor
mov
jns
mov
stc
and
xlat
fdivrp
inc
scas
sub
shlb
sahf
sbb
xchg
decl
ror
and
rcll
jle
xor
xor
sbb
pop
sub
adc
rorl
mov
mov
test
xchg
adc
fldenv
sti
or
out
xchg
sub
fidivrs
sub
pop
add
sbb
adc
in
jecxz
mov
jbe
sub
pop
mov
jne
push
leave
xlat
shlb
insl
jne
sbb
adc
call
cwtl
dec
mov
and
jge
outsl
xchg
push
pusha
ficomps
push
jb
lea
stos
lds
push
fcmovne
jnp
dec
inc
gs
or
jl
push
mov
std
lock
mov
pop
adc
or
in
xor
in
or
adc
push
dec
pop
xor
mov
repz
out
xchg
xchg
neg
popf
push
or
xor
je
pop
repz
push
cwtl
lret
sarb
mov
jmp
sub
cmp
inc
push
pop
push
out
loope
mulw
sub
lahf
jl
pop
fnsave
adc
imul
iret
pop
sbb
fdivrp
mov
inc
sub
or
dec
xchg
aas
xchg
adc
nop
out
inc
ret
loope
imul
jbe
movswl
cmc
and
ljmp
stos
test
jge
push
sbb
std
filds
addr16
lods
fsubrs
int3
or
sbb
sbb
sbb
jnp
jle
jnp
gs
xchg
dec
xor
mov
cmpsb
xchg
dec
repnz
jl
sub
mov
push
pop
shll
push
push
mov
mov
or
add
push
fdivs
cwtl
jmp
push
jmp
dec
cmp
jle
jp
add
and
das
fs
daa
imul
or
mov
mov
pop
lahf
negb
aad
and
cmp
sub
add
xchg
push
mov
js
inc
jge
imul
mov
mov
mov
cltd
lds
pop
add
sbb
jne
push
sub
loopne
adc
push
mov
add
or
insb
pop
testb
outsl
sbb
mov
ljmpw
cmpsb
call
shrb
in
push
mov
xor
aad
jns
iret
push
mov
xchg
inc
in
jle
lahf
xchg
jmp
enter
dec
mov
clc
dec
push
cmc
dec
in
out
inc
mov
ja
push
push
movsb
outsb
and
int
neg
jae
aaa
add
xchg
in
sub
xor
test
cmp
adc
sbb
cwtl
loop
mov
fldenv
push
and
repz
mov
push
mov
mov
lock
pusha
inc
js
stos
jp
aam
or
scas
aam
pusha
xchg
es
mov
test
xchg
cmc
loopne
xor
cmp
mov
mov
pop
xchg
inc
ficomps
pop
sbb
fbstp
fidivrl
push
dec
mov
rcrb
stc
jmp
or
testb
xchg
ret
mov
gs
add
gs
js
sbb
or
and
mov
ja
paddd
mov
mov
jge
pop
lret
push
pop
mov
sbb
fbld
cmpsb
push
addr16
mov
add
lods
enter
xor
pop
or
mov
mov
call
lock
xchg
mov
aam
jge
jl,pt
iret
pop
loope
cltd
and
jg
popa
or
andb
cltd
stos
leave
xchg
fidivl
push
jp
shlb
inc
fucomip
inc
jge
xchg
xor
cmpsb
mov
fstpl
jle
inc
jmp
fnstsw
jmp
jl
imul
jl
mov
add
push
pop
fnstenv
mov
jg
popa
add
loopne
mov
sub
or
cmc
mov
and
sarl
mov
movsb
jg
jg
jge
jge
add
add
icebp
loopne
add
add
add
add
add
lahf
xchg
pop
push
or
test
lods
repz
outsb
lds
lret
push
cld
in
cli
inc
ljmp
fiadds
nop
sahf
pop
int
or
testb
add
scas
aaa
jge
imul
movsb
cmc
mov
push
or
xchg
mov
lret
xchg
xor
adc
nop
push
sbbb
outsl
cmpsb
mov
xor
push
jle
xchg
insl
in
pop
push
mov
aas
and
xor
aam
fists
lahf
es
jecxz
mov
xor
inc
mov
dec
in
adc
xchg
xor
mov
and
aam
inc
icebp
inc
push
sub
jnp
fwait
lods
push
stc
jno
divl
or
push
lahf
pop
xchg
adc
sbb
and
std
mov
cmpsl
adc
xlat
fdivr
mov
aam
leave
and
loopne
mov
arpl
xchg
pop
and
out
xor
inc
hlt
xchg
andb
sub
leave
out
xor
fwait
in
jne
and
repnz
adcl
aas
call
faddl
and
imul
jmp
jno
popf
xchg
pop
aam
decl
xchg
mov
testb
insl
das
or
inc
fidivl
jmp
pop
in
sbb
sbb
lret
xor
dec
hlt
stos
sbb
xchg
mov
dec
push
and
sub
iret
daa
sub
push
cmp
outsb
sbb
mov
mov
subl
in
stc
xchg
jg
inc
stc
mov
sbb
mov
fimuls
in
nop
sub
or
sbb
jl
sub
jne
dec
je
add
mov
lret
xchg
pop
int
in
sub
sbb
push
repnz
das
in
addr16
xchg
and
movsl
ds
pop
mov
lds
pop
dec
sarb
mov
pop
aam
imul
xchg
inc
bound
add
pop
sbb
cmpsb
in
test
dec
inc
xchg
dec
mov
cmp
enter
sahf
dec
sbb
rcrb
or
or
out
cli
aas
stos
jae
sahf
pop
xor
dec
mov
outsb
cmc
cltd
loope
mov
dec
sub
lods
mul
cwtl
adc
add
jg
cli
sbb
inc
cwtl
jo
push
xor
insb
dec
sahf
cltd
jae
int
adc
push
xchg
inc
rorb
mov
in
fildll
out
aam
movsl
outsb
insb
cltd
mov
xchg
or
dec
sbb
orb
notl
dec
hlt
sub
jae
stos
sub
or
ret
jns
shrb
jns
fstpt
lcall
jo
inc
inc
sbb
cmpsl
sub
jns
add
outsl
push
popf
jmp
mull
xor
sbb
lcall
cmpb
jge
pop
cmp
je
jle
jnp
xchg
ret
or
cltd
ja
jnp
jl
xor
rcrl
adcb
lods
sti
jnp
fsubrl
push
mov
push
std
lods
jecxz
aad
and
mov
minps
pop
scas
xor
jge
xchg
jl
incb
lcall
mov
jg
jnp
in
or
into
addr16
mov
cwtl
fmull
and
leave
aad
cli
orl
cmpsb
mov
inc
jae
mov
sub
insb
mov
pop
lcall
or
jb
push
pop
mov
inc
mov
mov
mov
lahf
hlt
lock
jl
in
add
push
jns
fsubrl
movsb
or
cmp
sbb
repnz
insl
mov
push
xchg
pusha
jg
inc
or
iret
cmp
mov
and
lock
pop
sub
adc
and
xlat
add
jns
mov
test
mov
cltd
push
iret
push
sub
movsb
xor
dec
mov
adc
subb
in
and
xor
dec
adc
rcll
fdivrs
gs
push
mov
clc
jg
lret
mov
pop
jmp
outsl
negl
sahf
arpl
stos
pop
adc
adc
jnp
inc
lret
jle
fidivrl
push
push
je
cmp
divb
movsl
fisttps
pop
loop
push
mov
aas
fs
cmpsl
imul
mov
subl
add
add
add
add
adc
ds
aam
xor
leave
mov
ss
sbb
imul
negl
mov
cmc
in
jmp
fucomp
or
sbb
lret
add
std
push
xchg
shll
mov
shll
icebp
sbb
jbe
xor
iret
xchg
sbb
fsubl
notb
hlt
jecxz
scas
mov
sub
cltd
ds
std
pop
inc
cmpsl
leave
negb
outsb
outsb
int3
scas
cltd
insl
fs
lods
cmp
call
lds
jp
sbb
cmp
jo
mov
pushf
aam
pop
pop
cltd
lods
cmpl
push
cmp
jb
cmc
and
ss
dec
push
std
jl
out
je
test
jno
fbld
mov
sbb
ds
sbb
mov
lods
add
mov
arpl
arpl
adc
jl
in
lods
xchg
inc
cmp
out
inc
enter
in
subl
scas
lret
imul
fisubl
pop
xchg
push
and
cwtl
popf
outsl
gs
rolb
and
mov
lret
xchg
test
cwtl
push
xchg
adc
cld
mov
rcll
adc
stc
dec
mov
adc
lods
pop
xchg
push
arpl
pop
std
call
ret
imul
or
pop
cmp
xchg
call
cmovb
xor
cmp
mov
stc
insb
pop
sub
pop
test
mov
in
add
movsl
scas
dec
lods
dec
into
jbe
sbb
cli
xlat
cmpsl
std
lcall
popa
xchg
and
mov
pusha
hlt
fucomi
pop
push
or
inc
xor
cmpsb
xor
and
ljmp
ss
dec
push
std
jl
out
je
test
jno
fbld
mov
sbb
push
jno
sub
jnp
mov
mov
arpl
arpl
adc
stos
lods
mov
rcll
xchg
jno
xor
dec
inc
enter
in
subl
scas
lret
imul
fisubl
cmc
cmpsb
les
aaa
into
and
repnz
shll
mov
std
mov
mov
lret
xchg
test
cwtl
push
xchg
adc
or
pop
push
jbe
push
mov
jbe
fistl
push
lods
pop
xchg
push
arpl
pop
std
call
ret
imul
rdtsc
cmp
xchg
call
cmovb
xor
cmp
mov
stc
insb
pop
sub
in
xchg
lock
in
add
movsl
scas
dec
lods
dec
into
jbe
sbb
cli
xlat
cmpsl
std
lcall
bnd
xchg
jns
add
insl
decb
hlt
fucomi
pop
push
or
inc
mov
scas
add
fidivs
imul
xor
mov
cmp
xchg
insl
in
pop
pop
mov
jno
push
dec
mov
mov
andb
nop
jmp
repz
dec
mov
outsb
push
cmp
sbb
fsubrs
cmp
push
in
sbb
daa
cmp
test
jns
test
subl
pop
push
in
jb
mov
fisttps
mov
pop
stos
jae
leave
pop
imul
pop
inc
loopne
pop
fldenv
outsl
sub
mov
ret
imul
inc
mov
ficomps
inc
lds
inc
js
idivl
sbb
pop
sub
cltd
jo
push
xchg
fs
rclb
aad
pusha
negl
pop
cltd
lods
cmpl
in
jle
stos
sub
sub
daa
lods
cwtl
setnp
mov
or
cli
movsl
outsl
sbb
lcall
repnz
mov
xor
cltd
sub
xchg
subb
and
sbb
push
jno
sub
roll
inc
mov
xchg
loope
out
les
stc
sub
stos
inc
pop
add
xor
pusha
inc
jnp
scas
ror
clc
into
sub
mov
mov
jp
jmp
cmp
scas
lret
imul
fisubl
imul
adc
mov
mov
out
movsl
inc
lret
pop
outsb
jg
push
ret
mov
rcrl
dec
xchg
push
adc
mov
sarl
insb
pop
in
imul
pop
inc
loopne
pop
fldenv
outsl
sub
mov
ret
imul
scas
push
ficomps
inc
lds
inc
js
idivl
sbb
pop
sub
aad
imul
cmp
xchg
pop
iret
daa
sbb
aad
pusha
negl
pop
cltd
lods
cmpl
in
jle
dec
imul
mov
shrb
daa
lods
cwtl
setnp
mov
or
cli
movsl
outsl
sbb
push
sub
je
roll
sbb
ljmp
sub
vpminsw
fs
out
out
push
mov
add
pop
and
daa
mov
mov
push
loopne
lods
lock
pop
aam
mov
jp
sbb
add
adc
dec
mov
mov
adc
negl
outsb
jl
pop
mov
rorb
stos
adc
gs
je
push
pushf
ret
add
bound
xor
bswap
dec
inc
fldenv
fadds
jmp
inc
xor
cmp
fs
imul
pop
inc
loopne
pop
xor
lret
cs
xchg
insb
ss
xchg
xchg
into
mov
push
stos
dec
push
addl
xchg
push
clc
test
push
add
fwait
inc
jns
xor
int
pop
into
sub
mov
mov
leave
aad
mov
in
inc
jns
add
addr16
mov
push
mov
sbb
dec
repz
push
idiv
pop
inc
sub
in
mov
das
dec
addl
inc
mov
dec
insl
inc
vpminsw
fs
out
out
push
mov
add
push
mov
call
pushl
outsl
lods
lock
pop
aam
mov
jp
sbb
add
push
and
xor
je
cwtl
push
pop
ds
inc
js
xlat
lods
testb
mov
js
push
mov
loopne
push
dec
lods
dec
into
jbe
sbb
into
fldt
cmp
test
sbb
rcrb
inc
push
mov
mov
in
dec
xor
sub
sbb
xchg
outsb
mov
sbb
mov
adc
lods
pop
xchg
push
mov
lock
or
inc
mov
and
fisttpll
dec
into
daa
and
xchg
jbe
and
pop
dec
lds
outsb
sub
out
cs
jne
mov
test
loop
clc
inc
enter
in
subl
pop
or
repnz
or
mov
jbe
adc
mov
fldt
mov
and
sbb
loopne
js
adc
rol
std
adc
in
int3
fistpl
lock
pop
aam
in
test
dec
mov
movsl
in
test
dec
das
push
arpl
adcl
adc
jp
addr16
xchg
push
rcll
mov
icebp
xchg
mov
jne
push
jp
pop
int3
in
mov
cmpsb
xchg
inc
xchg
xor
xor
scas
mov
push
ja
ret
loop
xchg
dec
out
mov
adc
popa
arpl
dec
outsl
movsl
stc
cmp
adc
dec
mov
inc
stos
xchg
push
jmp
ret
in
bound
ljmp
xchg
out
pusha
cmpl
sahf
or
cmp
pop
pop
push
fdivr
call
lea
xor
pusha
adc
in
pushf
ret
add
bound
sbbl
mov
mov
rclb
aam
aam
jmp
in
push
or
dec
outsb
dec
jmp
xchg
pop
mov
xorl
jae
xchg
aas
in
int3
fistpl
lock
pop
aam
in
test
dec
mov
into
inc
xor
push
and
movsl
sbb
xor
arpl
adcl
adc
in
fdivr
or
mov
icebp
xchg
mov
jne
push
jp
pop
int3
in
mov
cmpsb
xchg
aas
cltd
into
int
xchg
sub
scas
mov
push
ja
ret
loop
xchg
dec
out
mov
adc
insb
dec
push
pminsw
scas
mov
inc
xor
and
movsl
in
inc
stos
xchg
push
jmp
ret
hlt
loope
cmpb
and
mov
jne
and
imul
sahf
or
cmp
pop
pop
push
fadds
sub
das
push
fsts
clc
pusha
adc
in
pushf
ret
add
bound
sbbl
mov
movsl
mov
lret
pop
cmp
sbb
lret
leave
xchg
loop
push
or
and
and
xor
push
cmp
aam
mov
clc
test
cmp
shl
xchg
in
es
insl
inc
sub
iret
mov
jg,pn
daa
gs
cmp
insl
rcrb
das
xchg
inc
or
add
dec
mov
pop
int
repz
pushf
pop
adcl
add
pop
ret
pop
add
add
loopne
add
add
add
add
std
adc
out
xchg
sarb
mov
cmpsb
inc
lock
mov
daa
movsb
fsubl
cmp
sub
sub
movsl
dec
leave
subl
mov
inc
subb
icebp
sti
mov
or
pop
arpl
jecxz
xchg
add
insl
push
stc
mov
xor
add
movsb
lds
jns
icebp
aam
xlat
pop
insl
cs
pop
mov
push
xchg
es
or
lret
or
pushf
fcmovnb
pushf
push
cli
jl
dec
xchg
ljmp
xchg
pop
push
push
mov
lods
lret
hlt
int
pop
dec
push
cmp
and
and
call
mull
xchg
fcmovnb
sarl
fstl
xor
push
adc
rcl
cs
hlt
or
sbb
inc
and
fistps
cmpsb
dec
mov
aad
sub
mov
inc
addr16
arpl
jle
fwait
dec
cmpsb
mov
xlat
cmpsl
and
ficomps
cmp
ds
add
mov
xor
cmp
xchg
movsl
push
or
sbb
addl
fs
ljmp
push
sub
std
movl
jo
push
inc
mov
pushf
ss
cmpb
shlb
jp
push
sbb
sahf
cwtl
jp
xchg
mov
sbb
scas
lret
cmp
sub
cli
shll
push
into
add
js
push
mov
ljmp
test
int
jle
mov
mov
and
xor
je
mov
insl
pop
jae
sub
jmp
cmp
xor
test
mov
lea
ja
push
ds
pop
and
mov
mov
mov
stos
ret
fs
cmp
clc
je
in
cmp
push
adc
sub
pop
sub
jmp
xchg
lcall
stc
mov
sahf
pop
sub
mov
movsb
pusha
popf
insl
leave
jp
mov
shlb
adc
stos
push
inc
data16
inc
push
lods
adc
pop
stos
jae
or
sbb
loope
push
fs
fsubl
jp
jge
rcll
fimuls
int
scas
mov
mov
cmp
divb
adcl
shlb
add
mov
cmp
in
xchg
cs
or
lods
mov
dec
or
pop
push
insl
sub
cmp
aam
mov
test
add
mov
shrl
movsl
stc
das
call
xchg
repz
out
mov
push
adc
add
jmp
push
out
fisttpll
icebp
clc
cmp
mov
add
adc
in
cmp
ficomps
je
cmp
mov
and
inc
scas
test
rol
cmp
stc
mov
lods
cs
data16
pop
mov
inc
inc
jnp
sbb
dec
jecxz
jge
stc
jl
rolb
fs
movsb
jp
xor
push
lcall
inc
pusha
fnsave
xor
cmp
ss
scas
inc
sub
divb
lock
xor
int3
lcall
xor
dec
dec
push
pop
and
jbe
push
sub
hlt
push
sub
hlt
push
sub
hlt
push
sub
hlt
push
sub
int3
pop
mov
scas
fs
fsubrs
pop
jl
ror
shll
xchg
push
and
pop
adc
and
int3
jae
push
sbb
popf
mov
xchg
push
mov
jmp
jb
pop
pop
sub
fdivrs
in
outsb
push
sti
ret
lock
xor
int3
xchg
lock
test
xchg
test
mov
insb
adc
ss
push
add
cmp
jno
or
rolb
xor
cmp
test
xchg
pop
xor
sbb
lea
xor
int
imull
pop
push
lods
std
cmpsl
cmp
inc
and
mov
mov
out
movsb
call
dec
sahf
pop
dec
into
inc
lock
add
add
loopne
add
add
add
add
add
inc
cmp
ret
fwait
ds
and
leave
push
sbb
cmpsl
loopne
repnz
cli
outsl
push
add
push
mov
jno
enter
or
scas
pop
jl
leave
lret
out
test
and
inc
popf
pop
je
pop
xorb
pop
enter
sbb
lcall
mov
jmp
xchg
add
addr16
rcll
or
dec
dec
mov
lcall
scas
daa
adcl
out
push
pop
loop
arpl
pop
sub
inc
add
aam
add
jl
inc
cs
popa
fnstsw
push
cs
outsb
nop
mov
fidivrs
jmp
push
xor
mov
jo
mov
clc
pop
push
cmp
aaa
mov
mov
xor
sarb
lods
cmpsb
stos
and
into
setl
cmpsl
sti
push
enter
adc
cli
or
rsqrtps
mov
adc
insb
jl
or
out
xchg
sbb
fsubs
das
push
jmp
in
sarb
inc
mov
xor
xchg
pop
cmpsw
adc
or
fadd
lds
pop
xorl
cmc
xor
ss
lcall
pop
cmp
xchg
js
xchg
adcl
adc
test
ret
sub
adc
loopne
push
stos
inc
pop
les
or
push
mov
das
mov
movsl
push
xchg
int
push
jne
clc
sbbl
xlat
add
ret
data16
dec
mov
icebp
jne
sub
nop
in
mov
les
xchg
dec
mov
inc
into
xlat
adc
pop
fstl
nop
addr16
xor
jns
push
test
stc
dec
jno
or
jnp
jmp
test
cmc
jo
pop
fstpl
adc
mov
mov
in
jbe
and
sub
ds
cs
or
sbb
cmpb
xchg
insb
pop
mov
icebp
rorl
jg
add
hlt
imul
ret
push
pop
add
icebp
loopne
add
add
add
add
cmp
aad
cmp
popf
insb
ja
lods
mov
inc
dec
icebp
xchg
push
mov
mov
jbe
mov
sub
cmp
adc
fsubrp
jmp
xchg
jmp
std
add
popa
ljmp
push
push
icebp
fadds
scas
pop
fmull
iret
leave
daa
and
cmp
add
in
push
cmpsb
add
jmp
rcr
xchg
pop
mov
jns
in
mov
jmp
dec
cmc
mov
mov
rolb
cmpsb
fiadds
out
imul
and
ja
sbb
rcrl
ret
xchg
lret
out
ja
lds
gs
repz
test
movsl
pop
lea
pop
jae
xchg
fnstenv
jg
loopne
out
mov
mov
imul
cld
insl
inc
push
test
adc
jmp
mov
jg
outsb
mov
and
mov
add
cmp
jle
shrl
push
outsl
jnp
mov
aad
push
testl
xor
stc
ds
jo
and
lock
lcall
inc
shrb
push
js,pn
add
insb
gs
sbb
xor
jno
lret
mov
xchg
pop
sahf
xor
pop
and
mov
pop
mov
jge
and
andl
sti
je
xchg
xchg
outsl
jnp
mov
or
mov
xchg
jp
pop
les
cli
out
aad
sbbl
inc
sub
subl
sub
and
cmpsb
loopne
push
inc
int
lods
xor
jg
aam
ss
or
cmp
idivl
add
mov
notl
sbb
mov
in
add
daa
popf
movsb
cmpsl
mov
addr16
rol
orl
jl
push
mov
sub
testl
pushf
hlt
sub
jnp
outsl
add
lret
adc
int
and
loope
cmpl
or
dec
jp
jo
xchg
int
xchg
pushf
mov
cltd
shl
cmpl
pop
pushf
xchg
mov
add
xchg
cmp
and
xor
leave
testl
test
out
mov
xchg
subl
lret
push
xor
xchg
lea
xor
xor
mov
xchg
pop
or
cmp
jp
adc
mov
or
xor
addl
push
testl
push
pusha
repnz
dec
push
leave
sarl
lret
jns
daa
cmp
shl
scas
iret
dec
cmp
lea
push
fs
mov
sbb
sbb
jg
je
loop
dec
mov
lea
xor
pop
cs
pop
inc
pop
or
shlb
loop
call
dec
test
filds
test
mov
imul
sbb
lcall
lret
or
or
mov
fdivl
push
mov
cmpsl
mov
sub
clc
add
outsl
xchg
add
xor
fwait
movsl
dec
xor
aas
and
inc
icebp
jg
ja
lea
push
out
mov
test
and
negb
cmp
out
bound
cmp
int3
pushf
sub
or
push
add
insl
mov
jae
loop
push
int
push
imul
xchg
fnstsw
xchg
lock
pushf
bound
cmp
ds
cld
jne
je
and
adc
hlt
mov
aas
fs
mov
andl
sbb
dec
outsl
cwtl
push
aad
addr16
call
movsb
insb
je
sub
inc
xor
jp
dec
xlat
adc
es
fcmovbe
add
fdivrs
in
dec
cmp
adc
fsubs
cmpsb
xor
int
pop
jle
push
and
sub
xor
sbbl
ljmp
daa
movsl
scas
xlat
inc
adc
pop
fsubrs
adc
jne
jne
add
adc
mov
push
xor
out
insb
test
rol
push
sbb
insb
push
xlat
jnp
rorb
dec
jg
or
daa
shl
mov
or
mov
sub
and
dec
dec
mov
xchg
jle
loope
iret
in
xor
lods
xchg
or
stos
icebp
fldl
push
popf
push
push
xchg
mov
sbb
repnz
rcr
test
pop
lea
mov
mov
xchg
int3
into
test
andb
imul
fdivl
icebp
out
bound
dec
fwait
jl
dec
sbb
jg
js
mov
lock
push
xchg
lock
mov
in
inc
rolb
ljmp
les
daa
inc
sub
adc
leave
out
hlt
push
les
aad
mov
push
cwtl
and
popa
or
es
add
jae
out
inc
into
test
push
pushf
cltd
adc
sub
mov
int3
xor
pop
mov
or
add
jae
or
jnp
inc
insb
pop
xor
test
or
rorb
adc
xor
loope
loop
out
lods
das
cmp
in
push
inc
pop
jl
push
jg
xor
jae
pushf
inc
push
mov
inc
ficomps
mov
sbb
push
pop
mov
iret
and
and
js
jbe
mov
adc
inc
cmp
push
cmc
adc
rclb
inc
cld
mov
sbb
in
mov
jnp
stos
fnstcw
mov
pop
lahf
ja
jae
xchg
mov
in
mov
stc
mov
sub
std
lret
mov
cmpsb
lret
inc
test
les
xor
leave
or
xlat
xchg
xlat
xchg
mov
xchg
inc
cmp
jb
xchg
aad
jno
sti
xchg
and
inc
or
mov
call
cli
xor
pop
mov
xor
sbbl
xor
fsubs
arpl
movsl
scas
fisttps
aas
mov
sbbl
hlt
cmp
push
int
xor
mov
sbb
shrb
call
sub
dec
out
or
adc
cmp
inc
and
mov
xor
mov
gs
pusha
ljmp
inc
inc
decb
jns
bound
fcoms
mov
xor
loopw
adc
aas
iret
repz
aam
jnp
loop
in
add
fidivs
fiadds
outsl
cld
mov
or
insb
jo
aad
push
arpl
fnclex
jae
adc
mov
scas
mov
jmp
daa
fwait
arpl
jnp
pop
jge
jmp
mov
lods
movsb
or
adcb
and
mov
xchg
xchg
stc
jge
dec
dec
xchg
push
cmp
mov
outsb
push
mov
das
out
test
icebp
stos
or
fsincos
dec
or
sbb
adc
or
adc
fs
jbe
bound
or
jb
call
aad
sar
addr16
jl
fistpll
mov
inc
dec
je
sub
roll
in
add
ja
xchg
push
jg
xor
push
stos
add
stos
es
in
fmuls
imul
stc
loope
aam
rcll
mov
sbb
xor
fwait
xchg
cli
pop
dec
pop
fincstp
adc
cmp
mov
jo
call
ret
shll
rcr
jns
arpl
mov
lcall
mov
xlat
dec
mov
ficomps
and
lea
sti
ret
lret
divl
push
cld
or
pop
call
inc
fsubrl
cmpsl
pop
fs
add
ror
inc
cltd
outsb
and
mov
test
or
or
xchg
aam
aad
clc
push
lock
cs
out
lods
mov
das
dec
xor
dec
xor
inc
add
rorb
mov
sbb
mov
test
das
and
enter
lcall
pop
sbb
jnp
stos
cmp
fiadds
jmp
pusha
int
pop
pop
pusha
sti
adc
mov
pop
fcom
push
jp
in
sbb
imul
mov
sbb
outsb
push
and
fisubrl
test
repnz
xchg
negb
imul
sub
jne
test
clc
aaa
pop
adc
dec
mov
fwait
scas
gs
sub
xor
and
lea
xchg
bound
xchg
lret
js
clc
adc
xor
outsb
push
in
push
push
jge
pop
lret
sti
lods
push
sbb
out
cmp
lea
lahf
pop
cmp
or
std
mov
cmpsl
dec
mov
ja
bnd
inc
movsl
aad
popf
inc
ret
mov
je
sahf
nop
push
fs
sahf
popa
jl
lods
rolb
cltd
ret
jg
pop
fs
xchg
repnz
mov
mov
mov
je
stos
roll
lret
fs
mov
mov
cmp
fistps
cmc
in
ret
icebp
jne
xor
or
lods
shlb
xchg
cli
mov
paddsb
adc
sti
adc
rcrl
test
and
cs
imul
test
jo
cmc
addl
fcomps
mov
or
dec
int3
sahf
mov
aaa
ds
popa
sub
cmpl
in
repnz
xor
inc
mov
pop
stos
out
movsl
pop
adc
out
cmp
sub
sahf
xor
fisttps
into
cmp
cmp
pop
add
or
sbb
dec
jp
or
mov
fiaddl
scas
push
rcll
xlat
xlat
repnz
mov
in
xor
pop
sbb
or
lret
mov
cmp
and
jl
dec
test
push
inc
push
out
jb
dec
dec
sub
push
cltd
mov
js
cltd
push
pop
sbbl
mov
insl
and
fldenv
mov
hlt
adc
ja
aam
aas
xchg
inc
push
push
mov
sarb
imul
xchg
fsubp
push
mov
mov
loop
test
cmp
or
arpl
inc
jns
divl
push
adc
adc
cltd
dec
sbb
xor
stc
in
clc
or
lea
xor
test
mov
fsub
outsl
popa
fcom
gs
dec
fldcw
outsl
lcall
scas
mov
call
daa
dec
jb
fildl
neg
daa
push
rcll
iret
inc
cmp
xchg
inc
xor
push
test
xchg
or
push
adc
test
push
inc
les
cli
xor
nop
pop
lahf
daa
popf
dec
or
pop
fsubl
jnp
pop
push
out
pusha
jo
pop
ret
mov
imul
ret
cmp
push
fs
dec
fnstenv
push
pushf
dec
push
sub
mov
mov
mov
shll
ret
jl
adc
push
rcl
mov
add
pushf
push
test
ljmp
out
inc
xor
loop
roll
ficoml
push
leave
jmp
sbb
ffreep
insl
enter
add
out
cmp
sbb
fsubrs
sarl
sub
dec
mov
test
fstl
fadds
mov
or
out
sbb
fwait
inc
xchg
clc
xchg
clc
mov
int
incb
movsl
lret
mov
fmul
inc
mov
int3
xchg
idivb
pop
jae
mov
adc
jno
inc
lret
fnsave
popa
xorb
cmpsl
les
es
mov
inc
push
movsl
mov
ja
test
gs
xchg
and
or
jnp
push
jg
push
mov
mov
and
ret
push
leave
mov
sbb
mov
incl
dec
mov
push
inc
mov
popa
arpl
movsl
jnp
repnz
test
xor
scas
std
mov
fwait
xchg
mov
shlb
pop
mov
dec
mov
into
out
test
jnp
jne
pop
lret
rep
sub
sbb
xchg
outsb
pop
cs
clc
jle
xchg
push
dec
outsl
lods
mov
inc
imul
int3
mov
sub
mov
mov
clc
mov
adc
xchg
adc
test
sub
pop
sbb
xor
int
push
mov
push
xor
or
pop
push
out
test
cld
xchg
xchg
and
push
clc
xchg
repnz
cmp
rorb
mov
and
rcrb
imul
jno
pop
in
scas
ffree
mov
aas
cld
add
ja
mov
jb
mov
cmp
rorb
mov
dec
and
xchg
lcall
rcrb
mov
popa
lds
rcr
hlt
pop
scas
mov
push
pop
mov
push
xor
pop
ret
pop
add
sbb
xor
xor
sbb
test
mov
push
jae
pop
cli
mov
outsl
jg
iret
cmpsb
sbb
jne
out
jle
inc
sbb
sbb
bound
js
or
mov
aam
leave
sti
push
xchg
ja
and
or
cmp
xchg
xor
ret
inc
cmp
inc
cbtw
insb
mov
fsubrp
test
scas
mov
scas
or
push
sahf
das
in
stos
mov
push
pop
xor
insb
in
xlat
gs
iret
mov
fcoml
cwtl
push
add
push
or
lret
movsl
stos
dec
jb
push
xchg
mov
hlt
sti
lahf
sbbb
mov
sbb
dec
lock
or
jno
mov
or
cwtl
push
mov
xchg
lods
out
add
jnp
mov
or
cmp
in
or
out
lea
or
fisubs
mov
testl
jo
push
dec
and
scas
cmp
inc
xorl
lods
test
imul
sahf
mov
push
fwait
jl
jne
mul
iret
out
sub
cli
mov
jo
pop
xor
dec
cltd
shl
dec
repnz
ljmp
add
mov
sub
fwait
adc
loop
xchg
mov
and
jnp,pn
mov
jg
cltd
negl
lea
movsl
mov
shrb
scas
mov
dec
mov
ljmp
cmpsl
push
sahf
repz
ds
xchg
int3
xchg
dec
sub
iret
add
or
adc
sub
lahf
sbb
or
sub
mov
jo
cmp
mov
sbb
imul
iret
nop
adc
xor
test
sbb
cmp
adc
in
subb
in
test
stos
aas
inc
xchg
and
in
mov
jecxz
sbbb
nop
cmpsb
push
mov
xor
mov
cltd
aad
ret
xor
cmp
dec
sbbl
mov
or
sbb
ret
sub
or
dec
fbld
out
sbb
inc
insl
loope
and
and
push
mov
xor
cld
cld
xlat
lahf
scas
shl
mov
xchg
jmp
adc
mov
add
call
push
stc
add
cmp
invd
push
lahf
sub
push
outsl
repz
sbb
mov
jmp
fyl2x
cmp
test
addr16
fistpl
nop
repz
jb
push
or
cwtl
or
jb
push
andb
fcom
loope
js
popa
ret
pop
inc
sbb
lret
and
inc
dec
fcoms
std
and
ss
pop
das
cmpsl
cld
fcmovnbe
repz
adc
jge
js
sarl
and
cli
stos
loop
in
adc
sbb
or
inc
xlat
sahf
call
add
jo
lock
mov
in
xchg
loope
or
inc
push
cltd
jae
jb
fcomp
mov
or
aam
loope
mov
mov
jnp
movsl
cmp
push
or
push
das
push
or
js
xchg
pushf
aaa
sbb
jg
dec
clc
daa
stos
xor
push
lds
mov
push
push
xchg
movsl
pop
dec
dec
xchg
mov
cmpsl
pop
cmpsl
ljmp
and
mov
dec
and
adc
sbb
sub
jmp
decb
pop
dec
xchg
xchg
and
stos
or
xchg
xor
or
ja
add
leave
sub
sbb
loope
xchg
rcll
inc
scas
shlb
hlt
cltd
fcom
adc
lcall
scas
clc
dec
jmp
xchg
fnsave
jp
add
and
daa
test
mov
loope
sbb
inc
jecxz
mov
rcll
fldenv
sub
lds
xchg
test
popa
lods
mov
push
mov
ret
and
lods
xchg
xchg
jg
adc
into
push
mov
sbb
cmp
lods
jae
lods
push
xchg
mov
jb
cli
int3
jns
orl
sbb
mov
mov
scas
pop
and
cmp
scas
xor
and
lods
les
or
jno
jmp
sub
test
ds
out
jne
out
push
mov
mov
clc
in
push
jmp
mov
clc
enter
xor
cmc
and
mov
xchg
push
xor
hlt
mov
int
iret
jno
stos
test
add
movsl
fisttpl
loopne
lret
out
nop
jns
dec
push
jns,pt
sarl
shll
adcb
scas
xor
push
push
scas
jns
mov
iret
insb
mov
out
or
lea
xor
adc
xchg
dec
shll
and
sub
pop
mov
cmp
and
adc
outsl
adc
scas
mov
xor
popf
test
cmpsb
rcl
sbb
data16
scas
xor
pop
cltd
lret
inc
fdivrl
sbb
loop
test
rcrl
into
loopne
movsb
ds
sbbl
pusha
int3
das
jo
aad
mov
mov
cmp
adcb
mov
and
pop
sbb
div
test
cmp
repnz
call
arpl
test
inc
insb
jmp
push
out
xor
jno
fwait
or
add
dec
mov
inc
shll
int3
inc
xchg
cli
pop
arpl
xchg
je
xlat
pop
cld
test
pop
lock
mov
cltd
pop
cmp
shll
and
xor
insb
cmp
fdivl
mov
jb
pop
mov
xchg
out
shll
mov
or
gs
dec
xchg
leave
into
jns
jbe
filds
sbb
loope
mov
mov
adc
dec
jns
pop
mov
lods
lds
and
data16
xor
sub
xchg
mul
addl
out
inc
ficoml
push
mov
or
dec
shlb
pop
cs
or
add
push
mov
loope
add
sbb
scas
aam
popf
and
js
movsl
orl
lods
scas
clc
pop
mov
shlb
fcomps
xorb
add
into
rcrl
mov
jmp
xchg
int3
jno
jne
in
inc
mov
mov
sub
imul
stc
push
outsl
adc
repnz
insb
dec
and
jnp
and
lds
or
push
xor
push
inc
add
fsubrs
sub
cwtl
mov
repz
jle
test
lods
popf
dec
xchg
xor
aad
dec
insl
xchg
jg
jg
dec
jle
movsl
jecxz
into
xor
imul
fstl
outsl
into
inc
push
repnz
xchg
cmp
scas
xor
pop
or
mov
sti
xlat
mov
rcl
xchg
imul
xchg
jl
cmp
int3
push
ret
sahf
popf
cld
aas
mov
cmp
xlat
jns
aam
repz
sbb
mov
add
call
inc
xor
stc
out
ss
cmc
jp
adc
pop
loopne
faddp
cmc
inc
pop
or
push
aad
insb
cmc
mov
clc
mov
jns
mov
push
inc
sbb
jmp
dec
xor
aad
pushf
aaa
bound
movsl
lret
dec
push
out
mov
repnz
mov
mov
out
push
popf
add
dec
pop
mov
mov
sbb
cmp
push
jl
adc
add
mov
inc
popf
out
dec
xchg
push
add
out
mov
subl
fcoms
popf
clc
movsl
daa
inc
mov
pop
pop
cmp
icebp
loopne
add
add
mov
mulb
sti
pop
lea
cli
push
mov
stos
xor
int
push
fcmovb
sub
test
leave
in
jne
xor
or
mov
push
and
sub
mov
add
inc
xor
lock
cld
mov
fldcw
rorb
rolb
pop
std
mov
subl
lret
push
cmp
inc
out
add
andl
sub
adcl
inc
cwtl
cltd
dec
jp
arpl
sarb
mov
or
xlat
leave
push
aam
pushf
push
aad
jge
loope
xchg
jns
ds
adc
ss
popa
adc
mov
mov
mov
xchg
and
dec
mov
jge
pop
inc
or
push
cmp
push
in
xor
cmpl
jp
shll
aas
fisubs
insb
add
mov
sti
add
fstps
sti
lahf
inc
ljmp
pushl
andl
cli
fmull
test
xchg
shll
stos
aam
into
js
jns
mov
std
sti
cmc
pop
clc
sub
loop
mov
pop
cwtl
js
fwait
stos
inc
insl
cmc
iret
xchg
xchg
cmc
mov
cmp
jae
gs
add
sbb
and
xlat
fistl
enter
fcmovnbe
xor
clc
repnz
jle
out
rcrb
decl
mov
push
das
cltd
push
lahf
repnz
xor
loopne
push
pop
mov
and
mov
push
push
fldcw
sub
cmp
sub
pop
push
push
popf
fisubrs
daa
jp
popf
push
mov
ss
pusha
adc
mov
xor
mov
and
ljmp
cs
ret
xor
push
stos
sbb
cs
icebp
out
ret
jmp
call
cmp
bound
fiadds
xor
dec
dec
mov
mov
and
cmpsb
les
sarl
push
int3
mov
hlt
cwtl
xchg
mov
jae
stos
ret
xchg
ljmp
andl
jno
stc
roll
pop
outsl
xor
mulb
out
adc
xor
leave
xchg
out
es
call
inc
jno
movsl
sbb
cmp
lret
cwtl
aad
push
ljmp
jge
mov
jle
add
jnp
imull
push
sbb
lock
adc
bswap
adc
adc
das
rorb
aad
imul
mov
mov
xchg
out
push
sub
push
sub
fistl
fcomps
jbe
cmc
mov
ljmp
addr16
add
fnstsw
jae
sbb
cmp
daa
fisubrl
sbb
sbb
iret
fimull
push
repz
dec
sarb
ds
bound
leave
pop
sti
hlt
sub
add
jae
sbb
fcmovnu
mov
jo
dec
jo
jne
jge
adc
adc
xchg
push
pop
hlt
push
dec
out
xchg
cmp
mov
push
sbbb
push
mov
loop
dec
lods
cmp
cmc
cmp
xchg
gs
push
and
jp
std
out
jg
push
leave
into
neg
push
adc
sbb
pop
scas
pop
imul
mov
dec
jae
rcrl
aad
loopne
mov
xchg
cmp
mov
push
or
add
or
pop
jae
and
pushf
mov
cvtpi2ps
js
dec
xchg
out
inc
pop
sar
xor
and
sub
shl
inc
jl
or
aas
outsb
sbb
loopne
push
scas
jmp
xlat
arpl
in
loop
adc
mov
xchg
jle
mov
mov
cmpsb
add
push
dec
adc
pop
jle
or
fidivl
jp
and
addr16
scas
mov
daa
adc
ret
dec
dec
ret
mov
shl
data16
setbe
xor
repz
sti
sub
pop
pop
pop
jb
mov
cltd
nop
xchg
inc
dec
aaa
or
add
clc
loop
or
int
aad
sbb
gs
cmp
loope
icebp
lret
test
sub
or
fnstcw
inc
cld
test
dec
and
mov
sbb
cmp
lahf
fs
pop
fneni(8087
sbb
jmp
pop
jnp
cmp
mov
xor
and
jl
jnp
dec
sbb
les
in
mov
add
jge
fld
and
add
push
insb
stos
xlat
xlat
add
sbb
mov
lods
lock
dec
inc
cmpsl
and
cmp
lock
mov
inc
popa
mov
sbb
mov
fucomip
aaa
sub
nop
jge
ficompl
pop
inc
leave
mov
inc
mov
lea
nop
int3
or
movsl
lds
pop
jge
lea
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
into
loope
mov
jno
add
icebp
loopne
add
add
add
add
add
ss
aam
aaa
repz
and
orb
cld
popf
dec
cli
in
mov
pop
je
ja
or
subb
lods
sbb
cli
icebp
add
iret
out
in
inc
loop
jbe
insb
xchg
pop
pop
add
lahf
pop
sub
add
inc
dec
ret
push
orb
scas
sbb
dec
dec
js
cmp
repnz
mov
xchg
mov
dec
outsl
mov
int3
clc
into
repnz
mov
outsb
insl
xchg
insl
ret
loopne
lds
and
mov
inc
add
je
or
out
popa
adc
push
dec
jo
mov
inc
sbb
fcmovbe
addr16
pop
push
fs
mov
cmpsl
cmp
enter
jo
mov
sti
ljmp
pop
jecxz
sbb
jmp
mov
jno
fldenv
cmc
xchg
lret
in
and
or
push
sbb
ljmp
inc
inc
shlb
jb
lret
sub
cmpsl
xorb
mov
andl
sbb
ss
je
push
movsl
adc
imul
fstpt
in
fnstenv
xchg
or
push
sarl
dec
popa
mov
sub
xchg
pop
push
or
aam
or
xchg
ljmp
sub
adc
lods
int3
scas
sbb
mov
xor
xchg
imul
jne
fmull
out
inc
dec
push
xor
xorl
mov
dec
push
cmp
dec
popa
data16
in
movsl
xor
test
cmp
cwtl
or
dec
push
or
push
or
outsl
pop
out
mov
pop
je
push
mov
jb
fdivrp
and
xchg
sub
sbb
adc
mov
push
push
sbb
inc
lea
aaa
jns
out
pop
fs
loopne
div
sbb
fisttpl
sub
jne
push
out
mov
lahf
add
popa
mov
inc
mov
mov
sbb
imul
arpl
or
fildll
mov
jne
iret
pop
jns
or
out
cmp
sbb
push
inc
jmp
daa
loopne
mov
push
in
adc
jo
repz
mov
pop
jmp
flds
fnstsw
loope
jle
or
cwtl
lcall
jae
sub
pop
pop
and
int
dec
idivb
add
or
xchg
mov
xor
rorl
jge
gs
push
cmp
hlt
and
repz
out
mov
inc
shr
xchg
xor
mov
shrl
add
mov
xchg
mov
pop
jl
test
hlt
and
and
add
inc
sbb
sub
jl
and
lcall
push
inc
sub
and
ljmp
fs
jb
sub
mov
sub
shlb
cwtl
xor
int
xor
sahf
mov
aam
pop
lret
jae
fcomps
gs
dec
movsl
mov
sbb
xor
arpl
add
test
shlb
xchg
xor
and
jno
or
inc
cld
fwait
or
aas
flds
popa
and
sbb
movsb
cmp
or
xor
sbb
loopne
xchg
xchg
mov
dec
ret
add
mov
adc
outsl
push
adc
xor
sbb
inc
push
arpl
adc
cmp
insb
andl
and
cmp
lret
in
aaa
mov
lret
pop
rolb
fbstp
sub
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
out
repz
insl
dec
int
xor
pop
and
dec
fimull
cli
sub
mov
lret
outsl
xor
sti
xchg
sti
or
and
mov
add
icebp
loopne
add
incl
add
add
enter
hlt
or
mov
dec
jns
or
clc
and
inc
push
mov
popa
xchg
cmpb
sbb
xor
fdivs
inc
sbb
es
imul
test
stos
in
inc
scas
mov
out
fsubrs
mov
adc
mov
pop
test
inc
xor
pop
and
inc
jo
mov
aad
jecxz
lahf
or
cmp
add
aas
pop
scas
mulb
data16
adc
cmp
jl
inc
lret
dec
mov
out
iret
push
adcl
cmpsl
xchg
dec
sbb
push
cmp
and
dec
mov
dec
in
and
ret
in
ror
add
add
add
loopne
add
incl
add
add
xchg
popa
addr16
push
es
pop
cld
rcrb
add
xchg
xorb
mov
fisubl
jns
les
scas
loopne
stos
fs
enter
mov
mov
mov
jno
push
push
imul
xchg
and
cmp
test
sbb
hlt
sbb
sbb
mov
jl
scas
int
clc
adc
jns
push
inc
ror
test
xlat
or
and
jns
push
xchg
cmpsb
bound
fcomi
out
push
push
pop
jp
jl
outsb
lret
xchg
jns
sub
cs
pop
mov
test
sbb
sahf
add
incl
add
add
pop
cltd
xchg
pop
mov
xchg
sub
out
push
icebp
scas
sbb
mov
sarb
cltd
rorl
fists
fstpt
rol
cmpsl
pop
sub
stos
jge
cmp
aas
mov
ja
aas
mov
ss
mov
sti
dec
dec
ret
lea
or
mov
xchg
xor
jnp
add
in
jl
sub
xor
jl
adc
adc
ret
add
add
loopne
add
add
add
add
orl
pop
inc
movsb
adc
cmp
jl
fdivp
xor
mov
sbb
int3
or
fs
or
pusha
fimuls
cmp
jmp
xchg
int3
dec
jno
fld
push
fisttpl
mov
gs
adc
cld
adc
jmp
and
pop
in
shll
add
pushf
sbb
or
xlat
adc
pusha
fisttpll
sahf
lock
aam
rcrb
addr16
movsl
sbb
lcall
adc
mov
lock
lret
cmp
xchg
into
sbb
mov
aas
sbb
out
popa
mov
sahf
mov
dec
rol
jecxz
mov
dec
notb
sub
fists
mov
cmp
jp
sub
pop
nop
xchg
mov
ljmp
bnd
mov
add
testl
js
clc
mov
xchg
add
lds
inc
jb
sub
fs
xchg
subl
outsb
in
fs
cld
jecxz
pop
jmp
push
rorl
mov
enter
dec
xchg
mov
dec
icebp
push
jmp
fwait
stos
aas
mov
pop
pop
dec
add
adc
or
mov
cs
lahf
loop
cmp
pop
data16
jmp
add
sbbw
bound
popf
sub
mov
enter
adc
popf
xchg
sar
je
pushf
sub
lds
and
jl
cmpsl
inc
xor
jge
push
jle
lock
je
mov
ds
movsb
add
fsubp
or
sarb
leave
test
xchg
sub
ljmp
sub
shl
cs
mov
jae
and
mov
pop
add
push
fs
adc
aas
pop
adc
es
xlat
sbb
roll
dec
and
jl
frstor
cmp
ljmp
dec
mov
xorb
jnp
mov
lcall
cmp
insb
dec
mov
movsl
inc
cmc
enter
lea
shrl
or
in
inc
lods
loope
mov
sub
in
add
ret
push
adc
in
jne
test
sub
andl
andb
pop
ficomps
addr16
pop
mov
hlt
push
data16
and
inc
lret
bnd
mov
jbe
push
mov
push
pushf
or
addr16
push
rcrb
sbbl
sub
jno
imul
shlb
xchg
ljmp
xor
lahf
movsl
lret
nop
popf
mov
push
mov
adc
lods
mov
jne
dec
mov
insb
pop
test
and
mov
call
fnsave
gs
mov
lock
jne
mov
rep
cmp
stc
shrl
js
pop
jmp
fnsave
clc
pusha
and
fwait
in
loop
aad
mov
lcall
sub
inc
fs
test
sub
mov
jo
or
lea
popa
je
negl
mov
je
insl
cmpl
push
lods
sti
xor
popa
ljmp
fisttps
lret
outsl
inc
repnz
insb
loope
lock
daa
repz
clc
idivb
push
sub
or
flds
mov
fcmove
cmp
imul
cmp
push
test
and
das
dec
arpl
loopne
stos
stc
pop
adc
test
pop
lock
sub
andl
lahf
lods
cmpsb
pusha
mov
mov
jmp
inc
inc
adc
add
add
loopne
add
add
add
add
test
scas
ret
scas
out
inc
pop
mov
mov
mov
in
nop
fsubr
cs
repnz
sti
cmp
mov
push
insl
mov
mov
es
and
xlat
add
cs
pushf
jp
mov
xchg
fmul
mov
xchg
hlt
push
je
inc
dec
lahf
in
movsb
cs
sbb
andb
xor
stc
or
popa
xor
push
pop
push
aas
popf
rorb
cmp
inc
enter
xchg
pusha
outsb
xchg
das
jp
sar
mov
mov
jb
xchg
mov
push
xor
ret
jle
scas
xchg
lahf
in
js
imul
mov
cld
or
inc
mov
sbb
std
popf
mov
mov
mov
and
sbb
push
dec
fimull
roll
push
or
inc
aad
stos
pop
mov
popf
xchg
cli
shrl
loope
xchg
repz
fsubp
mov
fdivs
pop
pushl
and
cmp
cs
and
fsubr
mov
cli
push
mov
sbb
dec
mov
into
fld
push
jl
xor
fimuls
hlt
jnp
test
ljmp
mov
fadds
xor
lock
add
out
lret
inc
fildll
into
imul
shll
mov
mov
push
data16
dec
jp
das
out
mov
movsb
dec
lock
push
add
dec
movsb
mov
test
mov
aaa
mov
xor
add
icebp
loopne
add
add
add
add
and
mov
dec
push
push
xchg
int
adc
mov
call
loop
scas
push
fisubrl
stc
push
icebp
jecxz
jae
sbb
jmp
cmp
test
roll
dec
stos
out
int3
fidivrs
imul
aas
fidivs
cwtl
or
aam
addr16
js
dec
mov
das
jbe
xchg
push
orb
loope
jp
fwait
cmpsl
dec
add
or
int3
pop
pop
cmp
insb
jno
mov
sub
in
test
inc
pusha
in
cmp
and
je
sbb
sub
cld
jns
xor
repnz
pop
adc
shll
adc
fsubrl
xchg
ret
mov
insl
xor
cmp
sbb
sbb
shr
lock
adc
push
daa
fs
xchg
pop
jle
sarb
dec
repnz
cmc
mov
es
mov
in
fucomp
pop
mov
and
mov
jge
mov
push
data16
out
mov
std
stc
or
push
divb
outsb
pop
and
ljmp
daa
xor
or
fwait
popa
xchg
sub
int
xor
adc
and
mov
mov
xor
push
ficoms
ljmp
cmpsb
jge
lea
jecxz
mov
pop
push
sub
repz
adc
jmp
jecxz
cmp
ret
or
cs
xchg
out
testl
sbb
sub
pushl
mov
aam
add
jno
lea
dec
or
inc
mov
or
hlt
jno
lahf
push
pop
dec
mov
mov
inc
ret
shlb
addr16
fcoms
rcrb
sub
push
pop
fmuls
data16
jp
cltd
repnz
into
ret
push
mov
inc
push
mov
lret
pop
cmp
and
or
daa
jbe
loope
ret
cmpsb
jg
je
shlb
adc
inc
mov
xchg
push
nop
mov
sbb
scas
inc
or
push
jb
cli
ja
jnp
in
cwtl
out
mov
mov
jbe
and
add
ret
inc
ficoml
pop
cmc
ljmp
push
dec
sbb
ret
pop
xchg
or
xor
addr16
pop
out
addr16
aam
mov
or
xchg
movsl
push
sti
idivl
mov
cmpsl
or
imul
adc
fs
imul
iret
iret
das
lds
negb
or
mov
push
ja
lock
fcmovnu
mov
sub
jb
out
dec
dec
jecxz
std
add
mov
jbe
dec
stc
lcall
push
pop
into
adc
decb
ds
mov
mov
jbe
int3
mov
cmp
out
xlat
push
imul
fs
fsubrl
lock
nop
pop
xchg
sti
or
add
mov
mov
or
add
loopne
add
add
add
add
push
insl
test
mov
adc
sub
pop
lds
ja
js
mov
sti
fmuls
dec
enter
lock
and
jmp
jbe
mov
cmp
scas
iret
jmp
sub
add
or
bound
stos
lahf
lock
pusha
mov
popa
fimull
cmp
or
lods
enter
loope
bound
xor
ud0
pop
inc
push
mov
jmp
xchg
sbb
cmpb
dec
cwtl
dec
inc
jle
jb
scas
sub
decb
ds
sub
rcl
loopne
repnz
out
push
mov
mov
ret
pop
lcall
jp
scas
jnp
and
inc
xchg
sti
inc
mov
pop
fs
and
adcb
sub
push
loop
pop
in
fcoml
pop
ss
out
adc
xor
jbe
hlt
adc
jmp
nop
dec
dec
inc
xchg
push
and
push
jecxz
push
aas
loope
sbb
lds
mov
push
and
rdmsr
fisttps
xchg
fcomps
stos
or
mov
dec
or
test
popa
push
fldcw
add
cmpsl
push
add
xlat
fsubrs
mov
nop
popa
inc
fcmovne
int
shll
dec
jb
pop
mov
sub
and
aad
testb
or
data16
sbb
jl
out
mull
stc
pop
pop
mov
pop
cmpsl
pop
push
insl
loop
popa
cmpsb
clc
jno
leave
out
pop
lods
or
push
and
arpl
loope
inc
mov
scas
movb
jns
inc
rorb
mov
pop
aaa
lock
inc
xchg
stos
sub
je
ljmp
leave
stos
adc
mov
mov
pusha
das
jle
cli
jmp
sbb
enter
test
addr16
ja
sub
sahf
mov
fsubrs
and
or
movsl
dec
mov
popf
jmp
xchg
xchg
adc
aaa
sbb
mov
xchg
fcomp
cmp
aaa
mov
sub
push
scas
pop
fistps
jno
add
add
mov
push
hlt
repnz
xor
push
and
xor
sub
mov
iret
into
pop
sub
jge
mov
jmp
or
and
int
repnz
in
mov
inc
aad
fnsave
push
inc
out
and
imul
add
daa
pop
stc
loope
jge
shl
scas
xchg
rcl
lods
sar
inc
sbb
add
xchg
pop
test
dec
xor
in
mov
dec
das
mov
pop
nop
rcll
dec
fs
sub
das
xor
mov
mov
pushf
sub
add
enter
cltd
je
inc
push
adc
add
push
fdivrs
and
mov
or
and
jnp
pop
mov
pop
pop
aad
cwtl
jbe
cwtl
inc
mov
xor
xor
nop
cld
jge
loopne
clc
or
adc
lock
test
iret
decb
sub
adc
adc
enter
dec
adc
jmp
jno
insb
pop
pop
lods
daa
out
movsb
xchg
push
push
aas
fistpll
clc
js
psrlq
mov
out
jo
mov
dec
add
adc
icebp
aaa
in
mov
ret
ljmp
pop
dec
xchg
push
xlat
aaa
mov
into
fchs
jp
fcmovb
mov
mov
les
leave
sbb
js
int3
inc
icebp
hlt
pop
xor
adc
mov
sahf
inc
fiaddl
lahf
or
shll
jns
xchg
xchg
js
shl
test
pop
sub
not
cmpb
inc
scas
icebp
and
bound
cmpsl
or
int3
sbb
adc
fsubrl
pushf
mov
ss
xchg
cmc
sub
xchg
inc
pop
in
arpl
out
sbb
fs
or
fimuls
inc
out
in
repnz
jbe
insb
mov
in
fs
push
mov
sub
lret
loop
pop
mov
shlb
fwait
leave
jg
sub
outsb
rorb
xor
jmp
push
cmc
mov
and
xchg
mov
cwtl
sub
shlb
push
cli
test
add
xor
gs
das
mov
or
stos
xor
cmp
sbb
dec
ret
das
scas
cmpl
pop
jp
cltd
pop
pop
imul
push
adc
mov
cmpsb
xchg
sti
imul
jecxz
negl
xchg
xor
sbb
push
in
addr16
push
jo
ja
ja
mov
cmp
imul
into
pushf
mov
les
test
pop
mov
pop
jge
xor
push
or
hlt
and
xchg
bound
pop
ljmp
jle
das
test
addb
ljmp
popf
jne
scas
push
outsb
in
fisubrs
mov
fdiv
add
xor
cs
fcmovnb
sahf
mov
xor
push
aas
pop
add
push
xor
xchg
add
lods
pop
adcl
xchg
stc
xor
cmp
cmp
sub
std
add
fs
add
es
into
xor
mov
cld
lods
mov
mov
test
pop
lods
je
adc
lret
push
roll
xchg
mov
test
aam
loope
nop
mov
cmp
test
dec
sub
pop
pop
jge
pushfw
push
pop
out
dec
push
xchg
cwtl
enter
ret
mov
pop
cmpsl
ret
ljmp
int
sub
cmp
lds
sub
icebp
ja
inc
ret
jno
jecxz
sarl
lret
or
fidivs
push
xchg
pop
out
int3
data16
or
dec
aad
out
or
bound
pop
xor
lods
jl
hlt
lea
xor
enter
cld
sbbl
fucom
push
pop
inc
out
scas
adc
in
jge
xor
and
or
xchg
out
stc
int
movsl
pop
data16
add
sbb
sub
lahf
ja
aad
imul
out
aaa
mov
dec
push
dec
sub
repnz
test
fidivs
add
insb
adc
mov
sub
leave
push
movsb
adc
xchg
clc
movsb
cmpsl
xchg
jns
or
in
cmovge
stos
rol
test
lods
xchg
test
dec
inc
repnz
pop
loop
pop
and
mov
int3
outsl
in
or
test
prefetch
or
rclb
pop
in
sub
call
xchg
mov
icebp
sub
stos
jl
pop
mov
pop
dec
xor
cmpsl
clc
cmp
pop
inc
cmp
repnz
sub
cmpl
and
lods
inc
cmpsl
mov
iret
cli
mov
xchg
dec
and
add
add
rcrb
mov
shl
stc
xchg
hlt
pop
mov
push
lods
movsb
inc
push
movsb
mov
adc
fwait
or
jmp
sub
jno
pusha
xor
stos
sub
jmp
push
inc
mov
xchg
bswap
xchg
insl
and
sub
test
pop
repz
outsl
mov
push
push
subb
and
mov
aad
outsl
pop
push
enter
mov
cmp
out
xchg
inc
xor
or
jns
dec
or
in
les
xchg
rorl
pop
push
repnz
imul
stos
fisubl
jmp
imul
push
enter
cld
mov
mov
inc
fdivrl
xor
jno
sbb
xchg
pop
icebp
jle
push
mov
les
stos
imul
fdivl
sbbb
mov
repz
jl
add
icebp
loopne
add
incl
add
add
push
sub
jno
cmpb
fadds
test
sbbb
pop
jmp
xor
psrld
jb
pop
or
sub
mov
cmpsl
aad
mov
rcr
lock
mov
xchg
cmpb
fsubr
xchg
addl
cmp
dec
inc
shl
inc
cmp
jo
insb
mov
xor
or
mov
stos
cli
aas
push
shrb
sti
pop
pop
xchg
push
pop
ret
pop
add
add
loopne
add
add
add
incl
test
xor
js
mov
sub
sbb
std
adc
xchg
out
les
jne
popa
test
cmp
addr16
push
adc
cmpsb
je
out
xchg
sub
jne
insl
xchg
inc
inc
int
pop
out
push
pop
popa
call
lahf
divl
and
or
roll
add
icebp
loopne
add
incl
add
add
pop
and
in
adc
je
push
fistpll
sar
in
jns
lret
mov
sarl
shl
dec
xchg
cmpsb
dec
inc
inc
lret
jmp
push
adc
fisttpl
inc
outsb
pop
and
jb
ret
popa
add
add
loopne
add
decl
jne
xchg
lcall
push
daa
push
popf
mov
out
fstl
nop
in
xchg
lcall
shrl
add
popf
lods
jmp
mov
pop
icebp
cmp
adc
js
or
fisttpl
push
shr
in
das
inc
shll
xor
jecxz
xlat
push
push
xchg
dec
gs
out
daa
inc
pop
dec
xor
cmpsl
jmp
fbstp
stos
loopne
jnp
shlb
dec
data16
mov
add
scas
mov
in
daa
push
jecxz
add
test
inc
in
inc
shrb
jbe
sbb
movhps
sti
cmp
jge
int
stos
mov
sahf
js
aaa
or
dec
fcmovu
cmp
std
pusha
scas
mov
in
inc
ja
push
mov
fsubs
push
mov
sbb
pop
sub
jg
xchg
imul
inc
lcall
icebp
xchg
dec
cmp
lret
sub
pop
das
push
movsb
test
fs
sti
aam
dec
mov
int3
xor
jmp
scas
out
leave
int3
into
push
fcomi
sub
add
dec
jb
mov
imul
xor
lods
andb
lret
push
xchg
and
adc
sbb
add
icebp
loopne
add
incl
scas
mov
push
nop
xchg
iret
aas
mov
loopne
adc
out
mov
imul
inc
xchg
push
cmpsl
pop
fstpl
mov
ljmp
xlat
data16
sbb
mov
add
mov
push
ja
add
jmp
repz
xor
mov
push
mov
mov
ljmp
adc
xor
mov
scas
test
fwait
ja
test
fisubrs
cmp
mov
inc
xchg
gs
lcall
in
fiadds
fcmovnu
push
inc
int
ja
lcall
incb
xchg
pop
xorl
outsl
popf
ljmp
aam
cmp
lcall
or
sbb
popa
int
adc
xchg
jge
sbb
je
or
lret
mov
addb
jp
mov
xchg
insl
lock
lock
push
icebp
dec
insb
movsl
lds
jo
call
ss
adc
fcomps
push
clc
aad
and
add
add
pop
xor
mov
lea
cmp
out
fldenv
hlt
cmp
jge
dec
aam
pop
and
sub
mov
out
mov
sub
stc
pop
fistpl
or
fadd
mov
test
jns
int
pop
icebp
aam
cmc
roll
sub
adc
push
lcall
in
inc
cmpsb
int3
mov
clc
xor
mov
pop
cs
adc
bound
jno
xor
push
insb
sbb
push
js
pop
lds
nop
jnp
pop
mov
int
stc
cwtl
test
pop
sub
rolb
imul
pusha
addr16
or
pusha
test
pop
inc
push
nop
cmp
lea
sahf
in
cmp
andb
movsb
add
jge
cmpsb
inc
nop
andb
scas
push
aas
gs
jmp
lret
fcmovbe
add
cmp
cmpl
in
sbb
sarb
jne
lds
pop
pop
mov
jo
push
pushf
iret
pop
lea
ret
and
jle
bound
nop
xchg
leave
test
shll
clc
lcall
sahf
mov
dec
cmp
gs
subps
insb
pop
sub
into
mov
fwait
cwtl
arpl
imul
dec
or
stos
mov
sbb
cld
xchg
inc
loope
outsl
repz
push
cltd
push
inc
jmp
add
dec
fistpl
push
or
cmp
loope
aad
sahf
sbb
rcr
push
ljmp
sbb
call
pusha
xchg
test
stos
movl
push
adc
insb
popf
leave
push
loope
mov
add
add
loopne
add
incl
push
push
xchg
aad
inc
cltd
mov
push
hlt
gs
or
js
sub
das
pop
lret
jl
pop
out
leave
pop
shll
je
push
bound
fmull
addr16
div
movsb
push
xor
aam
sub
cmp
pop
test
call
out
or
adc
lock
sahf
xor
push
sbb
pushw
inc
movsl
jno
jne
mov
pushf
sbb
xlat
cld
call
cmp
mov
sarl
out
addr16
push
mov
movsl
std
ds
dec
xchg
adc
jp
lret
push
inc
in
adc
ror
pushf
jnp
daa
cmpsb
sub
stc
in
jmp
cmp
mov
xchg
inc
inc
xchg
and
fwait
hlt
repnz
stos
adc
and
jns
imul
push
dec
push
aaa
scas
sbb
inc
cmpsb
aam
mov
mov
rcr
pop
fdivp
in
or
mov
jns
popa
mov
lods
iret
fwait
xchg
xor
std
movsl
es
xor
and
fnstcw
mov
dec
dec
rcr
dec
sbbb
push
aas
stos
test
jnp
mov
adc
sbb
xlat
jno
aas
pusha
lea
stos
shll
push
stc
push
inc
lock
sub
test
inc
lcall
mov
inc
xchg
ljmp
cltd
pop
and
enter
push
push
inc
add
add
add
loopne
add
incl
add
add
mov
push
push
xlat
mov
and
jecxz
push
lret
ret
sbb
shlb
aam
xor
icebp
gs
ficoms
push
adc
cmp
cmc
and
add
push
call
ret
loop
and
jnp
cmp
jo
scas
dec
jae
mov
nop
test
in
sbb
add
jmp
jb
aam
push
add
adc
mov
push
dec
inc
sbb
push
add
cli
mov
ss
mov
cmp
xchg
sti
xchg
insl
push
mov
cmp
push
repz
cmp
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
dec
test
push
add
add
add
