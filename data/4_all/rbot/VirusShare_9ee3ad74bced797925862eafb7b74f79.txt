mov
or
and
cmpsb
dec
dec
sub
aaa
add
mov
rcr
inc
clc
push
insb
add
pop
seto
adcl
aas
xchg
xchg
dec
jb
adc
mov
sarl
pop
adc
addl
xchg
and
jl
loopne
jp
lahf
mov
adc
mov
jmp
mov
xchg
xlat
test
cmp
and
xchg
dec
xchg
and
loopne
inc
roll
stc
mov
je
aaa
aad
cmp
mov
inc
lds
or
sarb
push
loopne
mov
in
inc
rcrl
pop
enter
insl
jo
adc
movsl
ficoms
mov
jb
xchg
call
inc
sbb
repnz
daa
inc
push
push
aas
mov
repz
add
sub
dec
pop
mov
sahf
lods
jae
sbb
sbb
mov
out
shlb
pop
push
sbb
xor
outsb
push
jns
enter
sub
fistps
and
push
mov
cmp
insb
dec
mov
pop
jbe
hlt
cli
sbb
fists
mov
pop
repz
xor
out
jg
lods
outsb
lea
and
push
add
adc
rolb
xor
pop
sahf
add
dec
mov
xchg
addr16
mov
sub
cmp
xchg
mov
sbb
int3
aam
jae
add
xchg
icebp
sub
movsb
push
lods
adc
push
mov
sub
xchg
subb
stos
and
push
cmp
lds
lock
cmp
enter
or
into
in
je
std
jp
stos
push
adc
pusha
imulb
roll
jo
movsb
orl
jns
sub
pusha
jo
sub
inc
inc
icebp
cmpsb
mov
in
mov
sbb
xchg
and
test
test
sub
jo
inc
jmp
enter
jnp
mov
xchg
sbb
add
pop
or
fs
add
fcomps
cmpl
ret
mov
or
jg
or
push
mov
mov
push
jb
iret
mov
sub
sbb
gs
in
cmp
add
push
lret
aad
and
icebp
sbb
ret
popf
ja
mov
mov
shll
std
mov
test
outsl
inc
stc
and
or
mov
dec
cmp
divb
mov
xchg
mov
test
cmpsl
in
cmp
push
cmpsl
inc
xor
sub
push
cmp
ss
xchg
shll
pop
cwtl
sub
lods
cwtl
xor
lret
shrl
bound
inc
rcrl
shrb
rcr
ret
jg
pop
aad
add
lock
aam
sbb
sbb
movsl
or
imulb
push
fistl
xor
icebp
inc
push
pop
loop
mov
jns
icebp
push
push
adc
xor
js
sub
cld
push
fwait
mov
add
scas
sbb
out
ret
test
shlb
xchg
test
in
into
lret
mov
js
fwait
popf
leave
or
xor
mov
in
jns
sbb
frstor
dec
je
in
push
sbb
cs
mov
sub
out
cmc
and
push
sbb
movsl
mov
mov
lcall
mov
std
mov
test
or
sub
mov
out
lret
mov
rcrl
lods
rol
xor
sbb
std
mov
gs
shll
adc
mov
fists
jne
movsb
adc
sub
leave
popf
lahf
push
inc
mov
cmp
mov
cmp
push
sub
jnp
cmp
jp
mov
xchg
mov
leave
xor
int
movsb
mov
shr
mov
insl
push
cld
dec
push
fcoms
lods
fwait
xchg
test
jecxz
mov
outsb
aaa
aad
stos
or
fstpt
int
das
mov
sbb
xchg
dec
jl
ja
xchg
mov
clc
outsl
in
loop
aas
and
cs
scas
jge
jmp
sbb
jnp
push
or
imul
daa
xchg
bound
jge
mov
icebp
test
shl
ret
js
add
arpl
es
je
jb
xchg
cld
cmp
adc
hlt
mov
stos
popf
jns
rorl
es
mov
in
push
in
pop
es
dec
enter
push
pop
pop
sarl
fdivl
ja
push
jnp
add
stos
fstps
push
ret
rolb
xor
cs
into
mov
aad
enter
push
fsts
jae
sbb
cmp
sbb
jo
shrl
lock
push
bound
jno,pn
int
rcrb
jne
sub
aad
ret
test
aas
test
cwtl
sti
lret
dec
test
jb
imul
ds
rclb
adc
mov
aam
dec
xchg
repz
les
dec
icebp
addr16
sub
nop
dec
hlt
pushf
repnz
xchg
rol
scas
test
or
pop
stos
aaa
mov
add
in
rcr
mov
pop
fcomps
dec
fldt
and
fsubr
cwtl
mov
pop
xchg
in
adc
push
adc
sbb
into
aam
decl
loope
push
mov
sbb
loopne
add
xchg
insb
insb
push
fs
or
pop
sbb
or
mov
sbb
mov
pop
inc
scas
or
pop
test
xor
icebp
les
mov
jbe
mov
jmp
loopne
adc
nop
stos
lcall
pop
fldenv
incb
roll
sub
pop
iret
dec
in
mov
sub
call
iret
repz
out
cmp
push
loop
popf
aas
sub
and
push
test
arpl
ror
xchg
sub
push
mov
out
lret
imul
ja
or
cmp
sbb
mov
test
rclb
das
in
mov
movsb
inc
test
ds
test
stos
push
add
bound
xchg
bound
insl
cld
add
jbe
stos
cmpsl
addr16
jnp
popf
shlb
lret
cmp
ds
mov
mov
pop
and
and
mov
pop
lret
jno
sbb
inc
imul
pusha
insl
pop
decl
push
jae
jge
mulb
faddl
inc
cmpsb
jnp
ffreep
jbe
sub
dec
stos
adcl
dec
sub
test
add
lret
sahf
add
xchg
mov
mov
mov
pop
mov
shlb
xchg
xor
cmp
jne
imul
jg
sbb
es
xchg
add
xchg
dec
jne
aad
mov
hlt
lods
es
or
mov
paddq
sbbb
add
ljmp
adc
adc
and
lds
enter
xor
and
push
cmp
loope
inc
in
pushf
popa
adc
pop
sbb
push
or
push
mov
in
test
insb
dec
mov
lret
mov
mov
popa
in
mov
imul
and
inc
movsb
int
js
inc
dec
hlt
jns
pop
ffree
test
sub
adc
inc
xor
jbe
sub
paddusb
popa
jecxz
repz
cs
and
mov
inc
mov
adc
mov
adc
xor
adc
inc
dec
mov
xchg
call
pusha
xlat
sub
sti
lcall
pop
push
data16
push
mov
cmpsb
aad
mov
ja
loop
inc
insl
dec
rorl
in
mov
shll
mov
pop
mov
and
sbb
pop
fimull
inc
jp
iret
jnp
xor
cmpsb
cmp
mov
imul
xor
pop
mov
ja
sub
repnz
jle
push
ja
mov
jecxz
loopne
imul
add
mov
inc
mov
or
rorl
das
ss
int3
cmp
cmp
filds
xchg
or
ficomps
lods
fsubs
cmp
lahf
fisubl
lret
mov
in
arpl
push
jp
dec
test
test
out
or
and
test
outsb
push
adc
ret
jno
shrb
lret
xor
loop
rorl
jle
push
inc
fs
repnz
mov
cmpl
jmp
mov
cld
push
add
xchg
jmp
clc
push
dec
dec
fwait
mov
inc
sbb
or
shrb
ret
xor
or
cmp
and
or
push
mov
push
jle
test
push
inc
and
push
mov
js
int
xchg
jecxz
lock
and
mov
push
inc
fsubrs
das
insl
mov
mov
inc
ljmp
lcallw
push
sub
loop
or
mov
cmpsb
or
cld
fdivrs
pop
mov
and
mov
cmc
add
aaa
in
ljmp
adc
hlt
jl
xor
arpl
aaa
fdivrs
lock
pop
rcrb
movsl
inc
out
insl
adc
inc
ljmp
and
push
in
mov
jmp
jge
pop
aaa
push
fldcw
cmp
sahf
insb
mov
pop
jbe
xor
mov
pop
jg
in
in
jnp
popa
sbb
and
mov
mov
push
mov
loop
dec
inc
seta
scas
xor
cmp
mov
das
mov
cmc
cwtl
test
pop
sub
xchg
mov
cmp
in
pop
and
popa
sub
xor
sbbb
das
cmp
out
inc
mov
jbe
mov
arpl
outsb
fldcw
push
cmp
repz
hlt
lret
scas
popa
gs
sub
pusha
icebp
jp
mov
aam
test
sub
out
cmp
pushf
adc
inc
jmp
and
mov
cli
jne
cmc
je
pop
ljmp
pushw
imul
arpl
in
dec
loopne
jno
lea
in
mov
gs
iret
jecxz
mov
call
or
or
and
je
cmp
xchg
scas
roll
xchg
xchg
inc
ljmp
cmpsl
repz
xchg
cmp
mov
shll
inc
mov
jno
jnp
es
testl
js
push
sbb
xor
or
mov
mov
shlb
ja
xchg
jl
and
push
scas
mov
addb
inc
int
push
mov
cmp
addr16
clc
loope
call
movsb
loop
sahf
dec
mov
push
testl
jp
xor
dec
clc
jns
in
ret
insb
jge
into
cs
cmp
es
mov
dec
push
sub
mov
fcoms
push
pop
shufps
mov
pop
add
arpl
push
stc
rclb
arpl
sbb
insl
imul
ss
pushf
push
out
out
sub
movsl
fsubs
shrl
cmpb
jl
pop
mov
subb
mov
push
cmpsb
push
cs
mov
xor
and
and
test
mov
arpl
jle
push
inc
test
lock
aas
pusha
and
push
adc
int3
sbb
add
cmp
scas
dec
std
mov
out
mov
xor
xor
cmpsl
push
lods
inc
push
xchg
push
call
dec
jne
repnz
xor
dec
rolb
add
xchg
sub
sbb
popf
sub
lret
xchg
and
sbb
lods
stos
popw
push
ja
adc
in
je
sbb
cmpsl
in
imull
xlat
mov
sbb
adc
fiaddl
jecxz
cmp
push
pop
mov
push
push
dec
shl
pop
jnp
rcrl
lret
mov
loopne
and
cmp
cmc
and
jge
cmp
in
inc
inc
out
jge
xlat
popf
outsb
mov
pop
mov
stos
stos
sub
push
cmp
lahf
inc
pop
xor
add
pushf
jbe
sbb
mov
test
mov
test
dec
cmp
add
je
cmpl
jecxz
stc
fisubrl
stc
jmp
fucomi
push
adc
int3
xlat
sub
pop
adc
cmpsl
bound
pop
xchg
sbb
push
sarl
xchg
mov
dec
inc
inc
cmp
inc
mov
scas
xor
movsl
jg
shr
loop
loope
cmp
out
dec
sbbb
icebp
cltd
mov
in
icebp
mov
in
imulb
mov
push
push
mov
xor
mov
insb
sbb
adc
adc
add
jne
adc
in
pop
gs
xor
outsb
pusha
xchg
mov
adcb
xorb
fsubrl
jae
hlt
test
inc
pop
shll
insb
xor
mov
inc
mov
aad
call
roll
mov
push
pop
jbe
out
int3
leave
xor
sahf
push
out
scas
testl
xchg
loopne
in
inc
xor
iret
fidivs
cltd
adc
jae
xor
loop
jmp
and
and
out
xlat
lret
lret
xor
sbb
xchg
xorl
add
pushf
dec
in
fmull
xchg
in
in
inc
cmp
cltd
popa
xor
js
loopne
and
aam
mov
mov
fisttps
in
jne
ficompl
out
xlat
jge
mov
outsb
aad
dec
sub
and
push
mov
movsb
sub
pop
subb
arpl
dec
adc
lret
add
pop
pop
repz
cs
stos
ljmp
mov
pop
ss
jns
fisttpll
jle
popa
mov
or
std
stos
jb
movsb
jmp
mov
push
imul
inc
rcll
popa
nop
push
and
xchg
sbb
cmp
mov
sbb
lret
add
xchg
int
aaa
loope
in
aaa
aam
pop
test
mov
or
iret
inc
repnz
movsl
sbb
nop
lahf
inc
xor
inc
dec
jmp
dec
sarl
pushw
add
ss
pop
add
jne
push
sbbl
bound
and
adc
lock
cmc
les
popa
icebp
cld
mull
fs
add
jo
int
cmp
jmp
adc
jno
outsl
jmp
xor
add
mov
pop
jle
inc
xor
in
imull
xchg
in
lcall
sub
andb
scas
sub
in
call
xchg
lock
fs
stos
dec
xor
icebp
fcmovnbe
ljmp
test
add
sbb
adc
stos
aad
add
xchg
into
sub
test
mov
not
es
push
mov
fwait
or
cmc
inc
push
cmp
xchg
or
adc
nop
sbb
mov
mov
sub
sub
cmc
mov
jmp
mov
ds
repz
inc
jno
push
mov
mov
adc
mov
fisubrl
pop
fidivl
xor
fsubl
out
cmpsb
lea
daa
std
aaa
mov
negl
in
cmp
add
mov
inc
test
bound
inc
or
outsb
jg
mov
cmp
in
test
add
adc
dec
lahf
mov
scas
mov
lcall
repz
shl
sti
pop
mov
sub
out
pop
mov
dec
cmc
cmp
call
push
pushf
mov
sahf
add
imul
cmc
fdivs
jnp
movaps
cmp
rcrl
daa
jo
pop
adc
stos
inc
cltd
and
cmp
add
jp
fwait
cli
pop
test
cmp
adc
push
testl
repz
std
pop
dec
hlt
bswap
inc
cmpl
mov
mov
inc
into
mov
and
out
enter
lret
loopne
stos
pusha
mov
or
fs
cltd
fstps
clc
cmp
jo
sbbl
jns
cmc
jg
stos
das
lods
mov
arpl
xchg
push
lret
jg
or
in
lahf
sbb
sub
inc
add
leave
adc
int3
andl
cmp
pop
aaa
lcall
loop
int
fcmovne
cmp
sbb
push
mov
rclb
das
iret
mov
or
mov
xchg
rclb
arpl
repz
mov
inc
add
loope
jmp
shrb
jmp
scas
mov
fwait
xchg
pop
mov
out
jb
fwait
pop
push
gs
sub
jo
outsb
sub
mov
cwtl
push
jo
mov
sub
sbb
mov
adc
add
andb
stos
jge
xchg
mov
addb
shl
fsubs
movsl
sbb
pop
mov
xor
pop
push
pop
mov
push
ror
dec
sbb
xchg
xchg
in
sbb
cwtl
mov
out
repnz
mov
in
mov
mov
stc
negb
cmp
inc
mov
add
fildl
or
xor
nop
jle
divb
test
mov
stos
sahf
mov
lods
mov
adc
mov
or
nop
xchg
inc
cmp
xchg
and
aas
lret
sbb
cmp
push
dec
cmpl
or
dec
jne
lcall
rclb
jle
and
add
jno
test
mov
pop
insb
sbb
in
cmpsb
sti
jle
nop
dec
fisttpll
mov
and
movsb
dec
xchg
push
jecxz
xor
pop
adc
es
pop
xlat
adc
shrl
mov
and
out
int3
xor
loop
cmp
fdivrp
add
xchg
push
sahf
and
test
std
jle
imul
clc
les
jl
mov
cs
cmp
push
out
add
mov
and
mov
mov
call
sub
enter
fistl
cmpsl
push
dec
sbb
mov
sbbl
psadbw
dec
adc
imul
xor
repz
adc
sub
inc
or
scas
aas
addr16
add
je
pusha
sahf
pop
sbb
mov
dec
pop
lock
and
push
sahf
xchg
out
arpl
jo
pushf
or
ljmp
add
int
add
aad
aam
lahf
mov
repz
sbb
jbe
dec
mov
mov
stos
movsb
ja
cs
pop
or
mov
lret
add
adc
mov
loope
push
scas
cmpsb
test
incl
shr
or
adc
cld
repz
cmp
rcll
inc
or
movzbl
mov
jnp
xchg
sub
mov
add
cmp
out
fdivs
jae
push
stos
outsb
scas
sbb
dec
aas
lret
xor
neg
pop
mov
sahf
into
add
push
iret
adc
dec
xchg
stos
inc
shrl
xor
cmp
jp
jg
jmp
xor
mov
or
adc
cmp
mov
jno
out
movntq
test
hlt
mov
push
cmp
mov
aam
cmp
mov
or
mov
aas
xchg
xor
add
int
negl
aaa
data16
or
leave
or
xor
inc
cmpps
std
pop
push
aaa
mov
rcr
out
xchg
inc
mov
out
gs
aaa
push
xor
jmpw
dec
arpl
cld
cmp
pop
pop
lret
and
rcr
mov
popf
call
fldt
xchg
pop
scas
mov
xchg
shll
movl
mov
dec
sbb
out
pop
jmp
mov
insl
test
mov
lds
jmp
jmp
push
xchg
incl
mov
pop
mov
aas
pop
fwait
les
jnp
sti
dec
movsb
out
mov
inc
addb
into
mov
dec
je
loop
mov
enter
push
pop
clc
push
sbb
cmp
inc
repz
adc
outsl
imul
xorb
rol
das
push
lahf
in
mov
xchg
pusha
pop
fistps
pop
gs
fucomi
mov
jmp
mov
scas
fwait
hlt
jge
jae
repz
icebp
outsl
lds
lock
xchg
insb
inc
scas
repnz
mov
fs
div
push
loopne
and
push
shrl
iret
inc
pop
in
pop
je
mov
cs
xchg
rcrb
dec
and
jo
jmp
push
dec
arpl
and
sbb
adc
xor
in
nop
gs
xchg
fisubs
cmp
xchg
dec
and
jp
fadds
pusha
mov
pop
pop
pop
push
int
dec
inc
sub
xlat
cmpsb
xchg
ljmp
xlat
pop
daa
dec
scas
iret
pushf
in
xor
mov
shlb
cmp
dec
jbe
dec
lret
sub
js
pop
sub
ljmp
lret
push
hlt
dec
and
inc
insl
push
in
push
ss
cmp
mov
mov
outsb
fldcw
and
bound
mov
scas
and
je
in
insb
mov
xchg
cmp
sahf
inc
sub
mov
mov
sub
pop
sub
das
bound
popf
mov
mov
sbb
dec
pop
stos
out
pop
sub
iret
push
pop
sar
cmpsl
fndisi(8087
test
push
pop
popf
inc
jae,pt
push
jo
rcrb
inc
inc
or
mov
pushf
pop
leave
fsubr
and
pop
jnp
mov
jmp
je
test
imul
jg
add
rcr
mov
dec
test
adc
adc
cmpsb
jge
movsb
mov
orb
and
subb
stos
cmp
lock
test
xchg
lods
fcomps
adc
inc
test
cltd
push
int3
and
jns
leave
sbb
xchg
hlt
pop
xchg
push
xlat
push
popf
pop
ja
enter
xorl
stos
dec
cmpsb
clc
les
sub
rol
inc
xchg
daa
xor
popa
mov
mov
inc
repz
mov
adc
and
mov
add
pop
in
ret
or
cli
cld
notb
adc
cmpsb
lock
mov
ret
xor
xchg
or
rcll
sub
rcrb
lods
mov
push
and
fnstcw
or
into
cltd
outsl
loopne
push
ds
rorb
out
mov
mov
std
arpl
dec
adc
or
inc
jle
sahf
push
outsb
cli
fisubl
insb
loop
mov
loopne
push
fcmove
cltd
rorb
out
and
movl
sti
add
out
movsb
adc
ficoms
gs
pusha
in
fdivp
push
shl
and
scas
out
divb
pop
outsl
rcll
adc
jl
imul
adc
inc
shll
into
xchg
sbb
loop
jmp
mov
in
jmp
and
dec
sbb
inc
mov
ljmp
imul
out
mov
or
mov
mov
mov
sbb
ret
jl
push
xor
fildl
sbb
add
test
mov
cli
inc
and
cmpsb
mov
sbb
lcall
popf
dec
fucomip
in
faddl
imul
cwtl
push
cli
jae
pop
push
mov
loope
movsl
sub
pop
inc
jge
nop
push
add
xor
sub
and
xchg
outsb
add
add
add
lret
lcall
xchg
imulb
daa
xchg
mov
mov
out
jns
mov
pop
xor
dec
dec
shll
dec
mov
sbb
das
sarb
adc
rcrb
push
push
shll
iret
mov
mov
and
cwtl
fisubs
cmp
xor
xor
cli
fcoml
stos
xor
cmp
std
in
sub
cwtl
jbe
stos
push
out
inc
add
xor
aaa
in
cmp
and
scas
andl
adc
gs
rcll
xor
push
das
insb
aas
sbb
xor
and
push
insl
and
dec
cmpb
xor
cmc
int3
push
jle
clc
mov
cmp
and
stos
xchg
jg
sub
aad
sarl
push
mull
xchg
nop
mov
lahf
xchg
inc
test
dec
adc
or
sub
inc
push
popf
adc
dec
xchg
xor
lahf
adc
fistps
outsb
xchg
inc
push
jbe
pop
jmp
inc
mov
clc
cmpsl
jle
pop
mov
jns
jge
ljmp
cwtl
xchg
mov
lahf
clc
pushl
xlat
add
inc
or
mov
stos
aas
sar
out
movsb
out
push
loopne
lahf
push
mov
cmp
jl
ljmp
stc
inc
test
sti
mov
push
int3
jbe
sub
mov
sbb
mov
lahf
decl
pop
gs
in
push
push
jae
call
aas
movsb
call
in
call
dec
cmpsl
inc
out
or
mov
es
cmp
add
mov
ret
push
pop
aaa
gs
hlt
ret
adc
sarl
or
push
pop
push
popl
ja
int
je
div
cmp
call
mov
push
andl
add
cmpl
addr16
scas
mov
pop
jae
mov
inc
or
ljmp
mov
unpckhps
xor
stos
pop
cmp
jae
mulb
adc
adc
inc
icebp
or
xchg
jg
cmp
movsb
rcrb
loope
cmp
mov
scas
adc
cmc
orl
sti
call
mov
pushf
gs
and
sbb
pop
fisubs
xchg
fstp
cmpsb
pusha
inc
enter
packssdw
or
mov
mov
daa
or
pusha
jg
scas
sub
fucom
push
imull
fdivrp
insl
pusha
lret
les
jo
push
mov
mov
adc
aaa
jb
jge
loopne
mov
addr16
int
push
mov
dec
iret
pop
xor
bound
aad
mov
and
bound
add
mov
arpl
ljmp
sub
sub
add
movsb
pop
mov
add
nop
cmpb
mov
lods
loop
mov
cs
mov
push
es
lret
lret
mov
outsb
sarl
test
fistpl
push
or
ds
lea
lods
pop
cmc
mov
lds
dec
lods
mov
cmp
push
popa
clc
pop
xor
xor
mov
cs
pop
mov
xchg
or
push
mov
stc
ja
jne
inc
jbe
in
mov
jbe
ret
mov
pop
mov
pop
sbb
xlat
nopl
adc
divb
stc
cmc
arpl
xchg
xchg
scas
das
stc
pushw
sbb
mov
dec
xor
test
jge
mov
outsl
in
int
rol
cld
popa
jb
repz
or
repnz
call
ds
mov
pop
cmp
inc
jle
sub
inc
fidivs
and
jo
das
xor
inc
pushf
sbb
jne
std
into
cmc
mov
leave
cmp
sub
or
lods
mov
in
stos
mov
inc
dec
mov
out
setp
rorl
cmp
push
cmpsb
mov
cmp
jmp
push
fisubrs
addr16
in
xchg
lods
subb
push
inc
je
and
inc
mov
or
jno
adc
pop
mov
mov
in
decl
sti
insb
movl
mov
cld
shll
js
fyl2x
cld
push
pushf
dec
jle
or
add
jmp
cmpsb
lds
ror
adc
js
test
cli
idivb
push
sbbb
in
xlat
movb
xor
out
lcall
int3
in
add
fdiv
outsb
xor
das
push
into
mov
jae
lock
or
data16
xchg
dec
fsubrs
or
scas
in
rorb
xor
mulb
addr16
fildll
imul
imul
addr16
and
sbb
inc
lock
and
adc
and
in
dec
cmp
fwait
xchg
mov
add
in
ret
or
add
shrl
push
mov
ljmp
push
lret
fstl
jl
aaa
dec
cmp
and
repz
aas
adc
adc
cmc
pop
mov
sub
sbb
inc
out
insl
js
insl
lods
xchg
add
lods
add
and
mov
hlt
sub
in
ret
outsb
dec
pop
jp
mov
outsb
pop
sarb
inc
pop
push
outsl
xchg
jmp
jne
popf
stos
pushf
sub
mov
fsubrs
rcl
push
cld
call
push
test
inc
dec
mov
mov
sub
lret
loopne
stc
mov
sbb
enterw
test
js
fsubrl
in
mov
sub
cmp
bound
notl
push
movsb
mov
fwait
or
pusha
push
dec
mov
mov
lcall
test
lods
hlt
push
push
test
pop
jmp
jl
cmp
cmp
fld
pushf
pusha
dec
pop
arpl
mov
fsts
xchg
push
shll
mov
cmp
jno
test
mov
xchg
mov
push
and
xor
xor
mov
rcrb
paddb
ja
cmp
loopne
xor
push
mov
add
pop
sbb
lahf
scas
in
cli
lret
cs
adc
ret
cli
mov
incl
push
sub
arpl
stos
adc
lahf
sbb
or
aaa
cmp
stc
inc
das
inc
es
jae
stc
and
add
lods
xchg
movsl
lea
loopne
inc
test
sbb
or
dec
ret
nop
push
push
push
jg
dec
daa
je
push
adc
xchg
xchg
std
bound
xchg
repz
xchg
mov
jle
jb
test
and
faddp
xchg
mov
aam
inc
or
imulb
mov
shrd
inc
inc
sub
ja
or
cld
ret
sbb
lods
pop
bound
inc
shl
push
inc
add
fsubrl
push
cmpsl
outsl
aam
mov
mov
scas
dec
cmc
inc
gs
xchg
fs
add
fisubrl
mov
xchg
dec
and
mov
xor
lods
lcall
jne
fmuls
into
imul
push
and
outsb
cmp
dec
rolb
rolb
cmp
clc
ret
out
xor
adc
aas
pop
out
cmp
daa
jle
lahf
fildl
sbb
out
jo
inc
sbb
mov
les
daa
add
cmc
aas
and
add
pusha
fmulp
mov
pop
call
inc
out
mov
mov
imul
xor
jno
and
jmp
sbb
ja
pushf
jo
imul
fldcw
aam
lds
or
push
outsb
loope
and
mov
pop
roll
xchg
jecxz
jecxz
dec
cmp
test
xor
and
adcb
enter
and
or
notb
xor
lcall
loop
or
fcmovnbe
sbb
mov
adc
push
sarb
add
lods
imul
inc
xchg
pop
add
pop
test
sub
xor
aam
repz
inc
aaa
xchg
repz
mov
cld
clc
jp
jo
daa
adc
cld
xorl
push
xchg
dec
inc
bts
sbb
iret
aad
stos
adc
outsb
push
push
out
add
mov
cltd
repnz
mov
je
leave
jg
lock
sbb
mov
cltd
mov
pusha
rcl
jb
jp
and
out
inc
push
insb
push
mov
aad
push
std
inc
sbb
jne
mov
xchg
mov
ret
sbb
add
pop
dec
push
mov
push
mov
nop
test
jp
stc
sbb
lahf
out
mov
jmp
or
add
adc
int
in
and
xchg
mov
mov
bound
and
rcll
loope
fnstenv
push
inc
jg
and
push
fsubl
cmp
push
jo,pn
fisttpl
mov
outsl
pop
inc
or
test
sbb
inc
mov
dec
jl
push
imul
dec
popa
ja
fimull
xor
and
fwait
pop
decb
xor
add
mov
mov
mov
jge
ret
dec
enter
in
sub
subb
mov
mov
sub
lock
cld
jo
pop
xlat
xlat
mov
add
ds
push
jmp
dec
sub
dec
aam
ja
repz
push
jp
cmpsl
pop
mov
jp
imul
outsb
insl
mov
jge
xchg
rorl
xchg
lods
push
mov
xchg
inc
dec
sar
rol
cmp
ffree
add
ljmp
mov
fwait
jg
jecxz
movsb
lret
mov
lea
repz
sub
mov
lods
insl
add
lahf
sub
lods
dec
push
rorl
pop
test
cmp
and
scas
test
xor
jno
arpl
adc
xchg
push
xor
push
pop
test
addr16
and
mov
pop
and
repz
xchg
fld
test
out
cmp
lea
mov
jg
sbb
push
gs
repnz
sub
inc
outsl
ret
lret
xor
jns
dec
sub
jg
pop
imul
push
cmpsb
or
insl
xchg
pop
push
mov
cmp
aaa
into
jmp
fldl
sahf
jnp
jae
fs
mov
push
rcr
push
push
cmp
jbe
cmp
fwait
dec
lods
addr16
cli
lret
inc
push
test
mov
mull
mov
pop
gs
sar
pop
pop
cld
ret
mov
pop
and
inc
iret
in
mov
mov
push
jg
mov
out
xchg
lock
stc
push
out
jne
or
and
jmp
mov
xor
movsl
das
movsb
in
jle
cltd
xchg
pop
stos
aam
pop
pop
cli
dec
cmp
jne
cmp
dec
adc
cmp
xor
sub
cmp
sbb
lods
fwait
ss
out
scas
push
jle
inc
lds
push
add
push
push
je
add
pop
aam
bound
out
xchg
imul
test
sub
xor
or
pop
stos
ret
cli
shlb
xchg
jns
stos
je
iret
lea
loope
inc
lods
stc
clc
jl
addr16
clc
push
xlat
sbb
in
bound
icebp
and
xchg
lcall
loopne
push
gs
movsb
sub
adc
pop
gs
hlt
push
bound
push
pop
xchg
sbb
xchg
les
jbe
xchg
mov
push
adcb
mov
and
das
cld
xor
pop
aaa
add
faddl
popf
addl
decb
imul
pop
inc
xlat
in
add
es
xchg
sbb
push
pop
xchg
xchg
pop
arpl
push
mov
inc
lret
dec
mov
cs
nop
lds
scas
sub
dec
mov
add
jl
adc
pop
js
push
fwait
mov
mov
stos
sub
in
jecxz
jno
mov
mul
psubb
aam
dec
and
sbb
jp
aad
mov
hlt
or
xchg
sbb
lahf
cmp
cli
push
or
mov
mov
add
inc
jmp
enter
sub
sar
push
pop
sbb
xchg
into
ret
jl
push
cs
scas
std
or
push
popa
movsb
stc
aas
les
push
inc
push
sub
ljmp
mov
mov
xor
sub
jns
xchg
sub
push
push
call
adc
cmp
lret
fs
jp
rorl
fiadds
dec
xor
inc
sbb
xchg
sbb
in
cmp
sub
xchg
pop
sbb
ljmp
pop
add
out
pop
inc
lock
mov
out
outsl
inc
sbb
sbb
dec
lock
xlat
imull
and
mov
pop
push
jns
push
mov
lret
mov
jmp
dec
test
into
jp
xchg
jl
stos
ljmp
pop
out
xchg
jne
cwtl
sbb
sti
in
hlt
sbb
sbb
pop
and
int
mov
lods
aam
sbb
push
aad
fcmovnb
dec
or
pop
and
sbb
dec
pop
std
test
dec
cmp
repz
addr16
xor
or
xchg
fwait
lock
xor
mov
pop
test
ret
cmc
or
cli
or
add
dec
popa
and
jecxz
mov
inc
pop
mov
sub
enter
and
push
js
push
xchg
sar
lock
cmpsl
jl
mov
pop
adc
sbb
shlb
inc
cmc
mov
xchg
push
inc
fstl
push
int3
inc
fwait
mov
lcall
js
mov
repz
cmp
mov
pop
psubsb
movsb
lret
lret
dec
xchg
xchg
cmp
or
xor
insl
cld
leave
pop
jbe
jge
adc
out
mov
gs
sub
xor
mov
loopne
xor
cmc
pop
push
xchg
push
rclb
pop
push
cmp
and
mov
inc
push
stos
cld
loop
add
mov
rcr
adc
or
add
add
aaa
mov
test
pop
enter
mov
xor
sbb
insb
lds
xor
push
loope
shll
in
jge
cmpsb
push
xlat
cld
mov
pop
add
fmull
push
mov
sbb
insb
jecxz
test
dec
jns
int
or
std
sbb
dec
push
into
cmp
or
mov
mov
daa
inc
mov
and
sbb
sbb
fnstenv
adc
sub
test
scas
push
imul
pop
into
popa
daa
adc
xchg
das
out
pushf
sbb
xor
xchg
subb
mov
mov
pop
mov
push
cmpsb
cmp
push
fldt
hlt
jge
popf
pop
add
mov
fwait
jmp
sbb
dec
fwait
int
dec
add
test
fists
dec
mov
js
cmp
jg
xchg
inc
je
xor
data16
fiaddl
mov
test
mov
add
sbb
sti
lret
mov
jl
mov
jb
push
xor
hlt
dec
add
in
sbb
daa
and
push
jbe
mov
pop
les
insl
std
aam
and
sbb
rclb
ud1
xchg
and
cmp
jns
push
jae
jbe
or
push
fdivrs
pop
mov
shrl
push
shll
dec
or
jle
xchg
imul
adc
jmp
ljmp
mov
mov
cmp
pop
enter
inc
lds
sbb
sub
adc
mov
xor
jo
or
inc
sub
dec
cmp
notl
movb
outsl
dec
xor
cmpsb
shlb
pop
mov
and
out
cmp
addr16
lods
insl
jae
pop
xor
or
pop
insb
dec
cmpsl
stos
mov
test
mov
fstl
das
ret
shlb
dec
add
in
out
push
pop
cmp
inc
lock
inc
mov
cltd
mov
and
insb
pop
cmpsl
jns
js
jo
outsb
shrb
pop
or
es
mov
push
cli
roll
in
cmpsb
pop
pop
not
sub
pop
xor
js
mov
xchg
jge
inc
test
dec
xor
addb
aas
xchg
test
pop
cmp
xor
das
lock
scas
nop
adc
fildl
inc
jnp
insl
je
fnstenv
dec
imul
adc
inc
jmp
dec
jo
fildl
mov
xchg
aas
loope
mov
vaddps
adc
xor
mov
call
insl
sub
dec
mov
mov
ds
ret
ss
imul
aad
mov
mov
imul
push
xchg
pop
lret
das
mov
add
mov
test
pop
cli
in
dec
outsb
sub
adc
mov
xchg
pop
pop
sbb
pop
xor
inc
xchg
xchg
test
popa
jnp
or
lret
test
xchg
or
in
lds
cmpsb
sub
jne
xor
add
adc
ret
xor
dec
xchg
adc
pop
test
iret
iret
pop
scas
xor
jl
mov
rcrl
adc
int
loop
adc
das
lock
pop
pop
loop
lods
mov
bound
mov
jne
mov
jnp
cmp
push
call
lea
push
les
adc
arpl
push
jb
add
imul
push
icebp
out
fwait
cmp
lods
cmp
fs
mov
mov
and
popf
sti
pop
sbb
pop
stos
and
pop
nop
aam
jle
inc
mov
loop
hlt
in
shrb
mov
jne
inc
call
mov
adc
shrl
sub
sub
fnstcw
shl
repnz
inc
in
sub
adc
cmpsl
in
inc
loop
scas
pop
ss
shrl
xor
gs
mov
push
std
dec
inc
pop
pop
fldl
cmpsl
insl
sbb
lcall
movsl
call
scas
sbb
push
sub
insl
je
sbb
sbb
xchg
sbb
xor
fcoms
push
and
mov
out
jb
ret
inc
lret
pop
sbb
push
int
ds
jle
das
call
jecxz
mov
call
repnz
insb
into
in
fisubrs
in
sbb
dec
adc
mov
jns
mov
cmp
or
sbb
insl
lahf
punpcklwd
mov
xor
lahf
add
push
mov
pushf
mov
mov
popf
sti
fdivl
jbe,pt
mov
add
out
iret
and
les
sub
pop
je
cmpsb
xchg
call
cmp
push
xlat
rol
pop
xchg
bound
sub
push
xchg
aam
mov
test
jecxz
mov
pushf
push
mov
or
adc
push
stos
cwtl
aam
test
fisttpl
aas
inc
test
dec
cltd
push
cwtl
cmp
out
mov
cmp
inc
loopne
repz
push
lods
add
push
js
xchg
mov
mov
or
jbe,pn
xor
dec
lods
inc
jnp
mov
sub
faddl
mov
sti
sbb
inc
cmp
sub
lret
mov
add
mov
aas
insl
les
fistps
mov
adc
std
or
int3
cwtl
fists
jle
iret
loopne
xor
jmp
sti
popa
jns
inc
das
and
mov
pop
push
xchg
pop
stc
mov
imul
movsb
cwtl
out
sub
push
sarb
fwait
into
es
xchg
push
jmp
xchg
jae
cmp
cmp
stos
or
push
outsb
in
fwait
or
xor
mov
pop
lds
adc
and
and
mov
test
push
icebp
sbb
mov
xor
xor
fistpl
stc
jno
pop
test
in
jns
jge
dec
pop
iret
cmp
cmpsb
out
fldt
push
adc
lea
add
mov
popf
lea
jo
repz
sub
adc
sbb
loopne
rcl
pop
mov
adc
pop
mov
jb
add
or
mull
sub
cmpsb
sbb
jl
xor
push
xor
rcrl
sub
cmp
lods
int
inc
iret
fwait
lea
imul
stos
icebp
aam
outsb
pop
inc
cmp
movsb
ficomps
dec
ret
cmp
pop
lods
pushf
in
sbb
popa
fisttpl
sbb
mov
test
out
in
mov
add
pop
flds
jno,pn
push
xchg
inc
call
test
movsl
push
imul
dec
mov
xor
pop
mov
sti
sbb
push
xor
scas
pushf
cs
mov
inc
stos
cmp
or
sti
mov
push
and
add
shr
inc
mov
pop
lret
daa
jecxz
stc
mov
cli
rorb
push
xchg
ret
push
xchg
jge
inc
ret
mov
jnp
fnsave
bound
dec
repnz
test
jmp
outsl
out
add
push
xor
jmp
mov
cld
jne
xor
sbb
mov
sub
fucom
jne
sub
outsl
pop
mov
popa
dec
sub
ljmp
cmpsb
push
ja
and
aas
data16
cs
mov
mulb
mov
stos
xor
loopne
adc
mov
and
push
sub
in
jmp
mov
imul
mov
push
js
jp
push
and
bound
outsb
xor
cld
push
cs
mov
cmpsl
inc
jmp
int3
sub
dec
leave
aas
lcall
jno
xlat
add
jmp
inc
mov
int3
xchg
or
js
rcl
and
jecxz
mov
lds
cmp
dec
sub
fs
insl
dec
out
imul
cmp
inc
pop
ret
cmpsl
push
sti
inc
and
loope
das
fidivs
leave
or
add
push
push
lods
or
add
outsl
cmp
test
imul
inc
lods
sti
ds
sbb
cmp
es
loop
jle
aas
and
mov
xor
lods
arpl
add
subb
dec
ret
add
and
or
stos
and
test
pop
rcr
cmp
in
jno
sub
inc
inc
adc
dec
xchg
jne
or
rclb
clc
lahf
fs
mov
movsl
in
in
inc
fs
cli
and
cmp
div
ffree
push
scas
mov
call
adc
sbb
xchg
mov
cmp
rol
nop
repnz
les
lods
leave
dec
push
out
jg
and
dec
fdivr
sahf
sti
adc
or
push
insb
or
imul
out
dec
adc
sbb
pop
xor
and
jmp
addr16
jp
nop
in
lret
xchg
xorb
out
in
push
aam
mull
xchg
stc
add
add
inc
stos
pop
pop
and
xchg
stc
imul
aas
xchg
adc
mov
jp
mov
or
jo
and
cld
mov
mov
pop
xor
cmp
loop
sbbb
xor
adc
sbb
lods
inc
sbb
mov
cwtl
add
out
xchg
jg
xchg
repnz
xchg
inc
fadds
xchg
bound
xlat
inc
cmp
mov
lods
push
push
inc
in
nop
dec
xchg
or
xor
mov
ljmp
cmp
or
and
imull
mov
add
dec
loope
xchg
mov
mov
fsubr
xor
inc
mov
dec
dec
mov
fcomi
mov
add
adc
push
pop
adc
iret
add
mov
rorl
neg
jge
popf
pop
into
or
je
inc
shll
mov
jb
mov
mov
jle
dec
enter
int3
mov
dec
adc
mov
std
cwtl
cmpsb
jns
and
mov
lock
and
movsb
repnz
add
fstp
mov
ljmp
mov
dec
mov
pop
bnd
fidivrl
mov
xlat
popa
repz
cmp
mov
add
push
cmp
loope
jmp
in
outsb
leave
mov
mov
movntq
cmp
fldenv
mov
int
mov
or
adc
xchg
push
xor
arpl
xchg
jle
mov
in
xor
shrl
cld
gs
cmp
das
mov
jno
aaa
or
or
cmp
les
sub
pop
cs
insl
aad
sbb
or
adc
cld
int
jge
jp
popf
neg
sub
lods
popf
mull
xchg
dec
jg
mov
dec
out
pop
lods
jno
mov
in
inc
iret
insb
cwtl
pop
enter
ss
stc
and
sbb
sbbl
in
adc
ljmp
push
inc
push
add
xchg
ret
ror
movsl
mov
into
sbb
outsb
xor
mov
jb
lods
and
cwtl
outsl
into
and
shl
nop
xchg
mov
and
insb
sub
adc
jne
movsb
cmp
aam
sbb
hlt
loopne
sbb
sub
mov
cmpb
sahf
fistpll
in
mov
mov
sbb
jae
int3
and
cltd
inc
inc
lea
xor
jno
or
scas
out
or
and
cltd
andb
xchg
inc
or
movsb
and
jbe
pop
gs
imul
call
fdivp
pushf
push
mov
lods
push
test
push
mov
mov
add
data16
out
push
shrb
stc
lret
hlt
pop
push
outsb
test
out
mov
sbb
test
xchg
inc
adc
adc
xchg
or
aaa
ficompl
jo
pop
jbe
pop
jle
hlt
push
mov
loope
data16
mov
push
mov
and
mov
cltd
xchg
stos
push
fistpl
repnz
jb
sub
aam
dec
or
das
scas
mov
lcall
out
ljmp
sbb
incb
inc
inc
mov
add
sub
test
add
sub
fistl
stos
rcrl
and
add
roll
fidivl
mov
pop
sahf
add
in
testb
imul
mov
mov
enter
test
sahf
inc
or
inc
pop
dec
add
imul
cmpsb
and
pop
flds
cmp
lea
jl
pop
xchg
lods
fidivl
adc
sbb
push
fdivl
arpl
inc
test
dec
lret
and
inc
iret
fimuls
scas
into
hlt
jae
into
fmull
push
xor
sub
testb
push
in
adc
xchg
mov
sti
aad
cld
adc
in
stos
and
shrl
pusha
jne
or
push
sti
push
adc
pop
subl
push
insl
pop
orb
mov
push
mov
pop
fwait
lock
gs
mov
or
inc
mov
sti
cmp
sbb
pop
xor
push
cmp
sub
aad
mov
jb
jg
or
in
sbb
lret
or
dec
mov
imul
dec
cwtl
xchg
outsl
into
sti
sbb
add
mov
dec
daa
jo
mov
ret
loop
imul
sahf
jg
push
nop
cmp
mov
sbbb
fwait
bound
fsubrl
inc
push
nop
add
cmp
jge
in
xor
sarl
daa
aas
sub
mov
insl
lea
ljmp
mov
sbb
ret
push
fidivs
es
sti
arpl
daa
enter
out
mov
mov
cs
sub
movsb
xchg
enter
in
imul
lea
cmp
es
cmpsb
subl
popf
mov
nop
rcrb
xorl
pop
jle
addl
mov
pop
decl
sbb
sbb
xchg
xor
jae
mov
push
and
dec
cmp
xchg
fldenv
lcall
add
jbe
mov
mov
fsubrp
jecxz
addb
dec
dec
pop
mov
push
test
or
mov
and
mov
fsub
ja
dec
sub
inc
sbb
fnstcw
jp
bound
or
mov
scas
cmpsb
sub
fildll
popf
popl
mov
jmp
out
pop
in
or
or
pushf
mov
xchg
les
inc
test
adc
mov
test
test
scas
movsl
sbb
cmpb
mov
lahf
and
cs
cmp
test
or
xorl
mov
pop
inc
push
xlat
pop
fdivrl
inc
clc
xor
daa
scas
cmc
repnz
jg
int
mov
fcoml
jnp
jp
push
cmpsb
jnp
xor
mov
repz
xor
dec
and
icebp
lds
or
insb
fwait
inc
push
lret
popa
xchg
inc
sbb
dec
mov
push
clc
ss
adc
sub
push
pop
mov
and
out
push
jl
in
dec
popf
mov
add
mov
and
sub
mov
nop
mov
push
xchg
xor
jle
stc
call
mov
in
or
xor
sub
cltd
adc
pop
out
in
ljmp
xor
mov
xor
addr16
outsb
loope
adc
sbb
cmp
push
jo
xchg
xor
xlat
xor
mov
jge
jg
loopne
pop
inc
adc
test
loope
dec
push
cli
cmp
popa
aaa
cwtl
movsl
sbb
out
jle
add
or
in
jno
in
lock
pop
adc
iret
test
mov
inc
sbb
addl
das
aaa
in
or
or
ret
aam
cld
dec
pop
popa
enter
xchg
sub
mov
outsl
lcall
scas
lret
jae
pop
sub
pop
std
dec
mov
cmp
sbb
or
or
mov
imul
xchg
mov
inc
jmp
sub
mov
int
int3
out
data16
mov
das
shlb
loop
push
jecxz
iretw
sub
push
mov
pop
iret
rcrb
bound
push
mov
popf
xchg
std
mov
lods
aam
dec
jns
mov
rcrb
or
dec
stos
sti
or
xchg
dec
pop
jge
mov
inc
stc
jle
cmp
pop
xor
sahf
test
mov
jno
mov
push
icebp
pop
fidivrl
js
loopne
aas
pop
enter
adc
bndstx
sbb
dec
cltd
sub
popf
xchg
cmp
sbb
add
sti
mov
addr16
je
ljmp
nop
dec
pop
and
jb
cld
pop
xor
xor
add
fadds
pop
shlb
outsl
leave
xor
or
mov
mov
jg
push
fldt
push
add
pop
outsb
add
pop
push
jnp
rcrl
mov
xchg
or
add
mov
cmpb
xchg
jnp
push
pop
cmp
and
cmp
mov
subl
fstpt
jge
inc
or
scas
cmp
icebp
es
shrl
jns
std
aaa
sbb
mov
inc
scas
xorb
clc
sub
pop
adc
mov
fimuls
pusha
repnz
xchg
xor
pop
or
repnz
dec
mov
popf
into
pushf
and
pusha
addr16
int
cmp
xchg
jnp
sub
rcl
jl
push
adc
cs
push
insl
xor
push
fiadds
lret
mov
cmpsl
add
test
and
sbb
pop
dec
stos
sti
mov
push
jnp
stc
cli
out
lahf
push
cmp
mov
ret
popf
mov
sub
rorl
clc
leave
arpl
mov
push
fld
jl
pop
fmul
dec
mov
mov
outsl
scas
insb
pushf
fildll
cmp
jg
cli
xorl
dec
push
and
jmp
mov
mov
push
lock
xor
jecxz
sbb
sub
add
dec
movsl
popa
pop
jmp
scas
stos
in
lret
add
dec
sub
mov
inc
xchg
cmp
xchg
test
lea
arpl
and
pop
outsb
lock
mov
xor
cmpsl
fcompp
int3
pushf
aad
sub
je
mov
mov
jl
add
mov
ljmp
inc
inc
rorb
leave
ljmp
cmp
mov
xor
sti
iret
xchg
bound
bound
ret
inc
sub
mov
cld
outsb
cmpsb
and
inc
sub
mov
scas
adc
mov
sbb
or
bound
stos
ss
lcall
enter
sbb
add
xchg
cmp
ljmp
sbb
sti
hlt
hlt
sub
push
lods
xor
inc
dec
mov
out
mov
push
out
xchg
mov
sti
adc
xor
xchg
cwtl
or
xlat
xchg
xor
push
inc
mov
sbb
adc
test
add
add
xor
ficompl
pop
sub
inc
mov
xchg
mov
jnp
mov
scas
and
sbb
pop
jge
iret
mov
add
and
add
lods
sbb
test
aas
or
js
mov
inc
movsl
jle
adc
sbb
shlb
into
test
testb
mov
xchg
mov
cmp
ds
pop
jbe
dec
cld
cmp
xlat
dec
rcl
xchg
jp
scas
icebp
pop
push
mov
push
push
cwtl
sub
out
aaa
shll
jmp
mov
daa
mov
repz
add
cmpsl
add
subl
pop
and
pop
loopne
cmp
push
mov
enter
sbb
mov
jg
cmp
mov
jmp
mov
scas
or
jns
mov
pop
orb
push
mov
jns
add
jnp
jo
mov
lods
add
mov
subl
and
mov
jmp
jge
inc
jg
rcr
pop
out
jns
ret
jne
cli
xchg
or
dec
jno
mov
adc
cli
mov
xchg
jle
and
mov
jg
jge
aas
lret
mov
sar
push
inc
jmp
aas
cs
cmp
pop
mov
popf
jns
repnz
mov
call
jae
into
call
push
adc
xorl
cmp
test
push
pusha
or
add
mov
mov
inc
lahf
in
dec
adc
adc
popa
dec
xchg
push
sub
testb
imulb
loope
mov
or
sub
popf
xor
cmp
scas
sbb
dec
fwait
lahf
cltd
sbb
mov
push
and
and
scas
jecxz
pop
bound
repz
and
mov
ja
xchg
mov
mov
lock
cltd
test
or
pop
gs
sbb
ljmp
int3
xor
div
xchg
dec
jg
xlat
test
sub
loopne
movsbl
test
mov
test
cltd
loopne
adc
lock
xor
sbb
adc
lods
fldl
jbe
jge
xor
pop
lret
leave
js
loop
nop
jnp
les
movsb
jne
cmc
in
add
or
int3
jp
mov
mov
cmp
icebp
test
push
out
pop
lock
add
outsl
stos
adc
jle
sub
js
or
sbbl
mov
and
jg
dec
fcomi
lret
call
movsl
std
lods
dec
dec
outsb
sahf
or
pop
xor
fbstp
xchg
nop
xchg
leave
push
or
stos
stos
testl
jp
mov
leave
jo
les
js
pop
push
jle
mov
cmp
xor
adc
inc
xchg
movsb
stc
mov
adc
adc
mov
and
xchg
mov
push
cltd
ffree
jle
es
aam
dec
adcb
nop
fldt
pop
daa
sub
es
mov
repnz
sbbb
data16
shll
mov
mov
testl
mov
in
sub
mov
jb
in
push
xor
into
nop
ret
stos
jp
loop
jno
fimull
inc
push
in
outsb
jl
inc
sbbl
mov
cmp
in
in
xor
out
mov
stos
mov
pop
xlat
das
sbb
and
dec
cmp
xchg
xchg
shrl
xchg
mov
mov
ss
mov
xor
sub
add
repnz
inc
ljmp
mov
inc
mov
or
dec
mov
icebp
xchg
mov
fldcw
add
xchg
imul
mov
xchg
push
mov
lds
sbb
and
cmp
adc
aam
or
xchg
cltd
xor
xchg
mov
fstpl
sub
out
hlt
mov
jb
sbb
mov
hlt
xchg
popa
shlb
je
fidivs
jb
add
rcl
cmpsb
mov
push
rorb
xor
lret
hlt
dec
call
add
sahf
push
adc
mov
sbb
mov
imul
add
jbe
cmp
imul
out
stc
sbb
dec
mov
sti
jle
clc
mov
stos
xor
ss
ret
dec
pop
add
icebp
and
or
pop
jbe
cmp
std
ds
popa
push
out
orl
jmp
fbld
hlt
xchg
lods
jae
jbe
repnz
inc
addr16
das
jp
and
ficoml
ret
xchg
adc
cli
imul
pop
inc
dec
push
dec
aam
mov
lret
inc
inc
scas
popa
hlt
pop
ret
or
leave
f2xm1
mov
xor
push
xorb
cmp
daa
sbb
pop
mov
insb
enter
sbb
and
adc
mov
push
pop
or
inc
subl
test
push
or
stos
jne
std
test
sti
xchg
mov
mov
adc
add
jae
pop
stos
out
mov
mov
in
fsubrl
jmp
leave
icebp
add
mov
lods
jl
sub
movsb
xchg
leave
jge
sub
xor
sbb
movsl
pop
stos
cmp
fwait
mov
dec
pop
mov
inc
cmc
dec
or
push
push
pop
or
jbe
das
sub
or
xchg
mov
mov
ret
insb
mov
xchg
adc
das
xchg
fdivrl
push
movsb
movsl
out
stos
xchg
leave
fimull
mov
inc
mov
movsb
push
dec
cli
imul
dec
mov
ret
mov
add
mov
rcrl
bound
dec
mov
xor
xchg
fistpll
dec
mov
pop
inc
add
jnp
stos
xor
shlb
cmp
inc
adc
rcl
pop
bound
xchg
pusha
pop
and
xor
pusha
insl
lmsw
adc
xchg
and
insb
push
pop
push
xchg
rcrb
push
aas
imul
xchg
jnp
mov
and
addl
cmp
stos
lret
les
movl
mov
adc
test
dec
xorb
sbb
add
and
imul
test
xchg
mov
mov
sub
pop
imul
lods
and
jmp
and
clc
pop
sub
xchg
shr
movsl
repnz
cli
cmp
xchg
daa
mov
xchg
scas
fisttpl
and
in
sbb
test
jge
mov
or
sub
je
cs
addr16
jne
cmpb
mov
mov
mov
jl
mov
punpckldq
cmp
jbe
cli
nop
js
xchg
lcall
jle
insb
loop
push
mov
adc
test
push
call
jle
cmp
mov
or
test
pop
rol
sbb
dec
cmp
mov
sub
push
mov
xor
mov
popa
jp
adc
pop
cmc
pop
add
xchg
cmpsl
rorl
ret
daa
aas
xlat
dec
mov
notl
xor
into
mov
adc
idiv
test
idivb
add
jno
jns
scas
xlat
es
cmp
fldcw
scas
add
push
cwtl
scas
cld
inc
das
inc
mov
ljmp
pop
and
repz
cmp
leave
sbb
inc
int3
in
lret
out
add
cs
inc
jmp
or
aad
sahf
hlt
or
mov
sub
sbb
pusha
sahf
pushf
call
inc
xchg
out
push
shll
movsb
mov
icebp
xor
push
loop
jnp
push
jb
int
iret
arpl
push
fnsave
mov
jle
mov
lret
pop
xchg
mov
stos
test
cmp
cli
push
cmp
sbb
leave
out
add
clc
xchg
jne
push
adc
cld
add
xor
jnp
adc
cmp
jecxz
lret
or
imul
sti
js
lcall
adc
fwait
xor
mov
sbb
out
or
les
inc
mov
sub
and
xchg
xchg
std
mov
push
xchg
jge
or
push
cltd
xchg
mov
mov
xchg
shll
dec
scas
jl
inc
sar
and
rcrb
sarb
punpckhbw
add
inc
iret
icebp
scas
jno
mov
fdivl
icebp
iret
xchg
fcoml
mov
insb
sahf
inc
negl
cmc
outsl
rcl
shlb
push
test
pop
sti
mov
push
seta
inc
mov
dec
cwtl
js
dec
sub
jge
sbb
xchg
mov
outsl
in
cmpsl
fistpll
roll
jmp
frstpm(287
jnp
loopne
mulb
movsb
mov
inc
jo
insl
and
cmp
int3
pop
into
pop
mov
xor
push
lock
insl
in
jl
dec
sbb
pop
and
cwtl
cmp
jmp
jp
adc
fwait
shll
inc
lret
xor
out
dec
add
cmp
and
movsl
sub
jns
sbb
or
in
pop
lret
iret
mov
sbb
sub
sbb
jg
add
adc
xor
pop
bound
test
sbb
sti
stos
xor
iret
dec
jp
lods
xor
les
adc
jl
add
xchg
push
fidivrs
pop
xor
mov
ret
mov
pop
jle
xchg
mov
jbe
cmp
inc
ss
adc
fdivrs
and
sbb
cld
push
xchg
sti
insb
fstpt
mov
test
jle
fwait
xlat
dec
cli
scas
in
invd
aad
cmp
popf
mov
fs
scas
sbb
pop
cmp
loope
mov
xor
jae
and
jae
stc
sub
aas
lahf
es
or
sbb
dec
inc
pop
push
mov
adc
idivl
mov
push
lods
pop
pop
cmp
enter
loopne
xor
mov
sti
cmp
scas
dec
out
or
xchg
push
ret
xchg
and
push
adc
xor
sub
shrb
adc
test
aam
inc
pop
xchg
fstl
mov
xchg
mov
adc
mov
mov
loope
mov
sar
sbb
inc
imul
dec
in
shr
icebp
push
add
xchg
shrl
jno
mov
sar
sahf
outsl
cmp
daa
mov
gs
lahf
dec
xor
negl
mov
pushl
iret
push
push
push
es
dec
dec
outsl
movsl
aas
and
mov
pminub
in
pop
cmc
in
sahf
sub
call
pop
shll
out
inc
outsl
dec
pop
xor
aam
scas
cmp
arpl
adc
cmp
adc
lds
xor
mov
imul
jmp
xor
mov
sbb
adc
or
and
outsb
sti
addr16
push
pusha
pop
call
sub
imul
insb
iret
sbb
cli
ds
xchg
mov
mov
repnz
add
mull
ret
cld
jns
pusha
sbb
mov
repz
es
mov
call
mov
xlat
movsb
sub
mov
mov
mov
sar
cltd
jmp
lods
sbb
mov
xchg
stc
add
js
sbb
adc
xor
divb
pop
push
pop
push
mov
jmp
mov
lock
pop
xchg
adc
mov
jbe
int
outsb
out
push
mov
and
in
or
mov
out
and
inc
aam
pop
mov
int
int3
cmpsb
push
inc
cmp
xchg
push
inc
and
fbld
shl
dec
ror
adc
insb
jns
xor
push
dec
ss
mov
lret
sub
cmp
out
fisubl
push
gs
nop
imul
test
test
repnz
cmpsl
lods
mov
mov
cmpsl
lock
or
hlt
fmuls
sub
test
ljmp
cmp
out
push
insb
pop
dec
jg
inc
xchg
xchg
cmc
cltd
sbb
cmp
stc
mov
pop
inc
or
icebp
rcrb
popa
mov
and
scas
xor
shrb
mov
imul
lcall
sub
into
dec
into
in
out
ljmp
orl
jns
or
xor
sbbl
inc
sbb
pusha
jmp
cmp
add
cmc
sub
xor
shl
ja
fdivs
mov
shrl
clc
push
pushf
xor
xchg
jns
insl
or
add
jnp
shrl
push
rcrb
inc
arpl
cmpsl
mov
scas
arpl
push
or
pop
push
sub
pop
sbb
call
mov
lahf
or
out
jno
cmp
idivb
sarb
notl
imul
sub
jno
adc
jge
int
jp
inc
and
fbstp
xchg
loop
ss
jb
cld
cwtl
push
adc
fnstcw
loopne
lcall
in
sbb
add
xchg
lods
repz
loopnew
jbe
insb
in
dec
or
dec
repnz
dec
inc
dec
sub
mov
sbb
pop
stc
sbb
fcmovbe
data16
and
lahf
les
mov
and
cmpxchg
mov
xrelease
jno
xchg
xchg
shrb
xchg
mov
adc
lret
loopne
int3
mov
cmpsb
push
and
inc
xchg
xchg
das
fucomip
push
out
cli
xchg
jns
dec
cltd
mov
clc
sahf
mov
movsb
jno
imul
jne
xchg
ret
out
and
popf
in
mov
test
dec
into
inc
int3
cwtl
lahf
dec
out
xchg
push
push
push
xchg
xchg
sbb
jnp
popa
mov
addr16
fmull
ffreep
mov
or
shl
cmp
js
sub
xchg
sbb
mov
and
xor
and
dec
int3
jge
xchg
jno
mov
leave
mov
xchg
lods
cmp
aaa
inc
push
loopne
pushf
sub
mov
pop
inc
and
fs
ror
and
enter
data16
xor
jge
pop
fsubrl
rcll
or
rol
inc
or
cmp
scas
pop
pop
mov
repnz
mov
sbb
bound
jb,pt
xchg
sbb
daa
stos
daa
lcall
addb
aas
pinsrw
dec
imul
push
bound
out
aam
mov
push
setns
rclb
mov
inc
mov
mov
ljmp
out
mov
daa
push
sbb
cmp
lods
les
mov
sbb
mov
pop
aam
jno
js
je
lahf
adc
jge
ja
adc
xor
or
xchg
je
jns
jle
popf
stos
jae
movsb
add
pop
arpl
rcll
push
out
mov
sarl
mov
cltd
push
pop
mov
xchg
and
test
mov
sahf
xor
and
cmpsb
cwtl
ror
repnz
into
fs
lcall
add
xchg
ja
mov
pop
in
outsb
xchg
push
insl
push
xchg
sbb
mov
dec
sub
mov
mov
loope
push
adc
stc
lock
sub
out
scas
dec
out
dec
int
je
insl
dec
xchg
mov
sbb
test
xchg
lods
adc
jns
leave
filds
jnp
mov
popf
adc
or
lock
je
out
ss
sub
lcall
jo
sub
roll
mov
hlt
movsb
aaa
dec
adc
xchg
mov
sub
lds
shl
ret
mov
das
mov
sarl
mov
gs
xorb
repnz
lret
shlb
jmp
xchg
pop
push
int3
or
mov
lds
or
sbb
mov
popa
fs
in
das
icebp
sbb
sar
iret
mov
stc
add
clc
add
movsl
xor
idivb
fisubs
imul
sub
enter
in
int3
sub
mov
xorl
xor
movsl
jo
mov
mov
cmp
mov
dec
flds
add
pop
sbb
add
pop
shll
pop
pop
cwtl
pop
cmp
jl
push
jg
jle
cwtl
frndint
jl
testl
pop
or
sbb
roll
in
push
dec
ds
pusha
in
inc
addr16
xor
aaa
mov
outsl
negb
adc
or
test
jns
test
dec
stos
arpl
xor
rep
and
lcall
mov
push
pop
mov
push
mov
daa
dec
or
and
rcl
sbb
or
sbb
push
popa
cwtl
pop
cli
push
cmpsl
pop
pop
shrb
ss
enter
lahf
or
mov
xchg
mov
sub
dec
pop
pop
ss
ret
mov
cmpb
push
and
fbld
pusha
push
and
mov
aad
fistpl
jge
shl
subl
cmpsb
ficoml
int3
xor
adc
adc
ret
icebp
cmc
dec
lret
mov
pusha
mov
pop
push
test
fisubrs
mov
aad
mov
push
insl
jge
or
movsl
outsl
mov
mov
adc
jae
int3
push
xchg
and
outsb
mov
outsb
inc
or
aad
lock
pop
lret
ja
outsb
nop
adc
shlb
and
aad
nop
sarb
inc
addr16
out
mov
mov
xor
dec
xchg
and
or
aad
inc
jo
js
and
mov
inc
test
cltd
hlt
xlat
mov
or
popf
clc
mov
mov
pop
sub
xchg
lods
rorb
add
fcomps
jne
cmp
dec
or
in
lret
shr
pop
mov
pop
or
repz
rcrb
clc
stos
inc
sub
mov
icebp
lret
mov
mul
sub
daa
sbb
pop
aaa
mov
sarl
dec
adc
sub
outsb
leave
decl
hlt
pop
xchg
inc
xchg
mov
pop
rcl
insb
adc
nop
movsl
or
jle
mov
cltd
orl
sarl
ret
lcall
popf
pop
inc
out
std
scas
jmp
cmpsb
pop
mov
jns
jbe
shl
mov
xchg
rol
out
in
sub
ror
pop
adc
push
call
aam
lahf
out
mov
xor
in
cmc
mov
add
fcoms
or
cli
loopne
rorl
lods
fldl
jb
mov
sarl
cmp
sahf
mov
mov
xor
push
out
sbb
int3
movsb
mov
bound
lock
mov
xor
cmc
std
mov
dec
xchg
imul
adc
out
rcrl
jmp
push
ja
test
adc
iret
out
mov
fwait
jne
imull
in
and
jecxz
nop
shr
mulb
mov
jbe
xor
out
jg
push
stc
cltd
xchg
out
push
lock
repz
cmpb
insb
loopne
xchg
pop
scas
mov
pop
mov
les
lods
inc
push
dec
fisubrl
adc
rcrl
add
cltd
mov
addr16
pop
mov
mov
cmpsb
xor
mov
std
and
mov
pop
movsb
lods
sahf
or
mov
aad
and
add
pop
cld
cmp
xchg
jmp
sti
jp
adc
insl
cmpsl
movsl
fwait
or
out
add
imul
dec
mov
shl
mov
cmp
jmp
js
fidivrl
mov
fwait
mov
jae
jns
pusha
enter
leave
pop
lock
xor
or
sub
fcompl
lock
adc
or
test
scas
push
gs
sbb
inc
mov
xor
shll
add
popf
and
sbb
mov
jne
xchg
gs
or
push
xor
inc
stc
pop
leave
mov
mov
xor
mov
mov
pop
imul
adc
pop
jl
lock
ljmp
addb
mov
cmpsl
or
test
jmp
pop
scas
sbb
call
cli
mov
pop
and
rol
add
sbb
dec
leave
pop
mov
xchg
aad
sbb
xchg
mov
or
pop
mov
jmp
leave
or
push
fadd
fwait
pop
icebp
dec
lahf
and
inc
cmp
xchg
int
push
add
jg
cli
dec
cmpsl
xchg
add
and
adc
int
aam
mov
aaa
test
xor
sub
fistpll
data16
stos
icebp
dec
sub
dec
mov
add
dec
cmp
ret
out
imul
stos
sarl
mov
and
xor
cmc
xlat
xlat
leave
pop
or
lods
jge
int
fwait
mov
sub
repnz
sbb
pop
pop
adc
inc
pop
insl
movsl
in
in
sub
aam
xchg
into
nop
clc
outsb
rcr
ds
stos
test
cmp
scas
int
mov
jae
scas
cwtl
decb
imul
pop
aas
sbb
push
mov
fimull
in
xor
add
jecxz
pop
mov
jecxz
dec
push
sahf
insl
cmp
adc
incb
xor
jecxz
shlb
js
test
and
les
jmp
cmp
jbe
popf
movsl
cwtl
rclb
test
or
mov
add
sahf
daa
push
xorb
sub
shrb
jo
lret
pop
cmc
aaa
shl
int3
jecxz
fisubs
ret
aad
lret
cltd
push
test
lret
jno
push
jne
lcall
clc
adc
iret
je
jle
jle
inc
addl
jo
push
dec
fld
loope
push
push
addb
outsl
sbb
xor
out
ja
les
cmp
imul
and
cmp
push
jns
jle
aam
test
and
mov
in
dec
sbb
mov
dec
sbb
loop
pop
mov
pop
sbb
gs
movsl
mov
cmp
xor
push
inc
loopne
pop
enter
arpl
mov
mov
arpl
pop
daa
imul
fcmovbe
pop
fs
dec
test
push
and
int3
or
xchg
iret
inc
and
and
lcall
pop
adc
fstps
vaddss
imul
nop
pop
push
lods
pop
push
cmp
shlb
loope
sbb
mov
out
jle
leave
lret
arpl
pop
push
ficompl
xor
adc
pop
xchg
mov
jae
inc
adc
je
xchg
iret
fld1
pushf
pop
outsb
sub
stos
nop
in
pop
mov
sbb
xor
dec
not
push
lahf
repz
repz
repz
lahf
stc
push
inc
fisttpl
icebp
or
cltd
push
insb
ljmp
loop
jp
jbe
testl
push
pop
es
push
mov
fs
cmp
rorb
cli
ret
sub
mov
rclb
aas
or
dec
mov
jg
cmp
pop
insb
in
out
clc
into
or
mov
fldl
mov
push
out
movsl
scas
sub
arpl
pop
cmp
pop
sub
mov
out
fisubs
push
mov
gs
sarl
in
dec
insb
pop
fcoms
xchg
push
leave
pushf
sar
cmp
cltd
push
das
fst
cwtl
and
mov
mov
scas
cmp
and
jle
movsb
out
arpl
pop
mov
mov
mov
test
xor
sbb
cmp
mov
dec
jne
stc
pop
mov
dec
pop
iret
shll
or
out
mov
hlt
fcoml
adc
lds
movsb
sbb
inc
mov
dec
xchg
mov
lea
movsb
imul
test
or
addr16
dec
lock
sbb
cmp
popa
mov
mov
lret
sub
not
mov
and
xchg
cmp
jnp
aas
adc
addr16
push
mov
mov
pop
ficompl
aas
mov
sbb
fsub
ret
add
pusha
repnz
xlat
mov
jae
sbb
cmpsb
dec
in
ficoml
xchg
inc
and
mov
popa
push
xchg
and
scas
add
add
push
out
pushf
cmp
sub
adc
aas
jge
cmc
fwait
psrlq
subl
jno
pop
mov
jo
xlat
and
mov
inc
lods
jecxz
add
inc
ret
fildll
out
xchg
ficoms
stc
xchg
aam
xor
cltd
js
pop
stos
in
mov
test
ja
ret
mov
push
inc
xor
push
pop
mov
mov
add
jno
daa
test
js
fsts
call
ljmp
cmpsb
call
cmpb
iret
jo
dec
mov
sahf
repnz
push
mov
push
mov
adc
and
fwait
movsb
fdecstp
push
scas
into
cmp
jl
ds
jb
lock
clc
in
imul
popf
mov
cmp
xlat
sbb
popf
xchg
sbb
pop
popf
adc
into
imul
imull
mov
stc
add
pop
incb
in
cmpsl
ficoms
aad
aas
gs
dec
ret
dec
jae
shlb
push
mov
push
mov
test
inc
push
movsb
aam
int
enter
enter
adc
aad
popl
push
lods
push
push
xor
daa
fcoml
adc
mov
xor
sbb
les
lds
sarb
fstpl
mov
das
in
lahf
nop
pop
outsl
rolb
js,pt
adc
rcrb
cli
sarl
cmp
or
cli
psrlw
jns
xchg
mov
fisubs
mov
mov
sbb
cmp
xor
pushf
and
pushf
add
ja
inc
adc
lea
data16
cmp
push
cmc
mov
test
dec
mov
aad
shll
test
xchg
add
shl
mov
sahf
lret
aam
scas
jbe
push
negl
push
sti
movsl
fisubrl
arpl
mov
mov
xchg
add
jns
das
addr16
je
inc
push
push
jbe
fisubrs
cmp
mov
or
lahf
sub
mov
or
and
jb
aad
push
mov
jnp
jno
dec
push
mov
lahf
sub
xchg
loope,pt
lcall
test
adc
repz
mov
lret
pavgb
push
into
pop
or
mov
adc
in
movsl
call
mov
out
pop
fsubrp
mov
adc
jp
repz
loopne
movsb
test
xchg
adc
ss
mov
movsl
fs
or
inc
inc
lea
xchg
mov
sbb
pusha
out
ljmp
add
jb
outsb
xor
or
or
lahf
and
mov
xchg
lea
mov
push
dec
and
mov
test
mov
aad
insb
mov
mov
prefetchwt1
or
xor
insl
leave
insl
mov
rcll
mov
xchg
sbbl
loope
stc
mov
mov
bnd
xchg
mov
mov
inc
dec
dec
dec
ss
dec
xor
pop
aad
jl
push
out
shl
outsl
xorb
icebp
mov
fyl2xp1
push
push
sbb
in
cmp
bnd
dec
mov
mov
ss
dec
rorb
fstl
enter
inc
icebp
push
aam
lds
mov
sub
loope
sub
subb
mov
mov
rep
out
inc
jb
jns
fwait
jne
xchg
adc
adc
icebp
and
out
rclb
adc
push
jg
sbb
out
sbb
or
int3
lds
push
loope
jmp
shll
dec
in
in
fdivp
sub
js
mov
loop
xlat
mov
iret
sub
xchg
fstpt
addl
test
aad
dec
jle
jae
sub
lahf
and
or
mov
je
outsl
test
aas
mov
sbb
mov
lcall
rclb
mov
adc
pop
push
inc
mov
xchg
inc
cltd
dec
and
mov
pushf
mov
cmp
add
jb
xor
loopne
pop
fdivrl
testb
jecxz
jp
stos
scas
sbb
mov
fstpl
out
mov
mov
xchg
xchg
fwait
adc
add
and
xchg
imul
mov
enter
push
jle
jno
loope
xor
in
fisubrs
xlat
ja
dec
dec
scas
aad
jg
cwtl
andb
movsl
jae
mov
jecxz
jnp
mov
push
sti
pop
bound
sub
mov
mov
sbb
addr16
push
sub
dec
or
repnz
or
and
xchg
or
pop
jae
sahf
xchg
sbb
out
dec
or
adc
jmp
scas
pop
mov
sbb
dec
xor
loop
popf
cmp
pop
fstpt
popf
outsb
push
dec
les
jp
fnstsw
add
and
orb
or
jg
sbb
adc
cltd
sbb
stos
je
jns
sbb
test
sub
or
mov
dec
dec
outsb
adc
mov
in
lret
cmp
lds
ss
mov
add
push
fldl
mov
insb
icebp
pop
pop
arpl
pop
pop
outsl
mov
pop
repz
fistpll
les
xor
add
cmp
pop
jmp
adc
nop
aas
xchg
cmpsl
pusha
add
imul
movsb
ds
repnz
jno
mov
imul
fcoms
push
add
cmp
inc
js
mov
ret
xchg
cmp
push
ss
cmp
aam
int
sbb
adc
aam
insb
loope
lcall
mov
push
mov
aam
or
sbb
ret
inc
mov
orl
xchg
les
cltd
in
sbb
int
pop
pop
xchg
jnp
scas
mov
and
push
jle
xchg
jbe
add
shrl
or
inc
loopne
scas
es
add
jecxz
jg
jb
call
mov
jge
leave
stos
dec
cmp
jns
aas
cmp
sub
xchg
mov
push
sbb
lods
cld
ss
stc
xchg
test
mov
mov
adc
les
addr16
fstps
mov
lods
cmp
or
fsubr
push
cs
stos
repz
xchg
mov
lock
jmp
enter
adc
pop
xchg
pop
test
sbb
mov
cs
push
not
mov
mov
jge
scas
into
test
pop
lret
popa
add
sbb
pop
cmpsl
adc
mov
or
push
addl
push
jo
loope
icebp
inc
js
inc
outsl
outsl
enter
lods
jge
lret
xlat
adc
ljmp
cmc
dec
sub
mov
sbb
mov
mov
fisubrs
xor
scas
hlt
movsb
mov
xchg
ds
clc
adc
js
emms
stos
dec
scas
cmpb
pop
jns
fisttpll
sahf
push
stos
push
sub
or
js
push
inc
jge
mov
sub
aam
popfw
lea
sub
push
sarb
jl
sbb
xchg
int
push
jecxz
and
outsl
mov
je
shlb
add
stos
popf
cmp
sahf
fadd
adc
mov
cmp
lods
idivl
gs
arpl
fwait
jge
fidivrs
adc
push
call
push
xchg
mov
fcmovnbe
jmp
sbb
push
xor
adc
pop
sbb
jbe
outsl
xchg
es
faddl
shlb
stos
inc
mov
inc
cwtl
inc
xchg
xchg
addr16
dec
mov
push
mov
mov
out
pop
outsl
fidivl
inc
scas
dec
inc
xor
push
jg
jne
mov
cmpsl
fcoml
imul
jmp
mov
inc
testl
loop
ds
inc
test
rol
dec
pop
xchg
inc
pop
addr16
mov
lea
mov
xor
xlat
or
shll
lea
fidivrl
mov
fdiv
jns
out
shl
mov
fs
jae
xchg
repnz
sub
xchg
je
inc
push
adc
add
test
and
pop
rcrl
or
inc
sbb
popf
cmpsl
pop
les
xlat
movsl
adc
pop
and
lea
rcll
addr16
das
cmc
imul
fsubrs
xchg
test
mov
pop
ds
stos
or
or
lret
or
lret
add
dec
lcall
xor
cmp
cmpsl
jne
jge
popa
rcrb
jmp
rorb
imul
outsl
and
bound
hlt
jne
ret
mov
inc
cmp
mov
out
pop
push
aaa
and
loope
push
sarb
lods
mov
frstor
add
sub
push
lret
lock
mov
xchg
push
xlat
push
cmpsb
sbb
imul
aad
lds
mov
xchg
mov
or
aaa
mov
ja
inc
mov
adc
jmp
icebp
das
movsb
inc
cbtw
cmp
push
mov
in
jle
jb
mov
adc
xlat
mov
cmp
mov
icebp
adc
aam
popa
jmp
mov
mov
lret
dec
sub
into
pop
mov
popf
inc
rcr
enter
adc
pop
jb
movsl
lret
scas
dec
mov
and
add
add
cld
enter
and
rclb
jmp
loopne
in
push
out
inc
jg
movsb
rclb
jno
push
dec
addr16
sarb
push
ret
pop
or
rorb
sub
jae
ss
cmp
les
xchg
inc
les
mov
pop
jns
or
cmpb
fisttpll
pop
mov
cli
cmp
xchg
cli
scas
push
push
add
rcrl
pop
loopne
jp
and
lock
lcall
pop
or
add
jne
dec
js
cld
xor
ret
dec
fists
ja,pn
push
jge
ja
repz
cmp
ss
test
jns
test
das
mov
jo
pop
push
mov
cmc
xchg
mov
orb
pop
xor
insb
xchg
push
dec
lods
sahf
test
dec
in
mov
int
jecxz
inc
mov
jno
ja
cmp
int
imul
adc
cld
mov
mov
lods
fwait
push
bnd
xor
xchg
fdivrl
pop
lahf
xlat
addr16
into
push
fisttps
out
dec
movq
xchg
rcrb
pop
jp
xchg
push
xor
cmpsl
push
test
adc
cwtl
iret
das
ss
dec
or
test
mov
loop
mov
mov
cld
add
jg
inc
add
mov
pop
fmull
mov
cmp
mov
cs
pop
xor
pop
or
xchg
ret
sbb
lcall
xchg
xor
stos
cmpsl
mov
mov
mov
dec
sbbb
addb
jne
insl
lods
adc
ret
ret
push
shr
inc
cmp
popa
and
mov
cmp
mov
mov
scas
movsb
mov
mov
mov
imul
dec
sub
fisubl
jmp
xlat
rcl
sbb
cli
and
jecxz
in
add
xor
insl
inc
scas
pop
jp
dec
ljmp
fldt
jg
add
cmp
fistl
fimull
mov
lcall
test
in
push
mov
inc
mov
call
and
and
add
outsb
mov
pop
and
fnstenv
add
jns
jg
dec
bound
mov
push
hlt
jl
jmp
xlat
shlb
outsl
pop
or
fldenv
aad
mov
mov
cmpsb
jg
movsb
cmp
jbe
dec
dec
mov
rol
push
push
sub
mov
dec
xchg
cmp
loopne
inc
cwtl
dec
sbb
imul
dec
mov
pop
sub
inc
xor
inc
xchg
inc
iret
jbe
sar
jnp
and
movsl
jp
push
add
vcvttpd2dqy
dec
mov
jbe
arpl
mov
test
test
add
lahf
int
shl
notb
mov
into
or
and
sbb
adc
cld
insl
subl
pop
and
xlat
mov
pop
cmp
in
sahf
mov
mov
pop
mov
loop
inc
rcrl
cltd
sbb
cmp
cltd
xor
arpl
jae
and
mov
lcall
daa
nop
inc
or
pop
xchg
roll
incl
incl
int
jg
push
jbe
or
test
sub
xchg
xor
pop
repnz
stc
imul
dec
push
fisttpll
push
cmc
in
clc
cli
mov
jge
lock
dec
fiadds
mov
mov
scas
mov
in
popa
sub
je
sub
sbb
mov
rcr
ja
andl
addl
sbb
sbb
xor
inc
mov
clc
adc
mov
lods
mov
cmp
xchg
mov
push
out
testb
mov
mov
movsl
shrl
rol
ret
push
repz
aas
rol
push
adc
mov
adc
test
mov
sub
out
mov
dec
clc
fldl
or
ret
jp
imul
stos
out
cmp
xor
lods
dec
ficoms
divb
pop
or
mov
sbb
adc
add
fs
cld
mov
lahf
push
pop
gs
mov
pusha
mov
scas
jge
and
pop
bswap
call
test
aad
dec
xchg
pop
frstor
nop
sbb
sub
lods
sub
sbb
iret
pop
fimull
testb
and
fidivs
jno
xor
outsb
mov
mov
pop
fcoml
scas
cmp
jns
imul
insl
loope
jle
int
repz
inc
dec
lds
mov
movb
mov
fcoml
loopne
add
out
jp
jae
lcall
rolb
ret
fimull
pop
test
cmp
push
arpl
int3
push
pop
sub
sbb
std
fcmovb
pop
lods
inc
sbb
sub
push
iret
ljmp
or
mov
add
adc
cwtl
int
sub
lahf
mov
ret
into
loop
sub
sbb
pop
shrl
mov
jb
pop
cmpsl
call
addr16
xor
and
pusha
push
dec
fadds
jae
int
sub
shll
cmp
sahf
pop
jmp
ss
push
fimuls
mov
leave
or
inc
push
push
mov
fucomip
cmp
and
movsb
mov
mov
lods
out
cmp
pop
in
xor
in
sbb
cmp
cmpsl
cmp
xchg
jns
sub
cltd
insl
je
and
addb
pop
int
dec
sbb
pop
fbstp
iret
lods
and
push
test
imul
pop
adcl
xchg
jo
dec
loopne
or
jae
sbb
pop
push
lret
test
fdivrs
enter
mov
mov
jp
xchg
fmull
inc
mov
stos
adc
dec
jl
push
ljmp
test
adc
imul
pcmpgtb
into
mov
call
jmp
adc
cmpsb
sti
out
in
jnp
int3
hlt
xchg
push
adc
ss
pop
mov
aam
mov
dec
sub
xchg
test
jne
std
lea
cmp
jb
andb
nop
ret
xchg
mov
popa
pop
int3
cmpsl
adc
shl
xor
enter
fnstcw
cwtl
and
lret
adc
ficoms
jmp
push
or
inc
inc
mov
cltd
pop
frstor
push
push
jb
sahf
mov
loopne
in
sub
sbb
or
mov
dec
cld
fwait
enter
sti
sub
dec
pop
cmp
ljmp
and
xchg
in
sub
decl
je
cmc
fistpll
adc
out
dec
xchg
xor
enter
mov
rclb
fidivs
movsl
iret
inc
addr16
in
adc
mov
mov
pop
jbe
lret
and
cmpsl
push
mov
fucomi
or
or
add
dec
std
push
xor
lret
test
fsubp
mov
mov
cwtl
dec
dec
sub
push
sub
add
pusha
jecxz
cmp
iret
stos
xor
pop
or
adc
push
mov
adc
ret
out
repnz
push
test
sbb
add
mov
sub
stos
cmpsl
adc
add
cmpsl
lea
ljmp
mov
mov
jle
cld
inc
cmp
push
sahf
jae
insb
and
ss
mov
out
adc
pop
push
push
sbb
int
sbb
enter
aad
mov
fists
hlt
call
xlat
in
bound
aad
jmp
cvtdq2ps
xor
xor
aaa
xor
pop
mov
dec
js
hlt
out
or
cs
mov
fmull
sbb
loope
fcompl
das
mov
es
test
push
scas
mov
fdivl
scas
in
push
out
and
aad
ljmp
pop
rsqrtps
call
jnp
add
gs
sbb
and
les
dec
cld
adc
mov
and
popa
lcall
push
leave
scas
out
cwtl
vpshuflw
data16
mov
enter
jbe
sub
xlat
movsl
inc
cld
push
int
fmulp
adcb
add
cwtl
movsb
sti
mov
push
push
shlb
lock
lret
sub
enter
cli
imul
pop
adc
sub
mov
dec
dec
scas
cltd
mov
cmp
icebp
pop
sti
arpl
and
sub
ss
or
jmp
cmc
cmp
out
imul
lret
or
push
mov
loope
sub
arpl
mov
frstor
jmp
stc
stos
jnp
mov
push
mov
pop
sysret
jns
ja
test
shrl
dec
push
xor
xorb
mov
inc
orb
fmuls
adc
aas
nop
arpl
mov
ret
xchg
outsb
adc
popa
test
je
out
inc
jmp
jp
pop
mov
and
sub
cs
repz
sbb
fiadds
cmpsb
loop
hlt
pusha
and
cld
xchg
repz
or
pop
stos
cmpsl
push
jns
stos
shrb
mov
mov
and
push
or
popa
inc
imul
dec
enter
mov
mov
fsubl
or
repnz
mov
or
outsb
popf
xchg
mov
cmp
add
ret
ret
cmp
xor
mov
add
cmp
hlt
pop
mov
aam
cs
pushf
xchg
sbb
clc
arpl
inc
rorl
push
mov
outsl
push
pop
or
cmp
pop
into
lods
rol
lock
xor
test
scas
mov
fistl
in
inc
jae
movsb
js
cltd
shufps
fstp
vcvttps2dq
mov
outsl
fs
and
js
fs
cmp
xlat
mov
mov
ret
cmpb
add
pop
adc
lcall
test
stos
cmp
push
jno
xor
cs
cmp
imul
or
std
lea
mov
sub
sbb
pop
xor
dec
cmpsl
incl
into
ret
out
lret
sbb
test
xchg
shrl
mov
xor
or
scas
or
ret
adc
cmp
lock
scas
mov
lret
mov
adc
sahf
imul
in
sahf
mov
or
inc
mov
push
aam
mov
ss
imul
mov
mov
lods
fwait
addl
xor
mov
mov
das
fldt
pop
or
sbb
movsl
inc
pushf
mov
mov
push
shlb
in
add
test
push
jg
movsl
popf
lock
inc
and
sub
add
add
div
bound
aad
sarb
xorl
ret
in
cmpsb
cmp
xchg
aas
cli
sbb
ret
loopne
insb
or
dec
repnz
and
adc
aas
gs
addr16
sub
mov
bound
cwtl
adc
cmpsb
adc
scas
mov
sbbb
pop
push
add
iret
pop
and
fwait
mov
inc
stc
add
jmp
clc
cmp
jecxz
mov
pushf
cmpsl
pop
jl
xchg
jg
or
and
xor
scas
or
test
negl
bound
shrl
dec
not
in
mov
jg
jge
lods
pushf
sub
ss
push
xor
mov
fsubrl
pop
aam
fidivrs
ret
xor
aam
nop
stc
subl
cmp
mov
inc
pusha
lea
clc
ret
jle
jecxz
push
add
inc
push
fdivl
js
and
fsub
inc
lods
dec
push
pusha
xor
mov
add
push
push
or
jecxz
movsb
pop
ljmp
lods
sbb
mov
or
xor
fucom
adc
cmp
mov
mov
dec
ret
sbb
and
shl
jno
sub
pop
fcompl
inc
aam
xchg
insl
mov
mov
cmp
mov
lret
cmp
sub
add
in
mov
xlat
es
sbb
dec
cltd
loopne
mov
je
pop
cmp
xchg
push
or
pop
test
or
push
pop
cli
xor
call
ret
test
jl
loop
andb
shll
int
test
call
subb
les
mov
jb
andb
out
movsb
mov
xchg
push
xlat
jp
push
divl
jne
or
test
adc
mov
scas
divl
push
repz
or
ficoms
aaa
pop
push
pushf
sub
ss
ret
push
sbbl
lods
dec
sti
imul
pop
out
jne
push
movsb
and
cmp
pop
or
xchg
mov
ljmp
daa
in
pop
mov
fdivr
lods
mov
and
mov
xchg
sbb
and
pop
stc
jge
loopew
mov
cmp
inc
test
push
stos
out
ret
pop
and
mov
adc
xor
jecxz
adc
jbe
stos
push
mov
test
das
aas
push
cld
fdivrl
pusha
es
subb
pop
stos
fs
dec
rcll
xor
jae
push
ja
mov
data16
ljmp
jl
pushl
lock
repz
lock
inc
icebp
jne
rol
stos
adc
and
lods
aam
pop
hlt
int3
out
cmpsl
cld
test
lea
fsubrl
sbb
xor
in
insb
sti
xchg
xor
addl
mov
cmp
mov
add
or
adc
or
jne
mov
fs
jp,pn
sti
lods
leave
or
pop
lcall
mov
arpl
stos
out
test
or
cltd
aas
push
pop
outsl
jne
pop
mov
pop
ja
jno
loope
pop
mov
push
push
in
mov
pop
add
lods
popf
cmpsb
loope
loop
scas
cmp
test
xor
xchg
xor
out
daa
stos
mov
out
mov
sub
jp
dec
cmc
adc
aam
fcom
and
mov
lods
mov
xor
nop
cmp
pop
scas
aas
and
and
cmp
xor
in
mov
jns
jecxz
filds
pop
cmp
std
mov
outsb
push
mov
dec
mov
and
std
pushf
daa
push
dec
xor
adc
pop
lock
jmp
fs
pushf
inc
push
adc
mov
pop
imulb
outsb
sbb
inc
mov
dec
push
mov
jne
test
stos
ds
out
pop
cmp
jge
xchg
push
scas
and
jno
enter
fwait
lods
pop
xor
or
and
push
movsl
dec
insb
enter
aas
or
lods
ss
lret
leave
fwait
cmpsl
sub
insl
push
hlt
fcomp
insl
je
and
scas
xor
jnp
lock
jne
lea
and
xchg
adc
jp
jns
mov
adc
addl
pushaw
xchg
lods
adc
fstps
push
cmp
out
xor
jecxz
outsl
pop
pop
in
sti
xchg
push
rorl
unpcklps
aad
shrl
and
mov
dec
repz
scas
add
jl
fsubrl
cmp
lcall
cltd
out
push
push
jnp
arpl
out
fdivrs
stos
dec
das
and
cmpsl
xchg
jge
lods
sahf
mov
dec
push
fmul
fisttps
add
push
mov
mov
cmc
daa
scas
adc
mov
jmp
adc
or
push
mov
adcb
mov
and
imul
mov
dec
pop
jo
pushw
add
push
mov
out
movsl
adc
inc
ds
mov
cs
jl
and
lret
test
lcall
and
mov
aas
sub
jne
sbb
sahf
sbb
scas
ficompl
jno
add
sub
out
cmp
clc
cvttps2pi
push
mulb
clc
gs
and
sbb
into
mov
push
add
in
xchg
imul
push
push
inc
cmc
rolb
mov
jnp
cmpsl
cmp
call
gs
mov
adc
sbb
iret
mov
sarl
fisubs
arpl
addr16
sti
add
jecxz
outsl
lcall
in
sbb
adc
sub
jl
mov
mov
ret
clc
or
adc
dec
inc
testl
cltd
cmp
fistps
adc
test
daa
ret
mov
shrb
in
and
add
cmp
cmp
adc
sbb
jo
mov
shr
in
sub
cmp
push
mov
std
push
sub
dec
adc
arpl
mov
add
rcll
xor
inc
fxch
ret
xchg
xchg
xchg
xchg
or
mov
addr16
sub
mov
mov
imul
pop
jmp
mov
es
rol
pop
push
xchg
pop
cs
loope
jne
out
xlat
inc
adc
xchg
lods
jle
in
push
hlt
pushf
add
lea
xchg
jecxz
jno
cmc
sti
mov
cmp
dec
mov
loope
lret
jno
add
sub
loopne
mov
sub
inc
cmpl
or
mov
ret
inc
lret
dec
mov
mov
adc
std
lds
mov
dec
int3
cs
mov
test
cmp
xor
mov
inc
xor
fldl
or
mov
sarb
repnz
mov
push
es
cmp
push
cmpsl
or
mov
xor
pushf
in
sub
push
cmp
xor
mov
xlat
adc
push
outsb
mov
lret
repnz
or
push
xchg
mov
in
fsubs
std
aam
outsb
xor
and
push
add
adc
lahf
shlb
mov
test
xchg
inc
mov
in
mov
pop
mov
std
sub
and
scas
mov
femms
aam
pop
adc
xchg
jle
xchg
or
jmp
insl
mov
test
push
dec
fisttpll
ds
insl
jg
jg
hlt
loope
jl
ret
cmpsb
clc
aam
jbe
cmp
cmp
out
pop
xchg
sub
ss
xor
iret
into
push
lods
push
mov
mov
imul
mov
mov
out
mov
or
push
jp
bound
daa
xchg
xchg
ret
or
orb
insb
bound
dec
push
andnps
adc
push
inc
daa
ret
jae
lret
sub
jecxz
adc
call
fmuls
std
mov
cltd
imul
or
fmul
pop
xchg
xchg
xchg
jae
aas
ljmp
push
mov
rolb
jp
mov
pop
dec
jge
loopne
ss
jle
jno
es
sbb
sti
lods
mov
aas
stos
stos
add
sub
dec
cmpsl
out
enter
mov
jl
inc
cli
loopne
pop
mov
sbb
lock
xchg
mov
mov
std
lds
sub
dec
jnp
data16
push
cli
xlat
mov
jne
dec
sbb
rolb
sahf
mov
or
sub
pop
cmp
stos
scas
xor
pop
pop
nop
inc
lock
fucomp
aaa
mov
jb
push
dec
arpl
outsb
xchg
jg
adc
shld
push
rolb
jb
sbb
sub
scas
cwtl
roll
mov
inc
popf
xor
cltd
das
xchg
mov
push
stos
js
add
xor
sub
cmpb
push
or
gs
dec
add
repz
decb
jmp
rcrb
icebp
test
xchg
and
cmpsl
insl
pop
pop
scas
ret
dec
addb
jp
fcompl
or
movsl
icebp
push
sbb
test
pop
adc
and
mov
pop
sub
lds
frstor
lahf
daa
pop
cmp
out
aad
adc
pop
xchg
mov
int
mov
aaa
sbb
int
ss
pop
lds
pusha
cmp
insb
test
clc
out
ror
mov
std
add
call
stos
imul
lahf
int
pop
xor
repnz
imul
popa
dec
movsl
xchg
lock
cwtl
nop
push
push
xlat
adc
sub
enter
repnz
js
cmp
lock
mov
mov
pop
push
sbb
xlat
mov
xchg
xchg
cmp
mov
push
pusha
call
mov
lcall
adc
mov
mov
or
sarl
cld
psraw
or
aas
daa
push
lods
lret
aad
rcl
imul
inc
in
in
div
fdivrp
ss
sub
std
test
cmp
mov
cmc
or
popf
loope
into
push
mov
fs
pop
gs
xchg
mov
mov
dec
rcrl
dec
xchg
xchg
mov
leave
add
imul
or
fiadds
ljmp
insl
xor
out
adc
movl
or
shrb
or
shrl
ds
push
jae
fstpl
push
popa
and
icebp
cmp
in
jge
cmp
dec
pushf
xchg
insb
iret
in
std
jle
pop
insb
pop
jns
js
xorb
mov
jbe
sub
loop
jmp
mov
dec
in
test
lds
fcmovnu
scas
leave
inc
ss
cmpsb
pop
pop
aad
lds
push
cwtl
in
xchg
loop
add
js
outsb
sahf
loopne
xor
pop
into
cmp
jle
mov
cmp
es
or
cmp
push
xchg
cwtl
xchg
shl
sub
test
or
or
xchg
loopne
dec
pop
nop
pop
inc
sub
out
scas
ss
ret
fcoms
loopne
arpl
seta
xchg
add
outsb
jg
ljmp
inc
xchg
decl
push
scas
popa
ret
das
jno
adc
js
pop
call
loope
andb
out
jge
ret
out
xchg
mov
into
and
dec
add
movsb
leave
mov
scas
ret
mov
sub
sub
in
test
push
aad
adcl
push
cmp
sub
push
xor
addb
adc
ret
loopne
mov
xchg
loope
mov
mov
push
js
fwait
cmp
repnz
pop
push
sar
xchg
clc
push
repz
add
push
rorb
or
rcll
mov
push
jns
loope
adc
lds
js
sti
addr16
sbb
push
out
dec
sub
lods
xor
mov
rcrb
aad
xor
cwtl
inc
je
push
pop
jmp
ja
add
decb
push
aas
sbb
jbe
mov
mov
outsb
mov
sbb
ljmp
jle
cmp
push
xchg
push
push
mov
xchg
ud0
fcomps
inc
arpl
pop
lcall
push
testb
lock
flds
sub
dec
push
push
jge
mov
adc
ja
in
aas
xchg
lret
cwtl
fmuls
test
adc
mov
sub
notb
jecxz
sbb
shrl
mov
or
inc
push
mov
or
out
pop
add
ljmp
fcomps
lods
in
bound
add
aam
jbe
mov
push
pop
mov
mov
faddl
mov
push
rolb
scas
lret
xchg
test
lcall
lods
pop
mov
sbb
int3
pop
push
mov
jbe
insb
insb
pop
fdivrs
out
fstps
iret
scas
movsb
js
clc
cmp
lods
rorl
jne
jp
jp
dec
cwtl
out
nop
mov
stos
rcll
std
dec
dec
sbb
aaa
xorps
cmpsl
push
sbb
push
cmpsl
pop
in
adc
sbb
int3
sbb
jg
push
mov
ficoml
xor
int3
shll
pop
sahf
cmp
pop
sub
icebp
push
xchg
mov
cli
fadds
clc
lods
mov
rclb
mov
sub
jbe
gs
sub
pop
stos
lds
or
sti
lds
push
sbb
jbe
shlb
adc
incl
dec
adc
push
outsl
sub
test
inc
leave
mov
mov
shlb
rcrl
in
scas
push
dec
mov
ffreep
lods
sbb
lds
int3
xlat
mov
mov
pop
push
popa
fs
mov
movsb
jle
sub
les
mov
in
mov
and
test
mov
jp
test
insl
scas
sub
push
push
das
and
lret
add
xlat
mov
cmpsl
xor
aam
pop
cmc
test
out
lock
add
mov
stc
jmp
insb
pop
aas
inc
jg
mov
xchg
shll
mov
leave
rolb
int
pop
aam
lds
or
sbb
les
push
sub
insb
sbb
rorb
push
sbb
jb
dec
out
inc
cmp
jle
sbb
lea
xchg
mov
aas
pop
icebp
push
int
mov
insl
pop
scas
xchg
adc
lret
std
out
cwtl
sbb
and
xlat
loop
daa
inc
jmp
push
es
add
xchg
jl
mov
inc
pushf
fdivs
sub
pop
adc
hlt
pop
xchg
sbb
in
aas
mov
push
dec
clc
pop
cli
jbe
dec
vmread
or
inc
mov
add
lcall
push
lret
gs
dec
rorb
xchg
movsb
mov
cs
cs
fcoms
dec
adc
pop
fwait
adc
or
sub
call
filds
dec
mov
lock
mov
push
cmp
jmp
add
xor
mov
dec
cmp
mov
imul
jbe
jbe
push
cltd
subb
push
je
pusha
adc
out
lret
enter
push
xchg
jge
xchg
jb
xor
in
mov
movsb
jno
int3
or
and
enter
dec
dec
jg
dec
mov
fcmovne
addr16
fidivrl
int3
nop
cwtl
ljmp
aad
or
push
fnstcw
mov
imul
inc
aad
nop
fadds
rorb
push
inc
pop
cmp
jno
add
pushf
aam
xchg
ja
or
push
jmp
xchg
frstor
sub
loop
or
mov
andl
fnstsw
mov
lea
mov
or
sbb
jns
xlat
or
mov
pop
cmovo
leave
ret
or
hlt
lahf
fisubs
xorl
dec
popf
cmp
into
data16
fistpl
jo
stc
mov
cmp
mov
mov
insl
pusha
ret
nop
negb
pushf
dec
stos
pushf
or
xor
add
xchg
test
mov
xchg
xor
sub
or
lea
push
mov
cwtl
jbe
cmp
test
xchg
gs
sub
test
sbbb
cmp
inc
pop
pop
sub
icebp
sbb
xor
inc
sbb
adc
or
test
movsl
sbb
std
push
cs
jl
cmpsb
inc
cs
movsl
adc
negl
cld
jl
cmp
mov
lret
xchg
push
push
mov
mov
mov
xchg
pop
in
adc
loopne
pop
cs
push
clc
mov
bound
dec
cmp
sbb
lret
lcall
xchg
das
aad
gs
push
cltd
sub
pop
cli
daa
lds
lret
adc
fucom
addr16
mov
push
pop
dec
in
repz
icebp
into
aaa
test
andl
adc
arpl
out
sbb
addr16
imul
dec
xchg
adc
sub
mov
out
pop
mulb
and
mov
ja
mov
cmp
mov
sub
mov
scas
stc
sub
pop
fwait
addb
test
dec
dec
js
outsl
xchg
imul
pop
pop
pop
and
addl
cmpsl
pop
and
in
gs
push
inc
into
fildll
cmp
rcrl
jl
rolb
or
adc
push
out
add
imul
scas
inc
add
lret
and
or
pushf
jp
lcall
lock
mov
push
pop
mov
or
dec
and
mov
mov
dec
or
pop
cmp
sbb
and
pop
or
or
imul
mov
push
add
inc
lods
inc
push
ffree
or
imul
cmp
pop
add
pop
cmp
mov
sbb
jle
popl
movsl
ljmp
jmp
pop
ja
push
pushf
push
add
out
cmp
dec
idivb
jg
sbb
fstpt
pushf
mov
sti
je
aam
call
lcall
fs
cmpsl
dec
ja
inc
push
mov
aad
mov
and
push
and
dec
inc
sahf
mov
sub
sub
xchg
sbb
xor
adc
mov
pusha
jecxz
lret
push
and
js
xchg
jns
aam
lods
out
or
aaa
cli
and
mov
mov
push
loop
cmp
lea
cli
cmpsb
insl
mov
mov
das
adc
fs
jne
inc
jge
inc
adc
test
xchg
sarb
stos
and
cwtl
or
add
mov
xchg
sbb
enter
ret
add
imul
push
loop
pop
mov
adc
mov
rclb
ss
add
sbb
and
les
cmp
cmp
cwtl
lahf
jp
int3
movsb
mov
nop
and
in
sub
dec
xchg
xchg
sub
dec
test
jl
aaa
insb
mov
mov
push
cmp
add
shrl
sub
outsl
dec
movb
pop
mov
add
cli
dec
mov
jne
and
xchg
add
add
dec
mov
mov
ret
bswap
movsl
xchg
jo
xlat
push
push
or
dec
add
or
mov
dec
les
and
xchg
movzwl
push
scas
lret
push
xchg
jg
stos
lds
int3
mov
paddq
rcrb
dec
mov
mov
xchg
mov
repnz
inc
call
push
adc
dec
out
xor
cmpl
xchg
stos
stc
xor
xor
and
aaa
xor
insl
je
inc
ja
pop
mov
scas
add
push
in
fcmovne
insb
mov
or
pop
mov
mov
dec
fwait
rcll
fcmovnu
mov
adc
mov
scas
mov
pop
inc
movsl
cmovle
decb
stc
stos
or
mov
or
popa
out
mov
in
test
aaa
inc
inc
xchg
fcoml
cmc
popa
mov
lds
jbe
scas
int
jo
fildl
aas
popa
shr
out
pushf
and
inc
push
sahf
dec
nop
rcrl
sbb
imul
push
cmp
push
lahf
lret
lods
push
pop
sub
jnp
sub
adc
xchg
bnd
dec
scas
pop
cli
jp
pusha
fwait
in
icebp
inc
repnz
jge
xlat
sbb
loope
pop
cmp
pop
mov
sub
jl
in
cmpsb
jmp
add
shrl
imul
mov
loope
mov
mov
jmp
into
fbld
or
pop
mov
mov
dec
lds
cmp
jl
pop
ret
or
pop
and
add
cld
pusha
stc
push
sub
loope
xchg
add
cmp
dec
cmp
xor
shrb
lods
adc
xchg
dec
mov
adc
int3
test
adc
fstpl
out
add
mov
loopne
inc
fisubrl
sbb
inc
mov
mov
adc
pop
js
aam
adc
lock
add
cli
mov
pop
jo
fiaddl
inc
pop
aad
fwait
pop
in
or
out
add
testl
stos
xchg
jnp
fmuls
arpl
jnp
ljmp
and
push
xlat
iret
std
sbb
mov
add
jl
es
out
mov
loope
shl
jnp
fs
repnz
pusha
sbb
mov
test
pop
cwtl
in
stc
mov
and
js
jns
and
je
mov
inc
andb
gs
sbb
imull
inc
jns
movsb
pop
or
test
pop
push
jns
pop
popf
adc
push
inc
adc
adc
push
stos
scas
add
push
dec
jl
xor
dec
dec
out
xor
sub
push
or
repz
in
xor
fildl
lods
aas
int3
movsl
push
push
inc
dec
lret
dec
inc
sbb
int
das
mov
xor
addb
inc
ja
gs
fsub
dec
rolb
cmp
js
or
jne
enter
rol
sbb
clc
bound
cmp
push
in
sub
stc
inc
clc
filds
or
lock
cmp
xchg
mov
xchg
push
rorl
add
dec
ja
lahf
adc
jg
jg
in
lds
xor
add
int
dec
ficoml
es
mov
and
pop
inc
dec
adc
popa
jno
jmp
lock
icebp
jge
es
jno
out
in
xchg
cltd
stc
lods
divl
add
add
test
js
out
ret
ds
sub
rcrb
mov
fistpll
in
mov
adc
sbb
inc
cs
sub
scas
sbb
es
and
mov
mov
arpl
jg
push
mov
pushl
sbb
cmpsl
mov
cmpsl
push
test
pop
testl
call
push
cmp
iret
sbb
popf
andb
icebp
mov
dec
ret
gs
enter
push
scas
sbb
popf
insl
cmp
fistpl
xor
and
mov
mov
xchg
mov
dec
sbb
pop
push
cmp
out
jecxz
jp
enter
mov
or
mov
sub
and
stc
cmp
hlt
cmpsl
push
push
stc
leave
add
dec
into
mov
imul
cmc
inc
sbb
and
leave
adc
int3
nop
cmp
ljmp
dec
sub
push
in
addb
js
cmp
push
ror
jo
loopne
notb
xor
add
in
fidivrs
sbbb
js
mov
inc
fsubrp
cltd
bound
loopne
cmp
das
repnz
dec
icebp
out
hlt
rolb
cmp
mov
popa
rolb
sbb
add
cmp
pop
jecxz
arpl
test
out
gs
rclb
in
cmp
xchg
xor
pusha
add
fs
rcr
cltd
sub
mov
sbb
out
dec
insl
xor
mov
adc
ds
mov
insl
xchg
mov
icebp
inc
cmpsl
pop
cmp
inc
lret
mov
lods
sahf
mov
mov
and
xchg
jnp
call
add
fildl
push
adcl
int
lret
sti
inc
jnp
jno
call
inc
addr16
test
cmp
add
mov
add
lods
fimuls
xchg
test
push
ss
loopne
and
dec
stc
mov
iret
mov
inc
mov
jg
dec
jl
inc
add
sbb
push
adc
dec
push
cmp
xchg
mov
jo
xchg
pop
inc
mov
mov
mov
into
in
shlb
addb
insl
pop
jno
insl
fs
test
aas
rcrl
dec
and
loop
inc
cmc
fsubr
aas
sub
das
rolb
fcmove
mov
daa
dec
mov
fs
call
lock
cmpb
mov
les
enter
mov
js
ja
lods
dec
das
jb
jge
jbe
mov
cmpsl
xorl
sbb
jp
cs
xor
addb
cmp
pop
or
adc
loop
mov
das
movsb
xchg
mov
dec
xchg
dec
test
push
or
bound
popf
scas
sahf
shrl
mov
adc
dec
out
test
lods
outsl
and
iret
addr16
cmp
rorb
pop
popa
mov
mov
and
dec
sahf
pop
std
movsl
negb
inc
sub
and
lock
out
or
push
inc
into
jnp
jge
adc
cmp
push
outsl
cmp
pop
rcrl
popf
inc
xchg
sub
push
repz
stos
lods
pop
cltd
ficoml
sub
and
cmpsb
push
fldenv
mov
and
popf
imul
xchg
cmpsb
add
in
or
movsb
shll
add
xchg
push
inc
mov
sbb
pop
into
or
sarb
and
lahf
cmp
cmp
fldt
jl
mov
fs
shl
xchg
sti
xlat
jns
rol
ss
mov
sbb
sbb
call
mov
xchg
into
shrl
jo
xor
push
push
inc
repz
enter
adc
push
jo
add
in
and
xor
in
jg
shl
jns
nop
js
cli
and
jo
adc
jg
or
mov
xchg
cmc
lods
insb
and
shrl
out
sub
inc
imul
popf
mov
sub
test
insb
subl
rolb
and
cs
cmp
repz
lret
enter
mov
add
lcall
add
dec
mov
outsl
out
sbb
arpl
addr16
sahf
mov
mul
sbb
inc
in
push
cltd
xor
fdivrl
pushf
push
dec
repnz
sahf
jle
cmp
pop
insl
sub
add
jno
add
in
repz
inc
notb
popf
ja
add
and
rolb
cmp
lea
lret
push
dec
lret
mov
ret
push
push
adc
in
sti
lods
fldl2e
dec
es
xchg
cltd
fadds
insb
mov
leave
sti
repnz
in
inc
enter
out
inc
lret
push
sti
das
sahf
cmp
push
jmp
push
xor
testl
fwait
dec
jns
add
stos
pushf
mov
mov
add
out
jge
cmpl
push
xchg
leave
js
ret
cmp
xchg
iret
xor
sbb
push
mov
subl
push
pop
cli
cltd
jg
sbb
loope
out
inc
clc
sbb
mov
dec
pop
push
push
push
cmp
lods
sub
push
xchg
pop
sbb
pop
outsl
sti
sbb
push
lcall
test
mov
push
mov
imul
in
push
inc
das
mov
cmp
outsl
jl
xchg
cmc
les
jne
mov
jp
xor
popa
out
cmp
jne
xchg
inc
sub
and
and
and
jns
jno
cmpsl
or
movsb
test
jns
out
aam
cwtl
data16
dec
arpl
ds
int
jecxz
sub
push
add
and
or
bound
inc
xor
cmp
xor
push
cmpsl
lahf
add
dec
leave
dec
das
subb
xor
jne
aas
inc
cld
mov
dec
movsl
daa
mov
mov
and
xor
pusha
test
sub
sbb
scas
cmc
scas
push
dec
clc
xchg
ljmp
test
cmp
mov
out
aad
cmc
dec
push
std
mov
mov
push
inc
test
mov
pop
jns
and
mov
in
sub
jmp
sarb
add
cli
sbb
lret
gs
ror
mov
dec
test
pop
push
sti
loop
popa
andl
stc
mov
fwait
fwait
dec
dec
cltd
mov
mov
xchg
popa
mov
jb
and
mov
push
push
xchg
pusha
rcrl
lea
out
cli
negl
pop
dec
mov
add
popf
mov
xchg
jecxz
in
jns
mov
je
es
mov
or
je
mov
ret
push
push
sub
cltd
dec
cwtl
adc
outsb
push
mov
fs
pop
mov
sbb
test
ljmp
cwtl
aad
and
loop
dec
sbb
out
cld
lcall
jl
or
cmp
jp
jg
popf
push
std
out
jmp
adc
pop
pop
addl
arpl
jo
xchg
test
inc
jmp
inc
xor
stos
xor
cwtl
jns
mov
mov
pop
dec
aaa
cmp
fisubl
nop
xchg
xchg
xor
mov
xor
mov
enter
inc
idivb
lea
push
pop
and
mov
aad
sbb
push
inc
mov
in
mov
dec
push
lret
subps
test
sbb
mov
xchg
addb
aam
div
mov
adc
lea
rolb
jbe
lods
leave
fadds
mov
int3
xchg
clc
leave
sub
bound
ds
cmp
hlt
aad
imul
mov
lret
jge
mov
inc
ficoms
sbb
jg
cmc
adc
mov
sahf
dec
inc
in
shrb
popf
je
pop
loop
pop
imul
ds
inc
pop
mov
into
push
inc
push
insl
pop
mov
mov
pusha
sub
sbb
lret
mov
gs
dec
mov
sahf
push
aaa
movsb
mov
int
shlb
lea
fnsave
jecxz
mov
jl
mov
mov
and
mov
in
dec
into
xor
inc
xchg
pop
mov
xchg
popf
sbb
push
call
mov
mov
das
xor
jecxz
xchg
jnp
in
lock
inc
sbb
inc
testl
jmp
jl
push
js
adc
stc
and
or
jne
shrl
xor
lods
xchg
push
aaa
inc
xor
aas
xchg
dec
and
in
push
xor
out
call
and
je
scas
in
sahf
mov
fstpl
dec
sub
ds
sti
aaa
mov
mov
outsl
in
mov
inc
sub
int
ljmp
mov
or
mov
and
outsl
jmp
iret
out
lods
push
adc
and
sarl
ja
cmp
cmp
mov
pop
and
pop
incb
jmp
mov
rcrl
xchg
dec
xchg
xchg
stos
scas
lods
push
iret
hlt
lret
sbb
or
popf
cwtl
mov
jns
inc
hlt
cmpsl
mov
dec
fs
adc
rclb
pop
icebp
or
repnz
jns
mov
and
sbb
pop
add
cld
jns
lods
pop
sbb
xchg
xchg
inc
pop
cli
sub
and
xor
xchg
dec
std
and
jg
out
dec
push
xchg
ss
insl
lea
pop
shr
dec
xchg
add
cmpb
iret
adc
push
cmp
jp
ret
mov
inc
out
cmp
xchg
jle
push
mov
loopne
add
jl
inc
add
push
sbb
xchg
mov
int3
enter
pop
jmp
xchg
clc
and
dec
out
ret
daa
sbb
dec
sbb
aad
enter
sbb
sbb
enter
bound
subl
inc
xchg
sbb
sub
out
fstl
xchg
or
nop
fwait
cmp
push
xor
movl
push
in
shlb
imul
rclb
adc
imul
mull
adc
aad
push
xchg
notb
adc
lea
cltd
movsb
xor
adc
aam
cltd
jo
movsb
mov
inc
xchg
xchg
outsb
sub
aaa
cmc
cld
mov
sub
out
sub
cmp
cmp
call
lahf
stos
lret
adc
mov
push
dec
push
int3
jo
rorb
push
sbbl
jmp
out
add
aad
mov
push
ficoml
test
sarl
insl
aam
jecxz
movsb
mov
pop
loope
cltd
cwtl
mov
scas
sbb
xor
sar
aas
xchg
xor
xor
mov
mov
jae
dec
push
fisttpll
clc
inc
xchg
or
mov
push
test
mov
lds
sbbl
jno
lock
dec
or
fwait
cmpsb
inc
inc
clc
std
out
test
aad
testl
into
subb
jle
aas
push
add
std
jmp
int
push
jl
aas
insb
das
xor
sub
xchg
in
je
stos
sahf
cmpsl
dec
jo
mov
pop
fidivl
pop
movb
pop
add
dec
push
adc
jae
fwait
imul
filds
stos
mov
das
adc
push
pop
adc
push
mov
fbld
iret
pushfw
push
outsl
mov
mov
jbe
or
inc
ret
loop
daa
adc
ror
out
pop
adc
add
xor
aaa
pop
mov
in
rcll
cmp
sub
mov
test
nop
xor
inc
or
mov
inc
mov
popf
sbbb
inc
sub
in
push
cmp
sub
mov
leave
inc
mull
jns
sub
push
call
jno
pop
xor
rcrl
lret
sti
xor
les
xchg
mov
dec
ret
shrb
roll
divl
in
in
push
inc
dec
xchg
imul
inc
cmp
xchg
sarl
xor
xchg
iret
ficoml
aam
pop
or
mov
jae
jp
rorb
xor
iret
jle
call
mov
lcall
adc
nop
pop
mov
ja
push
adc
or
and
and
pop
xor
mov
repz
lds
dec
into
sbb
mov
test
xlat
iret
lock
xlat
ja
adc
push
mov
lock
inc
rcll
scas
inc
lret
jne
mov
loope
or
xor
loopne
and
sahf
inc
xor
fimull
and
test
jb
movsl
fldl
xchg
daa
mov
mov
cmpb
push
inc
cmp
adc
mov
in
xchg
adc
push
divl
das
in
jne
xchg
repz
shr
sub
add
sub
inc
xchg
js
pop
mov
mov
nop
aad
into
mov
push
push
pop
jmp
mov
mov
daa
and
mov
sbb
sbb
inc
jmp
mov
dec
or
add
dec
or
mov
fidivl
xor
xlat
and
pop
mov
pop
pop
xchg
push
adc
pop
lahf
rcrb
dec
lahf
std
popa
shlb
fcmovnu
mov
or
scas
pop
out
mov
adcb
or
add
xor
in
push
cmp
add
pop
inc
lock
jecxz
adc
mov
or
orl
xchg
xchg
push
push
inc
imul
sub
aaa
dec
cwtl
in
out
lahf
dec
ret
aas
add
add
adc
or
out
jecxz
dec
push
mov
out
addr16
push
jno
pusha
lahf
cmp
mov
push
cmc
fdivl
int
rclb
push
out
xchg
push
pop
movl
jno
rcr
push
arpl
mov
mov
push
inc
mov
movsl
or
movsl
mov
cs
sbb
mov
push
adc
ficompl
mov
js
in
jle
jg
mov
test
sub
cs
mov
xor
es
out
push
pop
aad
adc
cmp
call
imul
add
ret
out
sub
jle
aam
xchg
pop
lret
out
mov
dec
icebp
cltd
inc
call
and
pop
imul
fld
dec
or
ret
in
bound
popf
aas
pop
pop
and
add
lret
daa
pushf
cmp
xor
add
add
or
addr16
add
push
js
stos
mov
stc
aas
popa
mov
dec
fxch
int
push
adc
push
insl
movsl
iret
sub
and
sbb
stos
cmp
mov
mov
jne
mov
add
xchg
out
enter
fs
cmpb
mov
in
xor
xchg
dec
aam
dec
cmp
js
sub
jb
hlt
fsubr
std
add
xchg
or
repz
stos
xor
test
fucom
movsb
fs
enter
mov
sbb
or
movsb
sbb
jecxz
es
and
lds
and
push
outsb
xor
aaa
mov
vmovlps
jmp
dec
add
mov
adc
stos
pop
cmp
and
test
js
mov
movl
popa
sub
int3
psrld
or
insl
push
loop
jl
push
and
repz
lods
dec
test
or
lahf
sbb
scas
sub
bound
ffree
adc
vmread
sub
or
sbb
in
jne
dec
rol
mov
in
outsb
sub
loope
scas
push
scas
or
mov
ret
dec
pushf
push
xchg
in
sti
push
negb
jo
movsb
outsb
movsb
adc
imul
wbinvd
inc
jno
xor
dec
data16
mov
push
insl
mulb
out
pop
and
popf
fs
shl
add
jecxz
push
xlat
dec
mov
dec
push
lea
stos
jb
into
sub
lahf
mov
out
loopne
and
xor
xor
jmp
fidivrs
aaa
scas
in
lret
pop
leave
cmc
stos
fcomps
xchg
lret
aaa
or
push
lahf
rorb
loop
cmp
mov
bound
add
fdivl
fcompl
inc
sbb
sahf
mov
mov
mov
sub
jo
daa
push
mov
sbb
cmp
mov
sarl
jo
dec
arpl
mov
dec
leave
mov
add
inc
cmpsb
in
out
sbb
and
aas
test
leave
jle
sub
in
push
mov
fcompl
or
and
inc
enter
mov
arpl
push
and
into
ret
or
movsl
scas
divl
inc
mov
jo
push
mov
mov
jae
fildll
sub
sti
in
mov
call
ja
fistpll
pop
pushf
and
bound
xor
stos
cmp
aaa
cmp
pop
imul
dec
jb
dec
lret
aas
pop
repz
in
inc
xchg
cmpsb
add
js
inc
icebp
fisubrs
xlat
jecxz
and
stos
and
push
aas
fnstsw
adc
push
sub
leave
cmpsb
lock
sub
sub
add
lahf
jb
add
dec
push
jo
dec
lret
cli
nop
lock
xor
mov
jnp
jae
xorb
gs
cwtl
jnp
mov
cmp
movsl
push
adc
lea
dec
mov
and
call
js
inc
inc
aam
cwtl
mov
shlb
adc
and
les
loope
int3
lret
lea
sbb
jl
fwait
jg
push
fistpl
mov
popa
pop
addr16
leave
push
outsl
or
stc
or
inc
push
mov
jno
cmp
push
or
xor
dec
inc
sbb
test
notl
mov
mov
sub
cmc
mov
mov
mov
int
movsl
shrb
jns
cmpb
out
ret
add
mov
mov
icebp
lods
pop
sbb
jbe
cmp
ror
jns
fsubp
push
push
int3
nop
push
xchg
lea
in
shlb
adc
addr16
in
fxam
ds
pop
stc
adc
cmp
in
cltd
inc
pushf
test
xor
shl
cmpb
into
push
test
dec
or
push
cli
xchg
mov
les
outsb
add
cmp
sti
lock
inc
clc
and
inc
cmpsl
ljmp
dec
and
inc
xchg
xor
dec
ret
jmp
inc
in
int
xchg
xor
loop
mov
mov
mov
lahf
iret
in
mov
sbb
aad
mov
fmull
cwtl
call
adc
out
jns
int
cs
and
add
orb
sbb
movsb
sbb
xchg
dec
cmpsl
test
shlb
pop
jae
push
sbb
clc
mov
xchg
lret
mov
roll
sub
int
push
xchg
shlb
jo
add
jb
ss
push
lret
faddp
and
loopne
movsb
bound
ror
ds
popa
or
aas
or
cmp
imul
fsubrs
adc
es
xchg
jl
loopne
ret
dec
mov
push
outsb
dec
sub
sub
push
enter
lds
cmp
mov
push
pop
popa
inc
mov
sahf
xchg
fxch
lea
push
fmull
ja
cwtl
lcall
es
cmp
dec
jp
stc
lock
pop
lods
and
aaa
mov
and
xchg
imul
jg
cltd
movsl
jecxz
dec
mov
out
lcall
call
bound
fidivrl
dec
jno
stc
arpl
push
and
lods
in
fwait
or
insl
mov
lock
flds
xchg
paddusb
scas
cli
imulb
pushaw
popf
test
inc
add
mov
scas
jne
inc
mov
test
mull
outsl
jbe
repz
je
cmpsl
gs
imul
ljmp
imul
nop
jno
in
js
rcrl
mov
test
push
xchg
js
mov
aaa
pusha
dec
int
push
scas
or
pop
push
mov
pop
aas
rorb
xor
sti
xchg
cs
mov
cmp
aam
jp
adc
xchg
nop
sbb
lcall
movsl
or
shll
inc
inc
lcall
clc
dec
test
lock
jne
push
pop
imulb
cmp
push
movsl
mov
cwtl
cltd
sahf
cs
rcrb
push
cmc
pushf
cwtl
lods
mov
mov
xor
ret
jo
pop
dec
xor
adc
cmpsl
js
inc
test
cs
and
cmpsb
xor
and
dec
mov
jecxz
cld
jb
jno
jecxz
cmpsl
jae
ljmp
fstpl
mov
pop
xchg
mov
ret
push
cmpsl
add
sub
inc
outsl
mov
xchg
iret
jno
cs
stc
mov
aas
std
mov
lods
mov
dec
cmp
jle
movsb
push
adc
push
pop
mov
shl
loope
sarb
dec
test
pop
mov
es
inc
repnz
mov
and
sbb
test
xor
sysenter
add
or
jnp
in
inc
sahf
xchg
jb
adc
jbe
popf
jns
cmp
in
das
aam
jbe
fstps
push
sbb
loope
sub
leave
out
cmp
and
adc
out
sar
mov
or
jle
cmp
or
cmp
dec
mov
cli
sub
lods
push
test
push
cltd
das
nop
aas
push
adc
sub
inc
fldcw
xor
push
notl
repz
test
add
dec
stc
pop
shll
jle
inc
inc
pop
mov
js
adc
popa
int
arpl
mov
lods
fcoml
dec
test
test
and
add
inc
mov
jno
in
mov
lods
pusha
dec
sarb
fcomi
les
hlt
jmp
jae
xor
rcll
in
mov
xchg
fwait
leave
xor
push
hlt
sub
inc
sbb
add
push
jp
lods
pushf
lcall
xor
dec
add
sbb
testl
mov
into
sbb
movl
cmp
cmp
or
sbb
lret
stos
iret
or
gs
insb
mov
lds
add
or
int
imul
fwait
inc
ret
mov
inc
mov
test
xchg
push
sub
out
cmp
lcall
js
pushf
icebp
test
inc
test
arpl
adc
stos
rcrb
fstpt
aad
jo
xor
scas
lods
mov
test
xchg
clc
mov
push
mov
adc
jnp
insb
or
push
mov
iret
jno
loope
gs
fistps
dec
test
ljmp
sub
ret
fs
adc
pushf
test
rclb
dec
test
mov
adc
jle
jl
sub
sarl
push
jmp
repz
mov
dec
lds
jnp
or
and
dec
cmp
scas
mov
pop
add
mov
mov
loopne
sub
inc
xor
mov
push
pop
fnstcw
aam
push
push
sub
cltd
inc
cmc
mov
add
test
rcll
les
or
scas
fsubl
aad
dec
roll
and
loope
inc
cmp
push
dec
and
add
nop
in
fists
inc
pop
aam
mov
push
loopne
mov
or
mov
jge
or
mov
imul
imul
movsb
xlat
rcl
stc
dec
nop
lahf
dec
stos
das
inc
mov
inc
ficoml
push
inc
movsl
cmpsb
push
xor
jmp
adc
sub
mov
fiaddl
imul
shl
inc
ljmp
mov
xor
cmp
add
aaa
mov
mov
pop
jle
and
shlb
cmc
push
incl
add
popa
add
dec
mov
pop
mov
jns
ljmp
xchg
or
cld
jle
fimuls
dec
mov
xor
push
cmp
stc
mov
mov
pop
mov
clc
outsl
xchg
xor
xchg
fcoms
repnz
insl
roll
mov
addb
daa
lret
push
mov
xchg
cmp
pop
out
fadds
sub
icebp
inc
mov
adc
hlt
sub
mov
icebp
mov
out
or
mov
sbb
cmp
inc
mov
jb
gs
jne
sbb
mov
icebp
enter
test
pop
std
seto
pop
xchg
jg
inc
call
mov
push
xchg
xor
or
adc
imul
pusha
mov
pop
push
and
push
dec
scas
pop
clc
repnz
sbb
jl
test
decb
pop
xchg
mov
lock
test
jecxz
subl
cmp
lods
lods
add
in
int3
lods
ja
or
cmp
and
sub
pop
call
jb
enter
jg
and
and
mov
jns
cmp
cmc
fadds
bound
sbb
cmp
add
mov
cmp
xchg
adc
adc
lahf
mov
pop
jnp
jns
mov
test
mov
loope
dec
out
push
daa
jmp
fs
fdivrs
repnz
enter
test
aas
pop
popf
shr
or
jmp
daa
outsb
leave
outsb
and
jno
mov
pop
rcll
xchg
das
out
imul
and
push
test
dec
pop
sbb
jnp
stc
scas
pop
sbb
adc
outsb
cltd
std
push
sbb
mov
lds
movsl
in
push
jmp
mov
rcrb
inc
ret
out
mov
mov
fidivrs
pushf
sbb
jl
jns
and
bound
dec
or
lret
fdivs
mov
adc
push
push
out
cmpsl
xor
in
loop
in
test
add
pop
push
mov
xor
cltd
cmp
insb
cltd
dec
les
cmp
pusha
add
mov
dec
data16
mov
in
test
mov
dec
xchg
dec
xor
repz
in
xchg
nop
inc
jg
pop
cmp
movsl
nop
in
xchg
xor
add
push
push
rorl
mov
mov
jmp
push
stos
inc
jp
addr16
xchg
sbb
and
xchg
test
cmpsl
push
repz
ja
std
cwtl
jne
adc
inc
int
loop
scas
sbb
mov
xchg
les
sbbb
mov
fcoms
cmp
test
sbb
and
sbb
and
mov
or
nop
push
aas
out
mov
lock
ret
dec
pop
jge
jnp
mov
lahf
cmc
inc
dec
mov
add
mov
aad
int
jns
cmc
scas
imul
add
je
mov
rorl
jge
mov
movsl
xchg
xor
add
mov
sarb
and
adc
xchg
mov
inc
inc
fcomps
jp
mov
out
aaa
loope
pop
sbb
je
iret
mov
ljmp
clc
fsubrl
std
imul
push
mov
jge
testb
and
fchs
and
ja
ret
loop,pt
fcomp
ljmp
insb
mov
cmp
js
lret
into
adc
scas
adc
negb
mov
cmc
inc
mov
or
sub
fnstsw
aas
sub
in
jne
mov
aad
inc
push
popf
sub
pop
mov
xchg
dec
and
arpl
ficoml
fldcw
inc
fcomps
pop
add
sub
mov
jb
leave
xchg
les
iret
pop
addr16
jle
cltd
clc
cltd
fwait
stos
lock
jb
scas
cwtl
fwait
jle
add
jmp
jg
add
mov
repnz
out
int3
insb
inc
push
cld
or
enter
clc
bnd
pop
dec
std
cmp
mov
sub
inc
shlb
int
xorl
sub
xchg
mov
jbe
inc
ret
push
mov
sbb
push
int3
adc
pop
insl
sbb
push
idivl
bound
aaa
divb
leave
jl
jnp
insb
sub
dec
jnp
adc
xchg
orl
outsb
pop
jns
jg
mov
adc
mov
push
jecxz
sti
test
and
or
test
mov
shll
mov
jo
sbb
in
push
in
lahf
leave
stos
ljmp
js
jnp
and
or
fmuls
or
adcb
rcl
mov
xchg
push
lock
test
das
aaa
adc
insl
jg
or
mov
stos
sar
xlat
mov
stos
mov
mov
push
push
or
adc
ja
xor
fs
add
incl
mov
jae
pop
lret
fwait
sti
mov
arpl
jmp
mov
movsb
mov
lahf
das
xor
aaa
sbb
insb
sbb
and
sbb
sbb
dec
imul
push
mov
xchg
lret
movsb
cmp
inc
mov
hlt
dec
mov
add
add
add
loope
sub
add
lahf
xor
cld
mov
add
dec
push
jge
negl
out
push
xchg
jbe
addr16
lahf
repz
cmp
pop
lcall
push
lds
cli
lods
dec
mov
imul
movsb
mov
push
shr
and
mov
pop
cmpsl
xlat
subl
jl
mov
mov
lret
push
push
in
and
outsl
push
or
add
cmp
stos
cmpsb
sub
inc
test
sub
repz
mov
xchg
push
mov
pop
mov
mov
sahf
or
outsb
in
clc
add
int
or
jl
aaa
das
dec
imul
cmp
aas
jmp
aad
mov
cmp
imul
jl
pushf
mov
gs
xchg
cmpb
sub
gs
cmp
sbb
adc
push
mov
push
jl
xor
scas
adc
sub
jb
lret
bound
mov
add
loope
cmp
aad
mull
int
sti
lods
cmp
cltd
xchg
scas
js
mov
adc
std
push
hlt
mov
imul
jbe
mov
fwait
cli
jp
push
fdivs
or
in
lds
xor
and
xchg
fbstp
loop
jmp
cmp
push
je
dec
dec
mov
mov
hlt
mov
test
repnz
in
jp
imul
add
cli
scas
sub
loop
test
adc
cmc
xor
scas
fwait
negb
jae
out
cmp
mov
adc
out
inc
push
cmp
loop
stos
and
xchg
divl
orl
sbb
pop
mov
sbb
in
rorb
mov
movsl
movsb
mov
dec
jb
loop
xor
and
clc
ljmp
fwait
mov
outsl
fstpt
jle
std
jno
popa
xchg
aas
sbb
leave
adc
mov
add
or
test
ret
in
cld
push
lock
arpl
stc
outsb
mov
into
bound
sub
movsb
lea
bnd
push
push
lcall
or
push
loope
or
je
ss
xchg
sbb
push
mov
mov
xchg
dec
lahf
test
pop
jecxz
mov
push
jo
mov
pop
mov
gs
and
movsb
add
or
xchg
jno
cmp
test
fmuls
inc
push
call
sti
mov
test
mov
dec
in
xchg
jl
cld
or
jo
aam
push
pusha
mov
pop
mov
jne
test
mov
jne
lea
push
dec
mov
mov
jnp
inc
inc
pop
subl
out
popa
adc
mov
stos
and
sti
popf
cmp
das
repz
out
stc
pusha
inc
aam
inc
into
test
js
ret
adc
inc
jne
mov
repz
pop
or
cmp
or
mov
pop
js
das
mov
dec
push
cmp
in
sbb
rorb
pop
les
and
sti
jae
ret
sub
add
xorb
jno
andb
into
jecxz
sub
popf
imul
cmp
dec
add
xchg
mov
or
mov
scas
inc
mov
xor
bound
xor
xor
lret
jae
cmpsb
jns
and
fwait
add
gs
stc
push
and
or
xchg
mov
add
jne
jns
filds
jbe
xchg
or
pop
lods
in
call
push
inc
fwait
daa
roll
dec
xchg
mov
mov
nop
cmpsb
adc
push
das
cmpsb
loopne
xor
cld
adc
jg
push
dec
add
push
sbb
repnz
icebp
bound
rcrl
dec
mov
outsb
jl
push
push
adc
test
gs
rolb
mov
xor
inc
add
lods
inc
daa
or
pushw
pop
popf
push
push
cmp
loopne
inc
cs
stos
nop
mov
add
incb
pop
in
outsl
idivl
mov
pop
lods
inc
je
pop
dec
mov
test
insb
sub
mov
rcll
and
or
sbb
int
dec
mov
popa
lods
cld
xchg
xchg
pop
sub
stos
repnz
xor
cmp
or
xor
xor
push
mov
mov
and
gs
xchg
jle
and
push
fsubrp
sarb
out
enter
mov
enter
daa
into
add
xchg
cmp
mov
inc
fmul
int
cmpsl
testb
mov
repz
mov
sahf
test
cmpb
mov
addr16
outsl
fisttps
xchg
mov
cltd
insl
jns
jbe
push
hlt
and
repz
aam
lahf
out
insb
nop
pusha
xchg
add
dec
dec
lret
dec
fdivrs
je
jp
subb
iret
mov
push
mov
dec
out
sbb
orb
fistpll
int
test
cs
cld
call
jp
inc
mov
mov
push
jle
mov
clc
in
pop
icebp
subb
fistpll
cwtl
xor
pop
out
add
or
cmpsb
mov
pop
pop
dec
add
insb
subb
stos
popf
notl
shrb
ret
icebp
int
in
jp
inc
test
popa
lods
adc
xor
stos
stos
push
into
inc
ret
adc
pop
out
sahf
inc
cmp
pop
push
pop
jecxz
inc
mov
xchg
mov
mov
scas
outsb
mov
add
mov
mov
inc
dec
mov
pop
pop
lret
adc
cmp
test
popa
push
js
xchg
jge
aas
out
pushf
push
and
mov
es
jb
std
mov
inc
xchg
dec
xchg
dec
imul
adc
int
mov
enter
sub
pop
ffree
ret
cmp
imul
mov
in
push
cmp
dec
add
pop
das
pop
cmp
sub
adc
and
jne
and
outsl
clc
aad
sub
xchg
filds
mov
icebp
adc
arpl
fcmovnb
xlat
out
cmp
xchg
cmp
and
dec
xor
ljmp
sub
and
cld
rcll
rolb
cmpsb
cld
xor
lods
insl
pop
sbb
enter
xor
repnz
out
movsl
push
xchg
aam
mov
xor
mov
cmpsb
in
or
push
xchg
inc
test
xchg
ret
fstpt
les
push
mov
push
xchg
insl
dec
sbb
daa
mov
and
les
lea
add
cld
flds
sub
sub
jl
std
sti
jns
cs
lcall
loopne
dec
cld
pusha
jnp
jns
mov
sub
mov
ljmp
lret
cld
xchg
sub
jb
pushf
lods
loope
push
jb
push
imul
mov
test
mov
andb
cmpsb
test
and
out
jecxz
mov
mov
push
pop
xchg
pop
push
fdivs
adc
test
outsl
pop
idivl
rcr
jno
or
popf
mov
lods
insl
push
cmpsb
pop
int
je
inc
xlat
mov
xchg
imul
loop
or
negl
sbb
popa
dec
popf
push
inc
xchg
pushf
xor
inc
enter
cmp
arpl
dec
adc
sub
ficompl
adc
lea
pop
enter
jl
pop
fmull
hlt
mov
int3
mov
xchg
mov
mov
push
lock
jne
loope
inc
cmpsl
push
imul
pop
or
test
cltd
pop
gs
or
mov
mov
pusha
fistps
mov
test
and
push
pop
repz
push
popf
xchg
push
dec
or
xlat
pop
shll
lcall
or
sti
fmuls
xchg
shrb
sub
mov
stos
ds
orb
mov
jecxz
std
cmp
pop
out
or
in
in
out
add
add
out
fidivrl
repz
inc
dec
cmp
adc
mov
fidivrs
dec
pop
movsl
repnz
mov
add
ds
mov
inc
and
push
xlat
dec
loopne
mov
push
imul
mov
inc
mov
mov
lds
pop
movsl
cmpl
cmpsb
out
jl
and
adc
lds
arpl
cmp
ret
aaa
jno
in
rcr
sub
repz
repnz
push
enter
mov
mov
sbb
test
push
pop
iret
xor
aaa
adc
aas
or
inc
sbb
jl
add
test
es
adc
ljmp
mov
fnstsw
divb
xchg
add
movsb
outsl
fldenv
test
add
mov
pop
pop
lcall
in
int
xchg
stos
in
insl
bound
add
sbb
add
lret
ret
cmpsl
mov
inc
jnp
jmp
xchg
push
jge
mov
adc
inc
mov
xor
negb
mov
push
or
inc
mov
in
mov
pop
lds
and
dec
mov
cli
scas
or
arpl
sub
ds
push
dec
out
in
push
dec
xchg
fwait
lret
cmp
jg
ljmp
iret
jbe
loopne
dec
jbe
xchg
sbb
cmpb
stos
and
popf
dec
in
ret
cmp
pop
add
adc
add
pop
xchg
dec
fistpll
sbb
and
jmp
xchg
lcall
aaa
sahf
leave
insl
and
inc
mov
idivl
push
xor
imul
pop
in
mul
push
jl
in
jbe
jecxz
in
call
fadd
push
mov
adc
cwtl
mov
js
or
mov
xchg
pop
push
sti
shlb
ds
scas
push
pop
testl
sbb
outsb
ret
adc
mov
repz
loope
or
addr16
das
inc
jb
in
cwtl
sbb
test
push
pop
adc
inc
loop
push
shr
enter
pop
imul
dec
and
dec
daa
xchg
and
std
sub
mov
pop
xchg
cmpsl
push
push
add
out
cmp
xchg
pop
mov
add
loope
subb
imulb
jge
nop
dec
fbstp
jne
scas
not
ljmp
push
popa
sarl
nop
cmovnp
jp
icebp
test
mov
rclb
ficompl
mov
push
pusha
or
mov
adc
iret
push
mov
repz
gs
mov
or
sub
cmp
xor
scas
jp
pop
fistl
sub
aas
mov
mov
mull
dec
mov
xor
out
and
in
inc
mov
mov
push
pop
aad
fdivp
xchg
adc
pop
addr16
roll
push
add
mov
mov
pop
push
fdivrl
sahf
jnp
sti
stc
mov
xor
push
mov
or
cmpsb
je
sub
add
shr
pop
sub
xor
push
ficomps
lret
popf
xor
inc
lahf
enter
shlb
push
scas
inc
aas
mov
and
dec
and
xchg
add
rcrl
dec
arpl
stos
jg
pusha
hlt
inc
dec
js
xchg
cld
push
in
adc
add
ret
lock
cld
pop
fisttpl
and
jecxz
jge
and
movsb
ret
xchg
scas
std
cmp
inc
and
xor
enter
insb
inc
pusha
pop
int
pop
jbe
ja
xchg
or
lds
or
test
cmp
mov
enter
inc
jno
ss
xchg
bnd
test
pushf
shll
fnstenv
out
jp
aaa
fists
ds
pop
shll
lods
dec
je
or
jno
inc
xchg
sbbb
mov
and
ljmp
xchg
cmp
mov
xchg
mov
cmc
pushf
add
sahf
repz
pusha
mov
mov
loopne
orl
ret
fisttpl
xor
loope
int3
inc
inc
mov
lea
mov
sub
jmp
aaa
sbb
arpl
pop
or
mov
push
mov
insb
incl
aad
and
jnp
insl
out
fdivl
xchg
pop
stos
sbb
inc
movd
sarb
cmp
jae
xor
adc
aad
pop
or
inc
push
mov
push
dec
xor
lods
add
sbb
movsl
cltd
cli
mov
adc
out
loopne
inc
cmpl
mov
or
dec
ret
mov
mov
int3
pusha
dec
ds
fmul
gs
aad
movsl
repnz
repz
out
inc
hlt
popf
mov
imul
gs
inc
sbb
mov
movsb
call
fld
inc
push
insb
adc
pop
pop
scas
xchg
mov
idivb
cmp
das
sbb
jno
hlt
stc
fdivrs
mov
mov
sub
mov
ret
ret
repnz
mov
inc
loop
xchg
fstl
shr
test
in
lock
jnp
inc
loopne
or
sti
ja
mov
mov
icebp
add
rcrb
shll
jnp
mulb
pop
std
cwtl
inc
mov
out
adc
xchg
in
add
cli
leave
fsubs
jp
cmp
sub
pop
add
push
pop
and
push
enter
aaa
lods
and
mov
repz
roll
sbb
shl
mov
push
or
lock
mov
lock
sub
jl
mov
loopne
fsubl
mov
icebp
jecxz
mov
fs
and
jg
xchg
add
inc
sub
jl
test
sub
adc
cmpsl
push
add
mov
nop
push
add
jns
jo
and
pop
push
sub
and
add
sub
push
xchg
sub
mov
and
inc
or
pop
pusha
sbb
sahf
and
sahf
mov
aas
out
sahf
dec
jne
clc
push
int
fcoms
shlb
inc
sub
jmp
cltd
xor
out
imul
test
cmp
xor
ja
seto
pop
mov
mov
lods
data16
sbb
out
out
and
fwait
mov
jb
mov
movsl
pop
mov
ss
int3
xor
pop
adc
and
cltd
mov
fyl2xp1
inc
shll
xchg
mov
add
cmp
inc
and
or
cli
test
adc
or
push
inc
lods
sbb
bound
and
fidivs
xchg
lahf
lcall
and
lea
addr16
ds
or
mov
rclb
movsb
and
mov
adc
xor
add
cmp
lods
cmp
mov
push
fwait
pusha
cmpsb
lock
mov
cmp
dec
jg
in
pop
test
ror
mov
and
add
bnd
jo
out
dec
bound
or
js
stc
add
lahf
fidivl
push
iret
rcll
xor
enter
xlat
cltd
dec
sbb
mov
inc
xor
xchg
shl
test
mov
cmpsb
repz
icebp
aas
mov
imul
loope
inc
xchg
mov
and
mov
push
outsb
or
xchg
jecxz
xor
inc
daa
fildll
pusha
filds
inc
xor
loop
cmp
out
push
dec
orb
cmp
cmpb
mov
inc
out
sar
dec
imul
leave
sahf
cld
std
or
pop
or
imul
cmpsl
and
xor
mov
adc
inc
sahf
sub
std
adc
pop
cwtl
loope
and
mov
fcom
out
mov
push
in
repz
dec
cli
shlb
inc
and
mov
push
rcll
shrl
xor
orb
mov
sbb
out
clc
pop
subb
mov
ss
jge
les
cmpsl
or
mov
add
idiv
cmp
inc
pop
aam
sub
and
cmpsl
lock
push
addb
rcr
pushl
jle
sub
outsb
and
push
js
xchg
pop
dec
popa
jb
push
or
push
and
lods
fdivl
movsb
inc
inc
dec
mov
daa
or
int
and
jo
jns
rcl
lcall
in
xchg
push
mov
xchg
je
loopne
push
pop
mov
fwait
cld
arpl
xchg
jmp
mov
call
arpl
mov
test
fistl
or
jg
cmp
dec
jo
adc
dec
pop
in
mov
pusha
iret
inc
pop
les
pusha
clc
in
xchg
pop
inc
mov
std
dec
cwtl
xor
mov
xchg
xor
mov
lea
mov
sub
int
aas
icebp
ret
imul
das
xchg
push
dec
jo
mov
add
pop
or
xchg
push
adc
push
sbb
sub
xor
test
out
dec
ret
mov
mov
out
fbstp
test
dec
sbb
fldl
or
incb
xor
pop
mov
inc
out
pusha
ds
xchg
dec
add
pop
or
dec
push
out
lahf
jno
mov
jbe
inc
xchg
inc
or
ljmp
sub
sbbb
mov
adc
or
ljmp
in
pushf
pop
xor
cwtl
mov
sub
mov
fwait
jg
cwtl
leave
test
aam
cwtl
into
inc
push
dec
outsb
mov
es
bound
inc
push
inc
and
lock
add
fstps
lods
clc
loopne
dec
fs
fmulp
sbb
xchg
aas
in
xchg
test
out
fiadds
cmp
scas
test
mov
inc
rcrl
adc
xchg
popa
sub
inc
mov
out
pop
cmp
mov
les
sahf
cltd
insb
and
dec
mov
cwtl
fldl2e
popf
sbb
mov
insb
xchg
or
arpl
xlat
cmp
cmp
mov
lret
jo
sbb
loopw
jae
stos
add
sub
mov
cmp
xor
or
clc
jp
in
std
push
sbb
push
ss
mov
fs
jno
jbe
jno
jp
dec
jge
mov
mov
pushf
ja
fstps
mov
enter
push
xlat
cwtl
hlt
mov
or
sbb
arpl
in
xor
in
gs
aad
mov
bnd
sbb
scas
mov
sub
outsl
flds
pop
cmp
sbb
mov
ljmp
inc
pop
jo
and
idivl
fisubrl
pop
fwait
mov
pushf
fucomi
mov
es
add
iret
stc
clc
xor
cmc
test
movsb
imul
outsb
xor
enter
cmpsl
out
add
cmp
cmpsl
gs
dec
sbb
cmp
lcall
ds
bnd
jp
fs
aaa
jbe
push
scas
push
jl
mov
orb
test
iret
clc
sbb
dec
nop
mov
das
ljmp
push
into
loop
aaa
or
and
pop
mov
jecxz
pushf
add
out
out
jne
insl
mov
into
dec
es
scas
js
in
lea
or
hlt
add
adc
lahf
cltd
int
inc
jecxz
mov
insb
dec
xlat
xorl
adc
aad
mov
test
add
push
loopne
mov
xor
add
mov
cli
shl
push
cs
sub
lahf
in
pop
mov
xchg
xchg
mov
hlt
and
cmpsb
cltd
adc
fwait
pop
push
fnstcw
xlat
cs
add
mov
mov
popf
and
mov
xlat
int
dec
mov
mov
push
xchg
mov
sub
insl
mov
push
sti
orl
and
or
repnz
addr16
mov
in
pop
push
mov
mov
dec
cmc
sti
cmp
rcrl
pusha
mov
in
jb
xor
lret
inc
icebp
mov
sub
or
push
and
jp
adc
jecxz
dec
xor
loope
shrb
mov
pop
add
sbb
jge
stos
ret
add
adc
sbb
jp
mov
or
mov
jo
mov
pusha
andb
daa
clc
scas
call
cmp
add
jo
mov
push
mov
out
inc
push
clc
dec
test
cs
and
f2xm1
rcll
mov
aad
mov
insl
push
xor
xchg
sub
pop
push
pop
and
mov
xor
subb
aas
jmp
pop
and
mov
cmpsb
addr16
std
cs
idivl
inc
inc
mov
add
leave
inc
loopne
or
loopne
dec
push
jle
enter
int
adc
test
aam
xchg
test
jecxz
fmul
add
scas
loope
mov
push
popa
or
add
ss
mov
loop
popf
and
cmp
out
xor
out
jnp
mov
leave
and
jle
outsl
push
push
mov
hlt
mov
pop
inc
xchg
lods
jnp
inc
xchg
mov
repnz
jb
adc
sbb
pop
insb
cltd
inc
cli
rclw
jb
imul
xchg
icebp
rorl
icebp
jns
sbb
scas
xchg
pusha
jle
repz
sub
push
push
dec
sbb
jb
clc
pop
repz
jge
mov
adc
push
rolb
in
inc
dec
clc
aas
xchg
enter
cmc
lds
mov
sub
push
xor
pop
pop
imul
push
cmp
dec
jge
shrl
inc
adc
mov
mov
cmp
push
in
das
adc
sub
xor
mov
in
push
rcrb
cmpsb
pop
cli
insb
adc
cmpsl
sbb
outsl
sbb
lret
mov
js
ret
jl
fxch
fcoml
sbb
inc
cs
popa
mov
call
aaa
cmpsl
pop
jmp
dec
mov
mov
inc
cmpb
mov
cmp
add
mov
sbb
sbb
in
xchg
fisttpl
dec
mov
dec
test
push
test
popa
pop
or
repnz
cmpsl
mov
out
dec
imul
test
and
xlat
int3
bound
fxch
leave
cmpsl
repz
scas
mov
inc
and
add
or
inc
insb
dec
mov
lcall
jmp
dec
pop
inc
test
mov
repz
rcrl
leave
pushf
testl
popf
imul
hlt
sbb
xor
xchg
mov
hlt
sbb
adc
outsl
and
out
cmp
xor
fsubrl
addr16
xchg
arpl
je
inc
xchg
push
in
loop
mov
xchg
mov
aam
jnp
or
inc
add
dec
sbb
adc
ret
adc
add
shrl
and
clc
xor
ljmp
movsb
ret
roll
fldenv
jmp
addb
dec
lods
fildl
aad
cltd
incb
inc
or
test
pop
jno
jb
pop
mov
mov
push
jbe
cmp
test
ja
mov
out
rcr
je
push
add
push
inc
shlb
mov
ljmp
lret
cltd
jbe
dec
cmp
scas
int
pop
ss
xchg
xchg
jno
or
push
xchg
arpl
adc
imul
and
or
fs
stos
mov
mov
scas
xor
jno
fildl
sub
pop
cmp
mov
xchg
stos
sub
xor
sub
mov
in
test
cmp
fcmovb
cmp
or
pop
ss
mov
mov
jne
notrack
loopne
loope
mov
out
adc
jmp
jae
stos
mov
insl
mov
or
xor
xor
add
cmp
mov
outsb
call
lds
and
xchg
gs
into
fidivrl
push
push
and
sub
add
lods
lock
mov
inc
pop
iret
xchg
inc
lret
mov
js
ja
sub
je
int
jge
xor
jg
sbbb
push
xchg
inc
imul
cli
lret
and
inc
push
inc
and
mov
cmp
rorl
iret
xchg
nop
fdivrs
adc
pop
xor
sbb
test
stos
sub
icebp
mov
repz
xlat
cli
iret
loop
inc
fdivl
add
push
jmp
bound
xchg
xchg
or
mov
pop
std
lds
jge
mov
or
or
arpl
call
mov
je
pop
movsb
imul
pushf
pop
mov
jbe
jp
nop
jb
fchs
mov
mov
jge
mov
sbb
pop
mov
pushf
pushf
shl
ret
in
adc
xchg
in
xor
jbe
cli
jg
xchg
scas
dec
push
sbb
or
xchg
rorl
add
xchg
cltd
xchg
mov
mov
adc
inc
dec
pushf
dec
pop
jle
xor
pop
stc
subb
mov
dec
dec
cs
lret
hlt
mov
cmpsb
lds
inc
vmovdqu
mov
jnp
dec
mov
and
pop
icebp
xor
test
add
lcall
iret
stos
fadds
pop
push
out
push
mov
add
cmp
jl
call
mov
xor
and
in
lcall
xchg
ljmp
and
jge
and
fildl
sub
sub
shlb
call
mov
jbe
mov
lods
lods
dec
dec
lcall
data16
loop
aad
shll
cmpsl
jmp
rcll
ja
dec
dec
inc
push
xor
data16
lret
insl
add
push
cmp
push
faddl
data16
das
sbb
incl
sahf
addl
push
out
xchg
ja
cmp
dec
xchg
aas
push
adc
pop
xlat
sbb
ljmp
cmpsl
test
loope
xchg
rclb
inc
dec
cmp
rcll
mov
aaa
negb
xor
push
xlat
push
scas
xchg
xlat
mov
adc
popf
or
lods
pop
cmp
iret
mov
xchg
xchg
sbb
inc
cmpsb
inc
push
ds
js
rol
iret
mov
insl
ficompl
imul
clc
jg
push
mov
push
test
orl
and
or
push
sbb
or
and
call
and
mov
push
popf
sti
dec
sbb
outsb
dec
push
xchg
dec
lret
les
iret
les
repz
cmp
and
mov
or
pop
rol
por
shr
xchg
push
lret
stos
shl
or
sbb
jle
insl
push
loopne
sub
dec
loopne
shld
mov
xchg
adc
stos
mov
jnp
stc
ret
insl
mov
call
push
mov
shl
sbb
mov
add
mov
ficompl
out
loope
andl
out
bound
jns
mov
rcpps
push
push
mov
pop
mov
in
jecxz
xor
xchg
mov
sbb
xchg
push
adcb
lods
outsl
out
rcrb
adc
mov
mov
scas
data16
mov
scas
pop
je
or
js
ret
out
sarl
mov
stos
int3
loope
adc
je
adc
sub
mov
mov
lock
cmc
pop
add
add
popa
jg
adc
push
dec
lret
in
loop
push
add
daa
in
sbb
test
mov
mov
pusha
out
inc
sbb
cli
and
sahf
push
lret
or
fwait
xor
daa
add
imul
ds
cmp
xchg
push
cmp
jae
sbb
adc
leave
in
cmc
out
fisttpl
ja
fisubrl
or
popa
sbb
ss
ja
pushf
or
popf
dec
dec
xor
push
out
lock
jbe
cwtl
dec
and
mov
mov
je
bound
pop
fwait
cmp
mov
mov
inc
adc
test
xchg
add
pop
test
cld
jno
xchg
cltd
cmp
js
pushf
xchg
cwtl
inc
std
sub
push
adc
mov
sti
cmp
lret
sbb
ja
sti
cmpsb
out
das
sti
cltd
shlb
sahf
addr16
sbb
out
mov
ret
lret
mov
fdivr
das
jmp
repnz
cmp
sbb
ss
pop
movsl
push
cld
std
imul
sub
sahf
out
rcll
fiadds
jbe
add
or
in
repnz
scas
movsb
cld
rol
cli
push
loop
dec
adc
mov
sbb
popf
or
mov
mov
daa
stos
repnz
ja
les
movsl
dec
mov
pop
shll
fbstp
in
jnp
or
push
je
sbb
push
mov
shrl
sub
lods
add
mov
lea
jae
adc
popfw
shrb
mov
lret
sbb
jnp
in
cmpb
jl
add
jae
pop
mov
orl
imul
xchg
fstpt
addr16
and
adc
dec
daa
lods
mov
testl
adc
cs
mov
sub
inc
leave
adc
cmc
sti
or
xlat
or
fiaddl
insl
notl
test
stos
jb
clc
out
rcll
into
icebp
loope
adc
jae
pop
icebp
test
aad
inc
mov
push
xchg
cld
in
scas
ret
dec
fnstenv
sub
aam
popf
dec
or
and
and
adc
ret
dec
mov
js
mov
ret
mov
lahf
pop
adc
loop
in
xor
jns
xchg
cmpsl
js
xchg
icebp
loop
push
jb
outsb
mov
push
jl
lret
adc
inc
pop
fistpl
push
test
rcr
mov
test
xsave
adc
push
popl
dec
out
add
dec
out
adc
ss
cmp
sbb
xchg
rcl
in
icebp
mov
pminsw
leave
mov
fmull
bound
push
stos
jmp
cmpl
add
mov
test
pop
push
in
or
cmpsb
lock
jl
test
inc
mov
scas
movsl
icebp
faddl
or
movsb
je
jae
add
and
hlt
popf
repz
adc
pop
add
scas
mov
fucomp
xchg
adcl
sub
mov
popf
mov
filds
xor
inc
in
fadds
and
xor
xor
clc
xchg
testb
fadds
jge
push
jecxz
sub
insl
xchg
dec
xchg
mov
pushf
hlt
and
ja
out
in
daa
sbb
dec
push
dec
gs
sub
jno
sarb
add
pop
push
jp
and
mov
dec
daa
call
lock
sbb
das
orl
stc
mov
out
fistpll
int
sarb
arpl
jecxz
fdivs
je
imul
pusha
ret
enter
lret
inc
sub
mov
mov
inc
mov
jns
outsl
pop
lcall
pushf
es
lock
pop
ja
mov
std
loopne
jnp
dec
mov
lock
cmp
cmp
lods
mov
hlt
pop
pop
les
fidivs
outsb
jb
mov
inc
test
dec
dec
add
cmpsb
xchg
shrl
lcall
mov
sti
lret
and
mov
ret
push
inc
cmc
add
jae
lret
jbe
jmp
dec
cmp
popa
dec
testb
ja
call
and
mov
push
add
sbb
cmp
es
out
loop
repnz
bound
sbb
jnp
dec
sbb
lea
pushf
mov
adcl
fsubs
inc
cmp
xchg
sub
test
adc
fstps
loop
inc
jmp
sub
add
cwtl
fsub
mov
stos
xor
cwtl
inc
push
pop
or
pushf
jmp
inc
punpckhwd
xchg
mov
das
jo
dec
jecxz
leave
rclb
fsubr
arpl
mov
out
cmp
lds
shll
cmp
push
rorb
mov
sarb
mov
xor
push
sbb
in
ss
daa
push
popf
or
mov
loope
mov
dec
xchg
mov
jp
push
jnp
mov
inc
in
mov
lret
push
fsubp
push
aam
mov
and
or
js
jge
lea
mov
mov
ret
and
mov
adc
incb
mov
test
inc
lret
and
vxorps
rol
aam
mov
aam
addb
popa
sbb
push
ja
and
call
arpl
jnp
mov
dec
sub
pop
movsl
push
and
mov
addb
xor
into
mov
test
cltd
xchg
es
fcomi
mov
jb
std
sub
mov
outsb
icebp
pop
out
mov
repnz
xor
lods
pop
inc
fs
xor
xor
pushf
dec
add
cli
sub
int
sub
pop
cmpsb
aam
lcall
fistpll
push
jl
cmp
out
pop
jnp
sbb
jns
in
and
ret
daa
inc
mov
lods
xchg
mov
jecxz
data16
push
fidivrs
mov
adc
mov
pop
jl
jge
in
mov
in
adc
loop
daa
dec
dec
dec
lcall
in
mov
cmpl
in
iret
dec
push
jnp
mov
adc
les
lock
fsubrl
jle
jbe
push
cmpsl
cs
xchg
cli
add
out
data16
and
inc
add
daa
xor
push
scas
add
sub
inc
pop
add
mov
test
or
lret
mov
adc
fdivl
into
jle
jle
mov
rcll
gs
outsb
test
ljmp
cmp
pusha
lods
pop
movsb
jne
in
jl
cmp
notl
shrb
adc
rcll
xchg
insl
stos
cmp
pop
push
scas
rorb
cld
leave
or
add
push
lds
orb
adc
int3
xor
mov
rcrb
xor
jp
in
push
mov
jle
mov
shlb
mov
stos
sub
xchg
dec
mov
and
fisubs
pop
outsb
xchg
or
shlb
sub
jecxz
cmp
cs
xchg
out
push
loop
mov
sti
cmpsl
lds
and
lret
out
mov
push
inc
cmp
lret
mov
xor
lret
cmp
gs
mov
orl
enter
dec
dec
aad
cmp
test
jo
pop
push
lahf
out
sub
sar
add
loopne
mov
xlat
sbb
movsb
imull
pop
fucom
outsb
mov
stos
fidivrl
xor
add
and
fldenv
xor
adc
test
xchg
fisubrs
in
lock
xchg
bound
dec
jbe
add
aas
shll
int
stos
out
sbb
sti
addr16
xchg
lcall
push
lods
sub
cmc
and
mov
gs
push
lret
mov
fcompl
out
fs
push
adc
int3
loop
dec
xchg
and
adc
and
or
mov
insb
subl
mov
rclb
jge
int3
into
pop
test
push
icebp
leave
mov
push
jb
mov
jb
test
loope
mov
je
js
aad
mov
xorl
add
mov
push
push
xchg
das
jp
lea
nop
xlat
mov
xchg
mov
in
mov
cmp
push
data16
pusha
lock
add
xchg
mov
nop
dec
insb
push
aam
mov
push
and
cmp
xchg
mov
add
js
test
pop
iret
stc
lcall
xchg
cwtl
jbe
xchg
mov
sub
adc
or
aaa
pop
jmp
test
mov
sbb
leave
jno
mov
lret
xchg
xchg
or
shlb
rcll
shr
pop
rclb
mov
cmp
in
mov
out
push
mov
movsb
stos
cmp
xchg
fcmovb
mov
or
cmpsb
dec
sub
sub
mov
mov
inc
rorl
cld
pop
aas
call
sub
or
or
nop
pop
sahf
iret
mov
js
adc
cmpsl
ds
dec
shrb
pushf
or
or
mov
xor
ret
and
popf
dec
mov
lahf
inc
mov
push
loopne
add
xchg
stc
ja
fmull
push
mov
inc
mov
icebp
test
push
inc
push
cmp
push
sub
mov
iret
xor
cmpsb
or
or
mov
scas
pop
aaa
mov
clc
sub
movsb
iret
lcall
adc
loope
pusha
jp
or
sub
nop
dec
push
lock
rcl
xor
into
loope
ja
mov
ja
mov
sbb
into
lret
fsts
jle
lods
jae,pn
dec
lods
shll
sbb
iret
imul
enter
sub
cmpsb
jl
xor
xchg
and
les
imul
and
jl,pn
sbb
test
lret
push
adc
mov
cmp
adc
aas
mov
sbb
cmp
push
rcrl
outsl
mov
add
xchg
shl
int3
sar
mov
out
leave
lds
das
add
sbb
ds
adc
lret
insl
out
jo
sub
nop
daa
mov
mov
insl
sbb
jno
jbe
popf
or
lea
push
jmp
dec
popf
sbb
mov
xor
push
jns
in
add
mov
arpl
dec
jne
cmp
pop
pusha
xor
mov
pop
in
sub
ja
xchg
push
fwait
dec
enter
outsl
xchg
dec
or
cltd
sub
fwait
mov
cmp
or
xchg
in
nop
cmpsb
jns
sbb
push
jno
std
sahf
push
lcall
jae
ljmp
push
fcmovnbe
adc
aas
add
mov
pop
lahf
xchg
push
lret
pop
pushf
stc
xchg
lods
adc
orl
scas
push
sahf
jecxz
xchg
pop
push
out
and
dec
movsb
inc
push
cmp
clc
pop
xchg
mov
cs
dec
ret
add
xor
andb
mov
lret
nop
rolb
clc
pusha
inc
cmpsb
fsub
popa
imul
sbb
add
or
in
push
mov
ja
cmpsb
les
pop
pop
dec
jbe
ret
mov
pop
out
jecxz
mov
dec
dec
cmpsl
xchg
mov
add
xlat
adc
out
repz
adc
mov
hlt
fmuls
push
adc
cmp
cltd
fs
jg
adc
fstpt
mov
rolb
aad
jb
jle
and
mov
jbe
sub
mov
in
or
std
xor
pop
inc
inc
scas
inc
movsb
mov
xchg
sbb
test
mov
xchg
and
dec
push
fstp
int3
mov
sbb
or
jb
std
mov
gs
sub
jle
sbb
dec
jbe
lea
inc
cmp
add
rcll
mov
scas
jae
xchg
jnp
jb
inc
hlt
adc
cmp
out
std
dec
xor
and
add
les
mov
aaa
andb
mov
cmp
or
inc
iret
jb
push
cmpsb
gs
adc
outsl
insb
inc
cwtl
sahf
jecxz
fisttps
add
dec
xchg
stc
xchg
cmpsb
test
pop
xor
int
adc
cli
ja
sub
and
loopne
pop
push
adc
xchg
daa
iret
xchg
into
mov
arpl
mov
and
movsb
mov
jns
lcall
inc
push
xor
and
jg
xor
test
add
xchg
mulb
fs
stc
ds
adc
stc
cmp
in
adc
movsb
bound
jge
adc
sub
out
mov
jb
pop
pop
sbb
or
mov
outsl
idivb
mov
or
xchg
inc
inc
cmp
push
repz
fdivrs
jns
push
popf
xchg
cmpsb
add
cli
inc
out
inc
lea
mov
ficoms
ficompl
lahf
in
pop
outsl
sti
and
repnz
pop
aam
inc
push
loop
xor
add
push
push
mull
ret
xor
and
jno
test
lods
sub
jb
jnp
imul
enter
mov
int3
pop
dec
lahf
lods
sbb
add
lds
xor
mov
les
lcall
mov
sbb
pop
pop
outsb
push
aad
xchg
out
jnp
loopne
or
test
push
dec
out
and
mov
adc
jp
mov
jns,pt
mov
movsb
or
adc
daa
rcrl
sub
fmull
nop
xor
push
iret
sti
fwait
push
call
roll
dec
pop
xorb
test
sbb
sar
sbb
sbb
pop
dec
and
out
popf
stos
andl
sbb
mov
loopne
aas
push
aam
or
iret
mov
add
pop
pop
xlat
cmp
addl
mov
or
pop
mov
mov
pop
jo
in
fld1
sbb
sbb
movsb
hlt
push
cs
mov
push
dec
xor
cld
stos
sti
mov
dec
push
xorl
hlt
mov
stos
mov
repz
sub
dec
ja
test
mov
push
testl
or
shll
leave
push
mov
insl
in
fcompl
leave
jle
fs
stos
jae
testl
mov
jecxz
push
mov
dec
xor
adc
lods
aas
cmpsb
jge
mov
in
fistl
sub
cs
xorb
cmpsl
testl
mov
lds
xor
xchg
es
mov
data16
aas
adc
ds
jb
cmp
mov
dec
cmc
aas
mov
or
sbb
adc
jp
dec
sbb
sbb
out
cmp
xchg
xchg
stos
lret
add
mov
sbb
pop
dec
mov
push
ljmp
mov
das
es
jbe
imul
pop
mov
mov
sbb
adc
in
or
into
fcompl
and
int3
into
lcall
fsubrl
cs
cwtl
leave
sbb
shll
cmp
jmp
hlt
xor
insb
xchg
inc
fmuls
iret
pop
jo
dec
inc
jnp
dec
jae
aad
adc
dec
and
pop
jmp
aaa
jmp
inc
cmp
sub
sub
xchg
pinsrw
adc
lret
movsb
lea
jge
in
xchg
mov
rcll
adc
sbb
test
adc
cmc
es
xor
xlat
test
inc
out
push
sbb
sub
fists
stos
mov
cwtl
aam
cmpsb
add
mov
cmp
xor
xchg
das
mov
mov
xor
in
addl
rorb
pop
push
out
fisubs
icebp
fisttps
and
mov
movsb
xor
arpl
repz
sbb
mov
pop
pop
out
andps
ret
xor
sbb
mov
mov
dec
in
add
test
cmc
lock
or
adc
sbb
pop
aaa
cli
and
aas
addl
and
rcll
cmpsl
pop
xchg
sub
pop
pop
mov
add
cwtl
adc
gs
int3
dec
inc
xor
icebp
mov
jno
dec
push
pop
mov
loopne
iret
insl
mov
or
cwtl
pop
cmpsb
push
cmc
jns
cmpsb
mov
frstor
and
push
sahf
ret
into
cltd
popf
push
rcll
mov
arpl
test
jnp
xchg
inc
xchg
jno
bound
aas
enter
loopne
mov
ljmp
inc
jnp
dec
jmp
lcall
cli
mov
mov
les
xchg
pushf
rcl
mov
repz
or
mov
pop
call
lods
andl
sub
mov
popa
mov
xchg
pushf
mov
or
imul
stc
movsb
lret
sub
ucomiss
add
in
push
imul
aaa
icebp
inc
mov
mov
jo
mov
out
imul
xchg
out
ss
out
pop
push
mov
push
inc
insl
fisttpll
subl
nop
popf
fs
pop
pop
cwtl
and
mov
jmp
icebp
mov
aaa
add
adc
mov
adc
sub
idivb
pop
push
jmp
adcl
ror
or
push
sar
mov
aas
cli
mov
jmp
mov
shll
lods
cmp
imul
lcall
scas
push
or
push
into
mov
cmp
sbb
test
icebp
jae
add
pop
jne
pop
adc
frstor
and
nop
imulw
clc
xchg
dec
fistl
and
xchg
xchg
xchg
adc
das
stc
fs
rolb
pop
jl
xor
adc
xchg
mov
sub
lods
inc
push
pop
icebp
sub
jnp
dec
dec
cld
das
cmp
ja
adc
cs
add
clc
fdivs
fsubrl
lock
mov
mov
adc
pop
push
push
mov
sub
es
sub
sti
jecxz
cmp
push
fistps
je
lahf
ljmp
mov
rorb
es
out
sub
mov
xorl
rorl
es
fxch
pop
fwait
add
cmp
or
das
jmp
fnstsw
into
movsl
jp
jns
sub
test
test
movsl
sbb
test
outsl
jmp
insb
les
leave
push
in
jbe
xor
add
adc
das
out
xchg
fldl
data16
inc
mov
sti
loop
inc
popa
inc
aad
test
jmp
out
mov
mov
inc
sbb
mov
inc
jge
out
pop
jecxz
or
cld
mov
mov
sti
lea
in
pop
das
cmp
loopne
mov
inc
mov
jne
aas
pusha
sahf
sbbb
lret
faddl
sub
mov
xor
mov
adc
in
jae
sbb
mov
std
xchg
rcrb
test
sub
pop
or
push
gs
in
inc
cmp
push
push
cli
fsubs
test
nop
adc
xor
adc
out
pop
outsl
clc
xchg
sub
mov
popl
lret
jae
decb
cmpsb
andl
cmpl
inc
xchg
lret
jmp
iret
bound
add
push
outsl
fidivs
mov
loope
xchg
test
jae
cmp
mov
sti
xchg
cltd
inc
and
popf
inc
adc
cld
outsb
cmpsl
in
inc
inc
and
xchg
ret
movsl
jo
in
jo
sub
ffreep
mov
add
xchg
mov
outsl
adc
adc
into
mov
cwtd
sbb
push
push
ret
sub
daa
mov
and
push
fwait
push
jbe,pt
in
daa
cld
test
lods
loopne
mov
add
mov
mov
int3
or
cltd
cltd
mov
mov
out
add
cli
popf
sub
push
dec
mov
in
rol
sub
aam
pop
out
nop
popf
jo
jbe
pop
js
mov
gs
pop
data16
inc
sub
lret
pop
movsb
rclb
xchg
lock
ret
jae
ja
jbe
mov
shlb
sbb
cmp
inc
aam
test
push
xor
push
in
addr16
push
push
cmp
inc
ret
jecxz
jns
inc
call
hlt
sub
pop
xchg
sbb
popf
cld
es
je
xor
ljmp
and
movsb
adc
and
pop
inc
scas
and
jo
ds
mov
icebp
es
inc
jb
fdivs
cmp
movsl
inc
jmp
fstl
fsubrl
stos
fsubrl
inc
arpl
dec
aam
shl
jp
fnstsw
push
outsb
mov
psubusw
or
adc
pop
or
ftst
lahf
in
addr16
mov
dec
push
jne
mov
into
xor
imul
out
ret
mov
jecxz
fdivrl
add
push
test
es
xor
repz
xchg
shll
sbb
rolb
aaa
pop
jo
repnz
adc
fmuls
sub
sbb
adc
adc
test
sbb
dec
lods
dec
xchg
inc
mov
adc
push
inc
imul
js
cwtl
inc
movsl
loop
fwait
neg
dec
packssdw
mov
loope
stos
add
pop
mov
cld
out
inc
jmp
mov
test
insl
lahf
fisubrs
sub
sbb
inc
push
shr
adc
decl
or
inc
add
mov
mov
rcl
xor
and
data16
lods
movsl
stos
fcompl
andl
sub
fadd
jecxz
sbb
push
ret
sbb
or
adcl
cmp
icebp
lock
sbb
or
stos
into
mov
sub
dec
shl
insl
js
adc
pop
and
xchg
aam
inc
pop
mov
arpl
test
lcall
pop
and
jbe
jp
pop
mov
dec
sar
pop
push
mov
out
adc
adc
fwait
sbb
xor
dec
bound
stc
loopne,pt
clc
jno
xchg
adc
jecxz
fcomps
cmc
mov
pop
jmp
sahf
add
nop
sbb
xchg
inc
lods
pop
inc
aam
dec
cmp
sub
mov
les
sbb
lret
push
adc
fcmovnu
jo
xlat
dec
mov
pop
adc
sbb
fldenv
xchg
movsl
ret
int
and
and
leave
iret
rolb
xchg
ss
and
pop
pop
jnp
fadds
adcb
add
pop
xor
fildl
rolb
jg
sbb
lcall
adc
mov
adc
pop
mov
mov
insl
jae
jae
mov
std
adc
div
pop
pop
stc
cmp
mov
rcll
jo
je
fistl
sub
in
fwait
xor
mov
push
adc
xchg
outsb
cmp
rolb
out
and
je
testb
jge
sarb
dec
mov
es
les
in
ds
inc
push
push
sbb
jl
lods
xor
mov
cmp
sbb
xor
rclb
mov
sbb
mov
mov
inc
jbe
push
test
xor
out
gs
sbb
ljmp
mov
jbe
lret
mov
dec
mov
cli
mov
sbb
sbbb
xchg
nop
jmp
rorb
pop
jg
ja
sub
cli
nop
es
adc
fdivs
and
mov
jns
sbb
mov
testl
sbb
rol
int3
nop
in
jp
fisubrs
cs
pop
lahf
sub
push
test
out
sbbb
idivl
sub
cmp
fdivr
jo
jae
out
xchg
lret
mov
and
mov
subl
mov
cmc
xchg
gs
add
jo
jb
je
lcall
lcall
cmpsl
jp
rcll
push
jo
pop
mov
cmp
fsubrs
mov
pop
stos
lock
jle
lods
dec
and
out
in
xchg
subb
int3
xor
dec
dec
test
xor
gs
push
xchg
inc
subl
loope
dec
sahf
sbb
and
push
movsb
dec
xchg
cmp
mov
movsl
daa
cmpsl
repnz
xchg
sub
enter
jmp
das
lods
pushf
xlat
int
jge
ljmp
mov
ljmp
mov
mov
jmp
and
mov
arpl
pop
mov
pop
lea
in
mov
mov
mov
xor
sarl
and
lock
jg
incb
repnz
es
pop
mov
es
adc
cltd
jp
jb
ret
dec
fsubr
cmp
test
mov
inc
in
jno
push
andb
xlat
leave
pop
fisubs
fnstcw
push
pop
dec
flds
incl
cwtl
sahf
fldl
shlb
aaa
inc
lret
xchg
jg
xchg
jo
dec
ja
dec
cmp
dec
sbb
sub
stc
rcl
mov
scas
push
aam
xchg
mov
or
dec
test
mov
pop
sti
pop
call
fstps
adc
add
call
mov
fcmovne
inc
pop
shrl
js
sahf
jns
scas
jbe
xchg
popf
pop
iret
pop
pop
mov
clc
fisubl
fwait
dec
jmp
jo
sbb
fwait
movsb
loope
shl
insb
stos
inc
test
out
cltd
sub
push
inc
jb
sti
adc
enter
push
pop
jnp
pop
inc
pop
lock
cwtl
mov
xchg
shl
sbb
and
inc
push
push
mov
adc
fstpl
fidivs
jbe
adc
mov
adc
js
mov
push
jb
lock
xor
pop
divb
loopne
jb
pushf
mov
sub
jns
dec
cltd
push
test
mov
rolb
stc
jns
ret
jecxz
imul
aad
repnz
dec
arpl
xchg
xor
aas
and
inc
movl
mov
and
sbb
ja
nop
popl
inc
inc
aas
sbb
outsb
inc
rorl
push
js
shll
dec
pop
dec
dec
pop
repz
bound
dec
addr16
ljmp
daa
or
mov
pusha
push
xchg
lret
or
xchg
das
loop
aam
lret
mov
mov
insl
dec
add
sub
pushf
dec
outsl
jns
sbb
xor
pop
fsubrl
adc
loop
push
xchg
cmc
mov
stc
pop
int
lret
movb
cmp
or
sbb
cmpsb
icebp
mov
xchg
testb
dec
dec
push
push
xchg
in
adc
xor
mov
out
and
pop
sub
and
out
fsubp
shll
add
std
xchg
movsb
gs
jns
decl
ja
push
lret
bound
add
fsubs
cmpl
push
addl
jb
in
outsl
push
aad
dec
test
sub
mov
mov
ss
push
test
cmpsb
movsb
push
rcl
mov
adc
into
sbb
stc
ljmp
into
out
mov
jns
adc
push
jmp
mov
cmp
adc
adcl
scas
sbb
in
insl
sub
mov
push
mov
or
std
cmp
push
fldln2
add
dec
nop
sub
mov
sbb
loope
mov
jp
lock
mov
mov
out
jg
cmpsl
adc
xchg
dec
add
movsl
scas
aas
add
pop
inc
push
dec
popf
mov
pop
inc
mov
inc
cli
scas
vpexpandb
insl
fimull
jecxz
inc
mov
sub
mov
arpl
andb
mov
fdivr
mov
jg
inc
pop
je
fistpl
fdivrp
sbb
push
lret
xlat
cmp
setp
mov
shlb
js
xor
aad
sub
rol
push
insb
adc
or
cmpsl
cmp
mov
cmp
movsb
pop
push
or
insl
inc
dec
ljmp
adc
mov
push
mov
adc
repz
mov
sti
clc
divb
out
cltd
inc
popa
shrb
cs
pop
and
mov
inc
dec
cld
jne
cwtl
insl
outsl
mov
xor
repz
sbb
or
or
push
and
lcall
dec
mov
je
add
mov
test
mov
sub
inc
rcrb
mov
fldt
rclb
dec
pop
inc
fsts
fmull
mov
push
pop
mov
dec
das
in
mov
pop
add
icebp
pop
jmp
xchg
push
pop
inc
cmpsl
inc
cmp
cmp
push
cs
jnp
and
pop
jno
mov
pop
stos
cmp
arpl
xchg
mov
test
mov
push
dec
mov
fwait
add
inc
inc
xchg
test
mov
out
dec
clc
mov
hlt
lret
in
rsm
dec
xchg
mov
jg
int3
jo
pop
adc
cmc
mov
int3
adc
jo
nop
lock
sbb
xchg
testl
sub
push
das
insb
insl
jl
movsl
fadd
xor
jge
mov
mov
jno
jo
or
push
out
adc
pusha
pop
adc
pushf
xchg
jge
stc
sbb
loopne
out
sbbl
push
jmp
fcmove
lret
cs
ror
jle
in
push
sbb
in
int3
xchg
xor
movsl
adc
loopne
pop
push
sub
cmc
mov
repnz
cmp
xchg
sarb
fisttps
mov
mul
jmp
inc
daa
push
test
shrl
int
pop
pop
pop
les
or
ret
and
sti
outsl
pop
push
fcomps
int3
mov
sbb
sub
and
and
push
call
xchg
mov
sbb
mov
adc
push
inc
adc
jecxz
es
jns
gs
jmp
cmp
push
inc
push
push
sbb
sbb
ja
cmp
movhps
push
leave
cmp
fsubl
cmp
dec
loopne
dec
mov
cmp
add
xlat
lods
dec
push
cltd
pop
add
sub
popf
cmp
sub
lcall
sbb
pop
out
fs
imul
insb
fisubrs
xchg
xchg
shrl
sbb
aam
pop
push
push
arpl
dec
je
int3
xchg
dec
adcl
xor
or
in
lret
stc
flds
cmpsb
loope
push
pushf
negl
iret
push
jae
daa
rol
sahf
test
jns
inc
push
fnsave
mov
cmp
cmpsb
cmp
hlt
sub
xchg
or
aaa
in
sbb
inc
into
or
inc
mov
pop
test
cli
mov
into
mov
test
fldcw
push
cs
push
mov
dec
rorb
cmp
and
sbb
mov
xor
and
leave
add
jp
bound
cmp
push
xor
or
dec
push
xchg
pop
test
in
loopne
mov
mov
jmp
xchg
jg
mov
lret
push
jmp
or
rclb
xchg
pusha
pop
je
stc
loopne
hlt
jmp
mov
faddl
cmp
pop
int
and
mov
std
lods
clc
jb
push
pop
jne
inc
cmpsl
aaa
add
dec
movsl
scas
cmp
das
fimull
jne
pop
cmp
inc
inc
pop
dec
jo
ja
and
dec
jg
dec
test
xlat
stos
xchg
daa
sbb
sub
cmp
sub
pop
in
adcb
jmp
lret
cmp
popf
and
test
and
lret
sub
jge
aas
fidivl
jge
jno
mov
mov
and
jl
inc
and
les
stos
les
mov
add
int3
movsb
iret
int3
sbb
xchg
sbb
lret
lods
add
xchg
leave
lods
adc
jecxz
mov
inc
scas
jp
mov
add
pop
xchg
pop
fldt
inc
outsl
frstor
add
xor
cmp
loope
std
or
fidivrs
adc
nop
mov
pop
add
cli
cld
dec
xor
push
xchg
jbe
insb
mov
push
in
js
je
stc
mov
or
pusha
daa
ds
es
jg
and
dec
cmp
fstl
xor
add
in
mov
xor
ja
frstor
into
cs
add
and
push
jge
mov
mov
inc
ret
aam
call
int
add
fisubrs
pop
int
into
test
xor
mov
data16
inc
pop
mov
cmp
pop
mov
xor
or
sarb
mov
pusha
push
xor
in
adc
scas
sbb
mov
jmp
icebp
pusha
cmp
leave
xor
aaa
or
rcll
xchg
pushf
inc
ds
aam
jno
mov
arpl
iret
subl
cltd
adc
mov
fldcw
mov
pop
adc
push
pop
mov
pop
cmp
frstor
add
popa
cmpsl
mov
mov
lahf
jle
cmp
and
loop
in
inc
pop
jecxz
mov
adcl
xlat
mov
lahf
and
pop
push
fwait
shlb
dec
or
test
sbb
call
dec
push
push
daa
push
mov
cli
sbb
insb
push
pushf
dec
mov
jecxz
xlat
push
add
movl
fs
pop
jle
stc
adc
cmp
leave
xchg
mov
stos
push
repnz
mov
in
xor
sub
jae
and
movsb
call
fdivr
cmpsb
jl
pop
ret
inc
jnp
mov
add
xor
fidivl
mov
xor
xlat
push
inc
inc
mov
and
rolb
and
jmp
jle
dec
jmp
sub
hlt
xor
stc
push
mov
cmpsl
mov
int3
fldenv
int
lds
rcrb
push
imul
das
inc
mov
jecxz
push
sahf
je
lret
mov
add
and
out
add
dec
pop
cltd
sti
arpl
fnstcw
push
out
push
mov
enter
xchg
xchg
push
gs
sarl
ja
xchg
push
adc
pop
lcall
inc
sub
out
imul
xchg
nop
out
sbb
movsb
push
sbb
add
loop
stos
hlt
rorb
and
cld
pop
adc
add
sbb
mov
mov
mov
fwait
pusha
repnz
test
cmpsl
add
pop
pop
or
inc
inc
xchg
inc
daa
loope
fcomps
jl
outsb
mov
cmp
jo
dec
int3
int3
pop
add
ja
cmp
rorl
js
out
and
xorl
xorl
test
fistl
into
fstps
mov
lds
aas
pop
movsb
sbb
out
jno
xor
loop
jge
adc
scas
xchg
and
decb
outsl
push
jnp
aas
add
xor
lret
call
pop
es
xchg
aaa
dec
inc
sbb
sti
js
pop
and
outsl
mov
imul
push
or
mov
movl
cmp
push
xchg
lods
mov
and
jl
ficoml
and
int3
dec
sbb
mov
ds
popa
mov
and
divb
sub
sar
aam
cmp
pop
jns
mov
mov
jne
pushl
in
ret
add
stos
fstps
sub
jnp
ja
mov
and
sti
jp
jo
push
dec
push
sbb
lods
loop
jne
idivb
in
cmpsl
pop
addb
jp
lcall
xor
and
in
fsubl
stc
movzbl
outsb
adc
je
fs
xor
mov
xor
and
adc
sbb
add
jbe
aaa
add
or
out
jb
xchg
sbb
jne
sub
jl
lock
dec
in
loope
cwtl
add
mov
insl
pop
or
or
pusha
mov
jg
cmp
loope
aad
int3
jb
in
and
popf
stos
and
repz
js
enter
pop
int3
jecxz
scas
jg
aas
sbb
mov
add
mov
insb
dec
aad
xor
ror
ficomps
xor
add
mov
stos
lock
aam
lahf
fimuls
mov
mov
pop
lock
dec
and
pop
lret
sub
imul
jbe
aas
mov
test
shlb
or
sbb
ja
push
gs
dec
das
push
movsb
add
addr16
sub
cmp
lret
daa
push
decl
loopne
jo
sbbb
repz
pop
popa
push
cltd
mov
fsub
in
push
and
add
xor
ja
daa
enter
mov
les
test
aas
aaa
testl
mov
mov
std
cmp
mov
bnd
pop
rcrb
jp
inc
dec
mov
xchg
imul
mov
ret
test
lock
outsb
cmp
movsl
cmpsl
push
mov
fsubs
xchg
xor
arpl
and
out
js
out
pop
fstpt
mov
mov
pop
out
call
out
inc
cmp
lahf
nop
add
mov
outsb
shr
cmpsl
or
sbb
in
jb
adcl
aaa
mov
fdivs
pushl
jp
pop
nop
sti
pop
or
daa
mov
push
sub
mov
add
adc
sub
dec
imulb
cmpsl
aad
pushf
dec
push
jp
xchg
push
mov
ret
xor
ja
cltd
sbb
jb
and
lea
xor
adc
push
pop
xlat
dec
cltd
push
and
and
sbb
adc
push
sbb
mov
or
cmp
out
mov
xchg
sbb
in
jle
xor
dec
in
rol
cs
jl
outsb
pop
adc
inc
jns
movsb
push
in
bound
push
jg
push
xchg
test
xor
stc
mov
fstps
dec
jo
inc
push
dec
frstor
lods
pop
dec
sahf
add
aam
mov
fmulp
movsl
fiaddl
roll
pop
lds
dec
pop
test
bound
mov
rolb
sub
daa
cld
mov
incl
push
cmp
jp
lahf
cltd
jns
jp
cwtl
xchg
mov
loope
les
cltd
push
mov
int3
xchg
arpl
and
clc
movsl
cmpsl
xchg
sub
adc
mov
lods
mov
dec
sbb
push
cwtl
dec
movsl
push
insb
xor
test
jmp
test
testl
and
jb
fwait
push
sbb
xor
stc
test
cltd
pop
jecxz
jge
addr16
xchg
push
mov
sbb
and
mov
stos
jp
pop
jmp
dec
insb
stos
xlat
mov
data16
push
and
inc
dec
fwait
popf
pop
pusha
dec
sub
jbe
mov
xchg
cmp
shlb
rcll
fbld
jl
mov
imul
clc
adc
inc
mov
adc
sti
xchg
jmp
out
mov
ret
jns
jne
xor
subl
mov
adc
inc
mov
cmc
mov
jb
mov
sahf
aaa
jne
aas
xchg
push
or
mov
push
lds
es
cmp
test
adc
aaa
lret
fistpl
mov
std
xor
xor
xor
cli
jnp
daa
ret
addr16
push
loop
xchg
sahf
push
in
bound
push
movsb
cmp
or
and
sbb
mov
sbb
iret
insb
mov
add
or
adc
arpl
in
and
lea
lret
sub
test
add
adc
lret
inc
clc
sub
mov
jne
and
mov
or
cmp
xchg
ret
cmp
inc
fbld
push
xchg
dec
jecxz
push
std
test
xchg
aas
or
jns
adc
adc
in
inc
fstpt
mov
cmp
inc
pusha
je
push
mov
fdivrs
mov
int
cwtl
pop
mov
iret
cltd
mov
loopne
mov
xor
adc
sbb
cmpsl
xor
fcmove
test
push
fiaddl
sub
xchg
and
lods
pop
xor
or
into
std
es
adc
andl
or
add
inc
pop
cmpsl
dec
adc
mulb
sub
xorb
out
add
mov
push
jg
pop
dec
sti
fcoml
or
in
cmpsl
icebp
pavgw
xchg
pop
sub
xchg
xchg
mov
lret
sti
inc
hlt
clc
out
mov
push
pop
je
and
sub
cmpb
adc
fdivrl
iret
mov
adc
sbb
xor
or
or
stos
xchg
sahf
es
or
hlt
cmp
push
fldcw
add
clc
sar
xor
or
or
jl
mov
sub
in
aaa
push
repz
subl
dec
push
and
gs
sub
push
in
ja
pop
addr16
xor
jnp
mov
jae
jnp
pop
js
lods
sahf
xor
push
jns
ja
jecxz
nop
vpcmpeqb
fnstcw
and
add
scas
js
test
sbb
outsb
stos
and
aas
adc
and
iret
adc
cltd
and
test
ret
inc
mov
mov
cmpsb
movsb
xchg
or
xchg
mov
pop
mov
mov
inc
sbb
cld
lods
cmp
pop
jnp
or
sbb
mov
pop
rorl
pop
enter
cmpb
mov
xchg
call
int3
sub
adc
lods
pop
clc
and
lds
mov
add
inc
fcmovnb
jle
repnz
push
sar
lods
rolb
inc
push
mov
xor
in
pop
out
push
sahf
inc
dec
outsl
mov
fildl
adc
int3
call
nop
test
inc
sbb
dec
rorl
push
adc
stos
mov
cmp
and
or
sub
int
sbb
push
cmp
out
adc
rorb
mov
sbb
sahf
cmp
and
dec
popa
pushf
fcmovnbe
test
pop
rorb
pop
sub
test
pop
xchg
arpl
mov
sbb
ljmp
out
xchg
call
xor
jb
jo
cmpsl
jle
or
ficoms
sub
sbb
iret
and
notb
sub
xor
movsb
out
inc
jbe
shlb
pop
cltd
std
mov
enter
jnp
repz
aad
pop
jo
sbb
pushf
pop
push
mov
arpl
cltd
and
xor
cmp
in
imulb
xor
dec
rcll
sbb
pop
pusha
in
push
cli
fstps
rolb
dec
int3
cmp
mov
cmp
jl
rclb
pop
and
loopne
xchg
mov
ficomps
fstps
sbb
mov
add
or
aad
xchg
lahf
and
fstpl
or
roll
mov
icebp
ret
dec
cmp
cmp
addr16
or
andl
lods
insb
add
jg
sahf
push
fwait
lret
xchg
bnd
or
mov
or
std
mov
cmp
jge
pop
dec
add
mov
out
iret
stc
mov
out
cmp
mov
sarl
pop
and
out
popa
fisttps
adc
cmpsb
loopne
sub
ret
sahf
sbb
cmp
sbb
sbb
lcall
scas
sbb
rolb
addr16
out
dec
sti
fdivrl
ret
rorb
outsl
xor
addr16
add
cltd
sub
mov
push
pop
rcrl
shl
aad
lcall
out
insb
inc
or
cmpsb
adc
aas
xor
lcall
shll
and
lock
push
push
inc
mov
mov
jecxz
sbb
jp
or
mov
sub
shrb
cmp
adc
cmp
arpl
mov
jbe
mov
in
pop
inc
jl
xor
in
xchg
mov
mov
ljmp
cmp
ljmp
dec
push
test
icebp
mov
xlat
sti
xor
out
sbb
sbb
pop
adc
scas
aaa
loop
test
push
iret
std
lock
mov
add
inc
movsl
sti
cmp
loopne
inc
hlt
lods
pop
push
pop
sub
dec
shrb
sub
aaa
out
out
pop
push
jnp
je
lds
and
add
pop
loope
xor
shrl
cmp
stos
mov
movsl
pop
and
pop
xchg
es
add
inc
mov
arpl
clc
testl
mov
cli
insl
jae
rolb
xchg
xchg
dec
test
mov
xchg
inc
outsl
fadd
cmp
repnz
sbb
cmpsl
push
ss
bnd
adc
jmp
int
xchg
add
xchg
gs
or
ds
sbb
into
int
test
sub
sbb
repnz
in
cltd
fisubrl
xchg
addr16
fwait
loope
fs
mov
icebp
rolb
adcl
add
daa
adc
inc
scas
lock
push
lock
aas
or
imul
fnsave
mov
and
jp
insb
loope
push
mov
into
adcb
pop
push
inc
cmp
xor
je
mov
push
nop
mov
add
mov
or
jp
jge
or
enter
inc
xor
pop
in
js
jno
hlt
pop
cli
imul
cs
xchg
push
popaw
xchg
dec
cmp
icebp
push
jb
stos
add
xor
loope
mov
and
sbb
pop
in
sub
mov
or
lahf
xchg
xchg
mov
sbb
mov
test
fs
or
mov
sub
push
mov
dec
mov
cwtl
push
sahf
arpl
push
addr16
je
or
mov
mov
sbb
mov
mov
xchg
cmpl
xlat
inc
jge
inc
jbe
adc
ret
es
dec
mov
sbb
test
push
add
pop
outsl
jo
inc
mov
pop
jne
insw
xor
subl
inc
pop
pop
int3
cmpsb
lcall
cmpsl
imul
xor
xchg
sub
pop
stos
call
mov
jecxz
mov
fincstp
cmpsb
mov
mov
jnp
ret
pushf
fwait
sbb
or
pusha
imulb
cmp
int3
bt
testb
dec
jecxz
jecxz
pop
add
or
dec
or
cmpsb
sti
xchg
mull
ret
xor
push
jecxz
mov
inc
xchg
dec
cmpsl
sub
xchg
pop
cld
outsb
jnp
pop
sbb
jne
inc
test
mov
ja
xor
test
jmp
dec
loopne
pop
pushf
mov
dec
ljmp
mov
out
mov
popf
std
test
or
add
popa
xchg
dec
in
enter
loopne
inc
pop
adc
loope
cmp
pop
mov
inc
in
jl
sub
mov
cwtl
mov
stos
mov
leave
adc
inc
mov
aas
fisttpl
aaa
repnz
stos
loopne
sahf
xchg
orb
clc
in
enter
cmp
and
pop
sub
mov
xchg
or
fldenv
add
push
roll
cmp
or
and
test
cli
aad
or
cmc
mov
repz
pop
bound
addl
aas
cmp
lods
rdmsr
pop
int3
pop
mov
cwtl
jmp
vmovss
outsl
sbb
lock
dec
mov
sub
repz
outsl
adc
xor
mov
jno
pop
fmul
mov
ret
adc
std
mov
imulb
mov
or
daa
and
adc
leave
icebp
into
dec
lods
into
jp
xor
nop
cmc
sbb
or
leave
and
xchg
xor
mov
push
ror
dec
fistps
push
dec
stc
sub
jne
or
andb
cmp
shrb
rorl
adc
mov
iret
cli
scas
loope
pushf
pop
pop
xchg
movsbl
outsl
inc
jecxz
mov
fcoms
push
les
jbe
jge
jb
adc
dec
jne
ret
lock
mov
arpl
dec
jnp
or
fwait
in
xor
mov
and
ljmp
xchg
mov
cmp
inc
test
pop
outsl
and
cwtl
lcall
dec
ficompl
je
lds
jb
and
fistps
or
fldenv
ljmp
sub
and
adc
ret
stos
in
xor
mov
outsl
hlt
adc
cmp
adc
mov
seto
fisttpll
fidivrl
push
js
roll
cwtl
xchg
adc
and
int3
clts
mov
stos
xor
jg
jnp
insb
imul
and
adc
jmp
call
pop
cltd
jnp
mov
in
es
or
push
mov
mulb
pop
in
mov
mov
ficoml
xchg
jnp
push
push
jg
xor
mov
popf
pushf
std
cmpsl
mov
or
daa
scas
jnp
ficoml
jns
mov
pop
xor
int
fists
pop
mov
pop
lret
jmp
mov
push
int3
inc
clc
or
and
cwtl
cmpsb
inc
arpl
mov
cltd
loope
jns
sub
inc
and
fstps
leave
loope
xlat
std
stos
pop
and
imul
dec
xchg
in
movl
cmp
divb
gs
mov
jne
data16
pop
inc
xchg
mov
lock
out
lds
xor
pop
fisttps
fsubl
movsb
lods
jne
mov
push
lret
push
push
stos
in
test
push
repnz
inc
aam
mov
mov
scas
imul
mov
fsub
and
subl
mov
lods
in
push
mov
pop
mov
cs
sbb
push
mov
pusha
xchg
movsl
test
and
jae
and
sarl
mov
test
test
dec
sub
aam
movsb
add
fistpl
pop
sahf
arpl
dec
leave
fidivl
push
jb
stos
enter
lea
or
and
scas
sub
ret
clc
add
scas
aas
lds
sbb
movb
cmp
xchg
outsb
sub
pusha
cwtl
jmp
mov
sbb
sub
icebp
and
aam
adc
inc
cmc
jge
adc
iret
and
pop
cmc
in
repz
popa
or
shrb
fnstsw
pop
add
mov
sub
popf
cmp
cmpsb
mov
bound
testb
mov
jne
std
and
or
mov
mov
fwait
inc
pop
mov
jmp
es
dec
xchg
loope
sbb
stos
stos
xchg
inc
fnstenv
or
fdivp
push
and
int3
xor
and
mov
adc
dec
xchg
out
mov
pop
sbb
or
xor
std
mov
xchg
mov
insl
inc
hlt
cmp
mov
pop
or
pushl
pop
push
pushl
enter
rcrb
stos
out
loope
fimuls
or
pop
in
jp
inc
adc
sub
jg
xchg
adc
mov
mov
mov
fucomip
xlat
mov
out
jecxz
hlt
in
jns
pushf
jnp
mov
lods
inc
das
jecxz
in
das
leave
pop
fs
imul
popa
jle
cmp
fs
fdivrl
lret
cs
mov
dec
push
cli
jg
ret
jp
jp
push
sarl
cs
bound
jle
push
roll
mov
arpl
test
subl
xchg
jns
lods
lcall
sarb
ret
and
mov
fcom
or
daa
jnp
jmp
xchg
sbb
pop
scas
cltd
notb
fwait
push
jl
jns
pop
mov
mulb
clc
adc
dec
fadds
call
outsb
jo
jmp
stos
push
pop
testb
inc
xor
adc
mov
inc
ffreep
mov
xor
cld
in
sub
mov
pop
out
jb
pop
aam
in
jle
add
fbstp
or
adc
xchg
inc
and
xchg
xchg
ja
cmpsl
bndstx
pusha
ja
adc
pop
lock
mov
mov
arpl
int3
mov
testb
mov
scas
out
pop
outsl
jge
popa
inc
cmpsb
leave
rcll
cwtl
in
jno
add
fwait
jle
cltd
mov
and
adc
faddl
sub
movsb
sbb
mov
xchg
mov
repnz
pop
in
mov
out
dec
and
inc
jge
aad
sbb
das
cwtl
enter
add
fadds
mov
push
jge
xor
dec
dec
dec
adc
neg
xorb
mov
cmp
pop
jno
sti
xor
inc
fdivr
mov
mov
dec
ret
cmp
adc
shll
loopne
inc
insl
outsl
dec
xchg
jg
test
int3
movsl
cli
rcrb
es
mov
rcrl
dec
adc
pop
movl
xor
mov
xchg
mov
jg
mov
faddl
and
cld
cltd
in
bound
xchg
pop
inc
push
cmp
data16
aam
jns
je
inc
fnstsw
jmp
pushf
dec
add
cmp
or
push
ret
std
pop
add
cli
xchg
xchg
pop
test
and
movl
mov
lret
xchg
cmpsb
xchg
lret
mov
in
xchg
mov
movsb
add
bound
call
sbb
mov
xchg
mov
dec
push
scas
scas
mov
out
mov
mov
inc
je
xlat
push
and
add
mov
inc
mov
or
test
out
sbb
mov
sti
sbb
les
and
lock
loope
rcrl
into
sarl
jmp
sub
ss
inc
cld
dec
daa
fwait
cmp
or
add
pop
sub
sub
jne,pn
in
and
lcall
pushf
sub
pushw
lock
scas
imul
sbb
adc
out
xchg
pushf
push
int3
movsl
mov
inc
push
pop
inc
aas
xchg
xor
js
fwait
jp
in
out
scas
push
fisubl
cmp
add
roll
test
push
mov
adc
cmpsl
ss
add
and
mov
dec
adc
mov
or
push
shll
jge
les
cmpsl
xchg
jg
sub
jmp
add
sub
fisubrl
xchg
ja
mov
adc
xchg
lea
jae
xadd
cmp
lcall
sub
jbe
aas
jecxz
int
xlat
rolb
lds
mov
inc
outsb
mov
xor
xlat
mov
dec
cli
pushf
lods
shr
push
dec
cmpsl
adc
repz
or
dec
mov
fchs
sub
fildl
pop
lret
fists
inc
xchg
insb
clc
sbbl
push
mov
out
fisubl
aam
and
jge
loop
aas
test
mov
pslld
push
xchg
test
push
mov
mov
jae
repz
adc
insb
les
sarb
xchg
lret
lock
or
jecxz
cltd
cmp
mov
das
xchg
lcall
rcll
aas
push
loop,pt
xchg
mov
adc
inc
rorl
test
jnp
adc
jnp
adc
mov
push
jae
lock
mov
jb
je
lods
fwait
rcl
loope
pop
mov
mov
mov
mov
fisubrs
cmp
dec
jmp
jge
daa
ret
jo
aaa
ja
jno
sub
test
sub
xchg
mov
rcrb
mov
dec
stc
pop
xor
pushf
mov
sub
pop
jl
cmpb
aad
adc
xor
pop
outsb
push
fadd
xor
dec
mov
nop
adc
mov
push
pusha
or
mov
and
leave
cwtl
jle
mov
jb
sahf
popa
enter
and
mov
test
jno
lcall
arpl
pop
arpl
push
mov
dec
xor
jbe
push
jg
lods
loopne
pop
pop
and
inc
jns
das
cmp
push
mov
jae
aaa
jne
inc
pop
aam
and
lock
scas
jge
xchg
add
mov
repnz
in
xlat
add
in
loop
cld
sahf
adc
jo
ss
sub
or
dec
stos
xor
shrl
cs
jle
icebp
inc
xchg
pop
mov
xchg
outsl
les
mov
add
and
fisubrs
xchg
dec
or
nop
outsl
mov
mov
sbb
pop
jg
stos
insb
adc
sub
xchg
in
fwait
push
cwtl
mov
imul
push
mov
xchg
cld
cmp
mov
and
jmp
aam
pop
and
in
mov
ss
imull
int3
icebp
and
cli
les
sbb
rcrl
jle
inc
hlt
leave
mov
les
cld
mov
out
stos
hlt
shl
pop
cmpsl
mov
mov
ret
xchg
jne
mov
cwtl
inc
pop
popf
into
xor
movsb
test
jbe
mov
in
cltd
scas
cld
xor
sub
and
daa
dec
mov
and
scas
movsb
mov
sbb
xor
push
mov
jmp
cs
cld
imul
in
lods
xor
push
shl
sbb
in
or
inc
sbb
adc
mov
popf
sbb
int3
fcompl
call
enter
adc
jnp
push
add
jmp
decl
inc
push
cli
jl
negb
test
lret
mov
enter
pushf
cmpsb
clc
arpl
and
push
nop
imul
in
cmp
std
sub
pop
jmp
lcall
sub
sub
orl
and
adc
mov
das
mov
mov
loopne
test
add
xor
inc
fistpl
adc
add
mov
mov
lret
xor
push
xor
dec
cmpsb
rorl
or
roll
sbb
icebp
outsb
rolb
outsl
pop
xor
cltd
xchg
or
cmp
push
les
ret
sbb
movsl
sbb
ja
test
dec
mov
sub
out
fprem
xchg
mov
and
push
fidivrs
adc
adc
dec
cmp
sarl
mov
adc
sub
lea
jns
push
js
fsts
pop
sbb
mov
mov
mov
jno
xor
cmpsl
or
rcll
lods
movl
lcall
mov
jae
out
in
jge
sub
pusha
sbb
push
sub
mov
jbe
inc
pusha
pop
cmp
stc
cmpsl
test
or
add
or
xor
sbb
lret
add
std
shrl
ljmp
ja
cwtl
adc
cmp
nop
jle
cwtl
bound
push
ss
mov
mov
addb
dec
mov
ljmp
fwait
js
pop
mov
lahf
jnp
test
xchg
aad
stc
add
pop
xchg
movsb
mov
pop
repnz
pop
push
repz
test
inc
push
mov
ror
repz
push
call
out
imul
or
test
pop
mov
mov
in
xor
sbb
test
vpinsrb
insb
repnz
hlt
jge
add
mov
fidivrl
leave
mov
sub
incb
das
xchg
lea
push
xor
lds
adc
mov
cs
jae
dec
movsl
ja
rorl
dec
negl
dec
fnstcw
jmp
scas
sbb
sub
jg
xchg
fs
add
inc
mov
push
adc
aad
mov
shlb
leave
adc
pop
xorl
aaa
nop
pop
pop
inc
loop
test
sbbl
mov
xchg
flds
mov
ud1
xchg
push
jle
dec
dec
push
loop
rclb
sub
lcall
xor
imul
test
shrl
cmp
pop
sbb
mov
xchg
xchg
addr16
pop
mov
aaa
jb
test
lret
lahf
dec
in
test
push
test
add
and
sub
inc
incl
or
hlt
lods
int3
mov
lahf
pop
cli
outsb
std
pop
inc
mov
inc
pushf
movsb
stos
adc
adc
dec
push
pop
add
out
dec
dec
fs
push
dec
push
cmp
adc
adc
shlb
or
popa
adc
pushf
enter
lret
cmp
outsb
sbb
xchg
jno
sub
rol
sarl
out
faddl
ja
fsubp
dec
adc
lahf
jbe
add
lds
das
push
dec
addb
stos
xchg
stc
pop
push
fidivrl
push
add
adc
insb
mov
sub
iret
out
pushf
pop
mov
jae
dec
repz
jl
xchg
jmp
loop
add
sete
xchg
pop
out
sub
fnsave
xchg
adc
mov
lret
fbstp
xor
jecxz
out
fs
xlat
aad
gs
jp
ret
inc
mov
cmp
mov
mov
mov
add
and
jmp
jp
cmp
inc
xchg
mov
ffreep
and
into
mov
fisttpll
cmp
push
xor
clc
aas
js
inc
movsb
dec
mov
iret
mov
fmul
cmp
in
pop
pop
sub
loopne
mov
loope
imul
xor
fisubrl
jge
stos
xchg
dec
insb
add
dec
lahf
subl
push
out
add
mov
mov
mov
push
jno
mov
mov
xlat
pusha
dec
test
jg
xor
push
dec
pusha
lret
fadds
xchg
cwtl
adc
sbbb
test
fidivrs
fnstsw
int
pop
in
sub
ret
shr
xor
out
aaa
cmpsb
cmp
nop
mov
scas
dec
mov
jnp
lods
add
rolb
xchg
adc
adc
push
xlat
hlt
pushf
or
inc
add
and
jne
adc
pusha
dec
dec
testl
mov
mov
cmc
ret
ds
pop
push
scas
jge
push
pop
jmp
push
xchg
mov
aas
jmp
subb
inc
xchg
sub
aaa
das
imul
dec
sbb
lcall
shrl
stc
shlb
pop
sbb
negl
fnstenv
xchg
mov
cltd
neg
jp
xor
sti
dec
mov
popa
xchg
mov
and
std
aam
pop
cs
scas
cmpsb
cmpsb
cmpb
mov
popa
push
decl
enter
ljmp
dec
add
bound
sbb
fists
or
lahf
mov
jp
cmp
mov
inc
insl
inc
sbb
cld
jno
push
cmp
xchg
ja
or
pop
xchg
push
icebp
sub
out
fidivrl
enter
or
and
xor
push
stc
mov
mov
lods
imul
lods
jne
dec
addr16
cltd
stos
xor
jmp
sub
push
and
call
fnstsw
insw
call
sbb
inc
dec
mov
or
add
cmpsl
enter
dec
adc
sbb
movsb
xchg
push
fsubrs
in
popl
mov
test
scas
int
sbb
and
push
mov
mov
lcall
out
add
pop
mov
xor
sahf
pop
call
jns
and
daa
pop
inc
movsb
adc
add
push
dec
pop
ds
sahf
test
std
xchg
and
sbb
subl
push
jbe
add
jne
mov
mov
decb
mov
iret
test
jnp
outsb
sbb
push
xchg
jl
cltd
es
fnop
mov
cmpsb
mov
inc
aam
rcll
test
mov
push
cmp
mov
cmp
popf
xlat
jno
mov
or
add
loop
or
test
pop
jecxz
sub
fnsave
rorb
movsl
pop
push
jle
test
filds
pop
outsb
ss
cmpsb
sar
pusha
pop
jb
test
mov
cmc
mov
mov
je
repz
cli
lret
pop
cmpsl
pop
xchg
mov
aam
aam
sub
mov
mov
and
add
add
jne
into
add
inc
lahf
popa
daa
mov
loopnew
mov
or
adc
pushf
cmp
stos
sbbb
push
adc
sbb
insl
fidivrs
imul
add
fwait
ljmp
lea
pop
orb
repnz
pop
push
rcrl
testl
lock
mov
mov
xor
loopne,pn
loope
sti
cmp
xor
fisubs
adc
ror
dec
pop
push
daa
es
push
shrl
nop
sub
cmp
add
scas
add
jle
fildl
les
iret
jnp
ror
out
setl
fwait
popf
xor
jp
test
daa
pop
jl
notl
inc
ja
xchg
jg
and
sahf
xor
dec
sbb
sub
jmp
adc
pushf
xor
jb
mov
les
push
pop
add
mov
sbbb
mulb
scas
dec
jb
jo
mov
cld
inc
fwait
cmp
xchg
out
lret
push
xchg
jno
sub
shlb
or
jle
xor
ja
mov
popf
stos
lods
mov
mov
push
addr16
adc
inc
or
jno
push
jnp
sub
cmp
clc
test
cs
pop
push
faddl
std
add
mov
insb
in
test
mov
fs
add
daa
popa
push
add
xchg
gs
cwtl
call
dec
mov
test
test
rclb
and
jnp
mov
test
xor
std
and
push
test
out
fs
jae
mov
das
mov
pop
adc
aam
rorl
fnstsw
stos
sub
loopne
pop
pop
imul
push
jae
cmp
daa
sahf
xlat
and
fwait
dec
loopne
movsb
cltd
and
sar
sub
aad
or
test
xor
xchg
jnp
cmp
daa
out
fadds
cltd
mov
mov
std
std
dec
or
inc
xlat
gs
pop
add
mov
lea
dec
mov
inc
aaa
dec
sbb
cltd
mov
cwtl
test
jns
jl
fs
stos
repnz
vmovsldup
addl
dec
repz
cmp
sub
fst
mov
test
jl
test
scas
pop
jp
or
std
sbb
cmpb
push
in
sbb
test
xchg
loop
idivl
addr16
aam
push
cltd
jp
cmc
sbbl
and
fs
and
iret
push
popa
mov
push
orl
jecxz
pop
push
inc
push
pop
xchg
call
sbb
mov
xchg
int
mov
ret
mov
cmp
pop
xor
stc
stos
pop
push
outsb
inc
sub
push
aam
jl
inc
and
daa
loope,pt
sbb
xlat
lret
sub
andl
std
in
lret
sub
das
inc
mov
xor
adc
lret
xor
sub
inc
movsb
js
negb
test
fcoms
out
jno
movsb
xchg
in
add
add
imul
push
ficomps
sarl
xor
jg
xchg
dec
lret
jg
js
push
lds
divl
fadd
xchg
rolb
adc
cmpsb
pop
mull
aam
mov
fldl
pop
cmc
loop
negl
popf
scas
jp
test
int
sbb
mov
inc
xchg
mov
fwait
push
icebp
cltd
sub
xchg
lahf
mov
xchg
push
sub
fildl
ret
xchg
out
imul
mov
and
test
sub
mov
cmp
pop
in
sub
sub
pop
pushf
leave
mov
and
mov
jp
out
aad
inc
cmp
leave
push
mov
test
cmpsb
jl
js
sub
in
fstl
mov
push
inc
ffree
push
fs
arpl
jg
pop
xchg
adc
jl
imul
and
push
dec
fld1
sub
jle
fwait
stos
sti
data16
addb
jle
add
stc
jge
mov
lahf
push
lods
leave
pop
aas
mov
adc
adc
fnstenv
je
add
arpl
scas
or
mov
ret
sbb
into
fptan
push
rcll
ret
lret
cwtl
mov
jmp
jno
cmp
bound
rcr
sahf
out
mov
xor
ret
mov
mov
mov
fnstenv
mov
lods
icebp
pop
ficomps
movsl
bound
rclb
popa
pusha
loopne
xchg
jg
adc
out
rclb
jne
mov
mov
fwait
xchg
stos
pop
jg
and
mov
test
mov
mov
bound
pop
and
and
lods
and
je
push
sub
cmpsb
pop
je
and
cltd
jg
mov
push
cld
sti
lods
sbb
push
xlat
xor
mov
cmp
stc
pop
mov
push
and
cmp
mov
and
push
inc
lock
xor
mov
jmp
insb
xchg
stc
cmp
xor
dec
movb
xchg
xor
xchg
shlb
divb
xor
cmp
sub
cmp
arpl
pop
mov
fs
ja
jg
xchg
or
loop
popa
add
cmpsl
js
mov
inc
jno
jno
jecxz
push
lods
pop
lods
xchg
jp
cld
push
jbe
dec
hlt
test
jbe
repnz
xor
lret
nop
addr16
push
int
mov
stos
adc
pop
lods
xchg
mov
and
sbb
cld
lds
or
sbb
mov
lds
repz
das
xor
and
push
inc
loopne
xchg
and
push
pop
push
xchg
and
sbb
xchg
popa
push
mov
sti
popa
stc
xor
cwtl
inc
add
shll
mov
cli
repnz
mov
or
orl
je
das
psrad
pop
cmp
xchg
mov
test
es
jge
repnz
or
fidivl
mov
inc
push
xorb
xchg
xor
mov
insb
repz
das
clc
dec
pushf
xorb
cmp
in
push
push
push
mov
xorb
ss
mov
or
mov
sbb
pop
jnp
cmp
mov
xchg
lock
movsl
inc
stc
push
push
xlat
jge
jo
jnp
lods
nop
stos
js
jmp
test
fldcw
mov
mov
add
sbb
repz
mov
pop
inc
pop
mov
xchg
push
and
mov
add
inc
flds
das
jns
jl
js
mov
ret
or
arpl
cmp
jl
pop
inc
mov
mov
in
aas
movsl
push
int
dec
cmp
fwait
sbb
pusha
mov
mov
aam
out
jecxz
orb
dec
push
xchg
mov
gs
mov
jecxz
xchg
ss
cmp
or
xor
aam
fiadds
loop
mov
add
jecxz
inc
xor
loop
xchg
nop
lcall
sub
rolb
lods
or
fstpt
out
inc
inc
rcrb
cltd
fiaddl
jmp
push
sub
stos
je
mov
sub
sbb
loop
daa
bound
xchg
ss
adc
into
inc
mov
fidivs
cmpb
push
mov
push
out
sti
pop
mov
cmpsl
jg,pt
in
js
jecxz
xchg
test
mul
shr
sti
mov
leave
xchg
orl
mov
out
sti
push
cmp
pop
add
sub
movsl
push
jo
lahf
push
mov
pop
adc
jae
cwtl
lods
cli
xor
inc
movsl
fstpt
mov
xchg
adc
push
jb
ret
and
xor
scas
enter
rolb
xchg
add
mov
cmp
mov
push
addb
sahf
dec
imul
pop
std
push
fwait
mov
and
or
mov
imul
in
adc
test
sub
push
and
arpl
xchg
lahf
mov
out
negl
lret
lea
mov
pop
mov
cld
xor
xor
sbb
inc
push
inc
push
dec
das
outsl
sbb
dec
or
lcall
fwait
pop
vmovss
dec
repz
push
cmp
sub
pop
push
in
sub
and
jns
adc
xchg
add
and
mov
in
inc
mov
aad
inc
cli
fsubrp
lret
jno
fildll
outsl
test
lcall
stos
cmpsl
cmp
lea
shrl
rcrl
outsb
test
cmpb
xchg
out
jecxz
jmp
jno
shrl
push
jl
imul
repnz
imul
mov
jg
push
iret
mov
and
lea
cld
xor
fsts
mov
lea
push
movsl
std
jne
icebp
sti
das
int3
icebp
arpl
insl
jg
xchg
dec
cmp
mov
push
roll
inc
in
repz
js
sub
ja
sti
in
iret
fwait
mov
xor
mov
mov
ljmp
mov
pop
push
lahf
push
xchg
test
push
scas
sub
mov
cltd
add
enter
xorb
pop
pop
fnstenv
lds
push
pop
jns
jmp
aam
push
jge
push
lahf
sub
mov
outsl
xchg
inc
out
inc
mov
push
lahf
inc
out
dec
shrl
int3
test
fwait
sub
rcll
fdiv
fistpl
add
or
adc
ficomps
bound
leave
lret
cmp
jl
sti
push
cwtl
fxch
addb
or
lret
adc
jo
add
xchg
mov
pop
jg
inc
enter
mov
push
pop
ret
sbbb
sbb
sub
xchg
ljmp
push
sti
add
adcb
fldt
in
sbb
push
andl
out
push
mov
bound
mov
sub
out
testb
inc
sub
mov
imul
aad
bound
pop
mov
dec
mov
test
das
test
jbe
or
imul
push
data16
and
das
adc
fisubs
adc
xchg
testl
fbld
fdivr
into
ds
andb
pop
jae
cmp
add
mov
pop
jle
cmp
jbe
xchg
cld
jmp
js
gs
repz
stos
ficoms
dec
pop
lcall
lock
pop
push
mov
cwtl
pop
nop
ja
mov
cmp
outsl
pop
loopne
mov
xchg
push
les
lahf
push
jne
aas
mov
addl
shrl
scas
scas
dec
loop
mov
movl
arpl
push
adc
pop
bound
test
or
jge
ret
fs
je
push
gs
pop
lcall
xchg
jno
jle
roll
inc
outsb
adc
push
pushf
pop
ja
insl
bound
outsl
dec
sub
aam
stos
and
xchg
mov
and
imul
insl
inc
aaa
sbb
mov
dec
mov
lea
cltd
and
mov
jmp
frstor
xchg
outsl
xor
jnp
loopne
mov
mov
and
imul
inc
inc
stc
mov
cmp
fcompl
out
mov
push
dec
sub
or
pop
imul
mov
xchg
aam
jns
sub
push
loop
dec
mov
pop
or
adc
pop
dec
mov
sub
and
adc
pushf
pop
fs
dec
or
mov
clc
dec
lods
mov
mov
mov
add
nop
aaa
dec
loop
mov
or
jg
mov
cmpsl
fxch
stc
add
sub
pop
in
cmp
mov
dec
cmp
hlt
icebp
jmp
mov
call
aad
pop
dec
rorb
imul
xchg
inc
add
mov
mov
xor
push
inc
lret
mov
flds
mov
bound
lret
pop
movsl
adc
sbb
add
sahf
aam
icebp
push
mov
insl
sbb
stos
or
inc
xchg
ljmp
mov
scas
ret
push
add
mov
or
sbb
lock
mov
clc
and
and
out
ja
decl
popa
push
dec
jns
fsub
insb
xchg
stos
mov
pop
jp
popf
or
fildll
subl
push
sub
loopne
add
mov
out
xchg
or
lock
sub
mov
jb
in
pop
arpl
jno
ljmp
out
cld
call
xlat
and
test
dec
scas
sarl
repz
notb
addr16
xor
and
repz
rolb
pop
movsl
push
add
imul
negl
xor
jne
pop
adc
movsb
adc
scas
cwtl
dec
enter
lods
iret
sub
pop
or
mov
mov
sub
mov
mov
xlat
sahf
icebp
aam
loop
btrl
lds
loope
push
js
movsl
rcr
rorb
push
cmpsb
jo
stc
mov
bound
push
imul
enter
xchg
test
andb
fsubrs
xor
mov
xlat
push
mov
push
idiv
ds
or
and
std
pop
dec
mov
jle
sarl
loop
xchg
cmp
cmp
xchg
iret
pop
dec
cmp
xchg
jne
into
test
iret
lds
mov
cmp
insl
push
incl
xchg
inc
addb
cmp
ds
nop
sub
popa
addl
mov
xlat
sub
add
int3
jp
xor
sub
cvtdq2ps
and
inc
sarl
jne
mov
or
push
cmp
ficoms
std
mov
pop
ja
cmp
xchg
mov
mov
insl
dec
mov
or
lcall
mov
fadds
inc
xchg
and
subl
movsb
in
push
out
sbb
cmp
adc
jo
addb
dec
and
movsl
aad
loopne
mov
dec
fisubl
data16
adc
or
inc
xchg
dec
pop
push
mov
pusha
pop
mov
pop
data16
mov
jae
ja
push
xor
pop
test
xchg
jecxz
mov
movsl
insl
pop
sbb
loopnew
dec
arpl
jns
shr
jmp
mov
dec
and
stc
jp
mov
nop
ret
subl
test
lahf
inc
fidivrs
lret
xchg
and
fsubrp
lods
sub
push
lds
fisttpl
and
aaa
xchg
and
jmp
jb
jne
push
gs
xor
das
jbe
aad
xchg
int3
xchg
mov
int3
xor
out
cltd
inc
sbb
std
cwtl
cmc
and
enter
cmp
pusha
cmp
sti
stos
cmpsl
inc
imul
jae
daa
insl
repnz
int3
lcall
lret
das
out
push
fildl
jmp
and
test
adc
dec
test
sub
in
add
jl
xchg
sahf
and
jo
push
jl
sub
adc
ret
orb
add
inc
mov
mov
sbb
mov
leave
dec
nop
xor
sub
loope
sbb
in
cltd
test
repnz
ds
shlb
ja
mov
sarl
mov
xor
dec
add
adc
push
addl
cs
xor
orl
mov
adc
jns
cld
mov
jp
mov
fdivl
jl
push
inc
and
hlt
gs
addr16
mov
cmpsl
ss
aad
dec
mov
mov
inc
jbe
jo
sub
pop
aaa
hlt
imul
add
add
dec
or
cmpsb
sbb
daa
or
pop
loopne
mov
sbb
mov
mov
mov
push
inc
push
inc
std
xchg
xor
adc
lea
leave
sub
xchg
sub
inc
ljmp
xchg
cmp
rcrb
aam
mov
push
loop,pn
repz
or
push
bound
iret
in
mov
hlt
jo
mov
aad
mov
icebp
push
push
push
rclb
dec
fdivl
xchg
jle
imul
jae
fisubl
sti
outsb
lods
pop
mov
and
and
sti
xchg
and
xchg
ret
pop
jb
jns
mov
test
adc
jae
repz
outsb
test
jg
push
jmp
leave
mov
push
int3
sbb
jl
fildl
xchg
loope
ficompl
sbb
scas
sub
dec
adc
rclb
pushf
and
imul
dec
cmp
mov
mov
pop
sbb
dec
push
das
das
xchg
das
shrb
mov
cmp
sub
pop
repnz
outsl
cmp
into
mov
cmpsl
mov
lds
jae
sbb
ja
mov
icebp
mov
mov
roll
sbb
fcompl
xor
out
pop
xchg
mov
push
mov
insl
cmpl
mov
push
notb
pop
cmc
imul
jns
xchg
mov
test
cli
test
cmp
mov
or
and
push
push
shld
jno
jg
arpl
mov
movsl
addr16
adc
frstor
mov
pop
jl
jp
loope
push
mov
mov
mov
xchg
fcomps
lret
test
ljmp
insb
int3
jl
xor
pop
les
roll
outsl
sbb
sbb
fcoms
push
mov
adc
fwait
push
inc
mull
pop
adc
pop
dec
cmp
or
daa
pop
cli
lea
mov
stc
mov
fs
aam
outsb
scas
add
movsl
imul
int3
lahf
out
fistpll
jge
mov
xchg
std
add
pop
sub
sbb
jnp
mov
adc
icebp
mov
push
inc
or
sbbb
push
cmpsb
push
imul
push
cmp
inc
jns
mov
fwait
std
fwait
cltd
iret
rcll
jo
test
aad
fldt
pop
lahf
sub
inc
pushf
pop
ret
jecxz
mov
lds
repz
leave
loop
in
dec
loopne
add
aad
icebp
xor
ret
mov
cmp
sbb
stos
cmp
and
cmpl
mov
add
in
xchg
mov
jb
pop
pushf
cwtl
pusha
cmp
lret
inc
fcomip
in
jle
flds
pop
movsb
xchg
test
lock
dec
loop
imul
outsl
xor
lahf
notl
lahf
das
int
xchg
adc
pop
cltd
and
aas
xor
dec
call
js
cmpsb
sub
dec
jge
pop
pop
roll
xlat
or
loop
test
imul
sub
and
mov
addl
dec
xor
sbb
data16
ja
mov
sbb
jecxz
or
xchg
pop
mov
pop
les
xor
lret
xchg
jnp
cwtl
fldl
rcrl
and
lahf
mov
adc
cld
push
pop
call
fisttpll
je
cmc
test
mov
pop
cmp
inc
stos
jp
scas
mov
add
or
les
and
mov
aad
pop
mov
aad
sbb
mov
mov
pop
push
xor
jle
pop
cmp
call
jne
mov
sarb
or
inc
xchg
shll
jbe
and
fstl
fnsave
and
xor
stos
popa
int
sub
mov
mov
mov
cmp
mov
push
or
std
ljmp
cmpsl
lahf
or
shlb
mov
stc
cmpsb
je
lret
fadd
sub
xor
aas
fiadds
fldcw
sbb
inc
jmp
imul
bound
mov
or
xchg
pop
iret
sbb
xorl
mov
add
bound
fisttpll
push
test
ret
popl
lds
iret
xor
es
or
in
adc
push
pop
sahf
sbb
ja
mov
jb
cmp
stos
repnz
sub
inc
push
push
mov
cmp
arpl
loope
mov
adc
ficomps
push
sub
sbb
and
into
mov
pop
call
aas
push
or
loop
xchg
adc
ffreep
fildll
sub
ds
pop
shrl
popa
js
mov
mov
int
cmp
cmp
cmp
and
mov
xchg
sbbl
adc
lret
adc
xchg
push
ja
in
jecxz
inc
mov
adc
mov
ret
adc
dec
dec
ja
adc
cmp
or
cwtl
out
xchg
adc
xlat
push
xchg
dec
lret
cltd
cwtl
xchg
sub
hlt
sbb
cmp
xchg
xor
mov
daa
aam
pop
aaa
ljmp
mov
into
pushf
mov
mov
pop
int
inc
sub
and
fs
jbe
jns
mov
sub
xlat
cs
or
fsts
js
mov
das
xor
push
xor
in
roll
push
and
or
dec
dec
and
aas
stos
mov
xor
movb
mov
add
mov
test
push
dec
jg
dec
jmp
mov
mov
inc
sub
adc
push
std
or
push
and
in
cli
xchg
scas
int3
in
es
push
lret
mov
xchg
repnz
or
notb
lret
in
ja
dec
ja
jg
adc
adc
xor
mov
mull
fstl
stos
jmp
dec
xor
lcall
mov
data16
sti
xchg
iret
sub
dec
fnsave
scas
outsl
insb
adc
fnstenv
add
push
iret
and
es
lahf
daa
cmc
inc
incl
cs
adc
and
mov
lret
jle
jnp
fwait
rol
inc
or
fs
loopne
out
pop
pop
mov
add
adc
mov
mov
xchg
add
sbb
inc
lret
sbb
ljmp
not
lods
leave
inc
icebp
imul
xor
shlb
loope
int
sahf
add
add
inc
jb
cs
inc
stos
outsb
mov
xor
ret
push
filds
hlt
cmp
pop
out
sbb
xchg
xor
jno
mov
push
or
sub
add
sbb
pop
ret
or
insl
adc
das
cmp
dec
cmc
movsb
leave
stc
push
int3
subl
mov
xor
sbb
test
lret
xor
jmp
push
fists
fcmovne
insb
mov
fiaddl
or
push
dec
imulb
das
out
inc
xor
pusha
bound
mov
popa
mov
jbe
dec
xor
or
pop
call
or
stos
dec
xchg
push
mov
lods
sbb
sbb
mov
push
mov
lds
jge
cmp
cmp
lea
xchg
mov
ret
mov
rcrl
dec
scas
adc
addl
xor
jno
push
pop
aaa
push
inc
dec
jle
xor
cmp
adc
mov
mov
mov
in
mov
xor
add
sbb
push
dec
dec
mov
add
inc
xlat
iret
pop
js
imul
mov
popl
and
ucomiss
sbb
jb
daa
mov
jmp
shl
dec
loop
jecxz
pop
jns
cmpsb
sbb
pop
xchg
xchg
repnz
adc
dec
test
fstpt
iret
into
mov
dec
shll
pop
xor
mov
ret
cmp
mov
inc
imul
ja
or
pop
push
xor
mov
cmp
fbld
mov
mov
pop
jecxz
pop
lock
or
xor
mov
lea
pop
test
cmc
jns
out
outsb
not
jno
in
loope
nop
loopne
sub
mov
xchg
dec
lcall
mov
xchg
cmp
and
push
rcrl
mov
jg
in
roll
push
mov
and
add
mov
mov
cmp
sub
in
mov
inc
stc
lock
mov
and
mov
das
cld
loop
cli
sbb
mov
inc
xor
and
clc
xor
lret
push
rcr
loope
cmp
xor
adc
ss
sub
or
mov
jne
mov
mov
push
inc
jg
sahf
aam
ret
popf
pop
popf
mov
lcall
fcoml
pushl
pop
pop
mov
int
adc
and
mov
adc
push
fwait
push
pop
rolb
mov
ret
outsl
push
pop
sub
movl
bswap
xor
mov
icebp
mov
xchg
daa
repnz
cmpsb
lock
adc
test
inc
popa
sub
lock
pop
aaa
sbb
mov
sub
adc
xlat
xchg
roll
inc
popa
pop
scas
fnstenv
out
fcmovne
mul
mov
xchg
sbb
mov
pop
bnd
shr
movsl
rcll
adc
scas
jo
cli
cmc
shrb
sbb
data16
inc
lea
je
mov
sub
cmpsb
mov
cmpsb
mov
or
icebp
sbb
jge
jecxz
add
add
je
jne
push
mov
cmpsb
jo
inc
and
pop
mov
lea
pop
js
mov
push
mov
mov
scas
cmpsb
push
jle
xchg
xchg
in
and
fs
call
jbe
cltd
xor
inc
in
js
mov
mov
pop
out
push
xchg
js
hlt
inc
imul
test
sub
int3
cmp
into
ds
push
xlat
push
bound
xor
push
sub
iret
xchg
rorb
mov
adc
jb
cmc
shrb
jo
andl
cmp
insl
mov
mov
fcompl
sti
sub
cmc
cmp
jecxz
repz
leave
sub
xchg
loop
jnp
pushw
test
rcl
imul
xchg
xor
int3
push
dec
adc
pushf
adc
sub
sub
xchg
subl
inc
cmpsb
mov
ljmp
xchg
mov
aam
xchg
pop
mov
mov
mov
dec
fsub
popa
lock
mov
fnsave
xchg
mov
sti
or
out
iret
pop
insb
mov
pop
sbb
sti
insb
insl
xor
pushf
fidivs
push
dec
out
and
jbe
arpl
movsl
mov
xorb
mov
jne
cmpsb
mov
xchg
cmp
adcl
add
orl
in
push
pop
in
pcmpeqd
jns
aam
pop
subl
fs
popl
ss
push
jno
out
lahf
mov
out
ljmp
rcrl
les
xchg
std
icebp
mov
imul
cs
loopne
jo
sbb
xor
adc
fistl
dec
imul
imul
je
mov
dec
mov
cmp
test
js
cmpsb
mov
mov
inc
jmp
rolb
dec
stc
and
lds
or
sahf
jne
and
inc
int3
cmpsl
out
scas
adc
dec
push
mov
mov
or
das
fstpl
or
sub
xorl
xchg
std
adc
pop
adc
aas
aam
adc
mov
xchg
add
and
inc
pop
mov
dec
das
add
push
mov
push
jg
jno
sub
outsb
loope
out
adc
call
dec
mov
fldt
ss
addr16
sub
jo
mov
jb
les
lahf
xor
iret
data16
aam
outsl
fsubs
pop
and
jp
xchg
adcb
or
xchg
int
fistps
mov
sbb
adc
movb
movsl
decb
mulb
sti
dec
mov
add
ja
dec
call
dec
pop
aad
xchg
sbb
leave
cli
insl
in
js
repnz
cltd
lret
mov
jl
ret
xlat
xchg
out
cltd
mov
orb
in
addr16
inc
mov
inc
repz
imul
imul
cmp
and
dec
sahf
inc
mov
lea
sbb
dec
jnp
xlat
idivb
push
rcpps
mov
std
fistpll
sub
xchg
cmpsb
fnstenv
fs
lods
push
es
mov
lods
xor
cld
mov
push
popf
aas
or
jbe
fimull
sbb
imul
push
lcall
mov
xchg
ds
out
sbb
mov
mov
mov
mov
pop
faddl
jp
cmpsb
mov
jg
inc
adc
fildl
mov
les
mov
cld
adc
pop
push
sub
out
sahf
arpl
shlb
in
aaa
stc
adc
lods
cmpsb
mov
lds
out
out
lret
add
mov
add
insb
push
mov
lcall
xor
aam
mov
jne
pop
jmp
push
push
jp
aam
jns
mov
sti
add
jno
jle
dec
inc
adc
ljmp
out
mov
lahf
push
in
test
not
sub
pop
xchg
es
inc
mov
popa
sarb
ret
xor
dec
cld
es
sub
aad
imul
adc
adc
lahf
lock
xlat
ja
es
inc
cmpsb
cmpsl
mov
push
pop
and
inc
xchg
fcompl
std
push
xchg
mov
lods
int3
pop
inc
mov
aad
test
sub
jno
jo
mov
sub
pop
push
push
call
push
xchg
in
push
enter
push
xchg
adc
dec
dec
les
out
and
mov
mov
and
mov
divb
adc
sbb
sbbl
xchg
iret
mov
sub
ret
mov
dec
je
dec
adc
in
test
cmp
and
or
je
mov
jb
jns
xchg
push
in
mov
and
ret
rorb
sti
aad
cmpsb
ret
aad
std
and
jnp
repnz
or
sub
enter
inc
or
in
ljmp
roll
outsb
push
movsb
xchg
and
pop
push
insb
pop
sbb
sub
sbb
sub
adc
xchg
cld
clc
pop
inc
fdivrl
jmp
push
je
or
add
aad
push
inc
xor
iret
mov
xlat
aas
dec
mov
adcl
jnp
pop
pop
daa
int3
subl
cmp
inc
cmc
push
fistpll
jge
scas
testb
call
jnp
out
fisubs
adc
mov
shll
xor
inc
sahf
push
inc
jnp
stos
cmp
pop
jns
sub
movsl
add
stos
fwait
pop
pop
push
fimull
pop
mov
cmp
lcall
sub
gs
cltd
dec
xchg
adc
test
cltd
xor
call
and
cmpsb
push
cmpsl
xchg
test
sbb
sbb
push
lods
jmp
mov
adc
xor
scas
andl
adc
jne
daa
popf
pop
lods
xor
ret
enter
sub
mov
sub
fs
popf
xchg
jno
lock
daa
mov
adc
push
lods
mov
mov
subl
icebp
shll
in
xor
out
std
aam
ret
sbb
outsb
sbb
pusha
rorl
mov
or
call
xorb
nop
sbb
mov
mov
testl
sarl
insb
push
roll
ret
sbb
pop
mov
std
int3
fmulp
mov
je
lods
icebp
mov
jmp
jne
loopne
lahf
push
fdivs
pusha
mov
jns
addr16
jmp
inc
lret
inc
adc
xchg
inc
popf
sbb
sbb
lret
add
out
sub
iret
inc
xchg
and
pop
movsl
je
sbb
xchg
cmp
jno
out
or
sbbl
out
scas
loopne
mov
xor
or
push
mov
inc
jnp
fidivrs
in
cs
mov
and
jp
ficoml
negl
sbb
or
sti
js,pn
xor
pop
jno
rcll
lods
movsb
inc
pop
jmp
leave
fwait
pop
jl
icebp
xor
or
sub
popf
jns
cmp
lret
ja
lahf
mov
jmp
movsl
popa
sbb
filds
cld
cmp
std
iret
mov
mov
lret
adc
orl
xchg
mov
sahf
imul
stos
jnp
and
cli
subb
lock
enter
and
punpckhdq
imul
cmpsl
ret
lock
daa
scas
test
stc
cmovae
or
inc
inc
adc
pop
mov
dec
sbb
inc
push
lahf
out
push
xchg
test
adc
mov
jl
repnz
daa
mov
mov
pop
jb
and
jle
addr16
pop
imul
notl
push
jo
pop
mov
adc
shrb
cs
arpl
insl
xchg
xor
es
mov
mov
push
xor
mov
movsb
sbb
in
and
push
inc
sbb
cmc
dec
push
mov
mov
in
dec
inc
sbb
iret
xor
mov
jp
adcl
or
std
imul
add
mov
fnstcw
test
dec
clc
mov
cld
or
mov
mov
sbb
jmp
pop
nop
cmp
lods
mov
mov
mov
in
incl
push
scas
lock
stc
lock
xchg
sahf
clc
outsb
mov
mov
sbbl
push
stc
loopne
mov
cmp
xchg
mov
sub
inc
rolb
cld
loop
sahf
mov
xor
and
jl
inc
xchg
daa
mov
cmpb
mov
dec
dec
lea
mov
rcrl
or
mov
cmpb
pop
xchg
in
movsb
movsl
call
sbb
dec
jl
sbb
leave
ljmp
sbb
jmp
insl
adc
mov
or
int3
movsl
sarl
cwtl
fsubs
and
movl
leave
mov
xchg
push
fbstp
sbb
mov
xchg
scas
sbb
push
insl
inc
divb
add
cltd
in
test
adc
jne
outsl
icebp
decb
test
ss
cmp
test
nop
jmp
stc
ret
sbb
lea
out
and
movsb
adc
xor
idivb
inc
push
into
scas
cld
xor
mov
lods
sbb
out
punpckhdq
xchg
and
leave
dec
lahf
data16
out
push
mov
shrl
adc
or
mov
and
xor
or
out
push
test
int
call
fmul
mov
add
sub
sti
mov
xchg
inc
pushf
cmp
sbb
fstpt
clc
ret
dec
cs
les
pop
mov
aas
dec
xchg
push
sub
data16
scas
shr
mov
cmp
arpl
adc
shlb
and
cmp
lods
fisttps
aam
jecxz
push
cmpsl
jmp
imul
push
add
bound
jmp
adc
push
mov
mov
sub
aam
mov
jmp
imul
fistps
sbb
jns
int
pop
sub
std
ret
in
in
out
in
pop
push
push
insb
xchg
xchg
inc
dec
lahf
add
bound
xchg
inc
or
insb
mov
repz
stos
jb
cmpsl
and
mov
xor
fidivs
pushf
jmp
cli
lea
sbb
add
xlat
jb
pop
repnz
nopl
cmp
push
enter
xchg
mov
int3
inc
in
cmpsl
cmp
aas
int
push
pop
jmp
cmpsl
test
test
cmp
data16
lods
or
out
out
xor
popf
push
push
jo
call
test
cli
push
xor
add
pop
cmp
out
int
sti
mov
inc
adc
adc
lret
gs
or
outsl
xor
mov
xor
cmpsl
ljmp
pusha
mov
pusha
aas
xor
ret
in
or
push
jns
scas
test
inc
mov
push
xchg
out
stos
imul
sti
cmp
leave
adc
sub
cmp
clc
sub
pusha
in
ss
xchg
cwtl
in
push
mov
dec
mov
xor
jecxz
adc
das
sub
lret
js
push
fadd
xor
and
fidivrs
fmuls
and
mov
push
test
cs
mov
in
xor
das
imul
test
add
xchg
fisubrl
sub
orl
out
es
cmp
adc
iret
pusha
ret
or
imul
popa
cmovno
push
jle
sbbb
xchg
iret
iret
out
sub
sbb
adc
xchg
dec
cld
je
add
subl
mov
call
mov
push
mov
pop
sbb
push
inc
xor
ds
fldenv
shll
cmp
jne
int3
push
mov
add
lock
mov
js
mov
inc
inc
xchg
cmp
int3
dec
push
les
rcll
outsb
mov
lahf
adc
sar
dec
jae
push
notb
mov
sub
jg
call
lods
jl
jo
xor
and
loope
mov
and
fcmovnbe
inc
mov
dec
hlt
fistl
pushf
pop
out
cmp
or
jge
sbb
mov
sub
ds
cmp
movsb
mov
mov
outsb
mov
cld
je
xor
cwtl
lret
aam
mov
xchg
arpl
or
inc
cmp
repz
push
inc
jno
stc
mov
sub
loopne
or
clc
cmp
and
ljmp
scas
add
neg
mov
or
out
ret
cmp
push
mov
leave
push
cld
cmpsb
xor
cmp
enter
jecxz
or
pop
pop
add
push
and
shll
mov
sub
and
mov
lock
sub
in
pop
aaa
cmp
sbb
test
xor
lods
or
and
addb
inc
insb
rorb
cmp
xchg
hlt
lret
das
sbb
mov
scas
and
nop
inc
mov
cmpsb
fildll
jo
jbe
imul
das
rol
pop
push
xor
xlat
ret
jge
stos
ja
xor
dec
mov
stc
mov
mov
pop
sub
hlt
sbb
mov
mov
data16
lock
and
out
inc
mulb
js
mov
pushf
adc
cld
cmpps
dec
xor
sbb
pusha
xor
int3
in
arpl
xchg
ja
and
in
mov
jo
das
lret
sub
sub
testl
iret
lret
jmp
or
js
xor
fistpl
or
jecxz
scas
rclb
inc
xor
add
stos
xorb
lods
lahf
bound
xor
cmpl
hlt
cmp
jnp
shlb
push
stos
cltd
sub
out
stos
cmp
daa
inc
dec
notl
daa
fs
ss
imul
inc
push
sub
sti
pusha
stos
and
pop
mov
mov
or
inc
jecxz
ja
mov
out
lcall
rorb
sbb
push
mov
in
sub
xchg
test
es
faddl
sbb
sbb
jns
push
repz
frndint
jecxz
fcoms
mov
xlat
es
adc
cmpsl
into
outsl
mov
fldl
imul
pop
iret
lret
nop
lcall
rcrl
popa
dec
inc
rcrl
ljmp
test
adc
xor
mov
sbb
fdivr
cmpsb
icebp
and
test
add
jg
dec
dec
insl
fs
pusha
inc
mov
iret
int3
lods
or
stos
ss
pop
std
lds
adc
adc
lods
add
movsl
sbb
cld
cmpsb
pusha
xor
sbb
test
xchg
push
cmp
fsts
push
pop
pusha
mov
popf
and
xor
mov
cmpsb
cld
add
jmp
aaa
pop
les
mov
push
fidivs
jmp
xchg
mov
ficompl
jnp
xchg
dec
cs
popf
dec
push
sub
mov
in
mov
out
xor
outsb
into
iret
xchg
pop
xlat
and
imul
xor
sbb
bound
lahf
bound
mov
daa
adc
push
jmp
shlb
out
aaa
push
cmp
sub
dec
jl
scas
adc
sub
decb
sub
sub
insl
inc
lret
es
enter
mov
lret
jnp
inc
lcall
enter
or
and
push
jne
sub
cltd
push
sbb
test
lock
sub
push
in
lds
outsb
rorb
dec
and
sbb
cwtl
into
in
push
shll
outsb
sbb
mov
ss
sub
roll
jmp
xchg
mov
add
mulb
cmc
fnstenv
stos
sarl
inc
mov
enter
loope
negl
dec
cmp
pop
or
push
inc
test
cmpsl
je
add
into
aaa
scas
orl
aaa
addl
dec
movsb
jmp
dec
test
sbbl
adc
je
mov
xor
imul
addr16
push
clc
adc
test
adc
sbb
mov
test
xor
sbb
sbb
xchg
jge
adc
add
enter
movsb
gs
mov
push
bound
xchg
mov
sbb
jp
jmp
cmpsl
in
cmc
stos
inc
nop
add
mov
xchg
ficompl
pop
out
jg
dec
sbb
rcrb
inc
sti
push
sub
push
push
pop
and
aad
pop
rclb
cmpsl
clc
pop
cmp
jno
or
push
fisttps
cmp
not
stos
sarb
enter
sti
loop
js
pusha
mov
cmp
in
mov
cltd
orl
jnp
les
cmp
mov
mov
mov
dec
push
int
test
push
scas
inc
movl
jp
mov
dec
cltd
push
clc
pop
sub
enter
rcrl
mov
adc
into
add
pop
and
stos
pop
lret
mull
cli
nop
mov
xor
daa
ds
mov
insb
sub
inc
hlt
mov
popf
push
aas
mov
out
push
xchg
repz
cmpsl
pop
push
push
loopne
arpl
out
push
iret
adc
xorl
push
mov
jge
mov
push
xchg
mov
sbb
jle
mov
test
es
xorl
repz
add
ret
xor
sub
push
pandn
mov
fdivl
insl
pop
mov
popf
xor
imul
add
enter
dec
mov
jg
push
notl
or
sbb
push
adc
in
std
mov
test
mov
mov
or
ds
std
lcall
mov
test
lock
sahf
js
jmp
jmp
push
loopne
pusha
xchg
or
aas
std
dec
fdivp
sub
in
cmp
int
aaa
mov
cmpsl
pop
clc
push
pop
jbe
movsb
mov
dec
mov
jg
mov
insl
jb
jl
mov
mov
outsb
adc
jl
test
movsb
icebp
pop
xor
orb
ds
in
mov
dec
aam
sub
or
insb
add
loop
bound
or
mov
inc
cmp
and
mov
mov
outsl
sub
shrl
mov
lret
lahf
fdivrl
fs
push
sub
jb
enter
aam
mov
imull
jle
and
rorl
mov
cld
or
testl
cmp
mov
cmpsl
sub
jp
cmc
adc
popf
lret
cmp
test
cmp
sarb
push
dec
xor
push
popa
test
shrb
mov
pop
pop
cmp
xchg
les
pop
jg
xchg
xor
pop
mov
cmp
jbe
stos
inc
mov
add
fdivr
fidivrs
xor
bound
sbbl
andb
push
sti
adc
adc
std
mov
and
jle
arpl
mov
inc
sahf
push
adcw
pop
mov
ds
mov
bound
dec
ss
testb
mov
mov
stos
stos
ja
add
jo
cld
xchg
xlat
jno
pop
lock
mov
cmpsl
insb
jo
ret
rcrl
js
movsl
mov
in
fmull
pop
test
add
mov
lods
fiaddl
stos
push
fcoml
push
mov
insb
movsl
es
jmp
sbb
cmpsl
push
pop
mov
xchg
jb
mov
rol
das
scas
orb
pop
mov
lret
arpl
and
adc
fwait
cld
test
add
jg
adc
les
push
push
jns
cmp
sbb
das
icebp
cmpsl
fwait
outsb
mov
movsb
outsl
test
outsl
mov
push
inc
cmpb
imul
pop
ljmp
pop
push
mov
flds
xor
and
xor
enter
xor
push
push
arpl
push
fsubrs
into
and
mov
lods
push
or
outsl
push
ja
pop
cli
aaa
add
xchg
popf
sub
imul
lods
sbb
push
dec
movsl
mov
push
and
inc
or
std
imul
and
imul
xor
jnp
cmp
sti
insl
push
xchg
ret
cmc
xchg
out
pop
subb
imul
test
orb
mov
adc
push
add
fists
popa
inc
xlat
inc
add
push
fnsave
int3
pop
mov
inc
es
dec
adc
and
ss
repz
xchg
add
mov
xchg
inc
and
sub
jne
bound
movl
push
in
pusha
fcoms
rolb
mov
repz
repz
fldt
test
and
xchg
cld
lea
icebp
cmp
pop
mov
movsl
lea
movsb
pop
cmc
pop
jle
int
jns
jbe
loope
fisubrs
stos
push
cs
into
scas
jecxz
sahf
cmp
jo
push
cmc
adc
add
mov
sbb
out
sub
xchg
clc
gs
mov
dec
push
push
xchg
outsb
inc
jo
neg
pop
mov
add
inc
dec
add
cmp
movsb
sub
xchg
int3
sub
es
js
cmc
cmp
and
cltd
jbe
stc
and
movsl
push
mov
lds
addr16
cmp
sub
adc
popf
mov
cmp
cmp
stc
dec
hlt
into
inc
jmp
leave
jnp
xlat
idivl
adcb
jae
jo
adc
jno
sub
fsubs
sub
mov
push
iret
push
mov
push
mov
jae
pop
stc
xor
add
add
repz
xchg
lods
sbb
sbb
adc
mov
insl
lods
pop
dec
xor
inc
jle
aas
mov
and
je
sahf
inc
sub
pop
xor
mov
xor
fwait
mov
mov
add
mov
mov
mov
jmp
mov
jns
insl
xchg
dec
jg
add
jb
push
stos
add
not
pop
ja
push
dec
mov
sbb
fldt
enter
dec
je
add
add
or
mov
push
xchg
out
hlt
or
jg
cltd
xchg
cwtl
pop
mov
mov
lock
popw
or
sbb
cmp
or
mov
inc
ret
mov
sub
push
push
inc
pushf
push
jns
jb
imul
enter
dec
jge
mov
cmpsl
push
mov
adc
sahf
insb
xchg
sbb
or
mov
sub
popa
enter
mov
iret
mov
jp
mov
mov
fdivrl
xchg
and
addl
repz
inc
dec
es
sti
xchg
adc
and
jnp
call
aas
push
hlt
pop
cmp
imul
push
and
hlt
push
pop
mov
push
sub
pop
mov
cmpsl
xadd
mov
loope
xchg
pusha
jle,pt
cmp
push
and
sbb
jge
sbb
push
sub
divb
add
ja
int3
mov
data16
xor
mov
roll
adcl
imul
out
gs
mov
movsl
adc
sbb
push
mov
int
mov
repnz
fildll
orb
adc
mov
cmp
mov
mov
xor
jl
pop
clc
push
mov
sub
lea
pushl
push
or
add
xchg
lret
mov
mov
mov
fldcw
sbb
jns
and
push
mov
xchg
loop
aas
mov
leave
fdiv
scas
fisttpll
mov
fists
sahf
mov
mov
mov
int3
scas
repz
or
je
mov
notrack
mov
mov
enter
mov
loope
add
int3
push
ret
mov
mov
movsl
inc
ljmp
gs
fdivrs
cmpsl
and
daa
jle
jae
aas
leave
add
adc
test
jbe
outsl
insl
inc
push
dec
cmc
mov
inc
clc
arpl
dec
mov
fnsave
xchg
add
and
mov
stos
scas
lahf
mov
xchg
lret
add
jmp
shrl
sahf
insl
push
cmp
sub
leave
lods
loopne
push
push
fld
mov
sbb
out
ljmp
outsb
shll
xchg
mov
jmp
out
ret
adc
mov
cmp
fnstenvs
xor
out
aaa
inc
sti
mov
cld
dec
fidivs
mov
gs
push
out
jg
jnp
into
adc
and
pop
bound
inc
popa
or
iret
sbb
mov
sahf
pop
mov
stos
inc
lret
dec
decb
push
lods
loopne
cmpsl
inc
xchg
mov
pop
and
push
test
inc
loopne
push
lret
sub
les
aam
lds
sahf
pop
les
fmulp
push
data16
pop
mov
clc
into
les
inc
movsb
dec
sub
or
fildll
mov
sahf
call
cld
mov
shlb
test
adc
cmp
scas
int3
insb
xor
popa
bound
cmp
xor
js
imul
mov
and
movsl
roll
sbb
fldcw
cmp
pop
pop
flds
push
int
ret
inc
adc
dec
xchg
call
mov
into
and
jb
sbb
mov
mov
or
test
repz
and
popa
jl
hlt
bound
jge
sub
add
push
das
inc
dec
xorl
jmp
sbb
sbb
sti
mov
insb
jg
shrl
cmpsl
int3
imul
dec
push
es
and
inc
and
xor
push
xchg
push
xor
subl
add
sbb
subl
mov
scas
or
stos
adc
out
fdivs
mov
xlat
js
jno
lds
icebp
aaa
rolb
sub
dec
vpsubq
bound
mov
cld
xchg
mov
hlt
or
fldt
jno
ljmp
push
xchg
cwtl
adc
test
cwtl
lcall
movsb
fiadds
adc
shlb
xorl
inc
inc
pushf
pop
xchg
xor
ds
ret
shrb
cmpsb
test
jne
fmuls
push
push
push
add
cmp
rcr
outsb
es
push
jbe
ficompl
enter
adc
test
ja
pop
rcll
mov
das
jne
iret
inc
cmpsl
jo
sub
xchg
sbb
pop
push
adc
lret
cli
test
cmc
add
add
push
push
inc
cltd
inc
pop
inc
push
sub
or
and
loope
push
pop
cmp
pop
adc
movsl
jle
adc
push
xor
pop
call
adc
jmp
jmp
movsl
push
fmull
outsb
sbb
sub
ds
sbb
mov
clc
sub
and
sub
push
loopne
dec
add
sub
mov
xlat
mov
std
test
jp
xchg
cmp
inc
out
in
fucomi
mov
add
xor
mov
movsb
xchg
shlb
mov
pop
and
inc
ficoml
stos
adc
lcall
insl
stos
sub
xlat
dec
sub
js
clc
xor
pusha
push
sar
mov
repnz
xchg
mov
xchg
sbb
or
les
fistps
sub
cld
testb
int
xor
push
mov
pop
cmp
cmpsb
in
test
in
ljmp
out
push
push
popf
xchg
xchg
test
adc
dec
cmp
or
addl
call
sbb
sub
jp
cmp
sub
sbb
push
out
rcll
add
sub
call
aas
xchg
and
leave
loopne
add
xorb
xchg
and
xor
dec
adc
incb
jnp
push
jns
cmpl
mov
and
mov
xor
lret
or
movsb
repz
sub
xlat
sbb
xchg
push
pop
push
dec
pusha
mov
dec
hlt
mov
scas
int
imul
pop
dec
testl
arpl
out
mov
aam
aam
orl
dec
jno
and
imul
pop
pop
aad
xlat
iret
pop
add
lcall
xchg
xchg
dec
out
fimull
std
outsb
or
xchg
jmp
pop
xchg
jecxz
push
inc
dec
test
xor
addr16
fs
mov
std
dec
mov
orb
lret
sbb
mov
add
mov
cmp
sti
adc
mov
mov
cmp
sbb
push
push
aad
stos
cmpsb
into
test
jns
sub
ret
aam
leave
xor
jae
ret
stos
xor
dec
dec
mov
jns
sarl
gs
or
push
pop
movsl
sahf
add
fbstp
repz
ror
clc
xlat
xchg
sahf
cli
sub
inc
mov
push
jl
lahf
push
call
mov
cmp
xchg
clc
or
mov
adc
jmp
sbb
dec
out
ficompl
fbld
fwait
scas
lcall
lea
movzwl
push
jle
dec
pop
push
imul
mov
leave
push
or
stc
dec
pop
aaa
inc
pop
sub
inc
aas
mov
pushf
cli
pushf
or
test
push
jae
int3
mov
mov
addl
dec
loope
stos
call
mov
out
or
cmp
push
scas
imul
lcall
mov
inc
add
inc
sub
sti
cli
mov
xor
mov
cld
sbb
dec
leave
xor
xchg
xor
jecxz
sub
ss
mov
and
out
and
sub
dec
stc
mov
mov
dec
into
sub
cwtl
cmpb
popf
scas
add
pop
push
sbb
iret
hlt
mov
inc
pop
mov
ret
xchg
clc
js
mov
neg
sub
mov
mov
fistpll
movsl
mov
cwtl
imul
xor
sti
cmp
push
pop
in
or
or
dec
test
push
push
ss
pop
scas
lret
mov
xor
mov
scas
out
jmp
push
out
ja
cmpsl
sbb
test
pop
out
pop
je
int
mov
daa
xchg
sub
in
shrl
in
xorb
and
adc
or
push
or
and
sub
sub
dec
add
mov
add
or
inc
lods
xchg
ret
rcll
sti
fwait
repnz
add
xchg
lods
nop
testb
sub
mov
push
stos
filds
fists
sbb
pop
nop
lahf
pop
adc
or
push
repnz
mov
jecxz
inc
mov
pop
cld
mov
adc
inc
push
mov
out
stc
mov
call
jno
icebp
sahf
daa
cmp
sub
lret
les
dec
cld
jl
lds
mov
jge
arpl
and
dec
jp
mov
pop
ja
clc
or
lods
cmp
jno
xchg
inc
jmp
pop
mov
pop
mov
imulb
or
mov
push
lea
mov
dec
shl
push
cwtl
sahf
fstpt
mov
icebp
mov
sub
and
daa
pop
test
repnz
ljmp
push
test
test
loop
cmpsb
jmp
add
movsb
xor
test
push
pop
out
sahf
sbb
mov
movsl
rcrb
add
inc
stos
pop
mov
xor
and
mov
bound
aam
mov
call
cli
lea
inc
arpl
xchg
and
add
push
fstps
pushf
sub
cs
cmc
cmp
out
lret
mov
cmp
mov
fsubl
add
pushf
sbb
pop
je
pop
loopne
fnstsw
dec
lods
lret
outsl
sub
call
adc
xor
shrl
xchg
cmp
jmp
push
out
arpl
cli
sub
sbb
sbb
mov
mov
fnsave
jle
repz
scas
mov
pusha
fdivrs
xchg
insb
jnp
test
mov
ss
stos
inc
pop
and
clc
rol
mov
fmul
aaa
les
dec
flds
pop
hlt
movsb
push
xchg
loope
jo
mov
repnz
out
ret
push
mov
jmp
sub
bound
loopne
stc
int
lods
repz
test
pop
cli
js
stos
dec
pop
testb
add
mov
cltd
xor
pusha
push
loop
jae
ret
xchg
add
or
lret
lea
ss
pop
push
inc
daa
xor
and
xchg
push
shll
push
int
imul
pop
sahf
fld
and
movsl
stos
test
mov
and
jae
xor
lcall
adc
jge
nop
jno
fsubrl
mov
mov
cmpsl
mov
jmp
add
xchg
les
adc
idivb
xchg
repnz
cmp
push
adc
add
push
or
mov
mov
push
and
lds
push
xchg
and
sbb
aad
in
xor
lahf
push
popf
push
xchg
push
or
les
lods
enter
cmpsl
sub
mov
push
or
jb
cmpsl
pop
cld
test
lret
loopne
add
xor
int3
lahf
mov
xor
movsb
into
into
inc
outsl
cmp
or
dec
jno
lret
push
mov
mov
lock
and
cs
inc
lea
add
imull
and
arpl
xorl
aam
and
subl
orl
add
sbb
movsl
mov
fisttpl
mov
aad
pusha
arpl
fmuls
push
xchg
test
lods
jmp
movsl
rcll
bound
inc
test
cli
mov
cmp
lcall
sbb
xchg
loope
fistps
sbb
and
loope
push
daa
pusha
and
mov
dec
lea
aad
les
xor
cld
push
je
rorb
mov
mov
shrb
cmp
push
or
jae
hlt
xor
mov
jne
std
mov
cld
jmp
jmp
ja
sub
sbb
add
div
outsb
clc
jne
loopne
add
clc
xorl
rcl
inc
div
inc
je
sbb
and
mov
and
lret
addr16
mov
cmp
out
sbb
xor
nop
sbb
pop
sbb
and
mov
lods
jecxz
orl
mov
xor
xchg
call
cltd
cmp
das
dec
xor
mov
in
xchg
dec
xchg
xchg
lods
mov
sub
sahf
mov
call
lret
out
xchg
and
xchg
loopne
jno
es
aas
jg
icebp
sbb
cli
push
cmp
vpsubsb
in
out
in
jge
xlat
loopne
or
xchg
fbld
fnsave
pop
into
xor
enter
bound
popa
or
xlat
jnp
orl
rep
call
push
in
es
inc
clc
or
pop
mov
dec
dec
and
adc
push
movsl
cmp
insl
push
ljmp
pop
fwait
mov
rorl
jnp
movlps
sahf
push
pusha
xlat
in
negl
movsl
pop
mov
push
adc
mov
scas
cmp
jns
ljmp
adc
mov
movb
and
loope
mov
sarl
mulb
bound
imul
inc
jle
setg
jecxz
neg
lahf
dec
fwait
sub
jb
addl
stc
out
inc
jo
push
lahf
push
sub
xor
icebp
movsb
dec
popf
int3
in
push
mov
and
xchg
adc
xchg
dec
data16
in
jns
push
dec
jbe
shl
dec
lods
insb
out
shrb
fidivs
mov
or
sti
lods
jecxz
lahf
popf
push
pop
cmp
inc
push
into
call
js
xchg
daa
mov
iret
adc
mov
lea
xchg
mov
mov
cmp
sti
jg
je
js
sub
adc
out
leave
pop
xor
mov
xchg
int3
mov
mov
xor
mov
ss
add
mov
mov
pop
mov
mov
loope
jge
xchg
sahf
shl
test
in
push
sub
mov
mov
sbb
mov
mov
mov
in
iret
pusha
and
bound
pop
add
lds
push
pop
dec
and
fstl
jno
push
test
ret
test
pop
push
cwtl
mov
inc
mov
jae
pop
out
jmp
adc
mov
lds
add
das
cmp
fs
mov
xor
push
popf
xor
scas
cmpsb
push
fstl
cmp
enter
jno
pushf
mov
enter
imul
xor
push
imul
sarl
xor
or
repnz
ljmp
mov
pop
inc
ss
aad
push
xor
sbb
xchg
bound
and
fmul
mov
lcall
fisubrl
hlt
push
sarl
dec
loopne
add
movsb
sub
in
inc
adc
mov
sbb
xchg
int3
outsb
inc
jl
lahf
lock
imul
xchg
stos
daa
mov
and
lret
pop
xchg
push
aam
sub
adc
fwait
jae
fsubl
and
inc
pushf
icebp
outsl
sub
sbb
lahf
mov
hlt
sub
add
adcb
insl
les
negb
push
xor
shlb
push
lods
insb
push
sub
sti
push
pushf
pop
test
mov
orb
pop
mov
in
pop
sarl
xor
into
imul
mov
loope
mov
mov
bound
cmpb
or
xlat
out
mov
ss
sub
sbb
mov
xchg
jne
movsl
sub
cmp
std
js
mov
mov
sbb
push
inc
iret
or
mov
test
rcrl
and
rcll
cmp
es
jecxz
movsl
sahf
and
out
jbe
inc
lret
mov
cmpsb
adc
fwait
and
xor
sarl
or
movsb
inc
lret
xchg
shll
cltd
insl
xlat
xor
movsl
sbb
cs
ds
ss
cmp
xchg
adc
dec
mov
incl
out
or
dec
mov
aam
fistpll
mov
adc
out
mov
stos
fstpl
aas
loop
ret
xchg
dec
jl
pop
mov
push
pop
jmp
pop
pushf
rclb
leave
imul
pop
cmp
mov
test
push
inc
mov
mov
xchg
ds
pushf
mov
orb
jns
mov
jg
addr16
cmpsl
pop
rorl
cwtl
inc
xchg
iret
repz
push
adc
repnz
imul
faddl
dec
sbb
pop
and
xor
pop
jl
add
cmp
jge
popf
jmp
jae
xchg
divl
fiadds
in
lea
pop
cmp
scas
push
mov
fisubl
clc
and
cmpsb
insl
pop
xlat
int3
push
lods
pop
repnz
in
inc
push
mov
shlb
mov
ret
and
add
jo
xorl
pop
xchg
sub
mov
in
cmp
jns
jmp
adc
cltd
jo
or
and
mov
divl
xchg
sbb
popf
leave
stos
addr16
loope
pop
cmp
in
mov
mov
mov
int3
cli
jne
sub
std
in
ss
aaa
mov
shll
dec
rcrb
insb
scas
inc
fdiv
mov
pop
xor
inc
or
outsb
inc
cmp
dec
inc
mov
push
ss
sbb
mov
xlat
xchg
mov
pusha
mov
mov
mov
in
jle
cs
adc
insl
dec
dec
lcall
or
fdivl
mov
and
in
icebp
xchg
mov
mov
adc
push
add
mov
jns
bound
sbb
mov
hlt
adc
in
imul
scas
sub
dec
test
sub
mov
xchg
pushf
negl
jl
aad
or
xchg
and
push
leave
das
mov
jl
sbb
ret
adc
pop
aas
and
lahf
mov
xchg
mov
push
enter
mov
test
lods
xchg
aad
jo
pushf
xchg
inc
shl
or
test
aam
mov
loope
xchg
push
cmpsb
pop
fistpll
xchg
and
push
mov
and
sub
add
sarl
das
aam
xor
dec
xchg
in
imul
scas
mov
ja
mov
scas
in
adc
ffreep
mov
xchg
or
fs
stos
es
pop
lea
stc
pop
push
cmc
mov
aad
test
cld
inc
push
or
mov
decl
ret
inc
jmp
dec
add
pusha
sub
xchg
xchg
int3
into
lods
gs
and
mov
lock
movsl
jb
inc
nop
ljmp
add
frstor
pop
dec
sbb
lret
mov
out
dec
pusha
lock
lcall
xchg
mov
iret
mov
je
jge
sahf
xchg
cmp
pushf
mov
pop
push
xchg
or
sub
test
pusha
scas
fwait
pop
fstps
push
mov
inc
ljmp
pop
aad
pop
in
out
or
cmp
gs
in
jmp
sti
leave
push
hlt
ret
stos
lock
daa
push
movsl
ss
subb
out
add
mov
dec
inc
adc
sub
dec
dec
push
insb
test
fwait
xor
inc
xor
gs
cmc
mov
pop
inc
inc
or
adcb
pusha
stos
rcrb
sti
sub
push
push
and
ja
push
sub
cmpb
or
push
mov
repz
xchg
mov
dec
or
pop
and
add
cmp
and
lret
fs
xor
mov
lods
jg
mov
scas
xor
push
out
fisubs
push
fdivrl
xor
in
clc
push
scas
icebp
pop
push
ja
rol
rcll
xchg
in
ds
xlat
js
jle
sbb
pop
push
and
js
cmc
mov
or
insl
data16
inc
and
or
subl
test
mov
sbb
hlt
sbb
sbb
dec
test
jg
test
mov
cmp
iret
sti
mov
or
sub
das
pop
mov
lods
int3
outsl
inc
add
popa
lds
or
jae
cltd
int
icebp
shlb
lds
or
pop
movsl
xchg
enter
xchg
mov
xor
lds
enter
cmc
jg
cmpsl
test
and
pop
into
sbb
sbb
lods
mov
cmp
xor
xchg
xchg
mov
imul
xchg
enter
xorl
subb
dec
and
lcall
loop
mov
or
call
in
or
adc
mov
icebp
xchg
in
mov
inc
and
lret
lcall
mov
mov
aaa
lea
adc
pop
cmpb
in
nop
jge
mov
cmp
xchg
adc
or
xchg
pop
push
ret
int
push
mov
add
aaa
adc
sahf
mov
cmp
jle
cs
jmp
cld
jp
lcall
ds
cmp
mov
shll
ljmp
cmp
xor
pop
mov
mov
jl
movsb
push
jns
add
mov
std
push
stos
loop
add
and
stc
icebp
adcb
imull
adc
imul
shrl
in
out
push
inc
and
and
add
ficompl
xchg
andl
mov
pop
mov
push
mov
sbb
sub
icebp
adc
xor
cmc
in
inc
cmp
das
shrl
leave
jp
mov
sbb
push
xor
or
scas
mov
or
add
inc
fs
cmp
pushf
pop
js
mov
jno
pop
or
or
pusha
add
mov
test
mov
mov
and
push
xchg
pop
inc
ds
into
mov
ret
loop
sub
pop
cwtl
dec
std
inc
and
sbb
mov
sarl
test
inc
fwait
mov
jns
xchg
xor
jg
mov
adc
push
pop
movsb
nop
popw
out
ret
sub
add
sbb
and
ficoml
mov
and
push
dec
pop
or
dec
popa
push
lahf
sub
xchg
ds
scas
push
jge
mov
or
inc
mov
add
pop
push
scas
movsl
jns
dec
dec
test
es
ja
fbstp
sti
es
into
mov
pop
mov
cs
clc
mov
pusha
jp
sbb
cmp
enter
incb
fisttps
xchg
mov
cltd
mov
sahf
pop
cmpsb
ret
test
aad
mov
adc
nop
sub
nop
sahf
test
in
in
imul
xchg
push
pop
ja
xchg
enter
shl
mov
dec
push
adc
lods
jle
lods
mov
shl
dec
xor
scas
jl
add
into
cmpsb
add
test
aaa
or
in
dec
push
int
pop
mov
xchg
test
adc
subb
sbb
call
jle
lods
jl
push
lcall
push
lahf
xor
in
mov
or
shl
push
xchg
mov
xchg
pop
lret
dec
fbld
push
int
jp
sti
and
pop
outsl
push
movsb
cwtl
jno
lret
fwait
mov
and
dec
jl
mov
xlat
bound
xor
adc
aas
out
sbb
mov
xor
push
shrb
cmp
sbb
std
or
adc
arpl
ret
xor
lea
cmc
xor
mov
xchg
mov
jge
pop
add
xor
cmp
inc
pop
adc
or
in
movsb
xor
fsubrs
sub
mov
call
bound
scas
cmp
rcrl
cld
scas
fiadds
mov
out
cmc
mov
nop
mov
fdivrp
sub
mov
test
lret
pop
sub
andl
fisubrl
xor
ja
rorl
or
nop
sahf
dec
mov
xor
lds
pop
push
dec
sbb
mov
out
lcall
and
push
cmp
cwtl
cmp
add
adc
mov
push
add
lret
mov
sbb
es
push
xchg
adc
xor
jp
imul
or
push
out
imul
push
sub
hlt
jo
mov
es
mov
mov
data16
movsb
mov
lcall
lahf
jecxz
mov
mov
jae
push
jmp
lahf
clc
mov
out
jmp
cmc
aad
nop
jb
mov
or
aaa
pop
cmp
and
cmpsb
sbb
daa
and
sub
fistps
jmp
push
sub
mov
lret
sub
add
sahf
or
das
sub
push
cwtl
mov
out
sti
sub
stos
or
cli
andl
ret
arpl
adc
jmp
mov
xlat
mov
pop
fwait
jl
fisubs
add
mov
adc
xchg
ljmp
in
call
dec
cmp
push
cmp
shlb
add
or
ds
cmpsl
sub
lret
dec
inc
pop
mov
xchg
cmp
mov
pusha
shlb
inc
data16
sub
aas
push
sub
add
fdivrs
dec
mov
dec
outsb
dec
insb
dec
inc
xorl
cwtl
dec
loop
adc
mov
sub
mov
stos
push
test
push
pop
or
mov
push
sbb
adc
pop
rolb
push
add
xor
lods
and
and
in
aaa
jns
jecxz
addl
imul
xchg
das
lods
sti
mov
ja
push
fstp
mov
adc
in
dec
sub
test
xor
xor
rcl
lcall
adc
pop
xor
cltd
inc
lahf
nop
xchg
xor
stos
add
in
test
std
push
addl
hlt
into
out
arpl
lods
clc
shl
hlt
pop
lret
push
push
repz
ret
jae
shrb
adc
push
outsb
xor
out
jo
push
mov
push
push
xchg
imul
mov
push
sti
sbb
ljmp
cli
loop
imul
cmp
add
or
add
jmp
dec
pop
mov
pop
mov
out
adc
test
jge
mov
or
mov
mov
jle
push
cmp
and
or
andl
cmc
pop
adc
or
mov
cmp
test
fwait
pop
test
in
negl
pop
stc
movsl
in
int
mov
sub
pop
dec
xchg
lahf
daa
stc
pop
jno
icebp
scas
gs
sbb
jbe
or
or
xchg
in
or
js
iret
xchg
adc
clc
insl
jae
sub
ret
lock
or
xchg
pop
xchg
lcall
outsl
mov
out
iret
loope
fwait
dec
ret
pusha
sahf
movsb
pop
addb
or
arpl
mov
sbb
xor
jae
rcrl
icebp
sub
ss
xchg
mov
cmp
xor
neg
jle
mov
add
mov
dec
ret
out
add
sbb
fistpl
sbb
mov
roll
xchg
push
xchg
or
aaa
sub
and
inc
test
dec
cmc
xchg
inc
sahf
ret
je
hlt
jmp
out
push
sahf
iret
sub
shlb
ja
mov
rorl
sbb
insb
xchg
xchg
adc
movsb
pop
inc
add
shlb
fldt
mov
js
push
inc
aas
addr16
mov
mov
inc
sbb
mov
sub
jnp
es
je
in
out
mov
stos
cwtl
stos
or
mov
and
or
xor
hlt
sbb
enter
call
pop
mov
and
add
or
push
jge
ficoml
es
or
je
scas
jb
push
and
cmp
xor
insl
add
movzwl
fbld
mov
scas
jge
in
cwtl
iret
arpl
sbb
xor
cmpsl
lods
js
mov
push
sub
xor
fadd
mov
dec
jo
arpl
inc
mulb
push
or
xor
mov
cmp
sub
rcrl
pop
pop
push
jb
lods
arpl
addr16
out
dec
test
into
pop
mov
push
jnp
nop
pushf
and
xchg
incl
imul
jb
xchg
mov
adc
cli
pop
addr16
mov
movsl
adc
lret
jnp
ss
sbb
leave
rclb
or
mov
dec
add
mov
lds
inc
sbb
push
lods
mov
popf
cmpsb
push
test
add
cmp
call
aas
aad
pop
adc
jmp
lods
pop
dec
pop
outsl
roll
pop
and
mov
xchg
gs
or
add
mov
mov
loopne
stos
rorl
lea
xor
divb
shlb
add
int3
and
fimuls
pop
daa
scas
mov
cmpsb
jbe
mov
repnz
ret
fimull
adc
das
push
mov
mov
or
push
mov
inc
cmp
or
mov
insl
push
aas
mov
mov
aaa
mov
and
pop
test
loopne
jns
lahf
leave
pop
rolb
and
xor
dec
inc
jmp
mov
inc
repnz
sahf
cmp
pop
and
xor
mov
pop
mov
and
insl
ja
xor
adc
adc
push
sub
xchg
mov
jp
pusha
dec
loop
arpl
fs
mov
mov
jne
add
sti
mov
pop
inc
mov
fistpl
mov
and
aam
fbld
xor
push
inc
xor
mov
ret
or
sbb
xchg
or
pop
insb
fnsave
and
in
push
cmp
out
mov
xor
jae
mov
mov
iret
clc
lock
jge
push
or
das
in
or
mov
push
les
xor
hlt
or
insb
mov
cmp
cmp
ficoml
xchg
repz
sub
cmp
out
push
cmpb
adc
pop
pop
js
movsb
xor
sbb
shrl
push
fdiv
bound
mov
jge
mov
sarb
lods
jecxz
inc
and
mov
mov
iret
test
imul
mov
xchg
rclb
jb
sbb
fildll
mov
jp
jno
fisubrs
jl
jbe
cmpsl
inc
mov
cmp
sub
cmpsl
divl
dec
rcrl
divb
jne
orl
jnp
adc
mov
add
call
sbb
addr16
adc
xorb
fwait
repnz
mov
inc
int3
xchg
cwtl
cmp
or
popa
sub
jp
and
insl
xchg
xchg
jp
pop
fs
imul
aam
adcb
sbb
scas
movsl
jge
imul
mov
cmpsl
inc
scas
ret
test
and
jb
les
cmp
add
add
sub
dec
test
pop
xchg
cltd
sub
inc
fnstenv
sbb
xchg
adc
mov
rcr
insl
pop
mov
cwtl
inc
imul
mov
arpl
sbb
lds
pop
jg
mov
fdivrl
ret
jmp
flds
or
mov
and
insl
mov
pop
mov
aam
mov
adc
loope
sub
mov
out
xor
jl
cmp
lods
out
push
mov
add
jmp
jmp
rorl
pushf
push
add
into
test
mov
add
fcmovnbe
rcrb
mov
push
rcl
mov
add
out
sbb
mov
add
inc
pop
lds
inc
dec
add
and
xor
dec
pop
pusha
cltd
xchg
sbb
repz
mov
or
dec
out
int3
adc
xor
xchg
icebp
add
pop
pop
add
outsb
jecxz
mov
pop
mov
and
cs
dec
dec
sahf
cmpsl
mov
test
adc
mov
lds
roll
ss
push
test
dec
add
insl
gs
jp
xchg
dec
inc
incl
movw
lret
jmp
dec
or
xchg
sbb
cmp
mov
ja
push
mov
inc
aas
mov
aas
pop
sbb
sbb
lods
lods
pop
stos
mov
sbb
dec
adc
push
pop
mov
push
mov
jle
or
repnz
fidivl
inc
das
inc
push
clc
ret
daa
es
adc
cmp
and
jo
sti
xor
push
adc
faddl
outsb
jp
or
inc
dec
in
adc
in
sete
pusha
cwtl
data16
xchg
mov
sahf
cltd
int
movsb
or
inc
push
inc
xchg
or
movsb
sbb
rcr
cmpsb
inc
xchg
insb
mov
lcall
or
sbb
jp
jle
or
xor
xchg
pushf
xchg
push
xchg
loopne
mov
pushf
in
movsl
jb
insl
std
out
adc
enter
imulb
or
and
pop
negl
mov
jb
stc
fadds
stos
fs
jo
call
ret
lods
add
out
xchg
sub
int
pop
mov
cmp
and
mov
add
outsb
xchg
pushf
sub
jmp
lret
rolb
xor
pop
sub
imul
icebp
sub
stc
aaa
repz
cmp
leave
hlt
std
movsl
mov
inc
sub
ja
or
bound
cmp
jmp
lods
push
jmp
xlat
aas
sub
scas
mov
rol
loope
sbb
sbb
cli
pop
test
loop
pop
jmp
jne
add
fsubrl
movsb
mov
clc
faddl
mov
cltd
aas
xor
addl
inc
cmp
dec
dec
lods
push
fidivrs
lods
pop
lods
sahf
sub
mov
sti
xchg
inc
insb
sbb
push
push
push
out
dec
xor
bound
dec
jb
mov
mov
sbb
jg
push
mov
ror
int
adc
mov
stc
insl
cld
cltd
adc
jecxz
push
jmp
sub
push
dec
xor
pusha
inc
cmp
cmpsl
shlb
sbb
jp
mov
and
adcl
mov
sbb
repz
cld
js
sbb
mov
add
push
pop
xchg
sbb
lds
sar
femms
push
dec
rorb
sbb
lods
jp
mov
inc
bound
mov
adc
cwtl
sbb
xor
add
pop
mov
iret
jb
mov
mov
icebp
jns
stos
push
cwtl
stc
xchg
sbb
sub
push
xchg
push
push
dec
and
hlt
jp
and
jno
nop
repnz
into
outsl
jg
mov
adc
popf
ja
jnp
cli
and
and
in
sbb
cli
push
push
mov
aaa
xchg
int3
mov
addb
mov
daa
jnp
push
pop
movsl
les
mov
pusha
scas
or
xchg
pop
pop
xchg
xchg
add
xor
test
in
cli
fcmovbe
test
aad
fsts
dec
mov
aad
push
pop
pop
pushf
cmp
mov
xor
and
out
lret
add
push
cmp
pop
das
xor
out
jmp
mov
lods
and
dec
mov
xchg
xor
stc
ds
into
imul
mov
or
arpl
mov
sbb
pop
push
or
mov
push
mov
cmp
or
mov
push
subb
jecxz
xor
pop
in
dec
adcb
adc
sbb
add
cmp
xchg
pop
loopne
divl
mov
jle
hlt
movsl
push
roll
xor
sub
sbb
jmp
mov
pop
out
or
adcb
pop
orl
jmp
clc
loope
add
out
adc
push
decb
hlt
fdivrl
scas
lret
pop
scas
dec
repz
cmp
popf
sahf
xor
xchg
jno
std
dec
xor
mov
push
xchg
or
pop
icebp
and
sbb
xor
push
mov
imul
fwait
inc
pop
imul
es
add
out
sub
and
imul
jmp
fmul
push
aam
add
mov
insl
mov
mov
daa
dec
int
xchg
sbbl
out
mov
pop
xor
pop
jae
xor
stos
fsubs
cld
xchg
in
mov
andl
inc
jle
push
mov
xor
mov
popf
fcoml
outsl
and
sub
cmpsl
mov
stos
loope
popf
push
lcall
push
mov
or
outsl
cmpsb
les
push
jne
jge
dec
sub
lods
js
sub
sub
divb
adc
repnz
cmp
cmp
and
stos
fisttpl
inc
test
pop
lods
add
aam
pop
mov
mov
dec
stos
test
and
mov
sarb
and
subl
aaa
pop
mov
nop
xchg
mov
test
sub
push
adc
adc
push
rcll
rol
lret
cli
andl
xor
sbb
xchg
jl
imul
xorb
cmp
mov
dec
lcall
pushf
daa
repnz
xor
ret
mov
int3
jge
call
adc
orl
and
or
mov
cmp
push
in
bound
pop
fcoms
fistpll
lds
mov
add
jmp
aaa
adc
lcall
push
dec
pop
jno
dec
dec
hlt
loope
stos
xchg
data16
pop
lret
sbb
or
sbb
arpl
or
scas
repnz
mov
cld
sbbl
movsb
shl
adc
jp
pop
and
inc
pop
add
adc
pop
sub
push
inc
xchg
lds
call
popf
jns
mov
decl
lods
push
test
sub
dec
fsubr
or
filds
mov
out
sub
pop
lds
dec
bound
adc
add
adc
jns
mov
cmp
jae
sbbb
lods
outsb
mul
icebp
push
xchg
mov
mov
cs
push
popa
rcll
negb
loopne
push
and
movsl
sbb
incb
jns
add
stos
inc
or
mov
mov
test
div
shr
pop
subl
fsub
movsb
lds
and
inc
movsb
nop
pop
movsb
test
fs
lret
jle
or
mov
push
add
cs
adc
hlt
out
cwtl
pop
and
push
rorb
data16
pop
inc
mov
mov
pop
push
or
lcall
push
stos
iret
loop
shlb
xchg
loopne
in
push
pop
or
rorl
loopne
pop
outsb
sti
test
sub
push
and
xchg
push
mov
ljmp
adc
xor
add
mov
js
pop
fwait
icebp
dec
push
jns
int
lds
inc
sbb
popf
xor
shll
out
push
jmp
xchg
ret
sub
jno
pop
adcl
jb
cs
aam
ds
les
out
xchg
int3
mov
mov
clc
xor
popf
sti
jae
push
and
jg
subb
xchg
cmp
js
ds
mov
xchg
loope
xchg
inc
aaa
jecxz
push
adc
testb
xchg
movsl
inc
in
rcrb
cmp
int
outsl
jae
sbb
aaa
mov
add
loop
and
cwtl
adc
pop
ficompl
outsl
sbb
bound
add
insl
push
lock
in
or
pusha
and
mov
jge
dec
mov
int
xchg
idivl
dec
mov
inc
and
jbe
ljmp
sbb
fnstsw
es
nop
mov
sub
cmpsl
pop
rclb
push
adc
pop
jmp
outsb
jns
sbb
cwtl
cmc
xchg
jae
bound
rorb
push
mov
rolb
mov
fcompl
xor
mov
arpl
mov
outsl
sbb
mov
je
push
les
jb
inc
fldt
insl
enter
cltd
iret
negl
stos
xchg
push
xor
fs
mov
mov
fisubl
jb
xlat
std
cmp
repz
mov
pop
push
sti
sbb
lds
cltd
xlat
and
ret
dec
sub
or
fistps
cmc
repnz
scas
aam
jg
repz
lret
push
push
jge
in
enter
push
cs
jmp
cwtl
ds
xor
in
cmpb
test
xorb
mov
mov
mov
mov
cmp
dec
aam
pop
sahf
xchg
sub
mov
push
push
pop
ret
stos
pop
int
dec
mov
fs
add
sub
pop
lods
cmp
and
shrb
outsl
inc
sub
push
push
std
cmc
cmp
mov
test
int3
cmp
movsl
sbb
pcmpgtw
test
dec
jecxz
insb
cmp
in
in
pop
adc
and
sbb
jbe
fldenv
pop
mov
xor
jl
pop
pop
mov
mov
mov
or
mov
aas
inc
call
xor
insl
idiv
loope
ljmp
insl
mov
pusha
mov
dec
aam
enter
push
stc
jge
jo
lret
cmp
add
mov
cmp
xchg
and
fsub
insb
xchg
fmulp
pop
pop
cmpb
sbb
or
xchg
inc
in
sbb
popf
enter
add
add
or
add
arpl
fildll
inc
aam
and
das
and
pop
outsl
rorl
jmp
jno
adc
mov
push
xchg
daa
in
cld
push
orb
bound
sbb
dec
cmpsb
cmp
add
add
mov
and
shr
xchg
imul
add
pop
or
gs
jno
xor
ja
outsb
movsb
dec
cwtl
fisttpl
iret
mull
cltd
cmpsl
test
out
xchg
or
outsl
xchg
pop
and
ss
mov
pusha
jbe
mov
pop
mov
xorb
adc
out
lret
xor
push
adc
dec
loope
std
sbb
fdivl
xchg
mov
ja
cmp
pop
sbb
pop
call
inc
outsb
push
dec
xor
movsb
in
rclb
adc
cltd
int
rorb
jge
sbb
push
into
pop
xchg
mov
loope
or
les
xor
repnz
hlt
sub
fidivs
pop
nop
lods
imul
clc
mov
adc
mov
adc
pop
adc
cmpsl
jbe
add
arpl
push
stos
pop
push
push
int
rclb
sbb
pushf
arpl
xchg
or
outsl
cmp
movsb
bound
push
stc
mov
pop
movaps
lods
ficoms
mov
bound
cltd
cmp
inc
jb
ja
jns
pop
sub
xchg
push
or
lock
inc
xor
mov
or
cwtl
cmp
mov
icebp
mov
cmp
or
ljmp
data16
pusha
inc
push
mov
repz
ret
or
inc
loope
arpl
jb,pn
cmpsl
mov
xchg
lods
mov
cmp
fs
inc
ja
out
and
push
cwtl
test
decb
jne
push
ficompl
add
pushf
dec
nop
mov
out
or
xchg
xlat
push
daa
xor
jmp
sub
fdivl
popf
pop
jo
xor
js
dec
out
adc
data16
mov
pushf
ds
mov
adc
adc
mov
pop
jmp
jecxz
fildl
mov
out
imul
icebp
pop
sub
pop
mov
sbb
dec
pop
lahf
pop
movsb
ret
jo
push
fldcw
or
mov
imul
cld
cmp
push
andb
inc
push
adc
icebp
dec
sub
or
pop
cmp
jle
sbbb
and
jb
out
xchg
popf
sub
sub
mov
mov
xchg
fsubl
mov
push
scas
lahf
call
jmp
dec
scas
in
ja
push
mov
call
push
add
call
xchg
add
jle
inc
cwtl
addr16
popa
pop
jmp
rcll
loop
outsl
inc
adc
cmc
mov
les
pushf
lds
inc
mov
aas
out
or
stos
or
cmp
xchg
push
pop
mov
mov
ljmp
push
adc
inc
dec
jle
xchg
test
xchg
xchg
pusha
inc
cmp
xor
jno
idiv
mov
imul
loope
pop
adc
adc
xchg
cmpsl
cmp
es
cmp
pushf
mov
andb
fiadds
xor
mov
outsb
loop
shrb
fdivl
loop
lds
inc
out
xchg
scas
sub
loopne
icebp
rcl
mov
mov
fsubs
cmp
cltd
inc
test
jae
push
call
and
or
xchg
mov
notl
addb
addr16
dec
insl
pop
loopne
outsb
jecxz
inc
shrb
sbb
cld
insl
dec
xchg
scas
cmpsb
lea
roll
inc
pop
pushf
mov
lods
jmp
lds
xor
push
sahf
dec
inc
into
daa
fdivs
movsl
cmp
xchg
mov
or
sbb
xchg
sti
outsb
movlps
add
aam
scas
cld
adc
loope
loopne
ret
mov
sub
ss
mov
pusha
int
in
mov
inc
fmull
sbb
mov
test
cltd
sub
in
addl
mov
push
fnstsw
sbb
or
jns
cs
ja
jns
pop
mov
xchg
dec
cmp
popa
iret
mov
mov
loop
jl
xor
stc
jb
jno
outsl
or
push
cmp
dec
sti
adc
push
xchg
or
xchg
mov
imul
jns
ljmp
add
test
mov
cmpsb
cmp
adcl
and
push
dec
in
push
jo
push
clc
mov
sub
cld
pop
push
out
ret
data16
xchg
xchg
jp
dec
inc
imul
out
dec
lods
sub
and
mov
ljmp
sbb
insl
mov
sbb
lret
add
iret
or
ja
loope
mov
mov
aam
lods
jg
cmc
faddl
xor
pushf
and
adc
pop
cmp
cld
xchg
iret
ljmp
aas
or
jo
fsubrl
adc
mov
adc
adc
int
xor
cltd
dec
cmp
popa
pop
sbb
out
or
aaa
into
jle
xchg
lods
push
incb
add
out
mov
jbe
insl
mov
xchg
cld
adc
push
push
or
call
jge
mov
mov
ss
jno
jb
add
add
sub
mov
jbe
sub
es
loopne
data16
cmp
fistps
push
addb
pushf
mov
mov
jle
mov
jle
gs
dec
cs
adc
sbb
push
lock
jns
shlb
add
mov
test
imul
nop
ja
cmp
sahf
popf
dec
in
aas
andl
mov
cld
cld
dec
mov
sub
jae
in
push
je
test
inc
arpl
daa
push
inc
or
cltd
mov
ja
popf
jge
lret
xchg
fistps
and
inc
in
and
addr16
xor
enter
js
cltd
xlat
push
stos
cmovbe
lds
clc
inc
pop
lods
pop
cmp
arpl
sarb
arpl
or
jmp
imul
xor
hlt
push
ret
jb
aas
lods
gs
into
nop
sarb
or
push
xchg
in
pop
adc
mov
mov
jb
popa
xor
mov
mov
nop
xchg
cwtl
sbb
sbb
ret
out
pop
mov
jns
or
or
mov
stc
cmp
pop
pop
jl
sarb
icebp
jl
push
mov
mov
jg
or
sub
jmp
jecxz
inc
pop
mov
pop
mov
fimuls
sub
jno
popf
pop
xor
fstpt
sbb
fwait
mov
xchg
fldcw
lret
movsb
jle
or
xor
ret
and
aam
adc
sub
sub
movsb
inc
ss
ret
test
daa
aaa
fildll
mov
mov
xlat
call
mov
sbb
movsl
push
jae
scas
jno
jl
sbb
push
int
sbb
mov
adc
loopne
pop
mov
or
pusha
mov
mov
mov
repz
leave
popa
fldt
hlt
pxor
inc
fs
rcrl
push
sbbl
cmpsb
lock
js
adc
push
mov
pop
dec
xchg
shl
fwait
cmpsb
ficoms
fidivs
or
inc
mov
nop
fsts
pop
jmp
jne
gs
pop
fwait
inc
dec
inc
pop
mov
into
push
sbb
notl
rorl
push
sbb
mov
jecxz
dec
ret
lods
fstl
push
adc
push
cmp
mov
mov
push
xchg
xlat
sahf
pop
aaa
cmpxchg
cmp
sub
test
push
jo
dec
xchg
cli
lret
lds
sub
add
mov
pop
in
dec
orb
add
scas
out
subb
leave
ds
call
mov
sti
push
into
jb
sti
mov
jb
addr16
in
mov
adc
jp
in
icebp
sbb
je
frstor
xor
imull
dec
int
sbb
ds
unpcklps
or
or
xchg
sahf
pop
hlt
xor
jno
lds
add
loopne
es
add
cld
int3
es
lret
add
mov
pushw
ret
jne
mov
out
icebp
adc
push
das
cmp
lods
negl
ljmp
lock
xchg
les
cmp
aad
cmp
jns
inc
js
mov
sahf
aaa
lahf
lcall
hlt
lcall
xchg
gs
dec
mov
sub
out
shll
shll
xchg
int
in
hlt
fidivl
test
pop
jne
lock
movsb
test
fdivrl
scas
jae
test
retw
dec
cmp
pop
xor
rcrl
movsb
cwtl
sahf
aad
incl
nopl
adcb
jp
lock
das
lret
mov
int3
push
sbb
orl
jl
pushf
rcrb
dec
leave
loope
das
pop
cmp
call
jl
dec
ljmp
rclb
sbb
pusha
gs
push
not
mov
xor
xchg
dec
imul
loope
loop
mov
and
das
ret
push
cmp
mov
loop
cmp
adc
xchg
lret
push
ret
mov
fbstp
add
test
and
loop
shl
shll
adc
and
dec
push
sbb
mov
sub
or
mov
jnp
xor
lock
cltd
or
or
loope
lret
inc
add
aad
pop
and
mov
lret
incl
in
shrl
bnd
mov
pop
out
sub
or
dec
ss
aas
mov
jecxz
decb
ja
sub
mov
lcall
imul
arpl
inc
mov
jecxz,pt
loop
jl
pop
int3
xchg
inc
push
in
push
push
test
movb
adc
dec
mov
push
inc
jmp
xor
jecxz
stc
adc
mov
mov
hlt
xchg
and
inc
aaa
inc
test
adcb
iret
fcomip
es
call
scas
xor
es
sub
fdivl
popf
xor
xchg
lea
jmp
int3
sbb
xor
out
xor
cmp
mov
aad
cmp
sbb
lods
mov
jae
sahf
cli
loop
pop
mov
fisubl
insb
ja
pop
mov
adc
xchg
pop
cld
sub
fwait
or
hlt
or
scas
mov
daa
jae
testl
mov
jp
lods
mov
orb
xchg
inc
dec
sbb
dec
xchg
jecxz
mov
xor
mov
cmpl
loopne
pop
or
stos
adc
out
jl
push
jecxz
push
into
xchg
mov
repz
insb
es
mov
aas
pop
push
push
cmp
out
xor
repz
sub
int
fcomip
xlat
pushf
das
in
sbb
fucomi
sub
or
aad
shlb
xchg
gs
fs
dec
mov
or
push
jmp
rorl
pop
xor
mov
loopne
adc
int
add
das
out
clc
push
ret
sbb
mov
outsl
sub
mov
mov
cli
mov
and
mov
movsb
fcomps
movsb
flds
inc
add
std
cmpl
pop
add
testb
test
cmpsb
sub
inc
sar
gs
std
and
pop
inc
mov
mov
fimuls
jmp
push
aam
mov
dec
jl
bound
enter
test
dec
push
loope
push
adc
adc
pop
cmc
mov
sub
popa
push
fdivl
pushf
aam
xchg
sub
mov
xor
mov
add
into
div
push
pop
fmulp
imulb
fbld
orb
mov
mov
loopne
in
lock
jnp,pt
dec
sbb
ror
mov
push
inc
cld
leave
lret
scas
std
popf
inc
in
mov
insl
dec
pushf
adc
dec
loope
push
mov
sbb
cmp
loop
or
testl
add
cltd
and
fwait
cmpsb
mov
roll
dec
pop
dec
jg
jge
inc
jns
jmp
pop
ljmp
push
mov
push
cs
fisubrl
mov
ss
in
mov
divb
xchg
andb
dec
ret
fcoms
push
cmp
nop
mov
jo
pusha
sbb
data16
or
ljmp
xor
aas
in
adc
mov
in
pop
mov
jp
add
repz
sub
pop
nop
pop
dec
gs
add
mov
mov
in
aam
out
cmpsl
rorl
test
popf
inc
frstor
inc
pop
les
xchg
ret
outsl
jmp
lods
ss
sub
not
mov
call
cmp
mov
sbbb
jb
cmp
ds
xchg
xchg
mov
mov
adc
cmp
aad
adc
push
ficomps
or
mov
dec
mov
mov
jge
mov
jb
fdivrl
fnstsw
ss
out
jno
push
or
ret
mov
lret
pop
pushf
mov
jle
ret
mov
sbb
and
jb
clc
mov
adc
mov
push
ficompl
test
frstor
jmp
int
push
add
mov
mov
jg
jne
mov
xchg
xor
cli
mov
fs
mov
mov
out
cmp
ret
jl
pushf
popa
jle
pop
sub
xchg
bound
sbb
xor
sbb
fiaddl
rclb
mov
cltd
sub
movsl
shrb
cli
lcall
mov
daa
lcall
loopne
fildl
mov
xchg
jb,pt
push
aam
lahf
and
shlb
push
mov
pop
add
mov
mov
inc
ret
cmp
jns
js
jg
push
mov
xchg
or
push
jbe
leave
adc
xchg
cld
cmc
mov
mov
or
aam
or
mov
fwait
jb
lock
mov
add
adc
mov
fbstp
ror
loope
imul
push
call
shll
xor
std
dec
mov
in
mov
push
mov
mov
shufps
or
in
mov
inc
test
add
test
adc
mov
sbb
sbb
cmpl
pop
sub
stos
mov
jno
out
cwtl
idivb
arpl
addr16
push
mov
out
inc
inc
nop
mov
and
rclb
outsl
adc
sub
jmp
ss
stos
xchg
lods
cmp
xor
sbb
ss
xchg
mov
ret
lret
xchg
enter
sbb
cmc
xchg
sbb
stos
ret
mov
cmpsb
std
jecxz
ja
bound
stos
and
faddl
popa
popa
adc
mov
mov
pop
sarb
pop
fdiv
adc
roll
jnp
imul
cmp
jnp
out
loope
cwtl
in
testl
pop
add
push
mov
pop
pushf
and
or
loope
adc
inc
or
push
insb
xor
mov
jg
push
imul
mov
inc
or
inc
mov
add
in
dec
inc
ds
dec
xchg
pop
dec
je
jns
mov
js
dec
lea
xchg
cmpsb
push
sbb
lods
xlat
fsubl
addb
mov
cld
jge
adc
adc
jg
testb
lret
xor
mov
cmp
das
out
enter
sub
xor
ret
xchg
addr16
or
push
jle
xlat
pop
hlt
mov
jl
mov
add
movsb
dec
ja
dec
ficompl
movsb
cmp
int
sbb
xor
mov
jge
imul
mov
stos
push
dec
pop
xchg
xlat
adc
adc
push
jmp
fidivrl
xchg
push
push
push
test
sbb
mov
mov
sbbb
pop
cs
shlb
pop
jae
sbb
pop
fstpl
sub
in
pop
loope
cmp
pusha
add
movsl
cmp
into
les
mov
push
daa
clc
cmp
mov
dec
orl
push
lcall
add
push
push
popf
popf
int3
xchg
mov
fisubl
fsub
fwait
mov
lahf
hlt
sub
add
fcomip
push
lret
imul
inc
jno
pop
sub
stc
in
popf
xor
pop
iret
scas
xor
lcall
mov
stos
fst
es
mov
insb
in
sub
aam
outsb
mov
fwait
xor
lds
xchg
add
fisubs
mov
cmp
pop
pusha
xor
xor
adc
lret
dec
and
pushw
mov
cmp
dec
sub
sub
pusha
jnp
loopne
add
out
repz
in
out
negl
lds
cmp
repz
cmpsb
adc
fimull
and
mov
push
pop
hlt
fstpt
sti
aam
mov
mov
pop
lock
mov
xor
insl
push
cmp
mov
adc
fbstp
adc
leave
cltd
cmpl
addr16
or
cmp
rcr
in
cs
inc
stos
cwtl
repz
xchg
jns
sti
add
adc
push
movsb
rolb
sub
push
and
jo
jnp
xor
faddl
lret
clc
mov
aaa
jge
jge
pop
and
out
or
test
int
test
pop
mov
scas
insb
in
pop
mov
fwait
inc
movsb
sbb
xor
imul
adcl
or
mov
lea
mov
push
push
lcall
cmp
gs
add
ror
add
push
out
dec
mov
dec
dec
inc
dec
test
inc
stos
cmp
push
xor
sub
mov
loopne
mov
fwait
cwtl
cmpb
dec
out
xchg
jb
sub
mov
mov
push
push
jno
inc
mov
dec
int
push
hlt
das
or
push
pop
data16
cli
mov
movsl
popa
jbe
xchg
cltd
shll
jge
out
fisttpll
setle
das
fildl
adc
inc
movsl
xchg
subl
mov
xchg
cs
or
stc
repnz
add
ljmp
dec
cmp
inc
lret
cmp
mov
pop
mov
xchg
pop
inc
test
mov
fisttps
adc
pop
ljmp
pop
insl
sbb
push
jmp
repz
add
mov
mov
xor
mov
sub
subl
xor
cmc
into
rclb
pusha
cmpsl
imul
xor
add
cwtl
dec
scas
sbb
roll
mov
lods
lret
inc
cwtl
push
fdivl
nop
inc
iret
mov
mov
cmp
push
insb
imul
xchg
adc
sub
gs
stc
and
sti
dec
pop
repz
or
push
cmp
jo
xchg
sbb
mov
fcomps
jl
xchg
jecxz
pop
mov
into
inc
xor
sbb
mov
jbe
mov
jmp
dec
mov
fstpt
cltd
jp
push
xlat
jo
and
inc
push
xor
stc
pusha
add
xor
dec
mov
mov
rolb
aad
pop
xchg
shr
cmpsl
loopne
sahf
sbb
rclb
add
jp
jp
xchg
inc
mov
scas
adc
mov
cli
mov
mov
test
inc
test
in
pop
dec
cmc
pop
dec
mov
icebp
adc
pop
test
gs
xchg
repnz
xchg
dec
mov
clc
lods
lods
pop
push
mov
sub
and
xchg
xor
xchg
in
xchg
push
mov
je
nop
mov
pop
in
mov
xor
rcr
gs
stos
movsl
fs
loop
push
adc
push
cmp
int3
dec
popf
adc
sub
std
ja
pop
test
movsb
pop
mov
xchg
mov
mov
sub
pop
cwtl
pop
push
iret
push
push
inc
cmc
pop
jg
xchg
and
pop
pushw
and
mov
and
popa
ret
mov
sbb
insl
jo
stos
popf
mov
loopne
jbe
test
sbb
pop
iret
sti
cmp
pop
and
nop
add
pop
les
xor
lahf
sarl
mov
xchg
stos
ja
xchg
mov
cmp
push
xlat
push
cld
je
or
insl
adc
mov
cmp
dec
lods
daa
jg
inc
cmp
inc
stc
sarl
movsb
repnz
in
subb
push
neg
fistpll
cmpsl
notb
repnz
dec
jns
int3
ljmp
mov
int
pop
inc
mov
fldcw
dec
mov
bt
das
ljmp
mov
push
daa
push
xor
out
shrb
mov
stos
or
jg
add
out
icebp
shl
out
jbe
adc
mov
and
popa
mov
or
push
add
mov
dec
pop
movsl
mov
mov
js
fistpll
push
orl
add
lock
mov
or
push
int3
insb
push
popf
push
out
inc
jp
icebp
rorl
iret
mov
daa
repnz
arpl
nop
iret
cmp
and
js
lret
adc
pop
mov
daa
and
stos
push
gs
ret
mov
push
ficoms
lock
outsb
dec
in
adc
fldl
cmp
jne
lods
in
add
add
pop
cmp
stos
cmp
mov
sub
add
jge
adcl
testl
lahf
push
push
xchg
cwtl
in
push
rcll
add
leave
outsb
sbb
aaa
inc
jnp
jmp
aam
or
ret
out
adc
testb
xchg
mov
lret
or
mov
mov
leave
xchg
sarb
aaa
movsb
enter
mov
je
sbb
mov
pop
clc
rorl
cmc
mov
lret
push
cmpsl
sub
xchg
into
sbb
repz
mov
shlb
fs
dec
inc
icebp
movsl
jp
xor
push
mov
lcall
mov
sbb
xorl
push
stc
test
rorl
mov
inc
push
dec
cli
lock
mov
jbe
movsl
out
mov
or
ds
fbstp
repz
sarb
mov
arpl
ljmp
mov
sbb
push
lcall
shrl
and
xor
sub
fidivrs
in
in
push
fistpl
lods
movsl
aad
inc
idivb
xchg
xor
repnz
cmp
xor
out
inc
mov
mov
mov
testl
shrd
movb
xchg
push
xchg
mov
fnsave
and
cld
shll
sbb
call
sbb
add
cmpsl
sbb
cld
sbb
push
aad
push
or
push
fs
sub
jnp
outsl
jle
cmp
jns
mov
lods
jo
jae
das
jl
jns
popa
push
mov
xchg
negl
adc
push
cmp
fucom
ljmp
inc
jmp
push
push
sub
mov
mov
sbb
out
push
imul
adc
and
push
adcb
fs
xchg
ss
cmp
pushf
cvttps2pi
andl
or
mov
ja
dec
jp
inc
je
push
lret
or
mov
mov
cld
lods
aad
aaa
jns
add
add
inc
or
sbb
jle
pop
aas
insl
cmc
inc
hlt
xor
add
lret
jge
out
lcall
insl
sbb
out
mov
lcall
and
inc
fildl
fucom
cmp
push
out
arpl
jo
ljmp
mov
jmp
fsubs
popa
push
cwtl
push
jle
stos
scas
outsb
lret
xlat
or
test
test
dec
cmp
inc
mov
and
sbb
in
adc
shlb
lcall
xchg
imul
std
outsl
pusha
repnz
sub
lods
roll
mov
sbb
out
les
lret
out
mov
loop
xor
das
pcmpeqd
nop
mulb
in
and
jge
cmp
mov
stos
loope
hlt
sub
push
sti
xor
loop
push
xchg
rcrl
addr16
pushl
mov
in
mov
or
lea
outsb
std
pop
rolb
js
les
test
iret
or
call
enter
jg
cmp
xchg
jge
xor
and
adc
loop
cmp
cmc
xor
xchg
inc
popa
les
push
sbb
mov
adc
adc
and
sti
xor
jmp
cmp
jnp
leave
iret
xor
int
test
into
scas
adc
mov
out
mov
sbb
pop
lret
lock
adc
rorl
or
push
sub
add
xchg
push
movsl
sbb
and
or
push
push
xchg
aaa
ja
fs
dec
std
popa
lcall
mov
adc
lods
xchg
iret
sbb
fwait
push
loope
rclb
lret
jbe
add
push
sahf
push
push
ficoml
cld
sub
xchg
mov
and
or
inc
in
hlt
lret
pop
addr16
jb
out
jecxz
cmp
fimuls
cmp
adc
int
mov
stos
dec
jbe
mov
popa
sbb
repnz
fdivrp
hlt
je
pop
testl
adc
aam
push
sarl
push
cmpsb
jnp
sub
and
iret
mov
int
imul
push
push
add
outsl
jge
sub
xor
aas
rep
sarb
insl
push
cmpsl
ficomps
pushf
gs
repnz
pop
inc
mov
mov
xor
dec
pusha
int
mov
xchg
icebp
adc
pop
mov
add
imul
add
pop
jmp
loopne
iret
outsl
cmp
aam
insb
or
imul
daa
cmp
shr
stos
fstps
sub
inc
inc
xchg
xor
push
xor
leave
inc
cs
sbb
lea
cmp
in
icebp
and
pop
add
push
xlat
outsl
hlt
sub
insb
scas
in
or
xor
jl
out
fwait
mov
lahf
outsb
data16
insb
icebp
jp
repz
fdivr
cmp
pusha
icebp
and
stos
xchg
sbb
pop
cli
add
sbb
call
mov
lcall
mov
adc
imul
sbb
pop
movsl
aam
cmp
mov
out
pushf
int
xor
mov
cmp
dec
sbb
cmp
jb
sub
inc
cmpsl
cli
cmp
sub
cmp
cmpsb
push
sbb
pop
aas
out
xchg
jb
mov
popa
xchg
cmp
leave
cmp
aad
pop
or
repz
push
push
xchg
or
fcompl
iret
and
mov
fbld
or
rorb
sub
adc
repz
push
ds
aas
cmpl
in
xchg
fwait
adcl
arpl
mov
inc
mov
mov
lret
sbb
lods
dec
xor
shll
enter
outsb
cld
sarb
mov
dec
jo
jb
xor
mov
or
sub
daa
jle
iret
iret
sbb
jne
jmp
rorl
mov
rcrl
mov
incb
in
sub
nop
out
mov
cmp
arpl
repz
int3
jle
xor
cld
jp
pusha
out
in
jg
inc
lods
push
mov
mov
sbb
jno
push
pop
sbb
jecxz
cmc
push
mov
lods
movsl
enter
fidivl
inc
sub
pusha
hlt
sub
outsb
outsb
cmp
nop
ds
or
mov
push
pop
mov
out
shll
into
xchg
repz
adcl
les
dec
and
inc
in
aad
and
fsubs
push
fs
ja
mov
xchg
fisubrs
fiadds
repnz
sbb
pop
add
pop
sbb
movl
xchg
loop
aas
xor
xchg
mov
hlt
fnstsw
cmpsl
xor
mov
sub
arpl
jp
scas
xchg
test
add
cmp
fwait
cmp
inc
mov
in
mov
sub
pop
jecxz
fidivl
sub
insb
inc
call
aad
jbe
bound
test
add
iret
pop
push
xorl
movsb
xor
add
adc
clc
xlat
sbb
adcb
mov
and
cmp
push
pop
fildll
xor
and
in
mov
push
xchg
test
inc
mov
cmp
shll
mov
enter
pop
mov
les
lock
jns
sub
imulb
jmp
jp
jno
adc
push
inc
sbb
out
es
mov
mov
into
rcrl
push
jle
adc
arpl
xorl
adcb
out
add
les
cmpsb
ret
aas
insb
cmp
in
push
fdivs
dec
loop
out
insl
mov
scas
icebp
push
cmc
and
xor
addb
in
dec
pusha
mov
pusha
cmp
sub
xlat
pusha
lret
call
jae
ljmp
outsl
dec
nop
xor
les
jmp
outsb
xor
xor
adc
xor
add
std
sub
dec
inc
fwait
jg
sub
mov
push
dec
stc
sbb
data16
push
lahf
xchg
cmp
sahf
out
xor
fildl
or
add
jmp
jno
xor
shlb
pop
push
iret
mov
or
sub
fld
push
enter
int3
pop
inc
pop
pushf
xor
mov
or
push
xchg
inc
movsb
cmp
mov
lds
push
dec
std
add
xchg
adc
xor
andnps
adc
sqrtps
sub
insl
loop
mov
mov
fists
stos
adc
inc
xlat
lret
inc
inc
mov
movsl
xchg
test
mov
cwtl
mov
jae
imul
mov
push
or
jmp
pop
jbe
sbb
lret
sbb
jmp
movsb
pop
in
jae
xchg
fwait
and
xor
aam
jne
add
push
mov
iret
pusha
pop
mov
xchg
cmp
push
xor
in
xchg
pop
push
cmc
testl
insl
fsubrs
lcall
les
dec
mov
pop
add
repnz
arpl
or
es
sub
sbb
xchg
adc
jo
rol
mov
test
mov
jno
loop
clc
mov
pop
shll
cmpsb
and
sub
jecxz
mov
dec
mov
dec
mov
push
pop
sbb
outsl
pop
mov
mov
push
inc
in
ret
aaa
lods
leave
pushf
and
push
lcall
xor
std
insb
xor
add
sub
pop
lds
aam
cwtl
add
sub
add
jne
ret
lret
ss
addr16
mov
outsl
and
xchg
xsha1
cmpsb
mov
es
add
push
xor
lcall
inc
push
stos
dec
adc
mov
xchg
pusha
imul
clc
jecxz
or
daa
sub
dec
dec
dec
inc
xlat
cmpsl
and
jnp
cli
jmp
lret
jae
xchg
cmp
jae
out
in
lea
mulb
ljmp
je
je
dec
cmpsl
push
inc
and
mov
call
inc
sahf
cld
movsl
lea
mov
inc
xchg
icebp
push
scas
fmull
imul
cli
pushf
ret
out
mov
cld
sub
or
in
jnp
in
fs
dec
ss
mov
in
shll
mov
add
push
decb
out
xor
jmp
mov
fcoms
fildl
jecxz
adc
int
orl
jbe
popf
sbb
jecxz
jne
roll
stos
out
sub
mov
ret
adc
jbe
push
push
aas
test
loop
jp
std
and
out
insb
sbb
add
pop
les
hlt
mov
int
ja
dec
inc
push
mov
mov
mov
or
pop
mov
and
jbe
sbb
call
icebp
popa
xchg
pop
or
lret
idiv
add
ss
std
push
mov
mov
jae
loopne
jecxz
sarl
lea
insl
nop
push
push
subps
pusha
xor
ret
mov
out
jno
dec
cmp
andl
jb
or
sahf
ljmp
psubb
mov
pop
mov
cmpb
adc
xchg
xchg
in
stos
sub
daa
push
fnstcw
mov
test
push
mov
inc
cmp
jl
sub
into
push
sub
es
movsl
hlt
push
adc
xchg
push
xchg
jbe
or
pop
lods
sbb
push
int
inc
rorb
mov
sahf
adc
pop
fxch
add
in
in
lea
jg
jnp
pop
mov
roll
jl
push
inc
fs
xor
decb
aaa
mov
sub
stos
and
push
call
push
nop
in
sti
int
mov
mov
movsb
mov
dec
push
repnz
cmp
orb
push
pop
inc
imul
or
lea
in
in
rcll
test
sbb
vpackuswb
mov
pop
add
into
insb
push
shlb
xchg
xchg
fs
out
sub
jp
mov
mov
lea
push
fucomp
loop
out
jg
outsl
icebp
push
pushf
nop
or
or
jae
popl
inc
inc
rorl
sub
outsl
lods
jo
pusha
scas
ficoms
ja
adc
inc
pop
push
or
loope
out
andb
mov
fimuls
addr16
cmp
push
ds
push
rcrl
js
mov
les
shlb
adc
pusha
into
cmp
pop
push
jl
xchg
pop
iret
movsl
jno
xchg
xor
and
adc
fwait
cmp
clc
nop
sbb
xchg
in
das
add
cli
neg
push
inc
jg
xchg
incl
mov
sbb
fiadds
cs
or
fwait
lcall
imul
es
pop
enter
adc
mov
sub
dec
mov
push
les
add
test
psrld
jnp
in
xchg
cmp
int3
lods
pop
cwtl
xor
and
ret
pop
mov
mov
push
jge
mov
sbb
and
imul
into
inc
div
notb
xchg
fisubs
dec
ret
daa
sub
jae
out
pop
test
cmp
fcoml
adc
mov
lret
inc
mov
sbb
xchg
xchg
flds
or
imul
cmpsb
add
jae
add
nop
inc
mov
call
inc
daa
push
push
fstpt
lcall
lock
aas
cmpsl
icebp
testl
outsl
je
dec
out
rorl
mov
mov
out
mov
cld
in
pop
adc
add
mov
push
jl
outsl
xchg
push
xor
push
mov
fldl
sub
push
mov
stos
inc
testl
jl
mov
stos
test
out
push
loop
bound
cmp
xor
xor
and
inc
ret
adc
dec
js
sti
mov
imul
mov
adc
lret
leave
push
mov
adc
fdivrs
outsl
lret
add
out
addr16
insb
pop
inc
pop
mov
inc
xchg
xor
xchg
fistpll
pop
jge
pop
jno
mov
int3
insb
ret
fwait
out
test
mov
aas
insb
movaps
xchg
imul
shl
xor
xchg
test
mov
out
push
xor
lods
cld
loopne
fsubs
inc
dec
orb
add
aaa
inc
dec
arpl
mov
lcall
add
xor
add
and
stos
pop
cmp
mov
enter
pop
pop
ret
cmp
sarb
adc
cmc
mov
cltd
and
dec
jl
leave
stos
mov
sub
xchg
mov
testb
sub
xor
mov
mov
lds
inc
int
and
sub
mov
test
cmp
or
push
sbb
enter
sahf
aas
enter
adc
xor
cmpsl
cli
adc
and
addr16
cmpsl
sub
pop
jne
aad
pop
sahf
pop
and
hlt
jge
add
das
es
xchg
aam
sub
pushf
fdivs
xchg
xchg
jmp
push
aas
nop
pop
imul
negl
dec
cs
lds
fsubl
push
pop
and
push
outsl
ficompl
pop
and
sub
xlat
push
std
xor
pop
push
xchg
pop
sub
mov
test
stos
lods
add
inc
out
hlt
xor
or
and
mov
adc
dec
std
jo
jmp
scas
jmp
mov
cmc
xor
decl
hlt
jg
mov
push
inc
sbb
jb
inc
cmpsb
dec
mov
add
mov
cmp
inc
ret
inc
add
popf
mov
incb
loopne
or
pop
pop
sti
inc
lahf
test
lret
bound
fadds
push
fldpi
inc
pop
mov
test
insb
pop
dec
shll
add
and
js
das
add
in
loop
push
jge
push
int
inc
add
mov
lcall
xchg
jle
enter
xchg
xor
fs
mov
into
push
or
jle
cli
jae
imul
es
xchg
sbb
or
test
jb
mov
icebp
jbe
outsl
sbb
dec
and
stos
stos
pushf
and
les
and
dec
rcl
ja
fistps
loopne
jo
xlat
jo
mov
dec
jp
push
pop
xchg
divb
adc
sub
jge
jno
enter
jp
cltd
ljmp
jmp
sahf
xchg
pop
sti
pop
xchg
ss
push
jg
out
xor
or
std
cmpsl
sub
stc
push
sbb
mov
dec
aas
sub
sub
add
sub
imul
xchg
dec
cltd
lods
cld
cmpsl
scas
ljmp
cltd
add
movsb
pop
mov
ljmp
sbb
std
pop
and
in
cli
mov
call
push
cmp
adc
repz
xchg
ds
mov
loopne
xchg
loope
xorb
mov
adc
pop
fyl2x
sub
jns
sbb
test
fildl
pushf
inc
fwait
push
scas
iret
jl
adcl
repz
add
xrelease
xor
add
into
sarl
fwait
data16
scas
je
mov
jp
sub
add
movsl
xchg
dec
aaa
jne
idiv
clc
pop
outsl
fwait
mov
sub
jno
in
pusha
inc
jp
cmc
push
lock
imul
cmpsb
dec
push
sbb
mov
clc
push
sub
insb
or
fstpl
sbb
or
outsl
jnp
push
fsts
cmpsl
out
in
dec
lret
mov
and
mov
mov
stos
adc
xchg
jns
scas
pop
mov
mov
add
inc
cmp
or
pop
adc
adc
or
pushf
push
fmull
ret
ret
add
jmp
mov
mov
inc
rep
nop
sbb
xchg
lds
insb
leave
movsb
ljmp
rcrb
mov
ffreep
cmp
nop
cwtl
push
stos
scas
pop
and
dec
cs
inc
xor
lea
dec
add
clc
xor
mov
and
loopne
push
int
ljmp
shl
cwtl
pop
int3
icebp
sub
jmp
mov
insl
jg
aas
mov
cmp
jp
sti
test
cld
imul
push
mov
xchg
xlat
inc
xchg
popf
repz
push
push
push
es
push
xchg
pusha
pop
scas
cmp
xor
add
jle
xor
cmp
xor
bound
daa
or
out
icebp
inc
movsl
imul
sbb
call
xchg
mov
push
sbb
pop
mov
mov
stos
sti
dec
push
test
and
popf
jge
push
jbe
ret
out
inc
xchg
in
scas
loopne
cwtl
or
cld
sub
dec
mov
mov
insb
cmp
movsb
fldt
lahf
scas
push
mov
adc
push
shll
cmp
jbe
inc
push
pop
mov
jg
mov
xchg
ljmp
jmp
loopne
inc
inc
test
sbb
std
mov
cmp
push
bound
sub
in
negl
lcall
jl
or
adc
test
or
dec
mov
mov
lock
in
mov
mov
jo
stos
mov
push
ret
mov
or
inc
push
dec
dec
xorb
mov
sbb
mov
lcall
es
pop
add
ss
subb
lahf
popa
aam
test
pop
into
xor
push
or
fbstp
sbb
jmp
decb
divb
add
repnz
mov
xlat
in
imul
ljmp
cmp
daa
sarb
xchg
rorl
jae
mov
add
movsb
add
inc
cld
add
pop
and
enter
sub
lock
jno
mov
mov
out
mov
lret
out
psrlq
pop
push
xorl
pop
ret
rorb
ljmp
ljmp
mov
nop
push
push
adc
sbb
mov
fistpll
push
fistpll
into
xchg
sbb
dec
stos
mov
or
pusha
cltd
mov
in
mov
and
movsl
mov
push
aaa
ror
mov
xor
aaa
mov
xor
jp
and
hlt
mov
mov
lahf
push
repnz
xor
mov
and
test
add
cmc
leave
lret
je
mov
ja
aaa
adc
loopne
sbb
insl
pop
cld
adc
loope
mov
jae
mov
test
sub
daa
sub
xchg
xchg
orb
mov
add
in
sbb
pushf
jle
out
scas
cltd
sub
push
cmp
cmpsl
ljmp
in
into
mov
mov
ret
call
cmp
out
xchg
iret
mov
pusha
mov
data16
xchg
xchg
cmpb
mov
out
pop
push
cs
test
icebp
outsl
mov
lods
loopne
stos
push
xchg
mov
fs
lods
adc
ret
push
stos
mov
pop
aam
cvtpi2ps
jne
xchg
lahf
sub
cs
scas
sahf
jmp
jp
into
mov
mov
or
pusha
or
daa
enter
pop
scas
fldcw
repnz
jo
insb
pop
cmp
or
inc
scas
xor
adc
lcall
aaa
push
out
or
xchg
push
outsl
inc
xor
iret
add
frstor
push
lret
fstl
call
popa
and
adc
mov
out
sbbl
test
dec
sub
cmp
cmp
inc
sti
movsl
loopne
mov
fmuls
jg
cwtl
shl
add
or
cmp
pop
mov
cmpsb
call
jo
call
dec
inc
fsubrs
imul
cwtl
inc
xor
outsl
lock
outsl
pushf
dec
into
cli
cs
popf
pop
icebp
ja
in
popa
fimull
push
mov
fstl
push
adc
push
xchg
push
ret
jns
pop
addr16
nop
fs
jp
sub
test
or
dec
or
adc
outsb
out
insb
xorl
xchg
iret
cmc
hlt
mov
xor
and
jle
adc
xchg
sub
rol
mov
add
test
test
dec
and
dec
inc
gs
sub
sti
mov
popa
jmp
ljmp
rcl
cmp
jno
fisubrl
out
ret
stc
jnp
ds
std
push
ljmp
pop
imul
mov
daa
cmc
adc
push
test
fsubrs
outsl
push
or
andl
push
xor
fldt
ljmp
xor
pop
jns
cmpsb
mov
xchg
cmp
icebp
loopne
xchg
dec
mov
mov
out
insl
cmp
xchg
pop
loop
stos
pop
cld
pusha
pop
pushf
cli
jle
aam
xchg
lods
jg
sub
jle
loope
dec
sub
gs
add
push
sub
inc
or
or
pop
push
subps
jmp
dec
sub
nop
mov
cld
stc
add
pop
adc
fsubl
ss
fsubs
rcll
mov
pop
mov
lret
nop
ja
out
fwait
dec
push
in
or
jge
stos
mov
outsb
mov
loopne
xchg
adc
pop
xor
sbb
pop
jnp
fisubl
sbb
outsb
dec
fidivrl
jns
mov
fs
cld
adc
popa
std
icebp
push
fsubrl
pop
leave
clc
sub
ljmp
pop
scas
data16
push
push
int
and
jo
sub
mov
les
cld
mov
fs
pushf
ss
adc
lret
cmp
xchg
aaa
inc
sbb
inc
ret
jmp
cmp
lar
mov
push
jbe
cmc
sub
sub
push
jno
adc
int3
sbb
and
nop
inc
subl
adc
mov
into
or
icebp
xchg
inc
faddl
test
xor
mov
and
cmp
lret
in
inc
and
inc
outsl
jo
xchg
add
loopne
ret
inc
jnp
enter
sub
sahf
mov
lret
push
test
in
xor
jmp
insb
mov
mov
loopne
popf
push
or
icebp
fildll
es
and
popa
insb
pop
push
hlt
xor
xor
repz
inc
subb
cltd
cs
pusha
loop
in
xor
arpl
xchg
imul
cmp
inc
xchg
fwait
adc
ret
and
ret
sbb
pop
sub
inc
mov
in
lods
cmp
cmp
daa
lret
insb
shlb
dec
js
imul
ss
outsb
xor
mov
jno
rcrb
je
xchg
outsb
sub
sub
das
mov
loop
push
mov
testl
test
icebp
jns
mov
cs
and
fcomps
daa
mov
cmpsb
cmp
testl
and
and
dec
dec
outsl
js
and
ret
lock
xor
jno
adc
in
add
push
arpl
and
inc
adc
jb
jg
outsb
outsb
push
lret
sub
insl
jmp
out
aaa
sub
fmul
lock
idiv
cmp
pop
rorl
les
bound
jbe
dec
sti
jecxz
les
adc
or
outsb
add
mov
mov
and
imul
shrl
aad
jb
movsl
pop
andb
dec
jns
adc
insl
in
out
mov
enter
adc
dec
add
xchg
cmp
jl
int3
pushf
jl
ss
or
cmc
jl
cmc
js
fst
lahf
lahf
arpl
sahf
sbb
dec
gs
push
cmc
jae
loopne
jne
xchg
in
in
cmp
int
xlat
sub
jae
pop
cmc
add
dec
fcoml
mov
push
push
sub
pushf
stos
pop
sti
jne
lcall
mov
rorl
mov
adc
rdtsc
push
cmpsl
pop
repnz
sbb
addr16
inc
fs
pushf
pop
cmc
les
inc
stc
cmp
int3
das
mov
jecxz
mov
subb
or
pop
movsl
shll
jge
push
cmpb
shl
hlt
out
pop
mov
push
push
into
and
fdecstp
dec
pop
xchg
test
pop
daa
js
lret
xlat
adc
cli
in
xchg
fsub
aad
rcl
aam
push
sbb
inc
dec
adc
mov
dec
jge
sbb
test
add
addr16
cmpsl
repnz
inc
mov
push
mov
mov
scas
cmp
jle
fdivl
cmp
cmpsl
fidivrs
lods
leave
push
icebp
jnp
push
mov
lea
xchg
arpl
or
cwtl
faddl
add
ret
movsl
std
les
adc
arpl
loopne
in
outsl
pop
js
mov
mov
cmpsb
mov
fsubrl
sbb
sbb
jmp
test
inc
sbb
jnp
fdivs
add
xchg
dec
movsl
ror
sbb
iret
xlat
in
outsb
pop
mov
mov
mov
or
push
aaa
xchg
sub
pop
call
jg
jnp
aad
jge
push
iret
inc
xchg
jg
inc
mov
cli
lcall
rclb
add
cmp
push
cmp
mov
dec
sbb
inc
test
mov
aas
jg
stc
push
pop
pop
jo
ret
lea
stos
int
inc
and
sbb
sub
pminub
mov
mov
cltd
push
add
pop
pop
mov
es
sub
sub
push
pop
mov
scas
test
sbb
fimull
add
lods
mov
lea
fcoms
mov
pop
stc
std
dec
pusha
aad
out
and
push
pop
mov
push
and
ror
mov
mov
js
shlb
rcrb
push
not
dec
inc
lret
cltd
ret
inc
in
lret
rorl
jmp
pop
dec
test
call
arpl
int3
fcoms
sub
inc
fcoms
mov
daa
mov
fs
test
or
mov
jle
sti
push
add
out
out
cmp
ljmp
cmpl
imul
insl
mov
aaa
test
fs
dec
jae
or
les
add
push
adc
jmp
ret
pop
xchg
cmpsl
jecxz
es
mov
push
mov
and
arpl
lods
int
push
and
xchg
jo
fistpl
push
inc
rcl
dec
cmc
roll
sub
push
or
xchg
add
jecxz
pop
rcll
xchg
push
sbb
fcomps
jae
daa
push
fistpl
rcr
mov
lret
lds
jl
jbe
insl
mov
dec
movswl
into
idivl
loope
and
roll
xlat
in
int3
pop
fwait
mov
rol
dec
cwtl
lcall
orb
adc
les
inc
ficoms
xchg
mov
sbb
hlt
cmc
xor
popf
add
push
pop
cwtl
mov
addr16
into
mov
push
mov
add
jmp
adc
mov
push
ret
rol
loope
jmp
or
jbe
mov
int
lods
xor
mov
popf
scas
fwait
sub
xor
pop
sub
adc
xchg
mov
adc
es
seto
cmpsl
mov
stos
jb
fldenv
sbb
aam
inc
xchg
xorl
or
sbb
push
std
mov
inc
subl
mov
mull
dec
add
jno
ret
out
mov
andl
dec
aad
xor
movsb
xchg
sub
sbb
cmp
addr16
add
subl
pushf
hlt
ficomps
mov
mov
mov
leave
pop
mov
test
dec
int3
inc
or
pop
mov
adc
loop
sti
dec
dec
fbld
mov
sub
lcall
jne
xor
sahf
lret
lock
rol
filds
scas
ljmp
in
mov
sbbl
xchg
xor
and
sbb
dec
cmp
test
fistpl
xchg
aaa
sti
jne
dec
int
out
movsb
push
xchg
xchg
nop
inc
dec
xlat
imul
out
pop
or
std
cli
enter
and
lcall
xchg
jl
sbb
push
mov
pop
xor
adc
lods
fnsave
stos
xor
mov
sbb
pop
int
out
jns
mov
pop
xor
dec
xor
scas
mov
cmc
fisubs
decl
cmpsb
sub
mov
xchg
ds
dec
arpl
fcmovb
fld
dec
outsb
jne
jecxz
dec
and
inc
sbb
xchg
ret
jnp
ja
out
jbe
divl
mov
outsb
mov
or
movsb
push
xor
push
lret
out
xchg
leave
ja
push
pop
mov
ret
ds
cmc
mov
dec
fimuls
inc
out
dec
int3
outsb
or
adc
mov
inc
andl
mov
outsl
xor
jmp
xor
xor
xor
into
cmp
out
stos
or
adc
or
mov
and
int
mov
mov
paddq
sbb
push
or
das
sbb
xor
aad
and
dec
add
bnd
or
aas
out
popf
sub
pop
out
cmpsb
mov
sub
scas
cwtl
mov
inc
movsl
rolb
cmp
je
ljmp
fwait
adc
dec
cli
sub
pop
fisubrs
aaa
shrb
sbb
out
lods
sub
pop
das
out
fprem
addr16
mov
arpl
xchg
lret
insl
mov
pusha
xor
sbb
sub
mov
sbb
rcl
xchg
popf
cli
test
and
dec
adcb
dec
mov
into
int
or
sub
mov
sbb
jno
push
lods
clc
mov
jl
cs
xor
ds
enter
sbb
je
daa
call
and
notl
xchg
std
pop
or
cwtl
xchg
aaa
push
mov
pop
xchg
dec
sub
or
mov
push
mov
mov
shl
nop
pop
movsb
lret
jecxz
and
pop
mov
stos
pop
push
hlt
inc
sbb
out
cltd
mov
cmp
cmp
fstpl
dec
pop
pop
xchg
dec
fs
mov
jg
cmc
dec
sbb
mov
jb
cs
xchg
mov
gs
fs
loopne
je
rorl
xchg
cmp
add
xchg
mov
dec
scas
std
jp
pop
mov
cmc
push
in
dec
mov
and
insl
jle
xor
cwtl
xor
daa
call
sbb
inc
xchg
dec
in
out
repz
xor
sub
cltd
push
and
push
call
mov
andb
inc
mov
mov
xchg
lea
sub
andl
ja
and
out
dec
incl
mov
popf
lods
lea
sub
repz
idivl
dec
jae
bound
cmp
sub
sub
outsb
aas
sbb
push
sub
mov
lods
rclb
outsb
mov
icebp
add
loopne
push
ror
movsb
cld
add
dec
lods
stos
in
pop
cwtl
mov
pop
lds
add
fcmovnb
ret
push
iret
clc
dec
adc
insb
push
shlb
cmc
jbe
xchg
aas
add
out
jg
adc
out
bound
outsl
adc
mov
xchg
fldl
xor
adc
mov
ss
insb
push
cld
sub
rcll
and
bound
and
push
loopne
aam
adc
jae
jb
cmp
lahf
jbe
inc
scas
lcall
ds
fwait
mov
outsl
cmp
ret
bound
loop
dec
dec
push
lods
push
orb
mov
cmp
aad
or
cmpsl
dec
mov
leave
xor
adc
and
mov
shl
enter
rorl
loopne
xor
xor
fcom
out
or
add
mov
mov
sbb
jg
and
mov
adc
in
aad
jmp
xor
popl
hlt
mov
xlat
test
lods
xor
jmp
mov
shl
jle
movsl
mov
ret
mov
das
or
push
in
hlt
shrb
and
push
fdiv
add
or
sub
mov
push
fisubrs
arpl
fwait
xor
arpl
ljmp
scas
jno
sarl
xor
es
mov
aaa
rcrl
imul
ljmp
loope,pn
lret
loopne
in
enter
adc
mov
out
mov
shlb
sahf
pop
ljmp
and
jle
cmp
mov
scas
data16
shlb
fcmovnu
dec
lds
sbb
hlt
push
aas
aam
out
fsubs
sbb
mov
mov
xor
xlat
and
test
sbb
pop
test
xchg
test
mov
add
scas
jp
cli
xor
push
fdiv
xchg
iret
loopne
fiaddl
ret
bound
in
js
mov
push
mov
imul
movsl
mov
cmc
jbe
scas
sbb
xchg
cmp
lsl
cmp
cwtl
into
xchg
sarb
ja
add
xchg
pop
sub
dec
push
ss
mov
ret
sbb
fldcw
loop
jno
lods
pusha
mov
and
test
lea
cmpsb
adc
or
stos
push
hlt
pop
and
fucom
inc
rcrl
xor
lahf
fwait
dec
mov
clc
outsl
push
or
push
pop
data16
xor
pop
dec
adc
jns
ljmp
aam
ret
daa
rclb
inc
mov
jmp
or
cmp
cmp
adc
xor
js
pop
and
push
xchg
enter
sbb
ss
cmpsb
sub
jle
ss
mov
nop
add
ja
or
loope
jmp
dec
push
sub
push
add
inc
lods
test
movsl
mov
mov
push
cmp
cli
jle
inc
pushf
jecxz
mov
add
test
dec
sbb
xchg
jb
sbb
add
call
shll
outsl
mov
inc
cli
cmp
xlat
notl
cwtl
adc
sub
pop
ja
les
stc
add
pop
fnstenv
sub
push
or
adc
lods
mov
mov
dec
mov
shr
out
dec
cld
ja
mov
sti
dec
xorl
mov
movsl
dec
adcb
aam
into
imul
inc
in
pop
loopne
pushf
mov
adc
add
sbb
sbbb
enter
push
fnstsw
push
jae
mov
and
lret
mov
cld
or
dec
in
sahf
pop
adc
fincstp
cmpsb
xor
xor
sub
iret
dec
jmp
lcall
dec
pop
sarb
dec
fnstenv
daa
bound
repz
jb
sbb
stos
mov
mov
jno
or
push
xor
jae
and
ljmp
rorb
negb
insb
sti
and
insl
dec
in
aaa
cmp
sub
icebp
icebp
lods
out
pop
jge
ficompl
loope
cmp
insb
loope
lret
pop
aas
and
xchg
mov
shll
fwait
mov
dec
lret
adc
inc
es
push
fmull
fdivp
sub
repz
movsl
sbb
and
or
adc
dec
push
mov
sbbl
aad
sub
mov
pop
scas
pop
push
xor
and
inc
jb
pop
loope
in
sbb
insb
and
and
cmpsl
and
jl
xor
xor
gs
outsl
lret
mulb
jb
adcb
fadd
enter
inc
mov
cmp
sti
insb
xlat
push
lock
pop
fdiv
ret
sub
pop
sbb
movsl
push
sbb
mov
add
inc
mov
jge
nop
dec
xchg
push
add
mov
pusha
mov
sbb
jecxz
cmp
into
faddl
adc
in
push
jb
push
and
jg
pop
xor
ret
shrb
mov
icebp
shl
jl
fnstcw
xchg
int3
jb
loope
fsubl
push
xor
mov
sbb
and
adc
cmp
push
popa
xor
je
dec
xchg
rcr
add
aas
push
movsb
cmpsb
pop
adc
adc
mov
jo
xor
shl
aas
xchg
in
cmp
dec
rcll
jne
leave
insl
mov
and
leave
pushf
xchg
xchg
lods
jge
mov
mov
je
shl
jge
jne
je
iret
rcrl
xchg
leave
stos
les
cmp
sbb
pop
pop
mov
cmp
push
shlb
sbb
xchg
sub
dec
iret
cmpsb
mov
add
out
les
mov
xchg
mov
add
jo
aaa
xchg
add
and
inc
in
aad
cltd
pop
imul
enter
in
jg
xor
sbbl
mov
sub
fcmovne
lcall
mov
adc
loop
dec
sub
imulb
jo
lret
jns
xchg
inc
aas
mov
popa
and
addr16
ret
sub
xchg
loop
sahf
pop
int3
add
mov
and
push
push
cmp
push
mov
push
sahf
adc
pop
insb
rcr
push
sahf
xchg
flds
movsl
fsubs
mov
iret
imul
pop
inc
movsl
or
lret
outsb
nop
addr16
fcmovne
sbb
xchg
jae
and
imul
xor
add
fwait
test
adc
mov
pop
push
lea
push
jnp
pop
mov
xor
mov
ss
jp
push
cli
or
aam
les
dec
xor
and
adc
pop
push
data16
js
dec
jmp
insb
aas
outsl
and
out
push
into
pop
push
pop
lock
jne
test
incb
jl
jecxz
movsb
dec
fildl
or
xchg
into
outsl
insl
push
outsb
into
mov
arpl
mov
call
jge
stos
and
cmp
ret
sub
push
pop
dec
jmp
leave
lds
jecxz
inc
xchg
add
les
inc
jo
sbb
jecxz
pop
test
sbb
inc
aaa
andb
loopne
lcall
mov
loopne
add
fwait
add
or
or
mov
mov
pop
ficoms
cmp
stos
pop
pop
out
cmpsb
addr16
into
cmp
pop
adc
sub
addr16
xchg
sbb
aas
aaa
cmpsb
lcall
jno
jns
xor
cmc
aaa
push
ror
daa
jbe
test
push
dec
adc
daa
add
adc
inc
test
mov
sub
or
rcll
push
xchg
inc
sbb
or
aas
mov
mov
roll
jno
push
mov
mov
call
mov
dec
stos
or
jp
daa
into
cmpsl
mov
pop
aam
movsb
dec
test
jmp
cltd
dec
in
jg
fstp
xor
or
das
jae
sbb
and
aas
jle
xor
pusha
push
fidivrl
mov
xlat
jbe
loope
pop
cmpsl
sub
mov
mov
out
and
cltd
in
divl
sbb
or
sub
cmp
jo
xchg
out
xchg
dec
pop
adc
mov
fistps
stos
ljmp
inc
lret
sbb
cs
cmc
mov
sarb
xchg
dec
loopne
stos
out
stos
mov
mov
inc
lahf
mov
enter
inc
cmp
ja
inc
mov
add
repnz
cltd
mov
mov
cld
or
mov
ret
mov
inc
mov
lcall
mov
mov
cmp
ss
cmp
outsl
movsb
inc
dec
dec
pusha
xchg
outsl
and
subb
dec
and
in
lea
test
inc
pop
testb
out
xchg
jecxz
sbb
pop
jb
or
push
jns
aad
mov
dec
and
and
arpl
stos
push
pop
push
stos
and
sbb
cmp
push
bound
bnd
fists
and
sbbl
mov
adc
repz
in
dec
push
stc
nopl
dec
icebp
adc
not
aam
insl
add
aam
jno
mov
ja
cmp
invd
sti
pusha
pop
pop
lods
shll
jp
xor
test
out
or
outsb
pop
adc
xchg
movsl
xchg
jo
and
out
mov
dec
push
repnz
jns
inc
lds
adc
push
xchg
sub
inc
xchg
jg
addr16
push
andb
cmp
xchg
movsl
iret
js
aas
out
cmpl
stos
add
sbb
fs
gs
inc
repnz
mov
cltd
sbb
push
xchg
add
cmp
pop
push
adc
test
cmpsl
mov
or
adc
xchg
and
and
pop
mov
sbb
xchg
test
mov
add
iret
xchg
mov
jno
fiadds
divl
insl
ds
ss
inc
loop
add
xchg
jge
sub
add
cmpsb
xchg
inc
sub
pop
pop
mov
cltd
js
mov
bound
jle
into
clc
sarl
faddl
adc
sub
pop
shll
notl
pushf
loopne
inc
sbb
inc
mov
mov
jo
dec
push
test
test
pop
jns
dec
insl
sbb
mov
arpl
fs
adc
add
sub
mov
das
mov
repnz
adc
stos
cld
lahf
add
push
sbb
dec
pop
sbb
incb
jnp
jo
mov
int3
pop
jne
push
lret
movsl
lea
sbb
ljmp
mov
cmp
sbb
cmp
jnp
js
push
adc
pop
ret
cld
mov
cwtl
les
inc
push
fdivr
xchg
mov
pop
fildll
sub
jle
fsubl
lcall
sti
lds
lahf
rolb
adc
les
in
loop
nop
jmp
sete
pop
nop
push
mov
lods
cld
inc
cmp
adc
repnz
push
in
notl
cmp
xor
jo
js
loope
loop
add
sti
dec
mov
pop
prefetch
sbb
insl
lcall
mov
mov
dec
lahf
jle
lret
test
loope
sbbb
shrl
shlb
or
mov
mov
sbb
call
insb
mov
push
adc
mov
pop
mov
adc
mov
clc
cmp
sbb
pop
and
or
sub
jle
lcall
mov
popa
sahf
mov
cld
call
dec
out
mov
ret
cs
xchg
insb
in
shl
movsl
xor
sbb
dec
into
and
repnz
xchg
stos
add
stos
ret
mov
cltd
outsl
jle
popf
push
lea
xchg
stos
push
jae
and
lahf
mov
lret
shl
or
fcomp
cmp
mov
fsubs
xor
push
cmp
and
int3
inc
ret
test
loope
int
ret
ljmp
xchg
popf
pusha
movsb
mov
sbb
or
repz
je
shlb
outsl
lahf
mov
mov
inc
insl
xor
cmp
adc
test
mov
ret
cmp
jg
clc
jmp
repz
inc
mov
sbb
mov
cmp
xor
lahf
in
arpl
sub
pop
jae
enter
or
dec
jmp
jl
jl
mov
sbb
test
icebp
lods
jo
mov
icebp
out
pop
stos
aad
cmpsb
repz
and
pushl
push
xor
jmp
ss
dec
mov
xor
mov
mov
mov
cmpsb
adc
fsubs
addr16
jne
loop
push
ds
cltd
mov
ds
test
pop
out
xchg
mov
adc
mull
push
clc
out
jl,pt
fidivl
loope
es
xchg
pop
stc
cmpsb
mov
stos
xor
and
sub
cwtl
push
insl
lea
add
or
aam
out
test
xchg
jl
cmp
movsb
test
or
cmp
xor
clc
ret
sub
daa
movsl
pop
xor
out
jnp
add
loopne
fnsetpm(287
mov
mov
xchg
pop
push
jle
ljmp
lcall
jmp
mov
jbe
ret
dec
test
cmpsb
sahf
jns
in
data16
int3
sbb
adc
adc
outsl
add
ss
lcall
popf
adc
cmpsl
cwtl
sbb
in
and
ja
xchg
mov
jae
inc
leave
adc
add
pop
mov
mov
add
mov
mov
lret
push
shr
xchg
and
lea
into
inc
rclb
ror
ds
fs
jg
into
pop
push
sti
mov
daa
fsubs
fwait
inc
sbb
test
je
mov
stos
ljmp
mov
sbb
fidivl
movsb
dec
inc
in
rolb
outsl
jns
xchg
push
dec
pop
into
sahf
push
mov
loope
pop
sbb
mov
insl
imul
les
adc
loop
stos
adc
das
sub
jecxz
adcb
cli
xor
or
loope
or
add
hlt
jne
xor
pop
rcrb
lock
je
insb
push
shll
fisubrs
jns
jecxz
inc
cli
addr16
jl
int
mov
int
push
ds
sub
aam
xor
sub
xchg
repz
cld
xor
call
cld
movsb
mov
mov
or
push
push
lahf
pop
inc
push
cmpl
add
fldz
lods
les
sub
adc
jb
xchg
mul
pop
cmpsb
inc
mov
or
fiadds
cs
pop
popf
cmc
ds
mov
pop
or
in
dec
mov
dec
cld
adc
push
inc
pop
lret
outsb
fwait
mov
insb
fwait
sahf
test
jbe
stos
lea
addl
push
fstpt
lds
push
movsl
imul
or
icebp
sbb
clc
in
xchg
ja
mov
push
rclb
outsb
mov
test
xor
jns
and
stc
mov
mov
lods
adc
jp
iret
movsb
cmp
dec
test
jnp
movsl
mov
aam
mov
xchg
imul
or
vpshlw
pop
jae
pushf
fldl
js
push
pop
js
mov
pop
lret
pop
inc
jb
xor
aaa
repz
data16
sbb
inc
inc
subb
fsubp
popf
insl
fsubrp
jne
sahf
mov
mov
cmp
adc
pop
fsubs
or
cmp
sub
push
sub
and
fdivl
xor
lret
cmp
add
outsl
in
sbb
imul
iret
add
push
inc
gs
ljmp
and
cmpsl
test
ror
inc
cmp
lods
lret
jl
fldt
xlat
xor
sub
addr16
ficoml
popf
and
pop
and
push
pop
pop
and
aaa
fdivr
push
push
mov
fisubrs
and
js
pop
js
cmc
ljmp
mov
insb
xchg
mov
xor
mov
popa
push
jl
dec
inc
push
mull
mov
stc
xor
cmpsb
popf
repz
cwtl
sub
ds
mov
out
cmpsb
loopne
xchg
mov
nop
adc
cmp
mov
or
rol
lcall
fdivl
shll
imul
inc
jmp
call
lea
mov
dec
data16
cmp
dec
outsl
add
pop
jge
mov
fmuls
sahf
mov
push
outsb
daa
jns
fcmovnbe
aaa
jbe
addr16
push
dec
pop
mov
or
mov
mov
nop
aad
imul
mov
jmp
in
out
mov
add
push
cmp
scas
push
sbb
adc
lods
cmp
pop
fadd
outsb
lods
movsb
and
jecxz
inc
lods
mov
or
lret
lods
fwait
insb
xor
push
addr16
test
mov
or
xchg
xchg
lcall
loopne
pop
or
mov
pop
icebp
aaa
popf
push
gs
es
sub
fimuls
cld
ja
sti
or
out
shr
inc
test
sbb
lahf
lret
and
in
loop
push
pop
ss
cmc
or
jle
mov
divl
mov
dec
jns
in
mov
clc
mull
test
testl
and
ret
es
xor
mov
fcmovne
adc
fdivl
sub
mov
bound
xor
mov
sti
mov
stos
dec
jb
jg
test
xbegin
inc
out
push
jns
incl
mov
insl
xor
mov
sbb
std
inc
fadds
push
sbb
repz
jne
ja
add
inc
push
dec
jg
repz
cs
test
xchg
and
jmp
push
ja
data16
out
and
adc
xchg
xchg
adc
sbb
in
aaa
mov
sub
push
test
cmp
or
out
sarb
ss
push
leave
inc
test
cmp
leave
sbb
cli
in
ret
pop
push
ss
int3
mov
test
int3
das
data16
jg
sbb
xchg
mov
ss
mov
inc
sub
push
or
enter
push
aaa
mov
arpl
inc
notl
cli
dec
popa
xor
adc
mov
xorb
push
mov
inc
js
and
das
xor
cltd
lea
sub
push
sbb
add
jmp
mov
adc
scas
mov
cmp
sbb
je
mov
bnd
mov
sti
idiv
ljmp
js
fdivr
mov
add
out
mov
add
push
mov
add
psrld
mov
movb
or
test
imul
je
fs
push
insb
jo
fadd
imul
lret
out
jne
pop
lahf
push
xchg
loopne
lods
jl
pop
mov
loop
mov
jbe
lret
mov
dec
xlat
je
adc
movsl
push
mov
ret
adc
jge
xor
pop
sar
sbb
mov
mov
jle
xchg
mov
mov
dec
insl
mov
mov
push
mov
push
and
cmp
fidivrl
leave
jmp
cmp
dec
gs
lock
dec
xchg
cld
mov
test
jbe
lods
push
loopne
mov
stc
dec
add
test
stos
jmp
jle
add
rol
lea
or
dec
lahf
mov
jg
js
call
aaa
repnz
xlat
popa
lahf
push
js
push
xchg
es
cmp
movswl
dec
inc
loope
adc
add
pop
repnz
push
add
jbe
out
test
mov
inc
fcompl
sub
scas
and
dec
and
pop
inc
in
sub
xor
out
popa
ja
xor
adc
sti
mov
lahf
cmpsl
incb
cmp
js
pop
icebp
sbb
and
jnp
lret
insb
or
mov
push
push
stos
dec
adc
mov
add
mov
imul
jb
js
push
lahf
sbb
hlt
das
enter
pusha
lock
mov
cmpsb
mov
jp
lcall
out
xor
jge
mov
and
jb
or
out
lea
test
idivb
rorl
jnp
fcmovnbe
inc
cli
sbb
mov
lahf
fstpl
jae
and
push
pop
mov
xor
pop
test
mov
rcrl
outsb
push
hlt
mov
sbb
mov
pop
xchg
js
mov
sub
push
cmp
jno
notl
fiaddl
mov
sahf
or
cmp
andl
ficomps
shll
bound
jmp
in
mov
imul
int
call
stos
into
imul
pop
xchg
lock
push
ret
insb
sbb
data16
sarl
mov
and
pop
pop
sbb
and
fistpl
iret
stc
mov
js
adc
xor
sbb
mov
inc
lahf
cmp
popa
cmpl
add
add
adc
inc
cmp
xor
or
jnp
lcall
sarb
movsb
jns
push
push
mov
adc
ds
inc
adc
jnp
or
mov
out
ret
dec
inc
add
mov
pop
or
mov
aas
xchg
ds
fistpll
cmpb
sub
dec
je
fisubs
cmp
cltd
mov
mov
sbb
insl
mov
imul
shlb
insb
fdivrs
shll
push
pop
out
insl
mov
stos
popf
inc
jae
or
jle
cmpl
adc
or
dec
sub
xlat
dec
push
in
sub
mov
jno
gs
inc
sub
pushf
cltd
jg
or
mov
push
insl
inc
loopne
fisubs
dec
push
pop
aaa
push
mov
mov
cwtl
pop
sub
cmpsl
xor
xor
jbe
call
out
pop
mov
xchg
shlb
pop
cmp
mov
sbb
test
ljmp
repz
pushl
fwait
jns
push
rcl
dec
or
ds
movsb
jns
sub
ja
jae
dec
scas
push
cmpsl
lds
push
adc
pop
outsl
loope
loope
push
dec
and
push
inc
and
cld
dec
push
push
hlt
jecxz
je
inc
xor
movsb
mov
daa
dec
nop
jge
adc
sub
flds
fisubs
xchg
xchg
pushl
rorl
pop
jle
xor
lock
mov
and
bound
or
xor
pinsrw
sahf
popf
dec
sbb
inc
lcall
inc
sbb
loopne
adc
and
jecxz
lock
ficoml
mov
ret
sbb
in
xchg
mov
xor
mov
incl
bound
xor
xchg
mov
gs
aad
pop
ret
mov
jmp
adcl
outsb
hlt
sub
cmc
cs
push
lods
pop
push
lret
bnd
cmpsb
fwait
cmp
cli
mov
mov
fistpl
js
adc
and
rcll
jno
cli
cld
pop
in
andl
push
mov
mov
test
push
rclb
add
fucomp
mov
std
imul
push
mov
sub
enter
push
lea
sbb
jbe
daa
cmc
add
in
xor
aaa
xor
add
xchg
push
and
cs
out
lock
add
stos
out
push
and
cmc
jae
mov
rcll
jle
les
pop
jmp
and
cltd
ljmp
sbb
shlb
jp
loopne
xchg
push
ficoms
push
xchg
out
fidivl
or
lret
loope
rcll
outsl
idivb
out
iret
fcmovu
push
sbbb
mov
jle
jne
push
push
daa
lret
mov
mov
mov
xchg
popf
fcoml
cwtl
out
imul
pop
lds
outsb
jl
icebp
ret
inc
js
imul
jecxz
mov
outsb
pusha
das
mov
test
arpl
dec
dec
sub
popf
cli
cltd
movsl
xchg
pop
push
dec
mov
adc
inc
out
std
les
mov
subl
fld
int
iret
call
leave
push
test
fadds
scas
clc
idivb
mov
mov
sub
ljmp
cld
movsb
cmpsb
sbb
inc
cmp
mov
push
add
jns
jbe
sub
sahf
ret
jge
mov
sbb
in
jo
lahf
or
bound
dec
mul
mov
pop
scas
pushf
xchg
push
into
sahf
aad
aaa
inc
mov
movb
popa
jne
daa
out
ficoms
mov
cwtl
ret
ja
pusha
push
sahf
shrb
jle
es
add
fwait
lret
mov
pop
add
jbe
pushf
iret
stos
in
inc
jne
cmc
clc
jno
mov
mov
xchg
les
jl
add
cmp
loopne
pop
mov
or
jb
or
lahf
pop
mov
shrb
and
divb
out
push
mov
jae
jnp
or
adc
std
out
mov
mov
rclb
pop
and
repnz
icebp
pushf
mov
mov
or
in
pop
pop
gs
cmp
sar
pop
dec
push
popl
or
jb
push
outsl
and
cmpsb
dec
jecxz
push
jmp
jl
push
jg
cmp
popf
and
lods
push
and
out
fcoml
mov
test
leave
add
pop
loopne
call
gs
inc
add
push
pop
add
adc
jnp
mov
dec
shll
fadd
mov
xor
popf
xor
push
hlt
fidivl
push
inc
test
pop
cmp
cmc
pop
lods
xchg
imul
jb
xchg
mov
fwait
and
sbb
dec
pop
lahf
cmp
ret
pop
add
repnz
stos
and
cwtl
addl
add
xchg
jns
sbb
inc
cmp
std
in
subl
fmull
test
xchg
shl
xchg
and
in
lcall
out
lock
push
mov
inc
repnz
idivb
dec
lods
xor
mov
or
repz
jle
rorl
mov
xchg
lods
mov
int3
sahf
mov
cmp
adc
mov
and
sbb
mov
ret
xor
dec
ret
and
mov
or
cmp
mov
jle
xor
enterw
fcmove
pop
xchg
cmp
cltd
imul
test
inc
push
fcmovne
cmp
mov
xor
push
adc
adc
mov
inc
fisttps
add
ret
andb
cltd
in
xchg
cmp
je
aaa
lods
adc
dec
mov
xchg
pop
inc
ffreep
mov
stos
daa
lods
jge
sahf
or
mov
mov
and
sub
jmp
les
leave
std
mov
ret
and
pop
push
adc
add
xchg
sbb
lcall
xchg
fistps
das
lret
cmp
adc
sub
fcoms
adc
nop
ja
mov
mov
fiaddl
and
test
and
rcrl
cmpsl
add
cwtl
sub
subl
cmpsb
arpl
and
inc
xchg
fnstsw
test
lahf
ret
aam
clc
or
sub
sbb
mov
dec
xchg
add
outsb
xchg
inc
pop
xchg
xchg
and
push
adcb
xchg
adc
ss
in
mov
int
add
cmp
add
cmpsl
mov
scas
sti
mov
cltd
dec
ficomps
adc
ror
sbb
out
mov
data16
cltd
loope
lret
inc
aaa
outsl
mov
cmp
pop
inc
jl
mov
aas
mov
shrl
mov
dec
xchg
jmp
lock
ja
dec
les
lods
inc
ja
xchg
mov
mov
mov
call
cmp
inc
aaa
inc
stc
mov
adc
rclb
inc
and
xchg
and
push
stc
push
scas
push
sbb
andb
outsl
or
and
pop
jae
mov
cli
mov
std
negb
xchg
in
iret
dec
xchg
enter
dec
arpl
std
movb
cmp
pop
addl
mov
test
fnstsw
xor
sti
jmp
dec
adc
cmpsb
insb
push
insl
push
int3
xlat
or
cmp
pop
lock
std
insb
in
inc
popf
fs
and
iret
out
and
fcomps
mov
int3
aaa
lock
iret
adc
xor
cmp
mov
shrl
ja
shlb
xchg
jmp
mov
xchg
insb
repz
add
test
mov
jecxz
xor
stos
stc
cmp
inc
xor
mov
mov
aad
ret
lahf
pop
lds
popa
mov
xor
stos
int
and
xchg
and
test
mov
mov
push
movsl
mov
test
push
push
and
movsl
cmp
inc
enterw
sahf
jo
mov
popf
divl
nop
aas
movsb
sub
mov
pop
and
push
cmp
dec
jg
or
iret
mov
and
push
pop
sti
imul
cmpsl
int
xchg
cmpsl
ss
push
xchg
mov
in
leave
add
mov
inc
cli
out
jb
fiaddl
dec
imul
and
lods
daa
xchg
popf
test
push
xchg
inc
out
lods
das
in
sub
mov
or
adc
repnz
and
mov
dec
sbb
aam
fdivrl
insl
push
push
std
cmp
adc
mov
daa
cmp
repz
xchg
in
lea
jns
clc
imul
and
dec
add
daa
mov
movl
les
mov
fildl
lea
push
mov
sbb
xchg
pop
jl
push
push
mov
ss
sbb
iret
les
ds
pop
or
sti
mov
mov
add
push
fistps
jle
sub
filds
fstpl
icebp
pop
clc
ss
mov
sahf
cmp
in
xor
lahf
xor
and
push
mov
lods
sbb
dec
or
sbb
add
inc
xor
push
xchg
add
push
imul
aas
inc
adc
and
adc
or
xchg
sbb
pop
xchg
stos
bound
jb
mov
arpl
or
es
iret
movsl
aas
popl
jecxz
jecxz
clc
mov
call
sbb
loopne
jbe
out
ljmp
test
and
jl
outsb
inc
stc
push
mov
jae
fidivrs
or
or
mov
pop
stos
mov
movb
test
jb
repz
inc
pop
lods
cmp
xor
fwait
pop
mov
mov
std
aad
fs
das
mov
jmp
jecxz
icebp
aam
dec
jg
insl
pop
mov
add
add
int3
add
jb
push
test
fs
aas
imul
ret
mov
adc
into
out
outsl
cmp
pushf
jl
lret
inc
adc
jne
incb
sbb
sbb
cld
dec
jmp
aad
add
fsubr
xchg
jbe
xor
sub
pop
jnp
xchg
cmp
cmc
jmp
and
std
aas
scas
mov
mov
adc
push
lret
or
shrl
das
aas
popf
out
sbb
mov
inc
mov
sub
cmp
imul
jne
cmp
sbb
js
mov
nop
into
das
cmp
call
cltd
in
stos
add
jl
inc
daa
sub
jecxz
loop
mov
fcompl
xchg
adc
pop
cld
mov
dec
lock
pop
lock
sub
popa
push
popa
cmp
push
lock
inc
push
repnz
inc
xor
sbb
imul
enter
mov
push
inc
das
mov
cmpb
push
pushf
dec
les
mov
pop
sbb
xchg
cld
fcmovne
or
and
jp
in
jne
lods
xchg
popa
lea
mov
call
iret
sahf
mov
movsl
xorb
cmp
jp
jb
mov
rcrl
fs
mov
stc
jecxz
adcb
inc
push
std
ret
rorl
lock
sbb
insl
pop
mov
je
mov
ret
mov
pop
xchg
test
hlt
push
push
inc
jb,pt
jecxz
push
repz
das
cmp
fwait
dec
dec
pop
jne
push
subb
int
pop
cmpsb
int3
cwtl
dec
adc
sub
out
icebp
cmp
cltd
outsl
data16
jecxz
fisubl
out
inc
cmp
pop
in
and
pop
and
add
pusha
inc
js
inc
test
outsl
add
lcall
nop
pop
add
repnz
out
push
mov
lods
mov
jnp
mov
dec
xor
movsl
cmpsb
sub
mov
xor
inc
mov
pop
fdivrl
jo
adc
shlb
mov
inc
mov
xor
int
lcall
orb
push
pop
popa
inc
push
and
sub
push
jo
fisubrs
jge
add
pusha
lea
lret
push
push
push
sbb
outsl
mov
mov
and
pushf
xor
mov
xchg
movsb
movsb
stc
movsl
inc
pushf
pop
dec
sbb
xorl
ljmp
pop
adc
jnp
push
fisttps
or
and
shlb
out
data16
js
aam
in
mov
dec
sub
mov
gs
jnp
cmp
test
fidivs
arpl
lret
jae
jle
fsubs
repz
fimull
xor
push
add
mov
fs
mov
jb
imul
xchg
sub
jno
sbbl
sarb
push
jno
mov
hlt
mov
stc
int
aam
mov
cmp
push
mov
fadds
mov
imul
mov
pop
pop
shl
or
xor
cltd
add
test
adc
dec
out
inc
mov
mov
push
mov
push
aad
xchg
es
ja
push
loopne
arpl
dec
inc
outsl
clc
xchg
mov
dec
addr16
lret
shlb
cli
push
outsb
mov
and
les
sub
imul
sub
or
cmp
loopne
push
daa
mov
add
cmp
mov
xchg
inc
sbb
sub
scas
push
loop
push
pop
mov
jge
sub
and
test
out
jb
mov
dec
and
push
dec
icebp
and
add
xor
push
jg
stos
ja
sbb
jo
fcoml
rorb
fs
cmc
cmp
std
push
sahf
insl
gs
icebp
or
xor
jp
and
std
and
pop
shrb
push
subl
xchg
cmp
pop
test
lcall
lds
pop
jmp
test
mov
jne
pop
or
sub
aaa
dec
shl
clc
in
sahf
mov
xchg
pop
mov
fildll
into
mov
pop
or
out
dec
loope
clc
mov
cs
lcall
loopne
lret
adc
pushf
lods
cmp
pop
cmpsl
mov
sbb
cltd
and
emms
inc
xor
and
push
out
push
mov
pushl
push
push
cli
jmp
mov
icebp
inc
out
movsl
adc
jo
das
scas
insl
dec
cmpsl
loopne
dec
jp
ret
sahf
es
stos
mov
xor
cli
xor
pop
loope
insl
sbb
cmp
jno
add
xor
xchg
mov
fsts
xor
stos
cmp
cld
inc
cli
xchg
stos
scas
push
mov
test
jne
jb
test
dec
adc
dec
in
loope
cmpsb
adc
faddl
test
aad
mov
outsb
pop
neg
cmp
pop
sub
and
lahf
push
pop
lods
jecxz
mov
mov
add
and
notl
movsl
inc
pop
inc
dec
cmp
push
rcrl
xchg
insl
push
into
push
push
sbb
je
hlt
fistps
mov
mov
mov
fcmovu
dec
je
bound
test
jae
mov
mov
add
rcll
minps
xor
and
pop
push
das
cmp
jp
in
popw
les
mov
jge
lret
pop
mov
and
mov
push
cwtl
test
int
add
push
mov
jmp
addl
insl
pop
jg
out
arpl
pushf
push
lods
std
adc
xchg
fcoms
add
sbb
xor
xchg
dec
adc
push
in
xchg
pop
insb
sub
adc
pop
inc
andb
pop
mov
cmpsl
or
rcrl
fsubrs
dec
mov
sub
in
out
fdivl
int
jne
orl
cmc
push
fistl
inc
test
mov
shll
lahf
aaa
into
mov
cmpsl
je
xor
mov
push
jo
stos
mov
mov
sbb
push
xor
or
push
dec
shrl
insl
das
adc
mov
xor
sti
ja
inc
inc
imul
je
and
mov
adc
pop
adc
xchg
mov
pop
sub
outsb
arpl
push
jnp
cmp
lock
cs
cmp
jnp
loope
out
fs
js
mov
mov
add
ja
adc
xchg
int3
mov
mov
pop
pop
js
add
out
loopne
call
jo
mov
jg
and
pop
fwait
movb
dec
lds
fsubrl
pusha
add
arpl
push
or
idivl
add
popl
jae
jno
std
movsl
mov
gs
scas
and
jge
adc
or
cmp
arpl
jp
fcompl
hlt
cld
imul
in
imul
cld
mov
lcall
outsl
insl
stos
lock
ljmp
pop
fisubs
pop
sub
cmp
pop
mov
mov
mov
push
es
add
and
int3
repz
jge
lock
fdivrl
mov
in
mov
jbe
jno
lcall
pop
rcr
cmpsl
pop
mov
xchg
outsb
ss
fcmovnb
push
hlt
and
pusha
enter
fiaddl
stc
pop
push
mov
sbb
call
jge
push
pop
pusha
sahf
jl
clc
bound
out
aaa
adc
push
mov
push
adc
jl
push
insb
xorb
into
mov
inc
test
mov
insl
mov
and
cli
ret
cmp
mov
repnz
inc
and
jecxz
mov
sarb
push
hlt
inc
nop
je,pt
scas
dec
mov
mov
js
cli
xchg
lret
add
xor
aam
dec
sbb
mov
jmp
jno
icebp
cmp
out
in
push
jge
jns
call
mov
out
xchg
fdivrl
mov
xchg
xchg
inc
or
daa
or
fadds
xchg
orb
in
push
jl
jp
add
rcr
adc
std
push
and
jp
insl
dec
lea
popf
inc
call
xor
mov
inc
adc
cmp
test
insb
cltd
popa
or
addr16
pushf
inc
in
fsubrl
push
and
ss
mov
movl
loopne
bound
cmp
cmpsb
pop
clc
mov
push
neg
mov
xor
loopne
jnp
movsl
push
clc
mov
test
cwtl
decb
loop
add
jg
xor
xchg
daa
enter
push
jne
fildl
xchg
outsb
sbb
mov
mov
outsb
mov
lcall
pop
dec
repnz
inc
cltd
add
adc
cs
lret
push
out
add
dec
fistpl
inc
sub
push
push
pusha
add
lret
ret
sahf
aaa
sbb
cmp
mov
xchg
stc
in
imul
addr16
jecxz
scas
xchg
je
movsb
push
call
out
int3
inc
add
stos
push
dec
mov
in
dec
adc
mov
mov
cmp
inc
xor
test
mov
stc
jno
push
into
sbb
cmpb
push
inc
or
push
mov
fildll
jae
or
std
ljmp
cmovnp
ss
aas
popa
pop
mov
sub
fcmovnu
shl
cli
cli
ficoml
imul
cli
imulb
stos
fisttps
inc
sub
sbb
aaa
mov
decl
ss
movsl
bound
jg
imul
subl
mov
xor
jmp
lcall
jno
hlt
aad
xchg
aam
jb
jo
orb
sbb
lret
add
xchg
jge
test
testb
fbstp
dec
pop
int
cmp
bound
dec
pcmpgtd
jb
mulb
xor
shl
sub
push
stos
daa
cmp
mov
pop
movsb
daa
push
lret
push
fsubr
add
pop
leave
cmp
aam
aas
shl
fsubrl
outsb
fucomip
add
fucomip
pop
push
pop
or
cmp
mov
ret
xchg
scas
loope
in
mulb
lahf
aas
and
or
lods
pop
and
jo
movsb
mov
jl
pop
fdivs
lcall
fs
push
xchg
push
xchg
pop
test
jp
sbb
xor
hlt
lret
hlt
ds
cltd
jecxz
pop
lock
stos
shlb
leave
add
fwait
test
adc
mov
jae
sbb
negb
popl
gs
mov
or
adc
adcb
dec
jne
ret
jnp
test
pusha
xor
push
out
aad
push
aam
subb
push
shlb
loope
ret
adc
fs
divb
test
in
inc
jmp
mov
mov
sbb
jne
imul
jg,pn
mov
out
test
push
xor
inc
or
cmp
xchg
cltd
pusha
aas
imul
push
pop
scas
pop
jb
aas
jecxz
leave
loope
loope
and
pop
cmp
out
dec
test
mov
sub
push
test
adc
iret
and
pop
in
mov
negl
xchg
cmc
mov
pop
mov
lea
je
xlat
mov
inc
in
sbb
ret
sbb
pop
jbe
mov
and
and
sub
xor
loope
xchg
pushf
adc
cltd
sbb
mov
jae
push
loop
pop
pop
sub
and
outsb
inc
lds
daa
cmpw
sbb
mov
pop
pop
lea
xchg
jl
jmp
fdivl
inc
fmul
pop
cld
in
cmpsb
mov
aaa
mov
mov
cld
push
enter
push
mov
adc
dec
or
push
mov
or
adc
adc
aad
pop
test
jae
nop
xor
inc
cld
inc
cmp
int3
lods
lods
push
out
and
pop
add
dec
push
int
push
movsb
js
mov
mov
sbb
out
aad
xchg
data16
adc
xor
notl
pop
lea
out
outsb
dec
out
push
cmp
or
cmpsb
jb
sahf
mov
loope
cmp
int
sbb
mov
test
int
loope
sahf
mov
les
into
pop
ds
push
cs
pop
inc
scas
lea
ja
rorb
jbe
jp
push
aad
out
jb
in
dec
sbb
and
movsb
adc
subb
cmp
insb
in
jns
adc
shrb
and
push
sub
mov
lds
hlt
pop
mov
fst
push
pop
lds
push
pop
pusha
out
pop
repz
cmp
mov
mov
dec
mov
js
adc
sub
ret
mov
ss
outsl
clc
pop
in
outsb
clc
xor
dec
pushf
pop
mov
fwait
jl
shrb
das
and
dec
clc
sbb
cmp
sahf
add
jo
pop
fsub
ret
das
push
into
fwait
xchg
popa
fsubrl
mov
mov
ds
test
mov
add
add
insl
add
push
loopne
int3
xor
bound
out
jl
add
lods
sub
xlat
or
hlt
cmp
repnz
xlat
into
sub
fidivs
sbb
push
in
subb
sub
rolb
or
mov
or
xchg
nop
mov
fs
mov
fwait
js
adc
mov
test
pop
mov
scas
frstor
pop
mov
cmp
insl
in
loop
imul
push
loopne
mov
int3
xchg
mov
adc
mov
scas
loop
pop
popa
out
andl
jl
lret
adc
shrb
push
xchg
clc
jge
outsl
pop
pop
movsb
xchg
sbb
popf
xchg
mov
add
mov
popa
mov
stos
ret
pop
leave
test
lret
mov
ja
push
test
stos
push
aad
mov
or
gs
pop
loop
ljmp
mov
and
jecxz
jmp
xorl
pop
and
data16
push
leave
fwait
sbb
xchg
push
repz
sub
rorb
jge
xchg
adc
pusha
add
mov
jg
js
cmp
add
xchg
cli
dec
mov
pushf
sub
adc
jb
adc
push
pop
mov
xor
dec
ret
rorb
dec
mov
movsl
xor
sbb
cli
xchg
push
add
and
inc
mov
and
mov
xchg
and
xor
jmp
fnstenv
and
clc
int
sub
push
mov
les
mov
test
aaa
std
fbld
fldcw
adcb
xchg
and
aam
loopne
ret
sbb
test
mov
daa
std
pop
cmp
imul
inc
mov
push
mov
das
ror
pop
mov
xchg
sub
stc
cmc
xadd
sub
aaa
lret
mov
pop
mov
inc
and
xchg
pushl
add
xchg
mov
mov
aam
stc
xchg
push
mov
pop
inc
xchg
and
insl
lods
stos
js
adc
into
inc
fldl2t
xchg
shll
mov
loope
dec
mov
adc
and
push
pop
pop
pop
loope
sahf
pop
dec
jbe
ret
mov
add
aas
pop
and
lea
dec
adc
pop
jbe
push
in
sub
sbb
out
push
loope
mov
insb
out
or
je
cmp
adc
lds
push
add
lds
push
xchg
fisttpll
int
cmpsb
sbb
subb
push
movsl
stc
push
das
inc
and
cmp
push
loop
push
and
or
cmp
mov
cs
icebp
imul
pop
fucom
imul
xchg
and
mov
and
adc
xchg
jns
sahf
pop
inc
fstpt
lcall
ret
aam
iret
pop
das
pop
sbb
push
pop
ds
or
mov
int
mov
mov
jmp
cmp
adc
adc
mov
xor
aam
mov
add
pop
sub
subl
shrb
mov
adc
lea
cmp
xlat
ficompl
adc
and
je
sbb
push
gs
or
ret
cmpsl
lcall
cltd
cltd
stos
sbb
xchg
ljmp
adc
dec
jge
stc
cmp
fadd
mov
cmp
ljmp
fucomi
jmp
mov
shll
adc
das
add
push
gs
lcall
cmpsl
jae
xchg
hlt
addr16
sub
mov
mov
inc
mov
outsl
push
mov
mov
call
into
sbb
addr16
jnp
push
gs
or
cmp
mov
movsl
lahf
sbb
push
mov
inc
out
js
mov
add
ljmp
inc
imul
dec
int
inc
int
add
mov
dec
daa
jno
testb
arpl
lret
shl
outsl
decb
mov
test
repz
mov
insb
flds
in
lds
pop
lods
xchg
and
mov
jmp
movsb
jo,pn
roll
push
cmp
data16
add
loope
inc
mov
scas
insb
xchg
add
sub
fwait
mov
jb
and
mov
inc
jbe
xor
xchg
loop
insb
xor
mov
or
pop
fistl
cmp
adc
test
jb
jecxz
pushf
pop
cmc
repz
mov
idivb
push
push
mov
je
shrb
sub
and
imul
sbb
movsl
mov
pop
incb
dec
pushf
or
jae
sbb
mov
daa
mov
cmpsl
push
ja
push
sarb
sbb
aam
push
lock
daa
ds
idivl
lret
inc
dec
ss
inc
add
dec
movsl
out
ret
clc
adc
xor
or
push
adc
pop
scas
out
inc
dec
mov
mov
inc
adc
cltd
or
mov
cmc
sbb
in
aad
fiaddl
outsl
popa
gs
sbbl
push
das
cmpsl
popa
mov
xchg
bound
je
aaa
out
aaa
aaa
fxch
cmp
xchg
lahf
jnp
ret
adc
xchg
adc
dec
and
xor
xchg
add
jo
fstpl
shlb
sbb
inc
jnp
push
ds
lea
xor
fs
cmp
orl
and
xchg
xchg
and
mov
insb
sti
sbb
or
mov
xor
dec
xor
pop
mov
fldl
sbb
cli
add
jl
inc
jns
adc
mov
cmp
fidivl
push
pop
ss
jb
icebp
push
out
test
shlb
daa
or
stos
jne
inc
pop
pushf
push
loopne
sub
adc
mov
cmp
arpl
mov
or
sarb
mov
test
pop
hlt
lret
cmp
add
lcall
jmp
or
cmp
pop
shl
jno
xor
fwait
mov
mov
test
and
repz
dec
xchg
sub
ret
jge
test
pop
adc
in
jo
test
cmpsl
mov
and
mov
iret
cli
mov
inc
fmul
xor
cs
repz
cltd
sub
sub
pop
scas
mov
fnstenv
mov
lret
ja
mov
adc
pop
scas
ss
push
mov
pop
out
clc
pop
ret
sbb
lahf
adc
or
std
or
mov
stos
lcall
or
jb
push
cmp
aad
pop
mov
stos
cwtl
sbb
ror
lret
movsl
daa
stos
push
cmp
and
add
push
lods
not
repz
rorl
inc
inc
je
push
and
inc
cmpsl
xchg
in
pop
insb
cmpsl
mov
push
lcall
mov
push
or
sti
dec
xchg
loope
mov
rcll
std
jmp
push
xor
sbb
mov
ret
aad
push
inc
push
pop
xlat
bswap
mov
mov
ds
or
cmp
jns
jnp
mov
daa
push
sti
stos
in
ds
lret
mov
roll
mov
in
push
iret
push
leave
stos
addl
push
inc
add
cmpsb
repnz
sbb
lods
das
lock
dec
inc
popa
pop
cwtl
mov
std
add
clc
jmp
nop
mov
xchg
push
add
push
jl
cmpsl
sub
addps
or
sub
outsb
sub
inc
gs
sub
jae
arpl
push
adc
mov
rol
call
sub
push
jl
ficomps
fs
xchg
fiadds
leave
lea
inc
stc
pop
or
in
cwtl
aas
stc
add
jnp
arpl
pop
mov
mov
dec
out
dec
outsl
test
mov
scas
push
test
test
ret
adc
jmp
push
mov
ljmp
pop
or
lods
pop
and
xchg
and
dec
xor
cmp
sbb
mov
iret
mov
and
loopne
sub
lahf
dec
cmc
mov
push
cmp
pop
or
out
jbe
pop
or
jmp
ds
and
call
push
ret
dec
sub
les
dec
jnp
es
sub
push
or
nop
jbe
pop
cmpb
movb
sbb
mov
pop
mul
fcmovnb
rcll
inc
pop
pop
rclb
fistpll
mov
add
push
loope
lret
mov
stos
inc
lods
inc
imul
test
pop
inc
xchg
mov
aas
rcrb
fstl
loop
add
jns
hlt
test
imul
subl
mov
fnsave
mull
addb
movsl
xor
aad
adc
pop
mov
mov
push
imul
pushf
loopne
cli
jle
pop
xorb
sbb
xchg
repnz
jle
je
adc
ss
lahf
sub
inc
cmc
adc
adc
inc
jg
mov
movsb
xchg
enter
cmp
and
or
shlb
push
cmp
shlb
pusha
sti
mov
fiaddl
pusha
call
pop
fisubs
push
jo
jecxz
call
stos
mov
xor
loop
clc
imul
sbb
call
les
dec
popa
push
push
mov
and
push
sar
inc
pop
mov
stos
pop
int
lahf
ret
sti
cmp
test
sbb
ljmp
add
idivl
inc
mov
stc
jge
pop
lret
sub
ret
sbb
sarl
ljmp
xor
popf
pop
fstpt
dec
cmp
mov
xchg
and
daa
push
lahf
mov
out
mov
movsl
js
push
adc
shl
in
das
hlt
imul
int3
cmp
leave
loopne
cmp
push
shll
mov
mov
jle
xchg
jns
imul
cld
pop
xchg
dec
fists
lods
cmp
lcall
inc
hlt
fbld
xor
movsl
pop
push
outsb
mov
test
into
jb
jecxz
pop
mov
fistpll
roll
push
jg
dec
cmp
mov
scas
sti
pop
fistl
push
or
mov
lret
pop
das
dec
movsb
cltd
sbb
mov
stos
repz
clc
data16
rolb
jb
xlat
pop
xlat
sub
loope
hlt
popf
dec
xchg
sub
rol
xchg
xor
lods
iret
cmp
pop
and
dec
sub
mov
lret
sub
push
mov
stos
lock
jecxz
push
psraw
fs
mov
out
lcall
outsb
or
xor
scas
sahf
jg
cld
push
addr16
mov
inc
jne
sbb
mov
inc
sub
stos
mov
mov
cmp
repz
andl
int3
add
push
int3
es
push
push
jns
out
bound
fdivrs
dec
in
sti
mov
mov
icebp
adc
inc
aas
xchg
sbb
and
add
lods
and
jb
lock
loope
loop
jnp
fs
test
push
cmpsl
or
int3
jb
and
aaa
add
pop
sbb
popa
js
cmc
adc
push
dec
jae
stos
das
mov
je
nop
aam
sbb
lahf
push
mov
push
xchg
imul
pop
mov
dec
pop
rcl
lret
in
push
cs
ret
jns
ljmp
aas
loope
or
inc
out
sub
aas
xchg
icebp
ss
repnz
mov
jmp
test
outsl
inc
imul
sbb
mov
orl
xor
insl
xchg
add
bound
sbb
push
int3
xchg
or
lret
xchg
or
and
sbb
sub
clc
add
mov
xchg
test
imul
outsb
cwtl
out
add
shll
ljmp
dec
je
fdiv
aaa
inc
mov
fsubrl
mov
dec
cmp
ja
xchg
test
cs
sbb
xor
xchg
rcrl
js
mov
cwtl
orl
inc
les
imul
andb
int3
pop
cmpsl
lock
mov
fisttpl
scas
jae
dec
cli
scas
mov
mov
out
fisttpll
and
imul
xor
cltd
dec
pop
lea
icebp
out
jmp
addb
lahf
lretw
lods
out
cmc
and
mov
outsl
data16
jae
sbb
call
in
xor
or
mov
sub
xchg
jns
js
add
cmp
jae
push
pushl
adc
pop
push
inc
cmp
mov
jl
add
inc
sub
add
xchg
fwait
dec
xor
xlat
in
cmp
js
int3
mov
ret
xchg
daa
push
mov
mov
or
and
into
xchg
cs
mov
xorb
in
je
cmc
push
js
push
dec
in
jae
out
das
loopne
rcll
xchg
mov
imul
dec
outsb
mov
bound
sub
jle
mov
test
adc
aaa
stc
mov
dec
repnz
mov
xor
cmp
or
inc
cmp
jmp
data16
ja
dec
push
mov
xchg
cmp
sub
int3
dec
fucomip
dec
imul
mov
mov
andl
gs
inc
js
sbb
xchg
cmp
mov
es
test
mov
adc
cli
les
je
mov
loopne
flds
dec
rcr
mov
popa
sahf
cwtl
mov
popf
lods
out
popf
dec
jmp
loop
mov
pop
andl
or
subb
rcl
pop
test
jge
pop
adc
sub
sbb
push
dec
mov
mov
addl
test
cmp
insl
aam
pop
lahf
push
addr16
sbb
stos
scas
xor
and
loop
icebp
leave
adc
imul
jmp
and
and
mov
jl
ja
scas
fistpl
push
xor
ret
and
scas
fiadds
push
jbe
sbb
mov
inc
jbe
mov
test
sub
jo
aam
or
cmp
xchg
sub
movsb
pop
push
jp
push
sub
shlb
das
xchg
pop
in
mov
mov
mov
mov
incl
adc
dec
leave
xchg
std
loopne
notl
and
sbb
shll
xor
and
pop
mov
jne
xor
sbb
ss
mov
or
jb
xchg
sbb
filds
mov
jmp
jno
shlb
aad
scas
test
test
movsl
int3
xchg
data16
pop
ror
gs
pop
pop
xlat
leave
pop
dec
sbb
mov
mov
repz
jo
cmp
lcall
out
jmp
aad
scas
mov
cli
arpl
mov
xchg
into
in
inc
sahf
iret
sub
adc
mov
cmp
mov
adc
imul
dec
fbld
sbb
test
xchg
iret
pop
lcall
dec
sub
mov
rcrb
fwait
push
and
outsl
mov
jmp
test
push
adc
adc
mov
mov
add
cmp
int
adc
aas
arpl
push
mov
ret
mov
xchg
jmp
xchg
jmp
call
xlat
sbb
scas
or
pop
imul
pop
jle
std
insb
fisttpl
out
aaa
dec
cmp
imul
jnp
jp
stos
loope
inc
repz
aas
lods
xchg
roll
jnp
out
xchg
pop
xchg
scas
mov
xor
je
cmp
and
iret
xchg
jecxz
fldenv
mov
arpl
mov
push
insb
in
push
outsb
inc
jbe
aaa
sub
mov
dec
lret
sbb
cmp
insl
cltd
add
sub
insb
fidivrl
adc
push
jne
push
lcall
xchg
cltd
mov
pusha
cmp
sub
xchg
xchg
and
divb
lds
jg
test
mov
pushf
cld
sahf
fldl
dec
dec
shll
adc
jmp
xchg
lcall
lcall
in
lcall
mov
enter
lcall
pop
cmp
sbb
repz
out
mov
shl
enter
or
inc
jne
clc
imul
pushf
push
xchg
xchg
dec
dec
adc
insl
jo
hlt
pop
dec
cmp
std
divl
mov
mov
pop
lret
daa
xchg
sbb
test
mov
jne
dec
xchg
arpl
lret
mov
adc
test
fs
int3
in
push
mov
std
sub
jne
ror
mov
adc
xor
in
mov
add
scas
add
mov
ljmp
cltd
lret
add
aas
outsb
mov
sbb
xchg
pop
shrb
cmc
pop
xchg
loope
mov
jns
in
sub
sub
pop
mov
push
cmp
cmpsb
aad
mov
nop
adc
push
xchg
mov
add
popf
xor
movsb
mov
fwait
ret
into
bound
or
not
lcall
push
jb
rorl
fwait
pop
jg
lds
add
inc
fmuls
pushf
inc
mov
cs
sub
xor
push
and
xlat
repnz
xor
xchg
imul
jecxz
gs
loope
sbb
loope
sbb
push
inc
test
jne
cmp
or
aam
call
xor
mov
push
mov
xchg
mov
es
inc
push
mov
inc
push
mov
jge
jb
mov
outsl
imul
sbb
hlt
daa
jl
sub
sbb
stos
push
ret
lret
ja
repnz
rorb
sub
in
in
xor
pop
imul
dec
out
sbb
pushf
adc
add
aas
out
dec
fwait
mov
sbb
pop
mov
jle
rorl
daa
stc
push
push
fidivl
in
das
sbb
xchg
jg
decb
xor
xor
mov
dec
test
lods
imul
adc
cmpsl
adc
cmc
jnp
mov
and
pop
push
imul
pushf
in
dec
cwtl
stos
test
scas
mov
data16
inc
push
dec
inc
loop
iret
bt
and
pop
inc
icebp
xchg
das
or
or
ret
xlat
stos
sbb
daa
push
movsb
pop
je
fsubr
ret
push
xor
aas
and
jp
data16
inc
mov
dec
push
jbe
mov
nop
in
aad
inc
ljmp
mov
and
xchg
and
inc
testb
aam
mov
mov
add
gs
sub
inc
and
sub
sbb
mov
adc
sub
pop
mov
cmovs
sbb
imul
mov
xor
jle
shl
movsl
xor
out
in
mov
inc
inc
sbb
cmpsb
dec
xchg
push
xor
shrl
jne
out
addr16
cmpsb
sbb
loopne
js
cmp
sbb
push
mov
into
stos
sbb
add
subb
lock
jb
aam
adc
xor
dec
stos
cmp
adc
sub
sbbb
jg
pop
scas
rorb
arpl
cltd
test
sarl
xor
stc
adcl
ds
icebp
mov
in
rcll
sbb
add
pop
dec
mov
clc
sub
or
mov
inc
imul
in
pop
ja
mov
ss
clc
pop
andb
mov
push
outsb
mov
pop
fldl
add
hlt
cli
mov
sbbb
out
test
adc
mov
loopne
pop
pop
lods
fmulp
add
push
lret
iret
jecxz
jge
pop
movsl
mov
push
jg
mov
iret
sbb
out
bound
adc
push
sbb
pop
lds
add
fmuls
and
std
mov
ret
xor
enter
adc
lahf
fs
jb
xor
dec
pop
pusha
cld
rorb
ret
shl
push
sbb
adc
iret
mov
inc
cmpsl
sub
add
insl
fldt
push
imul
sbb
mov
push
inc
inc
jno
add
sahf
shll
mov
mul
pop
roll
jnp
daa
cmpsb
pop
pop
mov
fidivrl
daa
push
iret
jmp
sbb
call
sahf
add
lcall
sub
pop
mov
pop
xor
sbb
adc
adc
aam
cmp
aaa
hlt
xchg
inc
popf
in
jmp
cmc
shll
sbb
inc
fidivrs
seto
mov
sub
ljmp
jbe
push
das
daa
rclb
jmp
sub
hlt
dec
pop
movsl
jbe
loope
outsb
aad
xchg
outsb
cmp
xchg
xchg
jge
lock
bound
lea
push
adc
dec
dec
lds
flds
imul
ret
cmp
xchg
inc
dec
mov
repz
inc
pop
lds
pop
mov
cs
inc
andb
test
enter
hlt
mov
dec
aaa
jnp
ret
aaa
outsb
loop
int3
sub
sbb
addl
xor
pop
outsl
sub
pop
xchg
mov
add
mov
or
int
cltd
push
mulb
stc
aas
lret
insb
xchg
mov
and
fstpl
test
dec
pop
pop
dec
ljmp
lcall
loopne
outsb
into
cld
inc
movsl
fisubrl
fisubs
dec
add
jp
push
ss
jmp
aam
pop
stos
test
arpl
dec
mov
imul
punpckhbw
mov
pop
dec
stos
mov
mov
iret
jle
or
and
stos
fmull
roll
sbb
mov
sbbb
jno
add
enter
andb
jp
jns
and
dec
push
movsl
dec
into
jnp
pop
inc
mov
xor
repnz
stos
mov
mov
xor
adc
xor
lcall
je
stos
sbb
sub
or
mov
roll
pop
push
mov
pop
cmp
or
push
xorl
fistpl
inc
pop
cmp
stc
inc
out
loopne
imul
addr16
js
xor
add
cmc
jne
inc
mov
int3
clc
ss
jmp
mov
xchg
sbb
mov
fnstenv
fcom
dec
mov
ja
cld
xor
mov
push
out
lock
arpl
rcrb
aam
pushf
imul
loop
pop
clc
jno
lret
mov
call
xchg
ljmp
cmp
std
mov
and
xchg
mov
mov
outsl
shrl
add
push
fsubrl
push
cmpsl
int
jle
shll
lock
nop
jg
outsb
pop
pop
push
fstl
andl
call
out
mov
and
hlt
test
ljmp
vunpcklps
pop
add
push
mov
ficompl
mov
faddl
pop
ja
or
ret
stos
out
jge
lret
fwait
leave
dec
cmp
dec
shlb
mov
xor
sbb
out
test
addb
sbb
jge
xchg
mov
imul
orl
pop
data16
popa
push
xchg
das
iret
xchg
adc
sub
push
or
in
pop
and
loope
mov
ljmp
lea
aaa
stos
xor
xor
das
pusha
movsb
seto
test
daa
bound
jp
bound
and
leave
fwait
sub
push
pop
mov
xchg
xchg
mov
inc
sbb
lret
shrl
push
adc
push
jg
jp
in
mov
push
loop
cmpb
les
sahf
fs
cmp
xchg
in
xlat
dec
lea
sub
xchg
push
push
rorl
iret
idivl
jecxz
test
or
popf
jb
mov
incl
xor
push
sub
and
and
pop
mov
mov
push
cs
or
outsb
mov
pop
dec
mov
jl
jl
and
cli
ret
jne
stos
cmp
or
out
push
rcrl
rorb
jno
cmp
clc
and
cmp
and
cmp
cmc
jmp
mov
imul
cmpsb
sub
shrl
adc
mov
jle
imul
aam
stc
std
and
loopne
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
data16
add
add
add
add
add
lods
in
sbb
xchg
sar
sub
sbb
pushf
xchg
push
or
enter
add
pop
add
movsb
lret
mov
or
das
push
pusha
sub
andb
sbbl
out
scas
imul
pop
shl
sub
call
mov
loope
ret
lds
aad
jl
leave
mov
rorb
add
arpl
cmovo
dec
push
jo
daa
fnstenv
sarl
loop
insb
mov
push
sub
xchg
mov
fidivrl
pop
ret
or
pop
bound
pop
jne
test
xchg
push
cli
cmp
fnsave
and
mov
test
hlt
pop
mov
addr16
xchg
pop
js
ljmp
push
loopne
mov
xchg
inc
stos
dec
sbb
adc
addl
jg
fisubrs
cs
lea
sahf
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
