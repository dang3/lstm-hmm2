and
sbb
arpl
ljmp
mov
pusha
push
mov
xchg
jle
cmp
mov
and
fs
shll
call
invd
fnstenv
mov
inc
lods
repnz
jb
adc
cld
jl
jbe
dec
sbb
fwait
sub
das
sub
sti
mov
ds
xchg
mov
aad
push
pop
mov
xor
repz
cli
js
jecxz
adc
fwait
xchg
das
xor
push
fldl
ret
inc
dec
xchg
inc
xor
cmp
xor
stos
leave
stos
fimuls
psrad
cmp
in
rorb
cmp
sbb
adcb
loop
stos
shr
movsl
mov
cli
or
jne
pop
mov
sub
mov
mov
adc
xchg
enter
mov
cltd
sbb
out
shll
stos
jno
cld
adc
sub
mov
fbld
dec
andl
movsb
jbe
testl
or
cmp
or
fdivrp
lods
rcrl
icebp
jno
and
cmp
jmp
add
stos
insl
mov
out
xchg
sub
fxch
and
adc
pop
inc
pop
fdivs
cmpsl
mov
inc
push
bound
divb
cld
jbe
add
sub
loope
aad
iret
in
cmpsl
test
leave
cs
and
add
gs
push
das
sub
dec
fnstenv
sub
push
or
lods
mov
mov
mov
fs
mov
gs
insl
and
aam
xlat
cmp
jnp
inc
or
cmpsb
or
xor
ja
or
sahf
test
or
popa
jae
in
test
mov
xchg
jb
pop
mov
imul
loope
orl
mov
loope
adcl
adc
cli
cmp
sbbb
aaa
mov
cmp
push
bound
xor
int
stos
jg
test
jbe
mov
xchg
test
push
xlat
lods
fidivrs
subb
cmc
xchg
int3
aaa
mov
shrl
inc
xchg
lods
fcmovnbe
lock
mov
mov
repnz
or
repz
inc
push
sahf
push
sahf
mov
lret
fdivp
ficoml
add
xor
icebp
or
andb
roll
std
or
cmp
jns
movsl
gs
out
fdivs
add
xlat
jmp
decl
lcall
stos
jo
fidivrl
roll
mov
mov
cs
stc
add
mov
inc
clc
call
push
xor
jle
outsb
les
int
dec
xlat
mov
shlb
cld
repnz
mov
sbb
pop
jecxz
lret
cmp
xor
test
loopne
xorb
rcrb
add
or
sub
loop
scas
and
cltd
popf
sbb
jp
inc
in
jl
orb
repz
mov
imul
fdivrp
add
rcrb
xor
cmc
clc
sbb
xchg
mov
nopl
dec
xor
test
pusha
adc
jg
cmp
dec
mov
mov
mov
mov
push
arpl
jmp
jo
fisubs
aad
push
lods
in
or
out
adc
push
mulb
in
add
repz
xchg
mov
or
shll
pop
imul
sbb
ja
mov
out
cmpsl
imul
xchg
dec
xchg
test
push
shlb
push
loope
push
lret
mov
cmp
mov
adc
adc
jle
repz
mov
cltd
int3
push
pusha
add
sub
sub
loop
add
push
pop
cwtl
jnp
test
push
mov
push
push
inc
xor
sbb
pusha
lock
test
rorl
scas
mov
pop
or
push
pop
mov
inc
pop
enter
lock
jbe
xor
xor
loope
data16
les
cld
jmp
pop
scas
cld
inc
adc
fucomi
or
cltd
hlt
add
das
sub
cmc
adc
push
jge
lods
aam
std
mov
test
xchg
xchg
bound
adc
mov
mov
mov
repnz
scas
fisubrl
pop
movsb
fs
cmpsb
enter
jb
enter
pop
cmp
add
clc
adc
or
mov
bound
inc
and
xor
flds
stc
and
and
xchg
outsl
jb
loope
inc
mov
push
in
push
hlt
inc
pop
aam
das
jns
out
fs
jo
mov
int3
or
inc
arpl
lods
jno
add
sub
jge
jp
and
dec
cmpsl
lahf
xchg
push
mov
lods
jb
xor
xor
add
push
gs
cmp
sub
mov
xor
arpl
push
ret
aaa
pop
cmpsb
dec
in
ljmp
orl
fsubl
out
xchg
gs
in
cmpsb
xor
mulb
in
add
cmpsb
xor
nop
mov
adc
push
enter
pop
sbb
into
inc
mov
lahf
jl
fbld
mov
push
mov
out
mul
push
jge
ds
mov
ficomps
lret
out
mov
adc
addr16
out
xor
insl
hlt
pushf
add
mov
sub
mov
fs
or
pavgb
jne
test
aam
and
sbb
or
push
xchg
aaa
sbb
movsl
lock
out
jmp
jecxz
jne
sti
mov
push
push
loope
inc
xchg
adc
aas
mov
cli
cmc
cwtl
mov
in
lods
xchg
mov
in
shl
fimuls
jo
pop
sub
out
sahf
xchg
push
or
cmpsl
adc
lret
das
adc
dec
cmp
xor
pop
push
xchg
sbb
push
jno
and
dec
sarl
lds
out
cmpsb
inc
ret
movsl
jbe
cmp
stc
mov
inc
xchg
mov
push
movsl
push
jnp
stos
jp
adc
mov
in
popa
out
sbb
mov
in
arpl
rorb
sbb
in
rol
sub
inc
les
movsb
dec
fisubrs
mov
mov
inc
rol
scas
popfw
rol
inc
loope
iret
jg
mov
jno
adc
lock
jbe
movsl
cmp
sbb
xor
int
mov
mov
push
mov
nop
push
xchg
loope
outsl
std
addr16
fs
je
cs
push
int
jge
clc
hlt
pop
arpl
out
hlt
ljmp
sarl
mov
das
sub
lods
mov
into
stos
std
std
repnz
fnstcw
sbb
hlt
test
dec
pop
push
pop
inc
add
mov
mov
jle
mov
scas
jno
inc
inc
mov
test
inc
insl
ds
cmp
xchg
ret
add
push
imul
jl
mov
daa
sbb
jg
xor
pop
mov
sti
call
je
push
xchg
dec
lret
inc
and
leave
mov
add
jo
data16
xor
repz
or
test
popa
cmp
inc
xchg
lret
lret
sub
sub
roll
xor
adc
cmc
push
call
mov
or
mov
loopne
push
sub
in
mov
fsubp
lcall
dec
and
mov
inc
and
add
roll
or
add
jl
dec
lods
and
iret
and
stc
or
sub
leave
loop
push
dec
sbb
cmp
lret
rolb
scas
mov
jl
push
xor
nop
leave
cmc
repz
inc
sbb
repnz
repnz
or
mov
or
sti
loopne
ja
sti
xor
aaa
in
pop
xor
and
and
jae
faddl
xchg
sub
add
push
or
push
mov
mov
mov
iret
lahf
lret
aam
rorb
push
xchg
es
push
call
iret
jl
out
je
pop
mov
push
mov
add
int
aad
pop
es
into
inc
inc
je
faddl
jnp
inc
inc
iret
imul
scas
inc
cmp
scas
push
lret
stc
dec
in
push
das
push
mov
push
fucomip
mov
loopne
push
mov
in
das
std
mov
fcoml
icebp
mov
enter
or
outsl
lret
adc
insb
sub
mov
enter
ljmp
pop
clc
adc
jl
mov
xchg
and
jmp
or
cmp
lods
push
inc
bound
sbb
mov
rol
mov
loopne
std
daa
jge
notb
stc
push
sub
mov
push
sub
sbb
xchg
add
jg
sbb
insb
cmp
sub
mov
inc
mov
lea
addr16
lock
test
mov
mov
hlt
mov
push
sub
int
fsts
xchg
jle
lea
or
ss
test
dec
test
and
jecxz
ret
insb
inc
push
sbb
push
mov
loope
ret
or
inc
sub
in
mov
mov
imul
adc
jl
in
loopne
ds
sub
lds
or
jb
pop
jno
fldt
data16
dec
scas
pop
cwtl
mov
or
sub
sbb
outsb
mov
mov
adc
dec
mov
sub
jmp
dec
sahf
jno
scas
andl
ja
mov
sbb
leave
push
jecxz
dec
cwtl
jge
adc
push
das
add
idiv
mov
cmp
fsubs
mov
adc
xor
add
sub
sub
ss
test
mov
push
and
leave
dec
mov
and
loopne
out
je
or
fcmove
xchg
test
dec
push
into
xchg
xchg
add
call
addr16
popf
pop
daa
pop
aad
xchg
push
cmpsl
stos
call
repnz
loope
in
dec
jmp
in
adc
mov
mov
cmp
hlt
sbb
push
push
outsl
pop
mov
xor
ror
cwtl
dec
mov
mov
cld
sbbb
pop
mov
stos
jae
xor
repnz
push
push
test
push
loopne
dec
rcrl
xchg
and
add
shlb
outsb
mov
cld
test
mov
loop
cmp
push
push
pushf
xor
negl
stos
popf
sub
and
xor
sahf
lcall
fidivs
mov
ficompl
clc
adc
les
sub
lcall
add
rolb
decb
mov
lods
adc
xchg
adc
scas
inc
adc
ds
adc
adc
add
cmp
dec
inc
dec
aas
call
push
icebp
push
ret
dec
mov
je
fdiv
push
cmp
mov
popa
mov
shlb
out
out
test
subb
clc
iret
lahf
xor
ret
dec
or
adc
daa
sbb
shll
fs
dec
lds
push
xchg
mov
dec
shlb
aaa
sub
es
test
pop
mov
cli
sub
dec
mov
or
ret
insb
and
xchg
jnp
sub
lods
push
je
ss
iret
jle
pop
push
aas
je
test
orb
nop
xchg
pop
pop
loope
adc
adc
stos
pop
fs
mov
out
jbe
fs
inc
es
jge
dec
inc
enter
mov
adc
add
je
fbld
xchg
push
lcall
xor
pop
mov
mov
int3
das
xchg
jns
fistpll
lea
jb
loopne
jl
std
rolb
popa
xor
ret
pop
test
jb
push
in
push
push
mov
test
movsb
test
mov
lcall
out
ss
arpl
into
scas
cli
je
int
cmpb
mov
ja
cmpsb
je
add
mov
xor
and
out
jecxz
js
xchg
mov
ds
xchg
push
sub
int
sub
incb
aaa
xchg
scas
or
mov
ror
je
ror
rolb
adc
and
in
popa
xchg
push
pushl
dec
cvtps2pd
cmp
xchg
xchg
cwtl
xchg
dec
xchg
mov
sub
pop
sub
mov
testb
aam
gs
sub
xorl
sahf
dec
into
sub
js
sbb
push
inc
gs
pop
in
outsb
fwait
icebp
mov
out
lods
dec
mov
pop
mov
and
mov
loop
insb
insl
sbb
rclb
test
inc
jg
adc
movsl
mov
pop
inc
adc
pop
jne
stc
lahf
fcmovnb
mov
enter
into
fldenv
rcl
add
fs
popa
imul
es
pop
dec
xchg
int
push
sub
xor
movsl
xchg
sub
mov
fmulp
mov
sub
push
popa
je
dec
leave
data16
aad
out
jne
shrl
stos
cld
ss
aas
dec
ja
dec
cmp
js
mov
and
jecxz
jge
push
pop
les
sti
push
notb
xor
addb
cmp
push
loop
clc
and
repnz
pop
add
or
sahf
das
mov
clc
out
jb
adc
sbb
dec
aaa
dec
sub
xor
outsb
inc
mov
fdivl
push
daa
adc
sbb
push
dec
neg
js
outsl
xchg
xchg
push
movb
sbb
imul
shrl
imul
fldt
and
bnd
jo
inc
xchg
mov
data16
aas
push
adc
jmp
xchg
popa
cs
aad
or
stc
pop
or
pop
shl
sbb
insb
scas
pop
adc
in
clc
sbbl
mov
je
mov
jb
js
inc
sarl
dec
mov
mov
push
xchg
push
and
movsl
repz
fldcw
add
ret
nop
adc
repnz
aaa
aas
js
xlat
xchg
ficoms
jo
add
xchg
and
ja
and
arpl
and
ret
xchg
aaa
add
inc
xor
dec
sbb
in
hlt
push
cmp
outsb
cli
mov
inc
push
scas
scas
add
addr16
xor
pop
cs
adc
jne,pt
arpl
push
mov
inc
adc
mov
mov
xor
rol
outsb
pop
pop
mov
dec
test
ret
repz
ja
inc
cltd
insb
xchg
sti
int
mov
data16
imul
loope
lea
sti
dec
and
movsb
aaa
cs
mov
aas
xchg
jmp
inc
shrb
xchg
repz
pop
cmp
mov
jmp
inc
jmp
xor
or
icebp
lcall
push
xchg
push
es
cli
and
mov
dec
sahf
push
mov
dec
push
and
jmp
jmp
mov
push
mov
xchg
sub
addr16
adc
sarl
jnp
fidivs
dec
pop
decl
out
in
adc
mov
icebp
addl
lret
cmc
fs
jno
cwtl
or
add
pop
xchg
adc
adc
xchg
adc
in
xor
outsb
pusha
rcrb
lahf
mov
mov
mov
leave
pop
pop
xchg
dec
lahf
push
push
test
mov
in
sbb
push
clc
and
inc
jne
call
subl
mov
aad
add
int3
in
in
gs
sbb
loope
mov
pop
shlb
mov
xor
repnz
adc
push
int3
xchg
dec
cmc
sub
loop
jmp
inc
sbb
out
dec
mov
popa
outsl
jmp
call
mov
fsubl
adc
add
push
push
mov
rorl
push
sub
inc
pop
sahf
dec
adc
mov
fistl
mov
pop
mov
push
imul
adc
sarl
xor
repz
pushfw
cli
inc
daa
and
sbb
daa
sbb
gs
sahf
fwait
pop
pushf
inc
out
mov
sub
mov
push
mov
es
pushl
iret
leave
iret
mov
daa
pusha
mov
mov
mov
pop
mov
and
lret
in
inc
leave
lods
ret
push
insl
cmpsl
shlb
cld
xchg
aad
sub
hlt
repnz
scas
cmpb
pop
gs
test
jbe
sbb
jl
ficoms
sbb
jg
cmp
push
or
sbb
jnp
pop
jmp
mov
pop
imul
mov
mov
cli
dec
and
hlt
xor
and
test
cmc
rolb
add
test
dec
inc
or
push
jae
lcall
cmp
or
mov
sub
mov
adc
cmp
jne
mov
hlt
enter
mov
orb
andl
dec
aaa
jg
out
ret
fldcw
cs
mov
xor
dec
imul
jbe
xor
jecxz
js
fcoml
xchg
jge
or
sbb
mov
mov
loopne
je
jno
sti
ja
mov
shll
les
add
popa
rorb
das
dec
mov
mov
int
fisubrl
or
mov
adc
push
mov
fstps
cltd
sbb
mov
jge
adc
xor
inc
and
push
xchg
adc
pop
fdivl
and
mov
add
xchg
mov
clc
test
out
lret
addr16
das
mov
sbb
push
lea
or
push
xor
ret
das
enter
lret
rclb
fs
into
into
aaa
fistl
in
hlt
cmp
repnz
sbb
xchg
pop
cld
jo
add
inc
dec
cld
imul
push
sbb
insb
fildl
mov
pop
leave
outsb
and
push
sbb
in
or
xor
cltd
fisubrs
stos
jnp,pt
mov
lahf
lods
mov
scas
repz
rorb
cmp
incb
ljmp
rolb
push
movl
into
fidivl
pop
mov
das
call
cmpsb
int3
cmc
xor
lahf
lahf
sbb
ja
adc
lock
push
push
xor
pop
in
and
fdivrl
divl
add
sub
add
pop
test
shrb
rep
loop
jmp
cmc
adc
cmp
add
adc
adc
mov
xor
lcallw
jnp
int
mov
adc
push
push
pop
sub
arpl
dec
fisttps
xchg
dec
jne
adc
bound
mov
test
adc
lret
stc
pushf
lds
add
pop
push
xor
dec
and
push
xchg
push
mov
adc
addl
sub
push
gs
pop
xor
cmp
fs
xlat
jle
enter
cmpsl
pop
pop
loope
mov
fsubr
outsb
xchg
and
test
mov
imul
bnd
scas
adc
in
dec
mov
cmpsb
sub
lret
clc
ljmp
aas
repnz
clc
ljmp
loop
sahf
inc
adc
xor
mov
inc
dec
or
mov
popa
orb
dec
jecxz
outsl
push
xchg
cs
sbb
add
mov
jbe
cmpsb
in
into
sbb
push
add
sahf
enter
dec
sbb
stc
test
xor
xchg
test
fcompl
cmp
incl
push
outsl
and
dec
mov
xchg
insb
cltd
inc
dec
xchg
mov
and
push
call
jo
xchg
out
in
mov
bound
int3
addr16
inc
mov
add
pusha
jae
rcll
mov
mov
cmp
xchg
push
sbb
int3
xorb
xlat
jno
sub
int3
movsl
ret
pop
sbb
fimuls
idivl
ss
mov
mov
or
dec
int
fiadds
sahf
or
xor
mov
push
popf
pushf
insl
dec
orl
fisttps
fldl2e
add
add
xlat
jecxz
dec
mov
add
loope
dec
in
stc
adc
sti
ljmp
jns
int
loope
push
outsb
out
into
push
and
cmc
cld
in
push
into
adcb
sub
pop
inc
add
xor
add
dec
adc
pop
xor
pop
lock
pop
sbb
hlt
inc
add
push
scas
repz
sub
dec
jo,pt
or
pop
pop
push
xor
jmp
aaa
xor
mov
pop
pop
out
in
push
sbb
sub
fucomp
fistpll
xchg
mov
lock
mov
loopne
cmp
adc
ret
fld
jge
rcrl
sti
cmp
or
inc
gs
mov
fwait
and
test
pushf
push
xchg
adc
test
sbb
mov
fwait
aas
xor
sbbl
sub
les
add
lock
leave
js
scas
jge
sub
lret
and
and
cmp
sbb
movsl
dec
jnp
mov
pop
sti
fwait
in
pop
dec
mov
dec
lea
sarb
jmp
lahf
and
shll
dec
movsb
dec
cmp
pop
hlt
jmp
push
lea
pop
ffreep
sbb
mov
cli
or
lret
push
mov
and
jle
xchg
je
movsb
adc
insb
adc
aas
lcall
cmovnp
cmp
jns
adc
push
mov
push
ss
cmp
les
or
inc
dec
idivb
je
inc
mov
test
bound
xchg
push
mov
push
sti
push
add
jmp
cmpsl
mov
hlt
mov
negb
rcrl
lock
fsubs
negb
cld
jb
fcmovb
loope
mov
xchg
fstpl
lret
pop
lahf
xlat
andb
cs
cmp
xchg
repz
mov
imul
xlat
add
sub
popa
fcmovnbe
and
pop
popf
std
cli
jno
inc
push
jle
push
xchg
aaa
mov
mov
pushw
inc
enter
out
std
xchg
xchg
xlat
or
inc
out
scas
push
in
in
jno
lea
sarb
sbbl
imulb
mov
loop
adc
mov
outsl
cltd
scas
or
jmp
gs
add
pop
sbb
daa
and
lods
cwtl
rcr
sbb
mov
inc
cmp
popa
sbb
stc
mov
fisubl
mov
xchg
mov
fistpll
xor
or
push
ja
mov
push
mov
jno
push
pop
adc
shlb
repnz
and
push
push
scas
test
cmp
mov
or
into
push
movsb
inc
ja
sti
incb
inc
jno
je
shl
xchg
data16
shl
mov
push
pop
or
iret
nop
mov
or
xor
pop
mov
sub
stos
jno
lret
inc
sub
scas
cmp
loopne
sub
cli
jp
cwtl
sub
pop
js
dec
loop
xchg
scas
stos
je
sub
sub
cli
or
jge
xchg
push
mov
rorb
clc
sti
out
cmp
outsb
dec
movsl
mov
sbb
sub
push
insb
js
mov
mov
cmpsb
mov
sar
clc
push
insb
cmpsl
cltd
test
arpl
xor
push
fsts
mov
push
movsl
aaa
in
std
xchg
mov
aam
in
mul
sbb
jl
mov
adc
push
pop
sbb
pop
jae
aad
daa
shll
add
mov
jecxz
cmp
imull
adc
and
int3
inc
push
mov
mov
add
lcall
cmpsb
xor
push
cmp
nop
xor
arpl
sbb
out
cmp
mov
add
xchg
jmp
lds
push
sbb
or
mov
mov
es
fwait
stos
adc
movsl
sbb
imul
into
mov
mov
rclb
aad
inc
lret
xor
cmp
arpl
fistl
adc
mov
jne
dec
dec
stos
sbb
enter
int
fsts
in
shll
inc
pop
rcll
mov
mov
or
inc
aaa
lea
sti
add
fnstcw
iret
inc
notl
sbb
dec
and
lcall
push
jo
xor
lret
mov
xchg
fisubs
inc
jb
hlt
jg
jae
scas
or
dec
icebp
inc
sbb
mov
pop
pop
xor
mov
aam
add
iret
lock
mov
dec
push
arpl
das
dec
add
mov
pop
sahf
lock
sub
inc
fs
xchg
mov
fisubrs
add
cmp
and
mov
mov
lea
call
ljmp
sub
aas
xchg
rcrb
sub
test
das
or
mov
push
mov
arpl
cli
ror
fstps
adc
ret
cmp
imul
pop
iret
lret
fldcw
std
xchg
testb
fcomps
movsb
pop
out
adc
adc
mov
lret
fistps
jae
fbld
pushf
cmc
add
xor
dec
mov
inc
sbb
pop
mov
xchg
mov
cmpsl
jnp
inc
ret
cmc
mov
pop
push
cmc
mov
sbb
cli
fs
push
data16
xor
mov
lea
packuswb
es
out
jae
outsl
inc
fs
adc
out
dec
aaa
jns
lcall
adc
mov
add
jge
sub
pop
popf
ljmp
inc
xchg
and
rolb
add
pop
xchg
test
inc
mov
test
sbbl
outsb
sbb
lock
cli
mov
or
pop
mov
movsb
stos
js
and
mov
push
into
repz
clc
sahf
lret
repz
push
aad
mov
mov
add
push
stos
mov
es
cli
scas
fists
icebp
lahf
inc
cmpsl
xor
into
stc
xchg
push
add
sahf
stos
dec
xchg
mov
and
iret
repz
cwtl
scas
inc
in
xchg
cmpl
fsub
or
movsb
loope
mov
std
insl
rdtsc
call
mov
aam
jle
out
imul
test
popa
addr16
cmp
cmp
loop
rcrb
jge
dec
cld
fbld
repz
cmp
jp
xor
mov
test
lret
sbb
outsb
scas
pop
rorl
jo
sahf
scas
mov
insl
add
cmpsb
test
inc
or
roll
or
arpl
inc
or
ja
cmp
lret
insl
aam
inc
lock
in
mov
jge
or
lods
mov
fstpt
fiadds
sbb
jp
jg
and
aad
inc
jne
and
inc
push
inc
clc
pop
sbb
or
jp
jo
lret
mov
add
adc
int
xchg
hlt
jp
add
test
imul
dec
outsl
push
in
icebp
xlat
shlb
jge
or
or
lret
test
frstor
cmpsb
shl
inc
add
xchg
out
xchg
in
inc
nop
inc
addr16
mov
test
and
iret
fildll
inc
cmp
insb
out
inc
mov
cmp
cmp
dec
jae
xchg
inc
and
cmpb
movsb
lock
mov
xchg
or
lret
push
fsubs
leave
sbb
insl
cmp
rorb
iret
adc
mov
or
in
xchg
cmp
lcall
push
pop
lock
into
sub
mov
push
lods
cmp
push
outsl
dec
push
js
mov
fidivrl
clc
jge
ja
ljmp
pop
xor
subl
pop
lock
jmp
sub
pop
pop
inc
stos
subl
lods
jmp
popa
xlat
dec
mov
call
cmpsl
cmp
jge
push
fnsave
xchg
test
xchg
push
sbb
cmp
inc
pop
jmp
push
mov
mov
aam
cld
or
lock
cmc
cld
pop
icebp
xchg
xchg
push
dec
adcl
popf
sub
imul
sahf
sahf
cmpsb
or
xor
cmp
stos
push
mov
mov
repnz
cs
xchg
add
mov
mov
mov
push
data16
enter
ljmp
mov
ret
ljmp
test
filds
faddp
imul
or
pop
mov
js
lahf
adc
mov
shrb
cld
sbb
ss
loopne
jbe,pn
cmp
mov
scas
or
mov
fwait
sub
fstenv
inc
push
xchg
aas
adc
push
jne
lods
je
outsl
sbb
jo
pop
jge
adc
push
cmpsb
gs
dec
aas
mov
and
mov
sbb
mov
jnp
pop
push
or
mov
andb
dec
repz
fcmovnbe
mov
xchg
cmp
fnstenv
push
lds
andl
jecxz
rolb
mov
mov
fadds
and
hlt
xor
xchg
dec
pop
cmc
faddl
adc
mov
or
inc
add
push
xor
in
test
adc
popa
sbb
dec
fcmovu
lea
movsb
jo
sbb
xchg
add
push
rep
mov
pop
jns
jb
add
sub
or
lock
dec
pushf
jge
sub
sarl
mov
mov
push
scas
fadd
xchg
es
cmpsl
bound
ja
sbb
and
outsb
inc
or
mov
sbb
xchg
call
hlt
pop
pop
int
popa
pop
sbb
loope
movsl
dec
dec
add
cmp
icebp
data16
daa
fstps
insl
les
adc
fildll
mov
mov
in
loop
mov
iret
inc
push
add
ja
cmp
js
jns
leave
imul
fists
aad
xchg
mov
mov
xchg
xorl
pop
in
xchg
repz
nop
dec
fcoml
mov
push
mov
mov
pop
in
lahf
xlat
movl
cmp
flds
std
negb
neg
in
movnti
xor
subb
mov
adc
jbe
inc
fists
jno
xchg
pop
cmp
lods
jno
pop
cwtl
mov
pop
cmpb
cld
add
sbb
negl
add
and
sbb
jmp
or
xlat
outsl
ljmp
sbbl
adc
pop
xor
inc
xchg
mov
ret
jg,pn
jo
sbb
sbb
movsl
mov
push
sub
jg
xchg
loopne
mov
andb
lret
push
outsl
sbbb
push
icebp
aaa
inc
data16
enter
pop
and
lods
sub
inc
add
sub
movl
mov
es
sti
repz
call
cli
jmp
and
jno
popf
mul
mov
ret
cmc
test
xlat
int
adc
pop
das
sbb
and
mov
mov
movsb
pop
sahf
dec
sub
push
add
nop
in
outsl
mov
xor
movsl
dec
mov
bswap
shll
imul
jno
mov
jmp
xor
call
xlat
xor
fsubrs
fstpl
mov
inc
cmp
xor
mov
fdivs
dec
cs
sbb
ret
test
cmp
and
pop
je
or
lret
cmp
sbb
pop
shl
stos
push
jbe
pop
xchg
sti
and
sbb
in
push
push
insl
scas
sar
add
call
pusha
sub
add
fs
ljmp
les
xchg
xchg
fbld
js
and
mov
push
iret
es
imul
and
xor
cwtl
sub
push
cltd
xchg
jns
test
cmpsb
andb
cs
dec
cmp
aam
sub
dec
call
sbb
or
jl
sbb
push
rolb
outsl
xor
sahf
dec
adc
xor
mov
ljmp
jge
lret
popa
mov
mov
adc
icebp
sbb
adc
adcb
dec
dec
mov
inc
sbb
rcll
xlat
test
shrl
sbb
push
adc
rcrl
mov
iret
jle
and
xor
mov
push
sbb
popa
push
inc
and
push
aam
insl
add
scas
in
mov
push
jae
scas
mov
cmp
icebp
aam
int
daa
loope
fxch
cltd
sbb
adc
dec
jb
sti
add
xchg
inc
into
sbb
movaps
test
pop
xchg
xchg
pop
xor
adc
lret
jnp
inc
mov
movsb
jae
pop
pop
fwait
pop
inc
xchg
scas
pop
sahf
dec
data16
dec
dec
popa
cmp
es
dec
xchg
or
push
add
test
lods
mov
sub
lods
test
ds
pop
rcl
push
bnd
cmp
lods
aad
pop
test
imul
lock
lcall
call
imul
or
mov
dec
cmpsb
pop
mov
or
mov
mov
imul
nop
lret
insl
lods
iret
gs
push
testb
and
movsb
push
dec
fnsave
clc
jo
icebp
repz
mov
pop
stc
push
xchg
jns
mov
and
sarl
shrb
incl
scas
pushl
shll
sub
das
jae
fdivl
popf
shll
push
push
mov
addl
mov
mov
movsl
daa
in
and
fstpt
bound
out
dec
sbb
jns
lret
add
mov
dec
push
lea
xor
adc
jnp
loopne
push
jl
int3
cmp
xchg
inc
cmpl
cli
add
lds
pop
cmp
add
scas
xchg
adc
inc
outsb
inc
jne
icebp
testl
pop
add
lahf
pop
lahf
fdivrs
fldl
dec
pop
loop
mov
or
sub
test
enter
aad
mov
shrb
add
loopne
rclb
xchg
jmp
pushf
les
push
or
in
sub
inc
popf
sbb
jl
lret
or
mov
or
lds
adc
sub
psubusw
cmp
dec
popa
ljmp
dec
mov
mov
or
sbb
jmp
adc
cmp
cmc
sti
sbb
out
clc
push
xchg
loopne
ss
mov
mov
and
adc
es
out
or
mov
sbb
pop
cli
push
rclb
sahf
or
and
push
mov
dec
scas
lret
addl
mov
adc
and
ret
test
fisubrs
jp
xchg
andb
int3
sarl
xor
les
int3
jnp
mov
mov
stos
push
insl
push
testb
icebp
ds
or
inc
adc
fcomp
and
xchg
xchg
mov
imul
cmp
add
mov
cli
pusha
in
or
fsubrl
xchg
push
jle
popa
jns
xchg
test
out
jo
and
xchg
pushf
pop
clc
adc
add
jmp
push
sbb
add
and
jnp
adc
cld
out
pusha
xor
add
push
jle
push
ret
xchg
xor
aas
fadd
jl
mov
fwait
out
outsl
mov
push
sarb
pop
mov
test
mov
jns
xchg
add
divb
push
das
mov
mov
pop
mov
repz
mov
clc
and
mov
and
bound
mov
lret
test
sbb
inc
aaa
mov
inc
mov
or
cmpl
xlat
shrl
mov
push
negl
add
jle
pop
mov
jo
inc
cmp
jecxz
adc
push
clc
jle
pop
loope
scas
dec
int3
pop
mov
jmp
and
xorl
adc
adc
sbb
lcall
ficompl
imul
fwait
int3
negl
push
adc
lea
cmpb
pop
rcrl
or
repnz
addr16
adc
cmpsb
mov
xor
xor
fists
mov
fcoms
enter
ja
adc
xchg
cltd
loopne
out
mov
sti
xchg
rcrl
jmp
xor
pop
jg
xchg
mov
adc
sub
inc
xchg
ds
mov
jb
loope
sbbb
adc
pop
ss
fcomps
pop
jb
mov
pop
add
mov
dec
adc
ss
inc
dec
out
pop
pop
aam
push
jecxz
mov
cmp
dec
xchg
and
es
loopne
mov
ffree
cs
fmull
add
jae
adc
inc
aam
ret
pop
fldl
inc
in
mov
inc
lock
sbb
iret
dec
sub
xor
imul
movsb
pop
shrl
mov
adc
push
pop
mov
pop
sbb
mov
adc
pop
mov
aam
sbb
xchg
fcompl
pop
es
adcb
loop
adc
xchg
pop
cltd
lods
sbb
push
cld
cwtl
and
cmp
jns
shll
add
pop
lods
lret
sub
inc
repnz
and
loope
mov
aas
fwait
repz
xchg
in
push
mov
addr16
mov
xchg
mov
push
daa
jne
outsb
insb
xchg
and
icebp
outsl
sbb
pop
push
iret
adc
gs
fs
dec
mov
add
xlat
push
push
pushf
sub
pop
xchg
mov
push
push
movsl
aaa
mull
xor
imul
loopne
jnp
dec
out
cld
int3
mov
mov
addr16
ficomps
pop
out
adc
xor
push
dec
inc
ds
jl
test
cmp
dec
lods
insl
jmp
subb
sub
divb
outsl
mov
test
inc
inc
push
hlt
fisttps
imul
mov
orl
or
push
test
or
sub
cltd
dec
mov
rorb
inc
pop
ret
negl
imul
mov
imul
dec
cmp
xchg
inc
lods
testl
xor
lods
in
push
cmpsl
pop
xor
push
cmp
push
push
mov
cmp
jno
leave
sbb
das
fwait
xchg
in
les
mov
dec
push
mov
pop
xchg
mov
dec
jo
call
and
adc
test
or
jo
mov
dec
movsl
mov
imull
jg
sarb
mov
lcall
lock
lds
fcomps
sbb
jno
nop
clc
jne
dec
cmp
test
call
mov
or
cmp
ret
lret
int
dec
or
inc
pop
cmp
sub
sbb
fcomp
fs
push
jmp
inc
mov
mov
sbb
cmp
loope
fdiv
xor
or
daa
rolb
aas
repnz
jl
dec
cmpsl
cwtl
lea
mov
sbb
frndint
pop
pop
xlat
or
dec
test
sbb
lret
mov
or
daa
pop
xchg
inc
test
lods
call
dec
imul
sti
mov
stos
push
jns
push
mov
cld
das
arpl
push
push
faddl
mov
xor
push
bnd
dec
sub
out
pop
fstp
scas
xor
cwtl
mov
stos
xor
test
jp
sbb
xchg
or
or
mov
in
adc
xchg
push
ja
add
and
mov
cs
mov
cmp
mov
jecxz
je
mov
xor
jg
fcomp
cltd
lcall
cmpsl
push
xchg
dec
popa
lret
mov
mov
jne
imul
cmpsl
sbb
fldcw
sub
xlat
sbbb
and
pop
adc
mov
mov
xchg
xor
push
add
je
scas
insl
iret
fsubr
push
jb
pop
dec
clc
hlt
pop
lds
adc
mov
sbb
mov
mov
xchg
inc
mov
in
cmp
nop
adc
mov
rcrl
cmp
aad
das
sbb
stos
aad
leave
adc
gs
sbb
out
ror
adc
negb
xor
pop
fsubs
sub
clc
lret
nop
and
mov
shlb
int3
xor
decl
xor
jae
and
adc
mov
out
push
shll
pop
dec
les
push
mov
repz
jle
test
lods
cmp
ljmp
int3
test
sqrtps
mov
sbb
xchg
insb
fld
ss
sbb
sbb
adc
mov
cmp
mov
popf
stos
das
sbb
sub
jp
repz
out
mov
sub
cmpsb
pop
popf
vpmulhrsw
test
jmp
adcb
inc
aaa
inc
xchg
les
cmp
jae
sub
outsb
stos
lods
incb
movsb
xlat
clc
ds
fs
pop
in
test
push
xchg
jae
leave
xor
pusha
arpl
xchg
fsubrl
xchg
fidivl
or
mov
mov
pop
push
shrl
mov
mov
loope
pushl
pusha
push
push
imul
or
stc
and
dec
push
lods
jmp
push
rcl
mov
xchg
pop
loopne
insb
sub
dec
mov
push
orb
dec
xchg
loope
pop
cli
push
mov
movsb
out
imul
scas
out
icebp
in
pop
outsl
fmuls
mov
cmp
int3
or
xor
shrb
add
pop
cmpsb
mov
out
fmul
pop
ret
fwait
clc
push
adc
enter
xor
dec
mov
jns
rcr
scas
xor
stc
aam
or
pop
imul
lds
pop
push
jecxz
aam
xor
dec
dec
lret
sahf
push
insl
int
pusha
cmp
sub
arpl
daa
pop
and
mov
xor
mov
mov
ljmp
jge
jmp
into
int
in
nop
inc
sahf
and
in
mov
sub
mov
test
mov
cld
or
push
dec
daa
scas
lcall
lds
or
dec
ss
out
std
or
sahf
pop
movb
sbb
aad
push
ret
push
icebp
mov
dec
hlt
and
insl
sub
mov
fwait
clc
inc
sbb
sub
push
xchg
cmp
test
outsl
cmp
out
sbb
ljmp
dec
neg
push
lret
cmp
adc
daa
jns
sti
jb
mov
sub
or
jge
jmp
mov
loopne
dec
add
cmp
xchg
mov
jge
or
jb
mov
aaa
rcrb
push
hlt
fdivrl
dec
enter
jl
xor
push
sub
enter
faddl
mov
fidivrs
dec
std
inc
cs
popa
xchg
dec
xlat
push
js
sahf
pop
addr16
and
jne
or
arpl
jnp
inc
add
lret
xchg
adc
and
lcall
test
adc
xlat
xchg
es
lret
test
insw
mov
jbe
aas
fwait
pop
mov
les
xor
into
add
loop
lods
movsl
jbe
je
xchg
cmc
outsl
sub
test
jmp
add
push
add
les
ret
jb
pop
out
jle
dec
int
or
push
jge
int
inc
cmpsb
fiadds
cltd
sbb
out
lahf
mov
lock
jp
mov
push
adc
aas
icebp
ret
psrlw
and
mov
inc
sbb
adc
cwtl
lret
mov
mov
shlb
das
pop
and
sbb
std
addr16
pop
les
lods
in
mov
jb
ljmp
lahf
pop
das
pop
add
or
in
ret
fidivl
pop
lea
lock
mov
cli
dec
jmp
addr16
fnstsw
rclb
test
mov
inc
sbbl
xor
and
pusha
add
add
lods
ljmp
les
in
popf
or
dec
xor
call
imul
sub
fcmovu
fcoml
imul
mov
push
insb
sub
inc
pop
xor
dec
push
xor
mov
jle
ret
pusha
and
mov
repz
cmpsl
arpl
notl
xchg
loop
push
pop
js
or
push
insb
or
jge
jne
lds
cmp
jnp
jge
add
xlat
add
cmpsb
inc
out
jo
subl
das
push
data16
lods
push
testl
cmp
dec
cmpsb
and
xchg
push
rcr
xchg
or
leave
stc
mov
inc
popf
and
js
push
pop
dec
loope
insb
pop
sub
mov
push
fbld
dec
in
fsubs
dec
pusha
dec
pop
sti
mov
mov
lock
dec
idivb
cwtl
xor
popf
iret
or
jbe
jo
add
je
adc
bound
sarl
xchg
jge
cmc
fdivrs
shr
mov
dec
insl
mov
adc
fidivl
dec
dec
insl
mov
insb
mov
pop
aas
adc
adc
cmp
push
out
jae
xchg
fidivs
aaa
push
mov
cmp
std
mov
dec
inc
jnp
jno
adc
jge
popf
sub
rol
push
js
jge
jl
aam
dec
inc
jmp
sub
push
mov
mov
ror
sbb
shlb
inc
add
test
jp
dec
xchg
push
test
cwtl
mov
mov
inc
or
sti
mov
loop
jae
ja
imul
lret
bound
jp
subb
mov
aad
test
xlat
cmc
fbstp
out
add
add
fs
and
pop
inc
mov
dec
sti
dec
call
mov
int3
jp
outsl
dec
lret
cmp
lahf
aaa
pop
and
repz
xchg
jecxz
sub
mov
cmp
int3
ror
or
mov
arpl
scas
inc
lods
sbb
es
jmp
leave
int3
cmp
lcall
pop
inc
sbb
sub
sbb
jns
stos
gs
mov
les
scas
jbe
in
mov
ds
or
pop
add
subl
adc
xlat
arpl
sbb
hlt
jp
jno
xchg
cmp
or
mov
mov
sarb
aas
int
gs
mov
push
xchg
xor
loope
ja
in
shll
xchg
aaa
sub
dec
mov
dec
stos
sbb
hlt
mov
aas
sti
sub
dec
mov
or
gs
aas
dec
ret
mov
imulb
shll
ret
mov
push
loopne
adc
inc
leave
cmc
push
adc
inc
adc
mov
nop
push
lods
xor
insl
jle
clc
aam
xor
std
dec
test
insb
scas
inc
sub
hlt
or
xchg
sub
xchg
and
cmpsl
fidivrl
fs
xor
negb
inc
xchg
sub
cmpsb
pushl
push
adc
and
lock
stos
xor
adc
sub
dec
mov
jbe
sub
and
fnsave
inc
in
xchg
mov
sub
sub
orb
popa
mov
jp
push
fdivrs
lds
mov
fnstcw
pop
outsb
adc
dec
xor
out
shl
icebp
mov
orb
cwtl
shrb
and
out
sahf
jo
int3
aam
sub
fsubrs
ljmp
mov
in
ss
mov
add
or
pusha
ljmp
sti
ret
std
mov
xor
fldcw
gs
mov
insb
adc
jg
mov
fldt
inc
or
xchg
test
mov
faddl
pushf
mov
lret
popa
aad
jns
aas
les
adc
nopl
jae
shl
add
sub
or
lds
add
out
mov
jle
loopne
xchg
dec
notb
mov
cmp
sub
or
test
lahf
jne
dec
add
sub
pop
scas
cld
movsb
mov
nop
adc
mov
lods
push
fs
cwtl
cld
xchg
scas
test
leave
add
stos
mov
stc
jae
nop
and
shll
mov
xor
xorb
sub
icebp
mov
mov
mov
inc
aaa
push
fisubrs
out
mov
xor
mov
adc
dec
roll
add
or
inc
es
jo
cmpsb
test
in
cltd
dec
inc
or
push
cltd
aad
movsb
ja
add
gs
lret
fisubs
sbb
fs
sub
mov
add
movsb
addl
into
insb
or
adc
pop
aas
lds
inc
jg
sub
push
cwtl
je
xchg
sbb
icebp
pop
rcll
aad
sbb
fbld
insl
jo
insb
movsl
cs
lock
jns
je
fstl
xchg
mov
adcl
stc
mov
sti
into
inc
ret
shrl
ljmp
inc
jge
dec
rcll
lds
inc
div
in
cmp
repnz
movsl
test
jae
movsb
test
ja
dec
lcall
fisubrs
loop
sub
ds
add
ret
je
fadds
pop
push
mov
push
icebp
cmp
push
insb
add
fnstsw
pop
imul
pushf
aaa
xchg
lret
cli
mov
jbe
adcl
fdiv
cli
adc
mov
xlat
movsb
mov
sbb
sub
sbbl
inc
push
outsb
mov
mov
xchg
add
sub
sub
add
int
mov
cmp
loopne
mov
pop
and
jge
dec
js
bound
mov
bndldx
mov
stos
add
cltd
inc
insl
fucomi
adc
inc
out
int3
and
and
imul
in
jo
lret
push
xor
fimuls
mov
popa
test
inc
rolb
mull
cmp
mov
mov
pop
push
jae
stos
and
sub
xchg
lock
outsb
roll
xor
mov
jg
adc
lock
xchg
dec
das
mov
push
adc
pop
test
fadd
mov
fisubl
mov
lcall
add
mov
std
add
mov
and
add
decb
in
jbe
mov
sub
out
mov
mov
pop
sbb
jg
add
scas
les
sti
xlat
je
mov
sbb
and
into
in
test
mov
dec
cltd
cmp
loope
ljmp
rcrl
adc
and
repnz
stos
cli
ret
jb
inc
add
jg
jge
sub
ret
mov
shll
inc
dec
lahf
stos
andb
cmpb
xor
mov
mov
cmp
test
and
adc
push
pop
cmp
sub
aaa
repz
cmc
xchg
push
or
loope
dec
dec
es
jecxz
aam
push
mov
std
das
mov
fldt
push
adc
mov
iret
mov
xchg
push
mov
mov
jb
or
mov
cmp
lods
cmp
rcrb
pop
int
rcll
mov
dec
add
and
xor
jge
jno
inc
addr16
push
mov
cmp
mov
dec
add
dec
inc
sub
lahf
jecxz
insl
cmpsb
cmp
jmp
test
jge
pop
sub
and
and
pop
add
icebp
pop
hlt
jae
pop
jg
scas
mov
or
lds
xor
mov
icebp
je
aam
mov
mov
mov
mov
mov
jg
jp
subb
jb
sbb
push
push
inc
stos
jb
ja
test
adc
push
dec
sub
into
scas
mov
aas
shlb
push
nop
jns
fs
pop
js
cmp
mov
add
cmp
inc
jg
lcall
push
cli
sbb
repz
fisttpl
cmc
out
jns
dec
and
mov
sub
mov
pop
faddp
fistps
out
jmp
test
sub
xlat
add
push
scas
out
mov
or
xchg
mov
push
sbb
outsb
inc
mov
push
sti
or
xchg
sub
inc
inc
rclb
inc
dec
loopne
arpl
nop
cmp
subl
in
mov
and
mov
sahf
out
imul
cmp
stos
lret
lahf
mov
add
or
cmp
cmp
movsl
mov
ja
sub
cmc
insb
inc
mov
mov
ja
js
insl
mov
sub
mov
add
mov
pop
pop
push
push
mov
pop
cmp
sub
xor
xor
dec
imul
sbb
rcrl
pop
incl
mov
daa
movsl
cmp
xor
or
add
test
mov
push
pop
ret
aad
adc
push
cmp
clc
ret
pushf
xorl
ljmp
jp
imul
shlb
fs
and
jne
popa
div
subl
mov
stos
repz
lods
pop
sbb
add
enter
dec
dec
and
call
or
leave
push
push
lahf
or
sahf
push
xchg
fnstcw
xor
cmp
ja
cwtl
dec
imul
and
pshufw
inc
dec
outsb
in
lock
ret
sbb
inc
cltd
add
xchg
loop
xchg
test
dec
sbb
nop
xor
outsb
mov
call
ds
mov
jmp
mov
negl
lds
xor
mov
aad
and
pop
mov
mov
repz
and
add
mov
mov
push
outsb
pop
mov
push
jno
out
mov
pop
mov
cltd
adc
cmpsl
sub
ja
cwtl
lds
ret
in
cwtl
test
cmp
add
loop
sub
jl
mov
lock
push
stc
repnz
icebp
std
fimuls
adc
dec
pop
data16
inc
roll
jbe
pop
ja
push
cmp
mov
jnp
cwtl
stos
inc
pop
pop
push
and
cwtl
cs
gs
stc
inc
call
clc
mov
cld
and
sub
jge
cmp
cltd
ljmp
jp
and
jg
push
mov
mov
jg
sub
js
mov
popl
les
movb
jno
jle
jmp
lret
cld
jno
or
and
jge
jno
inc
rcll
enter
clc
mov
cmp
int3
cmp
xchg
mov
xor
and
bound
out
mov
xchg
lea
jge
cmc
movsl
mov
mov
das
aas
outsl
fsubrs
add
ror
pusha
jbe
and
pop
daa
in
in
rcl
and
stos
adc
mov
test
sub
int3
inc
loop
sahf
out
fistl
xor
aaa
or
pop
cmp
pusha
inc
fmull
sbb
addb
or
lret
sub
lret
lahf
lods
adc
rcll
push
pop
add
mov
rclb
mov
nop
outsb
pusha
je
mov
cli
cmp
mov
jns
cs
dec
fnstsw
mov
adcb
mov
sbb
pusha
inc
and
sub
pop
adc
cld
add
pop
jne
lock
sbb
sub
sub
push
dec
sahf
push
stos
bound
test
in
outsl
mov
push
fsubs
dec
pop
pop
stos
or
mov
xor
aaa
std
mov
cli
and
pop
xor
adcb
outsl
mov
fwait
fs
xchg
push
or
testl
push
xor
cmpsb
insb
inc
add
sub
adc
jecxz
stc
push
xchg
xchg
mov
xchg
dec
int
sub
dec
cltd
sub
insb
sbb
insb
mov
pusha
iret
and
push
lcall
mov
xor
and
loopne
icebp
outsl
sbb
jo
xchg
pop
sahf
pop
or
lret
jecxz
add
jae
cmp
pop
mov
cmp
pop
and
pop
jge
repz
fbstp
inc
and
cmpsl
aad
dec
inc
sarl
cmp
nop
aad
jg
pop
xor
adc
or
fstpl
js
out
in
add
jle
ret
cmp
mov
fwait
sahf
lods
push
mov
cltd
sahf
jbe
cmp
insl
or
les
mov
push
cmpsb
addr16
jns
xchg
ficoms
fcmovb
data16
jne
mov
repz
cltd
or
and
inc
push
fmulp
jp
scas
cmp
add
int3
fcomip
cmp
fcmovnbe
sahf
or
xchg
adc
aam
mov
out
add
mov
jno
and
dec
hlt
sub
sbb
xchg
jae
adc
xor
mov
inc
lcall
cmc
add
mov
nop
roll
sbb
js
dec
out
in
call
jg
ret
cmp
add
push
cwtl
push
mov
outsb
sbb
scas
adc
cmp
add
pop
imul
in
out
mov
mov
lds
jo
ret
scas
jns
pop
inc
dec
push
xor
push
xor
push
sub
cs
test
pushf
std
dec
lret
idivb
jne
cmpsb
shrb
pop
adc
nop
inc
pop
xor
dec
imul
sbb
fldenv
jnp
cmp
outsb
repz
jno,pn
int3
xchg
arpl
pop
add
mov
mov
fistpl
mov
movsl
fldt
adc
movsl
subl
test
and
sbbl
sub
adc
out
out
jnp
mov
arpl
int
rcl
test
into
pop
test
xchg
mov
pop
div
xchg
into
cvtps2pi
test
loop
ja
sub
adc
std
jge
insb
jge
push
and
scas
xor
aas
pop
add
ret
out
push
sbb
push
and
ss
loop
pusha
mov
out
dec
pop
lods
fucom
add
or
loop,pt
lock
mov
call
jne
pop
add
jb
jmp
les
or
hlt
dec
rcll
push
dec
js
clc
adcl
jp
mov
add
xor
in
lods
test
push
pop
inc
cld
rorl
mov
idivl
and
rolb
cmpsl
inc
cmp
jmp
arpl
sbb
scas
addb
fcoms
cltd
cmc
mov
push
dec
xor
out
std
popf
pusha
jecxz
ret
aam
inc
push
dec
mov
gs
push
popa
nop
mov
jmp
sahf
mov
add
loop
sub
push
fwait
dec
andb
sub
xlat
rorb
mov
ds
inc
outsb
mov
jae
outsb
xchg
cs
daa
pop
stc
mov
lds
test
jae
loopne
xchg
dec
in
aam
inc
mov
fisubrs
aaa
or
lock
push
leave
add
ret
ja
dec
or
adc
lods
hlt
dec
mov
pop
pop
mov
loope
hlt
out
orb
test
movaps
or
dec
mov
xlat
sbb
outsb
repnz
pop
dec
stos
rorb
lret
repz
lret
sar
subb
fs
or
cmp
jp
nop
cltd
das
sbb
xchg
push
cli
sbb
jl
cwtl
or
iret
pop
loopne
adc
test
in
xchg
xchg
shll
jp
inc
movlps
sub
cmpb
inc
cwtl
pop
aam
loopne
pop
adc
insb
cmp
daa
xor
xchg
lret
jbe
nop
pop
and
daa
lret
mov
lods
xor
imul
andb
mov
into
jle
inc
dec
and
aaa
pop
jge
lods
add
std
fimull
jb
dec
jl
sahf
pop
clc
adc
cmp
xchg
push
add
stos
sub
mov
pop
sarb
sub
xchg
es
cmp
andb
adc
test
mov
mov
xlat
jle
aam
in
jnp
rcr
scas
xchg
fisubrl
add
lods
pushf
inc
add
mov
test
cmc
popf
in
shlb
add
jbe
ss
sbbb
mov
xor
cmpsl
pop
fmul
push
shlb
xor
cmp
pop
cmc
adc
mov
lret
subl
sar
dec
xor
lea
push
sub
imul
out
jnp
cmp
xchg
push
dec
mull
enter
movddup
sub
and
loope
negb
dec
jns
testl
imul
pop
out
idiv
fmull
out
and
add
je
cmp
add
sahf
xor
pop
cmp
inc
ret
push
dec
or
xchg
les
test
cs
mov
add
fdivs
mov
sub
test
pop
pop
inc
bound
sub
xor
xchg
pusha
cmp
dec
insl
jmp
push
addl
push
push
stos
and
adc
pop
loopne
loop
mov
popa
test
in
sub
lahf
cmp
pusha
mov
repz
out
cmpsb
addr16
dec
push
or
ss
das
outsb
pop
stc
xorb
xchg
jno
cmp
fwait
and
xlat
cmc
jge
xchg
mov
fstpt
int
push
push
cwtl
push
lods
das
dec
rcrb
nop
and
daa
aam
mov
out
add
out
adc
aas
ljmp
pop
int
sahf
fsub
push
jp
shll
andb
cld
int3
sar
movsl
mov
pop
adc
test
pop
xor
lods
mov
es
movsb
cs
stos
dec
lods
sti
movsb
std
int3
stos
mov
cmp
mov
lahf
repnz
ret
sahf
mov
mov
jp
xor
pop
call
orb
mov
pushf
push
enter
xor
and
push
test
je
sahf
ljmp
mov
jno
mov
or
fldenv
arpl
cmp
xchg
jmp
loope
adc
xchg
cltd
xor
scas
lods
push
in
sbb
cmp
cmp
movsb
roll
cmpsb
mov
pop
pushf
or
or
cmp
insl
sub
inc
jb
fucom
fdivrp
int3
ljmp
in
pop
int
shrb
out
inc
sbb
push
test
sbb
jns
push
imul
sbb
push
xchg
bswap
pusha
sbb
cmpb
jmp
stos
sahf
mov
lretw
xchg
mov
fwait
cmp
sub
loope
loope
push
rcr
adc
outsb
xor
jge
sti
lret
adc
in
js
mov
or
jecxz
dec
push
pop
jle
sbb
in
popa
lret
iret
daa
push
popf
int3
jnp
insb
cmpsl
ror
mov
pop
shll
inc
and
dec
clc
sbb
ja
cmp
and
mov
xchg
xor
jns
jno
sti
scas
or
cmp
test
dec
push
mov
lahf
cmp
loope
shl
sbbb
pop
fs
mov
outsb
je
jge
ds
pop
jge
inc
mov
fnstcw
sbb
or
jb
cmc
dec
aad
xchg
dec
or
popl
test
movl
dec
dec
lret
ficompl
sarb
mov
out
ds
insb
fdivl
lock
ljmp
loop
xor
or
enter
add
mov
dec
push
insb
sbbl
shlb
push
cmp
mov
xor
std
push
and
shlb
mov
jno
inc
out
ds
inc
mov
je
jmp
lods
xor
pop
pop
sbb
and
loop
pop
mov
cmp
stc
or
sub
mov
adc
es
or
mov
pop
pop
clc
mov
push
vandps
mov
or
shlb
mov
nop
add
call
and
mov
and
or
pop
inc
ficomps
imul
push
inc
cli
xor
pop
rolb
pop
jbe
jnp
aaa
jle
push
shrl
arpl
fsubrp
push
rclb
ret
jns
xchg
cmp
shll
cli
call
andb
xchg
xor
arpl
jnp
enter
jecxz
cmpsb
lret
push
cli
cmpsl
jbe
inc
inc
pop
inc
stos
sbb
hlt
mov
jmp
gs
fdivrl
adc
cmp
insb
xchg
mov
add
arpl
mov
pop
mov
xor
xor
and
jg
fs
cmp
pop
cmp
mov
and
push
sti
icebp
into
jp
sub
xlat
sbb
add
popf
xchg
jae
int
cmp
jne
mov
sub
outsl
imul
mov
xchg
jp
sbb
push
push
xchg
adc
mul
jne
sti
xchg
pushf
xor
out
loop
jp
cld
inc
sub
dec
outsb
sub
jl
mov
pop
jg
inc
arpl
pop
out
mov
out
push
shl
mov
stc
fwait
pop
mov
mov
movsl
add
xchg
jno
xchg
shl
shll
add
mov
lea
aam
mov
jg
or
xchg
add
xchg
xchg
iret
scas
mov
arpl
xchg
pop
aaa
fwait
or
mov
dec
nop
cmp
jb
insb
icebp
and
jne
dec
andl
rclb
inc
scas
adc
mov
sub
dec
out
add
imul
and
clc
ss
pop
repz
push
mov
cmp
cmp
je
jne
xchg
js
sub
das
or
push
push
pushf
iret
and
pop
and
lds
andb
adc
dec
lods
sbb
mov
shl
dec
or
in
ja
lea
mov
mov
in
pop
jg
int
fsubrl
mov
outsl
xchg
inc
adc
daa
pop
outsb
pop
push
or
ljmp
jge
fldcw
pop
lret
scas
aam
and
repz
jl
push
pushf
and
cs
int
mov
lods
ja
mov
andl
ljmp
xor
dec
sti
pushf
lret
push
pop
push
fdivs
repz
push
jnp
and
pop
jg
mov
int
push
repz
mov
outsl
sbb
jge
add
movsb
sub
fsubrl
stc
sub
bound
out
rorb
incl
nop
cld
or
xchg
mov
insb
fisttpll
fnsave
outsl
out
jo
cwtl
mov
mov
xor
adcl
out
hlt
sub
lds
sbb
mov
out
sbb
jmp
pop
pop
fnstenv
sbb
enter
out
pop
mov
inc
add
mov
out
jge
mov
dec
cld
sbb
cmp
scas
aad
xchg
ja
and
insb
addr16
inc
ret
pop
imul
add
aam
sbb
aad
fsubp
adc
mov
adc
jnp
or
cmp
push
sub
and
cmp
push
sar
fwait
dec
adc
sahf
adc
dec
or
cmp
mov
sbb
xor
sbb
das
test
adc
scas
lods
mov
scas
call
into
add
pop
add
loope
push
mov
push
pushf
cltd
mov
inc
add
and
mov
push
repnz
pop
add
mov
inc
test
jae
pop
insl
and
lock
mov
cmp
test
jb
adc
loopne
clc
pop
mov
jge
into
push
in
cwtl
cmp
add
mov
dec
push
aaa
xchg
lods
stos
add
sbb
sbb
add
push
leave
shl
loopne
shr
pop
jmp
out
jmp
mov
push
pop
es
ss
xchg
stos
js
rcrb
hlt
mov
mov
push
sahf
adcl
or
dec
out
jns
mov
testb
inc
xorl
or
xor
js
fiadds
pop
jo
sub
jp
sub
sbb
add
xlat
jnp
and
scas
dec
push
push
adc
dec
jge
mov
ljmp
mov
pop
xchg
lock
inc
pop
mov
lcall
int3
jmp
test
and
push
scas
add
adc
push
mov
mov
cmp
xchg
out
bswap
xchg
loop
sub
lds
ds
push
jnp
mov
xor
mov
fsubr
and
sbb
in
test
cmpsl
fwait
push
xchg
lods
outsb
or
add
pop
adc
jl
test
jg
dec
into
jb
cmp
add
adc
test
xor
jne
mov
rolb
ret
inc
and
cltd
push
mov
cmp
rorb
out
lds
push
sti
xchg
jp
jmp
adc
popa
pop
ljmp
and
imul
jb
and
and
mov
jmp
test
les
ret
mov
jle
mov
xchg
and
mov
adc
cmp
inc
test
jge
jbe
xor
icebp
pop
push
std
xor
mov
push
pop
jmp
jne
sbb
rcl
cmp
sub
out
lcall
clc
xchg
jae
adc
push
mov
mov
int
inc
jb
test
adc
inc
adc
jl
jl
push
push
mov
icebp
inc
gs
mov
xor
jno
jo
out
push
rcrl
fdivrl
enter
cwtl
jnp
mov
mov
xchg
lds
sbb
mov
test
out
pop
add
call
sarl
fs
xchg
dec
sub
imul
pop
or
cmpsl
add
jb
mov
or
lods
xor
xor
ljmp
mov
push
adc
fs
pop
ret
test
shlb
outsl
push
adc
and
movsl
and
inc
rolb
lahf
mul
xor
and
push
dec
ficoml
sub
push
jnp
lods
and
xor
or
fcomps
idivb
push
inc
push
fisttpll
imul
ret
xchg
cmc
mov
and
test
sub
cli
sub
icebp
inc
into
dec
loop
cmp
xchg
lods
mov
rorl
xchg
mov
pop
mov
add
ds
call
jnp
sbb
or
jne
sbb
cmp
nop
xor
scas
daa
push
adc
ret
mov
cmp
out
cmp
mov
lock
ljmp
mov
scas
ja
lcall
or
xor
xchg
jns
mov
movsl
xchg
push
out
adcb
sbb
filds
push
ret
lock
mov
lret
insb
les
push
ret
scas
push
popa
mov
pop
or
mov
movsl
aas
fdivrs
lock
pop
cmpsb
sub
mov
inc
and
in
mov
ret
adc
testl
pop
imul
cmpsb
and
mov
cwtl
and
mov
test
outsb
fs
inc
cmp
test
mov
je
sbb
popa
bound
imul
adc
lcall
or
jae
mov
mov
inc
jbe
cmp
in
xor
cmp
xchg
mov
sbb
mov
jp
xor
repz
jbe
push
jbe
xchg
insl
lds
repz
mov
sahf
mov
clc
cmp
fnstsw
stc
cmp
xchg
xlat
jbe
adc
inc
mov
pop
and
and
jmp
jb
in
fwait
je
jp
adc
cmp
sub
loope
add
jo
iret
push
cmp
mov
or
les
cmc
add
loop
stc
enter
int
mov
pusha
fistps
dec
mov
leave
pop
and
test
jmp
inc
dec
insl
jmp
xor
pusha
push
push
leave
xor
jbe
ja
xor
xchg
sti
mov
out
subl
pop
hlt
fs
mov
enter
js
jbe
daa
xchg
pop
xor
imul
xlat
mov
dec
push
shlb
cs
mov
push
jmp
adc
mov
pop
into
sahf
xchg
data16
mov
fs
jae
dec
aad
iret
jne
insl
cmp
popf
sbb
sub
enter
mov
ja
sub
push
cmp
cmpsb
mov
add
ja
jg
loopne
fwait
aad
add
test
bound
rcrl
out
mov
xchg
mov
je
fcomps
mov
jnp
jg
mov
test
stos
repz
inc
mov
mov
cmp
mov
js
into
mov
mov
out
push
inc
loopne
or
xor
pop
push
into
push
lahf
adc
mov
jns
aam
addl
dec
je
xor
pop
sub
je
jge
xchg
sub
and
movsb
push
xchg
sub
mov
testl
dec
jecxz
rcr
mov
dec
xor
add
mov
mov
in
jo
or
push
addr16
push
je
sbb
push
es
mov
dec
orb
sub
adc
fisubrs
loope
int3
mov
nop
pop
adc
decb
ds
es
jge
pop
add
addb
sti
xor
push
mov
and
jle
sbb
cmp
pop
xchg
outsl
test
out
xchg
loopne
push
cmpsl
subl
test
lret
xchg
jl
stc
lods
in
gs
dec
pop
imul
notb
xchg
pop
mov
mov
xlat
mov
or
out
push
pusha
clc
jb
push
into
or
dec
fistl
sbb
mov
mov
test
cmp
sub
xor
aad
sub
rol
push
sub
clc
gs
mov
shrb
pop
sbb
jns
or
sub
mov
cld
stos
jo
add
andb
mov
sbb
xchg
push
push
push
push
adc
into
adc
xchg
pop
and
push
fst
xchg
sub
mov
jmp
dec
aaa
sub
mov
pop
lods
scas
mov
aas
loope
push
inc
push
stc
popa
cld
sti
jp
hlt
movsl
jo
adc
mov
lcall
pop
out
xor
xor
call
in
pusha
adc
ret
and
mov
int
std
xchg
jg
mov
popf
test
push
jmp
push
mov
dec
es
push
jmp
push
xchg
aad
pop
subl
repnz
dec
or
mov
std
jp
or
dec
dec
scas
test
jge,pt
adc
test
mov
pop
cmpsl
cmc
dec
mov
jg
icebp
or
push
sti
and
xchg
std
add
push
rcrb
lea
testb
adc
std
inc
jmp
sub
inc
and
int3
xchg
push
push
cmpl
jl
mov
mov
add
lods
std
mov
add
or
mov
sahf
paddb
jl
cwtl
dec
in
adc
outsb
jmp
or
inc
hlt
jmp
stos
orl
icebp
sub
fsubr
insb
testl
mov
dec
sub
jo
xchg
mov
jb
or
es
mov
sbb
cmp
sbb
jmp
mov
jmp
and
push
fldenv
lods
sbb
adc
xchg
cld
jl
les
mov
add
sub
xchg
daa
cmp
mov
arpl
mov
inc
int
cmp
adc
mov
sbb
push
and
outsb
stc
imul
fistpl
test
in
ret
cs
jle
mov
or
mov
lret
pop
fcmovu
vmovdqu
xchg
divl
js
jbe
ret
mov
aam
xor
add
xor
mov
push
push
je
stos
dec
cli
jp
jae
call
mov
pushf
jne
lock
lds
or
pop
divb
sub
stos
outsl
mov
cmp
inc
mov
bound
xchg
jmp
xor
mov
pop
outsb
adc
and
mov
test
sbb
mov
into
stos
shlb
inc
xchg
es
jae
adc
repnz
xor
movsb
ds
cs
testb
hlt
xor
xchg
in
xor
lcall
push
push
cmpsl
fstpt
mov
adc
jle
dec
jbe
mov
test
dec
lods
bound
inc
inc
push
mov
negl
add
push
mov
enter
int3
adc
lods
adcl
pusha
jp
push
pushf
loope
and
out
add
or
test
fldcw
push
movsl
lock
js
mov
xor
loopne
xchg
shrl
xchg
ret
sub
and
lret
cmp
filds
pop
int3
sti
out
pop
add
inc
push
pop
pop
and
cwtl
mov
inc
pop
jns
out
in
mov
sbb
pusha
imul
or
lahf
cmp
add
xchg
and
fbld
lods
idivl
cmp
iret
int3
cmpsb
in
lock
jge
sub
xchg
adc
mov
and
dec
jae
sub
test
and
pop
dec
inc
fwait
cmc
lods
ja
dec
lcall
mov
xor
mov
addl
cli
test
ret
shrl
push
shr
mov
cmp
xorl
xlat
dec
xor
cli
fwait
jae
cmp
cltd
sti
popa
lret
xor
shr
aas
cs
cs
mov
in
lcall
jns
scas
cmpl
mov
inc
inc
decl
jg
test
std
outsl
mov
cmpsb
mov
fwait
addr16
dec
lcall
dec
jmp
and
inc
xor
push
scas
jne
pushf
xchg
sti
das
movsb
mov
sbb
mov
and
ror
dec
lret
and
jecxz
cmp
lds
lret
xchg
call
out
jns
ja
mov
cli
pop
out
dec
sub
sbb
aas
repnz
ud0
imul
inc
cmp
nop
mov
mov
cmp
xchg
loope
lea
cmpl
push
add
packuswb
dec
test
sub
jns
outsl
std
out
push
test
mov
loop
xchg
mov
push
aam
ljmp
mov
lods
cltd
lret
rep
and
pop
sbb
daa
sar
fidivs
jmp
add
push
dec
into
inc
sub
push
or
jo
aaa
in
jl
call
rcr
inc
dec
and
insb
popf
mov
ficoml
add
sbb
test
lods
pop
push
and
ja
fwait
out
cwtl
push
cmc
lahf
test
adc
inc
sarb
loop
in
mov
aas
sbbb
cmp
push
pop
int3
sbb
or
push
dec
mov
sahf
mov
dec
les
push
add
test
stos
das
mov
mov
lret
loop
cmpsl
sbb
pop
stos
bound
sbb
push
ficomps
dec
xchg
or
inc
gs
sub
and
or
lret
imul
cmp
test
cmp
bound
fistpll
push
call
sbb
fsubr
adc
fstl
cmpsl
cmp
mov
mov
lock
mull
xor
push
jecxz
xor
daa
or
or
xor
les
sbb
fisubl
insl
jl
shr
pop
dec
mov
popa
sti
cwtl
fistpl
mov
movsb
mov
or
sarl
sbb
das
jbe
out
ljmp
pop
pop
xor
je
pop
das
aaa
aas
dec
adc
sbb
mov
mov
mov
jbe
sub
push
in
out
adc
mov
mov
outsb
movsl
shlb
dec
inc
mov
mov
je
movsb
xor
daa
fcom
fnstsw
cmp
je
movsl
mov
cs
pop
xchg
push
repz
sub
jmp
lret
lock
mov
test
pop
sbb
inc
test
cmp
in
mov
cmp
loop
jmp
out
push
dec
sbbl
imul
data16
in
out
xchg
xor
and
into
push
sbb
pop
add
inc
xchg
je
iret
jno
sahf
lea
sbb
push
cmp
enter
lret
or
xor
int
fldpi
ss
cltd
loopne
xchg
mov
hlt
or
inc
aaa
add
mov
sbb
lods
rclb
pop
loop
and
adc
or
aaa
pushf
mov
ljmp
movnti
leave
dec
cwtl
adc
fwait
mov
xchg
mov
dec
jbe
mov
fidivl
add
mov
pop
aam
jle
nop
fdivrl
inc
cmp
popa
dec
mov
cmp
xchg
ret
mov
jg
mov
or
mov
pushf
sub
jl
xchg
and
add
sti
mov
cltd
fidivs
jnp
nop
negl
in
lret
xor
jbe
mov
mov
out
stos
pushf
pusha
or
in
adc
leave
push
movsl
mov
clc
lods
idiv
cltd
mov
aam
lcall
ljmp
mov
jge
rep
cmp
push
out
xor
dec
add
sub
xor
xor
pop
cmp
insl
addr16
jmp
in
and
mov
push
mov
inc
ret
sbb
arpl
and
stos
pop
inc
adc
nop
cmp
mov
es
lcall
loop
stos
movsb
cmp
dec
std
pop
add
inc
or
cmp
out
adc
aad
push
xchg
sbbb
mov
push
mov
sahf
mov
test
das
xchg
push
mov
inc
in
test
cmp
repnz
add
into
inc
arpl
or
pop
xor
cmp
lcall
js
or
ja
sub
jne
jae
fidivs
test
dec
dec
fsubrs
pop
sub
jmp
fcompl
aad
xchg
mov
and
mov
fs
cmc
cs
in
mov
mov
rcl
rol
lret
inc
mov
in
fwait
repnz
sbb
dec
dec
jb
mov
cmpsl
pop
addr16
inc
pop
lock
aas
pop
repz
test
mov
adc
and
in
rcl
notl
ljmp
repz
mov
dec
cmp
dec
out
cmpsl
and
mov
add
adc
popf
jb
pop
mulb
outsl
sub
dec
lods
push
mov
push
or
adc
je
pusha
imul
cmp
lahf
cmp
add
sarl
xchg
bound
sbb
clc
std
mov
adcl
aas
xlat
test
call
enter
cli
out
rcr
fs
sahf
push
sahf
xor
in
insl
pop
faddl
inc
lods
mov
adc
idivl
pop
xchg
adc
push
mov
les
std
pop
sub
add
ljmp
or
pop
mov
jb
cmpsb
inc
movsb
cmp
neg
sbb
jge
mov
mov
into
mov
inc
fucomi
add
xchg
lods
fmul
adc
in
pushf
fwait
stos
outsl
and
notl
jecxz
enter
xor
inc
nop
not
cmp
mov
dec
pop
dec
not
imul
inc
fstps
jge
nop
add
mov
adc
adc
sbb
in
xlat
fcoms
imul
inc
push
pop
or
nop
push
mov
fdivl
pop
leave
xchg
dec
pop
xchg
pop
out
inc
add
mov
adc
cli
mov
imul
jne
in
out
mov
push
test
mov
and
adc
in
sbb
fnstsw
scas
cmc
or
mov
push
pop
xchg
rclb
movsl
adc
add
icebp
adc
pop
dec
test
ss
add
push
xlat
xor
lods
inc
jns
pusha
insl
mov
test
mov
xchg
push
test
pop
decb
cwtl
in
je
rolb
push
pop
sbb
jl
dec
mov
sbb
push
inc
jae
jae
aaa
out
pusha
mov
loop
jge
and
loopne
sub
lock
enter
mov
aaa
inc
jo
xchg
xchg
jmp
cmpsl
out
and
cmp
cmp
xor
lahf
and
mov
loop
lret
dec
adc
call
push
fimull
js
push
xor
in
icebp
andl
pop
dec
xor
div
pop
dec
mov
jno
icebp
xchg
pop
pop
inc
test
push
and
and
mov
mov
mov
clc
xor
add
loop
fsubs
pop
out
cmpsb
push
ss
xchg
sbb
inc
mov
scas
mov
ljmp
adc
outsl
jns
push
mov
adc
stos
popa
cli
push
enter
or
cmp
imulb
test
push
xchg
add
cmp
call
outsb
out
dec
dec
nop
adc
push
shrb
xchg
mov
int3
pop
push
stc
shll
icebp
dec
jmp
cmp
mov
jg
jmp
mov
negb
dec
dec
push
xor
cltd
nop
pop
popa
jnp
loope
mov
and
test
cmp
xor
cmpsl
out
mov
dec
xlat
dec
mov
pop
ror
xchg
xchg
xchg
scas
adc
out
fcomi
mov
push
dec
fninit
mov
loop
xor
lahf
js
cmp
cmp
sub
test
dec
frstor
dec
sbb
mov
lcall
mov
ss
cmp
mov
out
mov
dec
mov
xchg
scas
fstl
popf
ror
or
pcmpeqb
adc
pop
sti
insb
mov
sbb
insl
les
add
mov
mov
sub
cmp
mov
out
test
pop
movsb
nop
call
iret
mov
out
and
sarb
fbld
shr
loop
mov
jp
mov
gs
sbb
mov
jb
dec
and
and
out
sbb
inc
loopne
andb
fiaddl
push
jo
sub
or
xchg
xchg
xor
push
loopne
sbb
push
sbb
mov
mov
test
jns
addr16
int3
adc
and
mov
out
cld
pop
movsb
lds
pop
pop
lods
dec
out
add
fldl
pusha
aaa
mov
adc
mov
lcall
lret
xor
cmp
mov
or
into
jnp
mov
pop
insb
dec
sub
push
sub
xchg
lds
jp
xor
sbbb
insl
adcb
adc
mov
pop
cmp
dec
xchg
les
lock
cmp
arpl
insb
cld
fildll
xor
mov
test
mov
mov
mov
mov
push
mov
sbbb
mov
not
xchg
leave
adc
mov
or
ss
sub
adc
push
sub
cld
stos
adc
mov
fsubrl
out
mov
int3
hlt
clc
mov
mov
inc
mov
push
insb
mov
inc
in
sub
jne
sbb
scas
push
arpl
mov
xchg
pop
or
repz
pop
lcall
cmp
rol
push
and
push
je
les
repz
shl
push
pop
xchg
cmp
lret
mov
les
fbld
pop
es
xchg
and
sub
int3
ret
mov
popa
push
pop
mov
xchg
test
mov
sub
lcall
in
mov
mov
xchg
lahf
jae
push
int
sbb
call
daa
mov
sbb
popa
pushf
fistl
int3
hlt
clc
jne
cmpsb
add
jge
add
sarl
add
div
enter
or
jbe
xchg
jbe
jb
xor
aam
sub
xor
push
les
outsb
scas
jle
dec
scas
cltd
lds
cmpsb
xor
sbb
fldl
mov
aad
ret
in
cmp
and
test
ds
mov
clc
xor
es
lahf
push
pop
xchg
pop
jbe
mov
sbb
dec
imul
pop
push
fdivl
lret
int
cmp
push
pop
fsubrl
stc
lcall
sahf
xchg
data16
fs
std
fisubs
repz
sbb
out
leave
scas
insb
arpl
xchg
or
cmpsl
xchg
int3
jne
es
mov
pop
cmpsb
movsl
sti
xchg
test
lret
cmp
jo
pop
add
xchg
pop
jbe
inc
arpl
es
mov
sti
das
pop
das
ret
mov
xlat
js
aam
sbb
sar
outsb
jg
xchg
enter
xchg
inc
lret
cmp
or
ds
mov
inc
jecxz
sub
repnz
mov
outsl
mov
rorl
jp
call
sub
mov
lcall
or
lds
cmpb
dec
push
jmp
lock
comiss
insl
xor
lods
mov
lcall
push
movsb
sbb
test
sub
test
pushf
in
in
dec
mov
inc
pop
mov
or
cmpsl
frstor
xor
xchg
add
es
inc
mov
sbb
jne
and
lcall
icebp
nop
xor
les
addb
sbb
es
push
stos
pop
sbbl
int3
sub
nop
xchg
inc
pop
adc
out
pop
adc
or
dec
inc
pop
cmp
mov
cld
dec
arpl
pop
ret
ss
test
lahf
orb
stos
lods
mov
add
aam
mov
mov
clc
jb
pop
inc
pop
sti
fisttps
mov
adc
arpl
ss
stc
push
mov
mov
xchg
out
jp
mov
mov
ss
dec
and
cs
jne
out
test
inc
idiv
in
or
jbe
pop
jl
bound
and
pop
or
or
pop
push
mov
dec
loope
test
insl
push
adc
aas
js
add
and
xchg
jb
stos
mov
add
cmp
in
jecxz
mov
cwtl
pop
cli
leave
add
mov
mov
sbb
ljmp
out
jns
inc
inc
xor
jg
test
cs
daa
jmp
or
into
xor
pop
insl
cld
push
out
ret
cmc
cld
sbbl
fisttpll
xor
call
lods
sti
aas
repz
outsb
imul
xchg
jns
out
js
aas
adc
rcll
jecxz
pop
addr16
push
cmp
pop
fsubs
movsb
xor
or
sbb
cltd
loop
sub
das
sub
cmp
push
xor
dec
adc
xor
outsl
or
sub
into
hlt
lods
idivl
sub
loope
mov
xchg
add
insb
and
push
mov
push
jecxz
in
pop
and
cmp
and
and
ret
or
rcrb
xchg
inc
push
sti
mov
je
lahf
adc
lds
push
xchg
mov
cmpsb
dec
aam
push
rcll
pop
or
aad
stos
cmc
mov
mov
inc
lds
mov
in
push
arpl
test
js
stc
sbb
bnd
add
lock
or
test
adc
loopne
inc
out
outsl
push
or
je
fcomp
xchg
push
shrl
das
pushf
push
sarl
adc
mov
bound
incb
sbb
ds
scas
push
rorl
dec
fstpl
jns
jo
sbb
test
cmp
scas
mov
xchg
or
test
add
jno
sub
or
lds
cmp
push
popa
mov
in
xor
or
mov
cmc
sub
jb
mov
lods
xchg
test
pop
adc
rcrb
fdivrs
and
push
xor
ficoml
or
jnp
mov
adc
jp
push
pinsrw
addr16
aad
stos
lret
dec
xchg
or
loopne
mov
daa
inc
addr16
test
icebp
js
dec
push
icebp
repnz
push
mov
xor
int3
std
push
outsb
mov
mov
xor
enter
pop
push
xchg
fidivl
cmp
enter
push
testb
or
pop
xlat
push
aad
push
ret
shlb
sbb
data16
lods
jg
cltd
sub
lret
ds
add
lock
bound
and
sub
nop
in
xor
imul
mov
dec
cmc
dec
daa
clc
rcl
inc
insb
jns
shll
cmpsb
xlat
test
xchg
iret
inc
enter
xchg
xchg
jns
jle
add
outsl
addr16
stos
gs
icebp
push
cmp
cmc
pop
js
fists
scas
add
adc
arpl
pop
sbb
mov
push
lods
leave
test
xor
inc
cmpsl
rcrb
in
mov
push
loop
and
dec
ds
sahf
pop
aam
or
inc
rcrl
loop
pop
out
push
fwait
das
cltd
mov
push
sub
sub
bnd
and
loope
mov
push
icebp
adc
or
test
mov
and
aas
xchg
sbb
outsl
rcll
xchg
push
cmp
xchg
pop
loopne
pop
lret
popf
mov
outsb
xchg
adc
test
cmpb
ficomps
pop
mov
mov
lods
xchg
push
rcl
sub
mov
cmp
xchg
popf
int
mov
mov
jmp
scas
out
insl
dec
xchg
dec
js
test
jae
mov
mov
pusha
xchg
or
or
out
inc
jae
fmuls
in
scas
stc
add
fimuls
test
insl
or
repz
lods
push
jg
adc
pop
loope
int3
ljmp
test
cmpsb
jecxz
cmp
std
pushf
add
shlb
nop
xchg
pushf
pop
mov
jno
fs
fidivs
xchg
pop
pop
and
inc
sbb
jmp
pop
xchg
movsb
sub
sub
pop
into
jl
imul
lock
test
fucom
clc
inc
test
push
push
movsb
cltd
roll
jg
dec
fwait
cmp
pop
pop
fcoml
adc
mov
xor
push
shlb
cmp
xchg
xor
jp
dec
std
push
std
push
jmp
push
lock
je
pop
jle
orl
mov
sub
add
jo
pop
cmp
sub
dec
and
and
xor
das
mov
dec
outsb
inc
pop
pop
ss
rol
dec
fxam
pusha
adc
lret
out
push
inc
adc
xchg
mov
jae
jle
enter
add
and
xor
mov
les
fs
popf
xor
xor
adc
xchg
lods
lret
mov
inc
pop
stc
cmp
sbb
sahf
sub
mov
mov
icebp
das
inc
push
in
shrl
adc
mov
imul
sbb
shrl
pop
mov
out
dec
sbb
cmp
ret
or
or
in
data16
xor
dec
mov
scas
and
mov
or
in
repz
mov
imul
cmp
mov
jmp
mov
movsl
dec
fisubrs
cmp
test
or
push
ds
out
or
and
cmpsb
mov
or
xor
adc
mov
out
dec
add
outsb
fsubrs
sub
add
lods
out
pop
dec
ss
adc
sub
push
aam
mov
outsl
xor
push
test
es
dec
scas
lret
sbb
sub
jnp
pop
dec
xor
ljmp
or
xchg
test
insb
icebp
bound
mov
pop
cmp
pop
outsb
clc
jo
inc
or
mov
sbb
pop
int3
xor
lods
mov
cwtl
enter
mov
fs
push
mov
pop
jo
popa
std
insb
lds
icebp
xor
jle
xchg
or
xchg
fwait
push
ret
and
jmp
in
inc
sub
xlat
add
jo
jne
mov
sub
leave
mov
and
mov
sub
xchg
clc
pop
stos
addb
jne
test
or
jb
ss
xor
xor
ret
repz
or
jle
dec
xor
jbe
or
cmpsl
fwait
inc
loop
dec
lods
inc
shl
jne
pop
dec
scas
xchg
dec
sbb
sub
imul
inc
dec
sub
loope
add
mov
push
push
and
add
xor
pusha
xor
test
imul
push
sub
dec
popl
jle
test
das
push
jns
lcall
iret
cmp
shlb
sbb
push
and
loope
iret
and
cwtl
hlt
movsl
test
je
mov
push
in
loopne
xchg
jns
bound
mov
dec
movsb
sbb
sbb
rcl
loope
jmp
pop
mov
mov
leave
xchg
inc
mov
jle
loop
push
or
jnp
jne
xchg
lea
lea
xor
popa
sbb
sahf
cld
jo
dec
mov
inc
test
ljmp
imul
add
clc
push
aaa
pop
mov
enter
ss
insb
mov
sub
mov
aam
aas
enter
scas
sti
ret
inc
pop
mov
rorb
outsl
xlat
mov
inc
mov
es
fbstp
cmp
and
pusha
xor
jmp
inc
cmp
clc
mov
sbb
push
cmp
out
mov
push
mov
adc
add
test
or
dec
bound
push
adc
lock
mov
jle
in
xor
sbb
repz
out
lar
push
shr
add
mov
mov
popa
stos
pop
cmp
sub
loop
and
sbb
sbb
and
stc
lea
stc
add
pop
movsb
and
imul
sub
sbb
and
mov
outsb
xor
fs
push
xlat
into
mov
and
lret
pushl
xor
fstpt
mov
mov
inc
leave
rorl
add
enter
xor
xchg
rorl
pop
shrl
ret
flds
mov
aas
xchg
bound
cmp
jbe
xlat
jge
negl
adc
divl
jne
and
mov
loopne
rorl
push
dec
and
fwait
and
pop
leave
lret
jp
sarb
sbb
fs
xchg
push
fsts
int
push
mov
sub
or
inc
aaa
push
lea
loope
movsl
push
xor
mov
mov
push
xchg
push
push
jmp
xor
daa
jb
roll
test
rorb
cmp
jg
cmp
inc
pushf
je
sbb
fnsave
fiadds
inc
jno
out
jne
hlt
je
xor
leave
in
sbb
push
lret
mov
and
or
pop
sarl
jp
adc
popf
xchg
mov
cmp
pop
xchg
dec
jns
xchg
cmp
pop
push
push
aas
xor
test
xabort
jne
push
mov
sub
sbb
sub
sub
lods
push
stos
stos
fisubl
xor
rorb
ss
fldl
jnp
jo
shrb
stc
cmp
mov
out
inc
push
loope
dec
and
or
push
dec
lret
addr16
ret
dec
push
cmp
jno
xor
dec
out
pop
test
sub
movsb
fsubl
shr
pop
xchg
loope
int
lahf
mov
jae
or
push
xor
pop
sub
cli
mov
in
mov
pop
fwait
jb
pop
push
xchg
push
aaa
lods
jecxz
pushl
xchg
mov
jmp
cmp
or
jae
xor
call
push
hlt
inc
jae
pop
std
mov
sub
or
xchg
js
pop
xlat
push
pop
fcomps
lret
mov
adc
xor
dec
mov
cmpsb
cmpsl
cli
lret
push
jae
xor
into
adc
xor
dec
pop
pop
dec
mov
sahf
mov
and
xchg
rcrb
cltd
std
stc
xor
js
xlat
dec
xor
ds
xchg
add
iret
jle
dec
js
popf
sub
adc
xor
xorl
mov
jns
inc
jecxz
pop
lea
fs
mov
pop
sbb
or
jmp
hlt
jbe
push
aaa
shlb
andl
fidivl
popa
adcb
dec
hlt
lock
ljmp
inc
mov
cltd
add
ja
sub
inc
scas
inc
imul
cmpsl
jmp
je
stos
sbb
xchg
mov
cmp
incb
outsl
and
mov
adc
jae
sbb
lret
cmc
xorb
outsl
aas
fs
mov
sbb
inc
mov
out
iret
insb
mov
add
fs
test
call
movsl
mov
or
mov
cwtl
fldcw
mov
clc
repnz
mov
mov
insl
mov
xlat
sbb
sbb
aaa
add
ljmp
test
xlat
push
mov
pop
jno
dec
cmpsb
rclb
xchg
repnz
pshufw
in
pop
test
fisubrs
or
cwtl
mov
and
mov
ret
adc
push
stos
ja
pusha
adc
dec
icebp
or
rcll
or
repz
push
sbb
dec
mov
jnp
mov
jle
arpl
push
repz
jl
das
dec
and
jge
leave
dec
rorb
cwtl
sub
flds
int
ja
sub
push
or
dec
mov
push
inc
outsb
repnz
pop
pop
and
push
mov
pop
cld
scas
lods
xorb
ja
in
pop
push
imul
pop
jl
pusha
popa
outsl
xlat
enter
lds
std
fs
loopne
inc
add
and
lcall
aas
pop
pop
adc
mov
fs
cmp
jle
xchg
mov
lret
mov
or
cli
mov
into
dec
jb
or
sti
fistl
pushf
cmp
andb
hlt
aas
mov
sub
xchg
jle
sbb
and
mov
arpl
and
or
jle
popa
out
aam
fisubrl
jp
mov
cmpl
and
das
add
and
push
flds
cs
jg
xchg
mov
sbbb
imul
lahf
dec
in
idiv
push
movsl
jg
jmp
out
and
pop
pop
aad
cmp
repz
lods
jle
xchg
mov
mov
sbb
adc
cltd
mov
mov
shrl
stc
fidivl
inc
sti
scas
mov
icebp
cmp
popf
xchg
jp
mov
sarb
pop
bound
jmp
addr16
adc
push
sbb
addr16
fdiv
out
cmpsb
dec
lds
lret
dec
test
test
xchg
repz
adc
inc
and
dec
add
jp
and
dec
je
xor
sub
or
imul
mov
mov
pushw
test
and
andl
ret
adc
fcmovnu
xchg
aas
fstps
mov
out
aad
jns
inc
add
add
js
or
pop
lods
or
sbb
ljmp
mov
adc
out
cmp
out
test
xor
mov
xchg
or
dec
inc
jle
pusha
sbb
clc
lods
cmp
or
and
ja
and
popf
and
sbb
push
mov
mov
xchg
bound
push
jbe
mov
data16
mov
sti
xor
arpl
mov
lea
insl
pusha
out
adc
mov
ds
das
imul
push
std
dec
dec
bts
and
std
inc
inc
std
mov
push
cmp
push
push
lcall
dec
loop
and
dec
cmp
mov
xchg
mov
xchg
arpl
adc
sub
jg
jnp
out
das
out
inc
fcomps
data16
gs
xor
jecxz
test
push
enter
mov
inc
call
dec
cmp
fwait
pop
loope
sbb
mov
push
xchg
dec
into
adc
jo
repz
adc
jae
addr16
and
jnp
fldcw
lret
pop
popf
mov
or
adcb
adc
mov
or
popa
lret
outsb
jge
jne
aas
jb
js
inc
test
and
fnsave
mov
es
sub
mov
pop
add
sub
mov
jnp
test
dec
mov
or
push
sahf
ss
out
aad
and
mov
ljmp
mov
mov
mov
divl
adc
mov
int
addr16
pop
iret
test
shll
sub
cmp
jecxz
mov
stc
push
or
dec
repnz
movsb
xchg
mov
inc
pop
xor
pop
aad
lahf
adcb
xchg
cmp
push
lock
and
or
fildll
pusha
sbb
pop
mov
fdiv
mov
add
dec
enter
xor
sbb
imul
stc
test
addr16
xchg
add
dec
or
and
add
lret
inc
xchg
xor
lods
sar
pop
xchg
insb
fmull
push
or
sbb
lods
mov
push
popf
jecxz
cld
notl
inc
add
aas
loope
rcll
mov
sbb
int
push
mov
adc
or
cmp
xchg
mov
jmp
and
push
jnp
mov
test
xlat
sbb
cli
xchg
push
xchg
std
mov
shll
or
loope
movsl
mov
dec
cmpb
mov
cmp
jb
stos
out
pop
dec
xchg
cwtl
jo
push
addb
out
repz
icebp
sbb
pushf
test
mov
xchg
lea
xor
outsb
push
pop
dec
out
loope
loopne
inc
int
mov
cmp
sub
mov
and
in
inc
mov
lods
lret
cltd
out
pop
push
test
scas
or
push
or
outsl
sahf
xchg
or
jle
cltd
push
and
incl
inc
inc
outsl
lds
lret
hlt
int
jns
int
outsb
test
push
ss
lret
adc
inc
push
rcrl
xor
add
fincstp
and
sbb
pop
fucom
and
mov
call
jbe
dec
mov
add
lods
aaa
rolb
jae
outsb
sub
xchg
sbb
cmpsb
addr16
popa
xor
cs
loope
push
push
pop
ja
jmp
loop
push
cmc
push
cmc
es
or
scas
push
ljmp
aaa
push
popf
dec
jle
sub
fcompl
insb
add
mov
jecxz
cmpsl
aam
mov
dec
filds
leave
lahf
pushl
adc
lahf
add
add
daa
dec
cmp
in
into
ja
enter
mov
adc
mov
bswap
push
push
and
cmpsb
jle
das
mov
xchg
je
sub
ds
cltd
insb
xor
lods
xchg
aam
push
inc
xchg
shll
fstp
cmp
testl
pop
cli
sbb
data16
xor
lret
mov
scas
movsb
sbb
cli
add
lock
sbb
xor
leave
xchg
push
xchg
das
mov
mov
inc
mov
inc
pop
pop
xchg
fimuls
and
fwait
lods
inc
adc
sub
sti
sti
dec
mov
mov
fcoml
cld
or
das
add
push
repnz
xlat
mov
repnz
push
ret
sqrtps
add
addr16
mov
fistl
mov
mov
cmp
push
daa
pusha
lock
movsb
mov
mov
inc
inc
dec
scas
dec
xor
push
popf
inc
jne
mov
adc
adc
out
ljmp
in
lret
pop
out
movsb
notb
pusha
sbb
faddl
pop
dec
push
test
adc
mov
push
lcall
jp
pusha
arpl
and
repnz
adc
dec
stos
adc
movsl
popa
icebp
adc
fsubl
xor
sbb
lods
cltd
loop
adc
push
sbb
xor
loop
stos
fsubs
jnp
js
push
insl
jg
enter
scas
add
mov
ss
adc
pop
mov
dec
jmp
pop
and
push
rcl
iret
lret
out
cwtl
mov
jns
aaa
hlt
cmp
sub
adc
sub
inc
stc
adc
cmpsl
inc
icebp
adc
dec
adc
push
jb
insl
mov
push
addl
dec
ficoml
mov
xor
es
sbb
sbb
aad
les
pop
out
mov
scas
pop
cmpsl
push
bound
lock
leave
adc
icebp
pusha
in
lock
jo
or
jle
sub
adc
in
add
push
jne
xor
adc
outsl
loop
inc
fwait
xor
loope
xchg
xchg
and
or
cwtl
add
divl
js
int
inc
mov
test
jbe
or
ljmp
sbb
fs
mov
repnz
iret
push
je
jnp
and
cli
aas
or
cmp
jae
imul
mov
jns
jae
lds
pop
jb
aad
in
sbb
cmp
adc
imul
dec
xchg
push
inc
add
dec
mov
shld
fcompl
popf
cmpsl
movsl
in
inc
or
fs
lea
xchg
adc
imul
cmp
sub
mov
popf
nop
ss
jle
sub
lcall
push
outsl
data16
mov
jg
into
sti
mov
push
faddl
cli
testl
mov
bound
clc
movsl
inc
cmp
jbe
lea
sbb
fcmove
mov
cmp
adc
add
fcoms
cmc
test
pusha
xchg
lods
sbb
outsl
in
sub
push
scas
ficomps
cmp
mov
cmpb
lahf
mov
fldenv
int
repnz
sarl
popa
ja
inc
xlat
popf
add
jns
aas
inc
faddp
push
mov
and
xlat
fimuls
cmc
nop
mov
dec
xchg
push
sbb
jo
std
adc
scas
xchg
rcl
iret
sti
mov
mov
push
mov
fsts
inc
fs
or
imulb
cmp
lods
xchg
and
aam
adc
loope
xchg
inc
movsl
jnp
push
shl
movsb
xorb
jnp
aas
rolb
jae
mov
mov
sahf
jg
xor
jge
outsb
mov
sbb
sti
ds
mov
sbb
and
sub
jg
pusha
cs
das
mov
lret
mov
insl
mov
mov
repz
jp
sahf
pop
into
pop
pop
sbb
push
cmp
inc
push
pop
fidivrl
pop
in
mov
xchg
setge
xor
icebp
inc
push
jg
xchg
dec
lock
addr16
push
mov
mov
xor
lret
push
mov
lock
loop
aad
fcomps
push
lea
mov
adc
xor
lcall
in
sbb
dec
sub
xlat
enter
loope
fdiv
movsl
rcrl
sbb
lret
fcmovnu
lock
in
mov
and
ljmp
push
sub
cmpsl
mov
sbb
or
pop
and
pop
add
pop
out
pop
xor
out
je
aad
stos
xchg
jecxz
bound
mov
xchg
mov
xchg
mov
outsl
sti
cvttps2pi
adc
and
jne
xchg
or
xor
mov
xor
sbb
popf
sub
xchg
sahf
jg
sbb
lret
jae
repz
pop
push
scas
sbb
call
repnz
sbb
cwtl
lods
jl
scas
adc
xchg
push
dec
mov
sbb
adc
push
dec
mov
lods
cmp
xchg
jecxz
and
lret
and
insl
or
add
adc
in
shll
add
repz
jae
add
insb
and
arpl
pushf
je
cmp
jecxz
push
sub
push
ljmp
call
sbb
out
dec
jecxz
inc
xchg
cmp
push
incb
inc
push
and
mov
push
dec
cmp
cltd
pop
cmp
push
lcall
int3
push
imul
test
cmpsb
movsl
scas
mov
add
stos
imul
fcmovb
sbb
sbb
jmp
push
out
testl
dec
push
or
inc
sub
dec
ficompl
es
xor
jns
jne
enter
ror
mov
mov
testb
dec
adc
jecxz
push
mov
stc
mov
outsb
xchg
in
fstpl
xchg
xor
and
jnp
outsb
fldcw
sub
ja
dec
jp
shl
out
xchg
rolb
pop
cs
test
daa
nop
test
xchg
outsl
ja
push
pop
add
jno
dec
pop
fwait
inc
cli
or
out
rorl
jo
push
pop
shrl
and
lret
mov
mov
call
sbb
in
xor
cs
js
sub
fbld
iret
pop
setnp
cltd
adc
inc
dec
push
leave
call
mov
inc
sbb
inc
movsl
or
pop
gs
fs
out
rcrl
insb
hlt
lods
dec
cmp
bound
fdivs
sub
icebp
in
inc
inc
mov
movsb
movsb
daa
mov
int3
mov
insl
add
out
inc
push
mov
in
fstl
xchg
lahf
in
sub
loop
jo
orl
and
inc
mov
mov
mov
loope
push
jmp
andl
jmp
ljmp
inc
insb
fldcw
pop
loop
xor
rorl
xor
cmc
mov
xor
sahf
add
mov
mov
xchg
dec
mov
pusha
jmp
xchg
mov
in
add
and
mov
jae
sbb
sti
inc
sub
imul
lret
adc
aas
cmp
push
sub
sbb
jmp
mov
adc
mov
jmp
xlat
cmpsl
in
sub
xchg
jmp
mov
mov
adc
jns
pop
sub
enter
xor
shlb
xchg
jg
sbb
repz
add
nop
jmp
repnz
and
daa
xchg
pop
jne
jl
test
sti
movsb
loop
out
outsl
aam
call
sti
std
jg
jne
pop
frstor
jl
jb
rcrl
subb
ret
jge
inc
cs
mov
dec
cmp
sbb
testb
pop
out
sbb
mov
add
mov
iret
loopne
ret
xor
ret
mov
and
cli
jp
mov
test
addl
lcall
pop
xor
movsb
pop
or
nop
inc
adc
aaa
mov
adc
lret
sbb
cld
lds
aad
aam
cmc
aaa
dec
aas
stos
sub
push
fiaddl
push
mov
and
push
inc
jno
pop
int3
xchg
out
xchg
leave
ror
dec
push
jno
fs
ja
testl
in
shl
lods
ja
pop
or
icebp
not
xor
xchg
rcll
push
mov
ret
enter
lret
cmp
sahf
and
insl
pop
daa
mov
pop
imul
mov
sti
push
imul
and
adc
out
xchg
xchg
sbb
pop
cmp
out
dec
test
inc
test
mov
xchg
data16
sbbb
adc
std
inc
sahf
movsb
mov
adc
inc
imul
add
mov
or
icebp
pop
pop
push
pop
loopne
stc
insb
cmp
fstpt
ret
shr
mov
lea
aam
pop
aaa
inc
mov
mov
pop
mov
pop
adc
andb
mov
bound
cmc
jge
jns
fisubs
jae
clc
push
xchg
or
inc
mov
xor
sbb
xorl
xchg
and
mov
sbb
lret
sahf
leave
add
mov
push
movsb
pop
shlb
xor
sbb
popf
hlt
add
mov
sbb
nop
push
clc
sbb
push
push
mov
popw
mov
dec
ss
out
pop
rclb
xor
and
movsl
dec
sub
lock
es
daa
mov
mov
arpl
or
jb
mov
fists
mov
cmpsl
aaa
and
jle
js
xchg
out
add
push
xor
bnd
fwait
add
xor
push
xlat
adc
jecxz
imul
xor
or
adc
mov
sbb
test
mov
sbb
sub
hlt
jno
jno
int3
rcr
sub
pop
xor
inc
inc
sbb
icebp
xor
loope
xchg
test
and
fbld
inc
out
sahf
inc
jle
xor
clc
dec
xor
out
jecxz
test
aad
sbb
xor
arpl
jb
movsb
testl
fbstp
xchg
pop
das
fs
out
mov
dec
dec
ret
or
sub
push
imul
xchg
sub
inc
out
sub
jns
jae
shrl
xchg
adc
mov
pop
or
mov
jb
and
and
mov
int
jns
and
xchg
mov
pop
add
scas
dec
cmp
insb
mov
std
int
std
push
and
popa
add
in
sub
clc
dec
lret
push
xchg
ret
inc
jmp
fst
addr16
addl
cltd
shlb
add
pop
adc
dec
inc
sbb
sub
xor
cmc
push
test
pop
pop
mov
xchg
sar
jb
sub
fs
pop
mov
fcoml
je
add
test
leave
and
out
jne
cld
jecxz
fcoms
stc
pop
inc
enter
cltd
inc
repnz
and
fdivrl
cwtl
mov
mov
sbb
add
cmpb
push
pop
outsl
fmuls
jns
stc
push
dec
iret
rcrl
fimull
or
movsb
xorb
and
mov
inc
jae
lret
xor
push
lods
fcmovnbe
outsb
and
mov
lea
cmp
add
je
push
stc
jne
push
adc
lds
sahf
aam
enter
cmp
xchg
or
add
jns
mov
cmp
mov
je
stc
push
in
ss
test
adc
fs
testl
and
out
sub
pop
icebp
aas
dec
in
push
pop
xchg
xor
inc
inc
je
adc
dec
daa
cmpsb
pop
or
push
out
push
nop
rcll
ret
fsubl
inc
pop
out
push
dec
xorb
jge
and
add
sti
arpl
xchg
inc
xrelease
data16
push
movsb
xchg
jnp
hlt
movsl
icebp
sub
xchg
movsb
and
leave
adc
outsb
addb
scas
cs
icebp
pop
mov
ss
gs
xchg
scas
cmp
xchg
pop
cld
mov
push
rcll
test
pop
cmc
cmp
fdivrl
js
or
test
push
enter
out
idivl
popa
movb
cmp
push
es
ror
mov
jmp
rcll
icebp
jle
out
scas
mov
mov
pop
cmpsl
enter
lock
push
push
pop
xchg
dec
cmp
insl
mov
test
adc
mov
jns
mov
movsl
sbb
push
mov
cld
push
rcrl
mov
inc
and
imul
std
sbb
les
fidivrs
and
sbb
push
mov
or
aam
inc
xchg
iret
lret
cmpl
dec
test
js
fildll
cmp
add
call
sahf
sbb
xchg
add
adc
imul
mov
sub
lods
data16
add
mov
or
gs
cmp
push
testl
xchg
xchg
cmc
jp
mov
aaa
mov
xlat
daa
xchg
mov
or
pop
nop
add
or
orb
inc
rcrb
les
call
pxor
sub
sbb
adc
pop
pop
inc
jmp
ficomps
sarl
push
xchg
mov
movsb
imul
and
shlb
sbb
or
inc
sub
inc
fldcw
sbb
cmp
fistl
mov
aaa
xor
es
mov
inc
mov
cld
out
mov
jl
mov
mov
xor
ret
mov
cltd
and
pop
imul
xchg
shlb
inc
mulb
inc
push
inc
pusha
jne
test
and
test
pop
adc
mov
inc
mov
jp
movsl
mov
aaa
add
stos
xor
dec
lea
hlt
or
inc
sbb
push
js
shrb
in
or
adc
mov
dec
mov
stc
sbb
xchg
icebp
stc
xor
and
mov
mov
xor
and
out
jp
xor
test
lods
cmp
ss
pop
clc
sar
dec
jmp
inc
test
sub
das
cmpsl
cld
mov
mov
fistl
pop
repnz
and
out
enter
dec
add
stc
mov
jecxz
jg
mov
aam
xlat
pusha
lods
std
rcrb
pushf
pop
sarb
jno
jg
mov
push
mov
jecxz
bswap
xchg
out
js
arpl
mov
mov
or
xor
popf
mov
xchg
push
or
mov
shrb
push
jae
xchg
sahf
insl
xor
loop
dec
push
lcall
fnsave
mov
inc
loopne
sbb
cmc
lds
pop
pop
mov
orb
xlat
mov
inc
cmpsl
roll
cmp
cmp
ja
ss
or
leave
or
inc
fcomip
add
out
dec
add
les
push
cld
mov
mov
mov
xor
push
ffree
adc
adc
xchg
sahf
fsubrl
cli
addb
cld
ficomps
cmp
sti
fs
bt
int
cmp
add
pop
pop
stos
cmp
jl
es
xchg
xchg
mov
or
divl
cmp
out
dec
into
jecxz
xor
stos
lods
pusha
sub
xchg
idivl
mov
push
or
cltd
and
andl
mov
xor
push
stos
mov
push
lods
cmp
ja
mov
out
add
pop
ficomps
sbb
inc
and
je
pop
mov
jnp
mull
dec
ret
stos
int3
mov
leave
aaa
jmp
lds
xlat
je
repnz
mov
std
jae
idivl
add
div
pop
inc
addr16
push
in
mov
gs
ljmp
mov
pop
sub
lea
into
mov
scas
ret
insb
pop
outsb
ret
and
nop
inc
inc
xor
mov
pop
xchg
mov
loopne
imul
imul
xor
mov
out
pop
push
rorl
lahf
adc
sbbl
repnz
sub
fisubl
int3
cmc
adc
mov
jbe
jge
into
mov
fistps
ljmp
les
fnstsw
mov
xor
add
jbe
int
and
outsb
pop
js
push
or
cltd
xor
and
or
jno
mov
jmp
or
mov
xor
xlat
lock
jns
in
jo
jg
pop
aas
xchg
xchg
push
xor
hlt
sub
ds
cmp
lds
sub
jecxz
mov
stos
mov
test
stc
push
int
test
sbb
es
cs
test
loopne
in
adc
mov
lds
das
sbb
shlb
jb
pushf
adc
std
add
or
shr
cmp
push
hlt
and
test
mov
or
pop
std
loopne,pt
mov
imul
aaa
or
xchg
nop
cmp
sbb
xlat
mov
pop
mov
fsubr
sbbb
stc
adc
jg
and
xor
das
lods
loop
mov
push
hlt
outsl
xchg
jo
push
mov
cli
mov
pop
or
xlat
lahf
stos
and
aad
addr16
or
outsl
pop
inc
jmp
dec
and
mov
aaa
lret
lret
jns
repz
imul
sbb
loop
or
jnp
sbb
cmp
sahf
outsb
mov
insb
fs
mov
sub
fs
popf
adc
sbb
cmp
and
clc
xchg
arpl
fmull
add
clc
hlt
jbe
loope
loop
jo
arpl
iret
mov
and
or
iret
cmp
mov
mov
and
xchg
xlat
pop
repz
and
pop
jbe
adc
stos
out
fwait
cmpsb
or
fdivrl
dec
pop
xor
ljmp
jns
pop
lods
pop
pop
adcl
jbe
movsb
out
pusha
int
and
shrl
das
sar
fists
fsubl
test
push
leave
int3
std
popa
fmull
mov
leave
std
mov
pop
call
shl
leave
mov
enter
lret
test
add
add
adc
xchg
out
push
inc
jle
mov
and
xchg
dec
lods
fs
ficompl
clc
jo
test
push
mov
js
xor
mov
rclb
int
cld
pop
mov
inc
xor
and
pop
mov
nop
push
cmp
jmp
cmp
fistl
fstpl
adc
push
mov
mov
push
pop
and
mov
cltd
mov
hlt
mov
adc
inc
aaa
ds
fmull
mov
or
fwait
bound
xchg
dec
xchg
mov
push
and
int
cli
outsb
mov
cmc
mov
nop
jnp
or
inc
xor
out
push
pop
lock
sbbl
lds
out
inc
shlb
movsl
stos
xor
ljmp
lcall
hlt
sti
xchg
bnd
repz
and
sub
push
bound
loop
jecxz
ret
arpl
mov
add
xchg
test
dec
cli
xchg
out
xor
adc
pop
cwtl
inc
add
xchg
push
xchg
dec
xor
stos
add
sbb
sub
cvttps2pi
dec
push
push
arpl
int3
dec
shlb
std
or
into
das
pop
xor
and
imul
in
xlat
pop
gs
xor
jnp
jp
arpl
cwtl
xchg
test
jns
and
xchg
pop
mov
in
sbb
adc
pop
adc
cmpsb
pop
ljmp
pushf
jg
sbb
sahf
or
andl
pop
xor
ret
jg
cmp
inc
mov
mov
pushf
arpl
fsts
jp
adc
imul
sbb
xchg
xchg
lods
dec
push
cmp
xor
mov
mov
in
jle
outsl
inc
or
push
movsl
inc
mov
je
inc
into
mov
sbb
adc
or
cmc
mov
sbb
ret
outsl
jae
das
fs
cmp
push
add
mov
cwtl
inc
mov
jae
sbb
xor
adc
sbbl
mov
es
jmp
insb
outsb
mov
imull
sbb
pop
mov
mov
pavgw
fdivrl
jae
inc
and
ret
jns
icebp
inc
shll
mov
loopne
mov
out
test
cmpsb
ljmp
adc
pop
xor
cmp
lret
shll
push
enter
hlt
or
mov
mov
add
test
jbe
sub
fs
xor
sbb
sbb
call
les
xchg
sbb
xchg
cmp
pop
mov
mov
scas
aad
ret
push
rcrl
outsb
dec
cwtl
lods
jb
insl
aad
mov
push
std
sub
xchg
ljmp
std
or
cmpsb
mov
add
lret
notb
and
cltd
push
adc
shll
sub
sbb
aaa
xchg
inc
mov
cmp
cmp
xchg
sbb
jl
lds
xor
addr16
jge
mov
es
sbb
push
movsb
xor
mov
idiv
out
jg
sarl
les
clc
loopne
fdivp
xor
mov
dec
popf
xor
jo
icebp
xor
pop
xchg
je
mov
out
stc
push
cmp
push
inc
rcr
cli
jmp
test
mulb
push
inc
and
jmp
test
cltd
push
popa
pop
lds
int3
gs
xor
jb
lods
mov
lret
inc
and
jnp
int
addr16
fs
andl
psubw
rcrl
xchg
outsl
cmp
mov
jg
xchg
or
popa
inc
mov
or
in
repz
sahf
das
fstpt
out
arpl
push
sbb
sub
pop
sub
shlb
fnstenv
xor
dec
iret
lea
jp
ss
cmp
push
xchg
sahf
cs
in
repz
shr
pop
pusha
mov
popaw
push
mov
dec
stos
xlat
xor
out
aam
cmp
movsb
incb
jae
push
loopne
insl
mov
jae
jmp
xorl
and
jno
cmp
sub
bound
sub
dec
sti
adcb
loop
inc
lods
mov
loopne
sbb
xor
rcr
xchg
in
mov
iret
ret
pop
stc
cmpsb
pop
adc
stos
insl
lahf
loopne
mov
popa
iret
and
and
xor
test
sbb
jne
hlt
stos
jo
xchg
std
sub
mov
imul
adc
jecxz
out
cmp
mov
pop
jne
pop
pop
sub
aad
pop
icebp
and
jg
adc
pop
int3
lahf
lds
mov
jecxz
fwait
or
pushf
aas
jecxz
xchg
sub
or
clc
cmpsl
mov
lea
cmp
in
iret
jg
mov
cmp
loopne
push
mov
ret
scas
insb
nop
pop
jle
sbb
out
pop
es
or
mov
sub
mov
push
leave
mov
push
lret
fdivl
repnz
ss
test
jns
imul
pushf
sbb
sbb
sarb
js
arpl
pop
push
hlt
das
lret
jb
iret
push
aaa
or
repz
cmp
jl
add
xchg
idiv
nop
or
adc
jns
test
mov
test
in
push
cmp
cmp
inc
sub
les
adc
lods
dec
jns
dec
mov
fists
jge
addr16
cltd
pop
jl
xlat
mov
push
repnz
rorl
movsl
sbb
jmp
rcrl
mov
cmp
mov
jg
std
insb
fldenv
push
ja
pop
lret
mov
ja
xor
lds
outsl
fs
je
aad
lods
pop
inc
test
sbb
imulb
mov
rorl
sqrtps
clc
lods
sbb
jb
movsl
repz
cmp
jns
inc
loope
lahf
cli
cmp
xchg
mov
dec
out
stos
gs
mov
mov
cmpb
decb
push
scas
dec
push
mov
pop
xor
fnstsw
push
xor
pusha
mov
pushf
dec
gs
jecxz
mov
pop
dec
dec
adc
sbb
dec
push
int
pushf
fld
add
xchg
lds
inc
mov
iret
outsl
sti
insb
adc
and
push
dec
repnz
jne
xchg
insb
jle
add
outsb
and
and
in
push
jbe
add
inc
flds
icebp
xchg
enter
mov
lds
mov
mov
mov
jecxz
daa
imul
xchg
cmp
add
xchg
std
and
jecxz
inc
ret
sbb
mov
in
icebp
fs
jge
mov
cmp
cmp
add
xlat
push
fcom
cli
adc
pop
fildll
fcmovb
jp
xchg
mov
test
sahf
push
ds
xor
std
sbb
push
inc
pop
cli
in
mov
imul
data16
jg
outsb
inc
dec
add
mov
mov
pop
decb
dec
xchg
loop
jbe
mov
dec
pop
addr16
or
scas
cmp
fstpt
stc
testb
cmp
xor
cmc
sti
imul
add
jnp
mov
call
pop
or
or
lcall
leave
xor
and
and
ljmp
dec
jp
int
adc
in
cld
push
mov
imul
sahf
fs
daa
dec
jl
adc
movsl
and
call
hlt
lods
loopne
ja
mov
ss
repz
mov
add
sbb
pop
xor
inc
mov
adc
xchg
and
sti
fstpl
sbb
andl
jbe
in
or
fstpl
cmp
lret
fsubrl
xor
mov
jns
call
out
push
rorl
sub
and
pop
fwait
sub
setne
fs
pop
sar
out
cwtl
push
adc
jp
adc
in
insb
push
outsb
pusha
nop
xor
mov
xorl
ret
das
or
lods
fimuls
add
popa
bound
lcall
jo
adc
cmp
and
lock
mov
push
popf
mov
mov
rorl
mov
cmp
sub
cmp
out
push
push
out
and
jae
add
cmpl
push
cmp
out
into
jp
bound
push
cltd
inc
cmp
xchg
flds
sbb
fnstsw
adc
das
and
aad
dec
scas
ret
daa
cs
iret
insl
nop
data16
test
mov
mov
test
xchg
aad
inc
sbb
push
lds
es
add
les
dec
xor
inc
movsb
inc
dec
add
arpl
sub
lar
and
add
lock
scas
aam
sbb
sbb
outsb
lcall
fwait
pop
push
in
inc
and
push
sub
rorb
aas
int3
stos
les
in
adc
and
test
adc
sbb
xchg
and
mov
pop
rcrb
rcrl
jno
rolb
loop
int
pop
into
lds
inc
mov
jmp
add
mov
mov
fwait
pop
jle
test
pop
inc
faddl
sub
push
dec
jecxz
leave
xor
fsubs
loop
push
or
jns
jecxz
pop
enter
sub
mov
inc
mov
xor
fmul
fucomip
sub
js
jmp
push
push
in
cmpb
dec
insl
sub
sbb
jmp
fwait
and
dec
mov
hlt
xchg
pop
xor
insl
jecxz
loop
leave
ret
ss
std
fisttpll
jg
pop
xchg
jae
pop
lods
fisubl
mov
sarl
push
pop
and
enter
movsb
xor
call
mov
mov
cmp
mov
and
sbb
xor
jo
inc
dec
add
lock
lcall
adc
push
inc
jb
push
cmc
daa
and
sti
popl
lds
ret
icebp
cmp
aaa
adc
fidivrs
aad
lock
stos
pop
add
fmull
adc
xchg
cmc
outsb
fdivrs
arpl
xor
jmp
push
pop
cmp
rol
mov
adc
aad
push
adc
xchg
iret
jbe
lahf
xchg
dec
mov
xchg
push
mov
imul
pop
ret
xor
sbb
imul
dec
xchg
inc
fistps
cmpsl
push
push
pop
sti
cltd
bts
xor
or
testl
or
inc
add
inc
scas
movsl
jecxz
xchg
sar
in
in
jmp
cmc
clc
scas
push
cmp
and
ss
imul
into
jnp
jge
adc
outsl
add
pop
adc
mov
sbb
jo
cmp
and
out
inc
xor
or
mov
xchg
pop
xchg
test
test
hlt
push
clc
add
dec
xchg
mov
push
jle
pusha
movsl
movsb
lods
rorb
aam
sbb
jp
or
ss
lret
lea
lahf
pop
mov
xchg
mov
adc
data16
jne
pop
out
cmpsb
sbb
inc
mov
lret
mov
ja
aam
cmp
mov
dec
xchg
mov
inc
in
std
negb
repz
ds
aas
loope
dec
add
ficompl
cmp
mov
xor
movsl
in
add
mov
pop
mov
loop
mov
sub
push
pop
pushf
test
jno
pop
outsl
popa
lods
lret
cli
imul
adc
popf
sub
and
cltd
xchg
sbb
jle
xor
test
outsb
mov
cltd
or
cmp
sub
cmp
ljmp
fsubrp
dec
movsl
repnz
adc
mov
mov
mov
sbb
aam
adc
imul
emms
and
pop
rcrl
mov
loop
add
dec
aad
cmp
or
cltd
aad
imul
pop
xor
mov
popa
test
jne
mov
popa
loop
cwtl
rep
mov
fstpl
pop
push
daa
lods
and
inc
fwait
dec
into
push
loop
jmp
ficoml
push
pop
xor
xor
mov
jmp
sbb
xchg
sub
mov
cld
je
pop
mull
xchg
popf
cs
sub
repz
sbb
mov
push
cmp
testl
adc
pop
jbe
jo
xlat
mov
mov
cltd
cmpsl
or
jmp
sbb
push
add
xor
repz
pushf
cwtl
add
in
xchg
mov
aam
push
aam
xchg
cwtl
insb
and
test
addr16
mov
or
icebp
pop
mov
insb
inc
repnz
lea
sub
outsl
mov
sub
xlat
mov
jns
insl
push
push
mov
stos
cmp
push
jl
jp
push
js
sbb
jne
es
out
push
aad
scas
repz
cmpsl
jg
int
cmp
or
adc
dec
xor
jne
loop
iret
scas
pop
fisttpl
jp
jmp
cmp
jo
mov
rcl
mov
xchg
mov
pushf
js
pop
in
inc
les
xchg
and
adc
mov
mov
pushf
cmp
call
lret
jne
mov
fld
adc
mov
adc
xor
aas
jmp
paddd
rcr
aaa
pop
push
mov
inc
imul
or
dec
or
pop
jp
data16
or
jb
xchg
push
fwait
out
cs
ss
jns
push
sub
jns
jnp
sysenter
push
adc
lods
mov
cmp
mov
xor
lahf
data16
cmpsb
lock
int3
pop
inc
icebp
cmp
xor
int
ds
fistpll
mov
arpl
xchg
mov
stc
sub
pop
push
daa
fwait
in
cs
in
repnz
jmp
sub
mov
nop
jl
cmp
popf
xchg
pop
insb
mov
loope
xor
push
push
jl
rcll
sub
insb
mov
inc
shr
stc
aam
and
fildl
jle
out
xchg
dec
lds
inc
adc
enter
aad
jp
cmp
insl
xor
xchg
adc
cli
subb
fdivrp
je
cmp
stc
mov
sub
lea
push
movsb
xchg
sub
into
or
sbb
loope
mov
stc
rcl
pop
test
jmp
dec
adc
jo
pusha
mov
mov
or
push
fwait
in
lods
inc
add
bound
dec
and
test
inc
out
add
ficomps
lods
jb
fsubrs
test
jecxz
or
push
sub
adc
cmp
lds
clc
loopne
repz
cmp
sub
sar
nop
add
test
jl
mov
xor
cmp
aas
orl
add
xchg
int
jge
xlat
lds
fwait
dec
test
je
or
jns
lods
inc
mov
in
testb
inc
daa
dec
push
sbb
lods
xchg
outsb
movsb
cmp
out
fmul
lcall
push
test
jnp
popl
stc
adc
insb
shrl
bound
ret
and
add
jbe
or
out
mov
outsb
cmp
xlat
fldcw
ss
pop
lea
xor
adc
lea
push
pop
pop
sub
in
xchg
sbb
popf
in
pop
jns
jl
aam
cwtl
insb
xchg
test
gs
aas
mov
stos
mov
lret
mov
test
inc
xlat
add
mov
sub
add
loope
xor
xchg
push
or
inc
aam
fwait
pop
push
and
adc
cmp
cmp
aad
xchg
daa
cmpsl
ljmp
jbe
ljmp
lret
jno
xchg
je
jl
inc
in
pop
movsl
mov
adc
sub
mov
inc
mov
clc
jle
daa
int3
and
test
xor
mov
or
sbb
clc
ljmp
add
mov
sub
pop
inc
xchg
and
mov
add
std
jecxz
pushf
repz
lret
dec
jl
pop
jmp
pushf
mov
stos
dec
sbb
inc
pop
stos
and
arpl
repz
fiadds
sub
add
test
out
lds
les
mov
cmp
push
xchg
push
ja
add
icebp
mov
jno
pop
in
jo
mov
pop
adc
xlat
add
fimull
jg
test
add
cmpsl
fs
outsb
scas
cmp
ss
fxch
cmp
iret
shll
repnz
mov
pushf
fwait
std
sahf
cmp
sub
or
js
mov
int
fdivr
ljmp
fsts
push
pop
inc
mov
sbb
lret
jne
fcoml
lods
push
mov
adc
xorb
hlt
mov
rcl
jae
outsl
mov
inc
mov
inc
mov
xor
fdivrl
cmc
fwait
shlb
gs
popa
stos
scas
mov
pop
outsb
lcall
xchg
jmp
es
ffreep
and
in
mov
push
arpl
sahf
out
jne
sub
dec
out
ja
repnz
in
arpl
fidivrs
cmpsl
and
pmaxub
push
test
push
imul
clc
mov
sub
push
insl
mov
jle
leave
xchg
ljmp
clc
push
scas
mov
inc
push
pop
mov
jno
mov
dec
inc
ds
pop
jns
pop
lcall
imul
cmp
jl
xchg
leave
sbb
rcr
fdivr
sar
mov
push
xchg
and
cmp
sub
adc
rorb
xchg
cmp
stc
insl
inc
fdivrp
fwait
xor
pop
pop
mov
gs
jge
xchg
in
xor
hlt
hlt
outsl
inc
push
sub
lock
add
enter
cmp
repz
jge
ret
out
pinsrw
pusha
shll
and
mov
mov
lret
insl
sbb
std
aad
adc
cs
pop
dec
lods
pop
cmp
fnstsw
xchg
lahf
cmc
sub
pushf
xor
cmpsl
daa
rsqrtps
push
xchg
dec
mov
int
fisttps
cld
clc
xchg
dec
inc
sbb
dec
dec
and
jle
pop
and
add
mov
stos
jo
daa
push
jle
repz
loop
xchg
shrb
jge
fisttps
mov
mov
test
adc
ja
sbb
sub
stos
jae
dec
mov
mov
sbb
mov
loop
fwait
sbb
sub
fcomi
xor
out
shl
and
stos
fcompl
and
cltd
ja
and
pop
dec
pop
xor
lods
repnz
xlat
cmpsb
je
mov
mov
cmp
cwtl
in
cmp
xchg
and
ja
mov
cmp
sahf
add
add
and
mov
ret
insb
jae
out
sarb
xchg
push
sbb
aas
push
sbb
fst
sbb
lret
sbb
push
in
xchg
push
pop
cmc
je
fsubrs
arpl
aas
mov
jle
hlt
pop
xchg
mov
xchg
xor
mov
pop
xor
inc
aad
pop
cmpsl
pop
xchg
xchg
fwait
jne
insb
cmp
mov
imul
inc
fstpl
lret
adc
insb
data16
les
out
jecxz
jbe
mov
imul
call
lahf
sub
mov
insb
in
and
adc
rorl
repz
jp
add
sbb
adcl
into
inc
int
fcom
mov
sbb
cmp
cmp
cmp
mov
popf
data16
pop
mov
push
cltd
jecxz
enter
jnp
push
cmp
dec
sbbb
out
dec
sub
jmp
sub
movb
fisttps
push
mov
mov
ljmp
scas
fdiv
js
out
mov
mov
mov
es
adc
repz
test
pusha
xorl
xor
xor
in
push
jns
int3
rolb
sbb
jo
sahf
dec
or
hlt
lret
jne
das
push
in
push
iret
popf
insl
stc
and
ficompl
fcmovb
xchg
popa
push
lock
fs
ja
sbb
jmp
mov
pop
fiadds
insl
xlat
mov
sub
sub
stc
mov
frstor
rorb
lea
iret
xor
je
pop
cmpsl
shll
fistpl
cmp
add
or
jne
sub
push
jmp
fwait
push
jne
push
mov
lea
outsb
xchg
in
call
int
push
jmp
xchg
add
adc
cmpsb
cmpsb
and
loopne
inc
out
sbb
mov
iret
cld
mov
mov
xchg
or
aas
dec
cs
repnz
pop
bound
idivb
push
jb
mov
fcmovu
mov
mov
or
inc
and
or
mov
xlat
inc
add
adc
mov
xor
das
add
enter
push
mov
push
xrelease
xchg
dec
aas
sub
movsl
lea
daa
sbb
pop
dec
fists
les
sbb
push
std
add
add
push
subb
clc
rcl
sbb
dec
aaa
lret
ja
ficoml
testl
mov
lds
and
inc
out
mov
ljmp
xchg
cmp
fstpl
daa
lods
or
shr
inc
pusha
dec
ret
cmpsl
rcrb
into
mov
loop
outsl
aas
clc
push
mov
mov
aad
cmpsb
and
cmp
xchg
cld
popa
into
push
cmp
and
lds
adc
ljmp
cmpsb
xchg
ljmp
sub
jb
mov
add
xor
pop
mov
jl
mull
imul
jecxz
cmp
rol
es
pop
ret
xchg
insb
inc
iret
je
repnz
and
mov
xchg
ljmp
aaa
ja
add
inc
int
jle
adc
sbb
mov
out
cwtl
xor
sbb
pop
push
adc
or
pop
adc
adc
or
lcall
dec
mov
mov
dec
in
test
or
xchg
pop
mov
cmp
or
mov
xchg
mov
mov
lahf
sub
fstpl
clc
pop
outsl
lds
call
scas
mov
fistpl
mov
mov
or
jo
mov
pop
sbb
fisubrl
and
repz
push
pop
inc
je
jle
mov
sub
fcmovnbe
in
bnd
add
fbld
push
enter
fs
pop
or
pusha
sbb
inc
lret
xor
das
sti
xchg
movsb
aad
sub
mov
adc
sub
popf
and
ja
mov
sbb
cltd
repz
push
rorl
pop
movsl
cld
mov
in
sahf
sub
inc
mov
push
mov
mov
aad
sbb
mov
sub
ljmp
push
mov
shlb
add
pop
push
rolb
sbb
mov
add
sahf
rolb
fnsave
lods
pop
xchg
ss
xor
push
dec
add
dec
pop
or
ret
dec
pop
aas
or
cmpl
orl
nop
mov
push
movsl
mov
xorl
div
fbld
sub
scas
out
or
lods
lds
mov
ret
dec
cmp
xchg
loopne
mov
mov
mov
and
jae
mov
iret
push
aam
je
xor
fsubs
sbb
inc
push
imul
adc
sbb
mov
mov
sbb
fwait
sbb
ds
and
insb
cs
pop
xor
lea
fs
in
pop
adc
add
cs
xchg
push
or
loopne
dec
xchg
inc
inc
jge
add
inc
push
mov
shrb
cmpsb
inc
iret
and
fdivrl
popa
adc
loopne
cmp
cmp
imulb
sbb
insb
mov
stc
imul
lcall
xchg
inc
push
pop
jae
daa
jmp
dec
addr16
mov
leave
xchg
arpl
shl
leave
cmp
test
sbb
enter
cmp
adc
inc
jecxz
shr
sub
std
push
bound
imul
push
pop
jl
mov
std
in
inc
bound
jb
add
ljmp
mov
and
xchg
jmp
adc
sarb
mov
clc
push
fldcw
mov
cmp
add
sub
inc
ljmp
lret
loope
shrl
call
pop
out
in
push
xchg
mov
cs
pop
clc
sbb
movsb
loop
daa
jle
jnp
test
data16
mov
xchg
ret
and
mov
dec
adc
sbb
std
into
call
pop
dec
sub
mov
arpl
aaa
cmp
mov
sbb
int
inc
ret
and
jns
js
push
xlat
cmpl
sar
xchg
flds
movsl
lahf
in
cmpsl
cld
call
stos
call
shrl
and
xor
pop
inc
jae
jb
push
xor
mov
shlb
adc
and
lods
incb
cmpsb
icebp
aas
out
dec
xchg
test
shl
xchg
dec
add
lock
or
lds
js
push
add
pop
jg
jmp
movsb
data16
gs
enter
mov
jl
mov
or
ficompl
mov
xor
sub
in
test
inc
push
scas
xchg
xor
divb
fwait
aas
jo
cli
xor
lcall
aad
adc
mov
or
mov
xchg
lock
test
push
adc
lret
nop
sbb
mov
repz
cmpsb
and
and
in
icebp
cmp
rolb
loope
nop
xchg
cs
popf
inc
or
stos
sbb
mov
popa
xor
inc
shl
lret
push
jle
adc
xlat
xor
jle
or
and
inc
lods
lods
xchg
pop
add
int3
lcall
adc
and
stc
inc
call
mov
adc
ret
sub
aaa
popf
out
push
imul
inc
fistpll
inc
xchg
cltd
adc
shlb
mov
pop
push
cmp
aam
dec
xor
xchg
xchg
xchg
sbb
dec
xchg
push
mov
cld
ds
jo
icebp
xchg
cli
sub
pop
inc
das
popf
das
pop
ficoms
jo
in
adc
mov
fisttps
pop
mov
push
fwait
adc
lahf
scas
and
je
icebp
fnsave
cld
jns
sub
mov
push
inc
xor
into
loop
cmpsb
shrb
outsb
push
jg
std
cld
pop
in
call
sub
in
xor
mov
fnstsw
sub
jle
je
mov
push
inc
inc
cmp
loopne
testl
adc
loopne
push
out
inc
mov
dec
addr16
pushf
pop
and
enter
cmp
push
inc
adc
cmp
dec
in
ljmp
ljmp
dec
pop
add
add
mov
ficoms
lds
aas
push
scas
or
adc
pop
out
mov
jne
int3
lcall
mov
cmp
fwait
jno
dec
mov
mov
sbbb
lcall
fbstp
test
jo
add
aas
sub
xor
fxch
or
movsb
and
stos
xor
ds
scas
mov
mov
psubq
shl
or
imulb
mov
mov
sbb
and
je
aaa
cmp
shll
imulb
jbe
popf
jae
push
les
inc
popf
fistpll
ss
enter
in
js
sub
pushf
sbb
clc
jecxz
jbe
sbb
push
insl
cmp
xchg
add
mov
pop
aaa
imul
pop
sbb
or
xchg
push
shll
mov
xor
cld
ret
inc
dec
lcall
push
cmp
shlb
movsb
sbb
mov
xchg
xor
mov
jp
cli
jbe
sbb
mov
popf
les
into
mov
notb
arpl
pop
add
cwtl
das
push
jecxz
xor
das
add
mov
pop
inc
sbb
add
lods
dec
addl
adc
sbb
sub
dec
cmp
cmpl
jne
or
stc
cli
jne
and
insb
das
mov
test
sub
dec
das
js
stos
sub
lea
inc
pop
outsb
stc
xor
dec
outsl
inc
dec
in
test
popa
pop
cltd
andl
lcall
dec
xchg
dec
out
gs
dec
mov
xchg
ja
push
add
xor
sbb
testb
lock
test
je
std
lret
xchg
cmp
sbb
push
mov
fiadds
rcll
clc
jbe
push
xchg
out
jne
test
mov
outsl
mov
sub
orb
mov
scas
cmp
xor
je
idivb
out
mov
cmp
add
out
aad
jge
insl
or
leave
aam
or
out
mov
jnp
pop
push
lds
scas
out
lods
or
fcoml
or
fisubs
cs
fiaddl
and
test
jmp
jae
mov
add
cltd
movl
ljmp
add
cmp
dec
mov
xchg
inc
jl
movsl
dec
aam
pop
mov
pop
xor
addr16
mov
fadds
push
push
and
sbb
scas
aaa
iret
xor
mov
movsb
jle
add
mov
pop
pop
out
add
les
orb
fs
mov
shr
xchg
jl
adc
ja
bnd
pop
jno
mov
jmp
data16
daa
xor
xchg
out
lods
lret
je
push
iret
sbb
sahf
adc
dec
mov
xlat
out
arpl
aam
mov
in
or
addr16
sbb
movsl
mov
sbb
es
mov
jne
mov
sahf
push
jnp
sti
sti
push
testl
cwtl
mov
imul
pop
mov
or
push
adc
xor
push
cmpsb
aaa
sub
call
sub
pop
js
add
xchg
mov
enter
pusha
mov
div
clc
clc
sbb
cmpsb
faddl
pop
lcall
lock
jp
lahf
xor
xor
dec
push
add
gs
mov
insb
cmp
xchg
fisttps
popf
mov
fstpl
pusha
insb
push
mov
cmp
mov
jle
fildll
mov
pop
mov
xor
pop
adc
mulb
lcall
fs
mov
flds
ret
test
fwait
iret
out
ret
cli
lea
push
loopne
sahf
jo
pop
xchg
mov
push
sub
into
jle
cmp
mov
lret
inc
call
hlt
sahf
cmp
add
cmpsl
mov
mov
push
int3
dec
lret
jmp
xchg
mov
xor
cmc
ret
xor
int3
add
gs
or
int
je
sbb
inc
sub
mov
push
clc
dec
mov
stc
xor
lcall
pop
jmp
pusha
stos
aas
dec
addr16
push
clc
pushf
inc
adc
or
adc
lods
neg
sahf
jge
jmp
add
ds
fstps
mov
push
pop
bound
cmp
loop
ret
dec
js
pop
jbe
xor
jb
xchg
jb
fnstenv
pop
mov
cmp
add
fidivrl
lock
mov
or
xchg
add
mov
adc
dec
js
movups
jo
xor
xchg
shlb
add
xchg
repnz
sahf
mov
xchg
push
sbb
test
in
jbe
les
repnz
ret
rcl
or
mov
es
inc
fstpt
aam
xor
ljmp
pop
rorb
jbe
cmp
ret
sub
and
loopne
fidivs
inc
cmc
push
arpl
insl
movsl
mov
adc
and
popa
test
sbb
cmp
jge
mov
insb
sub
lods
add
xchg
mov
icebp
lcall
sub
push
notl
test
sbbl
repnz
cmp
lods
pushf
and
mov
inc
pop
mov
xor
and
leave
mov
test
dec
mov
jne
mov
lock
ret
inc
xor
in
jmp
cmp
xor
adc
repnz
call
bnd
pop
lret
out
mov
inc
test
rolb
cmpsb
dec
add
ret
cwtl
add
mov
popf
xchg
imul
push
jno
int
xchg
and
imul
jg
out
mov
ret
fstps
mov
and
sahf
inc
push
aaa
xchg
xchg
push
jecxz
test
push
inc
mov
dec
outsl
hlt
mov
jge
push
in
shr
mov
jle
in
rorb
mov
fidivrs
iret
shl
ror
lods
dec
das
inc
dec
mov
mov
lcall
cmp
shlb
aad
cmpsb
lods
ret
popa
sbb
mov
mov
push
xchg
push
sbb
pop
jg
jge
out
fsubs
ret
and
xchg
sbb
sub
movsb
je
inc
inc
jno
lods
mov
add
xor
sarb
fadds
inc
jmp
call
fistl
sahf
adc
cmp
mov
imul
ss
orb
stos
out
ret
xchg
mov
mov
insl
gs
enter
lahf
adc
push
mov
mov
adc
popf
insl
xor
xchg
cs
rcrl
jp
and
test
cmc
mov
fnstsw
inc
or
dec
imul
jl
es
jne
cmp
das
rcr
leave
sbb
dec
mov
push
pop
sarb
mov
dec
mov
mov
aam
mov
bound
sarl
pop
cmpsl
pop
and
mov
rorl
mov
ret
sub
fnstcw
sub
jae
jecxz
fsubrl
test
push
jp
cmpsl
movsl
cmc
mov
call
pop
jmp
or
addl
dec
cld
xchg
movsb
pop
decl
outsb
mov
add
xchg
add
orb
adc
inc
mov
add
sub
fists
mov
cmp
sbb
lock
jae
mov
test
mov
ja
xor
mov
lret
imul
xchg
outsl
jne
in
movsb
fisttpl
mov
jo
hlt
inc
loop
adc
dec
orb
mov
add
push
out
sbb
or
pop
rolb
and
lea
cmp
inc
in
ud2
sbb
mov
xchg
lock
clc
mov
gs
add
or
pushf
inc
out
iret
aad
not
ss
adc
xor
notl
xchg
inc
int
mov
les
bound
in
mov
lods
stos
std
push
xchg
cld
jbe
mov
scas
add
iret
sub
add
inc
lea
or
inc
mov
test
adc
roll
cmp
jae
sbb
and
add
loopne
xchg
push
lea
fstpl
bound
mov
sub
aad
push
sbb
jne
arpl
in
outsb
mov
add
lods
ficoms
jno
xor
pop
aas
filds
mov
pop
xchg
lret
mov
add
push
xor
mov
push
ret
xchg
subb
jae
mov
and
js
or
push
test
out
and
psubsb
mov
sub
mov
lds
loopne
decb
pop
push
add
jnp
jns
into
cmc
xchg
lret
shl
test
add
mov
mov
je
lock
sbb
popf
stc
je
mov
push
iret
subb
jp
out
loope
mov
jbe
addr16
pop
fwait
push
clc
jmp
jge
insl
fildll
pop
popa
rorl
pop
cmc
test
pop
sub
push
mov
push
mov
push
stos
aam
cmpsl
or
shr
or
or
das
gs
sub
inc
hlt
sub
push
std
in
hlt
mov
jno
pop
xchg
out
adc
mov
mov
cmpsb
sti
outsl
mov
cmp
push
mov
xor
lock
or
lcall
xorb
mov
add
scas
bound
adc
cld
add
lahf
and
std
mov
push
imul
ds
add
adc
xor
dec
dec
bound
add
jmp
sti
sti
sub
ror
or
je
dec
lds
xchg
loope
add
add
loope
in
iret
mov
insl
sub
mov
xor
negl
fildll
sbb
mov
into
cld
adc
orb
inc
mov
inc
mov
mov
aaa
mov
xchg
pushf
lea
mov
dec
scas
dec
or
inc
dec
ds
mov
sub
negl
mov
push
out
setb
or
cmp
xor
test
add
and
add
std
clc
xchg
in
clc
mov
mov
inc
cmp
imul
sbb
scas
mov
push
push
sub
push
push
sbb
mov
stc
stos
shll
sub
hlt
test
rcrl
sbb
jb
lret
jl
xor
mov
cld
sbb
ljmp
sarl
ljmp
push
cmpsb
push
cwtl
mov
push
ret
sbb
cmp
lea
ret
sbb
les
jbe
repnz
adc
sub
cltd
adc
cmp
ftst
inc
sub
dec
and
sbbl
jge
or
mov
cmpsb
divb
roll
push
aaa
lods
test
adc
jo
fbstp
and
push
xlat
icebp
and
pop
testb
daa
lret
dec
xlat
jmp
loop
inc
roll
or
sarl
popa
mov
mov
jbe
shr
mov
int
pop
test
pop
and
sarl
cmp
pop
in
mov
mov
leave
pop
push
jmp
mov
add
divb
out
sub
add
add
or
xchg
mov
arpl
mov
stos
shl
out
nop
fidivrl
jns
pusha
xchg
sub
insb
fnstenv
scas
mov
fisttpl
test
sbb
or
mov
rorl
leave
nop
mov
sbb
jne
cli
notl
adc
fld
daa
stos
and
sbb
cmp
add
ljmp
and
and
push
jne
xlat
inc
sub
jnp
mov
inc
inc
mov
sub
out
add
mov
jae
xchg
int3
mov
fnsave
mov
xchg
sbb
les
in
loope
sub
fadds
out
inc
push
insb
enter
cld
mov
or
incb
sbb
js
sbb
les
icebp
sub
xorl
imul
imul
xchg
push
adc
inc
xchg
pop
mov
stc
xchg
fcmovbe
sub
testl
pop
mov
fists
sbb
xchg
push
ret
xchg
das
add
adc
mov
sbb
aas
xor
movsb
cs
cmp
xor
cmpl
add
mov
xchg
mov
movsl
fcoms
cwtl
std
in
mull
jne
int
inc
gs
sub
icebp
test
push
bound
xor
shrl
cltd
stos
and
mov
out
or
sbb
fldenv
pop
lret
test
das
addl
jo
push
cs
loop
jne
jmp
fnstsw
sub
dec
out
in
sub
mov
sarb
inc
int
or
xchg
adcl
fiadds
testb
iret
movsl
adc
dec
ja
scas
insl
cltd
pushl
cmp
lods
pmuludq
cmp
test
sbb
negb
push
hlt
xchg
mov
imul
push
mov
test
and
leave
aam
and
or
mov
add
sbb
cmpsb
mov
and
sbb
imul
loop
cmpsl
jno
in
pop
stos
addb
into
incb
fldcw
sbb
or
mov
pop
cmpb
faddp
fisttps
sti
add
sub
mov
sub
xchg
sub
cmovne
or
js
xchg
xchg
enter
cli
imul
std
mov
xchg
cmpb
jbe
std
fidivrl
fwait
ficoms
cmp
cmc
mov
insl
int
cs
and
movl
fs
fiaddl
pushf
push
lcall
cmpsb
cmp
xchg
cmp
aas
mov
sub
dec
cwtl
sub
mov
sub
fmul
loop
push
lods
pop
lret
loopne
jbe
sub
stc
out
mov
jae
cmp
dec
pop
rcrl
cmpsl
mov
cmp
test
mov
jb
or
sub
jb
xchg
pop
push
test
outsl
aas
fidivrs
imul
ds
cmpsb
call
lea
inc
lahf
mov
push
jno
shll
mov
mov
add
inc
fnstsw
decb
jg
mov
loop
cmp
mov
mov
xor
dec
ljmp
out
or
inc
adc
addr16
jecxz
fisubl
sbb
ljmp
stc
and
dec
daa
in
sub
aad
mov
cli
fsubrs
outsl
sti
pop
xchg
lahf
jbe
lods
xorb
popa
popa
enter
dec
dec
push
data16
and
aad
in
push
push
pop
fbld
cmp
mov
ljmp
movsl
and
dec
adc
andl
aam
jmp
or
pusha
daa
add
sbbl
dec
ds
scas
push
lret
cmp
lret
mov
inc
mov
xchg
pop
push
loopne
test
xor
movl
inc
loopne
jmp
inc
mov
pop
icebp
stos
xor
sbb
daa
xchg
gs
and
xlat
mov
xlat
mov
icebp
add
je
adc
cltd
push
or
nop
jmp
xlat
push
lret
jno
daa
cmpb
popf
or
in
outsl
xor
loopne
imul
cmp
aam
xchg
mov
xor
sub
in
es
or
mov
mov
clc
cmp
sub
cs
mov
les
neg
add
in
subl
push
nop
test
popa
loope
rorl
sbb
push
inc
pop
das
dec
aam
mov
pop
icebp
lret
ja
and
xor
cwtl
push
jne
cli
xor
iret
jne
inc
sbb
faddl
leave
mov
mov
cmp
f2xm1
xchg
pop
iret
pop
bound
mov
enter
mov
outsl
inc
lds
pop
mov
mov
movsb
jp
and
cmp
mov
fisttpl
out
dec
add
icebp
sbb
hlt
pop
mov
cmp
inc
out
xchg
adc
popf
xchg
ret
ja
pop
jg
inc
sbb
fwait
xchg
sti
add
push
mov
xor
and
cwtl
jbe
push
int
fisttpl
dec
xlat
jp
imul
in
mov
sbbb
mov
cmpsl
xchg
sub
xor
or
leave
mov
sbb
and
jmp
xchg
jp
push
jg
inc
sub
sbb
roll
icebp
mov
ss
cli
mov
push
mov
ret
loop
leave
pop
loop
xchg
aas
mov
pop
dec
sub
inc
sbb
pop
scas
xorl
mov
adc
lahf
ja
dec
icebp
mov
sbb
adc
popf
cmc
fwait
insl
cli
jns
iret
ds
sbb
mov
add
xlat
cmp
mov
ret
mov
mov
imul
push
push
and
aaa
shl
jle
push
xchg
loopne
shll
cmp
repz
push
test
sub
rol
xchg
rcll
cmp
xchg
loope
lea
add
push
aad
lods
push
popf
mov
mov
pusha
cmp
rorl
inc
mov
pop
and
stc
and
add
lret
mov
pushf
ret
data16
pop
popl
into
jns
pop
outsl
add
or
jb
jg
or
aad
shll
testl
pop
notl
movsl
mov
ss
jns
cwtl
mov
outsl
jno
out
jecxz
imul
mov
ljmp
fbstp
sbb
sub
jae
test
lock
ret
mov
pop
nop
fistl
sar
daa
ficomps
and
pop
dec
or
insl
or
cmpsl
test
mov
mulb
fwait
insb
adc
jecxz
jmp
call
pop
jae
shll
push
jne
mov
xor
mov
push
cmp
jnp
xlat
xchg
testl
xchg
orb
subb
cmc
ljmp
ja
mov
bound
ss
mov
push
mov
xchg
mov
xor
in
fsubrs
and
jp
dec
push
out
adcb
aam
jo
test
stos
jmp
xchg
mov
shl
inc
mov
inc
push
mov
sub
mov
pushl
loop
xchg
das
inc
in
mov
outsb
pop
push
sub
dec
dec
inc
mov
xchg
mov
push
jb
mull
fldenv
and
mov
icebp
xor
or
scas
lahf
bound
sub
fsubrp
jmp
in
mov
pop
push
jbe
cmp
cltd
or
mov
je
lds
outsb
enter
out
cltd
jbe
fldt
bound
test
xchg
int
inc
adc
or
dec
mov
or
insl
pop
shrb
cwtl
and
jg
inc
jne
jae
xchg
jno
scas
dec
xor
inc
jg
xor
js
ficompl
mov
ljmp
xor
cs
fidivrs
pop
popl
pushf
push
sahf
push
xchg
mov
pop
std
dec
enter
mov
cmc
mov
adc
inc
in
adcb
pop
jmp
inc
sbb
iret
sub
dec
aad
daa
sbb
nop
sti
xlat
out
xchg
and
push
aad
xchg
imul
pushf
aam
pop
dec
in
sbb
pushf
loope
pop
stc
jge
pop
sti
or
xchg
or
lds
iret
mov
lcall
notl
movsb
insb
pop
into
sub
stos
jnp
loope
imul
push
pop
xchg
and
mov
jecxz
scas
outsb
jge,pn
in
in
aas
shrb
mov
inc
pop
mov
je
dec
aaa
xchg
lock
inc
mov
xchg
inc
sub
pop
bound
bound
daa
fildl
cltd
lret
stc
push
push
cmp
pop
mov
pop
mov
inc
ret
cmc
jo
rol
mov
call
testb
fdivs
insl
cltd
hlt
aaa
leave
pop
and
xchg
out
jecxz
push
cmp
pop
mov
push
jp
movsb
cmp
aam
cmp
ss
sbbb
lods
and
mov
jg
inc
shrb
ds
cmp
bound
iret
mov
push
sarl
sarb
cld
aaa
pop
mov
scas
decb
and
js
fmull
fisttps
jle
inc
aam
push
xchg
and
and
jae
or
imul
arpl
das
pop
and
int3
fbld
rorb
ret
ds
lahf
pop
shll
test
xlat
fwait
or
xchg
push
cmp
pop
cmpsb
dec
cld
lret
cmp
adc
sbb
or
sub
mov
mov
ret
xchg
bound
and
xchg
dec
loop
pop
sub
xchg
sahf
lcall
in
lret
xlat
es
pop
sahf
xchg
mov
mov
or
jne
scas
aas
hlt
scas
leave
jp
daa
fdivs
shl
je
int
in
pop
adc
xor
stc
je
jno
data16
imul
or
inc
icebp
test
out
stc
mulb
mov
jbe
jge
mov
inc
mov
push
mov
inc
icebp
scas
shll
push
insl
inc
addr16
mov
pop
push
pop
jmp
fnop
pop
mov
lods
fstpt
cmp
orb
adc
jbe
lods
add
jne
adc
fcoml
adc
push
addr16
jo
iret
popa
jbe
repnz
cmpsl
push
inc
imul
hlt
imul
xor
sub
push
push
push
jne
mov
sbb
xchg
in
outsl
mov
jmp
ret
sahf
mov
lods
push
out
xor
dec
or
std
xchg
cltd
push
shll
mov
test
mov
js
lret
cmpsb
rorl
mov
rorl
mov
adc
cmpl
xor
addr16
fcmovbe
jge
mov
ljmp
mov
dec
ja
lret
cmp
mov
or
xor
scas
mov
mov
and
adc
push
push
fnstsw
jmp
ds
imul
ffreep
lds
push
mov
movsb
ret
cmpsb
sbb
add
or
push
negl
in
fisttpl
adc
arpl
loop
lret
mov
sbb
pop
inc
sub
andb
add
sahf
stos
mov
aam
loop
cmpsl
test
int
pushf
addr16
js
loop
pop
leave
jb
cmp
enter
sub
int
movsl
sbb
push
imul
sub
pushl
xlat
xlat
mov
insl
jnp
movsl
syscall
leave
leave
sbbl
mov
mov
sahf
cmpb
jae
dec
adc
push
js
shll
rolb
stos
in
xchg
xchg
dec
mov
pop
jbe
mov
movsl
fidivs
pop
push
xlat
scas
in
fcmovnu
jo
mov
popf
push
repnz
pop
clc
adc
into
fcoml
lret
mov
inc
insl
pop
int3
aam
stos
js
ds
pushf
pop
insb
sbbb
in
cmpsl
jge
test
lock
enter
sti
dec
mov
fs
mov
adc
dec
adcl
push
mov
imul
sub
add
daa
lahf
xchg
mov
hlt
jg
push
mov
jl
pop
jp
out
add
fbstp
xor
jge
mov
sar
pop
pusha
cwtl
sub
test
fs
dec
jb
pop
mov
imul
cmp
jns
enter
push
jns
scas
aad
es
loope
xchg
popa
xlat
stos
ret
lcall
mov
ja
mov
jle
popf
add
or
int3
fsubl
lahf
jecxz
jg
dec
mov
and
cwtl
fidivrs
cs
push
sub
arpl
testb
jmp
jne
ljmp
popa
pop
pushl
icebp
sbb
pop
in
push
push
pushf
mov
jl
inc
call
out
outsl
push
push
insl
je,pn
sub
jnp
xchg
or
scas
sbb
cld
push
xchg
pop
mov
push
cmpsl
dec
and
push
lcall
mov
mov
fiadds
add
aas
pop
test
ljmp
fstpt
push
es
movsl
fstpl
inc
mov
stos
dec
sbb
mov
into
mov
mov
sbb
jle
pop
sbb
lock
push
cwtl
int3
sbb
clc
push
lret
pusha
push
pop
das
cmp
add
adc
call
pop
cli
faddl
adc
cmp
pop
test
mov
in
fldenv
dec
mov
shlb
push
cltd
sub
cmp
mov
stos
pop
mov
xor
push
pop
or
in
mov
outsb
sqrtps
or
xor
mov
or
lret
push
adc
inc
roll
and
push
outsl
push
adc
scas
out
mov
aas
pop
push
ja
mov
dec
jp
and
lods
popa
scas
outsb
rcrb
ljmp
or
iret
and
leave
test
lods
mov
mull
xchg
sbb
lods
or
call
rclb
mulps
mov
imul
mov
arpl
in
outsl
icebp
sbb
or
cwtl
iret
push
subb
fucomip
adc
inc
add
add
xchg
popa
mov
sbb
mov
fadd
adc
sbb
xchg
mov
dec
and
lcall
addps
fsubrs
fnstenv
dec
shlb
xor
repnz
rcl
jns
dec
addr16
pop
cmp
cmp
push
push
lods
adc
in
leave
adc
popf
popf
and
call
movsl
cltd
cmpsb
adc
sti
mov
in
pushf
cmp
cmp
ljmp
push
xchg
add
lcall
scas
aaa
mov
in
out
sub
out
xorl
and
and
and
inc
addb
pop
push
mov
cmpsl
jb
jp
or
or
fildll
lret
cmp
mov
lea
shlb
je
jl
add
es
cmc
xchg
cmp
movb
mov
xchg
mov
dec
pop
pop
stc
xchg
sbb
insl
xor
fcmovnbe
std
and
push
xchg
lret
jbe
push
xchg
pushf
sbb
xchg
repnz
mov
sub
popf
or
in
lea
jne
mov
popf
mov
ret
cmp
cmp
xor
rorl
fs
xor
mov
pusha
pop
jns
cmp
ss
mov
xlat
xor
hlt
cmp
out
dec
pop
frstor
fidivl
sbb
test
cmpsl
out
aaa
loopne
ja
jg
test
rol
cmc
loopne
mov
stos
aas
cmp
push
jns
sub
sbb
jnp
dec
sub
data16
sti
sub
testb
dec
sub
out
push
popf
movsb
stc
lahf
daa
sbb
pop
jnp
push
sti
inc
sbbl
cmp
pushf
mov
xor
xlat
mov
mov
sub
repz
int
std
les
int
xchg
push
sub
mov
scas
fwait
pop
in
rcl
ja
repnz
loope
jp
fidivrs
xchg
cmc
mov
xor
jbe
pop
push
call
push
push
sti
xor
push
cmp
out
xor
sarb
test
push
shll
lods
movsl
aaa
int
call
leave
jp
outsb
ds
sub
dec
repz
mov
add
push
movsb
addr16
dec
aad
fdivl
sahf
mov
adc
les
bound
push
sahf
sbb
jnp
xor
and
popa
fimull
adc
or
push
pop
aas
stos
push
fcmovnbe
dec
cmp
out
jns
xchg
push
jb
dec
cmp
clc
mov
mov
arpl
adc
mov
and
xor
cltd
xor
ds
aas
mov
add
test
jg
cmc
add
adc
mov
aad
jmp
idivl
add
cs
sub
ficomps
scas
xchg
cli
and
add
adc
cmp
cmpsb
push
cmpsb
jbe
sub
ret
jne
sahf
aam
xor
cmc
sahf
mov
int3
fwait
ret
xchg
ret
rcrl
dec
outsb
rcr
cwtl
repz
or
xchg
or
or
in
mov
xorb
aam
lcall
inc
push
dec
dec
sarb
scas
xor
and
push
lret
or
jmp
in
scas
dec
dec
inc
xchg
jo
arpl
push
xor
xchg
add
xor
pop
inc
cmp
sub
mov
xchg
ja
stos
scas
xor
cmpl
push
inc
popf
jbe
aad
insl
xchg
pop
or
lods
jns
cld
adc
pop
xor
xor
adc
push
js
gs
sub
push
or
sarl
jbe
mov
dec
pop
stos
pop
xor
out
nopl
pop
push
pop
inc
mov
stos
or
push
pushf
loope
mov
jo
aas
cmc
mov
and
xor
xchg
mov
fcompl
xor
push
sbb
jg
push
fwait
push
imul
push
adc
cs
push
shll
or
mov
xor
inc
cltd
add
cmp
in
xor
mov
cmp
pop
cmp
daa
lahf
cmc
lods
and
mov
inc
push
sub
fisttpll
in
pushf
inc
je
icebp
sub
shll
mov
int
lahf
loop
outsb
mov
fldt
arpl
int3
cmp
dec
jecxz
xchg
outsb
mov
cmp
out
insl
pop
es
adc
sub
loopne
jmpw
and
leave
lahf
scas
nop
push
or
push
push
scas
mov
dec
sub
add
or
add
cwtl
test
ficompl
das
test
or
int3
push
jns
lea
jmp
xchg
inc
mov
fld
insb
rcrb
xchg
nop
inc
jge
cli
mov
push
xor
loope
jmp
movsb
sub
ret
mov
push
lcall
imul
stos
test
gs
lret
ds
sbb
mov
call
mov
sub
pop
aam
or
pop
inc
cltd
inc
femms
out
inc
xchg
inc
sbb
push
dec
dec
and
inc
repnz
test
cmp
fildl
and
jl
sbb
jns
and
cmpsl
adc
daa
dec
dec
mov
adc
adc
push
out
mov
les
test
mov
repnz
push
popa
mov
rcll
jl
sbb
inc
outsl
sub
xchg
xchg
jl
and
mov
pop
cmp
xor
jp
or
xchg
or
xchg
jge
push
add
std
mov
dec
dec
add
inc
loope
clc
xchg
idivb
out
mov
loope
mov
fistps
aaa
push
pop
rcrl
pushf
daa
adc
jo
std
mov
stc
nop
cmp
and
and
jge
ficompl
fiaddl
mov
mov
xchg
dec
sbb
repnz
insl
testl
mov
mov
pop
icebp
int3
stos
and
pop
sub
sbb
xchg
ret
hlt
adc
addr16
jmp
pop
jae
test
fsubl
sub
or
fwait
and
mov
hlt
int3
mov
cmp
mov
add
cwtl
lds
mov
std
out
xbegin
pop
popa
pop
pop
pop
aad
test
mov
sarb
dec
lret
fldl
out
adc
push
pop
es
test
ja
push
imul
shrl
jg
pop
push
adc
cmpsl
sarl
mov
mov
pop
mov
sub
into
lods
orb
ds
cwtl
mov
jo
push
mov
jmp
pop
in
aas
loopne
pop
push
arpl
sub
xor
subb
mov
in
es
lret
xor
and
mov
mov
push
cltd
lret
and
push
aas
cwtl
pop
mov
jmp
pusha
int3
mov
lret
push
xchg
aad
sbb
jle
pop
add
lea
or
jns
inc
add
push
mov
pop
loopne
adc
mov
xchg
mov
test
mov
nop
add
xor
sub
jo
mov
ja
lods
dec
out
pop
loope
shll
mov
mov
or
in
sbb
xchg
xchg
jo
cltd
test
repz
or
decb
sub
ret
out
pop
nop
jns
pop
cltd
cmc
pop
cld
mov
xchg
adc
test
push
ja
outsb
pop
jno
loopne
in
jnp
xorl
or
icebp
xchg
cmp
mov
addr16
or
dec
mov
mov
fmull
fidivl
pop
out
subb
dec
js
sub
xchg
sub
mov
dec
pop
loopne,pn
cltd
pushf
pop
xlat
leave
inc
out
out
out
inc
ffree
aad
xor
stos
inc
xor
data16
push
dec
inc
es
push
jne
arpl
fcomps
jmp
sbb
fcmovbe
push
mov
or
inc
ret
out
cmp
in
inc
es
mov
adc
pushf
aad
pop
inc
cltd
xchg
loope
rcrl
fsubrl
cli
imul
mov
stos
cmc
and
mov
add
adc
insb
loope
cmc
pop
in
sbb
xchg
sbb
inc
cmp
adc
sbb
xchg
jo
jo
pushf
lret
push
call
inc
cld
inc
cmpsb
adc
lret
add
idiv
jo
iret
shrb
inc
mov
pop
js,pt
jg
cmp
mov
lret
jle
jo
fistps
inc
adc
jae
dec
ja
lahf
std
jno
hlt
mov
dec
cmp
out
repz
mov
fdivl
lock
fnsave
xor
cmp
lods
or
lret
xchg
dec
pop
shlb
rcrb
stos
mov
sub
push
subl
or
cltd
fimuls
aad
insl
dec
movsb
xor
jo
xor
and
xchg
cmpsl
or
shrl
mov
pop
jno
xchg
push
add
cmp
ret
stos
dec
loop
cmp
aaa
jbe
imulb
pop
daa
js
xor
aam
arpl
inc
test
rcrl
mov
lds
jl
mov
mov
mov
lahf
outsb
cmp
or
mov
ret
in
rclb
push
dec
push
insl
pop
andl
test
xlat
cmp
fwait
jnp
aaa
lcall
stc
test
mov
sbb
imul
and
ret
rol
sub
gs
stos
xchg
jbe
and
mov
dec
bound
loopne
or
jbe
and
mov
test
xchg
lret
lea
mov
dec
cwtl
adcb
ja
movsb
dec
outsl
mov
dec
sbb
int3
inc
jmp
cs
movsl
xchg
lret
dec
je
gs
push
xchg
sbb
test
movl
aam
stos
imulb
mov
adc
outsb
xlat
push
loop
jbe
int
ret
mov
inc
cmc
dec
push
les
xchg
and
mov
sbb
adc
jge
call
in
mov
hlt
and
pusha
xchg
jnp
sbb
rcl
loop
jns
push
and
scas
mov
loopne
nop
xchg
mov
xchg
imul
sti
imul
cli
testl
cs
mov
out
cltd
mov
dec
cmp
push
in
insb
arpl
aam
es
dec
icebp
mov
or
mov
mov
push
out
js
in
inc
or
fwait
lcall
push
arpl
movsb
test
mov
sub
out
xchg
pop
xchg
add
push
dec
sti
pop
mov
rclb
adc
out
setno
data16
add
scas
mov
out
mov
sub
push
xchg
shll
adc
insb
dec
ljmp
insb
mov
inc
xchg
rorb
das
adc
cmp
add
push
sbb
xor
adc
pop
lret
push
adc
ror
out
add
xorl
sbb
pop
mov
xor
popf
mov
push
jnp
sbb
filds
aam
adc
std
or
mov
out
add
daa
mov
mov
and
push
add
jnp
sub
sahf
call
mov
cmpsb
push
out
ss
out
iret
mov
call
dec
xor
inc
mov
dec
cmpsb
pop
pop
adc
js
outsl
imul
pop
xor
test
sub
lcall
xlat
rolb
shrb
popf
insb
insl
mov
mov
pop
or
push
icebp
mov
test
cltd
sub
sbb
cmp
arpl
cmpsl
jne
adc
xchg
and
adc
cmp
sbb
sbb
jecxz
xchg
repnz
popf
push
pop
fucomip
and
lcall
sub
les
andl
mov
mov
push
sub
lods
xor
dec
mov
arpl
aad
fldcw
push
fs
or
or
fisttps
cs
les
jne
ljmp
imulb
cmc
in
add
gs
mov
lret
test
sub
test
ret
bound
arpl
xlat
xor
adc
jo
jmp
xor
xor
decl
push
insb
aaa
shll
lcall
xlat
inc
mov
popf
outsb
or
mov
mov
mov
retw
jl
adc
mov
adc
sbb
mov
adc
pushf
movsb
int
add
add
stos
pop
and
cmpl
and
xchg
fcomps
movsb
adc
pop
and
enter
mov
sbb
movb
add
add
and
test
jmp
cmp
fdivl
mov
ret
das
add
enter
mov
dec
mov
mov
pop
inc
cwtl
sub
mov
mov
inc
loopne
xor
mov
inc
daa
mov
cmp
ljmp
add
inc
xor
dec
std
sbb
xor
psubw
xchg
rol
pushl
xchg
xor
in
sbb
jb
ss
into
js
gs
mov
inc
mov
push
enter
lods
dec
arpl
pop
pop
mov
inc
in
adc
out
jge
dec
mov
cmp
mov
sub
push
pop
jecxz
cmc
mov
sti
fmuls
icebp
loopw
jne
dec
cmp
pop
das
outsl
aas
mov
and
and
roll
cmc
xchg
scas
gs
pop
xchg
jecxz
mov
in
adc
sub
mov
fsubp
daa
jecxz
add
xchg
and
mov
add
aaa
fsubl
out
test
loop
popa
xchg
test
and
and
hlt
and
xchg
pop
inc
leave
dec
fstl
jbe
mov
jmp
lahf
push
ds
fadd
dec
and
sbb
xchg
popf
mov
std
sbb
gs
mov
and
mov
and
and
repnz
in
adc
mov
ja
fs
pmulhw
lahf
outsb
xchg
inc
int
cli
xor
push
int3
add
pop
ds
call
dec
repnz
mov
popf
mov
dec
lock
jo
jae
adc
cmp
stos
test
push
movsb
mov
inc
ljmp
pop
inc
adc
shrl
shrb
push
pop
pop
mov
sub
popf
stc
push
ds
or
repnz
cmp
adc
xchg
aam
pusha
dec
cmp
mov
ret
adc
aam
cmpsb
jne
jbe
pusha
movsl
cmp
jge
scas
fstps
or
aam
pop
cs
cltd
sub
pop
sbb
or
mov
mov
mov
cmp
xlat
lcall
mov
into
mov
dec
out
lret
adc
xchg
lret
xchg
and
and
xchg
loope
es
or
jmp
fcoml
push
aaa
hlt
cmp
repz
jp
repz
pop
loop
or
enter
inc
icebp
cmp
les
jl
jne
outsb
xchg
sub
frstor
push
idivb
sub
aaa
ljmp
and
add
pop
subb
mov
insl
xlat
fistl
rol
push
sbbl
imul
adc
adc
push
push
leave
adc
mov
and
pop
icebp
int3
test
inc
inc
insl
mov
or
sbb
mov
repz
mov
iret
movsl
adc
cmpl
dec
cmpsb
jbe
fimuls
xor
cmp
mov
popa
add
sub
pop
pop
xor
or
push
xor
pop
adc
jno
gs
loop
mov
imul
adc
cmp
pop
dec
int
mov
inc
mov
xchg
inc
jne
or
pop
sbb
in
push
jae
push
jae
dec
in
out
add
in
cmp
mov
enterw
adc
aaa
jmp
xor
daa
outsb
imul
loope
stos
mov
mov
inc
es
cmp
shlb
jle
in
sub
icebp
popf
call
int3
or
fisttpl
pop
xor
sbb
andl
insl
xchg
gs
jb
clc
dec
jnp,pn
rcll
lret
pop
dec
xchg
cmp
sahf
dec
or
add
cmc
enter
pushf
test
pop
mov
jecxz
mov
cmp
sbb
or
jo
xor
inc
mov
adcb
shl
cmp
out
mov
enter
sub
cmp
jbe
mov
add
je
fistpl
loopne
bound
xchg
ret
scas
dec
inc
xor
popa
es
jecxz
jae
mov
loopne
std
test
out
in
dec
inc
incb
jae
ljmp
mov
inc
loop
jno
inc
shl
loopne
fmul
sbb
arpl
gs
insb
xchg
in
xchg
or
sbb
fidivs
push
dec
sub
inc
xchg
and
jg
shufps
xorb
sub
fisubs
stos
xchg
call
js
push
cmp
mov
jnp
lds
sbb
dec
mov
sub
mov
js
mov
sti
mov
test
aas
and
inc
mov
iret
dec
add
xor
jbe
mov
and
jo
dec
lds
imul
sub
dec
mov
and
push
add
iret
mov
jne
stc
jbe
mov
or
lods
test
sub
mov
test
xor
xor
xor
mov
jne
and
idivb
push
call
xchg
out
push
les
fnstsw
xor
daa
inc
push
into
and
mov
cmp
mov
cmp
sub
mov
sub
mov
mov
popa
and
mov
jg
and
in
sahf
inc
cltd
adcb
mov
outsl
sub
repnz
jecxz
jne
push
bndldx
inc
mov
pop
hlt
cmp
cmpsb
sbbb
xchg
xor
jmp
and
jne
sbb
push
mov
test
insb
add
imul
mov
notb
nop
mov
loop
lahf
cmpsl
cmp
jb
in
mov
insb
dec
pop
ljmp
popf
clc
cmp
xor
dec
out
fdivl
dec
inc
mov
leave
mov
add
int3
xchg
push
icebp
out
or
mov
clc
and
adc
pushf
push
jl
adc
jae
mov
lock
inc
cmp
fucomp
fdiv
lods
xchg
leave
lret
xchg
or
dec
dec
fwait
lret
sub
fdivs
jnp
xchg
jae
adc
test
push
out
into
rcr
mov
jecxz
xor
movsb
pop
popa
iret
xchg
jo
pushl
mov
inc
xor
mov
in
je
sti
in
push
push
push
adcb
cmp
cmc
outsl
loopne
xchg
mov
pop
lret
pop
push
xchg
or
mov
cwtl
push
movsb
push
xchg
outsb
jge
cmpsb
add
jnp
mov
es
fstps
inc
inc
je
sahf
adcl
cmp
inc
xchg
xchg
dec
call
sbb
jle
mov
or
push
dec
xchg
sub
int3
jg
adc
in
xor
push
mov
lcall
cmpsl
sub
xchg
push
mov
stos
adc
aas
insl
sbb
int3
cmp
ljmp
and
push
add
sub
and
push
mov
push
pop
idivb
mov
jae
cmp
xchg
mov
cmp
push
xchg
repnz
jmp
adcl
ds
frstor
shlb
shr
xchg
stc
cmp
adcb
rorl
cmpsb
pushf
sbb
dec
aam
stc
lret
enter
iret
mov
or
fs
dec
xor
inc
inc
add
sahf
int
icebp
clc
leave
add
mov
xor
loope
aad
push
sbb
divb
xchg
or
push
fidivrs
movsl
fstpl
dec
sub
mov
orb
pop
les
pop
xchg
addl
jl
adc
xor
push
mov
pushw
or
cmc
movsb
leave
into
int3
xor
gs
mov
xchg
loop
loopne
push
cmp
sub
or
das
xchg
ja
adc
movsb
lods
hlt
xchg
dec
nop
xor
and
mov
ret
ret
test
loopne
mov
fidivs
cmp
jg
lea
and
mov
adc
push
popf
dec
adc
shrb
xchg
jl
out
adcl
test
jae
cwtl
push
push
jge
test
push
or
loope
inc
dec
clc
clc
xor
xchg
shll
jle
dec
jbe
mov
mov
jne
cmc
cltd
and
push
pop
jae
push
cmp
fdivrs
not
aas
inc
repz
leave
loop
adc
test
xor
cmpsl
mov
cmp
or
inc
push
pop
dec
gs
fiaddl
imull
cli
popa
xchg
xchg
addr16
inc
lret
je
pushf
pop
xchg
lret
addr16
roll
pop
push
sub
dec
pop
sbb
jecxz
jg
insl
mov
pushf
cmp
cmpsl
lods
jg
xchg
scas
jo
in
xchg
mov
ret
pop
in
push
ds
in
xchg
loop
or
test
or
int
lea
cltd
xor
xor
out
xor
ret
adc
jl
fmulp
jecxz
lea
dec
cs
pop
test
dec
popa
adc
mov
aam
fmulp
mov
aad
outsb
dec
sbb
insl
xchg
jnp
bound
lea
call
inc
repz
out
sub
lret
jnp
out
push
mov
push
mov
mov
out
add
and
inc
lods
adc
rcll
inc
sbb
jno
adc
sub
sti
cmp
scas
lods
push
fcoms
inc
jnp
hlt
scas
roll
data16
loop
pushf
nop
fsubrs
mov
lahf
cmp
outsl
rorl
into
lea
pop
adc
fs
jno,pn
adc
xchg
std
adc
jne
fmuls
lahf
shr
jge
mov
mov
sbb
add
xor
pop
mov
push
pop
int
push
mov
pop
loope
in
xor
xchg
xchg
iret
dec
leave
paddusb
int
bound
dec
jmp
cmp
sbb
jge
orb
pop
int3
mov
test
enter
into
ss
mov
hlt
in
rol
sub
xchg
adc
xchg
xchg
mov
or
add
movnti
fadds
lret
pop
sub
inc
fstpt
cmp
lret
push
pop
mov
push
pop
repz
pop
mov
jp
pop
mov
mov
clc
aam
stos
lds
shll
adc
dec
or
push
leave
inc
xchg
jae
jg
xchg
and
scas
stos
jno
sbb
fisttps
add
cmpsl
push
fidivrs
lock
pop
movsl
cld
add
daa
ret
fs
loop
loopne
out
stc
sbb
push
inc
leave
cmc
rolb
fidivl
in
cmp
mov
jecxz
xor
pop
enter
dec
mov
cmpl
lahf
or
inc
push
dec
jmp
test
add
xor
aaa
inc
into
xchg
inc
scas
sub
into
dec
mov
aas
xor
push
sbb
mov
dec
daa
jnp
cmp
cmpsb
fistpll
test
mov
xchg
xor
out
in
mov
add
je
repnz
sarl
dec
addr16
into
into
cmpb
sahf
mov
xlat
sbb
dec
leave
in
pusha
stos
les
xchg
imul
add
call
fstps
lret
adc
cwtl
call
pop
mov
shrl
and
clc
outsl
jns
jbe
fscale
mov
and
mov
xchg
and
xchg
push
xlat
inc
pushf
push
add
mov
iret
repz
fsubrs
lret
mov
mov
aad
lcall
std
test
jno
xchg
fadds
xchg
lods
push
std
mov
mov
push
in
sahf
sti
push
push
js
xchg
inc
xchg
lock
mov
rorl
mov
add
push
sub
push
ror
ja
cmp
loop
pop
jg
mov
lcall
stac
dec
pop
mov
pop
les
sti
inc
test
mov
das
pop
mov
ja
pop
jmp
test
adc
mov
js
ffree
push
std
fimull
pop
sbb
fldcw
fstp
sbbb
filds
xchg
fadd
sahf
dec
sti
xor
imul
pusha
outsb
or
or
shlb
push
test
fisttpl
dec
enter
test
push
das
push
jns
scas
mov
test
xchg
test
push
cld
add
mov
mov
xchg
negl
ror
fcomip
cli
add
and
nop
aam
push
cmp
pop
ret
sub
jb
dec
fcmovnb
xor
jge
jbe
or
popa
out
fsub
add
ljmp
enter
fcoml
inc
ret
cmp
mov
test
inc
out
pusha
adc
mov
pop
clc
pop
mov
xor
mov
jae
ret
push
ret
mov
fs
addr16
adc
mov
js
lahf
test
in
add
in
out
paddusb
mov
sbb
mov
stos
scas
in
mov
and
fcompl
repnz
sub
mov
jmp
mov
pop
inc
add
sahf
sbb
addl
pop
sbb
fistpll
mov
out
cmp
and
sbb
fisttpll
inc
lcall
imul
mov
add
nop
cmp
or
xlat
outsl
clc
jno
push
xor
mov
pop
das
cmp
jno
dec
test
and
adc
dec
inc
int3
popa
xor
cmp
sbb
enter
hlt
scas
pop
jbe
jnp
pop
xchg
jmp
add
inc
inc
pop
in
lods
pop
mov
movsl
mov
lcall
xchg
or
xor
ljmp
insb
push
call
push
stos
jno
outsl
aam
or
inc
inc
cmp
inc
pop
cmc
and
fwait
cwtl
insl
movq
imul
jb
mov
and
xchg
pop
and
mov
adc
jne
mov
arpl
int
sub
dec
and
mov
xchg
test
mov
icebp
dec
inc
mov
cmp
outsb
xchg
dec
xor
add
pushf
jp
xor
sbb
inc
adc
xchg
cmp
mov
jp
xchg
cld
cmp
pop
or
pop
cwtl
push
cmp
sub
sub
jmp
and
int
sarl
adc
sub
ljmp
mov
jmp
xchg
xor
fdivr
adc
loope
add
jnp
daa
into
loope
inc
out
mov
jge
cmp
movsb
or
lahf
es
or
xor
arpl
pop
or
int3
add
mov
testl
faddl
int3
repnz
js
pop
jmp
icebp
push
pushf
mov
cltd
xor
mov
jl
js
and
dec
pop
cmp
xlat
push
cwtl
lods
add
lcall
aad
sbb
call
lods
lcall
and
mov
add
ret
mov
icebp
pusha
push
mov
std
cld
mov
xchg
call
fdivs
mov
aam
dec
pop
aad
ja
xor
addr16
rorl
notl
jno
xchg
btr
aaa
fisttps
cmpsl
loope
sub
cli
mov
in
sub
ss
cwtl
xchg
fwait
dec
rcrl
pop
push
xor
rcrb
jg
shll
and
dec
into
push
jp
pop
testl
cltd
xchg
bswap
movsl
mov
nop
push
loope
cmpsl
scas
pop
addb
out
push
mov
mov
test
xchg
or
lret
pop
jae
dec
bound
mov
push
movb
rcrb
inc
leave
fcompl
fisubs
pusha
add
movsb
jl
and
sbb
jbe
xchg
loope
jns
aaa
gs
xor
jp
cmp
mov
push
icebp
shrb
mov
pop
jl
push
sub
in
pushf
jp
xor
sub
ja
mov
mov
cmpb
repz
sub
mov
je
fisubs
xorl
add
pop
cli
scas
push
jecxz
xchg
mov
jb
jmp
imul
inc
fisubrs
stos
sub
lret
jb
es
call
jne
xchg
dec
xor
call
pushf
jae
std
sbb
mov
lock
push
cltd
js
mov
add
jp
xchg
add
loopne
dec
fdivl
jmp
mov
xchg
adc
lods
fs
xchg
cmpsl
xchg
mov
popf
xor
push
jmp
movsb
mov
jg
hlt
dec
insl
inc
adc
enter
ss
mov
in
mov
sub
inc
and
jno
fcomip
loopne
in
xor
and
repnz
add
shrb
cli
cmp
loop
aas
lods
xor
loopne
addl
lods
rcll
add
scas
add
movb
pop
loopne
loopne
xchg
jmp
stos
pop
ja
mov
mov
cmove
repz
mov
lods
pop
mov
and
cmc
hlt
dec
cmp
and
lret
std
push
pop
mov
or
lcall
sbb
mov
mov
push
dec
bound
mov
sub
flds
and
sbbl
gs
xchg
push
lock
adc
ljmp
leave
aad
test
cli
hlt
jmp
daa
mov
inc
loopne
test
dec
aam
cmp
xchg
mov
cmc
cmp
lret
cs
pushf
jo
xor
mov
out
roll
jge
dec
mov
mov
and
lret
jbe
mov
addl
or
mov
lock
lods
out
fbstp
dec
mov
xchg
lds
les
xor
adc
call
insl
or
icebp
test
je
add
mov
sub
cmpsb
cwtl
xchg
push
lcall
in
jecxz
stc
arpl
pop
aad
orb
inc
in
cltd
cmp
push
enter
add
jmp
sbb
sub
dec
adc
test
test
movsl
dec
xchg
fcomi
pop
dec
inc
mov
int
ret
lret
push
fcomps
xchg
pop
jl
sub
mov
xor
inc
frstor
add
pop
fs
xchg
and
mov
jp
and
test
repz
lret
cwtl
cwtl
outsb
aaa
dec
pushf
jb
adc
fdivs
inc
push
inc
xchg
das
inc
arpl
sub
xor
xchg
ljmp
les
and
xchg
popa
mov
xchg
roll
stc
call
add
jne
lods
or
fidivl
sub
push
in
cwtl
test
xchg
aam
cltd
adcl
popa
pop
fisttpll
xchg
ds
cmp
test
pusha
les
das
adc
jp
icebp
cmpsb
fwait
mov
lret
movsb
inc
sti
mov
pop
lods
inc
stos
jae
ljmp
fs
pop
xchg
mov
pop
cmpsb
es
cmp
out
lds
pop
inc
mov
es
push
jnp
xchg
stos
or
mov
enter
and
mov
adc
sub
mov
mov
scas
test
and
movb
popf
add
ss
jle
add
cmpsl
mov
or
imul
mov
pop
or
pop
addr16
outsl
jg
sub
dec
stc
stos
andps
inc
adc
mov
sbb
test
and
push
das
or
cltd
in
repnz
pop
rcl
test
ljmp
and
xlat
mov
adc
cmp
adc
xchg
adc
adc
sub
inc
out
push
xchg
pop
pushf
cltd
jnp
cmpsl
xchg
out
ja
push
add
inc
test
in
adc
sbb
pushf
jb
scas
iret
pop
or
nop
gs
cmp
ds
outsb
sbb
sub
ss
adc
add
or
fsub
outsb
into
push
or
sub
inc
pop
push
test
and
imul
jmp
xchg
mov
hlt
mov
movzbl
mov
js
and
or
in
dec
jle
pop
jno
push
add
push
xchg
push
insb
dec
pop
mov
ss
aad
push
ficoml
sahf
fistpl
add
lea
mov
xchg
data16
push
pop
ret
out
sbb
inc
dec
test
lods
les
push
in
pop
dec
sub
leave
push
sub
fidivl
int
push
push
mov
pop
mov
std
test
sbb
dec
les
xor
loop
inc
mov
ja
sarl
sbb
mov
lods
mov
xor
push
jmp
repz
shr
ljmp
arpl
dec
lcall
test
or
icebp
or
mov
in
clc
lret
leave
iret
push
jb
pusha
push
and
ja
jne
outsb
aad
sbb
test
xchg
bound
add
inc
push
test
mov
sub
jo
ljmp
dec
arpl
adc
and
fidivrl
ss
or
dec
lods
fldcw
push
pop
cmp
loopne
adc
nop
or
inc
mov
repnz
jge
or
jl
stc
cli
add
stos
ds
lret
mov
inc
xor
xor
dec
lcall
ret
es
fcmovnb
orb
test
gs
inc
in
cmp
rol
mov
jg
mov
dec
jns
mov
aaa
or
dec
xchg
jne
je
int
fldl
jo
mov
in
sti
dec
ds
jb
imul
popa
mov
mov
jp
mov
in
dec
rcrl
fcoml
cmp
jbe
push
xchg
push
nop
bound
les
fldcw
aaa
test
fnstenv
mov
inc
lods
cmp
das
outsl
test
adc
iret
cli
push
or
adc
in
ljmp
adc
jb
cmp
iret
jle
bound
add
mov
ss
out
mov
enter
sbb
mov
ss
and
push
xchg
push
or
out
iret
ss
jae
in
add
lock
fldcw
arpl
shr
orl
cltd
pop
pop
add
scas
jns
mov
icebp
lcall
xor
mov
sub
and
jp
inc
divb
cltd
out
addr16
in
pushf
repnz
mov
neg
cmp
fbstp
fs
push
or
cmp
push
loope
xor
sti
cmp
or
pop
insb
mov
int3
pusha
pop
xchg
cmp
add
mov
pop
stos
sti
stos
push
sbb
dec
mov
out
push
pop
sarb
pop
aad
and
dec
or
ss
inc
push
cmpsb
rorb
or
xor
mov
push
xor
dec
xor
jge
pop
outsl
sbb
mov
cmp
aas
in
add
mov
ja
ret
fadds
cmc
mov
jg
arpl
mov
imul
arpl
jmp
mov
lds
aad
fisttpll
inc
daa
sub
fnstsw
add
dec
mov
xchg
xor
inc
or
fisttps
cld
aad
movsb
aaa
jge
ret
test
leave
ss
mov
jno
mov
dec
idivb
push
inc
or
sub
daa
ret
cltd
and
mov
jle
addr16
fldenv
cmp
mov
and
lock
sbb
inc
fisttps
je
dec
hlt
jmp
pop
lods
popf
push
or
sbb
adc
addr16
jnp
mov
test
fidivrl
outsl
leave
mov
aam
or
or
lds
arpl
les
pop
inc
mov
insb
jge
sbb
ds
jb
and
mov
ljmp
popf
mov
dec
mov
loopne
xor
adc
in
adcl
mov
pop
xchg
stos
enter
outsl
or
loop
jecxz
push
incb
int
pop
mov
cltd
rol
sbb
dec
shufps
aaa
out
cmp
int3
call
push
pop
push
cmp
push
mov
fildll
xchg
push
test
jmp
rclb
xlat
xchg
ret
lea
dec
jg
dec
and
sub
xchg
jns
imul
or
push
inc
mov
xchg
not
mov
test
and
mov
adc
or
dec
dec
cmp
xor
shlb
sahf
mov
fwait
sarl
push
push
jno
sub
stos
sub
xchg
sub
push
mov
and
xchg
xchg
sub
pop
mov
and
repz
push
and
xchg
mov
out
inc
adc
cmp
push
cli
sbb
js
add
fwait
pop
daa
imul
inc
data16
stc
sahf
inc
add
dec
nop
aaa
xor
jns
ja
adc
add
push
xlat
mov
pop
cltd
ljmp
es
sub
sahf
ljmp
dec
dec
mov
jl
imul
sub
push
inc
jecxz
sub
std
sub
std
es
jg
stc
in
cvtdq2ps
in
jnp
mov
xchg
ret
add
push
repnz
dec
shrl
test
jecxz
fwait
jmp
mov
or
push
cmp
sbb
jne
out
or
popa
xchg
mov
cs
fwait
out
aam
or
mov
mov
jne
push
push
sbb
mov
adc
shll
lret
movb
jg
push
cmp
pop
push
test
scas
dec
faddl
pop
ds
sti
mov
ljmp
push
sub
cli
mov
cmp
addr16
mov
fstpt
mov
paddsb
mov
inc
xchg
sbb
mov
xor
ret
ret
push
bnd
push
pop
push
sbb
add
jo
push
test
mov
xchg
add
sub
jno
sub
imul
pop
xor
out
xchg
dec
in
pop
enter
jl
add
mov
testb
jecxz
dec
fidivl
fst
sbb
adcl
or
sahf
inc
addr16
sbb
xor
add
mov
mov
or
popa
cmpsl
add
hlt
or
add
mov
lret
aaa
daa
cld
fs
jmp
repnz
dec
jmp
add
adc
cmpsl
cs
lock
add
fldenv
bound
rorb
movsl
inc
setp
cli
dec
int3
xor
popaw
jbe
test
js
sbb
fwait
lea
xchg
mov
scas
and
in
test
push
stos
cltd
or
sbb
stos
push
adc
dec
cmpsl
mov
pop
pop
mov
adc
cmp
sub
sbb
mov
test
add
int3
and
es
jne
aas
shlb
sub
fldl
and
pusha
inc
inc
and
xor
and
push
jmp
fadd
jne
or
mov
scas
mov
add
out
jae
ficomps
mov
cmp
adc
sarb
cwtl
dec
repnz
xor
xor
pop
imul
test
in
cmc
xabort
mov
xchg
insb
cmp
jns
jle
adc
out
in
out
cmpsl
pop
imul
icebp
repz
and
sub
dec
in
movsl
cmpsb
mov
lret
mov
aad
push
cmpsl
leave
or
mov
out
cltd
inc
dec
ret
mov
jle
inc
nop
rcrl
mov
cmp
fwait
in
mov
out
inc
sbb
fisttps
jp
push
movsl
mov
clc
lods
dec
test
jnp
ret
loopne
inc
andb
loop
or
cmp
cld
mov
and
data16
imul
mov
lahf
test
pop
push
or
gs
add
cli
inc
add
out
ret
insb
pop
sbb
lods
inc
sub
scas
pop
pop
adc
sbb
test
lds
or
sub
je,pt
je
sub
sbb
imul
inc
inc
js
xor
ficomps
aaa
xchg
sub
in
sbb
imul
jl
mov
andb
mov
mov
dec
sub
pushf
add
inc
and
push
add
xchg
fmull
fadds
xor
push
and
jo
xchg
or
sub
mov
andb
mov
imul
jnp
loope
or
lahf
sbb
movsb
jae
test
mov
jmp
je
or
hlt
xchg
pop
and
inc
bound
test
addr16
mov
inc
jnp
mov
jmp
mov
inc
push
mov
outsb
dec
aaa
sub
arpl
xchg
out
mov
mov
push
fistpll
sbb
mov
pop
inc
sti
ljmp
sbb
jno
adc
and
sub
hlt
mov
stc
aam
lods
cmp
scas
pop
push
sbb
fisubrl
mov
adc
lahf
cli
jae
roll
push
push
dec
fldenv
test
popa
arpl
fstpl
shll
mov
pop
mov
or
jge
pop
jo
add
xchg
jnp
push
jbe
imul
sbb
xchg
gs
popf
dec
xor
subb
mov
mov
push
iret
rcr
mov
sets
pop
mov
lret
sub
jns
jnp
out
incb
gs
iret
js
cs
shlb
and
mov
std
mov
mov
test
sar
or
inc
sub
cmpsl
cmp
pop
div
sub
push
cltd
push
jne
add
add
pop
out
fldlg2
push
xor
xor
push
cmp
mov
fld
test
out
aam
jbe
xchg
scas
out
push
sub
adc
fsubrl
inc
enter
ja
shrb
mov
mov
inc
jge
inc
jl
sub
fldl
jg
fsqrt
jbe
cmp
and
or
rcll
scas
scas
cmpsl
pop
cld
mov
mov
fwait
xlat
stos
faddl
push
jl
xabort
ret
mov
sub
dec
inc
lea
cmp
stos
scas
scas
les
sbb
cmp
push
mov
inc
xor
sbb
add
xor
mov
nop
jo
and
lcall
dec
xchg
leave
xchg
adc
inc
sub
push
inc
pop
sbb
and
or
inc
cs
jb
btr
push
xchg
popf
cmp
into
mov
inc
rcrl
mov
or
xlat
xchg
mov
push
movsb
outsb
cltd
sti
imull
ss
sub
out
idivb
xor
push
idivl
sub
clc
test
cmp
xchg
cli
jno
stc
xchg
adc
dec
push
js
test
mov
stos
leave
xor
xor
int3
dec
inc
cmp
inc
dec
xchg
repz
xlat
pop
stos
xchg
test
cmp
loop
cmc
pusha
sub
inc
xor
jnp
lret
jo
out
pop
in
outsb
movsl
mov
dec
push
movsl
sub
sub
stos
inc
lahf
pop
dec
in
xchg
scas
pop
jo
add
lret
jle
inc
dec
sbb
out
test
and
and
sbb
add
dec
sbb
outsb
mov
pop
jge
das
shll
stc
adcb
cmpl
inc
xchg
inc
pop
xchg
jo
fidivrl
pop
xor
add
jmp
sub
aaa
mov
insb
lea
push
inc
addr16
or
jne
cs
inc
adc
sub
dec
cs
dec
das
xor
fists
mov
cmc
test
in
out
push
add
into
pop
mov
adc
mov
out
or
into
pop
sbb
and
jle
xor
xor
sub
mov
pop
pop
add
inc
cli
aam
jge
repnz
scas
ror
andb
divl
push
dec
or
lock
jo
xor
scas
lcall
adc
adc
jno
sbb
mov
adc
or
cmpsl
sti
sti
pop
mov
ds
add
or
fwait
rorl
bound
push
into
rolb
add
in
xchg
out
push
daa
es
out
lcall
jbe
xchg
sbb
xchg
rolb
jecxz
stos
outsb
lret
inc
bound
scas
cli
out
fs
cs
add
insb
das
inc
add
in
and
sbb
loopne
repnz
ljmp
cld
mov
scas
pop
xorl
cltd
gs
cmp
push
xchg
shl
jp
divl
lea
sbb
inc
jno
inc
call
mov
imul
cmp
fsubl
sub
sbbl
rorl
movsb
sti
jo
lods
sub
push
xor
loopne
mov
xchg
add
mov
and
lods
or
xchg
fdivrl
out
push
jb
scas
outsl
mov
gs
dec
jle
in
xchg
sbb
xchg
add
cli
jg
popf
add
loopne
ja
cwtl
mov
nop
dec
mov
dec
dec
dec
lds
xor
pushf
aad
rcll
ret
bound
xchg
stos
outsl
adc
div
fdivr
bound
ret
addr16
add
stos
test
into
ret
scas
jecxz
push
imul
xchg
mov
cmp
int
subl
subb
jb
sub
pop
sub
inc
jle
aam
jno
or
or
movl
addr16
fs
mov
lods
mov
push
and
mov
mov
pop
jl
in
pusha
pushf
clc
ret
negl
cmp
dec
popa
movsl
dec
or
decl
lret
sub
adc
fwait
addr16
cmpsl
clc
stos
cld
add
lahf
push
and
daa
loope
cmp
cwtl
mov
loop
aaa
lock
in
push
inc
or
in
mov
call
fiadds
pop
outsl
subb
stos
and
in
pop
in
xor
cltd
sarl
lods
fdivrs
shlb
jno
movsl
in
out
scas
or
test
dec
loop
inc
aad
ds
xchg
fistpll
mov
xchg
mov
loopne
into
sub
mov
rorb
divl
into
add
fldenv
int3
ljmp
dec
cmp
jl
dec
call
in
mov
cmpsl
adc
lahf
pop
mov
or
push
and
jl
sub
test
test
mov
push
sub
dec
in
mov
mov
cmp
lcall
sbb
jne
dec
push
repz
popa
xchg
lods
and
aas
js
jp
mov
sub
mov
movsl
or
push
outsl
push
int3
test
ja
pusha
xchg
fistpll
fisubl
mov
mov
xor
xchg
cwtl
ja
xchg
inc
sbb
loop
lahf
xchg
jb
or
int3
hlt
movsl
push
mov
leave
xchg
push
repnz
mov
or
inc
inc
inc
xlat
mov
fidivl
mov
push
dec
insb
xchg
ja
mov
push
or
or
jne
addr16
loope
lahf
shrl
xor
dec
loope
icebp
rcrl
cmpsl
cmp
xor
sub
and
dec
subb
insb
faddp
sbb
push
cld
lods
mov
xchg
insb
es
push
lock
add
and
leave
push
mov
inc
sbb
mov
dec
pushf
dec
int3
mov
add
and
clc
loope
test
push
cmp
lea
add
in
lret
hlt
cmpsb
into
dec
push
mov
xlat
sbb
inc
shlb
add
clc
xor
mov
shlb
notb
ss
cmc
out
push
mov
cs
xor
std
inc
aaa
push
je
lods
stos
leave
inc
shll
insb
xor
and
jge
cmp
enter
out
insl
mov
sbb
insb
adc
out
sub
cmp
push
xor
pop
lret
enter
ds
xchg
fsubl
push
pusha
cmp
sbbl
bound
push
out
movsb
int3
ja
out
sbb
mov
and
stc
jb
pop
jne
fldl
in
pop
jno
fidivl
mov
pop
in
lret
cli
pop
leave
adc
push
and
xorb
je
lret
ret
roll
xor
xchg
fimuls
xchg
les
push
orl
dec
rcrl
shll
loope
xchg
out
inc
mov
sub
push
xor
xlat
addr16
mov
xchg
aad
pop
cmpsl
and
push
scas
je
pop
cltd
jns
fimull
xchg
push
inc
and
pop
adc
add
jno
cmc
and
inc
shll
add
mov
imull
shll
movsb
imul
or
in
push
add
mov
adc
nop
mov
mov
iret
sbb
mov
sbb
outsb
jmp
xchg
lds
sbb
or
jl
int3
xchg
call
aam
stos
cs
jb
scas
jmp
and
inc
pop
push
ficomps
add
jge
adc
fs
out
push
xchg
das
mov
mov
mov
in
lret
mov
fldcw
pop
xchg
push
dec
out
sbb
cmpsb
cs
or
mov
lock
jnp
sbbl
test
jb
push
jno
aam
arpl
cmp
add
adc
xor
add
inc
ret
and
loop
or
add
mov
inc
subb
xor
jnp
out
lds
int
xchg
xchg
fs
pop
test
cwtl
cltd
mov
xstore-rng
cmpsl
xchg
xorb
sbb
scas
aad
jbe
comiss
bound
xor
imul
aas
negb
adc
fsts
inc
inc
cmp
add
xchg
mov
add
js
or
test
enter
sbb
adc
xchg
xor
push
dec
out
call
add
jae
sbb
lcall
cmp
push
jne
cmp
mov
mov
push
rcrb
jns
xor
mov
stos
push
out
fmull
xor
xor
ljmp
sub
test
je
test
sbb
aam
cmp
int3
jg
push
flds
mov
dec
inc
xlat
call
jns
mov
inc
mov
sar
dec
shlb
sbbl
inc
sub
movb
or
clc
adc
insl
jns
sbb
cmp
pop
in
jae
jp
sti
into
jne
cmpl
xor
dec
sbb
test
rcrb
filds
stos
outsb
dec
dec
or
stos
ja
jne
and
shl
push
aas
mov
loope
mov
ja
dec
pusha
xchg
scas
roll
shrb
stc
or
mov
xchg
sub
cld
cli
int3
xchg
adc
mov
jns
mov
testb
xor
mov
or
xor
cmpsb
cs
aad
repnz
mov
aaa
mov
jbe
cmp
dec
in
jb
xor
mov
scas
cmpsb
loop
xor
lret
mov
fcoms
shrb
xor
data16
dec
xchg
jp
sbb
adc
xorl
fucomp
popa
cltd
lods
jnp
mov
sub
rorl
movsb
mov
push
xlat
inc
dec
int
xchg
push
imul
repnz
pushf
mov
mov
push
jbe
xchg
sbb
pop
lods
bound
add
sub
jmp
sbb
mov
inc
inc
mov
fnstenv
or
sub
xchg
fdivrl
jo
mov
test
inc
ljmp
in
cltd
leave
repz
or
test
cmp
add
mov
pop
clc
xchg
jle
insl
adc
or
and
mov
push
mov
mov
fists
xor
cmp
daa
int
lock
cmp
rcrl
ja
xchg
xor
ljmp
xchg
pop
cli
add
aad
and
pop
movb
enter
outsl
stos
adc
scas
push
cmc
aas
jae
sub
jle
test
mov
mov
movsb
sbb
notl
add
cmp
sbb
jecxz
loope
lock
jns
sbb
cld
mov
jg
inc
mov
paddd
xor
insl
loope
js
sub
add
pop
push
or
lsl
stos
mov
scas
mov
dec
xlat
cwtl
call
repz
mov
xlat
mov
or
jae
imul
out
sub
mov
lahf
mov
sarl
or
outsl
fwait
popf
mov
aam
pop
jns
in
and
xchg
loope
push
pusha
add
adc
mov
nop
and
push
aas
sbb
cmpsl
cmpsb
pop
mov
adc
sahf
shrb
hlt
or
jbe
negl
jl
mov
jo
enter
data16
adc
fstps
pop
popa
cmpsl
cmp
insb
sbb
adc
fcompl
sbb
or
out
mov
mov
push
sbb
or
push
push
das
dec
xchg
neg
xchg
push
imul
out
pop
test
es
sub
andl
jge
js
or
int3
adc
inc
pop
pusha
push
inc
aad
add
inc
adc
mov
sub
jmp
cld
in
xor
sbb
add
insl
mov
in
adc
xor
cmp
sbb
mov
xchg
popa
test
leave
push
nop
mov
or
add
or
pusha
fs
shll
mov
sub
or
xchg
sub
adc
adc
mov
xlat
mov
gs
pop
sbb
loopne
popa
push
stos
or
dec
cmp
sbb
cld
or
cmp
cwtl
fdivr
inc
push
pop
jns
out
out
aad
dec
adc
pop
adc
adcl
fs
sub
lcall
fwait
sbb
call
ret
repnz
popf
sub
rcll
push
xor
shrl
sub
out
inc
push
hlt
data16
leave
imull
out
push
cmp
sub
mov
imul
test
mov
aaa
and
ret
mov
cmpsb
dec
adcl
push
shlb
lods
push
xor
ss
xchg
roll
sub
jmp
mov
fwait
sbb
sub
mov
and
arpl
daa
icebp
fnstsw
inc
push
cs
lods
insb
sub
mov
stc
push
sub
xchg
lret
mov
flds
xor
xchg
or
pop
dec
sbb
sub
repz
sbb
add
xlat
sbb
dec
sub
push
cld
jecxz
into
mov
shll
pop
rorl
and
fwait
fs
adc
inc
push
stos
ret
dec
add
bound
and
sub
out
insl
ret
push
aaa
cld
mov
mov
or
loop
cmc
xchg
xor
cmp
cmp
scas
cmp
sbb
xchg
imul
lcall
cwtl
add
ret
icebp
iret
ret
lds
mov
dec
roll
jmp
arpl
cltd
in
lds
je
pop
mov
outsl
scas
iret
movsb
pop
decl
data16
rcrl
xor
lea
inc
or
jnp
xorl
mov
cmp
hlt
iret
jmp
xchg
iret
leave
scas
cmc
pop
jmp
insl
adcl
ljmp
cmp
xlat
jne
sbb
cmp
bound
dec
jmp
negb
adc
movsl
cmp
sbbb
sub
into
pop
lock
mov
out
jg
adc
lds
int
rorb
sbb
cmp
pushf
leave
inc
jnp
cli
ljmp
sbb
mov
sub
pop
loope
lret
mov
sub
add
pop
jo
push
push
cmp
mov
icebp
shll
fldenv
loop
xor
mov
add
into
and
dec
sarl
push
lock
sti
stc
push
inc
mov
xchg
movsl
add
jmp
mov
dec
lock
push
fs
inc
movsl
mov
fisttpll
mov
inc
push
inc
jle
sub
cld
test
pop
aad
jl
lock
cmpsb
xlat
pop
cltd
dec
stos
mov
out
shrb
iret
icebp
shr
jae
pusha
pop
xchg
xchg
xchg
push
ret
sub
fbstp
into
sub
cmp
cmp
mov
jne
fucompp
iret
outsb
inc
mov
push
dec
mov
jg
fcomp
or
mov
xor
pop
mov
popf
sub
jp
aas
test
fs
mov
mov
pop
cmp
test
pop
enter
add
sub
jns
and
xchg
test
cmp
sti
je
movsl
push
or
or
outsl
cmp
lods
push
and
insb
xor
imul
xchg
mov
lds
sbb
or
jl
cli
push
and
aaa
cld
cmp
add
rcrl
fcomp
inc
mov
jnp
xor
mov
int
fwait
test
push
cmp
addr16
ret
ja
aas
mov
dec
cmpsl
inc
add
ds
pop
iret
in
push
push
xchg
into
repz
push
and
fcmove
push
imul
jno
jle
test
xor
cmp
test
loopne
mov
lods
incl
fldcw
mov
ret
sub
popa
ds
lea
cmp
cmc
xorl
fs
xchg
mov
xor
out
fldenv
cmp
mov
xor
sbb
jns
push
fcoml
push
lods
lds
mov
fldenv
pop
cmp
xor
mov
or
dec
mov
sub
mov
rorl
pop
clc
aaa
imul
adc
cld
and
inc
push
iret
fimuls
mov
aas
mov
in
mov
push
cmpsb
in
dec
shr
mov
fsubrs
std
aas
and
jbe
or
push
daa
fstl
insb
inc
int
jle
int
ss
lea
in
mov
arpl
std
mov
jnp
das
shlb
lods
mov
aam
cmp
sahf
add
mov
rcrb
mov
mov
adc
push
dec
in
imul
shlb
jne
stos
fistpl
xor
addl
sub
jne
clc
push
sarl
stc
cs
stc
cmc
sahf
dec
mov
mov
in
sbb
xor
jmp
das
je
aad
movsl
add
jmp
in
fcmovbe
pop
jns
insb
mov
in
sbb
push
push
mov
pop
movsl
sub
insb
addl
mov
jp
xchg
xchg
aad
movsl
inc
hlt
jl
push
idivl
jo
lcall
je
adcl
cmp
jle
pop
bound
in
pop
inc
xlat
mov
outsb
pop
inc
mov
scas
xchg
stc
in
mov
fwait
xchg
adc
mull
into
sub
xor
cli
jmp
mov
adc
or
xlat
push
imul
in
in
adc
sti
push
add
scas
jp
push
push
cmp
les
mov
jns
xchg
inc
sub
icebp
imul
ret
out
fisubrs
push
dec
xchg
add
repnz
jmp
in
pop
jg
cmc
adc
out
jns
pop
addr16
pusha
pop
or
jg
insl
stc
inc
test
sub
fldenv
jne
mov
adc
jbe
loope
or
fs
dec
loop
jnp
sub
ret
out
push
imul
mov
mov
aad
push
aas
dec
addr16
ljmp
stos
adc
xchg
jns
insb
or
mov
jg
add
mov
lret
addr16
dec
fucomi
or
fsubrs
call
in
cmpsl
sbb
mov
add
mov
bound
xchg
inc
repz
ret
jmp
or
ljmp
sbb
cli
sbb
insb
jae
xor
call
sbb
sti
in
lret
pop
dec
xorl
ficomps
mov
fs
adc
mov
or
test
sbb
mov
je
jne
adc
xor
adc
and
lret
imul
mov
or
int3
mov
ljmp
or
dec
add
pushf
fisttpll
hlt
mov
lods
sahf
ret
and
inc
xor
nop
insb
jecxz
lock
adc
jmp
push
test
cwtl
test
and
ror
jb
sub
jl
xorb
jmp
cmp
pop
imul
ljmp
or
xlat
jnp
fistpl
cmp
movsb
xchg
adcb
cli
loope
push
cltd
in
rcr
lret
mov
adc
pusha
loop
dec
or
xchg
add
test
aas
inc
push
dec
xchg
int
mov
adc
push
into
scas
mov
arpl
addl
test
and
test
xor
adc
jmp
int
std
out
out
xor
inc
cltd
jbe
mov
daa
aad
enter
xchg
pop
mov
mov
pop
scas
test
push
gs
adc
pop
enter
sar
fdivrl
jmp
mov
cld
mov
fpatan
jl
das
adc
shrb
pop
mov
out
push
imul
inc
movsl
bnd
dec
mov
lds
mov
mov
sub
sbb
idivb
dec
icebp
aam
out
mov
mov
ret
sbb
inc
add
mov
lods
sub
xchg
mov
mov
jmp
mov
xlat
outsl
shll
test
rcrl
jl
faddp
push
shlb
js
inc
dec
lret
push
daa
shll
add
aad
mov
pop
mov
mov
les
jb
sbb
fdivl
push
sub
sub
and
rcr
push
pop
sub
fwait
iret
iret
xor
fdivrl
es
cmp
jecxz
mov
mov
xor
mov
int3
cmc
mov
stc
push
in
inc
xchg
fdivrl
mov
xor
mov
and
int3
cmp
dec
mov
push
bnd
insb
negl
mov
dec
pop
popa
add
add
lret
loop
and
mov
pop
adc
orb
mov
insb
jno
pop
ficomps
inc
sbbb
sbb
add
adc
notl
sahf
add
mov
cmp
pop
inc
pushf
andb
sbb
sti
jmp
sahf
notb
push
mov
xchg
je
outsl
movsl
stc
loopne
daa
imul
js
adc
sub
lods
imul
pop
sub
jbe
lods
jecxz
clc
int3
in
js
sub
mov
decb
push
add
out
cs
cmp
daa
imul
xchg
xor
or
add
out
dec
arpl
inc
imul
loopne
adc
hlt
inc
ret
sti
mov
ret
or
add
mov
dec
push
vcvtss2si
mov
mov
mov
sbb
fwait
push
dec
xor
in
mov
movsb
rcr
stos
scas
jnp
mov
das
push
dec
daa
jecxz
scas
jg
or
pop
repnz
mov
or
insb
xchg
xor
bound
ret
loopne
and
repnz
aad
jae
addr16
ds
lret
mov
jns
jge
xor
cmpsb
inc
sbb
shl
adc
daa
repz
popf
stos
mov
mov
out
test
call
dec
movsl
in
call
and
push
outsl
xlat
scas
cmp
dec
jnp
addr16
jb
jle
mov
je
mov
scas
scas
pop
nop
clc
int
outsb
fsubrs
movsb
push
mov
cltd
push
push
dec
loope
jge
out
and
mov
lods
dec
pop
pop
bound
notl
mov
fdivs
fidivrs
nop
mov
fisttpl
push
inc
cs
jl
mov
fisttpl
mov
dec
js
xchg
out
hlt
inc
mov
sub
stos
ret
sbb
std
jle
popf
add
add
stc
xor
out
mov
jg
clc
shrb
pushf
outsl
test
andb
addr16
lds
cmp
ljmp
and
add
mov
and
xor
and
jae
sti
cwtl
sbb
cmpsb
adc
clc
hlt
aam
icebp
incl
adc
aaa
idiv
jmp
out
cwtl
out
pop
movl
sbb
outsl
lcall
xchg
daa
sub
daa
dec
nop
movsb
jns
mov
shll
test
popf
xor
add
dec
in
adc
jae
pop
inc
popa
inc
dec
popf
sbb
pop
icebp
lea
rcll
sbb
jmp
ljmp
mov
jl
cmp
jns
jmp
adc
fnstsw
in
push
mov
int
mov
insb
xor
aaa
lods
mov
xor
cli
inc
mov
or
push
fisubrs
ljmp
movsb
mov
add
push
cmpsl
xchg
imul
or
jp
push
sbb
les
cmc
add
push
mov
icebp
ljmp
mov
test
or
iret
inc
pop
pop
xor
aad
cmpsb
fsts
dec
push
repnz
inc
inc
xor
shrl
push
adc
push
sub
pop
add
inc
inc
das
imul
cmp
shlb
and
std
cld
mov
sub
adc
jno
popf
lahf
orb
scas
icebp
enter
leave
popf
jae
xchg
rclb
push
add
push
sahf
pop
xchg
aaa
fwait
pop
fdivl
mov
xor
ja
loope
sbb
test
and
sbb
leave
jle
lods
je
outsl
loop
adc
add
pushf
outsb
add
lds
jmp
xor
pop
xchg
aad
stos
call
jbe
fcompl
sbb
cmpsl
lods
popa
mov
out
mov
xor
inc
adc
mov
mov
repz
inc
mov
test
mov
push
test
mov
mov
pop
andl
xor
popf
hlt
xchg
sub
jbe
movsb
pop
push
add
dec
xor
or
push
adc
mov
pop
and
xor
dec
pop
pop
mov
mov
mov
mov
and
sub
insl
iret
xchg
loope
int3
mov
lahf
ss
lahf
pop
loope
push
rcr
addr16
mov
pop
sbb
lods
push
xchg
inc
out
testb
cs
mov
push
cmpsl
pop
and
inc
frstpm(287
movsl
clc
dec
das
xchg
scas
out
faddl
inc
pop
push
repnz
inc
fistps
ja
insl
stos
mov
scas
dec
xor
pop
jae
sahf
mov
adc
jge
inc
rclb
mov
sbb
adc
inc
mov
push
push
cli
push
mov
in
cmp
int3
xchg
inc
mov
mov
shrl
popf
pushf
stos
in
pop
sub
stc
inc
popa
sar
gs
daa
xchg
jno
xlat
nop
pusha
add
jg
pop
into
sub
dec
jns
and
data16
dec
das
loop
mov
jmp
jge
call
mov
jg
pop
mov
lods
ror
dec
sub
and
jle
test
or
lea
cmp
add
cmp
cmp
lds
xorb
es
pop
repnz
inc
imul
or
xchg
lret
push
inc
add
xchg
jns
or
cmp
arpl
mov
filds
es
popa
lds
xor
xor
data16
loope
push
sbb
add
push
inc
adc
inc
mov
inc
jae
adc
repnz
daa
rorl
mov
pop
inc
scas
pop
cmpsl
pushf
into
lea
cmpsb
ljmp
mov
mov
into
fmul
aad
insb
or
and
rclb
test
insb
cs
cwtl
fadds
mov
clc
adc
lret
popf
add
out
push
sbb
and
and
push
lods
mov
push
and
pop
inc
fdivrl
mov
add
lds
inc
imulb
pop
in
sbb
push
out
cmp
xchg
cmp
loop
aas
ret
push
and
pop
push
aaa
and
cmpsl
mov
daa
adc
jbe
shrl
add
cmp
insl
stc
stc
xchg
inc
outsl
jne
adc
mov
xor
adc
lods
leave
enter
push
push
cmpsb
or
xchg
pop
fwait
mov
or
dec
jp
mov
xchg
cmc
xlat
call
mov
xchg
xor
dec
xor
sub
mov
test
xchg
cwtl
sbb
pop
adc
sbbl
scas
mov
testl
dec
insl
xor
in
lret
mov
lock
repz
shrb
fisubl
lock
cmpsl
imul
jmp
push
out
addr16
mov
inc
out
int3
test
out
std
or
decb
sbb
aad
xchg
out
inc
imul
lcall
cs
cmp
iret
flds
ja
popa
in
inc
or
aaa
or
jp
sub
add
pop
cmpsb
dec
js
loop
fcom
xor
dec
test
xchg
ret
rcr
imulb
loope
les
xchg
shll
popa
aam
cmpsb
mov
sbb
push
pop
xchg
inc
stos
fstpt
data16
testb
arpl
lret
ja
add
sbb
push
inc
push
or
and
sub
mov
pushf
mov
shll
fcmovu
sbbb
rcl
popa
jne
inc
pop
mov
dec
cmp
cmp
mov
rol
or
outsl
mov
cmc
mov
movsl
cltd
test
call
gs
jno
push
notb
sub
lret
xchg
sbb
xchg
scas
dec
aas
xchg
dec
cmp
repz
mov
push
cli
daa
pop
pop
aad
jno
fsubs
popa
ja
movsl
and
lret
xor
dec
push
xor
add
data16
test
insb
pop
das
aas
mov
pop
pop
push
xchg
push
pop
cmp
pop
mov
int
mov
cmpsb
fidivrs
mov
icebp
fldl
xor
pop
jae
bswap
push
adc
lds
cltd
mov
stos
in
aaa
or
push
arpl
aaa
out
daa
loope
mov
jmp
or
ds
or
js
lea
faddl
stc
sub
xor
sahf
stos
pop
xchg
add
jl
test
push
pop
and
aam
loop
ror
aad
push
sbb
mov
aad
sbbl
adc
xor
push
sub
cmp
jnp
jbe
or
push
cmc
imull
mov
loop
jle
inc
clc
repz
lds
int
js
sub
sub
sbb
xor
into
cs
pop
push
sub
scas
jl
mov
push
rcrl
fucomp
cmp
cmpsb
stos
insb
mul
iret
push
sbb
fwait
jns
es
jge
pop
adc
lds
sbb
mov
inc
jmp
sbb
push
fimuls
mov
push
add
push
or
add
pushl
jns
aad
incb
enter
or
hlt
pand
mov
xchg
rcrl
sbb
pop
inc
jg
jecxz
jbe
push
les
cmp
rorl
test
sbbb
sbb
jbe
jns
aas
mov
roll
aas
xchg
in
aad
movsb
xchg
mov
jge
sub
mov
xor
or
mov
loop
cld
sub
dec
mov
mov
pop
arpl
aad
outsl
sti
mov
out
push
xchg
push
popa
enter
mov
pop
jg,pn
jnp
aas
mov
mov
mov
lods
mov
adc
add
xor
inc
dec
fsubs
in
dec
and
and
sbbb
stc
pop
scas
or
pop
inc
mov
fldl2t
pop
push
iret
aas
sbb
mov
and
cmp
sbb
mov
jmp
and
sub
xchg
and
sahf
popf
sub
inc
xor
out
test
lock
cs
lret
roll
jmp
sbb
cld
mov
jb
pop
out
fmuls
adc
inc
aaa
loopne
dec
and
daa
fxch
mov
cmpsl
data16
dec
scas
mov
outsb
sub
sub
xchg
dec
andb
popf
push
dec
xor
in
addr16
or
dec
data16
mov
dec
pop
int
mov
push
outsl
or
mov
iret
jnp
mov
pop
push
pop
pop
jmp
mov
pushf
js
push
pop
adc
pop
out
shrl
push
dec
in
in
push
jle
in
cmpl
adc
xchg
xchg
rcl
ss
sbb
aam
xchg
ja
roll
call
ret
dec
data16
adc
cmp
mov
scas
dec
cwtl
cmp
popa
cmp
shll
and
mov
push
push
mov
push
movsb
mov
mov
xor
sub
mov
or
mov
sbb
and
push
xlat
add
cld
cltd
and
out
jecxz
shlb
pop
sub
sub
cmpsl
inc
and
jb
call
xlat
mov
je
inc
and
lahf
je
mov
lods
sbb
xchg
mov
push
cmpsl
mov
mov
xchg
jg
stc
xor
sti
push
ret
in
jg
adc
rorl
sub
and
rcrb
outsb
iret
cmpsl
outsb
idivl
push
dec
fcmovnu
mov
dec
cmp
push
xchg
cwtl
movsb
sti
aad
sarb
or
cmc
loopne
out
jecxz
jmp
or
in
xlat
loope
sbb
stos
es
jp
mov
insb
inc
loop
mov
add
xor
into
and
inc
jmp
or
jns
insl
subl
sbb
xchg
rclb
push
xchg
fst
ljmp
cmc
cld
outsb
es
adc
xor
sbb
fidivl
movsb
insl
scas
dec
push
ljmp
ja
sar
jb
push
ficoml
sti
mov
inc
fildll
js
pop
clc
mov
push
inc
scas
jne
hlt
jbe
add
rorb
shlb
bound
dec
xchg
xchg
cmpsb
cmp
sub
in
sub
loope
fnstsw
xlat
cmp
xor
and
in
and
pusha
call
rorl
aad
lock
out
call
and
mov
xchg
lcall
iret
ret
mov
add
in
aam
insb
dec
push
mov
sub
sub
mov
lcall
mov
dec
test
sub
xor
push
fstps
iret
dec
cmp
std
add
jg
call
scas
push
and
xchg
pop
call
push
les
pop
and
add
test
sub
call
cmpsb
testb
stos
mov
cli
mov
test
adc
mov
in
pop
xor
adc
cmc
adc
mov
cmp
mov
push
mov
pusha
mov
and
hlt
sarl
mov
es
ljmp
loope
mov
sti
inc
xchg
mov
mov
jo
adc
aam
xchg
and
test
push
call
adcl
mov
lds
mov
mov
adc
js
xor
repz
cmp
dec
stc
fistpl
in
xor
pop
in
mov
scas
movsl
add
lahf
mov
int3
jbe
nop
mov
jne
xchg
adc
insb
push
cmpb
pop
adc
pop
cwtl
and
int
xchg
xchg
into
push
mov
mov
aad
decl
pop
pop
inc
adc
fs
pop
mov
pop
ficompl
mov
jecxz
push
mov
fidivrs
sbb
lret
xchg
stos
movsl
in
fisttps
jmp
aad
inc
inc
mov
mov
push
ja
add
add
xor
jae
or
call
movsl
enter
add
out
scas
dec
lods
loop
add
and
dec
stc
stc
inc
lahf
in
mov
xor
shll
fcomps
mov
mov
or
insl
das
hlt
pop
mov
dec
ds
loop
std
cmp
mov
xchg
mov
sbb
push
rorb
test
aaa
adc
sbb
ret
fwait
ret
push
push
ds
sbb
mov
adcl
inc
cmp
and
pop
mov
out
xor
hlt
mov
aas
orb
clc
fmul
ds
lcall
mov
push
push
fimuls
fisubl
pop
cmc
mov
sub
mov
xor
jmp
pop
pop
sbb
cs
fcoms
fcompl
adc
shrl
add
mov
lret
rorl
js
sahf
movsb
fistl
sub
adc
adc
jnp
xchg
popa
adc
jg
lret
mov
je
push
cmp
sahf
xchg
pop
lret
jnp
test
nop
cwtl
in
adc
loopne
notb
cmc
mov
adc
shrl
xchg
imul
push
dec
movsb
or
sbb
or
jne
and
inc
cmp
sti
push
loop
lods
loope
lahf
push
bound
pop
fst
cmpsb
lods
jecxz
push
rclb
les
pusha
icebp
sti
or
fmul
and
mov
lret
cmp
sbbb
dec
lock
cmpsl
in
cmp
jae
imul
jb
test
pop
in
icebp
lcall
out
test
stc
int3
sub
hlt
push
inc
scas
hlt
inc
js
push
imul
psubw
insb
xchg
fwait
jge
mov
xor
dec
xchg
lahf
pushf
stos
rclb
in
or
imul
stc
mov
mov
arpl
cmp
jp
out
dec
push
shlb
add
xor
and
push
inc
xchg
sub
movsb
mov
push
sub
nop
adc
mov
mov
insl
insl
in
lret
les
and
rcrb
mov
cmp
add
std
cltd
mov
mov
jecxz
xor
out
fistl
xor
insl
xchg
pop
aad
ret
pop
xor
and
fisttps
mov
mov
pop
push
dec
inc
adc
lret
jmp
sub
sbb
push
adc
loope
inc
mov
mov
pushf
fwait
outsl
aas
jns
cli
scas
and
dec
push
jle
jb
fmul
lods
cld
leave
xchg
pop
stc
pop
shr
cmp
sbb
js
xor
add
bound
insl
insb
inc
xchg
fwait
pop
jb
imul
pop
mov
inc
or
xchg
in
push
cltd
sbb
dec
and
lods
jmp
dec
inc
push
jmp
mov
int
pop
arpl
push
xchg
addr16
int
inc
pusha
jl
jns
rolb
shl
or
pop
pop
push
cmpb
fnstenv
rclb
xchg
and
out
sahf
push
cmp
test
pop
es
ljmp
mov
lcall
mov
and
pop
faddl
sbb
pop
sub
xchg
mov
mov
push
enter
out
imul
dec
jne
jecxz
ds
cmp
cmp
iret
lcall
mov
rcl
inc
mov
orb
ljmp
les
cmp
and
push
out
aad
imul
mov
adc
mov
lock
out
stos
mov
inc
mov
mov
scas
xchg
inc
daa
movsb
mov
push
mov
xchg
cmp
sbb
mov
sahf
dec
mov
repz
xchg
subb
mov
add
mov
adc
push
or
pop
sub
jno
clc
orl
mov
ja
push
loop
test
lock
mov
sahf
insl
and
mov
mov
push
aad
scas
notb
and
fists
xchg
mov
ss
xchg
adc
jbe
rclb
push
push
lods
mov
mov
jl
add
scas
mov
adc
ffree
xchg
xchg
lods
pop
stc
nop
fs
int
adc
jmp
adc
mov
and
fsubr
addr16
lahf
and
movsb
mov
sub
aas
xlat
sub
stc
out
add
rolb
pop
idiv
jo
add
mov
fmuls
movsl
inc
test
pop
cli
sti
mov
jno
out
js
dec
int3
mov
rcrl
mov
cs
test
imul
sub
sahf
jae
into
imul
xor
pop
ds
sbb
jae
sbb
push
ljmp
xchg
or
push
jo
mov
fnstsw
push
sub
in
cs
pop
dec
jl
enter
pop
ss
cmpsl
jno
in
sti
sub
xchg
jbe
cmp
and
mov
adc
popf
jae
das
test
push
cli
popa
shrl
dec
adc
fwait
mov
leave
test
xor
sub
add
cltd
lods
sbb
mov
sub
loop
pop
movsl
sbb
nop
rorl
mov
adc
imul
rorl
xchg
push
daa
cmp
rcll
scas
aaa
or
icebp
xchg
lds
xchg
inc
sbb
push
scas
cmp
mov
aaa
xchg
push
in
stos
popa
cltd
cwtl
shl
xchg
pop
push
lcall
mov
pop
pop
fs
repnz
sub
int3
and
mov
xchg
movsl
insb
je,pt
jmp
outsb
xor
mov
push
jp
jae
xchg
cmp
and
cwtl
xlat
mov
stos
ror
rolb
das
mov
push
lods
pop
andl
or
rolb
mov
lods
cmp
jge
mov
mov
stc
dec
mov
add
mull
xchg
cmp
enter
mov
cmc
mov
das
jb
and
xor
ljmp
out
sbb
mov
insb
cmp
mov
xchg
pop
sbb
mov
xor
hlt
mov
or
sti
cmpsb
jle
jecxz
mov
lret
movsl
dec
mov
pop
insl
xchg
cld
js
jne
mov
test
xor
inc
popf
mov
pop
lahf
add
and
das
or
bound
out
mov
pop
jns
xor
sub
stos
sub
push
stc
cmpsb
int
outsb
dec
scas
fs
dec
pop
pop
das
pop
push
cmpsl
mov
push
pusha
mov
dec
stos
and
xor
mov
stos
push
shrl
push
dec
xabort
xor
inc
int
mov
out
movsb
or
cmp
sub
mov
dec
mov
in
mov
outsb
lock
pushf
xor
enter
lods
into
push
das
mov
pop
das
cmpsb
inc
in
movsb
and
add
cmp
stc
jnp
ffreep
cmpsb
sahf
mov
adc
imull
push
sub
or
bound
push
and
push
mov
mov
test
test
cmp
cmp
les
sub
loop
in
push
cmp
mov
add
adc
pop
insl
or
lods
inc
or
movsl
imul
adc
pop
fwait
push
aam
repz
fdivl
mov
fists
mov
repz
ficoml
nop
mov
cltd
pop
repz
aad
gs
out
cwtl
adc
es
fucomip
cmp
and
sub
cwtl
into
in
jne
mov
nop
andl
ret
jne
lock
lea
std
jle
fsubp
xor
or
adc
ds
lods
mov
lea
mov
pop
and
add
dec
cmpsl
or
pop
jae
dec
push
sub
jne
sub
mov
fdivrl
lods
cmp
dec
clc
jl
push
xor
fs
mov
push
adc
cmp
add
sub
jno
ljmp
into
add
cmp
js
ret
adc
fbstp
nop
ljmp
cmc
and
cs
push
data16
rorb
xor
xchg
rclb
inc
sub
icebp
shr
dec
and
int3
mov
push
mov
data16
das
jne
add
popf
rclb
loop
mov
stos
and
mov
mov
sbb
jge
mov
jmp
adc
scas
rcll
std
shrb
push
mov
shl
imul
arpl
mov
push
mov
fimull
or
fsubrl
cwtl
pop
mov
push
pop
ret
mov
dec
iret
mov
andb
insl
fistpl
scas
or
push
gs
mov
ds
push
in
outsl
mov
ss
xlat
inc
push
add
nop
sub
and
jmp
cmp
push
pop
dec
mov
pop
pop
mov
dec
dec
push
pop
lahf
cwtl
mov
dec
xorb
ret
mov
xchg
push
pop
sarb
mov
push
adcl
xor
aas
sbb
pop
in
add
add
xor
cmp
rorl
int3
xchg
push
std
pop
ret
push
xchg
jae
pop
xchg
stos
out
rol
xor
inc
add
das
movsb
pop
jno
lds
push
movsb
sahf
loopne
cld
lret
jnp
push
lea
jbe
xor
xor
xchg
enter
mov
mov
push
lret
mov
adc
stos
out
lods
fstps
adc
push
and
pop
xor
jbe
sbb
fdivs
movsb
sub
in
jae
enter
data16
or
movsb
xor
pusha
lock
dec
sub
js
xchg
or
imul
sahf
test
mov
push
std
xchg
push
mov
mov
dec
das
push
fnstenv
stos
aas
cmpsb
pop
push
jecxz
sbb
andl
jno
int
pop
pop
adc
push
cmpsl
movsb
xchg
jp
or
rcr
clc
cmp
and
pop
sbb
out
data16
jbe
mov
fwait
ja
aam
xor
sbb
sub
sub
arpl
fsubs
ds
mov
mov
shll
dec
in
loopne
popa
jnp
sub
pop
add
sar
lods
rolb
scas
adc
mov
pop
pop
sbb
push
sub
shl
pop
outsb
out
pushf
sahf
sti
ja
push
adc
mov
sahf
fistpl
daa
ret
lock
lret
ficompl
clc
add
daa
divl
pushf
sub
lea
pop
cmp
popa
cmp
enter
push
lds
push
jp
sahf
adc
pop
push
sub
imul
lods
push
sbb
jg
jg
adc
addl
insl
dec
or
xchg
dec
jmp
or
cmpsl
inc
ljmp
jae
in
popa
ss
xchg
das
push
imull
arpl
jne
lods
ret
push
ja
stos
xchg
xchg
sub
cmc
xor
inc
sbb
mov
clc
int
lods
sbb
fldt
cmovle
add
ds
nop
lahf
mov
mov
shrb
int
push
jns
pop
in
mov
stos
push
jge
icebp
lret
and
adc
push
jp
std
jb
adc
xor
hlt
mov
xchg
push
aaa
fs
xorl
aas
lret
fbld
sub
jne
in
add
in
jae
mov
dec
xor
lea
decl
inc
xor
imul
cmp
add
pop
cmpsb
adc
lock
daa
inc
pop
repnz
dec
jecxz
lret
leave
dec
or
jno
push
in
movsl
mov
cld
sti
and
out
in
xor
jno
push
push
push
dec
push
out
rcl
cmp
mov
mov
push
pop
push
sbb
mov
ficompl
addr16
add
pop
add
repnz
addb
xchg
pop
nop
jle
xchg
stc
or
jecxz
lea
iret
dec
fcos
mov
mov
ret
pop
sbb
lret
add
int3
push
jmp
bound
leave
sub
jp
pop
loope
adc
dec
enter
test
pop
or
add
dec
lea
adc
stos
xor
mov
push
pop
and
push
rcrb
aas
ja
or
sti
pushf
dec
sub
icebp
ljmp
push
add
pop
mov
lock
mov
mov
fisttpl
and
sbb
inc
mov
pusha
jle
aam
out
in
arpl
lods
dec
lahf
nop
out
inc
xchg
in
dec
enter
jl
mov
pusha
loop
scas
xchg
rcl
mov
mov
add
xor
mov
inc
push
add
in
and
test
xchg
ffree
add
pop
rcll
lahf
into
cmp
push
rcl
or
dec
in
sub
out
jmp
orb
aad
test
xor
add
adc
lcall
xor
dec
and
fstps
fwait
mov
sahf
inc
ljmp
arpl
loope
mov
mov
filds
sbb
ffree
xor
aam
mov
dec
iret
push
fnclex
or
xlat
lcall
cwtl
pop
xchg
out
push
mov
icebp
pusha
mov
mov
xor
or
push
insb
adc
imul
jecxz
xchg
out
xor
sbb
rorl
testl
outsl
xchg
mov
jbe
ljmp
out
je
sbb
mov
dec
xchg
cs
add
std
rcrb
sbb
cli
or
mov
inc
lods
push
cmpsl
ds
je
cmc
imul
push
dec
int
pop
cmpsl
mov
mov
in
xor
loope
push
jle
imul
jmp
in
shr
xchg
in
daa
jno
scas
sbb
pop
sub
mov
mov
stos
xor
mov
subl
sbb
pop
add
out
rolb
dec
mov
scas
xchg
repnz
and
push
popa
mov
push
clc
and
jo
jg
sub
lret
imul
adc
lcall
sub
dec
xchg
push
int3
dec
push
test
ljmp
push
fs
test
stos
cmp
stc
imul
xor
out
jl
jb
das
dec
lahf
dec
je
into
xchg
out
pop
sub
pop
lds
push
fcomps
testb
pop
sub
aas
insb
scas
dec
insb
das
cmp
or
pop
or
inc
int3
mov
fmull
les
icebp
stc
fisttps
outsl
dec
pop
mov
mov
push
mov
sub
pusha
mov
psllq
xchg
rol
adc
mov
adc
test
loope
repnz
out
xlat
fwait
xor
jo
out
scas
xor
sbb
int
cs
cmp
in
sub
mov
add
sub
ss
add
add
sub
in
mov
jg
icebp
in
aam
push
jle
into
inc
xor
mov
stos
xchg
push
add
or
shr
fcmovb
sbb
xchg
cmp
lea
mull
subl
adc
xorb
mov
adc
mov
xchg
loop
jnp
ret
shr
jecxz
mov
and
cs
dec
mov
ds
mov
das
in
insb
test
test
add
outsl
incl
mov
sbb
in
cli
dec
push
add
ficoms
filds
stos
pop
std
mov
in
rcrb
mov
arpl
jecxz
push
shll
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
.byte
movsl
aaa
mov
add
int
sahf
jg
adc
lea
les
cmpb
out
push
inc
in
push
inc
dec
rcll
outsl
mov
lods
adc
jno
mov
dec
mov
mov
mov
pop
jmp
inc
xor
pop
or
aaa
lcall
mov
mov
inc
loop
rolb
cmp
mov
inc
dec
inc
scas
popa
push
cwtl
xor
dec
aaa
sti
adc
scas
je
in
sub
push
inc
xor
add
test
jecxz
add
fisubrs
ret
gs
dec
lret
dec
jbe
mov
rcrl
repz
fs
inc
jnp
pop
mov
or
push
xor
pop
jmp
shlb
sar
stc
in
ja
in
es
jl
mov
dec
mov
jbe
scas
mov
dec
sbbl
cld
enter
das
jnp
pushf
ljmp
add
das
jmp
sbb
popf
mov
sti
mov
aam
jmp
push
ja
adc
inc
loop
dec
push
mov
dec
fdivl
pop
int3
cmp
or
js
sbb
cwtl
shrl
rcrb
jb
jmp
scas
mov
jg
cmpsl
mov
xor
gs
in
mov
pop
and
jmp
jne
lods
jmp
mov
jmp
xchg
pop
mov
arpl
mov
jne
add
js
add
dec
bound
lret
sahf
popf
xlat
mov
push
and
xchg
loop
push
jmp
pop
inc
repnz
leave
or
and
fdivs
pop
pushf
fnstcw
stc
jnp
and
adc
jp
scas
adc
inc
xlat
adc
sub
mov
xor
sbb
out
pop
cltd
lds
test
cmp
ja
mov
mov
inc
scas
adc
add
lcall
sub
lcall
inc
faddl
and
js
mov
fsubrl
mov
cmp
pushf
dec
cltd
int
cli
jle
xor
aaa
jae
and
scas
xchg
sbb
cld
push
and
outsl
mov
nop
cwtl
sbb
std
gs
xchg
push
lods
mov
adc
mov
push
add
lret
cmp
fmuls
xchg
xor
mov
repz
sahf
add
push
inc
dec
cmpsb
das
jo
add
imul
mov
jg
mov
xchg
pop
push
inc
dec
sarb
cli
push
lods
push
das
push
lret
xchg
fxch
add
ja
mov
shlb
mov
repnz
cmp
adc
or
cli
das
mov
push
cmpsb
cltd
cmp
and
mov
shrb
inc
mov
cmp
decl
sbb
mov
xorl
popf
aaa
mov
daa
insb
dec
sbb
inc
sub
dec
jg
pop
outsl
lods
out
push
xchg
popa
pop
xor
cmp
pop
cmpsb
xchg
ljmp
push
pusha
lret
clc
divl
mov
ret
ja
push
push
sub
jo
sub
daa
in
or
jp
cmpsl
cmc
sub
cmp
mov
stos
sub
out
ljmp
mov
popa
mov
push
dec
xlat
inc
dec
lret
inc
push
callw
mov
gs
int3
lds
jno
pop
xchg
and
pusha
enter
rorb
mov
popa
jnp
sub
pop
mov
inc
mov
jnp
subb
push
fsubl
pusha
sbb
int
mov
adc
jp
loopne
hlt
in
int
cs
daa
inc
aaa
push
or
enter
jg
mov
or
push
jae
pop
mov
cs
pop
sbb
cmp
mov
inc
mov
pop
lds
std
pop
popf
out
jbe
jmp
andb
stos
inc
mov
repnz
cmp
push
sbb
cmp
cli
mov
scas
jns
xor
popa
ljmp
add
push
clc
decb
sahf
xor
dec
idivl
jecxz
xor
jp
mov
in
sub
cmp
sbb
jbe
push
jbe
fs
lods
fldt
outsb
push
inc
push
icebp
pop
lea
int
lahf
dec
sub
or
jns
iret
sbb
sbb
mov
sahf
outsl
cmp
inc
xor
inc
fstps
in
hlt
jnp
mov
cmp
and
or
je
fldl
aam
inc
jg
push
sub
cmp
pop
sub
clc
dec
sub
iret
mov
orl
idiv
and
xor
jmp
aam
jo
scas
out
shrl
bound
add
push
test
jmp
aaa
push
cmp
out
das
in
dec
xchg
test
add
adc
addr16
pusha
lods
dec
ja
mov
ds
or
xor
cmp
pop
push
jmp
adc
sbb
aam
hlt
outsl
mov
pop
push
rorl
sub
mov
push
rcr
add
mov
cltd
rcrl
icebp
sub
sub
jp
iret
cmp
or
jmp
js
cltd
push
sbb
mov
les
mov
test
dec
mov
push
pop
mov
rclb
imull
jb
cmp
int3
xchg
dec
fs
mov
dec
cs
leave
mov
and
hlt
pop
fdivr
bound
dec
cwtl
aas
jne
sbb
in
scas
add
pop
std
inc
add
andb
sub
mov
or
cmpsl
cmp
cmp
mov
pop
rorb
xchg
and
adc
mov
test
std
and
jnp
fdivl
fwait
sarb
jnp
mov
test
shrl
imull
xchg
in
mov
xchg
rcrl
cmc
sbb
arpl
cmc
xor
sbb
test
or
pop
aas
rcl
bnd
aad
jge
sbb
sbb
scas
push
sub
ret
gs
mov
sub
pop
and
rorb
aas
pop
out
ror
adc
add
into
in
or
data16
imul
push
pop
pop
inc
dec
fdiv
js
jnp
xor
mov
mov
adc
repz
and
jecxz
cmp
cmp
jno
pop
cmp
out
ljmp
daa
jbe
sub
test
pop
xor
xchg
xchg
or
and
fiadds
cli
pop
popf
add
cmp
dec
or
mov
movsb
pushf
mov
in
sub
cmp
out
out
push
jo
and
xchg
lret
dec
mov
arpl
cmc
icebp
aaa
push
shrb
fisttpl
push
addb
jecxz
jmp
icebp
sub
out
iret
cltd
aaa
pusha
push
test
xor
iret
adc
sbb
or
pop
leave
sub
rcrb
pop
lock
push
int3
neg
mov
push
mov
jbe
loope
or
mov
xor
pop
ds
pop
or
add
int3
dec
mov
mov
cmpsl
leave
pop
mov
sub
cmp
aam
add
rorl
push
out
pusha
lods
iret
inc
jl
nop
call
scas
or
mov
adc
or
aaa
ja
adc
lock
xor
mov
hlt
cs
mov
hlt
cmp
pop
inc
sti
sbb
fistps
mov
test
les
inc
mov
inc
sub
ja
xchg
xchg
push
mov
xor
push
or
mov
push
xor
push
dec
push
out
xchg
fsubp
inc
cmp
push
movsl
sysenter
mov
and
lock
xchg
sub
sub
icebp
in
dec
push
test
mov
dec
repz
scas
inc
into
push
test
dec
fdivrl
jle
movsl
divl
popa
pop
and
sbb
jecxz
gs
je
dec
dec
es
mov
adc
lds
jns
imul
insl
sahf
jle
repnz
es
mov
vmptrst
das
mov
pop
push
or
adc
fs
jnp
adc
pop
fldt
fldl
cmpsb
popf
jp
jns
mov
pop
rcr
jmp
into
aas
out
fs
pop
xorb
xchg
sbb
and
jae
stos
adc
inc
or
lds
add
jp
adc
out
inc
inc
mov
mov
test
lret
dec
test
inc
cmpsl
jns
adc
mov
mov
lret
push
pop
adc
popf
inc
sub
in
mov
mov
das
jns
stos
push
popfw
xor
pusha
lods
arpl
into
dec
pop
sub
sub
lods
sub
adc
lea
ds
xor
test
and
shl
fsubs
imul
imul
ret
push
push
sub
mov
fwait
push
add
imul
inc
xor
pop
sti
sub
sbb
std
push
and
in
add
push
mov
fistl
pop
push
push
aam
jmp
mov
jno
pop
dec
pop
push
pop
pop
test
test
ds
mov
xor
fistpll
inc
and
mov
in
or
stos
dec
inc
orl
jbe
sub
jmp
or
fwait
stc
inc
pop
sbb
insl
rclb
lcall
jo
filds
mov
test
sbb
xchg
lahf
cs
clc
mov
rcrl
cld
je
das
mov
dec
pop
xchg
test
jecxz
scas
sub
mov
dec
movsb
out
iret
mov
xchg
add
lods
ss
insb
bound
out
add
xlat
stc
mov
jae
add
and
mov
inc
std
add
pop
pop
or
cmpl
loopne
jb
aam
add
cwtl
cs
in
sub
stc
mov
cld
dec
mov
mov
push
push
lods
dec
lahf
movsl
jl
adc
xlat
rcl
mov
inc
iret
inc
ljmp
mov
jne
in
mulb
in
sbb
mov
push
push
push
jbe
dec
sbb
and
sbb
mov
in
cltd
or
mov
inc
sbb
cmpsb
cmc
lds
fbstp
in
mov
mov
insl
mov
into
inc
ret
jle
dec
push
imul
fsubrs
rolb
adc
scas
out
mov
rcr
popl
pop
xchg
or
into
mov
jo
imul
cs
fldcw
pop
xor
sbb
in
mov
nop
inc
and
fsubs
scas
repnz
xchg
gs
sbb
push
outsb
in
sub
addr16
imul
mov
hlt
dec
hlt
jg
pop
out
insl
push
cltd
sub
mov
pop
xchg
inc
lds
imul
inc
movsb
mov
hlt
ss
aad
adc
pusha
xchg
inc
xchg
lock
or
adc
or
inc
jecxz
mov
mov
orl
or
rorb
xchg
movsb
dec
add
cmpsb
imul
adc
cmpsb
ljmp
aam
loope
sbb
xchg
loopne
xchg
jp
std
pop
add
mov
adc
jl
or
mov
add
push
cld
jecxz
aad
test
faddl
pop
sbb
aam
je
js
push
sub
test
pop
jp
xchg
xor
je
jmp
iret
mov
xchg
xor
out
sub
mov
sub
or
jbe
les
aad
sbb
cmpsl
and
pop
mov
dec
out
push
pop
cmp
lahf
adc
mov
push
dec
or
xor
mov
nop
dec
dec
sub
nop
mov
pop
movsl
cmpb
out
jl
cwtl
cld
add
sti
in
iret
mov
cltd
mov
loope
fidivl
pusha
mov
add
loope
lcall
sub
mov
or
mov
sti
jne
sub
out
adc
mov
xchg
cmp
outsl
adc
push
pop
out
loop
mov
aaa
pop
sub
jne
pop
test
pop
call
sbb
mov
mov
push
es
cmp
fstpl
push
pop
push
push
jb
imul
push
jge
std
push
sub
inc
bound
lcall
or
loope
push
shrl
jnp
and
jae
mov
xchg
sbb
xlat
push
movsb
mov
inc
push
push
mov
jns
ljmp
shrl
mov
int3
add
sbb
jl
enter
cmp
fcmovne
pop
mov
insl
fsub
es
push
push
sbb
cmpsl
stos
jns
mov
pop
test
fistl
or
inc
adc
push
lds
aad
vpshlb
loope
cs
pop
jmp
jp
roll
in
ljmp
in
xor
shll
jmp
popa
into
and
insb
sub
icebp
and
rorb
cmp
mov
add
test
and
data16
push
es
push
loop
mov
aad
mov
pop
imul
fdiv
lcall
icebp
lcall
and
popf
pop
test
fisubrl
xchg
push
pop
or
xchg
pushf
inc
inc
loopne
cmp
inc
out
push
scas
js
fwait
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
mov
jo
jnp
dec
idiv
adcl
andb
xchg
jbe
popf
ficomps
xchg
mov
lret
sarl
cmp
xor
call
add
aad
xchg
xor
adc
mov
push
cmp
in
std
jae
les
push
outsb
scas
scas
inc
dec
pop
in
movsb
cmp
fsts
ret
pop
adc
call
cmpsl
leave
movsb
mov
cmp
push
cli
je
rol
xchg
cmp
clc
call
pop
movsl
mov
outsb
adc
je
cmp
or
nop
movsb
push
xchg
les
mov
mov
aad
xchg
subb
mov
mov
pop
rorb
fdiv
mov
iret
dec
imul
sbb
adcb
mov
aam
cs
mov
fsubs
loopne
mov
aaa
xchg
mov
add
lods
ja
mov
pop
cmp
into
mov
mov
mov
popf
push
push
mov
orb
mov
mov
es
in
lret
pop
mov
in
or
jns
mov
lods
loop
les
sti
cmp
jp
xor
jg
dec
scas
fucom
xchg
sbb
mov
notl
cs
inc
dec
cmp
lea
icebp
or
jns
add
or
hlt
add
and
and
push
sbb
or
add
das
in
scas
es
xchg
movsb
nop
ds
adc
mov
jae
fwait
inc
cmp
or
xorb
mov
sub
dec
rorl
int
mov
call
sbb
or
popf
inc
lods
xchg
mov
mov
ret
cmp
lcall
clc
and
pusha
sarb
pushf
outsl
sub
lds
jg
or
shrb
push
adc
pushf
xor
inc
mov
je
sub
ret
cltd
in
and
and
dec
lahf
imul
adc
or
adc
fbstp
imul
ja
ja
dec
inc
cmp
out
test
dec
mov
incb
inc
into
aaa
ljmp
ret
add
test
inc
mov
into
sub
cmpsb
lods
mov
into
jge
movsb
movsb
fistl
mov
outsb
inc
add
or
xchg
mov
mov
xchg
fdivr
mov
popa
int
mov
mov
mov
insb
into
fwait
add
or
int3
jp
out
lds
sub
je
insb
inc
xor
nop
push
sub
or
pop
bound
sub
shrl
xor
mov
pushf
mov
test
adc
stos
dec
sahf
arpl
mov
mov
popa
in
cmp
push
adc
mov
and
mov
mov
push
rcrl
int3
shrl
jge
test
sub
or
or
sarb
jno
pop
mov
dec
int3
rcrl
jns
cmp
xlat
pop
inc
pop
mov
inc
leave
inc
jecxz
dec
mov
lahf
into
sbb
xchg
pushf
xchg
notl
sarb
fwait
ljmp
dec
popa
mov
or
dec
push
int
mov
cwtl
pushf
out
jecxz
cmp
je
aaa
mov
fs
cld
pop
push
roll
push
shr
subb
pop
dec
jecxz
adc
jae
das
hlt
pop
push
jg
int3
cmpsb
rcrl
cmp
lret
adc
in
jp
pop
adc
shrb
lret
shl
negl
and
daa
adc
mov
fcmovnb
out
aaa
or
add
test
out
dec
pop
add
xor
pop
shlb
add
pop
adc
pop
mov
lret
xchg
xchg
inc
insl
fiaddl
sbb
and
inc
pushf
std
xchg
xor
mov
loop
nop
stc
mov
mov
cwtl
sahf
es
shrl
xchg
pop
jno
jg
int3
or
aad
inc
or
pop
jb
mov
add
scas
pop
cltd
pop
dec
icebp
shr
insb
fwait
les
pop
mov
xchg
sub
xchg
ljmp
jecxz
push
lret
dec
lcall
push
aas
je
jnp
pop
push
mov
enter
int
dec
mov
push
sti
dec
dec
lock
xchg
fwait
insl
and
jl
dec
jo
inc
lret
filds
and
shlb
int
sub
nop
imul
stc
int
lods
adcb
cwtl
stos
loope
data16
mov
iret
int3
lahf
jl
cmp
jne
dec
daa
fmuls
cld
movsb
push
mov
inc
pop
xchg
and
jmp
int
in
fidivrl
outsb
rcrl
sbb
gs
fdivrl
daa
jp
cmp
inc
test
xchg
test
daa
xlat
xchg
sub
call
enter
cmp
mov
jnp
dec
out
call
add
jp
scas
add
sbb
inc
popa
mov
in
movsl
inc
lods
jmp
rcr
dec
inc
dec
outsb
cltd
sbb
mov
cmp
inc
and
add
jno
enter
mov
xchg
mov
xor
jl
sub
mov
add
aas
out
sti
or
dec
outsl
jecxz
andl
xchg
fmuls
sub
xchg
lret
ja
imul
cmp
fcmovnbe
mov
mov
loope
or
mov
enter
push
clc
xchg
sahf
push
inc
insl
push
je
push
psubw
orl
cmp
mov
push
xchg
enter
push
test
shrb
xor
inc
cld
arpl
adc
mov
lcall
mov
movsb
mov
cmp
or
dec
add
mov
aaa
sbbl
les
das
test
cmpsb
push
test
mov
aad
je
test
mov
ret
ret
hlt
stc
jb
cld
fmul
jno
pop
mov
jg
gs
das
xlat
mov
jb
mov
push
xor
lcall
out
or
out
add
mov
xchg
outsl
std
cmp
fs
pushf
xchg
xor
dec
lret
les
dec
andl
jo
xchg
add
out
and
or
daa
push
test
jg
pop
mov
pop
fcmovnb
push
sub
xchg
sub
popa
addr16
cmp
test
movsl
iret
jge
xchg
pushf
pop
inc
out
jo
ljmp
jbe
xor
lcall
push
pop
out
dec
add
leave
ror
ds
add
aaa
xchg
ds
jb
push
add
sub
xchg
jp
jg
hlt
iret
xor
in
aad
jle
xorl
jnp
or
out
mov
dec
in
inc
icebp
fcmovnu
aad
mov
fdivp
gs
jp
dec
pusha
and
mov
pop
and
mov
jb
hlt
outsb
sub
xchg
xchg
push
fidivrl
adc
popa
in
push
or
jle
in
je
adc
mov
mov
xor
ret
inc
cli
aam
xchg
cmpsl
add
mov
or
sti
in
std
in
outsl
pushf
pushf
inc
lods
orb
lods
push
pop
xor
nop
in
adc
pop
fdivr
pop
pop
bound
lock
and
in
mov
add
sbb
mov
jb
ror
and
out
pop
cmpsb
std
inc
cmp
sub
xchg
pop
sub
or
lods
sbb
sub
xchg
sarl
mov
adc
fsts
mov
xor
mov
int3
jnp
xlat
cmp
outsb
adc
lds
fwait
xchg
mov
out
stc
ds
xchg
mov
cmp
xchg
add
call
jb
xchg
push
repz
sbb
sbb
pop
add
mov
adc
lods
sbb
mov
sbb
stc
or
jge
mov
pop
addr16
rcrb
out
push
out
out
mov
test
mov
mov
incb
mov
sarl
cmpsb
lods
lret
adc
dec
xor
mov
pop
mov
cs
imul
cltd
and
out
add
add
iret
mov
fs
int3
xchg
mov
test
cld
cmp
fsubrl
pop
inc
mov
adc
lods
pop
pop
adc
in
pop
dec
sbb
xchg
inc
ret
lock
mov
icebp
jge
iret
mov
inc
jae
jg
lcall
clc
scas
dec
inc
testl
adc
movsb
addr16
aaa
adc
dec
xlat
out
popf
popf
xchg
mov
jg
hlt
jmp
mov
xchg
xor
int3
xchg
dec
les
push
sub
shrb
fisttpll
stc
sub
cmc
mov
add
jnp
in
add
pop
ficoml
jbe
cwtl
mov
fistpll
clc
mov
stos
cmpl
shl
cld
adc
cmpsl
xchg
inc
sarb
inc
and
mov
ret
jmp
mov
adc
das
fsts
inc
insl
aad
xor
jns
sarl
les
js
lods
leave
in
push
dec
or
push
arpl
push
push
xor
pop
aad
cmp
andb
ljmp
pop
add
sub
mov
fcompl
xchg
lret
andb
pop
dec
push
sbb
pop
lahf
lods
call
cmp
mov
sub
jg
imul
das
cmpsl
inc
jmp
and
insl
push
cmp
cmp
lea
jmp
mov
sub
cmc
push
mov
inc
aam
jp
pop
and
xchg
clc
fdivrl
lcall
rcrb
push
cmp
xchg
and
adc
arpl
push
inc
add
mov
iret
rcr
das
push
aaa
or
lcall
xor
jbe
neg
sub
test
or
inc
out
jmp
xor
repz
or
cmc
and
cmp
and
inc
xorb
das
sahf
cmc
xor
lods
jecxz
and
and
pop
mov
push
dec
mov
mov
mov
push
je
cli
and
cmp
repz
bound
add
jmp
mov
es
jae
hlt
adc
jne
ret
hlt
xchg
mov
clc
imul
adc
inc
pop
fistps
mov
adc
scas
or
pop
mov
pop
cmp
arpl
pop
es
pop
pop
out
sbb
iret
jae
imul
xlat
lret
jne
imulb
shl
xchg
gs
loopne
pop
pop
movsl
fcoms
adc
pop
lods
lahf
loope
cli
arpl
imul
or
push
add
pop
fnstcw
lret
push
push
aaa
ds
xchg
xchg
add
jl
xchg
cmp
cld
movsb
cmp
jnp
cmp
mov
imul
pop
shlb
sbb
daa
cld
mov
lcall
call
jns
push
clc
clc
xchg
mov
arpl
mov
outsb
cmpsb
or
cwtl
dec
out
pop
adc
or
out
imul
cwtl
fidivs
es
movsl
test
push
cmp
pop
rclb
sti
dec
jns
mov
lea
sbb
rolb
jmp
and
dec
and
imul
ljmp
push
mov
add
jbe
pop
fs
pop
sub
mov
test
cmpsl
popf
and
fimull
rcr
cli
lea
push
fistpl
testb
xor
test
push
test
sbb
adc
mov
cltd
cmc
mov
adc
mov
xchg
dec
out
movsl
dec
bound
in
gs
inc
ja
adc
xchg
pop
inc
cmpsb
dec
rcll
cld
dec
ret
subl
and
mov
icebp
popa
lods
adc
cmp
repnz
int
das
mov
loopne
pop
sub
jmp
or
jg
in
stc
push
repz
push
hlt
push
push
pop
push
or
or
mov
xchg
ficoms
jecxz
sbbb
push
scas
movsb
lret
xor
inc
and
xorb
add
xchg
das
jmp
aad
xor
sub
bound
pop
adc
ret
xchg
mov
push
xor
outsl
and
jmp
mov
rorl
leave
mov
loope
jo
jae
xor
mov
insb
or
adc
in
pop
pop
loopne
lock
lds
jle
mov
cld
hlt
mov
xor
dec
pop
mov
mov
in
outsb
jg
into
xchg
rcl
addl
mov
xrelease
sub
addr16
das
in
out
fmull
and
bound
lcall
pop
in
xchg
and
and
test
adc
scas
lret
outsl
cmp
stos
test
xor
insb
mov
rolb
jmp
mov
cmpsb
xor
lock
mov
subl
cmpl
pop
notb
push
dec
xor
sbb
jg
das
lds
pusha
rcl
jbe
and
les
jbe
iret
or
push
pop
pop
sub
sbb
mov
pusha
mov
sbb
inc
jmp
cmp
insl
xchg
xchg
push
imul
in
inc
fwait
aad
sub
jae
xchg
loop
nop
jl
sub
repz
mov
loope
cltd
add
mov
mov
push
sbb
sahf
push
and
pop
mov
test
lret
ljmp
xchg
push
stos
sub
and
cmp
dec
sbb
push
push
dec
cmpsl
loopne
movsb
and
fistpl
pop
mov
sbb
cmpsl
decb
test
fnstenv
data16
cs
sti
mov
cs
call
fstpl
dec
movsb
arpl
dec
and
ja
lret
es
into
cli
mov
outsb
mov
imul
insl
fsts
lds
pop
pop
ss
jns
pop
jg
sub
mov
insb
rclb
push
sbb
cmp
test
pop
movsb
lahf
sub
lcall
push
je
jmp
mov
fidivrs
sub
jae
inc
jae
in
sub
xchg
mov
js
fsub
and
push
aas
xchg
push
push
cmp
fnstcw
jmp
and
push
hlt
push
lret
outsb
add
push
shll
movsl
cs
sbb
call
sbb
push
adc
lret
inc
jnp
and
sbb
clc
bswap
mov
mov
jle
push
ret
dec
xchg
stc
int
or
out
orl
ja
add
pop
dec
repz
cmp
maxps
addr16
xor
and
pop
push
mov
shl
mov
and
mov
das
adc
jmp
dec
sbb
sub
bound
es
cmpsl
xor
subb
sbb
xor
mov
stos
ret
lods
out
sub
push
cmp
int
xchg
inc
add
fstps
test
test
cltd
push
pop
out
gs
repnz
inc
push
dec
cwtl
scas
into
ret
xchg
jmp
jo
dec
das
cmp
jecxz
xchg
in
pop
popa
in
popa
call
sbb
mov
sub
mov
repnz
cmpsl
xchg
xchg
pop
pop
gs
push
push
xchg
cmpsb
inc
cmp
fs
push
dec
pusha
enter
je
mov
das
adc
sti
outsb
jo
lds
popa
cs
pop
out
int
xor
icebp
cmp
mov
mov
jo
adc
cmp
aam
scas
mov
not
cmp
loope
jns
nop
adc
jnp
add
arpl
test
test
or
imul
mov
out
rcr
mov
divl
fists
pushf
sahf
mov
adc
fcoml
add
shrl
jno
lahf
xchg
sbb
dec
mov
mov
inc
in
or
shll
out
xchg
sub
aam
mov
dec
mov
jle
fnstenv
testb
push
mov
sub
pushf
mov
fdivrs
repz
adc
in
cld
loop
or
int3
sub
add
sub
mov
sub
pushf
mov
insb
lods
movsb
test
jl
in
adc
add
and
sub
divb
sub
add
xor
lds
jp
xchg
add
test
insl
cld
aaa
mov
sub
icebp
pop
jp
lods
cmp
push
mov
imul
push
pop
lods
or
xor
idivl
adc
scas
cld
push
out
mov
iret
imul
mov
mov
test
idiv
mov
adc
adc
orl
mov
lret
lret
xchg
xchg
inc
pop
xchg
push
cmp
sub
push
pop
int3
dec
rcrb
das
mov
test
dec
jle
jns
cmp
std
and
dec
jg
adc
lret
push
jb
bound
mov
scas
xor
xchg
mov
leave
gs
cmpsl
dec
or
pop
enter
cmp
jbe
in
pop
push
or
pusha
xchg
testl
inc
cmpsb
daa
mov
mov
jno
sub
jo
xor
pop
shll
jl
dec
stc
adc
je
jne
popf
js
cltd
aam
dec
stos
cmpsl
xchg
jmp
cvtdq2ps
pop
test
mov
shrl
xor
inc
cmp
mov
test
mov
dec
pop
jp
mov
into
ret
fstl
or
push
imul
jecxz
mov
push
imul
add
cmp
enter
add
or
xchg
das
sub
jo
test
divl
pop
cld
cmp
inc
dec
xchg
aaa
push
jne
pusha
mov
int3
push
inc
out
cmp
test
repnz
jg
movsl
pop
sub
out
xchg
adc
xlat
mov
mov
xor
mov
mov
repz
inc
rcl
data16
mov
test
and
sbb
push
add
roll
inc
and
pop
mov
sbb
or
sub
ljmp
je,pn
popf
adc
sub
push
sbb
fs
sbb
cmp
adc
es
imul
movsb
lods
push
shl
outsl
jg
xchg
mov
aaa
and
out
mov
rcr
fstpt
shll
push
cltd
push
hlt
cltd
push
std
xchg
push
inc
or
pop
xchg
push
mov
mov
sbb
lret
out
push
add
push
mov
sarb
add
je
sbb
std
pop
cmp
mov
fcoms
lds
shrb
loopne
push
mov
inc
push
add
inc
mov
in
loopne
sub
mov
xchg
movq
shl
loopne
push
fisttps
scas
idiv
cs
add
pop
xorb
decl
and
xchg
sub
imul
pop
aas
int
push
mov
cs
adc
loopne
js
das
dec
xchg
test
dec
or
push
cmp
pusha
or
idivl
cli
sub
ja,pt
sbb
add
dec
mov
sub
rcl
aam
incl
mov
xchg
cs
imul
ljmp
aam
adc
inc
aaa
je
xchg
inc
fwait
aad
ret
insl
xchg
push
mov
sub
or
jae
and
js
test
pop
push
mov
loopne
cmp
and
std
mov
mov
xor
out
adcb
inc
mov
inc
cmp
out
jno
out
pop
clc
cmpsl
ss
push
sahf
mov
rorb
mov
incl
jno
loopne
sbb
dec
popf
cmp
sub
and
or
mov
out
scas
inc
adc
lcall
add
dec
jle
int
inc
addl
cmp
adc
into
sub
lahf
sub
and
test
test
sbb
sbb
addr16
lcall
pop
mov
and
xorb
dec
adc
cltd
int3
adc
loop
pop
ret
pop
lret
xchg
xchg
jl
mov
mov
xchg
test
sub
mov
shll
dec
dec
jl
mov
sbb
imul
jmp
out
pushl
adcl
loop
jns
loope
subl
into
pop
scas
sti
xor
dec
stgi
jb
into
shlb
dec
inc
sti
sub
sahf
shlb
dec
sub
test
adc
xor
inc
and
movsb
push
ret
out
jle
dec
in
imul
sbb
gs
jle
leave
flds
daa
shrb
mov
inc
inc
das
mov
push
gs
xchg
mov
scas
clc
adc
sbb
dec
mov
dec
push
mov
xor
push
fs
imul
shlb
fsubl
outsb
dec
push
and
xor
jmp
into
hlt
daa
lahf
sub
out
adc
cmp
faddl
fdivrs
add
lods
cltd
in
lcall
cmpsl
mov
xchg
adc
aad
iret
cmc
cwtl
mov
repz
and
or
pushf
out
cltd
test
bound
call
inc
inc
sarl
jecxz
add
ds
push
pop
inc
add
addr16
mov
sub
sbb
lock
sti
jae
jno
mov
ret
push
aas
jecxz
rolb
fiaddl
dec
push
scas
fldt
xchg
sub
push
mov
mov
mov
nop
iret
test
cmp
mov
in
pop
out
add
leave
cltd
cld
rolb
call
mov
dec
sub
adc
or
add
pop
repnz
outsb
jmp
and
jge
mov
jnp
xchg
mulb
cmp
xor
mov
jmp
lods
cmovge
mov
insl
add
cmp
push
dec
loop
and
cwtl
xor
out
call
cmp
inc
movsb
in
xor
jge
lahf
in
mov
xchg
mov
inc
repnz
loop
adc
push
and
outsl
inc
inc
mov
stos
and
jge
aad
cmp
dec
sub
sub
imul
js
fnsave
xor
or
fwait
xchg
lods
iret
and
mov
mov
jns
lahf
into
inc
mov
pop
mov
ret
adc
push
push
mov
inc
inc
jmp
push
pop
mov
jns
jecxz
jle
test
mov
mov
push
sti
bound
lret
adcb
xchg
sub
xor
ret
jbe
lret
jbe
cli
hlt
sub
cmpsb
cmpsb
dec
test
outsb
int3
add
cmp
addl
xor
and
push
aas
dec
into
dec
out
mov
pop
lret
and
cli
loope
mov
jle
adc
push
push
dec
mov
mov
fimull
push
imul
sbb
subb
leave
inc
in
sub
insb
pop
cmp
rcr
pop
or
insl
cmp
mov
scas
mov
sbb
lcall
icebp
jmp
daa
dec
jl
aad
add
pop
push
cld
rol
imul
jecxz
adc
mov
adc
xchg
test
sub
push
or
fwait
jmp
and
pop
sub
inc
ret
enter
xor
test
mov
dec
subl
pop
cli
jge
sbb
or
xchg
lcall
pushf
mov
jecxz
sub
loop
mov
inc
push
mov
add
test
xorl
addr16
aad
lahf
ja
mov
lds
mov
sbb
mov
mov
jne
xchg
cwtl
add
lock
add
push
das
in
pop
repz
jg
hlt
push
and
addr16
cmp
outsl
in
fiaddl
dec
rolb
and
and
clc
daa
fildl
xor
jnp
out
pop
imull
fisubrl
in
push
arpl
aas
push
imul
sub
test
ret
in
imul
lods
scas
cld
nop
inc
xchg
add
xchg
xor
xor
aaa
btc
dec
cmp
leavew
call
lret
jge
cwtl
jbe
gs
xchg
outsl
adc
fcomps
scas
lods
out
movsl
adc
cmpsb
pusha
in
cmpxchg
je
add
pop
int
adc
sub
sub
shrl
dec
and
add
dec
pop
mov
movsb
dec
and
out
aam
movsl
adc
loop
mov
lret
lock
into
loopne
and
repnz
scas
repz
pop
dec
push
xlat
push
sub
hlt
daa
fdivrs
push
jl
or
roll
movsl
sbb
sub
jne
fiadds
jae
aad
and
jecxz
jmp
dec
mov
mov
pop
ss
push
cld
std
pop
cmp
cmp
mov
test
and
std
dec
adc
lods
mov
out
push
lds
pop
mov
mov
xchg
xlat
mov
dec
fwait
pusha
enter
mov
mov
mov
imul
movsl
enter
stos
out
aam
mov
add
mov
dec
inc
xchg
das
shlb
shrl
mov
daa
push
jnp
inc
clc
push
pop
xor
call
pop
clc
adc
mov
or
push
leave
jl
inc
jmp
adc
adc
and
pushf
adc
push
fdivrl
adc
and
and
adc
mov
cwtl
inc
loop
lcall
lods
fisttps
push
lret
or
mov
push
movsl
movsl
lahf
push
out
mov
jnp
jno
cmp
xor
and
movsl
scas
sub
jl
jnp
dec
xor
notb
sbb
stos
mov
iret
js
mov
das
pop
add
popa
sti
mov
cltd
and
push
push
iret
push
mov
add
test
aad
or
xor
lret
adc
mov
add
jmp
or
dec
ror
sub
pop
out
imul
sbb
cltd
arpl
cs
loope
jle
shrb
out
xor
jp
and
jecxz
mulb
lds
fildll
mov
std
push
or
cmp
xchg
stc
mov
ss
inc
jg
pop
imul
stc
cltd
jbe
cwtl
add
push
pop
int3
pop
lret
addr16
xchg
test
jo
pop
xor
adc
ss
movsl
ret
in
mov
mov
lahf
sbb
out
mov
arpl
xchg
mov
mov
cmp
ja,pt
inc
mov
in
cmp
xor
mov
mov
push
or
test
push
cli
add
fimuls
xor
shlb
mov
fsubr
lock
dec
sbb
push
mov
jns
jbe
jne
jno
xor
jge
cli
xor
das
pop
movsb
dec
lock
push
nop
popa
mov
and
xor
daa
in
nop
adc
stc
ds
and
sub
test
loopne
sub
jg
hlt
bound
push
dec
mov
or
stos
ficoml
vpsrld
push
mov
add
test
loop
cs
jge
jns
dec
fimull
or
cmp
stos
addr16
sbb
xlat
sub
pop
test
fsts
addb
cmovg
inc
test
movsl
cmp
and
notb
sbb
ret
fldenv
adc
xchg
sub
mov
jae
xchg
cmp
fistpll
into
stc
jmp
sub
dec
outsl
inc
cmp
rcll
mov
xor
loope
orl
xchg
dec
pop
notl
testb
pusha
sbb
sub
jmp
cmc
mov
lret
jmp
js
and
stos
jo
lock
in
mov
xor
sbb
pop
sub
pop
outsb
jo
hlt
and
pushl
hlt
bound
loop
sub
sbb
and
add
cltd
mov
add
mov
xchg
sbb
loope
xchg
loope
mov
fsubr
inc
ficompl
and
lgs
pop
ret
aam
xchg
das
mov
xlat
jae
push
push
add
cltd
push
icebp
cmp
xor
mov
loope
shrl
outsb
dec
jnp
cs
xor
fistpll
bound
roll
shl
sub
out
imul
ret
push
ja
pop
scas
cmp
dec
mov
arpl
clc
lret
aaa
mov
mov
inc
test
push
mov
cli
push
xchg
cmpsb
push
push
mov
icebp
addr16
add
sbbb
sub
dec
cmp
sbb
mov
mov
pop
inc
jns
jle
jb
repz
std
push
js
push
out
mov
dec
mov
push
cwtl
in
hlt
sbb
push
cmp
adc
cmp
in
pop
je
jge
xchg
int
xor
mov
and
rolb
mov
stos
lret
xchg
cmp
pusha
cmp
pop
xchg
aas
repz
cs
or
into
adc
lods
jo
cs
sbb
loope
je
and
or
aaa
mov
inc
inc
lret
mov
xor
and
push
repnz
dec
imul
ss
xchg
ss
leave
jle
adc
or
sti
jo
hlt
sub
xor
mov
incl
mov
ror
imul
in
xlat
pop
data16
cltd
flds
dec
sub
adc
xchg
push
sti
cmp
shll
out
sub
adc
repnz
in
icebp
fndisi(8087
dec
les
mov
das
das
cmp
ficoms
mov
sub
dec
das
andb
sub
cmp
mov
push
sbb
mov
mov
in
out
out
pop
sub
stc
push
loop
mov
inc
enter
faddl
lret
xor
call
sbb
out
ss
in
stos
xor
push
cmp
aam
repz
out
int
iret
push
shlb
add
into
into
insl
xchg
js
dec
jge
call
inc
inc
jae
testb
cmp
pop
mov
adc
ja
pop
inc
push
jp
add
mov
pop
stos
xchg
ret
es
aas
sub
sarl
push
inc
adc
push
rolb
mov
cmp
push
dec
add
aas
cmp
lods
xchg
inc
xlat
adc
dec
xor
fs
mov
xor
out
popf
inc
pusha
push
shlb
std
mov
in
aad
add
xor
in
pop
inc
popa
xchg
in
mov
lods
mov
xor
iret
mov
test
mov
inc
mov
out
in
inc
scas
ja
sbb
mov
pusha
call
cmp
in
repz
popw
xchg
fiaddl
lret
xchg
dec
jmp
out
sub
loope
or
add
pop
stc
leave
leave
jae
xor
fidivl
dec
cld
xchg
or
sub
sbb
mov
jb
mov
mov
daa
imul
xchg
sbb
xlat
and
dec
and
cmpsb
jbe
push
mov
repnz
xlat
dec
and
mov
repnz
and
or
je
ja
mov
mov
in
repz
mov
or
xchg
and
in
mov
add
ret
pop
add
repz
shrl
popl
xor
imul
mov
sub
sub
addr16
repnz
inc
mov
in
je
int
push
insb
jl
fucomip
mov
cmp
xor
jb
sbbb
in
repnz
jg
popa
and
aam
push
ret
rcrl
test
push
lds
andl
loopne
xor
adcb
test
inc
sub
push
sbb
push
adc
hlt
std
inc
dec
push
dec
jb
in
mov
mov
imul
in
xchg
lret
mov
mov
push
imul
push
xor
rclb
mov
and
fimull
cld
push
xor
nop
inc
hlt
mov
pop
in
add
inc
xlat
push
int
ficompl
or
fbstp
dec
adc
popl
inc
and
dec
mov
pop
fisttpl
cld
xor
sub
or
push
mov
ret
lods
pushf
ss
push
jp
dec
dec
add
mov
mov
lahf
mov
rclb
xlat
bound
inc
leave
lock
test
insl
dec
jmp
xchg
adc
popa
push
insb
sbb
idivl
dec
add
loopne
push
mov
sarb
pop
dec
sub
lahf
mov
inc
fs
and
xchg
imul
sub
dec
adc
push
in
subl
popf
movaps
nop
outsb
gs
mov
sub
pop
ret
gs
adc
or
flds
repz
and
inc
and
mov
lea
push
pop
ret
mov
xchg
dec
call
cltd
and
aad
ret
or
loop
pop
add
rcrl
jb
sub
int
sub
xor
mov
imul
or
or
sahf
push
push
das
ficoms
xor
mov
pop
flds
pop
pop
sub
out
daa
loop
mov
inc
mov
mov
push
push
cmpsl
test
mov
inc
sub
ja
or
out
push
out
add
xlat
adc
fwait
ret
and
test
dec
push
stos
mov
jnp
rcrb
fmull
sub
pusha
ret
cmp
daa
outsl
xor
adc
mov
xor
lcall
test
mov
xchg
add
sub
pop
xchg
sarb
add
in
test
fnstsw
jns
jp
xchg
stos
jg
inc
fldl
push
sti
xor
mov
adc
sub
aam
shrl
cmp
pop
fldl
mov
in
xchg
mov
stos
ficoml
ljmp
xchg
mov
cwtl
push
loope
leave
rclb
loope
stos
jp
das
int
mov
repnz
out
and
mov
popa
repz
jae
mov
lods
repz
adc
sub
dec
lcall
xchg
jns
lahf
repz
mov
jbe
jp
adc
aam
mov
mov
cmpsl
mov
dec
push
imul
push
pop
sahf
jb
icebp
sti
xchg
cli
outsl
mov
mov
dec
inc
mov
subb
and
les
lret
subb
jns
dec
dec
stc
push
xor
gs
jae
xchg
xchg
mull
daa
jecxz
movsb
lret
outsl
or
fisttpl
fs
pop
fsts
jns
adc
shlb
or
call
sar
lods
movsb
das
data16
mov
aam
inc
push
add
and
movsb
sahf
repz
fcompl
adc
dec
das
sub
cmp
sahf
jae
aaa
aam
and
icebp
pushf
cmp
in
jno
shlb
mov
ljmp
xchg
cld
pop
rcl
pop
mov
scas
mov
adc
ss
mov
or
mov
cltd
aam
out
xchg
inc
andl
mov
testl
xchg
mov
and
gs
dec
mov
pop
cmpsl
in
adc
rolb
loopne
cli
cmc
es
mov
mov
jle
les
cmp
imulb
stos
inc
cmpb
out
popa
loop
mov
mov
adc
xchg
xchg
mov
insb
idivl
sahf
inc
es
inc
notb
out
scas
scas
scas
cmp
add
insl
xor
pusha
fst
push
adc
xorb
shrb
sbb
jl
lock
inc
mov
std
lods
aaa
dec
ja
add
dec
add
jbe
jle
jbe
repz
js
jp
mov
inc
xchg
inc
jle
es
pop
dec
or
cmpsb
adc
imul
cmpsb
cli
aad
out
lret
xor
sbb
fdivl
cwtl
das
arpl
mov
xchg
std
das
daa
aam
fdivrl
inc
jge
fs
xor
addl
cltd
mov
xor
or
push
insb
stos
jl
xchg
out
adc
out
jb
repz
repz
nop
pop
ret
aas
hlt
mov
popa
xchg
push
addr16
adc
push
pop
loopne
dec
jg
dec
pop
outsb
mov
adc
sbb
add
fldcw
movsl
js
out
sbb
jmp
cmpb
into
adc
test
sbb
mov
test
push
out
pop
mov
clc
inc
rcl
fidivrs
je
or
iret
jl
loope
pop
mov
int3
mov
jge
icebp
sub
imulb
loopne
mov
and
xchg
loop
xchg
mov
test
mov
out
hlt
adc
mov
xchg
icebp
aam
add
or
sub
mov
jecxz
mov
stos
es
xchg
push
cmp
shlb
and
movsb
adc
lods
pop
add
push
or
outsb
rcr
mov
inc
data16
xchg
mov
xor
mov
jmp
mov
fistpl
pop
add
popf
jo
mov
mov
fucomp
fucomp
rclb
inc
pop
push
add
and
adc
pop
dec
adc
push
xchg
ds
mov
push
fdivl
sbb
add
jno
leave
fnstsw
scas
inc
and
outsb
outsl
retw
in
jae
icebp
inc
ss
mov
lea
jns
or
daa
and
mov
add
xor
or
iret
cli
xor
nop
sub
push
fnsave
xor
jp
jge
xchg
loopne
out
pop
or
mov
out
cmp
bound
jno
adc
cld
cld
xchg
add
bnd
xchg
test
xchg
jl
dec
sbb
push
stc
loopne
pushl
lods
test
test
add
dec
scas
aas
jp
pop
pop
sub
ljmp
insb
mov
subb
jl
mov
mov
fsubs
ljmp
sub
loopne
push
scas
fimuls
add
jmp
mov
xchg
add
jbe
dec
xor
fcompl
pop
push
repnz
stc
add
dec
out
fs
stc
sbb
mov
or
shrl
pop
mov
sbb
negb
add
mulb
push
fidivl
leave
popa
lcall
mov
ds
test
add
or
enter
inc
outsl
ja
cmp
mov
pop
dec
cli
or
out
dec
or
sahf
repnz
inc
dec
jbe
cld
adc
mov
xchg
scas
pop
mov
inc
imul
stos
xor
call
frstor
scas
ljmp
mov
xchg
mov
and
sbb
stos
dec
jbe
cltd
dec
popf
mov
mov
add
mull
sbb
fwait
xchg
xor
add
xchg
xchg
lcall
stc
sub
push
mov
fsubrl
out
hlt
out
paddsb
mov
jecxz
sbb
push
jecxz
test
mov
cld
xorb
lahf
repz
cmpsl
mov
mov
sahf
test
scas
mov
and
pop
out
hlt
xor
and
lret
lock
mov
out
cmp
out
int
movsb
imul
add
jns
mov
int3
addr16
das
dec
or
dec
mov
pop
pop
test
dec
pop
push
lret
popf
push
jp
aas
xor
jg
ret
dec
notb
popa
mov
std
dec
sahf
jg
ds
xor
pop
int
dec
loop
add
popaw
pop
pop
cltd
jecxz
in
ds
inc
lcall
ja
push
push
sti
and
stos
dec
dec
ljmp
aaa
fs
mov
pop
sbb
and
pushf
lds
in
push
mov
rcr
mov
addr16
pop
lahf
mov
lea
scas
dec
dec
notb
ljmp
pop
push
ret
mov
imul
jbe
arpl
xchg
pop
pop
into
xor
or
mov
sbb
mov
std
movsl
jae
mov
icebp
pop
push
jo
notb
ret
cwtl
jl
push
pop
xor
imul
aam
inc
es
or
sbb
cmp
js,pt
repz
test
iret
popf
sbb
sbb
mov
push
lods
out
int
mov
nop
fisttpl
rorb
mov
pop
gs
je
or
es
cltd
and
adc
repnz
adc
iret
or
mov
cmp
adc
dec
add
dec
push
jnp
es
loopne
inc
pop
pop
mov
jne
in
aad
pop
cmpl
lds
push
jnp
ja
mov
or
pop
sub
in
xor
or
cwtl
jnp
mov
adc
mov
leave
ret
cmp
sub
lods
leave
scas
test
fbld
sbb
pop
push
daa
das
sbb
add
xor
jmp
sbb
daa
cmc
sahf
test
out
outsb
push
jge
pushf
mov
mov
adc
gs
and
mov
lods
mov
test
sub
test
push
cmp
inc
adc
dec
dec
fnsave
adc
jbe
or
dec
mulb
jmp
jle
aas
xchg
les
xor
mov
jecxz
dec
lock
or
cs
and
add
jbe
enter
xchg
lahf
cmc
inc
jno
daa
push
lret
xchg
push
rcrb
inc
or
lods
icebp
imul
jns
mov
cmp
addr16
popf
rcrb
int
loope
data16
cmp
shrl
sub
mov
jne
or
in
push
lcall
mov
clc
aaa
repz
sub
xchg
rcll
sahf
scas
pop
xor
sub
int
mov
xchg
dec
out
jno
xor
cli
push
xchg
mov
test
inc
fidivl
dec
and
push
cltd
enter
cmpsb
fbstp
dec
inc
popa
sub
inc
imul
or
pop
sbb
rcr
pop
xadd
pushl
mov
test
fdiv
lea
rorl
push
lock
jmp
int3
sub
mov
inc
mull
out
shl
mov
xchg
movsl
leave
mov
icebp
mov
or
push
add
rcll
add
je
sub
add
dec
and
scas
add
mov
inc
in
xor
jnp
inc
inc
rclb
or
or
aad
aam
jno
rcrb
in
mov
repnz
jns
ficoms
ficompl
sti
mov
push
test
xor
scas
dec
push
bound
and
out
movsl
shrb
mov
xor
dec
jle
dec
mov
mov
lea
arpl
dec
jns
in
dec
mov
mov
rcll
xchg
sbb
out
jb
push
lods
test
jne
push
pop
mov
incl
leave
mov
call
jmp
jmp
ljmp
fsts
testl
or
in
clc
mov
outsb
mov
lret
mov
cmpl
lods
test
push
mov
sbb
loopne
push
mov
call
scas
push
xor
inc
cmp
or
jle
push
ljmp
imul
shlb
idivl
ret
jns
insb
imull
repz
bound
push
push
gs
scas
ja
dec
push
js
inc
test
inc
push
test
lcall
lret
pop
mov
pop
jmp
roll
and
or
mov
pop
hlt
mov
popa
data16
ret
xchg
mov
cli
loope
sti
enter
push
add
jno
jns
adc
push
imul
and
mov
push
das
int3
lea
popa
pusha
scas
je
adc
add
shll
cmp
jecxz
cmp
cmpb
mov
mov
jae
ja
das
cmp
lahf
lods
andl
jg
mov
lods
and
rolb
mov
dec
loopne
outsb
mov
cli
cmp
dec
inc
jns
xchg
dec
fcmove
push
add
aas
iret
pusha
ss
insl
xlat
fldl
divl
or
xchg
mov
sbb
test
mov
loope
fstl
insb
stc
sahf
icebp
lahf
jg
mov
bnd
insb
roll
ja
jnp,pn
pop
sti
hlt
dec
sahf
mov
mov
testb
repz
mov
fcoms
negl
popf
cmp
daa
jl
js
insl
in
dec
arpl
lock
cltd
lods
inc
lock
aad
sub
ret
int3
or
xchg
pop
mov
xchg
pop
jb
jge
jmp
aas
push
test
push
out
adc
js
push
xor
mov
outsl
and
rcll
jbe
adc
push
adc
adc
mov
repz
fwait
mov
mov
add
cltd
movsl
mov
and
sbb
cmc
loop
ljmp
mov
addr16
pushf
aaa
loop
add
sub
push
pop
call
mov
push
cltd
sbb
clc
out
insb
xchg
inc
sbb
push
bound
push
mov
pusha
lods
sbb
or
lds
cs
dec
and
xchg
fnsave
test
jl
ja
cld
or
leave
fucomp
sbb
fcompl
sbb
push
in
fcmovnb
ljmp
cmpsl
cmp
pop
pop
inc
jbe
cmp
sbb
add
mov
popf
adc
mov
pop
sahf
lcall
dec
dec
mov
js
std
xchg
add
sub
adc
ret
test
pop
xchg
out
inc
lcallw
fldz
cmpsl
sub
xchg
imul
call
cmpsb
mov
add
or
hlt
clc
iret
pop
or
sub
dec
or
push
push
xchg
rclb
push
xchg
shll
xchg
in
lret
inc
sub
mov
int
jbe
sbb
invd
jb
divb
add
or
dec
ljmp
js
int
cwtl
sub
in
push
movb
adc
xor
xlat
mov
mov
test
xor
out
jmp
fsubrp
mov
arpl
jae
xchg
frstor
adc
mov
bound
adcl
mov
cmpsb
clc
pushf
xchg
cmp
pop
mov
out
or
les
icebp
jl
pop
sbb
sub
mov
push
and
bound
pusha
push
shll
inc
push
mov
das
out
int
daa
scas
out
mov
mov
ds
jo
adc
jmp
aaa
fs
in
jns
je
int
arpl
filds
pop
sub
pushw
in
fiadds
xchg
sahf
dec
xor
xchg
lahf
adc
sbb
lcall
dec
add
ss
lret
push
out
popa
lds
mov
test
cmp
or
lahf
cmp
mov
ljmp
frstor
fisubrl
mov
push
loop
mov
outsl
mulb
stos
inc
inc
cltd
daa
lea
sbb
pop
call
hlt
clc
sarb
mov
mul
xor
dec
call
or
pop
int3
xchg
xchg
or
push
xchg
lds
enter
loop
xor
sub
jmp
je
push
popf
mov
or
jmp
test
leave
stc
mov
test
mov
pop
je
loop
inc
and
lret
lret
je
pop
call
jmp
cmp
jmp
cltd
add
or
push
out
enter
decb
xchg
jb
jle
pop
cmp
fstl
lds
outsl
and
rclb
dec
inc
out
pop
pop
daa
cmp
mov
cmp
stos
ret
adc
cmp
aas
mov
and
xchg
bound
mov
pop
xlat
lock
pop
out
ret
jle
and
inc
xorl
xor
push
push
dec
aaa
ds
leave
fidivs
in
mov
outsb
lock
add
fiaddl
movsb
pop
cmp
in
ret
sub
sub
fldlg2
test
pop
inc
movd
repz
add
add
lods
jne
sub
shll
cmpsl
pop
mov
push
xchg
push
mov
sub
sub
xchg
shll
gs
insb
das
loop
pop
mov
sub
adc
ds
out
inc
push
fdivl
lock
rol
cmp
into
add
sarb
push
leave
stc
push
les
int3
pushf
in
ret
sub
inc
stc
inc
je
push
or
andb
sub
cmp
xchg
hlt
imul
push
dec
xchg
xchg
and
loopne
add
data16
fcompl
adc
and
push
or
and
movsl
mov
xor
and
insb
shrb
mov
mov
push
mov
xor
leave
out
sub
test
test
ds
sub
pop
fsubr
adcb
adc
fcoms
in
mov
xchg
shll
push
fistl
dec
mov
inc
call
std
add
dec
sti
xor
fsubrl
jecxz
dec
rcl
testl
add
push
xchg
subl
fwait
scas
and
mov
lahf
dec
mov
dec
ds
cmpsl
mov
aad
sub
sub
sub
jl
out
shl
stc
or
lods
cmpsb
or
xchg
loopne
dec
stos
pop
pop
xchg
jb
cmpsb
mov
push
ss
inc
push
stc
test
push
cmpsb
ja
ret
mov
dec
pop
in
jne
mov
mov
hlt
sti
mov
mov
push
mov
pop
insb
push
popa
pop
nop
cmovb
xchg
push
arpl
loop
cmp
add
cmp
insb
jnp
js
pop
mov
rolb
pop
mov
call
mov
inc
push
xchg
js
push
jb
cmp
jmp
outsb
add
inc
rorb
out
or
rcl
jno
aam
dec
pusha
fs
cmp
in
sbb
test
pop
lret
cli
push
or
and
inc
loope
aas
in
aas
rorl
andb
imul
mov
xchg
pop
lahf
pop
ljmp
adc
or
mov
pop
clc
mov
push
popf
push
xor
pop
adc
nop
push
popf
das
cmpl
sub
outsb
iret
mov
lea
sarl
jg
xchg
dec
test
test
scas
out
jnp
sub
inc
jbe
jns
sub
outsl
sub
mov
adc
and
jae
mov
sbb
sbb
mov
nop
dec
add
pop
ficomps
xchg
xchg
lods
mov
stc
and
add
call
sbb
inc
sub
lahf
in
test
imul
int3
cmp
jmp
mov
cmp
mov
sub
scas
jecxz
rcrb
lods
jmp
das
leave
push
inc
rorl
push
add
cli
cmpsl
lods
ret
jle
sbb
and
push
and
das
jge
bnd
xchg
scas
pop
cwtl
mov
jge
mov
jge
or
add
xchg
cmp
hlt
js
jb
or
or
push
lea
pop
lock
lods
into
lret
pop
inc
into
jns
in
jae
xor
sahf
jp
xlat
daa
cmpsl
lcall
pop
xor
mov
xchg
pop
sub
nop
add
mov
xchg
aad
imul
pusha
lock
mov
ret
std
andb
rolb
push
outsl
leave
push
mov
out
jg
movsb
mov
movsl
xor
fstps
fidivrl
scas
vpmulhuw
jge
aaa
pop
pushf
mov
roll
dec
mov
add
mov
fildll
adc
pop
inc
xchg
xchg
outsb
shl
dec
xor
sbb
xor
push
hlt
fldcw
call
lods
fsub
int
je
in
or
mov
loopne
in
pop
mov
jle
mov
push
mov
les
and
bound
ljmp
mov
xor
dec
es
imul
sbb
in
mov
push
sahf
push
mov
leave
mov
inc
stc
dec
cmp
jne
mov
rcrb
inc
cmpsl
xorl
lods
xor
or
lahf
popf
roll
jno
les
insb
lock
outsb
mov
pop
hlt
aas
mov
mov
mov
clc
aad
aas
loope
xor
sub
cmp
and
and
xchg
aam
jae
std
leave
or
scas
and
push
jo
sbb
out
leave
dec
mov
dec
and
insb
das
sbb
in
nop
push
pusha
adc
sbb
sbb
addr16
push
adc
repz
xorb
jecxz
leave
lret
inc
push
mov
out
mul
je
or
outsl
xor
fs
xchg
mov
mov
inc
data16
or
add
xor
push
aam
out
lret
mov
cwtl
cmp
sbb
mov
and
outsl
add
scas
add
test
jmp
jbe
mov
dec
add
xor
xchg
jno
inc
arpl
mov
mov
rorl
lahf
lea
daa
jp
mov
or
mov
dec
xchg
xchg
push
xor
and
call
loope
jmp
imul
adc
movsb
or
xor
mov
or
mov
fldcw
test
jnp
leave
add
jne
mov
jne
sub
ret
jae
gs
add
aam
xchg
stos
outsb
add
mov
xorb
test
sub
push
adc
lds
mov
loopne
pop
sbb
test
addb
hlt
les
adc
jg
mov
xchg
mov
inc
lret
shr
mov
stos
test
pop
je
pushf
or
nop
pop
and
sbb
push
stc
scas
arpl
or
test
sbb
xlat
jns
inc
mov
andb
out
sbb
cmp
cmp
dec
jmp
outsb
xor
pop
rol
jl
mov
jnp
das
add
fs
sbb
push
inc
ret
enter
std
inc
push
cs
inc
dec
cmpsb
pop
pop
dec
fmuls
adc
mov
mov
inc
fnstcw
adc
stos
notb
mov
mov
int3
icebp
outsb
jmp
push
jg
pop
dec
adc
bound
fwait
addr16
lods
outsb
mov
cmp
cmp
and
jp
stos
pop
push
push
dec
adc
shl
scas
shlb
fistpll
sbbb
inc
mov
loop
dec
mov
roll
daa
sbb
lock
rorl
mov
or
push
fistps
shr
sbb
mov
mov
push
adc
and
or
fdivrp
sbb
cs
in
and
xor
dec
or
ja
jg
jns
jns
mov
jg
sbb
mov
sbbl
dec
out
add
ret
pop
xorb
add
push
mov
sahf
addr16
ljmp
pop
imul
push
addb
xchg
sbb
rcll
mov
mov
rcl
loop
jmp
xchg
mov
xor
ljmp
sub
sarb
adc
les
test
push
pop
and
xor
xlat
cmpsl
ret
into
sbb
mov
testb
sbb
pop
add
stos
loope
and
clc
inc
push
cmp
ror
sahf
clc
clc
or
jae
enter
mov
sbbb
mov
aam
add
and
and
mov
lods
enter
je
mov
addr16
add
mov
xchg
mov
cwtl
lock
jns
jecxz
pop
lahf
sbb
sbb
cmp
aas
mov
sub
xchg
stc
aas
into
or
mov
push
or
pop
jno
in
sbb
in
lahf
pop
pop
fs
inc
lret
fdivs
dec
cmpxchg
adc
mov
call
push
inc
xlat
call
or
pop
out
sbb
popa
mov
xchg
sbb
pop
into
add
mov
and
xor
cmpsl
xchg
cmp
xor
rcrl
in
or
mov
nop
in
dec
in
aam
out
loop
sub
daa
xor
mov
test
mov
dec
sub
sbb
mov
adc
jl
popf
fidivs
mov
adc
in
in
jge
scas
pop
js
xchg
jge
or
sti
pop
mull
xchg
and
enter
ret
jl
popa
mov
bnd
adc
fisubrs
adc
jge
sar
mov
and
jl
jmp
jo
stos
mov
inc
pop
pop
ficomps
jno
gs
jno
lea
nop
cld
xor
lcall
out
sub
dec
sahf
push
inc
mov
inc
sub
cld
hlt
in
out
mov
je
fbld
xor
push
addr16
les
add
adc
imul
std
or
sub
or
mov
nop
lea
and
leave
pusha
mov
xchg
mov
aam
mov
in
sbb
in
jle
out
fisttpl
and
dec
inc
roll
sbb
inc
das
cmp
loopw
adc
hlt
lods
push
xchg
and
repz
inc
test
and
xchg
sbb
xchg
in
fcom
ficompl
cmp
and
sbb
jmp
out
xchg
out
inc
fistl
ds
ds
fcmovu
das
lds
ret
xchg
subl
cld
sbb
mov
xchg
aam
xlat
fstpl
and
pushf
inc
cltd
xor
sti
sti
and
sub
cld
jne
dec
sti
push
xlat
std
dec
pop
jmp
in
mov
ret
mov
inc
jb
ljmp
sti
loopne
lahf
insl
push
mov
add
movsb
sub
jg
pusha
dec
mov
add
das
pusha
pop
imul
cli
or
sub
sbb
arpl
xchg
push
mov
xchg
mov
adc
stos
les
inc
loope
in
divl
cmp
jle
or
mov
push
addr16
in
or
pop
mov
or
divl
sbb
lcall
sahf
add
in
rolb
cmc
je
xchg
mov
push
cli
cmp
mov
xor
rcrl
rolb
xor
aad
in
lock
jl
sbb
rcr
gs
cmp
fnstsw
dec
xchg
int
mov
dec
mov
cwtl
lds
call
pop
std
cwtl
add
pop
std
cmp
inc
data16
mov
roll
mov
push
into
pop
addr16
insb
add
leave
adc
aas
adc
push
and
or
sub
icebp
addr16
pop
mov
mov
mov
lahf
sub
mull
loop
cmp
popf
dec
repnz
pop
mov
stos
das
idivl
aas
sahf
sbb
jecxz
stos
sbb
insb
cmp
std
loope
sbb
arpl
les
inc
inc
mov
push
leave
sbb
mov
outsl
scas
cmpsl
cli
sbb
nop
lret
js
andl
sub
orl
rcrl
mov
and
jp
cmp
push
mov
mov
adc
clc
push
mov
or
inc
ljmp
data16
shr
std
or
clc
pushl
loop
push
sbb
pop
insb
cld
cmp
imul
aam
push
or
clc
xchg
aam
hlt
fs
pandn
lock
xchg
and
enter
clc
sub
or
jp
push
or
add
sub
ljmp
push
pop
mov
jecxz
arpl
rclb
mov
sbb
cmpsl
leave
lds
mov
or
jns
and
es
mov
das
dec
mov
je
dec
dec
repz
or
std
mov
call
std
ss
idiv
push
push
std
fwait
mov
xorb
xchg
sbbb
hlt
lea
xchg
sbb
add
jns
xchg
lret
or
daa
das
mov
xchg
xor
fiaddl
mov
xchg
lods
scas
add
mov
inc
cmpsb
rcrl
dec
pusha
gs
pushf
push
fmulp
popa
cli
inc
jmp
fsts
scas
shrb
pusha
loopne
iret
xchg
mov
lds
xchg
push
xor
mov
cwtl
adc
inc
dec
sub
out
jecxz
test
mov
fcmovnbe
and
mov
mov
fnsave
mov
mov
xor
in
jo
pop
or
inc
inc
sbb
and
mov
adcb
in
mov
xor
mov
pop
pop
fisttps
push
insl
sbb
test
pop
or
hlt
sbb
out
out
xchg
call
cli
xchg
mov
sti
xor
jp
mov
cmp
out
mov
add
scas
cmpsl
imul
sub
inc
push
test
push
push
mov
jmp
xor
in
test
and
inc
or
cld
xchg
pop
xor
mov
lret
fidivrl
mov
push
imul
adc
fldl
sub
mov
decb
les
sbb
inc
lcall
xor
mov
shlb
xchg
and
test
xchg
shlb
cwtl
mov
das
ret
pushl
js
dec
movsl
out
mov
loope
push
leave
in
sub
mov
adc
cli
xor
pop
mov
setne
std
dec
test
cwtl
mov
pop
test
fmulp
inc
imul
aad
es
pop
call
repnz
adc
cs
sbb
cmpsl
adc
mov
xchg
int3
jae
add
xchg
ss
int3
xor
imul
xor
imul
pop
and
jge
leave
mov
hlt
fldt
movlps
cmpsb
iret
mov
arpl
adc
xor
cmpsl
push
xor
jae
fisubrl
xchg
xchg
out
push
sbb
xor
cltd
inc
or
lret
loope
xchg
jnp
lods
stos
cmpsl
pop
loopne
xor
je
mov
inc
leave
loope
push
xchg
pop
mov
xor
int3
mov
mov
dec
into
cmp
xchg
in
out
cmpb
mov
pop
pop
lret
shlb
xchg
movsb
mov
and
lods
push
pop
mov
or
xchg
ljmp
sub
stc
testl
sbb
cld
mov
mov
bound
xchg
mulb
mov
jo
push
inc
cltd
out
pop
mov
lea
ret
stc
fwait
cmc
xor
inc
stc
inc
ret
mov
ret
mov
add
loop
and
dec
xchg
lcall
pop
mov
lods
fimuls
or
mov
in
push
inc
mov
push
inc
out
cmp
xor
ja
iret
dec
push
icebp
mov
mov
jge
sti
fldl
pop
iret
lret
arpl
int
dec
jb
jnp
clc
mov
test
push
mov
pop
adc
int3
test
mov
repnz
mov
dec
jo
push
and
push
jl
gs
jle
jns
test
psrad
inc
mov
loop
push
inc
or
mov
sysexit
jl
sub
jmp
hlt
mov
fwait
jno
mov
testl
jmp
cs
lds
daa
mov
jne
mulb
xchg
push
fcomip
sahf
scas
iret
mov
push
cmpsb
add
out
jecxz
adc
es
push
cmc
mov
repnz
nop
pop
jno
inc
popa
pop
push
pop
jne
ret
and
aam
imul
jo
fisttps
push
xchg
xor
mov
mov
jbe
or
pop
push
bound
xchg
push
cltd
sti
sbb
sub
jne
lods
insl
insl
in
sbb
outsb
cmp
sbb
mov
jb
adc
lret
sub
das
ja
or
xor
sbb
mov
add
je
or
lods
imul
pop
xchg
ja
popa
divl
mov
ja
sahf
jmp
popf
cld
cli
mov
leave
and
mov
mov
mov
xchg
js
cmp
fs
test
xchg
or
push
sahf
test
jge
movsb
cwtl
arpl
fisttpl
pop
push
pushf
push
out
cmp
outsl
out
test
pop
sub
mov
add
aas
ret
dec
add
shll
push
sarl
rorl
mov
pop
fdivrs
pop
mov
push
rorl
sub
les
mov
xor
add
add
sub
or
pop
les
insl
orl
add
mov
mov
aas
or
xor
lock
xor
sub
iret
movsl
call
scas
leave
test
cmp
ror
int
je
push
adc
add
mov
or
sub
inc
mov
push
popf
mov
in
mov
sbb
mov
aaa
jl
jb
pop
sub
and
xchg
lcall
outsl
test
popf
fdivrs
adc
xor
mov
call
xchg
jnp
and
pusha
mov
mov
lret
imul
or
jmp
and
jbe
aam
test
lds
pop
jne
sbb
inc
and
scas
fistpll
sbb
adc
pop
jae
cmp
aaa
in
in
fdivr
in
movsl
pop
inc
stc
out
call
xor
jge
inc
mov
or
mov
and
out
pop
add
sub
xor
mov
cmp
pop
cmp
mov
jecxz
hlt
mov
xor
mov
pop
cmp
in
in
and
sbb
cmpsl
les
xor
xchg
and
add
inc
stos
in
fisubrs
or
out
rcr
mov
scas
sub
sub
fcmovne
and
mov
shrl
or
jmp
xorl
mov
pop
insb
call
sub
imul
sub
popa
into
mov
ret
xchg
out
cmc
sub
cmovs
int3
lahf
bnd
add
push
jne
xchg
outsb
and
inc
mov
push
out
aad
out
sbb
fmull
pop
add
mov
push
movsb
cld
faddl
in
inc
or
and
pop
pop
cmp
push
es
jg
loop
das
fisubs
daa
loop
fs
iret
mov
lahf
cltd
nop
dec
xchg
jnp
dec
push
jl
imul
shrl
int
dec
subl
cmp
lret
mov
pop
fsubrl
hlt
add
push
mov
lock
cmp
leave
and
cmp
fs
scas
movsb
and
inc
into
cmp
es
adc
push
pop
fwait
lcall
adc
test
fld
fldenv
cltd
mov
scas
lods
xlat
adc
orl
push
pusha
and
xchg
jle
jbe
shll
movsl
push
dec
sbb
add
jg
nop
dec
out
in
mov
fldl2t
ret
pushf
mov
cmp
insb
mov
jl
sub
or
clc
pop
pop
and
pop
lahf
ds
enter
xchg
jge
jae
push
ds
out
aaa
mov
or
ret
jge
and
pop
push
cmpsl
mov
lahf
es
ficompl
nop
sub
pop
incb
push
jne
sbb
ret
inc
andb
int3
jmp
aad
js
aam
jecxz
jg
push
cmp
cli
nop
pusha
enter
or
xlat
arpl
pop
xlat
mov
lock
xor
pop
jl
jae
pop
loopne
push
pop
aad
lods
lea
cli
add
imul
in
ret
add
xor
leave
stos
inc
je
pop
jl
movsb
inc
gs
jnp
jl
dec
cmp
cmc
outsl
cltd
sahf
xor
movsl
mov
sbb
sub
movsl
xor
hlt
pop
jo
pop
mov
add
dec
clc
mov
mov
mov
pusha
or
int3
test
jno
mov
cmpl
xchg
jl
cmp
jg
cmc
inc
add
dec
scas
in
cmp
jmp
cmp
movsb
jle
push
xlat
movsl
dec
fsubl
cld
cmpsl
mov
mov
mov
xor
adcl
shlb
jp
loope
add
call
std
sub
ret
mov
pusha
jge
jmp
inc
aad
loope
test
out
scas
stos
jle
push
pop
dec
mov
adc
mov
mov
in
or
negb
fmull
mov
mov
fstl
mov
mov
or
or
jg
sub
sar
sub
adc
leave
xchg
sbb
pop
mov
popf
pop
push
fs
push
cmpsl
cmp
jno
inc
lcall
aas
enter
shrl
xchg
movsl
loope
sub
test
jl
mov
shll
mov
pop
inc
in
sub
lods
lcall
out
cs
add
imul
add
mov
jp
rcrb
sahf
push
insl
xchg
push
nop
mov
add
ret
ljmp
xchg
orl
je
xchg
mov
xor
sahf
push
out
fcomps
loop
push
inc
mov
cs
or
xlat
lea
xchg
push
aad
mov
push
mov
mov
adc
mov
outsb
mov
inc
adc
pop
insb
jns
adc
frstor
xchg
and
in
inc
cmovne
or
and
xchg
in
push
mov
jl
rcl
dec
sbb
inc
mov
pop
mov
xchg
fwait
aas
push
popf
adc
jmp
lret
mov
data16
fs
rcl
jmp
cmp
sbb
dec
and
outsl
js
xor
iret
jo
std
push
cmp
inc
repnz
in
cmp
movsb
pushl
pop
sbb
inc
inc
sub
jnp
iret
push
idivb
nop
int3
jno
test
adc
add
pushf
aas
sahf
pop
icebp
mov
sub
push
dec
add
out
xor
out
adc
adc
xor
les
clc
xor
dec
imul
cmp
test
movsb
stc
repnz
idiv
mov
int
mov
in
lock
test
push
dec
xchg
push
and
mov
jb
or
adc
or
pop
mov
out
sahf
ficoms
movsb
fs
repnz
arpl
sbb
ljmp
lods
mov
and
fsubr
dec
out
shrb
lret
roll
lock
mov
jns
jle
shll
mov
scas
xor
jo
nop
sub
cltd
movsl
or
mov
mov
test
cld
into
es
shll
test
xor
ret
dec
subl
xor
addr16
mov
stc
lahf
mov
mov
mov
lcall
cmp
iret
jmp
push
inc
cmpb
out
jg
mov
in
mov
dec
fneni(8087
sbb
adc
xchg
icebp
sub
lods
movsl
sub
pusha
cmp
mov
decb
xlat
xchg
mov
xchg
adc
lahf
cmc
push
hlt
jns
sub
out
in
cli
jge
inc
or
dec
jle
out
mov
jle
lock
repz
sahf
stc
daa
mov
mov
push
pushf
aam
enter
and
push
shl
repnz
data16
hlt
cmc
or
xchg
in
rcrb
bound
in
xor
ret
inc
lret
push
adc
and
cmp
and
mov
dec
sbb
loope
into
cltd
jmp
cmp
push
cmp
jge
push
cmp
cld
movsl
test
mov
push
jb
xor
imul
jb
push
pushf
pop
dec
xchg
jbe
andb
or
icebp
sbb
shrl
push
lret
sub
add
jne
xchg
pusha
mov
lcall
jns
mov
push
stc
or
nop
daa
aad
jne
enter
idivb
push
sbbb
add
push
sbb
xchg
lods
dec
int3
mov
out
or
leave
and
lcall
fucomi
mov
adc
jb
or
pop
aas
inc
jno
aad
roll
cmpsl
push
push
std
lret
sub
sbbb
inc
xor
mov
rcll
sub
xchg
push
push
andb
jmp
jns
jp
loope
cmc
pusha
push
cmp
leave
popf
adc
lds
mul
sub
out
cmp
cmp
addr16
inc
push
ret
pushf
or
and
lds
mov
call
fwait
outsl
cmp
popa
orb
test
shl
vpshab
mov
lock
out
dec
sarl
xor
loope
cmp
sbb
mov
cmpsl
ficoms
xor
cmpsb
mov
pop
test
cmp
cld
jge
aam
jns
and
mov
gs
sbb
mov
fistps
scas
mov
adc
arpl
and
mov
int
push
hlt
ret
js
xor
cli
mov
les
repnz
dec
mov
xchg
jecxz
dec
sbbb
fwait
out
shll
sahf
lds
cmp
or
push
jg
pop
mov
scas
mov
ss
dec
jo
jle
jp
mov
jp
imul
cmpsl
and
pop
fbld
and
int3
mov
jecxz
std
jp
outsl
js
or
je
adc
popf
outsb
pop
sarl
ja
dec
jp
scas
test
and
pop
pushf
and
sbb
notl
repnz
push
mov
std
sbb
repnz
outsl
les
sub
sub
imull
sbb
flds
or
divl
and
jne
gs
aad
inc
outsb
mov
movb
movsb
shrl
pop
shll
adc
sbb
test
cmp
js
outsl
je
fidivrl
mov
lods
in
and
pop
clc
lahf
lods
sub
and
loopne
cmp
or
fcom
pusha
lahf
pop
pop
sbb
push
mov
test
mov
or
mov
lock
incl
fsubl
dec
pop
fsubrl
movsl
notb
add
mov
xchg
hlt
mov
movsl
xor
push
adc
push
inc
shlb
sahf
mov
stos
out
daa
aaa
and
add
stc
and
fisubs
scas
dec
xchg
test
mov
and
popl
xorb
or
inc
push
mov
cld
dec
cld
stos
out
xor
dec
pushf
pop
adc
push
jns
mov
data16
push
ret
xchg
push
adc
stc
test
fcmovb
addr16
xorl
fs
rcrl
sbb
inc
xor
clc
in
ret
iret
and
sbb
inc
pusha
adc
fadds
ret
mov
mov
js
mov
mov
adcl
cmp
daa
jae
pop
out
mov
lret
lcall
lods
or
daa
test
pop
sbb
daa
inc
push
add
jecxz
cltd
test
insl
xor
mov
orl
mov
mov
jecxz
shlb
lock
jnp
push
sti
movsb
add
loop
inc
xor
pushf
jns
daa
fnstsw
test
xlat
dec
mov
pop
es
pushf
sbb
xchg
movb
rep
mov
std
mov
cli
and
xchg
leave
mov
loop
notb
aaa
jno
jns
push
sbb
mov
outsb
mov
mov
rcrb
leave
lret
jmp
push
mov
mov
inc
inc
sub
shl
outsl
jmp
and
jb
push
ss
insb
inc
sbb
adc
ss
jno
xchg
inc
dec
sbb
sbb
mov
movl
stos
mov
pop
sub
push
or
call
adc
sbb
std
lods
push
sbb
subb
stc
xor
or
fimuls
in
dec
mov
mov
je
lods
arpl
pop
or
push
call
inc
pop
mov
inc
pop
jecxz
ficompl
gs
mov
push
inc
sub
jecxz
sub
inc
pop
jmp
fcompl
dec
cmp
clc
loopne
rol
add
mov
out
ljmp
add
pop
xor
cwtl
inc
xchg
in
pop
cmp
mov
cmp
sub
mov
dec
mov
movsl
loope
inc
notb
cmpsl
pop
pop
dec
cmp
mov
mov
dec
gs
rorb
mov
outsl
push
sbb
pushl
mov
mov
decl
les
fwait
incb
daa
jge
pop
aam
addr16
add
shlb
inc
mov
lret
clc
negb
sbb
jbe
cwtl
sub
xor
mov
or
addr16
jl
pusha
or
js
add
mov
cmp
jl
movsl
nop
sub
lods
pop
lcall
les
sub
dec
cld
mov
pop
roll
rcll
mov
xchg
or
fists
inc
mov
popa
cmp
cmpsl
cmp
sti
and
bound
scas
mov
cmp
sub
lds
pushf
jge
and
and
dec
clc
xor
adc
sbb
add
cmpsb
pop
sbb
adc
push
in
fs
ss
aam
addr16
or
out
loopne
mov
mov
aam
fadds
push
sub
jmp
mov
or
push
daa
xor
enter
cmp
dec
repnz
repz
dec
push
pop
mov
popf
push
jmp
cltd
and
adcb
jg
aam
loopne
iret
mov
push
pop
mov
mov
inc
mov
test
sbb
inc
sbb
and
jb
lods
loop
xchg
xor
out
jae
pushf
stc
icebp
xchg
or
fstpl
or
sub
out
mov
mov
mov
jbe
shlb
arpl
sbbb
pop
xchg
xchg
mov
push
lock
movsl
fbstp
lret
mov
mov
insb
add
inc
adc
xchg
dec
stc
sub
pop
cmp
sbb
test
mov
aam
insl
jle
mov
mov
inc
cld
subl
insl
mov
out
cld
movsl
idiv
dec
sub
or
pushf
arpl
or
cltd
mov
jl
mov
aam
or
pop
push
imul
adc
jnp
imul
andb
or
pop
and
sbb
sub
and
ret
mov
push
mov
ljmp
rcrb
cltd
into
xchg
stc
xor
mov
and
loope
iret
cmc
mov
addr16
gs
repz
mov
ds
ds
jmp
jae
jne
stc
xor
enter
repz
jbe
fstpl
leave
sub
dec
ss
mov
mov
xor
pop
fisttpll
mov
jp
nop
add
subl
cmp
sarb
dec
js
push
mov
mov
shll
mov
jno
inc
jo
test
inc
dec
inc
xchg
jns
mov
sbb
xor
stc
mov
xor
data16
sub
adc
mov
and
cli
inc
add
ljmp
jecxz
cmp
out
cltd
push
cltd
xchg
imulb
ret
insb
lods
inc
test
pop
adc
cmp
lcall
out
push
das
call
push
and
jge
and
adc
ret
jmp
mov
pop
lds
popaw
insl
add
hlt
lcall
loopne
adc
mov
mov
xchg
pop
je
fisubl
fnstsw
cltd
mov
inc
add
xchg
cmp
pusha
loopne
inc
out
fs
shr
xlat
inc
inc
out
jmp
adc
and
pop
pusha
ljmp
mov
mov
gs
mov
jae
in
pushf
int
out
push
lods
pop
sbb
xor
aaa
outsl
rclb
push
rorb
call
jb
xchg
loop
in
js
xlat
xor
mov
sbb
lret
loope
loopne
xlat
xor
ret
jns
loope
imul
inc
pop
test
jge
mov
sub
dec
mov
pop
cltd
push
jecxz
adcl
imulb
adc
pop
push
rolb
in
mov
mov
jo
push
fcoms
sbb
xor
push
clc
sbb
out
mov
dec
hlt
cwtl
pushf
sbbl
sahf
mov
test
xchg
xor
add
rorl
xchg
pop
outsb
pop
cltd
and
sbb
jmp
mov
insl
ja
cmp
pushf
lret
mov
in
adc
lock
inc
ret
inc
mov
jb
add
cmp
stos
out
jp
mov
sbb
xchg
mov
mov
fisttpl
and
cmp
lods
and
in
push
inc
push
cmp
mov
ss
cmp
pop
lahf
int
xchg
faddl
mov
jle
mov
jmp
sub
cwtl
dec
mov
pop
mov
cmc
pop
mov
mov
dec
cmp
sub
sbb
sub
hlt
adc
dec
pop
mov
pop
lcall
and
inc
push
mov
sti
jo
into
lods
icebp
stc
mov
in
sahf
push
add
and
adc
pop
cmp
int3
outsb
sbb
cltd
mov
call
sahf
sbb
daa
or
jle
add
add
inc
push
jge
push
jmp
fisubrl
jo
jle
cmp
aam
xchg
arpl
and
lret
ret
and
inc
add
stos
pushf
jo
jno
mov
mov
lock
pop
xor
mov
push
cld
jno
mov
mov
lods
pop
int
das
bound
subb
jno
jp
addl
jg
add
in
push
mov
shl
xor
mov
test
add
js
sub
dec
inc
sub
aas
scas
loopne
leave
jo
adc
xchg
add
rcrb
dec
mov
sub
inc
mov
mov
adc
pop
mov
add
lds
dec
push
lcall
mov
dec
rcrb
ffree
pop
sbb
pop
push
sub
push
mov
rcrb
leave
jae
call
dec
mov
hlt
clc
pop
sahf
sub
jp
push
mov
sahf
mov
rclb
mov
cltd
pushf
adc
inc
add
pop
jg
in
jecxz
mov
fstl
daa
imul
dec
sbb
xchg
mulb
mov
xor
pop
mov
push
fwait
cmp
push
je
mov
cmp
push
push
mov
sub
scas
lock
dec
sbb
inc
stc
xor
sub
push
add
mov
xor
fidivs
lahf
int3
ss
sub
ret
mov
scas
hlt
adc
and
inc
or
mov
fimuls
cltd
push
push
sbb
icebp
lcall
js
jbe
jb
aaa
add
mov
sub
rolb
cmp
ss
nop
fs
fs
rcrl
adc
or
dec
imul
xchg
dec
bound
ret
xchg
out
loopne
cld
sbb
and
test
jp
and
loopne
std
cmp
stc
lret
cs
aad
or
xchg
cmp
sub
xor
xchg
or
xchg
adc
mov
sbb
jp
stc
cmpsb
test
inc
mov
cld
fdivl
add
push
cmpsl
shr
shr
lods
ret
sbb
hlt
xchg
repz
loop
les
mov
inc
mov
popf
fnstsw
add
std
inc
dec
rorl
jbe
mov
adc
push
mov
cmp
aas
jg
seto
pop
adc
lock
pop
sub
stos
xchg
loopne
jbe
lret
les
stc
or
nop
testl
cld
stos
shl
aaa
pop
or
hlt
insb
lods
data16
out
imul
loopne
xchg
arpl
adcb
pop
dec
rorl
mov
mov
outsb
or
int
lods
stc
enter
sub
in
push
inc
pop
jecxz
in
jbe
bnd
mov
push
and
mov
sub
inc
inc
adc
pop
sahf
add
insl
xchg
mov
xchg
mov
jne
push
or
jle
push
sbb
in
xor
popf
xor
adc
xor
jb
add
pop
mov
push
mov
push
add
rcll
fisubs
leave
loope
and
mov
xor
xchg
sub
xchg
and
push
lret
pop
aaa
or
ja
jb
push
cmp
ret
inc
xor
fs
add
add
and
push
sub
lret
in
and
inc
lods
jno
cmp
rolb
enter
into
push
std
pusha
dec
dec
cmpsl
jp
pop
imul
push
sub
add
or
fstp
popa
aam
insl
add
jns
xor
lods
xlat
lret
mov
add
sti
scas
dec
orl
pop
arpl
ljmp
movsb
jmp
and
fwait
cmp
cmp
xchg
and
ds
fadd
push
in
divl
jne
cld
lcall
inc
out
in
pop
xor
movb
cmp
fs
js
call
loope
add
std
rorb
pop
rorb
pop
push
xor
imul
mov
or
aam
fiadds
and
mov
push
lcall
cs
shrl
jb
mov
and
int3
test
mov
push
out
imul
add
outsl
enter
sub
cmpsl
int3
lret
cmc
pop
pop
sbb
pop
push
popf
enter
inc
or
mov
mov
add
adc
mov
xor
push
sbb
stos
les
cmpl
mov
les
test
xor
scas
iret
xchg
je
loope
mov
sti
int3
scas
jae
imul
pop
mov
adc
cmpsb
fs
xchg
test
test
jno
repnz
scas
sbb
adc
jmp
push
sub
add
lods
xor
mov
inc
out
and
adc
or
xchg
or
sahf
push
jg
xlat
cmpsb
dec
pop
out
add
and
mov
adc
sbb
popa
int3
lcall
inc
in
insb
add
inc
dec
xor
scas
adc
mov
cli
cmpsl
outsl
sub
xor
sarb
pop
in
mov
jge
out
cmp
lret
ret
icebp
faddl
add
or
fdivrs
mov
push
and
loopne
push
jae
jnp
icebp
push
shrl
push
dec
notl
sarb
add
jb
or
jl
push
dec
pop
mov
or
cmp
daa
testb
cmp
jmp
jmp
jae
cmp
xchg
insb
imul
xchg
cltd
dec
in
lea
lahf
push
fisubs
mov
push
cld
popf
adc
data16
ret
loop
inc
xlat
sub
and
push
or
mov
icebp
lea
pop
mov
int3
xchg
mov
jl
add
jne
push
push
mov
jo
scas
ficoms
icebp
fwait
cs
cmp
cli
pop
jl
xchg
xor
test
movsb
paddq
popa
lret
imul
test
sarb
sbb
arpl
cmp
in
cld
sar
pop
or
fsubl
xchg
scas
call
inc
shll
nop
inc
lock
lret
outsb
adc
orl
xchg
ljmp
or
sbb
mov
sarl
pop
pop
jg
clc
repnz
lcall
scas
mov
dec
fs
xchg
add
lock
lock
and
imul
mov
pusha
inc
dec
test
mov
cs
adc
int3
xor
movsl
in
or
scas
in
adc
cld
inc
test
dec
mov
stos
popa
mov
ret
dec
cmpsb
sbb
sub
mov
aaa
dec
int
mov
cld
mov
or
movl
pop
xchg
or
lods
dec
in
sbb
add
repz
outsl
or
clc
sub
mov
orb
dec
dec
add
into
iret
dec
call
and
inc
and
popa
sbb
push
adc
pop
ja
adc
sub
inc
enter
xor
sub
pushf
clc
cmp
mov
or
dec
push
gs
add
fdivs
addb
pop
jecxz
push
or
xchg
pop
jp
xor
dec
jb
repz
daa
push
pop
fcomps
jmp
dec
push
scas
pop
shll
stos
in
dec
push
mov
pop
or
mov
sbb
dec
cmp
and
outsl
inc
and
aam
imul
jecxz
dec
mov
fildl
dec
xor
incb
xchg
int
dec
mov
adc
pop
xchg
aad
cmpsl
repnz
mov
scas
xor
popfw
insb
cltd
aaa
dec
int3
mov
or
mov
out
push
adc
sub
cmpsb
js
push
out
outsb
xor
lods
enter
pop
add
scas
and
out
jbe
inc
push
aad
nop
fwait
pop
sbb
int3
or
fisttps
mov
mov
scas
push
mov
dec
stos
lahf
adc
sub
lea
sbb
xchg
pop
dec
dec
push
pop
mov
mov
data16
and
iret
adc
push
into
jmp
iret
dec
and
gs
sbbl
int
test
rorl
and
std
mov
mov
jle
lret
das
out
repz
adc
mov
xchg
jmp
push
xlat
leave
push
adc
and
call
in
push
out
adc
fisttps
rcrl
xor
sub
leave
and
clc
mov
aam
cmp
xor
adc
pop
and
or
lahf
rcl
sbb
cmpsb
push
and
add
movsl
adc
mov
jg
out
mov
xlat
ljmp
mov
shll
out
out
jne
xchg
push
xchg
adc
push
jecxz
inc
fistpll
mov
addr16
sbb
inc
loopne
push
idivl
xor
push
and
pop
cld
inc
loopne
pop
jns
pusha
repnz
inc
mov
loopne
fwait
stos
inc
fsubr
roll
add
lock
ret
addr16
les
ret
xchg
fsubs
mov
cmpsb
pop
test
sbb
pop
pop
sub
jl
and
and
or
dec
dec
mov
sbb
fs
mov
and
inc
mov
mov
mov
add
std
jge
push
inc
push
jnp
jb
xchg
js
movsl
sub
xchg
cmpsl
pop
and
adc
mov
dec
or
test
pop
push
push
jae
adc
and
ret
dec
or
ret
mov
or
rcr
fcompl
out
xor
push
and
cmpsb
bound
xchg
int3
lcall
mulb
add
iret
sbb
cld
cmp
ds
movsl
push
jge
cmpsl
xchg
pop
cwtl
cmpb
bound
mov
xchg
pop
jno
sub
jnp
jl
inc
xorw
push
out
inc
or
gs
dec
and
lret
int3
insl
loope
decl
les
bound
push
int3
cmpb
shll
daa
pop
int
sbb
or
addr16
je
xchg
outsb
nop
push
and
mov
rclb
xchg
xchg
orb
xchg
call
mov
outsl
fadds
pusha
inc
jns
jno
repnz
aam
outsb
xchg
movsb
xor
jo
lret
lods
inc
mov
and
sub
scas
and
push
test
lock
inc
sbb
pusha
mov
mov
in
sbb
arpl
mov
adc
mov
push
dec
inc
jno
mov
mov
insl
cmp
and
or
ja
lret
das
les
insl
stos
leave
xchg
testl
and
xchg
stos
adc
cmp
inc
mov
xchg
push
xor
mov
ss
mov
jo
push
mov
jne
mov
addr16
daa
mov
test
repnz
andl
shrl
jbe
js
nop
xor
xor
scas
sbb
data16
int3
mov
dec
push
mov
das
pop
inc
cld
xor
cmp
pop
call
ret
add
push
repnz
rolb
fcompl
cmp
jmp
in
mov
push
lret
add
lods
lret
or
push
sbb
loop
add
sub
push
nop
mov
jl
addb
fsubl
daa
and
pop
fcoml
dec
cmp
add
arpl
or
xchg
xchg
rol
int
sub
mov
dec
jae
ja
inc
inc
xchg
test
xchg
rolb
ret
pop
out
mov
cltd
rcrb
xchg
pop
or
imul
jecxz
sti
into
bnd
sbbl
mov
push
dec
getsec
int3
inc
sub
inc
aad
enter
adc
orl
outsb
dec
rclb
pop
inc
push
push
pop
cli
lods
push
lods
ljmp
clc
or
icebp
mov
lods
pop
imul
mov
inc
xlat
aaa
lds
dec
sub
imul
dec
shlb
lods
cmp
inc
dec
lret
dec
jne
addb
pop
ret
jp
mov
or
adcl
aam
outsl
movsl
sbb
stos
out
push
xchg
les
leave
and
out
xor
cltd
outsb
adc
xor
mov
test
and
xchg
cmp
xchg
xlat
jge
and
xor
push
in
adc
fldl
add
idivl
loopne
stos
jg
enter
movsl
cs
ljmp
mov
or
les
std
or
gs
es
js
aam
fldt
jge
xor
mov
xor
xchg
dec
int
test
rclb
inc
mov
adc
enter
xor
pop
lods
jb
sbb
les
call
movsl
js
jecxz
gs
xchg
andl
mov
lock
hlt
push
fwait
jno
adcb
test
leave
mov
xor
mov
mov
jno
xor
fistpl
std
aam
aam
xlat
dec
fs
dec
cld
test
and
adc
mov
jb
scas
sbb
repz
lahf
pop
jne
mov
dec
clc
int3
inc
mov
xchg
dec
xor
out
subl
into
push
mov
ret
jbe
or
xor
and
xor
inc
movsl
fidivs
pop
mov
addr16
les
or
inc
test
push
and
daa
lcall
lods
xorl
mov
jns
inc
test
jecxz
sbb
and
adc
fidivs
out
xchg
cs
mov
outsl
rcrb
jnp
pop
ja
stos
lock
fistpll
add
and
call
sti
loop
mov
dec
scas
xchg
addr16
mov
movsl
sub
int3
icebp
clc
call
and
sub
mov
sbb
pop
out
or
addr16
inc
in
dec
lret
pop
cli
nop
aas
pusha
dec
fwait
jo
xor
add
movsb
pop
push
dec
and
outsb
xchg
mov
push
mov
and
adc
sbb
idiv
rorb
ret
mov
in
jmp
scas
dec
aas
stos
test
push
xor
adcl
xor
rclb
pop
test
stos
dec
cmp
loop
out
xor
jnp
push
fimull
into
sbb
stc
mov
mov
stc
cs
push
jmp
and
xor
xor
xchg
jp
mov
aad
aam
mulb
xor
int3
jle
and
or
adc
jbe
push
dec
mov
and
xor
add
xchg
mov
xor
xchg
ret
inc
rolb
mov
in
test
mov
in
dec
xor
xchg
inc
pop
mov
sub
mov
ds
std
into
mov
xchg
mov
scas
mov
xor
fs
pop
sar
adc
xchg
lret
imul
mov
aam
dec
es
test
jge
out
or
movsl
push
stos
cs
fsts
mov
into
sub
mulb
lds
sbb
orb
mov
loopne
cmpsl
mov
inc
insb
pop
clc
outsl
inc
cmp
mov
ficomps
mov
inc
cmp
or
jns
cmpsb
hlt
clc
pop
aas
cmp
lds
lea
fisubrs
stc
xchg
sub
imul
pushf
cmp
ss
cmc
push
ljmp
aaa
dec
shl
in
cltd
adc
sub
push
add
jne
ds
cmpb
int
ret
test
insb
mov
lods
shrl
fistpll
push
mov
mov
lret
push
ds
lock
js
cli
daa
shr
cli
mov
xchg
imulb
cmc
shlb
xchg
int3
inc
cmp
mov
sub
cmp
popa
sub
and
shlb
aad
test
pop
jae
inc
in
call
aas
in
add
sbb
sbb
pop
cmp
imul
adc
lds
cmp
int3
push
pop
jmp
pop
mov
icebp
xor
mov
xor
outsb
mov
pop
pop
in
sub
push
shll
daa
pop
pop
or
shl
xorb
orb
inc
leave
icebp
pop
adc
sahf
and
in
lea
inc
jb
sbb
xchg
and
sbb
addr16
push
push
jnp
jns
subl
fcoms
iret
cltd
adc
sub
add
stos
ljmp
je
jle
xor
jmp
inc
iret
xchg
sbb
push
es
fstl
imul
or
xchg
xchg
test
mov
mov
pusha
push
notl
mov
xchg
jb
or
push
push
mov
jmp
sub
outsb
mov
cmp
cmp
pop
xchg
sub
or
jmp
sub
iret
and
test
add
jge
callw
andl
ljmp
xor
add
jae
lock
jb
adc
movsl
mov
cmp
jg
lahf
mov
sub
mov
test
jp
cltd
cmp
mov
aam
stos
push
push
pop
mov
pushf
push
jae
pop
daa
cmp
das
mov
xor
fnstcw
inc
incb
into
jle
je
jge
and
insl
cmp
hlt
inc
mov
push
js
sub
stos
push
hlt
fnstenv
out
mov
adcl
imul
test
or
movsl
fsubr
dec
in
cmp
xor
negl
mov
pushf
xchg
nop
jecxz
lret
jle
es
ret
jecxz
add
rorb
data16
mov
jno
add
popa
scas
add
lahf
mov
xor
sub
in
shll
cmpsl
sub
call
stos
loope
dec
clc
add
push
sub
push
in
jge
negb
cmpsb
mov
insb
pop
push
inc
add
mov
mov
ss
iret
xchg
cwtl
and
mov
popf
movsl
insl
rcpps
mov
jp
ljmp
enter
test
push
nopl
rsm
push
mov
bound
pop
xor
jno
add
xchg
dec
clc
in
pop
in
or
ds
cmpb
or
dec
xor
loopne
sub
add
data16
mov
push
and
test
cmp
or
xor
push
imul
mov
iret
test
jge
inc
fildll
adc
and
pop
rclb
xor
test
data16
and
mov
mov
cmp
loope
daa
out
dec
jl
icebp
push
fidivs
fidivs
in
xchg
pop
xchg
xorl
fs
mov
leave
js
mov
xor
fnstsw
push
inc
xchg
ja
lret
mov
data16
mov
arpl
sbb
or
into
std
pusha
mov
sahf
pop
ja
imul
call
movsb
xchg
addl
jle
fidivs
cmpsl
mov
inc
fdivs
mov
jno
cmp
jb
test
in
fidivrs
sarb
lods
nop
push
sbb
ss
fcompl
std
push
jno
jnp
mov
inc
push
and
or
les
mov
popf
insb
adc
pop
sub
insl
push
or
or
mov
xchg
popf
js
rcrb
cmpsb
dec
pushf
repnz
mov
jae
mov
popf
cs
in
dec
add
xlat
shl
inc
xor
cwtl
scas
movsl
mov
inc
adc
lcall
popa
sbb
icebp
cmp
xor
cltd
mov
jnp
incb
pop
cmc
push
mov
ljmp
jbe
mov
icebp
dec
in
xor
push
pushf
xor
inc
and
mov
sbb
lea
jb
pusha
rolb
jp
xor
data16
sti
movsl
cmp
cli
loop
mov
add
adc
mov
ret
jne
or
xor
sbb
pushf
pop
mov
fcoml
jno
repnz
mov
jns
mov
mov
cltd
shll
lods
xor
mov
cmp
shld
rcrb
orb
mov
subb
lret
es
and
mov
fbstp
fcomps
movl
push
std
dec
mov
loop
lods
mov
jae
push
hlt
idivb
adc
sbb
lret
mov
xor
xor
or
out
movsl
jge
cmp
cmp
add
es
mov
cwtl
mov
xchg
sbb
xchg
mov
out
sti
xor
jecxz
ljmp
pop
sub
sub
adc
ds
add
pushl
dec
and
jb
out
xorb
and
mov
add
fcomi
scas
pop
xchg
pop
imul
sub
xor
jg
mov
sub
mov
int3
xchg
pop
cld
lret
repnz
cli
int
call
xor
adc
add
mov
lods
outsl
dec
mov
xchg
lds
xor
xchg
inc
xchg
dec
jns
xor
mov
movsl
jl
or
push
mov
stc
bound
int
mov
ljmp
fwait
mov
push
jne
push
pop
sub
jg
sub
iret
rcrl
nop
sub
cmp
jle
aas
les
and
jmp
mov
inc
popf
jo
ret
jb,pn
aad
in
mov
mov
adc
das
incb
mov
xchg
into
out
or
out
jp
lret
push
inc
pop
sti
add
jmp
xor
sahf
push
dec
mov
sub
xchg
xlat
push
add
sub
movsb
adc
mov
pop
push
icebp
scas
out
jno
out
sub
je
xchg
fisubrl
sbb
pop
rolb
and
das
add
cwtl
sub
les
jae
les
cmp
push
and
mov
lahf
pop
jnp
or
or
or
sbb
sbb
or
xchg
loop
adc
xchg
daa
adc
cmp
pop
imul
mov
test
out
adcb
mov
inc
fldenv
xchg
pusha
sub
int3
sbb
cmp
aas
mov
dec
incl
aaa
js
daa
in
and
std
mov
xchg
in
jle
outsb
push
mov
jp
jbe
mov
pop
pop
lret
ficompl
lock
int
adc
inc
out
dec
push
cmp
mov
xor
cmpsl
xor
decb
jmp
mov
mov
fsubl
inc
cmp
push
or
push
repnz
fbstp
push
inc
pop
jg
push
rorl
in
and
in
cmc
cli
and
xchg
dec
mov
ds
xchg
testl
jmp
stos
mov
lcall
inc
lea
inc
mov
add
aad
andl
push
add
out
mov
push
test
and
and
rolb
cld
xchg
aam
data16
dec
popa
std
cmpsb
call
leave
fcompl
push
dec
adc
fnstcw
mov
xchg
xchg
mov
sub
dec
aas
fdivs
pop
mov
es
mov
add
ss
and
mov
mov
into
sti
aam
aaa
sbb
pop
mov
jo
pop
int
pop
cltd
xor
cmc
popa
xchg
loopne
dec
ret
shll
testl
xchg
push
out
out
xchg
dec
adc
cmp
div
js
lcall
xchg
xor
test
adc
xchg
cmpsl
push
gs
dec
movsl
pop
cld
push
pop
das
xorb
pop
xor
into
pop
ds
aaa
sahf
stos
sbb
int3
ret
and
sbb
inc
test
lret
movsl
movsl
sbb
sti
fwait
or
rcrl
mov
inc
mov
cltd
pop
and
xor
xor
dec
xor
adc
xchg
loope
and
cmpsb
rorl
in
xchg
or
inc
mov
adc
les
stc
mov
movsl
stc
into
mov
enter
and
insl
mov
cmp
dec
dec
pop
fwait
jl
fadds
aaa
lret
lret
cmp
push
leave
xlat
xchg
out
xchg
lret
lcall
cli
mov
mov
jg,pn
ja
outsl
xor
mov
add
test
and
mov
sarl
xchg
fdiv
jbe
test
lods
cmp
sbb
and
sbb
mov
sub
daa
inc
testb
dec
sub
dec
leave
mov
mov
fisubrs
rcrl
pusha
xchg
mov
ja
and
push
mov
dec
mov
cld
outsl
incl
mov
mov
fildl
lock
mov
dec
cmp
test
xor
ljmp
cmp
testb
scas
mov
dec
imul
test
cmp
divl
xchg
mov
jg
out
inc
push
imul
mov
out
sub
iret
in
mov
rcrb
stos
out
lahf
cmp
jge
ja
icebp
call
mov
aaa
mov
pusha
std
push
rcrl
sub
cmpsb
sbb
idiv
cwtl
cmp
or
sbb
and
push
xchg
and
adc
push
les
mov
enter
das
fsubr
lret
pop
stos
lods
pop
xchg
mov
xor
ja
sbb
ret
mov
jo
sbb
icebp
jae
xor
stc
loope
repz
fisttpl
or
fists
push
add
scas
or
loope
jo
std
stos
pop
xchg
jle
and
cld
xchg
mov
repz
dec
xor
mov
cmp
jmp
outsl
int
cmpsl
jg
scas
mov
fimull
mov
idiv
or
in
leave
clc
inc
aaa
lahf
dec
cmp
pusha
push
jb
in
arpl
sub
sub
nop
les
stc
adc
rdpmc
pop
bound
mov
push
dec
popa
jnp
push
jbe
sub
jbe
add
mov
adc
lods
int3
mov
mov
cs
push
les
mov
sub
jo
ret
pop
lock
jne
xchg
fcompl
fisubrl
pop
pop
in
popf
lcall
movl
test
dec
jo
test
cmp
scas
jle
jne
push
call
and
test
fisubrl
shll
xlat
cld
lret
arpl
lret
test
ljmp
repz
pushf
or
pop
jp
cmpsl
pusha
jmp
push
subb
cmp
in
ljmp
out
mov
lret
add
lods
jp
shlb
fwait
pop
jge
cmp
push
aas
xchg
pop
mov
push
ja
adc
shll
shlb
lret
and
adc
push
rcll
jmp
roll
jmp
sub
push
add
repnz
inc
xlat
fwait
cmp
xchg
sbb
int
imul
nop
out
push
push
mov
xchg
bound
rcl
pop
fisubs
adc
or
notl
push
pop
cmp
in
popa
mov
pushf
enter
jne
fidivl
sub
sbb
sahf
cmc
dec
or
loope
inc
and
cmc
pop
push
cmp
jmp
popa
sub
xor
insb
pop
addr16
jns
jne
lret
sahf
lret
inc
and
ljmp
repnz
scas
and
pop
js
cltd
pop
mov
mov
inc
add
mov
fmul
outsl
cld
cld
enter
sbb
adc
and
inc
pop
and
add
xchg
sub
push
lods
push
inc
or
jp
jnp
and
mov
fwait
popf
inc
cmp
lret
incb
jg
xchg
mov
push
push
jp
jnp
fnstsw
imul
sahf
sub
sub
stos
ja
lods
lea
mov
lahf
in
test
pushf
cmc
imul
es
xlat
test
sbb
push
fisubs
ss
cmpsb
rorb
mov
mov
icebp
add
sarl
je
jecxz
repnz
lret
test
jo
adc
aas
dec
mov
sub
out
push
pop
mov
lods
or
inc
push
lcall
jnp
mov
in
xor
inc
int
loope
or
pusha
lret
loop
repnz
addr16
jp
gs
inc
dec
stc
les
sub
pop
lods
inc
scas
jb
fadds
lcall
into
and
cmp
in
push
loope
ja
fidivrl
insl
cmpsl
mov
test
scas
daa
jecxz
clc
das
das
fidivl
sbbl
dec
jbe
in
movsl
das
xchg
jnp
repz
jne
jns
and
fwait
cwtl
cmp
jl
movsl
cmp
cmp
mov
movsl
and
mov
loope
icebp
inc
mov
add
add
adc
jge
jb
in
push
loopne
imul
mov
movsb
test
xchg
pusha
jbe
inc
xchg
inc
out
adc
aam
out
push
out
pop
xchg
dec
sbb
pop
push
roll
mov
push
pusha
imul
aaa
std
imul
xchg
ss
push
rcrl
gs
orl
inc
inc
dec
lods
fcompl
insl
fsub
stos
dec
lcall
push
push
movsb
gs
pop
adc
mov
sub
sub
loopne
sti
push
fcoml
or
add
dec
mov
pop
jp
adc
push
arpl
negb
repz
imul
stos
mov
push
xchg
icebp
stos
fnsave
jno
into
mov
xor
cmp
out
pop
fcmovnb
popa
push
add
cmp
xor
inc
das
rolb
and
std
jl
rorb
xchg
int3
and
xchg
bound
stc
add
xorl
cs
jne
jg
xchg
add
pop
fwait
cmp
sbb
push
inc
lret
adc
fimuls
scas
push
adc
outsl
sub
test
mov
icebp
imul
js
and
scas
pop
mov
mov
fdivrl
and
xorl
stos
repz
jbe
xchg
mov
xor
mov
jnp
jl
sti
push
push
xchg
jecxz
test
xor
mov
add
arpl
mulb
sub
mov
movsb
mov
pushf
jecxz
ljmp
xchg
mov
mov
and
lods
ds
push
inc
xchg
fwait
mov
sti
cmpsb
mov
push
mov
sub
ja
inc
out
outsl
cmp
pop
xor
in
adc
and
lods
jae
out
mov
xchg
lods
add
push
and
shll
xor
movsl
sbb
cmp
aas
imul
jge
sub
cmp
push
repnz
xor
addr16
in
xchg
sbb
xchg
sbbl
mov
test
lods
sub
ret
cmpsb
inc
call
int
push
fistl
adc
mov
pop
pushf
sbb
iret
mov
push
sbb
mov
fldl
insl
test
test
xor
fs
ficompl
lods
mov
cmp
and
adc
daa
push
and
in
inc
out
or
xchg
mov
popa
mov
push
and
es
gs
push
loopne
je
fistps
inc
hlt
les
scas
add
adc
cmp
mov
pop
stc
mov
arpl
pusha
nop
dec
and
rclb
lds
aad
mov
das
or
dec
gs
or
push
lahf
cs
outsl
adc
pop
adc
or
inc
in
jnp
pop
push
xchg
addl
enter
cld
shll
jecxz
xor
test
xlat
sub
cld
gs
test
leave
aaa
cmp
repz
int
sub
add
cmp
adc
sarb
or
in
fstpl
out
mov
pop
xor
je
cmp
push
lea
and
jmp
repnz
loop
lods
mov
lds
test
fstpt
inc
sbb
lret
and
pushf
xor
call
sub
cmp
and
fadds
inc
jl
add
push
mov
mov
push
sbb
mov
repnz
cmc
test
sub
pop
sbb
mov
fildll
xchg
lahf
jl
xchg
outsl
dec
cmp
fs
xchg
sub
mov
and
push
mov
jl
das
push
mov
pop
mov
dec
pop
inc
jnp
jnp
nop
xorb
cmp
lret
addr16
movsb
lret
inc
xchg
in
add
xchg
in
out
imul
dec
cwtl
sub
and
pop
ja
mov
xor
sahf
mov
xchg
mov
pop
mov
stos
xor
jno
adc
cmpsl
std
pop
lods
inc
in
pop
pop
cwtl
mov
xor
jns
lret
shll
fmuls
jb
fiadds
pop
cmp
in
xchg
mov
repz
fistpl
fwait
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
ljmp
or
jb
jg
leave
and
.byte
jnp
jae
and
call
fcoms
clc
mov
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
pop
add
add
je
js
add
add
sbb
add
adc
add
add
add
add
add
jb,pn
popa
je
add
mov
xor
add
adc
add
cmp
add
add
cs
je
add
add
add
push
add
add
add
add
jae,pn
fs
je
add
add
add
rorb
add
add
add
add
inc
add
loopne
je
js
add
add
rorb
add
scas
add
add
add
inc
add
loopne
jb
popa
je
add
les
add
loopne
add
push
add
add
add
add
cs
je
add
add
add
add
or
add
add
add
add
add
add
add
xor
xor
call
pusha
call
lods
push
mov
and
mov
sbb
mov
popf
inc
mov
jnp
stc
fists
mov
sbb
xchg
xchg
mov
jbe
add
cmpsl
add
sbb
stos
mov
sbb
fisubrl
add
out
push
push
sti
decl
add
jb
add
in
push
adc
aam
lret
dec
jno
scas
nop
jo
stos
aas
dec
into
add
scas
lahf
sub
ret
pop
ja
mov
pop
pop
jle
mov
mov
jb
dec
cmpsb
adc
xchg
dec
arpl
adc
lock
inc
push
fdivl
lods
add
dec
jae
cmpl
pop
xlat
je
lock
add
outsl
std
dec
pushf
testl
pop
pop
jno
scas
jge
int
cmp
insl
jl
loop
js
jp
mov
xchg
ja
dec
fucom
add
jecxz
push
or
adc
out
insl
shl
or
sub
into
dec
orl
fwait
ja
xchg
adc
dec
icebp
push
pop
adc
add
insb
enter
js
sub
inc
jp
push
or
xrelease
loopne
test
jno
mov
aad
pusha
xchg
dec
mov
fisubl
sub
and
test
hlt
mov
mov
or
ds
inc
loope
out
or
leave
mov
ret
sahf
inc
mov
cmpsb
sub
pop
int3
mov
cmp
leave
cmp
out
ja
iret
mov
mov
mov
negl
inc
scas
shl
pop
push
outsl
imul
jecxz
aas
xchg
push
xchg
mov
xchg
int
adc
pop
sub
xchg
pop
jl
imul
jo
push
leave
lea
ficompl
int3
clc
lds
sub
shrl
mov
lods
add
sbb
inc
xchg
pop
xlat
loope
add
rorl
push
pop
mov
pop
jle
test
cli
mov
orl
stos
lods
inc
pop
aad
scas
fs
cs
dec
lea
inc
sub
cmpsl
pop
xchg
cmp
pushf
cltd
mov
cli
mov
mov
cmp
xchg
inc
mov
mov
pop
add
cmpsl
out
jmp
mov
popw
imul
not
xchg
cld
adc
or
ja
aad
call
inc
add
cltd
in
adc
xchg
out
loop
mov
mov
inc
jns
inc
cmp
add
pop
leave
cltd
pop
jg
clc
cli
daa
lds
lds
adc
push
add
mov
notb
ss
pop
inc
add
popf
mov
pop
leave
test
xor
lret
hlt
icebp
jecxz
dec
cltd
jg
loope
push
jo
div
arpl
fiaddl
int
or
jae
out
cltd
in
xor
pop
ds
cmpsl
ljmp
xchg
push
cmpsl
fwait
xchg
add
jecxz
inc
xchg
xchg
mov
mov
fstl
lds
mov
xorl
aam
pop
data16
jo
push
inc
sahf
push
inc
cwtl
lods
xchg
pusha
inc
pop
and
jno
fistl
imul
mov
vpunpcklwd
outsl
int3
lds
mov
adc
push
out
mov
add
out
mov
and
lret
adc
call
adc
xchg
sbb
outsl
outsl
adc
ret
rorb
sub
clc
pop
xchg
mov
jle
dec
sub
mov
mov
cwtl
shr
or
sarb
jne
xchg
push
xor
movsl
mov
cmc
ss
test
jecxz
enter
mov
roll
test
mov
fdivr
pop
test
push
daa
cmp
cmp
xchg
outsb
inc
in
incb
lret
aas
adc
cs
arpl
mov
mov
rcrb
add
mov
inc
mov
dec
dec
mov
pop
into
jle
add
inc
cmp
subb
in
sbb
imul
test
pusha
adc
pop
lods
iret
lret
mov
ret
mov
stos
mov
cmp
out
push
jecxz
es
xlat
shl
adc
dec
in
loop
je
arpl
nop
loop
mov
adc
xchg
sti
pop
inc
pop
pop
movl
sbb
mov
inc
and
pop
mov
cld
aas
add
subb
pop
mov
mov
cmp
and
mov
insl
or
inc
cmp
fmull
dec
addr16
add
int3
sbb
xchg
imul
mov
xorl
dec
mov
fcoml
andnps
xchg
enter
movsl
lods
and
scas
and
mov
loope
fwait
aam
hlt
nop
jno
jne
data16
ret
pusha
dec
mov
clc
into
mov
call
out
mov
iret
inc
pop
cld
aas
jae
sti
push
ss
jle
pop
cmp
xchg
cmpsb
test
mov
icebp
repz
movsl
lods
in
ret
ja
and
test
jnp
and
sbb
mul
jmp
add
jge
ja
xlat
mov
pusha
ret
imul
sub
sbb
mov
and
out
gs
lret
jl
mov
inc
xor
outsb
gs
or
aam
pop
push
adc
inc
sbb
cmp
comiss
adc
pop
aas
pop
std
inc
mov
lret
inc
test
stos
mov
lret
xor
les
and
fcomps
outsl
stc
inc
and
or
sti
mov
cmp
cli
movsb
push
sahf
fists
sti
or
xchg
mov
adc
stos
aas
rolb
inc
pop
iret
fstpl
cmp
test
orb
push
mulb
pop
xchg
and
jae
les
cs
jnp
or
cmp
xor
cmpsl
ja
xchg
leave
mov
adc
mov
sub
aam
test
sbb
inc
sbb
sbbb
mov
pop
clc
stc
jb
dec
negl
test
clc
xor
xor
mov
or
ss
push
sub
movsb
cmp
sbb
mov
xchg
cmpsb
mov
xchg
or
inc
sbb
ret
popa
imul
fnstenv
inc
pusha
adc
in
push
test
lock
fs
add
idivl
sub
sbb
sub
aad
sbb
dec
xchg
aam
fiaddl
flds
lods
mov
push
xchg
stc
dec
frstor
sub
lock
mov
movsl
xchg
sbb
gs
in
insl
jl
imul
mov
mov
inc
jae
loop
and
sbb
test
aaa
out
adc
xor
push
or
call
shrl
fs
repz
pop
push
xchg
xchg
pop
and
call
dec
mov
jns
loope
sub
ffree
sub
dec
testb
add
push
mov
dec
mov
push
nop
jl
rorl
mov
and
push
jae
filds
aad
enter
or
mov
sub
ja
ljmp
dec
out
ror
and
or
inc
fwait
xor
or
mov
sti
das
shrb
push
data16
daa
sbb
mov
jb
ret
insl
lahf
test
push
or
hlt
xchg
jl
icebp
aad
cwtl
dec
cmp
sbb
std
cli
xchg
or
jp
daa
jae
push
test
jge
cmp
or
mov
imul
xchg
stc
sbb
fstpl
dec
lahf
cmp
jnp
xor
out
mov
jnp
push
scas
ss
sub
cltd
lock
repnz
mov
in
repz
and
fildll
xchg
mov
xchg
dec
mov
test
or
pop
inc
xchg
jl
insl
xchg
fsubrl
stc
sbb
hlt
or
mov
int3
xchg
test
lahf
xor
pusha
mov
inc
mov
lds
xchg
or
dec
dec
fdivrs
sbb
cmp
repnz
insl
stos
mov
cwtl
arpl
rolb
sti
mov
nop
pop
mov
adc
jle
jne
and
push
lret
ss
insb
jecxz
mov
push
jne
inc
jmp
in
mov
test
arpl
mov
ret
jecxz
jns
inc
push
xchg
adcl
cwtl
xor
sbb
repz
cs
mov
jle
pop
clc
xlat
xor
add
in
cmc
pop
cmpb
push
and
push
subb
out
push
call
jmp
sbb
or
jae
leave
insl
addr16
not
mov
outsb
ds
scas
aad
and
das
xchg
idivb
mov
push
or
push
rcrb
mov
pop
jb
inc
inc
divl
adc
clc
xchg
scas
sub
mov
adc
mov
in
push
add
dec
jmp
mov
lcall
stos
in
es
sbb
jge
loope
mov
jmp
mull
gs
xchg
push
inc
sbbb
jnp
test
jns
sub
ret
ret
mov
loop
scas
fnsave
mov
xor
xor
in
xchg
inc
out
in
ret
es
das
cmp
je
cmp
sbb
cmp
jge
in
mov
mov
and
std
lock
out
in
pop
iret
jns
pushf
fwait
ljmp
subb
cmpl
ss
sti
rcll
adc
mov
pop
pushf
in
mov
push
mov
icebp
mov
out
inc
xor
iret
push
mov
mulb
push
sbb
dec
stc
add
cmp
ror
les
fxch
ja
xchg
ret
test
mov
fisttpl
adc
cs
pop
push
mov
mov
aas
cli
push
pop
int
movsb
lods
cmpsb
enter
ds
mov
and
pop
sbb
ss
data16
inc
rcrb
pop
lods
fimull
rcrl
mov
jle
sbb
or
or
movsb
mov
adc
cwtl
lahf
or
pop
ret
mov
and
and
push
inc
cmpsb
mov
into
push
scas
add
int3
inc
pop
popa
dec
movsl
mov
mov
cmp
xchg
stos
idiv
mov
jmp
or
dec
xchg
negl
aaa
pusha
cmp
pop
jecxz
and
in
aas
push
add
prefetcht2
ss
cmc
ret
mov
insl
mov
rorb
fnsave
repnz
inc
fidivs
mov
adc
dec
jno
inc
mov
pop
push
and
andl
fwait
and
xchg
movsb
sbb
sub
mov
sub
pop
push
cmp
dec
xchg
jbe
scas
gs
add
pop
cltd
xor
xor
mov
push
xchg
cld
and
xchg
xor
es
imul
adc
sbb
mov
pop
mov
fstpl
add
gs
mov
icebp
adc
cmpsb
xor
ret
out
lock
xlat
repnz
xchg
in
in
int
std
inc
xor
imul
in
mov
and
mov
cmp
pop
sarl
or
cmpsl
xlat
jg
pop
insl
sbb
in
andb
scas
cmp
inc
jecxz
lea
jg
sbb
outsl
aaa
cmp
data16
jmp
mov
into
bound
popf
and
mov
cli
mov
sti
xchg
movsl
fsubrl
mov
pop
mov
outsb
test
mov
sbb
in
rclb
add
xchg
popf
imul
out
gs
or
cmp
mov
mov
sub
sub
push
jge
ljmp
aad
jg
shl
xchg
cmp
les
mov
test
dec
lcall
loope
aaa
mov
jb
add
mov
gs
lret
lods
cwtl
sti
cmp
mov
or
cltd
loop
sbb
adc
push
pop
pop
jg
sbb
ret
cltd
adc
add
add
dec
dec
sub
pop
cli
pop
mov
adc
mov
jae
jb
popf
sub
jo
mov
rorl
inc
int3
jmp
out
ret
xor
out
ss
xlat
outsl
ljmp
pusha
mov
mov
sbb
mov
pop
pop
push
sbb
and
xlat
pusha
cwtl
shl
mov
dec
inc
mov
scas
mov
insb
leave
clc
cs
orl
mov
cmp
mov
mov
imul
xchg
sub
lods
push
data16
lahf
jne
jl
data16
mov
xor
mov
cmpsb
jecxz
rclb
call
sbb
aad
xchg
sbb
and
jbe
mov
jp
loope
add
imull
mov
sub
das
pop
addl
adc
pop
rcr
aas
dec
in
mov
aaa
clc
icebp
mov
inc
push
mov
push
das
arpl
push
addl
adc
jge
mov
das
sbb
imul
mov
sti
adc
scas
jl
lcall
sbbl
clc
icebp
nop
xor
mov
cmpb
js
push
mov
subb
mov
aam
mov
test
aam
cmp
push
popl
pop
lds
clc
cmc
push
outsl
dec
sub
outsb
xchg
pushf
xchg
aas
push
mov
ret
in
or
sbb
cmp
pushl
inc
sub
rorl
mov
gs
push
push
push
push
jne
inc
inc
cmp
jecxz
in
lods
pop
jg
movsl
pop
inc
sub
stos
inc
int
pop
sahf
enter
dec
inc
cwtl
js
lods
fs
jb
mov
push
rcll
pop
jl
add
jmp
and
outsl
pop
lods
push
sbb
add
ljmp
and
ret
mov
and
push
xor
sbb
and
call
pop
jns
jae,pn
test
in
mov
movups
repnz
mov
imul
xorl
fdivrp
cmpsl
jle
insb
loop
pop
push
cmp
stos
leave
cvttps2pi
aam
lods
mov
mov
xor
push
xchg
lret
bound
cli
aad
aad
out
fcomi
jmp
xor
mov
jae
addr16
cli
out
ljmp
or
scas
lea
xchg
sub
ss
scas
pmulhw
push
push
loop
sbb
imul
mov
insl
adc
add
and
adc
icebp
or
mov
jo
nop
fsubl
loop
mov
cmove
sbb
xlat
cmp
shl
mov
ljmp
or
lock
xchg
mov
pusha
adc
stos
sbb
xchg
dec
insb
lret
push
xor
loop
sub
pop
xchg
lea
mov
in
call
sbb
scas
leave
insl
inc
scas
ja
sbb
aas
imul
sbb
and
jns
andl
mov
addr16
loopne
inc
in
ficompl
fsubl
insb
mov
cmp
shlb
cmp
xorl
and
xchg
mov
mov
fldt
push
add
outsl
xchg
cmp
das
icebp
mov
je
mov
das
sti
lahf
adc
dec
lcall
or
jb
inc
dec
fstl
loope
and
in
mov
push
add
sbb
jbe
sub
push
inc
add
aaa
in
ret
test
iret
cmp
ds
insb
sbb
in
aas
xor
into
nop
inc
js
ret
bound
xchg
insb
stc
daa
cld
xchg
xlat
sbb
ret
or
test
cmp
je
je
cmc
add
daa
or
or
add
xchg
pop
pop
gs
gs
mov
push
ficoml
pusha
jp
ds
lcall
outsb
and
cmp
jp
adcl
cli
rcr
ss
push
fs
lea
fistpll
ljmp
jl
jmp
sbb
iret
push
outsl
sbb
inc
int3
ret
inc
cmc
stos
lock
and
rcrb
ljmp
lods
mov
pop
ljmp
dec
add
stc
shlb
push
cmpsl
xchg
or
bound
push
ret
movsb
pop
dec
pop
movsb
cmp
into
adc
sub
mov
stos
test
aas
adc
loope
add
add
dec
aas
jl
cld
push
push
mov
push
lods
pop
sbb
cli
lods
das
cli
cmp
hlt
mov
clc
cs
in
das
sarl
call
addr16
adc
cmp
or
enter
push
fwait
lds
add
mov
mov
mov
cs
les
scas
in
arpl
sarb
scas
fsubs
shrb
stos
notb
inc
push
sarl
or
jbe
pop
mov
sbb
cmpsl
pop
leave
nop
in
les
jle
xchg
and
repz
or
dec
and
fsubl
push
scas
ja
lods
and
adc
and
jl
cmp
mov
sti
jle
popf
mov
idiv
iret
push
pop
int
rcrb
das
movsl
push
jp
mov
jbe
cmpsl
cmp
in
cmc
cwtl
int3
mov
insb
inc
iret
add
cltd
dec
xchg
enter
mov
out
adc
nop
das
dec
daa
cmp
pop
xchg
cmpsl
gs
push
pusha
sbb
rorl
and
test
inc
popa
fiaddl
push
add
push
in
pop
mov
and
add
add
cmp
cmp
pop
mov
sub
inc
pop
cmp
arpl
ret
sub
std
pop
cli
push
fs
inc
aad
stos
sub
sub
cmp
and
ss
in
andl
lret
addb
insb
pop
xchg
int3
sbb
rorb
dec
outsb
shll
insb
dec
imul
pop
movsl
in
ret
clc
data16
add
or
sub
call
and
clc
push
jmp
cmpsb
push
and
fstl
jl
out
push
in
or
pop
push
sbb
pop
neg
or
mov
sahf
jle
sub
je
jns
data16
pop
cmpsb
in
xchg
jnp
arpl
jecxz
sbbb
cmpsl
jbe
subb
pop
cmovp
mov
push
push
xchg
xchg
sub
dec
fdivl
int3
rorl
push
lahf
jne
lret
out
sbb
adc
cmc
mov
clc
aas
jmp
nop
pushf
scas
icebp
mov
insb
and
scas
dec
into
mov
mov
hlt
dec
mov
jmp
stc
shl
pop
cmp
popf
sub
pop
push
sub
fisttpll
neg
ljmp
outsl
push
sbb
xor
pop
dec
fcmovnbe
jmp
testb
or
lahf
add
xchg
insl
jg
jnp
and
and
scas
testb
in
ss
cmpsl
pop
adc
adc
mov
mov
xchg
les
scas
aas
push
loope
cli
je
nop
shrb
pop
inc
push
leave
movsb
insl
in
imul
mov
in
fldt
sbb
and
inc
test
adc
mov
outsb
pop
loope
mov
fwait
dec
fisubrl
sti
shrw
inc
ja
add
mov
inc
filds
push
pop
sbb
lods
mov
sahf
sti
je
sbb
jo
dec
mov
lret
add
negb
imul
shrl
pusha
jp
cwtl
mov
xchg
repz
ss
sub
xor
adc
push
cmp
outsb
xor
mov
movsl
ret
push
jno
ds
jle
scas
add
popl
inc
fsubs
icebp
outsb
dec
dec
ljmp
fcomp
shll
dec
and
test
fcmovnu
movsl
jbe
repnz
dec
nop
out
into
pushf
xor
pop
jg
aas
mov
outsl
fmuls
mov
outsl
sbb
adc
scas
js
push
cmc
addr16
out
les
in
aaa
sbb
mov
movsb
jne
fwait
push
outsb
rcll
daa
std
lods
dec
push
xor
adc
mov
mov
fdivrs
insb
insl
movsb
pusha
mov
lahf
mov
out
xor
shll
ret
xchg
xchg
pop
dec
sbb
out
xor
pop
mov
movsl
lahf
shr
mov
into
push
test
push
mov
imul
push
roll
cmpsb
inc
stos
mov
sbb
shrl
out
imul
fdivrl
jg
mov
fadds
enter
xchg
cmpsl
pop
mov
out
popa
iret
mov
pop
xorb
movsb
and
xchg
inc
cmpsl
dec
inc
mov
push
mull
fadds
div
leave
movsb
lret
fisttpll
es
lret
push
mov
pop
cmp
cmp
add
andl
jne
iret
bound
add
xor
mov
loopne
dec
insl
gs
and
pop
adc
pushf
cmp
inc
pop
insb
into
sarb
out
push
sub
mov
jp
outsb
pushf
arpl
shlb
stos
sub
lcall
out
push
movsl
je
test
cmp
sbb
faddl
cli
repnz
int
popa
ret
mov
sub
xor
cmpsb
inc
pop
adcb
and
std
sbb
push
notb
cltd
inc
sbb
shr
xor
jmp
jbe
test
les
sbb
cltd
xor
inc
stos
mov
sti
enter
mov
adc
movsl
int3
ret
sub
add
mov
xchg
mov
push
sbb
xor
mov
push
mov
mov
ret
pop
and
pop
icebp
sub
mov
sbb
imul
into
push
inc
out
xor
lods
int3
ljmp
repz
jae
call
aad
cmp
mov
lock
push
pop
pop
xor
mov
push
rolb
xchg
pushf
or
iret
xchg
push
jbe
flds
iret
xor
scas
and
jbe
roll
daa
pop
push
out
pop
mov
push
ss
into
scas
sbb
adc
adc
ja
rcll
xor
data16
ret
xchg
int
jmp
xor
xorb
xchg
mov
mov
sub
out
rcrb
fcmovnu
cli
and
fucom
push
pusha
mov
fsubl
xor
mov
int3
pop
das
aas
or
mov
push
test
and
mov
insl
mov
imul
jnp
push
mov
mov
in
pusha
sbb
mov
int3
jecxz
mov
out
mov
jmp
fnsave
or
cmc
cmc
ja
fldenv
mov
decl
sub
mov
psadbw
in
ret
hlt
out
andl
fsubl
inc
outsl
fcoml
pusha
add
cltd
daa
pushf
pushf
sub
dec
xchg
mov
sub
fistpll
popa
loop
inc
sub
cmp
std
dec
scas
fwait
or
aaa
xor
mov
fs
test
pop
pop
mov
cmp
mov
mov
outsl
mov
repnz
mov
and
adc
push
fldl
imul
sbbl
in
pop
in
adc
and
mov
mov
xchg
cmpsb
inc
jo
fcompl
int3
inc
gs
dec
nopl
mov
and
int
adc
cwtl
shr
dec
push
pop
inc
sub
subl
mov
jp
push
je
int
sti
rcrl
lock
sti
in
div
lea
outsb
cld
and
and
popa
les
dec
or
les
xchg
inc
adc
cmpl
lret
imull
cld
adc
mov
push
icebp
out
lahf
sub
stos
movsl
xchg
lret
cmpl
jl
in
and
sbb
xor
pop
xchg
add
bound
pop
lcall
jne
jbe
xchg
xorb
data16
notb
lock
sbb
push
movsb
jle
popa
cmpsb
or
and
mov
push
xor
push
xor
out
adcl
mov
pop
cmp
les
out
cltd
insl
cmc
arpl
lds
sbb
mov
dec
in
and
mov
aas
xlat
loope
mov
push
in
nop
pop
lret
jmp
and
jno
ret
test
add
pop
adc
jmp
inc
stos
jne
and
movsb
call
xchg
js
hlt
les
xchg
enter
lods
arpl
stos
sbb
jge
daa
mov
jp
or
imul
int3
fsubs
loop
sub
ss
sbb
lock
fsubrs
sub
addr16
imul
enter
das
mov
sbb
dec
mov
je
inc
mov
push
negl
xor
cmp
jmp
loopne
sub
xchg
ror
pop
xchg
xor
dec
mov
sbb
push
inc
mov
mov
and
cmp
xchg
movsb
adc
mov
cmp
gs
pop
mov
pop
mov
push
sub
loop
sbb
mov
sub
loop
mov
xchg
jecxz
nop
sub
cmpsb
pop
mov
out
adc
dec
stc
imul
ficompl
lods
pop
mov
and
test
cwtl
icebp
jns
sbb
push
jle
aaa
enter
add
repz
inc
xor
mov
mov
mov
or
and
jno
and
shlb
outsb
sub
jnp
pusha
cmpsl
lea
sbb
rcrl
pop
movsb
inc
aaa
loopne
pop
inc
cmp
pop
pop
mov
int
xchg
dec
fisubs
jmp
xchg
divb
imulb
xor
or
orl
loopne
js
push
cmp
sub
test
mov
or
mov
xchg
jecxz
mov
add
bound
xchg
cmp
or
pop
and
jmp
daa
cmp
push
and
daa
aam
mov
test
repnz
inc
sub
mov
sbb
dec
jle
adc
out
fidivrs
repnz
dec
add
insl
sbb
xchg
lock
stos
lahf
fwait
mov
leave
int3
mulb
dec
sub
push
inc
cmp
loope
push
int3
fiaddl
mov
xlat
rcrb
addr16
push
sbb
pop
sbb
cmp
add
and
fnstcw
adc
xor
fildll
mov
mov
jb
mov
cltd
mov
filds
jns
shrb
pusha
jp
sbb
mov
xor
xor
jmp
fs
ficomps
lahf
icebp
inc
push
jns
mov
mov
pusha
dec
sub
cmp
mov
inc
sbbb
push
jne
add
xchg
addr16
test
test
cmp
mov
fisttpl
lcall
sbb
push
mov
xchg
inc
pop
pop
push
in
or
out
imul
cmp
adc
int3
dec
mov
mov
sti
popf
pop
add
sarl
cmp
loope
sbb
psubusw
inc
roll
int
cltd
jns
mov
xchg
aas
mov
outsl
cmpsl
aas
pop
rcrl
out
addr16
and
push
jae
adc
fucom
fcompl
push
mov
adc
mov
aam
sbb
sbb
or
call
mov
mov
or
rolb
add
dec
in
adc
cmp
jecxz
rcrb
in
notl
test
xor
jecxz
sar
insb
das
lahf
daa
pusha
clc
ret
lock
ljmp
mov
int3
roll
push
xchg
cltd
adc
inc
xchg
xchg
inc
ljmp
xchg
dec
imul
test
jo
mov
or
jle
lock
jb
fsub
pop
aaa
and
mov
lahf
lret
fwait
add
push
push
pop
jns
daa
or
out
fldl
pop
sbb
movsb
ret
inc
inc
orb
jge
cltd
lret
sbb
mov
push
jnp
or
mov
popa
sub
jns
rcll
push
aam
lock
push
sbb
ss
mulb
dec
sbb
lahf
xlat
pushf
sbb
push
ret
inc
jmp
call
and
pop
xchg
fsubr
int
insl
mov
mov
and
push
gs
adc
punpckldq
sarl
out
addr16
cmp
xchg
xor
stos
daa
adc
xchg
jmp
push
enter
or
pop
jge
push
or
push
mov
es
mov
inc
add
sbb
jg
lret
fwait
call
ror
es
fnstsw
es
repz
imul
shlb
data16
nop
xchg
pop
dec
add
cwtl
xchg
push
ficompl
ficomps
scas
pop
loope
je
mov
add
bound
sub
xchg
xchg
ja
fs
jbe
vmovaps
mov
into
out
ds
je
popf
dec
xchg
sub
xchg
stc
mov
sarl
repnz
cwtl
cmp
dec
in
push
repnz
aaa
iret
shlb
mov
push
insb
sub
popf
jge
add
mov
in
pop
adc
nop
push
aaa
inc
xchg
into
ss
sahf
leave
mov
and
dec
pop
call
adc
dec
or
push
shr
shl
jp
lret
out
je
sbb
ror
shll
mov
pop
data16
roll
scas
and
loopne
sbb
push
jae
adc
fsubl
frstor
mov
cwtl
movsl
push
lods
popl
cmpsb
sbb
cmp
sti
addl
loop
sahf
inc
addl
mov
and
dec
adc
and
lahf
xor
nop
xchg
negl
pop
jge
pusha
push
and
or
je
fadds
insb
negb
fisubs
adc
push
or
add
xor
daa
push
jg
pop
mov
test
loopne
orb
inc
inc
sub
cmp
dec
add
pop
fimuls
cltd
push
pop
scas
out
adc
mov
in
pop
jne
mov
push
lret
fimull
push
jmp
jnp
add
pop
push
cmp
mov
inc
call
xchg
cmpsb
push
and
mov
call
shll
adc
mov
adc
into
jge
xchg
fstpt
in
jl
dec
mov
insb
enter
sub
dec
in
xchg
pop
pusha
repnz
sub
xchg
pop
xchg
push
pop
push
pop
lret
fisttpll
enter
sbb
xchg
push
test
mov
inc
xlat
in
ret
sub
push
jne
cmpsl
dec
push
cltd
psubw
lock
push
or
xchg
inc
shll
mov
dec
push
mov
shll
pop
fs
mov
test
int
addr16
out
mov
or
mov
movsl
rsqrtps
in
pop
mov
add
and
popa
aam
loop
mov
push
pop
pusha
imul
insb
mov
push
fs
jo
xchg
mov
in
prefetch
dec
sub
jns
jg
ja
push
cmc
mov
push
dec
inc
push
mov
push
test
sbb
or
push
sti
push
data16
xchg
and
mov
dec
and
in
sub
imul
testl
and
xor
jle
push
psrlq
ljmp
cltd
sar
stc
xor
movsb
sbb
mov
jne
sub
scas
cwtl
popa
shll
xor
mov
jl
dec
insb
xor
pop
push
sub
jne
frstor
je
xor
gs
sbb
sbb
lcall
add
jne
jecxz
in
jecxz
xchg
sbb
mov
mov
and
ret
xchg
adc
inc
sbbb
lret
daa
sbb
push
cmp
hlt
jmp
fcmovu
lahf
push
mov
xor
mov
pop
or
in
pop
subl
cmp
mov
in
and
das
inc
sub
shlb
loop
jb
out
inc
out
lahf
jp
jns
xchg
mov
rcl
in
dec
jl,pn
and
in
adc
push
stos
fxch
dec
dec
push
add
jg
ja
or
into
jnp
loop
repnz
shrb
cmpsb
mov
or
test
dec
mov
scas
jge
xor
aas
fcoms
cli
adc
and
cltd
inc
hlt
test
or
or
add
xlat
cmc
pop
stos
and
mov
sar
popf
sti
js
and
pop
or
push
outsb
dec
dec
inc
xor
xchg
push
dec
jge
cld
add
inc
cltd
testl
add
mov
inc
lahf
mov
mov
inc
sub
jo
pop
adc
dec
sub
sub
mov
mov
das
mov
xor
xchg
lds
js
xchg
mov
mov
jg
in
sub
sbb
pop
dec
adc
insl
pop
pop
jbe
fisttpl
leave
int3
adc
fwait
popf
mov
add
sti
mov
mov
push
pusha
out
mov
cmp
lods
push
fst
and
rcrb
pushf
loopne
shl
imul
aaa
daa
es
popa
mov
inc
or
in
cltd
and
jns
or
xchg
xchg
daa
mov
sbb
adc
aad
dec
lea
loop
cmp
ret
lods
push
sub
lcall
test
dec
outsb
ds
test
add
pop
and
aaa
mov
movsl
sbb
je
out
stos
adc
inc
in
or
mov
pushf
mov
inc
adc
xor
cs
ret
aam
inc
mov
sub
test
ret
fbld
movsb
enter
subb
pop
out
stos
jmp
popa
outsl
xchg
in
outsl
or
loope
xor
mov
lret
jge
push
jle
shlb
cmpsb
movsl
dec
jmp
cmpsb
pop
mov
mov
shlb
mov
add
dec
or
jae
std
adc
out
inc
mov
ljmp
inc
xchg
jno
or
leave
mov
ret
into
imull
xor
mov
mov
sbb
dec
xor
daa
insl
or
iret
jmp
loopne
adc
ret
ds
js
es
push
cwtl
push
inc
add
xchg
ficomps
in
and
mov
out
imul
mov
popf
or
or
push
cmp
xor
leave
mov
xor
xchg
aam
fcmovnb
lret
in
scas
into
mov
jnp
dec
fwait
out
adc
pop
shrl
adc
mov
aas
jae
rorb
mov
clc
and
and
pop
xchg
and
ljmp
mov
pop
out
mov
inc
gs
addr16
mov
lret
int3
out
sbb
lods
push
das
in
push
mov
jg
jle
sub
fmuls
rol
lods
pushf
andb
ja
lahf
rcr
inc
flds
out
test
jg
mov
test
ja
lahf
or
shll
sti
ds
lods
out
nop
mov
mov
ret
in
jbe
inc
push
dec
or
pushf
xchg
xchg
sbbb
jle
std
adc
popf
adcl
xor
xor
je
sub
adc
xor
jp
dec
iret
adc
ds
mov
in
jns
stc
xchg
mov
lds
add
sbb
sbb
lea
adc
or
mov
inc
test
es
sarl
push
pop
clc
out
cmc
adc
ss
or
out
mov
push
pop
or
cmpsl
jne
mov
ret
popf
pop
dec
dec
iret
sbb
test
xor
push
push
xor
cmc
lods
mov
adc
pop
je
pop
popa
xchg
fs
lds
sbb
mov
aaa
xchg
or
lahf
jp
int
cli
add
add
dec
gs
mov
sub
clc
sub
clc
cmp
neg
xchg
mov
test
outsl
or
pop
xchg
cmp
mov
call
outsb
xor
sub
jae
in
enter
adc
imul
adc
push
clc
adc
push
add
mov
dec
stc
push
subb
xor
xchg
jge
loopne
ss
test
movsb
add
into
fsubs
aaa
aam
lods
cmpsb
sti
pop
in
test
mov
stc
lahf
mov
stos
jle
pop
mov
jbe
aas
test
lret
adc
inc
adc
aas
ficoms
popa
jns
push
mov
or
test
mov
push
sbb
std
rorb
mov
push
movsb
arpl
loope
pop
shrb
xorb
or
stos
mov
das
sub
xchg
cwtl
mov
paddusw
popf
adc
push
pop
or
lds
dec
into
jno
pop
jne
outsb
lahf
jo
mov
sub
mov
leave
push
jns
push
outsb
cmp
lock
mov
daa
jo
fdivr
ds
xlat
out
xor
aaa
int
xor
jmp
les
and
andl
dec
xchg
xchg
jg
aad
mov
jne
sub
jnp
iret
test
jbe
and
ljmp
ds
sub
fdivrl
mov
lret
pop
push
ljmp
mov
fidivrl
cwtl
xor
inc
dec
xchg
xchg
mov
mov
and
pusha
adcb
jg
inc
xchg
stos
movsl
mov
dec
jp
pop
jmp
xchg
fisubs
and
push
dec
adc
inc
in
imul
dec
arpl
mov
inc
fldt
xor
mov
int
enter
pop
or
mov
repnz
dec
inc
jge
mov
fcmovne
mov
je
adc
lcall
xchg
mov
fwait
clc
cmpsl
pop
popa
mov
sbb
sbb
cmp
or
or
pop
or
inc
in
repz
mov
jns
dec
sub
sub
sbbb
push
push
or
cmc
mov
cmp
cld
sbb
xchg
and
cmp
sub
cmp
xor
enter
lahf
pop
xlat
clc
or
data16
pop
push
push
mov
adc
aaa
sbb
call
sahf
lret
dec
push
adc
sbb
adc
mov
cwtl
mov
fs
cmpsb
mov
push
fildl
push
mov
jmp
movsl
shrl
or
jnp
movsl
xor
das
lods
addr16
jo
mov
xor
divb
jmp
test
out
mov
sbb
popf
sbb
mov
rcl
rclb
pop
mov
rclb
call
push
outsb
fistps
aam
test
leave
mov
jle
or
shl
cmpsb
pop
push
lahf
lahf
lret
cwtl
dec
cmp
cmpsb
ljmp
inc
mov
adc
movsl
rolb
mov
add
loope
in
dec
fcoml
pop
inc
cld
jmp
cmc
or
add
adcl
iret
sub
mov
inc
gs
cmp
or
fiaddl
jne
sbb
jne
sbb
loop
mov
cmp
cmp
add
xor
js
ret
mov
insl
data16
cmp
rcrb
outsl
push
inc
test
push
mov
xchg
dec
in
adc
jno
cmp
or
repz
pushf
or
stos
or
out
cmp
inc
bound
popf
and
pop
clc
mov
or
in
data16
enter
mulb
jnp
testl
sub
inc
lds
xchg
stos
test
data16
std
mov
in
sbbl
pop
lods
adc
insb
xlat
inc
dec
dec
push
pop
jo
enter
jb
pop
or
sbb
mul
loop
or
mov
loope
mov
ljmp
bound
mov
mov
cmpsb
mov
inc
int3
or
pop
or
mov
adc
pop
push
lods
add
leave
inc
dec
push
or
aad
inc
divl
lahf
jge
outsl
call
inc
enter
pushf
xchg
add
xor
jbe
std
nop
xchg
cmc
loop
mov
mov
loopne
mov
pop
ficomps
xchg
pop
das
lds
push
cmp
orl
out
adc
mov
xchg
fwait
mov
shr
aaa
inc
xchg
adc
roll
fisubs
inc
cmc
inc
js
cld
ret
in
sbb
clc
xchg
idivb
mov
and
xor
or
adc
and
jno
lcall
dec
and
xor
ficomps
jle
adcb
xor
add
xchg
in
pop
push
call
cmp
lret
psrld
mov
add
es
in
xor
addb
addr16
push
push
cmp
fcmovu
popf
xorb
mov
jae
pop
adc
movb
shll
aam
test
int3
cli
push
fnstsw
add
hlt
popl
daa
cmp
dec
gs
cmpsb
mov
jb
fstpl
cli
sbb
mov
xchg
aad
test
jecxz
aad
mov
push
adc
fldenv
xchg
dec
mov
lcall
in
cmp
test
jge
inc
xor
push
inc
shrb
xor
jnp
adc
push
sub
pop
or
inc
mov
xorb
jge
mov
cmp
ret
push
out
imul
lret
arpl
inc
stc
data16
ficoml
pop
push
pop
xchg
inc
and
jg
lods
insl
fdivr
mov
aam
hlt
pop
xlat
mov
fnstenv
sbb
dec
add
out
jmp
pop
fsubr
icebp
js
jne
xchg
aad
lcall
addr16
jnp
lret
mov
xor
cld
pushf
out
xchg
sub
jb
xor
sbb
jge
xchg
cmp
ss
add
and
daa
cli
xchg
mov
mul
xor
test
es
stos
mov
jb
jge
cwtl
push
andb
aaa
loopew,pn
mov
sub
fwait
jbe
xchg
and
hlt
sub
push
mov
pop
bound
addr16
movl
sub
mov
je
sub
inc
sbb
inc
pop
jne
cmp
sbb
mov
lock
loop
cmp
sbb
outsl
cmp
ret
je
cmc
mov
aas
pop
test
or
mov
sbb
insl
jge
or
push
or
addr16
lahf
mov
fs
out
inc
adc
lock
out
test
aaa
or
outsb
pop
add
stc
sub
mov
out
adc
adc
imul
decl
in
cld
xor
out
jnp
loop
push
subb
lods
fs
nop
lods
cmp
or
jg
mull
adc
lods
sti
pop
adc
int3
inc
jmp
fwait
add
out
in
mov
les
je
cmp
adc
push
pop
mov
arpl
jb
cs
dec
xor
pop
xchg
nop
into
xchg
add
cmc
hlt
jmp
push
into
std
shrl
xor
jl
rorl
jge
inc
mov
jbe
jge
scas
pop
jmp
imul
lock
push
into
or
movsb
cmpsb
sub
or
cmp
aas
pop
push
lahf
xchg
cmp
movsb
inc
mov
cmpl
scas
jno
js
inc
addr16
pop
out
popa
into
jg
hlt
jne
jb
aam
cs
xor
sahf
mov
loop
push
push
mov
clc
mov
and
mov
adc
cmc
push
mov
jo
xor
ds
mov
pushf
push
sarl
fdivrs
cmc
sub
js
shrb
mov
push
sbb
pop
xchg
cmp
loop
xchg
ss
ss
mov
add
jno
test
fs
cltd
out
xchg
addl
adc
test
sub
sbb
imul
sub
test
pushf
movsb
pusha
mov
adc
and
mov
mov
mov
out
jmp
mov
adc
jle
push
add
dec
mov
pop
sbb
lea
inc
lods
dec
scas
xchg
dec
push
xchg
cwtl
dec
adc
test
or
dec
cmpsb
addr16
mov
mov
dec
je
inc
shll
test
mov
leave
lret
cmp
test
out
repnz
pop
inc
ret
sub
add
xor
pop
push
js
mov
mov
mov
js
sub
ss
xor
jle
sbbl
inc
push
stos
add
mov
jl
fs
dec
xchg
leave
out
addr16
clc
in
dec
je
adc
jb
mov
mov
xchg
popf
adc
xor
ljmp
test
push
xorl
dec
scas
sub
jle
pushf
int
jnp
cmp
sbb
popa
mov
push
bound
dec
lahf
ja
push
loop
cmpsb
fisubrl
pop
and
popf
jno
imul
xchg
jp
mov
xor
inc
sbbb
out
pop
cmp
jb
cmp
cmc
dec
xchg
and
stc
mov
loope
int3
adc
add
cmpb
xor
gs
jge
push
or
sbb
jmp
push
pop
mov
js
mov
sahf
xchg
cltd
mov
jp
sub
pop
push
addr16
ret
add
shll
cmp
ljmp
aaa
insb
cltd
mov
xor
in
ffree
out
push
xchg
sub
push
insl
outsb
dec
xor
cmp
lahf
mov
das
sbb
mov
mov
fadd
and
mov
push
imul
pop
dec
or
dec
bound
sbb
pop
add
xchg
lret
cmp
outsb
cwtl
jo
cltd
daa
xchg
and
rorl
cmc
mov
mov
enter
mov
xor
inc
and
fldt
imull
or
shr
cmp
popf
hlt
xor
shl
inc
test
sub
cmpb
inc
jge
jecxz
jle
fistl
in
or
push
iret
add
mov
in
pop
lret
dec
divl
xor
adc
pushf
ss
dec
mov
ja
addr16
sbb
idivl
inc
inc
ss
lock
cmp
insl
xchg
cmp
sub
pop
fs
xor
aas
cmpsl
repz
fcoml
loopne
push
jbe
adc
fbstp
lret
and
xchg
xchg
mov
add
dec
sbb
fsubs
dec
pushf
inc
int
jg
xchg
fucom
loop
push
lods
xlat
out
pop
jo
addr16
xlat
pop
and
add
cmp
hlt
jno
jge
jp
fstpl
js
inc
cmpsl
lock
push
fimull
sti
jns
sub
pop
ljmp
lds
pushf
xor
test
cmp
aas
std
sbb
rorl
fisttpll
cmp
mov
xor
push
xlat
jb
inc
push
divl
and
loope
repnz
test
loop
aas
or
sahf
and
or
xchg
add
lahf
pusha
int
or
cli
dec
cs
loop
clc
lock
add
mov
cmp
sub
push
lcall
loopne
icebp
mov
enter
push
in
stos
ror
call
ds
adc
sbb
repnz
shlb
jo
jae
or
pop
lds
adc
inc
dec
xor
adc
jle
dec
aaa
imul
push
inc
test
push
jl
adc
or
xchg
push
insb
mov
pop
sub
pop
cmpsl
mov
fmull
add
xchg
aaa
sub
rcl
ficoms
jns
movsl
into
mov
push
push
jecxz
adc
push
xchg
mov
push
jne
xchg
and
icebp
lret
insb
inc
mov
jne
out
pop
cmc
fidivs
or
nop
jb
imul
cmp
xchg
jae
xchg
les
push
xor
push
mov
jns
xor
addr16
movsb
jmp
mov
lods
rol
mov
mov
aad
aas
inc
gs
repnz
cld
mov
stos
xor
pop
mov
pop
xchg
mov
repnz
cltd
xor
je
fstl
cld
and
pop
enter
lret
cmpsl
adc
jns
mov
insb
and
and
mov
out
xlat
repnz
adc
push
sub
jp
sahf
and
js
mov
and
jo
mov
xlat
subl
js
xor
cmp
and
shl
addr16
jae
addr16
in
ret
and
aaa
iret
lods
fcomps
ds
inc
xchg
mov
dec
daa
adc
push
imull
leave
push
enter
and
dec
and
test
or
mov
fcomps
push
mov
cmp
rcl
jmp
mov
ret
mov
fldcw
add
lea
sbb
mov
mov
pop
mov
pop
popf
dec
jno
dec
clc
push
movsl
or
cmp
xor
sti
xchg
scas
jecxz
movsb
push
jle
lock
nop
shrb
jbe
outsb
fidivl
lock
call
xchg
rep
out
sti
add
aaa
mov
js
mov
inc
dec
loopne
or
mov
inc
pop
mov
cmp
insb
insl
push
jno
mov
ds
cld
stc
popf
mov
mov
sbb
shlb
popf
cmp
addr16
xorb
mov
ljmp
mov
outsb
lret
ret
inc
das
nop
bound
ret
leave
jbe
sbb
andb
dec
mov
jmp
pop
pushf
mov
dec
xchg
jns
mov
adc
cltd
dec
lret
lcall
shlb
inc
xor
cld
mov
jb
sub
adc
dec
inc
orb
jae
mov
sub
mov
or
or
push
cmp
push
or
push
mov
loop
ret
addr16
movsb
daa
icebp
jmp
xchg
mov
push
or
push
out
fidivrl
lcall
jmp
cmp
add
das
jno
loopne
jge
imul
leave
subl
iret
addl
cmp
add
xor
xor
jge
mov
jg
cltd
rolb
inc
or
test
ljmp
sub
or
clc
xchg
adc
xor
sub
adc
hlt
and
xchg
xor
lods
int3
roll
std
mov
xor
mov
cs
sub
sub
cmp
cmp
mov
test
aad
cmp
jl
addr16
stos
and
idiv
mov
jecxz
fildl
add
je
adc
fimuls
jmp
pop
inc
pushf
or
in
push
xchg
sbb
cmp
xchg
cs
cld
xor
adc
jmp
push
repnz
out
leave
fs
imul
push
aam
mov
divb
inc
mov
jge
lcall
cmp
push
cmp
mov
mov
int3
push
into
test
jg
hlt
inc
sbb
in
push
jl
je
push
sub
pop
pop
daa
or
cmp
pop
mov
inc
cmp
shll
ds
aad
xchg
pop
mov
js
fwait
stos
and
sub
pop
inc
or
sbb
mov
scas
ljmp
es
cmp
or
sbb
jp
jecxz
pop
orb
sbb
xor
mov
js
push
daa
idivb
sar
pop
fdivs
pop
xor
xchg
mov
dec
mov
jno
fldt
cmpsb
xor
jecxz
lods
test
adc
mov
mov
insl
out
fimull
pop
dec
mov
xchg
push
mov
pop
xchg
test
into
scas
bound
loop
jg
jp
scas
mov
sub
jle
sub
loope
mov
pushf
jp
xor
into
or
imul
xor
stos
in
xchg
sbb
mov
inc
push
jnp
push
sbb
stos
push
sbb
xor
lret
movsl
into
dec
jbe
mov
or
gs
mov
lods
or
cmp
jle
jo
dec
cwtl
pop
sbb
mov
mov
fs
cwtl
lds
sub
int3
pop
adc
setl
cmp
aas
xchg
rcr
test
mov
dec
leave
insb
xchg
test
jne
sbb
inc
mov
jbe
int3
cltd
std
sbbl
pop
mov
outsb
push
popf
sub
sub
clc
lcall
idivl
imul
lahf
mov
inc
mov
xor
jbe
xor
cmp
popa
les
add
pop
inc
push
add
pusha
dec
mov
mov
cli
cli
cwtl
negl
and
loope
mov
fiadds
mov
cmp
jns
mov
pop
out
iret
je
pushl
xor
leave
push
outsb
ret
jge
in
and
fcomip
mov
addb
xor
push
xchg
and
mov
mov
add
ss
pop
es
pop
rcll
test
adc
ret
icebp
dec
loop
mov
and
ja
mov
mov
xor
sub
out
out
sub
mov
arpl
enter
into
outsb
std
mov
loop
xor
ret
out
popa
mov
add
cs
mov
scas
adc
dec
sub
cwtl
push
shll
ja
and
and
dec
into
enter
scas
cwtl
xor
push
pop
dec
xchg
mov
popf
xor
and
cmpsl
lods
mov
pop
js
push
out
and
dec
adc
or
repnz
in
mov
pop
dec
outsb
cmpsb
mov
fidivrs
pop
lods
imul
cmp
add
stos
adc
shr
cltd
inc
dec
sbb
mov
jp,pt
vpmacssdqh
je
xchg
and
cmp
mov
stc
cmp
cmp
pop
leave
loop
mov
mov
shrb
daa
mov
xor
gs
push
push
icebp
test
mov
xor
xor
shlb
pushf
je
out
lea
sub
hlt
push
mov
data16
fs
addr16
xchg
jecxz
xor
sti
pusha
mov
jae
mov
or
inc
adc
std
xchg
rol
and
sub
gs
mov
xchg
pushf
sub
std
jl
ffree
xor
xchg
stos
mov
sbb
je
notb
sub
xchg
adc
fcoml
adc
fidivs
jge
sbb
ds
jnp
cmpsb
mov
mov
test
cmpsb
vpsadbw
popa
mov
lock
out
cld
add
lock
mov
push
mov
xorl
xor
cmc
repnz
sub
lahf
xlat
fs
push
lea
xor
cmpsb
leave
repnz
pop
mov
pop
push
out
push
mov
inc
xchg
mov
js
fnstsw
cmp
add
popa
pop
dec
outsl
xor
ficompl
sbb
pop
dec
pop
dec
jbe
fnsave
sbb
fcom
cmpsb
mov
pop
inc
jecxz
faddl
cmpsb
data16
dec
int3
adc
lret
fs
rcl
or
lahf
sub
scas
mov
and
jmp
ret
inc
out
scas
xor
or
and
jp
loopne
pop
stc
in
pop
cmp
cwtd
sbb
mov
mov
out
scas
push
leave
jp
pop
jmp
mov
sub
pusha
jno
xor
dec
call
push
mov
cltd
dec
ljmp
jb
or
xor
sub
and
and
lret
mov
jae
mov
dec
cld
aas
in
aad
add
or
icebp
mov
pop
cmp
xchg
push
mov
out
ss
inc
mov
mov
or
aas
js
mov
sub
sub
inc
nop
pop
mov
lret
test
jnp
nop
adc
sbb
test
adc
outsl
js
xchg
mov
add
cmp
mov
and
xor
pop
jl
lods
adc
pop
add
and
xor
xchg
push
mov
sbb
jp
movsl
les
insl
loop
fadd
sub
mov
pusha
sub
push
pushf
outsb
arpl
cmp
lahf
mov
push
pop
and
mov
imul
cli
or
data16
dec
lahf
push
sub
inc
ljmp
pop
inc
jle
scas
pop
je
jl
xor
push
pop
ds
pop
mov
jae
push
inc
mov
pusha
sbb
xor
insb
push
push
dec
and
test
xchg
daa
loope
jae
sub
cwtl
cld
lds
push
add
or
lret
sbb
dec
int
dec
out
scas
les
mov
call
xchg
inc
les
sbb
js
aad
inc
mov
loope
dec
imul
scas
test
pop
mov
mov
cld
or
ret
sbb
sbbl
les
cmp
cmpsb
xchg
or
lods
and
jge
xor
or
das
pop
cs
and
into
loope
adc
adc
jmp
mov
in
jmp
pop
add
scas
hlt
add
add
pop
fsubs
xchg
enter
jb
dec
adc
adc
xchg
cs
int
clc
push
push
call
ret
adcb
imul
jle
lcall
adc
icebp
lcall
mov
xchg
cmp
push
loope
in
add
add
mov
adc
in
add
sbb
or
cmp
loope
roll
push
out
sbb
push
hlt
fbld
cwtl
dec
loope
mov
jge
fdivrl
test
inc
loope
and
and
jbe
cltd
and
shr
scas
push
insb
mov
sbb
decb
sub
push
adc
movsb
lds
lahf
rcll
out
adc
push
int
xor
daa
or
jo
jb
mov
adc
out
sbb
gs
outsb
leave
cmp
sahf
in
xchg
and
lret
jb
lods
dec
inc
in
add
cmp
andb
stc
lahf
mov
ds
adc
xor
dec
push
mov
mov
and
das
push
mov
cmp
cs
pop
out
and
push
or
imul
xor
shl
pop
in
sbb
mov
loope
xor
nop
xor
cwtl
mov
push
inc
dec
inc
movsb
shl
in
mov
push
stos
push
pusha
pop
loopne
jle
dec
mov
loope
test
xchg
rcl
cs
mov
inc
xor
push
mov
xchg
xlat
jo
scas
lock
jae
jmp
adc
sub
sahf
in
xchg
shrl
and
lcall
xor
sub
push
testl
mov
dec
xlat
stc
jns
hlt
fistpl
mov
into
fsubrl
sbb
movsb
fstpl
adc
add
and
arpl
adc
jnp
cmp
mov
mov
jecxz
fiadds
mov
adc
cld
lret
sbb
pop
fnstsw
cmpsb
icebp
test
cmpsb
clc
mov
dec
dec
test
jg
push
adc
std
inc
dec
data16
mov
push
pop
sub
psadbw
mov
dec
mov
fnsave
leave
sbb
fsubrs
cmp
sub
adc
mov
mov
pop
and
clc
in
bound
testl
test
pusha
call
mov
mov
enter
xchg
int
mov
jmp
aaa
icebp
je
push
imul
stc
sti
les
cmp
or
or
mov
mov
out
lock
adc
in
cmpsl
fmuls
inc
rcr
inc
shll
std
push
inc
ret
idivb
jp
std
fistpll
int
adc
mov
outsl
out
cs
inc
in
call
lds
xchg
aad
rorb
sbb
mov
pop
imul
jb
cmpsl
dec
test
int
lahf
mov
jns
or
iret
mov
aaa
cli
in
lahf
pop
pop
test
pop
pop
mov
and
testl
cmp
sub
dec
pop
xchg
dec
stos
ja
fwait
bound
adc
push
cwtl
xchg
cmpsl
xchg
inc
enter
fstps
sub
adc
outsl
push
jmp
push
test
fwait
push
sub
mov
adc
dec
subl
pop
cs
inc
rorl
mov
cmp
or
shll
dec
push
sbb
in
movsl
aam
sbb
mov
xor
imul
mov
leave
xchg
xchg
rorb
mov
les
repnz
xchg
push
lds
mov
dec
cmp
pop
xor
adc
xchg
scas
mov
xchg
mov
or
xchg
test
fnstsw
push
push
xchg
inc
fldt
icebp
aas
xchg
arpl
cmp
pop
add
loope
test
add
dec
in
inc
dec
out
cmp
xor
mov
pop
xor
fsubs
icebp
mov
mov
neg
aad
mov
in
push
lret
aaa
mov
rcrl
mov
lret
gs
adc
and
mov
cmp
mov
and
shr
mov
push
inc
pushf
push
mov
pop
and
cmp
out
pop
lahf
ja
in
push
lret
jnp
outsb
mov
mov
jge
lods
pop
cmp
nop
xchg
jl
or
jl
mov
inc
add
push
xchg
xor
insl
jo
add
je
lods
stos
sbb
les
sub
ret
sbb
mov
popf
mov
push
bsf
push
mov
lds
iret
pop
into
imul
pushf
bound
scas
add
push
or
and
addr16
dec
inc
subb
push
hlt
arpl
lahf
add
scas
es
xor
and
lods
push
je
pop
add
push
mov
adc
icebp
in
lods
mov
test
aad
push
pop
popf
push
dec
test
imul
xchg
sub
cs
int3
stos
xchg
aam
fs
mov
into
push
cltd
dec
sub
cmp
pusha
mov
and
push
lcall
jne
add
cld
lahf
pop
and
pop
mov
insl
mov
mov
xor
push
add
add
enter
fsubrl
shrb
jl
cmp
add
push
mov
mov
cli
xchg
pop
scas
inc
test
icebp
test
sbb
cld
cltd
mov
mov
mov
push
sahf
fists
add
rol
dec
enter
pop
das
loope
push
push
mov
lods
inc
xor
movsb
jae,pt
and
imul
in
divb
std
adc
push
xchg
mov
ret
sub
mov
ret
jns
pushf
fmuls
nop
sahf
imul
mov
out
leave
aas
adc
daa
push
mov
push
jle
sti
std
sub
js
mov
mov
pop
ljmp
fiaddl
lahf
mov
pop
icebp
cmp
jl
int3
jle
inc
movsl
enter
inc
in
xchg
xlat
or
xchg
xlat
aas
or
lods
movsl
dec
mov
ja
or
cmp
xor
sbb
in
sub
xor
sbb
je
lds
ja
cs
repz
in
sub
dec
xor
sub
mov
in
xchg
imul
mov
inc
add
and
jp
inc
push
aam
xchg
lret
sub
js
jle
pushf
and
in
stos
adc
lds
repz
test
pop
hlt
jge
cmc
into
mov
fstl
divb
les
pop
call
shlb
cltd
stos
cmp
xchg
ret
stos
or
popa
sub
mov
lods
mov
int3
adc
jb
dec
jno
inc
lret
mov
push
mov
lret
inc
and
cli
xchg
shll
jne
push
xor
in
aam
xor
aad
dec
dec
mov
mov
sbb
lret
jecxz
out
das
inc
cmpsb
dec
push
scas
adc
je
jns
and
add
mov
fldt
push
out
or
xor
repnz
add
addr16
dec
sub
fidivl
adc
xchg
sbb
mov
xor
push
jae
fiadds
js
add
push
adc
adc
xor
rol
sbb
mov
xor
ds
mov
cwtl
fstpt
add
sti
aaa
pusha
stos
shl
jge
shrb
loop
adc
pop
jb
insb
faddl
push
sbb
call
sbb
and
push
sbb
mov
cmp
push
jge
das
adc
xor
dec
jnp
mov
test
pop
mov
and
xchg
add
shll
fwait
in
cld
mov
out
in
cld
jmp
aad
rclb
jl
pop
aam
jl
mov
fst
push
out
and
out
dec
push
jge
dec
add
dec
cmc
sbb
push
cltd
mov
dec
les
adc
jge
mov
push
cs
pop
out
or
das
psubw
and
mull
sahf
shll
sub
push
mov
mov
push
cld
pop
push
xchg
imulb
inc
xor
xlat
mov
pusha
add
mov
stos
xor
pusha
mov
fsubrs
pop
jne
dec
jo
les
cmp
shll
dec
insl
sub
cmp
aad
fcmovne
test
mov
cmp
adc
or
test
jnp
sbb
jp
push
insl
pop
divl
xchg
insl
daa
or
xor
and
pop
cld
scas
dec
out
push
push
jns
fucomip
mov
jge
movsb
js
ja
adc
add
dec
test
mov
repnz
loopne
and
cmp
dec
add
pop
pop
and
fwait
mov
or
std
fnop
test
lahf
lods
into
push
jmp
fwait
jg
pop
lds
fiaddl
dec
test
loopne
xchg
xchg
orb
xor
fcomi
test
repz
or
cmpb
inc
pop
mov
xchg
loopne
xchg
mov
inc
or
push
xor
repz
bound
cs
lods
push
pop
add
int
into
insb
mov
out
fwait
out
pop
mov
cmpl
add
ljmp
xor
or
and
ja
fimuls
out
stc
inc
arpl
mov
enter
repz
sahf
and
aad
cmpsl
cltd
cmp
jmp
in
notl
mov
fsub
mov
stc
lret
push
rcrb
xor
out
fprem1
xchg
push
pushf
xchg
sub
lea
xor
xlat
in
shl
btc
push
jo
movsb
inc
imulb
cmp
adcl
kunpckwd
jp
mov
pop
jne
mov
nop
out
pop
adc
pop
outsl
dec
daa
adc
sbb
cld
push
orl
int
jo
ja
out
xor
push
mov
xchg
jns
add
aam
mov
xor
imul
mov
jmp
fbld
and
cmp
push
mov
add
mov
out
in
sti
jle
dec
fidivl
mov
push
sbb
sbb
push
shll
je
mov
lret
and
addr16
lcall
adc
adc
xchg
push
pop
mov
call
push
push
fbld
jge
sub
repz
jnp
mov
fldl
cld
or
ret
shr
ret
arpl
or
mov
in
dec
dec
mov
inc
pop
outsb
scas
loope
pop
mov
nop
fisubrl
fnstcw
es
insl
fidivl
push
cltd
jp
cs
bound
xchg
or
mov
mov
mov
aam
pushf
test
adc
add
mov
ljmp
hlt
aad
lret
adc
sbb
push
es
mov
sbb
xor
dec
repz
fstpl
push
insb
lds
or
stc
and
add
lods
dec
jns
pop
aas
int
test
inc
pop
mov
das
adc
subb
in
cmp
je
and
sbb
push
icebp
arpl
addr16
sbb
stc
mov
cmpsl
jmp
cmpsb
imul
paddusw
xchg
dec
rorb
lea
pop
pop
jge
bound
inc
loop
inc
cltd
mov
push
rolb
mov
jno
push
imul
xor
repz
xchg
xchg
decb
dec
mov
or
cmp
mov
mov
adc
adc
add
add
jmp
dec
jmp
adc
pop
dec
lds
inc
pop
std
inc
leave
cmp
shlb
dec
cmp
aad
sti
sbb
jnp
xor
xchg
jmp
shl
dec
outsl
cmpsb
mov
sti
mov
add
or
pop
jnp
popa
outsb
mov
ret
sbb
xchg
mov
sahf
add
ret
xor
fsubl
xchg
aaa
sub
mov
lcall
inc
inc
aam
mov
fsts
xlat
mov
adc
inc
sub
xchg
xor
jmp
xor
cmp
lret
fistps
push
insl
mov
ljmp
ja
sbb
test
mov
push
adc
jnp
xor
dec
add
popa
clc
mov
into
xor
out
dec
sbb
push
shll
jo
rclb
shlb
int
lret
imul
std
or
or
nop
inc
pop
clc
add
add
jmp
sbb
xchg
or
clc
mov
pop
xchg
ja
cmpsl
nop
loope
sbb
jno
cmp
inc
fwait
jno
stos
ss
jno
sub
push
or
scas
sbb
fnstsw
imul
cmp
push
pop
inc
or
mov
xchg
jne
xchg
movsb
xor
or
out
add
add
adc
sub
hlt
pop
mov
push
xchg
enter
sbb
inc
mov
fdivs
sbb
jp
jecxz
lahf
fstpt
add
mov
pop
out
mov
and
jmp
sbb
dec
cmp
cmp
jle
push
mov
repnz
mov
in
cmc
xchg
xor
adc
addr16
xor
aaa
popf
xchg
es
xor
jb
fisubrs
loope
pop
call
sbb
dec
and
cli
aad
mov
test
mul
ds
sub
nop
aas
pushf
insl
enter
jb
pop
arpl
loope
fwait
imul
popa
imul
mov
inc
sub
jbe
lret
aaa
outsl
mov
dec
fiaddl
mov
adcb
test
sub
pop
push
push
mov
movsl
inc
lret
fbstp
push
mov
lds
and
mov
mov
add
ds
and
test
test
inc
adc
addr16
sbb
or
adc
jge
popf
test
and
lret
lea
xor
js
scas
sbbl
jb,pn
icebp
rolb
mov
shl
int
mov
aas
scas
les
je
push
sbb
pop
pusha
std
xor
push
outsl
jecxz
mov
enter
add
cmpb
push
insl
mov
stos
nop
aad
bswap
jnp
incl
popa
or
daa
fxch
sbb
sub
scas
scas
fsubr
push
xchg
mov
ret
mov
adc
adc
adc
fs
jbe
adc
pop
inc
pop
arpl
pop
jnp
pop
fnstenv
push
or
cs
or
adc
push
and
test
sbb
fistpl
and
rorl
mov
jg
jmp
test
mov
mov
mov
dec
adc
xchg
vmovq
jp
xor
mov
mov
dec
xchg
add
dec
stos
ret
lock
in
fisubrs
mov
push
mov
cmp
scas
cmp
stc
adc
xorb
adc
cmp
cmp
fstps
pop
aad
sbb
test
mov
mov
push
pop
cli
add
out
ljmp
cmp
std
es
dec
adc
mov
int
mov
xor
stos
test
add
sbb
inc
ja
shlb
push
push
je
xor
add
push
andb
test
pop
and
sahf
sbb
inc
fcoml
mov
inc
cmc
jl
testl
js
and
pop
push
icebp
icebp
aas
repz
icebp
test
out
lcall
sbb
sbbl
mov
jae
mov
adc
pop
sbb
xor
sub
push
dec
sub
subl
loopne
dec
incb
outsl
push
or
cmp
out
je
and
fwait
je
mov
push
aas
mov
pusha
jp
fwait
or
and
push
mov
enter
sub
addr16
cmp
call
insb
pop
mov
and
push
dec
lock
jge
lock
andl
push
into
push
and
jnp
push
push
pop
inc
cmpsl
lods
into
pop
pushf
push
fistpll
push
cmp
mov
fwait
repz
dec
sbb
stos
adc
jle
ret
pusha
hlt
cmp
and
mov
mov
jmp
jno
in
insl
das
sbb
movsl
mov
test
in
testl
cld
shl
arpl
outsb
or
add
in
cmp
mov
jno
jg
std
dec
fildll
push
cmp
cmp
mov
loope
in
adc
stos
hlt
xor
fimuls
push
mov
arpl
pop
pop
inc
pop
sbbb
fisubrl
popa
xchg
cmc
mov
ja
jmp
or
fs
or
xchg
pop
loop
pop
movsl
sub
xchg
or
pop
mov
xchg
or
fildll
sub
addr16
into
fnstenv
mov
lods
insb
mov
fs
cmpb
shlb
pop
inc
jmp
test
in
add
inc
jne
push
jecxz
sub
add
and
scas
push
lret
dec
pusha
mov
out
pop
negl
imul
jl
push
cmpsl
jae
mov
daa
out
mov
mov
and
push
outsb
repnz
mov
mov
adc
inc
inc
daa
fwait
in
push
jp
mov
shl
lret
cmp
mov
ret
dec
inc
mov
std
pop
cmpb
imul
inc
sbb
sbb
mov
pushf
xchg
xlat
cmc
imul
and
xlat
andl
inc
lods
std
jg
cmpsb
std
sub
inc
fwait
inc
addr16
cmp
scas
dec
jbe
fdivs
lret
jle
sbb
mov
mov
jg
dec
negb
fisubrs
xchg
dec
fidivs
push
lods
les
push
add
xchg
lea
arpl
lds
mov
hlt
sbb
fwait
les
test
and
cmp
mov
or
scas
mov
out
mov
ficompl
sub
xchg
jmp
push
mov
cs
xchg
jmp
movsl
push
ja
push
int
inc
arpl
test
push
cmpsb
in
test
mov
mov
or
nop
and
icebp
shlb
rolb
jae
dec
sbb
imul
out
cmpsb
gs
mov
cwtl
jle
dec
stos
push
enter
cli
fildll
mov
aaa
shrl
xorl
sbb
push
aam
push
mov
mov
xchg
arpl
and
mov
lret
fnsave
push
sahf
pop
rcrb
xchg
lcall
ja
cmp
lcall
jo
mov
bound
adc
aaa
push
je
stos
push
mulb
jmp
push
ret
add
xor
mov
or
jne,pt
lods
test
out
inc
or
loop
cmp
and
lods
arpl
stos
pop
aas
pop
cltd
add
pop
cli
fcmovnu
sub
and
outsl
sbb
test
cmc
sub
push
pop
lcall
xchg
lret
push
out
loop
iret
xor
sbb
xchg
cmp
inc
test
loop
add
lret
adc
xchg
into
loopne
mov
cmc
inc
out
loope
movsl
push
pushf
or
ss
dec
jae
sub
out
jle
test
test
adc
repnz
shlb
mov
jno
mov
pop
out
cmp
inc
in
jle
xchg
nop
sub
and
push
add
push
sbb
inc
out
or
dec
shlb
fldl
lods
adc
scas
dec
sbb
popa
xchg
cmp
bound
test
clc
sbb
push
aad
stc
imul
xor
adc
mov
pop
scas
jmp
cmp
xchg
arpl
jae
mov
xor
gs
add
mov
adc
js
pop
ret
and
imul
xchg
pop
out
sarl
mov
std
test
dec
jnp
stc
xor
outsl
jnp
sbb
lea
add
dec
outsb
xor
xchg
and
repnz
ds
jl
add
adc
lea
jg
insb
adc
ss
jne
not
mov
push
or
rolb
scas
ret
mov
push
pop
jo
loopne
sahf
adc
jo
pop
ss
or
scas
cmp
inc
sub
adc
jb
enter
mov
push
jmp
push
pop
cmp
push
movsl
and
jmp
movsl
and
jle
mov
adc
xchg
stos
xchg
inc
fstpt
arpl
push
lea
dec
outsl
or
icebp
ss
jge
repnz
sahf
das
add
adc
mov
call
mov
hlt
stos
jnp
push
out
pop
popa
shlb
pop
das
xlat
mov
xor
xchg
and
outsb
lock
movsb
push
retw
movsb
enter
aas
loopne
sbb
mov
lea
std
add
and
imul
pop
ret
sbb
lods
into
xchg
cmpsb
sub
lahf
pop
xchg
add
jns
xor
fsts
jl
dec
mov
js
jmp
hlt
outsb
outsl
xchg
jno
mov
sbb
cmpsb
fisubl
mov
xor
pop
pop
dec
imul
je
jmp
mov
mov
jle
mov
fwait
mov
pop
xor
sbb
mov
ret
mov
pop
inc
sti
pop
push
push
in
or
inc
jmp
faddl
dec
mov
jl
push
mov
imulb
popl
mov
fsts
dec
cmc
fcomp
out
ljmp
ret
adc
cld
xchg
pop
or
fists
cli
mov
push
cmp
pusha
outsl
popf
lcall
xor
cmp
push
scas
stc
mov
pushf
inc
insl
add
out
in
popa
mov
mov
push
mov
mov
fucomip
dec
lods
jnp
jnp
mov
mov
daa
test
leave
cmp
xchg
test
inc
mov
loop
test
mov
js
dec
bound
nop
mov
repz
loop
test
and
aas
inc
fsubrs
aas
scas
pop
pop
xorl
das
dec
mov
mov
pushf
lret
mov
das
rcll
xchg
insl
daa
jne
mov
dec
sub
sub
dec
mov
pop
jl
fidivrl
les
lods
mov
mov
fisttpl
movsl
mov
pop
jg
ljmp
and
dec
enter
fs
shlb
out
outsb
dec
daa
dec
mov
sub
xchg
mov
inc
mov
imull
addb
jns
add
test
mov
test
out
out
out
cmpsl
scas
mov
test
out
dec
sar
sub
out
movsl
stos
push
rcr
mov
lahf
rorl
sti
cld
push
imull
sbb
push
sbb
sub
daa
add
push
pop
cwtl
cltd
add
push
xor
mov
mov
das
lcall
insl
xchg
nop
cmp
or
xchg
enter
sub
add
sbb
out
inc
loopne
je
out
dec
test
push
jl
jp
daa
adc
xchg
dec
pusha
cltd
cmp
jb
lahf
repz
loope
push
ja
mov
cmp
fidivrl
add
add
bound
les
or
jno
fisttps
out
sti
mov
lret
fildll
dec
fwait
cmp
pop
adc
inc
jg
sahf
push
add
cmp
in
or
pop
pminsw
cmpb
js
mov
shlb
in
pop
push
cmc
fmuls
je
and
dec
cmp
pop
icebp
test
inc
pusha
shlb
sbb
and
int
cmpsl
cmpsl
push
mulb
and
popa
xchg
adc
mov
dec
ret
xor
popf
je
int
leave
fnstcw
pushf
and
inc
stos
cmpsl
or
pusha
movsl
scas
sbb
and
hlt
in
mov
jbe
xor
scas
ss
push
movsl
out
imul
cltd
jge
xorl
xor
in
cmp
add
pushf
out
fwait
mov
mov
jl
iret
mov
movsb
jp
cltd
push
faddl
pop
jbe
rclb
cmc
pop
or
sti
das
int3
in
sub
das
in
scas
stc
mov
add
jbe
pop
inc
popa
pop
and
imul
leave
shlb
push
mov
push
add
mov
dec
lahf
je
xchg
mov
fwait
pop
and
push
push
jno
mov
add
push
fstpl
scas
mov
jge
add
stc
xor
pop
sbb
mov
xchg
arpl
push
jg
jmp
lcall
xchg
into
sahf
out
mov
scas
pop
push
dec
ja
repnz
shlb
out
sti
addr16
cwtl
add
adc
mov
push
jnp
adc
call
mov
push
daa
int
cmp
repnz
mov
std
stos
and
adc
outsb
pop
push
pop
fwait
loop
rclb
jbe
jg
cwtl
xor
inc
xchg
das
cmp
call
sub
cmpsl
clc
outsb
and
xchg
out
mov
dec
ds
inc
call
push
dec
idivb
pop
jmp
add
xor
sub
xorl
jge
movsb
adc
or
fbld
lock
mov
call
fstpt
cmpb
mov
mov
mov
jo
xchg
arpl
hlt
std
jp
pusha
pop
xlat
xchg
jmp
mov
aad
outsl
ds
or
xor
clc
test
cs
insb
xchg
jp
add
add
cmp
dec
inc
arpl
ficoms
and
outsl
inc
dec
jnp
icebp
mov
iret
push
inc
push
daa
insb
jle
je
jecxz
lds
rolb
dec
int3
cmc
xor
mov
inc
jno
mov
push
je
mov
mov
mov
aam
push
or
push
mov
bound
push
pop
out
sbb
pop
mov
cwtl
mov
fld
in
add
cli
jecxz
cmp
mov
fisubl
cld
or
ss
cltd
jl
cmp
push
inc
mov
adc
fldenv
add
jns
stos
sbb
or
push
adc
jle
mov
push
iret
addr16
fnsave
pop
push
aam
outsl
orb
and
shr
pop
mov
pop
xchg
cld
js
aam
xor
and
and
rorb
inc
pusha
jns
jb
subb
ret
popa
repz
outsb
mov
inc
in
lea
push
sbb
inc
lret
and
jns
cmp
mov
add
flds
ljmp
in
jbe
and
dec
mov
and
lock
repz
test
movsl
mov
mov
fisttpl
mov
ljmp
in
mov
mov
dec
xchg
xor
adc
ljmp
mov
ret
out
das
push
cltd
mov
into
pop
fs
jge
xchg
stc
mov
adc
leave
hlt
jae
mov
xchg
test
lret
or
adc
in
and
and
neg
xor
jo
and
sti
xchg
mov
addl
and
dec
jns
or
in
xchg
and
call
lods
fldcw
pop
adc
stc
adc
fbstp
loop
or
popf
ljmp
in
int3
in
xchg
fisubrs
dec
test
hlt
icebp
mov
add
fstps
pop
fbstp
cwtl
cli
dec
cld
push
icebp
in
shll
stc
adc
dec
mov
jg
mov
loopne
mov
scas
add
xlat
push
cltd
jbe
mov
pushf
jne
mov
jle
or
inc
out
in
out
int3
sub
xor
fisubrl
push
js
insl
xor
cmovno
xor
xchg
adc
hlt
pop
pop
add
sub
lea
jle
or
or
cs
js,pn
push
and
gs
rclb
jge
jle
popf
xchg
int
rcll
test
in
mov
mov
push
lcall
loopne
addr16
mov
jns
pop
mov
dec
adc
jbe
push
shll
and
or
lcall
lcall
mov
push
dec
mov
cld
lahf
push
and
xor
lret
enter
sbb
insb
or
mov
or
imul
test
inc
aaa
push
mov
sub
mov
outsb
insb
pop
js
hlt
outsl
pop
sub
cmp
mov
std
mov
setno
mov
sub
cmp
test
aam
scas
mov
arpl
fs
pushf
andb
enter
cmp
jno
fbstp
test
push
shlb
cs
out
out
ljmp
daa
loop
je
xor
rorl
incl
out
jg
mov
scas
sub
mov
push
inc
and
or
jns
push
cmc
notb
inc
dec
inc
int3
adcl
sbb
adc
sti
xlat
das
sub
push
clc
cwtl
sbb
jns
paddusb
out
es
sub
js
pop
pushf
pop
push
sub
jp
lods
cli
push
cmpsb
inc
xor
xor
lock
aas
cmpsl
pop
fcoml
outsl
push
sbb
int
les
cmpsb
dec
xor
mov
subl
jle
scas
push
and
imull
ljmp
fdivrl
push
pop
mulb
repnz
mov
ss
iret
in
inc
subl
repz
mov
pop
jno
call
sbb
loop
jmp
or
cmovne
mov
bound
insb
push
and
xor
js
push
loopne
popf
and
js
mov
add
inc
inc
xchg
push
je,pt
mov
aas
jg
jne
mov
fnstcw
dec
xchg
add
mov
pop
pop
arpl
or
shrl
jg
adc
sbb
jo
push
ds
and
movsl
aas
test
xor
and
mov
cli
mov
outsl
ds
les
jbe
aad
pushf
pusha
mov
push
fadds
loop
fsubl
mov
cmp
lahf
jp
sahf
mull
mov
shlb
mov
movups
je
daa
adc
js
dec
ffreep
sub
push
repz
mov
mov
sub
add
lahf
mull
scas
cwtl
push
pop
outsl
push
cmp
fnstcw
jg
pop
pusha
jl
stos
or
or
jno
aas
push
xchg
mov
les
daa
std
sub
xchg
lock
cs
fisubrs
daa
loope
and
sbb
push
inc
pop
jp
ss
inc
sub
mov
leave
flds
adc
aaa
out
inc
popf
in
inc
pop
inc
paddusb
stos
cmp
iret
xor
sbb
icebp
sbb
adcl
ret
jg
jne
mov
jbe
mov
insb
int3
jae
sub
add
fldl
xor
pop
inc
cmp
call
loope
lock
iret
cmp
test
xchg
inc
arpl
ret
insb
mov
xor
mov
arpl
cmc
and
adc
mov
inc
adc
imul
rcl
aad
aad
in
inc
xchg
aam
and
pushf
fstl
std
orl
push
inc
jmp
jnp
lret
pop
or
xchg
insb
xchg
jp
sub
or
arpl
aam
lret
or
mov
push
cwtl
ret
jle
bound
mov
cwtl
rclb
mov
out
rol
pop
leave
adcl
mov
jb
pop
call
loopne
clc
jne
ds
mov
out
dec
pop
adc
fdivrs
xor
fs
sbb
dec
pop
push
clc
push
inc
ja
mov
mov
and
rcl
mov
push
mov
jecxz
lahf
mov
ds
movsl
xor
insb
adc
stc
testb
mov
iret
nop
inc
lea
outsl
pop
lock
repz
nop
popa
out
sub
rcrb
push
fldenv
sbb
fisttps
and
daa
mov
sahf
and
repz
loop
cmp
loop
mov
and
out
inc
inc
loope
mov
popa
jecxz
mov
testb
pop
es
rcl
cmp
mov
jb
sbb
and
es
sbb
sarb
scas
dec
outsl
push
and
sbb
adc
ss
loope
sub
test
jecxz
mov
dec
adc
stos
in
addl
in
das
lea
inc
aaa
pop
adc
ret
pop
jae
xchg
push
inc
xchg
pop
insl
test
popf
subl
or
out
and
xor
cmpsb
push
xchg
and
cmp
pop
xchg
add
cwtl
cwtl
scas
xchg
mov
pop
pop
int3
pop
jle
mov
mov
xor
sub
pop
scas
add
inc
jae
sub
mov
xlat
cmp
cmp
jecxz
push
sbb
sub
test
sbb
mov
shrb
mov
xchg
mov
and
fistl
mov
mov
loop
lds
sbb
leave
inc
cmpsb
push
negb
jg
sub
sbb
xchg
ficoms
and
lods
rorb
push
xchg
pop
mov
ss
inc
sub
dec
cmpl
mov
mov
inc
and
fiaddl
lods
pop
mov
adc
xchg
mov
lods
lcall
insb
xor
jg
jecxz
inc
xor
je
imul
sub
jmp
inc
popa
sub
stos
lods
push
js
ss
push
aaa
cli
sbb
in
mov
and
mov
push
cwtl
sbb
jnp
pop
xchg
sbb
rcrb
adc
sbb
into
or
imul
sub
cld
pop
rcl
xor
xchg
pop
je
lret
xor
arpl
les
andl
and
repz
mov
inc
pop
bound
iret
jge
adc
iret
in
and
or
rcll
inc
dec
ror
cld
add
lds
jb
out
mov
or
fists
jae
inc
loop
sbb
sub
dec
cmp
push
xor
jns
sbb
pop
jl
in
add
out
stos
push
jl
sbb
stos
mov
hlt
jno
inc
cmpsl
dec
int
sti
xor
xor
lretw
js
fiadds
in
adc
mov
neg
insb
adc
or
push
in
testl
sbb
popf
stc
jl
and
addl
imul
inc
pop
repz
rolb
push
leave
daa
and
and
lahf
jo
and
xchg
pop
das
iret
repnz
or
fsts
mov
mov
nop
dec
stos
fcompl
test
mov
pop
xchg
or
sbb
xor
outsl
xor
ss
cwtl
xchg
clc
add
pop
lea
dec
cld
cmp
fbstp
jno
xchg
test
iret
popa
rorl
test
cwtl
pop
xchg
and
out
fnstsw
mov
mov
push
pop
scas
mov
gs
es
cltd
cmp
mov
sbb
mov
gs
ljmp
jne
pop
lret
test
inc
enter
or
adc
imul
cwtl
rclb
pop
repz
subb
rclb
adc
enter
lods
or
roll
pop
mov
xchg
mov
cmp
xchg
sub
mov
es
out
sbb
ficoms
pop
dec
push
mov
mov
xchg
fstpl
adc
sub
shrl
test
mov
aam
jg
sub
sub
adc
xlat
pavgw
stc
mov
inc
incl
mov
pop
xchg
lahf
clc
and
cld
pushf
pop
dec
rolb
mov
data16
cld
outsb
movsl
and
js
cmp
cmp
or
insb
sbb
inc
xchg
dec
das
mov
out
xor
dec
sbb
mov
orb
xlat
icebp
mov
jae
out
or
in
jmp
xchg
mov
lret
lret
scas
sbb
xor
cmc
jl
mov
lods
movsb
jge
jno
test
dec
jnp
add
mov
dec
pusha
inc
jle
fwait
clc
cli
aaa
sub
lret
dec
shl
icebp
test
push
and
jb
xorb
or
scas
xor
xchg
add
xchg
das
push
mov
or
shll
les
jo
and
call
mov
lods
mov
push
mov
pop
popf
push
clc
cmp
fildl
mov
jp
insb
xchg
test
sahf
dec
mov
inc
cmp
test
push
sbb
aam
sub
sti
jecxz
loope
mov
add
push
loop
adc
pushf
test
mov
mov
lahf
fistpl
push
xor
mov
divl
pop
movsl
inc
shr
sbb
filds
xchg
rcl
adc
mov
or
int3
pop
mov
andl
in
jno
xchg
mov
or
push
jmp
xor
and
mov
fcmovb
push
pop
cmp
scas
inc
int3
sti
pop
pop
in
in
les
jbe
cmc
jge
int
mov
adc
bound
popf
test
ss
xchg
cmp
mov
outsb
popf
cld
or
insl
dec
lahf
push
lds
clc
pop
sarl
inc
mov
fdivl
cli
and
pusha
mov
icebp
add
stc
xor
inc
aaa
dec
call
mov
xchg
jge
aam
loopne
sbb
dec
add
or
push
sbb
cmp
fbld
dec
jne
adc
jb
sbb
test
sbb
cmpsl
lods
lahf
roll
mov
sub
mov
ret
jno
inc
jg
fdivrs
arpl
xor
popf
pushf
cmpsl
shrb
mov
or
push
add
jg
dec
and
inc
inc
or
sbb
outsb
in
pop
scas
adc
xchg
inc
adc
lea
sbb
out
iret
add
lret
leave
rorl
cmp
xor
leave
je
in
lock
out
lods
push
es
test
pop
cli
xor
test
or
pop
inc
cmp
jmp
jle
mov
lods
pop
push
lcall
sti
cwtl
cs
mov
idivl
sbb
fwait
das
ss
stc
stos
insl
jmp
cmp
jne
cwtl
lods
jns
insl
and
or
push
xchg
test
in
mov
imul
mov
repnz
xchg
xchg
mov
inc
jae
mov
out
sbb
movsl
adc
icebp
cmp
sbb
cli
out
xor
adc
inc
ja
and
pop
iret
iret
aad
or
and
inc
jno
arpl
loop
stc
push
and
in
in
sbb
sti
xchg
mov
pop
les
and
push
loop
sub
cmp
xlat
mull
mov
xchg
ret
xor
dec
shlb
cmc
xorl
sahf
hlt
test
dec
jmp
ret
aad
adc
bound
addl
xor
aam
dec
ss
cmpsl
stc
push
fadds
add
lahf
push
and
imul
lds
pop
push
daa
push
sbb
and
call
mov
adc
lds
jb
icebp
push
in
or
pop
mov
out
or
add
add
aaa
test
push
push
pop
jns
mov
push
mov
pop
mov
sbb
lods
ljmp
pop
mov
dec
fldl2t
movsl
mov
cmpsl
push
lahf
mov
push
jmp
sbb
ds
cld
ljmp
pop
adc
int
std
sbb
or
daa
cmc
cs
inc
repnz
cltd
add
insb
int3
ja
fldl
mov
adc
in
addr16
rcll
das
outsb
stos
pop
insl
jo
and
xor
mov
sbbl
ljmp
notb
imul
mull
or
mov
push
inc
in
rolb
lahf
cld
sub
jb
out
dec
lea
inc
jns
sub
push
repnz
dec
sub
fs
fistps
push
jp
jns
cmp
dec
or
push
inc
push
flds
mov
add
test
mov
mov
call
std
adc
jbe
inc
data16
and
pop
mov
jae
jl
out
xchg
mov
nop
pop
test
stos
stc
mov
adc
push
insl
jno
mov
xchg
sub
inc
mov
insb
aaa
fidivl
and
sahf
loop
sbb
cwtl
daa
mov
push
leave
adc
xchg
jo
dec
cmc
icebp
mov
test
arpl
push
xchg
movsb
mov
je
inc
sbb
cs
popf
mov
loop
in
push
mov
push
mov
jb
jg
flds
fimull
pop
pop
add
iret
les
les
mov
dec
cmp
mov
xchg
mov
imul
lcall
dec
xor
mov
and
xlat
loopne
mov
inc
iret
jae
daa
out
test
or
push
loopne
adc
test
imul
test
test
add
jg
fistl
jae
insl
ja
shrl
push
cmpsl
or
jmp
mov
mov
pop
pop
ljmp
movb
mov
iret
in
push
fwait
loop
cmc
inc
mov
xor
lds
out
js
insl
push
push
test
sbb
or
mov
push
xor
or
or
pop
movsb
push
pop
inc
sarl
adc
iret
inc
ds
add
rcrb
and
negl
je
sbb
aaa
adc
pop
pop
pop
jnp
jmp
imul
sarl
leave
or
loop
dec
add
ror
xchg
cmpsl
and
add
lahf
js
or
sub
add
push
pop
in
or
scas
cltd
cmp
lret
arpl
sbb
push
jne
push
in
mov
mov
mov
jp
insl
loop
xor
adc
cmpb
fists
cmp
add
adc
enter
adc
push
scas
fstpl
in
dec
jns
mov
out
popf
testb
or
mov
adc
in
push
push
xor
loopne
adc
out
cmpxchg
mov
js
or
cmpsb
xor
inc
in
cli
jae
ljmp
and
test
stos
movsb
push
add
call
enter
push
fistpll
cli
mov
decl
or
xor
jecxz
inc
fstpl
std
sub
lea
jae
es
ljmp
mov
lods
sbb
jle
xor
inc
daa
pop
dec
sub
fdivl
mov
or
xchg
loopne
pop
popl
mov
shlb
lcall
adc
mov
rcrb
xor
mov
mov
cmp
cmp
push
stos
and
movsl
xchg
pop
cli
pop
jb
lods
fmul
xor
mov
test
cmp
ljmp
mov
mov
andl
xchg
mov
inc
insb
xchg
and
lods
inc
sti
dec
popa
mov
lahf
addl
loope
jmp
mov
push
xor
test
push
sub
mov
imul
xchg
test
add
stc
and
push
into
mov
mov
mov
in
aad
inc
pop
add
xor
mov
xchg
ret
and
loop
sbbb
mov
push
cmp
jns
add
in
sub
jns
xor
test
scas
out
iret
clc
or
mov
arpl
sbb
ret
dec
add
stos
and
bnd
leave
inc
out
push
outsl
dec
adc
pop
mov
cli
lret
js
sub
rclb
leave
mov
popf
stos
sub
cwtl
movsl
mov
xor
lock
adc
clc
stos
mov
pop
xor
jne
or
pop
jne
push
and
jp
mov
xor
and
mov
pushl
dec
mov
movsb
aad
leave
hlt
loope
dec
shll
mov
dec
insb
insl
mov
sub
out
je
daa
mov
mov
dec
pop
test
leave
mov
scas
imul
repnz
cmpsb
imul
mov
rcl
cmp
into
sbb
scas
and
stos
mov
push
daa
lods
mov
lods
push
adc
pop
in
mov
inc
lahf
jge
in
fistps
cmpl
aaa
lea
mov
sbb
daa
into
mov
fs
xchg
jl
push
repz
shlb
mov
xchg
sahf
pusha
jmp
movsb
mov
mov
nop
cmp
cld
adc
lods
inc
imul
adc
push
ror
sbb
nop
scas
add
xor
jae
cmpsb
fldenv
mov
loopne
mov
or
dec
cmpsl
mov
clc
add
cmp
mov
ljmp
jo
cmp
dec
data16
mov
mov
xchg
lret
push
push
adc
xor
sub
add
pop
cmpsb
int
rclb
lahf
dec
das
lret
jns
mov
jb
xor
fsubrl
jns
push
mov
aaa
loopne
fsubrl
cwtl
push
ja
outsl
pusha
xor
fnclex
mov
hlt
cld
fbld
sbb
inc
jmp
xchg
clc
adc
adc
jo
dec
xchg
push
sbbl
ret
jg
jmp
roll
jge
int3
test
outsl
stos
or
pushf
push
mov
ss
sub
or
sub
jns
inc
push
aas
cmp
les
pop
shll
stos
fcoml
in
mov
leave
cwtl
sub
aaa
iret
lods
loope
pop
cmp
gs
sarb
les
cmp
stos
xchg
cmp
sub
push
scas
sti
xchg
dec
fmuls
jnp
insl
and
sub
pop
and
adc
lret
mov
repz
or
push
push
sub
xchg
fs
push
ljmp
xor
fisttpll
fnsave
inc
mov
dec
int3
ljmp
addr16
or
lahf
filds
pop
cltd
into
ja
andb
pushf
clc
and
adcb
mov
sub
aaa
incl
lods
mov
scas
adc
lock
fistps
adc
xor
push
sbb
pop
dec
pushf
fcoms
push
enter
shr
xchg
mov
scas
cmp
scas
xor
arpl
cmpsl
sub
sbb
faddl
fistps
test
push
cmp
add
push
mov
in
fcom
test
sub
and
mov
fidivrl
push
iret
enter
repz
mov
popa
and
pop
outsb
data16
in
sbb
es
mov
imul
ficoms
out
iret
fisttpl
repnz
das
inc
or
dec
jne
sbb
js
jae
test
les
shr
or
sub
mov
adc
jmp
sbb
mov
dec
cli
insl
sub
inc
pop
and
mov
adc
ror
in
push
movsb
push
out
jne
or
je
mov
inc
shll
cmp
ds
daa
add
stos
cmp
push
mov
test
adc
inc
add
jp
jno
scas
xor
cmpsb
and
pop
mov
int3
xchg
xchg
inc
or
xor
add
xor
sbb
mov
aam
sti
xchg
cmp
clc
js
aas
aas
adcl
imul
push
inc
xor
pop
enter
xchg
push
xchg
ds
adc
repnz
dec
shr
cmpsl
rcrl
pop
lahf
out
movsb
sbb
mov
xor
xchg
cmpsl
lds
fwait
das
test
push
mov
or
jmp
fistps
orl
jecxz
jmp
ss
cmp
jb
imul
and
mov
jb
or
mov
push
lret
push
cwtl
xor
dec
ja
jl
inc
mov
mov
addr16
mov
and
les
inc
out
sbb
mov
lock
xchg
push
dec
pop
xchg
push
ljmp
scas
mov
loope
data16
fs
jecxz
daa
jecxz
cmovns
aam
outsl
loope
mov
sub
and
cmp
mov
push
hlt
push
addr16
pusha
test
daa
and
outsl
cmp
stos
enter
test
rorl
into
cmpsb
jmp
sahf
cmp
pop
cmp
bound
xchg
jg
adc
call
leave
and
push
pop
xor
dec
sbb
lock
repz
xor
mov
out
movsl
inc
out
fsubs
or
mov
testl
lret
cmc
mov
ja
push
daa
roll
mov
and
cmp
or
jns
pop
or
dec
out
sub
or
sbb
shll
fwait
mov
adc
mov
xchg
insl
mov
adc
dec
sub
add
xchg
and
cmp
and
test
mov
xchg
xchg
push
and
sub
cs
inc
out
fcmovnb
adc
or
or
orl
filds
push
jns
jecxz
inc
mov
imul
pop
fsubp
rorl
pop
mull
lret
mov
loop
mov
xchg
cmp
mov
jne
jbe
push
cmpsb
jne
filds
test
leave
arpl
cltd
fimuls
sbb
incl
movsl
xlat
jge
sbb
mov
and
dec
lea
pandn
imul
gs
xorl
test
mov
inc
mov
cltd
dec
add
mov
sahf
cmp
or
adc
mov
xchg
les
or
les
push
inc
sub
cmp
cmp
cwtl
lods
cmp
adc
mov
xchg
mov
stos
xchg
dec
adcl
and
xchg
add
test
pusha
add
and
jg
sbb
ss
jo
or
jb
and
les
enter
adc
popa
add
dec
cltd
insb
fidivrl
repz
mov
push
shl
dec
inc
pop
frstor
test
sbb
fwait
sahf
daa
add
cmp
adc
sti
jae
pop
add
xchg
xchg
testb
roll
sbb
stos
cmp
shlb
icebp
int3
sti
mov
dec
movsl
movl
mov
insl
fmulp
xor
popa
cli
xor
daa
cltd
popa
jb
cltd
sbbl
inc
outsl
repnz
jp
aam
enter
cmpb
xchg
cmc
pushf
mov
clc
out
arpl
sbb
adc
pop
repz
xor
mov
cmpsb
inc
cltd
fs
mov
mov
xor
xchg
sti
movsb
dec
mov
sbb
mov
push
orl
subl
call
shr
pop
shrl
dec
sahf
cltd
mov
out
xor
mov
or
add
aad
out
pop
nop
out
dec
orb
sarb
inc
inc
cmp
test
fdivl
test
sub
ss
jnp
daa
or
mov
movsl
ja
push
adc
jmp
stc
or
lahf
xchg
call
mov
jnp
dec
mov
mov
pop
fldt
dec
push
daa
adc
int
sub
add
mov
jb
ret
mov
fstpt
xchg
shrl
sbb
les
pushl
adc
into
in
movsl
sbb
jnp
pop
into
out
icebp
mov
popf
rcrl
push
jno
fcmovb
loope,pn
push
sbb
les
push
jns
mov
rcrl
in
mov
pop
sbb
neg
jb
mul
in
sbbb
ret
push
xchg
cmpb
dec
out
std
push
data16
stc
push
aam
jg
xchg
pop
inc
inc
push
loop
pop
dec
aad
lods
jmp
fisttpll
leave
mov
cli
xlat
push
xor
repz
push
fidivs
sub
nop
push
jae
cmp
mov
xor
stc
jp
xchg
movsb
cmp
shlb
ret
or
mov
mov
mov
xchg
cmc
push
mov
idivl
dec
xor
sbb
lds
mov
cwtl
pop
xchg
mull
cs
pop
mov
push
shr
xor
pusha
test
cmpsb
xchg
and
lcall
clc
movsb
jnp
push
xchg
in
ret
inc
movsb
mov
or
dec
mov
daa
push
ss
pusha
inc
faddl
test
or
push
jp
lds
mov
dec
adc
insb
insl
push
insb
test
cmpsl
rcrb
scas
stos
push
jp
pop
cmp
xchg
pop
cmp
or
sub
int3
add
xor
stos
insl
xor
add
dec
dec
adc
add
cmpsl
jp
xchg
out
inc
add
cmp
leave
faddp
xchg
xor
mov
ja
pop
or
jnp
lret
addr16
rorl
daa
mov
lahf
pop
or
jne
pop
frstor
arpl
push
push
ds
gs
push
ljmp
pop
popf
inc
ljmp
cli
pop
adc
jmp
fisubrl
and
dec
fcoml
xchg
lahf
inc
sar
cmp
or
fdivl
mov
je
push
mul
xchg
clc
inc
lods
leave
fwait
mov
pop
dec
mov
dec
cli
call
cmc
lea
stc
jecxz
or
push
negl
and
jg
xor
mov
push
pop
ret
ss
rcrl
jo
std
and
pop
dec
incb
cld
sarb
xchg
pop
in
ret
push
sbb
sub
bound
aas
fldcw
movsl
mov
push
gs
push
loopne
into
sti
push
inc
int3
rcll
push
jge
and
lods
int3
mov
pop
sub
xchg
inc
or
inc
sbb
adc
mov
fwait
cmpsl
ss
mul
imul
movsb
or
sbb
add
push
pop
leave
dec
jg
xchg
sbb
cld
ret
fsubrs
cmp
mov
add
or
lea
inc
aas
pop
cld
out
cmpsb
scas
shll
icebp
xchg
mov
test
lcall
pushf
testb
out
dec
cld
lock
cmp
fldcw
stc
fwait
hlt
jmp
jnp
pusha
scas
xchg
decl
adc
loopne
xor
sbb
jg
mov
push
popa
adc
test
inc
clc
mov
add
sti
add
and
jno
add
movsl
and
lcall
aas
cmpsl
roll
rolb
push
or
das
sbb
pop
ret
and
fdivrl
push
pop
jle
ret
sub
into
pusha
push
aad
outsb
aas
dec
mov
mov
cmp
es
je
insb
pop
imul
sti
shlb
and
mov
jo
nop
popa
dec
inc
mov
sub
daa
sahf
les
ficoml
dec
faddl
push
pop
push
vpsrlq
sbb
ja
aaa
adc
scas
or
mov
jp
add
sbbl
mov
sub
jge
xor
test
pop
pop
inc
jns
sbb
scas
push
and
jb
pop
push
inc
adc
xchg
or
gs
and
cmp
pop
stos
xlat
dec
mov
sub
cmp
jns
pop
inc
sar
sahf
scas
out
jp
xchg
cmc
mov
sbb
pop
pop
repnz
dec
out
xor
xchg
pop
sub
xchg
fisubrl
push
adc
je
ret
mov
push
fwait
lods
arpl
call
arpl
sarb
mov
xlat
inc
idiv
push
sbb
cmp
aam
pop
cmp
addr16
mov
push
aad
mov
xchg
cmp
and
mov
jns
xchg
xchg
add
add
daa
xor
daa
sbb
pushf
ret
pop
mov
or
xchg
icebp
xchg
jmp
test
outsl
jns
sub
jmp
aaa
imul
stos
pusha
add
sub
scas
clc
cmp
adc
add
jp
insb
push
out
push
push
add
in
xor
imul
ret
bnd
cmp
cmp
mov
cmc
sub
jnp
loopne
pop
fstpt
mov
test
pop
shl
aad
or
push
mov
mov
stos
or
test
mov
mov
movsb
es
hlt
pop
dec
mov
imul
lret
push
push
cmpsl
shrb
mov
mov
lret
and
jne
imul
or
push
push
imul
sti
aam
dec
pop
ret
lock
int3
fucomp
add
sub
outsl
ret
popa
mov
negb
movsb
rolb
mov
cld
pop
outsl
lret
nop
push
sbb
adc
jnp
mov
fwait
push
mov
cmp
mov
push
lods
ljmp
jnp
push
fs
add
ljmp
mov
pop
test
inc
cmc
scas
adc
test
and
fidivrs
int
mov
cmp
test
sbb
jnp
stc
mov
mov
inc
pop
pop
sub
sub
jae
xor
sub
test
push
pop
mov
inc
popl
ljmp
or
sbb
jne
sbb
clc
push
jmp
rol
jnp
xchg
int3
pusha
mov
add
xchg
add
hlt
pop
dec
stc
rcll
fidivrs
jecxz
adc
pop
xlat
pop
call
jecxz
add
mov
fisubrs
iret
mov
push
lret
mov
xchg
push
fdiv
loope
pop
mov
sbb
out
jmp
xlat
shll
cmpsl
movsb
pop
jmp
rorb
or
mov
jl
push
inc
pushf
mov
fs
and
mov
out
adc
lea
int3
leave
int
sub
out
je
das
movsb
cmpsl
in
lods
jns
es
ret
movsb
addr16
sbb
loope
jl
jne
jnp
sbb
or
push
out
pushf
and
adc
repnz
ficoml
mov
push
dec
xor
xorb
dec
inc
hlt
bound
xchg
rorb
cwtl
push
xchg
stos
mov
pop
test
fisttpl
insb
adc
aam
jl
jge
or
les
out
lea
push
fldcw
xor
dec
aas
lret
hlt
jmp
les
xor
aam
mov
stos
mov
cmp
das
pop
out
insb
gs
dec
xchg
movsb
mov
xchg
xor
adc
lods
pop
fs
stos
lock
sarl
dec
inc
mov
push
loop
and
cmp
aam
push
cs
das
jg
push
mov
out
dec
js
ss
and
aam
popa
push
xor
aad
push
testb
stos
bound
fldcw
adc
adc
outsl
add
lock
pop
loopne
xor
xchg
aaa
mov
push
jmp
call
pop
scas
fbld
add
andl
test
or
inc
stos
in
or
push
sbb
ss
adc
data16
push
mov
jp
test
test
rclb
jl
xchg
ucomiss
adc
insl
int
adcb
mov
push
leave
pop
scas
push
in
xchg
shrl
mov
leave
cltd
mov
mov
sbb
mov
xchg
push
xor
mov
js
fwait
xor
jne
andb
ret
pop
into
mov
push
pop
xchg
fs
and
cltd
sub
mov
int
cs
mov
aas
push
shrb
and
and
cmpsb
xchg
shlb
dec
repnz
push
insl
outsl
pop
gs
mov
mov
sub
lret
or
daa
push
outsb
repnz
ljmp
mov
sub
sub
je
cmc
sbb
ja
je
test
scas
fdivrl
and
stc
inc
out
mov
and
dec
nop
lock
or
dec
pop
loopne
xor
in
adc
xor
test
shr
jo
jecxz
mov
push
fdivrs
test
sahf
in
push
in
out
push
cmp
loopne
xchg
mov
xchg
mov
mov
in
jns
ja
sti
ret
mov
jns
jo
cmp
mov
js
test
xchg
scas
push
cmp
xlat
dec
jb
pop
sti
sbb
dec
ficomps
jbe
aaa
push
jbe
push
xchg
nop
adc
pop
aam
lret
mov
fcmove
mov
jl
fs
adc
dec
cs
pop
decl
cld
and
mov
xlat
in
push
jp
xchg
xchg
insb
mov
lret
aaa
negb
lock
into
xor
fs
cld
mov
mov
roll
sbb
insl
sahf
aam
jle
xor
stc
add
imul
rcl
inc
jmp
adc
sub
xchg
jle
mov
inc
negl
shrl
cmp
lret
in
and
rcrb
out
stos
dec
mov
hlt
jecxz
push
cwtl
pop
or
xor
ja
mov
or
out
insl
push
xchg
jg
push
sti
jb
push
sbb
fidivrs
xor
xlat
test
jb
sahf
out
in
xor
test
in
pop
int3
push
stos
xor
xor
incl
sti
mov
in
sbb
fs
jl
imul
gs
mov
xlat
pusha
cmp
negl
mov
js
push
loop
mov
lods
lret
mov
xchg
mov
lcall
xlat
sti
inc
lds
push
test
in
mov
sub
aam
je,pt
jp
mov
jecxz
fstpl
sbb
cld
int3
mov
sti
mov
and
mov
icebp
pop
add
clc
lods
icebp
mov
and
xorb
jmp
push
daa
push
add
pop
lret
jl
lds
cld
lcall
inc
mov
pop
mov
xchg
cmp
jns
mov
mov
out
mov
in
cmp
dec
sahf
jne
nop
pop
push
jnp
icebp
lcall
addr16
and
inc
dec
jmp
addr16
mov
xchg
fldl
stos
lret
mov
dec
stc
xor
jbe
inc
jmp
mov
sbb
orl
ljmp
shrb
and
fcmovnu
pop
xor
and
adc
cmp
jg
arpl
pop
add
adc
mov
orb
jg
mov
push
loope
xor
mov
ljmp
inc
mov
test
and
add
pop
scas
inc
xchg
pusha
cli
add
lret
pop
insb
add
data16
mov
lcall
push
int3
cmp
mov
mov
inc
sub
ret
cmp
aas
push
setg
mov
pop
insl
mov
pop
dec
data16
loop
nop
mov
sahf
sub
push
jmp
out
sbb
testl
mov
in
dec
movsb
lock
out
int3
adc
inc
pop
dec
js
cmc
lods
cmpb
push
mov
lods
addr16
sub
hlt
xchg
nop
lahf
and
scas
addl
xchg
mov
xor
out
arpl
xor
fildll
xorb
popa
add
stc
sub
inc
mov
mov
mov
clc
mov
iret
jae
push
xchg
notl
jmp
outsl
je
mov
and
out
jle
nop
adc
shlb
push
jle
arpl
ror
scas
enter
xchg
repnz
pop
enter
fdivrs
ja
mov
lods
push
out
stc
aam
ds
in
mov
sbb
out
cmp
iret
dec
and
or
jmp
lds
push
dec
popf
aam
cmpsl
adc
add
mov
popa
imul
mov
incl
cmp
fsubrs
cmp
pushf
xchg
mov
test
stos
add
jg
mov
mov
push
test
movsb
in
xor
pop
cmp
out
sbb
pop
sbbl
or
fldt
jge
mov
lds
sub
xchg
shl
stos
fsubrs
or
lods
or
pop
std
loop
cltd
push
stc
push
cli
out
ljmp
cmpb
push
add
stos
jl
cmp
push
xchg
call
mov
mov
mov
lcall
mov
aaa
xchg
pop
add
cli
jbe
jo
or
jno
cmp
imul
aad
mov
out
leave
adc
jb
aam
fiadds
scas
mov
push
push
mov
popa
loopne
xor
adc
xor
inc
inc
lret
sbb
in
jle
adcb
push
mov
test
inc
mov
cli
inc
nop
adc
sarb
lock
jg
punpcklbw
mov
cs
jns
cmpsb
test
call
dec
mov
fwait
dec
inc
xchg
cmp
xor
and
lret
flds
loop
dec
pop
and
cmp
cmp
sub
cmc
fsubr
pop
xlat
dec
sub
or
movsb
cmp
stos
xor
roll
lds
or
sub
fstpt
outsl
imul
xor
out
cmp
ret
hlt
test
leave
outsb
adc
adc
sbb
push
and
xchg
enter
lds
sub
xor
rorb
test
data16
ret
mov
push
aad
fistps
pop
adc
jae
mov
out
xchg
pop
add
xor
mov
iret
lret
mov
std
xor
test
lcall
inc
lret
push
push
push
mov
sbb
cmp
pop
mov
lret
pop
xchg
lret
pop
fdivr
leave
test
jno
mov
inc
out
lock
insl
hlt
sub
sub
aas
mov
data16
ret
sbbl
enter
sub
mov
mov
sti
leave
outsl
pop
mov
repnz
sbb
push
lahf
add
lods
cli
inc
push
push
aad
mov
cmpsl
jo
xchg
mov
lret
push
fisttps
mov
push
sbb
and
mov
push
int3
mulb
add
bound
scas
repnz
shlb
dec
sbb
jp
out
fdivs
shll
movsl
jl
add
pop
mov
xchg
add
xchg
xor
jns
xchg
add
loopne
ss
sbb
cmp
or
loopne
insb
divb
pop
push
xchg
push
ret
lret
in
jecxz
mov
shlb
in
pop
test
push
divl
dec
int
notb
cmp
sbb
jg
mov
jg
test
cli
pop
and
pop
and
inc
int3
and
les
jl
aad
cmp
lret
inc
mov
fsts
lea
test
pop
aaa
pop
sti
cli
mov
popa
movhps
stos
push
call
repz
shrb
ss
pop
jns
mov
cmp
jbe
mov
int
jg
stos
xchg
xor
or
imul
or
add
adc
shlb
pop
xor
in
orb
push
mov
cmpsl
out
es
lahf
in
mov
outsb
or
dec
and
jecxz
enter
nop
ds
ret
pop
pop
lea
gs
and
jns
mov
das
cmpsb
cmp
int
scas
push
lahf
lock
dec
jae
mov
sub
outsb
in
fs
jae
push
inc
ss
mov
sbb
inc
gs
inc
push
mov
dec
lret
xchg
mov
xchg
dec
or
das
idivb
mov
cmp
pop
shll
push
mov
lods
shlb
mov
es
mov
in
or
cmp
cmp
inc
popf
mov
popa
push
rorl
je
dec
flds
mov
lods
addr16
dec
jno
lret
fidivl
cmp
mov
dec
in
jnp
pop
aad
push
es
add
ss
repz
scas
repz
jae
aad
mov
adc
and
or
add
dec
xor
xor
or
inc
jbe
mov
inc
xor
rcrb
and
insb
xor
adc
mov
jp
lods
fadds
push
xor
sub
adc
xor
xchg
push
into
sub
popf
setb
aam
mov
lock
fistl
sub
jg
cltd
inc
fcmovbe
clc
incl
je
adc
repnz
dec
lea
test
ret
fidivl
adc
test
push
mov
push
cmpb
in
mov
jmp
hlt
cmpsb
in
in
sub
bound
xchg
sbb
aaa
out
sub
icebp
in
cmp
insb
sarl
loope
ds
dec
setns
mov
inc
aad
pop
addb
mov
or
push
cs
jbe
mov
inc
pop
outsl
mov
shll
or
jns
mov
ds
cmpsb
popa
mov
mov
sbb
cmp
dec
test
xlat
adc
aas
sbbl
dec
pop
test
adc
in
add
call
int
pusha
push
add
mov
movsl
push
scas
fdivrp
lods
mov
mov
jo
and
lret
in
push
jns
movb
mov
jnp
mov
pop
ret
insb
shr
mov
data16
pusha
xchg
mov
das
rcrl
std
push
or
mov
arpl
out
les
push
mov
mov
aam
cmpsl
adc
xor
sbb
lock
sub
icebp
popf
jge
fisttpl
cltd
push
jp
cmp
and
cltd
push
sub
add
ljmp
sar
xor
sarl
push
or
push
xchg
inc
inc
lcall
mov
lds
es
xor
arpl
mov
cmp
lea
sbb
pop
out
cmpsl
jecxz
das
inc
movsb
pushf
push
shll
pop
push
inc
fmull
fs
es
addl
rolb
xchg
lcall
into
sbb
ds
test
mov
push
dec
lds
push
fimull
add
mov
and
push
clc
xlat
imul
loopne
int3
cmp
mov
int3
in
dec
cli
out
shlb
xchg
xchg
xchg
es
pusha
jecxz
jge
adc
push
or
inc
shlb
sahf
in
mov
std
into
add
mov
fcompl
add
push
ljmp
cmp
jecxz
jo
jp
cmp
push
jb
arpl
ret
sbb
pop
jo
push
mov
stc
cmp
xchg
lret
push
xor
mov
inc
xorb
mov
int3
in
fmul
fdiv
cmp
leave
lds
mov
push
xor
sbb
adc
dec
popf
inc
pop
cmpsl
in
fs
jne
jb
cli
insb
inc
cmp
or
pop
jmp
add
or
jbe
or
mov
or
xchg
jmp
add
jmp
add
jmp
add
jmp
add
in
or
mov
in
or
dec
in
or
push
in
or
push
or
sub
add
add
add
in
or
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
std
dec
add
std
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
or
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
adc
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
and
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
xor
add
add
incl
add
add
dec
add
add
add
inc
dec
add
inc
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
decl
dec
add
dec
add
add
add
pop
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
push
add
xor
add
addr16
add
add
add
add
dec
add
add
add
incl
add
add
add
add
jb
add
add
add
add
add
dec
add
add
add
call
jns
add
or
dec
add
or
add
jmp
dec
add
dec
add
add
add
incl
add
add
lea
add
add
incl
add
add
add
add
incl
add
add
add
add
add
jmp
dec
add
xchg
dec
add
add
add
call
xchg
dec
add
xchg
dec
add
add
add
lcall
dec
add
cltd
dec
add
call
cltd
dec
add
incl
add
add
pushf
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
dec
cmpsl
dec
add
dec
add
lcall
dec
add
dec
add
incl
cmpsl
dec
add
call
dec
add
mov
cmpsl
dec
add
dec
cmpsl
dec
add
cmpsl
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
lods
dec
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
ljmp
mov
add
incl
add
add
mov
add
lcall
mov
add
add
add
incl
add
add
add
jmp
fisttpl
and
dec
add
call
fisttpl
fcomp
dec
add
decl
dec
add
add
ljmp
add
add
sbb
or
add
or
xor
or
cmp
or
dec
loopne
add
or
pop
jmp
add
or
jbe
or
mov
or
xchg
jmp
add
jmp
add
jmp
add
jmp
add
in
or
mov
in
or
dec
in
or
push
in
or
push
or
sub
add
add
add
in
or
add
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
shlb
xchg
mov
in
inc
mov
jnp
int3
pop
mov
xchg
push
mov
and
movsb
jecxz
add
shlb
subl
push
sbb
dec
xor
js
mov
cmpsl
jp
dec
shl
ret
push
pop
xchg
fsubr
push
add
fsts
or
std
sub
scas
jae
jge
sbb
cmp
adc
lods
pop
dec
mov
cli
rolb
xchg
jmp
aaa
sbb
mov
sahf
mov
bound
sbb
or
dec
push
into
stos
out
or
int
cli
mov
mov
out
mov
lods
repnz
sub
push
test
cld
imul
pop
push
repnz
cmp
int3
outsb
mov
pop
push
int
sbb
push
jle
sub
imul
add
fcmovnbe
jge
xlat
push
lods
sub
test
inc
ja
sub
sti
shrl
aad
rorb
ret
mov
fcomip
jno
clc
adc
lret
pop
or
divl
inc
push
or
into
cli
xor
or
adc
lods
pusha
add
jb
iret
jne
mov
es
arpl
inc
push
jmp
jbe
lds
cmc
xor
pop
sbb
cmp
andl
adc
or
sarb
mov
jns
mov
inc
push
data16
insl
ret
lods
popf
inc
lret
jb
shll
cs
scas
dec
dec
cld
xchg
mov
xchg
mov
pop
jp
xchg
cli
cltd
push
push
stos
cmpsl
lret
xchg
rorb
test
test
call
inc
insl
imul
or
mov
out
mov
jns
cmp
sub
add
pop
pop
add
pushf
fwait
jge
cmpsl
ror
xchg
idivl
fcoms
mov
mov
add
xor
or
cwtl
rorl
or
inc
push
cmp
or
popl
push
cmc
or
pop
inc
mov
sub
cltd
and
inc
pop
in
cwtl
ror
xor
push
jge
dec
pop
or
cmpsb
test
lock
push
je
clc
lock
jp
adc
dec
xchg
xchg
mov
jp
insb
cmp
fldenv
les
or
or
movsb
push
daa
hlt
mov
mov
xor
dec
xchg
pop
jl
sub
and
adc
lods
dec
shlb
mov
out
dec
push
add
jae
jge
fisttpl
jle
push
add
push
insl
aas
mov
xor
pop
ss
cmp
sub
cwtl
popa
andb
imul
mov
notl
adc
repz
dec
insb
jnp
or
int3
lret
lahf
xchg
icebp
xor
cwtl
push
xchg
movsl
dec
gs
add
jg
out
push
hlt
add
andl
shr
pop
dec
dec
pop
fistps
movsl
inc
inc
nop
lret
lods
or
xorl
cld
add
call
stos
xchg
insb
mov
inc
sbb
sub
clc
stc
cmp
stos
xor
testb
pop
and
mov
inc
js
out
sub
xchg
mov
xchg
cmpb
mov
jnp
xchg
jecxz
bnd
or
or
scas
mov
xor
out
push
fcoml
lods
pop
inc
fisttpl
push
das
push
es
add
jno
out
imul
loope
popf
cmpsl
pusha
cwtl
fiaddl
jnp
std
or
pop
ret
sysenter
or
div
in
lods
fdivs
mov
mov
push
dec
testl
test
sahf
lcall
pop
sbbl
cltd
xchg
jecxz
or
cmc
sub
movsl
add
dec
in
mov
bound
popl
sub
inc
xor
scas
in
pop
sub
or
dec
mov
dec
pop
adc
adc
clc
or
popa
and
push
mov
out
pop
lods
xchg
mov
inc
lds
call
addl
push
scas
jl
aad
cmp
xor
fs
in
pop
adc
xor
ljmp
ja
jnp
pop
add
sbb
xchg
dec
les
cmpb
mov
imul
sbb
dec
inc
imull
cmc
lods
xchg
test
or
fidivrl
cmp
lods
inc
aaa
imul
xchg
movsb
push
add
sbb
pop
cmp
dec
sarb
fadds
dec
fcomps
stc
jmp
or
aad
add
inc
in
stos
imul
and
lret
nop
aam
mov
xchg
sub
rcr
fs
stos
ds
out
add
scas
sub
pop
xor
out
scas
adc
mov
iret
sbb
mov
or
mov
cmp
es
loop
in
sbb
ret
lods
in
ss
out
loope
out
fsubl
dec
cmp
inc
lahf
mov
popf
xor
addb
popf
mov
jo
shlb
mov
loopne
rclb
dec
dec
scas
and
add
in
mov
push
leave
fisubs
das
stos
nop
push
inc
movsl
xor
xchg
pop
sub
outsb
repz
mov
enter
jmp
or
in
inc
fcmovne
into
jb
mov
add
popa
push
shr
adc
cltd
pop
xchg
fwait
jae
jb
cwtl
mov
adc
dec
xlat
push
mov
hlt
daa
cld
pop
mov
scas
faddl
imul
out
imul
lcall
xchg
stos
push
into
sbb
mov
mov
pop
ret
sub
fs
call
push
pusha
rolb
mov
mov
pop
iret
ss
fucompp
daa
inc
jle
enter
push
push
popa
add
enter
add
jle
aam
cmp
fdivp
gs
and
mov
fnstenv
or
jge
sbb
inc
jb
adc
in
or
jl
rcrl
sub
adc
test
mov
dec
xchg
jp
out
into
sbb
xchg
xor
in
dec
xchg
xor
sbb
jae
mov
repz
fnsave
jge
std
out
nop
sub
and
adc
popa
mov
xchg
mov
dec
aad
and
clc
jl
mov
mov
stos
add
jns
test
addr16
cmp
or
int3
js
jmp
negl
out
sahf
push
shll
or
cmp
jge
pusha
dec
inc
fisttpl
jnp
in
jns
dec
jnp
imull
addl
adc
mov
loope
bound
icebp
lds
jmp
and
out
or
sbb
hlt
fldcw
enter
lahf
test
or
incl
or
xor
xor
mov
jns
stos
lods
int3
dec
int3
pop
or
loopne
dec
ret
jbe
cli
jmp
lods
aad
push
dec
imul
out
cmp
or
scas
push
mov
push
add
sbbl
xorl
pop
push
andb
jl
aas
call
pop
pusha
xor
push
xchg
cmp
or
cli
sbb
or
sti
dec
imul
or
ss
test
inc
cmp
xor
mov
xor
fstps
dec
and
xor
inc
ds
sbb
pushf
inc
push
xchg
xor
inc
dec
adc
sbb
sbb
fidivl
cld
dec
xchg
push
push
pop
movsl
aaa
or
xor
scas
test
xchg
pop
data16
loope
mov
aas
sbb
stc
icebp
sub
push
cli
sub
mov
lea
lahf
sbb
addb
sahf
test
dec
iret
push
stos
cmp
inc
mov
dec
cmpsl
enter
sub
bound
add
mov
leave
push
lods
mov
repnz
imul
jl
dec
aad
test
cwtl
cltd
dec
push
xchg
and
mov
cwtl
in
das
and
into
mov
mov
loope
add
xchg
pop
push
int
test
stc
push
or
enter
mov
je
pop
jmp
scas
enter
inc
imul
sub
mov
push
cmp
jns
iret
dec
insb
int
fcoms
shll
push
sti
cltd
xchg
xlat
scas
xchg
adc
pop
sbb
jecxz
scas
repnz
popa
and
or
add
xchg
push
sahf
cmpsl
leave
ja
out
push
xor
jg
or
rcrl
sub
int3
loopne
sbb
push
adc
rcll
int3
and
dec
xor
mov
push
sub
int
mov
xor
rcll
xchg
add
decb
daa
adc
in
or
fnstenv
std
sti
mov
imul
movsl
and
out
fmuls
inc
test
sbb
xchg
mov
je
adc
push
sub
mov
cmp
rorl
outsl
jnp
mov
inc
ljmp
int
mov
cmp
inc
pop
add
add
ja
pop
clc
lods
sar
cli
inc
xlat
repnz
in
mov
clc
jae
sub
mov
xchg
xchg
shrb
enter
insb
scas
cs
mov
lods
sub
mov
adc
imul
popf
dec
lahf
daa
lods
cwtl
add
imul
cmpsb
or
imul
lret
test
inc
inc
jnp
and
arpl
mov
and
pop
clc
mov
adcb
mov
divl
rcrl
jp
xlat
sbb
push
adc
mov
xor
dec
out
jbe
clc
xchg
in
hlt
clc
inc
cmp
psllq
lcall
jg
inc
mov
xor
outsl
shll
aaa
out
ja
push
jne
xchg
cs
adc
das
lds
and
orl
sbb
mov
std
popa
shrl
inc
mov
and
movsbl
push
inc
cmpsl
jmp
test
mov
in
xchg
cmpsb
in
mov
popf
add
inc
cmp
mov
add
or
icebp
cmp
adc
add
stos
out
test
cmc
call
imul
scas
and
jo
inc
out
addb
dec
arpl
lret
enter
jecxz
inc
xchg
ja
aaa
addr16
loope
outsb
je
push
push
inc
cmpsb
loopne
neg
and
enter
jecxz
and
outsl
out
xor
xlat
xchg
push
pop
scas
test
jmp
popa
or
mov
fmuls
adc
aam
sub
xchg
sub
pop
or
stos
ds
js
dec
adc
outsl
fimull
and
mov
jle
add
mov
sub
sbb
fcomps
faddl
sbb
fistpl
mov
sub
das
cmp
adc
clc
ja
ss
mov
mov
test
aas
jge
inc
push
xlat
add
sub
mov
mov
sub
test
xor
cmc
mov
adc
lods
popf
iret
add
dec
mov
pop
xchg
imul
cmp
jmp
jg
xor
mov
pop
out
insl
xor
out
sete
inc
ss
sbb
scas
enter
mov
mov
aad
movsb
cli
out
stc
dec
daa
or
xor
aam
stc
or
idiv
rcrl
dec
sbb
cltd
rorl
inc
mov
push
mov
repz
ja
adc
mov
jp
and
pop
enter
aam
xchg
fcoms
mov
popa
sarl
ss
add
jb
daa
push
enter
enter
cmpsl
push
xchg
or
lret
div
aas
adc
dec
xchg
ds
cli
mov
cmp
movb
mov
lods
lea
dec
jns
xchg
dec
pop
dec
rorb
insb
test
fbld
and
cmp
mov
addl
push
push
jae
lods
shll
adc
call
inc
xchg
call
mov
leave
push
aam
adc
lret
outsl
mov
add
jne
ds
pop
mov
xchg
jg
outsb
aad
xchg
or
gs
pop
mov
push
add
mov
jmp
sti
adc
pop
movsb
mov
lock
repnz
jle
rol
push
sarb
repnz
les
or
dec
mov
pop
mov
orl
shlb
gs
dec
gs
rcl
fidivl
movsb
push
sbb
xchg
xor
xchg
sub
scas
mov
inc
mov
test
loop
push
lock
aas
arpl
cmp
insl
rcr
insl
mov
sbb
push
jbe
mov
lds
popa
lret
inc
or
push
xlat
cli
sahf
mov
push
je
hlt
xchg
iret
fyl2x
fimuls
icebp
mov
adc
aas
sub
loope
popf
sbb
jnp
sub
push
imul
xor
cmpsl
adcw
mov
pop
sub
aam
movsb
sbb
cwtl
in
xor
mov
jbe
xlat
lahf
std
and
jp
pop
pop
lock
shll
test
xchg
jmp
out
xor
inc
dec
adc
adc
mov
xchg
bound
pop
xchg
adc
mov
jne
adc
jl,pn
lock
jp
sbb
xchg
lcall
and
inc
scas
fidivs
mov
add
pop
div
dec
sbb
ficompl
or
test
lock
mov
xchg
call
data16
out
lret
call
cmpsb
stc
out
out
inc
out
test
idivb
push
adc
adc
mov
stc
loop
lods
stos
mov
lea
aas
pop
into
lcall
aaa
in
adc
or
sahf
lods
xchg
lret
xchg
add
adc
cmpsl
mov
mov
push
adc
cld
push
pusha
add
mov
insb
test
mov
shlb
mov
sub
sub
cmp
lock
jbe
or
cs
pop
sbb
scas
aad
out
lds
or
sub
int3
mov
jp
aad
lods
mov
pop
test
icebp
cs
lcall
mov
mov
test
xor
mov
rcll
call
mov
jg
pusha
shll
rcr
pop
sti
cs
jl
popa
push
sbb
jp
rorl
pop
repz
pushf
or
xchg
iret
ret
jl
insl
push
test
data16
mov
ror
lret
cwtl
pop
dec
jbe
lods
pop
std
or
jg
and
and
js
pushf
jae
in
sub
mov
jns
sub
push
sbb
in
aaa
ja
outsl
jae
sub
mov
mov
ljmp
mov
cmp
pushf
adc
mov
inc
sub
sbb
movsl
fdivl
pushf
push
out
xchg
rcll
adc
inc
lret
call
xchg
xor
sarb
test
sti
pop
push
lret
icebp
dec
loopne
pop
lcall
inc
push
or
mov
sub
and
xchg
or
adc
inc
jge
mov
xchg
gs
into
or
push
xchg
cmp
lret
ljmp
clc
dec
xchg
in
bound
repnz
popa
sbb
test
or
lret
push
jb
sub
adc
movsb
aas
lcall
mov
mov
inc
jge
outsl
movsl
les
cmp
test
jb,pt
pop
aam
xchg
xor
sub
fs
fcmovne
test
rcr
sbbl
data16
test
inc
sub
mov
idivl
fisubrl
pushf
rol
sub
mov
jb
js
add
jp
rol
into
push
mov
mov
xchg
adc
jle
test
or
push
hlt
add
ja
enter
hlt
jl
push
sub
push
fwait
sbb
subl
rorb
aaa
loop
outsb
push
dec
push
imul
xchg
movsb
xor
mov
cs
push
mov
push
xchg
outsb
outsb
cmp
in
pop
jo
jo
cmp
test
push
pop
push
adc
into
push
sahf
xor
es
rorb
test
pop
ret
decl
dec
dec
cld
inc
pop
rcll
fsubrs
add
cmp
outsl
aaa
cmp
mov
and
push
pop
mov
inc
sbb
cwtl
push
clc
dec
test
mov
jne
xlat
cmp
dec
out
rclb
stos
frstor
aaa
sarb
push
popf
adc
and
mul
or
fsincos
xchg
sub
adc
mov
js
fbstp
iret
dec
or
int3
stc
out
mov
xchg
fwait
mov
mov
lea
lds
pop
mov
push
loopne
ret
sarl
pop
inc
mov
popa
add
add
inc
lret
shll
pop
das
subb
sub
or
nop
test
iret
push
push
or
fwait
movsl
shlb
cltd
sbb
loope
cld
hlt
mov
addr16
inc
and
cld
xchg
jns
mov
jns
lret
sbb
aaa
pop
push
ljmp
pushf
mov
shl
jno
inc
andb
or
jno
aas
aaa
ss
jmp
pop
sbb
dec
add
dec
mov
enter
int
pop
add
cs
subb
push
je
cld
xor
adc
stos
lea
jg
rclb
jo
js
pop
sbb
repnz
add
push
pop
cmp
scas
inc
pop
sub
xchg
clc
fcmovnu
sub
add
sbb
dec
xchg
push
jbe
divl
lods
xor
xchg
jmp
outsl
dec
out
sub
and
cmpsb
push
gs
xor
dec
add
mov
fstl
in
push
jg
inc
push
push
and
in
loopne
push
iret
mov
inc
pop
xchg
jge
mov
add
in
or
in
pop
and
and
pushf
push
adc
push
inc
cmc
mov
and
xor
jbe
adc
filds
dec
jle
push
and
sbb
scas
cmp
add
stos
jl
xchg
ficomps
xchg
fidivrs
sti
mov
loopne
ljmp
or
aad
cmp
repz
mov
push
push
xchg
jecxz
mov
jno
push
xchg
popa
das
popf
sub
mov
add
aaa
out
faddp
dec
cwtl
lret
or
cmpsb
test
mov
fcoms
push
imul
dec
out
jmp
iret
cld
in
mov
pop
push
mov
xor
and
or
jmp
xlat
xor
sub
sti
cmp
les
fistl
cmp
xchg
loop
enter
mov
cmpsb
cli
jge
jb
bound
ljmp
lret
addr16
ja
hlt
daa
sbb
pop
xchg
rolb
fs
mov
dec
xchg
shll
inc
js
int3
cs
mov
fisubrl
or
cmp
dec
lods
dec
mov
sti
mov
mov
inc
leave
jns
or
lea
test
mov
cmp
stos
pop
sub
sar
sbb
jmp
or
minps
jb
sub
push
pop
xor
iret
cmpsl
inc
and
iret
mov
cmpsb
dec
push
lds
cli
ret
mov
out
jl
int3
aad
jbe
stos
sbb
ss
fsubl
adc
movsl
mov
shrl
movl
xor
out
xor
mov
adcl
arpl
out
vpcmpeqw
roll
mov
jo
mov
pop
jb
sub
fs
xor
and
mov
pop
or
faddl
push
test
mov
aad
mov
sbb
into
gs
popa
mov
jae
ret
adc
sbb
std
fidivl
int3
data16
jge
push
int
mov
orb
imul
and
mulb
inc
pop
jmp
fs
ja
mov
push
lds
aam
and
jge
in
fiadds
cs
jge
sub
and
dec
ret
aam
enter
arpl
pop
cli
ja
jns
in
lods
mulb
lret
xor
cmp
clc
xor
fs
mov
mov
mov
dec
ja
lock
mov
push
sub
or
ja
sub
xor
inc
pop
scas
subb
les
pop
fstpt
aad
ss
add
xchg
sbb
cmpsb
jmp
add
jp
sub
cmp
rcl
call
jp
pop
push
xchg
add
or
xchg
jnp
mov
push
cmpsb
or
sbb
push
mov
cmp
cmpsl
lods
lcall
cmpsb
movl
push
loopne
mov
mov
xor
fs
xor
pop
jno
dec
les
cmp
test
fidivl
sbb
pop
pop
subb
movsb
fcmovnu
shlb
mov
jo
add
xchg
and
xor
pushf
cmp
inc
ljmp
notb
push
out
stos
lods
jge
scas
xor
mov
dec
mov
or
test
cmp
or
xor
push
imul
add
mov
pop
cmpsb
xor
push
mov
pop
fistpl
or
mov
imul
cld
push
aas
daa
adc
cld
add
jecxz
scas
pop
loopne
sbb
pushf
mov
pop
jbe
sahf
data16
sub
es
push
pop
push
add
out
cmpsl
outsb
pop
cmp
sarl
lcall
pop
push
imul
cmpsl
jo
fnstsw
fnstenv
push
mov
jl
mov
sub
inc
mov
movsl
repz
mov
mov
cld
dec
iret
inc
mov
scas
jb
rcrb
dec
adc
push
getsec
ja
pop
xchg
adc
test
aad
dec
mov
sahf
rorl
fdivrp
int
or
std
test
xchg
cmp
cli
test
test
adc
arpl
adc
jae
rcrb
push
popf
push
dec
movsb
sbb
jne
aas
pop
fwait
aam
jns
cmp
sub
mov
sbb
jae
lahf
xchg
cs
dec
push
inc
push
loope
pusha
sbb
xor
xor
cltd
mov
js
or
mov
andl
pop
ret
inc
mov
adc
lret
pop
push
ja
test
mov
test
cltd
mov
pop
xchg
lret
or
cmpsl
fldcw
jb
xchg
shll
ret
or
xchg
jmp
and
adc
and
mov
fldenv
cmpsl
daa
sbb
xlat
dec
pop
stos
sbb
xor
aaa
and
jbe
xchg
cmpb
inc
fistps
out
ja
jmp
sbb
or
xor
insl
iret
outsl
out
mov
out
mulb
ret
outsl
bound
mov
ljmp
jo
movsb
sbb
loope
arpl
push
gs
aaa
lret
cmp
dec
mov
cmp
.byte
