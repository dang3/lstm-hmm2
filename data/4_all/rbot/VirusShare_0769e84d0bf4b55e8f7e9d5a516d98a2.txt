cs
jo
arpl
add
inc
add
add
add
out
add
add
add
pusha
add
loopne
jb
jb
add
add
inc
add
add
add
int
add
add
add
add
aam
inc
add
add
add
inc
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
and
inc
add
inc
add
inc
add
sbb
add
les
add
cld
cmovo
enter
lret
add
inc
add
inc
inc
add
pop
add
cmpsb
sbb
inc
.byte
.byte
sbb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
les
add
les
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
dec
add
add
outsb
add
add
add
jbe
imul
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
outsl
add
outsl
add
add
add
addb
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
ja
imul
outsl
add
outsl
add
add
js
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
push
and
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
stos
push
or
cmc
cmp
jmp
hlt
sbb
xor
shrb
test
orb
sub
subb
jg
jge
jo
nop
mov
mov
sbb
aaa
push
rcrl
sbb
xor
aas
mov
mov
sbb
loope
mov
sbb
iret
fbld
pop
jp
rcr
push
mov
jmp
jb
adc
arpl
mov
push
add
into
or
push
cmp
and
or
test
jp
scas
pop
inc
xlat
xchg
cmpsl
pop
mov
sbbb
dec
movsb
shrb
lock
push
xor
or
cmp
mov
inc
stos
or
enter
cwtl
es
dec
test
jl
dec
andl
in
mull
jo
inc
test
cmc
fisttpll
int3
test
into
mov
or
jae
clc
aad
lods
pushf
test
loope
xchg
cli
inc
clc
adc
or
pop
pop
out
stos
mov
mov
insl
in
inc
inc
add
out
movsb
inc
mov
das
and
and
dec
fucomp
fnstsw
inc
leave
mov
icebp
dec
aam
push
and
dec
xchg
aam
ret
fs
sub
add
mov
xor
ret
sbb
into
cwtl
dec
xchg
mov
xchg
into
pop
std
les
enter
std
bnd
in
cld
inc
xchg
mov
leave
push
fmuls
pop
sub
jmp
and
or
data16
repnz
nop
xchg
hlt
iret
mov
or
out
and
je
in
fcomps
cli
xchg
adc
add
out
dec
pop
nop
lods
loopne
test
jecxz
stos
and
pop
stos
adc
pop
ljmp
movsl
cwtl
add
push
imul
stos
cmp
insb
mov
iret
or
arpl
mov
ret
or
lods
dec
shr
mov
sbbl
repnz
nop
jmp
cmpsb
push
xchg
shll
mov
fs
in
push
pop
xchg
dec
cmp
dec
xor
daa
push
popa
mov
push
dec
sbb
testl
jbe
cmpl
pusha
idivb
jnp
jne
sub
inc
inc
fisubrl
in
rclb
push
dec
mov
xor
rclb
cld
sbb
xchg
mov
les
int3
nop
jmp
cmpsb
lock
xor
sahf
ljmp
stos
mov
stos
push
frstor
sbb
mov
jp
inc
lds
add
test
incl
dec
mov
cmpsb
and
loopne
cld
mov
jo
repz
aas
adc
and
sahf
aad
ss
xchg
lret
lahf
jmp
xchg
das
dec
in
insb
pop
mov
xchg
jo
mov
xor
insl
inc
dec
mov
pop
frstor
and
testl
pop
pop
push
insb
mov
or
sbb
sbb
mov
pop
repz
dec
jne
sbb
jno
pop
mov
pop
out
fisubl
or
xchg
call
dec
cmc
dec
xchg
popa
jg
ret
sub
cmp
test
cmp
jge
scas
sbbb
jne
clc
sbb
mov
mov
mov
leave
pop
sub
jp
mov
or
stos
dec
mov
jnp
push
lcall
divl
mov
add
jb
cli
jp
dec
enter
gs
pop
sub
aaa
fldenv
in
fbstp
xor
lds
mov
mov
loop
and
xchg
xor
js
outsl
push
fwait
aaa
sbb
pop
je
inc
and
cs
fistl
push
jp
clc
shll
xchg
xlat
lea
cmp
in
inc
pop
and
xor
sub
das
mov
xchg
pop
xchg
sbb
pushf
jnp
mov
mov
jp
and
lods
inc
call
sti
test
fistpll
push
subl
jne
xlat
push
testb
xchg
add
mov
insl
inc
xchg
in
jmp
rcrl
mov
mov
ret
and
inc
fmull
test
and
repz
pop
jle
and
insb
mov
cmpl
mov
pop
xor
xlat
lods
sub
fsubp
pushl
mov
nop
pop
incl
mov
cli
out
sub
xchg
jle
lods
dec
mov
test
inc
jecxz
inc
mov
mov
mov
push
xchg
xor
add
daa
push
inc
lahf
push
xchg
push
jno
cld
mov
jno
xor
clc
out
push
mov
xchg
or
xchg
popa
shl
sbb
xchg
in
es
jo
xor
and
jecxz
insb
js
icebp
ja
sbb
aam
aam
push
xchg
pop
scas
iret
fnsave
sbb
mov
and
fnsave
out
jno
test
mov
mov
bound
cli
lahf
adc
mov
push
xchg
fistpll
push
or
lock
pop
push
aad
mov
cmp
enter
rcrb
shlb
xor
xor
sbb
xor
mov
out
xchg
int
and
icebp
sbb
mov
cmp
dec
jbe
inc
ljmp
pop
jb
test
jge
arpl
jns
lret
sbb
or
popf
mov
xchg
jecxz
cmpb
cwtl
test
insl
mov
or
adc
and
dec
or
sub
shr
xchg
insl
cmc
add
arpl
pusha
lcall
mov
jb
mov
das
mov
sqrtps
sub
in
mov
adc
and
pop
pop
out
mov
out
push
add
loopne
scas
test
add
inc
jge
ficomps
dec
or
jnp
mov
push
loopne
dec
cmp
pop
inc
daa
fisubl
sbb
fst
out
xchg
cmc
faddl
test
jns
push
mov
shlb
hlt
jnp
mov
sbb
or
je
out
push
add
mov
mov
div
cmp
enter
rorl
fsts
fistps
sbb
sbb
stc
inc
gs
hlt
inc
lods
cmc
jno
push
andl
cmp
sub
aaa
xchg
push
pop
xchg
jge
lds
sub
icebp
in
jnp
ja
mov
out
in
inc
jnp
mov
and
sarl
data16
xlat
sahf
in
cmpsb
shlb
and
mov
dec
int
cmp
add
out
fcmovnbe
add
lret
lods
enter
pop
in
idivl
lahf
add
mov
mov
stos
dec
ds
adc
or
psubb
out
mov
xadd
lret
clc
test
adc
adc
mov
repz
out
jecxz
mov
pop
fisubrs
popa
cmp
pop
cmp
in
pop
lcall
rcl
and
add
cmp
cltd
cs
aam
inc
sub
xor
jl
inc
jge
nop
stc
push
pop
inc
jbe
jg
into
daa
jl
mov
out
pop
mov
jnp
call
jne
dec
push
and
fistps
in
jae
cmp
jns
clc
imul
pop
jl
inc
sub
mov
dec
adc
les
mov
jmp
nop
push
xchg
out
jns
in
bnd
lods
pop
nop
sbb
add
push
rorl
into
adc
and
out
into
inc
ja
in
arpl
test
mov
mov
push
rcll
cmp
arpl
or
test
call
inc
dec
cmp
lock
or
xchg
pop
mov
movsl
lret
std
mov
loope
inc
out
mov
push
std
or
jb
lods
xchg
sbb
add
insl
aad
xchg
jb
mov
push
int
dec
fildll
es
jo
divl
lock
add
leave
inc
add
fmuls
mov
mov
clc
cmpl
cld
jns
test
ljmp
dec
sbb
int3
sti
iret
clc
ror
sbb
and
loope
push
std
mov
movsl
mov
out
cltd
out
sbb
pop
sti
or
adc
push
shll
orb
jb
pop
or
jbe
lret
push
leave
dec
sarl
ret
int
xlat
lds
xchg
mov
jb
mov
outsb
adc
jno
add
xchg
aam
dec
xchg
and
imul
sbb
cmp
nop
xchg
mov
mov
out
idiv
inc
dec
mov
cmp
inc
loop
lret
test
insb
sbb
bound
call
decl
mov
xlat
sbb
inc
mov
repnz
popa
cmp
xchg
push
lea
cltd
mov
ds
roll
mov
lahf
mov
push
mov
ret
sbbb
lcall
in
pop
pop
sub
movb
in
pop
das
into
test
enter
dec
jecxz
cmpsl
pop
jb
data16
mov
call
ret
xor
rcr
sahf
mov
or
sub
pop
jnp
dec
mov
xchg
jmp
inc
fadds
and
and
sub
mov
mov
popa
xor
mov
mov
adc
cmc
sbb
insl
sub
jno
cwtl
inc
adc
std
cmpsb
ret
test
lcall
movsb
lea
xor
fsubr
in
mov
lods
and
call
fisttps
andl
lret
mov
je
xchg
into
idivb
cld
fcmovbe
test
cmpsb
dec
add
fmuls
jle
sti
jl
call
sbb
cwtl
cmp
das
movsl
push
xor
int
hlt
push
in
mov
mov
nop
repnz
inc
pop
test
xchg
aad
adc
mov
adc
test
les
aas
rcrb
mov
sbb
cmpb
dec
push
out
aad
sub
in
out
rolb
dec
int3
clc
out
mov
pushf
push
repnz
or
outsb
sbbl
call
jl
stc
cmp
pop
mov
or
mov
shr
movsl
lahf
popa
stc
lret
pushf
adcl
mov
sbb
inc
jne
mov
mov
call
add
push
mov
ja
insb
mov
loop
insb
sub
sbb
aas
pop
xchg
mov
sub
or
hlt
shr
lahf
das
std
outsb
test
pop
pop
lods
icebp
adc
sbb
mov
and
je
jg
dec
loope
mov
mov
nop
add
nop
bound
arpl
pop
mov
mov
mov
mov
xchg
and
lahf
push
adc
cltd
fsts
jae
fisttpl
clc
out
push
mov
std
add
or
fcomps
sub
sub
mov
xor
and
mov
cmp
loope
callw
inc
enter
push
jns
lcall
gs
mov
outsb
pop
repnz
cs
call
xchg
adc
fs
jg
int
inc
mov
sti
call
sbb
jnp
sub
dec
enter
cmp
outsl
xchg
xchg
out
pop
mov
into
pusha
lods
sbb
push
inc
mov
inc
cmp
insl
mov
scas
xchg
push
mov
fiadds
mov
and
or
dec
ficoml
inc
enter
lret
pop
xchg
insl
imul
xor
push
inc
jo
inc
sbb
jb
sub
test
and
cmpb
add
mov
lret
mov
lret
jbe
jb
xor
ljmp
inc
arpl
ficompl
fcompl
xor
jle
xor
mov
mov
or
or
sbb
outsb
ljmp
dec
xor
sbb
es
xchg
jp
sub
xchg
and
out
loopne
stos
in
and
mov
imul
mov
frstor
pop
dec
lods
jecxz
inc
xor
adc
lds
movsb
add
cmpsb
jno
fnstenv
test
inc
xchg
xor
pop
adc
push
inc
push
insl
nop
xlat
jle
dec
and
adc
inc
sbb
jl
pushf
enter
push
nop
xchg
cmpb
push
push
xor
rcl
call
jbe
jo
out
jmp
cmp
mov
sbb
inc
stos
popf
ret
mov
stc
or
mov
add
dec
jbe
mov
pop
mov
popl
fwait
cmpsb
add
and
loopne
dec
loope
jns
scas
jmp
xor
inc
dec
inc
add
dec
jbe
mov
pop
pop
jge
cld
add
add
or
push
pop
addl
mov
xchg
pop
adc
and
ja
dec
xchg
mov
iret
gs
add
in
stos
flds
imul
mov
imul
inc
test
cmc
dec
xor
add
mulb
mov
adc
in
dec
push
mov
jl
adc
add
or
cmp
jno
or
cmp
push
cmpl
and
out
nop
iret
jecxz
loope
std
imull
inc
decb
mov
or
ss
push
dec
rcll
and
mov
iret
mov
and
push
popf
adc
mov
dec
leave
sub
dec
sub
pop
mov
jns
xor
dec
pop
insb
cld
cmc
test
imul
xor
cmp
clc
adc
stc
or
mov
pop
repnz
icebp
push
mov
mov
cltd
push
adc
in
pop
js
mov
jo
leave
mov
cmp
test
cs
xlat
movsl
xor
nop
xchg
addr16
out
not
cmp
out
inc
jmp
inc
test
adc
or
stos
push
out
iret
dec
jmp
outsl
jecxz
fldcw
cvtps2pi
adc
inc
inc
fisubs
dec
in
sahf
aas
leave
inc
cltd
imul
aas
in
pop
dec
out
std
inc
push
shlb
mov
mov
sbb
aad
fdivs
pop
rcrl
or
cmp
and
dec
rcll
lds
subl
addl
repz
mov
popa
mov
add
dec
lcall
or
mov
addr16
int
cmp
sahf
sub
add
mov
push
cmp
adc
fcomp
imul
mov
sbb
xchg
lret
popf
cmp
xor
inc
xchg
mov
inc
into
test
std
push
push
sarl
or
cltd
fs
mov
jno
out
lcall
jp
jo
popf
jl
loope
aaa
int3
stos
stc
xchg
fcmovu
push
add
ds
jns
pop
push
clc
popa
repnz
sbb
add
mov
cmc
cmpsb
js
fdivrp
or
jbe
cli
adc
fs
nop
xlat
or
lahf
pop
ss
xorl
lcall
fistps
dec
xchg
xchg
push
in
pusha
sub
cmpsl
xchg
jne
sbb
xor
clc
jae
jbe
pop
in
fstl
fidivrs
outsl
lods
pop
je
add
ret
daa
ds
out
jo
mov
dec
adc
or
xchg
xchg
outsl
sub
lods
inc
daa
xchg
jns
dec
cltd
add
scas
jo
leave
aaa
xchg
xchg
test
cmp
cmpb
push
std
mov
xchg
cmp
push
ljmp
fcompl
cmp
fldenv
stos
ljmp
or
inc
xchg
inc
mov
bound
push
push
or
jmp
sub
xchg
pop
jb
or
loopne
push
mov
sub
xor
test
and
popa
add
mov
outsb
js
ret
pop
mov
cmp
push
test
adc
lret
lock
outsb
cltd
mov
lods
test
sbbl
mull
in
xor
rorb
outsl
jnp
fcoms
lods
add
cmpl
and
pusha
fwait
int3
daa
pop
hlt
adc
and
popa
add
in
inc
sbb
push
add
push
or
xlat
les
add
lret
push
sub
dec
adc
inc
pop
ja
in
jle
sbb
cmp
sub
lods
add
mov
imul
jl
lcall
js
xor
loope
popf
aam
in
out
js
add
mov
xor
leave
xlat
sub
mov
xor
add
stos
inc
pusha
int3
in
imul
test
dec
sub
jnp
xchg
aaa
nop
push
and
bnd
push
out
das
in
stc
inc
push
dec
xchg
or
mov
sub
sti
and
addr16
ljmp
and
inc
push
in
add
mov
movsb
add
xchg
loope
cld
in
imul
imul
fdivrs
mov
arpl
mov
mov
movsb
dec
xor
mov
or
or
mov
hlt
cmp
or
mov
dec
js
push
mov
inc
in
in
xchg
test
jo
sub
stos
adc
xor
dec
iret
sub
sub
push
test
arpl
xor
or
pop
repz
cmp
in
xchg
push
inc
xor
in
ret
push
cmp
test
mov
aam
outsb
push
dec
sbb
mov
jp
cmp
test
repnz
fnstcw
enter
cmpsb
pop
inc
in
jl
push
mov
aam
mov
int3
mulb
jb
movl
dec
push
mov
push
lods
or
push
push
cld
insb
push
inc
dec
pop
cmp
mov
das
xor
fs
jecxz
jo
jmp
jne
push
cmp
jb
sbb
xchg
jge
and
jne
pusha
cmpsb
xor
and
popf
addr16
stos
std
sub
inc
scas
xchg
dec
jbe
mov
out
or
imul
inc
loopne
pop
lahf
pushf
std
xchg
jecxz
cmp
in
ja
cli
ret
push
jecxz
pop
jle
ja
clc
ret
adc
das
jnp
cmpsl
xchg
mov
mulb
imul
pop
fnstsw
cld
outsl
in
inc
push
jbe
jle
in
cmp
sbb
or
sub
pop
xchg
into
outsb
es
add
push
xor
mov
push
mov
or
inc
pusha
rorl
pusha
ljmp
xchg
pop
jmp
jae
sbb
mov
mov
lret
dec
ret
xchg
xor
movsl
and
xlat
int3
adc
xchg
mov
roll
scas
jp
xchg
sub
and
pop
int
push
sahf
pop
cmp
in
fldl
jo
mov
rorl
in
repnz
dec
push
push
push
mov
ja
or
in
sahf
mov
jae
cmp
out
fdivl
int3
cld
fidivs
das
dec
lret
cmp
mov
sti
push
test
cmp
cmpsb
inc
jo
pop
or
data16
outsb
xor
jno
jb
dec
jbe
loopne
mov
testb
jle
lds
mov
dec
mov
push
xchg
or
shl
shl
dec
xor
mov
fldt
cmp
fsubrl
cltd
push
ret
sub
call
mov
daa
inc
sbbl
stc
sub
dec
stos
fimull
lods
mov
inc
jp
lret
int3
stos
popa
popf
fwait
ret
test
imulb
inc
dec
call
pop
mov
add
xlat
popa
mov
xchg
adc
aas
push
mov
fstpl
mov
into
mov
movsl
fadds
and
scas
in
stos
cmp
test
sbb
idivb
xor
icebp
dec
mov
and
clc
cmp
repz
push
push
xchg
sbb
sahf
and
xor
fstpl
lds
xchg
jnp
jge
push
push
xchg
mov
xchg
and
test
sti
daa
out
xor
jg
cmp
test
icebp
out
fsubrl
xor
jl
sbb
test
rcll
es
nop
fadds
ja
jp
pop
jecxz
and
cmc
pop
fwait
test
imul
pushf
sbb
sbb
add
dec
mov
dec
daa
rorb
inc
cmp
and
xchg
mov
sub
test
int
in
or
push
cli
xor
mov
jnp
xchg
mov
orl
fnstenv
scas
out
and
xchg
sarl
add
sbb
movsb
sub
out
jle
test
cltd
mov
fidivrl
loope
inc
int3
or
clc
or
cwtl
mov
hlt
inc
xchg
scas
cmpsl
dec
inc
mov
in
fidivrs
hlt
std
cmp
jae
jg
sbb
add
outsb
mov
pop
dec
loop
lret
js
sbb
and
xchg
sub
mov
push
neg
and
sub
fmulp
add
mov
push
xor
inc
out
lea
push
xchg
call
aaa
andb
sbb
nop
xor
nop
push
sbb
dec
add
push
add
popa
dec
sub
nop
insb
movsl
or
sub
enter
mov
push
out
out
out
popf
jo
and
mov
dec
cmp
shrb
cli
and
pop
dec
push
shll
or
jnp
pop
cmp
add
lods
inc
sub
fs
inc
hlt
inc
negb
jecxz
orl
cld
mov
push
push
ds
jp
mov
xlat
pop
mov
mov
outsl
or
inc
test
push
aad
jns
inc
cwtl
mov
fidivs
and
mov
test
lea
pushf
cltd
dec
fcoms
mov
cmp
sub
insb
push
xor
scas
add
fstl
movsb
stos
sbbb
dec
pop
loope
and
inc
fcomps
mov
cmp
lcall
pop
xchg
mov
xchg
loop
or
sub
bound
add
cmp
cmp
adc
adc
sbb
aam
sub
mov
loop
inc
adcl
stos
stc
and
push
mov
xchg
or
lods
xchg
jmp
dec
loop
pop
push
mov
inc
cmp
daa
movsb
push
push
hlt
aam
push
dec
push
aas
outsl
stos
addr16
sbb
jno
clc
mov
cmpb
xorl
dec
int3
and
stos
push
xor
lds
rcpps
add
fdivl
cmp
xlat
mov
mov
test
pop
fiadds
mov
jmp
mov
push
push
les
imul
inc
jo
cmp
pop
inc
lods
jg
fcomi
adc
int
arpl
fwait
aas
xchg
cmp
push
sub
xchg
fwait
repnz
push
add
test
movsb
cwtl
imul
mov
pop
jns
call
movsb
sar
jge
sarb
popa
fiaddl
sub
ss
mov
pop
into
pop
xchg
mov
popf
and
or
inc
cmpsb
adc
sbb
es
mov
stos
leave
push
jecxz
repnz
or
sub
jo
add
jb
add
pop
hlt
les
ret
iret
sarb
out
or
ret
or
in
lds
daa
adc
sbb
cmp
cmp
mov
or
popf
mov
mov
stos
adc
jo
pop
std
test
xor
push
jno
and
xchg
stos
xor
sahf
cwtl
cmpsl
dec
mov
lahf
popa
xchg
in
sbb
ja
lods
adc
dec
lea
push
insb
add
sbb
mov
inc
pushf
inc
xor
mov
cmpsl
xor
mov
mov
daa
jae
xor
xor
ficompl
pop
loope
inc
push
negb
xchg
mov
fists
xchg
pop
negl
cmp
jo
xor
dec
es
jne
mov
jge
adc
or
adc
xchg
inc
int3
push
cmp
cmp
lods
in
xlat
xchg
jle
mov
div
xor
test
xor
sub
rcrb
lock
cmpsl
mov
fwait
and
in
sbb
scas
adc
inc
or
cmp
mov
and
sti
mov
dec
mov
mov
xor
imul
divl
xor
push
mov
push
xchg
pop
ljmp
mov
clc
outsl
pop
dec
and
shr
push
add
mov
loope
or
scas
xor
dec
into
add
push
loope
pop
es
in
push
jns
popa
fst
or
mov
mov
mov
or
stos
cli
cmpsb
paddsw
or
addr16
sbb
and
adc
mov
js
mov
sub
mov
call
mov
jl
jmp
mov
scas
ljmp
and
xor
popf
lods
ds
bound
arpl
push
mov
or
xchg
pushf
xor
xor
inc
jmp
pop
loopne
adc
inc
in
lcall
data16
push
xchg
cmp
push
mov
rcrl
mov
and
fdivrl
test
fwait
cmp
mov
push
std
sbb
push
pop
add
cltd
subps
out
jno
and
inc
xchg
adc
enter
cwtl
inc
and
cmp
mov
add
loop
lods
push
gs
push
mov
loop,pt
xlat
shl
gs
xor
mov
or
push
sub
and
test
xchg
rol
mov
add
fldt
and
add
sub
inc
dec
push
enter
nop
sub
xor
cmp
xchg
push
xchg
dec
jmp
xlat
ljmp
cmp
cmp
not
mov
out
sub
movsl
mov
dec
mov
xor
or
loop
and
mov
sub
stos
xor
add
shl
cmp
xor
pop
insl
sub
push
xchg
cli
cwtl
pop
push
shl
xor
out
cld
push
daa
push
dec
mov
lds
adc
mov
mov
stc
push
and
fisttps
xchg
movsb
in
xchg
ror
inc
dec
int
cmp
fucomi
hlt
xchg
shll
and
in
cmp
adc
or
dec
repz
sub
inc
mov
or
add
test
imul
shll
jne
mov
lock
mov
loopne
jo
inc
jg
dec
mov
rorb
push
out
adc
enter
sub
fcomps
fistps
fidivrl
cltd
imul
xchg
movsl
pushf
dec
enter
mov
test
jmp
jp
xchg
adcb
addl
negl
and
js
aas
cmp
jbe
or
les
orl
inc
int
popa
fs
mov
mov
pop
inc
stos
sbb
xor
lret
and
scas
or
xchg
cwtl
scas
pop
mov
mov
push
cmp
mov
cmc
dec
loope
and
stos
xchg
adc
sub
pop
push
js
sbb
repz
xlat
in
jle
insl
insl
aad
aaa
mov
stc
test
cli
dec
aaa
out
jns
ret
sub
xchg
push
mov
ret
push
push
rcr
xor
cmpsl
lcall
sbb
scas
dec
sbb
push
jo
arpl
icebp
insb
ror
xor
rolb
cwtl
insb
aaa
dec
jae
push
push
xchg
sub
daa
jge
mov
call
rcrb
pop
out
and
cltd
mov
cmp
mov
daa
dec
std
and
cmp
xor
adc
mov
add
jecxz
out
pop
call
pop
push
pop
push
xchg
or
andb
fwait
push
enter
fs
xor
inc
cltd
xchg
push
xchg
and
sub
mov
xor
out
or
mov
pop
aad
pop
push
fwait
sbb
ss
mov
sahf
add
iret
add
adc
xchg
aas
ljmp
mov
fidivl
lds
jp
aam
push
and
das
or
imul
mov
mov
neg
idivl
sbb
pop
xor
push
cmp
sbb
outsb
cmpsb
clc
jl
daa
int
inc
fidivl
inc
test
dec
push
sbb
pop
push
mov
in
dec
mov
jbe
dec
jmp
cs
mov
or
cli
int
into
add
lds
por
fisttps
jp
push
sbb
lret
jno
push
push
add
dec
mov
xor
pop
mov
cmp
mov
repnz
ja
inc
sahf
dec
inc
jns
pop
and
lret
and
and
iret
sti
sti
jle
addr16
sub
lods
dec
ja
lret
sub
nop
or
sub
jl
pusha
gs
mov
mov
sub
add
loopne
add
mov
daa
jge
push
add
cmp
dec
orb
jg
test
std
xor
jnp
pop
inc
add
fucom
fiadds
cmp
pop
pop
enter
aaa
xchg
divl
pushf
cmp
push
xchg
sub
push
jg
inc
sbb
dec
icebp
jo
pop
out
and
xchg
cmp
and
ss
pop
inc
icebp
adc
fsubrs
lcall
repnz
mov
sub
in
test
cwtl
into
mov
fldt
mov
mov
push
fcompl
mov
xor
inc
cmp
add
xchg
addl
iret
cmp
or
movsb
insl
bound
or
pop
and
or
rolb
jae
push
insb
sbb
sub
xchg
ljmp
loopne
xchg
mov
daa
mov
sbb
pop
mov
jmp
cli
mov
and
sub
addr16
adc
out
jp
dec
mov
bound
cltd
sbb
push
jecxz
push
repnz
cltd
iret
loop
xchg
mov
dec
push
mov
rclb
imul
popa
jg
push
icebp
sub
xorb
add
movsl
and
inc
into
or
test
pop
icebp
sub
and
push
mov
cld
sbb
jns
ja
popa
test
rclb
push
rclb
adc
cmpsb
stc
enter
add
imul
sbb
gs
push
icebp
outsl
mov
sti
sub
mov
push
orb
lret
xor
cld
add
lahf
cs
cld
lea
push
mov
icebp
lar
sub
sub
jle
shrd
psrlw
leave
sti
lock
dec
enter
xchg
aas
cmpsb
es
cwtl
test
mov
jp
xor
push
cmp
mov
jl
scas
jno
daa
mov
repz
in
into
in
cmp
cli
cmc
push
stos
mov
pop
pop
ret
test
push
jecxz
push
jmp
ficomps
xor
scas
add
pop
icebp
loope
push
pop
mov
dec
xor
inc
sub
push
sbb
jmp
mov
jmp
mov
shlb
in
pop
sbb
xor
pop
das
popf
push
stos
mov
pop
xchg
in
dec
pop
mov
mov
les
in
stos
inc
sahf
pusha
test
jmp
dec
lret
test
cmpsl
cmp
lods
lcall
or
xchg
inc
mov
aam
nop
mov
mov
prefetch
mov
mov
js
xchg
ret
mov
popf
addr16
imul
jae
std
bound
fists
xchg
insl
mov
fs
pop
and
jnp
in
push
xchg
mov
aam
sub
sti
mov
mov
and
xchg
loopne
mov
lock
pop
jns
and
mov
xor
jbe
mov
cmp
in
pop
xchg
mov
sbb
add
xchg
jg
push
popa
pop
fdivs
addl
dec
or
jbe
sub
push
idivl
ret
sbb
pop
dec
push
sub
mov
sarl
or
push
or
out
lock
ljmp
fsubrl
sbb
jmp
pop
mov
inc
sub
pop
pop
cmpsl
mov
in
adc
push
decb
mov
jg
repnz
dec
xor
xor
mov
pop
sub
pop
in
adc
jns
cmp
mov
loop
pop
sub
movsl
mov
imul
push
inc
cs
pop
test
and
add
push
push
xor
lods
mov
ss
fidivl
dec
clc
mov
jnp
std
lret
dec
clc
aaa
arpl
iret
ror
jbe
cld
and
dec
cli
data16
and
addr16
dec
inc
and
push
idivb
ret
call
mov
daa
and
inc
jmp
iret
sbb
pop
movsb
rol
sub
mov
push
push
popa
ret
cmp
dec
cs
test
call
xchg
rep
xchg
lods
lcall
push
or
inc
pop
orl
mov
dec
jns
sbb
bound
add
add
out
pop
adc
cltd
add
mov
insb
popa
fsubrl
dec
push
test
sub
inc
and
jle
mov
pop
mov
xchg
mov
xchg
sbb
fldl
fdivs
cmp
les
and
cld
xor
outsl
or
aaa
push
pop
bound
mov
mov
loop
aad
add
fidivl
push
pop
js
mov
dec
mov
mov
movsl
cltd
sub
outsb
jno
cmp
movsl
mov
insl
jne
add
pop
lret
mulb
dec
jnp
mov
ja
xchg
sub
in
scas
add
mov
dec
mov
ja
lods
lcall
push
adc
xor
add
xor
adc
rcrb
sub
iret
iret
insb
rorb
gs
dec
sti
loopne
hlt
in
into
cmp
std
ret
sbb
dec
mov
or
mov
loope
out
xor
jns
cmp
jmp
gs
pop
out
call
push
jge
andb
or
jl
insb
jnp
pop
jo
ss
cli
mov
and
xchg
test
push
dec
pop
mov
bound
xchg
fsubr
imul
dec
cmc
xlat
lret
loop
xor
daa
xchg
xorl
movsb
xchg
fs
aas
dec
sbb
adc
in
mov
add
cmp
test
sub
ds
add
test
fistpl
rclb
jnp
dec
cmpsl
sub
neg
inc
add
mov
rcrl
dec
sbb
mov
lock
popa
xchg
xchg
pop
pop
sub
pop
dec
xlat
xor
xchg
fs
dec
inc
dec
ud1
into
inc
sbb
jne
or
sbb
lock
xor
mov
hlt
aaa
inc
out
mov
pop
cmp
inc
aas
pop
adc
int
push
scas
lds
jb
sub
adc
dec
cmpl
push
or
mov
scas
lea
push
insl
pop
je
pop
cmp
int3
leave
mov
ret
popf
or
xor
or
out
add
les
dec
inc
std
fsubl
sahf
outsl
push
xlat
adc
pop
cmpsb
pop
mov
xor
out
loopne
in
je
mov
cmc
inc
addl
inc
aam
cmp
or
shrl
imul
mov
xchg
sbb
aad
jg
adc
fidivl
pop
sbb
rcll
adc
ds
lds
push
imul
xor
sub
je
and
mov
mov
mov
std
sbb
leave
out
xchg
push
pushf
mov
sub
aam
jnp
inc
xor
and
or
int
inc
adcl
mov
pop
or
pushf
and
inc
lahf
popf
sub
in
daa
int
stos
insl
insl
rcll
mov
out
push
mov
mov
push
jo
enter
fscale
mov
push
inc
fdivl
fsubs
movsb
or
cmp
xor
sti
adc
and
pop
sub
js
data16
ja
mov
test
nop
fimuls
loope
hlt
hlt
or
subb
retw
fbld
test
add
aam
movsb
loopne
add
mov
or
lds
xchg
mov
pop
mov
xchg
jbe
inc
push
inc
popf
push
push
and
mov
cmp
mov
fucom
pop
or
xchg
push
movsl
lods
aad
jns
jecxz
cmc
lock
mov
jmp
jle
mov
pop
insl
ss
ja
imul
jnp
push
cmp
aaa
sbb
addr16
mov
xchg
in
loop
push
ljmp
cmc
add
repnz
lret
ds
adc
in
ja
popa
sti
add
sbb
dec
ja
cs
les
xor
push
scas
fsubr
repz
call
daa
push
out
insb
sub
cmp
int3
sahf
inc
mov
es
adc
xlat
dec
mov
into
rclb
xor
mov
mov
sub
int
int
cmp
aad
sti
popa
mov
mov
fnstcw
ret
add
jle
jmp
jae
sahf
ret
mov
dec
stos
dec
mov
test
or
int3
loop
int3
pop
fimull
test
shrl
imul
test
test
fsubs
cmp
cmpb
pop
int
add
aaa
insl
mov
xchg
cmc
insl
out
movsb
push
ret
nop
xorl
xchg
and
pop
test
and
push
pop
rcll
lea
popa
cmp
bound
dec
sahf
in
das
pop
pop
mov
xchg
lods
pop
mov
sub
enter
add
adc
int
negl
jne
jnp
nopl
popf
push
inc
mov
mov
dec
add
push
aam
sub
shll
sub
and
in
mov
inc
fs
test
sti
cmpsb
sbb
and
nop
testl
adc
lret
sbb
push
incl
sti
push
sbb
xchg
rcll
push
lret
subl
mov
loopne
mov
pushf
pop
sub
add
sti
mov
pushf
movsl
lea
loope
sbb
nop
in
sub
xor
nop
jae
gs
into
jg
bnd
shll
enter
pop
in
ja
nop
push
fildl
xchg
cmp
push
and
mov
mov
loop
xchg
dec
pop
insl
pusha
ss
aaa
xchg
rolb
mov
arpl
outsl
fsts
popf
insl
repnz
add
int
shll
push
testb
xlat
add
es
dec
in
jbe
cmp
cmpsl
sbb
mov
clc
push
jge
stos
pop
testl
jmp
loopne
push
mov
cmp
loope
or
push
mov
mov
ffree
test
pop
bound
stos
and
inc
mov
inc
mov
stos
xchg
fidivrs
leave
sub
jbe
std
mov
push
js
jl
ds
clc
sub
aad
sbb
in
push
mov
jl
test
mov
push
data16
mov
xchg
mov
idivb
pop
push
pop
lds
xchg
movsl
mov
popa
bnd
not
or
xchg
lret
cltd
push
ror
jae
mov
mov
push
int3
xor
adc
subb
pushw
sub
sbb
push
lcall
es
lret
inc
mov
loopne
xor
pop
cld
push
sub
inc
iret
push
icebp
adc
cmpl
dec
insb
stos
out
jbe
iret
ret
sbb
cmp
adc
pop
js
xor
mov
ds
insb
pusha
mov
inc
pop
mov
stc
sbb
lods
mov
cli
mov
xor
push
mov
or
sarl
xchg
xor
int
jo
pushf
jg,pt
mov
test
ja
les
and
and
mov
negb
call
lret
adc
ror
or
mov
mov
sar
mov
ljmp
test
sbb
mov
mov
xor
addr16
scas
pop
or
and
push
imul
imul
push
cmpsb
into
repnz
cmp
cmp
fst
add
ja
pop
jbe
movsl
test
lods
cld
pop
jle
or
pop
call
repnz
sub
dec
stc
stc
mov
jp
sahf
ret
sbb
aas
lods
call
xorb
pop
sub
jge
mov
jne
mov
popa
mov
push
inc
pusha
cmp
fstpt
test
mov
jno
icebp
rorb
pop
fmul
icebp
stos
in
mov
test
cwtl
ds
and
iret
mov
scas
outsl
icebp
sub
jle
cs
cmp
inc
mov
jp
outsl
leave
ljmp
xor
fs
jecxz
xchg
ror
mov
adc
test
push
popf
mov
mov
pop
dec
dec
jmp
cli
mov
mov
data16
lea
jmp
cmp
movsl
add
lcall
push
sub
out
dec
loop
daa
dec
mov
push
and
xchg
jo
xor
or
pop
rcll
ljmp
cli
mov
jb
jnp
insl
insb
subb
aaa
aas
clc
in
mov
mov
dec
mov
inc
loope
insl
loop
int
sub
dec
lret
jg
mov
scas
fnstenv
mov
mov
xor
mov
or
aad
js
jmp
gs
xor
outsb
inc
cmp
jl
addr16
clc
out
outsl
pushf
dec
stc
mov
and
mov
cmpsb
orl
mov
repz
stos
js
push
xor
dec
pop
push
xor
loope
int
dec
mov
dec
sarb
scas
xor
mov
and
inc
movsl
pushw
mov
inc
daa
aas
sub
mov
mov
fisubl
jno
jmp
cmp
push
fnstcw
jecxz
mov
sbb
icebp
movsl
mov
push
jl
sbb
inc
cld
dec
fsub
jbe
call
pop
dec
shrb
jae
ret
add
inc
dec
xchg
sub
sarb
dec
xchg
fildll
fisubs
dec
out
adc
inc
mov
call
pushf
je
fs
push
adc
in
inc
hlt
rol
cmp
push
adc
mov
sbbb
les
outsl
ss
stc
cmp
lods
scas
cmp
pop
sub
sbb
xchg
or
add
aaa
cmp
and
adc
faddl
int3
xor
and
push
cmp
cmp
cmpsb
inc
cmp
or
xor
movl
sbbl
pop
sti
cmpsb
inc
push
pop
push
sbbl
mov
cs
pop
mul
mov
dec
cmc
dec
lcall
mov
mov
cltd
xor
imull
pop
dec
xorl
clc
mov
push
mov
lcall
fwait
fwait
or
fistpl
pop
lods
bnd
out
lods
or
cmpl
sarl
pop
mov
sub
testl
rcrl
into
lds
or
jmpw
adcl
add
int3
push
jmp
mov
call
outsl
xchg
and
cmpsb
outsb
in
pop
push
outsb
pusha
lahf
push
mov
or
aad
cmp
sbb
add
sub
mov
jnp,pt
inc
pop
xlat
ja
sub
mov
sub
push
rcrl
bound
sbb
push
push
pop
sbb
pop
or
fldcw
clc
pop
pop
sbbb
push
fs
push
inc
orb
repnz
popa
pop
ds
jmp
aad
mov
into
or
lods
shlb
setne
std
add
inc
pusha
cmpsl
dec
mov
and
sub
data16
pop
xchg
cmp
and
fcmove
fcoml
push
adc
pushf
sub
enter
das
movsb
pop
cltd
mov
xor
jo
adc
adc
stos
pop
cli
jnp
mov
mov
jb
sub
xor
mov
es
sbb
sbb
push
out
xchg
xlat
iret
insl
cmp
loopne
das
gs
add
add
sahf
pop
out
xchg
mov
pop
jns
sbb
dec
jns
cmp
xorl
dec
cmp
fsubs
pop
aad
aaa
sub
lahf
movsb
test
inc
xchg
in
xchg
repnz
push
adc
jbe
xor
sbb
inc
pop
jne
inc
fcmovu
push
and
cmp
lahf
or
in
inc
inc
cmp
test
pop
sub
cmp
jge
mov
aam
jl
dec
and
pusha
push
jecxz
sbb
sarl
into
insl
sti
jecxz
cmp
pop
aam
push
dec
loope
int
push
mov
test
outsb
xchg
pop
xlat
insb
inc
push
mov
adc
xchg
fldenv
xchg
push
jmp
mov
loopne
adc
push
imul
es
cld
ds
add
mov
xchg
push
xor
lods
mov
fsubs
xor
shrl
aas
add
dec
mov
cmp
orl
add
lcall
xor
aaa
cmp
shl
inc
mov
daa
loope
cmpsl
push
out
push
imul
lock
jp,pt
mov
xchg
into
xchg
dec
and
cltd
int
xor
cmpl
sahf
mov
jecxz
lahf
dec
scas
xor
pop
int
andb
xor
repz
jecxz
cwtl
gs
scas
fs
ja
fidivrs
jne
test
dec
decl
adc
loopne
xchg
mov
jge
cs
out
std
jp
push
cmp
cmpl
es
mov
ret
sub
jmp
xor
and
adc
sub
mov
add
test
xchg
je
fldenv
add
mov
mov
inc
lds
mov
xor
xchg
sub
mov
xchg
push
and
mov
sbb
loope
lcall
arpl
sbb
rorl
jle
out
adc
andl
mov
sub
mov
insb
andb
mov
xor
cmp
iret
arpl
mov
jae
pop
inc
xor
or
enter
mov
aam
sbb
xchg
jp
lahf
push
adc
pop
fildl
lret
dec
dec
adc
cmp
rorb
and
imul
inc
xchg
rclb
push
in
in
jmp
scas
icebp
shrb
xchg
xchg
out
jmp
clc
loopne
sbb
hlt
in
mov
popf
sbb
pextrw
and
cmp
int
xor
mov
shl
loope
rorb
sbbl
aam
test
jo
xchg
xchg
inc
lock
dec
mov
push
cltd
and
gs
add
sub
out
and
pushl
les
cmp
push
dec
cmp
xor
out
mov
or
jge
xchg
rcrl
mov
lret
pop
dec
in
loop
push
xchg
xchg
into
mov
cmc
xchg
mov
jp
mov
mov
jge
and
pop
popf
movsl
cmpsl
mov
sbb
xchg
xchg
fwait
cmp
add
sbb
jne
rep
xchg
and
push
jmp
or
sahf
and
mov
push
nop
and
pop
jle
push
jae
movsl
add
addr16
negl
pushf
xchg
in
outsb
outsl
loope
sti
push
push
roll
data16
push
aas
ja
lret
js
loop,pt
pop
push
lret
out
xchg
mov
and
adc
cmp
mov
adc
ret
scas
nop
mov
stos
or
call
test
push
xor
icebp
movsl
adc
ja
push
jg
mov
in
cmp
push
pop
loope
imul
std
jmp
movsl
cmp
xchg
jno
subb
std
sub
lds
xor
div
dec
stc
lcall
mov
daa
and
mov
adc
test
push
jo
sub
dec
jmp
jg
or
or
cmp
sbb
scas
push
fistps
jmp
frstpm(287
ds
pop
stc
mov
push
rcrb
out
xchg
sbb
lea
jns
lea
mov
out
gs
sub
mov
fisttpll
jns
jg
mov
jle
jg
insb
xor
mov
inc
push
dec
clc
mov
outsb
cli
mov
push
arpl
sti
and
out
gs
sbb
add
add
lcall
push
mov
lods
pop
shrl
or
in
out
xor
xchg
or
dec
push
sub
outsl
xchg
jp,pn
mov
xor
fiaddl
sarl
xchg
pop
sub
lds
dec
mov
mov
popf
mov
addb
push
jo
scas
pop
cli
or
mov
push
pusha
daa
insl
sbbl
mov
mov
mov
aam
inc
xchg
dec
mov
movsl
hlt
push
xchg
mov
add
incl
cli
xchg
pop
push
mov
popa
and
cmpsl
jae
mov
dec
out
and
movsl
push
sahf
ja
test
sbb
test
nop
loope
inc
test
mov
mov
cltd
ret
gs
pop
pop
jae
inc
imul
les
inc
jno
dec
cmp
xchg
pop
call
call
into
xor
jg
ret
js
mov
cmp
inc
cmp
cmp
sbb
add
enter
in
sbb
aas
sbb
inc
xlat
outsl
sbb
add
mov
fistpl
gs
or
pop
xor
test
addb
and
sub
cmp
add
lret
mov
imul
or
xchg
push
movsb
pop
icebp
xchg
ret
mov
int
push
insl
jbe
xor
into
xchg
xchg
sub
cmp
mov
mov
push
inc
leave
sbb
pushf
inc
stc
ret
leave
mov
mov
jle
cmpsb
popa
mov
and
out
pusha
mov
repnz
mov
movsb
dec
shrl
movsb
mov
push
stos
sub
push
ja
and
dec
sub
mov
out
or
out
ljmp
loop
test
test
daa
out
push
addr16
inc
lahf
jg
xchg
jmp
mov
mov
pop
push
jbe
cmp
ret
idiv
adc
add
dec
lret
mul
in
add
out
jecxz
xlat
mov
das
lret
in
jne
mov
adc
pushf
rcll
enter
jbe
cs
pop
scas
cltd
or
in
push
cli
adc
test
in
pop
and
mov
int
cld
mov
jp
iret
xchg
and
iret
das
push
jp
test
cmp
ror
sub
mov
out
jge
mov
fldl
add
sub
rol
add
xor
ss
sub
stos
in
add
cmp
and
bnd
negl
repnz
lock
inc
cmp
movsb
pop
dec
mov
xlat
aaa
mov
adcl
jnp
jmp
push
stos
dec
adc
add
or
fldl
pop
jl
xchg
push
cltd
lods
xchg
sbb
pop
scas
dec
mov
push
cmpsl
fmul
rcr
int3
inc
mov
xchg
sbbb
push
cmp
lods
jbe
cld
popa
dec
out
mov
push
or
xchg
pop
loope
in
test
lds
fildl
mov
loop
pusha
loope
cmpsb
aas
icebp
mov
sbb
std
sub
popa
popf
clc
jns
jmp
popf
mov
mov
leave
xlat
mov
adc
les
popa
insl
ret
xchg
dec
adc
pop
cmpsl
or
xchg
lods
inc
sbb
ret
stos
outsl
and
outsb
imul
inc
mov
in
jge
pop
scas
sbb
std
gs
push
sub
loope
sbb
lods
push
insb
push
mov
loope
aad
aaa
stos
cmp
xor
bound
lods
pop
push
push
out
lahf
add
jmp
in
into
ljmp
mov
repz
xchg
shrl
leave
sarb
push
aas
mov
push
adc
lret
mov
cmp
xor
ret
aam
jb
ret
mov
jmp
or
fldl2e
or
push
xor
fcoms
je
shr
adc
sti
pop
dec
sbb
mov
rcr
mov
ret
cld
push
mov
daa
mov
mov
and
inc
push
lahf
adc
int3
rcr
scas
sbb
and
mov
pusha
ja
push
cs
sahf
enter
mov
jnp
xchg
lret
fiadds
dec
dec
rcrb
push
inc
add
jp
mov
and
arpl
mov
rcll
xchg
inc
and
ret
xchg
jns
in
shr
inc
fists
jle
pushf
push
jge
packuswb
mov
loop
popa
pop
add
in
aad
add
push
xchg
popa
addr16
sarl
outsl
loope
push
cmc
rol
and
jp
fbstp
outsb
or
sub
mov
and
loop
adc
mov
lods
mov
lss
xchg
fisubrs
lret
lods
dec
test
mov
sarb
addl
loopne
or
mov
add
xchg
xchg
dec
mov
out
stc
push
sub
outsl
dec
idivb
sbb
sahf
dec
and
andb
das
dec
sbb
mov
xor
push
fs
adcl
test
data16
mov
pop
adc
or
fdivrl
xchg
push
xchg
scas
jno
mov
xor
push
lcall
fstps
ret
mov
add
or
out
aaa
nop
call
iret
sahf
or
scas
insb
test
loop
es
andl
out
adc
cltd
subl
xchg
jp
sbb
mov
test
mov
or
in
in
outsb
jge
stos
fadds
ljmp
or
test
xchg
pop
and
lret
cmp
aas
mov
dec
adc
pusha
testb
inc
sbb
adc
add
arpl
insl
aas
notb
inc
test
int3
popf
push
dec
test
or
pop
jne
ja
mov
call
mov
lahf
popa
cmp
out
dec
or
push
adc
cmp
sub
push
pop
out
lahf
testb
pushf
push
xor
divl
adc
iret
subl
mov
jmp
jmp
xchg
arpl
pusha
add
out
outsb
push
in
outsl
test
mov
in
or
xchg
pop
push
imul
shr
or
inc
pushf
jae
jne
ss
loopne
fimull
ljmp
jmp
mov
scas
pop
push
or
sub
jle
xlat
filds
and
addr16
js
xchg
mov
add
inc
jne
cmp
shrb
mov
pop
in
mov
inc
pop
inc
inc
add
xor
fadds
aaa
xlat
movsb
test
and
je
push
or
stc
int
and
pop
xchg
loope
adc
divb
lock
insl
sahf
movsb
nop
or
das
aad
cld
and
jge
or
repnz
push
fimull
mov
xchg
mov
sub
jle
sahf
popf
sahf
aaa
shlb
pushf
or
andl
lahf
out
or
and
jmp
mov
fdiv
mov
das
dec
fucomi
jnp
sub
loopne
sbb
inc
pop
cmpsl
xor
cmp
ds
scas
aaa
inc
mov
std
mov
push
sar
mov
or
repz
enter
mov
sarb
mov
xchg
jp
sub
push
je
loopne
xchg
sbb
rcl
push
xchg
icebp
es
mov
cmp
sub
divl
hlt
andl
dec
outsb
aaa
call
cmpsl
xchg
popf
xor
rcrb
clc
xchg
testb
and
dec
xchg
cld
mov
sub
adc
lods
inc
push
mov
in
cmp
jns
cltd
loope
pop
add
add
adc
xchg
es
lds
popf
pop
les
sub
seta
sarb
clc
add
dec
rcl
movsb
call
push
and
pop
data16
fstpt
jge
lods
dec
fs
es
in
mov
ret
inc
hlt
loopne
jp
cld
rol
pop
ret
and
popf
rolb
or
das
cli
or
mov
dec
scas
xchg
xchg
jae
mov
jecxz
imul
imul
test
add
mov
loopne,pt
outsl
and
or
inc
inc
cltd
sbb
pop
mov
and
adc
mov
movsl
outsl
in
sbb
cmc
inc
or
enter
je
sub
btr
pusha
lods
push
sbb
jnp
xor
or
mov
insb
out
out
jge
xor
mov
gs
add
cli
fcompl
enter
sbb
add
sub
clc
lahf
xlat
push
outsl
ss
call
and
adc
sbb
jg
sub
gs
aas
sbb
fs
jecxz
jo
leave
push
lahf
xlat
outsb
dec
and
int3
fdivr
mov
jl
loopne
movsb
rcrb
pusha
sbb
cltd
mov
xchg
leave
cmp
orl
mov
jno
hlt
push
daa
adc
adc
cmpsl
pop
cld
andb
adc
cmp
and
push
rclb
dec
aaa
jns
and
loopne
pop
in
rcl
stos
pushf
xchg
xchg
jmp
incb
rclb
jnp
aas
popf
adc
jecxz
xlat
popf
xchg
mov
jo
es
sub
popf
in
icebp
and
lret
xchg
out
mov
aas
test
bound
cmpsb
dec
or
lret
lods
repnz
enter
lahf
sbb
cltd
adc
repnz
push
mov
sbb
scas
repnz
dec
leave
popf
jno
xor
mov
push
lock
or
std
cmp
pop
and
dec
and
cwtl
test
inc
mov
in
push
les
jge
leave
fstpl
mov
aad
pop
mov
dec
stos
nop
inc
cmc
test
adcb
rcrb
inc
in
adc
jecxz
xor
sbb
mov
pop
push
stc
adc
mov
pop
xor
or
es
xchg
adc
dec
pop
sbb
dec
stc
lcall
mov
sti
iret
stc
cmp
jnp
mov
cmp
push
xchg
mov
push
int3
pop
icebp
sbb
sub
sbb
mov
push
xchg
popf
mov
xor
inc
adc
dec
and
stc
sbb
in
push
in
pop
test
adc
iret
outsl
push
jp
xchg
cs
xor
test
repz
aad
cwtl
cmp
pop
cltd
leave
xchg
sbb
sub
movsb
cmpsl
repz
lock
rcrl
int3
fadds
out
fiadds
push
imul
adc
aas
je
xor
or
inc
icebp
call
sub
mov
adc
pop
fwait
xor
mov
or
ret
jecxz
fsubp
nop
sub
imull
test
inc
push
xchg
xorl
out
imul
popa
jnp
and
cmc
xor
fstpl
popa
lods
cli
cmp
outsl
es
das
mov
sarl
add
in
roll
sub
popf
daa
xlat
mov
lcall
cmp
jbe
shrb
mov
jp
das
clc
sbbb
cmp
cmp
and
scas
push
jl
cmp
and
push
pop
mov
xor
cmp
fnstcw
cmc
lods
pusha
and
es
fisubrs
mov
out
lret
jecxz
add
adc
jae
scas
mov
jl
stos
cmc
pop
push
les
sbb
cmpsl
in
sbb
jmp
inc
mov
outsb
leave
push
push
cmp
cltd
mov
adc
ljmp
sarb
jo
lock
push
push
add
push
fnstcw
roll
push
jmp
mov
mov
imul
icebp
xchg
jo
mov
cmpsl
add
mov
cmp
sub
xchg
aam
dec
mov
test
enter
inc
lret
data16
or
xor
mov
xchg
fiadds
mov
stos
cltd
jmp
mov
ret
lea
pop
jg
lret
and
mov
xorl
test
push
test
adc
pop
inc
mov
push
add
insl
repnz
hlt
out
pusha
cld
add
jmp
imul
or
pop
mov
dec
lahf
inc
push
sbb
pop
add
or
sub
xchg
fcompl
inc
lods
or
mov
leave
cmp
ja
out
test
stc
xchg
push
addl
lods
mov
mov
mov
mov
lret
cmp
dec
mov
aaa
mov
xlat
inc
addr16
sub
sub
ljmp
sbb
fildll
dec
ljmp
fs
sbbb
test
stos
js
cmp
mov
mov
mov
xchg
ret
movb
add
pop
add
inc
addl
push
mov
das
xor
mull
xchg
stos
je
sub
push
mov
mov
out
mov
add
sbbb
pop
arpl
test
adcb
imul
mov
push
jne
adc
loopne
inc
push
push
testb
push
xchg
jmp
lds
pop
outsb
xor
adc
pop
faddp
add
jl
das
fcoms
jecxz
inc
sub
add
stos
jne
mov
jmp
arpl
adc
fs
lcall
xchg
cld
or
sar
sbb
sub
arpl
mov
pop
sbb
jecxz
pop
sbb
jmp
popa
and
pop
mov
inc
sub
insb
leave
cmp
rol
xchg
inc
filds
pushf
inc
sub
loopne
xlat
aad
pop
mov
mov
dec
outsl
mov
push
pop
sbb
ret
insl
scas
pop
ss
cmp
jne
daa
rcr
lahf
cltd
cmp
pop
jb
and
ss
jmp
cmp
jnp
sub
lret
dec
mov
outsb
pop
cmp
add
sub
push
fiaddl
and
and
test
pop
daa
rorl
ja
mov
push
subb
pop
das
cwtl
in
add
xor
out
fisttpl
aas
cmpsl
jl
xchg
test
and
push
mov
aas
push
sarb
mov
dec
sub
test
imul
mov
push
xlat
stos
imul
call
mov
or
scas
dec
push
sbb
ret
push
add
mov
xchg
in
pop
or
sub
add
insl
imul
xchg
add
movsl
xorl
push
mov
jge
or
in
seto
fxch
xchg
mov
popa
adc
jg
mov
and
mov
jae
pop
pop
imul
and
inc
push
pop
and
pushf
add
push
movsb
sbb
negb
jb
mov
imul
mov
hlt
call
push
or
imul
mov
pop
lret
loop
pop
std
inc
mov
mov
repnz
jle
mov
data16
shl
in
daa
adc
sbb
out
fwait
repnz
fs
movsl
scas
cltd
clc
or
mov
pop
stos
int3
adc
cmp
pop
sbb
lahf
jns
stc
bound
lret
push
clc
stos
lods
or
mov
fs
das
roll
std
xchg
and
pop
mov
es
sub
or
pushf
cmpb
imul
mov
jmp
push
aaa
mov
mov
cli
js
push
xor
daa
sarb
aam
push
inc
rcll
and
cli
scas
andl
fsubs
add
sbb
hlt
dec
mov
das
mov
mov
sub
out
inc
sub
stos
fldl
xchg
inc
inc
ss
xchg
and
fdivrl
inc
cmp
xchg
push
icebp
push
and
les
movsb
pop
xor
fwait
pop
ds
ja
test
inc
icebp
mov
pop
popa
cmp
addb
in
mov
aad
fisubl
dec
outsb
in
sbb
out
adc
sub
test
dec
and
mov
sti
cmpsl
cld
in
lcall
inc
lahf
pop
xchg
fs
xchg
xchg
cmp
fsubp
mov
cmp
mov
ror
movsl
popa
xor
pop
sbb
imul
add
mov
mov
mov
mov
inc
insl
cmpsl
lock
sti
push
add
adc
push
mov
adc
cs
or
sbb
inc
xorb
in
lods
lahf
enter
cwtd
rolb
aas
push
and
sub
mov
mov
dec
loope
sbb
dec
xor
rcrb
push
lds
pushf
test
aam
ljmp
inc
std
mov
jno
stc
mov
dec
cmpsl
jge
jmp
jae
aam
aam
out
out
sub
mov
cltd
add
mov
cmp
outsb
jo
popa
push
dec
imul
jb
ret
push
mov
xchg
dec
mov
xor
int3
int
pop
daa
in
outsb
lea
sub
mov
movsl
mov
cltd
jne
xchg
push
mov
lea
divl
xchg
mov
stc
mov
xchg
ja
sahf
sub
std
sub
dec
add
adc
and
jbe
sti
fmull
or
sbb
jl
js
gs
mov
mov
adc
push
mov
cs
cmc
or
or
lods
adc
push
and
mov
adc
ret
mov
pusha
stc
mov
cmp
inc
int3
lods
sub
cmp
adc
cmp
shl
pop
movl
aam
cmp
xchg
lea
in
out
test
mov
or
dec
add
test
es
sbb
ds
daa
lods
enter
loope
mov
cmp
shld
imul
pop
bound
push
es
mov
out
lods
stc
cmp
or
mul
mov
and
jne
inc
mov
loope
cmp
inc
movsb
xlat
cmp
fs
ja
xor
mov
cmp
or
scas
in
mov
shr
imull
push
adc
inc
sti
push
push
bound
subl
pop
flds
in
pushf
mov
rorb
or
and
jbe
inc
jecxz
pop
and
dec
sub
mov
ret
sbb
mov
int3
enter
ss
push
aas
sub
jb
xchg
std
test
push
adc
ds
mulb
lds
outsb
inc
push
add
lret
js
or
sub
inc
jb
inc
and
jl
push
sbb
iret
adc
mov
out
xor
and
arpl
out
idivl
sahf
ss
shll
xor
cmp
adc
in
lahf
lcall
es
cld
rclb
std
lea
jle
movsb
dec
or
adc
jg
loopne
dec
mov
jl
add
rcpps
add
loopne
and
ja
sub
call
jbe
dec
mov
sbb
pop
test
sahf
insl
das
cmp
repz
nop
pop
out
fs
pusha
ds
cmp
add
mov
imul
arpl
ret
push
movsl
add
lahf
push
jnp
imul
jmp
mov
gs
in
mov
cltd
inc
cmpsl
imul
daa
jecxz
sub
push
fsubrs
shrl
jmp
rcrl
xorb
dec
adc
cwtl
mov
in
pop
mov
outsl
dec
addr16
ds
hlt
mov
scas
stos
adc
cmp
repz
xor
insl
out
sbbb
hlt
cld
lods
or
ja
imul
mov
lahf
mov
or
xchg
jae
or
jmp
pop
sbb
jns
push
jo
adc
mov
jecxz
stc
sbb
jl
fs
inc
shl
or
jne
sub
shrb
iret
jle
xchg
or
out
lahf
sbb
icebp
add
aam
xor
mov
roll
inc
dec
frstor
jns
fiadds
mov
sbb
loopne
int
xchg
pusha
push
out
jne
xor
inc
pop
mov
cli
mov
inc
xor
incl
dec
mov
mov
insb
xor
xor
adc
and
clc
sbb
mov
xor
outsb
rorb
xor
jle
scas
jp
faddl
flds
cmp
lret
cmp
xor
inc
jp
in
inc
dec
test
sub
test
pop
fwait
enter
jbe
hlt
insb
cwtl
pop
sub
das
lcall
mov
and
movzwl
pop
fldt
stos
insb
jnp
scas
cld
sbb
movsl
and
in
jecxz
outsb
js
sub
xchg
arpl
lods
sub
shr
xchg
dec
jne
mov
jo
gs
cwtl
mov
ss
sahf
xchg
ljmp
inc
xchg
clc
xor
ja
scas
adc
push
cmp
es
mov
sarb
testb
cmp
insb
xchg
aaa
push
out
xor
xlat
in
sarb
in
xchg
cmp
dec
in
push
sub
bound
inc
bound
hlt
jo
popl
jbe
test
lods
mov
loope
aam
std
out
fstpt
xlat
insb
cld
xchg
and
sub
add
mov
jno
push
pop
in
sub
fadds
cs
xor
xor
push
pop
out
push
insl
xchg
xchg
or
icebp
dec
adc
xchg
add
jmp
std
out
into
inc
aam
out
inc
rorb
pop
nop
xchg
daa
out
int3
outsb
inc
xchg
loop
out
push
xor
jne
je
mov
cmpb
iret
movsb
mov
popa
sbb
jbe
xor
add
jbe
jo
pop
stos
dec
movsl
inc
sbb
adc
and
rorb
testb
lods
ja
ret
mov
xchg
data16
push
jno
sti
push
mov
add
pop
jle
inc
test
push
sub
out
mov
mov
inc
mov
rolb
cmc
mov
adc
out
cmc
fidivl
add
mov
sub
or
and
jmp
jne
xor
mov
scas
xor
lock
sahf
fwait
lods
shlb
xor
arpl
and
pushf
ja
mov
dec
lret
ret
out
or
and
jno
imul
mov
inc
add
sub
pop
lahf
lds
mov
jb
std
scas
xchg
inc
adc
jns
mov
nop
xor
cli
les
int
mov
pushf
adc
mov
jl
add
imul
outsb
cmpl
rol
ljmp
or
jnp
nop
dec
add
loopne
and
xchg
mov
js
adc
jle
mov
mov
adc
out
nop
mov
cmp
lcall
inc
push
dec
mov
add
sahf
dec
repz
jle
ljmp
enter
or
jb
adcb
inc
inc
or
aad
xchg
lahf
aaa
xchg
and
enter
cltd
stos
test
jne
sub
out
sbb
jecxz
pop
and
loop
pop
popf
mov
insl
and
xchg
lock
or
cmc
mov
mov
fadds
int3
pushf
in
jg
pop
sub
aam
dec
sub
mov
js
mov
mov
push
test
or
xchg
sbb
shlb
repz
ljmp
test
rolb
dec
fdivrl
pop
sub
sbbb
add
xor
push
loop
movsb
arpl
sub
mov
add
sar
add
fdivrl
adc
int
mov
adc
rorb
cld
add
dec
out
jmp
mov
aas
cs
or
jb
insb
mov
lret
stc
rolb
out
frstor
rsqrtps
add
lds
adc
addl
test
fisttpll
sbb
add
leave
aaa
pop
and
loope
inc
insl
lods
xor
push
pop
stos
jp
sbb
adc
lods
cmpsb
jnp
jo
subl
lods
sbb
inc
sahf
lock
repz
mov
orl
sar
jae
jnp
xchg
hlt
stos
push
push
int3
lds
or
mov
shrb
jb
cwtl
add
aaa
mov
or
adc
and
in
js
fwait
or
dec
lcall
test
popf
lcall
push
into
xchg
xor
push
push
mov
popa
mov
popf
mov
jecxz
sbbb
inc
mov
adc
sbb
test
test
scas
push
addr16
push
xor
nop
adc
jg
cld
jae
outsl
into
shll
inc
loop
mull
push
repnz
les
push
ja
jb
cmp
js
mov
addr16
sahf
pop
lcall
mov
sbb
push
ds
inc
xchg
inc
cmp
call
inc
jae
and
notl
das
mov
push
dec
or
cmp
mov
ss
ljmp
in
mov
flds
dec
mov
sbb
outsl
pop
xchg
fdivrp
sub
mov
jmp
rep
loop
aam
or
mov
cmp
ret
jbe
call
mov
mov
pusha
mov
repz
fs
adc
jae
xchg
xor
add
lea
adc
cs
xchg
subb
xchg
es
or
test
mov
aad
adc
xchg
mov
sub
js
dec
jge
xchg
jns
adc
shr
sub
sub
sub
aam
insl
pop
mov
adc
fcmovbe
mov
add
push
push
das
push
and
leave
decb
push
into
ljmp
fldcw
inc
and
or
mov
lods
jbe
jne
or
mov
leave
mov
mov
repnz
or
daa
js
es
mov
out
lret
cltd
xlat
daa
push
in
add
or
fidivl
mov
das
dec
dec
test
ja
jp
js
aam
dec
ss
add
inc
cltd
dec
int
mov
push
test
mov
mov
lret
xchg
push
xchg
or
inc
mov
out
jp
and
cltd
dec
mov
add
jbe
and
sti
adc
dec
popf
mov
ja
xchg
cs
gs
or
test
in
add
negl
daa
shl
jnp
sub
shr
push
mov
cli
jo
mov
pop
inc
stc
fistl
lods
insl
call
mov
fldl
mov
dec
stos
jae
les
call
mov
sub
loopne
movnti
sarl
lahf
out
roll
fldl
pop
mov
sub
mov
and
jg
pop
xchg
mov
push
fwait
cmc
scas
filds
mov
pop
mov
stc
cli
ret
mov
adc
pop
out
jmp
add
movsb
cmp
cmpsb
cld
xchg
jmp
leave
xor
pop
add
incl
xor
add
jb
and
push
stos
imul
mov
enter
addr16
jnp
mov
xor
sbb
test
sahf
push
push
lret
mov
push
xor
add
pushf
sbb
ficoms
inc
scas
mov
sbb
mov
dec
outsl
or
cmp
add
addr16
jae
cmc
test
je
repz
jp
jnp
sub
mov
sar
mov
xchg
pop
jg
stos
dec
mov
sbb
fstpt
int3
js
ja
adc
lods
add
nop
xchg
ror
jl
cli
mov
sbb
inc
mov
adc
xor
xchg
and
mov
push
shl
jg
sbb
test
pop
inc
sbb
push
xchg
loop
scas
lret
fimuls
popa
in
call
ret
jb
sbb
xchg
jge
jnp
adc
test
or
push
jecxz
inc
xchg
repz
xchg
ds
addb
cmp
ss
daa
orl
or
into
dec
dec
mov
cmpsb
jnp
outsb
jo
out
xchg
pop
loopew
shll
ljmp
aas
decb
push
and
test
push
adc
scas
xchg
scas
adc
sub
jo
fidivl
mov
ds
cltd
imul
adc
xor
arpl
cmpsl
mov
push
movb
adc
inc
repnz
or
add
repnz
jb
sub
mov
mov
mov
jb
fadds
dec
jl
out
inc
xchg
push
loope
cmpsl
bound
cmp
xor
lahf
pop
and
push
and
jmp
out
mov
mov
mov
jge
lods
adc
shll
dec
add
cmpsl
sub
out
adc
xor
loop
push
in
inc
sbb
mov
and
shll
rcrb
gs
inc
out
and
mov
inc
inc
cmp
pop
inc
out
leave
dec
inc
adc
movsb
xor
dec
pusha
and
vmovups
pextrw
leave
lods
mov
xor
sbb
add
in
add
ret
or
cmpsl
loopne
addl
xchg
xor
dec
jecxz
je
lret
fmull
or
dec
fdivs
jno
and
cs
mov
xor
mov
fs
or
sarb
xchg
into
cmp
cmp
push
out
mov
lock
mov
or
sub
aam
fistpll
ds
and
inc
pop
in
subb
fwait
mov
mov
xchg
loop
pop
aad
mov
imul
jp
push
dec
xlat
jb
lods
dec
pop
in
mov
add
inc
rcll
inc
aam
or
mov
dec
pushf
sbb
pop
pop
add
mov
jb
jno
orb
dec
scas
dec
mov
stos
mov
lock
test
gs
inc
stos
pop
mov
lahf
flds
push
sub
dec
ret
lahf
mov
sbb
repnz
dec
lea
out
cli
pusha
out
pop
cli
pop
push
adc
dec
lret
inc
idiv
cs
push
pop
lret
pusha
and
and
loopne
shlb
and
fldl
push
push
inc
lock
sbb
cltd
mov
fbstp
enter
pushf
pop
movd
mov
xor
jmp
aaa
loop
jne
repz
scas
sbb
jo
push
mov
in
aad
adc
loope
mov
push
inc
lret
int
loop
aas
icebp
inc
and
mov
in
or
sbb
stos
mov
add
repz
rol
adc
push
into
jne
pop
sub
sbb
cld
or
jecxz
test
clc
lahf
mov
push
pop
lock
outsb
mov
lcall
fildll
mov
xchg
das
inc
stc
in
or
test
repnz
faddp
or
sub
mov
dec
lea
out
divl
add
add
push
cmp
inc
in
or
or
mov
cld
jno
aad
cmp
les
fisubs
or
outsb
cwtl
mov
mov
xchg
rolb
xchg
jl
add
or
xchg
sbb
jno
sbb
dec
repnz
out
xchg
dec
jg
add
or
flds
fstpt
gs
adc
stos
sub
pop
repz
cltd
fistps
mov
sub
std
inc
mov
jecxz
cwtl
push
lock
loope
or
test
and
sahf
shl
inc
sbb
jae
ljmpw
scas
inc
push
insb
scas
inc
roll
test
hlt
es
aaa
xor
inc
sbb
xor
loopne
jg
push
pop
mov
jmp
call
hlt
and
negb
idivb
push
push
jl
mov
repnz
sub
adc
mov
mov
mov
ret
push
mov
adc
adc
js
daa
or
mov
fbstp
imul
mov
lock
mov
je
mov
and
dec
and
rclb
lahf
sbb
sbb
aam
sub
xchg
not
xor
rolb
adc
fwait
shrb
test
das
addl
out
mov
mov
pop
std
mov
sarb
cli
pop
loope
mov
orl
popa
loope
test
push
jp
or
inc
mov
mov
push
int
scas
in
cmp
lahf
test
rcrb
jns
dec
out
xlat
jne
xchg
and
loope
sub
iret
ret
ss
testb
hlt
pop
cmpsl
sub
faddl
mov
iret
xor
mov
mov
and
push
push
cmp
in
std
pop
xchg
jns
jl
int3
cmp
cmp
cli
and
jno
cli
push
jle
cld
test
mulb
add
adcb
xlat
in
adc
push
mov
call
fstpl
pop
inc
dec
or
mov
out
lret
testb
rolb
adc
leave
or
mov
popl
rcll
gs
outsb
cmp
adc
out
rol
or
fdivrs
xor
push
cltd
pop
ss
cmc
xchg
bound
std
pop
sub
or
xchg
jp
inc
and
imul
mov
dec
mov
push
mov
out
add
data16
inc
out
mov
cmpsl
fucomip
scas
jmp
lds
sub
ret
nop
jmp
dec
fidivrl
rep
cmp
push
aad
xor
sahf
mov
xchg
sbb
or
pop
add
sub
sbb
add
mov
adc
insb
rol
sbbl
adc
lcall
push
in
fs
xchg
icebp
cli
repnz
mov
scas
ljmp
ror
pop
cmp
ficomps
jns
mov
jae
ljmp
mov
and
ss
repnz
fistpl
cmp
test
mov
hlt
mov
adc
or
clc
xor
and
es
xor
mov
pop
mov
and
push
xchg
cmp
adc
stc
mov
lods
and
xchg
divl
mov
repz
inc
sbb
and
jb
jl
hlt
out
cmc
jb
lds
insl
fimull
mov
ret
add
inc
scas
movsl
mov
movsb
out
lock
loop
test
jne
push
dec
and
mov
lret
cli
mov
xchg
push
pop
and
mov
aas
push
inc
push
xor
jne
jl
push
inc
icebp
and
rorb
push
mov
add
dec
stos
mov
dec
cmovs
sbb
das
mov
inc
mov
out
and
jmp
ja
sti
pop
scas
cld
mov
dec
xor
jne
dec
jb
sbb
vpmadcsswd
cmp
or
mov
mov
clc
inc
jg
sbb
inc
ret
das
rclb
sbb
adc
aas
aaa
lods
lret
jp
lods
dec
lock
fdivl
push
inc
js
stc
lock
sbb
push
imul
and
out
in
pop
popf
into
pop
sbb
and
test
or
pop
xchg
out
cltd
ret
mov
negl
mov
dec
pop
ja
fstpt
add
dec
cwtl
jl
shll
pop
cmpsl
pop
aad
pushl
sub
lods
shll
sbb
and
daa
jg
shrl
push
push
icebp
cmp
loop
cmpl
push
test
cmp
out
ret
test
cmp
insb
lock
dec
mov
pop
jo
cmc
mov
xchg
mov
xchg
in
xor
push
push
test
add
sbb
dec
leave
dec
aam
push
clc
mov
pop
jl
and
pushf
test
outsl
xchg
or
xlat
sbb
xor
cmc
mov
sbb
cmp
pop
cmp
mov
nop
or
cltd
inc
bswap
mov
add
mov
loopne
xlat
push
sbb
test
and
movsl
jle
jmp
inc
jmp
cmp
jbe
loop
mov
aad
daa
movsb
fs
in
shrl
pop
inc
fscale
loop
mov
flds
jns
inc
jnp
push
pop
mov
popf
jno
or
orb
push
pop
adc
sahf
dec
inc
dec
out
xchg
test
lret
cld
mov
shrb
in
or
loope
or
stos
add
inc
adc
fdivrp
scas
adc
pop
repnz
dec
adc
push
jb
cs
dec
adc
xchg
dec
and
cmp
stos
sbb
mov
ds
sub
sbb
scas
sbb
lahf
cmp
test
cmp
popf
enter
lahf
inc
imul
lds
sub
cmp
sub
lods
xchg
mov
stos
aam
nop
cmpsl
push
scas
mov
fcompl
lcall
adc
jbe
and
xor
pop
sbb
rolb
push
fnsave
fstp
inc
aaa
daa
movsb
lret
fwait
lret
push
push
lahf
aam
decb
sub
test
xchg
cmc
cmp
sbb
test
mov
mov
dec
or
loope
fisubrs
out
rcll
paddw
inc
add
repnz
test
cmpsb
jne
je
pop
xor
cmp
xchg
aad
and
fs
daa
loop
in
xchg
mov
ljmp
and
loopne
or
inc
xchg
stc
aam
jl
jp
cmp
jnp
inc
cmp
sbb
cmp
into
mov
pop
or
mov
sub
les
adc
cmp
jle
scas
mov
stos
shlb
pop
addr16
sub
loope
push
lock
pop
jmp
nop
imul
mov
mov
int3
das
jns
fisubl
shll
mov
xchg
push
jmp
cmpl
fisubrs
aad
outsb
mov
sub
cld
push
pop
adc
aam
xchg
jbe
dec
mov
add
add
add
mov
subl
test
push
pop
ss
dec
fstpl
scas
stc
daa
aas
into
es
sbb
mov
icebp
fnstenv
adc
xchg
mov
out
scas
mov
outsl
xchg
sub
add
xchg
xchg
sbb
pop
mov
imul
mov
xchg
enter
mov
inc
jnp
adc
lock
imul
mov
outsb
inc
cmpsb
inc
pop
repz
movsl
shlb
clc
mov
inc
mov
cwtl
gs
ja
sbb
test
adc
test
lret
add
adc
popf
dec
xchg
xchg
dec
icebp
mov
mov
int3
sbbl
fdivs
mov
imul
xchg
fiaddl
or
xor
scas
gs
aam
adc
aam
inc
push
iret
daa
insb
xlat
push
aaa
push
fwait
or
cmp
jmp
pop
loop
sbb
jmp
das
out
mov
pop
push
xchg
pop
sti
add
mov
stos
xchg
inc
push
push
insl
aas
jae
shl
lods
lcall
or
xor
or
out
scas
out
in
push
imul
and
lock
jl
movsl
call
or
out
xchg
dec
push
mov
popf
in
stos
in
repnz
lret
out
mov
cmp
sub
mov
sti
adc
pop
push
pop
fsubrl
out
dec
push
jle
adc
lret
jl
les
out
xchg
movb
cld
ret
jmp
xchg
mov
inc
mov
shrb
and
ljmp
les
shll
je
mov
push
call
ret
ret
jbe
push
outsl
adc
aam
fildll
mov
push
mov
jb
test
mov
add
or
pop
jae
push
ret
stos
fisubl
jge
sbb
push
shl
lods
fbld
cmp
jno
add
mov
lahf
or
popa
add
push
fwait
cltd
xor
jns
fidivrs
out
inc
negb
push
sti
and
inc
insl
jecxz
cmp
popf
bswap
adcl
fistpll
add
mov
aam
das
and
jle
mov
into
ljmp
mov
lahf
jg
loope
lcall
dec
ucomiss
pop
xor
jmp
sbb
outsl
arpl
add
and
lret
mov
aad
das
jmp
rcll
push
ds
push
inc
push
push
xchg
sbb
sub
adc
fchs
ret
mov
nop
jbe
add
ficomps
fisttpl
movsl
sarl
out
pop
mov
sub
jno
dec
fwait
out
lock
xchg
pushf
jns
cmpsb
mov
test
lahf
mov
cld
in
push
push
xor
push
push
loopne
icebp
adc
sbb
xchg
movsb
in
pop
icebp
cmp
mov
jle
dec
pusha
cmp
cmpl
lret
sbb
xor
adc
loop
cmp
add
jecxz
rcl
pushf
xchg
in
and
inc
mov
sbb
mov
call
das
shl
adc
mov
enter
int
mov
cld
iret
enter
shlb
mov
dec
and
popa
in
cmp
clc
sbbb
mov
js
cmp
add
cmp
inc
or
inc
hlt
push
outsl
repz
repnz
sub
or
jle
push
mov
sahf
test
mov
arpl
inc
sbbb
outsb
mov
sahf
fwait
lods
lret
cwtl
inc
les
insl
imulb
sub
xor
sub
add
pop
in
ss
int
pcmpeqd
stos
js
nop
xor
jle
stos
shrb
dec
dec
and
mov
jle
jb
pushfw
push
sub
stos
into
popf
mov
adc
ret
cld
fldl
jae
and
loope
aaa
xor
enter
mov
pusha
dec
int
jp
outsb
lahf
int
push
sbb
ds
pop
ss
fwait
jge
xor
mov
inc
mov
cmc
jl
ficomps
adc
xor
shl
xchg
mov
pop
xlat
cwtl
ret
ss
inc
movsb
push
mov
imul
or
sbb
sbb
repnz
in
mov
out
sub
test
or
js
outsl
outsb
mov
mov
iret
jg
jo
outsb
push
or
hlt
mov
jecxz
mov
dec
inc
cs
lret
pusha
add
insb
mov
fmul
lahf
fnsave
pop
imul
lods
lock
or
imul
test
pop
pusha
mov
sti
rorb
pop
fwait
sub
fimull
adc
sbb
mov
stos
xor
dec
adc
pop
repz
pop
sbb
pop
ljmp
mov
pop
bound
cmpsb
dec
in
cmp
jno
adc
pop
imul
les
daa
fsubl
hlt
js
jecxz
into
sbb
shl
cmp
out
lret
pop
xchg
jo
aad
dec
scas
mov
int3
adcb
cmpsl
scas
lock
scas
or
lcall
lock
and
xlat
mov
push
pop
lds
and
mov
push
jmp
outsb
roll
sbb
mov
add
mov
add
mov
in
sbb
push
std
cmpsl
cwtl
je
or
shrl
repz
inc
mov
xchg
cmpsl
push
dec
out
lds
leave
inc
dec
test
jle
mov
mov
jmp
mov
ja
xor
jmp
testl
jbe
lea
data16
push
inc
dec
lods
in
inc
ficoms
mov
andb
fcoms
push
test
shrl
cmp
cmp
cmp
push
inc
inc
push
mov
pop
cmp
jne
int3
jg
gs
and
jp,pt
mov
gs
adc
jg
test
out
cwtl
int3
push
cmp
ficoms
stos
loope
inc
enter
xchg
fstpt
int3
lds
push
sbb
scas
cltd
stc
xchg
fsubr
rorl
jae
stos
fwait
sub
decb
mov
mov
cmp
bound
fcoml
stc
pop
cmp
cmp
mov
mov
aaa
in
lret
pop
ret
sar
mov
shll
mov
xchg
pop
jp
mov
bound
add
sub
mov
aaa
cld
cs
or
mov
lret
mov
call
movsl
out
or
dec
into
out
or
inc
sbbl
cmp
test
scas
stos
jmp
and
sahf
dec
and
stc
iret
test
clc
pop
add
out
fdivrs
test
subb
sbb
and
add
jmp
daa
pop
jbe
jmp
dec
push
cmp
jle
in
jb
mov
mov
leave
mov
jo
aas
stc
jp
inc
mov
mov
cmpsb
inc
addr16
cs
andb
fsubr
inc
mov
cmpsb
lods
or
test
shl
leave
xor
scas
lcall
adc
add
leave
int
loope
lea
movsl
xor
push
int3
dec
dec
repnz
sub
mov
fisttpl
pop
test
js
fxch
sub
in
add
fcompl
cmp
lret
es
inc
mov
sub
or
jno
scas
test
adc
stos
stc
scas
ret
sub
aad
mov
push
xor
mov
push
mov
sahf
arpl
push
pop
and
push
outsb
stc
lahf
movsb
sbb
mov
dec
pushf
nop
test
repz
lods
jbe
repz
jle
xchg
dec
movsl
xor
inc
lods
push
lahf
xlat
cmp
mov
lods
pop
fistps
mov
sti
nop
lds
and
xchg
enter
cli
mov
or
push
or
adc
popa
leave
cmp
mov
push
mov
dec
pop
jns
mov
pop
inc
aam
mov
and
push
repz
lods
cmp
jg
vpand
or
ja
inc
imul
mov
ficoml
enter
sti
in
jb
push
mov
aas
or
imul
int
subb
cmp
jp
mov
aaa
adc
and
xchg
mov
push
test
push
inc
adc
xchg
push
cmpsb
icebp
int
aaa
shrl
mov
push
into
mov
mov
lods
mov
divb
imul
sub
or
cmp
mull
mov
lret
mov
insl
pop
test
jb
imul
or
jge
adcb
or
mov
xor
daa
jo
cmp
int
ljmp
orl
jg
icebp
push
jo
dec
xor
push
popa
fdivl
or
popf
dec
mov
jl
xor
sbb
movsb
jmp
adc
sbb
fistpl
jle
je
es
ds
clc
notb
and
cmpb
or
das
icebp
sub
mov
inc
mov
in
nop
jle
outsl
ds
cmp
mov
mov
adc
lock
cmp
mov
push
ljmp
sub
sarb
or
push
or
in
scas
rol
repz
mov
int
ja
mov
shlb
aas
mov
dec
pop
mov
aas
popw
je
xchg
lcall
loopne
push
adc
mov
xor
push
mov
xor
lret
adc
add
addr16
mov
mov
jmp
jae
inc
daa
sub
cmp
mov
arpl
cmp
xlat
sbb
pop
shrl
sbb
pop
fwait
xor
jp
dec
mov
dec
fiaddl
adcb
arpl
xchg
push
mov
xchg
inc
or
movsb
repnz
xor
loope
es
out
out
and
xor
aad
in
jmp
xchg
mov
inc
add
enter
adc
push
repnz
mov
cltd
xchg
pop
mov
lods
in
dec
int
mov
add
std
push
shl
adc
sbb
pop
push
add
ds
out
push
xchg
xor
mov
push
mov
cmp
inc
ss
adc
and
add
add
stos
and
vmovdqu
add
inc
push
cld
adc
pusha
jmp
scas
inc
imul
push
dec
adc
sub
xor
lods
fsts
jmp
cltd
pop
cmp
dec
mov
add
xor
popa
popa
mov
aam
leave
xor
into
mov
je
sbb
cmpsb
sbb
cmc
cmp
mov
add
mov
int3
mov
add
repz
pop
aaa
and
inc
pushf
pushf
xlat
call
cmp
fdivrs
adc
dec
xchg
add
lods
dec
ja
adc
xor
outsb
xor
in
inc
stos
sahf
mov
mov
xchg
mov
jle
mov
icebp
lea
xor
mov
popf
mov
xor
mov
sbb
int3
mov
push
dec
or
mov
and
sbb
dec
aad
sbb
js
pop
xchg
test
pop
ja
mov
imul
xor
add
ljmp
je
leave
and
cmp
sub
jp
and
bnd
outsl
adc
mov
sbb
xor
sbb
or
aam
mov
scas
stc
aad
sti
xor
mov
imul
jl
push
aad
or
jae
in
pop
adc
sub
inc
mov
jecxz
pop
jb
or
mov
loop
shl
insb
out
aam
push
jnp
and
int3
adc
push
mov
faddp
inc
add
sub
scas
outsl
and
adc
jmp
enter
mov
dec
stc
gs
inc
xlat
cs
pop
xchg
mov
mov
clc
rcll
xor
pop
mov
push
rclb
dec
push
xorb
mov
scas
lret
sub
iret
and
mov
lods
out
flds
mov
add
enter
inc
imul
xchg
cmp
or
ret
enter
cmpsl
pop
xor
imul
push
cmc
jns
test
jecxz
xchg
mov
jne
adc
mov
lock
enter
out
mov
push
cmp
mov
push
dec
mov
push
sub
jmp
pop
and
sub
mov
pop
sub
sbb
aad
lcall
sbb
loope
jne
or
fsub
imul
scas
push
scas
fdivs
mov
je
xchg
loope
movsb
or
jle
sti
add
adcl
loopne
mov
mov
fdiv
cmp
xchg
sub
sub
adc
in
xlat
cmpsl
mov
int3
ja
out
out
outsb
mov
pop
es
fsubl
inc
sbb
stos
push
push
je
fnsave
test
jne
cli
popa
repz
dec
and
cli
ja
inc
sub
lock
or
int
std
das
repz
roll
scas
inc
pop
sbb
pop
das
outsb
fcomp
enter
cwtl
push
xlat
or
rcrl
inc
lret
jp
xorb
daa
cmp
pcmpeqd
jle
fildll
divl
push
loope
push
or
dec
iret
mov
lahf
fs
mov
adc
lods
aad
insb
mov
test
and
push
imul
add
imul
adc
xor
add
and
inc
jp
sarb
dec
jp
cs
rcr
pop
jns
lods
pushl
pop
sub
sub
and
mov
push
or
repz
std
mov
repz
xchg
mov
xor
pop
aas
aaa
out
lea
frstor
add
pop
adc
inc
testl
popf
dec
xchg
lret
cld
enter
jae
idivb
sbb
sub
es
loop
clc
roll
or
aam
sub
sub
mov
lret
fsubrl
lahf
loopne
mov
add
js
ret
pop
jns,pn
imul
sahf
jl
add
jl
jg
ljmp
mov
lods
mov
out
mov
cld
sub
test
xor
cli
cmp
push
loope
inc
imulb
dec
popa
hlt
in
pop
push
jge
fmul
dec
or
mov
push
inc
and
les
loop
fidivl
adc
jl
movsb
mov
mov
jp,pn
daa
daa
gs
xchg
push
adc
sti
lds
imulb
shlb
sahf
sub
push
pop
ljmp
push
sti
pop
ret
int
loopne
xchg
sub
je
lret
scas
ret
hlt
pop
and
stc
and
xor
cmpsb
jo
mov
xchg
das
fidivl
call
jb
mov
xor
mov
jne
lea
out
inc
out
test
push
cltd
daa
cmp
mov
je
mov
or
int
pop
cmc
mov
push
cmp
pop
cltd
stc
aas
scas
adc
jp
jmp
fbld
and
fxch
pop
sub
adc
lods
ret
sti
in
and
mov
cmp
inc
mov
aam
clc
adc
int3
mov
stc
ljmp
dec
sbb
aaa
repz
adc
jp
adc
and
and
imul
out
mov
arpl
gs
repnz
or
jo
sahf
les
xor
pavgb
push
cmpsb
int3
sti
add
mov
push
popa
mov
fiaddl
cmp
dec
sub
sub
xchg
dec
pop
xor
push
call
flds
cmpsb
rclb
addr16
into
jnp
fcoml
lds
scas
xchg
movsl
xchg
adcb
lret
mov
sarl
es
add
cs
dec
xchg
push
popa
lea
hlt
or
cmp
push
push
orl
fucomi
mov
mov
and
dec
jl
xchg
sub
xchg
jl
in
add
sub
lea
cmpsb
iret
sbb
sarb
fistpl
push
sub
aas
cld
mov
mov
sti
loop
loop
dec
pop
xchg
cs
jmp
adc
or
xchg
xchg
sbb
or
popl
shll
inc
or
fidivrl
xchg
cmp
icebp
xchg
pusha
and
sbbb
daa
add
and
clc
cmp
mov
mov
mov
lcall
into
movsb
push
xor
add
pop
mov
repz
xchg
mov
jb
mov
and
lds
mov
scas
xor
cmpsl
stos
int
ljmp
mov
or
lret
jle
xchg
push
xchg
mov
mov
insl
test
int3
hlt
les
push
push
outsl
iret
es
push
mov
dec
pop
pop
aas
xchg
lret
shl
jmp
sbb
add
movsb
inc
jp
mov
jl
mov
leave
sbb
mov
mov
bound
xorl
pop
inc
xor
pop
mov
std
rclb
gs
jle
repz
jbe
cmpsb
jmp
mov
push
pop
dec
lods
mov
xlat
inc
call
mov
pop
and
ja
stos
daa
pushf
rolb
dec
mov
aad
mov
add
sub
std
cmp
call
adc
add
orb
mov
jbe
std
sub
hlt
rcrl
loope
lea
movsl
ja
fcoml
add
int
inc
lcall
movsb
stc
mov
sbb
dec
scas
data16
add
mov
jle
loop
dec
ret
test
pop
push
lahf
out
jge
aas
mov
mov
xor
jmp
lock
cli
add
scas
shlb
dec
fldenv
cltd
xchg
inc
xor
or
out
pop
scas
fs
and
jp
and
mov
movsl
dec
xor
outsb
sti
ficoms
add
testb
and
jno
xchg
cmp
push
movl
faddl
leave
imul
cs
lock
add
jge
fdivr
das
mov
int
ds
int3
pushf
rorl
gs
in
cmc
lock
push
fstps
das
jnp
push
push
inc
iret
mov
pop
arpl
lcall
jg
jge
push
or
xchg
inc
push
out
mov
fcoms
cwtl
lahf
inc
stc
into
inc
int
cmp
push
or
adc
shlb
push
cmpsl
mov
pop
sahf
push
enter
les
repz
into
roll
pop
sub
frstor
mov
sub
fs
sub
push
incl
enter
lods
pop
and
test
scas
in
mov
mov
inc
outsb
sbb
xorl
mov
cwtl
je
lods
mov
mov
mov
and
jle
repz
adc
xchg
pop
mov
jecxz
stos
negl
push
sbb
mov
push
out
int3
in
int3
sbb
movsl
fldcw
push
cmpl
prefetch
out
rcl
andl
cmp
push
clc
iret
in
and
xchg
outsb
jns
sub
dec
rolb
aaa
pop
insb
out
jne
adc
add
test
int
mov
push
sbb
pushf
nop
fcomps
pop
lock
jno
rorl
pop
scas
hlt
cmpsl
inc
push
adc
xchg
add
adc
dec
sbb
cli
fwait
ljmp
and
mov
dec
adc
pushf
cmp
repnz
lods
mov
pop
push
xor
add
or
pop
fwait
mov
mov
push
aam
jle
xor
mov
dec
cmp
rcrb
dec
pop
mov
aam
pop
sbb
lea
ds
in
mov
dec
mov
fwait
cmpsb
xlat
xchg
int
dec
in
add
lea
in
dec
lret
fnsave
add
sahf
cltd
add
in
xchg
das
mov
sahf
test
inc
je
sub
loop
push
arpl
xchg
ret
jae
je
xlat
mov
pop
push
lret
loopne
sahf
cmp
pop
jns
mov
push
rcl
mov
aam
inc
sbb
mov
sub
sub
jns
icebp
imul
mov
rcll
fld
cmp
pop
arpl
nop
push
dec
fnclex
js
les
inc
cmp
rol
mov
pop
inc
adc
cmc
and
jmp
je
clc
and
hlt
divl
cld
cwtl
sti
ss
movsl
xlat
insb
push
iret
int
or
push
xchg
cmp
xchg
fidivrl
push
lret
jns
and
mov
pusha
subl
mov
xor
in
adc
std
test
pushf
mov
sub
sbb
ret
mov
jg
in
and
enter
push
xchg
or
cli
push
mov
push
mov
mov
insb
je
hlt
repnz
adc
and
cmp
stos
call
adc
rorb
mov
or
gs
lds
aad
mov
es
xchg
mov
lcall
dec
icebp
movhps
dec
xchg
aas
test
xchg
nop
lds
cmc
mov
or
aaa
mov
jo
push
dec
sbb
outsl
in
push
push
or
loop
lea
cmpsl
fisubrl
int3
adc
push
sbb
and
popf
dec
int
jp
mov
hlt
cmp
ret
xchg
and
mov
jmp
adc
adc
mov
push
or
sub
fbstp
icebp
xor
adc
mov
icebp
push
adc
jmp
pop
lock
sbb
or
jge
mov
add
rcl
movsb
xchg
pop
insb
adc
imul
jge
add
jb
or
shl
int3
mov
movsl
lods
gs
movsl
lods
test
adc
cld
add
jb
adc
lods
pop
mov
push
xor
jne
clc
inc
aaa
lock
into
sbb
outsl
rclb
inc
or
lcall
sbb
adc
xchg
xchg
std
mov
dec
xchg
decl
push
cmp
mov
leave
ds
push
push
aaa
jge
xor
mov
std
imul
cld
pmaxsw
imul
xchg
mov
cld
lds
imul
inc
movsl
pop
mov
loope
rorl
repnz
jnp
lea
addr16
out
cmpsb
xor
cmp
nop
mov
xor
lds
mov
inc
sub
scas
mull
or
mov
pop
sbb
in
repnz
push
push
repnz
push
xchg
adc
aas
cmp
sbb
outsb
mov
nop
inc
mov
mov
and
pop
sub
mov
call
or
mov
sub
in
mov
dec
int3
inc
xchg
adc
add
cmp
cmpsb
stos
add
xchg
rorb
inc
cs
jnp
mov
mov
or
movsb
and
jmp
aaa
or
mov
inc
mov
and
mov
mov
xchg
xchg
sbb
inc
push
inc
dec
jns
in
cli
negl
ss
repz
xchg
xor
leave
cld
aam
out
inc
push
repz
jo
sbb
cmp
lock
or
in
pop
rcr
pop
mov
adc
fst
mov
test
fadds
aam
out
aam
xchg
lods
inc
loope
loope
cmpsl
data16
add
push
arpl
test
mov
aam
inc
cmpsb
shrb
orl
or
imul
movsb
jnp
popf
inc
push
les
mov
jo
lea
call
dec
xor
and
fdivrp
in
mov
hlt
pop
pushf
movl
mov
lods
cmp
je
xchg
outsl
out
mov
mov
movsl
test
imul
xchg
out
ret
jnp
mov
jle
sbb
mov
add
mov
leave
out
lds
push
ret
in
xchg
dec
add
fidivrs
into
mov
ds
daa
nop
jl
enter
mov
xor
in
and
xor
lahf
mov
mov
sbb
clc
or
adc
mov
jno
cld
into
pop
ret
outsb
pop
fbld
sub
int3
lods
mov
adc
mov
sahf
mov
lcall
dec
jo
push
xchg
popf
adc
enter
in
stc
sub
push
add
pop
xchg
cwtl
ret
push
lods
imul
arpl
xor
xor
test
imull
in
mov
test
or
push
out
add
enter
cmp
sbbb
ret
mov
push
jmp
add
jmp
cmp
push
mov
divl
sub
dec
push
aaa
adc
sbb
movsb
in
aas
and
pop
cmp
std
pushf
and
push
inc
or
jg
jge
xorb
pop
mov
lds
add
in
addr16
loop
inc
pop
and
leave
adc
pop
mov
ljmp
or
gs
inc
pop
pop
cmc
jp
add
xchg
ja
iret
xor
adc
push
pop
jecxz
mov
fidivs
add
lea
mov
or
test
pop
xchg
outsb
in
cwtl
pop
sub
sbb
push
xchg
pop
xchg
push
nop
ret
xchg
setle
movsb
sub
jp
ds
sub
out
jg
mov
les
mov
maskmovq
les
push
in
mov
lcall
in
repnz
inc
hlt
sub
rcrl
enter
lock
ds
jecxz
ret
and
sub
add
int3
js
mov
int
adc
pop
into
mov
clc
int
fdivl
pop
jo
out
pop
inc
ret
cwtl
popa
sub
inc
pop
mov
setae
ficoml
mov
dec
inc
mov
xchg
push
mov
mov
fildll
repz
call
ds
or
mov
int
rcll
movsb
add
push
mov
xchg
daa
jne
xchg
mov
add
lret
leave
jne
adc
push
add
inc
jp
dec
cmp
int
pop
add
and
lcall
idivl
inc
shlb
cmp
xor
sbb
pop
pop
hlt
scas
add
pop
push
cld
mov
outsl
stc
cmp
addr16
cwtl
mov
mov
pop
pop
sbb
xchg
mov
jecxz
dec
cltd
inc
out
mov
fimuls
pop
aam
mov
xchg
jle
cltd
jo
imul
les
cmc
cmp
push
call
lahf
test
nop
xchg
dec
push
lods
data16
in
or
mov
sub
nop
xchg
nop
push
sahf
in
jg
xchg
push
pop
cmp
fsubrp
push
adc
cmpsb
movsl
lds
pop
or
mov
jae
add
nop
cmp
and
loope
cmpsb
cmp
sbb
cmp
mov
fnstcw
xchg
cmp
jbe
repnz
idiv
pop
add
inc
mov
nop
or
push
nop
les
mov
adc
test
lds
or
mov
add
sub
inc
push
stos
jecxz
dec
sub
push
rcrl
xchg
pop
test
leave
xchg
lahf
push
stc
add
je
push
jle
loopne
std
xchg
sub
xchg
cld
jp
bound
jmp
in
inc
sbb
mov
xchg
ret
dec
jl
cmp
mov
push
mov
bound
aas
dec
xorb
pop
cmp
ljmp
jp
sbb
adc
cmp
repnz
int
cmp
out
fstpl
pop
popa
xchg
xchg
jo
ret
sub
jno
js
lcall
pop
lret
xchg
shrl
cmp
movsl
pop
enter
xor
and
hlt
arpl
lcall
push
pushf
mov
or
add
pusha
add
std
int3
cmp
xchg
xor
test
push
mov
jo
cmp
aad
fwait
cmp
mov
cs
in
adc
gs
add
add
sub
jmp
scas
rol
hlt
push
addl
insl
sbb
std
and
xchg
fdivs
mov
outsb
adc
xchg
mov
push
pop
sbb
push
jo
fs
jp
inc
iret
jg
pop
or
aaa
or
add
inc
out
sbb
push
inc
js
jae
and
sbb
jne
pop
pop
add
nop
sub
mov
ret
rolb
iret
pop
cmp
pop
sub
sbb
stc
sbb
fldl
and
and
mov
loopne
fdivp
sahf
fstpt
jo
push
pusha
push
aam
mov
aad
xchg
enter
push
xor
repnz
pop
shl
sbb
xchg
xor
sbb
lahf
notb
inc
mull
test
movsb
out
test
inc
sub
pushf
push
xchg
repz
cmpsb
mov
jns
fiaddl
pop
pop
push
mov
and
push
and
dec
fsubp
shlb
stc
subb
test
sub
or
sbb
sub
stos
test
aad
pop
rolb
scas
movsb
test
pop
movsb
js
shrb
int3
lgs
jle
push
ljmp
xor
xor
and
cmp
inc
mov
shll
ficoms
xchg
push
imul
inc
shll
push
mov
jno
add
mov
push
shlb
pop
jno
sbb
push
lock
aad
jp
lock
pop
mov
out
pop
rorl
aad
daa
ret
lea
pop
addr16
ret
mov
out
xor
lods
in
arpl
jnp
lahf
fisubs
push
lods
jge
cmc
sbb
sub
inc
or
out
mov
push
cmpsb
push
xchg
fmulp
repnz
add
dec
dec
dec
and
fistpll
fwait
cltd
xchg
cltd
mov
lods
jne
jle
mov
clc
inc
sbb
loop
jo
jl
lods
pop
stc
insb
movsl
xchg
in
jne
cmp
and
pop
bound
cmpsb
cmp
leave
dec
or
mov
sub
cli
add
jns
out
clc
mov
int3
or
test
sub
pop
push
cmp
push
pop
rcrb
cmp
inc
std
inc
scas
pop
inc
mov
mov
mov
pop
shll
push
mov
and
inc
add
out
cld
mov
call
cmpl
mov
pop
adc
mov
icebp
insl
jns
push
pop
std
cmc
cld
cmp
popf
aad
push
xor
inc
mov
jo
xor
add
addr16
ja
mov
int
aas
push
ss
push
lock
into
xchg
mov
leave
loop
mov
cwtl
daa
xor
or
idiv
movsb
lds
addr16
cli
add
idiv
outsb
int3
xor
test
fimuls
clc
pop
jbe
imul
fdivrl
scas
sub
lock
mov
addr16
jb
gs
int
stc
push
mov
sahf
or
mov
popa
mov
add
mov
fists
inc
inc
sahf
sbb
sbb
mov
jns
aad
call
inc
ljmp
test
inc
add
xor
mov
sbb
xor
and
jmp
mov
cmp
shlw
stc
pop
inc
add
movl
dec
push
cmc
mov
rclb
adc
sub
sti
sub
or
sti
cmp
push
fcoms
ds
test
sub
jecxz
loope
out
pop
pusha
movsb
sbb
fisubrl
add
or
pop
mov
lds
xor
dec
imul
sub
dec
ja
shlb
jle
xchg
push
xchg
xor
mov
dec
popf
and
jnp
push
xchg
mov
jecxz
jecxz
xchg
adc
int3
mov
jp
es
push
cltd
mov
xchg
jle
or
sub
sub
cltd
sub
daa
add
repnz
push
pushf
sbb
iret
iret
jp
adc
sbb
call
mov
pop
sub
add
push
cltd
inc
xchg
push
adc
add
loope
lock
fcompl
lock
xlat
adc
js
and
and
jmp
andb
aaa
lcall
outsb
cmpsl
push
mov
mov
sti
mov
jle
pop
xlat
mov
ror
ds
jmp
mov
stos
imul
jg
out
int
inc
lahf
mov
sbbb
mov
jae
push
es
out
inc
xor
shufps
fsubrl
shlb
imul
scas
jecxz
adc
xor
dec
icebp
lock
fiadds
or
in
js
insb
add
cmc
xchg
das
xor
stc
and
rolb
sub
mov
push
push
xor
mov
inc
inc
aad
shll
outsb
jge
xor
mov
out
or
inc
jns
popf
pop
xchg
stos
mov
inc
xor
sub
lcall
insl
gs
mov
xchg
mov
das
lret
repnz
dec
iret
insb
mov
imull
lods
out
hlt
sbb
inc
sahf
setle
lock
dec
jp
sti
cmp
push
adc
lcall
mov
pop
ss
shlb
stos
push
addr16
sti
mov
inc
inc
out
mov
clc
cwtl
mov
inc
sbb
mov
mov
ret
cmpsb
jnp
incb
inc
sub
push
out
jo
int
cmp
add
push
imul
cmpl
stos
jnp
sahf
xchg
mov
shll
insb
push
cmpsb
inc
inc
xor
cmp
mov
sub
adc
push
sbb
imul
dec
jae
xlat
test
fwait
loope
mov
pop
movl
dec
dec
push
adc
ja
inc
sbb
adc
les
cmc
stc
test
pop
sbb
adc
insb
enter
or
xchg
inc
mov
add
movsb
cmp
stos
out
jle
lahf
insb
add
add
pop
hlt
sbb
inc
je
push
insl
dec
mov
or
push
mov
shll
enter
cmp
mov
pop
or
hlt
aas
xor
sub
stc
int3
push
cmpsl
mov
mov
mov
and
and
sbb
dec
sti
lock
pop
xor
fisttpl
inc
inc
aad
loop
loop
mov
enter
paddd
aas
jl
cltd
sub
mov
testb
sub
pop
mov
ror
cmp
sbb
movsl
lods
xor
add
sbb
adc
std
pop
jb
lcall
add
jp
cltd
jb
xchg
test
dec
out
bound
iret
out
movsl
aam
push
bnd
xchg
jnp
mov
xchg
popa
call
mov
mov
pop
mov
mov
mov
xor
test
imul
ret
shl
aad
test
lods
jnp
xor
out
repz
scas
adc
jae
fcmove
fimull
insb
push
mov
outsl
enter
loop
lcall
popf
mov
cmp
or
call
push
and
ljmp
bound
hlt
sarl
mov
pop
adc
pushl
mov
inc
push
stos
icebp
inc
or
add
mov
mov
sub
and
and
mov
movsb
adcl
sub
mov
in
push
movsl
cmp
nop
int3
scas
sub
stc
add
bound
adc
inc
nop
mov
jg
test
into
ljmp
cmpsl
push
fwait
pop
ja
shrd
lahf
pop
in
mov
jnp
in
out
insb
and
nop
push
jnp
sub
cmc
cwtl
mov
sub
pop
inc
fsin
incl
test
popa
outsl
dec
push
cs
push
stos
cld
xor
out
sub
sbb
arpl
scas
add
mov
inc
adc
inc
or
jl
xchg
scas
iret
jbe
cli
mov
and
jmp
mov
pop
pop
cmp
mov
out
add
adc
leave
and
and
mov
subb
mov
pushf
lds
sub
push
aaa
stos
outsb
pop
cs
and
and
jnp
jmp
mov
add
enter
cmpsb
ds
cmpsb
sbb
inc
or
shl
pop
aam
aas
jmp
rcr
push
jl,pn
xchg
inc
mov
pop
mov
push
pop
jno
and
test
pop
test
sub
xor
xchg
adc
and
jb
inc
jbe
arpl
clc
insb
daa
rep
aad
cmp
sub
mov
push
lret
int3
xchg
insb
dec
cmp
cmpsb
icebp
mov
cmp
adc
mov
ljmp
stc
out
pop
jge
add
ret
mov
test
xchg
cmc
or
and
xor
mov
adc
mov
xchg
push
xchg
hlt
shl
jno
int3
bound
sub
div
aad
lcall
scas
add
mov
add
xor
jmp
xchg
jle
fwait
adc
cs
movsl
push
jae
mov
ds
or
pop
test
xchg
sub
pop
push
xlat
xchg
mov
sub
jmp
movsl
sub
shrl
sub
pop
in
rclb
sbb
ret
xchg
fwait
lcall
aaa
test
sub
dec
cli
js
out
add
mov
dec
or
lret
sub
in
sub
adc
mov
push
scas
dec
xor
cmc
adc
repz
jmp
ljmp
mov
sbb
hlt
in
dec
and
xor
fisttps
sub
adc
adc
inc
push
js
xor
adc
and
filds
fwait
movsl
fsubrp
out
ljmp
mov
cmovne
jbe
pop
or
sti
int3
repnz
stos
mov
jg
pop
stos
fmuls
out
in
popf
lret
fdivl
aad
mov
push
push
mov
push
cld
fisttpl
jmp
aaa
dec
and
loope
nop
stc
popa
outsb
gs
sahf
sti
mov
jnp
pop
dec
inc
inc
iret
pop
fistpll
pop
test
mov
icebp
mov
lods
adc
rclb
inc
sbb
std
stos
enter
js
mov
inc
cltd
jg
das
insb
inc
loope
lds
and
aam
outsb
addl
pop
push
mov
xchg
scas
adc
jecxz
icebp
dec
add
std
push
mov
mov
je
int
add
lods
add
call
and
insb
movsl
and
jle
lods
push
subl
mulb
mov
rorl
fwait
lods
jg
cmp
dec
lea
jae
stc
loop
dec
sub
add
out
std
push
je
ljmp
xchg
adc
lcall
and
xlat
stc
xor
mov
adc
stc
das
arpl
fisttpll
mov
sbb
xor
movsl
out
xor
inc
xchg
or
into
mov
mov
testb
jmp
push
mov
aas
xchg
jge
cmpsl
jp
popf
mov
sahf
outsb
ret
aaa
rclb
bound
xlat
inc
xchg
add
cmpl
mov
fiaddl
pop
int
or
ret
xlat
pop
das
popl
and
not
push
test
push
adc
je
movsb
pop
adc
xor
outsb
adc
inc
inc
cmp
popf
push
xchg
gs
or
xchg
inc
stos
sub
adc
int3
movsb
cmp
xchg
mov
bnd
mov
notb
pop
xor
dec
xchg
into
dec
sbb
roll
lods
ss
jno
jp
imul
add
xchg
lret
test
call
icebp
cmpsl
mov
jae
in
mov
lcall
cmp
adc
fnstsw
ret
in
xor
pop
icebp
loope
ja
xchg
or
mov
fsubs
inc
xchg
mov
jno
cwtl
mov
test
and
sub
outsl
fstpt
fdivrp
push
ds
leave
pusha
popa
stos
sub
addb
xor
push
rclb
inc
sub
leave
clc
or
mov
pop
aam
or
lret
into
lahf
push
out
mov
mov
push
mov
das
rolb
dec
sbb
loopne
test
add
inc
add
mov
loop
xor
mov
shlb
adc
loop
mov
dec
mov
and
pop
jae
mov
add
or
outsb
out
orl
mov
adc
inc
pop
pop
lods
std
cmpsl
bound
cmpsl
push
add
jbe
lock
pop
leave
in
popf
add
in
adc
sbb
xor
lods
ss
inc
or
mov
cli
dec
popf
pusha
jmp
and
out
dec
sti
fistl
addr16
outsl
mov
sar
fyl2xp1
mov
jecxz
push
incb
xor
jo
dec
add
int
and
in
jmp
sub
jp
pop
out
and
addr16
add
mov
push
jp
sti
fnstsw
fildl
ds
test
aam
cmp
add
lahf
loope
sbb
jne
jo
mov
sbb
xor
or
mov
pop
cmp
sbbb
into
lret
mov
icebp
fidivrs
fnstenv
mov
ljmp
std
es
cmp
out
and
cmp
adc
cltd
cmp
push
dec
int3
pmulhuw
int3
test
fimull
and
jns
insl
push
icebp
clc
out
jg
sbbl
inc
cmp
sbb
scas
pop
test
aad
inc
stos
mov
sbb
scas
lret
inc
push
adc
pop
xor
xor
adc
aaa
je
add
out
pop
out
pop
sub
or
jp
lret
mov
test
and
cmp
cs
push
movsb
mov
iret
mov
push
mov
shll
push
xor
lds
std
ja
add
maxps
daa
dec
rcl
insl
and
pop
pop
lahf
push
or
xor
and
popa
test
jp
cmp
xchg
mov
pop
inc
outsl
mov
mov
scas
cmpsl
fld
mov
cmp
xchg
repnz
pop
es
push
lret
movsb
dec
jo
faddl
jp
sbbl
push
push
push
push
cmp
jne
movsl
dec
fstpt
xchg
cmp
test
scas
jle
movsb
or
sahf
fdivr
jae
mov
cli
jae
sub
cmp
mov
cmpsl
sarl
cld
rcrb
sbb
stc
lahf
fldenvs
call
adc
mov
add
fs
loop
daa
add
shr
pop
ret
and
inc
push
inc
adc
adc
adc
add
movsb
jg
mov
adcl
pop
jle
xor
into
out
lea
cli
or
lret
xor
negb
xor
sub
aad
or
mov
js
cld
stos
test
jns
add
test
dec
aaa
cmp
sahf
je
mov
mov
or
out
xchg
insb
lods
dec
fisubs
and
leave
sbb
push
ret
rdmsr
cmpsl
pop
push
and
rorb
add
xchg
mov
out
xchg
sbb
add
pop
add
ljmp
adc
and
xor
out
jne
pop
xchg
dec
dec
ret
cld
fs
stc
arpl
jp
shr
mov
jg
xor
movsb
call
shlb
dec
lret
cli
lods
cmpb
fsubp
ljmp
inc
mov
jp
fdivrs
mov
pop
cmp
jbe
push
mov
add
or
jnp
mov
push
mov
dec
add
xor
xchg
cmp
cmpsl
and
or
jge
je
enter
jle
dec
ret
pop
je
mov
cmp
cli
popa
xchg
int3
hlt
pop
int3
inc
sbb
jb
xchg
jb
mov
fidivrs
or
jle
or
mov
fists
ds
adc
sbb
out
hlt
jb
xorw
sbb
xchg
adc
std
jp
arpl
dec
insl
and
imul
test
xchg
dec
mov
sbb
and
mov
push
inc
sbb
jnp
push
lock
test
mov
ja
in
stc
jb
out
jb
mov
cwtl
mov
mov
aas
add
adc
in
push
sbb
and
dec
pop
nop
pop
mov
loope
jno
inc
out
fistpll
or
jge
ss
bound
fs
mov
in
sub
inc
push
sbb
xchg
pop
adc
add
loop
ja
adc
insb
pop
dec
jg
mov
cmc
mov
call
out
inc
or
mov
in
and
andl
pop
jmp
xor
test
push
leave
xchg
pop
repnz
neg
push
mov
iret
int3
movsb
sbb
das
std
test
ja
pop
dec
imul
jp
or
mov
sub
cmp
mov
cwtl
fists
rcr
in
pop
mov
insl
popa
sub
out
sbb
and
push
cmp
repz
fbstp
dec
es
push
arpl
sahf
mov
scas
rcll
jle
cs
cmp
imul
mov
sub
outsb
pop
add
adc
iret
cmpsb
popf
jp
in
shlb
sbb
cwtl
int3
xor
dec
jae
mov
movsb
cld
adc
ss
add
ds
out
cmc
cltd
faddl
sub
cli
jb
add
jns
ss
sarl
inc
loop
add
xor
cwtl
push
pop
fmuls
xor
shll
leave
xchg
sbb
je
test
sbb
xchg
rcrb
or
xchg
add
lret
mov
sub
mov
push
sub
int
lock
pop
adc
aaa
xor
pop
gs
inc
push
cmp
lds
cmpl
xchg
pop
insl
sbb
push
adc
sti
adc
idivb
xchg
aaa
fimull
loope
lods
js
jbe
cld
xchg
xchg
std
clc
dec
jns
cmc
hlt
dec
data16
lea
cmp
xlat
cmpl
sbb
mov
xor
lcall
fsubrl
dec
addr16
dec
inc
sub
movsl
lea
fs
data16
and
xor
in
lods
std
add
into
mov
cmpsb
in
cmp
mov
rcr
jge
sti
pop
xor
repnz
push
pop
jmp
enter
pop
addb
sbb
mov
add
jl
jne
pop
out
test
jae
lock
xchg
xor
fisubl
int3
lcall
mov
nop
xorl
hlt
or
adc
int3
dec
mov
aas
pop
xorl
fstps
out
movsl
bound
jmp
adc
fcmovb
mov
xor
sbb
stos
inc
test
repz
jb
rcrb
xchg
and
push
fldl
fnstcw
dec
stos
jg
das
jne
aad
bound
rorl
sub
adc
loope
iret
fs
sub
sbb
pop
ret
mov
ret
ss
mov
adc
cwtl
lret
fld
dec
ljmp
or
mov
aam
xchg
inc
ret
push
fyl2xp1
vmovd
mov
jmp
jle
push
in
sahf
sti
inc
scas
sub
add
inc
push
imulb
xchg
or
icebp
add
push
out
imul
mov
push
pop
into
sub
and
test
pop
mov
push
jb
lods
pop
das
and
jge
cs
sub
addr16
or
fmuls
push
aaa
popl
dec
mov
out
add
sbb
push
fisttpl
gs
out
loope
aad
fsubrl
dec
mov
adc
mov
sti
lea
roll
dec
xor
test
insl
sub
push
cld
push
sub
or
fnstsw
rcrl
in
cmpsb
test
popa
fstpt
jns
adc
and
xchg
in
sub
jg
xor
shrl
cli
sub
jbe
scas
xor
stos
and
jae
inc
shrl
in
ret
andl
mov
or
leave
mov
lahf
ficoms
imul
stos
push
in
into
ds
jb
adc
dec
imulb
cmpb
leave
aaa
jp
jno
jl
pop
xchg
sub
dec
mov
ljmp
cld
lret
sub
aam
adc
mov
out
and
push
test
push
cmp
adc
xchg
rorb
imul
movsb
lods
xor
scas
dec
or
mov
xchg
stos
aas
movsl
scas
lods
notl
fcmovne
inc
ja
into
lock
add
mov
adc
imul
popa
lcall
xor
mov
mov
and
push
xor
and
lret
pop
mov
jmp
adc
in
mov
pusha
mov
mov
fs
test
lods
in
jle
test
aas
pop
push
dec
sbb
shlb
jae
cmpsb
and
mov
inc
or
int
mov
xchg
xchg
adc
add
std
dec
or
aad
mov
pop
jp
inc
xor
stos
mov
imul
stos
pusha
in
pop
push
mov
jo
repz
xor
mov
lcall
push
cmc
movsb
loop
push
dec
dec
and
mov
mov
xchg
ljmp
dec
sbb
sub
cwtl
ret
lret
lods
cmp
notl
adc
rdmsr
add
and
inc
push
add
shrl
ds
push
pop
push
adc
dec
pop
mov
iret
inc
int
add
lea
cltd
into
mov
jno
test
push
mov
mov
jecxz
test
fprem1
xchg
cmp
cmp
mov
sbb
pusha
jle
jns
dec
sti
or
mov
leave
inc
and
icebp
add
into
insl
add
sub
dec
push
call
mov
xlat
cmp
pop
in
cs
cld
outsb
pop
cmp
push
xchg
shll
int3
repnz
lock
cmp
mulb
cmp
setbe
popl
sub
nop
lock
sub
out
shrl
xor
mov
jge
insl
aad
ss
ljmp
jne
push
test
imull
iret
xor
xor
loop
pop
sub
jno
pop
sub
popa
add
lock
jnp
sbb
pushf
gs
fsubs
int3
loop
cmc
imul
cld
mov
rcll
into
test
sbb
sbb
pop
lret
arpl
mov
sub
in
adc
ret
push
es
dec
mov
fs
push
lcall
fnstenvs
nop
jne
int
dec
es
push
imull
mov
jbe
out
mov
sbb
dec
jp
lock
dec
call
ss
movsb
cmp
ret
in
int3
jns
nop
std
lahf
sbb
add
test
je
mov
pop
xchg
cli
xchg
lds
arpl
andb
test
loope
test
shl
mov
js
xchg
add
mov
sbb
cwtl
add
sub
xchg
add
cmp
out
pop
lea
xor
and
jbe
dec
insb
test
adc
imul
scas
mov
leave
jo
cli
pusha
into
add
lock
cwtl
sbb
xor
fwait
cld
inc
clc
scas
push
in
xor
add
popa
repnz
test
mov
xor
lar
push
lahf
repnz
cmc
push
inc
sahf
pop
add
pop
cltd
lahf
inc
popa
add
outsl
pop
xorb
cmp
dec
pop
cld
mov
movsl
cltd
cmc
pop
inc
leave
fiadds
jbe
jbe
pop
push
jl
pop
gs
mov
fists
jnp
out
mov
inc
xchg
std
loop
enter
cmp
cmc
movsl
test
lock
sti
ljmp
and
shll
imul
cmpsb
adc
dec
daa
repz
mov
jbe
fwait
push
aaa
aam
out
clc
shl
lods
sub
fists
fwait
scas
push
shlb
mov
jp
dec
mov
or
mov
xlat
adc
dec
int
xchg
adc
daa
mov
lock
fdivs
mov
cmp
sub
and
lea
daa
pop
mov
pusha
adc
push
or
into
xlat
int
mov
jo
or
das
repz
add
insb
pop
mov
and
adc
jo
sti
ds
movsl
sub
testl
adc
ja
div
cld
jl
xor
pop
cmp
push
int3
cld
cmp
mov
push
das
jp
hlt
jne
xchg
rcr
cmp
inc
add
jecxz
hlt
aaa
inc
out
pop
mov
test
ror
nop
shl
aas
in
xlat
sahf
push
fstps
in
fisttpl
sbb
mov
mov
xor
mov
es
pusha
pop
loop
and
push
mov
notl
mov
mov
clc
outsl
mov
jl
mov
fstl
sub
mov
ljmp
mov
sbbl
xor
xlat
daa
std
out
mov
adc
add
loopne
or
bound
inc
stos
mov
ror
paddsw
fsubrl
mov
lahf
leave
imul
lods
adc
mov
sub
cltd
mov
xorl
or
movsl
push
mov
outsb
sub
jbe
jp
adc
pop
repz
jns
inc
sbb
mov
jno
xchg
lret
xchg
add
andb
out
mov
ret
jbe,pt
fidivrl
test
and
pop
sub
push
adc
xor
pop
loop
add
pop
movsb
mov
loop
sub
jp
pop
xchg
push
les
mulb
loop
shll
xlat
inc
ss
in
fidivrs
mov
ret
call
mov
inc
or
rcr
and
movsl
out
sub
fldt
cmpsl
in
mov
mov
mov
fcmovne
lahf
inc
jge
shl
or
aad
jnp
adc
xlat
jl
xchg
pushf
mov
ljmp
jne
cmp
push
sbb
test
mov
jb
sub
mov
push
xor
jbe
ljmp
cltd
pushf
push
cld
lret
stos
xor
mov
inc
stos
movsl
add
sbb
testb
sti
lret
fs
lret
push
or
xor
leave
sti
fdivrp
mov
and
push
rclb
ja
mov
jo
or
loopne
mov
lods
mov
lcall
lahf
rcrb
shll
xor
shll
mov
pop
jl
imul
lss
or
outsl
mov
jns
adc
imulb
stos
push
fdivs
fcoml
jne
aad
mov
lock
push
int3
dec
jmp
cmp
jnp
popf
pop
mov
adc
fidivl
sub
cmpsl
mov
rcrl
push
mov
out
jns
mov
push
test
xchg
adc
sahf
fsubrl
cmp
jno
add
sbb
push
push
lret
pop
lds
scas
mov
rcll
loope
aam
push
out
mov
in
aam
ljmp
inc
dec
xor
das
jae
shr
jmp
push
sub
ds
sub
push
sbb
data16
ds
lods
loope
rolb
jns
or
rcrl
xor
outsb
addr16
out
rcrl
ds
insb
subb
loop
rcrl
fwait
jb
js
adc
fdecstp
jmp
shlb
lods
jecxz
imul
jg
or
push
cli
test
loop
lahf
sbb
inc
xchg
daa
mov
loopne
mov
mov
push
loop
push
rcl
mov
jl
int3
xor
sahf
shr
mov
inc
and
mov
das
insb
les
sbb
pop
pop
fsubl
inc
mov
fs
inc
push
gs
adc
out
mov
mov
call
and
sti
mov
nop
jnp
mov
js
xor
or
add
push
pop
jbe
aam
mov
fistpl
lods
insl
adc
jp
sub
int
or
mov
mov
int3
push
outsl
sarb
add
sbb
clc
lods
cld
int3
in
inc
inc
rcl
pop
pop
enter
jg
std
dec
mov
ret
sahf
push
test
xor
or
push
insl
pusha
shl
xchg
movsl
sbb
imul
test
sbb
mov
imul
cmp
xor
cmp
xadd
addb
inc
iret
mov
scas
mov
sub
cmp
mov
int3
cs
test
add
out
fisubs
inc
sbb
popf
imul
in
mov
cmpb
mov
mov
push
lea
in
or
jae
test
repnz
lds
dec
lods
or
mov
xorl
sbb
aad
outsb
orl
int3
mov
fimull
xor
sbb
cmp
and
cmpsl
push
and
lcall
adc
in
cs
sbb
xchg
add
out
cmpsb
pop
and
xor
adc
mov
pop
push
cmpsb
xchg
xor
out
mov
mov
in
or
push
push
and
les
adc
inc
repz
mov
push
mov
outsl
int
shll
or
lds
and
xlat
loope
pop
dec
arpl
fucompp
sarb
insb
jno
das
dec
xchg
daa
ja
mov
mov
xor
lea
movswl
lret
push
mov
adc
js
stos
jae
add
lock
push
mov
mov
sub
loopne
rcl
fdivp
shlb
xchg
and
adc
mov
dec
pop
mov
mov
call
aam
add
jb
loopne
in
scas
std
push
test
test
fildll
and
mov
pusha
or
xor
rclb
fistl
outsb
shrl
test
xorl
cmp
and
or
push
add
scas
xor
jbe
cmpsl
popa
mov
enter
xchg
divb
push
std
jbe
sahf
and
ret
dec
scas
and
jg
popa
sub
enter
loope
cmp
ja
shrb
cwtl
std
repnz
xlat
sti
js
out
jb
int
int3
mov
shr
or
fsubrl
stos
mov
cmp
inc
loope
or
lahf
pop
cli
push
dec
popa
cmp
push
push
mov
fbld
xor
orl
mov
or
mov
scas
mov
jbe
icebp
sub
pop
loopne
rorb
cmp
int3
xchg
sbb
push
mov
jne
xor
push
mov
flds
mov
cld
sti
dec
nop
sbb
dec
xlat
sbb
add
out
xchg
jbe
sub
jmp
insb
clc
push
lds
test
test
xor
mov
jne
mov
push
adcb
xchg
fnstcw
push
lcall
stc
stos
mov
or
or
jo
cmpb
ljmp
pusha
shrb
sti
adc
in
push
adc
out
jb
cmp
out
jb
jg
jae
cmp
out
xchg
pop
mov
lcall
sbb
jl
jo
sahf
jb
faddp
cmp
gs
pop
add
or
test
add
lcall
jns
jl
shrb
inc
mov
cmp
jbe
sub
testw
arpl
divl
push
pop
push
or
lock
pop
jae
notl
pop
popa
mov
mov
outsb
pop
subl
jle
add
jne
sub
inc
cltd
cmp
jno
and
aas
jg
imulb
imul
scas
jne
pusha
in
pusha
pushf
and
or
lahf
mov
add
sbb
aas
lock
lahf
out
stos
pop
xlat
xchg
mov
mov
dec
aam
aad
sbb
inc
jp
stc
imul
out
sub
sbb
jecxz
loope
les
jge
jg
jo
xor
in
cwtl
adc
inc
jno
add
fmull
jo
xchg
faddp
cld
mov
in
mov
inc
cmp
xor
outsb
and
add
jae
pop
in
dec
arpl
lea
stos
cli
stos
nop
sarb
test
cmp
pop
repnz
sbb
movsw
cmp
dec
adc
movsl
movsb
inc
ret
mov
aaa
orb
dec
imul
ja
mov
sub
mov
jle
cmp
pop
shlb
cmpsb
jnp
mov
mov
jbe
sti
inc
in
mov
add
data16
out
imul
cmp
enter
dec
sahf
mov
jb
adc
or
dec
jl
inc
or
or
dec
sbb
xor
adc
mov
insb
dec
push
shlb
in
push
pop
xchg
push
dec
andb
call
fmuls
mov
pop
repnz
jmp
sarb
add
popf
into
insb
mov
adc
push
cs
jbe
outsb
insl
push
cmp
imul
test
int3
mov
jbe
repz
mov
fwait
or
imul
or
es
incl
lret
cmp
mov
hlt
push
push
push
sub
adcb
xchg
or
add
push
in
and
clc
sub
in
jge
ds
add
xchg
mov
xchg
movsb
lahf
stos
imul
pop
xchg
sbb
pop
cmp
xchg
push
test
cld
mov
repz
ret
cli
movsb
in
rol
jae
pusha
push
xchg
mov
nop
pop
mov
fwait
icebp
test
pop
mov
aam
push
mov
or
cmp
add
fdecstp
cmp
je
gs
aad
pop
mov
cmc
sahf
sub
jge
sub
or
cltd
sbb
loope
in
or
mov
nop
test
pop
rcr
in
popf
inc
testl
clc
aad
jnp
push
pop
jge
add
imul
jle
push
and
mov
push
jmp
sbb
sahf
mov
or
ja
or
cltd
dec
jl
xchg
mov
daa
jae
mov
scas
cltd
pop
mov
lret
jg
out
sub
out
cmpsl
mov
sub
sub
gs
lret
dec
cmp
push
pop
cmp
pop
imul
insb
les
int3
cli
and
fsubrs
jmp
adc
lahf
dec
and
cmp
xchg
rorl
dec
or
pop
or
data16
push
and
push
not
lods
xor
push
sti
ss
mov
jb
pushf
inc
and
fsubr
fs
es
sub
test
push
ror
pop
xchg
sbb
sbb
or
sub
mov
call
pop
stc
sbb
out
inc
push
mov
movsb
push
or
je
mov
fcoml
cmp
movsl
jl
inc
sbb
lods
ss
adc
lret
and
pop
push
push
and
jl
sub
xor
xchg
or
lcall
cmp
and
loope
or
clc
shll
mov
add
adc
cmpsl
test
out
pop
adc
cld
les
or
into
repnz
ss
xlat
call
mul
pop
orb
mov
fadds
cs
test
arpl
repnz
or
and
leave
push
cmc
cmpsb
jo
mov
sti
cmp
lods
movsl
jmp
xlat
jecxz
cmpsl
xchg
inc
dec
pop
push
pop
jne
imul
cmp
inc
sub
push
cltd
cmpl
and
cli
pop
leave
dec
fistl
ljmp
je
hlt
jg
add
push
jo
mov
push
dec
inc
sbb
inc
cmp
jo
push
fbld
push
lock
out
aad
pop
in
sub
adc
out
int3
ss
mov
insb
cld
jg
jb
xchg
lods
cmp
popa
pop
jecxz
lods
pop
push
mov
cs
lret
addl
mov
dec
aad
loope
addr16
rolb
ds
adc
inc
inc
cld
ss
mov
scas
xchg
sub
ja
pop
cmpsb
push
imul
inc
xor
out
push
test
mov
aas
pop
push
pop
mov
shlb
test
push
fadd
push
pop
or
mov
ror
inc
pop
cmp
mov
adc
aad
jg
sub
xchg
sti
or
mov
mov
mov
add
pop
or
sbb
xchg
pop
mov
and
pop
ficompl
lods
int
sbb
jb
dec
test
sti
into
or
out
adc
cltd
cwtl
mov
jno
inc
sub
ja
xchg
dec
sbb
xchg
push
inc
sar
and
mov
or
pop
jo
mov
jno
ss
xlat
pop
and
bound
dec
push
testl
mov
std
mov
cmc
xchg
rorb
popf
cmpsl
add
pop
int3
pop
mov
cmpsl
in
rcl
mull
pop
lret
fwait
sbb
jle
xor
aaa
inc
mov
and
inc
pusha
test
dec
mov
push
arpl
sub
lret
mov
int3
int3
push
divb
sub
inc
push
jle
mov
je
sub
fs
enter
xchg
call
rorl
lds
jecxz
rcrb
pop
mov
sbb
stos
xor
ret
fsubrs
leave
arpl
in
add
pop
mov
inc
mov
push
pop
mov
xchg
adcl
cwtl
mov
inc
js
in
test
bound
movsb
test
sub
ret
sub
pop
pop
stos
sbb
int
jecxz
inc
dec
adc
cmp
add
lcall
in
int3
or
cmp
mov
mov
sub
fimull
arpl
outsl
pop
pop
mov
sbb
mov
out
movb
add
je
int3
cmc
cmp
dec
xchg
or
mov
xchg
jge
mov
imul
push
std
mov
cmc
fistpll
lret
int3
repz
in
mov
stc
xlat
ljmp
cmpsb
inc
imul
mov
xor
pop
std
stc
sahf
adc
dec
xchg
sarb
sub
sbb
push
in
aas
nop
push
and
outsb
pop
push
pushf
ret
test
dec
mov
xor
fsubs
or
loop
cmpl
inc
out
daa
iret
jnp
mov
adc
leave
sbb
sbb
andl
inc
xor
dec
ja
int
mov
xchg
and
jns
gs
xor
sub
data16
jge
dec
push
adc
dec
or
lahf
pop
stos
add
mov
pushf
push
xor
pop
fdivl
jp
jb
mov
mov
test
lcall
cmp
add
fwait
inc
fcmovu
test
test
mov
dec
add
push
jge
in
jmp
push
cmpsb
loope
jbe
imul
fs
rclb
adc
push
mov
movsl
and
aas
xchg
stos
movsb
sbb
and
mov
out
cs
test
rcll
sub
xlat
mov
mov
xchg
das
les
cld
mov
inc
lret
mov
cmp
in
scas
jecxz
mov
add
xor
out
jae
sahf
enter
or
or
bound
loope
pop
xchg
dec
pushf
lcall
test
divb
mov
cmp
in
in
mov
cld
push
lcall
or
and
ljmp
fdivs
ss
int
mov
sbb
mov
push
push
scas
push
pushf
int
mov
cs
int
jnp
lahf
jg
aad
jle
sbb
test
pop
push
jnp
aas
stc
sub
ljmp
imul
mov
push
mov
in
push
cld
ds
roll
add
popf
cmpsl
push
add
inc
inc
cmpsl
pop
lock
mov
or
pop
int3
and
pop
mov
dec
sar
xor
dec
sahf
sbb
xchg
cmp
and
sub
inc
out
xlat
xchg
ret
dec
inc
enter
pop
push
adc
popa
push
outsl
loop
sbb
dec
or
iret
hlt
jl
dec
push
jge
adc
shlb
scas
ds
fidivrs
imul
repnz
mov
xchg
fdivs
je
outsl
mov
jbe
push
dec
cwtl
aam
inc
mov
mov
push
add
and
addr16
in
es
fisubrl
xor
ss
sub
inc
sub
dec
mov
rep
out
jle
mov
loope
stos
dec
jg
lret
xlat
loope
loop,pt
pop
test
inc
jnp
xchg
fnsave
pop
call
mov
popf
popf
mov
out
fisttps
in
adc
stos
jge
fdivl
add
jns
stos
push
and
sub
push
imul
sub
dec
lds
loopne
clc
sub
sahf
adc
rcrl
stos
mov
stc
aas
addr16
push
cmpsb
imul
or
inc
push
mov
mov
sbb
xchg
popa
movsb
mov
repz
xchg
mov
int3
js
shrb
out
add
movb
dec
xchg
scas
sbb
aaa
xor
mov
or
add
jl
push
add
pusha
jns
test
daa
test
jnp
xchg
jecxz
lret
ret
mov
dec
dec
mov
les
enter
sub
das
rolb
hlt
js
mov
xlat
dec
xchg
and
jns
cmp
movsb
ja
insl
or
cmp
imul
jg
frstor
leave
and
loopne
pop
imul
push
sub
fstpt
inc
call
mov
ret
inc
push
insl
xlat
add
stos
add
out
push
lock
xor
jnp
push
ljmp
cs
dec
lds
push
cmp
out
jmp
adc
mov
fsubrl
mov
fsts
outsl
arpl
and
test
or
pop
stos
movl
popl
stc
cmc
jmp
je
lock
sub
jmp
inc
sub
mov
inc
dec
scas
mov
adc
imul
das
and
push
sub
inc
cmp
imull
xor
mov
adc
nop
inc
repnz
mov
or
jmp
repnz
mov
fs
lcall
dec
xlat
cmpsl
lea
rcrl
inc
lret
es
repz
push
bound
xor
stos
cltd
cmp
pop
imul
and
mov
in
dec
jnp
icebp
lock
dec
inc
sub
sub
clc
jmp
in
mov
movsl
test
jae
int
lods
push
mov
push
mov
mov
or
push
ficoms
or
push
jmp
sbb
add
cmpsl
in
add
iret
pop
jo
fnsave
pop
testb
push
adc
adc
cmc
pop
imul
jne
xchg
call
and
inc
clc
daa
cwtl
pop
xchg
aad
fstps
xorb
inc
je
sub
cmp
mov
loopne
call
leave
popf
cmpsl
xor
loopne
inc
jno
inc
inc
mov
cmpsb
xchg
dec
lods
sbb
sbbb
pop
std
sbb
shll
and
stos
call
into
aad
xor
mov
xchg
mov
test
ljmp
test
pop
adcl
pop
dec
popa
dec
mov
sbb
psrlw
pop
out
cmp
sbb
sub
adc
push
lds
push
outsl
sbb
adc
aam
lret
insb
cmp
or
cmp
jp
add
push
xchg
dec
ret
add
das
lret
movsb
or
popf
fcmovbe
fistps
ss
cs
cltd
dec
mov
jecxz
jle
push
mov
jecxz
insl
jmp
dec
sbb
outsl
jecxz
inc
sub
mov
ljmp
cmp
mov
shrb
jae
xchg
cs
adc
or
lods
mov
inc
and
pusha
aaa
xchg
hlt
jbe
dec
mov
inc
in
mov
push
das
les
push
lret
pop
cwtl
sub
in
mov
cli
sbb
xor
int3
push
bound
arpl
adc
orb
inc
mov
mov
fidivs
mov
cs
inc
aad
data16
push
xchg
in
fs
xchg
mov
enter
sahf
inc
test
push
rolb
mov
mov
mov
cmp
xor
cmp
sbb
mov
add
cli
xchg
jo
inc
frstor
pop
mov
fs
jge
lock
cs
lea
jae
push
push
les
sahf
jp
and
call
out
daa
leave
adc
dec
movsl
add
cwtl
cmp
scas
iret
pop
fsubs
sti
mov
arpl
scas
fildl
shl
mov
cmp
xchg
int3
mov
add
ret
push
mov
add
pop
adc
inc
cmp
adc
mov
mov
add
out
push
inc
vpsrld
pushf
dec
push
mov
fisubl
mov
stc
jo
mov
sbb
push
jno
ss
mov
mov
and
dec
dec
fwait
mov
scas
adc
cmc
adc
out
filds
jmp
mov
ret
cmpsl
xor
push
xlat
outsl
push
inc
out
adc
or
lds
sub
shr
lds
inc
mul
rorl
addl
call
xchg
lcall
cld
sbbl
adc
rorb
jo
mov
pushl
nop
push
fimuls
xor
mov
mov
popa
mov
cli
test
xor
fadd
popf
popf
mov
stc
ljmp
cli
add
imul
adc
xchg
pop
imul
fisttpll
or
cmp
mov
cwtl
mov
or
and
imulb
mov
fs
adc
pop
nop
or
cmp
sbb
or
push
jbe
idivb
inc
sbb
and
leave
lods
les
lcall
cld
rcl
inc
dec
push
mov
loope
push
ljmp
adc
adc
repz
pop
or
xchg
pop
cmc
aaa
lea
mov
add
lret
mov
lret
roll
push
add
mov
pop
fnstsw
pusha
inc
cmp
arpl
mov
bound
add
je
insl
push
jl
js
pusha
push
and
dec
sbb
test
ficomps
mov
jne
sub
lods
les
clc
inc
fsubrp
mov
lret
call
out
popa
add
stos
ljmp
test
shll
cmpsb
mov
pop
nop
pop
aaa
pop
or
test
out
je
ret
mov
xor
mov
imul
jl
push
inc
repz
mov
jae
ds
dec
insb
pusha
pop
fnstenv
mov
rcrl
jle
inc
ss
and
cmpsl
insl
mov
mov
gs
aaa
or
mov
push
cwtl
insl
pop
mov
or
in
aam
push
mov
xor
sbb
xchg
cmp
dec
cwtl
js
inc
fstpt
xchg
dec
mov
movsl
mov
sbb
pop
loopne
dec
mov
add
leave
pop
dec
cmc
ret
repz
aad
inc
dec
int3
cmp
hlt
cmc
call
fdivrp
xchg
cmpb
sbb
scas
pushf
push
rorb
xchg
loopne
mov
fucomip
testl
cmp
and
cmp
in
bound
inc
in
adc
push
xchg
sar
aas
arpl
and
push
mov
mov
add
popf
pop
insb
scas
dec
push
xchg
mov
mov
scas
sbb
roll
lds
sbb
out
sbb
push
sub
xchg
or
cld
cs
int3
aad
jne
xor
add
jne
and
repz
popf
cli
mov
test
repz
int3
scas
pop
cwtl
out
rcrl
mov
inc
or
cli
call
gs
sub
pop
cmpsb
lods
push
push
xlat
dec
push
add
cmpsl
mov
cmpsl
push
pusha
cli
nop
insl
xlat
sub
sbb
and
add
mov
std
jae
adc
sub
adc
push
jno
inc
divb
gs
push
jmp
pop
jnp
inc
jecxz
add
xchg
loope
mov
lods
sbb
cmp
je
dec
jp
sub
sub
and
push
enter
ror
hlt
das
push
adc
test
in
sub
inc
es
dec
dec
push
inc
fwait
insl
lds
jmp
dec
or
pushf
pop
jae
push
inc
push
add
out
enter
jle
mov
xchg
dec
inc
push
nop
aaa
jle
xchg
and
sub
cmp
add
out
loopne
xor
in
jbe
inc
or
shll
pop
rcr
adc
xchg
jb
adc
sti
dec
add
or
outsl
repnz
mov
hlt
fbstp
cmpsl
gs
inc
pop
cltd
sub
xorl
int3
fisubrl
repz
repnz
pop
xor
mov
jns
scas
shll
jb
cmp
push
mov
dec
mov
test
into
mov
nop
ja
add
sahf
xchg
scas
inc
xchg
cmp
add
jecxz
cmp
movsb
stc
push
pusha
adc
mov
outsl
imul
fwait
and
cld
xchg
inc
cmpsb
or
mov
mov
mov
mov
mov
sar
jmp
pop
jg
mov
dec
aaa
mov
mov
add
add
ds
add
arpl
sbb
shlb
loope
sub
sbb
mov
data16
popf
adc
cmpsl
inc
pop
jae
or
mov
mov
mov
xchg
xor
inc
push
ret
adc
sbb
sbb
subb
out
popa
pop
in
sub
insb
jb
add
sub
scas
pop
popf
scas
jnp
out
mov
jle
xor
sub
sub
jne
and
into
dec
call
jo
push
pop
pop
mov
sar
jae
pop
mov
inc
push
into
in
test
or
xchg
rcll
data16
loope
lods
ret
movsb
mov
or
mov
mov
pop
mov
sti
xlat
popa
fsubl
push
cmpsl
jg
lods
sub
xchg
mov
rol
mov
out
stos
jnp
lret
jb
hlt
into
ss
repnz
jno
sarl
sbb
sbb
sbbl
sbb
inc
rclb
scas
scas
sbbb
stos
cmp
dec
jg
or
inc
adc
inc
int
and
je
dec
jl
push
push
mov
cmpsl
je
or
jl
lods
push
inc
pop
stos
mov
add
xor
ds
or
sbbb
imul
xor
insl
dec
in
adc
push
es
and
jne
lea
testb
inc
aad
insb
stos
lds
test
mov
pop
das
hlt
mov
push
dec
icebp
fnstsw
popf
and
leave
sbb
or
pop
xor
icebp
push
jo
mov
cmp
sbb
mov
or
sbb
add
decb
jns
sbb
dec
jo
push
dec
adc
call
int3
movsb
adc
fcmovnb
call
sbb
xchg
xor
movsb
fdivl
sub
mov
daa
and
lea
js
pop
stc
popf
inc
sbb
test
xchg
push
cld
js
sahf
imul
add
mov
and
mov
inc
jno
in
fisttpl
push
xchg
or
mov
pop
add
push
or
pop
sub
stc
xchg
inc
aas
or
mov
mov
dec
xchg
mov
add
test
add
into
int
mov
add
push
movsl
and
ffree
int
repnz
jg
and
shll
jl
sbb
sub
repnz
js
icebp
js
xor
cmp
sahf
or
mov
les
push
lds
roll
pop
scas
inc
push
loop
roll
ja
jl
in
scas
jno
aad
in
push
mov
sub
xchg
call
inc
push
fmul
or
push
jne
das
mov
stos
push
xsaveopt
mov
sahf
pop
flds
rcll
mov
jbe
xchg
push
pop
dec
fistps
arpl
and
lods
insb
orb
inc
popf
fmull
inc
aas
pushf
cwtl
jae
push
xchg
mov
xchg
jae
outsb
enter
int
lock
adc
test
mov
sub
mov
imul
sub
inc
inc
push
pop
cmp
and
dec
mov
push
xor
fisubl
dec
mov
lock
sub
popa
jnp
test
xor
push
mov
dec
fisttpll
mov
leave
mov
lret
xchg
icebp
sbb
dec
sarb
jl
sub
fsts
mov
push
int
loop
jmp
mov
aam
inc
cmpsb
ja
jp
test
sub
xor
shll
in
xchg
aad
dec
movsl
ja
lret
aas
movsb
out
sbb
iret
repnz
mov
push
add
pop
mov
in
repnz
test
lret
fstpt
ja
mov
popa
add
jl
mov
dec
sub
xor
sub
cs
push
aad
mov
je
xchg
cmpsl
push
iret
fiadds
sbb
adc
lds
jmp
rolb
scas
sarb
push
sbb
fwait
mov
jmp
cld
jmp
imul
inc
push
or
mov
bound
dec
aad
mov
ja
and
fcompl
call
inc
and
fcomip
inc
mov
and
shll
jns
nop
test
into
insb
add
dec
shrb
add
test
cmc
int
inc
push
loope
push
mov
out
lret
push
inc
test
jecxz
jecxz
mov
pop
test
int3
xor
jbe
mov
inc
lret
in
mov
loop
call
xor
in
mov
push
add
cmp
shl
mov
push
iret
loope
cmc
sti
rcr
mov
jo
jae
fbld
out
arpl
adc
jo
insl
mov
nop
loope
and
pop
lret
cmp
test
rclb
push
pop
mov
mov
lock
js
dec
and
add
mov
test
mov
cwtl
pop
andb
jae
inc
lock
adc
ret
mov
imul
cmp
les
test
mov
adc
pop
test
inc
mov
xchg
out
jmp
jg
push
mov
fistl
dec
and
mov
test
mov
dec
orb
popf
mov
pop
les
jge
test
fs
jp
mov
mov
out
insl
ja
int3
fdivrp
mov
xchg
xor
cmp
ljmp
mov
rcrl
mov
jne
mov
lods
xchg
addr16
scas
push
repnz
clc
inc
push
and
and
mov
jp
fwait
out
cmp
mov
loope
push
idiv
mov
pop
sub
pusha
sti
fnsave
dec
mov
cs
nop
cmpsl
fadds
jb
jecxz
inc
dec
cmc
stos
loope
nop
jge
cli
cmc
shll
dec
inc
push
jo
out
dec
mov
mov
fmuls
sub
add
xor
ljmp
xchg
scas
in
sub
mov
xchg
dec
jl
ret
push
cmp
push
dec
jne
dec
popf
push
adc
fcomps
adc
mov
cmp
fs
inc
push
jg
icebp
push
sbb
add
std
adc
popa
aad
sbb
lret
sbb
mov
int3
int3
fdivr
pop
loop
adc
mov
sbb
fsubs
or
mov
in
lods
xor
adc
dec
mov
cmpsl
xchg
test
xlat
inc
xchg
xor
dec
dec
cmp
call
cwtl
jo
out
ret
pop
add
fmull
dec
testl
test
sub
push
lcall
dec
insb
test
push
mov
call
test
sahf
sbb
cwtl
mov
and
fiaddl
int
add
daa
lea
jo
or
lea
aad
hlt
mov
dec
sub
mov
ret
mov
hlt
in
repz
rclb
or
nop
lods
inc
mov
sub
lret
into
mov
ja
xchg
adc
push
pop
mov
or
jb
push
push
shll
xchg
and
xor
fs
inc
int3
cmp
or
push
iret
arpl
sbbb
mov
mov
sub
push
ds
xor
dec
dec
loope
or
aas
push
sahf
sub
xor
jb
and
aaa
jmp
add
test
lahf
and
sub
loopne
out
sub
in
ja
pusha
mov
and
addr16
repz
lcall
mov
pop
fcomps
dec
push
lea
jne
xchg
daa
fdivrl
stos
aad
cmp
test
add
daa
mov
das
cmp
mov
das
sbb
arpl
add
insl
lods
fcmovbe
paddusw
cmpsb
cld
inc
xchg
pop
loop
dec
hlt
pop
mov
cwtl
bnd
adc
add
ret
int
call
push
mov
sbb
pop
into
aam
xor
pop
adc
jg
push
and
rolb
inc
rep
sbb
sbb
inc
sbb
add
das
addr16
jnp
sbb
jbe
inc
in
insl
or
ficompl
push
add
stos
xor
push
arpl
xchg
mov
xchg
sub
pop
mov
repz
leave
movsl
sbb
stos
mov
push
xlat
pop
ja
stos
mov
cmp
mov
inc
and
cwtl
or
push
in
cmc
dec
sbb
sub
shll
adc
iret
mov
divl
jbe
adc
adc
cld
adcl
add
pop
sub
pop
push
mov
cld
push
xchg
inc
fisubrs
lcall
mov
push
jno
hlt
loopne
test
mov
mov
inc
push
jb
adc
icebp
push
mov
inc
cmpsb
push
aaa
dec
ficoms
call
jmp
xor
jp
pop
loop
push
shlb
scas
xchg
sbb
loope
inc
xchg
mov
iret
das
push
ja
mov
aam
les
daa
mov
xlat
ds
test
mov
push
js
hlt
adc
daa
push
push
add
adc
pop
pop
jne
das
out
sub
ds
fildll
rcll
out
sub
ljmp
add
mov
cmp
sub
into
aad
nop
imul
and
inc
dec
test
cmp
and
dec
push
inc
sahf
inc
mov
xor
cmp
mov
lcall
and
ror
mov
inc
dec
test
add
cld
lods
cmpb
dec
adc
sub
mov
loop
xchg
in
adc
jnp
and
jo
inc
xchg
jmp
pop
sahf
cmpsl
xor
out
enter
mov
mov
or
dec
push
jno
xchg
popl
in
cmp
jns
push
mov
adc
xchg
lret
push
repz
jnp
inc
mov
stos
mov
movsl
sbb
gs
mov
sbb
mov
je
jl
cmp
jbe
mov
mov
mov
xchg
cmp
fldenv
lods
push
jmp
mov
jae
inc
scas
sbb
insl
outsl
xchg
mov
sub
jo
loope
xlat
lcall
push
sbb
ret
imul
call
scas
inc
push
pop
cmpsl
and
ja
or
push
xor
jbe
adc
aam
xchg
cmp
mov
pop
sub
push
pop
fcmovnb
call
jo
jecxz
fsub
and
mov
jge
ret
cmpsl
cmpsl
push
push
push
mov
xlat
inc
xchg
out
or
pop
daa
jno
addr16
pop
into
enter
ftst
xchg
lds
push
ss
out
ja
movsl
pop
gs
fisttpl
mov
cmpsl
sbb
pop
sub
adc
push
movsl
iret
adc
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
