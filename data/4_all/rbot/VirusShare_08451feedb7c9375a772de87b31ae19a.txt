xor
mov
rorb
mov
lods
sub
inc
push
sbb
aaa
repnz
jne
mov
bound
inc
les
div
adc
scas
inc
xor
test
dec
insb
iret
cmp
push
push
mov
dec
shll
or
cmp
xchg
jp
in
jle
rolb
sbb
push
movsb
sbbl
mov
mov
pop
mov
cmc
movsb
int
push
sub
sbb
inc
stc
jecxz
mov
nop
repnz
ljmp
xchg
sub
cmp
xorl
sbb
xchg
xor
sarb
sub
dec
daa
xchg
lcall
loope
adc
xorl
xlat
pusha
and
jecxz
xor
sub
pop
frstor
into
enter
clc
xchg
out
popa
adc
dec
jl
mov
and
int
jge
or
testb
addr16
mov
loope
add
stos
or
push
push
lock
push
in
lea
sbb
pusha
push
xchg
rorl
push
sahf
xlat
arpl
pop
push
jns
ja
les
cld
or
inc
mov
in
push
add
jbe
test
mov
sbb
loop
out
insl
lret
and
jns
sub
cmpsb
mov
iret
pop
lds
sub
iret
cltd
out
mov
xchg
sbb
mov
and
hlt
or
int3
cmp
subb
pop
js
out
repz
out
pop
adc
test
lock
dec
add
mov
pop
or
mov
mov
and
cmpb
sub
or
dec
aaa
pusha
add
imul
pop
pop
sub
aam
bound
mov
dec
in
lods
les
sbb
xor
mov
mov
xlat
ja
out
jge
add
cltd
ljmp
sub
fcom
repz
jbe
in
data16
adcl
sbb
mov
push
cli
push
jne
xchg
cmp
push
das
lods
out
add
cmp
out
push
out
push
xchg
jle
and
in
lods
sbb
cs
sub
mov
iret
adc
popfw
popa
test
out
std
icebp
jns
adc
adc
or
pop
jecxz
mov
adc
or
sub
inc
push
push
sub
mov
in
mov
gs
xor
out
jnp
mov
dec
aaa
fisttps
scas
mov
js
push
pushf
cmp
sbb
test
inc
push
inc
ror
cmpsb
mov
push
adc
cld
je
leave
pusha
jge
fnstenv
sub
ffree
cwtl
push
ret
adc
in
or
das
sbb
xchg
clc
pop
scas
lods
mov
xlat
and
push
and
cmp
clc
imulb
dec
and
jns
pop
das
mov
stos
enter
int
push
pop
pop
nop
into
and
movsb
sub
aas
adcb
cli
dec
ret
add
xchg
pop
adc
lock
imul
mov
jne
in
cmc
daa
cmp
test
pop
mov
or
mov
cmpsb
test
outsl
idivl
mov
jne
adc
rcrl
push
mov
leave
sahf
lods
lods
sbb
pop
lcall
push
test
mov
pop
jp
scas
mov
leave
adc
push
push
push
pop
cld
movsb
rorl
call
xor
leave
jmp
fld
aas
popf
sbb
test
xchg
xor
and
xlat
lcall
mov
xchg
or
ficoml
ss
imul
repz
dec
leave
adc
movsb
fimuls
push
xor
push
sub
xchg
mov
loopne
sbb
mov
and
mov
xchg
push
mov
sub
pop
adc
pop
cmc
cmpsl
stos
mov
xchg
cmpsl
xchg
or
les
push
xor
out
sub
mov
imul
xchg
mov
jne
rcr
insb
cmpl
xor
data16
ds
jns
dec
in
insb
adc
jecxz
pop
es
das
xchg
movsb
jns
loopne
or
pop
ficoms
push
dec
lcallw
jle
test
daa
fwait
nop
popf
sbbl
ja
jmp
int
jbe
pop
rorb
xor
xorl
and
inc
mov
aad
mov
incl
jle
add
shufps
scas
addr16
mov
lret
outsl
imul
or
out
and
add
iret
dec
ljmp
jne
jae
in
movsl
addr16
cli
in
xchg
scas
pop
bound
jle
jns
cld
add
sub
shufps
lahf
xacquire
nop
or
jnp
xchg
or
lea
mov
cmp
cmp
pusha
xor
fwait
mov
fdivr
aam
cwtl
or
mov
mov
in
icebp
jecxz
mov
fimull
jbe
and
aad
iret
pop
inc
sub
inc
add
je
cmp
adc
inc
gs
rcrl
push
mov
lea
sbb
and
out
mov
shll
fidivl
dec
sbb
int3
adc
mov
call
add
add
std
pop
ljmp
dec
stc
push
ds
jp
imul
ret
push
insl
mov
sub
repnz
xor
gs
cwtl
sbb
notl
jns
outsl
jne
and
popl
pop
in
and
dec
adc
add
xchg
mov
pusha
shl
mov
scas
gs
repz
xor
sbb
int
mov
cmpsb
cmp
nop
sbb
rcr
jno
mov
movsb
jmp
and
shr
fucomp
mov
pop
jo
cmp
ret
add
xchg
int3
repz
lea
stos
sub
imul
scas
jmp
orl
sub
and
and
add
push
sub
xchg
lret
in
cs
fldt
stos
aad
mov
inc
sbb
dec
pushf
out
lret
sbb
test
push
in
movsb
mov
or
aas
mov
cltd
mov
sti
push
cli
xchg
sti
push
and
mov
cmp
and
and
and
sbbb
imul
ret
mov
xor
jbe,pn
icebp
je
inc
xor
mov
and
push
sub
rcl
dec
gs
sub
adc
sbb
aam
imul
mov
stc
push
imul
shlb
je
push
out
std
sub
sar
gs
mov
push
push
xor
and
outsb
imul
addl
add
add
mov
sub
mov
sbb
cmp
push
enter
scas
aas
out
push
arpl
icebp
in
out
test
mov
mov
pop
pop
mov
cmp
adcl
sub
shl
push
mov
xor
aam
inc
icebp
scas
insb
cmc
cmpsb
lahf
fidivrs
pop
push
inc
hlt
adc
sub
sub
add
cs
xchg
pop
xor
xchg
shrl
iret
loopne
and
cld
loop
jg
inc
daa
xchg
ffree
cmp
mov
cli
sub
popa
jp
je
fbld
loope
or
push
cmovs
inc
cmpb
in
test
dec
mov
dec
push
jbe
aas
inc
lock
out
sub
ja
enter
jno
subl
add
in
cmpl
mov
ljmp
mov
sti
mov
push
mov
icebp
fisubrl
mov
inc
add
js
aaa
mov
das
test
or
mov
adc
jns
adcb
in
cltd
std
push
das
std
in
dec
xchg
inc
stos
ret
pop
inc
pop
mov
jne
mov
negl
mov
std
fisubl
adc
push
mov
jl
and
call
cmc
mov
adc
or
shll
push
popf
xor
js
sahf
mov
jmp
jg
out
pushf
fidivrl
lods
add
cmc
notb
or
ljmp
lods
imul
push
or
pop
sbb
in
sub
out
adc
cmp
fs
mov
xchg
fbld
leave
sarb
xor
scas
mov
pop
fwait
stc
push
dec
add
lret
sub
and
add
lret
rolb
xor
adc
or
add
mov
and
lods
fidivrs
cmpsb
cmp
and
jmp
push
mov
xor
and
and
cltd
pop
std
jle
daa
aad
cld
and
stc
das
push
pop
je
test
mov
sahf
mov
mov
ret
mov
xchg
std
lret
jb
fildl
cmp
jmp
xor
cmp
ljmp
xchg
scas
mov
shl
cmpb
cmp
ficoml
xchg
daa
push
sbb
mov
mov
mov
jae
push
ss
mov
imul
cmp
sub
mov
les
cmp
xchg
scas
and
test
push
or
add
clc
push
lods
pushf
jge
pop
data16
adc
sbb
xor
repnz
fstl
and
hlt
mov
dec
add
lea
dec
sub
mov
inc
test
sti
lock
add
inc
xchg
add
fldl
adc
and
jo
ds
jnp
fsts
lds
cmp
hlt
adcb
fdivl
lods
xor
add
dec
jmp
mov
adc
cs
xor
dec
mov
pop
icebp
in
jns
mov
mov
dec
out
mov
inc
arpl
loopne
mov
inc
ret
roll
imul
cwtl
and
sub
enter
ret
cmc
add
or
inc
and
xchg
rol
lret
xor
loopne
int3
dec
lods
add
mov
ljmp
out
shll
loope
outsl
mov
add
lods
stc
outsb
ljmp
cld
mov
test
imul
pop
inc
add
lea
dec
jno
rorl
out
add
mov
add
sahf
xchg
mov
mov
js
shl
lcall
inc
jo
cmpsl
inc
lea
fcompl
sti
cmp
add
sub
insb
pop
insl
xor
xor
xlat
xlat
insb
test
jecxz
shlb
cmp
fsubs
xor
xchg
sbb
jnp
sbb
dec
or
ret
lods
and
jne
sbb
inc
pop
stos
stc
test
je
cld
add
dec
sbb
xchg
inc
xchg
inc
mov
lods
mov
cmpsb
dec
dec
or
push
leave
cmp
pusha
leave
sbb
subb
mov
pushl
jb
in
xchg
lock
push
cld
scas
int
imul
ds
dec
sbb
aad
ret
addr16
ja
or
int3
adc
jbe
and
mov
add
sbb
je
ja
in
cmc
inc
fnstcw
mov
dec
pop
xor
pushf
pop
fs
test
stc
add
jge
out
or
pushf
lods
inc
repz
xchg
nop
mov
dec
sub
pop
add
pop
cmp
pop
sub
mov
mov
xor
adc
movsb
inc
cmp
fidivl
jmp
test
mov
jg
push
lret
mov
sahf
mov
dec
pop
jae
push
inc
xor
subl
insl
push
dec
xchg
out
adcb
mov
add
hlt
xchg
dec
mov
pop
jno
xor
lret
dec
jmp
fcmovu
call
mov
movswl
lock
es
add
and
movsl
jae
push
fwait
mov
mov
std
aas
out
mov
fs
decb
imul
mov
lret
mov
push
imul
jmp
pop
cwtl
into
lock
inc
sbb
popf
lret
incb
jb
xorl
lcall
jno
scas
insl
iret
pop
mov
jne
xlat
dec
outsb
cltd
setne
sub
push
es
pop
sub
jecxz
jmp
frstor
sbb
xchg
insb
adcb
pop
cmpsb
jl
pushf
fcmovb
mov
cmp
test
and
pop
fnstcw
scas
and
mov
sarl
push
insl
loop
adc
mov
cld
std
out
aam
xchg
in
mov
push
pop
cmp
mov
dec
nop
dec
rcrl
in
aad
pop
push
lret
ljmp
imul
fs
mov
rcl
xchg
lret
mov
psubsw
inc
iret
adc
push
jae
sub
mov
repz
addb
inc
in
ja
outsb
pusha
into
rcl
adc
cmp
dec
jns
jp
xchg
xlat
test
mov
popa
cmc
pop
out
fwait
into
add
ja
cmpsb
clc
in
sahf
inc
stos
in
andl
aam
clc
mov
movhlps
mov
jle
mov
orb
ja
xchg
fldt
mov
ja
mov
jg
pop
sub
mov
stos
pushf
xor
addl
sub
movsb
adc
fidivs
out
adc
jne
mov
cltd
mov
dec
fiaddl
repz
push
scas
push
enter
cmpsb
pop
in
dec
mov
inc
sbb
lret
jecxz
outsb
xor
dec
lds
sub
push
roll
inc
pusha
repz
and
mov
or
cmp
aas
or
mov
shl
js
lcall
fcmovnu
inc
cmp
stos
pop
mov
sub
mov
push
in
adc
pop
call
pop
in
fsubr
stos
shlw
ret
aaa
lcall
test
mov
pop
cs
in
push
lahf
mov
sarb
scas
mov
or
out
inc
push
out
movsl
hlt
popa
push
sbb
dec
hlt
lcall
pop
sbb
movsl
and
push
sarb
repnz
inc
mov
push
stc
nop
inc
iret
dec
or
adc
mov
jb
loope
and
xchg
or
push
shlb
jnp
test
jbe
stos
adcb
insl
inc
aam
cli
js
imulb
mov
cmpsl
inc
std
roll
mov
jnp
mov
stos
test
xor
mov
lds
mov
cmpl
in
jae
xor
shl
adcb
daa
or
gs
dec
lds
js
movsb
mov
cmp
sbb
negb
test
int
lahf
movsb
mov
dec
sahf
sbb
push
jo
ljmp
push
icebp
out
add
mov
dec
in
mov
and
sub
aam
out
adc
mov
adc
cmp
xadd
dec
dec
and
mov
sbb
xchg
idivl
icebp
mov
sub
adc
xor
fiaddl
jg
ret
mov
nop
int3
aas
mov
fisubs
shll
mov
pop
inc
xor
adc
notl
mov
adc
dec
aad
dec
and
or
pmullw
push
or
fists
lcall
cmp
sahf
iret
mov
push
es
inc
les
jl
jae
repz
sar
psrld
lahf
cmpsb
mov
jp
mov
push
bound
inc
mov
mov
aad
out
or
cmp
imull
movsl
mov
xchg
mov
jge
fs
insl
inc
and
cld
jecxz
sbb
pop
and
adcb
sbb
mov
sbb
or
stos
addr16
shlb
pusha
xchg
fucomip
cld
adc
mov
sub
nop
pop
sub
dec
jmp
les
movsb
icebp
sub
xor
test
dec
xor
xor
dec
pop
inc
adc
cmp
popa
daa
loope
xor
and
bound
arpl
aaa
addr16
and
imul
or
leave
inc
sub
mov
push
jae
cmp
pop
ret
das
adc
aam
mov
adc
xlat
jb
in
mov
pusha
pop
add
lret
add
adc
cli
pop
call
mov
cwtl
jnp
outsb
arpl
push
mov
mov
outsb
xor
mov
and
subb
mov
stos
mov
dec
repnz
mov
lahf
fstp
pop
lods
mulb
test
adc
nop
clc
dec
mov
pop
rcll
adc
jno
daa
xchg
int
xor
ficompl
mov
cmpsb
mov
pop
movsl
mov
fldenv
inc
es
jg
hlt
cmc
sub
mov
in
jle
jp
sub
popf
nop
cmpsl
enter
lahf
roll
int3
cmp
jle
sbb
fcmovnb
in
inc
xor
lock
push
ljmp
jo
jbe
jbe
pop
mov
arpl
and
iret
pusha
lahf
xchg
xor
bound
pop
lea
fistpll
or
sbb
pop
flds
lods
das
mov
mov
mov
sbb
mov
scas
jnp
pavgw
mov
aad
xchg
jnp
mov
pop
or
adc
lcall
lcall
xchg
xor
mov
pop
mov
mov
pop
inc
pusha
xchg
lret
fildl
pop
aad
test
xor
mov
pop
stos
js
cmpsl
mov
cmp
test
call
insb
je
and
lret
imul
mov
outsl
ja
mov
mov
and
or
shll
fisubrl
cmpl
mov
mov
xor
in
dec
lods
adcl
jne
call
adc
fdivl
xchg
mov
fs
sahf
mov
jnp
nop
push
mov
lods
js
roll
aad
jecxz
movsb
add
andb
pop
xor
push
aaa
or
test
call
pop
jl
cmc
mov
adc
jle
pop
and
jne
out
mov
loop
mov
mov
dec
jns
push
das
loopne
mov
push
mov
ficompl
push
js
mov
dec
andl
popf
xchg
push
add
mov
andb
xor
testl
test
and
sub
in
dec
gs
xlat
jo
jmp
jmp
pop
jne
les
cmp
jbe
rorl
std
lret
insl
sbb
cltd
sarb
lahf
push
mov
pop
xchg
out
ja
jge
inc
mov
jg
mov
adc
stos
adc
xor
inc
jmp
out
cmpsl
jae
loop
mov
xchg
icebp
stc
lods
mov
cmc
out
mov
and
add
shl
out
lsl
mov
sub
xor
jge,pn
sub
and
push
cmpsl
cmpsl
adc
dec
inc
dec
mov
leave
jo
and
imul
push
sub
dec
insb
jecxz
jp
scas
pop
in
pop
sub
jp
in
lods
dec
pop
cmova
push
clc
xchg
mov
sub
shll
out
fstps
xchg
mov
and
sbb
add
lcall
cld
jg
pop
push
add
mov
cmpsl
lcall
out
jle
mov
sbb
and
shll
and
dec
call
into
in
mov
mov
out
testl
cmp
or
mov
push
cmp
adc
add
adc
daa
pop
arpl
pop
mov
push
jl
outsl
iret
adc
mov
push
fsubrl
sbb
fistl
mov
dec
fwait
inc
repz
out
and
lahf
mov
sub
les
mov
cld
xchg
clc
adc
ds
or
mov
adc
pusha
mov
bt
cltd
call
lret
mov
ljmp
sbb
pop
std
jae
loop
xor
mov
aad
imull
fcmovne
push
adc
ret
sub
or
addl
mov
das
imul
cmp
mov
sbbb
aas
push
mov
inc
in
jmp
aaa
push
ja
push
outsl
and
fsubl
mov
xchg
enter
popa
aad
jns
jge
jns
insb
xchg
les
add
sbb
adc
inc
sahf
outsl
jbe
out
pop
vfrczss
pop
aad
push
jae
adc
jbe
outsb
lods
mov
aas
pop
xor
add
inc
je
or
aam
push
pop
cmp
mov
aam
pop
fadd
inc
loope
adc
int3
call
sub
stc
in
loope
test
lock
or
loope
sarl
sti
pop
push
fs
push
inc
and
or
or
add
int3
das
pusha
pop
cmp
fistl
push
pop
arpl
outsl
scas
fldt
adc
rorl
lds
loopne
dec
xchg
pop
mov
cmp
dec
push
mov
inc
xor
and
ret
mov
loopne
dec
in
movsb
add
stc
pushf
xor
addb
pop
ja
movsl
jns
add
leave
jo
cmp
pop
pop
enter
les
js
loopne
pusha
pop
pusha
sub
push
cli
cli
jge
testl
or
enter
mov
mov
cwtl
ds
stos
sub
jo
dec
mov
test
sub
cwtl
arpl
les
push
and
jo
popf
fcmovnbe
fidivl
cmpsb
xor
inc
adc
insl
mov
push
mov
and
sahf
or
and
or
and
lcall
call
sbb
loope
push
xor
lea
and
into
fldcw
mov
pop
fimuls
jle
in
leave
rcr
xchg
frndint
or
xor
sti
cltd
and
mov
mov
xchg
inc
sub
scas
jo
imul
fidivl
pop
jbe
aam
add
lret
mov
inc
push
xor
call
and
enter
insb
sub
xorl
inc
ret
inc
scas
sub
jnp
inc
mov
ds
dec
fisttps
hlt
jo
inc
push
adc
jle
push
mov
aas
sub
adc
out
repz
scas
jae
fs
clc
pop
int
aas
sarb
mov
dec
out
jne
mov
jns
leave
pusha
cmpsl
sub
xchg
test
repz
fiaddl
jp
sub
ss
aad
lret
or
pop
divl
mov
mov
xor
movsb
push
insl
jae
sbb
fnsave
jno
mov
cmp
mov
push
xchg
test
imul
xlat
into
ss
sbb
dec
insl
sbb
xor
in
mov
lcall
out
out
shrl
fdivrl
std
addr16
outsl
dec
leave
mov
xor
push
insl
jecxz
scas
scas
rorb
das
pop
repz
outsb
sbb
adc
xchg
pop
pop
popa
or
and
pop
test
sahf
xor
xor
cmovno
test
sbb
sub
fsubs
stos
mov
sahf
cmp
out
lahf
movsb
or
jo
cmpb
ja
mov
cmc
stos
add
lods
mov
push
adc
push
pop
stos
sub
sbb
sbb
je
outsb
int3
adc
mov
scas
mov
cmp
jg
iret
or
dec
stos
lea
dec
lods
xchg
dec
or
into
aad
sbb
aas
dec
jmp
hlt
xchg
dec
addb
hlt
in
xor
ret
pop
sub
or
mov
mov
sbb
or
dec
cli
mov
fcmovnbe
or
in
sbb
xchg
out
dec
inc
arpl
pop
pop
sbb
push
cld
dec
ss
or
jbe
mov
rol
mov
adc
or
mov
cmp
fisttps
icebp
push
add
jmp
lods
outsl
mov
addr16
out
add
ss
sub
orb
push
push
fmuls
imul
push
jmp
xchg
and
xorb
add
gs
leave
in
pop
jnp
pop
jbe
jbe
fwait
xchg
popa
mov
nop
inc
std
pusha
mov
stos
hlt
xor
jg
and
repz
xor
or
and
xchg
data16
nop
sbb
and
fdivrs
pop
jne
mov
cmpsb
insb
iret
or
insb
fcoml
ss
cmp
push
stos
pop
dec
push
pop
xchg
or
stc
pop
xor
into
or
add
push
inc
fwait
sbb
inc
mov
xor
mov
add
fldt
int
adc
jae
and
out
sbb
jecxz
mov
enter
cmp
jg
adc
mov
out
gs
std
add
add
add
addr16
sub
xchg
and
ljmp
push
arpl
push
fadd
mov
jecxz
jne
jnp
dec
roll
into
mov
pop
push
in
xchg
or
lret
or
lcall
call
insl
js
test
inc
rcrb
mov
pop
inc
add
xchg
xor
sub
out
in
add
sub
inc
fldcw
cmp
jne
cmp
pop
dec
pusha
fstps
mov
push
jnp
add
pushf
add
out
fstpl
add
mov
pop
das
popf
mov
test
mov
adc
inc
addb
rcrl
push
pop
sbb
dec
jnp
or
inc
icebp
sub
sub
sub
aad
pop
ficompl
adc
sahf
sbb
mov
clc
sub
test
ss
jmp
cli
xchg
shll
push
lret
cmp
es
jno
add
pop
lret
jno
loop
xor
fmulp
popa
movsl
cli
pop
add
test
push
lock
dec
push
frndint
into
or
add
push
xor
sub
xchg
jge
lods
movsb
lock
mov
cld
ja
sub
pop
fs
pop
fmul
ret
or
inc
sahf
pop
cmp
dec
cltd
test
or
test
idiv
std
arpl
cs
hlt
push
insb
xchg
inc
dec
cmp
pop
adcb
hlt
loope
repz
push
fs
inc
test
popa
mov
xor
call
out
clc
inc
cmp
loopne
jae
fs
sahf
stos
das
lret
rcll
pop
mov
xchg
fs
jne
call
repnz
inc
jge
and
lret
mov
mov
iret
cmp
pop
or
inc
mov
dec
mov
and
mov
jle
fsubs
mov
mov
or
lcall
xchg
xchg
mov
or
out
and
sbb
fcomip
cwtl
and
les
dec
das
das
sub
cwtl
mov
cld
push
xchg
lods
inc
mov
xor
inc
jb
and
mov
not
xor
jno
xchg
in
dec
jecxz
and
xchg
sbb
mov
std
std
bound
les
pop
pop
stc
push
cmp
jbe
inc
jp
xchg
enter
ja
mov
and
movsl
sub
pop
fwait
jle
inc
andl
lcall
test
xor
subb
add
imul
jns
ficoms
sub
jae
call
fdivl
pop
adc
jle
cli
pop
xor
jnp
push
das
outsb
ret
scas
out
sub
int3
cs
mov
sahf
aam
adc
inc
jle
mov
enter
jecxz
adc
call
add
hlt
xchg
jle
test
cmc
lods
das
in
lds
iret
mov
cmp
lahf
adc
xlat
loope
pop
jnp
mov
mov
sub
jge
incl
lds
cmp
ljmp
cmp
push
pop
adc
ficoms
ret
xor
jmp
fs
push
ss
lds
inc
ja
xchg
sub
mov
sub
subb
outsl
cmp
dec
jl
dec
in
repnz
push
xchg
daa
das
leave
xor
dec
jne
dec
out
loop
hlt
in
cmpl
mov
repnz
or
cmpl
loop
pop
cmp
mulb
lods
out
outsl
inc
aam
mov
bound
mov
loope
ss
in
test
inc
shrl
test
lods
loopne
push
sbb
fidivrs
or
pop
arpl
add
adc
xchg
outsl
shlw
xchg
cmpsl
stc
xor
incl
xor
pop
push
cmp
pusha
xchg
dec
and
mov
in
insb
dec
ror
inc
push
cmp
lea
sub
cmp
mov
mov
lret
cli
int
lods
and
add
out
shrb
dec
xchg
or
outsb
cwtl
enter
jb
push
enter
xor
xchg
inc
add
jge
xchg
fld
dec
lock
mov
jle
insb
mov
loop
cmp
adc
push
addr16
or
cmp
hlt
iret
repz
dec
cmp
les
cwtl
stc
sbb
stc
mov
mov
ja
push
mov
add
ret
jecxz
outsl
out
and
cmp
mov
fucomi
out
nop
mov
xor
mov
push
push
out
faddl
or
out
add
or
adc
dec
fwait
dec
push
aas
mov
enter
negb
shrb
daa
xchg
dec
push
xlat
xchg
aaa
push
loopne
adc
js
cli
je
push
scas
pop
push
stc
mov
jb
or
pop
enter
and
into
aas
aaa
sbb
shlb
das
int
mov
xorb
and
cltd
fidivrl
pop
aas
push
inc
lret
in
mov
mov
bound
lods
jb
cmp
or
ljmp
cltd
pop
push
and
push
jno
adc
mov
fimuls
or
sbb
loop
ja
sub
and
jge
scas
ljmp
mov
mov
sahf
push
or
rcll
xor
jl
xlat
jl
mov
scas
pop
adc
shrl
jge
push
dec
leave
int
and
sub
mov
rorb
lret
add
jmp
xchg
pop
mov
xchg
jns
mov
outsb
pop
aaa
mov
out
dec
xor
inc
pop
xor
ss
jl
mov
fisubrl
lcall
push
in
push
and
loope
and
push
jp
mov
fdivrl
mov
scas
fwait
movsl
xchg
xor
and
and
pop
fs
in
flds
push
sub
jne
inc
insb
xchg
jb
xor
lcall
adc
popa
jge
jle
lcall
shll
push
sbb
into
leave
mov
push
pop
cmp
shl
xchg
insb
add
ds
movsl
adc
lds
fstps
loop
mov
jg
and
lods
out
sub
mov
cmp
dec
mov
inc
jp
push
leave
cwtl
ret
bndstx
mov
dec
inc
cmp
repz
or
test
es
adc
je
je
add
ret
jne
jmp
mov
jmp
sti
fcomps
cwtl
stos
sti
test
nop
dec
out
out
cmp
and
pop
jne
mov
in
fmul
movsl
mov
in
mov
imul
mov
scas
sbb
shlb
cmp
enter
int
fdivl
jbe
scas
and
fwait
pop
fldcw
cmpl
push
add
inc
add
cmpsl
cmpsl
dec
inc
test
rcrl
adc
mov
fcomps
stc
mov
fimuls
adcl
inc
xorl
pushf
ss
rcrl
cwtl
ja
decb
cltd
lret
fists
push
or
clc
xchg
jp
push
pop
ret
mov
push
ds
lahf
mov
lock
xor
test
cli
mov
aaa
cld
cmp
xor
pop
fcoml
lea
push
pop
add
adcb
mov
loop
and
sbb
inc
push
pop
dec
and
push
in
mov
sub
repz
lds
bndldx
xchg
mov
fsts
jno
repz
adc
testl
inc
int
loopne
jnp
sub
iret
movsl
dec
cmp
das
xchg
and
fsubl
mov
add
push
sbbl
mov
adc
dec
mov
add
adcb
and
ljmp
pop
push
mov
fnsave
and
fwait
sar
pop
in
mov
test
cld
aad
js
inc
inc
cld
std
shufps
push
in
je
xor
adc
or
out
inc
sub
push
rcrl
andb
sub
jp
rclb
imul
pop
or
jbe
add
aad
fiadds
arpl
xor
xchg
jl,pn
popa
dec
dec
dec
lret
adc
or
xor
pop
xor
mov
aam
inc
cli
pop
push
push
stos
mov
xchg
adc
xor
or
testl
sbbl
pop
je
not
cltd
movsl
mov
js
ffree
std
es
fbld
cmp
lcall
bound
out
mov
xchg
jae
sub
xor
xchg
scas
cmp
mov
adc
out
jl
ljmp
lds
adc
dec
ljmp
notl
inc
xchg
out
push
mov
xor
fsubl
cs
lahf
adc
inc
dec
out
cltd
inc
movsl
jns
inc
imul
outsb
inc
jae
rcrb
add
xor
xchg
mov
dec
icebp
mov
repnz
pop
xchg
ljmp
push
in
cs
xchg
cwtl
inc
hlt
lods
mov
inc
sub
movsl
dec
fsubrs
jp
dec
pop
imul
add
ficoml
test
inc
iret
xchg
xchg
push
mov
test
cmp
gs
pusha
xor
xor
push
icebp
stos
lret
es
inc
push
push
repnz
inc
xchg
test
cld
jmp
stc
xor
cmpsl
cmpsb
dec
shlb
lods
ret
cmp
dec
push
popf
jmp
mov
xor
cltd
xchg
xor
sbb
rep
mov
sbb
rcrl
fdivrs
fs
xor
and
je
popa
mov
mov
popf
and
pusha
out
pop
movsl
dec
movsb
pop
popa
inc
fstps
add
pop
popa
push
rclb
jge
out
cltd
push
pusha
imul
sub
adc
repnz
mov
ja
icebp
lods
clc
arpl
xchg
test
test
sbb
repz
cmp
loopne
cmp
pop
cmp
addr16
outsl
cmp
ret
pop
aaa
add
adc
lods
aad
jl
cmc
xlat
and
loopne
repz
and
mov
jmp
push
sbb
pop
call
movsl
and
and
fwait
ret
xor
mov
dec
enter
out
test
xchg
aaa
sbb
inc
mov
repnz
popa
xor
dec
enter
cld
fcomps
sub
cmpsb
lahf
ror
int
push
cld
cmp
outsb
inc
dec
xor
lret
pushf
movsb
nop
pusha
adc
mov
cmp
adc
cmc
mov
sub
mov
mov
push
jno
pop
imul
or
jg
push
add
mov
loop
lock
daa
xor
in
dec
imul
int
pushf
mov
outsb
or
push
imul
data16
leave
sbb
add
or
sub
outsl
bound
clc
mov
xchg
out
and
out
sti
popf
inc
dec
fistps
xor
pop
pop
ljmp
mov
jmp
or
mov
test
pop
jno
or
push
dec
xchg
sbb
faddp
push
ds
les
dec
pop
ja
adc
cmp
ljmp
jno
rcll
jo
mov
push
mov
lods
aad
mov
push
mov
push
scas
pop
mov
push
or
mov
ret
std
jmp
jb
cmp
dec
imul
inc
data16
push
mov
or
aad
cmpsb
inc
inc
pop
in
les
xor
arpl
cld
cmc
fistl
add
aaa
or
push
add
mov
dec
mov
sub
loope
testb
bound
mov
sub
test
jg
cmpsl
leave
cmp
inc
xor
inc
test
rcrl
sbb
pop
jae
dec
loope
jb
xchg
aad
sbb
into
jl
outsl
dec
xlat
cmp
rol
pop
and
mov
test
mov
and
push
sbb
xchg
scas
cli
mov
es
and
push
jbe
pop
jecxz
gs
jnp
fstps
push
rorl
push
push
pop
fsubr
jge
rcrb
repnz
jmp
lret
inc
mov
fsub
cmp
jae
sbb
lods
shl
or
in
in
push
mov
and
std
inc
ficomps
cmpsl
dec
ljmp
xchg
test
test
or
ljmp
fyl2x
mov
jnp
scas
jmp
stos
fucompp
mov
or
lods
hlt
in
jl
sub
sub
int
sub
pop
ja
adc
fistpl
jb
rcr
push
cmpb
jecxz
jo
and
add
pop
jne
cmp
movb
mov
sbb
je
pop
sbb
xchg
add
sbb
outsb
call
cs
loop
test
or
jmp
mov
sbb
ja
fnsave
add
sbb
xchg
dec
mov
jae
mov
les
and
xorb
dec
or
gs
dec
dec
lods
call
js
push
cld
out
cwtl
es
xchg
jne
pop
pusha
push
adcl
lods
adc
hlt
lods
inc
cwtl
jne
xor
push
daa
je
loopne
jae
and
adc
leave
cmp
orb
fcomps
jmp
imull
fwait
jmp
dec
pop
js
or
push
aas
cmp
es
pop
push
push
sar
lret
push
jo
aam
pop
scas
lock
out
mov
int3
mov
inc
repz
int3
pavgb
int3
das
ljmp
sub
push
sub
xor
jbe
mov
push
mov
or
shl
adc
lds
out
insl
mov
into
mov
int3
mov
sbb
call
test
inc
lahf
inc
jp
cld
lods
inc
clc
sahf
pushf
inc
jbe
jecxz
nop
cs
mov
add
sbb
cmpb
mov
jno
pop
jecxz
jg
jns
push
lock
or
adc
push
push
mov
mov
dec
in
inc
cli
dec
xchg
mov
add
cmp
not
icebp
test
or
rolb
add
push
jl
mov
inc
popf
xchg
test
mov
mov
push
mov
popf
in
inc
popf
pop
mov
ljmp
and
pop
jae
mov
sbb
xor
adcb
rcrl
xchg
ss
dec
push
pop
neg
push
xor
insb
iret
inc
clc
sahf
cli
lock
inc
int3
dec
pop
inc
bound
push
add
mov
aas
in
sbb
arpl
sbb
jb
outsb
in
in
js
aam
repz
sbb
arpl
mov
repnz
lret
sarb
cld
sbb
outsb
and
dec
jg
cmp
cmp
ds
je
xchg
push
mov
aam
jmp
mov
pop
mov
add
or
add
cmp
push
ljmp
es
sub
mov
test
xor
jle
je
sbb
dec
stc
or
lret
adc
enter
out
lock
jl
psrlw
push
xor
jbe
enter
mov
xchg
sub
cmp
inc
mov
loopne
jmp
flds
dec
mov
in
xor
pop
cmp
int
mov
jge
imul
in
sti
jg
fbstp
add
adc
les
shl
shrl
pop
in
jnp
out
mov
repnz
or
xor
or
out
mov
or
pop
or
test
es
or
jbe
sbb
push
mov
adc
idiv
pop
out
pop
jp
mov
push
xor
ljmp
int3
inc
mov
aaa
mov
xor
gs
jecxz
adc
mov
pop
mov
in
outsb
adc
xor
inc
in
movsl
adc
lret
out
sahf
push
fdivrs
aaa
insb
lcall
sub
inc
cmpsb
jnp
lea
or
sub
in
das
mov
aam
dec
xchg
dec
add
aam
pop
add
xor
repz
mov
int
mov
iret
stos
dec
fisubl
ret
pop
shrl
ret
pop
loope
iret
stc
dec
fidivl
stc
gs
ds
sub
and
cmc
xor
inc
movsl
shrb
jns
inc
and
cmpsb
mov
in
inc
call
lods
push
clc
das
mov
cmp
push
ss
nop
sub
cltd
addr16
pop
or
inc
pop
xor
and
xor
lret
loope
enter
je
adc
xor
sbb
mov
cmp
adc
pop
xchg
push
fcomi
jbe
push
adc
mov
std
mov
inc
js
pop
addr16
test
fcomp
sub
dec
mov
test
cmp
cmp
cli
hlt
sbb
test
mov
jbe
ret
test
out
push
jae
aad
cltd
mov
add
sbbb
inc
xor
or
arpl
lds
push
aas
and
mov
cmp
pop
xor
cmpsb
sbb
jp
mov
adc
dec
mov
insl
jle
int
mov
gs
pop
push
into
jns
int
sbb
lret
sub
jg
sbb
dec
or
arpl
xorl
icebp
xor
insb
jae
or
sbb
adc
sbb
mov
es
mov
stos
jp
das
testb
jnp
stc
dec
sbb
mov
dec
cmp
mov
pop
repnz
into
or
cmp
push
es
roll
scas
test
shl
stos
jnp
mov
adc
jns
pop
xchg
xchg
jl
mov
in
push
scas
mov
jb
cmc
add
xlat
mov
xor
or
adc
ljmp
pop
or
add
xchg
xor
mov
mov
jle
xchg
sbb
inc
aam
inc
xor
loop
mov
cmp
pop
in
xlat
dec
xor
or
in
push
mov
insb
dec
jle
mov
dec
cmp
sti
into
insb
push
loop
or
xchg
outsl
out
mov
push
jl
push
add
pop
jo
dec
cs
repnz
xchg
mov
cmp
jno
and
cli
lret
sbb
sbb
dec
sbb
lds
xor
fldl
mov
mov
push
jp
cmpb
out
stos
mov
ljmp
mov
dec
mov
adc
jmp
or
insl
bound
pop
in
xchg
push
mov
adc
insb
or
lods
cmc
adc
addb
les
incl
mov
xor
push
xor
inc
out
lds
out
pop
and
je
mov
add
sub
ficoms
xchg
scas
jbe
dec
sbbl
insl
mov
ficomps
out
or
pop
inc
mov
insb
jb
lods
mov
inc
das
cmc
push
ficoms
cmp
sub
sahf
mov
mov
and
add
ljmp
mov
call
push
xor
adc
pop
in
js
stos
cmp
int
xchg
in
int3
pop
xor
mov
pop
test
jo
test
repz
mov
rcl
mov
outsb
pop
push
cmpsb
out
hlt
cmp
inc
jg
inc
xchg
xchg
xchg
cltd
xacquire
test
mov
test
sahf
or
fldl
or
mov
out
inc
mov
stc
mov
dec
or
js
dec
mov
mov
inc
call
mov
push
sbb
sub
pop
push
dec
sub
mov
dec
iret
imul
out
jno
insl
repnz
sahf
xchg
add
or
in
sbb
test
sub
mov
xorb
insl
cmp
movsb
dec
adc
mov
scas
sti
sahf
test
hlt
jg
sub
cmp
mov
add
test
sbb
insb
push
adc
inc
hlt
fs
add
pop
in
xor
lock
lret
pop
push
mov
fdivrl
xchg
insb
mov
lods
loopne
lcall
je
notl
les
add
iret
sub
in
aad
pop
xchg
xor
xchg
jne
adc
aad
lahf
neg
jns
sub
sbbb
mov
neg
loop
pop
cltd
mov
out
pushf
mov
bound
es
lcall
mov
xchg
enter
stos
mov
cld
cwtl
jb
and
mov
test
cmp
test
popf
lods
lret
sbb
insl
in
int3
add
imul
xchg
das
test
dec
sahf
ljmp
jne
mov
mov
iret
jp
fcmovu
cltd
sub
push
clc
movsl
mov
dec
xor
fnsave
jp
dec
je
call
insb
repz
test
cli
xlat
push
shll
iret
xchg
dec
imul
dec
popf
pop
out
int3
add
shl
out
pop
cmp
sbb
ficoml
push
mov
fnstsw
movsl
mov
movsl
lods
loope
cmp
jg
xor
lahf
int3
movsb
sub
fs
dec
out
scas
das
incl
sbb
paddsb
imull
test
xchg
aaa
mov
mov
jnp
sti
pop
cwtl
adc
sub
sbb
insl
sub
cmp
sahf
cmp
aad
or
addl
inc
push
movl
xchg
inc
inc
cld
call
add
mov
mov
int
nop
cmpsb
xor
stos
sbbl
out
lods
sti
and
lahf
xchg
inc
mov
or
jb
pop
add
push
ss
mov
movsb
aas
addr16
add
cmp
cltd
dec
fwait
sbb
daa
mov
int3
sarb
cmp
mov
dec
mov
adc
cmp
jl
in
push
outsl
pop
jle
sub
and
sahf
and
cmp
adc
cmp
test
jge
imul
cmpsl
mov
xor
mov
add
mov
enter
fcmovne
mov
aas
int3
push
adc
pop
jno
adc
data16
sbb
push
imul
adc
mov
mov
mov
subl
imul
fwait
nop
jne
cltd
push
loopne
imul
mov
lock
or
sbb
mov
sub
into
push
adc
xor
stos
cmp
lds
dec
push
cmp
and
les
cmc
loope
pop
or
mov
or
adc
jnp
divl
jecxz
sbb
mov
in
add
bound
sbb
ss
xor
jno
cmp
mov
das
push
push
repz
mov
dec
add
mov
in
sub
fstpt
mov
xchg
sub
xchg
jns
xor
xlat
mov
hlt
add
subl
scas
mov
inc
pop
adc
xlat
jl
int
inc
sbb
cmc
roll
insb
shrb
fdivrp
mov
push
mov
jmp
mov
or
rorl
dec
ljmp
or
ljmp
jle
leave
xlat
mov
mov
add
dec
add
ljmp
push
mov
shl
mov
mov
push
insl
out
pop
add
fbstp
fimuls
out
pop
rcrb
js
repnz
mov
es
xchg
aam
repnz
push
lods
jg
and
ret
loope
cmp
xor
jmp
dec
icebp
jnp
adc
insb
stc
outsb
outsl
push
inc
push
std
in
dec
xchg
jge
cmc
jno
jnp
lret
add
add
cltd
push
cld
movsl
inc
pop
jg
ficoms
dec
popa
pop
fidivs
adc
cmp
xchg
sub
aas
cwtl
push
repnz
lahf
sbb
jl
xchg
sbb
iret
ret
sub
xchg
cmp
fisubrl
test
mov
int
and
or
aaa
mov
cmp
mov
sub
pop
mov
cmp
cmpsl
shll
add
or
pushf
int3
int
and
sbb
insb
hlt
adc
ret
sbb
fidivrl
xchg
sbbl
mov
jne
xor
pop
arpl
imul
fldcw
lods
mov
dec
bound
jmp
ror
in
cli
sbb
bound
pop
lcall
mov
daa
or
mov
add
cmp
sub
insb
ja
stos
pop
pop
dec
pusha
pop
in
lods
jle
push
jl
int3
test
subl
loop
mov
mov
js
stos
mov
push
dec
call
out
imul
ret
loope
pop
js
enter
int
outsl
push
jg
addr16
pop
test
pop
rolb
add
xchg
cwtl
imul
dec
fisttpl
jns
jbe
push
orl
push
mov
or
pop
or
out
loop
ret
sbb
hlt
fldcw
test
xchg
xor
imull
and
jbe
je
lods
je
ja
jae
xchg
jmp
les
cmp
js
and
xor
cmpsl
scas
cmp
sub
jbe
or
cwtl
mov
icebp
xchg
imul
mov
mov
out
inc
addr16
push
jne
mov
arpl
mov
nop
adc
in
add
pop
pop
pop
loopne
es
sahf
xchg
int3
pop
mov
and
hlt
sbb
pop
add
mov
sub
add
adc
add
xchg
fmul
movsl
sbb
push
rclb
movsb
xlat
inc
fistpl
lods
mov
jbe
daa
shlb
cmp
shr
or
es
xor
out
shlb
mov
je
js
mov
mov
imul
pop
xor
test
mov
mov
fildll
aam
sbb
jo
pop
cmp
arpl
shl
pusha
or
mov
mov
data16
adc
cmpsb
popa
in
cmp
push
lods
daa
jl
cmpsb
mov
jge
lahf
add
cli
imul
ret
jp
or
fwait
cwtl
push
fucomp
pop
in
addr16
pop
inc
lcall
pop
nop
push
xchg
es
sub
pop
fiaddl
adc
lods
push
icebp
mov
or
lret
les
or
mov
inc
aad
xor
icebp
in
sub
mov
add
daa
jno
inc
icebp
xchg
loope
test
mov
test
jbe
jnp
mov
movsb
jle
bound
xor
das
and
bound
fbld
or
punpckhdq
xor
fs
imul
aam
les
mov
popf
xchg
mov
fsubs
or
adc
rclb
mov
mov
loope
inc
jb
mov
adc
in
daa
cmp
cwtl
pushf
rorl
pop
sbb
push
test
aas
int3
jg
test
outsb
shrl
pop
iret
pop
cwtl
mov
mov
pushf
gs
movsl
pop
repz
push
push
jp
dec
in
test
jecxz
rclb
mov
mov
and
leave
inc
mov
clc
dec
ret
sbb
dec
pop
xchg
outsl
mov
clc
sbb
push
jnp
and
imul
or
es
lret
jbe
cmp
enter
mov
or
and
cmpsl
shll
sahf
sbb
mov
sbb
cmp
push
fwait
clc
dec
rclb
jne
push
lret
mov
mov
mov
cmpsb
jbe
pop
bnd
mov
push
addr16
dec
mov
or
sbb
add
stc
mov
pop
xchg
xor
xor
stos
jp
ljmp
cmp
and
sti
xchg
call
lods
add
cld
adc
subl
push
push
add
fcomps
loopne
or
xchg
fisubrs
cmp
or
jbe
pop
mov
mov
mov
aam
aad
lds
fcmovu
mov
repnz
xchg
xor
inc
or
inc
movsb
add
sub
out
add
or
daa
test
sub
call
push
xor
cvtpi2ps
inc
dec
jns
sbb
call
stc
in
inc
inc
ljmp
cli
add
xlat
je
jg
repnz
adc
xchg
push
push
aam
mov
lea
rorl
mov
and
push
enter
mov
stos
inc
and
aad
pop
push
mov
addr16
stos
les
push
subl
or
jb
push
sub
push
repz
out
jecxz
dec
mov
xor
xor
jmp
stc
inc
mov
and
xchg
js
int3
ljmp
mov
inc
adc
cld
push
stc
push
cmc
insb
arpl
cmpsb
fs
imul
stc
mov
push
repz
pop
outsb
jmp
stos
std
ljmp
or
jmp
xchg
push
shrl
shll
shrl
orb
in
jb
mov
adc
scas
data16
inc
sbb
cmp
cmpsb
notb
fs
icebp
pop
loopne
push
divb
sbb
push
pop
add
imul
add
call
add
aad
cmpsl
sub
lods
sahf
push
xchg
cmpb
jae
fiadds
orl
and
sub
add
gs
mov
lret
sub
repz
or
mov
aam
xchg
out
in
mov
push
sahf
addr16
shrb
lcall
cltd
pop
xchg
shll
mov
pop
icebp
mov
jns
js
and
jp
insl
and
inc
xlat
movsl
add
mov
rorb
aas
ficomps
push
cmp
dec
cmc
jl
scas
aad
fwait
push
shrl
push
inc
shlb
xor
mov
jo
lods
mov
xchg
test
mov
out
stos
cmp
sub
dec
stos
sub
push
mov
jl
incl
test
add
jnp
int3
jo
mov
sahf
pop
adc
fcompl
push
mov
mov
ja
push
and
fisttps
arpl
mov
mov
xlat
push
xor
cmp
cmp
pop
sahf
test
adc
cmp
fistpl
cld
inc
dec
scas
ficompl
lods
out
fbld
pop
sub
mov
out
rolb
adc
xor
jo
push
imul
icebp
mov
fwait
lock
xchg
cmpsl
imul
rclb
pop
cmp
push
das
hlt
inc
sbb
leave
xchg
xchg
ja
pop
dec
pop
adc
sbb
stos
enter
ficompl
jae
negl
nop
fsubrp
addb
fwait
xchg
mov
xor
cmc
mov
clc
in
mov
lea
daa
push
cmp
or
xchg
jge
pop
lret
or
addb
or
mov
push
push
mov
test
cmc
push
and
lods
insb
pop
adc
daa
leave
and
jmp
mov
fisttpll
repz
out
fidivl
xor
mov
add
xchg
aas
jne
sub
repnz
dec
mov
push
js
add
imul
ret
push
adc
sbbl
popa
adc
repnz
enter
ss
xlat
or
js
inc
mov
mov
inc
insl
or
or
nop
test
and
mov
mov
lea
cmp
cmpsb
mov
loopne
mull
pop
pop
and
push
jnp
or
push
fwait
jge
mov
into
ja
jecxz
popa
stc
std
pop
mov
jp
pop
fdivl
int
lds
test
sahf
push
xor
lret
jbe
jg
mov
dec
cmc
mov
sbb
gs
lock
dec
fists
mov
pop
push
aaa
pop
sbb
push
xchg
cltd
in
jp
mov
push
ljmp
push
imul
mov
arpl
lock
and
push
xchg
jns
cmp
vmread
mov
add
push
daa
data16
xchg
enter
in
cli
addl
and
push
enter
jecxz
faddl
mov
lret
and
or
repz
sub
test
ficoms
jge
dec
ljmp
adc
push
xor
cs
ret
inc
loopne
xchg
call
mov
ljmp
adc
cwtl
mov
sahf
dec
jnp
mov
dec
adc
mov
jge
inc
and
cwtl
jle
jge
add
shrl
fstpl
iret
sbb
scas
cmp
lods
inc
imul
adc
rcrb
cmp
lods
out
dec
enter
imul
mov
aas
sbb
js
lcall
and
adc
mov
add
bound
out
pusha
cmpb
add
popa
push
in
xor
or
xor
mov
sahf
push
cmp
pushf
lahf
outsb
pop
sbb
cmpb
add
fldenv
dec
movsb
std
notl
imul
js
fldt
mov
icebp
push
pushf
jecxz
test
sbb
aas
xor
mov
out
stos
mov
xlat
push
xlat
stc
and
insb
adc
orb
insb
pop
pop
dec
pop
xchg
addr16
adc
lret
shr
jle
jne
repz
push
fucomi
addr16
mov
aad
sbb
cmpsb
mov
cmp
fisubl
popf
rcrb
sti
add
xchg
xchg
movsl
mov
mov
xchg
push
mov
scas
aad
cmp
sub
add
in
std
pop
xchg
or
mov
adc
or
mov
sbb
in
mov
dec
xor
pop
mov
leave
ja
lret
jo
sbb
imul
push
cmp
mov
outsl
rclb
outsl
cltd
xchg
xchg
mov
pmuludq
inc
shll
loope
sbb
repz
test
daa
and
scas
stc
mov
inc
popf
jmp
shr
mov
cmpsb
xor
and
mov
and
jb
es
adc
and
stos
test
rol
push
gs
jne
imul
push
dec
push
mov
add
sbb
push
add
pop
js
xchg
add
push
pop
cwtl
dec
mov
movsb
loope
cmp
fldl
loope
rol
nop
jle
jecxz
inc
pop
lea
mov
in
js
loop
fisttpl
movsl
aaa
mov
inc
cmp
sub
repz
sub
imull
pop
pop
je
xchg
out
cmp
test
and
jl
xchg
push
mov
lahf
mov
sahf
mov
int
dec
dec
mov
hlt
add
cmpsb
push
loop
xchg
adc
fs
ret
xchg
daa
xchg
inc
push
cltd
lcall
fs
inc
aam
dec
lret
xchg
add
mov
loopne
data16
in
sub
inc
sbb
jmp
movsl
stc
mov
push
jg
inc
mov
mov
shll
xchg
add
sbbl
dec
fmul
pop
mov
xchg
sub
pusha
ret
dec
mov
mov
call
inc
and
cs
das
mov
in
inc
dec
in
fildll
cmpsl
xor
cmp
shll
insl
mov
testl
lock
cs
dec
in
clc
xchg
sub
and
inc
push
rolb
mov
mov
dec
insb
out
push
iret
imul
js
lods
jno
push
sub
mov
cmp
mov
in
jmp
push
in
lds
dec
push
rcrl
dec
dec
mov
dec
mov
sub
pusha
jne
in
pusha
mov
xchg
cmpsl
jp
lock
mov
ficoms
mov
cmc
mov
dec
jno
lret
sub
and
dec
push
test
popa
lahf
push
xorl
lret
pop
push
mov
test
leave
and
aas
outsb
lea
inc
shr
ret
xor
insl
int
je
arpl
pop
out
inc
jns
mov
in
cli
jns
in
int
decb
push
mov
test
add
mov
or
xor
jmp
cmp
int3
jnp
jo
xchg
mov
adc
mulb
in
inc
xor
pop
cmp
in
jecxz
sahf
jb
mov
outsb
xchg
lcall
lea
lds
nop
push
add
insl
rorb
jnp
push
ljmp
shll
mov
xchg
push
inc
call
lock
aad
fimuls
or
sbb
cmp
push
add
int3
es
push
scas
insl
push
arpl
aam
subl
fdivs
sub
orl
xlat
push
dec
in
pop
xchg
cld
insb
pop
push
adc
addl
and
mov
pop
mov
shrb
pop
sti
leave
dec
rcrb
and
lods
inc
xchg
jle
shll
arpl
test
lcall
dec
loope
stos
jno
js
aad
fisttpll
jg
lods
ficompl
xor
int3
and
hlt
mov
push
repnz
scas
ret
push
out
sbbb
add
fisubrs
dec
cmpb
or
aas
jno
mov
fdivs
push
pop
js
adc
dec
ds
vunpckhps
push
stc
mov
pop
pop
lods
xor
add
mov
push
mov
js
push
pusha
or
lret
in
xchg
clc
imul
or
and
add
es
lret
push
pop
fldl
and
js
sahf
mov
or
cmpsl
mov
int
mov
inc
pop
jge
addl
loope
mov
or
jns
add
jge
mov
mov
mov
ds
add
add
xor
jnp
sbb
jae
into
lcall
rcrl
or
test
xchg
jmp
loop
fiadds
adc
and
lods
cld
mov
dec
push
fiadds
cmp
into
inc
mov
or
push
push
add
mov
mov
mov
popf
aaa
sub
inc
mov
repnz
pop
inc
or
jns
push
add
jle
or
repz
or
push
insl
jge
in
cmpsl
ds
cmp
and
jl
movsb
add
ja
and
jle
test
pop
imul
mov
sbb
adc
adc
mov
shlb
test
sbb
pushf
frstor
sub
pop
or
pop
add
xchg
test
sbb
out
sahf
ds
repnz
jge
adc
add
cmc
or
push
pop
scas
mov
push
inc
dec
in
popa
repnz
leave
mov
cmovge
sbb
pop
mov
repz
sub
push
push
push
mov
fwait
mov
push
jne
cmp
dec
mov
ret
mov
in
ljmp
pop
and
sbb
pop
jmp
stos
in
adc
dec
in
out
xchg
xor
mov
cmc
push
pop
call
cmp
stc
mov
jns
out
pop
nopl
sbb
in
pop
repz
push
insl
in
ficomps
add
xchg
hlt
adc
insl
sti
mov
dec
xchg
imul
es
addr16
subl
notl
cs
movsb
ja
mov
test
xchg
out
les
stos
jnp,pn
cltd
cmovg
divb
mov
adc
and
inc
xchg
in
mov
adc
cwtl
stc
dec
inc
cmp
in
loopne
lods
adc
in
push
inc
inc
xchg
insl
xchg
aad
rol
mov
xor
mov
insl
movsl
or
lock
push
pop
sub
rclb
popf
mov
leave
mov
scas
movsl
fldt
push
ds
sahf
sbb
jb
xchg
xchg
push
icebp
adc
inc
push
pop
outsl
xor
dec
nop
mov
pop
mov
inc
pop
das
or
mov
sub
pop
cmpsl
pop
adc
dec
jecxz
mov
mov
or
or
adc
or
sbb
xor
mov
mov
lds
jecxz
sbb
fwait
test
fstpt
dec
nop
add
into
mov
mov
test
inc
jp
cmpsb
jno
arpl
adc
mov
imul
das
xor
aad
jb
sub
push
sub
enter
mov
mov
loopne
shlb
and
pop
scas
jmp
mov
fisttpl
dec
xchg
inc
in
and
xchg
cmp
decl
jecxz,pn
aad
pop
scas
outsl
das
jo
jl
daa
cltd
cmp
push
stc
or
mov
sbb
sub
ret
sub
cs
lods
cwtl
subb
in
out
imul
jnp
or
clc
fst
sbb
cmp
test
rorl
cmpsl
push
dec
lret
push
out
inc
lea
out
xchg
pop
addb
xchg
xchg
lahf
mov
mov
mov
loop
insl
sbb
lds
sbb
mov
sahf
mov
cli
in
push
xchg
lds
lods
or
dec
icebp
cmp
fdivrs
add
mov
clts
inc
out
mov
adc
orl
and
and
pop
inc
hlt
aaa
cld
and
xor
mov
in
in
cmp
cmpsl
sti
movsl
ror
addr16
shl
decb
xchg
xchg
add
cmp
push
lock
xor
xchg
fildll
nop
mov
push
mov
sub
add
cmp
mov
cs
cmc
and
arpl
push
std
data16
rcrl
and
or
inc
pop
add
add
lock
adc
arpl
jle
cmp
div
ss
jle
mov
pop
pop
aas
inc
mov
pop
andnps
popf
inc
sub
mov
jge
xchg
shlb
pop
out
or
movsb
xchg
popa
in
dec
stos
out
notb
mov
cmpsl
or
aad
push
ja
pop
lods
test
jo
push
cmp
icebp
imul
jb
test
push
adc
jae
pop
and
sbb
je
lret
or
js
push
insb
in
or
int
arpl
mov
in
xchg
out
xchg
iret
popa
inc
cmp
push
repz
scas
ss
or
aas
fistl
inc
jmp
push
je
sbb
jp
int3
push
mov
push
xor
stc
xchg
ficomps
arpl
outsb
ljmp
inc
mov
add
xor
or
out
jge
pushf
xorl
push
add
aaa
testl
bnd
jge
mov
jno
add
jecxz
cli
mov
adc
add
lods
mov
filds
in
outsb
xchg
es
cld
xor
or
push
sbb
mov
cmpsl
xor
insl
dec
push
inc
pop
mov
adc
loopne
out
pop
loopne
add
mov
daa
lds
inc
loop
in
lods
cmpsb
fstpt
es
jmp
mov
mov
push
fbstp
aas
adc
inc
sbb
pop
fwait
adc
mov
adc
mov
xor
loope
pop
dec
sub
orb
shrb
stos
adc
mov
fucomp
je
movsl
out
lods
std
mov
outsl
mov
sbb
roll
andl
xchg
addr16
imul
and
clc
push
por
mov
das
and
and
int3
mov
jg
sbb
hlt
xchg
adc
iret
movsb
out
loope
xor
out
pop
mov
xchg
pop
gs
and
dec
imul
sahf
lds
jbe
cmp
push
adc
cmp
add
ds
imul
push
inc
and
or
data16
mov
stc
repnz
mov
pushf
popa
fs
or
push
inc
mov
push
shrb
push
mov
jle
cmp
outsl
pop
push
repz
movsl
mov
push
jne
mull
xor
stos
les
and
enter
bound
dec
pop
xor
idivl
adc
mov
cmpsl
push
cmp
sbb
das
movsl
inc
rclb
hlt
mov
test
fwait
inc
jno
jo
lahf
aam
cs
xchg
inc
fldenv
stos
mov
jge
adc
das
or
inc
mov
jg
push
imul
sub
js
and
arpl
and
fs
rcl
aad
sbb
dec
out
xor
es
jle
dec
fidivl
xchg
adc
mov
xchg
xlat
cmp
js
push
dec
cltd
inc
lret
sbb
or
lods
jge
xor
mov
inc
mov
and
sub
fmul
fsubl
xlat
add
scas
loopne
fisubs
iret
ret
cs
push
sbb
in
jle
mov
out
rcr
inc
test
div
mov
or
cmp
xchg
xchg
xorl
mov
insl
mov
pop
mov
jns
fiaddl
inc
imull
cmp
jnp
cs
ficoml
fstps
test
es
jno
pop
bound
adc
or
fiaddl
mov
sbb
push
movsl
push
jecxz
pop
sub
cmp
cwtl
clc
rol
aas
jmp
sbb
dec
cmp
dec
push
shll
push
pop
dec
data16
and
ja
xor
mov
inc
loopne
shlb
jmp
and
sub
cmp
mov
sbb
cwtl
xchg
sbb
cmc
and
or
jb
xlat
fistpll
int3
mov
rorl
stos
test
lret
sbb
cli
sub
stc
stc
xor
gs
add
pop
sub
les
pop
push
scas
cmp
fsubl
sub
das
enter
or
shlb
xchg
jg
into
mov
sahf
outsb
mov
sub
mov
ficomps
mov
sbb
xor
add
js
mov
dec
cmp
clc
imul
or
dec
fadds
jo
test
mov
adc
jmp
outsb
mov
push
xchg
xor
mov
test
mov
movsl
rcl
mov
push
repnz
out
or
shlb
rclb
jg
filds
push
clc
adc
aaa
mov
push
cmc
adc
fldl
xor
out
gs
pop
pop
add
or
adc
test
xor
out
out
bound
xor
adc
pop
dec
in
cld
mov
xchg
xchg
mov
jg
pop
nop
push
inc
es
call
inc
dec
xor
push
inc
hlt
test
fwait
cmp
mov
fdivrs
pop
aam
mov
sbb
rcrl
ficoms
leave
nop
sub
add
or
or
outsl
push
mov
out
imul
clc
fisttpll
cld
xchg
dec
daa
and
popf
lds
xchg
out
mov
mov
mov
cltd
and
cltd
movsl
ret
out
jp
fsubrl
out
push
or
lret
idivb
in
add
jb
pushf
clc
sub
in
ds
adc
mov
xchg
cmpsb
or
mov
stc
cmp
shl
andb
dec
adc
cmp
mov
lret
mov
cwtl
fwait
and
push
div
lcall
add
mov
jb
cmc
shrb
subb
add
insl
ss
into
mov
push
xlat
je
negl
movsb
pushw
and
test
fsubs
ds
movsl
inc
push
ljmp
or
fldcw
pop
mov
sbb
fisubrl
sub
les
popf
ds
push
mov
in
outsl
dec
mov
lcall
mov
mov
pop
out
or
jg
mov
pusha
lcall
in
into
in
cmp
dec
mov
into
jbe
inc
add
pop
prefetchwt1
pop
fucom
ja
mov
popa
filds
push
inc
imul
push
int
mov
mov
lcall
imul
and
or
cmp
das
sub
ss
shl
mov
fmull
pop
ljmp
xchg
test
push
outsb
fcoml
push
fiadds
cmp
inc
cltd
dec
rclb
out
inc
test
or
push
popf
push
push
mov
jg
push
inc
mov
and
mov
push
mov
jno
ret
pusha
adc
pop
dec
idiv
repnz
and
and
sbb
mov
js
imul
push
repnz
add
sti
into
push
mov
leave
aam
push
push
push
popf
dec
cmp
pusha
sub
mov
mov
pusha
xchg
or
in
addr16
mov
ds
mov
push
iret
cwtl
stos
cmp
stos
mov
pop
das
ret
cmc
cmpsl
out
mov
mov
sbb
shlb
inc
out
and
push
and
and
dec
push
xor
cwtl
mov
adc
mov
push
mov
lods
icebp
push
xor
call
adc
sub
sub
jns
xor
cmp
or
std
sub
loope
repz
fiadds
inc
lret
dec
mov
push
out
inc
jmp
outsl
mov
jl
arpl
mov
mov
xchg
sahf
inc
out
mov
pushf
add
out
in
jnp
jmp
in
mov
jge
fadd
popf
ljmp
movsb
mov
lret
sbb
nop
add
inc
fcomp
dec
xor
lret
jbe
push
mov
sbb
into
icebp
inc
daa
inc
cli
cmpsb
int
lret
pop
mov
sub
push
pop
lcall
push
mov
in
aad
fcoms
inc
jg
or
sub
cmp
add
mov
mov
in
cmp
cmp
xor
cmp
aaa
aaa
xchg
stos
adc
cld
out
pop
jb
dec
fsubrl
nop
add
or
sub
dec
les
test
inc
test
dec
mov
loopne
push
scas
icebp
dec
inc
adc
inc
out
sbb
pop
mov
inc
mov
test
add
cmpsb
incb
ds
fbstp
inc
insl
pop
adc
adcl
jae
loop
movsb
inc
mov
mov
stos
cltd
xchg
stc
adc
xor
adc
sub
mov
adc
push
fwait
dec
sub
jae
or
repz
xor
daa
lds
cli
ljmp
je
jno
clc
lds
add
mov
cltd
scas
sbb
cmp
mov
hlt
das
jb
mov
shr
out
lret
pusha
orl
xor
push
daa
cli
in
ds
xor
sar
mov
mov
setae
mov
lods
mov
inc
mov
jmp
or
in
mov
pop
push
or
add
test
push
and
repz
rolb
nop
cmp
pop
xchg
arpl
cmp
in
xchg
or
cmp
ret
pusha
mov
sub
jle
inc
xor
je
in
lea
lods
jmp
in
nop
mov
sarl
leave
pop
sub
clc
xchg
or
xchg
bound
xor
fwait
dec
xchg
inc
fisubrl
push
mov
push
mov
and
add
and
mov
inc
pop
mov
out
inc
xchg
scas
repnz
cmp
bound
ret
test
mov
mov
push
mov
in
clc
aas
cmc
dec
out
ljmp
xor
mov
leave
or
fwait
daa
in
xchg
mov
inc
add
add
das
cmp
nop
xor
dec
psrld
mov
es
push
pop
test
nop
pop
jp
iret
inc
mov
les
add
push
aas
xchg
xor
push
mov
xor
and
adc
fdivrs
add
adc
lahf
sbb
movsl
pop
in
mov
jns
lds
sahf
test
push
int
pop
pop
rcrl
mov
jp
imul
inc
gs
mov
repz
inc
out
in
sub
push
inc
jae
shrb
popa
or
lcall
and
lods
inc
arpl
adc
mov
scas
inc
lahf
and
lock
iret
sbb
or
fwait
push
lcall
call
movsb
icebp
cmpsb
sub
xor
jns
dec
iret
pop
inc
pop
bound
mov
mov
test
fsubr
jmp
mov
scas
mov
sub
or
mov
imul
adc
mov
repz
addl
adc
jnp
fldenv
dec
xorl
adc
das
adc
jb
ficoml
out
orb
jae
sahf
pop
lahf
or
jo
gs
out
lods
push
mov
add
sub
sbb
scas
inc
call
fisubs
xchg
cwtl
pop
mov
sub
xlat
pop
jo
xchg
dec
nop
sbb
mov
xor
test
inc
mov
cwtl
push
pop
fcomps
in
mov
in
mov
outsb
sbb
cmc
aad
add
out
andb
and
aam
jmp
fiaddl
jb
pop
data16
push
roll
cmp
int3
push
cli
xchg
std
jns
sbbl
sbb
mov
inc
add
add
jmp
mov
xor
xor
sbb
fisubrs
fwait
mov
push
sti
rolb
mov
dec
outsb
shl
int3
into
mov
inc
out
xor
outsl
mov
mov
outsl
sbb
push
leave
adc
add
ds
dec
fstpt
xor
cmc
push
push
inc
mov
mov
xchg
cli
subb
mov
out
cmc
outsb
mov
pop
adc
mov
inc
pop
inc
addr16
push
bound
push
popa
xor
adc
and
cmp
lcall
iret
jne
adc
push
adc
sub
aam
fildl
cwtl
lods
lret
jne
iret
mov
rcll
push
add
cli
sbb
frstor
ret
in
dec
test
mov
dec
divl
cmp
sbb
jp
lea
xlat
jp
xlat
stos
jg
cmp
stos
sbbb
lcall
stos
in
xor
push
shll
mov
cmp
fistl
icebp
inc
cli
insb
mov
lahf
andl
mov
pushf
data16
test
push
sbbb
pop
int3
mov
mov
cmc
stos
fsub
fdivl
mov
sbb
clc
jb
out
icebp
aad
xchg
test
xchg
fwait
jmp
shll
in
mov
push
push
lahf
pop
xchg
data16
mov
pushf
shl
xor
dec
mov
fsubp
inc
shrb
stos
jecxz
jae
mov
aad
inc
pop
xchg
mov
sbb
and
stos
neg
mov
shr
imul
stos
mov
or
js
dec
inc
ret
sbb
scas
dec
out
cmpsl
adc
mov
in
imul
aam
jmp
lds
pusha
or
mov
into
test
mov
mov
xsavec
jp
nop
inc
mov
sbb
daa
adc
mov
test
into
insl
ret
cwtl
sti
cli
jmp
push
pusha
add
sets
push
fistps
mov
sbb
lods
arpl
into
inc
jp
xlat
cmp
mov
test
push
xor
sti
lcall
outsb
mov
mov
cmp
cltd
xor
sarb
pusha
adc
mov
test
cmp
cmc
enter
inc
and
fidivl
in
mov
cmp
gs
ret
adc
out
pop
roll
xor
add
jge
cmp
outsb
xor
test
sbbl
lods
cld
lock
leave
mov
scas
aaa
xor
sbb
loope
mov
insl
adc
inc
imul
sub
data16
pop
fs
cmc
and
jmp
jmp
or
cmpsb
mov
add
add
lock
cltd
and
movsb
jo
and
jb
loop
data16
fwait
movsl
push
int
dec
bound
xchg
mov
rcrb
pop
xchg
lds
pop
xchg
pop
jl
jmp
ret
mov
xchg
xchg
rcrb
pop
inc
hlt
test
mov
fwait
dec
mov
hlt
adcb
push
adc
xor
pop
pop
mov
sbb
insb
mov
fdivs
push
pop
mov
mov
adc
notl
dec
jp
xor
pop
pop
push
xchg
jnp
mov
mov
js
mov
stc
mov
mov
std
sbb
nop
lods
test
jl
mov
and
sarl
pusha
jecxz
fsubr
push
dec
pop
inc
insl
inc
cmpsb
ror
sub
add
testl
mov
pop
push
mov
and
daa
sbb
pop
adc
ret
fs
outsl
paddb
jmp
jge
pop
cmp
aaa
jbe
test
push
xor
jnp
mov
test
sub
lds
fdivl
adc
test
lds
sbb
dec
pop
std
aaa
pop
enter
out
fidivrs
clc
ret
xchg
mul
mov
in
mov
in
adc
xor
xlat
leave
add
pop
jb
adc
pop
fidivrs
sbb
pop
fsubrs
push
sbb
add
adc
addl
sti
icebp
mov
and
ret
test
lock
push
push
mov
insl
loopne
push
push
cltd
dec
mov
das
xchg
cmpsb
mov
inc
fwait
lret
les
loop
jmp
cwtl
mov
mov
dec
in
imul
and
andnps
mov
shlb
sub
aam
std
je
xchg
loope
scas
jb
pop
ja
mov
mov
test
cmp
mov
push
ja
roll
jl,pt
pop
fldlg2
xor
daa
push
cwtl
and
les
dec
mov
inc
sub
adc
leave
cmp
dec
or
xchg
mov
inc
cmp
hlt
inc
scas
mov
clc
movsb
jo
mov
aaa
jnp
cwtl
arpl
mov
pop
dec
lds
pop
jmp
inc
push
mov
fs
mov
js
xchg
xor
jbe
dec
aas
int3
or
stos
push
out
outsb
adc
hlt
in
dec
mov
stos
mov
adc
leave
xchg
xchg
jle
dec
neg
mov
add
jno
imul
dec
sub
add
ds
int
sbb
aaa
xchg
cmp
or
push
inc
incl
pop
jle
lahf
insb
jl
dec
cli
out
loopne
xor
sub
mov
aam
xor
jl
xchg
lods
hlt
cmpl
ljmp
fwait
cmp
xchg
enter
mov
mov
or
adc
jecxz
daa
cmp
es
mov
scas
sahf
repnz
scas
cs
out
mov
stos
outsl
lods
sub
aam
cmp
xchg
int3
xor
xlat
sub
pop
idivl
or
push
out
mov
icebp
push
lods
dec
je
aas
out
xchg
out
mov
sub
roll
insl
jno
scas
mov
cmp
icebp
and
imul
sbb
addl
mov
je
mov
push
addb
pop
xchg
inc
add
sti
ljmp
fdivrp
mov
test
inc
out
aaa
push
seta
sarl
xchg
insl
bound
fcoms
ss
adc
sub
adc
dec
or
cmp
int3
jo
rol
inc
cwtl
test
pushf
stos
fimuls
std
or
cmp
ja
stos
movb
sub
jbe
sub
cmp
inc
sub
push
add
faddl
sub
cmp
pop
aaa
adc
pushf
sbb
mov
popf
adc
aas
mov
xchg
jmp
ds
sysret
mov
das
pop
call
jno
xlat
or
sbb
push
inc
frstor
out
jo
mov
push
lods
jb
lock
gs
inc
mov
and
ret
clc
ficomps
cwtl
sub
out
jl
sbb
mov
dec
icebp
inc
xor
sub
mov
getsec
repz
mov
mov
scas
cmp
jo
cmp
or
or
push
jge
lret
hlt
xor
push
mov
cmpsb
pusha
jbe
jg
and
push
mov
sbb
pop
xchg
push
orb
nop
push
lock
and
out
cmc
adc
in
dec
adc
pop
popa
xchg
push
test
sub
rcll
fdivs
fsubrp
lock
push
adc
hlt
adc
sbb
ljmp
out
imul
inc
incb
jecxz
xchg
push
out
and
add
mul
xor
in
mov
icebp
jno
shrl
repz
lea
lahf
push
aam
ficomps
test
xor
cmpsb
lods
mov
aas
cmp
popa
inc
scas
and
or
loop
out
cmp
arpl
dec
adc
cmp
xchg
lea
or
aas
pusha
js
in
adc
outsl
push
dec
shl
insb
test
adc
je
mov
test
sbb
inc
mov
inc
es
out
xlat
lock
push
in
and
lods
xor
pop
mov
and
jne
pop
mov
push
mov
int3
sub
gs
cmp
fcmove
in
es
scas
cmpsl
jb
cmp
dec
imul
jnp
test
clc
xchg
mov
pop
subb
scas
or
mov
inc
add
inc
xchg
xchg
xlat
scas
add
jecxz
push
daa
mov
mov
inc
scas
xor
popf
mov
out
inc
loop
push
pop
sahf
mov
enter
push
sbb
dec
test
ss
loope
mov
enter
dec
imulb
jo
mov
sbb
jmp
or
xchg
xor
push
fsubl
in
movsl
or
ret
fwait
in
cmpsb
shrl
pop
jo
pop
xchg
cld
jo
movsl
mov
gs
mov
testb
imul
add
setae
scas
mov
mov
xor
lods
inc
imul
mov
popa
pop
push
repz
aam
xor
shrl
test
loop
repz
in
and
in
insl
mov
xchg
arpl
cmc
push
pop
in
pop
xchg
int
xchg
add
xchg
push
out
mov
or
dec
pop
popf
mov
mov
iret
cmc
ss
pop
cmp
loopne
inc
dec
adc
sub
inc
jb
imul
movsl
jp
pop
test
std
xor
pop
sbb
add
nopl
push
es
stc
xchg
mov
mov
inc
leave
pop
add
inc
lahf
add
mov
cmp
xor
ss
dec
push
pop
lret
ss
mov
mov
push
fcmove
aaa
cltd
out
or
xor
sub
push
enter
lds
jns
xlat
popa
es
pop
mov
xchg
lock
ss
stos
xor
xor
sti
push
ret
jmp
sub
jp
mov
popa
movsl
sub
xchg
xchg
std
je
jl
icebp
mov
into
jbe
pop
pop
stc
mov
sub
inc
inc
add
or
xchg
ja
push
adc
inc
inc
add
or
das
cmpsb
sub
push
jae
inc
into
sbb
inc
dec
iret
movl
mov
mov
mov
or
mov
fucomip
loope
xchg
mov
inc
cmp
dec
mov
mov
sbb
adc
fists
icebp
aam
mov
mov
rolb
cmpsl
or
fcmovne
and
pop
fadd
shlb
lret
xchg
lahf
movsb
aam
mov
out
in
pop
sbb
in
rcl
jl
lods
mov
mov
aam
jg
inc
sbb
mov
popa
and
mulb
jl
scas
jns
mov
cmpsb
fistpl
clc
jl
mov
jecxz
mov
fildll
mov
call
out
int3
lods
scas
or
xchg
mov
in
cmpsb
fisubrl
dec
jnp
adc
xor
cmp
popa
lods
add
daa
pop
inc
adc
lds
insb
dec
sbb
mov
adc
adc
cmpb
add
push
push
mov
cmpsl
push
sbb
bound
stos
fucomp
aad
inc
jnp
aam
and
scas
cmp
or
jl
cmc
add
popf
popf
and
loop
jge
cwtl
icebp
xlat
mov
pop
rcrl
sbb
rol
insb
mov
mov
leave
mov
lcall
mov
addb
mov
add
or
and
hlt
cld
cmpsb
movsl
jle
xchg
mov
aas
nop
pushf
sub
mov
das
xchg
sbb
mov
mov
xchg
push
mov
mov
dec
out
xchg
dec
xchg
dec
leave
dec
int3
jbe
add
or
jne
cmp
mov
mov
pop
jge
in
popf
movsl
mov
xor
popa
insb
sbb
mov
testb
push
imul
cmp
or
xchg
movsl
out
sbb
xor
cmp
shll
pop
movsb
and
mov
and
xor
push
mov
xchg
std
push
xchg
daa
push
adc
adc
sahf
sub
lcall
scas
jge
inc
and
insb
jle
fstps
mov
mov
mov
cmp
loop
jmp
stos
int
sbb
mov
cmp
jne
cmp
les
scas
call
dec
push
dec
sbb
pushf
mov
jnp
jp
mov
pop
cmpsb
mov
mov
dec
pushf
cmp
add
mov
cld
mov
sarb
and
stos
dec
imul
mov
in
fdivrl
adc
jecxz
fsubl
sbbl
ljmp
xchg
popf
jo
adc
out
adc
addr16
lahf
cmpsb
or
test
scas
lods
aas
inc
cmp
rcrl
xchg
or
lcall
mov
xor
std
mov
jnp
mov
into
jle
aaa
dec
stos
lahf
ss
cmpsl
lahf
jle
loop
rcrl
shrb
jbe
ds
inc
cmp
sub
cs
xchg
inc
push
mov
mov
xchg
dec
pop
cltd
imul
cmp
dec
dec
enter
xchg
cmc
xchg
lods
mov
or
mov
inc
xchg
lret
mov
sarl
xchg
pop
sbb
call
subl
mov
fisubrl
gs
gs
cld
cmpsl
sarb
inc
inc
repnz
cmp
fcmovnb
pop
testl
ror
std
fnstsw
jns
aaa
cmc
mov
xchg
sub
fdiv
xchg
mov
push
sahf
data16
xor
icebp
aam
loop
fidivrs
adc
sbb
into
int
ficoms
inc
daa
stos
cli
or
bound
jno
jg
and
sub
pop
jmp
xor
jg
cmp
pop
fcompl
lret
jnp
and
sbb
jne
pop
icebp
jne
arpl
call
fldcw
pop
sbb
sbb
ds
enter
jb
push
je
imul
push
and
xchg
or
sub
push
out
add
pop
xchg
into
ljmp
pop
outsl
and
xchg
xchg
dec
std
mov
adc
out
xchg
imul
pop
mov
xor
clc
push
or
nop
mov
and
mov
leave
jne
xchg
test
cmp
enter
test
testl
jge
jnp
mul
push
mov
xchg
fs
out
out
scas
jo
jnp
scas
and
notl
pop
mov
lahf
mov
aas
inc
mov
call
std
lret
push
iret
push
push
mov
clc
ffreep
sbb
mov
call
and
cmp
sbb
and
fwait
jmp
xchg
mov
mov
sbb
lcall
mov
mov
mov
adc
jl
jg
cmpsl
incl
ss
mov
lds
rcrl
sub
aad
sub
ljmp
popa
adc
psubw
add
enter
subl
and
ss
shll
aad
dec
mov
out
gs
xor
mov
sub
xchg
rclb
sub
dec
push
test
insb
jbe
dec
adc
pop
push
int3
inc
les
test
lahf
and
inc
nop
or
cmc
pop
mov
leave
enter
movsb
sbb
call
or
rol
sbb
pop
sbb
ljmp
ja
movsl
loopne
jl
xchg
mov
xlat
cmp
push
daa
lahf
jo
sub
sbb
mov
and
jb
adc
and
popa
jp
sbb
sbb
movsl
mov
das
pop
ret
lcall
xchg
dec
fstpl
jo
add
loop
hlt
inc
pop
cmp
fwait
xchg
fwait
and
add
loop
stos
test
fistpl
jo
cwtl
or
jecxz
pop
arpl
or
daa
mov
fidivl
adc
fidivrl
inc
adc
jmp
data16
lcall
ror
lock
out
setae
jmp
push
movsb
sbb
dec
dec
fdiv
mov
pop
jmp
adcb
jno
rcll
je
jnp
jb
inc
ret
test
scas
lret
ficompl
lock
pcmpeqw
jmp
clc
push
pop
call
jmp
rorb
lea
mov
out
mov
les
ret
dec
jae
xchg
or
adc
xchg
mov
in
push
std
xor
jl
pop
xchg
push
in
or
rcrl
das
mov
cmc
test
cld
dec
fld
stos
xchg
fstps
leave
mov
std
mov
mov
cmp
dec
sbb
sub
pop
jne
inc
jbe
push
imul
adc
push
test
pop
xchg
jge
mov
sbb
adc
test
and
outsb
sub
jo
sbb
add
pop
lret
pop
les
jb
xor
cmpsb
inc
mov
repnz
add
pop
call
mov
mov
bound
jae
xchg
sub
or
push
sti
cld
pop
sbb
mov
je
std
adc
dec
sub
jno
jmp
cmc
repnz
rclb
mov
jno
pusha
mov
dec
loope
jbe
jecxz
aaa
cmp
repz
inc
mov
jne
fidivrs
add
xor
and
cmpsb
inc
mov
rcl
call
jge
fdivs
fists
inc
push
jns
fisubrl
popf
movsb
jbe
add
add
xor
test
xor
pop
push
insl
lret
mov
mov
lret
fwait
mov
pop
add
jno
std
int3
sub
cmpsb
inc
and
insl
and
push
xchg
imull
jl
jne
ret
mov
mov
push
pop
ret
fmull
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
.byte
cmpsl
.byte
.byte
fimull
cld
cmp
out
push
jo
in
cmp
mov
imulb
repz
stc
flds
inc
es
jne
fldcw
push
jmp
inc
pop
loope
mov
sub
or
fs
test
stos
daa
insb
jnp
xor
mov
loop
cmpb
mov
inc
xchg
dec
lahf
gs
and
sbb
pop
xchg
mov
vpermt2w
das
inc
pop
push
mov
fisubl
std
mov
jge
repz
mov
jnp
sahf
repz
and
adc
test
push
dec
lret
jge
adc
mov
inc
mov
fsubs
mov
xor
xchg
andb
push
cmp
sbb
mov
add
ret
inc
daa
push
test
sbb
ss
test
out
cmpsl
dec
cmp
movsl
das
cmp
mov
les
call
andb
call
cmp
js
cwtl
sti
mov
mov
pop
mov
pop
sub
adc
dec
pusha
cmp
push
jae
movsl
sbb
idivl
dec
cld
sti
dec
push
push
lret
jge
cmp
into
xor
fdivp
imul
aad
lods
outsl
out
lcall
leave
inc
cmpl
std
add
add
fwait
cld
pop
stc
outsb
and
jnp
xorb
cmpl
mulb
pop
negl
popf
mov
sbbl
mov
push
fwait
int
fistl
pop
xchg
xor
mov
std
xchg
pop
out
push
std
test
mov
xor
cmp
cmpsl
loope
sub
mov
and
mov
jecxz
adc
imulb
shlb
lods
pusha
jge
aam
insb
out
cmc
fwait
push
or
call
sbb
popf
std
leave
push
mov
out
imul
popf
sbb
das
test
shl
fimuls
push
movsl
out
and
orl
jo
and
mov
dec
je
sub
jmp
or
cmp
and
leave
ds
xchg
inc
sub
push
sbb
jp
lea
or
ja
dec
cmp
stos
lods
jle
add
mov
dec
je
and
mov
out
mov
sarl
mov
repnz
cltd
jge
cmc
mov
push
mov
xor
daa
loope
test
ljmp
jg
enter
xor
cmpsl
insl
and
inc
addl
add
mov
or
push
jmp
dec
jp
cmp
jae
or
js
jmp
rolb
mov
insl
push
sub
cs
inc
testl
lods
sub
mov
in
addr16
sbb
sbb
push
out
shlb
repz
jl
jge
jnp,pn
xchg
pop
outsl
sbb
out
push
jmp
xlat
pop
jl
outsl
cmp
icebp
or
mov
push
dec
mov
mov
gs
insb
xor
test
fidivrs
fwait
int3
stos
leave
enter
movsb
mov
cmp
fs
loope
pop
jno
fwait
push
adc
or
sbb
sbb
orb
or
std
mov
xchg
xor
sub
xchg
popf
loopne
inc
xchg
jecxz
mov
out
push
pop
dec
es
or
adc
in
rcrl
mov
js
xor
xchg
gs
or
cmpb
addr16
clc
mov
ja
addr16
das
push
pcmpeqw
in
adcl
nop
dec
adc
fcomps
pop
int
xor
xor
lcall
pop
xor
adc
stc
shll
sbb
repnz
int3
jl
and
bswap
scas
pop
xchg
xsaves
loopne
add
cmp
dec
addl
scas
sti
inc
mov
cmpsl
popa
ss
in
xchg
adc
cmp
mov
jg
or
mov
pop
pop
out
mov
mov
addl
pop
mov
adc
pop
dec
mov
mov
arpl
push
xchg
push
shlb
aas
fs
dec
mov
jg
pop
aas
push
ljmp
jl
jne
dec
dec
movsb
sti
dec
sbb
push
jb
lods
mov
pusha
gs
jnp
enter
stos
xchg
orl
jmp
inc
popl
les
mov
hlt
sti
imull
sub
jl
iret
mov
push
push
bswap
popa
xchg
mov
sbb
xchg
insb
out
xor
fimuls
ja
stos
mov
cmp
femms
je
ja
in
push
cmpsl
enter
mov
mov
aas
add
andl
lock
int
cmp
flds
adc
outsb
add
out
jge
mov
and
mov
push
inc
in
cmp
or
outsl
mov
inc
mov
gs
sti
mov
fcompl
repnz
cmc
sbb
xchg
pusha
pop
js
mov
jne
pop
sar
dec
test
sti
and
hlt
aas
or
pushf
dec
test
movsl
pop
sbb
ljmp
scas
mov
mov
roll
jo
adc
insb
push
add
dec
aad
jbe
sahf
testl
pop
sarl
enter
das
jno
or
mov
mov
xor
mov
cs
sbb
ja
mov
fimull
jnp
jle
shll
les
mov
in
loopne
push
jge
andb
shll
add
pop
jg
inc
lret
es
or
pop
sbb
jbe
mov
xor
fists
lcall
test
adc
adc
push
mov
loope
pop
in
jnp
pop
mov
add
into
or
jae
in
push
jb
pop
push
ret
mov
add
sbb
iret
xor
push
add
lcall
out
inc
mov
xor
ljmp
out
out
shufps
or
fildll
push
scas
inc
sub
lods
jle
inc
les
dec
insb
dec
xchg
cmp
xorb
xchg
xchg
add
mov
add
cmp
iret
fdivl
pop
js
movsl
lea
dec
jle
int3
pop
fwait
movsb
outsl
mov
cwtl
lret
dec
dec
push
inc
xorb
inc
xchg
fwait
pusha
nop
ja
repz
fists
je
mov
scas
int3
xchg
sub
pop
and
push
movsb
test
dec
in
fimull
push
leave
out
mov
sti
or
xchg
push
roll
mov
inc
mov
add
xchg
insl
ja
jns
mov
inc
daa
mov
push
mov
adc
mov
pop
cmpsl
jl
mov
inc
sbb
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
.byte
cmpsl
.byte
.byte
sbb
xchg
shlb
mov
cmp
aas
mov
and
fwait
dec
jae
push
movsb
dec
mov
mov
aad
jg
mov
call
enter
aam
adc
pop
dec
sub
dec
out
mov
mov
fcoml
add
scas
pop
push
lods
xchg
xchg
hlt
mov
call
rdtsc
ret
je
cmpsb
or
mov
xchg
in
jbe
ds
sbb
pop
outsl
and
mov
call
dec
andb
cmp
test
jb
clc
sbb
cmp
shrb
in
out
dec
fldcw
xchg
add
in
es
in
add
sub
aaa
idivb
fwait
test
mov
xor
movsl
pushf
mov
fidivrs
stc
out
jle
dec
daa
fsts
sub
lds
dec
imul
mov
xor
in
ret
ja
stos
jnp
cmp
icebp
lock
jnp
daa
movsl
out
stc
cmc
lret
jecxz
pushf
add
testl
test
push
sbb
and
lret
cmp
inc
daa
cwtl
add
add
sub
add
push
push
xchg
mov
mov
or
sbb
sbbl
cltd
cwtl
push
je
testb
sub
enter
jp
ds
dec
fstpt
in
sub
adc
mov
and
sbb
fmul
jge
ret
nop
rorb
out
fldl
xor
sub
lock
rcll
outsl
add
adc
lret
inc
push
add
stos
outsb
pop
test
hlt
or
rcrb
jle
cmp
pop
add
dec
or
addr16
in
mov
fdivl
and
ss
or
in
gs
pop
add
mov
stc
call
adc
mov
sub
push
and
sbb
in
shlb
sub
lret
movsb
pop
cmpsl
divl
xor
mov
lret
insb
pop
jg
xlat
icebp
sbb
mov
jo
sbb
clc
inc
xor
fsubrs
mov
push
sub
and
inc
mov
dec
and
mov
pop
mov
test
dec
in
jns
mov
sahf
pop
xor
aad
adc
repnz
cwtl
ss
int3
xor
push
daa
xchg
dec
mov
jno
push
in
movsl
cs
lret
arpl
xorl
xchg
xchg
pop
push
sti
jmp
into
lock
adc
movsl
and
movsb
popf
push
addl
mov
push
dec
push
xchg
arpl
pop
cs
stc
call
mov
pop
addb
mov
pop
inc
sbb
stc
mov
push
aad
std
call
xchg
out
adc
test
pusha
mull
sbb
jmp
sub
mov
aam
xchg
lods
adc
pop
pop
outsb
adc
and
fs
and
cmp
iret
lcall
jmp
aad
nop
adc
xchg
out
jns
mov
cltd
mov
hlt
xchg
in
push
add
sub
addb
fsubl
lret
fs
dec
xchg
jl
lds
sub
or
aad
cltd
daa
xor
leave
jnp
xchg
dec
mov
daa
mov
push
mov
mull
pop
les
lret
xchg
push
and
stos
clc
arpl
icebp
sub
push
dec
or
shrl
notl
bound
out
dec
divb
jl
in
sbb
je
mov
jg
push
adc
jg
and
popl
cmp
ja
test
movsb
mov
dec
int
jmp
mov
sub
pop
push
mov
push
roll
add
or
int
clc
scas
movl
mov
dec
mov
mov
jmp
pusha
pop
dec
movsl
inc
in
sbb
cltd
lahf
mov
outsb
jl
out
ret
jl
add
cmp
in
push
mov
sbb
inc
pop
js
sbb
pop
sub
es
xor
adc
lahf
fidivrs
fwait
xor
ficoms
ret
xchg
cmp
pop
jmp
lds
addb
mov
xorb
cmp
in
or
enter
lahf
loope
ja
xchg
icebp
push
add
push
mov
cwtl
in
push
mov
scas
cmpsb
test
add
mov
sarb
rorb
mov
xchg
xchg
jmp
jns
cmp
dec
in
popa
jae
ret
pop
lret
divb
inc
push
cmp
push
loop
adc
popa
gs
popf
sub
andl
or
sub
sbb
inc
pop
cmpsb
mov
in
int3
mov
sub
out
icebp
dec
inc
loopne
cmpsl
loop
xchg
stos
cmp
bound
test
push
and
test
push
and
test
push
shl
push
or
adc
jmp
mov
test
pop
sarb
add
cmp
mov
mov
cmp
push
test
lret
les
fdivrs
mov
lock
icebp
cmpsl
xor
mov
ja
int
mov
test
lods
js
nop
outsb
jecxz
push
adc
xlat
mov
push
ljmp
cmp
pop
mov
popf
clc
push
jne
pop
push
ret
push
sbb
enter
ja
mov
cld
sub
push
icebp
sbb
in
jl
pusha
aas
out
out
xor
jne
xchg
add
add
push
and
dec
mov
adc
xchg
jbe
cltd
cmpsl
jbe
lret
dec
mov
inc
fcmovnb
fstpt
adc
out
xchg
shld
add
loopne
mov
push
add
inc
sub
mov
out
cli
cs
popa
lret
mov
mov
daa
or
shrl
jle
mov
or
bound
jecxz
nop
mov
dec
out
fst
or
call
arpl
cs
mov
push
std
jmp
dec
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
.byte
cmpsl
.byte
.byte
js
loope
shl
fstps
test
out
inc
loop
sub
inc
push
loope
test
pop
icebp
lea
mov
mov
mov
sbb
add
js
jb
xchg
test
xchg
jns
test
mov
clc
push
add
add
fdivrp
or
sti
outsw
pop
push
sub
and
inc
pop
jl
imul
xchg
stos
jae
push
adc
arpl
xchg
out
sbb
jo
mov
test
outsl
addr16
cmp
pop
adc
xor
and
andl
rorl
mov
mov
xor
dec
arpl
std
inc
xchg
push
xor
clc
lods
mov
popa
mov
ja
xchg
jbe
clc
sbb
pop
fstpt
xchg
ja
mov
pop
cmc
fldcw
outsb
mov
cmpb
push
bound
mov
loope
lret
fsubl
and
nop
out
dec
mov
jns
out
outsl
pop
test
mov
mov
pop
pop
mov
fs
leave
out
or
in
jb
mov
push
mov
pop
pusha
and
fstp
rolb
movsb
pushf
aad
rclb
push
inc
into
pop
push
sbb
addb
je
out
lds
jecxz
jo
rcrb
es
xchg
lds
popa
jne
adc
int
stos
ficompl
sub
pop
sti
test
adc
imull
std
repz
stos
call
pop
fldl
xchg
sub
out
mov
cwtl
inc
dec
hlt
add
stc
xchg
xchg
hlt
aas
pop
mov
add
in
dec
adc
jl
or
aaa
inc
xlat
mov
jns
cmp
ljmp
inc
icebp
push
xchg
sub
test
jmp
sbb
rolb
lds
sbb
xchg
fnop
clc
sbb
mov
mov
out
adc
fmuls
push
icebp
gs
add
or
inc
push
lods
jns
fwait
add
test
outsl
mov
imul
into
and
out
mov
jp
xor
xchg
gs
jecxz
daa
cwtl
leave
in
sbb
mov
jo
mov
mov
inc
sbb
sub
pop
or
xorl
xor
stc
dec
mov
push
jg
mov
sub
mov
aaa
cmp
adc
lahf
ja
jp
jmp
adc
into
and
mov
imul
fstpl
aad
aad
pop
loop
mov
mov
das
push
jl
pop
movsb
rep
frstor
add
in
and
stos
ljmp
in
xor
push
xor
add
jg
shr
mov
adc
adc
dec
outsl
dec
xchg
int
incl
js
imul
fsubl
je
adc
jnp
xchg
fcmovne
xchg
push
jecxz
aaa
ja
std
xor
fiadds
outsb
testl
sbb
jg
int3
and
xchg
and
push
dec
fidivrs
outsl
pop
sub
push
stc
scas
rcrl
out
lds
fxch
repnz
sub
in
dec
scas
outsl
or
sub
sbb
jb
aaa
xchg
bound
std
inc
ror
cmp
insl
test
in
or
sub
or
mov
mov
push
fcoml
jg
sub
or
mov
das
and
xor
xchg
imul
movsl
pusha
dec
mov
mov
sbb
lods
sub
daa
js
std
ss
jmp
outsb
sahf
lods
and
fbstp
cmp
jg
das
addb
ljmp
pusha
cmpsb
push
cmp
mov
sub
arpl
in
in
xor
clc
xchg
xchg
add
lahf
roll
sbb
mov
movsb
pop
adc
xchg
mov
xchg
push
aam
rorl
cmp
dec
lahf
cli
mov
pop
cld
pop
into
jb
push
mov
mov
leave
add
jmp
in
jg
sub
xchg
cmp
mov
add
cmp
add
sahf
packuswb
test
mov
sbb
stc
test
inc
fs
scas
iret
xor
push
push
repz
pop
inc
addr16
std
pop
cltd
clc
sahf
aaa
enter
sub
cmpsb
decl
imul
inc
mov
mov
or
xchg
xor
lods
mov
lea
mov
inc
lahf
cs
fucomi
jo
repnz
mov
aad
nop
int3
roll
mov
mov
sub
icebp
or
and
into
out
test
pop
jge
das
jp
test
cltd
idivl
sub
lods
in
mov
testl
bound
push
lret
jl
add
inc
ds
xchg
iret
test
je
stos
pop
rorb
fwait
sbb
jp
inc
dec
inc
out
mov
test
mov
sub
fcomi
xor
decb
or
mov
popf
adc
jl
jg
adc
inc
mov
addb
jne
and
mov
dec
add
push
pushf
add
mov
movsl
inc
loop
lcall
mov
adc
sbb
sbb
arpl
popa
ret
stc
pushf
pop
add
cli
das
in
ret
jae
xchg
push
rcrb
mov
inc
mov
aaa
jle
xlat
data16
sbb
addl
sub
int
push
sub
inc
hlt
cmp
mov
cs
ficoms
push
xor
nop
mov
adc
int
mov
leave
mov
push
jl
scas
cmp
dec
inc
jle
loope
sub
mov
xchg
jbe
notl
das
dec
lcall
push
jmp
or
sbb
jecxz
clc
cmpb
loope
dec
rcl
pop
xchg
sbb
outsl
iret
mov
pop
fimuls
into
and
into
sbb
inc
daa
dec
and
mov
pop
cmpsl
adc
int
cltd
loope
xchg
cmp
out
add
clc
ja
dec
hlt
roll
jno
rcrb
jg
subl
mov
cmp
push
or
fisttpl
push
push
inc
xchg
hlt
and
push
sub
faddl
dec
push
pop
sbb
xchg
xchg
ss
shll
sbb
inc
sub
enter
lods
lret
dec
sbb
push
cs
dec
int
std
nop
ret
jb
stc
outsl
sahf
loop
mov
mov
test
xchg
dec
jp
and
mov
xlat
out
mov
push
fwait
loope
dec
les
fbld
and
cmc
add
fiaddl
pop
leave
sub
pop
sub
notb
cmp
fdivrs
xchg
ds
cmp
movsl
jne
loope
add
jnp
adc
mov
mov
jmp
jae
inc
jmp
adc
xchg
lret
iret
jge
ja
inc
roll
push
jp
ud1
sub
lock
leave
ret
mov
insb
repz
test
ljmp
inc
jbe
cld
dec
mov
or
nop
sbb
add
cmp
rorb
out
sbb
js
adc
pop
rcrb
sub
add
jo
sbbb
scas
cmp
pop
xor
xchg
notl
pop
repnz
repz
dec
out
sub
dec
test
aas
mov
jnp
push
jb
leave
jg
add
xchg
les
pop
and
lret
mov
jl
cmp
mov
cmc
or
or
push
or
in
or
movsl
mov
push
jno
out
jmp
mov
mov
shrl
insb
insl
sbb
fucom
imul
cli
test
jns
add
mov
bound
mov
sub
cmp
dec
sub
scas
push
es
cwtl
loopne
jb
cmp
sahf
std
mov
jmp
nop
addr16
xchg
jg
scas
mov
push
push
pop
fs
lea
jb
cmpsl
xor
mov
jne
and
je
sub
inc
add
imul
out
lret
cmp
sbb
dec
mov
repnz
ret
ljmp
nop
dec
add
mov
inc
pop
inc
jbe
or
rcrl
cmpsb
cmp
jp
jmp
pop
xor
nop
push
ss
ss
lea
icebp
ja
xchg
jno
ljmp
or
inc
popf
dec
lds
loope
lahf
lods
push
sbb
fsubrs
sub
adc
mov
daa
fxam
pop
mov
sti
or
or
cmp
adc
shll
xchg
add
add
mov
pop
sub
scas
mov
sbb
imul
lret
and
iret
scas
cmpsb
sub
inc
scas
or
xchg
aad
lock
mov
pop
fsts
xor
pop
dec
test
lods
cmp
out
sti
xor
int
mov
xor
mov
mov
cmp
fwait
jnp
and
inc
int3
add
and
lret
push
push
or
sub
inc
ljmp
jecxz
inc
mov
add
pop
push
insl
mov
arpl
pop
sub
pop
inc
fbstp
xchg
lods
into
jecxz
pop
test
mov
lcall
loop
inc
or
sbb
enter
add
stc
pusha
push
pop
mov
mov
add
lods
lds
xor
xor
popf
jg
rcrb
rclb
mov
inc
xchg
lock
and
mov
in
xchg
and
inc
cvtps2pi
cmp
xor
push
outsb
insl
or
pop
inc
jae
outsb
cmpsl
add
jecxz
adc
loopne
and
clc
xor
mov
mov
ja
test
cmpsl
push
pusha
hlt
pop
cmc
ss
dec
sbb
push
mov
out
inc
inc
ja
pop
out
sub
roll
inc
pusha
or
imul
mov
xchg
xor
push
jg
int
insl
adc
adc
xor
int3
and
adc
mov
shlb
xlat
push
mov
int
inc
push
jge
pop
xchg
sbb
out
rclb
mov
mov
lahf
movsl
mov
add
inc
mov
adc
or
pop
add
mov
jecxz
inc
mov
cmp
cmp
fldt
cld
pop
in
icebp
std
jbe
jl
xor
sub
sub
cmp
mov
cld
cmp
cwtl
inc
int3
push
cltd
xchg
inc
xchg
pop
dec
xchg
mov
jp
inc
rclb
xor
fistpl
pavgb
cwtl
ret
aaa
push
mov
pop
inc
xchg
scas
adc
sub
pop
cs
rorb
daa
mov
shrd
cmp
or
sub
mov
xchg
insl
mov
icebp
fidivrs
scas
lahf
test
sbb
and
jg
repnz
incb
pop
push
sub
test
or
sub
dec
mov
sub
addb
loopne
inc
lock
xor
jno
stos
insb
lcall
insb
ljmp
cmp
mov
std
jle
dec
push
pop
das
shl
call
loope
sbb
stc
rorb
jnp
mov
leave
mov
sub
repz
sahf
mov
mov
in
xchg
jns
mov
mov
test
imul
add
sbb
cltd
add
add
jne
xor
push
add
xchg
mov
fsubs
jp
sbb
jg
repz
mov
jl
das
add
daa
xorb
xchg
lahf
push
repz
imul
pushf
push
out
xor
mov
pop
ds
cmp
enter
clc
ret
in
gs
jmp
dec
gs
andl
and
jg
aam
jp
test
cmpsl
sub
and
in
jmp
cmp
fidivl
mov
xorl
xor
mov
ljmp
loop
in
inc
ficoml
jmp
fwait
jne
mov
xlat
mov
add
jb
push
or
or
popa
stos
popf
data16
jb
sbb
lods
lods
mov
and
inc
decl
pop
pop
in
xor
push
sbb
popa
xor
or
cmp
sbb
adc
sbb
cmp
sub
mov
dec
mov
mov
lret
cmp
inc
add
dec
cld
adc
push
pop
dec
out
rcrl
cld
je
gs
jmp
adc
cli
mov
pop
xor
mov
call
hlt
mov
jge
xchg
lret
out
cmp
lret
sub
mov
ljmp
pusha
sbbl
fbld
leave
xchg
xlat
mov
pop
les
mov
call
fbld
cmc
push
fsub
andl
enter
xor
jno
adc
mov
adc
push
push
popa
mov
ja
mov
jl
fdivs
cld
push
sti
iret
mov
pop
and
insb
ss
mov
lret
iret
jge
lods
out
loope
lcall
sti
cmp
or
sub
push
addr16
xchg
pop
test
out
loop
in
pop
cs
mov
shll
cmp
xor
pop
add
mov
pop
insl
mov
out
pop
insb
in
jae
adc
das
test
mov
mov
mov
jecxz
push
test
negl
or
mov
into
imul
mov
pop
push
mov
cmc
sbb
mov
mov
dec
xor
mov
les
mov
adc
pusha
lock
nop
daa
xlat
int
rcrb
push
outsl
jae
mov
icebp
add
mov
inc
fxtract
repz
lret
inc
push
adc
cmp
out
add
aam
cmp
fisttps
push
lea
and
or
js
and
repz
arpl
jo
cli
push
mov
pop
mov
loopne
push
adc
sahf
test
lods
mov
push
pushf
in
pop
pop
jle
scas
mov
cli
repz
test
sbb
loop
push
dec
cltd
in
jmp
jge
mov
call
mov
int3
jo
aam
imul
retw
sub
sti
mov
out
imull
in
icebp
out
mov
scas
push
arpl
ljmp
enter
frstor
sub
ficomps
cmp
stos
cmp
sub
inc
xchg
xchg
push
fmull
dec
push
inc
sub
clc
arpl
dec
xor
adc
loopne
out
add
sbb
push
cmp
inc
jns
adc
insl
lret
pop
mov
pop
push
orl
das
aam
or
pop
push
or
jg
fs
mov
mov
loopne
rcrb
pop
xchg
mov
call
jle
out
sti
inc
sti
pop
fucom
mov
inc
mov
and
jne
movsb
pop
cli
xor
ds
in
sbb
mov
cmp
in
lods
inc
pop
repnz
bound
sti
add
mov
stos
inc
cltd
rolb
ja
mov
imul
aam
jae
ret
inc
adc
pushf
xor
adc
xchg
dec
stc
jae
and
jo
pop
add
add
lea
jle
push
stos
mov
mov
daa
ljmp
push
cmp
pop
addb
out
insb
sbb
jns
ja
outsl
movsb
xchg
iret
fidivrs
fistps
ret
mov
aad
push
mov
arpl
stos
sub
xchg
mov
dec
sub
mov
sub
sbb
sbb
push
pop
pop
mov
mov
data16
lock
push
xchg
sub
movsb
cs
fsubs
jns
mov
dec
adc
mov
insl
sahf
cmp
call
inc
sub
icebp
sbb
add
rolb
dec
sub
mov
adc
jecxz
aad
nop
pop
clc
cltd
jl
fisttps
and
movsl
pop
cld
cmp
sti
xchg
pop
mov
aad
push
mov
dec
or
sub
and
sti
inc
movsb
sahf
inc
xchg
inc
sub
movsl
andb
mulb
xor
ds
movb
ror
sti
add
sub
add
push
int
mov
cwtl
inc
inc
scas
pop
into
jl
xchg
mov
das
or
insb
sbb
pop
mov
rclb
hlt
je
xchg
repnz
adc
inc
push
and
sub
je
daa
fsubrs
cs
icebp
dec
add
adc
dec
stos
and
adc
sub
dec
mov
test
daa
xchg
out
sub
mov
pop
repnz
sar
outsl
and
inc
cmp
mov
outsb
insb
ror
outsb
sahf
fucomip
les
test
js
mov
gs
adc
add
or
jl
or
dec
jg
or
adc
pushf
out
push
je
jl
stos
in
lret
enter
adc
xor
loop
adc
cmc
mov
repnz
fimuls
cli
das
inc
out
insb
andl
mov
xor
cli
daa
loop,pn
sti
xchg
cmp
aaa
add
insb
mov
imul
jmp
and
cmp
pushl
xor
test
and
jo
jg
pushf
lret
mul
sub
jle
pop
cmp
out
arpl
sbb
jmp
shll
and
pop
sbb
cmpsl
xchg
jmp
add
jge
xchg
push
cmp
sub
popa
in
sar
in
js
adc
sub
incl
or
inc
into
xor
loope
lea
mov
cmpsl
pop
mov
popw
mov
lcall
mov
pusha
sbb
mov
mov
pop
xor
stos
in
inc
inc
xchg
sbbl
fildl
lahf
jnp
out
mov
xchg
pop
mov
jle
or
popf
xchg
add
push
loopne
xorl
pop
jecxz
and
dec
jl
xchg
dec
cmpsb
mov
scas
cmp
xchg
rorb
cmp
ffreep
xchg
es
shll
ret
jo
imul
sub
int3
inc
xchg
jno
repz
ja
dec
cmp
fldl
lods
cmc
es
add
fcoml
xor
push
lods
dec
xchg
ja
dec
movsb
js
test
xor
shlb
flds
sbb
or
addb
test
les
xchg
test
dec
inc
cltd
movsl
int3
lods
sbb
xlat
mov
ret
xor
int3
in
jl
pushf
in
cwtl
xor
xor
les
add
xor
out
push
pusha
cli
fbstp
mov
notl
cli
jecxz
dec
lret
mov
inc
cmp
xor
fldenv
add
and
sbb
xchg
cltd
mov
negb
cltd
mov
mov
jge
notl
push
mov
pop
add
mov
adc
test
jge
sbb
add
ss
mov
cmp
data16
addr16
push
sbb
cmpsl
in
sub
mov
in
or
repz
cs
or
test
sti
movb
aad
shrl
stc
jbe
jne
movsb
ror
div
imul
sub
and
int3
xor
test
subl
inc
or
fists
clc
vucomiss
addr16
movq
fwait
daa
insl
cmp
adc
mov
sub
test
xchg
sbb
inc
sub
cld
xor
mov
xor
dec
and
movsb
sbb
xchg
mov
cwtl
dec
jb
jp
movsl
lods
test
xchg
xchg
jle
imul
dec
inc
sub
out
lret
mov
mov
cmp
fidivrs
push
decl
lcall
pop
ret
cs
into
out
imul
mov
mov
ret
add
adc
scas
jmp
push
push
es
cmp
movsl
push
jns
jecxz
je
call
add
fiaddl
es
nop
push
xchg
adc
xchg
sbb
mov
ficompl
scas
aam
jg
test
jge
fnstsw
fs
lret
cli
mov
test
stos
clc
mov
arpl
ljmp
dec
sbb
sub
shrl
lods
jns
stos
adc
shll
and
mov
xlat
pushf
inc
imul
add
inc
addr16
aas
mov
xchg
pop
in
mov
jp
push
sub
push
mov
inc
push
or
out
jns
lods
jp
push
lret
es
xor
add
mov
ret
shll
dec
in
popf
pop
rcl
in
and
pop
cmp
push
and
leave
sbb
repnz
cmc
push
test
push
imul
lret
pop
cmp
inc
push
push
adc
js
jb
loopne
mov
loop
inc
fstl
shll
scas
filds
shlb
jbe
test
push
pop
ror
int
sub
hlt
mov
hlt
sbb
mov
movsb
mov
sbb
daa
jecxz
call
jae
stos
mov
nop
mov
jl
enter
jp
icebp
cmp
inc
lods
fs
das
lock
and
jbe
dec
mov
ret
fistpll
or
push
or
and
jge
mov
in
filds
out
xchg
pop
out
push
loope
push
sahf
push
adc
add
cmp
jle
ljmp
mov
arpl
jb
mov
and
inc
neg
shrb
jmp
or
fwait
sub
add
cli
aaa
push
in
add
pop
jge
inc
xor
cmp
ss
dec
das
push
xchg
movl
negb
mov
xchg
mov
mov
xor
push
jnp
adc
sub
mulb
sahf
movsl
xor
mov
mov
jp
leave
xchg
ja
decb
flds
loop
inc
movsb
inc
lods
pop
test
bound
or
outsb
cs
add
shl
push
fwait
mov
pop
insb
icebp
mov
std
adc
mov
sbb
xchg
stc
aad
cmp
in
mov
jae
add
enter
inc
adcl
or
mov
cmpsb
mov
xlat
mov
divl
cmp
pusha
dec
mov
and
inc
in
jle
pop
cmp
push
insb
jae
aas
mov
jmp
cmpl
rol
push
sub
fs
mov
nop
cmp
iret
inc
cmpsl
aad
sub
clc
mov
adc
and
sbb
pop
fwait
jge
sahf
and
xor
data16
test
push
push
ret
movsl
mov
les
movsl
dec
inc
inc
mov
sbbl
pop
mov
fsubrs
mov
pop
aaa
clc
or
fcom
fs
data16
mov
mov
jg
aaa
push
inc
sub
add
popa
int
sahf
push
and
sahf
xchg
cmpb
in
pop
loopne
mov
inc
test
icebp
and
loope
add
out
mov
rolb
adc
xor
std
lock
out
sub
pop
sbb
rorb
fsubrp
ljmp
cli
or
or
adc
add
fwait
sub
rol
xlat
into
push
cmp
adc
shlb
mov
pop
cmp
push
ds
fldcw
pushf
add
inc
xor
imul
hlt
xor
mov
cwtl
dec
adc
pop
scas
xor
addl
cli
xchg
jae
sbb
lock
jmp
jb
imul
sub
scas
mov
int3
inc
sbb
fcmovne
mov
scas
pop
xor
push
mov
xchg
testl
pop
and
pop
pop
jecxz
cmp
and
cmp
push
aas
aam
pop
int
movsl
decl
and
cwtl
mov
inc
fcmovu
pop
into
ljmp
movsl
ret
and
lahf
cmp
dec
mov
push
jmp
out
mov
sbb
pop
ficomps
es
adc
xor
loope
jo
mov
leave
lret
adc
jmp
fistl
mov
inc
test
add
xlat
addl
xor
jo
xchg
inc
and
hlt
or
xlat
fiaddl
mov
or
popf
cmp
test
add
push
outsl
fisubl
stos
mov
cmpsl
mov
lods
xchg
xlat
test
or
jno
test
data16
ljmp
cmp
jmp
xor
es
push
mov
xchg
pop
jns
imul
inc
movsb
pusha
jp
ret
mov
popa
bound
mov
dec
ret
add
push
jne
cmp
or
jg
nop
sub
jle
es
push
test
xlat
sub
out
jl
stos
ret
and
insb
mov
lods
pushf
loope
dec
and
mov
cmpsl
adc
test
sub
gs
and
repnz
adc
mov
inc
les
add
sbb
or
jmp
bound
mov
jle
inc
sub
inc
mov
cmpsb
test
inc
mov
cmp
icebp
loopne
fnstenv
cld
stos
idivl
xchg
push
push
into
jmp
cltd
mov
push
and
or
andb
test
fistpll
sarl
cmpsl
mov
pop
jecxz
push
mov
xchg
arpl
or
lcall
sti
cld
mov
inc
enter
push
ja
push
cmp
cmp
jmp
in
pop
hlt
fidivrs
xorl
mov
testb
in
mov
lds
adc
and
add
dec
dec
and
cmp
repnz
cwtl
idivb
cmpsl
xchg
clc
mov
lods
jb
adc
ljmp
sbb
xor
xor
lock
fs
sarl
jb
in
inc
arpl
pop
cwtl
sub
sbb
icebp
in
mov
or
inc
mov
incb
dec
mov
int
push
in
mov
inc
sbb
cld
pop
je
sbb
push
push
lret
and
orb
push
jbe
mov
dec
dec
fwait
mov
xchg
lret
out
and
jl
outsb
in
sbb
adc
stos
or
inc
nop
add
xchg
pusha
or
jg
fs
insb
pop
fsts
push
cmp
insl
dec
push
ss
bound
data16
dec
jns
std
push
cmp
mov
xlat
mov
sub
scas
lret
ja
jl
mov
mov
dec
mov
in
das
jl
mov
lret
inc
adc
add
add
pop
push
ret
std
nop
adc
sub
aad
xor
les
jns
inc
dec
sub
jo
int
mov
lods
mov
xlat
repnz
not
movsl
imul
pop
enter
sbb
or
add
sbb
imul
test
iret
dec
mov
jmp
ret
sub
in
dec
out
ret
xchg
xchg
lock
rclb
cmp
mov
push
outsl
mov
test
ret
icebp
jle
arpl
mov
lcall
mov
ret
dec
insb
insb
addr16
push
cs
dec
test
jmp
xor
shrb
jo
inc
stos
subb
test
cmpsl
jb
lahf
imul
ds
inc
fs
fisttpll
outsl
mov
data16
cli
and
sbb
lods
dec
out
xor
dec
mov
imul
mov
rclb
cltd
aad
cld
js
ja
and
mov
iret
outsb
inc
xchg
mov
gs
push
rclb
fiaddl
aaa
adc
mov
adc
jecxz
ljmp
mov
sub
and
daa
sub
mov
lret
dec
dec
jno
enter
fs
daa
push
sti
ja
je
sub
movsb
push
mov
cli
into
test
push
cmp
lret
inc
notl
jmp
push
rol
xor
xchg
insl
lahf
mov
xchg
push
ss
std
or
xchg
repz
sbb
gs
sub
jns
mov
imul
faddl
cltd
loop
mov
sahf
mov
insb
push
rorl
in
dec
cltd
clc
push
loop
insb
mov
push
cmc
es
sub
mov
stc
adc
stos
loopne
push
shlb
std
jnp
push
adc
mov
rcl
mov
shlb
pop
lahf
clc
adc
repz
jecxz
fists
fcmovnu
pop
mov
xlat
stos
mov
movsb
cwtl
and
clc
fst
jo
insb
pop
cs
pop
mov
scas
fsubrl
mov
sbb
mov
or
mov
rcrb
or
inc
iret
push
sub
fbstp
imulb
ljmp
xor
sub
add
jp
sbb
mov
pop
lods
jmp
pop
add
ret
mov
mov
loop
movsb
pop
push
icebp
push
leave
jmp
sub
dec
pop
mov
mov
inc
ret
add
cmp
cli
xchg
xlat
pop
adc
jge
movsl
fnstsw
xchg
push
popf
jle
or
mov
sub
or
xchg
aam
int
or
xchg
popa
add
mov
mov
or
mov
add
adc
das
xor
inc
or
addr16
bound
inc
xchg
push
movsb
rolb
test
jg
inc
jbe
xchg
andl
mov
iretw
fildl
outsl
push
in
pop
stos
imul
sbb
cmp
pop
andl
add
shrb
dec
jmp
push
xor
es
adc
pop
jg
push
jno
mov
sub
sbb
les
stc
inc
test
xor
xchg
jno
jb
sbb
fdivl
fists
outsl
adc
cmp
insb
aad
mov
scas
mov
sbb
add
mov
lret
clc
lcall
pop
xchg
subb
js
inc
mov
pop
sub
cmp
cmpsl
aas
cmp
imul
xor
jg
fcompl
or
add
outsb
add
add
push
idiv
cmpsl
lds
fdivrl
jns
sahf
adc
flds
mov
lret
pop
imul
dec
mov
hlt
in
rcrb
sbb
and
ret
lret
fcmove
lret
jb
xor
mov
xor
je
mov
aaa
ret
outsb
out
mov
rclb
pop
push
push
out
addb
shl
icebp
lock
inc
mov
prefetch
imul
stc
xchg
fs
pop
stc
or
mov
es
int3
pop
lret
mov
jmp
jp
push
shlb
roll
xchg
xor
outsb
das
popa
es
mov
xchg
push
orb
mov
xchg
fiaddl
loop
push
notl
cs
xor
popf
call
popa
out
cmp
sarb
add
jle
movsl
or
stos
pop
pushf
je
push
cmp
mov
imul
sbb
lea
movsb
xor
adc
in
mov
mov
mov
je
mov
xor
and
sbb
mov
mov
dec
sbb
sbb
aaa
loope
push
jo
push
fldpi
push
sti
cmpl
jmp
into
cld
xchg
lods
mov
or
cmovbe
pusha
push
inc
push
cmpsb
pop
mov
out
daa
mov
jle
jno
cmp
sub
xchg
cmp
lock
aaa
cmp
jl
mov
sbb
icebp
hlt
cmp
cmp
push
out
sarl
shll
imul
lods
fld
xor
dec
cwtl
add
adc
leave
ss
fiaddl
cmp
ret
test
out
add
mov
insl
and
stc
cmp
pop
inc
scas
cli
mov
dec
lret
outsl
and
xchg
sahf
xor
pop
push
insb
sub
ret
dec
jp
dec
aas
lock
icebp
sub
out
in
cmp
xchg
dec
fwait
xor
jmp
jb
movsl
aad
push
xchg
and
in
in
lock
adc
adc
mov
jbe
dec
dec
in
gs
jae
test
mov
icebp
sub
stc
clc
int
pop
dec
dec
cwtl
int3
adc
xor
lahf
fsubs
inc
lret
sarb
imul
sahf
or
jo
popf
or
dec
repz
rolb
into
inc
push
insb
ret
daa
imul
std
test
push
clc
js
scas
pop
xor
outsb
shll
fildll
std
ss
jmp
loopne
test
push
cmp
mov
iret
inc
jnp
mov
sub
jg
int
fwait
xchg
fimuls
cli
xor
mov
push
cmpsl
ficoml
in
movsb
inc
call
ss
ljmp
in
pop
sub
in
pop
adc
pop
pop
xor
mov
std
and
fadds
push
lods
mov
arpl
xor
xchg
inc
inc
inc
out
fs
dec
faddp
cmp
lret
adc
pop
cmc
test
mov
dec
shlb
jno
cli
nop
xor
into
dec
adc
mov
push
arpl
je
bound
in
pushf
pop
jb
jl
cmpsb
and
xor
popa
faddp
mov
mov
or
in
scas
enter
mov
xlat
test
cmpsl
xchg
mov
mov
push
mov
cmpsb
and
in
mov
rcrl
xor
jo
cld
xlat
pusha
cmpl
das
lahf
mov
pop
rcll
ret
pusha
push
fidivrs
sbb
xchg
psubsw
and
dec
aam
jecxz
mov
and
adc
sbb
ja
or
mov
mov
repnz
push
lods
mov
sub
sbbl
xchg
rorb
sub
lcall
adc
dec
xchg
sub
jg
xchg
jo
mov
cmp
je
pop
dec
jge
mov
push
or
clc
mov
pop
insl
fwait
pop
shll
pop
adc
mov
or
pop
mov
cld
cmp
mov
mov
clc
mov
sub
in
dec
daa
push
fwait
sub
aas
mov
mov
jbe
test
adc
leave
sarb
fwait
and
jo
lods
dec
fistpl
insb
test
lock
or
mov
lahf
aad
adc
mov
mov
and
hlt
pop
dec
jne
cmp
testb
xchg
sub
out
jecxz
cmc
inc
push
and
mov
cmpl
hlt
adc
leave
cmp
xor
jno
loop
jle
inc
mov
sbb
sarl
dec
adc
xor
and
sahf
fnstcw
mov
push
sbb
ror
push
inc
fstl
scas
jp
mull
add
icebp
xchg
sbb
arpl
jl
mov
mov
pop
in
pop
test
dec
scas
fiaddl
sbb
pop
adc
mov
std
lea
imull
cmp
sahf
sahf
std
cmp
maskmovq
divl
dec
and
ljmp
push
pop
push
sub
push
and
popa
test
imul
pop
inc
push
fwait
and
jns
arpl
sub
inc
adc
ja
jnp
movzwl
cmpsb
push
cmp
incb
rorl
jae
cmp
iret
push
repnz
jge
mov
xor
add
pop
push
cmp
xor
mov
call
lods
mov
clc
push
sbb
faddl
xor
mov
call
cli
pusha
inc
lds
adc
ds
mov
mov
pop
test
mul
fdiv
sbb
jne
inc
or
loope
mov
mov
xchg
push
jle
dec
inc
sbb
adc
dec
add
addb
bound
adc
inc
scas
insl
sub
adc
jno
mov
jl
hlt
push
test
ret
clc
push
cmpsl
adc
outsl
jl
ret
aad
push
cmp
push
scas
outsb
cmpsb
and
adc
andb
mov
hlt
or
sub
fistl
pop
pusha
mov
sub
and
sub
nop
pop
enter
pop
or
inc
in
push
je
out
cmp
sbb
aad
or
orl
and
pop
push
sar
shrb
mov
mov
xor
add
jo
inc
aad
mov
sub
and
popf
sub
ret
leave
gs
test
stos
pop
dec
dec
mov
lock
xor
movsb
cmp
sti
mov
xor
je
mov
add
shlb
pop
test
lods
les
push
or
mov
and
adc
jp
aam
notl
popf
lcall
inc
push
dec
cmpsb
popf
push
fistps
sti
jecxz
lcall
scas
scas
and
ret
mov
fistps
mov
xchg
or
insb
scas
aas
or
mov
push
mov
push
and
cli
push
jmp
mov
add
mov
inc
addr16
outsl
inc
pop
jmp
pop
js
shl
cwtl
mov
int
insl
ljmp
pop
rol
mov
mov
leave
pop
ja
jmp
cmp
imul
mov
fwait
sub
pushf
and
sub
pop
mov
pop
outsl
xor
mov
sub
frstor
push
popf
fwait
cltd
pop
loope
lea
pushf
mov
mov
push
aas
sahf
mov
mov
fists
adc
push
in
sahf
cwtl
cwtl
mov
jl
mov
rclb
stos
dec
sti
fcmovnu
fimuls
mov
push
mov
mov
call
imul
pop
push
add
shll
pop
or
insl
outsb
mov
aad
mov
mov
and
jno
or
loope
jb
cmp
fists
push
enter
jb
dec
iret
sub
test
cmpl
adc
inc
mov
mov
push
push
rolb
test
std
rclb
fwait
lods
jae
cmpl
and
cmpsb
loop
js
ljmp
sub
mov
inc
mov
nop
pop
jbe
cmp
mov
mov
fnstcw
lret
or
shlb
fildl
dec
sahf
lcall
fcomps
and
or
ret
div
out
out
das
fwait
dec
fmull
fnstenv
out
aad
jg
adc
sbb
adc
cmc
arpl
leave
pop
sub
add
sub
movsb
out
clc
sbb
lret
mov
mov
xor
jo
movsb
dec
adc
jecxz
mov
das
mov
push
lock
arpl
das
jb
sub
push
shll
stos
sub
dec
addr16
jnp
mov
jle
pop
cmp
out
or
jne
xchg
inc
inc
adc
sbb
cmp
pop
push
or
xor
fists
test
xchg
ret
idiv
loopne
arpl
mov
mov
xchg
bound
cmp
mov
adc
lret
sbb
push
adc
jl
mov
cmp
xchg
sbb
xchg
xor
jb
ficompl
mov
jb
pushl
data16
loopne
loop
pushf
xchg
push
adc
jle
dec
out
loopne
mov
daa
jne
and
ljmp
outsl
clc
sub
scas
mov
test
shl
lea
gs
jl
pop
fcmovnb
xchg
cmp
mov
mov
dec
movsb
insl
test
rcll
or
adc
fistpl
ror
adc
push
push
cs
sub
mov
cmp
xchg
inc
movsl
mov
xchg
ret
xor
sbb
xchg
push
ljmp
add
cs
outsb
sub
addl
mov
orl
int
add
loope
adc
outsl
mov
add
sti
dec
inc
push
or
adc
jno
shlb
add
das
dec
push
push
mov
lret
jne
jne
xlat
cmp
ss
jae
pop
push
mov
add
mov
into
xor
mov
cwtl
xor
ss
pop
repz
push
cmpsb
mov
icebp
cld
scas
das
jge
cli
jno
aaa
testb
sub
xor
inc
add
hlt
push
lret
push
add
add
adc
inc
jb
pop
je
and
sbb
pop
lea
push
int3
mov
sbb
pop
rcll
jnp
filds
mov
pop
in
mov
cmc
adc
fsubrl
pop
fstps
inc
cmpsl
iret
mov
pop
mov
inc
adc
ljmp
aas
rcrl
popa
mov
test
pop
inc
and
fstl
into
mov
pop
jecxz
cwtl
pop
stos
push
sti
add
rorb
aad
push
lods
sti
popa
mov
stc
test
out
pop
xchg
mov
push
sub
push
imul
add
aaa
sub
aaa
mov
mov
xlat
xchg
pusha
xor
dec
rcll
imul
icebp
fwait
or
xor
xor
movsb
mov
sub
jne
xlat
cli
fiadds
pop
mov
cmp
sahf
movsl
and
gs
add
mov
sub
mov
dec
and
aad
inc
xor
es
mov
pop
fbstp
fcoms
mov
mov
ja
cld
cmp
mov
clc
adc
inc
dec
push
push
xchg
test
adc
mov
fmulp
adc
mov
arpl
adc
outsb
mov
xchg
xor
sbb
mov
cmpsl
push
mov
orb
mov
stc
ljmp
out
fstpl
cwtl
pop
test
shll
into
jno
cli
in
lods
mov
sub
aaa
cmp
loope
jnp
push
cmpsb
cmc
mov
out
inc
dec
ljmp
xchg
cmp
mov
mov
scas
xor
mov
xchg
jnp
xor
arpl
push
add
push
mov
ss
mov
ror
popa
jg
test
push
sub
aad
jnp
ret
sub
leave
call
add
popf
sub
pop
mov
push
push
xor
loopne
lods
mov
jns
xor
mov
ljmp
mov
mov
test
mov
jno
fcoml
in
in
or
add
inc
mov
iret
sbb
cmc
push
pop
jnp
cli
sbb
ret
roll
insl
mov
testl
pop
sub
add
ret
inc
mov
add
mov
pop
sub
inc
push
inc
xor
aad
scas
pusha
into
leave
push
pop
or
pusha
adc
inc
add
lahf
shll
ret
and
int
sarb
out
and
lock
or
in
mov
cmp
fsub
jl
rorl
mov
xor
mov
sub
imul
cmp
mov
sahf
call
jg
nop
shlb
jg
repnz
shlb
cltd
and
inc
push
mov
dec
or
mov
jl
mov
incl
lods
out
push
ljmp
outsl
mov
mov
push
dec
je
xor
cmp
fdivrl
sub
sbb
mov
push
loop
jae
test
lods
push
aas
mov
add
notl
leave
lret
mov
adc
std
loope
lahf
adc
jge
sbb
pop
xor
test
outsb
pop
pop
test
cmp
sahf
mov
sub
dec
mov
xchg
inc
cmp
iret
xchg
scas
cmpsl
pop
and
mov
cmp
in
or
push
pop
dec
pusha
aaa
insb
test
mov
clc
cli
dec
sti
sbb
mov
mov
arpl
popf
das
sbb
rclb
loop
cmpsl
out
jo
add
or
dec
pop
pop
ds
and
pop
sbbb
bound
lock
mov
push
and
push
stos
int
inc
fwait
xchg
lret
popf
scas
or
scas
add
outsl
sahf
sbb
jo
jne
clc
enter
imul
cmpl
and
pop
fbld
sbb
xchg
or
cmpsb
inc
mov
xor
adc
jno
pop
fmull
bound
pusha
push
movsl
mov
mov
cmp
popa
mov
xchg
sbb
fbstp
scas
dec
push
mov
test
stos
xorb
ret
rcll
push
iret
sub
das
enter
dec
mov
jns
inc
cmpsb
cmp
xlat
pusha
ss
incl
sbbb
xchg
and
push
aas
leave
aam
pop
mov
fcompl
mov
push
flds
test
repnz
xchg
nop
mov
lods
push
xchg
mov
push
mov
push
cmp
cmp
icebp
aam
add
roll
fcmovne
jns
lahf
add
xor
into
mov
push
jns
inc
xchg
mov
sub
push
popf
jecxz
jbe
loope
out
ds
call
rorb
xor
sub
jb
jnp
popa
mov
mov
xchg
mov
add
pop
and
shl
dec
cmpsl
mov
and
dec
insb
cmpsb
xchg
jp
push
cwtl
sbb
adc
out
mov
jno
jnp
jb
xor
cs
aad
mov
addb
sub
in
gs
rol
jl
adc
in
cmp
lods
es
pop
stos
dec
mov
xlat
lds
xlat
inc
enter
xchg
jno
imul
cmpsb
out
icebp
in
stos
sbb
loop
inc
cmp
ret
cmpl
mov
push
dec
mov
insl
jns
dec
pop
push
inc
imul
sti
gs
scas
jo
lds
jne
icebp
rolb
jmp
push
addr16
cmp
jbe
mov
dec
push
imul
jmp
rolb
movsl
push
dec
aas
inc
sbb
fidivl
cmp
scas
lret
xchg
jg
popa
leave
pop
dec
ret
mov
loopne
jbe
or
dec
ret
adc
test
adc
inc
mov
and
mov
pop
mov
jle
cmp
sbb
push
std
subl
xor
dec
cmpsb
sbb
jmp
or
lcall
mov
in
dec
clc
pop
loop
ret
mov
mov
loope
lret
leave
shrl
sbb
jg
xchg
ret
ja
xchg
cmp
and
dec
jns
push
imul
in
das
lea
mov
scas
mov
jmp
inc
inc
inc
jp
xorb
daa
xchg
and
repz
sti
in
test
int3
das
shrl
cltd
pop
cmp
imulb
insb
das
pushf
es
sbb
pop
sub
add
jae
je
sbb
xchg
stos
jg
xor
push
pop
adc
fwait
dec
jg
sub
fistps
loop
mov
cmp
pop
loopne
cmp
push
xorb
push
dec
aam
dec
xchg
mov
xor
jecxz
or
xchg
xchg
lea
js
enter
fnclex
daa
ret
scas
push
xchg
js
js
fucomp
loop
lret
pop
xchg
lea
xchg
sub
movsb
ficoms
out
loope
jo
shll
sbb
inc
sub
inc
cmpsb
or
cmp
imul
push
mov
cmp
insl
std
inc
mov
and
add
mov
push
cmp
mov
scas
xchg
xor
mov
sub
fisubrs
imul
cltd
aas
fiaddl
mov
mov
loope
daa
mov
mov
pusha
mov
test
jmp
mov
pop
mov
outsl
adc
mov
xchg
fldl
xchg
loope
push
mov
dec
nop
mov
scas
pop
jae
or
icebp
loopne
lret
aam
rcrl
mov
sub
nop
rdtsc
mov
mov
jmp
sbb
mov
add
out
cmpsb
push
jno
push
in
xor
sub
dec
sub
dec
mov
inc
lea
xor
and
dec
stos
and
pushf
dec
fwait
jmp
outsl
mov
mov
or
push
mov
sbb
aam
add
and
xchg
sbb
or
xor
mov
fsubs
xchg
out
adc
sub
in
dec
icebp
jbe
inc
test
divl
pop
movsl
add
jo
sub
call
dec
rcl
push
test
gs
out
sbb
pop
dec
ret
lea
cld
rorb
add
add
imul
mov
cmp
das
mov
fildl
push
jecxz
mov
shrb
push
lock
dec
xor
stos
into
xchg
mov
mov
cli
ja
sbb
shll
mov
mov
or
sti
pop
loopne
xchg
and
push
popa
jbe
cmp
pop
pop
jge
pop
inc
jbe
xchg
push
ljmp
mov
sub
add
rorl
jns
pushf
imul
and
mov
mov
popf
movl
les
add
and
movsl
shl
je
mov
daa
mov
adc
push
sbbl
stos
or
pop
cmpl
das
fxch
and
mov
fdivrs
fdivl
cmp
shlb
mov
pop
lcall
xchg
xor
cwtl
mov
outsb
out
adc
xchg
mov
aas
mov
sahf
icebp
mov
out
cmc
mov
insl
insl
push
shll
inc
push
rorl
js
int
adc
mov
aad
mov
push
into
scas
mov
and
add
dec
in
scas
int3
popl
sti
std
loopne
pop
sub
pop
mov
rcl
pop
cmp
jbe,pt
aas
add
jnp
fwait
push
sbb
xor
cmpl
jecxz
test
cmp
pop
pushf
mov
push
or
ffreep
lahf
fwait
aaa
rcrb
fcoms
jae
repnz
stos
jne
xchg
mov
adc
add
outsl
lock
mov
cmp
jge
nop
xor
mov
mov
loopne
les
sub
dec
inc
inc
add
xadd
dec
add
fstpt
pop
out
inc
adc
fimull
ds
mov
mov
cmpsl
shrl
in
arpl
mov
aaa
call
shrl
rcrb
lret
push
xchg
jl
pop
addr16
sbb
int3
out
stc
and
lock
sub
cmc
clc
sbb
nop
jb
mov
into
into
popa
cltd
out
arpl
stos
das
push
loopne
mov
pop
movsl
imul
or
sbb
aad
pop
pop
mov
ja
test
sub
cmp
and
fstl
lods
cli
lret
call
lcall
push
xchg
cmpsl
sbb
mov
fnstenv
into
orb
cli
adc
shl
mov
xor
add
cmpsb
std
xchg
adc
loop
jnp
and
adc
push
pop
sbbl
adc
xchg
in
lds
movsb
mov
cs
pop
movsbl
pushf
std
data16
add
mov
pushf
iret
add
xlat
xchg
insl
mov
call
push
mov
aad
test
mov
add
jmp
dec
cld
loope
pop
testb
rorl
nop
dec
adc
dec
loop
xor
lcall
jle
out
pop
lahf
cmp
les
push
jne
xchg
inc
adc
xor
push
jle
int3
mov
aam
jae
push
test
and
iret
out
push
lods
jns
cmp
push
sti
inc
xor
pushf
stos
sub
lcall
orps
sahf
dec
cmp
ret
and
popf
mov
dec
imul
es
imul
aaa
leave
fbstp
shrl
jmp
outsl
les
dec
xor
cmp
outsl
push
stos
cmpsb
fcomps
sbb
fcomps
dec
lahf
stos
xchg
aaa
lcall
movsb
xor
mov
or
push
pop
sub
pop
ljmp
in
test
jp
sbbb
xchg
jae
sbb
dec
mov
mov
ret
rcrb
push
or
mov
scas
cld
inc
mov
mov
sub
jns
std
pop
xchg
cld
js
xlat
ja
enter
cld
icebp
inc
inc
xchg
aad
inc
pop
and
xlat
rcll
cmp
adc
lcall
add
scas
loop
xlat
xor
jae
cmp
mov
mov
pop
fidivrl
jb
xor
aam
aaa
mov
outsl
adc
sbb
movb
fidivs
repnz
fs
vcvtsi2sd
mov
notl
and
mov
sub
cmc
stos
xor
xchg
in
movsl
imul
lahf
adc
subb
adc
cmp
iret
and
movsb
lods
mov
scas
out
jo
jne
pop
insb
pop
inc
sub
fwait
mov
mov
lods
jae
data16
dec
dec
cwtl
jae
pop
xor
cmc
cmp
fisubl
adc
or
test
add
and
movsl
std
lods
dec
or
cwtl
jmp
jmp
pop
pushf
sbb
clc
xchg
sub
cwtl
cmpsl
or
or
jbe
out
stc
push
insl
dec
test
ljmp
xor
aas
jge
shrl
pushf
sbb
mov
and
push
lret
cwtl
sti
fwait
xor
add
jg
or
ret
xchg
pop
mov
sbb
fadds
repz
popf
fwait
dec
xor
pushf
inc
mov
xor
in
clc
mov
popa
mov
mov
aaa
cld
xor
mov
out
pop
and
pop
arpl
pop
sub
pop
aam
pop
shll
test
mov
jl
and
fwait
mov
out
add
sti
pop
adc
insb
sub
cmp
mov
mov
or
les
rcl
push
mov
jbe
ret
repnz
pop
lahf
imul
xchg
dec
xor
cmp
sbb
xchg
imulb
jbe
add
and
lock
xor
mov
aas
iret
add
insb
mov
push
mov
sbb
sbb
sbb
jle
xchg
sarb
and
test
repz
out
xchg
in
and
jmp
push
mov
xchg
out
mov
sarl
mov
lods
sub
imul
cmp
stos
aas
jne
cmp
fmull
stos
sahf
mov
loope
rclb
fisttpll
jmp
push
mov
shll
adc
fcmovnu
push
mov
sbb
pop
mov
mov
push
xor
test
cs
and
mov
jae
cld
xchg
inc
rcrl
call
sbb
iret
or
xchg
adc
data16
inc
andl
cmp
mov
shl
inc
push
movsb
adcl
dec
adcb
jo
inc
pushf
or
das
call
ljmp
aas
ret
xor
jecxz
lods
nop
int
repz
push
std
jl
lret
mull
adc
scas
push
sbb
and
jmp
xor
pcmpeqw
outsb
mov
cli
push
inc
ficomps
push
mov
sbb
lods
aaa
fwait
jae
and
mov
push
jl
or
mov
jg
dec
js
cs
add
jg
and
pcmpgtd
add
je
shlb
hlt
je
fldl
push
aam
add
xor
in
clc
push
and
lcall
aas
push
into
iret
sub
les
xor
ss
push
xor
cmc
dec
or
into
sbb
inc
aas
popa
mov
aas
push
movsl
push
jg
scas
or
push
mov
lahf
int
fcompl
push
rclb
pop
adc
aam
sub
clc
and
inc
cmpw
sub
inc
push
fwait
mov
sub
push
std
push
mov
test
stc
mov
mov
in
pop
dec
lahf
and
insb
or
daa
mov
out
fs
jae
jne
std
ss
mov
in
push
push
lret
push
jns
or
inc
sarb
in
outsl
popf
cmp
std
inc
push
into
mov
stos
out
das
mov
mov
aad
sub
jb
xchg
or
mov
mov
or
call
xchg
shlb
dec
pop
add
arpl
and
les
stc
cwtl
cmp
inc
imul
or
inc
jl
js
test
adc
jae
cmp
loopne
inc
adc
das
jmp
ljmp
and
fistps
fwait
inc
out
fiadds
into
call
stc
jbe
xorl
imul
pop
fs
in
and
sub
ss
inc
ret
insl
jge
adc
pop
sbb
jne
and
lea
popf
xchg
add
push
rcr
jae
mov
cmp
dec
and
andl
mov
or
scas
ja
rcrb
fstp
fstl
or
clc
pop
jmp
inc
sub
xchg
pushf
lods
cmp
ficoml
mov
xchg
sti
addr16
aas
ja
mov
add
cmp
cs
arpl
push
je
cmp
les
xor
test
popf
or
mov
loopne
maxps
pusha
movsl
fisttps
aam
rcll
popf
arpl
lods
pop
daa
xchg
in
mov
movsb
mov
fs
es
lods
dec
and
jl
add
call
mov
sbb
jl
in
stos
lds
jl
xor
mov
das
jp
lea
jne
testl
pop
lods
jl
cs
pop
das
ret
lods
icebp
pop
or
inc
xchg
adc
sub
sub
lods
sub
cmpsl
insl
cwtl
sub
adcl
sar
cmp
cmpsb
pop
adc
or
fxch
lcall
lea
jo
in
aaa
int3
std
mov
lods
pop
push
pop
cld
popa
add
std
add
or
sub
vmread
jle
push
enter
iret
push
or
fistps
bound
cwtl
pop
test
out
pop
icebp
mov
jno
push
jmp
inc
stos
add
inc
sub
lret
repnz
dec
sbb
sahf
jmp
xchg
jne
outsb
mov
insb
js
inc
shr
subl
dec
icebp
push
xor
idivb
xchg
jmp
push
dec
pop
mov
out
xchg
stos
ficomps
pop
in
cmp
jns
add
scas
pushfw
cld
dec
fdivr
xchg
scas
cmp
jbe
mov
mov
mov
test
pop
sbb
jae
push
mov
xchg
jbe
loope
sub
sub
lahf
jge
fisttpl
shl
cmp
inc
mov
in
shlb
mov
pop
bound
mov
insb
pop
push
enter
xchg
xchg
mov
xorb
jns
out
fiaddl
pusha
push
call
jl
xorl
ds
add
nop
leave
add
in
stos
ret
testb
push
pop
push
mov
pop
cmpsl
mov
pop
or
and
mov
push
inc
addr16
jmp
and
push
das
push
xchg
bound
lods
jnp
fs
test
mov
sbb
insb
pusha
mov
aaa
cmp
and
push
imull
dec
js
add
outsl
daa
call
cltd
mov
jle
mov
js
dec
mov
rolb
int
aam
fwait
adc
dec
insl
icebp
add
pop
ret
insb
adc
movb
rorb
popf
cmp
loop
jmp
xchg
icebp
rcll
jnp
aas
sti
mov
push
push
stc
js
rol
xchg
pushf
out
int3
push
fsubl
adc
sub
or
imul
adc
aam
popf
adc
mov
mov
cs
in
sbb
mov
loope
cmc
pop
add
out
lea
stc
pop
pop
or
xor
pushl
fsubl
mov
add
fdivrs
pop
fidivrl
and
fiadds
dec
pop
das
ja
loopne
and
in
mov
js
call
cld
ffree
aam
mov
sub
mov
inc
mov
stc
cmpsl
mull
sub
imul
xor
pop
ror
sahf
cmp
dec
frstor
push
jecxz
sbb
sbb
push
adcb
inc
mov
popa
mov
icebp
cmpsl
sti
cmp
mov
dec
push
dec
push
jg
incl
inc
cmp
dec
leave
xchg
loop
lret
inc
inc
loope
push
outsl
mov
push
and
pop
insb
and
xchg
jo
sarb
cmp
xor
mov
push
push
ja
insl
jno
jb
pop
lock
addr16
jge
aad
andl
mov
push
push
inc
mov
mov
int3
repnz
push
leave
pop
insb
pop
in
add
in
adc
xor
bound
pop
out
fnstenv
inc
xor
sub
add
mov
addr16
movb
daa
pop
xor
imul
ljmp
and
orl
iret
es
movsl
ret
mov
data16
call
push
dec
dec
or
hlt
out
xchg
mov
mov
jb
jl
fnsave
repnz
mov
and
pusha
xchg
jg
aam
xor
mov
sub
testb
push
push
add
lods
clc
sub
and
push
push
cmp
sbb
je
jno
sbb
or
insb
xchg
and
and
inc
out
out
fucom
mov
mov
mov
push
aam
movsb
rcl
gs
xchg
or
jns
cmpsl
inc
ljmp
dec
and
lahf
xor
scas
sub
imul
fs
jns
sbb
daa
pop
xchg
rolb
test
lret
loopne
adc
pushf
push
adc
push
adc
sbb
stc
and
inc
das
repnz
or
stos
test
imul
mov
fcmovnbe
mov
stos
push
fcompl
filds
xor
inc
xor
subb
inc
mov
sbb
das
lock
mov
push
leave
sbb
rcrl
xchg
jnp
push
push
pop
sahf
mov
out
sbb
and
xchg
mov
dec
inc
inc
pop
aaa
mov
push
mov
adc
js
pop
pop
inc
mov
jge
addr16
in
pop
imul
cmp
pop
mov
enter
pushf
int
inc
xchg
loope
cmp
push
jp
mov
subb
in
mov
xchg
ljmp
pop
jp
jp
or
enter
xchg
int
data16
ret
daa
pop
sbb
fsubr
fs
sarl
fdivrl
mov
cmpsl
xor
and
jne
dec
inc
popf
xchg
mov
rorl
and
daa
sub
negb
mov
repz
cmpsl
or
and
dec
xor
data16
mov
popa
into
shl
pop
jp
pop
mov
cmp
mov
bound
inc
imul
aam
inc
adc
lahf
scas
xchg
cltd
dec
scas
mov
push
repnz
inc
in
sahf
stos
jae
pop
xchg
notb
mov
shll
dec
hlt
test
test
aas
dec
scas
popa
xchg
insb
adc
xlat
push
pop
and
inc
and
xor
dec
mov
inc
xor
jno
cmp
das
xor
cmpb
into
cmpsb
push
fnsave
or
sub
cmp
pusha
rolb
test
xchg
push
cs
jb
and
pusha
stos
or
lcall
push
cltd
xor
loop
loop
inc
push
ret
or
int
test
pop
in
test
inc
push
jmp
xor
mov
loopne
push
xchg
mov
jae
test
push
in
sbb
lds
hlt
insl
pop
and
and
je
xchg
xchg
cwtl
jl
out
cmp
daa
out
jge
cmp
inc
or
mov
call
std
cmpsl
rorl
outsl
mov
sub
adc
pusha
fisubl
mov
sbb
cmpsb
ljmp
pop
adcl
push
mov
lahf
inc
gs
mov
mov
inc
xchg
jne
push
insl
xorl
dec
sbb
xchg
jl
jge
cmp
into
ja
mov
jecxz
fmul
inc
test
jmp
jecxz
je
mov
push
push
cmp
mov
fiadds
rclb
in
xchg
xor
pusha
fidivl
xor
mov
mov
ds
mov
stos
push
xchg
sbb
arpl
inc
sub
mov
mov
inc
mov
mov
xchg
jmp
mov
ffree
push
fucomi
add
mov
adc
repz
and
rcrb
mov
and
push
and
dec
xchg
jb
scas
es
lods
repnz
xor
and
lods
aam
lret
mov
xchg
clc
in
cmp
in
push
jae
xchg
push
flds
int
dec
cmp
inc
xor
repnz
cmc
ljmp
xor
out
jecxz,pn
add
mov
cmp
out
dec
adc
xchg
or
or
divb
pusha
ret
cltd
andb
sub
add
lret
add
add
loopne
mov
aas
mulb
ss
xor
filds
mov
cs
add
push
xchg
loope
jmp
mov
push
inc
xor
add
mov
sbb
and
push
mov
mov
faddl
insl
dec
jp
cld
fcomps
fstps
add
mov
adc
rcll
mov
lcall
loop
scas
rcll
xchg
sahf
adc
cmp
and
inc
psadbw
in
mov
dec
fs
adc
shl
xchg
rorl
addr16
lahf
or
sbb
push
in
lret
hlt
test
xchg
add
arpl
xor
out
cli
lds
push
pop
mul
ss
xchg
out
loope
sub
xchg
mov
pop
inc
mov
lock
sti
pop
data16
in
add
xchg
lret
dec
inc
sti
aas
add
sbbb
mov
push
fsub
imul
pop
js
lahf
jg
jno
push
jge
jbe
sub
inc
jg
push
sbbb
nop
shrb
add
cld
in
stc
in
testb
into
dec
cmp
cmp
mov
xchg
js
aad
out
adc
out
inc
imul
and
fwait
inc
or
dec
xor
xchg
in
jg
add
mov
xchg
xlat
in
in
bound
cld
aaa
loopne
and
sbb
bound
rolb
loopne
adc
testb
adc
jp
cmpsb
arpl
aas
sbb
divl
outsb
mov
gs
jg
mov
cmp
int3
inc
cld
cwtl
jno
add
sub
cs
int
insb
mov
mov
subl
mov
push
push
pop
pop
test
sub
pusha
decb
mov
leave
xlat
lods
aad
insl
jmp
jno
jp
enter
jns
push
jmp
push
and
cs
pusha
in
pop
adcl
popf
outsb
push
pop
aad
loopew
mov
add
inc
pop
out
jmp
pop
rcr
sub
ret
xchg
fs
sbb
and
mov
cmp
movsl
lahf
mov
orl
inc
push
mov
les
cmpb
mov
sarl
push
nop
mov
xchg
mov
sti
mov
mov
cmc
sti
cltd
cmp
not
inc
jcxz
fimull
push
mov
push
cmp
mov
jp
movsl
imul
imull
dec
jecxz
mov
sub
xchg
in
insl
jle
inc
jns
pusha
jmp
test
popa
in
push
call
cmp
mov
inc
insl
jne
and
clc
lods
mov
les
push
jp
add
fstps
xor
js
int3
outsl
sbb
cmpsl
inc
sbb
arpl
push
pop
push
mov
xchg
popf
push
cwtl
mov
data16
xor
dec
mov
icebp
pop
jns
roll
insb
iret
fsubrs
sub
inc
add
mov
push
lret
stos
outsl
pusha
jns
or
add
lds
stc
and
sub
das
mov
test
push
int3
loope
in
int3
daa
mov
and
rcrl
jno
fidivrl
inc
mov
dec
cmpsl
jg
das
enter
loop
push
pop
push
test
xchg
cmp
inc
sub
pop
out
jb
mov
cmp
cmp
outsl
loope
pop
adc
pop
adc
add
sub
ror
adcl
outsl
sti
shrl
mov
nop
sbb
in
xor
pop
xchg
subb
lret
inc
imul
lds
jnp
stos
push
es
fucomp
pop
mov
mov
sarb
mov
push
ss
xchg
inc
mov
loop
pushf
jg
xor
dec
sub
loopne
lret
cli
add
dec
push
xor
es
or
cli
xor
fdivs
pop
icebp
xorb
sti
cltd
xchg
and
test
jbe
daa
pop
push
daa
cs
xor
mov
leave
adc
outsl
std
cmp
sub
and
jbe
fcmovne
adc
pop
jmp
cli
popf
mov
mov
push
cmp
orb
lock
not
lret
imull
mov
mov
movsl
scas
fisubs
dec
repnz
push
xchg
loop
pop
sbbl
sbb
int
cmp
icebp
cld
daa
lahf
movsb
push
daa
pop
sub
imul
push
in
loop
gs
mov
xchg
dec
into
jae
push
jmp
or
mov
es
ljmp
mov
add
cltd
fwait
adc
gs
mov
pop
mov
pop
fwait
xchg
mov
lds
scas
adc
pop
sbb
mov
pop
les
notl
fists
js
sub
sbb
adc
push
test
mov
pop
and
iret
aaa
jg
jecxz
fnsave
rolb
jg
js
xchg
stos
decl
fwait
push
out
mov
inc
dec
in
in
sti
es
cmpsb
bound
imul
inc
inc
push
or
ss
cmp
jo
test
and
mov
lods
jo
lret
adc
xchg
data16
mov
mov
jnp
jecxz
lcall
push
in
xchg
xor
and
and
mov
pop
xor
cmp
pop
mov
cli
or
fldpi
jo
mov
loope
xor
test
xchg
add
cwtl
jl
add
pushf
inc
pop
xor
push
es
mov
jne
ss
sub
jb
lcall
jae
push
or
sbb
mov
sub
xchg
pop
in
push
xor
jbe
or
incb
movsl
int3
out
fwait
call
pop
aas
and
shlb
jnp
pop
adc
adc
je
loope
cmp
scas
cli
iret
sahf
scas
jne
pop
in
cli
adc
lods
inc
inc
xchg
aas
mov
mov
dec
std
cmp
jle
arpl
rorb
adc
shlb
jne
cmp
outsl
cmpsl
xor
and
dec
or
cltd
pop
std
xor
jecxz
push
stos
jl
lcall
aad
cli
adc
outsb
call
dec
cmp
adc
and
shll
call
mov
or
mov
mov
bound
cmp
jnp
enter
push
in
in
cltd
fiadds
inc
ja
jl
jne
repnz
bound
loope
lret
pop
nop
iret
jmp
fcom
mov
and
por
fs
jle
pop
push
inc
and
mov
rorl
push
shl
mov
fsubrs
out
stos
shll
mov
xlat
movsb
js
jl
dec
or
lods
pop
jl
mov
popa
int
sti
sbb
xor
arpl
movsl
mov
insb
inc
inc
imul
mov
pop
xor
mov
insl
cmp
jns
jns
movsb
pop
or
push
pop
fldl2t
dec
ja
stos
pop
subb
pop
sub
mov
dec
cwtl
sbb
mov
rorl
adc
inc
lcall
sbb
sub
loope
sti
cmpsl
das
in
int3
add
and
lods
cmp
jecxz
dec
add
fs
adc
das
mov
mov
fldcw
aaa
add
scas
out
std
xor
fiadds
mov
sahf
rol
xchg
jne
mov
testl
in
sub
pop
pop
addr16
gs
nop
mov
lock
icebp
lret
stc
subl
cltd
in
push
push
imul
pusha
cmpsl
fs
fdivrs
icebp
xor
jnp
imul
rol
mov
pop
movsb
push
std
clc
sub
ja
adc
out
mov
iret
int
fbstp
hlt
fisubrs
lret
inc
pushf
gs
cltd
std
js
leave
pop
sbb
cmp
mov
xchg
jo
add
int
call
fcmovne
and
sbb
out
jmp
xchg
cmp
mov
ja
inc
xor
xchg
fsts
add
push
lret
push
inc
dec
test
and
and
lods
fldenv
jnp
add
mov
cwtl
icebp
xchg
pushf
fcmovnbe
fwait
roll
arpl
mov
or
ror
fisttps
in
push
adc
outsl
jmp
insb
xchg
arpl
pop
xchg
addr16
dec
je
aad
out
dec
xchg
pop
aaa
cmp
loopne
movsb
inc
add
in
pop
fsts
push
shl
dec
mov
mov
sbb
lods
enter
das
pop
adc
jae
inc
mov
lret
cmpsb
cmp
sbb
shr
push
dec
ljmp
mov
rclb
fisttps
cmp
int
mov
pop
xchg
jbe
adc
push
jnp
xor
jne
sub
jbe
lahf
xchg
xchg
dec
sahf
outsl
push
mov
pop
bound
imul
xchg
sub
pop
fcompl
pop
mov
xchg
add
sbbl
mov
fadd
add
loop
pop
mov
adc
or
push
lcall
xchg
frstor
mov
jo
test
divb
pushf
cs
cmpl
push
out
mov
mov
push
ret
imul
inc
stc
mov
cmp
xor
sbb
pop
xor
inc
cld
andl
xor
xor
push
mov
das
je
push
mov
sti
jecxz
push
sub
mov
sarl
aas
adc
cmp
xchg
push
cltd
mov
sbb
adc
in
dec
nop
mov
dec
inc
out
dec
push
pop
jp
stc
add
lcall
sub
cmp
call
sbb
arpl
orb
fwait
push
std
mov
xor
insb
jnp
pop
enter
mov
int3
stos
subb
mov
pop
movsl
outsl
test
popa
ss
aas
adc
jl
test
xor
xchg
inc
aam
addr16
mov
sar
cmpsb
inc
xchg
fucomi
xor
dec
mov
movsb
or
mov
and
repnz
stc
mov
aas
jecxz
aam
xchg
mov
in
push
test
xchg
mov
outsl
xor
jg
pusha
sub
jecxz
iret
adc
in
orl
or
data16
inc
mov
icebp
mov
and
mov
cmp
sbb
push
sub
test
inc
shll
hlt
push
or
xchg
mov
push
in
pusha
dec
ss
mov
icebp
dec
xchg
imul
jbe
and
mov
fwait
mov
and
dec
push
cmp
sbb
scas
fsubrl
cs
fisubs
mov
jmp
cmp
sbb
jmp
fidivs
xor
dec
repz
test
cmpsb
mov
dec
add
pop
in
xor
inc
imul
add
in
xor
fimuls
sub
nop
xchg
test
push
xor
js
pop
push
jmp
dec
pushf
stc
in
dec
mov
mov
filds
shl
adc
jno
aad
adcl
dec
aaa
mov
movsb
test
popf
fdivr
addr16
mov
lods
add
dec
jle
jbe
push
or
mov
dec
adc
push
das
aam
scas
pop
mov
fldl
scas
shrl
ljmp
jmp
je
imul
and
je
js
mov
out
or
xor
fsts
arpl
sub
push
push
sub
addb
stos
add
leave
cltd
jns
loope
xchg
jno
out
mov
cwtl
inc
mov
pushf
mov
outsb
mov
xor
mov
daa
data16
mov
and
loop
or
or
adc
rcrb
nop
aam
inc
dec
mov
xchg
jecxz
pop
or
and
pushf
sti
sbb
cmp
mov
imul
pop
sbbl
sbb
rorb
jne
ss
pushf
add
popf
adc
test
sub
xchg
gs
push
xchg
sub
rcrb
arpl
xor
rorl
push
push
mov
test
lock
shlb
aaa
inc
cmp
lret
in
ss
lds
out
xor
xchg
lea
nop
and
jns
and
and
int
xor
dec
jle
jno
pop
sbb
pop
insl
iret
xchg
repnz
cmp
adc
jne
clc
jb
dec
pushl
inc
xor
adc
adc
testl
fdivrl
lods
mov
push
outsl
pop
and
stos
fidivl
test
inc
imul
dec
hlt
lahf
sub
xor
cmp
adc
xorl
mov
jmp
and
inc
sbb
dec
push
cwtl
push
cmpsl
test
iret
dec
push
in
in
clc
ja
int3
cmpb
mov
out
sub
aad
sbb
mov
int
xor
sahf
mov
push
in
mov
push
lahf
jbe
aad
arpl
xor
dec
push
jne
jb
mov
mov
repz
fldcw
outsb
sub
into
gs
and
mov
andb
add
sub
mov
test
sub
push
mov
sub
lret
add
shl
movsb
ret
sbb
int
sub
jmp
inc
xor
mov
jb
movsl
jg
icebp
or
sbb
js
mov
ljmp
pop
test
testl
cmp
dec
mov
xchg
idiv
add
jb
xchg
xor
lea
and
push
stos
adc
adc
xor
shl
jg
adc
jmp
adc
fadds
and
imul
or
aad
fwait
int3
lcall
ja
roll
jb
loope
adc
cmpsl
mov
sbb
cmp
dec
aam
and
pushf
popa
mov
jae
and
inc
mov
repz
sti
lods
fdivp
pop
jmp
arpl
in
imul
ds
loopne
and
inc
jbe
pop
cmp
dec
test
fiaddl
stc
loopne
inc
flds
push
in
wrmsr
rep
mov
sub
fwait
xchg
xor
dec
ljmp
dec
push
jae
sti
js
in
mov
sub
pop
adc
loop
xlat
lret
pusha
das
stos
mov
outsb
xlat
pop
cwtl
push
rclb
addr16
dec
test
mov
inc
jle
dec
cmp
rol
pop
jne,pn
pop
icebp
sub
add
jecxz
cwtl
pusha
lcall
dec
jecxz
mov
xchg
jno
pop
movsl
inc
jge
leave
leave
dec
test
sbbb
loope
mov
fnstenv
lock
and
push
jge
fs
lods
dec
fs
inc
xchg
fmuls
hlt
mov
inc
fadds
fildl
push
jo
jbe
decb
outsl
xchg
imul
push
mov
pop
pop
jp
mov
ljmp
xchg
dec
pop
or
insb
lods
loope
and
mov
adc
inc
popa
cmp
cmp
in
icebp
push
fstl
xchg
leave
scas
xchg
rorb
rdpmc
pop
push
aam
jecxz
or
xor
stos
cmp
xchg
mov
out
ja
lcall
dec
in
scas
xchg
lret
ret
ljmp
lods
mov
xor
mov
mov
inc
mov
mov
dec
fistpl
jnp
jns
mov
adc
mov
sub
jnp
pushf
xchg
pop
sbbb
sarl
mov
mov
or
int3
or
mov
sbb
mov
xchg
mov
inc
aam
xchg
cli
or
lods
push
inc
icebp
mov
das
ljmp
aas
ret
data16
mov
ficoml
std
xor
mov
xrelease
mov
jb
ficompl
lds
sub
xor
imul
repnz
cmp
aaa
adc
in
int
cmpsb
lret
push
xor
shrb
lods
mov
mov
test
popa
ret
or
test
icebp
mov
jnp
add
out
call
or
sbb
roll
jmp
mov
pusha
jg
iret
push
jne
mov
cmp
cmp
mov
sub
lahf
xor
push
and
xchg
or
or
icebp
das
sub
loope
jns
lea
xor
mov
dec
orb
jg
and
fistpll
movsb
mov
pop
imul
sbb
xchg
frstor
adc
xlat
jge
sbb
mov
sbbl
shr
cwtl
cmc
daa
dec
cltd
clc
test
cmc
cwtl
jmp
xor
push
loop
xor
pop
stc
movsl
and
pop
push
mov
xchg
jmp
sub
push
daa
imul
dec
sar
es
fbstp
addr16
sub
xchg
sahf
pop
dec
xor
outsb
push
scas
pop
push
cld
lock
inc
test
and
sbb
pusha
jne
jno
test
jle
jge
cwtl
add
daa
add
repnz
popf
dec
fs
pop
pop
xor
inc
sub
pushf
mov
outsl
das
clc
aaa
das
lods
ret
pop
ljmp
insb
mov
jno
test
jbe
mov
mov
out
jb
jl
movsl
pop
pusha
outsl
js
test
pop
cmp
push
pusha
adc
dec
rcr
out
xchg
sbb
shrb
pop
sub
push
inc
cmpsl
push
push
test
and
sub
jle
fld
lds
xchg
repz
ljmp
clc
adc
xchg
or
sahf
mov
ss
xor
add
inc
movsl
lds
arpl
pop
sub
ficoms
push
sbb
xchg
in
and
lret
inc
push
andl
out
mov
push
sbb
lods
dec
mov
into
mov
push
or
loope
xchg
xor
out
mov
sbb
cltd
xchg
xor
sti
fwait
icebp
fdivrl
int
sarb
movsl
call
test
push
cmpsb
xor
cmp
mov
dec
adc
xchg
mov
sub
shll
xchg
pop
add
nop
aam
or
add
mov
lret
mov
xchg
push
test
lods
jmp
sub
fcoms
mov
shlb
cmc
sbb
jae
in
xchg
lods
call
push
cmc
jge
cmp
rcr
mov
add
icebp
push
gs
out
mov
outsb
and
fistpll
inc
arpl
idiv
add
pop
mov
int
popa
or
sbb
dec
stos
call
add
xor
das
mov
push
dec
hlt
push
inc
add
push
cmp
mov
or
or
jecxz
cmp
je
lock
jnp
push
fbld
pop
aad
sbb
cmp
xchg
pop
and
rcl
sub
nop
lret
pusha
std
xor
xchg
jae
xor
pop
push
je
addr16
and
and
mov
sub
iret
cli
jb
ret
jno
sbb
sub
repz
lock
aam
sbb
ret
and
mov
mov
pop
add
sub
pop
mov
inc
sbb
je
push
shll
cwtl
xor
cmp
ret
pusha
ret
rorl
insb
mov
inc
movb
rcrb
mov
fsub
mov
leave
mov
push
test
xchg
lahf
jae
stc
jns
mov
fucomi
mov
pop
out
test
pop
dec
repz
and
sub
fcoml
inc
popa
in
clc
popf
inc
pop
lea
loope
xor
mov
sub
imul
xor
mov
les
xlat
xchg
in
inc
sbb
stc
jbe
popf
mov
jle
ret
rcrb
mov
sbb
out
lods
addl
iret
fdivs
mov
push
cmp
jns
or
sbb
add
mov
xor
fstpl
sbb
dec
sub
push
sbb
xor
xor
inc
jle
leave
shrb
subl
stos
or
out
push
push
push
pop
lock
xor
in
push
test
pop
ljmp
test
sbb
mov
cli
xchg
repnz
test
iret
dec
pop
adc
decb
enter
cmp
xlat
jne
je
or
mov
addl
mov
leave
jb
orl
bound
lock
jae
mov
push
mov
push
jne
test
in
jmp
cmc
cltd
push
and
pop
jmp
mov
mov
mov
mov
cs
rcl
shlb
ror
pop
dec
rcrb
shlb
dec
ds
idiv
in
xchg
dec
in
cmpsb
lock
cmp
sub
dec
lock
orl
add
add
mov
into
andb
cmp
cmc
jno
jle
mov
mov
dec
jmp
ret
cmp
jge
inc
fwait
pop
jmp
fs
imull
arpl
adcb
jbe
cmp
jmp
mov
mov
inc
cmc
stos
lods
pop
loop
cmpsl
loope
mov
pop
fisubrl
xlat
hlt
out
xchg
test
xor
and
push
aam
lret
or
inc
inc
shrl
int
cmp
push
in
es
xchg
pop
sbb
mov
add
mov
dec
pop
cmp
mov
int3
clc
sbb
lret
lods
push
lods
inc
stc
cmp
xchg
test
aam
jle
adc
pop
out
into
push
jmp
repnz
or
es
add
int3
cmp
data16
lods
lds
cwtl
dec
jnp
ljmp
or
xor
push
int
sub
cld
lcall
xor
lret
mov
test
jmp
adc
mov
xor
mov
cmp
pop
gs
sub
mov
and
jecxz
jecxz
jb
lods
fidivl
dec
leave
popa
out
divb
jmp
pusha
xlat
xchg
ja
shrl
hlt
push
fimuls
pop
out
out
mov
loope
mov
pop
push
out
cmp
stc
xchg
or
dec
lock
sub
loope
sub
inc
fdivs
pop
pop
xchg
dec
aas
icebp
jmp
sbb
jnp
test
fidivs
nop
in
xchg
sbb
lods
mov
fildl
sbb
cltd
adc
jo
adc
das
ljmp
testl
dec
les
mov
sub
icebp
subl
mov
mov
xor
enter
or
jp
sbb
sbb
addl
push
adc
hlt
out
jno
das
scas
imul
pop
adc
pop
push
jmp
stos
fwait
jne
lret
xchg
cmp
jbe
xchg
std
adc
xor
push
rorb
push
gs
mov
iret
je
fwait
js
and
mov
or
push
sahf
cli
xchg
ret
mov
fistps
pop
rcll
mov
cmc
lahf
mov
arpl
movl
pop
int
pop
inc
sbb
adcb
inc
pop
mov
inc
xor
inc
outsb
mov
scas
mov
mov
test
andb
sbb
ljmp
cld
add
push
mov
jo
into
adc
std
fwait
add
insb
add
gs
mov
or
push
sarb
int
pop
mov
mov
fsubs
faddl
rclb
jmp
xchg
xlat
or
xor
popa
push
push
mov
xchg
jno
sbb
out
fwait
add
or
bound
pop
dec
and
mov
sub
or
data16
cmc
or
jecxz
push
mov
stos
pusha
sbb
and
clc
int3
ret
dec
cmp
push
push
sbb
cmp
inc
inc
cmp
and
jg
je
add
movsb
adc
cltd
jle
imull
clc
test
adc
popf
push
jbe
jno
aas
stos
inc
in
xchg
jno
das
push
xor
sub
and
insl
sbb
mov
jle
push
in
mov
imul
jbe
cwtl
pop
pushf
sti
loope
xor
mov
aam
add
jns
mov
pop
or
shrl
ljmp
add
or
xor
imul
fldt
jae
xor
cs
jp
sbb
ja
in
fs
mov
mov
mov
push
imul
pop
sbb
out
repz
adc
notb
xlat
cmp
adc
jb
jo
popf
cmp
xor
jne
imul
repz
mov
test
jmp
popf
or
es
arpl
fiadds
xor
inc
mov
mov
mov
jmp
cmp
mov
movsb
mov
repnz
or
shlb
adc
mov
add
in
test
xlat
push
or
pop
pop
shrl
outsl
jbe
cmp
pop
aad
jne
clc
jbe
add
cs
sub
movsl
ja
and
pop
add
jo
or
push
push
jl
sbb
imul
loope
jl
jle
lea
inc
xchg
fidivrl
test
mov
mov
iret
leave
out
inc
add
or
ljmp
lods
in
out
je
inc
fstpl
xchg
sbb
pop
mov
sub
xchg
adc
out
and
scas
or
push
imul
fwait
test
and
push
dec
nop
fldenv
lock
loop
jns
jbe
dec
push
jno
xor
mov
add
callw
test
in
rcr
fildll
es
lods
dec
stos
lahf
rcrl
loope
pop
cs
adc
mov
leave
mov
or
fstps
mov
arpl
imul
iret
or
mov
sbb
sub
les
sub
mov
xchg
addr16
arpl
paddsb
mov
fmul
or
sahf
sub
rcrb
push
aam
mov
jnp
aad
loopne
pop
or
cwtl
and
dec
bnd
xchg
ja
pop
pushf
xchg
arpl
inc
pop
cmp
mov
std
call
jne
clc
enter
add
pop
mov
mov
inc
jle
pop
ljmp
das
mov
fadd
paddq
fmuls
fs
lcall
push
cwtl
or
adc
pop
mov
stos
mull
push
sbbb
xchg
push
insl
jge
bound
out
into
cmp
sti
enter
repz
mov
mov
xchg
jl
out
leave
lcall
mov
dec
fdivl
arpl
dec
subb
mov
mov
lods
or
dec
fildll
and
aam
mov
ret
pop
pop
mov
mov
dec
mov
insl
rcll
and
inc
pop
roll
mov
push
adc
lret
movntps
sarl
push
inc
cmp
in
cmovp
sahf
test
lods
mov
sub
or
xor
cmp
and
add
stos
inc
sbb
es
adc
leave
mul
xchg
and
dec
cs
jge
xacquire
mov
ss
ss
push
cld
cmc
iret
scas
subl
lahf
imul
cmp
dec
xchg
movsb
sbb
dec
lahf
loopne
mov
out
xchg
test
in
mov
out
push
xor
or
push
mov
ljmp
addl
fwait
add
push
in
sub
icebp
js
lret
or
push
pop
push
mov
xchg
xchg
and
adc
jne
loope
or
mov
aam
stos
jecxz
mov
clc
test
sti
lahf
jg
lcall
sub
cmp
pop
lods
leave
aam
test
mov
jns
std
xor
push
push
inc
test
mov
inc
shl
cmpsb
mull
cld
cmp
adc
test
sub
xor
mov
mov
ror
loop
add
bound
mov
xchg
mov
mov
dec
test
lods
jne
pop
pop
outsb
aad
mov
push
mov
outsl
mov
scas
jo
push
cmp
jb
fidivrl
add
fwait
cmp
mov
push
pop
xchg
sbb
stc
xchg
sbb
test
push
pop
dec
test
xchg
mov
inc
xchg
lret
pop
loop
pop
popa
out
push
add
iret
dec
dec
fwait
je
dec
jbe
jnp
test
push
ljmp
cs
xchg
adcl
out
and
mov
xchg
je
cmc
or
out
sbb
lock
pop
movsb
jle
lods
dec
jle
inc
or
cmp
inc
and
clc
int
xor
cltd
sub
fcoml
int3
int3
pop
jo
xlat
dec
push
and
push
mov
jg
popf
ficompl
xor
dec
cmp
dec
ss
pop
pop
inc
cmpsb
mov
pop
hlt
popa
pop
dec
das
je
loopne
fisttpl
jmp
and
mov
adc
fxch
shrl
ljmp
push
cltd
in
sub
inc
shll
mov
flds
das
gs
aaa
cmc
mov
fs
mov
jns
cltd
lea
bound
push
ss
xor
insl
xchg
fsts
sbb
or
rolb
mov
cmpsb
jg
pop
out
sti
les
adc
adc
mov
mov
lahf
cwtl
add
bound
int3
imulb
pushf
shrb
add
pop
or
ret
ret
and
addr16
fbstp
movsl
gs
aaa
scas
call
test
dec
sub
jno
insl
mov
mov
mov
mov
filds
push
mov
je
sarb
jge
xchg
rclb
or
lock
cmp
push
inc
or
push
inc
js
lret
cmp
sub
jo
pop
xor
insb
pop
fistps
jne
shll
mov
lods
das
mov
xchg
dec
pop
dec
xor
and
adc
jp
out
repnz
inc
mov
fisttpll
out
cmp
pop
and
mov
je
mov
js
xchg
addr16
fs
mov
sahf
add
out
dec
jbe
lds
jge
movsl
pop
xor
push
fs
jle
out
mov
jne
out
inc
add
inc
mov
push
aam
dec
lcall
add
and
ss
test
aad
jbe
jbe
rcr
ficoml
adc
xchg
inc
mov
repz
lret
iret
cmp
xchg
sbb
adc
xchg
shrl
in
inc
pop
mov
scas
out
and
das
and
xchg
outsb
mov
cmpsl
jne
ret
push
mov
ja
xor
je
mov
imul
add
cmp
shrl
addl
call
loope
push
mov
xchg
mov
xor
shll
cmp
pop
pop
jle
mov
mov
inc
rcrb
jbe
sub
clc
cwtl
addr16
pop
push
xorb
cmp
aam
jns
push
ret
xchg
test
mov
xchg
jae
mov
in
lea
sub
popf
ljmp
ds
cmp
ds
adc
sbb
jns
dec
and
xchg
in
lods
imul
insb
and
stc
inc
insb
xchg
mov
repnz
inc
mov
sub
xor
mov
and
jae
sub
push
inc
jecxz
loope
jbe
jecxz
mov
and
push
pushf
imul
or
push
mov
in
cmp
ror
cmpsb
sbb
pop
push
jae
in
test
sbb
jmp
aam
sub
jo
adcb
movsw
xchg
mov
add
fimuls
cmp
inc
mov
mov
sbb
xchg
push
adc
mov
push
cmpsl
js
push
xor
xor
fiadds
shll
mov
sbb
adcl
movsl
sarl
and
or
push
inc
inc
mov
mov
jge
xor
call
mov
popa
xor
cmc
fisttpl
pop
rorb
scas
sbb
xchg
cmc
inc
cmc
and
pop
iret
decl
sbb
inc
pop
aad
mov
icebp
mov
testb
lods
icebp
aaa
int3
out
mov
mov
arpl
add
dec
sahf
push
mov
je
stc
push
fisttps
xor
hlt
sbb
cmp
adc
inc
lods
sbb
bound
sub
loope
movsl
adc
mov
xchg
add
mov
mov
rorb
jne
sbb
dec
mov
fstpl
outsb
rcrb
add
fisttpl
cs
pop
adc
jecxz
dec
mov
icebp
xchg
add
lret
roll
fidivrl
add
jbe
push
xchg
fs
jecxz
loop
fsts
pop
xor
sbb
fucomi
xchg
push
add
out
xchg
nop
test
mov
call
and
bound
xor
fidivl
ja
fstps
js
out
data16
push
mov
cli
add
sub
inc
cmpsl
fwait
stos
mov
mov
testl
mov
pop
jmp
jl
arpl
push
jmp
and
mulb
and
leave
jle
add
mov
in
pop
mov
push
cli
xor
in
add
shrb
xlat
mov
cmpsb
mov
dec
out
lahf
dec
aam
dec
and
repz
mov
cmp
lret
stos
cmp
std
lock
ret
movsb
stc
jg
sbb
push
sub
out
cs
mov
xchg
out
lret
add
test
sub
sub
inc
lds
or
dec
stos
mov
lahf
stos
clc
pop
inc
cmp
dec
loopne
dec
ljmp
mov
push
lcall
pop
addr16
xchg
mov
icebp
pop
xor
shlb
pop
ret
ss
test
push
inc
ret
stos
fcoml
xor
adc
in
adc
cltd
xchg
cld
jecxz
adc
arpl
cmpsl
enter
fisttpll
mov
sbb
push
pop
loope
loopne
in
shlb
xchg
das
ret
shl
xchg
outsb
stos
and
inc
frstor
test
lods
std
lret
pop
pop
out
mov
cltd
ljmp
subl
or
clc
sub
add
add
sub
repz
mov
or
xorl
add
mov
loopne
and
mov
fucomp
dec
xchg
mov
mov
dec
inc
mov
push
push
ja
adc
arpl
std
pop
int
aam
mov
popf
mov
mov
sub
icebp
call
lret
mov
dec
sbb
cmp
popa
adc
js
inc
sbb
pop
or
cmp
popa
fwait
cwtl
push
sub
in
ds
mov
aad
xor
addr16
cmp
dec
jo
cmpb
sub
movsl
hlt
test
loop
adc
movsl
jno
rcr
cmp
aas
daa
sbb
mov
mov
es
inc
mov
movsb
out
add
cwtl
xor
aas
rcrl
sbb
ja
jg
and
sahf
lods
outsl
or
test
js
xorl
pop
and
cmc
mov
mov
test
lret
mov
xchg
in
push
sbb
fdivl
cli
inc
xor
xor
xchg
lods
sub
cli
push
idivb
gs
cmp
inc
movsl
cmp
xchg
in
xabort
xchg
add
das
rcrl
jmp
iret
pop
cmp
shrb
mov
imulb
lea
arpl
stos
repnz
aaa
sub
dec
xchg
enter
scas
mov
outsl
jl,pn
adc
xchg
rolb
aam
aam
push
adc
pop
sub
adc
push
and
adc
test
dec
cmpsl
cwtl
or
mov
cli
adc
cmp
ljmp
cli
outsb
gs
or
lret
fwait
jne
lods
sub
popa
ja
cmp
and
fucom
fldcw
mov
std
repz
fidivrs
inc
repz
int3
sub
sti
xor
push
and
push
roll
sub
pop
lods
or
bnd
hlt
sub
loop
out
mov
pop
push
fmul
mov
jge
out
mov
adc
xchg
test
mov
sbb
xor
pusha
mov
out
repnz
mov
and
inc
cmc
mov
sbb
loopne
repz
sbb
dec
add
movsb
xchg
shrb
repnz
lds
mov
lret
movsl
sbb
enter
mov
push
dec
inc
into
pop
enter
inc
or
lret
sahf
enter
mov
sbb
or
pop
and
pushf
inc
mov
cmpsb
pop
cmc
rcr
sahf
inc
outsl
cli
push
in
jns
out
into
test
lock
mov
jge
cmpsb
xchg
lock
inc
cli
adc
sbb
inc
jne
mov
negb
mov
scas
push
sysenter
adc
or
xchg
push
clc
aad
aaa
cmp
outsb
xorl
mov
cmpsl
setne
lds
lret
pop
mov
cmpsb
dec
fistps
outsl
lret
mulb
repnz
cmp
sub
sahf
add
jae
or
lcall
push
aas
mov
into
push
push
test
xchg
pop
test
stc
lods
movsl
dec
es
gs
push
notl
xchg
inc
in
das
cmp
out
lea
mov
iret
jns
lods
xlat
lahf
adc
xor
mov
ja
xor
jns
xor
mov
adc
enter
inc
ljmp
mov
sbb
movsl
mov
push
loop
mov
push
sub
push
fsubs
adc
or
imulb
mov
pushf
lret
cmp
fadd
pop
jnp
or
lret
jecxz
js
clc
dec
fcmovnbe
loope
cmpsb
jge
cwtl
insb
roll
ss
les
push
sbb
xor
sbb
fcomi
or
mov
insl
adc
mov
test
pushf
push
std
xchg
ja
fstps
inc
repz
and
and
push
mov
xchg
mov
push
ds
push
inc
xchg
mov
pop
call
cmc
cli
shll
xchg
pop
xchg
lods
lods
inc
sub
push
cmp
push
fdivl
or
add
daa
sub
adc
dec
cmp
in
push
inc
xor
adc
add
mov
fbstp
mov
jge
js
mov
sub
mov
dec
mov
inc
aad
cmp
pushf
push
jle
mov
xor
sbb
call
out
movsb
call
mulb
aaa
inc
repnz
loopne
pop
pop
push
cltd
test
inc
cmpsl
cmp
lea
mov
sbb
pop
xor
lahf
out
mov
sub
test
fcomps
lock
aas
pop
lods
cmpsl
cmpsb
ss
cmpsl
and
xrelease
dec
mov
aaa
test
mov
push
pop
nop
mov
mov
cmp
loopne
pop
movsl
test
nop
or
mov
inc
xlat
sub
add
stc
jp
lahf
das
test
jns
jnp
mov
dec
test
push
or
setnp
shll
pop
sbb
mov
lcall
ret
xchg
pop
jbe
int
jmp
and
sub
xorb
imul
mov
jo
mov
in
mov
sbb
popa
fmull
mov
adc
pop
dec
clc
mov
scas
popa
push
sub
xor
pushf
pop
imul
je
cmc
mov
adcb
out
jbe
les
adc
jge
xchg
test
jge
mov
cmp
or
inc
push
aas
fs
or
fs
pop
xchg
and
insb
jecxz
cmpsl
jge
jp
xchg
xchg
ror
adc
icebp
push
rol
push
hlt
mov
pop
movsl
xchg
and
fwait
inc
jae
fisttpl
mov
jno
add
pop
shrb
xor
inc
movsb
daa
test
hlt
push
mov
and
int3
or
cld
imul
pop
xchg
loope
push
jbe
add
cltd
data16
push
leave
dec
pop
mov
sbb
arpl
adc
mov
mov
dec
int3
jnp
leave
mov
and
bswap
jmp
adc
int
in
repz
mov
div
ljmp
ljmp
jno
adc
inc
pushf
aad
adc
sbb
inc
fld
fcoms
movsb
aam
jne
cmp
incb
popl
lret
cmpsl
jb
aaa
add
sbbb
push
mov
xchg
cmp
jo
and
popa
cs
shlb
push
es
mov
pushf
mov
mov
lods
aas
sar
adc
dec
lock
jecxz
xorl
sbb
mov
punpcklbw
or
lock
jmp
inc
mov
add
jp
jb
jne
jecxz
add
je
xor
btr
xchg
add
femms
xchg
jae
outsl
insl
mulb
sub
mov
sbb
pop
xchg
dec
pop
ljmp
rcrb
aam
popa
repz
push
cmpsl
in
mov
call
dec
sub
jg
mov
pop
dec
cltd
mov
jno
and
out
mov
mov
popa
sahf
or
ret
push
mov
xor
cmc
adc
fst
add
sbbb
int
movsb
shlb
dec
fwait
pop
sub
add
or
inc
cmp
mov
push
insl
pop
test
int3
push
jmp
inc
int3
sbb
sbb
ds
les
loopne
jae
sbb
test
iret
xor
mov
dec
mov
or
inc
dec
cmp
testl
js
inc
loopne
scas
mov
je
std
inc
sarb
std
push
int
or
dec
or
dec
xlat
bound
cmpsb
popa
cmp
cmpsb
push
pop
mov
dec
shll
outsl
es
mov
shll
mov
jl
push
hlt
lret
xchg
mov
out
fildl
mov
jl
lock
fidivrs
repnz
mov
cmpsb
inc
punpckhbw
fucomp
stos
icebp
lret
out
pop
adc
fdivl
dec
mov
or
or
or
lods
in
inc
cli
fbld
cmp
fwait
add
pop
push
fdivrp
arpl
cmpsb
and
and
sbb
mov
mov
test
insl
bswap
sub
and
es
aaa
adc
shll
sbb
pop
sub
int
push
mov
jg
sub
cmp
push
push
imul
mov
cmp
pushl
xchg
sbbb
fadds
push
das
push
test
test
dec
cmp
ret
leave
sub
ret
frstor
jge
mov
jnp,pt
inc
mov
mov
pop
cmp
cmp
into
fsubl
hlt
fs
and
inc
fcmovu
insb
xor
sbb
adc
inc
fistl
and
lods
adc
pop
movsl
jle
cli
daa
lock
adc
inc
inc
dec
push
pop
lds
jnp
mov
filds
sarb
in
add
rolb
rorb
xchg
insl
xchg
bound
xor
jmp
add
lret
sbb
pusha
dec
mov
in
jecxz
and
push
sahf
js
hlt
movsl
lods
loop
lcall
shll
dec
pusha
xor
fs
insl
dec
push
mov
and
mov
xchg
xor
xchg
stos
test
mov
js
iret
or
pusha
lods
imul
and
lahf
nop
shl
xor
xchg
in
adc
gs
xor
scas
stos
std
in
stos
in
out
ret
mov
and
ljmp
mov
mov
pusha
out
dec
xchg
jmp
jo
lcall
jmp
cmp
shrl
push
dec
call
jae
daa
mov
outsb
cld
scas
ja
sbbl
fwait
mov
dec
lods
adc
int3
andl
ds
inc
mov
pop
hlt
mov
cmp
fbld
repz
or
xor
adc
xor
push
dec
aam
xor
jmp
scas
mov
sbb
shlb
jae
add
frstor
add
add
dec
and
sub
fstpl
and
pop
je
pop
in
ret
cmpsl
pop
int
lahf
jecxz
sub
dec
repz
ja
lods
test
loopew
sbb
push
dec
mov
pop
push
push
pop
inc
mov
clc
or
and
cmp
jp
push
sbb
sahf
pop
pop
jo
lods
inc
pminsw
stos
push
sub
mov
imul
in
fwait
xchg
lret
pop
scas
xor
aam
aad
and
ljmp
mov
or
inc
cmp
addl
js
mov
cmp
cld
push
std
jle
or
mov
cmpsb
cld
mov
jmp
sti
sub
leave
ss
cmp
mov
jb
cmc
jnp
add
insl
je
shl
jle
int
sub
pop
mov
jl
iret
push
cltd
push
lret
xchg
scas
jmp
xchg
inc
inc
jp
mov
sbb
xchg
or
mov
dec
jle
imul
mov
scas
sub
sub
das
scas
and
sub
cs
incb
pop
mov
iret
adc
fsub
adc
dec
mov
test
rorl
push
add
lods
subl
mov
jp
mov
push
push
xchg
mov
pop
cmp
dec
and
je
inc
cli
inc
jg
stos
jae
pop
arpl
cli
inc
rorb
pusha
mov
ljmp
sti
aas
mov
lahf
push
push
scas
sub
xchg
inc
arpl
lods
in
insl
xlat
add
xchg
xchg
inc
mov
das
cwtl
fstpt
add
xor
repnz
aaa
pop
jns
and
aas
nop
dec
scas
lahf
movsl
cmp
cmp
stos
nop
cmpsl
cmc
pop
test
add
pop
mov
sub
fiadds
lods
testl
mov
sub
imul
sbb
lods
insl
in
call
lods
cltd
cmc
je
jge
sbb
or
or
inc
xchg
mov
test
dec
enter
jne
or
cmp
sub
mov
cmp
cmpb
mov
sbb
rcrl
dec
and
lea
adc
fwait
in
sti
push
jae
sub
jbe
push
shrb
or
fldt
dec
and
adc
or
ljmp
icebp
sub
xchg
or
sub
sbb
xchg
test
cmp
fdivs
popl
mov
ja
and
or
mov
int3
or
test
and
mov
mov
add
repnz
mov
loope
mov
sbb
mov
mov
scas
xor
mov
cwtl
or
sbb
xor
ret
sbb
sub
mov
pop
clc
cmp
push
pop
xor
sub
ret
ret
pop
cmpsl
cmp
or
dec
lds
loop
fcomp
fcmovnbe
jns
push
jnp
or
rcll
mov
mov
call
test
inc
inc
mov
pop
aaa
out
mov
pop
jmp
and
push
add
push
lcall
daa
pusha
inc
std
rcll
cmp
out
and
or
mov
pop
lock
sub
jno
inc
sub
cli
lahf
sbb
push
mov
cmc
jecxz
test
inc
scas
cmpsl
jge
ljmp
outsb
xor
add
mov
mov
mov
xchg
and
fiadds
mov
fyl2xp1
addr16
sahf
push
adc
and
mov
pop
pushf
in
scas
pop
dec
push
lret
mov
gs
xor
lret
pop
mov
mov
xchg
add
cltd
fcomps
repnz
sub
push
lods
push
jns
fldt
mov
dec
gs
and
jecxz
out
mov
and
mov
inc
movsb
push
xor
cmp
add
cmc
adc
cmp
jle
or
ror
fwait
fwait
aam
inc
das
jp
jg
mov
outsl
mov
cmpsl
sbb
dec
stos
cmp
add
sbb
repnz
jle
sub
dec
addb
pop
fldt
mov
cld
sbb
and
cmpsl
push
shlb
stc
cmpsl
push
jecxz
daa
mov
gs
add
fs
mov
mov
mov
push
test
jns
mov
imul
sub
in
pop
or
fwait
dec
push
insl
fldl
dec
push
pop
movsb
xchg
sbb
sub
and
or
cmpsl
aaa
and
push
cmpsb
cmp
stos
lahf
pushf
imul
push
pusha
aad
jnp
sbb
out
push
jne
adc
lahf
fstpt
sub
hlt
mov
cmp
sub
mov
nop
push
sbb
lea
cmpsb
adc
es
ret
push
pop
out
stos
jbe
inc
jecxz
jns
repnz
sbb
mov
dec
mov
push
pusha
mov
aaa
loopne
or
sub
dec
inc
daa
push
lods
das
dec
mov
sub
shlb
sub
sbb
xor
data16
out
pushf
adc
sbb
scas
sub
inc
inc
mov
xor
xor
loop
mov
lcall
int
ret
dec
pop
int3
inc
sbb
fndisi(8087
shlb
dec
adc
dec
mov
fildl
jge
xchg
cwtl
xor
mov
xchg
push
xchg
xor
stos
mov
pop
mov
jno
pop
mov
jmp
loope
or
sub
pop
pop
push
mov
add
inc
enter
fimull
dec
outsb
imul
ret
sbb
mov
mov
fiaddl
jno
popf
lcall
xor
out
lahf
mov
and
sbb
jae
dec
ss
dec
int3
test
xchg
cltd
jg
push
mov
xchg
or
xchg
mov
pusha
mov
in
ret
sbb
std
or
insb
cld
dec
push
cmp
ret
mov
xchg
imul
sbb
pop
jge
xchg
and
pop
xchg
loop
iret
mov
push
fldenv
fisttpll
mov
cmpsl
sbb
lds
in
xor
mov
xchg
mov
xchg
sub
sarl
pop
mov
or
mov
adc
cmp
pop
test
and
out
xor
neg
repz
xchg
mov
test
adc
ja
or
sub
jae
in
shll
scas
test
and
sbb
dec
dec
push
ja
jecxz
es
pop
lock
mov
mov
and
pop
leave
xor
push
sbb
lea
and
xchg
cmc
repnz
outsl
dec
inc
lahf
in
fcom
push
lret
mov
mov
adc
sahf
fdivs
xchg
sbb
mov
or
jno
adc
lret
adc
shr
xor
in
mov
cmc
clc
aas
popf
mov
pop
jmp
inc
divl
xchg
or
mov
xor
fdiv
pop
call
cli
adcl
mov
bound
or
mov
outsb
out
leave
lods
jb,pt
push
fwait
scas
mov
insl
in
jecxz
jg
ror
push
cld
pop
lret
push
sbb
inc
lahf
inc
mov
je
jo
inc
int
adc
mov
push
cmp
fcompp
and
lds
test
or
or
xchg
and
ret
iret
or
jo
pop
in
or
add
enter
add
xchg
mov
int3
in
out
lods
and
sarl
out
stos
out
adc
mov
mov
out
icebp
mov
or
call
pop
out
xor
adc
add
sbb
push
rclb
ljmp
adc
xor
and
xchg
add
push
xchg
cmp
sub
mov
push
rcrl
jmp
shl
out
mov
stos
or
sbb
scas
sub
cmp
mov
xlat
lret
mov
mov
mov
daa
mov
inc
jl
mov
lods
push
fmull
xchg
dec
nop
int
nop
loopne
std
out
xchg
mov
cvttps2pi
lea
adc
inc
jne
pop
dec
jne
js
sahf
cmp
cmp
pop
inc
arpl
loop
imul
pop
or
out
call
dec
sti
mov
fbstp
push
sub
stc
sub
xor
call
scas
pushf
xorl
mov
xchg
xor
insb
mov
add
mov
jmp
repnz
test
cmp
mov
addb
sbb
xor
dec
adc
int
xor
stos
sbb
addl
dec
lods
cmp
cmp
push
jns
into
xor
fcmovbe
and
mov
inc
popf
inc
outsl
ljmp
iret
imul
shlb
cmp
inc
or
lds
stos
jle
xor
clc
rcrb
shll
mov
or
ja
lds
call
push
pop
arpl
xchg
adc
mov
jp
mov
sahf
stos
je
test
jmp
or
outsb
and
sti
xor
jnp
cltd
jmp
cmp
dec
mov
pusha
dec
lret
out
roll
pop
sub
leave
dec
adc
jmp
pop
rcl
push
cmp
and
out
ja
jo
fldl
and
adc
xlat
adc
pop
stc
mov
mov
bound
jge
fs
mov
mov
sbb
clc
cmp
pop
out
cmp
into
dec
jo
aam
out
pushf
fldl
and
sbb
rorl
sbb
scas
jl
inc
jnp
insb
inc
shrb
or
inc
jmp
push
inc
mov
popa
int3
inc
in
pusha
jecxz
scas
imul
adc
cmp
xor
scas
inc
loopne
or
inc
xorl
adcb
loope
lahf
fldenv
ret
inc
lahf
out
movsl
dec
mov
jp
sti
imulb
cmp
cmp
cmp
inc
psrad
sub
fiadds
hlt
nop
nop
rsm
xor
iret
pop
sbbb
sahf
dec
mov
pop
dec
rcrl
je
jb
jns
push
adc
in
adc
ret
repz
push
fdivs
fcoml
inc
and
mov
dec
jp
jg
insb
pop
mov
test
loop
roll
lret
sbb
jecxz
jns
dec
jge
je
aas
ljmp
cmpb
lods
es
dec
adc
daa
mov
je
or
sbb
mov
xchg
xor
cltd
cmp
push
mov
call
push
repnz
push
jle
sub
rcr
mov
jne
xchg
push
mov
sbb
lahf
dec
mov
pop
mov
jne
ror
sti
pop
aad
mov
ljmp
sbb
les
les
lea
popa
in
xchg
shll
jnp
jmp
mull
fsubrl
fdivl
adc
add
inc
mov
aaa
inc
jnp
pop
loopne
xchg
cmc
adc
jnp
scas
add
xchg
fsubr
into
jns
mov
sub
push
cmp
xor
cmp
idivb
cli
jmp
jp
adc
sbb
mov
adcb
jne
or
mov
pop
stc
ja
adc
mov
xor
xchg
daa
add
dec
adc
pop
xchg
add
sub
lret
dec
movsb
mov
loop
add
repnz
in
aaa
dec
repnz
adc
out
xchg
sti
adc
cmp
imul
dec
xchg
movsl
xchg
xchg
jp
jg
lcall
lcall
dec
aad
rcrb
popf
cmp
stc
cmp
sub
js
mov
testl
xchg
jbe
icebp
jg
add
mov
mov
xchg
xor
sub
xchg
lret
dec
popf
gs
fstps
or
mov
aas
fmul
adcl
sub
out
xor
jno
mov
inc
dec
icebp
jbe
adc
xor
or
mov
fidivrs
xor
pop
lahf
sbb
leave
push
or
shrl
jg
popa
sbb
xchg
sbbb
dec
mov
std
xor
leave
sti
lock
sub
inc
and
lods
sub
subl
or
rclb
and
ds
dec
lea
sbb
aam
insl
daa
leave
or
push
dec
fnstcw
jne
dec
in
sub
lock
adcl
mov
dec
sub
sub
pushf
and
and
push
ljmp
sti
mov
fildll
gs
dec
dec
and
xchg
arpl
sbb
pop
clc
sti
ficomps
lea
das
lods
andb
push
inc
insl
repnz
negl
mov
cmp
inc
xchg
test
inc
pop
and
mov
stc
mov
inc
sub
arpl
and
push
jnp
es
cmpsb
das
inc
mov
jnp
push
pop
ret
mov
push
aam
in
enter
imull
pushf
push
fisubrl
arpl
enter
jmp
loopne
xor
sahf
adc
pop
lcall
jg
outsl
fcoms
stos
cmpsb
push
inc
pop
push
mov
mov
in
fisubl
mov
dec
inc
enter
sbb
pop
popf
dec
stc
jb
fisubs
stos
mov
or
in
int3
dec
bound
jecxz
lods
cld
add
scas
sbb
xchg
pop
hlt
cmpsl
sub
lss
inc
outsl
or
or
fidivl
push
sbb
and
rcrb
int3
jo
popa
mov
aad
jge
ds
imul
mov
lret
mov
pop
movsl
nop
dec
or
hlt
ffreep
jbe
fadds
inc
mov
repnz
sub
jmp
loopw
sub
clc
scas
cmp
pop
add
dec
pusha
lock
shrb
jp
dec
push
pop
add
subl
arpl
dec
insl
jne
adc
or
movsb
repnz
or
or
push
jp
out
cmpsl
js
jg
fbstp
add
and
mov
cmpsb
mov
minps
jo
fiaddl
xor
jle
lods
jno
dec
std
mov
cli
imul
mov
cmpsb
sbb
dec
sbb
push
adcl
dec
cmp
iret
xchg
mov
push
imul
pusha
lahf
inc
outsl
aaa
daa
mov
jge
mov
test
insl
fucomip
jg
push
xchg
mov
lret
add
pop
sbb
xchg
mov
bound
pop
mov
jl
ljmp
jecxz
cmp
and
push
sub
lcall
pop
aad
mov
pop
sub
int3
xchg
adc
push
sahf
js
or
nop
in
test
bswap
xchg
and
mov
adc
xchg
stos
jecxz
xchg
jge
jecxz
test
shrl
leave
sahf
pop
xchg
mov
jmp
sti
push
push
mov
mov
das
xor
cwtl
stc
and
cmp
jae
push
int3
push
pusha
push
pop
xchg
pop
inc
lods
pushf
inc
fmull
cmp
cld
stos
unpckhps
fsubrs
out
add
xlat
or
jp
dec
xor
xchg
jae
xchg
sub
and
das
inc
repnz
add
rcrb
les
push
daa
pop
fwait
push
into
jno
lds
es
cmp
xor
pop
nop
seto
mov
imul
mov
push
xchg
aas
enter
test
iret
jle
hlt
jmp
push
xor
stos
pop
aam
iret
fdivrl
lock
add
pop
sbb
popa
cmp
adc
repnz
es
rcr
mov
mov
ja
pusha
or
add
das
sbb
popa
dec
into
push
shl
and
pop
cmpsb
fsubp
nop
push
jne
dec
adc
lcallw
xor
vpslld
sub
in
jmp
data16
pop
pop
test
sub
fimuls
test
adc
and
mov
ret
jmp
jge
outsb
or
stos
xor
mov
pop
xor
sub
cmp
jg
out
adc
xchg
roll
or
shl
inc
push
jo
add
sbb
call
adc
xlat
push
cmp
call
lcall
inc
jne
lret
push
mov
pop
repz
clc
test
mov
sub
scas
das
mov
sbb
mov
out
xlat
dec
daa
push
cmp
push
add
cmpsb
or
inc
rcrb
ds
lods
add
inc
adc
mov
lea
ds
popa
loope
jge
or
pop
out
cmp
js
lahf
push
inc
or
fimull
jb
insl
xor
sub
jp
xchg
ret
mov
pop
mov
ret
cmpsb
mov
ljmp
and
mov
xor
inc
imul
mov
fldl
adc
lods
icebp
jo
aaa
mov
mov
in
pop
xchg
mov
push
pushf
push
jle
inc
aam
addl
or
nop
mov
arpl
fnstcw
sub
jmp
cmpl
xor
jnp
jmp
mov
sub
jl
js
or
cmp
mov
ja
mov
in
mov
pop
push
add
jl
les
and
roll
mov
fwait
xchg
mov
cmp
sbb
vpshufd
aas
add
aam
fistpll
flds
mov
add
sub
addr16
shrl
sahf
xchg
fwait
add
push
add
mov
xor
test
add
cmc
mov
mov
jnp
push
insb
or
das
lock
pushf
aas
sub
mov
ljmp
mov
andnps
fldl
push
pop
imul
and
xchg
enter
mov
rolb
add
test
or
xchg
jb
jo
mov
nop
outsb
cmp
or
cli
decb
outsb
lea
negl
pusha
mov
xor
in
mov
ja
add
pop
cmp
aad
pusha
or
cmc
mov
aaa
mov
add
out
push
or
fisubrl
int3
push
or
cs
iret
imul
or
xchg
xchg
pavgw
pusha
insb
mov
popa
sahf
addr16
or
sbb
repnz
dec
add
in
scas
ret
dec
push
mov
int3
push
fdivrs
pop
cli
sub
repz
inc
scas
fiadds
xchg
fwait
cmp
xchg
sub
mov
push
inc
mov
loopne
push
pop
mov
mov
cwtl
in
or
movsb
cwtl
push
les
mov
prefetch
sarl
push
fiadds
das
rol
mov
jns
sbb
sub
xchg
dec
out
mov
pop
popa
sbb
jno
pop
add
dec
adc
loopne
jo
cmpsb
push
push
inc
push
hlt
dec
lret
mov
ror
pop
xchg
sbb
ds
jne
adc
sub
sbbl
sub
pushw
push
pop
frstor
inc
insl
inc
loop
mov
cmp
cs
in
jmp
pop
into
cmp
test
movsb
add
and
data16
fisubrs
jo
mov
jl
dec
lds
push
daa
xchg
fwait
mov
int3
or
fimuls
aam
push
mov
loop
sub
and
add
mov
out
lahf
ljmp
aaa
leave
xor
mov
lea
push
data16
lcall
sbb
insl
jg
fdivrp
ficomps
push
popf
ret
adc
cwtl
into
fists
pop
mov
xor
insl
sbb
rcll
movsb
ret
test
cmpsl
mov
push
lret
mov
xchg
cmc
lret
stos
call
in
loop
repnz
idivb
aaa
mov
dec
inc
imul
mov
jmp
pop
push
rolb
hlt
fs
xor
mov
push
dec
ret
les
jo
mov
xor
addr16
xor
push
adc
mov
xor
cmpsb
pop
mov
sub
jmp
and
iret
xchg
call
push
test
or
mov
inc
lods
jo
ret
xchg
inc
add
ja
sbb
fidivs
and
xchg
test
and
jl
fcoml
cltd
dec
xchg
test
push
adc
inc
add
scas
cltd
pop
cmp
sub
lcall
fld
ja
pop
fucom
into
lds
mov
test
test
lods
cmpsb
jmp
aaa
enter
loope
xor
rolb
in
mov
adc
loopne
sub
fistl
lods
es
or
add
ljmp
xor
popf
add
iret
scas
repz
dec
hlt
test
or
xchg
push
into
add
shr
fmull
repz
pop
inc
mov
repnz
sbb
inc
in
pop
dec
test
dec
aam
cs
es
push
cltd
dec
push
jno
cmp
fsubrs
jns
js
add
bound
fneni(8087
dec
mov
xor
pmaxsw
movsb
jmp
jns
and
mov
iret
and
xchg
ffree
movsb
xchg
icebp
xchg
leave
loopne
test
rorb
lret
xchg
out
aas
jecxz
imul
lods
gs
aaa
lcall
adc
jns
add
rclb
pop
inc
pop
pop
les
movsb
iret
movsl
bound
inc
inc
in
sub
sti
scas
aas
xchg
mov
clc
xchg
and
sub
sub
out
mov
mov
rclb
rcrb
sub
lret
mov
pop
rol
lods
notl
add
rorb
std
lods
repnz
in
sbb
mov
pop
in
cli
rcll
ja
jl
inc
insl
mulb
dec
or
adc
pop
mov
shrb
fcoml
inc
add
inc
adc
mov
ret
test
push
mov
rcrl
add
je
mov
jbe
jne
adc
mov
in
cld
add
cli
pmullw
and
ret
mov
mov
insb
test
pop
add
sbb
lock
add
lds
and
push
negb
clc
mov
shrl
das
inc
add
cmpsl
dec
lods
int
pushf
pop
xchg
sahf
and
test
in
aaa
je
xchg
int
adcb
sub
scas
aas
fidivl
cs
dec
mov
mov
mov
mov
iret
imul
mov
pushf
das
rcl
push
aad
xchg
rclb
add
in
xchg
and
sub
aam
adc
adc
lods
mov
xor
outsl
push
pop
jl
inc
mov
xor
jl
xlat
aas
cmpsb
jns
sti
push
and
add
xor
fwait
mov
mov
or
popf
movsb
shlb
lea
movsl
ds
pop
out
push
or
gs
pop
shlb
push
sub
hlt
cmp
push
adc
loopne
std
jo
les
xchg
or
sarb
mov
imul
ss
pop
cli
jp
mov
inc
aas
jg
xor
adc
adc
inc
idiv
jge
mov
pop
mull
pop
push
aas
shr
in
mov
dec
dec
sti
xchg
jns
daa
dec
mov
jle
hlt
xor
push
mov
cmp
xor
fldcw
xor
into
test
xchg
mov
mov
jne
cli
mov
xor
pop
enter
test
sub
mov
jo
js
fisubl
lock
or
jb
insl
push
mov
jne
and
pop
mov
dec
push
faddl
mov
sahf
push
repz
test
std
jp
inc
enter
int3
inc
xor
push
dec
imul
xchg
es
xchg
inc
scas
ljmp
notl
in
aas
jb
sub
xchg
vfmaddsub213ps
pop
sub
ror
xor
ja
mov
xchg
test
jbe
mov
xor
and
inc
dec
push
lods
xor
inc
data16
imul
lret
and
add
cmp
loope
cli
sbb
stc
in
cltd
or
xor
test
mov
push
inc
dec
sbb
inc
ja
dec
mov
xchg
out
ret
pop
inc
fs
dec
jae
inc
and
daa
outsb
data16
clc
sahf
add
cmp
data16
jg
testl
mov
repnz
mov
cmpsb
shl
mov
xlat
icebp
mov
call
repz
sbb
sub
pusha
adc
inc
fiadds
neg
negl
mov
pop
leave
cli
adc
or
ljmp
cmpsb
sub
push
pop
loop
mov
inc
fabs
mov
addr16
std
add
aaa
movsl
mov
daa
mov
and
mov
inc
imul
mov
xor
es
or
fwait
jg
fs
add
inc
add
inc
lea
pop
push
mov
out
pop
fiadds
divb
sti
or
in
ljmp
into
das
sbb
lcall
jnp
sub
sbb
lods
std
out
xor
adc
shrb
enter
aaa
fdiv
fwait
jnp
cmpsl
adc
ds
mov
xor
push
lods
or
dec
fs
adc
pop
sub
dec
sbb
lret
xchg
pop
bound
mov
sbb
xchg
je
adc
idivb
mov
lods
dec
sbb
shl
int3
xchg
cmp
fiadds
arpl
sbb
repz
std
xchg
xchg
cwtl
aas
inc
je
test
lahf
dec
xor
stos
ret
pop
ret
jl
bound
push
dec
rcrl
cmpsl
inc
push
mov
daa
push
adc
dec
in
inc
ja
repz
imul
movsb
cmp
cltd
call
test
mov
icebp
mov
faddl
pop
mov
add
cmp
dec
ds
mov
adc
push
jne
mov
push
mov
xor
gs
shrb
cmp
ror
adc
jae
daa
scas
inc
fwait
std
push
out
outsb
cs
loope
adc
cmp
lahf
shl
leave
pushf
lcall
mov
mov
aam
flds
je
hlt
stos
fiaddl
pop
dec
in
inc
in
jae
js
aas
flds
fstl
jne
add
mov
dec
mov
xlat
xchg
es
testl
mov
into
sbb
inc
inc
orb
xor
xchg
or
cmp
jns
inc
cmpsl
inc
dec
inc
call
jne
mov
fwait
popa
imul
pop
fimull
daa
in
out
sti
movsb
lahf
push
jmp
rcl
test
sarl
adc
out
push
mov
mov
mov
jno
insb
jmp
jns
mov
cmp
push
jg
mov
add
pop
adc
pop
mov
aad
int3
mov
int
in
cmp
test
cmp
mov
sbb
out
mov
add
or
icebp
into
movsb
mov
pop
jbe
sbb
dec
les
hlt
addr16
xlat
dec
jbe
clc
push
int
repz
inc
push
aad
outsl
sti
pop
mov
lret
aam
adc
test
out
aaa
imul
imul
inc
in
stos
sub
addb
pop
ds
mov
bnd
xchg
pushf
xchg
jb
mov
xchg
arpl
out
repnz
sub
test
mov
js
push
dec
add
add
lds
lret
jnp
xor
inc
lods
and
lock
les
je
mov
test
add
inc
push
inc
lea
jmp
int3
mov
popf
imul
lahf
cmp
cmpsb
pop
lret
int
sbbb
jbe
icebp
sbb
dec
popf
in
xor
or
add
addb
or
pop
jo
or
and
dec
inc
cmp
xor
push
add
popf
mov
insl
imul
mov
bound
fiadds
jge
mov
pop
pop
testl
xchg
icebp
cmp
cmp
outsb
sub
lahf
cmp
dec
sub
divl
and
sti
ds
stos
in
adc
pusha
pop
cli
mov
pusha
leave
jnp
sbb
das
inc
mov
ret
es
into
int
daa
cmp
sub
dec
fsubs
sub
dec
dec
inc
aam
in
movsl
popf
jge
cmp
dec
adc
loope
xchg
xchg
mov
mov
mov
in
and
je
jbe
mov
repz
inc
xor
test
test
jl
cmp
jne
xlat
das
popf
mov
stos
dec
push
std
dec
or
mov
push
push
cltd
and
scas
fwait
dec
pusha
data16
push
mov
es
stc
and
inc
or
push
lret
test
imul
shlb
mov
lret
add
dec
dec
jle
inc
mov
push
daa
jbe
scas
stos
add
ror
repz
jmp
adc
das
adc
push
adc
xor
xchg
mov
xor
and
cmp
jo
jnp
add
jb
outsb
jmp
cmp
adc
sbb
lea
mov
orl
push
sub
notb
cli
ss
and
jecxz
lods
mov
out
cmp
jg
jns
rcrb
cmc
mov
test
cmpb
testb
jae
fwait
ds
loope
pusha
mov
pop
and
jmp
and
bound
add
adc
fs
cwtl
xor
shll
rorb
mov
decb
mov
cmp
scas
sub
lahf
push
add
lods
mov
cli
cmp
out
sti
mov
push
testb
movsl
pop
cld
mov
and
adc
mov
jb
fstpt
jae
dec
mov
jbe
jb
mov
push
jnp
adc
movsl
mov
ljmp
ret
insb
and
add
loope
mov
inc
nop
xor
dec
jecxz
cmp
add
bound
sub
leave
popf
movsb
fucomp
inc
inc
subb
out
push
popf
aad
xor
cwtl
xor
cmp
add
push
ljmp
iret
test
jae
add
cmpsb
arpl
stos
jns
shll
shrb
jg
dec
push
sub
movsb
push
or
ljmp
xor
push
push
pop
and
icebp
addr16
jb
pop
mov
stc
test
pushf
xchg
ljmp
ljmp
movsl
outsb
por
std
js
jg
sub
dec
bound
jnp
stc
sbb
mov
push
cli
pop
push
pop
add
lock
ja
or
xchg
gs
test
inc
jae
add
push
fimull
adc
popa
aad
ds
cmpsl
pop
mov
and
cmp
adc
pop
jle
into
std
push
lret
es
mov
xor
xor
loope
push
loop
lock
xchg
lret
inc
lds
into
mov
mov
adc
adc
jge
sbb
popa
sub
mov
movsl
scas
arpl
nop
push
rolb
int3
fcoml
inc
orb
repnz
inc
jmp
mov
jnp
pop
ds
mov
xchg
push
xchg
cmpsl
jge
and
gs
int3
xchg
scas
push
sub
outsl
sub
subl
nop
out
mov
sub
rcl
jae
jno
push
stos
rcl
mov
ja
jns
push
iret
mov
arpl
ds
pop
fists
mov
push
stos
popf
aam
sub
arpl
mov
mov
inc
and
pop
dec
in
int
mov
pop
test
or
pop
stc
lahf
cmp
lcall
pop
mov
pop
mov
fisubrl
cmp
gs
jge
fwait
and
loope
or
add
push
cmpsl
pop
call
xchg
mov
sub
sbb
mov
xchg
test
xor
out
pop
lcall
jae
xchg
imul
cld
test
dec
cmp
mov
cmc
mov
push
or
pushl
cwtl
dec
push
inc
dec
addr16
mov
popfw
lret
andl
imul
jecxz
sub
jle
aas
ja
sbb
xchg
inc
xchg
dec
mov
nop
loope
and
jmpw
mov
sbb
push
push
dec
idivl
out
hlt
imul
mov
add
call
and
loopne
push
mov
xor
aam
xor
pushf
mov
fmulp
mov
push
dec
sub
subb
push
adc
lret
dec
inc
dec
stos
std
faddp
sbb
mov
inc
enter
lret
xchg
std
xor
or
insl
imul
enter
lret
sub
adc
push
inc
dec
push
jo
xchg
daa
cmc
icebp
cmp
cmp
add
jno
popa
jno
cmp
push
es
mov
xlat
cmp
rclb
test
inc
jp
xor
out
pop
pop
lea
sahf
pusha
outsl
test
bound
add
movsb
adc
in
push
and
xor
mov
lret
rolb
decb
rclb
mov
jp
aaa
xchg
push
jge
cmpb
enter
fisttpl
push
shll
pop
pushf
enter
stos
cltd
cmp
adc
lcall
clc
aaa
fisttpl
jno
push
loopne
jle
out
out
xor
xchg
xchg
cmp
rcrb
push
stos
sub
xor
xor
cmp
sub
aaa
mov
push
loope
jl
ja
jecxz
idivb
faddl
addb
mov
xchg
or
fiadds
push
imul
mov
dec
outsl
jl
shlb
adc
push
dec
sbb
pop
test
pop
jge
jae
aas
push
pop
out
xchg
mov
pop
or
ss
lcall
lods
adcb
inc
pop
push
jl
or
jmp
loop
in
and
jmp
pop
cs
mov
or
pusha
dec
sbb
push
test
in
lret
jnp
ja
or
mov
adc
inc
scas
out
sub
ds
and
cmpsl
and
xchg
cmpb
jne
enter
stc
out
data16
leave
xchg
cld
sbb
sbb
inc
sbb
outsl
pop
xchg
pushf
sbb
aam
inc
outsb
xchg
adc
push
cld
pop
mov
xchg
sub
jns
repz
inc
and
sbb
adc
sbb
inc
ret
or
fistps
xor
loop
cmp
js
loopne
pop
mov
push
push
xor
jo
mov
cs
ja
cmp
imul
mov
mov
dec
fldl
jnp
add
and
ja
adc
push
in
sbb
ja
push
ret
lcall
lret
mov
sahf
aas
mov
adc
clc
dec
or
push
stos
or
pushf
pop
movsl
js
mov
inc
imul
jmp
sbb
test
or
aad
xor
jge
inc
mov
mov
rcll
out
push
int3
test
push
inc
mov
mov
test
cmc
xor
jge
lret
mov
sbb
or
and
loop
fmuls
lds
imul
pop
fcomp
and
movsl
out
pop
lret
pop
fldlg2
loop
mov
aas
pop
pop
aas
fbld
sbb
std
je
aas
imul
fldcw
pop
jo
stos
inc
lods
mov
dec
aad
push
lds
mov
push
mov
xchg
cmpsb
cmp
movsb
outsb
sbb
shlb
aas
aaa
mov
mov
inc
and
xor
call
es
pop
adc
sbb
je
xchg
mov
and
aad
add
dec
sub
lds
cmp
lea
arpl
inc
subb
pop
mov
out
mov
call
inc
push
jb
pop
dec
pop
xchg
notb
aaa
pop
ds
in
shr
call
jmp
sub
fdivrs
jmp
mov
mov
pop
add
je
stos
lods
or
cmp
scas
data16
xchg
cmpsl
sti
fidivl
dec
dec
inc
js
jne
aaa
adc
xor
adc
inc
sahf
add
sbb
or
into
mov
cwtl
xchg
sbb
in
andl
push
ja
add
jle
mov
mov
push
mov
sbb
xchg
psrlw
add
mov
ja
cwtl
adc
shll
test
add
jb
cli
adc
cli
push
or
and
icebp
ljmp
cmp
les
mov
jae
test
nop
icebp
dec
popa
inc
stos
test
mov
and
add
dec
mov
stc
xchg
or
in
xchg
pop
add
in
pop
stos
std
pop
mov
bound
cltd
dec
aaa
and
jnp
mov
sub
bound
xchg
xorl
sahf
mov
push
mov
rcrl
data16
pop
inc
nop
dec
xchg
bound
adc
push
jae
adc
incl
push
sbb
jecxz
je
dec
lock
add
int3
mov
jl
rolb
or
sbb
mull
outsb
mov
or
dec
clc
cmp
ret
roll
sbb
stc
repnz
sub
mov
jg
xchg
leave
add
fldcw
mov
js
jne
rcrb
and
adcb
mov
fmulp
pushf
aas
jnp
push
cwtl
rolb
shll
mov
push
jecxz
in
pop
lcall
fiadds
jnp
inc
dec
je
xchg
sub
push
leave
roll
dec
inc
sub
stc
xchg
scas
add
cmpsl
jbe
loopne
lret
jnp
fcmove
test
loopne
pop
bndldx
sbb
mov
sbbb
xor
leave
mov
add
inc
daa
int
std
ds
cmp
mov
test
les
ret
inc
pusha
sahf
imul
cmp
jns
push
or
sbb
push
or
sahf
pop
bound
loop
or
dec
aas
jns
inc
dec
sbb
sbb
repnz
adc
dec
fwait
jae
cltd
outsl
std
push
mov
jnp
sbbb
cld
in
fcoml
mov
ret
sub
add
push
mov
out
cmpsl
push
sub
rorb
adc
push
int
cmpsl
cmpsb
mov
inc
sahf
subb
xchg
fsub
mov
js
jg
scas
push
outsl
cld
rorb
push
dec
jns
mov
add
or
jns
mov
mov
cs
in
jae
mov
stos
cmpsb
adc
out
add
pop
andl
mov
cmp
add
into
sub
push
out
cmp
int
jge
and
add
jge
and
mov
fnstcw
mov
fsts
ret
mov
sbb
call
data16
sbb
push
sub
cmp
mov
rcl
insl
mov
mov
repnz
mov
inc
or
and
mov
loop
inc
cltd
jnp
push
int3
lock
cmpsb
scas
cmp
rol
ljmp
jnp
lcall
icebp
and
outsl
dec
adc
cmova
fisubrs
scas
jl
adc
pusha
cld
inc
cmpsb
aam
test
loop
int3
jb
sub
dec
add
add
outsl
mov
jne
cs
xor
jg
push
dec
push
sub
popa
fnstsw
loop
dec
es
mov
lods
fdivr
pop
or
test
mov
mov
pop
scas
repz
daa
nop
jb
bound
sbb
lea
add
mov
mov
cli
dec
ja
sbb
inc
icebp
or
and
outsb
mov
insl
push
jecxz
imul
mov
addr16
mov
push
dec
push
jo
xor
cltd
imul
in
and
jno
stos
jp
xchg
pop
addl
cmp
and
sub
inc
into
sbb
xor
leave
popf
js
ljmp
enter
pop
andb
adc
pusha
ja
data16
jne
loop
cwtl
cmpsb
and
pop
sub
call
fstpl
jmp
xchg
cmc
leave
cmp
adc
mov
jne
xchg
pop
xchg
mov
pavgw
popf
aaa
dec
xchg
and
mov
fisubrl
and
das
aaa
sub
push
push
es
add
mov
in
imul
test
xchg
lds
sub
fisubs
inc
aas
pop
test
adc
test
mov
cltd
lcall
add
dec
shll
cmc
rol
push
pop
rcrb
xor
xor
in
decb
je
dec
bound
jne
cmp
jo
sbb
lahf
fstpl
sbbb
insl
repnz
add
das
incl
xchg
adc
out
into
and
mov
push
mov
inc
xchg
sbb
jnp
ds
daa
xchg
adc
lods
push
dec
lcall
pop
jbe
push
lods
or
xor
dec
pop
movsb
pop
and
imul
or
jb
aaa
and
and
or
pushf
iret
idivb
rclb
dec
loop
rcrb
mov
aas
ja
mov
mov
in
xor
xchg
cltd
mov
and
push
mov
cld
xor
cmc
mov
push
out
dec
xor
xchg
es
pushl
dec
pop
js
test
push
push
cmp
push
or
push
inc
or
push
inc
sti
cmp
lock
insl
push
loop
notl
js
jb
jl
imul
lods
and
dec
out
mov
cmp
pop
mov
adc
adcb
test
mov
xchg
adc
pop
push
adc
cmc
and
push
add
pushf
jbe
mov
shl
test
adc
std
xor
push
cmp
mov
arpl
test
mov
cld
cwtl
movsl
scas
fldl
xchg
pop
sbb
push
and
cwtl
call
leave
dec
in
stos
enter
pusha
xorb
xor
test
icebp
test
jnp
jle
and
bound
and
dec
test
dec
int3
mov
sbb
repnz
adc
inc
fbstp
dec
xchg
testb
mov
mov
add
mov
adc
jne
shlb
push
push
sbb
ds
test
dec
dec
fdivs
outsl
arpl
mov
lock
mov
pushf
frndint
imul
push
test
or
lods
sub
aas
sub
and
in
cs
mov
outsl
arpl
pop
cs
daa
inc
aam
pop
dec
mov
xchg
fisubrs
inc
mov
es
add
loope
cld
aas
mov
mov
cmp
sbb
lret
sbb
xlat
cmpsb
mov
mov
jno
adc
adc
jmp
push
in
xor
imul
enter
sbb
mov
jge
jnp
pop
iret
das
scas
adc
pop
xchg
nop
pop
fstl
test
rolb
outsl
nop
mov
jae
rcrl
mov
nop
lea
pop
mov
mov
xchg
aad
jae
aam
pushf
mov
nop
xchg
inc
sub
add
push
xchg
stc
xchg
push
mov
jp
sub
shrl
dec
xor
lcall
movsb
dec
insl
dec
and
jbe
ret
xor
xchg
pushf
add
pop
repz
inc
hlt
fwait
cli
jge
push
aam
negl
dec
mov
adc
sub
xchg
mov
mov
scas
jle
je
push
test
mov
cmp
call
fcoml
adc
movsl
gs
push
fistpl
out
xor
mov
js
pop
sbb
dec
cmp
daa
xchg
sti
or
adc
pop
fadd
cmp
sbb
dec
mov
pop
mov
rorb
dec
loop
out
dec
pushf
sbb
push
cld
adc
repnz
repnz
pop
and
gs
push
jp
mov
lock
rcrl
scas
push
idivb
xor
push
or
nop
sub
adc
xor
inc
fidivl
lret
mulb
ret
sub
addl
ds
mov
dec
iret
ljmp
pop
aam
push
xchg
inc
mov
dec
add
cmp
repnz
jecxz
xchg
movsb
adc
mov
cs
xchg
adc
pop
adc
test
lahf
arpl
inc
adc
mov
mov
shll
pop
leave
aas
or
jmp
sub
fadds
lds
jge
lods
roll
xlat
cmp
lea
leave
lcall
xorl
ja
aaa
shl
pushf
push
rcrb
push
mov
fbld
inc
and
mov
xchg
push
push
mov
mov
icebp
pop
jecxz
pop
add
std
shrl
sbb
sub
jbe
adc
inc
mov
mov
sub
add
subl
inc
aam
inc
rolb
adc
imul
imul
jns
out
insb
lahf
xchg
sar
adc
xor
iret
ret
jle
mov
mov
xchg
sbb
inc
insl
jl
inc
pop
jb
add
inc
cvtps2pd
sub
sbb
lahf
jno
loop
aaa
enter
lea
sbb
adc
pop
xlat
int
test
jo
or
lods
cmp
in
ficoml
je
out
xor
in
dec
or
sub
sbb
push
push
testb
xchg
inc
mov
add
popf
insb
mov
mov
lds
xchg
sub
push
xchg
and
sbb
leave
cmp
mov
std
les
adc
lods
inc
xchg
and
sbb
ret
iret
cmp
test
mov
shlb
mov
or
popa
lret
popa
or
sbb
mov
stos
es
cs
jb
rcrb
xor
bound
mov
jp
jne
dec
shr
fdivs
cmp
leave
xchg
outsl
sbb
jns
jp
mov
adc
adc
stos
jno
stos
fildl
or
divl
pop
xchg
or
xor
xor
popa
imul
push
fistpl
mov
mov
xor
nop
sarb
loope
stc
push
push
push
enter
jo
inc
mov
test
and
adc
or
ss
bound
pop
imulb
sahf
sub
call
movsb
mov
mov
pop
cmc
es
xor
xor
mov
mov
add
icebp
fbstp
loop
dec
flds
mov
leave
loope
int
pop
cmc
out
cmp
fistl
addb
enter
mov
dec
lret
or
shr
add
mov
cmp
pop
sub
movl
loopne
adc
mov
cs
inc
rclb
pop
repnz
adc
scas
je
loop
fisttps
add
sub
jmp
push
fistps
std
sub
xchg
mov
jo
adc
xor
fnstcw
jecxz
and
cmp
jns
mov
cmp
jl
loopne
mov
test
cmp
push
jnp
mov
xchg
cs
inc
sbbb
ds
pop
repz
push
push
mov
push
inc
roll
inc
mov
xor
and
outsl
mov
push
mov
or
lds
jmp
jnp
lock
das
fisttps
xor
xor
cmpsb
add
aas
jl
pop
movsb
sub
mov
add
cwtl
dec
jge
fcoml
mov
inc
pop
sub
rcrb
jmp
sbb
mov
pop
inc
mov
jno
jmp
leave
cmp
lahf
and
pop
adc
in
mov
lods
push
mov
push
popf
int3
and
aaa
test
pop
jecxz
out
and
imul
adc
lcall
push
sbb
and
jg
lcall
fisttpll
inc
mov
mov
push
js
sub
repnz
rol
lcall
jae
pop
xchg
dec
pop
pusha
lods
test
sbb
mov
aas
aaa
lods
jmp
add
orl
adc
pop
jecxz
add
mov
repz
loopne
push
inc
sbb
push
cmpsb
and
sbb
and
sub
imul
inc
sbbl
cmp
xchg
lds
pop
mov
xchg
cmp
mov
in
mov
mov
loop
fs
out
and
sbb
adc
mov
or
test
pop
call
pop
faddl
in
inc
aas
xor
mov
hlt
fmuls
fists
es
sbb
mull
mov
push
and
das
and
mov
pusha
jne
mov
cmp
sar
jae
push
mov
mov
or
inc
mov
push
in
pop
dec
push
adc
faddl
cmpsl
add
icebp
adcb
mov
sti
mov
adc
mov
mov
or
push
mov
ja
sbb
in
divl
pusha
push
es
lock
add
push
decl
pop
inc
adc
dec
mov
push
aaa
popf
push
shll
add
loope
insb
mov
adcb
pop
loop
add
jae
and
sahf
sbb
adc
jae
in
sbb
mov
mov
fisubs
sbb
or
jb
hlt
push
push
cmp
mov
stos
scas
inc
es
in
mov
and
mov
mov
std
pushf
int
stos
insb
push
mov
xor
andl
xchg
pop
int3
in
pop
es
add
mov
sahf
nop
mov
rcrl
mov
sub
fcmove
push
pop
test
and
fsts
mov
sub
adc
and
scas
or
push
ret
pop
sbbl
repz
push
ret
cmp
cmp
lds
jae
call
ljmp
loop
add
jbe
xchg
insl
loop
movsl
inc
dec
cmp
std
sub
sub
out
sbb
fs
rol
lods
jb
add
or
inc
push
adc
outsl
addps
mov
repz
inc
rorl
call
jge
push
dec
mov
cmp
xchg
cld
jle
adc
cmp
push
lcall
add
daa
xchg
movsb
les
aaa
mov
cld
bound
orb
add
xor
xlat
fstp
pop
dec
in
inc
push
dec
jns
fildll
dec
push
sub
xchg
flds
loop
or
xchg
cmc
lods
inc
int
cltd
cmp
cmpb
sub
push
es
sub
cmp
cwtl
xor
pop
push
adc
cmp
inc
aaa
je
cmp
jp
push
sbb
push
adc
pop
mov
add
sub
dec
xor
adc
test
jmp
imul
lret
pop
pushf
pop
in
fucomp
dec
repz
jns
and
mov
fsub
mov
inc
fiaddl
pop
sub
mov
out
into
test
fists
xor
inc
aaa
adc
jnp
mov
aad
and
leave
popf
imul
mov
sub
jno
xchg
inc
bound
imul
and
lret
xchg
sbb
mov
loopne
jge
xchg
in
test
xchg
sbb
lds
ret
mov
call
push
xchg
lock
mov
jb
aaa
negl
mov
sti
push
aaa
jmp
ret
pop
dec
mov
cmp
push
pop
inc
subb
jnp
dec
ret
das
outsl
jle
mov
out
add
lcall
leave
scas
decl
sbb
jle
and
push
mov
jle
repnz
rorb
push
cmpb
xchg
or
lock
cli
jnp
aas
dec
aad
mov
int
loop
pop
mov
mov
fisttpll
repz
sarb
sti
sub
cltd
dec
leave
bound
mov
lea
inc
push
or
dec
jnp
ds
or
xchg
hlt
ret
mov
int3
repnz
movsl
mov
and
jo
xchg
add
out
popa
xlat
sahf
loop
imul
xchg
movsb
cmp
pop
stos
shlb
jb
fadd
sbb
dec
mov
hlt
xchg
sarb
jbe
sarl
push
xchg
mov
pop
dec
lret
scas
stos
add
push
shrb
je
sarb
mov
lods
pop
pop
fnstsw
fsubrl
dec
insl
les
pushf
jb
aas
stos
dec
cmc
mov
rorl
xor
sub
push
inc
mov
add
int3
daa
mov
insb
mov
pop
or
cli
fnstenv
push
pop
and
addr16
inc
mov
xchg
icebp
rclb
movb
sub
pop
jns
adc
ss
loop
lret
std
jnp
adc
push
sbb
add
mov
test
pop
cmp
mov
dec
add
cmpb
xor
mov
int3
and
cmp
sbb
dec
jnp
adc
adc
rcr
outsl
stc
aaa
hlt
or
mov
sub
inc
test
fadd
sub
add
sub
or
pop
enter
add
and
add
sub
shll
movsl
aaa
jp
fcompl
add
outsb
outsb
mov
or
or
sub
xor
push
mov
fsub
sub
ss
mov
adc
pop
mov
mov
rcrl
push
add
aam
push
dec
sub
sti
and
test
inc
fnstcw
scas
test
cmp
cmc
inc
pop
std
jns
jp
lods
dec
mov
rcrl
adc
bnd
aas
loopne
ljmp
sub
ss
enter
jb
push
dec
mov
xor
xor
test
fbstp
cmp
jg
ret
inc
test
test
mov
sbb
xchg
mov
cli
mov
dec
jl
daa
inc
lea
shlb
jb
mov
inc
add
inc
popf
cmp
adc
lea
icebp
sbb
es
xchg
out
sub
dec
orl
loopne
in
outsb
add
sub
push
out
add
mov
aad
cs
gs
mov
lret
pop
adc
xchg
jno
mov
cli
inc
shlb
dec
repz
adc
dec
sbb
stos
aas
loope
xlat
cmp
mov
sbbl
and
adc
leave
test
xchg
fadd
push
stc
lods
sub
mov
add
pop
out
jecxz
daa
or
outsb
push
push
lods
xchg
mov
mov
dec
mov
and
pop
or
jo
sbb
and
cmpsb
pop
jle
inc
dec
nop
pop
popf
int
cmc
jno
fs
sub
mov
push
mov
pop
cmpsl
sub
push
mov
filds
jae
out
movsl
and
sub
test
sbb
or
or
mov
jecxz
xchg
in
loopne
push
mov
int3
sbb
sub
shlb
stos
mov
mov
mov
cli
add
inc
dec
js
into
jnp
movsl
dec
mov
dec
das
in
jbe
adc
fnstsw
stos
stos
add
shrb
fwait
sahf
aad
hlt
mov
xchg
cmp
mov
gs
cmp
xor
test
jmp
les
dec
mov
jno
or
lock
mov
cmp
inc
jg
xchg
add
mov
or
sbb
inc
dec
adc
outsb
loopne
and
outsb
push
insl
or
fnstsw
inc
inc
loop
aas
cmp
jecxz
xchg
or
inc
cmp
xchg
jbe
fwait
push
pop
pop
sti
out
mov
outsl
and
icebp
shl
push
inc
jne
jnp
pop
lahf
test
test
out
sbb
sub
fdivs
mov
daa
stos
add
testl
adc
cmp
jl
das
or
or
dec
lcall
cmpl
or
pop
mov
push
insb
jae
dec
xor
leave
sub
movsl
daa
jne
inc
cmp
insl
add
xchg
outsb
xchg
outsl
test
scas
push
dec
aad
inc
xchg
sbb
mov
mulb
int
adc
popf
cli
sub
aam
fildll
mov
or
jnp
in
mov
inc
adc
bound
jae
loopne
hlt
iret
dec
fsts
jp
or
insl
add
dec
mov
push
sbb
jae
mov
stc
loopne
jecxz
arpl
pop
jmp
add
inc
push
ljmp
out
xor
cs
add
push
jp
inc
mov
or
icebp
and
or
jmp
add
je
mov
jno,pt
xor
jecxz
hlt
or
pusha
mov
mov
jae
inc
movsl
clc
in
aas
fwait
arpl
xor
loope
sti
aas
pushf
inc
mov
adc
mov
mov
mov
xchg
and
das
test
outsl
push
call
and
bound
bound
jae
or
xchg
call
add
and
jg
aam
rorl
fwait
pop
jg
das
fstl
pop
add
test
push
cs
cli
scas
gs
mov
xor
loope
inc
pop
jge
dec
add
pusha
jge
test
pop
jo
and
out
ret
sub
bound
xchg
mov
dec
mov
fimuls
sbb
inc
sbb
jns
sub
fstl
and
pop
mov
dec
in
lcall
call
cltd
popa
faddl
dec
es
adc
mov
lock
ret
rolb
cmpsl
pop
dec
dec
popa
stos
push
aaa
or
push
cmp
sbb
mov
imul
cs
mov
sub
mov
aam
cs
cmc
repz
ja
xor
add
jbe
imul
jb
push
cmp
es
mov
negl
and
iret
les
dec
lock
inc
out
or
test
pop
xchg
xor
repnz
je
pop
hlt
and
inc
inc
out
orl
movsb
push
mov
fsubrs
xchg
or
loop
dec
sahf
incl
inc
andl
movsb
imul
inc
ja
mov
insl
fldl
xor
fisubrs
int3
inc
aam
idivl
or
cmp
fadd
pop
pop
movb
xor
rorb
or
cmp
and
repnz
or
dec
xor
xchg
loop
sub
int3
stos
idivb
rorb
inc
xchg
movsb
xor
ljmp
aas
jbe
stos
std
adc
sub
inc
sbb
and
cltd
lret
sub
addr16
or
cmp
shl
rorl
xor
xchg
sbb
enter
das
dec
ds
sbb
jbe
into
mov
idivl
inc
cltd
outsb
out
mov
addl
mov
add
xchg
push
mov
cmp
push
and
jnp
dec
ffreep
dec
or
mov
push
inc
inc
xor
cwtl
int
call
fildl
adc
jmp
fldcw
sbb
lret
sub
hlt
mov
add
adc
add
mov
in
es
inc
xchg
dec
add
js
xor
xor
jb
mov
popf
mov
xchg
push
sub
movsl
adc
shrl
cmc
mov
jle
and
lds
mov
push
rorb
jo
jae
jno,pn
pop
subl
mov
mov
jo
sub
xchg
int
into
xchg
out
dec
das
push
bound
add
sbb
in
add
insb
xor
and
ret
sbb
sbb
cs
int3
mulb
xor
cmc
xchg
add
push
scas
xchg
push
cmpb
cmp
xlat
andb
push
imul
addr16
ja
in
mov
mov
mov
jae
pop
jl
lret
add
jns
sbb
lds
mov
pop
daa
mov
addb
cmp
mov
and
gs
negl
imul
add
cltd
cli
xor
iret
fsubrp
mov
or
mov
fwait
mov
leave
mov
xor
xchg
xchg
imul
cmpsl
shll
pop
addb
call
fwait
mov
pop
pop
into
xor
repz
fsubs
cmp
dec
mov
push
and
mov
pop
or
sbb
mov
sbb
mov
push
push
test
sbb
lea
pusha
sub
add
jnp
lods
mov
pop
leave
addb
mov
adc
and
mov
into
jle
dec
stos
mov
adc
cmp
dec
mov
popf
push
and
aas
test
or
or
lcall
popa
push
in
xor
jo
ret
es
dec
xor
cmp
lods
xor
pop
pushf
out
add
adc
push
jnp
jne
mov
iret
cmpsb
cmpsb
cmc
stc
loope
cwtl
push
in
xor
or
jge
sbb
lods
shrb
test
sub
gs
mov
push
jae
jnp
out
pop
pushf
jge
sbb
dec
ljmp
je
inc
jle
stos
cmpb
add
mov
dec
mov
inc
add
xchg
shl
rorl
cmovnp
cmpsl
push
and
int3
inc
in
jmp
pop
push
lret
cli
jmp
bound
cmp
divb
fsubrs
fiaddl
leave
incl
cli
cmc
lea
sbb
enter
mov
dec
imul
pop
and
or
xchg
mov
add
xor
repz
shl
fsubs
js
aam
pusha
jle,pt
shll
inc
or
ja
jecxz
pop
mov
ret
jns
subl
jl
mov
mov
mov
xchg
cs
mov
xor
inc
cwtl
sbb
cmp
lcall
repnz
je
jge
push
pushf
jbe
xchg
inc
adc
xchg
sbb
add
jno
popa
xchg
xor
mov
test
inc
sub
mov
jg
in
in
sub
lods
lods
push
stos
mov
mov
mov
orps
xchg
js
stc
stc
mov
and
or
fisubrs
mov
out
push
or
inc
test
icebp
mov
popa
sbb
mov
add
and
mov
adc
icebp
inc
xor
negb
mov
pop
cmp
inc
pop
fdivrl
dec
inc
scas
test
sub
pop
dec
gs
adc
inc
pushf
push
shr
cmp
mov
mov
lea
jle
xorl
mov
aaa
xor
jge
push
mov
lret
out
out
jns
test
pop
mov
xchg
fdiv
adcb
adc
pop
aas
lods
shrb
dec
sub
aas
sbb
pop
or
mov
mov
ret
out
dec
cmpsb
pop
test
cmp
mov
lock
shll
mov
dec
jge
mov
loope
hlt
lock
sub
cli
mov
pop
test
push
xchg
lods
jl
mov
mov
xchg
stos
shlb
and
add
fs
xor
fwait
mov
gs
adc
mov
sahf
shll
mov
push
sbbb
sarb
sbb
cmpb
pop
mov
push
movsl
pop
cs
mov
xor
dec
dec
or
insl
cmp
aaa
cmpsb
mov
inc
mov
movsl
jne
in
loop
add
pop
fisubs
mov
mov
stos
sub
cmpsb
fwait
xchg
lret
pop
sbb
ds
out
push
in
add
mov
adc
dec
add
je
pop
xchg
or
mov
mov
fwait
sbb
mov
and
scas
imul
out
dec
roll
jo
adc
stos
call
adc
inc
repz
cmc
cmp
adc
into
jl
inc
popf
jbe
sub
dec
repz
jp
jmp
mov
lret
xchg
and
pop
sub
sahf
aam
sub
lock
rorb
movsl
sarb
dec
mov
icebp
es
ja
mov
pop
or
jbe
inc
rcl
lods
pushf
and
mov
mov
rclb
scas
mov
or
fs
jae
jae
dec
outsb
repnz
aaa
daa
lret
jp
test
lret
cli
es
jle
add
add
jmp
movsl
sub
loopne
adc
ss
fidivl
and
inc
mov
adc
and
loop
mov
test
or
push
lods
enter
push
jne
scas
mov
adc
fwait
inc
jg
pop
xchg
shrl
or
cmp
xchg
fistpll
push
mov
xor
andl
add
xor
mov
into
mov
leave
xchg
sbb
add
or
push
add
pop
jo
mov
jo
jae
roll
mov
push
es
add
cmp
or
sbb
dec
pop
lods
cltd
sub
insl
mov
and
jae
sahf
rcr
xor
mov
sub
jae
mov
sub
push
dec
mov
xchg
pop
ret
push
cltd
sub
xor
mov
sub
lret
sbb
push
pop
cli
outsb
xor
enter
mov
pop
je
scas
std
cmc
mull
xor
dec
jne
jmp
mov
pop
outsb
adc
push
fisubrl
stc
sub
sbb
ljmp
ja
out
lea
xlat
stos
mov
out
test
aam
ds
imul
mov
pop
sub
lock
sbb
sub
sbb
lods
cmp
lock
sti
or
adc
scas
or
mov
mov
cli
xchg
adc
call
xor
mov
mov
adc
jle
std
bound
mov
xor
mov
jne
es
hlt
ret
inc
rcr
or
jnp
jno
or
subl
and
jl
or
bound
notl
xor
pop
mov
mov
push
adc
jp
cmp
hlt
xchg
ds
popf
sub
iret
jmp
dec
jae
push
popa
mov
jae
or
dec
dec
das
int3
mov
sbbb
gs
lret
adc
enter
mov
outsb
pop
dec
and
adc
pop
scas
add
and
je
sub
sbb
xor
dec
ljmp
inc
sub
out
jae
movsb
mov
stc
or
jo
fistps
lods
imul
cmpb
addr16
cmp
add
inc
cmp
out
pop
xchg
mov
cmc
addb
testb
mov
xchg
cltd
dec
or
pop
test
fiadds
stc
aam
xor
shr
and
cmpl
add
scas
inc
jns
inc
sbb
xchg
sub
or
jl
lret
jae
pop
dec
pop
adc
fwait
cmp
fldl
fs
jno
fcomip
sbb
ret
mov
mov
push
pop
ljmp
cltd
or
testb
push
cmc
sub
popf
int3
aas
and
cli
cmp
ret
push
xor
and
cld
shll
movsb
fidivrs
daa
cmp
lea
pusha
jb
fsubrl
mov
push
jae
das
outsl
divl
xchg
push
mov
sbb
sahf
pop
outsb
xor
repz
xchg
fwait
stos
cmp
repnz
dec
inc
int
outsb
loope
test
xor
int3
lds
cwtl
rcrl
cmpl
sbb
fidivrs
pop
xor
or
loope
pop
ss
insb
push
aad
dec
xchg
scas
or
imul
cmp
mov
ficoms
add
ds
shll
rorl
aam
cmc
jbe
rorb
mov
add
jmp
xor
mov
fwait
adc
imul
outsl
add
repnz
fdivs
cmp
scas
in
addb
push
push
sbb
push
mov
ffree
adc
es
sub
fadd
inc
dec
shrb
mov
aas
sti
arpl
cmp
push
push
jae
scas
mov
push
sahf
sbb
cwtl
test
sahf
sub
fdiv
outsb
lcall
push
or
mov
or
repz
jbe
pushl
jg
in
loopne
mov
push
fstpt
aam
andl
add
xchg
in
mov
icebp
das
cmp
mov
mov
xchg
inc
jae
imul
sbb
xchg
pop
pop
movsb
or
lock
sbbb
sarb
jbe
mov
or
push
jne
inc
xchg
ss
lcall
in
test
lret
cli
inc
shlb
add
jns
sbb
mov
jmp
sti
out
lret
inc
dec
cltd
js
jp
ret
popa
fwait
dec
xchg
aaa
pop
into
popa
push
fwait
nop
jno
add
stos
mov
insb
int
repnz
mov
cs
movhps
mov
pop
pop
out
and
pop
les
adc
pop
add
sti
cmp
orl
push
insb
lods
sbb
stos
hlt
and
and
lahf
or
jb
test
bound
or
push
pusha
mov
lds
mov
push
sub
add
cmp
push
and
insb
jbe
lcall
rorb
insb
xchg
fsts
stc
xchg
es
inc
cmp
sub
pop
jecxz
add
cs
sbb
repz
pushf
jnp
nop
loope
pop
mov
jne
sbb
pop
leave
out
and
test
sbb
push
mov
sbb
mov
test
negb
cmp
or
mov
movb
pop
push
ja,pn
pop
add
stos
cli
or
lods
jmp
repnz
mov
scas
outsb
in
imul
jle
pop
jg
lcall
int
mov
mov
dec
jno
ja
insb
xlat
fidivrs
adc
jbe
ds
mov
int
sub
pop
dec
fwait
adc
ljmp
xchg
jo
fldt
idivl
out
jbe
pop
xchg
mov
lcall
jecxz
sbb
push
inc
push
aas
inc
xchg
ss
push
add
les
clc
mov
jmp
aam
jg
jno
jns
lcall
or
arpl
cli
sub
cmp
mov
mov
test
repnz
fadds
or
lret
or
inc
add
loope
lea
or
int
xchg
add
xchg
mov
out
pusha
jecxz
cmp
mov
jmp
fistps
cmc
fistpll
xor
pop
inc
repnz
jo
dec
pop
mov
pop
push
push
jnp
xor
mov
inc
lods
shll
stos
and
rorb
add
add
xchg
cmp
je
inc
and
sbb
pop
insb
xor
leave
xchg
pop
sbb
or
lahf
ja
dec
mov
stc
stc
popf
or
daa
mov
pop
out
aas
call
ret
lds
es
fwait
cli
sub
xor
mov
push
mov
xchg
push
out
aaa
jns
test
jne
pop
push
pop
cmpsb
fists
divps
mov
or
xchg
je
insl
add
push
mov
adc
and
sub
xor
push
lds
sbb
idivb
add
xor
mov
xor
aam
add
mov
sti
adc
outsl
sub
rcrl
scas
pop
push
jg
xchg
test
mov
sub
mov
icebp
out
pusha
and
sbb
pop
ljmp
sub
loope
cltd
jno
jl
push
or
pop
gs
jmp
mov
ja
jmp
rcrb
push
push
aam
cld
cmp
imulb
fbstp
test
cmp
mov
mov
outsb
dec
jno
jp
sub
int3
cmpsl
fsubrl
add
fs
out
outsb
cli
iret
or
cwtl
jl
pop
test
enter
dec
inc
repz
lcall
sub
jle
jg
fcmovnu
cs
push
cmp
cmp
and
das
iret
fsub
ret
stc
cmp
dec
dec
inc
jecxz
dec
testb
or
jg
add
inc
cmc
push
adc
add
loopne
or
adc
insb
loopne
aaa
and
clc
mov
cmpsl
out
test
inc
pop
mov
movsb
xlat
sub
loopne
adc
or
lods
jmp
mov
or
ljmp
xchg
in
adc
loop
lods
sub
or
jns
jb
mov
or
cmp
pop
in
mov
push
fadds
fisttpl
xor
mov
push
pop
mov
sbb
xchg
loope
mov
insl
pusha
lret
adc
pop
mov
jmp
mov
scas
add
ret
testb
mov
sub
popf
popf
push
jmp
repnz
xlat
rcrl
in
rolb
pop
cmp
inc
out
pop
sub
and
dec
dec
addr16
shl
xchg
pushf
faddp
cmc
jmp
add
inc
cmpsl
subb
sarl
jno
cld
jae
and
sbb
mov
add
cmpb
mov
push
xchg
adc
lret
add
and
fcomps
jl
mov
dec
cmp
push
mov
stc
adc
insb
in
ja
jle
sbb
dec
cmpsb
sub
jle
push
ret
or
test
ret
gs
iret
add
mov
int
mov
sub
cmp
fsubrs
je
push
sbbb
pop
inc
jmp
gs
repnz
cs
mov
filds
insl
fdivr
and
mov
adc
mov
andb
mov
out
inc
fs
test
fsub
call
cltd
dec
popa
cs
lcall
pop
je
mov
lcall
faddl
fmuls
jl
test
push
add
mov
cmp
stos
jle
es
push
mov
cli
stos
or
and
inc
out
push
adc
dec
sub
cmc
inc
movsl
or
sub
mov
sub
xchg
mov
mov
push
int
add
push
aad
sub
fisubs
adc
cmp
xchg
push
xor
and
mov
fwait
sub
mov
mov
cmp
bound
push
and
xchg
mov
or
and
mov
inc
rolb
cs
fbstp
xchg
into
or
pop
cmpb
arpl
cli
inc
test
outsb
or
enter
and
cmp
add
and
outsl
push
in
add
sbb
mov
add
test
in
sub
mov
cmp
sub
dec
jnp
test
sbb
in
and
jecxz
xlat
inc
xor
jb
test
cmp
aad
jnp
jp
mov
fistpl
cmp
ljmp
xchg
nop
xor
sub
sbb
or
jp
lods
mov
hlt
mov
cs
mov
xchg
loopne
ss
out
int
cmc
gs
inc
mov
bound
push
lea
js
inc
leave
pop
repnz
push
inc
lcall
loope
aad
xchg
std
mov
mov
pusha
mov
push
jp
sub
test
add
sahf
test
int
out
or
jle
cmp
ficoms
jg
mov
in
jg
xchg
add
aam
push
push
and
push
push
add
dec
test
leave
xchg
push
and
sub
and
orps
jbe
iret
imul
lahf
dec
sub
call
inc
stos
or
stos
ds
jo
push
cmc
lods
jmp
or
xchg
mov
pop
mov
insl
test
jmp
arpl
shlb
inc
popa
movsb
testb
fidivrs
xchg
jb
sbb
mov
stos
inc
cmpsl
lods
rcrl
add
in
mov
sub
push
out
sub
pop
test
enter
add
leave
mov
sar
xor
fildl
pop
loopne
push
hlt
test
add
jne
mov
aaa
mov
fucomi
mov
lret
mov
aam
xchg
mov
or
pop
out
in
push
int3
xorb
adc
mov
loopne,pn
mov
mov
pop
push
adc
sub
adc
call
xchg
aas
ret
addr16
mov
jb
xchg
pop
insl
adc
sbb
pcmpeqd
scas
sbb
mov
into
and
xchg
xchg
or
sbb
inc
or
popa
scas
insl
pop
mov
inc
add
push
push
mov
mov
lret
jl
or
enter
movsl
or
push
inc
jle
mov
mov
data16
cltd
out
rcll
lcall
lock
push
mov
adc
jecxz
push
add
and
add
jge
call
jo
incl
jns
push
mov
jnp
pushf
test
mov
push
sbb
xlat
xchg
jns
test
xorb
cmp
lret
ja
jns
push
inc
xchg
pop
repnz
adc
dec
add
pop
repnz
pop
in
scas
push
adc
pop
insl
xchg
nop
push
inc
xor
sbb
pop
cmpsl
adc
xor
jbe
lahf
je
xchg
icebp
pop
pop
xchg
jle
or
scas
mov
cmc
lcall
push
mov
mov
adc
jmp
pop
fisttpll
mov
rolb
insb
int
shll
inc
mov
xlat
pop
mov
roll
ljmp
arpl
push
jmp
mov
pop
lea
xchg
rolb
movsl
jo
jp
test
adc
gs
movsb
mov
mov
xor
xor
push
clc
stos
lea
imul
fldpi
sbb
decb
rorl
addr16
call
sub
es
int
mov
loope
sub
pop
outsb
sbb
inc
xlat
rolb
sbb
pop
inc
roll
dec
in
push
pop
lea
mov
nop
adc
popf
mov
mov
pushf
mov
mov
les
mov
ret
jae
push
cltd
dec
inc
test
or
pop
sbb
inc
les
xor
mov
lds
adc
sub
xchg
xor
cld
mov
cmp
jp
orl
xchg
scas
pop
xor
mov
jb
sbb
and
out
add
mov
test
sub
and
lcall
pop
sahf
bound
idivb
iret
lcall
rcrb
or
js
shl
xchg
xchg
ss
pop
mov
sbb
jbe
push
aad
fbld
es
jg
test
lock
add
add
mov
and
add
fcomip
pop
pushf
in
insl
mov
mov
pop
and
mov
jmp
push
xchg
cwtl
sbb
mov
pusha
cmp
ljmp
ret
cltd
sub
xorb
push
in
subl
dec
or
push
arpl
cmpb
aas
orl
mov
imul
sbb
xlat
das
sbb
sbb
gs
loop
cmpsl
lcall
cltd
push
in
data16
cmp
es
int3
inc
out
addr16
cmp
xchg
fstpl
mov
or
jb
and
into
cmpsl
test
lret
lret
add
in
popl
and
xchg
mov
and
mov
push
xchg
cld
pop
out
jecxz
ds
ficoms
ficompl
fimuls
cmpsl
insl
pop
ljmp
dec
xchg
dec
jmp
push
push
pop
leave
push
push
sbb
push
jmp
jg
inc
jmp
push
pop
mov
xchg
xchg
in
ds
cld
iret
in
sub
insb
mov
lds
sahf
add
jne
push
insb
nop
sub
push
and
mov
or
fstps
xorb
add
popf
imul
movsl
mov
push
sub
xchg
or
mov
mov
or
subl
inc
inc
xor
sbb
push
lret
xchg
sahf
mov
dec
lods
loop
cwtl
inc
mov
test
xlat
ret
sahf
movsl
mov
inc
dec
lods
fdivl
dec
mov
repz
mov
out
push
imul
and
add
push
mov
pushf
inc
mov
or
and
loop
pop
pop
jg
hlt
insl
test
pop
lcall
test
mov
xor
jo
daa
mov
or
int
lahf
ljmp
xchg
aad
pop
sti
push
pop
add
sahf
sahf
sbb
jge
jl
push
shll
ljmp
jne
cwtl
push
std
jno
push
xchg
insb
push
rcl
xorl
cmp
jg
int
mov
test
xor
add
fwait
sbb
stc
in
into
inc
ss
lahf
xor
hlt
push
fnstsw
dec
xor
insb
xlat
out
xor
nop
mov
mov
insl
add
mov
mov
arpl
filds
ret
xor
ret
jp
mov
lods
or
incb
loop
pop
lds
out
rorl
sbb
popa
sarl
int
repz
ljmp
movsl
pushf
aaa
mov
das
nop
xor
lcall
pop
pop
xchg
cmp
outsb
int
and
push
sub
cmp
or
mov
mov
xchg
fdivr
mov
insl
shrl
pushf
or
mov
cmp
fcmovbe
ja
cmp
push
pop
or
popa
aas
xor
cli
icebp
xchg
xor
popf
xchg
push
pop
jge
scas
in
arpl
mov
ror
sbb
mov
or
dec
ds
incl
test
and
imul
popf
inc
sahf
hlt
mov
roll
pop
mov
mov
mov
in
ret
cmp
or
scas
je
push
cmp
xchg
or
repz
mov
movsl
xchg
mov
mov
arpl
cld
cmp
xlat
mov
out
add
add
movsb
mov
adc
push
dec
push
pop
mov
int3
mov
cmp
jmp
mov
das
xchg
jns
mov
jmp
cmp
test
xchg
mov
jmp
jbe
repz
in
mov
mov
mov
jg
add
xlat
pop
test
mov
jmp
into
xor
hlt
in
cmp
repz
lahf
jns
cltd
jae
mov
xor
andl
cmp
std
test
mov
stc
pop
or
std
enter
add
jl
ds
xor
mov
jb
adc
push
mov
mov
push
sarb
jge
pop
lret
les
or
sub
leave
xchg
dec
rcr
mov
mov
dec
or
adc
popa
lods
bound
adc
popf
jl
in
aas
popa
push
dec
cmpsl
leave
inc
sbb
daa
insb
add
hlt
into
pop
pusha
xor
stos
push
inc
daa
test
or
or
jle
fs
mov
cltd
stos
inc
pop
test
adc
add
xor
fadd
mov
add
adc
pop
cmp
das
fdivr
imul
aaa
rclb
inc
or
icebp
loop
push
scas
jp
add
ljmp
gs
das
les
pusha
shr
inc
daa
cs
jle
xchg
jge
jno
rcrl
jl
inc
adc
into
stos
adc
icebp
out
into
push
orb
fildl
fistpl
notl
or
inc
rcll
push
add
sbb
jecxz
fistps
mov
adc
mov
jp
add
jno
data16
sarb
jl
mov
ja
stc
push
shl
addl
jae
into
call
inc
adc
pusha
ja
fldl
sahf
pop
ret
xchg
sub
daa
sbb
es
inc
xlat
jno
pop
sub
outsb
or
dec
das
mov
xchg
mov
fdivrl
popa
shrb
xor
js
loop
int
jmp
aam
mov
fstps
dec
mov
add
mov
mov
out
xchg
out
pop
insb
push
xchg
lret
sub
mov
scas
adc
cmp
inc
aad
mov
cmp
cmp
add
mov
mov
js
pop
ret
stc
ret
sbbb
jb
mov
adc
mov
pop
std
xor
xlat
pusha
mov
sub
popf
pop
or
pop
rorb
aas
inc
push
mov
sub
into
sbb
enter
je
popa
cmpsl
lret
jns
jne
push
jnp
mov
sub
mov
sub
shlb
mov
xor
outsl
repz
out
push
cmpsl
mov
repz
repnz
push
lahf
pop
push
add
or
dec
nop
or
add
or
or
pop
push
mov
push
mov
shr
js
pop
dec
jb
mov
mov
mov
sbb
jle
iret
push
sarb
mov
mov
outsb
xchg
mov
data16
shl
js
ret
push
jmp
push
int3
sbb
jb
mov
mov
mov
fs
cmp
cmc
iret
mov
fmulp
out
adc
mov
arpl
jno
dec
dec
repnz
mov
xlat
arpl
mov
cs
xor
std
mov
inc
jl
dec
push
pop
push
cmp
insb
pushf
or
dec
and
nop
ret
addb
in
imul
or
leave
or
push
xchg
test
mov
mov
and
iret
mov
jge
inc
mov
adc
sub
sbb
roll
std
out
sbb
fsubl
xor
dec
mov
pop
movsb
cmp
ret
and
sbb
pop
mov
test
call
es
add
jae
mov
mov
clc
aaa
es
lret
shrl
and
data16
dec
cld
das
push
dec
in
pop
test
sub
movsb
add
push
xchg
mov
pop
jb
cmpsl
or
sbb
and
cmpsl
popa
jecxz
cmp
mov
fstpt
loope
jnp
mov
cmp
insl
pop
shl
pop
cmpsb
test
call
movsl
sub
scas
jb
mov
jae
mov
bound
dec
hlt
cmp
and
xor
cmc
xchg
sbb
call
iret
pusha
in
adc
enter
xchg
adc
pushf
push
pop
xor
flds
into
sub
sahf
inc
dec
insb
out
sub
push
les
adc
sarb
sbb
cmp
adc
sbbb
jnp
pushf
cmp
mov
and
jp
mov
add
incb
hlt
mov
mulb
mov
iret
hlt
outsb
imul
and
mov
push
mov
mov
scas
jne
iret
push
insb
and
push
jge
mov
cmpsb
xor
adc
ret
cmp
pop
leave
sbb
fwait
push
xchg
pushf
mov
subl
dec
in
xchg
cmp
or
jb
iret
std
adc
inc
popa
pop
and
repnz
xchg
int
xor
repnz
cmp
loopne
mov
push
pop
lcall
in
pusha
pop
and
xchg
jp
jl
sub
cmpsl
adc
nop
jmp
scas
nop
mov
push
mov
scas
jg
inc
popf
mov
mov
call
out
dec
jae
and
mov
mov
stos
out
pushf
cmp
mov
pusha
pop
in
pop
cld
sbb
hlt
sub
es
sti
jb
lods
xchg
stos
mov
aam
ja
cltd
pop
add
mov
iret
test
cld
add
or
lret
push
test
gs
fwait
adc
rorl
inc
inc
fsubrs
and
jmp
in
js
cltd
hlt
fs
pop
jo
and
hlt
jmp
inc
jmp
jecxz
mov
aam
or
push
or
inc
or
rcrl
js
sub
pushf
push
jp
lea
shll
test
jle
xchg
sub
fistps
mov
cmpb
nop
je
adc
sub
cmp
lahf
dec
push
pop
subb
sub
ret
mov
or
push
data16
sub
jecxz
loopne
arpl
xchg
jb
aad
push
push
pop
fs
les
dec
movsb
add
loopne
fldt
inc
lret
cld
and
leave
adc
sbb
inc
lods
or
sbb
fldl
sbb
lea
leave
subb
mov
in
out
mov
rcll
xor
pop
or
movb
jg
test
mov
push
insb
fsubrl
or
dec
int
xor
adcb
or
enter
mov
out
out
lock
fwait
push
stc
insb
adc
sbb
fisubl
stc
add
test
rolb
cltd
mov
cmc
mov
push
sub
pushf
cs
pusha
mov
iret
fstps
inc
mov
mov
inc
aaa
inc
inc
adc
jecxz
xchg
push
mov
es
loopne
popf
jb
inc
inc
sarb
lahf
frstor
inc
insb
les
adc
leave
repz
roll
mov
addr16
pop
fadds
push
pop
jne
xchg
or
xor
push
cmp
inc
ret
lahf
xor
dec
mov
and
pop
xchg
push
pushf
push
inc
loop
sbb
jl
imul
xchg
mov
pop
push
sub
cmpsb
outsl
inc
fstpt
adcl
out
pop
stos
shll
mov
popa
shrl
je
xor
push
adc
lock
mov
mov
shll
push
and
ret
xor
add
push
out
mov
int3
iret
and
or
inc
call
or
cltd
mov
lcall
xchg
cmpsb
das
outsl
lea
lahf
sub
ret
es
pop
xor
js
scas
arpl
clc
and
adc
js
cmp
fstps
mov
lret
or
sbb
test
jle
ds
fld1
add
imul
push
xchg
pop
leave
inc
pop
arpl
xor
xor
pop
xor
fadds
movsl
notl
cmp
hlt
jnp
pop
inc
int3
and
jae
mov
mov
mov
adc
cmpsb
dec
jp
arpl
in
and
int
cmp
shlb
je
pop
aam
inc
jge
lret
movsl
fld
jns
fisttpl
cmpsb
mov
rclb
mov
inc
pop
mov
aam
hlt
nop
mov
jbe
movb
mov
sbb
xlat
dec
mov
imull
clc
and
lahf
rcll
clc
scas
ss
xor
cmp
mov
mov
pushf
ljmp
jnp
xor
push
out
movl
daa
dec
ja
jns
jmp
dec
aaa
jns
mov
iret
sti
pop
mov
jmp
insb
mov
cmp
jo
outsb
sbb
mov
mov
jo
xchg
and
and
data16
fwait
movsb
test
cmc
stos
les
ud1
sub
cwtl
aas
mov
inc
sbb
adc
cmpsb
push
sahf
inc
rorl
xchg
dec
in
pop
iret
lahf
loopne
inc
movsb
add
sbb
dec
add
dec
lret
sbb
push
sahf
das
mov
js
shrb
xchg
mov
push
pop
movsb
test
pop
mov
or
pop
jne
out
in
movsl
gs
stos
jne
loope
cmp
and
in
call
mov
inc
inc
into
xor
fsub
xchg
fs
and
int
je
push
jo,pt
mov
out
xchg
sbb
out
dec
mov
fdivs
lahf
mov
inc
fs
xchg
aad
mov
testl
les
popf
and
sbb
out
dec
stos
jge
lea
arpl
ds
inc
mov
shlb
xchg
add
outsb
shll
xor
mov
sarb
test
push
cmp
mov
adcb
out
xor
sub
push
xor
xchg
mov
jo
mov
or
shll
xor
xchg
push
pop
das
insb
pop
dec
maskmovq
notl
or
xchg
pushf
xor
call
mov
jecxz
jle
stos
mov
push
stos
add
fs
xchg
push
and
push
lock
lods
movsb
mov
xor
out
dec
dec
and
clc
enter
jb
test
in
mov
mov
pushf
fwait
arpl
outsl
lret
ret
pop
je
es
loope
in
aas
sbb
mov
jle
lcall
repz
mov
mov
lods
xor
iret
insl
adc
inc
filds
inc
xchg
loopne
lods
ja
pop
in
xor
jmp
xchg
mov
pop
addl
imul
mov
adc
rorl
cltd
call
mov
push
sub
aad
push
cli
jle
and
aas
add
inc
inc
adc
jae
pop
add
push
ret
and
lds
rorl
inc
sub
xor
ror
movl
cmp
sbb
jle
push
pushf
mov
jns
and
or
sub
loopne
adc
cmp
pop
and
in
push
lds
insl
and
iret
icebp
in
jno
scas
sbb
xorb
xor
push
mov
out
mov
notl
push
mov
aad
out
stos
pop
pop
daa
sub
push
sahf
fsubrl
imul
adc
in
aam
lods
idivb
sahf
in
xchg
push
mov
stc
test
andl
incl
mov
mov
or
imul
pop
xchg
jne
mov
sub
movsb
cmp
xchg
sbb
sub
sahf
inc
popa
xchg
int
enter
inc
and
mov
nop
cmc
shrb
hlt
pop
inc
dec
lcall
repnz
dec
fstpl
jmp
stos
lods
and
xor
pop
mov
sub
xchg
aas
xchg
lea
mov
pop
stos
mov
mov
and
in
xor
xchg
push
push
cmpb
pcmpgtb
jne
popf
sbb
jl
adc
push
ss
das
sub
iret
enter
sahf
int3
std
lock
sub
xor
sbb
rol
cmpb
add
jmp
int
mov
fiaddl
sbb
rcr
pushf
sub
push
sti
inc
dec
inc
sbb
jg
fistpll
in
sub
mov
mov
add
mov
dec
pop
and
mov
inc
or
push
mov
pop
rolb
dec
in
xchg
push
imul
scas
mov
fsubrl
push
mov
movl
pushf
jbe
cmp
sbb
mov
das
enter
xchg
fisttps
repz
lods
add
movsl
mov
mov
cmc
adc
xlat
orb
jl
and
cltd
inc
and
push
inc
std
xchg
xor
insb
jne
xlat
inc
dec
psrad
dec
int3
or
lcall
daa
jp
pop
inc
fisttps
ret
mov
sti
dec
bnd
fwait
outsb
inc
and
gs
fsubl
pop
xlat
sub
jno
mov
imul
push
or
ljmp
je
push
sbb
fdivp
iret
xchg
pop
inc
and
sbb
aam
ret
push
inc
push
jmp
scas
enter
or
pop
xchg
movsl
jge
aas
push
and
and
out
mov
pop
xor
jb
pop
cmp
ds
in
adc
sbb
cmp
movsl
inc
insl
mov
adc
xchg
cli
cmp
aad
xchg
push
stos
mov
bound
xor
inc
out
jno
movsb
adc
jp
gs
xchg
sahf
adc
loope
inc
push
push
dec
or
and
andb
scas
xchg
stos
and
pusha
adc
fisubs
iret
test
cmpsb
pushf
jb
cmp
cwtl
sbb
xchg
jno
jmp
mov
ds
loopne
jmp
push
sub
or
or
jle
or
iret
push
das
imul
pusha
inc
nop
ret
bound
cmpsl
repnz
mov
or
jbe
xorb
jbe
addr16
out
cmp
pop
sbb
sbb
ja
mov
inc
mov
jl
mov
pop
addl
inc
xchg
xchg
jo
dec
pop
es
cmp
adc
loopne
std
mov
jns
and
movsb
mov
cmpb
mov
sarb
les
cmp
lret
pop
insl
mov
push
push
push
sub
and
cmp
fistps
movsl
xchg
inc
bnd
mov
loope
and
fwait
pop
dec
out
ret
daa
pop
adc
xchg
fildll
dec
icebp
cmc
cmp
mov
adc
loope
lret
add
mov
ss
test
addr16
push
test
jno
arpl
mov
pop
adc
cmp
mov
stos
hlt
push
xchg
inc
repnz
sti
mov
mov
xchg
or
lahf
mov
enter
aaa
rcl
push
clc
hlt
lea
clc
call
push
adcb
subb
out
iret
jnp
popf
test
daa
sahf
mov
fildl
lea
shll
push
fwait
sub
repz
icebp
sub
jnp
mov
or
mov
test
faddl
push
inc
out
lods
jl
iret
xor
fsub
cmp
fldenv
pop
add
enter
mov
mov
mov
ja
repz
jno
add
cld
ret
cwtl
ljmp
xchg
out
adc
inc
mov
addl
rol
push
adc
std
scas
jae
movsl
push
or
inc
icebp
sub
push
xor
or
jge
sub
jae
or
adc
cld
adc
dec
loopne
fnstsw
aam
into
jle
nop
jns
pop
fcompl
or
ljmp
or
xchg
push
test
jp
aad
movsb
int3
and
test
ret
cwtl
enter
or
adc
or
jmp
movsl
sub
les
dec
xor
mov
pop
sub
ja
jne
jnp
mov
sub
inc
xchg
pop
mov
and
loopne
sub
and
pop
jecxz
out
xchg
jb
or
adc
dec
mov
mov
dec
add
dec
ret
movsb
test
icebp
fimuls
test
lods
jl
jmp
xchg
pop
int3
bound
jl
lods
push
lods
in
sub
push
adc
mov
mov
aaa
rcrb
adc
xor
sub
or
insb
dec
pop
lahf
adc
or
xchg
addr16
sub
lods
fwait
push
cmp
dec
xor
test
fucomp
daa
call
cmp
xor
test
sbb
push
loop
sbb
iret
mov
les
mov
pop
sbb
push
xchg
stos
dec
inc
xchg
add
lahf
dec
je
jge
push
cs
mov
fidivs
sti
in
xchg
mov
in
sbb
idivl
ret
loopne
fldt
call
mov
and
cmp
sub
stc
add
jnp
adc
xchg
pusha
cwtl
cmp
int
sub
lods
dec
out
and
xor
jbe
sub
addr16
push
push
loop
je
dec
cmp
dec
fadd
xchg
push
push
in
xchg
pop
sbb
and
es
lock
push
sub
pop
rcrl
dec
daa
cmc
sub
idivl
sbbb
add
fcomi
and
xchg
inc
or
mov
push
lock
aaa
cmp
mov
jae
or
ret
jne
test
fcoms
push
mov
out
pop
and
pop
inc
out
pop
mov
shr
ret
les
pop
jbe
adc
stos
ss
sbb
lods
lds
outsl
insl
aaa
hlt
or
and
das
pushl
xlat
addr16
dec
fmul
sbb
cmp
icebp
xor
ficompl
repnz
adc
insl
stos
pop
dec
dec
inc
ret
dec
push
hlt
pop
mov
add
xlat
mov
cld
in
in
pop
mov
test
repnz
mov
int
loope
xchg
orl
lcall
pop
jno
movsl
jnp
xchg
xchg
dec
std
icebp
cmpsb
jge
fistpll
pop
loopne
mov
add
insl
into
mov
mov
sbbl
das
push
xchg
loop
addl
xchg
pop
fcmovnu
sbb
xchg
inc
adc
add
popf
jge
test
aas
or
mov
int
and
sbb
lods
ss
add
sub
add
mov
mov
dec
pop
out
pop
jmp
sbb
dec
scas
jecxz
pop
movsb
adc
and
cli
out
pop
sub
mov
orb
std
mov
push
jle
jne
xchg
jle
sbb
fucom
sahf
pop
popf
adc
fisttps
cmpl
cld
jmp
cmp
jle
ret
add
inc
outsl
in
orl
or
out
sub
adc
dec
adc
rcrl
sbb
mov
push
mov
lea
sti
out
xchg
xchg
jb
clc
negl
mov
shrb
push
jmp
int3
inc
adc
lods
lcall
aaa
ss
xchg
mov
xchg
rorb
jnp
and
gs
aaa
test
cmp
or
sub
push
sbb
sub
gs
scas
test
pop
mov
xchg
sub
or
add
roll
repz
dec
scas
and
push
out
hlt
jae
mov
jl
nop
pop
jne
dec
xor
inc
das
mul
mov
fcoms
lret
ret
mov
sbb
mov
dec
cmc
push
aad
lcall
xchg
ja
jmp
int3
clc
fcmovbe
xchg
enter
xor
cmp
jmp
xchg
xchg
mov
outsb
mov
jbe
inc
push
jb
mov
cmp
pop
add
pop
ja
insb
cltd
xor
cmp
xchg
dec
and
sarl
into
ja
stos
xchg
inc
test
sbb
jae
push
dec
addl
mov
add
nop
cld
adc
sbb
les
imul
rolb
in
fwait
icebp
pop
aam
ljmp
jmp
xchg
clc
int
out
sbb
leave
push
sub
jp
hlt
sbb
ljmp
into
in
or
inc
shll
movsb
out
jns
push
push
xor
cmpsb
pop
out
call
push
xchg
hlt
loopne
inc
and
inc
inc
and
ret
scas
popf
and
mov
push
mov
iret
inc
fsub
dec
adc
dec
sbb
xchg
hlt
push
sub
mov
push
pop
xchg
inc
pop
inc
int3
and
ficomps
xchg
loop
pop
fwait
jle
push
mov
in
mov
mov
mov
aam
sbb
push
push
inc
pop
mov
sub
jl
std
adc
nop
rcr
add
or
mov
je
xchg
mov
pop
negl
gs
imul
cmp
cmp
in
add
sbb
jae
xchg
xchg
cmpb
push
scas
mov
cli
popf
inc
hlt
sbb
xor
mov
push
lahf
loope
enter
test
in
sbb
mov
push
xor
add
pop
testl
enter
add
mov
icebp
sub
mov
xor
jnp
jle
mov
mov
call
enter
scas
fidivs
mov
enter
xor
xchg
pusha
mov
ffreep
repz
in
mov
lods
out
cwtl
pop
iret
cmpsb
cltd
dec
loope
adc
out
sbb
sbb
loopne
jmp
fstl
decl
xchg
repnz
mov
fbld
xor
je
sbb
mov
scas
mov
arpl
ja
icebp
stos
filds
inc
cli
sahf
rcr
xchg
jp
aam
sbb
fadds
stos
out
subl
out
out
gs
fildl
les
rcrl
mov
push
es
loope
cmpsl
lret
dec
add
insl
ds
xor
leave
ds
xor
mov
fdivrs
xchg
nop
cmp
rolb
sub
popl
popa
inc
adc
and
mov
mov
push
and
jmp
into
stos
fsubrs
jno
push
mov
cwtl
and
xchg
push
xor
inc
cwtl
xor
jae
mov
pushf
lds
xchg
int3
cld
mov
add
icebp
sbb
inc
fsubrs
xor
push
mov
push
and
fwait
sbb
push
shll
sbb
mov
xchg
jo
xor
xchg
adc
sti
popf
outsb
lret
ret
icebp
cmp
sbb
and
test
rcrb
aaa
or
iret
movsl
mov
adc
outsw
inc
mov
mov
loopne
adc
adcb
into
adc
fwait
mov
shlb
cmp
sub
out
mov
pop
push
out
xchg
cmpps
imul
cli
xor
dec
das
cs
mov
mov
loope
movsl
or
sub
push
cld
jl
daa
sti
mov
adc
bound
inc
mov
add
or
cmp
cld
testl
test
mov
xchg
inc
repz
sub
rcll
jle
movsl
ret
mov
push
or
jecxz
lahf
jo
stos
stc
je
or
push
and
sti
cmp
lea
push
rcrl
inc
lahf
nop
sbb
xchg
into
scas
jne
lret
jnp
xchg
roll
loope
sbb
dec
loope
shlb
clc
xor
js
push
mov
mov
dec
xor
pop
xchg
les
mov
out
aas
sbb
dec
lret
mov
xor
or
adc
es
loopne
pop
insl
mov
adc
test
jg
mov
sbb
push
xchg
dec
lea
aas
mov
lock
xlat
jl,pn
lret
mov
jle
hlt
addr16
outsl
aas
pop
mov
jmp
jl
in
ret
push
arpl
sub
idivl
sub
sarb
jl
mov
out
sbb
mov
cwtl
repnz
jno
pop
adc
mov
cwtl
mov
es
dec
bound
mov
cltd
iret
fdivl
mov
push
cld
xchg
xchg
cmpsl
pop
js
xor
enter
pop
push
cs
and
movsl
fsubrs
sbb
pop
mov
mov
pop
mov
push
std
in
fdivrs
xchg
lahf
and
cmp
and
stc
into
jmp
lods
test
cmc
sti
push
andl
arpl
xor
sbb
cs
repz
and
push
popf
jecxz
and
orl
fsts
mov
sbb
std
cwtl
bound
std
jge
jb
xchg
push
test
mov
xchg
cmp
xor
add
fnstenv
xchg
scas
pop
push
nop
xchg
push
mov
ss
cs
loop
lahf
jg
xchg
fldcw
mov
aam
adc
in
mov
sbb
mov
jl
aad
es
loop
push
jecxz
dec
cmp
mov
ss
pop
jge
arpl
and
fnsave
pop
int3
mov
lcall
in
and
outsl
jae
mov
mov
pop
aam
mov
insl
cmpsb
mov
pop
scas
test
jp
mov
pop
shl
shll
dec
loopne
and
fisubrs
and
enter
ficompl
mov
push
cld
hlt
mov
cmp
push
or
outsb
adc
int3
jle
mov
cmp
sti
int3
xchg
mov
push
test
xchg
lcall
rolb
test
jl
lods
aas
xchg
inc
scas
push
jg
jmp
jecxz
inc
mov
mov
pop
fs
cmp
int
push
imul
push
pop
jo
jbe
dec
push
adc
bound
aas
jo
or
inc
fdivs
rcrb
mov
lahf
es
sub
adcb
mov
pop
mov
mwait
ja
scas
or
mov
jl
movsl
xlat
xchg
dec
stos
sahf
jecxz
sti
and
fstps
sbb
stc
push
mov
push
sbb
push
aas
sub
enter
xchg
call
dec
leave
adc
aad
jle
mov
mov
leave
add
push
fsub
mov
lcall
or
push
cld
repz
jae
jl
jo
push
xchg
mov
fmull
dec
jno
sub
and
imul
inc
pushf
scas
mov
aam
xorl
cmpsl
aad
in
push
stos
test
or
adc
inc
repnz
lahf
and
into
into
sbbl
cwtl
dec
lahf
mov
add
jl
bsr
push
pop
or
cmp
adc
jl
adc
cmp
fmull
push
fwait
adc
jmp
rcl
cld
mov
pushf
push
movsb
notb
jl
div
std
lret
stos
std
mov
shlb
mov
dec
gs
inc
xor
sbb
data16
adc
xor
test
lret
fbld
pop
mov
imul
jb
pop
pusha
int
lods
shlb
fwait
stc
lea
adc
or
add
sbb
sub
cmpsb
and
aad
imul
iret
outsb
fcmovnbe
rclb
outsl
imul
mov
leave
inc
push
dec
call
and
cld
pop
ss
push
add
mov
sub
adc
sahf
mov
inc
hlt
sub
fwait
fs
mov
movsl
push
fimull
push
cs
mov
shll
testl
mov
lock
sbb
sbb
je
in
enter
sub
addr16
movsb
and
pop
pop
ss
adc
mov
cmpsb
mov
mov
jge
repnz
sbb
insb
jge
sbb
mov
mov
mov
rorb
cmp
ret
push
mov
sti
jno
test
pusha
ret
push
lods
jno
loope
push
stc
stos
pop
mov
push
mov
std
push
mov
addr16
or
jmp
in
xlat
out
fistl
xor
pop
or
or
xor
andb
cmc
out
or
mov
repnz
fcoml
fisubrl
sub
movsl
xlat
pop
incl
jae
shl
dec
mov
test
call
enter
or
fwait
int
cmp
sete
fsub
jmp
add
adc
mov
xchg
and
pop
popf
pusha
mov
fsubrs
call
sbb
or
mov
xchg
xor
into
rolb
stos
lods
ret
or
ja
or
mov
jg
shrl
xor
push
sti
push
iret
popf
in
add
insb
sbb
lahf
popf
cmp
icebp
inc
mov
push
pop
movsl
mov
into
add
bound
fists
scas
es
repz
inc
pop
test
jecxz
inc
mov
and
popf
imul
lods
stos
or
mov
stos
push
dec
sbb
fmul
jo
and
and
pushf
dec
xlat
sbb
fs
int3
mov
mull
jl
lahf
xor
in
mov
aam
cmc
pushf
jg
cltd
lock
fwait
mov
or
adc
and
test
jle
sbb
loope
and
out
fmulp
in
pusha
in
leave
xlat
sub
jns
js
or
aad
cmpb
call
sub
daa
xchg
popf
jo
cltd
inc
push
in
dec
arpl
mov
lds
push
mov
test
test
in
sahf
mov
and
enter
insb
pop
rcr
movsb
xchg
scas
or
sub
test
fildl
or
lock
jmp
lahf
adc
mov
out
inc
mov
jne
push
bound
jecxz
rcrl
loope
mov
pop
mov
sarb
stos
in
inc
push
iret
and
lret
inc
insl
sub
fisttpll
ds
lds
in
add
jne
nop
leave
scas
sub
clc
pusha
xchg
std
and
add
loopne
cmp
inc
sub
andb
xchg
ret
pop
mov
and
ss
lahf
inc
cmpsl
and
lret
xor
sub
add
rcrl
pop
movsb
outsb
stos
hlt
fldt
mov
ss
mov
or
or
sbb
in
incl
xor
add
sub
adc
test
sub
add
aam
pop
push
inc
pop
std
cmp
stos
test
mov
and
xor
in
dec
jae
jge
rcl
and
jne
mulb
and
add
iret
or
stos
cmp
loope
mov
mov
std
xor
daa
xchg
insl
fidivl
push
mov
dec
inc
push
sub
push
sub
xor
insb
leave
xor
jle
jle
sbb
xor
or
fwait
pop
cmp
fstpl
sbb
cmp
mov
mov
push
sbb
add
insb
xor
xor
icebp
dec
sbb
imul
cmp
pop
aam
stos
cmp
jbe
xor
and
fnstsw
cmp
jp
outsl
cld
std
or
lret
js
in
push
add
dec
adc
jl
lock
dec
ret
mov
fisubl
pusha
jl
int3
movsl
cmp
in
mov
jnp
xlat
imul
mov
stos
lret
imul
jmp
fs
cmp
xor
insl
cmpl
sub
rcr
jbe
xor
inc
add
pusha
aad
dec
mov
lods
sbb
mov
mov
loope
scas
sub
xor
pop
dec
xchg
lea
shlb
mov
es
push
js
push
std
and
sub
rolb
add
cmpsl
push
inc
pop
mov
and
inc
push
les
jb
orl
add
notb
nop
popa
rolb
dec
jb
and
cmc
test
in
xchg
mov
mov
loope
cli
int
bound
sbb
stos
jbe
xor
popa
fwait
test
or
xor
or
add
pop
in
jb
mov
popa
iret
sub
out
push
sbb
push
lods
or
inc
loopne
dec
pop
pop
xor
xchg
jb
mov
dec
add
add
mov
outsb
outsb
push
xchg
in
xorb
inc
frstor
inc
pop
icebp
cmp
aam
jno
aam
jp
es
pop
shll
jmp
push
mov
cld
fwait
mov
popf
int3
fstl
lret
js
ret
dec
leave
cli
cmc
std
or
std
arpl
push
mov
in
daa
and
popa
aad
pop
loopne
clc
sbb
imulb
push
xor
es
les
push
inc
adc
mov
outsl
iret
adc
outsb
ret
cmp
out
repz
add
mov
push
ljmp
sbb
jmp
ljmp
cli
adc
push
in
push
inc
inc
pop
daa
and
dec
mov
xchg
and
sti
mov
ss
ja
cmp
pop
jno
add
xchg
inc
mov
cmp
test
insb
sub
std
jl
jmp
outsb
mov
popa
jl
lods
xchg
nop
movsb
push
fldenv
jge
nop
insb
jmp
gs
mov
stos
loope
xor
rcrl
inc
es
dec
outsb
mov
add
movsl
inc
aaa
cmp
and
stos
push
movb
cmp
cmp
rolb
repnz
sub
adc
push
repnz
cmp
or
mov
cli
lcall
stos
imul
xor
int
mov
cli
call
scas
xor
fisttpll
in
pop
and
test
mov
rcll
adc
adc
cmp
push
xchg
jo
aam
jg,pt
cli
test
push
out
orb
push
cwtl
adc
sti
ljmp
jp
mov
movsl
add
inc
or
inc
and
or
xchg
add
fmul
or
xor
jge
divb
test
push
pop
jge
mov
inc
mov
icebp
into
mov
int3
insb
ja
cmp
lahf
mov
lea
lret
andl
loop
add
pop
pusha
mov
xor
fxch
jecxz
cmpsl
insl
clc
dec
xchg
inc
aaa
push
mov
sbb
lret
imul
nop
lea
inc
or
xchg
dec
add
lret
xorl
mov
in
cwtl
fistpl
mov
aad
insb
insl
sbb
mov
cli
fwait
dec
fdivs
js
pop
out
das
mov
and
xor
or
fidivs
cwtl
push
push
pop
mov
mov
outsl
and
cmpsb
xor
sub
xchg
jae
test
lahf
jecxz
push
das
mov
and
test
cmpl
lods
loope
inc
push
into
fnstsw
dec
xchg
mov
stos
pop
fistpl
add
gs
pop
enter
sub
jns
arpl
fimull
xchg
mov
leave
lock
sbb
mov
and
mov
enter
fldenv
ret
pushf
push
push
pop
adc
movsl
sub
lock
pop
push
je
mov
pusha
mov
push
sti
mov
rcl
add
jne,pn
movsb
dec
in
shll
or
jne
sbb
out
ds
mov
dec
or
mov
mov
clc
pop
dec
mov
shll
or
adc
shrb
push
and
cmc
lret
scas
arpl
push
cmc
and
mov
or
and
or
ret
xchg
mov
mul
pushf
inc
hlt
jecxz
and
mov
mov
movsl
fisttpll
cmp
sub
xchg
int3
push
adc
test
or
cmp
mov
cmpsl
movsb
outsl
popa
lea
movb
cwtl
jmp
mov
mov
cmpsb
cmp
mull
js
f2xm1
mov
add
std
out
jle
popa
out
xchg
and
mov
stos
js
mov
aas
test
inc
lret
orb
pop
mov
test
cmp
lret
imul
ret
jb
push
mov
lcall
shll
pop
repz
ljmp
pop
sub
mov
mov
shl
aam
out
xorl
clc
xchg
push
in
in
sbb
and
mov
xor
pop
aas
xor
push
add
das
lret
out
data16
jle
xchg
cmp
mov
pop
pop
les
pushl
mov
rorb
adc
mov
jns
or
ljmp
aam
mov
mov
jno
add
dec
pop
jno
push
or
clc
lret
dec
mov
aas
mov
xchg
cmpsb
pop
sbb
pushf
fstpt
lahf
xchg
hlt
adc
clc
mov
mov
loopne
pop
push
ret
sub
into
out
jg
xchg
mov
fsub
cmp
mov
gs
sbb
sbb
divb
inc
lock
call
or
pop
inc
mov
mov
lcall
roll
out
push
flds
mov
or
rcr
and
mov
pusha
inc
pop
or
cmpb
mov
mov
test
mov
add
mov
cmpsl
ret
mov
cmp
cmp
aaa
dec
addr16
inc
fidivrl
inc
mov
inc
popf
pop
add
rorb
adc
jl
mov
fcmovnu
shrd
cmp
or
sbb
outsl
jo
imul
mov
adc
xchg
hlt
mov
xchg
push
mov
push
cmp
cmp
call
pop
push
inc
pop
mov
ficoml
fadds
mull
pop
sub
mov
mov
idiv
test
xchg
inc
xchg
cwtl
push
in
sbb
hlt
test
jo
jbe
jg
mov
mov
adcb
cwtl
inc
or
jns
jg
adc
xchg
pop
jecxz
inc
call
scas
adc
fistpll
mov
add
inc
test
mov
iret
add
hlt
or
sub
pop
clc
jo
sbb
adc
pop
sbb
adc
adc
mov
xchg
inc
sbbl
je
push
mov
cmc
cli
and
xor
in
jecxz
pop
movl
jecxz
ja
repz
mov
stc
jo
shrb
push
in
sub
sbb
jmp
pop
add
icebp
adc
mov
test
jo
lahf
mov
push
mov
fists
xor
call
add
inc
mov
das
imul
mov
pop
aam
loopne
dec
fcompl
cmpsb
jne
scas
cmpsl
dec
movsb
sub
push
push
cmp
leave
push
gs
hlt
les
dec
inc
outsb
jp
dec
movsl
aaa
jnp
dec
jg
hlt
adc
dec
in
cmp
xchg
add
or
cmp
insl
inc
lret
test
mov
frstor
pop
sub
push
pop
sbb
cmp
mov
insb
jne
jnp
xor
in
lods
testl
pop
mov
or
sub
mov
xor
lret
cwtl
xor
sahf
mov
sarl
mov
movsb
xchg
out
sub
orl
cwtl
roll
xlat
iret
aas
rol
jecxz,pn
mov
into
pushf
outsb
ds
fcmovne
jae
mov
jle
lret
aaa
into
nop
pop
xchg
inc
test
leave
add
jmp
adcl
imul
add
add
push
andl
in
sub
xchg
adc
jg
mov
xlat
push
xchg
and
shl
arpl
sarl
in
repnz
rclb
jne
mov
out
notb
and
je
mov
mov
pcmpgtw
cmp
dec
leave
bound
or
roll
es
xor
jecxz
loop
add
rcll
loop
xor
rorb
rorb
sub
insl
push
fs
sub
xor
cmp
dec
pop
sbb
jl
test
push
add
adc
aam
fwait
cld
ja
or
loope
inc
fstps
loop
stos
or
dec
xor
pop
cs
in
inc
clc
or
pop
and
mov
xor
adc
ja
mov
push
xor
shll
lea
cltd
repnz
test
and
outsl
jecxz
push
lcall
daa
adc
sahf
movsl
jl
nop
adc
mov
lcall
cltd
mov
jno
in
lret
fistps
pop
add
fidivrl
cmp
mov
adc
cli
lret
mov
xchg
mov
ja
cs
xchg
xchg
jp
push
cwtl
mov
and
test
jno
dec
push
test
jge
xchg
pop
cld
cmpsb
sbb
daa
dec
fdivl
shll
add
inc
bound
out
push
roll
pop
mov
ret
imul
mov
subb
add
pop
xor
roll
dec
stos
idivb
testl
inc
mov
pusha
stc
mov
pop
and
clc
lods
cmp
adc
mov
inc
orl
sbb
filds
cltd
outsb
mov
add
stos
ljmp
shlb
or
fstpl
lods
sbb
push
mov
jecxz
into
out
push
fidivrl
adc
jno
push
insb
pop
or
mov
shrb
ret
repnz
ficoms
subl
mov
mull
scas
or
gs
sub
pop
push
out
add
jg
sbb
pushf
mov
shlb
out
jno
push
sbb
inc
in
loop
cld
shll
leave
and
stc
outsb
inc
fmull
fs
std
mov
pop
dec
popa
and
imul
pop
lcall
insl
ficoml
repz
inc
dec
mov
shr
xlat
nop
add
push
jmp
idivl
lods
xchg
mov
les
lea
outsb
mov
pop
dec
pop
add
aas
sbb
jno
sub
add
aaa
xor
sbb
jge
and
push
add
imulb
cmp
jnp
lock
jns
sbb
mov
push
jno
lods
jo
ret
ja
jb
xor
out
inc
daa
dec
and
lret
repnz
xor
cwtl
js
int3
or
mov
push
xor
int
pop
pop
loope
cmp
or
inc
rcll
dec
mov
push
aad
jmp
std
rorl
pop
ret
lea
insl
repz
xlat
movsb
jge
jmp
push
and
stos
lds
mov
and
idivb
adc
mov
stc
pop
mov
pop
es
push
int3
dec
push
inc
sar
jle
xor
fdivrp
js
filds
stos
dec
adcb
xor
xor
imul
sarl
lock
dec
mov
incl
cmpsl
xor
push
push
out
jge
aas
and
xor
push
cmp
sub
insl
sub
aad
outsl
rolb
xchg
test
jmp
push
xor
stc
inc
pop
test
fimull
sub
jl
jnp
jg
lahf
xchg
jmp
in
cmpsl
call
ret
xor
in
xchg
out
ss
inc
fsub
in
pop
addb
cmpl
mov
cld
test
shll
mov
das
loop
arpl
or
popa
test
adc
jmp
jo
out
pop
or
jmp
jle
xchg
sbb
in
lahf
cmp
rcrl
xor
shrl
imul
stos
jnp
out
mov
out
cmpsb
iret
and
xlat
inc
dec
xchg
shrl
inc
loope
imul
fcoml
mov
or
or
test
dec
push
mov
xor
notl
xor
mov
pop
mov
pop
clc
imull
mov
aad
sub
mov
cmc
cmp
push
arpl
sub
fiaddl
jge
out
outsb
cmpl
push
rorb
dec
sarl
lret
lahf
or
or
push
stc
test
imul
fidivrl
fldenv
daa
loope
sbbb
jl
inc
add
or
or
cmpl
sbb
xchg
mov
push
fisttpll
or
and
xor
or
test
push
jbe
mov
fnstcw
and
and
mov
inc
outsb
imul
cmc
xlat
mov
mov
xor
js
dec
jo
into
push
jecxz
inc
inc
cmp
fnop
negb
jmp
sub
or
dec
stos
daa
mov
inc
mov
cltd
jge
add
sub
push
rcrb
lods
ror
adc
or
int
sti
sbb
enter
sti
inc
ficomps
and
jno
jle
mov
xor
enter
add
pop
inc
push
push
add
pop
pop
call
hlt
mov
adc
pop
jbe
out
adc
mov
sub
dec
sbb
out
sbb
sbb
adc
loop
adc
xor
pop
call
aad
add
xchg
fstpl
cmc
js
cmp
pop
out
notl
fcoml
cmp
inc
or
and
stos
bound
inc
ljmp
jg
jo
outsl
push
jno
in
stc
and
cmc
pop
dec
movsb
or
ljmp
mov
mov
outsl
test
icebp
sub
sti
mov
and
or
fsubrp
mov
lods
sub
mov
popa
pop
je
jnp
dec
jg
xlat
test
or
mov
int3
out
fisubrs
jnp
jecxz
add
adc
repnz
fidivl
nop
cmp
mov
stc
cmp
mov
mov
cs
inc
xchg
cli
mov
jecxz
sbb
jl
inc
out
and
mov
nop
add
das
sbbb
cmc
lds
cld
mov
insb
das
mov
jbe
lock
aaa
pushl
inc
out
xchg
jno
and
in
arpl
loop
sti
sub
shr
sahf
push
cmpsb
lea
dec
xchg
jg
test
daa
lahf
pop
jp
mov
arpl
add
mov
push
sti
jmp
xchg
inc
loope
data16
js
cmp
out
ja
das
fcomi
ret
pop
mov
out
in
push
hlt
jle
call
or
ret
sub
mov
push
jle
xor
loope
ret
add
repnz
push
cmc
es
fisubrl
testl
push
std
xor
dec
insl
test
addr16
mov
rcrb
aas
aam
sti
or
scas
movsb
movsb
adc
jl
dec
jb
jg
sbb
push
xor
mov
xor
rcr
repnz
imul
mov
push
bound
loop
sbb
pop
dec
lret
int3
ss
xor
pop
mov
rorb
sub
mov
cltd
dec
gs
lret
push
add
and
cmp
daa
shlb
push
scas
ds
dec
sbb
repnz
icebp
out
bound
fistpl
fcompl
xlat
or
pop
push
cmc
adc
fprem
int3
test
mov
repz
stos
das
repnz
pop
ror
clc
add
es
mov
movsb
dec
mov
mov
leave
jge
and
or
pop
dec
lret
or
test
adc
xchg
add
in
or
adc
fmull
cmc
pop
push
jno
das
dec
jno
jo
jmp
ret
ret
scas
mov
pop
mov
rorb
cmp
sub
fisttps
lods
inc
enter
fstpl
js
lahf
out
mov
pop
outsl
pop
sbbl
aas
pop
cmpl
add
jno
mov
sub
sbb
fcoml
mov
xchg
lds
cltd
aam
mov
add
push
xchg
or
loopne
in
cltd
lcall
cmc
or
ss
xchg
mov
xor
xor
add
xor
ds
inc
push
movsl
clc
push
jle
xchg
stos
mov
sbb
add
inc
pop
movq
mov
cmp
fldl
dec
in
repz
outsl
imul
mov
loopne
pop
loop
mov
out
mov
in
les
data16
aas
mov
fbld
sbb
cmp
push
dec
push
mov
mov
mov
cmpl
pop
leave
xchg
lret
or
data16
and
data16
adc
mov
daa
pop
add
aad
scas
mov
test
in
inc
test
sahf
lock
je
adc
push
leave
push
mov
cmp
sbb
mov
test
cmpb
cmpsl
push
test
push
cmp
fildll
and
mov
sbb
xlat
lock
pop
jge
enter
cmpsl
outsb
pop
and
shl
rcl
push
addr16
fdivrl
mov
popf
push
or
pop
adc
mov
movsb
xor
mov
dec
lahf
stc
cmp
lret
cwtl
insl
push
adc
xchg
mov
mov
mov
jne
pop
fwait
dec
rclb
cwtl
jnp
xchg
daa
or
push
test
mov
jle
data16
into
jnp
insl
lods
ret
test
ds
mov
ret
fisubrl
jb
js
and
testb
push
xor
sbb
lea
mov
mov
xchg
pop
or
fidivrs
mov
dec
stos
outsl
mov
mov
cmpsb
lret
cmpsl
jnp
shrl
add
les
add
es
mov
push
and
out
and
out
mov
cwtl
jge,pn
jge
data16
xacquire
adc
pop
cmp
loopne
rorb
cld
cmc
stos
push
mov
gs
and
out
add
push
dec
cli
xchg
repnz
jns
sahf
xor
fnstenv
cmpsb
mov
dec
subl
lret
lock
shrb
sbb
nop
fs
pop
xor
mov
xor
jmp
mov
insl
clc
test
jge
stos
add
insl
pop
jbe
or
lds
data16
xchg
fadds
push
out
dec
xchg
test
das
xor
mov
cmpsl
popf
mov
adc
push
cmp
xor
jmp
sub
test
fstps
in
inc
cld
icebp
jg
sub
testl
iret
das
push
popa
lock
adc
cld
mov
mov
fdivs
stos
movsb
mov
or
lret
stos
dec
stc
sub
rolb
pop
sar
cmc
dec
daa
xor
xchg
div
lcall
dec
cmpsl
xchg
inc
xchg
and
push
pusha
jp
popf
fcmovnb
xchg
fisubs
sub
and
sbb
gs
dec
or
es
arpl
test
jl
sbb
inc
jnp
xchg
pusha
xor
sbb
idivb
popf
int3
rorb
loope
pop
adc
or
adc
inc
fisubs
jecxz
sbb
push
aaa
and
int
cmpb
rorl
inc
aad
cmp
push
sbb
jbe
mov
repz
loope
cmp
push
xchg
aad
mov
bound
inc
mov
push
sbb
xor
xlat
and
loopne
jne
stc
cmp
mov
ret
cmp
lods
sbb
shrb
mov
or
test
test
or
out
jbe
je
ss
xchg
xchg
jns
clc
mov
pop
cmp
fistl
adc
xor
ljmp
mov
das
cmp
adc
std
xchg
adc
add
shrd
xchg
xor
fwait
hlt
scas
ds
cmpsl
push
icebp
arpl
dec
addb
cmpsb
rcll
loopne
fadds
inc
add
cmp
lret
bound
push
scas
push
loop
sbb
xchg
cmp
dec
add
ljmp
mov
jmp
mov
ret
repz
movsb
inc
sbb
inc
repz
push
mov
mov
popa
js
loopne
sti
sub
cmp
out
fwait
mov
push
cvttps2pi
stos
mov
jb
popa
popf
cmpsb
mov
mov
mov
sub
mov
iret
mov
pusha
jne
xor
outsl
adc
fldl
nop
push
sbb
int
fnstenv
jb
pop
push
mov
and
ds
clc
aas
lahf
push
fcom
and
out
repnz
and
jbe
or
out
out
mov
icebp
out
das
test
nop
test
ds
push
adc
roll
jecxz
add
sbb
push
bound
fwait
mov
inc
xchg
xor
mov
sub
outsw
and
loop
rcrl
pop
cld
hlt
mov
in
or
in
pop
add
xchg
cmc
fsubp
pop
dec
movsb
cltd
sbb
xchg
push
mov
sbbl
lock
sbb
mov
les
cmp
cmp
dec
push
shlb
insl
das
pop
test
scas
imul
scas
cmp
and
mov
push
testb
ds
push
pushl
das
outsb
xor
mov
pop
mov
pop
or
fstl
popf
out
in
jnp
in
push
je
cld
out
jmp
pop
fildll
shrl
inc
outsb
test
xchg
inc
in
pop
lods
adc
aaa
pop
data16
fwait
adc
mov
lock
sbb
imul
and
jbe
outsb
sub
sub
std
jmp
mov
xorb
mov
inc
mov
push
testl
aad
testb
mov
fmull
insb
cs
cmp
subl
inc
inc
lret
pop
lret
inc
scas
in
xchg
xchg
mov
mov
je
and
int3
jno
popf
or
or
outsl
test
iret
and
fucomip
cmp
clc
mov
sub
jmp
or
insl
mov
aad
nop
fnsave
xchg
sub
cmp
in
fcmovnb
pop
in
mov
mov
pop
push
data16
decl
in
jo
sbb
sub
or
and
incb
imul
das
xor
cmpsb
popf
iret
in
dec
xor
xchg
in
cmc
mov
sub
mov
rclb
adc
and
jle
enter
sub
ffreep
cltd
rcl
jae
nop
push
cmp
mov
call
rcrl
sarb
addb
fidivl
imul
sar
popa
adc
stos
inc
leave
cmpsb
add
scas
in
sub
or
or
cmpb
repz
cmp
and
loopne
inc
js
out
push
loopne
dec
das
push
xchg
pop
arpl
insl
xchg
out
or
in
dec
pop
mov
fistl
mov
cltd
xchg
adc
sbb
hlt
test
sub
xchg
out
push
jge
int
leave
push
push
outsl
sub
cmpsl
popf
xchg
or
mov
push
mov
pop
sub
cmp
cmp
gs
out
mov
fwait
movsl
mov
fdivrl
rcrb
test
std
push
jg
mov
in
ljmp
push
leave
inc
jmp
or
stos
jbe
pop
push
cltd
dec
ja
push
pop
or
ficoms
icebp
pop
das
stos
pusha
or
sbb
js
call
lods
mov
mov
ret
add
ss
cmp
sar
mov
jns
inc
jne
sub
dec
lahf
push
icebp
outsl
xchg
pop
std
jnp
mov
jbe
sbb
mov
orb
js
cmp
mov
sbb
sbb
sbb
aam
repz
jmp
adc
enter
or
inc
pop
pop
dec
out
test
adc
das
leave
inc
ja
cmp
sti
pop
pop
clc
popf
hlt
jg
in
movsb
jle
pop
sbb
jns
pop
pop
dec
outsl
loop
mov
enter
push
pop
inc
addr16
add
and
jmp
add
pop
ret
mov
mov
jle
jmp
cmp
aas
mov
sbb
repz
xchg
jns
test
iret
mov
xchg
test
xchg
call
dec
fsubs
int3
push
out
lcall
or
sbb
stc
loope
jo
popf
adc
inc
in
push
scas
cld
mov
outsb
push
rcrl
add
add
gs
push
faddl
push
add
dec
out
xor
pop
mov
adc
xor
and
aas
jae
lea
out
shl
jg
pop
imul
sbb
outsb
jecxz
and
dec
popf
insl
ljmp
pop
in
sub
inc
pop
ret
flds
xor
fbstp
int3
push
sub
push
jg
xor
pop
mov
test
movsl
xor
and
lret
dec
jge
lds
pusha
daa
xor
cmp
inc
subb
cmp
popa
mov
mov
mov
push
sub
xor
movsb
and
add
xchg
out
lret
cmp
out
jl
mov
pop
aam
std
xchg
loope
das
enter
ja
xchg
cld
dec
pop
pop
or
std
sbb
les
mov
insb
or
sti
mov
jge
out
arpl
int3
lcall
push
enter
jbe
pop
outsl
fdivs
jp
leave
push
jl
add
xchg
lss
push
dec
push
into
mov
inc
or
mov
fs
push
arpl
in
jmp
imul
fnstenv
pop
mov
pop
jg
adc
mov
repnz
xchg
sti
mov
imul
test
negl
adc
out
jbe
mov
mov
mov
adc
cmp
sbb
pushf
movsl
and
push
sbb
sub
ret
out
imul
cmp
enter
fwait
js
xlat
pop
dec
ret
jge
movsb
fstps
ja
cmp
insb
popf
sub
lock
in
out
dec
mov
sub
jnp
lea
mov
adc
inc
scas
or
jb
ljmp
sbb
insl
outsl
and
mov
jmp
push
out
cmpsl
push
push
pop
imul
xchg
dec
push
jbe
rcrl
mov
out
jl
and
pop
fmuls
jle
std
cltd
xor
loopne
sub
out
dec
frstor
sbb
xchg
jecxz
sbb
outsl
jg
push
mov
mov
and
out
out
dec
sub
adc
orl
lret
sbb
aad
stos
inc
je
stc
int3
cwtl
in
and
into
mov
dec
fldlg2
in
cmpsl
xor
cltd
stc
add
shr
icebp
int3
movsb
cmc
xor
adc
cltd
push
jle
cmp
xchg
push
push
cli
test
xchg
cltd
sub
push
popf
icebp
adc
adc
xchg
push
and
es
in
fwait
jp
daa
fsubl
add
add
mov
mov
cld
mov
test
sub
lock
push
popf
mov
ds
jp
ljmp
cmp
aas
inc
divb
push
inc
push
pop
loope
jbe
xchg
sub
mov
sti
test
adc
cld
push
mov
fiaddl
or
aam
push
fdivs
fsub
stc
popa
dec
pop
arpl
cmpsb
push
xor
and
repz
cmc
stos
hlt
push
xchg
push
jns
dec
and
xor
sub
cmp
clc
lcall
gs
shll
insb
add
rcll
push
int
inc
xor
cmc
test
jg
adc
cmp
dec
or
pop
push
aas
xor
and
sub
fcoml
cmpxchg
sub
mov
fisubs
cmc
lahf
jae
jnp
mov
cltd
inc
or
add
ss
out
out
xor
scas
sub
lret
push
lret
call
cmp
pop
in
or
cmp
mov
jecxz
out
mov
inc
mov
arpl
dec
mov
cltd
pop
cltd
and
jb
inc
cs
sahf
add
mov
out
mov
mov
fs
shlb
jns
push
in
in
repz
mov
pop
cmp
mov
pop
or
jne
jae
push
gs
js
roll
push
push
push
mov
or
and
lds
xor
push
push
xchg
dec
gs
mov
mov
cmp
mov
in
test
cmpsb
and
and
fneni(8087
mov
and
repz
push
enter
jmp
inc
mov
fsubl
xchg
rcrb
loopne
ds
mov
pop
adc
xlat
dec
dec
cs
in
lock
repz
inc
push
test
stos
idivl
loopne
fildl
das
xor
jecxz
js
arpl
es
or
add
pop
pop
stos
jbe
fidivs
ds
andl
adc
cmpsl
push
sbb
and
cmpsb
dec
adc
mov
fstpl
inc
int3
js
inc
repz
mov
dec
jl
cmp
mov
add
ja
insl
rorb
add
ljmp
mov
push
lret
arpl
cli
addr16
push
xor
lock
cmc
lcall
mov
xchg
imul
cmpb
dec
xchg
cld
scas
mov
jg
pop
cwtl
jnp
rcl
pusha
or
lds
sbb
mov
inc
fucomi
push
in
xor
xorb
xor
gs
scas
test
push
jo
dec
test
imul
js
jno
out
jmp
add
or
mov
cli
aas
ficompl
ror
clc
dec
fwait
sub
dec
movsl
xchg
pop
push
addr16
mov
cld
sbb
cmp
mov
sub
xor
push
push
pop
test
lds
xor
sub
pop
jge
std
inc
sbb
xor
push
leave
jbe
cmp
mov
fldenv
sub
aaa
orb
or
xchg
and
adc
mov
pop
bound
cmp
ljmp
repnz
pop
mov
sub
int
mov
ljmp
mov
stos
out
aad
mov
lret
std
adc
dec
xor
dec
test
pusha
xor
pop
mov
andb
mov
dec
hlt
bound
dec
add
add
mov
sbb
scas
add
adcl
notl
popf
arpl
push
or
cmp
sarb
and
push
je
fldcw
sbb
sti
test
icebp
push
fsts
or
bound
shlb
sbb
subb
and
sub
pop
cmp
pop
addb
mov
sbb
sub
xchg
inc
add
adcl
or
or
and
shl
movsl
jnp
add
in
jnp
jge
inc
out
es
push
test
and
jnp
mov
sub
push
and
int3
xchg
and
ret
lahf
fwait
push
adc
xor
sti
jbe
out
ja
xlat
out
mov
pop
mov
lea
jbe
inc
sub
push
jo
xlat
mov
lea
push
jnp
test
stos
jl
push
inc
scas
mov
sub
out
outsb
in
out
pop
xchg
mov
or
fwait
lahf
into
scas
jns
jno
ret
stos
nop
pusha
faddp
mov
jbe
fisttpll
jns
inc
adc
pop
clc
adc
cmpsb
int3
in
pop
cli
je
xchg
mov
call
ficoml
pop
daa
push
add
mov
repnz
pop
sub
or
aam
inc
sub
lds
lods
data16
mov
inc
daa
mov
xor
jbe
ds
push
adcb
aam
add
iret
xchg
out
mov
cmc
mov
aaa
test
pop
ss
inc
in
push
jbe
loope
jmp
adc
popa
in
das
out
les
or
loope
sbb
lods
cmpsl
push
pop
shrl
call
sbb
loop
cli
clc
jmp
in
scas
inc
rcll
xor
test
ret
cli
sbb
lea
and
sub
pop
aam
enter
rcrl
mov
inc
sub
and
inc
ljmp
xchg
xchg
push
mov
sbb
loopne
bound
push
cmpsb
stos
dec
hlt
fwait
inc
mov
clc
mov
lcall
lahf
rcl
pop
int3
popf
add
icebp
dec
leave
mov
push
sub
leave
sbb
sbb
inc
mov
mov
jge
push
xchg
divl
aas
pop
es
mov
test
xor
sub
jne
sahf
clc
mov
jecxz
jne
pop
outsl
and
inc
and
les
mov
stos
xchg
lock
rol
arpl
or
xchg
or
pop
out
stc
mov
push
inc
add
sub
dec
dec
mov
and
int
shll
test
mov
sub
inc
mov
dec
or
mov
cwtl
xor
std
jne
add
dec
cwtl
stc
in
mov
aaa
mov
mov
cltd
out
fucom
cwtl
fcomps
das
orl
pop
bswap
or
repnz
repz
sub
pop
mov
insl
clc
out
xor
in
inc
imul
jp
jo
push
mov
or
jg
inc
cmp
aad
pushf
out
or
jb
jg
push
sub
dec
cmp
testl
mov
pop
pusha
push
out
int3
loopne
popa
lods
inc
shr
pop
mov
sbb
push
enter
sarb
push
inc
add
imul
mov
push
testl
test
cmp
in
cmp
dec
pop
cld
mov
cmp
pop
test
or
and
shll
andl
mov
adc
mov
mov
lock
add
push
fwait
push
cmpb
dec
ja
push
xor
or
mov
movl
dec
repz
mov
lret
dec
adc
inc
xchg
mov
push
xlat
sub
xor
lret
nop
add
dec
gs
sbb
pushf
xchg
je
xchg
push
bound
push
jge
cmp
and
int3
inc
in
jmp
jge
out
and
lds
add
or
loop
adc
daa
hlt
pusha
les
lcall
imul
and
cmp
xchg
mov
or
out
inc
mov
cld
or
cli
push
arpl
or
addr16
adcl
lock
push
xchg
in
dec
sbb
ss
cmpsl
jae
ret
cmp
stos
ficomps
aaa
dec
popf
das
xchg
dec
and
les
iret
dec
sbb
les
mov
adc
jo
jmp
and
push
rolb
push
cwtl
adc
mov
rorb
sub
dec
cmp
aaa
cld
cli
stc
fwait
mov
into
or
push
pusha
push
inc
fwait
cwtl
xchg
leave
jle
sbb
mull
push
xor
and
xor
fsts
push
sub
jae
xchg
jno
mov
or
leave
ss
out
add
addr16
mov
or
fcoml
in
mov
dec
pushf
fnsave
into
cli
xchg
insb
mov
mov
into
jno
adc
push
das
orl
divb
push
pop
inc
call
or
xchg
andb
xchg
mov
dec
push
mov
or
lods
jne
pop
filds
daa
cwtl
pusha
xadd
xor
loopne
in
adc
outsb
mov
in
popf
xchg
shl
testl
mov
cwtl
mov
sti
imulb
cmp
ds
push
mov
mov
pop
push
scas
int3
pusha
add
push
cmc
mov
in
in
push
cmp
mov
rcr
jmp
pop
imul
mov
or
out
ds
push
cwtl
mov
jo
subl
insb
ljmp
dec
dec
out
ds
pop
ret
mov
dec
clc
push
imul
jae
jmp
mov
outsl
rolb
sub
sub
aad
les
cwtl
mov
jg
in
mov
fnstsw
in
mov
inc
mov
fbld
mov
pushf
xlat
test
inc
inc
jbe
inc
lods
sbb
jno
mov
sbb
jge
cwtl
lret
sub
shl
sbb
jb
fcmovb
add
and
imul
cwtl
in
ljmp
insb
jl
fcoml
dec
data16
mov
scas
xor
mov
and
aam
shll
aaa
inc
adc
inc
in
imul
inc
mov
outsl
outsl
adc
ds
fildll
cltd
ret
mov
gs
mov
imul
xchg
icebp
lods
lods
xorl
pop
das
bnd
pushf
divl
sub
jp
inc
or
and
mov
vandpd
sbb
push
stos
jp
lea
test
incl
fucomp
fidivrl
loopne
decb
ljmp
mov
or
fcomps
and
sbb
pop
mov
cmp
jl
push
inc
lret
test
sbb
inc
mov
les
loop
sub
jle
jle
filds
dec
jecxz
inc
mov
lcall
loope
or
pop
xchg
xor
mov
xor
enter
leave
sbb
mov
pop
popa
jle
pop
pop
lahf
loopne
sbb
and
idivl
dec
shrb
mov
mov
jns
push
jne
jl,pn
push
int
adc
mov
shl
sbbb
fstps
negl
add
sarb
xchg
jns
or
loopne
push
xor
xorb
pop
stc
sbb
sbb
and
stos
scas
cmp
pushf
xor
and
add
lock
mov
ds
inc
and
mov
jb
daa
dec
popf
jecxz
jbe
cwtl
ljmp
cmp
jo
enter
jb
imul
and
sbb
and
in
mov
movl
inc
negl
mov
pop
cld
cmp
dec
fisttps
or
cld
sbb
test
movsb
mov
sub
pop
mov
rcll
xchg
fwait
cmpsb
cli
cmc
adc
xor
jg
jno
xor
icebp
stos
addb
clc
repz
mov
inc
ret
movsb
push
icebp
loopne
sub
and
add
inc
mov
mov
pop
mov
xor
pop
inc
jecxz
fs
jecxz
in
mov
lods
ss
pop
lahf
bts
enter
popl
not
mov
rcll
out
mulb
pop
icebp
jae
stos
mov
fcoml
or
inc
movsl
pop
push
mov
cmc
in
and
sbb
out
repnz
fiaddl
daa
mov
push
pop
or
pop
or
fsubr
notl
sbb
cltd
inc
js
sub
ret
dec
sub
cli
jl
loope
sahf
cmc
push
in
test
mov
mov
ret
inc
in
lret
add
lds
xor
sbb
arpl
push
into
icebp
or
mov
fiaddl
lods
fcomps
mov
dec
push
hlt
mov
mov
push
mov
test
inc
out
mov
add
mov
ja
mov
inc
mov
and
or
pop
insl
rcl
imul
insl
repnz
das
pop
out
xchg
jns
movsl
out
lods
xchg
stos
andb
nop
pusha
sub
pushf
sub
gs
cmp
cmpsb
out
rcl
cltd
jbe
jbe
shrl
ss
dec
cmp
repnz
rcr
push
shlb
rcrb
and
fisubrs
push
in
aas
mov
xor
cmp
outsl
cltd
in
and
mov
jns
aas
xchg
pop
fs
mov
pop
push
jne
or
cwtl
imul
in
fistps
sbbl
cmp
push
data16
push
movsl
inc
push
dec
in
cld
push
dec
into
pop
sub
jg
xchg
add
inc
push
sbb
mov
outsb
adc
jae
aas
aaa
test
clc
stc
inc
cli
clc
dec
jae
fisubrs
jmp
dec
mov
ljmp
cmp
mov
mov
mul
sub
loop
ret
sti
dec
aam
cld
loop
jge
push
jge
cmp
ss
gs
xor
push
sbb
cmovnp
xor
xorb
push
mov
inc
mov
jg
pop
cwtl
mov
fisubrl
jecxz
mov
cmpsl
push
adc
out
push
inc
push
rolb
loop
xor
shrl
push
mov
mov
pop
push
rcrb
movsl
cmp
fstpl
jnp
repnz
enter
push
sti
ljmp
mov
repz
push
pushf
push
out
adc
pop
and
rcrl
xchg
sub
test
pop
and
xchg
add
dec
testb
ja
xor
xchg
orb
sbb
pop
lock
das
xchg
gs
jb
in
dec
jp
rcrl
and
std
push
add
daa
cwtl
jne
pop
stc
js
xlat
or
adc
sarb
xor
movsl
lods
loope
lret
mov
stos
test
fs
mov
out
std
and
sub
aam
mov
fsubp
xor
testb
fstpl
sbb
mov
sbb
pop
out
jns
fdivrp
xor
movsl
lds
mov
inc
pop
mov
lds
mov
xor
inc
out
jecxz
inc
cmpsb
roll
mov
into
sub
outsl
fbld
std
fsubl
lret
inc
outsb
xor
repnz
pop
xor
or
xlat
push
jg
rol
stc
aam
std
xchg
inc
cli
xor
insb
aas
push
es
lods
idiv
cmpsb
xchg
pop
jge
les
sti
stc
mov
mov
in
fldpi
dec
and
xchg
xchg
xchg
add
push
pop
push
or
insb
jns
sbb
loop
add
adc
xchg
jns
jbe
aam
inc
xchg
pop
orb
das
in
movsb
pop
arpl
sub
and
call
push
mov
mov
xorb
adc
outsl
mov
dec
hlt
ds
frstor
mov
arpl
movsl
or
enter
hlt
push
rcrl
mov
inc
jbe
mov
popf
cmp
cmp
add
mov
ds
movsb
stc
sbb
push
jmp
and
rol
rcll
and
inc
ret
fadd
insl
aad
and
call
mov
ret
dec
xchg
leave
xor
push
xadd
add
pusha
xor
arpl
lock
test
jnp
pop
or
add
rorb
lds
cmp
es
stc
scas
jg
sahf
add
enter
and
mov
adc
hlt
pop
mov
jns
lea
sti
adc
pop
data16
repz
imul
rep
xor
cmp
push
mov
stos
push
mov
arpl
addr16
loope
clc
fdivs
lods
or
cli
jge
gs
mov
jae
rolb
dec
das
fisubs
movsb
mov
dec
jg
fsubl
movsb
int
xchg
mov
pop
pop
and
add
sbb
jecxz
repnz
add
jnp
mov
ffree
lahf
out
imul
jge
imul
pop
jmp
nop
cltd
push
inc
rorb
xchg
imul
mov
mov
out
pop
addr16
loop
popa
lahf
fcompl
jle
xchg
xor
rcll
or
xorb
jbe
call
loopne
scas
xchg
cmpsb
jno
jnp
ds
popa
mov
inc
fldt
xchg
add
xor
add
jle
inc
jle
insb
sbb
mov
jb
xor
shr
and
add
and
sub
pop
xor
andl
mov
mov
mov
push
push
lods
push
test
incl
pop
mov
fcomip
cltd
xchg
test
mov
inc
xchg
mov
push
sbb
andb
pop
shlb
sbb
daa
sub
ds
or
cmp
orl
popa
fisubl
std
cltd
cmp
jecxz
ret
lods
aas
repnz
xor
dec
cltd
jns
mov
push
cmp
insb
into
or
fadd
and
pushf
pusha
mov
push
jbe
js
lahf
or
orb
cwtl
sub
out
aad
mov
xor
popa
cmp
xchg
jge
sub
or
dec
lea
lods
std
add
scas
sub
les
ja
xchg
pop
pop
fs
and
push
test
clc
daa
mov
push
test
pop
push
inc
adcb
imul
inc
pop
cmc
push
lret
inc
push
or
fidivrl
int
daa
mov
pop
add
inc
adc
mov
enter
jp
mov
hlt
fmuls
lods
add
pop
push
stc
sub
aad
in
pop
mov
in
int
push
xchg
test
cmp
sub
aam
jbe
xchg
jbe
pop
adc
sbb
xor
addr16
push
or
ja
cltd
pop
jl
xor
pop
adc
mov
jb
cmp
sub
xchg
mov
test
jmp
push
push
insl
test
dec
insb
cmp
xchg
lret
sbb
test
push
xor
sbb
mov
leave
popa
pop
std
inc
insb
in
aaa
lods
pop
mov
pop
out
mov
into
xor
jbe
and
cmp
cmp
scas
mov
aad
popf
pop
add
aaa
in
pop
jb
dec
cltd
or
in
pop
mov
bound
fwait
add
push
inc
insl
lcall
and
cs
jecxz
ret
mov
pop
xchg
and
fmull
sub
dec
sbb
cmp
or
push
jne
sbb
movsb
xchg
jbe
popf
mov
es
stc
movsl
adc
push
or
xchg
movsb
stc
xor
lret
mov
jle
add
movsl
loop
pop
sbb
mov
shll
or
out
in
hlt
add
dec
add
sbb
pushf
or
mov
mov
fimull
push
enter
or
shlb
push
not
into
in
adc
imul
outsl
clc
cmp
xlat
repnz
in
or
push
clc
popf
pop
pop
push
mov
inc
out
sar
pop
pop
sbb
std
mov
loope
sbb
xchg
xlat
loope
xchg
loope
jecxz
mov
dec
scas
push
inc
dec
or
and
imul
fdivrs
faddp
adc
fwait
nop
ret
sub
repnz
jg
dec
inc
jge
shll
push
add
loope
rcrl
mov
cmpsb
mov
rcr
std
xchg
mov
mov
in
aad
sar
in
imul
je
cmp
xor
add
mov
jp
mov
js
lcall
push
loopne
jp
push
stos
lock
shll
sbb
push
xor
loop
addr16
cmp
popl
rcll
js
cmp
xor
clc
cmp
ja
fucomi
jp
addr16
repz
stos
mov
icebp
add
mov
leave
es
cmpl
pop
and
ja
sub
xchg
int3
enter
imul
inc
mov
scas
std
inc
jmp
orl
add
aad
aas
xor
push
inc
jno
xchg
pop
lret
lods
in
frstpm(287
xor
mov
push
sar
lcall
mov
das
std
pop
aaa
jge
int3
je
mov
fs
dec
push
mov
and
call
dec
add
popa
jne
or
cmp
fcomi
ficomps
call
cmc
movsl
xlat
adc
pusha
nop
outsl
fdivp
lea
lret
pop
xor
cmp
repnz
jp
mov
push
sbb
cmpl
outsl
insb
mov
adcl
xor
aad
rep
aas
shrl
ds
hlt
mov
shrl
dec
jg
inc
cmp
pushf
lods
adc
inc
mov
hlt
pop
add
inc
mov
mov
jno
adc
addb
pop
push
cld
popf
pop
adc
ljmp
jnp
shrb
inc
rorb
xchg
arpl
enter
xchg
lcall
xchg
dec
dec
addr16
aam
adc
push
arpl
pop
gs
cwtl
xchg
mov
inc
or
xchg
call
pop
test
cmp
dec
jnp
ret
add
insl
xchg
pop
xor
testb
and
shrd
push
pslld
push
rcll
in
clc
dec
mov
pop
scas
push
inc
lret
mov
push
xchg
xchg
ds
rorb
rcrb
jbe
lret
test
xor
mov
insl
repnz
xchg
lret
xor
arpl
scas
bound
mull
pushf
sub
lods
cltd
scas
mov
mov
adc
add
push
mov
pop
push
int
push
mov
sbb
enter
je
movsl
xor
add
cmp
jns
mov
enter
lret
notl
dec
repz
movsl
insl
push
pop
fisttpll
cmc
fcoml
das
mov
push
dec
dec
push
ret
or
ret
fwait
mov
negl
or
sarb
dec
lea
mov
mov
and
in
call
scas
xchg
push
in
pop
mov
xchg
jnp
in
cltd
stos
push
out
push
push
jb
cwtl
mov
enter
jo
xor
popf
pop
scas
xchg
jo
dec
xlat
xorl
mov
stc
sub
loop
cmc
shr
sub
cmpsl
mov
inc
pop
movsl
jg
xor
in
je
rcr
rcl
out
add
rcl
cmp
mov
aam
jl
vpbroadcastw
jb
adc
add
mov
add
jl
test
fimull
xchg
jecxz
inc
jno
in
mov
imul
cwtl
rcll
clc
mov
gs
cwtl
test
mov
push
xchg
dec
push
jg
in
push
aam
jg
cvtdq2ps
inc
cmp
and
and
jae
xchg
jmp
icebp
cmc
push
push
lods
push
loop
lds
cwtl
cmp
jb
jmp
outsl
gs
xchg
shrb
push
sti
mov
mov
cs
movsb
mov
mov
pop
aam
sahf
flds
xchg
add
sti
gs
repnz
sbbb
and
mov
int
mov
fs
leave
jne
xchg
pop
xchg
ds
fs
push
aad
cmp
std
fs
adc
and
push
pop
jnp
test
mov
out
cwtl
adc
insl
cmp
pop
xor
bound
mov
pop
mov
cmp
insl
rcr
inc
jb
jbe
popa
inc
in
nop
movl
mov
andl
decb
dec
sub
sarl
lods
jb
int
xchg
fiadds
push
ljmp
push
sbb
and
aaa
mov
mov
jns
pop
bound
adc
push
shll
push
out
sbb
xchg
cmp
jle
mov
jae
adc
or
cmp
jb
rcrb
popa
xchg
inc
inc
fwait
pop
loope
adc
fldcw
lods
shrl
cmp
adc
or
push
dec
mov
xchg
jno
or
mov
or
ret
std
dec
rcll
sar
adc
pop
or
popf
dec
mov
sbb
addb
int3
add
sbb
mov
pop
aaa
call
enter
jp
rcrb
cmc
mov
jle
stos
int
sbbb
xrelease
mov
adc
sar
jo
rclb
lods
rorb
xchg
movsb
mov
call
ja
int3
mov
fdivr
pop
lsl
scas
xlat
mov
data16
stos
outsl
je
mov
pop
rolb
je
mov
xchg
dec
jae
dec
sbb
mov
icebp
mov
add
ffreep
movsb
test
cld
jnp
imul
test
pushf
int3
pop
inc
out
jbe
iret
leave
inc
adc
test
sub
add
add
test
jge
push
or
fimull
sub
cmp
std
es
in
sub
dec
fwait
imul
arpl
push
or
adc
xor
ss
das
or
sti
mov
push
in
pop
aas
shrl
sub
cltd
push
ret
xchg
jecxz
addl
pop
mov
ret
mov
sbb
inc
int3
push
mov
sbb
fisubs
nop
mov
fs
test
mov
pop
mov
jl
dec
xor
jbe
mov
insb
add
movsb
lahf
dec
push
xor
or
jo
in
and
push
jl
cmp
aaa
mov
mov
pop
aam
inc
mov
je
dec
sbb
insb
sbb
ja
shl
inc
mov
clc
fldenv
daa
stos
jns
in
adc
and
addr16
push
jecxz
push
insb
xor
shrb
mov
jge
mov
sbb
daa
lock
int
mov
dec
cmp
aaa
push
nop
dec
les
or
ljmp
test
lahf
jecxz
adc
xor
push
into
and
xchg
mov
in
ret
xor
cld
mov
mov
push
xor
divb
adcl
mov
ja
mov
inc
mov
leave
hlt
cltd
inc
pop
je
or
addr16
mov
push
shll
mov
mov
dec
and
push
jbe
roll
sti
es
into
mov
jg
jl
testl
pop
xchg
clc
ljmp
xchg
das
jno
shr
sub
dec
inc
aaa
cs
or
lcall
int3
xor
and
xchg
push
icebp
push
insb
mov
add
mov
nop
daa
and
out
aad
push
out
das
xchg
or
cmp
outsb
push
mov
mov
mov
mov
imul
test
add
cs
sahf
xchg
shrb
and
add
jo
mov
sub
test
sub
adc
mov
push
jl
andl
ret
ljmp
mov
scas
jmp
cli
dec
gs
pop
xchg
data16
mov
fnsave
cmp
sbb
in
mov
push
inc
push
arpl
mov
inc
in
pop
insb
lods
subl
addr16
mov
push
pop
loope
mov
jge
push
sbb
xchg
aas
inc
push
cli
test
lret
pop
pop
sbb
push
xchg
enter
dec
adc
imul
scas
stc
xchg
stc
mov
in
scas
repz
pop
stc
testb
setge
mov
shl
popf
fisubl
addb
and
xor
jmp
lea
dec
idivb
and
pop
aam
or
rcl
or
or
cmpsb
mov
mov
inc
sub
icebp
mov
inc
adc
dec
fsubs
arpl
test
add
repnz
sub
dec
cld
sarb
jb
mov
cmpsb
mov
inc
xchg
sahf
pop
ret
fcompl
movsb
dec
mov
xchg
xor
loopne
adc
das
mov
stc
mov
or
add
fildll
lahf
jp
or
sbb
push
aad
xchg
xchg
inc
std
addl
xor
add
jle
in
jl
cltd
rorl
inc
loope
or
fs
mov
es
outsb
cmp
stos
push
bnd
mov
out
lds
rcrl
jg
imul
fwait
iret
xor
pop
cli
cmpsl
repz
pusha
fadd
std
xor
das
or
and
pop
push
addr16
fscale
filds
sbb
sub
xchg
imul
aas
xor
xor
repnz
cmpsl
sub
mov
mov
lahf
or
fnstenv
arpl
xchg
daa
fwait
int
mov
pop
or
inc
fisubrl
cld
jg
push
pop
stc
lahf
xor
popa
int
arpl
pop
dec
pop
or
aas
xchg
push
inc
and
pop
jmp
and
pop
mov
fdivrs
xor
dec
add
imul
mov
dec
lret
fsubs
xor
movsb
mov
into
xor
mov
pop
xchg
push
repnz
dec
repnz
scas
shrb
out
push
inc
rolb
mov
aam
and
jge
cmc
lea
idiv
daa
push
outsb
cmp
add
mov
and
push
sub
xchg
fistpll
add
cmp
daa
mov
adc
sbb
jne
cli
inc
pop
inc
lahf
loopne
mov
dec
daa
jecxz
leave
jmp
stos
xor
inc
push
sub
out
inc
loopne
cmp
sbb
fxtract
gs
push
das
mov
push
or
loop
xchg
push
cltd
sub
mov
adc
mov
repnz
repnz
lods
inc
loope
movsl
outsb
lahf
enter
dec
cmp
out
neg
jcxz
fstl
jl
fwait
fs
out
xor
or
outsb
dec
jmp
inc
mov
inc
cmp
imul
mov
rorl
xchg
inc
xchg
xor
cmp
lea
sbb
fwait
cwtl
fs
add
xchg
notb
cli
mov
xchg
addr16
pop
lcallw
repz
push
push
mov
aaa
inc
xorb
sbb
add
push
adcl
call
cli
sub
inc
jl
sub
sub
add
aas
daa
xchg
cltd
mov
dec
xor
leave
cs
cmp
lcall
test
xlat
enter
cs
sbb
jno
cltd
cli
xchg
std
push
jmp
push
cmp
loope
leave
loop
fucomi
add
dec
push
ja
scas
sarb
xlat
mov
jecxz
sub
push
pop
cmc
add
mov
movsl
stos
jns
int
xor
cmp
pushf
xor
cmp
jbe
xor
lods
out
ret
pop
ja
addb
in
push
jg
pop
cmp
xor
rol
lods
adc
xlat
fnstcw
adc
testb
and
lcall
push
lcall
stc
daa
addl
fsubrl
jno
mov
lcall
test
adc
outsb
dec
movsb
mov
sbb
add
sub
or
xchg
cwtl
decl
into
push
cmp
ret
adc
addr16
out
clc
pop
mov
sbb
inc
insl
dec
test
int
push
inc
mov
pop
imul
cmp
mov
jns
adc
pop
mov
mov
sbb
lret
lods
sbb
in
cmpsb
rcr
jb
adc
add
inc
xor
fisttpl
push
xchg
jge
xchg
shlb
add
addr16
jg
fimull
fidivrs
pop
out
sahf
mov
push
xchg
jecxz
mull
sbb
jecxz
pop
sub
mov
pop
movsl
mov
in
cmp
shll
outsl
or
inc
in
xchg
sahf
jp
fwait
push
in
out
test
fwait
aaa
or
push
jg
enter
mov
mov
insb
or
fcomps
aam
sarl
push
sub
adc
fiadds
fadds
int
inc
mov
call
out
and
inc
add
inc
inc
cmp
addr16
mov
outsb
pop
rorb
jl
xchg
sbb
mov
adc
dec
pop
sub
in
jo
xchg
xor
sbb
scas
jecxz
and
xor
jmp
es
shll
out
nop
dec
add
push
sar
cwtl
xchg
dec
icebp
xchg
mov
jmp
popf
add
jae
push
push
xor
adc
hlt
dec
sub
aam
sub
sahf
jne
cmpsl
gs
fiaddl
out
nop
dec
loope
mov
sub
push
inc
jae
mov
test
daa
push
cmp
cmpsl
dec
cmp
leave
cmp
lea
sbb
fnstenv
outsb
sub
scas
ret
pop
movsb
push
xchg
cli
faddl
out
jl
lret
in
lods
call
popa
aad
add
xchg
fwait
bound
jmp
repnz
adc
test
or
sub
popl
gs
inc
cmp
and
jb
mul
popa
sbb
repz
dec
imul
mov
fnstcw
pop
cmp
dec
fistpll
in
mov
mov
sub
das
mov
cmpsb
inc
test
dec
jae
or
jbe
pop
xor
push
loope
xchg
push
addr16
inc
dec
lret
ljmp
outsl
jnp
mov
add
pusha
sbb
mov
pop
sbb
es
ljmp
jle
out
and
je
int
or
dec
or
scas
frstor
add
out
or
mov
ror
cmpsl
dec
mov
scas
out
cmpsb
xor
outsl
sub
pop
mov
dec
es
fisubl
push
ret
mov
fisubl
repz
lcall
call
sub
xor
inc
add
or
aaa
arpl
add
adc
and
imul
jae
jmp
incb
mov
fwait
sub
add
xchg
xchg
mov
orl
push
mov
jp
fstps
or
popl
jo
xor
jnp
std
in
pop
push
sbb
out
leave
or
adc
sub
xor
je
in
fstpl
pop
es
xchg
pop
inc
lret
jmp
movsb
push
movsb
stos
sbb
aad
fldl
xor
popf
fsubrs
js
or
mov
aas
cmovne
push
push
ret
testl
jg
orb
loope
adc
xchg
mov
inc
fmull
jnp
jae
mov
divb
sti
sub
loop
popf
xor
cmpsl
xor
mov
in
fisttpl
fs
pushf
pop
add
rcrb
cmpsb
int3
mov
dec
or
xchg
arpl
pushf
dec
or
push
adc
push
sub
dec
xor
or
in
add
push
cmp
mov
minps
inc
pop
pop
cmpsl
nop
push
push
jg
scas
in
movsb
les
pop
xchg
mov
or
cmpsb
pushf
cli
xchg
pop
mov
inc
aas
repz
stos
or
mov
out
mov
inc
scas
mov
inc
fsubl
pop
add
out
in
cmp
jno
cmp
orl
mov
sbb
rcr
into
addr16
repnz
aas
inc
push
mov
aad
or
mov
inc
ror
and
or
cmpb
icebp
cmp
stos
bound
jno
sub
and
xor
insb
fildll
imul
jne
inc
mov
adc
cmp
in
cs
xchg
jns
fdivrl
pop
inc
pop
data16
inc
fsubrl
das
ret
test
test
test
lods
push
stos
inc
sub
xor
cmp
cmp
xchg
fdivl
pop
pop
int
les
fisttpll
jge
outsl
push
adc
cmp
dec
pop
sbbl
xchg
aam
mov
pop
sub
aaa
xchg
dec
shll
push
sti
imul
dec
pop
and
pushf
mov
xor
sbb
cwtl
jecxz
push
insl
fndisi(8087
ficoms
jnp
dec
enter
sub
pop
mov
test
js
rolb
push
in
pop
jmp
sti
jns
in
mov
insb
sub
cltd
xchg
mov
inc
shrb
mov
aad
fsubs
popa
sbb
cltd
clc
ljmp
pop
mov
inc
push
enter
out
fadds
cmpb
hlt
sbb
sarl
sbb
mov
movsl
xchg
jle
mov
addb
add
dec
test
cmpsb
adc
sbb
lahf
nop
or
cs
push
xlat
xor
leave
insb
sbb
test
inc
mov
and
sub
aaa
xorl
mov
pop
push
xor
test
xchg
ja
pop
inc
cmova
inc
mov
fadd
jbe
fsubl
scas
cs
adcb
in
xchg
jae
inc
xor
jle
stos
ljmp
das
ja
ss
das
inc
loope
mov
jo
jnp
popa
cli
and
ja
or
and
push
xchg
dec
dec
mov
dec
test
enter
inc
repnz
mov
in
daa
fnstcw
stc
fsts
and
mov
mov
lea
xchg
gs
xor
sub
out
mov
dec
stc
or
or
lret
dec
aaa
jne
and
fs
cmpsb
pop
jecxz
cltd
adc
loopne
arpl
sub
and
adc
jmp
pop
pop
push
push
cmp
push
or
and
pop
and
je
push
mov
pop
iret
mov
sbb
cmp
jge
pop
mov
add
das
aam
mov
mov
mov
shl
dec
nop
pop
cmpb
out
add
fstl
stc
fnstsw
pop
add
jle
imull
pop
outsl
int3
aas
aad
sahf
test
iret
mov
adc
shlb
iret
xor
sub
cmp
xchg
mov
mov
or
in
adc
mov
mov
mov
push
imul
pop
ss
imul
movsl
sbb
das
std
adc
push
popf
mov
mov
std
aaa
ds
movsl
adcb
nop
roll
pop
lcall
fisubs
xchg
mov
jmp
cmp
sahf
cmc
mov
lods
ficoms
and
int3
inc
loope
cltd
inc
mov
mov
push
es
jmp
xor
adc
jnp
nop
push
pushf
dec
cmpsb
xchg
bound
push
mov
or
mov
or
inc
ss
imul
ljmp
popf
pmulhuw
inc
xor
in
or
xchg
xchg
pop
mov
mov
imul
sub
xchg
ret
push
mov
mul
xchg
jae
out
fstps
sub
pop
jmp
aaa
repz
ret
out
and
loop
jg
sub
push
dec
shlb
push
sahf
movsl
or
dec
arpl
test
dec
ror
faddl
sbb
mov
cmp
mov
and
rol
ja
and
daa
mov
or
pop
sub
xlat
in
sbb
fnstsw
scas
xchg
jae
sub
dec
mov
xchg
pop
mov
adc
dec
sub
push
pushf
push
lds
out
sbb
aas
sub
adc
sti
pop
sub
sbb
imull
lcall
icebp
fstps
jle
mov
repz
add
aam
mov
inc
stos
fldl
les
jle
inc
repnz
cmp
pop
call
jae
call
clc
xor
fbstp
push
scas
neg
lea
lcall
sub
mov
or
cwtl
dec
inc
dec
jl
pop
push
sbbb
push
xchg
outsb
mov
jae
out
sbb
outsb
pop
in
push
dec
push
stc
ja
aaa
push
out
cmp
mov
push
lret
jecxz
mov
xchg
add
mov
fdivs
adc
out
pcmpeqb
ret
push
sub
sbb
std
inc
fs
xor
xchg
stos
rorb
jno
fstpt
mov
lahf
neg
out
jae
pop
mov
popf
aam
out
push
fmuls
jbe
or
shl
push
adc
and
push
xor
lahf
push
and
icebp
movsl
adc
cmp
dec
pop
int
push
cld
jae
call
lods
shr
mov
pop
les
dec
push
mov
adc
or
popf
xchg
jmp
popf
dec
jbe
ja
cmp
sub
sbb
sbb
inc
xor
sub
hlt
jo
test
cmp
xchg
mov
in
scas
push
jne
mov
add
nop
iret
xchg
mov
pop
enter
pop
daa
ret
inc
xor
sbb
aas
in
std
hlt
nop
mov
in
nop
lds
ljmp
out
sub
ljmp
cmp
pop
imul
xchg
mov
fwait
stc
cmp
mov
pop
xchg
gs
roll
dec
add
decl
sub
stc
xor
mov
mov
adc
imul
gs
cs
aas
add
xchg
fwait
movsl
pop
dec
or
into
test
push
jnp
clc
xor
ret
xor
pop
push
mov
mov
jp
and
ret
out
iret
mov
in
mov
orl
cmpsl
mov
enter
push
das
adc
xor
orl
pushf
repnz
and
mov
enter
das
pop
stos
push
jo
nop
sub
lea
sar
adc
movups
push
jl
ret
sbb
enter
jle
idivl
adc
inc
or
cmp
loope
adc
das
xchg
outsb
leave
je
lret
arpl
sub
imul
lret
addl
mov
pushf
sbbb
and
aaa
in
lret
mov
shl
clc
xor
fdivs
das
jne
mov
testb
push
clc
filds
outsl
test
sub
sbb
pop
stos
nop
pop
push
push
xor
fiaddl
test
lret
aad
jnp
inc
loope
repnz
inc
mov
imul
and
mov
xor
mov
idiv
push
cmp
jmp
out
insb
lret
loopne
adc
mov
pop
in
cmp
add
pop
call
adc
mov
stos
jp
pop
push
jp
cvtdq2ps
clc
clc
mov
adc
bnd
fadd
mov
xlat
add
xchg
pop
imul
cltd
cli
iret
cmp
fs
ja
popl
sahf
push
dec
popf
push
cmp
lcallw
sahf
cmp
clc
scas
lret
or
leave
fmulp
leave
inc
ret
inc
outsl
int
outsl
idiv
xor
push
ss
dec
aaa
jge
movsb
or
sarb
and
outsb
enter
stos
xor
cltd
test
daa
test
ljmp
pop
stos
pushf
shll
sbb
aaa
imul
and
dec
lret
sbb
call
movsb
in
fs
push
push
push
xchg
fistpll
cmpsl
or
mov
lahf
pop
push
mov
retw
addr16
lea
pop
mov
out
mov
mov
mov
fisubl
push
sub
shl
aas
and
dec
sbb
jge
sbb
std
outsb
push
loop
ret
lds
iret
outsb
enter
or
int
push
push
fsubrp
or
test
and
mov
jne
push
hlt
mov
fs
ret
fwait
xchg
inc
cmp
lcall
gs
movsb
push
ja
movsl
jno
jnp
mov
mov
rcrb
pop
fcoms
shlb
jp
sbb
ficomps
push
cltd
addl
int
mov
adc
push
pop
jecxz
jg
or
pop
xchg
int3
scas
roll
std
outsl
cmp
imulb
sti
xor
notl
mov
rorb
adc
dec
scas
inc
lcall
mov
outsl
mov
or
cmp
idivl
dec
inc
mov
lret
cmp
jnp
cmpsb
pop
daa
cmp
es
dec
loop
cmp
adc
adc
repnz
fistpl
xor
adc
or
mov
cli
popa
fbstp
jbe
xchg
inc
sarb
outsb
mov
mov
cld
push
jmp
xchg
dec
pop
or
mov
ror
xchg
insb
mov
testb
bound
aaa
lahf
push
pop
out
cmp
dec
loope
pop
sbb
jmp
dec
outsb
adc
movq
mov
xor
xchg
push
jp
fwait
cmc
loopne
cs
mov
loop
clc
cmp
mov
or
jmp
jo
out
lods
push
adcb
xor
movsb
fbstp
std
push
cwtl
fildl
daa
push
push
adc
int3
mov
call
sbbb
shlb
stos
lahf
mov
dec
sub
into
jnp
adc
adc
arpl
loope
jne
mov
jno
insb
xor
pop
mov
jp
sbb
mov
rorl
inc
xchg
pop
sub
pop
jbe
je
ja
add
cmp
sbbl
cmpsl
jg
out
mov
test
jle
mov
fidivrs
sarl
stos
insl
ja
fdivs
idiv
adc
fiadds
mov
out
mov
cmp
or
push
sbb
pusha
inc
adc
dec
sahf
jl
lock
pushf
into
mov
shl
xor
xor
cmp
cwtl
cmp
aam
xor
in
fnstsw
add
enter
jo
jnp
inc
or
or
mov
lds
addb
inc
dec
xchg
jmp
call
in
jo
js
jae
decl
push
addb
outsl
jbe
lcall
inc
push
cmp
push
jmp
dec
sbbl
lret
mov
fnclex
mov
mov
call
xchg
arpl
into
mov
mov
loopne
cmp
pop
ret
sub
daa
stc
arpl
clc
sbbl
and
movl
mov
mov
fstpl
xchg
push
cltd
mov
cmp
mov
inc
sarl
sbb
test
neg
xor
stos
inc
or
xor
mov
xor
popf
lret
cld
push
cli
xor
test
adc
and
mov
insb
pop
data16
leave
js
daa
fists
in
push
pop
pop
imul
or
or
mov
mov
jle
cmc
je
insb
insb
hlt
dec
add
and
popf
inc
icebp
sbb
arpl
ja
mov
fisubrs
pop
sub
cmp
add
inc
cmp
ljmp
push
ds
lods
jl
inc
cs
and
jmp
sub
inc
outsb
ret
or
adc
mov
aas
bound
fadd
xchg
inc
imul
test
ret
mov
dec
mov
or
push
jmp
xor
ret
push
cmp
adc
popf
xchg
push
jae
pop
sub
add
les
pop
inc
jmp
das
jg
lea
outsb
pop
data16
sti
test
pshufw
loope
loope
add
fwait
inc
dec
sub
nop
and
incb
aas
jo
int
or
outsl
sub
inc
pop
sbb
xlat
xor
int3
dec
imul
out
scas
cli
movsb
cmp
push
add
jno
sbb
inc
jae
test
dec
xchg
cmp
xchg
adc
fs
dec
lods
das
shll
es
push
or
inc
in
xchg
fs
loope
das
mov
frstor
popf
out
cmp
xchg
add
mov
pushf
mov
outsb
sbb
dec
fidivrl
addr16
or
enter
outsb
mov
cmp
ljmp
add
es
test
xor
mov
jp
insl
cwtl
popf
sub
in
sbb
jb
and
or
jp
and
out
cltd
mov
xchg
jo
jg
mov
mov
add
stos
dec
inc
push
sbb
or
inc
inc
clc
or
inc
add
sbb
jo
fucomp
sub
aam
xchg
mov
dec
sbb
loop
into
or
or
pop
push
pop
pop
ss
dec
xor
dec
mov
mov
cmp
addr16
push
jbe
cmc
mov
lock
mov
sub
xchg
ror
je
cwtl
inc
or
adc
repz
test
xchg
movsl
sbb
fwait
out
imul
inc
lock
and
mov
jae
cmp
shlb
pop
loop
mov
cmpsl
push
pop
dec
xor
lret
idivb
es
bound
and
xchg
popf
xchg
sub
leave
or
or
scas
dec
pop
add
mulb
loopne
in
hlt
cmp
mov
inc
xchg
movsl
jl
mov
mov
test
sar
cmpsb
inc
lret
scas
jl
shrb
jl
cltd
add
add
xchg
push
adc
mov
lods
sbb
sahf
divl
addr16
inc
mov
and
call
and
push
addl
imul
popf
push
xchg
and
out
inc
or
in
push
ja
jne
in
push
fildl
dec
and
sbb
xor
pop
jge
push
jge
lock
add
repnz
adc
sub
scas
iret
sub
and
sub
adc
cmc
js
sbbl
decb
andl
push
imul
loop
push
mov
add
repz
adc
pop
adc
in
test
lds
pop
dec
loopne
xor
repz
sub
inc
jbe
into
inc
mov
jmp
sarb
sub
lret
int
mov
jbe
pop
or
xor
add
data16
shlb
sahf
sahf
or
jae
adc
outsb
sarl
dec
aas
jp
stc
std
cmp
mov
mov
mov
into
aam
xor
movsb
adc
adc
data16
movsl
repz
mov
inc
pop
loop
inc
sub
inc
je
xor
jbe
mov
pop
xchg
adc
ret
jl
ljmp
mov
stos
xor
outsl
insl
and
or
dec
ljmp
xchg
and
pop
dec
jno
xchg
in
ja
mov
test
dec
push
scas
add
data16
cmpsl
xchg
mov
insl
jnp
push
pop
je
inc
inc
pop
int3
in
fsubr
dec
xlat
aam
data16
jp
adcl
arpl
stos
and
scas
imul
dec
ffreep
cmpsb
and
dec
mov
pop
fidivl
fadd
ja
jmp
lock
push
lods
sbb
out
aas
inc
mov
mov
push
out
add
pop
mov
adc
lret
pop
pop
push
hlt
jnp
in
mov
dec
fadds
cmp
mov
adc
adc
sub
mov
cmp
leave
fstpl
adc
push
dec
jmp
iret
xor
push
int
std
andb
xchg
int
stos
mov
cmp
loopne
mov
les
mov
mov
and
mov
dec
outsl
mov
testb
sub
push
mov
sub
cwtl
cmp
test
lea
cmp
push
loope
add
add
xchg
pop
mov
cwtl
rorb
and
out
jo
out
or
add
imul
gs
jo
enter
dec
out
xor
scas
dec
sti
mov
mov
xchg
stos
inc
sub
fstpl
lods
lods
test
dec
rcrl
dec
insl
lds
pop
mov
sti
adc
dec
push
xchg
ficoml
ja
add
push
int
cld
cmp
cmp
in
repnz
rol
mov
push
push
mov
int
inc
jmp
outsl
or
fcomps
cmp
push
in
pusha
lret
lock
scas
jb
mov
push
fs
jb
mov
ss
adcl
jae
sti
in
popf
movsb
jo
mov
popf
cmpsl
and
test
or
push
or
cmp
or
cmpb
leave
imul
pop
dec
and
fisubl
mov
dec
imul
pop
ds
sbb
sbb
push
mov
xchg
inc
sub
xor
imul
push
rcll
jae
xorl
jb
pop
jg
clc
sbb
push
push
testl
movsl
mov
in
lods
hlt
mov
in
shrb
or
fnstcw
mov
fbstp
sbb
mov
add
xchg
test
mov
lods
inc
inc
enter
ljmp
push
lods
outsl
test
push
int
inc
out
sub
sbb
fldl
push
sbb
xor
cmp
lret
sbb
sbb
or
mov
test
iret
cltd
jge
stc
jbe
add
xchg
mov
cmpsl
sbb
icebp
aaa
lods
mov
sub
ret
out
push
push
daa
pop
int
xor
adc
or
adc
sti
subl
push
fbstp
dec
push
xchg
inc
outsb
mov
sub
inc
idivb
out
mov
fsubrs
adc
daa
sub
fisttpll
jbe
fists
jecxz
sub
push
push
ss
pop
mov
xor
inc
or
dec
into
jb
cmp
sub
imul
sub
push
pop
lret
and
rcrl
imul
sub
jg
out
loopne
or
lahf
dec
fnstenv
sbb
outsl
sbb
sarl
cmp
pop
fwait
pushf
adc
mov
hlt
inc
cmp
movsb
push
mov
repnz
jmp
fimull
fldcw
in
add
push
loope
and
fdivl
push
mov
or
divb
mov
mov
push
rcll
inc
jmp
mov
js
fwait
inc
push
lock
imul
mov
push
push
outsb
sub
and
jo
pop
xchg
xchg
in
sbb
lret
aad
and
xchg
mul
imul
int
pop
cmpsb
pop
lret
inc
in
add
lret
lea
imul
clc
dec
dec
mov
jne
imul
les
adc
mov
mov
pop
pushf
mov
push
je
les
mov
sbb
lods
xchg
lret
ljmp
lahf
push
fwait
std
mov
lcall
sub
sub
mov
xor
mov
pusha
aam
addr16
add
faddl
cmpsl
xlat
adc
sub
mov
mov
push
push
dec
fcoml
xor
aaa
inc
mov
dec
int3
shrb
cmp
insl
das
cmpsb
mov
pop
push
fildll
dec
insb
loope
cs
mov
sub
repz
cwtl
or
cwtl
xchg
mov
roll
xor
jns
clc
pop
ja
das
mov
push
jp
mov
xchg
mov
pusha
jne
into
sbb
movsl
icebp
and
push
lock
inc
rcrl
dec
out
out
je
loop
popa
arpl
enter
or
cmp
dec
out
mov
mov
adc
cltd
jne
lods
mov
imul
shlb
inc
scas
stc
dec
aaa
lcall
sarl
cli
pop
mov
mov
cmpl
fstl
rorl
insl
jle
movsb
movsb
mov
fxch
pushf
jecxz
add
xor
cmp
stos
out
cltd
adc
pop
dec
lret
std
xor
roll
mov
subb
sbb
mov
test
or
pop
adc
inc
vpermilps
mov
inc
cld
popf
fsubrl
jo
xor
xchg
mov
mov
aad
or
inc
push
pop
cld
cmpsl
stc
je
mov
push
cmp
ret
fcmovne
fbld
sub
lods
or
lahf
jns
push
cmp
mov
push
and
jmp
cld
es
cpuid
test
jle
add
fildll
cmp
std
push
xor
fdivs
loopne
dec
sub
inc
movsl
push
push
push
sub
jno
sahf
jbe
imul
inc
frstor
andnps
fs
in
lock
mov
sub
push
or
shlb
cmp
mov
cli
cmp
sbb
pop
aad
push
insl
and
popf
sti
lock
cwtl
dec
js
fbstp
push
sahf
adc
pop
arpl
frstor
and
jl
adc
test
aaa
std
mov
or
in
and
and
sti
jl
mov
add
stos
inc
add
rclb
push
aaa
jae
xchg
add
movsl
aad
add
iretw
inc
mov
lock
mov
fnstcw
jo
push
js
in
jo
dec
aaa
cmp
push
xor
stc
sbb
rorb
sbb
pop
jae
out
adc
or
loopne
imul
loopne
sub
xchg
leave
mov
cld
sub
inc
or
xchg
lds
jl
lret
sbb
inc
test
push
aad
pop
pop
movsb
imul
sub
fs
push
arpl
cmpb
mov
scas
mov
xor
sbb
inc
push
jg
stos
loop
in
int3
cs
retw
adc
xor
xchg
out
inc
int3
add
push
fdivrs
test
in
fsubrl
data16
sub
fs
mov
push
cmpb
std
pop
test
dec
add
jns
cmp
std
ss
out
lret
jnp
cmp
cmp
dec
loopne
inc
bound
outsl
hlt
jne
lret
mov
aad
cmp
mov
rcll
adc
push
push
cmc
insb
cmp
inc
sub
std
mov
aad
clc
aad
adc
ror
sub
rcrl
pop
dec
adc
test
or
pop
push
int3
in
xchg
xor
loope
dec
xchg
jb
int
decb
lods
push
test
scas
mov
scas
aaa
ret
test
cltd
cltd
adc
mov
xchg
and
push
sbb
mov
adc
cmc
mov
pop
fsubr
imul
push
insl
repz
pop
repz
gs
int
sbb
push
xchg
sbb
push
mov
aas
lret
push
jne
enter
ret
inc
dec
jle
mov
nop
mov
int3
nop
mov
jnp
data16
cmpsl
stos
mov
lea
and
inc
cmpsb
test
inc
lret
sarl
push
imul
cltd
repz
adc
jnp
dec
push
mov
cwtl
enter
sub
mov
addb
mov
sti
push
daa
cwtl
and
hlt
pusha
subl
scas
adc
stos
xor
negb
data16
shll
movsb
add
adc
notb
addb
cmp
push
call
push
popa
insl
gs
shr
jle
stos
cmp
fdivrl
mov
xchg
out
fs
lahf
enter
xor
inc
lahf
in
xchg
xchg
popf
push
inc
mov
jmp
cmp
pop
shlb
jge
lock
movl
xchg
test
cmpl
mov
jmp
ss
lret
and
repnz
xor
and
and
test
aam
mov
call
stos
cmp
into
push
cmp
iret
mov
movsl
ret
mov
int
addl
loop
push
aad
cmpsl
mov
or
xchg
jb
or
mov
xor
mov
mov
push
mov
cmp
mov
jge
jbe
lea
rorb
cmovs
test
pop
push
sbb
mov
pop
jnp
and
outsl
lock
sbb
sbb
or
int3
mul
out
push
cli
lds
sub
cmp
pop
pop
aad
xlat
lds
out
lret
push
xchg
daa
ds
add
lret
sub
push
lahf
daa
xchg
stos
and
adc
xchg
cmp
aaa
jnp
and
das
push
jno
push
push
ja
bnd
rolb
orb
call
pushf
jnp
ss
sub
aam
fstpl
insl
imul
test
mov
push
in
mov
jb
xor
fsubrl
xor
inc
repnz
cmp
popf
mov
js
shll
push
pusha
in
mov
popf
or
pop
clc
jo
mov
mov
push
add
jnp
cmpsl
sbb
add
xchg
jns
push
movsl
xor
push
sbb
and
out
hlt
mov
pop
push
add
mov
lds
or
jns
xchg
sub
lahf
xlat
pushf
dec
arpl
xchg
insl
pusha
lret
dec
icebp
push
inc
pop
inc
or
out
jl
stos
or
lcall
nop
cwtl
out
dec
rorb
pop
pop
jp
mov
pop
int3
mov
adc
lretw
push
cmpb
aam
outsl
iret
pop
call
std
mov
addb
out
sub
push
ja
clc
sti
ret
loope
insb
and
pop
cmp
test
subl
push
stos
dec
mov
es
fbld
jmp
push
insb
jbe
shll
stos
out
lds
xchg
popa
loope
cli
hlt
pop
xchg
jl
iret
movsl
jmp
add
arpl
inc
sub
pop
xchg
mov
dec
dec
cmpsb
int
cmp
cmp
es
or
test
rorb
and
push
sbbb
sbb
mov
inc
fwait
pop
xor
in
mov
mov
mov
cmp
push
js
lret
cmp
push
mov
jb
lds
icebp
adc
adc
loop
stc
ljmp
in
arpl
pushf
fwait
and
push
inc
mov
jbe
or
jo
sub
cmc
or
cli
outsb
cmp
out
xor
ja
decb
mov
pop
pop
stos
jne
sbb
out
xor
insb
stos
out
cli
push
sub
out
mov
mov
aad
in
out
dec
pop
xor
in
mov
cmpsl
dec
xchg
gs
mov
inc
call
add
inc
rcrb
mov
mov
inc
cmp
lods
jecxz
or
neg
or
test
mov
push
hlt
or
jbe
push
scas
xor
sar
push
in
in
xor
xor
js
inc
pop
add
jbe
inc
imul
lahf
test
repz
shrb
mov
daa
scas
xor
sbb
mov
out
adc
gs
inc
inc
fstl
cmp
jp
cli
adc
mov
cmpsw
movsl
mov
xor
inc
fildll
aam
pop
daa
sbb
test
inc
add
mov
rcl
add
lret
xchg
jle
cmp
xchg
sbb
in
dec
mov
movsl
jne
push
inc
push
out
jecxz
repnz
dec
dec
rcll
dec
push
sbb
adc
sbbl
sub
in
notb
or
aaa
push
cli
push
out
loope
pop
movsb
add
scas
push
jp
fmulp
aam
jmp
fxtract
fidivrl
push
cvttps2pi
fiaddl
shl
jns
mov
mov
pop
jg
dec
dec
dec
push
data16
out
inc
rcrl
es
dec
mov
mov
xchg
add
jb
int3
xor
ds
xchg
cmpsb
push
cmp
jo
cltd
test
int3
scas
jo
je
or
das
jecxz
push
cmpsl
push
cmp
mov
inc
add
inc
scas
cmp
rcll
adc
in
arpl
int3
fistl
push
jmp
dec
adc
shrl
notl
xchg
sbb
fs
inc
dec
mov
jnp
inc
out
das
popa
add
test
or
daa
and
insl
shll
sub
ja
xor
mov
fisttps
jmp
pop
test
pop
out
push
mov
ljmp
lods
aam
out
xorb
jno
fst
out
imul
je
mov
pop
inc
inc
imul
cmpsb
arpl
jl
daa
gs
test
xor
pop
xchg
cli
xor
add
inc
jle
ret
push
sar
mov
cmp
popa
mov
mov
inc
lahf
mov
mov
dec
imul
imul
and
imul
lods
push
out
es
sub
incb
push
enter
mov
out
outsb
xor
out
lret
mov
xor
cmpsl
mov
pop
mov
inc
enter
jecxz
sbb
inc
mov
aaa
xor
in
lock
lock
mov
jo
aad
jo
outsl
es
cmc
jle
call
mov
mov
pop
movsb
inc
inc
std
jg
sub
lret
and
and
mov
or
jecxz
xchg
inc
push
jo
in
daa
mov
gs
pop
jno
hlt
pop
lahf
fdivrs
insb
or
data16
std
mov
fwait
lock
shr
cmp
jno
les
xorb
ds
mov
out
xor
jo
mov
and
ss
in
xchg
cmp
mov
mov
push
loop
fwait
mov
add
or
jns
lea
xchg
mov
push
or
sarb
jecxz
lds
jne
cmp
movsl
test
jge
xor
jbe
cs
pop
in
inc
xchg
sub
stc
pop
stos
ds
les
sub
jge
iret
out
es
mov
lret
pop
fidivl
xchg
xor
cmpl
mov
cmp
mov
ficoms
fsubp
cld
incb
push
ljmp
mov
stos
dec
stos
jg
cltd
popl
push
insb
xchg
add
std
scas
call
stc
xchg
jno
cmp
dec
negb
daa
push
pop
imul
sbb
out
and
mov
xchg
sub
or
ret
mov
mov
dec
mov
pusha
insb
jo
add
pop
and
ret
or
push
push
mov
out
or
xlat
daa
imul
ret
rorl
pop
in
or
add
sbbl
rcrl
orl
mov
or
cmpsl
adc
roll
loope
pop
cld
adc
xchg
sbb
push
popf
or
andb
aad
push
adc
adc
inc
lahf
mov
pop
lods
cmp
jmp
jl
dec
paddd
movsl
push
jmp
fwait
xchg
pop
ret
insl
in
or
ret
sbb
or
clc
mov
adc
dec
xchg
cmp
or
jo
inc
popf
loope
mov
nop
je
ja
fmuls
outsl
jnp
sbb
inc
das
xchg
push
or
loope
mov
cli
sbb
pop
mov
dec
sbb
fadd
loop
sub
or
ljmp
sub
cmp
repnz
mov
jb
jno
jb
pop
jmp
arpl
fstpl
loope
cmp
nop
dec
movb
dec
or
fwait
and
dec
fsubrp
scas
fs
imul
xchg
es
pop
pop
pushl
xor
xor
mov
outsb
inc
jne
xor
lods
fmull
xor
imul
sbb
inc
addr16
sahf
cmc
int
fstpt
in
add
out
jo
jo
rclb
xchg
mov
int3
or
jo
push
mov
aad
lret
lcall
and
jle
clc
add
push
ds
cmpsb
outsl
xchg
movsb
insl
pop
in
xor
notl
insl
jle
pushw
aad
xchg
xchg
lea
popl
out
pop
mov
add
xor
popl
sub
clc
gs
mov
mov
and
stc
pop
mov
fstpt
arpl
leave
testb
push
mov
js
push
pop
dec
xchg
push
rorb
sub
fwait
pop
lcall
hlt
dec
enter
xchg
or
dec
fdivrl
jno
sbb
mov
mov
inc
xor
cmc
loope
fwait
daa
mov
jecxz
pushf
sete
fsubrs
jb
pop
dec
jge
push
sub
out
imul
in
test
scas
jne
mov
adc
and
aas
js
mov
cmp
out
lea
inc
jb
movsb
cmp
mov
rcrb
sbb
dec
xor
xchg
lret
xor
xchg
xor
jbe
addr16
cli
xor
jle
dec
mov
sub
ljmp
cmp
xor
int
inc
shll
daa
mov
add
xchg
or
xchg
inc
mov
lcall
sarb
les
xchg
ljmp
loope
mov
clc
cmp
incl
test
std
popa
xchg
imul
aas
push
fdivl
in
xchg
mov
dec
add
pushf
or
fstpl
add
out
call
fs
cwtl
addr16
call
add
jle
adc
sahf
pop
or
inc
mov
mov
std
ljmp
dec
repz
push
rcrb
leavew
jmp
inc
leave
jae
push
out
shll
mov
cmp
push
psubw
aaa
das
sbb
into
adcb
test
dec
add
mov
xchg
sub
in
lds
mov
pop
lds
shlw
loopne
test
sbb
mov
cmp
daa
pop
sub
xchg
mov
addr16
push
ret
leave
jl
lods
jmp
pop
lret
outsb
jns
nop
js
fs
jbe
adc
pop
sbb
add
divl
jo
stos
mov
call
lahf
jl
outsl
imul
lret
adc
lahf
xchg
adc
andl
gs
enter
pop
stc
daa
ljmp
cbtw
nop
xchg
leave
jg
xor
test
jmp
lock
negl
push
push
add
xor
es
cltd
lods
sub
enter
mov
pop
cld
addr16
dec
arpl
dec
in
jbe
add
push
mov
xor
test
jg
sbb
mov
mov
fmul
xor
lods
or
std
mov
insb
jl
into
je
sbb
das
fiadds
movsl
sahf
push
mov
sahf
xlat
fdecstp
mov
ds
adc
cwtl
adc
mov
inc
shll
ficomps
in
insl
and
or
mov
mov
dec
test
jne
add
jae
cmp
mov
std
dec
fimull
aaa
cmp
push
push
loop
mov
push
pop
sbb
xor
and
jl
repnz
lret
adc
add
leave
in
xchg
and
cmp
in
ja
sar
aas
das
enter
dec
fxch
adc
sbb
ja
jb
js
inc
mov
inc
mov
push
and
test
push
fld
out
xor
adc
and
jnp
pop
hlt
ljmp
sbb
push
enter
out
popf
jnp
pop
xor
xchg
sub
inc
cwtl
loop
mov
jae
sbb
cmc
cltd
lea
jmp
and
aam
test
insb
cmp
push
add
scas
cmp
and
push
push
mov
sub
sub
mov
clts
nop
sbb
push
jne
jns
push
test
aaa
clc
pop
lret
mov
or
adc
addb
leave
das
mov
jne
mov
sub
adc
test
test
lock
out
jo
mov
push
xrelease
mov
test
insl
clc
adc
jo
jecxz
orl
aam
test
test
frstor
movsb
push
insb
jne
push
pusha
lods
mov
rcll
cs
js
add
dec
xor
and
gs
mov
addr16
push
gs
push
push
cwtl
push
or
stc
ds
jge
jl
add
cmpsl
xor
stos
ror
aaa
push
in
popa
mov
adc
cmp
adc
or
pop
and
in
aaa
mov
cwtl
and
xchg
aam
out
fcompl
sbbl
aaa
sub
inc
repz
cmp
popa
dec
mov
outsl
mov
dec
mov
mov
outsl
rorb
pop
mov
push
icebp
leave
mov
push
subb
in
inc
xor
daa
cli
mov
cwtl
jbe
jmp
sti
sbb
adc
in
adc
shr
cltd
jbe
out
mov
sub
ret
mov
ja
xor
mov
jge
add
mov
mov
push
sub
jmp
orl
mov
inc
pop
sbb
fstps
andb
popa
fdivrl
lods
xor
hlt
shl
jne
mov
mov
mov
mov
mov
pop
les
push
out
cmp
cmpsl
ljmp
call
mov
ljmp
test
push
jmp
jp
das
and
gs
and
mov
jmp
jecxz
ss
pop
xor
push
mov
cs
inc
out
movsb
add
mov
daa
xchg
dec
shll
push
jae
cwtl
sahf
cmpsl
cmp
jne
je
jl
shrl
mov
sub
dec
push
mov
fldenv
mov
movb
lret
into
xchg
stos
cmp
ja
cmp
fwait
outsl
stos
scas
jne
pop
sub
lret
or
lds
push
lea
ds
or
fcoms
mov
mov
xchg
pop
cmc
or
mov
stc
aaa
addr16
add
test
test
pusha
jle
ss
fwait
rolb
icebp
push
xor
xchg
jge
sub
lods
sub
mov
xor
mov
xchg
inc
int3
add
iret
xchg
xchg
frstor
jg
jge
jmp
xchg
dec
adc
pusha
inc
sub
imull
out
hlt
aam
lock
xchg
and
mov
das
sub
outsl
jg
ret
cld
cmp
push
jns
aad
push
sti
jo
repnz
pusha
xchg
pop
mov
test
aam
in
xor
inc
out
fadds
push
mov
inc
and
adc
xchg
stos
ljmp
aas
cmp
rorb
and
popa
cmp
adc
xor
or
mov
sbb
pop
aam
mov
sub
jae
mov
xchg
inc
mov
pop
scas
pop
mull
clc
or
pop
or
insl
xor
std
sbb
xchg
fistps
ffree
add
mov
fwait
jno
inc
xchg
sbb
mov
add
adc
cmp
stos
ja
cmpsb
xchg
jle
mov
dec
stc
push
jo
sbb
mov
xchg
out
adc
repnz
jl
fiaddl
xor
es
wrmsr
pop
push
popf
call
pop
or
imul
pop
and
sbb
outsl
sub
mov
int
popa
inc
mov
dec
xchg
das
out
cmpb
leave
ret
mov
jo
or
mov
mov
js
movsl
fwait
cmp
rolb
das
int
add
cmpb
xchg
pop
inc
icebp
or
icebp
pop
inc
stc
jge
jl
inc
gs
stc
mov
mov
andb
add
push
mov
popl
or
add
jl
stos
sub
inc
xchg
mov
xor
sub
and
xchg
push
xchg
mov
sahf
cmp
xchg
into
xchg
into
inc
pop
inc
jl
std
xor
mov
push
push
jl
sub
decl
jne
aam
dec
mov
xchg
enter
or
test
jg
xchg
push
sbb
aam
idiv
mov
pusha
dec
loopne
shlb
mov
push
in
jno
mov
movsl
jmp
pushf
jecxz
fisttpll
push
js
vpsubsb
sbb
and
cmpsb
es
inc
push
sub
in
adc
sub
fcoml
inc
and
dec
lahf
test
call
insl
xor
insb
imul
fsubs
mov
test
or
sub
aas
imul
xor
xchg
mull
lret
push
sbb
xchg
movsl
sbb
xchg
sbb
in
stos
jge
add
dec
sub
es
push
movsl
inc
xor
push
sti
xor
mov
mov
and
inc
mov
cmc
or
scas
clc
sbb
pusha
iret
mov
ss
push
mov
stos
mov
and
fldcw
cmpsl
pop
imul
xchg
mov
pop
repz
sub
ret
pop
xchg
fs
inc
jecxz
mov
out
and
roll
inc
adcb
push
fisttpll
push
push
data16
inc
lret
jno
ret
pop
das
push
mov
aas
movsb
ja
and
push
ds
dec
push
cmpsw
mov
xchg
push
inc
aaa
sub
pusha
dec
aad
mov
out
xlat
push
lret
cmp
pushf
ss
ret
cmp
fsts
xchg
pop
mov
fnsave
or
mov
test
jne
jbe
cs
dec
das
clc
add
jge
arpl
and
jae
je
or
enter
sarb
dec
xchg
stos
mov
enter
fwait
jmp
imul
mov
and
out
mov
pop
mov
lcall
repnz
out
sub
rcl
mov
fbld
lret
inc
and
xchg
adc
loopne
out
inc
cltd
mov
mov
ret
test
push
pop
cmpsb
or
ds
mov
inc
ds
xor
test
or
jle
mov
movsl
pop
and
inc
sbb
adc
cmp
loope
stc
fisubs
iret
mov
inc
sbb
xchg
xchg
adc
int3
lea
testb
sbb
jle
es
ficoml
aas
mov
mov
jns
imul
jl
ret
stc
add
adc
movsl
shrw
dec
push
mov
dec
les
fildll
push
iret
and
and
cmp
repz
ret
cmpl
inc
loopne
pop
dec
mov
lret
int3
cmp
cs
xor
sbb
ret
imul
cmc
jge
or
icebp
ret
nop
jmp
xor
or
mov
and
dec
orb
jno
or
sub
sub
and
push
popf
scas
sub
orl
mov
fiaddl
cltd
je
lcall
in
sbb
mov
rolb
cld
jge
pop
push
in
shrl
jl
sbb
xchg
insl
dec
roll
inc
lcall
adc
add
or
mov
or
mov
inc
or
xchg
sub
dec
cmp
add
iret
pop
or
add
mov
cmp
out
inc
lret
cs
ss
cli
sbb
sti
imul
ret
outsl
les
sbbl
cli
push
or
scas
sub
int3
push
mov
dec
and
inc
mov
enter
incl
pusha
adc
mov
add
mov
sub
lods
mov
mov
adc
test
inc
push
repz
loopne
xchg
jae
pop
mov
xchg
mov
add
std
mov
mov
repnz
mov
lret
scas
sbb
jle
fwait
and
insb
in
cmp
outsb
xchg
sub
subb
pop
cmp
aaa
leave
into
in
pop
adc
jns
push
lock
add
add
lcall
xchg
push
jns
outsb
push
insb
into
ret
scas
lcall
mov
scas
mov
mov
ret
aaa
faddl
dec
mov
push
dec
fwait
adc
fsubrs
lahf
popf
push
jbe
sub
gs
stos
mov
js
jb
dec
cmp
in
mov
outsl
jp
fldl
pop
or
xor
or
sub
or
add
jns
in
adc
sbb
add
dec
jae
cld
in
lahf
aad
and
addr16
jb
adc
inc
dec
arpl
pop
clc
cwtl
loopne
dec
adc
mov
stos
or
sbb
jl
rolb
stc
aaa
inc
add
aad
add
pop
dec
mov
cmpsb
popa
in
jg
das
shlb
inc
sbb
jge
rclb
push
imul
jb
cmc
stos
inc
and
mov
pop
push
fcoms
and
ds
divl
rclb
lahf
imul
pop
pop
push
and
std
cmp
dec
sbb
cmc
and
push
jp
pop
xchg
in
jg
ficompl
fsubrl
dec
imul
push
pop
das
xchg
jne
mov
loopne
je
push
jns
icebp
fdivrs
pop
pop
jb
jg
jns
out
push
sub
jo
movsl
repz
lcall
sbb
lahf
ljmp
aas
aaa
stos
stc
inc
loope
in
roll
inc
imul
lds
lds
cmp
ja
xchg
cs
jle
addr16
xor
lds
adc
push
xchg
stos
cmp
lock
push
push
mov
mov
sbb
pop
push
xorl
xor
out
inc
test
xchg
roll
ds
ds
jnp
stos
jnp
pop
in
push
xor
outsb
test
jge
xor
std
push
push
cwtl
pop
dec
loopne
jbe
or
arpl
xchg
jg
push
jno
lret
lods
das
test
cli
cwtl
roll
shlb
arpl
decl
pushf
mov
jb
bound
js
dec
jmp
jl
mov
cld
movsb
mov
loop
mov
push
add
in
or
bound
leave
stos
and
cmp
sub
jp
sbb
jb
add
pushl
test
cltd
inc
inc
out
cld
inc
dec
cs
add
cmp
dec
sbb
cmp
or
xorl
nop
mov
dec
sbb
add
sahf
movl
int
mov
test
inc
cltd
cli
adcb
icebp
push
jg
loope
mov
push
aaa
cmp
inc
rorb
insl
cwtl
mov
fstpl
icebp
mov
push
outsb
das
xor
rol
xor
aad
divl
xor
andl
pushf
add
jecxz
in
mov
into
fs
pop
dec
movsl
imul
add
cmp
cmp
add
xchg
add
jg
divl
add
mov
push
loop
das
mov
es
cmp
or
loope
inc
mov
mov
jb
jmp
scas
xchg
ret
cli
inc
add
out
imul
add
clc
out
add
jns
jmp
cmpl
jae
je
mov
pop
push
jbe
rcr
popf
mov
fisubl
add
shll
shrl
adc
sbb
mov
loope
dec
arpl
das
test
bound
mov
pop
adc
les
xor
aam
ret
cmpl
add
dec
and
and
xor
test
jmp
mov
daa
mov
arpl
lret
ljmp
xchg
xchg
jmp
clc
fcmove
xor
shrl
hlt
mov
jmp
pop
outsl
jl
icebp
jo
xchg
or
fs
sbb
mov
movsl
cmp
out
sahf
lea
in
pop
std
mov
pop
inc
repz
pop
jb
call
dec
jae
fcompl
sub
ret
dec
push
mov
in
ja
mov
adc
out
sbb
lods
xchg
je
inc
xchg
pop
xlat
sbbl
mov
adc
xchg
jmp
mov
add
pop
jle
and
xchg
mov
mov
sahf
or
xor
iret
mov
lret
out
xor
in
ljmp
or
mov
shlb
lcall
jo
out
stc
rol
or
dec
mov
out
jae
shr
or
xor
mov
push
jno
or
mov
hlt
or
jp
in
movb
push
jecxz
aaa
rolb
repnz
mov
repnz
in
ljmp
adcl
mov
lods
test
mov
or
add
mov
lret
loopne
jbe
mov
push
sbb
fdivl
pop
mov
sub
jne
je
jp
jnp
cmp
mov
test
pop
mov
and
pop
outsl
lods
inc
jg
xchg
repnz
mov
sbb
mov
cmp
popf
mov
jno
clc
pushl
inc
push
lea
xchg
outsb
std
mov
and
lock
repz
push
adc
into
test
xlat
addr16
shlb
xor
push
xor
and
push
repnz
lock
into
or
ja
and
dec
fistpll
xor
imul
je
scas
test
dec
mov
jl
in
loopne
stos
jge
jmp
push
data16
fwait
std
icebp
sub
mov
dec
mov
pop
mov
data16
or
or
pop
inc
cmpl
mov
push
adcl
leave
mov
popa
jmp
sti
lds
mov
lcall
mov
dec
test
cmp
cli
testl
inc
xchg
dec
xchg
insb
arpl
push
sub
mov
mov
cli
jecxz
mov
push
jle
out
sti
push
inc
faddp
fcomps
xchg
add
push
fbstp
mov
pop
cmc
lret
cmp
mov
aam
lret
sub
stc
pop
sbb
xchg
test
cmp
fistps
in
inc
jb
jge
ljmp
cmpsb
mov
daa
push
mov
inc
xchg
xchg
xor
pop
xchg
mov
fildl
aaa
inc
lods
enter
mov
push
fwait
leave
or
out
out
push
and
aad
jo
arpl
adc
jne
jbe
fistps
cltd
xchg
test
cmpsb
loope
ss
mov
and
repnz
inc
push
add
sbb
fsubl
addr16
inc
ja
adc
fisttpll
mov
loope
mov
mov
mov
jnp
cmpsl
hlt
maxps
and
pop
sbb
xchg
or
shll
sbb
add
out
dec
int
mov
pop
inc
mov
movsb
cmp
sub
cwtl
pop
pop
icebp
fisttps
popa
pop
cmp
loope
push
or
adc
push
xor
sbb
sbb
jo
xlat
in
cmpl
test
xor
push
pop
iret
xchg
dec
adc
loopne
or
jg
sub
jle
mov
loope
rol
enter
test
and
stos
xchg
add
nop
or
adc
cltd
mov
pusha
inc
dec
sub
mov
pusha
iret
out
les
es
adc
aad
pusha
push
inc
mov
js
or
gs
rol
inc
xchg
mov
lods
and
daa
call
repnz
mov
pop
jno
xchg
cmp
das
les
pop
and
je
push
jle
xchg
ds
pop
imul
addl
jbe
fwait
push
add
xchg
or
push
enter
shlb
in
dec
loopne
in
mov
jmp
push
stos
pop
jge
pop
push
into
xor
rcrl
dec
or
fwait
lahf
xor
add
stc
mov
xor
pop
mov
flds
stos
mov
add
pop
pop
fs
xor
jb
mov
dec
cmp
mov
inc
jbe
fwait
pop
adc
inc
cmp
pop
into
cwtl
mov
fldpi
js
dec
xchg
sub
call
les
mov
inc
jns
sar
push
inc
leave
lods
and
cmpb
mov
lret
lret
ja
mov
repz
adc
mov
movsl
xchg
shrb
push
xor
int
and
pop
mov
jb
ljmp
xor
pop
mov
push
adc
mov
inc
adc
and
lahf
mov
jp
lret
cmp
mull
pop
aas
xor
idivb
cmp
pop
in
dec
into
fmuls
xor
xchg
mov
push
stos
mov
dec
icebp
add
mov
dec
jo
imul
arpl
daa
test
xchg
sbb
es
cmp
incb
std
ds
pop
daa
push
cmc
jno
andb
div
mov
ljmp
lret
cmp
in
loop
iret
adc
insl
cli
push
cltd
int3
mov
push
inc
mov
mov
and
push
nop
cmc
jg
pop
test
xchg
add
out
adc
test
push
ficompl
roll
iret
imul
bnd
fdivs
sti
jecxz
es
add
imul
imull
xor
int3
lods
push
div
les
dec
stc
pop
mov
ss
stc
mov
adc
cmp
iret
xlat
shr
mov
std
xor
in
idivl
dec
and
xor
or
lods
ljmp
push
pop
emms
fs
popl
or
js
cmpl
lret
out
ficomps
mov
fsubs
movsl
push
jle
jg
sahf
iret
das
jmp
mov
cmp
dec
jg
cmpsb
addb
xor
lret
inc
push
loop
adcb
mov
inc
sbb
pop
cltd
xor
push
lods
lods
push
pop
xchg
pusha
xchg
aas
and
maskmovq
testl
push
jo
xchg
xor
pop
iret
sbb
mov
lds
ficomps
mov
lea
xchg
lcall
jle
jecxz
add
shl
popf
sarb
pop
mov
in
mov
sbbl
mov
mov
dec
xor
ret
adc
roll
insl
shlb
mov
push
aas
mov
mov
aaa
xchg
jnp
rclb
inc
or
mov
inc
test
pop
clc
mov
or
stos
fdivr
or
xchg
and
push
adc
daa
xor
and
mov
rolb
inc
inc
adc
cmp
and
popa
and
rcrl
mov
pop
pop
out
jnp
inc
aas
shl
jno
in
mov
jnp
xlat
clc
mov
call
stos
lcall
divb
dec
dec
leave
fisubl
loope
mov
add
xor
dec
xchg
icebp
aas
es
xor
pop
cmp
das
sbb
xor
ljmp
aam
call
jmp
sub
in
in
xor
out
aas
je
movsb
bound
jb
int
cwtl
stos
add
int
sbb
cmp
sub
gs
pushf
imul
lods
fists
add
inc
pop
pop
pushf
pop
mov
mov
ljmp
jmp
push
xchg
and
or
ficomps
and
rcrb
and
pop
dec
cld
stos
inc
xchg
and
mov
ret
push
dec
out
pop
das
pop
xchg
or
sub
in
and
cmp
cmpsb
into
stc
jbe
dec
cmp
jecxz
lds
jns
fbld
ss
xor
mov
and
in
mov
stc
dec
push
jb
loop
jge
out
or
jl
push
mov
shl
sahf
imul
sub
lcall
jbe
les
stos
mov
jl
mov
sbb
stos
mov
sub
push
sbb
test
cwtl
jmp
sub
sbb
lret
stc
mov
mov
sub
fiaddl
sub
sahf
subb
jnp
insl
mov
xchg
sbb
shlb
int3
inc
leave
imul
stos
xor
mov
aaa
test
cmp
ljmp
test
outsl
imul
stos
cmc
and
xchg
push
fidivrs
js
mov
idiv
js
jae
pop
dec
leave
mov
sbb
imul
xchg
xchg
or
pop
pop
xor
scas
xchg
outsb
into
pushf
dec
rorb
jae
xor
popa
sar
lret
xor
dec
jg
mov
mov
push
inc
or
push
insb
icebp
stc
inc
cmp
pop
inc
fcmovnu
jns
pop
and
adc
mov
ret
dec
push
and
pop
sub
flds
test
bound
unpckhps
negb
sub
jmp
imul
pop
fcmovu
add
loope
jns
out
scas
test
xor
jne
jge
lock
stc
cmp
out
cs
test
adc
sbb
fucomi
addr16
out
dec
rol
cltd
jecxz
daa
fnstsw
ret
jo
sub
jmp
mov
mov
fdecstp
lret
mov
xchg
mov
pop
xchg
push
bound
xchg
sbb
add
mov
xchg
mov
idivb
stc
negb
bound
aam
mov
mov
pop
fidivrs
mov
stc
addr16
cmp
mov
dec
add
mov
mov
fstps
fldt
test
scas
add
lcall
rorl
inc
jp
and
ficompl
bound
cmp
sub
ret
or
pop
mov
inc
mov
das
xchg
and
out
pop
xchg
inc
dec
inc
adc
mov
movsl
sbb
daa
lds
push
dec
cli
fidivrs
inc
pop
jle
in
dec
xor
fadd
xchg
pop
add
push
dec
sub
add
loop
lcall
mov
xor
pop
es
out
or
push
jl
insb
mov
outsl
fcompl
cmpsb
fcoms
jno
add
insl
call
sub
les
push
jg
and
mov
lds
pop
nop
mov
lahf
inc
xchg
insl
rcll
repnz
cmpsl
jecxz
and
mov
push
push
or
adc
repz
add
mov
mov
nop
jns
xor
in
outsb
add
push
fcmovbe
mov
scas
or
jae
jns
shll
jo
jbe
sbb
fisttpl
add
cmp
cmpsb
add
mov
flds
pushf
mov
mov
fisttpl
leave
mov
in
adc
popf
cmp
aad
loop
or
or
mov
in
push
lcall
mov
mov
rol
jecxz
mov
jno
fisubrs
aas
sub
push
xor
mov
push
fs
jge
mov
cmp
jb
dec
sbb
out
jne
cs
mov
inc
ds
mov
sub
adc
int
enter
imul
pop
loop
std
mov
jmp
std
loop
fs
out
xchg
sub
hlt
push
sub
or
negb
inc
les
ljmp
les
sbb
jae
push
mov
adc
fstps
push
fsub
xchg
mov
mov
loopne
addr16
sub
das
rorb
pop
aaa
sbb
imul
add
dec
add
in
push
or
ss
inc
neg
cmp
pop
outsl
push
jno
xchg
jle
outsl
insb
fimull
xor
add
push
frstor
mov
push
pusha
dec
jb
mov
sub
sbb
ds
add
mov
mov
sbb
ret
xlat
das
jne
adc
out
stos
jbe
mov
jge
mov
scas
test
xchg
daa
sti
xchg
push
mov
add
iret
lods
pop
testb
mov
xor
roll
pop
and
xor
xchg
push
mov
xor
push
test
xor
aaa
scas
push
xchg
inc
addr16
ljmp
outsl
dec
loopne
add
lcall
or
clc
sbb
add
lea
xor
add
and
cmp
ljmp
int3
sbb
dec
sbb
loope
cli
in
cwtl
test
icebp
sbb
jg
mov
and
inc
cmp
leave
add
clc
adc
adc
xchg
shlb
hlt
lea
scas
aaa
cs
rorl
lahf
repz
mov
xor
or
pop
mov
mov
mov
out
rol
push
inc
xchg
mov
test
out
mov
mov
pop
xor
sbb
lock
aaa
jns
outsb
pop
add
sbb
jecxz
inc
popa
and
jne
xchg
jg
mov
stos
jmp
xchg
xor
mov
pop
stos
stos
xchg
aam
mov
test
clc
repz
push
stos
sbb
mov
aam
and
or
and
add
mov
das
repz
jle
iret
push
fisubl
pop
or
movb
inc
iret
mov
inc
sbb
pop
push
sub
std
subl
stc
outsl
out
scas
fs
scas
js
sbb
inc
fistpll
inc
daa
inc
push
call
lret
mov
daa
flds
mov
movsl
jno
gs
sahf
jge
lahf
xor
insl
adcl
rcl
or
cmp
repnz
test
push
scas
fisubl
mov
fwait
push
ja
std
dec
push
push
and
dec
mov
and
cmp
repnz
push
sbb
movsb
shll
notrack
les
dec
int
test
xchg
scas
cmp
mov
sbb
cmp
stos
lods
and
cmp
xchg
loop
out
lahf
cli
adc
in
movb
insl
cmpsl
fnsave
aad
das
sub
in
rclb
push
push
xchg
lahf
push
fwait
push
push
clc
pop
inc
movsl
xchg
insb
jle
shrl
stos
dec
fsubrl
arpl
or
sub
inc
test
and
cmp
pop
push
mov
adc
mov
fiaddl
pop
push
int
lea
push
fadds
jp
ljmp
push
mov
ret
lea
lods
mov
repnz
ss
lret
cmp
fisttpll
enter
cmc
mov
add
imul
pop
sti
xchg
mov
out
jecxz
fs
pop
shlb
insl
xchg
and
sbb
ds
pop
jp
jo
nop
dec
adc
popf
das
sub
jne
jae
jmp
arpl
loope
pusha
bound
shlb
ljmp
stos
pop
mov
inc
jno
adc
addr16
mov
std
add
mov
std
mov
mov
shll
xchg
jl
pop
cmp
mov
sti
inc
mov
pusha
sub
inc
andl
sbb
in
inc
xchg
dec
stc
test
and
lcall
or
sub
repnz
dec
roll
les
loopne
mov
out
inc
push
test
lret
frstor
fistl
das
and
fcomp
nop
aaa
out
loop
cld
mov
mov
enter
inc
cmp
inc
outsb
lods
adcl
lock
sbb
shl
xor
xchg
pop
int
sub
mov
aaa
lret
insb
push
shr
sub
in
test
add
sbb
or
push
fsubrs
iret
repnz
stos
xchg
xchg
mov
adc
stos
mov
stos
sbb
mov
data16
mov
sub
xor
test
lcall
dec
xchg
pop
lahf
lret
add
mov
mov
nop
inc
adc
ret
ja
xchg
push
out
cwtl
fwait
inc
mov
xor
movsb
pop
ljmp
sarb
aaa
lods
mov
mov
jae
xlat
push
cmp
cmp
ds
in
maskmovq
pop
and
fldenv
sub
jae
push
insb
mov
shll
aas
or
sahf
cmpsl
ret
mov
mov
stos
sbb
aas
stos
cmp
add
xor
inc
fldcw
add
cmp
ljmp
jne
push
aam
cs
sbb
mov
mov
xchg
leave
shrl
shrl
add
movsl
add
fcompl
add
test
xor
cmc
cmc
xor
ficoml
add
pushf
mov
xchg
xchg
mov
jb
ljmp
pop
add
xor
jge
bound
push
aas
add
pop
loope
test
cwtl
fbld
jge
fs
jl
jb
inc
mov
out
cwtl
or
mov
push
data16
ror
push
sti
cmp
into
xor
icebp
fadd
and
rcll
mov
push
mov
mov
sub
sbb
sub
sbb
insl
orb
outsl
mov
daa
cmpsb
jbe
shlb
dec
add
shlb
mov
or
pop
cltd
mov
xchg
and
fistps
dec
insl
sub
mov
xor
and
or
fucomi
inc
pusha
cmpsb
xchg
repz
mov
mov
sub
cs
sub
mov
xor
mov
mov
out
fildll
enter
xchg
inc
enter
test
subb
mov
adc
fwait
and
in
inc
iret
mov
mov
inc
leave
movsb
xor
mov
sbb
in
mov
idivb
cmc
dec
les
inc
sahf
cmp
pop
lods
notb
xor
xor
cli
popf
mov
or
xor
xchg
push
xchg
movsl
aad
mov
movsl
gs
push
add
sub
das
sbb
test
dec
xchg
mov
add
enterw
insb
push
dec
and
mov
and
outsb
leave
jg
mov
dec
mov
pop
cmpsl
xchg
mov
mov
fistps
dec
sbb
and
daa
pop
cltd
std
and
push
add
fisubrs
push
scas
sbb
sub
push
pop
dec
out
add
clc
jmp
jmp
xchg
fs
cli
inc
jmp
jo
les
lods
jp
dec
fdivl
sub
out
and
jae
hlt
cwtl
hlt
imul
dec
mov
loop
ficomps
jne
popf
cmp
je
sbb
fwait
or
mov
testb
jmp
add
lahf
testl
lock
cmpsl
outsb
jl
xor
cs
sbb
sub
lret
add
gs
jne
and
and
jmp
cwtl
and
dec
pop
or
dec
ljmp
outsb
cmpl
jge
insl
cmp
add
jbe
inc
mov
jnp
adc
stc
into
addr16
mov
push
dec
add
sub
std
or
cmp
xchg
gs
mov
jbe
fmuls
das
push
xor
imul
jbe
arpl
and
loop
add
adc
pop
dec
xchg
adc
and
push
and
aam
cld
and
add
or
or
mov
leave
lods
xchg
mov
pop
popa
or
mov
jg
mov
jmp
jmp
push
adc
push
jp
sarl
repnz
mov
and
leave
sub
negb
dec
jl
call
jae
lods
jp
cld
aad
push
pop
daa
xor
cmp
cs
xor
adc
xor
adc
test
in
aas
xchg
xchg
aam
push
xchg
mov
jg
sbb
pusha
pop
arpl
incb
test
or
adcb
bound
pop
xor
or
repnz
sub
in
je
sbb
jne
add
mov
int3
jb
xor
lcall
test
dec
pop
push
dec
in
daa
aas
cmp
ljmp
jno
leave
aam
lret
and
or
aaa
pushf
icebp
loopne
or
push
mov
and
and
out
inc
jb
jecxz
addl
ss
adc
pop
adc
int3
lds
xchg
dec
dec
mov
loop
and
dec
sbb
out
mov
shl
and
xor
fisttps
nop
cld
lret
and
pop
add
inc
or
mov
cmc
inc
push
mov
jno
pop
inc
mov
cmpsb
xor
inc
stc
enter
add
loopne
xchg
sub
es
sti
sub
xor
pop
je
arpl
xchg
xor
pop
dec
out
mov
hlt
inc
into
mov
fisttpll
mov
jl
ss
dec
sub
inc
lahf
cli
xor
mov
shl
add
and
lret
xchg
mov
jo
jb
mov
xchg
mov
movsb
flds
push
pop
push
loop
jecxz
adc
mov
addl
hlt
leave
mov
aas
test
iret
lret
jns
add
and
cmpsl
test
jmp
out
xchg
push
xchg
les
ljmp
mov
xlat
aam
jg
ss
out
call
test
fnsave
scas
daa
jecxz
incb
cmp
das
mov
push
das
out
leave
fnstcw
test
daa
mov
decl
xchg
xor
out
in
jl
xchg
cwtl
sbb
outsl
fcompl
mov
sub
sub
or
mov
adc
out
jno
iret
and
addr16
out
push
ds
das
push
cld
mov
push
adc
sbb
inc
jmp
ljmp
repz
push
mov
adc
sbb
dec
lods
fldenv
cmp
jae
push
rclb
scas
push
jle
push
dec
jmp
push
loopne
inc
bound
push
dec
xor
push
popa
jb
cmpsb
lods
sub
sub
inc
ss
add
lret
push
lcall
mov
adc
xchg
jecxz
imul
dec
int3
lea
and
stos
lcall
test
cmp
sub
dec
cmpsl
mov
mov
aam
xchg
jl
mov
loope
fidivrl
jp
mov
or
mov
add
cmpsb
xchg
jne
and
adc
and
add
add
cmp
pop
aad
ja
cmpsl
lret
sub
cmpsb
push
inc
inc
mov
cltd
xchg
aas
popa
push
inc
mov
push
mov
cmp
jae
adc
inc
push
xchg
jae
stos
sub
lret
adc
sub
mov
jge
mov
pop
jo
ljmp
fildll
scas
in
or
les
dec
mov
in
and
mov
xchg
cmp
ljmp
test
mov
and
fldl
jb
pop
mov
ud1
loop
stos
movsl
mov
xchg
inc
xchg
jbe
jae
sbb
dec
pop
aad
leave
xor
cld
pop
fs
cmp
ja
das
ljmp
fisttpll
jns
dec
push
cmp
pop
sub
xchg
jno
ljmp
int
adc
mov
cmp
push
cli
mov
xchg
sub
rcrb
push
loope
stos
rclb
cmpsl
pop
dec
icebp
jbe
jae
ret
mov
cmp
daa
sar
push
test
jo
jmp
mov
inc
push
or
xchg
pop
bound
inc
outsl
add
shl
mov
sub
icebp
and
loop
scas
ljmp
aam
icebp
loope
fnstcw
add
push
push
jp
out
jb
loopne
dec
inc
lds
and
sbb
xchg
and
inc
icebp
in
mov
adc
notb
mov
out
insb
inc
add
xchg
js
adcb
fldenv
mov
jae
sub
in
nop
pop
in
lock
cwtl
mov
in
stos
je
scas
icebp
cs
dec
mov
cli
andl
cmpsl
mov
sub
adc
lds
xor
mov
in
es
aas
stc
xchg
out
push
adc
mov
pop
roll
in
mov
dec
lret
aas
mov
jp
aam
int
xlat
cmp
insb
pop
cmpsl
out
lods
test
xchg
jp
and
adc
mov
cmc
lock
sub
repnz
cmp
jb
punpcklwd
inc
stc
pop
sub
fs
lds
adc
pop
outsl
sub
out
insb
cmc
clc
ja
shlb
std
icebp
pop
nop
and
sahf
cmp
fwait
insb
mov
aaa
jno
lea
dec
pop
data16
scas
or
sbbl
sub
stos
mov
movb
cs
out
jecxz
out
push
mov
jl
lock
enter
add
sti
sbb
ljmp
movsb
dec
mov
push
mov
ficoms
popf
dec
dec
mov
in
cmp
sahf
and
negl
xor
nop
addr16
lret
mov
pop
add
popf
aad
std
xchg
inc
fisttpll
fsubr
scas
dec
sub
movsb
cmp
shll
add
dec
cmpsb
mov
lods
cs
repz
lods
cmp
sub
js
cli
mov
iret
sbb
aad
dec
pop
sbbb
cwtl
or
jle
mov
pop
stc
pop
push
jmp
addl
les
jnp
lret
mov
popf
ss
iret
mov
inc
fiadds
in
or
lret
adc
ss
cmpsb
adc
add
lcall
sti
mov
pop
repnz
in
mov
rcll
add
dec
rorl
mov
je
loope
adcl
loope
pushf
insb
pop
jmp
clc
push
movsb
adc
and
das
adc
fwait
lds
aad
bound
leave
out
adc
in
adc
jo
mov
int3
mov
jno
testb
or
adc
pop
repnz
in
stos
jno
jne
jns
fsub
fnstcw
push
out
lods
pop
ljmp
sub
inc
outsb
test
orl
jmp
movsl
movsl
adc
cmpsw
sbb
call
and
cli
xchg
inc
enter
mov
out
insl
movsl
cli
loopne
add
mov
stos
push
lahf
xchg
add
shl
push
dec
stos
repz
xor
cmp
cmp
mov
push
sub
cld
testl
cmp
es
mov
pop
or
pop
sbb
jbe
in
data16
xor
and
or
stc
bound
sbb
test
and
cli
inc
mov
push
popa
cltd
push
inc
or
mov
dec
outsb
sub
pop
fists
add
cmp
add
sbb
jne
call
shrd
sbb
rcl
xchg
jge
out
pop
mov
cmpsl
mov
icebp
push
push
push
or
cltd
divb
arpl
ja
inc
adcl
mov
jno
dec
mov
stos
std
leave
mov
loope
lret
decb
fs
mov
loope
test
scas
lods
std
mov
jle
or
outsb
pushf
inc
or
cmp
xchg
leave
cs
jp
mov
clc
cmc
or
cltd
movl
push
adc
out
add
int3
sub
cli
push
ja
inc
rcll
mov
icebp
test
cs
fwait
jle
sub
mov
aas
xchg
lea
add
adc
jns
mov
jp
jbe
jns
mov
mull
inc
jle
dec
pusha
pop
fnstsw
fldt
out
mov
daa
sbb
inc
ret
inc
test
mov
sub
daa
enter
push
iret
xchg
mov
lock
xchg
loopne
xor
dec
jp
jbe
ss
dec
add
mov
xchg
and
rcll
mov
mov
sbb
jns
or
or
inc
push
cmpsl
add
add
repz
and
jnp
test
or
push
sub
cmpsb
xchg
loop
mov
imul
mov
add
mov
std
pusha
out
shr
jmp
push
daa
into
and
test
insb
xchg
cmpsl
xchg
rorl
clc
and
push
cmc
fistl
in
jo
sbb
mov
leave
lret
or
mov
push
insl
out
mov
lahf
jecxz
cmc
jecxz
mov
lds
pop
pop
add
ja
adc
or
bound
push
ja
cmp
stc
xchg
pop
xor
lods
pop
inc
icebp
daa
mov
pop
dec
ret
or
out
fistl
jmp
je
loopne
or
lcall
or
dec
mov
adc
mov
mov
xlat
fsts
out
mov
xchg
dec
fimuls
jbe
sbbl
rcrl
daa
mov
jb
mov
mov
movsb
push
mov
and
gs
clc
and
add
jge
pushf
pop
xchg
push
call
lea
push
jnp
push
ret
xchg
jmp
pop
and
test
cmp
adc
or
cltd
mov
dec
iret
mov
mov
mov
sbb
jmp
mov
jecxz
out
lcall
xchg
jnp
xlat
mov
rcrl
cmpsl
jl
jne
sub
sub
sub
inc
movsl
adc
jge
dec
push
fincstp
fcompl
loopne
call
daa
mov
and
mov
fldcw
sbb
movsb
scas
test
jge
sub
cmp
mov
or
adcl
addl
jo
cmp
adc
outsb
sub
fs
sbb
js
sbb
jne
jnp
pop
fdiv
sub
sbb
pop
mov
adcb
loope
push
popf
in
call
outsb
xchg
push
fucomp
int
dec
and
mov
call
inc
mov
fsubl
mov
cmpsb
ret
adc
mov
fsubp
dec
bound
jne
sbb
js
fbld
adcl
adc
jmp
loope
jmp
int
dec
or
arpl
test
std
cltd
sti
mov
xor
and
inc
cmpsl
out
aam
rcrl
outsb
int3
sbb
jg
imul
leave
inc
add
mov
mov
scas
jge
fsubs
inc
dec
dec
into
xchg
sti
pop
out
subl
mov
subb
push
in
je
out
hlt
sub
es
xor
mov
push
scas
push
fcmovnb
fisubl
and
inc
mov
divb
cli
cltd
jns
jmp
movsb
sub
fwait
push
mov
test
dec
pop
ficoms
ss
mov
add
sbb
adc
push
sub
adcb
xor
into
rol
sub
adcl
pop
pushf
inc
add
cmpsb
add
xor
xchg
push
test
jmp
shrb
cmc
imul
sub
mov
xchg
out
push
push
jae
push
mov
pop
in
inc
nop
sub
xchg
push
inc
mov
fs
jo
hlt
xor
ficompl
inc
dec
cs
lock
gs
or
mov
sahf
jl
pushf
idiv
mov
jp
sbb
or
mov
out
mov
push
and
xchg
in
mov
mov
xchg
cld
mov
mov
and
test
cmpsb
sarb
jbe
pop
movsb
xchg
lods
inc
nop
test
xor
dec
test
sbb
sbbb
es
outsl
sub
lods
adc
je
dec
dec
xor
push
ljmp
dec
dec
cmp
mov
mov
into
inc
inc
lcall
cmp
les
test
push
xchg
inc
add
sbb
fadds
movsb
sub
lock
lahf
dec
push
fisubrl
icebp
in
adc
scas
or
lcall
inc
fdivrs
mov
mov
mov
and
xchg
mov
hlt
lods
adcb
push
daa
xor
punpckhdq
mov
into
das
jbe
pop
scas
fstps
ss
pop
int
jp
or
push
add
jb
nop
rclb
mov
out
jno
jno
lods
out
ljmp
cwtl
dec
popf
mov
sahf
insb
xor
push
jle
and
cld
lsl
sub
daa
sub
add
outsl
sbb
mov
dec
and
fstps
and
loope
hlt
es
sub
add
ret
dec
imul
pop
pop
and
out
out
lea
add
inc
pop
loop
cmpl
jmp
mov
and
scas
fwait
pop
mov
mov
xchg
mov
mov
jecxz
push
movsb
mov
xchg
out
es
lods
cmpsl
daa
adc
shlb
pop
adc
mov
in
test
out
aad
mov
test
pop
adcb
int
mov
lods
es
lock
add
and
add
sbb
in
jp
jge
mov
lea
ret
jnp
or
das
jne
adc
pop
out
daa
add
sahf
inc
mov
lods
je
pop
les
test
dec
jp
mov
and
ljmp
ss
outsl
sbb
nop
mov
xlat
sbb
sbb
sub
andl
in
out
mov
ljmp
dec
sub
adc
rorl
jnp
icebp
sbb
pop
push
and
leave
data16
iret
cmc
mov
negl
scas
cli
push
shlb
jp
push
cmc
cli
push
inc
fiadds
rolb
test
push
enter
mov
mov
insl
mov
mov
repz
push
iret
dec
mov
lahf
je
mov
xor
mov
cmc
dec
xchg
out
add
mov
dec
pop
repnz
dec
dec
ds
xchg
shlb
loopne
fistpl
and
ljmp
pop
inc
pop
sub
dec
mov
push
es
and
std
repnz
jg
xchg
pxor
fcmovnu
pop
in
mov
fildl
or
pop
mov
repz
push
gs
insl
addr16
mov
push
fsub
loopne
es
cmp
jae
out
pop
imul
repnz
jmp
xor
lcall
mov
xchg
mov
fisttpll
pop
xor
xchg
jnp
inc
std
aam
iret
jnp
xor
xchg
inc
popf
lea
pop
ficoms
pop
xchg
nop
cmpsb
mov
or
lcall
sbb
int3
inc
push
jmp
aam
movsl
pop
pusha
rclb
int3
fcomps
lahf
jo
sbb
push
xchg
adcb
sbb
loope
test
jge
dec
fistl
add
inc
mov
movsl
cmp
jno
sahf
les
or
decb
rcr
and
repnz
fnsave
jnp
in
lahf
xor
fisttpl
loop
mov
cwtl
ret
mov
add
mov
mov
mov
fldcw
pop
mov
sbb
or
or
nop
cmp
enter
cwtl
call
cmpsb
lods
sbb
cld
dec
test
hlt
sub
in
decl
cmp
aas
sub
push
jg
mov
fidivl
icebp
push
jl
inc
dec
les
pop
pop
mov
outsl
xchg
sahf
xorl
adc
cmp
sbb
mov
mov
data16
idivl
andb
pop
push
add
rolb
or
cmc
cmp
and
in
jmp
adc
mov
push
adc
daa
loopne
jle
jp
inc
and
mov
mov
lcall
mov
xchg
lret
push
repz
push
pop
mov
jns
jo
popf
add
xor
pop
adc
dec
idivl
or
rcr
xor
in
jb
push
iret
js
and
push
int3
push
subl
xchg
scas
cmc
cmp
push
cmp
lret
setg
inc
std
mov
adc
jnp
adc
inc
jne
popf
cwtl
repnz
pop
pop
cmp
xor
mov
add
xorb
out
insl
lods
or
cmp
stc
jnp
test
push
jge
pop
and
les
pop
movsl
add
ret
xor
outsl
jo
and
sub
and
push
imul
push
and
test
shrb
mov
inc
cld
test
rcrb
push
sub
test
mov
cs
je
mov
add
push
enter
xchg
sbb
and
jo
add
rcll
popa
int
adc
and
and
aas
add
jnp
ds
pop
mov
scas
je
or
out
sbb
fdivr
call
test
fwait
cwtl
add
mov
sbb
mov
mov
add
xor
loopne
and
mov
xor
pop
lods
ficoml
leave
icebp
dec
subl
push
in
cli
push
pusha
or
stc
loop
lods
and
pop
loope
push
pop
xlat
xchg
or
mov
inc
es
fwait
xor
sub
xchg
out
mov
fistps
orl
jno
or
xor
loopne
push
sbb
ror
and
push
lret
push
dec
adc
mov
lods
inc
aam
dec
hlt
imul
or
aaa
mov
push
ss
mov
ret
lcall
pop
mov
ret
mov
inc
cltd
push
fwait
enter
inc
sbb
xor
push
ss
sbb
fwait
push
adc
lods
dec
movsb
xlat
lret
lahf
pop
sub
inc
inc
xchg
dec
int3
lock
push
add
jl
inc
stos
jmp
icebp
push
xor
imul
mov
push
add
imul
sub
mov
cmp
nop
or
push
mov
cs
in
iret
out
insl
jne
add
mov
mov
or
pop
or
adc
cmc
cltd
adc
shr
ss
mov
fmull
sbb
or
repz
xchg
fists
sub
fisttpll
fiaddl
fidivl
jo
pop
fldl
mov
cwtl
stc
jno
cmp
pop
fldt
loop
es
rcrb
sbb
cld
cwtl
sub
xchg
xchg
outsl
inc
adc
push
dec
mov
je
mov
sbb
testb
sbb
push
mov
mov
mov
fcoml
jnp
mull
ret
mov
sub
movsb
push
mov
shrb
mov
hlt
mov
gs
hlt
cmpsb
add
jo
inc
shl
cwtl
rolb
xor
ja
sub
aas
jnp
lods
mov
push
xlat
xor
xchg
aaa
mov
mov
xor
mov
jg
out
cltd
pop
jecxz
sahf
sub
inc
negl
ljmp
rcr
pop
ret
mov
out
mov
xor
jne
mov
nop
adc
xchg
ret
xchg
cli
inc
enter
inc
or
pop
dec
fstl
inc
mov
aad
lock
sahf
aam
movsl
imul
shl
ss
xor
mov
fisubs
push
rcrb
mov
data16
xchg
adc
pop
mov
outsb
mov
push
push
movlps
sbb
movsl
leave
imul
dec
fsubr
sti
cmp
insb
imul
dec
lods
cmp
sahf
sbb
jns
jae
std
sbb
ljmp
and
cmp
mov
jmp
dec
aaa
int3
out
jmp
arpl
sbb
cld
stc
lds
mov
loopne
notl
jl
mov
lret
xor
ja
outsl
pop
push
test
xor
mov
test
pushf
xchg
out
jle
scas
or
or
xchg
dec
cwtl
and
or
and
push
xchg
push
je
push
cld
je
pop
cmp
sub
nop
and
ret
dec
adc
cmp
lods
lods
fimuls
mov
cwtl
inc
rcrl
mov
leave
add
add
imul
loope
mov
out
daa
movsb
cmp
roll
leave
in
sub
pop
insb
jno
sbb
xchg
mov
dec
ret
cmp
jns
dec
inc
ljmp
push
jle
xor
mov
out
das
push
dec
mov
push
push
push
dec
lahf
and
pop
call
mov
decb
imul
and
pop
sub
out
repz
lcall
jnp
inc
ficoml
lods
dec
xchg
adc
out
push
push
pushf
cmp
mov
dec
add
int
in
cli
test
jbe
sub
dec
push
push
fsubr
pop
out
mov
push
xchg
incl
push
jnp
rol
mov
into
push
sub
icebp
lret
jne
rorl
or
xchg
inc
xchg
ja
out
cmpsb
jae
frstor
bound
sbb
mov
fcos
sub
xchg
adc
jge
xchg
xor
jle
cmp
xchg
mov
mov
add
sub
cld
test
mov
aad
or
fistps
je
sbb
aas
stc
stos
xchg
out
stos
push
out
xor
mov
or
addr16
adc
sbb
mov
stos
add
fwait
and
cs
lret
sbbb
mov
in
cmp
loop
sbb
or
in
clc
jns
jns
and
leave
andb
dec
loope
loopne
xchg
outsl
add
push
push
and
mov
xchg
jb
fbstp
mov
dec
mov
nop
push
mov
cmp
pop
fwait
sub
imul
xchg
lret
outsb
daa
jle
push
insb
push
or
xchg
hlt
test
sbb
outsl
cmp
mov
xchg
push
aas
jl
pop
test
add
in
sbb
dec
iret
movsb
cmpsl
push
ds
mov
push
mov
imul
stos
outsl
gs
dec
insb
xchg
dec
cmpsb
dec
clc
dec
cmpsb
lea
outsb
and
inc
in
bound
mov
cmp
mov
nop
mov
imulb
cmpb
cli
bound
adc
dec
sbb
dec
inc
lock
adc
dec
icebp
int3
jnp
popl
outsb
dec
mov
mov
adc
xchg
sub
leave
popf
inc
int3
repnz
and
in
ss
pusha
popf
xchg
aad
lret
scas
adc
fistpl
mov
add
test
inc
adc
or
imul
mov
mov
and
xchg
pop
test
mov
mov
jge
in
mov
lods
sub
fiaddl
into
adc
inc
in
insl
add
push
bound
push
icebp
loope
push
enter
das
scas
leave
stos
or
sbb
ss
in
pop
js
mov
outsl
mov
lea
push
jbe
mov
add
jmp
repnz
dec
imul
leave
sub
out
ret
lods
out
xor
inc
imul
xchg
jns
mov
fisttps
adc
jl
sarb
cmp
xor
mov
pop
cmp
add
and
ss
dec
xchg
mov
jns
jecxz
adc
repnz
jb
shlb
xlat
scas
pop
add
ja
imul
scas
movsb
arpl
rcrl
adc
enter
leave
inc
jp,pn
sub
sub
cwtl
cmp
aam
bound
in
arpl
test
xchg
mov
ja
pop
call
ret
xchg
xchg
xchg
inc
mov
push
cmp
idivl
pop
sub
mov
pop
lods
sub
scas
fwait
mov
pop
out
add
xchg
sbbb
xor
outsb
sahf
dec
sub
sub
cld
stc
push
ds
cmp
icebp
ss
sub
lds
mov
shrb
subl
dec
sbb
cmpsl
insb
stos
les
jp
push
pop
sbb
mov
jb
sub
dec
ficoml
test
cmc
cld
push
add
sbb
and
neg
out
pop
sbb
bound
pop
ljmp
xchg
or
ret
orps
in
mov
fnstenv
mov
in
test
cld
dec
cmp
add
sbb
jmp
es
rclb
jecxz
xchg
adc
in
dec
push
out
jmp
icebp
xor
lcall
cmpb
outsb
clc
outsl
pop
insb
mov
mov
sbb
ficomps
shl
int3
movsb
mov
in
push
testb
testl
mov
jbe
icebp
cmp
insb
push
dec
cmp
sub
mov
repnz
mov
stos
sbb
xor
push
mov
orl
sbb
scas
in
outsl
jg
pop
out
xchg
loope
push
jo
inc
xchg
and
mov
mov
or
xchg
cs
mov
xchg
adc
add
mov
outsb
lea
js
imul
mov
inc
or
test
fldenv
in
mov
shl
xor
mov
and
mov
xor
adcl
add
insb
fnstcw
mov
xor
push
jp
das
lahf
push
dec
mov
cmp
push
ret
mov
inc
xchg
in
sahf
lcall
add
stc
aaa
lret
in
or
negb
push
pop
sbb
or
out
pop
inc
scas
sub
adc
pop
or
pushf
push
and
and
cmp
cmp
cs
cli
sbb
test
popf
movsl
xor
addr16
sub
cmc
jle
xchg
fwait
pusha
out
nop
push
scas
cmp
aaa
clc
pop
or
dec
movsb
movsb
pusha
adc
rol
dec
aas
mov
xchg
mov
sbb
jecxz
mov
jne
cmpsb
push
sub
jae,pn
in
add
mov
clc
fs
nop
scas
stos
insl
mov
mov
mov
rcr
inc
sub
sub
fs
adc
jbe
sub
sbb
rcll
stc
gs
in
sbb
fnstenv
adc
cmp
cmp
in
mov
ljmp
inc
push
xchg
nop
clc
cmpl
iret
in
add
arpl
lcall
jle
jmp
jle
xor
dec
dec
push
xchg
pop
push
push
push
mov
ljmp
jb
cld
mov
es
inc
scas
test
xchg
fcmovnbe
test
leave
mov
in
loopne
arpl
jmp
mov
mov
cmp
or
imul
stos
add
add
xor
xchg
cmpsl
inc
ljmp
stos
ficomps
mov
add
ret
xchg
push
and
test
push
and
sbb
and
stos
scas
js
cmp
sub
std
bound
in
mov
push
ret
xchg
sub
push
add
std
sub
stos
pop
test
mov
pop
fstpt
inc
fdivrs
inc
and
cmp
or
mov
popf
mov
pop
popa
xchg
pop
or
in
jge
jg
dec
loop
movsl
sub
push
push
mov
push
pop
movsl
pop
test
repz
mov
ss
xchg
push
xchg
and
ja
scas
inc
and
data16
imull
push
data16
push
insb
stos
movsb
gs
adc
or
jb
xorl
jp
call
add
inc
lds
jmp
in
jb
push
fistpl
fldt
mov
fstpl
inc
movsb
cmp
dec
aaa
lods
mov
subl
aas
scas
xchg
push
add
pop
shrb
das
paddb
arpl
jp
cs
mov
test
icebp
pop
inc
push
sbb
shrl
sub
xchg
add
mov
mov
dec
xchg
xlat
shlb
mov
mov
ds
and
jb
cmpsb
and
cmc
jmp
pop
lret
jmp
lcall
mov
pop
lret
add
gs
xchg
jo
cmp
aaa
add
cmp
sub
sub
xchg
scas
pop
fidivs
imulb
int
mov
jo
xchg
mov
pop
add
lret
push
outsb
cmc
sbb
cltd
inc
jno
jo
xchg
out
outsl
mov
nop
ret
pop
jbe
imul
jb
rcrl
fs
hlt
cmpsl
push
jne
mov
cld
sub
xor
std
rorb
or
cmpsl
push
sbb
mov
adc
mov
loope
and
jge
cli
loope
je
add
ret
jne
test
and
sahf
inc
mov
sbb
call
int3
mov
ret
out
xor
xchg
rcll
xchg
mov
xor
xchg
mov
mov
inc
sbb
xchg
aaa
mov
insl
jmp
lods
imul
cmp
idiv
scas
dec
xchg
arpl
pop
xchg
inc
mov
popa
mov
mov
and
xor
cmpsl
inc
sub
sbb
int3
jmp
clc
push
push
jge
rclb
into
repz
sti
inc
mov
push
xchg
xor
xchg
xchg
and
add
pop
testb
movsb
dec
dec
loopne
mov
jno
cmpsb
popa
sub
add
fistl
imul
mov
cs
scas
in
fwait
inc
cmp
xchg
add
pop
push
xor
xor
or
mov
pop
inc
dec
imul
adc
fldcw
or
popa
and
lea
cmp
arpl
jbe
jnp
fists
mull
dec
cmp
pop
in
mov
outsl
mov
shll
out
shll
push
pop
push
mov
insb
adc
ficompl
xchg
pushf
adcl
xor
in
add
icebp
in
sarl
mov
jne
jmp
subl
pop
fdivl
scas
xchg
sub
inc
mov
dec
cmpsl
jecxz
add
pop
dec
push
insb
sar
imul
aam
mov
or
mov
mov
xor
arpl
dec
rorl
push
jl
sbb
mov
jne
jb
call
int3
ljmp
cmc
inc
mov
test
in
sar
fwait
scas
or
pop
adc
mov
push
xor
daa
sbb
cltd
mov
sarl
pop
fsubl
call
ds
imul
fisubrl
adc
into
es
icebp
jbe
mov
lcall
rcrb
pop
cmc
outsb
int3
adc
scas
xor
cld
and
ffree
jo
pushf
mov
inc
dec
xorb
mov
je
lret
aas
popf
lods
mov
xor
mov
jb
in
bound
jg
mov
jne
push
cli
imul
xchg
or
jno
bound
cmpsl
out
xor
and
jns
bswap
and
je
lret
into
out
and
cmpsb
loop
adc
push
nop
loope
fmul
mov
lret
popa
mov
and
jmp
into
ud1
outsb
stos
cmpsb
nop
add
fcmovu
lods
lods
mov
pop
repnz
pop
imul
scas
js
push
loope
mov
arpl
mov
idivb
pusha
jecxz
mov
pop
mov
sbb
mov
daa
cmp
mov
into
or
sbbb
inc
ret
sarl
movsl
sbb
repz
mov
fstpl
xchg
std
in
cmp
hlt
sub
jae
test
out
jno
out
sbb
inc
lret
dec
rclb
loopne
packuswb
sbb
jmp
xchg
mov
fcmovnb
pop
ret
lods
out
sbb
or
std
std
and
icebp
cli
fsubr
lcall
mov
scas
clc
adcl
adc
dec
dec
repz
adc
dec
pop
ja
xchg
xchg
faddl
out
rcl
outsl
leave
rcll
cmpsb
or
xchg
icebp
push
lret
out
nop
inc
pop
insl
lcall
out
xchg
jge
mov
imul
add
test
gs
inc
or
push
subb
dec
jmp
sub
stos
cmc
test
xchg
inc
imul
arpl
scas
xor
jecxz
mov
add
sbb
cmp
and
ss
dec
mov
jns
out
ficomps
in
or
xchg
mov
icebp
aaa
in
xchg
sbb
pop
movsb
dec
adc
into
mov
push
sub
out
mov
xchg
add
mov
mov
push
add
adc
inc
enter
out
fs
pop
cmp
das
jno
push
mov
fistpl
mov
xor
data16
stc
sub
cs
cwtl
xchg
mov
lds
imul
pop
addl
inc
repnz
xorl
decl
lret
repz
add
dec
hlt
mov
inc
dec
out
into
cmp
scas
mov
mov
test
imul
sub
jno
push
pop
test
and
and
sbb
dec
cmp
mov
xchg
addb
ljmp
mov
and
std
dec
fsubrl
cmpsb
add
push
stc
sarb
outsl
fwait
cld
mov
repz
loopne
cli
xchg
bound
mov
fcmovb
push
test
mov
outsb
outsb
ja
and
mov
mov
lret
inc
dec
test
cmp
inc
jg
xchg
pop
sbb
push
mov
cltd
jl
mov
pop
cmp
hlt
adc
testb
inc
push
fcmovne
ljmp
scas
bnd
mov
or
clc
in
cli
inc
mov
push
push
ljmp
gs
xlat
xor
mov
mov
icebp
stos
mov
mov
fldt
imul
fisttpll
jl
andl
movsb
arpl
iret
mov
lds
adc
push
ret
pushf
leave
push
inc
iret
add
andb
dec
cmp
mov
add
aas
push
jg
pop
shll
pop
adc
add
mov
sti
cmpsb
xchg
push
dec
mov
dec
mov
rol
jo
and
into
jmp
inc
add
into
aaa
dec
pop
or
sbb
cmc
call
shrl
popa
bound
sbb
xor
movsl
lret
lret
je
iret
pop
sub
aam
sbb
aas
adc
fnsave
bound
into
movl
jl
lahf
jle
mov
xor
cmc
cmp
popa
mov
scas
push
xchg
push
mov
or
inc
add
es
imul
fucomip
sub
cli
dec
sub
insb
dec
fiaddl
bound
xor
adc
pop
div
mov
inc
test
xchg
pushf
or
mov
repz
push
mov
lds
mov
scas
mov
push
jae
cmpl
dec
xchg
pop
loopne
ret
mov
push
aaa
mov
jg
je
nop
xchg
xor
lea
mov
add
cmp
jp
dec
sbb
cmp
aas
add
mov
sub
mov
imul
cli
sub
cli
cmp
fidivrl
push
xor
push
pop
xorl
test
mov
xchg
mov
jns
repz
leave
loopne
push
aaa
cmovle
rol
cmp
test
test
sub
jns
into
pop
inc
inc
inc
mov
stos
shrb
mov
jb
cmp
inc
out
mov
push
lahf
push
ret
pusha
or
cmp
xor
test
add
das
jl
pop
aaa
cmpsb
xor
jl
jecxz
push
cmp
ds
cmpsb
xor
add
insl
lea
xchg
push
or
decb
ja
and
push
lahf
xorl
jle
je
fldt
or
ucomiss
mov
jecxz
mov
or
cmp
xchg
xor
scas
inc
movsb
cmp
iret
outsl
ljmp
int3
pop
and
and
cmpsl
inc
daa
cmpsl
mov
xchg
sub
lds
notb
aad
jbe
mov
cmp
cmpsb
loop
inc
jp
repz
mov
lock
push
jbe
std
and
or
daa
outsb
test
gs
sub
jmp
lods
fwait
xchg
mull
sbbl
and
stos
loop
add
jo
sahf
jne
rol
jmp
rolb
add
andl
imul
adc
add
hlt
cmp
mov
xor
mov
or
jecxz
add
xchg
int3
sub
je
mov
icebp
enter
mov
sti
ret
or
negl
pop
cli
idivl
pop
imul
es
shll
mov
xchg
scas
stc
xor
sahf
sahf
imul
xlat
pop
xchg
movsb
out
lods
jecxz
jmp
rdtsc
pop
lret
stc
xor
sbb
mov
call
fcoms
push
inc
inc
mov
jp
pusha
mov
loope
stos
pop
cmp
repnz
out
sarb
pop
lods
push
enter
adc
into
out
mov
ljmp
mov
ficoms
dec
jns
inc
lcall
or
mov
jne
ja
sbb
push
jb
xor
push
sbb
xchg
jb
or
mov
sub
cld
mov
testl
mov
or
and
adc
ljmp
xchg
adc
sub
out
pop
pop
push
out
sub
shr
out
shlb
mov
hlt
das
sbb
out
adc
cmp
scas
adc
imul
add
jo
jecxz
push
leave
mov
fs
popa
test
cmp
add
jp
and
mov
push
outsl
add
mov
mov
lods
cmpsb
subl
addr16
stc
xchg
add
pushf
aas
icebp
jge
jmp
lahf
dec
mov
fdivl
addl
add
xchg
movsl
lahf
mov
or
les
rcrb
aam
lret
sbb
jecxz
fsubl
sbbb
jne
mov
fldl
lret
push
pop
aam
decb
pop
cmp
or
fistl
jnp
pop
mov
gs
popa
repz
mov
stos
add
in
dec
stos
je
jge
xor
cmc
mov
xchg
aaa
pop
mov
xchg
xchg
sub
ss
out
test
jecxz
mov
adc
decl
decl
into
notb
aas
jle
aaa
jbe
xchg
adc
xor
dec
test
dec
pop
fisttpl
sub
outsb
scas
ss
shlb
std
jl
lret
and
and
jnp
sbb
lcall
outsl
mov
sbb
and
mov
es
out
fldt
das
les
cmp
inc
cld
add
inc
sbbb
and
jns
xchg
roll
push
ret
jo
add
fisubs
cwtl
mov
dec
inc
add
mov
out
mov
repnz
divl
or
sub
vpackssdw
inc
add
pusha
scas
cli
xchg
fldt
push
push
ficoms
lahf
pop
es
xlat
inc
test
mov
pop
scas
repnz
insl
aas
push
inc
fisttps
idiv
cmp
fbld
push
mov
lret
pusha
sbbl
mov
repz
xor
jge,pn
pop
pop
jb
cmp
shld
in
fstpl
and
or
ds
js
mov
inc
xor
xorl
int
or
daa
push
std
testl
out
add
jbe
movl
mov
sbb
inc
into
movsl
jle
popf
sub
pop
loop
xchg
jp
mov
fbld
aad
filds
xchg
jb
mov
jle
cmp
inc
jmp
push
dec
fiaddl
ja
out
in
pop
lock
jmp
inc
add
xchg
out
dec
mov
inc
loop
lret
rclb
xlat
xchg
pop
insb
xchg
jecxz
fimull
mov
add
out
mov
test
sub
mov
stos
cmp
mov
lds
loopne
stos
imul
jle
inc
sbb
cwtl
sub
imul
adc
cwtl
pop
adc
mov
out
jnp
test
and
out
mov
fidivrl
rolb
pop
test
sbb
out
outsl
mov
jg
call
insb
mov
xor
imul
mov
jg
pop
in
outsl
xchg
mov
call
popa
xchg
inc
je
popa
mov
and
and
pop
enter
mov
add
jle
sbb
fiaddl
ret
lods
sbb
push
push
mov
cmp
mov
movsl
jnp
dec
es
leave
dec
mov
adc
xchg
xchg
sub
dec
sbb
and
mov
sub
insb
test
pusha
push
jne
sub
cmp
mov
jge
push
scas
mov
mov
ds
out
cmc
mov
jmp
divl
add
arpl
out
dec
in
dec
jo
cs
hlt
je
outsb
mov
jecxz
push
lret
mov
adcb
ja
and
bound
inc
cmp
push
arpl
mov
add
mov
outsb
dec
push
popf
cli
jle
add
cmc
inc
or
xchg
pop
pushf
push
test
inc
mov
adc
xor
repnz
adc
idiv
inc
inc
movsl
insb
mov
rolb
sub
cli
xchg
push
test
les
xchg
aas
scas
pushf
je
push
imul
jbe
in
sbb
mov
int
mov
hlt
psubb
sub
les
not
mov
pop
jmp
mov
ss
cmpsl
dec
inc
negl
sub
stos
ljmp
popf
and
loop
sub
sub
add
or
xor
in
cmp
sahf
and
aas
stos
dec
jg
cmc
jae
sub
popa
xchg
test
mov
lds
push
xor
movsb
fstps
mov
pop
mov
mov
aam
jp
lods
xor
mov
mov
and
push
movsl
push
jg
push
in
sbb
dec
sub
stos
sbb
in
loope
stos
or
xchg
mov
jp
push
cmp
fistpll
inc
decb
xlat
sub
sub
sbb
sub
movsb
std
xchg
pop
inc
and
push
mov
xchg
lret
cmpsb
fs
add
call
mov
xchg
iret
pop
imul
lahf
lret
sub
call
adc
mov
xchg
insl
xor
xchg
pusha
mov
imul
pop
fsts
sti
push
jno
xorb
push
fbld
xchg
mov
sahf
push
fwait
cltd
fsubs
jnp
or
pusha
daa
fwait
hlt
cmp
ficoml
jmp
cmp
push
cmp
dec
cltd
aam
icebp
cmpsl
mov
xorb
jnp
mov
sub
and
aas
popa
mov
xchg
xor
cmp
dec
rcr
xchg
adc
jp
fldcw
cmp
adc
jb
mov
xor
into
jle
ficoml
imul
bnd
cmc
pushf
cs
sbb
movsl
cmp
mov
inc
pop
pushf
ds
fstpl
sub
ret
test
mov
mov
js
mov
jns
pop
and
and
out
dec
lds
add
cs
pop
fcoml
add
scas
ds
push
fmull
mov
and
mov
cmc
mov
std
dec
adc
xchg
sub
mov
inc
add
cmpsb
add
push
or
outsb
adc
push
lock
push
push
mov
xchg
out
adc
mov
shlb
dec
cmpsb
adc
xchg
test
sub
cltd
jns
andl
jge
sbb
mov
sub
jl
jg
jge
outsb
dec
lcall
xchg
cmp
cltd
cmp
pop
cmp
lods
pop
andl
bound
adc
dec
loope
aaa
enter
inc
test
push
sbb
rorb
xlat
scas
mov
push
adc
add
incl
jl
mov
mov
xchg
jle
dec
adc
add
mov
loope
in
inc
out
das
jns
adc
dec
cmpsl
xor
sbb
das
pop
push
pop
fwait
push
int3
add
rcll
jecxz
dec
or
insb
inc
loope
xchg
iret
adc
xchg
push
popf
sub
nop
fisubrl
fcmove
mov
repnz
les
xor
jle
cltd
mov
pop
pop
js
cmp
adc
sbb
out
add
and
or
push
sti
xchg
pop
lahf
dec
lret
or
scas
cmp
cmp
sbb
sbb
movsl
lds
pop
push
push
cld
hlt
sub
stos
mov
lds
leave
sbb
sub
mov
add
fstl
sbb
shll
or
pop
adc
loopne
fwait
sbb
pusha
cmp
ljmp
sub
inc
nop
add
aas
mov
mov
into
or
daa
das
xor
mov
xchg
mov
pop
adc
fwait
outsl
pop
adc
inc
stos
pop
cwtl
ret
or
jne
sub
jle
cs
pop
cmp
mov
mov
sbb
test
push
pushf
cmpb
or
sbb
divl
jle
int
pop
xlat
leave
xor
jp
push
fdivs
mov
jg
jmp
popf
pop
pusha
sub
test
js
cli
mov
adc
mov
xlat
pop
inc
pusha
push
dec
pusha
out
sti
pop
adc
fwait
iret
xor
aas
ret
inc
jmp
push
nop
cmp
xlat
in
xchg
imul
jecxz
scas
push
jp
into
mov
mov
inc
or
aas
imul
jl
xlat
dec
mov
jbe
out
push
pushf
dec
adc
mov
lock
movsl
movb
clc
pusha
sbb
add
mov
in
test
mov
sbb
rol
mov
pop
push
fisubrs
pusha
inc
xor
mov
push
pop
cmp
xor
or
and
fcmovnu
ss
outsl
inc
fs
sahf
inc
sub
adc
or
xchg
mov
fsqrt
xchg
mov
push
pushf
jecxz
cs
push
mov
cwtl
out
cmp
mov
js
xchg
out
jmp
cmp
or
cld
push
mov
xor
sbb
popa
lods
lcall
sbb
or
call
lcall
and
mov
nop
in
hlt
mov
iret
aad
pop
fisubrl
mov
inc
aas
imull
into
or
cli
inc
dec
mov
pop
jae
loopne
popl
xchg
xor
loop,pt
xchg
scas
in
adc
push
push
xchg
test
rolb
cmp
cmc
pop
jnp
adc
aaa
nop
sub
daa
cld
dec
push
sti
xor
cmpb
out
decb
sahf
cmp
mov
cwtl
push
cli
xchg
inc
push
rcrl
insl
and
mov
xchg
clc
mov
sub
test
jg
dec
mov
sbbb
sub
lds
mov
fistl
dec
clc
cmpsl
popf
outsb
orl
mov
fcompl
and
sarb
andl
repz
sbb
jno
jl
cs
pop
inc
push
or
repnz
cs
mov
test
mull
jb
adc
mov
hlt
stos
int
cld
arpl
and
mov
push
in
and
jmp
xor
addr16
int3
sub
sub
xchg
mov
test
cs
mov
lret
cmp
add
mov
add
repz
dec
inc
jmp
outsb
inc
fistpll
popa
jb
mov
jl
pusha
dec
int3
pop
into
pop
push
fimull
xchg
mov
scas
in
cwtl
loope
or
xchg
inc
adc
sbb
in
fstpt
je
mov
xchg
cmpsb
xchg
sar
pop
arpl
pop
out
dec
mov
shll
cmp
fdivrl
dec
es
mov
jbe
push
mov
imul
shll
mov
xor
cwtl
jb
cmp
hlt
add
fs
pop
inc
pop
mov
leave
sub
in
mov
mov
adc
jo
pusha
push
lock
mov
push
pop
sbb
les
xor
fdivrs
inc
pop
xchg
fldl
addr16
push
and
or
movsb
mov
aas
jmp
aaa
and
mov
dec
loopne
movups
and
paddusb
cmpsb
dec
inc
mov
bound
dec
cmp
pusha
pushf
or
or
mov
imul
rep
and
ss
pop
jns
pop
push
adcl
xchg
mov
sbb
push
clc
dec
adc
arpl
xor
adc
and
dec
sbb
dec
movsl
jnp
cli
push
out
fimull
add
add
mov
adc
dec
out
push
sahf
dec
jge
jb
sahf
cli
out
adc
jae
dec
test
sbb
adc
dec
push
xlat
jl
xorl
adc
sbb
popa
ficomps
lea
adc
mov
fidivrl
test
and
mov
dec
cmp
outsl
mov
sbb
jle
mov
ret
sub
insl
adc
or
in
adc
cmpsl
inc
mov
or
rorl
pop
xchg
cwtl
int
inc
and
xor
into
pusha
pushf
add
xchg
sbb
popa
rorl
fimull
xchg
sub
adc
mov
in
fmuls
jno
mov
call
js
xor
sub
push
js
subb
jno
out
push
sbb
es
cld
icebp
fnclex
cwtl
inc
ficomps
arpl
popa
les
jge
movsl
and
cmp
setg
mov
out
sbb
daa
leave
dec
xlat
imul
push
mov
rcll
inc
dec
push
sbb
mov
cmp
pop
jmp
and
pusha
ret
add
aad
mov
sub
rclb
stos
sub
push
fnstenv
xchg
push
in
push
inc
or
or
rorb
rcll
mov
ja
clc
cwtl
les
push
add
ja
push
adc
cld
push
cmp
sbb
outsb
and
xchg
mov
push
das
fistpl
scas
mov
sbbl
xchg
rclb
movsb
adc
and
mov
mov
jl
lcall
mov
int
mov
jmp
mov
cltd
add
dec
movsb
dec
xchg
pusha
jmp
mov
mov
std
pop
mov
mov
push
faddp
lret
push
push
pop
jecxz
outsl
sub
adc
inc
fcmovnb
pop
lea
jmp
clc
daa
rorl
xlat
xchg
pop
aaa
xchg
dec
jg
mov
inc
push
ror
leave
ljmp
dec
fs
jns
mov
popl
dec
clc
stos
jne
jecxz
cmpsl
jg
sbb
mov
out
push
ret
sti
jnp
cmp
and
jno
sbbl
repz
pop
mov
pop
push
push
es
adc
xchg
loope
in
jns
or
mov
mov
xchg
sbb
shlb
mov
fbstp
arpl
sti
mov
fcmovb
xor
nop
stc
xorl
repz
and
mov
sub
popa
pop
addr16
inc
outsb
or
lods
in
int
lock
sub
in
out
or
cmp
fcoml
pop
lods
jae
dec
sub
xor
cmpsl
out
cmp
aam
xor
add
lea
xor
rorb
fistps
stc
lods
jnp
int
cmp
cmc
sub
popf
or
push
in
cmp
clc
loop
clc
push
or
and
fistpll
pop
jbe
mov
iret
jmp
pop
mov
into
push
push
cmpsl
movsb
add
dec
insl
sbb
or
int
outsl
mov
lods
test
push
and
lock
adc
adc
mov
pop
outsl
fisubrs
add
cltd
test
leave
orb
ds
xlat
bound
xor
ds
bnd
and
sub
jle
pop
pop
dec
adc
pop
inc
cmp
mov
inc
or
dec
daa
mov
cmp
xlat
out
xor
inc
or
fimull
jp
outsb
lods
sahf
mov
jns
and
test
mov
xchg
adc
mov
and
jno
fsts
xchg
cmp
mov
test
xchg
inc
jl
cmc
aas
mov
mov
setne
xor
aam
ret
rorb
xor
xor
cmp
cltd
mov
push
enter
jbe
dec
xchg
mov
bound
adc
and
cmpsl
mov
lea
dec
xchg
sub
lods
stc
cld
xchg
outsb
xchg
xchg
xchg
mov
test
fistpll
jnp
mov
dec
cmp
adc
add
mov
fidivrl
inc
js
cmp
push
xor
dec
xorl
idivl
popa
pop
jge
imulb
jo
mov
scas
sbb
push
jge
jmp
daa
bound
je
das
mov
paddw
jb
mov
repz
inc
out
and
scas
shll
mov
enter
pop
out
in
cmp
dec
mov
and
inc
enter
mov
sbb
sub
mov
dec
in
xchg
dec
daa
popa
out
mov
pop
sbb
filds
js
pop
push
stc
jmp
dec
sub
cld
rclb
je
pop
inc
xchg
int3
lock
adc
pop
repz
out
jle
mov
or
lds
fildll
jl
xor
xlat
add
pop
mov
lret
sbb
out
sbb
movsb
loope
push
js
decl
es
pop
scas
pop
xchg
outsl
incl
test
xchg
int3
xor
dec
pop
push
cmpsb
add
sbb
and
repz
cld
addb
inc
iret
dec
sub
out
xchg
push
push
hlt
shrl
jb
lds
loopne
jmp
jno
bound
cmp
mov
dec
sub
push
outsl
mov
adc
icebp
sahf
mov
mov
lahf
push
dec
mov
jae
or
mov
pop
xor
jne
pop
mov
jbe
push
mov
stc
inc
icebp
adcb
inc
or
cwtl
pop
js
cmp
fistpl
mov
xchg
outsl
leave
add
cmp
test
and
fisubrs
push
sbb
xchg
or
rorl
jae
mov
push
mov
lahf
jle
out
scas
rcrl
in
ljmp
pop
xor
push
aam
in
fnstcw
inc
dec
jb
jecxz
lret
xor
push
ja
lcall
cmp
fucomip
mov
jno
clc
or
andl
lcall
pusha
push
cltd
out
int
or
insb
gs
pop
jae
and
mov
jno
icebp
mov
popa
sbb
ret
xor
int
and
xlat
testl
push
fistps
in
cmp
cmp
and
push
inc
std
xchg
adc
push
jne,pt
sbb
fistl
and
lret
push
icebp
adc
mov
mov
jmp
xlat
insl
cli
lcall
and
dec
pop
push
push
popa
jae
jno
rol
push
shll
adcb
outsl
pop
sub
or
mov
movl
pop
mov
and
xor
std
push
mov
add
insb
xchg
aas
and
jbe
sbb
popf
subl
jge
xchg
sbb
subb
repz
daa
lret
xchg
inc
mov
sub
dec
test
imul
lea
sbb
mov
cmp
sti
nop
mov
mov
mulb
ret
xorl
into
stc
push
popf
sbb
jmp
xchg
mov
negl
aad
adc
lahf
js
sbb
test
mov
mov
mov
xchg
loop
test
enter
mov
std
sbb
and
cmpb
jle
enter
mov
out
out
out
cmp
je
call
or
int
cli
xor
repz
les
cmp
je
and
cmp
aam
mov
leave
jle
inc
dec
and
les
sub
insl
ficomps
pop
in
sar
outsb
call
orl
add
and
jae
outsb
sub
xor
cmpsl
cmp
fidivrl
jb
inc
xlat
dec
inc
lcall
mov
aam
or
add
xchg
outsl
shll
xchg
and
pusha
fiadds
jb
rdpmc
lea
in
cmc
inc
inc
arpl
jne
mov
add
dec
sbbb
xchg
and
or
and
mov
xchg
div
test
jecxz
inc
inc
dec
pop
fs
xor
mov
pop
mov
pop
jns
sbb
aad
test
and
mov
pop
fisttpll
xor
cmc
fmuls
mov
dec
pop
cmpb
cmp
mov
cmc
sub
mov
push
xchg
push
insb
mov
aas
add
jl
lahf
addr16
lret
in
add
jecxz
cmp
and
out
shlb
sti
mov
sbb
or
sub
rcrb
lds
daa
rol
dec
mulps
jmp
in
rcr
into
addb
jo
stos
pcmpgtw
sub
gs
orl
insb
dec
mov
fsts
cmp
leave
movsb
enter
xchg
ret
rcrb
inc
and
adc
jmp
xchg
lods
fucomip
data16
icebp
mov
out
enter
mov
pop
xchg
pop
jnp
or
outsl
push
cli
pop
pusha
les
punpcklwd
pushf
mov
mov
inc
or
pop
push
adc
mov
je
jle
lods
cmp
ds
insl
pandn
stos
mov
in
test
push
fcmovb
sbb
add
out
xchg
pop
negb
jge
xor
xchg
or
shll
in
or
mov
in
cmp
ss
push
test
inc
pop
mov
push
cli
mov
inc
xor
sub
push
lret
pop
cmc
xor
sbb
stos
testb
dec
pop
sub
shl
lock
mov
mov
aaa
cmp
add
adc
and
inc
loop
leave
pushf
es
push
mov
adc
pop
mov
push
out
adc
push
pop
mov
ljmp
mov
add
lcall
pop
cld
jbe
mov
mov
stc
pop
adc
mov
fistl
ficoml
mov
dec
sub
movb
or
add
jb
lea
sahf
add
mov
outsb
adc
mov
mov
sub
testl
adc
ret
add
push
dec
push
push
shrb
lret
aaa
sub
mov
into
or
sbb
inc
add
rol
addr16
aas
or
adc
bound
add
hlt
daa
xor
daa
loopne
dec
sbb
push
iret
loope
sub
push
xor
dec
jb
int
daa
inc
icebp
gs
arpl
das
ss
mov
insb
pop
and
lahf
cmc
push
mov
jo
pop
jns
xchg
movsl
xchg
xorl
add
push
sbb
cli
xchg
cmp
xchg
and
inc
loop
xor
jmp
add
andl
mov
xor
int
xchg
xchg
pusha
add
andb
js
fistps
mov
mov
inc
stc
mov
jnp
and
mov
mov
out
rol
sub
pop
mov
dec
mov
adc
mov
sarb
pop
lret
test
dec
aaa
cmp
mov
mov
out
pop
scas
inc
push
iret
notb
xchg
ss
dec
push
push
sbbl
sub
xor
pop
popa
xchg
cld
mov
jge
ss
arpl
scas
int3
cld
imul
ja
stc
daa
mov
cmpsl
dec
sbb
test
mov
pop
or
hlt
ds
jl
sbb
push
mov
aam
leave
cwtl
sbb
add
pushf
mov
pop
aam
lret
fidivrs
in
mov
adc
push
js
push
mov
fisubs
sahf
fcom
movsb
mov
jp
cmp
dec
ja
push
add
add
rorb
pop
cmpsl
and
and
insb
push
sahf
cmp
dec
popl
xor
jle
es
cmpsb
inc
int
orb
cmp
add
jbe
xchg
sahf
out
dec
push
mov
stos
call
ret
mov
or
add
push
outsl
out
and
aaa
dec
outsb
int
es
scas
sbb
lea
xchg
pop
insb
cli
pop
and
test
sub
xchg
lcall
pop
cwtl
shlb
ljmp
jbe
test
adc
inc
xchg
sti
push
es
sub
sbb
fbld
add
rolb
sbb
outsb
sub
and
js
xor
bound
jl
cmp
or
lods
shlb
fcoml
mov
es
les
sbb
dec
out
out
jmp
imul
pop
push
inc
push
sbb
loope
imul
sbb
cli
pusha
inc
or
xchg
or
out
shrb
or
addr16
inc
push
scas
pop
add
adc
in
or
add
nop
out
or
and
jp
bound
add
adc
aas
repz
dec
mov
repnz
xchg
fdivrs
mov
fdivrl
pop
jnp
pop
mov
mov
insb
mov
jb
aam
into
daa
subb
mov
mov
pop
or
sub
or
mov
sbb
cmc
shrb
inc
cmp
jne
mov
sahf
dec
sbb
clc
and
jl
mov
pop
jne
push
mov
and
xchg
scas
lret
mov
ja
das
ficoml
push
mov
pop
nop
xor
mov
stos
add
push
xor
cmp
cli
jbe
dec
adc
jle
dec
jg
pusha
or
repz
test
or
xor
mov
adc
or
xchg
cmpsl
adc
fsub
icebp
repnz
test
icebp
enter
daa
das
add
and
pop
inc
out
push
push
mov
mov
bound
xchg
cmp
outsl
cmp
dec
add
mov
jae
or
push
mov
shll
dec
test
lcall
pushf
cmpsb
adc
into
xchg
mov
sbb
fstl
add
xlat
inc
mov
cmc
test
xchg
es
xor
jo
jae
or
sbb
jnp
test
mov
jecxz
xor
in
sarb
popf
mov
out
cmp
inc
faddl
xchg
pop
imul
shll
jnp
adc
sbb
mov
outsb
or
mov
pop
into
dec
rcll
xchg
prefetcht0
jbe
fsubs
cld
xchg
adc
imul
cmpsb
lods
fstpl
test
insl
daa
mov
cmpsb
in
sbb
sub
ja
push
dec
sbb
push
jbe
mov
cltd
mov
fldl
push
test
ficoms
cmpsb
fsub
mov
xchg
popl
or
mov
cltd
cli
sti
push
js
push
ret
shr
insb
roll
inc
mov
testb
dec
aad
insb
mov
rclb
loope
ficoml
dec
push
sub
les
pop
jbe
sub
fbstp
add
push
pushf
mov
push
imul
jne
fldl
or
or
mov
add
js
mov
inc
add
fsubs
mov
jg
fcoml
dec
fwait
nop
pusha
lahf
cwtl
mov
or
loopne
adc
xchg
in
cmpsb
cmpsl
and
mov
pop
jnp
sub
insl
mov
arpl
push
inc
je
out
adcl
repnz
arpl
das
jae
sarl
scas
repz
xor
inc
lock
pop
dec
jnp
out
insl
inc
fnstcw
cmc
ret
or
add
xchg
clc
sbb
cmp
pop
push
lea
fwait
mov
push
dec
rcr
sbb
enter
mov
ljmp
aam
fwait
and
int3
sti
cmp
adc
arpl
mov
ret
loopne
into
fisttpll
in
inc
stc
sbb
mov
and
shll
mov
sbb
pop
push
pop
movsb
cmc
pop
cmp
addb
test
xor
inc
in
dec
loopne
sub
test
ret
adc
adc
ret
outsb
lds
cli
fmuls
adc
fs
inc
rol
or
xchg
popa
mov
sub
dec
call
insl
fisttps
lret
stc
add
push
sbb
add
pop
int3
sbb
xchg
cwtl
xchg
xchg
lret
pop
int
sbb
inc
lock
std
in
test
test
repnz
inc
sbb
mov
gs
sub
rcrb
js
add
inc
cmp
mov
into
jae
shl
xor
mov
or
adc
pop
cltd
add
and
std
test
cmp
push
flds
pop
sub
dec
mov
add
inc
add
fadds
and
push
jns
stc
sub
adc
jo
in
pop
test
xor
rorb
or
loop
inc
js
and
insl
or
adc
or
lea
xchg
adc
xchg
ret
sbb
loop
add
aam
push
jge
mov
lret
insl
or
push
cli
in
sub
adc
insl
in
pop
cs
fimull
sbb
repz
ffreep
pop
dec
cwtl
sub
in
mov
adc
push
ret
mov
ret
inc
jne
push
adc
mov
lahf
loopne
das
dec
mov
in
add
mov
push
or
js
push
add
inc
fldenv
cwtl
push
or
cmp
popa
dec
rol
add
in
imul
mov
adcl
sbb
dec
mov
lea
lock
int3
jl
xor
mov
test
fdiv
fistl
push
imul
sbb
mov
adc
movsl
sbb
xlat
and
jb
push
mov
lds
decb
insb
es
mov
mov
pusha
call
jb
test
loop
push
dec
out
movsl
and
rcll
cmpsb
mov
dec
pop
and
dec
sbb
subl
xchg
dec
sbb
jne
lock
xchg
fistpl
pop
sti
jp
mov
lea
fmull
sbb
cwtl
pop
pop
mov
dec
add
scas
or
aad
enter
cmc
pop
shlb
or
dec
mov
mov
and
jo
nop
addl
push
or
sub
enter
sbb
sbb
inc
shll
mov
movsl
adc
xor
or
push
lcall
push
add
xor
jl
das
and
dec
mov
jnp
pop
out
sbb
mov
jnp
jo
mov
mov
pusha
add
lret
add
in
addr16
mov
or
pop
mov
ds
jbe
mov
jnp
pop
mov
jmp
jbe
jae
je
xchg
mov
mov
inc
imul
or
jbe
out
dec
pop
jle
xchg
hlt
inc
into
frndint
push
xchg
lods
rorl
xchg
mov
xor
dec
lea
sti
cmp
test
sbb
sub
loope
adc
repnz
fs
add
mov
inc
or
scas
inc
jns
loopne
jns
dec
nop
xor
outsl
inc
dec
inc
mov
adc
das
xor
rorb
std
out
add
lods
jl
in
mov
push
lea
inc
push
repnz
add
mov
dec
fs
popa
clc
dec
mov
rcrl
popa
pop
mov
cs
inc
movsb
mov
mov
outsb
pop
test
psraw
dec
sub
aaa
pop
adc
nop
xchg
adc
test
outsb
imul
dec
jmp
add
dec
inc
ja
insl
add
add
insb
add
adc
aaa
dec
call
mov
jl
ret
loope
sbb
test
pushfw
dec
insl
pop
push
mov
fadds
cmp
clc
call
lods
dec
push
rcrl
repnz
inc
push
hlt
pop
or
pushf
cld
inc
mov
dec
push
jb
sbb
cli
and
sbb
xchg
clc
enter
sahf
mov
mov
mov
int3
mov
dec
jecxz
mov
adc
fwait
lods
mov
negb
int
xchg
xchg
gs
jp
data16
push
xchg
inc
mov
xor
inc
mov
cmc
pop
cmp
adc
pop
xchg
bound
push
or
iret
push
es
inc
loop
xorl
mov
push
inc
andb
lds
lods
frstor
xor
inc
je
outsl
sub
ret
wbinvd
mov
xchg
shrl
andl
rorb
pushf
add
aaa
xor
xchg
fcmovb
cs
imul
adc
jp
sbb
pop
and
and
fbstp
insl
icebp
jbe
roll
roll
mov
push
mov
adc
dec
jl
outsl
dec
sbb
repnz
call
push
xchg
or
cltd
pop
das
repz
mov
out
or
incb
loope
insb
iret
push
and
lret
int3
xor
test
lahf
lock
ja
mov
fldt
enter
dec
inc
into
fisubl
sub
stos
insb
loopne
shlb
sbb
popa
es
inc
clc
or
push
jp
dec
cmp
mov
decl
push
cmc
mov
lcall
or
pop
in
push
addr16
imul
das
mov
pop
add
test
std
xchg
in
std
rolb
int3
jns
hlt
jecxz
or
sbb
jmp
jne
mov
pop
or
pop
ss
daa
insl
enter
subb
mov
jne
jns
sub
sub
push
push
stos
pusha
rol
pop
je
pop
sbb
mov
bound
xchg
ret
and
pop
push
jae
into
jge
movsl
push
adc
push
and
mov
push
and
nop
ljmp
addr16
cmpsl
fmull
ja
cld
mov
cmpsl
daa
inc
enter
popa
insb
mov
or
fsub
sbb
adc
in
addr16
jmp
aaa
jnp
faddl
xorb
xor
bound
popf
es
pushf
lcall
sub
into
test
add
pop
roll
or
sub
xor
mov
inc
cmp
push
cltd
pop
lahf
cld
jae
push
testb
and
hlt
pop
sub
adc
mov
ret
fstpt
and
aam
nop
pop
loope
lret
gs
sbb
mov
mov
rolb
xchg
test
lods
push
xor
loope
push
pop
mov
inc
xor
ds
inc
mov
fbstp
lods
rol
rorl
push
pushf
adc
btr
jno
fstpl
or
push
mov
aam
pushf
dec
pop
push
test
dec
fnstsw
pop
lods
sbb
mov
lahf
dec
pop
add
rcrl
sbb
ja
push
jle
fistl
sbb
ja
mov
inc
les
xchg
fcom
fldz
pushf
inc
sbb
in
sahf
adc
lods
sub
lcall
hlt
andl
mov
fwait
es
jbe
add
cmp
lods
imul
pop
ss
addl
dec
jle
push
xchg
scas
aas
and
popa
leave
ja
test
fadds
or
bound
cmc
mov
adcb
rolb
mov
gs
mov
repz
loope
daa
inc
pop
sub
sbb
movsl
in
scas
aad
lods
imul
stos
and
sub
scas
addb
loopne
dec
fidivrl
int3
pusha
mov
xchg
stos
pop
lret
mov
or
cmp
lcall
jp
into
imul
out
out
push
inc
push
into
loop
es
fldl
pushw
xor
lret
xchg
fimuls
inc
mov
stc
dec
inc
pop
scas
sub
xchg
add
mov
push
repz
mov
push
in
and
or
jp
sub
xor
sarb
dec
in
fbstp
stos
dec
sub
cmc
cltd
mov
mov
iret
push
mov
js
pushf
push
aaa
outsl
out
mov
out
rcrb
test
rol
popa
jb
ret
pop
fistpll
push
aaa
xor
mov
and
leave
in
pop
sub
jge
gs
push
fldenv
and
and
or
dec
arpl
mov
lods
js
xor
clc
jo
sub
pop
sbb
loop
cld
push
das
sbbb
push
lahf
cmp
or
inc
test
stos
sub
and
mov
mov
sub
mov
aaa
inc
cmp
and
push
xchg
push
and
push
ljmp
xchg
pop
aam
les
push
mov
sahf
mov
fidivrs
jne
pusha
aam
push
cmp
dec
mov
cmp
add
sub
jb
in
lds
out
test
daa
test
scas
pop
rorb
cmpsl
jl
gs
fimuls
inc
mov
dec
or
or
mov
in
inc
fdivs
rcll
dec
adc
test
sbb
jnp
xchg
mov
inc
jb
pushl
shlb
cmp
mov
movsb
push
pop
or
lods
add
and
fiaddl
ss
sbb
adc
sar
dec
stos
add
xor
xlat
push
mov
fwait
jmp
imul
popa
xchg
leave
mov
mov
and
add
cmp
or
push
aam
pop
inc
dec
xchg
ljmp
or
mov
cs
ret
dec
imul
lock
icebp
adc
call
or
mov
push
bound
jo
in
in
sbb
adc
mov
jg
mov
and
xor
iret
test
loop
jp,pt
icebp
and
nop
push
inc
xor
mov
in
sub
cmp
xor
and
int
or
mov
movsb
loope
adcb
in
and
loope
push
push
rol
sub
dec
std
adc
out
test
xor
nopl
test
insb
push
pop
sahf
adc
jo
xlat
xchg
pop
lret
sub
sub
dec
ret
je
daa
jl
cld
adc
dec
ljmp
sub
pop
adc
repz
jnp
mov
push
add
mov
shrl
mov
movsb
pop
add
sbb
xor
adc
inc
push
ret
push
inc
insb
jp
movsb
jecxz
add
fs
in
sbb
pop
popa
xchg
and
in
aad
mov
ljmp
mov
in
int
sti
mov
sbbb
push
in
mov
ds
mov
mov
fdivs
mov
and
xor
imul
adc
mov
cmp
addr16
push
shll
enter
gs
repz
xchg
pop
add
jnp
push
sti
dec
and
lock
jl
xchg
jbe
dec
pop
xor
mov
mov
inc
mov
movb
cmp
enter
les
jo
dec
xchg
pop
mov
adc
jl
inc
out
aam
mov
push
stc
add
enter
jmp
sarl
clc
rcrl
sbb
adc
mov
and
mov
jge
pop
push
mov
xchg
mov
dec
dec
mov
fsts
pop
mov
lret
add
push
movsb
add
repz
xchg
and
in
lcall
add
adc
test
xor
repz
add
fwait
xchg
ja
pop
das
add
push
or
or
cmovle
shll
xor
adc
and
mov
popf
inc
mov
mov
ds
pop
pop
pusha
fsubrs
aas
xlat
test
dec
pushf
adc
push
add
cmp
in
add
jne
movsl
roll
push
in
or
sub
jl
sbb
mov
cld
cmpsl
cmpsb
adc
imul
js
dec
xor
or
std
sti
enter
out
or
dec
xchg
divl
enter
add
pop
std
sub
or
lock
adcb
mov
inc
sbb
popa
clc
dec
nop
xchg
jg
push
test
mov
cmp
dec
lret
sub
and
roll
sbb
fistps
je
push
mov
inc
fldcw
lret
adc
xor
cmc
mov
lea
dec
mov
mov
sub
inc
inc
inc
xor
scas
rcrb
pop
nop
popa
add
jno
sbb
je
test
insb
ljmp
xlat
insb
adc
out
add
mov
popa
inc
cmp
mov
push
jge
jg
out
push
aad
mov
cmp
ret
hlt
pop
adc
or
fcmovbe
cmpsb
sub
js
stos
imul
lret
into
xchg
push
sbb
lock
mov
mov
aaa
test
cmpsb
and
lods
cli
dec
aaa
pop
cmp
mov
mov
xor
bound
lret
and
adc
sub
popf
lds
repnz
inc
dec
mov
out
aaa
fsubrs
cmp
adc
mov
mov
ss
rclb
outsb
mov
sub
cmp
mov
sub
inc
cwtl
mov
scas
cli
data16
aam
lock
jo
inc
lock
push
lret
xchg
in
or
jae
push
pop
icebp
xor
pop
xlat
xor
outsb
shlb
mov
int
dec
sahf
cvtps2pi
cmp
add
mov
ja
loopne
dec
lods
rolb
or
sub
dec
lock
inc
test
test
push
jmp
pop
les
lea
hlt
push
or
adc
je
lret
mov
imull
out
sahf
push
addl
mov
aam
out
movsb
fldt
movsl
mulb
sahf
call
mov
sti
js
lret
mov
out
mov
mov
push
xor
or
jb
add
pop
mov
or
daa
pop
xchg
mov
sbb
cmovnp
dec
gs
xchg
pop
add
lahf
mov
mov
lods
inc
mov
fstps
push
jae
leave
aaa
dec
clc
lods
in
dec
xor
xchg
rorb
in
es
loope
add
daa
enter
pop
lcall
cmp
shlb
dec
push
sbb
sbb
adc
push
and
xor
push
and
icebp
adc
sub
sub
mov
divb
int
nop
mov
push
push
and
stos
pop
pop
and
cs
fiadds
adc
sbb
outsb
fwait
popf
xor
xorb
icebp
mov
sub
pop
add
inc
adc
push
mov
stc
xchg
rorb
dec
rolb
push
loope
jmp
icebp
mov
mov
scas
enter
repz
shll
xor
in
out
or
mov
xor
loop
shll
inc
cmp
push
sub
fldl
sbb
xchg
cmpsb
add
sbb
pop
mov
and
push
or
mov
insl
out
cli
daa
cmp
daa
inc
xchg
paddsb
fildl
movsl
sbb
fcomip
or
out
push
jnp
in
lcall
mov
jno
sbb
pop
ds
mov
lcall
in
mov
clc
sahf
cmpsl
fcmovu
aam
push
xchg
jmp
out
cwtl
and
dec
push
mov
xchg
xchg
push
pop
mov
adc
push
out
jmp
js,pn
xor
dec
ds
fwait
add
or
jmp
mov
es
cmp
sbb
pop
mov
mov
inc
outsl
sbbl
idivb
bound
stos
rcrl
pop
and
mov
jge
pop
test
pop
aam
sub
xchg
pop
inc
adc
lret
loope
aaa
shrl
pop
mov
push
inc
pop
sbb
xlat
jge
shrb
pop
movsb
ja
jge
int
out
sahf
lds
jno
pop
lods
pop
mov
and
lods
test
notl
mov
xlat
cmp
outsb
lcall
fstpt
inc
xchg
out
ffreep
mov
mov
jmp
xlat
out
add
iret
dec
fcompp
adc
jecxz
lret
pop
adc
push
in
mov
imul
mov
add
scas
add
test
jb
mov
adc
lcall
adc
push
adc
call
mov
dec
sbb
decb
jecxz
add
jp
jae
sub
mov
bound
sub
push
mov
xchg
sub
ljmp
add
or
in
cmp
jmp
test
out
stos
hlt
add
inc
insb
jg
add
pop
inc
sbb
pop
addl
add
outsb
push
mov
lods
lcall
inc
and
inc
pop
insb
mov
dec
xchg
sbb
mov
mov
and
stc
lcall
sbb
push
adc
out
jb
mov
popa
add
test
out
lds
je
fwait
xchg
add
jl
add
cmc
int
in
sahf
sub
mov
push
sti
jne
cmp
mov
loope
lods
daa
aad
sbb
and
rolb
or
inc
pop
xor
shll
cld
lds
sbb
cmp
bound
test
aad
in
adc
out
pop
jl
sub
mov
sbb
int3
mov
cmp
jl
mov
je
lock
adc
or
repz
mov
arpl
sbb
hlt
repnz
xor
jl
mov
dec
ja
pop
jmp
sub
shll
mov
cmp
lods
mov
sub
push
cmp
ja
push
push
es
pop
xchg
xor
divb
leave
ljmp
iret
jns
in
ret
pop
cmpsl
inc
fdivrl
adc
stos
adc
and
das
or
hlt
mov
ror
in
call
mov
ljmp
add
loop
mov
xchg
mov
pop
jmp
push
aad
leave
mov
pop
cli
scas
clc
dec
sbb
test
les
add
push
add
movsl
dec
ret
addl
push
rcrl
and
mov
outsl
dec
cmp
std
and
lods
or
inc
add
scas
and
lods
and
xor
icebp
add
xor
mov
pop
dec
mov
ljmp
xchg
sbb
jge
std
mov
dec
fidivrs
mov
add
push
ficomps
adc
rorb
inc
push
push
movsb
mov
sti
dec
xor
push
adc
lahf
fcmove
lock
insl
sahf
test
nop
jecxz
sbb
sub
cmp
mov
push
jg
inc
jg
pop
in
inc
jne
inc
pop
xor
xchg
incb
popf
jb
mov
loop
scas
repz
xchg
cld
inc
subl
daa
jl
xchg
adc
int
xlat
pop
inc
daa
cmp
out
push
xor
dec
sbbl
inc
testb
out
inc
rcl
mov
jae
dec
mov
ret
xor
iret
jnp
test
rorb
and
add
mov
xor
cmpsl
mov
je
mov
xchg
xchg
js
aaa
push
jle
stos
mov
pop
mov
inc
xorb
cli
out
cmp
enter
rcr
int
outsb
out
in
push
sbb
pop
pop
sbb
pop
or
dec
xchg
outsl
fldl
push
mov
add
mov
outsb
pop
xchg
jb
inc
xor
stc
jno
out
stc
pop
cmp
mov
jns
cs
js
sbb
lds
mov
xor
jns
icebp
gs
mov
pop
cli
ljmp
adc
stc
movsb
push
mov
adc
mov
rorw
sbb
xor
leave
lods
or
sbb
xchg
pushf
inc
mov
lret
clc
mov
mov
cmc
sti
loope
jo
lods
jl
jge
mov
mov
xchg
sarl
fimuls
ljmp
sub
xor
mov
ljmp
push
shlb
fsubrs
push
dec
or
into
mov
pusha
repz
movsb
pusha
xchg
fbstp
dec
pop
stos
sbb
leave
jne
daa
push
movsl
scas
mov
xor
sub
sbb
mov
xchg
xchg
jl
mov
xor
ficoms
iret
sarl
sub
out
xlat
scas
movsb
push
push
adc
jg
xor
xchg
aaa
xchg
dec
cwtl
sbb
das
test
push
inc
mov
mov
ss
pop
into
cli
cs
push
mov
cmc
lods
mov
fisubrs
movsl
push
sbb
and
pop
mov
lahf
push
lea
jo
pusha
mov
mov
push
pop
xor
push
dec
in
xlat
popw
in
mov
pop
xchg
add
pop
aad
sub
test
aaa
and
mov
das
fstps
roll
loope
inc
imul
dec
push
xchg
testl
sti
xor
lods
jp
or
mov
pop
xorps
mov
sub
mov
hlt
rcrb
dec
rcrl
or
cmp
stc
sarl
jo
scas
in
pop
ret
jb
insb
loop
rol
ret
insl
scas
icebp
sbbl
and
sub
dec
div
jo
dec
sbbb
inc
in
cli
mov
outsb
push
inc
ds
xchg
iret
cmp
jno
push
cs
push
xor
cmp
push
scas
inc
push
mov
daa
sub
push
mov
cmp
cmp
mov
push
mov
fcoml
cmp
out
ds
push
bound
pop
cmp
aas
pop
or
or
pusha
mov
and
pop
sbb
imul
push
ret
cmp
push
inc
push
sbb
repz
out
ljmp
sahf
adc
or
adc
cs
pop
nop
ret
dec
movsl
sbb
icebp
push
sbb
arpl
or
jge
jecxz
fsubrs
shrl
scas
pop
push
mov
into
add
ja
xadd
jmp
loopne
or
leave
orb
or
cltd
push
pop
xchg
aas
lock
mov
leave
js
ja
inc
cmpsb
sub
push
add
mov
out
mov
inc
arpl
enter
into
pusha
add
cmpb
mov
add
leave
pusha
outsl
inc
mov
nop
add
loop
lcall
mov
punpcklwd
sub
cmpsl
dec
sbb
adc
int
cld
cmp
push
xchg
pushf
shr
test
xor
xchg
roll
pop
cmp
aad
jg
inc
addr16
cmp
mov
sub
xor
inc
pop
fwait
ljmp
subb
mov
add
rorl
xor
mov
mov
lahf
xchg
inc
out
loopne
test
pushf
mov
or
loopne
stc
insl
jbe
lcall
imul
arpl
mov
mov
enter
cwtl
cmp
pop
xor
or
std
jmp
pushl
sub
xlat
int3
dec
push
shlb
push
cmpb
iret
add
jo
xor
sbb
subb
jecxz
pop
cld
pop
clc
outsl
ja
mov
mov
int3
push
lret
jle
jle
rorb
xchg
adc
mov
loopne
jp
and
xor
sub
loop
subl
fldenv
mov
lea
js
ret
push
jp
pop
push
cmpsb
aaa
lea
insl
push
pop
dec
pushf
jns
movsl
cmpb
or
and
or
fwait
lahf
mov
test
iret
xor
jg
mov
and
cltd
mov
notb
rcrl
mov
stos
aaa
dec
push
jg
fcomps
arpl
or
in
iret
xor
and
mov
pushf
pop
pusha
mov
lock
rorl
xchg
lret
mov
adc
jp
push
push
arpl
rorb
bound
mov
inc
dec
xchg
sahf
mov
aas
loopne
cmpsl
ret
movsl
das
pop
outsb
xor
loop
je
in
jns
enter
and
sbb
scas
movsl
mov
lods
out
pop
cld
scas
push
inc
cmp
pushf
cmpsb
sbb
push
test
stos
leave
sahf
cltd
in
jmp
mov
lods
mov
cmpsl
test
sahf
jno
adc
xchg
iret
mov
mov
cmp
push
andl
in
push
inc
in
outsb
shlb
movsb
std
cmp
jge
loopne
scas
std
in
inc
dec
xor
repz
lea
dec
inc
xor
cmpsb
test
fistl
lods
cs
lret
aam
cmp
cmp
ret
add
mov
adc
mov
decb
fdivl
adc
cmp
movb
adcb
fs
mov
inc
arpl
jno
and
mov
xor
mov
bound
mov
dec
pop
mov
fnstenv
cmp
xchg
test
jae
add
daa
lea
out
lods
mov
dec
aas
xchg
imul
stos
shlb
mov
xchg
jp
jns
popf
push
testb
inc
lret
inc
gs
and
sub
cmp
pop
rcl
xchg
pop
add
cli
mov
shll
mov
cmpl
adc
stos
mov
shlb
andl
rcrb
insl
dec
popa
sbb
xchg
adc
popa
int
sub
ret
xchg
fucom
cmp
pop
sbb
lahf
and
imul
adc
pop
popa
add
dec
jbe
fists
repz
stc
xor
aam
mov
adc
inc
xchg
xor
mov
sub
mov
sbbl
icebp
dec
daa
xchg
xor
roll
jge
das
push
mov
mov
and
pop
fcoms
or
mov
add
ds
push
pop
mov
icebp
jmp
out
xchg
es
int3
fistps
stos
sbb
dec
jge
pop
in
scas
into
sbb
outsl
cmp
sub
or
test
xlat
mov
or
cmp
push
sbb
xchg
loop
xchg
inc
adc
adc
sarl
sub
ljmp
pop
sub
int3
sbb
ljmp
mov
mov
sub
jbe
into
gs
pusha
cwtl
xchg
push
pop
xor
cmpsb
jo
push
in
iret
and
imul
xchg
and
jo
and
adc
pop
outsl
outsb
clc
test
jno
outsb
ljmp
sub
cmp
or
je
sub
jecxz
or
adc
jb
or
and
add
shrb
mov
fwait
pop
in
cs
push
icebp
xchg
lahf
aas
daa
and
imul
test
cmpsl
mov
adc
push
stos
hlt
les
push
int
lahf
push
mov
repnz
cmp
push
inc
mov
mov
fadds
rcr
in
fbld
fistpll
mov
and
mulps
inc
inc
mov
mov
inc
sbb
clc
pop
rol
cmp
pop
orb
stc
cmp
dec
jmp
movsb
popa
and
movsl
scas
clc
adc
pop
cld
mov
outsl
cmc
dec
jae
scas
ss
push
mov
sahf
cmp
lods
and
jl
jae
mov
aam
pop
inc
testl
fcmovb
or
xchg
mov
cwtl
pushl
fdivrs
push
cmp
or
sbb
ss
inc
ljmp
enter
insl
sbb
push
mov
hlt
xchg
pop
mov
lods
andb
cmp
jge
dec
and
decb
pop
pop
cmp
pop
xlat
mov
mov
pushf
add
mov
call
pop
push
dec
lahf
imulb
ret
sub
fisubrs
in
cwtl
leave
mov
sub
and
iret
inc
es
repz
xor
xchg
mov
cmpsl
jle
mov
mov
loope
arpl
movsl
mov
hlt
adc
jb
xchg
lock
jno
lcall
test
stos
aas
shufps
mov
rolb
cmp
jns
add
xchg
fnstsw
sbbb
fildll
inc
test
mov
or
in
mov
pop
mov
jnp
addb
test
je
xchg
mov
lahf
mov
add
jl
in
and
xor
jp
inc
fists
add
stc
ror
lea
sbb
dec
mov
push
lods
adc
sbb
or
and
iret
pop
cmp
dec
mov
fmull
cmp
mov
sti
add
add
inc
nop
cmp
es
cmpsl
or
enter
push
jb
xchg
fwait
cmp
fsubrp
sbb
xchg
js
rcr
mov
cmpsb
cmp
sub
adc
aad
inc
cwtl
push
push
gs
inc
mov
in
dec
mov
add
xor
les
push
jp
mulb
popf
fldt
test
call
sub
inc
int3
sub
jmp
mov
lea
mov
popf
jo
mov
rorl
lret
int3
out
sub
push
jg
inc
je
mov
scas
rcrl
mov
arpl
add
sub
in
scas
lret
idivl
jno
pushf
dec
push
adc
sbb
aad
roll
and
cmc
mov
cs
outsb
jecxz
jl
movsl
scas
jns
dec
scas
jmp
rcr
inc
jnp
mov
es
cmp
shlb
hlt
lcall
inc
dec
dec
dec
insl
sbb
dec
adc
dec
aad
xchg
lock
jmp
xchg
test
mov
sub
addl
dec
mov
lds
jbe
cmpsl
push
insb
or
cli
mov
popf
shlb
pop
dec
mov
or
dec
inc
cmp
push
fildll
fdivrl
and
or
notl
inc
sub
cltd
and
sbbb
jnp
test
xchg
jb
stc
push
pop
inc
in
into
mov
stos
lods
into
mov
xor
or
cmc
sub
mov
mov
fbstp
xchg
in
jmp
test
lods
mov
notb
arpl
mov
add
fildl
jmp
test
nop
mov
adc
pop
pop
jmp
aas
sub
mov
dec
pop
fcoml
fldl
and
jb
jo
xchg
pushf
cmc
test
inc
loope
dec
into
inc
cmc
pop
sub
jno
mov
shrb
test
inc
push
jnp
pop
lret
mov
scas
or
push
sbb
xor
enter
js
test
inc
jmp
and
repz
jl
pusha
add
cmc
scas
adc
mov
dec
fadd
lea
sbb
sub
ljmp
int
push
les
push
inc
pop
mov
fstp
mov
dec
mov
loopne
scas
or
std
xchg
pusha
lcall
ds
addl
sbb
lock
jnp
lret
cmc
hlt
incb
mov
ret
ss
int
lock
inc
negb
rcll
addr16
std
cmp
shl
scas
adc
pusha
mov
cmp
iret
test
jo
pop
mov
pop
mov
test
iret
enter
jmp
xor
rorl
sarb
inc
dec
ja
mov
repnz
sub
sbb
dec
mov
pusha
adc
mov
ret
adc
in
into
xor
rep
inc
jmp
xor
bound
mov
jge
or
ret
leave
pop
les
mov
sbbl
jnp
pushl
incl
push
or
jp
adc
xor
fcoml
add
cmp
pushf
jb
clc
pushaw
jno
idivb
int
xorb
pop
jne
mov
lret
in
ljmp
int3
into
addr16
movsb
shll
or
aaa
xchg
and
cmp
xchg
xchg
jge
cli
daa
push
xchg
lds
shll
shlb
icebp
jmp
or
subl
jle
mov
jnp
jno
mov
fmul
xlat
enter
fcmovnbe
insb
ja
repnz
insb
mov
xchg
xor
adc
mov
jl
orb
cltd
popf
pushf
dec
pop
sbb
out
xchg
push
xchg
or
mov
movsl
in
leave
stc
add
jle
xchg
arpl
sub
sub
sbb
mov
mul
sbbb
repz
xchg
push
add
ja
inc
rcrl
cmp
sbb
mov
push
push
pop
sbb
push
mov
pop
les
mov
ret
xor
sbb
sbbl
loope
pop
pop
and
out
dec
in
xor
je
sub
outsb
fidivl
push
and
jg
bound
dec
or
movsb
adc
lea
and
aas
mov
cltd
subb
les
and
pop
add
jb
add
push
icebp
in
imul
adc
mov
jbe
ja
jp
cmp
mov
push
fmuls
bound
push
out
cmp
mov
cmpsb
dec
lret
scas
sbb
test
pusha
aas
arpl
outsb
lock
mov
lock
xor
jo
inc
and
in
add
xor
adc
push
cmpsb
cli
push
mov
inc
and
rolb
imul
push
or
outsl
jae
push
std
sbb
rcrb
dec
mov
pop
xchg
pop
scas
fnstenv
mov
or
jg
dec
xor
fbld
sub
mov
jg
add
adc
test
icebp
mov
pop
sbb
pop
dec
push
lods
mov
cmp
stos
and
mov
mov
and
pop
movsb
jo
out
mov
mov
ds
add
sub
mov
mov
pusha
lods
shll
outsb
pop
loop
cmp
jae
lret
mov
jb
arpl
xchg
fcmove
pop
xor
mov
inc
jge
or
mov
loope
lret
clc
mov
fstl
xor
mov
mov
xor
das
mov
sub
mov
subb
dec
mov
call
xchg
mov
bound
fdivs
mov
adc
push
shrl
push
xchg
xchg
repnz
cmp
xor
gs
lods
int
push
push
fs
pop
mov
sbb
push
jb
pushf
sbb
sbb
mov
in
jnp
test
nop
inc
iret
jecxz
lds
jbe
and
pmovmskb
in
mov
pop
int3
mov
pop
in
and
bound
xor
push
cmpsb
fcoms
jp
loopne
addr16
aas
lods
gs
mov
mov
dec
enter
adc
push
xchg
pop
mov
xor
cmp
xor
lea
scas
sti
mov
add
push
mov
hlt
ret
add
dec
int3
or
push
push
cmp
repnz
cmp
xchg
mov
outsb
pop
pop
popf
xchg
or
jg
aam
sub
xchg
pop
aam
lret
aam
or
add
xor
fildl
and
int3
and
jp
lods
movsl
mov
adc
ret
mov
push
mov
pop
pop
jmp
test
push
into
push
inc
call
mov
inc
or
enter
jle
mov
insl
push
bound
fsubrs
mov
push
sub
push
sub
sbb
popf
int3
cltd
cltd
mov
out
pop
popa
daa
mov
mov
xchg
sub
sbb
loopne
gs
in
js
and
mov
lods
and
test
mov
or
dec
daa
jg
dec
faddl
jge
or
sahf
xchg
mov
push
mov
and
add
test
jp
or
mov
mov
add
jae
jno
mov
and
inc
push
push
dec
repz
add
inc
mov
mov
je
int3
dec
sti
scas
sbb
jecxz
loopne
inc
jae
jb
int
or
ljmp
cwtl
jg
jno
pop
adc
xchg
ret
in
push
dec
dec
int
sbb
mov
mov
popf
jne
sti
xor
mov
xchg
call
push
popf
js
loop
ds
in
jne
in
adc
cmc
and
aam
imul
imul
mov
xchg
mov
mov
jns
ret
or
inc
sbb
daa
or
sbb
inc
pop
sbb
push
ret
or
add
xchg
out
out
ds
and
mov
out
add
iret
push
loopne
sbb
sbb
jb
pop
fsubp
arpl
xchg
ds
xor
jecxz
fisttpll
adc
add
mov
mov
dec
sbb
jns
repz
addr16
pop
mulb
repz
or
js
xor
sub
pop
orl
aad
dec
cmp
mov
rep
sub
std
les
std
inc
cmpl
loop
sarl
cmpsb
xchg
xor
xor
repnz
push
push
push
mov
mov
sub
loop
pusha
dec
mov
addr16
add
es
mov
sbb
inc
aam
daa
pop
out
sahf
pop
sub
push
shll
dec
mov
mov
test
subb
mov
cmp
out
jns
in
and
out
gs
pop
sub
inc
dec
or
mov
push
rol
sbb
add
movsl
and
sti
stc
sub
dec
mov
mov
dec
add
aaa
mov
push
fcoml
or
inc
or
inc
int
push
sbb
std
call
cmc
xchg
xor
fsubrl
mov
repnz
sbb
shll
lret
das
jae
mov
fbld
scas
cmp
xchg
lea
mov
idivl
aad
add
arpl
inc
sub
mov
jmp
loope
rclb
xor
cwtl
imul
push
mov
add
push
out
repz
mov
enter
test
cmp
rolb
data16
xchg
nop
xchg
movsb
imul
pushf
cmc
into
out
adc
mov
push
imulb
scas
pop
sahf
loopne
js
scas
mov
mov
les
mov
repz
xchg
sbb
jns
cli
outsb
dec
insl
stos
xchg
jmp
push
mov
cmpsb
movsb
insl
icebp
into
add
hlt
xchg
cmp
jbe
ficoms
push
jmp
sub
inc
sbb
adc
inc
pop
imul
mov
mov
in
ret
xchg
jmp
lea
pop
cmp
sub
lea
nop
rorl
lods
push
fnstsw
cmp
jae
cmc
loop
ds
jno
into
mov
js
dec
jne
mov
xchg
insl
jbe
jne
dec
inc
or
mov
stos
mov
inc
loope
ljmp
mov
test
jmp
data16
sbb
adcb
es
xchg
mov
pop
daa
adc
sbb
insl
in
test
into
dec
pop
mov
cwtl
jecxz
and
fwait
push
push
mov
ret
popa
mov
and
imul
mov
xor
fnstsw
outsb
clc
cmpsl
int
outsl
insb
sbb
mov
outsb
gs
sub
dec
dec
cwtl
stos
mov
aas
punpcklwd
cmp
ret
fwait
xor
icebp
push
mov
outsb
aam
or
jne
pop
jbe
test
or
xor
or
stos
lahf
out
mov
mov
pop
or
cld
pop
pop
mov
pushf
bound
test
push
jno
mov
imul
fimull
out
jp
setle
and
xchg
mov
fisubrl
sub
mov
ljmp
and
in
pop
out
inc
jp
xchg
xchg
rorl
sbb
mov
inc
add
pop
pushf
adc
cmc
fisubl
and
adc
ds
lahf
mulb
cmp
outsl
dec
sahf
and
mov
leave
sub
scas
cmp
and
and
pop
sarb
das
rclb
dec
out
and
stc
es
jae
sub
inc
or
loop
lods
xchg
push
or
dec
xorb
ret
mov
insb
testb
in
cmp
das
inc
es
cmpsl
inc
sbb
and
movsb
js
enter
mov
jle
push
fstpt
hlt
or
and
mov
mov
cmp
mov
mov
out
test
fnstcw
adc
dec
xor
mov
adcl
cmp
inc
xchg
out
rolb
scas
fisttps
pop
cmp
cmp
js
mov
push
xchg
or
jg
pop
fistl
mov
jnp
sbb
addr16
and
dec
out
jl
mov
enter
push
mov
push
mov
daa
sti
mov
loop
leave
hlt
stc
xor
les
stc
sbbl
jle
push
inc
fwait
mov
inc
add
lds
sbb
xor
fstps
add
pop
repnz
mov
lret
aad
movsb
cmpl
sub
push
fmul
stos
lcall
mov
jnp
enter
jmp
jns
lea
adc
mov
insl
movl
mov
fisttpll
jmp
jp
push
daa
jo
push
dec
adc
aad
movb
jmp
enter
in
ds
cmp
stos
jmp
sbb
out
lcall
arpl
mov
ss
idiv
out
fdivs
inc
bound
rcrb
pop
or
xor
mov
jp
dec
xchg
xor
mov
push
insl
das
fadds
insl
push
sbb
mov
arpl
stc
or
loope
mov
fisttpll
mov
rolb
mov
mov
push
loop
call
imull
mov
fldt
xor
sbb
cmp
mov
lea
cmp
adcb
and
shlb
test
inc
loop
das
inc
std
loop
cwtl
mov
push
insb
mov
int
fucomi
push
push
push
fbld
mov
xor
mov
dec
repz
jno
sub
mov
fcom
jno
sbb
ret
call
inc
or
sub
sbb
inc
sbb
cmpsl
adc
mov
enter
pop
mov
out
dec
inc
cmp
dec
push
dec
inc
ja
pushf
roll
popa
out
pop
les
addb
enter
sub
in
sub
and
adc
mov
xor
mov
add
jmp
ja
pop
add
call
sbb
pop
das
les
xlat
fidivs
jmp
fimull
inc
in
mov
xorl
dec
dec
inc
jge
ficomps
ret
add
xor
shl
jmp
jecxz
mov
imul
es
cwtl
les
xlat
lods
pop
lahf
dec
or
jl
bound
pop
sub
aaa
lock
jno
dec
pop
nop
xor
mov
or
jl
mov
mov
xchg
cld
outsb
cmp
popa
insl
cltd
loopne
imul
aaa
and
dec
mov
mov
xor
push
ljmp
mov
push
mov
das
cmp
ljmp
push
jo
ficoms
jl
adc
mov
fwait
jnp
and
or
adc
popa
xchg
xchg
arpl
inc
and
mov
fstps
sub
movsl
mov
fidivl
inc
jo
mov
and
clc
push
lcall
rcll
addr16
stos
testb
out
insb
and
movsb
mov
sti
ret
arpl
int3
jge
dec
shl
insb
and
rorl
dec
mov
pop
push
daa
fbld
scas
cmpsb
aam
cld
sbb
add
orb
sub
cmp
inc
mov
rol
mov
adc
or
je
adc
adc
jns
das
lds
in
lock
loopne
lock
enter
mov
jg
xchg
push
imulb
and
pop
movl
in
test
rep
sbb
in
or
lea
jno
mov
xchg
out
mov
aas
movsl
sbbl
dec
mov
jl
pop
xchg
push
addr16
or
fdiv
addb
sti
inc
sbb
push
cmpsb
aam
add
imul
mov
in
adc
sbb
dec
leave
sbb
and
adc
int3
arpl
mov
or
mov
rorl
repz
xor
or
pop
mov
jmp
or
adc
xchg
lods
lret
lods
das
mov
jbe
xor
pop
or
xorl
adc
dec
psubsb
inc
jge
mov
ss
outsl
mov
ds
in
jno
jle
sub
jbe,pt
mov
ret
scas
bnd
or
insl
test
movsl
mov
and
pop
outsb
add
test
dec
jno
pop
inc
add
pop
cmp
lds
inc
add
jno
mov
jne
mov
xor
mov
std
xchg
fcomi
out
lcall
cltd
adc
cmp
das
andb
cmp
xchg
mov
xchg
ja
lds
in
repnz
pop
repnz
push
insb
aas
cwtl
push
or
daa
mov
sbb
arpl
xor
dec
push
subb
cmc
jno
add
inc
pop
sub
and
mov
jbe
adc
add
mov
pop
pop
cld
xor
sub
add
inc
ret
scas
pop
cltd
jmp
mov
and
jo
inc
or
hlt
and
mov
pop
push
sub
sbb
or
mov
xor
add
movsl
add
xchg
negb
jnp
pop
jne
xor
pusha
adc
jne
jge
mov
pop
shlb
sub
rcrb
arpl
sub
push
popf
call
fimuls
aad
and
movsl
jge
lcall
mov
add
and
clc
aad
out
pop
aad
shll
cmp
sbb
outsb
rcrl
hlt
enter
inc
test
sbb
ss
mov
push
es
nop
jmp
xor
or
imul
out
popa
outsb
inc
stos
xchg
scas
add
insb
and
test
adc
aaa
inc
or
addb
imul
adc
mov
adc
adc
inc
sti
mov
pop
imul
daa
mov
push
fmul
test
fcmovne
cli
loop
and
xor
cmp
push
adc
iret
sub
lds
mov
push
jb
jge
lcall
call
out
xchg
mov
loope
mov
cmp
pop
xor
adc
cmp
in
sbb
or
test
cmc
inc
xchg
xchg
imul
fwait
jno
jl
sub
sbb
dec
mov
pop
inc
jb
add
inc
mov
in
iret
sarl
shll
mov
leave
push
xchg
sub
sbb
pushf
imul
imul
inc
sarb
mov
mov
lea
push
xchg
add
inc
pop
hlt
add
inc
adcl
das
out
das
aad
or
mov
xor
sub
in
jg
scas
js
jp
sub
jns
add
mov
or
lods
sbb
xchg
not
add
xlat
leave
jp
jp
ds
mov
push
mov
sar
in
and
fsubrl
sbb
cmpsl
sub
fs
sar
sub
fcmove
jns
mov
jae
jp
jbe
js
jmp
mov
out
dec
xchg
adc
push
es
cmp
les
cli
icebp
out
mulb
test
push
push
lahf
mov
jno
xchg
xchg
sub
test
pusha
fwait
xchg
adc
loope
popa
int3
mov
out
push
lcall
sbb
pavgw
dec
xor
cltd
test
add
orb
lock
dec
add
add
aaa
or
repnz
sbb
jg
popf
lret
mov
daa
jo
pop
push
push
and
repnz
rcrb
push
std
mov
sub
inc
xchg
mov
or
adcb
aas
pop
andl
shrb
ds
into
cld
adc
bound
in
cmp
push
mov
das
sarl
test
sub
loope
maxps
lcall
inc
shrl
ret
mov
or
mov
fisubl
xchg
xchg
loop
sub
stos
into
pusha
sub
sahf
movsb
daa
xchg
stos
les
js
mov
xchg
test
dec
jne
mov
shll
stos
enter
flds
stc
xor
lods
push
cli
push
les
pop
and
pusha
rcrl
mov
icebp
inc
adc
push
add
ficoml
jecxz
mov
in
into
scas
loop
xor
in
push
inc
lods
cmp
pop
and
or
shl
dec
ror
scas
cld
push
mulb
and
jo
das
mov
xchg
in
out
cmc
adc
test
jo
push
bound
outsl
stos
or
andb
add
hlt
loope
fcomps
jg
out
stos
icebp
or
scas
dec
mov
dec
pushf
stos
negb
mov
leave
dec
xor
fnstsw
insb
imul
leave
cmpsl
pop
outsl
setne
mov
add
push
loopne
pshufw
pop
mov
xor
jl
xorl
mov
lcall
fistpl
nop
adc
test
out
imul
loopne
mov
aad
pop
pop
ss
pop
je
aaa
jle
outsl
xor
ds
and
mov
ss
jecxz
cmpsb
sbb
mov
inc
pop
data16
adc
xchg
cmpsl
push
xor
scas
cmp
push
rcr
ret
jl
cmp
sub
and
fdivrp
xchg
pusha
fwait
push
lcall
fdivr
ret
dec
adc
xchg
push
lock
mov
cli
mov
bound
sbb
xor
sub
xor
scas
xor
mov
dec
decl
or
jb
xor
gs
or
arpl
dec
inc
into
aad
out
xor
clc
sbb
pop
out
shl
mov
mov
gs
xchg
cwtl
sub
mov
mov
movsl
push
test
je
push
lods
nop
mov
outsl
pop
pop
ss
sub
pop
or
lahf
into
lds
sbbb
and
jae
jns
ss
push
aaa
pop
adc
enter
js
inc
xor
mov
test
jg
ret
sbb
ret
mov
push
in
out
add
leave
cmovno
fldt
mov
adc
add
push
ret
mov
insb
in
jge
in
mov
lock
mov
cmc
mov
and
sub
mov
push
xchg
fidivs
ljmp
pop
add
dec
clc
bound
insl
sbb
movb
or
fwait
sbb
and
add
arpl
or
and
test
jge
std
mov
aaa
out
cmp
lret
adc
adc
lcall
push
lret
aas
cmp
hlt
je
xor
andb
xor
call
int3
jnp
imul
or
stc
ds
sti
fdivrl
aas
jmp
test
xor
test
pop
call
or
push
fadd
jmp
bswap
xor
ds
pop
ret
mov
jmp
jnp
and
jne
repz
pop
mov
mov
mov
push
adc
push
pop
test
jge
rcrb
inc
adc
scas
xchg
fidivs
jle
or
push
loopne
mov
inc
inc
push
imul
push
nop
jnp
cmp
inc
mov
jb
dec
sbb
and
cmp
movb
ss
idivb
xchg
lcall
mov
dec
pop
fldlg2
stc
scas
fadds
sbb
ret
add
repnz
ret
adc
outsl
or
sub
loopne
stos
dec
mov
jle
mov
mov
xchg
inc
test
pop
int3
shrb
mov
xor
scas
ja
and
mov
xchg
jae
add
rorb
fidivrl
daa
divps
sub
stc
add
pop
pop
inc
movsb
loopne
arpl
test
jmp
and
bswap
out
push
fstpl
rcr
xchg
and
shrl
in
aad
movsb
stos
mov
push
cmpsl
fdivp
cmp
xor
insl
cltd
sti
in
call
adc
jg
sahf
mov
nop
push
dec
into
movsb
xchg
xlat
imul
ljmp
daa
xor
fisubl
insb
sahf
test
adc
inc
adc
push
push
jge
pop
pop
xchg
jo
cmc
xchg
scas
ljmp
aam
jg
inc
loope
sbbl
inc
les
jb
cmp
add
pop
jmp
xchg
and
cli
lods
cmp
sub
call
fisubrl
scas
push
shl
rcrl
fs
jge
imulb
xchg
sub
lea
fadds
mov
jns
and
sbb
jg
and
push
imul
aam
test
jl
nop
lret
stc
jne
ds
pop
fnsave
in
lret
cmp
jmp
idivl
in
rolb
scas
js
add
hlt
pop
lock
cli
mov
mov
adc
test
adc
in
cmp
and
out
out
push
mov
inc
xor
adc
adc
aaa
sub
pop
pop
jecxz
mov
jge
mov
aaa
aas
scas
andl
and
scas
decl
add
rcrl
cmp
push
pusha
mov
push
mov
out
repz
pushf
or
cltd
inc
push
xchg
xor
orb
dec
mov
lahf
fstl
fstpt
data16
mov
cmp
lret
repnz
mov
mov
xchg
push
cli
sar
das
pusha
mov
dec
or
movsl
les
imul
push
daa
loopne
ret
sub
adc
mov
cmp
and
js
add
xchg
push
loop
popl
jl
jge
sbb
lret
into
sub
frstor
push
cmp
adc
inc
jbe
adc
push
movsb
in
enter
in
out
faddl
jle
dec
cmc
std
mov
xlat
int
pop
rol
mov
jb
add
and
sub
in
imul
stos
jp
iret
les
cmpsb
xor
and
jae
lcall
call
icebp
push
sahf
cmp
and
dec
fcompl
insb
lret
xchg
out
stc
ss
sub
pop
xor
push
or
test
xlat
pusha
dec
ss
stos
dec
lret
ja
adc
adc
pop
cmp
mov
movswl
xchg
out
mov
out
or
and
icebp
xchg
into
sub
sbb
mov
lahf
sti
popf
repnz
movsb
popa
scas
pushw
push
arpl
aad
jne
cmp
leave
dec
adc
in
xor
test
mov
loope
push
nop
and
mov
lods
jns
add
sub
xlat
rcll
pop
call
mov
and
loop
add
sub
mov
int
or
pop
stos
out
rcr
jecxz
hlt
mov
mov
mov
mov
outsb
imul
xchg
add
mov
das
sub
sbb
int
cmp
jecxz
sbb
arpl
mov
into
stc
mov
adc
sti
jne
pop
ljmp
sahf
negl
jno
outsb
test
mov
arpl
lahf
pop
adc
inc
jg
stos
shlb
movsb
inc
push
stc
push
cltd
add
hlt
mov
push
and
mov
imul
stos
pop
xchg
mov
cmpsb
hlt
lods
or
xor
xchg
lock
mov
mov
jmp
pop
cwtl
bound
enter
mov
fmulp
xchg
outsb
xchg
lods
dec
in
in
pop
and
mov
leave
dec
adc
loope
xchg
lods
add
insb
pop
sbb
leave
inc
jg
mov
xchg
es
loop
sti
lods
divb
cmp
gs
flds
adc
dec
adc
lret
sub
xchg
mov
add
xchg
mov
xchg
and
mov
mov
cli
push
std
iret
scas
cmp
pop
mov
sbb
movsl
add
ja
fstps
sarl
aad
insl
es
jnp
mov
pop
data16
das
mov
data16
cmpsl
lcall
fstps
hlt
into
out
xchg
cli
lret
sub
push
add
out
ret
es
mov
aas
add
in
and
mov
mov
xor
pop
movl
xor
mov
andl
je
test
push
gs
push
sbb
mov
lods
mov
mov
fisttpll
mov
push
jo
decb
inc
lods
mov
shl
rorl
fcompl
pop
rcll
sub
fwait
imul
cli
push
out
or
outsl
and
mov
out
ret
xorb
pusha
repnz
outsl
ror
cld
aad
xor
ss
cmp
and
cmp
into
sbb
mov
std
cli
stos
mov
lahf
xchg
ds
shll
enter
adc
dec
mov
pop
mov
adc
clc
pushf
pop
out
lret
cmpb
je
enter
pop
push
std
or
or
pop
arpl
push
aas
mov
popa
pop
dec
xchg
dec
fnstenv
sbb
ss
pop
out
mov
mov
imul
push
or
andl
cmp
int
dec
push
add
mov
mov
aad
int
lods
cwtl
mov
fwait
push
ds
movsl
in
xchg
or
and
mov
bound
testb
push
jmp
pop
pusha
jl
nop
jmp
sub
or
incb
adcb
es
test
sbb
outsb
iret
std
mov
out
and
mov
mov
add
adc
sahf
lahf
push
push
test
das
inc
cmp
or
loope
divb
lahf
sub
leave
pop
xchg
mov
jne
pop
xor
popf
shrl
sbb
call
sti
ljmp
mov
adc
jg
pop
movsb
sub
stc
es
or
out
test
clc
sbb
mov
sbb
push
andl
adc
push
adc
jae,pn
in
sbb
sub
lds
or
pop
push
leave
xchg
mov
adc
lahf
xor
insb
mov
dec
cmpsb
jno
add
mov
inc
mov
sbb
iret
iret
adc
pop
sub
fstpt
gs
dec
push
pop
or
or
mov
sahf
rorb
jecxz
loopne
or
leave
imul
pop
inc
fstps
lock
les
push
shrb
push
imul
jmp
hlt
adc
mov
mov
aaa
mov
inc
lea
pop
cmp
rclb
push
pop
jo
dec
push
aad
ja
push
fwait
add
out
pop
popl
push
aad
rcrl
dec
roll
daa
xor
sub
pusha
pop
mov
popf
mov
push
movsb
xor
int3
push
xor
mov
jae
sub
popa
mov
adc
xor
aam
mov
sub
cmp
jg
fsubrl
jne
dec
mov
sbb
je
jns
lods
pop
inc
mov
sbb
movsl
inc
sarb
js
outsb
clc
das
cmp
movsl
add
fcomi
and
inc
add
push
leave
push
lods
mov
or
in
inc
push
leave
jg
bswap
mov
rclb
xor
out
sbb
addr16
loope
dec
test
adc
cmp
es
mov
dec
insl
sbb
mov
dec
mov
push
xchg
cwtl
lds
xor
das
lahf
mov
or
push
arpl
inc
adc
out
nop
xchg
or
pusha
stc
pop
push
fs
imul
fildl
xlat
cmpsb
movsl
jmp
jl
cld
jmp
and
aad
inc
or
pushf
insb
xor
push
xchg
push
pop
loop
cli
pop
xchg
or
repnz
xchg
and
shl
push
std
rcll
add
push
pop
jmp
out
dec
js
sub
inc
lods
xlat
dec
inc
mov
hlt
or
jbe
xchg
mov
lock
sbb
sti
in
sub
cli
push
add
cmpsb
or
and
sbb
aaa
and
shl
jg
sbb
in
fs
lcall
scas
mov
pusha
popfw
stc
dec
in
mov
push
sub
push
mov
fsubs
shll
shlb
sti
ss
mov
fcmovnbe
mov
fbstp
add
mov
and
sub
xchg
xor
pop
push
testl
mov
inc
jle
sti
mov
sbb
ljmp
xchg
lea
cmpsb
and
fs
add
and
call
xchg
push
adc
jle
sub
gs
mov
divl
jne
outsb
xor
fmuls
dec
xor
push
popa
adc
mov
int3
call
xor
int
call
out
les
push
cmp
pop
shlb
pop
in
je
mov
inc
jne
jnp
and
xor
mov
dec
push
push
jno
or
and
aam
xchg
mov
xchg
fmull
je
insl
xor
pop
cld
sbb
mov
shr
lahf
or
xchg
into
out
divb
mov
or
addr16
mov
pop
push
and
mov
inc
lods
xlat
ja
imul
loop
mov
arpl
in
call
mov
or
pop
mov
insl
inc
in
cmp
lods
cwtl
lahf
hlt
ljmp
mov
or
adc
lret
mov
push
data16
cwtl
or
xchg
movsb
cs
outsl
in
or
push
data16
clc
or
xor
mov
out
xchg
fstpl
xchg
pop
and
jae
imul
test
add
ret
adc
lret
addl
push
inc
fnstcw
test
jno
scas
fidivs
out
dec
mov
dec
or
and
dec
sub
xchg
lds
jbe
or
mov
jno
lahf
test
cmp
fwait
andb
mov
leave
test
dec
adc
rcr
test
stc
ficoml
es
mov
stos
adc
sbb
lcall
inc
mov
pop
cmp
add
lea
xor
mov
cli
cmpsl
push
std
icebp
pop
mov
mov
inc
jl
enter
es
adc
pop
add
into
fldl
cmp
or
jg
xchg
mov
or
imul
pop
adc
mov
sub
push
aas
fsubrl
pop
les
mov
pop
test
cli
cmpsl
daa
test
sub
mov
lock
rolb
jb
lods
inc
push
dec
and
imul
xchg
clc
lahf
hlt
icebp
add
addr16
push
xor
dec
pop
inc
push
test
pop
ja
and
jg
in
push
push
sahf
sub
mov
push
mov
es
lock
cwtl
cld
aaa
or
jp
xchg
sub
dec
sbb
sbbl
ret
mov
and
add
in
dec
dec
adc
aam
repnz
outsb
aad
dec
inc
rolb
jb
mov
shll
fwait
lret
mov
adc
in
aam
jae
jnp
push
xor
cmpsb
add
jge
xor
or
pusha
in
gs
push
push
sbb
adcl
dec
xchg
std
jns
hlt
arpl
jg
mov
sub
pop
xchg
dec
ljmp
mov
sub
mov
in
in
fxsave
xor
push
insl
push
movb
fsubl
aas
rolb
xlat
add
rcrl
lea
and
decl
push
lods
repnz
nop
hlt
pop
mov
mov
cmp
ror
das
inc
cld
dec
dec
stos
pop
jb
leave
mov
and
cld
pop
dec
enter
add
sbb
cld
int
out
test
call
shr
pop
cld
push
dec
sub
push
mov
or
cmc
mov
out
daa
pushf
add
jle
adc
lcall
push
cbtw
fdivrs
pusha
jg
js
sbb
adc
cltd
xor
jbe
stc
jne
stos
sub
push
mov
push
fisubrl
pop
mov
aad
mov
jg
out
mov
add
insl
xor
xor
or
test
dec
mov
ljmp
rclb
scas
into
lds
mov
in
inc
rcrb
testl
fs
fwait
imul
inc
int3
test
lea
inc
push
sub
lods
cli
mov
dec
outsl
push
bound
movsb
sbb
fists
or
adc
icebp
add
mov
mov
mov
outsb
lret
mov
mov
push
shlb
adc
jecxz
xor
dec
aaa
or
xor
mov
lock
js
adc
and
mov
hlt
push
stos
icebp
lds
dec
mov
ss
push
adc
fdiv
shrb
inc
mov
and
push
rcl
add
push
jae
and
aas
fbstp
pop
mov
rcrl
or
mov
xor
pop
jp
rolb
rcr
add
xorb
add
push
push
loope
into
insb
sarl
test
dec
ret
ds
aas
or
jae
fsubl
mov
inc
sub
das
test
xor
pusha
scas
and
decl
cmp
and
dec
mov
cmc
dec
sub
or
movsl
inc
jb
jae
les
xchg
jle
mov
dec
movsl
mov
mov
out
adc
imul
push
insb
cld
cmp
js
fistps
push
imul
mov
jbe
arpl
push
cmpsl
popf
negb
clc
mov
or
mov
rorl
sub
mov
movsl
mov
into
jle
addr16
mov
out
out
or
and
pop
mov
push
xor
stc
pop
mov
mov
leave
arpl
mov
add
test
loop
fsubrl
mov
adc
push
cmp
int3
mov
mov
inc
icebp
cmpl
mov
stos
jb
mov
test
jbe
jmp
out
pop
inc
fstp
pusha
push
add
pushf
xchg
adcb
fwait
mov
std
dec
or
mov
inc
subb
movsb
jns
cmp
shr
jge
outsl
mov
test
add
arpl
psubsb
xor
push
popa
repnz
testb
xor
or
xor
imul
adc
loopne
xchg
mov
daa
mov
fisttpll
xorb
daa
mov
stos
mov
jns
iret
pushf
jmp
jecxz
sub
iret
rorb
xor
adc
cmpsb
int3
outsb
inc
and
stos
daa
pop
push
sbb
dec
sub
pop
cmp
inc
insb
mov
loopne
cmp
dec
xchg
push
inc
roll
jae
data16
jo
sub
or
cmp
nop
sarl
loope
inc
mov
pop
mov
data16
sti
lds
out
insb
cmp
mov
pop
test
add
lods
int3
cld
push
cld
and
lds
int3
sbb
mov
adc
mov
iret
xchg
repnz
mov
clc
cmc
in
xchg
lds
xor
or
outsl
pop
sbb
jg
sahf
loope
mov
xchg
or
lahf
adc
test
dec
jno
rep
inc
jecxz
cmp
jmp
cmp
mov
ds
xchg
dec
dec
push
test
loopne
cmc
or
lcall
mov
out
push
mov
dec
fwait
pop
push
fwait
jmp
das
inc
data16
pusha
xchg
jg
add
sub
cmp
push
stos
fdivl
sub
aad
xor
and
push
mov
mov
mov
mov
adc
cmpsl
test
andb
mov
push
and
xchg
inc
loopne
dec
or
sbb
xlat
fists
in
sbb
idivb
rol
or
sbb
inc
xchg
xor
mov
push
cli
adc
jae
push
sahf
xchg
dec
movsb
out
pop
shrb
sbb
jo
and
sub
idivb
std
fcoml
push
and
popa
push
dec
cwtl
das
in
aad
add
adc
movsl
mov
push
scas
imul
jl
xor
cmpsb
jp
pop
popf
lods
aas
cmp
pushf
popf
cmpsb
or
mov
daa
les
dec
jne
pop
lahf
pop
or
jg
add
enter
sbb
xchg
insl
jmp
xor
add
iret
push
sub
pop
cmpsl
stc
fstpl
mov
push
lods
xor
andb
jbe
inc
mov
pop
sub
pop
lret
mov
mov
sub
sub
enter
sbb
fdivl
pop
dec
cmp
jno
or
enter
sub
dec
push
sub
mov
shrl
ss
dec
ds
mov
sbb
incb
out
fisttps
subb
mov
pop
adc
imul
fldl
cmp
dec
jge
and
fisubrs
or
sub
inc
xchg
dec
test
pop
jle
xchg
inc
cli
mov
adc
dec
jb
ds
mov
jne
and
insl
dec
and
fcomip
adc
mov
jp
mov
sbb
gs
add
mov
lahf
jae
mov
sbb
fs
sahf
pop
jl
mov
std
pushf
pusha
lods
data16
jge
lret
mov
adc
pop
and
sbb
and
mov
push
mov
xor
mov
fs
mov
inc
add
ret
mov
sahf
arpl
adc
insl
mov
jecxz
cmpb
mov
push
and
xchg
shlb
daa
call
andb
ret
jae
add
imull
sbb
loop
pop
mov
fsubrl
popf
mov
jg
mov
popa
inc
ja
int3
rcrb
imul
stos
push
cmp
dec
in
mov
xor
clc
dec
push
mov
dec
and
ret
arpl
cltd
mov
push
sbb
int3
inc
pop
mov
jl
adc
cmp
and
scas
int3
div
cltd
cmp
call
sub
int
push
out
std
xor
scas
scas
pop
xor
xor
das
mov
stos
push
push
jns
mov
cli
dec
fcmovnu
add
pushf
popf
leave
int3
ja
int
or
adc
add
jo
icebp
adc
call
cli
aaa
orl
aas
popa
rcrb
xorl
fadds
stos
or
lods
sub
pop
decb
sub
adc
ja
ljmp
or
repnz
mov
cmp
lock
mov
popf
in
xor
jno
cld
in
sbbb
mov
jbe
cmc
sub
fwait
sti
inc
sbb
sbb
pushf
push
xorl
lds
pop
dec
cmpsb
xchg
pop
cmp
cmp
bound
mov
sahf
jae
sub
inc
xor
adc
mov
mov
ds
jne
in
or
push
gs
popf
pop
mov
inc
int
push
pop
xor
das
cmpsb
sub
inc
push
mov
call
cmpsb
xchg
lret
mov
sbb
mov
and
lret
out
cmp
mov
adc
inc
sub
xor
adc
int
enter
out
aaa
sub
stos
fmull
movsb
or
test
dec
popf
aas
pop
dec
lea
ret
jne
xchg
mov
mov
jb
and
int
dec
dec
jne
stos
sbb
mov
dec
jge
push
and
pop
mov
ljmp
ljmp
lret
scas
xor
cmp
sarl
pop
xlat
and
mov
pusha
inc
popa
idivb
xchg
ret
sub
mov
es
test
push
xor
cs
addr16
push
push
or
adc
gs
add
test
add
in
cs
jl
cs
dec
cltd
dec
mov
push
or
cmpsb
lret
xchg
movsb
mov
mov
xchg
shll
jge
xor
out
push
addr16
ljmp
dec
adc
xor
or
fsubp
mov
or
icebp
nop
push
lods
fstps
out
xor
scas
jns
pusha
adc
sti
add
adc
fs
lcall
lods
lret
xchg
or
mov
pop
pop
xchg
data16
pop
mov
or
cmp
mov
out
xchg
inc
out
xchg
repz
mov
and
sbb
clc
inc
andl
cmc
sti
pop
pop
pop
test
cmc
cmp
repnz
negb
mov
cmp
pop
cmp
hlt
or
jecxz
sbb
sbb
scas
fucom
fdivl
aam
xlat
fdivrp
shlb
xor
loope
dec
loopne
sbb
xchg
in
leave
orl
fidivrl
push
lcall
leave
jl
out
sbb
int
outsl
fsub
in
icebp
cmpsl
stos
pop
adc
fbld
cmp
sti
fcmovnbe
outsb
and
dec
ret
jge
push
xchg
push
ss
popa
add
std
lods
adc
cltd
ffree
frstpm(287
ljmp
out
dec
and
sti
fcom
mov
adc
decl
in
push
push
push
xchg
or
neg
ss
movsb
xchg
mov
cli
and
mov
addr16
dec
mov
mov
sub
xchg
dec
adc
and
scas
ja
ljmp
repz
mov
aaa
in
jnp
dec
xlat
cmp
mov
ror
xchg
mov
adc
insb
and
lahf
fwait
out
xlat
mov
pshufw
push
faddp
rcrl
dec
in
rcrl
popa
xchg
fs
mov
inc
sbb
jbe
lock
lahf
mov
cwtl
stc
fs
and
sub
fldl
notl
sub
jns
repnz
mov
psubd
js
xchg
imul
out
mov
dec
lret
cmp
out
mov
xchg
inc
imul
or
rol
cltd
mov
mov
mov
inc
test
shll
stc
mov
cmpb
es
insl
fiadds
in
je
cmp
xchg
mov
cwtl
andb
add
pushf
mov
xchg
jnp
ficomps
mov
arpl
xor
xchg
outsl
mov
xchg
xchg
inc
repz
push
je
andb
int3
mov
cmp
mov
popa
loope
adc
daa
int
or
push
subl
cs
mov
xor
lods
mov
mov
enter
push
jge
loop
daa
into
push
dec
popa
mov
loopne
add
or
test
push
push
and
aas
add
cmp
dec
mov
mov
movsb
xchg
lods
cltd
push
cmp
dec
jb
push
shll
negb
adc
sti
mov
mov
push
fwait
or
ss
mov
daa
cltd
pop
jbe
xchg
sub
incb
out
push
clc
add
xorl
jns
out
stc
loop
enter
iret
or
scas
jge
frstor
sub
loope
imul
sub
fnstcw
test
in
fs
gs
mov
push
stos
jp
inc
pop
push
data16
jmp
cwtl
xor
jno
sbb
jbe
lods
cld
xchg
mov
ds
sbb
mov
xlat
inc
test
inc
fisttpl
mov
fsubl
aas
pop
js
push
mov
or
mov
iret
pop
ds
xor
cmp
jne
shl
iret
call
pusha
pop
pop
mov
dec
out
mov
jmp
jp
mov
xor
mov
call
sbb
das
aad
inc
push
in
or
aas
xlat
stos
and
mov
mov
jae
xor
xchg
mov
cmp
sti
cmp
ss
sub
fiaddl
cmpsl
ja
scas
mov
popa
mov
sbb
pushw
mov
jnp
jp
test
fs
fs
push
stos
int
xchg
cmp
and
push
dec
add
bound
dec
sahf
je
int3
cltd
ja
inc
pop
mov
shll
mov
fdivrl
fdiv
and
adc
dec
mov
test
or
adc
repz
adc
cltd
out
lock
cmpsb
mov
scas
jecxz
loope
mov
pop
imul
mov
xor
fcmovnbe
addb
xlat
adc
aaa
leave
data16
inc
cmpsb
xor
lea
fs
lods
jle
push
push
mov
sbb
or
jecxz
pop
movsl
push
xchg
out
out
or
lds
mov
in
cmpsl
arpl
and
pop
mov
pmullw
sub
ss
enter
or
jp
pop
cltd
out
icebp
outsl
adc
sbb
dec
cmpsb
dec
movsl
imul
mov
add
sbb
cmpsl
in
xlat
mov
mov
xchg
xchg
cltd
pop
mov
push
scas
mov
or
xchg
or
std
decl
gs
mov
jmp
cmp
fdivs
int3
cmc
mov
addl
ror
jno
jns
jno
fs
or
jg
outsl
enter
jmpw
sahf
inc
jo
xchg
xchg
xlat
pushf
jne
fistps
loope
adc
jne
push
xchg
in
pop
jmp
xchg
fmulp
inc
fnstsw
dec
movsl
push
ljmp
cli
cwtl
cmpsl
jae
movsb
mov
pop
xchg
bound
xor
sbbb
movsl
mov
xchg
pushf
xchg
lret
test
cmp
arpl
fsubrl
mov
adc
bsr
push
lods
andb
cmp
pop
cs
lods
out
mul
sub
pop
ret
add
jl
dec
mov
dec
push
outsb
inc
pop
out
mov
or
negl
stc
test
into
orl
aaa
pop
pop
aam
cmp
mov
aad
enter
mov
cmp
mov
sub
adc
and
jle
xchg
es
ljmp
icebp
jns
les
sbb
ja
testl
fnstenv
popa
das
mov
scas
sub
jle
psubw
lods
ljmp
out
push
adc
insl
jecxz
pop
mov
fmull
and
mov
mov
push
mov
orl
lods
loop
jb
aas
mov
dec
pop
orb
loope
mov
lock
lea
shll
jecxz
sbb
repz
sub
cmpps
lods
pop
jle
xchg
pop
mov
push
mov
mov
pop
lret
sti
cmc
push
pop
push
cmp
ja
cmp
shr
dec
xor
int
mov
mov
mov
lods
mov
shl
add
into
or
test
or
popf
call
insb
nop
ss
or
mov
inc
fwait
pop
jmp
sbb
inc
dec
mov
dec
push
leave
mov
jle
cltd
or
out
xor
out
out
jle
add
fcoml
cmpsl
adc
mov
adc
adc
in
sub
testl
add
add
cwtl
mov
shll
and
loope
imul
loopne
sub
and
pop
mov
movsb
iret
insl
lods
lock
lods
sub
sbb
jmp
cmp
addb
hlt
out
sbb
insb
and
outsb
mov
lods
cmpsb
call
aad
adc
push
ret
sahf
or
jmp
add
andl
cmc
fmuls
mov
aam
outsb
adc
scas
xchg
frstor
insb
mov
addr16
cli
mov
cli
ja
cmp
sbb
adc
pushf
xor
divb
xor
sub
cmc
out
fcmovnb
in
dec
and
cltd
adc
jns
add
add
xor
imulb
mov
rcll
mov
mov
sbb
outsl
push
cmpsl
cs
add
cli
scas
in
je
aaa
popf
in
pop
jne
mov
inc
sti
adc
loopne
gs
pop
push
xchg
icebp
add
cmp
xchg
lret
js
dec
das
cmpsl
scas
mov
rcrl
enter
bound
push
fs
xor
jno
add
cmp
pop
mov
pop
sahf
inc
test
add
dec
enter
pop
push
or
pop
fwait
lods
sti
inc
push
xorl
and
jge
or
jmp
mov
addr16
int3
mov
fimull
lea
es
add
pop
xchg
and
adc
xor
pop
and
mov
dec
mov
ds
xor
pop
jecxz
xor
pop
ds
ja
lcall
call
xor
inc
push
cli
dec
dec
call
sbb
xchg
dec
cltd
and
pop
xchg
dec
arpl
push
mov
js
dec
pusha
xlat
and
fildl
xor
sti
cmpsb
outsl
rcll
addl
mov
inc
out
pop
fcompp
sub
ret
mov
xor
adc
sbb
leave
stos
cmc
dec
dec
inc
inc
mov
loope
not
imul
push
cmp
js
fmuls
mov
fdivs
mov
jle
int
push
push
test
negl
xchg
data16
push
jle
push
xchg
orl
fcmovu
subl
mov
sbb
es
jne
mov
lock
rorl
cmc
jno
mov
pushf
xor
lods
xor
fwait
inc
sbb
addr16
popf
je
mov
loopne
mov
out
cmc
sti
jae
and
xor
inc
or
cmpsl
insb
out
cmpsl
xor
lret
adc
jbe
mov
filds
push
stc
out
dec
clc
negl
mov
js
add
in
sarb
adcb
jl
inc
fwait
pop
mov
sbb
pop
jae
andb
loop
ljmp
jmp
das
pop
jbe
xlat
xchg
pop
lcall
bound
std
mov
mov
mov
pop
pop
jle
cmpl
dec
mov
jb
subb
jo
in
xchg
flds
xchg
mov
mov
dec
mov
xchg
mov
ja
loopne
xor
jnp
xchg
shlb
out
adc
jo
aad
insb
test
sbb
pop
mov
cmp
dec
mov
scas
ja
sbb
aad
ljmp
push
pop
jg
and
mov
mov
sbb
add
pop
sbb
mov
les
in
and
lcall
sub
bound
lds
subl
push
xlat
mov
mov
or
sahf
mov
lret
fcmovnu
push
jne
and
ret
push
cmp
mov
out
xor
popa
xor
js
std
aaa
fidivrs
ret
xchg
in
mov
test
and
push
jp
scas
inc
jo
dec
shll
fpatan
push
xchg
inc
and
je
jge
jle
sbb
mov
nop
cmpsb
fnsave
add
aaa
sbb
out
mov
xchg
xor
sbb
inc
outsl
packssdw
cmp
jg
leave
not
xchg
pushf
dec
jl
clc
mov
lret
loopne
dec
movsl
es
in
adc
dec
ret
jo
ds
adc
aas
ds
repnz
shl
mov
cmp
lahf
xchg
movsl
out
icebp
push
jl
les
and
pop
cmc
pop
daa
mov
and
push
cltd
mov
push
jns
adc
addr16
jno
ret
xor
inc
mov
inc
rclb
fildll
mov
mov
dec
popf
out
jl
in
mov
sub
sahf
sbb
jge
js
or
jle
ja
sub
or
pushf
adc
mov
add
pop
xlat
cltd
in
pop
popf
cwtl
imul
push
lods
sub
hlt
in
inc
call
lcall
dec
stc
xchg
pop
out
cmpb
cmp
out
jnp
and
xlat
mov
jp
mov
mov
adc
jne
sub
adc
ror
stos
push
mov
xor
cmp
ss
frstor
mov
fadds
mov
push
loopne
add
jo
xor
fwait
push
lock
inc
fcoml
or
xor
inc
xchg
cmc
xor
push
daa
pop
xchg
jmp
cmp
xor
aam
dec
in
mov
push
cli
dec
add
push
std
sbb
xor
arpl
leave
xchg
mov
xor
pop
shl
and
lods
lock
test
adc
add
push
sbb
jmp
inc
add
jecxz
sbb
push
xor
mov
out
das
aam
and
cmp
xchg
cmp
push
outsb
jbe
cltd
xchg
and
cld
adc
mov
pusha
out
cld
loopne
cmp
sbb
cs
mov
jb
ss
mov
sub
mov
cmp
adc
push
test
daa
outsl
inc
push
movsb
adc
movsl
mov
sti
je
add
jg
ffree
cmp
popf
jae
divb
and
inc
xlat
loope
sbb
push
nop
lret
cmp
push
mov
inc
sub
push
fcomps
fldl
insb
inc
icebp
fisttpl
xchg
pop
jb
movsl
mov
mov
fwait
mov
mov
sbb
sub
inc
sbb
lods
lcall
pop
daa
out
inc
push
xchg
jmp
arpl
movsl
mov
cmp
lods
add
je
icebp
cmp
into
push
xorl
repnz
es
outsb
inc
jb
push
push
scas
lret
out
mov
cli
push
arpl
movsl
jno
jo
outsb
ret
fdivp
mov
xchg
push
mov
sbb
sub
negl
sub
xchg
inc
fs
shll
xchg
cmp
inc
subl
ljmp
test
mulb
jb
orl
push
int3
testb
sbb
or
or
stos
jb
pop
cmp
mov
mov
adc
add
add
push
or
sub
movsl
sub
and
jb
or
aad
jae
sbb
subb
pop
cmpsl
shl
stc
inc
sti
inc
lret
movsl
js
loop
rorb
push
push
fwait
push
or
xchg
insl
push
mov
lcall
cli
divb
lahf
hlt
out
sbb
int3
mov
insb
in
stos
lret
mov
repz
hlt
addl
jbe
push
aaa
rcrl
pop
mov
jo
cmp
iret
ret
xorl
lret
cmp
ret
adc
adc
xor
fisubl
xchg
pop
das
sub
mov
lret
std
shrb
jns
bound
jp
ss
mov
xlat
js
push
aad
and
sub
add
movzwl
outsb
ret
sbb
push
shll
jg
pop
xlat
addb
aad
andl
int3
mov
mov
jle
roll
jge
popa
jecxz
jmp
push
out
push
sarb
ja
popa
push
jne
cltd
jl
and
pop
setle
dec
cmp
fscale
faddl
sub
inc
mov
dec
and
sub
push
fistps
xchg
push
daa
or
cld
pop
mov
sub
addr16
sahf
test
ss
cmp
mov
subl
aad
xchg
ds
scas
daa
sub
sbb
mov
push
inc
mov
mov
div
add
lahf
and
orl
pushf
shrb
pop
loope
mov
mov
add
mov
mov
cmp
mov
dec
push
ret
jl
dec
and
cmpsl
loopne
aad
or
push
xchg
imul
dec
and
das
sbbl
cwtl
jo
aas
jge
int3
ss
pop
mov
cmp
cltd
or
popa
outsb
test
cmp
push
stos
xchg
sub
pop
lcall
roll
and
and
mov
icebp
inc
add
imull
mov
bound
imul
pusha
rcrb
push
sbbb
in
xor
lahf
cmc
lods
pop
cmpl
mov
or
jnp
into
das
lods
add
lgs
dec
cmpsl
arpl
mov
cmp
leave
out
mov
xchg
lahf
imul
mov
aad
push
jl
xchg
cwtl
lret
add
std
inc
mov
adc
xlat
add
push
fsubr
int
imul
xchg
xorb
ficompl
push
and
movsl
shr
add
cmp
jnp
sbb
push
out
imul
push
mov
lcall
jmp
add
sti
stc
aaa
cmp
cs
jge
rclb
cmpb
loop
dec
mov
ret
inc
mov
xlat
movb
in
loope
aas
mov
adc
je
js
fsub
in
push
fwait
repnz
push
and
fistpl
push
sub
push
cmp
sbb
subb
pop
xor
lret
mov
addr16
pop
mov
shrl
lods
sub
lahf
push
test
sub
xchg
scas
pop
pop
pop
push
mov
dec
push
imul
aam
lea
rorb
or
mov
cmpsb
stos
repnz
jno
and
ja
push
adc
into
fdivp
xor
test
xchg
loope
push
cltd
int
les
mov
pop
sub
adc
lock
xor
pop
pop
dec
adc
out
jns
cmp
movsl
fisttps
scas
mov
push
cmp
inc
mov
fmuls
in
test
mov
movsb
les
add
push
and
fsubs
inc
pop
xchg
xor
int
mov
mov
mov
or
ficoms
inc
addr16
pusha
jp
jno
movsb
dec
push
add
or
sbb
mov
rcll
out
add
adc
cmp
inc
repz
xor
enter
inc
cld
cld
jno
fimull
cmp
adc
xchg
cmp
push
dec
fstpl
cmp
popa
jp
jbe
in
ret
jb
ret
push
inc
movsb
jb
dec
ds
or
mov
jmp
jae
testl
ficoml
fwait
bndstx
xchg
les
xor
cmp
cwtl
add
mov
je
or
sbb
dec
lock
jmp
in
cmp
out
sahf
bound
push
push
fwait
gs
pop
mov
push
and
dec
loope
xchg
jecxz
or
adc
hlt
jno
cmp
mov
pop
repz
testb
fcompl
stc
push
xchg
shrb
mov
mulb
rolb
movsb
scas
sbb
or
out
sub
test
jp
pop
in
hlt
or
outsl
idivb
mov
dec
daa
ret
inc
sub
addr16
pop
mov
adc
fadds
pop
sbb
pop
scas
cmp
xorb
iret
stos
mov
push
out
mov
pop
loopne
sbb
adc
test
and
dec
in
repz
jge
mov
js
mov
movsb
aas
push
js
cmpsb
rol
add
repnz
and
cltd
test
jecxz
pop
fnstcw
jle
insl
lcall
loop
sbb
test
int3
adc
daa
or
int
sub
loopne
adc
movsl
mov
push
fdivl
sub
fcmovne
addl
js
lahf
orb
int
add
or
pop
mov
test
iret
cltd
or
cmc
lea
movsb
sbb
insl
sub
enter
test
inc
pop
inc
jno
out
sbb
lods
repz
dec
push
imul
mov
fmull
sub
mov
adc
fistl
and
and
iret
ja
mov
out
sbb
cmove
stos
jecxz
sbb
jge
ss
popa
or
mov
jne
jl
dec
rclb
inc
cld
imul
cmp
pusha
lock
xor
adc
aaa
cs
xchg
cltd
pushf
sbbb
loope
mov
mov
lret
or
in
or
mov
mov
add
imul
pop
mov
imul
xchg
addr16
les
inc
mov
sbbb
arpl
dec
jo
dec
mov
adc
sbb
fwait
cmp
fidivrs
std
push
nop
jnp
or
pop
enter
pusha
jge
outsb
push
sahf
mov
xor
icebp
xlat
daa
push
aam
push
mov
aad
setle
or
stos
pop
pop
jae
out
or
movsb
mov
fldl
mov
sbb
sbb
addr16
sbb
jmp
std
aam
fwait
imul
sbb
xchg
shlb
cmp
cltd
sub
pusha
sarb
push
testl
or
les
leave
xchg
je
fs
clc
push
cmpsl
insl
adc
aas
dec
sbb
xchg
mov
mov
push
jne
movsl
sub
aad
jp
cmpsb
pop
inc
xor
xorl
xchg
movsb
cmpsl
jb
shlb
in
add
or
pop
arpl
sarl
xor
aam
push
or
inc
lea
inc
shlb
sbbl
adc
xchg
fwait
dec
je
stos
jp
fsubp
daa
imul
das
mov
add
push
xchg
xchg
ljmp
adc
es
dec
and
or
jmp
ss
adc
mov
xlat
mov
mov
add
or
jge
cwtl
and
loopne
std
pop
cld
sub
dec
add
jmp
clc
insl
add
inc
std
add
or
shrl
push
xor
es
inc
imul
outsb
leave
pop
cmpsb
mov
inc
popf
mov
repnz
mov
push
repz
clc
leave
mov
addr16
inc
push
push
loop
adc
inc
adc
mov
cmp
sbb
adcl
fcmovb
outsb
mov
or
in
pop
lods
mov
stc
fistps
inc
or
and
shrl
hlt
or
subl
adc
add
adc
add
xor
sbb
jnp
jl
push
pop
hlt
push
mov
sbb
mov
mov
mov
adc
adc
fldenv
inc
out
pop
call
inc
pop
xchg
mov
popa
adc
or
xchg
dec
push
loope
cltd
cmpsb
jecxz
and
mov
push
xor
in
aas
in
hlt
adc
fcmovb
push
ficoms
test
xor
xchg
mov
dec
xchg
cmovnp
inc
xorl
push
mov
mov
pop
std
push
ret
cli
adc
adc
stc
nop
shrb
xchg
xchg
adc
push
inc
imul
inc
notb
sub
dec
xchg
rol
adc
or
pop
or
repz
aam
js
lcall
iret
subl
lahf
jae
add
dec
xlat
dec
int
dec
mov
ror
lret
scas
mov
fistl
jl
fs
push
enter
lods
sbb
repnz
xchg
das
sbb
insb
cwtl
test
mov
jg
jl
rolb
cmpsl
ljmp
mov
outsb
add
jge
mov
pop
cmp
std
sbb
lea
push
push
stos
push
fldl
sbb
push
mov
jnp
std
dec
inc
or
shll
int3
scas
out
mul
or
in
xor
sbb
pop
adc
lret
or
in
nop
adc
jb
mov
lahf
cmp
mov
push
lret
pop
sbb
pushf
roll
rolb
mov
insb
bound
pop
das
mov
cli
insl
repz
enter
jmp
loop
adc
jb
pop
adc
call
inc
sub
sbb
test
scas
mov
ljmp
dec
sub
mov
sbb
sbb
mov
mov
inc
jmp
cmp
push
call
xchg
popa
push
xlat
leave
ds
mov
out
lock
adc
sub
or
pop
sub
jge
fmul
iret
or
mov
lea
daa
fdivrs
mov
sbb
and
mov
arpl
ds
lret
and
dec
lods
fiadds
sbbl
cmovne
jne
xor
mov
test
cmp
popa
cwtl
sbb
mov
lret
mov
jg
cltd
mov
sbb
lods
cltd
xor
movsb
mov
xchg
mov
push
movsl
shrb
ja
ljmp
fisubs
sahf
jo
js
push
cmpl
cmp
fnstsw
pop
divl
pushf
jmp
insl
stc
pop
lods
inc
sahf
sub
pop
jle
iret
cmp
testb
test
xchg
mov
enter
cmp
mov
xor
mov
lret
js
in
cmp
sub
pop
mov
lcall
int
inc
pop
iret
sbb
mov
inc
xor
push
data16
jne
mov
ljmp
rorb
jbe
add
adc
scas
xor
mov
lahf
outsb
loop
loope
gs
sbb
jge
loopne
pop
xor
push
mov
mov
jb
sbb
or
adc
sbb
in
lahf
cli
sbb
dec
inc
popf
cld
aad
pushf
mov
hlt
mov
jo
adc
lea
sub
adc
or
aad
fisttpl
mov
lods
add
push
stos
icebp
cmc
or
test
dec
int
cmp
jmp
mov
mov
push
jbe
pop
jp
bound
into
aad
scas
add
and
sub
pop
xlat
je
xor
mov
xchg
popa
out
lcall
add
subl
jnp
cmp
shl
cmp
xor
sub
jmp
lret
ds
dec
ret
fsubr
or
mov
int
lods
js
outsl
xchg
push
mov
mov
js
outsl
movsl
add
in
inc
decl
pop
add
sbb
push
mov
push
into
adc
mov
ds
mov
cmp
insl
out
push
jbe
maxps
test
jbe
aas
out
push
movsl
cwtl
fmuls
jb
fdivrs
sub
mov
mov
cmp
xchg
jb
xor
imul
shll
push
dec
pop
jns
mov
push
pop
add
add
lahf
mov
and
lods
xchg
lods
daa
sub
fwait
mov
jo
loopne
xchg
sti
cmpsl
pop
and
push
js
aas
sub
add
inc
or
push
not
mov
add
push
jp
outsl
cli
cmp
mov
xchg
push
pop
int3
movl
or
test
jb
mov
or
sbb
dec
insb
lds
pop
cmp
jp
sub
shlb
mov
outsb
aas
movsb
adc
fiaddl
xchg
xor
lcall
pushf
cmp
icebp
sbb
sbb
jae
pop
pop
or
mov
cltd
mov
adc
xchg
fs
mov
mov
add
add
jo
fwait
add
mov
jmp
daa
jae
mov
fs
lret
push
mov
sub
or
std
add
push
sbb
stc
jbe
cld
and
js
inc
lahf
adc
push
sub
jg
xchg
insb
or
fisubrs
in
bound
cmp
pop
fstpl
out
pop
jge
orb
out
add
push
xlat
imul
or
adc
add
ror
mov
adc
ret
outsb
sub
jmp
arpl
insl
jle
cmp
pop
xor
sbb
cltd
mov
in
imul
adc
insl
iret
stos
test
and
aaa
mov
or
aad
dec
dec
stos
aaa
xchg
stos
pop
push
insb
or
sbb
je
fcom
das
repz
sub
mov
adc
fwait
jg
lret
cmpsb
dec
push
in
mov
adc
xchg
push
jmp
push
loopne
sti
sub
xchg
pop
mov
push
and
sub
sbb
or
aad
pop
loopne
push
icebp
xor
jnp
push
stos
lds
add
call
es
stos
sub
xchg
loop
add
sahf
pop
add
sbb
xor
pop
outsl
push
out
sub
outsb
ss
aas
inc
roll
fwait
mov
xchg
push
outsl
mov
fwait
pop
or
xlat
jmp
inc
push
dec
shrb
cli
popa
int
test
pusha
lods
mov
jle
ljmp
xor
xchg
push
mov
mov
movl
mov
mov
imul
jmp
sub
daa
aad
repz
bnd
les
mov
and
fistpl
and
pop
xchg
lds
outsl
lret
ret
mov
loopne
pusha
adc
mov
ror
idivl
sbb
int
dec
in
add
mov
xchg
icebp
insb
sub
mov
push
push
icebp
fldt
mov
shll
inc
cmp
cs
mov
push
jmp
mov
leave
jbe
loope
movsl
mov
mov
out
sbb
dec
mov
out
pop
sub
or
or
scas
loop
sbb
mov
inc
cltd
fs
xor
push
addl
mov
ret
clc
mov
pop
jbe
inc
fldt
push
sti
push
outsl
dec
icebp
int
jno
daa
push
daa
or
std
stos
xchg
pop
insb
add
dec
xlat
in
popf
rcrb
pop
adc
push
cltd
pop
xor
cmp
je
mov
dec
test
mov
lcall
lret
popa
fldt
inc
dec
pop
ret
dec
add
out
mov
out
hlt
movswl
mov
mov
scas
add
int
and
outsb
pushf
adc
hlt
mov
or
add
sub
cmp
lret
jae
pop
in
dec
xor
xchg
mov
pop
imulb
dec
xlat
andl
jg
cmpb
adc
rcrb
fistpll
xor
pop
in
cmp
sub
enter
lret
jne
xor
mulb
push
push
xor
scas
mov
jg
pop
mov
pop
notb
mov
lock
pop
mov
scas
inc
sub
sbb
push
movsl
jns
repz
loopne
divl
mov
lret
xlat
push
pop
mov
sbb
hlt
sbb
add
cli
mov
bound
jp
lahf
sub
popa
pop
jecxz
scas
shl
mov
inc
jb
xor
movsl
test
push
xchg
cmc
cmp
and
dec
out
xchg
pop
jge
or
cmp
xchg
mov
add
add
cmp
pop
jae
daa
jbe
aaa
push
or
mov
jmp
sub
push
dec
mov
push
adc
hlt
xchg
xor
sub
sti
mov
inc
loope
dec
rcrb
arpl
cmp
movsb
fldl
sbb
and
mov
jmp
adc
out
sbbb
cmp
das
or
ja
mov
lea
inc
outsl
insb
mov
imul
and
ljmp
leave
mov
test
cmc
and
jecxz
cli
dec
dec
adc
inc
pop
sbb
das
and
jl
mov
xchg
adc
stos
sbb
adc
in
or
push
fmull
data16
adc
lock
dec
sub
xchg
mov
roll
jmp
mov
in
sarb
repz
adc
push
scas
jge
jp
mov
mov
js
movsl
data16
jg
rcll
stc
inc
push
push
scas
xchg
sub
cmpsl
mov
ret
dec
outsl
mov
push
dec
pop
pop
fwait
sub
mov
cld
push
push
cmpsb
in
xor
lods
loope
dec
sbb
mov
pushf
outsl
jo
in
scas
jg
push
rcrl
push
xchg
cltd
mov
push
mov
pop
loopne
add
xchg
inc
inc
in
or
pop
push
cmp
fcompl
add
mov
out
and
aad
fwait
rorb
pop
xchg
sub
sub
ficoms
jle
test
in
fldcw
jecxz
adc
testl
mov
cs
add
scas
pop
cs
and
gs
insb
mov
pop
mov
std
mov
in
sbb
sub
mov
pop
cltd
sbb
add
loopne
rorl
lahf
lret
sarl
repnz
mov
loop
daa
dec
mov
adc
addr16
das
arpl
mov
les
test
movsb
push
xor
inc
sbb
leave
mov
sbb
not
mov
sti
cmc
mov
push
out
jmp
hlt
in
nop
andb
out
std
mov
fsubrl
push
add
leave
push
jl
lret
imull
and
sub
data16
jl
pusha
xor
lret
inc
enter
add
jmp
or
jle
aad
rorl
bound
mov
daa
pushl
rcrb
stos
push
jne
pop
jnp
jbe
sbb
loopne
push
or
fnsave
add
mov
addr16
xor
push
push
es
shl
and
insl
mov
shlb
les
dec
mov
sbb
sub
xor
bound
dec
shll
out
scas
mov
mov
loopne
push
xchg
loope
mov
push
iret
enter
sub
mov
int3
mov
xlat
xorl
lods
mov
fs
lock
cmc
jl
jo
mov
imul
test
and
dec
fnstsw
jle
lcall
int
add
add
add
addb
push
lods
pop
adc
cltd
out
fmul
scas
lods
dec
stc
ds
mov
bound
sub
jmp
cli
stc
cwtl
bound
or
jmp
inc
or
clc
dec
mov
cmp
fidivrl
jo
arpl
push
stos
add
cmp
add
imul
xchg
push
sahf
xchg
rcl
fstl
out
pop
je
pop
mov
into
push
bound
sbb
mov
fabs
mov
scas
sub
jg
iret
mov
stos
add
or
push
sub
and
jmp
fidivrl
cmc
sbb
cmp
xchg
mov
iret
cli
in
inc
inc
aad
mov
mov
mov
push
loope
pusha
add
inc
xor
scas
je
inc
jg
scas
cmp
lahf
cli
mov
fsubs
mov
jle
sbbl
subb
inc
outsb
loope
std
jmp
loop
pusha
push
cwtl
pop
in
leave
stos
cltd
out
xor
adc
pop
mov
cld
push
lods
pop
mov
cmp
pop
add
aaa
cmpsb
pop
xor
sbb
movups
popa
push
pop
mov
repnz
test
add
mov
shlb
dec
test
cli
js
scas
sub
nop
and
shrb
pop
stc
xchg
and
pop
imulb
aas
sahf
mov
js
and
or
sahf
ret
inc
cmp
shl
mov
cmpsl
popf
adc
or
in
mov
daa
sti
cmp
cmp
dec
inc
fistpl
cli
add
shrl
repnz
dec
addr16
iret
inc
cmc
sub
ffreep
mov
mov
jns
mov
cs
or
jne
in
mov
cmp
mov
cwtl
jns
sub
test
mov
add
loopne
xchg
xchg
cmp
or
push
push
adc
cmpb
dec
mov
orl
pop
arpl
insb
mov
mov
mov
lods
xor
xchg
mov
sub
mov
mov
pop
dec
cmpsb
xchg
pop
or
inc
xchg
jmp
add
dec
imul
cltd
inc
mov
shrd
aas
jle
mov
xor
push
adc
mov
cld
inc
mov
addl
sub
repnz
fs
adc
xchg
dec
icebp
rorb
xchg
push
xchg
xchg
or
outsl
outsl
mov
xchg
lret
ja
mov
cmp
or
clc
test
arpl
lods
adc
js
repz
icebp
fisubl
mov
xlat
pop
mov
mov
adc
ror
fdivr
adc
mov
and
sbb
daa
cwtl
es
or
xchg
fwait
je
sahf
addl
mov
rdtsc
outsl
cmp
scas
cmp
jmp
mov
add
push
dec
dec
imul
mov
lds
cmp
or
push
or
inc
cmpsb
mov
xchg
jb
sar
sbb
cltd
pop
push
int3
nop
add
mov
and
hlt
jo
in
repz
push
call
repnz
out
movb
mov
jl
fidivl
rorb
adc
sbb
adc
fists
mov
mov
popa
dec
xor
mov
mov
ret
mov
cli
cmp
lock
push
shrl
in
fsts
js
mov
jo
test
mov
xor
int3
clc
jbe
jl
inc
cltd
clc
imul
lahf
test
sub
pop
outsl
pusha
adc
mov
pushf
cs
pop
movsb
push
mov
lahf
dec
pushf
jne
test
sbb
dec
orl
pop
aad
adc
cltd
dec
and
mov
mov
mov
movsb
and
fs
cltd
jne
jmp
mov
add
pop
inc
push
mov
dec
stc
rcrl
ret
sub
int3
and
int
aaa
xlat
and
xchg
and
and
lahf
popf
sub
std
mov
fdivrs
sbb
aam
sub
fimuls
popa
xchg
push
loope
js
sti
mov
push
dec
in
pop
mov
and
lods
jmp
fidivrs
xchg
dec
testb
push
les
fcompl
sub
jbe
inc
pop
pop
insb
cmp
pop
xor
in
fists
sbb
jge
mov
adc
push
jg
add
loopne
stos
push
pop
inc
adc
jnp
mov
lea
push
add
xchg
jge
xor
es
push
pop
xchg
sbb
lods
xchg
scas
les
insl
sub
dec
dec
mov
sub
cld
and
int
add
divb
push
scas
bound
sbb
aam
jae
mov
sub
insb
lods
andb
dec
lods
in
xchg
pop
ret
inc
add
sub
loope
mov
mov
leave
push
aas
fwait
push
test
xchg
mov
repz
outsl
push
cltd
add
and
jmp
cmpsb
insl
fmuls
mov
int
jg
movsb
xlat
movsb
jle
sbb
aam
pusha
call
int3
mov
inc
or
push
mov
inc
xchg
ret
xor
iret
jle
cmp
outsb
lret
popl
lea
fists
lds
popf
sub
rorl
int
adc
jle
mov
pop
inc
ret
xor
outsb
xchg
fcmovnu
or
leave
add
cli
cltd
cli
lret
xchg
jns
out
cld
fisubrs
icebp
add
push
jns
cmp
pop
add
sahf
ds
mov
add
xlat
sti
mov
repz
mov
adc
testb
jnp
jnp
insb
jl
or
insb
cwtl
lea
loope
das
add
adc
mov
xchg
div
add
xchg
sbb
mov
jge
into
and
mov
aaa
xchg
fstl
or
pop
xor
in
sub
pop
lahf
imul
clc
jmp
lret
aam
push
xor
je
jmp
push
imul
out
cmc
pop
scas
adc
pop
xor
dec
fisttpl
decb
ficompl
mov
lcall
jb
mov
scas
ret
lret
dec
scas
pushl
sahf
std
adc
pop
aam
ret
pop
jbe
leave
push
scas
shl
push
adc
jne
das
xchg
shll
loopne
lds
rolb
lahf
div
push
loopne
xor
repz
cmpsl
rolb
int3
out
mov
in
jns
and
and
xor
nop
or
xor
xor
stos
lds
sbbb
mov
mov
cmp
jmp
and
or
inc
push
fmul
in
add
push
lods
xor
mov
rolb
stos
roll
jge
mov
xchg
cli
les
adc
mov
mov
movb
add
jmp
iret
inc
jbe
mov
push
adc
lods
add
cmp
and
repz
into
inc
add
iret
ss
mov
pop
pop
mov
popf
fstpt
repz
xlat
xchg
jb
jo
pop
and
lret
les
xchg
dec
loopne
pusha
les
int
adc
mov
repnz
dec
pop
insb
cmpsl
fbstp
cmpsl
lret
jns
stos
pop
inc
pop
jmp
shl
mov
dec
std
stos
lret
imul
jbe
dec
xor
push
or
fwait
adc
add
xchg
xchg
xchg
xor
push
mov
loope
iret
inc
fstp
out
rolb
ret
push
sub
daa
and
xchg
add
mov
cmpsl
push
pop
inc
pop
push
ret
push
xchg
push
add
push
adc
cmp
xchg
mov
push
jo
xlat
sbb
sbb
cmp
add
xchg
jl
adc
fdivs
lea
je
enter
and
cmc
cs
sbb
sti
mov
mov
fbld
ljmp
or
push
inc
in
cmp
mov
xchg
dec
jle
mov
add
daa
dec
cmp
sbb
loop
lock
aas
cwtl
imul
cli
cld
mov
std
jo
mov
mov
shll
dec
cmpsl
pop
adc
nop
push
sbb
repnz
js
ret
scas
aad
js
enter
loop
in
mov
pop
insl
or
ljmp
ss
sbb
xchg
pop
add
pop
xlat
push
fdivrs
sahf
pop
in
mov
push
imul
ss
push
push
int
popf
test
mov
es
jle
test
clc
rcr
es
xchg
data16
pop
sti
pop
jl
add
lods
or
ljmp
loope
repnz
and
pop
push
out
je
repnz
push
xorb
lods
rorl
test
aam
rcrb
insb
inc
dec
fdivr
test
lcall
adc
lock
fwait
data16
pushf
pop
out
push
test
sbb
push
push
data16
push
sbb
movsw
adc
cli
sti
sub
cmp
or
pop
or
pop
sbb
adc
js
test
sbbb
pop
xchg
xchg
push
sub
pop
xor
xchg
inc
cmpsl
jge
test
fbld
stc
das
pop
lret
in
mov
shll
addr16
repnz
jg
jecxz
lock
aam
aas
or
shll
cmpsl
insl
cmpsl
mov
movsb
cmpsl
and
pop
sahf
fucomip
pop
push
and
es
into
pusha
aaa
or
and
adc
rcrl
ljmp
push
mov
mov
cmp
arpl
sub
dec
push
outsl
rolb
lret
cmp
inc
inc
sub
mov
or
enter
jecxz
mov
pop
jnp
sbb
imul
test
mov
rclb
call
in
hlt
mov
mov
ret
ljmp
mov
lods
jns
push
add
mov
test
pop
out
mov
jmp
icebp
inc
sbb
popf
cwtl
ficoml
sub
flds
lret
fs
pusha
shl
fs
enter
repnz
sub
push
lods
imul
rol
inc
test
aad
les
arpl
sub
adc
mov
mov
and
sahf
and
lahf
repz
mov
jae
fnstsw
jg
daa
mov
add
push
pop
mov
ret
mov
in
scas
pusha
and
inc
push
movsb
int3
mov
pop
push
test
pop
xchg
dec
pop
jo,pn
xchg
push
mov
pop
dec
divb
push
push
add
xchg
pop
mov
mov
mov
cwtl
sar
ja
xchg
jl
push
addr16
add
mov
add
jne
icebp
adc
adc
lock
add
pop
pop
mov
mov
inc
adc
pop
insb
scas
adc
jbe
fdiv
adc
aaa
inc
add
mov
cmc
lret
mov
mov
lcall
shrb
mov
outsl
adc
aaa
inc
dec
sbbl
sbb
pop
sub
pop
sbb
lods
jae
cli
xchg
xchg
adc
ss
jae
mov
mov
test
add
fwait
insl
loopne
dec
cmp
push
out
inc
ret
aad
dec
dec
lock
add
xchg
ljmp
lods
dec
outsb
aas
sbb
pop
xor
xor
test
cmp
insl
outsb
sub
push
adc
aas
push
scas
push
enter
sub
ret
test
jno
sbb
push
jo
sar
and
rol
pop
adc
sbbl
add
lds
dec
dec
cmp
sbb
notb
call
mov
dec
data16
scas
cmpb
xchg
movsl
orb
pop
nop
inc
add
movsb
dec
xchg
cs
xor
hlt
dec
cld
leave
mov
inc
hlt
mov
roll
ljmp
out
add
push
sub
mov
test
sub
pop
shrb
xchg
adc
adc
movsl
mov
inc
xchg
mov
add
out
mov
shlb
repz
int
sbb
aam
pop
jnp
movsl
clc
push
push
push
arpl
fs
mov
popl
jle
sar
hlt
dec
xor
xorl
outsb
xchg
pop
mov
nop
dec
cmp
hlt
dec
ficoms
add
dec
mov
lock
stos
pop
jno
add
xchg
incb
xchg
jp
hlt
xchg
pop
mov
rolb
adc
je
mov
adc
push
insb
shrb
nop
mov
test
inc
leave
mov
pop
je
pmaddwd
mov
sahf
cmpsl
into
divl
fwait
ljmp
push
push
imul
xchg
inc
xlat
shll
outsl
inc
pop
and
loop
fwait
mov
inc
lods
dec
lcall
fmul
in
pop
mov
movsl
sbb
cmc
mov
lods
and
pop
add
add
movsl
add
lahf
fcmovnb
fs
pop
and
inc
pop
rolb
hlt
push
mov
mov
pop
sub
add
nop
add
jne
shrb
into
sub
lods
push
enter
mov
ret
mov
cmp
xor
jmp
dec
xchg
fbstp
lahf
test
ja
or
test
aad
movsb
scas
and
std
sub
xor
cmp
jl
xor
aam
shrl
out
or
repz
cmp
mov
lock
xor
push
data16
inc
cmp
movsl
mov
and
test
push
xchg
dec
cmp
adc
std
push
loopne
jo
cmp
lods
adc
shrl
ret
adc
int
and
dec
mov
cmpsl
es
jno
push
lret
jl
push
mov
daa
data16
mov
aas
ds
je
xor
mov
xchg
sbb
jb
popa
and
inc
cmp
ds
jp
iret
hlt
xor
add
cmp
add
cmp
test
pop
cs
push
add
faddl
cmp
push
pop
sbb
cmp
call
popf
movsb
and
sub
dec
out
push
xor
lods
xor
mov
insb
mov
push
jg
dec
mov
fsubr
push
mov
push
mov
int
cld
mov
cmp
std
inc
cmp
mov
lcall
sarb
or
sbb
pop
xor
cmpsl
xor
mov
jnp
les
lods
add
or
mov
push
mov
gs
mov
ret
movsl
sbb
jns
in
iret
sub
mov
in
inc
xor
jg
sbb
adc
jnp
in
sub
mov
or
push
jb
scas
ljmp
sub
xlat
push
dec
xchg
jne
mov
rorb
icebp
add
fwait
lods
xor
adc
or
in
xchg
pop
ss
pop
repz
imul
cmp
sbb
movsl
jno
push
sbb
das
leave
inc
pop
xor
xlat
sbb
fisttps
rcr
jno
dec
sbb
enter
insl
in
arpl
jae
pop
add
mov
mov
push
sub
and
js
out
loope
aam
je
mov
in
mov
dec
fidivrl
lds
subl
fwait
xlat
lock
adc
adc
test
jmp
sub
jg
lret
hlt
jns
jo
dec
fisubs
cmp
lret
cmpb
fstpl
fcoms
jl
insb
push
decl
bound
lea
jnp
pop
fdivrp
das
addl
insb
pop
stc
push
cmp
mov
or
call
sbb
pop
jmp
out
xchg
add
imul
and
mov
pop
fcmovu
pusha
enter
mov
mov
jg
inc
xor
and
test
fnstenv
inc
mov
xlat
or
sbb
mov
push
bound
push
sub
stos
dec
cmpsb
inc
jnp
popa
mov
and
jg
js
push
sub
mov
arpl
test
jae
int
pop
lock
sub
pop
mov
xor
fldenv
dec
daa
fimull
lcall
aad
fadds
cld
cmpsb
movsl
hlt
and
sub
sbb
pop
idivl
and
inc
nop
rorb
mov
test
inc
scas
adc
std
push
fiaddl
jo
push
fldl
adc
sahf
stos
jne
sbb
mov
scas
dec
sub
cmp
lret
dec
mov
insb
int
mov
inc
mov
jns
adc
cmp
shlb
sbb
inc
or
pop
push
aaa
or
push
xchg
in
repnz
jae
sar
shlb
test
subb
cli
pushf
sub
fdivrl
jbe
push
sbb
inc
fwait
xchg
mov
xor
xchg
dec
xchg
ret
daa
mov
ret
popa
cmp
aad
or
sti
fisubrl
mov
sub
xchg
jle
and
out
imul
push
insl
xchg
jns
lahf
cltd
add
pusha
xchg
mov
pop
loop
mov
andl
shrl
das
sbb
jge
push
xchg
jecxz
popa
mov
jnp
mov
test
mov
lcall
ja
aam
gs
frstor
aas
fcomps
notl
bound
xorb
xchg
jge
rorl
in
adc
adc
jne
sarl
jmp
fsubrl
xchg
shrl
popf
add
movl
inc
mov
test
jae
sbb
cmp
xor
ljmp
pop
lahf
mov
cmpsb
xor
xlat
ljmp
adc
add
das
adc
sub
test
sub
in
push
in
push
test
sahf
mov
mov
cmp
dec
imul
jno
aam
icebp
mov
js
mov
xor
call
ret
push
mov
cltd
jne
rorb
cli
or
test
imul
xchg
lret
lea
lds
call
movsb
and
cmp
popa
add
inc
dec
sbb
sbb
loope
jp
rcrb
pop
cmp
gs
in
xchg
scas
fdivs
push
push
mov
lret
mov
add
add
sahf
dec
or
jp
in
addr16
ret
dec
mov
and
pop
test
or
out
loop
sbb
push
arpl
or
sbb
jns
ror
adc
mov
gs
xchg
fs
cmp
aas
es
push
sbb
add
mul
lds
cltd
push
stos
test
xchg
pop
mov
sbb
popa
mov
pop
xchg
push
lea
mov
cmpsl
das
fistl
lcall
fstp
dec
repz
sub
inc
idivb
dec
in
jl
mov
add
and
jae
in
in
xor
cmp
pop
mov
pmulhuw
mov
lcall
je
stos
mov
js
push
dec
sbb
test
adc
push
cmc
fimuls
fstps
sub
pushf
fsubrs
cmpsl
stc
adcb
sti
addb
imul
xor
xor
dec
pop
ret
sbb
mov
icebp
in
cmpsl
xor
pop
in
mov
dec
nop
mov
js
pop
xchg
xor
fwait
rcrl
fidivrl
clc
lods
sbb
sarl
imul
dec
xchg
adc
call
ss
lcall
movsl
out
xor
call
or
pusha
or
hlt
fs
shlb
push
scas
xor
pop
fchs
lcall
sub
fmull
and
ljmp
add
mov
jb
adc
sbb
push
or
insb
xchg
testb
aas
ja
fnstenv
inc
push
cmp
cltd
mov
ret
in
ret
dec
mov
icebp
adc
cmpsl
cs
xchg
sbb
dec
cmp
mov
dec
xchg
and
mov
adc
add
in
sub
jne
pop
lret
test
inc
sub
inc
mov
lahf
mov
outsb
imul
imul
pusha
inc
repnz
or
inc
mov
nop
imul
les
mov
push
loope
repnz
out
inc
mov
or
sub
cmpsb
xor
push
cmp
inc
add
aam
dec
jge
fldt
stos
repz
clc
popa
adc
pop
andl
iret
mov
cmp
jns
movsl
jmp
jge
outsb
aad
mulb
cmp
mov
mov
sub
sbb
lret
dec
and
push
xorb
sbbl
sti
cmpsb
push
fdivrl
push
and
mov
lea
int3
cmpsb
cli
ljmp
fnsave
pop
mov
cmp
and
adcl
sbb
or
pop
adc
push
test
push
mov
mov
aas
test
addr16
mov
sahf
stos
cwtl
jge
pop
sar
movb
icebp
add
adc
shlb
jp
dec
push
mov
call
mov
push
sbb
das
inc
push
adc
pushf
jns
mov
repz
outsl
or
pusha
and
mov
std
popf
adc
dec
cmc
aas
popf
aam
push
cmpsl
scas
cmp
in
imul
jne
sub
jle
lret
fdivs
sub
pushf
ret
imull
daa
test
jl
cltd
std
push
in
mov
sbb
and
and
outsb
and
adc
push
fs
aas
shlb
xchg
cmp
andb
fnstsw
rcrl
mov
lds
sub
or
notl
idivb
insb
fidivrl
push
and
and
imul
pop
cmc
mov
fbstp
or
sahf
out
notb
lahf
dec
icebp
inc
and
cmpsl
dec
fildll
into
in
and
aad
test
inc
lods
cld
cmp
add
cwtl
fcoms
arpl
andl
inc
cmp
jmp
cmp
dec
jmp
bt
push
pop
dec
lcall
loope
ja
lahf
fistps
dec
imul
ret
sub
mov
out
jnp
mov
cltd
enter
arpl
push
mov
xorb
subb
jl
mov
jne
orb
shl
fimull
fs
je
mov
mov
lcall
push
sub
test
lds
test
jmp
add
cmp
in
or
in
jno
fcmovnb
sub
mov
xchg
dec
lods
or
add
inc
mov
bound
dec
xor
fdiv
push
shll
inc
sbb
or
add
mov
enter
or
mov
sbb
fdivrl
lcall
mov
shll
fsubp
movsb
or
sub
out
xchg
pop
inc
outsl
ja
or
pop
xorl
test
int3
gs
imulb
call
sub
cmp
not
icebp
std
or
mov
mov
scas
ljmp
mov
mov
jecxz
lahf
cli
jmp
fisttpl
addr16
mov
arpl
inc
mov
gs
push
pop
sbb
arpl
mov
sarl
lcall
or
push
movsl
stos
lahf
sub
sub
insl
xchg
les
in
lret
in
nop
xchg
pusha
iret
int3
repnz
add
mov
cs
popf
pop
out
or
fdivrl
outsb
into
xchg
cld
jbe
or
mov
cwtl
xchg
rcll
xchg
and
lea
and
xchg
jg
xor
jns
jmp
data16
ret
outsb
out
jmp
cli
in
aam
push
sbb
jl
inc
repz
mov
mov
lret
adc
sub
hlt
sti
in
out
inc
fs
and
mov
pop
mov
push
ds
outsl
shlb
and
clc
fs
mov
add
ljmp
lock
mov
cwtl
testb
xchg
mov
lcall
dec
xor
xor
mov
sbb
xchg
outsl
xchg
add
jl
mov
mov
push
test
sub
decl
fucom
pop
sbb
mov
insb
pop
inc
sub
sbb
xchg
mov
sahf
mov
or
and
lock
daa
int
xchg
lds
insl
test
jns
fsubs
out
xor
sahf
adc
pop
movsb
movsl
xchg
enter
clc
mov
jb
hlt
lds
pop
sbb
mov
xchg
cs
push
sahf
cs
lods
pop
sbb
sub
xchg
fwait
and
movsb
shl
hlt
inc
push
dec
dec
nop
andb
pusha
push
mov
lds
xor
out
lea
scas
imul
scas
inc
xor
pop
mov
frstor
add
outsb
inc
addb
cmp
sub
testl
dec
jecxz
inc
es
out
call
sbb
sub
push
sbb
shll
sti
push
push
xor
or
inc
mov
cmp
dec
jmp
push
add
mov
jae
inc
push
stc
dec
and
jne
cld
stc
cltd
jnp
in
pop
loop
bound
in
mov
sub
int
xchg
cs
xorb
mov
ficomps
fldl2e
clc
sub
cmp
or
or
outsl
insl
dec
or
push
lea
or
out
push
mov
adc
sbb
adc
sar
icebp
sub
add
ljmp
mov
icebp
in
test
movsl
ds
call
loopne
mov
paddusw
ljmp
inc
testl
inc
cld
mov
fwait
lret
icebp
cmp
test
fmull
jae
int3
ds
aas
cmp
call
mov
rcrl
fwait
jge
adc
shl
xchg
sbb
sub
clc
movsb
jb
lahf
adc
mov
mov
sbb
js
jno
cmp
imul
mov
outsb
stos
cmp
loope
xor
push
mov
pop
enter
clc
add
mov
cli
loopne
or
lods
pop
adc
js
dec
inc
andl
dec
rep
adc
mov
popf
out
mov
lock
icebp
xor
les
or
inc
and
adc
cmpsb
repz
shlb
sarl
push
push
cmp
test
mov
mov
sub
and
cs
int
cwtl
pop
cmc
push
jne
arpl
pusha
jp
insb
mov
jae
gs
lea
imul
scas
mov
rcrb
add
cmpb
sahf
out
xor
xchg
ja
nop
mov
in
into
mov
aaa
and
jg
or
cmp
fwait
inc
nop
pop
mov
hlt
pop
aam
push
add
push
test
hlt
push
mov
xchg
cmp
cmp
xchg
outsb
fcoml
movsb
mov
lds
push
sub
mov
repnz
sbb
icebp
inc
mov
inc
movsl
iret
shr
in
insb
fisttps
pop
jge
ds
jg
and
movsl
shl
sub
pop
sub
outsb
sbb
movsb
int3
movsb
icebp
jnp
jae
cmpsl
jl
jno
in
jnp
fidivrl
lods
filds
cmpsb
js
mov
jnp
ret
pop
icebp
ja
andl
cmpsb
pop
cmpl
test
ljmp
loopne
addb
daa
push
js
xchg
movsl
dec
int
and
or
dec
mov
cmp
stos
pushf
pusha
push
jl
pop
mov
popf
stos
mov
sub
inc
xlat
cld
outsb
mov
jae
dec
jbe
rorl
mov
outsl
ljmp
test
xchg
push
loopne
mov
scas
push
sub
shll
push
inc
xor
rcl
cld
pop
adc
pop
lods
test
test
jb
sub
movsb
dec
nop
dec
lea
scas
push
pop
mov
sbb
stc
xchg
mov
fldenv
test
add
orb
fs
stos
rcrl
sahf
aaa
mov
lea
jb
xchg
mov
imul
mov
mov
movsl
int
std
and
lock
gs
fsubr
testl
imul
imul
xchg
xor
xor
out
pop
jecxz
out
xor
aam
scas
fwait
insb
pop
shl
test
cmp
movl
pop
sti
mov
movsl
push
jnp
xor
and
lock
pop
test
in
lock
mov
dec
cmp
cmpsb
xorl
inc
cs
and
cmp
push
sub
data16
inc
add
pushf
dec
scas
xor
pop
scas
sub
pop
push
push
adc
imul
xor
mov
dec
and
dec
scas
loope
jmp
shrl
jne
out
sahf
xor
jg
nop
sub
mov
jecxz
gs
xor
jns
fwait
leave
mov
jg
mov
pusha
or
pop
fisubs
mov
jmp
scas
movsb
sbb
test
js
scas
scas
test
pusha
test
popf
inc
in
jmp
mov
flds
push
xor
dec
inc
pop
xchg
mov
les
imul
fmuls
xchg
cmp
xor
aaa
ret
int3
inc
fldl
sbb
mov
xchg
xor
mov
mov
stos
mov
xchg
add
fucom
insl
roll
mov
insb
lahf
inc
cmpb
fs
inc
mov
mov
xor
pop
hlt
stos
into
int3
push
call
subl
je
sub
pop
jo
dec
push
or
int
mov
cmpsb
hlt
fisttps
into
addr16
or
clc
mov
leave
push
adc
push
rcll
pushf
mov
or
jge
movsb
shll
jo
jno
inc
mov
mov
cs
int3
sbb
fs
mov
mov
jl
mov
xor
add
adc
scas
add
push
call
dec
std
inc
jo
and
cmpsb
dec
fiaddl
mov
clc
push
push
mov
mov
aas
clc
jnp
lock
or
inc
ret
lahf
dec
jl
mov
sbb
fwait
test
shlb
lds
sub
add
mov
xchg
andl
mov
or
fiaddl
cmpb
dec
pop
rcll
or
push
mov
leave
push
scas
jle
and
hlt
lret
sbbl
pop
add
sbb
push
imul
dec
cmp
int
pusha
jo
inc
push
test
push
cmp
lahf
cmp
pop
jle
add
stos
sub
sti
arpl
lock
mov
adc
vshufps
mov
mov
jmp
repz
or
movsb
dec
push
xlat
pop
call
pop
dec
lea
out
cmp
fsts
and
add
decb
mov
das
adc
lods
les
repnz
or
lret
dec
ja
mov
out
popa
outsl
pop
xchg
dec
mov
pushf
fdivrs
xlat
int
inc
mov
jne
test
cs
or
mov
cmp
les
pop
adc
mov
movsl
xlat
xor
cld
sbb
mov
fisttpl
jp
mov
sub
inc
loopne
xchg
cltd
push
insb
push
push
jo
les
dec
lea
orb
xor
movsb
jle
mov
jle
mov
ja
mov
pop
xchg
sbb
mov
in
mov
mov
out
jmp
aas
xchg
andl
jl
xchg
andl
mov
loopne
push
cmc
pushf
test
xchg
and
sbb
add
push
add
cmp
je
ds
dec
popf
push
fstps
mov
and
ret
mov
es
mov
leave
inc
jb
je
pop
stc
loop
ret
lcall
pusha
pop
cmp
into
xchg
and
mov
mov
xlat
xor
mov
sbb
scas
add
sbb
push
dec
dec
jbe
cmc
pop
icebp
push
cmpsb
mov
repnz
in
add
or
push
cli
sub
lock
dec
popf
mov
xchg
pop
and
push
sbb
outsb
push
movups
rcr
aad
or
xlat
loope
dec
sub
mov
icebp
bound
inc
sub
xchg
push
scas
xchg
js
inc
je
fwait
icebp
push
in
mov
lods
pop
fsubs
sahf
xchg
out
fildl
jle
in
pmovmskb
dec
xor
stos
add
bound
ret
popl
out
jae
inc
aad
dec
jecxz
aas
mov
sub
cs
inc
in
scas
mov
lods
sub
jbe
loop
fs
fdivr
mov
hlt
cmp
cli
dec
shlb
mov
cmp
lds
push
daa
out
int3
xor
fistps
mov
js
sbb
inc
jmp
lret
je
fs
add
or
xchg
mov
jg
fmuls
sahf
or
call
lret
jne
sub
cmp
sbb
das
pop
movsl
sub
popf
icebp
cli
fisttpl
mov
daa
push
jge
and
fwait
rorb
sbb
cs
rolb
mov
adc
mov
jecxz
jo
rclb
add
scas
addl
mov
aam
add
pop
add
idivb
mov
mov
insb
sbb
popa
shl
aaa
sub
fmuls
jge
xchg
adc
push
adc
outsb
sbb
jno
dec
jbe
push
stos
mov
sub
into
mov
pop
mov
or
comiss
mov
cltd
add
les
cmp
jmp
cmp
sarl
push
lods
add
fsubrl
cmpsb
pop
xor
sbb
mov
dec
cmp
dec
mov
cmp
add
fisubl
mov
or
sub
dec
or
dec
std
outsl
push
pop
jmp
lret
push
inc
jle
xchg
cltd
aam
add
mov
xor
push
mov
in
ds
push
rclb
ds
std
enter
fimuls
mov
or
cli
jg
mov
call
decb
add
add
sub
xchg
jl
xchg
mov
scas
lahf
repz
lahf
adc
mov
shll
cmp
lods
or
or
jge
ja
lahf
repz
ss
nop
mov
ret
imul
pop
cmpsl
and
xchg
mov
mov
das
inc
mov
xchg
push
xchg
out
test
mov
xchg
call
pop
out
mov
fdivl
xlat
mov
arpl
loop
outsl
mov
push
pop
sub
mov
clc
mov
pop
ret
or
fs
cwtl
cmp
jecxz
sub
xchg
daa
out
cmp
mov
std
shr
or
cmp
shl
push
in
inc
xchg
cltd
inc
lahf
in
ret
mov
push
mov
mov
daa
dec
jge
xor
adc
fnstcw
xor
push
xchg
ret
outsl
pop
call
out
inc
stos
movups
ds
mov
inc
cmp
inc
or
in
pop
shll
movsb
shr
icebp
or
xchg
in
adc
or
xchg
sti
ret
push
xchg
jecxz
xchg
adc
mov
push
and
mov
cmp
gs
lret
ds
sti
pushf
cld
daa
ret
bnd
sbb
add
aas
clc
jb
inc
sbb
test
ror
mov
ja
insl
enter
sub
iret
das
loop
imul
lcall
shlb
lret
or
sub
cmp
adc
fnstsw
xor
xchg
xorl
mov
andl
add
repz
mov
xchg
push
out
int3
mov
mov
notl
out
fs
jns
xchg
xchg
insb
push
das
bound
out
xchg
cmp
mov
aad
inc
stos
push
fsubrs
add
mov
fs
nop
mov
ret
jne
jo
je
dec
mov
jmp
push
jne
push
sub
lret
or
cli
pushf
push
mov
bound
sub
lods
nop
xchg
or
cmp
lret
pop
pop
shlb
jb
int
pop
test
fnsave
mov
cli
lahf
xor
repz
and
clc
inc
ret
adc
rcr
test
out
xchg
loope
mov
cmc
mov
std
outsb
test
pop
or
xor
repz
orl
add
fwait
cmp
pop
push
xor
jmp
jae
pop
sahf
push
dec
in
jae
push
popf
lahf
bswap
cmpsb
in
mov
jnp
mov
lea
jno
insb
xchg
cmpsl
inc
mov
add
ss
ret
sbb
test
es
repnz
mov
aaa
pusha
lds
sbb
xchg
outsl
jnp
insb
fsubrs
mov
fistps
xchg
js
call
inc
sbb
lcall
mov
dec
cmp
adc
xchg
push
lahf
pop
mov
sarb
enter
jecxz
enter
push
lahf
adc
cwtl
and
mov
xlat
out
mov
xchg
sbbb
pop
xchg
dec
add
sub
push
and
jmp
aaa
sbbb
loope
leave
jmp
adcl
out
iret
mov
dec
add
mov
sbb
and
push
in
push
outsl
sub
pop
dec
int3
stos
xchg
mov
xor
mulb
call
lods
outsl
outsb
test
inc
dec
movsb
outsl
add
xor
xchg
fwait
repz
js
cli
imul
mov
cmc
testb
mov
pop
or
push
inc
subb
imul
repnz
push
cmp
gs
push
ret
int3
dec
xchg
pusha
adc
lcall
aam
lock
or
in
movsl
and
mov
out
lods
fimull
inc
shlb
push
lods
dec
rorl
rcrl
xor
addr16
dec
mov
adc
push
shlb
push
scas
push
and
jl
sahf
in
push
pusha
pusha
mov
test
popf
sbb
mov
nop
hlt
movsb
mov
test
insl
push
filds
sub
enter
shll
cli
inc
inc
shlb
or
mov
xchg
fiaddl
push
ja
addl
in
and
imul
mov
xchg
mulb
pop
nop
lods
inc
mov
adc
jg,pn
xchg
mov
inc
sbb
gs
inc
mov
je
lret
test
lahf
inc
add
push
pop
sbb
iret
xchg
mov
push
mov
addl
push
and
pop
sub
aam
jmp
inc
jae
fstpl
jle
out
mov
aaa
or
out
adc
imul
in
imul
cmp
jae
xchg
push
sbb
pop
addb
mov
jle
mov
pop
ret
sarb
movsb
mov
out
xchg
loope
mov
test
sbb
and
xor
mov
lcall
lret
mov
push
or
pop
mov
daa
cmc
loop
mov
fldt
mov
dec
out
sub
mov
shll
cmp
rol
popf
adc
xlat
mov
div
test
push
adc
out
xchg
mov
imul
jl
lods
lretw
cli
scas
dec
pop
fdivrs
push
sub
xchg
out
jbe
adc
pop
arpl
loop
push
jge
mov
pop
scas
push
jnp
int
dec
out
cmp
test
sub
jae
test
cmp
loope
add
loopne
sub
push
pop
mov
cmp
movsl
mov
add
leave
ljmp
add
pop
mov
mov
and
push
pop
decl
std
push
lods
mov
xchg
jmp
mov
test
loope
in
sbb
jb
insl
es
inc
or
adc
mov
pop
adc
sbb
scas
mov
aam
int
into
daa
dec
xchg
and
ret
mov
out
cld
in
in
idivb
js
mov
push
cmp
mov
dec
lds
push
xchg
fs
stc
cmp
xchg
in
xor
mov
xor
mov
pop
sarl
jmp
repnz
enter
jl
jl
jg
mov
into
xlat
cwtl
lock
negb
push
push
ds
inc
jo
cmp
in
into
xchg
mov
push
rcrl
ret
or
adc
cmp
mov
lea
jb
or
xchg
sahf
pop
test
les
push
outsb
pop
pop
movb
xor
daa
inc
loop
jne
iret
inc
push
mov
mov
add
stc
jne
scas
mov
sarl
xor
popl
fldpi
inc
cmpl
push
popa
inc
pop
xchg
sbb
enter
sub
ss
mov
mov
or
arpl
adcl
push
loopne
insl
mov
mov
fidivrs
xor
in
inc
xorb
fwait
inc
lods
pop
push
sbb
fnstcw
aad
ret
push
je
andb
cmp
and
out
gs
nop
into
pop
cwtl
notb
mov
and
push
pop
sub
rolb
cmp
dec
and
repz
scas
and
xchg
mov
xor
mov
pop
push
loop
pop
hlt
jge
xor
sahf
pop
leave
cmp
fwait
call
loope
cwtl
repz
pop
xor
cmp
push
ret
or
int
stc
or
out
sub
jns
lea
cmp
repnz
popa
xor
inc
stc
pop
jnp
push
andb
pop
pusha
xchg
cmp
data16
repz
ret
fildl
cmpsl
clc
push
ss
cmp
fstpt
jle
jge
sub
mov
lcall
sub
je
mov
ljmp
js
ja
dec
pop
dec
cmp
inc
mov
nop
and
pop
ljmp
push
push
into
fwait
xchg
mov
aaa
stos
shrb
pop
loope
push
fsubp
jo
xchg
mov
mov
repz
pop
sub
movsl
cmp
call
aad
and
in
lahf
jbe
nop
popa
xchg
psubsw
fwait
jl
and
nop
out
orl
mov
dec
and
jp
cmpsl
mov
xchg
jmp
adc
pushf
ficoms
movsb
sti
xor
sarl
int
jp
jbe
sbb
loope
or
sahf
push
shll
inc
jg
fnstcw
pop
xchg
and
sub
das
lret
loop
movsl
imull
sbb
cld
fstpl
out
sbb
icebp
lahf
push
aas
sub
lods
imul
das
sbb
push
sub
jmp
cltd
mov
jmp
stos
dec
leave
je
mov
xchg
xchg
sahf
int
cmp
cli
insb
dec
scas
mov
mov
jmp
dec
aad
test
xchg
adc
call
and
fnstsw
lahf
add
sbb
fsubs
sbb
nop
pop
inc
call
mov
add
cmp
cmp
xchg
pusha
sub
jp
inc
data16
add
mov
les
dec
xchg
sbb
mov
mov
sub
jl
bound
outsl
adc
loope
es
fisubrs
mov
xchg
sub
push
pop
push
js
iret
aam
pop
push
pop
pop
sub
dec
je
scas
inc
in
ret
xchg
jge
cs
pop
popf
sub
repnz
push
xchg
jecxz
and
xchg
inc
gs
fwait
xor
add
dec
std
pop
add
jmp
jp
ds
rcrl
ret
lock
sti
loope
divb
xchg
adc
divb
fwait
mov
jo
xchg
scas
xor
cmp
mov
test
test
out
outsl
in
aaa
inc
movsl
adc
out
inc
lahf
rorl
or
stos
sub
mov
jecxz
xchg
rcrb
fildl
push
sub
in
lods
and
mov
xor
test
jno
push
xchg
es
inc
push
daa
test
inc
mov
push
xchg
mov
mov
js
stos
loope
stos
jle
adc
in
lds
shll
movsb
pop
xor
testl
add
inc
push
scas
inc
in
jb
xor
fisubs
jge
push
jle
adc
jl
stc
lret
leave
or
popf
mov
aad
cld
and
jle
push
pop
inc
add
popf
ret
iret
addr16
cmp
mov
or
sbb
push
jge
inc
ja
repz
pop
fwait
out
jae
das
mov
push
dec
fwait
push
jg
cmpsl
lods
bound
and
ficomps
cmp
rcrb
sti
mov
mov
mov
cmpsl
adc
enter
xchg
xchg
cld
cmp
fisttpll
xor
sahf
pusha
jmp
rcrl
jecxz
stc
mov
xchg
push
sbb
data16
nop
xchg
or
and
fsubl
add
inc
sbb
std
aad
gs
stos
pop
lcall
mov
in
cmpsb
xchg
cld
jge
jmp
nop
test
mov
and
sub
cmp
and
sti
xchg
mov
movsb
push
mov
ret
js
notb
dec
addr16
jle
sahf
testb
insl
mov
ficoml
inc
and
nop
hlt
pop
test
add
adc
mov
mov
adc
lahf
cmpsb
fsubp
incl
out
into
mov
stc
movlps
outsl
pop
sub
loope
pop
jg
cmc
pop
sub
mov
out
clc
rorb
xor
roll
loopne
lds
sahf
and
cmp
mov
ret
jmp
dec
add
lret
shrb
sub
lea
ja
test
sub
sarb
out
cltd
popf
sbb
ljmp
add
cld
add
pop
test
sbb
in
addr16
andl
push
ljmp
mov
nop
and
loop
shll
xor
pop
jl
mov
sbb
mov
push
aam
cmp
inc
dec
popf
pop
lods
add
sub
cld
add
sti
sahf
mov
fisttpl
bound
dec
loope
push
jg
mov
jp
push
flds
mov
imul
sahf
mov
test
bound
add
adc
mov
ss
mov
inc
sarb
insl
fisubrs
stc
xor
mov
pop
mov
imul
lret
xchg
mov
fcmovnbe
stc
loopne
fstpl
and
xchg
sbb
jbe
mov
push
add
lret
test
fisubrl
fcmovnu
lahf
lock
imul
inc
test
push
inc
mov
imul
cmpb
xor
jne
scas
dec
dec
int3
div
dec
xchg
cmp
lret
movsl
sbb
leave
add
sub
in
cmpsl
roll
push
out
out
insl
mov
jl
inc
filds
mov
in
and
lret
inc
push
xchg
xchg
add
subb
les
sbb
add
inc
push
aam
dec
les
push
mov
int3
mov
movsl
push
mov
jno
inc
inc
repnz
enter
popa
out
mov
ss
cmp
mov
dec
loope
xor
cmpsb
rorb
cmpsb
test
inc
jno
popf
mov
xor
jnp
out
ljmp
dec
push
xor
cmp
pop
jl
and
push
adc
popa
ret
repnz
lds
shlb
add
popf
cmpsl
leave
stos
or
and
es
mov
shll
mov
xchg
xchg
jnp
scas
jg
xchg
lods
into
mov
pop
push
rorl
ret
rcrb
mov
stos
rep
subw
jo
repnz
dec
cmpsb
add
sub
pop
xchg
scas
out
mov
xchg
lods
push
dec
lret
mov
jmp
xor
into
sarl
js
insb
inc
insl
push
std
xchg
stc
ljmp
cwtl
lea
sub
pop
jo
enter
jns
insl
push
into
push
ret
aas
insb
cmp
arpl
scas
push
mov
inc
add
pop
jmp
mov
loope
inc
iret
or
push
adc
rcll
mov
test
xchg
sbb
pop
jo
inc
aad
mov
xor
push
mov
ficoms
int3
lea
repnz
adc
inc
mov
dec
inc
test
mov
mov
add
fnstsw
xchg
loop
push
out
and
and
xchg
js
xchg
sbb
loopne
xorb
xchg
mov
pop
in
loop
daa
pop
and
leave
rcrb
dec
add
mov
cmp
adc
dec
test
xchg
jne
sub
sbb
mov
enter
jae
inc
test
mov
pop
into
add
in
cld
adc
stc
lea
cmpsb
pop
mov
sub
cwtl
mov
sub
leave
xor
stos
fnstsw
xchg
jmp
loopne
xchg
outsb
lods
outsl
addb
cs
sub
movsl
mov
xchg
fstpl
aam
sbb
ss
insb
dec
push
push
mov
ljmp
inc
cli
ljmp
sub
push
cmp
movsb
lods
cmp
negb
sbb
dec
xor
adc
adc
pushf
std
lds
ljmp
dec
movsl
adc
inc
pop
call
ljmp
cmp
sahf
push
jns
push
jbe
pop
and
dec
into
jb
je
mov
mov
adc
bnd
jno
popf
xchg
cltd
arpl
flds
imul
mov
aas
gs
mov
rcrb
arpl
mov
mov
push
mov
push
outsl
jle
jp
popf
dec
xchg
out
or
pop
inc
and
adc
mov
xorl
or
in
jo
xor
sbb
std
cmpsl
fldenv
inc
mov
into
aam
mov
adc
inc
mov
cmp
pop
ret
jb
dec
push
movsb
loopne
loopne
aaa
fdivl
dec
and
adc
dec
scas
test
jnp
jmp
insl
loope
in
stos
jmp
push
inc
enter
pusha
repnz
push
cmpsb
add
fstps
rorl
dec
dec
inc
mov
mulb
je
enter
or
mov
mov
imul
mov
xchg
mov
adc
daa
pop
mov
pop
scas
adc
vcomisd
dec
mov
pop
sarl
out
jmp
daa
imul
xchg
test
mov
dec
aad
mov
not
sbb
mov
xor
pop
lcall
mov
pop
sbb
add
test
and
adc
cmpl
jbe
mov
jnp
adc
es
push
ret
sbb
xchg
inc
pop
dec
mov
into
pop
nop
sub
lcall
inc
mov
dec
outsl
out
xchg
punpcklwd
jnp
adc
insb
adc
mov
push
mov
je
out
ret
out
pushf
and
and
sbb
sbb
leave
shrb
push
jae
stos
adc
pop
insl
fldenv
fdivrs
sub
pop
and
fwait
add
es
pushf
adc
sub
jne
push
fidivrs
fildl
lods
sub
mov
mov
rcll
mov
pop
ret
sub
pop
cmp
movsl
shrl
mov
adc
xchg
jns
sahf
inc
pushf
inc
lods
sbb
nop
sbb
pop
push
lret
xor
dec
sub
xor
adc
lcall
cltd
jno
jnp
push
xchg
cmp
xchg
aam
adc
push
or
jp
sub
fisubl
popf
jle
and
subb
or
call
dec
or
dec
imul
out
xor
mov
icebp
pop
pop
jle
fwait
or
leave
gs
sub
pop
subl
and
mov
jbe
outsl
cmp
pusha
rol
or
aaa
imul
loop
fdivl
dec
or
jg
and
and
clc
and
push
push
mov
mov
inc
lds
pop
in
icebp
push
jno
inc
clc
and
dec
dec
pop
arpl
jnp
int
std
jle
imul
insl
xchg
jg
fdivrs
mov
jmp
popa
mov
orl
ss
outsb
xchg
cli
mull
test
jecxz
sub
adc
cmp
jno
or
add
nop
mov
repz
xor
xchg
push
jge
test
aaa
add
xchg
xchg
mov
jae
and
rcl
sub
test
inc
pop
cmp
inc
mov
fstps
lahf
je
or
mov
leave
adc
nop
jl
call
dec
or
movsl
sbb
jecxz
xchg
mov
shll
shlb
mov
int
out
mov
daa
jl
mov
out
cmpsl
xchg
mov
jae
loop
outsl
js
mov
add
cld
jns
rcll
iret
push
imul
pop
dec
dec
inc
lods
mov
nop
mov
sub
pusha
lods
cmp
fsubr
jns
or
pop
push
pop
dec
mov
movsl
fistps
fucom
setae
enter
dec
xchg
inc
inc
rolb
aas
icebp
sbb
addr16
testl
and
pop
and
pop
fcmovbe
or
shrb
jae
mov
dec
xor
js
aam
notb
bound
xchg
xor
dec
les
ja
push
sbb
cmp
xchg
jnp
add
add
push
jl
test
or
push
pop
aam
mov
fnstsw
icebp
or
adc
mov
loop
rcl
mov
mov
inc
test
jo
fdiv
stos
sbb
sub
cmc
fldl
pop
out
subl
adc
lcall
sbb
and
sbb
adc
shlb
cs
push
movsl
scas
jmp
pop
jl
sbb
enter
pop
xchg
outsl
jae
or
or
dec
lret
mov
inc
inc
pushfw
dec
test
stos
icebp
je
es
insb
pop
mov
icebp
call
je
and
xchg
push
xchg
fst
sbb
push
xchg
jmp
jae
pop
mov
xor
nop
adc
sbb
cmpsl
xchg
sbb
sub
xchg
mov
aas
jecxz
jle
mov
inc
test
imul
pop
xchg
mov
mov
and
add
mov
mov
and
mov
scas
inc
mov
out
fidivrs
jg
popa
inc
ficomps
jecxz
or
add
das
pop
out
cwtl
out
jp
movsl
pop
mov
push
jle
test
xor
stc
lods
sub
and
out
push
push
inc
mov
jae
int3
cmp
adc
loop
or
cltd
dec
xchg
stc
shlb
push
lea
add
test
js
mov
in
pop
lcall
xchg
jl
add
mov
lea
inc
mov
push
push
dec
mov
sbb
in
jl
push
bnd
movsb
lds
test
xchg
xlat
stc
cmpsl
aad
add
push
repz
xchg
xchg
jge
sub
movsl
sbb
xor
adc
jne
lcall
test
shrb
and
and
inc
cld
mov
mov
cs
and
cs
add
pop
aad
jno
adc
aas
mov
mov
xlat
push
inc
movb
mov
dec
mov
push
pop
cmp
shrb
and
xor
call
loopne
adc
popf
fstpl
or
xor
xchg
mov
sbb
lcall
scas
cs
popa
inc
mov
roll
test
lahf
mov
mov
orl
push
jno
fistpl
fisubl
mov
insb
clc
inc
xchg
xlat
aaa
dec
dec
add
xchg
mov
pop
lods
push
mov
inc
add
add
sbb
insb
or
push
popa
aas
lcall
imul
xchg
iret
xchg
pop
je
jns
call
xor
sbb
add
decl
test
dec
lret
sahf
mov
cwtl
push
push
pop
mov
jno
je
pop
inc
cmc
ret
andb
lret
int
mov
xor
sbb
es
mov
stc
push
push
int3
rcr
std
and
push
frstor
adc
shld
cli
mov
out
leave
scas
and
clc
dec
jb
mov
stos
push
cmpb
xchg
sub
stos
sbb
pop
insl
sub
arpl
xchg
mov
movb
jae
xchg
push
out
push
sub
leave
lock
sbb
out
push
in
xlat
popf
push
or
add
leave
xor
push
cmp
and
ds
hlt
jno
xchg
xorb
outsb
sti
fstl
mov
mov
fwait
cmp
sbb
sbbb
ret
mov
dec
xlat
push
loope
pop
inc
xor
mov
jbe
in
leave
fsubp
mov
fsubrl
aas
jnp
fwait
push
inc
dec
lret
mov
xor
push
sub
xlat
sub
sbb
or
icebp
mov
in
popf
fsubl
mov
dec
sub
xchg
lcall
fisttpl
inc
mov
or
mov
dec
test
jbe
xchg
insl
out
lds
pusha
mov
inc
xchg
rcr
jge
push
fcomps
pusha
cli
mov
mov
setb
imul
jle
addb
mov
add
std
and
in
lret
idivb
sub
jp
jne
dec
les
dec
mov
cld
outsb
jnp
sub
int
push
inc
adc
cs
cmpsl
xchg
mov
xchg
and
xchg
inc
push
inc
test
popa
je
mov
cmpsb
rcrl
jp
jp
xor
fisttpll
inc
je
mov
aas
sub
ret
pop
mov
xchg
mov
loop
jmp
cmp
xor
lods
ja
xchg
insb
dec
sub
and
sub
and
pop
cmp
aas
and
jle
lret
cmp
push
push
hlt
movsb
adc
xor
xchg
pop
dec
pop
bound
cltd
push
lea
data16
scas
pop
mov
ficompl
scas
push
ljmp
jmp
nop
sub
aaa
jmp
xor
push
cmpsl
paddsb
cltd
dec
push
stos
push
xor
or
sbb
loop
inc
mov
pop
sub
mov
xchg
sub
fistps
pop
inc
es
cmp
inc
mov
xchg
jbe
pusha
xchg
or
rclb
js
rcrb
mov
insl
and
loopne
cld
and
int
cli
push
dec
cli
shrl
push
cltd
pop
inc
jg
outsb
sbb
and
cmp
mov
bound
mov
cmpb
fdivrl
xchg
add
fimuls
sti
mov
mov
iret
scas
xlat
add
xchg
rorb
dec
dec
call
iret
push
cmpsb
cmp
and
push
dec
imull
lods
rorb
psllq
test
fsubl
add
jno
mov
popf
cmp
enter
sub
and
add
and
jno
lcall
xlat
fnsave
mov
jb
popa
shl
jp
rorb
pop
fucomip
mov
dec
jp
movsl
lods
loop
stos
lea
jmp
cmp
insb
mov
jb
cs
pop
jne
jg
inc
cmp
ja
int
or
leave
rcll
fmul
dec
xor
ja
and
jmp
sbb
test
jl
jl
out
inc
push
add
dec
sbb
fcoml
add
loopne
cwtl
xchg
add
fmul
decb
cltd
pop
add
adc
xor
adc
adc
mov
data16
aam
push
movsl
sub
xor
lods
xor
mov
adc
aam
jp
cld
cmp
pop
fbstp
jo
loop
mov
pushf
mov
iret
or
pop
mov
sbb
push
inc
loope
push
cmp
fsubrs
repz
xchg
decb
lods
or
hlt
mov
sbb
cmc
push
xchg
cli
mov
fadds
dec
fisttpl
push
xchg
dec
pushf
cmpsl
cs
gs
adc
inc
cltd
fsubl
xor
mov
out
or
in
mov
hlt
orl
fists
xor
cmpsl
pop
add
ds
sub
add
push
cld
inc
push
fwait
int
inc
lcall
dec
jle
fdiv
jg
pop
imul
fstpl
int
inc
dec
ret
and
add
lcall
add
stc
xchg
nop
mov
imul
es
dec
mov
lea
in
std
sbb
loopne
dec
cmp
cmp
sub
insb
lods
xchg
pop
testl
push
xor
inc
stos
stos
std
fidivl
add
popa
pop
je
stos
xchg
test
arpl
mov
push
mov
inc
aam
cmp
cmpsl
shrb
push
subl
sub
inc
xchg
popa
cmp
and
and
lret
mov
and
lods
jp
imul
and
shr
xor
pop
push
adc
pop
sahf
adc
out
fisubrl
jg
and
cmp
or
test
inc
jo
lds
ficoml
and
aad
add
repz
fcomps
rolb
fnsave
and
mov
scas
int
xor
mov
das
xchg
cmp
add
pop
inc
ljmp
pop
add
fistps
rcr
lret
arpl
ret
lods
xchg
and
rcr
inc
or
push
in
push
and
in
dec
insl
push
mov
sbb
out
add
jns
jnp
lock
int
imul
lret
push
lds
xchg
and
jle
icebp
push
mov
enter
imul
cld
stc
fidivrl
repz
movsb
or
idiv
mov
nop
rcl
dec
jbe
add
dec
cmc
icebp
popa
mov
cs
int
mov
lds
dec
dec
dec
ds
sahf
xchg
jno
push
and
cmpsl
lods
enter
push
aad
data16
push
dec
ja
repnz
xor
dec
xor
fldt
inc
add
loope
inc
jns
rorl
sub
push
jmp
icebp
mov
mov
xorb
push
mov
popf
xlat
popa
push
jnp
pop
out
dec
sbb
sub
std
mov
movsl
cli
lods
push
sub
outsb
ficompl
icebp
sub
popa
imul
add
movsl
pop
movsb
cld
cmp
and
aaa
fiadds
mov
inc
sbb
incb
jno
dec
pop
inc
xchg
rcrb
fisubrs
addr16
fcomps
sbb
jle
mov
jmp
cmc
out
das
insl
xor
mov
clc
hlt
cld
jnp
aaa
pop
inc
outsb
inc
xchg
xchg
dec
test
add
testb
mov
test
aaa
xchg
int
sbb
shll
dec
pop
cmp
fbstp
scas
mov
push
and
loopne
in
cs
pop
push
repnz
add
sub
insl
push
mov
sbb
push
xchg
inc
leave
fdivrl
jge
lcall
movl
inc
jge
and
andl
jge
dec
pop
mov
sub
add
call
and
sbb
icebp
sub
cwtl
sti
sub
mov
inc
enter
in
push
aaa
add
or
mov
cld
push
enter
mov
sub
pop
outsl
pop
sub
push
xor
repnz
pushfw
cmpsl
scas
adc
out
aam
jno
test
xor
and
enter
mov
cmpl
jae
and
add
out
xchg
jae
out
loope
inc
movsb
cs
push
clc
orb
stc
xchg
jns
mov
pop
dec
sbb
mov
push
repnz
jo
lret
or
loope
xlat
or
insl
pushf
in
loop
stc
jb
ja
mov
xchg
js
mov
stos
xor
or
ds
push
add
jns
jge
out
cmpsb
out
lret
dec
sub
xchg
dec
add
jae
shlb
xlat
inc
xor
bound
mov
jno
xchg
jle,pn
sub
mov
adc
ret
dec
aas
adc
mov
add
sti
adc
xchg
jmp
dec
aaa
cmp
pop
inc
push
and
xor
cmp
out
dec
xor
sbb
mov
les
aam
daa
subl
inc
lods
jle
sbb
jne
sub
in
and
sbb
addl
nop
mov
mov
or
fidivs
lods
push
mov
cld
shlb
pop
xor
in
call
mov
xor
aas
jno
adc
jo
xchg
mov
int
loop
sbb
fs
mov
pop
add
cmpsb
xchg
cmp
cli
mov
subb
cs
and
shr
push
fisttpll
test
lret
arpl
fwait
aam
into
sbb
pop
xor
mov
push
add
lret
test
popf
fcompl
cmp
test
lea
scas
cmp
in
mov
adc
mov
aaa
mov
xchg
push
inc
movsl
gs
mov
jg
or
int
or
je
out
jno
push
jo
out
push
out
and
cmp
je
leave
enter
xor
lcall
adc
xchg
xchg
test
xor
and
or
fs
jge
mov
out
xchg
movsb
aas
sbb
mov
and
xchg
rcr
pop
fdiv
cmp
add
and
mov
call
sbb
lcall
push
push
cmp
outsl
mov
sub
fisubs
clc
aam
mov
xlat
call
xchg
ficoml
cltd
cmp
leave
leave
adc
or
fiaddl
hlt
and
scas
mov
and
add
insl
movsl
leave
xorb
add
leave
fnstenv
xor
in
and
xorb
mov
or
sub
mov
shll
mov
lods
jge
or
dec
jl
jno
cli
repz
add
push
les
rcrb
add
roll
xchg
hlt
arpl
les
stos
popa
lods
pop
cmp
dec
adc
inc
pop
lods
or
hlt
ljmp
push
cli
addl
xchg
push
or
mov
fisubrl
xor
xor
lds
mov
dec
pop
pinsrw
jns
icebp
data16
testb
mov
icebp
sbb
stos
xchg
fnsave
jg
xchg
test
cld
sti
cs
dec
aas
jns
push
aam
hlt
xor
sbb
and
mov
lret
or
rcll
lods
stc
push
add
dec
mov
push
xor
ljmp
mov
pop
mov
or
dec
repz
and
push
out
lret
and
bndstx
inc
movsl
lahf
inc
add
pop
mov
mov
aad
sarb
dec
aas
dec
in
popf
mov
push
out
push
cmp
jg
pop
in
jae
jmp
data16
cmp
clc
in
adc
scas
mov
add
dec
js
fimuls
mov
inc
out
jbe
shr
push
mov
push
arpl
pop
loopne
sarl
mov
aaa
aad
jg
mov
dec
ss
rclb
aas
lods
into
sub
xchg
add
shrl
mov
xchg
xlat
dec
jae
out
addr16
sbb
add
mov
sub
sub
cmp
push
add
pop
adc
adc
jne
cld
repnz
nop
cmp
pop
test
mov
ret
xchg
mov
fnstsw
push
xor
inc
dec
add
xorl
jle
cs
scas
adc
mov
mov
shrl
jnp
mov
jmp
call
idivl
xlat
mov
loop
cmp
xor
test
ja
dec
pop
mov
dec
cli
push
xchg
mov
xchg
xchg
mov
add
xchg
jmp
push
insl
jne
pop
xor
insl
gs
fwait
mov
stos
aad
add
xlat
aam
xchg
jnp
mov
sub
sbb
or
in
ss
insb
fiadds
imull
int3
push
push
imul
mov
daa
rcll
mov
dec
fwait
sbb
lahf
jne
jbe
sbb
push
and
fsubs
mov
or
or
xchg
fimull
xchg
inc
stos
xor
mov
mov
lret
popa
out
adc
out
push
test
movsl
lods
mov
add
pop
or
xor
jl
in
add
mov
pop
inc
jne
jbe
cltd
icebp
cmpsl
xor
jae
in
adc
test
sarb
mov
xor
jne
and
lahf
xchg
cmp
inc
lock
xchg
call
and
pop
es
push
ficoms
cmp
fistl
jge
aam
out
dec
rorb
cmp
aaa
pop
in
test
outsl
ret
push
xchg
test
pop
imul
popw
add
std
shl
data16
sub
andb
subb
loop
jae
adc
out
sbb
jecxz
fchs
xor
cld
stc
sahf
cmp
lods
lea
and
adc
push
push
dec
cli
movsl
sbb
outsb
jg
jno
sub
jns
mov
pop
in
adc
mov
nop
daa
es
adcb
inc
jecxz
push
stc
pop
cmp
sub
gs
stc
jb
jmp
or
cmpsb
fisttps
out
repnz
cmp
int
mov
cmp
lcall
push
mov
add
push
jns
test
fs
adc
add
add
cwtl
lods
adc
pop
std
cmp
sti
fwait
repz
out
insl
inc
repz
pop
daa
xor
xor
test
cmp
mov
mov
xchg
sub
sbb
and
jb
inc
inc
stos
push
xor
call
mov
lret
dec
stos
movsb
xor
mov
cmp
jp
pop
mov
std
push
jb
imul
es
jl
xor
std
iret
lea
mov
iret
addl
popf
inc
mov
dec
cmp
lds
fidivs
sub
mov
sbb
inc
push
inc
int
push
mov
push
xchg
mov
mov
jo
add
adc
insl
jns
outsl
dec
push
icebp
rcll
sar
inc
push
rcll
imul
dec
fwait
stc
hlt
out
aam
enter
imul
dec
xchg
push
sarb
repnz
ja
mov
mov
aad
pop
xchg
pop
je
popf
loope
leave
push
addb
in
pop
mov
jl
or
mov
sub
dec
pop
pop
inc
mov
aad
sbb
mov
pop
mov
add
fists
dec
ret
sub
pop
xor
push
in
in
movb
sub
je
adc
cmp
sbb
mov
rcll
outsl
dec
sbb
addr16
mov
pop
or
jno
jo
pop
testb
in
rorb
push
mov
lret
fsts
ds
in
jl
or
loop
adc
cltd
inc
jae
adcl
pop
hlt
mov
pop
add
and
jne
fcmovnb
shrb
dec
xchg
xor
mov
mov
xor
mov
ljmp
mov
mulb
cmpsb
cmpsb
arpl
push
xacquire
mov
jecxz
pop
fucomi
add
test
lods
add
shlb
sbb
mov
stc
sbb
mov
xchg
aad
pop
mov
daa
hlt
or
psrlq
sub
cld
xor
negl
mov
lods
fists
jl
test
pop
inc
add
mov
aad
sti
mov
mov
xchg
push
mov
sbbl
sbb
imul
pusha
xor
lahf
mov
cmpsb
pop
mov
popa
pushf
in
aam
loope
aas
mov
mov
add
fistps
add
push
and
iret
adc
cmpsb
mov
out
adc
inc
xor
shlb
sbb
fcoml
cmp
sahf
cmp
cmpsb
jl
cmp
mov
in
test
das
test
lock
stos
test
leave
es
ret
xchg
cmp
or
adc
push
ret
js
fimuls
iret
inc
xor
mov
fs
xlat
lahf
scas
xchg
mov
mov
mov
or
jo
arpl
xor
sbb
jno
popf
or
add
gs
mov
movl
sbb
addr16
mov
neg
add
je
sti
mov
mov
call
loop
shrb
add
call
jle
sub
daa
adc
aas
bnd
and
cmpsl
les
and
pop
fcompp
push
or
mov
dec
xor
cmp
sub
jle
xor
push
mov
outsb
xchg
pand
and
cmc
insl
pop
mov
ss
scas
scas
sbb
fsubrs
out
pop
adc
js
cltd
out
call
jno
repnz
in
fcoml
jno
loope
or
fisttpll
jp
xor
sti
stos
xchg
mov
out
les
adc
clc
fcmovu
adc
out
fucom
shr
sbb
cmp
lods
int
inc
test
js
and
pop
adc
std
arpl
rcl
in
mov
sbb
rorl
push
lret
mov
push
stc
cmp
adc
xchg
test
jns
adcl
cwtl
sbb
outsl
pop
into
leave
cltd
sbbl
icebp
int3
scas
inc
data16
lret
loop
loope
jmp
subl
jge
or
xchg
xor
jmp
gs
shrb
dec
inc
bound
fwait
imul
aas
fists
aam
dec
mov
mov
or
add
push
repz
dec
adc
push
sub
sub
and
xlat
mov
andl
inc
push
xchg
shrb
mov
add
pop
push
repz
inc
int3
mov
and
imul
ret
lods
pop
cmpsl
stos
inc
lods
xchg
mov
cwtl
pop
test
out
adc
add
ret
testb
mov
mov
sbb
mov
push
aas
addr16
sbb
mov
adc
xchg
dec
gs
addr16
mov
subb
iret
pushf
xchg
and
dec
daa
sub
lods
ss
inc
fcomps
fs
pushf
jle
or
out
cwtl
jo
out
xor
mov
mov
lahf
clc
add
cmp
faddl
aaa
sbb
mov
jl
add
push
cmp
loopne
xor
adc
and
call
xor
addl
xor
lea
fisubrl
pop
xorb
hlt
jbe
xchg
mov
sub
jg
mov
adcl
imul
shl
pop
mov
rcl
mov
add
mov
add
sarb
xchg
cmpsb
pop
imul
cli
imul
je
push
out
cmpb
es
mov
adc
xchg
sbb
inc
and
xchg
inc
pop
lods
divl
stos
push
daa
sbb
cwtl
aad
push
rol
loop
out
dec
ret
mov
fnstenv
cli
jecxz
das
add
arpl
imul
aas
or
popa
mov
mov
imul
movsb
xor
pop
xor
jecxz
mov
xchg
pop
adc
ret
xor
add
and
pop
add
pushf
cmp
jb
dec
inc
fs
dec
repz
aas
jg
inc
cmp
es
mov
push
xchg
mov
pop
aas
mov
inc
pusha
adc
jp
filds
inc
ret
xchg
xor
or
ja
test
pusha
sub
fcoml
xchg
outsb
lods
xchg
ret
std
ds
sti
pusha
test
mov
and
hlt
adc
dec
mov
icebp
add
mov
dec
push
or
pop
cmp
jne
stos
adc
dec
lea
lock
adc
les
push
movsl
test
mov
xor
xlat
inc
std
dec
or
fwait
shlb
fimull
jge
xchg
xchg
movsl
mov
mov
xchg
cwtl
jo
lods
and
xchg
gs
mov
ljmp
data16
sbb
and
push
pop
push
jbe
and
dec
shll
imul
mov
sbb
mov
loopne
push
and
imul
mov
arpl
loopne
mov
pop
test
cmp
shl
push
enter
sub
cmp
je
push
repz
imul
push
push
pushf
add
mov
jge
and
stos
gs
jle
jnp
or
jecxz
jbe
cli
and
and
cmp
xor
or
out
pop
mov
jge
mov
cltd
push
dec
shrl
mov
icebp
outsb
out
das
ds
mov
in
adcb
pop
xor
dec
or
jo
inc
lds
idivl
adc
lret
add
es
inc
push
or
mov
xchg
lcall
sub
fistpl
and
les
dec
jge
pop
sbb
shl
stos
xchg
jp
mov
popf
in
cltd
lea
or
mov
popa
sub
push
xchg
xchg
dec
sub
icebp
jns
jl
nop
cli
mov
icebp
pop
sub
push
test
jns
jmp
mov
push
imul
sub
cs
insl
push
movsb
mov
lahf
lds
adc
sbb
pusha
aam
aas
iret
imul
push
movb
mov
jo
pop
pop
lods
cmp
adc
jmp
aaa
sub
lea
outsb
xchg
jb
insb
js
mov
sub
in
sbb
or
push
in
pop
rolb
sbb
mov
ret
nopl
stos
lahf
negl
daa
lds
cmp
cmc
out
subb
mov
push
dec
push
xor
outsb
mov
in
adc
movsl
push
loopne
aad
inc
into
xor
xchg
adc
loope
and
xor
mov
lds
lods
push
fldenv
or
ret
xor
xlat
pop
mov
xlat
adc
fldl
lds
or
lahf
addr16
test
mov
lods
lods
daa
cmp
pusha
adc
xchg
mov
xchg
loope
repnz
into
sub
add
adc
mov
mov
out
rclb
add
stos
rdmsr
in
negl
dec
fldln2
sub
pop
pop
jae
cs
notl
es
mov
sub
jae
ss
sbb
inc
lahf
inc
leave
sbb
adc
cmp
and
push
pop
mov
stos
test
outsl
ss
hlt
js
adc
fcomp
add
mov
in
movsbl
mov
rorl
rcll
shr
repz
pop
out
pop
clc
jl
mov
sti
adc
movsb
aas
push
pushf
and
fimuls
in
jo
call
sub
loope
movsb
sub
les
inc
cmp
fcmovnb
or
and
adc
cmc
push
idivl
dec
and
xchg
lcall
adc
scas
in
fbstp
inc
fwait
push
cmp
in
testb
sub
cmp
dec
stos
xchg
add
divl
orb
and
lret
lods
cmp
inc
jno
or
cmp
aad
cmpsl
inc
cli
sbb
adc
cmp
xor
pushf
inc
mov
pop
jnp
loope
push
mov
nop
cwtl
mov
mov
in
sbb
stos
mov
ja
iret
cld
adc
popf
push
test
bound
fcoms
repnz
pop
stc
jb
enter
pop
xchg
pop
jge
cmp
nop
imul
sbb
outsl
movsb
pop
inc
fnstenv
dec
lret
jae
adc
add
jne
jb
das
push
sar
clc
dec
aad
xchg
sbb
jno
or
xchg
and
imul
pop
pop
jbe
subl
jecxz
cld
add
xor
xor
mov
out
dec
int3
adc
adc
test
mov
push
or
push
jp
movsl
add
dec
push
pop
pop
push
inc
mov
jmp
and
cmp
test
shlb
mov
leave
rcrl
push
push
fildl
bound
out
cmp
fimull
push
inc
xchg
mov
movsb
aad
or
negb
fimull
sbb
pop
repnz
or
pop
fiadds
shrb
mov
add
dec
or
loopne
aad
add
xor
movsb
mov
rcrb
lret
sbb
ljmp
mov
fsub
fisttpl
xor
push
ficomps
pop
xchg
and
pop
cmpsl
mov
mov
cmp
mov
mov
and
lea
rcll
fst
pop
repz
in
or
mov
test
popf
bnd
and
mov
inc
loop
out
sbb
fiadds
jns
aaa
and
lret
xchg
aad
test
sub
cmpsl
mov
or
dec
jge
adc
mov
adc
lret
xchg
jge
iret
loope
in
push
sahf
cs
loop
test
and
xor
stos
and
push
jp
xor
mov
sbb
cmp
clc
loop
mov
adc
cltd
lock
repz
aam
cmp
push
cmpsl
ljmp
cmp
sbb
dec
fdivrp
popf
dec
stc
ja
sbb
xchg
dec
loop
jle
aam
push
pop
sahf
js
sub
sbb
push
mov
test
popf
add
sub
mov
fwait
inc
into
dec
shlb
loopne
pop
daa
iret
mov
in
scas
pop
insl
mov
mov
add
es
testl
in
xchg
out
and
scas
sbb
das
fwait
or
ret
lock
adc
aam
iret
and
jl
sbb
xchg
pusha
fcoml
in
pop
js
cmp
jl
fiadds
into
out
xchg
cmpsb
jp
les
pop
outsl
xchg
enter
mov
jg
rcll
aam
repz
jmp
cld
xor
sub
mov
inc
pop
fucomp
inc
and
dec
xor
xchg
test
jg
and
adc
xchg
jecxz
and
adc
mov
test
sbb
or
fadds
pop
or
ds
mov
repz
pop
pop
frstor
pop
mov
filds
orb
push
lods
cwtl
imul
or
imul
lods
fistps
mov
cmp
lcall
loope
inc
jmp
into
in
xchg
fildll
std
sub
mov
xchg
lods
cli
and
mov
sbb
insl
and
cltd
push
add
mov
ret
out
and
hlt
in
outsb
pop
loope
xor
jecxz
in
gs
fbld
es
mov
adc
sbb
mov
sbb
popl
jg
std
mov
and
popl
das
mov
add
push
adc
jnp
mov
sbb
pop
dec
hlt
out
or
push
mov
aad
push
stos
inc
and
out
pop
pusha
or
xchg
push
fisttps
add
test
mov
jo
adc
inc
sub
test
test
push
xchg
and
xchg
sti
mov
sbbl
cmc
cmp
pop
testl
dec
lea
pop
aaa
aas
sbb
movsb
dec
and
xor
jb
push
out
push
cmp
fdivrl
fcoml
push
xchg
ja
sbbb
sub
movsl
push
leave
xchg
lock
pop
add
cmp
in
fists
push
and
pop
mov
mulb
xchg
jns
and
cli
mov
mov
push
sahf
fxch
pop
xor
sub
repz
push
mov
cmp
mov
add
inc
sub
imul
xchg
inc
je
xor
xchg
push
or
dec
andb
push
mov
lods
dec
cmpsb
dec
mov
imul
push
testb
xor
leave
mov
popa
andl
dec
shr
ss
push
xor
in
fs
bnd
mov
lcall
lret
fisttps
jno
lods
mov
lret
fldenv
fists
mov
inc
fwait
jne
mov
data16
mov
xchg
sub
outsl
aas
sahf
ret
add
push
repz
loop
sub
loop
rclb
aam
mov
adc
or
jae
int
and
and
mov
jmp
fs
sub
add
xor
repnz
jle
faddp
bound
pop
xlat
fsubs
lea
cmc
inc
mov
sti
mov
out
sahf
and
sbb
repz
push
xlat
and
je
push
mov
or
push
xchg
sbb
jo
pushf
adc
xor
pop
clc
popa
sub
std
mov
scas
les
dec
jb
xchg
push
ljmp
sbb
jns
cs
pop
xchg
and
stos
xor
test
lahf
ror
test
out
scas
adc
movsl
cmpsb
push
fisubl
pop
test
addr16
in
push
sub
sub
rcrb
and
jecxz
fsubl
icebp
aad
movsl
xor
adc
in
mulb
fidivrs
jns
jno
push
js
sbb
pop
mov
into
gs
data16
movsb
stc
cmp
lret
cmp
insb
or
mov
mov
lods
or
or
mov
mov
fadd
mov
adc
mov
jl
in
xor
rorb
push
jb,pn
repnz
cmpsb
stos
xchg
decb
shr
fwait
mov
mov
shl
mov
xchg
outsb
jmp
sub
outsl
mov
xchg
sub
adcb
adc
cmp
or
in
lahf
push
or
add
mov
jmp
adc
repnz
and
sbbl
jb
std
xlat
or
pushl
push
stos
push
sahf
rcrb
fldenv
das
shlb
pop
dec
insl
cs
xchg
outsl
or
mov
int
pusha
outsb
xchg
sbb
xlat
inc
add
repnz
push
out
sar
jg
dec
cwtl
xor
gs
aaa
or
in
je
pop
add
sahf
daa
aas
pop
popf
pop
jp
ss
arpl
loop
xor
int
adc
mov
mov
mov
inc
cmpsl
add
clc
mov
std
xorl
jp
test
loop
inc
inc
pop
sbb
lcall
xchg
pop
mov
inc
inc
push
jp
out
push
add
movb
push
ljmp
sub
jmp
int
inc
out
negl
sbb
testb
and
jle
xlat
lods
lcall
mov
sub
mov
loop
rol
outsl
call
repz
or
jbe
pop
fadds
stc
pushf
adc
jle
xor
mov
add
stc
push
mov
adc
xchg
adc
fwait
out
sub
push
adc
pusha
jbe
fsubs
lods
dec
sbb
imulb
in
pop
xor
shlb
pop
mov
or
fisttpll
or
repz
add
mov
out
call
std
push
jns
sub
or
cmp
push
xchg
movsl
cwtl
xor
adc
sarb
and
and
pusha
andl
es
rcrb
jne
jns
and
lret
out
inc
pop
inc
out
jp
ljmp
into
mov
adc
orl
notb
jno
and
scas
cmpl
jle
mov
clc
loope
or
das
fwait
dec
loope
push
in
jmp
int
sti
inc
lock
jle
xchg
sub
mov
sub
adc
xor
adc
cmp
loopne
pop
mov
xchg
cld
addr16
xor
jb
xchg
sbb
shll
mov
sbb
stc
outsb
icebp
popa
movsb
pop
add
es
xchg
xchg
jle
jno
inc
stos
jb
stc
mov
imul
xchg
jp
aas
mov
out
lret
test
cmp
in
push
push
int
sar
xor
pop
sahf
cmc
mov
inc
cmpsl
or
cmp
jns
lahf
fidivl
rcll
push
loopne
adc
cmp
aaa
or
pop
pop
sbb
mov
mov
shlb
roll
jns
in
or
adc
ljmp
idivb
cmpsl
ljmp
notl
rcll
sbb
outsl
push
mov
mov
jle
enter
mov
out
xchg
pop
rorb
cli
sub
sar
mov
adc
push
pop
inc
hlt
lret
sub
xchg
je
je
mov
jae
movsb
jns
nop
not
das
aas
mov
jb
xor
push
call
or
popf
lret
out
dec
into
leave
jecxz
out
scas
dec
fidivl
fisubl
xchg
jnp
push
sbb
push
mov
loope
mov
sub
and
push
mov
xchg
mov
ja
lret
mov
push
aaa
clc
pusha
cld
dec
loope
cmpsb
sub
jae
and
dec
push
stc
xchg
jl
pushf
lods
mov
pop
sbb
test
scas
lcall
stos
pop
imul
mov
pop
pop
mov
xchg
repnz
out
lods
rorb
pop
notl
adc
and
push
and
sbb
lods
sahf
push
or
call
mov
push
jae
dec
push
icebp
fdivrl
and
lods
sbb
scas
bound
es
addr16
js
loop
lret
xor
leave
jne
xchg
mov
jmp
mov
addr16
push
sbb
xchg
cld
testb
out
adc
cltd
loop
sbbb
dec
sub
pop
in
push
push
add
pop
pop
dec
mov
mov
std
inc
or
sbb
pop
jo
shrb
jg
push
inc
ljmp
and
push
pop
fidivrl
add
cli
insl
inc
push
or
cs
cmp
jne
call
push
adc
popa
stos
out
add
jno
das
stc
inc
and
adc
or
rclb
jb
lcall
pop
les
ret
testb
cmpsl
lods
cs
add
mov
pop
mov
pusha
mov
xor
pop
push
pop
hlt
jnp
lret
outsb
mov
adc
sbb
dec
adc
nop
push
inc
mov
addr16
jle
int3
add
outsl
loopne
or
sub
or
and
shlb
inc
dec
lret
push
lret
cmc
jbe
jp
imul
jmp
mov
push
xchg
sub
in
jo
jge
ret
das
scas
ud2
aam
sahf
rcll
cwtl
push
sbb
int
mov
mov
insl
lcall
push
sarl
jns
addr16
or
xor
sub
test
notb
insl
or
or
cmp
mov
std
bound
push
cmp
stc
mov
or
jne
in
test
xchg
adc
insl
xor
mov
into
test
mov
nop
cmp
or
or
fincstp
popa
adc
ds
movsl
hlt
dec
push
lret
lods
pop
lds
hlt
pop
mov
or
clc
xchg
or
inc
fdivrs
pushf
push
adc
ret
adc
out
jb
pop
mov
pop
sub
mov
pop
arpl
xor
xor
cmp
ss
xor
imul
rcrb
or
add
ret
cmp
jmp
fnstcw
insl
mov
cmc
mov
stos
or
pop
ret
pop
jg
inc
mov
rclb
jge
mov
add
lea
xchg
mov
push
jnp
ds
adc
inc
andl
pop
rcl
in
test
fsts
jo
pop
xor
lods
movsl
adcl
aad
pop
dec
cmp
shl
fwait
xchg
jecxz
mov
xchg
inc
dec
adc
or
lods
jnp
insb
movsb
and
adc
adc
adc
mov
testb
push
es
pop
or
xorb
add
leave
lret
inc
push
leave
lret
test
mov
shlb
or
test
adc
jp
sbb
xor
adc
mov
jg
fstl
sbb
cmc
or
adc
test
sahf
xor
pop
and
jae
aam
jne
inc
mov
lahf
push
push
mov
sbb
ljmp
mov
inc
nop
popf
jl
sbb
push
push
fstpl
jp
jae
stos
faddl
push
mov
aam
addr16
sbb
fsubr
cmpsb
cmp
dec
lahf
mov
insl
repz
dec
inc
enter
inc
cmp
gs
hlt
sub
or
in
je
inc
pop
or
xchg
mov
and
mov
in
xchg
jp
negb
test
push
jb
mov
in
bound
imulb
inc
dec
subl
cltd
adc
es
pop
in
subb
sti
jge
or
cltd
mov
jbe
xchg
push
popa
sbb
mov
pop
or
adc
std
pop
sbb
or
in
insl
clc
cld
fs
or
or
mov
jp
mov
xor
dec
addb
addr16
cld
pop
sbb
mov
inc
mov
jg
fldl
pop
lcall
cltd
addl
aaa
js
rol
das
cmp
mov
cwtl
mov
pop
pop
shr
adc
xchg
push
pushf
mov
and
dec
clc
mov
and
or
jl
out
dec
in
add
icebp
fucomip
ret
lret
adc
ret
inc
pushf
lods
lea
ret
data16
fldlg2
lea
cmpsb
sub
pop
insl
stos
insl
gs
pop
outsl
jae
push
js
cmp
mov
ret
incb
and
cmp
or
ret
adc
filds
int3
or
xchg
mov
ds
sbb
sub
sbb
movsl
test
lahf
ss
es
cmp
jmp
xor
and
movsb
ret
pop
cmp
bound
pop
inc
out
iret
adc
push
popa
stos
loopne
insl
mov
add
mulb
lock
jnp
xchg
les
adc
outsb
sbb
out
das
jmp
cmpsl
xchg
push
aas
lret
sub
cmp
sbb
das
inc
dec
mov
popl
jge
mov
sti
hlt
andb
aad
fisttpll
push
fistps
dec
idiv
mov
inc
or
fildll
clc
add
nop
mov
inc
sub
popa
mov
pop
cmp
mov
mov
dec
pop
pcmpeqd
aas
cmp
test
inc
push
clc
lahf
aam
inc
pop
stc
in
or
out
nop
outsl
push
imul
aad
sub
cli
les
mov
lds
cmpsb
jp
nop
jl
icebp
lcall
xchg
outsl
mov
or
mov
mov
sbb
push
and
popa
xchg
push
fiaddl
imul
jno
out
jmp
dec
dec
jne
xchg
inc
jge
lea
xchg
cmp
outsl
pop
cli
pop
xchg
push
push
cmpsl
pop
sar
lds
dec
cmp
mov
cmp
out
dec
mov
or
pop
push
xchg
in
jnp
orb
movsl
mov
jnp
jo
hlt
mov
pop
jne
sbb
arpl
jmp
mov
lret
sbb
mov
outsl
xor
ljmp
fxch
sbb
es
xor
pop
or
xor
mov
or
into
orb
fwait
pop
sbb
xchg
pusha
sub
sbb
fcmovne
jnp
inc
sub
ds
lret
and
adc
push
jne
xchg
stos
add
les
fcomps
inc
scas
jns
push
mov
sarl
adc
mov
enter
mov
iret
arpl
pop
sti
int
fmuls
sbb
popa
stos
int
shll
mov
cmc
cmp
daa
or
cmp
sub
jnp
or
divb
pusha
lods
inc
inc
fdivrs
in
sub
int
sub
jno
sub
push
stos
fdivrs
fistps
add
cmp
xchg
mov
sub
ret
mov
arpl
push
gs
pop
dec
cmp
nop
out
stos
mov
mov
aad
mov
push
mov
in
fwait
pop
add
dec
inc
pop
popf
flds
jae
xlat
insb
mov
imulb
add
sbb
xor
and
mov
pop
push
cld
add
pop
addr16
cwtl
fidivs
daa
stos
popf
push
je
fwait
adc
lcall
int
pushf
rorb
mov
movsb
nop
aaa
adc
inc
nop
sub
sub
test
pop
movsl
sbb
dec
cli
sbb
jae
int3
call
inc
inc
int
mov
push
scas
ljmp
sub
sbb
sbb
mov
cmpsb
test
enter
add
or
mov
pop
arpl
stos
lods
out
sub
inc
push
add
lahf
test
movsl
lds
mov
mov
xor
pop
movl
xchg
push
es
rcll
add
pop
inc
ret
xchg
lock
ss
pop
mov
dec
fists
dec
cwtl
cmp
sarb
or
scas
test
int
std
inc
fstl
mov
inc
mov
mov
stos
xor
cli
jo
or
or
iret
push
sbb
xchg
pop
dec
push
pop
mov
xchg
mov
mov
cmp
movsl
or
lret
inc
inc
inc
pop
ja
dec
jle
pop
mov
notl
pushf
icebp
dec
jbe
mov
push
add
add
dec
jge
sub
fidivl
push
sbb
add
add
and
fsubrs
das
int3
jb
adc
mov
or
out
lret
xchg
jae
or
cmpb
xor
push
aad
and
xor
cli
sbb
loop
add
dec
mov
mov
sbb
pop
rcrl
mov
cmp
pop
gs
mov
xor
out
dec
fists
mov
stos
jo
aaa
lahf
inc
pop
out
cltd
sub
push
mov
popa
pushf
or
push
push
cmc
inc
jo
mov
pop
jb
jecxz
es
shlb
or
frstor
dec
loope
into
jle
clc
xchg
dec
aaa
cmp
addl
rorl
jb
mov
jle
cmp
xor
fisubrl
push
and
sub
inc
imul
in
adc
cmp
adc
or
inc
ficoml
inc
cmpsb
orl
scas
mov
popf
repz
loop
fdivrs
mov
loope
in
sar
mov
sahf
xchg
ret
in
jge
test
jecxz
sarl
mov
idivb
mov
stos
daa
cmp
sbb
cli
jmp
je
ds
aad
cmp
cmpsl
imul
pop
addr16
adc
sbb
pop
jb
xchg
lock
test
gs
andl
pop
push
cli
push
insl
leave
ffreep
lds
and
adc
sub
pop
fwait
movsb
push
fcomps
xor
mov
jmp
sub
pop
mov
sbb
ljmp
xchg
dec
cmpsl
jb
adc
fistpll
or
ret
xchg
test
pop
clc
cmp
lods
out
cmp
stos
xor
push
jl
xor
push
mov
es
in
adc
fsubr
ficompl
das
cld
xor
add
lret
inc
subb
movb
ret
push
push
fdivs
sar
xor
cmpsl
push
mov
aad
lea
das
imul
mov
out
and
clc
mov
fdivs
daa
pop
pop
outsl
stos
fisubs
lcall
cmpsl
sahf
mov
loopne,pn
mov
sbb
push
mov
push
enter
mov
or
mov
imul
sub
addr16
jmp
sbb
xor
sub
cmpsb
arpl
cmpb
addr16
shl
sbb
sub
fdivrs
out
int3
push
or
mov
sbb
mov
cmp
out
cwtl
inc
adc
adc
jne
test
pop
or
andb
std
int3
mov
pusha
dec
xor
cs
fbld
in
in
add
push
mov
clc
jle
cmp
pop
dec
add
add
cmc
push
js
fdivl
xlat
enter
fwait
xor
sbb
fs
jae
jmp
add
iret
les
cmp
popa
pop
cmpsl
sar
or
cmp
inc
push
adc
cs
pop
adc
stos
lods
scas
gs
lods
movl
jge
push
push
pop
filds
leave
xor
mov
push
xor
mov
sub
and
cli
shlb
jne
out
push
cld
sub
pop
and
in
xchg
dec
adc
lahf
test
adc
ljmp
in
stos
and
mov
adc
add
jle
mov
sbb
ss
shlb
aaa
add
lret
adc
sahf
ficomps
movsl
daa
stc
xchg
js
pop
sub
nop
xor
in
xlat
jge
and
add
cltd
cmp
jl
sub
sbb
fidivs
cltd
repnz
popa
enter
or
inc
out
pop
inc
pop
aad
xor
mov
je
jecxz
enter
jmp
jno
pop
mov
sahf
mov
xor
inc
push
adc
lea
mov
aas
arpl
stc
fcmovne
stos
jl
push
dec
and
pop
xchg
xchg
sbb
data16
adc
mov
jp
aas
xchg
adc
add
push
cmp
loop
bound
pop
orb
rcrb
and
mov
inc
mov
test
push
or
dec
jns
bound
ret
xor
testl
sub
mov
das
mov
repz
xor
test
in
push
and
repnz
std
std
jne
push
lods
jno
js
js
outsl
mov
test
insl
lock
fidivs
daa
pusha
sti
or
subb
push
aam
out
iret
jp
lods
nop
push
dec
rorl
adc
xchg
mov
add
es
cmp
inc
cmpsb
stos
lret
sahf
xor
mov
lcall
filds
adc
not
stos
jp
sub
xchg
lahf
mov
ja
lods
rorl
imul
scas
int
mulb
fistpll
add
and
or
mov
stos
stos
xchg
pmulhuw
add
loopne
jl
jmp
xchg
mov
sti
in
jno
sbb
add
push
cltd
xchg
lahf
inc
push
je
pop
inc
out
pop
xor
xor
push
loop
xchg
push
test
xor
and
add
adc
pop
push
fbld
pop
mov
loope
jns
push
cli
insl
mov
cmp
aam
xor
aam
lods
ret
pop
add
lret
push
inc
arpl
dec
mov
jnp
sarb
loopne
jnp
bswap
mov
jp
sub
call
or
inc
jnp
pop
dec
leave
push
add
stc
imul
inc
cmp
xor
or
repnz
and
shlb
lea
loop
loop
push
jno
cmp
sbb
inc
pop
add
mov
add
sahf
andl
mov
aam
jne
cs
push
ds
jle
popa
mov
shll
fs
xchg
pop
add
xchg
out
idivl
adc
jmp
outsl
sub
test
addr16
nop
fisubrs
mov
adc
subb
dec
enter
bound
cmpsl
xor
or
movsb
outsl
shrl
and
mov
fs
fnsave
xchg
cmp
or
push
xchg
xchg
icebp
mov
mov
dec
divl
shrb
lods
call
mov
ljmpw
pop
pop
adc
xor
add
lea
cmpsb
fsub
repz
add
sbb
mov
fwait
ljmp
outsb
loopne
pop
jg
test
loope
pop
cmp
testb
jl
jne
in
das
push
or
int
pusha
icebp
pop
xchg
mov
ret
js
out
scas
xor
push
mov
fidivrl
dec
and
sub
not
lods
add
push
lret
hlt
lcall
xchg
add
or
xor
xchg
add
test
data16
mov
js
jle
cld
jp
xchg
popa
loope
subl
movsb
into
mov
and
int3
dec
jmp
pop
lret
jge
mov
lods
sbb
jnp
mov
stos
gs
int3
nop
or
jb
fucomp
adc
mov
int
pop
xchg
adc
cmp
jne
mov
in
jb
ret
xchg
or
add
test
scas
arpl
push
sub
fimuls
test
sbb
mov
out
inc
aaa
pop
es
mov
xchg
adc
decl
sub
add
add
lret
mov
inc
pop
xchg
xor
scas
imul
mov
jae
scas
in
push
dec
data16
movsb
push
and
mov
xor
push
ljmp
cmp
lret
ret
inc
fldt
mov
outsl
not
out
ret
das
or
mov
jo
incb
mov
sbb
xchg
sub
pop
bnd
mov
sub
inc
movsb
int
fldenv
mov
movsb
cmp
jmp
sub
shll
mov
inc
mov
sbb
inc
imul
push
mov
xchg
add
lods
mov
subb
xchg
out
sub
int
popa
sahf
in
incb
outsl
sbb
adc
xor
movsl
lds
lods
add
fwait
or
mov
mov
adc
test
push
ret
inc
mov
shll
cmp
xlat
push
pop
aaa
in
mov
xor
adc
sub
orl
pop
jne
pop
sbb
stos
adc
and
inc
icebp
data16
inc
and
push
and
mov
dec
dec
cmpsb
cmp
push
cmp
pop
loopne,pn
inc
test
mov
mov
or
lcall
pusha
mov
sahf
mov
mov
add
inc
push
test
movsb
push
out
pop
or
dec
pop
arpl
jg
lret
adc
xor
inc
outsb
xor
jecxz
mov
xor
mov
fidivs
xchg
lock
jge
ljmp
stos
push
add
inc
in
lret
adcl
xor
sysexit
xchg
xchg
jmp
fdivl
cmp
pop
cmpxchg
cmp
mov
popl
std
xchg
enter
inc
mov
mov
fs
dec
xor
sbb
cmp
in
pop
jg
xchg
arpl
inc
aas
psrlq
aaa
std
sti
push
pushl
jb
or
fcomi
test
mov
cmpsb
xor
mov
imul
or
inc
nopl
repz
add
push
repnz
pop
fisubl
pusha
push
lahf
into
or
and
jecxz
jo
imul
mov
testl
mov
add
pop
repnz
call
icebp
xchg
scas
xor
push
popf
mov
es
addr16
jno
xor
pushf
dec
fnsave
dec
cmpb
add
sahf
jp
mov
dec
push
sahf
dec
push
test
adc
decl
add
dec
repz
cmp
in
pop
daa
inc
push
insb
bound
dec
sbb
jge
scas
and
jnp
xchg
test
add
push
dec
orl
popa
jnp
cmpsb
jns
dec
xor
xor
in
movsl
mov
inc
insl
mov
repnz
or
inc
dec
stc
xchg
mov
into
addb
sub
aad
inc
push
aad
rolb
mov
mov
fsubp
outsb
sub
pop
fcmovu
mov
lret
ficoms
or
mov
jecxz
pop
dec
xchg
xor
sbb
andb
aam
inc
mov
out
dec
test
mov
call
ds
fwait
cmp
push
pop
stos
and
sarl
imul
test
xchg
sub
cli
pushf
inc
xorl
add
cmp
push
xchg
push
xor
out
jae
sti
div
sbb
push
cmp
jp
mov
and
das
jnp
mov
loope
push
jg
mov
push
sub
sbb
pop
mov
pop
push
mov
pushf
test
rolb
shlb
xchg
insb
and
cmpsb
or
dec
push
cli
pmaxub
sub
fs
jl
pop
clc
sbb
cmp
pusha
cli
lcall
sub
sarb
xor
pop
push
adc
movsb
aas
add
ror
test
dec
popf
mov
inc
mov
sti
out
fistpl
sbb
test
pusha
cmc
mov
orb
inc
jmp
jecxz
adc
mov
lahf
insl
pop
mov
add
inc
out
jnp
enter
les
imul
lret
fldl
pushf
aam
sub
in
mov
inc
adc
cmp
in
xor
xchg
adc
adcl
and
mov
loopne
mov
imul
ja
adc
cmpsl
test
dec
mov
lock
cld
pop
dec
pop
dec
dec
xchg
jge
les
scas
std
adc
int
outsl
fiaddl
sti
dec
arpl
sub
and
adcl
test
pop
fs
mov
scas
jge
push
jmp
xchg
movsb
xor
imul
outsl
jo
movsb
lcall
lock
push
sbb
xor
xchg
sahf
or
popa
or
mov
push
jae
mov
mov
sub
sbb
add
movsb
popa
int3
pop
pop
add
std
fs
fisubrs
out
jp
into
call
enter
arpl
ret
bound
mov
fwait
ror
dec
jnp
cmp
xor
push
dec
mov
aam
mov
push
dec
jb
test
ret
iret
nop
inc
and
inc
dec
mov
movl
loope
das
out
dec
jbe
ret
in
push
add
ljmp
cmp
adc
and
inc
push
stos
bound
push
loopne
in
inc
js
pop
add
xchg
push
in
imul
imul
imul
pop
xor
inc
rcr
mov
mulb
ja
lret
lds
pop
mov
cli
push
insb
ja
xchg
push
or
cmpsl
cmp
outsl
fmull
lret
pop
jp
xchg
inc
mov
loop
xchg
dec
sbb
jmp
mov
nop
adcl
mov
jle
mov
ja
xchg
mov
lods
sub
push
inc
lds
popa
jns
imul
or
je
xchg
insl
popa
mov
mov
adc
test
jae
sbbb
or
negb
cmp
mov
mov
fsubl
ficoms
mov
nop
aas
sub
and
mov
mov
jge
or
and
enter
jno
pop
mov
cmp
add
int
sti
popa
lods
pop
gs
dec
xchg
pop
jnp
imul
scas
dec
push
lea
imul
cmpl
push
nop
xor
jp
leave
xchg
sbbb
xor
pop
add
sub
sbb
dec
xchg
das
xor
pop
jno
in
insl
in
push
adc
push
sub
inc
popf
mov
lret
ret
repnz
cltd
jmp
insl
sub
or
loopne
and
mov
and
sub
sbb
add
pop
adc
gs
push
stc
test
inc
rcll
test
xor
inc
repnz
mov
lret
jnp
xchg
add
jmp
mov
sahf
mov
out
push
cwtl
push
loopne
outsl
push
xor
sbb
jl
cmp
push
pop
adc
repz
mov
sbb
ljmp
mov
clc
cmpsb
leave
jno
aas
fwait
dec
nop
stos
dec
sub
mov
xor
mov
lock
shll
mov
pop
push
lods
mov
testl
inc
inc
test
pop
sahf
or
sbb
xchg
pop
sbb
and
pop
adc
jbe
pop
mov
adc
add
cld
jg
push
loopne
push
jae
inc
popa
add
cmpsb
mov
outsl
and
jl
jno
jp
pop
aam
movsl
pop
insb
or
sbb
movsl
cld
test
xchg
mov
repz
pop
es
scas
fisubl
aad
or
mov
fwait
mov
fbstp
inc
jns
jns
pop
aam
pop
jge
int
sub
sub
adc
dec
test
cmp
sub
cmp
xor
dec
pop
cmc
mov
and
and
or
mov
mov
or
xor
imul
fstpl
jo
lcall
popa
push
inc
rol
push
and
pusha
inc
sub
in
pushf
enter
pushf
mov
andl
sub
test
dec
jmp
mov
push
lods
fst
jmp
push
jns
push
or
pop
mov
popf
iret
fnstsw
repz
mov
out
xor
pop
es
cmp
int3
cwtl
ja
jp
lods
push
jnp
jle
nop
dec
add
pop
out
repnz
dec
mov
das
aad
ret
push
aad
jge
push
push
imul
or
pop
ss
jg
les
rolb
ds
push
xlat
mov
xchg
andl
int
nop
mov
mov
ljmp
fidivl
fildll
jbe
hlt
add
jp
lea
out
pusha
cmpsl
sar
mov
mov
jg
cmp
stos
fwait
sahf
insb
fmul
xchg
js
sub
nop
inc
and
int3
popf
sbb
mov
sbb
sub
mov
xchg
add
je
lea
sbb
xor
and
push
test
std
adc
jo
in
ja
jp
push
mov
and
and
jbe
out
xorb
push
jecxz
rdpmc
dec
imul
push
popf
mov
jp
pop
fldcw
in
scas
mov
mov
cmp
and
arpl
xor
sbb
pop
or
xchg
pop
dec
lahf
pop
mov
xlat
ja
out
jbe
push
je
push
dec
pushf
xor
mov
imulb
adc
gs
fsub
cmc
dec
lock
lods
lret
push
inc
mov
and
cld
jae
mov
lcall
test
es
jbe
pop
and
lods
hlt
push
rcll
psubsb
cmp
mov
out
shld
sbb
push
dec
add
adc
cmp
mov
sahf
push
jecxz
adc
popl
adc
jo
inc
or
popa
mov
xlat
out
or
xlat
mov
xchg
dec
icebp
and
mov
sbb
cmpsb
xchg
icebp
or
nop
or
movsw
test
rolb
iret
jno
sbb
loop
cmpsl
jmp
mov
hlt
loopne
push
aaa
jbe
cmp
mov
pop
fiadds
cmp
and
sbb
fsubr
sub
sbb
or
push
mov
mov
cmp
mov
add
push
fsubs
shrb
sub
fwait
pop
negl
fwait
pop
fimuls
mov
insb
cmp
mov
faddp
test
mov
xchg
mov
push
loopne
mov
sub
imul
cmpl
and
pop
out
push
les
mov
iret
xchg
call
add
xor
stc
sub
adc
adc
repnz
test
inc
call
dec
cmp
fistps
int
xchg
or
or
movl
xor
mov
jmp
push
enter
jp
pusha
cli
pop
adc
iret
mov
jns
insb
es
xchg
cmp
sub
and
push
adc
pop
out
es
sub
inc
stos
dec
adc
jns
sub
rorb
testb
cmc
push
pop
jmp
sbb
mov
xchg
notb
test
scas
push
mov
xor
xor
push
test
std
mov
inc
in
popa
loope
mov
inc
sahf
ret
fs
repz
xchg
lods
test
sbb
pop
mov
int3
dec
mov
subl
push
cmpsl
mov
stc
test
pop
push
jg
scas
adcb
mov
into
dec
stos
or
sti
popa
push
or
xchg
jecxz
mov
ja
scas
pop
addr16
jo
xlat
push
stos
dec
add
repnz
pop
lea
popa
arpl
xchg
in
or
jo,pn
in
gs
xchg
repnz
jno
ret
and
lods
jbe
jmp
fwait
or
sub
popa
filds
jp
inc
js
add
push
lcall
sbb
and
out
insb
out
stc
adc
les
mov
jns
sti
cltd
adc
sub
jmp
sarw
stc
fistl
fdivrp
inc
stos
push
lods
mov
std
or
sbb
dec
jl
or
jmp
leave
inc
mov
cli
adc
push
push
xlat
fldt
inc
pop
scas
cli
ret
push
test
and
cmp
push
mov
cwtl
dec
xor
xchg
repnz
fldl2t
ss
fxch
adc
dec
adc
popf
dec
pop
push
mov
lods
sbb
aas
mov
and
filds
punpcklbw
cmp
jns
clc
or
stos
sarl
test
stos
in
inc
pushf
fstps
mov
nop
jo
push
adc
sbb
jno
xor
scas
les
push
lret
adc
cld
pop
in
push
daa
jnp
lret
ret
dec
test
stc
jns
xchg
ret
xchg
mov
stc
push
scas
ret
das
repz
test
cld
dec
pop
xor
inc
fildl
push
push
xchg
icebp
aad
fnstsw
stos
fimull
ja
xor
sub
push
mov
fisttpll
iret
mov
shrl
popw
mov
into
pop
bound
out
les
inc
push
pop
test
mov
xchg
leave
mov
repz
outsl
xchg
jnp
int3
jmp
dec
sbb
lea
imul
pop
and
mov
xchg
mov
dec
cltd
call
fwait
jbe
push
jnp
in
inc
dec
push
inc
adc
call
push
inc
or
add
mov
daa
add
lods
mov
or
aam
sahf
ficomps
imul
and
scas
in
mov
mov
xor
cmc
push
aad
push
jge
dec
inc
lods
pop
or
mov
sbb
mov
push
je
jp
xchg
in
enter
test
mov
mov
jb
jp
out
subl
adc
lahf
ds
fcomps
pusha
adc
movsb
sbb
xchg
jecxz
sub
xor
add
or
xlat
fisttps
mov
dec
push
mov
pushf
in
add
mov
cmp
pop
pop
xor
hlt
jecxz
mov
and
je
icebp
xor
push
and
or
xor
es
out
jge
test
mov
leave
mov
dec
pop
sbbl
ret
sarb
or
mov
cmp
and
gs
pop
fisubrl
stc
das
js
xchg
mov
pcmpeqd
mov
shrl
mov
pushf
sub
rcrb
mov
mov
and
cmpsb
cmpsb
mov
mov
ja
inc
mov
adc
sub
lea
nop
pusha
pusha
lahf
cmp
into
cmp
stos
push
sahf
jae
stos
and
in
dec
daa
pop
mov
ja
ret
add
cltd
push
adc
cmp
movsl
ret
in
push
push
clc
jmp
loop
aaa
xor
sub
sub
cmp
ficomps
xor
push
loopne
push
mov
pop
fbld
lods
push
xor
arpl
adc
lea
push
stc
xchg
xchg
push
std
jge
nop
fmul
lock
ja
xlat
push
loop
loop
push
add
cmp
jns
notb
push
jnp
jmp
jge
je
adc
bound
sub
testb
addr16
std
and
xchg
cmp
call
imul
and
pop
in
pop
ljmp
mov
data16
push
dec
mov
lret
ret
xlat
lock
mov
out
pop
sbb
mov
icebp
pushf
mov
sbb
in
mov
or
je
movsl
sub
push
adc
or
xchg
popa
pop
hlt
ds
and
leave
jb
mov
pop
cmp
xchg
adc
in
out
sbb
ja
pop
icebp
outsb
shr
shrl
push
test
leave
mov
mov
rolb
or
call
sub
fbstp
xchg
bound
lret
imul
sbb
sbb
xchg
pop
stc
cmp
outsb
jnp
call
stc
pop
loopne,pn
lahf
xor
push
jmp
lcall
ljmp
ss
rclb
std
mov
test
dec
popa
pop
pop
jb
subl
mov
or
adc
int
pop
mov
pop
sub
jns
xchg
shr
scas
xchg
xor
push
imull
jge
xchg
rorb
add
insb
cmp
push
mov
outsb
sub
in
or
enter
out
insb
pop
in
cld
mov
adc
jmp
mov
jo
xchg
jmp
sbb
cmp
enter
jb
ljmp
stos
pop
ror
les
xor
stos
bound
push
out
shl
xorps
nop
pop
repnz
test
inc
sbb
sbb
mov
test
or
xchg
sahf
lock
mov
fadd
out
fsubs
jbe
mov
inc
fwait
subl
or
mov
and
cmp
inc
movsb
add
das
leave
shlb
or
and
xchg
aas
aam
aas
inc
leave
or
jmp
xlat
mov
std
iret
and
hlt
pop
jg,pn
mov
mov
jns
cmp
jecxz
push
and
mov
and
sbbb
nop
cmp
or
bound
jbe
sub
lods
adc
push
add
imul
and
addl
cmp
inc
mov
shll
mov
scas
out
aam
inc
dec
mov
push
std
data16
push
leave
dec
adc
sub
jnp
pop
mov
test
stos
fstpl
pop
mov
stc
and
bound
and
loope
ss
inc
movl
mov
cmp
adc
in
adc
cmp
sbb
in
ljmp
das
in
pop
mov
sub
sbb
add
shlb
and
pop
inc
mov
dec
int3
or
add
mov
fidivs
lahf
mov
dec
daa
jo
jecxz
into
nop
jmp
jecxz
or
pop
push
xchg
xor
sub
or
adc
mov
lods
fwait
add
sbb
inc
cmpsl
aam
ficompl
xchg
idivb
repz
loope
stc
sbb
fcmovne
sbb
pusha
inc
divb
out
cwtl
mov
shrb
push
repz
faddp
pop
fndisi(8087
mov
push
or
imul
jo
outsb
jo
mov
jno
pop
mov
mov
adc
mov
or
sbb
scas
fwait
enter
xchg
sar
ss
bnd
cwtl
insl
popa
out
jbe
rcr
das
xchg
add
jmp
fwait
das
lcall
pushl
mov
in
cmc
inc
pop
es
out
dec
jecxz
leave
dec
mov
cmpsb
push
pusha
das
rolb
lods
imul
sub
imul
xchg
xor
mov
adc
decb
pop
push
iret
adc
ret
popf
dec
mov
int3
mov
pushl
sahf
xor
dec
jae
test
push
jb
jnp
push
movsb
cmp
js
jl
loop
cmpsl
xchg
pop
jge
popa
inc
xor
sbb
inc
jb
lahf
lods
rep
pushf
scas
gs
pop
test
icebp
jg
adc
add
push
insl
dec
push
ret
dec
in
pop
cld
push
and
and
movb
adc
xlat
fisttps
xor
cmp
mov
pop
cmpsb
sti
lock
jne
js
cmp
push
dec
jl
or
ret
and
call
xchg
loope
nop
arpl
stc
push
cli
fwait
xchg
sbb
fwait
jp
mov
sub
push
dec
pop
jne
stos
jnp
xchg
cwtd
pop
addr16
pop
jecxz
scas
aad
mov
sub
inc
xlat
mov
mov
fbld
and
or
push
pusha
ljmp
pop
loope
add
pusha
jb
xor
xchg
cld
cmc
out
daa
aam
dec
movsb
or
adc
mov
sbb
dec
adc
pop
movsl
rol
jecxz
ret
jns
ret
ret
push
test
jp
enter
mov
dec
and
stos
cmp
jge
pop
std
xlat
out
cmpsl
clc
and
jno
jecxz
popl
divps
dec
lds
lahf
cmc
or
stos
jns
outsb
data16
loope
ret
lea
cmpsl
or
pop
pop
push
mov
inc
out
pop
icebp
ror
jo
ljmp
cmp
pop
sar
push
lds
cli
pop
sub
imul
daa
inc
sub
push
scas
test
inc
test
aas
jle
xor
xchg
or
test
pop
or
lods
loop
popf
xchg
cmp
cld
shlb
fistl
nop
mov
jecxz
cmp
je
mov
or
or
gs
mov
and
adc
loope
xchg
inc
pop
cmpsb
pop
and
inc
mov
loop
int3
xchg
pop
add
rorb
inc
std
push
iret
jnp
aam
sub
sarb
daa
shrl
sbb
js
cmpsb
adc
loop
leave
pop
mov
pop
or
push
xor
push
lret
xchg
xor
subl
xor
xor
xchg
dec
mov
lret
mov
loopne
leave
daa
pop
push
movsb
subb
sbb
in
int3
lods
sahf
xor
aad
cmpsb
fsts
lock
sbb
pop
iret
jnp
frstor
inc
jnp
int
inc
mov
cld
test
adc
pop
or
imul
or
inc
cltd
mov
outsb
jo
xchg
mov
pop
or
xor
add
pop
inc
cmp
cwtl
bnd
imul
out
ljmp
adc
xchg
ficoms
push
sarb
mov
xchg
dec
sbb
jno
pop
xor
xchg
mov
push
mov
mov
das
add
or
cmp
mov
std
xchg
inc
enter
jge
out
adc
xlat
push
lods
in
mov
icebp
cld
lea
sub
decl
xchg
or
push
mov
dec
xchg
outsb
jg
sub
push
inc
dec
mov
or
cmp
inc
xor
lock
and
jecxz
mov
stos
aam
pop
and
and
dec
in
sbb
pmaxsw
pop
andb
adc
bound
dec
daa
dec
cmp
movsl
mov
and
ret
cltd
lret
cwtl
push
ret
mov
sub
in
push
or
xchg
pushf
jns
lods
orl
xor
pop
mov
mov
mov
lret
cmp
je
push
mov
pop
xchg
mov
rorb
xchg
inc
jo
aaa
push
add
loopne
dec
lods
sahf
inc
xchg
mov
arpl
cld
xor
push
leave
or
das
cmp
jecxz
xchg
mov
rcrb
je
sbb
loop
xchg
dec
push
push
lods
dec
jecxz
jecxz
into
pop
pop
dec
loopne
xor
pop
inc
mov
cmp
pop
mov
cmp
pop
mov
sbb
aas
push
adc
mov
hlt
sub
mov
mov
andl
dec
js
and
push
outsl
lods
inc
cmc
mov
mov
xlat
mov
jnp
cmp
jae
add
cmp
push
test
jecxz
test
adc
hlt
dec
and
and
add
cmp
mov
jg
mov
adc
sbbb
xchg
add
sbb
pushf
adc
scas
inc
pushl
sub
out
repnz
push
scas
inc
dec
lret
cmp
lcall
fadd
std
dec
cmc
sbb
gs
mov
bound
lods
xor
loope
js
jno
mov
mov
pop
sub
xchg
mov
std
shrl
dec
inc
data16
xor
dec
push
and
xchg
outsl
xor
push
test
dec
in
sub
in
jb
lods
scas
dec
xor
icebp
mov
sbb
aad
aaa
mov
and
outsb
fdivrl
js
push
mov
imul
cmp
xor
test
jecxz
int
mov
nop
dec
and
ja
jmp
jns
jnp
and
cltd
pop
xchg
cmc
scas
sub
mov
stos
mov
lock
dec
mov
push
es
in
enter
xchg
adc
jmp
and
pop
mov
call
cmc
outsl
or
sub
pop
std
outsl
sbb
dec
jl
and
inc
mov
inc
cmpl
xchg
inc
xlat
xchg
mov
ficoms
dec
pusha
ret
out
cli
mov
fstp
push
and
lret
out
or
into
cmpsl
mov
in
push
shll
push
popa
int3
and
daa
sub
jns
mov
pop
add
es
lcall
mov
pop
mov
jp
xchg
jns
dec
pushf
test
clc
xchg
sub
sarb
xchg
inc
mov
aad
fs
mov
cmpsb
iret
shrl
jmp
notl
xchg
push
rol
jns
add
clts
mov
testl
out
nop
cmp
fbld
jg
rorb
add
push
dec
lret
dec
inc
pop
cmc
jns
sub
inc
rcr
rclb
mov
lods
cs
lret
xchg
xchg
cmp
jp
lahf
pop
stos
mov
mov
mov
xor
sbb
jg
xlat
insl
pop
je
aam
movsl
cmp
stc
mov
push
and
inc
es
fistps
xlat
in
push
test
mov
lahf
lret
sub
sub
js
into
fwait
pusha
shrl
fsubrl
orb
adc
insb
push
xchg
bound
leave
sub
imul
xor
test
sub
cs
jle
adc
xchg
mov
adc
lock
orl
inc
pop
jns
repnz
jmp
loopne
inc
in
xchg
retw
lret
stos
cmp
stc
repnz
adc
test
in
aam
cli
dec
mov
sub
mov
arpl
imull
lods
and
pop
data16
sbb
dec
jg
mov
adc
mov
in
lcall
dec
fsubrl
jp
je
xor
xchg
xor
lret
xlat
fwait
ret
in
fwait
movsb
xlat
inc
pop
in
xchg
sbb
xchg
push
in
push
mov
imul
xor
mov
xchg
jo
mov
inc
sbb
adc
movsb
dec
adc
mov
outsb
frstor
aam
dec
notb
imul
mov
dec
and
mov
mov
adc
xor
fidivl
clc
sub
add
lock
push
add
gs
hlt
jb
adc
clc
ss
pop
stos
fistpl
roll
movsb
jecxz
inc
imul
inc
push
mov
mov
adc
cmp
jb
fmuls
mov
inc
push
stos
daa
sbb
inc
test
add
js
xor
clc
pop
shll
or
loopne
lea
loop
jl
cltd
xchg
cli
loopne
scas
mov
mov
dec
jecxz
or
jg
shrl
inc
shl
jb
and
sub
xor
lds
pop
sbb
int3
sbb
sbb
stc
cmpsl
dec
out
sbb
and
cmp
call
jp
fcoms
std
push
mov
orb
jo
push
pop
xchg
and
cmpsb
out
cmpsb
or
mov
sbb
imul
mov
jb
loopne
push
icebp
ret
lock
in
rclb
jo
lods
sbb
mov
or
mov
in
nop
add
push
xchg
daa
cltd
add
dec
jns
and
dec
mov
adcb
stc
in
or
popa
rcrb
push
iret
pop
hlt
mov
dec
cmp
movsb
jmp
dec
aas
out
fiaddl
fldl
sbb
or
mov
and
pusha
cmp
or
sub
xor
xor
adc
repz
xchg
shrb
jns
stos
sub
xchg
jbe
popa
shr
movsl
test
cmp
sub
sub
ret
xor
int
xlat
add
sarl
or
js
or
aam
mov
mov
or
sub
sub
cmpsl
std
cmp
pop
movsl
mov
test
lea
je
dec
inc
push
xor
jns
faddp
pop
mov
lcall
mov
ljmp
jnp
dec
adc
rcrl
jnp
xor
out
cltd
movsl
add
sti
das
test
icebp
int3
cmpsb
fcomp
xchg
out
xchg
popf
or
inc
loopne
push
sarw
push
push
das
mov
mov
mov
rclb
add
movb
jnp
bound
and
mov
test
pop
sbb
jb
mov
mov
push
mov
cmp
stos
adc
cmp
shlb
adc
jg
and
in
xor
cmp
dec
js
ret
xchg
push
adc
jne
lds
es
ret
fildl
jmp
sub
insb
into
push
inc
push
xchg
pushl
pushf
orb
xchg
cmp
fsubl
dec
xor
jecxz
mov
fstpt
push
cmp
mov
cmp
je
push
cs
stc
insl
xchg
jmp
push
cmpsb
into
dec
movsb
lods
jle
je
push
pop
lahf
sti
inc
fisubrs
addb
pop
push
in
push
sbb
and
jno
xor
push
cmpsl
test
and
pop
clc
add
in
fucomip
aas
push
lock
rcr
mov
xorl
mov
push
lds
orl
test
rorl
add
dec
sbb
sbbl
test
mov
dec
in
add
cmpsl
je
pop
mov
mov
ja
jl
lods
lock
pop
mov
adc
xor
cld
in
jno
nop
fwait
pop
mov
push
xor
repnz
in
fdivl
repnz
inc
inc
int
push
push
aas
sub
or
adc
pop
mov
jmp
and
lret
out
fdivl
fldl
xchg
mov
push
lret
scas
cmp
icebp
or
imul
jge
or
aad
fs
or
xor
jg
mov
mov
fcmovne
fwait
pop
mov
pop
xchg
subl
in
loop
cmp
ret
loopne
mov
out
xchg
dec
mov
xor
lock
jl
fidivs
insb
gs
aaa
sub
shl
lret
outsl
into
arpl
fwait
arpl
push
sbb
xchg
and
jne
ret
test
divl
push
xchg
dec
jns
iret
push
setae
mov
into
leave
push
push
adc
loop
repz
fdiv
jb
ret
movsl
imul
jmp
mov
sbb
lock
push
popa
jb
jns
into
clc
into
dec
push
mov
pop
mov
fimuls
jmp
xchg
xchg
cwtl
dec
mov
lods
and
pop
push
adc
adc
mov
aas
inc
jae
inc
pop
ljmp
gs
jne
add
jnp
jl
and
shrb
mov
pop
add
jg
push
pop
sbb
inc
jp
mov
mov
pop
pop
or
mov
push
lret
inc
out
xchg
into
cmp
xchg
ljmp
jbe
xor
stos
mov
sub
mov
movl
loope
or
idivb
nop
and
cmpsb
jae
out
pop
xor
xor
adc
inc
xchg
loopne
pop
rclb
mov
or
push
subb
fadds
push
lret
pop
mov
aaa
lret
pop
mov
into
gs
mov
cmp
imul
inc
push
rclb
repnz
push
out
adc
clc
cli
push
clc
adc
dec
sbb
and
lea
mov
mov
lahf
fistpll
rcrb
pop
lods
sahf
lds
mov
out
adc
xor
mull
jne
push
jbe
jmp
ds
call
xchg
inc
jno
mov
pop
lret
daa
and
push
sbb
add
mov
sub
push
xchg
mov
out
leave
mov
stos
test
pshufw
sub
xorb
push
xchg
lret
fs
xchg
decb
lcall
inc
popf
xchg
pop
lods
cmp
les
jl
stos
popf
inc
cltd
push
jl
lret
jmp
fsubs
cmp
push
mov
mov
inc
push
fucom
stos
sbb
pushf
cmpsl
lret
pop
fbstp
adc
je
xor
or
mov
rcl
pop
dec
mov
ljmp
push
movsl
push
loope
jo
fs
fwait
das
repnz
or
or
dec
daa
aam
push
pop
or
add
and
int3
inc
out
or
mov
int3
fsubrp
xchg
repz
sahf
hlt
jmp
lock
nop
sbb
mov
scas
push
rcrl
repnz
mov
jecxz
es
fisubl
adc
push
lret
mov
add
inc
stos
aas
sub
or
xchg
fldenv
mov
adc
pushf
cmp
mov
mov
fisttps
jg
cs
icebp
sbb
push
test
and
stos
loope
fistps
jg
pop
ss
in
mov
xchg
sub
jne
imul
out
shlb
inc
mov
fisttpll
lods
iret
pop
sti
add
inc
fnsave
mov
jle
fmuls
in
sbb
stos
icebp
or
xor
test
and
mov
movsb
in
orl
sarb
push
sub
add
inc
xchg
fldl
ja
out
stos
cmp
int3
lds
into
arpl
jno
add
test
sub
pop
mov
filds
dec
in
andb
push
and
cmp
inc
push
cltd
push
dec
not
jecxz
sbb
std
nop
or
cmc
pop
movsb
xor
adc
mov
lret
les
in
ljmp
pop
nop
mov
jp
mov
negb
push
inc
outsb
add
test
or
push
sub
mov
cwtl
cmp
jmp
mov
dec
aas
es
lock
add
stos
ja
cmp
dec
fbld
mov
jo
das
cmpsb
push
xchg
out
xor
aam
rol
jecxz
cmp
cmp
or
test
pop
pushf
inc
sbb
scas
push
cmp
lods
je
jbe
mov
sbb
cmc
xchg
rolb
test
pop
add
and
in
xchg
mull
ror
pop
mov
repnz
push
mov
fcmovb
cwtl
scas
into
dec
mov
sbb
arpl
test
icebp
hlt
mulb
jo
pusha
rcrl
add
rcrl
inc
out
ficomps
push
icebp
cmp
sbb
lock
xchg
jmp
pop
cwtl
push
aaa
sti
cmpb
pop
cwtl
clc
inc
pop
nop
or
sti
mov
cmp
push
add
in
sbb
mov
loop
mov
data16
lock
enter
je
pop
cmp
nop
lret
push
xor
lods
scas
pop
outsb
cwtl
pusha
shrl
xchg
outsb
inc
mov
repz
inc
shr
jae
xchg
orl
pop
fwait
scas
dec
push
and
scas
inc
rcpps
push
hlt
int
push
orl
sti
js
ret
loop
mov
xchg
mov
mov
dec
cltd
mov
iret
test
ja
fistpll
mov
inc
sbb
cmp
jnp
into
jg
arpl
sbb
std
out
mov
dec
sbb
rolb
mull
sub
inc
cmp
lea
xor
push
push
adc
int
sbb
jecxz
fidivl
pop
iret
das
cltd
inc
push
xor
add
mov
cmp
mov
fdivrl
xchg
shlb
xchg
movlps
ret
cmp
lcall
pusha
adc
fstpl
out
loop
pop
jnp
sti
push
lds
mov
mov
pusha
lods
push
pop
or
hlt
dec
xlat
scas
jmp
push
cmovge
push
bound
jp
cli
int3
push
hlt
pop
pop
imul
outsb
jne
sbb
sbb
aaa
pop
pop
or
cltd
daa
adc
sub
xor
sti
dec
mov
and
test
scas
dec
add
out
dec
mov
movsl
inc
mov
push
and
movsb
jge
adc
push
lret
cmp
addr16
cmpsb
pop
dec
push
lock
sarb
lret
cmp
pop
sti
pop
mov
mov
aaa
addr16
lret
inc
push
orl
in
bsr
cmpsb
fnsave
lcall
cmp
fwait
pop
sub
and
xchg
iret
lods
inc
cs
push
cmp
or
add
jne
push
cs
sti
cltd
fldenv
cld
rol
sahf
adc
loope
sbb
in
in
jbe
out
pop
ret
mov
xor
es
lock
mov
jnp
cmp
push
or
pop
xlat
out
push
jmp
lahf
push
fsubrs
fdivrs
sbb
xchg
mov
inc
xchg
cmp
push
jns
or
daa
mov
clc
push
add
mov
adc
pop
mov
in
xchg
fdivrl
mov
jp
lock
rcll
scas
bound
mov
cli
movsb
mull
adc
call
ds
mov
mov
cmc
icebp
jmp
stos
or
and
cmp
pop
add
mov
jle
push
or
andb
push
data16
xchg
lcall
mov
and
adc
xor
mov
xor
push
inc
sbbl
sti
jge,pt
mov
pop
sbb
stc
and
dec
sar
leave
in
sub
mov
mov
into
sbb
sub
gs
sbb
mov
mov
jp
ret
cmp
inc
xchg
cmp
sbb
call
or
mov
cmp
push
aaa
sbb
pop
mov
ljmp
mov
push
stos
xor
sub
daa
xchg
pop
in
aam
mov
sub
lock
add
je
inc
add
rcll
hlt
cltd
dec
imull
adc
mov
frstor
cmp
dec
cmp
and
outsb
out
ror
jmp
nop
or
jns
subl
pop
xor
pop
int3
pushf
adc
xchg
pop
pusha
mov
pusha
pop
jnp
and
adc
dec
add
ljmp
sub
cltd
das
lret
repnz
ret
cli
pop
bound
std
cmp
mov
sahf
xor
lret
lret
int3
fwait
inc
icebp
pushf
dec
aaa
ds
pop
std
and
adc
aad
jnp
jle
push
sub
push
arpl
add
jno,pt
pop
int3
lods
stos
gs
scas
mov
pop
lods
cmpsb
pop
outsb
hlt
lret
repz
inc
mov
jecxz
xchg
jne
push
mov
jmp
dec
stc
sbb
xor
or
out
push
pop
xor
add
das
sahf
test
rcrb
sub
test
popa
je
cmp
repnz
fbstp
loope
xchg
in
sbb
cmp
inc
rcrl
fsubs
add
mov
pop
test
sahf
in
push
lods
sub
jmp
scas
stos
popa
out
in
fstl
jnp
fldenv
jo
cltd
push
fs
fldt
push
jne
test
into
sbb
pop
mov
in
stos
enter
xchg
movsb
mov
jp
insl
sub
mov
xchg
notb
ja
addl
pop
sbb
cmc
jmp
icebp
fcoml
pop
jb
popa
mov
lret
cmp
xchg
jge
jo
into
pop
aam
repz
jo
fcoml
stos
lcall
imul
int
mov
xchg
dec
push
mov
in
mov
jge
and
popf
fistpll
pop
mov
cmp
loop
jg
adc
rcrb
leave
xor
fimull
push
dec
ficoml
add
xchg
pop
sahf
adc
mov
rcrl
or
pop
cvtdq2ps
mov
stc
adc
jp
sbb
sahf
mov
int3
ds
adc
and
fisttpll
xorb
mov
insl
fistl
ss
adc
adc
lcall
sti
push
add
rolb
adc
inc
cld
inc
jg
fstpl
jne
cmp
bound
cs
fnstenv
mov
jo
and
or
adc
hlt
sub
pop
and
das
iret
jno
sub
add
int
mov
adc
push
push
leave
adc
sbbl
scas
add
loopne
ret
xchg
lret
scas
es
add
fdivr
jae
aas
and
lds
sub
jg
add
pop
or
mov
gs
lock
ss
mov
lret
adc
scas
lds
int3
sbb
sbb
lock
sub
stc
les
mov
pop
outsb
lods
int
sti
fcomps
mov
add
xchg
fldcw
mov
sbb
ljmp
sub
sahf
fwait
mov
outsl
out
imul
movsb
mov
dec
lcall
pop
enter
cld
fdivp
sti
outsl
outsb
xabort
cld
in
sbb
ja
dec
add
xchg
dec
icebp
into
push
repz
push
or
dec
cmp
stos
popf
cmp
testl
jbe
mov
mov
cmp
mov
mov
sub
shlb
cmp
nop
leave
stos
push
mov
sub
pop
bound
mov
mov
push
repz
or
cwtl
pop
ja
addl
lods
fisttps
gs
bound
push
sbb
fwait
arpl
pushl
ljmp
adc
sub
cltd
roll
cmp
or
xor
fdivl
repz
sub
dec
or
scas
or
lods
sub
test
loope
mov
cmp
mov
cmp
mov
fsts
andb
or
dec
das
and
and
cmpsl
pop
xchg
xor
mov
bound
mov
pushl
or
inc
adc
pop
sbb
add
or
or
add
shlb
in
add
mov
add
xor
loop
ficoms
sbb
mov
out
cmp
jae
ss
les
lahf
push
sbb
mov
jnp
sbb
mov
pop
sbb
jmp
mov
and
scas
daa
test
sarb
cmp
dec
in
cmp
clc
fst
pop
pop
push
out
or
cmp
rorb
movsl
iret
pop
jmp
call
mov
xor
push
cmpsb
mov
push
mov
or
xchg
and
cmp
imul
out
sbb
push
cwtl
dec
push
push
gs
mov
idivb
pop
or
shl
inc
movl
and
xor
adc
sahf
mov
mov
dec
pop
sub
clc
push
fs
movlps
xor
fldl
mov
pop
mov
dec
push
outsb
push
daa
divb
sbb
dec
cs
pop
aas
subl
mov
test
in
gs
add
in
pusha
fcmovne
ljmp
pop
data16
mov
add
xchg
mov
jbe
fs
jne
bound
adc
mov
rcll
adc
outsb
gs
rcll
mov
rcl
jae
xchg
push
outsl
dec
mov
das
repnz
mov
pushf
iret
mov
mov
lcall
out
das
jbe
popa
pop
loopne
pop
or
sub
cmp
mov
xchg
rorb
or
dec
ljmp
andl
out
dec
mov
cmp
pop
aad
stos
pop
inc
imul
jne
test
mov
lret
push
dec
adc
push
lret
push
cmpsb
std
sbb
incl
iret
sub
packssdw
jecxz
cwtl
dec
inc
fisttpl
adc
repz
addl
clc
cmp
rcrl
mov
sbb
das
xchg
ss
mov
dec
push
pop
and
out
sub
jne
fistpl
fadds
sub
xor
push
jecxz
push
xchg
add
ss
sub
inc
mov
test
pop
push
add
movsl
dec
mov
pop
pop
stos
add
in
xor
mov
movsb
into
sbb
scas
jns
dec
jnp
jb
mov
aad
xor
sub
pop
inc
stos
out
pop
push
roll
jle
push
addl
mov
jb
pop
fstpl
jle
iret
leave
pop
mov
dec
cmp
push
frstor
mov
scas
jne
mov
adc
lahf
jp
xchg
cmp
addr16
out
stos
jg
mov
sub
dec
pop
ljmp
test
xor
xchg
cmp
jle
mov
pop
xor
cwtl
mov
imul
imul
xor
cltd
in
out
aaa
sbb
cmc
into
ljmp
push
sbbl
mov
and
push
pop
iret
cmc
shl
add
repz
adc
ret
sub
pop
fmuls
jmp
cmp
hlt
je
pop
jbe
mov
fwait
pop
jle
movb
push
dec
fcoms
push
or
leave
lahf
push
dec
pop
iret
push
pop
push
add
pop
cld
mov
jge
movsb
div
or
subl
inc
dec
mov
mov
push
jl
fs
mov
and
into
imull
push
stos
dec
add
sbb
dec
and
data16
nop
lahf
and
mov
cltd
sbb
mov
imul
cmp
loope
cmc
mov
jecxz
sbb
out
inc
je
fldcw
dec
pushf
add
jns
mov
ja
pop
xchg
pusha
dec
inc
mov
into
mov
test
mov
cmc
out
nop
adc
adc
cmp
nop
push
and
into
cmc
andl
scas
sub
fs
add
or
xchg
xchg
or
fisubrs
popa
sbb
call
test
aas
sbb
lahf
add
cmp
out
fwait
mov
push
and
jp
inc
das
pop
test
ss
inc
lret
push
add
movsb
push
xchg
push
xchg
cs
and
push
aad
loopne
cli
push
cld
imul
and
scas
scas
mov
adc
push
mov
das
mov
inc
inc
scas
gs
addb
pop
repz
mov
cwtl
aaa
sbb
out
std
dec
mov
inc
adc
fildll
dec
jo
lods
sbb
sarl
add
cs
push
rcrb
mov
cld
push
sbb
int
adc
adc
mov
lea
add
push
sub
fdivrp
pop
sub
dec
ret
in
sbb
adc
hlt
mov
ficompl
mov
test
or
cmp
sbb
mov
adc
aas
call
not
test
mov
pop
adc
addr16
push
mov
lock
adc
mov
lods
shrl
push
adc
or
push
aas
xlat
jnp
lret
and
cmp
xor
sub
sahf
jge
jnp
mov
jp
push
jae
orl
sbb
sbb
lods
ljmp
pop
mov
in
add
inc
push
push
jg
dec
add
ljmp
insl
xor
mov
shlb
repnz
iret
mov
cmp
stos
sub
dec
xchg
ljmp
xor
loop
pop
push
lods
ffree
xchg
mov
lods
andb
xor
pushf
int
outsl
mov
test
add
or
push
ret
aam
dec
test
pop
in
push
inc
sub
mov
int
stos
inc
sbb
inc
jle
jmp
mov
fs
xor
cs
insb
fwait
cmp
push
out
and
jns
aam
add
cmp
xor
inc
aad
push
nop
stc
lock
or
enter
scas
aam
sub
jg
fdivs
pop
sub
stos
jb
sarl
aas
data16
outsb
and
pop
dec
sti
add
data16
in
xor
mov
movsb
lret
cmp
pop
test
adc
mul
sahf
dec
pop
icebp
lds
and
xchg
aad
xchg
mov
int
sub
mov
rolb
ja
pop
rcrl
pop
or
xchg
add
jecxz
fwait
jp
inc
aad
cmc
imul
jmp
jge
pop
incb
pop
jb
and
mov
sub
or
lods
cmp
lahf
or
xchg
call
mov
inc
popf
pop
xchg
lret
iret
test
aam
or
mov
push
xor
xchg
int3
mov
cmpsb
mov
push
filds
int3
and
ja
enter
js
add
add
iret
inc
mov
add
pop
or
mov
xchg
fs
xor
scas
jbe
bound
out
movsb
xlat
pusha
dec
dec
sub
lret
xchg
data16
sub
mov
sbb
cwtl
inc
int
cmc
cmpsl
mov
shlb
push
fld
jecxz
xor
dec
popf
push
or
add
lret
test
cmpb
mov
jecxz
xchg
push
test
pop
lret
stos
push
cmp
imul
mov
bound
mov
loope
mov
insb
pusha
lods
daa
mov
jb
loop
std
ffreep
lods
daa
jp
jne
aas
rcrl
lods
icebp
dec
xor
filds
insb
ds
cmc
mov
int
mov
mov
loope
push
or
pop
or
sarl
int
xchg
pop
xor
cli
test
ja
bound
aas
ret
push
pop
xchg
aam
stc
repz
mov
stos
loopne
sahf
xchg
push
dec
inc
dec
pop
lret
stos
inc
inc
hlt
inc
cmp
out
sti
adc
mov
fnstcw
push
fmuls
and
subb
push
and
mov
outsb
sub
jg
and
and
loopne
or
sti
or
leave
jecxz
xor
test
xor
jae
cmp
dec
mov
insb
sub
jbe
and
daa
pop
divl
adc
push
dec
rdtsc
add
and
mov
std
ficoms
icebp
sarl
push
lret
mov
stc
and
mov
xchg
xchg
cmp
pop
jne
fwait
inc
xchg
pop
leave
mov
imul
dec
es
and
adc
or
sti
mov
mov
adc
or
sub
mov
pop
fimuls
or
push
inc
push
mov
fcmovnb
or
push
cmpsl
pop
xor
loope
ljmp
inc
sub
mov
or
test
add
add
jae
xchg
add
sbb
outsb
mov
psubusw
jnp
xchg
xchg
in
mov
adc
sub
repz
stos
fisttpll
mov
jle
mov
and
shll
in
and
or
stos
push
mov
adc
cld
mov
cmp
push
or
xchg
push
mov
add
jge
in
imul
lods
inc
add
into
scas
sub
or
bound
movl
add
in
enter
repnz
js
or
xchg
aaa
out
mov
cmp
ficompl
pop
xor
lahf
outsl
push
sub
shrb
loope
bswap
loope
int3
ud0
dec
movsl
dec
aaa
mov
xchg
mov
adc
xchg
loopne
dec
in
cmp
xchg
mov
out
push
push
gs
arpl
fisttpll
mov
sahf
lret
add
decl
or
push
test
shl
daa
mov
xor
sbb
inc
add
inc
xor
and
cmp
js
xchg
sbb
in
ljmp
arpl
leave
adc
sbb
jbe
stc
push
out
inc
push
add
test
sbb
hlt
in
sub
and
xor
mov
adc
push
call
insl
dec
popf
dec
or
clc
and
dec
arpl
stc
jne
jb
sub
clc
jo
jecxz
cmpsl
adc
xchg
sub
les
js
mov
pop
or
mov
lock
icebp
and
add
rcl
xchg
stos
bound
dec
int3
rorb
into
inc
bound
inc
cmpsl
stos
std
mov
or
sub
xchg
les
and
mov
pop
and
out
or
sar
pop
mov
mov
or
mov
fcomps
cmpsl
outsl
mov
out
push
jge
mov
inc
sbb
push
push
xchg
push
xchg
pop
imul
mov
fs
pop
xchg
sbb
add
mov
xchg
bswap
pop
sti
add
lock
xorb
dec
into
jecxz
mov
mov
in
test
mov
test
mov
bound
xchg
sbb
or
scas
mov
sbbb
pop
mov
and
cmp
leave
inc
sahf
repnz
test
cli
jne
mov
lea
add
cmc
movsl
outsb
scas
sub
jbe
cltd
adc
call
fcoml
inc
pop
mov
or
pop
jbe,pn
mov
into
pop
rcrb
sbb
aaa
arpl
mov
test
xor
pop
out
and
pop
repz
dec
clc
mov
loope
pop
lcall
sub
inc
or
fcomps
xor
mov
mov
push
mov
add
lea
out
fstl
ret
insl
mov
bound
ds
push
fmuls
dec
inc
movsl
jecxz
and
pop
jae
or
test
jl
adc
jge
or
and
push
push
jecxz
ljmp
std
sub
aas
mov
jle
mov
daa
add
jno
inc
addb
mov
xchg
imul
testb
loop
fxch
js
mov
inc
push
push
mov
inc
jmp
in
cmpsb
adc
loopne
repz
jmp
xlat
dec
ds
loope
stos
push
xor
mov
inc
inc
cltd
jb
mov
hlt
mov
loop
test
in
sar
ret
fwait
push
sbb
mov
out
inc
data16
pop
loope
push
pop
lds
lahf
mov
stos
jge
cli
rorb
ljmp
bound
cmpsb
ret
push
adc
jle
mov
mov
in
stos
and
int3
arpl
cmp
cmp
push
sti
packsswb
mov
cmp
mov
cmpsb
incb
pop
cmp
loope
dec
es
lcall
adc
imul
stos
cmpsb
fsubrp
lret
jae
or
movsb
jns
mov
mov
add
dec
sub
fwait
mov
jo
sub
push
sub
pop
adc
addr16
xchg
pusha
lods
sub
stos
sbb
ja
lahf
xchg
xchg
lret
imul
mov
aad
daa
ret
jecxz
pop
daa
sub
imul
and
mov
pop
jnp
in
pop
in
mov
jae
shrb
nop
mov
push
lret
iret
inc
xor
xorb
xor
cmc
testb
ficomps
cmp
pop
xor
lcall
es
stos
inc
add
icebp
ror
xchg
daa
mov
int
and
sub
ret
test
inc
jle
xorb
jle,pt
dec
cmp
mov
lods
xchg
jge
fcmovb
imul
and
adc
stc
repnz
jnp
sbb
xchg
push
out
sub
fldt
add
mov
pushf
fbstp
loop
sbb
jnp
out
lret
lock
clc
fstpt
push
cmpsl
xor
movsb
ficomps
xchg
imul
xchg
and
push
flds
cltd
xchg
xchg
mov
or
mov
jmp
in
adc
xorb
lock
mov
out
leave
fdivrl
cmc
int3
add
pusha
mov
mov
movsl
mov
fildll
or
icebp
jmp
pop
fwait
ret
andb
xchg
push
enter
mov
jbe
out
or
nop
cmp
movsl
insb
push
xchg
test
cmp
add
fisubrs
add
and
or
pop
stos
sbb
cmp
stos
lock
mov
push
xchg
push
rol
jbe
push
std
xchg
daa
out
inc
repz
lret
or
sahf
dec
cs
mov
idivl
lea
ret
data16
iret
pop
aaa
notb
gs
sbb
iret
fidivs
pop
mov
mov
ficoms
cmc
push
testl
mov
jle
or
lret
pop
popa
jle
aad
xchg
mov
mov
dec
stos
icebp
push
out
add
push
jae
push
pop
or
pop
and
lock
jnp
data16
jp
sub
movsb
push
sbb
or
push
lock
std
movsl
mov
les
lret
jecxz
jmp
andb
pop
adc
sub
pop
inc
cli
aas
inc
pop
add
hlt
add
arpl
adc
movsl
jl
les
leave
jne
rcrb
ret
mov
call
and
jl
xor
add
mov
or
cmp
cmp
loop
mov
out
jge
adc
scas
cmp
test
bound
out
pop
pop
js
adc
push
imul
jmp
push
enter
or
in
pop
jp
lcall
cs
mov
dec
hlt
leave
sbb
test
push
cmc
outsb
mov
test
lret
call
mov
icebp
mov
cltd
loope
movl
cmp
popa
testl
xchg
lds
inc
test
mov
xor
pop
jg
push
out
ret
dec
imul
jl
fisubs
insl
jmp
movsb
add
push
mov
js
shl
out
subb
lcall
sti
addb
pop
mov
test
mov
add
jno
and
push
jp
aad
shlb
sahf
mov
mov
mov
adc
pop
std
leave
aaa
mov
stos
lock
cmp
stos
cmp
lret
add
out
jle
sbb
fwait
push
sub
lea
ljmp
repnz
ds
in
stos
movsl
sub
cltd
fistl
jnp
stos
pop
adc
mov
jle
bound
push
mov
mov
push
cmp
pop
add
push
scas
mov
sarb
push
mov
pop
mov
mov
or
fidivs
push
xchg
fcoms
xor
dec
in
cmp
add
sbbl
fstp
pop
cmpsb
shll
jl
mov
test
and
enter
rcr
inc
loope
fwait
xlat
jns
in
out
mov
adc
adc
adc
mov
inc
fidivrs
adc
in
es
call
mov
and
aad
push
dec
add
daa
cmp
push
lods
cs
jbe
and
fidivrs
fwait
xchg
cmc
mov
mov
sub
pop
mov
shrl
lods
and
xchg
push
pop
into
xchg
xchg
mov
mov
pop
mov
jecxz
xchg
cmp
outsl
xor
sub
push
mov
jecxz
mov
popa
jbe
mov
mov
lea
das
out
pop
loope
aad
stc
mov
dec
ss
aad
mov
or
fstl
jb
daa
test
sub
and
insl
nop
jecxz
mov
es
mov
and
pop
xor
pop
es
jg
jl
push
leave
push
jae
mov
lret
imul
cwtl
jg
decb
pop
xor
and
ljmp
jecxz
push
in
call
dec
js
mov
rcrl
dec
shll
add
push
add
mov
loop
adc
xchg
xchg
xor
xchg
pop
ljmp
in
sbb
shl
adc
andl
cmpsl
ret
imul
lods
or
jg
outsl
push
sub
push
out
sub
mov
push
mov
leave
clc
mov
push
xchg
jns
dec
cld
ret
jb
xchg
cmp
lods
dec
cmp
mov
in
incl
sub
loopne
adc
push
fdivrs
jno
outsl
daa
jae
adc
lea
lret
sti
dec
mov
das
xor
jns
ret
cmp
mov
push
pop
out
adc
repz
mov
xchg
stc
mov
popf
xchg
and
push
fs
popa
mov
add
arpl
stc
bound
imul
movsl
adc
insb
in
adc
loope
outsl
cmp
push
dec
add
adc
inc
nop
movsb
mov
movsl
xor
push
fmuls
pop
mov
das
push
cmpsb
sub
adc
xchg
push
in
lods
lahf
call
jge
sub
fs
and
mov
pop
add
std
push
mov
sbb
insb
push
jecxz
js
pop
add
imul
inc
repnz
jge
lcall
xchg
sbbb
fsubs
cmp
outsl
in
push
test
mov
roll
add
xorb
cmp
popa
mov
pop
ror
mov
lea
into
mov
into
inc
mov
mov
stos
enter
push
jmp
inc
loop
dec
loop
mov
fwait
jmp
into
cmp
out
mov
push
mov
sbb
or
inc
xchg
xor
sbb
cld
pop
das
daa
subl
push
test
push
shll
or
lcall
les
data16
in
lods
insb
sbb
sub
add
fwait
scas
in
cmp
movsb
in
jnp
sub
test
or
aam
mov
enter
push
push
out
sahf
xacquire
fs
inc
test
jmp
mov
jmp
aad
pop
ficoms
pop
jnp
dec
dec
mov
fwait
cmp
in
hlt
pushf
mov
push
xchg
in
clc
pushf
fisttpll
sbb
js
cmpsb
test
inc
mov
jmp
mov
xchg
lods
dec
clc
call
jp
aad
ret
jmp
cmp
out
jne
mov
and
pop
mov
into
gs
std
fcoml
or
push
call
ja
adc
jecxz
dec
pop
in
outsb
dec
stos
jbe
jne
bnd
ss
inc
cmc
jp
push
or
sbb
movb
push
cmpsl
mull
dec
xor
into
dec
adc
push
gs
icebp
jmp
xchg
push
pop
pop
and
jnp
fdivrl
sahf
subl
icebp
inc
dec
mov
pushf
int
lds
push
mov
or
dec
sub
loopne
out
pop
mov
pop
inc
cmp
lods
lahf
jmp
ja
or
pop
pop
sbb
push
leave
gs
gs
push
dec
sahf
inc
sti
xor
shlb
push
das
insb
pop
and
jl
hlt
stos
addl
cmpsb
sub
push
jns
ss
in
es
or
cmpsb
mov
sbb
cld
out
cmp
dec
hlt
and
in
stos
das
mov
pop
cltd
fisubs
jle
rcll
cmp
in
outsl
outsl
or
fildll
xor
outsl
sub
sub
jmp
rcr
rolb
ljmp
pop
clc
xor
movsb
ret
jne
xchg
xor
stc
sarb
cmp
pop
adc
lock
lods
sub
cmp
popa
dec
mov
jno
mov
push
inc
dec
add
add
test
fadds
xchg
insb
stos
je
mov
ret
cmp
addr16
jge
jo
lock
cmp
movsl
cli
push
pop
jle
stc
arpl
loope
sbb
mov
push
gs
add
sbb
iret
std
jo
jmp
or
aam
sti
ret
add
aad
mov
push
pop
pop
aad
lock
mov
and
add
decl
sub
inc
fs
pop
into
sbb
sbb
cmc
mov
or
adcl
cwtl
rorl
inc
aad
aad
ja
popf
sbb
add
push
xchg
dec
sbb
inc
aaa
or
stos
sbb
dec
inc
bound
daa
xchg
mov
sbb
cwtl
inc
fadds
shlb
jl
repz
push
sbb
add
ficompl
cmpsl
ucomiss
sub
ror
fld
pushf
sub
leave
xor
stos
sahf
jle
repz
mov
loop
push
dec
dec
mov
mov
xor
lret
out
loope
pop
imul
call
cmp
movsl
scas
movb
pop
mov
push
dec
mov
or
lea
mov
sub
adcb
neg
pop
ret
stc
sahf
pop
fmull
popa
aaa
push
fsubl
add
imul
push
scas
enter
mov
shrb
sbb
cmp
cmpsl
xor
call
mov
ret
add
lret
aad
push
cld
repnz
hlt
jo
inc
pusha
adc
movsb
fwait
repz
andb
test
lret
clc
mov
insb
sub
or
and
sbb
movsl
movsb
cwtl
nop
ret
insb
add
aaa
cmp
shlb
loope
mov
xchg
add
sub
mov
mov
mov
mov
jge
xchg
xor
xor
mov
push
imul
inc
fdivs
dec
inc
cmp
sub
xchg
xor
stc
das
fcoms
jbe
adc
in
pop
mov
inc
cli
add
fcoms
sahf
or
daa
jae
enter
push
arpl
shrl
and
ret
enter
in
cltd
push
lret
dec
sub
scas
or
pop
addb
je
insl
jl
mov
mov
add
cmpsb
xchg
js
fwait
test
mov
mov
or
scas
pop
mov
adc
pushf
or
call
lcall
xor
sub
rcr
rcll
into
insl
jo
pop
cmp
leave
sub
sbb
and
in
xchg
mov
sahf
ret
cmp
movsb
mov
imul
push
loop
push
add
xchg
sbbl
push
mov
data16
cli
stc
dec
pop
in
ret
pop
lea
imull
xchg
and
or
mov
mov
cmc
push
add
ret
jne
push
cmp
or
je
out
push
push
mov
mov
mov
xor
std
xlat
mov
test
xchg
or
cltd
add
fiadds
jmp
icebp
je
and
out
scas
ss
loop
jp
sahf
movsb
loope
outsl
ficompl
jne
dec
fstp
mov
adc
xor
and
loopne
lods
add
aaa
xchg
jmp
rcrl
jns
out
pop
ret
mov
xchg
dec
mov
lret
fdivl
push
mov
scas
mov
mov
pop
xchg
mov
dec
mov
fstpt
mov
add
inc
icebp
mov
jge
pop
icebp
les
cmp
or
dec
xor
pusha
add
xchg
idiv
jno
dec
jg
out
lret
into
shl
pop
lret
sti
out
fucomp
ret
je
std
or
push
and
rclb
stos
or
inc
nop
mov
jmp
cmp
test
dec
jle
dec
cmc
mov
enter
jmp
xchg
aaa
adc
bound
movsl
push
mov
and
mov
cmp
dec
xorl
sbb
add
sti
subl
sbb
dec
or
and
adc
sub
inc
vshufps
jnp
test
xor
or
cmp
mov
add
or
mov
xchg
xor
shrb
lods
cld
adc
add
fistpll
push
sub
sub
das
fdivl
jo
push
arpl
cwtl
push
cli
pop
pushf
mov
std
cld
scas
bound
rorl
loop
gs
loopne,pt
out
adc
push
sbbl
add
sbb
std
dec
add
jge
dec
add
in
stos
push
cs
adc
leave
push
jae
xchg
xorl
sti
adc
leave
mov
sbb
out
pop
es
test
fmul
cmpsl
push
lret
mov
jnp
mov
outsl
or
out
test
push
aad
adc
adc
dec
push
loop
add
cmp
jle
jo
out
mov
mov
jge
je
adc
ret
xchg
mov
push
pavgw
xchg
jbe
adc
cmp
test
pop
pop
fists
mov
stos
pop
pop
in
and
push
fisubrs
roll
xchg
cmp
push
push
cmp
jmp
fsubrl
js
negb
adc
cmc
aaa
inc
mov
cmpsb
cmpsb
cmp
and
les
rcl
sub
add
stc
jo
jge
idiv
jae
stc
sbb
in
mov
or
lock
in
and
sbb
mov
and
scas
rcrb
xchg
jl
mov
das
cld
mov
shl
jp
push
mov
shll
test
pushf
or
push
jp
scas
sub
fstps
shrb
mov
xor
push
jle
mov
xor
pop
pop
iret
jecxz
lods
push
lret
cwtl
dec
pop
std
mov
shl
dec
es
xchg
lret
in
inc
pop
jae
cltd
sarb
das
in
add
xor
mov
daa
adc
push
pop
jns
dec
rcr
mov
pop
add
jbe
jl
test
fdivs
sub
or
cwtl
ds
jecxz
in
mov
xchg
push
adc
nop
inc
inc
dec
xchg
sti
aas
lock
adc
sub
cld
push
sbb
mov
pop
sbb
outsb
fistl
mov
pop
fbld
inc
fcoml
mov
mov
test
loop
cmp
gs
cmp
add
xchg
pop
mov
dec
push
pop
scas
sub
or
aaa
mov
shlb
push
and
mov
nop
bound
shr
imul
out
dec
loope
mov
jae
cmpsl
imul
sti
mov
scas
das
adc
insb
jo
outsl
ja
sub
pop
rcr
test
test
loopne
out
adc
pop
adc
aas
add
addb
hlt
stos
dec
mov
add
jecxz
mov
int
jecxz
or
inc
dec
sub
out
xchg
jne
ss
mov
mulb
aam
mov
data16
in
ffree
popf
in
in
push
push
mov
lods
div
mov
xor
stos
inc
xchg
das
repnz
icebp
mov
jecxz
lods
or
mov
mov
data16
ret
fsubl
ret
ds
jg
ret
inc
dec
cmp
sbb
arpl
aas
in
mov
inc
mov
and
push
cmc
lods
rorb
shr
test
push
lcall
sub
rcll
insb
mov
lock
jl
and
in
cmp
notl
mov
pop
test
test
dec
ds
loop
mov
mov
jb
in
adc
loopne
fsts
or
cmpsl
inc
push
adc
mov
adc
mov
je
loopne
inc
push
jp
fidivrl
sbb
test
fbld
out
add
xor
mov
add
push
pop
xor
mov
cmpsl
dec
sarb
stos
lock
mov
inc
out
into
pop
ror
mov
icebp
test
hlt
cmp
fnsave
push
push
pop
xchg
shlb
add
cmp
adcb
push
push
jbe
sub
addr16
xchg
push
out
repnz
xchg
popl
cld
and
jecxz
and
out
outsl
rolb
or
cwtl
aam
adc
rorl
xor
mov
and
aaa
add
or
mov
cmp
or
mov
cmpsb
dec
sub
push
out
sbb
cmp
add
adc
xchg
jne
mov
jg,pt
and
jg
mov
adc
sub
gs
jmp
sti
cmp
mov
stos
dec
mov
adc
mov
pop
insl
ss
icebp
xchg
jno
mov
shr
and
mov
hlt
icebp
xchg
call
jge
in
push
jg
pusha
sbb
push
repz
pop
mov
ficoml
add
ret
leave
pop
lds
dec
rolb
testl
iret
push
sub
push
sbb
jns
in
push
inc
dec
imul
mov
cltd
push
jo
daa
push
or
sub
pop
cli
outsl
bnd
xchg
jmp
xlat
fists
daa
insb
in
outsb
sub
mov
pop
xchg
out
xchg
push
das
fldt
sbb
and
out
cwtl
jp
sbb
cmpsb
test
xchg
or
mov
popf
dec
adc
push
insl
mov
or
fnstenv
stos
mov
cmpl
dec
in
lret
shll
jp
sub
sbb
out
cmp
push
lea
cmp
mov
lods
icebp
dec
shlb
push
pop
les
cli
jns
add
repnz
xchg
imul
jle
addr16
ret
mov
adc
stc
test
push
addr16
push
sub
push
cli
ss
xchg
popa
jmp
inc
jnp
ja
jb
mull
call
shl
push
xlat
insb
jnp
cmp
mov
dec
add
pop
cmp
pop
cmp
pop
cmp
mov
jge
add
lods
jmp
aaa
and
sarl
fdivs
cmp
lret
jg
push
outsl
mov
xor
ljmp
lret
push
mov
je,pt
std
lret
and
in
push
cmp
ja
cltd
jno
insl
sbb
sbb
addr16
call
cli
push
test
mov
es
shll
in
mov
jbe
mov
sbb
dec
mov
aam
punpckhbw
sarl
xor
lods
xlat
mov
mov
faddl
mov
sub
stc
and
sbb
cs
xchg
adc
pop
enter
mov
sahf
jns
enter
add
mov
inc
stc
push
dec
lcall
flds
jge
je
pop
add
scas
pusha
addl
sbb
int
jo
leave
sbb
dec
dec
les
pop
nop
push
or
and
xchg
and
pusha
push
or
outsb
and
lds
out
iret
sub
int3
mov
cmp
sti
iret
leave
aaa
push
mov
pop
push
test
sahf
lds
loop
pop
lcall
ss
xor
inc
loop
push
and
aas
popf
xchg
sbb
and
sbb
lds
sbb
xchg
and
pop
out
cwtl
data16
jge
pop
push
test
cmp
sti
jo
jl
dec
cmp
mov
mov
cltd
or
xchg
xor
shll
out
fildll
lret
push
jle
stos
call
adc
xorb
sub
push
ret
les
push
jle
inc
jns
dec
cmp
pusha
aaa
push
sahf
xchg
popa
add
dec
push
mov
lock
pop
pop
mov
sahf
pop
enter
cmpsb
cmp
dec
cmp
inc
lea
mov
mov
mov
inc
push
fdivrl
pminsw
adc
adc
cs
rorl
aam
xor
pushf
dec
pop
lret
loopne
mov
shr
sub
addr16
outsl
daa
icebp
movsb
in
add
les
ljmp
movsl
xor
mov
and
hlt
int3
inc
adc
jne
cld
sub
push
mov
mov
cmp
in
add
loope
lds
arpl
js
jnp
in
scas
or
xchg
outsb
xor
inc
pop
mov
or
dec
sarl
out
fwait
ss
out
popa
in
fsts
imul
and
pushf
mov
sbbl
or
icebp
add
js
aad
ret
stos
cmp
sarb
cmc
lds
mov
jne
fstp
movsl
out
mov
push
sub
shll
leave
mov
sbb
out
or
sub
jmp
adc
aad
xchg
jecxz
cmpl
or
sbb
insb
dec
test
jl
xchg
mov
dec
dec
mov
mov
scas
inc
int
fstps
data16
jns
adc
pop
sub
and
adc
mov
divl
add
sbb
jecxz
fisubrs
outsb
int
pop
jge
clc
fimull
fs
ja
pop
mov
cmp
sbb
sbb
testl
fdivrl
pavgw
sbb
enter
push
mov
sub
and
cmpsl
mov
jg
inc
loope
sbb
or
iret
fxch
jecxz
shll
gs
fisttpl
js
inc
jmp
call
mov
push
jge
sbb
out
mov
pop
xchg
loope
push
jg
or
mov
add
jle
and
xchg
adc
cli
in
mov
push
adc
test
xor
test
dec
loopne
cmc
cmp
xorl
jae
xchg
push
push
xchg
sar
mov
xchg
pop
cmpsl
sahf
hlt
fnsave
out
and
mov
ds
pushf
and
cwtl
cmc
stos
sub
out
imul
push
jb
shll
sbb
enter
icebp
push
jb
cmp
out
popa
lods
cwtl
idivl
cmp
adc
lahf
adc
or
mov
addr16
shlb
pop
cmp
icebp
test
movsb
int3
decb
jecxz
cmpsl
cmp
aas
test
or
inc
xor
push
insl
xchg
rorl
jge
in
das
movsb
sbb
mov
bound
inc
test
xor
test
lods
sbb
icebp
mov
xor
push
adc
aas
xchg
add
xchg
shrb
sub
mov
xor
jle
fisttps
test
or
push
jp
sub
cmpl
mov
inc
inc
mov
xchg
cld
mov
flds
push
pop
mov
test
and
ror
insl
pusha
mov
and
jns
adc
test
jge
push
loop
mov
movsl
scas
ja
out
ljmp
iret
int3
mov
cmp
pop
sbb
std
sahf
je
mov
push
test
jnp
mov
movsl
inc
fwait
daa
jo
outsb
out
mov
iret
sub
sub
fsubs
xor
stos
scas
lock
inc
aad
jo
xlat
xlat
push
ss
sbb
mov
outsb
jge
rorl
dec
push
ss
ret
rorb
lret
xchg
cmp
mov
jb
fcmovnu
xchg
push
push
adc
cmp
clc
push
mov
repnz
decl
mov
out
mov
es
adc
imull
mov
in
adc
push
js
faddl
mov
dec
inc
inc
xchg
mov
sub
add
outsb
mov
xor
das
scas
orb
cmp
test
mov
cltd
leave
inc
lret
jb
pop
mov
push
inc
out
xchg
sahf
mov
dec
into
rorb
mov
add
xchg
pop
daa
dec
in
lret
shlb
push
bound
sbb
fadds
std
cld
xchg
pop
or
mov
jo
xor
adc
ss
testl
lock
cmp
out
call
inc
outsl
ljmp
lret
negl
fiaddl
ret
and
sub
or
fisubl
adc
int3
sub
mov
jg
orb
jae
pusha
pop
fxch
popa
xor
push
xchg
cmpsb
imul
in
inc
divl
push
aaa
pop
subl
aaa
cltd
dec
std
insb
inc
int3
mov
shlb
mov
fisubs
cmpsl
scas
cli
dec
mov
iret
dec
popf
imul
xchg
pop
and
pop
out
xor
iret
sahf
fs
cmp
and
and
sub
test
das
stc
inc
inc
test
jne
js
nop/reserved
sbb
shrb
or
stos
outsl
mov
stos
popl
ficompl
push
sub
cmc
xchg
pop
sti
inc
test
lock
pop
push
and
xchg
xor
cmp
adc
faddl
mov
lods
and
pop
lods
dec
pop
pop
and
std
inc
stc
andl
inc
rorb
test
int
adc
xchg
test
add
scas
xchg
push
or
les
sbb
lock
ret
test
das
push
mov
xchg
mov
pop
xlat
int3
xor
scas
xor
add
mov
sub
pop
sub
cmpsl
aam
fisttpll
xchg
arpl
push
addr16
jne
xchg
pop
cwtl
loopne
test
jb
fbstp
sub
mov
movsb
xchg
lret
xchg
sub
mov
mov
fldt
lods
cmc
xor
push
sbb
push
ss
cwtl
lock
inc
jecxz
js
repz
test
fs
lods
xchg
mov
add
arpl
dec
and
dec
mov
lret
test
lea
lahf
cmp
pop
jecxz
gs
lret
cmp
rcll
int
add
pop
adc
sub
clc
push
inc
stos
dec
mov
push
mov
ja
out
in
test
cmp
and
adcl
push
lahf
fsubs
xor
rcrb
test
mov
cmp
adc
aas
out
jmp
stc
sbb
cltd
out
insb
flds
pop
jmp
cmp
xor
mov
shll
popf
jb
mov
shlb
popf
rcrb
neg
adc
je
mov
cmp
cmp
and
lock
ret
shlb
sub
test
cmpsl
pop
push
add
jge
cmp
aaa
rcrb
dec
push
mov
sbb
aaa
jo
popa
sarb
mov
xchg
loope
repnz
sbb
sub
sahf
addr16
ret
cmpsl
in
xchg
push
sub
mov
cmpsl
stc
pop
fucom
ljmp
push
mov
ficompl
xor
xchg
es
adc
pop
shll
and
loop
and
mov
test
sbb
cli
mov
xorb
xor
ficoms
sahf
mov
mov
bound
adc
mov
ret
fimuls
rorl
ret
clc
mov
fstpl
hlt
inc
jb
dec
fdivrs
jb
pop
andb
jecxz
or
cmp
fsts
sti
mov
popa
scas
jnp
xor
popf
fimuls
out
jo
xchg
fsts
shr
adc
and
mov
mov
test
xor
popf
movsl
cmpsb
push
out
pop
cmp
out
add
cwtl
or
clc
or
mov
xlat
mov
and
sarb
arpl
inc
push
sbb
imul
push
xor
mov
cmpsb
ss
jae
xchg
imul
mov
aaa
in
es
push
pop
sbb
cmpsb
out
cmp
jb
add
or
add
aaa
mov
pusha
inc
or
sbb
sbb
icebp
fidivrs
out
cmp
scas
pop
mov
popa
cmp
fadds
inc
ds
dec
push
sbb
xor
out
test
cmp
divb
jp
sub
sbb
push
dec
xchg
jne
and
jg
adc
jg
shl
pop
and
sbb
inc
outsb
aam
fwait
xor
clc
jle
loope
sti
orb
in
sbb
imul
scas
pop
sub
jmp
dec
and
rcr
iret
popa
or
sub
adc
fnstsw
out
shrl
mov
mov
push
sub
imul
jbe
fdivl
repnz
test
inc
aad
imull
mov
popf
and
test
xchg
jns
mov
data16
push
fadds
pop
mov
inc
add
or
sbb
cmpsb
push
push
int
inc
pushf
addr16
test
lock
stos
jle
push
rclb
adc
fsubrp
loope
mov
push
outsl
xlat
imul
xchg
pushf
popa
jge
lods
inc
std
repnz
fistpll
dec
fsubs
sbb
hlt
cmp
lea
adc
int3
adc
cmp
and
or
mov
insb
jmp
xchg
jmp
mov
pop
cmp
push
cmp
adc
in
mov
andl
lret
rcrl
jecxz
clc
sbb
cmp
sahf
popa
inc
dec
test
jbe
pop
cld
int3
mov
flds
sbb
and
cmpsl
push
jb
dec
js
and
sbb
sub
insl
sbb
cmc
in
mov
mov
push
dec
fcmove
cmpsl
pop
rolb
loop
add
jae
cli
sbb
jns
bnd
xlat
add
stc
je
into
jg
sub
sub
ret
test
outsl
mov
inc
mov
cli
inc
frstor
add
jo
push
mov
sub
ret
test
sub
mov
popf
mov
sub
test
and
and
or
outsb
adc
das
dec
xchg
jge
jmp
xchg
jne
sub
out
lret
push
fsubs
lods
sbb
sbb
pop
mov
outsl
jno
sbb
insb
clc
rcll
test
aad
aas
bound
cmp
jo
xchg
sbb
minps
les
loopne
cmp
subb
pop
dec
ret
loop
clc
push
shl
xor
lret
xchg
xchg
cmp
pop
in
popf
das
adc
adc
xlat
adc
dec
xchg
mov
bsf
mov
dec
jns
into
or
or
push
xor
leave
std
dec
inc
cwtl
or
pop
pop
push
cwtl
mov
sbb
imul
pop
imul
incb
dec
and
xchg
mov
mov
mov
xor
adc
enter
pop
add
inc
sbb
add
lods
icebp
shrl
imul
mov
imul
sub
pushf
pop
ret
pop
mov
push
xchg
movsl
in
imul
sub
ret
out
xchg
popa
cmc
inc
loope
jae
movsl
cmp
andl
xor
xchg
pusha
sti
cmc
pop
sub
xor
sub
ljmp
xlat
inc
jnp
push
pop
sbb
lds
or
xchg
jge
scas
cmpsl
pop
test
mov
push
fisubl
cmp
add
cmpsl
adc
dec
lret
xchg
sub
cmp
cmp
xchg
cmp
sti
faddl
je
int
adc
fst
mov
or
shlb
ss
ljmp
lods
xchg
cmpsl
mov
enter
stc
sbb
lret
ret
sub
mov
mov
sub
pop
jns
fstl
and
mov
lock
fldl
leave
add
leave
and
dec
xlat
push
iret
and
sub
add
enter
das
dec
add
jbe
ret
ret
fdiv
mov
sbb
imul
daa
xchg
das
push
jg
cmc
in
fisttps
inc
loope
loopne
xchg
mov
pop
xchg
xor
mov
loop
xchg
daa
pop
add
mov
pushf
pop
rolb
scas
nop
inc
repnz
insl
in
mov
or
pop
je
popa
cmc
leave
test
dec
mov
pop
jnp
int3
jnp
xchg
mov
and
icebp
xor
lcall
add
fsubrs
in
inc
or
xor
aaa
mov
inc
xorb
out
scas
adcl
inc
int3
ss
insb
jl
push
lea
lahf
cld
jae
or
jecxz
push
ret
sub
push
jo
cld
lret
pop
hlt
sub
ret
and
lds
push
mov
mov
xor
aam
inc
inc
sbbl
roll
mov
test
pop
enter
loope
or
jo
fstpl
fs
andl
mov
setg
jle
push
dec
mov
repz
jnp
push
aam
mov
jo
cli
mov
mov
movsl
push
add
inc
out
push
push
jns
es
imul
out
btr
test
pop
cmp
adc
dec
sbb
add
in
int3
cmp
jns
shll
loop
stc
jnp
sti
pusha
test
out
shlb
cli
testb
cs
cmpsl
mov
push
repz
loopne
into
popf
xor
mov
sbb
sub
lock
xor
cmc
mov
or
push
addb
out
mov
jmp
in
sub
cltd
test
sub
insb
icebp
adc
in
pop
stc
mov
fadd
push
sbb
stos
js
inc
int
cmp
xor
lods
int3
adc
lds
pop
test
ret
cltd
leave
pusha
test
sub
pop
push
sub
sub
cmpsb
pusha
xchg
lods
inc
inc
mov
or
ror
push
fcompl
dec
shrb
jp
ror
int3
loopne
push
jmp
pop
sahf
cmp
push
cmp
jge
movsl
sub
fstpt
mov
pushf
dec
inc
sti
add
sub
in
xchg
jle
mov
mov
lcall
sarl
movsb
das
push
or
pop
adc
mov
subb
jecxz
insb
out
out
xor
inc
in
pop
ret
repz
push
mov
popf
popa
jge
nop
inc
movsl
ds
pusha
outsb
sub
mov
mov
xchg
aam
sarl
sbb
sarl
push
xchg
cwtl
sub
or
cmp
aaa
and
sbb
jno
xor
and
cld
fisubs
or
hlt
ds
lcall
ljmp
jmp
cli
add
jns
fdivrs
xchg
and
inc
xchg
xchg
push
repnz
mov
pusha
sbbl
lea
clc
insb
adc
add
sub
and
leave
cmpsb
mov
or
dec
mov
push
cli
push
xchg
xchg
mov
movntps
shr
sbb
cmc
repnz
dec
dec
mov
inc
pop
push
mov
push
adc
sub
sahf
mov
jo
push
je
stos
mov
inc
and
adc
mov
jmp
mov
sbb
insb
and
sbb
inc
push
bound
sub
fsubl
repz
insl
cmp
inc
xor
cmpsb
test
pop
in
scas
add
int3
dec
mov
mov
js
xor
les
push
in
adc
lret
and
ja
pop
push
adc
lret
imul
out
notb
jmp
shlb
xchg
push
in
mov
orb
imul
push
dec
push
mov
sub
or
sti
dec
xor
dec
addr16
cmp
pop
lods
and
sbb
xchg
gs
sub
or
jge
sbb
shll
addr16
lahf
fst
xor
mov
lods
dec
mov
push
xchg
mov
mov
mov
pushf
shr
jg
fmul
mov
add
mov
in
bound
cmpsl
movsl
mov
inc
popf
out
cli
outsb
gs
mov
lahf
pop
pop
js
rcll
mov
sub
and
insl
or
add
outsl
mov
mov
jno
jmp
test
adc
push
pusha
shlb
shl
cmpsb
stos
cli
iret
shrl
mov
inc
leave
adc
icebp
test
jmp
dec
cmpsb
push
ret
repnz
cmpl
dec
push
inc
fstpl
pop
push
in
call
adc
xor
mov
cmp
ja
xchg
mov
add
push
pop
xorb
xchg
ljmp
cmpsl
inc
cld
push
pop
sub
cmp
dec
jmp
pop
mov
sub
int3
xchg
rcl
outsl
je
repz
jae
mov
xor
int3
call
arpl
sbb
adcb
or
repnz
ja
pop
mov
stos
fwait
aam
jbe
fldcw
stos
mov
psubq
xor
sub
pop
out
dec
lods
es
ret
arpl
jp
mov
mov
push
adc
xor
stc
js
add
pop
jb
decb
jnp
int3
dec
cltd
lcall
sbb
fldenv
sub
pop
in
pusha
in
jl
cmpl
sbb
aad
movsl
std
or
movb
in
hlt
fsubrs
repz
int
sbb
stos
xchg
push
rolb
pop
in
in
or
lock
sbb
xor
adc
xchg
cltd
les
sbb
xor
or
jnp
xchg
jo
mov
jbe
orl
jmp
pop
pushf
mov
in
bound
loopne
or
sub
inc
mov
notl
shr
xor
sub
scas
int3
lock
sti
inc
outsl
xchg
jb
movsl
mov
push
pop
sbb
cmp
iret
xor
mov
sahf
cld
xor
fistl
ret
mov
mov
addr16
push
mov
std
add
xlat
popf
dec
push
pop
out
adc
rol
xlat
insl
adc
jnp
subl
xor
xor
pop
mov
xlat
mov
rcl
jae
inc
add
mull
adc
xchg
mov
mov
call
fimull
inc
cltd
or
cmc
add
xchg
sub
scas
mov
jbe
adc
call
mov
jo
mov
mov
in
xor
push
jo
rclb
jl
pusha
orb
or
sahf
int3
cltd
xchg
pop
adc
fs
sub
ss
cwtl
push
pop
inc
jl
loopne
mov
lret
cmp
mov
scas
add
pop
mov
xchg
inc
das
xchg
rcll
xor
pmuludq
aam
xlat
xchg
jg
punpckhwd
jnp
je
xlat
frstor
jg
pop
and
add
jecxz
cmpsl
sbb
inc
inc
xchg
push
sub
js
pop
roll
push
ret
cmp
jecxz
mov
insl
lock
data16
jge
jne
mov
mov
adc
data16
push
lock
sub
push
mov
cs
std
mov
pop
sbb
sub
mov
dec
push
out
arpl
mov
fnstcw
cmpsb
adc
addb
and
inc
dec
fwait
xchg
mov
pusha
or
rolb
lret
xchg
das
cs
cmpsl
or
divl
ss
or
in
push
mov
adc
jb
shlb
adc
ret
cmc
dec
cmp
jns
sbb
push
cld
pushl
xchg
sub
push
addb
stos
xlat
mov
mov
cld
cmp
stos
xor
jbe
xlat
loopne
or
pushf
xchg
mov
and
into
test
mov
adc
rcrb
jmp
stc
pop
neg
mov
jecxz
mov
push
push
pop
lock
cmp
ljmp
test
es
jle
jecxz
daa
pop
movsl
pop
mov
cmp
inc
bound
int
jecxz
loop
fld
inc
mov
mov
pop
popa
icebp
into
bswap
ljmp
sti
mov
cld
and
or
cmpsl
inc
adc
push
aam
int3
das
jmp
aad
sub
cmp
inc
enter
jecxz
jle
mov
cmpsb
ret
pop
xchg
sub
sub
jns
push
adc
pop
test
jle
sbb
stos
push
xlat
xchg
aas
orb
enter
or
mov
sbb
jmp
xchg
inc
adc
es
dec
mov
int3
cmp
sbb
lcall
popa
inc
push
inc
aam
mov
rorb
push
iret
mov
loope
repz
push
lods
mov
or
jle
inc
fidivs
push
test
jmp
cmp
movsb
or
push
push
cmp
bound
imul
mov
add
fcmovu
xor
xor
dec
adc
jecxz
inc
repnz
push
lret
push
cmp
pop
les
mov
loope
mov
outsl
mov
push
movsb
mov
xchg
stc
mov
cmc
ljmp
or
push
test
jo
jp
outsb
rcrl
hlt
mov
jge
add
add
inc
sbb
jl
jl
push
mov
in
sbb
pop
xchg
sbb
inc
adc
shll
dec
rolb
aaa
pop
inc
stc
and
mov
mov
mov
xchg
in
test
jbe
sub
xlat
imul
push
sbb
int
adc
std
outsl
jns
cli
push
cmpsl
stos
xor
cmp
lahf
in
xchg
xor
mov
pop
in
pusha
push
xor
mov
pushf
clc
or
ret
adc
sub
rcll
fwait
inc
adc
lods
and
jmp
xchg
adc
inc
dec
lock
sub
dec
xlat
push
push
or
not
cmpsb
dec
pushf
jmp
adc
in
fiadds
jnp
or
sbb
jp
jo
clc
arpl
pop
outsb
adc
mov
pushf
outsl
rol
xchg
jae
orl
push
sbb
inc
ljmp
sub
mov
adc
cmpsb
stc
xchg
not
test
dec
mov
and
sub
loope
sub
daa
mov
in
push
roll
add
jns
ljmp
loope
sbb
pop
in
call
push
and
ret
gs
push
iret
out
inc
adc
fisttpll
rcrl
ljmp
fcompl
mov
nop
fcomps
push
into
mov
pop
push
sub
les
mov
push
add
imul
movsl
cmp
inc
repnz
xlat
cmpsl
push
inc
inc
add
jmp
lods
notb
lods
ljmp
adc
ja
aam
cmp
mov
mov
sbb
lcall
xchg
xor
insl
fadd
jge
xor
cld
sbb
fistl
pusha
jmp
and
hlt
stos
aas
scas
mov
clc
xor
sub
test
fldt
push
adc
mov
and
mov
cmp
push
gs
add
ja
adc
mov
dec
mov
dec
inc
xchg
push
popa
adc
push
insb
mov
fs
sub
sub
dec
sbb
fwait
pushw
lahf
into
mov
cli
jo
stos
and
sub
leave
mov
leave
pushf
sub
jle
ffree
fidivs
mov
push
jge
push
jb
add
pop
sub
or
in
aam
pop
flds
ds
or
call
je,pt
cmp
pop
pop
aas
mov
mov
mov
sub
adc
pop
sub
lea
in
sub
inc
je
frstor
lea
adc
mov
aad
out
mov
daa
or
bound
dec
push
mov
aaa
jb
mov
and
sbb
out
sub
subb
dec
or
push
cld
push
seta
inc
push
push
outsl
fnstcw
ds
mov
enter
cmpsb
pusha
mov
mov
xchg
mov
mov
xchg
jo
or
test
cld
divb
jl
push
push
sub
cmp
mov
les
add
dec
cli
ja
mov
dec
push
jae
into
movsb
gs
call
adc
movsb
dec
icebp
aam
daa
rcll
sbb
cmp
inc
inc
shl
test
jae
cs
cmpsl
mov
sbb
jo
loope
out
js
adc
fnstsw
push
cmc
jno
or
dec
fs
mov
ret
cld
sti
aad
jecxz
jne
sbb
push
in
sti
sbb
out
loop
and
aaa
incb
adc
or
test
into
rep
mov
jmp
ja
int3
jo
jecxz
xor
popa
dec
in
out
and
sti
int
mov
arpl
fnstenv
int3
aas
mov
jl
pop
pusha
out
jle
pushf
lcall
xchg
xor
adc
dec
mov
push
adc
movsl
xor
pop
out
bound
lahf
cltd
sub
cmp
loopne
out
xchg
pop
outsb
ror
out
add
inc
pop
fildll
aam
push
nop
push
adc
sub
sti
loopne
jns
push
pop
sarb
insl
mov
ja
push
movsb
pop
pop
scas
jns
xchg
mov
pop
jge
push
jns
fbld
pop
inc
lahf
sahf
sti
cmp
inc
ss
scas
fiadds
or
mov
xchg
adc
call
pop
sub
test
js
xchg
sti
mov
scas
iret
add
xchg
in
dec
jne
inc
push
inc
pop
xchg
jle
pusha
sbb
mov
push
mov
mov
mov
outsb
jg
push
pop
mov
inc
mov
dec
incb
leave
add
loop
dec
push
mov
mov
shl
or
mov
pusha
loope
insb
mov
xchg
push
fisubrl
imull
mov
jb
cltd
ljmp
cmc
cltd
out
add
aaa
imul
lret
stc
inc
jnp
pop
cmp
out
xor
adc
pop
addr16
sti
dec
mov
inc
jne
pop
push
fisubs
xchg
adc
movsb
inc
fidivrs
lods
imul
add
xchg
jbe
test
movsl
cmp
add
push
sub
add
ficoml
jge
xor
cld
jnp
into
mov
jns
lea
rclb
sub
mov
fidivrs
int
inc
lods
ss
push
inc
adc
inc
mov
push
jnp
int3
xlat
out
xchg
aaa
inc
sub
loop
popf
cld
lds
jecxz
mov
insb
mov
inc
ret
or
pop
scas
pop
movsl
inc
ret
pop
add
mov
dec
inc
push
int
arpl
mov
sbb
fimuls
cli
push
enter
inc
stos
jns
jle
inc
jae
pop
mov
pop
pop
insb
call
push
daa
and
xor
dec
iret
lods
lret
loope
in
xor
jb
test
in
pop
pop
adc
daa
pop
xor
xchg
push
bound
adc
shll
and
into
xchg
std
rcrl
nop
fwait
seto
addr16
cmpsb
lcall
add
in
sbb
stc
cmpl
repnz
jbe
in
insb
and
out
daa
push
lret
and
jne
push
cwtl
sbb
inc
pop
push
jl
sti
jne
imul
movsb
adc
scas
cmp
inc
lret
push
xchg
mov
sub
stos
fs
mov
ror
popa
cltd
cs
add
nop
jl
mov
push
test
lret
arpl
lock
sbb
mov
jp
ss
dec
mov
or
mov
sub
cmc
sbb
push
jne
dec
push
add
mov
dec
jb
dec
xlat
mov
jne
decl
jo
and
jae
sbb
mov
cld
out
clc
ljmp
es
loop
adc
jmp
push
mov
cmc
dec
ret
cmp
dec
ror
inc
out
sub
data16
fildl
sbb
or
inc
inc
imul
loopnew
mov
xchg
movsb
loopne
dec
sbb
mov
popf
aam
cmp
cmp
rorb
mov
mov
xchg
loope
push
lcall
gs
jbe
aam
sub
pop
mov
shrl
outsl
xchg
lret
notb
mov
inc
int
in
mov
in
sub
fwait
lds
xchg
sub
dec
int3
out
jbe
mov
repnz
mov
cltd
enter
mov
cmpsb
xor
movsl
mov
enter
push
mov
ret
enter
pop
std
mov
xor
push
jecxz
shrb
and
incb
adc
mov
sbb
mov
mov
xor
mov
mov
addb
addr16
cltd
cmp
dec
mov
fwait
pop
stos
repnz
aas
pop
sub
call
sub
js
push
or
sar
jecxz
xchg
ljmp
std
cli
mov
and
push
sbb
les
aam
int
cld
sbb
test
test
bnd
test
dec
enter
sbbl
pop
adc
xchg
das
push
std
outsb
lea
mov
scas
outsl
fs
rol
bound
and
fstl
and
sbb
iret
int3
mov
jns
xchg
loope
cmp
mov
cmp
mov
psubd
xchg
pop
jg
jb
adc
addr16
lahf
push
dec
int3
adc
adc
sub
xchg
shlb
adcl
or
hlt
sahf
sub
cmp
push
ja
cwtl
aaa
cmpsb
aam
pop
testl
jne
jp
sbb
jne
xchg
hlt
nop
cld
lds
inc
punpckhwd
add
clc
mov
movsl
sbb
and
or
cmp
sahf
mov
icebp
fcompl
push
mov
xchg
jo
mov
ljmp
inc
adc
repz
sbb
insl
cmp
push
push
or
mov
add
sti
out
jne
and
test
push
mov
shrl
sub
xchg
iret
mov
sbb
push
fsubrl
pop
adc
inc
cmp
add
stos
mov
add
pop
adc
jns
push
jno
sbb
sbb
test
shrl
dec
repnz
lcall
cwtl
mov
cmc
pop
jg
lea
rcrb
iret
xchg
inc
adc
add
or
jg
xor
push
cmp
xor
loop
dec
pop
xor
call
ljmp
inc
not
enter
cmp
lahf
xor
or
fneni(8087
cmp
jno
mov
out
inc
add
loop
cmp
rol
push
pop
sti
in
iret
pop
cmp
vdivsd
mov
mov
sub
stos
or
addl
inc
jg
jo
les
stos
mov
and
call
dec
sbb
rol
ret
xchg
cmp
jle
pop
mov
sub
mov
dec
cmp
sbb
test
or
sbb
mov
inc
std
aas
lea
ret
dec
sub
adc
mov
xchg
xchg
xor
jmp
jge
ret
pop
pusha
jns
jbe
adc
jae
adc
sub
mov
fistl
or
dec
adc
and
imul
mov
loop
sub
and
push
jno
sti
jg
lods
xor
in
cmp
adc
xchg
repnz
imul
pop
int
lods
dec
pop
cmpl
lahf
sbb
sti
imul
cltd
cmp
push
jg
test
xchg
and
out
dec
psubusw
adc
sbb
scas
pop
mov
repnz
cmp
call
jg
js
jns
mov
mov
xchg
sub
dec
xchg
es
jae
push
lock
pushf
pushf
adc
fisubs
dec
push
pop
mov
adc
dec
sbb
push
push
jmp
pop
adc
xor
cmp
cmp
aam
in
aam
xor
mov
ret
loopne
loopne
jae
outsb
xor
scas
mov
arpl
dec
cmc
dec
pop
js
mov
ret
jae
mov
lcall
lcall
sbb
testl
into
sub
mov
stos
enter
mov
push
js
aam
andl
fiaddl
incl
add
xor
mov
adc
inc
ljmp
cli
push
imul
mov
adc
fidivs
adcl
mov
pop
sbb
and
shll
lods
lods
insb
cmp
pop
mov
inc
xor
dec
inc
sbb
popf
nop
mov
ds
sbb
add
leave
inc
jns
mov
inc
jmp
pop
clc
xlat
mov
inc
pinsrw
push
mov
cli
mov
mov
inc
sti
cmp
mov
inc
lcall
inc
xchg
mov
xor
lret
stos
adc
sbb
lock
mull
xor
loope
outsb
arpl
inc
or
lcall
sbb
in
xor
gs
pop
js
in
jnp
jle
icebp
scas
xchg
inc
es
xchg
xchg
pop
xor
enter
sti
fisubl
pop
out
xchg
ljmp
adc
es
call
std
iret
cmp
stos
call
cmp
cmp
sti
and
leave
cmp
cmp
adc
dec
sbb
scas
test
add
loope
lret
sub
sbb
cs
mov
pop
or
bound
add
add
mov
jge
inc
sbb
jae
xor
sub
cltd
jge
inc
push
das
icebp
ds
clc
pop
jb
xchg
rclb
add
xor
cmpsb
cmp
adc
not
pop
leave
sbb
loop
dec
or
mov
or
int
fs
xor
int3
jbe
xor
imul
js
movl
cmp
jmp
xchg
fstps
adc
int3
in
out
pop
add
lds
rclb
or
mov
push
mov
divb
cmp
test
decl
cld
fsts
add
pop
mov
out
mov
jp
roll
mov
mov
sbb
lea
mov
mov
ljmp
loope
ljmp
jp
push
pop
sub
ljmp
pop
push
adc
xchg
enter
or
pop
cmc
je
xchg
js
inc
mov
adc
jle
lods
xchg
rcrb
movsl
push
pop
stos
pop
sbb
xor
dec
push
dec
mov
icebp
cmp
mov
pop
inc
sbb
push
jns
sbb
mov
sbb
and
cmp
dec
ret
insl
rcr
insl
addr16
cltd
scas
mov
les
sub
cmpsl
adc
jnp
aad
push
xchg
scas
mov
lret
ret
loopne
loopne
jno
push
mov
mov
xor
sbb
adc
imul
shlb
in
stos
add
and
pushf
or
dec
movsl
loope
adc
subb
add
mov
cmp
aam
or
jno
mov
lea
lret
faddl
jns
mov
fs
out
xchg
repz
bound
cwtl
daa
jo
sub
push
push
out
scas
jmp
stos
pop
jge
sub
out
cmp
mov
movl
jo
test
mov
pop
fcompl
gs
add
rolb
insb
cmp
mov
in
insb
push
std
int
sbb
push
xchg
add
and
sub
aam
dec
adc
push
out
add
test
repnz
cs
sbb
cli
test
add
or
repz
stos
insl
jg
les
pop
mov
mov
loopne
add
jl
cld
ret
or
xlat
pop
mull
sarl
jle
xchg
cmp
mov
lret
cli
aad
cmp
call
adc
inc
imul
adc
scas
mov
jp
repnz
rorb
sub
insb
jmp
mov
test
adc
jp
jno
adc
push
or
inc
cmp
cld
fists
push
adc
pop
dec
test
ret
fstps
add
xchg
inc
xchg
xor
aas
xor
xchg
outsl
fwait
mov
rorl
mov
pop
jl
jmp
out
mov
adc
imul
pop
je
adc
movsl
xchg
stos
or
vpmaddwd
ficompl
lds
sbb
sub
loopne
popa
cmp
pop
insl
pop
pop
scas
cmp
pop
dec
shlb
enter
mov
adc
cwtl
sub
test
mov
pop
lahf
rorb
or
adc
cmp
movsb
mov
addr16
loope
push
dec
inc
fwait
lret
std
shl
sub
add
push
push
pop
jb
outsl
lods
stos
xor
fstl
xchg
stc
fdiv
fnstsw
adc
cltd
push
mov
jnp
pop
fwait
sbb
sbb
xchg
jo
lods
or
jbe
mov
inc
inc
loope
roll
fistl
cltd
and
cmpsb
test
sbb
nop
push
sub
aam
adc
jecxz
xor
adc
rclb
repnz
in
inc
mov
mov
cmpsl
repz
insb
jg
cmp
or
shr
xchg
mov
add
hlt
out
loope
adcl
popf
loop
inc
stos
adc
push
pop
lea
test
ds
aad
inc
enter
cmc
pop
mov
mov
in
push
push
xchg
mov
mov
test
xor
insl
aas
jmp
jns
sbbb
fisttps
daa
xchg
cld
adc
or
sbb
cmpsb
lea
push
out
in
insb
jmp
push
jp
movsb
arpl
loopne
out
dec
push
xor
or
pop
out
cmp
sub
repnz
add
cltd
sbbl
repz
leave
add
xchg
xor
mov
out
fstpl
loopne
mov
scas
mov
xor
jmp
xchg
xchg
sarl
adc
inc
cmpsl
jp
mov
mov
and
testb
push
testl
lahf
nop
sbb
cmc
cmp
shll
scas
adc
xor
ss
rcl
mov
mov
fists
or
and
pop
adc
sbb
mov
std
dec
aad
jecxz
push
sbb
jo
inc
repz
push
jae
in
mov
lods
cltd
in
cmc
test
jge
sbb
call
jnp
fistpl
out
ljmp
jg
dec
dec
cli
pop
or
push
int3
xchg
sbb
outsb
cmpsl
fdivs
xchg
in
fs
cmc
pop
orl
inc
imul
frstor
or
fisubs
push
sbb
fwait
mov
push
and
pop
jbe
mov
mov
call
xor
jo
sub
add
push
pop
cwtl
sub
lret
adc
stos
pop
pop
push
mov
pop
inc
into
into
in
cwtl
jnp
imul
sti
ret
enter
sbb
aas
mov
lahf
xchg
inc
mov
add
sbb
incb
jmp
nop
adc
repnz
push
sbb
cld
xor
movzwl
es
sbb
loopne
and
testb
jge
insl
inc
and
cmp
idivb
xlat
cmp
hlt
sbb
and
insl
aas
push
lods
jne
ljmp
or
add
mov
test
std
int
or
sub
xchg
or
scas
add
cmp
mov
xor
cmp
mov
push
shlb
adc
loop
das
mov
outsl
ret
push
mov
fidivl
lods
or
pop
out
jnp
adc
mov
mov
inc
loop
xor
filds
push
sbb
jmp
dec
mov
pop
cmpsl
xchg
inc
nop
and
cmp
dec
repnz
and
jae
call
js
ja
and
repnz
aad
std
in
ds
or
push
jg
mov
outsl
mov
in
pop
push
fistl
and
int3
sahf
ret
xchg
push
dec
cmp
xchg
test
fwait
mov
fs
add
cwtl
xchg
pop
test
add
data16
cltd
xchg
fs
xlat
mov
es
shlb
in
ja
sbb
test
sub
push
mov
and
inc
sub
inc
das
mov
mov
pop
and
pusha
aad
xor
push
fimuls
xchg
cmc
outsl
mov
mov
push
push
cmpsl
mov
mov
push
ds
inc
pop
pop
into
mov
and
fdivs
ja
ficoml
cmpl
pop
shr
jns
push
inc
rcll
cli
inc
loopne
mov
clc
js
mov
inc
imul
out
cmp
xor
and
add
xor
stc
shll
popf
loopne
pop
pop
fidivrs
enter
mov
sub
flds
pop
mov
and
push
sub
mov
inc
sahf
or
fidivrs
ljmp
adcl
fistpll
adc
ss
rcrl
jne
inc
imul
xchg
add
inc
clc
add
push
fcomip
or
xor
es
mov
les
or
popa
mov
jmp
cltd
xchg
pop
mov
ret
popa
sub
sub
stos
popf
or
push
dec
or
mov
sub
and
cmp
popf
mov
xchg
mov
dec
pop
mov
add
lock
gs
and
daa
jge
mov
sub
rcrl
cs
sti
fucom
add
and
cs
add
flds
fcmovnb
out
xor
push
rcrl
push
xchg
stos
sbb
mov
xchg
imul
inc
cmp
out
inc
rcll
iret
loop
test
iret
clc
pop
and
mov
shll
cmp
mov
mov
mov
aam
jmp
or
or
mov
popa
sbb
fisubrl
aad
js
mov
mov
fcomip
pop
enter
mov
ljmp
inc
pop
ffreep
js
aam
repnz
pop
mov
pop
rcrb
mov
in
scas
dec
pop
adcb
loopne
mov
popf
sub
dec
jno
mov
mov
ljmp
adc
aam
or
dec
and
dec
lock
cmp
dec
fwait
divb
out
dec
sti
inc
mov
mov
xchg
in
les
pop
mov
mov
xchg
dec
jne
mov
mov
faddp
lcall
xor
push
mov
leave
lret
pop
adc
sbb
out
inc
pop
scas
cld
lods
mov
sbb
movsl
mov
mov
shlb
aaa
jbe
push
jge
xchg
xchg
dec
pop
nop
out
mov
mov
push
push
div
jb
mov
xchg
adc
or
lods
push
pop
push
mov
sahf
mov
add
sahf
aas
jbe
pop
ror
in
sbb
mov
xchg
or
sub
dec
icebp
mov
dec
add
sahf
mov
or
mov
imul
or
pop
push
pushf
add
fists
into
xchg
int
test
pushf
mov
pop
icebp
into
and
lds
rorb
pop
sub
xlat
arpl
fnstcw
push
jp
push
adc
out
cmp
push
in
xor
cltd
imul
loop
dec
lock
dec
xor
sbb
cmp
or
inc
movsl
mov
mov
popa
stos
aad
mov
jae
fdiv
pop
mov
lock
sbb
cmpsb
inc
fiadds
fidivs
mov
mov
pop
stos
sti
sbb
lea
popa
inc
pop
insl
nop
mov
ljmp
xor
xor
int3
cmp
sub
jp
mov
add
mov
jae
movsb
mov
fistps
inc
xor
jo
ja
stc
loopne
mov
pop
adc
testb
cld
mov
fstp
add
into
push
lods
scas
leave
cwtl
mov
xor
ficompl
loope
push
xchg
popf
sti
daa
cmp
cmpsb
ficompl
dec
fdivl
push
aad
dec
pop
loopne
dec
andb
cli
movl
mulps
push
xor
aad
test
mov
sbb
and
ret
insl
pop
dec
cltd
insb
mov
fnstsw
fldcw
stos
push
ficompl
pop
std
mov
scas
std
mov
inc
aas
xor
add
mov
mov
in
cmp
and
jmp
insb
inc
fildl
xor
addl
into
pusha
sub
dec
jl
pusha
sbb
pop
xchg
jecxz
test
repz
add
cmp
mov
jge
jbe
lock
mov
mov
addb
iret
xchg
push
ss
subb
in
mov
out
rcll
pop
xchg
cld
pop
into
add
in
jl
or
jae
mov
std
adcb
push
mov
dec
sub
in
imul
dec
int
scas
mov
out
lea
loop
aad
rorl
and
imul
adc
js
cwtl
cmp
fnstcw
mov
inc
mov
loope
jp
lds
mov
test
cltd
repnz
xorl
imul
xchg
rcr
aad
xchg
inc
out
ja
xchg
fs
icebp
push
dec
cmp
jbe
push
jle
or
adc
sbb
jmp
cmovle
pop
push
mov
cmp
fsts
jbe
push
add
and
fimull
popa
fmulp
cmp
popf
or
push
pusha
mov
enter
inc
xchg
xor
mov
dec
jo
xor
stc
push
xchg
xchg
sub
mov
sub
ss
mov
pop
in
pop
mov
fcomps
jns
das
iret
and
push
cld
ljmp
das
xchg
flds
lcall
pushl
int3
push
sub
push
mov
mov
dec
aam
or
push
inc
mov
mov
lcall
loope
dec
out
sbb
inc
ljmp
and
pop
lret
cmp
mov
adc
icebp
add
and
repz
dec
sub
enter
fidivl
xor
mov
aas
fdivs
dec
imul
nop
outsl
cld
cld
cltd
xor
les
dec
lret
into
and
gs
fbld
and
xlat
xorl
in
push
lock
faddp
loope
ss
xor
mov
cwtl
sub
jl
xor
call
or
pop
in
add
fcmovu
push
mov
adc
inc
mov
scas
mov
add
movsl
sti
popa
mov
push
insl
dec
pop
jecxz
add
jl
jbe
adc
scas
stos
clc
mov
pop
xchg
pop
cli
mov
xchg
js
inc
js
xchg
sub
jl
push
es
ret
xlat
jecxz
sahf
filds
jge
xor
inc
pushf
fidivs
int3
imul
push
sbb
subl
lahf
cmp
inc
mov
and
fcom
insb
out
sub
cmp
test
ja
icebp
sub
fildl
mov
push
jmp
in
fnstenv
and
negb
imul
or
out
pop
imul
jge
es
cs
or
das
or
lods
movsb
cmp
stc
lret
sarb
in
test
cmp
xchg
xchg
sub
loop
lret
les
mov
pop
or
or
test
mull
lret
aaa
mov
fildl
gs
fucomip
fidivrl
pop
repnz
mov
fs
pop
ret
loop
push
ljmp
or
add
aas
add
sarl
stos
jbe
int
mov
dec
pop
cmpl
incb
mov
fstl
aam
rclb
outsl
ret
add
push
imul
aas
push
mov
nop
lea
dec
shrb
sub
subb
mov
mov
adc
sbb
negb
dec
add
push
mov
xchg
or
mov
adc
inc
sar
data16
scas
push
pop
sbb
cmp
push
mov
icebp
inc
popf
cli
popf
adc
sub
les
lock
mov
test
jbe
push
cmpsb
dec
ret
xchg
fstl
xor
push
push
push
adc
jge
and
xor
outsl
es
lds
xlat
test
and
mov
fcmovnu
daa
fwait
or
lock
add
jnp
jb
dec
xchg
cmp
xchg
leave
mov
dec
in
cmpsb
negl
xor
dec
adc
cli
add
in
mov
mov
cmp
mov
jg
lea
mov
sti
mov
test
mov
mov
and
out
mov
in
dec
add
jns
jne
mov
or
out
test
add
pop
lret
or
ljmp
andb
push
dec
sub
dec
jg
cmp
mov
mov
xchg
jmp
jge
imul
pop
mov
lods
js
jg
shll
sarb
stos
dec
inc
push
in
out
stos
inc
sahf
dec
test
or
mov
jge,pt
xchg
jb
les
cmpsl
mov
and
and
in
cmp
hlt
pop
shrb
clc
ljmp
lahf
fsubl
mov
lds
or
je
movsb
adc
mov
and
dec
add
stos
mov
sbb
mov
icebp
mov
hlt
mov
mov
adc
dec
mov
push
andl
mov
into
jmp
pop
out
repnz
or
cs
lods
push
mov
dec
mov
mov
push
push
nop
lock
mov
xchg
clc
xchg
cs
dec
xchg
mov
sub
inc
cmpsb
mov
daa
stc
lret
into
aas
mov
popa
mov
adcl
pop
sub
cmp
stos
dec
sahf
adc
das
rolb
push
sub
outsl
fcompl
movsl
rolb
mov
mov
cld
dec
cmpsl
xlat
es
ljmp
es
jno
in
cld
dec
fwait
push
mov
adc
sbb
or
test
push
mov
sub
stos
test
shrb
sarb
iret
fwait
andl
int3
mov
pop
out
inc
loop
xor
push
jbe
push
add
int
xchg
fwait
jp
push
jb
push
lret
das
mov
pop
ss
pop
jns
mov
pop
mov
rorl
mov
or
imul
sub
sub
pop
mov
xchg
adc
cmp
xchg
push
xchg
and
pop
int
dec
push
mov
dec
push
in
adc
mov
test
ja
orl
push
cltd
adc
cwtl
push
pop
std
jae
bnd
sbb
dec
sbb
lods
or
cmp
xor
mov
rcrl
clc
pop
scas
push
icebp
sahf
mov
ljmp
sbb
add
daa
adc
fadds
and
mov
push
push
push
xor
shll
fs
std
lea
jmp
fwait
jae
push
and
or
leave
scas
push
divb
sub
inc
popa
rorb
push
out
test
cmovge
and
incl
inc
sbb
int3
je
bound
pop
add
jne
mov
fst
mov
repnz
xor
push
xor
and
fwait
ret
rcr
push
sbb
and
cmp
shll
mov
imul
pop
stc
push
das
and
jno
sti
push
shl
lret
insl
call
and
out
and
cmp
dec
loopne
sarb
adc
inc
sahf
sbbl
xchg
jo
pop
sub
icebp
inc
rcrb
pop
dec
faddl
lock
mov
ljmp
pop
mov
sub
test
pop
test
in
xor
daa
cmp
mov
mov
sub
pop
data16
sbb
adc
xchg
cmp
stos
stc
sbb
repnz
fiaddl
aam
jne
xchg
fstl
or
cmp
jecxz
mov
test
data16
inc
lock
pop
push
sub
add
sti
add
in
and
xchg
fnstenv
push
out
inc
addr16
push
pushl
shll
or
mov
jno
shll
dec
jae
mov
popl
pop
outsl
jno
bound
add
cmp
movsb
inc
in
jno
call
jne
mov
pop
push
stos
jo
js
push
dec
add
cmp
aam
mov
and
outsb
inc
xor
movsl
mov
js
pop
out
mov
arpl
add
std
out
jl
pop
push
cmp
dec
add
xchg
mov
ljmp
push
dec
mov
repnz
or
push
sub
sbb
dec
jne
shll
movsl
scas
dec
insb
lea
mov
negb
push
icebp
fcomps
sti
jl
cld
push
push
xchg
fimuls
out
push
aas
add
fcomi
arpl
mov
mov
inc
xchg
or
mov
sti
push
nop
test
out
xor
testb
pop
cmp
inc
lods
mov
jns
test
xchg
mov
fidivl
sbb
sahf
hlt
mov
aas
push
jmp
jo
cmp
flds
shl
cmp
outsl
mov
or
cmc
xor
sbb
cltd
mov
scas
stc
stc
in
mov
xchg
outsl
and
daa
xchg
add
and
sbb
jb
mov
push
aaa
inc
int3
in
lock
fiadds
fsubl
jb
jle
out
add
push
es
dec
outsb
sbb
addr16
fldcw
adc
xor
xlat
xor
mov
ljmp
shll
icebp
or
adc
sub
jns
ficomps
and
lahf
call
mov
jmp
inc
push
xchg
int
fidivrl
rcrb
add
loope
ss
mov
dec
sub
push
ret
sbb
pushf
ja
fistpll
out
ja
sbb
ss
push
mov
jne
jae
jns
lret
fwait
cld
push
ja
cmp
dec
dec
sbb
adc
in
dec
int3
mov
stos
adc
ljmp
out
inc
test
pop
or
out
mov
xor
xchg
mov
dec
mov
mov
ret
xor
mov
popa
movsl
in
hlt
mov
and
or
popf
dec
fimuls
into
ljmp
push
jnp
mov
cmpb
pop
out
jg
bound
sbb
rol
in
lods
xchg
not
xchg
std
mov
mov
in
jnp
imul
testb
test
outsl
loop
popf
mov
push
push
xor
nop
fwait
dec
gs
and
mov
leave
daa
sbb
sub
mov
add
ret
in
push
js
xor
fdivr
call
cli
push
ja
stc
sahf
push
dec
addb
aaa
inc
outsb
dec
lcall
loop
filds
cmc
in
jge
cmp
jl
int
js
sbb
dec
push
repnz
gs
js
add
call
leave
jge
pushf
mov
sbb
push
dec
or
and
test
cmp
popa
pop
fwait
cld
pop
jns
das
cmpsl
arpl
aad
and
fldcw
or
pop
test
and
std
adc
nop
loop
adc
inc
fisubrl
adc
add
sub
test
xor
aas
xorb
mulb
sbb
and
jno
shrl
adc
imul
or
mov
lea
push
pop
xchg
jne
mov
or
push
out
sbb
jle
mov
lods
or
push
or
xchg
out
into
lahf
push
cmp
xlat
fimull
les
or
incl
jo
adc
inc
add
inc
jb
pop
push
call
xor
ds
and
xlat
sub
mov
loop
push
je,pn
lods
cli
aaa
inc
nop
jle
pop
mov
xchg
loope
pop
push
fbstp
jb
es
test
inc
fisubrs
lock
jbe
adc
adc
in
das
xor
cli
dec
push
mov
mov
dec
jno
cwtl
pcmpgtw
sbb
leave
adc
sbb
lret
xor
ret
lods
jo
mov
xchg
out
push
cmp
cmp
dec
xor
insb
test
adc
or
pop
and
jae
cmp
stos
or
xor
jp
sub
sbb
jle
mov
jno
jle
insl
inc
imul
mov
in
inc
aam
sub
dec
lds
popa
ljmp
mov
fs
outsl
xchg
cmpsb
out
test
dec
out
jmp
lock
inc
xchg
leave
out
clc
push
xchg
std
pop
lods
rol
fs
mov
push
icebp
mov
insb
fdiv
xlat
mov
mov
xor
addr16
sbb
test
pusha
sbb
call
mov
or
ret
scas
pop
jo
xchg
xchg
mov
cmp
pop
jl
test
mov
xchg
jo
mov
repz
addr16
stc
inc
pop
ret
into
and
inc
mov
xchg
or
pop
pop
cmp
mov
cmpsl
push
mov
imul
inc
push
jno
sub
add
ret
inc
add
inc
mov
pop
sti
xlat
mov
outsb
hlt
aam
adc
std
out
add
icebp
lods
jno
push
pop
lret
xchg
pop
outsb
shl
jae
xor
jmp
cmpl
test
and
dec
inc
stc
sbb
sub
fisttpll
test
test
jp
dec
jge
cwtl
xchg
add
xchg
adc
pop
cmp
sub
xor
inc
push
aad
clc
mov
jno
jle
jg
in
sub
pop
ja
dec
push
out
jns
mov
sub
fiadds
push
sbb
mov
aaa
mov
lcall
xchg
aas
mov
ljmp
mov
inc
and
fs
test
int3
sarb
arpl
out
jo
inc
aaa
shll
fnstenv
xor
jno
aaa
jno
js
mov
cmp
dec
icebp
call
pop
imul
imull
pop
mov
sbb
pop
cwtl
scas
sbb
cmpl
mov
and
aaa
loopne
lret
or
cmp
push
rorb
push
call
jl
mov
in
xchg
leave
and
ds
mov
out
or
mov
mov
mov
in
bound
in
addr16
sbb
mov
mov
ret
xor
fsubrl
scas
and
shll
jmp
ds
sbbl
dec
inc
or
pusha
imull
andb
cmp
push
mov
cmp
inc
cmc
aad
pop
xchg
push
sub
aad
mov
cmp
wbinvd
lock
adc
imul
and
lods
push
movsb
mov
in
mov
add
adc
arpl
loop
clc
and
loopne
shll
test
sub
leave
mov
adc
adc
ret
fmuls
or
or
jmp
and
dec
mov
push
fidivrs
push
addr16
xor
bnd
jp
flds
ljmp
inc
inc
and
sub
mov
mov
jecxz
adc
or
jmp
adc
cmp
divl
or
jno
les
jnp
pop
loopne
add
fucomip
test
out
mov
sbbl
mov
jae
mov
push
std
xor
test
jmp
inc
dec
sahf
xchg
mov
adc
rcrb
sub
jge
idivl
sub
push
arpl
js
outsb
mov
sbb
enter
xchg
pop
mov
cmc
ds
cmp
in
in
pop
sbb
xchg
dec
jbe
lret
and
cli
icebp
xor
das
xchg
xlat
popf
adc
inc
mov
cld
lcall
sub
call
and
in
or
dec
sbb
cli
or
xor
mov
jo
pop
push
xlat
pop
out
inc
das
popa
bound
sbb
mov
iret
or
mov
sbb
out
orb
hlt
mov
lcall
xchg
stc
stos
lods
mov
aaa
mov
test
imul
mov
mov
push
inc
fucomp
incb
jg
bound
rep
cld
cld
pop
loopne
movsl
or
mov
add
cwtl
imul
cmp
push
cmp
ret
push
adc
ss
adc
scas
fmuls
jno
out
sbb
xchg
push
sbb
mov
aad
aas
lea
jo
xorb
mov
hlt
sti
sub
mov
mov
testl
repnz
arpl
imul
inc
xchg
xchg
aaa
pop
fiadds
cmc
je
repz
xchg
adc
fdivs
repnz
popf
mov
enter
outsl
sub
adc
cmp
out
pushf
add
cmpsl
pop
mov
mov
mov
xor
fs
dec
and
xor
shr
test
inc
dec
mov
sti
daa
mov
mov
cwtl
mov
mov
cmpsb
shr
xchg
icebp
push
outsb
jge
add
fnstenv
pop
inc
lahf
sub
aad
mov
das
sbb
xorl
movsb
jg
cmc
stc
mov
xchg
cmp
stos
inc
cmp
xor
shlb
in
mov
cmpl
stc
inc
shll
cld
xor
insl
xor
push
or
out
cs
test
push
cmp
pop
inc
lret
dec
mov
jne
and
aas
sbb
int
dec
in
icebp
in
mov
xor
aam
inc
xor
lahf
int3
pop
imul
push
imul
jae
daa
dec
or
sub
and
push
enter
mov
xor
movsb
push
xor
dec
scas
out
and
adc
and
add
and
push
mov
xchg
daa
mov
mov
bound
push
rolb
and
or
imul
mov
test
and
jmp
sub
dec
dec
test
rcll
outsb
ja
pop
shll
into
cmp
sbb
in
pop
popf
out
inc
je
pop
cmp
cwtl
cmp
mov
call
mov
shrb
jb
cmp
les
cs
repz
mov
dec
jl
sub
jb
mov
popl
push
xor
aas
insl
fiadds
and
mov
shlb
adc
int3
loop
call
clc
xor
pop
adc
in
sub
sbbb
mov
pushf
xchg
xlat
test
rcl
stc
xchg
dec
or
movsb
ja
jmp
pop
sbb
xchg
cmp
fs
cmpb
xchg
mov
add
insl
ficoml
movsb
mov
int3
jg
or
pop
in
in
mov
xchg
sub
mov
fldenv
mov
stc
imul
push
pop
cs
and
and
mov
or
xchg
cmpsb
hlt
scas
push
and
pop
cmpsl
in
fisubrs
mov
popa
xor
pop
jns
mov
and
adc
push
addr16
je
cmp
rorl
mov
jno
je
imul
jnp
jge
push
ret
jg
jmp
movsl
sti
pop
cltd
mov
push
cmp
enter
inc
fwait
add
addr16
adc
lods
cmp
leave
fs
and
mov
imul
mov
icebp
aam
mov
inc
sub
enter
mov
cmp
pop
jecxz
scas
loope
pop
jecxz
lods
jecxz
pop
in
xor
inc
loopne
rcrl
fsubs
mov
std
cmp
and
cmp
or
and
adc
test
cmp
bound
mov
push
push
push
mov
xor
fwait
jno
push
push
mov
xor
xor
xchg
mov
fsubrl
subl
sarl
fildll
out
add
sub
mov
out
ljmp
pop
outsb
xchg
mov
and
shlb
xor
add
pop
call
es
cmp
mov
shrl
pop
jge
in
sub
imul
sbb
daa
cmpsb
xchg
adc
mov
fiadds
jno
shll
loopne
or
xchg
dec
dec
mov
push
push
mov
mov
pop
loopne
test
dec
add
sbb
mov
mov
sti
in
push
push
out
cmp
rclb
push
sub
push
mov
add
push
mov
jp
push
mull
lcall
cmp
mov
sub
jb
popf
and
cmp
push
cmp
or
jl
jae
cmp
add
sbb
arpl
adc
mov
cld
sub
bound
fstl
xor
sub
pop
jnp
clc
and
sti
decl
or
dec
inc
mov
lcall
in
sbb
mov
dec
mov
and
push
jae
inc
test
inc
les
sub
mov
aas
inc
aam
out
shr
mov
lds
sub
sbb
sub
js
cs
sbb
mov
popa
lds
lods
das
dec
cmp
cld
push
stos
push
out
repz
call
stos
pop
mov
or
jp
in
pushf
pop
mov
or
test
enter
repnz
mulb
leave
icebp
aaa
add
lret
mov
fwait
scas
aas
cld
mov
fnstsw
es
mov
xchg
out
cmp
popa
cld
sub
dec
jmp
xor
push
inc
jl
push
adc
das
loop
repz
xor
mov
jmp
push
cmpsl
in
je
mov
sub
dec
xchg
popf
nop
and
adc
mov
scas
mov
xlat
pop
lds
pop
push
sti
negb
fimull
push
rolb
call
inc
sbb
adc
inc
pop
ja
inc
inc
loop
jmp
jne
jg
ja
adc
jmp
pmaxub
mov
int3
ret
xchg
sub
push
aam
in
in
add
sub
pop
xchg
andl
out
pop
loopne
and
bnd
adc
or
sbb
shrl
loope
in
jmp
out
xor
nop
test
pop
loopne
push
sarb
pop
fdivl
adc
xchg
das
cmpsb
mov
push
jb
stos
push
mov
shll
lea
sub
cmpsl
or
sahf
pop
aas
pop
adc
pop
lahf
and
cld
stos
fnsave
divl
cwtl
and
enter
add
insb
cmp
xchg
fcom
aam
xchg
es
rol
inc
pop
mov
loope
pusha
xor
pushf
fcoml
adc
insb
mov
pop
fnstsw
dec
lret
xor
jp
push
mov
inc
inc
ret
pop
mov
xor
sbb
xchg
lcall
pop
push
inc
pop
rolb
xchg
test
into
mov
ss
push
imul
xchg
int
and
mov
inc
sub
mov
outsl
int3
mov
or
mov
mov
inc
mov
adc
dec
popa
into
pop
adc
into
and
gs
mov
in
test
jbe
inc
inc
mov
dec
out
pop
js
jp
movsl
mov
gs
ljmp
pop
aam
popa
pop
idivl
jp
cwtl
dec
loope
subb
jmp
mov
sarb
push
xchg
sub
mov
in
mov
mov
leave
je
int
cmpsw
vsqrtpd
test
in
or
addl
idivb
fcmove
cmp
mov
adc
outsl
jnp
iret
mov
gs
adc
lret
adc
xchg
sbb
popf
fbld
faddl
shlb
add
sbb
fwait
inc
ficompl
mov
fcmove
data16
add
loop
jl
out
cli
sbb
and
out
mov
jmp
mov
mov
cmpsb
mov
aaa
rcr
leave
push
outsl
ss
lahf
test
hlt
movsl
dec
sub
clc
ds
lahf
push
ljmp
das
pop
sahf
mov
dec
push
movsb
ret
mov
stc
sbb
jl
lods
sub
cmpsb
inc
lods
jg
inc
adc
out
aas
and
jb
inc
decl
pop
cmp
xchg
mov
iret
mov
inc
cmp
imul
stos
ret
push
push
cmpsb
add
cmp
rcll
lea
xor
sbbl
xchg
xor
insb
testl
pop
sahf
mov
jl
pop
lcall
cmp
push
inc
out
jmp
push
cli
icebp
in
sub
jecxz
jg
mov
arpl
adc
add
imul
in
dec
jnp
mov
js
mov
rcll
repz
mov
xor
mov
adc
mov
xchg
xchg
das
cld
js
push
arpl
mov
mov
repnz
dec
repnz
xchg
mov
fdivrs
cmp
sahf
cmp
leave
ja
test
out
push
xchg
lds
or
jns
pop
lds
gs
in
cmp
dec
cmpsb
push
xor
lods
sub
inc
mov
icebp
popa
movsb
fisttpl
inc
mov
les
andb
jns
incl
mov
fimuls
xor
cmpsb
out
mov
xchg
in
dec
mov
cmpsb
xchg
fistps
aas
les
pop
dec
sti
popa
fwait
lret
outsb
jae
outsl
and
ds
int3
int3
push
sub
and
pop
sbb
xor
cltd
movsb
push
add
aas
mov
pop
add
push
sbb
and
push
daa
in
ds
push
jmp
mov
sbbl
sti
out
mov
jae
mov
dec
push
push
cwtl
mov
lods
adc
out
push
mov
jge
lods
adc
push
mov
mov
inc
inc
xchg
scas
sub
call
mov
xor
les
pop
push
sti
negl
xchg
ficomps
and
jl
movsb
imul
fstps
rclb
out
pushf
dec
pop
imul
push
xor
xchg
or
xchg
arpl
hlt
cli
scas
clc
js
xchg
sahf
sbb
lods
lds
fidivl
sub
es
xorb
in
in
flds
push
insb
dec
pusha
pop
jle
movsb
push
mov
and
loope
mov
loope
ret
jnp
popf
out
jp
add
int
mov
mov
jge
adc
repz
outsl
push
stos
jnp
out
scas
int
mov
xor
adc
sub
data16
mov
jb
stos
hlt
fwait
sbb
div
mov
loope
or
mov
or
xor
mov
inc
push
add
mov
sbb
fwait
xchg
push
stos
test
cmp
and
xchg
insb
sbb
bswap
test
inc
sbbb
pop
mov
jge
inc
in
stos
mov
cmp
and
jnp
mov
sub
dec
and
fwait
shlb
clc
dec
data16
push
and
add
outsb
loop
cmp
adc
lcall
loope
push
fisttps
lds
or
push
nop
aas
xor
cmp
jmp
dec
je
lahf
repnz
mov
gs
mov
sbb
scas
push
jl
mov
lret
mov
aam
mov
adc
jno
inc
out
pop
add
cmp
orb
xor
jmp
das
or
call
aas
mov
popf
push
rorb
dec
xor
adc
sti
mov
and
sbb
out
popl
insb
stc
dec
mov
ja
pop
mov
jecxz
xor
sbb
es
inc
enter
shll
pslld
movsl
mov
psadbw
mov
dec
int
inc
test
sbb
in
aas
xchg
xor
faddl
lds
inc
mov
cltd
adc
cmpsb
lods
jmp
cli
in
dec
sub
xchg
jb,pt
adc
icebp
insb
das
adc
js
filds
lcall
lahf
adc
je
fcompl
sbb
mov
mov
mov
sub
jo
sub
or
leave
xor
lret
adc
ljmp
sbb
mov
and
es
outsl
mov
rcr
addr16
ficompl
add
stos
je
mov
adc
mov
mov
mul
es
lret
lock
sbb
jmp
in
jg
mov
orl
ja
dec
in
loope
je
pop
push
pop
rclb
mov
xor
and
lahf
arpl
in
fwait
pop
sub
xlat
outsl
cmp
inc
inc
insl
pop
push
cmpsl
lret
jno
inc
adc
jbe
xchg
dec
add
mov
inc
xchg
sub
jne
sbb
daa
mov
mov
gs
or
icebp
loop
xchg
pop
idivl
dec
das
xor
aaa
fsubrs
push
push
das
jmp
mov
cmp
sub
ss
mov
xchg
sbb
test
js
inc
jl
les
cmp
out
mov
in
ror
scas
sub
sub
dec
insl
push
fmul
icebp
les
loopne
xchg
jecxz,pn
in
dec
push
lea
and
dec
jg
ficompl
push
movb
push
dec
mov
pusha
call
data16
jge
dec
loopne
or
sub
in
in
xchg
add
and
sbb
jg
sbb
pop
push
xchg
adc
cli
cmp
ljmp
nop
sbb
pushf
pop
pop
lea
jp
test
xor
nop
sti
mov
lret
pop
pop
sbb
sub
jno
stc
xchg
xor
adc
fcomps
ljmp
je
inc
fsts
and
insb
pop
loope
inc
aaa
addr16
add
ljmp
lret
rcrl
cmp
mov
cwtl
mov
stos
push
cmp
sbb
popa
inc
cmp
sbbb
int
adc
movsb
cmp
mov
inc
cmp
out
sbb
adc
or
ljmp
jl
mov
dec
and
xchg
jg
adc
cmp
adc
outsb
fists
faddl
sub
popf
test
pand
sub
mov
sbb
sti
jnp
mov
fisubl
adc
shrl
lahf
data16
sub
les
push
and
mov
pop
pop
xchg
lds
fbld
push
mov
xor
push
shl
inc
enter
xchg
outsl
sti
lds
add
inc
subl
push
adc
leave
fldt
mov
sarb
lret
xchg
inc
pop
pop
dec
mov
mov
in
mov
int
add
outsl
outsl
int
xor
adc
in
inc
imull
or
aam
xor
insl
fwait
pusha
les
add
push
push
imul
cld
push
loop
pop
pop
dec
mov
in
jmp
leave
bound
sbb
mov
ret
mov
pop
pop
aas
xor
ror
cmpsb
mov
mov
adc
test
sbb
lcall
push
mov
test
sahf
push
jnp
imul
cmpsl
fs
xor
xchg
repz
cmpsl
or
mov
mull
lods
mov
fdivl
inc
fildl
sbb
cmp
jecxz
push
loope
xchg
push
mov
adc
inc
and
and
loop
add
ljmp
js
pusha
xorl
mov
mov
lock
in
cmc
mov
mov
mov
inc
cmp
les
mov
jno
mov
lock
and
xchg
push
push
mov
jnp
jmp
pop
cmp
jle
test
mov
mov
ficoml
xchg
mov
ret
push
or
mov
test
and
aas
out
pop
repnz
fwait
int
bound
jmp
test
aaa
aas
ret
lods
in
dec
mov
adc
fldcw
add
es
xor
cld
int3
test
imul
or
scas
clc
and
xchg
divb
add
lret
push
sahf
xor
aaa
out
mov
inc
push
shlb
jmp
lcall
mov
mov
in
scas
in
decb
out
popf
out
mov
cmp
jno
pusha
jae
pusha
in
hlt
push
push
movsl
pop
in
icebp
rolb
std
pop
gs
xor
inc
jnp
mov
out
ljmp
and
ja
adc
sbb
enter
or
and
push
sbb
popa
pop
cli
daa
push
movsl
ret
xchg
adc
sahf
dec
movsb
leave
movsb
dec
xor
fdivl
pop
in
shll
ret
stos
mov
and
inc
leave
dec
seta
sahf
jg
mov
negl
mov
gs
jns
mul
or
pop
stos
push
or
jno
out
sar
add
jecxz
dec
test
pop
dec
sbb
out
ret
rclb
in
dec
mov
jl
cmp
mov
xchg
jnp
dec
das
inc
jb
adc
jb
ds
cmp
out
jmp
shl
mov
and
sarb
sbb
int
mov
mov
int3
pusha
mov
jns
jne
or
lcall
add
pop
pop
pop
out
xor
loopne
or
xchg
cmp
std
adc
or
mov
sbb
adc
dec
push
arpl
ret
push
into
jmp
std
cmc
or
cmp
ret
xchg
pop
inc
mov
or
out
xlat
sub
and
pop
clc
sti
sbb
scas
xchg
pop
les
xchg
dec
test
fiaddl
ret
cld
mov
pusha
push
outsb
loopne
adcb
stos
jbe
mov
les
jae
mov
inc
ret
ljmp
mov
push
fldcw
sbb
sub
les
jbe
lret
cli
adc
mov
sub
imul
jp
push
adc
xor
xor
fs
mov
lds
movsb
insb
lds
cmp
and
in
jbe
cli
lods
popf
xor
fmull
mov
roll
lcall
cmp
or
je
xchg
dec
jmp
push
cmp
jg
and
iret
pop
aam
ja
lahf
inc
or
cmp
shrl
pop
pusha
xchg
mov
lcall
subl
inc
pop
or
mov
lss
ljmp
xchg
icebp
ljmp
ret
mov
pushl
jns
clc
push
loop
xor
flds
mov
sbb
rcl
out
enter
push
sbb
cld
inc
mov
in
mov
adc
es
xchg
mov
mov
sub
dec
sti
jg
pop
add
adc
filds
test
lock
mov
xchg
sbb
push
inc
xor
imul
dec
lods
insl
lret
sbb
lods
mov
sbb
jmp
mov
pop
sahf
inc
test
mov
jg
fsubl
mov
add
cmpsb
movsb
test
add
mov
or
iret
scas
cld
xchg
shr
dec
push
or
dec
mov
lcall
int
in
test
xchg
sbb
xchg
sub
adc
xchg
sbb
xor
mov
outsw
xor
and
orb
dec
test
mov
sbb
enter
pop
loopne
xchg
ds
hlt
mov
in
test
fdiv
inc
adc
cwtl
mov
imul
sub
push
cmpsb
cmpl
fisubs
test
adc
cmc
lods
data16
lret
push
sbb
cmp
ret
and
scas
mov
stos
fst
mov
mov
add
ret
xchg
xchg
ret
stos
push
hlt
add
ds
push
arpl
leave
or
imul
jl
test
and
stos
jns
inc
mov
sub
and
jbe
aas
jl
leave
and
dec
call
mov
jmp
das
rcll
movb
cmpl
push
mov
fildl
inc
into
and
dec
je
sbb
in
mov
fnstcw
sti
cli
cmpsl
xor
and
popa
lret
enter
push
dec
pop
cmpsb
daa
xchg
repnz
jns
jge
push
xchg
lret
fimuls
stos
roll
mov
push
inc
loope
xor
fwait
lods
out
loopne
shl
hlt
clc
mov
lods
push
sbb
imul
mov
mov
cmp
inc
call
or
inc
xor
push
stc
jl
sub
cli
xchg
imul
add
mov
outsl
add
shrb
cltd
push
add
xlat
mov
sti
movsb
and
xlat
mov
pop
mov
movsb
loope
aam
mov
sub
or
sub
inc
pop
and
sub
xchg
lods
cmp
cmc
xor
int3
jmp
ljmp
call
pop
fistpll
mov
stc
jb
and
jg
xchg
lcall
mov
push
or
movsl
fdivs
jo
ficompl
dec
lret
divl
push
lods
push
jg
dec
xchg
fwait
push
or
in
daa
pushf
or
sti
pushf
xchg
test
xor
inc
enter
or
cld
push
sub
call
cmpsb
jmp
xor
cld
in
loopne
mov
mov
in
jno
adc
pop
push
push
pop
push
lods
or
nop
fisubrs
jae
daa
push
jmp
sbb
sub
push
out
xchg
negb
imul
lods
mov
sub
loop,pt
xchg
scas
mov
inc
adc
sbb
sbb
insb
dec
push
and
lds
adc
push
mov
and
ret
iret
fld
call
lods
and
inc
movsb
mov
xchg
sbb
ror
js
insl
or
mov
insb
std
cwtl
xchg
xor
adc
idivl
in
pushf
imul
popa
xor
jmp
rclb
fndisi(8087
movsl
mov
mov
jno
jp
xor
mov
push
shrl
fwait
std
jp
outsl
inc
addr16
or
xchg
outsl
xchg
notb
or
popa
outsl
arpl
sub
clc
push
jg
push
frstor
push
test
in
add
pop
stos
push
xchg
mov
cmp
fstpt
jg
lds
inc
lods
mov
pop
sbb
inc
adc
rcll
jle
sbb
xor
jno
mov
push
xor
outsb
adc
mov
insb
test
dec
mov
add
loop
aas
mov
lods
sbbb
sbb
jl
idiv
ja
adc
mov
mov
push
sbbl
fcomps
ljmp
popf
rcrl
in
inc
iret
mov
xchg
xchg
ss
icebp
fcomps
sti
rorb
mov
jae
xchg
xor
pop
test
jbe
int3
in
mov
dec
jle
pushf
xor
test
or
in
inc
dec
out
inc
push
sub
sub
cmp
push
sbb
push
sbb
xor
inc
and
adc
adc
and
call
mov
std
dec
movsl
gs
push
xchg
add
cltd
mov
mov
ret
inc
push
repz
daa
and
rolb
fbld
dec
pop
mov
sbb
mov
pushf
ret
push
or
lret
adc
call
fstp
xor
inc
pop
cld
into
xor
pop
cmp
icebp
jb
lock
sub
imul
pop
adc
pop
cmc
data16
and
imul
out
jnp
out
sub
movsl
xlat
dec
add
or
mov
call
roll
rcrl
mov
cmp
jbe
leave
xchg
inc
fdivl
mov
aad
lock
jnp
jmp
cmp
inc
push
int3
cmpsl
ljmp
mov
jge
push
je
add
stos
dec
lods
push
scas
cs
pop
je
dec
jecxz
push
pop
xchg
jns
push
addr16
inc
lret
mov
push
xchg
cwtl
test
ss
or
mov
mov
test
enter
jmp
ja
lea
jp
adc
sub
and
jmp
xor
push
inc
icebp
mov
idiv
pop
mov
call
sahf
cltd
dec
fninit
jb
ss
push
mov
fisubrl
xlat
outsl
push
push
cmp
into
cmp
lods
les
push
xlat
xchg
test
xchg
aad
out
ret
int3
push
xchg
push
and
jle
xchg
test
outsb
jg
sub
sub
test
mov
mov
fidivl
shll
das
push
add
out
jns
ja
roll
stos
lcall
push
sbb
pop
arpl
push
xchg
mov
and
add
xchg
inc
mov
jle
int
xor
or
jmp
adc
push
jle
iret
fdivr
inc
daa
js
sub
sbb
out
mov
les
insl
rol
or
fmulp
adc
cmp
inc
outsb
mov
pop
adc
sti
mov
stc
inc
cltd
xchg
jb
mov
popf
rorl
cld
out
jecxz
mov
iret
jo
scas
clc
fmul
add
mov
or
loopne
or
nop
dec
push
and
lock
push
mov
mov
dec
cs
je
pop
mov
imul
rorl
jo
jns
sub
mov
popa
xchg
mov
jle
leave
jl,pt
mov
xor
mov
xchg
inc
ljmp
addb
mov
rcrl
and
and
movsb
pop
xor
push
xor
dec
sbb
out
jge
sahf
in
pop
sub
dec
add
rcrb
add
sub
out
shl
jge,pn
jecxz
adc
xlat
jmp
int
mov
int3
push
sub
test
imul
jmp
xor
ss
pop
mov
test
int3
jno
xchg
popa
lret
lcall
mov
fidivl
rorb
int3
dec
mov
inc
ret
ljmp
xor
cmp
and
or
inc
or
in
dec
jb
aam
in
sbb
imull
cmp
fadds
popa
sub
fcomps
cmpsb
xchg
push
sbb
fdivr
fimull
ss
mov
mov
mov
push
mov
jae
out
jle
sbb
lahf
sbb
adc
mov
and
mov
push
sub
shrl
xchg
aas
jno
lret
add
in
int3
hlt
stc
jp
aas
nop
or
gs
loope
repz
pop
aas
in
rclb
fildll
cli
adc
movsl
adc
or
repnz
push
mov
nop
popf
mov
adc
lock
je
arpl
mov
cmp
mov
lds
cli
sub
xchg
or
sarl
cmc
adc
not
ljmp
mov
sbb
daa
sub
ss
or
in
mov
sbb
xchg
std
mov
sarl
xor
dec
in
dec
js
clc
inc
cltd
addr16
jnp
fwait
xor
or
mov
mov
mov
xchg
push
xchg
sbb
loope
sub
test
mov
lahf
mov
push
inc
adc
incb
stos
sbb
clc
pop
mov
dec
cmp
das
fidivrs
and
push
je
adc
data16
cwtl
xor
repz
mov
mov
lret
bound
in
ret
mov
movsl
adc
loope
lds
std
in
aam
fdiv
cmp
mov
ja
sbb
out
lock
dec
stos
inc
push
dec
xchg
sub
jmp
dec
xchg
roll
rcll
movsb
or
insl
xchg
aad
xlat
add
gs
or
fcom
dec
dec
jne
out
adc
scas
pusha
cltd
lret
sub
add
jno
pop
fs
cwtl
or
sub
out
aaa
jne
inc
sbb
fwait
lret
imul
stos
lods
dec
mov
sub
scas
dec
sahf
shll
adc
int
shll
rorl
insb
shll
inc
std
pop
pop
ret
hlt
nop
cli
mov
out
adc
sub
jmp
push
mov
shlb
or
inc
mov
or
pop
cmp
adc
mov
lret
jmp
or
or
sbb
sbb
sahf
jmp
mul
in
pop
movsl
dec
mov
or
out
ljmp
fucomi
loop
inc
mov
jo
xor
pusha
inc
fdivrs
sub
cli
xchg
into
arpl
lret
jne
mov
aas
jo
mov
mov
sbb
inc
repnz
sbb
bound
pop
mov
sbb
push
cltd
adc
mov
js
bound
test
mov
data16
enter
ljmp
mov
bnd
inc
dec
push
mov
movsb
mov
int
cmp
pop
ljmp
lcall
inc
stc
imul
int3
out
dec
inc
sub
pop
ds
inc
test
adc
adc
jbe
rol
dec
xchg
inc
mov
push
sbb
xchg
or
cmpsl
cltd
mov
mov
xor
pop
je
scas
std
xor
and
loop
sbb
jecxz
aam
xchg
rorb
stc
into
sub
or
and
imul
dec
pop
inc
or
out
pop
aam
xor
pop
and
pcmpgtd
cmpsb
leave
cltd
insb
lods
nop
xchg
and
cmp
jp
dec
mov
jns
minps
test
mov
cld
sti
imul
arpl
add
adc
repnz
call
loop
jecxz
add
sbb
jp
out
pop
jp
xchg
mov
cmp
mov
jne
sti
leave
std
movsb
sbb
mov
push
mov
cli
mov
in
add
mov
mov
or
xor
sbb
xor
jecxz
xchg
push
cmpsb
adc
sbb
jmp
fsubrp
stc
xor
jnp
inc
stos
mov
ret
notb
mov
sub
cmp
add
cmp
test
in
aaa
rcll
js
jbe
xorb
popa
jg
add
sbb
cmpsb
call
pop
sbb
les
cli
and
jns
dec
mov
cs
push
imul
pop
sti
imul
push
adc
test
pop
pop
xchg
sahf
dec
cs
pop
xchg
sbb
mov
pop
xor
xor
jo
repnz
mov
or
xchg
jmp
sbb
or
jecxz
pop
loope
out
fisttpl
jmp
pop
cwtl
add
push
jns
int
push
test
mov
aad
dec
pushf
sbb
adc
inc
push
cld
cli
cwtl
fistpl
jns
push
icebp
sub
cmc
ljmp
pop
pop
xchg
pop
add
inc
rcll
enter
test
push
sub
pop
jnp
inc
or
in
leave
rcll
mull
iret
xor
mov
lret
pushf
xchg
sub
pop
or
mov
fbstp
mov
sub
push
pop
out
data16
mov
cmc
push
xor
aaa
and
ja
push
das
shl
push
cltd
mov
mov
les
adc
jns
push
daa
sbb
test
push
pop
cmp
adc
popa
pop
nop
fists
mov
xchg
pop
fs
fbstp
jle
ret
enter
cltd
xchg
mov
ds
nop
in
imul
out
aad
nop
inc
addr16
out
mov
cmpl
fisttps
inc
int3
jne
mov
xchg
sub
mov
addr16
in
push
sub
push
jmp
or
lods
and
pushl
mov
mov
mov
pop
adc
xor
mov
pushf
push
aad
mov
inc
and
push
xchg
add
jl
dec
xorb
outsb
jae
cmpsl
repnz
lret
fsubrp
mov
ja
inc
loop
push
pushf
cli
out
cmp
lret
sti
or
mov
jmp
adc
loopne
fnsave
repz
add
xor
in
pop
mov
loope
aam
cltd
jg
lahf
xor
sub
sahf
outsb
in
fimull
jge
lods
xchg
and
and
daa
mov
repz
dec
outsb
test
data16
enter
clc
ret
je
jecxz
pop
xor
bound
push
lods
adcb
rorl
int3
xchg
in
clc
cmc
cltd
sbb
pushw
and
sub
pushf
clc
adc
add
or
stc
fs
cli
adc
xchg
mov
cld
xor
lock
mov
push
mov
push
fsubr
mov
lock
test
jp
adc
sbb
insl
and
insb
data16
sbb
bound
outsl
mov
jbe
ret
and
cwtl
push
adc
dec
cld
mov
mov
xor
sub
jecxz
or
popf
rcrb
sbbb
js
icebp
pop
mov
lret
hlt
in
mov
push
xchg
das
mov
add
sbb
push
pop
int
pop
gs
int
fwait
addr16
aam
cmc
push
pop
notb
movsl
dec
in
dec
pop
lea
repnz
pop
insl
mov
sbb
jmp
inc
push
push
add
push
ret
push
ret
ret
and
out
hlt
jle
andl
cmpsb
adc
dec
gs
rcrb
pusha
sahf
add
dec
pop
push
mov
mov
jae
fnsave
rcrl
stos
call
subb
push
dec
jp
jo
mov
out
test
test
cltd
je
hlt
int3
mov
jne
sbb
and
add
push
or
in
add
add
loope
lea
mov
or
pop
mov
pushf
mov
jbe
orb
cmp
ss
add
mov
movsb
test
aaa
insl
rorl
lret
cmc
add
xor
divb
lcall
stos
sbb
in
data16
in
mov
pushl
stos
inc
outsl
mov
xor
movsb
mov
into
adc
mov
sub
loop
and
cmpsl
xchg
das
aad
xor
or
mov
pop
mov
sub
dec
jmp
dec
sbb
mov
stos
push
fists
ds
mov
and
enter
mov
rcrl
aaa
jge
movsl
adc
xor
lock
jne
cmp
mov
xor
stos
jg
inc
pop
mov
decl
fs
sub
jge
push
cmp
push
dec
adc
cmp
lret
adc
xor
cmp
adc
xor
icebp
sarb
pop
lret
test
ret
inc
test
adc
inc
and
mov
cld
dec
cltd
js
sbb
cmc
cmpsl
cmp
out
sbb
add
inc
push
sar
ja
mov
xchg
rcl
repz
adc
and
out
sbb
aaa
jb
mov
sbb
jmp
cwtl
cltd
gs
jg
and
jge
shr
test
pushf
lcall
or
mov
jno
clc
int3
xor
in
mov
push
xor
test
mov
xchg
or
cld
lods
add
push
add
cmp
jle
rol
mov
ss
jecxz
idivl
roll
push
mov
sahf
mov
jnp
inc
movsb
lret
rcll
ret
out
lods
cmp
ret
imul
andl
mov
int
cmp
adc
test
arpl
fcmovnb
push
pushf
cmp
push
iret
push
lret
mov
subb
or
add
pushf
add
dec
push
pop
xor
xor
mov
adc
mov
or
push
jecxz
sub
sub
sub
cmc
sub
sub
test
adc
mov
adc
arpl
jl
pop
xchg
mov
jno
shlb
rcll
xchg
jbe
mov
mov
xchg
mov
popa
fdiv
mov
rclb
fildll
cmp
in
jno
mov
leave
xor
and
pop
es
jl
lea
enter
adc
adcb
mov
cmp
into
add
fucom
mov
ficoms
int
imul
iret
push
mov
inc
mov
push
xor
out
iret
dec
cmp
imul
xchg
addr16
push
out
mov
ss
ret
ret
pop
mov
sahf
xor
enter
lods
in
pop
cmp
cmp
clc
jmp
sbb
sub
in
std
andl
andb
jne
xor
scas
mov
xlat
sub
sbb
pop
mov
mov
pop
shl
mov
divl
out
push
popf
fdivs
xor
add
cmp
jecxz
push
lahf
sub
mov
lds
dec
push
mov
out
pop
and
dec
ss
push
push
lret
dec
push
dec
xor
and
out
loop
cs
loop
aam
jge
sbb
les
out
imul
arpl
cli
in
lods
dec
int
xor
je
mov
jno
mov
mov
jns
mov
jb
cwtl
scas
mov
andb
fcomps
stos
add
fwait
and
jp
mov
lods
cmp
mov
popf
lds
popa
mov
loopne
xchg
jg
add
sub
test
pop
push
daa
push
mov
adc
imul
mov
push
sbb
jecxz
mov
cmp
jns
xchg
in
out
or
icebp
xchg
in
mov
bound
inc
stos
inc
out
xor
jbe
pop
sbb
test
addr16
arpl
roll
mov
out
fsubrp
lods
mov
divb
hlt
sub
jg
iret
push
clc
ja
call
mov
call
inc
mov
pop
shlb
daa
sbb
jnp
hlt
scas
sti
jle
mov
xchg
loope
and
adc
jmp
int
add
fisttpll
divl
fcmove
sbb
sub
js
ja
pushf
mov
fwait
outsb
lock
ja
iret
dec
and
iret
cld
out
xchg
hlt
cli
mov
jmp
xor
stos
xlat
cli
and
inc
mov
mov
cmp
inc
dec
xlat
dec
inc
lahf
cmp
lret
andb
jle
push
sbb
addr16
xchg
dec
in
mov
test
or
ljmp
pop
add
cli
mov
push
dec
test
mov
push
mov
mov
mov
addr16
jb
repnz
in
push
add
xchg
or
cmp
jg
mov
iret
fcmovb
scas
scas
stc
mov
and
jb
out
xchg
fadds
dec
push
lret
out
adc
gs
jo
push
mov
or
adc
aam
fistps
int3
inc
cmpsb
inc
push
aas
mov
xchg
pop
pop
mov
adc
out
fisubs
add
lds
inc
push
push
pop
mov
or
jo
jb
xor
stos
jb
out
insb
inc
call
insl
leave
mov
movsb
jl
mov
imul
pop
scas
jb
insl
lret
popf
inc
xchg
push
adc
mov
test
fdivrs
fwait
pusha
mov
out
sub
jns
sub
xchg
xor
push
push
dec
in
call
xchg
aam
jle
sbb
xchg
push
adc
insb
push
inc
pusha
jecxz
pop
pushf
add
stc
xchg
xor
xor
jl
jno
inc
aas
out
jp
popa
data16
pop
ret
aas
lods
out
lea
dec
pop
fisubs
movsb
cmpsb
shll
jb
call
adc
fistpl
lods
dec
cmpsb
cli
or
inc
mov
insb
pusha
imul
add
fdivl
push
outsb
mov
sub
dec
push
mov
dec
lds
push
pop
jno
loop
mov
dec
pop
in
repnz
in
ret
push
push
push
mov
mov
shlb
push
ds
mov
lret
roll
test
icebp
out
jle
push
lret
aas
adc
stos
xor
popf
sub
movsb
or
jns
das
in
mov
mov
xor
dec
lods
pusha
repnz
bound
out
add
aas
cmpsb
icebp
add
icebp
fstl
push
dec
mov
loopne
inc
imul
andb
bound
sarb
aam
insb
sbb
lret
sbb
scas
mov
pop
inc
es
fistpl
imul
js
and
scas
fmull
mov
jp
pushf
dec
xchg
dec
in
mov
cli
xor
fdivs
imul
xor
lds
mov
cmp
xor
cld
sub
adc
ficoms
clc
mov
sbb
adc
ret
push
fmul
inc
ds
es
xchg
loope
sub
popf
decl
push
cmc
jecxz
inc
xor
push
orl
sub
lock
push
mov
int3
dec
inc
lret
aaa
mov
lcall
sbbb
pop
push
inc
fisubrs
loopne
repz
and
adc
sti
pushf
rcll
add
xchg
sbb
inc
sbb
ds
pop
loop
cmp
push
adc
dec
lea
aaa
pop
mov
rolb
pop
rep
in
popf
push
and
adc
cmp
fiaddl
into
inc
or
aas
mov
sti
add
push
push
xchg
rolb
pop
mov
mov
test
ficomps
outsl
sahf
mov
scas
popa
je
mov
mov
inc
sbb
inc
int3
movsb
xchg
subb
addb
add
nop
filds
push
cltd
sbb
cltd
ja
sub
add
sbb
scas
repnz
and
jg
or
jno
movsb
push
std
cs
out
push
push
mov
out
decb
rorl
mov
pop
icebp
adc
push
popf
sub
cld
in
icebp
jnp
lds
jle
int3
and
sub
imul
pop
or
sub
sbb
pop
push
in
jbe
seta
add
lock
xchg
stos
fisttpll
clc
sub
mov
adcb
maxps
popf
stos
xchg
stos
jne
bound
aas
mov
jmp
shrl
cltd
jae
insl
inc
loop
sbb
ja
scas
jmp
push
leave
fs
mov
pop
dec
jg
add
int
cwtl
insb
decl
xor
push
or
cmp
das
das
xorl
gs
adc
std
ficoml
addr16
adc
push
insb
ret
scas
cmp
sub
shlb
jb
hlt
in
mov
xchg
add
in
mov
fldt
push
and
sub
stc
js
dec
jo
out
dec
or
fwait
inc
push
push
fdivrs
lock
mov
jns
test
out
outsl
pop
ds
mov
aam
dec
mov
gs
ss
push
mov
adc
inc
ja
sbb
inc
sbb
dec
incl
outsl
cmpsl
movsb
and
loope
out
or
loop
es
test
insl
mov
ss
stos
ljmp
xor
jne
pop
dec
xchg
jp
xlat
push
adc
inc
iret
jbe
xlat
xchg
mov
push
pusha
shll
xor
jns
out
and
test
out
sub
sbb
cmp
jmp
xlat
lahf
test
inc
mov
and
movsb
mov
bound
mov
push
fstps
ds
inc
je
fimuls
jnp
pop
cli
dec
subb
jp
cld
xor
decl
mov
mov
fnstcw
ja
push
jecxz
dec
orl
jnp
jmp
cld
int
pop
xchg
icebp
cmp
lds
aas
notb
insb
lock
in
fwait
mov
stos
cmpsb
sbb
sbb
lock
mov
xchg
movsl
andb
xchg
gs
xchg
or
add
inc
aas
loope
cmp
cltd
outsb
and
test
dec
mov
insl
imul
push
pop
repz
xor
and
cmp
ds
jb
push
jecxz
jmp
xor
sahf
push
loopne
xor
adc
out
sbbb
data16
dec
cmpb
mov
aaa
xor
enter
sbb
jp
in
pop
push
scas
xchg
add
mov
pop
daa
dec
cmc
jnp
in
lods
add
fists
into
mov
sub
or
lods
push
scas
loopne
pop
sub
in
frstor
dec
test
dec
sbb
and
mov
loop
sbb
dec
sbb
sub
dec
imul
add
lods
adc
xorl
cmp
ret
xlat
fadds
xchg
gs
bound
hlt
testl
pop
scas
lcall
test
nop
out
or
out
mov
enter
add
repnz
mov
jecxz
sbb
sbb
push
and
push
push
pop
jp
mov
das
hlt
ss
js
mov
mov
push
xchg
adcb
sub
aaa
in
or
outsl
nop
bound
sub
insl
testb
inc
mov
sub
cmp
nop
sub
rcrl
pop
stos
mov
inc
inc
testl
add
adc
stos
enter
push
dec
js
outsb
cmp
push
popa
sbb
xchg
outsl
int
test
je
sti
adc
push
outsb
insl
mov
mov
lods
aaa
or
ljmp
xchg
in
sub
mov
out
jge
dec
jle
hlt
inc
or
or
add
sbb
notl
xchg
cmc
sub
daa
mov
dec
out
mov
jns
test
sahf
fneni(8087
sahf
aas
lcall
lret
hlt
test
push
xchg
jae
daa
movsb
dec
jg
pop
test
pusha
popa
sarb
mov
sub
imul
stc
lea
fdiv
scas
inc
test
add
stos
push
nop
aaa
andb
loop
idivb
sbb
outsl
mov
xchg
mov
test
jmp
mov
call
lods
and
xor
jl
lock
mov
sub
mov
dec
sar
ja
mov
ja
fs
insb
and
push
xchg
adc
sbb
pop
push
cmp
push
clc
pop
insb
adc
jge
outsb
pop
lcall
jle
jl
out
push
or
daa
jno
mov
jge
adc
or
xlat
inc
imul
test
cmp
sbb
es
mov
fmull
insb
ss
or
push
and
xchg
arpl
and
dec
adc
mov
mov
sahf
adc
das
int
pop
and
int3
dec
jmp
mov
or
xor
adc
vmovups
into
stc
xor
mov
dec
aas
repnz
jge
inc
fidivl
lret
shl
ds
cmpsb
xor
and
inc
loop
push
call
or
es
rcl
sbbl
lods
rcl
mov
cwtl
es
jb
cmp
mov
xor
mov
jno
push
mov
adc
add
cwtl
cmp
mov
push
mov
loopew
subb
ret
rorl
mov
and
jb
imull
push
flds
push
mov
inc
inc
adc
push
push
or
and
mov
cld
dec
enter
add
add
insb
es
push
nop
mov
or
mov
stos
repnz
adc
lret
add
push
pop
loope
dec
adc
xor
cmpsb
xor
mov
fimull
out
pop
movsl
mov
shll
pop
push
sar
std
inc
inc
dec
inc
imul
cwtl
jmp
adc
mov
xchg
sbb
repnz
adc
add
cltd
neg
push
mov
mov
xchg
inc
push
pop
inc
test
ret
lds
enter
test
pop
icebp
test
pop
mov
jae
ja
adc
imul
xlat
jne
insl
dec
xor
dec
xchg
xor
pop
xor
xchg
or
mov
or
cld
mov
xlat
test
test
test
jmp
sub
je
sub
inc
or
xlat
mov
shl
outsb
repz
sbb
sbb
cld
ret
repnz
loop
or
fwait
data16
neg
test
jno
cmc
jbe
push
cltd
int
pop
iret
or
rorl
push
adc
dec
das
mov
ficoml
xchg
xor
jmp
xor
ljmp
leave
filds
sub
mov
jb
xorps
push
adc
cs
lods
push
mov
xor
incl
ffree
mov
loope
les
addr16
sahf
add
in
mov
ret
sar
and
cmp
inc
adc
sub
cmp
stos
xchg
pop
rcrb
mov
mov
push
jg
scas
push
cli
xchg
scas
shlb
adc
loop
lods
out
pop
cmc
adc
xchg
sbb
pand
hlt
adc
inc
cmp
outsb
mov
ljmp
cmp
lcall
stc
loopne
pop
push
add
sar
in
jecxz
xchg
mov
stos
jno
ret
js
loopne
push
in
cmp
xor
enter
xchg
pop
enter
cmp
mov
push
ljmp
adc
cmp
adc
mov
add
lods
fdivr
mov
or
and
gs
xchg
sahf
xor
sub
popf
jecxz
repnz
test
and
xchg
ljmp
and
xor
out
inc
pushf
iret
and
mov
mov
adc
lret
sub
hlt
out
lods
fidivs
stc
push
sbb
mov
mov
ds
mov
cmp
mov
jo
cs
pop
test
cmp
mov
insb
sar
and
test
cmp
fistpll
dec
leave
shll
fcomip
xor
xlat
imulb
test
xchg
add
or
mov
or
shrb
or
jb
jge
xchg
push
jnp
push
das
mov
mov
pop
or
inc
lahf
sub
push
mov
repz
dec
xor
fistpl
cmpsb
fnstenv
lods
or
mov
nop
addr16
sub
mov
andl
adc
out
adc
nop
mov
aam
arpl
xchg
sbb
xchg
jle
fdivrl
nop
inc
lods
push
imul
mov
shll
inc
aam
icebp
pop
fidivrs
mov
ror
cmp
insb
mov
adc
pop
fidivl
cmp
adc
insb
popf
xor
shll
aad
jae
das
mov
fs
out
and
sub
mov
jne
mov
icebp
loope
jmp
mov
addr16
clc
data16
push
xchg
add
mov
jbe
xor
inc
test
mov
jnp
lods
out
outsb
xor
or
inc
mov
aam
ss
cmp
push
push
out
sbb
mov
pop
pop
rorb
dec
lea
push
sbb
rcrl
xchg
pop
add
mov
inc
sub
sub
pop
adc
data16
sbb
mov
pop
jle
bound
outsl
arpl
repz
sbb
mov
sub
adc
fdivr
mov
popf
add
aad
insl
aad
stos
or
adc
xchg
lods
arpl
add
sub
sbb
inc
or
mov
pop
mov
xchg
push
int
cmp
sbb
in
icebp
int
lahf
out
test
mov
aaa
outsb
push
cmpsb
inc
into
jne
loopne
lcall
xor
sub
or
fwait
add
sbb
dec
xor
push
dec
cltd
and
sbb
ss
out
dec
popf
adcb
jecxz
cmp
and
fcmovnu
aad
push
pop
sbb
or
bound
sbb
cwtl
aaa
pop
lods
inc
mov
jns
pop
push
cli
icebp
aad
outsb
addl
or
rcll
adc
and
push
out
orl
push
cli
dec
sahf
pop
into
movsb
sbb
fisttpl
fcoml
mov
lods
bound
popf
and
sbb
dec
imul
lods
popf
adc
aas
scas
out
jnp
outsl
pop
cmp
xchg
sbb
add
xor
sti
pop
xchg
adc
lock
movsl
mov
repz
sub
lock
pop
js
div
push
xchg
cld
inc
out
add
nop
gs
fmuls
push
mov
jnp
jmp
arpl
add
scas
scas
and
inc
out
jo
pop
setae
rcll
sahf
sub
call
ljmp
mov
or
sbb
repnz
jo
mov
test
and
adcl
adc
ret
hlt
cmpsl
add
mov
ljmp
bound
inc
sbb
je
cmp
lds
ja
inc
jo
std
jmp
iret
jmp
cmp
inc
cwtl
fimuls
inc
setbe
inc
repnz
jb
mov
aas
out
insb
cmp
cmp
jo
inc
add
and
cmp
outsl
out
repz
ja
xor
mov
cmp
aam
or
pop
mov
ss
and
dec
pop
push
pop
mov
cltd
dec
testl
sub
pushf
adc
pop
adc
data16
push
xchg
or
jmp
and
adc
xor
inc
into
pslld
push
pop
loope
mov
lcall
lock
sub
insl
iret
pop
add
dec
jmp
xchg
pop
out
jl
test
xor
or
or
aad
data16
aad
push
inc
xchg
sub
ds
cmp
scas
add
aam
cli
cmp
adc
daa
jg
stos
inc
mov
ret
fsub
jmp
aas
rep
in
mov
dec
fisubl
icebp
inc
jg
cli
out
loopne
arpl
pop
adc
xchg
mov
jecxz
xlat
js
clc
mov
adc
popa
ret
adc
out
idivb
mov
jge
mov
mov
in
fwait
enter
decb
xor
or
push
push
mov
add
jo
pop
pop
cmp
jg
sub
or
adc
outsb
sub
jp
and
lea
dec
testl
rcll
sbb
push
ja
inc
inc
je
mov
dec
sbb
push
pop
and
ds
mov
add
cmp
filds
lods
aaa
xchg
lret
imul
jg
out
jo
sub
jp
and
and
roll
leave
jns
lock
andl
mov
outsb
mov
sub
cli
les
jb
mov
adc
pop
out
clc
cmp
bound
or
inc
dec
sub
add
jno
out
in
test
js
sub
inc
popf
bound
in
push
bound
adc
push
mov
mov
mov
orl
nop
xchg
rorb
mov
add
hlt
clc
loope
mov
mov
push
int
adc
mov
pop
sub
out
call
ret
push
add
adc
mov
or
loop
in
shll
mov
mov
repz
pusha
xchg
lods
shlb
xor
mov
test
mov
or
or
jnp
pop
push
and
test
scas
xchg
data16
sar
pop
and
push
mov
mov
sub
jae
in
into
cmp
inc
mov
sub
pop
cmp
mov
lret
push
xor
pop
sub
mov
imul
mov
adc
sbb
push
pop
and
push
cld
into
adc
lds
dec
mov
andb
push
aam
sub
rclb
out
jecxz
in
xchg
pop
push
jl
inc
cmp
iret
xchg
pop
cmp
inc
loopne
sub
add
pusha
mov
pop
bound
ja
cs
dec
push
xchg
fdivl
hlt
insl
lea
enter
and
xor
enter
sbb
rcrl
xor
in
xor
mov
xor
sub
adcl
xor
sub
pop
jl
idiv
xorb
jg
mov
lret
and
fsubs
orl
pop
shrb
aam
xor
or
and
popa
sub
or
jecxz
xor
and
adc
pop
add
push
mov
orl
pop
lcall
push
add
in
mov
leave
mov
sahf
test
mov
gs
pop
mov
mov
imul
lea
rcl
dec
add
sbbl
repnz
imul
test
xchg
push
lods
js
sbb
jno
lds
fisttpl
mov
andl
sub
pusha
movsb
ret
xor
sub
mov
pop
sub
jp
out
js
pop
sbb
mov
sub
mov
or
aaa
jnp
dec
dec
lods
shlb
filds
data16
sahf
std
jg
and
std
sti
xor
je
mov
gs
sahf
out
cmp
push
leave
cli
push
lods
pushf
pop
push
dec
call
gs
dec
jns
in
xchg
or
testb
fcomps
outsl
jle
sbb
or
push
cltd
sub
push
ja
pop
aam
js
arpl
sarl
insb
xor
loopne
jae
and
es
cltd
scas
inc
push
enter
inc
inc
loopne
insb
or
test
push
push
push
adc
dec
sbb
pusha
or
cmpsl
mov
dec
insl
enter
cmp
push
sti
and
arpl
jle
lods
icebp
sub
loope
enter
dec
sub
push
pop
pushf
fincstp
mov
fsubs
cmpsb
jns
sarl
fcompl
dec
sub
mov
or
jp
cltd
lret
test
rcrl
inc
xor
and
xor
mov
fcmovb
pop
hlt
xchg
fstps
fldenv
push
shl
push
sub
xorl
pop
call
rcrb
jnp
xchg
test
inc
fnsave
add
aad
pop
mov
cmp
icebp
cmp
out
fiadds
repz
call
sub
enter
inc
cwtd
sub
roll
mov
mov
lods
xchg
imul
cmp
and
test
sub
imul
mov
test
cltd
mov
shr
pop
xchg
inc
cli
sbb
das
mov
mov
lret
fldenv
sbb
push
scas
jecxz
icebp
xsaveopt
cmp
arpl
pop
in
lds
adc
fstps
sub
add
pop
sub
int3
xchg
stos
push
fnstenv
add
or
and
push
push
leave
cmp
cmp
test
mov
cli
and
jle
and
dec
sbb
push
pop
adc
xchg
iret
fcmove
mov
out
mov
decb
or
subl
loopne
xor
jnp,pn
cmp
pop
pop
stos
and
inc
jne
inc
into
jmp
notb
repz
jge
xchg
stos
mov
mov
inc
pop
popa
mov
adc
hlt
mov
addb
lock
jl
shlb
pushf
dec
mov
aam
mov
test
mull
bswap
xchg
icebp
mov
cmp
or
dec
daa
and
lods
cmp
test
xor
and
adc
jb
fimuls
ror
test
pop
add
ja
push
ret
jl
inc
inc
add
int
push
xlat
popa
int3
push
sub
ret
inc
in
leave
mov
sbb
cli
push
nop
lret
movb
cltd
movsl
sti
inc
stos
push
cltd
adcb
jae
ljmp
cmc
shr
inc
add
xor
divb
mov
jnp
fistps
es
ljmp
pop
dec
dec
je
insl
sarl
and
xchg
sahf
sbb
mov
add
aaa
dec
sub
out
or
mov
and
xchg
dec
dec
fistl
pusha
addb
mov
mov
icebp
daa
stos
ja
fists
or
mov
pop
sbb
flds
xor
adc
fsts
sbb
cmpsb
into
add
std
movsb
jnp
xchg
and
faddl
mov
mov
loope
in
rorb
out
movsb
xor
scas
mov
lock
das
push
sbb
fmuls
aas
push
or
imul
cmpsl
sub
iret
and
dec
cmc
dec
push
cltd
fcomip
xchg
sbb
xor
addr16
je
dec
out
ror
inc
jne
and
inc
dec
jnp
inc
ja
push
iret
faddl
push
xchg
enter
pushf
js
sub
and
repz
sti
mov
repz
push
andl
lods
cmp
fcomi
jns
jl
mov
data16
dec
mov
adc
out
ss
mov
pop
xor
pop
mov
addb
xchg
or
xor
sahf
popa
leave
es
shll
push
enter
fnsave
inc
into
insb
adc
jle
test
inc
sti
jnp
leave
and
into
xchg
or
cmpsl
adc
mov
ds
mov
lock
jge
jno
or
dec
mov
mov
mov
mov
add
loop
mov
or
lcall
jge
sbb
fstp
xchg
xor
dec
lret
inc
jno
xchg
mov
inc
inc
mov
sbb
or
inc
test
aam
mov
enter
mov
adc
into
sahf
mov
pop
mov
adc
stc
pop
cmc
adc
in
inc
push
adc
pop
insl
xor
jmp
push
adc
pop
lods
rcr
testl
adc
sub
out
mov
cmpsl
cmpsl
imul
add
pop
and
jp
pop
int3
cmpb
std
and
push
inc
cmp
int3
rcr
fwait
xchg
add
cld
mov
into
mov
dec
hlt
sbbb
mov
std
inc
jle
das
pop
lret
outsb
cmp
in
jbe
sub
in
dec
push
xor
sbb
jmp
jge
pop
stos
xor
lret
jge
push
lea
or
sbb
pop
int3
xchg
scas
je
decl
mov
and
adc
stos
xchg
inc
fnstenv
mov
outsl
insl
stos
inc
cld
sahf
out
add
adc
pop
and
ss
inc
or
mov
add
mov
jno
push
xor
movsb
mov
rorl
sbb
std
mov
jecxz
or
inc
daa
fistpll
fcmovu
xchg
xchg
or
scas
negl
in
dec
mov
jg
iret
jae
rol
test
das
setg
mov
popa
cmp
sbb
gs
outsb
nop
movl
sub
bound
sbb
dec
ja
cs
test
add
jo
and
pop
push
ljmp
xor
pop
push
cmp
popf
movsb
xor
cmp
mov
add
imul
in
insb
lret
or
in
mov
push
cmp
mov
sub
cmp
lahf
iret
mov
fwait
sub
call
lock
cld
adc
xor
push
cmp
dec
xchg
mov
cmp
sub
xchg
jne
into
in
and
ret
and
xor
lods
repnz
mov
xor
xchg
inc
not
dec
xor
ds
ds
fucom
inc
lcall
lea
les
push
ja
xlat
or
mov
xchg
jnp
sti
xor
outsb
xchg
sbb
clc
testb
pop
setb
lret
pop
repz
ss
jecxz
xor
data16
shll
fistpl
sbb
pop
inc
adc
stos
in
scas
cli
or
in
sub
ret
push
fldt
xchg
xchg
xlat
and
pusha
dec
mov
jns
adc
cli
xchg
das
mov
push
cmc
pusha
popf
xchg
pop
test
or
sub
sbb
dec
cli
cs
xor
fldl
movsb
jne
jl
and
sti
or
mov
dec
jo
and
icebp
xorl
aas
lds
jne
mov
add
je
stos
adc
insb
inc
mov
jo
rclb
sbb
push
fiadds
popf
fld
cs
mov
sbb
adc
xor
out
leave
cmc
inc
xchg
insb
aaa
adc
js
push
pop
adc
sub
mov
addr16
fidivs
rcrl
fdivs
ret
test
push
add
shlb
sbb
push
iret
test
loop
lahf
fdiv
arpl
flds
pop
push
rcl
xchg
mov
out
mov
lret
push
lcall
test
jg
pop
sti
or
les
ss
daa
and
jge
xlat
ret
sub
pop
shlb
test
pop
push
sub
pop
xor
jp
pop
jne
adc
mov
arpl
pusha
lock
das
xchg
test
je
insb
imul
dec
mov
adc
cs
cmp
es
sbb
aam
int3
daa
loop
pop
or
mov
test
je
mov
jl
or
rcrb
jecxz
cmp
aad
cld
sub
fcmovne
fnstsw
test
xlat
rorl
and
mov
sbbb
fs
out
adc
pop
mov
aad
and
out
repz
and
popf
fwait
xchg
cs
enter
rclb
shr
and
rcll
mov
push
inc
clc
push
dec
mov
sbb
sub
pop
mov
push
js
iret
mov
xchg
movsb
int3
mov
adc
mov
pop
sbb
xchg
xor
je
enter
pop
pop
cmc
push
les
scas
sbb
xchg
mov
mov
imull
push
mov
add
sbb
es
lds
int
mov
loopne
and
adc
pop
enter
mov
jmp
movsb
xor
mov
int3
push
mov
push
and
data16
mov
nop
and
loope
dec
and
mov
or
enter
xlat
or
mov
push
mov
cmp
mov
aad
jo
imul
cmp
loop
xlat
xor
jno
mov
lods
push
fimuls
frstor
aad
loope
adc
pushf
ret
fdivr
orb
inc
std
cmp
ds
pusha
sub
mov
lods
xchg
xchg
pop
inc
jbe
xchg
dec
sbb
sbb
sbb
cmp
data16
dec
ljmp
pop
sub
jbe
in
int3
hlt
jne
xor
and
filds
push
out
add
popa
aad
rol
into
add
bnd
add
cld
xor
lock
xor
fmull
data16
mov
in
cmc
mov
nop
int3
notl
push
mov
lods
and
mov
add
mov
push
mov
mov
inc
rclb
sti
fwait
outsb
ss
es
mov
xorb
addr16
xor
mov
pop
pop
sub
lods
sbb
pop
dec
nop
jmp
push
pusha
cmp
call
stos
push
jne
push
inc
push
xor
test
imul
std
mov
adc
pushl
or
arpl
ja
mov
insl
mov
aam
aam
test
scas
xchg
mov
dec
in
nop
or
mov
adc
cmpsb
aad
enter
mov
repz
dec
in
mov
push
sbb
pushaw
jge
xchg
adc
notb
aad
test
mov
aaa
ds
popf
add
adcb
lret
xchg
aad
pop
out
xchg
add
adc
xor
mov
rorb
test
das
movsl
stc
and
jo
mov
in
cmp
xor
xchg
popf
sub
pop
dec
sbb
mov
dec
pop
xor
mov
jne
leave
add
in
out
scas
bound
jno
test
fadd
cmp
xor
outsl
pop
mov
dec
clc
push
dec
mov
cmp
cld
addr16
mov
arpl
ljmp
stos
in
cmp
shlb
imul
mov
xchg
and
iret
dec
js
xor
aam
out
xor
mov
or
mov
push
fldt
lock
add
out
pop
dec
xlat
in
pop
js
nop
gs
movsl
pop
mov
dec
adc
jb
mov
mov
mov
test
mov
pop
daa
jl
sahf
pop
int3
mov
add
bnd
mov
and
mov
inc
scas
cltd
mov
addb
in
lahf
inc
mov
orb
cli
aad
dec
xor
stos
mov
xor
bound
filds
mov
das
xor
js
stos
sub
lods
out
jno
rcl
fisttpll
in
mov
pop
adc
int
bound
mov
scas
inc
add
popl
and
pop
ljmp
sub
fsubp
subb
jae
bound
lock
das
icebp
or
cmpl
mull
sti
mov
mov
fldenv
mov
mov
je
sbb
mov
pushf
push
xlat
pop
lahf
sub
inc
push
mov
jo
in
je
mov
pop
xorl
cwtl
pushf
enter
push
mov
cmp
movsl
inc
js
cmp
inc
and
cmp
pop
insb
pop
mov
pusha
pop
inc
and
rclb
push
ja
or
jbe
lahf
orl
ss
xchg
inc
pop
into
and
popa
iret
pop
or
or
mov
jp
push
mov
lock
jo
lcall
lahf
push
bnd
push
push
rolb
in
jns
insb
push
fstps
xchg
adc
mov
aam
dec
mov
loop
hlt
sub
out
fnsave
test
cld
jmp
or
xlat
push
int
pop
insl
mov
andl
movsb
or
imul
leave
sbb
pusha
pop
mov
in
dec
inc
lcall
dec
insb
pop
bound
pop
loope
outsl
and
adc
xor
out
js
out
xchg
inc
enter
jmp
pop
cmp
cmc
addr16
dec
in
dec
imul
add
mov
pop
mov
pop
push
jmp
repz
xor
daa
stos
sbb
mov
rcr
rcr
mov
mov
mov
add
ja
cwtl
cmpsb
aas
imul
aas
push
bound
sti
loope
adc
jb
add
call
int3
bound
lcall
pop
mov
and
pop
or
jge
sbb
pop
shrb
inc
push
dec
das
lret
mov
or
dec
loopne
popf
mov
push
test
cmc
cmp
sbb
sarl
mov
mov
lock
je
jnp
aad
arpl
aad
cli
jb
push
imul
gs
dec
inc
aas
push
mov
pop
nop
pop
fnsave
or
call
and
scas
sysenter
imul
into
sub
call
xchg
dec
xchg
mov
mov
cs
sbb
stos
sub
sub
lret
test
test
pop
jb
call
jnp
push
dec
out
sbb
push
in
mov
in
in
mov
repnz
in
or
js
mov
lods
cwtl
adc
pop
pop
into
xchg
cmp
addr16
xorb
not
mov
insb
xor
sbb
dec
insb
adc
sbb
int3
mov
xor
mov
cmp
call
mov
popa
dec
gs
pusha
and
and
push
pop
xchg
pushf
jge
call
rcll
or
pop
jg
in
sbb
std
lods
lods
gs
add
push
dec
stos
fimuls
adc
jg
push
mov
inc
mov
xchg
rorb
jecxz
loope
sbb
mov
mov
jg
leave
cwtd
mov
pop
mov
idivl
cltd
xchg
into
adc
jb
pop
dec
xchg
push
sbb
jo
push
and
mov
inc
inc
cltd
es
add
popa
pop
add
mov
cmp
inc
and
sub
pop
adc
sub
xor
shll
sub
pop
jmp
push
xchg
cld
push
lods
data16
push
test
lcall
add
cmc
mov
fistps
mov
std
dec
nop
xchg
sbb
pushf
ljmp
outsb
stos
sti
mov
inc
imul
jl
addb
fbld
mov
sub
je
inc
xchg
dec
je
scas
push
aad
dec
repnz
pushf
aaa
fcmovnu
sub
and
dec
fadd
loope
mov
mov
lahf
xor
fwait
pop
aam
or
repnz
sbb
or
jl
pop
hlt
pop
aam
mov
pop
imul
cltd
pushf
leave
popw
in
popf
mov
dec
add
xchg
aaa
ffree
fstl
jbe
in
ljmp
or
cmp
in
mov
pop
pusha
int3
inc
fucom
pop
mov
lock
lcall
pop
loopne
lret
mov
mov
sahf
sbb
std
dec
outsb
cmp
mov
insl
test
or
and
dec
fprem
jo
xchg
xchg
dec
adc
or
sbb
je
sub
sbb
lods
inc
cltd
xlat
pop
lcall
fisubrs
sbb
mov
into
leave
imul
out
aaa
xchg
jge
add
inc
ret
add
test
testb
scas
mov
lahf
xchg
arpl
enter
bound
addr16
data16
mov
adc
jge
sar
add
ljmp
in
sbb
xorb
cmp
pop
xlat
adc
nop
popf
std
insb
dec
lret
jp
mov
sub
repnz
push
jg
je
fldenv
mov
xchg
inc
mov
fnsave
push
xor
repnz
xor
fsts
push
stos
dec
test
shrd
iret
inc
push
and
mov
popf
adc
aad
fwait
hlt
or
movsl
pop
inc
sbb
pop
loope
fists
pop
pop
fstps
outsl
movb
mov
popa
in
loopne
mov
add
loopne
jne
sub
push
imull
and
sbb
pushf
lods
ja
jae
fcoms
stos
insl
mov
jmp
into
rcll
pop
adcb
cmp
loope
pop
ret
xor
int3
popf
sbb
scas
xchg
pushf
xor
pop
daa
movsl
popa
xor
popa
lock
iret
mov
jecxz
push
fwait
sub
xchg
imul
lahf
cmp
out
jp
inc
sbb
mov
sub
mov
xchg
inc
jb
test
stos
inc
jle
or
add
cmpl
out
cmp
into
bound
sbbl
hlt
movb
adc
mov
adc
add
iret
movb
fisubs
ja
rcrl
incb
das
out
inc
jnp
aad
xchg
in
fisubl
push
cmp
mov
sub
jae
sbb
cmp
or
out
fld
stos
inc
xchg
insl
sahf
movsl
jns
adc
xchg
push
es
adc
cmp
addr16
dec
std
fbstp
dec
pop
mov
addr16
jb
xlat
dec
lret
orl
in
cmpsb
push
pop
ja
mov
lods
lds
mov
icebp
cs
pop
hlt
outsl
sbb
hlt
inc
mov
shrl
outsb
push
jg
push
lea
xchg
dec
push
mov
cmp
stos
inc
orl
fstpl
mov
rorb
jmp
xchg
ror
or
fldcw
inc
movsb
adc
flds
xor
jle
mov
mov
ss
out
xchg
dec
or
inc
adc
insb
mov
cmp
add
fwait
sub
dec
pusha
and
cmp
inc
xor
int
cmp
test
arpl
xchg
pop
adc
jp
jbe
dec
repz
inc
xor
test
sbb
adc
dec
sahf
clc
and
imul
inc
repnz
pop
scas
cmp
dec
jg
pop
mov
fucomip
add
in
jl
ds
imul
cli
into
mov
mov
lret
xchg
sbb
and
sbb
add
dec
xchg
or
jle
xor
pop
add
push
testl
cmp
leave
iret
dec
aas
mov
jecxz
add
lret
add
mov
cmp
test
in
test
icebp
outsl
mov
movsb
lret
sub
mov
inc
mov
jmp
sub
jmp
je
fs
icebp
divb
lock
leave
sub
jnp
lret
and
xor
mov
adc
add
xchg
mov
mov
push
cltd
cli
jns
in
in
add
mov
mov
rcrb
pop
iret
cmc
ljmp
sub
mov
dec
add
test
sbbb
lahf
insl
mov
push
jg
in
imul
jo
mov
adc
insb
cmpsl
adc
shrb
fs
test
test
inc
lds
cmpsb
pusha
movsb
enter
out
push
addr16
scas
repnz
shrl
fsubrs
icebp
push
push
mov
scas
push
es
mov
sarl
and
inc
js
mov
add
and
and
je
out
sbb
fcoml
sub
movb
leave
xchg
xor
test
bound
cltd
mov
inc
int3
adc
push
dec
push
movl
add
add
push
loope
jns
fs
fiadds
and
in
in
jmp
js
call
pop
ficompl
push
inc
or
sub
fcompl
mov
in
fcmovu
or
call
add
mov
inc
dec
xor
fldt
xchg
and
and
je
adc
inc
push
pop
mov
cmpsb
je
jnp
jmp
and
iret
stc
push
push
mov
pop
daa
jge
insb
cmc
loop
shll
in
adc
inc
mov
pop
fcmove
int3
daa
aam
cli
ljmp
jno
cltd
movsb
sub
pop
hlt
insl
add
jnp
ds
push
adc
scas
xor
pusha
loope
push
lds
sbb
mov
adc
mov
pop
pop
jle
jp
stos
and
shll
and
sar
fsubrs
pop
stc
ret
aam
mov
sub
sbb
push
and
xchg
in
xlat
dec
int3
pushf
adc
jo
pop
xchg
pop
mov
aaa
push
pop
jns
in
push
rolb
dec
cmp
imul
xchg
mov
imul
sbb
je
inc
jecxz
jge
insl
lret
rcl
inc
push
mov
xchg
repnz
xchg
dec
mov
in
push
inc
push
icebp
pushf
adc
pushf
inc
cmp
icebp
fdivs
and
sbb
inc
cmp
and
sbb
cmc
rcll
sti
ret
jnp
xchg
mov
jmp
and
pop
in
sub
xchg
dec
ja
ficoml
pop
adc
adc
adc
cmp
mov
push
xor
mov
push
paddb
inc
test
add
fcmove
out
out
add
test
jb
lods
cs
loope
outsb
aaa
jns
sbb
in
pop
fldcw
fildl
lock
pop
sub
cmpsl
or
dec
mov
pop
cwtl
popa
mov
push
out
mov
push
cmpsl
in
sbb
loopne
ret
call
jmp
cmpsb
stc
sub
pop
sub
roll
dec
mov
cmp
jmp
ja
xlat
int3
push
mov
popa
orl
iret
test
xchg
ret
push
scas
movsl
inc
ss
hlt
aaa
inc
push
push
inc
mov
mov
inc
push
pop
xor
inc
movl
mov
xor
nop
test
in
pop
out
lahf
fsubl
push
mov
cmp
jo
sbbb
jg
mov
enter
adc
mov
pop
ret
push
inc
lret
scas
xlat
pop
push
inc
lret
xchg
cltd
shlb
aas
cmpsl
sbb
dec
in
sbb
cmc
pop
ss
ja
int3
ja
lock
inc
pushf
into
and
xchg
xor
adc
addl
aam
fiadds
arpl
push
aad
mov
hlt
rcrl
pop
pop
pop
mov
fiaddl
fxch
dec
mov
adc
add
nop
mov
sub
outsb
js
mov
fnsave
fisttpll
jno
pop
adc
inc
push
push
inc
cmp
es
jg
loopne
pop
xor
loope
jnp
inc
cmp
push
addr16
jae
add
xchg
cmc
jle
nop
and
xchg
sbb
and
push
adc
test
out
sub
cmp
jecxz
cwtl
adc
das
or
loope
jl
fidivrl
lea
adc
mov
fcmovb
xor
cmp
xorb
or
mov
int
movsb
push
sahf
inc
jno
sarl
mov
sbb
mov
push
ja
mov
mov
clc
and
mov
mov
add
jg
dec
or
xor
es
cmp
add
mov
dec
pop
dec
cwtl
jecxz
sub
in
fs
test
in
pop
push
push
stos
outsl
ds
rorb
loop
push
outsl
ja
call
out
sub
dec
push
xchg
mov
pop
out
incl
test
inc
je
loope
mov
xchg
ficompl
push
fistpll
push
aad
popa
inc
mov
push
inc
cmpsb
loop
ret
mov
int3
push
or
inc
cmp
test
aam
ja
inc
pop
and
xchg
dec
loopne
jbe
add
fdivl
sti
aad
dec
push
pop
jbe
jecxz
xchg
jne
movsb
ret
test
sarb
fcmovnb
and
jge
dec
dec
xchg
or
sub
mov
mov
add
mov
mov
adc
adc
and
bound
sbb
mov
cmpsl
mov
mov
jmp
pop
and
cmpsb
stos
ja
jmp
adc
jne
lods
sub
cmp
mov
mov
out
scas
and
fimull
insb
or
mov
fs
test
hlt
xorb
push
cmpsb
ds
loop
push
jne
mov
fadds
sbb
rclb
lret
rorb
stos
jo
or
pop
push
and
orl
int
mov
repnz
pop
lcall
blsic
scas
addl
es
pop
ds
and
fdivrl
fnsave
inc
je
data16
xor
xchg
dec
inc
jle
xchg
test
adc
dec
stos
testb
mov
lahf
fistps
in
lock
adc
jp
inc
ja
jl
xchg
cmp
mov
fldl
inc
sahf
jl
sti
rcrl
inc
notb
lcall
jl
lods
adc
pop
in
pop
fcom
rcll
jecxz
ret
in
mov
cmp
pop
push
pushf
cmp
inc
fistl
push
jb
mov
jmp
stos
in
cmp
shrl
adc
mov
jl
and
test
js
loop
loop
pop
inc
jl
and
fisttpll
or
jo
je
test
pop
stc
add
dec
int3
cwtl
in
out
jg
xor
and
scas
push
xorl
add
mov
cmp
mov
loope
adc
jl
leave
or
shl
addl
pop
das
jb
jb
dec
jae
push
insb
pop
hlt
lcall
mov
mov
cmpsl
lahf
ret
mov
add
inc
adc
imul
or
and
in
sub
push
data16
adc
shr
adc
fwait
pop
imul
xor
loopne
movsb
mov
jg
adc
pop
adc
mov
sub
add
push
ljmp
dec
mov
aaa
and
push
or
pop
rcrl
std
xor
fsubs
or
add
test
ljmp
fcomip
aam
mov
xchg
lock
or
sbb
push
mov
mov
mov
insl
xchg
push
jmp
lret
jae
in
test
inc
cmp
lahf
sbb
clc
xorl
cmp
pop
repnz
scas
aaa
fldcw
push
adc
dec
xchg
lods
mov
sub
add
repz
xchg
mov
shll
sub
sahf
lods
sahf
mov
cmp
scas
movsl
pop
call
or
data16
sti
stos
jle
imul
add
stos
xchg
shrl
xchg
test
mov
fwait
cli
push
lcall
sbb
push
inc
out
mov
dec
and
inc
lock
loop
fst
add
xor
test
fsubrs
ffree
xor
cmc
pop
out
nop
testl
mov
js
jno
jbe
repz
lret
cmpsb
cmp
into
in
dec
lock
jecxz
jb
ret
jbe
mov
loopne
push
pop
dec
hlt
cmp
cmp
cmpsb
mov
lea
ss
or
sub
and
imul
xor
mov
sub
pop
cmpsb
aam
out
cld
mov
pop
mov
sub
push
mov
pop
mov
mov
dec
es
idivl
mov
mov
rcl
pop
dec
mov
sub
test
lock
mov
std
outsb
inc
aad
dec
dec
stc
test
insb
jae
test
jmp
pop
leave
mov
cmp
sub
push
sbb
push
loopne
or
out
lods
adc
insb
jle
mov
addr16
inc
and
addr16
push
lahf
test
push
jns
aaa
mov
push
xor
out
out
nop
xlat
repz
rcll
dec
js
idivl
test
sbb
lea
fdivrl
sbb
mov
popf
and
icebp
xchg
out
inc
movsb
xorb
out
cli
shll
fcmovnb
xor
jns
ret
cmp
jbe
outsl
xchg
push
mov
and
leave
jp
cmp
mov
mov
xchg
test
mov
add
in
idivb
inc
enter
sub
aas
jl
sbb
in
xchg
lcall
jl
pop
fsubl
lcall
roll
mov
std
in
mov
mov
xchg
inc
mov
in
ret
push
icebp
lods
test
push
xor
cs
pop
cmpsl
add
dec
nop
inc
sub
xchg
test
mov
pop
mov
mov
in
das
pop
jns
shll
rorl
rcl
or
mov
je
out
fcoms
cs
sbb
cmp
outsl
inc
mov
mov
jae
in
out
clc
jno
imul
cmpsb
jae
popf
test
repz
pop
out
imul
pop
xchg
aas
add
fs
ljmp
jmp
pop
mov
cmpsb
jne
add
incl
and
popf
sbb
xor
insl
js
cmp
sarb
insb
mov
mov
or
lods
add
imul
dec
test
xor
popf
aam
lcall
xlat
cli
xor
xchg
mov
fwait
outsb
cmpsb
adc
cli
movsl
cmp
and
outsb
mov
sarb
sbb
adc
xor
cmp
inc
sub
fdivp
mov
add
scas
lods
adc
data16
xchg
popw
cmp
sahf
inc
add
dec
xchg
popa
imul
cmp
mov
test
sub
sub
add
test
in
xchg
mov
cmp
adc
imul
aam
inc
shlb
fs
inc
orl
addr16
push
imul
xor
into
mov
pop
out
sub
inc
leave
stos
shrb
dec
cmp
sbb
ret
dec
int
mov
mov
push
arpl
add
outsb
popf
xor
cmpsb
dec
push
jmp
adc
sub
std
mov
sub
sub
ret
mov
bound
inc
sbb
inc
gs
sub
xchg
pop
cmovle
add
js
das
jb
mov
ss
lahf
mov
xor
push
out
divl
pop
mov
or
int3
cmp
xchg
ret
test
mov
cld
aam
sti
movsl
fnstenv
pop
int
stos
addb
lods
sub
xor
dec
call
push
ds
fildl
clc
rorb
enter
pop
les
sub
in
push
fsubrs
adc
test
mov
stos
mov
mov
mov
stos
xchg
jae
ret
adc
add
mov
xlat
clc
arpl
jnp
sub
aas
fistpll
shrl
add
sbb
int
sbb
sbb
mov
adc
jecxz
mov
inc
iret
jne
xchg
mov
sub
sbb
xchg
push
movsb
lahf
and
cmp
and
pushf
xchg
push
js
loope
in
sbb
push
add
mov
mov
call
xchg
ljmp
sti
dec
xorb
test
fidivl
pop
jns
xor
shlb
add
mov
test
cmpsl
jbe
xchg
jecxz
test
mov
sub
rorb
insb
cmpsl
and
jnp
push
mov
mov
rol
adc
sub
pop
or
mov
and
jmp
mov
gs
nopl
pop
jmp
lahf
cmp
in
add
dec
mov
jo
addb
or
sbb
daa
jmp
movsb
xchg
ret
xchg
sbb
insl
push
mov
test
icebp
shlb
push
test
jb
xchg
into
add
aas
ljmp
jecxz
fwait
ret
xchg
inc
xchg
lea
or
mov
jns
mov
cmp
ret
das
push
inc
out
adc
into
and
outsb
xchg
jno
and
hlt
sarb
pushf
and
adc
sti
leave
push
test
push
pop
xchg
cli
enter
lret
add
or
pop
and
mov
xorl
jns
out
cmp
in
push
adc
push
xchg
xchg
xchg
rcll
lret
fwait
xor
dec
jne
mov
sub
sub
or
jl
cmp
add
ljmp
outsl
push
pop
das
dec
lods
jae
lahf
jp
ucomiss
roll
cld
fstp
mov
or
dec
fsin
sbb
sbb
jmp
xchg
inc
sub
pop
mov
pop
and
or
out
test
mov
sub
sub
mov
insb
push
aas
in
cmpsb
hlt
movsl
push
mov
mov
ficompl
xchg
pop
dec
in
ror
push
test
mov
ss
and
push
into
out
jnp
push
clc
and
cwtl
add
arpl
cmp
ljmp
lcall
xchg
pushf
das
cmpsl
scas
xor
fdivs
and
push
xor
les
dec
nop
sbb
scas
imul
xchg
inc
pop
aaa
dec
pop
cmp
mov
movsl
push
jge
test
jo
lea
pop
jl,pt
pop
testl
pop
neg
cmpsl
pop
push
addr16
mov
nop
mov
and
stos
xor
stos
les
dec
push
nop
cwtl
mov
std
add
pop
mov
shll
mov
add
call
adc
xchg
ficoml
push
dec
ljmp
mov
cmpsb
ret
adc
daa
xchg
mov
je
insb
adc
cmc
out
or
sub
daa
out
xor
jnp
pop
jae
ljmp
insb
insl
pusha
cmc
push
test
cs
rcrb
popa
lcall
addr16
jns
sub
push
es
push
inc
inc
jecxz
sbb
imul
cmp
push
cmpsl
fidivl
jne
rcr
add
jnp
mov
aaa
sbb
lret
and
xor
cmp
or
push
out
cltd
scas
aam
jge
mov
cmp
fistpl
int3
mov
adc
xchg
mov
and
mov
xor
nop
and
mov
mov
cmp
cmp
outsb
add
mov
and
sti
sbb
mov
jmp
and
inc
cmp
push
pop
push
pop
adc
ret
test
andb
in
mov
fs
shlb
loop
in
xchg
sahf
or
mov
xlat
js
xor
sbb
popf
xchg
popa
inc
adc
pop
dec
call
xchg
mov
lahf
rcrb
xor
sarl
pop
inc
and
sbb
andl
push
stc
cmp
and
pop
mov
imul
sbb
push
repz
pop
xor
sub
mov
imul
pop
mov
lret
sbb
shll
jb
cmp
jns
popa
rcrl
gs
movsl
push
jno
sahf
jge
jne
mov
out
cmp
scas
insl
icebp
int3
fcmovne
enter
divb
pop
sub
cmp
out
mov
jns
sarb
inc
pusha
cmpsb
stc
cmp
cmp
adc
insb
push
mov
pop
sbb
xchg
sarb
push
jno
je
push
pop
inc
push
xchg
cmovge
lds
ljmp
push
andb
test
add
inc
lret
jb
aaa
and
insb
and
xor
xchg
add
fnstcw
mov
loop
fs
es
adc
dec
and
loopne
cmp
loop
nop
inc
test
mov
cs
pop
adc
pushf
mov
das
and
je
inc
popa
loop
push
pop
jo
fincstp
out
in
orb
push
cmp
int3
mov
fistps
dec
mov
popa
add
dec
adc
pop
mov
cmc
mov
and
stos
mov
jg
sbb
in
lahf
add
add
pusha
mov
aam
enter
out
mov
adc
and
xchg
mov
push
lcall
in
scas
movsb
cmpsl
cmpsl
adc
mov
mov
jo
int
xor
stc
shlb
pop
xor
cmp
pop
rolb
mov
lahf
lret
sbb
mov
lcall
sbbl
pop
daa
push
xor
xchg
pushf
cld
xor
jo
dec
xor
fistpll
fisubrl
dec
push
xchg
fwait
loope
scas
mov
push
sub
xchg
mov
pop
cltd
cwtl
cltd
adc
rcll
or
cltd
ds
add
xor
rorl
loopne
in
dec
xor
outsb
mov
cld
lds
mov
mov
addl
add
xchg
push
dec
mov
mov
sub
js
pusha
cld
imul
shl
enter
in
dec
add
xchg
jbe
or
lods
cs
push
imul
add
cwtl
sbb
shlb
and
mov
neg
out
out
test
aam
fsubr
repnz
imul
jne
adcl
add
push
lock
and
push
push
mov
add
movsb
mov
popa
enter
mov
pop
lods
pop
xor
add
sub
and
push
fldl
dec
test
in
enter
xor
cmc
xchg
pop
inc
mov
fdivrp
jl
xlat
out
adc
xchg
call
jbe
xchg
mov
jge
sarb
lret
jnp
cmp
dec
fnstenv
loope
hlt
stc
insl
dec
mov
mov
int3
mov
shrl
imull
dec
mov
xor
mov
stc
hlt
lret
xchg
movsl
repz
push
popf
cmp
adc
fdivr
mov
in
inc
and
call
and
jbe
pop
jmp
mov
je
aaa
mov
pusha
bound
xchg
dec
cmpsl
scas
dec
out
je
xchg
jle
les
add
daa
pop
and
push
in
enter
shll
outsb
lret
sub
stos
aaa
jmp
and
movsb
fadds
xor
lea
jns
arpl
addr16
mov
mov
xchg
sahf
inc
xchg
mov
inc
xchg
sbb
test
das
popa
into
xchg
pusha
xor
and
xor
pusha
push
lea
add
out
ds
xchg
movsl
xchg
iret
xlat
sub
lret
enter
mov
xchg
jbe
outsl
jp
jl
sbbl
jae
jne
outsl
mov
pop
mov
lods
cmpsb
rcrb
aaa
cmpsl
and
movsl
cmpsb
pop
fistpl
sub
insl
iret
inc
inc
stc
pushf
pusha
insb
incb
dec
xor
loopne
into
shll
mov
adc
xchg
cmp
clc
in
int3
or
jge
inc
out
ss
cmpsb
mov
add
pop
jb
jns
jo
jl
andl
shlb
out
cmp
sub
and
rcll
mov
dec
pop
push
mov
mov
fildll
jg
fsts
mov
jne
mov
loope
ret
jg
daa
push
or
sub
mov
fistl
shl
inc
fistpll
call
mov
fbstp
sti
pop
and
xchg
inc
cmc
jb
clc
xchg
inc
and
idiv
jp
cmpsl
xchg
xor
and
sbb
inc
pop
mov
insl
sbb
outsl
and
cmp
or
les
mov
aam
cmp
popa
scas
and
lret
std
imul
movsb
mov
adc
repz
sbb
repnz
jmp
xor
gs
iret
loop
in
mov
lds
jle
lret
aam
rcll
dec
xchg
sub
mov
xchg
dec
test
jmp
jp
mov
mov
dec
cmp
push
repz
popa
mov
daa
mov
aas
or
jmp
mov
arpl
test
out
mov
orps
in
jno
xchg
sub
sti
mov
lock
and
adc
les
jmp
xor
mov
jle
sbb
lods
mov
int
out
loopne
push
mov
repz
outsb
xchg
mov
push
inc
and
xchg
shll
jmp
hlt
or
xor
jno
out
pop
movsl
cmp
cmpsl
outsl
icebp
and
leave
rorl
and
cmp
pop
jmp
das
jbe
data16
jb
sub
jnp
pop
popw
or
dec
and
dec
enter
mov
xchg
mov
and
out
hlt
push
xchg
add
imul
gs
adc
std
mov
fisubs
cmp
mov
call
popa
jp
arpl
xchg
sahf
addb
sbb
notb
adc
or
add
fsub
sub
push
ss
aad
lea
test
mov
or
inc
daa
popf
mov
fists
ficompl
cmp
add
mov
lahf
sbb
push
mov
sti
ret
xor
test
push
sub
push
mull
dec
xchg
iret
cmc
icebp
and
cld
jns
and
repnz
push
mov
mov
pop
test
aad
sbb
pop
in
out
mov
pushf
adc
xchg
out
inc
mov
jg
loope
lahf
les
jmp
cmp
andl
jo
pop
iret
push
ud0
and
xor
loope
mov
push
mov
stc
dec
adc
imul
call
pop
nop
or
in
stos
jge
fwait
push
call
and
xor
pop
loop
xorl
fwait
push
nopl
pop
das
outsb
lahf
lahf
adc
ficompl
cmpsb
xor
jg
das
or
jle
jge
pop
mov
cmpsl
push
cwtl
mov
sbb
cld
gs
in
xor
cmp
ss
push
dec
and
cwtl
mov
les
out
or
jnp
cwtl
lahf
mov
dec
ret
adc
xchg
aaa
adc
push
xchg
rorb
jmp
in
mov
fcompl
fcomps
mov
insb
dec
lahf
fisubrs
sub
fwait
pop
test
addr16
cmp
clc
popf
jne
and
xor
push
sub
mov
popa
leave
lret
pop
scas
jge
andb
out
shlb
rorb
cmp
sub
mov
xor
mov
aam
mov
subb
push
xor
cltd
adc
lret
test
cmp
fisubl
aad
mov
inc
add
mov
sahf
rcrb
push
xchg
add
dec
ltr
shlb
xchg
sub
jb
cmp
add
dec
das
pop
xor
andb
mov
push
leave
sbb
mov
int3
rcll
cmpsb
int3
xchg
mov
mov
cwtl
lods
repz
faddp
mov
dec
movsb
sbb
or
cltd
cmpsl
cld
mov
add
mov
shll
cmpsw
lret
pop
js
lret
pop
pop
sbb
ss
test
xlat
push
sbb
mov
lret
mov
movsl
ljmp
push
std
push
sbb
xor
sub
ss
sub
jne
cmpsb
aad
mov
cmpl
in
pop
adc
push
jmp
out
jno
mov
sti
popf
pop
adc
in
inc
icebp
lds
push
mov
inc
cli
in
push
pop
lea
sbb
sub
lret
ljmp
xlat
lods
mov
pop
daa
jne
cmc
mov
mov
divps
bound
mov
jecxz
mov
pop
stos
sub
movsl
push
jp
inc
sbb
imul
cmp
cmp
adc
xchg
dec
loopw
xor
cmp
cmp
xor
xchg
nop
stc
out
mov
enter
enter
cld
mov
sub
pop
xchg
sarb
hlt
mov
jge
out
pop
sub
out
push
and
mov
adc
push
sub
mov
push
inc
cld
xchg
push
fnstcw
push
dec
dec
jbe,pn
shr
xchg
inc
mov
into
cltd
dec
dec
mov
cmp
into
adc
jle
outsl
test
repz
xor
lahf
xchg
mov
mov
inc
int3
lcall
lea
mov
jb
push
xchg
cs
and
ret
loop
or
pop
jg
inc
jle
shrb
shrb
popf
aaa
orb
mov
cmpsb
stos
push
add
jp
leavew
inc
mov
repnz
idivl
fcompl
xor
jle
aaa
mov
mov
sub
cmp
leave
xor
mov
les
pop
dec
mov
xor
mov
les
xor
addr16
test
jo
std
lcall
push
mov
push
mov
call
cld
cmp
icebp
adc
je
jp
mov
movsl
xchg
lcall
inc
clc
cwtl
xchg
sub
hlt
test
fistpll
into
pop
pop
rcll
cmp
push
add
out
dec
in
pop
ds
mov
enter
sbb
sbb
das
sbb
call
mov
xor
lods
push
and
inc
pop
repz
sbbl
fcompl
fsubrs
xchg
imul
xchg
pop
mov
pushf
and
syscall
out
dec
lahf
pop
scas
lods
xchg
out
dec
jecxz
mov
xchg
pusha
jae
or
lahf
fistps
in
sti
add
out
or
xor
shrb
in
pop
jns
jp
mov
in
mov
xchg
stos
pop
sbb
mov
stc
mov
in
cmp
repnz
adcl
adc
cltd
add
outsl
and
les
dec
lods
jl
test
jmp
dec
sbbl
orb
adc
jb
jecxz
xchg
jle
add
sub
mov
stos
adc
jmp
bound
fcomp
push
xchg
movsb
xchg
and
bswap
pop
sub
out
xchg
insb
jecxz
sbb
adc
xor
and
jno
mov
or
xchg
mov
jae
test
fldcw
mov
or
mov
adc
movsl
cwtl
inc
sub
mov
scas
cmpsb
pushf
inc
adc
mov
jne
cltd
xchg
sub
jmp
inc
inc
xorl
insb
inc
ret
cmpsl
ljmp
stc
clc
das
into
jns
sti
mov
ret
fucomi
mov
cmp
xor
xor
pushf
xchg
cmovo
jp
imul
xor
dec
inc
push
scas
ret
xchg
push
dec
inc
xchg
in
jg
dec
addl
into
movsb
lahf
xchg
gs
insb
in
dec
js
lahf
xor
rcrb
mov
and
les
fucomp
movsb
pop
loope
and
xchg
push
frstor
sbb
cmp
sub
xrelease
sarb
fwait
std
mov
mov
lcall
mov
push
gs
push
jo
push
inc
cmpsb
cmp
fs
sahf
jecxz
mov
cmc
mov
orl
cmp
mov
out
pop
inc
loop
mov
scas
mov
pop
mov
pushl
jmp
int3
leave
add
call
sbb
movsb
mov
mov
cmp
xor
push
jns
mov
imul
fbld
fadd
imul
addr16
jno
adc
into
push
dec
mov
mov
jl
sbb
test
je
mov
or
cmp
sub
test
jmp
mov
inc
xchg
xor
not
arpl
cwtl
lds
mov
pop
cmpsb
sbb
sub
pop
xchg
mov
xor
lcall
jbe
inc
push
and
or
mov
or
add
les
mov
xchg
push
scas
and
push
pop
test
int
xor
xor
inc
bound
aaa
sbb
or
or
xor
and
inc
and
pop
xchg
pop
int
jle
mov
stos
cmpsl
pop
ret
loope
mov
inc
and
jae
sahf
lods
jo
ds
iret
mov
les
mov
into
mov
dec
pop
add
mov
xchg
repz
xor
or
or
jo
mov
inc
pop
or
call
int
xchg
adc
test
stos
sbb
push
mov
call
fisubs
loopne
mov
movsb
insb
dec
pusha
cld
mov
and
xchg
lods
adc
in
cltd
mov
sub
scas
mov
mov
jae
sub
adc
xor
push
adc
sub
inc
fdivrl
mov
sahf
loope
xchg
jo
xor
and
mov
pushf
lea
push
dec
stos
jl
test
mov
sbb
ret
mulb
xchg
in
nop
xchg
xchg
and
pop
jp
data16
and
pop
fisttpl
dec
cltd
inc
subb
cmpsb
cmpl
icebp
outsb
lret
stos
mov
cmp
jne
cs
loop
sbb
mov
nop
fstp
and
orl
xchg
out
daa
lret
sahf
or
in
loope
push
mov
mov
inc
xchg
mov
test
jnp
iret
insb
and
daa
push
stc
ror
fmull
jecxz
in
mov
jg
outsb
lods
xlat
dec
test
scas
xchg
sub
mov
jae
mov
imul
daa
xor
jnp
jge
mov
mov
mov
push
rol
aad
add
sahf
add
mov
fs
adc
out
pop
jg
clc
inc
iret
dec
scas
ja
ljmp
xor
sub
outsl
das
popa
adc
dec
push
mov
push
pop
je
pop
sbb
xor
cmpb
rep
pop
mov
cmp
out
nop
sbbb
jo
dec
add
pop
cwtl
loope
sbb
mov
gs
loopne
mov
cmpsb
clc
insb
or
dec
adc
mov
or
sarb
jge
sub
push
xchg
pusha
in
insl
test
ret
xchg
xor
xlat
jmp
xchg
in
pop
sub
je
inc
mov
ret
dec
push
std
mov
int
or
xchg
jge
les
aas
jnp
fiadds
mov
movsb
pop
mov
adc
jae
mov
jp
jmp
std
or
cmc
pop
jge
popf
cmpsb
lahf
xor
xor
repz
sub
jecxz
sti
sub
out
jp
fldenv
xchg
lret
in
pop
imul
popf
movsl
jge
pop
pop
jae
das
clc
add
xor
repz
mov
cld
jmp
mov
push
outsb
stos
inc
fcomps
push
jmp
cmp
inc
repnz
mov
mov
in
inc
and
pop
rorb
in
xor
out
xchg
jecxz
xchg
iret
nop
sti
into
or
add
arpl
push
lahf
or
push
pusha
cmp
sarb
cmpl
aam
lods
and
inc
push
aas
dec
sbb
sahf
adc
jo
adc
mov
rcrl
es
orb
imul
pop
cltd
cmpsl
cmp
cmp
arpl
shll
sahf
xor
fisubrs
les
js
and
hlt
test
xchg
dec
xchg
cmp
inc
ret
sub
or
cli
adc
adc
movsl
cmp
cmp
enter
add
add
and
mov
aas
mov
enter
lret
stos
popf
stos
lahf
and
clc
sbb
sbb
cmp
into
into
out
stc
add
mov
aad
push
aad
imul
cmp
push
mov
push
ss
xchg
fdivrs
xchg
mov
lock
inc
int3
sar
dec
fdivl
imul
or
push
lret
cmp
inc
lea
jae
lods
add
fdivs
xchg
sub
jo
adc
mov
clc
add
sahf
inc
sub
push
mov
fisttpll
enter
nop
or
ds
mov
test
mov
mov
add
xchg
sub
jg
push
sbb
xchg
adc
sbbb
mov
cmc
mov
jns
ret
xor
adc
movsb
arpl
cwtl
pop
loop
dec
scas
loope
xor
mov
repz
and
test
jle
mov
cmp
gs
sbb
mov
lcall
scas
mov
mov
jg
sub
fldcw
fcmovnu
cld
out
pop
ret
and
test
cwtl
add
scas
sub
jae
mov
xchg
dec
sbb
rol
cmpsb
xchg
repz
dec
fimuls
inc
cmpsl
inc
add
test
push
lcall
push
imul
and
clc
mov
sbbb
lds
pusha
xor
add
imul
mov
imul
push
je
inc
sub
test
cs
lret
imull
cmp
push
fnstsw
ja
loope
in
sub
jecxz
std
mov
movsb
mov
xchg
gs
test
mov
inc
cmp
out
sub
gs
dec
add
stc
xchg
aam
and
sbb
push
sbb
push
push
insb
push
or
ret
dec
aad
int
sti
xchg
ljmp
adc
loopne
insl
inc
sbb
testl
fsubrl
mov
inc
stos
mov
stos
jne
mov
call
inc
mov
mov
cmp
pop
fstl
or
pushf
aam
in
repnz
aas
push
sti
lock
cli
and
popa
pusha
inc
int3
xor
adc
fucom
adc
div
cmp
xchg
stc
in
adc
pop
popa
or
add
out
adc
imul
ss
dec
inc
jbe
in
inc
lods
aad
lret
jne
test
mov
ret
into
sbb
jg
or
cmp
xor
mov
bound
daa
inc
or
cmpsb
add
loopne
push
jno
lods
shr
cmp
lea
pusha
sbb
or
mov
fnstenv
je
loope
pop
and
jnp
xor
arpl
lds
pop
fistps
push
mov
cs
dec
or
mov
ljmp
in
push
and
out
cmp
add
outsl
pop
ss
cmc
sub
push
ss
lret
xor
ret
idivb
jge
cmc
or
lret
outsl
cmp
xchg
mov
lock
lock
aam
in
inc
mov
push
dec
cwtl
cmp
jno
negb
les
pusha
fisubs
push
jp
lahf
andl
add
sub
push
shl
mov
out
push
push
mov
dec
inc
dec
out
loope
stos
jg
int
push
mov
aas
sbb
out
mov
out
and
xor
dec
xchg
and
push
lods
jl
push
bnd
out
lahf
jne
sti
mov
mov
cmp
cmp
in
or
imul
or
push
and
pop
mov
xor
das
in
sbb
arpl
std
add
rcrb
imul
lock
mov
aas
mov
push
dec
mov
xchg
shll
leave
test
dec
xchg
and
subb
cwtl
daa
adc
mov
mov
bound
ds
mov
or
pop
add
add
ret
imul
aas
fadds
adc
xchg
mov
jns
lcall
ret
mov
sub
je
cmp
ret
cmpsb
and
cmc
inc
std
out
jo
pushl
pop
mov
cmp
sbb
cmpsl
inc
hlt
enter
int
mov
cmp
stos
cmc
jns
mul
mov
scas
xchg
sbb
outsb
inc
in
cmp
mov
mov
icebp
and
loopne
fstps
imul
aaa
inc
mov
leave
jge
in
push
sbb
test
dec
call
mov
out
mov
cwtl
mov
xor
hlt
lock
and
lret
daa
push
adc
add
jecxz
xor
adc
mov
incb
popa
push
mov
push
and
pop
scas
popa
jle
int
xlat
andl
fildll
push
and
add
sbb
mov
jns
js
pop
push
pusha
xchg
dec
movsl
loope
sbb
outsl
add
push
dec
je
or
xor
push
gs
popa
jo
or
ljmp
popa
dec
sub
sbb
sti
jl
outsl
lods
shll
ljmp
enter
sbb
stos
sbb
clc
cltd
mov
lcall
push
pop
repnz
popl
adc
aad
montmul
cmpsb
inc
scas
lcall
je
out
or
ret
call
xchg
movsb
jnp
push
sbb
xor
stc
xchg
pop
lahf
aam
rcr
loopne
loope
scas
das
test
pop
repnz
jb
cmp
push
push
xorb
pop
nop
mov
push
bound
rclb
or
mov
add
xor
int
lods
mov
js
mov
jnp
mov
push
cld
push
icebp
pop
lcall
repz
std
bound
push
or
cmp
into
mov
cmpsl
dec
mov
fmuls
ja
subl
cmpsb
sti
lcall
cmc
jae
and
icebp
in
scas
daa
or
mov
mov
out
jne
and
adc
pop
mov
dec
xchg
add
mov
pushf
push
lcall
lret
movsb
or
jb
pop
ss
and
mov
bound
out
adc
leave
or
inc
adc
incb
call
mov
xchg
xor
lock
xor
in
cmp
jb
xchg
mov
das
mov
pop
fsubp
jle
cltd
push
rcrb
sub
ret
cmp
dec
dec
push
dec
popa
pusha
dec
sub
add
test
xor
clc
ja
insl
cmp
lods
dec
mov
test
lcall
mov
push
push
mov
xchg
aas
dec
jmp
fildl
test
inc
add
dec
adc
popf
mov
pop
ljmp
mov
sub
cmp
dec
shlb
add
jne
icebp
jne
cmp
add
inc
popa
or
xor
stc
lea
push
mov
mov
test
dec
cs
dec
cltd
popf
dec
pusha
sti
mov
mov
pop
shlb
mov
mov
imul
inc
or
lods
std
int3
push
fdiv
repnz
adc
lret
dec
mov
adc
sub
dec
std
add
inc
inc
xchg
lods
push
sub
jns
sbb
ljmp
inc
pop
sub
push
sti
mov
inc
cs
adcb
data16
in
mov
pop
scas
mov
xor
ss
and
or
xchg
mov
jge
cmp
imul
lods
push
imul
lods
scas
lcall
incb
test
pop
jecxz
testb
jle
or
and
cmp
sub
pusha
insl
in
test
stc
jl
sbb
rcrl
xor
jns
pusha
add
sbb
jbe
sbb
cli
jge
lods
cmp
xchg
pop
mov
sub
stos
test
cmp
rcr
dec
mov
cmpsb
mov
push
out
in
nop
jg
aam
ss
push
and
cmp
inc
lcall
jb
push
or
jge
ret
gs
pop
mov
or
push
movsl
xor
add
sbb
pusha
movsb
icebp
in
daa
insb
in
popf
mov
imul
testb
cmp
and
fnsave
outsl
push
xor
dec
and
xorl
pop
aad
mov
mov
lcall
fadds
lea
sub
push
pop
lods
mov
sub
mov
mov
movsb
scas
icebp
lcall
aaa
xchg
sbb
mov
mov
xchg
xor
or
mov
sbb
mov
inc
sub
add
jns
adc
mov
stc
add
mov
sub
aam
push
icebp
sub
sbb
mov
xor
lret
sbb
mov
mov
xchg
xchg
js
pop
lcall
pop
daa
sbb
roll
push
jl
imul
pop
mov
or
loop
sub
lret
cmp
aaa
daa
and
stos
out
dec
imul
cltd
cmp
sub
repnz
cmc
out
push
cmpsl
xor
das
fsubl
shl
xor
or
addb
pop
insb
sub
mov
mov
iret
mov
sbb
adc
cwtl
add
cmpl
dec
fidivrs
push
loopne
sbb
into
aaa
stos
jno
or
out
aaa
jl
mov
sbb
jmp
push
adc
test
cmpsb
xchg
sbb
mov
push
or
rorb
xchg
xchg
adc
jge
adc
sti
pop
fisubrs
mov
xchg
jne
inc
pop
mov
adc
and
mov
cmp
popf
out
rolb
ja
add
fs
aas
scas
mov
mul
sar
xor
or
sub
fmul
push
jl
cmpsb
into
pop
sarb
out
scas
cmpsb
cmp
mov
lods
inc
bound
out
mov
fcmovnbe
repz
int
rep
lods
ret
and
or
loope
cld
xchg
or
ss
and
jns
inc
lcall
pop
aad
in
loopne
ljmp
push
inc
dec
dec
aaa
std
imul
add
loopne
xor
dec
hlt
mov
sahf
loopne
aad
cmp
js
repnz
mov
fdivrs
mov
mov
fildll
xor
aad
sbb
adc
pop
cli
mov
cmp
xchg
or
call
in
fcoms
jnp
pop
pop
xor
pop
int3
or
or
jp
pop
pop
mov
fnsave
dec
or
jb
sbb
dec
xchg
cmpsb
mov
scas
int3
push
adc
stc
jbe
ficomps
cmc
test
cmc
cli
mov
jo
push
dec
pop
push
adc
enter
xchg
or
cmp
lcall
sti
jns
stos
add
pop
lret
jmp
ljmp
and
or
es
add
pop
cmp
sbb
inc
scas
stos
xor
add
and
cmp
xchg
inc
cltd
mov
inc
jmp
mov
inc
dec
push
sbb
jl
pop
rorb
push
std
mov
add
add
inc
dec
dec
push
jge
push
ss
add
mov
jecxz
out
jbe
ljmp
ret
std
pop
mov
pop
lea
cmpsb
ficoms
test
cmp
popf
mov
or
mov
out
dec
outsb
mov
dec
outsl
aad
jl
jns
jns
enter
and
xchg
mov
icebp
jo
arpl
shrl
sbb
fsts
inc
test
icebp
and
cmp
add
sti
scas
mov
xlat
js
in
push
loop
jp
pop
push
dec
push
cli
fwait
inc
jmp
mov
fcoml
push
incl
mov
adc
inc
test
push
xor
rolb
add
gs
dec
jno
rcrl
inc
das
pop
bound
pop
out
dec
aas
dec
stc
addr16
sub
mov
lock
or
aas
jno
pop
jmp
jo
inc
push
mov
ds
inc
iret
xchg
xchg
shl
push
jp
sub
xchg
sub
pop
iret
in
push
popa
cmp
xchg
leave
adc
mov
cmp
pop
and
push
or
jne
add
push
adc
dec
sub
jl
mov
xchg
dec
jo
out
sahf
add
xchg
dec
sbb
addb
mov
addb
jmp
sahf
xlat
sub
add
jno
mov
and
or
inc
test
addl
push
les
fidivrl
mov
jp
test
lahf
lods
push
call
aam
push
lret
mov
pop
inc
popf
outsl
jae
or
stos
jae
mov
mov
and
out
scas
mov
in
mov
push
fmuls
xchg
out
ret
arpl
cwtl
repnz
mov
out
add
es
shl
dec
cmp
push
sbb
mov
add
lahf
sbb
add
dec
push
pop
or
pop
ret
mov
icebp
mov
adc
and
sub
mov
out
ljmp
mov
jae
and
cmp
jmp
or
fwait
xor
or
sub
xchg
lods
inc
fsincos
sub
push
jo
jnp
fcoms
je
clc
pop
in
je
sub
ljmp
cltd
xor
mov
inc
cmp
inc
dec
mov
jnp
inc
dec
mov
mov
sbb
repnz
jb
jg
gs
cmpsb
sbb
mov
cs
fwait
xchg
cmpsb
ljmp
je
pop
pop
jle
fimuls
push
mov
adc
test
jl
xchg
outsb
pop
imull
add
inc
mov
jnp
loopne
sbb
fs
xlat
and
pop
cli
jns
popa
data16
or
xchg
ss
xor
add
dec
cltd
in
mov
push
fldcw
int
pop
xchg
imul
push
fmull
add
stos
loop
pop
fwait
jg
xor
test
fwait
outsb
cld
stc
and
push
jae
rclb
orl
in
jb
scas
rolb
push
adc
lds
sbb
push
daa
push
jne
xor
inc
mov
dec
rcll
je
sar
xor
gs
jne
sub
jl
pop
pop
xor
push
xchg
popf
sbb
loopne
sbb
mov
stos
fsubr
subl
or
adc
lahf
xchg
mov
cmpb
ss
adc
cmp
xchg
loopne
xchg
test
arpl
testl
nop
xor
add
adc
and
add
xchg
daa
fsub
sub
and
sbb
xchg
and
insb
adc
outsb
pushf
imul
xchg
ret
add
fstpl
sbb
cmpsl
lahf
and
ret
movsl
clc
sub
call
push
ret
jmp
pushf
add
pop
adc
cmp
cli
adcl
jno
xchg
mov
mov
rolb
int3
and
ret
sbb
repnz
negb
inc
pop
cwtl
rcrb
mov
in
lahf
push
into
repnz
dec
xor
into
cmp
sbb
mov
mov
mov
shl
mov
test
xor
mov
das
add
in
inc
je
es
mov
add
xor
adc
popa
sub
fstpt
das
in
cmpsb
or
shll
mov
pop
lock
dec
mov
scas
lock
test
sub
pusha
ss
mov
cwtl
sbb
adc
cmp
xor
pop
push
ret
loop
or
dec
ret
jmp
push
mov
outsb
lret
dec
imul
or
in
fs
mov
sarb
sbb
jle
negl
add
shrl
shlb
cmp
push
xor
mov
pop
inc
xchg
mov
cwtl
or
cli
push
repz
test
dec
stc
or
mov
pop
leave
cld
sti
jl
cmp
fcmovnu
insb
andb
lods
loopne
and
cmp
out
pop
test
sub
xchg
jle
mov
pop
sub
pop
ja
jnp
outsb
fmull
jb
adc
aas
data16
jge
cmpsl
aas
mov
repnz
push
push
fsubrl
cmpsb
loope
dec
dec
adc
das
mov
pop
cmp
inc
in
ljmp
xor
cmp
test
xor
mov
jle
mov
pushf
bound
inc
dec
pusha
xchg
adc
dec
imull
shll
in
aad
xlat
aaa
fbld
jecxz
xchg
rclb
ds
insl
mov
shrl
inc
fwait
cs
push
xor
jp
mov
fidivrl
jae
sarl
adc
pop
cmpsl
dec
clc
fmuls
fidivs
daa
push
or
aas
ja
cmp
jp
jnp
push
adc
bound
cmp
int3
and
mull
arpl
jno
loope
mov
movsl
outsb
bound
inc
loope
cmovno
sbb
lret
pop
sti
icebp
xchg
mov
xor
movsl
enter
pushf
scas
push
mov
fwait
jno
insl
lds
shll
es
rcll
dec
cmpsb
lahf
pushf
inc
jl
jno
push
js
sub
dec
mov
testl
fs
mov
aas
dec
data16
rcr
sbb
sub
jp
pop
popa
fbstp
dec
rorl
push
scas
jne
je
loopne
out
xchg
inc
dec
xchg
es
xchg
daa
mov
add
add
inc
in
cmp
xchg
lahf
dec
loop
scas
es
imul
mov
sbb
fisubrs
xchg
out
xchg
and
mov
adc
and
sub
and
dec
inc
sbb
sub
jmp
ret
pop
enter
jecxz
daa
lds
shr
in
cmp
gs
das
scas
xor
mov
sbb
inc
cmp
nop
jb
sub
pusha
cs
push
popl
and
mov
cs
mov
adc
adc
stc
mov
push
fbld
popa
les
test
inc
xor
mov
mov
cmp
ret
ret
mov
test
repz
adc
cmp
jo
movsb
fildll
xor
adc
xor
shrl
add
jecxz
sbb
outsl
pop
das
pop
jne
or
dec
inc
mov
mov
imul
push
add
fiaddl
out
cmc
mov
push
ror
iret
jp
shlb
xor
sub
outsl
or
jne
int
rclb
roll
out
in
scas
dec
std
sub
jns
out
aad
shlb
cmp
push
xchg
jle
xlat
adc
mov
dec
xor
fbld
or
mov
aas
pop
mov
push
lret
inc
jbe
inc
and
roll
xor
roll
pop
sysret
inc
add
or
pop
pop
xchg
jb
cmp
scas
cmp
add
addr16
cwtl
loope
mov
mov
pop
jns
ss
jno
mov
scas
repnz
fisubrl
inc
bound
scas
jmp
push
inc
out
outsl
shl
pop
ror
jb
fcoml
repnz
decl
sbbb
add
stos
iret
push
mov
sub
cmpsl
cmp
lds
jge
add
cmpsb
mov
into
inc
sbb
scas
xchg
fsubrs
pusha
push
dec
daa
xor
je
sahf
xchg
dec
jae
test
and
cmp
mov
add
cmp
repz
outsb
mov
xor
cmp
inc
pop
jae
fisubs
mov
ret
ficoml
lea
cltd
sahf
or
and
push
pop
or
mov
mov
shll
cmpsl
mov
xchg
mov
mov
dec
jg
adc
mov
out
in
cli
adcl
mov
pop
mov
mov
repz
inc
xchg
dec
test
addr16
repnz
or
mov
or
out
sahf
lret
popf
fcmovnu
mov
pop
mov
mov
int3
cmp
test
mov
data16
jecxz
addr16
cmp
dec
mov
adc
je
stc
and
inc
mov
sub
lret
mov
mov
fwait
or
jne
adc
push
mov
mov
int
aam
insl
sub
cwtl
push
hlt
pushf
out
or
ja
push
cwtl
test
sbb
stc
mov
in
xor
iret
mov
mov
scas
xchg
sbb
sub
sahf
sub
and
jmp
adc
or
loopne
insb
mov
push
je
push
orb
add
push
gs
sbb
addr16
sbb
xchg
fdivs
push
push
pop
xor
icebp
fldt
bnd
into
mov
mov
pop
mov
jb
mov
adc
rorb
sbb
das
sub
hlt
sbb
and
inc
lea
mov
movsb
rclb
loopne
test
adc
mov
cmp
mov
mov
pop
jae
xchg
sbb
fstl
mov
sarb
mov
cmp
pop
jp
loopne
xlat
mov
rclb
inc
dec
pusha
cmp
imul
jp
test
mov
dec
popf
cmp
mov
lock
add
mov
rep
inc
insb
mov
sub
stc
ret
call
push
jp
and
sub
idivb
divl
push
lods
sub
leave
lret
push
cmc
out
cmpsl
test
cmc
push
sahf
lds
gs
popf
xchg
lods
push
out
cli
add
mov
movsb
testb
pop
int
xchg
insb
sbb
mov
jo
fistpll
mov
pop
sbb
cmpsl
push
setns
push
ret
out
popa
fwait
out
mov
push
leave
das
shlb
cmp
insb
out
aas
insb
push
mov
stos
pop
add
mov
or
lods
mov
sbb
inc
sub
xor
pusha
movsb
xor
mov
xchg
popf
repz
repz
mov
addr16
jno
lds
sbb
mov
stos
push
dec
add
jnp
bt
andb
adc
or
sbb
jns
inc
xchg
dec
xchg
pusha
add
sarb
negb
int
mov
test
aam
sub
adc
sbb
shrl
fcomps
mov
clc
mov
or
sub
mov
dec
sbb
cs
mov
movsb
dec
pop
lock
imul
xor
pop
inc
mov
xchg
or
pop
jmp
xchg
das
and
pusha
mov
out
xor
daa
repz
lret
dec
scas
mov
ficompl
xor
das
xchg
iret
or
mov
xchg
and
leave
jecxz
push
xchg
pop
jl
sbbl
je
pop
data16
and
adc
jns
mov
negl
mov
out
push
push
jnp
cli
es
icebp
jge
shlb
shl
add
in
addl
sub
arpl
pushf
dec
imul
test
imul
push
pop
mov
ret
mov
es
inc
xor
lds
mov
fmull
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
xchg
lahf
pop
.byte
cmpsl
.byte
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
or
add
lret
adc
xchg
push
pushf
inc
mov
mov
ds
and
xor
push
inc
mov
ss
sub
and
xor
and
xor
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
push
mov
or
fbstp
gs
in
nop
mov
sbb
dec
cmpsl
pop
aas
ficoms
lcall
pushf
lcall
mov
mov
outsl
fnstcw
cld
mov
mov
push
out
popf
mov
push
jno
inc
and
mov
sub
loop
jle
std
leave
xchg
mov
adc
popf
adc
js
or
repz
ljmp
jae
outsl
mov
add
movsl
jne
sub
pop
xchg
ja
add
jno
rcrb
mov
xor
std
in
inc
fildl
push
out
roll
xor
enter
lret
xor
mov
mov
mov
adc
xchg
cmpsb
fcoms
mov
jo
push
dec
pop
dec
loope
fistl
fldl
cmp
pop
pop
jl
gs
and
mov
fucomi
adcb
ss
inc
arpl
sub
fldcw
in
pop
in
add
sbb
jmp
xchg
mov
adc
jne
cmpsl
sbb
aaa
lea
jle
popf
js
sbb
xor
cltd
ret
cltd
mov
out
mov
popl
adc
or
jae
fwait
imul
bound
mov
xor
cld
or
ja
rorl
xchg
sub
sti
lcall
outsl
pop
test
xchg
xlat
push
mov
movsl
fs
aam
inc
adc
rcrb
cwtl
stos
sbb
push
dec
subl
stos
mov
out
out
rep
xchg
adc
push
mov
leave
and
push
aad
mov
call
push
popf
out
mov
mov
adc
pop
fnsave
sbb
fadd
sub
jge
test
jae
aas
and
adc
lock
dec
daa
cmp
mov
pop
movsl
sarl
lret
mov
sbb
stc
dec
mov
sbb
mov
daa
mov
jns
jbe
leave
mov
cli
mov
push
mov
mov
es
inc
gs
dec
jbe
addr16
jnp
add
lcall
mov
aad
adc
shll
add
out
adc
sbb
dec
fbstp
add
imul
add
adc
fidivl
push
or
lahf
out
pop
mov
ret
mov
gs
or
dec
xchg
add
scas
mov
add
shl
mov
add
ja
sbb
cmp
idivl
out
pop
fwait
xchg
mov
jle
fstl
cltd
dec
dec
mov
popa
notb
mov
lret
rcrl
adc
scas
jp
fimull
push
and
mov
push
dec
cltd
imul
sub
jmp
test
out
cld
pop
push
jge
sbb
mov
adc
bound
inc
rcr
in
rcll
insl
adc
inc
sarb
fnstenv
xchg
adc
xchg
xchg
mulb
mov
sub
cmpsb
in
sahf
or
test
mov
popf
movsb
pop
insb
fsubs
cmp
mov
jnp
jmp
pop
daa
or
mov
adc
dec
lret
jmp
push
xor
scas
or
xchg
mov
xor
cmc
mov
imul
pop
das
rcl
mov
outsl
and
sub
notb
test
stc
xor
dec
jno
jae
addl
mov
enter
dec
inc
popa
movhps
inc
xchg
sub
cltd
pop
into
lods
fidivrs
jmp
inc
xor
imul
cmc
cmc
jge
xor
push
call
testb
mov
inc
jmp
mov
cmpsl
addb
out
cltd
mov
and
pop
cmp
clc
ja
movb
jmp
pop
push
mov
adc
or
ja
sbbb
dec
xlat
inc
rcrb
dec
out
dec
dec
sbb
ss
lret
pop
out
ds
das
sub
inc
dec
and
mov
mov
ss
es
jae
into
ja
shlb
jge
aam
add
test
enter
test
insb
jbe
pop
outsl
add
pop
xchg
push
enter
push
cmp
leave
push
lret
fldt
lcall
sbb
push
pop
xchg
testl
dec
pop
ljmp
bound
mov
sbb
mov
iret
pushf
mov
call
or
cld
pop
mov
inc
shl
jl
pushf
xchg
mov
ror
add
fdivrp
mov
sub
and
push
fmul
mov
xlat
xor
mov
mov
fwait
dec
xchg
xchg
leave
pop
mov
or
push
or
test
xchg
hlt
pop
in
lahf
xor
xchg
outsl
and
pop
or
add
cmp
je
cmp
outsb
mov
arpl
sub
dec
int3
jge
pushf
ret
rolb
stos
iret
leave
ret
and
xchg
sbb
add
cmpl
mov
mov
push
sar
ja
sbb
xchg
push
in
mov
add
lock
notl
and
ljmp
xchg
ret
shrb
insb
int
mov
and
roll
fdivrl
ss
xchg
xlat
or
xor
dec
sub
cmp
movsl
sub
stos
push
fldenv
pop
cmpsb
cmp
out
sahf
add
or
fstps
pop
int3
sbb
shrb
rcrb
mov
fiaddl
lret
outsl
repnz
out
sub
mov
int
cli
dec
loop
push
rorl
in
out
sub
and
imul
dec
adc
lods
cmp
insb
fidivl
and
add
lds
inc
mov
cmp
cmpsl
add
jecxz
sbb
hlt
pop
rcll
cli
adc
fldcw
mov
xor
insl
mov
xchg
dec
xor
aas
cwtl
shll
add
cwtl
js
adc
test
pop
pop
mov
jnp
roll
pop
inc
dec
xlat
loope
inc
dec
push
insl
or
inc
cwtl
pop
out
int
test
or
xor
enter
scas
insl
fwait
out
push
dec
sar
data16
jge
jg
orb
jge
sti
xchg
aaa
cmc
outsl
xchg
std
jmp
pop
into
jno
cmc
mov
imul
outsb
std
hlt
xchg
cmpsl
mov
scas
jae
mov
sbb
jmp
ret
iret
fs
test
je
adc
inc
repz
sub
fisttpll
jnp
push
and
jecxz
popa
push
inc
dec
popl
jecxz
xchg
jne
and
pop
jmp
cs
in
sbb
jg
mov
push
or
inc
clc
add
inc
add
and
xor
loopne
cmpsl
sbb
stos
xor
jbe
shrb
mov
fimuls
std
lea
out
add
xor
add
mov
push
push
sub
push
xor
inc
jg
xchg
pop
pushf
and
jb
mov
push
jle
lea
call
sahf
negb
pop
call
jo
sbb
xchg
dec
pop
xchg
mov
mov
or
sub
ljmp
or
fcomi
dec
or
in
int3
pop
lret
xchg
shlb
adc
shll
test
xchg
aam
cmp
pop
xlat
dec
and
pop
ficoms
cmpsl
aad
into
mov
inc
filds
dec
mov
mov
nop
dec
out
and
pop
xor
adc
lock
push
cld
xor
es
cmpsb
arpl
mov
mov
ljmp
push
mov
lods
out
jl
hlt
pusha
mov
es
fiadds
push
mov
test
data16
nop
push
xchg
push
mov
sub
pop
imul
hlt
lds
adc
inc
adc
push
aas
sub
dec
mov
loopne
std
test
pop
out
inc
into
das
cmpsb
xor
mov
into
jne
adc
mov
push
pop
jp
lods
movsl
pop
jnp
lret
add
rcr
jecxz
and
adc
repz
int3
xchg
stos
dec
xchg
push
xchg
and
cmc
mov
lds
iret
jae
das
pusha
adc
cmp
jno
inc
sbb
in
dec
les
gs
inc
jns
out
mov
ljmp
std
lea
shl
popl
cmp
mov
pop
lcall
inc
inc
mov
ljmp
pavgb
lea
fidivl
jg
ljmp
jle
mov
xchg
lock
mov
in
sub
xlat
mov
inc
sti
lods
push
mov
fadd
dec
push
stc
cmp
repz
stc
addb
or
and
push
and
stos
stc
mov
mov
loop,pn
in
movsb
jnp
pop
mov
cmp
jle
xchg
shrb
cld
jmp
imul
mov
aad
mov
pop
popa
clc
xchg
xchg
mov
insb
lahf
jbe
fsub
enter
ret
test
lods
mov
fwait
bound
js
sub
fwait
das
adc
lret
std
pop
or
les
das
pusha
popf
int
int3
push
inc
adc
test
adc
dec
imul
fldcw
mov
jb
xchg
dec
shlb
repnz
xor
xorb
notl
les
jg
shlb
notl
sahf
enter
or
add
repnz
push
xchg
es
jmp
jne
and
pop
mov
add
mov
mov
mov
cli
int3
push
lods
adcl
mov
pushf
test
nop
repz
dec
imul
mov
fldl
orb
aas
cltd
mov
xchg
mov
sub
loop
jae
int
and
lea
movsl
add
fwait
jg
sbb
scas
fs
pop
cmc
dec
fcomps
add
in
sti
jnp
ja
ret
push
dec
ret
repnz
movl
stc
pushf
jns
add
and
jne
or
jbe
dec
call
pop
add
sti
mov
fiaddl
hlt
push
xor
push
fs
mov
xchg
dec
addr16
pop
out
jnp
push
and
insl
dec
jnp
jne
jg
test
out
pop
push
stos
add
sbb
xor
pop
push
push
aas
jmp
cmp
push
cmp
xor
divb
addb
sbb
dec
mov
mov
jmp
test
aad
inc
lods
sbb
adc
cmp
or
jno
insb
inc
sub
pop
cmp
rcll
push
subl
pop
or
push
jge
and
jmp
movsb
sbbb
pop
ficompl
hlt
push
clc
pop
sbb
lock
sbb
in
aas
enter
fmuls
push
mov
xor
inc
sub
sbb
jns
push
inc
jns
sahf
data16
ds
mov
icebp
cmp
dec
test
imul
mov
adc
cmp
mov
xchg
lods
test
add
lret
fildl
je
adcb
dec
xchg
sub
jbe
inc
pop
ficoml
inc
xor
scas
xchg
or
fucom
mov
imul
stos
dec
lock
ja
dec
jnp
pop
sbb
ret
lahf
ss
dec
shl
pop
cmp
fnstenv
cmpsl
shlb
lock
stos
pusha
movsl
lds
cmpsb
inc
ffree
addr16
and
test
leave
scas
add
pop
je
fsts
cli
daa
xor
adc
or
xchg
stos
jnp
into
test
fildll
push
jl
or
cs
pop
xchg
loopne
nop
jo
xlat
pushf
into
jae
mov
xor
jl
dec
das
pop
daa
lret
retw
loope
lods
cmp
testl
adc
mov
sbb
shl
js
dec
mov
rcll
dec
mov
xchg
mov
mov
mov
out
inc
mov
xchg
xor
xlat
adc
or
lahf
push
outsl
fidivrl
scas
cmp
sbbl
cmp
call
or
sbb
push
icebp
repnz
or
adc
xchg
mov
sbb
lret
leave
pusha
sub
imul
or
add
shll
les
rcrb
add
movsb
jmp
pop
sub
int3
jnp
sbbl
leave
add
nop
inc
test
test
fs
in
and
cmp
adc
lods
add
icebp
xchg
cmc
sub
jmp
push
mov
push
jmp
ss
xor
loopne,pn
dec
xor
mov
cltd
mov
cmpb
sub
mov
mov
add
pop
mov
sbb
mov
push
iret
mov
pop
cmc
repz
cwtl
cmp
xor
cmpsl
adc
icebp
in
xchg
orb
popf
ror
mov
add
sti
out
shlb
and
pop
xchg
xlat
sti
push
jns
xchg
test
xchg
add
push
out
test
push
mov
jmp
lods
in
push
xchg
fcomps
stos
mov
movsb
lahf
scas
bnd
lds
push
outsl
test
in
in
and
out
out
dec
mov
xlat
or
data16
inc
jle
add
bound
dec
mov
popf
mov
mov
xor
xchg
cld
gs
dec
sub
adc
pop
nop
leave
push
imul
stos
pusha
dec
and
imull
ss
inc
in
arpl
xor
xchg
push
sbb
repz
ret
lea
and
jne
xchg
mov
sbb
sbb
jns
call
mov
out
pop
push
cmp
jg
dec
or
xor
sub
lock
and
nop
mov
cmpsl
out
xchg
jnp
loope
xor
stos
dec
imul
aas
jns
pop
cs
jg
test
mov
mov
push
sbb
lock
adcb
xchg
test
pop
mov
pop
xchg
ljmp
les
cmpsb
stos
inc
cs
xchg
cmp
mov
outsb
sbb
sub
movsl
shlb
adc
add
aad
jge
aas
xchg
outsl
push
int3
lock
mull
pop
mov
mov
pop
cmp
jnp
rcrb
xchg
pop
nop
mov
sbb
in
std
js
aam
mov
sbb
pop
mov
std
dec
or
jl
js
je
and
fcom
repz
ret
imul
imulb
adc
push
imul
out
adc
in
fstl
lods
aas
or
xchg
mov
test
cmc
fs
imul
stc
sbb
aam
pusha
and
pushf
or
stc
fdivrp
xor
outsb
sahf
ja
cli
addb
sub
sbb
jg
outsb
ljmp
jo
int3
pusha
sbb
iret
jle
ret
jl
rcr
scas
sbb
loope
nop
adc
sub
jb
nop
jae
dec
dec
out
push
fsubs
cmp
sub
cs
lock
push
mov
xchg
cmp
cmpsb
ljmp
aad
sbb
or
inc
inc
orl
cli
mov
push
sub
adcl
pusha
ds
es
push
or
mulb
add
addl
subb
or
jbe
dec
pop
cmp
popa
inc
xor
xor
mov
icebp
xchg
pop
cmpsb
aaa
cmc
xchg
pusha
pop
inc
test
cmp
dec
negl
js
cmp
lret
push
nop
mov
mov
jmp
fnsave
leave
mov
sub
pushf
daa
or
sbb
jae
mov
dec
mov
xchg
sub
popf
jb
and
pop
sti
push
pop
dec
sub
jp
fcmovbe
scas
jg
dec
push
or
stos
adc
pop
sahf
insl
into
xchg
adc
jl
and
mov
cmpsb
aam
adc
inc
cmc
push
int3
lock
push
inc
lods
lock
rclb
jmp
or
mov
jg
xor
xor
adc
fcmovnbe
lcall
push
jg
cmp
mov
xor
dec
xchg
mov
mov
xor
sbb
inc
mov
dec
data16
mov
mov
mov
cmp
add
mov
xor
movsb
inc
outsb
or
xchg
xchg
aas
add
fisubl
and
xchg
fisttpll
repz
xchg
dec
pop
lcall
test
sbb
cs
xchg
call
pushl
and
and
cmpsb
mov
xchg
dec
mov
adc
mov
push
leave
and
fisubs
adc
in
fwait
mov
add
add
sti
push
mov
test
xchg
sti
and
xchg
rcll
xchg
cli
cmpsb
mov
in
mov
out
mov
lds
es
jb
pop
sbb
std
adc
cwtl
pushf
xor
addl
int3
dec
adc
out
or
ja
push
in
dec
shlb
out
pushf
int3
jae
lret
cmpsb
leave
out
clc
outsb
loopne
mov
repnz
enter
mov
ds
arpl
inc
scas
dec
fimuls
cwtl
dec
push
cmp
xor
jmp
xchg
mov
pop
adc
pop
fsubl
mov
sbb
mov
jge
test
shll
dec
out
add
aas
movsl
imul
pushf
adc
sar
icebp
push
and
lret
das
sbb
xchg
fldt
mov
testl
lods
xlat
pop
and
fstp
xor
add
fildl
outsl
clc
shll
push
jno
push
popf
daa
dec
cltd
jg
aam
adc
mov
lods
pop
mov
push
jbe
mov
leave
popa
xlat
or
popl
mov
in
mov
sahf
mov
ret
imul
xchg
enter
jae
cmp
sub
scas
mov
inc
das
jmp
insl
jo
sbb
inc
lret
mov
rol
adc
jl
xchg
cmp
add
inc
mov
ja
xor
cltd
add
loope
loopne
sbb
scas
outsb
aad
sahf
adc
mov
add
aaa
cmc
xor
sub
pop
ljmp
inc
add
pop
mov
sub
subb
mov
cmp
pop
ror
aam
mov
jmp
popa
mov
repnz
jb
leave
mov
xor
mov
push
aad
scas
mov
push
cmc
std
dec
jb
scas
push
fldenv
rcr
mov
out
scas
and
pop
jbe
lods
push
or
pushf
xor
mov
fisttpll
xor
mov
das
push
push
dec
push
clc
mov
mov
ja
xchg
add
std
repz
and
sbb
out
shrb
inc
adc
adc
mov
fildll
mov
mov
sti
arpl
pop
aaa
roll
jecxz
lcall
cs
int3
cmp
adcl
fsubp
lret
and
cltd
xchg
cmpsb
lea
scas
scas
lods
push
xor
fadds
xorl
sbb
jmp
lds
scas
repz
fcoms
dec
daa
repz
std
pop
jl
sub
cmpsl
and
jmp
andb
inc
dec
cmpsl
push
or
out
sbb
loop
outsb
stos
push
adc
xor
test
clc
lret
sarb
rcrb
sbb
sbb
cli
sub
arpl
jle
subl
mov
out
aas
push
jno
xchg
call
lock
test
xchg
and
add
mov
rol
inc
cmpsl
dec
divb
shrl
pop
pushf
int3
push
cmc
mov
iret
scas
mov
dec
pop
jns
and
adc
popa
cmp
or
cs
in
pop
pushf
mov
fidivrl
inc
hlt
dec
jmp
rorl
jmp
lds
push
fbstp
jecxz
adc
call
out
rolb
sti
cmp
sbb
pop
mov
leave
push
mov
inc
sbb
fsubrl
cmp
cltd
aam
ret
and
jne
iret
push
xchg
push
jle
and
sbbl
xor
repnz
ret
push
fwait
sbb
sar
jb
mov
push
into
ja
cmp
pop
jo
repnz
adc
das
cmp
fcmovne
orb
lods
sbb
jmp
nop
jae
xchg
cmc
outsl
mov
inc
cmp
mov
xor
push
xorl
lock
cmp
stc
inc
or
iret
pop
sahf
ret
fdivp
mov
int3
and
or
fimull
sti
mov
add
insb
mov
sbb
push
adc
shlb
pop
or
scas
out
out
mov
js
mov
sub
je
mov
clc
imul
pop
push
rorb
xlat
add
add
mov
mov
cli
pop
aam
rcll
lods
pop
js
repnz
pop
adc
lea
pop
adc
adc
jl
out
js
mov
es
test
dec
icebp
add
iret
mov
mov
es
xor
fcmovnbe
movsl
push
dec
bound
xor
adc
cmpsl
lods
inc
outsb
jg
dec
jno
sub
bswap
loope
pop
xorl
sahf
push
inc
mov
aad
and
pop
jbe
push
idivl
or
arpl
call
outsl
sbb
in
mov
push
int
aam
stos
in
and
sbb
nop
out
fwait
mov
out
inc
loop
fwait
adc
push
jge
mov
fwait
call
sbbl
xor
movsb
lret
or
mov
cld
les
imull
cmp
idivb
cs
je
aas
stos
inc
push
jno
push
jge
imul
push
mov
push
arpl
xor
xor
mov
notb
cwtl
push
xchg
loop
lcall
add
shl
or
test
mov
push
mov
adc
sahf
and
dec
dec
adc
std
outsb
dec
std
decl
jge
js
jecxz
into
bound
divb
inc
lret
push
xor
lret
iret
and
add
lret
js
dec
in
sbb
and
in
jbe
dec
ret
gs
sarl
sti
aas
hlt
mov
cmp
push
xchg
sbb
pop
add
push
mov
in
push
movsb
pop
xchg
add
ds
daa
test
imul
sbb
jge
add
lea
pop
mov
clc
cmpsl
cld
idivb
dec
pushf
pop
jns
lds
shl
pop
bswap
xor
ret
mov
sub
xchg
jp
fidivl
xor
repz
jns
stos
dec
xchg
push
and
loop
xor
xchg
shl
mov
hlt
xchg
mov
mov
jb
and
push
mov
cwtl
or
sbb
aam
jb
notb
repz
icebp
adc
mov
push
aaa
xor
ljmp
orb
push
mov
pmulhuw
gs
adc
adc
dec
push
mov
ljmp
and
out
sub
cltd
xchg
dec
jb
leave
lods
push
sbb
jmp
sub
movsb
dec
imulb
and
shlb
sti
into
ss
jp
add
and
movl
mov
aas
push
cld
and
or
movsb
mov
test
mov
jmp
insl
sbbb
xor
push
mov
daa
loopne
sub
rolb
in
push
daa
mov
push
mov
add
stc
dec
aas
sbb
arpl
push
xchg
cmc
push
stos
test
leave
xor
test
mov
pop
subb
or
enter
mov
mov
push
out
stc
into
out
pop
fisubl
lcall
icebp
lea
mov
pusha
sbb
fidivl
mov
sarl
arpl
ja
pop
sub
push
push
arpl
es
sbb
test
xchg
cmp
stos
int
cwtl
pop
iret
xor
sub
cld
cmp
and
mov
sbb
das
mov
add
jle
ret
popa
xchg
xor
pop
push
inc
icebp
push
leave
dec
mov
push
mov
bound
jmp
pop
call
jmp
mov
or
sahf
jge
or
push
mov
mov
lret
cmc
dec
imul
mov
xor
cmp
pushf
xchg
xor
sub
lcall
into
pushl
pop
sahf
adc
cld
sub
int
cltd
adc
ss
shll
scas
cmp
cmpsb
iret
xlat
ja
ja
xlat
push
xchg
cmp
xor
out
int3
pop
fucom
xchg
popf
xor
jb
aas
mov
lods
pop
pop
arpl
or
inc
mov
xchg
insl
jo
jle
pop
push
jecxz
out
xor
les
cmp
ret
sub
pop
outsl
mov
iret
mov
dec
adc
adc
pusha
cld
mulb
inc
aad
lock
bound
sti
test
shr
mov
mov
orb
push
stc
pop
push
ja
xor
scas
jp
clc
aaa
or
or
cmp
fwait
cli
scas
push
cwtl
mov
mov
mov
mov
fcompl
mov
lahf
mov
test
inc
xor
mov
mov
or
lahf
decl
mov
std
popa
imul
cmp
ret
cld
test
mov
xchg
or
jl
ficomps
mov
outsb
pusha
adc
out
add
loope
test
sbb
aad
inc
rcrl
stos
jbe
xchg
addr16
push
pop
into
movsl
dec
and
sbb
cltd
stos
pop
test
jnp
fistpl
xlat
jle
jns
cmc
outsb
pop
cmc
mov
pop
xor
div
nop
je
or
cli
fs
mov
cmp
out
rolb
lret
pop
and
jbe
jno
les
out
orb
pop
mov
jo
add
jp
add
mov
lods
xchg
repnz
push
sbb
dec
mov
adc
sub
or
adc
inc
andl
aaa
outsl
mov
mov
or
jmp
add
ret
xchg
nop
mov
rcrl
ds
fsts
pop
subl
pushf
cmp
std
sub
leave
xor
push
mov
push
ret
and
adc
scas
dec
inc
sub
out
cltd
aam
iret
ja
sub
sub
cltd
mov
push
jns
decb
ja
jno
aam
mov
pop
loope
or
add
adc
icebp
fnstsw
mov
sbbb
and
dec
out
jo
call
cli
mov
xor
dec
xor
cs
sbb
rdpmc
and
out
mov
or
pop
pushf
inc
inc
daa
jae
mov
jle
popf
es
push
iret
stos
add
lods
sub
loope
and
out
leave
cli
add
push
fs
xchg
cmp
loopne
jo
sub
sub
xchg
aas
fsubs
cmp
adc
mov
xchg
fdivr
pop
ljmp
int
in
sub
push
adc
mov
cmp
push
testl
test
std
in
push
movsl
pop
xlat
sbb
aaa
orl
pop
adc
and
cmp
xor
ret
adc
adc
arpl
fcmovnbe
add
loope
lods
pop
mov
into
lret
jno
cmp
fwait
test
inc
add
mov
int
or
fldt
lret
bound
loop
cmc
jg
mov
test
stc
mov
mov
ss
cmc
jl
lret
aad
mov
push
leave
icebp
sub
call
dec
stos
test
test
roll
cs
aaa
mov
push
xchg
cltd
jo
push
lea
repz
mov
add
dec
arpl
and
mov
scas
iret
cmpsl
outsb
mov
nop
dec
iret
add
test
stc
push
pusha
call
adc
das
shl
jbe
insb
dec
sub
pop
adc
pop
mull
ret
and
jb
cmp
out
mov
xor
push
push
jle
dec
loop
fwait
jnp
push
and
fmuls
mov
ja
loope
out
in
cld
lods
cli
lret
imul
adc
xor
xchg
ljmp
ss
sbb
cwtl
pop
pop
push
pusha
mov
lds
pop
enter
imul
mov
mov
popf
jnp
sub
mov
jle
sub
lcall
add
jmp
fadds
cmpsl
mov
dec
jns
or
push
xor
fadds
movsb
loopne
dec
jmp
mov
push
out
and
in
or
dec
mov
in
data16
push
inc
inc
add
imul
movsl
loop
test
je
jns
push
movsb
out
mov
xchg
into
pop
dec
mull
lock
pushf
shlb
gs
and
fwait
scas
mov
mov
adc
das
push
arpl
and
mov
jne
jle
and
es
test
sbb
mov
jns
and
ljmp
jge
cmp
xchg
and
mov
mov
dec
mov
aas
mov
cmp
and
stc
push
out
orb
nop
mov
test
xor
mov
mov
pop
inc
enter
jns
sti
cltd
ds
lock
fwait
or
rcl
daa
pop
mov
sub
jae
mov
iret
add
push
cli
int
bound
inc
test
clc
jae
mov
xchg
add
mov
repz
ret
std
inc
scas
insb
mov
mov
sbb
pop
or
movsl
test
jb
sub
aaa
xor
mov
xchg
push
clc
roll
and
cltd
aaa
mov
arpl
sbb
inc
ficomps
sub
push
mov
rol
push
sub
mov
pop
or
sbb
or
jbe
lds
mov
sub
lahf
imul
ret
out
aad
dec
daa
lods
dec
push
or
and
cwtl
enter
popa
into
stc
sub
jl
jl
fwait
jecxz
sti
fbstp
xor
jns
test
pushf
scas
pop
xchg
mov
add
sbbl
mov
sahf
cmpsl
push
sbb
in
aad
cld
gs
fisubrl
movsl
mov
pop
and
lret
dec
adc
add
imul
sub
jmp
cmp
cltd
lea
xchg
pop
or
jp
sbb
xor
jle
cltd
push
int3
cs
stos
faddl
sub
aam
enter
lds
adc
cmp
sub
or
lret
mov
pop
add
mov
pop
arpl
cs
add
dec
push
mov
sub
lahf
out
dec
xchg
and
add
fidivl
fcompl
decb
cmpsl
cmpsl
nop
push
outsl
incb
mov
inc
stos
push
mov
dec
xlat
pop
push
cmc
jae
movsb
pop
lret
inc
sub
xchg
or
ljmp
mull
or
shlb
cmp
lods
mov
adc
push
rcl
out
ficoml
push
push
std
inc
fadds
fsubr
div
pushf
sub
xchg
or
xlat
xlat
inc
sub
or
scas
push
cmp
movsb
fs
ss
scas
mov
mov
jae
xchg
cmp
je
xor
sbb
and
ss
adc
or
xchg
aad
shlb
shl
aas
in
xchg
jecxz
mov
and
or
pusha
daa
popf
shrb
pop
sar
filds
push
aaa
mov
ficoml
testl
call
mov
adc
ja
aaa
mov
adc
lods
pop
xor
test
mov
sbbl
jnp
inc
xchg
pop
cmp
pop
mov
sbb
dec
or
flds
vmovaps
sub
cmp
adc
xor
mov
cmpsb
lahf
inc
sti
mov
enter
cmp
fidivl
aaa
sbb
xchg
pop
push
fs
mov
jge
ret
mov
fadd
push
and
xor
push
sub
mov
lret
mov
lea
hlt
cmp
ja
cmc
andb
jae
cmpsl
mov
loop
dec
lret
add
add
jae
xorl
in
xchg
rcrl
mov
push
in
cmp
cld
scas
sbbb
sbb
out
mov
and
addr16
jo
cmp
rcrb
rcrl
pop
mov
shll
sub
rcrb
lahf
mov
inc
sub
frstor
repz
inc
outsl
loope
xchg
xchg
push
lock
mov
mov
stc
mov
cmp
add
sti
dec
mov
cli
roll
sub
mov
lret
pop
inc
and
in
fwait
sub
sahf
xor
push
fidivl
inc
and
or
das
in
adc
mov
inc
push
fiadds
js
or
in
filds
lret
mov
fistpl
dec
add
in
aam
xchg
jno
stos
mov
and
dec
mov
lods
hlt
mov
jmp
arpl
inc
xor
fcmove
add
push
fmuls
mov
bound
push
cld
gs
pop
pop
and
cmpsb
pop
cmc
in
xor
dec
xor
in
cld
inc
scas
xor
mov
mov
jnp
inc
adc
popa
mov
test
jbe
push
movsl
ja
je
jmp
dec
push
fs
dec
pop
mov
shr
pushf
sub
testl
xor
aaa
movsl
jb
pop
cmp
mov
dec
lea
loopne
test
and
repz
push
cmc
pop
jnp,pn
aam
push
mov
pop
ficomps
adc
cmp
pop
adc
sbb
insb
pop
mov
xor
int
ds
fwait
or
out
je
std
adcb
sub
es
sub
stc
into
imul
sahf
shll
cmp
dec
mov
pop
xchg
jg
or
jb
fwait
push
into
and
mov
ds
leave
das
jmp
cmp
cwtl
add
dec
mov
scas
jae
insl
xorb
fidivrl
outsl
and
aam
jne
cmp
cltd
arpl
add
setbe
push
jecxz
insb
sub
mov
fsub
jne
loop
divl
loop
or
pop
out
jg
dec
dec
outsb
jbe
hlt
jmp
test
add
stos
hlt
push
repz
out
push
stc
xchg
lock
inc
bound
sbb
or
inc
std
cmp
push
into
mov
shr
lret
mov
les
icebp
cmpsl
popf
outsb
fs
inc
add
outsl
sbb
aas
in
fnstenv
cli
xchg
shll
sbb
push
mov
popa
ja
pusha
cmp
pop
faddl
jne
in
mov
dec
addb
aas
jmp
and
add
pop
adc
jecxz
and
negb
in
mov
cmpsb
add
xor
insb
pusha
adc
stc
dec
icebp
push
and
cmpsb
rclb
push
adc
clc
outsl
mov
andl
xor
ds
or
cltd
adc
jo
push
cmp
lea
xchg
jg
fbld
shll
andb
sbbb
sbb
test
inc
outsl
mov
jle
data16
cmp
iret
inc
data16
or
js
bnd
and
mov
repz
add
test
and
jp
fistpl
sbb
iret
mov
ss
jne
lret
aam
pop
inc
jl
ret
repnz
loopne
xor
out
cld
mov
pushf
mov
and
rorl
jns
enter
bound
iret
adc
jmp
fimull
push
fisttps
loop
jb
inc
jb
add
inc
mov
popa
sbb
int3
jmp
decb
daa
jbe
mov
jmp
pop
jp
or
cmpb
sti
out
xchg
xchg
xor
push
ljmp
cmpsl
enter
adc
pop
daa
mov
out
call
jae
xchg
sub
test
aas
out
ja
adc
lahf
jo,pn
dec
popa
pop
stos
xor
push
mov
outsb
andl
mov
xchg
cld
push
sahf
lahf
xlat
sub
mov
je
add
mov
and
mov
aad
sahf
pop
cld
outsb
and
and
jmp
in
jmp
or
mov
mov
xchg
rcr
cld
ss
pop
in
jle
popf
adc
adc
sbb
inc
mov
cwtl
icebp
dec
xrstors
xchg
mov
gs
push
mov
jo
enter
hlt
stc
out
push
push
xchg
jae
subb
gs
fmuls
fmulp
fdivrs
adc
and
dec
and
cli
dec
push
sub
sub
sbb
cs
add
in
push
nop
sbb
ja
add
mov
jnp
std
fst
shld
cltd
fs
dec
cmp
adcl
mov
in
and
divb
mov
push
jbe
lds
pop
sti
mov
frstor
mov
or
cld
fs
or
andb
rcrl
aaa
add
addr16
movsl
loope
xor
fwait
xor
mov
sarl
add
lods
push
out
in
and
adc
repnz
sub
mov
lret
repnz
out
sub
mov
cmp
cmp
int3
cld
jns
cmp
cmp
add
jge
cmc
test
movsl
sbbb
inc
insb
movsl
jmp
dec
aaa
add
dec
jo
loopne
inc
add
or
jp
scas
adc
out
mov
mov
imul
out
into
jne
jbe
xchg
push
adc
adc
outsb
dec
mov
rcrl
aaa
jecxz
jnp,pt
jmp
mov
mov
mov
jae
adc
sub
stc
jl
lea
mov
push
lods
fcomps
enter
inc
adcl
outsl
or
cmpsb
ljmp
jne
xor
inc
test
add
mov
push
mov
sahf
pop
cmc
pop
movsl
stos
sub
lret
push
jno
xchg
sub
fwait
add
xor
and
lods
nop
jmp
push
pop
dec
shrb
cli
sub
lret
sub
fstpl
in
or
pop
fstpl
jp
inc
mov
pop
inc
imul
cmpsb
out
ja
push
cltd
popf
ret
out
add
dec
jecxz
jne
popf
jno
mov
mov
mov
loopne
icebp
jne
lcall
mov
xchg
jp
and
leave
sub
call
ds
cmp
hlt
sub
movsb
sbb
add
std
stc
test
or
aas
cmpsb
push
out
push
dec
mov
jle
and
mov
push
shl
cmpsl
or
push
scas
adc
or
cmp
mov
dec
sbb
mov
mov
sub
pop
cmp
pop
and
or
sbb
vmovhpd
rdtsc
pushf
gs
sbb
inc
aas
xor
lret
push
shrb
xchg
in
nop
je
stc
aam
xchg
je
dec
mov
xchg
enter
pop
mov
xlat
dec
call
sarb
and
pusha
aaa
in
ljmp
rol
popf
inc
pop
mov
or
fstps
and
in
pop
add
jmp
jo
fisubrl
fcoms
xchg
xchg
arpl
inc
shll
pop
fldcw
hlt
xchg
ss
mov
popa
imul
add
in
sbb
fsubs
adc
xor
movsb
mov
fucom
mov
sub
jns
out
out
sub
and
loopne
sbbl
xorb
mov
pushl
sub
adc
push
dec
popa
aas
cmp
push
mov
jb
xchg
sbb
jmp
jae
sarl
das
mov
jecxz
inc
sbb
adc
sbb
or
mov
call
adcl
sar
repz
jns
out
cmp
fsts
add
jge
mov
icebp
lcall
shlb
aas
imul
enter
inc
or
xor
dec
pop
test
and
adc
jg
int3
imul
into
cmp
xabort
cmp
pop
cmp
aas
movsl
push
scas
lods
push
xor
repz
push
lds
and
jmp
movsl
shrb
pop
addr16
repnz
fucomi
mov
enter
pop
enter
out
fisttps
mov
jae
loope
jmp
rcll
out
test
in
dec
out
or
call
out
aad
xchg
mov
fbld
fnstsw
sbb
inc
fwait
out
and
popa
sbb
insb
fwait
notl
inc
inc
mov
adc
mov
jns
push
mov
repz
add
push
addr16
sbb
dec
arpl
jmp
inc
sub
mov
xchg
dec
xor
stos
je
dec
xorb
imul
fsubp
adc
pop
pop
mov
push
push
std
rcr
popf
pop
dec
push
mov
imul
js
orl
pop
arpl
enter
inc
scas
inc
das
fldenv
hlt
pop
xchg
mov
out
cmp
das
xchg
lret
mov
cmp
mov
sub
add
aaa
pop
nop
lcall
mov
rclb
push
adc
cld
cmp
add
insl
aaa
xor
pusha
push
clc
ljmp
add
loope
ds
mov
outsb
shrb
xchg
xchg
movsl
fs
sbb
mov
add
add
push
fwait
rolb
mov
loop
cmp
mov
push
stos
push
mov
xchg
inc
ds
mov
loope
add
adcl
repz
or
lods
out
int3
test
xor
inc
aaa
sarb
add
xor
lret
js,pn
pop
int3
les
subl
call
rcr
jnp
call
enter
pop
addb
arpl
add
fucomi
add
ss
inc
pop
sti
cltd
jns
imul
js
jbe
fwait
mov
and
mov
ret
inc
xchg
ficoml
ret
flds
mov
cmpsl
movsb
hlt
push
add
ret
jge
into
sub
push
mov
and
in
pop
xlat
repz
inc
adc
mov
sub
les
jmp
pushf
stc
fnstcw
cmpb
popf
int
movsl
mov
dec
sbb
popf
sbb
sbb
loopne
pop
sbbb
jp
or
je
in
cmp
push
rorl
push
arpl
jmp
xorl
lods
out
sub
fnstcw
xchg
sbb
xor
and
cmpsl
scas
das
dec
lahf
inc
sbb
fadd
jnp
lds
cmpsl
enter
and
jmp
cld
out
arpl
popa
fcmovb
loopne
mov
mov
xchg
cmpsb
jnp
cli
jl
les
jg
es
sub
icebp
xor
lcall
jg
push
push
push
lds
sbb
popf
jle
subb
repnz
shr
lods
xchg
and
outsl
jmp
dec
sbb
pop
pop
xor
fdiv
pop
pop
jge
sbb
test
mov
jge
jge
pop
outsl
enter
imul
lret
push
in
fdivrs
movsl
es
mov
sbb
mov
sbb
inc
jns
arpl
adc
sti
fwait
aam
mov
divl
icebp
lea
xlat
ret
mov
xor
xchg
out
fbld
xor
cmpl
les
inc
sub
les
jp
shrb
mov
notl
cs
sbb
repnz
jo
stos
rcl
cmp
jg
lcall
push
mov
xor
add
pop
stos
xchg
mov
jb
or
popf
xchg
lea
push
push
outsl
or
xchg
push
enter
mov
out
movsb
stc
xchg
cld
dec
xchg
push
dec
push
jl
js
notb
mov
jg
cmp
repz
out
mov
hlt
rcl
movsb
pop
xchg
mov
clc
mov
inc
int3
cmp
movsb
ffree
sahf
mov
mov
jno
inc
dec
xchg
adc
and
loope
outsl
xchg
in
jns
cs
push
mov
push
int
lahf
fstpt
xor
sub
popa
dec
mov
call
in
repnz
fisttps
push
add
imul
mov
cmp
cmpsl
flds
xlat
scas
stos
repz
es
leave
mov
xchg
mov
enter
add
mov
in
mov
push
lea
nop
push
fsub
sub
out
mov
addr16
in
insb
and
xchg
xchg
scas
imul
push
in
dec
dec
inc
mov
repnz
xor
popa
mov
jg
loop
add
insl
mov
ds
fmuls
mov
pop
pop
movb
insl
sub
jne
xchg
add
imul
push
cmp
dec
cmp
insb
ss
xor
cmp
jg
push
ret
cwtl
mov
adc
xlat
sbb
pop
and
cs
ljmp
shl
mov
or
shlb
dec
jmp
mov
movsl
sub
mulb
lahf
fisubl
xchg
sbb
add
inc
scas
lret
insl
cmp
les
fidivl
mov
outsb
xor
data16
dec
xchg
repz
push
add
jmp
xlat
mov
inc
push
and
aad
mov
stc
cmp
or
cmp
mov
sub
fwait
loopne
repz
push
inc
pop
pushf
icebp
es
xlat
test
cmc
lret
call
cli
ja
test
imul
inc
clc
out
and
jge
jle
shr
mov
adc
outsl
fimuls
fists
ljmp
lret
ds
dec
cltd
add
dec
fstpt
mov
xor
mov
std
pop
scas
and
outsb
lret
adc
jecxz
push
jbe
jg
mov
push
inc
das
stos
loope
out
mov
inc
mov
pop
or
jo
test
dec
inc
xlat
inc
mov
js
sbb
sbb
dec
out
inc
jb
fisttpll
into
inc
pop
sti
adc
addl
lds
loope
adc
mov
mov
mov
cwtl
xor
fimuls
and
jb
cli
fs
sbb
or
adc
push
push
pop
cs
jp
test
fadds
add
and
xchg
je
jp
cmp
jns
mov
shll
imul
out
cwtl
aad
scas
pop
sti
sbb
xchg
out
loop
and
jo
cwtl
insl
fdiv
repnz
xchg
push
pop
adc
jmp
or
mov
into
dec
outsl
stc
jp
ds
popa
sbbb
push
loope
mov
movsl
xor
hlt
xor
mov
mov
push
pop
and
adc
aam
into
loope
sbb
ret
cmp
mov
push
sub
lret
adc
and
jns
mov
jne
mov
testb
sbb
insl
decl
sti
jns
or
into
pusha
mov
imul
and
out
mov
xchg
add
xor
xchg
add
xor
inc
loope
add
inc
and
pop
or
pop
es
push
test
rep
push
movsb
mov
inc
jl
pop
ja
pop
mov
sahf
sbb
aam
xchg
hlt
xchg
adc
mov
jmp
cmc
sub
ljmp
out
pop
mov
rcrb
addb
sahf
arpl
sub
mov
lret
movsl
lods
mov
push
fistpll
inc
inc
arpl
pop
lds
movsb
jae
enter
add
lcall
or
stos
sub
mov
stos
dec
push
dec
xor
push
dec
cmp
jl
sar
mov
addl
popf
sub
loop
cld
int3
pushl
push
insl
dec
testb
jnp
insb
out
xor
xor
roll
enter
mov
pop
dec
sbb
push
gs
loopne
mov
add
pop
sahf
add
lcall
sbb
and
in
pop
add
fadd
pushf
ret
mov
movsl
cwtl
and
mov
sub
jbe
push
pop
arpl
dec
out
sub
inc
cmpsb
and
rep
push
cs
jle
inc
add
and
push
cld
adc
cmpsb
int3
mov
jecxz
cs
data16
addr16
xor
dec
inc
aam
mov
gs
cmpsl
push
jl
jmp
xchg
sti
xchg
ret
jae
mov
mov
aaa
xor
js
sar
push
jns
and
repz
repz
inc
stos
or
xor
pop
in
add
arpl
push
cmpsl
clc
fisttpll
fcompl
cmp
jbe
xor
add
add
lahf
lods
clc
mov
mov
test
popf
cs
cmpsb
in
fisttpl
push
jecxz
jmp
test
jge
icebp
adc
and
scas
leave
cmp
int
push
outsl
push
mov
cmpsb
inc
sarl
inc
roll
push
int3
lock
sub
push
rol
jle
and
outsl
lahf
mov
or
cmp
mov
idivl
mov
fistpll
insb
mov
sub
loopne
add
sbb
pop
out
mov
leave
adc
jle
jbe
lret
lds
sbb
pushf
stos
sbb
das
adc
mov
cmp
jle
dec
pushf
xlat
mov
push
or
cmp
fsubrp
jbe
lea
aaa
cmpl
dec
push
into
xor
cmp
mov
bnd
xor
popf
bound
or
mov
daa
pop
or
xor
js
mov
jbe
shlb
mov
pushf
xchg
jae
dec
shrl
rcl
out
ret
xor
mov
jg
incl
mov
clc
ss
push
jnp
sahf
and
push
dec
jge
sub
mov
stos
das
mov
fsubl
out
les
mov
sbb
mov
int3
insb
add
out
add
jmp
jb
xchg
in
je
xchg
jmp
pop
imul
adc
xor
pop
pop
sahf
lcall
mov
sub
jmp
imul
outsb
xor
mov
push
aaa
mov
xchg
xor
xchg
cmp
mov
push
testb
enter
sbb
xor
inc
inc
sbb
adc
xor
cmp
aaa
adc
bound
outsl
out
rcll
inc
adc
inc
jb
andl
mov
test
xor
jo
jp
and
push
daa
cld
stos
or
bound
and
inc
xor
add
pop
scas
pop
push
fnstsw
inc
push
insl
or
hlt
jne
cmp
cmp
add
cli
sbb
loopne
aas
shll
and
in
aad
call
mov
mov
jns
xchg
inc
mov
sarl
fdivs
rclb
pop
add
test
mov
je
daa
xor
je
test
inc
inc
mov
add
sbb
out
lds
cltd
mov
ds
and
jge
inc
outsl
jle
dec
ret
jl
test
inc
push
dec
push
andnps
mov
lret
arpl
pop
inc
mov
inc
mov
cltd
aam
sbb
sbb
fistl
popa
sbb
and
dec
fucomi
std
pop
jp
clc
mov
and
loope
cli
pop
in
addb
fninit
das
and
shlb
imull
out
xor
int
cmp
test
mov
je
push
loope
addr16
jmp
xor
ret
pop
xchg
leave
and
popf
mov
push
mov
xor
int
mov
and
jnp
sub
int
lret
cmp
cmc
lea
jmp
pop
mov
push
sbb
dec
xorb
xchg
aas
xchg
loopne
mov
push
jo
movsl
ret
repnz
movsb
fnstcw
fwait
jl
or
stos
clc
sbb
shlb
push
insb
dec
xchg
sarl
into
dec
stos
sub
sub
push
movsb
cmpsb
ret
xchg
add
idiv
lcall
aad
scas
stos
push
aaa
aaa
xor
pop
xchg
in
xchg
repz
loope
mov
xor
outsb
jg
add
int3
leave
fcoml
and
push
clc
call
stc
shrb
ret
xchg
stos
mov
or
test
jbe
fisubl
adc
nop
rclb
cwtl
in
popf
add
xchg
int3
xchg
nop
add
or
cmp
inc
and
ss
and
lret
pop
adc
andb
mov
mov
popf
out
movsl
xchg
cmp
xor
add
mov
cmp
inc
and
scas
aas
popf
cld
adc
sbb
cli
xchg
or
jge
out
out
sti
inc
add
std
popa
lea
dec
jl
sbb
int
pop
cmp
je
mov
fdivrl
ja
mov
mov
adc
outsb
xchg
std
push
sbbl
shrl
mov
rcll
fsubrl
fstpt
gs
pop
aad
mov
imul
jo
mov
push
addr16
test
dec
add
inc
jmp
add
cmp
lcall
xchg
mov
fwait
loopne
mov
adc
push
push
fdiv
add
push
dec
sbb
dec
pop
sbb
mov
nop
lcall
cltd
pop
xchg
clc
xor
das
outsl
xor
mov
ret
pushf
int3
sti
inc
add
ds
or
mov
fs
xor
push
addr16
xor
or
jb
mov
jnp,pn
inc
xor
sbb
mov
es
xor
or
inc
je
sbb
fisubs
sbb
mov
pop
push
inc
fs
push
popa
jne
jecxz
inc
cmp
jae
push
cmpb
or
and
mov
lods
movsl
je
in
lret
mov
cmp
sahf
clc
test
sub
push
pop
lcall
in
jnp
arpl
cmc
cmp
pop
pop
mov
pop
popa
inc
sbb
lock
pop
rcl
popf
add
or
dec
fwait
in
and
mov
cmp
std
insb
push
dec
psrad
movsb
inc
dec
mov
sbb
add
movsb
les
dec
pop
iret
movsb
fldl
in
idivl
call
dec
xchg
iret
mov
call
outsl
mov
and
xor
sub
into
xchg
add
les
push
sub
and
shl
int3
push
jae
out
push
sub
shl
call
loop
push
cmpb
fstps
ja
lahf
mov
dec
mov
movsb
fwait
pop
xor
mov
mov
roll
lcall
mov
mov
mov
jno
loop
mov
sti
jge
arpl
ja
xchg
pop
push
jg
add
inc
mov
mov
icebp
and
mov
mov
cltd
sbb
lret
xor
testl
xor
dec
cmp
in
jne
in
mov
int3
mov
mov
lods
or
test
roll
push
aas
xor
inc
in
sub
inc
repnz
mov
ss
xchg
mov
fisubl
mov
cmp
jl
and
sub
daa
push
mov
subb
inc
sti
sarl
in
pop
ret
stc
xchg
out
test
inc
and
inc
lods
or
mov
gs
inc
negl
in
cmp
jp
dec
and
flds
js
in
push
adc
dec
fists
insb
in
loope
out
pop
xor
lret
test
jnp
ret
sti
jp
shlb
xchg
mov
mov
push
mov
imull
or
and
icebp
xor
pop
and
and
pop
inc
mov
enter
adc
int
add
mov
push
and
in
loopne
sub
ljmp
dec
jo
not
enter
test
or
xchg
push
inc
outsl
out
fsubl
fisttpl
inc
xor
daa
repz
enter
ja
fldl
dec
std
lods
js
aaa
or
sti
xchg
ret
push
pop
mov
add
clc
fcoms
mov
std
into
xchg
add
or
xchg
push
sub
ret
xor
js
mov
inc
dec
pop
aas
mov
xchg
out
gs
sbb
scas
fbld
hlt
mov
sub
mov
mov
out
add
or
dec
mov
leave
in
jo
cmp
nop
std
xchg
int3
ret
jmp
adc
int3
fmull
aam
lret
xor
dec
int
pop
jns
sbb
sub
int3
lret
popa
pop
ret
iret
dec
dec
mov
jo
push
daa
add
rclb
pop
lcall
mov
subb
mov
mov
mov
subl
push
lahf
push
lods
adc
sar
push
roll
add
pop
cltd
test
jmp
lcall
stc
cmpb
cmp
shlb
add
daa
pusha
test
shlb
push
or
nop
hlt
imul
dec
data16
lahf
adc
or
add
pushf
fstpl
les
cmp
push
ljmp
fucomip
clc
sbbl
adc
test
mov
pop
and
mov
push
lods
add
dec
jns
bound
cld
push
cld
pop
and
repz
xor
rcll
testl
into
push
xchg
pop
repz
and
xchg
aas
jae
jns
test
adc
in
push
lret
inc
lcall
inc
insb
js
pop
aas
push
pop
lea
ret
stos
adc
adc
xchg
arpl
mov
push
popf
xchg
rcrl
push
push
lcall
cmpb
sbb
mov
mov
mov
out
sbb
push
inc
xchg
pop
mov
scas
das
pop
jmp
pop
and
xchg
cmpsb
xor
pop
sub
in
es
xchg
sbb
push
das
data16
fs
jmp
add
in
mov
jne
pop
add
mov
lds
cmc
cs
fisubrl
push
adc
pop
imul
pop
scas
mov
push
xchg
jno
inc
jge
mov
jmp
dec
mov
repz
imull
ljmp
push
pop
xchg
lea
fimull
test
pop
push
out
sbb
add
mov
lret
testl
pop
mov
std
aaa
mov
mov
jne
dec
scas
in
int
filds
jnp
es
out
xlat
cmpsb
pop
cmp
add
mov
in
sub
aaa
xchg
cmp
movsb
xor
push
imul
out
jb
inc
xlat
movsl
push
ds
in
mov
mov
jo
lea
pop
arpl
data16
pop
insl
popf
lret
ljmp
adc
js
hlt
hlt
ret
push
pop
cs
fwait
mov
cmp
out
andl
dec
xchg
ret
aaa
aas
jge
sarl
mov
xor
mov
adc
and
inc
xor
mov
inc
aad
mov
jge
and
xchg
and
push
cwtl
xchg
pop
add
sub
enter
and
lahf
dec
aas
push
das
insl
ja
jmp
popa
xchg
cmp
or
sbb
cmc
push
jnp
xchg
xchg
loop
hlt
lret
or
mov
mov
sarl
dec
dec
push
adc
lds
je
or
jne
mov
push
push
inc
push
shll
xor
sub
sub
lds
push
inc
scas
inc
stos
jnp
mov
mov
push
or
gs
or
sahf
mov
dec
or
rolb
leave
cli
lret
cmp
mov
nop
ja
mov
lock
xchg
jbe
push
mov
outsb
fbstp
push
pop
fs
ljmp
insb
dec
cltd
sub
mov
pop
pop
add
add
test
scas
pop
out
push
fisttpll
xor
pop
pop
aam
pushl
ret
ficompl
adc
jb
sbb
sub
pop
test
push
jnp
xor
inc
cltd
ss
dec
jg
xchg
fisubrs
and
pop
add
inc
ret
push
cmp
mov
repnz
sbb
xchg
popf
pop
test
lea
sbb
jno
and
test
push
fwait
cmp
ret
lods
std
push
shll
fimuls
div
jbe
insl
jl
pusha
and
xchg
inc
clc
div
xchg
cmp
fiaddl
cwtl
and
enter
cli
scas
xor
xchg
sub
aad
add
add
loope
addr16
sub
mov
fcomps
repnz
jge
or
mov
test
adc
scas
ds
mov
cmp
push
xor
jo
std
jmp
int3
pop
xchg
push
push
movsb
ja
mov
push
in
mov
imull
cmp
inc
mov
in
gs
push
sub
push
jp
mov
xlat
add
push
fcmovbe
xchg
ljmp
jne
jp
xor
repnz
pop
das
sub
sbbl
aaa
icebp
ja
xchg
cli
sub
sub
inc
ret
dec
std
push
adc
add
lock
es
dec
and
imul
jo
call
xchg
jg
push
pop
sbb
test
test
sbbb
push
mov
out
repz
mov
push
cmp
popa
sti
xchg
push
xlat
xchg
cmc
add
sbb
cltd
sahf
jns
lods
repz
and
ret
fsubrl
jae
push
data16
arpl
stc
test
icebp
or
subw
push
jg
inc
test
mov
or
imul
and
jge
fildll
mov
popa
enter
inc
test
out
hlt
scas
cmp
insb
cmp
inc
jne
add
scas
mov
sub
pcmpeqb
lcall
mov
cltd
and
and
jns
push
sbb
test
xchg
xchg
stos
daa
enter
in
cld
lds
ljmp
aad
cmp
inc
xchg
add
mov
mov
pop
jae
nop
add
xor
or
dec
sbb
fs
jge
xor
test
fcmovne
mov
cmpsl
jo
dec
cmp
mov
mov
jae
adc
mov
sbb
fisubrs
xor
and
dec
lret
icebp
jbe
aas
sbb
push
fs
xlat
pop
jl
adc
inc
into
cli
xchg
xchg
add
jne
push
jg
sub
or
rcl
sub
es
out
lods
push
dec
pop
ror
popw
test
sub
fadds
popa
lds
lret
scas
stos
js
mov
or
adc
inc
movsb
leave
test
cmp
das
dec
cmpsl
cwtl
bound
xor
cmp
add
ret
pop
dec
inc
outsl
ss
cmp
lods
dec
or
loop
lods
ffreep
shr
mov
mov
xor
jle
hlt
rcrb
sti
adc
pop
stos
jmp
bound
xor
fsts
insb
repnz
ja
lret
jg
xchg
cmp
mov
sets
rep
cmc
cmp
outsb
mov
lea
fmuls
xchg
imul
ret
mov
inc
psubsb
test
and
popa
mov
jbe
xor
or
xchg
push
cmp
mov
and
lret
mov
add
imul
into
stos
cmp
ret
add
xchg
jbe
cmp
aad
push
and
and
adc
mov
cmp
inc
cmp
ja
push
inc
mov
sub
out
ja
jne
inc
outsl
adc
ret
add
xchg
add
adc
jnp
mov
sbb
leave
shlb
inc
inc
cmp
and
dec
xchg
repz
pop
push
push
arpl
mov
cmp
dec
jmp
js
das
imul
imul
daa
xor
sub
pop
insl
les
clc
mov
std
cld
insl
stos
jns
sbb
and
ss
out
sub
dec
and
or
out
add
stc
or
adc
push
int
lret
inc
daa
pop
or
mov
mov
ficoml
jno
xor
mov
sub
adc
xchg
mov
dec
lods
push
mov
inc
push
outsl
lahf
sbb
int3
mov
mov
movsl
repnz
cmp
movsb
xchg
shll
js
jne
fisttpll
push
push
rcl
stc
cmp
dec
clc
pop
jle
jbe
xlat
out
out
scas
sbb
adc
push
inc
sbb
jnp
outsl
mov
out
aam
jg
jb
xor
stos
jae
cltd
mov
xlat
mov
sbb
and
cwtl
mov
xchg
hlt
push
cmpsl
xchg
call
xchg
mov
inc
push
out
xchg
stos
test
scas
xor
sub
sbb
pushf
push
int
fcomi
pop
jb
jo
imul
sub
jecxz
inc
push
dec
inc
cs
imul
mov
push
fimuls
cs
pushf
jno
aaa
and
out
pop
push
jnp
or
jmp
test
nop
dec
jmp
es
outsl
and
sbb
sti
pop
ja
repz
loop
filds
pop
dec
add
ja
mov
mov
cmp
cmp
fwait
mov
std
stos
mov
jne
mov
mov
dec
xor
fisubrs
or
add
push
sbb
sub
cmpsl
lahf
push
test
add
xorl
ret
dec
mov
and
mov
jns
fwait
sub
mul
inc
daa
daa
push
sarl
mov
xor
mov
dec
adc
ljmp
fiaddl
ljmp
lcall
mov
add
mov
jb
mov
xchg
das
lds
and
mov
mov
pop
rcll
jnp
test
push
imul
pushf
adc
rclb
das
mov
and
loop
inc
pop
sbb
xchg
push
mov
cld
mov
mov
xchg
cmp
fwait
inc
or
mov
mov
lahf
inc
push
stc
xchg
fnstenv
decb
pop
jge
cmp
mov
lea
lods
ds
jmp
movsl
fbstp
popf
or
fistpl
addb
jge
dec
enter
add
aad
inc
test
adc
xor
out
imul
subl
aaa
cwtl
jg
repnz
addr16
enter
sbb
lahf
or
rorb
pop
in
mov
or
and
push
repz
mov
jns
inc
xlat
out
sub
int3
les
psrlw
cmp
xor
xchg
ja
js
faddl
pop
xor
dec
lahf
pusha
mov
jnp
cli
sub
dec
dec
xchg
les
mov
imul
mov
or
xor
or
xchg
sahf
cmp
jmp
or
int3
stos
into
or
mov
lea
pop
lock
cmp
cmp
xchg
adc
dec
adc
testb
lods
pop
lret
mov
dec
push
in
scas
aam
xor
cwtl
cmc
mov
mov
dec
dec
aad
mov
neg
xchg
cmp
int
mov
aad
lods
xor
jg
int
sti
xchg
jo
loope
test
pop
outsb
dec
sub
ds
ljmp
adc
not
xchg
mov
imul
test
mov
stos
divl
out
rcrb
mov
add
jb
mov
inc
mov
rclb
push
or
jno
mov
out
cmp
jp
sub
xor
cmpsl
or
mov
cmp
movhlps
mov
xchg
pop
jp
xor
rcll
pop
orb
sub
adc
inc
test
pop
js
jp
push
daa
jno
add
sub
in
mov
insb
std
cmp
mov
dec
xor
loop
dec
out
xor
xchg
jg
mov
or
mov
cmp
addr16
test
call
jbe
jbe
mov
or
push
xchg
dec
inc
cmp
pushf
sbb
loope
lds
jne
cmp
push
stos
cmp
or
or
xorb
add
adc
adc
and
or
out
mov
stos
and
lods
mov
lahf
in
push
xchg
pop
xchg
xor
call
in
insl
pop
imul
imul
popa
pop
xchg
js
adc
sbb
adc
out
vcvttsd2si
pop
mov
inc
addb
ljmp
jbe
pusha
lret
and
out
jl
pop
pusha
pop
adc
ss
xchg
ds
dec
add
imul
jo
fimull
pushf
lock
jae
adc
mov
nop
leave
js
jae
mov
cmpb
out
pop
jb
mov
or
push
push
enter
scas
aam
lds
aam
or
jo
fimull
pop
jge
jno
xchg
push
test
lods
mov
or
aaa
gs
psllw
sub
enter
lret
jnp
insl
or
xcrypt-ofb
cmpsl
in
jae
imulb
lcall
insl
cmpsb
xlat
stc
push
out
hlt
shlb
or
pop
mov
fwait
dec
int3
shll
pop
jo
popf
xchg
mov
xchg
clc
jae
pop
cmc
arpl
jne
cmp
or
dec
das
daa
repz
fwait
adc
jp
test
jbe
pop
repz
loop
sub
lret
mov
add
xor
xchg
sbb
mov
ret
in
jecxz
sti
inc
clc
scas
adc
int3
hlt
jo
js
movsb
inc
mov
cs
out
dec
xchg
pop
lret
mov
mov
fdivrs
je,pn
fs
shlb
xor
cmp
cmp
xchg
das
add
adc
cmp
inc
xorl
scas
sbb
mov
mov
inc
ret
mov
cmp
adc
orb
mov
lahf
bound
test
inc
imul
fmulp
xor
insb
pop
mov
pop
pop
mov
aam
xor
xor
jbe
repz
les
and
ret
xchg
push
and
mov
inc
sub
jae
sbb
sbb
sub
rcll
fadds
or
dec
iret
dec
outsb
scas
pop
add
inc
shlb
sub
xchg
inc
push
dec
insb
xor
cwtl
jmp
in
jl
mov
sbb
pop
pushf
cmp
fidivs
cli
mov
ficoms
shrl
test
push
imul
js
cmc
push
loope
sub
and
fistpll
daa
inc
fadds
lock
cmp
mov
adc
sub
mov
sbb
or
mov
mov
jnp
ds
mov
test
dec
cmpl
das
mov
xchg
aad
into
sti
fbstp
push
nop
es
cwtl
in
cwtl
ja
cltd
addl
js
adc
jmp
mov
mov
jb
xlat
pop
adc
out
imul
fimull
fs
pop
mov
add
loope
rolb
xor
xchg
dec
mov
daa
les
mov
enter
xor
push
ljmp
xor
out
addr16
or
add
lret
icebp
test
in
jp
mov
cmp
jae
fnsave
mov
push
jl
loopne
xchg
fdiv
ljmp
dec
dec
adc
xchg
dec
mov
movsl
fxch
int3
das
cmp
xchg
and
shll
aad
in
pop
mov
dec
mov
mov
pop
cld
add
out
jbe
ljmp
imull
leave
jnp
xor
sbb
repnz
mov
pop
scas
sub
cmp
adc
add
mov
jle
jmp
imul
dec
das
sbb
mov
out
hlt
sbb
adc
rorl
cmp
or
repz
adc
cmp
mov
pop
mov
in
sbb
fcmovnb
push
and
xchg
or
mov
movsl
adc
jbe
mov
cmp
cld
fwait
adc
fisubrl
xor
imul
push
mov
xor
imul
dec
xor
mov
mov
xchg
mov
and
movsl
mov
jl
xchg
and
push
idiv
sub
dec
in
push
outsl
push
mov
inc
sub
das
inc
sub
rcll
jmp
pop
ja
sbb
or
data16
rol
dec
mov
push
mov
das
cld
mov
mov
mov
jo
pop
es
dec
lcall
loope
lret
and
jle
adc
pop
inc
mov
aaa
aaa
push
test
lret
mov
mov
sbb
lods
or
lods
mov
in
jmp
es
push
dec
mov
jge
jecxz
push
jge
or
mov
negb
adc
jo
xchg
lahf
jns
mov
hlt
subb
loop
out
in
push
scas
filds
add
add
jle
and
xor
lret
fdivs
cmpsb
dec
mov
test
mov
xchg
cli
cs
rorb
cmp
nop
lret
jmp
inc
jne
nop
sbb
push
jmp
inc
addr16
push
mov
add
inc
mov
jge
fstpt
scas
cmp
repnz
int
shll
lods
dec
jecxz
stos
fcomps
push
dec
cmp
fstpt
fnstcw
or
jb
or
sub
shrl
scas
ja
cmpsb
mov
inc
mul
aas
and
jbe
mov
ret
out
push
fistps
jno
jmp
sub
lods
subb
mov
hlt
sub
mov
mov
jmp
dec
sub
push
xchg
cmp
cld
out
into
xchg
ficoms
mulb
lods
je
daa
mov
inc
push
and
fnstcw
frstor
sbb
pop
sbb
clc
fdivrl
cmp
in
jp
xor
lret
gs
push
push
pop
dec
xchg
iret
shrl
loopne
repnz
or
data16
sbb
pop
pop
or
jb
ret
ds
cmp
fwait
mov
es
lock
and
aam
push
cltd
hlt
fiaddl
lds
cmc
dec
xchg
or
mov
mov
aam
push
test
pop
dec
mov
dec
push
xor
nop
shlb
ljmp
xor
popa
dec
ret
jns
and
lret
cli
clc
pop
aam
sub
dec
xchg
xchg
jae
push
sbb
stos
adc
jnp
std
mov
movnti
in
sub
popa
pop
jnp
or
bound
and
daa
jecxz
aam
rcrb
sarb
ret
push
xor
fdivrs
jl
arpl
cwtl
mov
adc
mov
push
outsb
sbb
xor
mov
shlb
pop
inc
pavgw
dec
inc
and
adc
in
js
ljmp
mov
test
add
ss
repz
sbb
out
daa
hlt
push
mov
add
imul
xor
cmpb
inc
inc
mov
sbb
fwait
insb
dec
cmp
daa
loopne
cs
jb
loop
fcoms
mov
sub
fcomp
jg
jo
cli
nop
push
sub
inc
push
sub
sti
roll
bound
mov
js
pushl
cli
jns
cmp
fiaddl
sarb
mov
jno
aam
mov
popf
pop
xor
push
insl
nop
xor
push
xchg
gs
pop
and
jnp
aas
rep
aad
or
xor
es
cld
lods
loope
xor
les
popa
fcoml
aam
or
adc
ljmp
cs
mov
mov
mov
and
jl
fs
inc
test
ja
jns
cmp
xor
jp
mov
sbb
nop
stos
out
loop
ljmp
cmp
inc
and
arpl
mov
pop
movsb
repnz
and
dec
add
call
and
scas
repnz
repz
adc
pop
push
cmc
in
mov
xchg
or
movsl
lahf
jle
sbb
xor
jmp
jnp
clc
lahf
stc
lock
xchg
pop
adc
fimuls
pop
outsl
cld
adc
cvtdq2ps
inc
cmp
lock
jg
push
lahf
jg
aad
or
lds
int
sub
cld
sbb
xchg
mov
mov
adcb
aam
and
iret
cmp
addr16
out
jb
push
in
mov
fwait
jg
aaa
mov
imul
aas
xor
stos
cltd
sub
lahf
sbb
gs
dec
rep
std
jne
cmp
out
dec
xor
lods
add
test
fwait
sbb
sbb
jno
mov
adc
mov
es
repz
test
or
das
xchg
out
scas
cld
xor
pop
cmp
add
or
mov
sub
xor
adc
jge
lahf
sub
add
mov
or
ret
add
push
icebp
sbb
jbe
faddp
push
jno
mov
sbb
xchg
or
icebp
aas
fistpl
push
mov
imul
call
loopne
mov
js
mov
clc
push
cmpsl
pop
xacquire
out
cs
or
cmp
jg
cld
orb
mov
pop
xor
out
outsb
cli
daa
clc
inc
inc
adc
mov
cmc
xchg
sbb
pop
test
test
rorb
and
inc
mov
lret
jecxz
test
ret
fdivrs
loopne
out
inc
ret
test
mov
mov
in
popf
push
xchg
add
mov
push
xchg
jle
aam
cli
jo
cs
push
lret
fsubrl
jp
in
mov
shrb
lds
mov
dec
pushf
mov
sbb
nop
and
in
cmp
and
add
mov
les
shl
call
in
inc
jmp
lahf
xchg
mov
mov
lahf
divb
and
rolb
push
insl
addr16
cmp
push
hlt
sub
sub
lahf
inc
outsl
popf
in
mov
stc
pop
xchg
push
stos
insb
lock
sub
or
addr16
fnstenv
sub
movsb
pop
stc
dec
or
add
or
cmp
in
push
push
adc
movsl
xchg
in
push
sti
mov
push
stos
ret
das
loop
cld
lea
hlt
and
js
cltd
mov
mov
jne
push
xchg
pop
movsb
lods
xchg
mov
pop
xor
outsb
and
jg
int3
rclb
sbb
addr16
sub
push
fs
sbb
out
ljmp
sub
mov
movsb
mov
shr
in
hlt
int
vmaxsd
lea
jle
cmp
push
roll
mov
lods
loop
arpl
push
ss
push
and
sahf
es
and
push
push
xchg
fsin
jle
js
das
or
pop
scas
movsl
daa
out
call
test
jnp
add
and
adc
test
and
jp
push
pop
repnz
ds
and
jmp
hlt
leave
fsubl
ljmp
test
adc
and
lods
mov
jae
scas
sub
leave
movsl
sub
cmp
pop
sub
lds
fbld
in
cmp
sbb
lret
loopne
mov
clc
mov
jns
aam
add
lods
cltd
mov
pop
int
int3
testl
pop
xor
and
mov
cli
xor
in
aam
pop
lock
sarb
ss
add
push
mov
adc
fnstenv
and
xor
jg
cltd
inc
mull
fmul
mov
jbe
push
add
xchg
push
ljmp
dec
jnp
cmpl
das
fwait
aaa
push
mov
test
es
and
jbe
pop
xor
mov
test
test
xor
inc
jmp
jne
scas
ja
sbb
pop
adc
push
or
jmp
test
lcall
test
mov
xor
push
loopne
sbb
andl
jae
arpl
and
pusha
pop
movsl
fldenv
lea
aaa
dec
and
lahf
popf
push
jmp
sub
jo
in
sub
cmp
das
in
dec
es
and
push
cmp
test
je
leave
adc
cld
notb
sbb
xchg
lods
icebp
push
pop
jg
lret
mov
adc
call
cmp
mulb
repz
mov
xchg
sbbb
mov
cmp
push
jnp
mov
xor
movsl
js
pop
imul
inc
sbb
push
movsb
or
cmpl
sbb
imul
push
inc
out
inc
jno
push
mov
arpl
add
shld
mov
push
adc
jnp
aam
jl
and
dec
add
fiaddl
add
inc
adc
sbb
mov
xchg
pop
pop
mov
shll
jle
mov
xor
add
sti
mov
xor
outsl
sbb
mov
cmovne
and
push
loopne
mov
shrl
xchg
jnp
nop
add
ljmp
xlat
xchg
sarl
lods
adc
andl
mov
test
fisttps
pusha
testb
popa
mulb
ret
xor
inc
aam
arpl
aam
ds
sysenter
inc
ficoms
imul
sub
xor
sbb
lcall
mov
push
and
add
jl
dec
cmp
cli
jmp
dec
jns
insl
jle
popa
push
adc
and
cmp
mov
xchg
es
sbb
into
mov
loop
lcall
out
jg
jecxz
ja
lds
repnz
enter
imul
and
add
push
mov
sbb
int
sbb
pop
pop
xchg
filds
xor
dec
aas
ja
add
dec
cmpsl
pop
inc
cmp
lret
sbbl
xor
add
push
das
mov
xor
int
adc
add
loopne
insb
cmp
cli
add
je
adc
inc
aaa
sub
testb
push
adc
sbb
jmp
mov
xor
pop
pushf
cmpsl
scas
sbb
aad
add
push
cmpsb
call
cmp
and
call
mov
and
js
xchg
push
xchg
push
dec
aas
xchg
stc
lods
pop
xchg
shll
pop
and
push
pop
add
mov
pop
rol
jo
js
movups
icebp
scas
data16
mov
icebp
xor
sarb
int3
push
mov
inc
fisttps
shl
xchg
jle
dec
push
fcmovnb
push
test
repz
stos
and
and
cmc
dec
test
pop
enter
ret
es
cld
fxtract
jmp
sahf
sbb
aas
mov
popf
pop
cld
scas
mov
push
pop
loop
lods
add
push
aaa
or
enter
xchg
sbb
in
jns
adc
iret
add
inc
sub
insl
sub
gs
jae
inc
sbb
inc
and
inc
hlt
in
mov
push
pop
push
and
movl
pop
mov
add
xor
cmp
lods
mov
xor
divl
andb
lods
and
add
jl
pop
mov
movsb
fldenv
mov
xor
cmc
adcb
jle
jo
add
pop
push
xor
jne
xor
pop
adc
daa
loopne
mov
inc
adcl
scas
into
into
aad
ret
dec
sbb
push
mov
fstps
adc
sbb
test
xchg
mov
mov
inc
cmc
sub
and
repnz
scas
and
jecxz
mov
adc
dec
rolb
inc
mov
dec
xchg
mov
cmp
push
push
popf
dec
xchg
outsl
cmpsb
adc
fsubp
xor
scas
fwait
daa
pcmpeqb
push
outsb
mov
adc
or
sbb
aam
into
add
xchg
dec
lds
movb
dec
push
lds
xor
sbbl
je
int
fsts
cltd
sar
dec
idivl
and
pop
in
and
jge
scas
sbb
out
in
sub
out
mov
fs
ja
inc
repnz
and
std
dec
iret
movsl
or
jns
dec
xor
mov
or
lea
into
fnsave
cmp
push
sub
jg,pn
xchg
pop
aam
aas
jmp
inc
in
sbb
mov
dec
or
push
into
movsb
iret
xor
sarb
into
repnz
sub
push
js
dec
mov
xor
pop
lods
dec
lret
xor
enter
jl
inc
push
movsb
inc
push
xlat
aas
add
mov
xor
jle
sub
aam
cld
out
push
mov
adc
sub
adcb
scas
ret
rcl
call
xchg
shlb
aaa
pop
sbb
xchg
xchg
and
jmp
sti
dec
dec
cmc
call
adc
xor
add
daa
xchg
cld
test
mov
mov
adcl
and
test
mov
and
lods
cld
push
movsb
xlat
xor
stc
sbb
adc
inc
in
loop
sbb
fbld
sub
ficoml
cmpsb
or
xchg
and
xor
and
sbb
das
xlat
nop
pop
cmp
in
gs
fs
pop
mov
ficoml
pusha
fidivrl
ret
and
ds
sbb
xor
lret
mov
xor
nop
mov
sub
jmp
and
add
fstps
popf
lea
aaa
adc
pop
or
les
sub
daa
out
jo
dec
jae
fldcw
jecxz
aas
cmc
ljmp
das
mov
lcall
mov
mov
add
sahf
pop
inc
jle
mov
into
sahf
shl
adc
iret
inc
out
stos
xchg
clc
jge
mov
cmp
adc
or
xchg
adc
loope
mov
std
dec
ljmp
stc
mov
test
addr16
pop
fsub
xchg
cmpsb
les
enter
dec
in
mov
fisubrl
sub
and
aad
or
mov
mov
xchg
movsb
pop
dec
loop
adc
sbb
fstl
pop
fwait
cmpsl
cltd
cld
sbb
xchg
dec
mov
pop
add
mov
pop
arpl
dec
xchg
setp
xorl
cwtl
negb
jecxz
xchg
pop
sbb
fistpll
sahf
mov
push
mov
push
lcall
sub
outsl
movsw
popf
stc
std
mov
aam
js
xor
jp
clc
jl
add
in
adc
in
andb
lock
mov
jb
addr16
bound
jg
enter
fucomip
jbe
mov
in
aas
sti
pop
mov
pop
sub
pop
and
push
daa
lret
mov
push
out
aas
cmpsb
cmp
addr16
pop
test
in
jp
clc
mov
leave
push
stos
sbb
sbb
in
dec
xor
cmpsb
and
sub
leave
shll
subb
dec
ss
cmp
movsl
xchg
insb
ret
aaa
xchg
insb
cmp
mov
mov
pop
dec
cld
in
or
out
and
sbb
inc
fwait
push
xchg
sbb
orb
xorb
pop
add
mov
pop
cltd
repz
repz
jmp
insl
les
pop
jp
enter
sbb
sub
insb
or
outsb
testl
jno
cmp
movsl
ja
adc
mov
mov
outsb
in
and
dec
xlat
cmpsb
fidivl
mov
test
xchg
adc
mov
jp
push
fcmovne
xor
pusha
clc
xchg
scas
pushf
iret
lock
flds
mov
jmp
pop
push
sti
ret
inc
hlt
adc
xchg
inc
movsb
leave
cmp
arpl
or
mov
and
and
mov
inc
pop
jp
push
xchg
sub
and
ret
pop
hlt
mov
add
popa
pop
fdivrs
and
js
addl
pop
fsubs
lock
xchg
mov
cld
shrl
mov
lret
into
or
daa
sbb
mov
or
sbb
mov
ljmp
sbb
repnz
mov
lcall
xchg
lock
fmul
mov
je
clc
mov
pop
std
mov
prefetch
or
mov
sbb
pop
sbb
mov
iret
enter
orb
xor
sbb
stc
into
popa
and
mov
cmp
inc
mov
mov
ss
cmp
and
cmpsb
and
or
fisubl
hlt
and
adc
xor
pop
mov
push
outsl
cld
mov
or
xchg
sbb
pop
scas
inc
stos
mov
push
jnp
cwtl
aas
movsb
inc
cmp
loop
push
or
movl
and
outsb
mov
icebp
aaa
push
iret
pusha
mov
je
pop
jne
sub
xor
std
lcall
or
pop
mov
mov
in
adcl
xor
fstl
jge
std
dec
mov
inc
cli
sti
scas
xor
push
dec
dec
stos
mov
fisttpl
pop
test
xor
sub
sbb
out
sbb
movsb
insb
cltd
out
bnd
enter
rol
jne
adc
jae
or
cltd
stc
push
enter
mov
push
sbb
ja
xor
jp
push
mov
cmp
add
pusha
scas
jo
add
inc
movsl
int3
fdivrs
mov
ret
test
shr
dec
dec
and
dec
inc
fsub
jbe
adc
mov
lock
ret
fdivrp
jno
pop
cmp
jle
inc
mov
lods
aam
xchg
sub
xchg
push
subl
fcomps
push
sahf
movsl
jbe
push
inc
pop
sub
daa
adc
or
ficoms
stos
xor
jp
ret
imul
fs
mov
sbb
and
call
xor
ret
xlat
push
adc
pop
pop
xchg
cmpsl
aam
enter
sub
mov
inc
add
mov
and
mov
sbb
sti
xchg
mov
or
xchg
je
std
mov
bound
cmp
jp
call
stos
stos
dec
je
data16
fsubl
int3
lock
ja
popa
out
test
sbb
lock
rclb
xor
xchg
test
xchg
sahf
dec
rcrl
testl
or
xor
sub
imul
int
repz
push
push
hlt
cli
fidivs
jbe
push
repz
mov
insb
popf
stos
fcoml
loop
adc
cs
jo
or
fwait
adc
pop
shlb
lret
scas
jg
mov
jns
les
jge
imul
sbb
ror
aad
out
xor
movq
ss
popf
jnp
add
fwait
add
idiv
cltd
pop
rorl
sti
pop
pop
movsl
mov
fs
mov
sub
test
adc
sbb
popa
popa
lods
push
loopne
fdivrs
dec
sub
out
sbb
pop
fisubl
sub
cmpsl
icebp
lock
xchg
cltd
ficoms
movsb
sub
push
pusha
in
jbe
adc
push
pop
sbb
or
jno
shrl
and
movsb
xor
and
inc
push
xchg
repnz
pop
adc
inc
push
lock
scas
shrl
and
shl
inc
push
mov
and
mov
fcoml
loop
cmpsl
stos
imull
subb
fidivl
add
popa
mov
jb
xor
pop
jae
mov
out
pop
aaa
jno
mov
fisttpl
nop
lock
es
jb
popf
and
nop
and
push
or
cmc
mov
inc
fnsave
cli
add
clc
stc
and
scas
pop
aas
inc
lea
cmpsb
imul
roll
mov
adc
std
jl
pop
decb
pop
aas
mov
mov
inc
pop
dec
pop
jp
popa
mov
mov
cmp
test
push
push
jp
adc
jmp
xlat
jle
add
notl
sub
jno
data16
loopne
add
loopne,pn
ja
or
mov
lods
xchg
cs
clc
aad
lahf
pop
cmp
notl
inc
xor
sbb
fidivrs
dec
jo
mov
out
xchg
push
popf
sub
addr16
xchg
add
and
pushf
stc
mov
jmp
add
setne
mov
and
push
lcall
lds
ret
pop
mov
sub
in
jb
and
jnp
cs
outsl
lret
orl
xchg
adc
daa
aad
inc
das
aaa
mov
daa
ljmp
adc
repnz
imul
imul
ficoml
aaa
adc
hlt
push
pop
add
neg
cwtl
lcall
shrl
aaa
ja
shlb
sbb
je
jbe
mov
es
add
lds
dec
jmp
push
push
jno
in
daa
or
pop
repnz
call
jl
in
cwtl
js
sub
bnd
ret
pop
mov
into
mov
ds
outsl
cmp
mov
mov
mov
adc
and
pop
jle
fsub
cwtl
and
xchg
nop
repnz
call
outsb
mov
out
jno
ja
sbb
outsb
stos
mov
repnz
enter
mov
xchg
sbb
out
mov
adc
cltd
lretw
sarl
mov
cmc
repnz
pop
lea
sbb
xor
vxorps
push
loopne
scas
test
jmp
fldt
icebp
negb
bound
sub
lret
add
out
ja
jle
in
sub
xchg
adc
sahf
arpl
insl
loopne
arpl
scas
js
shl
arpl
hlt
dec
scas
mov
inc
fisttpl
add
inc
dec
adc
sub
jno
dec
cmc
aaa
ljmp
fld
rcll
rcrl
mov
movsb
adc
push
cmpsl
inc
bound
mov
mov
in
push
orb
nop
lahf
in
sub
xor
cmc
call
jle
xchg
pop
lods
mov
repz
in
ds
xchg
adc
mov
in
adc
test
sbb
cmp
dec
les
mov
inc
sbb
jge
into
pop
or
jp
cmp
lret
scas
cmpsb
cmp
sbb
xchg
movsl
and
movsl
nop
popf
mov
stc
daa
sub
jae
jbe
out
iret
out
stos
dec
addr16
in
pop
in
xchg
push
pop
mov
mov
dec
mov
inc
mov
jo
pop
push
and
js
sub
push
nop
idivb
jo
jmp
fstps
adc
aas
mov
cmp
mov
sbbb
cli
imulb
arpl
cli
xor
inc
leave
insl
cs
movsl
in
xchg
push
mov
mov
rorl
out
decb
add
mov
xchg
mov
jp
mov
dec
xchg
pop
ljmp
sbb
push
push
jb
and
sti
mov
inc
xchg
xchg
sahf
hlt
test
sbb
xor
in
mov
add
lods
pop
icebp
scas
pop
cmp
adc
sub
jecxz
movsl
lock
popf
jp
push
clc
pusha
dec
sbb
mov
add
ret
repnz
push
cmp
push
iret
imul
push
xor
xor
ljmp
jecxz
jg
test
jl
loope
rcll
sar
mov
rcll
mov
jp
push
shl
jecxz
out
or
pushf
adc
out
das
ds
and
sub
lret
ds
mov
xchg
mov
cltd
push
sub
rcl
scas
arpl
sbb
stos
imul
mov
rdmsr
lcall
mov
das
mov
dec
inc
leave
repnz
fmuls
out
loope
add
jg
inc
into
cli
movsl
xchg
adc
push
push
inc
xor
adc
push
lea
je
sub
dec
rcr
jns
cmp
in
in
pop
ljmp
push
push
jle
jmp
or
jbe
pop
lret
call
stos
mov
push
adc
jl
test
lock
push
xor
add
lret
repz
mov
fists
out
lods
and
imul
cli
mov
mov
jg
pop
test
ret
dec
and
push
add
xchg
push
dec
cs
lds
add
pop
es
jns
movsb
sub
rorl
cmpsb
inc
or
lods
mov
popa
mov
enter
lahf
sbb
dec
add
int
icebp
dec
ja
jns
cmc
mov
add
int3
mov
or
shl
outsl
adc
int3
leave
and
addr16
sbb
in
sbb
dec
dec
mov
jo
dec
jno
and
pop
jg
aaa
mov
mov
mov
sbb
mov
mov
in
sbb
mov
les
and
inc
call
ja
mov
adc
push
scas
cmp
hlt
cmp
xchg
rcrb
cli
call
adc
cli
jae
mov
pop
push
in
sbb
cmp
push
daa
mov
mov
add
cmp
pop
rolb
sub
arpl
inc
jmp
sub
arpl
negb
and
ficompl
je
shll
pop
fwait
cmpl
arpl
or
xchg
fdivs
inc
adc
rolb
hlt
kshiftrd
lea
jl
data16
stos
addb
xor
sahf
repz
clc
mov
lahf
push
jp
mov
xsave
jp
fwait
mov
adc
je
ffreep
xor
mov
fstl
push
ds
leave
jg
jae
divl
or
test
inc
aaa
scas
dec
pop
sub
push
jae
loop
xchg
fnsave
pop
mov
sbb
cmp
push
xchg
cmpb
pop
inc
lret
addr16
fwait
call
clc
dec
push
pop
je
adc
jb
mov
cmp
jbe
push
in
fdiv
mov
loope
scas
add
mov
dec
jnp
loopne
sub
inc
jmp
in
cltd
jo
mov
xchg
frstor
cli
xor
dec
dec
and
sbb
out
aad
dec
aas
stos
addl
mov
push
add
pop
pop
and
sbb
fimull
fldenv
daa
pop
pop
rorl
test
xchg
loopne
data16
cltd
das
out
sbb
mov
cld
adc
movsb
outsb
mov
ret
xchg
fimull
mov
aam
add
aas
out
mov
mov
mov
xchg
loop
lret
adc
push
es
mov
aaa
xchg
jo
ret
cmp
and
stos
into
pop
lods
popf
test
xchg
test
pushl
ljmp
notl
fcoml
imul
or
out
ret
sbb
lds
xor
sbbl
cwtl
xor
cmpsl
pop
sub
pop
pusha
loope
and
or
xchg
lds
outsb
jnp
inc
mov
jp
cmc
pop
jecxz,pn
repnz
xor
mov
xor
stos
cli
sbb
inc
sahf
sub
and
aas
inc
xchg
fwait
or
les
or
gs
or
mov
cmp
dec
jno
jo
and
out
mov
xchg
mov
adc
call
push
push
js
mov
mov
ds
mov
xor
cmp
ds
adc
icebp
mull
cmp
cmpsl
xchg
jae
aaa
es
dec
fimull
test
leave
xor
mov
shll
lret
das
inc
pop
add
outsb
out
add
xor
out
cmpsb
aam
es
jmp
loope
dec
xor
flds
shr
jmp
ret
bound
loop
pop
adc
testb
test
enter
xorb
and
adc
add
imul
push
sti
pushf
arpl
jnp
rcll
nop
scas
lret
in
sarb
ds
std
jge
and
out
and
stos
hlt
mov
dec
sbb
mov
popf
dec
cmpsl
lea
ds
push
stos
fsubrp
loopne
nop
cltd
mov
add
out
push
mov
add
xchg
inc
pop
in
dec
ret
out
inc
add
lods
test
out
sub
and
dec
xor
les
and
int3
jle
push
sbb
imul
repz
jge
inc
sahf
ficompl
rclb
adc
hlt
push
fstpl
jb
ficompl
sbb
mov
testb
xchg
dec
icebp
arpl
sarl
les
adc
ljmp
mov
sub
ret
shlb
add
notb
jecxz
fisubrl
pusha
sbb
xchg
xchg
jge
cmp
jae
mov
xchg
add
add
out
out
mov
mov
jp
dec
je
ret
sbb
add
inc
mov
and
sahf
dec
xor
xor
xchg
cmp
sub
pusha
sbb
cltd
sbb
imul
js
mov
popf
push
call
bswap
dec
mov
sub
fnstsw
in
fdivrs
and
ret
addr16
mov
and
fildl
icebp
sub
test
scas
sar
call
addl
mul
inc
pushf
repnz
popa
out
jne
push
xor
sub
mov
mov
dec
fdivr
push
or
test
xor
dec
mov
sub
mov
popa
or
cld
int3
test
xchg
cwtl
mov
jns
je
leave
fmuls
push
or
imull
aad
test
pop
pop
ret
add
sarl
jnp
xor
xchg
pop
mov
pushf
or
lret
insb
enter
mov
cmpsl
inc
inc
push
mov
outsl
jp
sti
inc
int3
mov
pop
ss
daa
popa
mov
xchg
int3
shlb
rolb
icebp
push
cmp
inc
dec
jae
cmp
inc
xor
stos
inc
push
jb
mov
mov
mov
pop
insb
jns
sub
inc
jae
enter
dec
dec
iretw
jmp
cld
cmc
ss
dec
std
into
pop
jbe
lret
aaa
loop
daa
test
out
mov
les
bound
sbb
aad
shrl
mov
mov
adc
cmpsl
lcall
mov
adc
popa
mov
dec
dec
std
push
xlat
inc
push
test
lods
jbe
xlat
jne
mull
popa
fstpt
xchg
aas
mov
jl
mov
mov
mov
data16
pop
mov
rol
or
fstps
jge
jmp
popa
xorl
test
js
pop
sbb
adc
mov
inc
rcl
idivb
jge
inc
loope
adc
dec
xchg
inc
adc
mov
data16
mov
sti
or
enter
pusha
inc
lods
fdivs
push
xor
inc
dec
adc
je
push
dec
push
test
pop
inc
xchg
mov
mov
adc
icebp
add
scas
jp
aaa
fistpl
into
xor
stos
rclb
jecxz
mov
cmp
jl
mov
icebp
sub
push
mov
in
cmp
push
scas
outsl
cmp
mov
sbb
mov
imul
and
push
addr16
pop
js
aad
outsb
mov
or
andl
imul
push
pop
cmpsl
fdivrl
insb
aas
repz
ret
jns
or
sub
shlb
inc
ret
dec
outsl
cld
cltd
fs
repnz
xchg
inc
sbb
push
orl
pop
lds
xor
xchg
mov
push
test
and
cmp
inc
xchg
or
out
xchg
jmp
push
int
push
int3
and
xor
movsl
aaa
test
lcall
insb
lahf
mov
mov
cmp
test
sbb
sbb
mov
push
jmp
in
pop
mov
fcmovne
sbb
mov
aaa
or
sub
adc
pop
inc
dec
lods
dec
or
loope
or
mov
lret
in
pop
and
xchg
in
imul
imul
xchg
fldl
fwait
movsl
out
mov
push
gs
xchg
dec
in
imul
into
sbb
popf
jmp
add
mov
pop
clc
pop
and
push
aaa
mov
cmp
add
aam
test
fildl
or
mov
shll
push
popa
mov
ret
jae
into
popa
push
or
call
sti
sub
adc
pop
inc
mov
in
lods
aam
loopne
cmp
std
and
cmp
rcll
or
loopne
ss
imul
inc
jmp
add
add
ficoms
mov
add
add
dec
fcmovu
test
adc
notl
cld
loop
sub
in
mov
jmp
xor
lea
sbb
cmp
mov
movsl
shlb
adc
cmpsb
mov
roll
fnstcw
pushl
xchg
ja
and
les
cmp
lock
shll
loopne
fwait
repz
notl
dec
lds
jne
adc
lret
cmp
insl
cld
punpcklbw
sub
xchg
jg
hlt
cld
scas
jns
inc
popf
orb
rcll
test
xchg
es
popf
jp
push
or
push
jno
ret
mov
xchg
addr16
xor
filds
insl
outsl
cmp
jecxz
sub
fisubrl
push
jl
push
sbb
sbb
into
adc
sub
je
lds
cmp
bound
enter
loopne
and
push
adc
shrb
repnz
ss
pop
outsb
adc
cmpsl
iret
push
xchg
scas
fwait
call
lock
fwait
or
lret
add
or
and
pop
fsubs
ja
popf
cmpb
lahf
pop
adcb
stos
das
xchg
mov
cli
mov
mov
out
lahf
inc
adc
xchg
xlat
mov
scas
lret
icebp
push
bnd
adc
sti
std
mov
out
pop
pop
in
pop
xor
nop
scas
mov
cli
mov
mov
sbb
dec
dec
ret
ret
xchg
lock
fldcw
xchg
inc
sub
pop
subl
adc
mov
nop
dec
mull
inc
repz
std
add
xor
sbb
call
push
test
out
pop
nop
xor
hlt
imul
in
cmp
imul
shl
outsb
adc
push
rolb
out
lret
dec
inc
lods
movsl
add
gs
push
loop
dec
add
data16
ss
int3
iret
inc
add
inc
cli
dec
cmpsb
fsts
cmpsl
and
sbb
xor
or
int
popf
outsb
out
lds
scas
pop
cwtl
inc
mov
and
add
push
xchg
lock
xor
aad
sar
push
iret
lahf
jl
cmpsb
sarl
mov
enter
lahf
mov
rcl
in
xchg
repz
sti
or
dec
inc
test
shll
aad
rcrb
repnz
pop
repnz
cltd
popa
and
int
cmp
jne
and
dec
out
fisttps
shll
popf
sbb
aas
and
pop
fimuls
sub
xlat
or
aam
mov
mov
shrb
or
sub
pop
push
mov
in
xor
shl
cmp
push
shrl
cmp
push
mov
pusha
out
cmp
scas
add
mov
sbb
xor
jb
mov
jecxz
std
sub
xor
and
and
test
shlb
lock
mov
jp
in
movsl
push
sbb
les
fcoml
sub
lods
jb
jne
fidivl
insl
add
stos
cmp
aad
gs
mov
adc
pushf
nop
je
mov
lret
xor
mov
sbb
shrb
lods
ret
iret
adc
or
daa
and
mov
push
jg
int3
push
push
or
dec
cmp
xchg
repnz
fbld
xor
add
sub
lret
lock
cmc
adcb
icebp
.byte
mov
.byte
mov
dec
or
add
dec
or
add
or
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
nop
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
lcall
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
lods
dec
add
add
add
incl
add
add
dec
add
add
add
mov
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
enter
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
rorl
rorl
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
fimull
fimull
lcall
dec
add
dec
add
incl
add
add
in
add
add
add
loope
add
loope
add
incl
add
add
add
incl
out
add
imul
imul
jmp
dec
add
hlt
dec
add
add
add
incl
add
add
hlt
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
clc
dec
add
add
add
incl
add
add
clc
dec
add
add
add
incl
add
add
add
add
incl
add
add
sti
dec
add
add
add
sti
decb
decb
add
add
incl
dec
add
dec
add
inc
add
les
dec
add
gs
add
add
jno
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
or
add
add
incl
add
add
or
add
add
incl
add
add
or
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
incl
add
add
dec
add
add
add
jmp
push
dec
add
push
dec
add
jmp
cmovge
in
cmovge
lock
incl
adc
add
dec
add
jmp
adc
and
pushl
adc
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
sbb
ljmp
dec
add
add
add
add
push
dec
or
add
or
add
dec
or
add
or
add
dec
or
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
cmp
cmpsl
dec
lds
mov
das
or
mov
jmp
jo
pop
sub
cs
jbe
add
sbb
add
orl
xor
sbb
pop
or
stos
mov
aad
push
test
cmp
jno
lock
aaa
add
push
and
push
std
lret
jae
push
out
sbb
adc
data16
rol
sbb
ret
and
jg
cmpsl
insl
adc
xchg
cld
data16
stc
fdivp
js
fidivs
or
cld
pop
sbb
das
fistpll
and
dec
mov
aaa
out
sub
scas
fwait
or
adc
fildll
add
in
sub
pop
push
and
inc
inc
and
shrl
inc
jge
sti
test
scas
and
xlat
and
insb
divb
popf
fisttpll
pop
negl
movsl
ret
mov
xchg
mov
dec
movsb
nop
mov
scas
sub
pop
es
movsl
sub
insl
test
jl
out
sub
jb
push
test
xlat
fidivrl
pop
sub
cmp
sub
adc
in
popa
cli
push
add
cwtl
adc
xchg
add
and
aad
xchg
push
ror
adc
pop
inc
loope
xchg
sahf
push
mov
sbb
pop
cmpsb
mov
es
add
mov
xor
sbb
mov
stos
add
cwtl
pushf
mov
xchg
sub
sub
insb
xchg
icebp
int
lcall
cmpsb
sbb
xor
push
dec
and
add
not
inc
fists
sti
aad
jae
cs
ds
pop
lret
xchg
shrb
out
loop
jmp
out
lcall
insb
add
imul
xchg
add
mov
xchg
lds
or
pop
push
jg
imul
pop
jmp
js,pt
hlt
mov
pop
out
xchg
sahf
test
aas
fildl
stos
roll
mov
faddl
imul
mov
inc
mov
dec
jno
scas
popf
fwait
mov
xor
and
enter
jge
xlat
mov
jle
movsl
test
clc
jo
add
dec
fidivrl
xlat
es
repnz
out
andl
test
adc
and
mov
pushf
stos
xchg
push
movsb
out
jo
cwtl
pop
cmpl
les
cmp
inc
idivl
lret
cmpsb
xorl
clc
ss
dec
mov
test
imul
xchg
je
fisubl
jle
add
push
sbb
into
push
aas
pop
jae
divl
pop
add
call
cs
sarl
dec
leave
fisttps
in
mov
or
test
push
dec
sub
push
in
das
jns
dec
mov
fwait
add
lahf
jno
repnz
movsl
stos
fcoms
mov
mov
dec
int
and
sub
xor
bound
mov
xchg
and
in
repnz
and
pop
loopne
mov
sub
hlt
stos
aam
mov
adc
pop
out
adc
cmpb
adc
mov
cmp
adc
orb
push
roll
lods
adc
pop
sub
lods
dec
out
inc
imul
sbb
in
mov
xchg
cmp
test
push
sbb
adc
mov
divl
pop
sbb
dec
dec
std
sahf
lcall
jno
test
pop
scas
pushf
xor
xorb
cmp
mov
adcb
test
test
and
test
pop
pop
popa
xor
cltd
daa
pop
pop
push
ret
add
add
mov
orb
rclb
in
je
xor
dec
pop
inc
out
arpl
or
xor
pop
insl
or
cmp
pop
push
cmp
xor
cmp
sub
hlt
and
std
cmp
mov
pop
rcrb
popa
notb
push
add
je
jl
aas
repz
push
daa
pop
lods
lea
jae
scas
or
sbb
inc
nop
cmpsb
push
dec
sbb
dec
sub
ja
int3
icebp
pop
popa
push
mov
or
leave
sbb
cmp
sbb
mov
shll
les
insb
add
xchg
inc
jae
or
cmp
popf
cmp
aas
in
inc
sub
xchg
mov
cmp
dec
jmp
pop
fsubs
push
adc
ret
stos
in
push
or
sti
in
or
xor
outsl
cli
in
mov
jnp
cmpsb
mov
ds
and
push
in
scas
dec
xor
xor
add
scas
push
mov
push
ficoml
push
out
pusha
arpl
dec
push
in
pop
push
sbb
mov
fs
cmpsb
cmpsl
cmp
scas
call
xchg
jge
or
mov
jle
mov
cwtl
dec
mov
or
hlt
xor
dec
nopl
cmpsb
ror
dec
sti
addl
scas
leave
jle
pop
aas
or
hlt
inc
test
lea
repnz
mov
insb
insl
pop
fucomp
add
pop
pop
rorb
scas
cmp
repz
cmpb
pop
adc
pop
mov
and
pop
jo
add
push
in
cmpsl
nop
pop
pop
cmp
stos
mov
lds
bound
out
ss
or
mov
xchg
xchg
ljmp
mov
ljmp
fnstcw
and
test
xchg
push
add
cltd
sysret
loopne
test
loop
add
fs
lcall
pop
lods
xchg
xor
rorl
or
test
notl
cmp
sbb
jne
adc
add
pop
cmpsl
jbe
fwait
je
gs
mov
bound
mov
test
clc
fldt
ret
dec
mov
jecxz
outsb
sbbb
xchg
sub
scas
cwtl
jb
jl
mov
adc
pop
fst
push
ds
movsl
nop
mov
ss
std
jno
popa
pop
pop
lea
in
inc
and
cmp
cwtl
stc
jg
add
popl
pop
or
call
les
test
shll
sar
push
adc
outsb
pop
sahf
jo
cmp
sahf
lock
icebp
sub
lcall
xchg
dec
dec
inc
push
sub
dec
cmp
adc
adc
clc
sub
add
rcll
jl
cmp
lcall
add
fbld
out
jecxz
les
add
push
movsl
rorb
inc
adc
out
test
fldt
or
and
js
pop
fwait
jae
pop
lahf
inc
daa
fwait
xor
ficomps
add
jns
andl
or
xchg
inc
mov
or
dec
pusha
fistpl
mov
dec
in
int
pop
js
mov
shlb
pop
fcoms
lcall
shlb
cmc
dec
out
push
mov
cmpsl
addb
adc
aad
push
or
inc
es
xchg
in
add
push
xor
ja
clc
jl
xor
add
or
fiaddl
icebp
out
ds
pop
jg
adc
push
aas
inc
cmp
sbb
jl
mov
pop
int3
imul
loope
xor
ss
cld
shll
fwait
or
sbbb
mov
lds
adc
and
pop
cmc
inc
shrl
cwtl
repnz
sub
popf
nop
es
push
lret
pop
out
outsl
idivl
push
and
stos
push
sti
xor
xlat
push
push
shll
xor
sub
sub
xor
pop
imul
xchg
shll
cmp
xor
mov
mov
lods
inc
push
and
fs
lods
fstps
rolb
mov
or
ljmp
mov
mov
movsl
stos
rclb
and
pop
jle
sub
dec
xchg
xor
clc
movsl
jne
iret
movsl
pushf
in
jb
aaa
int3
js
pusha
mov
fwait
pushf
aaa
sbb
xchg
outsb
sbb
xor
mov
push
insb
arpl
adc
shlb
pop
popa
repz
pop
inc
push
scas
cltd
push
push
mov
imul
lahf
inc
test
js
jmp
pushf
lds
add
imul
jmp
jge
fcompl
lods
test
loope
js
sub
push
int
sub
movsl
dec
pushf
add
add
push
lods
jp
pop
sub
and
out
inc
inc
scas
lods
add
popa
mov
cmp
push
in
xor
andl
xor
cmpl
mov
lods
push
pop
xchg
mov
push
sub
pop
fsubs
lcall
sbb
adc
xchg
lret
cs
pop
iret
cmp
notl
pop
rcr
mov
stc
sbb
insl
push
pop
mov
repnz
mov
dec
test
fdivs
in
pop
je
pop
bound
mov
sub
sbb
xor
in
dec
movsl
pushf
data16
mov
imul
faddl
int
mov
jecxz
mov
cmpsb
inc
and
clc
movsl
lret
mov
xchg
arpl
adc
inc
mov
adcb
andl
mov
dec
lret
insb
clc
mov
adc
or
pop
lds
frstor
adc
mov
inc
aaa
mov
gs
ret
fisubl
or
jl
xchg
inc
pop
mov
mov
aam
mov
and
insb
inc
pop
mov
push
cmp
es
arpl
inc
std
bound
mov
in
mov
push
repnz
sbb
repnz
fucom
in
and
mov
stos
shl
inc
sarb
ds
sarb
fldt
and
and
iret
push
inc
sbb
mov
lahf
lret
cmc
mov
cli
int3
pop
filds
mov
sub
stc
jle
lret
cltd
xchg
mov
ficomps
imul
pop
cmpsl
ficoms
lds
push
mov
das
inc
arpl
or
push
fdivr
outsb
dec
jno
dec
sti
cmp
neg
inc
sbb
jo
repz
gs
fucom
jne
imul
or
jbe
repnz
js
dec
lahf
push
stos
or
fimull
adc
adc
sub
jl
pop
xchg
loopne
loop
pusha
cmp
adc
in
inc
mov
popa
jae
or
movsl
mov
mov
jg
imul
ud0
xchg
xor
ds
xchg
mov
test
and
mov
inc
sbb
cmc
std
out
pop
hlt
and
sahf
fxch
ffree
mov
add
test
test
dec
push
out
fcompl
or
mov
mov
mov
push
scas
in
lret
scas
mov
stos
rclb
sbb
mov
dec
mov
js
sbb
adc
dec
imul
push
jnp
cld
cmpsb
addr16
jo
jmp
mov
scas
aam
mov
cmc
inc
shlb
sbb
fs
pop
xchg
lahf
sub
jmp
ds
bound
mov
es
repz
adc
dec
and
sbb
out
and
mov
mov
mov
xor
and
mov
imul
pushf
fistps
fs
dec
xor
jg
push
lods
es
imul
or
cmp
fstl
xchg
in
dec
sbb
je
sub
incb
push
adc
xchg
jmp
pop
lds
cmp
push
xchg
add
es
cmpsl
out
jl
cmc
lds
clc
loop
xlat
add
cs
pop
js
enter
mov
adc
mov
rorl
xor
add
out
scas
xlat
fwait
mov
xchg
mov
push
sti
out
aas
test
pushf
ret
fists
xor
cld
xor
movsb
enter
pop
imul
imul
dec
out
cltd
push
cmpsb
cmpb
adc
mov
xchg
sbb
dec
icebp
push
lock
in
or
in
fnstcw
lret
rcl
popf
jmp
jnp
push
mov
or
test
push
dec
iret
jbe
mov
and
pusha
xchg
and
jno
jge
push
gs
cmp
or
sub
or
roll
mov
pusha
jp
lcall
iret
xor
xor
popf
insb
mov
shll
xchg
xchg
imul
loopne
lds
ret
adc
jl
jo
paddusw
mov
sbb
lds
push
les
xlat
xchg
in
jae
lds
dec
sub
fmul
fidivs
lods
xor
test
xlat
jo
imul
xchg
dec
test
xchg
jecxz
add
leave
and
mov
in
repz
adc
subl
xchg
addr16
push
pop
sub
mov
pop
pshufw
stc
out
jecxz
test
lahf
or
out
xchg
ljmp
xchg
mov
push
lods
and
insb
or
cmpsb
bound
xchg
cld
adcl
sub
jbe
lock
mov
loope
es
in
outsl
lret
jo
aam
inc
sarl
arpl
jle
adc
sbb
jno
icebp
mov
ss
stos
test
xchg
subl
and
cld
inc
mov
fwait
add
outsl
and
aad
fstl
out
mov
enterw
ficompl
cmp
cmp
pop
mov
lret
push
pop
popf
add
mov
data16
lcall
jo
or
cmc
pop
lock
rcll
clc
mov
dec
fstpt
out
test
cmp
cli
sbb
dec
push
cmp
bound
mov
dec
sbb
and
push
adc
sub
push
and
ret
out
dec
xchg
push
inc
mov
dec
dec
ljmp
dec
mov
cmp
sub
pop
insb
iret
data16
or
add
fs
cmp
mov
push
push
mov
cltd
shll
sub
stc
or
sub
mov
push
ds
lods
mov
jp
lahf
int3
xor
push
orl
xchg
daa
xor
dec
sbb
out
lret
in
shll
pop
or
xchg
jmp
outsl
adc
scas
stc
xchg
mov
pop
lahf
clc
inc
jmp
aam
ljmp
inc
or
fidivl
shlb
mov
cmp
sarb
lods
jle
test
pusha
xor
cmp
stc
mov
and
fsubr
sbb
or
jge
fidivs
leave
int
inc
loop
inc
jnp
call
notl
xor
js
insb
mov
dec
test
push
push
int
shll
push
bound
mov
lods
xchg
inc
inc
and
or
inc
sub
mov
pop
jmp
pusha
data16
ret
or
xchg
xchg
js
dec
arpl
inc
hlt
sbb
loope
iret
push
mov
imul
or
imul
leave
pusha
xor
and
addr16
mov
test
popa
xor
push
sar
adcb
movsb
mov
or
adc
mov
mov
subb
lds
and
incl
das
sub
adc
or
shll
fs
and
popa
jl
mul
insb
test
cmpsb
mov
insb
loope
inc
xlat
fnstcw
hlt
xchg
stc
dec
fstl
or
add
mov
and
and
mov
fistps
fldenv
arpl
or
out
sub
or
mov
sub
push
push
inc
stos
cli
inc
push
sbb
in
xchg
adcb
mov
mov
ficompl
dec
cmpsb
xchg
pop
mov
daa
test
in
pop
xor
fmul
xchg
or
cli
inc
xor
loope
cbtw
dec
inc
inc
arpl
push
xchg
xchg
ss
into
scas
sub
sti
sar
push
fldl
mov
dec
outsl
shl
or
cmp
rolb
insb
mov
xor
insl
jb
pop
mov
or
add
jmp
dec
cmpsb
popa
ret
jb
xchg
ljmp
xor
and
jno
insb
xchg
xor
cmp
mov
and
pop
test
adc
push
inc
dec
inc
or
or
leave
push
fisttpll
inc
pop
pcmpgtw
repz
inc
pop
push
push
adc
xchg
sbb
mov
jg
add
xchg
fstp
in
out
mov
sub
add
mov
test
jo
xor
mov
scas
sub
xor
iret
roll
push
sub
arpl
mov
xor
into
imul
lods
jnp
sub
jp
test
scas
popa
testl
outsl
ret
icebp
inc
es
mov
push
dec
sbb
out
jle
cmp
imul
jbe
pop
pop
test
sbb
pusha
fs
lret
xor
les
dec
shlb
cmp
test
cwtl
adc
repz
scas
or
paddw
mov
inc
test
lret
lcall
add
shlb
cltd
sub
sbb
ds
movsb
dec
xchg
fnstenv
add
aam
fs
jp
adc
cld
push
mov
rorl
int
jo
and
int
and
adc
ret
or
int
sbb
pop
jmp
or
xor
or
ret
jg
or
mov
hlt
mov
out
mov
mov
clc
dec
sub
or
mov
leave
lret
fistl
pop
ret
divl
lods
push
insb
xchg
cmc
das
xchg
mov
mov
loope
insl
fadd
push
outsl
sub
and
rorl
jo
jg
stos
mov
jno
inc
cmp
mov
fsubrl
loope
jg
and
mov
incl
cmpl
push
jb
fistpl
ficoml
pop
add
or
jne
movsb
sahf
mov
leave
mov
out
xor
dec
shl
cmpsb
cld
cmpsl
sub
mov
xor
dec
std
cmp
ficoml
and
dec
aaa
sub
sbb
xchg
add
loop
and
scas
xchg
mov
jae
add
jl
dec
iret
into
mov
cmpsl
dec
jmp
xchg
shr
mov
mov
sbbb
and
push
adc
outsb
mov
jecxz
shlb
das
jae
cs
inc
icebp
jg
sbb
imul
sub
rcrb
and
jg
dec
xor
mov
je
test
lahf
inc
imul
lods
mov
lds
pop
cmp
sarb
push
pusha
xor
xchg
stos
sub
mov
xor
dec
xchg
pop
xor
xor
fnstsw
inc
sbb
cltd
test
sbb
xchg
mov
mov
dec
sub
pop
fisttpll
xor
jg
pop
bound
xchg
hlt
aam
or
pop
testl
xchg
mov
or
jp
lahf
sbb
jecxz
lods
and
push
mov
jmp
fxch
sti
xchg
mov
sub
cmp
jl
cmpsb
inc
and
and
fsubrs
insb
jle
lcall
in
push
shll
push
leave
or
js
jns
add
movsb
sub
scas
leave
add
movsl
jbe
adc
sti
lahf
mov
jge
inc
mov
push
fneni(8087
cltd
fistpl
loope
cmp
xlat
loope
push
lret
adc
or
mov
mov
rcl
ss
mov
sub
mov
sbb
imul
xor
inc
push
enter
call
and
out
and
and
mov
sbb
pop
xor
imul
arpl
jno
aam
cmp
push
les
push
imulb
add
out
dec
push
daa
popa
mov
jecxz
cmp
push
sbb
mov
mov
lret
test
pop
sub
stos
fisttpll
adcl
push
and
imul
jne
ret
mov
shll
outsl
mov
xor
dec
sbb
jb
cmp
fisubrl
out
push
add
sbb
cmp
inc
int3
adc
push
add
jae
clc
or
mov
cld
js
dec
aaa
push
mov
push
cwtl
and
outsl
push
rol
pop
movsb
lods
in
jmp
mov
pop
fldt
test
std
mov
xchg
lock
inc
pop
icebp
and
mov
adc
addr16
cs
icebp
in
stc
xchg
je
pusha
sbb
and
test
ds
outsl
xchg
imul
adc
mov
fdivs
pop
lret
ret
mov
sbb
or
int3
and
arpl
lret
insb
xor
dec
shl
mull
dec
movsb
insl
pop
lcall
rorl
cmp
fxch
scas
mov
mov
out
bound
cmpsl
ret
loop
push
pop
icebp
repnz
cmpsl
jmp
inc
and
xor
and
or
jmp
cmc
sub
adc
add
pop
add
inc
addr16
mov
aaa
ret
xor
xchg
pop
aas
lahf
sub
cmp
lret
xlat
or
insb
add
aad
cmp
or
icebp
or
loopne
mov
mov
scas
inc
and
mov
mov
je
test
push
inc
mov
mov
sbb
cltd
nop
ss
insb
outsl
pop
repz
repnz
inc
sbb
icebp
shll
pop
jb
xor
xchg
jmp
out
lretw
fimull
in
xlat
hlt
mov
fmul
mov
push
add
arpl
and
imul
mov
dec
mov
or
insb
jle
ret
lea
inc
dec
push
pop
jl
test
cld
aam
mov
push
sti
xor
sbbl
out
outsl
in
aad
adc
mov
pop
xchg
mov
mov
movsl
mov
imul
insl
sarb
pop
lods
icebp
cltd
pxor
pop
mov
xchg
mov
shlb
shlb
mov
sub
xor
pushf
push
jno
push
and
in
imul
imulb
dec
sbb
icebp
sbb
cmp
cmp
shll
sub
inc
fisubs
push
sub
imulb
and
adc
bound
roll
and
mov
insl
mov
aaa
mov
cmp
add
lock
inc
test
or
add
sbb
