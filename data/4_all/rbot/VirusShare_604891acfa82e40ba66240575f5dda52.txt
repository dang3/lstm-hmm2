mov
roll
movnti
pop
and
push
push
in
icebp
bnd
aas
add
pop
test
je
cmc
push
push
call
sbb
les
fdivrl
les
mov
add
ds
pop
jecxz
ret
push
lret
in
flds
popl
adc
lea
or
inc
and
pop
divb
or
in
push
pushl
push
bound
sbb
addr16
adc
adc
or
jnp
xor
ret
add
adc
or
inc
rorl
fwait
pop
andl
es
test
xor
cmp
jge
xor
cmp
push
setge
dec
out
scas
into
add
jno
sarb
mov
shr
mov
pop
push
nop
enter
imul
pop
pushl
lea
in
ss
jmp
sbb
or
add
add
mov
push
dec
ljmp
cld
mov
sub
cli
jno
movsb
nop
sbb
inc
push
push
call
mov
lcall
lods
xchg
xchg
cmp
inc
xchg
adc
jle
cli
shlb
cld
mov
clc
push
jns
outsl
sbb
pop
ds
inc
mov
push
leave
mov
push
jl
pop
adc
jno
xor
mov
jge
jno
fs
test
das
lds
call
push
dec
iret
sbb
mov
mov
or
push
insl
mov
call
orl
popa
lods
arpl
push
xchg
imul
imul
jg
sub
imul
adc
push
mov
mov
cmp
jg
mov
lea
aas
cmp
sbb
dec
ror
addr16
adc
test
ret
incl
sbb
loope
or
lock
push
adc
dec
pusha
stos
inc
aas
int
cmpsb
sti
add
push
cltd
movsbl
lahf
adc
paddb
mov
test
dec
inc
xchg
xor
or
clc
or
inc
jae
test
push
shlb
pop
mov
or
inc
in
cmp
test
loop
push
lods
sub
sub
or
movsl
test
and
pop
adc
push
jae
push
push
xchg
jae
or
and
cld
dec
inc
and
mov
loop
mov
pop
ss
push
aad
adc
pop
pop
sub
sbb
jno
push
leave
xorb
add
sbb
or
xchg
sub
sub
popa
cld
iret
pop
mov
adc
and
xor
stos
push
push
adc
mov
lahf
dec
sahf
dec
cmpsl
mov
cld
cwtl
js
icebp
dec
pop
xcrypt-cbc
cmpsl
aad
inc
adc
jo
xchg
fadd
xchg
inc
add
fwait
repz
icebp
xchg
xor
and
sti
test
js
mov
push
or
cs
fsubl
or
dec
push
fnstcw
or
les
push
push
int3
pop
hlt
mov
mov
fcomi
and
cltd
push
pop
adc
push
sub
push
mov
inc
mov
sbb
je
xor
mov
and
test
cmp
sbb
push
jnp
push
pop
sub
loop
and
sahf
sub
pop
mov
jmp
push
adc
pop
pop
pop
xor
shll
add
shll
cmpsl
lock
andl
les
hlt
decb
adc
add
mov
adc
sbb
or
push
mov
xchg
or
ss
push
push
inc
push
and
adc
sub
adc
push
stc
and
mov
movsb
and
lea
add
jb
sbb
ljmp
adc
clc
neg
sbb
rolb
add
adc
push
pop
inc
inc
mov
ret
pop
pop
or
pop
sub
lods
mov
subb
das
push
sbb
jbe
or
or
push
or
jle
lea
pusha
jae
insb
cmp
and
adc
call
add
push
push
xor
pop
out
sbb
es
dec
test
xor
jmp
cmp
adc
addr16
xchg
mov
mov
sub
sbb
je
and
jne
adc
test
pop
mov
push
push
sahf
cmp
dec
push
cld
cmp
fs
push
dec
fstps
addl
and
inc
je
cmpb
xchg
xor
xor
fldcw
and
and
add
clc
fildll
fmull
addb
sbb
push
xor
and
inc
scas
xchg
mov
out
push
push
js
push
cmp
inc
in
sub
inc
adc
popf
xchg
mov
adc
push
inc
push
add
xchg
cmp
pop
jae
mov
js
inc
int3
rcrl
fadds
cmpl
push
jmp
adc
or
pop
fcompl
jo
notb
ja
enter
cmpl
ljmp
jmp
lret
loope
aam
cwtl
sub
aaa
cmp
add
add
data16
and
push
inc
add
push
add
pop
loop
add
inc
icebp
enter
repnz
inc
movaps
cmp
add
idivb
add
xor
movsb
jns
xor
out
jbe
sub
inc
mov
mov
test
add
pop
inc
cmp
in
jb
mov
jbe
dec
sbb
jae
inc
arpl
data16
mov
inc
loope
cmp
dec
jae
sub
insb
cmp
in
cmpl
movsl
icebp
mov
jb
icebp
push
mov
cmp
shr
xor
fisubl
and
xchg
imul
loopne
xchg
mov
push
inc
scas
roll
xlat
hlt
inc
outsb
sbb
mov
jo
jbe
adc
and
push
test
inc
xchg
xor
xchg
xchg
xchg
push
push
data16
adc
jp
mov
pop
lea
roll
xor
adc
sti
cltd
roll
call
cmp
jne
or
pop
sbb
push
cmp
les
xor
leave
lret
mov
cmp
add
aad
xlat
xchg
mov
in
push
js
sar
push
push
push
repz
pop
cmc
cmp
and
andb
sbb
dec
lea
sbb
stos
xchg
stos
adc
adc
test
add
bound
adc
jmp
xor
aaa
call
push
xchg
dec
les
cld
push
mov
jns
sbb
xchg
inc
es
mov
popa
mov
adc
dec
xchg
push
xor
inc
add
xchg
cmpsl
adcb
sub
stc
jmp
out
adcl
into
dec
mov
sti
add
adc
mov
sbbl
out
cmpsb
mov
sbb
push
scas
and
cmpb
sub
and
xchg
out
inc
sbbl
frstor
mov
out
enter
test
cmp
mov
add
sti
test
sbb
leave
out
xor
pop
xor
fldt
loopne
idiv
test
sbb
xor
or
lods
sbb
push
sbb
jne
add
test
movsl
cli
cwtl
xor
mov
lock
inc
inc
and
or
push
aad
rorl
int3
add
sub
outsl
testb
cmp
imul
incb
mov
es
mov
or
sbb
sub
cmp
ja
call
test
or
mov
fldl
jle
aam
les
xchg
or
and
and
pop
push
lock
add
or
mov
and
pop
je
jb
or
inc
popa
and
out
or
mov
jge
das
adc
call
and
imul
jnp
xchg
fs
stc
cmp
jae
cmp
adc
mov
sub
sbb
imul
jg
pop
iret
dec
adc
idivl
jmp
and
mov
in
add
sbb
mov
popf
addb
jae
inc
push
adc
inc
sbb
dec
or
shr
inc
xchg
outsb
incb
mov
pop
push
lret
ret
lds
cmp
adc
push
push
ja
call
inc
int
inc
xor
jb
dec
jl
push
and
enter
add
xor
cmp
and
push
inc
cmp
jmp
aas
cmp
dec
dec
push
mov
dec
ret
js
xor
adc
adc
and
mov
mov
push
jecxz
pop
nop
cmp
pop
cli
cmp
jae
sbb
xchg
jo
add
add
or
fists
pushf
dec
push
addb
and
sbb
jge
xor
std
push
xor
mov
pop
push
call
fsubr
or
or
lea
ret
inc
jecxz
das
jl
iret
sbb
adc
sub
dec
outsb
sbb
movsl
jecxz
adc
inc
or
inc
ja
jns
adc
push
or
or
shrl
xor
add
popa
push
fstpl
rolb
pop
insb
cmpsl
sub
lret
das
mov
popa
dec
pop
push
mov
iret
mov
inc
js
or
mov
iret
pop
and
mov
lock
adc
or
clc
jge
and
or
pop
pop
add
or
and
sub
pusha
xor
pop
inc
cmp
cmpb
mov
jbe
push
xchg
scas
je
push
addr16
cltd
inc
push
insl
jae
or
lcall
jb
jnp
pushf
and
sti
xchg
sbb
pop
mov
je
sahf
bound
and
and
pop
mov
push
subl
jl
jp
jbe
cmp
add
add
orb
push
call
xchg
leave
xchg
call
pop
and
enter
clc
mov
xor
lock
aam
scas
es
push
push
and
outsl
adc
inc
and
push
je
mov
jge
mov
leave
repnz
lcall
push
jae
shlb
test
cld
gs
mov
push
mov
addb
xchg
insb
sbb
xchg
push
push
jbe
lret
pop
xchg
sbb
adc
cmp
cs
push
mov
push
push
xchg
cli
pmaxub
cltd
repnz
inc
or
mov
repz
lret
sub
jnp
pusha
test
aam
and
stc
push
inc
pop
jnp
je
dec
and
push
lds
outsb
repz
jge
sub
jle
push
xor
adc
lret
ljmp
inc
and
add
sbb
jp
sahf
cwtl
push
mov
std
inc
add
je
or
dec
mov
pop
sbb
fs
ret
sub
loopne
cmp
in
push
fdivr
orb
aas
lea
inc
psubb
mov
or
mov
push
lret
fs
adc
and
icebp
sub
mov
and
pop
out
call
push
ret
call
xchg
or
jg
jno
add
mov
adc
rolb
push
inc
daa
arpl
cwtl
dec
jg
mov
call
and
daa
pminsw
pop
daa
sub
push
lea
adc
insl
in
push
push
lcall
daa
mov
test
dec
sti
and
bound
sbb
sti
sub
adc
adc
aad
lcall
push
repnz
subb
jecxz
jle
mov
arpl
add
mov
jb
or
push
mov
or
dec
mov
adc
popa
push
inc
ja
sarl
cmp
xor
test
imul
orl
das
andl
es
jmp
push
inc
xor
xchg
out
adc
cld
or
inc
mov
sub
je
pushf
sbb
lret
test
in
inc
addr16
movsl
xor
jge
sbb
jbe
cmpb
mov
mov
jne
and
popf
push
or
add
cmp
dec
jae
pop
cmp
xor
dec
push
subb
pop
mov
adc
arpl
mov
jge
mov
mov
mov
lods
das
clc
iret
notw
dec
fwait
mov
pop
mov
and
pop
pop
es
jno
inc
rclb
adc
dec
fmuls
in
sbb
lods
cld
and
cmc
ljmp
in
loop
adc
push
hlt
add
shll
jle
push
inc
adc
xchg
and
mov
mov
je
cmp
jne
shlb
mov
jmp
fs
jecxz
loop
sub
inc
repz
loop
flds
lret
enter
xlat
push
out
xor
in
push
imul
add
fsubp
and
and
or
mov
loopne
movsl
in
inc
adc
pop
je
shl
and
mov
loop
xor
call
outsl
dec
iret
dec
in
or
cmc
test
or
push
jl
arpl
push
sub
arpl
bound
push
adc
dec
push
xchg
shll
sub
fcoml
fldcw
sub
cltd
pop
idiv
cmp
or
inc
je
arpl
inc
cwtl
test
fs
icebp
std
cmovl
push
inc
test
je
xor
mov
mov
adc
enter
add
jne
aas
add
movsb
outsl
sbb
adc
nop
pop
int3
or
out
subb
shr
fcomps
xchg
nop
pop
test
and
inc
daa
stos
daa
push
movsl
push
repz
mov
push
jg
rorb
or
and
cmp
dec
pop
adc
arpl
xorb
cltd
sub
sar
stc
push
pusha
or
fs
add
lock
inc
xor
mov
mov
or
cmc
or
test
push
enter
xor
mov
popf
or
or
push
test
out
repnz
mov
push
push
stos
xor
jmp
aas
cmp
jo
adc
cltd
push
dec
mov
mov
cld
test
test
pop
mov
pop
push
push
pop
cltd
cmp
mov
cs
pop
call
mov
and
pop
xchg
insl
js
mov
dec
pop
dec
adc
push
pop
push
jbe
and
stc
scas
negl
movsl
and
lcall
push
lock
add
das
sbb
rep
call
les
iret
rorb
xchg
add
call
cld
adc
jp
xchg
mov
cmpsb
pusha
xchg
mov
test
inc
and
push
pop
addl
mov
sub
fwait
inc
sbb
push
bound
xchg
or
adc
push
jmp
mov
push
adc
mov
jmp
loop
cmp
inc
sti
sbbl
test
jmp
pop
inc
pop
adc
scas
andl
lods
popf
push
aaa
push
xchg
leave
pop
mov
and
fists
cmpsl
call
mov
icebp
loopne
push
cmpsl
xchg
loope
inc
loop,pt
lods
out
inc
repz
jb
push
add
mov
vmovdqu
pop
dec
push
cmp
push
push
pushf
mov
or
fs
in
cwtl
repnz
mov
hlt
xchg
or
jmp
sbb
lcall
push
lret
pop
jae
sub
call
pop
or
std
nop
mov
notb
sub
mov
cmp
lret
inc
inc
dec
push
jl
fsubrp
outsb
lret
xchg
nop
dec
les
loope
or
sahf
xchg
jno
or
sub
add
push
pop
pop
ljmp
push
push
leave
outsb
mov
cwtl
push
call
insb
xor
movsl
sbb
adc
mov
mov
test
leave
bound
out
xchg
decl
movsb
mov
mov
out
pop
in
lods
enter
ss
outsb
test
push
jo
inc
in
mov
push
add
push
adc
fs
jne
sub
cwtl
push
movsl
adc
xchg
or
icebp
pop
adc
push
fisttpl
push
adc
enter
test
inc
add
mov
popf
cs
and
push
or
std
bound
hlt
in
test
cld
inc
push
insb
out
and
mov
mov
in
insl
mov
push
jmp
and
jno
jge
es
js
mov
pop
into
sbb
fisttpl
loope
pop
mov
or
imul
insl
sub
xchg
iret
daa
incb
test
jo
je
test
jg
lods
fidivs
inc
jg
std
sub
ja
mov
push
push
int
inc
movsl
add
das
mov
xor
enter
adc
movsb
adc
sahf
adc
call
jmp
fsubrl
addl
fdiv
call
xchg
push
inc
lcall
and
mov
mov
sbb
push
inc
adc
push
rorb
in
out
dec
jecxz
mov
cmp
les
loopne
and
xchg
sbb
dec
loopne
pop
mov
pop
loop
popa
mov
mov
mov
inc
not
mov
inc
pop
insb
add
mov
repz
xchg
outsb
clc
iret
mov
lea
loop
cltd
xor
out
adc
ljmp
ljmp
push
into
jmp
and
or
mov
cmovb
enter
sub
push
xchg
or
sub
in
lds
cmp
mov
jmp
sub
out
pop
inc
push
add
jb
mov
jb
insb
push
lret
incb
lock
and
push
hlt
mov
sub
and
clc
add
mov
and
or
les
mov
pop
push
jp
lock
subb
mov
pop
jl
cltd
pop
sub
mov
and
mov
mov
lods
add
pusha
cli
fidivrs
in
cwtl
ds
popa
or
fwait
xchg
mov
pusha
sub
test
rcrb
arpl
adcb
lock
adcb
mov
mov
and
addl
aad
in
mov
aas
sarb
add
mov
add
dec
push
push
pop
jns
adc
push
push
popa
es
fwait
lds
std
out
aas
dec
xor
cmp
sbb
add
pusha
iret
xor
call
pop
cli
clc
les
sub
movsb
jl
into
jl
test
inc
push
or
jge
adc
pop
lea
popa
inc
in
push
add
and
sarb
add
dec
xor
lret
push
cmp
add
dec
inc
inc
dec
and
xor
sub
push
lret
sbb
sub
cmpsb
icebp
dec
lods
adc
push
or
dec
sub
adc
adc
and
adcl
add
notb
and
push
inc
clc
lea
in
fbld
jmp
ret
push
mov
cmp
xor
xor
push
out
and
adcl
xor
call
inc
jbe
out
fs
out
sub
dec
adc
mov
mov
cmp
add
sbb
stos
dec
jbe
popa
push
push
mov
or
mov
jno
pop
mov
andl
pop
cmp
inc
in
pop
lock
inc
pop
mov
mov
xchg
sbb
lods
pop
adc
out
inc
aam
dec
mov
mov
sub
push
sub
outsl
or
pop
or
mov
stc
test
push
insb
es
xorb
ret
cmpb
mov
push
loopne
shlb
push
mov
push
loopne
stos
mov
xor
jg
push
or
dec
mov
sbb
lea
or
xor
fsubrl
and
mov
test
sbb
mov
adc
insl
subl
add
iret
jo
mov
jmp
aam
cwtl
push
push
inc
pop
dec
mov
aam
or
inc
nop
adc
xor
cwtl
mov
loopne
dec
lds
xchg
dec
xchg
sub
jp
dec
xlat
test
dec
adc
adc
les
xchg
call
sahf
nop
lcall
cld
arpl
cld
mov
mov
lock
push
sub
or
xchg
mov
inc
push
add
jp
mov
xor
push
or
inc
test
pop
jnp
inc
xchg
daa
adc
test
jl
pop
test
ret
test
and
orl
or
popf
adc
and
and
sub
cmpsb
jno
sub
in
push
mov
dec
pushf
cwtl
notb
xchg
jae
push
je
push
mov
fdivs
ret
mov
repz
push
dec
mov
push
xchg
ds
call
mov
dec
mov
sar
aam
popa
sbb
fdivr
mov
mov
enter
hlt
push
cmpsl
sub
data16
add
enter
call
push
or
hlt
lahf
call
xchg
or
and
push
mov
cmp
shl
cmp
loope
push
mov
dec
call
xor
rorb
push
aaa
sub
lock
mov
test
mov
adc
push
sbb
and
dec
push
pop
push
dec
mov
dec
orl
stos
cmp
xor
nop
inc
in
push
repz
cmp
pop
jne
jmp
mov
dec
mov
outsl
pop
xchg
loope
push
stc
lret
xchg
popa
jae
or
stc
xchg
std
repnz
adc
test
or
cmpsb
aaa
inc
js
pop
mov
dec
test
sbb
push
notb
bound
xchg
sbb
cmp
je
pop
pop
sub
scas
adc
jmp
in
bound
xchg
dec
stos
inc
leave
out
mov
sar
push
and
pop
and
outsl
and
jo
push
adc
lahf
outsl
test
mov
inc
roll
mov
cwtl
add
mov
sbb
pop
push
or
and
jo
cmp
ret
mov
pop
mov
adc
pushl
rclb
mov
jle
or
les
mov
pop
or
test
sub
xor
in
lods
jns
sti
xor
adc
call
xor
pusha
push
movsb
pop
clc
cltd
sarl
sub
bound
enter
cmp
enter
ljmp
ljmp
test
sbb
adc
fwait
cmpb
test
mov
xor
cmp
jne
jg
pusha
push
mov
and
dec
jne
inc
cli
popa
or
daa
ljmp
add
sbb
aam
inc
mov
mov
sbb
pop
mov
int3
add
andl
xchg
pop
or
push
daa
jle
pop
push
xor
pop
popf
adc
repz
mov
std
icebp
aas
pop
pavgb
daa
pusha
push
push
imul
xor
stc
add
int3
push
movsl
test
dec
outsb
inc
int3
inc
cmp
sub
cwtl
or
mov
icebp
pusha
in
mov
jne
bound
or
loopne
lcall
repz
sub
ret
mull
sbb
mov
les
inc
adc
lahf
gs
inc
sti
adc
imul
jb
out
adcb
inc
nop
cmpl
je
mov
fsubrs
clc
xorb
sbb
adc
movsl
and
out
xchg
pop
jge
mov
shlb
inc
and
mov
jns
aas
pop
shrb
imull
jge
int3
xor
push
pop
jns
cltd
loopne
in
dec
push
or
iret
ljmp
sti
mov
mov
iret
push
mov
push
add
call
pop
push
test
sbb
mov
dec
loope
jp
out
or
in
sub
or
int3
push
loopne
in
mov
mov
and
mov
cmp
hlt
je
cmpl
xchg
loopne
mov
cmp
and
pop
aam
mov
std
fmuls
inc
int
sahf
nop
pop
or
outsb
push
insb
sub
daa
pusha
cmp
fs
adc
shrl
mov
cli
sbb
dec
mov
rcrb
push
or
xor
rolb
and
mov
jp
dec
int3
subl
lods
or
jne
int
adcl
push
nop
lret
popf
sub
inc
daa
jne
shlb
mov
call
loop
adcb
mov
sbb
les
pop
add
xor
xor
sub
cmp
push
enter
and
adc
call
jmp
cmp
cmp
and
scas
push
lahf
xchg
lahf
adc
dec
repnz
jmp
dec
fcoms
in
repnz
js
divb
inc
shrb
lea
jo
dec
mov
dec
jbe
jmp
mov
cmpsb
lods
xchg
icebp
pop
pop
xor
jl
mov
xchg
addr16
daa
insl
push
mov
inc
in
cmp
push
daa
sbb
jo
sti
lods
pusha
inc
popa
mov
inc
movlps
and
sub
leave
add
push
jle
rclb
mov
das
test
std
and
sub
push
mov
mov
xor
cmp
dec
jbe
mov
cmp
sbb
rol
in
fisttpl
shr
ficomps
or
mov
dec
jb
ficomps
pop
test
push
repnz
sbb
add
push
gs
mov
pop
sub
sbb
enter
das
add
sub
cmpb
adc
adc
adc
sbb
adc
cmc
xor
jbe
shll
loop
adc
jg
pop
test
popa
popf
dec
push
add
clc
cmp
and
jo
sub
xor
push
xchg
pop
int
mov
test
xchg
pop
cmp
mov
cmpsb
cmpb
pop
sub
xchg
sub
stos
arpl
in
sbb
push
push
setbe
test
subb
pop
mov
hlt
push
xchg
out
in
pop
leave
ficoms
cmpsb
xor
rcrb
jg
mov
incl
xor
mov
adc
pop
mov
push
sub
add
dec
sti
pushf
jg
aaa
dec
add
mov
adc
and
call
stos
mov
sbb
aad
imul
inc
mov
xchg
mov
mov
add
mov
inc
leave
mov
pop
adc
orl
daa
adc
test
push
outsl
test
inc
mov
mov
mov
and
sbb
fwait
and
leave
mov
movzbw
adc
inc
inc
xchg
cmp
xchg
cmp
pop
gs
dec
leave
and
add
xchg
push
pop
and
jg
push
xchg
or
icebp
pop
pop
xor
dec
push
inc
loopne
or
test
add
decl
and
insb
sbb
jns
mov
and
and
and
push
sahf
nop
mov
adc
push
or
dec
push
ss
dec
mov
xchg
mov
and
test
xor
je
pushf
pop
dec
int3
push
jge
or
mov
and
sbb
add
les
loope
xchg
push
inc
enter
inc
dec
imul
mov
outsl
jmp
mov
adc
cmp
pop
rclb
sbb
add
jmp
cmpb
daa
or
movsl
int3
dec
cmpsb
xchg
inc
push
test
inc
sub
stc
pop
adc
sbb
pop
mov
out
dec
and
pop
ror
scas
into
mov
and
push
push
xor
ja
stos
pop
cmp
sbb
mov
pop
inc
mov
xor
mov
std
bound
cmp
sbb
fldcw
sub
es
adc
sbb
ret
les
mov
or
cmp
ljmp
push
aam
orb
cmp
fstpt
jl
cmpsb
and
stc
bound
mov
icebp
add
jg
aad
fistpl
xchg
inc
dec
hlt
dec
or
and
cmp
jmp
cmpl
mov
test
mov
and
cmp
and
out
es
outsb
sub
mov
jge
neg
sbb
or
loope
scas
add
sbb
sbb
dec
xor
pop
push
filds
jb
jae
cmp
pushf
xchg
cli
xor
test
outsl
sbb
jecxz
push
test
jmp
bound
test
push
test
movsb
ja
bound
sub
mov
pop
inc
sbb
dec
jle
imul
movsl
leave
sbb
sub
inc
mov
stos
adc
dec
xor
mov
scas
lds
mov
dec
into
adc
sbb
sbb
dec
dec
daa
add
dec
movsb
pusha
stos
incb
cs
fucomi
dec
lock
sub
dec
mov
push
mov
push
add
cld
nop
cs
dec
jb
cli
movsb
inc
inc
sbb
pop
adc
sub
cmp
dec
in
jle
clc
jp
add
xchg
lds
push
push
xor
les
fstl
les
pop
movsl
test
dec
jb
inc
ret
and
xchg
jno
cmp
push
hlt
xor
daa
pusha
jg
call
xor
sbb
int
les
movsl
mov
js
adc
push
or
repz
jns
stc
pop
push
adc
fs
adc
add
push
out
push
addb
fldcw
dec
xor
and
add
pop
arpl
mov
sbb
mov
or
add
mov
sbb
sbb
adc
lea
xor
mov
sub
flds
aad
sub
lods
mov
inc
and
jmp
jne
test
popl
movl
les
aaa
and
adc
ljmp
addl
mov
inc
cs
sbb
xchg
adc
inc
xor
mov
cmp
test
jns
loope
mov
sub
leave
xor
pop
add
dec
cmp
jp
adc
or
out
mov
fs
aam
das
fnstsw
cs
inc
or
xchg
adcb
xor
ret
mov
mov
idiv
ds
or
adc
or
pop
sbb
test
sub
push
and
enter
mov
push
out
lahf
mov
fs
js
test
dec
les
xor
or
sub
sbb
mov
jl
push
or
sub
ljmp
out
xchg
or
adc
daa
add
jecxz
aaa
js
or
add
jno
push
push
and
push
add
notl
pop
ror
je
add
sbb
fisubl
or
adc
xor
and
lea
dec
repz
sub
adc
xchg
sbb
dec
mov
loopne
pop
xchg
in
movsl
adc
dec
xchg
or
das
popa
adc
or
js
adc
cmpsb
cmp
xchg
mov
orb
adc
push
sub
sahf
pop
push
test
cltd
and
bound
mov
adc
fadd
dec
mov
out
std
cmp
into
dec
lcall
mov
push
pop
pop
pop
repz
inc
jge
into
ljmp
sbb
add
add
ret
das
mov
and
xchg
fisttps
scas
aas
add
push
pop
mov
in
jbe
pop
dec
push
shl
xchg
sbb
and
inc
cld
mov
ljmp
fdivs
pop
shl
or
and
clc
popl
pop
sbb
mov
sahf
leave
and
cmp
jecxz
daa
push
add
or
xlat
mov
and
pop
or
push
gs
cmp
jle
add
dec
push
fs
and
in
push
das
xlat
insb
mov
scas
out
xor
jg
ja
test
push
test
jbe
outsb
mov
push
mov
cmpsl
jbe
cmp
setg
sar
mov
pop
lea
add
mov
inc
fcoms
dec
fists
mov
pop
imul
cmpl
or
sbb
hlt
jmp
jge
dec
jl
mov
pop
fisttpll
or
and
xor
xchg
sbb
je
and
and
cmpl
aas
call
enter
cmpsb
call
cmp
pusha
loopne
jnp
mov
jl
pop
mov
mov
cwtl
mov
sub
pop
adc
inc
adc
push
adc
mov
test
fmul
and
movl
jmp
insl
inc
clc
dec
es
roll
loopne
pop
nop
jo
xor
addb
outsb
or
push
test
test
fwait
adc
call
in
add
sbb
fwait
dec
pushf
adc
or
cwtl
popf
lea
stc
nop
pushf
cmp
xor
sti
cmp
cmpsb
pop
dec
or
das
inc
enter
adc
int3
add
pop
mov
xchg
bound
mov
jecxz
dec
lock
fs
sub
outsb
decb
cmpsb
daa
cmp
jecxz
and
mov
imul
cmpsb
inc
fmull
repz
dec
mov
cmpsl
and
xor
pop
cmp
and
push
sub
adc
xchg
mov
arpl
add
fiadds
or
aam
inc
mov
fwait
mov
aaa
adc
enter
loope
and
push
cmpsb
jl
inc
es
mov
push
fldcw
mov
fsubs
imul
call
les
cmpsb
xlat
into
push
xor
dec
fcoms
les
clc
dec
dec
jne
push
call
jmp
cmp
dec
jo
fs
push
mov
adc
or
xchg
mov
rorb
pop
mov
xchg
jl
in
mov
dec
push
mov
or
mov
or
add
aam
dec
loop
mov
sbb
xchg
mov
push
or
mov
aam
aad
pop
push
insb
inc
ja
psrlw
mov
stc
out
jns
cli
sti
nop
pop
nop
add
cmpsl
mov
ds
sbb
push
add
mov
pop
cmp
xchg
add
sbbl
jmp
xor
push
sub
sub
add
push
call
ss
jae
and
dec
xor
aas
lea
fmuls
roll
fstl
shll
and
mov
jl
pop
adc
std
xor
and
sbb
push
mov
inc
test
push
inc
sub
movsb
stos
push
inc
mov
icebp
andl
mov
mov
and
cmp
cmp
adc
mov
lods
adc
repnz
add
fistpll
fidivrs
sub
gs
adc
or
notb
repnz
mov
push
inc
sub
cltd
je
xchg
subl
mov
xchg
adc
cmp
adc
mov
mov
push
add
add
dec
and
push
mov
push
push
jle
and
or
mov
dec
sub
loop
xchg
test
sbbb
adcl
cli
bound
jne
adc
push
push
or
cltd
pop
pop
sbb
sbb
lcall
in
mov
aaa
xor
pop
cmp
inc
cmpb
dec
mov
push
push
jae
call
test
in
jmp
mov
sarl
adc
lock
xchg
cld
je
add
clc
ret
dec
insb
int3
out
push
jge
push
mov
cmp
adc
lods
pop
adc
adc
ret
scas
js
mov
push
jb
outsb
aas
push
mov
or
sbb
mov
mov
and
fdivrs
xchg
bound
std
mov
jno
pop
push
push
xchg
rorb
add
imull
and
sbb
mov
push
nopl
fnstenv
pop
pop
cs
movb
sbb
nop
aam
xor
xor
and
adc
jmp
or
adc
or
push
lret
popf
mov
test
adc
xchg
frstor
divl
call
mov
ret
jne
adc
xor
mov
pop
sub
or
or
dec
jl
or
adc
xor
inc
or
in
xor
mov
nop
fistl
imul
clc
push
sbb
test
push
lock
sbb
cltd
cs
loopne
push
movsb
or
xchg
lock
mov
jne
mov
nop
or
sbb
adcl
inc
adc
xchg
lods
fiaddl
xchg
push
push
aad
lret
sub
popf
in
mov
xchg
je
and
sti
sub
push
sbb
xchg
mov
xchg
jge
jg
imul
or
mov
sbb
out
add
loopne
dec
dec
jl
lea
xorl
push
ficompl
mov
mov
mov
fadds
mov
repnz
or
and
bound
data16
mov
add
int3
jecxz
mov
lock
dec
dec
test
push
in
push
lahf
sbb
sub
xchg
push
imul
rcll
inc
sbb
sbb
mov
fwait
repz
sbb
add
xchg
imulb
push
or
or
mov
xor
or
pop
or
js
lcall
dec
dec
loope
sti
cmpb
jmp
inc
dec
xor
adc
or
sub
add
in
and
ret
or
jmp
subb
push
xchg
sub
cmp
je
jno
mov
adc
adc
cld
xchg
and
sub
call
mov
test
je
or
pushf
cmpsl
adcb
repz
pop
jmp
sbb
outsb
mov
movsl
dec
and
call
dec
adc
add
lret
jg
mov
adc
adc
mov
dec
add
inc
or
jecxz
push
adc
push
loopne
and
and
sub
push
sub
sub
sub
push
pop
jno
mov
push
xor
dec
das
sbb
push
lret
or
mov
inc
and
or
xor
adc
test
inc
cld
lods
leave
lea
addb
repz
push
mov
and
push
xor
xchg
or
dec
push
stc
and
and
adc
mov
add
pop
push
lcall
adc
pushf
adc
inc
out
mov
push
aaa
and
int3
aad
cmc
int3
mov
aam
bound
in
cs
adc
gs
sbb
inc
xchg
ds
in
push
push
jge
test
inc
in
or
inc
and
imul
push
push
bsr
nop
dec
je
push
mov
or
mov
or
push
mov
loop
inc
das
xor
jbe
enter
and
fcomps
jecxz
and
xor
mov
sbb
sub
push
or
add
mov
les
lahf
inc
xchg
xchg
xor
jo
mov
xor
xchg
mov
xchg
data16
fiaddl
into
ja,pn
outsl
mov
xor
xor
mov
das
dec
push
inc
or
lods
or
std
subl
cmp
sbb
jmp
cmpsl
push
sbb
dec
mov
pop
sub
les
or
dec
out
sbb
xor
mov
jmp
movsl
jmp
dec
inc
sarl
inc
xor
mov
daa
sub
cmp
lea
inc
dec
cmp
ss
cmc
xchg
mov
xchg
test
fistpll
jne
rorl
rorl
xor
lods
out
inc
add
test
shl
test
jne
sub
pop
repnz
pop
dec
adc
cld
cmp
sarl
jl
lods
sub
call
push
push
das
sub
testb
jne
inc
test
adc
fld1
xchg
sub
inc
pop
lea
cmpxchg
jmp
call
push
push
shlb
fadd
int3
mov
nop
add
pop
and
sub
pop
sbb
push
push
int3
inc
int3
adc
or
inc
push
into
inc
and
inc
dec
rolb
roll
rolb
roll
aam
cmp
inc
daa
inc
sub
inc
pop
fadds
flds
fiaddl
fildl
faddl
fldl
fiadds
filds
loopne
push
loope
add
inc
push
jecxz
and
add
cmp
adc
or
ljmp
xor
out
inc
dec
lock
cmp
inc
adc
inc
inc
repz
pop
hlt
inc
aaa
cmc
inc
sbb
inc
push
clc
inc
sub
int3
sbb
adc
and
push
aam
inc
mov
and
xchg
push
add
mov
push
loope
inc
es
test
shll
pop
sbb
push
xor
jge
jne
and
mov
push
adc
xchg
add
out
sbb
notb
inc
cmp
xor
jb
call
mov
or
mov
andb
mov
adc
ficoml
inc
mov
sbb
or
pop
mov
enter
addb
addl
inc
and
ss
dec
mov
testb
nop
jbe
xchg
jl
movsb
outsl
jl
adc
mov
lods
push
add
int3
cmpsb
inc
test
xor
inc
cmp
lds
jb
in
adc
push
faddl
mov
inc
mov
add
ss
cs
mov
cmp
xor
and
xchg
dec
enter
jb
cmp
mov
and
in
jb
cmp
jb
cmp
daa
mov
and
lods
jb
cmp
sbb
and
idiv
bound
cmpsb
sbb
and
enter
jb
cmp
sbb
mov
and
xchg
ss
and
mov
and
xchg
dec
push
mov
cmp
out
or
mov
xor
in
jl
cltd
adc
cmp
xorb
sub
add
dec
add
and
inc
fs
xor
mov
inc
sbb
xchg
xchg
outsb
enter
mov
mov
sbb
sahf
dec
sbb
jo
pop
pop
fsubrl
into
cmpb
je
fists
rcr
mov
dec
cld
dec
jne
mov
adc
mov
aas
das
adc
xchg
sub
int3
nop
and
inc
or
xchg
test
arpl
push
or
out
imul
loope
mov
and
xor
fucomi
adc
dec
mov
movsl
in
in
mov
push
sbb
inc
or
mov
dec
out
and
mov
sub
in
lds
push
sbb
outsl
nop
insb
ret
cmp
out
adc
push
and
mov
out
es
push
and
aaa
leave
push
adc
inc
mov
push
clc
inc
insb
aaa
test
data16
clc
mov
xor
cli
push
gs
test
ficomps
and
scas
lea
das
dec
fadds
imul
in
je
pop
pop
loopne
call
jns
jne
cmp
adc
nop
ret
cld
sbb
je
mov
cmpsb
and
fs
xor
mov
icebp
and
mov
lea
mov
jne
push
jmp
rclb
gs
or
push
outsl
sub
push
mov
into
shll
jnp
int
mov
add
xor
dec
lods
data16
das
in
and
inc
orb
and
xchg
sarb
cmp
jne
add
add
mov
cld
stc
add
sub
inc
adc
mov
int
scas
shlb
test
and
xor
sahf
jmp
push
jecxz
adc
xchg
xor
cs
xor
push
mov
cs
call
pop
fxch
fdivp
outsw
aad
fimull
les
xor
push
insl
andb
xchg
adc
inc
inc
adc
out
bound
enter
inc
jne
push
mov
nop
xchg
fstl
lcall
jg
push
and
push
and
and
and
fs
sbb
nop
mov
push
fsubl
pop
shrl
nop
sahf
and
nop
push
and
pop
je
push
je
dec
add
shlb
dec
add
cmc
fwait
dec
add
and
fmuls
hlt
dec
nop
mov
loopne
sbb
fwait
sub
push
sub
mov
mov
push
cltd
add
dec
sbb
sub
hlt
inc
lret
pusha
pop
mov
push
mov
test
xchg
fmul
mov
adc
imul
das
jns
dec
and
mov
shlb
add
and
mov
jne
xchg
and
stos
dec
mov
push
ljmp
cmp
or
cmp
ret
fwait
popa
add
and
fcompl
insl
shll
push
jbe
fdivr
ljmp
ljmp
negb
jo
sub
inc
cmp
fistpl
test
sub
flds
push
sarb
jmp
push
imul
jne
xor
pop
jmp
push
xchg
pop
and
nop
vfmsub213ss
ljmp
mov
loopne
dec
dec
inc
in
and
mov
imul
adc
ja
push
cmp
enter
and
adc
arpl
into
movsb
lea
lcall
ds
push
enter
cmpl
or
out
hlt
pop
sub
jmp
andb
cmpsb
push
xor
inc
scas
shl
lods
testb
shll
sub
outsl
add
fisubl
call
fdivl
xchg
pusha
icebp
mov
addr16
js
jns
or
daa
clc
cwtl
nop
ja
andl
add
cld
pop
pop
mov
xor
jbe
les
adcl
push
mov
sbb
insb
std
dec
cmp
adcb
mov
lahf
xor
fdivs
fbstp
aaa
call
ret
push
push
lock
push
xchg
inc
out
push
xchg
sbb
mov
inc
std
mov
jle
leave
xor
out
mov
inc
sbb
adc
and
mov
loop,pn
xor
mov
icebp
mov
push
fdivs
and
dec
mov
xchg
pop
dec
out
in
pop
inc
ret
sub
adc
out
push
inc
mov
mov
or
mov
test
je
cli
dec
pop
sub
stos
into
ret
vpunpckhwd
or
sbbb
xor
orb
aad
sbb
sub
call
mov
rcrb
stc
push
sbb
js
xor
adc
fldenv
inc
in
rcll
dec
das
outsb
fadds
test
push
add
push
push
xor
or
jmp
mov
fs
sub
cmp
and
fadds
add
nop
ficompl
rcrb
and
pop
rorl
inc
sbb
lods
xchg
cli
aam
dec
sar
adc
sub
aas
pushf
mov
imul
add
pop
push
pop
adc
jo
int
enter
outsl
rcl
call
in
mov
push
pop
out
notb
cwtl
mov
addr16
adc
sbb
sbb
addr16
cltd
mov
fsubs
pop
faddl
push
nop
mov
xchg
pop
cmp
push
and
sbb
lods
xchg
xchg
mov
call
inc
push
sbb
or
cmp
int3
and
xor
sbb
pusha
and
adc
stos
push
inc
inc
xor
js
inc
mov
sub
sub
fwait
jae
je
add
mov
repnz
enter
mov
sub
les
jmp
cmp
xor
push
xchg
pop
and
or
loop
adc
add
es
push
imul
nop
call
call
sbb
or
sbb
pop
mov
movsl
jle
ja
push
cmpsb
push
cmp
sub
test
xchg
add
pop
repnz
test
loope
cmp
lret
fidivrs
movsl
jmp
aad
adc
stos
dec
in
push
mov
pop
mov
movsb
fnsave
pop
mov
xor
repnz
sub
inc
add
push
notl
jmp
sbb
loopne
pop
and
cli
inc
sarb
mov
decl
inc
cli
and
and
std
nop
xor
sub
jno
cli
or
inc
loop
mov
in
push
out
popf
xor
jmp
pop
jp
or
aas
xchg
adc
test
nop
cmp
or
pop
or
call
int3
xor
or
addr16
xchg
or
sbb
movsl
sbb
push
mov
jp
sti
sbb
jge
or
mov
mov
xchg
adc
push
ret
xchg
test
and
les
mov
scas
xor
pop
cltd
js
adc
xchg
stos
mov
out
sbb
test
subb
in
push
push
sub
pop
and
das
sbb
push
and
and
inc
or
rcrb
icebp
adc
mov
mov
inc
adc
call
add
pop
je
repnz
xchg
pop
mov
bound
mov
mov
loop
loopne
es
call
dec
mov
jne
push
jbe
push
jge
fcompl
or
cmpb
xor
push
ss
sbb
adc
call
xchg
xchg
and
cld
and
mov
das
mov
scas
mov
scas
jmp
or
push
sbb
adc
xchg
inc
mov
loop
mov
testb
and
jmp
mov
and
sub
jl
loop
sbb
mov
sbbb
and
mov
dec
cmp
test
xlat
adc
adc
pop
push
xor
movsl
loop
xor
mov
sub
inc
test
rcll
jmp
or
mov
lds
lret
push
mov
pop
pop
ror
fadd
aam
sub
pop
or
mov
add
leave
sub
mov
jle
adc
xor
add
and
ret
aam
push
and
pop
dec
je
in
xchg
cmp
mov
xchg
cmp
inc
xor
mov
incb
idivb
stos
cmpb
or
push
arpl
xor
push
fmuls
ret
or
dec
push
mov
push
xor
pop
push
cltd
idiv
test
jo
movb
inc
jmp
dec
popa
gs
movsl
aas
or
or
imul
mov
cmp
push
movsb
inc
and
orl
xchg
imull
cmp
and
push
sbb
syscall
push
mov
ret
lret
nop
adc
or
add
cld
mov
enter
enter
out
push
lock
mov
sub
xchg
lock
or
daa
call
shlb
jecxz
call
and
cwtl
add
lcall
mov
dec
test
inc
rol
enter
adc
lock
push
hlt
enter
and
xchg
mov
push
mov
adc
xor
and
mov
push
sbb
hlt
add
call
ficompl
mov
dec
mov
call
push
push
pop
jmp
mov
pop
in
loope
sbb
sbb
iret
shlb
pusha
repnz
and
push
jo
mov
inc
leave
mov
pop
repnz
std
jge
jb
imul
adc
jle
inc
nop
pop
and
and
lcall
dec
fwait
ret
js
loopne
push
adc
xor
pop
cmpb
fstpt
enter
xor
and
push
xchg
repz
outsl
fisttpl
sbb
lods
jmp
mov
xor
jmp
out
movsb
rcrl
mov
push
lea
sti
push
cwtl
loopne
loope
push
ljmp
cwtl
mov
push
inc
and
int
adc
mov
adc
fwait
je
pop
sub
int3
pusha
adc
dec
inc
test
push
or
cli
mov
cmp
aam
dec
lods
cmc
pop
pop
xchg
fdivrs
sbb
shll
jbe
and
scas
adc
or
pop
push
sbb
pusha
cld
mov
movsb
repnz
movl
lods
sub
lret
pushf
addr16
push
or
decb
lods
adc
imul
dec
cmp
lods
jno
scas
lock
fucomi
adc
inc
lcall
test
mov
mov
xorb
add
and
mov
push
push
adc
pushf
add
xchg
inc
cmpsl
and
cwtl
fs
push
int
adc
push
popf
sbbb
add
xor
sti
paddd
lds
adc
mov
daa
popf
sbb
in
in
fs
in
push
adc
lret
inc
and
pop
daa
les
xor
dec
pop
lods
sarl
and
inc
test
dec
jns
neg
test
les
xchg
sbb
in
enter
dec
sbb
ror
rcrb
rcrl
sbb
cli
gs
jmp
mov
jno
negb
cmpb
xchg
adc
gs
and
cs
xor
cmp
sbb
outsl
sub
sbb
adc
data16
pop
data16
push
sbb
pop
mov
mov
data16
or
xchg
inc
push
and
daa
stc
cmc
or
iret
cli
test
xchg
or
dec
lock
pop
add
mov
ss
and
push
xchg
out
mov
mov
pushf
add
pop
and
int3
pop
pop
and
sbb
adc
daa
push
mov
inc
add
and
cmp
outsb
push
popf
shrl
mov
test
push
jbe
sahf
aam
or
mov
sbb
sbb
dec
mov
sbb
and
rcrb
jl
inc
mov
push
repnz
repnz
mov
scas
add
xor
out
in
sub
gs
mov
bound
out
cmpl
push
testl
mov
cwtl
sub
xor
add
jae
mov
or
jecxz
pop
and
je
sbb
xor
push
pop
stc
fnstcw
pop
jmp
push
mov
xor
mov
push
xchg
mov
iret
fs
adc
and
xor
xor
test
sbb
xchg
andb
sarb
leave
xor
and
je
cmp
popa
call
cmp
das
adc
lcall
inc
xchg
dec
subb
sub
lea
mov
rclb
scas
xor
sbb
call
or
jecxz
pop
cmp
fcoml
add
cmpw
jne
push
loop
and
loope
inc
push
jnp
dec
jae
cmp
pusha
push
jge
lea
sub
pop
and
jne
jmp
mov
mov
and
int
ret
cld
push
sbb
xor
pop
pop
dec
lods
ret
push
std
pop
push
pop
jl
and
jbe
pop
dec
adc
or
xchg
sub
loope
push
and
add
inc
push
ljmp
mov
out
sub
sbb
jb
lods
popf
fidivrs
cmp
lods
je
lcall
call
stos
es
push
push
call
enter
xor
pop
gs
and
mov
sbb
add
mov
pop
dec
rorl
mov
xchg
clc
push
sbb
in
test
int3
jne
mov
orb
xchg
enter
test
andl
adc
leave
pop
int3
adc
xchg
stc
shll
inc
shll
add
dec
roll
and
clc
mov
sbb
xor
call
adc
add
int3
cmp
jg
and
enter
mov
or
sub
and
in
xchg
and
xchg
inc
jl
shr
or
adc
or
mov
mov
in
inc
cmc
cld
sbb
mov
xor
aas
add
inc
mov
and
bnd
jge
sub
xchg
dec
les
sub
test
pop
dec
mov
les
sarb
mov
adc
andl
fcoms
or
je
push
js
push
add
dec
in
jae
lock
sbb
sarb
mov
add
add
xlat
enter
lock
je
xchg
and
loopne
sub
imul
mov
repz
imul
xchg
daa
je
divb
jmp
das
adc
add
cmp
movsb
or
lcall
testl
mov
xor
mov
jecxz
call
sub
imul
pop
jmp
sub
cmp
popa
push
lea
hlt
in
lahf
lods
jo
and
mov
xor
or
leave
push
call
add
loop
sub
push
out
sbb
sbb
jge
and
push
call
sbb
outsl
cld
stos
int
sbb
enter
lret
dec
xchg
ljmp
mov
jp
mov
and
add
int3
shr
sub
xor
hlt
mov
sub
xor
movsb
mov
sub
jge
add
adc
test
mov
out
adc
psubusb
and
jge
jle
or
inc
cli
xchg
ret
stos
adc
xor
iret
xor
push
xchg
out
mov
cmpsb
add
jmp
sbb
mov
sbb
test
mov
sub
enter
pop
call
pop
sbb
xchg
fmulp
inc
std
dec
xor
movsb
and
or
orl
pop
push
ret
mov
jmp
jno
mov
sarl
mov
add
push
je
shl
hlt
mov
push
jg
dec
xlat
dec
sbb
rolb
cmc
ljmp
fisubrl
shlb
push
pop
cltd
push
sub
sbb
xchg
scas
push
inc
and
push
xchg
mov
push
sub
fwait
adc
ret
sti
add
movsl
daa
mov
or
push
sub
rcrb
xchg
mov
jne
jle
pop
sub
mov
je
dec
cmp
decl
add
jne
xchg
inc
imul
sahf
jl
shrl
mov
push
jmp
inc
inc
jmp
and
inc
ja
testb
test
inc
and
lods
out
bound
push
push
scas
pop
add
inc
stc
outsl
enter
add
xchg
cmc
cmp
fstpt
icebp
fucomp
popf
mov
enter
cmp
pop
clc
call
add
jb
imul
push
ret
pop
adc
mov
into
in
pop
fistpl
aas
sahf
mov
movsl
mov
enter
int3
or
push
sub
imul
pop
cmpb
push
sub
and
sbb
or
xchg
dec
mov
fcoms
push
scas
mov
push
sti
mov
jnp
pop
dec
mov
iret
inc
add
fistpll
popa
insb
repnz
push
push
out
test
jmp
andps
ficoml
or
out
sbb
lret
movsl
jnp
pop
cmp
adc
les
xlat
adc
xchg
sub
popa
sar
dec
imul
leave
cmp
xchg
scas
repnz
inc
sbbl
add
call
or
jne
cmpl
mov
adc
mov
push
push
adc
jns
jmp
fxch
add
test
cmpl
loop
cmp
jbe
inc
adc
je
add
sbb
es
push
jae
push
lea
mov
inc
mov
dec
xor
ljmp
jmp
jnp
pop
push
xchg
adc
movsb
nop
mov
fstpt
push
mov
dec
or
test
cmp
mov
xchg
imul
inc
sbb
int3
push
add
pop
push
cwtl
or
and
xchg
sub
cmp
push
les
pop
adc
and
cmp
pop
ret
or
push
test
inc
adc
call
sbb
aam
ss
movsb
and
sub
cwtl
fdivs
mov
decb
push
mov
xchg
push
mov
pushf
rcll
adc
cwtl
lods
mov
mov
jmp
cwtl
fs
sub
or
mov
adc
push
mov
dec
dec
push
inc
fs
adc
psrlw
mov
push
clc
inc
in
xchg
es
push
in
cmp
pop
lods
and
mov
sub
cmp
xor
xor
add
ret
adc
push
dec
inc
in
pop
sets
or
test
ja
loopne
push
cltd
data16
pop
sbb
sbb
cmc
les
adc
and
adc
pop
sub
sahf
ret
addb
dec
xorl
mov
pop
inc
mov
inc
sub
push
sub
xor
mov
mov
ss
add
sar
jne
push
dec
sbb
scas
sub
or
lret
push
push
push
aas
and
or
push
pop
jmp
enter
nop
jp
pop
mov
mov
mov
leave
out
inc
adc
xchg
cmp
dec
dec
add
and
jmp
enter
data16
mov
jno
push
jnp
sbb
adc
adcl
aam
xchg
stos
or
inc
mov
repnz
call
sub
test
cmp
fsubrl
xor
ljmp
add
in
dec
je
enter
mov
mov
xor
inc
adc
push
loop
and
pop
cld
dec
aad
test
adc
movsl
mov
xor
add
call
popf
mov
insb
lock
addr16
adc
dec
cli
fsts
sub
push
hlt
arpl
call
fidivrs
push
nop
mov
pop
push
sbb
rcrl
shll
xchg
xchg
bound
mov
lods
and
push
push
push
adcb
and
xchg
clc
xchg
cs
xor
and
int3
decb
push
jge
pop
inc
or
orl
aad
inc
lock
loop
inc
or
dec
pop
mov
pop
vorps
xor
mov
mov
test
jns
jp
addl
sub
lret
push
mov
leave
testl
xchg
lret
lret
jb
popa
sti
inc
jae
sub
inc
sbb
cmpsb
mov
loopne
sysenter
xchg
rcr
jmp
aam
dec
xchg
adc
imul
mov
pop
out
xor
bound
sub
fiaddl
stc
fbld
or
call
cltd
jmp
cmc
and
jmp
out
sbb
movsl
sbb
popf
enter
pusha
push
cmp
jb
dec
lods
lahf
xor
sbb
scas
dec
sub
insb
ret
xchg
mov
push
psubq
pop
mov
xchg
test
push
jno
mov
mov
lret
or
je
adc
and
cli
adcb
mov
imul
adc
cs
ret
outsl
sbb
or
dec
gs
and
push
pop
or
cmp
or
push
or
call
lds
jb
mov
es
pop
loope
push
inc
or
icebp
jmp
and
mov
test
lahf
adc
test
and
iret
iret
sbb
leave
adc
jae
jg
push
lea
cwtl
pusha
inc
lods
or
xchg
sbb
rcr
add
dec
test
pop
fldl
mov
inc
cmp
arpl
jmp
jg
les
adc
adc
and
lds
pop
xor
push
jne
push
xchg
sbb
sbb
mov
mov
call
mov
or
inc
ret
stos
inc
mov
mov
aaa
and
call
dec
sub
sti
test
xor
xorl
dec
arpl
or
fsubl
mov
pop
push
cwtl
xchg
popf
xchg
sar
or
cwtl
mov
roll
inc
fdivrl
lock
sub
mov
roll
xchg
cwtl
cltd
aad
or
es
dec
dec
roll
stc
cmp
mov
sub
sub
testl
add
jnp
mov
cld
call
or
dec
push
pop
dec
and
and
sub
inc
sub
out
in
dec
push
cmpsb
stc
mov
mov
lock
jecxz
push
adc
and
cmpb
je
jae
xchg
push
push
or
push
pop
fiaddl
pusha
xchg
xor
dec
sbb
ja
movl
es
mov
jne
xchg
adc
sbb
hlt
adc
inc
movb
subl
sbb
cs
cmp
clc
jno
pop
xchg
and
cmp
loopne
push
inc
call
cmp
pop
jb
nop
push
push
in
inc
cld
sub
dec
idivb
push
inc
adc
cmpsb
or
sub
fsubrs
sub
inc
cs
push
aam
mov
mov
jmp
sub
movsl
pop
incb
rcrb
test
daa
cmp
sub
ja
data16
push
push
xor
or
push
pop
insl
inc
mov
cltd
cmpsb
xchg
addb
dec
outsb
js
cmpsl
leave
les
mov
sbb
rorb
mov
pop
push
inc
ret
jl
cmpsl
pop
sbb
in
xchg
lret
fadd
add
sbb
push
inc
imul
pop
cmpsl
inc
xor
cmp
add
cltd
mov
xchg
gs
adc
out
and
xchg
nop
imul
dec
mov
ss
jmp
subb
xchg
xchg
push
inc
cltd
sub
inc
leave
adc
out
sub
and
add
aad
lret
cmp
sub
test
sbb
xor
mov
cmpsb
xor
push
sti
int3
inc
clc
cmp
popa
int
adc
xor
push
lock
or
mov
cmp
je
and
popf
in
idivl
lcall
inc
adc
std
and
push
je
pop
hlt
or
ss
fsubl
jbe
mov
push
sub
and
mov
push
push
decb
adc
xor
ret
mov
sub
out
adc
xchg
enter
push
xor
dec
xor
mov
sub
dec
movsl
arpl
and
aas
pop
aas
test
push
xor
addr16
je
incl
sub
lock
jne
inc
dec
push
xchg
fwait
inc
mov
movsb
sub
jns
mov
inc
repnz
and
js
loop
xlat
cmc
aas
sti
std
push
push
mov
popf
cmp
pop
mov
popf
mov
and
ss
js
aad
test
test
enter
fmul
mov
sbbl
in
mov
or
ja
imulb
or
inc
or
push
adc
dec
repnz
insl
or
add
and
jl
test
divb
aam
aas
out
shll
cltd
mov
and
xchg
jo
testb
aas
push
cld
loope
push
dec
insl
sub
mov
push
bound
sub
and
faddl
lret
push
adc
jmp
stc
add
sub
adc
push
outsl
lock
cmp
and
push
push
pop
adc
jbe
sbb
mov
jecxz
lock
cld
pop
adc
adc
and
sbb
popa
push
lret
and
push
xor
adc
jo
mov
cwtl
xchg
call
mov
pop
xor
add
roll
mul
idiv
push
adc
lock
cli
ret
cmp
pop
cmp
inc
leave
cmp
sti
int
push
or
fsubrl
pusha
in
cmp
xchg
sbb
es
push
xor
repz
mov
sbb
push
insb
and
outsb
fsts
cltd
cmp
jp
adc
fiaddl
pop
test
cld
test
dec
or
cld
pop
cmp
fdivr
data16
xor
mov
sbb
sbb
and
xchg
mov
rclb
in
mov
sarl
xor
push
lods
mov
pop
cld
icebp
enter
sub
or
insb
push
sti
cltd
xchg
mov
jge
jge
stos
or
add
fsubr
push
mov
insb
pop
push
lock
mov
leave
mov
pop
das
push
sarl
outsb
sub
xchg
sti
xor
stos
icebp
cmp
mov
lahf
pusha
push
cmpb
pop
jne
pop
test
push
inc
ret
sarl
xchg
ljmp
enter
push
inc
lods
int
adc
clc
into
mov
scas
or
sti
jns
or
sbb
xor
push
xor
mov
sub
or
jbe
sbb
and
lock
jno
sbb
and
hlt
xor
nop
sbb
scas
mov
or
sub
mov
in
pop
xor
pop
and
adc
pop
in
and
popf
in
sub
call
into
call
pop
ret
add
dec
adc
xor
or
mov
pop
inc
or
sbb
pop
cmpsb
push
pop
rep
mov
stc
or
jne
push
insb
push
scas
fmuls
icebp
mov
faddl
push
xchg
sbb
call
cwtl
jo
decb
dec
scas
popa
push
mov
enter
notb
pop
pushf
fisttpl
push
xchg
xchg
pop
add
lret
call
push
and
incb
test
mov
popf
loopne
imul
dec
push
mov
pop
imul
add
and
in
out
test
inc
push
popf
shll
rorb
ficoms
icebp
clc
mov
rorl
std
inc
xor
cmp
rorb
xchg
hlt
jle
xchg
ficoml
movb
je
stos
aam
mov
ljmp
and
cmp
adc
pop
adc
cli
cld
or
shl
and
adc
fs
xor
sbb
sbb
mov
mov
fwait
sbb
inc
xchg
mov
mov
lea
lock
cmp
adc
inc
sub
mov
inc
push
push
je
out
mov
inc
scas
fcos
imul
or
pop
cmp
xor
in
push
push
mov
push
call
jecxz
and
push
clc
jmp
sbb
lcall
jne
pusha
inc
mov
es
mov
idivl
jne
or
adc
cmpl
aam
mov
and
lret
clc
inc
sbb
sub
les
cmp
mov
mov
cmp
mov
pop
and
leave
dec
sub
sbbl
lcall
cmp
or
enter
mov
lock
in
jecxz
test
cli
gs
and
adc
xchg
inc
mov
test
mov
out
dec
cli
sbb
mov
lock
cmp
jnp
rolb
push
aad
or
lods
adc
inc
mov
stc
clc
mov
and
mov
push
pop
test
stos
xor
jne
call
or
mov
cwtl
movb
aaa
jne
xor
int3
aad
gs
jp
cmp
fs
xchg
mov
or
pop
rolb
sbb
fmull
cmpsl
rclb
movsl
cmc
push
xchg
jb
lods
xor
mov
and
sub
stos
int3
sub
dec
stos
add
mov
inc
push
cmp
sub
cld
scas
adc
mov
ja
test
sub
inc
inc
sub
adc
mov
orl
cld
push
inc
lea
mov
or
dec
shl
jmp
dec
sub
push
fisubl
pop
sbb
mov
orb
push
lock
int3
js
cltd
les
test
jnp
adc
sbb
pop
das
push
jle
mov
or
or
movl
sub
push
inc
ret
jge
scas
sub
cmp
adc
adc
xor
add
xor
mov
cvtps2pi
sub
fidivs
adc
in
sub
loopne
and
mov
arpl
jnp
rcrl
daa
cmp
dec
and
adc
inc
push
jmp
xchg
push
or
sub
and
scas
test
inc
mul
adc
mov
lahf
divb
test
out
mov
out
jmp
inc
incb
je
adc
add
add
add
jne
in
pop
and
test
mov
call
popa
subl
cmpl
mov
lret
dec
lods
cld
adc
pop
mov
call
mov
es
loop
sub
add
filds
call
jge
loopne
fstpt
push
adc
or
sbb
enter
sbb
and
js
movsb
xor
xor
and
xchg
or
mov
sub
aam
mov
sbb
sbb
jge
fs
lods
and
jae
xor
movsb
adc
push
pop
sbb
or
xor
adc
adc
enter
add
loope
pop
in
sub
loopne
lods
jns
push
test
jmp
in
data16
mov
xchg
add
mov
pop
loop
inc
push
push
call
fsubl
int3
movsb
or
pop
and
sbb
cwtl
cld
push
lock
and
adc
pop
and
and
cwtl
icebp
sbb
icebp
push
and
je
scas
cwtl
outsl
aam
mov
mov
je
iret
je
sub
dec
push
xor
adc
sbb
jmp
or
mov
push
push
and
sbb
sbb
inc
fsubl
int3
adc
and
aam
adc
xchg
sbb
adc
int3
sbb
inc
and
nop
js
rcr
test
push
mov
fs
pop
mov
and
fdivl
movsl
inc
les
sbb
push
nop
scas
and
cwtl
or
bound
cld
sbb
xchg
adc
fistpl
popf
fs
out
mov
cwtl
mov
clc
mov
cld
mov
lods
jb
push
xchg
fildll
dec
mov
jl
sbb
loopne
xchg
mov
mov
mov
or
in
xor
and
and
jo
test
xchg
lock
jecxz
and
or
inc
inc
or
dec
lock
push
xchg
adc
jl
dec
xchg
xchg
jo
lods
test
and
sub
out
movsl
add
jb
sbb
sbb
sbb
inc
adc
rclb
lret
inc
hlt
ficoml
push
dec
xor
test
xchg
and
mov
and
mov
and
xchg
xor
nop
lods
call
test
pushf
xchg
and
xor
xor
jl
or
fs
shrb
or
xchg
add
pusha
sbb
aam
call
push
shlb
bound
sbb
or
inc
and
sub
dec
mov
mov
and
sbb
hlt
fsts
add
stc
and
fidivrl
subl
dec
or
add
stc
adc
cmp
loope
inc
or
aad
sub
leave
or
or
xchg
mov
inc
xor
movsl
xchg
call
test
and
push
inc
je
push
adc
bound
or
and
add
and
adc
mov
nop
jb
sarb
cmp
mov
cmp
inc
cmp
inc
adc
test
sub
mov
fstps
mov
in
and
mov
adc
enter
bound
sbb
inc
inc
and
mov
mov
adc
shlb
or
mov
lock
adc
xor
and
sub
and
cmp
mov
mov
rorb
xor
push
pop
ror
adc
daa
sbb
inc
das
adc
sbb
fsubs
push
je
cli
fdivr
es
int3
inc
adc
lret
mov
ror
movsl
int3
mov
pusha
and
adc
lods
fadd
in
adc
test
xchg
xchg
and
and
cmp
or
xchg
loopne
nop
xor
mov
sub
jl
sbb
inc
and
loope
lret
test
and
arpl
hlt
and
sub
cmp
loopne
xor
adc
mov
and
adc
hlt
xlat
dec
fisubrs
push
sbb
mov
aam
lods
or
test
rorl
pushf
in
xor
fadd
mov
inc
mov
xorb
and
pop
leave
push
cmp
or
adc
test
or
dec
mov
adc
and
mov
test
sbb
cmp
mov
sub
les
or
push
ds
sub
dec
dec
in
rorl
lods
bound
pushf
or
mov
sub
jle
in
cmp
inc
insb
sahf
and
les
test
call
dec
jo
push
or
movsl
dec
inc
aam
sarb
push
in
push
and
jns
scas
fsubs
or
fldt
xor
mov
loope
loopne
adc
push
and
adc
call
pop
fs
push
xor
xchg
fs
out
out
and
sbb
dec
and
adcb
or
xor
xchg
sbb
push
push
inc
add
cld
inc
fbld
pop
pop
int
mov
and
or
movsb
xchg
enter
inc
mov
xchg
mov
adc
mov
mov
xchg
xor
mov
in
in
jb
sbb
jl
sbb
or
sarb
in
adc
push
and
mov
popa
test
ror
aam
hlt
xor
xchg
sub
fs
inc
cmp
cmp
adc
adc
push
scas
gs
or
mov
ja
inc
mov
imul
cmp
insb
push
push
pop
call
add
repnz
sbb
icebp
in
daa
sar
addb
push
jge
push
sub
fsubs
ljmp
in
or
lea
in
and
pcmpeqw
mull
xlat
add
out
mov
fmul
rolb
dec
mov
das
xor
or
fwait
aas
popf
sub
rorb
jmp
clc
cmpsl
push
mov
cmp
push
add
or
or
mov
jl
jg
jae
cmp
jmp
mov
xor
jne
cmp
rorb
push
cmp
or
mov
inc
add
inc
cmp
sarb
cmp
pop
je
or
imul
js
in
jge
movsb
mov
mov
stos
lea
test
ffreep
cmp
mov
inc
mov
inc
testl
dec
cmp
jle
pop
neg
or
mov
aas
cmc
add
pop
jl
ljmp
andl
ret
nop
or
adc
pop
mov
rcrb
dec
std
dec
sub
hlt
out
add
mov
xchg
xor
dec
mov
nop
popf
and
jp
mov
push
jg
hlt
pop
fcomps
or
adc
pop
clc
es
in
inc
andl
stos
test
lret
into
xor
jle
add
add
lcall
cltd
sub
lea
rcrb
xchg
push
clc
cmc
sbbl
push
shll
dec
jmp
xchg
add
incb
addb
push
mov
loope
xrelease
push
out
loope
adc
fs
cld
push
pop
orb
jg
or
jne
dec
inc
in
in
xchg
sbb
xor
jb
inc
sbb
and
das
add
mov
sets
mov
adc
adc
xorl
cmc
subb
aad
push
sub
sbb
rcll
xchg
loop
adc
pop
sbb
insl
ds
divb
xchg
cmp
je
jle
xchg
jle
mov
add
push
adcl
mov
pop
sbb
aaa
push
or
sub
or
loopne
lret
enter
aas
rep
inc
bswap
xchg
rcll
xchg
mov
dec
movsb
ficoms
sbb
test
cli
pop
rep
aaa
add
es
push
xchg
jae
and
add
mov
ja
ficoms
je
mov
lock
repz
adc
mov
mov
sbb
or
in
pop
fisubrl
xchg
fstl
dec
ss
popf
pop
cwtl
bound
mov
dec
ljmp
push
inc
je
lods
cli
repz
movb
and
daa
je
sbb
jne
nop
scas
es
fwait
jl
push
jge
and
pushf
sub
sbb
data16
and
loope
in
insl
fildll
cltd
pop
add
mov
pop
mov
stos
loope
or
push
movsb
inc
daa
push
dec
cmp
sbb
cwtl
sbb
das
mov
adc
cmp
test
dec
test
decl
aad
jge
mov
and
xlat
ret
inc
sub
adc
and
pop
push
out
imul
xchg
adc
xchg
jmp
pop
sub
and
mov
fidivrs
lock
test
outsb
sbb
jbe
test
and
or
adc
dec
daa
incb
test
stos
sub
fs
adc
xor
add
shl
and
adc
and
enter
mov
adc
push
test
push
fldl
fistl
and
push
or
sbb
addl
pop
mov
stos
aaa
fnstsw
dec
inc
aas
das
xor
dec
xchg
das
push
fsubr
call
maskmovq
notl
jmp
jno
and
imul
add
or
inc
pop
jle
push
adc
jg
stos
and
adc
in
gs
push
sbb
push
fs
cwtl
and
and
cld
mov
or
xchg
daa
lods
sub
adc
push
pop
sub
xor
ja
popf
addr16
and
ja
je
mov
fucomi
sbb
cmp
push
and
sbb
adc
and
test
mov
out
ljmp
adc
mov
scas
or
in
movsl
addr16
xchg
xor
sbb
push
adc
and
test
test
mov
inc
mov
in
outsl
popa
jg
pop
sarb
insl
add
pop
lea
stc
adc
pusha
wbinvd
mov
and
adc
and
out
jp
mov
pop
pop
ss
jcxz
sub
mov
adc
stc
xor
outsl
ret
or
aas
and
jl
fsubl
sbb
je
ret
mov
in
or
stos
enter
and
mov
pop
add
add
add
add
push
or
bound
and
loop
dec
daa
les
je
mov
jecxz
in
mov
or
adc
mov
lret
dec
add
adc
and
scas
push
test
ja
data16
js
jae
inc
or
inc
nop
push
cmp
das
inc
and
pop
and
out
addr16
js
push
call
cmp
addr16
addr16
data16
popf
push
fidivl
outsb
adc
test
or
and
fwait
mov
lock
fsubrs
inc
rol
and
popl
jl
clc
inc
mov
aam
push
shlb
sub
jo
pop
sub
mov
leave
test
ficompl
hlt
push
mov
shlb
mov
adc
jg
adc
loop
cmc
mov
lea
lahf
or
add
cwtl
sub
or
out
repnz
sbb
push
push
cmpsb
add
test
fld
std
dec
xor
inc
les
shrb
pop
and
and
pop
push
jno
test
jne
in
push
pop
push
in
es
decl
es
cmp
sub
jl
xlat
testb
mov
jne
orb
mov
dec
push
mov
push
call
or
ud2
pop
pop
pop
mov
mov
push
jle
push
adc
loopne
mov
xchg
stos
or
scas
icebp
mov
push
dec
lock
jo
and
push
adc
call
loop
sub
in
and
pop
cmp
pop
and
adc
test
push
or
sub
cmp
inc
mov
nop
push
push
pop
sbb
jge
stos
cmp
mov
add
jmp
dec
jne
das
dec
xchg
pop
cmc
mov
push
inc
dec
sub
das
jl
inc
lock
jmp
xlat
mov
out
pop
push
jae
add
cmp
xor
pop
mov
and
or
xchg
jae
lret
insl
cmc
xchg
mov
and
insl
int3
adc
rorl
pop
mov
jbe
adc
pop
test
loope
sbb
lea
sbb
push
cmp
push
inc
jle
enter
test
ret
sbb
adc
jbe
ljmp
cmp
push
arpl
push
clc
xchg
popf
int3
cmp
push
fildll
xchg
sbb
daa
je
push
das
mov
xchg
sub
add
shr
and
pop
cmp
mov
es
ret
lret
add
and
cli
push
mov
shr
and
sbb
leave
adc
loope
mov
daa
incl
xchg
and
and
xor
jge
and
outsb
and
arpl
xchg
cltd
es
neg
inc
jge
and
push
in
push
xchg
xchg
mov
clc
loopne
mov
loopne
or
xchg
cmp
pop
sbb
xor
std
addr16
mov
push
and
jle
or
mov
pop
adc
or
daa
in
push
insb
das
in
push
inc
add
dec
adcb
inc
pushl
jle
push
adc
inc
mov
and
and
fstpl
jo
xor
popa
xchg
insb
inc
sub
sbb
repz
or
xchg
mov
add
inc
push
and
push
enter
jb
adc
inc
pushf
add
adc
inc
ljmp
les
std
jg
or
sbb
mov
aam
ja
jns
mov
sub
pushf
int3
inc
sbb
clc
jmp
and
push
and
test
fistl
sbb
xchg
mov
mov
adc
shl
test
movsb
xchg
iret
sub
jle
push
and
xchg
xchg
cmpsl
pop
jns
sbb
xchg
mov
jns
inc
push
mov
and
test
inc
fisubl
cmp
and
xor
rorb
in
xor
push
enter
xor
push
and
jmp
sub
mov
mov
enter
call
scas
push
cli
mov
dec
out
and
inc
adc
ret
inc
call
call
and
clc
ljmp
scas
fxch
cmp
scas
lea
adc
xor
hlt
je
cmp
cltd
cmp
mov
fisubs
aam
inc
movsl
rcrl
les
inc
fldcw
jnp
adc
mov
test
fcmovnu
fdivl
jbe
push
je
pushl
dec
inc
int3
xchg
inc
and
xchg
mov
lods
mov
adc
ret
jmp
cltd
cmp
rcr
adc
jnp
or
xchg
das
pop
xor
mov
cli
sub
add
and
pop
cmpsl
clc
aad
pop
inc
mov
rol
mov
push
ror
xchg
xchg
jmp
and
adc
jnp
pop
xor
add
or
xor
inc
and
wrmsr
test
dec
push
jmp
inc
shll
mov
leave
or
mov
mov
push
add
jl
sub
scas
sbb
sbb
leave
jne
mov
sbb
jp
adc
test
out
shlb
or
mov
xor
lods
ja
xor
test
jne
mov
sub
inc
push
lahf
lock
sub
popf
notb
pop
pop
or
mov
xchg
mov
sysret
adc
pusha
inc
or
cmp
add
sub
pop
mov
mov
add
jp
push
or
jmp
or
xor
decb
push
ljmp
mov
mov
nop
ret
adc
loopne
xor
and
pop
mov
cmp
adc
out
cmp
push
sub
mov
daa
jns
push
leave
pop
stos
sub
push
in
and
fs
mov
std
scas
sar
mov
sub
scas
pop
push
lock
ret
mov
mov
adc
test
je
call
idivb
mov
hlt
xchg
in
xchg
mov
xchg
mov
xchg
or
aad
or
and
xor
xor
xchg
xchg
pop
sarb
ljmp
mov
into
cmp
ret
inc
push
xor
inc
rol
dec
cmp
mov
push
mov
cwtl
and
adc
or
aam
bound
jmp
push
dec
xchg
loop
int
nop
push
xchg
pop
and
add
test
ret
pop
lea
adc
data16
cmp
add
out
pop
add
out
pop
shlb
add
sbb
ds
mov
rclb
adc
test
push
jmp
mov
adc
clc
add
xchg
test
lahf
repz
repnz
or
or
xchg
pop
xchg
dec
repnz
dec
int
cli
dec
scas
adc
inc
dec
mov
push
into
push
shr
mov
xor
cs
add
mov
add
inc
mov
negb
pop
jmp
and
test
pop
xor
or
rcll
js
jmp
sti
call
rolb
and
fisttpl
mov
adc
imul
sbb
inc
aad
insb
xor
mov
lret
push
or
jno
or
sbb
je
cmpl
inc
pop
bound
mov
inc
test
cmp
out
test
and
sti
mov
rolb
mov
sti
or
icebp
inc
and
aas
into
dec
gs
or
mov
pop
cld
jmp
dec
pop
push
ret
stos
push
sbb
mov
mov
je
insl
jle
or
jge
in
adc
lock
pop
sbb
jle
cmpsb
popa
lret
mov
les
subl
fcoms
adc
inc
into
mov
bound
rcr
ljmp
stc
and
xchg
sub
je
andl
es
inc
push
xchg
add
xchg
aaa
mov
dec
xlat
stos
cmp
cmp
aaa
mov
and
adc
test
lret
mov
dec
sbb
mov
ficoms
int3
test
ja
and
loopne
aam
or
cmpsb
test
mov
pushf
fsub
dec
and
or
mov
push
cmp
imul
push
fildll
mov
mov
sbb
ja
xlat
enter
aaa
jne
mov
int3
mov
mov
int3
loop
aad
add
mov
out
imul
sub
leave
sbb
aam
ret
dec
pop
fstl
lea
cltd
xchg
into
push
scas
loope
call
repnz
cmp
sbb
lahf
leave
sub
cmp
insb
jmp
scas
mov
mov
push
sub
sub
mov
mov
adc
call
and
sub
ds
jae
cmpsb
xchg
dec
clc
add
jne
mov
push
jecxz
and
adc
and
loop
pushf
cmp
dec
jp
clc
mov
call
aam
mov
mov
mov
adc
mov
sbb
adc
sbb
xor
push
push
aas
push
mov
sub
lods
sbb
sub
and
test
bound
enter
xor
sub
dec
mov
mov
inc
sbb
or
push
pushl
fisttpll
jp
push
inc
dec
je
adc
call
jl
jmp
nop
fsubs
movsb
fdivrp
shrl
imul
mov
test
jmp
adc
mov
cltd
or
xchg
dec
inc
sub
fsubrl
adc
and
and
mov
fdiv
xchg
mov
test
or
adc
push
das
lods
cli
and
inc
and
fsubl
enter
sahf
xorl
jmp
cmpsb
cmp
ljmp
jne
push
xor
and
dec
push
cltd
test
mov
or
dec
mov
or
jmp
jp
dec
shrb
leave
cwtl
notl
inc
and
insb
stos
mov
movsb
std
xchg
je
fadds
call
stos
and
clc
xor
std
icebp
cmpsb
hlt
cmpb
and
aad
xor
sbb
and
pop
std
or
test
pop
push
push
sub
push
bound
pusha
test
int
jbe
xor
jg
in
lock
stos
scas
cmc
adc
xchg
xchg
imul
into
push
pop
mov
mov
es
xchg
adc
mov
lret
cmp
clc
jns
jo
add
call
test
fs
xchg
push
cs
inc
mov
and
cld
or
stc
and
ljmp
mov
movsb
adcb
mov
mov
push
xchg
mov
pushf
call
stc
repnz
push
ja
das
js
xchg
jae
inc
cld
jmp
movsl
dec
inc
std
fsubs
and
sti
les
jne
mov
lahf
cwtl
addr16
clc
mov
inc
inc
jle
clc
test
rclb
cmp
push
fs
test
jge
mov
lock
jge
push
add
xchg
dec
fsubp
mov
clc
jne
not
and
orl
loop
lret
ss
inc
out
test
push
es
aam
comiss
aaa
in
and
mov
out
dec
in
sub
sarb
loope
add
push
jne
mov
insl
adc
jb
fs
je
push
int3
lods
rolb
jb
add
xchg
and
cmp
inc
cmova
mov
push
scas
lods
inc
jecxz
call
pusha
jecxz
dec
clc
and
push
enter
add
mov
lds
mov
minps
ret
cmc
sbb
mov
fcomps
jl
jmp
popa
push
or
xchg
lods
pop
adc
inc
jnp
inc
cmp
and
mov
mov
lcall
inc
push
out
xor
xor
mov
mov
mov
enter
and
pop
ffreep
test
call
or
jmp
ss
push
sti
test
sbb
std
push
mov
repnz
jg
loop
ficompl
rclb
cmpsb
add
add
xchg
adc
rorb
and
and
das
push
sub
popaw
mov
stc
enter
push
and
aad
mov
xchg
pop
pop
mov
sti
inc
inc
call
stc
jg
les
jmp
and
mov
loopne
movsb
popf
je
xor
or
fadds
mov
testb
sub
push
add
sub
call
clc
jb
and
adc
jmp
xor
lret
dec
adc
xor
jne
xchg
test
push
push
cmpsb
dec
xchg
cmp
or
fldln2
fwait
cmp
fldt
or
or
rcrb
push
push
movups
divl
lcall
or
dec
scas
popa
inc
jae
sub
jns
pop
push
and
rol
test
and
mov
jbe
mov
dec
xchg
adc
adc
jne
push
mov
je
add
cs
or
adc
stos
mov
shrb
push
push
sub
and
test
cmpsl
pop
dec
stos
sub
sub
push
loopne
or
and
cmpl
jle
xor
adc
call
ds
push
cmpsl
into
repnz
adc
cmp
das
je
jns
enter
enter
pusha
inc
and
js
jne
mov
add
jg
inc
inc
jl
subb
aad
scas
leave
push
and
clc
jne
or
dec
aaa
orb
imul
mov
or
sub
push
add
push
push
or
mov
loop
insb
scas
mov
je
xlat
lret
adc
imul
xchg
sbb
out
and
mov
and
ja
or
add
and
xchg
jb
jp
push
adc
sbb
pop
inc
inc
mov
mov
xchg
xchg
mov
lods
push
mov
pop
loopne
clc
inc
sub
lods
jae
mov
cmp
jg
call
lds
dec
mov
aas
mov
push
sub
sbb
mov
mov
push
call
sbb
mov
stos
adc
cmc
mov
std
inc
or
xchg
out
pop
pop
inc
jmp
xor
fstpl
daa
call
add
xchg
je
add
dec
cld
add
or
mov
test
rcrb
mov
je
mov
nop
xchg
rcll
test
xor
push
dec
add
sbb
dec
fistpl
cltd
in
sub
inc
rcll
inc
pushf
mov
xor
arpl
jmp
and
mov
mov
push
nop
add
in
pop
xchg
jo
fxam
mov
lret
std
adc
cmp
gs
je
shr
in
add
lods
dec
xor
mov
aam
jge
scas
leave
repz
sbb
xchg
or
and
hlt
sub
clc
cli
int3
push
add
das
loop
shlb
idivb
adc
push
adc
lahf
pop
ljmp
or
imul
mov
ds
enter
lcall
sub
inc
adc
shlb
lods
jmp
add
add
or
rcll
pop
js
pop
jne
or
lahf
adc
mov
out
or
nop
sbb
daa
dec
mov
pusha
push
enter
popf
loopne
orb
scas
mov
daa
xchg
adc
stc
mov
test
jmp
out
out
and
lds
movsl
mov
scas
jl
push
push
addr16
xchg
sbb
xchg
mov
and
mov
out
jns
push
inc
lods
adc
movsl
shrl
sub
cwtl
pop
lock
or
xor
enter
cwtl
inc
sbbb
les
mov
es
and
call
sub
std
xor
std
add
and
andb
jo
xchg
jl
jmp
jmp
xchg
insb
lds
scas
mov
imul
dec
xchg
push
push
inc
fcmovnb
lock
out
jg
xorl
sbb
test
dec
lods
leave
mov
popf
mov
push
inc
js
pusha
aam
mov
mov
sbb
das
jmp
xor
sub
and
push
or
cmpsl
xor
mov
add
push
out
popf
mov
lret
test
test
xchg
inc
imul
stos
or
pop
pop
shlb
lea
call
mov
mov
xor
inc
and
popf
in
mov
cmc
dec
test
dec
stos
int
dec
inc
push
pop
mov
lahf
andb
cmp
pop
add
movsbl
mov
dec
or
test
xchg
push
add
dec
sub
cmp
jge
adc
popf
dec
inc
adc
pop
stos
cltd
sub
or
fbld
cmpb
pop
xor
dec
push
or
shrl
lods
and
mov
pop
and
outsl
mov
out
push
cmp
test
xchg
and
orb
mov
jg
hlt
cmp
or
and
inc
jmp
push
xchg
dec
mov
pop
inc
adc
and
mov
ret
dec
mov
push
or
mov
cld
jle
dec
inc
push
add
jmp
test
pushf
sub
pop
push
shll
movsb
sahf
lock
out
mov
dec
mov
and
std
mov
dec
mov
and
lcall
pop
push
mov
inc
cmp
rorl
movsl
stos
int3
stc
sub
popf
mov
sub
lcall
pop
xchg
pop
inc
or
sbb
add
bound
mov
sbb
and
and
and
inc
xchg
mov
test
jno
cmp
mov
cmc
mov
pusha
xchg
mov
sub
push
lcall
adc
jl
fs
leave
dec
icebp
dec
cmp
movb
call
xchg
or
add
xor
lods
popf
mov
idivb
cmpsb
cltd
test
or
orps
or
sub
push
test
dec
notb
adc
je
adc
and
ret
inc
inc
inc
pop
sahf
test
mov
bound
pop
movsb
xchg
fwait
in
or
push
adc
stc
jle
cmc
xchg
out
pop
cmp
shl
xor
pushf
xchg
mov
inc
xor
and
das
or
fdivr
inc
cmp
mov
cmpsb
and
mov
inc
and
mov
fiaddl
js
out
adc
je
or
popa
das
push
andl
les
test
push
inc
xchg
push
nop
mov
push
je
jl
ret
jnp
pop
or
loopne
scas
sbb
jmp
dec
cmp
and
push
mov
ds
pop
rcrb
cmp
sbb
and
ja
dec
std
dec
mov
out
dec
inc
fs
push
xor
mov
and
mov
pop
jle
dec
iret
inc
cmp
adc
bound
xor
shl
sar
pop
pop
dec
fwait
and
sub
dec
sahf
sahf
lods
cmp
dec
and
mov
add
cli
mov
inc
jmp
fs
pop
pop
jne
je
les
sub
mov
push
push
adc
cmpb
addr16
mov
data16
push
sti
jb
and
dec
ret
gs
pop
mov
lds
pop
es
lret
dec
dec
add
lret
jne
adc
sbb
mov
clc
push
jmp
xor
pop
test
and
push
nop
cmpsb
mov
mull
xchg
xor
sbbl
dec
pushf
clc
sub
inc
je
lahf
push
mov
outsl
cmpsb
mov
sbb
pop
jno
test
mov
sub
sbb
cwtl
or
lock
mov
push
stos
inc
cli
call
push
nop
clc
cmp
ret
or
popf
test
in
cmp
adc
aas
xchg
sub
inc
outsb
xchg
and
cmc
jg
push
insb
out
sub
lea
jecxz
mov
dec
ret
xlat
jmp
cli
mov
mov
dec
pop
mov
sbb
sub
cmp
mov
adc
pop
aam
sub
sbb
adc
cs
fs
push
inc
cmpsl
aam
sub
lds
xor
adc
add
shlb
xchg
push
xchg
push
imul
fdivrl
repnz
xchg
mov
and
adcb
arpl
inc
lea
add
xchg
mov
fmull
push
jge
mov
and
jl
call
mov
push
inc
stos
mov
and
push
and
xor
adc
add
mov
out
pop
mov
orb
ja
xor
aad
test
inc
cmp
jmp
lret
lahf
dec
mov
cli
mov
imul
mov
add
pusha
adc
lea
xor
data16
imul
cmovl
lcall
or
xchg
inc
mov
test
push
lods
fildl
cmpb
push
xchg
add
inc
hlt
inc
lods
pop
or
pop
lock
je
push
inc
mov
ffree
leave
sub
xor
jne
sbb
push
pop
mov
mov
out
pushf
xor
xchg
aas
sbb
adc
test
push
scas
push
cmp
mov
dec
mov
lods
fdivrs
test
push
cmpsl
pusha
adc
add
mov
test
jnp
and
movsb
adc
inc
adc
mov
push
in
loopne
jmp
test
repz
push
pop
test
push
pushf
push
imul
outsl
xlat
ret
mov
mov
hlt
mov
dec
adc
mov
test
mov
jmp
test
mov
and
add
inc
call
adc
xor
or
and
xor
or
add
sub
xor
dec
cmc
stos
int3
and
adc
and
decb
adc
aas
inc
popl
push
in
and
in
lret
xchg
inc
sub
dec
fsub
and
rolb
jmp
mov
push
rorb
shlb
sysexit
jge
adc
mov
push
mov
pop
sub
sbb
mov
inc
pop
and
inc
sub
mov
and
fidivs
sbb
jmp
test
cmp
and
dec
hlt
nop
add
add
cmpsb
call
enter
push
test
inc
adc
mov
mov
mov
and
and
sbb
adc
and
arpl
dec
test
cmp
test
fisubs
ret
nop
lock
lods
sub
dec
or
test
in
rorb
and
ljmp
aaa
push
or
jmp
and
test
and
mov
and
nop
nop
mov
cwtl
push
push
test
jl
and
dec
adc
push
pop
adc
inc
lds
inc
or
stos
push
pop
or
inc
sub
test
and
adc
lods
or
or
inc
or
pushf
pop
punpckhbw
or
inc
dec
dec
xchg
mov
rorl
loopne
adc
adc
or
test
mov
dec
jno
sub
dec
test
and
movsb
shlb
fs
stos
test
xchg
enter
sub
xchg
and
mov
jae
and
fs
and
mov
push
xor
or
or
mov
adc
sub
push
xchg
nop
and
dec
adc
mov
sbb
sub
and
or
pop
jbe
adc
adc
lret
adc
mov
sbb
aam
mov
dec
dec
adc
clc
inc
dec
stos
test
xchg
sub
xchg
and
adc
adc
inc
mov
inc
push
jno
inc
in
mov
mov
or
sub
jo
in
cmp
loop
scas
and
mov
pushf
mov
out
sub
cwtl
and
test
adc
and
fs
xor
nop
mov
adc
and
xchg
test
enter
and
sahf
jno
inc
inc
enter
and
push
inc
dec
and
mov
sbb
test
test
cmpsl
sub
xchg
and
outsl
sub
inc
and
push
inc
xchg
and
adc
out
add
xor
inc
mov
stos
inc
and
adc
inc
and
pusha
arpl
sbb
dec
or
dec
nop
adc
or
inc
and
or
or
and
mov
cmpsb
push
lcall
cltd
loop
arpl
or
nop
inc
notl
sub
inc
mov
push
jno
adc
and
add
add
rolb
lods
jle
mov
mov
mov
mov
dec
or
jmp
inc
adc
xchg
mov
mov
xor
dec
nop
js
cld
movsl
sub
xchg
and
cli
adc
test
mov
push
and
adc
mov
jle
clc
inc
cmp
xor
imul
pop
fs
aas
push
and
sub
cmp
jne
cmp
test
push
mov
xchg
sbb
cmp
repnz
bound
push
aas
xorb
mov
cmpsl
sbb
adc
into
cmp
adc
xor
adc
mov
xor
adc
pop
jo
pop
inc
pop
jmp
cmp
aam
adc
push
sub
adc
mov
pop
ds
test
enter
and
adc
cmp
test
sub
mov
inc
cmp
and
adc
pop
and
push
jb
adc
xchg
xor
jl
inc
mov
ss
inc
pop
sub
mov
and
xlat
xor
js
icebp
inc
mov
mov
jg
je
cs
or
push
lods
test
adc
inc
pop
jle
and
outsb
mov
pop
inc
push
sub
mov
and
sub
adc
or
mov
or
hlt
inc
mov
and
push
inc
cmp
mov
sbb
test
enter
and
adc
sbbl
push
lock
and
push
or
fsts
lea
and
or
push
pop
imull
mov
jge
mov
dec
das
mov
inc
cmp
or
test
mov
shlb
add
popf
mov
into
add
call
or
je
dec
xchg
fldlg2
test
dec
lea
sbb
repz
mov
inc
pop
jno
add
push
jne
mov
adc
xchg
outsb
in
call
dec
bound
insb
dec
popf
lret
mov
sbb
daa
xchg
sti
outsb
mov
xchg
cmp
fs
cmp
sti
adc
out
mov
scas
aaa
dec
inc
lahf
sbb
xchg
sub
adc
andb
xor
orb
insb
dec
pushf
and
push
aaa
and
dec
jno
dec
adc
clc
dec
and
sub
outsb
inc
xor
cmp
call
dec
and
push
cwtl
cmpsl
lds
lea
inc
jmp
pusha
test
cmpl
sub
lcall
cltd
xor
sahf
mov
imul
rorl
xchg
iret
aam
push
mov
xchg
nop
sahf
push
inc
sbb
dec
adc
ret
jge
adc
pushf
adc
adc
and
or
jno
push
xor
xchg
sbb
addr16
popa
jmp
les
dec
inc
mov
ja
mov
fsubrp
adc
or
adc
dec
sub
das
pop
hlt
or
adc
pop
or
popf
call
cltd
mov
or
popf
pushf
mov
pop
lods
pusha
and
or
call
push
mov
out
mov
inc
lods
stc
pushf
rolb
hlt
test
or
xor
mov
xchg
pop
popa
or
jmp
xor
add
mov
push
or
push
jae
popf
adc
in
push
scas
sbb
add
dec
sbb
insb
int3
add
cmp
or
notb
jmp
insb
lcall
sub
adc
jmp
adc
rorl
test
cmp
sub
push
mov
je
and
cmp
dec
adc
nop
and
and
mov
xor
add
add
fcoml
mov
jmp
adc
push
and
ja
sti
inc
pop
dec
dec
dec
fiaddl
jp
mov
sbb
and
lock
cwtl
test
loopne
lock
xchg
add
les
cmp
rol
and
pop
xor
imul
loopne
rcll
rolb
in
ret
and
xchg
int3
pop
and
out
and
les
mov
mov
and
nop
mov
repz
gs
xor
adc
sub
nop
mov
pusha
pop
popa
dec
pop
test
inc
dec
mull
bound
nop
pushf
mov
pop
pop
sbb
test
enter
and
cltd
or
lret
mov
mov
repz
addb
mov
and
je
jp
xchg
lods
enter
sub
mov
or
std
sbb
push
inc
jne
pop
adc
mov
cmp
test
lock
adc
or
dec
adc
mov
sbb
inc
test
enter
and
adc
mov
jge
adc
sbb
mov
dec
bound
sbb
push
cmp
adc
sbb
and
and
cmp
pop
or
inc
repz
adc
cmp
adc
mov
pop
and
adc
dec
scas
pop
mov
xchg
les
orb
js
and
sbb
orb
push
loopne
push
test
adc
dec
adc
mov
adc
adc
adc
inc
sti
xchg
adc
add
aam
push
in
adc
adc
xlat
mov
and
in
lahf
push
inc
imul
adc
mov
jno
jge
inc
test
pop
bound
push
xor
and
or
adc
cwtl
inc
xchg
adc
testb
orb
cltd
jl
and
fsubl
adc
or
rclb
and
adc
adc
adc
push
mov
bound
mov
and
xchg
add
test
sbb
cmp
push
bound
out
inc
xchg
mov
adc
xchg
mov
mov
xchg
and
sbb
xchg
or
in
enter
jl
xchg
hlt
jg
js
xor
bound
scas
ret
or
xchg
push
dec
adc
subb
shrb
mov
les
repz
xor
data16
pop
add
imul
outsl
jmp
call
data16
push
rcrl
inc
adc
push
inc
mov
int3
mov
pop
push
icebp
sub
mov
or
frstor
and
das
inc
sti
xlat
aas
cld
clc
ficoml
sub
or
pushf
mov
jle
addr16
ror
dec
add
xorb
mov
inc
adc
xchg
or
mov
adc
mov
and
xchg
cmpb
leave
test
and
xchg
mov
xor
mov
aaa
imul
jne
jne
cmpsl
cmpsl
jns
sbb
or
mov
add
test
mov
imul
or
lahf
push
cmp
arpl
xchg
negb
push
inc
repz
xchg
pop
and
push
popl
cltd
mov
and
lahf
sub
pop
movsb
push
cli
and
or
clc
cmpsb
inc
xor
and
cmp
push
mov
lock
dec
shrb
loop
jge
fsubl
push
inc
shlb
rclb
mov
sub
sub
fcomps
gs
aam
sbb
outsb
popf
sbbb
les
jg
push
clc
insl
pop
or
xchg
or
sbb
xchg
jl
ret
sbb
mov
ret
in
mov
sbb
sbb
hlt
inc
and
push
mov
adc
test
nop
jne
xor
mov
call
and
jle
pushf
loop
rorl
or
mov
jle
mov
rorb
popf
dec
negb
setne
mov
adc
and
icebp
filds
and
imul
xchg
cli
mov
psubsb
mov
outsl
lret
add
or
or
cli
sub
stc
or
fstpt
pop
std
cmp
cmc
jmp
mov
movsb
add
push
clc
push
hlt
loopne
xchg
mov
sahf
pop
leave
push
xchg
or
pop
adc
and
and
in
inc
push
push
inc
ds
pop
call
sub
mov
and
outsb
jl
pop
in
add
fadds
ljmp
add
and
clc
cld
adc
in
test
iret
inc
cmp
loop
std
and
xor
dec
mov
sub
fs
fldcw
aam
jmp
mov
ret
xor
cmp
int3
mov
sub
enter
es
pop
cmp
push
sub
xchg
dec
cwtl
mov
dec
mov
inc
push
inc
dec
adc
mov
lar
insl
adc
or
push
sarl
push
daa
bound
pop
sbb
jmp
dec
jmp
cld
fsubrs
push
mov
mov
add
pop
lds
xor
adc
inc
test
cld
or
and
jbe
jmp
cli
sub
dec
cli
shrb
fdivr
and
mov
or
pop
or
cmp
cmp
jbe
dec
push
lea
pop
ss
fdivrs
cmp
push
orl
bound
repz
sub
or
mov
push
add
mov
je
adc
es
ret
enter
xor
cmp
sbb
sbb
cwtl
loop
aas
leave
cmp
test
inc
cmp
or
adc
rol
je
lock
jne
pop
sub
shr
test
mov
sbb
pop
sub
adc
sbb
adc
or
mov
roll
add
or
push
aaa
adc
fs
xchg
stc
pop
mov
xor
add
cltd
test
mov
mov
mov
andb
sub
sarb
inc
push
inc
les
pop
orb
das
jle
outsl
call
js
nop
xor
cmp
sti
sbb
cmp
jl
jne
dec
popf
mov
dec
loope
or
push
repnz
in
push
out
cltd
dec
inc
out
adc
cld
dec
cmpsb
int3
mov
filds
and
adc
sub
xorb
orb
cmp
jne
jg
or
mov
inc
mov
and
dec
xchg
outsb
mov
mov
ja
mov
jno
pop
mov
ret
aam
push
shlb
mov
inc
and
xchg
pop
adc
adc
imul
jmp
inc
xchg
std
test
push
not
cld
inc
mov
movsb
aaa
sbb
xacquire
cmp
dec
sub
fwait
mov
fidivl
push
ljmp
xor
adc
cs
inc
xor
lcall
mov
mov
pushf
pop
repz
inc
addr16
dec
vmread
or
lea
xchg
cmp
cwtl
loopne
mov
mov
bound
mov
inc
imul
cmpb
out
js
push
nop
cmp
lret
push
ret
add
sub
xor
sbb
in
cmp
and
push
and
sub
lods
inc
test
out
cmovne
sub
push
aad
test
movsb
test
and
insl
test
test
das
and
sahf
pop
out
mov
jmp
testl
and
test
sub
jg
push
test
loope
cld
jl
test
mov
adc
ret
dec
es
sub
addb
mov
adc
insb
hlt
pop
data16
mov
aam
jnp
inc
sti
cmp
pushf
sti
mov
test
xlat
mov
and
sbb
xor
in
adc
cli
into
xor
sahf
stc
and
mov
sub
mov
gs
xchg
cmp
adc
sahf
adc
adc
fstps
inc
or
imul
pop
mov
or
cli
inc
pusha
xor
orl
adc
cli
gs
dec
push
mov
or
inc
inc
mov
aaa
aam
pop
pop
cli
je
and
fstpl
xlat
js
inc
subb
mov
add
in
sbbb
jmp
in
sub
add
adc
das
sbb
xchg
push
push
sub
lds
sub
inc
cmp
mov
lret
push
jmp
push
mov
adc
xchg
pushf
fninit
xchg
cwtl
and
ds
call
dec
push
ds
fs
sub
cli
sub
inc
testl
subb
jle
mulb
add
test
xchg
mov
adc
or
popa
adc
push
xor
outsb
aas
cld
fsubl
clc
mov
mov
mov
orl
push
mov
dec
arpl
test
mov
xor
imul
imul
test
pusha
mov
lret
mov
dec
icebp
push
push
jmp
sbb
bound
adc
xchg
push
mov
stos
daa
mov
adc
stos
mov
and
xchg
ljmp
not
cpuid
xor
adc
mov
and
and
bound
sbb
inc
xchg
xchg
call
inc
inc
ret
pop
hlt
dec
add
fcmove
mov
adc
jg
push
int
sub
jns
sub
mov
adc
inc
push
xchg
cmp
cmp
test
clc
loop
ret
aas
jns
adc
pop
and
cmpsb
es
std
test
imull
insl
pop
bound
aas
mov
lock
fcmovb
pop
push
pop
or
mov
ret
test
lcall
fisubs
or
cmp
ret
inc
pop
in
cmp
and
ss
or
in
sbb
rol
pop
dec
pop
inc
mov
mov
push
ret
adc
jmp
xor
push
pushf
xchg
mov
les
jmp
mov
jmp
js
fs
je
sar
mov
xchg
les
inc
nop
stc
push
or
push
or
push
xchg
adc
inc
jg
data16
mov
jne
nop
stc
sbb
jb
or
js
sbb
pop
push
loop
xor
mov
cmp
jl
adc
mov
mov
sbb
gs
add
cmp
adc
and
call
cmpb
jne
jle
and
pop
add
mov
sub
mov
add
cs
xor
mov
sub
in
push
icebp
sub
pop
ds
push
adc
dec
and
adc
sub
stos
stos
test
fstpt
orl
push
xor
inc
push
adc
mov
lret
fs
out
and
mov
adc
mov
xor
inc
outsl
jnp
icebp
cmp
or
pushf
inc
repnz
mov
cmpsb
insb
jnp
inc
pop
push
add
cmp
loope
ljmp
aaa
jmp
fdivr
sub
jge
test
les
out
addr16
and
xor
arpl
inc
mov
mov
imul
xorb
gs
enter
imul
je
sub
add
inc
jmp
fwait
test
jl
inc
ret
sbb
and
inc
and
xchg
jb
cli
inc
mov
and
int3
bound
je
mov
or
jns
xchg
xchg
bound
movsb
es
sub
adc
cmp
jle
lret
mov
lea
outsl
call
in
mov
dec
xchg
jg
pop
pop
push
in
jl
xchg
jns
lds
jne
cli
mov
mov
js
xchg
mov
jmp
ss
rorl
dec
sbb
nop
adc
adc
xchg
cmpsl
mov
ret
adc
js
xchg
shlb
js
adc
push
test
test
mov
clc
xchg
xor
push
dec
mov
adcb
add
dec
pop
mov
xchg
xchg
mov
movsb
adc
mov
stc
ja
cmp
or
and
cmp
fsubrl
or
adcb
jmp
mov
push
js
and
adc
inc
push
sub
xchg
cmp
push
mov
jno
mov
xor
stos
push
pop
sbb
jp
ljmp
mov
jbe
ds
mov
lahf
shrb
pop
adc
imul
xchg
mov
call
call
out
and
or
jg
adc
sbb
pop
xchg
jecxz
adc
jbe
add
push
adc
or
not
xorb
mov
std
push
test
test
inc
pop
sub
test
sbb
push
mov
jmp
xlat
mov
jg
jae
ret
cs
pushf
and
adc
fisubs
mov
xchg
ret
adc
in
jg
push
dec
loop
jle
mov
cmp
call
or
adc
xchg
dec
sbb
jmp
cmc
jmp
cmp
mov
lahf
xor
xchg
dec
mov
adc
jge
mov
cmp
xchg
xlat
imul
cmp
push
cmp
pop
jmp
dec
dec
jb
clc
add
imul
pushf
xchg
mov
je
movsl
fdivrs
cmp
ret
adc
xlat
and
addr16
mov
pop
add
movsb
clc
mov
cltd
mov
and
xchg
ds
mov
push
dec
push
adc
push
jl
adc
cmp
jge
or
cmp
arpl
jbe
and
adc
cli
insb
enter
arpl
ret
or
adcb
pop
mov
js
inc
jnp
je
dec
xor
daa
xchg
cmp
test
mov
push
lock
jae
dec
cmpsb
cmpsb
inc
sub
mov
or
jl
jnp
jbe
push
fs
push
sub
push
mov
or
mov
push
call
jns
rclb
test
movsb
mov
or
sbb
pop
xor
dec
mov
and
jmp
sbb
adc
inc
or
test
pop
mov
lds
mov
or
xchg
push
sahf
sub
cmp
push
xchg
sub
inc
jp
das
and
mov
sub
mov
pop
je
mov
inc
or
les
cmpsb
dec
adc
jecxz
dec
sub
jae
js
push
push
mov
dec
cmp
sbb
jmp
xchg
xor
mov
mov
loope
push
mov
pop
push
dec
sbb
daa
jbe
dec
nop
call
rclb
ja
xor
cmp
sahf
push
xchg
lcall
inc
pop
aam
adc
sbb
inc
ja
mov
mov
or
mov
lock
fstps
jno
pop
fs
bound
mov
stc
popa
cmp
adc
call
push
cltd
enter
dec
imul
clc
orb
xchg
mov
lret
stc
roll
imul
push
outsl
xchg
and
sub
jne
js
les
stos
fcmovu
adc
mov
jb
xchg
pop
sbb
or
cld
adc
cltd
adc
push
adc
or
lods
push
fcoml
mov
xor
outsl
adc
lds
pop
cmp
dec
push
xor
push
adc
cmp
outsl
cmp
pop
dec
xlat
jecxz
loope
ja
imul
jne
mov
and
push
mov
fs
add
xchg
rorb
daa
stc
push
sbb
clc
jecxz
je
push
add
sub
xor
mov
test
outsb
popa
sub
adc
lret
adc
scas
dec
pop
push
and
lret
push
mov
sbb
imul
insb
dec
dec
lods
pusha
sbb
fs
dec
add
leave
push
test
push
cmpsl
cwtl
lea
pop
mov
movsbl
sub
or
outsb
dec
xchg
and
or
insl
jno
movsl
and
lret
push
or
mov
insl
loop
mov
shrd
test
int
vphaddubq
xchg
xchg
mov
push
jne
jge
push
sub
mov
push
mov
test
cwtl
mov
sub
xchg
mov
or
call
push
mov
push
fs
mov
rorb
xchg
pop
cwtl
loope
js
add
enter
xchg
fstps
mov
xor
call
cmp
jno
or
adc
test
insb
mov
mov
es
inc
inc
sbbb
jmp
dec
cwtl
adc
jmp
adc
rorb
std
jae
nop
push
xchg
lret
and
inc
jae
sbb
sbb
sub
push
sub
les
xchg
ljmp
sbb
lock
sub
cmp
mov
pop
mov
daa
lret
rorl
sbb
jne
xor
inc
xchg
mov
push
sbb
mov
inc
mov
mov
add
jge
add
stos
xor
lods
adc
imul
jecxz
bound
sub
lods
outsl
dec
cltd
push
lods
xchg
mov
pop
and
adc
daa
push
lea
fs
fdivs
mov
sub
add
cmp
pop
jne
xchg
gs
jns
imul
pushl
pop
and
dec
xchg
sbbb
mov
adc
sti
sub
jge
sub
imul
mul
and
jae
das
in
fstpl
mov
adc
xchg
inc
mov
or
jle
in
push
adc
cld
test
bound
push
adc
lea
adc
inc
or
imul
sbb
jne
enter
jbe
sbb
dec
cmp
aad
loopne
sub
popf
shlb
je
out
cltd
das
sub
les
pushf
inc
dec
lret
pop
dec
pushl
push
in
sub
and
mov
inc
push
fdivr
adc
les
fdivr
lret
adc
fwait
adc
inc
fs
push
call
arpl
dec
push
das
adc
adc
jo
je
sbb
or
out
and
out
adc
pop
jnp
sub
in
enter
rorl
outsl
mov
gs
xchg
adc
or
popf
lods
je
ret
pop
sbb
adc
xchg
insl
into
sahf
les
stc
xor
or
and
adc
ret
xor
or
jo
clc
or
jns
jns
sbb
and
cmp
adc
adc
lret
pop
mov
inc
and
dec
outsl
insb
or
rorb
mov
mov
out
adc
es
loopne
je
mov
or
repz
jge
push
pop
jno
imul
jo
call
inc
and
push
test
xchg
pop
jne
enter
test
mov
or
in
xor
clc
push
or
mov
xchg
js
mov
cwtl
push
scas
jo
movsl
inc
inc
ds
data16
or
orb
cli
push
hlt
testb
fwait
jbe
pop
fsubrl
je
fdivl
gs
xchg
mov
scas
in
das
cwtl
into
jne
mov
push
inc
test
mov
mov
inc
mov
inc
or
hlt
pop
sbb
and
clc
fstpl
das
mov
lcall
les
inc
cwtl
inc
cmp
invd
movsb
xor
mov
gs
add
inc
sub
clc
or
dec
inc
cld
mov
insb
xor
pop
lds
mov
dec
push
cld
mov
push
jmp
sub
je
or
or
dec
pop
add
outsl
lods
push
subb
mov
and
xor
sub
mov
adc
int
and
mov
loop
xor
push
call
outsl
adc
or
xor
cmp
jmp
push
scas
sub
mov
imul
or
decb
jno
aaa
push
int3
cmpsl
push
call
mov
and
xchg
ror
cmp
add
cs
pop
inc
adc
in
dec
icebp
idivb
mov
lahf
mov
and
inc
or
inc
imul
movsl
pop
scas
and
or
mov
jge
add
inc
cmp
jae
or
add
mov
or
test
shlb
cld
or
xlat
xchg
mov
jmp
push
and
lock
mov
adc
pop
push
leave
filds
sub
sbb
push
dec
ja
adc
stos
ds
push
das
adc
nop
leave
pop
cmp
lcall
imul
test
out
lret
push
adc
scas
fistpl
sub
push
add
inc
adc
nop
sti
or
inc
jns
jg
xchg
test
xor
jnp
fs
adc
pop
lods
lahf
lock
jmp
cmp
xor
adc
push
dec
sub
cmp
sub
les
add
xor
cwtl
orb
cli
mov
sub
xor
jno
push
push
xchg
imul
call
movsb
leave
dec
add
out
xor
sbb
repnz
cmpsb
sbb
xor
mov
daa
lcall
xor
test
sbb
pop
inc
rcl
call
push
push
mov
in
xor
pop
sti
js
mov
fdivs
inc
sub
xchg
sub
sti
xor
mov
sub
add
cli
inc
or
and
int3
mov
xchg
out
and
or
pushl
add
cmpsl
mov
clc
aas
into
xchg
xor
mov
test
test
mov
push
sbb
xor
and
insb
test
into
pop
sub
jb
sbb
and
and
dec
daa
in
xor
in
add
xor
mov
seta
fsts
inc
mov
xchg
sbb
mov
sub
jmp
jp
sub
xor
enter
andl
push
pop
fsubs
dec
add
shr
cmpsl
out
in
dec
or
jmp
mov
enter
mov
jmp
adc
or
dec
mov
jmp
adc
pop
mov
pop
sbb
unpcklps
daa
js
inc
or
pop
shlb
mov
xchg
jb
pop
dec
les
nop
cwtl
cli
adc
cli
jns
sbb
psubsb
dec
shlb
adc
into
dec
adc
adc
sbb
mov
cli
xor
sbb
loope,pn
movsl
xor
xor
fiadds
cmp
popa
je
cmp
fwait
push
cs
gs
loop
push
sbb
shll
dec
mov
add
push
ret
pushf
incb
enter
jp
lds
test
inc
lret
mov
mov
pop
imul
inc
dec
push
hlt
and
adc
push
mov
loop
ret
push
push
loopne
pop
mov
inc
jl
jle
add
mov
int3
enter
pop
cmp
lea
je
ljmp
fistps
dec
mov
jmp
push
push
jp
rolb
int
insb
push
daa
pop
negb
pop
adc
jmp
and
add
or
sub
sbb
pop
out
or
int
inc
mov
xchg
xor
jne
stos
fcomps
adc
or
bnd
push
pushf
popa
xorb
mov
adc
dec
cmpsl
pusha
sbb
mov
mov
xchg
pop
test
push
jno
xlat
ret
cli
mov
popf
push
inc
jno
mov
ja
fcoms
movsb
sbb
out
or
js
shrl
mov
push
inc
pop
or
ret
inc
or
je
mov
in
pusha
ja
lods
xchg
dec
adc
fmuls
repnz
dec
inc
pop
add
jmp
inc
or
cld
js
call
inc
imul
and
inc
jle
jo
inc
and
arpl
adc
mov
fidivrl
pop
and
outsb
inc
mov
adc
mov
pop
and
icebp
aam
notl
add
test
mov
inc
pop
mov
mov
test
pusha
xor
mov
adc
adc
mull
mov
lret
xchg
inc
and
sub
mov
push
cmp
sub
lods
inc
sub
jmp
dec
mov
fists
pop
dec
mov
sbb
pop
scas
adc
gs
xchg
mov
movsb
stc
dec
mov
mov
push
movsl
jbe
dec
push
cltd
jne
adc
std
adc
push
les
fmuls
nop
push
push
push
mov
int3
and
std
lahf
leave
aam
pop
rcrl
enter
mov
fsubl
mov
mov
fiadds
les
dec
rcl
ja
xchg
popf
mov
mov
dec
je
push
inc
dec
sub
scas
jmp
cmp
inc
push
scas
enter
les
and
inc
in
test
adc
or
inc
mov
enter
sbb
push
gs
int3
jns
test
call
jmp
add
das
or
jg
mov
cmp
xchg
lahf
je
bound
outsl
test
jnp
pop
rorb
cld
push
push
inc
lods
and
xor
sub
in
call
test
jne
lods
addr16
fldl
mov
addb
mov
push
rcrb
mov
xor
in
ror
mov
sub
mov
xchg
mov
push
inc
mov
movsb
fbld
xor
pop
xor
lea
push
mov
das
push
dec
pop
cmp
pop
lret
sbb
sbb
dec
inc
xlat
xchg
add
mov
sub
andl
xchg
lcall
js
adc
xor
adc
in
sbb
jle
movsb
pop
mov
cmc
popa
ret
jmp
and
popf
push
push
adc
push
xchg
les
mov
mov
cld
call
sbb
cmpsb
out
sub
sub
in
xor
sbb
test
int3
xor
imul
and
fadds
ret
inc
mov
scas
leave
mov
sbb
in
sbb
dec
adc
les
and
rclb
stos
mov
inc
sahf
mov
push
cld
cmp
cld
js
add
adc
jmp
data16
adc
call
mov
dec
out
lcall
push
aad
push
pop
or
jle
adc
cmp
cmp
lret
icebp
incl
push
inc
adc
xor
pop
pop
sbb
popa
pop
dec
push
daa
push
dec
mov
push
cwtl
jg
jp
scas
mov
insb
mov
and
pusha
add
adc
and
sti
sti
cmc
and
push
adc
xor
inc
xchg
or
fwait
movsb
outsb
add
xor
out
dec
xchg
je
cmpl
daa
cltd
jae
dec
int
decb
sbb
nop
sub
enter
les
pop
hlt
mov
jno
dec
inc
or
pop
xor
xchg
sub
lods
repz
xchg
inc
inc
xchg
jmp
push
lods
pop
dec
orb
push
push
aaa
stos
mov
xchg
xor
clc
push
sub
daa
rcll
and
push
push
adc
push
fwait
stos
ret
pop
pop
ret
rcrl
lds
pop
mov
push
repnz
push
or
push
pop
adc
add
pop
in
sbbb
call
mov
rorb
fprem
or
orl
inc
jl
xlat
test
lcall
cli
xor
jbe
lods
inc
cs
mov
lret
ficoms
enter
push
or
or
testl
jecxz
data16
or
lea
add
leave
inc
mov
sahf
lock
mov
clc
push
pop
or
icebp
xor
cmp
sti
mov
adc
lcall
nop
jg
cmpl
push
cld
xor
dec
decl
push
or
inc
movsl
push
pusha
cmc
push
xchg
push
and
das
cmp
push
sbb
daa
sub
inc
cld
dec
inc
push
xor
mov
adc
and
xchg
pop
pushf
int
aam
add
push
lcall
mov
jbe
add
movsl
mov
pop
push
stc
mov
jmp
push
das
mov
xor
adc
mov
fimuls
je
rcll
xchg
ss
es
shlb
sbb
xchg
mov
xor
mov
sbb
adcl
adc
dec
xchg
jne
daa
cld
sbb
rcll
bound
in
inc
add
outsb
je
out
pushf
pop
sub
call
ret
adc
call
xchg
mov
xor
dec
fs
in
xor
push
mov
ss
movsb
xchg
mov
push
xchg
add
int
test
sub
adc
cmp
adc
mov
push
pop
or
ret
mov
and
adc
les
and
dec
inc
mov
xor
rclb
push
call
cmc
pop
in
test
xor
mov
adc
add
adc
push
adc
adc
jg
addr16
or
call
sbb
jae
and
and
inc
subl
mov
movsb
add
pop
in
jmp
mov
pop
cli
fbstp
xor
rclb
mov
lock
dec
xor
cmpsl
jo
mov
pop
cwtl
adc
xchg
cmp
nop
add
std
push
in
outsb
clc
fnstenv
adc
cmp
loopne
jb
ja
call
enter
adc
add
inc
cwtl
sub
pop
dec
push
out
adc
adc
pop
xchg
leave
shl
dec
or
cmpsb
inc
call
adc
shrl
call
int3
push
push
cmpsl
mov
cmp
je
add
into
or
pushf
enter
shl
mov
sti
add
mov
les
adc
gs
push
and
inc
cs
mov
dec
aam
inc
fdivrl
adc
pushf
das
mov
and
fsub
push
mov
test
mov
popa
orb
js
dec
xor
in
and
psubsb
push
lahf
gs
fs
stos
add
cmpsb
fildl
xor
es
scas
das
rorl
jl
out
adc
jne
jo
jo
cmp
jl
add
xor
jo
mov
sbb
call
ret
xor
jle
call
inc
mov
jl
xchg
inc
push
daa
xor
cmp
jl
sbb
insb
ficoms
dec
inc
pop
ds
aam
dec
pop
adc
inc
mov
pop
fisttps
xlat
inc
pop
xchg
push
pop
mov
movsb
adc
pusha
or
and
jle
outsl
incl
add
xchg
shrl
inc
cmp
jl
ljmp
ret
push
dec
mov
pop
xchg
or
jae
inc
pop
dec
add
lea
psubw
ljmp
add
mov
add
push
popa
pop
adc
out
sub
adc
pop
cmc
dec
test
in
js
mov
sti
gs
lock
dec
xchg
aaa
hlt
jle
ret
push
orb
scas
pusha
push
xchg
fcmovnbe
sub
and
jne
js
dec
pop
mov
or
ficoml
and
xor
sub
fs
fs
pop
cmp
push
adc
cld
hlt
xor
frstor
push
add
arpl
clc
and
pop
nop
daa
or
pop
mov
add
ds
push
adc
cltd
push
in
or
mov
call
stc
in
sbb
jp
push
inc
and
mov
outsb
inc
lcall
cmpsl
add
add
add
xor
std
adc
call
jb
out
nop
mov
mov
adc
jmp
sub
inc
cmp
aaa
pusha
fiadds
sbb
pop
jp
and
inc
ss
pop
cld
fimull
int3
xchg
inc
imull
clc
rolb
mov
add
adc
call
imull
jmp
mov
or
or
jl
add
addl
lock
adc
in
and
jge
adc
mov
ret
rcl
insb
push
inc
mov
bound
xor
das
mov
aam
js
cmp
push
fsubrs
pop
sbb
push
inc
scas
mov
mov
dec
aam
movsw
imul
je
inc
jae
fsubs
mov
push
das
and
loope
loopne
sub
enter
lods
xor
orl
pop
scas
imull
push
pop
into
ja
repz
inc
push
add
stos
in
xor
movl
cmp
rolb
inc
xchg
movsb
mov
push
or
fisttpll
adc
mov
leave
pop
jmp
pop
push
ret
clc
mov
hlt
jne
sarb
jmp
xchg
jl
out
cmpsb
mov
sti
and
mov
test
test
mov
call
mov
and
add
cmp
cwtl
adc
test
xchg
clc
pop
bound
xchg
jmp
jns
inc
je
call
add
test
hlt
dec
pusha
adc
movsb
lea
cmp
test
and
cld
mov
cmp
js
mov
and
sbb
add
inc
out
jecxz
jae
mov
xor
xchg
call
popf
imul
pop
out
or
mov
xchg
push
xor
test
outsb
mov
test
ss
add
adc
jne
pop
mov
aad
dec
dec
je
dec
dec
push
rorb
leave
pop
push
mov
push
mov
leave
inc
flds
push
xor
cltd
pop
in
hlt
nop
mov
xchg
xchg
and
xchg
movsb
and
lea
and
adc
nop
lds
in
adc
data16
dec
clc
ljmp
and
inc
lock
lods
roll
jns
pop
mov
dec
push
cli
and
pusha
mov
cmp
pop
faddl
cmp
push
pop
push
and
mov
and
pop
nop
push
mov
es
jmp
je
xchg
fisubrs
mov
neg
enter
add
and
jne
lea
shrb
push
loope
das
repz
and
or
xchg
clc
mov
or
jbe
or
faddp
sub
mov
repnz
in
add
dec
mov
int3
fbld
pop
lret
push
sub
or
push
cmp
add
lret
and
and
xchg
xchg
push
or
adc
mov
cld
xor
push
test
add
sbb
xchg
test
jne
inc
mov
sbb
filds
pop
enter
dec
mov
rcll
jl
adc
cli
les
cmp
mov
xchg
and
jge
and
xchg
cmovb
fiadds
mov
outsb
and
adc
jmp
or
call
shrl
dec
jno
out
or
mov
cmp
lock
jae
imul
mov
xchg
jo
mov
outsl
test
xchg
hlt
xchg
loopne
add
xchg
mov
das
inc
lcall
xchg
sub
or
in
or
clc
inc
xchg
and
adc
gs
stos
loop
pop
mov
jne
outsb
mov
repnz
cmp
sub
fmuls
sbbl
stos
pop
mov
fsubs
sub
ret
xchg
inc
fwait
pop
or
sbb
in
js
pop
notl
xchg
stos
leave
jle
test
add
mov
test
imul
orl
and
aas
push
into
mov
adc
cmp
or
std
xor
pushf
pop
xchg
pop
xchg
sub
adc
popa
movsb
shl
add
cmp
lret
popf
das
mov
aad
mov
mov
bound
iret
sub
test
adc
cld
xchg
ret
cs
cltd
adc
in
add
add
lea
xchg
push
and
pop
sub
je
dec
ss
std
pop
push
sub
mov
xlat
or
sbb
movsb
clc
in
dec
or
es
xor
xor
xor
test
add
movsl
sti
inc
sub
pop
xchg
push
xchg
je
adcl
mov
cmp
clc
call
fs
sbb
and
ds
jle
push
aam
addr16
jge
inc
arpl
adc
jle
xchg
push
sub
cld
mov
and
inc
add
aad
roll
test
div
es
sbb
pusha
adc
or
inc
and
push
push
cmp
adc
push
cmc
sub
add
pop
notl
mov
adc
or
fs
xor
or
cmpsl
stc
adc
push
pop
xor
jl
push
test
fld
stc
insb
das
or
into
and
test
adc
push
mov
lea
test
and
mov
mov
add
xor
fadds
faddl
aam
repnz
sub
pop
or
cltd
push
aaa
xchg
jbe
out
call
mov
mov
aam
lods
sbb
jmp
xchg
ds
cmp
inc
cld
jno
cmpsl
fstps
lcall
push
push
rorl
cmp
mov
cmp
dec
add
aaa
mov
adc
shrb
sub
cmp
push
ret
mov
sbb
inc
mov
sarl
nop
cmpsb
sub
dec
adcl
mov
idivl
jle
mov
cwtl
mov
add
push
mov
adc
cltd
out
mov
fmull
dec
mov
fucom
ret
sbb
lock
dec
or
inc
fs
test
mov
stos
mov
and
out
sbb
mov
movsbl
cmp
mov
cmp
sbb
jg
push
les
jne
mov
pop
jmp
out
pop
cltd
push
mov
xor
and
or
pop
or
xchg
sti
adc
or
push
jmp
mov
xor
cmp
repz
push
clc
lock
adc
or
cs
add
add
repz
dec
and
lock
cmpsb
clc
push
es
dec
xchg
mov
pandn
xchg
jbe
scas
cmc
mov
mov
jmp
mov
cmp
or
and
lock
ret
dec
sti
scas
flds
clc
lret
mov
ret
icebp
lret
lcall
outsl
rcll
scas
dec
out
dec
and
xchg
pop
inc
or
mov
sub
pop
lea
shrb
jge
dec
jnp
pop
adc
mov
or
mov
inc
add
popa
test
adc
je
sub
push
mov
adc
push
jg
imul
sti
adc
loopne
add
add
mov
repz
xlat
push
adc
jecxz
add
mov
sub
and
roll
adc
push
lret
and
push
or
jg
adc
dec
sti
dec
or
ljmp
adc
and
ja
pop
out
xchg
in
imul
inc
push
int3
xor
xorl
push
cs
pusha
push
sub
ret
pop
out
sub
xor
sub
and
adc
pop
mov
dec
hlt
add
test
jne
inc
mov
outsl
cld
fidivrl
add
cmp
lret
push
or
cwtl
xor
or
add
push
mov
jmp
rol
or
adc
dec
cmpsb
jo
imul
call
mov
ja
jmp
or
push
mov
mov
adcb
leave
jbe
mov
cmp
ret
fwait
or
jne
inc
ds
cmp
cmp
adc
ja
push
push
orl
or
aad
pop
call
ret
and
inc
pop
lods
dec
and
or
test
sub
test
inc
shll
push
mov
mov
xor
mov
push
mov
repnz
lret
pop
aam
mov
pop
and
jmp
xchg
xchg
mov
pop
add
sub
out
imul
leave
and
push
lods
arpl
xchg
and
push
push
pop
popa
adc
sub
push
jae
xor
lcall
dec
xor
ficomps
outsb
mov
out
mov
lret
push
movswl
or
les
xchg
pop
cmp
iret
adc
inc
fwait
and
mov
lahf
dec
pop
cmpsb
fwait
mov
aam
sbb
movsl
rcrl
adc
rcrb
adc
dec
stos
jb
rcrb
xor
or
mov
adc
lock
rcrl
in
add
clc
push
mov
mov
pop
lds
lea
into
adc
cmp
les
aaa
pop
jge
cmp
mov
sbb
jbe
cmpsl
jge
sbb
insb
push
and
cmp
push
mov
dec
in
xor
pop
pusha
inc
loopne
or
je
mov
lret
push
int3
mov
pop
jbe
cmpsb
popa
push
imul
flds
mov
adcl
sub
pushf
pop
push
lods
pop
pop
lret
sbb
movsb
sbb
xchg
cmp
subl
mov
xchg
call
push
and
cs
jmp
push
hlt
or
test
jl
enter
or
scas
cmpsl
xchg
lcall
popf
pop
cmp
dec
rcrl
and
dec
test
icebp
pop
mov
jp
sbb
lcall
mov
inc
push
xchg
test
lahf
pop
lods
dec
adcb
adc
fisubrs
jb
or
jne
mov
jno
lods
lcall
dec
adc
inc
sbb
sub
cmp
jle
push
pusha
or
movsb
xor
mulb
rcr
push
jbe
shlb
shrl
inc
test
test
enter
mov
sbb
push
je
test
in
cs
imul
in
std
pushl
adc
ret
incb
dec
cli
pop
pop
cmpsl
pushf
push
call
int
adc
rcrl
jne
jnp
iret
hlt
xchg
jne
ret
hlt
iret
bound
jmp
xlat
loop
stc
pop
pop
adc
hlt
andl
push
cltd
xchg
adc
mov
adc
sub
mov
loopne
inc
adc
mov
adc
add
dec
jmp
lock
repnz
int3
dec
into
sub
cmp
push
or
sbb
call
fdivrp
in
nop
clc
mov
add
dec
rorb
mov
adc
arpl
test
faddl
rol
int3
repz
test
xlat
or
rcrb
and
lock
ds
in
mov
push
ret
push
push
cmp
push
inc
xor
call
xor
mov
pusha
or
mov
icebp
aad
aad
test
push
pusha
inc
ljmp
popf
pop
insb
aad
xchg
daa
fisubs
cld
cmp
jg
aam
enter
test
mov
mov
sub
out
jns
sbb
aad
loop
stc
aam
sub
sbb
das
and
inc
rolb
jl
jge
stos
jle
icebp
mov
push
mov
mov
out
push
enter
adc
div
sbb
xor
loopne
pop
cli
ret
push
aaa
or
cld
push
mov
xor
ja
stc
loope
push
lock
mov
inc
aas
call
add
ret
iret
idiv
cli
imul
cmp
jg
jecxz
sbb
out
call
in
pop
add
ljmp
cmp
sub
sbb
loop
xchg
inc
mov
push
add
jmp
sbb
lahf
pop
pop
cmp
mov
adc
push
and
and
ret
push
sbb
pop
push
push
adc
cmp
addb
add
ficoms
or
enter
push
mov
pop
add
jb
cmp
jae
push
dec
and
and
test
inc
dec
inc
les
and
and
bound
adc
adc
xor
or
mov
sbb
test
or
xchg
sub
sbb
add
adc
sub
jp
xchg
push
dec
dec
or
dec
lcall
pop
loopne
repz
popf
cmp
add
scas
addr16
inc
inc
pop
jne
clc
jmp
jo
cmp
pusha
or
and
or
inc
and
pop
inc
insb
xor
and
xor
push
adc
adc
sbb
les
push
adc
loopne
das
cmp
mov
or
xor
mov
js
inc
adc
scas
mov
adc
aas
lret
std
push
in
jns
xchg
mov
ds
mov
aam
or
popf
push
sub
fucomp
xchg
cwtl
clc
stc
out
imul
xor
sbb
sbb
sbb
adc
pop
testl
test
dec
inc
divl
and
push
cmc
pop
ret
lods
mov
pop
rol
mov
xchg
fcompl
mov
dec
sbb
cltd
je
inc
and
mov
bound
ds
out
inc
adc
adc
ja
pop
mov
adc
and
dec
push
ljmp
std
sub
inc
test
and
rol
inc
in
push
cmp
cmp
adc
shr
inc
mov
add
out
cltd
and
sbb
mov
xchg
cld
out
cmpsb
orb
jb
incl
mov
test
push
mov
mov
roll
or
shlb
sub
mov
js
mov
movsb
push
es
sub
pusha
testb
adc
cwtl
daa
mov
push
jmp
push
in
mov
xor
push
xor
push
xlat
inc
outsl
adc
rclb
cltd
enter
leave
sbb
mov
push
std
lret
add
outsb
pop
sbb
xlat
pop
push
mov
add
popf
pusha
notl
mov
orl
sub
jne
sub
mov
sahf
or
push
push
sbb
sub
push
xchg
mov
sub
dec
add
loopne
mov
cmp
lret
sub
int3
mov
jle
fs
stos
fstps
and
popa
test
std
imul
enter
or
fs
jo
cmp
jmp
or
jbe
mov
mov
mov
rcr
sahf
xlat
adc
sub
lret
cmp
stos
inc
enter
adc
push
mov
call
fidivrl
mov
je
call
lock
dec
push
and
cmp
push
fadds
mov
movsb
and
cld
popa
fstps
in
mov
shlb
mov
adc
push
mov
ljmp
outsb
fld1
sbb
pushf
test
inc
test
or
cmpb
and
lock
cmp
inc
in
adc
sub
cli
sub
jae
lock
testl
fimull
push
mul
loopne
or
add
push
xchg
aaa
cli
xor
clc
and
dec
movsl
push
pop
cmpsb
lds
and
mov
jmp
sti
mov
pop
sbb
and
enter
inc
cmp
xchg
push
dec
repz
sbb
and
inc
mov
mov
pusha
adc
push
lret
rorl
mov
jp,pn
mov
cmpsl
push
cmp
std
cli
test
adc
cli
cmpsl
adc
popf
inc
pop
sar
inc
cmp
test
insb
icebp
sub
adc
fdivl
mov
push
sbb
int
or
mov
inc
and
sbb
and
xchg
or
das
cltd
orl
lock
mov
inc
inc
jbe
pop
pop
mov
test
pop
xchg
xchg
rep
jae
xchg
dec
xchg
mov
jae
cmpb
add
jne
push
adc
test
mov
mov
mov
cmp
sbb
inc
pushf
adc
cmp
cltd
fisttpl
nop
jmp
dec
pop
unpcklps
js,pt
mov
iret
bound
push
cmp
push
ficoml
shrb
xchg
and
lea
repz
jmp
jmp
bound
adc
jne
lock
sbb
in
in
add
fiaddl
inc
sub
mov
cmp
lret
jecxz
add
idivl
subb
mov
mov
sub
enter
jl
int3
mov
daa
imul
jge
jge
pop
outsl
pop
xor
mov
mov
mov
and
hlt
ret
adc
int
inc
fdivrp
sub
aam
or
int
jns
dec
enter
mov
mov
sbb
cmp
popf
mov
test
mov
cmpb
push
mov
leave
arpl
jl
adc
lods
push
and
dec
sub
nop
adc
cmc
xor
inc
mov
enter
sub
inc
in
add
xor
xchg
scas
inc
inc
sub
test
sub
adc
popf
movsb
fistpll
fnstsw
xchg
ret
sub
int
aam
int3
je
es
push
lds
xor
push
jmp
mov
or
pop
pop
les
cld
xor
lahf
and
loope
sub
lock
ret
test
adc
push
jmp
add
mov
sbb
sub
stc
mov
inc
xor
inc
aam
dec
sti
orl
adc
shlb
push
orb
push
inc
xor
ret
xor
daa
inc
call
sbb
dec
rcrl
inc
xchg
and
add
pop
pop
fsubl
lret
sti
dec
cmp
or
or
aam
leave
pop
inc
push
or
jmp
loopne
push
bound
dec
addr16
fbld
and
xchg
mov
pop
sahf
push
lahf
adc
cmp
aas
cmp
ljmp
lahf
sbb
ret
mov
add
stos
sarb
dec
push
mov
pop
ret
cmpsl
pop
loopne
cwtl
mov
pop
push
pop
ss
and
push
mov
es
sub
adc
push
inc
fwait
xor
dec
subb
push
ret
faddl
mov
call
jne
add
out
push
lcall
test
adc
cmp
or
add
adc
ret
inc
test
aad
dec
mov
dec
mov
sbb
decb
pop
xchg
adc
and
cmp
jle
jns
hlt
inc
mov
push
or
mov
cmp
je
sbb
sub
add
loop
pop
sbb
outsb
or
pop
and
inc
and
mov
das
lea
xor
std
aam
sbbb
mov
pop
mov
out
jp
rcl
push
leave
in
add
mov
pop
push
xor
mov
test
sbbb
jle
cmp
je
mov
call
out
cld
dec
and
int3
mov
fmuls
aas
adcb
push
and
jne
adc
add
enter
aas
rcl
movsb
and
xor
jecxz
lcall
pop
sbb
jns
insb
pusha
cmp
inc
and
or
mov
into
out
jg
mov
sbb
ret
push
adc
sbb
xchg
stc
sbb
add
and
mov
and
xlat
shll
dec
aam
adc
enter
outsb
cwtl
icebp
mov
xchg
or
in
into
movsb
scas
movsl
or
or
mov
leave
sbb
pop
push
sub
test
and
sar
pop
nop
clc
mov
out
out
mov
and
iret
or
sub
push
mov
aam
movsb
stc
movsb
adc
cmp
xchg
mov
xchg
pop
push
mov
test
cld
arpl
shrl
scas
mov
mov
sbb
loop
mov
jae
int3
jbe
jle
sbb
cltd
adc
mov
decl
movzwl
push
cmp
fwait
data16
cmp
inc
mov
sbb
cmpsl
data16
xor
sub
imul
sbb
dec
cs
loope
or
xchg
jbe
pop
xchg
push
jl
clc
mov
repz
push
stos
jge
or
sub
adc
xchg
and
jo
repz
cld
ljmp
mov
dec
sub
inc
pop
pop
and
aaa
jbe
sub
addb
hlt
mov
pop
add
jle
or
sarb
or
popf
sub
insb
fldenv
movsb
cli
adc
jbe
bound
adc
add
push
mov
or
mov
jae
jbe
inc
push
ljmp
mov
pop
loope
scas
jns
sub
outsl
lock
xchg
mov
xchg
mov
mov
je
fcmove
adc
and
xchg
fisubs
in
mov
idiv
sbb
movsl
stc
push
cmp
sbb
push
stos
scas
hlt
incb
or
mov
adc
jmp
inc
out
fsubr
pop
test
xor
adc
cmp
mov
pop
sbb
push
pop
std
sbb
aaa
pop
or
in
or
add
nop
cmc
add
add
lock
add
sub
lea
inc
cmp
call
pop
push
add
js
push
clc
dec
jmp
mov
lret
out
push
and
enter
inc
cmp
stc
jae
lods
aaa
nop
adc
popa
cmp
in
push
notb
fs
jnp
mov
inc
add
int3
les
xchg
xor
adc
and
push
add
xorb
arpl
dec
xchg
xchg
sbb
sbb
xor
pop
push
gs
sbb
lods
sbb
jns
mov
lret
mov
push
cmpsl
jne,pt
jmp
push
cmp
mov
loope
fwait
xchg
int
mov
pop
jge
out
dec
scas
lcall
loope
and
jo
sbb
std
inc
xor
fstl
scas
dec
sbb
cld
mov
jg
das
je
jp
fsubrl
lahf
or
adc
stc
sub
and
pop
add
cmp
outsb
test
inc
mov
into
out
or
dec
lea
pop
call
inc
addl
stc
or
sbb
or
rol
pushf
les
or
pop
pop
xorl
or
repnz
add
or
jge
pop
xorb
mov
or
or
sbb
cmp
cmp
sub
inc
xchg
jno
rorb
enter
cmp
je
stos
rcrb
push
push
push
sub
mov
cmp
jl
mov
test
xor
or
sti
clc
push
cmp
cmc
add
incl
mov
cmpsb
xchg
mov
jg
fsubr
stc
cwtl
loopne
les
cmpsl
js
dec
leave
fs
aam
ljmp
repnz
pusha
pop
cmp
or
or
sub
adc
pop
and
ljmp
orb
sbb
cmp
je
mov
dec
cld
sbb
pop
pop
jmp
or
cmp
je
mov
add
xor
adc
xor
jbe
in
mov
cs
dec
imul
cmp
or
sti
jmp
nop
cmp
push
add
repz
jns
out
cmp
inc
fidivl
inc
dec
mov
xor
add
mov
dec
call
or
dec
aad
cmp
mov
arpl
sbb
sub
movsb
pop
or
das
dec
lock
icebp
lcall
xchg
nop
dec
sub
ficoml
dec
jle
mov
mov
push
test
nop
sysexit
push
xor
push
loop
or
fs
movl
cmp
mov
mov
jg
add
je
ret
adcl
push
popa
cmp
and
adc
lock
or
and
repz
neg
dec
into
push
inc
lcall
pop
gs
inc
and
add
hlt
sbb
mov
orl
or
fsts
call
mov
mov
xor
xor
mov
xchg
mov
push
xchg
and
ljmp
stc
jl
pop
rcll
sahf
mov
cmp
sbb
inc
push
loop
inc
jmp
hlt
or
or
nop
enter
sub
inc
xchg
xchg
std
xor
or
sub
and
test
jb
lds
inc
mov
decb
mov
pop
shrl
or
sub
adc
or
or
sub
and
mov
ret
or
out
scas
add
xchg
out
or
mov
jne
sahf
test
adc
add
mov
adc
icebp
add
mov
lsl
xor
xor
push
roll
lret
je
fldl
pop
je
insl
in
and
imul
int
inc
cli
push
push
sub
ret
adc
dec
std
pop
cld
sbb
push
ljmp
arpl
add
push
cmp
jbe
fldl
cmpb
test
shr
and
popa
stc
or
sub
fisubs
clc
push
mov
add
psrld
jg
enter
inc
lea
nop
aas
adc
les
rorb
push
lock
repz
insb
scas
adc
int3
push
sub
mov
mov
inc
lret
sbb
inc
jecxz
xor
cmp
xor
sub
and
sbb
adc
or
jge
cmp
mov
fs
pop
and
shlb
pop
and
shlb
pop
and
rorb
sbb
lock
clc
sub
loop
icebp
jo
or
mov
push
mov
xor
sbb
sub
rorl
cmp
sub
icebp
lock
adc
fsts
lock
nop
adc
mov
inc
clc
mov
lock
sub
push
push
fmull
cmp
lods
dec
mov
mov
cwtl
and
movsb
jno
xchg
push
out
xor
xchg
sub
sub
dec
pushf
lods
push
out
lods
out
movsb
scas
nop
inc
pop
pop
push
shrd
mov
mov
aam
out
dec
push
sbb
inc
adc
and
pop
and
shlb
pop
and
rorb
sub
and
sbb
add
push
mov
hlt
push
adc
sub
add
ret
push
add
rorb
and
cli
adcb
sbb
je
sub
or
mov
fnstcw
pop
inc
adc
xchg
into
test
je
aaa
rep
ja
dec
dec
mov
mov
push
xor
xor
loopne
cmpl
ja
out
imul
lds
adc
notb
fiadds
add
push
pop
or
adc
sub
mov
negb
arpl
setns
lock
sub
imul
mov
rcrl
cld
mov
mov
inc
or
or
and
cmpsl
nop
mov
pop
mov
or
call
fldl
pop
mov
in
push
in
push
or
and
sbb
add
jne
call
jle
jg
adc
mov
push
fmuls
call
inc
jo
push
clc
in
aaa
dec
jno
loopne
mov
mov
dec
stos
cld
pop
outsb
clc
sub
pop
fnstsw
sbb
or
mov
testb
pop
aas
or
call
pop
hlt
push
adc
popa
repnz
out
fldl
inc
mov
movl
in
mov
xchg
push
nop
adc
lret
sbb
xchg
inc
test
sub
adc
es
mov
jge
inc
xchg
push
or
daa
pop
cld
imull
fistpll
fwait
or
es
push
clc
leave
adc
out
jp
xchg
xor
subl
mov
sbb
xor
push
adc
bound
mov
or
push
jbe
pushf
shr
jp
dec
sbb
jo
mov
xchg
cld
arpl
nop
or
jmp
in
jo
push
pop
pop
xchg
sbb
pop
scas
adc
mov
inc
jge
xchg
jo
dec
push
or
cli
into
insl
mov
std
sbb
inc
loop
cs
jae
pop
dec
and
add
mov
insl
push
add
cmpsb
jo
loope
and
adc
pop
nop
cmp
xor
xchg
mov
rcrb
lret
lcall
popa
push
mov
push
inc
push
mov
sub
clc
xchg
shll
cld
pop
movsl
stos
or
or
es
xchg
xor
into
repnz
loopne
in
jb
and
push
fs
sbb
call
gs
hlt
mov
adc
adc
sub
mov
xor
xchg
sahf
inc
fmul
push
les
cltd
xchg
leave
sub
push
adc
lea
imul
movsl
xor
ljmp
pop
inc
mov
jmp
pop
std
and
mov
pop
sub
xchg
and
mov
pop
scas
cmc
and
mov
or
and
sub
inc
adc
push
add
pop
cmp
jbe
pop
js
sbb
sub
ds
std
or
xor
imul
ficompl
pop
jmp
jp
subl
mov
inc
pop
or
cmp
cmpb
outsl
inc
ficoml
add
dec
lea
cmp
and
pop
add
jle
pop
or
testb
imul
insl
lret
lds
inc
xor
jb
cmp
ja
add
lock
daa
sub
dec
lock
xor
jmp
inc
jns
cmp
jo
mov
inc
in
sbb
xor
and
adc
mov
add
loopne
clc
push
push
jno
roll
xor
sbb
mov
test
fsubrs
lea
xor
mov
mov
loop
iret
xor
add
push
cltd
cld
inc
mov
push
adc
push
ret
fs
adc
or
or
inc
imul
fnstsw
sahf
or
add
cs
or
imul
mov
pop
pop
mov
add
addr16
jp
xchg
or
fstpl
or
mov
fimuls
movsb
pushf
movsb
stos
lret
pop
sbb
inc
xor
push
loopne
jp
dec
inc
xor
enter
loopne
andb
lock
pop
call
sbb
outsl
xchg
arpl
mov
lock
pop
mov
data16
dec
or
push
cwtl
mov
or
out
int3
paddusb
aam
int3
adc
and
dec
mov
lods
pop
sub
and
adc
or
les
sbb
cwtl
cltd
xor
sbb
or
sub
inc
nop
lcall
pop
inc
pcmpgtb
dec
pop
xchg
and
xchg
and
mov
mov
push
inc
push
cmp
lret
mov
pop
xchg
adc
adc
or
icebp
sub
mov
jae
push
call
rorb
bound
sub
ret
das
sbb
mov
add
inc
shrb
mov
into
mov
mov
cmp
outsl
or
xchg
les
pop
call
inc
jne,pt
or
cmp
mov
and
adc
inc
dec
stc
inc
add
fs
jb
adc
jmp
sub
shrl
les
dec
jp
pop
dec
stos
jl
mov
cmp
add
mov
add
orb
int
mov
inc
adcl
stc
arpl
jmp
sub
in
clc
sub
add
sub
adcb
scas
adc
or
inc
popa
mov
inc
push
shlb
jmp
iret
cmp
ret
jne
add
aas
mov
insb
mov
rcrb
stos
pop
xchg
or
adc
loopne
dec
clc
pop
or
push
sti
aas
xor
mov
es
aad
fwait
icebp
dec
pop
dec
aaa
or
xor
add
adc
and
or
sbb
push
inc
inc
jmp
pop
mov
adc
out
mov
jg
neg
cmp
or
loop
add
test
je
imul
or
mov
inc
js
pop
cmp
icebp
mov
jnp
inc
sub
test
mov
or
xor
jns
leave
jle
jl
or
dec
lahf
or
fstps
ret
sbb
mov
push
pop
pop
xor
and
push
jmp
xor
lret
sub
or
add
adc
pop
pop
mov
adc
sbb
mov
lods
mov
cmpsb
mov
mov
movsb
cltd
fidivrs
shl
loopne
notl
mov
mov
lds
xor
add
adc
sbb
movsb
outsb
inc
or
push
jbe
pushf
mov
jns
adc
shll
movups
movsb
mov
sbb
push
xchg
jns
mov
movsb
xor
std
inc
ss
or
mov
mov
add
fs
push
sbb
jmp
add
add
jae
loope
popa
xor
inc
daa
cltd
xlat
stos
jb
and
cmp
push
cmp
push
pop
dec
cwtl
popf
mov
xchg
mov
std
jns
add
push
push
sar
dec
and
leave
and
add
aad
shlb
cmp
bound
or
adc
mov
call
sbb
sub
add
iret
ljmp
push
adc
sub
push
shl
inc
hlt
stc
xchg
mov
jecxz
sbb
inc
mov
inc
int
loopne
notb
test
fidivl
dec
lret
dec
rcll
fldcw
push
outsl
es
jge
enter
add
test
or
cwtl
mov
movl
jg
jmp
mov
mov
and
xchg
jne
add
dec
mov
xchg
push
cmp
push
or
jecxz
and
ficompl
cmp
les
xchg
push
xorb
xor
pop
xor
dec
mov
push
xchg
and
jb
jmp
or
stc
cltd
mov
lea
andl
ret
and
dec
jp
inc
mov
sub
lea
add
rorb
imul
fisttps
cmp
dec
pusha
loope
ficoms
push
sub
mov
cmp
das
jmp
lods
lret
or
jnp
decb
clc
dec
xchg
pop
out
mov
and
jmp
roll
adc
rolb
leave
push
scas
inc
neg
push
dec
mov
std
adc
inc
cmp
repnz
add
mov
cld
pop
jg
ror
push
cwtl
lock
sti
addr16
inc
push
fcompl
ljmp
jl
call
mov
adc
adc
adc
and
and
loopne
and
pop
mov
pop
inc
rep
fs
jl
mov
subb
jge
loope
or
push
pop
test
addb
mov
add
inc
adc
repnz
cmp
testb
xchg
rorb
test
filds
push
mov
lods
fisubs
pop
push
xorl
repnz
dec
adc
jmp
mov
push
inc
push
push
pop
sub
loopne
and
repnz
lds
mov
ret
inc
and
cmp
cli
popf
pop
jbe
and
cmp
add
sbb
adc
into
push
rclb
lods
outsl
or
mov
pusha
or
mov
test
stos
and
mov
jmp
mov
add
mov
leave
pushf
fmulp
xor
xor
pushl
and
xor
add
sbb
test
inc
pop
add
mov
push
dec
push
xor
pushf
sub
and
loop
hlt
or
add
fs
nop
sub
fsub
in
pop
mov
frstors
or
pop
popf
test
icebp
fbld
push
sbbb
loopne
stos
hlt
pop
add
add
cs
flds
add
jecxz
inc
add
rcl
in
and
xor
mov
dec
adc
lds
push
lock
shl
shr
mov
dec
xor
pop
and
or
pop
push
and
push
dec
pop
sub
loopne
cmp
jne
cmp
stos
sub
pop
pop
dec
insb
mov
and
pop
fiadds
pop
ret
pop
sahf
ds
push
clc
movsb
rorb
mov
clc
mov
push
xchg
cwtl
loopne
adc
cli
shr
xor
in
or
push
cmpl
adc
or
divl
lret
mov
stc
adc
iret
repnz
push
stos
es
and
pop
pushl
jmp
adc
or
pop
dec
inc
inc
cld
or
fdivs
sahf
out
push
fcoml
daa
ret
push
clc
enter
fsubl
push
sbb
jmp
pop
xor
pop
std
mov
dec
push
aam
push
ja
pop
adc
dec
mov
inc
jno
shlb
adc
pop
adc
cmp
inc
or
cmc
movsb
sub
adcl
cmp
add
sub
loopne
mov
ja
push
data16
fisubs
xchg
jmp
pusha
lds
ret
lock
sbb
xor
or
sarb
or
push
push
pop
sti
jg
shll
push
push
pop
push
je
cmpsl
inc
lret
dec
add
js
popf
push
mov
cmp
das
jmp
push
enter
jp
push
lea
cmp
sbb
jne
das
andb
bound
jge
lock
xor
jmp
lock
insb
ret
or
xchg
clc
ret
xor
pop
or
add
xchg
and
jbe
push
add
scas
nop
inc
iret
test
xchg
test
xchg
dec
xor
arpl
mov
je
cmp
movl
repnz
add
sub
enter
mov
dec
push
in
push
adc
in
sub
add
filds
ffreep
sar
jmp
cmp
adc
cs
je
mov
and
test
test
sub
cmp
ret
xor
inc
jae
add
dec
fwait
adc
mov
adcb
dec
adc
inc
mov
dec
or
sub
mov
imul
push
pop
test
push
xchg
btr
loope
xchg
pop
stos
mov
mov
pop
les
ljmp
cmc
ljmp
xchg
mov
xor
fisttpll
pop
test
je
adc
inc
push
push
push
call
adc
test
adc
clc
mov
dec
cmp
dec
or
push
mov
push
push
sbb
or
fcompp
mov
adc
test
pop
push
or
cmp
repz
push
call
push
or
or
jne
and
int3
or
xchg
stc
or
mov
sub
ret
shr
ss
dec
sarb
fldt
aam
add
mov
jmp
cmp
add
pop
or
adc
dec
or
sti
sub
jo
in
push
inc
xchg
sbb
inc
push
and
daa
sub
test
ds
out
movsbl
and
and
movsl
dec
push
cmpsb
mov
jg
dec
push
idiv
inc
cli
push
fwait
sub
inc
and
mov
sub
sti
pop
out
enter
xchg
or
or
and
loope
mov
sub
push
cld
fs
cmp
sbb
pop
aaa
out
test
les
and
adc
movups
jmp
cltd
mov
nop
xor
jb
je
jbe
add
or
jne
div
mov
je
iret
xor
shll
arpl
push
ja
ret
pop
pop
pop
jbe
dec
in
leave
sub
lds
sub
push
inc
outsl
or
jmp
test
and
jl
mov
lret
insb
fs
and
jbe
mov
hlt
push
mov
cmpl
icebp
leave
push
mov
xor
fwait
dec
cmp
outsb
mov
xchg
in
sbb
les
cmp
xchg
daa
icebp
adc
inc
adc
push
es
sbb
jmp
fnstcw
xor
sbb
sbb
and
adc
dec
mov
mov
leave
inc
push
mov
fstpt
rclb
cld
jne
and
jo
pop
and
mov
pop
popa
jl
or
add
pusha
int
jne
ljmp
push
add
mov
pusha
xchg
clc
outsb
pop
clc
lods
and
pop
xchg
xchg
dec
ljmp
push
mov
mov
call
and
mov
jns
repnz
fldenv
sbb
pop
inc
add
dec
pop
clc
lcall
xlat
clc
sbb
je
test
add
cmp
jne
inc
inc
dec
negb
cmp
xlat
inc
orl
push
sahf
adc
clc
inc
cmp
jnp
jecxz
ret
xchg
aad
cld
subl
cmpsl
mov
int
iret
cmp
es
out
aaa
jle,pn
ljmp
rcrb
dec
pop
fwait
ljmp
sbb
mov
orl
popf
enter
fchs
push
adc
cmp
push
cmp
push
dec
test
cmp
mov
lea
test
cld
call
enter
fwait
cmp
lret
add
shr
sbb
nop
push
orl
add
add
xor
xor
mov
ljmp
and
popl
cmp
cmp
xor
push
or
push
cmp
inc
imul
pop
mov
cmp
push
jne
push
ljmp
mov
fs
iret
enter
mov
inc
mov
sbb
or
jne
shr
xor
push
aas
push
loopne
mov
and
push
dec
add
addl
jmp
jae
ja
daa
out
or
xchg
jb
push
test
lret
add
imul
dec
movsb
inc
push
mov
jmp
cmp
test
inc
mov
adc
and
add
dec
jg
jne
adc
test
and
clc
pop
or
movsb
dec
dec
inc
ja
mov
jle
daa
dec
notb
adc
hlt
and
jmp
xor
andb
sarl
notl
add
mov
fwait
mov
imul
pop
clc
popa
dec
mov
loopne
xchg
mov
mov
out
mov
out
imul
pop
xorl
repnz
test
inc
xor
and
daa
pop
jae
sub
cmp
shl
das
jne
xlat
movsb
adc
add
clc
mov
jmp
or
cmp
pop
or
cmp
lock
pop
xor
cld
and
mov
cmp
rcr
adc
clc
nop
shll
int3
gs
mov
mov
out
and
pop
jnp
push
outsb
sbb
popf
mov
add
enter
rcrb
cmp
xor
or
pop
insb
adc
les
dec
add
shrb
pusha
popf
ja
aad
call
or
invd
inc
mov
dec
add
pushf
adc
and
fs
nop
mov
cmp
adc
xor
push
cmp
sub
addps
mov
movsl
add
cmp
sbb
push
push
and
adcb
cld
cmp
aas
jb
sub
cwtl
pop
sub
sti
push
lods
add
pop
push
test
inc
lds
adc
sbb
test
pop
cwtl
jae
jnp
dec
xchg
mov
sub
jae
jb
arpl
push
movsb
int
gs
sti
gs
add
push
fldt
and
sbb
loopne
adc
or
out
andb
inc
enter
mov
push
xchg
rolb
mov
mov
je
dec
mov
popa
mov
inc
jmp
adc
push
pop
jmp
or
adc
push
lea
add
lds
fidivl
push
daa
sub
into
mov
cmp
js
jmp
adc
cltd
and
pop
mov
inc
xorb
cmp
and
push
mov
dec
dec
adc
xchg
nop/reserved
popa
inc
sub
dec
lock
jp
or
sub
ret
ret
test
pop
sub
ret
and
and
jmp
inc
std
imul
dec
flds
push
inc
mov
in
repnz
xor
scas
fs
mov
cmpsb
mov
insb
sbb
ja
cmp
rorl
cmp
push
jecxz
adcl
add
mov
lods
lock
mov
out
sbb
push
push
adc
loope
mov
push
cmp
insl
lds
cld
movl
jmp
test
add
sbb
sbb
push
test
and
imul
push
cmp
mov
pop
push
sbb
inc
orl
ja
mov
gs
adc
aam
push
xor
loope
or
sbb
add
push
and
call
adc
mulb
pop
inc
dec
ds
aaa
mov
leave
frstor
pushf
mov
mov
pusha
gs
int
dec
or
xor
movsb
and
mov
push
das
mov
rolb
push
je
push
aam
add
jecxz
push
fistpll
xchg
push
mov
mov
outsb
or
sbbb
xchg
dec
sti
lods
fiaddl
jle
imul
stc
push
mov
push
aam
inc
add
lcall
sbb
mov
test
and
imul
popf
inc
jmp
and
jne
test
movl
pushl
call
mov
mov
shll
jmp
test
cmp
ret
jmp
call
in
adc
dec
lea
dec
push
cmpl
movl
xor
and
or
fstpt
sbb
xor
mov
xchg
jecxz
js
jmp
lret
clc
dec
rcll
jmp
jge
push
movsl
pop
mov
pop
movsl
xchg
jns
or
lock
in
jne
lods
xchg
and
inc
mov
sub
arpl
mov
leave
push
mov
dec
and
or
mov
dec
call
and
cwtl
outsb
cmpsb
in
and
sti
xlat
insb
jno
mov
push
andl
js
pop
mov
or
and
lret
sbb
lea
adc
cmp
jae
xor
sbb
cli
xor
pop
orl
cs
imul
mov
push
inc
lahf
ret
mov
rcrl
cld
add
jnp
aas
out
movsbl
jp,pt
imul
inc
fisttpll
in
mov
orb
xor
clc
jne
out
stc
mov
pop
sbb
iret
jbe
add
dec
cmp
or
mov
and
pop
mov
adc
lea
testl
inc
decb
jne
sub
pusha
cmp
and
rcll
push
mov
mov
dec
push
adc
frstor
mov
sbb
sbb
pop
lea
sar
dec
jo
aas
sar
xchg
pusha
or
jne
push
hlt
and
clc
dec
pop
sub
lret
jbe
push
hlt
jmp
test
sti
addl
add
mov
pop
imull
push
mov
mov
and
adc
inc
mov
mov
int3
rcll
out
lock
dec
inc
or
in
or
aam
push
sub
or
dec
insl
popa
push
out
test
push
pop
jne
mov
lock
mov
std
mov
jae
and
push
mov
iret
shr
out
or
scas
push
sub
out
sub
loopne
sbb
es
add
and
movsl
test
mov
push
push
inc
lock
inc
pop
adc
pusha
or
cli
adc
cmpsl
and
or
cmp
shl
add
jecxz
add
and
push
xor
test
cmp
adc
pop
int3
and
in
inc
movsb
or
in
cmpb
nop
pop
pusha
add
stos
adc
js
add
insb
mov
mov
adc
popf
in
adc
mov
nop
xchg
mov
sub
jmp
adc
loopne
sub
xchg
adc
jle
xchg
or
and
les
add
xchg
mov
dec
jmp
lret
sbb
mov
lock
xor
rcll
cmp
das
ss
les
and
out
imul
aas
jge
test
call
out
in
outsb
lock
pop
inc
lods
not
call
mov
cmp
addl
and
iret
jbe
or
adc
or
xor
out
jne
mov
fsubs
add
xchg
pop
dec
aas
jae
jnp,pn
cmp
jmp
mov
or
adc
call
clc
test
inc
je
push
sti
fidivl
pop
pop
mov
inc
subb
movntps
mov
cs
mov
pop
push
mov
push
inc
mov
jo
push
orb
push
fs
dec
rorl
mov
xchg
test
lock
cmp
cmp
push
xlat
je
sub
test
xor
fstps
pop
mov
ja
mov
into
jne
addr16
push
lret
add
leave
jl
shl
inc
sbb
testl
xor
jl
cli
dec
je
sub
jle
xchg
pop
incb
add
and
sub
push
cmp
popf
test
pop
in
and
jl
adc
jne
cmc
mov
or
xor
adc
adc
and
push
outsl
mov
xchg
and
rcrl
xchg
es
scas
or
adc
or
xor
lret
ret
enter
and
push
or
adc
sbb
and
mov
lea
or
or
nop
mov
jmp
sub
lea
mov
or
mov
mov
mov
test
mov
pop
add
cld
dec
js
xor
mov
adc
cld
mov
lea
and
les
cmp
mov
adc
cltd
insb
andl
xor
or
inc
shrl
xor
mov
jae
rcll
daa
push
out
test
je
mov
xor
add
push
dec
mov
inc
xor
xor
fwait
in
pop
push
adc
loope
and
insb
jbe
adc
or
std
xchg
mov
xor
mov
jecxz
mov
lods
arpl
and
loopne
std
jno
leave
inc
repnz
dec
push
adc
inc
es
cmp
imul
xor
xchg
add
pushf
shr
xchg
pop
push
sti
xchg
pop
out
push
jns
push
or
xchg
lea
pusha
jo
cmp
ja
hlt
inc
lret
lock
push
repz
jbe
movl
push
out
add
dec
add
subb
adc
sub
mov
test
or
call
dec
popf
add
adc
inc
popf
xchg
inc
int
xor
pop
sarb
dec
add
or
sub
mov
shr
sub
push
push
or
cmp
adc
lea
sub
adc
pop
out
lods
ljmp
dec
cld
dec
cmp
inc
sub
cmp
mov
add
jle
ret
jl
test
add
cmp
pop
loop
pop
pop
lods
icebp
xchg
aas
inc
mov
orl
adc
dec
dec
dec
cmp
push
push
dec
clc
and
rorl
cmp
mov
daa
pushf
nop
push
aas
inc
pop
dec
in
xchg
cmpsl
mov
gs
jg
xorl
sub
add
cli
xchg
xchg
mov
mov
sub
lret
idivl
sbb
jecxz
int3
pop
stos
inc
insl
adc
jno
mov
or
cwtl
cmp
jne
pushf
dec
push
adc
sbb
dec
out
mov
jmp
jo
lds
test
mov
or
rcrl
cld
js
gs
xor
xchg
and
inc
lahf
int
and
inc
ret
outsb
inc
or
or
mov
movsb
dec
lds
xor
jmp
fadd
pop
testb
mov
jno
cmp
sbb
and
or
mov
ja
add
lea
jp
push
jne
iret
les
push
xchg
ja
push
out
jp
ja
jno
or
mov
or
jp
out
adc
dec
fnstsw
jno
out
cmp
mov
adc
mov
cmp
inc
bound
into
mov
inc
dec
mov
flds
enter
add
add
mov
test
sub
push
fldl
lods
das
cwtl
or
out
rorl
setbe
add
pop
ret
fstl
adc
pop
jno
fdivrl
pop
fisubl
ljmp
call
movsl
and
or
push
push
push
fs
stos
sarb
or
sbb
or
add
fsubrs
je
enter
fwait
les
jae
adc
add
sub
int3
push
push
xchg
mov
cwtl
and
xchg
stos
sbb
and
xor
or
shlb
or
pop
sbb
pop
add
add
and
sub
dec
movsb
sub
inc
mov
enter
sbb
shlb
add
lret
and
shl
cs
mov
data16
jl
shlb
pop
testl
clc
shr
add
iret
and
pop
add
pop
call
test
je
test
orl
adc
sti
inc
popl
sti
es
xor
repnz
incb
mov
mov
rcrl
cmp
pop
push
or
mov
sub
inc
andl
stos
mov
fmul
sub
or
pop
lret
mov
and
or
xchg
add
cltd
and
and
jecxz
sbb
out
leave
add
or
or
or
insb
inc
pslld
inc
ret
add
outsl
cli
mov
sbb
jecxz
sbb
sbb
daa
xchg
pop
adc
and
inc
pop
out
xor
inc
push
adc
pop
or
and
push
jecxz
dec
mov
jb
add
andl
mov
inc
add
testl
sbb
repz
fs
jmp
push
jbe
pop
jne
addb
or
sbb
shl
in
int
add
test
notl
push
fnstsw
or
sarl
pop
inc
xor
nopl
mov
jmp
dec
and
dec
add
sbb
fldl
movsl
pop
push
gs
cmp
push
hlt
or
mov
add
adc
pop
inc
stos
rcpps
pop
mov
movsl
test
jmp
fcoms
loope
adc
call
jmp
psrld
cmc
stos
cmpsl
cmp
jno
dec
push
push
dec
or
mov
daa
and
pop
in
and
adc
bound
xor
fldl
adc
sbb
add
je
pop
ja
fstps
pop
hlt
xchg
outsb
xchg
and
xor
dec
jmp
dec
sub
les
dec
xor
push
jo
dec
push
in
sbb
cwtl
test
add
test
fcmove
xor
les
popa
data16
push
fstl
xchg
jno
inc
push
and
cmp
scas
fmuls
or
pop
lea
add
or
or
sti
or
pop
or
mov
jmp
push
inc
test
clc
ss
add
cmovne
jle
daa
hlt
jnp
xchg
mov
sub
sub
test
ds
adc
sbbl
clc
lock
dec
cwtl
add
sbb
jne
mov
sub
or
pusha
pop
xor
sahf
ds
into
and
xchg
adc
dec
mov
or
ret
inc
out
cld
lea
lcall
rcrb
xchg
outsb
jge
testb
arpl
sub
mov
and
adc
outsb
xchg
lock
sbb
mov
and
mov
sbb
mov
movsb
mov
pop
test
cmp
call
repnz
inc
xor
pop
scas
int
jle
mov
mov
fisubrs
xchg
ret
lret
push
jnp
xor
mov
adc
inc
movsb
je
mov
inc
dec
cmp
mov
je
cmp
xchg
das
jnp
push
jmp
jne
sahf
adc
push
push
aas
inc
xor
push
icebp
repz
add
mov
daa
adc
push
cld
ljmp
mov
push
lds
add
loopne
jo
add
rorb
pop
sub
cmpl
dec
cmc
or
adc
jmp
jne
sub
mov
imul
in
pop
movsb
stc
imul
pop
mov
sub
pop
and
pop
je
add
pop
pop
in
shll
sub
push
ljmp
nop
orl
cwtd
je
andl
test
push
scas
xor
cltd
outsl
jae
cmpsl
dec
xor
pop
adc
shll
adc
dec
addb
adcl
add
or
jmp
mov
push
pop
out
adc
pop
push
in
jecxz
into
xchg
incb
jmp
push
mov
xchg
in
push
incb
and
movswl
sub
inc
sbb
jge
xor
sub
cwtl
sbb
loop
comiss
mov
sbb
enter
jne
dec
pop
or
les
in
jnp
in
adc
mov
pop
daa
fwait
daa
or
adc
cmp
sbb
xchg
inc
cmpsb
jno
psubsb
icebp
in
fcomps
jmp
and
push
fadds
and
cwtl
sbb
inc
cmp
adc
enter
jne
dec
push
insl
sbb
call
or
inc
mov
xchg
push
push
cwtl
push
lcall
ret
pop
testb
lahf
pshufw
pop
cmp
ret
jmp
and
lret
pop
in
push
gs
je
sub
push
jne
xor
cld
mov
push
push
lods
mov
push
aad
mov
add
call
mov
stc
cmc
out
std
sarl
pop
aaa
aaa
cmc
adc
push
or
lret
or
add
hlt
cli
sub
fnstenv
inc
jp
sub
cmp
movsb
ret
adc
rorb
push
mov
jmp
mov
ljmp
out
sbb
add
inc
orl
stos
adc
adc
rorl
sbbb
int3
and
pop
daa
push
or
ficompl
inc
les
int3
fisttpl
sbb
cmp
jns
add
jl
call
cmp
fs
jbe
mov
pop
push
bnd
adc
add
sbb
mov
shl
lret
fincstp
fwait
or
gs
inc
cmp
dec
adc
and
mov
xor
ss
jo
push
or
enter
and
xchg
fwait
xor
pop
es
add
es
inc
daa
cmp
pop
add
jns
xor
fldt
sub
and
mov
pop
testl
push
sti
fisubl
das
or
push
aad
sub
sub
add
xchg
mov
add
xor
lahf
inc
dec
or
or
fiaddl
xor
insb
sub
imul
push
or
inc
add
ret
and
lds
xlat
inc
mov
add
jne
movb
jge
movsl
dec
fcoms
adc
adc
mov
pop
xor
rcll
clc
and
inc
mov
inc
sbb
icebp
sbb
add
out
test
add
popf
or
xchg
cmpsb
push
pop
inc
dec
fsubrl
les
test
leave
pop
das
out
pop
mov
jl
jge
mov
inc
ret
dec
mov
push
dec
push
decb
mov
jmp
mov
push
call
push
daa
add
pushf
rorl
add
add
mov
add
jge
imul
cld
xor
jbe
daa
push
pop
and
inc
stos
xor
adc
fs
testl
into
dec
cmpsb
hlt
enter
and
daa
or
notl
imul
vcvtss2si
ja
or
pusha
inc
xor
or
data16
adc
stos
bound
sbb
in
aaa
in
sbb
push
loop
jmp
cmpsl
adc
adc
popf
jnp
mov
xchg
pop
iret
pop
pop
mov
add
push
push
and
pop
pop
ja
xchg
sbb
mov
cmp
jo
call
movl
fildl
les
imul
push
add
outsl
push
ds
push
cmpl
xchg
loopne
js
addb
andb
and
stos
xchg
repnz
jg
push
pop
shlb
je
jmp
movsb
sbb
push
and
pop
call
and
sbb
or
jmp
xor
pop
ljmpw
sbb
inc
add
stos
push
jecxz
and
loopne
mov
push
push
jne
jle
rclb
xchg
mov
mov
push
adc
sbb
adc
mov
call
aaa
push
add
cmp
outsl
xchg
fcmovnu
adc
push
inc
enter
jbe
inc
call
jecxz
sbb
cmpsb
lds
das
mov
jg
jg
setle
jl
jnp
lods
ja
test
pop
rol
iret
adc
hlt
jle
cld
and
pusha
xchg
add
adc
clc
jle
sub
daa
aaa
inc
fldenv
cmp
mov
clc
mov
sbb
loope
hlt
mull
lock
ret
ret
pop
pop
roll
push
xor
push
adc
mov
ret
adc
imul
or
or
call
dec
addl
les
insl
inc
pop
cmpsl
jmp
aad
or
cmp
jp
mov
sbb
cmpsb
adc
mov
push
repnz
add
lock
jl,pt
cltd
xchg
inc
and
sbb
add
hlt
push
mov
cmp
sub
mov
add
imul
ret
lcall
jmp
aam
fnsave
mov
scas
dec
cmpb
lea
loop
imul
pop
lret
mov
or
pushf
int
xor
and
sub
add
cmp
dec
add
or
out
xor
in
not
jecxz
dec
mov
repnz
aam
pushf
jae
xchg
jne
jmp
sub
cmpl
xchg
int
jecxz
push
gs
test
and
xsha256
cmpsb
pop
pop
pop
mov
jb
jle
imul
adc
iret
jecxz
push
lock
jne
xlat
mov
sub
jo
cmpsl
or
jno
push
dec
add
rorb
and
sbb
inc
push
add
popf
fistps
adc
xchg
dec
add
push
mov
dec
xchg
add
call
mov
or
outsl
push
call
inc
add
ljmp
xchg
jae
or
adc
pop
sbb
xor
xchg
dec
test
mov
xor
iret
fsubrl
dec
xchg
dec
decb
es
adc
mov
aam
adc
test
mov
dec
push
dec
mov
call
xchg
sub
sub
cs
ret
test
es
out
ret
mov
addr16
mov
inc
jle
aas
sub
andb
jg
cmp
sti
mov
in
mov
out
or
aam
push
call
out
icebp
pushf
xor
subl
aas
insl
adc
imul
daa
sub
dec
pusha
gs
push
pop
sub
cmp
scas
and
mov
xchg
adc
outsl
sub
pusha
cmpsl
and
jl
movsb
enter
xor
inc
popf
push
xchg
sub
mov
mov
xor
adc
sub
in
movsl
loope
adc
sub
xchg
cmpsb
ror
jmp
xor
xor
dec
jae
inc
push
jo
mov
shlb
dec
daa
sub
adc
pop
lea
testl
mov
xchg
cmp
push
push
add
call
mov
cmpsb
adc
jle
adc
cmp
inc
push
or
jmp
sub
and
int3
lea
sbb
xchg
add
sbb
or
adc
scas
add
pop
mov
cltd
mov
les
push
add
test
and
movsl
pop
ljmp
push
xor
stc
cmp
or
jno
adc
adc
lcall
sbb
setne
movsb
addr16
mov
xchg
add
test
jl
or
and
or
mov
sub
and
push
scas
mov
sti
push
xchg
mov
arpl
mov
sub
pop
jmp
stc
adc
jne
sub
adc
push
pop
test
push
or
and
nop
xchg
inc
popa
pop
push
test
shr
pop
xchg
mov
xor
jmp
cwtl
xchg
push
popa
mov
inc
or
fs
xchg
popa
sbbb
andb
pop
test
test
sub
add
adc
lods
fisttpl
sbb
mov
xchg
inc
xor
cmp
add
test
jne
cmp
je
adc
adc
push
push
call
shl
cmpsb
popf
notl
sub
loope
fistps
imul
add
adc
pop
push
ljmp
incl
lret
sar
lock
cmc
xor
inc
dec
lahf
in
enter
mov
mov
push
ljmp
mov
pop
mov
adc
ret
pop
or
pop
push
add
shr
jmp
and
and
jge
adc
fsubrl
mov
sbbl
add
mov
cmc
int3
in
or
fs
aas
rolb
adc
push
in
jl
sti
and
or
push
sti
psraw
sarb
sub
and
leave
lock
mov
xchg
out
filds
orl
test
enter
loopne
in
cld
fdivl
jmp
sub
cmp
add
pop
stos
pop
dec
pop
int
sbb
arpl
jmp
xchg
inc
arpl
lret
sbbb
xor
sub
sti
sub
sub
inc
cmc
hlt
in
mov
ds
neg
pop
ja
movsb
ffreep
das
mov
es
inc
inc
adc
mov
lock
add
mov
lock
test
adc
inc
cmp
cmp
mov
cmp
push
mov
sub
mov
adc
or
mov
ss
push
jg
xor
push
inc
jecxz
push
leave
js
jmp
sarb
lock
ror
call
cmp
jg
mov
in
push
pushw
das
cmp
and
bound
or
mov
sub
push
loop
mov
adc
xor
cld
test
add
rcrb
daa
cld
xor
adc
push
or
xchg
adc
aas
aad
xor
pushf
in
and
xor
mov
add
or
mov
popa
fmull
outsl
sar
dec
jno
xchg
inc
aam
test
imul
sbb
and
roll
or
mov
push
lret
pushf
ss
xor
and
push
cmp
rcll
nop
js
xchg
push
mov
mulb
int3
aaa
mov
cmpsl
aam
or
cmc
jno
mov
sub
adc
insb
aad
aam
dec
and
jmp
mov
outsb
mov
out
test
dec
jle
clc
jmp
or
mov
cwtl
add
mov
mov
adc
shr
xchg
jno
adc
mov
mov
stc
dec
cli
mov
mov
pushf
push
out
inc
mov
nop
adc
sti
test
push
dec
int3
ret
xchg
lock
arpl
and
mov
cmpl
cmc
je
pop
es
sbb
jp
add
sub
xchg
and
test
xchg
pop
inc
mov
or
cvtpi2ps
and
dec
or
test
dec
imul
add
icebp
inc
pop
je
bound
cltd
sub
leave
inc
insl
enter
jmp
cmp
enter
mov
xor
loope
dec
sub
dec
jmp
jo
test
push
and
jl
adc
pop
mov
xabort
adc
add
scas
movsl
repz
add
and
or
inc
ret
add
xor
add
dec
and
shlb
fldl
ret
add
imul
or
add
cmp
xor
xor
inc
dec
adc
call
rclb
jmp
mov
jl
mov
repnz
and
cmp
sub
sbb
je
in
jg
jl
test
outsb
jno
push
in
cmp
jmp
push
jne
and
mov
imul
or
or
jne
in
imul
jmp
popa
bound
and
shlb
cltd
push
push
push
xchg
test
rcrl
jns
xor
xor
rorb
hlt
sti
cmp
pop
data16
clc
and
sbb
jmp
mov
push
cmpb
pop
xorb
fdivrp
cmc
or
movb
xor
cltd
pop
fdivrs
push
adc
test
cmp
cmpsl
fcom
test
sub
or
mov
lar
xchg
and
add
mov
hlt
xor
sub
in
mov
push
or
or
xchg
xchg
fwait
in
adc
imul
xor
in
test
imul
clc
lea
ficomps
add
enter
xor
lea
push
stos
xor
mov
push
dec
sub
adc
aaa
clc
call
lods
add
je
mov
bound
pop
cli
mov
or
in
push
inc
addl
test
sbb
mov
add
js
adc
scas
xorb
cltd
call
mov
inc
mov
rclb
pop
jle
mov
or
or
lods
push
mov
and
mov
or
fisttpll
jb
xor
insl
adc
test
jne
aaa
aas
adc
loop
pop
roll
push
push
or
inc
cmp
mov
pushw
push
xchg
stos
fadds
sub
or
dec
pushf
int
sbb
ja
mov
pop
mov
inc
jmp
enter
xadd
loop
aas
inc
mov
sbbb
pop
gs
leave
bound
pop
add
mov
xchg
jbe
inc
push
mov
out
mov
mov
xchg
sbb
or
out
dec
into
dec
add
imul
dec
fadd
pop
cmp
and
aaa
push
inc
cmp
jl
xchg
adc
or
and
sbb
add
fcoml
mov
mov
adc
sub
inc
or
or
andb
mov
jmp
jne
xor
sbb
mov
or
cs
xorb
add
mov
xor
push
xlat
add
jle
inc
call
xchg
lea
imul
add
loop
fldl
arpl
loopne
sbb
das
or
les
in
enter
adc
dec
sbb
or
and
add
adcb
addb
dec
sub
sbb
inc
ret
cli
pop
dec
jge
movsb
xor
leave
in
xor
push
js
das
test
cmc
dec
scas
push
stc
fs
loop
sub
mov
jo
xor
wbinvd
add
rcrb
pop
ss
inc
xor
sbb
pop
jg
movsb
cld
push
and
and
insb
push
adc
mov
aaa
stc
or
push
adc
xchg
out
subb
push
or
or
call
icebp
and
or
ret
in
inc
loopne
mov
push
shlb
mov
dec
inc
adc
cmp
xor
sub
pop
inc
pop
lea
add
fs
push
sub
cmc
inc
cmpsb
push
or
dec
jne
pushf
enter
cmpxchg
insb
sub
add
mov
jl
jne
cs
mov
daa
cmp
mov
pop
push
insb
aaa
pop
ja
popa
sub
jmp
mov
push
out
clts
scas
dec
adc
cmpb
push
adc
adc
inc
ljmp
mov
pmaxub
adc
aam
ljmp
popa
jl
mov
aam
js
jmp
in
cmp
in
xor
outsb
add
sub
arpl
jnp
ucomiss
jmp
mov
dec
inc
or
out
in
sbb
scas
in
imul
loopne
sub
hlt
orb
outsl
ret
fucom
repz
add
sub
inc
fs
clc
add
sub
jle
or
push
jecxz
or
mov
jo
adc
fs
cwtl
dec
or
sti
sub
test
add
jp
ret
mov
cltd
mov
jne
mov
or
popa
sub
xor
cmpsl
or
std
fadds
xchg
jbe
movsb
leave
sbb
das
pop
mov
hlt
pop
popf
xchg
jle
add
out
cmp
push
push
call
repnz
xor
and
insb
test
pop
shll
pop
jo
push
mov
jne
sub
pop
and
or
push
inc
sub
outsb
inc
xor
add
arpl
mov
rclb
int
cmp
push
push
gs
cmp
ret
push
sub
xchg
inc
bound
push
mov
sub
lods
xchg
cvtps2pi
sahf
xor
insb
cmpsl
lea
mov
inc
cwtl
xor
test
testb
adc
es
incb
push
movsbl
aam
test
nop
push
xchg
sub
sub
push
jne
ljmp
js
xchg
mov
jle
cmpsb
ljmp
or
mov
addl
fwait
add
lret
adc
ret
xchg
cmpsb
adc
je
xlat
aas
cmp
test
popa
mov
add
xchg
es
mov
repnz
or
aas
pop
dec
cmpsl
loope
cld
or
cltd
sbb
xor
pop
in
push
or
inc
loopne
icebp
push
add
adc
push
sti
xor
movl
je
adc
sub
in
divb
adc
jmp
push
cmp
mov
or
jmp
or
mov
iret
inc
adc
call
pushf
pop
and
popf
jge
jnp
sbb
cmp
or
and
lret
pop
scas
pop
das
pop
inc
pop
or
ja
jo
sti
scas
xor
ss
cmp
shll
or
jmp
ret
loopne
ja
nop
xor
push
lock
inc
cmp
and
in
add
jne
xor
jmp
addl
pop
sbb
fwait
in
dec
cltd
add
adc
mov
out
sbb
ret
add
in
dec
push
cltd
inc
dec
push
nop
test
cmp
add
enter
lret
pop
add
sbb
stc
add
add
xor
test
je
pusha
iret
xchg
or
ljmp
inc
enter
cmpsl
gs
leave
idiv
adc
ret
inc
xor
cwtl
adc
mov
sahf
aam
fs
jb
or
dec
shrl
add
cmp
mov
add
jb
xchg
andl
cmpsb
pusha
mov
mov
lret
push
dec
mov
add
leave
cmp
cs
dec
add
icebp
jmp
adc
lret
test
xchg
add
mov
pop
push
push
jg
adc
fmul
push
faddl
pop
call
mov
add
in
adc
lock
jne
cmpl
adc
xor
fsubr
inc
mov
inc
adc
enter
in
add
in
ss
jmp
cmp
inc
in
jmp
mov
sbb
aaa
scas
xchg
pop
sbb
jo
xchg
cmove
or
cmp
mov
cmc
push
mov
or
insb
shl
add
aas
lea
shl
mov
lahf
cmc
jbe
je
push
insb
lock
and
test
or
lock
add
add
add
or
addr16
or
push
cltd
rorb
outsl
and
fcoms
mov
inc
jmp
ds
repz
fdivrp
cmp
repz
pop
xchg
inc
xor
loope
push
ja
add
leave
cmp
sti
pushf
or
adc
sbb
or
enter
lahf
scas
out
ret
jnp
jle
stc
jg
std
maskmovq
imull
inc
and
mov
test
inc
test
adc
pop
rolb
inc
in
cwtl
es
sbb
inc
mov
adc
cmp
stos
and
adc
jbe
jle
mov
mov
hlt
dec
pop
shlb
stos
imul
xor
out
pop
fsubl
ret
lods
jge
decl
js
test
mov
push
call
and
je
xchg
fisubrs
ljmp
call
mov
pop
jge
popa
jno
out
in
mov
cmp
stos
orl
cld
and
out
lea
fists
nop
inc
push
xor
je
test
cmpsb
lahf
pop
cmp
lahf
mov
adc
mov
mov
pop
adc
lds
adc
repz
xor
cmp
cmpsb
fisttpl
andb
in
add
call
jmp
adc
and
sub
jle
pushf
pop
push
pop
xlat
pop
mov
cmp
pushl
xor
mov
or
imul
cli
sbb
push
add
mov
push
xchg
adc
and
mov
ss
inc
or
sbb
gs
sbb
push
jne
inc
cmp
mov
aaa
loope
cmp
call
lock
mov
push
xchg
es
add
jl
pusha
cmp
jne
movsb
cltd
nop
insl
out
and
std
in
pop
mov
std
xchg
jmp
sub
cltd
sub
push
lret
sbb
test
cmp
jle
mov
mov
dec
mov
xchg
fimuls
adc
jne
mov
push
mov
xor
inc
jmp
sbb
xor
adc
and
dec
sub
shl
adc
ljmp
mov
and
dec
xlat
imul
fsubl
xor
or
push
push
out
mov
data16
insb
fucomp
inc
mov
lods
ret
xor
sarb
stc
iret
and
inc
and
mov
pop
and
nop
dec
iret
pop
push
or
cmpl
dec
push
icebp
decb
vmovups
mov
dec
dec
shl
fisubs
loopne
pusha
xlat
lcall
push
enter
int3
mov
aam
dec
and
pop
negl
jb
loope
pusha
or
add
pop
jmp
dec
std
fisttpll
stc
or
pop
mov
lret
pushf
xchg
imul
clc
push
jg
jle
out
sub
or
inc
ss
cwtl
fsubs
lcall
fs
mov
add
mov
and
inc
xlat
inc
jne
fstl
pop
jae
adc
and
or
push
mov
jne
or
or
bound
inc
or
inc
and
cmp
int
jmp
clc
movsl
negl
out
and
jmp
push
into
jnp
inc
jmp
je
xor
sbb
test
ret
push
adc
dec
push
lret
jge
xchg
decl
jl
add
or
out
jbe
outsl
sbb
fiaddl
jg
sub
mov
sub
cmpsb
les
pop
xor
push
jle
mov
int
adc
dec
push
and
ret
in
jmp
mov
push
and
jle
and
pop
out
pop
loop
std
xor
or
dec
repnz
std
je
sbb
push
cmc
lock
mov
cmp
or
jbe
jns
movsb
in
mov
vunpcklps
pop
mov
cmpsl
pop
mov
idivb
cmpsb
cwtl
push
add
movsl
movsb
sbb
cmpsb
iret
mov
xor
hlt
movb
clc
push
dec
adc
add
inc
jo
add
push
bound
ja
sbb
ret
jne
push
repz
pop
clc
insl
mov
xor
clc
movsb
mov
inc
mov
push
cmpsl
or
loop
push
dec
clc
test
or
or
jmp
and
dec
mov
popa
adc
enter
rol
dec
aam
mov
cmp
and
lock
xor
sub
in
sub
lds
sbb
jp
xor
adcl
jmp
or
mov
jae
int3
cmpsl
pop
pop
adc
aad
rorl
sbb
je
inc
xor
mov
pop
orb
xor
add
dec
jne
adcb
sti
mov
pushf
xchg
in
call
mov
js
shlb
jb
les
push
les
in
mov
xchg
stc
aam
out
jl
fcoml
cmc
add
or
push
or
jns
pushf
rcll
enter
inc
loop
out
xchg
push
lock
add
arpl
call
or
lds
pop
test
stos
je
xor
xchg
loope
stc
mov
cld
cld
sub
sub
sub
lcall
pop
adc
loope
xchg
mov
into
rolb
mov
sub
and
sub
enter
mov
push
lea
and
inc
add
jl
or
testb
or
mov
and
add
imul
loope
dec
and
mov
repnz
nop
mov
or
lea
inc
fdivrl
or
imul
test
in
in
cmp
adc
add
shlb
insb
mov
mov
mov
dec
mov
mov
mov
xchg
cmp
inc
jg
cmp
push
push
ljmp
mov
lods
push
sbb
test
mov
pop
sbb
mov
cld
and
pop
popa
adc
adc
in
jg
sahf
je
imul
dec
xor
mov
dec
inc
jmp
test
sub
inc
arpl
xor
pop
call
or
je
fists
adc
enter
dec
fisttps
add
sbbl
add
add
xchg
test
cld
inc
mov
pop
shufps
push
jge
rep
jb
inc
je
out
sbb
inc
je
dec
cmc
dec
repnz
sbb
shlb
testl
or
jle
repnz
cmp
fstpt
push
and
popl
icebp
adc
in
xchg
inc
mov
mov
pop
movsb
adc
icebp
add
adc
mov
fbstp
push
lret
in
push
add
into
or
jmp
lea
push
push
or
push
inc
rcrb
jno
jg
jmp
lcall
and
out
push
lea
das
je
push
push
test
jo
sub
aas
test
pop
int3
mov
scas
xchg
cmpsb
test
sahf
mov
cmp
push
adc
pop
mov
jnp
adc
push
test
mov
sub
xchg
cmp
dec
mov
xchg
jnp
testb
leave
test
xchg
adc
fs
aas
inc
pop
sbb
xorl
xlat
or
fadd
arpl
aad
jnp
mov
add
cmpl
lea
xchg
mov
add
mov
hlt
adc
mov
mov
pop
or
int3
push
add
mov
pop
adc
outsl
ds
orw
adc
ficomps
xor
in
add
and
data16
out
je
jo
call
or
inc
adc
hlt
pop
es
fildl
mov
pop
cmp
in
sub
push
cmp
cmp
adc
adc
mov
cmp
je
jb
jne
inc
cmp
lahf
je
fs
and
push
push
loopne
mov
cmpb
mov
jo
fs
mov
fs
out
adc
mov
mov
movsb
shl
add
decl
cmpsl
cmp
xacquire
pop
mov
adc
out
push
cmpsb
xchg
push
lea
rclb
out
jp
daa
sahf
push
mov
mov
mov
push
cli
cmp
ja
loopne
cld
sbb
nop
mov
jbe
inc
sbb
add
jne
jge
jle
cmp
add
rcr
mov
inc
push
mov
movsb
cltd
xor
pushf
and
dec
push
jmp
andl
icebp
mov
pmaddwd
cmpl
inc
adc
push
sti
inc
or
ret
dec
dec
stos
add
cmp
or
dec
bound
jmp
cmp
push
inc
and
pop
aaa
cwtl
iret
xchg
ljmp
imul
adc
jne
out
test
and
sub
and
aad
call
int3
jg
mov
or
mov
and
insl
dec
mov
pop
insl
stos
scas
mov
sbb
dec
or
jae
adc
lcall
call
imul
mov
jb
mov
repnz
test
and
aam
ret
popa
popa
mov
pop
or
shll
popa
lahf
mov
and
add
and
push
test
inc
mov
jne
or
push
int
push
ljmp
out
gs
in
das
lock
or
push
pop
out
push
xor
lahf
dec
cli
popf
test
and
push
shrl
pop
icebp
clc
and
pop
push
test
inc
jae
test
mov
sti
adcl
rclb
or
add
and
mov
mov
cmp
jmp
jne
inc
int3
sbb
pop
cwtl
stos
mov
cmp
dec
pop
xchg
popa
jb
or
cltd
cmp
aam
loopne
dec
les
sub
push
cli
and
inc
std
mov
push
pop
imul
aaa
cmp
call
frstor
es
cmp
add
ss
xchg
jne
pop
or
adc
xor
push
push
scas
adc
lret
adc
andb
int3
add
mov
cs
sbb
fldl
inc
rcrl
pop
es
pop
xchg
cmp
aas
xlat
enter
stc
mov
orl
adc
jge
call
mov
jmp
xchg
dec
fcompl
ficomps
xchg
outsb
cli
lods
int3
xchg
sti
js
or
movsb
cmp
pop
hlt
std
pop
lea
or
ret
xchg
mov
ja
adc
pop
pop
pcmpeqw
scas
add
xor
inc
mov
jl
pop
mov
test
test
sub
stos
lods
imul
adc
sti
push
std
clc
faddp
push
cli
fucom
jp
and
adc
sbb
shlb
in
or
inc
jmp
jge
nop
mov
or
xchg
sbb
ret
inc
or
add
push
xor
push
adc
ret
add
shl
jns
xchg
jecxz
lods
loop
dec
adc
nop
rorb
inc
fs
out
xchg
xor
mov
ret
test
cld
or
dec
pushf
mov
stos
or
jecxz
rolb
xlat
daa
ret
pop
sti
dec
addr16
test
add
jbe
sub
push
sub
jne
mov
adc
adc
pusha
cmp
mov
xchg
sub
or
or
les
leave
mov
push
or
sub
out
adc
adc
rcll
lret
lea
mov
dec
daa
inc
lock
or
jne
bound
cmp
dec
dec
or
jo
cmp
and
xchg
xchg
xchg
push
inc
test
aaa
cmp
and
cmp
adc
and
push
add
or
pop
jmp
sti
lea
push
cmp
xchg
or
pop
pop
cld
es
in
and
adc
adc
push
sub
in
stc
or
nop
aam
jae
cmp
jne
hlt
dec
outsb
pop
or
push
push
fiaddl
adc
lds
add
mov
pop
sarb
cmpsb
in
adc
mov
xor
mov
out
je
ds
inc
or
and
sti
sbb
inc
je
and
aam
out
movsl
imul
jp
mov
mov
xor
cmp
je
adc
cmp
pop
imul
sti
sbb
mov
scas
mov
data16
or
rolb
dec
bound
inc
cmp
je
pop
push
xchg
jne
shrb
inc
cmpb
and
jns
imul
sbb
das
nop
sbb
dec
or
add
xchg
leave
pop
ljmp
pop
sbb
adc
mov
cmp
mov
imul
mov
adc
sub
mov
jge
fdivrs
xchg
mov
mov
out
enter
aad
flds
scas
push
mov
mov
inc
xor
xchg
mov
call
jns
dec
mov
push
popf
sbb
rcrb
jno
andl
jne
jg
mov
shll
adc
dec
fnstcw
add
inc
dec
cli
mov
lods
out
popf
lds
add
jno
mov
mov
inc
inc
movsb
or
xor
into
push
or
push
inc
mov
jmp
adc
inc
mov
inc
sbbl
int
and
shll
and
mov
dec
dec
mov
incl
sahf
leave
adc
push
sub
add
sbb
sbb
ja
add
dec
fadds
inc
or
inc
jne
ja
inc
sub
adc
xchg
mov
sbb
and
ret
add
or
or
xor
repz
shr
mov
dec
mov
push
push
inc
mov
push
mov
adc
outsb
addl
aas
mov
imulb
lret
jecxz
push
and
and
inc
jns
mov
add
jmp
xor
ljmp
andl
scas
push
fwait
stc
jle
dec
or
adc
out
push
add
xchg
dec
test
je
lods
pop
inc
lea
adc
mov
xor
and
jmp
adcl
push
ret
cmp
je
in
mov
adc
jne
movsb
pop
adc
sub
stos
mov
sbb
pop
or
call
add
cmp
je
pusha
xor
sbb
push
push
int
imul
cmpsb
push
inc
enter
imul
int3
adc
sub
and
xchg
test
popa
test
cld
or
clc
push
jl
into
fisttps
std
notb
adc
mov
jp
jl
push
adc
scas
mov
je
in
inc
jp
mov
imulb
call
sub
xor
clc
dec
scas
mov
push
ret
dec
and
and
adcl
cmp
lock
sbbb
mov
inc
adc
or
ljmp
loop
cwtl
dec
xchg
or
sub
jp
push
mov
fnstsw
mov
sbb
jl,pn
out
cmp
and
push
mov
les
inc
add
andl
pop
lea
rorl
sbb
inc
daa
mov
push
das
sub
inc
dec
adc
adc
xchg
jle
jle
jb
cs
das
cli
sub
or
jne
push
cmpsb
xor
gs
call
popf
out
inc
or
sti
push
inc
inc
add
cmp
jl
xor
in
cmp
fdivr
lea
jne
test
and
add
xorl
dec
mov
mov
and
pop
push
addr16
stos
and
or
orb
cmpl
or
fimuls
add
mov
stos
xchg
mov
pop
push
inc
xor
pop
dec
jge
adc
or
xchg
cld
mov
testl
xor
and
inc
and
jnp
je
popa
lea
add
push
inc
push
push
loopne
adc
arpl
pop
sub
js
dec
aad
sub
push
fisubl
cmp
xor
pop
cld
lods
sbb
stc
and
mov
sbb
xor
jmp
imul
pop
adc
enter
pop
das
mov
mov
inc
xor
or
mov
ret
mov
test
enter
xchg
imul
push
sbb
mov
pop
mov
imul
pop
and
cmc
jg
mov
fdivrs
je
gs
push
test
mov
push
xchg
sbb
sbb
ret
push
fwait
call
and
and
icebp
mov
pushf
in
loope
shr
mov
adc
adc
incb
call
or
adc
or
call
pop
int3
adc
jbe
sbb
sbb
push
cmp
add
push
in
cwtl
iret
and
mov
push
and
test
mov
dec
push
stos
mov
dec
scas
arpl
and
fwait
adc
enter
scas
mov
sub
pop
jmp
mov
push
lods
or
call
ror
in
fnstenv
jne
sbb
adc
push
test
or
jb
sub
sbb
pop
pop
sahf
stos
gs
mov
push
and
out
nop
mov
pushf
es
test
mov
push
mov
loop
movsb
xor
js
or
not
and
or
lahf
adc
out
mov
jbe
je
js
mov
mov
dec
lods
js
loop
out
inc
dec
xchg
cmp
imul
mov
push
je
push
pop
adc
sbb
fimuls
loopne
adc
add
dec
add
js
popf
mov
lret
in
or
mov
mov
mov
les
scas
enter
loop
mov
jmp
pop
je
push
add
pop
andb
jne
fisttps
shrb
test
push
pop
pop
mov
pop
jnp
pop
inc
mov
cwtl
fbld
inc
adc
mov
idiv
dec
lea
mov
mov
sti
aaa
mov
pop
ror
xor
or
out
xchg
pop
stos
sbb
dec
push
add
or
mov
xor
inc
xor
repnz
pop
cli
lock
pop
adc
sub
adcl
add
inc
loopne
add
adc
jnp
cmp
xchg
push
sbb
cmc
mov
jl
mov
xor
js
xchg
out
orl
cmp
sbb
pop
pop
push
sub
add
call
or
and
adc
mov
mov
aas
dec
out
icebp
sub
inc
jge
dec
icebp
adc
lahf
pop
add
xor
adc
pop
mov
sahf
in
adc
into
inc
mov
inc
mov
div
les
clc
inc
mov
xor
cmpsb
mov
je
push
and
cmp
aam
or
enter
fimull
sbb
xchg
mov
add
fistl
mov
xchg
push
dec
ffree
sub
test
pop
fs
and
je
test
inc
iret
inc
ret
or
adc
mov
iret
jne
adc
movsb
cs
out
fcmovb
lods
mov
enter
mov
call
pop
movsb
into
lret
mov
inc
dec
scas
adc
out
sbb
cwtl
hlt
push
add
neg
add
jl
pop
ret
add
adc
cmpsl
add
dec
aad
clc
jns
popf
jno
sbb
pop
dec
or
adcb
int3
jle
push
or
or
mov
and
jmp
aas
push
and
sti
add
std
das
jmp
hlt
xor
cld
pop
aas
into
and
stos
lea
mov
and
decb
pop
xchg
add
adc
jle
outsb
mov
inc
ja
dec
and
movsl
pop
inc
subl
inc
clc
mov
out
dec
mov
cwtl
icebp
push
or
test
cmp
fdivrs
sub
push
dec
jo
xor
adc
aam
or
or
inc
and
xchg
pop
push
and
cmp
mov
movsl
pop
push
dec
xor
test
adc
incl
aaa
andl
idivl
add
repz
adc
or
cmp
adc
loop
fs
mov
cmp
xor
dec
inc
in
imul
outsb
cmp
outsl
or
and
jg
xor
jo
imul
adc
sub
xor
insb
dec
and
stos
xchg
cmp
xor
insl
sbb
xor
leave
sub
xchg
shll
jp
cmp
in
push
add
movb
test
jns
adc
mov
push
aas
push
fdivrp
push
xlat
mov
pop
mov
cmc
pusha
testl
aam
xor
adc
cmp
clc
out
jg
addl
jmp
incb
sbb
inc
add
adc
gs
pop
loop
adc
jecxz
mov
pusha
push
pop
popf
dec
loope
pop
cld
xchg
inc
push
xchg
adc
mov
movsl
pop
leavew
call
mov
sbb
inc
fprem
or
mov
cld
or
testb
fcoml
insb
sub
or
mov
enter
shll
and
and
cs
adc
rcr
mov
and
iret
lahf
clc
push
das
je
inc
xchg
mov
mov
and
sub
mov
sub
push
mov
or
jmp
dec
dec
add
shlb
mov
or
outsb
push
loop
jbe
movsb
lret
adc
mov
call
pop
or
lea
push
mov
push
lret
jmp
rcll
or
mov
pusha
add
std
mov
and
push
aad
in
adc
aam
sbb
inc
inc
hlt
in
push
je
xor
push
call
mov
das
mov
js
mov
in
les
repz
iret
shrl
jne
or
lret
sbb
adc
sbb
adc
dec
mov
dec
pop
add
clc
sbb
jb
cwtl
mov
insb
dec
pop
push
test
sbb
and
ret
xor
and
or
adc
pop
daa
jne
fs
pop
jmp
cmp
jge
popf
adc
sbb
fscale
sbb
jge
pop
xchg
xor
es
mov
cmpsl
sbb
fsubs
and
jns
mov
in
cmp
lock
mov
in
lahf
sbb
add
das
push
lock
in
lock
shlb
cmp
aam
es
cmpb
add
xchg
inc
out
add
add
xchg
mov
jo
les
and
xor
pop
ss
rclb
gs
adc
daa
shl
movsb
fstps
test
scas
addr16
fnstenv
xchg
push
sub
aad
imull
and
dec
pop
xchg
sbb
mov
xchg
out
push
push
adc
pop
and
inc
sbb
push
sbb
sbb
xlat
xchg
or
push
and
fstps
pop
iret
cwtl
sub
or
lahf
pop
ficoml
sbb
push
mov
mov
cld
scas
je
arpl
sub
push
sub
das
loope
jnp
das
fcoms
push
inc
cltd
or
jmp
mov
lret
jo
lds
mov
cmpsl
and
or
lret
dec
cmp
pop
xchg
movsl
adc
mov
daa
loop
push
ret
dec
push
sarb
lret
arpl
jl
inc
mov
sbb
mov
mov
lock
push
hlt
cmpb
adc
sbb
or
cmp
pop
xor
add
mov
mov
cmp
stos
adc
inc
mov
je
mov
lds
adc
rcll
movb
sub
jmp
or
push
adc
mov
push
aas
mov
xor
adcl
bound
inc
pop
in
mov
aas
xchg
or
or
test
aas
xor
movsb
cmp
add
aas
add
ds
mov
inc
jp
in
pop
ds
es
adc
add
jg
push
push
xchg
sbbb
push
insb
jnp
test
pop
loope
xchg
jp
movsl
mov
mov
imul
imul
inc
sbb
or
movb
adc
call
dec
call
mov
inc
or
frstor
std
mov
add
je
cmp
jl
lock
jg
hlt
mov
pop
inc
pop
push
inc
test
fs
sub
repz
mov
sub
std
notl
sbb
dec
adc
les
adc
and
adc
and
sarb
fisttps
sub
inc
adc
add
and
enter
mov
pop
adc
inc
int3
fdivs
push
and
mov
push
mov
nop
mov
inc
mov
mov
mov
or
jmp
adc
push
ss
pop
push
add
jecxz
and
pop
gs
and
cmp
sub
adc
sbb
pop
dec
pop
add
push
test
pop
mov
outsl
adc
jge
jmp
imul
bound
push
xchg
sarb
data16
nop
pop
xchg
jmp
inc
jnp
pop
adc
mov
mov
push
add
jl
enter
mov
lret
sub
rcrl
adc
mulb
repnz
sub
push
add
sub
pop
push
mov
jne
xor
mov
popf
shr
adc
cmovb
xor
inc
add
pop
push
add
mov
xchg
mov
cmp
es
sub
cs
or
scas
push
loopne
sarl
inc
insl
out
call
pusha
clc
xor
push
add
hlt
test
pop
and
mull
cmp
push
sbb
push
add
sub
add
test
jmp
pop
push
and
ljmp
sahf
orb
mov
xchg
adc
cmpb
jmp
mov
inc
or
or
dec
addl
add
jge
or
sub
cwtl
cmpsl
pop
mov
jne
sbb
lods
std
lds
xor
push
sub
push
addl
sub
or
add
push
or
popf
shrl
inc
mov
test
inc
dec
lcall
cs
or
lods
dec
dec
jbe
scas
pop
and
add
sub
sbb
adc
sub
daa
cmp
je
xchg
loope
pop
movsl
stos
xor
dec
mov
imul
jl
mov
scas
or
ret
adc
push
jg
cs
adc
push
jb
and
pop
push
pop
xchg
cli
insb
mov
jbe
push
mov
adc
add
lret
mov
push
lods
arpl
dec
sub
xchg
shrb
xor
cmp
jae
into
or
mov
shll
push
rcl
loope
pop
jp
ficoms
xchg
shl
mov
pop
dec
pop
lahf
cmp
xor
add
cs
divb
test
mov
in
sub
adc
mov
adc
imul
jo
imul
ret
inc
adc
fists
and
cld
or
mov
lret
add
mov
mov
repnz
jae
faddl
push
adc
rorb
icebp
clc
idivl
mov
bound
outsl
gs
mov
and
lds
jmp
push
lock
aam
test
enter
or
lcall
adc
inc
jns
adc
jmp
call
fists
mov
xor
push
jae
xchg
addr16
call
test
ss
cmp
jle
pop
call
or
xor
pusha
aaa
hlt
js
into
or
test
sub
sub
pop
mov
xor
pop
lods
add
jle
adc
out
or
jno
or
pop
movsb
adc
cmpl
jmp
lahf
mov
sub
hlt
dec
sbbl
roll
lret
inc
stc
sub
div
notb
add
lods
je
rol
aas
nop
cmp
dec
jns
sub
pop
aas
nop
rcll
je
loopne
lcall
sub
notl
adc
jmp
scas
push
push
test
adcb
data16
je
or
in
xabort
adc
sbb
dec
mov
sub
cld
repz
test
or
cmp
inc
pop
dec
push
mov
sub
adc
adc
push
and
jmp
hlt
and
inc
repnz
mov
std
dec
cs
sbb
aad
add
rorb
or
mov
jmp
inc
scas
ja
cld
and
jnp
mov
adc
and
mov
pop
xor
sub
adc
xor
add
test
outsb
pop
jle
push
dec
aaa
and
add
cs
fs
adc
pop
or
xor
leave
js
popf
hlt
into
test
or
shlb
inc
push
mov
subl
stc
daa
loopne
or
lahf
popa
mov
push
adc
and
push
or
call
cmpsl
arpl
bound
fbld
mov
notl
jmp
push
mov
xchg
enter
hlt
fld
adc
xchg
lret
sub
jne
push
inc
pushf
xchg
push
pop
ret
in
dec
call
push
pushf
inc
or
or
jl
ret
stc
pop
mov
dec
repz
sub
ja
mov
data16
repz
aas
shlb
js
xchg
loop
mov
push
outsb
inc
jp
fisubs
or
out
lahf
mov
fnsave
jmp
outsb
adc
pop
sbb
push
add
xchg
xor
subb
xlat
pop
or
jno
adc
ret
push
fstl
jne
sbb
int
pop
movsb
cwtl
sbb
push
cmc
dec
or
push
pop
std
push
jne
pop
sbb
push
cli
outsl
fidivrl
insl
ljmp
dec
and
or
fcomps
mov
add
inc
lret
and
ds
or
jge
inc
ret
sbb
rorb
add
adc
jle
add
ret
push
sbb
in
insl
push
sub
push
orb
mov
mov
pop
mov
pushw
call
outsb
mov
popf
repnz
push
adc
mov
adc
and
mov
mov
sbb
ret
jge
testl
xor
pop
mov
lods
fs
jl
mov
lret
mov
pop
sub
xchg
icebp
xor
mov
adc
cld
inc
push
or
std
ja
and
lahf
out
jno
mov
push
mov
mov
add
mov
lea
xor
shr
or
cli
aad
adc
jo
xchg
ljmp
shrl
int
ss
aas
pop
repnz
sub
into
mov
or
out
cld
ljmp
stc
fidivs
popa
jmp
xor
dec
push
shrl
enter
push
or
push
sub
lock
aas
stc
xchg
call
push
or
add
pop
sub
cs
sti
jno
movsbl
loope
hlt
cmp
cmp
pop
or
mov
pop
outsl
cmp
fst
mov
mov
sahf
cmpsb
cmp
loope
sarb
cmp
incb
jmp
mov
adc
adc
lds
loop
pop
in
or
jmp
inc
adc
pop
movsb
les
clc
mov
rcrb
mov
push
jae
mov
push
fcoml
loopne
aam
shl
cmp
mov
cmp
or
add
dec
out
and
cmc
add
ja
and
pop
daa
pusha
push
cmp
xor
cmp
pop
push
jmp
test
fstps
add
enter
je
dec
pushaw
and
add
push
bound
pop
jmp
xchg
jo
fldenv
adc
lock
movsl
jle
movsb
dec
mov
inc
dec
and
aad
add
rclb
inc
jle
inc
and
arpl
xor
jb
adc
jmp
dec
js
push
or
push
and
ficompl
popf
push
xchg
mov
sub
std
cmp
in
ja
ret
inc
loope
mov
pop
jmp
sub
nop
xlat
mov
lock
and
xchg
pop
or
sub
or
mov
sub
mov
roll
lcall
pop
ss
or
sub
aaa
nop
sbb
adc
push
mov
or
jmp
xor
bound
aaa
xor
call
dec
and
test
enter
sbb
movsl
xor
mov
int
add
mov
scas
push
or
jmp
sub
and
push
pop
dec
jmp
xorb
shll
je
fnstenv
adc
popf
fmul
inc
subl
push
addl
push
sbb
outsl
and
dec
sbb
scas
fisttps
aaa
mov
or
mov
rolb
jg
ret
mov
mov
in
mov
rorb
inc
xor
pop
lods
sbb
jle
test
cmp
test
add
jl
neg
jne
xchg
hlt
dec
and
adc
xor
pop
jo
inc
cld
leave
aaa
repnz
push
jne
dec
pop
push
inc
lods
in
leave
jne
jmp
add
neg
add
xchg
and
sbb
sub
sbb
cmp
cli
adc
mulb
into
cli
scas
iret
push
push
cmp
aam
gs
push
xor
mov
or
sbbl
cmpsb
mov
sarb
test
jge
call
push
enter
xor
sti
jmp
scas
jb
or
xchg
hlt
stos
lods
or
xchg
add
adc
xchg
pop
xchg
add
pop
mov
int3
pop
add
xchg
in
jmp
es
and
xor
int3
and
inc
push
and
enter
dec
and
xchg
mov
div
sub
add
xchg
repnz
test
push
pop
push
and
or
mov
adc
and
dec
ljmp
out
inc
sti
out
dec
aas
stos
rclb
sbb
sbb
lahf
sbb
shlb
push
nop
or
loope
in
clc
andl
inc
sbb
and
add
xor
imul
cld
jp
cmp
cs
clc
shl
lock
maskmovq
sub
sti
push
jmp
xchg
test
cmc
shrb
les
and
xor
and
mov
push
mov
jb
in
pusha
rcrl
mov
jmp
mov
sbb
adcl
xchg
iret
pusha
and
sbb
dec
in
or
scas
enter
or
pop
add
imul
fdivrs
cli
mov
add
sar
inc
add
mov
mov
cmp
andb
cli
jmp
in
nop
sbb
add
sbb
jl
pop
je
sbb
insl
jg
repnz
mov
xor
jp
mov
jne
push
mov
mov
and
movsb
call
add
pop
jne
roll
pop
neg
and
or
dec
ss
std
ficoml
add
cli
jge
cmp
enter
shll
clc
aaa
push
xchg
adc
or
push
sti
sahf
adc
mov
and
js
mov
jne
push
repz
mov
out
add
xor
xor
pop
shll
mov
dec
icebp
hlt
jg
sub
decl
sub
mov
push
fidivrs
andb
jnp
mov
or
xor
dec
dec
hlt
pop
fstps
andb
std
cmpsl
das
shl
cmc
dec
push
cmpsb
jns
fdivs
je
or
movsb
roll
lret
adc
aas
push
mov
cs
mov
mov
sbb
test
or
sub
push
clc
iret
mov
shr
dec
enter
add
mov
cmp
mov
jecxz
mov
push
xor
stc
jle
les
test
mov
mov
and
stos
or
hlt
xlat
cmpsl
jns
xchg
mov
das
or
cmp
xor
shrb
sbb
or
push
lea
inc
sub
or
and
ret
dec
jne
cld
bound
and
push
mov
mov
inc
push
cmc
mov
mov
adc
or
pop
aam
sub
fsts
push
jmp
inc
push
mov
nop
hlt
imulb
fimull
adc
das
dec
sub
imul
mov
icebp
sbb
push
push
cmp
push
call
stos
pop
enter
mov
ret
push
repz
popa
add
jmp
inc
push
pop
add
adc
aam
push
outsl
mov
mov
negb
mov
or
sub
mov
adc
pop
and
xchg
call
popa
fsubl
test
pop
int
mov
jno
push
je
aam
sbb
inc
dec
sbb
call
jne
dec
push
movsb
ss
pop
push
mov
adc
fists
ljmp
mov
das
fildl
jbe
andb
cmp
cmp
or
clc
inc
mov
cmp
lea
hlt
imul
mov
adc
mov
icebp
adc
xchg
inc
enter
adc
dec
test
add
test
mov
and
jmp
add
lods
insb
sub
mov
das
push
adc
outsl
jle
mov
hlt
jmp
aad
movsl
jg
cmpsb
stos
gs
or
xchg
cmp
jge
pop
dec
push
push
sub
cmp
fs
les
dec
sbb
xlat
in
test
addb
movsl
jo
mov
xchg
mov
cwtl
and
sbb
repnz
sub
out
inc
popf
imul
sahf
sbb
or
adc
imul
fmull
jno
das
push
in
stos
jae
data16
dec
or
pop
js
das
in
cmp
mov
inc
or
mov
xor
and
test
and
cmpsb
and
push
add
and
push
inc
lods
psubd
mov
mov
mov
mov
jnp
mov
jecxz
push
sub
inc
push
xor
stos
push
orl
outsl
imul
and
push
push
push
cmp
jne
jns
dec
or
push
jmp
mov
insb
dec
add
add
ja
lods
jle
rol
dec
pop
or
dec
xchg
lahf
das
call
icebp
adc
jns
sbb
jne
out
nop
inc
or
call
cwtl
push
dec
cld
data16
cmp
movsb
xchg
dec
inc
dec
call
cld
adc
sbb
pop
jg
addl
jle
mul
out
mov
jg
in
repnz
push
adc
loop
mov
push
push
movswl
divl
fadds
or
mov
xlat
in
push
inc
sbb
dec
pop
jne
leave
dec
in
rcr
xor
mov
ja
mov
icebp
cmp
xor
sub
gs
inc
stos
cmpsb
loop
inc
sbb
out
and
xor
push
adc
lret
fcomi
ljmp
xor
jae
push
ds
or
or
cmp
nop
or
xor
jmp
divl
mov
push
jbe
or
es
cmp
push
sub
js
and
pusha
cld
je
arpl
addr16
cmc
das
mov
jne
jno
repz
push
andl
add
or
lea
cmpl
lahf
jb
xchg
movsl
add
pop
stc
xor
mov
aaa
leave
jg
ret
jne
lods
xchg
dec
inc
ds
fisubs
lods
or
inc
test
pop
mov
mov
pop
stc
push
pop
mov
rcr
je
sbb
add
cwtl
fistps
push
or
cmp
xchg
daa
sbb
ds
push
faddl
and
sub
xchg
sbb
or
cwtl
xor
add
lret
push
adc
mov
pop
inc
push
cmc
mov
std
jno
push
push
push
mov
dec
mov
out
mov
sarl
scas
in
jle
sub
jg
or
in
and
std
leave
lret
mov
or
loope
pusha
aad
ret
lahf
push
fldt
or
repnz
xor
leave
jp
inc
hlt
add
pop
jne
and
cmp
add
pop
or
sti
inc
add
hlt
mov
or
mov
dec
jo
je
and
call
push
cmp
jle
adc
mov
fidivrl
adc
pop
sbb
jle
fucomp
push
aas
pop
cmp
adc
sbb
inc
push
cmp
inc
adc
rcrb
int3
je
or
stos
out
pop
add
jge
pop
lahf
add
idivl
rorl
int3
jbe
negl
push
mov
jge,pn
add
and
lret
int3
je
mov
xlat
cmp
lahf
mov
test
or
or
call
inc
movsb
outsl
out
fcomps
xor
negl
xchg
add
xchg
pop
mov
pop
push
sbb
inc
push
call
mov
push
aam
loop
push
cwtl
pop
push
push
push
mov
push
push
push
pushf
test
js
scas
icebp
inc
mov
mov
jns
in
and
and
dec
sub
mov
adc
fdivr
mov
jb
sti
sbb
sbb
push
xlat
cs
les
mov
dec
scas
gs
pop
or
cmp
add
idivl
push
out
mov
clc
mov
call
ret
sub
adc
adc
add
mov
cmp
inc
cld
cmp
divl
or
jp
popf
jmp
inc
cmp
mov
xor
jne
aaa
inc
lods
inc
inc
int3
ss
mov
sub
mov
loope
sahf
test
or
inc
cmpl
ds
mov
xor
xor
lea
call
or
inc
out
xchg
ljmp
insl
dec
mov
jecxz
add
cmp
xor
mov
xor
jp
test
and
jle
mov
inc
sarl
xor
inc
lret
inc
push
jb
rcll
andl
mov
dec
push
je
movsb
mov
push
cltd
dec
sub
sub
xor
outsb
sub
xchg
loopne
sbbb
neg
sbb
shll
fcom
outsl
adc
sub
lods
sub
pushf
out
jle
dec
inc
sub
push
mov
mov
or
cmp
pop
sbb
cltd
das
xlat
mov
sub
jg
rol
dec
adc
cmp
es
and
pop
ret
dec
sbb
or
ljmp
add
sbb
jne
out
repnz
adc
jge
lock
test
adc
add
sbb
js
stc
jmp
mov
outsb
repnz
das
pop
rorl
jne
insb
je
call
mov
cmp
shll
mov
adc
fnstsw
jecxz
dec
mov
cs
sub
ds
cmp
jmp
inc
movsl
cmpsl
xor
shrb
orl
pop
jmp
add
add
pop
adc
jae
xchg
fstl
addr16
mov
pop
lea
and
jbe
js
dec
mov
jno
lea
cs
cmp
or
popa
daa
inc
cmp
call
cmp
inc
leave
and
add
jnp
sub
repz
repnz
clc
sub
mov
daa
mov
adc
pop
add
mov
adcb
fiaddl
xchg
fcomp
pop
dec
adc
gs
adc
lea
addl
or
jge
and
add
cmp
ret
and
mov
int3
into
jmp
xor
pop
pushf
cli
push
xchg
call
sbb
inc
ficomps
sbb
add
fsubl
xchg
push
or
sub
pop
idivl
insb
dec
mov
mov
shlb
push
push
jp
fucomi
xor
push
add
test
and
ret
push
imul
loope
push
or
adc
sub
adc
add
xchg
repz
mov
dec
incb
cmp
xor
pop
sahf
inc
and
mov
scas
int3
inc
push
repz
and
jne
addl
clc
mov
and
adc
jmp
out
call
rcll
imul
pop
mov
xlat
popa
xchg
inc
push
in
dec
or
aam
jl
scas
aad
scas
jns
inc
xchg
inc
push
in
shll
jmp
add
pop
ror
dec
xchg
call
pop
jmp
loop
cmp
jae
je
push
push
xchg
push
sub
dec
clc
xchg
mov
iret
xchg
adc
pop
ret
push
or
call
bound
cmp
push
add
sub
xchg
das
inc
and
and
mov
add
stos
movsl
jbe
icebp
jg
or
lret
jbe
emms
push
shrl
inc
and
jmp
cmp
add
or
fcomps
adc
sarl
xor
mov
call
add
cmp
dec
or
jle
dec
xchg
mov
dec
cld
daa
mov
popf
daa
jno
aam
push
test
cld
outsb
push
pop
fs
inc
adc
adc
sbb
stos
push
adc
dec
or
xor
mov
les
sub
mov
push
xchg
lcall
fildl
test
lret
test
dec
xchg
lea
add
movsb
pop
inc
jmp
pop
dec
push
daa
fsubr
dec
push
xor
hlt
add
loopne
lea
or
pop
mov
push
outsb
and
or
clc
aam
aam
adc
jle
je
xchg
adc
inc
xchg
adc
or
fwait
pop
jno
mov
popl
add
lea
jmp
decl
leave
add
or
pusha
fisubrs
mov
dec
xchg
adc
loop
adc
inc
fidivrl
xchg
clc
mov
inc
loopne
mov
pop
insb
movsb
in
hlt
mov
or
and
adc
push
inc
jp
push
adc
repz
mov
sub
adc
push
aaa
loope
or
std
faddp
