add
fwait
xor
dec
inc
mov
js
notl
int3
pop
lret
adc
insl
cli
lods
jae
and
scas
jp
rcll
andl
inc
sbb
sub
aam
xchg
icebp
cs
sub
xchg
aam
xor
jae
hlt
and
imul
add
jno
dec
int
loopne
jo
mov
scas
jmp
or
or
xor
xor
jno
gs
fisttpll
loopne
movsl
aad
int
and
lea
xor
add
inc
add
xor
rolb
sbb
ss
outsb
jmp
into
add
mov
pop
ds
push
pop
cmp
cmc
adc
idiv
adc
pop
bound
jo
mov
jo
lods
int3
movsl
lods
imul
dec
shll
pop
sub
adc
hlt
int
dec
int
dec
dec
out
decl
in
mov
dec
outsl
fdivs
push
xor
and
jmp
jnp
pushf
jo
inc
hlt
scas
adc
jmp
and
sbb
and
stos
push
lahf
dec
mov
mov
adc
in
mov
xchg
dec
adcb
aaa
sub
adc
cwtl
mov
scas
xchg
lods
int
arpl
dec
pop
jns
ja
dec
dec
pop
outsb
fwait
pop
xor
cmpsb
arpl
pop
gs
sub
mov
xor
insl
pusha
or
dec
arpl
inc
mov
push
scas
xchg
clc
fstpt
loope
loopne
in
test
sarb
mov
dec
loopne
pop
adc
sub
push
test
adc
dec
sub
sub
push
and
lods
es
push
ficoms
push
pop
das
adc
add
sbb
shll
and
cmpsb
out
inc
xchg
jecxz
jo
sbb
roll
fnstenv
in
aad
xor
test
sub
jne
ljmp
jle
cmp
push
xchg
pop
xorb
jb
pop
stos
pop
adc
shrl
mov
sub
ss
add
inc
push
and
arpl
loopne
lret
fistpll
jbe
xor
ret
test
pop
mov
aaa
fwait
sbb
cmp
shl
adc
add
clc
inc
xchg
jo
enter
and
mov
ds
xor
jmp
lahf
mov
sbb
jmp
push
mov
stos
mov
add
lods
push
mov
sbb
adc
out
mov
or
clc
stos
mov
inc
jnp
mov
sbb
and
lahf
and
xor
push
lret
xchg
cmpsl
or
insb
xchg
xor
loopne
lods
inc
inc
mov
mov
xor
ja
mov
add
pop
mov
push
mov
pushf
sub
or
hlt
data16
cld
push
pop
je
xorl
decl
pushf
fisttpll
adc
lea
or
sahf
aad
ss
or
xchg
movsb
mov
cmpsl
inc
mov
mov
sbb
js
sub
mov
mov
gs
mov
stos
cmc
xlat
loop
sub
test
shrl
dec
and
pusha
ds
pop
sub
xor
mov
sti
dec
vmaxps
jmp
jg
and
add
stos
xor
inc
push
lock
movsl
mov
lcall
mov
mov
fucomp
lods
shr
loope
out
and
repz
push
je
repnz
mov
cmp
xor
xchg
mov
xor
xor
pushf
scas
cmp
pop
cld
sub
jmp
and
sbb
leave
fmuls
test
mov
cmp
or
popf
push
mov
aad
arpl
jb
fld
push
or
sub
push
sbb
iret
inc
dec
and
imulb
stc
fsubs
cld
cwtl
push
imul
les
mov
lcall
decb
mov
or
lea
push
les
jecxz
in
test
aaa
push
xor
cmpsb
xor
and
ret
ret
test
or
pop
push
mov
sub
cld
movsl
xor
push
iret
jg
mov
inc
iret
movsl
jb
scas
cli
aad
das
adc
bound
jno
pop
int
daa
popf
fucom
movsl
data16
xor
int
out
ja
mov
pop
push
inc
mov
test
jl
mov
pusha
dec
add
cmpsl
jne
mov
push
inc
adcl
loop
jmp
loopne
dec
jle
mov
push
cmpsb
scas
push
cltd
sub
loopne
stc
nop
push
push
push
push
lea
push
push
push
push
push
dec
pop
push
pop
shl
push
ror
pop
sub
jne
add
push
ja
cmp
pop
stc
mov
nop
jo
and
clc
push
and
pop
jne
add
and
push
jle
test
pop
jge
lea
push
jle
sub
pop
cmc
call
xor
stc
push
mov
pop
clc
rol
pop
nop
push
pop
inc
dec
nop
add
push
call
nop
and
pop
in
ficoml
divl
das
dec
int3
ret
cltd
mov
add
pop
lea
clc
push
jno
test
pop
push
pop
jb
push
mov
pop
push
ror
pop
rol
push
add
mov
pop
clc
add
push
call
xchg
jo
sti
xor
dec
sbb
dec
in
jb
xor
daa
jbe
faddl
xor
ja
jo
rol
pop
loop
jecxz
fs
mov
jl
popa
xchg
inc
xchg
add
cmp
call
inc
or
xor
test
jne
jmp
js
push
push
add
pop
sub
jg
push
add
pop
cmc
clc
clc
add
jl
test
jne
cmp
and
js
and
xor
stc
or
push
mov
push
xor
pop
pop
push
movzbl
jg
push
add
pop
push
pop
loop
pop
push
or
pop
xor
cld
push
push
pop
pop
shl
push
push
dec
pop
pop
jns
test
clc
clc
dec
inc
mov
inc
inc
inc
inc
clc
nop
push
push
pop
add
pop
push
call
pop
into
cld
mov
loope
jp
sub
or
xchg
jg
mov
mov
push
and
outsl
mov
inc
jnp
shr
sbb
dec
jne
push
call
jnp
push
sub
and
imulb
mov
into
fcompl
jb
cli
cmp
fimull
jne
jg
out
mov
or
les
push
call
pop
test
scas
subl
mov
fildl
xchg
or
mov
xchg
mov
cmp
sti
cmpsb
cmc
shlb
xchg
stos
xchg
lods
mov
jno
pop
sti
out
mov
dec
jne
push
call
xchg
jg
dec
xchg
or
into
leave
mov
push
mov
fsub
stc
es
dec
mov
iret
inc
ret
dec
loope
adc
call
outsb
mov
xor
adc
jge
data16
sbb
bound
test
cwtl
mov
fcomip
ds
and
leave
ds
pop
fisttpll
iret
cld
xor
cld
data16
sbb
xchg
pop
mov
imul
fsubr
mov
push
ss
or
insl
sbb
and
mov
jo
aam
xchg
mov
or
and
bound
cmp
and
mov
mov
jle
sub
inc
xor
pop
sbb
jg
insl
sbb
mov
xor
push
jge
jo
mov
and
sbb
iret
xor
and
daa
clc
inc
sbb
cmp
sub
daa
add
ficoml
push
jb
mov
nop
outsl
notb
jno
gs
mov
mov
ret
test
mov
or
lret
inc
in
incl
fstl
pop
inc
lret
and
mov
fsubs
mov
push
outsl
notl
mov
mov
mov
jb
outsl
mov
cmp
lods
mov
and
call
pop
mov
pop
inc
mov
aad
mov
cmc
fwait
mov
cmc
mov
push
std
xor
in
mov
dec
mov
mov
lods
jae
jmp
and
aad
call
sub
sbb
test
es
push
push
xchg
pop
pop
es
and
je
int3
adc
dec
mov
adc
dec
test
mov
les
mov
repnz
pop
mov
imul
rclb
divl
jmp
clc
mov
and
push
ret
mov
or
das
dec
or
outsb
mov
cmpsl
jmp
inc
int
loop
jmp
popa
mov
pop
inc
lahf
jge
mov
negb
mov
adc
mov
xchg
mov
sahf
lods
xchg
mov
lock
negl
hlt
popa
and
int
call
cli
push
adc
movsl
add
sub
sub
lods
call
sub
lea
ljmp
pop
imul
inc
adc
add
cmpsl
xchg
xchg
inc
fdivs
pop
sti
cmpsl
sbb
jae
inc
sbb
js,pn
jae
cmc
pop
fistps
cld
cmpsb
inc
fs
adc
sahf
sbb
pop
push
iret
sbb
push
nop
divl
mov
sbb
je
mov
push
jo
xchg
enter
adc
xor
and
jg
cmpl
or
pop
mov
out
fcom
cmpb
fsubr
mov
mov
jbe
mov
mov
jne
ret
sti
leave
add
sbb
jl
mov
mov
push
pop
lods
aam
fdivrs
inc
xchg
mov
js
push
dec
fs
lods
lea
mov
lcall
cmp
imul
fstpt
stos
and
push
pushf
mov
xor
xchg
sbbl
jle
jb
aas
xchg
pop
pop
pop
cli
leave
mov
mov
jnp
mov
inc
fdivs
pop
fisubl
cmp
push
subl
pop
mov
sbb
or
popf
add
dec
push
test
movsl
inc
xor
shrl
cmp
cmp
js
pop
inc
into
jp
xor
into
imul
jbe
or
mov
xchg
pusha
mov
shl
js
lods
movsb
in
sub
into
inc
dec
repnz
divl
dec
pop
ret
mulb
mov
add
arpl
inc
and
mov
sti
or
shlb
pop
add
addr16
lods
and
ljmp
mov
pop
sbb
pop
pop
andl
aaa
lds
fiadds
pop
pop
jecxz
mov
jecxz
mov
adc
or
xchg
pop
das
xor
xchg
add
imul
sub
cmp
inc
cmp
pusha
pusha
and
jp
xorb
lret
push
and
iret
push
push
or
and
fmull
gs
inc
and
cwtl
frstpm(287
es
test
into
movsb
push
enter
mov
mov
icebp
into
dec
sbb
xchg
pushl
push
xor
cwtl
sbb
jge
fsubrl
cltd
icebp
push
inc
dec
cmp
std
push
xor
loop
inc
mov
insl
sub
cmp
inc
into
mov
daa
jbe
scas
cld
enter
mov
or
sub
sbb
cltd
rcll
mov
repnz
adc
jbe
fwait
mov
ja
push
outsb
fs
in
lret
pop
lahf
jae
sub
add
sbb
iret
mov
or
xchg
xchg
fwait
lods
push
push
nop
cmp
mov
push
pop
lret
sti
pop
xchg
lret
int3
pop
es
push
stos
inc
les
idiv
iret
stc
dec
cmc
push
add
xchg
adc
lds
mov
negb
clc
pop
mov
inc
je
mov
push
dec
cltd
lods
test
mov
shl
das
loopne
aaa
je
xchg
movzwl
fsubr
and
fcoms
push
sti
xlat
add
add
sbb
mov
aaa
mov
lods
aaa
pop
fidivl
cs
inc
test
das
outsb
stc
push
cmp
push
andl
imulb
insl
call
or
push
rolb
negb
add
add
inc
lods
and
lods
sbb
enter
xorl
jae
inc
lret
mov
push
std
push
xchg
ret
cltd
icebp
rol
cltd
lcall
aam
xchg
cmc
shrl
and
loope
inc
stos
fdivr
test
sub
mov
test
mov
rclb
lds
xchg
movsl
cltd
loopne
jne
bound
lods
pop
popa
sub
imul
lcall
mov
arpl
mov
jg
add
test
inc
xchg
sbb
hlt
sub
pop
dec
push
popa
imul
int
or
repnz
ret
cmp
sbb
into
ss
inc
fimull
ss
test
sbb
jo
outsb
mov
out
sbbl
or
enter
push
ret
test
shlb
test
outsl
adc
or
or
jp
addl
fimull
insl
jnp
adc
pop
inc
push
roll
lock
pop
movsl
movb
roll
mov
inc
inc
cmc
imul
imul
mov
sbb
push
mov
and
nop
daa
dec
jg
pop
ljmp
sti
jle
repnz
aad
mov
aaa
psrlw
jb
jno
and
xor
rclb
aam
lds
fdivrp
idivl
and
pop
lock
mov
jne
lcall
or
cmp
insb
jbe
repnz
loopne
mov
loop
test
and
int3
xchg
idivl
pop
mov
clc
sbb
mov
test
movsb
addr16
jge
xchg
jecxz
rcrb
or
out
sub
mov
aaa
out
jl
outsl
test
out
push
add
mov
shl
mov
inc
insb
sub
add
pop
dec
clc
push
es
adc
aam
jb
ss
andl
movsb
cmc
or
and
fisttpll
mov
adc
push
test
popf
mov
sar
lcall
gs
jmp
imul
mov
add
jo
inc
loop
int
iret
mov
gs
aas
and
inc
sub
jg
daa
xor
adc
jle
push
and
xchg
or
push
aas
jg
std
xor
out
inc
push
push
ja
pop
dec
subb
in
cmc
sbb
and
cmp
add
pop
dec
pushf
cmpl
das
sub
inc
cmpsb
pop
loop
jmp
pushf
sub
in
fiaddl
push
rorb
rorb
lock
in
add
or
push
xor
fldl
stos
push
inc
sbb
inc
out
ret
mov
cmp
mov
inc
pop
fsubs
mov
push
xor
std
mov
dec
cwtl
jo
int
icebp
lods
addr16
popf
dec
mov
andl
and
stos
cmc
add
ficompl
rcll
stos
idivl
sub
cmpsb
mov
aaa
inc
xchg
dec
insb
mov
movsl
cmpl
push
push
mov
cmp
pop
lock
sbb
xchg
jne
sub
adc
call
ja
sbb
and
inc
in
je
ja
std
add
negb
jnp
clc
xorl
imul
rcl
mov
push
cmpsb
mov
and
dec
test
mov
int3
in
in
pop
mov
jno
popa
jne
in
jns
cli
fldl
xchg
add
push
aas
inc
sti
lret
xchg
ja
fstps
popf
jecxz
mov
mov
stos
lret
jae
mulb
jnp
fnstcw
jmp
dec
int
sub
sbb
adc
sti
adc
mov
les
das
push
and
int
add
add
out
data16
dec
sub
xchg
es
adc
aas
addb
jecxz
outsb
repnz
xor
dec
repz
notb
sahf
mov
xchg
sbb
sub
mov
bound
ret
adc
lea
mov
dec
cltd
pusha
jb
jb
cmpsb
jmp
popa
or
les
xchg
flds
push
push
test
shll
inc
mov
lods
outsb
push
addr16
pop
aaa
nop
add
mov
cld
dec
cmpsl
jmp
xchg
push
inc
jne
testl
and
cwtl
and
xchg
sti
adc
cmpsb
mov
sbb
ffree
or
mov
xchg
enter
sbb
and
dec
fstpt
pop
cld
test
fcoms
inc
addl
popf
add
push
push
es
insl
lods
dec
test
inc
or
mov
stc
testl
sub
test
mov
cmp
mov
xchg
movsb
xor
jns
fs
aas
push
pop
call
pop
mov
iret
inc
stos
rcrl
cmp
in
mov
push
add
jg
push
mov
inc
jno
sub
sbb
mov
jp
dec
pop
ljmp
shrb
or
fcmovnb
cmpsl
or
mov
in
loopne
loopne
inc
xchg
sbbb
push
mov
jge
jg
fistpll
gs
pop
not
xlat
fldt
sbb
test
scas
in
fstp
cmp
mov
mov
call
cmp
jb
fsubl
add
loopne
mov
imull
pop
mov
mov
xchg
in
fists
sbb
inc
cmc
mov
xchg
aas
cmp
lcall
pop
mov
aaa
dec
shl
push
stos
mov
xor
xchg
jns
cld
out
daa
dec
ficoms
adc
xchg
and
sbb
or
cmpsb
sbb
pop
mov
mov
stos
stos
nop
jbe
out
aaa
add
pop
ljmp
inc
pop
mov
dec
cmp
iret
mov
icebp
jnp
loop
inc
nop
sub
xchg
int3
push
sbb
test
sbb
imul
les
jbe
xchg
mov
in
dec
mov
xlat
mov
jns
push
rclb
gs
xor
test
daa
test
loope
jg
sub
stc
fmuls
test
push
pop
fiadds
insb
mov
ret
leave
sti
enter
shrb
add
xchg
out
scas
test
adc
stos
dec
xor
sub
outsb
call
mov
imul
mov
leave
xor
mov
xchg
idivl
sub
and
lds
sarb
mov
mov
sbb
and
mov
lret
js
inc
popa
sbb
and
stos
aad
push
push
pop
pop
shlb
mov
pop
xor
lret
test
pop
cs
leave
push
or
or
cmc
shl
xchg
stos
outsl
push
dec
dec
sbb
inc
mov
shrb
std
xchg
xchg
outsb
mov
xchg
ja
push
fwait
in
popl
xchg
push
and
cmp
dec
dec
jg
aaa
jg
push
and
out
ljmp
idiv
iret
fwait
lahf
inc
aam
pop
fsubrs
cmpsb
insl
xor
scas
jmp
add
jae
gs
js
pusha
cld
popf
sub
hlt
cs
cmp
and
push
jge
into
shll
gs
adc
xchg
sbb
lods
mov
ret
daa
fwait
sti
pop
sub
push
out
cmpsb
insl
push
test
cmp
cmp
cld
push
fstl
and
fadd
push
xlat
inc
mov
gs
bound
jnp
mov
pusha
int
js
fsubrl
into
inc
pushf
jnp
add
pop
inc
pusha
mov
fisubrl
ljmp
jbe
and
ret
jl
loop
sub
repz
inc
ret
pusha
and
xchg
insb
xchg
ficoml
aad
xchg
hlt
jmp
sbb
into
adc
push
xor
or
or
mov
daa
add
cs
push
rcrb
jae
mov
cmpsb
leave
aad
shll
out
or
stos
pop
loopne
gs
pop
mov
cli
mov
pop
xchg
pop
and
inc
std
mov
daa
movsb
mov
je
adc
mov
jns
mov
jl
dec
popf
loopne
jle
or
stc
mov
sub
xchg
mov
or
stos
adc
data16
pop
fiadds
rcll
repz
fadds
cmp
jns
pushf
cmpsb
je
nop
mov
jo
out
mov
push
call
aad
adc
push
jmp
sbb
in
cmp
mov
inc
xor
in
push
mov
jbe
sbb
repnz
das
sbb
jecxz
mov
or
mov
cmp
fwait
xchg
test
xorl
push
xor
and
add
ljmp
inc
pop
jg
and
push
adc
xlat
xchg
sar
jecxz
jle
test
in
cmp
sbb
ja
lock
xchg
pushf
adc
outsl
push
imull
add
aaa
lahf
ja
xchg
imul
jbe
push
pop
xchg
add
lods
ljmp
push
xor
xchg
call
xchg
loope
mov
in
outsb
sub
push
push
fs
mov
popa
decb
fstps
leave
out
ret
dec
add
xlat
push
es
cld
test
outsb
sti
pop
cld
les
adc
inc
movb
test
mov
mov
sbb
dec
hlt
sub
lcall
xor
mov
mov
dec
pop
out
ret
jae
cli
xorb
addr16
mov
or
and
mov
insb
mov
imul
add
lret
jl
popf
out
aad
mov
jecxz
mov
lret
add
in
inc
es
mov
iret
sub
fwait
push
cwtl
mov
cmc
rol
inc
cmpsl
int3
jmp
pop
adc
imul
aas
pop
out
pop
xor
mov
call
cmp
dec
popf
fldl
ja
clc
loop
sahf
mov
pushf
xchg
scas
xchg
push
andb
jl,pt
ret
or
fistpl
dec
scas
xor
dec
dec
jge
cmp
ds
push
mov
push
sti
add
test
dec
push
pop
pop
sub
adc
jae
rclb
sub
dec
enter
and
repnz
fwait
mov
in
push
lock
inc
lret
xor
cld
movsl
xchg
loope
adc
xor
adc
push
sub
rol
addr16
inc
subl
ja
stos
pop
adc
inc
flds
enter
add
sub
mov
stos
lods
xchg
push
jg
sub
aad
cmp
bound
sub
jl
fimull
mov
mov
int3
test
in
inc
jnp
fucom
mov
or
dec
adc
or
insl
and
adc
ljmp
xor
sub
dec
adc
pop
aad
mov
lods
add
cmpsb
xor
mov
pop
add
loope
mov
jno
lock
int3
or
xchg
cmp
je
fldcw
mov
sti
dec
mov
scas
mov
pop
sub
iret
dec
dec
bound
sbb
int3
adc
jno
les
sarb
std
mov
cwtl
push
mov
loope
sub
xor
test
push
jle
xor
testb
loope
jecxz
jmp
dec
test
xchg
adc
out
mov
push
in
add
out
cmp
add
les
xor
adc
pop
stos
or
rcrb
mov
cld
xor
push
arpl
mov
inc
imul
inc
xor
iret
push
adc
mov
jecxz
inc
jle
pop
adc
ficomps
mov
jno
cmp
push
aas
push
dec
lahf
xor
ud0
inc
pop
out
ljmp
lods
mov
or
ror
lds
xchg
adc
out
loop
jecxz
pop
cmp
mov
cmp
lds
jmp
sub
mov
push
repz
in
mov
popf
jg
loopne
enter
dec
mov
dec
into
test
cmpsb
stos
jno
mov
push
fists
mov
test
mov
ret
cmp
pop
dec
add
in
arpl
jb
ja
les
scas
imul
orb
aaa
push
add
leave
test
jge
arpl
pop
fwait
popf
jmp
mov
and
xchg
daa
out
mov
xchg
push
push
add
lock
clc
ret
mov
call
in
jae
hlt
cmp
pop
pop
adc
adc
fnstcw
mov
fwait
mov
icebp
iret
and
filds
xor
ds
xlat
xor
xchg
addr16
js
mov
xor
xlat
dec
add
pop
shlb
enter
std
dec
aas
leave
je
lret
pop
xchg
sub
pop
movsb
or
push
ljmp
xchg
aaa
sbb
cs
jnp
cmc
rcll
sbb
in
mov
sub
cli
and
daa
mov
inc
dec
scas
cmp
push
mov
sbb
fcoml
lods
pop
sub
jmp
inc
int3
fwait
lds
leave
inc
std
mov
mov
cmp
icebp
fisubrs
dec
test
sti
addr16
jne
xor
sub
cmpsl
cltd
aaa
notl
test
dec
dec
sar
xlat
mov
negb
xor
in
in
jle
cld
pop
scas
ret
or
leave
nop
lret
push
jnp
or
pop
and
nop
xor
test
repnz
jne
movsb
inc
ffreep
sub
mov
pop
inc
lret
jecxz
push
mov
mov
and
or
push
movsb
xlat
movsl
rcl
test
aas
into
and
sahf
xchg
lret
fdivrs
stos
xchg
iret
inc
dec
in
fstpl
std
out
clc
sbb
stos
or
cmp
es
inc
jecxz
sbb
or
out
stc
or
sub
push
ja
push
adc
mov
mov
aaa
or
lea
dec
inc
and
into
jo
push
inc
adc
outsl
data16
out
mov
cmp
ljmp
dec
scas
push
or
test
xlat
push
jl
jge
negl
in
aad
xor
shll
aam
sub
scas
or
jl
push
add
mov
xor
mov
ficompl
fildll
cmp
add
xor
cwtl
cld
adc
mov
das
xor
pop
mov
sub
jo
test
xor
clc
push
bound
shl
and
pop
xchg
mull
je
outsb
dec
in
lock
and
orl
adc
adc
add
adc
xor
push
inc
leave
or
in
jg
adc
repz
insl
imul
lcall
fs
cmp
fbld
leave
cmp
pop
jne
sbb
mov
mov
cli
xorl
loop
jns
outsl
dec
push
repz
in
adc
xor
jns
sbb
dec
in
je
scas
icebp
lret
testb
lcall
ljmp
sbb
repz
xor
popa
mov
mov
dec
inc
stos
adcb
jne
outsl
add
mov
jl
xor
std
stc
pop
or
mul
or
es
cmpl
jmp
add
mov
pop
icebp
dec
lds
and
sub
push
pushf
or
xchg
popa
push
pop
xor
jo
jno
pop
xor
leave
in
dec
dec
add
xchg
dec
fcomip
fldl
jae
inc
fs
popf
rcrb
jns
fnstsw
in
int
jb
push
and
lret
movsl
loope
jno
jg
sbb
fcompp
sti
mov
add
adc
xchg
aam
pop
inc
mov
aas
mov
sub
addr16
xchg
cmp
scas
addr16
int3
repz
out
inc
push
test
and
inc
dec
out
push
mov
stos
movsl
lahf
sbb
iret
negb
cs
sbb
loopne
fnstcw
aad
adc
pop
das
shll
push
cmpsb
push
mov
fists
stc
cvtps2pi
aas
cmp
int3
sbb
xchg
xor
loope
fidivl
mov
mov
pop
adc
roll
or
pop
ss
shll
mov
mov
lock
jns
mov
lods
lea
or
xor
mov
nop
movsbw
dec
js
xchg
scas
es
dec
add
mov
decb
adc
sub
lret
mov
ficomps
dec
inc
pop
pop
jns
sub
rcl
cltd
sbb
lds
mov
pop
test
push
mov
inc
xchg
test
xchg
icebp
add
sub
mov
push
test
fidivrs
add
sub
sti
add
xor
mov
popa
imull
cmp
cmpsb
mov
xchg
dec
jge
lods
mov
btsl
xchg
das
enter
adc
push
or
stos
inc
lcall
xchg
gs
pop
out
inc
dec
pusha
mov
dec
dec
ret
and
mov
pop
jg
pop
inc
push
push
add
push
mov
in
mov
pop
ret
test
xchg
sub
jmp
mov
sbb
gs
add
outsl
cmc
andl
push
mov
and
dec
aas
in
test
xchg
jne
xchg
or
mov
inc
and
in
movsl
aad
cmp
inc
xchg
xchg
add
mov
jo
mov
nopl
cld
idiv
rorb
lods
pop
mov
sbb
inc
cmp
ss
repz
fstl
fldt
and
jmp
fsubrl
push
sub
test
or
das
aad
adc
data16
sbb
inc
out
jmp
repnz
adc
jecxz
sahf
xchg
jae
sbb
ret
cmpsl
test
ljmp
popf
fldenv
jnp
sti
pop
aaa
lret
seto
sti
jb
or
int
xchg
std
loope
out
jbe
outsl
and
imull
int
mov
mov
loopne
repz
and
inc
lret
sub
or
mov
lret
sub
and
push
mov
pusha
jp
cmc
hlt
sub
stc
or
test
add
roll
sbb
and
insb
test
mov
mov
mov
cmp
jns
lcall
insl
xchg
leave
stos
or
imul
out
xor
mov
push
cld
loopne
and
cmp
adc
fsts
mov
or
dec
dec
mov
jo
test
dec
lcall
xchg
pop
sub
cltd
xor
bound
in
pop
lea
cli
xor
sub
push
or
cmp
sbb
imul
inc
jge
push
adc
jno
sub
stc
cmp
out
das
mov
push
cmp
sub
jp
test
loop
dec
mov
jle
inc
push
pusha
fildll
lea
test
sub
or
push
add
xor
mov
imul
in
add
mov
adc
mov
ss
or
cs
adc
daa
mov
cs
mov
test
cmp
mov
iret
test
push
ffreep
or
xchg
cmp
mov
mov
mov
pop
jecxz
inc
xchg
inc
aad
mov
out
enter
push
jl
sbb
xor
lret
push
mov
movb
inc
int3
daa
adc
jne
lcall
cmp
jns
mov
dec
or
aad
aam
sub
xor
jo
movsb
les
lods
mov
sbb
push
hlt
jae
sbb
and
and
push
aam
jecxz
lret
cmpsb
add
divb
fistpl
cltd
and
subb
pop
popa
sti
mov
divl
lret
inc
test
push
lods
outsl
dec
shl
fiaddl
jge
and
or
adc
icebp
cmp
out
xor
adc
jl
xor
lcall
pop
jb
hlt
xchg
inc
sbb
call
rclb
mov
aam
test
sarl
enter
jnp
in
enter
mov
push
xchg
out
push
imul
hlt
xchg
cmp
sbb
pop
imul
jmp
sbb
testb
daa
adc
fstpt
fstpl
push
sub
sub
insb
and
mov
push
cwtl
ficomps
repz
lret
lods
or
mov
ficomps
push
pop
clc
xchg
rol
cs
sar
pushf
hlt
pop
pushf
scas
pop
aam
mov
lods
mov
cli
pop
mov
ljmp
test
lea
pop
jp
pop
jge
sbb
xor
loopne
cwtl
lret
clc
test
loope
push
in
movsl
mov
pop
push
enter
sub
pop
mov
and
push
ss
dec
rcr
mov
leave
outsl
out
scas
or
ja
mov
add
jg
push
cmp
dec
sar
dec
pop
add
aas
out
push
xchg
lret
cmpsb
mov
mov
add
ret
sbb
sbb
ss
push
add
or
std
out
xor
sarb
mov
jb
push
sbb
and
lds
adc
mov
xchg
push
pop
pop
loopne
shl
mov
les
and
dec
push
stos
icebp
jmp
xchg
mov
jae
out
xor
inc
mov
jecxz
fildl
call
aam
jne
das
in
xlat
shll
test
mov
inc
enter
add
mov
add
nop
push
les
xchg
stos
dec
dec
aam
push
addl
xchg
aas
iret
and
jl
cltd
aas
jo
add
rclb
add
fisubrl
cli
out
adc
mov
and
popf
enter
fistps
lret
popf
addr16
xchg
and
push
push
xchg
inc
mov
inc
les
call
stos
mov
inc
push
pop
adc
cmp
lea
jb
dec
movsb
pop
cmp
sub
sti
out
push
add
das
sar
mov
popa
popa
loop
scas
into
and
jmp
mov
int
mov
inc
mov
test
dec
mov
xchg
aam
cltd
push
pushf
test
lahf
lods
in
daa
add
arpl
gs
push
jne
outsl
iret
jg
xchg
loopne
ljmp
push
and
xor
int3
jmp
jecxz
xor
stc
int
push
and
ds
jno
xor
inc
aaa
test
in
pop
jo
xchg
movsb
andnps
or
enter
add
addr16
push
and
ret
in
and
adc
xor
dec
jecxz
xlat
add
incb
xor
jp
bound
or
insl
push
push
dec
inc
pop
pop
daa
xor
lret
xchg
pop
mov
fldt
enter
mov
sub
mov
fistps
cmp
fnstenv
add
sub
xlat
pusha
mov
idivl
xchg
adc
mov
mov
fs
fists
lods
es
xchg
mov
aas
outsl
cmp
or
dec
lahf
inc
mov
push
pushf
fdiv
leave
pop
fisubl
les
sub
adc
sub
jle
idiv
stos
mov
lds
clc
cwtl
call
dec
iret
cmp
and
inc
lds
je
push
push
stos
dec
cld
insb
lods
stos
insb
pop
sbb
adc
or
push
lret
sahf
in
xor
sarl
xchg
testb
fs
jns
push
jl
jp
jo
nop
pop
ret
ljmp
push
add
mov
popf
loope
shrl
iret
xchg
call
int
shll
hlt
insb
cs
iret
push
out
std
shl
or
add
hlt
pop
ret
fwait
bound
fmuls
ds
scas
push
xchg
dec
int
jbe
jne
testb
sub
sbb
cmpl
pop
fcoml
mov
rol
or
cmc
call
xchg
mov
cmp
cwtl
outsb
insb
or
push
pop
jge
mov
mov
mov
sub
push
cmc
icebp
inc
xchg
pop
xor
jmp
movsl
xchg
push
outsl
and
data16
mov
out
cmp
jns
jae
mov
inc
push
imul
loop
test
jnp
hlt
cmp
xchg
jge
mov
mov
repnz
iret
clc
push
pop
outsb
mov
or
add
pop
ficompl
test
cmp
pusha
jae
pop
jnp
into
sub
mov
dec
aaa
hlt
sti
das
mov
sub
pop
or
add
mov
lock
jno
inc
gs
inc
mov
pop
add
mov
pop
dec
pop
push
jp
push
std
cmp
rol
sub
inc
rcrb
js
or
test
sub
jl
and
nopl
adc
inc
xchg
in
jmp
sbb
icebp
aam
push
pop
mov
scas
cmpsl
stc
fsubl
dec
scas
jne
pushf
insb
mov
and
lcall
call
xorb
pop
stos
and
xor
ds
xchg
es
test
stos
add
or
insb
xor
xor
sbb
mov
ja
test
mov
ret
fcmovb
out
subl
dec
insb
or
or
ss
subb
add
cmp
je
xchg
push
push
xor
sbb
mov
and
xorl
rcll
or
jno
les
ds
jbe
mov
xchg
cmp
hlt
inc
sub
dec
gs
popa
int3
pop
push
les
mov
dec
mov
pop
pop
cwtl
aaa
pop
sbb
adc
jmp
mov
loopne
push
mov
push
push
lock
iret
fstpl
cs
setg
out
in
or
sbbl
inc
jge
jb
sti
ljmp
inc
mov
mull
pop
push
enter
dec
mov
das
push
fwait
cmp
cwtl
mov
adc
scas
mov
pushf
or
xchg
ljmp
jno
jecxz
xchg
rcll
push
fwait
stos
pushf
ja
dec
inc
repnz
xchg
jmp
sub
jb
mov
loope
dec
sub
sub
iret
and
inc
fidivrl
push
push
cld
dec
daa
dec
inc
xor
xor
xchg
dec
fxch
test
js
xchg
cld
xchg
dec
mov
dec
loope
cmp
pusha
cmpsb
dec
loope
cld
repz
pop
dec
fidivs
dec
rorb
rclb
and
mov
mov
cli
xchg
jp
adcb
mov
adc
lock
xor
sbb
inc
jg
sbb
sub
divb
adc
fsubrp
sub
and
popa
mov
rorb
dec
sbb
in
loopne
cmp
push
mov
sub
imul
sbb
cmp
push
das
ret
xor
ss
xchg
call
rclb
je
cwtl
mov
mov
test
mov
sbb
int3
js
aaa
nop
jmp
jl
sarb
cmp
lret
pop
arpl
mov
sub
and
sub
call
mov
sub
mov
mov
pushf
adc
adc
fistpll
pop
aad
xchg
cltd
aaa
cmp
jns
sub
in
cwtl
xor
mov
jo
lock
mov
les
stos
and
fisubrs
xchg
ja,pn
sub
mov
movsl
movsbl
in
pop
imul
lcall
cmc
mov
jmp
dec
dec
and
inc
push
nop
in
outsl
cmc
out
rorl
divl
inc
jb
out
lock
ja
sbb
sub
or
into
sub
xor
lahf
fs
and
pop
scas
outsl
out
insl
and
add
adc
scas
or
mov
cwtl
sbb
sub
adc
xchg
push
mov
xchg
jmp
dec
mov
int3
dec
mov
insb
mov
es
jo
sar
jle
in
sub
inc
scas
aaa
movsl
jmp
dec
push
jp
inc
icebp
hlt
sub
mov
addr16
jp
adc
sub
js
jmp
xchg
and
xchg
dec
iret
inc
jbe
push
outsl
mov
addr16
cmpb
rcrl
fidivl
push
mov
adc
jnp
lea
mov
xchg
sarb
test
and
repz
out
jle
iret
int3
and
repz
pop
mov
or
or
xor
jnp
cmpl
mov
rclb
mov
push
fdivs
mov
ljmp
mov
and
adc
dec
ret
mov
call
sbb
lods
mov
rcll
and
aas
in
mov
jne
cmc
jnp
push
out
clc
push
or
and
mov
or
xchg
xchg
fcomps
jmp
pcmpgtd
imul
insb
mov
inc
decl
cmp
outsl
popa
jno
add
xor
ret
shr
cli
test
adc
inc
inc
push
xor
cmp
das
xchg
dec
inc
mov
sub
inc
mov
pusha
sub
aam
inc
mov
call
xor
mov
sub
sub
or
call
loop
push
jno
pop
lock
dec
xchg
and
test
inc
adc
das
fnstsw
inc
push
out
in
mov
outsl
bound
jne
bound
ja,pt
bound
out
pop
lock
scas
adc
iret
xchg
lret
inc
sbb
ja
push
cmp
loope
insb
nop
mov
mov
aas
loope
xor
mov
loop
je
cwtl
jp
fldl
push
xchg
inc
stos
les
xchg
sub
cwtl
sub
std
repz
mov
mov
lret
shl
mov
mov
sbb
push
notl
add
test
lea
sahf
mov
pusha
xor
imul
dec
and
mov
fnstsw
cmp
ret
dec
stc
fcompl
mov
xchg
dec
insw
sub
cmp
mov
hlt
xchg
inc
ret
imul
push
cmp
aas
inc
scas
scas
sub
arpl
nop
sub
xchg
and
rcll
fdivr
in
or
pushf
sub
ljmp
mov
adc
je
ljmp
sbb
pop
xor
sbb
jns
pushl
inc
push
cmp
mov
and
pusha
inc
sub
xchg
icebp
xorb
out
lret
stos
les
xor
loop
xor
mov
loop
or
fisubrs
js
ret
icebp
lcall
inc
loop
xchg
push
adc
sarl
ficompl
ja
lahf
mov
cmp
mov
inc
out
sub
outsl
jp
test
fwait
in
data16
addw
add
cmpsb
das
andl
fistps
out
mov
lahf
ljmp
cs
stos
cmpsb
add
mov
es
or
in
bound
aaa
mov
ficoml
test
sbb
push
mov
mov
and
or
mov
sub
add
jne
pop
dec
sbb
push
mov
scas
and
dec
outsb
inc
ret
cmp
add
or
and
dec
cmp
or
aaa
adc
jmp
cmpsb
cmp
cli
hlt
lods
je
push
add
imul
lea
addr16
push
jae
lods
orl
repnz
xor
dec
xchg
xor
jnp
mov
sub
addr16
xchg
cmp
test
cmp
xor
dec
lock
dec
or
jmp
ret
sub
pusha
fistps
cli
inc
cmp
mov
push
pusha
inc
arpl
add
jbe
shr
subl
mov
pop
xchg
push
mov
mov
and
fcomps
jge
push
ret
pop
push
out
jl
sbb
sbb
dec
push
repz
cld
sub
sbbb
push
jbe
dec
shr
test
pop
mull
stos
lods
inc
mov
jb
shrb
mov
inc
and
or
movsb
jp
rorl
sub
loop
lret
fwait
in
mov
cmpsl
xchg
sbb
and
cmp
imul
cmp
cld
dec
jl
imul
fisubl
outsl
add
movsb
mov
sbb
mov
and
add
jbe
into
add
test
out
cmp
stc
sti
pop
lret
and
pop
ljmp
test
dec
mov
outsb
iret
inc
cli
in
movsl
popa
aaa
jno
lret
mov
inc
mov
jge
rcrb
aas
jb
fimuls
push
sbb
sahf
aam
outsl
loope
ss
in
sarl
pop
test
mov
jg
dec
lods
stos
movsl
das
cmp
mov
or
shll
ret
mov
pop
pushf
mov
aaa
inc
addr16
jbe
jo
cltd
jmp
ffreep
xor
call
xor
fldl
cwtl
outsb
adc
lods
shlb
and
or
js
fmulp
add
adc
imul
mov
sub
subb
inc
ds
in
lods
loope
sbb
enter
mov
es
stos
fnstcw
sub
xor
divb
ds
insl
cwtl
cmp
jne
cmp
mov
imull
mov
mov
sbb
es
and
or
push
mov
sub
sub
pop
mov
sbb
sarb
stos
mov
jb
cmp
int
adc
and
xchg
sbb
inc
add
add
setne
jb
pushf
hlt
push
cmpsb
dec
sbb
cmpl
movd
pop
hlt
fwait
in
mov
mov
int3
adc
push
add
adc
cmpb
pop
mov
pop
jp
shll
jg
pop
out
push
addr16
js
dec
mov
and
and
stos
cmp
pop
push
jb
mov
cmp
jp
sbb
imul
pop
push
cmp
cwtl
ja
xor
ljmp
jl
and
lods
outsb
jno
shll
fisubs
sub
lar
out
jne
xchg
or
xchg
fldl
mov
add
repz
jo
sbb
cmp
and
movsb
push
mov
adc
add
pop
arpl
iret
in
iret
aad
sti
jmp
jns
dec
dec
insb
iret
mov
sub
out
lahf
daa
push
bnd
add
xor
ja
and
imul
jno
cld
lcall
aaa
mov
out
nop
push
popf
test
out
lea
stos
popl
push
cmp
les
xor
repz
push
fisttps
test
jmp
mov
jg
shlb
xor
adc
pop
push
in
lret
dec
pop
enter
loopne
and
add
gs
jle
push
sbb
mov
pushf
dec
mov
sti
in
mov
mov
xchg
hlt
mov
es
sub
push
cli
cmpsb
xchg
outsb
test
outsb
mov
imul
push
aas
je
pusha
out
orl
xchg
mov
add
sbb
mov
out
or
out
cmpsl
les
and
xor
fcoml
inc
loopne
inc
xor
popa
fdivs
pusha
addr16
rcrb
mov
dec
push
stos
sbb
cmp
mov
popa
rcrb
mov
sub
aad
cs
sub
out
data16
xchg
iret
cmp
pop
adc
fmull
mov
sbb
mov
pop
push
pushf
or
xchg
or
cmp
push
pushf
lret
testl
and
xor
in
cmp
jno
out
gs
ret
insb
into
mov
adc
addr16
lret
xor
jnp
xor
inc
sub
sbb
inc
push
mov
iret
leave
ret
cmpsb
jns
add
fmul
orb
mov
pop
popf
pop
and
add
push
dec
les
push
inc
jge
and
jmp
sub
shll
or
push
daa
xchg
sbb
mov
mov
mov
dec
bound
dec
and
mov
jns
inc
sbb
loop
push
jecxz
push
in
ja
or
loopne
mov
in
mov
lcall
or
loop
sbb
cltd
mov
push
negb
arpl
ljmp
scas
jb
andl
mov
mov
out
lret
in
cli
mov
mov
mov
cmp
bound
jmp
mov
pop
mov
lods
stos
jns
cmpsl
push
lahf
sub
insb
mov
push
movsb
out
and
clc
cmp
sub
push
mov
leave
es
and
jb
sub
jbe
cmp
inc
mov
or
repz
sti
loop
mov
or
orb
ret
std
pop
iret
lds
insb
jmp
mov
pop
fsubrl
jns
sub
lock
aam
jge
lea
out
and
xor
movsb
add
cmpsb
mov
or
cmp
jge
pusha
jl
pop
jne
in
icebp
mov
xor
or
cmc
cmpsb
mov
mov
adc
loopne
out
daa
or
dec
xchg
pop
icebp
movhps
sbb
mov
int
je
std
cs
stc
aas
or
xlat
jge
and
xchg
movsl
xchg
ficomps
test
add
jg
dec
ds
jg
popf
mov
push
add
adc
popf
dec
xor
cwtl
or
and
mov
iret
inc
sbb
dec
lds
mov
xor
int
mov
cmpsb
jns
lcall
fldl
mov
mov
sbb
pop
cmp
outsl
add
jae
jno
sbb
pop
jns
fnstcw
adc
out
subl
push
xchg
stc
cmc
xchg
push
xchg
addr16
es
ffreep
mov
mov
sub
icebp
lods
mov
cmpsb
leave
das
fcoml
leave
aas
movsb
outsb
pop
int
pusha
dec
sub
pop
add
push
mov
movsb
sub
in
stc
jge
sub
stos
mov
adc
popa
jb
pop
cmp
lret
cmp
adc
mov
push
js
jno
inc
shl
cmp
xor
sbb
sahf
imul
pop
and
arpl
mov
mov
cli
mov
stos
xchg
imul
repnz
mov
push
int
cltd
mov
fwait
les
dec
sbb
or
dec
add
movsl
repz
cmc
sti
les
jmp
fwait
pushf
jae
cmpsl
xor
out
dec
adc
mov
repnz
pop
push
push
inc
push
jb
inc
inc
aas
test
sbb
or
jl
mov
iret
in
fxch
clc
cltd
aaa
mov
mov
inc
pop
in
mov
int
out
pusha
jle
stc
cld
xor
pop
movsb
dec
mov
sbb
ja
addr16
pop
gs
es
hlt
daa
mov
aam
cltd
sti
push
movsl
lea
subb
imul
mov
nop
test
push
adc
xor
cmp
xchg
adc
mov
mov
ret
mov
inc
dec
jns
inc
icebp
popa
es
jmp
xchg
xor
push
fisttpll
aam
xchg
fistpll
bound
loope
imul
adc
test
pop
push
xchg
and
aaa
lret
fadds
push
das
mov
adc
xchg
xor
pop
mov
mov
jne
call
xor
rcll
ds
push
lods
pop
jp
test
and
or
shll
add
lods
add
aaa
sbb
sub
lods
sbb
nop
std
push
push
popa
and
pop
dec
jl
or
into
ss
mov
pushf
dec
iret
shrb
inc
pushl
mov
sarb
ja
xchg
mov
mov
sarb
cmp
cmp
rcr
jmp
xor
pop
mov
jle
pop
setno
into
inc
dec
cs
and
sbb
jbe
sub
xor
out
and
jle
scas
out
sub
mov
ret
shl
mov
or
arpl
mov
mov
push
fwait
aaa
xchg
xchg
or
sahf
mov
cmp
jmp
popa
movsb
mov
jae
xlat
nop
stc
jnp
mov
xlat
jg
pop
or
push
or
pop
pop
mov
jo
mov
shr
jnp
mov
flds
mov
shlb
rclb
xchg
cmpl
in
mov
mov
cmp
inc
sbb
cmp
push
ds
bound
sbb
movsb
mov
sahf
popf
in
jae
addr16
shrl
jns
mov
jae
mov
cmp
test
fldcw
add
push
adc
jns
in
mov
cmpsl
pop
pushf
mov
rolb
call
mov
cmpsb
fldenv
push
add
xchg
jp
xchg
nop
ret
pop
nop
repz
in
loop
movsl
cmpsl
push
pop
aad
pop
fabs
pop
add
lret
lea
mov
das
not
dec
xor
jo
test
inc
sbb
sub
or
repnz
sarl
or
jle
sub
ljmp
and
mov
xchg
and
test
sbb
shl
dec
dec
test
stos
out
idivb
aas
cwtl
jle
ret
pusha
mov
popa
mov
push
js
aaa
test
xlat
pcmpeqw
inc
mov
jg
int3
adc
push
mov
mov
jl
cmpsb
hlt
cmovno
mov
cmp
rcrl
sbb
ds
in
pop
xchg
pop
cltd
std
sbb
ret
inc
lret
ret
push
fsub
bound
add
xor
clc
jnp
fists
jnp
imul
or
ret
lcall
cmpsb
adc
sub
in
jecxz
add
stc
bound
jmp
jmp
fsts
dec
popf
sbb
add
push
xchg
add
add
push
adc
mov
mov
fucomip
xchg
push
inc
popf
mov
in
push
cmpsl
jo
xor
adc
aad
insb
mov
or
int3
leave
mov
loope
sub
fdivr
adc
das
add
xlat
pushf
fnsave
ds
in
out
xor
addl
cld
nop
int
fisubrl
popa
jb
sub
mov
imul
mull
cmc
or
fiadds
mov
inc
jl
pop
int3
add
dec
orb
and
push
mov
cmp
sub
cmp
dec
push
loopne
shlb
pop
cmp
cmp
add
test
repnz
cmp
ret
mov
adc
lea
sbb
loop
ja
sub
icebp
xchg
fcompl
outsl
rol
push
sbb
pop
aaa
sub
push
movsl
cmc
popf
dec
sub
daa
pop
pop
aaa
insb
ret
js
stos
jae
stc
xchg
sub
loope
jle
std
sbb
out
arpl
aas
mov
ljmp
inc
loope
test
es
xchg
enter
xor
lcall
out
mov
aam
test
insb
lea
nop
pop
fstps
imul
lcall
jo
cltd
repz
pop
pop
repnz
shrb
jmp
mov
jo
sub
or
bswap
xor
into
inc
mov
call
cli
xchg
xor
push
sar
imul
jbe
dec
mov
dec
iret
test
stos
call
xor
loope
in
outsb
jb
pop
frstor
sub
negb
inc
push
int
out
jbe
out
mov
data16
testl
pop
add
rclb
and
insl
hlt
dec
jecxz
sbb
loope
xor
mov
mov
mov
cmc
mov
mov
inc
outsl
aam
pop
loope
jns
mov
mov
cmpl
int3
or
xchg
aaa
in
mov
int
adc
nop
loop
aaa
and
cwtl
ljmp
cmpb
loope
sub
int
mov
push
cwtl
xor
inc
ss
push
or
mov
pop
hlt
pop
dec
mov
inc
test
xor
push
mov
iret
rcrl
leave
loop
or
xchg
lahf
adc
add
pop
shrl
aaa
jno
insl
fs
movsb
mov
ss
and
out
sbb
pop
or
jns
jns
in
shll
punpckldq
in
and
ret
lahf
out
push
push
mov
loop
stos
jle
leave
in
fnstcw
sbbb
das
inc
pop
or
jle
mov
call
and
or
data16
mov
jle
lock
pusha
popf
incb
data16
movb
add
popf
xor
mov
fs
mov
clc
push
mov
aad
cmc
sub
scas
iret
push
jl
add
inc
push
test
push
pop
lret
pop
aam
dec
shll
aad
pop
out
sahf
adc
push
sbb
push
xor
decb
mov
lods
xchg
or
and
jnp
arpl
insb
repz
outsb
aad
mov
scas
dec
insb
or
movsb
dec
add
scas
or
shlb
jns
and
incl
outsl
xor
bound
cmp
fbld
mov
add
cli
adc
and
fisubrl
fs
jmp
andb
pusha
test
and
push
cltd
fldl
cli
mov
aas
icebp
adc
sub
pop
cmp
imul
xchg
add
mov
fucomip
icebp
add
test
dec
insb
addl
push
or
daa
lds
cmp
arpl
in
cmc
jg
jle
cmp
movsb
xor
push
testl
cmp
and
ss
push
mov
cmpsl
scas
inc
je
test
std
popf
jge
dec
mov
mov
xchg
jne
ret
pop
jge
mov
push
jo
cmpsl
repnz
xlat
pop
scas
mov
cmp
inc
mov
test
insl
mov
js
xchg
int3
cmp
div
inc
loop
bound
fsubrl
aad
outsb
les
mov
hlt
xchg
movsb
inc
fidivs
rorl
push
insl
mov
or
sub
ficomps
jne
ss
mov
daa
in
mov
int3
fidivs
cli
mov
test
inc
xchg
adc
loop
jo
cmp
lea
xchg
sub
mov
pushf
pop
inc
xchg
movsl
mov
sti
push
out
mov
xor
mov
hlt
xor
rcll
mov
inc
sbb
pusha
clc
dec
int3
jg
sbb
das
sub
rcr
inc
push
sbb
add
insb
shr
push
imul
fistpll
mov
fdiv
scas
sub
setb
sbb
cltd
mov
lcall
pop
push
insb
mov
mov
aas
cmp
inc
and
shlb
sti
ja
jl
jno
repnz
cli
pop
loop
mov
pop
add
popl
stos
add
push
imul
inc
popf
mov
xor
add
xorb
and
lcall
ds
and
out
inc
add
iret
pusha
into
std
inc
cmc
adc
push
int
insb
or
pushf
shrl
lods
or
and
call
pop
fildl
dec
push
mov
inc
jge
stos
out
bound
mov
pop
es
es
xor
mov
pop
out
dec
enter
es
add
mov
jae
cltd
rcrl
data16
sbb
arpl
sub
dec
sub
lock
gs
jl
divb
cmp
cltd
jle
xchg
scas
and
std
loop
xchg
pop
int
push
inc
mov
sbb
or
cmp
add
sub
cmp
push
inc
mov
jl
jge
xchg
sub
fnsave
imul
mov
sahf
rcll
bound
inc
icebp
mov
test
out
jge
jnp
out
cli
int
cmpsb
std
fs
outsb
inc
xchg
mov
xchg
jg
enter
es
les
rcll
mov
sbb
sub
movsb
mov
lret
dec
into
add
dec
or
ret
mov
dec
sbb
mov
jge
pop
xchg
sbb
stc
mov
pop
fcmove
jb
add
push
add
mov
cmpsl
jnp
sbb
mov
add
daa
pushf
xchg
es
adc
in
cmp
adc
push
push
cltd
loopne
hlt
adc
push
mull
jns
fld
fwait
xchg
pop
arpl
mov
dec
lcall
mov
jbe
rclb
stos
push
lret
int3
dec
jmp
enter
imul
mov
imul
mov
xor
insl
notb
in
fsubr
adc
mov
sub
lods
inc
push
mov
jge
adc
adcb
daa
adc
std
add
in
into
mov
pop
jnp
xlat
notb
add
imul
pop
sub
and
push
enter
xchg
sbb
jmp
test
pushf
in
pop
or
add
imul
adc
xchg
int3
frstor
ror
adc
pop
xchg
xchg
mov
push
hlt
shlb
mov
push
xchg
push
jl
cmp
popa
in
hlt
cltd
outsb
test
fsubr
filds
ret
loopne
das
jno
lods
push
add
cmpsl
or
dec
clc
xchg
ret
rolb
pop
mov
cmp
insb
sub
xor
lret
fistl
jo
cmpsb
mov
dec
and
push
add
sbb
icebp
shl
sbb
xchg
jp
in
shll
xor
adc
mov
out
in
xchg
stc
push
inc
mov
test
add
adc
ret
jae
cmpsl
into
movsl
inc
fs
cmc
adcb
adc
hlt
outsl
cmpsl
movsb
scas
popa
ud1
push
loopne
dec
inc
sbb
sub
or
decl
cmp
iret
in
mov
arpl
out
test
mov
out
push
sub
aaa
mov
negb
mov
lods
test
cmp
push
arpl
hlt
xchg
insl
mov
icebp
shl
int3
cmp
icebp
hlt
aas
xchg
ret
xchg
shlb
lods
or
test
push
js
cltd
test
imul
into
pop
neg
aam
ljmp
cmp
mov
cmp
lret
jecxz
adc
cli
jnp
xchg
dec
leave
pusha
sbbb
lret
xorl
mov
ret
popf
push
dec
pop
pop
pop
add
or
arpl
test
mov
push
ret
aaa
xor
push
pop
xor
cmp
add
push
push
push
hlt
add
add
orb
nop
hlt
jmp
jnp
sbb
pusha
jb
push
movl
adc
push
cwtl
cmp
cmp
adc
insb
jnp
stos
adc
inc
shrl
fxch
sub
push
sub
mov
jnp
rolb
test
outsl
adc
push
sbb
mov
imul
inc
dec
sahf
dec
cld
push
lret
add
repnz
ja
out
mov
adc
cmp
mov
test
cmc
adc
mov
push
ret
icebp
insb
push
lea
adc
mov
movsl
pusha
hlt
aad
ret
pop
cmp
and
jns
jl
das
cmpb
in
lods
push
jae
add
lds
inc
pop
fstl
mov
out
pop
ljmp
roll
leave
adc
jp
xor
xor
mov
test
in
mov
rol
out
adc
fbstp
testb
xchg
inc
xchg
or
lret
sbb
aas
popa
sub
roll
add
shll
pusha
divps
lds
jns
xchg
hlt
pop
jle
icebp
xlat
mov
ss
cli
push
xor
in
adc
jb
sahf
jecxz
jp
js
pop
dec
scas
jns
incb
mov
in
rep
cli
fisttpll
inc
scas
pop
mov
je
stos
dec
xchg
ds
xchg
pop
iret
push
xor
mov
je
hlt
out
stc
jne
push
daa
cwtl
int
mov
mov
test
imul
pop
sbb
stc
pop
das
movsb
fdivrs
adc
pop
or
fistps
and
fiaddl
call
jp
dec
add
in
lock
cmp
fcmove
xor
ret
dec
das
shll
xchg
rolb
xor
and
pop
inc
push
jg
sub
ret
or
int3
rcr
das
adc
in
fidivs
in
out
test
mov
jae
fidivl
and
jae
movsb
jmp
enter
leave
addr16
rorl
adc
dec
cmpsl
jmp
sahf
sbb
leave
out
adc
fstpl
cmp
or
push
pop
fdivl
in
fsubl
and
mov
imul
popf
mov
inc
movsl
fnsave
subl
cmp
lahf
ret
jae
popa
pop
mov
cmpsb
int
icebp
int3
jne
mov
xchg
dec
jle
xchg
push
cmpsb
aam
pop
mov
push
sti
mov
adc
and
mov
imul
mov
and
loope
xor
repz
cmc
repnz
sarl
and
jbe
xchg
xchg
fbld
xchg
mov
jo
xchg
mov
push
cmp
jb
enter
mov
cld
inc
sarl
dec
jae
push
push
jae
xor
xchg
inc
jle
cmp
fs
dec
hlt
dec
call
fstp
dec
iret
ret
mov
popf
jns
mov
or
lock
loopne
lea
or
rcr
scas
pop
ret
test
lock
or
bt
out
ss
cli
adc
jp
cmpsl
cmpsl
stc
mov
xchg
jmp
stos
fstpt
lahf
jecxz
mov
dec
push
dec
mov
mov
mov
clc
xor
push
pop
arpl
outsb
pushf
mov
int
daa
inc
xor
cmpsb
mov
addl
mov
imul
jge
pop
data16
xchg
and
roll
adc
movl
icebp
std
jmp
incl
imul
lea
mov
pop
cmc
lods
lcall
mov
sbb
movsb
sub
daa
scas
lods
cmp
inc
lods
orb
add
dec
jle
in
jae
add
pop
adc
sbb
add
loopne
cli
lds
jge
adc
lods
and
jae
jnp
nop
jo
negl
sbb
cmc
lds
pusha
cmp
push
pop
test
sub
inc
mov
andb
aad
out
insl
push
fimuls
and
sahf
stc
pop
xchg
es
fmuls
cmp
aad
pop
xchg
stos
call
fildll
mov
repz
cmp
stos
ja
rcrb
fidivrs
xor
mov
insl
pushf
push
rcll
lds
pusha
fsts
inc
xchg
ja
icebp
mov
sbb
mov
or
push
xchg
hlt
pushf
xor
add
mov
xor
in
mov
hlt
shll
and
sub
fwait
add
outsl
mov
inc
mov
or
gs
gs
dec
andl
xchg
bnd
inc
mov
mov
push
cmc
insb
aas
nop
cmp
xchg
push
loop
pop
and
jg
rcll
add
cltd
mov
ror
push
lds
iret
push
in
or
push
push
pop
pop
divl
and
xor
aad
push
imul
xor
daa
xor
add
mov
cltd
jo
inc
outsl
enter
adc
mov
xor
xlat
push
lods
fistpll
inc
out
call
mov
dec
subl
incb
and
aas
pushf
mov
int3
fldt
and
aam
into
and
lods
sbb
roll
sub
mov
cmc
nop
in
jo
add
enter
bound
ficoml
es
cmp
lahf
lcall
je
xor
jl,pn
lds
mov
xor
push
mov
movsb
popf
in
xchg
test
inc
mov
out
cltd
mov
add
dec
je
or
sub
sbb
push
inc
sub
pop
dec
xor
popf
inc
fists
sub
les
mov
add
call
or
mov
jae
ret
cmp
dec
sbb
shlb
cmpsl
jg
inc
push
mov
jmp
push
lods
adc
jle
adc
push
mov
cmpsb
test
daa
adc
xor
cmp
fiadds
lock
inc
into
sahf
insl
mov
pop
mov
or
jg
mov
je
and
loope
fsts
mov
movsb
push
push
jnp
loope
xor
data16
repz
push
mov
mov
add
sbb
cmp
popa
sti
add
stos
sbb
xor
jl
fdivrs
aam
xchg
sarb
cmp
je
mov
or
outsb
lret
pop
shl
adc
push
xchg
je
loope
mov
hlt
mov
push
imul
sbb
cld
pushl
sbbl
xchg
enter
jge
cmp
xor
jg
adc
xor
aaa
fildll
je
inc
mov
pop
jbe
fbld
jnp
mulb
jg
push
add
mov
ds
add
inc
mov
mov
inc
outsl
arpl
lret
cmp
jp
cwtl
add
mov
decl
int
cs
sub
cmpl
fcoml
xchg
dec
lea
mov
mov
cmp
adc
mov
jmp
xchg
pop
js
in
and
jmp
mov
cwtl
daa
sarb
or
xor
adc
mov
mov
jnp
pop
loop
nop
rcrb
fwait
pop
ret
stc
push
and
stc
in
movsb
ret
fimull
insl
pop
enter
cltd
in
data16
mov
pop
decl
sub
insl
sbb
popa
cmpsl
pop
jnp
push
mov
mov
ljmp
push
ret
adc
cmp
mov
xorb
lcall
ja
pop
mov
inc
jns
push
push
dec
jb
lock
and
lret
cmp
inc
repnz
aad
cmp
and
mov
imul
leave
sbb
mov
xchg
cmpsl
out
pop
jns
icebp
inc
dec
in
sub
sub
gs
push
cmpsl
andb
mov
xchg
call
adc
cwtl
dec
fwait
or
push
push
daa
push
and
mov
clc
and
aaa
stos
mov
push
sub
gs
scas
mov
jne
les
in
dec
iret
sub
hlt
loope
inc
xchg
push
add
adc
call
loopne
xor
lahf
push
jge
inc
movsb
jno
xchg
sub
out
cmp
mov
popf
not
dec
pop
lds
and
fistpll
or
fldenv
mov
lock
xchg
lea
in
outsl
dec
push
mov
insb
mov
aas
rol
jp
inc
pop
hlt
loop
fidivrs
jle
add
mov
dec
push
sahf
lods
in
sbb
daa
fsts
inc
imul
fs
out
out
mov
and
push
jno
cltd
hlt
aaa
shll
mov
mov
sub
cmp
and
mov
aad
mov
pop
xor
sbb
out
stc
jge
pop
andb
mov
xor
xchg
sub
push
loopne
sub
pop
xor
inc
jnp
xor
loopne
mov
add
sbb
jecxz
pop
mov
sbb
mov
cmp
push
mov
lcall
std
mov
xor
adc
xchg
pop
dec
pop
sub
daa
sub
mov
inc
jle
rclb
add
push
lret
stos
mov
pop
xor
fmuls
add
stos
aaa
mov
in
sub
repnz
mov
shlb
lahf
rorb
loope
mov
and
jno
mov
mov
aas
aas
adc
xor
std
stos
xor
in
xchg
mov
inc
fwait
jmp
stos
test
push
inc
push
aaa
sbb
sub
inc
fbld
mov
out
lea
inc
jmp
call
icebp
loop
sbb
pop
jle
mov
movsl
int3
mov
cmp
dec
inc
add
ja
enter
pop
in
dec
outsb
inc
pop
iret
faddp
add
dec
aad
adc
dec
ret
loope
xor
icebp
or
movsl
xor
pop
push
incb
xor
lods
cs
lret
xor
push
add
cmp
repnz
push
sub
lods
ficoml
and
xchg
call
xchg
ret
mov
scas
rclb
jl
test
das
add
leave
mov
shlb
push
cmpsl
add
cli
push
sub
pop
pop
out
pop
loope
jmp
loop
enter
cmp
fs
add
or
add
pop
in
mov
stos
mov
pop
sub
test
js
cmp
or
pushf
cmpsb
jbe
pop
mov
sub
in
cli
push
and
dec
mov
or
dec
dec
stc
mov
mov
daa
or
dec
imull
lret
outsl
aas
cmp
adcb
enter
pop
pushf
xor
ja
and
mov
or
mov
xor
xor
pop
popa
xor
sbb
push
lds
xchg
add
cmpsl
jb
xchg
lods
sti
in
mov
jb
daa
rorl
and
xchg
push
cld
stos
aaa
push
cmp
out
ja
and
mov
ret
and
mov
fstl
shrb
stos
mov
add
mov
jg
push
mov
dec
xchg
or
outsb
push
jbe
cmp
mov
xchg
shll
loope
push
pushf
ficompl
outsl
sbb
in
scas
cmp
pop
xchg
dec
mov
dec
jmp
and
inc
add
cmp
rcll
mov
jp
dec
adcl
jle
scas
or
pop
idiv
es
jo
call
aam
bound
or
pop
mov
popa
outsb
popa
adc
mov
bound
enter
das
push
scas
cmp
dec
mov
jno
add
dec
gs
in
lahf
ss
ds
add
jns
push
xchg
jne
xor
jle
jb
pop
and
rcrb
dec
pop
idivb
cs
js
mov
sbbb
pop
sbb
pop
xor
dec
bound
cmp
mov
mov
js
mov
cmc
sarb
scas
and
loopne
mov
ficompl
scas
jo
xchg
xchg
js
iret
jg
orb
icebp
ret
andl
jmp
and
fnstcw
inc
cmp
cmp
inc
shlb
dec
mov
pop
mov
mov
adc
out
fstps
rol
mov
stc
jb
mov
inc
add
mov
std
push
aas
jo
adcl
icebp
xchg
sti
cmpsl
ret
fidivl
dec
mov
or
or
cmp
push
sub
out
inc
data16
pushf
jg
adc
in
adc
leave
fstps
inc
sbb
cmp
mov
inc
push
int3
dec
jae
cltd
fidivs
xchg
adc
out
mov
mov
xor
lret
push
sbb
fs
dec
fwait
es
repnz
and
ror
pop
pushf
mov
jg
add
test
lds
in
adc
pop
lahf
mov
nop
jne
xor
or
mov
dec
inc
mov
add
mov
loopne
pop
or
or
popa
xor
dec
repz
dec
dec
aad
pop
rorb
and
inc
xchg
incb
outsl
into
inc
push
xchg
adc
insb
pusha
out
nop
push
in
mov
test
jl
icebp
and
adc
mov
sbb
sbb
cmpsb
fwait
inc
push
xor
sbbb
sbb
cmp
push
mov
dec
ljmp
pushf
lahf
ret
in
fdivrs
andb
movsl
xor
js
xor
inc
shll
incl
jo
mov
in
cwtl
popf
shlb
jl
mov
aas
je
jnp
insb
test
sbb
jne
sub
aad
popa
sub
sub
lock
sbb
xchg
jae
inc
daa
sub
xchg
pop
pop
adc
adc
mov
in
stos
mov
mov
sbbb
mov
jle
movzbl
inc
fldl
or
mov
dec
int
icebp
sub
in
hlt
pop
loope
inc
scas
xor
aaa
mov
or
pop
icebp
sti
add
add
mov
or
data16
cmc
and
pop
repz
leave
dec
xchg
jno
movsl
ds
or
xor
xchg
push
jno
xor
les
inc
push
ds
cs
lods
lahf
jno
inc
lahf
pusha
inc
add
mov
aad
repz
in
xor
call
mov
icebp
and
dec
int
adc
cltd
mov
or
mov
jl
jnp
test
jnp
sub
scas
enter
fistl
cmp
das
pushf
push
push
lahf
jb
fiaddl
pop
inc
or
xchg
mov
cli
fdiv
pop
xchg
in
sbb
and
imul
sbb
inc
cmpsb
push
adc
cmp
and
dec
jecxz
jecxz
push
test
iret
ret
lock
mov
push
cmpsb
pop
sahf
push
adc
adc
test
adc
dec
cwtl
shr
push
data16
ss
mov
lds
xor
je
sbb
loop
sahf
data16
movsl
fsubl
mov
cli
in
shll
clc
mov
addb
pop
dec
sbb
mov
jmp
jle
pop
jp
or
fimuls
fwait
ds
fnsave
jns
jecxz
fwait
dec
adc
inc
cmp
xorb
jo
push
clc
jmp
mov
lods
adc
inc
ljmp
and
ljmp
xor
push
mov
cmpsb
scas
pusha
ss
aam
mulb
shrl
pop
cmc
xchg
or
repnz
inc
xchg
xchg
in
adc
lods
les
imul
test
mov
push
sub
xchg
imul
insl
jbe
int
sbb
xchg
pop
test
loope
movsl
xor
pop
fs
fyl2xp1
lret
xchg
and
mov
lret
cmp
imul
out
mov
mov
out
sbb
dec
icebp
outsl
lds
repnz
fwait
insl
add
jecxz
jb
dec
orb
fucomp
cmp
adc
or
sub
nop
je
mov
repz
mov
sbb
jmp
pop
and
fadd
pop
sub
jb
inc
xor
xor
shll
pop
xchg
test
jge
cwtl
sub
lods
dec
mov
sti
cmp
lea
in
jmp
test
push
cmp
out
xchg
pop
pop
mov
dec
xchg
inc
or
xchg
jmp
inc
rorl
add
insb
subl
mov
cwtl
call
push
mov
call
jp
xchg
clc
test
xchg
jle
or
push
icebp
repnz
jge
aas
inc
mov
jg
xlat
pop
data16
fcoms
push
vpcomud
std
mov
xor
aaa
add
xor
jo
or
xchg
mov
adc
xchg
push
pop
mov
push
popf
add
insb
jo
mov
add
pushf
inc
xor
inc
scas
xchg
jmp
inc
lds
sub
pop
or
xchg
inc
rorl
xchg
pop
sbb
cmp
sub
out
jecxz
jg
pop
lret
and
dec
test
shrl
lea
fdivr
insb
popf
stos
mov
sbbl
pop
lret
cmp
addb
in
jns
cmp
iret
loopne
or
add
lret
add
icebp
push
adc
ficompl
test
inc
mov
push
xor
int3
jge
scas
mov
jbe
push
pusha
shrl
test
ss
pusha
stos
aaa
pop
dec
sbb
inc
mov
mov
out
popf
jecxz
mov
jl
mov
lea
jo
cmp
dec
insb
mov
out
in
je
push
sbb
mov
cmp
mov
nop
xor
xor
xor
mov
inc
mov
lcall
dec
test
rorb
push
mov
jmp
sbb
xchg
cmp
mov
cmp
mov
jle
pop
and
ljmp
xorl
in
adc
xlat
test
daa
ss
insb
in
call
dec
and
ret
mov
pop
add
push
push
cmp
ficompl
xor
sub
iret
stc
push
int3
pop
stc
es
clc
jmp
popa
and
mov
lock
test
jne
mov
imul
ss
lods
mov
mov
stos
pop
sbb
je
xor
sbb
push
jbe
xor
sbb
ljmp
sbb
xchg
ss
or
sbb
sbb
cmp
inc
cmp
in
in
out
cmp
dec
dec
xor
push
jo
fdiv
aaa
outsl
add
push
and
cli
xchg
rorl
mov
sbb
push
cmp
les
inc
mov
push
and
push
lea
push
push
xor
cmp
mov
jmp
mov
mov
cmp
or
adc
in
nop
dec
int3
loope
sbb
jmp
into
rolb
subb
insl
pop
dec
push
aaa
fbld
clc
je
dec
dec
add
mov
nop
xchg
call
iret
mov
cs
cmpsb
dec
mov
pop
rorb
andl
scas
outsb
out
sub
cmp
sbb
loop
pop
arpl
hlt
cmpb
clc
jge
ret
orb
adc
sbb
xchg
cmpsb
mov
test
sub
jecxz
cmp
fs
inc
imul
or
sub
cmp
test
sbbl
shrb
mov
cltd
outsb
das
mov
mov
mov
sbb
mov
dec
outsl
pop
daa
push
mov
into
mov
jne
rcl
andb
jns
xchg
inc
cwtl
mov
fisttpl
and
adc
lahf
lret
push
or
inc
xor
adc
fwait
or
test
adc
lds
gs
insb
dec
fidivs
sub
adc
jnp
pop
jnp
and
pop
fdivs
pop
adc
inc
lcall
lds
cmp
lcall
xor
pop
movsl
cmp
lock
push
fdiv
adc
aad
mov
lret
add
imul
lds
scas
je
mov
sbb
inc
sub
cmc
pop
xor
out
inc
es
stos
mov
push
jnp
insl
jmp
cmp
rcrl
mov
cmp
adc
out
push
orb
sbb
add
loop
movsl
xor
sub
add
mov
or
out
call
jp
in
cwtl
repz
fcmovbe
testl
iret
mov
and
inc
lret
inc
mov
gs
mov
sti
mov
mov
or
xchg
jno
and
xor
adc
test
add
lock
jl
loop
loope
ret
jb
out
sub
ret
stc
mov
pop
or
mov
jae
push
dec
mov
add
bound
stos
into
mov
sbb
sahf
jno
lds
mov
mulb
push
sub
imul
cmpsb
dec
mov
adc
in
mov
lods
mov
adc
push
cmp
and
call
pop
sbb
in
jle
push
dec
ss
fstpt
push
js
pushf
jg
cmp
adc
stc
sbb
mov
mov
movsl
jl
pop
cmp
sbb
sbb
cmpl
cmp
sbb
xchg
movsb
inc
test
sub
sti
and
xchg
nop
add
xchg
notb
xchg
xlat
adc
inc
push
adc
inc
sbb
cmp
aas
or
into
adc
jae
fldcw
call
sub
test
and
in
out
dec
jle
pusha
xchg
push
movsl
and
push
xor
mov
filds
mov
jp
jnp
mov
pop
outsb
xchg
insl
testb
and
and
or
and
std
jo
inc
push
pop
and
xor
roll
lcall
sahf
loopne
rolb
dec
jl
xchg
leave
jbe
mov
ljmp
push
fcmovne
adc
mov
inc
sub
fs
js
lret
mov
pop
test
pop
push
mov
fld
xor
leave
mov
mov
in
shrl
push
fildll
out
sub
sub
loopne
xor
add
movsl
in
fidivl
push
or
in
andb
shll
in
fnsave
adc
push
out
xor
jbe
les
scas
mov
xor
lds
xor
sub
mov
daa
cmc
xchg
push
mov
add
mov
js
js
push
popf
adc
rcrl
std
pop
icebp
cs
xchg
nop
idivb
andb
mov
ficoms
adc
pop
loopne
push
push
sbbl
pop
pop
lahf
xchg
mov
les
sti
mov
mov
xor
outsl
inc
adc
jne
cs
adc
inc
dec
push
xchg
and
inc
testl
mov
data16
test
out
fimull
push
stos
xor
sbb
loope
shlb
jmp
xchg
jge
cmp
mov
jnp
sub
and
cs
loopne
test
pop
or
mov
loopew
jmp
push
lock
cmpsl
out
shll
mov
and
fstl
leave
pop
popf
out
fwait
lcall
xor
divb
lret
sahf
shll
fistpll
fisttpll
outsb
sbb
adc
jp
imul
je
in
sahf
jne
push
inc
iret
push
cmpsl
popf
dec
and
jnp
movlhps
aaa
cmp
lret
outsb
into
xchg
xlat
pop
mov
xor
lods
xchg
shlb
xlat
in
or
mov
inc
adc
inc
mov
fwait
mov
xor
sub
mov
cmp
xchg
stos
or
jle
test
stos
push
aas
jge
int
testb
leave
push
shrl
iret
out
sbb
lock
jbe
mov
pop
push
std
mov
or
mov
add
ret
test
sub
mov
mov
jno
sub
inc
push
cmp
jo
adc
lea
pop
mov
call
or
adc
cmc
sbb
cmp
push
sub
or
and
mov
xor
sub
cmp
mov
and
mov
dec
mov
cmp
hlt
arpl
aad
repnz
and
cld
jnp
pop
lods
fbstp
mov
inc
ljmp
pusha
xor
adc
imul
fsubl
sub
mov
xchg
mov
sbb
mov
cld
push
xlat
aaa
inc
mov
stos
rorl
push
push
and
rcll
mov
stc
xchg
mov
push
out
jmp
xchg
out
das
mov
inc
sahf
push
jnp
add
mov
ja
dec
ss
notb
sub
ja
mov
adc
and
mov
pop
out
inc
sbb
dec
jno
add
xchg
cmp
adc
xor
pop
call
dec
cmc
pop
mov
dec
pop
outsb
insb
mov
sub
mov
push
mov
dec
test
movsl
mov
fcomps
leave
fsub
lds
stos
fistpll
add
push
sub
jp
shll
sbb
rcll
jbe
fdivrs
fcom
inc
mov
mov
aad
adc
push
into
into
ljmp
adc
inc
daa
dec
xor
dec
sub
mov
pop
and
adc
repnz
and
xchg
dec
lret
lcall
push
sub
outsb
mov
jne
inc
ds
iret
shll
xchg
xor
cmp
sbb
push
cli
cmp
mov
xchg
dec
insb
mov
dec
add
pop
test
xor
rolb
pop
ret
dec
jns
xor
or
or
sbb
xchg
enter
sub
cld
jge
adc
xor
test
mov
adc
fidivrs
data16
rolb
popa
shll
xlat
shll
stos
jno
outsl
lahf
jo
xchg
mov
mov
push
into
cmc
jmp
jl
fmuls
or
mov
into
fsub
cmc
pop
lret
add
test
ja
mov
outsl
test
lds
or
xor
notl
ret
lret
gs
outsb
sub
sbb
xchg
cmp
lock
nop
shll
insl
mov
jae
les
pop
ja
scas
jmp
xchg
les
add
cmp
push
pop
push
scas
cmpsl
or
and
jne
xchg
cmp
sub
ja
and
mov
push
fidivs
out
lds
push
xchg
rolb
push
xchg
xor
leave
jmp
mov
hlt
ss
jmp
pop
jno
xor
cmp
xor
xlat
fisttpl
jbe
stos
dec
add
push
or
fninit
mov
adc
add
inc
mov
cltd
js
xlat
xchg
clc
lea
pusha
and
pusha
sbb
ljmp
dec
out
fsub
jno
sbb
jecxz
push
clc
mov
sub
mov
push
pop
cmp
or
xchg
int3
arpl
push
jns
inc
jns
lret
mov
je
pop
dec
pusha
int3
mov
jp
mov
ds
pop
aaa
je
repnz
sbb
mov
repz
pusha
push
mov
cmp
lcall
push
adc
outsb
cltd
xlat
popf
loope
in
pop
adc
mov
cmpsb
jo
movsl
int
fdivr
push
loopne
int
pop
inc
push
int3
sbb
xor
outsl
ret
and
bnd
dec
loop
mov
inc
jecxz
add
in
or
ljmp
inc
inc
push
mov
adc
cmp
xchg
jge
or
andb
push
stos
outsb
aad
fisttpl
or
test
dec
lret
push
in
test
notl
mov
call
dec
adc
mov
mov
push
jo
in
jge
lahf
mov
loopne
stos
pop
and
adc
pop
je
push
cltd
xor
jle
lods
mov
ljmp
das
in
scas
outsb
mov
popa
mov
cli
in
outsl
lret
aas
jge
inc
sbb
pop
mov
fyl2xp1
pop
add
in
imul
mov
sub
hlt
rcrb
pushf
mov
cmp
pop
test
repnz
dec
jecxz
push
sbb
faddl
add
setb
dec
xchg
xlat
sub
addl
dec
inc
inc
mov
out
dec
filds
xchg
mov
loope
test
cmpl
jge
lock
ljmp
push
les
loop
and
or
fldenv
lea
push
dec
jne
inc
mov
movsl
push
cmpsb
arpl
cmc
push
aaa
ja
jae
loope
daa
xor
mov
repnz
xor
pop
jl
pushf
fcomi
ret
sub
cmpsl
mov
fs
leave
mov
mov
sub
iret
test
xlat
and
fcoml
in
jg
and
jp
lds
push
rorb
sbb
push
jb
addr16
inc
ds
lahf
stc
xchg
outsl
sub
mov
repnz
loope
shl
push
or
mov
clc
sbbb
and
adc
pop
js
out
sbb
lcall
aad
jmp
mov
rolb
lds
jo
jbe
jg
jp
push
insb
dec
movl
in
mov
popf
xor
dec
into
hlt
es
and
dec
mov
jecxz
sbb
imul
cld
xchg
and
popa
push
adc
fld
jp
pop
push
add
mov
or
add
mov
pop
mov
out
mov
nop
ljmp
cmp
pop
inc
bound
jb
mov
pop
pop
fisubs
push
int
lahf
sub
and
mov
sti
xchg
iret
and
and
pop
adc
push
xchg
ret
js
lahf
xchg
mov
inc
ftst
lret
test
shlb
mov
lock
hlt
daa
xor
xchg
jae
sub
outsl
lahf
mov
fucomip
cmc
jb
xchg
mov
mov
dec
cs
jmp
popa
dec
xchg
mov
cmp
fadds
inc
push
and
fbstp
das
or
in
pop
movsb
or
push
shl
push
cmp
jp
test
leave
mov
add
lahf
sahf
lret
imul
cmp
insl
cli
xorb
jle
ret
and
cmp
mov
xchg
pushf
js
shll
fistl
mov
lret
sahf
sti
mov
push
jp
cmp
fs
lcall
push
xor
mov
testb
pop
enter
int3
cmp
jb
ss
mov
and
pop
into
lock
aas
lea
call
push
jge
stos
mov
sahf
inc
repz
adc
jns
repnz
pop
test
sahf
cmc
inc
add
sub
sbb
cli
lds
ljmp
and
ljmp
in
dec
pop
add
scas
xlat
jl
mov
ja
jbe
imul
sub
xor
sbb
add
mov
adc
or
xchg
xchg
push
mov
or
repz
jmp
imul
push
iret
loopne
dec
cmp
hlt
push
std
jo
jno
mov
sahf
mov
data16
cmp
jecxz
stc
shlb
nop
push
pop
movsb
add
imul
sahf
int
js
frstor
and
and
adc
sub
cmpsb
add
fstpl
fs
xchg
and
pushf
pop
and
xor
or
ja
jg
inc
cmp
lahf
mov
or
fcomp
lea
loopne
daa
dec
add
xor
pushf
jecxz
sub
fistl
add
or
mov
push
data16
or
mov
and
cmc
ret
or
xor
xor
lock
iret
adc
imul
pop
fnsave
xchg
adc
sub
add
popf
sub
xor
rclb
inc
push
movl
pushf
das
call
hlt
cmpsl
test
or
pop
xor
into
mov
insb
adc
inc
lret
inc
or
adc
stc
inc
test
out
in
push
test
pop
imul
pop
inc
or
ljmp
adc
xchg
shrb
loope
mov
loopne
call
add
pushf
addr16
pushf
cmp
lods
lods
cmp
adc
or
out
xor
and
xchg
out
mov
mov
sub
lahf
dec
adc
sti
lcall
lret
aam
add
shll
dec
mov
stc
dec
je
jno
add
mov
xchg
fwait
pop
addr16
pop
xchg
mov
ficompl
mov
mov
cwtl
leave
inc
inc
repz
mov
jae
jno
bound
insl
xchg
inc
xchg
in
xor
pop
cmp
lret
rcrb
out
outsl
scas
addr16
adc
out
inc
jp
cmp
or
fdivrs
and
inc
xor
pop
mov
out
or
cmp
into
mov
aaa
sbb
cmp
or
ret
jne
mov
and
outsb
iret
sbb
or
outsl
jb
lock
fcompl
sub
push
in
sbbb
mov
cltd
ret
popl
jno
movsl
mov
mov
xor
inc
push
jmp
dec
cmp
or
mov
stos
movsb
popf
repz
push
xchg
sub
inc
out
xorl
dec
int3
lahf
int
popa
push
sbb
pushf
jo
and
imul
popa
rolb
mov
stos
dec
ret
ficompl
pop
aaa
insl
lahf
aas
push
mov
jecxz
sbb
push
xchg
mov
shrb
outsb
aas
add
fimuls
push
mov
xlat
insb
inc
and
cli
jb
ljmp
leave
push
cli
or
insl
scas
cmpsb
mov
xlat
jp
mov
rclb
pop
in
fstpt
mov
int3
movsb
push
xor
inc
inc
xchg
adc
enter
jmp
outsl
push
mov
out
aad
push
icebp
xlat
f2xm1
and
push
aad
cwtl
mov
or
cltd
fstp
and
cmc
icebp
add
adc
data16
inc
repz
lods
out
and
xchg
pop
or
xchg
xchg
aad
jecxz
pop
std
lret
stc
in
pushf
movsb
scas
ja
rorb
pop
nop
fdivs
cmp
mov
and
xor
std
adc
fisttpll
adc
mov
push
adc
stos
int3
adc
push
pusha
in
shlb
aam
in
scas
mov
pop
mov
ror
scas
mov
add
cmp
ss
adc
xlat
push
imul
ret
fwait
inc
push
xor
xchg
push
jbe
mov
push
out
xchg
add
pop
out
fs
fbstp
pop
cmp
iret
ret
insb
pop
test
mov
adcl
pop
inc
ljmp
inc
out
stos
cmp
mov
hlt
insl
cmc
pop
push
pop
popf
gs
sbb
or
daa
add
icebp
mov
lret
jne
scas
dec
and
fdecstp
out
sbb
leave
pop
pushl
imul
and
jno
cwtl
movsb
dec
bswap
or
or
jmp
or
test
jae
jmp
int3
add
mov
xchg
push
pop
rclb
or
dec
xchg
pushf
sti
cmp
bound
xor
pop
pop
jp
sar
xchg
pushf
mov
outsl
push
dec
lret
addr16
sbb
lret
cmc
jbe
dec
mov
jge
fisttps
xor
push
out
movsl
mov
xchg
mov
inc
fidivrs
sub
dec
stos
dec
add
or
clc
inc
dec
push
aaa
das
pop
popl
mov
or
scas
mov
xor
scas
in
jnp
inc
out
xchg
test
cmpsl
mov
sbb
test
test
pop
into
mov
lcall
js
dec
jo
or
loope
pushf
sbb
sub
rcrb
pop
data16
out
mov
lods
xchg
mov
sbb
out
push
stos
movsl
mov
dec
roll
andl
xor
add
iret
enter
loop
inc
out
push
mov
scas
mov
push
icebp
mov
shr
mov
push
inc
sub
push
js
and
loopne
mov
dec
mov
andl
cmp
or
adc
inc
xchg
das
lea
scas
pop
or
int3
adc
ljmp
cmc
dec
xchg
in
repz
mov
mov
sbb
repz
push
mov
jp
cli
and
out
leave
filds
jno
repz
jo
lret
cmp
inc
xchg
icebp
cmp
int
scas
xor
pop
adc
scas
sahf
fisubrs
jp
scas
push
mov
sub
cwtl
cli
scas
sub
int3
ret
in
jmp
mov
aad
push
jl
movb
notl
cltd
jne
cmp
jne
push
mov
mov
dec
dec
dec
cmp
les
les
daa
cwtl
call
or
inc
in
sub
jecxz
jb
pop
jmp
xlat
scas
out
cmp
js
into
jge
inc
or
push
push
daa
ret
jo
xorb
and
adc
fisubrl
sub
xor
mov
hlt
sti
out
cmp
dec
imul
lahf
into
push
jmp
and
lock
out
add
test
out
data16
or
adcb
sbb
fstl
jmp
push
dec
in
push
gs
pop
xchg
push
mov
cmp
neg
push
and
into
pop
mov
mov
adc
pop
bound
aaa
pop
cmp
pop
loope
aaa
push
pop
fs
mov
ret
jbe
dec
xchg
sti
and
push
jl
mov
and
in
addr16
mov
or
push
test
loopne
jmp
lods
je
test
push
fwait
leave
ret
mov
mov
data16
jno
inc
xchg
pop
pop
pop
ret
cmc
movsl
xchg
mov
jp
adc
int3
jb,pn
pusha
imul
lcall
mov
cmc
negl
sbb
jge,pt
out
cmp
std
adc
mov
sbb
nop
xor
gs
jb
push
pushf
sbb
orb
xchg
out
dec
mov
xchg
push
mov
in
rorb
cli
mov
pop
xor
subl
into
pop
push
jg
mov
loopne
add
adc
lret
mov
cmp
or
fdivl
iret
sbb
mov
pop
adc
xor
nop
mov
mov
adc
stos
mov
out
push
insl
jbe
push
mov
pop
mov
or
out
das
test
or
les
dec
shrl
xchg
outsb
xchg
inc
div
fs
std
dec
mov
cltd
push
arpl
bnd
adc
inc
sub
cld
mov
jg
hlt
xchg
jmp
sbb
lret
mov
adc
fbstp
hlt
add
cmpsl
test
push
popf
mov
in
sti
fstpt
mov
dec
xchg
lea
loopne
insb
iret
decl
lods
push
jno
outsl
push
add
sahf
xchg
jbe
repnz
lret
int
add
lret
aaa
sti
das
xchg
or
std
rcr
stos
xchg
ds
jno
andb
cld
loopne
sub
ja
int
fisubrl
dec
adc
inc
jae
lret
push
cs
jmp
fsts
and
testb
jmp
lcall
out
mov
popa
je
sub
movsl
rorl
sub
push
dec
fnsetpm(287
std
dec
insl
mov
push
into
into
rcrb
xor
or
push
jecxz
adc
jmp
daa
sti
sub
xor
mov
dec
or
push
jae
jp
repz
mov
mov
inc
mov
xor
std
cld
in
xchg
je
mov
cmp
cmp
mov
mov
cltd
imul
pop
cmp
push
cmp
cmpsb
loopne
aas
pushf
fistl
movsl
fistpl
xor
pop
out
aad
cmp
stos
insb
fnstenv
push
mov
push
push
pop
into
es
jge
cld
imul
mov
pusha
xor
xor
inc
xchg
pop
mov
fisubrs
stos
jp
dec
int
out
jns
pop
inc
mov
adc
pmuludq
jle
sub
sub
xchg
inc
lea
jmp
in
addr16
out
xor
int3
inc
jne
add
dec
ss
enter
aam
xor
cmp
adc
or
jp
inc
xlat
xlat
xchg
fadd
popf
rorb
ja
xchg
dec
repz
and
or
push
ret
inc
jno
mov
aad
ret
in
lods
xchg
cmp
sub
subl
cmp
addr16
push
fnsave
roll
mov
sbb
mov
lahf
sbb
sub
jg
ficompl
jns
popa
pop
test
xor
stc
aad
fcoml
sbb
sbb
pop
and
test
pop
xchg
mov
sbb
add
and
jmp
dec
iret
or
dec
rcll
add
les
mov
xorb
push
push
add
mov
mov
inc
cmc
inc
clc
sahf
loopne
fimuls
and
jb,pt
leave
sbb
adc
imul
pusha
setne
leave
push
out
mov
fadd
cld
mov
cs
imul
push
push
jne
sub
mov
mov
push
stc
jbe
jb
mov
mov
mov
and
leave
jbe
xchg
addr16
lods
outsb
mov
sbb
sub
dec
les
lcall
pushf
fmuls
sbb
out
and
stos
sub
leave
jg
insl
inc
lock
push
aaa
leave
sub
dec
sub
inc
sub
cmpl
fldcw
lea
fsts
icebp
add
sub
hlt
mov
sbbl
pmullw
and
xor
xor
lods
leave
sti
sbb
movsl
test
xchg
sbb
out
pop
out
mov
mov
adc
push
jo
hlt
pop
out
mov
fs
sbb
repz
lret
cmp
jns
mov
testb
aam
or
clc
push
sahf
inc
inc
inc
sub
xchg
imul
inc
xor
push
add
and
inc
call
cld
les
sub
lds
add
call
lods
shl
insl
pushf
imul
inc
call
add
sti
add
je
or
aad
jecxz
pushf
xchg
xor
inc
test
enter
xchg
int3
cmp
idivb
cmp
lock
fstp
aam
lock
pop
inc
pop
cmp
push
cld
pop
push
mov
test
mov
stos
lock
mov
xor
ljmp
xchg
testl
loopne
scas
lret
ss
push
movsl
or
les
pop
out
push
xor
aas
es
jbe
fldt
ds
pop
insl
iret
sti
mov
push
dec
xor
inc
and
xor
insw
sbb
xchg
push
lcall
mov
movsb
or
mov
cs
int
enter
adc
dec
dec
sti
xchg
popa
and
pop
push
cmp
insb
mov
hlt
mov
arpl
pop
mov
addr16
je
and
xor
mov
xchg
jmp
mov
xchg
aam
outsb
add
add
cmc
mov
and
inc
inc
out
and
mov
push
bound
sbb
sbbb
mov
jecxz
sub
cli
push
lods
repz
sub
adc
cmp
mov
movsb
mov
mov
idivw
rorl
fldl
pop
mulb
mov
pop
pop
or
pop
push
mov
dec
enter
add
in
frstor
shr
jle
ds
mov
jae
lea
fcompp
inc
std
jmp
mov
test
cmpsl
in
pop
movsl
scas
jbe
add
js,pn
xor
adc
imul
call
pusha
mov
cmpl
addr16
fcmovnb
jbe
or
arpl
pop
push
push
jae
in
fadd
push
dec
jb
mov
enter
pop
pop
sbb
mov
gs
cmp
leave
push
xor
adc
cmc
mov
jle
or
stc
sbb
ret
gs
dec
pop
cmp
add
outsl
inc
sbb
pop
cmp
add
pop
sbb
dec
loopne
arpl
jbe
mov
jnp
xchg
sbb
ds
jno
cmp
pop
cmp
push
jnp
ljmp
fnstenv
mov
cs
mov
arpl
sbb
sub
push
out
sbb
imul
push
cs
adc
aad
dec
in
dec
mov
xlat
ljmp
insl
mov
dec
out
pop
in
add
mov
push
fsts
andl
outsl
pushf
prefetcht1
ljmp
dec
mov
mov
enter
sbb
fxch
and
inc
dec
inc
mov
jno
pop
shr
add
lcall
lahf
lea
insb
shlb
fisubs
test
lods
in
fiaddl
aaa
repnz
xchg
lds
aad
leave
popf
popa
pop
int3
test
negl
mov
inc
sar
rcl
ret
mov
lahf
mov
out
pusha
inc
pop
push
imul
out
xor
test
jl
inc
in
jle
aad
bound
stos
lret
push
repnz
jb
popa
into
call
test
out
outsl
cltd
jmp
pop
dec
loop
sub
js
test
mov
es
push
push
cmpsb
xchg
sbb
aam
xchg
xor
mov
gs
dec
jmp
repz
out
lcall
or
stos
fs
mov
sub
inc
pop
or
xchg
cld
lcall
sub
fidivrl
paddsw
insb
inc
dec
shll
jae
xchg
lret
mulb
and
shll
push
and
inc
out
lods
iret
mov
mov
dec
cltd
sbb
mov
xchg
stos
jl
icebp
push
lahf
inc
frstor
inc
jl
orl
imul
sub
jp
rolb
or
leave
sbb
fs
lds
ucomiss
jmp
sub
xchg
sbb
inc
inc
lret
jl
ret
jae
pop
shl
mov
lcall
mov
xor
daa
cmp
inc
xorl
cmp
sbb
mov
inc
stc
loopne
out
js
mov
push
or
mov
pusha
jae
push
fimull
fisttpll
stc
fldt
and
js
push
mov
shl
and
addl
lea
js
lods
repz
mov
xor
test
in
mov
push
cld
fs
ds
and
push
lret
dec
or
test
scas
pop
shrl
xchg
stos
in
add
push
adc
mov
lret
rolb
int3
mov
mov
sub
add
mov
leave
and
imul
cmp
fisttpll
jne
jge
lret
rcll
push
inc
xchg
imul
push
mov
sub
aas
out
xor
mov
fsub
jle
sub
mov
mov
lods
pusha
lret
insl
push
or
mov
sarb
dec
loope
inc
inc
adc
jp
xchg
sub
fadds
fwait
mov
insl
lds
xor
pop
les
and
aaa
sbb
pop
mov
test
in
jge
xchg
pop
rol
cmp
icebp
mov
cmp
push
stos
xchg
add
fwait
lcall
mov
or
pop
xchg
test
sub
nop
lret
clc
pop
pop
cltd
xor
out
mov
shrb
jp
pusha
inc
xchg
xor
icebp
pushf
ja
jl
in
xchg
adc
adc
or
das
popa
into
mov
inc
popa
loope
push
mov
inc
into
xor
scas
pop
mov
int3
push
neg
sub
cmp
mov
xchg
loopne
adc
xchg
inc
sub
sub
pusha
adc
fcoms
popa
sub
bound
out
iret
in
mov
dec
insb
sub
xchg
mov
loop
int3
lds
push
add
jnp
cli
inc
xor
shll
mov
rcll
ljmp
popa
cld
mov
xchg
push
out
xor
push
inc
scas
into
fstps
pop
dec
mov
imul
mov
das
sub
push
in
call
pop
inc
outsl
sbb
out
add
cmovns
fmull
xor
mov
ret
adc
sub
fimuls
popa
cmp
int3
and
gs
pop
sub
fbld
outsl
test
jmp
jp
adc
scas
out
fcompl
leave
pop
or
in
dec
shl
xchg
imul
test
dec
mov
ss
jge
and
adc
cmp
lret
adc
ds
mov
imul
lea
pop
andl
jne
lods
xchg
rcll
icebp
push
xchg
xor
jae
dec
lahf
push
cmpsb
sbb
lea
jle
js
aas
outsl
mov
daa
mov
cmp
sub
pop
iret
dec
int
jae
mov
push
xchg
in
dec
into
jp
and
push
mov
sbb
test
push
pop
das
mov
sbbb
lds
loopne
pop
mov
aad
jmp
pusha
imul
pop
cltd
or
push
pop
add
xchg
outsb
lods
and
mov
mov
xchg
xchg
sahf
rcl
sbb
rorl
jbe
jne
xor
cmp
push
xchg
push
lods
pop
mov
aaa
pop
and
xchg
pop
push
jge
inc
push
pop
xor
pop
lret
mov
xchg
out
dec
pop
test
adc
mov
mov
cmp
sbb
cwtl
out
jb
pop
mov
insb
aas
clc
push
push
and
and
cmpl
adc
xchg
xor
add
mov
lods
mov
fmuls
enter
adc
aad
and
aam
cmp
gs
push
lods
inc
mov
test
call
push
xor
das
mov
push
xchg
imul
sbb
hlt
pop
xchg
insb
movsb
mov
push
cld
fcomp
sbb
jp
out
cltd
rcrb
in
lret
xor
fisubrs
shlb
mov
aam
mov
call
adc
sub
mov
push
scas
les
call
add
mov
push
cmc
xchg
fsubrl
pop
push
xor
or
mov
sbb
adc
cmp
xchg
cld
jle
sbb
sbb
ds
insl
push
rorb
adc
in
xchg
cmc
sub
jecxz
nop
lods
fld
mov
in
lea
xor
xorb
stos
aas
or
sarl
pop
in
imul
mov
jae
cmp
jbe
mov
mov
mov
call
and
mov
fmuls
stc
cmp
imul
insl
shrb
cmp
out
roll
mov
push
inc
sub
enter
std
sbb
xchg
add
add
in
push
dec
dec
negb
inc
pop
pop
std
arpl
cmp
js
dec
cld
dec
icebp
lret
mov
xchg
and
imul
and
mov
inc
insl
mov
out
sbb
jb
insb
lret
and
or
lods
mov
dec
inc
and
scas
jle
outsb
or
es
lds
inc
and
adcl
mov
mov
leave
fisubl
pop
mov
push
sti
pop
dec
jb
or
lock
js
inc
pop
int3
add
cmc
lods
cmp
jmp
es
test
popa
repnz
faddl
cmpsb
test
mov
lods
imul
push
jae
lahf
xor
sub
mov
inc
inc
outsb
mov
pop
push
pop
mov
sti
jo
lds
loopne
and
lahf
movsl
shr
cwtl
xor
xor
mov
es
dec
or
sbb
sti
push
outsb
xor
lds
cmp
cmp
test
add
xchg
push
in
jbe
int
int
lock
jmp
push
push
push
fldenv
into
xchg
aad
js
or
xor
and
mov
and
or
pop
loope
mov
mov
shrb
pushl
push
loop
mov
addb
arpl
mov
popf
or
pop
dec
mov
notb
insl
jns
adc
xchg
inc
fistpl
cmp
shrl
cmp
call
and
lods
out
sub
and
cltd
clc
and
dec
cmp
pusha
cmpsl
in
int
mov
mov
aaa
and
cld
fimuls
jmp
gs
fwait
mov
dec
fdivrl
xor
pop
sub
dec
jg
test
adc
aad
test
sub
jns
lds
lahf
push
xor
pop
adc
or
hlt
outsb
sbb
out
or
push
push
pop
sub
es
cmp
out
push
push
cltd
sbb
fs
pop
in
and
inc
pop
sbb
rorb
or
and
sub
sbb
jno
pop
mov
popa
insl
xor
push
int3
dec
sbb
int3
outsb
shrl
cwtl
in
gs
xchg
push
xchg
leave
jg
ds
inc
jne
push
xor
and
sahf
cmpsl
push
in
es
fidivl
push
leave
adc
sub
fists
fldt
jp
sarl
inc
movsl
shl
jle
xor
inc
xchg
out
into
fidivrl
jg
sti
push
hlt
incl
mov
aaa
int3
inc
push
negl
xchg
jecxz
xchg
shl
sahf
or
in
cli
popf
push
adc
cs
addb
add
mov
fmull
call
adc
sarl
js
outsl
cmp
daa
mov
mov
hlt
jae
pop
xchg
pop
adc
and
mov
dec
pop
sbb
lock
scas
fists
sahf
pop
cmp
push
out
movsl
xchg
out
cmp
lds
std
and
pop
sbb
mov
xor
pop
xchg
jnp
jno
add
outsl
inc
andl
dec
sbb
dec
jbe
ret
bound
fstpt
inc
xor
popl
repz
shr
aad
out
sbbl
push
pop
rcrl
cmova
enter
adc
xchg
ficoms
insl
mov
ds
mov
cwtl
lret
in
sbb
mov
lret
sahf
bound
push
cmp
cltd
mov
dec
adc
add
jns
cmp
xchg
cmp
pop
insb
mov
jae
fdivl
inc
scas
mov
mov
xchg
fdivrs
sarb
dec
mov
mov
sub
inc
shr
jbe
hlt
scas
adc
enter
mov
lea
adcl
rclb
mov
std
inc
pop
mov
imul
sub
pop
pop
dec
ret
repnz
mov
inc
mov
jno
jmp
pop
popa
cmp
push
repz
fidivrs
shlb
inc
push
insb
pusha
and
imul
ss
xchg
aaa
jge
pushf
xchg
xchg
lahf
cmp
movsl
test
mov
adc
insl
lcall
ljmp
rolb
mov
leave
mov
push
roll
pop
syscall
inc
mov
pop
adc
add
es
imul
outsb
mov
jbe
dec
ss
pop
mov
mov
cmp
mov
lods
xchg
mov
outsl
into
shrl
xchg
mov
aas
mov
add
jno
mov
mov
jns
imul
jae
jne
fucompp
xchg
sti
xor
xchg
orl
les
test
adc
mov
int3
loopne
sbb
repnz
cmp
stos
fldcw
pop
icebp
adc
pop
xchg
in
out
fldt
nop
dec
push
repz
jmp
loop
aam
out
mov
pop
aam
mov
outsb
dec
icebp
jno
xor
jae
and
idivl
inc
les
shll
push
stc
cmpsl
out
xor
jb
insl
lods
xchg
test
rep
push
lea
adc
jno
sahf
scas
xchg
imul
fs
jmp
imul
fistl
dec
push
into
sub
or
push
aam
and
push
mov
sahf
adc
repnz
mov
or
mov
cmpb
adc
mov
jmp
fidivrl
cwtl
mov
repnz
mov
dec
adcb
cmpsb
dec
push
shl
bt
pop
in
push
out
jl
ja
mov
scas
fs
lea
mov
pop
cmp
or
bndstx
mov
fs
out
daa
jno
sbb
enter
ss
sti
adc
hlt
push
push
aas
add
or
mov
fsubs
repz
adc
or
gs
mov
bound
mov
mov
ss
in
hlt
movsl
xchg
lock
and
jbe
or
stos
push
popf
dec
lcall
and
mov
push
rcr
out
and
and
fwait
xchg
call
pushf
jo
mov
jecxz
stos
xor
jp
mov
cld
xor
test
inc
fbstp
add
or
fs
adc
dec
sub
stc
out
imul
imul
and
call
cmc
add
das
nop
sarb
int3
ljmp
ljmp
push
cmp
js
std
cld
pop
pusha
repz
mov
lret
shrb
jp
xchg
in
push
lcall
fisttps
jb
inc
jb
cmc
push
cli
mov
subl
xchg
mov
or
cwtl
je
lods
in
lods
fstpt
je
xchg
jns
fidivrs
xor
mov
movsl
xchg
gs
pop
cmpb
sar
push
add
in
loopne
ret
and
xchg
rclb
int3
das
pop
fcompl
and
das
arpl
and
cwtl
lahf
in
inc
mov
ja
fstps
je
test
loopne
pushf
jns
xchg
and
rcrl
and
or
pop
mov
mov
mov
sbb
mov
or
in
push
mov
xchg
jns
sub
mov
mov
xor
jecxz
test
sbb
mov
push
xor
and
ss
in
push
lahf
lret
or
xchg
add
outsb
sbb
jl
fwait
xorl
cltd
add
stc
sub
fldl
cmc
fldenv
dec
loope
pusha
push
inc
std
add
inc
divl
jg
sub
fdivr
in
loopne
sarb
popl
cmc
jb
sar
push
bound
xchg
add
scas
aad
mov
cmpsb
or
push
add
mov
loope
addr16
jge
stc
pop
outsb
cmpb
pop
aam
sti
fdivl
cmp
aas
out
aad
and
adc
imul
and
add
rolb
icebp
pop
loopne
cwtl
call
push
mov
mov
into
push
push
sub
xchg
xchg
pop
sbb
push
je
or
mov
inc
aam
frstor
test
or
or
jnp
mov
push
and
sahf
pushf
or
mov
hlt
inc
jnp
popa
pop
aas
adc
js
sub
repz
mov
fwait
imul
js
or
pop
incb
lods
dec
or
shl
psubsb
jmp
inc
sti
pushl
lock
andb
testb
pop
fmull
add
push
jmp
les
in
inc
push
inc
adc
lret
lea
loope
loope
pop
in
pop
scas
lea
out
sbb
ja
mov
popa
mov
xchg
aas
add
mov
jae
add
mov
mov
mov
cmp
jae
or
das
mov
push
jns
mov
or
inc
sub
sbb
mov
adc
sub
jne
push
mov
inc
jp
imul
xor
jmp
xchg
xchg
add
pop
mov
inc
mov
scas
jae
imul
push
mov
xchg
fwait
popa
mov
insb
xor
loope
mov
ss
adc
push
fisubl
in
cmpsl
mov
out
sub
xchg
imul
and
cmpsb
sub
and
push
jnp
xchg
mov
xor
out
inc
sbb
mov
jmp
push
push
mov
jl
pusha
cmp
mov
mov
cmpb
jo
negl
sbb
das
inc
xorl
xor
push
mov
pop
scas
arpl
dec
shll
push
sbb
movsb
cmp
pop
and
repz
push
repz
out
rcr
xor
jne
cmp
adc
fs
add
ret
jae
inc
bound
pusha
stc
xchg
xor
imul
out
mov
dec
push
mov
in
sub
dec
xchg
dec
jl
adc
cwtl
cmp
lret
negb
lods
push
jge
cmp
sbb
cld
sti
mov
mov
cmp
int
xor
xor
mov
pop
push
mov
cli
inc
or
push
mov
lea
mov
pop
and
shrb
push
jno
mov
push
loope
js
pop
xor
lcall
jg
sub
mov
out
xor
daa
xor
rcl
mov
jae
xor
in
and
fs
sbb
and
mov
je
cltd
divl
xchg
dec
mov
xor
push
cmc
mov
pop
mov
sub
add
xor
std
js
je
shll
sub
js
repz
mov
iret
xchg
fisubl
push
fimull
mov
loope
mov
or
ret
pushf
insl
fwait
push
das
inc
push
mov
xchg
ret
arpl
popa
and
push
push
popf
addr16
jle
dec
inc
fdivl
lcall
stos
ret
cmpl
or
adc
cwtl
sub
or
push
push
and
pop
mov
into
into
pop
testb
push
rorb
mov
xor
add
movsl
test
jnp
mov
cld
outsb
dec
rorb
and
fcomi
jge
daa
mov
dec
nop
mov
jae
pop
and
mov
xor
xchg
cltd
sbb
push
mov
add
shll
into
loopne
loop
loope
mov
and
das
sbb
imul
cld
sbb
shll
out
adc
stos
into
sub
fimuls
cmc
lea
lds
loope
jo
mov
stc
adc
jo
cmp
xchg
jne
xchg
and
push
or
rclb
cmp
or
filds
aas
pusha
sbb
mov
mov
jb
fdivrl
cmpb
pop
push
fadds
in
int3
dec
insb
or
cld
mov
fstpt
int
sbb
mov
fnstenv
stos
cmc
lahf
cs
bound
or
and
cwtl
call
sbb
divb
push
insb
leave
in
leave
ds
sbb
testl
andb
popf
mov
loop
mull
jl
hlt
jecxz
and
sub
mov
fcmovnu
out
jns
add
arpl
mov
push
cwtl
in
aaa
mov
pop
and
lret
jb
cmp
or
fisubrl
xchg
cmp
xor
pop
xchg
push
push
or
xlat
dec
jp
je
push
scas
sbb
xor
call
js
cld
mov
xchg
testl
stos
shl
subb
cmp
insb
mov
push
sbb
fwait
cmc
roll
or
rol
adc
frstpm(287
pop
jg
cmp
mov
mov
je
ds
inc
or
xchg
sub
or
add
jmp
inc
push
adc
rcrb
dec
xchg
cmp
jae
clc
mov
frstor
xchg
add
xchg
in
jg
inc
ljmp
in
outsb
cltd
ret
inc
and
xor
subl
gs
popf
loop
ss
scas
xorb
data16
cmp
xchg
add
arpl
lods
push
mov
shll
or
pop
mov
pop
in
cli
rclb
and
or
repz
mov
xor
ljmp
jge
aad
out
pop
shll
imul
xchg
aas
sbbb
out
ss
lret
add
mov
jp
out
mov
stc
xchg
into
pushf
test
pop
and
dec
aad
adc
mov
jb
cmp
cs
daa
cld
frstor
jb
sub
sbb
addr16
ror
mov
push
inc
cmp
imul
sub
loope
scas
pop
aam
cli
or
sub
idivb
sub
lcall
divl
or
sub
repnz
movsl
test
mov
ret
test
adc
push
push
jnp
push
mov
into
add
and
or
adc
mov
das
and
aam
es
clc
dec
push
fwait
jmp
adc
mov
pop
pop
add
xor
sahf
lret
pop
add
cld
cmp
sub
vmovd
or
mov
popf
mov
pop
adc
mov
setg
cld
arpl
adc
test
arpl
xchg
subb
lahf
adc
std
cmp
xabort
sti
adc
mov
add
popa
fwait
inc
rorl
inc
xor
mov
fadds
je
dec
fsubrl
leave
lret
hlt
jecxz
push
inc
and
int3
daa
lcall
rcrl
adc
push
inc
mov
fbstp
jge
or
in
jg
loope
mov
aad
dec
fiadds
imul
andb
jae
push
xor
mov
fstps
inc
jbe
mov
movb
jmp
pop
js
jae
jae
movl
out
mov
jb
out
adc
mov
xchg
pop
push
outsb
and
insl
leave
mov
std
dec
cwtl
aam
xchg
jne
je
jb
sbb
mov
mov
aam
hlt
adc
aad
int
dec
ljmp
push
out
xchg
clc
fstl
cltd
jmp
test
jp
push
hlt
adc
push
cltd
xchg
movsl
icebp
mov
out
test
lock
mov
dec
dec
pop
subb
mov
insl
ljmp
xor
in
ljmp
dec
xor
loop
pop
enter
mov
cmp
mov
and
rolb
repnz
or
cltd
or
push
jo
adc
sub
xchg
pop
pop
sahf
lods
pop
ja
pusha
imulb
test
hlt
cmp
dec
or
xor
add
pusha
cmp
mov
es
jecxz
adc
rol
jno
fs
inc
add
inc
fistpll
sub
les
je
fcmovnb
les
cwtl
out
push
sbb
xchg
cmpsl
test
and
jp
mov
mov
sub
clc
fnsave
insb
in
sbb
xchg
sahf
in
sbb
cmp
xchg
adc
and
push
cmp
test
xor
popa
shr
xor
je
xchg
lods
aas
push
ds
aas
adcl
lcall
stc
loop
cmp
push
stc
in
mov
ja
inc
ficompl
pop
lock
daa
cmpsl
imul
call
xlat
dec
jl
mov
sbb
inc
mov
mov
mov
inc
inc
shll
jo
adc
xchg
and
ds
pushf
mov
out
jns
lret
les
aam
add
inc
fnstenv
aad
sub
push
sbb
dec
cmpsb
sbb
push
loop
ret
fcomps
jmp
dec
add
cmp
sbb
jb
mov
movsb
popf
sub
imul
rcrl
std
ficoml
loope
dec
out
xchg
icebp
or
xor
or
les
flds
loope
pop
mov
mov
inc
dec
xor
or
dec
inc
sub
inc
pushf
mov
cmc
jmp
aam
test
ret
mov
loopne
xchg
xchg
push
jl
repz
xchg
xor
jl
or
loop
xchg
mov
inc
cltd
jne
in
push
bound
repz
xchg
incb
int3
and
call
repnz
mov
sbb
mov
mov
push
mov
push
lds
cmp
xchg
and
popa
xchg
mov
cwtl
scas
int
push
pop
pop
dec
jb
pushf
cmpsl
jo
movsl
mov
mov
call
rcrl
mov
and
into
pop
lcall
mov
fstpl
stc
add
sub
cvtps2pi
push
or
and
test
mov
shrl
push
adc
mov
push
adc
dec
cmc
int3
sti
loop
xchg
lods
or
sbb
iret
jne
imul
sub
pusha
xchg
or
ja
jne
push
or
ret
xor
insl
out
dec
or
int
int
cltd
enter
and
jno
dec
mov
dec
jecxz
inc
inc
push
cmp
into
xchg
add
jne
jle
jg
loopne
inc
sbb
dec
adc
mov
dec
movsb
sti
sub
sub
aam
jne
pop
xorl
in
cli
loope
adc
inc
jle
inc
mov
xbegin
cmpb
das
jbe
mov
nop
push
adc
lret
orl
sub
arpl
and
imul
xchg
popl
sbb
stos
test
stos
mov
out
shlb
imul
repz
aam
fstl
mov
je
es
and
adc
rcr
in
dec
and
pop
dec
es
mov
daa
push
cmp
mov
fistpll
mov
loop
lret
aam
inc
cmpsb
lock
mov
mov
ffree
xchg
mov
add
mov
sub
xchg
insb
lea
mov
adc
test
mov
pop
rcll
jae
xchg
ja
or
xchg
inc
or
stos
mov
sbb
mov
push
and
add
loop
cmp
sahf
pop
pushf
dec
in
aaa
pminub
rolb
inc
mov
and
loopne
pop
xor
mov
and
or
pushf
or
ja
jp,pn
repz
pop
iret
jne
js
dec
test
lret
dec
ret
mov
daa
jecxz
in
out
push
pop
fmull
scas
cwtl
push
inc
dec
lods
call
jge
adc
stc
xchg
cmp
adc
popa
cmp
insb
sbb
lods
jo
mov
in
in
pushf
push
sub
out
insb
mov
push
pusha
jl
std
hlt
sbb
ret
icebp
cmc
xor
stos
ss
sahf
mov
or
inc
test
pop
jmp
rolb
jmp
cmp
mov
outsb
loopne
add
ds
mov
xchg
push
push
sbb
testl
xor
mov
sahf
pop
sub
inc
mov
mov
and
mov
mov
out
add
leave
cmp
sarl
jecxz
sbb
popf
and
cmpsl
push
jae
ljmp
stos
lea
cmovge
fisttpl
bound
jae
and
lds
sbb
fldcw
cmc
jge
xchg
outsb
shrb
xor
dec
fnstcw
sbb
addb
or
in
je
inc
mov
xchg
subb
push
lds
imul
and
sahf
aam
add
mov
aaa
or
in
pop
ds
iret
daa
cltd
mov
push
pop
shr
add
jmp
jo
add
ljmp
aaa
arpl
or
jp
xchg
pop
mov
ror
adc
inc
inc
pop
add
rolb
xchg
or
sub
inc
xchg
sub
jg
inc
sub
addl
imulb
mov
adc
sbb
sbb
xchg
sub
xchg
push
xor
call
sti
jg
outsb
leave
int
add
shlb
scas
loope
push
cwtl
cmc
xchg
ljmpw
inc
je
inc
test
or
xchg
aaa
pop
sbb
fwait
mov
std
push
fidivs
push
push
cmp
in
imul
sbb
add
jno
sbb
jno
xor
xchg
fwait
sahf
mov
mov
ljmp
pop
aam
fisubrs
push
sti
sbb
and
pop
pusha
pop
xchg
stos
xchg
add
or
outsl
testl
mov
aad
loop
lret
sahf
pop
movsl
loop
fnstenv
sub
lods
mov
sbb
jns
sub
shrl
add
cmc
int3
dec
sub
xor
fwait
gs
or
inc
lcall
xor
lcall
add
notl
adc
ljmp
cld
mov
sub
test
lret
cld
inc
xchg
loope
xor
movsl
aad
testl
std
out
jnp
leave
mov
inc
pushf
out
cmc
push
inc
xor
and
loopne
out
or
insl
loop
fs
rorl
xor
data16
sbb
cmpsl
mov
stos
push
lods
popa
test
fistpll
sub
sub
jb
adc
push
and
lahf
stos
add
inc
push
mov
and
shll
mov
push
loope
cmpsb
shrl
pop
shlb
in
mov
fldcw
fadds
fcomps
xchg
jmp
mov
cmp
mov
shll
mov
jne
fsubs
cltd
iret
iret
pop
lods
push
sbb
add
mov
pop
scas
inc
xchg
mov
xchg
imul
ficoms
add
push
pop
inc
stc
push
xor
jp
ficompl
pop
ja
inc
cmp
out
mov
push
xchg
outsl
aaa
int3
jno
aad
push
cmp
ds
xor
mov
leave
shll
fwait
or
mov
movsl
mov
dec
movsl
ret
daa
subb
cmp
and
repnz
aam
or
pop
pop
mov
xorb
cmpsl
insb
mov
pushf
sarl
jbe
pop
and
daa
inc
push
fdiv
orl
test
add
or
mov
in
jo,pt
imul
xor
js
xor
dec
mov
fmull
jecxz
mov
xorl
xor
pop
in
out
add
mov
stos
shl
cmp
aas
mov
add
mov
fdivrs
fnsave
push
test
mov
mov
and
and
sbb
adcb
ds
rcr
pop
mov
repz
xor
xor
adc
jbe
ficomps
xchg
std
popf
ds
data16
push
mov
mov
scas
mov
pusha
push
cmp
in
inc
add
mov
cmp
sub
test
sbb
add
fwait
test
xor
stos
mov
sarl
outsb
jecxz
mov
jb
inc
mov
les
sbb
or
rorl
rcr
adcb
pop
dec
xor
push
pop
pushf
cmpb
lahf
dec
pusha
sub
fnstenv
movsb
repnz
lret
fwait
add
int
xor
xor
in
and
in
lret
aaa
sbb
dec
push
in
jmp
pop
clc
xor
or
lods
lahf
jno
inc
mov
pop
scas
insl
dec
sarb
mov
xor
outsb
repz
push
dec
stos
scas
inc
mov
lret
add
add
and
mov
test
addr16
or
pop
push
iret
sub
leave
incl
lret
jno
and
imul
jnp
lcall
sti
adc
mov
lods
adc
int
jg
jecxz
rcrl
push
adc
cmp
push
rcl
push
movl
add
int3
inc
ret
aad
push
mov
pop
aaa
subl
je
mov
xchg
dec
cmpsb
xchg
adc
arpl
push
inc
loop
jnp
pop
pop
fdivrp
add
nop
jb
adc
inc
mov
test
sub
cmp
add
or
mov
jmp
leave
cmp
sbbl
iret
icebp
call
and
push
dec
mov
xor
pop
hlt
iret
jg
out
mov
rorb
inc
sahf
repnz
inc
je
fs
sbb
aaa
popl
lock
mov
or
addl
arpl
and
call
loope
mov
aaa
mov
sbbl
xor
call
pop
push
rcrl
imul
lcall
test
in
inc
rorl
inc
and
fimuls
adc
sub
stos
sbb
pop
jne
cmp
jl
dec
je
jnp
call
cwtl
sbb
inc
and
mov
call
pop
pop
popa
js
enter
mov
cs
xchg
jle
lods
into
pop
inc
lods
xchg
add
into
mov
fsts
stos
das
and
inc
mov
pop
aam
jno
mov
icebp
out
imul
mov
test
inc
test
sbb
sbb
push
push
xor
adc
icebp
daa
mov
xor
jnp
lret
adc
faddl
maxps
mov
pop
sub
mov
leave
testl
xchg
mov
notb
sti
cmp
je
adc
in
inc
dec
fisubl
push
cli
or
or
loop
imul
xor
stc
xlat
pop
mov
sub
loop
xor
push
test
and
into
adc
jb
jbe
pop
popa
xor
push
repnz
sahf
hlt
lret
xor
loop
fs
fstps
or
test
mov
jecxz
xchg
cmpb
sub
mov
lcall
je
inc
mov
test
dec
lret
cmp
push
sti
push
pushf
and
sahf
push
pop
and
cmp
jo
cmp
into
sbb
arpl
arpl
add
cmp
imul
call
std
lcall
mov
mov
mov
mov
fildll
mulb
xlat
lret
out
minps
inc
mov
push
dec
call
dec
mov
mov
nop
pop
mov
mov
jae
cmp
fdivl
push
push
adc
popa
ficompl
cmp
fildl
mov
pop
xchg
roll
or
push
mov
and
andps
mov
xchg
mov
inc
xchg
push
mov
push
jnp
inc
std
fnstenv
movb
jle
call
aad
sbb
clc
test
imul
adc
scas
jl
push
mov
ret
mov
lcall
push
lea
clc
xchg
jl
xchg
insb
xchg
and
and
xchg
sbb
lahf
pop
sysexit
rorb
dec
jge
xchg
in
iret
popf
adc
xor
data16
daa
push
fucom
icebp
shrl
pop
cmpsl
jmp
sub
in
mov
hlt
cmp
fildl
popf
cmp
and
push
xor
pushf
inc
mov
or
shrb
sub
stos
ljmp
in
mov
lea
adc
push
fdivrs
gs
pushf
fistpll
xchg
es
cs
xchg
out
rol
mov
jge
mov
dec
fiaddl
cmp
loope
sub
cmp
adc
sub
xor
aad
enter
push
dec
sub
xorl
lret
shrl
and
mov
and
les
lret
jmp
cltd
clc
icebp
push
mov
xor
xor
dec
jl
jp
out
daa
pop
mov
add
jne
insl
in
sub
jo
clc
inc
mov
aad
lcall
out
roll
xorl
mov
out
insl
xchg
rclb
or
pop
xchg
outsb
pop
dec
xor
sub
jne
sbb
insb
cmp
mov
adc
push
in
push
sbb
and
adc
inc
add
lods
push
pop
jge
push
add
frstor
xchg
sub
fbld
movq
mov
into
pop
mov
pop
insl
and
cli
mov
mov
mov
in
in
test
repnz
sbb
xchg
adc
dec
arpl
lret
inc
ljmp
idivl
insb
mov
cmpsl
das
pop
gs
mov
push
imul
jp
cmp
add
js
mov
xchg
add
and
test
bound
shlb
xchg
lds
je
dec
mov
push
and
ljmp
loop
xchg
and
adc
and
mov
and
push
insb
stos
cmp
leave
loope
roll
jno
loopne
sbb
mov
sbb
sub
or
or
int3
mov
aam
cmpsb
adc
iret
mov
inc
xor
mov
push
push
mov
push
sub
mov
test
and
push
jecxz
outsl
mov
fstpl
subb
push
das
add
mov
nop
push
stos
mov
add
xchg
outsl
mov
fnstsw
inc
cld
inc
mov
aam
mov
jnp
dec
xchg
in
xor
test
jno
adc
jecxz
jno
lds
add
loope
pop
mov
pop
sub
shll
hlt
data16
mov
mov
adc
push
into
jns
xchg
sub
jge
pop
adc
mov
data16
add
adc
sub
cmpsb
out
jbe
out
cmp
lock
jle
out
mov
int3
sahf
jne
hlt
je
movsb
ret
cmp
aam
int
jnp
inc
mov
popf
insb
ja
hlt
sbb
mov
pop
cs
adc
sub
hlt
cwtl
mov
pop
leave
push
pop
in
adc
and
bnd
cmpsl
stc
icebp
cmp
dec
jno
sub
push
sbb
rol
loop
mov
icebp
pop
enter
jo
jo
cltd
jbe
lds
add
out
cmpxchg
loope
fadd
jnp
pop
stos
lea
xchg
jp
adc
ds
jge
or
or
lret
fnsave
mov
jg
push
ret
push
xor
add
add
daa
in
sub
ss
ficoms
inc
dec
subl
cmp
xor
add
xor
cmp
push
xchg
or
pop
jbe
js
jge
pushf
movsb
jb
mov
cmpsb
inc
lds
sub
jl
faddl
mov
icebp
push
or
jge
or
gs
pop
mov
cltd
mov
fs
pop
cmpsb
and
mov
xor
ja
stc
std
lods
cmc
iret
lods
pop
bt
inc
push
cmp
or
xchg
adcl
test
mov
sub
mov
ret
pop
inc
add
dec
xor
cltd
leave
xchg
jle
mov
out
jbe
lds
xchg
sbb
rorl
mov
lods
lods
xlat
xor
testb
xor
std
pop
cmp
jecxz
xlat
pusha
movsl
in
bound
mov
mov
dec
pop
je
push
adc
int
xlat
das
jb
dec
push
mov
in
add
add
int
push
lods
adc
cmpsl
shrd
into
outsl
and
loop
dec
movsb
mov
loopne
ficoms
ljmp
inc
in
fadds
hlt
xlat
cmpsb
insl
outsb
popa
adc
jecxz
push
mov
addr16
mov
daa
inc
mov
jb
fwait
jp
sub
das
mov
mov
xor
insb
out
repnz
push
cmp
adcb
and
xchg
sahf
sbb
cld
mov
and
insb
stc
nop
xor
in
aam
fisubs
pop
inc
dec
or
fnstsw
mov
sub
int
xor
push
mov
pop
push
loop
push
insl
sar
mov
push
add
call
iret
push
inc
mov
dec
mov
dec
gs
xlat
insb
adc
mov
mov
push
ja
ret
out
imul
sahf
jl
jge
addr16
adc
push
add
mov
arpl
mov
bound
push
cmpsb
mov
push
das
xchg
addr16
insb
cmp
sub
into
mov
mov
mov
mov
in
push
sub
lea
pop
jge
mov
in
jne
mov
xor
int
adc
mov
pop
and
mov
cmp
in
push
inc
popf
cwtl
mov
roll
inc
jl
hlt
mov
dec
cld
xor
adc
xchg
aaa
out
inc
dec
fisubs
ds
ljmp
movsl
mov
pushf
ljmp
repz
addb
loopne
jcxz
movsl
lods
or
mov
fstpt
rcrb
mov
pop
pusha
xlat
out
dec
xlat
xor
test
call
jb
mov
int
xchg
push
jnp
add
inc
pushf
in
sub
ret
push
in
pusha
mov
mul
enter
push
leave
fnstcw
push
pop
inc
loop
andl
shrb
pop
rcrb
xorl
inc
les
or
test
js
xchg
jecxz
inc
mov
andl
mov
cld
out
fisubrs
dec
pop
lahf
sbb
es
jp
xchg
pop
mov
sahf
xchg
add
aam
mov
cmp
loop
imul
inc
iret
test
ss
lods
mov
out
outsb
pop
push
insl
aas
or
dec
xor
icebp
cmpsb
adc
movb
scas
xor
xor
scas
push
lods
loop
pop
ljmp
xchg
sahf
push
das
mov
mov
mov
gs
cs
mov
repnz
loop
into
push
add
sbb
adc
inc
or
jg
inc
mov
mov
fidivrl
out
jle
ret
dec
xlat
mov
add
mov
cli
pop
jns
sub
test
movsb
ret
mov
pop
push
sbbl
addl
sub
dec
jg
or
jecxz
or
cmp
test
sub
pop
mov
mov
mov
iret
popf
sahf
jno
xor
ss
fsubrl
jmp
pop
mov
out
out
adc
lods
xor
xor
mov
xor
in
push
pop
lcall
int3
aaa
inc
in
fadds
jbe
xchg
jecxz
jg
icebp
cltd
cmp
movsb
mov
pop
cmp
test
push
leave
enter
sub
fcompl
leave
jns
mov
jne
cmp
add
jl
push
dec
dec
mov
or
mov
dec
scas
fsub
fisttps
fdiv
mov
sub
mov
jl
leave
adc
aam
jmp
rcrb
push
cmc
sub
cmp
inc
jae
test
test
dec
mov
loop
xor
push
cmc
inc
outsl
enter
mov
data16
aaa
sub
sbb
in
popa
inc
fnstcw
mov
inc
lret
lret
jmp
aaa
fidivs
dec
sub
les
call
jecxz
push
test
hlt
lods
dec
cli
push
addl
pop
push
jbe
inc
sahf
xchg
pop
outsl
pushf
lahf
mov
mov
fucomip
jb
rcrb
loopne
cmp
push
push
sbbl
scas
ljmp
int3
clc
add
aaa
stos
popf
std
jp
icebp
addb
xor
pop
ficoms
testb
xchg
mov
pop
pusha
sub
data16
inc
push
insb
or
push
out
push
lcall
repnz
sti
fsubp
test
aad
push
inc
inc
push
jb
push
cmp
imul
les
out
push
daa
push
stos
aam
cli
mov
lahf
arpl
fisubs
stc
pop
fmul
adc
loop
sub
lock
mov
sti
je
mov
cs
and
sub
jmp
and
mov
jg
cmc
gs
jp
dec
ds
shl
cmp
aaa
dec
movsl
daa
hlt
dec
outsl
in
fucomip
mov
in
fincstp
test
inc
and
dec
or
adc
test
fcomip
mov
fucomp
and
push
cltd
push
jecxz
mov
pop
into
and
lds
mov
int
xchg
push
xchg
jp
data16
adc
lods
insb
xor
scas
es
mov
pop
stos
lock
add
fs
cmp
fwait
rcrl
gs
jbe
jecxz
dec
add
or
pusha
cwtl
mov
jne
repz
sbb
xlat
pop
adc
lcall
add
sub
xchg
add
mov
arpl
pop
repnz
push
arpl
pusha
fcoml
arpl
das
push
xor
repz
das
mov
xor
out
repz
mov
std
jno
push
dec
jnp
sbb
dec
cmp
and
adc
jnp
dec
fnstcw
or
or
or
fldt
dec
or
push
cmpsb
stos
cli
mov
cmp
std
out
inc
sub
sub
cmp
addr16
cmp
enter
shll
adcb
or
mov
pop
aad
pop
mov
insb
mov
xchg
arpl
popa
cmpsl
adc
push
dec
add
hlt
mull
fists
arpl
shl
jo
xor
add
jmp
dec
mov
xchg
xor
xor
pop
es
cmp
popf
lahf
mov
ljmp
sbb
xchg
jle
rcll
xchg
fiadds
mov
shl
jbe
inc
cmpsb
push
aaa
inc
dec
lods
push
push
fldt
stos
cmp
aad
sbb
jnp
xchg
and
rcl
adc
mov
add
inc
aam
imul
bound
inc
rorb
test
loop
sub
pop
pop
adc
loope
lret
mov
iret
adc
lock
in
cmpsl
rcrb
xor
sub
in
js
jno
enter
jae
nop
fadds
dec
or
cmp
les
std
mov
pusha
pop
fmull
xchg
push
or
mov
and
cmc
mov
inc
ja
ljmp
mov
jle
loope
ret
test
push
pop
push
sti
enter
les
cli
stos
push
cs
pop
adc
mov
xor
pop
sbb
ds
pusha
outsb
rolb
mov
and
or
adc
lret
dec
push
jnp
iret
adc
inc
rcrl
into
dec
cmpsl
push
std
push
push
mov
jno
lcall
orl
lods
lds
test
jl
in
cmpsb
jnp
dec
repz
fwait
sarb
dec
mov
sarb
rcrl
and
and
int3
and
outsb
sti
cmc
in
aad
dec
enter
xchg
in
in
hlt
mov
and
or
sbb
mov
nop
daa
cmp
jo
les
pop
mov
xor
mov
lea
mov
aas
or
imul
adc
jo
rclw
jae
xchg
jle
and
mov
lret
xchg
and
scas
adc
mov
icebp
adc
lods
mov
daa
pop
pop
sbb
lcall
fstpt
call
add
arpl
inc
jg
mov
repnz
ret
dec
jbe
sub
xlat
xchg
lock
dec
push
mov
jge
sbb
add
cs
out
fimull
outsb
mov
sbb
jae
clc
hlt
dec
test
scas
fimuls
in
mov
mov
mov
cmp
popf
cmp
dec
push
stos
pop
stos
lahf
jmp
repnz
jbe
or
push
ja
adc
inc
loope
pop
mov
adc
repz
push
clc
mov
cmp
movl
mov
popa
inc
mov
nop
xchg
inc
loopne
ja
and
and
loopne
cmp
adc
inc
jp
inc
movsl
xchg
xchg
leave
insl
dec
movsb
xchg
adc
out
and
mov
shrl
xchg
loop
ret
mov
cmc
dec
cmpsl
movsb
sbb
pop
sbb
dec
lods
incl
xor
test
mov
cmp
adc
mov
mov
xor
xchg
shlb
dec
into
push
sbb
mov
push
xchg
leave
dec
adc
or
cmp
leave
jp
xchg
push
push
into
hlt
lds
sbb
repz
sub
ss
push
xor
test
test
sbb
sti
cmpsb
repnz
jb
jmp
or
sub
add
fsubrl
mov
inc
push
call
repz
push
lds
inc
pop
sahf
pop
pop
mov
mov
and
lock
push
pop
cld
inc
cwtl
jg
leave
sub
push
mov
inc
dec
cmp
dec
dec
aad
dec
lods
cs
roll
cmpsl
dec
cmp
cvttps2pi
dec
and
sub
and
test
fstl
popa
das
lods
sub
mov
and
shr
outsl
lods
imul
mov
mov
out
push
test
subb
pop
jo
rorl
sub
add
aam
test
das
mov
dec
jnp
repz
jl
mov
div
call
xor
lcall
jmp
xor
dec
pop
mov
cmp
fldt
adc
mov
adc
add
xor
test
adc
subl
jmp
int
mov
in
rcll
in
mov
insb
mov
gs
sbb
shrl
aas
add
out
push
mov
scas
loope
mov
sbb
decl
pop
inc
scas
mov
lods
iret
or
sbb
inc
pop
test
aaa
insl
lods
mov
das
jbe
mov
xchg
fsub
iret
out
nop
lods
mov
loopne
xor
fs
or
xor
jmp
addr16
incb
inc
stc
push
add
cmp
xor
inc
out
test
mov
sbb
inc
jmp
ret
in
clc
repz
mov
xchg
in
adc
or
mov
cltd
sub
inc
adc
add
stc
fwait
xchg
sbb
push
add
loopne
xchg
test
out
adc
or
xor
in
add
imul
mov
xor
cmp
xchg
fsubs
mov
in
pop
mov
rcll
pusha
or
dec
stos
shll
scas
xor
sub
xor
out
xor
test
mov
inc
ljmp
aam
enter
mov
mov
and
mov
fnstenv
sti
adc
and
sub
fs
push
sarl
cmp
popf
xchg
in
outsl
xor
hlt
movsl
bound
insb
imul
cmp
cmp
adc
adc
shr
and
mov
jmp
lock
mov
fdiv
stos
shlb
jmp
das
pusha
divb
clc
mov
push
xchg
lcall
daa
jbe
mov
je
sub
outsl
lret
gs
xlat
sahf
inc
cmp
jno
push
jns
fbld
notl
mov
sbbb
mov
xchg
aaa
scas
cmp
jp
arpl
aad
or
call
cs
adc
and
stos
pop
mov
mov
push
ds
nop
push
push
out
inc
ja
inc
or
gs
dec
popf
cmp
aam
insb
outsl
mov
rorb
jo
fbld
lret
or
roll
testl
jp
xor
cmp
insb
loope
and
pop
dec
int3
sub
rcll
mov
push
andl
pop
pop
lcall
mov
js
dec
xchg
cmpsl
adc
ror
lds
les
xor
mov
shrl
pop
mov
mov
popa
cwtl
fcoms
xchg
push
push
xchg
orb
push
mov
xchg
cmpsl
mov
adc
sub
fnsave
testl
out
add
gs
lock
std
sub
or
push
push
test
mov
in
faddl
inc
dec
and
nop
or
adc
inc
addr16
xor
fisttpll
cmpsb
push
xor
cmp
cmp
into
sbb
cmp
sub
int3
in
push
sarb
sar
dec
add
adc
dec
push
xor
aad
mov
and
mov
and
pop
mov
and
jo
jmp
shrb
dec
test
mov
rcrb
inc
js
lock
fsts
fildl
xchg
rorb
cmpsl
mov
loope
mov
ret
push
fwait
or
xchg
fistps
repnz
pop
xchg
pop
xchg
lea
mov
mov
in
jg
xor
repz
push
mov
xor
xchg
sub
and
adc
add
mov
cmpsb
cld
pushf
xchg
inc
and
xchg
mov
stos
pop
xor
mov
mov
lret
arpl
adc
push
jg
xchg
hlt
jle
iret
mov
adc
popa
je
sub
ds
rorb
cltd
inc
sub
daa
movlps
fcoml
push
mov
sub
dec
sbb
cld
and
stos
xchg
loope
mov
jbe
repnz
push
scas
mov
div
cmp
scas
inc
or
loopne
jne
mov
in
mov
jbe
dec
add
stos
mov
repnz
sub
push
add
repnz
mov
mov
or
std
or
clc
and
arpl
push
flds
lahf
xchg
sub
add
mov
flds
leave
aaa
movq
stc
cmpb
push
insl
ficomps
adc
add
mov
aad
inc
mov
mov
jmp
or
mov
inc
xor
xlat
pop
cmp
popf
sub
xchg
mov
cmp
outsb
mov
sbb
sub
xchg
add
jne
mov
clc
incl
sti
lret
movsl
dec
mov
jecxz
and
push
jnp
push
roll
lods
or
jmp
rcrb
xor
adc
sub
aas
test
inc
and
or
call
or
js
jp
inc
out
rolb
pop
test
je
push
stc
repnz
nop
int
fsubrp
push
clc
sti
xchg
or
cld
dec
aam
pop
dec
push
xor
xchg
loop
jmp
inc
cmp
outsb
icebp
inc
dec
adc
xchg
push
shrb
and
rorl
mov
inc
fcoms
and
movsb
je
lret
mov
in
sub
or
into
pcmpeqb
in
test
js
or
flds
hlt
jle
pushf
js
dec
xor
iret
inc
ror
das
push
aad
sbb
xchg
push
adc
xor
lahf
jbe
mov
push
and
fwait
jns
mov
aad
xor
cmp
std
sub
mov
and
dec
pop
lds
jae
imul
in
cmp
int
das
xchg
aaa
int
ljmp
sub
movsb
cmp
jp
or
out
xchg
lock
push
mov
push
aas
shlb
fsubp
psllw
push
jns
xor
orl
mov
dec
cwtl
push
pop
pop
mov
push
push
mov
dec
mov
test
pop
shlb
rdmsr
int3
cltd
rcr
push
or
aad
add
sbb
cmp
fisttpl
into
jp
test
xchg
bound
movsl
add
xlat
dec
repz
xlat
lcall
arpl
aaa
sarb
stos
mov
push
mov
xchg
insl
cmp
jno
pop
lcall
adc
imul
fwait
data16
ljmp
fstl
aam
sub
jl
aam
sub
sar
in
sub
push
enter
data16
int
hlt
pop
pushf
sbb
mov
or
dec
sbb
int3
pushf
lcall
mov
mov
ret
jg
mov
mov
or
pop
adc
imul
mov
loope
into
lahf
xchg
adc
xor
insl
je
and
mov
stos
or
leave
xor
and
loop
out
seto
or
pushf
cmp
lret
pop
sbb
lds
jg
adc
fildll
scas
hlt
jne
mov
sub
test
push
sbb
and
push
or
cltd
or
jns
stc
loopne
xor
push
inc
pop
xchg
fists
or
mov
sbb
adc
jo
jp
stc
popa
lret
aam
jecxz
hlt
jnp
sub
jmp
or
dec
popa
js,pn
lret
push
lret
push
mov
rcll
jmp
adc
movsl
fdivrp
mov
imul
and
pop
call
and
push
mov
or
fdivrl
lcall
setns
xchg
or
mov
or
cmp
sub
jmp
les
movsl
adc
insb
vpshufd
push
mov
pusha
xor
xchg
pop
mov
dec
lahf
rclb
fsubs
sub
pop
jo
push
xchg
or
push
jne
prefetch
jmp
xor
or
and
sub
lahf
push
pop
mov
push
jecxz
scas
ljmp
xlat
adc
fimuls
jb
xlat
add
cmp
mov
xlat
sub
sbb
ja
je
inc
jmp
arpl
lcall
mov
or
xchg
lds
rcl
add
push
mov
jmp
scas
imul
sub
fs
dec
movb
pop
inc
mov
pusha
push
and
popa
pop
xor
adc
sub
dec
gs
add
mov
dec
in
dec
push
and
mov
adc
stc
fs
jmp
cmpb
adc
mov
adc
sar
scas
adc
jns
repnz
call
jno
loope
xor
mov
imul
call
dec
pop
fstl
cli
into
lcall
mov
sti
jmp
and
ss
cmp
xchg
ret
and
adc
rorl
imul
hlt
cmpsl
test
push
scas
ja
mov
jo
leave
xchg
inc
shrb
outsl
cltd
cwtl
imul
mov
fstl
jnp
xchg
add
icebp
mov
inc
rol
xlat
dec
pushf
add
lcall
mov
lds
movsb
and
jge
addb
dec
cmp
sahf
or
mov
inc
pop
xorl
or
mov
rcrb
pop
dec
adc
ss
popf
popf
callw
mov
sbb
pusha
dec
ja
dec
addl
mov
retw
iret
out
out
in
pop
inc
rorl
pop
pop
sbb
lock
jge
inc
cmp
clc
jg
daa
push
ss
movsl
jb
jae
pop
outsb
shrl
lret
sbb
pop
inc
jnp
sub
dec
and
jbe
cltd
add
shrl
push
xorl
ret
lret
xchg
push
cmpb
fucomip
jne
sub
in
out
pop
mov
hlt
cld
sbb
sbb
pop
out
in
gs
inc
and
push
enter
xchg
jge
mov
sbb
or
mov
sub
data16
inc
aas
mov
aas
jb
sub
mov
sub
scas
pop
mov
loope
mov
loop
loope
mov
xchg
pop
clc
add
xorl
sbb
sbbb
or
subl
lea
rcll
notl
mov
push
jb
dec
loopne
pop
fldenv
insb
xorl
nop
out
sbb
lahf
rcrl
cmc
sub
ss
or
cld
add
jae
mov
out
sbbl
adc
addl
jns
int3
shlb
jmp
jle
adc
jbe
inc
pop
push
jbe
xor
cs
mov
fs
ret
pop
add
out
jne
repnz
adc
arpl
dec
in
push
mov
ss
enter
add
aad
popaw
pop
jae
cmp
call
test
imulb
cmp
ror
mov
xor
mov
pusha
push
loope
shll
or
lock
xchg
out
ljmp
lret
mov
lret
jno
mov
or
pop
sbb
insl
out
popa
push
fldpi
fwait
lahf
aas
lods
dec
shll
addr16
sahf
mov
mov
dec
pop
int3
int
jns
insb
jnp
dec
movsb
mov
insl
mov
and
stos
mov
call
push
mov
jb
or
jecxz
sbb
out
addr16
push
lods
aas
rol
fsts
mov
xchg
cmp
gs
stos
ret
jp
mov
aam
mov
add
fldcw
imul
ds
jns
test
movsb
cmp
adc
imul
sub
jecxz
add
mov
test
je
ds
ss
add
movups
jmp
outsb
movsb
daa
scas
bound
out
orb
nop
leave
mov
xchg
adc
pushf
push
pop
inc
sub
jno
repnz
or
sub
daa
pop
sarb
sti
mov
xchg
mov
xchg
icebp
imulb
popf
ja
cmp
lds
icebp
lcall
dec
dec
dec
cmp
xlat
testl
lret
jb
sub
call
insl
pop
lahf
lods
mov
push
sub
and
loop
adc
sar
test
sbb
arpl
jns
cmp
jg
dec
sub
int
and
push
fisubrs
dec
aad
lret
pop
scas
xchg
add
ret
xchg
mov
pop
cmc
push
mov
pop
sub
or
dec
out
mov
cld
fsubrs
push
push
inc
cmpsb
insl
es
add
cwtl
outsl
mov
mov
ret
sub
daa
pop
mov
mov
cmpl
jbe
fists
or
xchg
lea
push
into
or
stos
and
ret
or
icebp
in
add
shrb
gs
orb
fiadds
out
fsubl
dec
call
jle
xchg
out
add
sbb
fisubrl
cli
mov
loopne
ja
lcall
mov
jno
clc
test
ss
sbb
mov
mov
filds
in
iret
leave
or
and
dec
fiaddl
addr16
ja
xor
das
xor
ja
inc
xchg
and
aaa
xchg
test
fcmovb
fmuls
or
and
jmp
dec
xlat
dec
xor
jae
or
jge
iret
pop
arpl
aas
or
adc
mov
pop
adc
mov
adc
and
or
or
std
lret
repnz
pop
pushf
repnz
or
insl
adc
inc
rcrb
out
push
outsl
pop
cmpsb
int3
sub
mull
movsb
fucom
in
push
out
repz
mov
push
test
divl
mov
jp
insb
xchg
arpl
insl
stc
jge
pop
outsb
jle
fstpl
jle
xor
insb
lea
mov
cmp
or
pop
lahf
subb
xor
add
xchg
iret
adc
xor
sbb
mov
mov
mov
popf
pop
xchg
mov
pop
push
mov
cmp
or
jb
mov
les
inc
cmpsb
andb
cmp
xchg
dec
fnstenv
rol
mov
popa
imul
mov
inc
sub
sbb
jmp
add
js
fiaddl
fnstenv
cltd
movsb
or
adc
dec
mov
and
into
cmpsb
pop
add
mov
mov
shll
call
call
pushf
movsw
push
or
adc
dec
insb
or
ljmp
jecxz
fst
mov
xchg
pop
inc
cli
xor
mov
and
loopne
out
flds
lcall
mov
cmp
mov
push
push
es
add
xor
or
sub
push
hlt
push
inc
push
dec
xchg
movl
jle
mov
test
div
dec
xchg
pop
fwait
mov
and
jo
mov
icebp
faddp
movl
nop
sbb
jno
in
arpl
sub
jg
daa
sbb
mov
xor
inc
mov
lret
jbe
cmp
or
movsl
pop
and
hlt
cmp
mov
ljmp
dec
js
outsb
push
jo
pushf
jmp
sub
mulb
out
out
shll
into
fildl
jo
cwtl
jle
aaa
mov
and
pop
fidivl
pop
xchg
cmp
fsubrl
dec
inc
adc
data16
lods
jo
aad
fmull
add
jp
mov
mov
shrd
jo
flds
pusha
and
aas
jmp
subb
push
mov
lods
mov
push
xor
push
cmp
or
sub
lea
mov
inc
int
add
and
das
mov
outsb
add
addr16
push
and
xor
sub
jp
sbb
out
xchg
or
sub
sbb
xchg
and
sbb
or
or
push
pop
fwait
adc
ret
pop
jnp
iret
popf
popf
add
shl
push
push
mov
xchg
xchg
and
jl
mov
xchg
fwait
pop
shrl
dec
iret
pmaddwd
add
outsl
pop
popa
pop
cmc
xor
out
in
popf
mov
rol
push
pusha
aas
popa
cmc
add
sub
jle
push
iret
insb
adc
push
iret
out
stos
outsl
jle
add
imul
enter
pop
mov
xor
jecxz
hlt
cmpsb
mov
sub
push
cmpsl
mov
cmp
and
cmp
xchg
repz
roll
cmpsl
js
int3
out
lret
iret
frstor
daa
cmpb
add
bswap
xor
add
leave
pop
adc
fucompp
add
es
out
sbb
jle
mov
sub
push
and
lods
sub
sub
lods
pop
jmp
testl
push
test
mov
pop
call
xchg
cmp
divl
ss
fldenv
cli
jne
vmovddup
adc
push
jbe
lds
push
roll
cmp
das
lret
aad
loopne
pop
or
mov
loopne
test
pop
scas
jbe
psraw
xlat
sub
inc
xor
cmpl
test
mov
dec
inc
dec
pop
iret
cmpsl
or
ret
push
push
mov
jmp
nop
repz
push
add
outsb
pop
sub
pop
add
mov
dec
xor
sarb
divb
lret
pop
clc
inc
push
add
in
daa
sub
testl
push
jmp
add
lock
shlb
lret
or
bound
pop
adc
push
out
pop
xlat
push
test
call
sub
xchg
outsl
xor
pop
inc
and
xchg
mov
push
in
adc
xchg
inc
xchg
and
xor
jae
cwtl
dec
cmp
imul
in
movzwl
lcall
and
rolb
inc
es
ja
add
pop
cmpb
cmp
dec
call
or
xchg
ljmp
cmpsl
add
dec
cmp
aad
and
add
call
add
xchg
push
jp
iret
push
stc
mov
nop
cmpsb
lret
gs
jae
jmp
sbb
mov
push
jp
negl
cmp
cltd
push
xchg
outsl
lds
cmp
loopne
jo
int3
push
inc
fisubrs
pop
xchg
out
push
and
adc
mov
add
mov
mov
pop
and
or
cltd
scas
mov
push
jno
mull
push
mov
and
out
mov
add
dec
shll
imull
sbb
inc
inc
mov
jge
inc
push
ret
dec
in
inc
inc
into
je
insb
fistl
sbb
xor
out
bound
jle
mov
stos
aam
lods
bound
inc
xchg
jp
mov
cmpsl
inc
clc
fisubrl
mov
xor
int3
push
ficoml
pop
std
das
bswap
fnstcw
lock
divl
mov
out
outsb
sbb
adc
jo
or
bound
pusha
loope
pop
fisubl
les
pop
jnp
test
insl
pop
insb
xchg
lret
loopne
call
mov
mov
sub
call
lods
popf
xor
xor
in
push
sbb
sub
in
incl
mov
js
add
aas
xchg
adc
lds
imul
dec
fldt
jae
xchg
test
imul
jo
mov
push
lods
dec
mov
pop
iret
out
subb
pop
push
xor
cs
pop
test
mov
cmp
add
scas
cmp
dec
push
adc
adc
fists
push
daa
ret
mov
repz
sub
arpl
push
push
and
rol
loopne
jno
jno
mov
aaa
mov
outsb
sub
loope
mov
jl
adc
and
out
xor
lret
mov
xchg
out
paddusb
and
mov
jns
sbb
xor
shll
stos
outsb
shrl
out
daa
mov
ret
inc
nop
fldl
xor
xchg
xchg
out
adc
lods
test
or
jle
jae
cli
cmp
dec
aam
jge
gs
jne
pop
leave
mov
mov
pop
fmull
out
sbb
scas
xchg
sti
cmp
mov
lods
sbb
clc
insl
dec
cs
popa
aas
xor
jb
inc
sub
loopne
repz
aam
mov
sbbl
mov
jecxz
movsb
fsts
ljmp
and
add
adc
ljmp
dec
lods
mov
and
pop
jge
sub
xor
daa
jl
std
jmp
ret
push
inc
mov
rol
rolb
imul
test
push
mov
shlb
jle
mov
shl
and
sti
or
ds
rol
imul
jns
xor
test
clc
subb
les
xchg
imull
ffreep
push
ret
ljmp
inc
out
fnstenv
mov
push
xor
add
lock
mov
inc
mov
fwait
in
xor
push
scas
sub
into
imul
push
push
repz
mov
sub
xor
adc
mov
and
lret
cwtl
xor
ss
mov
and
icebp
or
push
cmp
sub
jb
mov
notb
mov
dec
jg
mov
adc
add
sub
mov
mov
out
negl
pushf
lret
inc
shrl
xorb
xchg
addb
or
mov
fadd
out
mov
cmp
loop
popf
lret
add
cmpsb
mov
cmp
rclb
test
lret
lcall
test
outsb
xor
cmp
sbb
iret
das
mov
lret
xor
in
clc
cli
out
bound
xchg
pop
pushf
sarb
mov
sub
and
lahf
xchg
imul
pop
hlt
xchg
loope
dec
sub
bound
testl
popf
push
js
gs
std
cmc
mov
sbb
in
mov
pop
sub
cld
inc
fs
adc
mov
in
test
add
inc
mov
sbb
cli
inc
adc
mov
popf
mov
adc
mov
test
xchg
mov
stos
sbb
inc
pop
call
out
test
and
sub
cltd
loope
ja
mov
push
aas
es
push
inc
mov
pop
ja
pop
sbb
pushf
inc
xchg
dec
or
test
test
pop
ja
mov
jp
dec
fadd
mov
mov
xor
ds
sub
das
lret
mov
in
dec
mov
mov
shrl
mull
jecxz,pn
push
adc
adc
cmpsb
out
mov
sub
cmpsl
lds
xor
ret
push
ret
andb
xchg
jns
sub
shr
sub
dec
mov
pop
sbb
push
push
push
xchg
mov
in
cmpl
push
rcll
icebp
mov
pusha
das
sbb
push
sub
xchg
out
shll
and
xor
and
sti
mov
xor
std
mov
inc
mov
lcall
mov
add
xchg
mov
scas
push
push
test
or
push
cwtl
jb
rorb
add
idivl
test
call
cmp
lods
mov
pop
sarl
loopne
fdiv
lods
mov
ret
pop
stos
js
cmp
sahf
pop
mov
cltd
imul
loope
push
popa
inc
aaa
loop
mov
test
mov
aaa
dec
dec
xchg
imulb
cwtl
aaa
push
jle
push
rclb
push
pop
mov
cltd
and
mov
test
pop
xchg
inc
sub
mov
and
ljmp
lods
lahf
push
pause
mov
nop
rorl
dec
aaa
xchg
das
test
inc
sub
test
lahf
lea
cmp
mov
bound
push
push
cwtl
and
ficoms
fistpll
jmp
std
repnz
cmc
add
insl
lock
xchg
shrl
xchg
or
sbb
cmp
jne
push
mov
sbb
jae
fistps
dec
mov
rol
mov
je
repz
cwtl
pop
int3
sub
dec
inc
xor
cli
test
inc
mov
js
inc
test
shll
sub
div
push
int3
xchg
mov
enter
pop
aas
lock
push
xor
or
inc
jno
imul
lock
push
out
dec
mov
mov
negl
adc
mul
xor
jns
int3
out
negb
xchg
add
push
add
popa
repnz
popf
cmp
and
cmp
mov
nop
mov
push
or
sbb
and
leave
adc
jbe
lret
mov
movsb
cli
pop
dec
sbbl
mov
ds
mov
cmp
adc
jb
push
fildll
out
add
aad
pushf
ret
pminub
push
shl
leave
int
mov
or
jp
or
jmp
and
push
inc
loope
push
mov
xchg
jmp
ret
pop
dec
adc
loop
add
out
pop
lods
imul
jg
imul
mov
xor
cmpsl
insb
mov
dec
or
cmc
ljmp
jbe
sbbb
mov
ljmp
jmp
cmp
or
jg
xor
sub
mov
cld
cmc
pop
shlb
mov
int
push
mov
push
clc
cli
push
aam
hlt
lahf
loope
into
in
mov
xchg
or
xchg
cmpl
sub
xchg
xchg
fs
mov
jnp
mov
xchg
test
cld
cmpb
jns
adc
jp
out
sub
sti
fsubl
test
adc
pop
outsl
xor
sbb
pop
push
data16
ret
cld
mov
xchg
xor
sbb
cltd
xlat
das
fisttps
cmpsl
push
sbb
fs
stos
call
in
subb
push
cmpsb
daa
jl
push
aad
sub
xchg
cmpsb
scas
into
adc
push
push
sub
cld
xor
into
jl
xor
mov
ja
cld
and
pop
in
fcoms
fdivl
pop
in
icebp
cmp
rclb
ss
in
jge
daa
int3
frstor
xchg
xor
ja
jo
mov
mov
fcoms
mov
mov
pop
jecxz
pop
test
cmp
dec
cmpsl
ds
cmpsb
clc
bound
cmp
push
out
pop
orb
pop
jno
pop
lahf
popa
push
mov
add
add
mov
lret
xor
cmpl
mov
jno
aas
cmp
mov
fistpll
or
adc
mov
or
sub
cmpsb
lret
adc
iret
sbb
xor
cmp
setne
inc
jnp
in
clc
sbb
pushf
sbb
gs
outsb
rolb
es
xchg
pushf
das
xchg
pop
cmpsl
add
jmp
popf
iret
jns
sub
sahf
mov
daa
sbb
fidivs
sbb
fisubrl
insb
pop
xchg
cmc
and
push
icebp
and
fsubs
scas
lret
pop
bnd
ja
fstpt
and
inc
mov
and
mov
mov
outsl
lock
lds
ret
imul
fsubrl
divb
inc
or
pop
repz
sbb
cmpsl
ret
andb
cwtl
rorl
mov
test
pop
sbbl
xchg
gs
xor
ss
mov
sub
pop
in
jbe
cwtl
inc
push
cmp
divb
and
mov
popf
not
cmp
jo
add
into
ret
int3
mov
popf
or
fiadds
cli
mov
jp
loope
addr16
or
mov
or
mov
push
fdivrp
je
jo
fmul
and
push
aad
push
inc
fildll
mov
cmp
mov
pop
ds
cmpsb
push
xchg
out
div
adc
pop
add
adc
xchg
stc
xchg
pop
outsl
repz
jg
lahf
loopne
sub
popa
mov
sahf
les
push
push
loopne
pop
lret
sbb
clc
mov
jae
into
dec
mov
cli
cmp
ja
jmp
mov
sub
jl
ss
inc
enter
adc
push
dec
or
je
jbe
scas
adcl
scas
xchg
inc
mov
lea
test
shlb
mov
dec
loop
fs
ljmp
mov
mov
test
mov
fldenv
test
push
das
pop
into
mov
int
jl
and
daa
enter
pop
push
imul
pushf
enter
mov
outsb
js
sbb
mov
mov
cs
cmp
jl
xchg
and
mov
mov
cld
loope
jbe
lret
popf
and
fs
int3
sbb
lcall
test
jp
subl
jl
add
das
call
mov
insb
mov
cld
sbb
xor
mov
jecxz
dec
push
xchg
loope
ja
icebp
lcall
lods
repz
and
fucomi
cmc
add
and
mov
ljmp
mov
aas
fistl
sub
xor
xor
cmp
dec
jmp
dec
jge
cmp
mov
pop
xor
int3
pop
pushf
sti
aad
insb
loop
fs
clc
loop
dec
mov
loop
mov
xchg
mov
in
imul
and
or
sbb
jl
popa
lret
pop
ret
andb
scas
jp
imul
pop
sbb
jecxz
xor
cmp
pop
push
pop
inc
dec
or
into
jae
mov
addl
mov
sub
shll
add
psllw
fcmovne
fcomps
ret
mov
xchg
ret
mov
or
xchg
jl
icebp
xchg
push
and
inc
inc
mov
mov
sbb
xlat
aaa
fsubrl
sbb
andb
cmpsb
or
test
pop
leave
jmp
shl
and
mov
fsubl
int
lret
lds
push
push
add
push
push
dec
jl
jno
movsb
mov
ja
into
loop
mov
jb
les
pop
scas
std
out
mov
mov
push
loopne
std
aaa
ret
rcl
jg
sbb
push
mov
loopne
outsb
cs
fs
and
sub
pusha
jno
inc
xchg
cmp
jp
xor
pop
clc
mov
lcall
xor
sub
inc
jb
scas
dec
mov
jo
add
ret
cmp
lcall
sbbl
popa
jb
and
or
roll
mov
cwtl
push
leave
in
xchg
je
pop
iret
int
loopne
movsl
cmp
mov
lods
into
pop
mov
jns
jbe
popf
sub
cmpsb
mov
push
push
subl
xchg
imul
inc
in
call
mov
cmp
push
scas
xorl
jge
mov
scas
jne
xchg
xchg
or
push
dec
pop
adc
cwtl
call
test
cmpsl
sub
notb
test
xor
adc
and
pop
sbb
and
xlat
add
push
jg
xor
mov
add
cmpsl
out
hlt
imul
pop
das
out
addb
xchg
ja
adc
mov
clc
inc
pop
leave
push
pop
pop
aas
cmp
les
pop
and
inc
inc
out
in
in
subl
mov
add
mov
gs
je
pop
in
xchg
mov
scas
notb
or
fists
sub
push
jae
jl
xlat
cmp
mov
or
shll
rorl
lock
or
fmull
jo
notl
push
jmp
icebp
int3
scas
cmp
out
lcall
je
mov
dec
mov
lret
rorb
sbb
jbe,pt
add
aad
sbb
aaa
rorb
mov
inc
adc
sbb
cli
push
mov
aas
cmpsl
popf
es
lcall
pop
loop
outsb
ss
push
lds
mov
adc
aad
sub
and
cltd
aam
mov
in
pop
push
outsl
lds
push
lret
or
mov
sub
ss
xchg
sub
xchg
mov
dec
mov
repz
adc
and
mov
cld
jg
push
rclb
pop
push
cmp
imul
icebp
cmp
xchg
int3
mov
xlat
pop
add
sub
add
and
mov
rorl
cs
mov
sub
test
sti
or
sbb
loopne
push
test
mov
mov
inc
lahf
hlt
pop
mov
mov
mov
fidivrl
xor
pop
mov
mov
dec
je
dec
lods
ja
cmpl
push
std
add
and
test
pop
fists
cs
xchg
fistpl
adcb
dec
jg
fimuls
add
pusha
push
mov
pop
xchg
adc
and
xor
icebp
sbb
clc
aad
inc
add
inc
out
adcb
int
or
iret
jp
pop
cmpsl
push
cmp
push
roll
xor
sub
dec
fsubrs
movb
jl
pop
popf
pop
outsl
cmp
jge
xor
insl
div
div
cmp
sbb
js
mov
xchg
test
or
out
inc
je
sbb
inc
pushf
hlt
xor
jmp
dec
inc
mov
out
sti
sbb
or
dec
lret
or
inc
xchg
add
popf
mov
fisttpll
jae
or
xor
hlt
cli
pop
pusha
and
subl
aaa
out
clc
jecxz
pop
inc
pushf
rolb
pop
daa
cmp
andb
add
stos
mov
sub
addr16
xchg
mov
in
pop
pop
pop
push
cs
fists
xchg
loopne
cmp
xchg
inc
mov
arpl
test
mov
push
cli
mov
sbb
lock
add
in
mov
xlat
mov
sub
ljmp
out
arpl
out
xchg
in
xor
pop
sub
mov
shrb
gs
loopne
xor
push
fcmovu
cvtps2pd
pop
pop
dec
jb
dec
mov
test
mov
xor
adc
sbb
and
push
rcl
jbe
inc
mov
out
sti
test
cmpb
adc
jb
dec
xchg
pop
add
adcl
push
jne
pop
push
out
and
mov
cmpsb
ret
mov
test
cmp
fisttps
testl
out
push
popf
pop
push
dec
jns
push
xchg
sbb
mov
das
pop
and
ss
lds
and
in
insl
mov
mov
jae
jge
data16
push
nop
dec
sub
xchg
mov
or
leave
clc
xchg
jle
and
mov
aam
aam
sub
call
or
push
cld
mov
enter
mov
dec
xor
adc
or
mov
cmp
jno
xchg
xor
jmp
ret
stc
cmp
and
out
es
xchg
std
add
out
rolb
mov
mov
inc
cmpsl
movsb
push
mov
push
xchg
pop
inc
push
std
cwtl
add
adc
pop
clc
xchg
adc
mov
mov
jo
outsl
cld
test
mov
push
cmpsb
ja
loop
push
mov
inc
sub
rclb
mov
inc
sbb
pop
clc
mov
ret
fdivl
lods
mov
jmp
adc
mov
fsubs
lods
mov
out
fwait
mov
and
sti
loop
clc
cs
outsb
push
leave
bound
xor
adc
mov
out
pop
dec
stos
xor
enter
adc
pusha
bound
stos
ss
xor
mov
cwtl
dec
stos
xchg
xchg
xchg
sbb
scas
out
xor
add
jp
sub
pusha
in
loope
and
lcall
test
stos
dec
test
push
sbb
shll
aad
push
xor
out
fcoms
aas
pop
mov
and
shrl
pop
push
popa
jno
mov
addr16
sub
fstsw
mov
in
ret
push
push
adc
jp
and
lcall
mov
mov
ljmp
lret
subb
cmc
mov
dec
pushf
mov
in
xor
pop
mov
roll
pop
dec
gs
add
pop
pop
ret
xchg
dec
push
sbbl
jp
in
fwait
call
out
jb
sub
out
adc
ret
xor
inc
push
popf
mov
and
mov
cmp
leave
xchg
cmpsl
insl
aas
insl
outsl
add
jg
dec
aas
leave
push
cs
incb
fs
je
cmp
js
fcmovnb
sahf
ror
jmp
xchg
mov
xchg
or
mov
outsb
xchg
lds
je
arpl
jge
dec
jae
fsubrl
stc
mov
xor
mov
xor
cmp
outsl
mov
ja
or
repz
inc
arpl
inc
imul
scas
sbb
sbb
fildl
mov
addr16
xchg
jnp
mov
lds
in
dec
mov
cld
je
mov
cwtl
outsl
push
ja
cmp
pop
adc
push
loop
xlat
sub
add
inc
popf
xor
cmp
sbb
js
or
dec
push
xor
repnz
push
icebp
out
pop
push
loope
jno
cmp
xchg
ljmp
push
cmp
mov
enter
sbb
mov
push
movsb
andl
test
mov
ss
dec
xor
pop
gs
push
daa
sub
fbld
fwait
out
out
jb
rolb
aad
fimull
sub
mov
dec
popf
push
inc
mov
mov
std
iret
jo
mov
sbbl
cmp
int
popa
inc
es
fsts
js
ds
adc
fs
mov
sub
loopne
push
sub
xor
mov
mov
add
xchg
int3
add
cmp
fidivrs
leave
jecxz
jno
aad
out
imul
mov
cmp
outsb
cmp
lret
stc
adcb
imul
and
mov
xlat
in
and
fdiv
and
push
cmc
jne
pop
mov
leave
mov
xchg
sbb
add
jge
daa
pop
dec
xchg
mov
mov
test
call
mov
pushl
clc
ror
nop
sti
push
fadd
or
fcomps
or
add
adcl
xchg
into
ljmp
pushf
jae
int
xchg
lcall
nop
jle
bound
dec
ret
mov
add
aad
addl
das
mov
gs
in
test
sti
mov
int3
cmpsl
or
ja
bound
mov
mov
cld
fs
push
inc
lcall
cmp
xchg
pop
mov
nop
sbb
es
and
xor
movsl
add
shlb
arpl
std
xchg
cltd
jno
ds
insl
aam
daa
cmpsl
jle,pn
aas
cmp
jg
in
mov
daa
jnp
lods
lods
add
and
mov
stc
dec
mov
bnd
add
push
pop
sub
out
dec
mov
aad
rcrl
add
pop
fsubrl
psubd
out
sbb
rcrb
std
in
movsl
inc
jns
sbb
test
icebp
xor
adc
sub
loop
and
adc
scas
jge
dec
and
pop
mov
sbb
cmp
nop
test
dec
loopne
mov
data16
jl
insb
daa
push
sarb
arpl
lods
add
aam
mov
outsl
adc
lahf
subl
lret
shrl
and
sbb
and
xor
cmpsl
cmp
int3
push
das
fdivs
jle
scas
jp
daa
jno
xchg
or
jge
sub
leave
xchg
into
dec
dec
cmp
adc
pop
nop
xchg
jno
pop
in
repnz
les
negb
icebp
jae
cmc
inc
push
bnd
ljmp
inc
scas
adc
in
js
add
sar
std
out
cmp
ljmp
imul
loopne
iret
mov
mov
pop
dec
fisttps
repnz
cmp
scas
lods
and
aam
or
push
scas
test
jbe
fs
out
and
jae
push
or
fsubp
adc
jle
xchg
imul
sub
dec
mov
stos
jae
add
stc
arpl
aas
insb
sub
add
inc
jle
mov
xlat
lcall
movsb
shrb
inc
and
in
sbb
sahf
mov
imul
int3
clc
aas
xor
call
xlat
push
je
add
xchg
push
in
mov
jge
jg
xor
je
cli
fstl
repnz
fsubs
cmp
movsb
inc
bound
mov
xchg
xlat
fwait
insl
sub
and
xchg
in
clc
in
mov
cmpsl
xchg
and
mov
imul
pop
pop
jmp
outsl
xchg
jnp
addr16
and
das
into
sub
dec
dec
xchg
out
lcall
mov
subb
out
test
jo
xor
loopne
mov
addr16
shll
pop
sub
xor
xor
push
mov
test
jne
subb
xchg
aaa
pop
cmp
cmp
rclb
cmp
hlt
aaa
or
inc
ljmp
pop
fsubr
xchg
pop
mov
cwtl
sahf
mov
jae
nop
addr16
faddl
frstor
sahf
cmp
mov
cmc
repnz
pmulhuw
mov
mov
jnp
test
and
fmull
inc
in
stos
mov
test
stos
and
lds
frstor
loop
jg
lea
cwtl
inc
nop
cmpsb
pop
movsl
les
out
mov
lret
sti
xchg
arpl
inc
push
xor
inc
fdivs
inc
arpl
scas
imull
cltd
shlb
aam
fs
scas
pop
or
outsb
mov
xchg
xchg
push
cmp
in
cld
add
int
in
ret
popa
jecxz
push
mov
andb
shr
add
data16
in
mov
dec
dec
out
addr16
out
cmp
inc
bound
ffree
push
leave
notl
cs
sbb
ss
dec
pushf
jecxz
adc
fidivl
push
imul
mov
fs
mov
cli
fwait
dec
pop
movlps
xchg
stos
mov
repz
int
pop
pop
jge
insb
mov
es
fimuls
mov
mov
ja
jp
mov
sub
or
xor
inc
lds
mov
cmpsb
xor
nop
mov
jg
sbbb
mov
shrb
pop
mov
push
shr
imul
inc
repnz
mov
xor
mov
arpl
data16
push
movsl
cmp
nop
fiadds
fisttpl
stc
std
jmp
sub
pop
lock
xchg
lahf
mov
xor
sub
xchg
push
sub
fsubs
xchg
cmp
cltd
pop
sub
inc
insl
icebp
push
repnz
das
sarb
push
pop
pop
jl
push
jb
push
xor
add
cwtl
mov
rcl
idiv
jmp
fcoms
fistps
xchg
dec
and
std
imul
in
fxch
pop
pop
cld
pop
mov
and
jecxz
cmc
xchg
test
mov
sbb
sbb
dec
xchg
daa
pop
mov
mov
fsub
pop
mov
cmp
sub
add
jnp
dec
pop
pop
pushf
and
push
pop
inc
jae
dec
adc
outsl
lock
dec
inc
gs
sub
mov
xchg
add
mov
insl
xor
dec
add
xor
dec
dec
ss
dec
fisubl
ror
rcll
push
sub
inc
iret
mov
arpl
imul
dec
lret
iret
or
or
repz
mov
push
popf
and
dec
lcall
movsl
or
notl
cwtl
cli
jae
int3
xor
or
xlat
cmp
stos
cmc
sbb
sub
jo
mov
mov
mov
notb
aaa
cmp
sub
sub
push
inc
mov
adc
pop
iret
shll
xlat
test
xchg
sub
loope
sub
data16
std
mov
mov
cld
es
scas
xor
sub
out
sbb
test
jmp
xchg
cmpl
cmp
pop
lds
push
cmp
cmp
add
ret
loop
rorl
xorl
dec
mov
jno
cli
xor
cmp
sub
arpl
roll
mov
ds
insl
cmpsl
adc
mov
jnp
sub
inc
fwait
adc
push
xor
sbb
out
or
push
lds
mov
cs
xchg
sbb
mov
mov
movsl
das
lret
fs
out
inc
xor
iret
sbbl
js
or
pop
adc
and
dec
js
enter
lcall
frstor
mov
stos
fmull
push
jge
add
mov
dec
rolb
outsl
movsb
pop
cld
cmp
inc
imul
pop
sbb
and
loop
mov
aaa
in
roll
clc
es
adc
rcrb
sbb
jno
subl
jns
and
xlat
pop
test
adc
fwait
mov
mov
sub
andl
scas
dec
xchg
lret
pop
lcall
push
lahf
nop
ss
std
sbbb
cwtl
dec
aad
pop
cmpsl
daa
aam
jns
mov
sbb
adc
xlat
cltd
cltd
fiaddl
mov
xor
scas
test
fstps
push
lret
and
mov
and
mov
lret
fcomps
lods
add
push
cmp
int
mov
cmp
fdiv
fnstcw
jle
popf
jo
or
push
fldt
jns
dec
xlat
rol
cmp
lahf
dec
fxtract
pop
xchg
test
les
and
stos
cmp
push
inc
jnp
loop
mov
flds
and
fisttps
adc
loopne
fcomps
mov
adc
arpl
lret
gs
out
imulb
scas
sub
push
iret
pop
jne
cmpsl
les
sub
test
in
adc
outsb
stc
jo
sub
out
mov
push
sub
aaa
adc
repz
insl
and
and
sbb
adc
sub
push
test
or
sub
in
fwait
les
aaa
jmp
pusha
daa
inc
adc
mov
jle
mov
cmp
pop
sub
test
adc
pop
jp
push
or
add
sub
dec
fstl
sahf
dec
nop
loop
jae
and
mov
nop
adc
into
push
lahf
cmp
or
push
in
add
scas
stc
shlb
cmp
sti
cmc
scas
fdivl
arpl
fisubl
push
or
xor
loop
push
lds
push
shrb
clc
dec
jb
jp
test
jp
pop
scas
adc
inc
daa
push
leave
aad
test
xchg
mov
stos
bound
cmp
mov
sarb
xor
pop
add
jae
cmc
adc
inc
ja
pop
aad
push
aaa
pop
add
mov
push
adc
or
pop
ljmp
jbe
lods
outsl
int
sarb
aad
sub
cmpsb
cmc
push
cld
sbb
addr16
jae
into
or
es
push
add
push
adcb
outsl
in
es
cmp
iret
adcl
lods
inc
lds
test
in
mov
out
jo
mov
gs
testl
mov
popf
mov
inc
dec
fildll
rolb
test
int
fimull
xor
scas
stos
add
add
fwait
es
adc
fildll
popl
dec
notl
adc
fists
lock
imull
add
dec
cmpsb
movsb
jnp
add
loop
out
mov
cmp
xchg
sub
and
sub
cli
mov
mov
jmp
cmpsl
dec
mov
aad
push
sbb
cmp
mov
dec
xchg
pop
decl
test
aad
pop
cmpl
xchg
repz
imulb
pop
mov
nop
mov
add
rcrb
int3
cmc
xchg
int3
stos
or
stc
stc
xor
mov
push
int3
ror
aam
mov
lea
gs
ja
arpl
sbb
mov
sarb
ret
mov
imul
rorb
push
inc
arpl
iret
or
add
imul
or
insb
adc
sbb
out
pushf
shrl
pop
lods
push
js
fsubs
adc
sti
pop
lods
into
idiv
icebp
adc
mov
out
pop
inc
dec
gs
roll
ficomps
popf
mov
lock
les
push
pop
gs
xlat
nop
cmp
imul
adcb
and
sub
enter
and
scas
mov
fcoms
pop
push
ja
sbb
cs
pop
add
outsl
fidivs
test
mov
mov
xchg
fcmovne
sbb
mov
push
sub
push
in
out
leave
pop
roll
ficoms
cmp
into
fists
int
std
rclb
inc
jbe
push
ficoms
mov
out
xor
outsl
mov
sti
and
lret
or
xor
dec
sub
add
hlt
shrl
push
mov
add
cwtl
adc
mov
adc
mov
add
fistl
cmp
jbe
add
andb
push
mov
cmp
mov
add
dec
idivb
mov
ss
push
fs
jb
orb
xchg
jae
xor
arpl
jmp
sahf
mov
inc
pusha
and
icebp
and
leave
fisttpll
hlt
fsubp
add
jecxz
shrl
cmp
mov
scas
and
scas
fisubs
mov
inc
fstpl
cmp
inc
mov
test
sbb
test
das
xor
fidivl
mov
mov
cmpsb
push
jl
push
insl
pop
pop
push
pop
dec
and
lcall
adc
hlt
jge
sbb
out
add
jnp
lods
add
jne
xor
scas
adc
jbe
xor
add
xchg
add
or
movsl
fwait
mov
mov
call
mov
inc
xchg
das
add
loop
pop
mov
xchg
push
mov
les
jb
in
push
cltd
scas
test
jae
test
cld
xor
imul
je
sahf
push
test
mov
out
jmp
sub
lret
push
pop
lds
jnp
shlb
shrl
cmpsb
mov
scas
mov
mov
out
test
out
stos
inc
addr16
loop
mov
mov
push
push
dec
cmp
push
cltd
jge
mov
sti
notb
mov
mov
inc
jecxz
xor
inc
pop
mov
add
ss
cwtl
addr16
inc
add
cmpsl
and
sub
mov
lds
fimuls
out
or
bound
adc
ss
leave
push
into
in
cmp
dec
inc
jnp
rorl
push
out
xor
into
daa
add
pushl
or
mov
mov
int3
mov
negl
je
lahf
xchg
call
xchg
and
jbe
sub
dec
xchg
cmpsl
xchg
jge,pn
sbb
adc
daa
enter
jne
xchg
filds
mov
mov
xchg
xchg
lcall
in
push
test
movsb
xlat
xor
add
push
cmc
add
bound
shlb
call
cwtl
rolb
mov
mov
xchg
scas
cmpsb
jmp
inc
mov
and
stc
outsl
add
xor
pop
addr16
jp
scas
cwtl
jno
mov
sbb
sbb
hlt
xor
pop
gs
and
arpl
out
mov
fs
test
daa
into
addr16
mov
sbb
sbb
add
xchg
notb
mov
xchg
out
xor
clc
pop
out
mov
lahf
sbb
mov
push
inc
cmpsl
aam
clc
push
pop
fdivs
jle
push
out
jb
popa
push
xor
mov
adc
xor
adc
dec
and
mov
mov
pop
orl
dec
incl
movsl
loope
gs
js
stc
and
fwait
mov
cmpsb
into
inc
ljmp
mov
out
jp
sub
jmp
inc
dec
repnz
mov
sub
jecxz
sub
fcoml
inc
or
aam
pop
mov
or
fs
test
fsub
mov
std
xchg
je
mov
insb
lret
sbb
sub
shlb
pop
push
into
jmp
in
ret
pop
divps
dec
out
cmpsb
aaa
dec
aad
jns
jl
ds
movsl
ret
mov
jecxz
mov
pop
aad
mov
jb
xor
mov
jl
push
mov
jnp
jle
data16
stos
mov
aam
in
jge
mov
outsb
jnp
push
jl
sbb
idivl
jp
aam
insb
xchg
mov
sbb
int3
or
inc
cmp
test
sub
push
ds
shll
movsb
leave
clc
movsl
jb
fdivrs
mov
lret
jg
lahf
scas
push
fldcw
out
or
gs
sbbl
mov
jo
jnp
push
jae
mov
ljmp
clc
jb
sbb
fcmovnb
aam
stos
xchg
mov
mov
pop
add
in
jecxz
dec
enter
dec
idivl
xlat
inc
aad
lods
cltd
dec
ja
push
pop
ret
cmp
jno
pop
mov
cmp
dec
mov
sbb
sub
cli
mov
sub
jg
fsubs
push
and
test
rcrb
sti
adc
lret
aaa
aam
jnp
xchg
add
pop
movsl
add
les
pop
and
pop
pop
sbb
jl
sbbb
stc
add
dec
cmp
xchg
outsb
push
adc
jg
into
push
push
aam
enter
fistps
loopne
leave
mov
pop
mov
jo
lret
lret
ss
jno
ljmp
jno
cmp
aaa
loope
mov
inc
cs
push
in
or
xor
pop
stos
bt
cmp
pop
into
fisubl
sbb
fisttpl
shll
pusha
push
xlat
dec
push
sbb
sbb
into
stos
in
mov
mov
pop
jmp
cmp
out
jne
adc
mov
bound
cmp
fwait
shrl
xchg
and
pop
cmp
pop
inc
int
pop
dec
pop
sub
fmull
adc
jp
mov
mov
cld
pop
rolb
dec
jecxz
cmp
jae
ljmp
vaddsubps
adc
mov
mov
sub
lds
jp
xor
inc
ds
jb
cs
xchg
sbb
jmp
sub
jl
add
dec
pop
js
es
push
cmpsl
mov
arpl
test
jb
dec
ljmp
stos
jmp
fs
je
cmp
or
pop
inc
ret
ljmp
cmc
mov
xor
or
pushf
cmp
inc
sbb
mov
cmp
mov
jae
stos
mov
lock
test
sub
mov
adc
jmp
js
leave
add
es
xor
rolb
mov
jb
sub
dec
mov
fildll
out
jecxz
test
stos
xor
mov
jno
mov
test
cmpsb
fidivs
dec
or
repz
jns
sub
jb
mov
cs
add
dec
lds
test
fstl
loop
and
loop
push
int
cs
frstor
mov
imulb
testl
int3
jecxz
pusha
in
mov
push
rcll
aam
rcrl
nop
cmp
int3
push
fwait
sbb
movsb
jae
jge
dec
test
ss
lret
in
mov
arpl
imul
xorl
sti
push
xchg
inc
out
xchg
pop
cmpsb
lcall
inc
enter
jb
dec
fdivr
imul
scas
push
ds
inc
mov
je
lock
cltd
pop
adc
push
test
cld
stc
or
xlat
pop
pop
in
or
jle
aaa
add
jmp
int3
das
sub
push
mov
out
ret
shll
mov
orl
sbb
add
mov
outsb
mov
repnz
jl
aaa
test
insl
mov
cmp
dec
push
int
sbb
loope
sbb
daa
stos
pcmpeqd
jmp
daa
xor
fsubs
rorl
ss
out
ret
jae
and
sti
pop
mov
push
sbb
push
subb
sbb
push
pop
mov
fstps
and
shlb
inc
mov
fwait
mov
arpl
push
pop
xchg
cmpw
pop
rcl
popa
ret
data16
inc
sub
lods
lahf
jns
lret
movsl
and
nop
xor
xchg
test
pop
jle
pop
xor
xor
push
adc
cmp
add
and
pop
mov
mov
ret
xchg
call
pop
cmpsl
mov
jno
scas
add
cwtl
mov
push
add
xchg
cs
jg
into
lcall
popf
out
cmp
mov
fadd
cmp
sub
fcmovbe
pop
int3
out
test
iret
cs
loop
subb
std
sub
cltd
shlb
enter
jle
stos
ljmp
lcall
enter
jp
aam
sub
fstl
cmp
mov
mov
test
add
cs
std
pusha
cmp
xchg
fnstcw
out
sbb
mov
into
sahf
dec
adc
popa
sbb
sbb
mov
pushf
insl
mov
push
maskmovq
notl
test
mov
jne
xor
pusha
je
jnp
inc
and
mov
aam
inc
daa
testb
loopne
rolb
cmp
loop
je
cld
shrb
sbb
clc
push
cmp
cld
or
push
xchg
sub
sbb
and
xchg
out
push
lahf
fwait
loop
inc
sbb
dec
iret
push
and
std
das
rolb
push
cmp
pop
movsb
rcrl
mov
data16
into
in
das
pop
lcall
mov
pushl
testl
jmp
mov
das
cmp
mulb
mov
or
fiaddl
push
mov
inc
test
bound
xchg
insl
nop
fs
push
dec
lahf
pop
test
test
adc
cld
test
iret
mov
test
mov
xchg
jp
xor
push
loopne
pop
pop
or
add
movl
jmp
push
mov
adc
sub
pop
dec
data16
jmp
lret
adc
lret
and
sti
pop
mov
or
cmp
adc
shlb
dec
sub
jge
dec
cmpsl
pop
sub
orb
out
pop
shrl
inc
xor
add
xchg
dec
sub
lea
mov
stc
dec
mov
cmp
or
sub
cwtl
mov
pop
cmpsb
push
movb
aas
and
and
push
mov
dec
push
cmp
or
int
out
repnz
lcall
out
and
rorb
xchg
das
push
pop
push
or
popa
adc
ja
icebp
lea
ret
xor
in
adc
dec
jl
sbb
divl
add
sub
cmpsb
lret
sbbl
push
shrl
sbb
bound
sbb
aaa
jbe
loope
rol
bound
test
aam
lcall
push
repz
mov
inc
imul
lods
cmp
das
push
sbb
iret
or
sahf
cmc
dec
cltd
dec
cmpsl
fs
in
mov
lahf
push
data16
aad
pop
push
test
jo
add
stos
cli
shll
xchg
add
mov
pushf
dec
sub
pop
xor
lods
sbb
pop
inc
mov
repnz
xchg
and
gs
adc
mov
dec
cmp
ret
sbb
mov
mov
ljmp
sub
add
andl
and
movsb
fcoml
adc
scas
test
jne
adc
out
pop
dec
sbb
fldl
cwtl
sti
inc
jae
adc
dec
int
std
mulb
je
stos
cmp
loop
inc
jo
xchg
stos
pop
xor
mov
sbb
lret
mov
lret
mov
mov
push
push
ficoml
loope
pop
les
loopne
int
jns
leave
add
add
mov
mov
into
push
imulb
push
mov
inc
push
adc
gs
and
inc
jmp
mov
push
fistps
test
sahf
testl
pop
ret
fstl
jae
sar
addr16
jb
int3
cmp
dec
push
adc
shr
popf
inc
cltd
add
call
pop
jns
ljmp
xchg
and
adc
dec
popa
stos
vpmacssdql
fwait
inc
push
sbb
aaa
inc
leave
mov
ds
dec
cwtl
sbbb
jno
dec
cwtl
dec
add
jo
lret
mov
test
pop
loope
imul
sbb
dec
cmp
mov
in
or
inc
pushf
mov
mov
sub
ljmp
es
xor
cmp
fs
push
adc
fiaddl
daa
push
jl
pushf
out
imul
add
iret
pop
jb
out
hlt
loop
sti
xor
add
scas
scas
mov
ljmp
sbb
dec
movsl
jg
ret
sahf
mov
push
cmp
jecxz
pushf
add
cmp
mov
push
add
je
pop
aad
push
pop
lock
mov
dec
cwtl
cmp
jns
shrb
aaa
ret
cltd
lea
push
rclb
dec
les
ret
test
mov
movsl
js
and
jo
in
mov
test
icebp
push
cmp
pushf
and
xor
lea
sahf
add
fidivrl
xor
inc
and
nop
bnd
jbe
or
push
fnsave
mov
call
stos
data16
iret
sbb
jp
shrb
xchg
cwtl
mov
xor
stos
sub
into
add
pop
cmp
pop
pop
jns
jb
aaa
push
push
xchg
add
addl
jmp
dec
or
cmpsl
push
sahf
repz
sbb
outsl
pop
into
cmp
and
adc
fcomps
roll
cmp
int3
dec
xchg
adc
mov
dec
arpl
lods
mov
leave
mov
sbb
xchg
imul
push
sub
xor
pop
shl
aaa
mov
jp
jle
shll
int3
or
aas
into
test
jle
sub
adc
cmp
shrl
push
cmp
adc
in
lret
iret
mov
out
xor
add
push
cmpsb
jbe
jbe
adc
pusha
or
lret
mov
js
xchg
sub
out
cmpsl
sbb
sub
mov
xchg
lret
outsl
arpl
inc
movsb
out
add
es
mov
and
ficomps
sub
rolb
movsw
mov
leave
xorl
loop
dec
dec
fstpt
jnp
add
and
std
jo
xor
jl
addr16
loope
out
xchg
mov
pop
sbb
jl
fildl
emms
ljmp
mov
inc
sbb
inc
stos
pushf
inc
inc
xchg
sbb
cld
xor
jns
jno
andl
push
adc
mov
mov
in
pop
add
cltd
std
orl
leave
and
sbb
fnstsw
aad
shrb
or
add
jle
pushf
mov
add
lods
clc
mov
mov
jl
aas
push
pop
adc
insb
shlb
sub
inc
dec
lret
imul
or
stc
shlb
icebp
loop
imul
dec
jb
in
mov
lret
int3
xor
adc
add
dec
cld
mov
sbb
jp
std
gs
stos
add
adc
and
sub
dec
sbb
mov
xchg
pop
mov
movsl
mov
scas
icebp
je
inc
cwtl
sbb
dec
mov
jbe
cltd
int
lods
pusha
cmp
cwtl
test
je
bnd
sub
rcrb
imul
arpl
aam
jns
inc
sbb
insl
iret
scas
push
mov
andb
xlat
orl
addr16
sbb
mov
mov
or
stos
fdivrs
xchg
push
or
hlt
mov
cmpsl
mov
and
xor
jle
push
push
shrl
das
out
push
push
push
adc
fistpl
repnz
sbb
mov
add
jle
shr
mov
fadds
sub
add
outsl
dec
jp
adc
nop
or
cmp
inc
cli
jmp
in
pop
jnp
cmpsb
dec
pop
inc
xor
lods
test
push
sbb
ret
shld
aaa
pop
xchg
mov
push
shl
movsb
mov
pop
ljmp
test
cltd
lock
push
imul
xchg
sar
pop
aaa
mov
or
dec
xchg
mov
cld
cmp
je
div
test
pushf
scas
lcall
mov
daa
hlt
fcoms
fisubs
leave
push
sahf
push
les
mov
mov
inc
sbb
jne
and
mov
test
mov
movsl
mov
inc
repnz
test
sti
cmpl
sbb
in
sub
xor
xor
adc
jne
adc
subb
aaa
sbb
fistl
arpl
insb
orl
inc
icebp
jnp
out
cmpsb
jle
mov
ja
in
sbb
sub
test
loop
out
in
cmp
cmp
cmp
addb
ret
aam
lea
xchg
sub
dec
mov
jae
in
mov
scas
ljmp
icebp
pop
inc
pop
sbb
dec
icebp
inc
xor
inc
cmp
outsb
mov
clc
mov
lea
ret
fldcw
sbb
test
mov
adc
jnp
popa
roll
stos
jmp
ja
cmpl
pushf
push
mov
mov
sarl
call
test
sbb
jo
add
das
add
fadds
out
mov
cmp
andb
rcrl
cmp
inc
aad
dec
sbb
out
and
mov
aaa
and
das
sbb
les
adc
dec
mov
add
in
push
lret
xlat
or
nop
sti
jmp
xorb
aas
scas
outsb
fdivrp
les
xchg
add
push
iret
outsb
in
jl
gs
pop
ss
cltd
mov
sbb
inc
sbb
adc
fimuls
fwait
sub
movsl
ja
lret
sbbb
rsm
int
ret
pop
cmp
cs
imull
addl
cld
mov
insb
popa
add
cld
push
fsts
cmc
popf
pop
add
jae
ffreep
adcb
loop
push
sub
lahf
bound
cwtl
loope
mov
data16
or
fsts
stos
or
jno
xchg
push
or
push
sub
scas
aaa
sbb
cmp
jbe
mov
fcmovu
pop
out
cmp
aam
mov
cmpb
xor
loopne
cmp
mov
movsb
sbb
pop
mov
sub
imul
vpextrw
lds
mov
imul
sbb
mov
int
mov
sarl
xchg
outsb
ficomps
inc
arpl
lods
data16
or
jl
stc
add
movsb
sub
and
repz
jo
inc
cmp
imul
pusha
out
bound
movsl
push
jle,pt
cltd
out
lods
mov
push
pop
lea
loope
call
and
dec
ljmp
cwtl
adc
sub
js
mov
pop
ficomps
stos
add
int3
int
inc
movsb
icebp
mov
cmpl
aas
jno
je
mov
lds
arpl
das
cmp
jb,pn
es
cmp
jge
pop
pop
loop
fsubr
shlb
cmpsb
add
scas
jae
repz
add
scas
sbb
icebp
mov
sub
imul
sbb
mov
xchg
popa
das
iret
push
and
lahf
int3
dec
int
and
scas
test
andl
mov
mov
popf
frstor
js,pt
sbb
and
mov
mov
mov
fsubl
mov
cli
ds
fldenv
lahf
mov
cs
xor
push
inc
imul
and
xchg
frstor
xchg
into
sub
stc
add
lds
mov
mov
mov
shl
lock
rol
cs
inc
lret
add
cli
inc
outsb
push
btc
cmp
mov
sbb
xor
cmp
rorb
dec
mov
sbb
inc
sbb
pop
xor
mov
sub
lahf
xchg
aam
cltd
mov
lret
orl
adc
mov
ret
xchg
aas
outsb
insl
movsb
mov
xchg
aas
jbe
inc
push
cmp
xchg
or
popa
xor
test
lds
mov
sbb
sub
jae
mov
and
and
imul
mov
xchg
xor
xor
sbb
adc
pop
cmp
sti
ja
scas
cmp
jecxz
push
cmp
xchg
stc
mov
lret
out
orl
inc
xor
adc
or
in
add
inc
push
or
cmc
cmp
out
mov
jge
mov
divl
cmpl
ja
movsl
mov
sub
cmc
inc
pop
daa
jae
fdivl
adc
les
int3
xchg
gs
xchg
mov
inc
jle
jnp
lds
dec
dec
jmp
inc
jno
lds
mov
cmp
js
lret
enter
cltd
and
cld
test
fcom
leave
fidivs
je
ds
or
sbb
stos
pop
sbb
and
popa
xor
mov
mov
xchg
dec
repz
in
jecxz
mov
add
in
cli
xchg
and
loopne
shll
enter
jmp
pushf
sbb
jge
mov
inc
jns
adc
movsb
fimuls
pop
sub
push
pop
cmpsl
dec
inc
adc
into
test
adc
mov
loope
out
jge
popf
xchg
mov
popf
dec
sub
outsb
iret
xchg
movsl
push
idivb
xchg
ds
faddl
call
xor
and
mov
ret
stos
sub
cli
lods
arpl
push
mov
loop
cmpl
xor
fwait
ret
das
mov
cwtl
stos
fsubs
xor
das
or
lods
add
cmpsl
jge
xor
add
inc
pop
fdiv
rcrl
aad
jae
test
fs
xchg
xchg
cmp
lret
adc
aam
inc
cmpsb
jl
adc
xchg
notl
cld
sti
mov
dec
push
pop
arpl
scas
xchg
mov
or
dec
xor
sahf
pop
sti
mov
andb
sub
jl
or
mov
cwtl
lea
or
cmp
insl
sarl
test
dec
sbb
aas
add
xorb
sub
xchg
call
inc
lret
test
cmp
lret
dec
in
sti
rol
stc
jmp
lahf
add
push
or
mov
sub
or
and
in
sbb
in
xchg
mov
repz
pop
cmpl
mov
inc
lods
addr16
stos
mov
inc
fldl
nop
push
jge
sbb
add
inc
fcoms
in
mov
pop
inc
dec
shr
lea
pop
pop
xorl
out
sub
test
repz
sub
add
lahf
mov
push
sub
mov
decb
jl
push
pop
leave
insb
push
outsl
mull
xor
repnz
jmp
fiaddl
xchg
clc
icebp
push
aas
inc
in
xchg
xor
xor
lret
lods
xlat
mov
cmp
enter
add
leave
and
xchg
pop
xchg
xlat
lcall
mov
dec
push
dec
rcrb
or
rcrb
pop
xor
or
or
mov
or
mov
and
pop
mull
cmpl
xchg
call
cmp
or
jp
mov
sub
rcrl
repz
test
sub
adc
xorb
sub
mov
dec
sbb
push
xchg
outsb
not
fadd
or
xchg
cmp
dec
xor
jnp
bound
xlat
add
push
cmpsb
add
rcr
lret
push
insl
addr16
xor
lret
add
loope
lock
int3
sbb
jecxz
mov
mov
movsb
gs
inc
dec
mov
xor
jp
aad
adc
lcall
mov
cmp
sub
addr16
jbe
mov
dec
push
fs
ss
fcoms
leave
fstpl
dec
mov
inc
loop
sub
ja
adc
sbbl
pop
mov
stos
jecxz
or
xchg
xor
dec
loop
mov
out
dec
int3
mov
in
adc
cmc
xor
add
popf
xchg
pushf
push
jmp
int3
mov
movsb
and
mov
push
cmp
xor
scas
loopne
test
fsubrl
shl
gs
into
push
or
lret
lret
mov
shrl
cmp
in
pop
and
pop
ret
mov
xor
pushf
lcall
sarl
es
inc
insl
mov
mov
hlt
test
jp
adc
std
les
jo
outsl
imul
dec
movsb
sbbb
dec
or
pop
outsb
and
mov
cmp
mov
sub
stos
and
fsub
jl
ret
push
mov
inc
imull
adc
sbb
shll
cld
xor
and
dec
pop
clc
cwtl
lods
stc
inc
arpl
imul
add
in
dec
test
imul
sbb
push
jle
xchg
push
sbb
lret
mov
mov
cmpsl
rorb
push
addr16
in
jge
popa
dec
jmp
lret
repnz
inc
dec
or
jp
mov
movsl
jmp
xor
cld
pop
aam
mov
jmp
mov
adc
lcall
rcll
outsl
mov
int3
clc
jmp
sbb
cmp
inc
in
outsb
filds
xchg
mov
fs
sub
gs
imull
sub
ja
arpl
js
xchg
inc
mov
mov
sahf
cmp
rorl
mov
and
add
push
adc
xchg
mov
out
daa
mov
enter
clc
aas
pop
pop
fidivs
pop
shrl
mov
repz
jg
jp
daa
pop
mov
and
sbb
or
dec
clc
dec
dec
pop
mov
cmp
je
repz
hlt
jl
cld
dec
pushf
pop
jae
or
pop
dec
outsl
pslld
les
pusha
insb
into
mov
in
scas
pushf
icebp
mov
mov
gs
jmp
rcrb
in
out
cmp
add
test
inc
push
ja
pop
add
push
mov
xchg
and
jo
jl
jmp
push
sbb
jbe
decb
pop
loopne
mov
push
fdivrs
or
push
iret
jno
cmp
fdivs
outsl
lock
aam
test
add
jae
jae
dec
mov
pusha
shll
mov
fdivrl
push
sahf
int
cmp
adc
sbb
pop
rorl
push
xor
mov
sub
push
paddusw
mov
pop
mov
and
cmpb
hlt
jge
xchg
outsb
xor
push
ret
bound
dec
test
hlt
dec
sti
call
adc
push
mov
pop
push
xchg
adc
roll
lret
jle,pn
sbbl
in
test
and
fdivrs
mov
ret
jo
dec
xchg
leave
pop
jb
mov
jmp
push
out
jnp
sub
xor
dec
cltd
and
jp
shr
xor
mov
jne
ror
and
push
xchg
enter
cmp
mov
or
or
mov
lods
cs
push
inc
mov
hlt
test
lret
je
shrb
popf
mov
inc
push
in
lret
cmp
or
push
and
rcl
push
inc
jge
popa
imul
xchg
lods
imul
lods
aad
adc
or
test
outsl
add
jo
jp
jb
ds
stos
out
inc
or
xchg
adc
sbb
adc
mov
rcl
pop
in
aad
dec
data16
orl
push
popf
js
lret
xchg
jnp
notb
or
mov
movsb
xchg
loope
add
sub
loopne
std
and
jbe
jecxz
mov
mov
jbe
jecxz
sub
out
imul
scas
cmp
push
ss
pop
or
es
clc
lea
inc
xlat
aad
push
xor
push
fstpt
sbb
xchg
dec
and
out
in
aad
sti
dec
sbb
ja
testb
clc
inc
pop
aaa
push
mov
xor
lods
pop
xchg
inc
xchg
mov
and
xchg
xchg
shrl
or
movsb
cmp
mov
xchg
mov
in
in
sbb
and
inc
popf
out
stos
shrb
sub
jno
lahf
cli
mov
sbb
loop
dec
insl
xor
loopne
out
xchg
jnp
dec
addr16
pop
cmp
test
inc
push
mov
movb
cmc
loope
or
sbb
aad
or
ret
pop
test
dec
jecxz
xchg
popf
jne
adc
jnp
xor
dec
cmc
lret
mov
cs
sahf
popf
inc
ffreep
gs
loope
or
out
js
and
loopne
sub
jecxz
push
cmp
bndldx
mov
fisubl
pop
mov
mov
jg
push
mov
xchg
adc
shll
jb
psraw
scas
outsl
jge
sbb
sbb
shll
sbb
xchg
stc
pop
std
bound
cmp
mov
push
gs
mov
test
cmp
jp
xor
jbe
sahf
lahf
dec
or
ds
mov
adc
out
mov
int3
pusha
sbb
stc
sbb
repnz
rcr
outsl
xorb
loop
mov
movsb
mov
or
dec
stos
outsb
or
movsl
cli
jns
in
jg
xchg
popa
mov
inc
jmp
sbb
gs
out
and
push
dec
cmp
lods
adc
adc
adcl
iret
push
call
fwait
test
jge
daa
fsubs
insb
adc
hlt
out
or
clc
xchg
cld
or
out
jg
add
fildl
jbe
adcb
call
fwait
hlt
stos
scas
add
cltd
push
bound
jle
mov
sub
pop
sbb
xchg
pop
or
daa
sahf
loopne
dec
pop
sub
repz
push
or
push
jl
pop
aad
or
orl
pushf
mov
lds
insb
js
hlt
pop
orl
push
outsb
jmp
sti
inc
in
imul
stos
pop
iret
adc
xchg
insb
sub
aam
inc
push
iret
mov
mov
xor
insl
push
jbe
and
push
cs
xchg
js
in
and
test
dec
push
and
cwtl
cwtl
notl
pop
loop
dec
cmp
mov
sbb
push
mov
and
in
mov
jnp
cld
push
jno
aaa
add
pop
xchg
or
imul
dec
mov
iret
and
cltd
test
jno
icebp
cmpsl
pushf
jmp
xchg
cmc
mov
xchg
jne
cli
ret
pop
call
cmc
jo
add
aaa
add
jp
push
lahf
inc
popa
outsb
jmp
cmp
sub
pop
vpsubw
insl
jae
shlb
sbb
xor
mov
sub
aam
or
negb
ja
mov
pop
out
popa
dec
mov
call
jge
pop
int
sub
sub
sub
sar
lcall
ficomps
adc
lea
shl
jp
or
adc
cmp
jbe
fsubrs
pusha
fxch
add
pop
jno
mov
mov
sub
push
lahf
sub
inc
xor
xor
sbb
outsl
jp
test
sub
push
fs
cmp
mov
push
testb
and
loopnew
pop
jg
cmp
fadd
or
ficoml
mov
mov
rcr
ffree
sldt
movsb
pop
jecxz
hlt
clc
call
addr16
sbb
and
popf
aaa
and
xchg
movb
in
sub
rorl
enter
push
mov
adcl
out
xchg
inc
pop
into
mov
repnz
outsl
addr16
push
adc
jae
daa
dec
adc
outsl
ds
xorb
lods
lock
popf
int3
pop
fwait
push
sub
sub
adc
es
mov
in
lahf
mov
adc
lea
xor
sbb
mov
xchg
mov
test
push
in
dec
jne
shrl
fdivs
jecxz
xor
cmp
jl
xor
sbb
gs
push
add
lods
cmp
fnsave
scas
xchg
pushf
pop
mov
arpl
jbe
jge
notb
jnp
mov
cmc
lock
movsb
and
xchg
or
dec
hlt
xchg
inc
adc
xor
xchg
push
into
push
push
rol
push
clc
cmpsl
dec
lods
testl
mov
std
sti
pop
out
and
and
pop
dec
or
xchg
or
mov
mov
sub
cli
int
rclb
and
test
shll
in
std
push
pop
ja
popa
mov
aad
and
adc
out
sub
test
or
push
cmp
jb
mov
mov
sahf
aas
pushf
ja
cli
xchg
mov
popf
xor
mov
dec
inc
out
cmp
push
ficoms
iret
mov
jbe
mov
dec
mov
sub
cmpsl
jbe
pop
call
ficomps
mov
stos
lret
cmp
adc
test
push
and
or
mov
fnsave
xchg
clc
lods
fsubrl
notl
mov
rcrl
xor
xchg
sub
dec
mov
cwtl
push
jecxz
inc
push
mov
je
add
jecxz
call
sbb
dec
outsw
mov
cmpsb
or
fs
add
xor
movsb
into
add
inc
aas
add
dec
mov
xor
mov
test
ljmp
mov
or
cwtl
cmp
hlt
dec
repz
ja
adc
add
pushl
mov
out
js
repz
scas
ret
insl
xchg
js
jle
sahf
jno
sbb
lods
mov
dec
and
mov
pop
aad
dec
jne
mov
cli
jl
popa
xor
dec
jbe
inc
pop
mov
das
lods
nop
push
shrb
lahf
fisubl
xchg
insb
aad
iret
xchg
or
mov
nop
loopne
orb
mov
lret
mov
dec
adc
fists
inc
mov
jle
inc
cltd
arpl
mov
inc
jb,pt
xor
lods
add
add
fs
xor
movsb
fcompp
cwtl
popf
nop
movsl
inc
xor
mov
and
cld
icebp
xchg
pusha
sbb
sbb
addl
insb
mov
lcall
in
rcrb
inc
mov
push
mov
rorl
push
sub
xorb
mov
testl
inc
dec
xchg
aaa
jecxz
adcl
cli
sbb
popa
hlt
add
hlt
addb
pop
mov
test
shlb
jmp
int
cmpsb
arpl
cltd
mov
add
loope
or
in
cltd
xchg
dec
clc
adc
add
shrl
cs
xor
dec
cmp
mov
mov
es
rolb
repz
lret
test
aas
sub
dec
mov
mov
jl
fidivrs
sub
push
sbbb
mov
dec
mov
gs
cltd
pop
addb
imul
pop
in
or
xor
mov
imul
fucomi
divb
adc
xchg
out
sub
sub
jge
sub
mov
sub
in
bound
mov
mov
jo
lods
repz
or
jne
pop
pop
stos
push
dec
lock
push
cltd
xchg
cli
mov
pop
lock
or
cmpsb
and
cmp
mov
adc
loopne
iret
inc
mov
xor
popa
xor
js
mov
mul
das
inc
aad
jge
sub
or
daa
cli
sbb
ss
ss
mov
mov
fwait
cmp
iret
dec
pop
pop
jp
jge
sub
xchg
mov
or
xchg
add
ret
imul
inc
fs
fistpll
mov
sti
push
and
xor
pop
gs
mov
repnz
mov
cwtl
call
je
push
adc
jae
jmp
addr16
add
mov
push
xor
fldt
mov
jb
mov
sti
xchg
jnp
stc
or
out
mov
sbb
pop
lods
inc
enter
lcall
mov
mov
scas
std
test
add
add
jle
xor
iret
jbe
jae
jg
sub
pop
mov
repnz
popf
mov
jnp
mov
push
dec
icebp
or
and
jbe
jb
pop
int3
sbb
idivb
idivl
jbe
sub
daa
cmp
mov
sarb
sarb
loop
mov
aam
shl
daa
sbb
gs
jmp
push
jae
jmp
jl
sub
lea
jecxz
rcll
and
mov
mov
push
sbb
cmc
xchg
mov
xchg
add
fsubs
cld
dec
mov
insl
mov
aaa
movsl
jbe
mov
cmp
out
cmp
jb
hlt
loop
mov
push
and
dec
clc
push
push
testl
xor
notb
lods
dec
test
jb
fadd
loope
or
mov
scas
and
fsubrs
cmpsb
je
and
xor
add
sbb
and
out
ja
xor
call
sub
insl
dec
dec
jmp
fdivrs
or
jle
mov
xchg
dec
and
mov
dec
jge
cmp
ret
xor
cli
mov
or
add
or
push
xchg
inc
cmp
cld
stos
jns
mov
in
sbb
pusha
rcrl
pop
mov
js
mov
arpl
fbstp
mov
stc
hlt
xor
aad
nop
pop
dec
imul
fs
fistpl
mov
jo
xor
mov
ja
adc
rcll
aas
insb
adc
inc
or
xor
shll
dec
clc
pop
xchg
jbe
sbb
mov
dec
sub
ret
sarb
lahf
cmp
add
mov
pop
xor
aas
pop
push
int
adc
jg
pop
push
out
sub
popa
out
andb
jp
mov
mov
arpl
addr16
test
in
in
cld
pop
test
xlat
or
adc
cmpsl
mov
aad
sub
sbb
dec
clc
dec
push
and
sub
adc
mov
or
push
mov
bound
sub
or
jno
iret
popf
jo
lods
push
je
mov
insl
xchg
pop
dec
sbb
fidivl
push
xor
pop
aad
ficoms
aad
pop
sub
in
incb
int
scas
mov
xchg
xor
cltd
or
mov
js
xchg
stos
pop
push
jge
lahf
xchg
ficompl
scas
or
adc
loop
sub
fidivl
popa
pop
xchg
fildl
nop
sbb
ja
int3
gs
icebp
add
sub
frstor
xchg
and
fistpll
mov
frstor
out
dec
mov
into
movsl
hlt
lcall
push
and
movsl
clc
mov
dec
aam
lret
fldenv
iret
scas
in
sub
adc
push
jg
push
cmp
xor
pusha
sbbb
mov
cmc
test
mov
movsl
and
test
mov
push
pop
push
ds
push
in
lods
dec
test
lea
jg
or
inc
or
icebp
jl
dec
aam
jmp
lds
aam
fsubl
sub
pop
popa
and
add
aaa
gs
push
xchg
leave
mov
cmpl
fsubrl
dec
jmp
insb
pop
xchg
push
or
sub
fcomps
add
in
mov
out
jo
shl
jp
je
add
and
dec
mov
mov
scas
insl
popa
inc
inc
test
inc
and
in
mov
add
out
shlb
insb
shll
pop
test
les
loope
inc
mov
push
or
inc
mov
js
mov
mov
mov
sbb
mov
or
insl
pop
push
insb
mov
cmpl
inc
dec
sub
inc
ds
jae
mov
lret
jle
pop
les
bound
and
mov
xor
pop
call
test
dec
inc
fstp
cmpsl
div
mov
mov
adcl
mov
mov
mov
mov
popf
mov
nop
mov
sub
imul
icebp
lret
lods
inc
add
test
xor
pop
rcrb
inc
cmp
movsl
stc
push
push
aas
add
mov
or
lds
repnz
out
mov
out
jb
outsl
lret
loop
xor
ret
push
inc
cmp
test
movsb
subb
adc
push
call
inc
xlat
lcall
lahf
dec
mov
inc
fistpll
sub
push
add
int3
mov
push
dec
imul
mov
add
stos
data16
fdivs
jg
mov
mov
je
aaa
pop
pusha
push
stc
outsl
dec
aas
leave
jnp
out
nop
int3
idiv
cmp
lea
fwait
lods
cmp
mov
cmc
mov
ss
int
mov
mov
stc
popf
pop
das
adcb
dec
lahf
add
cli
rorb
mov
inc
sub
push
ja
push
mov
push
pop
addr16
add
push
adc
and
mov
enter
rcll
ss
ret
inc
mov
xchg
push
out
push
int3
mov
ss
jl
std
pop
adc
xchg
aaa
push
jecxz
ja
mov
mov
cli
adc
imull
mov
fstp
mov
das
test
test
push
cmp
ja
push
cltd
and
shrl
es
add
jb
sbb
adcb
movsl
call
pop
arpl
leave
mov
arpl
loopne
imul
add
pop
sub
xorb
call
add
in
movsb
pop
sbb
mov
push
mov
pop
js
xchg
sbb
dec
stos
mov
mov
cli
mov
mov
negl
jecxz
gs
add
mov
in
shll
push
adc
icebp
push
sub
loopne
mov
aas
and
insl
inc
subl
gs
fld
aaa
lea
inc
pushf
add
xor
stos
jle
add
xchg
lods
mov
stc
psrlq
lds
ret
inc
xchg
pop
mov
cmp
cmpsb
lret
jp
pusha
push
sub
push
mov
loop
xchg
insl
data16
jbe
push
sub
or
addr16
decb
divl
mov
xchg
pop
xchg
call
das
das
push
fwait
adc
and
add
push
mov
add
nop
add
es
shlb
push
lock
sbb
jg
insl
inc
mov
jmp
xchg
fmull
icebp
jecxz
mov
adc
pop
outsb
adc
lock
ret
adc
mov
orl
xor
jae
addr16
negb
adc
jb
mov
call
sti
aaa
sub
dec
mov
popa
loope
fisubl
test
insb
push
adc
add
cmp
pop
or
add
mov
dec
fnstcw
test
or
and
add
addl
sarb
sub
ljmp
xorb
je
inc
sbb
ds
add
mov
scas
inc
into
sub
pop
sub
mov
add
cltd
ja
popa
ja
jmp
out
pusha
pop
add
pop
call
lret
xchg
xchg
out
mov
out
mov
lahf
fadds
out
cwtl
sbbb
dec
pop
fsub
mov
jo
mov
xchg
xchg
inc
outsl
lds
jmp
jb
mov
insb
out
imul
jne
and
in
cli
sub
aam
dec
mov
cld
mov
xor
orl
fcomip
lock
popa
rcr
fadd
jne
notl
cmpsb
cli
and
or
cltd
pop
mov
sbb
or
ja
stos
movsl
mov
adc
inc
sti
movb
lods
and
jb
cld
aad
out
mov
les
das
mov
xchg
loope
jo
pusha
pop
sub
mov
shrl
imulb
sbb
imulb
pop
outsb
orl
outsl
and
ret
lret
stc
and
cmpl
sti
jb
push
je
lods
push
popa
mov
nop
dec
pop
cmpsb
and
and
mov
lret
dec
lret
pop
dec
sti
mov
sub
and
outsb
arpl
or
test
lret
cmpsb
outsl
xchg
ds
mulb
das
sbb
movsl
scas
cmp
sub
movsb
stos
inc
mov
fmuls
call
mov
inc
cli
imul
rcrl
fdivr
and
ret
out
loope
jmp
insb
lods
je
cmp
aad
xchg
xchg
aam
sbb
jp
jne
push
and
and
lds
mov
idivb
mov
sub
fisttpl
mov
shlb
or
out
sbb
mov
insb
mov
icebp
mov
fs
xor
lcall
fprem
sbb
xchg
in
or
adc
pop
fbstp
push
shlb
jle
adc
data16
sub
push
adc
adc
pop
cvtps2pi
cwtl
insl
ljmp
push
dec
jae
sahf
out
mov
outsl
mov
dec
je
push
xor
push
icebp
cmp
dec
pop
inc
loopne
imul
mov
jmp
ljmp
xchg
push
aad
jo
cmp
mov
adc
mul
pop
sbb
adc
pop
lret
xchg
in
mov
ret
hlt
test
sub
outsb
ret
inc
jbe
rol
push
out
lods
xor
inc
xchg
jo
es
cmp
imul
sbb
les
imul
outsb
add
add
int3
pop
decl
pushf
aaa
push
insb
push
xchg
ds
add
or
jno
pop
and
mov
pop
or
test
insb
mov
lods
mov
inc
xor
enter
in
pop
pop
or
pop
nop
sub
or
clc
mov
cmp
dec
push
fwait
or
cmp
jp
adc
or
xchg
pushl
sub
push
mov
out
stc
jmp
pop
rclb
or
pop
mov
imul
dec
jns
movsl
and
ss
pop
or
repnz
popa
nop
jb
push
pop
enter
or
push
sub
jmp
xchg
mov
aas
mov
mov
loop
push
add
lret
pop
dec
test
lds
ficompl
jns
sub
stos
into
mov
pusha
fistpl
movsb
roll
cld
pusha
stc
shl
loopne
cld
mov
cmp
inc
in
adc
jns
repz
sbb
sbb
in
dec
pop
pusha
jg
pop
pop
push
movsl
xor
fcmovnb
push
rclb
and
sub
cmp
ja
push
pop
inc
pop
cli
jmp
pop
cmp
cld
sbb
dec
pop
push
nop
adc
fidivrl
dec
xor
enter
imul
inc
dec
pop
add
inc
call
mov
push
fisttps
dec
or
inc
push
or
inc
inc
inc
jle
roll
push
push
rolb
loopne
sar
loopne
jno
xchg
push
movsb
into
cmpsb
in
sti
mov
test
cmp
or
mov
jl
mov
push
sub
mov
dec
shl
inc
jg
pop
outsb
jl
jbe
sbb
enter
inc
push
mov
fisttpl
jo
dec
pop
pop
popf
orl
ficomps
jbe
inc
cli
sub
es
xchg
mov
add
divl
inc
inc
rol
pop
mov
cmp
scas
jl
int
adc
icebp
mov
jb
xchg
out
inc
mov
add
jo
mov
xchg
xor
jbe
in
sahf
push
testb
mov
repz
insl
xchg
fsubl
push
outsb
repz
xchg
sbb
xchg
or
jmp
dec
adc
push
and
inc
fwait
ds
movsb
enter
out
add
jle
pop
pop
cmp
insb
fisttpll
jo,pt
mov
inc
mov
mov
fwait
out
xchg
fwait
mov
adc
add
pushf
inc
mov
adc
cld
add
mov
mov
dec
and
dec
in
xor
or
popa
sti
imul
shrl
shll
dec
rol
mov
mov
mov
mov
insl
sub
pop
xchg
fcmovb
pop
leave
cmp
add
xor
mov
inc
data16
pop
xchg
pop
jmp
push
fsubp
sti
shlb
cwtl
lods
add
mov
jecxz
neg
aam
fmul
or
mov
out
shrb
xor
test
repz
mov
adc
cmpsb
inc
fisubrl
push
loopne
pop
inc
repnz
dec
dec
std
sub
push
xchg
test
jno
add
test
push
xchg
mov
lcall
push
rep
xor
inc
into
decl
cli
pop
xchg
out
fwait
dec
xchg
add
jae
decl
add
jge
aas
mov
out
cld
outsb
xor
push
push
add
jecxz
add
jns
pop
lret
roll
jmp
pop
push
dec
testb
divl
fldenv
mov
leave
and
xchg
cmp
jb
popa
lods
and
mov
rol
aad
ja
in
push
mov
jp
jl
xor
ror
enter
dec
lock
jecxz
mov
xchg
adc
std
xor
dec
rorb
sbb
pop
xchg
jg
or
es
jl
bound
push
fs
cld
xchg
xchg
adc
cld
int3
mov
cld
daa
push
jg
loope
pop
add
sbb
xor
fs
mov
sbb
lret
ret
sbb
int3
jg
xor
and
inc
cld
scas
mov
add
or
mov
inc
repnz
inc
mov
push
jnp
idivl
leave
dec
jge
int
bound
jecxz
loopne
push
iret
insb
aaa
and
pop
adc
jle
in
cmp
sub
psraw
adc
inc
scas
loope
scas
jno
fstpt
ljmp
in
cmp
xor
mov
inc
movsl
inc
add
test
daa
dec
stos
mov
out
cmp
mov
lcall
inc
and
mov
xchg
mov
sub
mov
mov
in
fbld
mov
stc
dec
and
rcrl
xchg
data16
mov
pop
jb
jb
mov
mov
daa
negb
ljmp
neg
add
or
push
lret
jecxz
push
add
bnd
add
out
dec
rorl
pop
enter
push
cmp
popf
shrb
inc
xlat
jns
push
xor
shl
fs
jno
loopne
mov
or
data16
pop
enter
lods
xchg
popf
jge
call
add
pop
cmp
inc
inc
push
aam
push
xor
loopne
lock
das
pop
add
mov
icebp
jae
mov
mov
jmp
push
inc
jg
das
push
dec
xlat
rorb
lahf
lcall
jae
push
mov
pop
push
roll
rcl
push
or
rep
ret
xchg
mov
inc
loopne
sub
repnz
push
mov
xchg
es
stos
pop
xchg
cmc
rorl
lods
xor
push
mov
ljmp
xor
scas
mov
jo
mov
mov
mov
pop
dec
bound
and
xor
lods
int3
dec
xchg
inc
popl
fidivl
mov
scas
mov
fdivl
pop
cmc
xchg
mov
aaa
mov
xchg
test
dec
push
mov
imul
sbb
shll
xor
jmp
ss
lcall
or
int3
cs
inc
cmpsb
mov
inc
push
in
adc
push
lds
mov
test
mov
aas
enter
mov
mov
js
popf
sub
in
decl
cmp
sub
dec
call
xlat
cmp
jmp
push
mov
mov
push
fdivrs
and
ret
mov
lret
mov
jmp
aad
mov
sti
mov
bound
sahf
in
dec
bound
cld
cld
mov
mov
in
inc
rcl
xor
dec
nop
ljmp
in
aad
inc
out
orl
mov
or
shlb
jo
or
xchg
ficomps
cmpsl
neg
divl
hlt
xchg
inc
and
pop
push
outsb
fsubrl
cmc
dec
and
insb
scas
jb
fwait
push
jg
fs
sub
or
lret
movsl
lcall
aas
arpl
mov
xchg
sarb
cmc
jmp
and
mov
and
pushf
sarb
lea
mov
les
mov
out
test
mov
xchg
dec
in
add
lcall
dec
push
bnd
push
sahf
mov
jo
rol
sub
fsubrp
jl
in
lret
push
in
mov
loopne
aaa
cli
in
stos
sysenter
mov
arpl
insl
insl
mov
or
pop
lret
mov
xlat
out
xchg
xchg
movsl
push
cwtl
shrd
xor
test
iret
mov
pop
and
xchg
arpl
jge
pop
ja
int
add
addl
test
add
pop
dec
shrb
cli
push
and
mov
cmpb
pop
iret
notl
lea
frstor
dec
movsl
stos
es
insl
sub
mov
aas
pop
pop
jp
pop
or
cltd
cmpsb
pop
pushf
and
sub
jl
int3
clc
push
or
sahf
cld
outsb
or
adc
xchg
xor
xchg
ss
jecxz
cmp
cmpsl
ret
adc
sub
enter
in
push
pop
add
xchg
js
in
inc
out
jp
pop
dec
in
inc
outsb
cmp
clc
test
fdivrs
adc
sub
div
idivb
jge
enter
repnz
dec
jmp
cmp
xor
and
js
dec
outsb
decl
sbb
ja
push
in
and
outsb
leave
cmovle
push
sub
jmp
inc
push
cmpb
dec
dec
push
xor
scas
test
das
daa
inc
adc
add
xlat
aad
loopne
xchg
imul
ret
xchg
cmp
daa
adc
into
scas
fs
xchg
jecxz
test
xlat
leave
js
push
cmp
sbb
cmp
xchg
das
in
and
cmp
call
dec
cld
mov
test
mov
jmp
bnd
jns
inc
fwait
nop
int
or
mov
mov
or
pop
or
jl
iret
test
sbb
sbb
mov
mov
aam
loope
dec
push
mov
mov
pop
or
imul
and
lcall
aam
sarl
dec
push
std
and
mov
fs
fdiv
xchg
adc
push
jnp
push
jne
outsl
fsubp
pop
repz
mov
stc
push
inc
pop
adc
cltd
push
jb
pop
inc
jge
rolb
cmp
push
mov
dec
call
leave
dec
ja
mov
cmp
mov
cmp
and
cmpsl
enter
pushl
xchg
pop
sub
jp
aaa
hlt
in
jmp
pop
divl
xchg
mov
and
int
mul
sahf
xor
push
pushf
pop
fstp
lea
lods
add
add
xor
push
lods
jl
mov
int3
in
adc
jne
sbb
xor
or
sti
or
rolb
jge
mov
jne
out
jnp
dec
mov
les
push
xchg
pop
xor
xor
lret
movsl
ljmp
mov
xchg
mov
add
int3
jo
mov
add
and
test
popa
sbb
roll
xor
test
cmp
cmpl
sbb
in
sub
loopne
xchg
and
mov
mov
jecxz
loope
push
nop
fwait
popa
jp
in
lods
movsb
add
aad
sbb
fwait
pop
pop
push
out
insl
std
sub
inc
sbb
je
or
mov
pop
pop
pop
ror
in
jnp
jp
add
push
mov
divl
xchg
and
jmp
mov
inc
pop
sti
clc
lods
xchg
jnp
inc
adc
mov
xor
jb
aaa
addr16
popf
cs
push
inc
pushf
lods
push
xchg
in
sbb
sbb
adcl
jne
sbb
fdivl
lcall
jmp
cld
xor
mov
push
mov
dec
pop
sbb
adc
sbb
push
imul
dec
push
sub
mov
rep
xchg
jle
xchg
dec
inc
dec
daa
sub
mov
and
hlt
and
jbe
incb
push
mov
pop
adc
pop
jecxz
fmuls
les
test
imul
out
sub
pop
jge
aaa
jp
lret
cmp
pop
lret
mov
and
out
es
scas
add
lcall
loop
lcall
dec
sub
inc
iret
jl
stos
add
adc
cmp
in
pop
loopne
lahf
sub
push
xchg
inc
jbe
push
push
mov
repnz
and
ja
and
pop
cmpl
pop
xchg
fs
cmpl
xor
pop
movsb
int
pop
lds
pusha
cltd
fsts
cmp
mov
cld
loopne
fneni(8087
inc
sbb
aad
pop
mov
fistl
fimuls
cmpsb
xchg
push
push
dec
jl
sbb
dec
sahf
pop
pop
push
aam
pop
push
pop
mov
push
addl
stos
jp
xorb
xor
mov
mov
and
mov
pop
mov
lods
loope
std
int3
mov
dec
aam
xor
cmp
cli
ret
xor
push
mov
adc
jnp
jns
xor
cmp
mov
movsb
adc
cmp
push
adc
inc
cwtl
pushf
push
aaa
sub
jo
mov
push
mov
cmp
xchg
mov
lods
pop
inc
clc
stos
mov
movsl
clc
iret
shl
insb
outsb
adc
fcoml
test
lahf
sbb
mov
dec
sub
movsb
inc
cltd
pop
clc
scas
lock
xchg
movsl
into
je
inc
push
push
inc
cmpsl
test
outsl
addr16
jo
and
ss
jmp
push
and
jno
into
sub
sub
testl
adc
xor
pop
clc
mov
pushf
loop
or
decb
lret
inc
xor
adc
std
hlt
push
and
adc
repz
inc
pop
mov
xchg
and
mov
out
enter
cs
mov
lcall
jp
ds
ss
add
gs
xor
push
mov
jns
in
frstpm(287
sbb
fwait
adc
mov
ret
add
cs
bnd
adc
fcomps
stos
xlat
xor
in
and
or
int3
cmpsb
and
dec
add
jnp
stos
iret
jl
aam
out
cmp
aas
and
daa
dec
pushf
scas
cs
stc
mov
mov
fisttpll
fsubrs
cmpsb
push
add
push
in
outsb
or
fists
mov
or
push
dec
insl
cmp
jno
cmpsl
icebp
imul
std
out
jns
jnp
addb
int
fbstp
leave
or
imul
pusha
xlat
stc
sub
push
testb
push
aaa
sub
mov
pop
xor
adc
jle
in
xchg
mov
out
and
int3
push
mov
aaa
cmpb
push
xchg
pop
and
sahf
adc
lret
and
fcmovb
lea
dec
in
sub
pop
lods
mov
mov
in
xor
sub
push
insl
ret
flds
jns
in
jb
cltd
arpl
stc
dec
add
shr
aam
loopne
insl
rcr
inc
mov
cs
push
popf
pop
xchg
subl
pushf
sbb
sub
xchg
jae
cmpsb
adc
sahf
lea
lds
xor
lahf
xchg
dec
popf
ss
fistpl
inc
dec
ds
out
cmp
shl
jae
cmp
push
mov
lcall
test
out
fiaddl
lret
daa
lret
push
mov
test
pop
sbb
xlat
cmp
bound
pop
sub
push
xchg
imul
test
ficomps
xchg
dec
js
jns
pusha
outsl
daa
fmul
repz
shll
shrb
jne
dec
movb
cmp
xchg
inc
stos
hlt
and
sub
out
gs
or
inc
cs
push
jb
rcrb
int3
jnp
lds
popa
movsl
jg
daa
imul
xchg
xor
mov
adc
add
ret
lcall
push
adc
sbb
pop
xchg
and
rclb
into
mov
mov
or
mov
mov
lret
xchg
push
orb
adc
mov
sbb
xor
dec
out
ret
sub
sbb
xchg
shld
push
adc
or
inc
adc
and
push
push
jo
daa
or
mov
mov
stos
xor
or
int
add
roll
jmp
sbb
xchg
pop
mov
adc
adc
loope
mov
xor
iret
lret
jecxz
jno
lods
inc
pushf
das
add
popf
jbe
pop
and
push
out
test
adc
repz
push
and
mov
in
push
repz
fs
inc
test
xlat
nop
rcrl
lods
test
mov
fsubr
aas
lds
inc
or
in
inc
add
sahf
sub
sub
loope
shll
popa
pop
cltd
xor
lea
sub
pop
and
inc
negl
fildll
cli
dec
lock
cmpb
popf
sahf
ret
pop
cmpsl
or
test
hlt
orl
mov
jno
sub
lret
jbe
adc
sti
repnz
mov
inc
mov
push
cmp
out
ljmp
and
test
inc
out
lret
jp
shrl
jns
out
xchg
stc
je
dec
shrb
cld
mov
insl
popa
fucomip
dec
inc
das
stos
imul
jae
outsb
or
idivl
movsb
cmp
pop
pop
scas
mov
mov
lahf
es
sbb
jg
and
inc
sbb
popf
int
iret
in
mov
mov
and
stos
test
pop
ret
cwtl
or
aam
subb
adc
imul
dec
pop
mov
ljmp
lods
mov
inc
ja
loope
lret
cvtdq2ps
insl
insl
mov
popa
stc
pop
push
fists
mov
add
fdivl
cmc
aad
xchg
cmp
sub
xchg
inc
out
in
cmp
push
or
loope
bound
cmp
pop
or
dec
outsl
xor
andl
cmp
sbb
or
adc
push
fs
cmp
mov
movsb
dec
and
mov
mov
sbb
cmp
test
jno
xor
fdivl
xchg
es
and
jmp
inc
or
push
test
pop
ja
or
xchg
sbb
cmp
mov
ret
mov
xor
aaa
sbb
pop
enter
test
out
movsb
and
stos
jns
lock
or
and
outsl
pusha
cmpsl
and
rolb
xchg
lea
outsl
adc
out
lods
je
push
xor
sub
addr16
gs
mov
cmp
add
scas
cmp
enter
mov
in
pop
ljmp
aas
pop
adc
pop
int
adcb
enter
cltd
push
repnz
leave
cld
movsb
push
in
scas
jg
inc
and
ret
and
jns
popa
jmp
test
mov
adc
fadds
lret
xor
xor
ret
fdivr
push
and
mov
mov
movsb
out
stos
mov
insl
fdivl
flds
outsl
dec
scas
mov
fsts
pop
sub
adc
ret
aas
cli
inc
add
stos
movsb
mov
pop
add
dec
cwtl
insb
dec
gs
pop
fisubl
cmp
lock
lods
punpckldq
xchg
xchg
fisubrs
jmp
xor
cs
mov
dec
inc
and
add
mov
pop
mov
xor
cs
sbb
shll
jl
jmp
lahf
mov
cmpsl
dec
or
sub
pusha
inc
xor
int3
sahf
clc
pop
cmp
adc
and
cmc
inc
push
pusha
lds
xlat
sbb
stc
nop
loop
cwtl
je
repz
loope
or
stc
mov
add
test
inc
lahf
jecxz
push
movsb
repnz
inc
in
in
jg
push
loopne
push
lret
mov
mov
mov
mov
lds
mov
lea
add
add
xchg
rcr
mov
int3
inc
sub
pusha
xchg
jmp
icebp
jno
imul
in
inc
lds
mov
roll
xor
jg
inc
push
sbb
testl
pop
pusha
xor
movsl
popa
pop
out
sbb
pop
cli
stos
bound
dec
mov
xor
dec
inc
iret
data16
add
pushf
ja
adc
outsb
or
mov
test
jae
mov
pushf
dec
push
pop
cmpb
adc
loopne
cli
xor
mov
mov
jb
aas
or
lods
dec
adc
xchg
sbb
pop
pop
dec
cmc
push
por
fcomps
or
dec
push
lea
mov
scas
shll
lret
push
stos
cmp
xor
mov
cmp
shr
push
idivb
push
rep
mov
mov
imul
inc
mov
mov
mov
mov
sahf
stos
loope
xor
lds
pusha
or
out
dec
in
mov
cli
jae
sub
stc
clc
adc
xor
inc
rcrl
andb
sahf
fcomp
cwtl
xchg
fwait
pop
push
bound
addr16
stc
or
shr
sub
ss
fwait
test
sub
jb
and
je
xchg
pop
ret
add
insl
sarb
popa
lcall
js
mov
fnstcw
jns
fwait
cwtl
jp
xchg
loop
pop
lock
push
pop
xchg
mov
jle
pop
pop
pop
imul
or
cmpsb
pop
push
inc
clc
mov
test
push
or
or
add
out
lods
in
out
mov
cwtl
fcoml
inc
add
out
cmp
sub
fsubrp
ja
sbb
dec
or
jle
and
ljmp
mov
mov
arpl
adcb
pusha
repz
add
and
pop
push
and
and
repnz
addr16
sub
xchg
mov
out
jno
xchg
rcrl
jne
or
and
mov
xchg
lret
clc
shrb
dec
jecxz
xchg
mov
in
mov
out
outsl
sub
leave
or
js
insb
and
shlb
or
push
js
out
sub
pop
dec
dec
inc
daa
jo
pop
mov
loopne
data16
mov
mov
ds
scas
fistpl
mov
cmp
fnsave
notb
cmpsb
adc
or
xchg
pop
jbe
dec
xchg
addb
cmpsb
inc
jb
out
lret
sbb
sbb
dec
mov
dec
or
int
add
mov
shl
jno
cmp
jbe
popa
xchg
jge
push
cli
mov
xor
or
ss
or
xchg
movsb
mov
fdiv
xchg
jne
add
sbb
xchg
xor
stos
aas
add
addr16
mov
or
xor
fdivs
jecxz
and
dec
imul
cmp
sub
in
sbb
test
lock
fldcw
xchg
mov
dec
add
cmp
cmp
adc
mov
push
mov
ds
cmp
inc
cmpsb
mov
insl
iret
in
sub
pop
cmp
jle
adc
jmp
or
inc
sbb
dec
lret
orb
jle
inc
add
test
jb
aas
imul
mov
adc
test
inc
adc
push
aas
mov
mov
cmp
mov
jmp
pushf
arpl
dec
jbe
jns
jge
dec
jnp
lret
imul
push
mov
dec
aad
cmc
sub
jecxz
pusha
pop
jl
adc
shrl
mov
jne
sbb
cmp
dec
adc
or
push
out
prefetchw
adc
enter
ret
aad
sbb
pop
dec
in
mov
fwait
or
mov
hlt
sbb
adc
jmp
push
dec
xor
fnstsw
jecxz
xor
add
stos
dec
sub
into
adc
nop
leave
adc
mov
mov
cld
push
ret
shrl
sbb
movsl
rorb
fiaddl
xchg
jl
inc
sbb
lods
rcl
adcb
jp
push
cmp
push
mov
pop
cmpsl
sbb
mov
jb
pushf
in
mov
out
testl
popf
mov
ss
cmp
mov
push
ret
xchg
cld
mov
add
in
xor
inc
xchg
jmp
int
or
mov
pop
jbe
xchg
movsl
inc
lcall
cld
lret
mov
mov
mov
pop
mov
inc
int
pop
sbb
sbb
aas
sbb
mov
pop
roll
ficoml
jmp
xchg
pusha
mov
mov
stos
sub
pop
xchg
sti
lods
mov
lea
mov
lods
aad
ret
mov
and
int
enter
dec
fidivrs
aam
ja
int
inc
pop
decl
adc
fsubs
adc
jb
lds
mov
add
mov
out
movsl
ja
test
fstpl
xor
pop
sti
andl
push
xchg
jg
mov
jns
xor
xchg
sub
cltd
clc
cmp
lcall
cwtl
mov
pop
adc
mov
add
push
sub
fldcw
add
les
inc
ret
mov
daa
xor
test
lahf
in
xchg
add
xchg
cmp
cs
test
lret
mov
cmp
xchg
mov
testb
cmp
or
ret
cmc
clc
clc
sti
jg
add
jno
gs
sbb
fcomip
xchg
imul
xchg
sub
add
cmp
mov
jno
or
lock
pop
leave
add
jge
lods
je
fiadds
and
dec
mov
push
mov
movsl
sbb
mov
jge
fwait
lretw
into
jb
push
mov
inc
add
cmp
mov
push
dec
sbb
adc
fwait
leave
jp
lcall
int3
add
fwait
sahf
and
fdivrs
inc
js
xchg
jnp
stos
inc
lret
fs
mov
push
in
fld1
stc
aad
addr16
dec
sub
xchg
jmp
jns
xor
jnp
push
push
dec
and
xchg
pop
fidivs
sub
ret
mov
pushf
sbb
sub
push
jecxz
push
aam
imul
sub
adc
push
mov
add
shrb
jl
push
dec
and
mov
jg
aaa
xchg
cltd
test
lock
dec
xor
aas
or
mov
dec
mov
xor
jmp
int
imul
scas
mov
mov
adc
adc
scas
add
inc
shl
jl
xlat
jge
adc
add
cmp
mov
or
idiv
test
jnp
addr16
xchg
lods
aam
gs
xchg
cs
and
cmp
or
pop
mov
or
xchg
push
pop
out
insb
mov
insb
dec
aaa
daa
jno
icebp
scas
fsubs
cmc
or
push
aad
jae
cmpsl
pop
sbb
mov
gs
sbb
jecxz
mov
repz
fsubs
in
mov
or
psubsw
outsl
sub
dec
dec
lahf
cmp
mov
loop
push
stos
mov
inc
pop
dec
loope
xchg
add
aas
mul
scas
sti
lock
and
ret
mov
sub
jae
mov
pushf
lods
xlat
aad
mov
mov
mov
das
jne
std
clc
into
or
mov
ss
jle
sysenter
and
or
lahf
cmc
repz
rorb
sbb
mov
stos
push
popf
into
negb
mov
cli
jecxz
mov
pop
test
adc
xlat
shl
or
sub
cmp
sti
mov
dec
pop
xchg
dec
popa
mov
ficomps
mov
and
les
pop
push
aam
and
shll
outsb
add
test
inc
xchg
sbb
aad
push
jne
dec
xchg
push
arpl
xchg
pop
fldenv
cmp
leave
out
xlat
push
add
xchg
and
dec
pop
cli
or
data16
lock
add
ja
push
outsl
je
idivb
pop
lahf
mov
ret
sbb
cs
mov
aas
cli
xchg
mov
orl
and
shrb
push
sbb
cld
pop
mov
add
dec
push
clc
addr16
fldl
int
add
jl
daa
mov
sub
mov
mov
subb
ljmp
lahf
sbb
inc
mov
bound
adc
mov
cmp
dec
add
or
imul
jp
sub
mov
push
imul
mov
sub
or
je
dec
sub
arpl
pop
adc
pop
div
test
pop
add
aam
push
ret
ds
inc
dec
int
inc
lods
and
test
cmp
xor
in
mov
negl
and
nop
sahf
pop
mov
mov
and
ljmp
and
or
and
mov
cmc
int3
int
out
pop
dec
loope
xchg
inc
sbb
sbb
das
call
int3
inc
cmp
xor
sub
int
xchg
cmp
mov
outsb
lods
dec
dec
fisttpl
push
inc
scas
mov
push
mov
cld
pop
xchg
cmc
imul
inc
fcoml
sbb
fnstenv
fstp
inc
inc
adc
into
push
mov
gs
fldt
int
jecxz
jbe
cmp
xchg
and
mov
shlb
xchg
hlt
push
jp
pop
fisubl
push
cmp
repnz
pop
into
pop
jo
mov
jnp
pop
pop
lcall
sbb
push
arpl
test
adc
cmp
jecxz
xor
and
stos
movsl
xor
bound
fsubl
out
in
push
mov
test
sbb
js
xchg
pop
lcall
rcrb
out
test
jp
pop
out
scas
fcoms
out
or
aas
push
sub
jno
mov
and
leave
inc
cmp
jbe
aam
rcr
lret
xor
ds
and
adc
incl
jne
or
push
aaa
lret
push
out
icebp
imul
sti
mov
int
cld
push
in
cli
push
push
jge
push
adc
movsl
cltd
out
sbb
cmp
movsl
inc
push
out
and
cmp
ficoml
loop
dec
stc
push
inc
push
jle
inc
loope
xor
or
popa
ljmp
adc
sahf
test
out
and
cmc
aad
jno
bound
mov
cltd
mov
sbb
cltd
xor
lcall
xor
cwtl
ret
xchg
ljmp
xor
mov
and
pop
push
iret
jle
lret
nop
mov
adc
xlat
dec
in
aas
outsl
pop
jnp
jle
cwtl
shl
mov
pushf
mov
mov
std
lcall
xor
push
in
daa
mov
push
nop
stos
and
or
sbb
mov
xor
inc
out
or
js
loop
xor
and
cmp
fisttps
ret
test
mov
inc
lret
mov
jns
fs
add
adc
jns
fcmovnb
mov
mov
in
lock
jno
inc
xor
iret
cmp
sbb
dec
sub
out
add
xchg
push
cmc
and
outsb
call
js
adc
xor
push
ljmp
inc
inc
mov
lret
mov
fcomps
ficomps
jl
test
arpl
and
sub
pop
insb
xchg
dec
in
pop
or
jl
out
sub
mov
outsb
dec
dec
and
test
sbb
loopne
cmp
add
test
fisubrs
insb
push
inc
pop
lds
pop
fcomps
inc
leave
jl
xlat
subl
shr
mov
fs
ret
jp
mov
gs
test
dec
or
cmp
idivb
icebp
mov
jns
les
mov
andb
sub
shlb
in
mov
add
adc
or
sbb
or
inc
dec
adc
push
xchg
lahf
shrb
ret
add
flds
and
fwait
sbbb
mov
mov
jbe
push
add
mov
scas
pop
add
in
adc
mov
insb
sub
testb
jmp
mov
jg
xchg
jg
lcall
mov
inc
jmp
mov
std
mov
mov
pop
or
popf
scas
push
bound
shrl
sub
jno
sbb
imul
aam
or
mov
mov
movsl
or
fdivrl
sbb
loop
int
or
pop
jg
data16
dec
in
mov
push
xor
jns
orb
notl
inc
nop
jmp
add
das
mov
jnp
add
je
test
sbb
lret
scas
imul
push
enter
jo
sbb
or
jmp
sub
cmc
cmp
aad
jge
xchg
dec
pop
ds
jp
call
mov
enter
lods
fs
dec
mov
popa
pop
scas
leave
roll
ret
mov
fsts
sbb
mov
pop
sub
mov
inc
mov
mov
sbb
das
fs
or
xchg
mov
cwtl
outsb
repz
and
popa
xchg
in
and
cmc
fstpt
repnz
dec
xorb
xor
leave
cmpsb
dec
mov
pushf
fisttps
fcmovu
cmp
mov
mov
cmp
xor
push
setne
insl
and
sub
adc
bound
push
xor
in
dec
in
jl
fwait
cld
outsl
mov
adc
jae
fs
xchg
movb
xchg
add
adc
aas
mov
ret
jo
pop
rolb
mov
fstpl
lret
push
test
divb
sarl
mov
pop
fisttps
mov
test
add
xlat
sub
or
ficoml
pop
xchg
mov
ret
sbb
fiaddl
subb
and
mov
sub
xor
sbb
fsts
in
cmpsl
mov
mov
fwait
cmp
cmpsl
pushf
mov
add
and
repnz
fnstenv
out
xor
repnz
repnz
xor
xor
cmpsb
push
loop
jnp
les
cmp
sbb
pop
pusha
pop
adc
ds
xchg
popl
aam
push
sub
lcall
add
fnstcw
adc
jle
mov
inc
in
xchg
mov
mov
imul
scas
data16
add
mov
fsubr
movsl
xor
xor
adc
push
mov
xadd
insb
inc
in
lcall
pop
add
fdivrl
fsubl
pop
clc
mov
xlat
pop
inc
fidivl
add
loopne
in
dec
push
mov
popa
mov
fs
sbb
inc
cwtl
mov
jns
and
dec
insb
arpl
nopl
mov
fadds
lret
hlt
shll
sbb
outsl
sub
push
ljmp
mov
add
cwtl
mull
mov
lods
jp
movsb
sti
je
cmp
js
lcall
sbbb
cs
popa
sarl
call
loop
xor
dec
push
pop
adcb
sub
sbb
sub
inc
icebp
fsubr
nop
test
sbb
mov
dec
addb
leave
pusha
xchg
aas
dec
popa
pop
mov
icebp
push
iret
lret
cld
inc
test
hlt
mull
or
repz
mov
imul
sahf
lret
sar
aad
std
xlat
adc
inc
add
mov
adc
adc
xor
xchg
mov
or
jl
lcall
pusha
je
jbe
xchg
cwtl
daa
adc
lahf
iret
sahf
sub
xor
mov
cmpsl
scas
push
or
add
popf
dec
rep
je
inc
or
orl
push
mov
xchg
sbb
push
mov
cmp
inc
inc
xor
jecxz
mov
lret
push
clc
mov
cmpsl
das
jns
lret
jecxz
xchg
jne
cmp
fsubrs
fsubs
pop
dec
cltd
jle
outsl
pop
sub
pop
test
test
mov
adc
dec
inc
mov
imul
in
js
test
aad
mov
pop
lcall
inc
ljmp
dec
lahf
push
jmp
mov
int
stos
cld
aas
cmp
and
lahf
xor
jns
fdivrs
mov
cmpsl
lcall
cmp
pop
fidivs
or
stos
push
add
ficoml
lahf
push
jno
mov
lock
insb
jb
dec
xor
into
inc
flds
fstl
inc
sti
xchg
lahf
cmp
cmp
lahf
insl
inc
dec
pop
xchg
int3
out
out
xor
sbb
vdivpd
jmp
out
bound
push
sub
inc
pop
test
aad
xchg
in
in
subb
mov
push
jge
jo
jno
daa
push
mov
sbb
lds
cmp
mov
mov
out
and
cmp
dec
add
pop
xchg
or
incb
in
out
leave
outsl
or
lds
iret
adc
mov
inc
int3
pop
scas
pop
iret
mov
jns
mov
sbb
adc
mov
js,pt
and
mov
inc
mov
fdivr
loope
sub
lock
jl
mov
aad
lock
mov
je
outsl
scas
mov
ffree
push
jge
adc
mov
lahf
pop
adc
or
pop
add
xchg
and
insl
shll
lea
gs
leave
sahf
sub
jge
pushf
sub
dec
pushf
mov
in
insl
testl
push
les
repnz
js
aas
test
fistl
stos
into
jl
cmp
adc
mulb
pop
iret
test
hlt
mov
sbb
enter
cwtl
vminss
xor
mov
test
out
into
shlb
shll
dec
dec
jns
fwait
sub
sbb
dec
pop
jo
aas
mov
imul
cwtl
test
imul
jp
popf
add
push
loope
xor
adc
lret
ret
daa
jae
pop
scas
testb
and
pop
mov
popa
pop
jne
icebp
test
and
movsl
dec
ss
out
movb
lock
push
jb
mov
out
inc
sub
in
jno
aaa
cmp
push
and
test
and
push
sbb
arpl
dec
add
push
fistps
das
out
dec
mov
testb
adc
fcom
arpl
loope
mov
loope
enter
inc
mov
pop
mov
ja
call
data16
popa
or
aas
or
add
movsb
rcll
repz
sub
mov
psubq
test
or
adc
shl
mov
cmp
idivl
les
push
fnstenv
adc
fisttpl
dec
dec
cmp
xor
stos
addl
mov
lds
loop
aas
sub
add
pushf
push
movsb
leave
push
cmp
fidivs
fstpl
and
mov
movsl
mul
add
cmpsl
and
fsubrl
xchg
lds
in
pop
pop
mov
stos
xor
imul
jne
mov
lock
inc
xchg
pop
pop
inc
js
xchg
pop
push
ja
mov
pop
adc
jle
sub
shl
sbb
rolb
inc
ja
add
testl
pusha
inc
mov
in
fwait
shll
jno
add
cltd
ja
les
and
sbb
dec
out
dec
xchg
and
pop
add
sbb
out
and
mov
adc
mov
sub
out
sub
iret
fcmovnu
push
clc
fcoms
push
ljmp
sub
jbe
into
stc
pop
fdivl
imul
outsb
sahf
xchg
jb
je
add
imul
xlat
sub
push
mov
test
jmp
push
shrb
lods
fisubl
das
mov
jecxz
mov
pop
clc
cltd
mov
adc
sti
mov
andb
sub
je
jae
push
mulb
mov
adc
push
xchg
mov
add
stos
pop
mov
ret
dec
out
mov
inc
ror
arpl
xor
mov
mov
sti
add
xor
xchg
push
mov
rclb
mov
addb
int3
mov
xchg
push
or
lcall
xchg
dec
sub
sahf
inc
dec
xor
sub
push
mov
pop
fcmovb
sahf
adc
mov
rorl
andl
jg
popa
into
outsl
movsb
insl
inc
sbb
ret
jl
adc
aad
xorb
imul
fidivrl
loope
add
jge
xor
subb
inc
sbb
iret
cmp
fcmovne
scas
sub
int
or
orb
or
push
sti
sbb
in
movsl
inc
sub
icebp
push
push
xchg
ja
ret
lods
sbb
xor
sahf
xchg
jg
mov
or
xchg
stos
adc
out
and
mov
test
js
fcomi
shr
mov
pop
lock
and
jmp
in
int3
shll
dec
or
andb
enter
mov
daa
test
xor
fcoml
dec
pop
sbb
mov
inc
ret
sub
and
pusha
pop
and
dec
ret
push
insl
jmp
pushf
inc
aaa
data16
xchg
jnp
ds
mov
push
jmp
jge
push
int
xchg
xchg
shlb
and
test
outsb
sbb
mov
push
sbbb
push
or
sahf
add
pop
and
mov
jb
cmpsb
sub
cmc
inc
mov
mov
sbb
or
mov
cltd
or
xchg
insl
out
xor
pop
or
lret
adc
xor
flds
subb
cmp
inc
shrl
adc
pop
nop
push
aaa
xor
jmp
xor
int
popa
and
in
mov
fcomps
mov
sub
cltd
mov
test
push
inc
mov
pusha
xchg
aam
in
sub
test
dec
imul
call
sar
inc
or
pop
mov
loop
lods
jg
push
adc
inc
adc
xor
je
cmc
xor
and
lret
std
rorb
enter
mov
sub
jmp
cmpsb
jp
je
xor
pop
mov
mov
and
std
or
or
repnz
lods
iret
xchg
xor
scas
xor
xchg
mov
mov
push
push
aas
dec
sub
lea
dec
xchg
imul
shrb
scas
pop
sbbl
xchg
dec
cmp
mov
insl
mov
adc
jne
mov
pop
or
pop
data16
xchg
into
sbb
imul
out
mov
loope
imul
std
jp
adc
pop
cmpsl
or
jbe
addr16
iret
das
and
mov
mov
xchg
push
xchg
repz
dec
stc
add
cmp
int
jg
jmp
dec
rcrl
out
or
inc
mul
pop
out
cld
mov
sbb
test
out
inc
cmp
and
and
cmpl
sarl
stos
xor
and
xchg
add
jbe
aas
aad
jae
dec
sub
call
insb
les
fdivrs
aas
fstpl
xchg
push
std
add
dec
in
push
add
outsl
xor
sbb
xchg
es
imul
iret
mov
fsubl
inc
pushf
add
mov
pushf
push
jmp
icebp
jecxz
sbb
addb
stos
mov
ss
mov
les
cmpps
dec
push
mov
ss
add
mov
push
nop
or
xor
cmc
mov
inc
daa
insb
dec
scas
sbb
les
xchg
lods
mov
scas
mov
or
cwtl
test
jmp
rclb
lods
add
idivb
dec
push
sub
inc
lods
les
ret
cmpb
push
aaa
dec
lahf
push
aaa
push
jge
cmp
ljmp
movsl
cmpsb
dec
leave
js
push
popa
sbb
call
data16
or
stos
xchg
das
ss
sarb
cmpb
pop
add
mov
jno
add
rolb
lret
xchg
push
addb
jo
test
push
loopne
int
popa
xor
adc
sub
addl
mov
iret
jg
lret
shrb
hlt
fdivr
into
shlb
pop
or
pop
jb
push
xor
pop
cmp
push
xor
shll
jmp
lock
inc
push
cwtl
mov
sub
movsb
data16
cmp
jo
xor
outsl
xchg
in
imul
sbb
incb
das
pop
or
xor
leave
pop
pusha
and
mov
lcall
fldt
ja
ds
push
push
add
ljmp
mull
into
xlat
test
ds
sbb
jno
outsl
mov
mov
mov
mov
xchg
popf
iret
iret
in
imul
jo
add
leave
out
unpckhps
out
xchg
jno
sub
scas
das
nop
or
mov
mov
fstp
pop
es
push
xor
xor
shll
mov
andb
out
fwait
insb
xchg
cli
pop
subb
mov
mov
push
cmp
mov
je
jge
daa
xchg
out
push
shrb
push
push
inc
push
aam
jl
pusha
add
adc
xchg
cmpsl
cmp
sti
imul
lds
mov
pop
mov
add
mov
cmpsb
mov
in
fcmove
test
jo
rolb
in
or
loop
add
sub
mov
out
out
dec
or
mov
pop
jge
inc
sub
mov
mov
out
clc
out
test
push
pop
lahf
dec
enter
jge
cs
ljmp
sti
jae
rol
xchg
insb
in
das
xchg
and
fwait
call
jns
push
add
outsb
rcrl
lock
les
ret
loop
nop
xor
push
jnp
out
outsl
xchg
sub
stc
mov
pop
sbb
outsl
adc
aam
mov
sub
push
mov
adc
push
mov
icebp
xlat
arpl
ror
cmp
jl
scas
testl
xor
adc
lds
add
jecxz
sbb
mov
mov
arpl
test
push
or
jg
movsb
pop
lahf
push
imul
out
add
inc
icebp
push
mov
lret
jnp
dec
cmp
adc
inc
lcall
mov
mov
adc
cmp
mov
shll
out
arpl
mov
jl
out
inc
bound
je
jo
pop
jmp
pop
xchg
mov
sub
pop
sarb
sub
std
out
es
add
jmp
fcoml
cmp
jg
ja
cwtl
ss
mov
push
daa
xlat
push
mov
cmp
stc
sbb
mov
hlt
sahf
in
aaa
out
xchg
movsb
test
out
imul
fnstenv
sbb
imul
xor
int
push
icebp
lret
popa
adcb
jge
leave
mov
or
lods
pop
cmp
add
pushf
inc
jp
sub
enter
mov
lods
subb
lahf
push
xchg
int3
fidivrs
and
outsl
enter
loop
jns
lea
mov
sub
lcall
ret
xchg
cwtl
mull
scas
lods
inc
push
sub
sbb
data16
lock
dec
pop
hlt
push
imul
int
and
sahf
inc
push
out
leave
inc
mov
or
sahf
icebp
pop
push
cli
lds
cltd
xchg
stos
push
lret
enter
cld
jo
mov
ret
fs
addb
cmp
and
add
out
adc
subl
inc
and
mov
add
jno
nop
jge
sub
pop
jbe
or
xlat
jle
out
popf
stc
mov
mov
mov
adc
repz
sbb
push
sbb
push
sub
movsb
sub
inc
scas
lock
jns
jbe
sub
jbe
jns
sti
jnp
sub
in
pusha
push
les
pop
adc
inc
mov
in
mov
sbb
adc
inc
inc
imul
ds
xor
loop
jl
sub
jp
sbb
mov
dec
mov
dec
and
jb
aaa
imul
lds
or
jg
pop
push
bound
scas
or
inc
shll
or
mov
dec
test
dec
jnp
pop
and
mov
cmpsl
push
fsts
sub
inc
fimull
ss
outsl
push
push
incb
jge
cmpsl
sti
cmp
movsb
out
jno
mov
pop
ret
mov
arpl
cmp
and
mov
or
sbb
pusha
or
dec
xor
mov
and
cmp
push
add
orb
xchg
xchg
aad
ss
mov
dec
pushf
cmp
and
test
pusha
lret
mov
xchg
jge
cmp
adc
mov
mov
cmp
leave
push
std
sub
dec
xor
xchg
sub
jno
sahf
hlt
cltd
imul
addr16
cmp
mov
or
push
mov
dec
test
and
loopne
pop
xor
dec
lahf
leave
in
outsl
push
mov
sub
adc
mov
test
jecxz
xchg
pushf
je
cld
imul
daa
mov
xor
push
ljmp
loop
cld
mov
mov
dec
in
rcrl
sub
xor
dec
mov
lret
mov
out
cs
arpl
fcmovne
dec
push
aam
inc
cmc
cwtl
movsb
jp
stos
or
sbb
pop
or
xor
test
stos
pop
jg
push
jne
mov
out
fs
dec
inc
mov
add
jnp
fstps
and
jne
cli
dec
lods
inc
mov
or
and
daa
pop
and
jg
sub
add
jne
and
dec
push
fldenv
mov
jp
fwait
xlat
int
jp
mov
and
fcoms
testb
cmc
sti
and
loopne
scas
cwtl
mov
lahf
sbb
shll
jp
outsb
push
icebp
push
sahf
ja
dec
dec
mov
daa
add
adc
push
inc
add
aas
shll
sbb
mov
mov
aaa
inc
in
lods
pusha
jno
sub
outsb
sub
mov
add
mov
ret
dec
cmp
push
lds
jns
and
fimull
push
pop
fidivl
out
stos
pop
xchg
or
dec
ss
aad
mov
test
xchg
add
into
push
pop
xor
pop
scas
incb
ljmp
jecxz
mov
cmp
jns
push
cmp
leave
xchg
inc
sub
out
pop
mov
mov
sbb
push
scas
imul
cwtl
xor
fstl
call
adc
xchg
sbb
mov
sbb
js
cmpsb
adcb
pop
jecxz
repz
ret
jp
ret
pushw
adc
pop
and
fidivrs
push
mov
dec
xchg
mov
inc
enter
std
fmul
pop
push
adc
loop
jmp
inc
shrb
add
filds
sahf
jbe
loopne
lods
or
lcall
fisubs
dec
push
push
inc
sahf
push
ds
pop
icebp
fisttpll
mov
out
cmp
xchg
into
in
int3
ljmp
ljmp
test
nop
add
and
adc
or
push
push
push
pop
inc
sbb
outsb
fs
imul
es
repz
xor
arpl
cmp
jp
mov
sub
cmc
sub
adc
mov
push
pop
mov
pushf
aaa
lret
mov
js
shlb
stos
pop
xchg
dec
push
adc
es
out
mov
lcall
push
mov
imulb
dec
dec
sbb
xor
or
push
clc
inc
sbb
test
xlat
mov
hlt
leave
adc
cmpsb
jb
incl
jae
inc
fsub
inc
sub
xor
ja
popa
ja
fwait
pop
outsl
ss
and
inc
je
sub
stos
ss
xchg
mov
movsl
fisubrs
bound
add
add
lahf
sbb
pop
inc
jp
cltd
adc
test
nop
lahf
push
lcall
lds
lods
xchg
mov
sbb
insb
cmp
jmp
rolb
std
stc
xchg
dec
xchg
cmp
add
out
mov
lods
pop
fs
push
pop
sahf
popf
xchg
pop
push
push
loop
nop
fstpt
mov
movb
and
mov
les
mov
push
out
paddb
add
sub
mov
cmpsl
pcmpeqd
add
mov
cmp
inc
or
inc
pop
push
call
out
pop
pushf
lds
jo
adc
jmp
or
or
lods
repnz
mov
int3
outsb
pop
push
adc
add
aas
es
dec
fucomi
fdivrs
cli
lock
rclb
mov
pop
lret
insb
imul
ret
adc
lods
int3
sbb
push
xchg
shll
popa
and
popl
mov
cmovnp
pop
std
xor
and
cwtl
mul
leave
loope
xor
adc
cmp
inc
stos
fadds
xor
jl
mov
shl
bound
push
in
mov
and
in
cmpsb
data16
outsl
cltd
mov
push
test
push
loopne
cmpb
jnp
cld
jno
outsl
cmp
mov
cmpsl
addb
push
bnd
stos
adc
xor
add
add
mov
sbb
jo
imul
jle
xor
inc
pop
and
stc
mov
test
in
dec
jb
outsb
sbb
mov
jmp
inc
and
mov
inc
outsl
jge
push
pop
mov
call
orl
mov
addr16
push
imul
mov
jae
aaa
loope
xor
mov
push
repnz
inc
or
jae
out
fs
daa
mov
add
cld
xlat
ja
xor
pop
std
mov
shr
push
mov
lds
push
mov
mov
js
fwait
add
pop
lcall
scas
cmp
jge
or
mov
fdecstp
cli
std
push
test
mov
sarl
lea
cmp
icebp
fcompl
jmp
push
aad
jp
aad
inc
rclb
cwtl
and
test
jp
inc
bound
xor
das
jl
lret
jne
pop
mov
mov
fnsave
xchg
outsl
add
push
call
sbb
aam
hlt
enter
pop
jae
add
iret
ucomiss
sub
adc
mov
in
in
sbb
aas
ss
sbb
push
cmp
xor
fcoms
movsl
shl
adc
out
dec
mov
loope
sahf
cmp
test
shlb
imul
test
rcll
push
popa
daa
prefetch
add
js
push
cmpsb
call
fsubrs
std
inc
sbb
loop
pop
mov
in
pop
stos
cli
push
jmp
in
dec
push
out
push
fildll
or
shrl
xor
bound
adc
je
and
lea
pop
mov
mov
lea
mov
jl
loope
mov
rolb
scas
push
pop
pushf
xchg
push
fucom
or
xlat
ljmp
xor
mov
jge
rolb
cld
or
test
xor
pand
fidivl
mov
fsub
jb
gs
xor
enter
test
cmpsb
mov
dec
or
lahf
or
lds
cmp
sbb
sbb
lock
pop
jnp
push
lods
lock
icebp
lock
ja
cmp
sub
lds
iret
je
aas
inc
pop
bound
xor
lcall
ret
fs
mov
pop
jmp
mov
or
adc
sub
mov
mov
pop
push
in
sub
sbb
mov
inc
add
sub
enter
and
out
pop
sub
mov
test
sub
jge
out
sub
and
fdivrl
verr
jecxz
xchg
ret
xchg
nop
test
mov
hlt
jge
jp
fs
lret
out
lret
inc
cmp
xchg
jb
jmp
lret
xchg
xchg
js
ljmp
mov
jb
in
xor
sbb
pop
ss
iret
mov
in
iret
icebp
adc
xor
push
lods
filds
push
pop
ja
rcpps
push
push
cmp
mov
jecxz
or
sub
into
pop
dec
mov
pop
test
add
sbb
mov
loopne
pop
sarb
sub
popf
sbb
jecxz
je
faddp
aas
pop
sub
xor
repnz
and
cmpsl
movsl
ss
xchg
cwtl
inc
test
out
lds
pop
push
mov
jae
xchg
cmp
idivb
data16
fiadds
dec
pop
out
outsb
shl
cs
adc
sub
pop
and
addr16
movsl
and
sarb
mov
sbb
mov
xor
mov
or
dec
lea
sub
das
jmp
jg
shrb
jb
dec
insl
outsl
lcall
out
jmp
push
add
into
add
push
lcall
imul
mov
rcrl
negl
push
stos
rcll
bound
lahf
cwtl
fsubr
sbb
adc
jo
sub
jge
lcall
jecxz
mov
pop
xchg
xor
add
outsl
ja
xor
repnz
idiv
xor
mov
das
mov
ljmp
imul
subl
sbb
mov
je
mov
jle
clc
shll
adc
scas
shrb
xlat
mov
dec
lods
sarl
dec
or
jg
jo
jp
bound
sub
cmp
pusha
movb
scas
repz
loop
jge
mov
mov
sbb
and
aam
js
inc
or
dec
loope
js
out
mov
aad
cmc
stos
sar
in
dec
imul
jno
into
loopne
xchg
ret
mov
lds
pop
movsb
loopne
xor
mov
pop
push
popa
scas
mov
mov
mov
push
insb
mov
les
xor
jno
dec
mov
mov
mov
mov
mov
xchg
push
in
es
negb
pop
and
out
mov
sub
add
or
xor
or
dec
push
or
pop
push
or
add
add
dec
push
or
pop
push
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
