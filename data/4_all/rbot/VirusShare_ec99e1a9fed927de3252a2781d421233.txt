call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
rorb
and
mov
add
push
push
cmp
lea
push
xor
sub
adc
pushl
jnp
push
dec
adc
add
add
cmpl
jne
pop
xchg
rcr
pushl
pop
xor
push
push
cmp
add
add
or
in
leave
ficoms
add
add
pop
cmp
leave
ret
leave
ljmp
cmpsl
push
cmp
test
pop
jle
mov
pushl
mov
sti
add
adc
je
sub
or
adc
adc
sbb
mov
cmp
inc
cmp
push
je
cmp
inc
mov
xor
daa
add
out
jne
daa
xchg
push
mov
add
in
outsl
popa
sti
push
push
mov
je
scas
or
inc
pop
fldt
fwait
add
sub
inc
dec
insb
imul
cmp
dec
inc
adc
out
outsl
inc
popa
jg
loopne
jne
lea
push
push
cmp
sub
add
jmp
lea
pop
mov
mov
lcall
adc
div
imul
aas
xorl
inc
cld
ss
outsl
push
inc
cld
push
mov
mov
sbb
imul
mov
insb
ss
call
xor
add
insl
data16
ljmp
in
pop
mov
push
mov
push
push
fisttps
adc
mov
pop
je
mov
mov
xchg
sbb
xor
popf
and
pushf
xchg
cmp
fidivrl
adc
daa
mov
jl
inc
push
or
in
add
xchg
or
pop
push
or
add
aaa
vmwrite
mov
mov
or
sbb
adc
inc
es
jne
pop
out
and
inc
mov
int3
pusha
mov
and
pop
pop
push
mov
fmull
stos
fldcw
mov
inc
pop
idivl
and
jg
push
daa
pop
pop
inc
sub
push
or
xor
jne
add
fsubrs
and
pop
jbe
insb
out
divb
shr
cmp
push
fiadds
clc
hlt
movsb
lods
jmp
add
push
cmp
gs
in
or
mov
clc
clc
pop
sti
insl
xchg
cld
cld
mov
cmp
jne
push
shl
add
jbe
dec
hlt
or
add
sbb
pop
and
mov
add
push
push
add
dec
xchg
incb
data16
pop
test
call
out
repnz
push
push
adc
add
push
out
cltd
test
xor
scas
iret
fstl
lcall
mov
jbe
mov
push
mov
or
cmpps
cmp
setg
pop
cmpb
xor
fisttpll
mov
jp
mov
es
fadds
xlat
insb
mov
pushf
push
fdivl
add
hlt
mov
sahf
dec
ja
add
add
add
cs
inc
mov
shl
pop
mov
imul
cmpsb
lods
mov
mov
inc
mov
push
int3
fsubs
mov
mov
or
pop
sbb
clc
std
adc
push
push
dec
and
mov
enter
push
shll
jmp
jne
lret
sbb
adc
in
dec
pop
pop
or
ret
mov
cmp
mov
push
and
sbb
adc
adc
aam
sbb
popf
popa
sub
push
stos
rclb
std
xchg
fstl
pop
xchg
in
cmp
rclb
je
jb
and
sub
sbb
jge
xlat
in
or
mov
jmp
or
jne
cmpw
and
popa
mov
inc
pop
jmp
push
mulb
xchg
mov
push
out
mov
in
clc
pop
lea
jnp
movl
fcomps
push
sbb
pop
cli
sti
pop
fsubrs
xor
xor
fiaddl
pop
mov
movsb
jge
es
pop
orl
mov
cli
pop
jmp
pop
mov
loopne
lcall
les
or
leave
mov
adc
addl
adc
enter
divl
inc
add
das
sub
add
sbb
sub
loopne
jnp
xchg
sbb
clc
or
fisubrl
adc
in
subb
push
fistl
incb
sub
jne
inc
xorl
js
or
and
movl
gs
pop
or
insb
clc
mov
xor
or
mov
jns
fmull
sub
cmp
stc
mov
jae
or
or
xlat
lea
loopne
pushf
or
mov
cs
mov
mov
js
ret
das
push
leave
call
pop
mov
rolb
add
je
prefetchnta
and
adc
push
int3
nop
sbb
add
fmull
daa
test
mov
orb
dec
adc
sbb
lret
add
or
add
jne
mov
into
adc
and
orb
rcrb
pop
jne
scas
xor
xor
pop
cmp
fistl
mov
loope
xor
push
lahf
les
rcrl
fstp
push
aam
xor
sbb
loope
xor
scas
movl
push
aam
fcompl
dec
xor
jnp
jb
in
lcall
repnz
and
ret
inc
push
add
pop
std
sbb
nop
rorl
or
cld
je
leave
popa
xor
push
call
jmp
rep
nop
divb
sub
daa
sub
cmp
jbe
pop
mov
mov
xchg
scas
push
mov
in
xor
cmp
xor
popa
inc
lcall
sbb
mov
mov
cmp
xor
dec
or
and
pushf
inc
push
inc
cmp
arpl
insb
je
out
mov
andl
mov
mov
aas
pop
or
adc
lahf
mov
add
testl
jmp
mov
push
lahf
sahf
cmp
ljmp
cmp
addr16
push
mov
hlt
arpl
mov
loopne
pop
xchg
cld
adc
sub
add
sbb
out
push
test
lcall
lods
inc
sub
and
dec
xchg
jle
cmp
pop
movaps
add
cs
das
data16
push
push
xchg
sub
xchg
mov
sbb
lods
out
adc
or
fistpll
fidivrs
movzwl
scas
sub
pop
cli
add
lock
jnp
mov
ficoms
fdivs
mov
addb
pop
push
pop
adc
sub
push
mov
adc
in
clc
ficoml
pop
mov
in
mov
xchg
sbb
sbb
pop
int
cs
jecxz
add
sti
pop
push
mov
int3
jle
or
je
sub
cld
jne
jecxz
jns
lods
rolb
cmp
jge
int3
enter
out
mov
or
cmp
jne
cmp
movsl
sbb
je
mov
iret
jb
popa
dec
lds
ret
push
das
jmp
bound
jne
cltd
mov
ss
ret
sub
and
add
sbb
add
inc
pop
mov
in
xor
pop
cmp
data16
and
push
sbb
or
push
push
adc
push
pop
cli
sbb
mov
nop
es
jl
hlt
push
ret
sbb
test
push
or
cmp
fdiv
or
push
scas
cmp
sbb
and
mov
cld
bound
cmp
fs
fstps
push
jne
push
jno
int
es
data16
gs
and
mov
cltd
mov
call
movsl
sbb
in
call
cmpsl
out
insl
ds
jae
push
mov
push
push
push
adc
pushl
pushl
push
xchg
mov
hlt
jo
je
repnz
adc
push
aam
cmp
or
lods
ja
push
leave
mov
arpl
test
outsb
push
clc
mov
jmp
push
cmp
mov
fiaddl
xor
dec
imul
arpl
or
pop
loopne
sarb
sub
icebp
jmp
or
mov
data16
mov
fisttpl
addb
add
jmp
aam
mov
call
sbb
push
push
or
je
mov
push
push
aaa
mov
nop
xchg
shll
repnz
mov
mov
addr16
sub
jne
out
adc
mulb
iret
test
cmp
and
int3
pop
imul
mov
jl
mov
add
lods
f2xm1
fidivs
sti
push
sbb
jge
fmuls
jne
imulb
mov
shr
loopne
sbb
arpl
add
lea
add
hlt
sbb
sbb
fidivrl
adc
mov
mov
rolb
loopne
sub
add
jmp
sub
lret
mov
lcall
add
enter
mov
mov
dec
nop
push
add
sub
shrb
push
icebp
xor
in
jmp
xchg
rcrb
mov
cs
pop
add
xchg
jne
call
ja
mov
add
in
or
ss
test
push
or
jmp
or
hlt
mov
or
cvtdq2ps
add
sbb
or
mov
jbe
or
dec
in
add
jne
push
add
jmp
stos
into
jno
cmpsb
or
or
cmpsl
pop
addb
ret
sub
fiadds
lret
push
int3
push
push
push
in
dec
mul
je
and
jge
jo
pop
mov
and
jmp
or
shlb
clc
je
cmpxchg
jnp
xchg
cmp
cmp
aaa
outsb
jae
pushf
loope
inc
es
or
mov
dec
adc
jg
mov
push
clc
adc
or
ret
mov
mov
loop
push
adc
lods
pop
xchg
adc
and
or
mov
add
pop
xchg
sub
sub
lods
bnd
push
int
cmpl
mov
sbb
clc
lds
lods
fmuls
jg
or
pop
push
lock
xor
inc
sti
enter
inc
clc
push
sub
pop
sub
jo
sti
or
aam
adc
sbb
add
insb
pushf
mov
mov
clc
cld
lcall
sbb
push
push
and
sti
pop
push
hlt
imul
sub
imul
inc
sbb
add
fmul
and
add
aam
dec
pop
and
inc
orb
adc
and
push
sbb
adc
sub
inc
inc
or
lock
sbb
cmp
adc
add
xchg
lods
mov
call
cld
push
aad
cmp
insb
filds
pushl
inc
mov
sbb
imulb
push
pop
jbe
sahf
dec
js
adc
pop
push
cmp
dec
int
xchg
adc
pushf
cmp
fcoms
pushf
int3
in
inc
adc
test
filds
cld
fisubs
push
sbb
jmp
xchg
pop
cld
fsub
push
imul
outsl
fdiv
outsb
sub
not
push
adc
sbb
xor
pop
jmp
push
insl
mov
mov
xchg
in
mov
push
cmp
xchg
mov
adc
sub
adc
push
dec
testb
insb
pop
jmp
ljmp
dec
sub
shlb
cmp
mov
je
mov
pop
mov
inc
aam
mov
in
mov
call
ret
dec
jmp
mov
lods
and
and
xor
jmp
out
and
inc
dec
jne
pop
pop
lock
mov
rol
iret
add
dec
xor
pusha
jge
xchg
test
jbe
cmp
sub
inc
or
std
fsubs
push
int3
sbb
jno
negb
inc
push
or
loope
adc
scas
sbb
add
pop
popa
mov
loope
mov
push
add
lock
or
pusha
inc
add
mov
jne
push
jle
push
int
pop
cs
push
into
and
dec
rorb
shrl
xchg
lret
in
rorb
and
cmp
daa
sub
pop
xlat
pop
fsubrs
fstps
fisubrl
fistpl
fcompl
fisttpll
fimuls
int
mov
add
push
jecxz
mov
pmulhw
cmp
adc
or
jmp
sbb
xor
in
mov
out
dec
lock
adc
lret
repnz
repz
hlt
aaa
cmc
sbb
jb
notl
sub
cli
pop
sti
pop
mov
out
xor
sbbb
push
jb
adc
leave
outsb
or
fisttps
sub
test
jb
mov
je
pop
jge
jne
jnp
lods
rcr
sti
pop
inc
mov
sbb
sbb
enter
int3
sbb
call
mov
push
mov
push
fsubr
mov
add
add
and
inc
fcomp
out
stos
jbe
jp
pushf
or
mov
decb
out
jge
mov
inc
and
jae
clc
dec
and
push
and
cmp
inc
jo
cmp
icebp
iret
mov
pop
xor
mov
mov
mulb
add
push
xor
inc
cmp
sbb
mov
pop
pop
push
xchg
adc
inc
xchg
jp
mov
jmp
sbb
je
mov
push
add
xchg
lea
push
cmpb
imul
out
mov
mov
and
rorb
hlt
inc
add
fs
fbld
or
fsub
or
fcmovb
xchg
mov
add
dec
jb
roll
mov
sbb
rorb
mov
pop
dec
out
lock
jge
sub
xor
sbb
lds
insb
mov
pop
dec
out
lock
int
or
arpl
and
fnstenv
imull
add
mov
sbb
add
push
jbe
inc
sbb
push
push
pop
pop
popw
sbb
jle
mov
fcoml
popa
lods
enter
in
push
subl
push
rol
mov
and
ret
rcrb
mov
mov
sub
add
pop
fists
clc
mov
ret
fsubl
jge
ljmp
push
ja
push
jbe
cmp
jno
sbb
mov
aam
insb
cmp
shll
adc
fisttpl
push
mov
rorb
jl
insb
mov
mov
and
or
adc
jne
mov
hlt
add
movsbl
mov
cld
stc
sub
in
cmp
dec
cmp
pop
jbe
sbb
push
into
jp
mov
xor
mov
push
out
rolb
lods
xchg
clc
loop
sub
inc
xor
sbb
pop
cld
dec
xor
push
fmull
jbe
push
cmp
jecxz
cld
xor
sbb
push
mov
push
push
xchg
in
inc
or
enter
pop
enter
sub
sti
out
or
push
ret
sub
mov
and
lods
push
add
dec
push
pop
aam
iret
je
pop
in
mov
data16
inc
cmp
sbb
nop
es
add
cmp
jmp
mov
or
mov
sub
fnstenv
add
push
lcall
arpl
adc
add
pushf
cltd
je
cmp
mov
ja
jnp
insb
nop
push
push
cltd
add
jmp
sbb
push
hlt
aas
int
inc
outsl
jge
mov
jo
xchg
push
mov
fisubl
push
call
add
xchg
mov
and
mov
and
cltd
lea
inc
mov
add
dec
into
sbb
test
and
and
lahf
inc
ss
sub
or
adc
push
rolb
inc
test
pop
mov
addr16
xchg
or
inc
aas
xchg
ss
push
mov
push
adc
mov
inc
cmpsl
push
popa
hlt
in
je
sub
in
push
inc
cmpsl
fwait
aad
jb
call
cltd
loopne
dec
mov
insl
adc
cmp
nop
js
pushf
and
cmp
add
or
push
or
mov
lcall
sbb
and
push
arpl
jo
jne
add
adcb
lods
push
inc
loop
xor
sub
cwtl
jg
xor
nop
xchg
data16
clc
call
or
sbb
orb
inc
insb
and
lods
in
xabort
rolb
leave
clc
cltd
push
push
jle
sbb
inc
adc
js
fistl
pop
stc
gs
cmp
adcb
jns
push
jnp
xchg
or
mov
and
sub
rclb
or
jnp
hlt
mov
mov
mov
mov
movsl
das
or
aaa
icebp
fwait
mov
stos
stos
mov
mov
add
stos
and
call
add
jnp
mov
dec
add
filds
and
lock
jp
outsb
notl
mov
push
add
add
mov
add
je
and
es
and
pop
cld
shrb
lahf
add
in
ffreep
pop
sbb
sbb
in
out
ret
data16
pop
in
fld
lods
inc
shr
out
pop
or
add
pushf
lods
adc
or
inc
jmp
mov
enter
mov
cmpsl
or
pop
loopne
popa
cld
push
push
jg
xor
and
pop
mov
mov
push
mov
add
scas
xor
add
loopne
nop
dec
inc
cmpl
loopne
ret
xlat
dec
test
pop
loop
xchg
cltd
pop
idiv
cmp
je
xor
neg
popa
dec
inc
dec
orl
insb
test
ds
mov
mov
enter
enter
and
or
push
cltd
add
or
xchg
out
push
rcrl
sub
cmpsb
dec
repz
or
adc
bound
mov
push
jae
mov
cmp
push
enter
xor
add
add
push
add
xchg
out
mov
inc
inc
xor
or
or
cltd
fs
jl
xchg
dec
inc
xorb
mov
int3
int3
les
sbb
icebp
lea
adc
dec
cmovo
negb
out
push
mov
test
push
mov
mov
pop
push
sub
push
cmp
cmpl
daa
dec
or
in
xor
add
inc
adc
scas
rcll
pop
adc
sbb
push
mov
and
pop
movsl
cmp
xchg
int
push
push
inc
mov
inc
adc
sbb
outsb
push
out
data16
and
add
xchg
into
cmpsl
bound
xor
mov
mov
mov
adc
sub
adc
loopne
push
push
ret
addb
rolb
repnz
and
sbb
xor
push
scas
cmp
sti
shlb
adc
daa
outsl
gs
mov
das
fists
mov
sbbl
cwtl
dec
add
clc
adc
push
xchg
and
insb
ljmp
push
dec
ljmp
cmp
sbb
push
inc
cmp
inc
aas
repz
add
or
lods
jmp
pop
cld
popa
mov
cmp
les
nop
xchg
je
dec
ja
lea
enter
push
std
sub
pop
clc
jmp
pushf
lock
adc
push
ret
adc
push
loope
movsb
jns
pop
int3
std
loopne
mov
ds
adc
adc
add
inc
dec
push
jl
jmp
cmp
dec
in
cmp
xchg
cmp
add
and
pushf
icebp
sbb
inc
int3
std
push
in
into
xchg
push
incl
test
add
lahf
mov
push
add
int3
notb
xor
jno
or
andl
or
mov
test
in
in
push
add
dec
out
ja
xor
mov
lahf
out
xchg
ja
ljmp
inc
ljmp
sbb
and
cs
xlat
push
out
pop
pop
icebp
and
and
cld
xor
nop
mov
pusha
adc
sbb
xchg
cmp
data16
loopne
mov
mov
push
add
gs
adc
in
cld
sbb
jns
add
movsb
xchg
out
sub
stc
push
mov
mov
loop
enter
mov
int
mov
jb
push
into
sbb
loopne
sbb
jne
mov
adcl
clc
mov
in
in
add
add
in
add
insb
sub
push
dec
cmp
jbe
add
movsl
shl
sbb
add
out
std
movl
les
add
push
test
insb
sti
inc
add
mov
lock
iret
and
xchg
pop
inc
das
insb
stos
insb
sbb
rcr
jo
push
popa
jae
inc
test
push
jecxz
adc
push
mov
out
aaa
jl
push
inc
mov
pop
pop
xor
cmp
fldenv
in
pop
add
mov
mov
shlb
pop
and
add
mov
push
push
lcall
push
sbb
mov
or
inc
and
push
push
rolb
xor
push
or
daa
fsubrl
out
movzwl
cltd
mov
lahf
movsl
out
iret
sbb
push
xor
pop
in
fnstcw
jmp
inc
adc
add
testl
dec
incb
jae
sbb
jmp
push
in
and
push
hlt
or
add
ficompl
rolb
mov
movsl
inc
or
test
pop
push
stos
cli
ss
incb
test
call
cli
mov
fstpl
jl
jmp
in
pop
adc
adc
aaa
les
cld
push
out
add
fimuls
shl
or
aaa
addr16
inc
sbb
clc
pop
or
pusha
fxch
pop
out
psubusb
cwtl
in
and
nop
mov
lods
xchg
mov
xchg
mov
cmp
sbb
adc
mov
add
insb
pop
cmc
int3
push
xor
aam
jle
sbb
sub
mov
or
dec
test
sub
fldcw
fcompl
sub
jg
pop
ret
inc
js
inc
enter
cmp
rorl
jae
mov
testb
adc
or
xchg
inc
mov
in
sub
mov
pop
push
jo
jp
mov
xchg
mov
xchg
out
sbb
inc
in
adc
or
fadds
jo
mov
adc
fstl
sub
xor
scas
xchg
sub
cmp
shll
or
call
and
loop
add
imul
mov
jmp
mov
loop
into
cli
pop
dec
adc
dec
popa
inc
add
and
jmp
cmp
mov
shrb
lock
movsb
or
sahf
and
shl
cli
aam
std
adc
iret
jp
or
call
mov
popw
bound
jl
xchg
lods
add
addl
lret
int3
je
insb
xor
jbe
push
fcompl
lock
loopne
jae
movsb
sub
cmp
pop
in
cwtl
lods
rclb
add
std
mov
push
les
jge
ja
cmpl
mov
je
shr
shlb
aad
mov
adc
xor
icebp
icebp
cld
jmp
dec
loope
inc
aad
cltd
xchg
loopne
mov
jecxz
dec
lods
inc
in
pop
je
pushf
jg
or
loop
push
push
ljmp
call
pop
cmp
inc
xor
daa
ljmp
or
outsl
imul
jmp
enter
hlt
or
sbb
pop
mov
sbbl
adc
mov
les
sbb
xor
call
data16
insl
clc
push
push
mov
or
or
fstpl
sbb
outsb
imul
sbb
dec
test
imul
add
jbe
push
mov
pop
nop
pop
sbb
loopne
cmc
nop
jne
sbb
jo
out
dec
xchg
pop
sarb
adc
inc
sbb
outsb
push
negl
mov
call
je
add
mov
je
loop
dec
pop
repz
add
pop
out
addl
xchg
lods
and
aad
jl
cmp
int
fstps
rolb
or
or
adc
or
xor
pop
shlb
sub
add
leave
adc
sub
or
mov
xor
inc
cmp
jl
ret
insb
shlb
repz
jns
cli
pop
lods
daa
aas
xchg
rorl
bound
nop
xchg
mov
cmp
mov
pop
or
cmc
adc
outsl
std
jle
pop
jge
sbb
add
mov
inc
adc
loop
cs
or
push
or
push
mov
mov
cld
pop
test
test
aaa
movb
inc
jmp
push
rol
dec
fs
or
push
mov
inc
dec
jmp
andb
test
add
pop
cmp
jle
or
je
dec
add
mov
add
clts
mov
xchg
mov
jl
sbb
mov
or
push
and
dec
in
movsl
sub
inc
aaa
inc
lea
rcll
in
lock
add
call
dec
xor
fiaddl
aad
insb
cmp
adcl
add
and
enter
mov
pop
inc
test
popa
and
lock
cltd
clc
cmp
mov
push
sbbl
inc
pushf
dec
mov
push
into
sub
mov
fmuls
pop
lock
pop
mov
cld
clc
les
xor
out
and
xor
out
jl
call
js
push
xchg
lods
add
xchg
lods
ret
push
cld
inc
pop
mov
xor
push
dec
push
cmp
ret
add
adc
jnp
stc
lret
pusha
cmp
adc
std
data16
sbb
fldt
and
mov
pop
mov
roll
mov
gs
pop
daa
pop
sbb
add
xchg
cltd
mov
lcall
and
xchg
sub
and
sbb
mov
ret
ficoml
daa
jmp
adc
cmp
popa
in
lret
inc
shrb
out
or
test
dec
adc
cmp
mov
mov
aas
aad
mov
mov
push
aam
lcall
je
pop
test
pushf
add
fs
cmpsl
sti
fs
pop
in
sub
or
dec
mov
sti
shlb
pop
dec
adc
pop
mov
jl
dec
and
outsl
add
xchg
adc
add
sbb
push
mov
sub
es
inc
mov
add
dec
in
and
push
xchg
sub
add
sub
mov
cmc
dec
add
or
xor
nop
jno
mov
arpl
xlat
mov
pop
je
notb
adc
mov
insb
add
je
je,pn
stos
dec
das
out
push
dec
fnstenv
sbb
push
and
out
sbb
push
je
ja
fs
outsl
out
mov
shll
mov
enter
cld
lods
divb
dec
mov
push
mov
cmp
mov
xchg
sub
inc
mov
ljmp
add
mov
dec
xchg
mov
cmpsb
jb
insb
adc
add
mov
xchg
push
sahf
and
sub
adc
js
je
std
mov
fcoms
push
call
or
mov
sub
in
mov
in
sbb
enter
loope
mov
dec
aad
cmp
imul
and
pop
jo
mov
fcompl
lahf
js
in
push
mov
add
add
push
adc
inc
aas
dec
testl
inc
cmpl
ss
push
and
xchg
cmp
xchg
dec
inc
inc
ja
xchg
sub
jno
push
or
punpckhbw
aas
push
sbb
pop
out
and
xchg
mov
jmp
sbb
push
add
jnp
fs
in
nop
std
push
std
fdivrl
pop
and
fs
add
push
push
push
and
loope
push
push
bndldx
pop
call
and
in
lret
mov
cs
jl
int
mov
sub
pop
mov
sbb
push
outsb
test
sbb
add
outsl
inc
jg
sbb
mov
pop
cmp
mov
cmp
jnp
add
loopne
les
and
loope
pop
pop
call
inc
pusha
shr
cmp
rorl
add
mov
mov
mov
ret
jge
mov
jbe
xor
mov
loop
shl
pop
pop
stos
ret
add
jl
inc
mov
fstpl
pop
pop
bound
addl
jbe
fsubr
loopne
inc
push
notl
pop
mov
and
sbb
mov
pushf
outsb
fnstcw
rcrb
mov
mov
lock
mov
test
pushf
dec
push
outsb
mov
pop
sub
inc
jp
xor
jns
mov
hlt
mov
cs
inc
xchg
push
add
xlat
sahf
js
push
mov
shll
dec
mul
dec
shrb
enter
jo
sbb
nop
xor
push
lahf
lock
sarb
mov
mov
testb
aam
push
loope
cltd
int3
repnz
shrl
addr16
inc
adc
fs
jo
push
test
mov
fs
test
je
inc
int3
fldcw
add
inc
cmp
jae
enter
frstor
out
mov
andb
push
sbb
mov
out
lea
or
call
mov
mov
aam
fwait
and
or
mov
sub
test
xor
add
mov
dec
hlt
and
negl
pop
mov
sahf
or
movsb
sarb
inc
subl
or
dec
inc
mov
mov
mov
push
ret
test
fsubs
hlt
jae
iret
and
int
push
js
movsl
dec
ret
jb
mov
and
cmp
cmpsl
imul
push
in
add
push
imul
xorb
xchg
outsl
ja
jne
or
pushf
pushf
inc
xchg
sub
imul
js
xchg
push
imul
out
jmp
pop
nop
jmp
sbb
cmp
andb
xor
sub
xchg
pop
and
icebp
ljmp
loop
cmp
je
inc
inc
inc
cmpb
add
push
int
inc
ds
inc
jne
mov
fildl
pusha
testl
lcall
fisubs
fstl
or
pop
lock
insb
xor
sbb
xchg
mov
out
mul
test
out
in
sbb
push
sbb
adc
test
sbb
call
and
xchg
jno
xchg
in
mov
scas
jle
mov
sub
pop
sub
add
bound
lock
in
clc
xchg
and
les
mov
gs
cli
insl
jns
jne
cmp
neg
cmpb
jbe
sbb
arpl
inc
inc
cmp
jb
aam
int3
lea
sbb
inc
out
and
jmp
sbb
addb
sub
xchg
xchg
loope
dec
mov
jne
dec
je
jge
sub
test
das
ss
add
das
lahf
jge
outsl
in
inc
or
idivl
and
and
and
dec
push
je
dec
pop
fstpl
pop
repz
inc
push
push
sub
sbb
les
sbb
mov
jmp
push
aad
mov
aas
int
lcall
or
or
shlb
mov
push
icebp
adc
movsl
add
leave
into
rclb
clc
adc
nop
out
shr
and
sti
sub
inc
sbb
push
push
xchg
fistpll
mov
lock
inc
jbe
sub
push
push
xor
add
xchg
xor
mov
inc
fstpt
adc
xorb
ret
inc
jmp
es
mov
addr16
je
ret
cs
insl
lock
xor
xchg
imul
xchg
adc
loopne
test
cmp
xor
cmpl
pusha
dec
jno
nop
inc
inc
push
icebp
adc
fimuls
mov
adc
inc
mov
sub
mov
jne
xor
inc
dec
insb
sti
ret
push
pop
daa
test
loopne
cmp
frstor
push
sbb
sub
fistl
mov
add
jecxz
inc
sub
push
push
adc
xlat
sahf
stc
clc
aam
inc
add
xchg
fs
mov
out
cmp
loopne
inc
inc
cmp
daa
adc
sub
int3
xchg
jle
jae
aam
mov
test
jbe
lea
jne
mov
cmp
jb
add
incl
adc
mov
out
mov
xchg
push
inc
push
or
mov
ja
dec
pop
mov
push
movsl
cmp
pop
or
cli
sbb
jns
pop
add
or
jge
dec
mov
xchg
aaa
mov
je
mov
or
jbe
jae
lea
push
add
mov
xchg
and
xor
jb
dec
sahf
das
sbb
add
mov
ljmp
cmpb
insl
daa
mov
inc
je
inc
mov
add
mov
imul
jmp
cmp
popf
loop
jl
mull
inc
clc
add
cmp
lds
cwtl
xchg
xchg
pop
pop
sbb
fwait
es
int3
je
pop
xor
es
mov
out
cwtl
or
stos
frstor
lds
shll
push
xchg
rolb
pop
imul
jmp
inc
pop
xor
jmp
cmp
dec
inc
outsb
lock
cmc
ret
outsl
or
ljmp
jae
mov
inc
imull
xor
aaa
cs
inc
mov
mov
cmpsl
inc
add
mov
add
test
push
xchg
es
roll
mov
and
leave
cmp
divl
inc
mov
sub
push
sbb
push
dec
mov
adc
das
pusha
enter
cltd
dec
xor
rcrb
pusha
push
push
pop
sbb
sti
push
lods
add
cld
mov
mov
fs
add
loopne
fsubrl
xor
push
push
pop
pop
loopne
dec
aam
pop
cmp
pop
mov
dec
lds
loope
repnz
inc
jle
enter
adc
icebp
mov
jbe
cmp
cmp
loopne
jne
pop
xchg
faddl
sbb
jmp
cs
mov
clc
cmp
clc
adc
insb
sub
push
sbb
xor
sbb
add
iret
jne
aaa
xchg
mov
add
sbb
push
push
pop
add
enter
or
dec
dec
das
sbb
mov
and
jb
shrl
jge
adc
jno
jns
je
call
movb
or
rcrl
adc
jbe
lods
dec
into
pop
jbe
aas
out
cmpsl
sub
pop
jae
cmpb
jne
or
xor
idivb
push
inc
movb
jmp
lret
push
in
cmp
cwtl
int
and
add
inc
pop
cmp
pop
jb
pop
pop
in
adc
scas
fabs
int
adc
das
add
adc
test
inc
jmp
rcrl
mov
jmp
sub
sbb
add
sub
cmp
les
adc
jnp
call
and
push
pop
cld
bnd
xchg
movsb
jecxz
movsl
rcrb
push
push
cmpsb
les
orl
mov
push
jmp
mov
test
or
shl
lcall
fwait
xor
and
xlat
mov
pop
fs
xlat
icebp
pop
subb
sbb
repz
dec
adc
or
popf
test
inc
mov
xor
sarb
inc
pop
jb
sarl
sub
inc
sbb
and
add
adcl
mov
xchg
lods
xor
scas
xchg
ss
add
push
sub
jns
les
into
mov
cltd
push
and
adc
je
push
mov
inc
popa
repz
inc
shr
dec
jo
push
sti
sbb
dec
mov
xor
push
pop
or
push
mov
mov
push
push
push
mov
pop
push
xchg
test
add
sub
mov
dec
sbb
in
dec
xor
xchg
inc
into
shl
sbb
pop
xorb
dec
pushf
insb
or
dec
or
mov
cmp
add
inc
push
sub
sbbb
test
jnp
rcr
sarb
mov
rorl
fs
loopne
dec
lret
decl
cwtl
in
xor
out
movsb
xchg
insl
and
xchg
jo
in
imul
push
mov
adc
js
or
pusha
ljmp
xor
cmp
ja
mov
cs
int
add
or
or
lcall
add
ljmp
stos
cmc
mov
out
mov
dec
mov
sahf
mov
cmc
jo
push
push
cwtl
cmp
xor
dec
and
pusha
cmc
ret
mov
sub
push
loope
add
or
cmp
push
int3
cmp
insb
xchg
push
add
pop
bound
movsb
cmc
rcll
nop
xchg
sti
adc
adc
jmp
inc
repnz
divb
idivb
and
js
and
sub
fisttpll
cmp
cmp
cmp
rcll
push
leave
dec
test
movsb
mulb
pop
mov
lods
test
mov
test
mov
pop
in
sbb
mov
sbb
mov
jo
movsb
and
pushf
fcomp
inc
cmp
arpl
test
adc
shll
adc
xor
push
or
dec
or
pop
xchg
xchg
or
out
sbb
mov
xor
test
sub
pop
add
jb
inc
or
xor
push
xchg
sbb
aaa
push
fdivl
addb
add
push
je
das
add
js
ss
sti
cmp
rcl
ss
pop
add
shl
fcomps
xor
sbb
sub
and
jl
stos
cmp
xadd
add
cmp
dec
inc
fwait
xor
jne
outsb
sub
and
ss
push
or
sahf
sbb
push
mov
rolb
ds
dec
call
ljmp
mov
add
mov
dec
fcoms
ds
pop
sub
test
sbb
sbb
divb
mov
je
cmc
sub
add
jmp
add
push
add
in
in
and
clc
and
sbb
mov
out
push
push
or
ljmp
or
mov
pop
cmp
test
add
hlt
adc
xor
pop
sbb
adc
and
popa
or
add
lea
stos
or
rcrb
mov
pop
xchg
mov
ret
insl
mov
push
sbb
enter
dec
inc
push
and
xchg
push
jns
push
lea
sbb
test
mov
add
mov
mov
xchg
hlt
and
jo
push
andb
add
push
movsb
push
pop
jae
fs
cmpsl
push
add
xchg
lret
sbb
jge
lods
adc
xchg
lahf
inc
insb
div
cmp
ja
jecxz
sbb
movb
out
mov
aam
mov
in
push
cmp
insl
and
adc
arpl
mov
shl
or
int
dec
and
dec
hlt
pop
out
ret
jmp
out
int
sbb
loope
add
mov
fldl
add
mov
push
std
dec
push
pop
aad
addr16
nop
mov
loop
pop
push
cmp
sub
adc
stos
cmp
adc
jg
push
popa
sbb
or
test
sub
mov
arpl
fwait
push
sbb
scas
movsb
fs
xor
dec
je
orb
pop
mov
mov
jmp
divl
shr
push
orb
xchg
dec
push
xchg
or
sbb
pop
add
lcall
mov
xor
or
jno
in
loope
adc
out
jne
mov
inc
or
push
xchg
cmp
push
loopne
in
push
xor
add
ljmp
inc
hlt
insb
xor
aam
mov
test
jp
icebp
xchg
xor
enter
adc
push
rclb
pusha
orl
sbb
mov
enter
or
push
ds
es
push
in
xor
xchg
ret
and
insb
jo
int3
sbb
sahf
push
pop
xchg
cmp
daa
push
mov
arpl
or
adc
xor
je
nop
test
out
shlb
xchg
push
push
push
mov
cmovns
sub
sub
dec
addl
add
add
mov
outsb
adc
mov
mov
adc
adc
aaa
lret
leavew
loopne
stc
movsb
adc
push
outsl
stc
sub
xchg
adc
jl
shlb
lcall
stos
push
popa
push
xchg
xchg
pop
add
adc
xchg
cmp
pusha
and
push
mov
divb
ja
aaa
xchg
add
dec
stos
outsb
clc
jge
push
cmpsl
sub
cmpsb
shrb
cmp
mov
push
cltd
popf
sbb
sub
les
test
leave
adc
in
push
and
adc
sbb
ljmp
add
and
sub
rcl
push
pop
mov
in
pusha
stos
xlat
insb
paddusb
shr
inc
and
jne
scas
jnp
shl
and
push
sti
rcll
cwtl
nop
mov
inc
xor
mov
sbb
or
punpckhdq
push
and
add
insl
push
int
dec
xor
movsb
fsubrl
add
push
pop
fxtract
stc
stos
mov
and
mov
mov
testl
push
sbb
test
mov
jle
cmp
jle
sbb
pop
jge
movl
sub
ret
sub
inc
push
jae
sbb
enter
mov
xor
int3
jno
push
push
jne
mov
mov
sti
andb
cmp
mov
pop
fidivl
sbb
cmp
or
icebp
and
xchg
xchg
les
sahf
xchg
mov
test
aas
and
add
je
call
jne
push
pop
jae
jno
mov
pop
orb
sub
mov
adc
sbbl
decb
clc
mov
out
sub
push
jbe
cmpsl
outsb
loope
lods
ret
xor
aad
rol
xchg
xor
jo
inc
testl
clc
in
mov
jmp
adc
pusha
fmul
leave
mull
sbb
or
enter
or
cmp
fmul
enter
inc
mov
mov
movsb
es
int
fucomp
cmp
je
jl
insb
lahf
jnp
cmp
xor
pop
sub
cmp
insb
iret
repnz
sbb
mov
insb
iret
cld
or
insb
pop
mov
jle
movl
adc
sbb
loopne
jmp
or
outsb
scas
adc
call
or
fadd
mov
cli
inc
in
hlt
sahf
jl
inc
pushf
add
or
or
cmp
loopne
sbb
sub
repz
bnd
inc
add
push
add
in
out
mov
out
dec
out
pushf
sbb
loopne
out
xor
out
arpl
lods
in
in
fs
add
xorb
and
iret
repnz
and
sbb
adc
pop
jmp
sub
fstl
push
fwait
ja
add
add
enter
les
leave
hlt
in
fs
addr16
out
dec
or
mov
or
ret
jmp
fs
mov
nop
xchg
out
adc
or
lock
sub
push
sbb
and
out
cld
andl
xchg
push
pop
jmp
scas
xor
add
mov
dec
or
cwtl
nop
test
inc
dec
inc
xchg
mov
iret
and
out
add
pop
stc
fsubp
sub
push
repnz
xchg
out
in
daa
inc
add
call
fsubl
cmp
in
add
es
fs
sbb
gs
cld
add
mov
mov
out
add
in
in
sub
cmp
fs
mov
js
xor
out
sbb
add
jns
test
lret
mull
mov
mov
lret
cmp
jo
sub
cmp
icebp
dec
nop
mov
or
loopne
data16
sub
outsb
out
add
enter
movsl
mov
leave
fmul
sbb
cmp
enter
in
hlt
aam
xchg
xchg
out
push
mov
fmul
enter
es
sub
push
fs
sub
inc
inc
cmp
in
fs
jl
or
fs
fs
pop
es
fs
pop
jne
in
pop
mov
sarb
mov
xor
sub
xor
aam
and
in
mov
cmp
fdivr
call
jl
pushf
mov
mov
sahf
adc
in
add
pop
out
add
in
enter
aam
mov
out
out
fdivrl
call
movsl
addb
inc
cltd
inc
lea
ds
inc
subl
repnz
shlb
imul
sbb
push
mov
pushf
shrb
and
push
xor
push
out
insb
inc
mov
and
sahf
jl
fxtract
push
hlt
add
sbb
xchg
iret
xchg
xchg
movsb
out
pop
adc
xchg
cmpsl
inc
sahf
pop
or
xchg
mov
je
adc
fsub
in
leave
enter
pop
mov
repz
outsl
mov
xor
cmp
xor
jb
inc
mov
out
pop
fstps
ljmp
icebp
je
sbb
jno
ror
lock
movsl
sub
rep
cmc
nop
or
push
pop
lock
je
xchg
add
jae
or
sbb
adc
and
lock
out
xor
xchg
insb
ss
sub
in
or
and
dec
or
jns
or
or
jle
mov
rcrb
js
or
or
leave
pop
nop
adc
test
push
xor
cwtl
inc
push
mov
out
jl
dec
ja
shl
fs
xchg
cmpl
adc
xchg
xchg
pop
or
sbb
imul
imul
push
push
idivb
dec
inc
inc
lods
enter
sub
cmp
dec
pop
dec
repz
out
out
dec
jl
repz
pusha
push
push
cmpl
or
enter
test
test
lret
ret
loopne
test
and
data16
push
insb
imul
inc
dec
js
or
fdivl
mov
pop
pop
sbb
dec
lcall
or
shll
cmp
enter
jns
or
icebp
les
stc
push
or
pop
jl
push
stc
jp
out
cmp
out
in
into
out
fs
sahf
sbb
int
push
pop
or
or
jnp
jns
cwtl
jo
xor
popf
add
pushf
sub
mov
add
lcall
andl
out
test
fs
mov
adc
lahf
fnstenv
or
or
jb
and
adc
pop
xor
push
sbb
xchg
or
xchg
and
xchg
inc
xchg
nop
mov
sbb
sub
cmp
push
inc
inc
inc
mov
mov
push
in
mov
cmp
sbb
mov
push
insb
lock
out
and
and
pop
pop
adc
add
mov
mov
idivb
push
icebp
dec
xor
nop
sti
hlt
mov
repnz
stos
sbb
rdtsc
data16
and
das
cmpsb
lods
xor
adc
mov
loopne
push
push
mov
mov
movswl
pusha
shll
pop
or
sbb
inc
aam
lds
add
lahf
dec
scas
lods
sbb
jne
xor
or
push
and
loopne
add
mov
mov
sbb
push
add
jnp
xchg
jne
les
adc
push
pop
push
push
fs
mov
decl
inc
mov
mov
inc
inc
cmp
jl
push
and
addb
cmpsl
sbb
cmpsb
jnp
loopne
cld
pop
jl
in
frstor
push
pop
js
out
test
and
add
test
lods
in
imul
inc
dec
and
sub
mov
and
jns
add
lock
sbb
rol
cwtl
xchg
in
adc
inc
andl
lods
or
adc
loope
hlt
cmp
lea
jl
out
in
outsb
and
mov
dec
add
pop
xor
mov
cmpl
adc
adc
nop
bound
dec
cmp
inc
js
adc
mov
das
inc
xchg
mov
jbe
push
push
push
popa
mov
mov
push
inc
mov
xorl
xchg
mov
xor
shr
push
mov
add
mov
enter
mov
clc
mov
dec
pop
mov
push
push
pop
roll
jno
outsb
movsbl
push
mov
or
ds
add
clc
out
bound
scas
jl
das
mov
shlb
or
leave
test
xchg
push
fistl
pop
sbb
cmp
fstps
cmpsb
jo
sub
adc
enter
xchg
out
mov
in
sub
pop
xchg
cmp
insb
cmpsl
xchg
add
mov
clc
fisubrs
sub
fmull
inc
je
mov
ja
sarl
mov
fs
mov
nop
mov
fldt
loopne
nop
cld
pop
inc
test
or
adc
xchg
cmc
subl
adc
mov
or
add
jb
loopne
pushf
or
popf
push
nop
in
jnp
xchg
aas
inc
es
jnp
lahf
in
xchg
push
mov
jecxz
and
jb
push
cmp
in
inc
lods
notl
test
stc
pop
flds
adc
ret
cmovb
adc
push
and
into
push
jmp
mov
mov
sbb
cmp
xchg
lods
or
and
add
test
clc
lcall
push
fldenv
adc
and
movsl
adc
adc
in
pusha
add
cmp
sub
call
xchg
test
insb
push
pop
add
enter
mov
icebp
dec
inc
daa
sarb
adc
jo
cmp
add
adc
cmp
xor
cmp
push
lahf
push
adc
xor
lods
mov
imul
jmp
rolb
test
inc
xchg
and
mov
add
jmp
lahf
mov
push
lds
mov
cmp
je
add
je
mov
adc
enter
rclb
sub
mov
cmpb
jne
cmpb
aaa
jle
fisttpl
push
cmp
ss
pop
sub
add
cmp
jl
pop
jg
sbb
outsl
lret
push
pusha
or
cmp
or
adc
aas
inc
rep
lea
jl
aas
mov
adc
dec
pop
inc
mov
mov
inc
sub
dec
mov
in
lret
pop
cmp
mov
add
jle
cmp
pop
jl
cmp
jg
add
mov
ret
or
adc
out
or
aam
fistpl
out
add
outsb
call
pushf
jle
lret
sub
push
or
push
xchg
pop
add
sub
lahf
pop
mov
mov
mov
sub
xor
mov
add
faddl
sub
lea
dec
rorb
pushl
push
clc
dec
xor
shll
dec
jmp
lret
ljmp
sub
data16
sbb
mov
mov
leave
sub
addr16
test
mov
mov
cmp
jg
add
jne
inc
add
jnp
mov
jb
sbb
je
and
cmp
cmc
shrl
push
push
inc
push
mov
test
les
inc
jne
mov
sub
mov
je
test
mov
add
je
insb
outsb
mov
sbb
out
je
jge
movsl
sbb
loope
adc
add
out
mov
incl
inc
sub
loopne
mov
sub
bound
mov
push
out
lcall
push
push
leave
gs
xchg
or
dec
pop
pop
push
into
insl
push
icebp
sbb
in
in
into
je
add
js
add
test
cld
fidivs
sub
push
sub
inc
das
push
rcrb
pushf
loop
xor
dec
inc
clc
xlat
int
sub
int3
subb
sbb
or
add
push
xor
jae
repnz
push
dec
add
add
adc
lods
stos
inc
mov
push
inc
lock
sub
rcr
ret
fsubrl
jnp
xchg
mov
hlt
sub
ds
adc
jbe
daa
adcb
and
mov
dec
nop
cmp
dec
push
sahf
and
lahf
fs
push
pop
rcll
je
repz
aam
xchg
cmp
fldenv
dec
in
mov
jbe
test
inc
push
adc
lahf
push
adc
dec
test
push
inc
cmp
test
sbb
xchg
insb
mov
mov
push
dec
in
test
lods
push
outsl
sub
or
dec
repz
je
inc
aam
stos
mov
push
mov
stos
or
sub
dec
pop
notb
adc
pop
sarb
scas
sbb
insl
sbb
sub
rolb
pop
fsubrl
inc
aam
mov
pop
daa
inc
stos
mov
jl
push
xchg
xor
pop
hlt
fwait
fwait
jmp
add
push
fcomps
mov
imul
lock
cli
dec
pop
jne
push
pop
enter
xchg
pop
call
cmp
add
xchg
xor
pop
or
loopne
push
mov
mov
loopnew
sbb
loope
or
pusha
dec
call
cmpsb
push
add
sbb
cwtl
or
cmc
and
subb
lret
loop
sbb
dec
cwtl
dec
jbe
rorl
pop
cmpsl
jl
shr
lds
cmp
sbb
xlat
cmp
inc
in
movb
push
jne
mov
data16
loope
imul
mov
push
es
mov
adc
aaa
lock
in
dec
xchg
fcmovnbe
cld
mov
xlat
push
ss
and
rclb
leave
pop
sbb
rorb
pusha
daa
add
pop
sti
mov
cmp
or
mov
mov
lret
xlat
in
xor
dec
sbb
loopne
or
iret
js
xchg
scas
nop
lret
mov
shlb
ljmp
pop
insl
lahf
xor
pop
or
cld
sbb
shrb
sti
inc
pop
outsl
add
mov
cmp
or
sub
xorb
mov
shl
pop
mov
sbb
jo
addl
pop
xlat
inc
data16
icebp
ror
or
hlt
jnp
movsl
jmp
sub
mov
ds
mov
cmp
sbb
or
or
jl
add
mov
push
outsb
sub
push
push
jne
mov
fsubr
jne
incl
sbb
rcll
sbbb
cmp
add
and
cs
add
fstpt
push
push
jg
fwait
int
in
xor
sub
pop
mov
xchg
fisttps
inc
adc
cmp
push
pop
sub
and
loopne
dec
pop
scas
ja
xchg
sti
adc
je
enter
mov
dec
dec
je
add
or
adc
insl
xchg
lock
addl
sbb
nop
sbb
sbb
insl
enter
push
addl
outsb
sbb
adc
pushf
and
aaa
out
push
test
jge
fadds
jbe
mov
outsl
push
fwait
sbb
pop
mov
insl
je
lea
incl
movzbl
and
jno
push
mov
sbb
ss
sub
outsb
fdivr
and
sbb
push
sbb
sub
add
test
push
std
adc
movsb
adc
jne
xchg
mov
and
aaa
dec
shll
xor
pop
add
add
add
mov
add
adc
test
inc
cmc
jmp
inc
mov
add
adc
test
adcl
ret
xchg
adc
adc
push
loop
mov
imul
stos
cmpsl
loopne
mov
or
xchg
in
dec
je
add
das
and
adcb
push
push
sbb
jb
xor
sub
sbb
adc
push
fs
mov
clc
in
mov
or
lods
mulb
push
nop
pop
add
je
inc
test
mov
jl
sti
adc
mov
or
mov
push
push
ja
cmc
fbld
int
dec
or
test
inc
xchg
pop
jno
insl
cmovs
jae
mov
xchg
push
mov
dec
aaa
cmp
jne
push
pop
fisttpl
mov
in
jl
xchg
fcoml
dec
or
jmp
pusha
or
fs
xor
bound
pop
sbb
push
daa
lods
dec
adc
fidivrl
inc
mov
mov
mov
adc
xlat
testb
inc
in
sbb
jne
orb
scas
inc
sbbb
in
xlat
xchg
decb
imul
cmp
mov
cltd
iret
push
andb
add
imul
out
jo
pop
push
adc
pop
jg
lock
gs
orl
add
mov
in
jp
or
test
sub
cmp
insb
nop
insb
iret
test
insl
fcmovne
cmp
dec
rcll
inc
jnp
push
and
add
lods
pusha
dec
clc
lea
mov
ret
andl
cmp
or
popf
scas
loop
and
and
rcll
or
mov
inc
inc
rol
push
xor
popf
ss
call
push
test
push
jp
fs
xor
pop
scas
cmp
xor
cmp
sbb
mov
mov
insl
lret
pop
mov
jb
lea
in
sub
jbe
xorl
mov
add
sbb
xchg
mov
add
cmp
push
pop
in
mov
sbb
lods
jmp
rcl
stc
outsb
xor
mov
xchg
mov
mov
xchg
adc
cmp
mov
loop
je
jle
cmp
dec
adc
sub
dec
lods
jmp
and
pop
cs
ret
inc
sbb
movsl
adc
adc
aam
add
popa
and
jmp
mov
inc
push
xchg
dec
xchg
sub
pop
xchg
adc
in
inc
out
mov
icebp
sbb
adc
mov
cmpb
ss
or
daa
in
ret
mov
sub
pop
push
push
loop
test
mov
fstpt
adc
cwtl
push
iret
pop
add
push
sub
xor
pop
push
xor
stos
arpl
popa
test
mov
pop
inc
clc
adc
and
inc
lods
inc
popa
stos
push
xor
jp
sub
fldl
cmp
jo
xor
daa
subl
mov
xchg
inc
enter
jl
or
mov
aas
out
pop
push
or
mov
clc
pop
push
pop
cmp
out
mov
adc
xchg
sbbl
lret
and
xchg
xor
inc
scas
xchg
inc
dec
sbb
sub
xchg
and
scas
xchg
inc
pushf
sub
xor
xchg
cmp
xchg
inc
in
leave
inc
xchg
push
enter
sub
push
mov
sub
sub
pop
xchg
dec
add
js
popa
adc
push
push
adc
hlt
and
add
xor
xor
in
adc
aaa
add
pop
out
push
bound
test
add
call
rorb
xchg
push
addr16
addr16
je
cmp
gs
enter
lea
jnp
mov
add
pop
jbe
loop
xor
add
adc
dec
mov
push
mov
add
jl
leave
pusha
outsl
jg
jmp
jl
mov
sbb
je
or
loopne
xor
jmp
pop
add
pop
fs
push
add
inc
lret
xchg
in
or
pop
or
xchg
clc
jnp
pop
je
jbe
mov
or
arpl
xor
clc
push
adc
sub
mov
leave
es
push
adc
xchg
in
adc
jl
mov
shl
sub
cli
or
sub
and
aad
pop
jle
popa
ja
xor
mov
mull
xor
lods
or
inc
adc
mov
push
jne
iret
and
dec
push
je
sti
jle
ds
sub
test
and
mov
enter
add
nop
and
cmp
and
in
mov
cwtl
xchg
add
imul
adc
push
mov
outsb
dec
scas
xor
jmp
orb
int
pop
shrb
aad
popa
add
ja
in
ljmp
push
or
jge
push
push
cld
in
xchg
pusha
add
adc
enter
les
push
leave
mov
jb
jno
lea
push
xchg
mov
insl
arpl
ja
add
inc
rclb
push
jae
xchg
cld
out
std
fistl
cmp
lock
xchg
iret
fwait
push
in
and
mov
sub
aad
push
sbb
js
push
pushf
push
cltd
rcrl
sbb
add
popa
leave
mov
adc
and
dec
push
and
add
rorb
pop
addr16
push
lret
pop
xor
ds
and
lahf
cltd
or
ret
xor
jg
lea
sub
mov
push
pop
mov
pushl
nop
add
add
dec
cmpsb
into
xchg
adc
lea
push
xlat
push
xor
pop
mov
div
ficoms
jl
inc
sub
mov
icebp
xor
outsl
jge
stos
ljmp
or
push
sbb
fcomps
rolb
and
or
and
mov
add
les
pop
test
mov
mov
inc
inc
dec
and
inc
hlt
sahf
enter
les
cmp
xor
adc
sti
mov
pop
add
popf
sbb
cmpl
dec
cmc
pop
xor
aam
lods
stos
int
decl
shl
movsl
in
pushw
push
mov
ret
push
and
push
cmp
push
xor
adc
repnz
add
xchg
inc
and
lock
aad
in
sub
pop
and
int3
daa
mov
push
adc
mov
test
dec
push
push
and
xchg
push
inc
xor
pusha
rcll
dec
push
push
or
orw
xchg
dec
iret
in
in
xor
dec
xchg
in
addl
cmp
pop
in
adcb
sbb
fildl
je
cmp
call
sub
sbb
mov
push
fs
push
nop
xor
fsubrl
aad
pop
pop
adc
xchg
adc
mov
sub
adc
or
add
test
push
aad
xchg
jl
xor
sub
sbb
inc
add
cmp
adcl
mov
push
or
pop
add
sbb
jns
imul
push
or
outsl
test
add
push
inc
loopne
loop
adc
push
test
loope
lea
jb
push
sub
xchg
sbb
sbb
push
mov
cmp
or
cmp
ficoms
and
rorb
aam
pop
in
xor
es
sbb
pop
add
lds
ret
xchg
or
add
test
je
call
xor
pop
push
xor
sbb
sub
or
pop
cmp
sti
mov
popf
sbb
xor
shll
outsb
pop
enter
add
jne
mov
lock
cmp
mov
fcmovnu
inc
jns
imul
mov
fildl
inc
dec
cwtl
xor
js
or
add
and
loope
push
cmp
jmp
cmp
jbe
lea
gs
inc
test
cmp
dec
shlb
adc
addps
inc
mov
lea
pushf
mov
pop
adc
movzbl
push
mov
sbb
lock
or
addr16
mov
dec
mov
fbld
into
push
shr
mov
neg
lea
push
idivb
cmp
movl
jmp
adc
test
pop
je
dec
or
add
dec
and
outsl
jmp
rol
push
shl
mov
sbb
push
or
sbbb
enterw
or
dec
negl
or
add
jp
mov
push
stc
into
pop
push
clc
add
and
add
sahf
dec
mov
mov
or
dec
insb
loope
fisubrl
mov
sbb
pop
ss
xchg
cltd
fldl
add
pop
fsubrl
dec
add
orb
xchg
pop
fcoms
mov
xor
sar
call
shlb
pop
add
jmp
push
pop
adc
call
pop
sti
jae
insb
inc
les
add
jge
jge
mov
mov
inc
push
pop
sarb
enter
add
fstl
loopne
inc
dec
mov
fs
ficompl
mov
xor
cwtl
push
es
adcb
xchg
pop
cltd
inc
int3
pop
mov
negl
adc
pop
jno
adc
adc
xor
and
jne
mov
stos
andb
shrb
mov
shrb
push
mov
cmpsl
pop
pop
jae
mov
xor
xor
pushl
pop
inc
fildl
sbb
arpl
sbb
mov
mov
sbb
xor
insl
inc
fsubs
shlb
lret
jge
jle
or
sbbb
mov
loopne
ret
xor
xor
dec
shrb
test
lock
push
pop
add
add
sub
xchg
push
inc
push
or
out
xchg
mov
jne
stos
cmpsb
nop
or
aaa
mov
int
inc
or
lcall
sub
call
sub
mov
out
push
addl
mov
cltd
xchg
add
jp
add
loopne
push
push
insl
lea
lds
lods
adc
mov
jns
inc
cmc
add
andl
out
loopne
or
mov
mov
mov
add
or
int3
jae
jb
out
add
xchg
daa
push
push
jae
mov
ss
cmp
sub
xchg
insb
in
lahf
aad
or
pusha
pop
icebp
mov
jecxz
arpl
or
aad
fisubs
vxorps
insb
adc
clc
mov
scas
and
push
popf
adc
or
ret
push
js
sahf
out
add
pop
or
xchg
and
pop
dec
daa
mov
out
pop
push
lret
inc
adc
roll
aas
lcall
sbb
push
faddl
or
mov
in
ss
mov
inc
ret
jmp
rclb
sbb
xchg
mov
inc
push
pop
call
cwtl
es
add
adc
add
andb
mov
clc
pop
xchg
fs
insb
push
insb
pop
dec
and
je
dec
pushf
or
mov
xor
add
insb
add
test
and
in
xor
jo
or
and
icebp
push
adc
push
bound
sub
and
aad
cwtl
js
cmp
insb
les
xor
stos
add
add
xor
fadds
xlat
pop
in
into
push
in
mov
rorb
rolb
cld
test
sub
or
xchg
cmp
repz
jecxz
stos
lock
stc
hlt
loope
pusha
mov
push
jge
add
add
xlat
mov
push
cmp
mov
and
or
inc
test
and
pop
loopne
out
adc
or
add
push
jbe
data16
test
sbb
xchg
pop
and
stc
dec
adc
mov
push
xor
push
add
xor
add
shl
shll
orl
jge
cmp
push
add
mov
in
adc
clc
jb
mov
adc
xchg
xor
sbb
pop
enter
sbb
mov
xor
adc
or
or
sbb
push
enter
pop
or
andb
imul
fldpi
adc
jnp
or
pop
imul
cmpsl
pusha
ja
push
cwtl
pop
push
push
insb
mov
cmp
jl
or
lds
andl
adc
pusha
pop
stos
mov
or
push
lds
scas
insl
dec
sbb
sub
and
dec
js
adc
andl
add
adc
xor
in
addr16
push
bound
add
mov
sub
outsb
inc
or
mov
sbbb
pop
or
xor
sub
lods
daa
sbb
inc
pop
adc
xor
or
push
xor
sbb
test
adc
push
adc
mov
test
or
add
or
and
sub
dec
shlb
pop
lock
pop
ror
loopne
push
imul
cmp
arpl
rorl
or
je
orl
add
push
iret
js
out
add
mov
push
mov
sbb
jae
jbe
sbbl
mov
les
or
push
pop
jmp
add
int
jmp
lock
sub
clc
sub
loop
jo
add
add
lock
push
test
push
add
stos
stos
scas
push
jl
test
mov
je
mov
mov
lods
mov
cmp
mov
in
mov
out
push
dec
arpl
dec
push
xchg
dec
push
mov
xor
sub
dec
adc
cmpl
movsl
sbb
gs
add
aas
or
pop
xor
pusha
adc
xchg
add
les
or
push
adc
sub
repnz
pop
or
mov
push
lcall
mov
inc
test
jl
xor
test
push
add
popa
add
sub
js
xchg
mov
inc
aad
out
sbb
in
es
mov
xchg
adc
rorl
movsb
pop
mov
stos
arpl
or
xor
das
adc
xor
call
pop
adc
jns
pushf
mov
add
jnp
sbb
add
jo
mov
fcomp
cwtl
or
je
bound
int3
mov
add
xchg
out
push
sub
push
mov
sub
loopne
or
repz
push
scas
lock
adc
jnp
push
inc
or
adc
push
push
xchg
fisttpll
inc
sbb
xor
push
fwait
ss
inc
mov
bound
push
das
shrb
or
fimuls
pop
lods
add
jo
repz
test
and
int3
dec
cmp
add
jae
imul
push
add
dec
push
insl
and
or
insb
pop
push
push
cli
dec
addb
push
and
sub
jmp
mov
pusha
add
mov
and
sub
xchg
sbb
insb
jl
mov
lcall
in
addr16
or
mov
xchg
loope
xchg
int3
jl
push
and
jns
dec
inc
mov
inc
popf
dec
or
xor
sub
sbb
or
aaa
dec
push
lock
in
nop
mov
add
loope
punpckhbw
das
xchg
lods
sub
and
xchg
daa
out
pusha
xor
xor
cmc
test
mov
pop
pop
sub
sbb
mov
pop
lea
xchg
mov
add
popf
sub
rcrl
jl
dec
call
dec
pop
jno
add
cmpb
ret
cmp
cltd
movsbl
mov
movb
push
xchg
mov
add
dec
sub
cmp
jge
cmp
dec
add
outsl
sbb
cli
cmpb
je
mov
xlat
pop
cmc
rolb
pop
loop
imul
push
inc
lods
push
inc
fcmovnu
leave
inc
inc
in
cmp
jg
inc
fs
or
ret
rolb
mov
dec
add
lods
and
subl
aas
push
nop
or
lret
cmp
clc
sahf
mov
and
int3
push
mov
mov
mov
mov
add
lea
adc
cmp
shrb
push
pop
leave
xor
ja
and
mov
mov
ss
jge
mov
inc
jno
or
std
sbb
testl
sub
xchg
loopne
ret
fists
sub
cmp
loopne
xchg
sbb
test
mov
cs
pop
out
stos
sub
fdivrs
mov
int3
xchg
mov
insb
andl
out
loopne
mov
dec
loope
dec
sub
sub
stos
inc
bound
adc
mov
addb
adc
iret
mov
out
fsubr
and
inc
add
out
inc
out
or
dec
cmp
push
jnp
mov
and
gs
add
push
xor
or
pop
inc
lock
fdivrl
mov
jne
iret
add
cmc
sub
dec
cwtl
sub
push
push
cld
inc
mov
mov
xor
xor
or
pop
je
popf
push
aas
mov
inc
add
sub
scas
add
scas
addr16
add
sub
pusha
xchg
or
jae
or
or
rol
out
sbb
push
mov
add
sub
mov
movsb
inc
pop
ss
mov
pop
push
xor
or
and
adc
scas
adc
jns
add
lea
pusha
mov
add
and
in
cltd
sbb
daa
pop
sub
lea
jo
test
inc
and
mov
pop
add
leave
ret
jp
xor
inc
fs
rcr
mov
daa
sub
fprem
mov
les
adc
enter
jg
insl
and
mov
mov
iret
jnp
mov
push
vmulss
push
pmulhw
push
pusha
stos
mov
pop
add
bound
lods
adc
mov
push
or
out
sbb
and
xor
pop
clc
dec
and
mov
pop
lods
stc
cmp
add
js
clc
movsb
sub
mov
or
lock
adc
adc
imul
and
pushf
sbb
jno
sub
imul
ss
add
addr16
mov
xor
pop
outsl
lea
jp
push
adc
mov
or
mov
xor
and
cs
pop
sahf
loop
sub
sub
adc
sti
mov
and
xor
push
fwait
int3
adc
inc
mov
fildl
pop
inc
mov
mov
sub
sub
hlt
sbb
aad
shll
pop
mov
or
mov
fsubs
mov
xor
scas
mov
jo
lods
inc
adc
mov
mov
push
push
xchg
pop
xor
mov
pop
xchg
sub
dec
cs
nop
sbb
outsb
add
pop
sub
data16
push
mov
sti
add
fsubl
ficoms
fisttpll
push
and
jb
xchg
jno
arpl
xor
mov
add
sub
push
adc
sbb
fwait
sbb
orb
xor
lock
nop
pushl
outsb
fwait
stos
fisubs
add
add
and
xorb
xor
push
cmc
test
push
dec
nop
xor
in
sti
push
jne
out
int3
and
fnstsw
jne
enter
adc
jmp
and
mov
or
int3
call
rcrl
sub
adc
std
sarl
cmp
mov
in
mov
idivl
fucomi
out
mov
or
mov
push
or
mov
stc
push
call
inc
xor
add
jl
sbb
sub
push
push
mov
add
inc
mov
cmc
cmp
jmp
insl
xchg
rolb
sbb
jo
hlt
nop
inc
mov
ds
inc
add
xchg
xor
push
stos
fnstenv
sbb
in
xchg
adc
or
jecxz
push
js
push
insl
adc
cmp
mov
mov
fmul
lcall
adc
inc
mov
jg
leave
sub
and
pmulhuw
sub
rorb
and
pop
imulb
in
add
xor
dec
iret
out
outsl
insl
and
jne
popa
out
popa
pop
or
adc
push
stos
and
push
ret
sbb
add
and
sbb
sbb
mov
divb
jl
or
jle
push
daa
sbb
pop
mov
pusha
aas
and
adc
pushf
jmp
int3
jle
push
cwtl
pusha
add
mov
and
in
or
sti
aad
int
rolb
sbb
dec
xor
jmp
mov
xor
mov
clc
loopne
inc
subb
adc
aaa
int3
mov
aaa
insb
and
add
sbb
mov
or
add
mov
mov
pop
xchg
call
dec
nop
mov
stc
xor
mov
sbb
repnz
je
sbb
push
or
sbb
and
repnz
and
cs
out
dec
xor
lods
pop
enter
dec
mov
sbb
push
mov
push
mov
adc
lcall
pop
push
in
scas
inc
andps
insb
aas
xor
add
insl
repz
jmp
and
fs
pusha
push
cltd
out
sbb
test
sub
punpckhbw
mov
xchg
out
in
or
in
leave
out
in
push
push
jl
cmp
cmp
bnd
pop
xor
cmp
negb
mov
pop
adc
and
pop
mov
pop
xor
xchg
cmp
push
push
xchg
jl
pop
subl
call
pop
push
negb
adc
xor
and
insl
and
and
pop
pop
pop
and
and
xor
inc
cs
scas
inc
mov
in
inc
enter
inc
inc
hlt
out
clc
cmp
mov
cmp
inc
fmull
fstps
cmp
add
mov
push
xchg
test
or
cmp
enter
jns
adc
test
jns
enter
adc
xchg
or
xor
or
mov
mov
sbb
repnz
mov
and
mov
inc
cs
gs
and
xor
cmp
pop
cs
and
pusha
arpl
inc
js
test
inc
inc
cs
out
cmp
xchg
fstps
pop
mov
or
push
add
insb
sub
pop
pop
rcrl
push
movsb
xor
jg
clc
sub
adc
lea
mov
cmp
aas
push
dec
popa
sub
and
push
cmc
sbb
jnp
cmp
mov
mov
add
fbstp
cmp
and
push
adc
lods
inc
cs
loop
mov
xor
and
and
pop
sbb
in
mov
in
adc
pop
enter
ss
inc
cmp
mov
mov
adc
add
pop
sbb
mov
and
fmul
add
je
adcb
dec
enter
mov
addb
jo
and
pop
nop
jmp
fsubl
and
in
in
test
inc
aam
sbb
nop
inc
cs
inc
push
pop
jbe
cs
or
mov
pushf
mov
xor
push
inc
sbbl
xor
or
jns
fnstenv
jl
cs
ret
inc
push
mov
nop
or
in
int3
daa
nop
xchg
adc
inc
jmp
sbb
inc
push
mov
nop
or
dec
push
test
and
das
lret
das
mov
cmp
test
inc
add
das
fs
or
push
or
and
pop
movb
sub
nop
inc
in
in
test
inc
outsb
add
inc
cs
jns
or
inc
push
mov
and
jb
stc
sub
test
in
nop
or
jns
sub
int
push
pop
jo
dec
icebp
mov
and
sub
dec
sbb
test
sbb
dec
pusha
sbb
jbe
cwtl
lahf
pop
nop
pop
lds
fldl
cwtl
test
push
mov
fildl
fdivl
jle
or
insb
iret
adc
fwait
add
fstps
fcomps
je
adc
xor
and
cmp
sbb
nop
adc
test
daa
dec
pusha
lds
das
es
bound
jmp
test
int
lcall
aaa
adc
cwtl
pop
or
test
ja
mov
cmp
das
mov
xor
push
mov
and
mov
mov
rdmsr
sbb
mov
cmp
adc
adc
test
pusha
and
insb
dec
sahf
push
fs
clc
mov
cmp
jl
mov
dec
jp
add
out
inc
insl
jne
cmp
fs
enter
dec
in
stos
lcall
push
or
and
mov
pop
adc
adc
imul
and
leave
scas
fstpt
mov
dec
xchg
mov
sbb
enter
cmpsl
push
nop
dec
enter
or
adc
repnz
add
jmp
and
push
jns
adc
fdivs
enter
insb
push
js
enter
add
cli
ja
cmp
push
push
adc
and
jmp
shlb
sbb
sbb
sbb
enter
xchg
adc
mov
mov
dec
mov
sbb
dec
xchg
dec
xchg
jnp
sbb
js
addr16
jno
adc
es
mov
mov
mov
outsl
imul
inc
enter
push
mov
and
push
negb
sub
stc
or
adc
dec
jge
aam
or
imul
or
jge
jne
addb
mov
cwtl
dec
shlb
mov
mov
and
or
int3
cmpsl
and
jl
inc
aas
aas
out
decl
and
ss
sub
pop
enter
jl
or
in
pushf
and
movsb
push
int3
enter
xchg
pop
aam
fs
or
or
adc
mov
xor
test
xchg
pop
ficomps
inc
push
cwtl
aas
mov
sub
lds
jb
daa
aam
in
pop
xor
test
sbb
or
sbb
test
and
je
cs
ja
jl
test
lods
nop
or
enter
or
daa
das
fs
or
jns
push
mov
enter
sbb
and
sbbl
adc
pop
sbb
pop
js
popf
aam
or
pop
lock
inc
call
icebp
adc
in
cmp
push
aad
insb
mov
js
jb
inc
push
in
adc
daa
in
pop
xchg
push
push
cmp
or
and
pusha
and
test
aam
push
pushf
pushf
nop
daa
push
push
repz
test
enter
nop
xchg
or
fldlg2
pop
jb
inc
lods
or
xchg
cwtl
pop
test
cwtl
jl
je
test
adc
push
dec
enter
pop
insb
push
ret
in
dec
js
jl
fs
or
nop
daa
add
and
inc
push
mov
add
mov
fs
jne
lock
push
cld
mov
xchg
push
sub
sbb
pop
hlt
and
shlb
imul
pop
push
mov
stc
int
push
push
push
adc
inc
push
imull
dec
int
js
js
mov
push
adc
jae
int3
insb
xor
in
and
cwtl
adc
outsb
inc
mov
pop
daa
mov
mov
push
mov
sub
pusha
push
fwait
jne
out
inc
sbb
sub
add
dec
jo
mov
mov
or
fwait
cmp
pop
lea
push
or
cmp
hlt
test
sbb
test
inc
outsb
lret
into
add
pop
and
sbb
or
xchg
in
push
or
mov
jae
out
cmc
out
inc
push
hlt
orl
inc
pop
adc
mov
xchg
stos
pushf
or
sub
fnstcw
xor
push
pop
sbb
adc
push
test
push
cmp
or
push
andb
adc
push
push
out
aad
pop
stos
add
mov
mov
paddb
fs
pop
adc
push
add
mov
jnp
push
xor
pop
movsb
mov
sbb
mov
fld
ret
mov
add
push
push
mov
out
mov
fsubr
add
or
ss
xor
fadd
or
mov
int
enter
mov
rorb
cli
cmp
int
in
setae
mov
add
cmp
cmp
jne
shrb
rclb
adcb
xchg
je
call
adc
popf
and
hlt
test
mov
push
xor
adc
sbbl
repnz
out
pop
sub
test
inc
xchg
cld
or
add
adc
add
das
in
add
push
fsubrp
int3
xor
mov
std
jns
iret
in
cld
cld
push
dec
add
js
adc
xchg
sbb
inc
lock
inc
outsl
mov
jl
call
idivl
or
fdivrp
and
adc
test
in
xchg
adc
adc
mov
add
clc
cld
add
xor
cmp
sub
loopne
push
cmp
hlt
stos
adc
adc
into
andb
push
inc
xor
mov
outsb
xchg
mov
push
dec
push
hlt
cld
mov
insl
and
and
mov
jle
mov
push
adcb
pop
nop
inc
xor
push
pop
fldt
sub
pinsrw
mov
int3
xchg
add
pop
mov
fs
cmpsl
push
mov
xor
push
and
loopne
enter
andb
xchg
jae
jns
mov
sub
dec
lea
int
lods
daa
sbb
mov
cmp
or
or
mov
insl
repz
pop
lds
or
fcoms
stc
divb
cmp
inc
or
test
dec
mov
jmp
mov
enter
cmp
mov
lea
add
push
mov
adc
and
sub
mov
jnp
mov
pop
pop
or
cmp
mov
cmp
dec
pop
cmp
mov
push
in
push
sub
std
fs
push
inc
or
mov
mov
and
xchg
into
cmp
xchg
hlt
mov
bound
mov
inc
inc
nop
daa
mov
sti
pop
mov
jle
loope
shr
movb
shlb
sbb
jecxz
out
jg
mov
jl
int3
mov
movsl
or
fimuls
notw
shll
enter
cmpsb
sub
rcrb
scas
jp
xor
cmp
inc
rcrb
repnz
cld
popl
and
push
jmp
andl
movsb
sub
mov
xor
push
movsl
adc
xchg
fwait
push
cmp
rorb
xor
rolb
push
jecxz
mov
mov
pop
fcompl
nop
add
sbb
push
and
js
aas
and
push
mov
dec
inc
or
rolb
pop
cmp
pop
jp
cmpsl
mov
or
push
mov
pop
push
lods
add
xchg
ss
cmp
add
cmp
push
jnp
mov
inc
push
imul
mulb
cs
cmp
adc
lea
fidivrs
adc
jb
fadd
scas
addl
lods
loop
inc
push
jb
pop
sub
cmp
or
lret
movsl
and
pop
jns
sub
jp
jno
jl
push
and
adc
sub
in
sub
sbb
push
push
pop
and
enter
fcoml
sub
adc
fimull
add
testb
rolb
test
adc
sti
cld
andb
add
cld
dec
mov
dec
hlt
es
or
test
leave
mov
fcompl
inc
ss
mov
xor
mov
add
jns
sti
inc
sbb
fs
stc
sbb
inc
stc
sub
and
push
xchg
and
cmovge
and
dec
lcall
lahf
jecxz
cwtl
dec
or
push
sbb
pop
adc
leave
jb
xchg
mov
leave
cmpb
adc
mov
dec
sbb
adc
pop
add
cmp
adc
dec
adc
or
cwtl
push
nop
pop
std
popf
test
cs
mov
pop
push
std
push
mov
fiadds
aaa
cmp
mov
pop
movzbl
sbb
dec
xchg
cli
clc
arpl
sbb
rclb
inc
negl
adc
push
fcoml
in
lret
sub
inc
push
pop
xchg
add
cmp
add
mov
cmp
adc
out
lea
or
pop
ljmp
push
shll
lret
js
inc
rolb
pop
arpl
adc
mov
or
cmp
jb
pop
fadds
and
sbb
stc
push
and
shlb
clc
test
xchg
in
dec
push
or
clc
clc
xchg
cmp
repnz
clc
clc
mov
addr16
ret
push
or
test
loop
aam
sti
insb
push
sub
adc
je
cld
mov
cmp
and
push
mov
fisubrs
xchg
push
push
add
lock
xor
cld
push
cmp
push
enter
movsb
cmp
inc
mov
cs
inc
iret
out
fcmovnu
fimull
dec
loopne
push
or
pop
sub
pop
mov
inc
push
movsl
pop
leave
and
cmp
pop
and
mov
in
mov
pop
and
or
nop
loope
cli
adc
push
xor
adc
xor
cmp
sbbb
and
ljmp
pop
or
pusha
inc
xlat
or
pop
and
or
or
call
aas
jno
push
and
pop
sbb
inc
mov
sub
xchg
dec
lahf
pop
or
push
add
add
and
push
aad
add
mov
pop
mov
andl
push
addr16
nop
and
xchg
or
adc
pop
imul
cltd
push
adc
add
push
lods
lret
stc
outsb
popa
add
or
push
bound
push
sbb
push
xor
insb
push
icebp
cmpsl
add
fildll
fcomps
cmp
or
fstps
dec
and
push
or
inc
mov
adc
xor
add
ss
test
in
lods
inc
adc
pop
add
push
sub
sbb
inc
sub
adc
add
in
jae
sbb
movsb
push
sbb
lds
in
cmp
pop
nop
add
cmp
pop
leave
test
je
xchg
fisubl
andl
push
andb
adc
call
jae
incb
loop
pop
inc
nop
and
in
lcall
jecxz
sbb
push
icebp
xchg
push
je
lods
inc
xor
mov
add
or
push
mov
push
enter
sarb
adc
xor
mov
ret
xchg
dec
clc
dec
cmp
adc
sbb
cwtl
pop
cltd
test
pop
sbb
inc
dec
stc
sahf
fidivs
test
xor
cltd
xchg
addr16
insl
pop
enter
in
jmp
scas
movsb
add
and
ljmp
dec
mov
mov
enter
repz
dec
xor
push
mov
and
pushf
sbb
add
js
mov
enter
adcl
sbb
push
or
dec
loopne
enter
inc
push
dec
xchg
mov
add
and
movsb
or
adc
xchg
mov
or
cwtl
shl
dec
cmp
dec
xchg
xor
call
jecxz
jmp
mov
inc
and
into
mov
dec
addl
and
daa
cmpsl
push
cld
dec
sub
add
jnp
sbb
sbb
jb
daa
outsl
push
adcb
adc
cmp
adc
mov
or
scas
ljmp
xor
or
add
je
push
sahf
push
push
dec
fs
inc
or
popa
imul
push
inc
adc
int3
sub
les
pop
add
test
lahf
pushf
test
xor
xadd
sub
adc
lcall
inc
xlat
dec
stos
push
sar
movsb
add
pushf
loope
test
int3
in
ljmp
adc
sbb
cmp
dec
cs
push
test
lcall
int3
test
shrb
adc
jbe
sub
pop
push
and
add
loope
or
pop
mov
rorb
jmp
xor
cltd
and
das
rorl
jl
mov
je
xchg
push
int
push
loopne
js
dec
into
or
inc
push
or
sub
dec
nop
push
xor
mov
loopne
adc
je
and
pop
test
jo
cmp
je
jmp
cs
push
popf
test
leave
aaa
mov
or
and
sbb
or
add
pop
sub
or
jp
cld
inc
mov
mov
addr16
or
out
je
orb
jmp
xchg
xchg
push
push
add
cmp
mov
add
into
leave
test
fwait
adc
xchg
mov
fs
dec
mov
xorl
incl
dec
push
daa
faddl
out
inc
inc
mov
jp
sub
jo
inc
jbe
mov
xchg
add
je
jg
fidivs
loopne
push
adc
mov
lock
jnp
push
xchg
sbb
sub
and
stc
ficoms
adc
nop
inc
mov
and
loope
mov
pop
add
push
leave
lock
push
or
lods
and
inc
push
and
and
mov
pop
or
sub
cmovo
orb
sub
roll
enter
pop
adc
js
nop
or
rclb
pusha
jmp
push
inc
pop
lret
pop
enter
add
add
add
out
sub
add
push
jb
xlat
enter
int3
mov
loop
dec
cmp
movsl
push
xchg
mov
sbb
xchg
or
adc
sub
jno
mov
cmp
xor
push
adc
cmp
jbe
cmp
and
int
das
push
test
xor
add
imul
ret
sbb
dec
pop
inc
loope
and
rclb
add
add
mov
out
inc
hlt
mov
mov
mov
test
rcrb
mov
fcoml
adc
divl
adc
pop
repnz
adc
mov
xor
jo
and
add
and
and
or
add
sbb
mov
add
xor
cwtl
inc
sahf
push
mov
mov
xor
sahf
leave
inc
callw
lahf
add
call
jmp
jae
or
mov
mov
js
push
push
fdivl
or
add
pop
sbb
xchg
and
js
pop
addb
add
jg
jb
add
sub
cmpsl
seto
lret
cmp
push
stos
movsb
sbb
sbb
sahf
dec
xor
out
call
in
inc
cmc
pop
jmp
add
pop
jmp
test
cmc
inc
loopne
inc
in
mov
mov
fdivl
movsb
testl
adc
call
mov
xchg
xchg
adc
inc
cmc
dec
pop
sbb
sbb
inc
add
adc
mov
adc
adc
ret
pop
data16
mov
xor
bound
mov
mov
push
jae
sbbb
push
inc
in
fadds
lret
mov
add
or
aaa
nop
and
add
mov
sbbb
pop
aam
and
cmp
xor
test
je
je
xor
adc
add
sub
mov
and
loop
adc
andb
xchg
mov
jp
hlt
sbb
sub
lds
or
add
mov
mov
stc
cmp
fdivrs
js
clc
div
notb
xor
repnz
dec
inc
out
nop
cli
test
sbb
call
add
hlt
testb
mov
and
jo
jne
xor
sbb
and
pushf
pushl
dec
aad
arpl
mov
bnd
mov
repnz
mov
stc
xchg
adc
ret
enter
test
and
sbb
mov
cmpb
aaa
daa
nop
and
inc
add
leave
and
inc
add
add
cli
in
inc
xor
inc
lds
push
adc
test
pop
jae
inc
or
mov
mov
addr16
mov
rcrb
sbb
sbb
cmp
adc
insb
shr
xor
aas
pusha
push
mov
push
hlt
add
movl
push
stc
add
cld
std
push
test
and
jnp
push
inc
outsb
jle
ds
ds
inc
insb
mov
lea
mov
fs
stos
int3
lcall
rclb
iret
or
cwtl
or
sub
js
int
pop
pop
or
adcb
jae
push
out
test
jnp
repnz
or
add
mov
sbb
nop
cltd
push
sub
xchg
jo
adc
dec
sub
add
and
scas
xchg
mov
and
cmp
sti
loopne
add
jmp
and
loopne
addb
mov
xchg
add
push
in
or
cmp
sbb
and
or
shrb
addr16
cmp
add
cmp
sbb
adc
xchg
or
mov
arpl
mov
lret
add
mov
jmp
mov
and
out
xchg
inc
repz
or
aam
cli
push
out
je
lock
or
sbb
cmp
add
inc
mov
mov
clc
sti
call
es
adc
xchg
lret
pop
rcrb
sbb
jb
les
pop
push
pop
dec
sbb
fisubrl
xchg
cmp
mov
enter
mov
sub
xorl
dec
adc
pop
push
addr16
inc
in
sti
cmp
push
cli
and
dec
inc
in
insb
and
inc
test
push
pushf
push
lock
inc
sahf
ds
cmp
pop
rolb
in
cmp
int3
and
ret
cs
sub
outsl
rcll
cmp
addb
adc
mov
roll
jbe
cmp
repz
sub
inc
xor
and
lret
sub
sub
nop
out
cli
sbb
mov
pop
jo
push
mov
sub
cli
adc
push
mov
out
sbb
popf
outsl
mov
jecxz
mov
sbb
mov
push
dec
push
fs
and
mov
cmp
xchg
lcall
popa
test
add
cmp
cmp
inc
test
and
pop
and
rorl
xchg
cmp
in
push
dec
pop
jbe
std
ja
sub
or
je
insl
mov
test
lods
mov
sub
repnz
inc
push
std
mov
jl
sti
jge
mov
mov
push
adc
loope
cmp
mov
inc
rcrb
js
nop
pop
inc
loop
push
scas
lcall
or
enter
xor
bound
push
in
push
gs
loopne
inc
xor
dec
testb
adc
in
pop
shr
sub
stos
adc
aaa
jecxz
test
adc
cmp
sbb
cmpsb
or
out
testl
fldcw
je
cmp
mov
inc
or
or
inc
clc
daa
xor
and
dec
in
movl
adc
out
pop
or
jmp
xor
adcb
pushf
cmpl
jo
bound
ss
test
mov
jae
movsl
and
pop
jne
rolb
ret
int3
aam
mov
and
adc
cli
test
push
mov
mov
xor
ss
cmp
mov
js
adc
xchg
mov
add
nop
cmp
sub
iret
and
xchg
adc
and
call
push
and
jo
fwait
jne
sahf
add
mov
mov
inc
lods
push
add
dec
insl
add
dec
shlb
push
cli
dec
shll
jae
adc
adc
and
iret
push
adc
mov
fcom
sbb
or
mov
fildl
add
rorb
push
je
fdivr
mov
jp
xor
loopne
adc
mov
pinsrw
les
and
cmp
xor
adcl
pop
inc
scas
push
into
sbb
outsb
jg
mov
pop
dec
inc
sub
cmp
add
test
sbb
or
push
in
test
inc
adc
dec
or
dec
mov
inc
pop
or
mov
inc
jb
jno
mov
mov
push
and
fs
or
push
pop
call
ljmp
orb
fwait
movsb
xorl
push
imul
inc
data16
mov
in
sub
popa
pop
inc
sti
mov
or
and
loopne
in
adcl
pop
pop
mov
mov
js
enter
int3
lea
dec
xchg
clc
push
pushf
add
pop
cs
push
sbb
push
push
pop
inc
adc
jne
sbb
mov
ret
js
andb
repz
jle
push
push
and
add
ret
jmp
fsubrl
leave
pushf
add
in
dec
push
enter
sub
push
cwtl
xor
fsub
xor
andl
mov
out
out
inc
xchg
sbb
ja
add
and
sbb
mov
jns
pop
push
mov
enter
je
inc
mov
pushf
adc
ret
test
test
insl
inc
inc
pop
dec
cld
dec
push
aaa
push
and
ja
cwtl
sub
mov
nop
test
add
inc
movsb
sub
scas
lds
aam
xchg
bound
sbb
roll
popl
push
or
test
faddl
xchg
mov
mov
or
mov
sbb
inc
mov
std
scas
xlat
or
adc
insb
fistl
movsb
xor
xor
jne
xor
fsubs
bound
jmp
insl
clc
into
cwtl
insb
sbb
popf
std
mov
xlat
jle
jbe
and
je
imul
and
inc
xor
bound
hlt
out
insb
mov
insl
push
addr16
sbb
aam
or
mov
or
js
cmp
pop
cli
movsb
mov
and
add
test
cmp
mov
into
pop
bound
idivb
pusha
inc
push
mov
push
mov
int
in
cmp
or
jp
adc
mov
sub
loopne
jg
andl
call
enter
xor
add
xchg
mov
push
or
mov
sbb
jle
fcoml
les
mov
push
daa
add
dec
pop
inc
mov
cmp
mov
sbb
lods
stos
mov
sbb
inc
jl
lret
jecxz
cmpsb
push
mov
mov
and
or
sbb
push
mov
adc
or
lods
push
and
inc
add
das
es
sbbl
clc
scas
sub
rcl
push
test
sbb
pop
inc
sbb
mov
mov
or
or
inc
jge
aam
jns
pusha
in
sub
add
hlt
push
add
jl
inc
mov
addl
sub
cmp
push
ret
popf
or
mov
add
push
push
mov
movsl
sub
mov
inc
push
xorl
and
xorb
and
mov
mov
jo
in
mov
pop
xor
cld
cld
adc
inc
pushf
push
push
mov
mov
lahf
cs
push
mov
pop
mov
or
pop
inc
in
call
inc
mov
and
jne
mov
outsb
negl
int
pop
cmp
ds
aaa
insb
push
insb
ds
xor
cvtps2pd
arpl
sub
mov
nop
cmp
ds
fs
sar
add
pop
fldenv
pop
pop
loopne
xchg
mov
xchg
inc
dec
pop
mov
dec
sbb
es
and
push
notl
fildl
cmpxchg
adc
push
daa
daa
je
mov
pusha
stos
dec
inc
cmp
je
je
daa
add
jmp
push
cmp
sbbb
sahf
dec
inc
cmp
pop
popa
in
inc
xchg
jecxz
mov
and
cld
je
adc
pop
mov
lods
rolb
push
and
adc
inc
xchg
xchg
jne
shrl
pop
test
imul
adc
fimuls
loopne
shll
xchg
loop
jno
xchg
cmp
gs
mov
dec
inc
repz
add
jo
and
adc
push
push
push
lock
sbb
sub
xchg
aam
xor
int3
dec
adc
mov
fdivs
rorl
pop
outsb
push
and
pop
aas
pop
inc
bt
lds
insb
fmull
push
in
in
sti
aaa
in
xchg
and
pop
in
sti
or
cmp
and
push
pop
and
inc
and
rorl
cmp
enter
or
loopne
mov
ljmp
add
jp
push
shl
and
and
sti
pushf
or
mov
push
ljmp
popf
inc
scas
adc
jnp
add
dec
push
dec
adc
aas
fdivs
mov
push
jecxz
pop
inc
jne
outsb
inc
cmp
rorb
xchg
add
es
aam
pop
mov
and
inc
addb
fdivp
pop
and
ds
inc
mov
add
inc
sub
cmpsb
test
sub
cmp
jl
scas
add
sub
mov
mov
shlb
ret
inc
inc
pop
clc
add
out
loope,pn
cmc
mov
mov
inc
push
jne
add
outsl
cmpsb
pop
inc
cmp
jl
push
test
push
lods
shll
push
icebp
or
and
lods
mov
mull
test
push
mov
out
sbb
aas
cmp
je
aam
inc
dec
xchg
pop
fldcw
adc
inc
es
mov
and
daa
push
add
jne
or
imul
or
add
mov
or
mov
mov
dec
pop
jne
mov
jne
sub
sahf
out
lock
add
mov
mov
cld
dec
xorb
pusha
xchg
adc
push
lock
call
div
push
fs
push
adc
imul
pusha
add
push
jg
testb
pop
pop
push
jmp
push
daa
pop
sub
sub
or
mov
adc
push
xchg
fwait
cmp
int3
or
sbb
pop
std
mov
hlt
and
cmp
jmp
mov
stos
cmp
push
add
xor
adc
pusha
bound
test
xchg
outsb
out
adc
pusha
adc
adc
push
ret
pop
dec
sahf
inc
mov
xchg
sub
movsl
push
pop
cmp
or
dec
pushf
fisttpll
mov
jb
mov
aam
mov
stos
loop
pop
je
inc
cmc
sub
cmp
inc
push
jp
int
fs
jmp
push
aam
es
push
test
into
and
xlat
wrmsr
add
mov
repz
cmp
mov
movl
loopne
call
push
pusha
fimull
insb
adc
fstp
loope
adc
adc
mov
es
adc
incb
xchg
jge
jne
push
in
lock
mov
int3
inc
jne
cmpsl
xchg
outsl
xchg
adc
test
push
push
mov
push
dec
dec
stos
or
pusha
sub
out
pusha
add
es
sbb
jmp
xor
jmp
popf
arpl
adc
lret
call
test
add
add
mov
aam
rcrl
mov
push
mov
adcl
mov
mov
sub
xchg
movsb
enter
out
sti
call
es
push
sbb
inc
xchg
cmovge
adc
sbb
in
and
or
sbb
dec
enter
stos
cmp
pop
mov
out
add
popa
in
dec
mov
jb
adc
push
mov
pop
cmpsb
bound
push
cmp
and
les
cmp
mov
in
hlt
or
sbb
cmp
add
out
lock
or
cmp
jno
js
ss
in
fiaddl
or
rcrl
and
sbb
cwtl
mov
insb
lea
lcall
cmp
sbb
mov
mov
cmpb
inc
and
mov
cwtl
inc
or
scas
adc
cmc
mov
xchg
xchg
cmp
add
sti
popa
sbb
daa
jecxz
cmpl
bound
push
je
movsl
and
fwait
and
test
sbb
and
hlt
bound
arpl
arpl
loopne
arpl
enter
loopne
adc
inc
fs
and
mov
leave
pusha
dec
pop
call
dec
push
sub
pop
jmp
jbe
in
or
fs
popa
dec
push
in
jo
jae
sub
mov
arpl
inc
mov
je
add
lock
dec
loopne
cmp
mov
fcmovne
cmpsl
cmp
adc
cs
outsb
mov
jbe
sbb
mov
nop
loopne
jnp
stos
add
xchg
mov
add
and
movsb
jnp
rcrb
dec
sub
inc
shr
mov
jb
faddl
fsubs
pushf
aam
push
loopne
fs
dec
pop
gs
push
xor
std
inc
lar
mov
push
mov
les
loop
lahf
inc
loope
or
cmp
pop
js
push
cs
xor
push
mov
jle
add
loopne
cs
test
test
and
xor
adc
sub
bound
enter
add
mov
in
dec
mov
fldl
adc
xor
push
dec
call
mov
sub
ret
je
dec
and
adc
mov
dec
push
xlat
add
out
jmp
pop
jmp
push
jbe
adc
inc
add
jge
testl
aad
loopne
scas
cmp
adc
adcl
fnstcw
movsb
add
mov
mov
sub
lds
push
data16
and
adc
fdiv
sarl
int
xor
fsubr
and
or
pop
shll
adc
js
ret
lock
movsb
xor
out
adc
andb
mov
pop
icebp
push
xor
xlat
jno
jle
lea
sbb
adc
loopne
aam
cmp
mov
pop
pop
mov
dec
inc
or
icebp
xchg
jge
mov
clc
pop
lret
inc
mov
pop
icebp
jnp
jmp
fcoms
mov
or
and
insl
xchg
mov
pop
testl
adc
mov
flds
fcomp
fimull
add
mov
jne
and
movsb
add
or
pop
and
dec
hlt
add
test
mov
mov
xchg
jmp
cmp
add
sbb
add
flds
cmp
enter
add
push
xor
ja
jbe
mov
xor
mov
je
movb
mov
inc
inc
mov
jle
fadds
dec
push
add
test
push
gs
and
pop
lea
xchg
mov
clts
repz
push
hlt
mov
mov
add
jnp
lds
loopne
cmp
or
in
mov
mov
sbb
jbe
dec
lock
mov
pop
enter
test
cmp
shl
fistpll
je
cmp
je
cmp
or
xor
in
mov
insb
cmp
jne
pop
mov
add
pop
mov
insb
lcall
addr16
outsl
fstl
jg
mov
mov
mov
push
jmp
adc
jmp
or
add
cmp
jbe
dec
inc
or
insl
cmpsb
and
add
adc
inc
or
push
cmp
scas
ret
int
push
push
mov
aad
add
jmp
scas
es
xor
xchg
pop
mov
inc
adc
lock
push
and
or
add
scas
add
test
inc
shrl
xor
sbb
clc
cmp
pop
cmp
stos
cltd
ret
push
xchg
in
fildl
dec
cmp
negl
in
cmp
push
decb
andb
add
cltd
add
fstp
pop
push
sub
push
scas
add
mov
dec
cs
add
je
nop
xor
adc
jne
out
add
negl
and
inc
add
push
daa
push
lods
sti
leave
and
add
push
or
bound
test
pop
cs
ja
or
sub
push
icebp
and
ja
mov
xchg
cmc
jmp
push
sbb
popf
cmpb
jl
push
sbb
mov
sbb
add
aaa
cmpl
push
xorb
adc
cmpb
add
leave
jne
inc
mov
lock
adc
orl
adc
daa
add
je
cmpb
inc
sar
adc
mov
in
mov
aam
pop
cmp
or
daa
mov
pop
imul
push
push
adcl
xor
int3
mov
pop
dec
es
or
jle
mov
inc
pop
repnz
mov
sbb
add
xor
dec
push
or
add
push
inc
cmp
jb
cmp
mov
mov
push
fisttpl
data16
sbb
and
push
inc
push
enter
and
mov
sbbl
ss
call
push
or
lret
mov
sub
sbb
adc
repnz
in
cmp
pop
xor
add
jnp
sub
pop
sub
int3
pusha
test
xchg
add
adc
mov
rorb
inc
pop
jne
inc
out
push
push
and
add
addr16
jmp
mov
mov
sub
sub
lods
test
int3
out
sbb
sub
enter
and
adc
add
add
sbb
enter
insb
add
pop
inc
or
cltd
adc
sub
and
jmp
sbb
jo
dec
xor
jno
sbbl
inc
nop
or
push
mov
sbb
add
pushf
sub
incl
adc
push
or
pop
lea
lods
and
sbb
jp
xor
clc
ljmp
push
mov
xor
push
xor
mov
add
lock
dec
and
xor
mov
fstenv
in
or
add
test
jge
pop
mov
int
xchg
adc
nop
push
std
jle
mov
pop
dec
inc
mov
push
and
push
popf
push
daa
notl
mov
imul
xor
mov
pop
pusha
inc
mov
xor
mov
call
lods
inc
xchg
inc
dec
xchg
adc
outsb
and
orl
pop
or
mov
popa
pop
mov
pop
nop
xorb
ret
add
sahf
or
outsl
mov
add
or
leave
jp
adc
fists
push
mov
stc
add
fs
jo
out
add
nop
andb
add
cld
cli
pop
ss
xchg
sbb
mov
push
lds
sub
xor
bound
cld
cli
and
int
je
cmp
dec
xchg
inc
sbb
fs
dec
sbb
repnz
mov
addr16
jne
into
test
in
add
and
adc
sub
cmp
mov
das
scas
in
enter
imul
jp
call
add
sub
sub
das
stos
hlt
je
xor
enter
sbb
push
mov
dec
add
mov
jne
movb
lret
mov
adc
in
movb
das
push
lret
jmp
pop
mov
add
and
pop
xchg
aaa
add
add
out
inc
rcr
les
xchg
sub
adc
add
test
sbb
pop
leave
fmul
shlb
rolb
add
cmp
nop
in
int3
push
faddl
pop
fsts
fwait
push
xor
inc
pop
enter
mov
or
cmpsl
or
mov
xchg
pop
jb
clc
cmp
add
sub
inc
push
inc
push
hlt
and
add
das
add
daa
nop
sbb
push
pop
pusha
mov
inc
or
inc
ja
test
pop
jecxz
sub
div
pop
sbb
div
pop
mov
or
lods
fistpl
add
testl
push
xlat
daa
push
and
movsb
loopne
xor
push
inc
mov
push
dec
sub
loope
dec
lds
push
insb
fnstenv
cmp
dec
cmc
dec
stos
sbb
mov
pop
and
inc
rolb
xor
sub
sbb
sahf
or
je
sub
pusha
aaa
test
mov
pop
jno
add
inc
pop
mov
jg
xor
fimull
adc
push
sbb
inc
inc
push
repnz
jo
pushl
aad
das
sbb
lret
sbb
push
das
aad
mov
lock
pop
ja
fstpt
mov
add
adc
int
ja
cmova
aaa
daa
int
shlb
sub
and
ljmp
or
cmp
mov
sub
sbb
add
adc
addr16
ret
in
call
call
pop
mov
jl
mov
push
cmp
repnz
fnstenv
mov
and
and
fwait
out
pop
adc
sarl
adc
mov
inc
pop
add
dec
sahf
mov
sub
adc
pop
add
xchg
scas
jmp
shlb
mov
daa
dec
push
sub
jle
loopne
movsb
aam
adc
call
mov
in
adc
std
in
std
push
cmpsb
or
sub
insb
hlt
and
sub
adc
sahf
es
call
dec
lds
sub
fs
xor
mov
sbb
push
inc
arpl
pop
adc
clc
sub
mov
call
add
push
mov
pushf
iret
enter
popf
pop
xchg
mov
mov
gs
xchg
stos
cmp
clc
inc
popf
fisttpll
or
cwtl
stc
es
mov
movsb
lretw
int3
negl
negl
ret
imul
cmp
jl
push
aam
mov
fisubl
push
xor
pcmpgtd
inc
and
adc
or
xchg
push
pop
push
pop
push
dec
push
sbb
mov
or
lods
and
in
add
adc
jbe
lea
jl
adc
add
push
divb
jno
adc
cmp
je
adc
xchg
mov
imul
or
dec
mov
push
pop
or
adc
add
lds
insb
xlat
sbb
rdtsc
lret
inc
add
jl
mov
push
or
push
mov
ds
mov
or
gs
xchg
lret
push
push
dec
mov
sbbb
pop
inc
sti
push
mov
test
sub
rol
stos
loopne
mov
xchg
mov
scas
int3
jne
sbb
jb
jge
xor
rolb
std
fcomps
pop
fwait
and
outsl
or
add
xchg
mov
inc
mov
add
inc
xchg
int
add
fstpt
hlt
and
roll
inc
push
stos
aam
push
inc
imul
fidivl
mov
fidivs
orl
and
loopne
jmp
fsubrs
loopne
sarb
sub
lock
pop
xchg
sub
pop
or
test
push
ret
loopne
pop
push
in
jb
dec
push
mov
inc
mov
cmc
popa
pop
pop
shlb
cmpl
cmp
add
sbb
imul
adc
lods
mov
in
pushf
fldcw
cli
add
xor
fld1
xchg
movsb
movsl
cmpsb
cs
xor
call
pop
jb
sub
clc
and
xor
lods
in
xor
cs
test
xchg
pusha
mov
lret
inc
sub
xchg
cmp
pusha
cmp
jmp
jb
mov
std
fcoml
mov
movsb
imul
lret
dec
adc
cld
addl
or
inc
addl
out
jo
push
clc
movsw
pop
mov
test
adcb
dec
mov
lock
int3
mov
lret
lock
lods
or
popa
adc
pushf
cmp
and
enter
cmp
pushf
test
push
leave
dec
push
cmp
decb
lock
pop
mov
popa
cmp
sbb
push
fld
stc
insb
out
and
decl
push
daa
lods
sti
xor
loopne
lods
clc
jne
out
xchg
ret
add
mov
ret
in
push
push
mov
ret
loop
add
cwtl
jno
call
mov
imul
push
int3
add
ds
test
lds
out
and
mov
pop
sub
ja
mov
mov
enter
sbb
cmp
inc
pop
lds
sbb
and
mov
xchg
int3
adc
lds
inc
fwait
add
inc
jge
add
mov
mov
clc
lea
adc
cltd
fldcw
sub
adc
or
ret
lcall
inc
les
sub
test
mov
movb
lods
push
adc
fistpl
mov
cwtl
out
cmp
xor
movsb
ret
es
xor
arpl
adc
sub
pop
add
in
mov
jno,pt
std
and
jo
js
sbb
adcb
add
add
ret
ret
mov
mov
incb
adc
shlb
repnz
pusha
jg
add
rorl
psadbw
push
add
or
push
push
inc
pop
push
imul
push
sbb
adc
inc
mov
add
mov
les
in
int3
addl
cmp
in
insb
insl
push
jbe
icebp
sbb
mov
insb
insb
shr
xchg
or
adc
cltd
sbb
mov
es
mov
mov
add
adc
adc
or
pop
add
jl
jmp
push
mov
add
and
add
fdivr
lea
inc
xchg
adc
cmpsb
repnz
adc
mov
pop
cld
andb
mov
or
inc
sub
mov
je
fs
inc
xor
jl
insl
inc
fidivrs
cmp
outsb
cmc
or
nop
mov
test
insl
adc
add
and
cld
and
xor
sbb
mov
jmp
adc
lcall
xor
les
pop
pop
mov
lea
dec
cmp
je
pop
mov
adc
add
stc
lock
int
fmuls
cld
popf
lock
outsl
mov
aaa
hlt
lea
and
mov
pop
mov
xlat
mov
in
cmp
or
ret
add
loopne
pop
je
nop
mov
loopne
arpl
jne
add
or
arpl
je
mov
dec
rcll
cld
dec
add
xchg
inc
hlt
xor
xor
cld
sub
int
adc
mov
jne
add
and
out
push
pushl
sti
popa
and
pop
ret
mov
add
inc
jno
dec
pop
inc
and
gs
xor
and
xchg
test
add
xchg
mov
and
and
jmp
xchg
mov
popa
add
add
adc
rcr
push
daa
inc
xchg
mov
add
xor
hlt
clc
cld
xchg
add
enter
mov
pop
push
movsb
cld
jno
sbbb
push
add
aas
xor
mov
mov
stos
fs
pop
sbb
or
nop
movsb
stc
xor
shr
cmp
or
stc
cmc
adc
loopne
mov
adc
sti
pop
add
mov
dec
push
stos
xlat
sub
nop
int3
jbe
je
notl
fmuls
mov
rcrb
fcomps
loopne
or
mull
scas
mov
in
sub
test
jne
xor
adc
adc
mov
pop
lcall
std
lds
mov
mov
sub
sarb
jp
outsb
sub
push
and
inc
imul
push
iret
and
insl
adc
movsb
cli
push
jb
and
sub
movsb
cli
inc
inc
mov
test
movsb
movsb
stos
dec
jb
cli
xchg
je
enter
or
sub
pop
and
pop
push
ret
adc
fisttps
je
dec
adc
mov
test
je
test
sub
aas
je
pop
sbb
mov
enter
cmp
fisttpl
adc
jne
inc
lcall
inc
out
lods
fstl
jmp
pop
sub
pop
inc
mov
or
sbb
jne
sbb
pop
push
ret
sbb
cmp
in
and
pop
cmpb
or
inc
stc
outsl
test
adc
pop
jne
cmp
mov
test
add
mov
pushl
dec
cmp
jge
cmp
je
clc
incl
notb
jle
sbb
pop
cmp
jg
and
or
or
mov
cmp
dec
in
jae
icebp
incl
les
push
fidivrl
clc
popa
mov
dec
leave
mov
mov
fmuls
xor
sub
inc
xchg
sub
dec
sbbl
int3
xchg
ss
pop
inc
mov
pop
jmp
cli
jb
fimull
push
jmp
mov
cmp
sbb
mov
cmp
je
movsl
cmp
or
add
subb
incl
xor
push
pop
fimull
push
mov
shll
mov
in
pop
jmp
sbb
das
mov
add
ds
les
jne
jnp
pop
mov
pusha
xchg
int3
add
loop
test
hlt
push
inc
pop
and
movl
mov
dec
cmp
jne
push
mov
add
orl
inc
add
test
mov
mov
es
test
je
scas
xor
push
jle
dec
jmp
sub
jmp
add
jmp
in
push
xchg
add
adc
dec
or
fcomp
jno
jne
jmp
push
inc
jo
mov
inc
dec
je
sbb
jmp
mov
and
je
and
and
add
cvtdq2ps
out
mov
adc
and
insl
rcrb
fisttps
fidivrs
test
je
test
ficoms
pop
mov
or
std
xor
add
sbb
icebp
xor
xchg
add
jl
adc
lods
std
jne
push
jnp
pop
add
lock
popf
add
xchg
add
pop
and
iret
mov
sub
pop
movsl
stos
and
push
mov
inc
or
xchg
push
fmul
mov
adc
mov
or
leave
insl
sub
or
adc
cmp
in
fsubrs
push
add
ljmp
mov
push
cmpl
and
int
sbb
jno
pop
mov
mov
adc
dec
add
adc
push
cwtl
dec
mov
jecxz
xor
in
pushl
rolb
neg
dec
mov
icebp
inc
cmp
roll
das
cld
xor
sub
enter
push
push
aad
call
jo
scas
cwtl
in
jmp
mov
sbb
jmp
lds
pop
push
and
and
xchg
add
adc
cmp
xor
ja
cmp
insb
sbb
cli
cs
xor
and
sub
or
and
sbb
out
or
add
rclb
push
fcmovnu
hlt
push
or
pop
xchg
dec
sbb
das
outsl
push
sub
mov
mov
outsb
mov
std
add
cmp
jbe
pop
jb
mov
cmp
rolb
jb
cltd
and
mov
inc
adc
fcomps
add
enter
pop
push
enter
out
jmp
or
xor
and
int
jg
sub
mov
mov
add
xor
pop
int3
lea
sub
lret
sub
ja
leave
cmpsb
nop
and
inc
aas
mov
pushf
add
test
mov
inc
dec
shll
call
dec
shll
hlt
hlt
clc
clc
jl
sub
cld
mov
add
xlat
je
and
push
rolb
fdiv
adc
pop
addr16
popf
or
mov
mov
and
sub
cmp
outsb
jnp
and
or
loope
xor
out
lea
pop
mov
stc
sub
sub
xor
nop
push
insl
add
sub
add
dec
push
mov
xchg
xor
dec
pop
mov
and
and
or
ret
push
scas
jmp
int3
mov
pop
or
push
or
cmpsb
imul
xor
inc
pop
xchg
sbb
sbb
shll
adc
shll
add
jmp
pop
pop
pusha
add
pushf
pop
ret
xchg
mov
xchg
adcl
or
mov
int
ljmpw
dec
adc
clc
out
mov
adc
add
imul
das
push
xchg
fld
sahf
sub
outsb
adc
dec
adc
inc
sub
and
push
mov
stc
inc
inc
push
add
dec
add
and
sub
mov
ret
aam
or
pusha
dec
in
sar
aaa
shr
adc
lcall
es
add
rcrl
imul
xchg
lahf
int
inc
call
inc
or
inc
nop
dec
es
cld
mov
scas
pushf
iret
push
je
call
mov
adc
mov
push
adc
shrl
sub
dec
inc
mov
ret
aam
push
adc
pop
mov
push
add
xlat
cmp
and
push
inc
pushf
in
icebp
loopne
cmp
aam
pop
adc
pop
scas
sub
adc
je
les
loope
out
adc
ret
popl
jo
or
cmp
jbe
mov
cmp
and
add
nopl
popf
push
sub
ret
adc
mov
xchg
shl
inc
ret
jmp
add
inc
adc
inc
xor
adc
test
and
ret
lret
dec
nop
mov
inc
mov
adc
add
fs
or
adc
clc
xchg
push
xor
call
mov
or
pop
in
pusha
loopne
in
rclb
in
lds
sub
jmp
push
push
jle
and
pop
stc
pop
push
push
inc
leave
test
pop
sub
inc
or
stc
adc
or
or
or
push
imul
sbb
dec
inc
leave
adc
mov
cmp
jle
fldcw
or
push
cmp
lock
mov
or
dec
aaa
or
pop
adc
pop
or
fmull
or
jns
outsb
out
push
push
jmp
pop
mov
sbb
adc
shll
hlt
mov
dec
inc
add
adc
mov
dec
lods
push
or
push
mov
aad
mov
out
push
test
jmp
addb
xchg
gs
in
and
subb
lea
adc
stc
mov
fistl
ret
sub
sub
stos
xchg
jge
push
or
sarl
push
pop
sbb
pop
push
add
lock
sbb
sub
and
fstl
adc
and
dec
mull
jno
lock
or
fsub
xor
adc
or
mov
rcll
mov
and
jmp
sbb
jmp
push
inc
insb
jp
and
out
stos
out
out
adc
iret
xorb
nop
enter
imul
clc
mov
push
jns
es
aad
inc
or
insl
or
add
pop
dec
adc
cmp
inc
ja
scas
clc
mov
loopne
loop
fnsave
fimull
loope
pop
cmp
sub
push
dec
roll
sbb
mov
insb
imul
es
daa
sbb
testl
mov
mov
stc
rclb
loop
dec
pop
jb
or
flds
inc
loopne
sub
push
inc
jb
xchg
pop
or
and
jbe
rorb
cmp
adc
int
mov
dec
push
fiaddl
fs
lock
fidivrs
fmuls
aam
jno
or
inc
in
or
in
mov
cmp
or
cmp
xchg
sti
mov
jae
adc
xor
pop
push
jmp
fdivp
mov
push
pop
xchg
jo
cmp
or
popf
adc
or
ss
mov
pop
adc
fucomp
popf
lods
sbb
xchg
add
lods
push
mov
adc
notl
xor
or
clc
in
push
ficomps
push
inc
or
pushf
inc
stos
add
sub
cmp
leave
mov
js
jnp
and
jns
mov
ret
push
data16
sbb
inc
or
scas
cmpsb
fldcw
mov
test
dec
xchg
adc
pop
fidivrl
subb
clc
add
hlt
add
in
divb
enter
imul
hlt
movb
push
mov
add
hlt
jmp
jo
cmc
push
enter
mov
mov
add
pop
sub
sbb
jmp
fists
ss
addr16
rcrb
ret
vminsd
sbb
jmp
pop
mov
ds
inc
push
int3
andb
in
add
lock
dec
ret
cmp
fcomps
mov
inc
daa
adc
jne
popa
cmp
pushl
fs
xchg
daa
and
cltd
jle
or
cli
jp
xor
cmpsb
pop
lcall
in
inc
mov
fistpl
xchg
in
add
or
and
add
test
cmp
andl
mov
leave
dec
gs
call
lret
insl
ss
mov
cmpl
mov
js
dec
and
or
fs
mov
jb
gs
cli
and
mov
adc
mov
cmp
shll
jb
shrl
int
and
push
loopne
setae
hlt
push
xchg
xchg
lock
and
mov
enter
pop
ss
cwtl
mov
push
js
pusha
sub
mov
mov
dec
mov
loopne
enter
out
adc
fmuls
sub
mov
mov
adc
mov
pop
nop
scas
mov
fcomps
subl
sbb
or
lock
inc
cmp
push
add
or
outsb
pop
test
add
lds
mov
faddl
push
pop
sbb
movups
js
lea
mov
cmp
mov
xor
es
xchg
cmp
iret
inc
insb
inc
out
sub
cltd
je
adc
loopne
ficoms
adc
cmp
xchg
pushf
pushf
push
and
add
sbb
inc
sbb
movsl
lods
dec
xchg
scas
js
pop
hlt
or
sub
dec
push
xchg
push
add
mov
insl
inc
inc
mov
push
adc
mov
loope
lcall
popa
xorl
xchg
add
inc
sub
rcrb
lret
popa
repz
push
pop
cwtl
leave
popa
mov
xchg
or
jecxz
add
sbb
je
add
test
stc
add
das
jne
fstl
mov
mov
inc
cmpsb
cmp
sbb
jae
or
loop
mov
outsl
flds
mov
test
and
jo
and
pop
sbb
cmp
cltd
push
sbb
and
xchg
lods
pusha
pop
aad
mov
dec
les
xor
push
or
add
je
addl
or
imul
ja
cwtl
add
inc
xor
into
adc
loope
test
fcoms
mov
xlat
cmpl
sbb
pop
xor
push
stos
sub
push
or
or
add
into
pop
fldpi
mov
xor
insl
add
push
movsb
stos
in
shlb
xchg
cmp
ret
sub
sbb
fwait
popf
adc
xor
fs
out
pusha
jae
mov
xor
adc
pusha
fsubs
les
push
jge
jmp
push
inc
aaa
adc
mov
inc
mov
push
add
cltd
mov
and
insl
push
ror
movsl
jmp
sbb
xchg
insb
xchg
pop
add
sbb
dec
fdivrs
mov
icebp
sub
sub
fnclex
pop
and
std
cmp
dec
call
add
xchg
sbb
cmp
cmp
push
testb
andl
leave
outsl
sbb
jmp
push
sub
testb
lcall
or
xor
adc
test
mov
mov
leave
sbbb
in
lock
sbb
push
dec
cli
and
clc
jl
test
je
add
mov
and
dec
mov
xchg
cmp
sbb
das
rcrl
cmp
adc
inc
xor
in
in
add
ret
or
repz
and
clc
clc
cmp
jecxz
sub
clc
in
test
mov
mov
jne
mov
mov
add
andb
jae
je
inc
add
dec
mov
pop
dec
sbb
push
xor
cmp
or
mov
xor
fucomi
jnp
xor
lods
jnp
cld
mov
outsb
mov
or
loop
movsb
dec
cmpsb
flds
mov
add
inc
mov
add
pop
cmp
push
das
daa
rorb
test
scas
xor
cmp
cli
pop
in
adc
popf
cmpxchg
dec
aad
popa
push
pop
add
mov
gs
jne
pop
push
ret
fdivl
ljmp
les
jmp
jae
push
outsb
cwtl
jl
add
popa
mov
jg
cmp
gs
jmp
lahf
movsb
pop
mov
mov
add
popa
or
sub
cmp
cmp
mov
push
jl
inc
mov
inc
or
cmp
sarl
mov
push
push
sbbl
addb
adc
pop
push
int3
sub
mov
es
pusha
aas
or
inc
xchg
add
mov
fwait
jmp
add
pop
inc
adc
int
jmp
sub
sbb
fldt
insb
push
or
xor
xchg
inc
or
or
add
mov
pushf
jp
xchg
scas
sbb
sbb
xor
cld
outsb
aaa
sbb
ja
push
adc
or
or
sub
sbb
sbb
enter
adc
fisubrl
sbb
mov
cld
cld
movsl
fadds
inc
and
sahf
dec
loopne
insb
pushf
loopne
jmp
sub
orb
xchg
or
pushf
adc
jo
cmp
daa
sbb
sbb
jecxz
jne
loopne
adc
fisttpll
pop
and
pusha
fnstenv
ret
dec
sbb
dec
scas
je
inc
push
je
daa
xor
and
orl
cld
fwait
push
popa
paddsb
rorl
pop
and
jl
jne
enter
or
movsl
aam
push
mov
outsl
jb
arpl
mov
mov
in
ss
or
adc
or
ds
lods
add
inc
fists
lods
jge
mov
inc
and
cmp
push
mov
mov
pop
push
dec
mov
jge
mov
loop
cmp
add
daa
xor
test
jle
ret
sbb
and
movsb
je
and
gs
movsb
mov
push
or
mov
movsb
sbb
add
mov
es
inc
adc
adc
xchg
pushf
or
and
adc
pushfw
sub
inc
and
fildl
test
fdivs
push
mov
adc
ffree
jg
adc
fistpll
xchg
ljmp
cmp
loopne
cmpsb
nop
pushf
or
inc
sbb
jge
add
and
daa
aas
loopne
daa
rorl
insb
cld
nop
xchg
pop
lret
push
adc
out
jbe
pop
or
add
cltd
movsl
and
mov
or
adc
pop
jae
or
push
mov
cmpsb
je
iret
pusha
lahf
loopne
nop
in
xor
or
inc
hlt
mov
jo
es
sbb
inc
rolb
xchg
mov
rcrb
cmp
push
hlt
push
scas
push
xor
lea
mov
and
aas
hlt
in
rcrb
rol
insb
or
dec
mov
loopne
dec
and
sbb
push
iret
add
insl
dec
shlb
dec
shlb
mov
je
imul
sub
ja
out
pop
aas
outsb
jnp
lock
mov
push
js
mov
mov
into
notl
or
jmp
mov
cmp
adc
imul
out
mov
pop
mov
or
adc
fiaddl
pop
ret
lea
bound
outsb
loopne
movlps
push
je
mov
inc
cmp
je
jg
mov
sub
in
or
push
mov
cmpl
push
or
imull
loopne
shll
pop
stc
xor
addb
and
imul
jne
and
or
sub
test
clc
test
cmp
je
mov
daa
pop
or
add
mov
shll
push
aam
xchg
sub
faddl
aaa
push
std
cld
or
or
or
and
mov
imul
cwtl
sbb
pop
inc
cmp
push
or
stc
or
jne
pop
pop
adcl
jmp
jmp
jle
mov
insb
sub
adc
out
mov
mov
mov
sbb
je
jmp
or
mov
das
xor
ret
and
mov
rol
das
add
sbb
lock
cmp
pushf
cs
and
pop
ret
push
inc
mov
add
sbb
adc
pusha
jb
xlat
mov
add
sahf
out
cld
cld
cld
and
leave
pop
add
movsbl
cli
in
mov
and
pusha
lret
cld
orps
dec
or
adc
add
cmp
ds
cmp
popa
lock
jmp
xor
fstpt
ja
push
mov
clc
lea
test
add
jecxz
mov
push
stos
loopne
nop
lock
sub
cmp
or
insb
adc
fucom
or
movaps
aaa
push
fwait
ret
or
xchg
and
sub
call
ljmp
jne
out
gs
aam
or
add
add
and
clc
punpckhdq
xchg
shrl
sbb
xchg
pusha
add
out
in
subl
push
adc
push
xchg
and
and
or
inc
test
movsl
faddl
mov
fs
jb
xchg
or
add
dec
out
in
cltd
andb
in
cs
adc
mov
jae
sub
in
bound
js
imul
pop
out
cmp
jae
loopne
jge
pop
subb
call
push
call
mov
sub
xchg
test
pop
mov
and
mov
push
lods
or
or
pop
jl
lahf
lret
sbbb
add
jo
cmp
lea
mov
push
nop
fsubrl
pop
xorl
cmp
jl
loopne
or
ds
and
roll
jo
mov
or
sub
push
and
dec
push
mov
jmp
insb
or
xor
in
sub
rolb
dec
inc
mov
jnp
inc
or
cmovbe
fdivs
mov
clc
rorl
mov
jg
inc
rclb
add
inc
and
jmp
rorl
sbb
adc
cmp
and
lret
inc
and
push
repnz
jns
or
std
jmp
add
pop
sbb
add
inc
bound
inc
cmpsl
mov
jb
and
mov
adc
and
xor
push
cmp
inc
push
data16
or
push
rorb
pop
pushl
cmp
and
inc
inc
mov
fcos
xor
or
stos
nop
sbb
shlb
ret
movsb
movups
ljmp
cld
jmp
bound
imul
jae
pusha
enter
jmp
jb
sub
adc
loopne
xor
jp
cmp
mov
loope
sahf
dec
js
add
fcomp
jp
xchg
cmpsl
testb
dec
jbe
xchg
sbbl
loopne
sbb
or
sub
push
lcall
push
push
and
fidivl
pop
or
rcl
outsb
cmp
hlt
mov
or
dec
insl
faddl
cmp
mul
ret
mov
je
testl
add
pop
sbb
sbb
cld
add
mov
push
jno
or
loop
ja
or
lahf
adc
movl
leave
or
add
pushf
loopne
push
insb
movsb
jns
jo
xor
inc
xchg
das
ljmp
pop
add
popa
cli
inc
xor
add
or
lcall
movl
data16
or
rorb
cmp
or
or
mov
aaa
inc
icebp
sub
shr
inc
mov
sbb
jg
push
adc
jmp
rcr
or
lock
mov
dec
cmp
and
out
out
mov
push
cmp
ja
jb
cmp
jbe
dec
fnstcw
adc
rcrb
push
sub
push
bound
jnp
jnp
cmc
jmp
outsb
sbb
sarl
add
imul
or
sub
inc
ret
or
fiaddl
loopne
outsb
in
jge
push
push
xor
cmpl
aad
sub
adc
sbb
sbb
sbb
cs
fcomps
adcb
jmp
fldenv
fcomi
sbb
sbb
adc
test
sbb
pop
mov
test
roll
push
or
xchg
lock
mov
dec
je
adc
cmp
jl
testl
jp
or
mov
add
sbb
jno
mov
jge
mov
ja
push
dec
inc
xchg
inc
pop
sub
adc
shll
adc
xchg
hlt
bound
les
sub
add
and
or
jp
mov
in
in
pop
jae
ss
in
mov
fnstenv
outsl
movsl
or
pop
repnz
sbb
cmpsb
push
les
push
daa
push
mov
adc
xchg
flds
pop
cmp
shll
inc
inc
add
mov
cmp
addr16
call
or
push
dec
sub
and
or
and
or
or
in
jno
addr16
sbb
lcall
add
repnz
add
das
inc
lods
je
test
idivb
cmp
jne
inc
inc
dec
je
or
inc
mov
mov
or
mov
add
sbb
and
jo
pop
in
repz
loop
dec
xorps
mov
adc
cmc
mov
adc
pop
mov
mov
neg
jg
mov
mov
cmp
jne
arpl
cmp
jne
push
adc
sub
mov
cmp
push
and
int
pop
iret
adc
lock
fadds
xchg
rolb
cmp
add
add
add
xchg
sbb
daa
sbb
stos
pop
hlt
shlb
shll
mov
jg
ja
inc
or
push
lods
sbb
xchg
movsl
arpl
jl
add
and
and
jbe
or
addl
or
cld
scas
cmp
sub
sbb
pop
adcb
inc
mov
jge
lods
ret
adc
in
pop
aaa
adc
stos
inc
and
cli
or
test
adc
mov
mov
inc
stc
std
xor
push
dec
add
add
mov
cltd
addr16
add
les
stos
lea
inc
lcall
aas
add
xchg
or
or
xor
loope
or
add
push
int3
sub
push
sub
mov
jmp
clc
or
or
arpl
adcb
xchg
movsl
or
clc
dec
adc
push
add
inc
jp
push
sub
adcl
lea
push
push
loop
inc
add
dec
mov
adc
adc
fsubs
movzbl
inc
inc
cmpb
flds
add
mov
insb
xor
fwait
add
or
data16
and
sub
das
mov
je
jns
pusha
xchg
in
sub
dec
addb
or
or
inc
jle
push
mov
shrb
and
mov
fcoml
add
xor
or
and
mov
cmp
jmp
xchg
dec
pop
shl
adc
push
fisttpl
xchg
cmp
decl
dec
mov
lcall
xchg
outsb
inc
push
cmp
push
cmpsl
leave
insb
add
movl
push
mov
out
test
mov
ret
pop
add
test
mov
push
push
push
pop
in
nop
ret
jge
mov
adc
mov
pop
sbb
je
sub
jo
movl
sbbb
jb
jge
cmp
push
adc
add
and
mov
jbe
pop
shll
loopne
aaa
fnstcw
sub
mov
mov
pushf
jmp
lock
add
push
mov
cwtl
setbe
push
enter
inc
addr16
dec
and
add
jmp
aas
scas
and
inc
push
xchg
push
insb
or
outsl
mov
xor
jge
ret
cli
cmp
cmp
and
push
jne
dec
add
mov
inc
inc
add
sub
inc
outsb
push
and
pusha
mov
cld
pop
inc
inc
xor
fs
push
in
push
add
mov
mov
mov
sub
sbb
sbb
mov
adc
cwtl
loopne
or
hlt
cmp
xorb
push
or
or
lahf
push
lods
add
and
mov
sub
push
mov
fcoms
and
lea
xor
out
jg
or
jbe
xchg
cmc
insb
orl
inc
mov
js
push
nop
sub
call
mov
add
xchg
pop
testb
dec
add
fucomi
dec
sbb
sub
roll
pop
mov
jne
pop
in
scas
sbb
xchg
sbb
push
cmpsl
in
push
fsubrp
push
xchg
add
xchg
loopnew
loopne
jns
xchg
add
sbb
pop
pusha
xchg
das
and
hlt
gs
jno
out
inc
and
movsb
and
or
sbb
leave
add
test
push
cltd
adc
shrl
sbb
push
shrl
push
cltd
imul
aas
pop
jns
sbb
jl
add
jle
mov
mov
mov
cmp
je
lret
adc
es
repz
out
pusha
cmp
adc
xor
adc
cmp
repnz
jne
sarb
jne
xchg
mov
adc
enter
mov
xchg
push
aad
insb
sub
inc
sbb
push
mov
or
dec
push
ret
sbb
or
jmp
dec
add
add
push
adc
and
xor
mov
fiadds
mov
adc
mov
call
and
in
jb
push
clc
add
add
lret
lock
pop
cmp
popl
test
mov
scas
pop
mulb
cmp
or
add
push
mov
shr
loop
pop
or
add
push
sub
lcall
fdivs
sub
pop
mov
xchg
add
mov
adc
inc
adc
jbe
add
sahf
lods
sbb
sti
cmp
sbb
push
addr16
inc
push
in
cmp
or
add
fxch
adc
add
test
adc
aas
lock
testl
dec
les
and
dec
ret
outsl
ss
jecxz
fnstcw
mull
repnz
mov
hlt
ret
xchg
cmpsb
mov
leave
cmp
lock
dec
dec
not
mov
pop
add
loopne
scas
rorb
test
loop
mov
sbb
jae
mov
subb
outsl
and
push
jae
jb
lahf
add
je
xor
xor
push
jmp
test
or
loop
pop
inc
sbb
add
rcll
cmc
enter
or
push
xor
dec
add
int
roll
mov
cld
pop
mov
adc
or
push
sbb
add
cmp
xor
or
inc
mov
xchg
dec
sbbb
sub
ljmp
mov
mov
mov
and
sub
movsb
dec
mov
enter
subl
mov
dec
xor
xchg
dec
cmc
adc
or
das
jge
shrl
mov
xchg
cmp
add
lds
or
xchg
dec
add
adc
add
insb
mov
popf
mov
dec
mov
cmp
pop
mov
mov
in
push
sbb
rolb
dec
movsb
push
cs
sbb
push
shr
aam
mov
or
xchg
xchg
ljmp
pushf
push
jb
fcmovne
xorb
jecxz
mov
popa
mov
sarb
sub
or
mov
ss
mov
es
jl
pop
xor
mov
add
test
and
data16
das
add
rorl
pop
jl
mov
das
lahf
jno
push
nop
ds
mov
sbb
outsl
clc
pop
addb
int
clc
xchg
mull
and
inc
or
nop
stc
adc
pushf
add
out
sub
xchg
bound
mov
xchg
subl
xor
and
fs
push
push
add
xorb
xchg
push
outsl
test
hlt
scas
addr16
push
xor
ret
or
inc
fwait
icebp
pop
mov
and
js
and
jnp
xchg
and
jns
fbld
fcoms
adc
push
sbbb
aad
jge
mov
fcoms
icebp
mov
imul
cmp
sbb
jle
and
or
dec
inc
adc
dec
rcl
scas
push
push
push
mov
mov
pop
imul
repz
add
push
enter
push
stos
scas
pop
inc
dec
adc
mov
pop
pop
les
enter
lret
lea
sbb
or
leave
fwait
push
dec
sub
lahf
add
add
inc
js
fcompl
test
dec
andl
mov
push
shlb
ds
or
leave
or
out
sub
and
or
push
inc
aaa
mov
mov
jns
or
mov
aad
or
lds
fsubrs
aaa
add
int
pop
adc
pop
pop
or
out
xchg
lea
xor
ret
mov
in
sub
dec
lock
pop
lea
es
add
ss
jns
add
cmp
add
lea
push
out
push
fwait
arpl
insb
or
cmc
les
addr16
les
mov
jb
int3
rolb
xchg
in
lds
push
add
add
adc
mov
add
xor
adc
dec
aam
xchg
sub
push
pop
leave
out
out
sahf
add
pop
or
or
loop
shll
xor
out
jo
mov
add
dec
lea
cmp
mov
imul
int
mov
pop
lea
sbb
xchg
adc
data16
lea
data16
int3
or
das
int
pop
pop
int3
leave
push
inc
adc
sbb
adc
and
sbb
fs
cmp
fs
fs
jge
xor
or
jne
or
push
mov
xor
adc
jbe
sbb
into
or
xchg
js,pt
int3
jae
xor
inc
pop
and
or
jl
pop
xor
andl
pusha
call
insb
ret
pusha
pusha
xor
jbe
fimuls
mov
xchg
shlb
stos
fisttpl
xor
push
ret
faddl
xor
xor
sbb
data16
xor
je
fstp
jbe
popa
inc
js
jne
inc
les
imul
in
cltd
fisubrs
lea
daa
dec
pop
ret
dec
fwait
inc
lahf
mov
jo
and
pop
mov
call
adc
movsb
leave
jne
aas
dec
ret
orl
sub
and
xor
arpl
mov
fdiv
movsb
pop
lret
xor
lret
test
dec
dec
xchg
and
jae
add
push
and
int3
sbbl
pushf
or
mov
xchg
in
jne
pop
jg
xlat
bound
mov
jno
sub
fimuls
and
push
or
shrl
push
out
test
lea
add
xchg
fsub
mov
adc
and
inc
or
pop
sub
cli
lock
repnz
mov
lea
xor
or
sub
mov
fxch
cmp
or
leave
sbb
xchg
mov
and
mov
in
adc
mov
inc
mov
jmp
mov
mov
or
loope
imul
outsb
fdiv
inc
lea
ret
leave
and
and
dec
cmp
sbb
jne
in
addr16
cmp
add
jecxz
movsl
outsb
or
fwait
inc
movsb
xchg
pushf
xlat
add
gs
sub
push
loop
pushf
xchg
bswap
test
je
mov
add
imul
mov
xchg
sub
xchg
xchg
jle
ret
aad
sub
xchg
lret
push
int3
add
jp
inc
and
mov
cmp
push
jmp
out
dec
mov
or
daa
push
xchg
clc
bound
enter
sbb
fnop
in
mov
push
mov
and
or
addb
add
pusha
push
add
or
push
sti
insb
mov
xor
mov
loop
jno
adc
xor
sub
rcrb
aaa
dec
fs
push
test
nop
or
enter
fcomps
lods
xor
mov
or
inc
ds
mov
jl
or
jae
mov
divl
roll
jo
mov
jo
xchg
cwtl
fldcw
fwait
add
sub
and
call
dec
inc
push
enter
addr16
fwait
mov
or
lds
movsb
mov
int3
mov
int3
pusha
lods
sbb
adc
leave
and
int3
orb
cmp
pop
subl
push
pop
push
fidivs
xor
dec
call
lea
mov
pop
mov
add
sub
dec
loopne
sti
shrb
aam
dec
mov
lea
ljmp
ret
xor
inc
jne
cmp
addr16
xor
add
jp
out
add
adc
sub
and
sub
cwtl
jns
add
sub
or
mov
push
sbb
arpl
mov
test
inc
inc
cmp
add
and
sahf
adc
cmp
pop
cmp
xchg
xor
xor
or
xchg
test
lcall
fs
inc
push
cmp
jl
jo
adc
jl
or
push
inc
js
inc
mov
or
test
adc
leave
xor
and
je
shll
js
inc
shll
pushf
push
jmp
xchg
cld
popa
mov
scas
repnz
out
je
mov
and
repnz
outsb
jno
das
shlb
lods
or
movsb
pop
shrl
data16
add
out
mov
negb
add
add
add
sub
imul
add
and
add
pushf
xor
sub
cmpsl
add
movsl
pop
imul
or
in
mov
sbb
push
pop
jne
inc
stos
push
add
pop
jns
xor
add
add
add
add
xchg
pop
push
push
or
or
add
push
or
jo
adcb
sbb
add
xchg
or
pop
mov
in
jl
sbb
or
dec
mov
jle
mov
or
lahf
mov
dec
arpl
movl
subl
call
jmp
jmp
daa
and
shll
cmp
dec
stos
lods
aaa
add
pop
inc
xchg
mov
sub
leave
dec
sbb
xor
push
popf
or
sub
or
lea
push
pop
or
mov
pop
not
push
sub
inc
pop
lds
bound
mov
xor
xor
outsb
sub
cs
enter
iret
test
call
fistpll
xchg
dec
filds
lock
push
lds
sbb
cmp
add
cmp
or
inc
inc
lock
lock
mov
icebp
out
aaa
inc
push
stc
pop
sub
hlt
iret
hlt
iret
and
sbb
or
xor
push
mov
cmp
fsubrl
xor
leave
ret
das
xor
div
and
xchg
rsqrtps
xchg
cmp
lods
test
int
mov
cmp
inc
adc
cmc
push
arpl
ret
push
jge
push
in
mov
aas
out
xor
das
pop
xlat
or
lods
mov
mov
jmp
stc
ret
fmuls
mov
sbb
faddl
cmp
hlt
lods
outsl
out
test
push
mov
inc
pop
mov
shrl
sub
and
and
ss
fnstenv
mov
rcrl
push
push
das
ljmp
sub
das
out
rcr
loope
xchg
enter
adc
dec
push
les
insl
pushf
fisttpl
scas
pop
das
lods
dec
ficoml
xlat
ds
or
lret
jbe
sub
mov
iret
pop
dec
lock
sbb
push
scas
cmp
jae
pop
inc
clc
inc
mov
or
aam
add
lock
inc
je
cmp
cmp
sbb
push
js
mov
xor
push
out
mov
bound
mov
adc
mov
in
decl
bnd
cmp
push
mov
add
scas
inc
iret
push
shl
inc
cmp
inc
test
leave
fs
pop
inc
push
cltd
xor
addr16
inc
jbe
adc
pop
arpl
hlt
jb
mov
addb
js
out
cwtl
add
xlat
push
in
push
dec
xor
popa
mov
sub
push
sub
push
test
and
mov
in
lahf
or
inc
push
sbb
sbb
call
inc
out
inc
lcall
imul
sbb
or
fmull
mov
pusha
fcompl
ss
pushf
sub
and
gs
outsb
pusha
inc
ds
sbb
ret
lcall
es
sbb
dec
pop
mov
and
enter
jo
enter
add
ss
out
out
loopne
fdivl
jb
fcom
ror
int3
dec
xchg
fildl
mov
fs
hlt
out
cmp
bswap
add
out
push
inc
lahf
sbb
loop
sbb
cmp
jne
push
sbb
mulb
sub
or
or
or
xchg
adc
pop
mov
call
outsl
inc
add
mov
mov
push
inc
testl
pop
fs
cs
fs
pushw
es
in
sbb
add
or
mov
cmpl
push
sbb
jp
andb
or
jae
mov
or
out
mov
cmp
adc
fiadds
and
mov
pop
aad
mov
sub
dec
ds
lds
push
and
xchg
or
stc
stos
adc
mov
and
sub
sbb
bound
mov
xchg
int3
sbb
imul
dec
xor
iret
sbb
roll
dec
outsl
add
or
add
jge
out
add
fdivs
enter
mov
and
xlat
sub
mov
fwait
movsl
and
arpl
sbb
mov
xchg
sbb
add
sbb
ret
lock
lahf
cwtl
mov
mov
mov
outsb
pop
mov
adc
pushf
sbb
cmp
add
and
ja
ror
or
dec
push
xor
push
test
mov
rcll
add
hlt
repnz
insb
pop
add
add
add
lds
dec
enter
pop
hlt
inc
mov
in
lea
or
call
stos
jns
and
out
in
ret
add
mov
loopne
ja
lret
int3
cmp
enter
enter
das
in
sub
jle
int
daa
faddl
ss
push
push
add
ret
xor
sub
out
int
fdivrs
paddb
mov
push
aam
xor
sub
enter
jmp
sahf
popa
add
pop
push
flds
sbb
call
fbld
fimuls
je
jnp
sbb
movsb
sub
add
sub
xchg
adc
sub
loopne
in
push
dec
jnp
dec
insb
shrb
hlt
mov
sbb
in
fsubrp
sub
and
fdivrl
aas
add
je
ret
jecxz
pop
fisttpl
xchg
add
or
cmp
sbb
rcll
mov
add
push
xor
cld
ret
cmp
cld
arpl
mov
daa
jp
xchg
or
inc
adc
push
dec
push
hlt
cs
sbb
jle
mov
pushf
pushf
xchg
and
or
aas
fwait
loop
lock
and
mov
orl
mov
rcrl
pop
xchg
adc
or
int
cmp
sub
push
sbb
mov
jmp
pop
jne
jp
mov
or
stos
and
cmp
pop
test
orl
je
test
xchg
sbb
xchg
cmc
imul
in
ss
mov
jae
dec
or
ficoml
add
dec
xor
faddl
daa
mov
sbb
mov
push
mov
sarl
jp
insb
mov
and
mov
mov
push
mov
cmc
pop
std
sbb
mov
cmp
jg
xchg
and
xchg
repnz
fptan
loop
inc
add
inc
or
mov
lods
push
lret
mov
sbb
sbb
sbb
pop
adc
shrl
dec
and
or
add
jmp
fildll
or
ret
mov
push
movsb
lock
adc
and
pop
mov
push
mov
mov
imul
fdivs
push
cmp
cmp
lock
loopne
int
addb
cmp
mov
push
xchg
inc
xchg
mov
and
lea
pop
test
dec
les
jmp
or
sub
out
aaa
fs
jmp
outsl
jmp
mov
pop
loop
sbb
je
rclb
pusha
daa
pop
int3
inc
add
mov
or
fisttpll
scas
in
mov
pop
mov
add
inc
imul
andl
add
cmp
ftst
lea
jne
scas
adc
and
push
mov
movsb
add
xor
enter
and
fldenv
cmp
enter
jne
pop
mov
mulb
js
test
push
outsl
nop
inc
cmp
lds
xchg
daa
pop
cwtl
and
addl
mov
int3
and
ret
popa
adc
test
dec
sbb
sbb
dec
in
clc
std
inc
lock
adc
jnp
ret
sub
sub
sti
lds
rolb
or
cmp
mov
add
popa
xchg
cmp
ss
hlt
sbb
sbb
mov
jle
pop
roll
in
dec
mov
cmp
mov
movsb
sub
call
and
mov
pop
add
adc
xchg
or
pop
adc
ds
xchg
fsubrs
aaa
test
sbbb
sbb
mov
cmpsl
sbb
mov
jp
enter
ljmp
cmp
mov
dec
cwtl
adc
aam
aam
mov
pop
mov
inc
nop
gs
mov
hlt
jo
js
test
popf
xchg
dec
lock
sub
push
roll
pushf
ss
enter
in
in
xor
lods
mov
loop
mov
mov
xchg
pop
xchg
shr
sbb
push
call
call
xchg
inc
or
sub
and
shlb
mov
add
movsb
xchg
movsl
jmp
int3
ret
push
les
shll
jle
into
enter
jmp
call
or
shlb
popf
rcll
es
xor
sbb
ret
mov
sbb
sub
jmp
and
xchg
add
push
or
cmp
loope
add
push
xchg
call
into
inc
push
movmskps
dec
inc
dec
int3
inc
mov
xchg
xchg
mov
xor
out
scas
or
test
or
push
push
mov
sub
roll
jae
dec
clc
cmp
adc
or
pop
in
in
push
test
add
into
ds
gs
or
inc
push
leave
loopne
and
test
aam
xor
shll
mov
lea
sub
nop
addr16
repz
push
cmpb
repnz
mov
push
and
out
fwait
mov
push
xchg
loopne
loopne
mov
or
fs
movsl
mov
and
or
mov
sbb
or
and
cmp
jno
les
daa
mov
push
ffreep
enter
sbb
addr16
or
jmp
mov
cmp
and
xor
fsubrs
ja
push
push
adcb
shll
cmc
jmp
rolb
inc
inc
clc
inc
sbb
or
nop
jle
mov
and
lret
icebp
stos
mov
and
push
outsl
cmp
inc
mov
or
xchg
or
mov
fsts
addb
jne
xchg
push
shll
test
sub
in
int3
sub
sub
adc
addl
mov
mov
add
add
jmp
and
add
pop
dec
or
push
pop
add
pop
add
sub
adc
add
dec
mov
push
jnp
push
xlat
sub
stos
mov
in
lcall
cli
enter
add
mov
jns
add
jge
add
call
cmpsb
rolb
xchg
xchg
pop
adc
pop
hlt
ja
hlt
add
mov
jmp
push
fisttps
pop
adc
scas
mov
or
pop
pop
adc
aaa
push
mov
mov
es
sub
cwtl
jp
test
mov
adc
sbb
jg
pop
mov
xchg
add
int3
sub
shlb
mov
adc
sti
xchg
adc
inc
data16
push
sar
or
and
push
shrb
ret
xchg
orl
divb
clc
xorb
cmc
or
xchg
pop
jae
xor
lcall
test
pop
sbbl
push
mov
mov
and
jge
or
cld
dec
sbb
rolb
or
frstor
or
push
insb
fsts
mov
aaa
push
test
inc
cmp
jno
loope
mov
mov
pop
adc
mov
mov
or
dec
aas
aas
lea
js
dec
inc
sarl
pop
add
sub
jmp
and
sbb
and
mov
mov
jge
lret
mov
or
mov
push
and
mov
push
movsl
test
or
jo
or
cs
je
adcl
je,pn
sub
jge
addl
or
stos
seta
mov
lock
or
outsb
dec
adcl
and
mov
push
mov
push
mov
jbe
sarl
fdivl
aas
in
add
sbb
pop
cmp
andb
out
shrb
push
lods
mov
mov
enter
push
imul
pop
and
jne
mov
inc
mov
js
mov
push
mov
pushf
ret
sub
arpl
cmp
push
in
rcrb
sbb
xchg
mov
jb
jecxz
jecxz
inc
in
sbb
xchg
lret
dec
xchg
loopne
cmp
pop
add
daa
inc
add
paddb
and
test
xchg
and
jo
mov
jne
data16
xlat
or
jp
push
pop
jo
and
loope
and
sub
and
out
pop
je
sub
cld
sub
jg
inc
dec
dec
in
jo
cwtl
add
add
jg
or
and
jmp
cmp
or
inc
adc
push
inc
add
xchg
fiadds
pop
aaa
sbb
sbb
mov
cwtl
gs
fstps
sbb
and
sbb
loope
and
sbb
rolb
fcomps
je
cld
dec
dec
add
lds
jb
roll
js
adcl
pusha
loop
shrb
add
divl
mov
data16
ret
lock
loopne
jne
add
int
ret
cmp
push
mov
pop
pop
das
fdivrl
mov
push
add
push
inc
adc
mov
es
inc
sahf
sub
jno
or
shlb
cmp
mov
jns
xorl
lods
adc
rorl
and
arpl
cmc
sub
shr
inc
mov
inc
inc
rcl
shr
dec
outsl
add
and
sbb
btc
orl
cmp
shlb
mov
out
daa
cmp
bsr
add
xor
cmp
adc
imul
jge
xchg
mov
add
rclb
in
push
xchg
in
push
ror
enter
inc
adc
imul
inc
test
sub
jno
cmp
popf
fnstsw
jbe
fdivrl
aaa
dec
add
cmp
mov
push
mov
add
and
jmp
in
mov
fdiv
fs
test
enter
loopne
xchg
mov
jbe
pop
mov
lods
insl
pop
mov
mov
sbb
sbb
rol
inc
jnp
rcr
int
jp
adc
and
lahf
in
outsb
mov
or
jo
test
push
pop
mov
andb
xchg
push
loop
addr16
jle
mov
and
or
or
cmp
sti
and
push
adc
pop
shlb
cwtl
rol
clc
and
sub
xchg
in
fcomp
fmuls
xchg
in
and
hlt
das
int3
hlt
dec
inc
xchg
inc
aam
aam
ret
push
xor
mov
or
int
mov
inc
and
sbb
inc
addl
push
fs
aam
sbb
insb
sbb
and
xor
xor
push
sbb
aam
xchg
mov
sbb
sub
jmp
int3
sub
sbb
sbb
sub
dec
add
pop
insb
or
and
adc
jle
xchg
mov
ret
negl
dec
in
xchg
or
enter
and
pop
mov
cmp
aam
fdivs
sbb
fsubrs
xor
fmuls
ja
sbb
pop
sbb
xchg
cltd
adc
or
in
adc
stos
adc
lret
adc
call
add
imul
inc
mov
mov
adc
add
push
inc
cld
int3
test
or
dec
or
push
xor
adc
and
mov
fcmovb
xor
xchg
ret
int3
inc
or
inc
mov
adc
and
xchg
adc
xlat
xchg
int
or
pushf
or
and
dec
push
adc
js
adc
push
ret
add
pop
sti
adc
rcll
adc
dec
pop
ficomps
imul
or
sbb
mov
sub
orl
imul
push
or
stos
jle
mov
rcrb
push
nop
aam
stos
and
pop
pop
call
sub
lcall
ljmp
lahf
mov
and
push
inc
adc
inc
add
jbe
pop
mov
aam
and
lock
inc
mov
and
cmp
or
jo
mov
aam
sbb
fistpl
vmovlps
cmp
xchg
in
mov
push
inc
push
ret
dec
mov
ret
inc
shrl
mov
fldenv
leave
test
outsl
outsl
loop
dec
imul
fs
push
pop
fcmovnb
dec
fbstp
push
iret
lods
adc
add
sub
dec
inc
test
shlb
push
sub
clc
push
cmpl
and
xchg
inc
sbb
add
add
pushl
in
in
cmpb
xor
movsb
mov
mov
cmc
shl
xor
ror
pop
lods
data16
adc
or
and
add
mov
add
dec
loopne
rorb
and
xchg
pop
jl
aam
and
scas
in
jmp
ficoms
rolb
mov
fsubrs
inc
int3
sar
inc
adc
jle
sbb
adc
cmp
dec
mov
fmul
and
pop
ja
loopne
lret
and
ror
ror
enter
add
loopne
loopne
or
mov
mov
pushf
pushf
call
pop
adc
jo
and
popa
lock
ror
pop
enter
fsub
call
call
leave
enter
jbe
int
push
sti
jmp
push
hlt
cmpl
or
pop
mov
mov
or
aas
in
call
mov
inc
adc
mov
push
sbb
shlb
in
int3
sbb
daa
es
rcrl
into
sub
xor
pop
jae
push
outsb
sbb
sub
out
pop
adc
sub
add
cltd
or
addl
pop
jae
push
arpl
adc
xor
in
sub
mov
fsubs
jns
and
in
insl
sbb
mov
lret
add
pop
push
iret
dec
or
adc
pop
and
mov
loopne
sqrtps
inc
push
aas
mov
dec
mov
adc
aam
shlb
jno
inc
cmc
inc
test
shlb
clc
daa
ljmp
or
roll
or
dec
shl
push
ds
cmp
or
jbe
add
and
add
mov
rorl
rclb
andl
cmp
bound
inc
sbb
xchg
fisubrs
negl
cmp
pop
and
movl
cmc
dec
pop
sub
adc
add
add
sub
shl
test
xchg
fsubr
out
aam
pop
inc
xchg
hlt
xor
lock
xor
jge
dec
sbb
jnp
es
push
repnz
rcrl
loop
test
xchg
andl
adc
sub
inc
adc
ja
leave
jp
cmpsb
fldl
mov
mov
ret
or
push
adc
ja
adc
adcb
cs
xor
fistpl
lock
insl
sbb
push
loopew
stos
dec
cmp
in
and
rcrl
iret
int
jo
add
insl
or
or
jb
sbb
and
in
and
sbb
add
sub
mov
sti
sub
nop
adc
inc
adc
xor
nop
jmp
mov
cli
fildl
sti
push
stos
gs
xchg
or
mov
lods
and
in
aaa
sbb
push
xchg
xor
push
loope
add
mov
in
inc
mov
adc
jb
sub
int3
in
popf
lods
cmc
cld
xchg
jmp
lock
mov
lock
mov
daa
jo
faddl
sbb
xchg
mov
dec
fcoms
mov
mov
imulb
inc
loopne
rolb
fs
rcl
ljmp
stos
pop
bound
nop
loopne
rcrb
dec
jb
rcl
mov
rclb
and
pop
leave
loopne
aam
popa
enter
sub
pop
adc
and
add
pop
dec
inc
add
inc
adc
aam
aaa
js
push
or
call
adc
loopne
sti
pop
mov
xchg
pop
jbe
test
pop
into
test
mov
push
shr
enter
loopne
rcl
sub
leave
adc
movsl
ljmp
ljmp
in
inc
sahf
xor
in
in
or
xchg
or
mov
cmp
cmp
xor
fsubs
negl
inc
insl
adc
cmp
xorb
dec
adc
and
pop
clc
aaa
cmp
call
pop
add
in
sbbl
enter
rcr
rcr
cmp
inc
das
or
or
xchg
pushf
or
lea
pop
pop
push
push
xor
fsubl
rcll
rcrl
pop
shll
push
ljmp
das
sub
inc
mov
mov
sahf
push
cmp
enter
je
mov
push
lock
rcll
sub
inc
mov
add
loopne
add
jp
and
sub
and
sub
push
addr16
in
mov
or
fsubrs
add
jbe
sbb
lods
test
mov
fstps
in
or
mov
rcll
in
int3
or
and
test
sub
dec
aaa
mov
jno
xor
xchg
or
sbb
fcoms
rorb
lret
mov
out
adcl
rclb
cmc
stc
mov
enter
js
and
adc
test
add
lods
add
sahf
mov
cmpl
cli
lea
push
data16
es
jae
cmp
and
xor
repz
mov
mov
xchg
punpckhbw
jl
orb
lock
adc
ret
push
cltd
in
jnp
jmp
and
and
fsts
inc
cmp
shlb
inc
adc
push
mov
loopne
fcmovu
sbb
mov
jb
call
add
nop
in
in
testb
stc
mov
cwtl
insl
sub
scas
and
stos
rorb
mov
aas
lahf
movsb
xchg
int3
test
add
out
jo
adc
jecxz
xor
jnp
add
add
ret
notb
sbb
ud2
or
jecxz
pushf
ret
add
or
add
push
push
je
add
adc
pop
adc
imul
or
jmp
adc
xor
and
jne
cmc
and
and
add
fdivs
xchg
xchg
gs
rorl
repz
mov
loope
mov
inc
push
bound
outsb
adc
xor
aad
push
sub
stc
mov
pop
mov
pop
jmp
xchg
sbb
orl
pop
sbb
sbb
scas
jne
cmp
adc
mov
test
stc
int3
rolb
sbb
int3
fcmovnu
loop
adc
sub
push
in
add
loope
xchg
or
stos
dec
push
rcr
fdivrp
cmc
fcmovb
push
or
das
into
scas
jnp
add
sub
cld
ret
fnstenv
std
popf
arpl
cmp
and
mov
sahf
scas
iret
push
out
push
and
mov
and
or
filds
das
inc
dec
add
pop
adc
jl
aas
adc
jge
adc
mov
cli
mov
fwait
ljmp
jno
ds
xorb
repnz
push
inc
push
cmp
or
and
test
filds
jnp
loopne
add
push
jge
adc
jmp
xchg
mov
jge
inc
add
insl
inc
lock
mov
jno
adc
jns
pop
mov
adc
add
push
pmulhuw
cmpsl
push
lds
mov
add
add
xchg
xor
mov
fldt
or
ja
or
jmp
xchg
lock
add
or
popa
inc
xlat
nop
sbb
mov
or
enter
mov
sub
sub
add
std
inc
or
dec
adc
cmp
add
leave
add
or
addr16
stc
cmp
movsb
mov
mov
cmp
push
loope
cwtl
or
popa
lea
lock
add
sti
cmp
je
push
wrmsr
dec
adc
mov
cmp
sbb
lds
cwtl
ss
cmp
loope
leave
addl
test
inc
or
inc
mov
scas
stos
test
mov
cmpsl
and
adc
shlb
inc
xor
sbb
notl
adc
or
add
arpl
scas
add
push
int
mov
jnp
andl
iret
les
cmp
daa
xchg
inc
adc
and
xchg
cmp
add
or
je
popf
adc
add
jp
andb
lahf
roll
sbb
shrl
adc
sub
lret
jo
shlb
and
clc
pop
popa
add
imul
cmp
mov
loope
icebp
mov
popa
push
and
cmp
or
pop
sub
add
push
lret
xchg
iret
rol
xor
xor
mov
adcb
sbb
cmp
enter
hlt
mov
add
mov
mov
jmp
in
mov
stc
hlt
inc
mov
inc
sbb
xor
adc
sti
jno
adc
divl
push
sub
dec
add
add
mov
add
cmp
ss
notb
xchg
xor
pop
cmpsb
and
push
aas
add
and
loopne
sub
add
or
les
inc
or
mov
add
xchg
push
xor
mov
mov
push
mov
cld
jb
lods
pushf
cld
and
insb
push
or
jne
sub
lds
cmp
mov
push
in
stos
add
ret
test
adc
shrb
sbb
cld
mov
add
xor
sub
inc
sbb
pop
adc
rcrl
mov
sub
popf
lcall
jne
inc
cwtl
and
adc
add
jp
scas
pop
push
cwtl
pop
cmc
ja
push
xor
xor
clc
into
je
js
mov
adc
or
cmp
jne
inc
or
js
push
jg
fisubrs
daa
sbb
into
sub
cld
test
mov
pushf
or
inc
stos
cli
sbb
pop
and
mov
lcall
out
loop
mov
cmp
mov
sub
inc
push
dec
sub
in
jecxz
adc
dec
push
orl
popa
je
mov
outsl
out
add
je
jmp
in
mov
scas
xor
sbb
add
fwait
in
adc
sbb
add
lret
push
lret
stos
and
ljmp
adc
aam
dec
add
cmp
inc
mov
xchg
andb
xchg
out
fsts
adc
push
xor
push
add
shll
fwait
or
ja
inc
movsb
rol
jnp
push
fwait
andb
out
jmp
fidivs
jp
and
orl
shl
mov
sbb
out
test
leave
call
and
push
dec
jmp
mov
out
add
ret
add
push
or
call
inc
ret
mov
ret
xor
inc
inc
js
mov
movsb
push
push
push
scas
add
push
mov
out
sbb
cmp
or
adc
notb
inc
das
adc
ljmp
push
nop
outsl
sbb
repz
pop
clc
aad
shll
xchg
add
xchg
clc
inc
cmpsb
jmp
faddl
or
ret
add
lar
add
jns
or
or
xor
and
movsb
mov
cmp
cld
je
sbb
and
es
sbb
add
cld
push
dec
cmp
dec
mov
ljmp
ja
jmp
and
inc
or
clc
push
or
test
xchg
movsl
or
ss
cmp
and
addl
push
in
add
add
leave
fs
cmp
sbb
xchg
cmp
adc
or
or
sbb
add
dec
add
push
mov
dec
and
aaa
iret
mov
int3
fbstp
mov
popf
pop
fs
pusha
in
lock
jl
mov
nop
push
sub
orl
outsl
push
stos
sub
or
sub
push
adc
mov
ds
push
rclb
out
mov
and
xchg
ret
rclb
movsb
add
and
imul
sbb
fwait
lds
and
add
or
clc
push
icebp
adc
ds
mov
and
pop
push
arpl
hlt
inc
adc
pop
enter
cmp
push
sbb
jne
mov
insb
jae
aad
mov
mov
inc
mov
inc
adc
aad
stos
sbb
mov
or
adc
scas
sbb
mov
pop
sbb
inc
aaa
jp
or
mov
xor
inc
sysexit
loope
or
test
adc
mov
fdivl
mov
inc
mov
sbb
sbb
add
repnz
jmp
sbb
xchg
lret
add
push
add
lcall
adc
mov
inc
cmp
or
int
push
aam
xchg
or
push
pop
add
pop
pop
add
adc
sub
and
mov
mov
jmp
xor
adc
dec
push
cli
inc
add
add
pop
and
cmp
mov
or
lret
btc
ret
daa
loopne
sub
inc
fcomip
mov
jo
add
push
hlt
mov
push
aam
repz
in
loope
fs
and
add
add
push
aad
inc
ret
sub
fnstenv
lods
dec
xchg
or
mov
out
push
mov
or
lea
or
lret
jg
pop
ja
daa
fstp
sub
jae
push
xchg
in
loop
mov
popf
push
mov
pop
inc
xchg
iret
sahf
or
sbb
push
fstl
sti
mov
jmp
push
enter
call
push
orl
inc
out
add
lods
lea
jbe
cmp
push
jge
addl
dec
repnz
push
je
add
adc
sub
or
imul
fcomps
or
ljmp
pop
leave
add
cs
add
roll
xchg
push
addb
mov
jge
xchg
or
and
sbb
push
add
dec
sub
mov
add
lea
inc
cmp
fsubrl
sbbb
xchg
sbb
int
orl
mov
jbe
or
inc
fstp
jne
fmull
insl
clc
std
ret
fstpl
push
ds
loopne
les
roll
jae
pop
ret
pop
mov
push
mov
push
push
mull
daa
pop
push
add
pop
jo
inc
pop
in
pop
jmp
hlt
sub
mov
mov
push
popf
scas
ljmp
xchg
mov
hlt
jmp
dec
xchg
add
or
sbb
mov
aaa
or
add
adc
js
add
in
inc
cld
xchg
xor
sub
sbb
adc
sbb
mov
shll
or
fisubl
jae
or
sub
je
inc
dec
ror
addb
test
ljmp
jne
ljmp
adc
push
mov
pusha
ss
or
addb
fmuls
push
fnstcw
fldl
adc
add
mov
and
push
cmp
icebp
sbb
cmp
mov
stos
xchg
out
adc
pop
jl
inc
mov
push
insl
inc
push
iret
sub
in
sub
aam
lea
js
push
adc
cltd
in
popa
repz
adc
jmp
aas
sar
gs
lahf
ret
mov
or
mov
and
sbb
and
adc
lods
sbb
jne
pop
pop
adc
cmp
push
int
sbb
leave
pop
or
popf
inc
jne
sti
fsubl
adc
inc
sbb
jne
sbb
mov
jle
sub
das
pop
push
sub
adc
dec
xchg
push
les
ficompl
rolb
adc
es
stc
inc
sub
sub
cmc
cmp
inc
xor
add
push
push
inc
sub
xor
sti
inc
sbb
add
cmpsb
outsb
clc
xchg
xor
fs
mov
filds
sub
sub
sbb
ret
ret
xor
or
adc
and
out
in
adc
push
add
mov
cmp
ja
sbb
out
cmp
inc
xor
or
pusha
mov
mov
adc
adc
jns
lret
clc
jne
xor
pop
lds
cmp
push
aam
gs
lret
push
andb
ds
sub
lds
or
adc
jg
push
and
pmaddwd
mov
cmp
and
or
adc
out
push
std
cmp
mov
mov
xor
mov
pop
jns
pop
movb
push
or
ficoml
test
xor
lds
xor
adc
push
inc
mov
loopne
or
push
push
sub
inc
aaa
or
nop
mov
andb
and
jo
arpl
movsb
enter
and
xor
adc
fbstp
mov
sti
test
sahf
int3
cmp
jl
sbb
and
sahf
inc
jge
mov
cmp
rclb
add
mov
mov
lock
xor
sub
adc
gs
or
adc
cmp
and
data16
mov
data16
lds
inc
in
mov
imul
mov
or
hlt
lods
or
jnp
daa
xchg
loop
loop
mov
xchg
sub
pusha
push
enter
pop
push
aam
mov
scas
jne
pop
mov
aad
adc
shr
mov
jb
add
movsl
jp
jmp
out
or
ljmp
or
sub
ret
test
gs
and
enter
repnz
push
jb
loope
sbb
mov
nop
sbb
rol
and
das
daa
dec
dec
popf
or
mov
lahf
arpl
sbb
mov
testl
jne
or
adc
push
jnp
fsubrl
ss
sub
xor
add
mov
loopne
fisubs
cltd
and
push
aad
dec
push
mov
mov
push
push
adc
cmp
add
or
rclb
pop
adc
dec
fmull
pop
orl
shll
bound
dec
fcoml
in
pop
mov
in
dec
jp
es
in
fcoml
cmp
adc
ss
mov
cmp
fcomps
and
aam
int
sbb
fmull
or
adc
dec
je
mov
sbb
ds
cmc
add
nop
add
lahf
int3
push
int3
mov
loopne
enter
inc
inc
adc
std
jecxz
neg
out
test
cs
add
fldz
or
push
fcoml
outsl
xor
jmp
sub
int3
aam
dec
ds
push
xor
push
pop
sbb
push
ja
rorl
mov
outsl
sub
adc
shrb
aad
mov
lcall
in
dec
cmovno
mov
or
push
add
jl
movsb
jnp
in
add
push
xor
cmp
sub
dec
jbe
xor
push
jmp
insb
loopne
push
cltd
xchg
add
inc
popl
insl
add
and
sub
sub
notb
add
add
js
andb
es
or
jmp
push
dec
jle
cmp
ljmp
adc
push
outsb
mov
stos
pop
add
je
popl
mov
subb
mov
mov
add
sbb
xchg
stos
or
inc
stos
leave
and
pop
sahf
nop
add
sub
jmp
les
adc
or
mov
add
and
and
mov
push
pop
add
and
jle
subl
addl
imul
jae
push
xor
inc
mov
add
fisttpll
faddl
sbb
mov
movb
jb
shr
add
jnp
imul
lea
loopne
imul
int3
add
dec
mov
inc
pop
xor
fsubrl
fs
xor
adc
add
adc
fstp
push
or
push
dec
ret
out
adc
jmp
outsb
cmpl
mov
mov
cmovl
mov
dec
dec
lahf
mov
ja
adc
mov
or
or
rcrl
adc
ja
out
xor
dec
cmp
fsubl
and
sub
pop
pop
cmp
inc
aas
stos
inc
xchg
cmp
aas
fcomp
fcomp
pop
push
rorl
insb
cwtl
in
fcoms
sub
cmp
cmp
mov
push
xchg
aaa
movsl
jmp
enter
xor
lret
test
xlat
das
push
push
test
jmp
or
cmp
adc
xchg
pusha
movl
cs
gs
xor
jmp
or
jnp
test
int
add
jne
push
movsl
jae
frstor
jmp
pop
std
cwtl
or
int
cld
jne
and
lock
pop
cmp
adc
and
cld
adc
push
jne
inc
push
imul
mull
jle
add
inc
lret
mov
mov
xor
aaa
dec
rorl
and
insb
push
push
shrl
add
popf
add
iret
lods
push
mov
cwtl
inc
push
xor
sbbl
or
sbb
jge
cld
or
add
iret
sbb
xorb
sub
adc
add
pop
in
mov
es
in
or
sub
sub
mov
or
movb
shll
push
std
add
sub
mov
inc
mov
fs
dec
lcall
ja
movb
jmp
jmp
rorb
mov
lea
gs
pop
jl
orl
xorb
add
sub
inc
xchg
xor
sub
sub
je
cli
xor
or
inc
and
aaa
rolb
test
test
cwtl
mov
inc
xchg
dec
movsb
aaa
add
mov
dec
or
clc
repnz
divl
or
pop
sbb
leave
mov
repz
mov
xorl
fs
sbb
cmp
add
and
inc
and
lahf
cmp
jb
or
xor
in
mov
adc
xchg
sbb
pop
les
xor
sbb
or
add
and
shl
push
jno
insb
cs
std
xor
xor
fiadds
add
xchg
xor
sbb
out
lds
cmp
and
test
adc
cmp
add
enter
icebp
mov
incl
imul
push
cmp
xor
sub
pop
push
mov
push
int3
fucomp
add
mov
cli
xchg
shlb
popa
adc
add
repnz
popa
jp
mov
and
add
in
mov
mov
enter
add
or
and
mov
add
or
xchg
or
inc
jno
lock
jp
pop
stos
and
in
out
out
cmp
adcl
jns
add
loop
push
or
fnstsw
adc
inc
arpl
sbb
add
lock
add
pop
insl
push
testl
das
or
push
jne
lcall
rcrl
daa
adc
push
adc
nop
xchg
clc
je
push
adc
bound
and
mov
out
push
push
cld
cmp
jae
cld
fwait
cmpsb
add
or
and
mov
xchg
addb
hlt
fmull
cwtl
dec
call
outsb
mov
xorb
hlt
outsl
addr16
ljmp
xorb
adc
shrl
idiv
adcl
dec
add
jne
stos
mov
lock
inc
hlt
test
ljmp
fld1
fsubl
or
sbbb
sbb
imul
les
in
mov
mov
and
push
ret
jo
mov
or
add
mov
leave
in
sub
mov
add
and
sub
rclb
adc
fiadds
shlb
js
jbe
mov
adc
mov
roll
jp
add
inc
aaa
cmp
sbb
jns
inc
xor
cltd
sub
cmp
addl
dec
add
xor
js
xor
out
add
mov
mov
add
in
sbb
ds
movl
loopne
add
cmpl
xorl
mov
iret
lods
sbb
nop
or
pop
adcl
dec
inc
pop
cmp
sahf
test
xchg
or
push
jns
fs
inc
inc
lea
sbb
cwtl
cmp
mov
in
leave
jno
bsr
mov
cs
inc
or
xor
cmp
pop
xchg
test
dec
iret
jl
iret
dec
xchg
sub
notb
xchg
inc
push
mov
jae
mov
sub
lcall
into
cmp
or
pop
inc
and
or
mov
leave
ljmp
adc
leave
or
je
out
pop
inc
out
adc
dec
cmp
or
pusha
jmp
push
add
dec
push
lods
dec
push
pop
and
insb
adc
outsb
sbbb
and
faddp
sub
ss
shll
or
mov
sbb
add
cmp
test
enter
call
lret
push
subl
mov
sbb
fs
aaa
or
pop
in
cmp
dec
lock
data16
rolb
add
xchg
inc
push
je
imul
xor
gs
xlat
jl
mov
push
add
inc
aam
sub
test
adc
and
popa
add
and
cmovg
inc
sub
js
or
add
rclb
cltd
test
sub
and
adc
andb
mov
lcall
push
adc
xorb
pop
lea
or
add
repz
sbb
dec
jmp
sub
xor
mov
imul
push
dec
das
and
dec
jo
mov
pop
pop
adc
jle
ret
xor
dec
add
and
out
insb
sbb
sub
and
xchg
loopne
mov
push
mov
das
add
jnp
adc
adc
lcall
fcoms
pop
sbb
xchg
sbb
or
sub
ds
nop
adc
jmp
testb
packuswb
cmpsb
adc
outsb
sbb
cmp
clc
gs
mov
setle
pusha
push
push
adc
or
das
dec
das
shll
fs
pusha
inc
mov
pusha
push
adc
ja
sbb
inc
mov
push
or
sub
sbb
or
xchg
xor
xor
adc
andb
stc
adc
sub
pop
lock
and
outsl
dec
or
daa
push
sbb
lods
adc
add
int
es
adc
xlat
lock
stos
andl
pop
or
add
cmp
test
stos
arpl
xor
addl
or
cmp
push
adc
mov
shr
ss
and
and
inc
add
push
sbb
add
sbb
or
or
and
sbb
sarb
inc
xchg
test
cmp
cwtl
xor
sub
mov
lret
sbb
cwtl
cltd
or
in
dec
insb
xorl
in
addb
xchg
or
pop
call
or
fiadds
sbb
pop
loopne
xchg
sbb
jl
cmp
or
imul
dec
fnstcw
loopne
cmp
fisubs
sbb
call
sbb
popa
mov
test
pop
dec
push
push
popa
push
mov
scas
xchg
pushf
mov
jae
add
sub
stc
dec
rcrb
push
mov
dec
adc
push
inc
test
push
push
push
int
mov
rcrb
xchg
dec
fucomp
push
push
rcrb
sub
adc
xchg
sbb
lock
add
mov
add
js
repnz
leave
sub
add
lcall
fsubrs
cwtl
jnp
pop
fisttpll
push
add
fucomp
and
xor
pop
mov
lret
cmp
cmovns
insb
push
pop
jae,pn
subb
mov
dec
insl
dec
sahf
mov
adc
hlt
add
and
std
dec
sub
inc
sbb
ljmp
jo
jnp
xor
cmp
push
and
ret
cmp
push
ljmp
xchg
jge
mov
pushf
mov
in
add
pushf
lahf
mov
lahf
pushf
test
fwait
push
dec
cwtl
jae
adc
cwtl
es
or
mov
sti
sbb
sub
lea
cmp
dec
jmp
inc
in
xchg
sbbb
mov
or
shlb
or
and
adc
or
sub
pop
mov
mov
test
push
mov
mov
sbb
cmp
je
lock
cld
fimull
xchg
es
and
fcomps
sub
mov
sbb
add
pop
test
test
jmp
push
std
mov
sub
in
or
push
add
push
pop
sub
or
lods
test
xchg
mov
inc
jmp
pop
mov
subl
adc
test
hlt
and
and
cmc
xchg
xchg
movsl
int
sbb
pop
mov
or
pop
cmp
mov
xchg
lods
inc
mov
lods
pop
and
fists
fisttpll
imul
push
mov
insb
xchg
dec
adc
and
mov
into
inc
mov
mov
and
add
insb
jl
fcomps
int
repz
add
rorb
or
inc
and
test
loope
ds
xchg
in
mov
das
add
fcoml
jo
adc
jo
mov
or
sub
sti
jbe
or
mov
jae
mov
jbe
push
push
adc
sub
fimuls
callw
popl
or
ret
fisubl
aam
xlat
jns
push
or
push
or
fidivrs
push
mov
testb
mov
fadds
inc
push
imul
ret
push
inc
xor
clc
xor
xor
pop
jns
inc
inc
insb
inc
jecxz
inc
in
lcall
cli
cs
imul
and
or
popa
fidivl
fcoml
add
push
push
lea
test
mov
pop
inc
or
js
and
popf
imul
dec
sbb
insl
lahf
insb
cmp
push
fimuls
or
icebp
cmp
cmp
xor
mov
jmp
mov
sbb
pop
push
aas
xchg
test
pop
push
xchg
mov
mov
sbb
push
add
xchg
loope
aas
push
and
or
subl
outsb
inc
jne
push
adc
xorb
imulb
or
sbb
dec
add
andl
fisubl
adc
fnstcw
adc
fdivrs
notl
xorb
adc
adc
inc
ficomps
in
jge
sbb
ljmp
push
push
rolb
mov
add
inc
jmp
test
jge
imul
je
and
int3
xchg
test
push
pop
dec
leave
jb
lock
lock
and
push
xchg
push
or
stos
cmp
sub
pop
aaa
inc
les
ret
inc
add
lret
add
mov
loopne
lcall
jnp
imul
or
lahf
adc
vsqrtsd
into
xlat
sub
push
adc
or
insl
xor
out
or
mov
xchg
adc
movsb
sub
and
sbb
pop
or
loopne
jnp
aad
lds
inc
lock
add
xchg
adc
pop
cld
add
push
loopne
add
adcl
sbb
nop
jb,pn
push
xor
pop
push
add
or
fistps
roll
jbe
or
and
inc
leave
jg
or
test
cwtl
enter
cmp
jmp
push
adc
inc
lea
inc
inc
dec
fwait
add
inc
mov
inc
pop
ret
call
push
pop
inc
xor
push
lock
jge
dec
out
mov
jno
dec
and
fs
pop
pusha
nop
and
xchg
sub
adc
or
test
or
sub
sarb
mov
push
sarb
pop
adc
pusha
sbb
push
mov
mov
push
push
ljmp
cld
jb
cmpsb
xor
or
nop
mov
subb
adc
xchg
jbe
stc
repnz
push
je
xor
jb
fs
fistl
movsb
push
sbb
daa
mov
movsb
mov
sbb
rorb
xor
sahf
xchg
je
or
sub
hlt
or
in
call
rclb
add
das
or
pop
push
mov
imul
pop
adc
pop
sub
add
dec
or
cmc
mov
outsl
or
cmp
pop
dec
or
fbld
jne
sbb
sbb
pop
inc
cmp
cmp
iret
imul
lock
push
or
cld
lcall
fcomps
push
addl
aaa
or
xchg
lea
sbb
sbb
push
push
cmp
cmp
iret
stos
inc
jo,pn
aaa
aad
xor
shll
and
out
add
add
rolb
out
sahf
and
xlat
push
dec
inc
sbb
lock
or
pop
lods
sub
xor
xlat
fimuls
hlt
sbb
clc
mov
ret
xor
push
or
iret
and
pusha
test
mov
mov
or
pop
mov
or
and
loop
pop
cld
adc
jg
or
add
lods
popf
sbb
je
or
and
xchg
fdivrs
movsb
cmp
int3
inc
adc
dec
sub
push
dec
add
lods
int
cmc
data16
or
xor
daa
outsl
mov
xchg
adc
dec
test
mov
inc
or
add
adc
cmp
hlt
jl
cmp
inc
test
adc
ss
shlb
dec
fs
and
sbb
mov
rcr
mov
pop
imul
push
cmp
mov
or
push
jg
lret
mov
jae
add
jae
shld
pop
std
mov
shl
stos
shrb
and
shl
sub
xor
sahf
out
or
shrl
enter
mov
in
je
jge
adc
jg
lds
and
mov
cld
and
imul
enter
or
or
jno
push
aad
pop
xor
push
in
lods
das
adc
dec
pop
test
ss
je
jp
dec
mov
call
add
js
sub
and
nop
andb
and
inc
cs
movsl
in
cmp
and
push
xchg
fistps
add
xchg
jns
adc
jg
jnp
shlb
dec
insl
shlb
xchg
adc
das
push
push
add
flds
push
dec
pop
das
call
push
in
adcb
add
lret
pop
rcrb
sbb
or
sub
dec
cmp
sahf
or
loopne
aam
ljmp
pop
fcoml
shlb
mov
pop
inc
xor
xchg
dec
test
int
cs
sbb
fsubrs
adc
mull
enter
push
dec
out
repnz
inc
aas
inc
inc
inc
push
scas
jmp
pop
loopne
or
xor
add
add
inc
inc
out
sub
sbb
inc
aas
scas
push
lcall
mov
imul
out
sti
adc
lock
fdiv
push
popa
add
test
inc
inc
inc
inc
inc
inc
xchg
jmp
push
add
test
or
add
cmpsb
imul
add
aad
mov
pusha
add
adc
incl
or
cld
stos
test
add
leave
jae
rorl
clc
nop
pop
inc
jle,pt
dec
clc
je
mov
xor
insb
insb
and
pop
inc
mov
inc
inc
ret
pop
jbe
nop
xor
dec
add
cmp
adc
add
adc
adc
xor
mov
xorb
or
push
test
inc
inc
fistpl
outsb
daa
push
in
test
hlt
fsubs
adcb
and
jp
gs
add
and
xorl
add
lcall
cmp
adc
or
mov
add
push
add
or
imulb
add
xor
xchg
sub
adc
push
loopne
movsb
lret
rorb
or
push
jge
mov
or
mov
xchg
call
xor
adc
add
mov
push
jmp
or
or
cmpsl
inc
xchg
inc
inc
lcall
fsts
insb
dec
inc
loopne
lods
shll
inc
rcll
les
pop
dec
and
push
insb
mov
inc
imul
push
into
add
cmpsb
lcall
pop
rol
negb
push
mov
sbb
or
hlt
or
aad
mov
xor
and
fistpl
enter
push
das
mov
or
test
filds
jle
add
je
xchg
add
cmp
in
rcrb
and
jecxz
or
adc
int3
or
fbld
cmpsl
xchg
das
orb
loopne
scas
mov
jae
fisubl
push
je
push
add
outsl
pop
dec
and
fistpll
xor
pop
push
mov
sub
stos
in
xor
mov
push
das
mov
and
pop
rorl
sub
push
push
mov
xchg
popa
addl
ss
sbb
xor
adc
adc
roll
lds
cmp
rorl
adc
outsl
adc
cmpsb
adc
or
pusha
orb
cmp
mov
cltd
pop
sti
fcmovnu
or
add
adc
sub
and
xchg
and
mov
pop
inc
rclb
add
jl
add
int3
xchg
xor
inc
jmp
xor
add
notb
push
bound
ss
mov
sarl
xor
mov
adc
push
sahf
out
push
cmp
add
add
mov
ss
push
mov
jge
mov
jg
or
add
or
out
cmp
push
xorl
xor
push
or
imul
add
addb
pop
or
jl
fldpi
inc
or
jmp
fucomip
xor
jmp
sub
gs
repnz
jb
fnstcw
andb
adc
adc
cld
pop
cs
mov
aaa
not
push
push
test
xor
sbb
push
mov
sub
adc
mov
jge
lret
ja
aad
push
lods
or
sbb
sub
jge
cli
and
insb
pand
or
loopne
mov
adc
inc
mov
inc
fdivrs
outsb
fld
adcb
roll
fdivs
mov
gs
xor
and
in
loopne
pusha
or
cld
cmp
pusha
cmpsb
jae
cmp
aas
mov
add
add
mov
add
dec
lret
and
push
fs
sub
aam
sbb
dec
or
imul
in
dec
mov
cmpsl
add
loope
push
xor
add
enter
and
add
sbb
inc
fpatan
jmp
test
les
les
cmp
scas
loopne
cmpl
test
add
fisttpl
loop
rolb
nop
sub
mov
or
xchg
xor
call
int3
mov
int
pop
mov
jnp
daa
xor
sbb
pop
jmp
clc
aad
inc
test
loop
jle
and
test
in
sbb
adc
ds
push
dec
frstor
add
pop
inc
cwtl
cmpsb
cmp
or
lar
jle
push
push
pop
fstcw
data16
repz
ds
rclb
sub
dec
add
and
or
add
inc
aad
mov
fsubl
fldcw
hlt
mov
push
pop
mov
rcll
and
rorb
loopne
int
loopne
aaa
leave
adc
daa
sbb
xchg
mov
push
xchg
xchg
movsb
gs
sub
or
and
xor
adc
and
daa
pop
enter
cld
pop
lods
adcb
pusha
fldenv
sbb
out
orl
push
add
xchg
fucomip
xor
or
jp
adc
mov
sbb
fcompl
int3
add
add
iret
sub
je
xchg
hlt
out
xor
adc
add
and
cmp
jae
int3
sbb
mov
push
jb
rorb
add
addr16
out
or
ret
xor
cbtw
cmp
in
leave
add
lock
loop
sti
repnz
daa
data16
add
and
pop
adc
and
inc
cmp
inc
add
lret
and
arpl
add
mov
add
cmp
add
fsubr
jge
das
outsl
insb
jmp
mov
cmp
mov
jmp
pushw
xchg
int
iret
and
andb
adc
mov
jl
add
add
sbb
popf
mov
xchg
add
xchg
sbb
data16
cmpsb
xchg
add
cltd
in
icebp
fs
ret
adc
mov
jns
dec
and
sub
in
cmp
decl
loop
int
xor
aaa
in
popf
test
xor
pop
dec
add
dec
add
decb
add
jmp
inc
rclb
mov
fucomip
lds
xchg
stos
cwtl
inc
cltd
lea
mov
mov
dec
cld
lock
push
sbb
xor
adc
bound
and
dec
push
pusha
mov
pop
test
jmp
jb
sbb
push
out
pop
cmp
cmpsl
stos
sub
int3
int
inc
enter
jg
jbe
dec
or
inc
mov
repz
clc
in
in
pop
adc
lahf
mov
cmp
adc
nop
inc
insb
xor
cmp
cmp
sub
ret
in
mov
push
push
int
xchg
divb
xchg
inc
cli
nop
arpl
and
loop
pop
inc
add
sub
add
or
inc
push
add
imulb
testl
addr16
and
out
xchg
mov
jmp
xor
nop
insb
dec
push
adc
or
and
push
add
push
fldcw
and
shlb
pop
and
inc
call
push
ret
aas
or
ret
mov
jmp
xchg
dec
mov
nop
cs
pop
adc
call
push
mov
dec
jne
xchg
inc
jmp
adc
xor
jmp
cmp
pusha
inc
sbb
xor
push
sbb
xor
mov
mov
or
addb
push
fnstsw
push
push
insb
stos
inc
mov
aas
add
in
add
fisttpl
stos
lods
sub
adc
adc
mov
in
jecxz
fadd
jae
dec
adc
xchg
inc
mov
pop
pop
popa
sub
inc
mov
sub
lods
mov
inc
sbb
orb
push
aad
popf
pop
jge
or
pop
test
and
fildl
arpl
mov
popa
data16
cmp
mov
mov
inc
sbb
xchg
xor
or
sub
imul
or
xor
sbbb
outsb
ss
jecxz
insb
adc
cmp
push
xor
adc
cmp
addb
adc
inc
jg
add
sbb
and
mov
add
sub
hlt
call
sbb
or
test
mov
insl
adc
sub
push
aad
fsub
or
cmpsb
adc
mov
adc
iret
or
hlt
add
dec
fsubs
pop
daa
or
xchg
outsl
pop
mov
mov
and
jg
lcall
push
hlt
inc
stos
and
dec
sbb
adc
pop
mov
dec
pop
les
adc
pop
inc
dec
lret
shlb
inc
xor
inc
hlt
inc
inc
xchg
inc
xchg
lret
pusha
inc
mov
xor
incl
sub
jmp
orb
bound
insl
jne
xchg
xor
ljmp
adc
add
lock
sbb
dec
adc
adc
adc
shll
rol
data16
mov
test
dec
adc
fcoms
or
or
sub
push
cwtl
hlt
test
rcrb
daa
pop
sub
jne
mov
ficompl
mov
adc
adc
push
jmp
or
subb
pop
xchg
or
push
lock
ja
push
inc
lcall
jge
xlat
jbe
xchg
add
xorb
and
add
jnp
incl
dec
lock
jmp
call
add
pop
mov
mov
cmp
fdivrs
mov
inc
dec
lcall
mov
adc
xor
or
pushw
insb
out
xor
jne
inc
gs
loopne
pop
clc
push
or
jb
mov
adc
adc
shl
cwtl
push
mov
cmp
lock
add
jno
rclb
push
jae
lret
add
push
out
add
push
ret
lods
push
cmpsl
dec
mov
push
mov
scas
loop
mov
rcll
aas
push
push
push
add
mov
pop
add
or
mov
repz
jnp
nop
inc
mov
push
mov
jg
inc
bt
mov
cmp
add
pop
aas
cmp
adc
repz
cmp
test
cmp
add
dec
pop
sub
push
push
scas
sbb
and
shrl
cwtl
xor
insb
add
cmpb
xor
nop
loop
hlt
mov
mov
pop
pusha
and
adc
dec
pop
or
or
add
shr
jb
pop
adc
movsl
or
add
movsl
push
shrl
test
cmpsb
mov
mov
cmpb
xor
stos
into
enter
lock
inc
aad
call
adc
cltd
and
into
add
xchg
jl
inc
test
inc
mov
test
movsb
scas
pop
cmpsb
and
ss
mov
testl
mov
pop
adc
mov
dec
faddl
xlat
cmp
icebp
mov
clc
and
dec
mov
cmpl
jne
iret
jns
popf
data16
sub
bswap
sub
mov
push
or
add
push
cmpsb
dec
push
mov
fs
adc
in
push
inc
add
in
cmp
or
push
shrb
and
push
push
pop
and
faddl
cmp
or
or
stos
push
adc
add
out
jnp
lods
into
adc
mov
pop
add
xorl
sub
and
adc
add
cli
jmp
rol
or
sub
pusha
xor
add
or
test
jl
or
and
scas
jnp
jmp
movsl
mov
xor
fs
sti
cmc
out
int3
shl
pop
adc
or
jae
orb
and
sub
dec
in
pop
push
mov
scas
popa
clc
xchg
sub
pop
pop
push
addr16
ljmp
mov
add
ljmp
add
lock
inc
fwait
add
shll
cmp
adc
std
inc
jbe
pop
imul
mov
push
insl
ret
mov
add
push
or
sbb
inc
out
push
xor
dec
push
jmp
les
xchg
bound
pmulhw
or
inc
scas
adc
or
mov
push
loop
mov
jno
and
rcll
pop
pop
mov
xchg
push
pop
mov
pop
imul
inc
cmp
addr16
inc
push
pop
iret
cmp
add
pop
push
cmpb
cmpsb
dec
jbe
mov
cwtl
data16
movl
mov
or
or
test
jb
xchg
mov
and
adc
dec
and
mov
lret
roll
repnz
mov
or
addr16
add
mov
andb
or
xchg
dec
subb
insb
inc
cmc
les
jl
or
cmp
xchg
add
jmp
iret
movsbl
arpl
mov
popa
fstpt
mov
loop
mov
or
daa
cs
pusha
mov
add
push
shr
ds
pop
sub
jbe
in
insb
cmp
cmp
movsb
push
dec
stc
adc
sub
add
add
mov
cmpl
mov
and
mov
cmp
or
dec
mov
push
subb
mov
mov
sbb
popa
push
inc
push
pop
fs
or
test
and
leave
repnz
rorb
push
sbb
pop
rorb
mov
pop
cmc
xchg
or
jo
nop
sbb
xchg
cmp
mov
nop
nop
fsubrp
xor
jnp
adc
movsl
sbb
xchg
mov
cmp
insb
dec
push
pop
inc
xor
imul
add
aaa
push
rorb
adc
test
xor
xchg
xchg
jmp
es
inc
mov
mov
mov
enter
push
enter
sub
dec
inc
call
pop
mov
cwtl
cwtl
mov
jb
jl
push
repz
xor
fs
fs
pop
call
xchg
xor
xorl
hlt
ljmp
pusha
xchg
xor
mov
mov
jne
jb
jp
es
xor
push
mov
lea
sub
out
sahf
es
jge
pop
pop
ljmp
orb
mov
rcrb
out
jno
and
lds
sbb
xor
dec
testl
popa
add
mov
dec
gs
or
test
jo
or
lods
push
inc
mov
xchg
push
sbb
ret
mov
adc
sub
and
rcr
cmpl
pop
sub
mov
sub
daa
fidivrs
sbb
mov
inc
inc
ret
adc
popa
jmp
or
cmpsb
divb
pushf
inc
ja
xor
dec
and
cmp
sbb
pop
nop
and
andl
and
cmp
insb
or
test
mov
or
jbe
repz
add
clc
fistpll
xor
cwtl
cwtl
in
int3
or
dec
adc
fsts
in
lea
xor
nop
jmp
adc
mov
pop
push
cltd
add
repz
outsb
add
mov
add
shr
mov
ss
push
jo
xorb
add
xchg
aaa
adc
sub
shr
stc
out
mov
adc
adc
mov
mov
sub
insl
or
mov
cltd
into
shlb
sbb
fdivrl
xchg
add
shl
inc
pusha
inc
dec
fdivs
and
jb
cmp
lock
lock
add
mov
adc
sub
rcll
mov
es
sbb
jl
add
scas
dec
mov
or
push
mov
jmp
push
xor
add
fsubl
xchg
fildl
xor
gs
pop
addr16
push
mov
lahf
imul
not
in
pop
sbb
add
add
add
add
mov
add
fcoms
sahf
push
add
add
add
mov
stos
inc
fnop
inc
outsl
or
fwait
je
adc
les
lcall
adc
fwait
int3
add
scas
scas
mov
mov
mov
cmpsb
imul
cmpsb
bound
int3
inc
mov
sub
xchg
xor
fwait
rcll
notb
dec
cwtl
dec
sbb
inc
add
jmp
and
inc
add
sbb
jne
pop
cmp
cmp
out
xchg
in
adc
sbb
daa
push
rcr
ret
ds
adc
ror
push
push
lods
bound
inc
cmp
gs
cmp
sub
cmpsb
jne
mov
es
xor
out
cmp
adc
dec
pop
ret
dec
push
inc
add
lock
or
int3
push
xor
inc
mov
dec
inc
add
xor
addb
xchg
xchg
dec
roll
xor
xchg
out
and
and
add
mull
xchg
je
cltd
stc
cmp
dec
push
ss
mov
out
shr
mov
sub
imul
or
xchg
leave
and
or
rcll
adc
sub
aad
xor
mov
ss
shlb
lret
sbb
enter
neg
xchg
sub
push
shlb
stc
mov
imul
insl
popf
inc
movsb
sub
insb
rcll
imul
sti
rcll
xchg
insl
adc
jg
or
mov
dec
add
and
and
or
and
aaa
xor
adc
push
add
aas
popl
sub
mov
mov
lea
test
push
scas
jle
aam
fmuls
xor
psubb
push
dec
pop
xor
xchg
cvtdq2ps
test
adc
adc
and
flds
cmp
or
in
mov
mov
ror
adc
push
mov
dec
and
inc
sbb
sub
inc
adc
xor
aad
inc
aaa
push
jb
xor
outsb
addr16
gs
mov
add
je
or
sbb
add
jg
mov
nop
loopne
or
pop
xchg
add
sub
mov
outsb
divl
sbb
adc
test
sub
lea
sbb
cmpsb
and
repnz
xchg
lahf
and
and
pop
inc
mov
movsl
push
ret
insb
pop
aam
into
imul
pusha
fldenv
inc
add
add
lods
mov
sbb
mov
enter
inc
sbb
inc
xchg
mov
dec
and
inc
push
xchg
scas
adc
pop
jae
in
aam
mov
aam
or
sub
mov
pusha
mov
mov
or
sti
fildll
repnz
int3
push
test
and
loop
fsubrl
sub
push
and
inc
test
mov
aam
push
aam
inc
fldenv
xor
inc
ljmp
xchg
adc
dec
rcr
xor
int3
adc
lods
mov
pop
inc
out
mov
adc
in
mov
dec
stos
push
cmp
xchg
pushl
jg
daa
inc
cmp
je
sub
cmp
sbb
and
rol
loopne
mov
popa
push
rcrb
rcrb
aaa
push
int
js
incl
test
jg
jmp
adc
test
or
ds
cmp
mov
daa
add
pop
fmuls
ja
xlat
jg
fdivrs
or
cmp
je
insl
or
fcomps
mov
dec
jmp
repnz
ret
ja
orb
scas
or
jmp
fimull
or
mov
mov
mov
mov
fists
es
mov
je
jg
inc
jnp
jnp
das
hlt
push
cmp
ja
out
clc
or
mov
ljmp
jne
jno
dec
fwait
sub
push
xlat
inc
nop
add
data16
sbb
pop
jbe
mov
xchg
mov
mov
push
jmp
in
je
or
je
ja
sbb
shl
imul
in
aad
lahf
jne
lods
sbb
push
pop
pop
dec
adc
aam
or
mov
push
or
inc
push
fs
test
jg
stos
out
push
inc
inc
cmp
or
jmp
mov
mov
movsb
add
out
adc
movsb
xchg
adc
data16
sub
in
lock
data16
or
xor
inc
into
shlb
add
jne
lret
mov
in
call
and
pop
pop
sub
loopne
adc
loopne
ror
in
add
dec
push
rolb
xchg
in
jge
push
lock
xor
sbb
std
mov
push
insb
aam
es
rcr
add
inc
dec
add
xor
icebp
nop
sarb
or
or
add
loopne
lret
out
scas
or
sub
xlat
in
sbb
jg
je,pt
xchg
loope
xchg
cmp
push
ss
or
cli
pusha
push
or
rclb
mov
sbb
bound
ret
inc
sub
cmp
lods
and
js
nop
add
xchg
inc
mov
loop
ja
add
in
loop
sarb
or
add
addr16
or
jo
pop
jl
fsubl
or
test
rorb
mov
in
clc
test
add
mov
ss
pop
rolb
mov
ljmp
mov
insl
sub
fadds
xchg
daa
mov
fsubrl
imul
fmuls
rorb
add
xor
inc
xchg
sbb
push
xchg
inc
sub
shrl
dec
leave
js
mov
jg
inc
xchg
inc
jge
or
pop
mov
ja
inc
inc
leave
adc
or
shr
jmp
sbb
pop
sub
dec
in
or
in
mov
pusha
aas
es
jg
push
add
adc
pop
and
cli
js
or
fs
mov
cmp
testb
mov
nop
outsb
nop
mov
add
rorl
imul
mov
in
dec
xor
out
sahf
les
jl
push
push
xor
xchg
aam
or
gs
test
ret
sbb
jmp
xchg
out
lock
jns
hlt
rcl
sub
xchg
push
mov
les
mov
loopne
subb
es
testl
and
push
or
mov
arpl
add
jbe
push
push
or
and
mov
add
adc
push
pop
ljmp
jbe
insb
cli
pushf
repz
ss
lock
sub
add
pop
lds
lods
xchg
jg
test
jmp
es
ja
loop
fisubs
jg
stos
cs
jl
cltd
test
test
int3
push
outsb
fadds
or
nop
add
stc
cli
aam
or
jns
cmp
or
inc
and
or
push
inc
jbe
push
adc
dec
dec
add
and
add
pop
push
lea
and
jbe
mov
ljmp
mov
fsub
outsb
mov
add
and
or
repnz
adc
mov
xchg
test
add
dec
or
mov
das
xor
add
cmp
xchg
dec
adc
out
add
dec
xchg
out
or
and
nop
dec
lea
xor
or
stc
enter
add
push
jecxz
cmp
in
nop
and
scas
or
pop
xor
sbb
push
mov
jb
push
sub
sub
add
mov
adc
cld
arpl
and
leave
inc
cs
cmpsb
fdiv
cmp
or
cmp
jb
add
or
push
jg
push
mov
stc
add
add
jg
inc
lret
fisubl
sbbb
dec
sub
sbb
loopne
mov
cwtl
in
dec
dec
mov
cwtl
and
leave
inc
push
das
in
adc
mov
add
mov
inc
sbb
push
test
pop
push
aam
lahf
rorb
dec
push
mov
fs
xchg
cmp
jge
pop
jmp
add
mov
jge
add
js
mov
jo
stos
daa
sbb
pop
sbb
xchg
mov
push
dec
xor
sub
sbb
mov
and
inc
mov
add
aaa
adc
lret
fsts
jne
jmp
mov
nopl
and
pop
test
add
sub
and
pusha
sub
lcall
lds
dec
mov
test
in
or
add
decl
adcb
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
incl
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
pushl
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
das
push
pushl
lahf
xor
mov
js
stc
jg
or
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
sub
outsl
cmp
mov
inc
movsl
fisttps
xchg
fsubs
shll
jmp
cld
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
lcall
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
pushl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
incl
insl
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
call
mov
add
inc
push
imul
xorb
sbb
push
imul
aam
jmp
sub
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
lcall
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
ljmp
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
incl
insl
jge
mov
pop
or
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
add
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
fistpl
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
aas
inc
cld
add
sub
outsl
jb
popa
je
and
in
push
dec
dec
adc
jb
outsb
je
arpl
or
cmp
arpl
sbb
jbe
ja
pop
sti
inc
insb
imul
rsqrtps
outsl
fstpt
inc
adc
inc
jb
adc
in
jbe
cmp
insl
gs
push
jns
sbb
je
outsl
outsb
adc
out
mov
inc
fs
bound
jo
cs
call
sub
sub
and
jp
xor
gs
jg
jg
and
outsl
outsl
imul
popa
imul
dec
and
add
lods
or
and
outsb
or
fcmovnu
std
bound
gs
jo
pop
inc
jb
inc
or
push
sbb
inc
imul
lds
sub
and
dec
popa
sti
arpl
ret
push
xchg
jl
and
and
es
gs
imul
subb
dec
pop
push
pop
push
inc
sub
mov
mov
sub
jae
sub
and
cmp
dec
bound
out
loopne
dec
inc
dec
dec
push
inc
push
dec
dec
inc
js
mov
lret
and
jne
mov
mov
push
mov
dec
jae
xchg
dec
mov
cmp
pop
push
outsl
add
jb
data16
sub
inc
popa
imul
outsl
fnsave
jb
outsl
xor
jne
adc
or
fwait
mov
and
or
ret
les
pop
or
fs
and
or
and
adc
inc
push
aas
xor
negb
inc
inc
dec
inc
inc
inc
cmp
mov
and
and
inc
hlt
xor
bound
gs
testb
clc
pop
dec
push
pop
push
inc
xchg
inc
sub
fs
data16
push
movsb
andl
jbe
arpl
or
pop
sub
jae
lods
cmpl
in
or
xchg
gs
jae
pop
cs
sbb
or
mov
ss
xor
and
aas
jo
test
sti
and
jbe
subl
jmp
push
imul
dec
push
pop
lods
jne
je
push
dec
xchg
and
incl
out
sub
inc
inc
push
inc
inc
inc
push
push
push
pop
movsb
xchg
daa
mov
inc
dec
inc
jecxz
insb
sub
es
ss
inc
add
jb
push
mov
fs
and
jle
cmp
je
jbe
sub
pop
bound
cmp
cmp
add
inc
inc
sbb
inc
ret
sbb
jne
insb
jp
sub
sub
ss
jno
sub
pop
adc
inc
xor
cmc
shll
cmp
and
sub
lds
jo
adc
enter
fcomps
mov
push
fcoms
sti
ds
jae
test
xchg
test
cmp
dec
dec
add
lock
imul
mov
and
popa
insl
cvtdq2ps
pop
xchg
or
cmpsb
popa
sub
mov
daa
pop
xor
rcll
sub
fcoml
and
data16
sub
sub
dec
je
jne
jg
pop
fcmovu
push
lahf
arpl
mov
insl
shlb
lods
imul
outsb
incl
popf
repnz
inc
add
cmp
inc
sub
outsl
dec
dec
inc
and
sarb
gs
jae
imul
adc
mov
push
pop
aaa
jbe
scas
ret
ds
bound
mov
add
pop
adc
add
add
add
jmp
clc
insb
add
fs
push
pop
pop
or
aaa
xor
push
push
pop
mov
add
pusha
mov
pusha
or
add
pop
adc
push
add
add
cmpsl
pop
lahf
jae
cmp
jne
insb
add
das
insb
shrb
jo
fcoms
add
das
test
jae
iret
and
ret
xor
push
fiaddl
push
popa
mov
jp
sbb
mov
gs
and
add
aas
inc
lret
xchg
sbbl
jo
cmp
sahf
fadd
add
popf
dec
and
push
mov
outsb
imul
insl
test
cmp
cli
data16
xorl
ja
mov
or
xor
cs
mov
dec
imul
imul
sub
mov
pop
xchg
bound
jns
push
and
stos
or
addr16
loop
sbb
and
xchg
mov
mov
call
dec
adc
cli
mov
mov
or
int
or
outsl
inc
int
pop
inc
pop
and
icebp
mov
outsb
je
push
pop
jo
je
jae
and
add
and
popa
cmp
inc
mov
fsubrs
out
sbb
int3
push
mov
ss
mov
outsb
pop
jae
add
cmp
outsb
add
adc
add
jnp,pt
into
fidivrl
dec
mov
popa
dec
mov
addr16
fildl
push
fs
jns
jne
mov
mov
pusha
cmp
cmpsl
pop
mov
call
mov
data16
nop
hlt
jp
inc
jnp
mov
aas
sti
mov
insl
or
inc
and
sub
push
add
pop
mov
sub
add
call
push
sub
add
or
adc
xchg
jae
je
jecxz
in
rcll
cmp
sbb
xor
insl
jae
xchg
notb
fwait
fs
and
mov
jbe
test
cmp
pop
push
or
imul
jns
imul
cmpsb
xor
push
sub
adc
in
push
add
dec
inc
push
dec
pop
loop
lods
adc
push
ss
or
andl
push
pusha
imul
daa
inc
imul
aaa
mov
cmp
in
popa
inc
push
mov
cmp
mov
ss
shlb
nop
aaa
xor
xor
not
push
jo
movsl
arpl
push
enter
sub
mov
adc
pop
das
pop
push
sub
fs
fsub
pop
xor
notl
xor
subl
jae
fwait
or
arpl
cmp
filds
int3
xchg
push
and
jo
xor
insl
movsb
je
popa
fs
out
or
fmuls
xor
or
xchg
rcrl
or
ss
int
push
fdivs
cmp
inc
sub
out
cmpsl
sub
jns
and
jb
jae
xor
pop
sbb
shrw
add
fs
or
adc
or
dec
adc
or
mov
les
push
adc
mov
inc
add
orl
xor
js
outsl
fsubp
dec
daa
outsb
pop
dec
inc
adc
pop
push
jbe
ss
cmpsl
pusha
scas
cltd
lds
push
xchg
lret
hlt
ds
outsl
and
fwait
cmp
rol
and
jg
mov
imul
and
inc
dec
pop
dec
dec
inc
in
xchg
mov
add
dec
cmp
pop
jae
push
jecxz
sub
dec
and
jns
test
add
xchg
adc
pop
jbe
gs
mov
cmp
push
jbe
dec
call
outsl
or
add
dec
push
jmp
stc
mov
inc
sahf
insb
notl
pop
out
arpl
mov
pusha
adc
enter
fidivrs
pop
push
push
dec
inc
inc
aaa
lods
mov
pop
jns
aas
cmp
and
fidivl
jmp
pop
or
or
push
clc
jl
jle
into
push
push
jne
dec
pop
adc
fidivrs
int
inc
cmp
das
daa
sub
pop
das
ja
jge
addr16
lds
cmp
lret
out
jae
sahf
movsl
lods
mov
ror
jnp
cmp
fucom
push
popl
xchg
xorb
add
call
test
shr
add
sbb
fs
lock
add
sub
dec
sahf
imul
mov
jnp
inc
cmp
pop
shlb
dec
push
push
cmp
scas
in
mov
jmp
xor
enter
add
in
mulb
or
add
xchg
mov
xor
inc
ja
inc
push
ljmp
insb
dec
push
nop
lret
sub
push
push
dec
cltd
add
cmp
inc
gs
push
or
cmp
pop
or
outsb
pop
cmp
ds
outsl
sub
push
shll
arpl
rcll
and
lock
ds
outsl
sbb
sarl
inc
inc
dec
cmp
jne
jb
xchg
mov
sbb
push
pop
mov
popa
roll
jnp
sbb
push
gs
add
sbbb
jb
adc
push
mov
push
enter
push
jbe
and
insb
cmp
mov
and
push
fs
mov
dec
push
inc
insb
insb
push
jge
lods
cmp
imul
mov
aaa
mov
cwtl
push
or
add
jae
sub
data16
cmpb
sub
and
shl
into
pop
cs
xor
push
dec
mov
test
pop
insl
sub
push
mov
fsubs
cs
or
adc
dec
mov
aas
popa
push
jo
push
push
push
jne
sub
ucomiss
sub
popa
fdivs
and
mov
arpl
cmp
adc
dec
test
push
adc
xchg
sub
jno
mov
dec
sub
jb
test
sub
sub
ffreep
add
insl
out
shrb
pop
inc
mov
pop
sub
jo
test
js
dec
divb
inc
or
add
repz
out
and
dec
outsl
addr16
decl
push
add
mov
adc
add
out
adc
test
xorb
add
cmpb
inc
call
push
push
dec
inc
pop
mov
push
pop
pop
or
cwtl
jmp
cmp
and
outsl
pop
push
js
lcall
int3
lock
lret
and
add
and
sub
and
jae
inc
push
xor
dec
xor
and
sbb
cmp
cmpsb
sbb
shlb
adc
int
sbb
int
xchg
pop
cmpsb
sbb
or
into
sbb
cmpsl
pop
insb
into
or
rcrl
aam
jmp
rcll
iret
xor
sbb
movsb
imul
xchg
shlb
cmp
lcall
test
ss
and
adc
sub
rorl
out
xchg
xor
mov
rclb
pop
rclb
js
sbb
pop
fdivrs
movsb
pop
pop
enter
sarl
or
imul
dec
roll
aam
dec
movsb
jmp
pop
dec
test
push
aam
in
xor
aad
cmp
lcall
movsb
lods
dec
lcall
fxch
jo
dec
add
pop
pop
cmpsb
sbb
movsb
fsubl
cld
or
dec
xlat
jne
jmp
pop
js
test
je
and
test
aam
loopne
pcmpgtd
or
sbb
and
or
dec
roll
push
test
push
mov
mov
push
cli
jbe
inc
mov
cmp
or
lret
inc
imul
inc
inc
dec
gs
and
js
sub
bound
pop
mov
inc
inc
jne
repnz
jns
sub
bound
pop
push
xor
cmp
push
inc
and
dec
jne
sbb
shlb
mov
insl
mov
dec
adcl
shlb
jae
shr
ret
dec
add
mov
cmp
xor
mov
push
outsl
outsl
inc
pop
dec
outsb
outsl
insb
jp
out
pop
mov
xor
jo
jbe
mov
fs
xchg
inc
test
test
xor
add
fimull
lcall
jae
mov
jae
dec
imul
addr16
mov
imul
and
mov
ret
sbb
sbb
inc
dec
xor
loopne
rcrb
rclb
push
mov
sbb
inc
imul
and
mov
jnp
and
sbb
aad
notl
add
inc
icebp
push
gs
outsb
jg
jns
std
in
inc
and
jo
push
xor
xor
cmpsl
xlat
pop
lds
inc
cmpsb
ret
and
xchg
sub
xor
aaa
push
sbb
rolb
jl
int
pop
fwait
mov
inc
je
mov
jb
inc
inc
pop
jo
pop
insb
cmp
loop
mov
pop
insl
and
sub
test
inc
dec
push
dec
inc
push
pop
inc
aaa
je
in
and
mov
cmp
inc
adc
lahf
and
outsl
popa
dec
pop
insl
arpl
data16
dec
sub
es
addb
daa
sub
adc
xor
cs
icebp
push
push
dec
dec
jno
test
sub
mov
sbb
sbb
add
dec
addl
push
push
sub
adc
jnp
insl
insl
das
add
outsb
mov
sbb
mov
nop
add
fcoms
sbb
pop
dec
movsb
test
cmp
sub
adc
mov
loope
xchg
aaa
and
pop
gs
push
insb
jb
sbb
or
add
mov
xchg
xor
xchg
adc
dec
sbb
in
loope
jae
inc
dec
sbb
jb
sub
sub
pop
mov
sbbb
or
pop
xor
mov
je
fcoms
jae
xor
adcl
push
daa
cmpb
rclb
fdivrl
or
push
xchg
mov
jne
adc
inc
mov
and
or
outsb
arpl
orb
push
pop
sub
fcompl
or
popa
push
add
mov
adc
sub
mov
sub
sub
test
insl
sahf
outsl
or
inc
inc
xchg
xor
ret
adc
aas
xor
add
dec
xor
dec
jle
in
mov
add
add
popl
xor
popa
jae
inc
addl
xchg
or
mov
call
jb
push
inc
push
inc
dec
push
dec
push
ja
icebp
dec
inc
dec
inc
push
push
pop
bound
test
and
addl
jbe
adc
repz
aam
mov
fs
push
imul
adc
sub
jecxz
cltd
xor
mov
push
es
sub
je
lahf
dec
fcoms
dec
pop
inc
or
sub
insb
xchg
dec
mov
add
loop
sbb
test
ljmp
imul
or
ljmp
int
jae
jl
out
and
dec
adc
sbb
pop
sub
adc
and
or
out
mov
call
or
xor
mov
imul
jo
sbb
xchg
insl
je
ja
insl
or
mov
xor
bound
xchg
mov
pop
push
pop
dec
push
dec
into
popa
add
popf
stos
ja
inc
dec
xchg
or
fimuls
sbb
lock
ja
arpl
mov
add
add
pop
gs
fidivl
popa
shr
xor
xor
pop
out
jae
cmp
in
dec
sub
cmc
jb
test
fsubrs
ja
jnp
sub
jl
pusha
packssdw
fsts
mov
and
cmp
push
sbb
jnp
add
jb
imul
pop
icebp
inc
inc
inc
pop
cltd
push
fmuls
movsb
push
adc
rep
sti
fistpll
mov
pop
adc
or
and
add
imul
imul
dec
or
bound
ret
mov
lcall
and
sbb
loope
ljmp
xor
push
sbb
pushf
imulb
or
popa
daa
and
inc
fnstcw
rclb
mov
pop
mov
pop
ja
add
cmp
les
lock
xlat
adc
adc
mov
lods
xchg
imul
or
mov
imul
das
ret
sbb
out
flds
xlat
add
add
jne
add
inc
dec
add
push
add
adcl
add
jb
inc
sbb
leave
adc
adc
inc
mov
add
add
xchg
testl
and
mov
outsl
icebp
and
std
int3
mov
scas
je
xchg
shlb
or
outsb
jo
dec
jl
add
xchg
icebp
fcomps
std
push
sub
adc
outsb
jb
or
inc
push
inc
xor
mov
lods
mov
add
add
lret
repz
dec
push
add
mov
jp
out
xor
sub
add
or
enter
fcomps
call
les
int
fs
mov
sti
bound
pop
mov
xchg
and
movsl
cmpsb
movsb
and
xchg
and
jge
pusha
add
inc
and
cmpb
push
and
mov
incl
add
jo
pop
dec
add
push
or
jnp
orl
or
dec
sbb
cwtl
xchg
cwtl
dec
rclb
test
push
xor
xchg
xor
add
and
es
idivb
adc
pusha
add
rcrb
fs
cmp
adc
aas
add
jmp
mov
jp
add
movl
outsb
and
fcmovb
es
or
add
xor
insb
inc
jmp
pop
push
xor
push
mov
and
pop
je
mov
add
add
xor
add
or
popf
mov
outsl
add
enter
sub
add
pop
xor
add
rcrl
xchg
mov
dec
add
or
and
jnp
addr16
loopne
jg
xor
das
add
push
out
popf
adc
push
dec
add
insb
or
pop
imul
sub
jo
jo
jo
xchg
add
test
adc
or
inc
ret
push
cli
decl
call
inc
loope
pop
rolb
js
push
out
add
pop
add
loopne
les
xorl
add
frstor
add
sub
jmp
in
mov
jl
mov
ja
mov
pop
inc
add
or
add
ja
rorl
inc
outsl
add
add
data16
sub
fsubrl
inc
das
pop
sub
outsl
mov
jae
test
push
lods
push
cs
or
inc
ret
nop
orb
movsl
ficompl
dec
dec
dec
dec
inc
andb
inc
inc
fwait
rol
cs
push
mov
daa
sar
outsb
pushf
andb
lea
clc
enter
push
push
jo
xchg
pop
popa
sub
push
shlb
push
or
or
shll
sub
lret
and
lods
les
fsubs
inc
scas
xchg
or
subl
scas
sbb
mov
adc
add
pusha
and
adc
loope
pshufw
xor
cmove
jne
adc
pop
ret
insb
jbe
dec
jmp
push
dec
sub
cs
dec
push
cmp
inc
les
sbb
push
mov
pusha
testl
insb
sbb
sub
adc
pop
imul
jl
dec
mov
flds
pop
pop
mov
inc
sbb
jae
jb
mov
push
adc
adc
push
jns
cmp
jne
aaa
push
je
sub
adc
cwtl
test
push
jecxz
cld
int
cmp
pop
add
inc
add
pop
add
adc
fcmove
pop
xor
cmp
add
fmuls
sub
and
imul
pop
push
in
faddl
push
push
mov
cli
mov
dec
add
je
lods
xorb
jns
dec
repnz
push
push
mov
bound
jne
jmp
adc
add
sbb
pop
adc
mov
cmp
push
movsb
adc
push
or
push
lcall
out
add
lahf
inc
add
repz
mov
adc
pop
dec
add
sar
and
push
push
mov
orl
das
sub
sbb
push
lea
ret
or
pop
or
ret
mov
push
das
sub
sub
or
and
jns
sub
data16
fsubrl
insb
jb
popa
xchg
enter
xor
popf
aaa
and
mov
ss
das
cmpsl
and
je
adc
mov
sub
out
xor
inc
lret
and
dec
dec
dec
push
inc
inc
sbb
ret
pop
push
add
push
sub
inc
nop
or
push
ljmp
mov
cmpb
adc
add
sbb
mov
push
xchg
lret
adc
or
push
out
clc
lcall
stos
jns
imul
cmpb
prefetchw
mov
andb
dec
jbe
inc
xor
fwait
sub
or
and
das
or
cmpsb
loopne
je
out
adc
lods
jno
cltd
sbb
add
cmp
dec
popf
cwtl
paddw
or
xor
mov
push
inc
jl
mov
push
loopne
aaa
subb
or
inc
jbe
push
xchg
sub
pop
jae
push
dec
sub
fs
sub
sub
lret
pop
mov
push
and
aaa
push
subl
jns
sbb
loopne
insl
jmp
adc
and
adc
mov
add
push
adc
sub
imul
or
pop
xor
hlt
data16
lea
sbb
jns
fistl
xchg
scas
mov
dec
add
pusha
out
imul
sbb
pop
sub
push
js
add
pusha
and
gs
das
mov
sbb
mov
jge
push
dec
push
mov
mov
cmp
dec
dec
or
mov
out
inc
inc
push
dec
push
sub
jbe
mov
and
das
adc
lods
jnp
pop
das
and
dec
inc
pop
loop,pt
xor
lret
iret
sub
and
push
inc
inc
fcmovu
push
sti
push
cmp
adc
in
fiaddl
test
cmp
dec
mov
mov
mov
inc
es
and
sub
mov
and
push
insl
or
fs
imul
xchg
add
loopne
push
add
xor
dec
push
sub
inc
aas
fisubl
in
inc
and
inc
xchg
jae
push
cmp
xchg
adc
xchg
out
nop
or
mov
imul
cmp
add
add
sbb
or
add
ss
fildl
push
and
out
lret
push
ret
stos
outsl
inc
ret
int3
das
scas
jbe
jae
pop
push
mov
cmp
test
jae
and
sbb
adc
mov
jmp
sbb
ret
stc
ds
xchg
adc
add
xor
popa
add
popa
in
pop
sbb
pop
imul
orl
lea
mov
dec
add
test
shlb
jp
or
fsubs
dec
int
add
add
inc
adc
shll
and
mov
shll
or
mov
orl
pop
dec
cmovo
inc
dec
push
lcall
sub
pop
xor
xor
add
jo
or
pop
sbb
sti
mov
jl
popa
xchg
push
adc
mulb
push
dec
adc
dec
lret
in
rorb
into
dec
push
inc
scas
sub
push
fs
inc
push
out
push
mov
dec
loopne
inc
sub
pop
dec
sbb
dec
xchg
arpl
inc
push
pop
or
push
and
push
lods
jg
fwait
xor
dec
dec
pop
and
inc
mov
shlb
dec
push
roll
inc
xor
jle
subb
out
bound
dec
lcall
gs
in
inc
sbb
pop
inc
push
inc
pop
pop
jbe
pop
sbb
in
fs
xor
in
xor
jae
in
in
xor
xor
in
ss
in
fs
aaa
ja
in
in
cmp
cmp
jnp
in
jns
xor
push
adc
fs
xor
jnp
jmp
aad
enter
jle
push
stc
filds
xor
and
fwait
sbb
inc
xor
adc
aaa
cmp
and
adc
nop
outsl
jbe
add
and
and
adc
add
xchg
cmp
adc
cmp
push
stc
add
sub
add
sbb
adc
mov
rcrb
cmp
jmp
pop
bound
daa
push
in
jo
dec
jno
push
xchg
or
jecxz,pn
add
inc
adc
iret
gs
push
pop
or
push
or
add
or
fwait
xor
das
pop
or
jae
dec
jae
imul
outsl
or
push
mov
insb
fcmovnu
adc
popa
xchg
aad
mov
and
dec
das
popa
popa
rcll
stos
or
push
daa
int
mov
adc
inc
mov
int
inc
or
lcall
dec
push
adc
or
dec
gs
jo
add
insb
or
lcall
inc
dec
lcall
lcall
pop
sahf
lret
lcall
mov
xchg
popf
fwait
or
inc
pop
in
cmp
inc
adc
dec
mov
or
mov
sub
mov
jb
mov
cmp
fcompl
test
js
es
pop
push
out
add
mov
pop
and
push
sub
xchg
jae
dec
daa
popw
or
pop
or
ljmp
push
cmpsl
fs
adc
lock
sti
push
cmp
inc
pop
push
inc
dec
pop
icebp
fdivrp
inc
push
push
push
rorb
and
jnp
push
adc
ja
and
cmp
inc
cltd
hlt
test
xor
inc
dec
mov
int
xor
adc
pop
fyl2xp1
jmp
push
inc
dec
push
fwait
jge
lods
sub
pop
push
adc
fsubp
nop
dec
dec
aam
jnp
dec
jae
xchg
das
xchg
jae
gs
shlb
sub
xor
and
enter
xor
and
xor
xchg
xor
jb
and
and
outsb
mov
sbb
aas
enter
sub
inc
stos
jle
loopne
dec
inc
pop
adc
jecxz
inc
push
inc
fs
sbb
sbb
loop
imul
sbbb
pop
movsl
and
adc
sbb
pusha
inc
push
insb
movsl
daa
je
sub
inc
mov
adc
inc
add
xchg
mov
push
outsb
popa
jo
test
mov
xchg
adc
psubusb
js
adcb
and
sbb
mov
js
adc
in
sub
or
and
sbb
push
or
mov
mov
orb
jge
outsb
inc
arpl
ficompl
dec
push
mov
and
or
and
stos
add
push
inc
mov
into
daa
inc
mov
rcrb
or
enter
fcoms
push
dec
fldt
jo
outsl
mov
mov
and
mov
and
aaa
mov
mov
inc
cli
arpl
push
lea
into
pop
mov
or
push
pop
inc
pop
push
and
sbb
lds
js
mov
jbe
imul
repz
dec
into
adc
out
push
push
loope
inc
push
push
cmovb
out
push
pop
adc
ljmp
lret
dec
and
add
imul
inc
mov
lcall
fs
es
loopne
xchg
sbb
inc
cmovge
jb
scas
popa
inc
mov
jg
xor
mov
adc
xchg
push
addr16
dec
xor
sbb
adc
shll
inc
jp
mov
push
test
jns
push
pop
jo
ja
xor
sbb
filds
mov
pop
inc
inc
inc
inc
or
push
pop
jne
xchg
mov
inc
pop
aam
ja
dec
bound
xor
inc
cmp
and
push
iret
ja
sub
mov
dec
adc
inc
insb
je
inc
fmuls
cmp
pop
cwtl
cwtl
adc
inc
sub
mov
mov
pop
inc
or
scas
insl
pop
inc
les
inc
jle
adc
mov
out
fimull
rorb
adc
outsb
push
mov
stos
pusha
iret
shrl
stos
mov
ret
add
call
sbb
xchg
fidivrs
jnp
pusha
and
pop
rdtsc
add
or
addb
bndstx
add
iret
iret
imul
xor
push
adc
sbb
xor
movsl
insb
in
xorl
inc
outsl
mov
nop/reserved
pusha
js
sbb
xor
popa
or
add
js
mov
sub
dec
je
int3
or
xchg
dec
pop
mov
cmc
adc
inc
inc
and
push
adc
inc
mulps
cs
push
jb
aaa
jb
adc
rcrb
adc
int
xchg
pop
ret
sbb
jp
insb
popa
das
xor
sub
pop
imul
pop
lods
push
clc
fisubrs
or
dec
unpckhps
faddp
inc
bswap
inc
mov
dec
xchg
add
add
mov
or
daa
push
xor
outsl
bound
adc
int
addb
dec
xchg
scas
xor
popa
fcomps
negb
pop
or
movsl
sbb
cltd
stc
jnp
pop
mov
mov
inc
or
push
xor
je
add
lods
or
pop
xchg
inc
ja
fs
jo
out
dec
jo
push
fwait
xor
in
adc
pop
jo
cs
lock
inc
inc
xor
and
inc
in
sub
imul
xchg
push
or
in
pop
pushf
les
dec
dec
outsl
sub
lea
dec
fisttpll
adc
push
mov
imul
inc
je
cmovge
lcall
lock
mov
push
sub
cmp
xor
cs
or
adc
and
pop
cmp
nop
adcl
jb
pop
fstl
mov
inc
dec
add
cmp
push
into
out
sbb
sbb
dec
fsts
sbb
jae
push
sub
enter
pop
sbb
jg
pop
xchg
int
sbb
xor
adc
sub
out
xor
pusha
sbb
dec
pop
flds
add
or
inc
adc
inc
mov
mov
test
xorb
add
or
incl
jo
fstl
test
adc
test
icebp
xchg
adc
popf
shlb
or
ja
jnp
icebp
stos
stos
shr
ljmp
jno
mov
jl
sbb
jne
cwtl
pop
int
cwtl
add
jae
mov
add
add
lea
inc
icebp
out
cwtl
icebp
fwait
cltd
ljmp
popf
dec
adc
mov
lret
sbb
in
shl
cli
hlt
std
cltd
adc
test
movsl
mov
repz
xor
pop
fnstsw
movsb
adc
mov
fucomi
outsb
leave
adc
int
enter
add
test
mov
test
dec
test
xchg
enter
movsl
call
int
loope
dec
lret
adc
mov
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
jb
mov
adc
mov
xchg
rorb
test
lcall
lods
dec
sub
mov
pop
xlat
xchg
jne
sub
decl
incl
push
jbe
jns
push
xor
jne
xor
jle
pop
loopne
int
loope
aas
pop
dec
jge
pop
cs
adc
std
mov
xchg
out
bound
xlat
lea
adc
or
xchg
shrb
rol
pop
popf
fdivrl
rol
adc
das
fcmovnbe
jle
dec
js
pop
les
fwait
lock
fsubrl
adc
sbb
adc
lcall
or
lret
iret
data16
gs
repz
adc
cs
in
jge
repz
adc
pushl
sahf
jns
pop
adc
popf
jl
lret
pop
pop
jae
sbb
inc
jle
adc
idivb
rclb
pop
jnp
adc
mov
pop
mov
mov
adc
lret
iret
xchg
push
divps
movsl
mov
movsl
mov
pop
mov
lret
jge
xor
mov
enter
ret
lret
ja
in
mov
fdivrp
in
leave
jmp
cli
fdivr
std
jmp
ljmp
ja
clc
in
cld
adc
lock
adc
mov
add
lock
jmp
jmp
pop
arpl
bnd
insb
mov
lret
cld
in
sti
lock
imulb
div
lock
jmp
ljmp
cltd
xchg
test
push
dec
inc
add
or
sbb
mov
lcall
and
push
push
dec
push
dec
and
dec
inc
mov
and
test
adc
mov
pop
in
dec
ret
jo
xor
out
outsb
fnsave
popa
daa
dec
and
pop
fidivl
pop
lods
or
push
and
xor
mov
sbb
movsb
jae
rolb
jmp
add
or
aam
imul
dec
jno
adcb
and
push
das
push
cmp
pop
or
lret
inc
xor
enter
fisubrl
and
or
lahf
add
inc
sbb
inc
lahf
sbb
push
add
adc
pop
adc
mov
sbbl
dec
sbb
scas
add
xor
pop
insl
jns
stc
fbstp
add
pop
jne
add
popa
dec
cs
add
ja,pn
sahf
ret
fiadds
mov
or
add
add
mov
mov
test
push
lahf
add
popa
inc
ret
sub
bound
mov
addr16
cmp
nop
mov
pushf
and
lahf
adc
sbb
mov
pop
arpl
pop
xor
fldl
aas
and
push
sbb
or
rclb
fwait
test
rorb
adc
add
stc
pop
pusha
mov
add
or
mov
jp
or
in
sbb
and
xchg
adc
dec
jl
inc
fimuls
inc
daa
cld
test
add
adc
pushf
inc
sahf
clc
das
decb
ret
push
hlt
mov
add
or
inc
mov
mov
adc
lods
or
xchg
fcomps
add
in
jl
je
jns
sbb
jg
bts
push
add
and
adc
popf
lods
ljmp
leave
sub
mov
fdivrl
mov
jae
pop
and
mov
cmp
cs
and
add
cmp
imul
add
dec
jb
cmpl
adc
xchg
add
rorl
idivb
shlb
sbb
add
aas
inc
je
je
and
test
push
xchg
add
and
add
sub
xchg
dec
sbb
arpl
shlb
pop
dec
divb
insl
dec
push
jmp
jbe
add
cmp
xor
mov
and
inc
dec
lahf
mov
call
gs
mov
mov
fidivrl
jo
or
xor
sub
aad
or
jmp
fcmovbe
stc
sub
outsl
pop
inc
dec
and
or
das
arpl
or
cmp
movsl
cmp
call
add
insl
aad
dec
pop
rcl
ss
nop
jge
dec
aad
add
ja
fstpt
push
dec
inc
or
push
push
push
dec
inc
pop
adc
insl
outsb
fisubrs
out
cmpxchg
pop
es
and
insl
dec
fs
pop
inc
inc
push
daa
add
and
push
sbb
ret
sub
popa
adc
push
mov
xor
adc
imul
push
imul
cmpsb
imul
push
cwtl
mov
sbb
xor
adc
negl
inc
pop
and
movups
outsl
cmpsb
pop
jo
push
sub
pushf
mov
hlt
and
adc
addr16
lods
sbb
adc
sub
popa
cmp
fs
pusha
xlat
and
aas
add
pop
and
mov
push
push
cwtl
jge
orb
daa
clc
addb
push
sbb
jbe
push
mov
inc
mov
arpl
pop
enter
cs
jg
add
bound
or
pop
pop
adc
mov
pop
or
add
jbe
call
push
inc
outsb
push
add
nop
push
push
jnp
cmp
or
cwtl
jne
pop
in
push
push
sub
test
shlb
jecxz
imul
pop
popa
adc
xor
inc
pop
adc
xlat
shrl
repz
xor
fwait
inc
rcrl
fistpl
jb
dec
data16
inc
into
adc
outsl
subb
outsl
stos
mov
inc
sbb
jo
pushf
mov
and
flds
mov
adc
cmp
cmp
fadds
sub
push
mov
ret
sbb
add
sub
scas
rol
shll
inc
or
jo
lods
sub
insb
aad
arpl
and
dec
mov
outsb
shlb
or
lods
inc
das
cwtl
andb
pop
jb
adc
scas
addr16
je
jb
push
in
pop
fs
add
jno
sub
movsl
mov
mov
sbb
push
lods
test
push
mov
in
add
scas
cmp
lds
mov
xchg
jecxz,pn
and
andb
out
add
shr
mov
stos
lcall
sub
fnsave
adc
or
or
adc
and
xorb
mov
sub
das
out
mov
or
fs
or
or
pop
adc
inc
and
mov
add
sbb
fwait
push
cltd
pop
or
pop
fwait
and
push
add
fwait
pop
and
insb
xor
sbb
pop
and
push
push
fldl
decb
subl
adc
adc
xor
sbb
ss
xor
add
int
pop
mov
fimuls
fwait
mov
xchg
mov
mov
loop
and
mov
arpl
push
outsb
jne
leave
pop
ret
add
or
cmp
push
push
inc
ffree
popf
das
andb
inc
shlb
dec
aad
sbb
jne
dec
gs
sub
add
add
xchg
in
push
dec
gs
push
sub
dec
mov
sbb
mov
cmovo
xchg
mov
mov
add
sbb
cmp
cltd
jae
mov
mov
jns
xchg
adc
sub
lds
xchg
repz
pushf
or
mov
fs
jae
pop
push
jb
mov
fiaddl
pop
jne
mov
dec
popa
js
sbb
ljmp
push
sahf
push
rorl
pop
mov
adc
xor
jns
mov
inc
xor
xchg
pop
cltd
xor
sub
rcr
pop
jne
shrb
push
mov
ret
in
and
jae
jp
sbbb
lahf
cmp
mov
adcl
ret
fstps
mov
inc
and
mov
jne
push
add
xor
or
inc
and
jne
rclb
sbb
xchg
mov
daa
mov
sbb
lret
adc
ss
cmpsb
enter
jmp
sbb
pop
sub
pop
inc
int
cmp
cmp
dec
mov
out
jp
repz
jne
cld
xor
mov
dec
sbb
sbb
adc
cmpsb
call
pop
jp
data16
inc
insb
xlat
and
test
insb
dec
sbb
jno
ss
mov
shrl
and
loope
adc
push
jecxz
int
sub
jmp
rcll
dec
mov
sub
sub
scas
mov
and
ret
orl
dec
stos
fs
cmp
xchg
mov
add
jecxz
mov
mov
mov
or
inc
pop
jbe
rcr
or
xor
je
bound
xor
xchg
add
arpl
xor
or
adc
adc
mov
mov
add
data16
inc
adcb
or
stos
dec
popa
cli
sbb
or
testl
mov
cmpsl
call
push
and
aam
fs
xchg
fs
andb
jnp
dec
fsubrs
sub
inc
in
pop
mov
push
jns
dec
mov
inc
add
int3
fisubrs
add
mov
adc
nop
mov
and
lcall
pop
pusha
dec
shll
aam
mov
jbe
push
dec
and
mov
push
and
push
adc
add
es
shll
es
imul
stos
sub
add
lock
pop
sahf
std
es
pop
or
add
add
inc
lcall
push
icebp
cmp
inc
add
xchg
pop
daa
mov
imul
cmp
push
jmp
add
sub
cs
xor
mov
insl
addr16
add
add
pop
sub
sbb
sub
je
sub
add
enter
popa
and
mov
sub
or
mov
add
push
test
sub
dec
xlat
jbe
js
pop
push
pop
das
push
lods
and
push
aaa
xchg
add
pop
push
push
inc
dec
cmp
imul
mov
mov
inc
push
lcall
mov
rcr
loopne
dec
mov
lcall
sbb
test
xor
xor
and
xor
cmpsb
jmp
fs
cmpsb
imul
imul
cmpsb
imul
shrl
cmpsb
lock
add
or
dec
shll
cmp
xor
shll
push
pusha
push
sarl
mov
dec
mov
int3
xor
shll
loopne
in
hlt
imul
cmpsb
imul
imul
cmpsb
imul
lcall
lcall
mov
cmpsb
imul
xchg
das
cmpsb
imul
sbb
lcall
cmp
dec
imul
imul
imul
shrl
xor
add
sbb
and
xor
lcall
pop
pop
push
je
test
sub
ja
mov
xor
and
cs
mulb
sub
sbb
xor
xor
stos
or
outsl
nop
bswap
pcmpgtb
jb
or
jae
dec
add
filds
add
mov
stos
push
mov
mov
packssdw
add
adc
hlt
mov
add
in
imul
xor
pop
add
xor
add
pop
sbb
xor
xor
sbb
bound
jnp
push
stc
xchg
add
pop
xor
inc
aaa
mov
xor
call
xor
pop
xor
xor
pop
andb
aaa
outsb
loop
cmp
pop
fcompl
mov
or
mov
jne
arpl
pushf
arpl
inc
mov
or
mov
adc
push
lods
mov
imul
push
mov
xorb
push
or
jae
jnp
fiadds
outsl
or
outsl
mov
add
pop
cmp
jns
pop
cmp
int3
xor
xor
jo
pop
test
popa
jp
jae
jp
arpl
add
lahf
push
add
cmp
shrl
mov
or
push
mov
movsb
ss
jae
int
dec
push
add
or
mov
test
bound
daa
test
mov
adc
or
and
mov
into
les
dec
imul
scas
jnp
or
mov
push
pop
push
sbb
push
shlb
xchg
fs
pop
jnp
or
lds
mov
scas
aaa
sub
loop
filds
insb
fsubrs
xorl
push
cmp
xor
sub
mov
lret
sysret
ja
xchg
mov
mov
cmpsl
or
es
popa
in
jb
subl
fists
insl
mov
adc
sahf
dec
shrl
jno
mov
roll
sarb
stos
dec
add
xlat
inc
orl
insb
xor
das
clc
cmc
inc
push
mov
cs
mov
jb
fwait
int3
test
mov
out
andb
mov
mov
push
add
dec
pushf
cmp
mov
cs
test
loopne
adc
push
lret
daa
les
lds
orb
xchg
cs
out
sub
dec
dec
inc
dec
ror
fcoml
xor
outsb
inc
xchg
movsb
test
pop
jmp
repnz
sarb
dec
dec
inc
dec
dec
pop
shrl
lods
shrb
dec
dec
arpl
mov
dec
inc
inc
aaa
xor
pop
loopne
lock
xor
aas
or
sarl
sarb
test
push
mov
fs
daa
pop
dec
add
dec
cmp
pushl
pop
push
push
dec
push
cmp
pop
ss
xor
xor
lds
popf
dec
outsl
fisubs
test
and
cs
aaa
jne
lret
xor
adc
and
ret
out
push
dec
pop
add
or
rolb
xor
test
mov
adc
sbb
iret
push
and
xor
pop
lea
xchg
jbe
ss
xor
xchg
shrb
lcall
adc
dec
push
lods
xor
iret
xchg
xchg
int3
insl
mov
dec
inc
imul
jne
scas
inc
daa
mov
lahf
arpl
fwait
inc
dec
mov
xchg
insb
flds
sub
inc
mov
dec
dec
and
mov
cmp
add
daa
fwait
addl
add
push
or
outsl
sub
jo
and
cmp
inc
fadds
cmp
inc
jnp
gs
mov
mov
inc
imul
jge
pop
jae
insb
push
fisubs
insl
imul
pop
pop
xchg
ljmp
cli
lds
sbb
pop
fwait
pusha
cwtl
pop
fdivs
xor
xor
repz
and
cmp
inc
movsb
les
xchg
jnp
dec
lea
pop
pop
jmp
sbb
sub
inc
or
pop
xorb
cmpsl
or
inc
mov
data16
push
push
daa
imul
or
jbe
pop
daa
adc
push
jnp
sub
xor
or
inc
mov
insb
repnz
imul
inc
lret
mov
ss
inc
inc
xor
cmpb
out
inc
dec
test
cmp
adc
push
and
push
sbb
addr16
cmpsl
mov
mov
test
test
push
lds
mov
push
cwtl
inc
mov
add
mov
xlat
ss
call
cmp
xchg
push
inc
push
xlat
daa
mov
fisubrs
xor
inc
push
pop
cmp
mov
cmp
sub
pop
cmpsl
sbb
into
or
mov
mov
xchg
jno
lods
adc
sbb
inc
xchg
mov
push
or
pop
shrl
das
fistpl
dec
data16
ret
push
mov
aam
js
xor
leave
lea
cmp
fistps
adc
sub
or
xor
dec
aad
insb
outsb
pop
inc
or
or
js
cmp
in
xchg
inc
insb
sbb
addr16
mov
mov
mov
popa
leave
lret
sbb
pop
js
xor
stc
or
push
nop
jmp
adc
and
lcall
in
and
or
adc
ss
add
inc
xchg
fldcw
jo
pop
lods
shrb
jne
push
rorb
or
inc
mov
xchg
mov
ret
push
insb
mov
or
sbb
in
mov
cltd
xlat
setae
xchg
rcrb
xor
jecxz
xchg
les
and
inc
inc
push
out
sub
sbb
push
hlt
out
xor
xchg
adc
xchg
inc
adc
imul
or
sub
sbb
adc
jnp
insb
jae
jbe
jp
push
cmp
pop
sub
pop
gs
add
imul
sbb
or
mov
call
pop
insl
jnp
iret
lock
mov
push
movsb
sub
xchg
and
dec
cmp
push
test
fdivs
cmp
popf
dec
cmpsl
addl
xlat
stos
lcall
inc
xchg
jo
mov
test
pusha
mov
adc
icebp
andb
and
out
jp
shrb
add
dec
mov
push
push
mov
daa
rolb
dec
es
cs
in
adc
add
add
test
popa
out
repz
bt
gs
push
aad
ds
out
mov
mov
xor
pop
add
lods
stos
dec
cmp
jne
jnp
dec
aas
inc
mov
inc
jne
sbb
and
insb
add
iret
and
adc
xchg
mov
mov
out
pop
das
pop
pop
mov
stc
outsb
jae
pop
add
pop
das
daa
inc
xor
and
sbb
sbb
loope
or
xchg
les
or
add
mov
fwait
xor
adc
mov
test
pop
adc
add
mov
inc
or
or
or
add
inc
loope
add
jb
cmc
dec
mov
btc
adc
xchg
and
inc
mov
mov
mov
xchg
xor
cs
xchg
xor
push
xchg
jecxz
sub
dec
lods
xor
movsb
loopne
nop
scas
imul
inc
scas
cmp
adc
divl
mov
push
ja
lods
mov
addr16
push
sbb
mov
cltd
pop
imul
les
or
insb
aas
adc
adc
xchg
sbb
push
rclb
cmp
gs
pop
inc
bound
jl
nop
mov
arpl
pop
and
dec
pop
scas
adc
adc
jo
sub
mov
aaa
adc
arpl
sub
or
inc
dec
mov
xor
and
dec
pop
sbb
lea
xor
sub
pop
add
loop
arpl
ds
mov
sbb
lods
jg
jmp
pushf
cmp
incl
jo
das
add
loope
bound
lret
sbb
adc
rorl
sbb
dec
imul
add
jno
jge
mov
pop
mov
jmp
xor
dec
add
pop
or
imul
sub
sbbl
cs
in
int
inc
dec
pop
ja
xor
xchg
mov
pop
and
dec
push
dec
imul
sub
adc
and
sub
sub
jnp
pop
jmp
cmp
fs
adc
sbb
sbb
xor
mov
fidivrl
aas
add
mov
pop
xchg
nop
leave
and
loop
dec
scas
add
and
mov
data16
add
xor
mov
sbb
leave
movsb
ja
arpl
cmpsl
sbb
push
xchg
or
and
sub
push
sub
sbb
mov
or
push
xor
loope
repnz
pop
inc
and
mov
dec
inc
gs
mov
adc
pop
fldt
aam
sub
fldcw
dec
pusha
pop
call
outsl
call
andl
test
dec
or
sbb
mov
mov
call
arpl
daa
or
xchg
mov
push
jge
pop
mov
pop
jge
in
adc
dec
dec
shlb
sub
push
lret
inc
dec
insl
test
adc
pop
mov
int
cli
add
aad
or
adc
pop
dec
lods
mov
inc
and
lahf
or
roll
push
cmp
and
mov
and
jbe
mov
mov
andb
push
data16
push
mov
mov
xchg
leave
ja
and
mov
inc
repz
aas
push
sbb
and
mov
and
and
push
sub
xchg
insl
pop
push
bound
jecxz
mov
daa
lock
cs
inc
sub
lret
scas
add
outsl
cmp
add
inc
insl
out
sbb
xchg
popa
cmp
mov
pusha
fldenv
mov
push
pop
inc
inc
inc
and
fmuls
mov
and
cmp
jae
xor
fsubrs
dec
adcl
xchg
jb
or
add
mov
fildll
insl
jae
insl
xchg
pop
mulb
and
xor
mov
mov
inc
push
ret
loopne
mov
pop
pop
xor
push
daa
jb
pop
outsl
jg
push
xchg
pop
movl
lahf
pop
insl
jb
push
mov
mov
pop
cltd
jp
and
mov
sbb
mov
inc
or
mov
int3
int
and
pop
xor
sub
pop
pop
xor
in
push
shlb
sub
out
push
or
popf
pop
sbb
inc
test
sbb
jo
test
fwait
cmp
dec
push
pop
mov
adc
xchg
xchg
and
sub
ficoms
cmp
inc
daa
xor
sbb
push
xchg
and
mov
dec
and
inc
push
inc
jmp
int
pop
push
daa
inc
mov
mov
aaa
or
imulb
sbb
and
mov
mov
mov
jb
rolb
arpl
ret
sbb
fucomi
or
dec
call
call
xchg
cmp
xchg
ja
pop
test
sub
shlb
insl
jbe
or
add
push
xor
push
icebp
pop
mov
or
push
inc
pop
cmpsb
mov
adc
gs
mov
sub
pop
mov
sub
roll
fsubl
sbb
cs
push
popf
inc
or
or
addr16
push
mov
cwtl
add
mov
bound
pop
mov
inc
sub
and
cmp
roll
xchg
cmpl
or
outsb
add
addl
bound
mov
shll
in
and
sub
jb
inc
sub
xor
or
pop
sub
xorb
xchg
add
and
out
adc
sti
inc
sbb
ret
adcb
fcoms
adc
or
adc
stos
add
sbb
inc
js
or
mov
inc
or
andl
adc
push
dec
add
push
sub
or
lret
mov
mov
ret
outsl
cmpsb
mov
mov
mov
cmp
les
insb
int3
add
das
outsb
ljmp
repz
pop
adc
mov
int3
jp
es
mov
loop
popa
jle
xor
pop
inc
and
or
iret
fldl2t
adc
mov
jne
push
or
out
fs
fwait
repz
mov
aaa
xor
push
xor
ret
or
sub
mov
inc
add
fbld
nop
dec
add
sub
notb
popl
mov
stc
cmp
push
xor
sbbl
mull
mov
and
mov
ljmp
xor
xor
add
popa
xor
inc
add
or
push
mov
xor
or
xlat
or
out
or
xchg
or
and
jae
inc
in
push
jmp
mov
or
or
test
pop
pop
pop
dec
dec
cs
adc
xlat
fildl
pop
add
jo
push
lret
or
pop
jle
xor
push
sbb
imul
roll
jne
repz
add
jns
sub
mov
jb
inc
mov
push
jp
movsb
and
rclb
adc
test
repz
nop
adc
sub
push
pop
jnp
jns
popa
lds
adc
dec
or
pop
push
pusha
or
out
xor
es
sub
sbb
icebp
adc
dec
add
out
shrl
jmp
xor
push
out
movsb
or
xor
inc
xor
dec
add
mov
daa
push
mov
stos
pop
or
push
dec
and
push
mov
test
mov
pop
dec
mov
dec
daa
hlt
sbbb
ffreep
adc
daa
ret
xor
push
sub
mov
mov
in
xor
popa
stos
fbstp
test
xchg
fistps
push
in
sub
add
xor
push
inc
divb
aam
fimull
mov
pop
insl
or
jae
shlb
mov
aaa
xor
sbb
clc
gs
lret
add
sahf
mov
dec
cmp
add
andb
jo
adc
add
sbb
mov
dec
aaa
add
lret
push
mov
inc
add
dec
push
daa
sti
pop
jl
cmp
jmp
xor
push
xor
sbb
mov
sub
cmp
mov
imul
mov
push
and
and
push
shrb
testb
pusha
push
pop
mov
pop
lods
add
ljmp
test
or
sub
pop
inc
dec
sub
pop
loope
scas
inc
inc
dec
dec
push
testl
pop
lock
sub
shlb
inc
or
int3
sub
add
sbb
pop
jecxz
jle
call
or
push
aas
daa
fwait
adc
insb
ret
mov
push
sub
cmp
cmpsl
test
sbb
aaa
sbb
mov
dec
xchg
and
adc
jne
push
daa
adc
push
and
jmp
mov
push
sub
inc
and
adc
jbe
sbbl
xor
dec
sbb
test
adc
enter
xor
xor
cmp
cmp
xor
jb
orl
and
arpl
stos
lods
leave
add
add
inc
sbb
inc
add
inc
or
xchg
movsl
adc
jl
inc
ljmp
orb
pop
push
mov
mov
cmp
jae
add
add
xor
xor
push
out
bound
ja
mov
and
add
mov
sub
xchg
lds
mov
push
cmp
test
pop
div
cmp
add
mov
xor
imulb
mov
xorb
inc
loop
pop
mov
mov
je
or
fs
jo
popa
jo
lods
push
outsl
filds
xchg
inc
xor
inc
jl
cmp
shlb
mov
dec
js
inc
and
xor
xor
push
push
adc
xorl
inc
jne
mov
or
je
or
fists
ret
add
divb
pushl
repnz
add
cli
push
call
and
add
xor
popa
pop
inc
jne
ret
call
sysret
sbb
pop
pop
pop
push
sub
sahf
mov
lea
mov
rep
mov
stos
push
push
push
push
push
push
and
outsl
add
add
test
ret
add
flds
add
inc
push
xchg
lahf
sbb
inc
xor
das
lea
add
push
fsubrs
in
pushf
je
rol
fiaddl
nop
and
test
cmp
push
or
add
add
add
add
mov
dec
out
mov
fildl
push
inc
iret
mov
movsb
addb
aas
push
push
jne
test
jg
idivb
pop
cli
xchg
inc
xrelease
inc
dec
fidivrl
inc
push
push
dec
dec
ss
dec
dec
jp
adc
mov
sbb
or
pop
nopl
push
orl
push
sbb
dec
mov
or
xchg
sahf
shl
mov
jne
fldt
and
push
mov
or
dec
sti
push
into
adc
rolb
push
or
mov
inc
xchg
insl
insb
or
push
test
mov
xchg
sub
push
mov
das
inc
add
sbb
cmpsl
sti
dec
xchg
adc
lahf
jnp
add
pusha
or
das
adc
or
mov
dec
push
or
sub
push
or
inc
mov
sub
inc
mov
dec
sbb
stos
and
xchg
adcl
mov
add
fwait
or
adc
add
inc
aaa
les
and
leavew
xchg
xor
xor
sub
mov
add
cmp
sub
sbb
inc
cmp
fchs
inc
movsb
sub
sbb
adc
sub
sub
and
lret
mov
adc
andl
imul
es
adc
xor
dec
sahf
inc
js
mov
data16
or
nop
cmp
incb
enter
add
dec
shll
add
and
int
rolb
cwtl
add
mov
lock
adcb
in
jnp
inc
add
add
incl
pop
jmp
jl
push
jg
sub
outsl
inc
cltd
orb
sub
orb
add
test
and
xor
addl
adc
add
mov
add
in
add
inc
ficoms
pop
and
lock
shlb
lret
iret
pop
adc
clc
pop
inc
ds
add
push
pop
leave
cmpb
add
notl
pop
jae
add
add
inc
add
pop
inc
orl
add
add
dec
shll
add
and
pop
or
or
sbb
push
sbb
cmp
xorps
adc
add
enter
pop
and
or
inc
push
xor
or
pop
push
pop
rorl
insb
pop
insl
stos
and
xorb
orl
pop
sbbb
dec
xor
and
ss
outsl
cmpsl
xor
pusha
xorl
mov
orl
pop
inc
add
adc
pop
stc
in
add
das
movsb
add
jns
and
daa
mov
cld
inc
jle
cld
push
and
out
shll
and
mov
in
outsb
nop
inc
mov
iret
mov
in
call
out
jle
push
add
pop
pop
in
push
repnz
xor
fcomp
loopne
cmp
jle
stc
push
rclb
sbb
sbb
sbb
nop
add
xchg
xchg
xchg
rcrl
add
lahf
js
adc
push
add
ds
xchg
sbb
movsb
inc
jecxz
shll
clc
mov
test
xor
shll
adc
imul
cmpsb
imul
imul
dec
shll
aam
sar
lret
insl
xor
rolb
roll
cld
xor
ja
jecxz
out
jmp
out
jecxz
ja
pop
jg
jns
mov
inc
je
jo
cmpsb
imul
imul
cmpsb
imul
xor
cmpsb
add
movsl
clc
hlt
lock
shll
enter
imul
lcall
jl
pusha
add
imul
mov
mov
jg
dec
push
pop
mov
jo
icebp
and
push
lret
mov
inc
aas
lods
fwait
in
push
add
rcrl
ud2
mov
dec
repnz
add
or
and
push
ret
mov
adc
dec
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
idiv
dec
leave
fwait
xchg
and
and
add
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
and
jg
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
incl
xchg
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
decl
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
call
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
pushl
scas
push
xchg
jge
sub
enter
fmuls
lret
push
dec
ja
add
pop
add
xchg
dec
shll
xor
popa
cmpsb
imul
xor
shll
xchg
mov
repnz
data16
add
dec
insb
add
adc
push
and
ret
add
inc
inc
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
inc
push
add
add
repnz
add
sbb
push
sti
push
insb
gs
and
outsl
and
add
cli
inc
sub
sbb
pop
dec
lcall
inc
add
add
push
jbe
adc
adc
sub
lcall
inc
sub
outsb
fs
jo
outsb
es
mov
inc
dec
dec
outsl
adc
inc
in
xchg
mov
aaa
sub
pop
add
scas
lret
or
inc
inc
inc
mov
fwait
call
or
mov
test
ret
cmp
ret
cmpsl
je
jns
outsl
push
imul
test
clc
popa
and
inc
in
push
fs
imul
adc
iret
adc
mov
mov
js
int
lods
xchg
aam
or
into
push
fiaddl
cmp
add
inc
mov
push
adc
js
insl
bound
mov
dec
outsl
xor
out
inc
jbe
mov
clc
xor
adc
dec
jbe
jnp
or
daa
or
xchg
push
sbb
inc
mov
add
xchg
jae
mov
orb
jge
bound
inc
inc
aaa
je
cmove
sbbb
and
je
push
sbbl
adc
adc
push
adc
lds
jmp
outsb
push
outsb
loopne
or
mov
adc
jo
gs
data16
push
cmp
xor
push
sbb
sub
dec
out
inc
or
add
orb
xor
push
and
add
inc
popa
sbb
jle
xor
or
inc
sti
xor
jo
dec
sbb
mov
das
push
push
xchg
add
xor
dec
aam
cmp
stos
imul
addr16
dec
js
leave
pop
mov
inc
push
sub
pusha
push
rcll
rorb
insb
dec
inc
mov
mov
mov
loop
pop
adc
push
repnz
and
popa
inc
jge
in
dec
and
sub
or
add
fs
jbe
or
fdivs
push
mov
fists
sub
inc
mov
ret
or
mov
rcr
idivb
jmp
out
push
mov
adc
fwait
inc
push
jb
popa
int
xor
sbb
lahf
fistps
and
sbb
imul
cmp
fmuls
movlps
ret
rcll
adc
insb
jae
or
sbb
fcoml
and
and
mov
inc
or
xchg
and
lret
sub
sub
push
or
andb
scas
or
push
mov
or
jp
pop
dec
inc
dec
or
mov
push
js
jo
je
rclb
das
pushw
lods
insb
mov
pop
push
sbb
push
sub
ficompl
je
ja
aaa
mov
xchg
pop
xor
inc
js
mov
jge
xor
xor
cmp
mov
add
add
sbbl
imul
or
adc
add
add
rcrb
nop
add
or
neg
aaa
or
push
push
or
mov
dec
mov
add
xchg
adc
cmpsb
add
sub
mov
add
imul
aaa
mov
jmp
outsb
dec
pop
or
push
push
and
ss
add
js
inc
add
sub
mov
es
jl
add
ror
dec
dec
lcall
add
add
inc
push
add
nop
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
