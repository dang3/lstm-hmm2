fldcw
incl
inc
add
push
push
je
imul
or
fs
inc
push
mov
sbb
sbb
test
sbb
mov
xchg
inc
push
push
call
ret
std
xchg
out
mov
adc
or
push
mov
mov
pusha
mov
adc
test
jne
push
cs
jmp
or
cmp
jge
mov
mov
mov
xchg
ud0
adc
pop
inc
arpl
shlb
sub
insb
jmp
imul
ret
mov
jmp
pop
jg
data16
mov
test
je
in
mov
decb
shlb
mov
and
or
sbb
lahf
mov
mov
cmp
jmp
test
adc
push
out
out
fcmovu
roll
add
push
add
rorl
sbbb
ja
or
add
mov
int3
enter
dec
int
fcmovnu
lret
loopne
jecxz
in
ret
cmp
jge
jcxz
cmp
lcall
ret
mov
cli
ja
lea
lea
std
rep
jmp
mov
ss
and
out
test
sar
enter
sub
sub
rep
cld
dec
inc
imul
stc
add
or
in
sti
fcmovnb
push
add
mov
add
add
fistpl
add
and
pop
and
cmpb
add
out
shr
fldt
or
or
mov
mov
in
add
je
pop
adc
adc
int
aam
icebp
pushf
pop
push
mov
outsb
cs
adc
fistl
or
push
mov
add
out
mov
cmp
push
mov
inc
mov
mov
pop
mov
mov
add
jmp
cld
mov
mov
inc
xor
mov
inc
add
jb
cmp
das
pop
push
mov
mov
mov
inc
add
hlt
mov
sub
jbe
mov
jmp
loope
fucomi
ret
xor
xor
rol
add
mov
sbb
mov
push
loopne
add
cmp
outsb
fs
pop
cmpsl
lock
dec
jae
xor
in
in
fstpt
push
inc
cmp
je
mov
push
sub
xchg
lahf
in
je
and
je
pop
je
xor
in
sarl
dec
test
and
add
idivl
divb
jmp
adc
ja
ja
lea
add
add
sub
aaa
sbb
dec
arpl
testb
jmp
fdivrs
js
pop
sub
jmp
inc
daa
jmp
mov
mov
wbinvd
or
dec
popa
jb
push
and
mov
jbe
pop
adc
or
aad
sbb
aad
test
inc
add
xchg
jne
movsbl
inc
inc
jmp
add
shrl
cmp
sbb
push
push
addl
mov
push
pushf
dec
pop
pop
pop
pop
daa
mov
mov
fnstsw
testl
mov
movl
hlt
mov
push
push
inc
cmp
pop
fdiv
sbb
add
sub
lock
push
push
mov
mov
in
adc
mov
inc
fiadds
out
mul
adc
adc
cmp
ja
out
push
stc
mov
test
or
sete
or
std
jle
mov
inc
mov
call
pop
sbb
push
sub
inc
xor
mov
xor
push
jbe
arpl
jnp
les
imull
mov
lods
sti
mov
add
push
test
add
inc
add
sub
add
jnp
xor
add
sbb
inc
leave
ret
iret
mov
adc
mov
in
jg
add
cmpl
adc
rorb
sbb
adcl
mov
add
adc
mov
add
push
out
int3
mov
adc
pop
pop
and
mov
cmp
add
push
mov
outsl
jg
testl
fmul
push
mov
pop
in
mov
add
mov
lds
mov
cmp
outsl
jb
outsl
outsb
jae
inc
outsl
jo
pop
addr16
lret
sub
and
cmp
xor
cmp
inc
push
insb
popa
outsb
add
filds
ret
popl
push
add
lods
mov
xor
dec
fiadds
jmp
add
and
jnp
mov
sbb
add
outsl
or
and
inc
jg
mov
cld
dec
xor
ret
dec
cld
sub
pop
add
adc
mov
lock
xor
orl
and
or
cld
movl
bound
mov
xchg
stos
loope
pop
stc
pushf
arpl
inc
lret
mov
mov
mov
dec
ficoms
jae
inc
jmp
fdivrs
push
push
push
mov
inc
repnz
jne
not
pop
add
pop
pop
call
test
lcall
or
je
es
jns
mov
add
cmp
into
pop
or
add
mov
adc
adc
push
fidivl
out
inc
iret
jecxz
mov
inc
jle
test
jg
ret
add
jo
lahf
cld
sub
pop
es
mov
dec
xor
aam
insb
inc
xor
test
pop
sub
es
jl
cmp
jge
sub
mov
sbb
fnstcw
add
add
mov
in
xchg
pop
sub
mov
jmp
adc
pop
ret
mov
xor
ds
fwait
xor
std
mov
xchg
push
into
dec
js
mov
inc
sub
icebp
or
aad
push
loopne
sbb
repz
lret
popl
shr
jle
insb
pop
mov
sub
dec
imul
das
aas
fdivs
inc
dec
scas
lea
mov
jne
sub
ret
push
outsb
or
pop
mov
int
cld
mov
bound
xchg
ljmp
sbb
icebp
jl
cmpsb
stos
sbb
or
daa
push
rcr
xchg
into
lahf
push
xor
add
in
add
cld
shr
or
push
push
sbb
out
mov
arpl
dec
add
mov
sarb
push
mov
add
or
je
mov
or
outsl
loope
mov
jp
ljmp
clc
or
or
fcmovne
fmull
or
je
add
je
cmpps
push
popf
cmp
mov
decl
inc
or
adc
jmp
push
sub
cs
add
dec
cs
jg
sahf
std
fisttpl
mov
adc
mov
sbb
divl
lock
xchg
mov
xchg
adc
xor
mov
add
insb
xor
mov
xor
test
repz
aaa
shll
inc
pop
fstps
xlat
or
dec
pop
jge
add
imull
ret
lahf
adc
push
mov
or
sub
or
add
pop
or
fstps
sar
or
xchg
repnz
pop
fsubr
push
in
mov
or
jbe
xor
sbb
adc
pop
mov
add
adc
mov
adc
rolb
and
fwait
sub
loop
push
repnz
push
jb
cld
ret
mov
jmp
sub
jle
sbb
movb
push
inc
add
xchg
fcoml
adc
stc
push
stc
cmp
xchg
stc
dec
cmp
cmp
cmp
or
cmpsb
jns
mov
pop
repz
jl
adc
dec
or
mov
data16
jge
fmuls
push
insb
lea
push
cmpb
packssdw
rolb
je
enter
test
out
add
add
sbb
push
insl
fs
adc
shr
incb
test
pop
sub
jle
inc
add
mov
dec
sbb
fs
adc
psadbw
sbb
repnz
jge
pushf
xor
mov
dec
push
cmc
mov
xchg
ja
jne
dec
jne
push
or
push
xchg
sub
mov
adc
adc
mov
cwtl
lar
xchg
imul
add
add
add
and
inc
inc
xchg
pop
pop
iret
clc
les
mov
testb
add
cwtl
jl
gs
xor
xchg
test
mov
mov
inc
cmp
enter
cmp
jb
je
ficompl
cmpw
push
add
cmp
jmp
je
bound
in
test
das
cmp
jae
mov
shrb
or
cmp
cld
out
push
jne,pt
or
and
testl
movl
mov
jo
popa
nop
in
stc
or
mov
nop
lret
pop
jb
out
cmp
add
popf
dec
in
insl
andl
add
mov
loope
push
loop
test
pusha
add
mov
xchg
fstl
lcall
mov
insl
sub
loopne
cwtl
jmp
add
pop
adc
add
call
jmp
mov
inc
insl
call
cltd
idiv
cmp
mov
mov
je
adcl
inc
lret
ljmp
call
cmp
jge
sbb
and
push
call
lock
mov
push
inc
inc
loopne
push
in
lods
loopne
lcall
push
cwtl
xchg
mov
inc
in
jge
add
sub
mov
inc
dec
push
add
cmp
in
in
push
push
out
add
push
pop
xlat
push
sbb
push
arpl
dec
movsl
fisubl
bound
ja
add
nop
int
xor
movsl
pop
in
sub
dec
ret
and
shll
jle
int3
or
mov
clc
pop
dec
dec
or
jl
inc
movl
mov
mov
lea
pusha
clc
inc
js
mov
and
dec
sti
push
sbb
mov
lcall
movsl
add
mov
xchg
inc
fidivl
daa
inc
rcr
js
push
fnstenv
aad
pop
out
dec
push
mov
or
and
mov
adc
dec
cmp
dec
fmull
je
adc
push
orl
lcall
xor
cmp
push
add
stos
xor
mov
fisttps
push
je
cmp
addr16
mov
sbb
movl
adc
add
fsubrs
fildl
or
out
call
push
add
mull
fs
push
adc
and
mov
jp
fs
add
mov
ljmp
mov
in
add
push
fiaddl
cli
push
jmp
pop
hlt
and
or
or
ja
jecxz
outsb
pop
loop
pop
jns
neg
testl
scas
jo
add
fincstp
fildl
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
dec
adc
fidivs
sub
sbb
inc
loop
pop
test
sbb
div
sbb
imul
jge
jp
push
or
cmp
or
pop
dec
ret
mov
add
adc
and
test
cvttps2pi
sub
repz
or
repnz
dec
jae
or
or
ret
pop
mov
out
fs
mov
repnz
push
xchg
hlt
repnz
add
push
aam
xlat
jg
aaa
pop
in
in
and
inc
jl
or
mov
push
shld
shl
ret
sbb
sar
ljmp
sar
sbb
lea
mov
jge
add
and
nop
pushl
mov
shlb
and
add
cmpl
mov
ds
ja
clc
push
int3
dec
and
and
add
jmp
pop
cmpsl
mov
add
je
mov
mov
inc
dec
imul
iret
pop
jge
mov
sbb
inc
sbb
std
jmp
push
mov
sbb
js
aaa
mov
test
jle
pop
dec
sub
addb
xor
mov
adc
adc
ret
adc
inc
mov
and
addr16
mov
mov
sbb
sub
in
mov
add
fldl
or
jbe
jbe
adc
pop
add
and
push
inc
and
and
and
ret
add
addb
enter
mov
or
mov
outsl
xor
and
push
out
inc
mov
pop
adc
xor
pushf
popf
cli
add
in
xor
dec
adc
push
push
inc
popa
leave
clc
add
orl
and
add
testb
jp
sbb
push
sbb
cmpsb
aam
inc
add
lds
cld
inc
cmpl
sarb
mov
clc
lret
pusha
ss
mov
ds
scas
inc
sub
and
push
push
cld
cmp
push
clc
mov
test
push
in
pop
xor
idiv
ljmp
pop
fistps
shlb
jnp
adc
pop
add
inc
mov
fld
or
ret
cltd
outsb
daa
pop
lods
push
jae
push
mov
pop
jne
sarl
push
out
add
xor
hlt
into
cs
jne
sub
and
sbb
push
addl
jne
and
cmp
jge
fbstp
add
out
and
fcmovu
jne
cmp
add
add
jbe
ds
add
cmp
ja
int
jns
int3
mov
andl
shrb
sbb
sbb
cmp
xchg
rcrl
and
test
or
sub
iret
sub
push
jns
dec
jo
lahf
pop
dec
jne
inc
or
std
sarl
and
mov
hlt
mov
nop
inc
arpl
sub
mov
loopne
or
push
int3
daa
aas
leave
aam
ljmp
inc
aad
fcmovnu
scas
ljmp
call
adc
dec
lea
in
mov
lahf
lea
cwtl
loopne
and
mov
out
xchg
sbb
sbb
mov
jbe
xor
and
nop
add
sbb
nop
mov
push
mov
mov
and
notb
arpl
shrl
cmp
xorb
pop
mov
data16
jecxz
pop
and
mov
mov
movsb
and
adc
outsb
jecxz
inc
inc
cmp
das
jne
dec
mov
ficomps
bound
inc
mov
in
xor
lahf
mov
add
lahf
add
sbb
push
pusha
fwait
mov
jl
or
addr16
adc
es
popf
xchg
push
mov
adc
adc
push
pushf
inc
lcall
jl
mov
mov
out
mov
or
rcrl
or
ret
xor
add
add
int
sbb
ret
enter
sub
nop
sub
mov
pop
jle
mov
fldt
dec
cld
add
mov
out
scas
movsb
pop
xor
jnp
sbb
pop
and
adc
jmp
push
jb
sub
cwtl
mov
sti
pop
add
cmp
dec
out
sbb
add
mov
movsb
sbb
and
fildll
lcall
out
mov
outsl
je
scas
in
orl
xchg
les
cwtl
pop
xchg
jmp
fwait
jno
mov
insb
out
test
mov
pusha
and
push
leave
mov
mov
aaa
or
stos
mov
mov
enter
movsb
and
sub
pop
cmp
mov
xchg
pop
push
mov
jne
jl
xchg
hlt
mov
pusha
mov
lds
xor
jge
stos
adc
dec
lock
pushf
nopl
inc
or
lret
jp
in
mov
add
pcmpgtb
in
call
xchg
rol
ds
jns,pn
fmull
fsub
test
pop
xchg
mov
stos
shlb
add
mov
in
fcomp
xchg
dec
push
in
int3
mov
mov
inc
rorb
mov
inc
cs
enter
pop
mov
rol
jb
fldt
mov
or
sbb
mov
pop
repnz
je
mov
pop
mov
mov
insb
inc
movsb
in
mov
xlat
inc
add
pop
fs
pop
xchg
mov
outsl
add
jo
sub
les
xchg
dec
mov
add
mov
xchg
pop
push
cmp
call
add
fcmovu
mov
and
movsb
xor
insb
pop
pop
cmp
cmp
jge
add
mulb
lock
add
cmp
sti
in
lcall
jnp
lea
cmpl
push
mov
lods
jg
fimull
test
mov
daa
popf
test
pop
pop
dec
adc
fadds
ret
insb
mov
pushf
lret
xchg
iret
push
stos
dec
js
mov
fsubrp
dec
cmp
mov
fistpl
add
inc
jmp
add
jge
adc
cwtl
mov
pusha
adc
cwtl
outsl
mov
jp
add
neg
sbb
std
push
ret
test
ret
into
mov
out
and
into
jo
xchg
test
pop
jb
pop
sbbl
push
pushf
cmpsl
add
cmpsb
enter
inc
add
dec
jb
fcomps
js
insb
mov
iret
pop
mov
add
push
mov
pop
es
cmpl
mov
add
test
sub
mov
mov
inc
inc
push
and
test
rolb
stos
xor
add
and
insl
fstl
mov
adc
mov
incl
inc
add
dec
inc
add
insb
inc
push
dec
jl
cmpsl
or
or
pop
add
add
fwait
sti
outsl
pop
add
add
or
push
add
adc
ss
add
bound
push
add
add
add
sbb
arpl
mov
add
cmp
adc
movsb
sbb
cmp
pop
cmovae
fistpll
scas
pop
sbb
inc
pop
mov
mov
pop
fwait
popf
int
cwtl
sbb
imul
push
pop
xlat
mov
pop
arpl
popa
std
lret
add
lcall
jb
das
iret
mov
imul
or
imul
popa
jb
inc
or
jb
arpl
fs
jae
cmovae
popa
xor
insb
outsl
jae
dec
ja
xlat
or
or
mov
jb
outsb
je
push
push
arpl
push
imul
or
insb
cmp
or
imul
imul
inc
inc
dec
dec
outsl
insl
insl
pusha
jbe
insl
nop
outsb
jo
insb
jae
adc
jne
or
sbb
inc
push
inc
outsb
or
inc
dec
outsl
fs
movsl
inc
in
mov
dec
popa
insl
adc
repnz
cmp
push
jge
pop
push
mov
fdivl
dec
mov
mov
jns
ss
add
rcll
dec
in
jo
lods
decb
int3
push
pop
stc
das
dec
call
dec
add
add
pop
inc
sub
add
sbb
and
in
sub
aaa
mov
inc
add
add
fnstenv
or
fwait
dec
data16
adc
add
call
mov
or
and
add
pop
dec
xchg
mov
inc
test
popa
pop
mov
nop
jmp
and
cmp
inc
push
sub
int
ja
push
rolb
jbe
and
dec
leave
and
shrb
fs
outsl
mov
repz
mov
push
push
jl
sub
cmp
inc
jb
lahf
mov
sub
daa
xchg
fsubs
dec
mov
cs
jae
je
mov
daa
adc
cmpb
add
mov
inc
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
sub
inc
add
clc
inc
add
add
cmp
add
add
add
add
add
add
add
addb
add
cwtl
add
orb
add
fadds
add
insb
xchg
cmp
add
add
add
add
add
add
dec
add
addb
add
jo
add
insb
xchg
cmp
add
add
add
add
or
add
add
xor
add
push
add
add
cmp
add
add
add
add
add
add
push
add
test
add
insb
xchg
cmp
add
add
add
add
add
add
mov
add
insb
xchg
cmp
add
add
add
add
or
add
add
add
add
in
add
add
cmp
add
add
add
add
add
xor
add
insb
xchg
cmp
add
add
add
add
or
add
add
add
add
and
add
or
dec
add
dec
add
dec
add
dec
add
jge
sub
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
cmp
add
outsb
cmp
aas
jno
add
cmp
add
dec
add
push
add
push
add
pop
add
add
add
jb
jns
ja
jnp
js
xorl
addl
test
addl
mov
mov
lea
xchg
add
lods
xchg
add
mov
add
mov
cmpsb
add
stos
test
add
mov
add
mov
mov
add
stos
add
lods
add
mov
add
lret
lret
lret
add
int
add
fcmovb
add
ror
add
fmulp
add
rcl
add
aad
add
add
fcmovu
add
add
ljmp
jmp
jmp
in
in
in
add
icebp
call
add
icebp
icebp
add
cmc
cmc
add
cli
testl
incb
incl
add
add
add
adc
add
adc
sbb
add
nopl
and
and
add
add
add
add
and
add
add
add
sbb
cmp
xor
daa
and
add
push
sub
ds
daa
and
sbb
add
inc
inc
inc
inc
inc
ds
daa
daa
sbb
add
cs
inc
inc
ds
sbb
add
add
add
inc
inc
ds
add
add
add
add
cmp
inc
sub
add
add
incl
add
incl
add
jg
add
aas
add
clc
pop
add
lock
rolb
add
add
add
add
add
add
add
sldt
clc
pop
add
jg
add
incl
add
incl
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
adc
sbb
add
push
sbb
and
add
push
sbb
and
add
pop
add
pop
pop
add
pop
and
sub
add
bound
add
sub
xor
add
xor
ss
add
insl
xor
cmp
cmp
inc
jae
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
add
push
add
dec
add
push
add
push
add
push
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pusha
add
insl
add
outsl
add
popa
add
popa
add
add
add
add
insb
add
add
outsl
add
imul
cwtl
outsb
add
jo
js
je
je
jo
ja
je
jbe
je
jns
js
jbe
jb
jne
jae
jbe
je
jns
jbe
ja
je
js
je
jl
jp
jnp
jns
jge
jns
andb
subl
jg
test
xchg
add
stos
addb
lods
addb
test
add
mov
mov
mov
add
mov
add
mov
test
mov
mov
mov
add
mov
xchg
mov
add
stos
xchg
add
mov
add
mov
add
mov
popf
add
mov
movsl
add
test
lods
add
mov
cmpsb
add
mov
add
mov
add
mov
lea
xchg
rcll
mov
mov
add
mov
mov
sarb
mov
fidivrl
add
rol
add
leave
leave
add
int
add
int
add
fadd
add
rcl
add
aad
add
fcmovnbe
add
add
fstp
add
in
add
in
add
jmp
rolb
flds
fucomip
fiadds
loope
loope
in
in
in
jecxz
in
in
jmp
in
in
add
repnz
in
repnz
add
clc
out
add
icebp
icebp
add
div
add
cmc
cmc
add
clc
cmc
add
stc
stc
add
cld
cli
add
incb
incl
add
add
push
add
jns
and
add
inc
ja
and
push
dec
js
sbb
das
push
or
add
data16
outsb
pop
xor
pop
sub
add
cmp
jbe
insl
jg
das
sbb
pop
add
dec
aaa
cltd
jbe
imul
pop
or
add
pop
cmp
jb
insl
imul
add
dec
dec
pop
xor
xchg
test
jae
insl
insl
imul
add
ds
pop
cmp
test
jb
imul
adc
add
add
add
cmp
xchg
mov
jbe
jae
insl
imul
add
add
add
aas
push
inc
jp
xchg
xchg
mov
test
insl
insl
imul
sub
add
inc
mov
mov
xchg
jb
imul
sub
push
xchg
mov
lahf
lcall
xchg
jb
insl
imul
pop
mov
mov
lcall
xchg
jb
insb
imul
mov
mov
lcall
mov
xchg
das
add
add
inc
xchg
mov
mov
lcall
mov
sub
add
add
add
push
mov
lahf
lcall
mov
add
push
jl
mov
lahf
lahf
lcall
xchg
dec
pop
add
dec
test
mov
lcall
add
add
mov
mov
add
pushf
mov
inc
add
pushf
js
dec
pop
add
add
jg
cld
aas
clc
pop
jmp
ud0
rolb
incl
add
cld
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
pop
lock
pop
cld
add
aas
incl
add
inc
add
jmp
ud0
clc
pop
jg
ljmp
rolb
add
add
add
add
adc
add
add
add
add
add
and
add
add
or
test
add
add
add
fmull
add
mov
add
add
sgdtl
int3
sgdtl
testb
add
sgdtl
add
add
push
adc
add
adc
add
add
add
add
add
add
cmp
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
popa
jb
popa
outsb
je
insb
gs
jb
add
fs
je
imul
add
xor
xor
xor
mov
mov
mov
mov
mov
imul
mov
mov
and
out
out
dec
pop
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
and
into
and
push
imul
push
bound
jo
and
and
outsl
and
and
push
and
gs
push
push
or
add
add
add
fadd
mov
pushf
movsl
fldl
movsl
fldl
movsl
fldl
popa
mov
add
arpl
add
arpl
add
stos
addb
fldl
movsl
faddl
movsl
fldl
arpl
add
arpl
add
arpl
add
imul
push
inc
add
dec
add
add
push
inc
loopne
add
or
push
push
add
add
add
add
add
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
aam
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
or
add
jo
add
add
add
jo
add
add
je,pn
js
add
add
adc
add
add
pusha
jb,pn
popa
je
add
adc
add
addb
inc
add
inc
cs
je
add
add
or
add
pusha
add
inc
add
shrb
gs
xor
add
add
add
and
add
add
and
add
cs
fs
je
add
add
add
add
add
rolb
add
xor
and
add
cs
je
xor
add
add
add
jo
add
mov
add
add
add
add
jo,pn
popa
je
add
add
or
add
add
mov
add
add
add
jb,pn
jb
add
add
mov
add
jo
add
adc
add
push
push
add
add
add
add
test
out
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
sbb
cmp
clc
jb
sub
movsl
xchg
fistps
loopne
mov
sub
cmp
xchg
les
lods
cmp
and
dec
inc
mov
adc
jae
push
bndstx
movsb
lea
add
decb
les
fcomp
mov
cmpsb
in
jmp
xchg
xor
push
gs
cmp
test
data16
and
cwtl
lret
jo
aam
lahf
fisubrs
jle
jbe
jo
inc
out
dec
mov
movsb
aam
test
mov
ret
in
jmp
lods
test
adc
sub
xchg
dec
scas
fsubrl
push
add
jb
jo
adc
cmp
lds
dec
rcr
mov
fistps
enter
adc
jmp
dec
xchg
jb
mov
or
pusha
shlb
sub
fs
sarl
push
push
addr16
movsl
xor
pop
xchg
pop
jae
adc
jl
push
and
xor
out
cmovno
or
lahf
pop
sahf
pop
fdivs
add
pop
jb
sbb
sbb
loope
aam
sbb
dec
pop
addb
add
aam
fwait
aas
jmp
popa
popf
pop
jo
xor
mov
jo
repnz
nop
jb
pop
leave
pop
sbb
aaa
icebp
mov
insb
int
shl
test
inc
out
movsb
mov
pop
shrl
mov
std
rcrl
inc
add
pop
shll
push
mov
xchg
popa
add
shlb
lcall
xchg
lahf
push
mov
jnp
xor
sbb
jle
sub
mov
sbb
sti
cmp
cmp
or
or
sbbb
in
fstpl
add
or
xchg
mov
cmp
fistpll
mov
sahf
and
stos
sbb
fsubr
and
int3
mov
lea
aas
pop
jl
std
mov
inc
lcall
cmc
test
and
xor
push
popf
negl
dec
test
xchg
in
pop
jo
js
pop
dec
add
jecxz
hlt
in
icebp
enter
lret
jge
dec
and
add
rcr
lret
loopne
aam
push
mov
push
xchg
fldcw
mov
test
std
fxch
xor
xor
jbe
arpl
push
jl
mov
xchg
push
adc
lods
test
ret
pushf
lods
out
jl
lcall
outsb
sub
fs
imul
lods
xchg
out
jnp
xchg
mov
inc
cmp
add
in
jge
xchg
mov
sub
sarb
je
loop
fmuls
cwtl
xor
cmp
jle
repz
fs
int3
test
movsl
fs
adcl
lahf
xchg
ret
loopne
int3
add
mov
pop
mov
sbb
and
mov
loopne
in
xchg
mov
jae
mov
jle
add
cld
dec
add
fwait
pop
cmc
call
jl
lret
in
inc
cmc
lcall
push
add
dec
rclb
xorb
data16
lret
jns
lds
nop
lds
mov
dec
maskmovq
notl
and
mov
test
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
xlat
dec
leave
call
mov
and
shrl
ss
pop
mov
xchg
inc
jecxz
mov
sub
mov
loop
lods
mov
cmp
imul
arpl
lock
xchg
mov
jbe
xchg
push
repnz
pop
mov
or
sub
jg
repnz
aas
xor
ss
js
popa
mov
inc
mov
stc
mov
fstpt
jae
mov
arpl
movsl
jno
inc
rorb
fmuls
jp
or
adc
mov
inc
lcall
jle
mov
fidivs
test
scas
rcrb
ss
xlat
fdiv
sbb
sbb
js
or
inc
add
sbb
mov
dec
aam
inc
fbstp
adc
mov
or
or
into
clc
xor
cmpsl
pop
push
sub
or
jno
sbb
push
sbb
mov
cmc
clc
sub
jmp
gs
pop
adcl
dec
xchg
pop
hlt
lret
lcall
mov
mov
cmp
jbe
mov
jp
mov
add
adc
insl
movsl
dec
outsb
and
iret
icebp
scas
dec
int
and
mov
test
fisttpl
lret
stc
mov
scas
movl
fisttpll
test
or
push
into
add
lcall
lds
ljmp
cmp
lods
xchg
add
movsb
loop
mov
in
mov
leave
loop
in
nop
xchg
sbb
mov
inc
std
test
nop
and
dec
mov
xchg
lock
mov
cltd
xor
call
mov
mov
cltd
inc
push
push
sbb
ret
adc
sbb
mov
cmpb
sbb
iret
leave
sbb
push
insb
sti
mov
cmc
clc
dec
mov
jmp
loop
pop
push
mov
shr
xor
pop
repnz
sbb
mov
lock
cmp
pushf
adcl
loopne
add
testb
iret
call
xor
shll
lret
jb
mov
inc
jp
mov
add
cli
je
cmpsl
mov
clc
mov
fidivl
mov
jae
lds
cmp
and
or
cld
xor
and
jp
rorl
xchg
out
jl
add
sbb
pop
pusha
ja
lods
mov
rcll
mov
into
pushl
mov
andl
sbb
dec
cltd
push
xchg
adc
pop
imul
add
scas
enter
ljmp
cmp
cmp
loop
push
add
mov
push
or
lea
lret
sbb
add
fs
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
inc
hlt
mov
sub
or
and
mov
sbb
int
inc
sbb
jbe
mov
sahf
sbb
rolb
pop
xor
rcll
fs
sbb
in
or
sbb
pop
or
xchg
lcall
std
mov
add
inc
mov
loope
dec
adc
dec
loop
repnz
fstps
dec
js
aas
enter
add
sbb
out
mov
cmpsl
mov
xor
ror
xor
dec
push
mov
dec
popf
adc
shlb
cmpsb
inc
test
inc
mov
add
sbbl
add
mov
push
dec
mov
ret
jecxz
mov
push
jne
pop
jmp
cmp
push
inc
mov
adc
jp
aas
in
mov
jnp
mov
adc
sub
shrl
ljmp
notl
sbb
sub
push
lahf
push
sub
adc
jns
sti
mov
mov
sub
adc
subb
jne
inc
dec
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
mov
push
insb
jnp
scas
popa
jecxz
ret
lahf
test
jecxz
loop
inc
mov
pop
jb
sbb
pop
inc
rcrl
pop
and
pop
pusha
out
data16
mov
test
in
xchg
jmp
ret
push
mov
cmp
fsubl
and
mov
out
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
sahf
add
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
lahf
mul
rcrl
mov
cli
pop
and
iret
aas
mov
sbb
mov
pop
stos
push
insb
aad
sbb
dec
mov
mov
lcall
mov
fbstp
add
jmp
loop
mov
add
lret
stos
xchg
fimull
sbb
pop
jb
lods
xchg
in
das
mov
ja
lods
loopne
and
jmp
popf
test
jge
js
lods
das
fbstp
add
addb
inc
sbb
mov
dec
mov
xchg
sub
and
push
mov
xchg
push
fisubl
and
std
bound
pop
es
out
cmp
mov
jmp
adc
dec
adcb
imul
fsubp
mov
aad
pop
int
mov
dec
call
dec
mov
push
fists
int3
mov
repnz
mov
sbb
sub
mov
mov
lods
inc
test
or
sbb
mov
pop
repz
xchg
jmp
daa
aaa
push
in
dec
in
mov
pop
sub
les
xchg
rcll
ret
testl
nop
test
add
sbb
icebp
or
popf
adc
loopne
sbb
bnd
lods
scas
fbstp
inc
rclb
xchg
andl
jns
dec
xchg
lock
mov
cltd
xor
mov
mov
mov
cltd
inc
fs
in
int
inc
bound
cmpb
mov
sbb
push
pushf
std
mov
cmc
clc
pop
mov
cmc
hlt
imul
cmp
into
inc
mov
icebp
into
dec
xchg
stc
cmp
mov
clc
sti
pop
es
rcr
repz
mov
add
sbb
insl
movsl
jns
pop
and
mov
inc
stos
cwtl
adc
mov
xor
stos
inc
out
inc
mov
test
into
xchg
stc
cli
in
test
adc
and
mov
cmp
add
xchg
lcall
xchg
or
lds
pop
jno
push
arpl
rclb
lods
lahf
scas
std
fabs
cmp
andl
and
movsb
adc
inc
mov
fdivs
sub
testl
jbe
mov
rcl
xor
adc
push
inc
movsb
inc
add
ljmp
cmp
jmp
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
addr16
fnstenv
out
negl
dec
adc
fdiv
xor
ja
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
mov
add
rcrl
and
imul
les
ljmp
lret
push
dec
push
dec
cwtl
lcall
jmp
inc
push
jl
sbb
add
inc
sbb
or
stos
arpl
mov
or
mov
pop
jno
lds
push
fildll
sbb
in
mov
leave
loop
in
nop
xchg
sbb
and
xor
mov
rol
adc
les
inc
jecxz
add
push
fsubs
shrb
mov
xchg
mov
daa
sti
mov
ret
cmp
inc
inc
mov
cmp
dec
push
int3
sub
mov
fsubr
push
and
mov
pop
mov
push
aaa
in
mov
imul
inc
arpl
clc
cmp
in
mov
ret
mov
adc
lret
inc
sbb
mov
sbbl
sub
pop
dec
sbb
mov
test
leave
test
cld
mov
push
cld
bswap
cmpsl
iret
pop
lret
into
xchg
je
mov
sub
adc
or
lret
adc
outsb
les
add
sbb
mov
bound
jmp
popf
test
insl
bnd
lods
scas
fbstp
jecxz
cwtl
test
sub
dec
pop
adc
dec
shrl
fwait
jmp
mov
testl
xchg
adc
in
cmpsb
call
rcr
call
push
ret
lret
sub
loop
leave
sbb
ror
jecxz
and
mov
shr
jo
out
out
jmp
loop
mov
int
pop
enter
add
mov
jecxz
sbb
cld
add
mov
or
jns
adc
ljmp
stc
mov
fsubrl
loop
clc
cli
push
lcall
sbb
inc
and
inc
pop
rcrb
pop
lret
pop
imul
inc
les
aad
cmc
add
and
outsb
les
push
mov
xor
add
add
mov
xlat
scas
mov
lahf
jecxz
enter
adcl
dec
pop
sub
mov
adcb
adc
dec
mov
xchg
xchg
inc
push
mov
xchg
sbb
gs
xchg
push
pop
and
insl
push
inc
push
dec
fstps
fwait
psubw
call
cld
or
and
addl
mov
ljmp
lock
pop
loopne
mov
aam
sti
jmp
inc
daa
jmp
jnp
mov
jecxz
inc
inc
sbb
mov
test
mov
mov
cmpb
mov
inc
stos
pushf
adc
mov
mov
xchg
sahf
mov
fcmovne
pop
dec
mov
cmpsl
mov
sub
push
fldl
test
or
adc
or
lods
nop
xor
imul
pop
sbbb
sbb
add
cltd
lods
jle
leave
shll
xlat
and
adc
pusha
loopne
add
inc
fimull
rorb
mov
dec
aam
fsts
add
out
ror
notb
push
fisubs
xchg
imul
cmp
sub
jmp
lret
and
loopne
fstps
mov
enter
dec
push
push
xchg
dec
inc
mov
loop
movsb
inc
jne
loopne
jmp
loop
mov
fisttpll
pop
div
mov
dec
call
rcr
xor
mov
cmp
jp
add
xchg
push
lock
pop
jo
or
sub
nop
jg
adc
adcb
aam
adc
mov
addb
ret
push
lret
mov
xchg
stc
mov
cld
mov
or
test
loop
xchg
ret
add
jno
inc
outsb
cmpsb
sub
dec
movsl
or
pop
movsb
mov
or
mov
jecxz
ret
pushf
sahf
xchg
fwait
push
jmp
sbbl
data16
ljmp
mov
pop
repnz
out
mov
or
pushf
cwtl
mov
insl
xchg
adc
stos
cmp
jb
pop
mov
mov
and
mov
enter
int3
push
push
xchg
stos
jmp
dec
adc
inc
xor
pop
push
mov
les
out
mov
arpl
inc
add
xor
in
enter
add
std
cwtl
dec
add
sub
xor
test
jecxz
cli
push
xor
jb
mov
inc
adc
mov
add
cli
jnp
shlb
cmp
xor
nop
cwtl
nop
sbb
sbb
mov
or
stos
adc
pop
sub
jp
add
sbb
cmp
rcrl
or
cltd
gs
out
push
xchg
sbb
cld
lea
adc
sbb
cmp
loopne
and
push
mov
xchg
or
xchg
pop
int
pop
adc
popa
jge
pop
out
mov
mov
popa
pop
xchg
enter
aam
sub
lret
sub
gs
jne
jnp
xchg
repz
cmp
shrl
mov
push
dec
addr16
xlat
xor
cld
leave
add
add
mov
xor
add
nop
or
mov
mov
xor
into
inc
jle
jg
cli
shll
cmc
jb
mov
inc
out
mov
add
lahf
popf
lds
pop
xchg
fucom
jmp
or
or
cmp
adc
lcall
adc
loopne
cmp
or
or
dec
push
dec
scas
test
enter
mov
rclb
andl
inc
aam
pop
and
loope
fwait
cmp
les
push
mov
xchg
sub
test
cmpsb
jnp
clc
jno
jecxz
addr16
orb
loopne
add
xchg
int3
fidivs
sbb
add
stc
mov
shrb
and
imul
inc
bound
mov
sbb
lock
sbb
and
enter
ljmp
xchg
jo
mov
cmp
jne
les
mov
test
pop
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
orl
or
mov
push
stos
fnsave
fwait
loopne
pop
cld
ret
or
inc
sbb
scas
popa
arpl
repz
loop
inc
mov
pop
jb
or
cmp
rol
mov
aam
stc
xor
loop
xor
xchg
adc
adc
xor
cmpsl
ret
mov
jmp
popa
xchg
sbb
sbb
daa
loopne
hlt
mov
xorb
pop
jp
xchg
mov
jmp
gs
filds
aam
sti
fistl
dec
mov
mov
jnp
mov
repz
sbb
jl
mov
adcb
pmuludq
sbb
lahf
inc
data16
push
test
cwtl
xor
test
sub
jnp
mov
cmc
dec
popf
ljmp
pop
sbb
stos
mov
sbb
test
jno
dec
sahf
xchg
fistl
mov
jmp
add
icebp
xchg
jp
loop
mov
scas
inc
fdivl
jo
arpl
rcll
rclb
rorl
mov
fs
inc
mov
xchg
push
pop
and
xchg
insl
cmovae
fldenv
fwait
psubw
call
aam
add
out
rcll
int3
dec
sub
sub
mov
fsubr
push
and
lea
dec
fisttpll
clc
icebp
repz
dec
call
mov
mov
jae
cmpsl
sbbb
test
aad
cmp
xchg
jo
jecxz
dec
sbbb
jne
clc
push
mov
test
and
fnstenv
negb
in
or
cli
adcb
insl
addb
test
dec
sahf
push
fistl
cmp
shrl
and
jmp
popf
in
bound
lods
fbstp
shlb
or
sbb
xchg
ficoms
mov
shl
mov
lret
in
mov
mov
xchg
cltd
cmp
and
jmp
pop
fldenv
mov
jecxz
xchg
enter
aam
sub
fidivl
mov
dec
sahf
inc
sub
xor
mov
call
xor
mov
and
mov
mov
inc
sbb
loope
jmp
pop
mov
sbb
leave
sbb
cld
insb
test
rcl
sub
sbb
mov
lcall
mov
fbstp
add
pushf
mov
aam
cmp
adc
sbb
cmp
les
mov
pop
cld
ret
add
xor
scas
mov
lahf
jecxz
enter
adc
dec
cwtl
sub
mov
adcb
and
or
in
mov
jnp
inc
push
mov
push
or
dec
xchg
xchg
cltd
inc
jbe
xchg
outsl
movnti
imul
out
leave
cmpb
sbb
es
push
mov
adc
mov
popf
out
mov
mov
lcall
jle
fnop
lods
sti
and
pop
lock
in
rol
dec
add
add
push
pop
adc
enter
mov
xchg
jo
mov
cmp
jne
les
arpl
test
mov
xchg
mov
lods
lahf
popf
stos
mov
jae
cli
jo
mov
out
xchg
jmp
pop
mov
or
dec
push
mov
push
stos
inc
xchg
fsts
mov
dec
inc
sbb
scas
jg
leave
icebp
mov
cld
repnz
and
sbb
mov
fwait
push
dec
mov
xor
xchg
xchg
adc
sbb
or
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
cmpb
arpl
shrb
mov
xchg
out
aad
sub
sub
push
mov
les
cmpsl
mov
arpl
inc
fistl
sbb
mov
cltd
xor
rcrl
mov
cli
dec
and
iret
inc
sbb
nop
sbbl
sbb
stos
mov
mov
test
lahf
fisttpll
test
or
adc
loope
pusha
xor
fnsave
sbb
xchg
sbb
add
mov
out
popa
stos
inc
loopne
sbb
xchg
loop
inc
mov
pop
jb
add
mov
fwait
push
dec
mov
out
dec
aam
inc
fbstp
adc
mov
fs
jae
loopne
and
cmpsl
ret
mov
jmp
lret
cs
mov
enter
dec
push
push
xchg
stos
out
sub
adc
xor
mov
pop
push
mov
ret
mov
pop
test
cmp
mov
or
insl
cmp
lcall
stc
popf
ret
mov
mov
sbbb
mov
inc
stos
pushf
adc
mov
sub
stos
inc
out
inc
mov
test
jp
pop
pop
jo
mov
or
mov
push
sbb
sbb
shrb
mov
xor
add
test
scas
mov
lahf
fists
mulb
add
mov
fwait
push
dec
mov
push
fsubrl
push
push
jp
imul
xchg
mov
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
addb
pushf
test
aad
mov
cmpl
jle
addl
call
imull
mov
repz
cmp
out
repnz
sbb
cmp
push
pop
adc
dec
cmp
xchg
jo
loopne
dec
sbbb
jne
clc
mov
push
cld
mov
pop
jae
mov
xchg
jmp
pop
aaa
push
repz
ret
pop
add
test
roll
in
dec
adc
dec
jp
mov
leave
xchg
fwait
adc
loopne
fistpl
stc
shrb
test
fidivs
test
loop
xchg
loop
iret
adc
fwait
imul
mov
andl
add
dec
mov
pop
repnz
out
dec
shlb
adc
mov
out
xor
cmpsl
ret
mov
xlat
pop
fnstcw
hlt
lods
or
movsl
movsl
inc
mov
mov
cltd
sahf
ret
dec
mov
ret
bound
mov
push
jne
pop
jmp
pop
ret
cmc
mov
loopne
jmp
add
jmp
jnp
mov
adc
ss
fs
mov
fwait
repz
leave
rcrb
cli
fnsave
jne
testl
pop
sub
cli
fisttpl
mov
arpl
lds
popa
and
sub
test
push
stos
xchg
rorl
xchg
out
leave
sbb
inc
sti
test
popf
adc
adc
sbb
movsl
bnd
lods
scas
fbstp
add
ret
or
andl
rolb
adc
dec
and
inc
or
inc
pop
repz
std
bound
pop
pop
in
out
cmp
test
pop
sub
dec
push
push
ret
mov
fsubr
push
and
push
mov
mov
sbb
inc
mov
test
fwait
lahf
aas
fistps
in
int
sbb
mov
fwait
ret
mov
mov
push
and
iret
xor
adc
add
rorl
lret
mov
xchg
sub
jae
roll
lret
les
sbb
test
lret
add
and
fnsave
sbb
xchg
sbb
add
lods
jle
mov
lea
leave
push
nop
cmp
scas
inc
xchg
repnz
and
je
pop
xchg
add
cwtl
inc
mov
insb
xor
sbb
popf
inc
jns
xor
inc
sbb
cmpsb
jnp
enter
rcrl
jb
fs
adc
clc
mov
add
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
loopne
orl
sti
fstl
dec
mov
daa
in
into
mov
xor
mov
jp
add
cmp
mov
pushf
call
int
sbb
iret
and
aad
push
sub
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
stos
push
cmp
sbb
sbb
or
stos
arpl
shrb
jecxz
mov
pop
jno
push
xchg
xchg
xor
adc
push
insb
out
js
mov
adc
rorb
pop
dec
aam
aam
mov
sbb
pop
xor
imul
cmp
scas
enter
cmpsb
nop
int
fldl
fsubl
mov
pusha
outsl
xchg
enter
aam
sub
fisubs
cltd
push
inc
mov
jge
pop
mov
repz
mov
imul
sbb
pop
mov
repz
cmp
icebp
repnz
popf
sbb
ret
mov
adc
lret
cmp
mov
pop
pushf
dec
and
ror
sbb
mov
cli
mov
pop
repz
mov
xchg
jmp
push
aaa
ss
ljmp
inc
cmp
stos
dec
or
push
stos
rcrb
xor
mov
add
jle
mov
and
lods
inc
pop
lcall
fwait
out
pop
xchg
sub
and
xor
cmc
xor
sbb
mov
fwait
push
dec
mov
pop
jne
push
xchg
adc
xor
push
sub
movsl
fidivl
test
xor
mov
cmpsb
jnp
clc
jno
jecxz
sti
je
or
and
jb
dec
add
xchg
dec
dec
mov
mov
cs
pop
fnstenv
shl
pop
and
cmp
mov
or
mov
jno
mov
hlt
mov
mov
inc
fsubrl
adc
mov
mov
jno
mov
xchg
jo
data16
sbbb
jne
clc
mov
xchg
cmp
inc
and
inc
outsl
rcrb
push
lret
pop
imul
inc
xchg
push
in
inc
cmp
adc
sbb
push
outsl
les
pop
sahf
mov
aad
mov
add
inc
pushf
rclb
shlb
xchg
cld
loop
mov
out
loope
out
js
mov
adc
rolb
outsb
mov
or
in
mov
jnp
inc
push
mov
sub
addb
pop
jae
and
std
bound
sbb
movsb
and
mov
ror
mov
aad
dec
lea
shrb
in
dec
fyl2x
mov
push
adc
sbb
jne
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
inc
and
adc
mov
mov
jno
testb
add
mov
sbbb
jne
clc
fimull
repnz
in
std
test
and
inc
pop
rcr
dec
sbb
punpckhwd
mov
prefetchnta
out
in
dec
sub
inc
stos
imul
fistl
cltd
xchg
xchg
shrb
test
fidivs
test
ficoms
mov
stc
icebp
xor
jb
mov
jp
mov
mov
outsb
shrl
push
fisttpll
aas
fwait
lret
in
mov
mov
xchg
cltd
cmp
test
pusha
xchg
pop
fldenv
pop
gs
adc
pop
jecxz
enter
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
imul
xor
aas
into
sbb
mov
lock
cmp
push
subl
imul
mov
testb
iret
call
xor
shll
push
insb
dec
add
jne
sahf
out
inc
mov
test
mov
fidivl
jns
cmpsl
jae
inc
push
cmp
and
or
cld
xor
and
jp
rorl
xchg
fistl
lea
pop
xor
lods
arpl
pusha
mov
cld
loop
mov
outsb
pushl
shlb
and
adc
dec
mov
xor
fsub
xor
out
push
sub
movsl
fidivl
test
xor
test
cmpsb
jnp
clc
jno
jecxz
jnp
push
add
xchg
pushf
push
or
lea
shrb
mov
shl
pop
and
arpl
sbb
fdivrs
imul
daa
loope
out
mov
lock
loop
cmp
mov
cmpsl
push
sarb
imul
clc
mov
xlat
mov
inc
and
inc
mov
repz
rcrl
test
roll
fsts
pop
packuswb
jo
pop
sahf
xchg
fistl
fimull
jae
xor
shrl
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
or
lret
stc
adc
outsb
test
mov
popf
inc
jns
xor
sub
fisubs
mov
in
int
clc
bound
cmpb
je
inc
sub
pop
mov
shr
and
jle
push
dec
mov
push
mov
call
xlat
arpl
test
mov
ds
cmc
lret
daa
add
in
mov
lock
loop
cmp
out
inc
and
mov
cmpb
xor
ret
sbb
rcrb
adc
mov
mov
dec
cli
push
in
mov
jae
mov
arpl
cmpsb
jno
inc
rorb
fmuls
jp
or
ret
dec
addr16
dec
movsb
testl
pop
jb
lods
ret
sbb
lret
jns
xchg
rorb
mov
leave
push
nop
bound
inc
xchg
cli
stc
and
idivl
fldl
fdivs
rcr
or
in
mov
jnp
inc
push
mov
xchg
sbb
pusha
cs
push
pop
and
lea
cmp
cmpsl
jbe
dec
add
lcall
or
sub
mov
rol
mov
sahf
dec
movsb
adc
fsts
jmp
ljmp
lcall
setae
jecxz
cli
daa
cmp
sbb
popa
mov
inc
cmp
add
rcrl
dec
mov
pop
sbbb
inc
sbb
push
jmp
lds
push
cld
mov
mov
ret
cs
sbb
mov
sub
pop
fisttpll
test
or
push
into
loope
xor
shrb
ljmp
cmp
loope
inc
pushf
shlb
lret
sbb
jnp
jg
scas
pushl
mov
or
sbb
mov
fwait
push
dec
mov
and
dec
enter
cmc
mov
adc
ret
mov
mov
fsubs
add
or
xor
push
sbb
mov
cmc
clc
sub
int
mov
mov
mov
pop
add
xorb
into
lea
mov
cmpl
mov
adc
repnz
dec
subl
mov
add
testb
gs
sbb
add
pushf
shrb
inc
in
xlat
xor
repnz
stos
jecxz
jp
mov
sar
xor
sti
movsb
into
xchg
mov
shrb
mov
sbb
sub
add
lret
stos
xchg
fimull
fisubrl
pop
jb
lods
xchg
adc
sbb
xor
or
scas
aaa
mov
cli
jnp
inc
mov
cld
xor
or
push
sbb
nop
lock
mov
cltd
xor
mov
xchg
sbb
inc
mov
cltd
inc
push
push
cltd
pop
inc
sti
mov
ret
mov
int3
inc
cmp
fmull
xchg
jmp
cmpsb
inc
xchg
imul
fsubp
mov
jbe
mov
adc
jecxz
pop
mov
in
ljmp
jecxz
movsl
mov
mov
sti
sub
int
cmp
and
popa
cmpsl
clc
loopne
and
ja
inc
in
xlat
in
ficoml
xor
rcll
scas
mov
sbb
in
or
test
inc
scas
ja
les
xchg
or
insb
xlat
sbb
adc
pushf
ret
sbb
dec
push
icebp
leave
dec
mov
std
cli
jnp
inc
mov
add
cmp
mov
dec
mov
jmp
aam
xor
adc
and
mov
xchg
in
cmovae
cltd
mov
mov
mov
cwtl
push
add
sub
xchg
sti
nop
jmp
add
pop
ret
inc
mov
ret
loopne
mov
push
jne
les
clc
test
movsl
sti
and
imul
lahf
lret
in
rol
dec
paddsw
mov
in
sbb
dec
cmpsl
mov
cli
sub
aas
xchg
out
xor
test
dec
pop
stos
push
insb
aad
sbb
dec
cmp
pop
popf
scas
mov
jae
mov
mov
pop
cmp
stos
add
or
inc
mov
fistl
fimull
jae
xor
lods
jge
shrl
dec
sub
icebp
pop
sahf
adc
insl
aaa
mov
cli
jnp
inc
mov
sub
pop
mov
or
lret
sbb
mov
test
mov
loopne
jge
sbb
inc
mov
cltd
inc
push
push
cwtl
outsl
push
ret
sbb
aaa
out
leave
cmpb
sbb
je
insb
dec
arpl
out
imul
fsubp
stos
mov
int
cwtl
out
repz
dec
call
cmp
test
xor
lahf
lds
add
mov
dec
add
subb
sub
add
lret
lds
dec
cmpb
sub
mov
and
cmpsl
cmp
lret
mov
mov
arpl
jge
pushf
arpl
jo
inc
dec
xchg
xchg
fsts
pop
inc
push
jl
xchg
stos
std
cld
pop
mov
jecxz
loopne
fistl
mov
push
xor
ficoms
fwait
lods
and
mov
stc
icebp
xor
js
subl
ljmp
mov
pop
repnz
out
mov
or
pushf
xchg
mov
insl
xchg
imul
popa
add
pop
cltd
xabort
xor
sti
sti
and
mov
push
rorl
stos
in
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
jl
mov
shlb
push
lds
roll
in
rol
dec
nop
mov
in
pushf
pop
dec
rcrb
sub
aas
push
out
movsb
mov
pop
stos
push
insb
aad
sbb
dec
sahf
xchg
cmpsb
ljmp
int3
pop
lods
mov
mov
or
mov
push
sbb
push
mov
inc
outsb
shrb
mov
xor
jecxz
fwait
or
pop
inc
sub
sbb
mov
xor
stos
leave
loop
in
nop
xchg
sbb
or
mov
rorl
mov
sbb
push
xchg
lahf
mov
stos
icebp
lea
sub
in
xchg
mov
popa
jne
pop
xchg
stc
popa
jl
dec
mov
inc
popa
cmp
aam
sub
fidivl
lret
sub
imul
adc
push
insb
lods
pop
adc
lea
push
mov
repz
cmp
mov
hlt
leave
add
sbb
test
lcall
jg
enter
dec
pushf
inc
stos
cwtl
adc
mov
aaa
mov
dec
test
push
mov
divl
lret
and
cmp
sbb
data16
scas
ja
les
xchg
lcall
enter
add
add
jnp
mov
mov
mov
js
mov
push
fdiv
and
sub
rcrb
add
shlb
mov
test
sbb
and
mov
xor
fwait
pop
fs
cmp
pop
fisubs
cmp
fnsave
xchg
push
adc
clc
lret
jecxz
enter
or
fimull
lods
lea
out
and
push
xchg
mov
std
xorb
into
popf
sub
cmpl
repz
hlt
mov
inc
sub
or
mov
sbb
leave
fstps
insb
test
sahf
sbb
test
push
in
xor
jmp
or
icebp
add
or
mov
mov
das
sub
stos
adc
pop
sub
jp
add
sbb
mov
pop
and
jmp
popf
test
in
js
lods
scas
fbstp
rclb
addl
and
dec
xchg
lock
mov
cltd
xor
mov
movsl
push
pop
jae
and
std
bound
pop
pop
sti
xor
fadds
jae
int3
inc
cmp
mov
jmp
cmpsb
dec
imul
fsubp
mov
hlt
pop
adc
aad
cwtl
jmp
mov
dec
call
dec
jmp
adc
ret
fdivp
lods
es
sub
sbb
test
lcall
mov
sbbl
dec
sbb
xlat
or
push
jge
leave
test
insb
cli
sti
cmpl
ljmp
orb
jecxz
addb
sub
dec
data16
jl
add
or
pop
cmpsl
pop
js
enter
cmpsl
push
out
jmp
push
enter
inc
shlb
or
sbb
or
lret
stc
sbb
outsb
test
push
fisubs
sub
push
ret
push
jge
mov
jmp
std
mov
sti
and
xor
mov
adc
enter
mov
add
insl
sub
ret
scas
add
ret
mov
pop
test
cmp
mov
xchg
lock
push
iret
sbb
mov
cltd
addb
mov
xchg
cmp
jmp
outsb
out
push
lock
fcomi
daa
nop
xlat
dec
sub
ret
sbb
lahf
sub
mov
popf
int3
stc
mov
imul
loope
sub
inc
shrb
sub
lods
mov
fisubrl
pushf
scas
testl
gs
sbb
pop
mov
add
popa
mov
iret
js
mov
cmc
and
push
sub
mov
test
or
ja
or
in
mov
jnp
inc
push
mov
int
mov
movsl
inc
pop
jae
and
std
bound
outsl
movnti
imul
out
leave
sbbb
sbb
es
push
mov
mov
aad
dec
lea
inc
sahf
dec
mov
lcall
adc
loope
mov
jns
into
or
mov
mov
add
cmp
mov
popf
pushf
push
pop
int
sbb
sarb
das
test
push
aas
mov
mov
dec
rclb
cmp
cmp
arpl
movsb
jno
inc
fmuls
fmuls
jp
or
xchg
out
xchg
fistps
mov
inc
sub
lods
jle
mov
lcall
shr
sbb
fisubrl
jnp
inc
mov
call
js
mov
inc
mov
inc
test
lret
jmp
inc
cwtl
dec
je
xchg
imul
ljmp
mov
or
fwait
rolb
jne
rcll
lea
push
adc
aad
add
mov
ret
xchg
pop
push
test
fwait
cwtl
test
sbb
int
jg
pop
hlt
cmp
mov
fistl
sbb
dec
or
lock
dec
cmc
mov
imul
mov
fildl
nop
pmuludq
jne
pop
sub
cmp
sub
cmc
sbb
mov
std
test
nop
fldl
cmp
or
stos
div
stos
mov
lds
lahf
xlat
push
adc
arpl
popf
sahf
xchg
fwait
pop
test
lods
jp
in
test
mov
dec
xchg
xchg
push
cmp
vmread
rcll
jecxz
aam
xchg
mov
mov
lea
cmp
xchg
cwtl
ds
cwtl
mov
jae
push
je
cmp
popf
mov
dec
sahf
in
pop
push
or
push
lea
ss
cmp
mov
icebp
ds
mov
mov
inc
sbb
shrb
sbb
xchg
mov
sub
test
sub
adc
push
cmc
xor
sbb
stc
and
popa
in
inc
mov
or
cmp
adc
lcall
mov
jp
add
jno
aad
xchg
les
jno
roll
mov
mov
in
mov
xor
loope
xchg
and
inc
xor
sub
push
cmp
fwait
xor
cmpsl
lret
in
mov
mov
xchg
cltd
jl
cmp
lret
gs
adc
xchg
shl
inc
rol
sub
add
loope
rclb
sbb
add
cmp
pop
aas
shl
repz
sub
push
dec
add
mov
cmp
jp
add
rorb
imul
push
lods
xchg
sub
adc
push
test
test
lods
js
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
or
lret
dec
movsl
push
or
xor
mov
cmpsb
xor
jb
fcoml
dec
scas
iret
dec
movsb
ljmp
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
js
ret
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
jp
mov
mov
add
jae
inc
rcr
cmpsl
ret
popw
std
xchg
xor
popa
shl
mov
int3
loope
movsl
sbb
add
pop
dec
mov
fisttps
in
pop
sahf
dec
mov
nop
mov
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
inc
sbb
lods
adc
les
jmp
pop
push
adc
mov
sahf
sbb
test
inc
pusha
pop
clc
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
dec
pop
cmpsl
lret
dec
push
or
or
xor
jb
fcoml
mov
push
lret
ret
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
into
inc
pop
dec
sub
mov
jne
mov
or
mov
add
jne
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jb
loope
call
punpcklbw
loopne
xor
push
and
xchg
cli
mov
inc
xchg
enter
lock
in
iret
imul
inc
pop
xor
sbb
in
jmp
test
aaa
jns
pop
push
popf
and
fucom
cli
mov
sti
stc
cli
in
test
or
test
fwait
jg
inc
outsb
cmpsb
sub
mov
inc
fimull
jmp
in
int3
mov
adc
mov
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
nop
out
ud0
lock
outsl
xor
ljmp
lea
mov
aas
pop
adc
popa
sahf
scas
and
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
shrl
push
cmp
lea
or
loope
aam
sub
insb
push
sub
push
mov
dec
push
in
int3
inc
push
cltd
push
pop
lods
push
fcoms
adc
and
ror
mov
in
shl
fwait
aad
lahf
in
loope
ret
insl
dec
mov
jne
xor
mov
jnp
push
xchg
jle
jmp
cmp
jb
lods
xchg
mov
es
inc
rol
mov
lret
js
popf
scas
test
lret
aas
ja
xor
js
sahf
add
and
es
fidivrs
jo
rorl
push
fsubrs
test
movsb
fidivl
pop
push
sub
inc
fdivrl
dec
mov
std
fwait
mov
mov
xor
add
test
sbb
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
xchg
ja
in
addl
xchg
and
sub
dec
stos
inc
in
pop
lods
mov
mov
fwait
mov
popa
shr
pop
sub
cmpxchg
out
jno
insb
out
pop
mov
out
or
cld
icebp
mov
or
enter
cmp
mov
ret
dec
fcoms
outsl
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
mov
dec
adc
je
mov
jo
xor
je
jo
xorl
lds
fldt
iret
ret
adc
or
push
dec
push
push
std
sbb
insb
jne
inc
xor
jmp
lret
inc
ret
add
jnp
mov
es
test
sahf
mov
in
mov
cli
fwait
lret
repz
jp
ss
push
out
mov
inc
pop
push
addb
mov
mov
add
push
xor
stos
add
pop
or
mov
iret
js
jle
cmp
leave
test
pop
sub
scas
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
mov
lds
cmp
mov
xlat
or
lahf
cltd
pop
adc
mov
cmp
test
jle
jl
out
mov
icebp
push
mov
stos
xchg
lahf
mov
adc
rolb
xor
pusha
or
pusha
push
sub
push
xor
divl
scas
pusha
mov
adc
andb
lods
pop
sbb
mov
rcrb
push
mov
insl
aad
insl
ficomps
fldenv
stos
lods
fldt
ljmp
push
bound
push
push
bound
sbb
nop
mov
imul
mov
add
movsl
test
adc
cmp
lds
push
fdivrl
jmp
mov
lret
xor
jge
pop
inc
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
dec
cmpsb
enter
mov
cmp
dec
lea
repnz
into
lds
movsb
mov
or
ret
nop
and
push
or
mov
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
stos
js
lret
test
xchg
jg
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
or
stos
lds
jge
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
jp
jge
scas
xchg
iret
jmp
stos
xchg
shrl
popa
or
xchg
repz
ret
cmpsl
inc
mov
movswl
insb
jno
mov
ja
inc
fcoml
jg
inc
dec
inc
sub
lret
lock
jge
cmp
outsb
cmp
scas
mov
dec
mov
ja
stos
repz
fwait
cld
sub
mov
fucomip
loop
pop
xchg
push
std
mov
int
mov
or
lds
inc
iret
mov
dec
inc
leave
pushf
push
test
stos
sbb
cmpsb
ja
test
shlb
cli
scas
jns
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
mov
test
pop
and
gs
sub
adc
inc
in
xlat
mov
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
cltd
push
inc
dec
push
aaa
lods
adc
mov
scas
jmp
sub
cs
mov
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
cli
fisubl
pop
mov
enter
aas
sti
sti
and
test
sbb
sbb
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
loop
inc
sbb
daa
adc
cmpb
jmp
jle
sbb
enter
aad
in
pop
outsb
xor
ret
scas
popa
adc
rcrb
sub
int
jno
lea
scas
fsub
jbe
lods
push
outsl
sbb
dec
pushf
mov
dec
sbb
xchg
stos
xchg
mov
scas
push
adc
mov
test
dec
cwtl
loop
cs
fucomi
das
jns
jno,pn
insb
repnz
mov
mov
int3
pop
push
mov
sbb
insb
pusha
pop
orl
lods
test
xchg
cmp
repz
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
pop
leave
pushf
push
xchg
das
mov
aad
aad
xchg
jmp
jnp
inc
das
inc
or
inc
lcall
lds
in
ds
lret
ljmp
push
stc
and
pop
mov
and
test
test
sarl
and
pushf
xchg
cld
xchg
enter
jne
sbb
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
dec
cld
cmp
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
push
adc
xor
popf
sbb
inc
addr16
mov
mov
andl
adc
and
xor
dec
movsl
arpl
test
lods
mov
movsl
int
mov
and
mov
fsubs
js
push
outsl
sbb
ja
in
subl
dec
jle
inc
push
mov
test
or
lret
lds
mov
lahf
mov
inc
call
pop
aad
bound
lds
inc
repz
cmp
jl
fadd
xor
hlt
ja
jge
dec
push
lret
scas
out
xor
outsl
add
jb
jmp
data16
enter
push
movsl
int3
adc
jp
gs
mov
cltd
dec
push
movsb
mov
and
ljmp
mov
ficoms
sub
xchg
lods
lcall
popl
mov
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
sbb
push
push
mov
sub
jne
adc
call
orl
hlt
cwtl
rolb
push
sbb
jg
out
sub
sub
out
sub
dec
mov
stos
push
dec
pop
mov
ret
inc
fcoms
mov
test
xor
in
cmc
and
adc
jmp
and
cmp
cmp
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
or
mov
xorl
xlat
insl
aad
insl
ficomps
fists
in
dec
pusha
lods
fldenv
mov
jmp
sub
cmc
test
cld
cmpsl
pop
or
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
jnp
jp
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
test
sbb
rcrb
int3
lcall
mov
push
jl
inc
and
add
loope
jl
mov
mov
jae
or
test
inc
into
push
mov
insl
cmc
imul
shll
dec
mull
push
push
and
aam
filds
push
les
and
rolb
adc
adc
xchg
jnp
imul
addr16
mov
rol
lret
jb
pop
push
aam
int3
imul
into
mov
iret
lods
in
mov
es
test
inc
das
sub
sub
js
or
add
mov
fistl
cwtl
test
subb
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
cmp
mov
lods
insl
int
jg
ret
call
add
repz
sti
push
mov
lahf
lret
or
inc
xchg
dec
cmc
inc
daa
xchg
lret
add
jl
pop
test
addr16
xor
fsubrl
inc
push
push
lds
insl
lods
into
mov
pop
push
ljmp
cltd
jae
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
adc
mov
movsl
mov
cld
jp
add
cmp
push
inc
idivl
sahf
xchg
sbb
js
adc
cmp
mov
popa
or
dec
mov
addr16
stos
dec
xchg
scas
out
js
scas
out
mov
out
lock
xor
push
iret
hlt
test
mov
das
shrl
xor
shrl
lahf
cli
cwtl
add
loope
outsb
add
jle
scas
pop
fwait
out
enter
jbe
and
and
mov
in
gs
xchg
fnstcw
or
cmpb
push
adc
int
mov
sbb
xchg
xor
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
inc
cwtl
dec
and
sbb
sub
jnp
mov
js
call
iret
adc
ret
and
jo
not
fisttpll
or
mov
mov
cmp
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
clc
ljmp
push
imul
dec
and
push
mov
in
lret
cmp
subb
pop
imul
push
xchg
ja
push
mov
mov
sub
aam
xor
dec
popa
push
in
int3
fs
roll
popa
inc
outsl
mov
pop
mov
popf
int
xor
ret
sbb
cmp
dec
rorl
push
cmp
inc
jmp
push
js
fstpl
hlt
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
lods
nop
aas
jo
pusha
or
adc
jno
decl
out
mov
fs
adc
ret
jb
dec
push
pop
repnz
jle
jmp
movsl
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
cwtl
jmp
sbb
push
or
or
or
cmp
adc
mov
push
add
js
rcl
lcall
lcall
scas
jmp
sub
mov
int
mov
sbb
adc
sbb
std
cmp
mov
mov
out
aas
pop
dec
iret
pop
call
add
jbe
out
out
cmpl
outsb
mov
mov
mov
pop
out
inc
pop
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
xchg
and
in
jo
sub
repz
aad
jecxz
xchg
xor
xchg
xor
mull
mov
fxtract
cmc
out
les
out
dec
mov
fcoml
xor
mov
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
dec
pop
leave
mov
cmp
inc
and
xor
les
mov
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
icebp
ret
sbb
fs
sarb
fstpl
mov
sti
sbb
cli
sbb
sub
js
hlt
roll
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
mov
pop
mov
and
lret
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
jbe
xchg
push
stos
mov
ja
mov
in
imul
dec
and
loopne
and
jae
mov
xor
dec
inc
sub
sub
or
push
sbb
addb
mov
sub
mov
sti
mov
dec
stos
inc
in
lret
das
mov
in
cmpsb
aas
stos
jmp
sub
pusha
aam
fstl
mov
add
movsb
out
inc
mov
push
dec
mov
sbb
xor
pusha
adc
push
test
daa
dec
fidivrs
js
cs
xchg
aas
movsl
dec
fistl
ficomps
xchg
fistpl
push
movsl
fsubrs
clc
mov
sub
fs
fs
fsub
mov
mov
mov
lods
and
push
mov
inc
cmpsl
lcall
mov
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
loop
mov
aas
pop
dec
dec
pop
or
ja
leave
fstpt
xchg
push
xchg
mov
add
sbb
inc
mov
rcrl
mov
aad
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
pushf
test
inc
cmp
cmp
push
ret
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
cwtl
pop
mov
jne
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
inc
mov
mov
pop
mov
test
add
in
mov
insl
loope
roll
scas
jge
cmc
cld
or
lret
fcompl
rep
xchg
imul
aad
or
stos
popf
pop
dec
or
out
sub
mov
sub
in
inc
aas
adc
pop
daa
sub
out
dec
and
ret
mov
inc
push
insl
imul
push
mov
pop
outsl
sub
test
and
sub
fstpt
loopne
adc
dec
mov
lds
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
jg
fsubs
and
pop
jae
lcall
std
cwtl
shlb
sbb
add
jmp
lret
push
sub
or
inc
pop
cmp
shll
fmuls
fstps
adc
sbb
mov
adc
inc
ret
sbb
xor
and
mov
jb
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
outsb
fwait
es
test
mov
push
or
push
pop
xor
je
add
pop
sub
ret
mov
dec
repz
ljmp
push
mov
cmc
fdivrs
push
test
fidivl
addr16
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shll
popf
loopne
inc
xor
movsl
mov
cmp
pop
dec
test
std
aaa
cltd
xor
jne
les
cmpl
sbb
imul
sbb
or
jg
aad
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
in
ds
imul
rorb
enter
sub
pusha
mov
push
mov
jns
jne
xor
imul
fsub
inc
and
inc
cld
ja
adc
fadd
push
bound
mov
xor
sbb
or
push
lock
cmp
orb
xchg
mov
adc
lret
lret
jnp
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
xor
mov
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
stos
lea
push
mov
mov
cmp
sub
push
fwait
mov
rclb
inc
jno
inc
in
jg,pn
shl
mov
cmpsb
dec
fsubrl
mov
adc
pop
mov
xchg
mov
cmp
ss
arpl
sbb
jge
pop
sub
rcrl
movsl
sbbl
xchg
aaa
sbb
mov
pop
xchg
lahf
fcmove
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
pop
jge
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rcr
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
popa
mov
xchg
and
shrb
mov
mov
and
adc
cmp
xor
dec
inc
sub
mov
dec
push
mov
or
xchg
addb
mov
fsubrl
rorl
test
xchg
push
test
push
fdivrs
icebp
cmp
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
ds
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
dec
je
mov
cmp
or
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
jle
add
and
mov
dec
cwtl
dec
and
adc
test
sbb
mov
xlat
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
or
cmpsl
test
push
xchg
insl
cmp
in
into
cld
pop
mov
push
fidivrs
imul
xor
lret
pop
es
sub
cmp
mov
sub
pushf
ret
pop
mov
pop
adc
jo
and
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adcl
out
fnstenv
sub
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
or
std
roll
mov
in
or
xchg
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
mov
cmp
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ret
imul
sub
xchg
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
fwait
jg
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
adc
test
movsb
aaa
xchg
popa
cmp
xlat
lahf
data16
push
jl
inc
dec
imul
pop
out
fdivr
push
gs
fadds
mov
fs
jge
xchg
or
test
mov
cwtl
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
iret
lahf
jmp
mov
fwait
jl
jo
jecxz
adc
sbb
outsl
aam
sub
mov
mov
cltd
mov
insl
aad
popa
ficomps
sbb
pop
or
in
inc
push
mov
jle
jmp
movb
mov
pop
cmpsl
fxch
push
lret
pop
cmpsl
cltd
adc
test
adc
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
lcall
mov
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
int
imul
mov
ret
popf
addr16
rcll
mov
movsl
test
movl
mov
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
mov
jno
pop
xchg
sbb
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
lods
sub
mov
aas
test
sub
cmpxchg
out
jno
sub
cld
mov
scas
pxor
cld
repz
lcall
loopne
dec
iret
ror
inc
scas
fsubl
adc
scas
loope
stc
lods
push
jae
add
fisttpll
iret
jae
mov
push
xchg
hlt
and
andl
jp
mov
int
shlb
mov
fwait
jge
lret
arpl
pop
ja
dec
daa
jp
or
xor
or
insl
sbb
xchg
mov
hlt
std
std
jg
enter
sti
in
mov
aas
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
clc
fmul
test
cwtl
xor
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
inc
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
shrb
mov
mov
test
mov
pop
xchg
mulb
fldcw
push
fisubrl
xchg
and
ror
ret
adc
pop
call
sbb
lock
call
lods
cmp
or
and
mov
pop
rcr
aaa
adc
sbb
test
cmpl
icebp
imul
pop
add
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
jecxz
icebp
out
mov
aaa
pop
dec
inc
ret
pop
ficomps
adc
and
push
push
adc
mov
xchg
mov
stos
fwait
push
into
push
daa
jae
xchg
jmp
pop
rorb
enter
test
mov
faddl
mov
vfrczss
adc
pop
add
push
and
xchg
fdivl
adcb
lahf
orl
mov
dec
sarb
rorb
cmpsl
or
repnz
sub
jl
arpl
popf
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
mov
cmp
mov
and
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
test
aas
jl
xor
fwait
mov
pushf
ja
push
dec
inc
and
add
sbb
loop
mov
dec
movsb
mov
cmp
dec
xor
lods
pop
movsb
hlt
xor
adc
ret
sub
jae
pop
imul
inc
inc
loop
pop
clc
cmpb
cmpsb
mov
sbb
push
mov
sti
inc
and
ret
sbb
mov
scas
adcb
mov
xor
cmc
xor
sahf
pop
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
aam
pop
adc
lods
leave
push
adc
test
pop
pop
xchg
mov
mov
jmp
dec
and
shlb
fsts
inc
pop
jb
in
movsl
mov
jg
adc
mov
adc
sbb
mov
cwtl
jmp
sbb
in
test
or
test
fwait
jg
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
dec
movsb
lea
aaa
xchg
mov
mov
fsubrs
lahf
callw
cmp
das
push
roll
scas
inc
or
adc
jne
jge
inc
iret
shl
ja
std
outsl
addr16
call
xchg
sbb
pop
jg
stos
mov
jbe
mov
mov
cltd
enter
repz
enter
dec
mov
xchg
cmp
cli
dec
int3
xor
fs
sbb
xor
je
jo
xorl
lds
fldt
iret
ret
adc
or
push
dec
push
push
std
lahf
cs
test
data16
call
xor
subl
int3
repnz
stos
scas
arpl
xchg
pop
cmp
jge
shlb
aam
adc
jmp
pop
rorb
enter
test
mov
faddl
mov
vfrczss
adc
pop
add
push
and
xchg
cmp
ficoms
add
add
pop
push
mov
stos
and
jns
clc
pop
sub
dec
stc
arpl
dec
cmpl
xor
scas
int
fsubrs
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
les
sti
sti
and
test
pop
jge
shrb
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
and
mov
jo
xor
mov
inc
mov
and
insb
jne
inc
xor
cmp
je
imul
call
sub
imull
jge
sbb
daa
jmp
inc
out
and
rclb
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
fidivrl
and
lret
add
mov
out
push
out
popa
add
fisttpl
mov
shrl
fadd
adc
ret
adc
and
jg
lret
pop
jae
lods
fidivrs
jae
pushf
sbb
and
sbb
inc
or
jle
scas
or
and
xchg
addr16
imul
imul
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
scas
mov
jl
xor
inc
daa
jne
xchg
test
enter
xor
or
push
xorl
fnstcw
hlt
xchg
push
das
jno
xchg
add
sub
jne
movsl
in
fbld
add
jae
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
pop
pusha
jle
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
or
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
xor
inc
pop
outsb
stos
insb
icebp
in
jns
popf
outsl
inc
into
add
les
outsb
add
jnp
sbb
inc
mov
les
andl
mov
inc
push
pop
push
test
sbb
xchg
xchg
xor
negl
xor
daa
and
aam
sub
dec
sub
je
in
mov
jns
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
jb
jp
cmpsb
gs
pop
cld
lock
jle
pop
xchg
adc
mov
loop
mov
fidivs
ja
pop
arpl
xchg
movsb
mov
outsl
jae
cmp
jecxz
mov
jge
outsl
pop
or
stc
bound
popa
cltd
xlat
or
push
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
xor
test
idivb
arpl
out
les
cmp
mov
popf
mov
xor
leave
add
mov
or
mov
mov
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
jne
movsb
pop
repnz
cmpsl
sub
sub
pop
mov
cs
stos
dec
repnz
mov
sub
and
inc
pop
mov
shlb
dec
arpl
or
pop
mov
xchg
cld
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
jne
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
push
movsb
mov
aad
push
inc
inc
or
ss
inc
dec
sahf
and
sub
test
arpl
sbb
mov
and
jo
and
rclb
pop
inc
shrl
fs
mov
data16
test
pop
test
mov
lods
xor
pop
cmp
mov
call
imul
fsub
jbe
in
mov
in
push
addl
or
push
sbb
lcall
mov
movsl
add
clc
aam
mov
inc
lahf
scas
cmc
int
push
iret
cmp
bnd
inc
cwtl
inc
and
push
out
mov
sbb
je
jge
cli
out
push
sbb
outsl
addr16
call
xchg
sahf
fisttpll
hlt
mov
jbe
mov
lock
dec
inc
pop
shrl
xchg
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
ljmp
cld
xchg
adc
xor
bswap
xor
jmp
enter
adc
sbb
outsb
mov
xor
ret
cltd
jmp
loop
fsubrl
push
dec
dec
pop
dec
push
fcompl
push
cmp
fwait
inc
cs
mov
mov
and
cmp
imul
in
xor
test
mov
cmp
mov
and
in
nop
fidivs
lds
xchg
adc
mov
sbb
mov
or
aaa
jge
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
mov
out
inc
test
jns
outsb
negl
cmp
and
into
adc
movsb
ret
or
ret
add
stos
dec
pop
sub
add
adc
and
mov
mov
test
rorl
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
mov
cli
jp
adc
repnz
jns
lds
nop
lds
mov
testl
shll
in
nop
or
mov
bound
inc
inc
shlb
cmp
pop
sub
outsb
add
dec
rolb
mov
outsl
xor
push
inc
dec
leave
les
sarl
push
push
data16
xchg
arpl
mov
rcll
ss
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
jle
sbb
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
insl
aad
leave
mov
and
lods
fldt
xor
inc
mov
sub
mov
fisttps
in
mov
mov
adc
pop
cmpsl
lret
dec
movsl
push
leave
or
movsb
sub
mov
mov
enter
jp
sbb
jnp
mov
mov
ficoms
in
daa
inc
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
aad
or
and
lock
jbe,pt
fs
sub
xlat
jmp
call
pop
addb
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
das
cmp
and
aad
les
lcall
sbb
std
fistpll
sti
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
mull
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
data16
xor
mov
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
sarl
shl
xor
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
lods
fldt
sahf
xchg
mov
mov
inc
cmpb
mov
sahf
jns
jecxz
sub
add
rol
mov
dec
lret
push
xor
outsb
movsl
cmpl
sbb
add
sbb
inc
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
les
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
scas
xor
sbb
rolb
out
inc
mov
and
div
push
add
pop
icebp
cmpsl
dec
inc
orb
and
dec
movl
dec
mov
dec
push
dec
inc
pop
mov
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
loopne
xchg
fildl
aad
cmp
stos
xor
xor
mov
mov
lcall
pop
jb
add
mov
out
push
scas
sar
xor
jbe
mov
pusha
or
dec
aaa
xor
lods
inc
mov
lret
xchg
jae
sbb
aam
and
push
lds
dec
test
outsl
mov
rcr
push
rcl
hlt
cmp
or
lret
rcll
sub
or
dec
adc
lds
pop
mov
mov
pushf
sti
add
sbb
mov
je
in
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
inc
stc
mov
fdivl
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
sbb
inc
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
sub
outsl
jno
sbb
sbb
ret
xchg
jg
sbb
cmpb
cs
mov
mov
mov
pop
xor
lret
push
into
ds
pop
iret
rorl
jnp
sub
add
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
cltd
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
pushf
xchg
lods
data16
dec
cmpsb
loop
mov
and
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
jbe
lods
push
xchg
mov
sub
and
clc
mov
movsl
sarl
and
add
sbb
inc
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
jp
add
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
jg
fsubs
lret
sbb
syscall
cmp
lea
into
add
or
push
or
or
subb
imul
stos
xchg
mov
add
sub
mov
call
xlat
mov
mov
popa
aaa
dec
adc
mov
inc
push
inc
pop
sti
add
gs
rcl
sub
jl
repnz
and
inc
add
movsl
ret
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
das
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
xchg
adc
lret
or
and
nop
cs
bound
xchg
inc
cmpsb
jg
stos
les
fbstp
dec
daa
jp
or
xor
or
cmp
jns
fistpll
testl
cld
or
add
orb
sub
aam
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
fwait
and
mov
jno
adc
test
mov
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
lods
xchg
pop
test
lret
cmp
clc
add
rorl
scas
jbe
cltd
imul
test
scas
testb
call
aas
xor
push
jae
fidivrs
sahf
sub
adc
jnp
lahf
lods
xlat
xor
into
add
and
lock
xchg
mov
or
andb
sub
xchg
stos
roll
mov
push
add
push
inc
sub
pop
push
test
or
fucomip
repz
xor
or
inc
xchg
mov
jbe
sub
pop
inc
xchg
mov
adc
fmull
outsb
mov
leave
push
adc
sub
scas
push
cmc
mov
mov
mov
cld
cmpsl
jae
test
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
int3
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
pop
shrl
loop
je
test
sbb
test
adcl
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
das
mov
test
push
pop
add
rcr
xor
mov
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
xchg
and
in
jo
sub
repz
aad
jecxz
xchg
xor
xchg
xor
mull
mov
fxtract
cmc
out
les
out
dec
mov
insl
out
daa
movsb
sbbb
inc
into
pop
xor
scas
adc
sbb
jo
repnz
leave
jne
lret
jg
jg
pop
mov
sbb
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
cltd
sub
adc
cmp
add
inc
mov
cmpsb
ljmp
ret
mov
in
imul
dec
and
mov
scas
das
cmpsb
in
enter
sub
sub
pop
mov
mov
je
mov
repz
xchg
aaa
jp
add
dec
and
adc
fs
push
jns
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
mov
mov
popa
aaa
dec
adc
mov
sti
add
imul
sub
and
push
add
movsl
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
out
push
cld
mov
inc
xor
test
std
add
mov
lock
out
cltd
insl
jle
or
xor
es
sahf
pop
and
sub
mov
jecxz
test
jne
lahf
adc
arpl
subb
mov
mov
repnz
push
test
and
adc
lods
fidivl
imul
es
cmpsl
lock
lret
fwait
stc
mov
dec
fwait
mov
pop
add
push
pop
icebp
mov
dec
sbb
mov
lea
mov
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
push
mov
mov
stos
mov
stos
test
fimull
aam
add
jbe
push
movsb
jmp
mov
push
mov
adc
insl
faddl
mov
testl
and
fs
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
int3
adcl
push
dec
mov
pushf
xchg
sub
sbb
cmp
mov
out
inc
and
aas
int
fs
mul
jle
dec
cltd
enter
mov
int3
es
movl
subb
or
cmp
inc
sub
mov
push
jae
and
test
rorl
push
scas
mov
movsb
in
xor
jb
call
test
dec
cmp
adc
lahf
jnp
leave
inc
pop
jp
in
movsl
mov
jg
adc
mov
adc
sbb
mov
cwtl
jmp
sbb
in
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
mov
and
out
jno
insb
pop
mov
scas
pop
out
lds
and
jmp
xchg
fs
shl
aaa
jge
outsl
outsl
call
push
rcll
popf
pusha
pop
in
hlt
movsl
call
repz
data16
jecxz
fwait
jne
mov
or
sub
or
int
imul
push
in
mov
add
test
bound
jns
ss
dec
jl
mov
in
push
dec
daa
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
insb
cltd
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
lods
mov
mov
in
scas
ret
mov
into
cmpxchg
out
jno
insb
out
pop
mov
out
or
js
inc
int3
out
lsl
mov
fwait
jns
or
pop
int3
inc
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
test
fildl
dec
repz
mov
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
outsl
cmc
insl
push
imul
push
fistl
xor
mov
jnp
loopne
fucomp
jae
mov
loopne
ss
mov
mov
orb
mov
cmpsb
int3
sub
in
mov
jae
data16
pop
test
mov
and
mov
push
test
jp
sahf
xchg
rorl
mov
sbb
je
jge
lds
out
push
les
mov
ret
adc
lret
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
mov
or
push
add
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
fcmovnb
inc
sahf
mov
adc
das
movsl
xor
lret
scas
addr16
imul
ljmp
adc
movsb
lret
xor
dec
ret
jno
mulb
push
ret
insb
mov
xor
xchg
dec
decl
lds
sti
sub
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
sahf
dec
dec
aam
je
mov
adc
sbb
adc
mov
sub
ljmp
stc
icebp
cld
add
push
xchg
sub
dec
pop
mov
dec
cmpsl
mov
int
fcompl
pop
orl
movsb
popf
divb
les
jg
push
add
clc
and
lds
add
sub
pushf
ret
pop
pushf
daa
popf
adc
fdiv
jbe
push
outsl
sub
cmp
jae
fcomps
adc
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
sub
hlt
mov
scas
push
and
sub
es
sahf
pop
and
iret
mov
sti
out
test
out
jl
jne
mov
jbe
dec
js
or
aad
aam
mov
xchg
jns
shl
or
sub
xchg
and
cmp
sbb
adc
jmp
dec
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
add
jb
jae,pn
lock
sub
imul
mov
inc
dec
jo
iret
cmpsl
mov
adc
xchg
scas
mov
shll
ja
lret
adc
cmc
test
mov
mov
pop
xchg
shll
cmp
xchg
mov
mov
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
pusha
jle
das
pop
icebp
or
cmp
and
inc
xchg
lods
mov
pop
sub
mov
andl
in
or
hlt
ss
pop
outsl
jae
fsubrp
cmp
and
dec
dec
outsb
test
lret
scas
in
aaa
call
push
push
dec
mov
rcrl
or
fs
sub
adc
test
fdivl
mov
ret
and
push
xchg
sub
pop
jle
mov
xor
cmc
shlb
add
mov
cmp
sbb
fs
inc
mov
test
repnz
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
cmpsb
cli
imul
rolb
jb
dec
ss
repz
inc
mov
iret
test
repz
cmp
push
sub
das
inc
out
adc
and
mov
and
add
jns
and
xchg
lret
push
pop
out
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
subb
and
cmpb
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
mov
push
dec
cmpsl
push
insb
xor
sub
dec
jns
mov
mov
add
scas
bound
mov
addr16
mov
pop
mov
mov
pop
insl
adcl
jecxz
fsubl
add
xor
adc
pop
or
js
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
ds
pop
jae
inc
insl
out
popf
mov
sbb
mov
mov
xor
into
test
and
outsb
push
dec
jb
xor
mov
int
sub
mov
daa
pop
in
bound
repz
ds
mov
cwtl
add
fwait
jo
push
mov
sub
ja
adc
jmp
add
sbb
mov
dec
les
sbb
les
pop
addr16
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
shll
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
stos
pushf
out
es
jae
pushf
lret
mov
dec
popa
scas
mov
pop
pop
adc
jg
sahf
subl
stc
cwtl
shll
or
add
movd
nop
lds
dec
dec
adc
dec
add
inc
shll
mov
sub
movsl
inc
mov
fldl
jmp
push
movsb
sbb
daa
sub
sahf
jbe
push
push
mov
fisubrl
dec
out
mov
mov
adc
push
imul
dec
and
cmp
jno
dec
add
mov
adcl
test
push
daa
sub
lcall
pop
cmp
push
jbe
sub
stos
aad
xor
xor
mov
mov
jp
jp
inc
mov
pop
jb
add
mov
out
push
out
xor
test
inc
mov
ror
jmp
jno
lds
jnp
out
cmpsl
mov
sub
ljmp
xchg
bound
out
data16
cltd
test
es
and
push
push
lret
popf
sti
xchg
shrb
stos
stc
cmp
ljmp
jnp
adc
jno
or
js
sbb
mov
cmp
inc
cmp
roll
fcomps
je
cmp
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
or
stos
fs
inc
fisubrl
xchg
xchg
movsl
xchg
jp
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
or
lods
int
fsubrs
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
les
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
out
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
or
fisubl
cmp
inc
push
ret
call
ds
movsb
mov
push
gs
arpl
aaa
jl
mov
or
cmpl
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
and
ja
and
inc
inc
sub
fists
addb
rcrb
hlt
das
lock
mov
or
push
fcompl
jne
jns
lds
nop
lds
mov
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
or
pop
pop
cmpsl
icebp
imul
cs
xchg
mov
fists
xor
sub
ja
popf
lods
push
push
loope
sti
jb
xor
or
shrb
sbbl
sub
dec
es
test
insl
inc
xor
bound
mov
subb
xor
dec
arpl
insl
mov
pusha
mov
add
loop
inc
sbb
daa
add
test
push
leave
cmpsl
inc
icebp
xchg
add
and
lds
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
bound
sub
shrl
mov
push
out
insl
lret
inc
sub
xchg
call
rol
pop
adc
dec
rorb
fucom
inc
and
inc
clc
mov
cltd
call
fcoml
jg
test
jl
jge
mov
stos
rol
int
pop
and
cli
pop
test
mov
pop
inc
fisubl
push
int3
xor
mov
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
fwait
nop
xor
ret
subl
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
adc
adc
lock
or
fisttps
mov
pop
repnz
mov
mov
inc
out
and
fwait
xor
pop
dec
fistl
or
lea
pop
lds
pop
sti
pop
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
test
add
data16
nop
lds
pop
pop
xor
sbb
cli
orb
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
stos
aas
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
sti
out
mov
adc
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
les
loopne
hlt
jbe
gs
jnp
inc
inc
pop
mov
sbb
adc
int
int3
fwait
mov
in
and
xor
mov
jp
push
pop
add
add
cltd
sub
adc
cmp
add
inc
mov
jns
pop
lock
push
mov
call
imul
dec
and
outsb
and
bound
and
adc
ljmp
sbb
or
dec
std
dec
and
push
out
mov
or
movsb
js
jbe
xor
fldl
cld
cltd
lahf
fisttps
pop
scas
aaa
mov
cli
jnp
inc
mov
mov
jne
idiv
add
push
pop
push
pushf
jmp
jno
sbb
ss
les
mov
dec
cwtl
pop
dec
cltd
addr16
inc
push
movsl
int3
adc
adc
mov
insl
xchg
aad
fisubrs
push
dec
mov
lcall
and
adc
push
orl
sti
dec
cmpsb
push
pop
add
add
add
mov
sbb
jl
orb
xor
mov
test
sub
in
push
enter
lods
push
shrl
sub
mov
aad
ja
pop
imul
adc
mov
stc
add
aam
adc
aam
stc
insl
pop
fwait
enter
lods
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
enter
xor
movsb
int
fsubrs
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
les
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
lret
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
mov
pop
dec
mov
add
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
mov
cmp
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
mov
out
inc
and
jg
cwtl
mov
mulb
adc
mov
add
cmp
decb
push
lods
call
in
push
xchg
nop
dec
dec
stos
mov
lods
dec
mov
test
sbb
jecxz
sbb
add
je
pop
adc
clc
cmp
add
std
mov
xchg
sub
adc
call
clc
mov
loop
imul
int3
stc
inc
push
cld
test
or
test
std
xor
or
adc
mov
imul
faddp
and
loope
test
pop
pop
cmc
test
shr
pop
fisttps
xchg
dec
addb
fcompl
unpckhps
mov
das
dec
sbb
push
pop
hlt
idivl
outsl
outsl
int
adc
loop
jae
mov
das
pop
and
clc
shlb
and
dec
cmpsl
dec
dec
test
inc
addr16
xor
seto
imull
fsubr
jbe
enter
aaa
cs
lods
jo
push
inc
push
push
push
lds
faddl
and
inc
les
inc
xchg
cmc
hlt
add
movsl
jg
addr16
into
and
rorl
imulb
lret
insl
lret
pop
xchg
outsb
xor
and
xor
add
xlat
and
call
repnz
popf
xchg
push
leave
inc
sub
dec
push
or
leave
rorb
nop
adc
fimull
out
rol
fwait
movsl
pop
jno
lds
inc
and
adc
fmull
sti
add
out
mov
sbbl
xchg
pop
adc
jp
add
and
add
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
sarl
out
mov
andl
sub
push
inc
inc
loope
pop
pop
out
xchg
jnp
test
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
mov
js
mov
sti
xor
cmc
shlb
add
mov
cmp
sbb
fs
inc
mov
test
repnz
cmc
sbb
mov
push
adc
jno
arpl
lds
sbb
inc
sbb
xchg
loopne
jne
pop
pop
aam
add
push
out
xchg
inc
push
fadds
in
mov
scas
shrb
sub
movzbl
loop
mov
mov
lea
ret
jp
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
fstpt
mov
sti
sti
and
sbb
lret
dec
sbb
cmp
cltd
sbb
and
mov
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fisttpl
int
pop
xchg
loop
mov
sar
fcoml
add
jmp
decb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
cld
sub
cmc
sbb
inc
rcrl
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
mov
bound
ja
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
push
mov
out
loopne
inc
dec
rorl
dec
out
les
inc
dec
mov
rcrl
or
fs
sub
adc
pop
sbb
subb
mov
arpl
sbb
and
push
xchg
sub
inc
enter
sahf
rcrb
out
mov
mov
popa
or
sub
aaa
mov
sbb
jge
les
mov
dec
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
idivb
add
xchg
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
in
pop
addl
idivb
in
sbb
std
cmp
jl
das
inc
iret
shl
aaa
jge
pushf
jecxz
nop
loop
jp
scas
mov
jp
scas
fcomi
xlat
repz
mov
mov
xchg
enter
js
pop
mov
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
pushf
negl
mov
cmp
sub
mov
iret
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
addb
adc
dec
xor
movsb
shll
lock
jbe
lods
push
outsl
orl
out
fldcw
out
mov
enter
lods
mov
test
push
sbb
mov
xchg
xchg
test
xor
addr16
mov
imul
out
ud0
lock
cmp
mov
shrb
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
jns
shrb
cmp
cld
or
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
and
test
push
stos
leave
pop
imul
adc
mov
lods
push
outsl
sbb
scas
movsb
mov
xchg
xchg
and
pop
adc
pop
cltd
enter
lods
mov
pop
arpl
out
in
jae
inc
stos
int
and
push
stc
and
in
or
ret
jp
mov
stc
xor
or
cmp
jmp
sub
jnp
testb
fucomi
hlt
std
mov
sti
and
test
jg
sbb
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
popf
jnp
popl
mov
add
scas
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
scas
inc
cltd
enter
mov
mov
pop
add
or
nop
pop
popf
pop
jnp
sbb
xchg
mov
xchg
pop
xchg
outsb
and
pop
add
and
adc
inc
lahf
adc
in
push
cmp
int
fisttpl
mov
mov
cwtl
fadd
fwait
adcb
mov
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
xor
cli
into
xchg
stc
cli
in
test
or
test
jnp
sbb
cmpsb
sub
mov
mov
dec
loopne
subl
push
sahf
pop
jg
sub
repz
mov
shll
xor
sub
pop
sub
out
jns,pt
outsl
adc
out
adc
add
rorb
stc
lock
pop
xchg
inc
add
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
test
or
sbb
dec
push
add
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
je
sbbl
inc
icebp
xchg
jle
inc
scas
leave
sub
push
mov
insl
cmc
imul
notl
and
jle
sbb
inc
mov
rcrl
fsubs
jmp
xor
xchg
cmpsl
mov
andb
add
push
shlb
or
imul
add
cmp
jle
jbe
lods
inc
in
mov
mov
iret
js
jle
mov
inc
lret
loop
xchg
jnp
sub
or
mov
repz
push
shrl
jo
inc
int
pop
and
imulb
movsl
into
imul
int3
cmpsb
add
iret
daa
adc
imul
xchg
sub
or
inc
es
jns
inc
and
stc
les
fwait
dec
sub
enter
das
lea
mov
lods
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
cmp
sbb
fs
push
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
sub
pop
test
jecxz
pop
mov
push
roll
fcompl
sahf
xchg
mov
inc
outsl
outsl
call
push
rcl
shlb
xor
iret
jae
mov
push
xchg
inc
cwtl
or
dec
push
or
and
sti
mov
cmpsb
mov
adc
and
push
dec
push
adc
inc
sbb
stos
ret
loopne
int
aas
xchg
arpl
mov
ret
pop
push
push
outsb
je
add
mov
push
dec
xchg
jg
inc
push
mov
cld
and
adc
inc
xlat
test
push
jp
dec
mov
mov
pop
sub
mov
fildll
mov
or
out
test
dec
fsubl
mov
pop
rol
fdivrl
mov
push
out
cmpsl
fistpll
pushf
lds
rcr
xchg
pop
pop
into
jecxz
lahf
cmpsl
jns
out
js
int3
xor
repz
xchg
or
sbb
fnstenv
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
or
cmpl
or
push
sub
push
xor
std
cmp
out
inc
mov
sub
insb
push
pop
xchg
mov
push
xchg
rcl
and
lods
fldt
ljmp
cltd
fldl2e
jae
fwait
xlat
push
movsb
shll
loopne
inc
sub
sub
inc
insb
xchg
mov
push
je
lret
outsb
movsl
cwtl
pop
push
adc
jae
xor
pop
xor
mov
or
mov
std
push
or
sbb
js
adc
jno
js,pt
test
push
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
or
rolb
push
push
shll
dec
stos
icebp
and
sbb
cmpsb
ja
test
shlb
inc
lods
jb
mov
dec
mov
cmp
and
mov
leave
jo
mov
add
mov
outsl
movsb
jmp
inc
bound
add
jg
fmull
xchg
xchg
ret
push
int3
inc
push
fwait
xchg
inc
test
cmp
inc
xchg
pop
mov
mov
jne
jmp
enter
cmc
movsl
testb
in
aam
pop
or
add
adc
xchg
jnp
push
or
add
arpl
mov
add
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
lds
fs
out
pop
sbb
push
inc
push
pop
cltd
test
or
push
sub
push
xor
iret
push
cmp
or
outsl
aam
sub
dec
aam
dec
into
pop
mov
repnz
pop
repz
jecxz
or
adc
stos
adc
inc
mov
xor
xchg
outsb
mov
pop
sub
testl
test
adc
inc
sbb
out
xchg
pop
xor
adc
inc
fdivrl
jecxz
fistps
test
clc
loop
in
lret
pop
xchg
in
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
dec
fmuls
xor
jbe
std
cmpl
pop
sahf
imul
ljmp
inc
mov
jbe
mov
xor
leave
ss
mov
and
inc
mov
inc
adc
inc
pop
xor
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
cli
and
out
jno
insb
out
pop
mov
leave
inc
out
cld
jb
mov
lock
aas
rclb
jge
pushf
mull
out
jo
pop
push
cmpl
jp
mov
sti
fucomip
andl
jo
outsl
xor
pop
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
stc
xor
jns
cltd
mov
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
mov
imul
push
adc
mov
pop
push
mov
shrl
fistpll
shrl
dec
sub
sub
xlat
in
out
ss
outsl
dec
dec
push
test
es
rcrb
out
mov
popf
enter
mov
mov
sbb
mov
jp
mov
stc
xor
or
cmp
jmp
sub
jnp
testb
fucomi
hlt
std
mov
sti
and
test
jle
sbb
xchg
push
hlt
mov
popa
dec
mov
or
mov
arpl
std
add
mov
push
xor
push
shll
xchg
sbb
mov
cmp
insb
push
fsubrs
data16
sbb
xchg
xchg
shll
popa
lods
fldt
ljmp
push
sub
pushf
imul
jno
loope
fmuls
adc
ret
push
leave
ret
sbb
imul
scas
aam
je
insl
push
pop
xchg
shlb
je
insl
jb
sahf
fsubl
jbe
lods
adc
fsubs
ja
lods
xor
loopne
stc
mov
inc
mov
jae
in
jo
cwtl
ret
jg
ja
jecxz
sti
or
test
and
xchg
imul
push
lret
jnp
and
fists
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
cli
pop
leave
mov
cmp
inc
and
xor
les
sbb
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
.byte
dec
fldcw
incl
inc
add
push
push
je
imul
or
fs
inc
push
mov
sbb
sbb
test
sbb
mov
xchg
inc
push
push
call
ret
std
xchg
out
mov
adc
or
push
mov
mov
pusha
mov
adc
test
jne
push
cs
jmp
or
cmp
jge
mov
mov
mov
xchg
ud0
adc
pop
inc
arpl
shlb
sub
insb
jmp
imul
ret
mov
jmp
pop
jg
data16
mov
test
je
in
mov
decb
shlb
mov
and
or
sbb
lahf
mov
mov
cmp
jmp
test
adc
push
out
out
fcmovu
roll
add
push
add
rorl
sbbb
ja
or
add
mov
int3
enter
dec
int
fcmovnu
lret
loopne
jecxz
in
ret
cmp
jge
jcxz
cmp
lcall
ret
mov
cli
ja
lea
lea
std
rep
jmp
mov
ss
and
out
test
sar
enter
sub
sub
rep
cld
dec
inc
imul
stc
add
or
in
sti
fcmovnb
push
add
mov
add
add
fistpl
add
and
pop
and
cmpb
add
out
shr
fldt
or
or
mov
mov
in
add
je
pop
adc
adc
int
aam
icebp
pushf
pop
push
mov
outsb
cs
adc
fistl
or
push
mov
add
out
mov
cmp
push
mov
inc
mov
mov
pop
mov
mov
add
jmp
cld
mov
mov
inc
xor
mov
inc
add
jb
cmp
das
pop
push
mov
mov
mov
inc
add
hlt
mov
sub
jbe
mov
jmp
loope
fucomi
ret
xor
xor
rol
add
mov
sbb
mov
push
loopne
add
cmp
outsb
fs
pop
cmpsl
lock
dec
jae
xor
in
in
fstpt
push
inc
cmp
je
mov
push
sub
xchg
lahf
in
je
and
je
pop
je
xor
in
sarl
dec
test
and
add
idivl
divb
jmp
adc
ja
ja
lea
add
add
sub
aaa
sbb
dec
arpl
testb
jmp
fdivrs
js
pop
sub
jmp
inc
daa
jmp
mov
mov
wbinvd
or
dec
popa
jb
push
and
mov
jbe
pop
adc
or
aad
sbb
aad
test
inc
add
xchg
jne
movsbl
inc
inc
jmp
add
shrl
cmp
sbb
push
push
addl
mov
push
pushf
dec
pop
pop
pop
pop
daa
mov
mov
fnstsw
testl
mov
movl
hlt
mov
push
push
inc
cmp
pop
fdiv
sbb
add
sub
lock
push
push
mov
mov
in
adc
mov
inc
fiadds
out
mul
adc
adc
cmp
ja
out
push
stc
mov
test
or
sete
or
std
jle
mov
inc
mov
call
pop
sbb
push
sub
inc
xor
mov
xor
push
jbe
arpl
jnp
les
imull
mov
lods
sti
mov
add
push
test
add
inc
add
sub
add
jnp
xor
add
sbb
inc
leave
ret
iret
mov
adc
mov
in
jg
add
cmpl
adc
rorb
sbb
adcl
mov
add
adc
mov
add
push
out
int3
mov
adc
pop
pop
and
mov
cmp
add
push
mov
outsl
jg
testl
fmul
push
mov
pop
in
mov
add
mov
lds
mov
cmp
outsl
jb
outsl
outsb
jae
inc
outsl
jo
pop
addr16
lret
sub
and
cmp
xor
cmp
inc
push
insb
popa
outsb
add
filds
ret
popl
push
add
lods
mov
xor
dec
fiadds
jmp
add
and
jnp
mov
sbb
add
outsl
or
and
inc
jg
mov
cld
dec
xor
ret
dec
cld
sub
pop
add
adc
mov
lock
xor
orl
and
or
cld
movl
bound
mov
xchg
stos
loope
pop
stc
pushf
arpl
inc
lret
mov
mov
mov
dec
ficoms
jae
inc
jmp
fdivrs
push
push
push
mov
inc
repnz
jne
not
pop
add
pop
pop
call
test
lcall
or
je
es
jns
mov
add
cmp
into
pop
or
add
mov
adc
adc
push
fidivl
out
inc
iret
jecxz
mov
inc
jle
test
jg
ret
add
jo
lahf
cld
sub
pop
es
mov
dec
xor
aam
insb
inc
xor
test
pop
sub
es
jl
cmp
jge
sub
mov
sbb
fnstcw
add
add
mov
in
xchg
pop
sub
mov
jmp
adc
pop
ret
mov
xor
ds
fwait
xor
std
mov
xchg
push
into
dec
js
mov
inc
sub
icebp
or
aad
push
loopne
sbb
repz
lret
popl
shr
jle
insb
pop
mov
sub
dec
imul
das
aas
fdivs
inc
dec
scas
lea
mov
jne
sub
ret
push
outsb
or
pop
mov
int
cld
mov
bound
xchg
ljmp
sbb
icebp
jl
cmpsb
stos
sbb
or
daa
push
rcr
xchg
into
lahf
push
xor
add
in
add
cld
shr
or
push
push
sbb
out
mov
arpl
dec
add
mov
sarb
push
mov
add
or
je
mov
or
outsl
loope
mov
jp
ljmp
clc
or
or
fcmovne
fmull
or
je
add
je
cmpps
push
popf
cmp
mov
decl
inc
or
adc
jmp
push
sub
cs
add
dec
cs
jg
sahf
std
fisttpl
mov
adc
mov
sbb
divl
lock
xchg
mov
xchg
adc
xor
mov
add
insb
xor
mov
xor
test
repz
aaa
shll
inc
pop
fstps
xlat
or
dec
pop
jge
add
imull
ret
lahf
adc
push
mov
or
sub
or
add
pop
or
fstps
sar
or
xchg
repnz
pop
fsubr
push
in
mov
or
jbe
xor
sbb
adc
pop
mov
add
adc
mov
adc
rolb
and
fwait
sub
loop
push
repnz
push
jb
cld
ret
mov
jmp
sub
jle
sbb
movb
push
inc
add
xchg
fcoml
adc
stc
push
stc
cmp
xchg
stc
dec
cmp
cmp
cmp
or
cmpsb
jns
mov
pop
repz
jl
adc
dec
or
mov
data16
jge
fmuls
push
insb
lea
push
cmpb
packssdw
rolb
je
enter
test
out
add
add
sbb
push
insl
fs
adc
shr
incb
test
pop
sub
jle
inc
add
mov
dec
sbb
fs
adc
psadbw
sbb
repnz
jge
pushf
xor
mov
dec
push
cmc
mov
xchg
ja
jne
dec
jne
push
or
push
xchg
sub
mov
adc
adc
mov
cwtl
lar
xchg
imul
add
add
add
and
inc
inc
xchg
pop
pop
iret
clc
les
mov
testb
add
cwtl
jl
gs
xor
xchg
test
mov
mov
inc
cmp
enter
cmp
jb
je
ficompl
cmpw
push
add
cmp
jmp
je
bound
in
test
das
cmp
jae
mov
shrb
or
cmp
cld
out
push
jne,pt
or
and
testl
movl
mov
jo
popa
nop
in
stc
or
mov
nop
lret
pop
jb
out
cmp
add
popf
dec
in
insl
andl
add
mov
loope
push
loop
test
pusha
add
mov
xchg
fstl
lcall
mov
insl
sub
loopne
cwtl
jmp
add
pop
adc
add
call
jmp
mov
inc
insl
call
cltd
idiv
cmp
mov
mov
je
adcl
inc
lret
ljmp
call
cmp
jge
sbb
and
push
call
lock
mov
push
inc
inc
loopne
push
in
lods
loopne
lcall
push
cwtl
xchg
mov
inc
in
jge
add
sub
mov
inc
dec
push
add
cmp
in
in
push
push
out
add
push
pop
xlat
push
sbb
push
arpl
dec
movsl
fisubl
bound
ja
add
nop
int
xor
movsl
pop
in
sub
dec
ret
and
shll
jle
int3
or
mov
clc
pop
dec
dec
or
jl
inc
movl
mov
mov
lea
pusha
clc
inc
js
mov
and
dec
sti
push
sbb
mov
lcall
movsl
add
mov
xchg
inc
fidivl
daa
inc
rcr
js
push
fnstenv
aad
pop
out
dec
push
mov
or
and
mov
adc
dec
cmp
dec
fmull
je
adc
push
orl
lcall
xor
cmp
push
add
stos
xor
mov
fisttps
push
je
cmp
addr16
mov
sbb
movl
adc
add
fsubrs
fildl
or
out
call
push
add
mull
fs
push
adc
and
mov
jp
fs
add
mov
ljmp
mov
in
add
push
fiaddl
cli
push
jmp
pop
hlt
and
or
or
ja
jecxz
outsb
pop
loop
pop
jns
neg
testl
scas
jo
add
fincstp
fildl
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
dec
adc
fidivs
sub
sbb
inc
loop
pop
test
sbb
div
sbb
imul
jge
jp
push
or
cmp
or
pop
dec
ret
mov
add
adc
and
test
cvttps2pi
sub
repz
or
repnz
dec
jae
or
or
ret
pop
mov
out
fs
mov
repnz
push
xchg
hlt
repnz
add
push
aam
xlat
jg
aaa
pop
in
in
and
inc
jl
or
mov
push
shld
shl
ret
sbb
sar
ljmp
sar
sbb
lea
mov
jge
add
and
nop
pushl
mov
shlb
and
add
cmpl
mov
ds
ja
clc
push
int3
dec
and
and
add
jmp
pop
cmpsl
mov
add
je
mov
mov
inc
dec
imul
iret
pop
jge
mov
sbb
inc
sbb
std
jmp
push
mov
sbb
js
aaa
mov
test
jle
pop
dec
sub
addb
xor
mov
adc
adc
ret
adc
inc
mov
and
addr16
mov
mov
sbb
sub
in
mov
add
fldl
or
jbe
jbe
adc
pop
add
and
push
inc
and
and
and
ret
add
addb
enter
mov
or
mov
outsl
xor
and
push
out
inc
mov
pop
adc
xor
pushf
popf
cli
add
in
xor
dec
adc
push
push
inc
popa
leave
clc
add
orl
and
add
testb
jp
sbb
push
sbb
cmpsb
aam
inc
add
lds
cld
inc
cmpl
sarb
mov
clc
lret
pusha
ss
mov
ds
scas
inc
sub
and
push
push
cld
cmp
push
clc
mov
test
push
in
pop
xor
idiv
ljmp
pop
fistps
shlb
jnp
adc
pop
add
inc
mov
fld
or
ret
cltd
outsb
daa
pop
lods
push
jae
push
mov
pop
jne
sarl
push
out
add
xor
hlt
into
cs
jne
sub
and
sbb
push
addl
jne
and
cmp
jge
fbstp
add
out
and
fcmovu
jne
cmp
add
add
jbe
ds
add
cmp
ja
int
jns
int3
mov
andl
shrb
sbb
sbb
cmp
xchg
rcrl
and
test
or
sub
iret
sub
push
jns
dec
jo
lahf
pop
dec
jne
inc
or
std
sarl
and
mov
hlt
mov
nop
inc
arpl
sub
mov
loopne
or
push
int3
daa
aas
leave
aam
ljmp
inc
aad
fcmovnu
scas
ljmp
call
adc
dec
lea
in
mov
lahf
lea
cwtl
loopne
and
mov
out
xchg
sbb
sbb
mov
jbe
xor
and
nop
add
sbb
nop
mov
push
mov
mov
and
notb
arpl
shrl
cmp
xorb
pop
mov
data16
jecxz
pop
and
mov
mov
movsb
and
adc
outsb
jecxz
inc
inc
cmp
das
jne
dec
mov
ficomps
bound
inc
mov
in
xor
lahf
mov
add
lahf
add
sbb
push
pusha
fwait
mov
jl
or
addr16
adc
es
popf
xchg
push
mov
adc
adc
push
pushf
inc
lcall
jl
mov
mov
out
mov
or
rcrl
or
ret
xor
add
add
int
sbb
ret
enter
sub
nop
sub
mov
pop
jle
mov
fldt
dec
cld
add
mov
out
scas
movsb
pop
xor
jnp
sbb
pop
and
adc
jmp
push
jb
sub
cwtl
mov
sti
pop
add
cmp
dec
out
sbb
add
mov
movsb
sbb
and
fildll
lcall
out
mov
outsl
je
scas
in
orl
xchg
les
cwtl
pop
xchg
jmp
fwait
jno
mov
insb
out
test
mov
pusha
and
push
leave
mov
mov
aaa
or
stos
mov
mov
enter
movsb
and
sub
pop
cmp
mov
xchg
pop
push
mov
jne
jl
xchg
hlt
mov
pusha
mov
lds
xor
jge
stos
adc
dec
lock
pushf
nopl
inc
or
lret
jp
in
mov
add
pcmpgtb
in
call
xchg
rol
ds
jns,pn
fmull
fsub
test
pop
xchg
mov
stos
shlb
add
mov
in
fcomp
xchg
dec
push
in
int3
mov
mov
inc
rorb
mov
inc
cs
enter
pop
mov
rol
jb
fldt
mov
or
sbb
mov
pop
repnz
je
mov
pop
mov
mov
insb
inc
movsb
in
mov
xlat
inc
add
pop
fs
pop
xchg
mov
outsl
add
jo
sub
les
xchg
dec
mov
add
mov
xchg
pop
push
cmp
call
add
fcmovu
mov
and
movsb
xor
insb
pop
pop
cmp
cmp
jge
add
mulb
lock
add
cmp
sti
in
lcall
jnp
lea
cmpl
push
mov
lods
jg
fimull
test
mov
daa
popf
test
pop
pop
dec
adc
fadds
ret
insb
mov
pushf
lret
xchg
iret
push
stos
dec
js
mov
fsubrp
dec
cmp
mov
fistpl
add
inc
jmp
add
jge
adc
cwtl
mov
pusha
adc
cwtl
outsl
mov
jp
add
neg
sbb
std
push
ret
test
ret
into
mov
out
and
into
jo
xchg
test
pop
jb
pop
sbbl
push
pushf
cmpsl
add
cmpsb
enter
inc
add
dec
jb
fcomps
js
insb
mov
iret
pop
mov
add
push
mov
pop
es
cmpl
mov
add
test
sub
mov
mov
inc
inc
push
and
test
rolb
stos
xor
add
and
insl
fstl
mov
adc
mov
incl
inc
add
dec
inc
add
insb
inc
push
dec
jl
cmpsl
or
or
pop
add
add
fwait
sti
outsl
pop
add
add
or
push
add
adc
ss
add
bound
push
add
add
add
sbb
arpl
mov
add
cmp
adc
movsb
sbb
cmp
pop
cmovae
fistpll
scas
pop
sbb
inc
pop
mov
mov
pop
fwait
popf
int
cwtl
sbb
imul
push
pop
xlat
mov
pop
arpl
popa
std
lret
add
lcall
jb
das
iret
mov
imul
or
imul
popa
jb
inc
or
jb
arpl
fs
jae
cmovae
popa
xor
insb
outsl
jae
dec
ja
xlat
or
or
mov
jb
outsb
je
push
push
arpl
push
imul
or
insb
cmp
or
imul
imul
inc
inc
dec
dec
outsl
insl
insl
pusha
jbe
insl
nop
outsb
jo
insb
jae
adc
jne
or
sbb
inc
push
inc
outsb
or
inc
dec
outsl
fs
movsl
inc
in
mov
dec
popa
insl
adc
repnz
cmp
push
jge
pop
push
mov
fdivl
dec
mov
mov
jns
ss
add
rcll
dec
in
jo
lods
decb
int3
push
pop
stc
das
dec
call
dec
add
add
pop
inc
sub
add
sbb
and
in
sub
aaa
mov
inc
add
add
fnstenv
or
fwait
dec
data16
adc
add
call
mov
or
and
add
pop
dec
xchg
mov
inc
test
popa
pop
mov
nop
jmp
and
cmp
inc
push
sub
int
ja
push
rolb
jbe
and
dec
leave
and
shrb
fs
outsl
mov
repz
mov
push
push
jl
sub
cmp
inc
jb
lahf
mov
sub
daa
xchg
fsubs
dec
mov
cs
jae
je
mov
daa
adc
cmpb
add
mov
inc
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
sub
inc
add
clc
inc
add
