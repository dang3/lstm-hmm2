jno
lahf
pop
mov
fucom
in
pop
popf
or
pop
push
scas
imul
mov
mov
cmp
add
ss
inc
dec
mov
pop
adc
xchg
mov
cmp
push
cmp
push
das
movsb
insl
clc
add
lock
xchg
inc
push
pop
pop
add
xchg
dec
cmc
add
mov
jo
add
loopne
add
dec
sarb
pop
mov
mov
test
fidivl
popf
add
or
popa
mov
mov
pop
iretw
pop
and
mov
jae
inc
dec
cltd
and
push
scas
jmp
decl
xchg
out
xor
cld
lock
in
push
push
mov
pop
test
mov
mov
imul
jmp
adc
sub
pop
out
jge
cs
and
je
sub
popa
out
cmp
pop
out
push
dec
mov
cmp
loop
mov
rcll
add
inc
push
or
js
int3
test
xlat
cmpsl
popf
and
adc
mov
push
pop
push
movsb
sbb
add
mov
pop
xor
loope
adc
dec
out
jno
fwait
aad
jmp
push
adc
mov
jg
mov
into
xor
lcall
cmp
sbb
push
pop
mov
jnp
pop
pop
push
sbb
cmp
adc
xor
and
push
popa
mov
sub
leave
jmp
mov
fnsave
push
fsubl
lcall
add
push
cmpsl
push
fisubl
xorb
jbe
ja
iret
mov
in
mov
iret
sbb
lret
call
adc
mov
mov
sbb
das
clc
inc
dec
fs
test
xchg
fildll
pop
sbb
out
lods
testb
and
xor
add
test
lds
mov
add
daa
push
fcoml
pop
xchg
popf
xchg
rcrl
push
xchg
enter
loopne
cmp
inc
push
pop
shrb
fisttps
mov
mov
dec
div
mov
repnz
hlt
inc
imul
test
mov
adc
rdmsr
in
mov
jbe
xchg
mov
xchg
jmp
stc
out
pop
or
imul
fnstcw
enter
outsl
dec
push
popf
mov
in
cwtl
add
cltd
adcb
xchg
lods
mov
pusha
leave
xchg
sbb
sbb
xorl
xchg
fsubrl
and
sar
movsl
add
pandn
es
dec
repz
jp
dec
xchg
lods
adc
call
ljmp
xor
sub
roll
das
mov
xor
xorl
mov
aad
jge
adc
dec
fldenv
or
scas
mov
psubusb
sub
sbb
mov
scas
ret
testl
push
cmp
cmp
mov
mov
push
sti
hlt
and
and
xor
add
and
test
lods
xchg
sbb
xchg
int
and
inc
sub
jp
into
push
cltd
jecxz
idivl
into
lods
ds
aam
inc
push
pop
jp
fs
cwtl
mov
repz
iret
jmp
lds
inc
sbb
imul
icebp
lcall
shl
cltd
dec
add
jb
pop
cmp
xor
jle
sub
inc
inc
jo
fisubrs
aas
sbb
loop
out
cmp
pop
js
imul
std
pop
loop
loop
into
ja
adc
cmc
add
fistps
jae
cmp
out
imulb
bnd
mov
xchg
sbb
pop
sub
gs
xchg
lcallw
cld
aam
lret
sbb
loope
cvtps2pd
arpl
dec
stc
sbb
in
sahf
sbb
lret
or
add
pop
dec
or
imul
adc
out
mov
mov
scas
mov
test
imulb
insb
jbe
dec
lods
pop
test
loop
loop
in
push
repnz
adc
xchg
dec
push
mov
xchg
xor
stos
push
jle
fnstcw
movsl
fildll
xor
pop
data16
lahf
cwtl
sub
cmc
test
cmp
call
int3
cmp
and
push
pusha
inc
dec
and
fbstp
xchg
and
push
int
shlb
jl
xor
cltd
sahf
fwait
mov
hlt
xchg
int3
push
cmc
sub
jno
bound
jp
gs
push
in
subb
dec
xlat
dec
push
push
pop
adcl
sarb
out
mov
push
call
repnz
cmp
jnp
das
mov
jle
mov
rcr
lods
hlt
add
mov
and
sahf
insb
pop
leave
ja
fwait
lds
adc
push
pop
das
sbb
xor
dec
ja
outsb
popf
pop
clc
mov
test
sbb
mov
sbb
subl
pop
add
int
cwtl
or
rcrb
loopne
pop
movsl
sub
cmp
and
scas
cmpsl
mov
or
pop
sub
push
jp
pop
sbb
cmc
test
cmpsl
xor
jmp
push
jb
iret
mov
add
ret
int
mov
int3
aam
lret
xchg
sahf
jge
cmp
xchg
fwait
ja
out
in
ret
repz
push
shlb
je
inc
sbbl
mov
pushf
std
xor
sbb
cmp
sub
loopne
mov
xorb
adc
js
insb
or
mov
mov
mov
sub
push
dec
xor
jb
mov
lods
iret
movsb
mov
cltd
loopne
or
pop
push
xor
push
jp
adc
mov
pop
pop
cmpsl
sbb
adc
ss
sub
sbb
or
pushl
imul
out
out
bound
clc
inc
fstpl
dec
ja
jno
sbb
stos
faddp
flds
adc
xor
adc
scas
ss
jmp
ret
fsubrl
cmp
sbb
dec
inc
xor
jle
addr16
test
shl
std
aaa
lock
out
dec
xchg
dec
xchg
aaa
jns
loop
fcoms
out
out
pop
adc
xor
push
jnp
xor
addr16
test
and
call
pop
repz
pop
pop
int3
push
lahf
test
imul
mov
test
mov
xchg
mov
push
sbb
or
sahf
cmp
aas
push
imul
popf
cli
pushf
data16
dec
mov
push
jno
rcr
out
enter
jle
lcall
jge
dec
loope
test
lret
fsubrl
inc
sub
jle
ja
lock
mov
push
fstps
xchg
pop
imul
scas
pushf
and
pop
loope
add
leave
push
sbb
mov
movsb
insl
ja
xor
pusha
stos
mov
xlat
aaa
xchg
es
xchg
push
add
ljmp
mov
push
fildll
inc
movsb
das
stc
add
and
or
dec
aam
lds
jle
aad
int3
push
mov
xchg
fwait
add
loope
and
or
gs
test
shlb
xor
nop
adc
sub
push
push
movsb
inc
adc
and
sbb
and
mov
mov
fs
lahf
repz
jecxz
mov
cmp
inc
jecxz
data16
enter
pop
stos
add
fldl
adc
rcrl
dec
sub
mov
insb
jno
and
cmp
clc
cwtl
loopne
dec
xchg
fsubl
sbb
mov
in
fisubs
insl
add
mov
adc
ret
or
loopne
ficompl
inc
mov
or
ljmp
cmpsl
cmp
popa
push
sbb
sti
mov
mov
push
jg
call
stos
scas
ss
int
mov
cltd
mov
jecxz
add
or
pushf
xor
push
inc
push
pop
and
sbb
adc
xor
sbb
push
stos
dec
push
and
addr16
popf
addr16
ds
push
cmp
aaa
inc
adc
aad
xchg
in
inc
mov
mov
sahf
insb
pop
xchg
repz
fwait
lds
jne
je
dec
sbb
clc
push
das
cmp
jnp
or
xor
dec
mov
insl
aaa
adc
jecxz
jmp
notb
xlat
pop
test
cltd
lret
sarb
mov
mov
push
pop
test
sbb
loop
push
pop
and
testl
je
enter
jbe
test
cmp
or
jno
inc
fstpl
dec
inc
es
je
pop
iret
mov
jp
rcrl
sub
orb
and
rorl
es
in
stc
aam
jo
sub
dec
aam
and
cmp
in
inc
mov
sbb
repz
sahf
sbb
sub
sub
imul
mov
cmp
rol
mov
mov
sub
rorb
iret
cltd
push
xchg
gs
sbb
sbb
loopne
dec
push
pop
jb
jl
nop
and
or
and
fisttps
adc
js
ljmp
xor
repz
xchg
decl
pop
cmp
ficoml
cmpsb
sahf
push
sbb
inc
lods
push
pusha
stos
je
adc
stos
cmp
pop
jns
jecxz
xchg
xor
iret
shll
testl
jae
xchg
test
mov
stc
loopne
or
daa
jno
inc
aad
push
cmp
hlt
mov
mov
mov
jns
nop
mov
push
jno
gs
fxch
xchg
and
sbb
and
mov
ljmp
xchg
jp
fcompl
mov
pop
push
add
adc
push
mov
push
dec
pop
cmp
xor
jae
inc
xchg
fwait
movsl
rorl
imul
in
leave
rclb
lds
fstl
mov
mov
dec
push
in
sbb
rorl
dec
ja
dec
nop
mov
into
lret
aad
movb
pop
adc
shrb
cmp
jo
mov
cs
mov
or
pmulhuw
aas
mov
decl
punpckldq
xchg
add
sbb
ret
dec
push
pushf
inc
xchg
xchg
xchg
stc
das
testb
dec
aaa
shlb
jge
repz
dec
out
mov
sub
in
jne
xor
rolb
pop
movsl
cmp
je
pop
xchg
inc
mov
add
sbb
sub
dec
hlt
cld
pop
repz
pop
jns
ljmp
push
pop
cmp
iret
cltd
mov
xchg
pushf
rorb
into
in
ror
movsl
rorb
call
and
pcmpeqw
int3
xchg
aaa
decb
shr
adc
jae
cmp
clc
dec
lods
stos
and
mov
movsl
in
push
sbb
daa
jg
fisubrs
xchg
imul
add
nop
cli
or
lahf
xor
popf
cmpb
insb
out
sub
and
lock
dec
incl
jp
ret
int
inc
dec
ret
adc
and
call
sub
push
xchg
in
xor
dec
mov
orb
imul
data16
jne
cmp
xor
mov
cld
push
out
and
dec
inc
mov
dec
iret
jle
add
gs
or
lock
sbb
xchg
mov
loop
or
je
dec
call
mov
jbe
mov
test
ss
dec
mov
jmp
lcall
pusha
ljmp
cmc
rol
shrb
lds
pop
dec
aad
scas
sahf
pop
mov
fsubrl
ret
cmp
jg
and
adc
sarl
imul
xor
sbb
mov
mov
jo
mov
xor
add
xchg
add
das
sub
mov
popa
jmp
loop
or
popa
cld
es
push
dec
aaa
popf
push
cld
pop
pusha
jg
xchg
mov
repnz
push
dec
add
stc
fisubrs
jge
pop
push
mov
cltd
dec
inc
cld
pop
test
xchg
xor
pop
outsb
inc
add
mov
pop
xor
push
pop
pop
int3
pop
sbb
ss
push
nop
enter
ret
int
fsubrp
repnz
jno
test
inc
cltd
cmp
xchg
addr16
jecxz
sbb
rorb
lods
jno
jecxz
sub
cmpb
or
shr
mov
or
add
aaa
dec
push
mov
pop
xchg
cmp
push
push
sbb
or
cmp
pop
pop
test
push
lahf
mov
jmp
data16
das
fildl
lahf
xor
popf
cmpb
lds
mov
nop
xchg
or
fidivl
fwait
movsl
cmpb
mov
out
jecxz
xchg
push
orb
dec
orl
cmpsl
cmp
push
popf
cmpsl
rorl
out
or
pop
sub
outsl
call
cmp
pusha
movsb
push
sbb
ljmp
mov
mov
icebp
jge
insb
ss
lods
out
push
push
test
push
ja,pn
out
stc
aam
filds
cmp
mov
jno
xor
outsl
andb
xor
pop
and
out
loope
fisubrs
push
xor
xor
dec
insb
pop
mov
cmpsb
lds
sbb
loop
aas
in
mov
nop
mov
push
shlb
das
scas
ljmp
adc
pop
jmp
mov
xchg
mov
std
pop
xor
dec
jo
mov
mov
sti
xchg
cmp
ljmp
and
xchg
dec
insb
adcb
mov
aas
mov
decl
in
in
mov
rcr
dec
enter
outsl
push
or
add
into
dec
idivl
push
fdivrl
push
imul
mov
adc
cmp
pop
pop
popa
pop
mov
arpl
movsl
cld
test
pop
push
mov
xor
pop
mov
stc
add
in
dec
lods
stc
cmpsl
jno
test
push
pop
cmp
or
mov
gs
pop
and
out
cmpsb
ret
push
xor
std
push
jae
cli
sbb
outsb
shll
xor
test
or
es
push
loope
mov
push
out
data16
sub
push
sbb
jle
pop
jge
xchg
fwait
movsl
mov
and
cmpsl
sbb
push
jmp
dec
sub
test
add
hlt
inc
in
sbb
cli
inc
sub
bound
sahf
add
aaa
aad
mov
repz
jae
outsl
sub
push
test
fs
jecxz
sbb
or
movhps
cmp
pusha
mov
mov
xchg
mov
add
sbb
stc
xor
fbstp
jl
pop
mov
in
add
add
adc
imul
scas
int
addl
or
ds
data16
xchg
pop
xchg
in
mov
loop
lcall
dec
cmp
jb
pop
mov
popf
mov
daa
decl
cmp
dec
sti
pusha
ds
mov
enter
xor
inc
dec
sub
sub
jo
dec
or
sti
nop
fwait
das
scas
clc
xchg
shl
adc
repz
loopne
data16
sub
popa
mov
test
stc
in
fdiv
mov
add
mov
sub
fsubrs
pop
inc
pop
push
sbb
mov
or
jmp
or
sub
mov
xorb
test
inc
jge
push
jb
lretw
cwtl
and
daa
xor
lock
push
in
pop
aaa
push
loope
stos
inc
subb
pushf
gs
fisttpll
cmpsb
out
les
cmc
and
sub
test
and
lcall
mov
push
sbb
daa
and
cwtl
mov
pop
xorl
mov
filds
into
adc
mov
outsb
sbb
ss
sahf
mov
or
cs
xor
adc
inc
cmp
mov
idivl
popa
stc
sub
sbb
cmpsb
stos
dec
setg
fdivrl
aad
push
lods
in
cmp
fisubs
imul
int3
mov
fsub
mov
ljmp
and
jle
mov
jg
xchg
sahf
test
int
jnp
cmp
mov
push
jle
and
push
jg
xchg
cmp
xchg
iret
mov
pop
repnz
lock
add
fwait
movsl
inc
sub
sti
movsl
repnz
push
xor
and
pop
loope
push
xor
jle
arpl
rcrl
mov
ss
or
inc
imul
push
jg
lcall
andl
cmp
xor
dec
int
xor
mov
lea
aad
and
sbb
and
mov
jbe
jmp
ljmp
in
jb
cmp
js,pn
pop
daa
push
leave
jp
jge
std
test
pusha
jmp
pop
inc
shrb
sarl
mov
or
and
sbb
dec
dec
adc
sahf
fimuls
mov
cmpsl
testb
faddl
pop
dec
clc
shrb
fs
xchg
stos
call
push
out
dec
cmc
pop
push
jne
inc
jle
pusha
lahf
mov
stc
aam
mov
dec
push
pop
cmp
xchg
test
jo
adc
pop
adc
inc
pushl
push
out
sub
adc
xchg
popf
cmpsl
dec
aas
out
xchg
xor
and
inc
push
arpl
jae
push
xchg
fldt
lahf
cli
xlat
fimuls
jecxz
adc
or
lock
mov
into
push
sub
lret
add
mov
inc
xor
jae
add
add
inc
shr
adc
mov
xor
jnp
push
js
insl
daa
push
push
mov
mov
lret
adc
mov
in
ret
cmpb
fistpl
jmp
call
dec
ja
jne
popf
bound
je
pop
and
and
add
push
push
xchg
dec
jp
mov
jae
in
inc
mov
push
pop
inc
cmpsl
popa
or
fdivrs
sbb
out
fisttps
adc
mov
jae
scas
mov
dec
push
xlat
or
sbb
rcrb
cli
rorb
inc
insb
cmc
pop
push
add
mov
adc
in
cmpsb
dec
add
pop
repz
xchg
dec
jb
cmp
pop
bound
inc
lods
sub
and
pop
adc
test
insl
mov
cmpsb
mov
data16
lret
xor
xlat
sub
adc
lahf
movb
fucomip
add
nop
rcrl
sbb
cmp
dec
scas
cmp
inc
pop
scas
push
sbb
cwtl
popa
imul
imul
jne
xchg
sub
or
rep
in
cmc
inc
into
sub
cmp
push
inc
jns
imul
xor
fisttpl
cli
mov
icebp
push
dec
insb
or
mov
pop
mov
adc
loop
sbb
or
adc
xchg
pushf
test
dec
cmpsl
mov
push
in
fnsave
rorl
cmc
dec
shlb
inc
push
and
jo
push
xchg
inc
mov
orl
ret
dec
cmp
xchg
lods
push
pop
mov
loope
or
jb
cmp
xor
sbb
sbb
sub
insb
pop
adc
dec
sbb
pusha
js
mov
jp
cwtl
mov
or
dec
icebp
pop
sub
jno
test
sahf
stos
lds
ret
fcmove
and
outsb
daa
jno
push
repnz
dec
xchg
rcrb
fdivr
shr
pop
sbb
cmp
dec
push
dec
add
jg
out
jns
outsl
fcom
aad
out
mov
add
mov
outsl
sbb
addr16
pushf
cld
stos
add
lret
aad
jmp
outsb
jnp
pop
pop
jb
inc
subb
rolb
or
jo
js
out
sti
imul
stos
fs
loop
insb
scas
leave
sub
bswap
decl
rclb
sub
jge
dec
test
mov
mov
adc
cmp
inc
xlat
push
jmp
jle
pop
movsb
popf
out
mov
mov
incl
push
pop
test
jle
pop
fwait
in
mov
mov
dec
stc
push
daa
in
cmp
je
mov
pushf
xor
sub
sub
pop
into
pop
and
inc
imul
das
mov
mov
push
clc
xor
push
cmp
lods
inc
pusha
lret
dec
jl
test
jecxz
shl
push
xlat
or
dec
out
push
xchg
sbb
mov
popf
test
lret
call
dec
pop
popa
imul
icebp
xchg
mov
test
daa
inc
sub
pop
ret
dec
mov
jns
or
clc
cmp
or
sub
or
push
fs
dec
subb
negl
aad
mov
lcall
shr
shr
adc
icebp
mov
sbb
sub
je
mov
test
roll
in
insb
push
dec
repz
xchg
sbb
andb
cld
dec
fdiv
addr16
mov
and
xchg
pushf
jmp
mov
fists
std
pop
popa
jmp
popf
and
hlt
nop
scas
push
xchg
imull
or
add
lock
leave
sub
sub
mov
mov
jo
test
aas
mov
xchg
imul
aad
fxch
mov
lock
leave
sbb
inc
pop
mov
mov
mov
mov
stos
adc
cmp
in
lcall
cmp
adc
mov
sbb
push
pop
xchg
pushf
cmpsb
add
out
mov
adc
mov
cmpsl
sti
dec
aaa
repnz
dec
sub
std
push
int
ret
int
ret
decl
adc
jne
movsl
in
pop
arpl
pop
adc
stc
lar
xchg
ds
adc
add
or
inc
cli
and
sbb
jge
jb
push
jb
sarl
int
add
je
notl
inc
insb
pop
cmp
inc
popa
xchg
mov
mov
and
lock
mov
dec
daa
push
pop
imul
movsl
mov
and
xor
fucom
pop
xchg
mov
aam
jmp
test
dec
jmp
mov
push
aaa
jl
popa
insb
in
lds
lret
and
sahf
sbb
pop
adc
popa
out
in
adc
icebp
ficomps
sbb
sub
sbb
xor
adc
sbb
push
into
decb
adc
lods
out
sbb
es
or
outsb
sahf
popa
mov
jecxz
test
xor
aas
js
xchg
fwait
sub
aad
and
imulb
minps
jmp
stos
inc
push
lock
add
fisttpll
ds
inc
stos
and
or
shlb
data16
nop
int
stos
les
and
add
out
jle
push
cmpsb
pop
loopne
ljmp
dec
aad
out
pop
cmp
jae
xchg
fwait
das
scas
ret
ret
int
icebp
cmc
in
pop
adc
xor
dec
sti
xor
cwtl
and
jle
jl
data16
inc
fistl
popa
loope
jge
push
lcall
jb
nop
fidivl
ret
xor
ret
enter
das
xlat
adc
lea
dec
push
mov
mov
mov
sub
sbb
lock
add
bound
xlat
arpl
lret
lahf
xlat
cld
sub
push
popa
cmpsb
inc
jp
pop
sahf
mov
mov
out
pop
adc
adc
fwait
xor
dec
movsb
xchg
jae
inc
and
fsubrs
cld
inc
fstpl
arpl
dec
jg
push
add
les
xchg
daa
cmpsl
mov
and
sbb
aaa
fistps
sub
xchg
inc
bound
nop
mov
sti
mov
sbb
iret
or
stc
push
push
inc
lret
pop
lahf
jmp
fdivs
add
jb
xor
and
das
jge
xor
push
scas
int
xchg
sub
decb
and
add
rorb
pop
or
aad
test
lods
out
ljmp
or
jb
popa
lcall
jb
iret
sub
daa
out
and
xor
dec
outsb
jg
xchg
addr16
mov
testb
in
and
mov
xchg
inc
test
gs
enter
repz
int3
push
and
gs
mov
jg
cmpsl
mov
out
les
push
inc
cli
and
std
je
pushf
push
jge
les
pop
outsl
out
or
jmp
sub
and
or
insb
outsb
fs
push
ja
mov
mov
cltd
mov
and
add
pop
inc
inc
or
ss
pop
popl
mov
ret
sbb
sub
sahf
push
dec
mov
popa
mov
enter
sar
push
out
pop
inc
sti
dec
push
pop
movsb
inc
js
inc
pushf
lahf
cmpb
adc
hlt
xor
pop
xchg
xor
sbb
lret
sub
fucom
lock
or
adc
and
jno
pop
jb
out
mov
or
jecxz
mov
popf
imull
sbb
dec
insl
and
jg
insb
pushf
out
mov
mov
cmc
adc
jge
push
fwait
daa
cmpb
jl
xchg
ret
in
pop
rcll
push
and
mov
bound
jg
fs
fistpl
in
inc
rcr
sub
jge
inc
push
outsl
stos
cmc
test
sbb
adc
and
cmp
pusha
push
dec
xchg
gs
pop
jo
enter
aam
and
cmp
push
jno
inc
jge
orl
ret
repnz
xchg
rcrl
inc
call
dec
in
js
jle
xchg
sub
fsub
cld
add
clc
gs
push
pop
or
das
xchg
movsl
jl
dec
fisttpll
push
ljmp
fs
push
jmp
fucom
lock
or
adc
ljmp
mov
dec
mov
jmp
sbb
repz
xchg
and
dec
mov
pop
mov
fldenv
testl
fidivl
mov
int
mov
rcr
aad
in
leave
add
or
out
divl
mov
ret
aam
push
ret
testb
add
pop
div
jge
push
fwait
sub
popa
ret
or
fisubs
mov
popa
cmp
cmp
out
je
mov
add
fsubs
mov
sti
fcompl
ror
jl
xchg
test
frstpm(287
scas
fsubs
pop
and
xchg
int3
call
mov
or
sub
adc
arpl
pop
push
sbb
mov
pop
loope
cmp
push
jmp
adc
mov
mov
and
jnp
pop
mov
dec
fbstp
std
jge
mov
test
adc
xchg
lods
ss
mov
rclb
lahf
cli
or
jmp
loopne
xor
cmp
xor
jl
pusha
popf
inc
dec
lret
add
adc
sbb
imul
jo
dec
shl
or
mov
scas
clc
and
sbb
xor
dec
push
popa
mov
orl
xchg
daa
jns
fcompl
sar
pop
out
pop
test
stos
push
jnp
mov
imulb
xor
subl
mov
mov
or
sbb
pop
add
mov
imul
imul
or
dec
add
xchg
mov
lret
aad
int3
xchg
adc
dec
cmp
inc
ja
outsb
scas
mov
scas
and
adc
enter
jp
addr16
sub
fucomip
repz
stc
loop
cmpsb
lock
adc
imul
inc
push
jo
jnp
sarb
push
and
xor
adc
inc
test
jne
bound
xchg
iret
jbe
pop
aas
inc
mov
pop
imul
insl
jbe
int
mov
movsl
fimull
push
pop
jo
jmp
xchg
pushf
cmpsb
jne
push
mov
insb
ret
add
iret
jp
cli
mov
dec
push
pop
push
pop
scas
inc
or
mov
jne
daa
xor
xor
int
ja
mov
aaa
pop
jle
pop
mov
std
lods
loope
xor
push
jecxz
aaa
inc
imul
jno
sub
scas
repnz
mov
dec
fcompl
sbb
jns
arpl
loop
rorl
adc
jmp
mov
dec
mov
or
loope
ret
enter
cmp
aas
addr16
lods
inc
adcb
stos
lahf
mov
enter
das
scas
add
xlat
cmp
xchg
sahf
xchg
movsb
popf
and
popf
and
mov
ds
inc
in
ja
jb
mov
jbe
icebp
jl
aad
loopne
xchg
or
jno
in
pop
fwait
movsl
scas
jbe
addr16
loope
enter
jnp
incl
lods
sub
je
sbb
jnp
jbe
mov
push
in
add
stos
jecxz
cwtl
or
pop
pusha
jne
lock
fwait
movsl
scas
jp
sub
sbbl
and
push
pusha
inc
mov
xchg
gs
int
jae
add
xor
dec
xchg
sub
test
mov
xor
or
jno
test
pop
mov
xchg
fcoms
movl
mov
jae
cmpsl
sub
ljmp
leave
jg
push
sub
cltd
orb
add
aad
lcall
lock
aaa
out
push
mov
inc
pop
test
adcb
ret
fildll
push
ds
notl
adc
das
xchg
dec
jne
dec
cmc
mov
icebp
cmpsl
mov
mov
movl
in
mov
stos
cmc
fisubrl
sub
cmpsl
lock
pusha
push
das
push
xchg
cmp
into
cmp
sahf
shlb
lods
add
inc
push
jp
push
stc
ret
int
xchg
mov
scas
ret
call
fisubl
pop
jecxz
mov
sarb
lcall
ss
and
push
xchg
repnz
jmp
or
mov
dec
push
mov
or
fcoml
xor
push
pop
inc
inc
mov
pop
push
clc
xchg
icebp
stc
inc
dec
adc
or
lcall
scas
dec
mov
jbe
sub
enter
jne
outsb
xchg
and
fucomip
scas
mov
dec
add
jmp
jl
pop
cmp
jbe
das
subb
jg
jle
push
or
jp
cmp
popa
popa
sbb
push
xchg
outsl
jns
stos
lock
sub
scas
loop
cmp
pop
or
pop
cmp
xchg
outsl
int3
in
inc
mov
adc
pop
in
rclb
xor
cmpsl
inc
cmpsb
push
jb
jecxz
rorl
int3
testb
sbb
imul
lcall
push
movsb
dec
adc
in
adc
jle
dec
inc
xchg
mov
pop
and
fsub
lds
adc
or
loopne
xor
test
xchg
pop
sahf
in
mov
dec
fsubrp
adc
or
test
leave
fnstenv
push
ja
pop
push
sbb
stc
inc
dec
add
repnz
adc
test
push
and
add
cmpb
xor
and
fucomip
mov
out
jmp
cltd
sbb
sub
jmp
pop
test
add
in
stos
lods
scas
mov
movsl
mov
xor
push
inc
aaa
fwait
cmpsb
icebp
sti
add
hlt
mov
aam
imul
subb
popa
xchg
loope
mov
xchg
int
xor
sbb
sub
inc
subl
fstl
cmc
and
adc
cld
xor
jmp
xchg
mov
pop
mov
sub
sub
pop
pusha
loop
mov
mov
xor
cltd
mov
out
dec
or
xor
insl
xchg
inc
jae
and
xlat
mov
ret
lcall
jnp
push
inc
fcoml
inc
ja
fisubl
fdivs
loopne
std
xor
push
jg
addr16
andb
ret
loopne
adc
es
dec
outsl
lods
xor
stos
cmpl
fsubrs
and
addl
aaa
int
ret
insb
sbb
or
cmp
pop
mov
xor
icebp
xchg
mov
hlt
rorl
pop
and
mov
dec
xor
imul
push
into
movsl
hlt
mov
sub
aaa
adc
xor
loop
mov
sub
add
out
adc
push
out
rcrl
sbbl
cmp
cmp
mov
and
and
fmull
mov
fucomi
sub
les
mov
xchg
and
gs
cmc
pop
dec
sbb
inc
scas
push
jl
sti
push
xchg
jmp
mov
dec
mov
adc
xor
mov
imul
ds
fiaddl
add
sub
mov
mov
xor
outsl
repz
sbbl
aad
pop
test
and
lods
sbb
pop
aam
repz
and
les
dec
mov
shlb
pushf
push
mov
lds
jne
in
push
pop
insl
adc
cmpsb
and
xlat
or
ret
dec
inc
jle
and
pop
mov
fimull
push
xor
push
sbbl
dec
mov
sub
adc
xor
push
jl
dec
stc
ret
int
int3
outsl
fsubs
push
sbb
in
lcall
mov
xchg
in
outsl
rcrl
dec
sbb
dec
cltd
fimuls
cmp
sahf
test
out
cmpsl
sub
movsl
mov
popa
sub
les
mov
or
lret
aad
pop
lea
pop
push
fsubs
cmp
add
jl
mov
cmpsl
sub
ljmp
xchg
fisttpl
sbb
cltd
mov
pop
arpl
jno
jmp
pop
and
hlt
mov
jle
mov
pop
push
rcr
movsl
fldcw
popa
mov
sub
lcall
xlat
mov
xchg
test
pop
mov
sbb
cmp
lock
cmp
sbb
xchg
add
xlat
les
cmp
adc
mov
call
je
outsl
idivl
xor
add
hlt
add
pop
dec
fcompl
xchg
fwait
lcallw
and
cmc
shrb
mov
mov
inc
or
pusha
mov
mov
lock
xor
popf
xlat
insb
ss
sub
jl
inc
jge
dec
std
rcr
adc
pop
and
movsl
cmp
sbb
cmp
cld
add
mov
pop
xor
inc
dec
cli
ret
sbb
inc
out
mov
cs
das
mov
dec
cmc
lock
js
dec
test
xor
pop
movsb
scas
cmpsl
loopne
inc
dec
ret
jne
push
cmp
mov
xchg
add
mov
scas
or
jo
cmp
jne
data16
mov
mov
sbb
inc
dec
fs
sub
pop
bound
loope
xor
lcall
add
ds
mov
mov
or
inc
dec
push
iret
data16
inc
adc
and
jmp
loop
mov
daa
xor
rorl
movsb
insl
ja
in
inc
loopne
mov
sub
frstor
pop
and
in
or
adc
mov
movsl
ja,pn
out
stc
and
popa
sub
cmpsl
jno
push
mov
sti
jae
xchg
xor
pop
hlt
jg
insb
ss
dec
test
nop
lahf
adc
loope
xchg
pop
movsl
scas
imulb
pushf
rorb
ficoms
mov
test
cli
cmp
addr16
ljmp
pop
cli
aaa
jle
cld
jmp
jg
add
sub
jg
in
mov
xor
sub
es
dec
out
and
repnz
mov
xchg
cmp
fimull
xor
imul
add
xorb
pushf
mov
fiaddl
jmp
xor
xor
pop
xchg
aaa
dec
xorb
icebp
dec
fcoml
and
xchg
jns
pop
fwait
loope
mov
mov
cmp
daa
cmp
jbe
imul
ret
cmp
fdivr
inc
cmp
pop
pop
inc
push
scas
push
nop
mov
out
push
out
jno
push
test
pusha
mov
push
push
fbstp
std
mov
mov
pop
testb
dec
pop
aas
cld
test
mov
jb
fwait
movsl
cltd
mov
xor
int3
or
push
iret
cltd
mov
mov
mov
cltd
rorl
push
fsubs
sub
jg
ds
or
rcrb
or
cmpsl
jl
add
cmp
orb
loopne
dec
dec
enter
hlt
in
repnz
adc
add
inc
dec
xor
addr16
inc
dec
cmp
adc
mov
xor
xchg
pushf
gs
xlat
mov
data16
and
sti
push
maxps
jge
cmp
pop
cmp
mov
iret
mov
inc
mov
divb
pop
push
into
fabs
loop
sti
mov
jb
xor
xchg
sub
pop
mov
mov
and
addr16
call
mov
lret
das
lods
es
mov
and
in
pop
cmc
add
xchg
pop
pushf
mov
sarb
or
xchg
sti
out
rorb
push
ljmp
sub
aaa
roll
sti
mov
rcll
xchg
lret
inc
dec
add
fsubrs
int
push
pop
pop
pop
pop
jb
adc
add
lret
cmc
pop
mov
daa
sbb
popa
or
mov
rorb
and
sbb
and
mov
cmpb
mov
aas
mov
fdiv
xor
add
lock
iret
dec
mov
cmp
dec
xchg
jae
mov
jp
movb
jno
mov
and
fs
ss
test
ja
ss
sub
mov
xchg
mov
mov
and
mov
push
ljmp
shll
das
stc
add
sbb
adc
test
ror
filds
cmp
push
sbb
push
out
pop
and
std
jge
inc
cmp
mov
in
cmc
les
mov
dec
fildll
pusha
gs
into
inc
adc
adc
repz
dec
jns
inc
xor
fwait
movsl
scas
fstps
push
and
jmp
data16
pop
call
jne
dec
movsl
cmp
fchs
mov
pushf
lret
mov
imul
or
mov
adc
mov
pop
pop
packssdw
rcr
dec
mov
clc
push
popf
jge
jne
rcr
jecxz
sti
cwtl
or
push
jmp
mov
sbbl
jne
dec
loopne
pavgb
enter
pushf
imul
insl
cmc
cltd
movsl
test
push
sbb
shll
push
mov
iret
cmc
dec
push
mov
and
test
shlb
xor
push
pop
dec
sti
mov
les
jns
popf
ss
push
adc
sub
loope
add
js
loopne
mov
sub
mov
jnp
mov
ss
jno
cmp
and
xchg
popa
imul
std
jmpw
mov
movsb
add
jne
je
dec
sbb
xchg
pop
out
cmp
mov
mov
mov
nopl
mov
mov
inc
xor
push
mov
addr16
int
sahf
test
cli
iret
idivb
jo
inc
push
xchg
xchg
add
push
dec
mov
add
cmp
testl
xchg
xchg
lret
cli
cmp
sub
repnz
negb
xchg
dec
stc
add
mov
movsb
jp
movsl
scas
mov
and
pop
lock
push
push
lret
and
xor
and
fdivrs
daa
jns
aad
jmp
in
popf
movsl
or
push
sbb
inc
xor
ret
or
aam
xor
dec
enter
cmp
lock
mov
mov
jmp
aad
das
cmp
dec
mov
lods
jne
xor
cmp
inc
mov
push
mov
jge
aad
cltd
les
sar
scas
mov
popa
insl
pop
push
jg
xor
lds
stc
sbb
es
cmp
out
scas
scas
mov
jmp
ficoml
xchg
outsb
cmp
cld
js
xor
or
into
test
mov
in
frstor
add
mov
inc
jb
pop
sbb
ret
mov
fs
push
mov
xchg
popf
mov
cmp
xchg
mov
rcr
divl
imul
loop
sbb
push
sbb
sbb
mov
and
inc
pushf
or
pop
addr16
mulb
push
loope
mov
aam
ret
addr16
push
decb
mov
xchg
ret
inc
push
scas
inc
or
sbb
jne
enter
pop
out
outsb
add
repz
int3
pop
fsubl
sbb
sbb
cmp
pop
xchg
jmp
inc
dec
lret
or
and
xor
or
jmp
dec
insb
sub
popf
aad
mov
nop
ljmp
jae
pop
cmc
stc
sub
mov
decl
adc
mov
ss
je
insl
add
les
shll
call
sbb
std
inc
daa
xor
adc
cmpsl
jne
or
mov
xor
sub
ja
dec
lcall
jno
mov
mov
inc
movsl
pop
push
pop
push
push
mov
test
lahf
lock
lds
and
xchg
pushf
add
pop
addr16
inc
dec
push
out
push
pop
xchg
les
or
pop
cltd
cltd
lods
sub
inc
adc
into
loopne
outsb
ret
loope
cmc
sahf
stos
or
test
testb
aas
lret
aad
jmp
sbb
sbb
out
arpl
mov
mov
add
cltd
jmp
fisubs
inc
cld
inc
in
idivb
mov
leave
cmpl
lcall
dec
xchg
fwait
add
mov
adc
clc
cs
sbb
xchg
sub
jae
fs
inc
lods
jnp
and
sub
sti
and
loopne
push
movsl
scas
mov
sub
mov
in
or
sub
xchg
iret
mov
movsb
sbb
lock
jecxz
mov
ss
hlt
pushl
fcompl
test
gs
mov
or
popf
cmpsb
or
jno
xor
cltd
mov
aad
jmp
shll
ss
ret
pop
ja
xor
fisubl
loopne
mov
mov
add
jnp
mulb
ror
popf
movsb
test
inc
cli
xchg
scas
adc
jne
xor
add
jb
imul
test
sub
jmp
jo
dec
loop
outsl
mov
cmp
daa
icebp
sti
mov
adc
or
jge
bound
and
ret
fs
mov
decl
sarb
cs
adc
push
pusha
push
push
push
sub
adc
jbe
iret
mov
sti
sub
enter
pop
aam
test
das
push
sbb
rcrb
push
adc
and
inc
loop
cmpb
or
aas
push
ret
push
or
enter
push
dec
add
js
cmp
jae
inc
xchg
fwait
movsl
iret
jle
int
fildll
sub
jno
push
sbb
lds
xor
jns
scas
ss
pop
and
jmp
cmp
scas
mov
outsl
mov
stos
sti
mov
mov
inc
ficompl
dec
js
mov
and
dec
mov
fsub
lock
jne
mov
push
jl
jl
and
xlat
jnp
or
xor
or
add
jg
loop
pusha
xchg
stos
mov
jg
mov
lea
hlt
inc
mov
pop
imul
insb
xchg
je
in
dec
push
int3
mov
sbb
in
popa
mov
dec
adc
xchg
loop
mov
jmp
mov
jae
inc
push
dec
and
cli
popa
lods
mov
xchg
int
mov
push
xchg
mov
mov
or
lea
fadd
pop
lret
sbb
mov
jae
fiadds
test
arpl
pop
movsl
orl
ds
addr16
cmp
jbe
data16
xchg
jp
into
out
lock
adc
int
jmp
nop
arpl
in
inc
xchg
mov
xlat
xlat
aad
cmc
sahf
stos
adc
addr16
test
imul
xchg
jnp
pop
push
sbb
ss
jb
cmpsl
aas
xchg
iret
out
clc
add
inc
std
movsl
mov
pop
jp
push
inc
push
sub
pop
sub
insb
jecxz
sub
xor
xchg
add
mov
cmp
orl
jle
sub
into
xchg
arpl
cmp
inc
dec
push
in
cmp
pop
pop
outsb
dec
cwtl
je
jbe
int3
inc
cmp
cmp
ja
dec
andb
lcall
and
inc
cli
xor
mov
push
mov
outsb
test
scas
call
pop
addr16
add
lret
cmpsb
filds
jge
push
sbb
ret
jb
insl
es
testl
jbe
repz
dec
pop
mov
pop
push
not
mov
inc
cmpsl
fdivrp
pop
movb
add
or
dec
aad
dec
and
push
jnp
cmp
jg
ds
push
and
orb
sbbb
sbb
in
jns
push
repnz
loop
pop
xchg
fwait
bound
popa
jmp
mov
enter
fldenv
xor
jbe
mov
mov
fucom
xchg
cs
adc
or
shlb
mov
je
hlt
xor
push
cmpsb
jae
pop
aaa
inc
mov
and
sbbb
push
popa
imul
mov
add
jb
shlb
xor
sbb
out
loop
push
out
cmp
cmp
adc
adc
test
in
xchg
pushf
loop
popa
ja
sub
pop
cwtl
xor
sbb
adc
xor
insl
sub
inc
mov
icebp
cmp
mov
daa
xor
fdiv
cmp
lods
mov
push
aad
ja
dec
enter
movsl
lock
mov
sbb
mov
rcr
test
lret
cmpsl
mov
xchg
in
xchg
pop
cmp
daa
pop
xchg
mov
adc
shl
clc
jmp
and
sbb
xor
push
pop
or
pop
or
inc
mov
cli
cld
stc
clc
mov
or
addr16
and
insb
ret
lds
pop
pushf
or
sub
rcr
inc
sbbb
inc
or
cwtl
sub
inc
rorb
loope
mov
add
sbb
pushl
jmp
and
xchg
int
mov
xchg
rcrb
pop
jnp
iret
insb
stos
imul
xchg
sub
fcmovnbe
test
mov
adc
adc
pusha
push
adc
xor
jg
lcall
push
fwait
mov
lahf
jp
pop
xor
loopne
push
dec
test
cmc
incl
mov
popl
lret
xchg
mov
push
sbb
in
mov
lret
dec
xchg
pop
pop
xchg
cs
add
imul
pop
jg
out
cmp
cmc
mov
pushf
mov
mov
rorl
repnz
fadds
push
outsl
mov
cmpsb
inc
jno
cmc
mov
notb
and
cmp
pop
dec
out
pop
loope
out
out
testl
xor
push
pop
xchg
je
int
mov
adc
inc
pop
arpl
insl
jecxz
mov
xchg
cmpsl
mov
int3
lds
cmpsb
in
xchg
sbb
sbb
inc
cmp
or
data16
rcr
mov
xlat
fdiv
popf
adc
xor
jge
jg
xchg
sub
fmuls
xchg
clc
sub
push
lds
lcall
lds
or
xor
stc
movswl
das
test
pop
lahf
ror
je
push
mov
sarl
xor
fisubrs
outsl
cltd
and
mull
or
xor
popf
adc
jo
adc
hlt
pop
mov
cmp
mov
out
inc
dec
sbb
cli
inc
outsb
dec
imul
insb
jno
and
cmp
mov
pop
push
in
push
nop
cmpsb
mov
xor
out
rcll
sub
cmpsl
mov
pop
push
lahf
inc
dec
jp
mov
or
orb
and
and
popa
push
orb
stos
enter
jne
clc
push
sbb
xlat
jl
iret
sbb
ss
call
popf
ja
cmp
in
or
aas
dec
sahf
decb
cmp
cltd
pop
dec
xor
mov
fadds
loope
daa
scas
push
dec
push
andb
ljmp
sbb
dec
pop
aas
enter
in
inc
cs
lret
aad
xchg
loope
mov
cld
xlat
jecxz
movsl
or
popa
imul
out
data16
mov
add
lret
push
xor
sbb
jp
stc
cmpsl
xchg
mov
xchg
jmp
decb
adc
pop
testl
xor
rolb
dec
sub
add
push
push
add
xchg
mov
icebp
int3
lds
call
sbb
cmp
mov
mov
pop
fcomip
sarl
adc
mov
imul
dec
shl
xor
add
jb
pop
cmp
xor
jle
stos
mov
ret
int
lret
imul
mov
push
jno
call
mov
pushf
orb
fisttps
xchg
clc
sub
push
jecxz
ja
inc
idiv
addr16
cmp
int
sub
ds
mov
call
pop
dec
popf
pop
std
sbb
mov
mov
dec
mov
enter
fildll
push
xor
fwait
in
es
jp
push
inc
ss
sub
jbe
mov
movhps
mov
sub
xchg
imul
aas
stos
icebp
decl
ja
test
sub
add
push
push
pop
xchg
fsub
shrl
sbb
inc
mov
dec
inc
jo
pusha
fwait
mov
stos
loope
or
enter
push
xor
daa
push
flds
xchg
mov
aaa
fwait
shl
cli
out
xlat
push
sub
mov
jb
call
sbb
iret
in
fsubs
or
sub
dec
aam
jns
cltd
xchg
mov
scas
xor
aam
sbb
inc
dec
scas
pop
popf
out
insl
testl
popf
in
and
xchg
adc
mov
es
jnp
icebp
cli
dec
xchg
mov
sahf
ss
repz
into
clc
and
dec
push
mov
sub
pop
out
mov
mov
mov
out
in
adc
into
inc
inc
inc
jne
pusha
test
enter
iret
pop
mov
xlat
loope
adc
cmp
fwait
or
jge
cmp
jo
in
clc
sub
sub
popa
imul
int3
loop
pop
rol
add
push
ror
cmp
imul
testb
sub
sbb
cmp
imul
pand
nopl
dec
daa
jp
sahf
or
mov
stc
add
lret
call
add
jnp
sub
pusha
push
movsb
das
adc
repz
leave
or
enter
push
orl
mov
int
adc
ds
mov
sub
pop
fdivrs
jge
lods
sbb
pop
push
mov
cmc
sbb
mov
jmp
mov
mov
push
lret
and
pop
mov
out
cmp
push
mov
sarl
mov
add
icebp
cmp
jecxz
inc
outsb
dec
imul
std
adc
mov
pop
cmpsl
std
push
pusha
push
jae
jns
pop
popl
xchg
xchg
inc
and
gs
jmp
in
jo
es
nop
mov
xchg
fidivrs
fsub
pop
xchg
push
fnstenv
sbb
jge
xchg
popf
dec
test
sti
mov
jb
xor
iret
sub
je
and
xlat
insb
sub
and
cmp
repz
rcrl
je
shrb
sub
push
test
jl
and
or
jnp
arpl
hlt
mov
mov
movb
dec
cmp
js
push
aaa
jno
jle,pt
lahf
sarl
or
inc
aad
and
inc
outsb
cltd
pop
inc
cwtl
cmp
push
or
repz
pop
scas
mov
insl
adc
mov
mov
pop
stos
inc
nopl
scas
mull
adc
divl
dec
inc
data16
push
outsl
call
inc
movsb
out
mulb
cmp
pushf
cmpsb
addr16
mov
pop
mov
inc
rclb
mov
mov
push
sbb
sbb
cmp
mov
mov
cmpsl
rcrl
dec
sbb
xor
cmp
out
dec
jmp
push
gs
mov
les
xor
and
jnp
cmp
mov
div
cmpsb
push
mov
loop
push
out
ss
aam
push
roll
imul
mov
jle
jne
dec
push
mov
push
fs
sub
insl
repz
mov
sbb
sbb
imul
lret
push
ja
inc
nop
pusha
in
test
mov
scas
call
push
xchg
mov
stos
sbb
cmpsb
push
add
sbb
fsubrl
sbb
int
loope
mov
mov
js
dec
push
shll
jle
push
pop
and
xchg
xor
add
rcrb
mov
test
pop
lret
es
fwait
mov
mov
mov
and
cmp
or
or
xor
mov
mov
jp
shll
call
loop
inc
sbb
std
sarl
or
in
scas
add
inc
ficoml
out
ljmp
push
pop
mov
sbb
or
repnz
add
das
jge
sbb
mov
jmp
push
sub
lret
push
mov
rcr
and
sbb
sahf
sti
aaa
outsl
mov
push
mov
jge
pop
imul
pop
les
scas
test
mov
popf
xor
push
mov
rolb
cs
inc
xchg
fwait
add
orb
or
cli
xchg
fdivrl
dec
push
icebp
jae
fistpll
rcrb
outsb
cmpsl
in
stos
jg
cltd
jecxz
mov
jae
pop
xchg
clc
push
out
mov
cmc
xchg
outsl
jne
xor
es
sbbl
push
cmpsl
jp
movsl
sbb
push
in
sub
addps
xchg
and
push
cs
pop
addr16
inc
test
pusha
mov
push
int
inc
mov
pop
push
movb
mov
nop
adc
dec
xchg
mov
mov
cmc
cmc
repz
mov
pop
mov
aad
pop
movsb
negl
xchg
loope
push
popa
imul
lret
test
push
rcr
in
mov
xchg
lret
cmc
jmp
mov
cmp
and
mov
icebp
sti
xchg
loopne
ljmp
dec
cmp
pop
or
mov
pop
scas
inc
adc
and
call
sub
std
push
lock
jno
fwait
push
jbe
insl
ss
dec
fisubrl
xor
scas
push
push
xlat
loope
sub
mov
mov
pop
arpl
dec
cmp
push
jmp
mov
and
shll
inc
sub
push
inc
dec
push
call
jge
xchg
and
sbbl
out
push
pop
shrl
xor
inc
cmpl
loop
in
or
mov
push
in
and
outsb
test
scas
mov
jmp
mov
xor
adc
add
dec
or
call
mov
add
sub
sbb
in
test
jp
push
sbb
mov
cmc
mov
repz
jp
arpl
push
pushf
stos
mov
test
sti
aaa
inc
or
les
addr16
dec
mull
adc
sahf
xchg
sub
mov
mov
xor
aaa
shll
insb
jle
push
outsb
sub
fsub
jno
push
or
popf
dec
clc
add
lods
pop
shl
enter
jbe
test
imul
cmpsb
lahf
adc
and
cmp
dec
stc
add
enter
mov
out
sub
mov
mov
xor
push
jno
jl
dec
imul
aas
lods
loopne
cmp
xor
jne
aad
mov
test
into
sbb
adc
repnz
dec
inc
dec
pop
imul
insl
xchg
loope
out
stos
in
inc
sarb
inc
sbb
mov
xchg
mov
shl
enter
sbb
push
sub
shr
cmp
out
fs
fldenv
ds
sbb
dec
dec
or
adc
rcr
dec
mov
sti
sbb
out
and
aad
inc
and
out
push
mov
adc
mov
sbb
cltd
cld
inc
push
pusha
rcr
cmp
pushf
jg
pop
test
pop
std
cltd
jecxz
call
int3
aam
jnp
fwait
jp
sbb
mov
or
call
dec
inc
out
mull
mov
popf
jl
aad
mov
out
add
dec
es
aam
cmpsl
xchg
sahf
jge
cmp
mov
sub
addr16
fidivrl
test
pushf
enter
gs
ja
sub
movsl
repnz
pop
push
pop
mov
jno
mov
js
xorb
adc
test
jl
sub
xchg
into
rorb
enter
jmp
mov
dec
clc
add
imul
xor
sbb
les
push
imul
icebp
pop
xchg
int
sbb
inc
dec
cmp
push
loopne
test
xchg
or
call
push
pusha
push
adc
dec
push
popa
lea
ja
into
fadds
mov
xchg
ss
lods
mov
sub
cmp
scas
mov
lods
mov
insb
int3
adc
xor
shrl
or
mov
add
sti
lret
getsec
ret
jl
hlt
insb
addr16
fwait
es
in
push
arpl
pushf
imull
xor
push
pusha
nop
sbb
aad
dec
hlt
jg
mov
inc
mov
adc
xor
scas
mov
scas
mov
sub
sbb
loopne
cltd
add
xchg
mov
movsl
pop
pop
adc
mov
add
sub
out
pop
arpl
out
dec
bound
negl
jp
andb
mov
xchg
cmp
add
sub
push
stc
sub
inc
xchg
sbb
test
mov
add
add
sub
push
mov
pop
mov
jg
xchg
fdivs
xchg
lret
std
add
or
jecxz
std
inc
push
out
xchg
mov
or
repnz
mov
popa
cmp
mov
test
cli
xchg
into
sbb
push
adc
inc
add
out
mov
insb
frstpm(287
push
push
mov
xor
or
pop
mov
xchg
fildll
mov
lcall
inc
cmp
adc
int3
test
mov
and
cmp
mov
jo
movsb
cmp
xchg
fistps
mov
lcall
xor
sub
lahf
scas
test
int
jne
ds
sbb
mov
out
cmp
push
adcl
popf
fidivs
lds
test
push
imul
scas
cld
xor
sahf
test
arpl
mov
or
test
pusha
push
jecxz
fs
inc
jle
mov
xorl
scas
cmp
adc
pop
push
incb
bound
int
mov
and
adc
cs
or
mov
add
icebp
test
and
add
dec
push
jg
je
and
xor
out
int
jbe
and
and
xchg
pop
jl
jb
into
mov
into
daa
cwtl
lcall
popa
inc
push
aaa
xchg
imul
scas
arpl
mov
mov
and
sahf
bound
shrb
sti
mov
ds
xor
cmc
push
and
in
stos
push
fucomip
mov
pop
adc
es
nop
dec
imul
aas
mov
inc
lret
pminsw
push
xor
shlb
pop
xchg
fwait
jbe
pop
popf
dec
xlat
loope
mov
lret
rcr
add
cld
pop
sub
addr16
xor
cmpsb
mov
sbb
addr16
mov
stc
jle
test
add
ljmp
xor
sub
ficoms
jnp
mov
inc
cli
out
ss
pop
add
jle
enter
je
add
scas
and
or
mov
dec
daa
out
mov
outsl
bnd
cmp
fidivrs
movsb
cs
mov
ror
sub
jp
mov
mov
xor
sbb
adc
movsl
scas
hlt
js
adc
push
pop
pop
fstpt
dec
pop
out
sub
stos
jmp
sbb
jo
mov
enter
sahf
test
sub
jne
shll
repz
test
jo
inc
sub
mov
mov
bound
pushf
mov
pop
xchg
fwait
movsl
xor
xchg
mov
adc
dec
fbstp
cmp
aas
mov
arpl
inc
icebp
mov
add
inc
dec
xchg
pop
imul
scas
inc
jp
das
cmp
jmp
in
movsl
loopne
xchg
adc
dec
pop
xchg
jmp
adc
push
mov
xchg
es
test
dec
add
das
fimuls
xor
or
fcoms
xor
add
inc
aad
add
aaa
ror
scas
pop
jo
or
enter
add
mov
cmp
sub
jns
ljmp
xor
loop
out
daa
rcr
and
cltd
mov
xchg
fbstp
test
add
in
dec
iret
and
xchg
sahf
push
and
dec
xlat
iret
aam
jmp
xchg
lahf
out
cmp
jns
jae,pn
out
mov
sub
cmp
aaa
dec
inc
xchg
xor
dec
xchg
js
push
lods
xchg
add
add
sti
inc
sub
addr16
pop
push
scas
and
xchg
lret
xchg
and
push
loope
mov
daa
xor
adc
sub
ja
es
xor
hlt
pop
out
inc
jmp
ss
jb
dec
hlt
cld
pop
cs
movsb
ficoml
int
jle
mov
dec
and
jmp
jl
fs
adc
pop
push
jne
scas
ss
clc
hlt
mov
xor
scas
mov
gs
loopne
pop
mov
xchg
pop
addr16
xchg
dec
pop
inc
mov
xchg
sbb
repnz
sbb
push
pushf
es
jo
fwait
movsl
aaa
clc
jnp
adc
icebp
fsubl
and
jg
and
loope
mov
scas
fldl
adc
and
in
sbb
cmp
les
or
xchg
mov
inc
xor
and
ficoml
dec
xchg
and
xor
shlb
test
inc
jmp
or
jae
inc
ret
cld
ucomiss
jmp
lcall
pusha
iret
pop
arpl
inc
out
testl
aas
dec
cwtl
jns
push
icebp
test
aaa
adc
sbb
push
jg
jbe
mov
cmp
stc
add
jp
into
push
out
sub
and
sub
push
pop
or
xchg
fwait
pop
into
mov
lock
pop
push
inc
insl
adc
loopne
mov
or
repnz
or
pop
idivb
push
xchg
mov
lds
jnp
xchg
fucomip
es
xchg
or
gs
andb
mov
clc
add
shl
jmp
mov
in
and
jg
sbb
rcr
out
mov
clc
cltd
loopne
in
cmpsb
push
ret
jge
xchg
insb
add
xor
ficoml
xchg
mov
inc
dec
fbld
or
out
sub
adc
pusha
stos
loop
push
mov
add
adc
inc
push
mull
cmp
lret
xchg
sbb
pop
pop
push
xor
int3
jno
icebp
stos
out
movsl
sti
xchg
mov
dec
pop
lock
fisubrs
adc
dec
frstpm(287
ret
stc
test
clc
das
call
pop
addr16
setns
mov
pop
and
scas
ss
fwait
cltd
dec
in
loopne
nop
lcall
loopne
leave
mov
idivl
ficoml
aas
enter
mov
sahf
add
sub
aam
repz
cmp
jl
sbb
lods
clc
xchg
ret
sbb
adc
daa
loop
dec
stc
sbb
jg
frstor
jle
push
hlt
test
aaa
xchg
pop
movsl
dec
jp
addr16
loope
scas
mov
push
in
or
cmp
mov
xchg
popf
cmpsl
rorl
testl
shrb
jmp
gs
push
stos
fstl
sub
sbb
mov
inc
dec
stc
jae
cmp
test
sub
and
outsb
sub
fsubrl
cmp
scas
inc
ret
pop
xlat
insb
call
pop
addr16
jnp
push
xor
inc
jp
insl
cmpsb
push
pop
ficoml
pop
int
pop
sub
jbe
pop
imul
and
loope
jmp
push
mov
cmpsl
jno
dec
push
gs
sub
std
call
cmp
pop
and
xchg
bound
outsl
mov
add
lret
cmc
adc
inc
fidivl
imul
sti
add
mov
dec
es
rolb
xchg
subb
or
sbb
in
xchg
cmp
push
cmp
dec
es
and
push
iret
stc
mov
mov
dec
adc
cltd
push
std
push
jg
ret
int
mov
sub
test
shrb
ja
dec
xlat
pusha
push
jle
aaa
lods
in
cli
fnstsw
and
dec
cld
mov
xchg
cmp
hlt
add
mov
push
mov
dec
jbe
pop
je
aad
mov
jns
das
ss
pop
add
xor
adc
loopne
hlt
pusha
rcll
sbb
addr16
mov
stos
icebp
stos
push
insl
fsts
inc
push
fs
ss
push
cltd
or
shrb
stos
testl
xor
dec
popa
mov
lock
lods
dec
jne
jg
mov
cld
sti
add
aaa
inc
scas
mov
push
stc
je
mov
imul
fcmove
mov
scas
clc
and
sbb
dec
add
cmp
into
aas
dec
ret
push
stc
jle
testl
bnd
pushf
sub
int
scas
fnstcw
add
cmp
add
inc
fninit
inc
adc
xchg
xchg
scas
cmpsl
rorl
jno
add
aaa
push
xor
imulb
jae
je
shll
rorb
sbb
test
cmp
jle
arpl
into
fsubs
sub
sar
inc
jne
pop
xchg
sub
clc
in
push
and
mov
icebp
cmp
jp
push
js
push
test
mov
lods
iret
std
jg
cmpsl
adc
imul
and
inc
rcr
scas
nop
lods
int
jne
xor
dec
sbb
mov
out
cmp
pop
clc
imul
sti
add
mov
dec
es
rolb
xchg
subb
or
sbb
in
xchg
mov
push
cli
push
cmp
mov
into
fsub
and
jecxz
mov
lret
xchg
and
mov
or
sbb
adc
cmp
orl
mov
aad
jge
insb
ss
and
mov
repz
pop
lods
mov
ljmp
xchg
or
addr16
test
inc
mov
aad
test
iret
les
repnz
ss
pop
add
pop
repnz
jae
push
jle
inc
mov
orb
into
inc
add
cltd
dec
xchg
movl
sbb
push
popa
repnz
out
inc
xchg
sahf
test
dec
cmp
xchg
scas
mov
push
icebp
mov
cmp
loopne
loop
stos
xchg
and
push
fucom
mov
jo
pop
and
insb
es
lcall
or
mov
push
rorl
in
test
xlat
sub
mov
pop
into
fcomps
fnstenv
das
es
inc
cmp
scas
mov
insb
mov
mov
cld
rcr
movsl
and
add
test
inc
mov
sbb
ljmp
aaa
inc
imul
adc
xchg
repz
in
fsub
mov
movb
pop
or
lret
aad
mov
sbb
scas
sti
dec
jmp
inc
and
or
arpl
int3
test
xlat
orb
push
push
add
add
push
into
push
adc
ljmp
xor
push
adc
nop
fwait
lds
pop
sub
repz
data16
out
pop
or
jle
xor
leave
bound
push
jae
aas
sbb
mov
test
push
sbb
pop
cmpsl
and
pusha
push
jecxz
aad
cmpsb
xchg
daa
ja
fsub
mov
insb
lods
push
and
mov
pop
adc
pop
gs
cmp
mov
inc
mov
enter
push
xor
sub
cs
daa
sub
je
pop
cmpl
sar
push
icebp
test
aaa
push
sahf
dec
scas
or
mov
pusha
ficoml
and
push
out
sbbb
movb
pop
or
lret
aad
xchg
and
into
clc
xlat
repz
cltd
adc
int
mov
mov
xchg
mov
mov
mov
sbb
outsb
js
sub
fsubrp
repz
rcr
jae
xchg
stc
dec
push
popa
sub
loope
rcrl
jge
in
mov
jne
mov
popf
adc
int
mov
push
test
mov
cs
ret
in
es
mov
test
pop
rclb
add
icebp
shrl
rcr
push
mov
repz
popf
mov
jecxz
mov
push
ficomps
fwait
movsl
test
movsb
push
loope
lret
jmp
pop
fistps
and
sub
test
loope
lock
lcall
dec
push
aaa
xor
add
incb
xorl
dec
or
into
out
adc
mov
pop
or
push
les
xchg
or
push
pop
push
mov
pop
push
loopne
mov
sub
addr16
cli
ss
xor
mov
outsb
jl
add
pop
fsubl
sbb
enter
push
mov
jmp
lret
call
clc
pop
jg
jae
push
xchg
cld
cmpsl
cmp
loop
loopne
lret
jmp
je
push
xchg
loope
mov
aad
mov
loopne
inc
mov
pop
ret
jb
test
mov
je
or
ror
out
xchg
cwtl
mov
xchg
or
iret
jmp
int
mov
adc
cmp
iret
xchg
xor
dec
mov
jo
jmp
sti
and
or
in
push
push
cmp
arpl
sbb
in
mov
push
lcall
or
mov
test
subb
jle
loope
aad
scas
lods
insl
cld
jle
cmc
ret
xor
cmpsb
fistl
and
adc
xor
push
fildl
out
cmp
fisttps
and
pop
xor
sti
xor
fld
jge
fistps
sti
and
push
orl
fs
xchg
xchg
xchg
cltd
je
lds
mov
repz
out
and
inc
push
pop
pop
or
sahf
mov
lcall
xor
outsb
mov
sbb
rcll
push
out
daa
jle
or
inc
xor
movsb
dec
js
and
ret
add
xor
mov
inc
jbe
dec
data16
xchg
mov
rorl
das
add
cmp
mov
xchg
out
xchg
mov
mov
sbb
lds
pusha
push
inc
das
arpl
loop
mov
or
sbb
sbb
ljmp
mov
pop
out
test
xor
cmp
aas
adc
es
cvtps2pd
rcrl
dec
ret
adc
rolb
inc
dec
fsubrp
ds
mov
cld
rol
inc
cmp
mov
jmp
ret
jo
jne
imul
jmp
mov
icebp
sti
loop
sbb
jb
sahf
and
pop
imul
mov
cmpsl
pop
les
cmp
adc
mov
js
dec
aaa
and
xchg
gs
jne
sub
loop
iret
mov
int
and
loopne
push
fwait
movsl
scas
mov
shll
xchg
aam
popa
stc
repnz
xlat
lock
lods
xchg
add
adc
jle
xchg
daa
cmpsl
mov
and
pop
cmp
pop
cmp
or
or
adc
cmp
std
add
ror
mov
or
out
int
jnp
push
or
pop
sub
pop
rcrb
or
loopne
xchg
lods
xlat
out
fisttps
pop
in
idivl
dec
push
int
outsb
jle
mov
pop
adc
ljmp
sbb
pop
pop
jb
xor
out
clc
add
pusha
sub
cld
rcrl
mov
das
pop
sbb
lahf
stos
and
loopne
vmovups
xchg
lock
add
jmp
loop
pop
xchg
adc
pop
or
dec
idivb
sub
loop
shlb
sub
adc
jae
sbb
dec
es
loopne
cmc
in
jae
idivb
pop
arpl
out
int3
xchg
mov
push
scas
cmpsl
push
movsl
out
roll
sbb
pusha
test
jle
cs
in
mov
shl
gs
repnz
push
nop
sbb
fsubs
dec
cltd
mov
push
pushf
mov
or
inc
dec
sub
int
jl
nop
arpl
inc
pop
mov
push
mov
pushf
sub
inc
cmp
fisubl
and
jmp
pushf
out
jmp
cltd
fsubs
sub
jmp
pop
test
add
in
stos
lods
scas
in
fisttps
loopne
movsl
mov
xor
push
inc
aaa
sbb
mov
loope
dec
aam
fcmovb
in
aam
or
imul
addr16
iret
call
push
mov
sbb
inc
jg
fs
leave
cmpb
and
or
sar
jge
jp,pt
push
xchg
mov
xchg
lret
aad
int
xor
and
inc
in
inc
jno
jle
or
popf
out
mov
icebp
int
scas
or
jb
inc
xchg
sub
inc
mov
mov
pop
fdiv
aas
rclb
or
dec
clc
inc
push
jl
insl
sbb
mov
aaa
push
test
lret
fisubs
insl
cmp
push
dec
jle
xchg
and
roll
jmp
sahf
mov
fsubl
push
cmovs
xchg
xchg
dec
rcr
cmpsb
lock
add
mov
jmp
jg
out
push
repnz
or
xchg
or
test
cmp
inc
adc
hlt
push
jmp
mov
jno
xchg
scas
mov
dec
adc
sub
xchg
xchg
mov
insl
jno
daa
cmp
or
ljmp
bound
pop
xor
in
mov
ss
pop
mov
inc
bnd
data16
add
jp
mov
ljmp
dec
pop
iret
and
mov
inc
rcr
mov
jge
lods
ss
and
bnd
cmp
imul
dec
rolb
mov
jne
inc
repz
mov
pushf
orb
filds
out
fcmovne
lods
sub
xor
ljmp
ret
inc
mov
and
pop
xchg
mov
pop
add
mov
aad
scas
sahf
sbb
adc
lods
das
out
clc
imul
ss
aad
sahf
and
enter
push
sbb
xchg
ljmp
cmp
lcall
popf
dec
dec
movsb
les
sbb
in
sub
adc
xor
in
andl
clc
test
or
inc
fsubl
mov
jo
arpl
and
sbb
sbb
mov
cld
push
out
mov
jns
add
jne
xor
cmpsl
add
cmp
jecxz
mov
mov
inc
push
sbb
sub
pop
adc
inc
dec
adc
jno
frstpm(287
ret
lahf
sub
xchg
fimuls
jecxz
dec
fcoml
cltd
je
inc
or
mov
lahf
xorb
dec
xor
ds
pop
out
mov
lcall
or
mov
pop
rolb
test
add
aad
pop
mov
sbb
sbb
and
pop
cmp
dec
push
push
lcall
mov
movsl
mov
movsb
jp
push
in
hlt
dec
push
mov
rorb
lds
shrb
inc
sub
pop
jae
xchg
mov
test
adc
clc
cs
or
es
xor
imul
adc
loop
mov
cmp
mov
loopne
fisubl
fwait
loope
mov
call
mov
pusha
xchg
std
pop
hlt
mov
aad
lds
mov
mov
jb
inc
jns
imul
mov
xchg
pop
ss
mov
imul
xchg
sar
mov
sub
out
adc
sub
cmp
sarl
iret
push
rorl
mov
push
icebp
cmp
sbb
stos
xchg
mov
mov
mov
out
sbb
ss
push
sahf
and
nop
sub
mov
add
in
push
div
dec
mov
out
jp
add
jnp
imul
call
iret
sbb
loopne
push
mov
push
jbe
jae
mov
cmc
imul
rcrl
insb
and
lret
sbb
nop
mov
cmp
sahf
hlt
adc
xor
daa
cli
xor
insl
scas
push
fwait
dec
xlat
loope
jnp
out
and
xlat
adc
idivl
mov
test
cli
lds
mov
adc
inc
dec
pop
sub
jns
lret
sahf
fwait
in
leave
in
xlat
call
push
push
push
cmp
pop
jno
mov
cwtl
mov
cmpsb
rcrb
mov
fists
leave
cmp
xchg
xchg
inc
push
mov
loope
stc
and
addr16
inc
add
cltd
dec
dec
cmp
push
ret
xchg
sbb
xchg
inc
dec
push
mov
cmp
mov
rcrb
push
movsl
fucomip
int3
inc
sbb
dec
inc
dec
and
stos
push
xchg
push
rcr
mov
lock
hlt
scas
mov
call
lock
sub
mov
rcrb
nop
stos
in
cs
sbb
push
pusha
sub
les
aaa
or
xchg
inc
into
fsub
xor
and
xchg
dec
adc
pop
adc
dec
xlat
loope
push
cmp
bound
je
sub
iret
scas
cmp
mov
pop
sub
cld
outsb
cs
jns
lahf
test
or
sbb
jb
inc
dec
and
lods
adc
jne
call
add
into
sub
iret
xlat
dec
or
lcall
xlat
aam
cld
cmc
sahf
stos
sbb
addr16
das
jecxz
and
inc
lods
xor
stos
xorl
lea
cmp
jmp
sahf
test
add
movsb
in
clc
lods
scas
push
aad
or
movsl
mov
lock
push
inc
aaa
lcall
popf
fistps
ljmp
mov
cli
mov
jg
xchg
mov
mov
out
pop
add
push
and
cmp
insb
test
lret
add
mov
fildll
xor
ds
scas
mov
lods
push
aam
lods
pop
and
cs
dec
data16
push
mov
shlb
aad
test
pop
push
movzwl
push
push
push
xor
sub
adc
movsl
fldt
stc
mov
idiv
loopne
les
inc
cld
and
je
dec
cmpsl
sar
into
pop
xchg
out
push
inc
idivb
xor
pop
jle
bound
lcall
push
shrb
sbb
rorl
enter
fisttpll
testb
mov
sub
cwtl
lret
xchg
adc
adc
inc
cld
xor
mov
int
popa
addr16
pusha
iret
je
sub
sbb
add
sub
push
xchg
mov
pop
scas
in
call
sub
pop
lea
pop
mov
jno
xlat
bswap
imulb
add
pop
imul
jo
push
cmpb
lret
sahf
call
in
push
sbb
inc
movsb
dec
pop
jle
xchg
mov
sar
loopne
sub
sbb
fistps
inc
jge
enter
in
int
mov
into
mov
add
and
adc
fs
test
arpl
mov
lret
dec
fdiv
cmp
cmpb
mov
cld
cmc
and
stc
cmp
adc
outsb
cmp
push
test
or
cli
sub
sub
mov
adc
sahf
dec
in
mov
lods
jmp
sbb
dec
addr16
loope
lds
cld
pop
testb
stc
and
dec
push
sub
inc
jl
gs
into
xorl
sub
push
pushl
cld
test
dec
jbe
popf
loop
shr
and
imull
adc
addr16
dec
add
stc
xorb
pop
sbb
cwtl
mov
aam
mov
xchg
sbb
and
popa
test
inc
fwait
mov
frstor
dec
add
imul
inc
imul
ret
sti
movsb
lret
mov
jnp,pn
inc
in
lods
cmp
repz
repnz
lret
add
or
scas
dec
je
push
loope
loope
in
mov
lock
movsb
stos
mov
xor
rcrb
mov
jmp
dec
and
js
popa
test
addr16
lret
jne
sub
push
adc
inc
cld
xor
dec
pop
popa
imul
xchg
popf
jmp
rolb
or
sbb
shrb
mov
pop
and
cmpl
hlt
xor
add
lret
and
jbe
ficoml
ss
xor
mov
lcall
in
dec
fidivrl
dec
test
cmpsl
jp
mov
mov
mov
repnz
mull
xor
inc
ss
pop
aaa
mov
fstpl
sti
add
add
xor
test
mov
fcoms
and
loopne
xor
fsts
daa
jl
inc
mov
gs
cmpl
or
dec
pop
adc
push
pusha
imul
mov
fucomi
add
and
cmpl
aas
addr16
dec
push
nop
sub
mov
aaa
lock
hlt
sbb
or
fs
and
ds
jnp
pop
xchg
rep
xor
pop
sbb
and
popa
pop
xchg
jle
push
xchg
mov
mov
mov
sbb
xor
inc
jbe
ljmp
test
out
ret
clc
cmp
adc
sub
add
sar
iret
add
call
fadds
pop
out
xor
pop
sub
mov
or
sbb
pusha
or
jge
xor
addb
sti
add
das
inc
ljmp
mov
movsl
int
stos
imul
cmovp
and
sbb
rcrb
jecxz
inc
jp
into
fstl
pop
push
out
sbb
adc
into
xchg
mov
nop
lods
or
add
clc
and
inc
inc
pop
fs
jbe
xchg
rorl
jle
shr
mov
mov
into
sbb
int
jae
add
jb
push
andb
sbb
repz
adc
pop
sbb
cld
pop
arpl
ds
or
popf
shll
icebp
xchg
stos
xlat
sub
xor
ds
inc
pop
jbe
mov
or
inc
or
cli
iret
and
imul
cltd
outsb
cmpsl
rorl
notl
xor
sbb
pushf
push
sbbb
mov
repnz
mov
xlat
ljmp
push
jmp
cmpsl
push
mov
enter
push
sub
leave
imul
jb
std
sub
mov
cmc
or
sbb
mov
mov
fisttpll
pop
int
or
xchg
dec
pop
xor
adc
cmp
xchg
sbb
jno
pop
ficompl
and
fstl
fsubl
fcoml
gs
cmc
stos
repz
cs
and
push
cmc
and
clc
add
push
dec
pop
pop
or
pop
or
sub
sbb
gs
insl
cmpsb
out
xor
mov
dec
inc
into
testb
clc
mov
ret
repz
dec
fbstp
sub
pop
pop
xchg
push
lahf
lret
bound
lock
repz
inc
je
jbe
sub
aam
cltd
jecxz
ret
cld
inc
fstpl
xor
dec
pusha
fs
jle
arpl
shl
out
sti
add
aaa
daa
lret
sub
jle
movsb
ss
cmp
adc
xor
cmp
dec
xor
scas
pop
mov
in
lds
xchg
repz
and
mov
dec
mov
jbe
pop
aam
pop
imul
mov
push
imul
enter
adc
icebp
push
inc
push
ds
xor
and
sbb
fwait
movsl
scas
in
aam
lret
aad
mov
test
adc
sbb
fsubrl
imul
mov
mov
sbb
aas
dec
pop
pop
mov
sarl
jl
rcr
add
testb
pop
inc
pushl
push
out
sub
inc
jns
push
cmpsl
das
cmpb
testl
ja
inc
repnz
jae
pushf
push
jns
bsf
mov
out
jle
inc
sub
loope
jbe
push
je
pop
jge
adc
ffreep
cs
adc
ljmp
dec
jae
push
adc
scas
push
mov
scas
roll
popf
clc
inc
cmc
push
fsts
cmp
lahf
pop
jmp
fdivl
jmp
push
cmp
jp
xchg
lods
ss
xlat
lret
sbb
or
push
push
pop
xor
inc
dec
xor
jle
jle
mov
into
push
div
add
sbb
sub
cmp
mov
fwait
pop
and
or
and
shrb
jl
push
mov
je
ret
xchg
and
repnz
or
pop
addr16
or
xor
push
xchg
loop
mov
leave
jae
and
add
sbb
cmp
fidivs
pop
mov
fidivrl
dec
pushf
sbb
outsb
sbb
inc
push
js
test
shr
loope
xchg
hlt
cmp
xor
xchg
and
lahf
aaa
mov
out
aas
or
and
jb
mov
sub
jae
sub
pop
mov
and
repnz
jnp
dec
push
xor
dec
mov
dec
out
jnp
sub
inc
inc
add
cld
mov
inc
fists
jae
daa
jnp
loopne
mov
jmp
lock
popf
dec
enter
fisubl
orb
shrb
xchg
sub
popa
stc
sub
sbb
pop
push
ret
inc
mov
imul
xor
adc
es
dec
mov
push
decl
jg
enter
mov
daa
lret
or
mov
xor
pop
xlat
arpl
jnp
cmp
leave
and
jle
and
inc
jp
pop
lods
mov
mov
sub
mov
mov
data16
and
iret
loope
lret
rcrl
adc
jbe
push
insl
lods
lock
push
mov
sub
jl
xor
imull
sbb
out
stc
loopne
adc
fidivl
mov
mov
popa
test
mov
je
in
ss
sub
and
jl
and
js
inc
stos
lahf
cmpb
xor
push
rcrl
dec
push
outsb
or
mov
xchg
rcrl
fwait
loopne
aad
stos
ret
sub
mov
lcall
mov
or
in
mov
sbb
out
add
sbb
lret
rol
inc
test
jle
push
sti
mov
sbb
fdivrl
xchg
fwait
or
mov
imul
cli
fptan
cmp
cld
mov
sti
push
xchg
cmpsb
mov
dec
xchg
popf
inc
mov
enterw
mov
or
inc
mov
mov
das
ss
call
pop
arpl
flds
xchg
mov
rcr
mov
xchg
add
cmp
or
jl
push
pop
imul
hlt
fwait
and
cmc
cs
loop
andl
std
mov
mov
sbb
push
lcall
jbe
and
pop
dec
dec
loopne
addr16
aas
and
push
popa
test
ds
shlb
add
push
jae
dec
pop
dec
dec
or
test
icebp
pop
repnz
test
adc
pop
and
lods
lahf
dec
iret
fnstenv
and
imul
add
int
sahf
test
loop
mov
leave
add
incl
sbbb
aam
sub
loope
xchg
pop
sub
cmp
outsl
stc
ret
int
ret
std
or
fimuls
pop
cmp
clc
add
xor
ficoml
mov
loope
mov
and
sbb
or
fildll
xor
rcrb
jmp
mov
loopne
cmp
pushf
dec
push
ret
sbb
popf
movsl
repnz
pop
push
lcall
mov
scas
mov
cmc
sahf
stos
add
addr16
dec
scas
jecxz
dec
mov
xchg
xchg
fucomip
repz
cmpsl
sub
pop
pop
popa
imul
mov
xchg
xor
cltd
enter
pushf
scas
mov
in
add
mov
shll
nopl
scas
repnz
adc
jb
shll
jmp
aam
adc
and
jmp
bound
inc
xlat
and
mov
sub
loop
lret
addr16
nop
sub
and
call
dec
mov
xchg
pop
cmc
in
mov
call
mov
sbb
jno
aaa
mov
cli
adc
bound
into
lds
into
sub
popa
xchg
sbb
frstpm(287
int
lret
int3
pop
and
pop
addr16
fadds
cltd
mov
adc
jmp
test
or
and
nop
lcall
xchg
mov
xchg
pushf
or
sub
or
and
mov
and
ljmp
pop
pop
dec
mov
jg
dec
mov
mov
repz
daa
mov
das
jp
inc
adcl
or
enter
dec
mov
nopl
mov
or
push
outsb
push
mov
iret
cld
orb
addr16
and
or
sbb
loopne
pop
xor
icebp
jp
jne
sub
mov
pop
repnz
mov
sbb
jge
data16
add
ret
int
mov
les
leave
sarb
cmp
daa
orl
mov
lds
jge
in
ss
adc
and
sahf
test
sbb
test
data16
sub
jne
inc
add
aas
fucomip
repz
pop
popf
cld
lds
xor
ja
push
pop
mov
popf
data16
sbb
ds
pop
mov
pushf
jb
aad
mov
adc
xor
fdivl
pusha
shll
pusha
sub
scas
cmp
or
lcall
sub
adc
dec
fucom
dec
sahf
iret
sbb
sub
pop
imul
scas
ret
test
fcomps
lea
and
popf
call
cmp
dec
or
jne
loop
push
lds
std
hlt
cmp
or
sbb
jge
xchg
and
lret
test
bound
mov
cmp
das
dec
xchg
mov
in
dec
push
movsl
ret
push
sbb
fwait
loope
dec
push
and
dec
push
pop
mov
push
xor
mov
sub
shlb
push
mov
sub
dec
hlt
jns
popf
ss
xor
ret
sub
xchg
ret
push
mov
or
repz
pop
je
pop
out
push
mov
inc
fucomip
xchg
pop
rcrl
and
sbb
jne
jmp
or
jnp
out
clc
in
scas
jmp
dec
adc
test
shrl
loope
lret
nopl
loopne
adc
arpl
sub
insl
jno
out
cmp
sub
imul
cmpsb
mov
or
addr16
mov
repz
add
jge
dec
orl
xchg
jns
dec
lret
repnz
adc
daa
orl
mov
iret
out
hlt
icebp
cltd
movsl
notb
pop
push
pop
imul
ss
sub
cld
dec
lods
add
jno
test
dec
inc
mov
pushf
cmpsb
mov
mov
xor
add
das
adc
pop
and
scas
or
jmp
pushf
repnz
jno
sub
fs
xchg
ret
stos
jg
iret
enter
out
cmp
add
sbb
pop
inc
repz
sti
into
lret
and
pop
fcoml
xchg
mov
imul
aam
cmpsl
push
pop
rcr
and
out
cmp
sbb
or
xor
loop
insb
adc
mov
fsubl
cmp
add
jbe
repnz
ret
lcall
push
in
fstl
or
cmc
lret
add
stos
cmpl
cmc
aam
clc
inc
test
rcr
mov
icebp
mov
inc
xlat
fwait
push
mov
xchg
scas
cli
add
mov
mov
arpl
insb
imul
in
lahf
dec
das
xchg
fidivrs
fnstenv
xor
std
add
ror
mov
or
cwtl
mov
cltd
adc
popa
inc
cmp
pcmpgtd
test
push
xlat
mov
adc
cmp
lock
pop
lods
mov
jb
cmc
push
test
test
mov
and
inc
fldl
xor
mov
mov
and
cmp
sub
repz
repnz
xor
enter
icebp
sti
add
hlt
mov
xchg
sbb
dec
push
dec
pop
pop
or
mov
push
mov
mov
add
push
push
push
ss
fcom
pop
push
outsb
mov
or
sub
cmp
jmp
jmp
fsubl
xor
lret
add
jns
loop
int
pusha
je
xchg
mov
or
lret
call
sbb
movsl
push
in
int
push
loope
xor
daa
jno
push
repz
cmp
loop
sub
inc
dec
sub
idiv
cmp
test
enter
cli
or
sub
pop
sbb
pop
sub
sbb
fistpll
ret
sbb
fcmovbe
fcmove
sbb
mov
sahf
repz
pop
xchg
das
mov
shrl
adc
sbb
orb
test
push
aaa
adc
jecxz
jmp
mull
jbe
sub
les
movsb
out
sbb
adc
stc
add
mov
nop
cmp
in
orb
int3
aam
xchg
fwait
jp
bound
scas
mov
repnz
adc
adc
sbb
mov
cmp
push
mov
mov
jecxz
aaa
inc
cmp
imul
in
lahf
dec
scas
xchg
fidivrs
mov
ficoml
push
pushf
jmp
sbb
movsl
in
fldenv
pop
leave
xor
nop
add
pop
js
int3
lahf
push
mov
or
mov
icebp
cmp
push
and
inc
or
and
mov
jae
rcrb
sbb
inc
dec
push
xlat
ud2
test
cmp
mov
xchg
mov
loope
add
movsl
mov
fidivrs
push
inc
push
sub
jbe
mov
psubusw
daa
sub
ljmp
xor
ficoml
xchg
mov
inc
or
push
pop
add
fs
into
mov
ret
push
scas
sbb
sbb
inc
xchg
clc
pop
push
ret
int
xchg
xchg
pop
shl
call
mov
cvttps2pi
pusha
inc
add
inc
xchg
addl
sbb
sbb
mov
xchg
and
mov
lock
cs
xor
test
mov
ss
pop
jmp
and
addr16
shrb
push
adc
adc
loopne
ret
orl
fisubs
scas
xor
add
push
push
fstl
enter
fdivrl
dec
in
imul
and
popa
in
cltd
fwait
push
lret
push
mov
xchg
or
or
fsubrl
imul
lds
adc
and
daa
push
pop
aad
loopne
out
pop
xchg
nop
adc
adc
addr16
sbb
jne
sub
pop
iret
sbb
das
add
inc
cmp
scas
mov
insb
mov
mov
fwait
add
sub
xor
mov
stos
push
stos
xchg
popf
sbb
sbb
sub
fisubrl
mov
mov
fdivp
repnz
push
adc
les
mov
daa
xchg
pop
xchg
fildll
lahf
sbb
addr16
jmp
movsb
jl
push
dec
push
mov
mov
xchg
ror
push
or
incl
lea
sbb
test
sahf
orl
cli
mov
out
push
in
dec
push
pop
sti
and
rcr
rorl
xchg
ds
and
test
mov
xchg
popf
aad
stos
jl
sbb
jb
cmp
add
pop
bound
jp
mov
aas
cwtl
insl
decl
in
in
mov
enter
or
les
sbbb
sub
negl
jae
push
mov
insb
inc
inc
or
test
cmovg
sti
dec
mov
ret
mov
sub
lret
call
mov
inc
mov
imul
jo
rcll
mov
pop
jnp
sbb
inc
jle
xchg
fucomip
xchg
addb
inc
sub
pop
jl
nop
adc
dec
xchg
adc
xlat
loope
xchg
in
lods
push
pop
sub
fwait
iret
push
cmp
aad
pop
lds
das
sub
sub
sahf
test
popf
and
xlat
imul
xor
das
mov
pop
cmc
jne
mov
and
add
aaa
inc
xlat
inc
xor
or
lock
stos
sti
or
stos
gs
lds
add
mov
pop
mov
cmp
and
ljmp
cs
cwtl
jmp
loop
aam
daa
xor
mov
sbb
jle
notl
mov
lock
imul
lds
mov
insb
adc
dec
push
pop
lock
dec
sub
jl
push
sub
mov
movb
arpl
mov
pushf
mov
pop
fsubrp
and
aas
sub
or
das
push
jge
sub
ljmp
fldcw
dec
push
sub
cltd
orb
lods
lret
aad
dec
pushf
jmp
jmp
ret
sub
push
test
rcr
pop
xchg
xchg
imul
lock
pop
adc
ret
orb
xlat
cmp
mov
vpcmpeqd
sub
inc
or
sbb
fidivrl
lea
mov
or
sbb
mov
mov
pop
lods
mov
jmp
in
pop
sub
add
inc
lret
xchg
stc
int
les
or
sub
repnz
dec
ljmpw
xchg
mov
mov
out
pop
mov
jnp
aas
adc
sub
jge
rcr
outsb
gs
jb
leave
and
add
ss
jb
dec
cltd
mov
jns,pn
cmpsl
lcall
ss
sbb
xchg
call
hlt
sbb
push
xor
addr16
aas
enter
sti
add
mov
ljmp
lock
mov
dec
ds
jne
scas
scas
lods
ret
int
aad
mov
xor
pop
das
sbb
add
dec
outsb
or
lahf
xchg
mov
ret
adc
sub
pop
imul
insb
pop
jo
mov
or
and
cmp
daa
das
pushl
cmpsb
mov
ret
push
mov
push
jmp
dec
push
inc
lret
xchg
ret
int
cmp
push
lods
aas
adc
push
pop
arpl
ja
mov
xchg
xchg
out
int
jae
pop
sub
push
lds
rcrb
jl
jae
push
in
scas
jle
lods
stos
add
repnz
push
inc
les
lods
test
out
aad
pushf
pop
les
movsl
or
pop
push
fwait
pop
adc
xor
fcomps
jmp
add
adc
sub
mov
sub
aam
mov
sbb
or
dec
mov
lock
stos
ss
push
popa
mov
repz
lock
lcall
push
iret
mov
xor
hlt
add
jns,pn
xchg
jle
outsl
mov
jecxz
jmp
shlb
xchg
das
ret
aas
adc
push
dec
stc
add
mov
pop
jnp
movsl
scas
test
add
stos
mov
push
jae
pop
dec
jg
das
jp
scas
xchg
bound
leave
lret
out
call
sbb
pop
std
push
dec
stc
add
enter
pop
jp
movsl
scas
sti
xlat
je
iret
sbb
decl
mov
dec
and
stc
add
mov
xor
addr16
xor
dec
movsl
pop
cmpsb
mov
mov
fwait
out
ss
pop
cmp
pop
das
cmp
outsl
mov
push
xor
or
stos
cltd
je
sbb
aad
mov
sbb
cli
ljmp
xor
push
sbb
push
mov
and
ret
cmpsl
adc
ljmp
mov
mov
jl
pop
aaa
inc
cs
ret
jge
hlt
aas
add
ret
int
aas
cmpsl
sub
or
orb
push
push
fnstcw
inc
xchg
pushf
jge
pop
mov
push
adc
lods
and
jae
call
sbb
inc
dec
xchg
mov
adc
rcl
push
adc
inc
sbb
jecxz
lea
mov
cmpsl
xchg
mov
pop
in
sti
add
sbb
or
arpl
rcr
mov
mov
test
sub
pop
jmp
cltd
std
inc
pop
ror
cmp
ret
xlat
ss
pop
mov
xchg
add
test
das
mov
adc
dec
addr16
cli
pusha
push
xor
mov
aad
std
pop
xchg
loopne
cli
cs
and
and
inc
aad
icebp
or
rcrb
int
ret
ret
adc
jp
stc
or
aam
fucom
jb
or
sbb
ret
cmc
xchg
inc
mov
lret
sbb
leave
bts
pusha
lret
sbb
mov
into
mov
push
mov
sub
add
push
pop
and
addl
push
jne
and
dec
loope
lret
mov
mov
ja
pop
push
xor
mov
out
rcll
sti
inc
rolb
xchg
mov
add
data16
movsl
jl
mov
mov
stos
repnz
pop
ss
inc
dec
push
pop
sbb
enter
lret
int3
insb
ss
xor
jl
ss
fwait
movsl
dec
pop
mov
xchg
mov
xor
xor
jmp
loop
das
cmp
clc
mov
in
ss
adc
sbb
pop
mov
jae
cld
push
push
and
inc
pop
sub
mov
inc
nop
in
push
lret
adc
add
lret
ljmp
test
sub
fiaddl
mov
add
jmp
icebp
in
adc
mov
fnstcw
mov
and
jge
pop
xorb
loope
cmc
lea
ja
fbstp
inc
and
lds
mov
packssdw
enter
push
sahf
inc
push
sbb
fwait
clc
mov
fisubrs
aad
test
sbb
cwtl
pop
in
int
ret
pop
out
call
pop
addr16
rep
push
pusha
mov
mov
inc
inc
fwait
cmp
push
in
mov
xor
xlat
and
nop
lcall
loopne
pop
fs
and
stc
sahf
stos
out
addr16
test
imul
popf
or
repz
adc
lock
cmp
sub
sbbb
aaa
inc
mov
or
jmp
pop
jecxz
int3
sbb
stos
push
gs
rcr
out
lds
pushf
flds
pushf
or
loopne
push
sbbb
enter
enter
mov
mov
imul
push
pop
rorb
add
cmp
dec
and
xchg
inc
pop
scas
mov
jge
jmp
mov
xor
xchg
pop
fisubl
ret
inc
mov
pop
iret
jle
sub
mov
popf
icebp
les
sbb
xchg
sahf
imul
scas
pop
pusha
mov
out
repnz
sub
daa
fs
jle
xchg
out
or
mov
and
jl
aas
clc
add
jge
sbbb
dec
loope
xor
std
sbb
fdiv
push
mov
call
mov
jp
dec
sbb
and
mov
mov
in
leave
push
popa
aad
sub
popf
add
inc
xlat
mov
fstp
out
mov
in
cltd
loopne
rcrl
ja
jbe
pop
bound
loope
dec
arpl
sbb
cs
clc
cmp
sub
xchg
inc
mov
add
fsub
and
pop
call
loop
dec
aam
xchg
fwait
test
aad
jmp
mov
xchg
cli
xchg
addr16
sbb
ficoml
arpl
push
test
push
sbb
in
dec
push
pop
and
sahf
test
lea
stc
ljmp
dec
push
lea
cltd
subb
cmp
loop
and
test
jl
rolb
mov
cmpsb
idiv
or
sbb
ds
jb
and
test
sub
pop
mov
lret
aas
adc
repz
pop
jae
and
cmp
dec
in
ss
or
rcrb
int
ret
lock
mov
mov
cli
fidivrs
mov
dec
dec
mov
sub
sbb
rorb
xchg
fwait
sbbb
ror
mov
ficomps
cmp
nop
push
sub
push
dec
xchg
pushf
es
mov
mov
xchg
jmp
sti
iret
fsubr
xor
scas
mov
hlt
decl
hlt
fdivr
mov
and
add
mov
sub
lods
movsl
lock
jmp
ss
jb
dec
pop
sub
bound
jp
jmp
aas
dec
and
push
pop
clc
inc
push
and
or
lret
aad
dec
push
stos
push
sbb
ficoml
and
adc
repnz
xor
into
adc
mov
and
stc
sahf
stos
add
addr16
das
jecxz
and
inc
mov
std
mov
fsub
adc
imul
and
adcb
lahf
adc
adc
or
pop
sub
pushf
daa
icebp
sti
setp
push
inc
test
jge
add
mov
dec
mov
or
out
mov
xor
push
aaa
inc
xchg
daa
adc
loop
push
lds
jbe
sub
inc
dec
fisubl
dec
test
scas
mov
jmp
decl
cmp
push
and
xor
inc
out
notl
mov
popf
jl
push
jo
jmp
addl
jl
cmp
scas
xor
jle
inc
dec
stos
decb
ds
push
jecxz
sub
sbb
insl
cmpsb
push
pop
mov
sbb
add
sub
dec
pop
xchg
cmpl
and
and
loope
xchg
in
push
pop
icebp
jecxz
dec
pop
add
xchg
mov
cltd
cld
pop
adc
push
cmp
xor
outsl
and
in
mov
ficoml
pop
inc
rcrb
test
xchg
and
dec
mov
pop
fwait
adc
lock
sub
pop
dec
call
jnp
inc
dec
mov
loop
bound
lock
sbb
hlt
jge
andl
push
popf
cmpsl
rcll
divl
fcoml
cltd
sub
cmp
jo
test
ror
scas
out
cld
push
adc
push
add
push
enter
pop
lahf
test
std
aam
add
and
aas
xor
sub
pop
mov
test
mov
adc
adc
cs
inc
int3
push
pusha
adc
mov
fadds
loope
scas
add
filds
sahf
dec
lock
xchg
jb
mov
mov
into
or
es
cmp
push
mov
pop
jae
fs
cmp
clc
scas
ret
in
ss
das
dec
jmp
pminub
mov
scas
loope
aad
std
xchg
popf
and
sbb
xchg
and
dec
mov
jbe
scas
fstp
cli
ljmp
mov
xchg
cmp
mov
in
pop
and
or
clc
aaa
loopne
push
push
out
imull
mov
popf
into
push
in
add
stos
jecxz
les
add
adc
pop
xlat
jno
dec
fs
subl
add
adc
scas
cmp
imull
mov
jo
jmp
cltd
movsl
sbb
shll
imul
out
stc
aam
mov
aas
loopne
xor
repnz
dec
fs
ljmp
repz
fdivrs
lcall
dec
and
dec
pop
push
push
test
xchg
sbb
push
and
stc
jmp
push
sub
ficompl
push
test
lret
aad
xchg
cmc
fimuls
fwait
adc
or
lods
inc
xchg
xchg
out
aad
xor
std
dec
jnp
das
or
aam
leave
pop
jg
xchg
fldl
cltd
loopne
adc
dec
mov
cmp
mov
mov
push
aad
adc
add
adc
std
gs
std
into
fcoml
mov
ret
or
shlb
ds
jge
bound
cmp
es
cmc
aam
adc
repnz
adc
mov
pusha
cmp
mov
addr16
popa
sub
sbb
pop
add
aaa
popa
cmp
imul
in
lahf
push
sub
cmpsb
sbb
addr16
test
pop
mov
xchg
inc
inc
mov
and
inc
jle
loop
cmp
or
ret
loopne
mov
cmp
mov
xor
inc
jo
jo
mov
mov
add
xlat
pop
add
xchg
scas
out
and
inc
xor
jle
jb
dec
and
mov
lret
jmp
imul
movsl
mov
xor
push
inc
dec
shrl
push
pop
xor
iret
flds
push
xor
rcrb
inc
xchg
fwait
jbe
cmp
push
aam
adc
clc
xchg
popf
sbb
je
arpl
imul
fcmovnb
into
cmp
push
cwtl
adc
mov
inc
mov
xchg
adc
xor
rorb
inc
xor
daa
mov
jmp
mov
push
sbb
pop
popf
push
fisubrl
push
in
std
in
push
pusha
sub
cmpsb
jno
mov
push
fxch
inc
ds
push
fwait
lea
dec
shll
adc
int3
test
xlat
add
in
and
pop
sub
pop
and
xchg
mov
lods
rclb
cltd
clc
push
and
dec
xchg
sahf
insb
jl
std
xchg
fwait
scas
and
int
jne
je
dec
sbb
jnp
out
cmp
pop
add
popa
dec
enter
dec
mov
nop
sub
cmpsb
aaa
xor
into
pop
bound
pop
pushf
or
daa
nop
fiaddl
add
sub
and
pop
loope
push
mov
xchg
fdivs
movsl
push
ljmp
mov
xchg
jo
sub
inc
mov
insb
jne
xor
sbb
stc
add
cmp
pusha
stc
add
mov
mov
int
mov
cltd
movsl
repnz
push
gs
testb
mov
sub
out
pop
xor
pusha
adc
mov
fsubrs
pop
push
lcall
inc
xorb
mov
xor
insl
mov
nop
mov
rclb
pushf
out
lea
cmp
and
push
push
xchg
aaa
inc
pop
or
jmp
pop
daa
in
cmp
ljmp
std
cmp
shll
xchg
sbb
ljmp
and
call
inc
xlat
or
icebp
daa
fninit
xor
mov
aaa
int3
mov
and
dec
sti
and
ret
push
cmpsl
leave
adc
and
cs
inc
dec
stc
add
mov
push
jp
repz
fwait
loope
push
pop
inc
fidivrs
aad
test
sbbl
inc
int
test
adc
add
outsl
and
andl
es
dec
xlat
and
lcall
aam
hlt
mov
mov
rclb
inc
cltd
push
sahf
mov
fsub
sbbl
and
sub
mov
xor
pop
movsl
scas
fldenv
lret
adc
out
mov
pop
pop
hlt
das
inc
pop
test
ja
xor
ret
cmp
add
mov
sub
and
xor
in
fisubl
negl
mov
insl
jno
cmp
dec
out
push
inc
xchg
sub
adc
mov
ret
sub
negl
dec
aad
sub
ficoms
fwait
movsl
test
outsb
push
mov
aam
mov
jnp
dec
cs
lea
or
fdivrl
mov
lods
mov
sub
pop
cmp
xor
scas
outsb
movsb
jg
jae
dec
test
xor
jb
dec
mov
xor
mov
and
sbb
fabs
and
movsb
ja
imul
movsl
mov
orb
push
pop
add
add
repz
int3
mov
lret
ret
cmp
cmp
aas
mov
imul
jnp
pop
hlt
and
das
sbb
subb
setns
ljmp
inc
cmp
sbb
addr16
arpl
push
xchg
mov
fidivrl
iret
pop
mov
lcall
outsb
jp
push
fmull
cmp
jo
and
push
loope
lret
jae
call
mov
daa
arpl
popf
dec
mov
in
add
fwait
mov
lcall
in
mov
sbb
decb
inc
cmc
sbb
pusha
inc
cmp
mov
push
pop
mov
andl
fsubrp
cmp
pop
test
xor
mov
ds
cmc
pop
cli
or
push
fidivrl
dec
sbb
jns
xchg
xor
cmp
adc
rclb
call
ds
cmp
jae
pushf
movsl
inc
dec
iret
dec
push
and
fisttps
adc
rolb
hlt
jge
mov
popf
mov
jno
xchg
loopne
addb
inc
dec
es
add
jge
push
mov
inc
les
mov
in
xlat
movhps
sub
cmpsb
mov
and
pop
iret
jo
pop
testl
ss
push
xorb
inc
stos
cmc
lea
cld
xchg
adc
sub
pop
push
jp
push
push
jns
cmp
fucom
icebp
add
aaa
loopne
inc
cltd
test
xchg
insl
ret
scas
mov
imulb
insl
fwait
dec
jmp
pop
mov
jne
insl
xchg
aas
cmp
sbb
push
xlat
sub
xchg
inc
fistps
adc
test
js
sub
or
lock
fs
fs
js
pop
xchg
xor
cld
pop
adc
and
push
pop
std
ss
ds
test
popf
xor
clc
xchg
inc
push
cltd
cli
cs
pop
pusha
and
pop
adcl
popf
lds
or
iret
and
aad
jae
xchg
fs
xchg
inc
int
mov
ficompl
ljmp
cmpl
sub
jle
mov
int
fcoml
out
push
push
dec
xchg
sub
mov
test
loop
push
mov
inc
cltd
push
or
cmp
cmpsl
mov
imul
or
fldenv
sub
sub
cli
sti
push
push
and
out
jp
ret
movsb
fimuls
pop
mov
movb
push
orb
fbstp
fwait
or
pop
lods
xor
lcall
inc
push
inc
add
and
sbb
pop
xchg
mov
ss
repz
int3
adc
cmp
int
imul
pushf
inc
rolb
mov
fimull
rep
out
nop
popf
sbb
jo
mov
ljmp
pusha
popf
out
mov
sub
pop
add
pop
dec
sbb
mov
mov
adc
loop
fcmovnb
or
adc
imull
mov
popf
lea
jecxz
test
mov
dec
sub
dec
js
xchg
fwait
sub
push
mov
push
aam
mov
mov
test
push
insl
jle
xchg
pop
cmpsl
mov
imul
inc
stos
sub
push
xchg
ss
and
test
int
call
jmp
aam
dec
setns
aam
jmp
cwtl
loop
shlb
or
inc
nop
sub
adc
loopne
hlt
nop
int3
push
scas
in
fildll
sbb
sbbb
pop
pop
insl
lea
ficompl
xchg
mov
insb
jecxz
and
adc
rorl
push
and
mov
das
cmp
and
stc
push
rolb
in
add
aaa
decb
adc
adc
cmp
push
jmp
fdivrl
pop
and
cmp
and
adc
jnp
cmp
lods
testb
sub
mov
sub
and
sub
push
and
jo
push
js
inc
mov
decl
call
inc
dec
cs
xor
cmp
xchg
lods
push
pop
int3
into
sbb
add
pop
pushl
and
jae
xor
sbb
sbb
js
frstor
cmp
dec
std
add
ror
sub
aas
mov
sub
inc
ret
cli
pop
std
xor
nop
sub
scas
xor
ret
rolb
testb
pop
sub
dec
rorb
pop
test
mov
insb
dec
enter
sbbl
leave
loope
xchg
sahf
test
mov
out
mov
call
hlt
fwait
cmpsl
adc
jo
dec
cmp
mov
stos
inc
mov
push
jnp
mov
imulb
int3
rorb
xchg
fwait
jbe
cmp
gs
enter
ljmp
mov
popa
push
imul
jg
imul
out
stos
mov
sub
pop
hlt
cld
insb
scas
mov
mov
decl
mov
add
iret
aas
inc
mov
enter
adcl
in
fwait
mov
arpl
jae
and
lcall
mov
cltd
dec
les
pusha
stc
je
dec
jo
ja
dec
push
pop
in
cmpsl
scas
adc
or
inc
jge
xor
data16
fsubrl
xor
dec
enter
cmp
lock
arpl
hlt
sti
mov
push
ss
ss
xchg
mov
fwait
movsl
adc
dec
fwait
aad
push
cli
pop
adc
adc
mov
cli
dec
mov
lret
inc
xchg
iret
cltd
loopne
adc
popf
lcall
loopne
insb
push
cmc
dec
outsb
daa
jns
jl
lock
jg
int
or
ret
or
enter
jg
dec
push
jnp
jg
in
jecxz
xor
sub
xor
adc
inc
mov
mov
lods
outsl
jo
xor
xor
pop
shrl
orl
lcall
xor
sub
mov
fiadds
movsl
cs
movsb
out
stc
fcom
dec
scas
call
sbb
fstpt
add
sub
inc
xchg
or
sahf
mov
mov
jl
test
adc
ljmp
pop
mul
push
fwait
cmp
ret
int
push
test
daa
mov
adc
out
orb
rcrb
sbb
add
dec
ljmp
pop
sub
lret
lret
cmc
adc
mov
bound
test
fsub
pop
mov
aaa
stos
adc
dec
pop
sub
js
addr16
push
mov
lods
incb
xlat
or
jmp
imul
dec
mov
std
fidivrs
stos
xor
scas
mov
insb
mov
mov
cld
rcr
movsl
and
add
imul
sbb
ljmp
aaa
inc
imul
adc
fstpt
pop
mov
mov
out
add
dec
cltd
and
mov
pop
fidivrs
in
stc
inc
dec
ret
jb
xchg
push
in
mov
cmpb
xor
stc
and
adc
orb
or
outsb
mov
sbb
loopne
push
mov
out
sub
or
jmp
insb
add
movsl
mov
xor
push
inc
push
sub
jbe
mov
xchg
je
sub
daa
sub
pop
cmc
stc
jo
mov
mov
decl
into
ds
clc
and
and
iret
cmp
mov
into
jae
jle
mov
int
or
and
pop
loopne
test
lea
rorb
fimuls
ret
test
or
insl
ja
cmc
dec
pop
stos
mov
adc
mov
loope
fcomp
and
inc
roll
push
fwait
sub
stc
test
popf
cmpsb
xchg
addr16
fiaddl
mov
and
std
mov
mov
pushf
aad
xor
sub
sbb
lahf
daa
adcb
xorl
into
hlt
mov
sub
or
fimull
push
pop
inc
lret
aad
jmp
rcrl
cli
and
push
push
or
jmp
rclb
call
and
xor
pop
add
mov
imul
movsl
cmp
fchs
nop
xchg
out
lret
cmp
or
bound
popf
mov
ret
loopne
leave
lret
sub
jg
dec
or
cli
jne
add
jge
dec
lahf
icebp
das
jp
jg
inc
dec
lods
jg
adc
sar
popa
inc
dec
lock
cs
inc
int
pusha
or
fdivrl
mov
das
adc
push
enter
pop
cs
stos
mov
out
cmp
loopne
cmp
dec
or
sbbb
mov
pushf
xor
in
rclb
jno
or
sub
jge
xchg
fwait
inc
push
pushf
jle
push
in
pusha
int3
leave
adc
loop
dec
sub
rcll
mov
outsb
xchg
mov
stc
and
push
cwtl
sub
test
rorb
mov
and
dec
data16
pop
cmp
mov
rcrl
testl
mov
call
call
jnp
inc
dec
lods
jg
adc
loop
popf
inc
dec
lock
sti
xor
imul
mov
rol
iret
sbb
xadd
repz
xor
call
mov
lahf
test
xchg
sbb
cmp
in
push
pop
stos
mov
sub
xchg
shl
out
sti
add
jb
pop
cmp
xor
jle
sub
pop
pusha
int
and
push
out
pop
frstor
dec
call
mov
lret
pop
mov
mov
movsl
or
aaa
lcall
xchg
pop
stos
iret
fsub
jmp
pop
movsb
or
dec
cmp
int
jno
lcall
in
fsubs
repnz
inc
lret
push
pop
mov
test
aas
js
xchg
adc
jmp
lcall
sbb
insl
pop
repz
cmpsl
repnz
sti
push
aaa
adc
in
cmp
xor
push
incl
outsl
cmp
int
loope
mov
loope
or
insl
je
popa
push
imul
ds
lretw
sub
sti
xor
ljmp
int
movsb
jmp
mov
repnz
cmpsl
addps
dec
sub
cmp
xor
ret
sbb
icebp
movb
jo
mov
push
adc
into
fwait
movsl
push
xchg
push
dec
push
push
sbb
cs
in
inc
arpl
mov
fsts
in
popf
movsl
clc
pop
pop
push
sbb
inc
xchg
popf
popa
mov
pop
fs
and
stc
jmp
testl
outsb
or
jb
fucomip
mov
out
rclb
pusha
stc
aas
sbb
andb
lret
aad
ret
inc
fisubs
cmp
adc
imul
je
iret
or
cmpsb
insl
cmp
fmuls
push
dec
fwait
packssdw
ret
int
ror
mov
test
pop
decb
sbbl
popf
je
notb
or
and
loopne
cmp
jp
in
lods
mov
pop
fisubs
loope
adc
iret
and
mov
popf
shrb
lcall
cld
inc
inc
push
push
sub
cmp
addr16
sbb
mov
lahf
jp
repz
aas
dec
cmp
dec
jecxz,pt
pop
and
pop
jmp
fsub
in
mov
or
lds
incl
addb
movsl
iret
push
mov
and
adc
addr16
test
fs
push
jmp
xchg
loop
lret
add
mov
pop
cmc
dec
es
sbb
dec
fsubrl
jecxz
ds
sbb
js
orb
dec
pushf
data16
sti
lds
jbe
jmp
cmpsb
sbb
and
daa
js
push
mov
aas
movsl
je
or
jnp
mov
inc
pop
mov
mov
xchg
jg
xor
gs
mulb
fsubs
sub
cwtl
sbb
data16
add
ret
int
mov
lret
in
mov
inc
and
lds
jns
mov
dec
out
xchg
mov
add
ret
int
mov
push
xor
or
inc
rcr
ret
scas
loop
jo
fisubrs
aas
sbb
or
jno
in
xor
je
sub
les
loop
mulb
jb
xor
popf
js
movsl
movsl
das
mov
mov
jg
push
and
push
inc
add
cwtl
sbb
call
scas
cmp
stos
ret
xor
jg
je
insb
xor
in
ret
int
fldcw
stos
roll
pop
xlat
loopne
and
pop
fucom
or
jne
test
jge
sti
insl
and
mov
jns
add
shlb
push
fs
dec
push
sti
jo
inc
imul
lock
jo
lock
imul
sub
test
adc
mov
loop
ja
xor
pop
sub
fildl
aam
test
jo
addps
aam
push
sarl
pop
aaa
rcrl
fists
add
int3
cmp
jnp
xchg
stc
movsb
nop
adc
fistl
and
add
inc
fisttpll
sub
nop
lcall
arpl
hlt
hlt
scas
js
test
sbb
lock
and
lahf
addr16
leave
rcr
out
xor
push
sbb
jle
pop
jnp
rcr
movsl
loop
clc
inc
lret
aad
mov
push
pop
cmp
int3
inc
or
xchg
sarl
psadbw
mov
lret
dec
push
sbb
loop
push
xchg
fwait
push
cwtl
fucomip
cmc
rol
inc
jbe
out
shl
stc
jle
adc
mov
sub
in
neg
leave
mov
fcmovb
fildll
xor
jo
dec
mov
jae
push
pusha
mov
sbb
mov
loop
ja
mov
push
sub
test
sub
sbb
jl
pop
xor
cs
and
lret
daa
stos
repnz
div
pop
addr16
sti
push
std
std
jne
ror
lahf
rorb
gs
pop
and
out
push
pop
push
pop
imul
xlat
push
push
pop
addr16
mov
xchg
xchg
and
jge
outsl
cmp
add
mov
push
adc
sarb
or
adc
push
repz
pop
scas
mov
popa
dec
xchg
inc
xor
subb
mov
and
sbb
shlb
push
xchg
fwait
add
and
pushl
pushf
and
cmp
and
fninit
push
adc
cmpsb
mov
sub
fistpll
mov
inc
aaa
or
arpl
xlat
loope
jg
insb
jo
cmpsb
xor
sub
inc
int
flds
xchg
mov
rcr
inc
mov
test
sub
pop
or
add
ljmp
push
push
nop
sbb
cmp
in
push
jecxz
mov
jbe
imul
mov
ss
sub
sub
jb
push
bound
mov
addl
in
in
in
fistpl
or
bound
add
mov
lret
lcall
mov
adc
popa
imul
xor
dec
mov
and
xchg
sub
mov
xlat
sti
pop
cmpsl
orl
lods
cli
dec
push
pop
imul
pusha
pop
iret
inc
mov
test
cmpl
and
pop
cmp
outsl
test
lcall
iret
jnp
loopne
pushf
add
inc
push
jb
stc
mov
shr
and
xlat
adc
test
inc
mov
push
stos
cmp
iret
mov
jmp
or
clc
dec
outsl
mov
push
xchg
mov
or
or
and
adc
mov
xchg
jne
call
je
or
das
dec
cmp
daa
mov
xor
decl
add
out
pop
mov
push
mov
pop
lahf
ret
and
sbb
push
xor
dec
pop
cmp
popa
and
lret
std
hlt
out
sar
out
pusha
xor
test
xchg
and
int
mov
fdivl
fiaddl
push
loopne
push
mov
out
cmp
lods
jns
mov
in
xlat
or
xor
adc
xor
mov
mov
cltd
cmp
ret
out
sub
push
jp
fwait
mov
fwait
aam
cmc
cmp
cmp
jbe
arpl
push
mov
mov
stos
out
les
add
or
imul
js
add
adc
dec
jmp
dec
or
test
pusha
push
add
repz
or
loop
scas
inc
ret
or
xor
dec
xor
ds
mov
mov
and
decl
das
cmp
test
cmpb
sarb
rorl
test
push
bound
jl
jl
cmpsb
scas
clc
xchg
int3
push
cltd
in
or
pusha
repnz
dec
dec
xchg
fs
stos
dec
jle
push
stos
lret
mov
ljmp
or
xchg
outsl
test
aam
fisubl
sti
inc
aad
inc
xorb
popf
loop
mov
xchg
ljmp
lock
push
arpl
jns
push
test
leave
sbb
add
sbb
aaa
adcl
cmpsl
je
jno
rorl
icebp
add
das
in
bound
dec
pop
jmp
pop
fwait
movsl
mov
xlat
mov
cmp
adc
dec
push
insl
movsb
xchg
push
iret
insl
cmpsb
mov
dec
out
stos
in
lret
add
es
add
imul
cmpb
cld
stc
sbb
pop
hlt
xor
popa
outsb
mov
nop
pop
addr16
mov
out
cmp
dec
adc
sbb
push
jbe
nop
fidivl
clc
jnp
out
and
adc
inc
aam
xor
insb
stos
mov
add
cmp
jo
or
insb
xchg
add
cmpl
push
loope
and
mov
cmp
aas
mov
mov
cmp
adc
dec
push
and
jp
cwtl
sbbb
cmp
sahf
xlat
add
ret
and
test
push
mov
cmpsl
lock
dec
add
aaa
inc
cmp
imul
loop
pop
mov
sub
add
mov
jle
mov
ja
enter
loop
testl
arpl
fdivrs
jae
je
lods
movsl
ljmp
inc
jmp
or
xor
or
lods
inc
gs
dec
mov
add
mov
sbb
add
repz
push
add
inc
xchg
cmpsb
push
fwait
aad
add
repnz
cmp
cmp
mov
rorl
ljmp
add
add
pop
bound
loope
test
cmp
and
pop
jmp
dec
inc
or
push
pushf
cmp
movsb
sar
jecxz
sbb
sbb
pop
mulb
jge
arpl
mov
int3
test
incl
cmp
sbb
xchg
popf
ja
in
mov
add
in
dec
dec
xchg
sub
ds
mov
movsl
nop
stc
lcall
push
out
jno
push
jo
pusha
sbbb
xchg
stos
mov
iret
les
test
das
push
inc
or
sbb
dec
sub
xchg
ljmp
repz
adc
cld
jmp
inc
es
lods
sub
mov
aaa
cltd
shl
mov
in
imul
pop
xchg
pop
orb
nop
movsl
xchg
push
les
stos
add
push
adc
je
inc
arpl
js
mov
mov
lret
sub
pop
outsl
add
inc
imul
xchg
sahf
mov
push
repz
outsb
je
dec
test
cmpsl
mov
or
movsb
lret
add
and
pop
data16
movsb
pop
jg
jge
rclb
xlat
adc
and
cmp
jne
mov
jnp
gs
mov
cwtl
cli
aaa
inc
adc
mov
dec
jae
xchg
pop
movsl
scas
mov
fcoml
push
sub
and
cmp
cmp
je
mov
fxch
sbb
mov
xor
dec
jne
xchg
ret
or
sub
aas
push
jne
dec
pusha
push
call
xchg
push
aad
and
cmpsl
cmp
and
fwait
rcrb
int
out
gs
dec
loopne
data16
pop
nop
dec
jg
mov
jg
mov
sahf
rcrl
sti
sbb
cmp
scas
add
bound
jae
mov
mov
mov
sub
inc
xchg
and
mov
pusha
hlt
in
ss
add
cmp
inc
jp
out
inc
jp
outsb
adc
adc
cmp
sbb
lcall
jne
hlt
cltd
rcr
lock
sar
dec
lock
sub
dec
xchg
mov
movsb
fsubrp
push
es
popf
cmp
nop
cmpb
mov
ficoml
notb
shlb
inc
push
sub
movsb
mov
outsl
mov
sub
aas
adc
dec
outsb
push
mov
stos
mov
pushf
dec
in
out
scas
push
and
mov
dec
push
fwait
movsl
mov
and
xor
mov
push
ja
cld
mov
jl
lock
loopne
or
fcoms
cmp
mov
pop
scas
cmp
cmpsl
dec
fwait
sar
fnstcw
add
push
push
jno
popa
xchg
pop
or
mov
cmp
lds
cmpsb
iret
sub
adc
addr16
push
dec
xchg
push
jb
ljmp
jnp
out
and
xlat
adc
test
dec
stos
cmp
iret
mov
cltd
shl
loop
or
clc
dec
outsl
mov
push
xchg
mov
or
or
aas
adc
test
jle
pop
mov
jne
call
xor
or
sbb
cmp
daa
mov
mov
int
fisubl
or
dec
pop
mov
push
mov
pop
lahf
enter
sbb
cmp
jae
dec
pop
insb
mov
xchg
addr16
les
sar
and
das
test
xchg
and
int
mov
and
ljmp
push
mov
out
cmp
mov
cmc
cltd
ret
stc
adc
xor
pop
arpl
jne
bound
fsubr
mov
xor
jae
xor
test
lret
out
call
fistpll
push
mov
ss
cmpsl
lock
dec
add
aaa
inc
mov
inc
jae
pop
mov
pop
ret
loop
pop
mov
sub
add
mov
jle
xchg
ja
enter
loop
in
dec
int
dec
mov
jae
pop
lret
lods
movsl
ljmp
inc
jmp
cmc
push
clc
xor
xchg
lods
inc
outsb
lret
dec
mov
add
mov
add
dec
sub
imul
mov
arpl
lahf
jg
imul
dec
enter
das
popa
dec
push
and
andl
lods
sti
xchg
cli
xor
sbb
push
loop
inc
sub
push
repz
rcll
or
icebp
daa
je
pop
jnp
imul
jl
push
mov
dec
lret
adc
push
and
pop
or
mov
movsl
fsubrp
xor
and
pop
pop
mov
pusha
push
arpl
mov
or
sbb
sub
sub
jae
negb
ret
int
call
sbb
pop
adc
je
imul
in
testb
sub
popa
sbb
cmp
jb
movsl
scas
mov
mov
mov
xor
pushw
xor
ja
stos
mov
call
cli
add
stc
aaa
sub
inc
push
dec
loop
jl
sahf
cli
lds
cld
xchg
lret
aad
ret
push
pop
call
insl
xor
inc
jg
lods
repnz
fiaddl
divl
cmp
js
push
mov
mov
scas
in
or
jmp
dec
fs
mov
shlb
mov
sub
testl
and
mov
push
mov
dec
hlt
lods
add
int
adc
out
pop
push
inc
sub
inc
add
mov
pop
mov
jp
pop
sub
imul
int
int
add
dec
aam
dec
jg
jecxz
orb
data16
rcl
pop
imul
ss
push
xlat
ds
xchg
inc
insl
inc
loop
jge
xchg
mov
xchg
cld
or
sub
mov
push
jne
mov
je
push
mov
call
adc
xor
insl
xchg
jae
int
shl
fbstp
cmc
push
shrb
dec
jl
imul
imul
mov
cmp
sbb
es
sbb
pop
movsl
dec
outsb
ret
dec
movsl
ret
in
pop
scas
in
loope
and
pusha
sti
sub
mov
outsb
cmpsl
lret
movsl
int3
loopne
and
inc
jnp
data16
fldt
xchg
lahf
cwtl
loope
scas
decl
and
dec
jmp
dec
pop
sub
test
popa
jp
test
mov
and
andb
xchg
ss
nop
sbb
int
jmp
adc
push
dec
jmp
cs
cmp
out
jle
lahf
movb
std
jnp
fldl
std
xor
push
mov
xchg
fwait
jb
ljmp
decl
adc
dec
pop
jno
add
ds
lock
dec
inc
xchg
pop
mov
rclb
jg
xlat
mov
sbb
fcompl
xchg
xchg
cmp
jne
inc
ja
je
jnp
iret
flds
mov
inc
fcoms
sbb
das
dec
push
dec
fwait
daa
sbbb
rcrb
shr
cld
or
adc
push
pusha
sti
sub
push
xchg
outsb
cmpsl
lret
mov
mov
inc
jnp
pushaw
pop
sub
xchg
cwtl
loope
test
in
cmp
and
mov
and
pop
inc
mov
pusha
push
pop
test
mov
mov
and
mov
or
push
ss
xchg
test
cmp
call
sbb
adc
push
and
jle
nop
pop
mov
cld
cmp
pushf
aad
xor
sub
sbb
xchg
xchg
or
repnz
and
xchg
clc
xor
or
lods
inc
jl
dec
mov
add
mov
add
leave
sub
imul
mov
arpl
lahf
adcl
fcom
sub
std
dec
enter
das
popa
dec
xchg
and
orl
xor
sbb
push
loop
inc
push
or
fwait
aas
outsb
mov
test
mov
movsl
fiaddl
fadd
sbb
icebp
sub
mov
popf
pop
adc
lcall
ss
sbb
jno
pop
sbb
and
xor
mov
outsl
stos
cmc
test
clc
das
call
sbb
sbb
xor
inc
lcall
mov
adc
push
in
daa
jb
pop
jns
imul
lcall
lock
cmc
cmp
jbe
push
icebp
dec
mov
ret
loop
pop
push
sub
xor
pop
cmp
ds
movsl
mov
pop
mov
cmp
dec
pop
jno
cwtl
push
or
stos
mov
cmp
stos
out
lret
add
and
xchg
pop
push
jb
jae
or
aad
stos
ds
push
push
dec
sbb
sub
push
xchg
pop
cmpsl
mov
fadd
movsb
icebp
ljmp
rorl
cmp
push
insb
xchg
xchg
test
insl
mov
sbb
aas
adc
or
addr16
call
xchg
insb
ret
iret
add
ss
adc
sbb
pop
cwtl
mov
scas
fdivrs
sbb
ja
inc
mov
andb
jne
mov
sti
add
aaa
jl
arpl
jp
inc
cwtl
mov
addr16
dec
faddl
addr16
popfw
push
js
jb
mov
pop
lahf
leave
and
aaa
and
adc
sub
dec
xchg
mov
ret
aam
and
cmp
sub
inc
jp
sti
mov
movsl
int3
lods
out
mov
in
ss
dec
pop
gs
jl
dec
popf
mov
ret
loopne
push
repnz
xor
dec
mov
xchg
lds
ret
outsl
sti
hlt
inc
in
pop
jmp
pop
xchg
dec
cmpb
subb
xchg
iret
sbb
aas
and
inc
call
mov
insb
ret
iret
add
ja
add
in
xor
mov
cmp
cltd
fcomp
mov
cmp
sbb
in
cmpsb
inc
jbe
jno
jo
test
mov
inc
and
sbb
es
jae
xchg
pop
movsl
scas
mov
call
imul
sub
push
xchg
mov
mov
sbb
sub
push
cmp
jp
mov
ror
int
aam
ljmp
loop
popa
add
inc
pop
sbb
mov
ret
lock
loope
cmc
cs
adcb
arpl
fucomip
repz
cwtl
sub
movsb
popa
or
test
cwtl
scas
iret
fchs
add
lea
adc
and
mov
sahf
jns
gs
mov
mov
cmp
and
jbe
popa
dec
push
sub
jnp
lcall
loopne
xor
pop
or
out
inc
cmp
xor
dec
lahf
mov
adc
pop
adc
and
popa
jp
push
jae
addr16
mov
not
rcrl
mov
ss
sbb
jo
dec
dec
andb
mov
bound
loopne
rcl
mov
cmp
cmp
insl
movsb
xchg
push
xchg
insl
cmpsb
mov
dec
out
stos
xlat
sub
add
es
add
imul
cmpb
stos
ds
push
sub
fs
cmp
addr16
mov
add
inc
ret
sbb
jno
rcrb
jle,pt
pop
jl
xchg
movsl
scas
ljmp
stos
add
push
adc
je
inc
arpl
lods
js
mov
mov
aad
sub
sbb
add
inc
imul
aas
jo
pop
xchg
sahf
test
icebp
xchg
call
or
pop
repz
cmp
je
fs
fdivs
iret
mov
add
adc
sti
push
jo
test
xchg
lret
in
mov
cmp
jge
push
add
je
enter
pop
rolb
add
aam
lret
xchg
sahf
jge
inc
mov
mov
pop
fdiv
sbb
sbb
cmc
cmp
cltd
sbb
mov
imul
sub
adc
xor
push
jmp
xor
push
scas
ljmp
jno
inc
dec
test
mov
std
test
call
xlat
inc
lret
insb
pop
leave
push
fwait
lds
scas
jecxz
xchg
std
xchg
pop
cmp
inc
mov
pop
popa
fidivs
fcoms
sbb
or
mov
jbe
sub
notl
mov
push
inc
out
mull
mov
popf
into
push
in
mov
leave
cmpsb
sbb
ss
sbb
clc
adc
jae
mov
lods
rol
in
mov
cmp
notb
ja
mov
insl
stos
push
pop
lds
and
in
sub
mov
cmpsl
pusha
jg
jl
ret
xlat
shlb
movsb
not
adc
pop
sub
repz
mov
pushf
orb
fbstp
rorl
mov
xchg
ss
push
xchg
test
sbb
in
enter
aad
in
daa
cmp
js
lcall
push
sbb
fsubs
dec
daa
xor
push
sahf
cmp
sbb
add
jmp
inc
sbb
arpl
aas
cmp
mov
rcll
scas
mov
test
call
jnp
cmp
ja
in
cmp
push
icebp
je,pn
dec
push
cld
in
mov
jl
iret
mov
inc
enter
xor
insl
data16
test
sbbl
call
fninit
dec
mov
xchg
fdivl
movsl
cmp
and
call
and
dec
pop
pop
test
push
jge
fwait
stos
mov
call
or
ret
insb
inc
addr16
je
push
xchg
inc
inc
mov
pop
push
in
and
or
mov
pop
xchg
dec
jne
insb
movsl
scas
mov
xchg
int3
in
call
jmp
cmp
into
out
fldenv
sbb
aam
mov
out
xchg
scas
sbb
and
jo
inc
in
fldenv
sar
sub
clc
es
sbb
orl
ja
mov
sub
and
xor
push
incl
insb
stc
ret
int
loope
mov
mov
sub
xor
cmpb
mov
mov
in
xchg
mov
inc
aaa
or
sbb
imul
bound
pop
daa
xor
inc
fstpl
pusha
push
stos
xchg
jae
mov
lcall
sub
testb
pop
push
incb
jae
shrl
int
into
out
cmp
fcompl
lret
lds
test
pop
mov
push
clc
xlat
in
push
sub
iret
xlat
cmp
pop
dec
push
fwait
imul
ret
pop
jl
dec
loopne
sarb
lds
jne
bound
adc
xlat
in
movsl
push
cwtl
popa
imul
and
sahf
test
push
mov
lods
dec
movsb
pushf
or
std
movsl
ficoms
cmp
sbbl
and
pop
xchg
shr
and
mov
push
ljmp
jmp
mov
insb
movsl
push
sub
ret
pusha
repz
dec
sbb
lahf
daa
mov
je
aaa
mov
mov
adc
fwait
sub
jmp
add
mov
sbb
cs
push
mov
enter
fwait
cli
lea
shl
pop
sub
inc
inc
push
pop
xor
mov
scas
stc
mov
mov
and
dec
inc
pop
cmp
push
and
repz
mov
loop
in
pop
cmc
add
inc
leave
nop
lcall
imul
sub
ds
pop
fsubrl
jne
dec
jp
lods
inc
orl
lret
stos
mov
fsubl
sbb
cld
inc
dec
pop
gs
jl
fs
movsl
scas
dec
push
rcll
sub
jmp
inc
sbb
fimull
jge
mov
inc
jnp
mov
orb
imul
mov
jnp
aas
lods
add
jns
or
pop
or
iret
xor
inc
jbe
pop
lock
loop
shlb
pop
add
cmp
xchg
fidivrs
sbb
push
jnp
insl
cmp
pop
movsl
jne
push
and
fsub
pop
lds
loopne
test
inc
ret
mov
xchg
cmpsb
lock
repnz
adc
inc
mov
mov
pop
fidivrs
dec
xor
xchg
sbb
sbb
rcrl
mov
mov
adc
and
mov
aaa
mov
je
cli
xchg
scas
or
imul
jno
sub
imul
negl
cmc
sbb
loopne
xchg
mov
addr16
cmpsl
shrl
dec
xchg
invd
mov
xor
sbb
jmp
rol
outsb
scas
movsb
out
sbb
adc
mov
sbb
dec
mov
mov
cmpsl
jo
shrl
cwtl
lret
mov
mov
xchg
push
mov
ret
int
mov
mov
xchg
int
and
inc
add
inc
and
mov
xchg
stos
add
arpl
push
pop
inc
ficoms
xchg
sahf
test
arpl
cmpsb
push
outsl
loopne
add
sbb
add
inc
xchg
adcl
sbb
mov
push
sbb
popf
movsl
add
pop
push
jo
pop
loop
push
fwait
lds
lea
xor
xchg
dec
pop
mov
mov
shl
mov
mov
dec
ds
jne
das
mov
aad
aas
jecxz
les
mov
das
dec
loop
sub
mov
mov
mov
sbb
adc
lock
bound
int
aas
shll
fadds
add
leave
cmp
movsl
jb
pop
pop
addr16
loop
mov
jecxz
jecxz
call
lret
inc
push
cmpsb
push
jg
xchg
sbb
mov
rcrl
and
and
sub
push
mov
jb
mov
mov
fisttpll
jns
cwtl
ss
lods
mov
sub
pop
cmp
xor
jle
lds
or
and
dec
jecxz
cmp
mov
cmp
jmp
fadds
add
push
lcall
loopne
fwait
mov
xor
stos
call
push
and
cli
lods
mov
mov
addb
pop
adc
mov
ss
and
adc
mov
into
rclb
adc
add
stos
mov
jg
scas
addr16
mov
adc
add
aas
or
cmp
xor
inc
cmc
stc
push
pop
mov
shll
adc
decb
jne
adc
push
shll
sbb
out
push
lret
adc
call
mov
in
popa
lods
mov
insb
jne
xor
sbb
andl
test
lods
sub
daa
lods
cmp
fucomip
pop
dec
test
cmpl
pushw
shrl
xor
out
pop
xor
pusha
mov
pop
bound
leave
loop
xor
inc
dec
sub
sub
jno
pop
xchg
mov
dec
mov
or
inc
dec
in
add
ror
filds
mov
loopne
aad
stos
ret
or
mov
pop
repz
gs
pushf
movsl
out
pop
movsb
int
aad
stos
std
inc
aam
cmp
jp
adc
pop
sub
jg
sub
iret
jl
lock
es
shlb
cmp
daa
pop
mov
xchg
movsb
decl
outsl
fiaddl
clc
add
mov
push
imul
pop
fwait
lock
je
sub
enter
out
jp
cs
jmp
aam
jo
call
or
cmp
in
aaa
dec
stos
mov
aaa
test
mov
out
sti
mov
inc
ljmp
ja
cmp
loopne
fucomi
jb
cld
push
mov
cs
std
add
ror
mov
xchg
out
int
jnp
push
adc
xor
fabs
push
mov
movsb
ja
sub
movsl
iret
stos
ret
pusha
jmp
sahf
stos
mov
jno
fdiv
xor
lods
mov
jb
bound
fidivrs
cli
add
clc
lock
shr
pusha
test
xorb
fs
fldenv
idiv
pop
scas
mov
popa
xchg
or
jg
rcrl
testl
lret
pop
xor
loop
jbe
icebp
jbe
xor
ficoml
xchg
out
clc
add
js
aas
out
idivl
pop
mov
and
lds
repnz
ss
pop
push
mov
xchg
and
dec
test
cmp
jle
call
movsl
add
sbb
pop
outsb
enter
ja
test
std
aam
add
dec
sbb
int3
aam
xor
sbb
lahf
inc
mov
add
sbb
inc
dec
pop
addr16
adc
mov
fadds
loope
loopne
cmp
push
imul
js
hlt
rcll
jle
cmc
decl
push
shlb
push
mov
rcr
scas
jle
rcrb
fwait
aad
dec
push
mov
dec
fistps
mov
add
push
and
adc
pop
xor
dec
sub
aas
pop
call
jmp
mov
popa
fisubrl
fwait
movsl
push
and
xchg
repz
sarb
clc
test
inc
adc
push
sbbl
mov
xchg
into
in
and
sar
jge
cmp
mov
lods
dec
popa
fwait
aas
push
xchg
pop
jmp
clc
xor
shrb
icebp
stos
outsb
or
icebp
orl
jb
inc
xchg
and
dec
xchg
cld
mov
cld
xchg
adc
lds
cmp
push
pop
jnp
rcll
imul
sub
inc
inc
add
push
repnz
cmp
xchg
cmp
idiv
or
and
push
clc
xor
out
sbb
insb
mov
iret
in
out
movl
pop
inc
push
sahf
cmp
scas
mov
pop
jmp
fs
dec
andb
mov
xchg
cmp
add
outsl
decb
adc
cmp
dec
inc
xchg
xor
xlat
gs
enter
push
daa
aam
push
ret
mov
push
popa
or
fdivrs
sahf
shll
enter
sbb
jae
cmpsb
repnz
mov
jg
jmp
mov
xor
adc
cli
rcll
jno
push
and
xchg
popf
xor
into
fdivr
add
or
pop
xchg
or
mov
in
cmpsb
mov
xlat
fisubrs
pop
in
cmpsb
add
stos
pop
fcomps
mov
mov
imul
rcr
testb
mov
dec
ja
xchg
or
loopne
stos
mov
xlat
loope
arpl
stos
add
fs
add
orb
out
in
xchg
out
sbb
popa
imul
das
push
pop
push
mov
adc
sub
cltd
push
int3
push
mov
mov
fcmovb
iret
fldenv
testl
pop
divl
movsl
movsl
scas
jbe
jmp
outsl
scas
loop
mov
repnz
mov
mov
popa
jno
mov
sbb
xchg
and
sti
pop
sub
sub
fcompl
test
jg
adc
mov
add
dec
out
sbb
js
xchg
sbbb
sub
iret
scas
push
in
sub
and
xchg
pusha
jge
jnp
aam
stos
ret
push
xchg
ret
int
sub
add
je
movb
mov
scas
orl
negb
fsub
inc
sbbb
fwait
inc
push
scas
lock
push
pop
pop
pop
or
add
aad
pop
mov
mov
popa
imul
jg
dec
adc
outsb
xchg
add
scas
pushf
or
and
and
push
or
jno
sub
rolb
or
inc
dec
aad
xor
jg
inc
or
test
int
clc
out
or
ljmp
push
inc
sub
xchg
mov
push
fstps
add
call
lcall
pop
xchg
idivb
loop
inc
xor
scas
imul
ja
dec
xchg
stos
add
mov
xor
push
lcall
rcr
mov
xlat
fdivr
mov
jg
add
push
mov
push
int
push
sbb
ficompl
pop
lret
push
ss
or
js
test
bound
xlat
cmpsl
mov
rclb
addr16
mov
push
test
mov
hlt
mov
loope
inc
sahf
test
cmp
and
pop
imul
ds
xor
xor
pop
mov
cmpsb
pop
cmpsl
cmp
mov
fildll
fadds
ret
sahf
cmp
jp
decl
in
add
add
decb
pushf
xor
pop
xchg
mov
jecxz
cltd
mov
mov
mov
mov
mov
out
call
leave
add
and
sbb
fsubrl
hlt
pop
adc
les
sbb
adc
inc
dec
hlt
cld
jo
mov
ret
ljmp
icebp
cmpsb
addr16
xor
inc
mov
cmp
loop
popl
add
or
aaa
or
cmpb
pop
aam
jbe
out
mov
dec
pop
pop
fadds
push
clc
jns
mov
aad
sbb
fsubs
dec
daa
xor
dec
jo
inc
or
mov
aad
xchg
cmp
sbbl
cmpsl
cmpsl
sub
fnstenv
and
rcrb
inc
xchg
fwait
jbe
aad
dec
xchg
mov
mov
and
clc
inc
sarl
mov
or
into
cmp
push
shlb
rorb
dec
pusha
mov
ret
popa
decl
mov
mov
cmp
adc
orl
pop
lcall
in
fnstsw
bound
add
xor
andb
ds
add
xor
xor
in
adc
mov
fadds
loope
das
fwait
and
outsb
xor
jae
daa
test
loopne
mov
jmp
lock
sbb
das
add
xchg
outsb
out
mov
or
lcall
jmp
mov
xor
xchg
fbstp
ljmp
and
lret
mov
mov
in
cs
jbe
cmp
out
dec
aad
mov
test
mov
ret
cmp
or
ljmp
and
fsubrs
xchg
iret
jnp
in
pop
pushf
or
imul
negb
jo
mov
cwtl
inc
dec
lahf
or
repnz
dec
adc
adc
xor
stos
mov
mov
cmp
push
mov
xchg
mov
sbb
mov
sub
xchg
push
pusha
mov
add
push
and
cmp
mov
xchg
rcrb
mov
ss
jae
hlt
mov
imul
scas
mov
jmp
int3
or
and
push
mov
xchg
fistps
mov
lcall
inc
push
mov
mov
mov
or
lds
repz
inc
arpl
jbe
stos
cmpsl
icebp
xchg
les
lcall
pop
add
jl
push
mov
mov
rol
jns
or
mov
iret
push
mov
inc
jp
pop
lock
ss
or
xchg
sub
cmp
jo
push
xlat
data16
call
mov
arpl
dec
cmp
push
popf
pop
push
pushf
lea
fsts
out
fwait
or
push
pop
inc
jb
inc
xchg
and
dec
xchg
cmp
stc
add
and
push
pop
inc
push
cmp
mull
mov
pushf
aad
test
lods
loop
clc
inc
fistpl
pop
stc
xor
pop
cmp
ja
xchg
cmpsb
scas
mov
insl
cmc
ljmp
jnp
arpl
mov
adc
jo
test
sbb
jno
ss
push
sahf
and
dec
nop
mov
or
loopne
stos
add
aam
addr16
push
clc
imul
dec
shl
nop
sub
or
add
jmp
mov
test
mov
out
cmp
orps
sub
pop
cmpsb
inc
add
cwtl
loop
lret
iret
mov
movsb
dec
adc
pop
rcrl
sbb
cmc
leave
adc
mov
add
ja
insb
add
dec
mov
push
push
sbb
fwait
jno
sbb
mov
inc
cmp
sbb
in
lahf
inc
fistl
adc
push
and
fsubp
ds
mov
adcl
pop
cmc
adc
pop
push
add
push
or
int3
lahf
push
or
incl
sarb
pushf
cltd
push
aad
scas
sahf
sub
xchg
faddl
loope
push
out
sbb
sub
fistpl
sti
pop
imul
pop
mov
cmc
int3
call
pop
and
dec
mov
xchg
add
rolb
dec
out
pop
imul
scas
pop
xor
or
push
xchg
popf
and
push
pusha
aas
je
dec
xchg
and
xor
add
fscale
loopne
add
mov
or
jge
data16
xor
dec
mov
jae
mov
mov
push
cmp
add
xor
test
test
aaa
adc
xchg
or
push
jbe
jnp
fwait
movsl
push
push
mov
cwtl
pushf
add
pop
addr16
es
fcoml
pusha
mov
xchg
jbe
cmpsb
mov
fstps
out
add
and
adc
fs
sub
push
xlat
jmp
call
jmp
jnp
push
cltd
xor
ss
jno
aam
pop
lahf
shlb
sub
popf
sub
adc
ret
pop
imul
xor
adc
es
sub
pop
and
shll
sbb
mov
outsb
or
mov
jmp
mov
ret
clc
dec
cld
aam
ljmp
pop
pop
imul
or
rorb
jge
rcrb
cmp
xchg
lret
mov
inc
dec
mov
adc
aas
je
sub
inc
leave
jno
loope
inc
and
daa
jl
xchg
and
dec
xchg
add
not
adc
or
test
dec
mov
mov
into
loopw
push
xchg
adc
int
push
xchg
ja
loopne
test
fldt
push
aas
rcrl
dec
pop
mov
xchg
stos
mov
iret
enter
add
inc
lret
daa
fwait
std
ss
inc
dec
ja
jl
push
lahf
scas
mov
mov
jmp
xchg
jo
dec
cmp
movsb
and
insb
nop
sub
nop
in
into
lret
adc
cmp
fiaddl
fwait
movsl
cmpb
cmc
or
cli
inc
fstpl
pusha
sti
xor
adc
cmp
mov
in
testb
icebp
lds
pop
sub
jge
push
fwait
sub
ds
cmpsb
decl
adc
mov
daa
inc
pop
jecxz
push
pusha
push
outsb
cwtl
push
sub
in
sti
or
cltd
and
sahf
test
arpl
cmpsb
ljmp
fcoml
ds
pusha
push
pop
lea
fucomip
les
leave
in
and
pop
push
lcall
mov
xor
xchg
stc
add
decl
pop
or
aaa
stos
fs
adc
xchg
mov
addr16
fmuls
cltd
fsubrs
push
mov
cmp
xor
scas
mov
clc
push
cmpsl
push
adc
dec
in
dec
jo
mov
int
popf
inc
mov
cltd
push
hlt
decb
push
stc
sub
or
into
pop
cmp
inc
subb
addr16
in
leave
or
sub
push
aaa
inc
push
push
test
pop
icebp
stos
fidivs
enter
in
sub
inc
dec
stos
mov
jp
jg
les
cli
fwait
add
sbb
cmp
insl
imul
dec
xchg
enter
cmpl
push
in
sub
mov
pop
cmp
jns
cmpb
rcr
push
out
jno
dec
cmp
sub
mov
push
test
lret
dec
pop
cmp
test
mov
outsb
je
movsl
scas
fstps
and
cmc
or
push
sbb
lock
pop
lods
mov
jb
mov
mov
mov
in
pop
fsubs
repnz
sahf
test
sub
push
mov
mov
std
pop
das
mov
imul
or
popf
fucom
iret
pop
lret
and
xchg
sahf
adc
imul
insb
mov
mov
lods
stos
cmc
call
jbe
repz
mov
fwait
imull
mov
daa
mov
xlat
and
jno
xor
data16
adc
int
in
mov
enter
adc
or
pop
sub
subl
and
mov
call
ror
cmp
ja
shl
inc
movsl
mov
or
incb
sbb
jno
mov
xchg
scas
arpl
push
sbb
pop
push
shrb
inc
push
lcall
pop
rcrl
lret
push
and
fucom
push
into
ds
cltd
mov
xchg
fucomip
pop
rcl
and
push
popa
imul
aad
jp
sbb
test
mov
jae
cmc
std
dec
push
and
cmpsb
fstl
popa
mov
cmpsl
xor
cld
stos
add
lret
aad
xor
sub
js
je
gs
push
lea
stos
mov
push
in
and
pop
cld
movsl
in
lahf
bound
xchg
int
test
xor
add
fnstcw
jae
push
mov
les
add
out
adc
and
pop
adc
lahf
repz
shll
out
por
jns
sub
mov
mov
xor
xor
pop
push
cmc
xor
push
test
cmpsb
fs
addr16
mov
into
fcom
in
rorb
pop
stc
cmp
test
sbb
push
pop
mov
jb
mov
mov
mov
faddl
mov
rcr
repz
cmp
or
pusha
cli
pop
insl
mov
fidivl
push
jb
repz
inc
popf
inc
int3
inc
jp
xchg
outsl
or
mov
rcr
lds
add
sbb
mov
loop
adcl
mov
jno
and
cmp
push
xor
push
aaa
lea
pop
xchg
fisttpll
repnz
sbb
in
or
gs
sub
mov
xchg
cmp
jo
test
mov
repnz
push
pop
arpl
fs
pop
xchg
mov
sub
xchg
lock
out
leave
push
sub
cmp
mov
cmp
test
fisttpll
stc
add
lret
aas
cmpsl
mov
push
jno
jo
jl
pop
mov
xchg
pop
hlt
jns
sbb
inc
dec
mov
in
cmc
pop
nop
scas
mov
ljmp
xor
xor
aas
enter
lods
lret
aad
sub
std
pop
jl
and
or
xor
mov
jnp
mov
cltd
rorl
std
movsb
mov
movsb
jp
fimull
popa
sub
sub
pushf
daa
icebp
sti
out
loope
hlt
inc
mov
lahf
imul
insb
jbe
dec
je
std
mov
rcrl
cs
xlat
cmc
sub
dec
ja
scas
nop
shrl
in
fwait
mov
sbb
or
pushl
gs
addb
leave
imulb
nop
pop
arpl
sarb
imul
mov
and
jb
inc
aad
test
sbb
stc
mov
fidivrs
adc
dec
daa
pusha
pop
pop
dec
dec
xchg
mov
int3
lods
loop
daa
leave
xor
repnz
sarl
jge
subl
cmc
mov
xor
adc
push
xchg
lock
pop
xchg
sbb
jno
out
cmp
or
test
pop
lods
inc
xchg
add
ljmp
sbb
pop
push
mov
xchg
cmp
fs
fscale
dec
push
out
and
xor
inc
dec
mull
ja
mov
loope
ja
ljmp
or
and
xor
imul
aad
lds
shrb
add
or
js
pop
push
xor
cli
jp
dec
mov
or
add
sbb
or
je
pop
xchg
fsubrl
mov
rcrl
mov
ss
out
cmp
inc
xchg
and
xchg
pop
mov
ss
mov
jmp
call
out
cmp
dec
std
add
ror
stos
cmpsl
jo
les
lock
or
or
inc
es
or
dec
cmp
scas
mov
jmp
call
sti
dec
dec
pop
fs
or
jns
fucomip
mov
aaa
lock
push
out
xor
sahf
test
out
das
cs
add
imul
inc
test
inc
xlat
mov
mov
cmpsl
icebp
fs
mov
les
pop
and
pop
bound
mov
mov
pop
mov
loopne
mov
cmp
adc
jbe
inc
rcrb
fsub
in
enter
fisubrl
inc
pop
mov
daa
inc
loopne
dec
nop
and
cmc
decl
cmp
ja
dec
mov
popa
mov
inc
fwait
rol
rcr
insl
cmc
addl
push
stc
xor
jle
sub
inc
ret
jo
shrb
xor
mov
cmp
pop
xchg
or
lret
aad
cmpsb
mov
stc
outsl
and
adc
mov
fnstenv
xchg
lcall
jb
ret
scas
fsubrp
loope
cmc
add
adc
pop
dec
leave
movl
pop
mov
lea
cmp
dec
fistps
insb
pop
xchg
fwait
das
scas
dec
push
int
and
std
ds
add
xchg
inc
cmp
outsl
mov
push
add
sbb
cmpsb
aad
pop
inc
dec
inc
dec
mov
fs
test
mov
ljmp
cmp
xchg
mov
ret
jb
test
mov
pop
int3
add
xor
xor
jb
inc
jbe
test
stos
sub
mov
and
fldcw
dec
xchg
mov
xchg
popf
out
xchg
in
and
test
aaa
xor
dec
pop
push
incb
pop
jl
shrl
int
into
out
cmp
adc
dec
fs
push
mov
xor
push
xchg
out
dec
add
jl
add
mov
outsl
mov
out
ds
cmp
lock
pop
lods
mov
jb
sub
lds
sbbl
leave
loope
push
sahf
test
data16
push
popa
ret
fildll
xor
dec
mov
out
jp
add
jnp
imul
jl
xor
loopne
clc
pushf
or
xchg
xor
subb
ja
shl
cmp
adc
std
hlt
aas
insl
dec
pusha
pushf
adc
lcall
jmp
inc
sbb
pop
sub
cmp
fwait
movsl
das
jp
mov
ret
mov
repz
sub
jmp
mov
addr16
cmpsl
movb
cltd
movsl
or
das
xorl
es
ret
int
test
repz
push
pop
or
lret
aad
dec
push
cmpsb
push
sbb
cli
hlt
aad
adc
int
aas
xchg
inc
xchg
mov
xlat
loope
xchg
std
les
sub
fdivl
dec
cltd
mov
stos
icebp
stos
inc
pop
sahf
rcrb
and
push
popa
imul
dec
fistps
mov
mov
jmp
cmpsl
sbb
inc
addr16
addr16
es
mov
and
sbb
aaa
jge
sub
mov
scas
mov
rcr
add
add
xor
sbb
pop
xchg
notl
stos
hlt
in
adc
popf
es
inc
sbb
sbb
jmp
mov
ror
scas
mov
push
out
arpl
cmp
jne
jle
inc
addr16
nop
pop
mov
cmc
and
daa
inc
mov
outsl
cmpb
sub
movsb
test
leave
adc
adc
daa
pusha
and
scas
fimull
testb
mov
jl
sub
mov
inc
push
xchg
iret
dec
push
or
inc
dec
pop
push
aaa
mov
aad
popf
repz
adc
mov
es
and
fcmovnbe
fwait
ss
in
lods
jmp
out
daa
mov
arpl
dec
mov
test
pop
add
rclb
xor
out
imul
pop
xchg
aas
cwtl
popl
inc
clc
test
sbb
je
inc
xchg
and
xor
je
testb
rorb
dec
out
add
pop
xchg
sub
inc
jbe
pop
mov
les
je
and
or
daa
push
stos
cmp
out
mov
mov
rcrl
pop
xor
jge
jno
push
nop
cmp
mov
int
and
adc
dec
push
cmpsl
dec
xor
mov
leave
into
fadds
add
sub
subb
imul
nop
hlt
ret
int
add
cmp
xor
data16
pop
in
pop
mov
or
cli
add
mov
dec
imul
sbb
sti
nop
fwait
inc
dec
mov
push
movsl
mov
cmp
inc
dec
push
movsb
dec
push
aas
mov
ret
daa
lret
or
mov
dec
pop
test
xchg
pop
imul
jo
out
std
add
popa
lret
mov
pusha
jle
popf
cmpsl
rorl
mull
xor
mov
and
xchg
in
xchg
icebp
shl
daa
sti
popf
sub
daa
add
ja
xchg
mov
scas
cmp
icebp
int
mov
jecxz
aaa
inc
sub
insb
imul
mov
mov
mov
mov
fidivrs
je
sti
subps
cwtl
loop
add
mov
mov
out
cmp
dec
jns
int
loope
push
call
sti
xchg
clc
xor
xor
stos
mov
lock
add
test
or
xor
mov
mov
movsl
mov
in
add
ja
ret
test
mov
leave
rol
fstp
xor
lahf
imul
pushf
cmp
jl
stos
mov
xor
and
dec
jmp
jne
xchg
minps
in
adc
sbb
mov
in
cmp
ror
hlt
cli
add
adc
xchg
cmc
and
push
pusha
inc
dec
sub
xchg
popf
cmpsl
mov
in
fnstenv
ud0
daa
add
xchg
xorl
scas
call
sbb
clc
loope
dec
push
pusha
js
push
cltd
xchg
stos
mov
mov
mov
lret
inc
sub
cmp
jae
outsl
or
xchg
jg
xlat
cmpsl
mov
or
add
cmp
inc
sub
or
fiadds
lock
mov
and
xchg
cld
or
popf
add
ret
stos
inc
fwait
aad
ds
pop
mov
fsubl
insl
push
push
xchg
xchg
mov
stos
sbb
push
icebp
sahf
and
sub
adc
andb
cmc
cltd
int3
out
aad
add
and
adc
popa
mov
ja
daa
js
insl
cmc
outsb
push
repz
pop
sbb
push
inc
insb
mov
xlat
mov
ficomps
daa
or
call
cmp
sub
add
push
pop
test
jl
push
lcall
inc
adc
sub
adcl
call
jmp
iret
or
ficoml
aaa
js
mov
lods
cmpsb
repz
push
test
dec
push
aas
push
sub
sbb
or
xor
ret
int
xlat
loope
xchg
or
push
pop
sub
xor
ss
iret
jno
push
scas
xchg
xchg
fwait
aam
dec
push
out
sub
inc
jge
jb
jb
cmpsl
sub
ret
testl
ret
orb
out
push
cmc
pop
popf
fchs
or
sbb
push
pop
test
inc
push
sbb
mov
stos
cmc
jmp
cmp
cs
push
inc
fstl
mov
xor
cwtl
loop
sti
shlb
mov
testb
sub
push
in
push
push
fwait
movsl
xor
stos
cmc
decl
cmp
dec
pop
imul
adc
jle
xchg
cmpsl
mov
jge
lods
ss
and
mov
sbb
jge
xchg
stos
hlt
mov
mov
xchg
add
cmp
lret
cmp
loop
jg
mov
aam
dec
jbe
inc
popf
pop
or
pusha
inc
int3
test
xlat
cmpsl
mov
test
sbb
into
out
sbb
rcrl
jp
repnz
add
mov
dec
ds
push
lds
lret
jae
fdivrl
std
jbe
inc
pop
sub
mov
test
sbb
in
dec
lret
adc
add
pusha
push
fwait
movsl
lret
int
pop
mov
add
cmp
push
cs
add
pushf
cmpsb
pop
pop
jl
fsub
and
jecxz
cwtl
in
push
pop
cmp
pop
xchg
push
dec
xlat
outsl
mov
pusha
mov
sbb
adc
xor
push
mov
xchg
mov
out
fbld
fnsave
push
mov
inc
sahf
sub
push
xchg
mov
lret
adc
mov
sbb
push
add
and
xorb
jle
xor
arpl
fsub
adc
push
mov
and
aas
inc
bound
adc
sahf
sub
fstps
xlat
scas
fistpll
loopne
adc
add
push
sahf
repz
mov
pop
enter
nop
lea
jnp
nop
fwait
movsl
fldlg2
add
addr16
int
dec
insl
add
enter
jle
sbb
frstor
flds
adc
xor
pop
test
mov
movaps
sti
add
pop
and
push
push
mov
pusha
lea
jecxz
pushf
loop
lret
xchg
loopne
std
lret
or
push
in
cmp
jo
jne
ret
xchg
adc
loope
into
or
and
cs
inc
and
push
data16
mov
lret
add
push
adc
jae
test
mov
jnp
ret
pop
xlat
insb
call
pop
icebp
xor
inc
dec
push
pusha
stc
je
dec
jno
sti
mov
xchg
rcrl
mov
cmp
adc
adc
loope
and
inc
inc
mov
xchg
lcall
add
hlt
icebp
cmp
icebp
sub
dec
jl
movsl
pop
jnp
dec
enter
mov
ss
mov
nop
fwait
das
scas
clc
jnp
out
and
mov
aam
leave
push
add
insl
dec
push
ljmp
lret
sti
clc
arpl
sbb
or
adc
push
xchg
xchg
mov
xlat
add
and
adc
dec
ja
arpl
bound
iret
or
clc
adc
push
scas
jo
test
jae
cltd
enter
icebp
adc
mov
xor
pop
xchg
jnp,pt
fstpl
sbb
das
add
dec
sarb
dec
push
pop
movsl
arpl
scas
inc
add
mov
push
ficomps
push
mov
daa
bound
pushf
daa
les
mov
aad
cmp
sbb
adc
sub
scas
dec
sbbb
loopne
mov
sub
dec
add
testl
pushf
sahf
aam
adc
lods
or
dec
in
push
dec
jg
xchg
and
aaa
jnp
nop
fidivl
clc
xchg
mov
sar
fisubs
jge
jg
adc
cmpsl
icebp
xchg
mov
and
adc
daa
push
bound
test
xchg
enter
cs
push
sub
ja
xor
cmp
daa
mov
lret
loope
xchg
mov
inc
loopne
cmp
push
jnp
lods
sub
lret
loope
cmp
fists
test
inc
out
sub
adc
mov
das
rcr
out
fwait
pop
nopl
dec
add
jmp
gs
rcr
gs
mov
mov
mov
into
and
pop
inc
lret
aad
ja
lods
in
add
dec
int
cmpsb
pop
cmp
movsb
sbb
lods
enter
pusha
sbb
out
push
pop
xor
testb
rcrl
fisubl
push
fists
popa
sub
dec
pop
pop
sti
pop
addr16
rcr
test
lret
cmc
int3
jmp
mov
int3
xor
mov
enter
pushf
sub
sbb
or
or
rorl
inc
or
movsl
scas
mov
insl
lret
sbb
cs
add
sub
dec
push
aaa
jg
xchg
cwtl
movsb
popf
inc
push
mov
push
sbb
out
dec
lret
adc
inc
xchg
sub
sbb
xlat
loope
cmc
int
stos
ljmp
pop
inc
loop
inc
lret
push
jle
ja
es
jmp
clc
inc
aas
arpl
xor
pusha
movsb
scas
rcl
and
adc
xor
adc
add
or
aas
test
lret
inc
out
jnp
insl
pop
sarl
push
aas
lret
ss
addr16
inc
jb
hlt
nop
int3
pop
loope
arpl
or
cmp
dec
andb
mov
lahf
iret
jo
in
into
sbb
repnz
rcrb
push
mov
mov
jge
imul
aam
jmp
sbb
cmp
sbb
push
je
fcomp
xorb
aaa
ljmp
pop
pop
pop
adcb
xchg
lock
jb
out
fisubs
cmp
lret
aas
and
cmp
xchg
notl
stos
hlt
in
adc
push
es
inc
sbb
push
push
jmp
mov
sub
cmc
cmp
and
cmp
inc
xor
pusha
je
mov
push
out
sarl
sbb
pop
or
jne
mov
movsl
scas
mov
out
adc
clc
fsts
inc
cltd
sub
aad
jo
mov
in
add
call
es
and
jge
mov
mov
adc
inc
cli
cmp
sub
or
lcall
sbb
stos
repz
xor
xor
jg
lods
lods
and
mov
hlt
and
push
dec
mov
enter
mov
hlt
lahf
fcoms
je
jle
or
mov
xchg
sahf
enter
add
add
icebp
xor
push
dec
xchg
pushf
inc
push
pop
orl
in
mov
leave
xchg
fisubrs
xlat
lods
mov
call
pop
jp
inc
or
lea
decl
jo
cmpsl
xor
inc
aad
push
cmp
and
or
int3
aaa
fsubrs
xlat
out
fdivrs
add
mov
push
xchg
outsb
stc
add
mov
add
mov
jnp
inc
std
add
ror
fbstp
std
xchg
rol
data16
inc
sub
pop
dec
pop
aas
xchg
jae
mov
je
or
lret
add
mov
mov
testb
inc
lret
aad
jmp
rcl
push
sub
cmp
and
dec
xchg
push
jl
mov
orl
mov
stc
andb
add
jno
enter
mov
es
dec
xor
xchg
je
mov
fwait
xchg
inc
dec
scas
jg
adc
loop
push
ret
adc
and
adc
mov
cmpsb
out
test
dec
push
aas
sbb
pop
sbb
jbe
sbb
push
loope
outsl
ret
xchg
sbb
xor
sbb
imul
mov
mov
aam
sbb
fs
xor
jbe,pn
mov
stos
mov
int
pop
sbb
jmp
jno
das
pop
addr16
jnp
and
repz
mov
push
mov
mov
in
cmc
dec
daa
scas
mov
ljmp
xor
cli
or
clc
das
jnp
inc
pusha
data16
imul
pop
mov
and
or
out
push
xor
clc
xchg
rol
pop
xor
sbb
cmp
cmpb
cltd
data16
sti
lds
stc
sbb
cmc
stc
pop
das
mov
mov
cltd
lret
push
cmp
add
inc
pushl
jle
pop
jnp
inc
nop
mov
ds
insb
testb
sub
mov
sub
and
repz
push
incb
pop
cmp
int
loope
mov
jg
cmp
or
push
or
bound
push
push
lcall
push
icebp
int
jo
adc
add
imul
les
outsb
dec
push
cmp
cltd
insb
imul
push
sbb
ficoml
jle
adc
push
ss
push
nop
sub
adc
loopne
hlt
nop
ret
insb
mov
pop
inc
and
and
jp
mov
mov
inc
pop
mov
sbb
fsubs
dec
daa
xor
adc
cmp
sbb
out
mov
mov
pop
inc
sbb
popa
sbb
xchg
jge
stos
cmpsl
push
pop
rorl
xchg
aad
inc
and
push
fwait
aas
jbe
and
call
imulb
push
pusha
dec
sub
sub
orl
xchg
and
sti
push
lahf
fildll
push
cs
fcompl
movsl
cmp
es
cmc
aam
mov
lock
enter
aaa
push
js
push
mov
mov
sub
sbb
inc
fsubr
aaa
popa
cmp
mov
mov
cmp
pop
stos
in
xor
shll
bound
rcll
jne
into
scas
ss
pop
add
in
cmp
das
mov
fwait
je
or
and
pop
xchg
pop
jnp
jo
pop
mov
lret
mov
outsb
xchg
mov
dec
out
add
inc
pop
std
cmp
popa
nop
aaa
inc
movsl
orl
dec
loopne
adc
inc
bound
mov
mov
and
inc
dec
sbb
cli
inc
outsb
dec
imul
inc
dec
scas
jg
adc
and
add
sbb
nop
daa
jle
ja
jo
push
xchg
test
loopne
orb
and
pop
push
jl
jae
inc
int
test
push
lods
mov
sbb
dec
out
sbb
xor
pop
nop
fdivl
ljmp
pop
inc
sbb
mov
push
push
fldt
pop
pusha
mov
aas
rclb
mov
xorl
shlb
loop
fwait
in
int
pop
cmp
pop
mov
xchg
jb
pop
fs
ds
or
and
mov
xor
stos
shll
fisubl
sbb
jo
adc
add
scas
int
scas
loopne
sbb
ret
int3
sub
mov
test
nop
mov
mov
dec
adc
sub
fs
push
bound
jbe
addr16
mov
adc
or
push
push
arpl
pop
add
xchg
sub
in
neg
outsb
stos
faddl
ss
add
enter
gs
push
jbe
xlat
loope
jnp
adc
es
adc
sti
loop
dec
lret
push
jle
aaa
js
mov
out
les
and
dec
push
pop
mov
outsb
inc
rcr
movsl
jl
push
mov
mov
out
jnp
in
dec
and
call
into
test
and
nop
arpl
mov
xchg
popa
imul
lcall
push
and
test
dec
xchg
in
lret
mov
lahf
faddp
fisubl
jmp
xlat
sub
xchg
sahf
insb
pop
leave
mov
lods
dec
mov
scas
jecxz
xchg
cmc
rcrb
jp
inc
mov
pop
popa
fdivrp
enter
mov
xchg
shr
xchg
into
or
in
and
adc
mov
test
pmaxsw
add
sub
and
push
dec
stc
add
mov
stc
jnp
out
lret
testl
cld
xchg
ret
pop
lcall
iret
in
adc
insl
add
fs
jle
pop
xchg
fucom
icebp
cmp
stc
xchg
pop
push
push
rcrl
xchg
or
xchg
pop
adc
les
sti
test
mov
pop
lahf
fmull
push
xor
inc
xchg
popa
push
jae
ret
xchg
movsb
fstps
xlat
out
in
xor
xor
aaa
in
jbe
js
xor
test
into
out
sub
sub
fisttps
push
push
shld
mov
push
clc
in
out
cmp
add
pop
mov
pop
int
rol
decb
xor
pop
sbb
xchg
and
jl
sar
xchg
push
inc
icebp
fneni(8087
sub
imul
and
in
or
or
inc
push
sti
add
dec
orb
lret
xchg
mov
adc
addr16
add
jo
jle
xor
cmpsb
gs
mov
sub
pop
imul
movsl
scas
std
mov
xchg
sahf
or
and
jg
test
and
add
xchg
mov
xor
jae
cmp
movsl
dec
push
mov
sub
sub
sbb
negl
outsb
stos
arpl
mov
push
mov
lock
sub
fisttps
adc
mov
into
fwait
movsl
scas
bound
ljmp
cld
cmp
and
and
push
aas
mov
cmpsl
mov
lret
loopne
add
fcoms
sbb
cli
inc
sub
and
orb
in
test
aam
and
cld
mov
xchg
fsubs
iret
shrl
mov
add
jmp
sti
repz
cmpl
mov
mov
sbb
sbb
das
push
mov
jo
lcall
adc
inc
pop
or
imul
sbbl
loop
pop
adc
xor
or
xchg
je
push
inc
dec
cmpsb
mov
shlb
adc
jmp
push
push
and
sbb
xchg
aam
loope
mov
adc
stc
or
mov
into
andl
push
fsubrp
push
inc
dec
push
push
fwait
stos
pop
jae
lods
pop
shll
test
sbb
push
ja
cmp
mov
xchg
mov
es
xor
xor
sbb
mov
js
lock
shr
out
pop
adc
jmp
sub
or
inc
scas
push
mov
aad
xchg
stos
jecxz
mov
ljmp
pop
bound
ja
nop
xchg
dec
imul
dec
adc
out
cmp
inc
push
pop
sub
mov
jl
mov
mov
hlt
icebp
add
pop
test
push
xor
cltd
inc
lea
mov
mov
shrl
cli
and
sbb
movsb
ja
mov
fsubs
testb
cmp
nop
arpl
xchg
mov
mov
and
idivl
sbb
test
jl
aad
jmp
fdiv
loop
add
stos
ret
adc
jg
pop
icebp
or
rcrb
int
ret
xchg
std
adc
and
xor
insl
xchg
sub
popf
cmpsb
icebp
sti
push
xchg
xor
xor
inc
mov
mov
jmp
outsl
les
inc
sub
hlt
inc
xor
imul
push
popf
jge
cmc
mov
jecxz
ss
pop
mov
adc
fwait
add
ret
int
out
stos
cmc
jmp
or
cmp
fisubs
push
jae
subb
add
cmp
lods
pop
imul
out
add
fcoml
repnz
mov
imul
inc
dec
push
out
bound
xchg
les
or
pop
sbb
cmpsl
ds
sbb
arpl
addl
mov
add
dec
loopne
adc
cmc
add
pop
mov
mov
loopne
lock
jmp
dec
gs
test
jnp
and
fs
jle
xchg
mov
push
dec
mov
pop
push
cmp
xor
and
repz
push
lods
int
pop
orl
mov
out
inc
bound
dec
xor
lock
pop
add
ljmp
stos
cmp
and
mov
fcomps
mov
movb
lock
push
inc
jb
pusha
jo
inc
scas
mov
mov
clc
cmc
push
push
xor
pushl
and
fwait
dec
mov
mov
jmp
sti
add
sub
jb
push
nop
dec
rolb
ret
call
es
inc
insb
pop
dec
push
dec
mov
cmpsb
mov
test
roll
test
dec
int
daa
pop
cmp
inc
js
xor
js
and
xor
push
dec
cmp
xchg
dec
bound
mov
repz
imul
dec
push
xchg
cmp
inc
shrl
fucomip
ds
add
mov
adc
mov
enter
mov
outsb
call
push
adc
sbb
and
add
mov
push
sbb
push
jmp
clc
xor
sbb
in
mov
jmp
mov
jae
inc
push
and
mov
pmaxub
jge
cld
test
ja
ss
sub
mov
movsl
mov
xchg
fnstcw
scas
and
jb
xor
bound
jae
pop
mov
lahf
scas
loopne
shrl
cmpsb
sbb
xor
dec
test
sahf
cmpsb
fdivp
pop
lahf
fcomi
loop
push
or
xchg
inc
cmp
mov
jl
cmc
or
xor
dec
adcb
sbb
push
pop
rcll
sbb
push
popa
ds
dec
mov
mov
add
xlat
std
xchg
dec
push
pop
mov
mov
imul
push
pop
fisttps
sbb
out
pop
adc
out
xchg
fwait
movsl
push
push
dec
xchg
js
cmpl
sbb
adc
aas
dec
push
sti
outsl
movq
mov
flds
fdivrp
mov
add
pop
xchg
sub
xchg
xlat
imul
jp
push
mov
fisttpl
sub
jle
and
rol
int
mov
pop
or
sbb
cltd
inc
fwait
jb
mov
insb
push
popa
push
cs
sbb
push
adc
scas
arpl
aam
mov
or
mov
and
popa
jmp
lahf
pop
xchg
ficoml
scas
fistl
sub
sbb
sbb
adc
adc
loopne
push
pop
in
in
in
and
and
or
mov
shll
repz
daa
out
and
and
mov
daa
pusha
cltd
push
mov
das
fiadds
mov
inc
std
xor
hlt
das
gs
inc
jge
movsb
inc
jns
loop
int3
lock
xchg
int
dec
xchg
inc
int
sbb
mov
movsl
lock
in
aaa
rep
call
testl
inc
xlat
loope
mov
jp
scas
out
int
rcrb
push
or
dec
add
ficompl
bound
ljmp
pop
dec
repnz
xchg
sub
pop
movsl
mov
movsb
repnz
push
pop
adc
add
ror
cmp
add
lret
sub
dec
mov
imul
ljmp
rorb
mov
or
inc
in
mov
mov
pop
adc
dec
push
popa
xor
inc
dec
and
adc
iret
cmpsl
dec
push
and
ret
ret
jo
test
or
mov
mov
sti
add
add
sub
in
sub
mov
mov
in
leave
mov
pop
sub
lock
cmpsl
cmp
shl
xchg
ss
sub
and
aam
inc
rcrl
int
je
subl
rclb
popf
xchg
dec
jbe
pop
hlt
mov
rcrl
dec
sbb
ud2
add
sbb
aad
cmp
fildll
mov
lret
xor
lret
je
fs
xchg
mov
mov
mov
xor
pop
pusha
ret
lds
subl
mov
sbb
iret
cltd
fs
sub
into
imul
scas
add
cmp
and
aaa
inc
pushf
inc
dec
push
jmp
ljmp
andb
pop
cmc
dec
shll
icebp
jl
push
cmpsb
loopne
daa
inc
in
pop
jmp
dec
adc
mov
mov
rol
ja
fcomi
js
and
hlt
hlt
aas
insl
dec
pusha
mov
insb
mov
ds
xchg
mov
orl
xchg
add
xlat
mov
xchg
decl
hlt
iret
in
xchg
popf
stc
setp
and
xchg
mov
jl
sub
lcall
pop
sbb
in
dec
push
xor
pop
movsl
xchg
repnz
adc
or
sub
or
ja
loopne
rorl
ret
add
aam
sub
jl
cmp
mov
push
gs
jg
sbbl
or
out
pop
mov
xchg
xor
cmp
nop
xor
push
cmp
pop
shlb
fsubrp
mov
xchg
das
lods
insl
cmp
aad
cltd
aad
sar
ficoms
add
dec
subl
mov
xor
setp
hlt
test
cmp
sub
addr16
dec
lret
adc
add
lds
mov
mov
mov
aas
mov
ret
mov
in
les
mov
cld
xchg
incb
je
add
lods
inc
dec
scas
mov
repz
push
orl
lds
ret
mov
sbb
cmp
cmp
std
mov
cmc
mulb
adc
xor
push
insl
test
popf
pusha
gs
bound
push
fisubl
loopne
mov
imul
fsubl
inc
xchg
and
andb
xchg
mov
add
scas
fimuls
and
fisubrs
test
clc
add
mov
jp
popa
ljmp
xor
daa
xor
loop
aam
insl
aaa
shrl
xchg
sbb
jbe
cmp
decl
rcr
inc
jne
cmpsl
or
mov
push
orl
cmp
inc
xor
in
orl
xchg
call
pop
loope
mov
lret
in
repnz
inc
out
flds
xchg
mov
xchg
fsub
rcrl
rcrl
and
fwait
ljmp
rcrl
imul
push
fisubrs
xor
and
jnp
add
aaa
dec
mov
pop
movsb
jle
aam
orb
insb
xchg
loop
push
pop
mov
jno
int3
movsl
fnstcw
outsb
lret
loope
xor
stos
mov
daa
jno
data16
lods
mov
sub
enter
hlt
test
xlat
pop
in
ss
aad
and
xor
out
repz
aad
jne
jmp
les
das
test
inc
jg
cmp
xor
add
hlt
cmp
xor
and
xor
dec
xchg
dec
pop
lods
inc
rcrb
adcl
xor
out
mov
in
pop
out
arpl
sbb
push
sub
fimuls
push
mov
sbb
jno
push
frstor
scas
ja,pn
cmp
and
imul
inc
stos
or
lods
jb
xchg
jmp
test
push
xor
test
mov
fistl
adc
mov
sub
xchg
fildll
pop
sbb
and
addr16
push
sub
sub
pop
jnp
das
test
xor
stc
ds
fdivl
ja
push
sub
mov
out
scas
or
es
mov
test
fsubl
cwtl
add
cmp
cmp
jne,pn
cld
daa
pusha
cmpsl
fidivs
fldt
aam
pop
adc
pop
cmp
dec
mull
jbe
pop
xchg
mov
mov
xchg
into
sbb
mov
inc
xchg
and
mov
mov
rolb
adc
xchg
fwait
data16
dec
pop
lret
pop
lods
aas
or
or
adc
cs
dec
push
pusha
cmpsl
and
outsb
sbb
lock
repz
es
add
testl
dec
xchg
ret
int
mov
imul
adc
sahf
clc
inc
dec
in
js
rcrb
std
pop
cwtl
mov
dec
int
popw
cmp
scas
mov
ljmp
cmc
cmp
cvtps2pd
addr16
fildll
sbb
jmp
pop
pop
push
push
sbb
out
mov
sub
mov
int3
sub
jne
xor
popf
shrb
fchs
or
pop
xor
inc
outsb
sti
imul
cmc
imul
incb
or
pushl
or
into
cmpsb
daa
mov
in
fsub
cli
mov
jae
xchg
pop
movsl
xor
or
ret
or
jo
xor
test
ja
push
xor
xchg
and
aas
fldt
xor
xchg
sahf
or
ja
rcr
mov
xlat
test
adc
add
outsb
mov
es
imul
sub
adc
xor
jmp
pop
movsb
scas
xorl
mov
pop
mov
mov
es
dec
es
lods
inc
xorb
jmp
sbb
insb
addr16
inc
mov
push
rcr
test
lret
cmpsl
mov
jecxz
push
pop
les
scas
test
mov
ret
lds
jecxz
mov
imul
add
xlat
arpl
lret
cmp
orps
sub
movsl
sbb
xlat
outsl
imul
jmp
dec
push
pop
out
xor
xchg
lahf
cwtl
mov
jne
or
mov
fsubrs
or
stos
arpl
jge
and
xor
push
inc
jae
mov
movsl
outsl
mov
cmp
cld
lods
mov
out
jnp
cmp
push
mov
xchg
mov
jl
fsubs
mov
loope
jb
in
cmc
imul
mov
jp
xor
cli
or
sbb
inc
ficompl
cmp
mov
pop
outsb
in
das
cmp
adc
and
sub
inc
dec
int3
mov
and
fisttps
mull
pop
push
push
sahf
push
fucom
lds
mov
sbb
clc
fadds
pop
adc
cltd
dec
xlat
loope
pop
pop
in
sbb
cmp
xor
test
xor
in
neg
leave
jmp
dec
loop
and
pop
push
xor
jo
dec
xchg
rep
or
call
out
pop
pushl
add
stos
inc
adcb
cmpsl
out
add
push
mov
lods
out
dec
sarb
dec
pop
lock
push
mov
data16
adc
je
mov
sbb
adc
addr16
cmp
je
pop
xchg
push
test
mov
into
arpl
sub
scas
mov
roll
mov
push
lret
push
sti
add
mov
lret
test
scas
repz
pop
add
sbb
sub
xor
push
icebp
or
mov
scas
or
ret
and
scas
cmp
dec
xchg
and
dec
mov
cmp
add
out
add
pop
add
dec
mov
lcall
adc
rcll
jmp
rcr
push
or
inc
into
fsub
jle
add
in
mov
jne
xor
call
mov
pop
popa
lods
mov
hlt
jge
repnz
mov
in
imul
aaa
cmpsl
out
cli
fisttpll
cmpsb
int
inc
fimull
inc
sbb
loopne
sbb
xchg
in
mov
xchg
ret
jb
push
out
and
std
sub
insl
push
sbbb
ljmp
out
std
xor
dec
idiv
je
mov
mov
xchg
shrb
rorb
xor
incb
test
popf
js,pt
xchg
xchg
cmpsb
mov
fwait
and
or
sub
and
jb
sbb
popa
ficompl
cmpsl
daa
data16
dec
andb
push
xchg
popf
mov
push
pop
pop
push
push
pop
add
push
adc
cwtl
gs
jmp
mov
out
shlb
popf
xchg
dec
icebp
popa
add
fsub
in
iret
pop
iret
jo
test
mov
jae
pop
adc
mov
jmp
test
sbb
inc
fucom
arpl
inc
jg
push
je
jne
lcall
push
icebp
int
cmp
adc
fdivl
pop
xchg
orb
dec
push
pop
cmp
xor
push
js
mov
jns
inc
inc
jge
push
in
rcl
xor
dec
ficomps
inc
incl
ja
xchg
jb
mov
mov
decl
add
subps
stos
arpl
push
mov
rcr
jo
lea
cmp
sub
push
push
das
mov
cmp
pop
fwait
loopne
jmp
sbb
inc
xor
sub
mov
dec
and
mov
iret
lss
mov
cmp
pop
pop
pop
subb
cmp
mov
fdivr
cmp
dec
xlat
xor
in
jne
push
jg
dec
shlb
in
orb
imul
movsl
scas
lcall
decl
call
inc
out
repz
cmp
sub
sbb
push
rolb
sbb
pop
or
das
adc
push
pop
xchg
cmpsl
sbbl
aas
dec
push
inc
les
jnp
jl
jno
pop
xchg
aad
jmp
sbb
xor
shll
xor
dec
xorb
xlat
lods
out
cmc
ds
adc
rol
inc
adc
and
mov
adc
and
mov
pop
out
jo
mov
out
clc
add
out
icebp
cli
add
pop
push
clc
mov
cmp
hlt
jns
mov
enter
ret
jecxz
jle
shrb
popa
mov
aas
outsl
pushf
and
loop
in
lods
jmp
xlat
or
push
sbb
jmp
mov
mov
out
icebp
and
and
ss
cmp
test
mov
fsubrp
xchg
popf
sbb
pop
arpl
dec
rclb
pusha
mov
adc
imul
mov
jb
mov
inc
dec
scas
adc
mov
pusha
loope
and
push
out
enter
add
mov
adc
jmp
sbb
sub
adc
jmp
xor
inc
adc
adc
push
imul
sbb
pop
mov
outsl
dec
aad
stos
aam
xchg
sbb
xchg
popa
imul
jecxz
pop
test
jl
dec
test
lock
pop
jmp
sub
dec
ret
xchg
jg
push
addr16
mov
out
mov
push
pop
les
xor
addr16
sahf
mov
fcmovnbe
jns
clc
inc
aad
inc
xorb
jg
adc
mov
cwtd
and
mov
xchg
jo
lock
test
xchg
lret
out
cmp
leave
and
ja
dec
addr16
sub
adc
cmpsl
hlt
call
sub
inc
nopl
insb
mov
xor
shlb
jae
aad
push
loop
add
daa
jmp
std
dec
test
pusha
cmpsb
fs
push
pushf
cmpsb
mov
mov
xor
ss
cmpsb
pop
jae
cmp
fwait
mov
or
push
daa
outsl
daa
xor
mov
or
xchg
adc
jmp
fwait
and
mov
dec
xchg
sahf
insb
pop
rorl
xchg
scas
push
popa
loop
sub
fwait
cmpsl
sbb
jo
dec
pop
inc
in
outsb
imul
dec
mov
in
add
adc
xor
movsl
scas
mov
sub
les
movsb
out
rcr
mov
fs
mov
ss
mov
xchg
popf
mov
fldt
xchg
and
cmp
aaa
rclb
jge
std
push
pop
cmp
int
mov
hlt
bound
sbb
iret
sub
mov
dec
push
popf
dec
cmp
or
pop
popa
ret
and
pop
das
pop
xor
mov
mov
sbb
xor
xor
shll
fcomps
scas
enter
outsb
ss
pop
push
xlat
or
inc
jne
movsb
xor
jno
movsl
scas
pop
fs
push
and
stc
ds
pop
fidivs
xchg
mov
sub
xor
pop
outsb
xchg
stc
inc
dec
sbb
loope
push
mov
inc
add
dec
jle
lock
sub
mov
das
adc
insl
adc
mov
pusha
xlat
dec
nopl
hlt
imul
adcb
mov
arpl
pop
and
out
mov
add
push
neg
mov
pop
sub
inc
push
sbb
sub
ljmp
inc
hlt
cld
jb
mov
xor
ljmp
mov
pop
outsl
ja
pusha
inc
adc
xor
test
mov
cli
dec
add
jb
pop
push
pop
imul
int
incb
sbb
sub
push
je
xor
mov
shl
loop,pn
fwait
loopne
push
pop
iret
xlat
sub
lcall
loopne
pop
movsb
dec
push
and
jmp
xchg
and
rcrb
orl
dec
xchg
rcrb
and
jmp
imul
cmc
imul
adcb
filds
cmp
and
xchg
mov
mov
cmpsl
dec
stos
fistps
decb
adc
je
scas
mov
std
mov
jae
pop
and
cmp
movq
je
dec
mov
les
lret
add
testl
push
dec
cwtl
je
push
lret
sbb
sbb
inc
jp
push
pop
xchg
adc
out
add
sub
xchg
sti
fistps
pop
xor
pop
mov
xchg
pop
xchg
adc
ret
xlat
mov
push
pop
jmp
jbe
push
jle
mov
cmpsb
int3
lods
loop
mov
jb
dec
aas
in
scas
mov
sarb
xor
repz
out
add
ficompl
outsb
or
cwtl
xchg
fucomip
mov
out
jmp
mov
jg
ds
mov
dec
fwait
jp
scas
mov
sub
aam
adc
jg
cmp
fchs
add
push
sbb
ret
cmp
jl
inc
mov
inc
mov
inc
ja
add
cmp
adc
or
insb
inc
into
fadds
aad
push
sbb
test
inc
test
fisubrs
push
movsb
mov
push
mov
data16
adc
int3
and
jns
dec
jle
aaa
lea
cli
mov
and
aaa
inc
adc
sahf
sub
aad
scas
stos
movsl
ror
jp
hlt
cmc
aas
dec
and
sbb
inc
insb
inc
adc
mov
gs
xor
xchg
inc
fistpll
inc
cwtl
xchg
movsl
mov
or
mov
mov
push
mov
aaa
dec
inc
push
or
mov
shlb
pop
rcr
dec
daa
xor
movsb
push
fwait
lea
mov
daa
add
jl
inc
in
jae
gs
pop
cmpsl
mov
push
cwtl
and
mov
pop
incb
imul
movsl
jne
or
rorb
out
jmp
sub
or
loop
mov
mov
shlb
or
shlb
nop
mov
lock
cld
lock
fisubl
dec
adc
xchg
out
mov
push
pop
mov
and
negb
sbb
test
leave
mov
fsubrp
xor
and
aad
cltd
sbbb
jae
push
or
jmp
inc
nop
aad
imul
add
jmp
lock
stos
push
sub
addr16
add
xchg
xchg
gs
sub
into
sbb
sub
lcall
subl
xchg
aad
repnz
jp
jns
ja
pop
jg
enter
cmc
sub
xchg
out
and
dec
push
pop
pop
addb
scas
jb
out
loope
in
sbb
or
aas
out
jnp
dec
nop
mov
mov
pop
repnz
lods
outsl
inc
dec
adc
jb
jge
test
mov
cli
inc
dec
fisubl
cmp
mov
mov
xchg
popf
out
mov
loope
jne
sbb
dec
push
loope
sub
fldcw
xchg
jo
ret
imul
xor
adc
xor
pop
nop
push
pushf
cmpsb
jo
into
addr16
lock
stc
clc
call
jmp
or
loopne
mov
or
repnz
inc
mov
rcrb
cmp
inc
insb
fnstcw
inc
imul
scas
out
mov
fs
test
inc
sbb
xlat
jnp
pusha
sub
inc
pop
or
inc
stc
inc
dec
out
add
es
out
iret
mov
adc
cmpxchg
std
ss
pop
pop
movsl
cmp
fwait
xchg
inc
dec
xchg
cmp
adc
loop
and
das
data16
mov
in
mul
mov
orb
loopne
add
inc
push
cmc
mov
test
dec
mov
daa
mov
add
sbb
iret
push
ret
cmpb
dec
js
and
pop
and
jecxz
jmp
ljmp
shll
cwtl
repnz
cld
adc
jmp
mov
nop
insl
cmpsb
sahf
sub
push
sbb
loopne
add
push
xlat
adc
in
mov
ljmp
cmc
jmp
testl
push
dec
add
aad
cmp
xchg
int3
adc
outsl
cmp
mov
lods
jne
gs
mov
out
clc
add
push
xor
jmp
xor
decb
enter
xor
add
sub
add
sbb
sar
ret
int
push
lea
decl
nop
stos
call
push
pusha
repz
sahf
push
sbb
mov
xor
add
cmpsb
fs
mov
imul
jo
pop
mov
xchg
cmc
jmp
imul
add
dec
inc
cmp
jle
pop
pushf
cmpsl
rcll
lea
and
and
sub
jl
repz
pop
cs
outsb
stc
add
jbe
or
xlat
push
jns
and
rorl
movsl
fildll
loop
out
ret
and
cmp
jp
mov
hlt
in
enter
hlt
nop
adc
push
jb
cmp
loopne
mov
xor
loope
std
sahf
test
popw
test
iret
popf
mov
add
dec
aaa
test
adc
movsb
dec
fucom
lds
mov
aam
jae
xchg
pop
movsl
xor
pop
xchg
mov
adc
sbb
and
xchg
pushf
xor
ficoml
test
fnstcw
or
cld
repz
jo
push
mov
inc
xchg
outsl
decl
call
push
xor
daa
mov
pusha
push
and
fsub
rcrl
test
xor
movzbl
dec
hlt
out
adc
jae
frstpm(287
ret
pop
pusha
mov
out
sbbl
inc
and
dec
jmp
incb
and
xchg
ret
inc
lahf
je
or
orb
decl
inc
mov
cvtps2pd
inc
sahf
mov
std
pop
scas
jge
popf
cmp
cmp
jne
adc
dec
inc
jge
aad
jne
xor
dec
sbb
andb
jae
pop
mov
jbe
icebp
xchg
enter
or
std
les
imul
mov
lds
add
pusha
push
in
dec
pop
cmpsb
mov
xor
pop
loop
mov
testl
test
scas
mov
jmp
in
jne
cmpsl
xor
test
and
insl
ja
sti
pusha
or
pop
mov
push
pop
lock
mov
mov
enter
arpl
jge
dec
ljmp
pop
int
mov
and
mov
lods
testb
jl
push
pop
imul
mov
pop
rclb
sbb
cltd
mov
xchg
lret
aad
stos
mov
jo
lea
cmp
sub
push
push
shl
jg
push
xchg
mov
mov
dec
in
dec
xor
xor
cmpsl
mov
lds
mov
movsb
test
fisubrs
dec
inc
sahf
push
and
xchg
mov
push
loopne
xchg
add
dec
push
xor
push
sbbl
push
pop
rorl
cltd
aad
decl
fucomip
dec
sbb
cwtl
mov
adc
pop
arpl
cmp
push
pusha
mov
xchg
jns
mov
push
and
jmp
push
jecxz
or
jmp
mov
out
stc
or
ficoms
mov
addr16
jecxz
push
loop
mov
cmp
addr16
mov
adc
xorb
sbb
adc
inc
nop
pop
lret
or
and
pop
addr16
push
adc
ja
ror
insl
pushf
jle,pt
jl
sti
lock
push
push
fsubs
sub
inc
pop
addr16
mov
xchg
outsb
mov
jg
jge
push
push
sbb
hlt
divb
xor
lods
cmp
add
aaa
inc
or
xchg
xor
inc
je
jo
mov
shl
or
stos
gs
mov
idivl
mov
enter
scas
adcb
inc
dec
aaa
add
dec
jge
xchg
lahf
aad
cli
and
fs
into
push
mov
rcrl
jno
push
or
inc
das
outsl
jge
rcrb
mov
push
sbb
push
pop
or
push
in
mov
out
stc
add
pushf
add
loop
cltd
mov
xchg
ret
cmp
xchg
incb
push
pop
push
mov
or
jno
scas
mov
stos
hlt
outsb
out
sub
rorb
rcrl
lock
lods
mov
jl
adc
jge
enter
sub
and
loope
xchg
sahf
test
in
xchg
dec
in
push
xor
mov
out
jp
push
inc
and
jne
jbe
xor
iret
pop
fimull
sbb
cli
or
dec
inc
stos
sbb
insb
xchg
jno
mov
add
mov
cmp
or
ljmp
mov
les
mov
int
lods
add
pusha
xchg
fwait
movsl
loope
inc
loope
ds
or
mov
fstpl
mov
insl
xchg
push
xorb
lahf
fisubs
mov
xor
push
lret
cmpsl
jle
sub
lret
imul
cwtl
rcpps
cmp
mov
dec
ds
mov
mov
out
sub
inc
sbb
imul
sub
inc
daa
subl
mov
push
pop
movb
je
inc
popf
xchg
fbstp
enter
out
idiv
in
imul
dec
sahf
cmp
push
test
or
aam
cmp
dec
push
xor
sub
data16
popa
sub
mov
pop
mov
fldenv
xchg
or
daa
dec
dec
inc
dec
int3
out
jbe
fs
int3
in
out
in
cltd
push
dec
push
pusha
sub
push
aaa
inc
push
pop
outsb
rcr
loop
data16
or
and
add
and
pop
call
mov
inc
rorb
les
adc
inc
mov
insl
stos
mov
xchg
xchg
cmpsb
mov
cwtl
out
int
jmp
sbb
aaa
jl
inc
jno
jae
inc
jl
mov
stc
mov
mov
add
addr16
xor
pop
jno
mov
popl
in
fbstp
add
push
flds
lcall
lahf
sub
and
ds
xor
and
add
pop
dec
aad
scas
pop
ret
and
fistpl
insb
sbb
mov
sub
dec
and
push
movsb
adc
sub
jo
dec
orb
mov
jno
xchg
mov
dec
lret
adc
fmuls
xchg
fwait
bound
and
cmc
int3
insb
jno
cmp
mov
orl
xor
and
sbb
push
and
enter
pushf
and
push
loope
gs
xor
fidivl
andl
test
int
push
sbb
inc
fcomps
jp
xchg
pop
jb
popf
xor
adc
jp
xor
or
test
stos
and
je
push
xor
pop
and
call
adc
push
push
lcall
sahf
mov
mov
std
jae
xor
inc
dec
testb
mov
push
xchg
add
add
and
xchg
sahf
mov
sbb
mov
cltd
sub
jo
loop
mov
jg
lcall
mov
xor
jae
dec
xchg
xor
fwait
xchg
loope
mov
and
in
push
stos
cmp
add
push
pushf
pop
mov
lret
leave
shl
not
loope
aam
enter
adc
dec
cwtl
std
or
add
sub
iret
sbb
outsb
std
enter
jae
imul
mov
jb
testb
mov
lret
xor
movsl
scas
mov
sub
cmpsb
jno
repnz
xchg
mov
mov
les
dec
cltd
int3
vmovupd
xchg
inc
xchg
popa
imul
or
and
mov
daa
ds
loop
mov
je
mov
lods
das
leave
xchg
push
int
dec
push
xor
xor
movsb
mov
sub
mov
fisubrs
mov
popa
ljmp
sarl
push
hlt
in
or
adc
add
ja
pop
ror
sahf
out
xchg
lret
xchg
fiaddl
filds
and
xchg
push
popa
cmpsb
inc
test
das
jg
in
idivb
int
lods
add
xchg
mov
sahf
mov
jne
lret
jmp
mov
cmp
push
fildll
mov
push
in
test
inc
fsubrs
lods
adc
xchg
fwait
ret
dec
scas
inc
or
and
or
das
clc
loop
popf
inc
inc
je
mov
cmp
loop
sub
inc
dec
les
outsb
pop
adc
xchg
push
cmp
push
fwait
imul
add
jmp
call
stc
test
inc
mov
dec
push
mov
adc
push
lahf
icebp
inc
dec
push
and
pushf
test
repz
pop
movsl
je
scas
or
fsubrs
xor
repz
rcr
and
xlat
rcl
push
dec
movsl
push
js
mov
aaa
aaa
inc
dec
mov
bound
insb
pushf
and
mov
divb
or
sub
imul
sub
push
cmpsb
out
les
pop
cmp
sub
ret
int
sub
int3
insl
mov
call
pop
arpl
inc
dec
popa
push
dec
dec
cmc
mov
dec
mov
in
sub
inc
adc
daa
xlat
rcrb
imul
pusha
mov
loop
aas
dec
adc
push
fadds
cltd
mov
adc
ret
and
pop
sub
inc
rcrl
mov
popf
out
sub
lea
push
xchg
or
sbb
cltd
orb
add
aad
xchg
cmc
rorb
in
fsubs
repnz
loope
and
add
ljmp
repz
cmpsl
pop
data16
dec
pop
sub
sbb
fstp
out
mov
dec
fchs
or
add
jae
pop
dec
mul
scas
mov
jmp
jmp
mov
mov
and
jecxz
and
fdivrs
sbb
std
or
hlt
xor
jae
dec
dec
popf
or
sub
int3
insl
mov
inc
dec
pop
arpl
inc
orl
jo
lcall
stos
and
adc
inc
scas
xor
lahf
addb
mov
lret
cltd
outsb
pop
jge
mov
mov
sbb
rorl
nop
lcall
and
ret
xchg
popf
sbb
lret
es
dec
arpl
pop
jns
push
mov
fists
dec
push
sub
inc
inc
dec
shrb
xor
das
xchg
loop
dec
loopne
aad
out
adc
sbb
bound
mov
shll
lds
loopne
hlt
rcr
mov
inc
mov
movsl
scas
xchg
jl
movsl
sahf
cmpsb
push
mov
add
jmp
cltd
xchg
fnstcw
xchg
push
lret
xchg
movsb
cmp
loope
cmc
rclb
inc
jae
and
cmp
popa
push
mov
rolb
movsl
scas
xchg
add
das
clc
data16
dec
pop
pop
or
mov
rcr
inc
dec
mov
lcall
xor
add
nop
shll
xor
je
icebp
sub
inc
sub
sub
jl
bound
mov
jae
sahf
call
mov
and
cmc
lds
jnp
loop
dec
jb
jge
push
mov
ret
and
sub
rorl
scas
mov
sub
sbb
jp
inc
es
clc
sub
cmpsl
iret
pop
rorb
sbb
sub
pop
imul
pusha
mov
dec
mov
in
pop
cmpsl
sub
push
scas
dec
ja
mov
dec
xor
clc
mov
jo
mov
adc
out
inc
imul
jmp
sbb
jmp
inc
ss
mov
jge
daa
data16
fs
fucom
setnp
dec
push
pop
push
sahf
test
js
sahf
fwait
mov
mov
enter
xor
dec
add
ror
test
push
sbb
xor
sub
push
cmp
jmp
lcall
loopne
hlt
push
and
xor
push
fsubrl
daa
jno
cmp
cmp
mov
push
sub
out
xor
jne
dec
push
pop
jp
mov
rcr
mov
dec
iret
or
and
mov
dec
push
pop
mov
mov
js
mov
leave
sti
add
add
xor
out
dec
test
xchg
les
decl
adc
lds
aas
inc
adc
dec
out
jg
imul
or
pop
sub
pop
adc
sbb
xchg
pusha
aam
sbb
and
iret
sbb
mov
mov
imul
fisubrs
inc
push
sbb
sbb
lahf
xor
xlat
fimuls
jecxz
sub
sub
jnp
sub
insb
lods
mov
jbe
pop
data16
push
fisubs
ss
fistps
int
in
xchg
cltd
int3
loopne
pop
fs
push
and
stc
jmp
push
sub
outsb
cli
cmp
mov
sub
std
fisubl
inc
dec
push
mov
or
pop
push
aaa
rcr
test
lret
jae
iret
cmp
push
and
inc
insl
inc
add
or
cmp
iret
pop
hlt
sub
and
rolb
xchg
fwait
or
mov
mov
addr16
mov
or
daa
xor
sarl
out
pushf
xor
ficoml
add
mov
ljmp
add
inc
jo
imul
ljmp
sbb
orl
shlb
sbb
movb
jo
dec
inc
sub
insb
imul
in
lahf
xor
xlat
fimuls
jecxz
xor
rol
jnp
test
lret
aad
adcl
push
sbb
fadd
push
or
xchg
inc
pop
jge
mov
cltd
dec
pop
popf
or
and
fildll
mov
subb
sub
fucomip
repz
movsl
jae
and
loope
sub
repnz
cmp
jbe
das
imulb
ret
loope
mov
inc
out
jmp
xchg
dec
and
pop
xor
iret
flds
mov
adc
pop
xchg
xchg
mov
aas
fwait
out
decl
in
in
clc
add
push
mov
xchg
into
fsub
stos
or
fnstcw
push
pop
dec
add
jmp
mov
mov
orl
inc
dec
jbe
insl
xchg
and
fsub
push
pop
fdivrl
and
enter
sub
jb
ljmp
xchg
cltd
sub
sub
and
pop
xor
pusha
stc
mov
jmp
and
pop
cmc
adc
xchg
aas
mov
ret
movsl
dec
pop
mov
pushl
xlat
and
push
dec
ret
sahf
sub
je
data16
xchg
scas
sbb
jmp
or
shld
movsl
fucomip
or
daa
int3
xor
jp
inc
es
clc
hlt
mov
jp
jmp
call
movsb
ficomps
or
cmp
leave
dec
inc
cmc
stc
push
mov
lock
mov
out
loope
cmp
push
pop
lock
pop
pop
jae
fsub
lds
or
mov
xchg
jo
dec
adc
repz
call
push
xor
daa
rcr
sbb
xchg
mov
rcr
jl
jp
js
test
sti
sub
jl
jae
push
jnp
rcr
adc
mov
stos
and
jno
daa
icebp
pop
mov
das
lods
jmp
jne
sub
inc
pop
les
das
sar
mov
xor
js
sub
adc
cmpsl
cmp
and
xor
mov
sbb
push
popa
ss
dec
push
dec
sbb
pusha
cmp
aad
pop
xchg
or
inc
sub
pop
mov
test
sti
jle
or
dec
sub
pop
pop
movsl
sbb
aaa
jnp
stos
mov
xchg
popf
icebp
dec
push
pusha
dec
sub
push
sti
imul
push
popf
jge
pop
mov
sub
lock
es
imul
pop
addl
je
push
lcall
inc
dec
pop
arpl
xchg
mov
xchg
xchg
das
mov
loope
adc
stc
pop
jb
ljmp
xor
mov
stc
add
jno
cld
dec
fsubl
adc
test
pop
sahf
aad
jmp
in
loop
movl
jb
cmp
lcall
inc
xchg
decb
xor
ljmp
jnp
cmp
jge
xor
sti
pop
adc
rorb
lods
in
cmp
call
sbb
scas
fstps
push
and
jmp
and
hlt
divb
dec
mov
sub
and
inc
ds
or
pushf
out
mov
fimuls
or
or
je
or
imul
out
push
fnstenv
inc
pop
imul
movsl
test
mov
lret
out
call
pop
add
pop
add
xchg
mov
mov
loope
in
push
pop
dec
and
mov
xor
sub
out
stc
leave
mov
out
call
pop
addr16
es
push
pusha
mov
das
xor
repz
fdivrs
cltd
aam
mov
push
jg
insl
sti
ret
iret
outsb
and
add
addr16
hlt
dec
fsubs
das
mov
jecxz
and
and
jne
pop
inc
jmp
mov
mov
loope
sbb
sbb
sub
loopne
jo
mov
fucom
icebp
sti
scas
insb
out
and
sub
dec
pop
cmp
pop
jo
outsb
cmp
xchg
sbb
pop
cmpsl
sbb
mov
jae
jno
lea
adc
add
mov
jae
xor
fstpl
decl
adc
icebp
pop
arpl
dec
out
divl
mov
popf
popf
xchg
lock
test
and
clc
jb
mov
pop
jnp
lock
fwait
lds
std
or
aas
mov
inc
cs
addr16
pop
mov
push
stos
or
dec
in
mulb
lods
adc
insb
xlat
fwait
lods
push
pop
mov
ja
int3
movsl
fnstcw
outsb
rcrl
bts
lock
loop
mov
dec
mov
mov
pop
out
pop
out
or
pop
push
popa
imul
pop
sahf
test
mov
mov
in
xorb
jecxz
aam
das
sbb
addb
xor
gs
sbb
out
sub
and
hlt
stc
dec
test
ret
stos
inc
xchg
cmc
inc
mov
rcr
and
pop
jecxz
sbbl
cmpsl
xchg
int
icebp
jp
sbb
inc
push
sbb
inc
cmp
xchg
jp
mov
or
push
rcll
pusha
cmp
idivl
sbbb
fldl
fdivrp
xor
orb
xor
out
popa
push
and
xor
addr16
mov
shll
sbb
loop
fwait
cld
dec
push
pop
cmp
pop
mov
xor
or
jecxz
dec
aaa
leave
adc
in
shrb
jns
lods
outsb
js
sub
fucomip
repz
push
sbb
scas
and
jne
pop
xor
insb
sti
shlb
mov
sub
aam
das
or
pop
sub
mov
ja
cmp
jo
add
aaa
inc
or
insl
dec
rorb
xchg
fwait
mov
xlat
loope
push
aam
adc
and
pop
lds
std
cmp
adc
pop
mov
cli
std
inc
test
dec
imul
scas
mov
pop
lcall
iret
jmp
nop
sub
sub
mov
aaa
cmpsb
out
cli
lds
movsl
or
dec
loopne
sub
insl
iret
xchg
mov
inc
das
aas
dec
adc
les
jne
jo
lret
aad
jmp
mov
sub
cmc
adc
xchg
outsl
movsb
scas
mov
fnstcw
outsb
out
sub
stos
mov
addr16
data16
push
lods
mov
jmp
filds
std
pop
adc
out
or
mov
dec
ds
jne
aaa
inc
mov
or
jmp
and
loopne
jo
mov
mov
rcr
in
lret
add
xchg
push
dec
push
pop
es
add
imul
jmp
cmp
je
mov
arpl
cmpsb
into
mov
push
sbb
push
cwtl
adc
pop
jmp
sbb
cli
cmp
int
inc
mov
mov
dec
pop
xchg
jnp,pn
cmovae
je
cmp
add
sbb
xor
or
inc
push
push
gs
mov
lret
ljmp
push
pop
cmp
push
pop
push
mov
mov
jmp
jne
sub
inc
sbb
sub
push
dec
mov
mov
bound
pop
sub
enter
test
xchg
std
xchg
cwtl
or
inc
or
push
push
addb
aam
lock
pop
pop
hlt
and
xor
pop
addr16
lock
ljmp
lock
sub
add
ret
int
lahf
into
push
cmpsl
add
sbb
mov
push
jle
push
ja
jne
test
aad
iret
js
jmp
sbb
jnp
inc
daa
xor
xlat
loope
mov
test
clc
inc
dec
pop
inc
sub
mov
test
lods
cli
add
icebp
int
bound
fiadds
sahf
test
arpl
push
mov
cwtl
test
adc
inc
dec
and
dec
mov
sahf
mov
into
fdivrs
lret
aas
popf
sub
fildll
pushf
movsb
scas
pop
pop
sub
loopne
mov
sub
repz
dec
daa
xor
out
push
lods
mov
jg
mov
adc
ljmp
sbb
sahf
test
popf
jbe
lahf
in
repz
jae
cmc
ds
push
and
inc
insl
inc
pusha
or
addr16
fnstsw
sbb
aaa
fimull
adc
jae
fs
pop
and
ret
int
loope
mov
or
lds
sub
push
sbbl
push
pop
rorl
push
nop
pop
imul
nop
imul
bound
pop
daa
xor
lock
sbb
idivl
mov
mov
cli
test
fucom
pop
mov
push
push
in
mov
out
stc
mov
cld
or
pop
repz
nop
sbb
fisttps
int3
push
sbb
sbb
push
movsb
scas
mov
outsl
mov
jmp
mov
push
sbb
pop
cltd
mov
test
mov
mov
dec
sub
xor
mov
shlb
mov
push
fucomip
add
dec
push
mov
mov
int3
movsb
jo
or
repnz
and
push
je
jae
mov
or
mov
sti
inc
dec
pop
sbb
addb
daa
insb
xchg
lcall
lret
in
pop
repnz
lock
pop
push
xchg
mov
adc
sub
and
dec
mov
nop
mov
sub
inc
dec
repnz
outsl
cmpb
add
scas
mov
adc
pop
push
pop
addr16
loop
cltd
mov
mov
into
mov
leave
push
mov
pop
jae,pt
jge
mov
movsl
scas
jg
outsb
out
pusha
fistpll
sahf
inc
dec
in
lods
sub
mov
sahf
enter
add
inc
dec
push
dec
jg,pt
xchg
push
jp
adc
imul
lods
adc
jp
loopne
xchg
mov
mov
mov
in
test
fbld
xor
pop
fwait
movsl
scas
xchg
jae
lods
loope
cmc
mov
out
clc
sub
jle
idivl
mov
and
cmpsl
mov
addr16
pop
sub
and
cmp
jbe
ret
int
inc
add
sbb
xor
sub
test
or
push
jnp
mov
lock
adc
mov
cltd
adc
fnstenv
xor
inc
pop
push
incb
dec
mov
shrl
int
into
out
adc
add
xorl
dec
insl
ds
pop
jmp
sbb
fiadds
or
xchg
inc
sbb
xchg
push
pop
sub
icebp
sbb
pop
lea
xor
mov
pop
cld
jg
jns
dec
sbb
loope
rcrl
mov
in
fnstenv
push
and
sub
jo
test
pop
in
stos
mov
adc
mov
iret
pop
out
fucomp
mov
out
data16
mov
jg
pushf
rcll
inc
dec
push
xor
push
add
pop
mov
mov
aam
xor
xor
scas
push
insl
lret
xlat
loope
push
lcall
adc
arpl
inc
ss
aas
stos
mov
jge
aas
dec
mov
add
icebp
int
mov
in
dec
out
mov
imul
aad
and
cld
cmc
iret
and
adc
sub
mov
cmp
push
mov
dec
and
testb
jecxz
imul
mov
mov
call
sbb
mov
pop
dec
rcrl
mov
popf
aam
shrb
stos
icebp
arpl
shr
cs
test
add
movsl
in
clc
add
ds
daa
sbb
int3
pop
mov
enter
jle
jnp
cmp
ljmp
jae
in
fwait
movsl
scas
xchg
xchg
push
sti
shlb
cmp
mov
into
mov
mov
push
in
not
loope
ret
pop
call
mov
jmp
lret
out
call
sbb
add
xor
orb
mov
push
roll
sbb
add
adc
ljmp
daa
cld
pop
mov
rclb
movsl
int
rorb
pushf
push
push
pop
addr16
adc
dec
mov
inc
mov
imull
inc
dec
cmc
ret
xor
xchg
xor
scas
jg
outsb
out
lods
adc
xor
cmp
dec
xchg
mov
scas
sbb
push
popa
imul
mov
nop
sub
or
lret
mov
sbb
cmp
ljmp
js
out
pop
bound
into
or
xchg
dec
test
ret
mov
cmpsl
adc
add
or
iret
push
pop
mov
les
mov
in
neg
scas
mov
in
adc
mov
test
scas
mov
lret
mov
cmp
fnsave
push
sbbb
sub
pop
imul
sub
mov
xchg
dec
xchg
fwait
sub
stc
test
mov
cld
jmp
adc
pop
arpl
sbb
adc
sbb
sbb
jbe
popf
xor
loopne
mov
sub
dec
fsubl
push
inc
ret
nop
mov
pop
jae
and
cmp
clc
mov
sub
pusha
das
inc
icebp
or
rcrb
or
imul
sbb
inc
orb
rcr
mov
iret
pop
test
fucomp
mov
out
imul
jmp
leave
mov
lret
push
and
jecxz
xchg
add
xor
mov
les
sub
push
ficomps
fwait
movsl
scas
push
and
xlat
loope
mov
mov
ret
dec
inc
out
idivl
mov
mov
mov
push
sbb
xchg
add
push
or
jecxz
dec
daa
std
push
jnp
sarl
or
aas
dec
ds
mov
cld
add
ror
cmp
je
rcrb
inc
xor
imul
scas
mov
rcrl
or
and
shlb
mov
shrb
dec
stos
mov
mov
xlat
inc
dec
inc
fs
movsb
loope
push
sahf
test
insb
xchg
mov
or
imul
xchg
out
sbbl
fs
dec
push
sbbl
out
repnz
scas
jle
data16
inc
or
sub
andl
lahf
decl
jbe
dec
cmp
jmp
rcr
pop
mov
push
push
test
push
sbb
adc
fwait
movsl
scas
nop
mov
adc
adc
inc
pop
cmp
mov
pop
xchg
xchg
cli
add
icebp
in
jecxz
adc
mov
mov
fwait
pop
jge
mov
test
jp
shrl
dec
and
sub
inc
adc
insl
hlt
aad
dec
push
xchg
add
mulb
jb
push
lret
jae
xchg
fwait
loopne
lahf
pop
push
xlat
add
out
cs
jae
push
mov
pop
pushf
int3
jecxz
cli
add
push
daa
cld
pop
inc
dec
gs
mov
jnp
rcr
movsl
jg
dec
dec
push
cltd
rorb
std
cmp
cli
aaa
mov
popa
jg
jle
mov
inc
bts
test
xor
pop
fwait
movsl
scas
mov
jmp
fcmovb
outsl
out
in
imul
das
sbb
into
fadds
jp
adc
mov
enter
xor
and
loope
cmc
pop
aam
sbb
cli
lea
cmp
pop
jmp
mov
stc
xor
push
sbb
sub
movsl
pop
push
pop
push
pop
dec
cli
mov
dec
test
stc
xor
les
jnp
in
js
or
aas
iret
les
test
dec
push
pop
push
lcall
movsl
scas
fnstenv
push
cmpsl
adc
cltd
mov
aad
mov
dec
pop
sbb
add
faddp
sbb
pop
cmc
arpl
das
scas
out
clc
add
jmp
jg
std
sbb
test
xchg
or
mov
icebp
sti
add
jle
or
cmp
cmp
add
push
repnz
jbe
mov
mov
cmc
decl
mov
cld
cmp
cli
mov
shll
dec
push
sub
push
sbb
sub
mov
mov
ja
nop
insl
sbb
or
and
and
insl
ja
sbb
jle
mov
scas
cmp
js
shl
and
jl
repnz
mov
scas
lahf
dec
cmp
fidivrs
insb
dec
into
dec
test
xchg
aad
xor
in
loop
in
and
stc
xor
pushf
movsb
scas
mov
ljmp
cmc
ljmp
add
scas
icebp
inc
out
movsb
aaa
outsb
xchg
and
fwait
push
add
cltd
sub
push
test
cs
insb
push
fildll
or
mov
push
cmpsl
cltd
cmp
push
dec
insl
pop
add
out
mov
xchg
push
inc
dec
push
pop
add
cmp
sbbb
mov
push
mov
rolb
mov
cmp
push
add
dec
jle
xchg
jnp
seto
mov
mov
pop
imul
scas
mov
test
aam
sub
repnz
mulps
pop
jns
mov
enter
lcall
repz
sub
xchg
push
inc
dec
jae
jbe
mov
mov
add
cld
lock
inc
sub
aad
jmp
sbb
sub
inc
sbb
insl
xor
lahf
jo
scas
dec
or
jle
hlt
decb
jmp
xor
dec
loopne
adc
push
data16
aas
repnz
mov
fidivl
and
mov
push
push
test
cmp
mov
add
pop
pushw
int3
dec
orb
mov
ror
sbb
pop
imul
scas
push
xchg
fdivrl
mov
cs
and
push
mov
mov
iret
pop
loopne
fstl
or
cmc
lret
xchg
jo
ja
mov
or
repnz
adc
js
inc
mov
pop
stos
adc
out
lds
sbb
mov
and
pop
jnp
lock
fwait
ret
dec
movb
pop
and
xchg
add
push
pop
xor
cmc
pop
je
push
pop
cmp
outsl
in
and
inc
jmp
daa
push
test
jnp
movsl
jne
fs
adc
pop
addr16
fmull
cltd
mov
loopne
stos
mov
and
icebp
arpl
jg
pop
sahf
test
mov
push
mov
jne
add
and
xchg
mov
rcr
out
mov
movsb
sub
and
je
jae
mov
shl
or
enter
add
push
and
push
sbb
inc
cs
fsub
in
cwtl
callw
sub
mov
push
aaa
test
scas
inc
or
mov
cmc
decl
jo
daa
xor
inc
fstpl
dec
jbe
jb
ds
cmp
ja
mov
sub
inc
call
jl
inc
movsl
jbe
arpl
mov
mov
dec
push
pop
addr16
dec
cltd
mov
loopne
cmpsb
mov
and
pusha
push
lcall
mov
mov
jb
add
xor
popa
cltd
mov
sahf
fucomip
repz
out
out
sub
xlat
xor
mov
rcr
test
add
imul
xor
test
mov
insb
stos
push
fs
fucom
pop
roll
sti
clc
adc
sbb
push
sub
jl
xchg
xchg
les
decl
adc
lds
aas
xor
dec
push
dec
in
jg
imul
jo
and
inc
call
jge
push
jb
jnp
test
call
cmp
pop
sarl
orl
mov
mov
add
getsec
sarb
jl
xchg
cmp
jnp
shll
mov
inc
call
or
call
mov
lcall
in
loop
inc
outsb
or
repnz
sub
dec
mov
mov
scas
ljmp
and
and
test
repz
pop
adc
dec
and
aaa
cmp
mov
push
mov
push
and
xor
popf
pop
pop
data16
inc
pop
pop
push
push
loop
jg
outsl
inc
mov
sti
hlt
inc
in
sbb
jge
sub
addb
xor
mov
or
or
lds
jle
xchg
or
test
int3
pushf
in
not
loope
cli
pop
call
mov
jmp
lret
out
call
sbb
add
xor
xchg
mov
insl
stos
lcall
add
push
and
xor
lret
xchg
xor
in
scas
fsubs
pop
and
xor
addr16
xor
addr16
pop
mov
mov
aad
incb
push
dec
cmp
imul
dec
scas
mov
mov
pop
addr16
xor
arpl
sbb
pop
scas
jge
adc
repz
or
pop
push
popa
imul
popa
sahf
test
mov
out
mov
mov
nop
popf
sbb
push
xchg
mov
cmp
and
sti
fdivrl
movups
jae
fs
pop
mov
movsl
sahf
jmp
ret
les
cs
stos
xchg
cmp
add
xchg
push
roll
sbb
in
adc
bswap
and
cmp
jge
cmpsb
cs
cmpsl
jne
daa
xor
adc
and
cmp
inc
dec
and
xor
jno
adc
xchg
add
push
dec
pop
push
incb
dec
mov
shrl
int
into
out
cmp
lods
repz
jno
call
mov
lret
das
stos
jmp
mov
inc
dec
xor
and
cmp
loopne
fistl
ljmp
mov
addr16
test
insb
lods
mov
xchg
mov
mov
jge
fsub
mov
movsl
and
mov
rcr
in
scas
into
lret
lret
jmp
jecxz
adc
sub
mov
dec
mov
in
stc
or
cmp
aaa
fadds
dec
mov
mov
cmc
ficoml
xchg
cmp
out
sub
lcall
sub
loop
iret
mov
int
fcoml
fldz
sarb
mov
cmc
decl
mov
cld
lock
and
push
sbb
inc
xor
gs
dec
mov
sti
lret
sbb
xor
jae
mov
cwtl
pop
test
out
push
aam
pop
and
pop
cmp
insb
dec
push
sub
jle
das
jne
repz
imul
sub
adc
jb
xchg
pop
push
jae
ret
xchg
movsb
pop
cmpsl
adc
sub
jmp
test
cmp
sahf
ss
repz
pop
scas
jge
das
cmp
and
cmp
pop
push
test
rorl
push
and
rclb
cmp
adc
dec
xchg
loopne
jg
cmp
fchs
sub
pop
inc
adc
inc
dec
incl
pop
xor
int
pushf
inc
ljmp
int
mov
adc
je
outsl
testl
scas
adc
mul
mov
outsb
dec
push
inc
lret
xchg
ret
int
mov
lahf
out
call
pop
arpl
jecxz
xchg
mov
xchg
popf
jl
clc
mov
fwait
adc
push
pop
push
je
loopne
cmp
scas
jle
stc
popa
push
dec
sub
and
fsubs
mov
repnz
pushf
jo
dec
les
mov
xor
or
push
jg
jb
daa
pushf
pop
loopne
pop
mov
xchg
mov
adc
pusha
push
stos
inc
adcb
sub
sub
jp
popa
neg
inc
lret
push
pop
cli
adc
inc
enter
stos
iret
bnd
pop
xor
dec
jo
mov
xchg
add
frstor
sbb
fisubl
or
mov
mov
pop
pop
mov
sbb
test
push
and
inc
out
testl
adc
negb
jp
or
xchg
ret
int
lods
mov
inc
mov
mov
in
imul
mov
lock
iret
lds
mov
and
or
cmp
test
push
rcl
in
mov
mov
out
mov
dec
pop
inc
das
jnp
insb
lock
jp
xchg
int
push
cmp
add
mov
xchg
pushl
mov
sarb
mov
fists
push
cltd
mov
aad
jmp
movsb
mov
int
jae
in
push
inc
in
mov
sub
push
sbb
mov
insl
push
incb
mov
iret
pop
rorb
sbb
sub
pop
imul
push
inc
dec
xchg
js
pop
pop
scas
int3
sbb
stos
ljmp
mov
dec
push
mov
mov
aad
iret
mov
cmp
pop
xchg
ret
sub
stos
aam
call
pop
arpl
dec
add
pusha
mov
stos
addr16
xchg
mov
sbb
push
ror
in
mov
insl
inc
in
mov
mov
cmp
sub
push
sub
jle
lea
mov
pop
push
in
rolb
stos
add
xor
and
sbb
mov
ret
insb
js
xlat
xor
or
cmp
dec
in
lods
sub
loopne
mov
adc
mov
testl
jo
dec
sub
shlb
sub
lock
faddl
and
mov
adc
pop
cwtl
adc
lds
xchg
sbb
aaa
ret
insl
es
pop
dec
in
imul
js
push
jl
mov
clc
sub
jle
idivl
mov
mov
mov
push
ret
int
sti
and
dec
aam
xchg
pushf
int
loope
lret
aam
mov
cld
push
out
lds
add
stos
adc
out
lds
sbb
mov
mov
fcompl
jnp
lock
xchg
fwait
ret
dec
movb
pop
and
xchg
add
push
pop
xor
push
dec
inc
cmc
xchg
je
push
pop
cmp
outsl
in
and
inc
jmp
daa
push
out
jae
inc
mov
movsl
jne
fs
cmpsb
in
pop
addr16
adc
xor
and
fucomip
mov
out
jmp
adc
ss
mov
rcr
lds
loop
fists
xchg
pop
in
inc
cld
inc
stc
in
popa
imul
icebp
movsb
in
and
sbb
movsl
mov
dec
xor
aas
mov
mov
dec
xor
inc
add
imul
xor
je
push
lds
jbe
sub
inc
dec
loop
int3
aam
test
pop
mov
data16
adc
dec
imul
fdivrl
add
sti
mov
mov
dec
aam
mov
rcr
in
fwait
dec
fcmovnbe
jae
cld
push
out
les
add
push
stc
pop
xchg
filds
sti
pop
push
out
js
add
sub
and
jae
ret
xchg
movsb
mov
sub
repnz
enter
cmp
js
push
lods
fucomip
ds
inc
cli
push
scas
sub
jne
sub
data16
mov
scas
mov
mov
xchg
in
and
cmp
cmp
orb
shll
lds
lcall
insl
rcl
add
pop
add
je
add
sahf
cli
xchg
clc
rcll
mov
lcall
push
sbb
push
pop
dec
and
add
sbb
mov
jmp
mov
xchg
push
dec
pop
cmp
mov
ja
pop
xchg
ds
mov
add
sti
xchg
xor
dec
mov
push
and
sub
adc
imul
mov
pushf
pop
push
pop
addr16
sub
push
cltd
mov
mov
pop
push
mov
dec
and
mov
cmp
jae
dec
xor
mov
decl
adc
adc
cmp
jl
dec
mov
mov
xchg
scas
repnz
inc
xor
iret
push
sub
andl
sbb
aas
mov
cltd
xchg
xor
dec
mov
cmp
and
stc
sbb
sbb
pop
fsubs
sbb
lahf
outsl
test
pop
lods
int3
sbb
call
dec
daa
pop
sbb
popa
imul
in
test
pop
jp
movb
jno
push
jle
fwait
sub
mov
ja
ret
inc
and
bound
cmp
dec
arpl
fdivrl
sbb
test
bound
mov
and
call
sbb
clc
fdivs
pop
adc
aad
adcl
push
sbb
cld
inc
push
or
outsb
adc
cmp
inc
enter
loop
hlt
push
and
xor
push
pop
int
mov
je
int
xchg
xor
sti
pop
adc
rclb
call
xchg
sahf
insb
pop
xchg
jno
fisubrl
js
jbe
imul
adc
jp
loopne
xchg
mov
mov
mov
in
sarl
mov
xchg
inc
add
add
mov
out
rcr
mov
fs
data16
dec
push
orl
sub
fstps
bound
addr16
call
pushf
and
xlat
loope
scas
push
sbb
cmp
inc
ja
mov
enter
call
xchg
out
dec
aaa
shrb
adc
inc
xchg
aad
cli
push
sarb
mov
jnp
loop
pusha
pop
sti
pop
mov
adc
fmuls
push
xor
shll
push
jg
jb
xchg
cmp
hlt
insb
js
sub
or
jnp
es
push
loope
lret
aad
fwait
test
and
inc
mov
dec
or
cmp
xchg
add
jne
xor
dec
sbb
das
mov
inc
sbb
lods
lds
add
xchg
push
dec
push
pop
inc
pop
cltd
push
dec
push
push
out
andb
lret
in
jno
and
cmp
mov
mov
dec
test
mov
in
testb
fstpl
adc
pusha
aas
jo
cmpsb
cs
cmpsl
jne
daa
xor
adc
cmp
and
push
pusha
inc
dec
and
arpl
push
int3
add
sbb
lret
dec
push
pop
xor
mov
inc
scas
out
xchg
inc
lahf
cmpb
mov
inc
push
pop
addr16
cltd
mov
xor
enter
lcall
dec
jl
nop
lcall
scas
xchg
aam
rcr
cmc
dec
fnstcw
lock
test
repz
shrb
je
and
cld
loope
xchg
dec
jb
xchg
int3
mov
int
jne
push
add
repz
sub
xchg
cli
xchg
popf
jns
fsubs
mov
mov
ljmp
int
mov
mov
inc
dec
aaa
adc
xchg
pushf
cmpsb
mov
or
rorl
jbe
sub
inc
dec
loop
and
dec
inc
push
xor
nop
je
pop
pop
lods
mov
jg
das
cmp
add
loop
inc
and
scas
jle
aam
popf
dec
push
xchg
add
sbb
xlat
pusha
mov
push
faddl
sub
jge
sub
out
stc
pushw
sbb
xor
addr16
test
pop
dec
in
ror
lea
sbb
add
push
xchg
pop
repnz
mov
xor
js
sub
adc
sub
xor
xor
mov
sbb
push
popa
mov
dec
inc
pusha
arpl
ja
xchg
fwait
in
mov
sub
test
jp
inc
inc
fmulp
imul
fwait
xor
ret
jno
and
cmovnp
imul
fwait
xchg
pushf
pop
lods
mov
fidivrs
adcb
sub
dec
push
cs
movq
das
xchg
in
neg
fucom
hlt
in
ss
and
or
jb
scas
mov
push
mov
or
ficoms
mov
cmpsl
or
in
push
fildll
sbb
lock
sti
xchg
jne
dec
leave
or
adc
iret
xor
ja
popf
ret
dec
scas
inc
or
and
or
xor
insb
cmp
cmp
in
imul
mov
jb
inc
rcrl
mov
add
in
dec
jecxz
adc
idivb
mov
push
ss
repz
int3
adc
das
cmp
in
push
pop
mov
es
mov
lret
mov
xor
mov
xor
jmp
cmp
fidivl
and
xlat
loope
push
aam
adc
add
adc
fs
pop
inc
adc
xor
iret
sbb
das
pushl
jb
scas
mov
les
decl
hlt
iret
in
jge
inc
lods
add
ja
sbb
mov
popf
fsub
lock
xchg
rol
mov
ss
das
push
and
sbb
push
inc
test
std
arpl
xchg
xlat
fimuls
xchg
or
or
dec
cltd
mov
xchg
mov
fnstcw
faddl
mov
jb
xchg
pushl
mov
sarb
mov
add
cltd
add
test
mov
enter
sbbl
and
jae
pop
mov
mov
movsl
mov
push
fucomip
xchg
popf
in
pop
data16
das
mov
bound
mov
pusha
iret
sbb
mov
bound
int
jnp
mov
pop
adc
add
add
je
inc
es
popa
jns
test
ss
dec
push
cld
lret
xchg
test
mov
push
cmpsl
and
insl
ja
in
outsb
mov
pop
scas
cmpsl
lcall
fwait
cmc
dec
mov
sub
push
filds
xchg
cmp
ss
out
cs
inc
int3
push
pusha
adc
mov
fadds
loope
das
les
cs
dec
cmp
jae
daa
imul
ljmp
adc
xor
pop
push
dec
pusha
fs
js
push
ss
repz
int3
mov
and
or
xor
push
inc
dec
pushf
or
and
xor
adc
data16
cmp
das
mov
xor
sti
sti
add
ja
fnstsw
in
xor
pop
mov
loope
push
aam
adc
add
aam
or
nop
jecxz
aas
and
stos
xor
loop
testb
sti
sub
inc
and
aaa
out
push
pop
inc
dec
and
fs
into
push
rorl
adc
dec
pop
arpl
dec
mov
jne
mov
enter
lock
add
lcall
push
push
jb
jno
out
pop
inc
notl
ret
and
movsb
pushl
repz
pop
lods
mov
and
std
popa
fcompl
and
rcll
add
inc
push
mov
sub
movsl
scas
and
xor
stos
sbb
jno
sbb
imul
mov
aad
out
xchg
cmp
push
dec
jg,pt
xchg
push
jp
dec
scas
mov
push
mov
jge
adc
ret
orb
rcrl
fstpl
and
pop
imul
inc
pop
jo
pop
inc
mov
jnp
iret
cmp
loopne
iret
dec
jle
xchg
pushf
dec
adc
mov
scas
test
inc
lret
xchg
ret
int
in
lods
fcmovnbe
orb
lds
adc
bound
mov
enter
inc
dec
sbb
push
ficomps
sahf
test
pop
and
frstpm(287
out
push
pusha
fnsave
lods
mov
addr16
jecxz
imul
dec
aam
jns
pop
ss
pop
add
xor
adc
lcall
add
jnp
xor
outsl
lods
mov
sub
std
repnz
or
dec
sti
das
jno
jg
bound
test
xchg
dec
stos
cmp
and
fists
pop
adc
adc
test
arpl
mov
inc
nop
in
repz
cmp
aaa
pusha
adc
cmc
ret
int
aas
xchg
repz
jbe
loopne
cmp
jmp
rcr
xor
add
fdivrs
sbb
sub
add
enter
adc
xor
fucomip
cmc
aam
adc
call
movsl
and
stc
in
xor
jne
cmpsl
mov
mov
jp
and
mov
mov
imul
in
mov
jbe
mov
push
fimuls
xchg
mov
std
dec
cltd
mov
push
dec
cltd
daa
mov
push
loope
shl
scas
add
jb
aaa
push
fildll
popf
jne
imul
rolb
ds
adc
cmpsb
mov
mov
rcl
push
ljmp
int
orl
mov
scas
out
repz
mov
fs
fsub
xor
xor
sahf
ror
or
and
shrb
xchg
xchg
fwait
jbe
into
mov
jb
test
mov
out
pop
cmpsl
and
push
pop
in
outsl
pushf
cmpsb
mov
xchg
pop
scas
cmpsl
stos
loop
iret
fnstcw
fldl
inc
jge
xchg
fwait
inc
adc
test
ror
mov
fsub
mov
int
pusha
mov
xchg
enter
mov
and
add
sub
jl
cs
outsb
mov
ja
push
scas
mov
scas
icebp
adc
sbb
into
xor
and
pop
cltd
aad
jmp
sbb
sub
jne
adc
repnz
dec
xor
outsb
loopne
pop
mov
aaa
xchg
out
sbb
daa
rcr
inc
sub
mov
aad
dec
push
mov
popa
fmuls
jbe
lock
shrb
or
sarb
ds
push
adc
dec
push
mov
lahf
rcr
out
pop
iret
lret
out
push
jle
sbb
or
insb
pop
and
sub
or
mov
xor
cmpsb
mov
sub
popa
in
neg
leave
aam
lods
mull
cld
sbb
xchg
jo
adc
mov
sbb
daa
adc
sbb
ss
shll
jb
lea
mov
rorb
mov
xor
jl
xchg
clc
outsl
mov
xchg
jnp
scas
mov
sub
and
pop
xor
add
ror
cmp
hlt
lods
in
fwait
pop
jbe
pop
iret
xlat
aas
xor
cmpb
loopne
xchg
mov
js
xor
or
cmp
lock
call
mov
cmp
jne
xor
int3
push
sub
mov
jne
xor
dec
sbb
mov
sbbl
lret
inc
cmp
and
adc
pop
fsubs
sbb
lahf
outsl
test
pop
lret
dec
sbb
call
dec
daa
pop
sbb
popa
imul
in
test
pop
jp
movb
jno
push
jle
fwait
sub
mov
ja
ret
inc
and
bound
cmp
dec
arpl
movsl
xor
and
movsl
in
pop
push
sahf
test
mov
mov
add
aad
push
pop
cmp
sub
cltd
sub
xor
add
mov
gs
and
loope
sbb
and
jo
pop
or
fwait
imul
fimull
dec
push
pop
add
inc
test
xchg
mov
mov
mov
ret
and
pop
push
nop
scas
popf
dec
int
jne
xor
dec
sbb
mov
das
cmp
jne
cmpsl
xor
mov
inc
or
in
rorb
xchg
fwait
movsl
pop
pop
cltd
int
loope
mov
rolb
dec
sub
add
aas
dec
ja
push
pop
nop
jo
loop
ds
cltd
jecxz
xchg
mov
inc
enter
pop
aam
test
cmp
jne
daa
xor
es
mov
dec
sub
enter
xchg
pop
iret
push
sbb
mov
push
mov
call
sbbb
in
scas
pushf
or
cld
push
mov
adc
jnp
pusha
inc
enter
test
mov
into
jle
jecxz
inc
dec
xor
xchg
cmp
daa
jg
loopne
inc
fimuls
jmp
xor
test
add
jno
dec
cmp
outsb
js
jge
mov
sti
pop
adc
hlt
movsb
inc
dec
sub
sub
loope
sahf
test
adc
mov
push
mov
ds
inc
sub
or
enter
add
shr
xchg
cmpsb
adc
push
xchg
mov
scas
pop
pop
mov
popf
in
dec
push
pusha
aas
sarl
out
testl
arpl
cmpl
addr16
dec
cs
xchg
fwait
aas
and
mov
fwait
aam
mov
out
dec
in
das
mov
addl
stos
outsl
shrl
js
and
les
sub
cltd
mov
std
mov
stc
repnz
jno
xor
outsl
mov
test
fsubs
roll
push
vmovupd
nop
arpl
loopne
mov
sub
add
test
adc
rcll
mov
rcr
clc
xchg
or
push
popa
or
dec
mov
nop
test
push
mov
iret
ret
adc
sub
xchg
notl
fs
fnstcw
add
out
inc
scas
scas
mov
jmp
decl
mov
inc
dec
aaa
adc
xchg
pushf
cmpsb
mov
push
sbb
xchg
fstpl
ljmp
pop
imul
movsl
popaw
mov
loopne
push
push
cld
sub
subl
mov
fucom
ret
int
jmp
fisttpl
dec
mov
rcr
in
ret
xlat
jae
cld
push
out
les
jg
stc
push
pusha
push
sbb
lcall
outsb
dec
push
xor
jmp
pop
jb
pop
nop
cmp
or
add
ds
mov
add
arpl
sbb
aad
mov
or
shl
out
cli
add
mov
dec
ds
jb
cmpsl
jne
das
scas
inc
jns
imul
pop
and
cmc
push
jmp
enter
sti
sti
add
xchg
pop
adcl
pop
pop
add
int
cwtl
or
enter
loopne
pop
movsl
sub
cmp
mov
in
xchg
mov
pop
jecxz
pop
out
and
lock
dec
or
or
mov
ss
repnz
pusha
arpl
sub
sahf
push
je
pop
lret
lcall
push
icebp
int
call
sub
fisubs
mov
js
in
inc
and
aad
repnz
sub
sub
jnp
aas
imull
mov
mov
xor
arpl
in
sbb
push
lcall
movsl
cltd
mov
int
cmpsl
mov
out
push
aas
enter
cltd
inc
push
add
aad
xchg
add
enter
lock
lret
adc
push
jmp
sahf
test
mov
out
clc
int
daa
loop
xor
cld
std
arpl
pop
xor
js
mov
sti
add
add
test
sub
xchg
mov
adc
lds
aas
cs
push
dec
push
dec
popf
jne
pop
imul
jo
and
inc
call
jge
push
imul
mov
mov
inc
dec
pop
arpl
mov
rcr
out
pop
into
push
sbb
idiv
push
sbb
pop
divb
daa
mov
push
scas
cmp
mov
icebp
xor
xor
cmp
scas
inc
jecxz
ds
scas
arpl
into
incb
push
dec
cmp
imul
xlat
scas
mov
clc
test
stos
and
addr16
and
bound
mov
ljmp
fldt
mov
rcr
scas
mov
int
scas
xchg
cs
loopne
xchg
mov
test
out
rcr
jmp
stc
mov
add
push
or
cmp
jbe
sub
cmpsl
jno
and
cmp
in
sub
sub
jno
push
popa
inc
dec
pop
jns
pusha
leave
push
int3
add
sbb
lret
dec
push
pop
inc
adc
pop
push
push
int
jp
arpl
pushf
sbbl
fldenv
out
inc
iret
dec
orl
push
mov
push
sbb
sub
jmp
lret
aam
mov
sahf
mov
jne
rcr
movsl
mov
inc
sub
and
add
lods
mov
jns
filds
sub
push
out
std
or
clc
mov
adc
pusha
sbb
lea
decb
and
xchg
pop
dec
push
pop
xor
dec
push
dec
inc
fwait
sarb
push
pop
inc
lcall
das
cmp
mov
push
xor
jb
sti
repz
movsl
je
push
mov
repz
and
test
mov
lahf
jl
mov
mov
jge
loopne
leave
sahf
clc
out
ds
jmp
jp
ret
int
push
mov
decl
sarb
out
cs
adc
push
pop
push
add
pop
mov
mov
aam
xor
or
cmp
loopne
cmp
adc
mov
jae
call
pop
rcll
orl
mov
mov
loope
loopne
pop
dec
and
ljmp
ja
push
das
stc
xchg
jae
fsubrp
repnz
dec
jecxz
push
loop
mov
dec
mov
pop
fidivrs
ljmp
mov
xchg
mov
inc
test
int3
mov
ds
push
sbb
dec
pop
mov
js
aad
jmp
sbb
sbb
xor
bound
pop
cs
insb
xchg
leave
lods
cmp
mov
push
daa
sbb
cmp
loop
cmp
jg
dec
cmpsl
mov
mov
adc
push
pop
imul
fwait
xchg
inc
dec
mov
loop
test
or
adc
push
jae,pn
jg
das
xchg
in
mulb
and
adc
jae
xchg
pop
pop
or
mov
pusha
movsb
adc
lcall
mov
xor
sbb
sub
fisubrs
inc
pop
push
insb
imul
adcl
add
dec
push
pop
add
inc
test
pushf
mov
mov
inc
lret
dec
xlat
push
xchg
nop
int3
loopne
test
mov
xor
sbb
popa
cltd
mov
lahf
fucomip
repz
hlt
fsub
mov
add
sbb
pop
leave
mov
jnp
mov
add
mov
push
pop
jnp
das
cmp
jne
enter
jle
mov
leave
shll
pandn
xor
inc
mov
fwait
xlat
loope
cmc
popf
addr16
sbb
not
inc
push
and
das
dec
xlat
popa
imul
in
adc
stos
jecxz
xchg
out
push
pop
dec
aam
xchg
popf
int
loope
aas
repnz
mov
stc
xchg
sbb
push
adc
push
mov
xchg
mov
push
sbb
xchg
add
push
or
gs
dec
daa
and
xchg
mov
int
add
pop
add
inc
test
jle
pop
push
mov
into
mov
or
sbb
xchg
sbb
ljmp
decl
and
adc
insl
inc
dec
pop
sub
push
mov
mov
dec
and
stc
cmp
mov
and
ret
int
repz
ds
push
pop
add
inc
test
jne
pop
xor
fstpl
and
pop
imul
inc
dec
orb
dec
lea
outsl
fiaddl
push
pusha
push
cmp
xchg
jo
cmpsl
mov
jle
lds
int
ss
pop
pmulhuw
cmp
adc
int
mov
xchg
fcmovnbe
add
pop
add
inc
orl
scas
aas
ret
add
rorb
call
inc
pop
xchg
sub
fsubs
pop
and
xor
addr16
sub
addr16
pop
mov
mov
aad
incb
push
dec
cmp
imul
mov
and
pop
lock
out
mov
in
and
mov
jge
pop
insb
jl
push
xchg
fwait
aaa
inc
xchg
add
jmp
pop
xor
and
in
dec
xor
jne
xor
out
pop
bound
inc
mov
pop
imul
inc
mov
dec
push
stos
pop
adc
clc
in
xchg
jl
push
cli
leave
hlt
pop
push
loope
imul
movsb
fsub
in
mulb
ss
loop
sub
cmp
je
pop
les
or
sbb
dec
pop
cs
add
je
pop
push
loope
fucom
ja
mov
lahf
and
dec
mov
rcr
in
test
call
jmp
into
sub
jl
jnp
ror
jns
mov
fdivrs
cld
push
jl
aas
clc
pop
jae
cmpsl
sbbb
push
and
xor
stos
sbb
addr16
sub
sbb
aad
scas
sahf
pop
ja
faddl
loope
and
pop
and
cs
dec
xchg
sti
inc
mov
and
jle
clc
add
push
xor
ljmp
ja
insb
adc
outsl
fstp
out
mov
sbbb
sbb
pop
lret
out
jp
cmp
imul
jmp
sarb
out
divb
push
jecxz
fs
lea
loop
pop
fisttpll
sbb
pop
stc
pop
sbb
sbb
and
inc
daa
xor
pusha
inc
loope
mov
dec
decl
adc
dec
pop
arpl
aas
sub
pusha
push
jae
mov
mov
mov
divb
inc
dec
pop
and
xor
ja
xchg
scas
mov
mov
cld
rorb
test
jno
sbb
pop
leave
aad
mov
sbb
sub
pop
clc
fidivl
push
add
dec
mov
pusha
sahf
inc
or
push
cwtl
sbb
cltd
mov
aad
jmp
movsb
jmp
push
fsubrp
int
push
add
insl
mov
sarb
mov
add
loope
div
repz
and
lcall
inc
test
clc
cmp
inc
dec
push
or
dec
jge
xchg
fwait
daa
push
push
mov
aas
mov
decl
lock
in
insb
cmp
sub
mov
jo
mov
leave
add
iret
jnp
repz
dec
xor
xchg
das
mov
xchg
xlat
loope
mov
push
sbb
mov
arpl
dec
dec
mov
push
and
fsub
lds
adc
or
jl
xchg
sahf
inc
adc
jo
mov
clc
gs
push
cmp
sub
cmp
jmp
fmuls
in
pushf
movsl
add
fnstsw
mov
test
ficoms
and
xor
stos
sbb
addr16
dec
lods
imul
leave
aad
scas
sahf
pop
not
faddl
loope
and
push
mov
inc
pop
mov
rolb
in
clc
add
shrl
xor
xor
adc
push
mov
sarl
xchg
add
xchg
push
inc
dec
push
pop
add
cmp
in
movsl
mov
xor
fcmove
mov
outsb
cmp
xor
sub
add
dec
push
orl
mov
push
roll
sbb
rcll
or
enter
sbb
inc
cmpsb
cs
cmpsl
jne
daa
xor
adc
jnp
and
and
inc
xorb
icebp
sbb
jb
call
mov
out
inc
ret
or
xchg
dec
push
cmp
and
aad
jmp
sbb
cli
into
bound
adc
int
jle
nop
arpl
jmp
xchg
mov
out
js
sub
dec
lock
push
dec
sarl
sub
fucomp
repz
dec
out
sbb
add
shrl
or
adc
rcr
aaa
inc
xchg
add
jmp
push
pop
data16
cs
jl
xchg
mov
xor
lds
push
insl
aaa
shrl
loop
filds
add
ret
int
mov
decl
adc
loope
or
sub
js
mov
in
mulb
ss
jae
sub
cmp
je
cmp
lods
mov
in
jne
daa
xor
inc
in
mov
fcoml
jl
shl
lcall
scas
es
push
fs
mov
scas
pop
pusha
mov
out
mov
dec
jp
xchg
test
lret
aad
adcl
push
sbb
lock
or
xchg
inc
and
mov
movsb
iret
push
mov
cmc
cmpsb
in
pop
addr16
out
xchg
mov
mov
xchg
repz
or
mov
sahf
insb
pop
xchg
sub
fisubrl
js
jbe
and
jmp
data16
and
gs
mov
mov
mov
in
sarl
mov
xchg
inc
add
leave
mov
out
rcr
mov
fs
lahf
aas
dec
push
orl
mov
push
aam
push
sbb
mov
and
inc
inc
repnz
movsl
scas
mov
jmp
call
out
stc
repnz
push
xchg
sbb
fstps
xchg
mov
xchg
popf
mov
out
or
add
jb
pop
pop
pop
out
jge
jno,pn
out
stc
aam
ret
shr
repnz
pop
cmp
xor
cmove
pusha
lods
adc
aad
dec
push
cwtl
add
xchg
push
dec
push
pop
push
outsb
movsb
scas
popf
js
cmp
idiv
or
lret
sbb
jg
fnstcw
clc
sub
pop
rcrl
mov
xchg
lret
aad
jmp
sbb
sbb
es
dec
sbb
bound
out
clc
add
jne
xor
dec
sbb
das
mov
inc
sbb
xlat
cmp
jno
lds
jle
lcall
cmp
pop
bound
jmp
decl
mov
add
cmp
xor
xor
cmpsb
mov
sbb
cmpsl
mov
mov
sti
mov
cltd
mov
ficoms
fwait
movsl
test
dec
push
mov
faddl
adc
inc
pop
cmp
sahf
stos
mov
sub
fstpl
pusha
inc
dec
mov
mov
push
dec
shrl
int
jle
das
aas
dec
and
sbb
inc
insb
inc
fs
je
or
std
pop
loop
mov
testb
or
into
xlat
inc
mov
lcall
test
sub
adc
xor
inc
ficompl
and
fstl
pop
adc
push
stos
ret
adc
lcall
mov
and
mov
sarb
loopne
scas
orb
push
mov
mov
sub
sbb
dec
and
pop
pop
or
mov
test
sar
fprem1
lahf
cmpsl
cli
pop
pusha
push
cmp
dec
sbb
push
das
cmpb
ss
dec
repnz
xchg
addl
lods
mov
adc
pop
dec
pop
arpl
jecxz
xchg
mov
movsb
popf
nop
dec
sub
shrl
fistps
mov
cs
out
stc
add
aas
lock
sub
jno
xor
add
ror
jns
mov
int
or
clc
mov
adc
pusha
sbb
xchg
xchg
fwait
push
lret
push
and
xchg
pop
dec
push
pop
xor
push
dec
inc
fstsw
push
pop
inc
lcall
das
cmp
mov
push
inc
jg
jb
sti
add
mov
repz
popf
cmp
ret
orb
sarl
movsl
xor
xor
or
or
xchg
fwait
movsl
mov
test
loope
mov
dec
outsl
std
or
pusha
or
pop
mov
ror
mov
flds
fdivrp
cwtl
sub
inc
jae
xchg
cld
pop
test
ret
mov
shr
loope
ret
ljmp
ja
and
jge
dec
clc
add
jp
add
inc
dec
aaa
sarb
jl
xchg
cmp
js
shll
jo
mov
xor
shrb
bound
subl
jp
repz
fdivrs
lcall
int
sub
mov
scas
pop
fs
or
cmp
dec
cltd
sbb
rorl
pop
pushf
jle
jo
add
mov
pop
cmc
bound
mov
scas
mov
lods
jmp
cmp
orb
add
mov
mov
addb
and
xor
push
dec
incl
pop
ret
ret
int
pushf
cmp
lock
jmp
popf
lock
push
pusha
aas
xor
xchg
push
nop
dec
in
mov
out
ljmp
aaa
imul
jo
stos
jge
mov
loope
or
arpl
fstps
xchg
mov
xchg
xchg
mov
xchg
cmp
push
in
inc
adc
jb
movsl
scas
fsubs
pop
and
xor
addr16
fimuls
mov
xchg
pushf
jo
pusha
les
sub
mov
sbbl
sti
pop
fstpt
ljmp
incl
and
rclb
push
or
xchg
gs
fdivp
rcr
mov
call
sub
xor
cmpsl
das
lcall
add
mov
outsb
jp
push
mov
ja
mov
enter
pushf
or
lcall
cmp
push
mov
mov
in
jno
and
cmp
mov
cmp
jl
jns
rcrl
out
sets
dec
push
pop
imul
movsl
xchg
lahf
cwtl
mov
in
lret
mov
aas
cmpsl
sbbb
cs
icebp
inc
adc
insl
cs
cmpsl
mov
imul
fisubrs
jl
dec
sbb
fwait
movsl
orl
add
sub
mov
lods
cmpsb
repz
mov
push
das
or
bnd
cmp
lcall
imul
sbb
mov
push
ljmp
jnp
cmp
push
mov
test
fsubl
push
mov
adc
adc
jg
lods
scas
pop
and
or
cmp
mov
mov
push
cmpb
xor
sti
lds
stc
sbb
push
xchg
lods
add
outsb
les
jp
cmpsb
adc
pusha
push
jecxz
xchg
pushf
cmpsb
outsb
movsb
popf
mov
scas
mov
aaa
sarb
jge
xchg
cmp
mov
mov
shlb
mov
addr16
fs
dec
push
push
push
xchg
mov
add
mov
divb
inc
dec
pushl
std
push
arpl
sarl
or
cwtl
idivb
addr16
ret
pop
or
lret
aad
xchg
inc
out
into
clc
xlat
repz
lock
lods
call
lcall
loopne
hlt
pusha
xlat
push
and
xor
cld
std
dec
clc
jno
inc
dec
mov
push
jl
fucomip
sahf
adc
rcr
lods
add
imul
push
xchg
sahf
test
fs
fwait
aaa
inc
xchg
add
jmp
pop
xor
and
xchg
mov
xor
iret
xor
lcall
cmp
pop
bound
test
les
sbb
mov
mov
pop
mov
mov
loop
sbb
or
or
jge
dec
cwtl
fsubr
mov
gs
lret
mov
cmp
pop
add
push
orl
mov
lcall
sbb
dec
aam
mov
rcr
in
scas
pop
fcmovnbe
jae
cld
push
out
les
jg
xlat
push
pusha
push
js
cwtl
hlt
cmpsb
mov
gs
mov
adc
nop
arpl
adc
xchg
popa
imul
int
add
addr16
out
xchg
mov
fucomip
pop
addr16
pop
cmp
mov
push
pushl
mov
rorl
push
and
xchg
adc
retw
int3
ds
xchg
xchg
inc
mov
loope
mov
iret
pop
call
mov
out
jbe
scas
mov
jmp
cli
dec
add
inc
sti
lock
push
xor
cmpsb
push
pop
xchg
jo
loop
pop
into
lods
sbb
pop
xlat
add
adc
xchg
test
shrl
fimuls
pop
cmp
negb
dec
push
ss
jle
cltd
aas
dec
mov
add
icebp
int
popf
add
aad
daa
mov
imul
ret
jo
fstl
aas
sbb
lcall
pusha
lods
cmp
out
int3
push
xchg
sub
testl
orl
gs
lods
cmp
int
iret
lock
adc
fcoml
xor
cltd
mov
adc
pop
cltd
adc
rolb
xchg
sbb
inc
ret
cld
jbe
ss
push
pusha
cld
insl
jb
sbb
in
mov
fisttps
loopne
cmp
test
mov
pop
enter
sbb
mov
add
fadds
pusha
sub
js
push
lret
sbb
push
test
mov
jmp
cltd
jo
scas
cmpsl
push
pop
scas
or
and
icebp
pop
out
pop
dec
and
jle
jb
or
jl
cmc
fidivrs
fsub
cmp
sub
pusha
stos
adc
dec
push
xchg
add
sbb
sub
or
pop
push
scas
test
popf
je
cmp
repz
jg
out
out
loope
sbb
lret
aad
jmp
sbb
cli
sti
arpl
adc
mov
and
arpl
and
xor
stos
sbb
addr16
cmp
scas
mov
sti
jae
out
cli
popl
inc
inc
ss
adc
dec
enter
out
pushf
movsl
inc
dec
pushf
or
and
fisttps
mul
sbb
push
ja
loopne
mov
cmp
iret
ja
hlt
fucomp
mov
out
inc
scas
scas
mov
test
fdivrl
jnp
dec
mov
mov
imul
lret
pop
sub
fnstcw
mov
dec
ficoml
hlt
in
mov
lods
mov
imul
cmpsl
or
dec
xlat
pusha
push
insb
sahf
bound
mov
or
mov
and
xor
inc
inc
ljmp
ja
add
or
pushf
pop
push
pop
addr16
loop
cltd
mov
mov
into
mov
loopne
pop
mov
sub
pop
imul
and
hlt
jecxz
rcrl
ljmp
pop
les
mov
pusha
inc
int3
mov
repz
int3
mov
and
or
cs
push
rcr
test
lret
cmpsl
mov
popf
or
ljmp
mov
outsl
fstp
out
sti
outsb
out
and
divb
fs
pop
or
mov
lea
inc
adc
sub
sub
pop
xchg
pushf
cmpsb
mov
sub
mov
mov
call
sub
jo
cmpsb
cs
cmpsl
jne
daa
xor
adc
js
and
push
pusha
inc
dec
and
fs
push
int3
add
sbb
lret
dec
push
pop
xor
fwait
pop
push
inc
scas
or
xchg
inc
lahf
std
pusha
out
xchg
fsubrp
xorb
jne
cs
cmp
pop
js
loopne
xchg
inc
inc
mov
pop
push
in
ror
xchg
add
fsubrp
add
inc
push
cmpl
inc
loopne
and
xchg
mov
push
fcoml
cltd
mov
aad
jmp
movsb
xchg
add
fsubrp
int
or
push
mov
scas
jecxz
fistps
out
pop
cmp
xor
orb
mov
mov
sti
add
aaa
inc
dec
adc
jmp
ficoml
fwait
movsl
xchg
push
and
pop
shlb
and
xor
push
mov
xchg
push
sti
test
ss
dec
mov
adc
mov
xchg
adc
int
nop
add
in
jne
lds
cmp
ja
jmp
mov
popf
cmpsl
push
pop
lods
xchg
and
and
inc
push
push
jns
jae
and
aad
out
int
xorl
aam
and
enter
mov
mov
cmpsl
scas
out
pusha
push
add
dec
and
int3
lahf
scas
aad
ror
pop
loope
cmc
ds
pop
fsubs
add
push
mov
mov
inc
lret
push
pop
mov
push
push
fwait
movsl
mov
dec
sub
test
cmpsl
lcall
push
xchg
or
mov
sti
hlt
movsb
test
imul
bound
xchg
sarb
push
rorl
adc
and
popf
and
dec
dec
popa
pop
push
pop
cwtl
xchg
jg
imul
fnstcw
icebp
mov
adc
call
lcall
pop
rcll
jnp
jo
inc
sbb
inc
inc
cmp
in
xor
jle
cmpsl
mov
mov
add
neg
pop
sbb
ret
jp
xchg
jae
out
xchg
ret
fnstenv
aas
mov
fsubp
sub
and
std
xchg
aad
data16
inc
sub
pop
iret
xlat
sbb
out
mov
imul
leave
ja
mov
cmc
and
jnp
lock
mov
stos
sahf
xor
rcr
lods
mov
hlt
inc
mov
push
cmp
aaa
jl
sahf
dec
lds
mov
mov
cli
pop
adc
loopne
add
mov
dec
and
mov
psubusw
mov
sbb
pop
xchg
cmpsb
sub
cmpsl
jno
and
cmp
and
push
cmp
dec
push
sub
pop
in
mul
jo
and
inc
call
jge
inc
jbe
jo
stos
ljmp
mov
inc
dec
pop
inc
sbb
mov
xor
adc
add
jmp
xor
pop
pop
push
incb
dec
mov
shrl
int
into
out
and
repz
jno
test
mov
cltd
mov
int
xchg
out
ret
and
dec
dec
cmp
scas
mov
scas
mov
cmc
loop
sbb
mov
pop
dec
rcl
mov
push
icebp
dec
shr
xchg
cmp
push
dec
inc
jg
xchg
push
jp
add
imul
scas
ds
cmp
mov
test
push
aaa
adc
jecxz
xor
push
push
push
lods
jbe
mov
mov
cmc
decl
mov
add
cmp
push
add
cmp
dec
push
sub
stos
xchg
and
imul
inc
cmpl
cmc
aam
adc
call
les
cmp
divl
mov
enter
lock
add
rol
sti
jmp
mov
sub
sub
mov
push
aaa
test
rcrl
push
pop
pop
aas
cmp
in
xor
lods
mov
jbe
cmp
xchg
mov
xchg
pushl
mov
sarb
mov
loope
fcomps
negl
pop
mov
int3
fsubr
lds
cli
xchg
scas
repnz
inc
xor
clc
push
inc
int3
and
sub
dec
lock
jo
test
inc
outsb
imul
xchg
popf
jns
pop
mov
jbe
ljmp
jae
fs
stc
subb
out
and
stos
rcrl
and
call
push
fsts
pushf
cmpsb
push
pop
mov
jnp
fs
and
repnz
sub
cmp
dec
inc
hlt
cld
dec
lods
mov
push
mov
ljmp
and
insl
ja
in
popa
mov
movsb
fsub
lock
mov
mov
jmp
jl
inc
pop
jge
xchg
data16
fwait
inc
dec
std
or
aad
adc
adc
push
mov
aad
inc
mov
mov
in
in
push
pop
dec
sub
inc
insb
sbb
fwait
inc
push
xchg
add
in
dec
adc
in
pop
jo
pop
cmp
or
test
lods
fsub
mov
scas
jns
and
loope
xchg
sahf
test
pop
sbb
xchg
lods
fcom
aad
sbb
pop
jecxz
ret
loopne
pop
popa
imul
shrl
sub
sbb
xor
scas
mov
jmp
test
pop
inc
dec
push
pusha
sti
cmp
dec
jns
jl
mov
lret
testb
mov
push
aas
sbb
push
pop
cmp
sbb
je
loope
lret
scas
fsubrp
adc
or
fs
imul
test
lock
and
pop
cmp
xor
and
frstpm(287
out
stc
pushf
push
and
xor
addr16
pop
in
mov
addb
shl
cli
shl
and
nop
arpl
xchg
xchg
mov
mov
mov
addr16
test
out
outsb
xchg
and
fwait
push
test
jne
das
dec
bound
pop
mov
add
lret
cmc
push
repz
daa
sbb
rolb
add
mov
enter
icebp
sti
add
push
inc
dec
xor
adc
dec
xchg
cmc
fcmove
fwait
adc
clc
fsub
push
imul
or
into
mov
mov
mov
adc
xchg
ret
int
lods
mov
inc
inc
repnz
fsub
mov
in
imul
cmpsl
out
cli
and
pop
cmp
xor
and
in
lahf
inc
jmp
and
jecxz
sbb
add
in
xor
lods
mov
jbe
stc
cmpsb
mov
mov
fsubp
and
nop
arpl
xchg
int
mov
jmp
mov
xor
xor
dec
lds
das
cmp
clc
mov
sub
push
adc
jb
jle
fwait
in
xchg
add
jae
iret
cmp
push
and
orb
rcr
sahf
mov
sub
push
and
mov
cmc
decl
adc
dec
xor
inc
add
imul
xor
mov
frstor
sbb
sub
fisubrs
pop
lock
data16
push
mov
or
cld
adc
jecxz
xchg
mov
pushf
fsub
lock
jecxz
fucom
ret
int
jmp
outsl
dec
aam
mov
rcr
in
ret
je
sub
xor
test
xchg
shr
mov
test
pop
jae
loopne
jecxz
and
loope
and
jb
dec
repz
adc
loopne
mov
or
repnz
or
dec
inc
loop
cmp
jl
inc
mov
mov
mov
adc
sbbl
nop
pusha
push
mov
jg
ds
push
pop
add
inc
test
jne
pop
cmp
fchs
or
outsb
add
data16
mov
sub
jmp
sub
cmp
hlt
aas
dec
stc
add
mov
mov
lds
enter
pop
push
mov
xchg
and
dec
test
mov
or
cmc
xchg
arpl
sub
mov
scas
cmpsl
push
pop
stos
add
lods
in
and
inc
rclb
add
sarl
inc
nop
in
add
aas
dec
push
pop
icebp
xor
mov
pop
fucomip
repz
loop
fimuls
cmp
pop
das
cmp
rcrl
or
and
shlb
sbb
pop
sub
sbb
mov
in
and
mov
dec
xchg
or
xchg
add
jne
xor
dec
pop
push
clc
into
das
cmp
hlt
outsb
stos
mov
test
sti
add
hlt
decb
cmp
dec
add
in
pop
mov
add
inc
dec
push
add
inc
jle
xchg
pop
mov
mov
push
int3
add
sbb
lret
dec
push
pop
and
inc
push
xor
sbb
xchg
pusha
aad
sbb
adc
cli
inc
pop
jecxz
xchg
mov
popf
fsub
lock
inc
rcrb
call
gs
ficomps
sahf
test
push
and
frstpm(287
out
mov
mov
cmp
pop
dec
push
sbbb
int3
mov
imul
sub
adc
xor
adc
jae
fcomps
idiv
or
lret
add
xor
fwait
push
dec
js
jg
ror
jge
mov
pop
or
add
faddp
sbb
loope
adc
push
iret
test
xlat
push
and
jmp
sbb
xchg
mov
rcr
out
jmp
sbb
push
sub
scas
jbe
imul
mov
addr16
and
sbb
mov
pusha
push
aas
mov
std
imul
xor
loop
mul
mov
inc
or
shll
cmp
scas
mov
mov
decl
mov
fsubl
lds
orl
or
lds
inc
dec
push
pop
push
aam
mov
xchg
insl
mov
pop
and
into
pushf
adc
mov
jle
pop
cltd
aad
jmp
sbb
sub
imul
jmp
sub
xchg
sbb
ljmp
push
imul
or
mov
cld
fadd
inc
add
xchg
scas
repnz
inc
xor
mov
jb
dec
mov
int
jne
xor
dec
sbb
mov
das
cmp
jne
xchg
sub
nopl
push
xor
pop
xchg
jle
popa
loope
shlb
xor
inc
and
popf
mov
and
jb
or
int3
add
sbb
lret
dec
push
pop
inc
dec
pop
pop
push
push
int
jp
arpl
pushf
ret
mov
jne
daa
xor
inc
in
mov
push
pusha
jg
je
sub
mov
add
jb
mov
rcr
outsb
movsb
lahf
sub
fidivrs
sti
pop
out
cmp
divl
mov
test
cmp
into
sbb
mov
add
cmp
jb,pt
xchg
ret
inc
cmpsb
je
or
mov
fnstcw
jp
inc
faddp
lret
xchg
lods
div
pop
pushf
cmp
and
push
popa
imul
mov
rcr
scas
mov
jne
xor
dec
sbb
mov
das
cmp
pop
ja
xor
sti
sti
add
out
and
sbb
and
sti
cmp
scas
mov
jmp
jmp
cmp
out
ss
jecxz
xchg
pushf
cmpsb
mov
cmp
icebp
stos
ljmp
inc
sbb
push
incb
pop
mov
int
mov
pop
ror
mov
movl
daa
arpl
jbe
lock
fnstsw
and
rolb
xchg
sahf
test
subb
in
mov
idivb
xor
les
jnp
fs
lea
cmpsb
mov
lods
sbb
sub
out
mov
xor
incl
mov
popf
cmp
xchg
stc
mov
lahf
push
xchg
adc
cltd
test
mov
aad
stos
xorl
sub
xor
mov
shlb
mov
cli
fucomip
add
xchg
mov
rcr
out
mov
fstp
fldenv
and
insb
xchg
xor
add
pop
cmpsl
and
push
pop
in
jno
cmpsb
mov
and
mov
ret
int
lods
clc
xchg
imul
scas
jp
sbb
ds
sub
or
jg
xor
inc
dec
test
inc
psubusb
mov
ret
push
sbb
xchg
add
push
sub
dec
dec
hlt
cld
aas
lods
mov
mov
or
jnp,pn
and
pop
rcr
jmp
sbb
sub
rcll
add
inc
push
or
push
int3
test
push
cmpsl
jb
add
xor
popa
cltd
mov
sahf
fucomip
repz
out
out
sbb
xlat
xor
jo
ja
rcr
test
add
jmp
leave
add
std
dec
andb
movsb
or
mov
add
sbb
or
inc
movb
xchg
fwait
dec
or
pushf
sbb
stos
add
push
sbb
xchg
pushf
cmpsb
push
pop
mov
fisubrs
fnstcw
mov
and
jge
jo
ja
mov
mov
decl
adc
mov
inc
cli
sbb
and
add
enter
daa
cli
add
out
ja
mov
push
mov
jae
jbe
mov
mov
add
mov
push
pop
inc
pop
cmp
lods
mov
sub
movsl
outsl
in
sub
push
push
hlt
xor
and
js
lcall
dec
pop
mov
int
cmp
ds
push
cli
enter
pusha
pop
dec
mov
mov
mov
repz
movsl
pop
push
popa
imul
pop
sahf
test
xchg
ja
int
cmpsl
mov
jecxz
cmpsl
inc
sbb
and
add
fstpl
and
pop
imul
inc
pushf
sub
repnz
cmp
mov
inc
add
jne
sub
mov
and
cwtl
adc
pop
imul
movsl
scas
push
jg
xlat
loope
cmp
aam
mov
pop
arpl
daa
ret
xchg
mov
xor
int3
mov
in
pop
push
pop
imul
mov
and
jnp
in
pop
mov
cltd
mov
int
sub
in
push
pop
dec
xlat
push
xchg
nop
int3
loopne
leave
mov
arpl
xor
sbb
inc
stc
in
mov
cmpsl
fucomip
repz
movsl
jae
and
clc
xor
repnz
pop
cmp
jbe
push
mov
mov
enter
push
pop
xor
dec
inc
imul
xor
iret
fldenv
xchg
or
aas
adc
dec
int3
dec
insb
jbe
fs
xchg
cwtl
movsl
cmp
add
mov
mov
test
xchg
mov
jb
inc
dec
xor
pop
xchg
fwait
movsl
scas
push
and
xlat
loope
mov
mov
sbb
ja
inc
mov
lcall
ficompl
and
movsl
sbb
pop
push
sahf
test
adcl
mov
sbb
adc
add
jg
in
mov
scas
arpl
into
incb
push
dec
cmp
imul
xlat
jle
mov
clc
test
stos
and
addr16
and
bound
jbe
stos
sahf
xor
fwait
hlt
mov
xchg
out
clc
mov
xor
test
and
xor
fucom
shrl
inc
sbb
ljmp
jae
bound
cmp
mov
div
jmp
fdivrs
push
aas
sbb
dec
push
mov
mov
jecxz
cwtl
adc
pop
imul
movsl
xchg
lahf
cwtl
mov
faddp
lret
mov
or
xor
mov
add
popl
cmc
out
int
scas
or
in
dec
push
jg
outsb
cmp
rcrl
int
add
pop
add
inc
test
inc
lret
aad
fsub
mov
xchg
fldcw
push
aas
fistl
test
popf
xchg
decb
and
xchg
or
pop
adc
xchg
inc
dec
pop
add
xlat
lea
std
pop
scas
jge
das
cmp
scas
jg
ss
sbb
jb
cmp
mov
popf
adc
data16
and
bound
out
xchg
popf
jns
stos
into
dec
fchs
sub
sbb
ret
leave
xchg
sub
fcomps
adc
and
fldenv
push
cmp
push
add
mov
xchg
out
testl
jae
xchg
cld
jle
mov
mov
fsubrp
enter
daa
in
push
fsts
xchg
mov
rcr
out
mov
or
por
lret
call
popf
xor
stos
add
cmpsb
and
jno
pop
in
mov
xchg
pop
jmp
fsub
mov
cmpsb
scas
testb
lds
inc
lea
decb
fmul
push
ljmp
jnp
cmp
jge
mov
adc
ret
xchg
add
push
or
iret
inc
dec
sbb
pop
rolb
and
add
ds
sbb
push
popa
push
push
es
out
iret
fmul
jns
ljmp
jae
in
fwait
movsl
scas
je
xor
push
cs
fsubr
and
inc
or
je
and
frstor
sbb
sub
fisubrs
dec
icebp
insl
data16
or
loop
iret
mov
cld
push
xor
mov
add
cltd
inc
ret
sub
xlat
scas
or
sahf
test
push
and
frstpm(287
out
mov
sarl
into
sub
je
sub
movsl
outsl
out
sub
push
push
mov
sub
loope
xchg
lcall
movsl
iret
stos
ret
repnz
dec
lock
cmp
sub
pushl
sbb
push
popa
imul
daa
push
pop
cs
jl
nop
fwait
inc
xor
and
std
or
cmpsb
push
sbb
inc
orb
rcr
popf
or
fldl
jle
adc
inc
or
mov
into
push
rorl
adc
and
popf
and
push
fsts
pushf
cmpsb
push
pop
mov
lret
gs
fucom
xchg
orl
inc
or
jo
cmpsb
cs
cmpsl
jne
daa
xor
adc
mov
xor
pusha
inc
dec
and
fs
push
int3
add
sbb
lret
dec
push
pop
xor
loope
push
inc
scas
dec
jge
arpl
lahf
std
pusha
xor
fsubrp
adc
pop
push
pop
addr16
loop
cltd
mov
aad
jmp
sbb
sub
or
xlat
sbb
pop
xchg
fwait
lds
and
xor
out
es
das
jmp
outsb
cmp
mov
sbb
push
popa
push
lea
push
and
jb
xchg
pushf
or
and
decl
test
adc
ret
orb
rcll
mov
decb
push
or
ljmp
les
jp
pop
adc
pusha
push
jecxz
xchg
pushf
cmpsb
pop
sub
iret
scas
mov
aaa
sarb
jge
xchg
cmp
mov
dec
mov
repnz
mov
addr16
fildl
push
orb
mov
push
lds
sbb
into
xchg
adc
mov
mov
fwait
xchg
jge
mov
test
push
rorb
pushf
rcpps
sbb
lcall
pop
mov
pop
push
mov
dec
add
xor
jae
and
idiv
or
jmp
xchg
adc
xor
test
ror
cmp
mov
mov
dec
hlt
and
mov
imul
xchg
aad
mov
dec
push
pop
pushw
int3
push
orb
mov
mov
xchg
mov
and
and
jae
xor
jo
scas
mov
test
mov
rcr
mov
mov
mov
jp
mov
mov
mov
ss
ret
int
sti
loop
shl
add
xor
add
push
cmpsl
and
insl
ja
in
pusha
mov
lea
lock
add
out
int
scas
and
cmc
insb
imul
rcll
and
add
lock
inc
cmpsl
dec
sarl
xchg
filds
and
cli
ss
dec
push
mov
nop
sti
jno
mov
sarb
xor
repz
xor
pusha
mov
ss
repz
int3
adc
push
sbb
sub
lds
pushf
movsl
inc
dec
pushf
or
and
fisttps
adc
fsub
xor
mov
sbb
fstpl
and
pop
imul
inc
pop
jo
pop
les
decl
adc
lds
pop
add
aas
dec
sub
cmp
scas
mov
out
loopne
xor
add
push
mov
push
es
jmp
aam
adc
call
cmp
sub
pusha
stos
adc
dec
push
xchg
add
sbb
sub
or
pop
push
adc
xchg
cmp
repz
jg
out
cmc
sub
pusha
nop
adc
jmp
sbb
cli
mulb
adc
mov
and
arpl
ljmp
xor
dec
sbb
das
pop
lock
cmp
dec
pop
mov
stc
cmp
and
mov
push
mov
inc
adc
imul
out
jp
xchg
ret
popa
imul
mov
scas
insb
lock
fisubrs
cmp
pop
bound
sub
jae
push
and
cmp
je
xchg
pushf
cmpsb
mov
mov
mov
mov
ds
push
xor
js
inc
push
jl
jb
ret
dec
cwtl
mov
adc
cli
adc
inc
pop
orb
mov
push
les
sbb
roll
xchg
cmp
insb
test
mov
out
stc
add
ror
add
fs
sbb
lds
mov
mov
pop
and
int3
inc
mov
inc
fistps
outsl
sbb
add
decb
and
xchg
pop
dec
push
pop
xor
fwait
inc
js
push
pop
inc
lcall
add
imul
push
xchg
sahf
test
jno
xchg
fwait
mov
iret
ret
int
cmpsl
jg
xor
cld
rcrl
and
xchg
mov
xchg
popf
out
mov
sub
mov
xchg
inc
add
aas
mov
fadds
xchg
clc
add
sub
xchg
jge
pop
mov
sub
sbb
jbe
sub
ficomps
fwait
movsl
test
jae
mov
jne
pop
xor
adc
and
loope
ret
xchg
mov
rcr
out
stos
imul
push
lahf
daa
mov
pop
call
mov
out
stc
test
adc
or
jnp
jp
addb
pop
lret
aad
int3
push
mov
xchg
add
push
inc
int
jl
nop
jg
adc
mov
and
xor
out
sub
jnp
jmp
outsb
cmp
jmp
jne
int
inc
push
sub
pop
adc
out
outsb
fnstcw
mov
negl
dec
and
daa
je
xchg
clc
mov
push
pop
mov
out
and
adc
and
out
inc
scas
scas
mov
jmp
loop
roll
dec
cmp
mov
into
mov
adc
lds
int
ss
pop
pmulhuw
cmp
cmp
push
adc
inc
xchg
decl
call
push
xor
daa
rcr
push
ret
xchg
mov
rcr
mov
lret
sbb
sbb
enter
test
outsl
call
int3
ss
jl
adc
dec
jl
sbb
mov
lret
lret
add
xlat
dec
in
mov
lcall
pop
xchg
or
adc
jb
xor
dec
pop
mov
test
es
adc
idivl
dec
sub
xchg
inc
dec
out
inc
mov
xchg
test
pop
mov
mov
repz
xcrypt-ctr
cmpsl
sbb
push
mov
enter
pop
roll
sti
clc
xor
pop
imul
mov
stc
pop
xor
mov
inc
adc
inc
iret
dec
jle
xchg
pushf
dec
adc
shrl
xchg
testl
inc
add
scas
mov
jmp
call
mov
imul
jno
jle
sbb
imul
jmp
sti
and
cld
outsb
in
sahf
fwait
movsl
scas
out
mov
and
mov
push
adc
cltd
pusha
nop
adc
jmp
sbb
fisubrl
fisttpl
adc
dec
xor
lcall
scas
fldcw
xchg
and
cmc
xor
hlt
sbb
popa
cltd
mov
mov
fs
and
sbb
repnz
shr
pop
les
add
out
mov
lock
ds
sbb
andb
add
mov
lds
xor
aaa
inc
cmpsb
adc
aas
pop
xchg
dec
stc
push
dec
cmp
pop
pop
mov
sbb
test
push
and
jge
xchg
std
jg
mov
ret
jo
and
adc
xor
push
jl
outsl
jp
xchg
and
adc
dec
pop
cmp
dec
mov
jb
cltd
out
fbstp
xor
dec
sub
mov
jge
outsb
and
pop
fwait
movsl
int
rorb
pushf
push
push
pop
addr16
bound
dec
ds
jle
pop
inc
mov
imull
inc
dec
cmc
ret
xor
xchg
mov
scas
jg
outsb
adc
jl
or
aas
enter
cltd
inc
push
add
je
enter
aad
inc
adc
stc
add
inc
push
push
mov
ja
rcr
movsl
mov
and
xor
out
daa
data16
test
push
and
xchg
popf
jns
pop
bound
mov
inc
pop
imul
dec
mov
mov
cmc
fcmove
fwait
enter
out
rorl
mov
imul
xor
fucomi
neg
leave
in
in
mull
cld
sbb
ss
cs
movsl
scas
pushf
and
aad
jmp
pusha
fisttpl
daa
adc
add
ja
out
imull
mov
popf
xor
add
jecxz
adc
add
aaa
loopne
sub
lret
mov
into
fidivs
mov
jno
xor
push
outsl
cmp
jne
mov
mov
outsl
nop
lcall
das
scas
inc
ret
or
aas
inc
ljmp
mov
lea
lgdtl
outsb
js
sub
push
hlt
or
push
and
push
dec
test
clc
add
movsb
push
jne
ds
gs
xchg
and
int
cmpsl
mov
ror
lds
leave
aaa
aaa
inc
sbb
xor
cmp
or
mov
jmp
scas
adc
fsub
and
pop
jecxz
xchg
pushf
cmpsb
mov
sub
stos
out
ljmp
cmc
call
sub
cmpl
adc
rclb
or
cmp
and
push
scas
sbb
xchg
popf
leave
push
int3
add
sbb
lret
dec
push
pop
dec
aam
mov
rcr
in
jp
out
and
ret
xor
xor
js
ror
cmp
push
mov
dec
and
dec
dec
cmp
jae
daa
imul
ljmp
adc
xor
pop
push
dec
inc
pop
jae
rcll
stos
xor
enter
sub
stc
xorb
push
push
mov
jnp
popa
xchg
das
scas
clc
arpl
xchg
jecxz
pop
cmp
pop
mov
jg
gs
fdivs
inc
inc
dec
sbb
and
sahf
into
push
rorl
adc
and
popf
sbb
dec
sub
push
pop
cwtl
sbb
imul
jp
sub
inc
dec
repnz
xchg
xchg
mov
les
mov
mov
inc
ja
mov
enter
push
mov
aam
inc
dec
cmp
adc
mov
int
cmp
mov
mov
push
sub
cmp
mull
mov
pushf
addb
fbld
pop
fwait
pop
or
ja
xchg
inc
or
push
stos
int3
movl
cmpsb
sbb
and
sbb
aad
scas
sahf
pop
pop
rcr
push
loope
push
scas
icebp
arpl
shr
xor
sub
mov
add
jne
xor
dec
push
cli
mov
imul
stos
mov
enter
icebp
sti
add
hlt
sbb
xchg
sbb
fidivl
fwait
fwait
movsl
xorb
sahf
enter
sarb
xchg
popf
lock
push
pusha
aas
xor
popa
mov
sub
fucomi
mulb
and
adc
aaa
mov
xchg
jo
imul
mov
mov
lret
repnz
test
add
dec
xlat
pusha
push
push
sahf
bound
rcrl
pop
sbb
mov
decb
push
sbb
pop
imul
stc
ret
xchg
pop
insb
fs
and
out
xchg
mov
les
shrb
inc
pop
add
rdpmc
cmp
cmpsl
xchg
pop
popf
or
and
fists
negl
pop
xor
or
jns
repz
pop
jae
and
cmp
dec
mov
imul
and
sarb
cmpsl
adc
sub
jmp
test
out
jne
mov
mov
cmc
and
mov
pop
bound
loope
lahf
pop
ficoms
sbb
adc
fstpl
dec
sub
push
mov
mov
mov
add
std
or
cmp
cs
dec
aad
lret
pop
adc
pop
dec
pop
arpl
jecxz
xchg
mov
xchg
out
movsl
or
out
call
push
cld
outsl
mov
ja
pop
scas
mov
pop
xor
les
jnp
cltd
cmp
aad
inc
lods
outsb
pop
push
in
rcr
fldl
or
pop
nop
lcall
loopne
mov
or
pop
addr16
fcoml
cltd
mov
aad
scas
sahf
sub
in
xor
jne
dec
push
pop
sti
pop
js
rcr
test
push
and
fcomip
push
pop
das
cmp
push
push
dec
idiv
push
mov
mov
in
hlt
pushf
dec
mov
xchg
sbb
test
adc
mov
xor
ds
cmpsb
mov
mov
push
lds
and
inc
int3
xor
pop
insl
cli
test
xchg
lret
ljmp
scas
cmp
inc
jns
dec
jle
mov
cmp
jns
mov
fwait
mov
push
mov
dec
test
repz
int
mov
pushf
fisttps
addr16
es
pusha
mov
test
lahf
cmpsb
jge
push
into
sbb
cmp
mov
xchg
add
jb
mov
or
hlt
test
mull
jnp
cmp
mov
addr16
push
xchg
add
inc
dec
push
dec
jg,pt
xchg
push
jp
std
scas
mov
clc
test
popf
adc
data16
and
gs
mov
mov
mov
in
sarl
mov
xchg
inc
add
mov
mov
out
rcr
mov
fs
xchg
decb
sti
xchg
loop
cwtl
callw
sub
mov
inc
aaa
pop
jo
xchg
imul
decl
adc
dec
pop
iret
and
mov
fwait
mov
in
jge
sub
inc
dec
repnz
mov
cld
popa
cmpsb
mov
int
ret
ljmp
push
pop
addr16
loop
lea
clc
pushf
cmpsb
shrb
xchg
or
push
pop
or
inc
xchg
imul
test
xlat
add
call
addr16
out
cmp
mov
inc
sbbl
sbbb
xlat
inc
mov
rcr
in
dec
les
and
rclb
inc
int3
inc
orb
rcr
mov
jl
roll
dec
sbb
cmp
or
adc
aas
xchg
repz
in
fdivrs
and
flds
xchg
pushf
or
fdivrs
fists
ss
xor
inc
fcompl
insb
call
mov
lcall
inc
or
dec
js
jno
mov
xor
clc
ror
mov
dec
loop
aas
xchg
sahf
imul
mov
mov
sub
lret
jne
dec
push
dec
divl
sbb
rcr
jmp
fsub
or
pop
sub
aad
lcall
inc
mov
decb
and
pop
hlt
and
insb
sbbb
ss
repz
int3
mov
lret
sub
push
mov
ja
rcr
test
add
jmp
mov
std
std
dec
cmp
inc
jp
xchg
sbb
rcr
out
movsb
in
and
sbb
movsl
popa
inc
dec
xor
pop
test
pop
jmp
cmp
test
stc
add
mov
push
mov
test
and
and
jb
scas
mov
jmp
aam
adc
adc
mov
xchg
rcr
out
pop
movl
dec
and
shlb
add
sarl
inc
lea
call
push
xor
sub
mov
cld
aad
int3
cmpl
sbb
int
xor
mov
push
sar
push
add
add
inc
test
ror
filds
sbb
cld
fwait
adc
ja
mov
cmp
lcall
lds
ds
sbb
lcall
decl
jae
enter
xchg
add
ljmp
inc
pop
xchg
or
bound
jbe
mov
arpl
sub
int3
and
jbe
inc
jg
xor
sbb
negb
mull
stc
sub
cli
xor
jne
ret
int
outsl
cs
cmp
cltd
rorl
xor
ss
pusha
jle
fs
xchg
add
sbb
xlat
pusha
bound
sbb
ss
out
pop
xor
xchg
xor
jmp
mov
xor
xor
test
clc
lret
aad
xchg
test
and
out
mov
sahf
push
or
data16
mov
mov
hlt
decb
xor
ds
sbb
das
pop
lods
outsb
cmp
dec
lds
enter
lock
add
mov
mov
and
mov
add
shll
repz
das
cmp
hlt
outsb
stos
mov
enter
icebp
sti
add
aaa
inc
sbb
incb
cmp
adcb
into
push
rorl
adc
add
popf
push
dec
push
pusha
sub
outsl
divl
mov
les
mov
in
in
not
lods
mov
push
jae
jle
jl
outsb
push
ret
int
les
or
orb
lds
orl
js
leave
pop
fldl
push
pop
push
aam
mov
xchg
mov
lret
sub
cmp
jno
inc
jb
popa
inc
mov
xor
outsl
in
and
and
mov
inc
bound
int3
loopne
pop
rorb
and
pusha
rorl
adc
leave
sarb
and
sbb
push
mov
imul
mov
shrb
xchg
ds
popf
cmp
into
inc
test
and
btc
in
out
xchg
out
push
pop
sarb
cmp
aam
cmc
loop
in
and
cmp
mov
pusha
push
gs
push
data16
loop
neg
les
in
xchg
mov
inc
aaa
or
pop
xchg
imul
bound
sbb
xor
lock
and
pop
aaa
dec
clc
add
mov
out
cli
add
arpl
fwait
sbb
pop
sbb
add
rcrl
pop
ret
in
jp
sbb
movsb
cs
out
imul
je
sub
jmp
pop
loop
pop
repnz
repz
dec
pushl
imul
ss
cmp
sub
pop
lcall
popf
xchg
xor
sti
pop
adc
rclb
adc
push
fisttps
das
pusha
std
jl
xor
out
clc
push
popa
mov
sub
dec
mov
data16
test
dec
dec
lods
mov
test
mov
in
jmp
lock
add
bound
fwait
xlat
loope
cmc
popf
addr16
adc
sub
sub
adc
dec
ret
push
sbb
mov
inc
dec
push
cmp
xchg
dec
inc
dec
addl
out
push
loopne
aam
or
arpl
xchg
mov
xchg
jb
push
lret
jbe
sbb
sbb
jb
call
sbb
mov
test
adc
or
jnp
xor
jns
ror
xchg
mov
mov
mov
and
xlat
ds
xchg
int3
scas
mov
out
dec
pop
pop
les
inc
jo
push
mov
pop
leave
aad
dec
push
shrl
clc
sar
scas
sbb
imul
arpl
test
bndstx
add
subb
ds
push
pop
loope
jp
adc
cmpb
xor
sti
lds
stc
sbb
es
ds
mov
mov
scas
inc
dec
mov
mov
imul
xchg
mov
test
or
pop
cwtl
popl
ja
mov
sub
shrb
mov
sub
insl
ja
cmp
loope
je
jbe
insb
jnp
mov
add
stos
mov
lret
lods
cmp
call
and
and
lret
jg
cltd
je
fimuls
fisubl
fdivs
mov
push
jl
cmc
cmp
cmp
movsb
loopne
and
into
out
xchg
mov
in
pop
jmp
xchg
out
add
mov
mov
fwait
mov
mov
lods
or
fistpll
jecxz
int3
inc
orb
rcr
mov
iret
pop
mov
fucomp
mov
push
pop
bound
loope
lahf
pop
jecxz
sbb
roll
jmp
rcr
inc
aas
xchg
pushf
lea
loop
pop
fisttps
sbb
out
mov
aam
cmp
ret
int
loope
push
lret
or
sbb
adc
iret
inc
xor
xchg
cmpb
and
inc
in
jns
sub
inc
lods
mov
pop
jb
pop
cmp
jae
cmpsl
jle
ret
dec
mov
or
out
dec
push
inc
cmc
xor
loop
dec
mov
mov
jmp
sbb
sub
sti
add
jmp
inc
es
insl
jge
call
xchg
add
in
dec
lahf
or
cmp
ficompl
push
push
mov
in
dec
enter
jecxz
movsl
add
popa
imul
and
xchg
das
ja
clc
add
loope
cltd
mov
sbb
sub
ja
enter
mov
cmp
into
or
mov
sub
outsl
in
jbe
stos
xchg
loope
add
pop
clc
dec
push
and
mov
pusha
fnop
mov
push
loope
testb
sbb
ja
sub
fidivs
fwait
movsl
test
sub
ret
ljmp
adc
pop
jns
mov
add
enter
mov
mov
loope
adc
and
ljmp
ja
xchg
stc
xchg
pop
xchg
hlt
xchg
imul
cltd
cmp
aad
mov
outsb
enter
aam
push
cmp
arpl
lcallw
xor
fdivr
bnd
mov
neg
xor
js
sahf
ss
repz
pop
scas
jge
das
cmp
scas
xor
ss
adc
pop
jmp
jp
jle
ret
popa
adc
xchg
sub
test
xor
mov
sti
add
aaa
inc
dec
adc
xchg
cmp
je
jno
mov
dec
decl
adc
lds
pop
fstps
push
xchg
pop
lcall
jmp
out
adc
leave
sar
push
imul
int
inc
mov
mov
dec
pop
shrl
orl
xchg
in
add
std
xchg
iret
sub
sbb
mov
dec
push
jge
cmpb
add
cld
push
out
adc
lahf
imul
adc
jmp
sbb
fisubrl
or
call
push
sahf
or
ss
sub
stos
and
addr16
and
pusha
mov
cmpsl
fucomip
repz
movsl
jae
and
push
sub
or
push
fildll
mov
scas
mov
call
hlt
sbb
test
insb
mov
repnz
cmpsl
adcl
cmp
and
xor
stos
xor
mov
rorl
adc
and
popf
and
sub
dec
push
aaa
inc
gs
xchg
popf
push
in
add
push
pop
push
aam
xchg
xchg
mov
inc
xchg
decl
call
push
xor
sub
sahf
stos
mov
sub
iret
add
jecxz
sub
inc
fcomps
or
dec
push
dec
xorb
cmpsb
scas
mov
sub
addr16
push
popa
ja
push
aad
xchg
pushf
jo
pop
mov
nop
or
pop
or
inc
xchg
cwtl
xchg
test
adc
fldt
mov
push
fcoml
cltd
mov
aad
jmp
fsubrl
and
and
and
insb
mov
mov
sub
cmp
xor
and
xchg
mov
stos
fucom
icebp
mov
lods
fchs
mov
pop
imul
scas
mov
jmp
inc
inc
mov
or
mov
into
xchg
dec
xchg
mov
outsl
js
lods
adc
imul
scas
mov
jmp
jmp
popf
daa
xor
mov
add
in
cmp
ja
out
ljmp
pop
inc
sbb
mov
cmpsl
cmp
shr
stc
ret
adc
mov
addr16
test
imull
mov
jbe
andb
inc
add
cmp
jb,pt
xchg
ret
adc
mov
cmp
mov
xor
rorb
add
pop
leave
aad
scas
pop
fsts
sbb
push
popa
imul
xchg
sahf
test
pop
sbb
xchg
sahf
lret
aad
mov
sbb
dec
adc
push
push
xchg
jns
enter
iret
pop
rorb
sbb
sub
pop
imul
cmp
lea
xchg
sahf
out
and
cli
pop
fnsave
xchg
orl
mov
push
aam
push
sbb
js
add
jmp
sbb
mov
aas
dec
test
decl
adc
dec
and
push
dec
inc
out
idivl
test
mov
mov
jmp
mov
fisubs
mov
xchg
frstpm(287
out
stc
mov
mov
add
dec
pushl
lock
fisubl
lcall
lods
ficompl
and
rcll
mov
mov
mov
int3
loopne
pop
lret
or
and
aad
sbb
pop
loopne
cmp
pop
add
test
sahf
ss
repz
pop
scas
jge
das
cmp
ljmp
pop
push
into
cmp
insl
ret
int
rcl
push
or
pop
jecxz
ret
orb
roll
bswap
jg
hlt
fnstsw
ret
jge
mov
test
xchg
add
cmc
imul
iret
and
pop
mov
outsl
nop
sets
dec
push
pop
imul
movsl
data16
mov
sti
adc
dec
pop
arpl
mov
xchg
jb
push
shl
push
sbb
push
pop
push
aam
mov
xchg
insl
inc
dec
int3
icebp
or
sub
xor
mov
xchg
lret
pop
fildl
sbb
xchg
fwait
add
push
pop
dec
xlat
cmp
nop
lcall
lds
hlt
or
in
dec
call
addr16
inc
dec
pop
mov
and
pop
out
sbb
push
popa
mov
sahf
jp
add
dec
iret
or
and
push
push
std
pop
jecxz
ret
orb
xlat
jecxz
mov
enter
push
aaa
inc
dec
pop
sbb
outsb
inc
push
insb
xchg
scas
mov
jmp
loop
roll
cs
cmpsl
and
pop
in
mov
sbb
in
mov
divl
dec
and
xchg
ret
int
xchg
mov
cs
mov
mov
add
mov
das
cli
add
int
scas
imul
pop
sbb
adc
dec
push
xor
adc
leave
mov
or
fists
clc
push
iret
fcomps
cltd
mov
aad
dec
push
stc
push
sbb
insl
and
pop
jb
inc
and
jae
sahf
cwtl
xchg
cmp
idiv
or
lret
add
or
jecxz
sarb
inc
sbb
out
outsb
mov
gs
jmp
sbb
push
popa
imul
sbbl
xchg
aaa
inc
xchg
add
jmp
push
jecxz
in
out
lcall
enter
mov
and
adc
jae
push
stc
jg
mov
enter
movsl
add
push
add
inc
jle
xchg
sti
outsl
pop
pop
xchg
loop
mov
das
or
inc
lret
xchg
ret
int
mov
push
ror
mov
call
iret
dec
ja
xchg
or
or
mov
mov
subb
jl
inc
sub
in
push
mov
mov
stos
repnz
aaa
mov
xchg
jno
inc
dec
push
pusha
adc
mov
sbb
add
rcll
push
xlat
cmp
adc
int3
or
mov
test
lods
xor
or
aas
sub
js
aad
xor
std
fs
dec
and
adc
sub
shr
push
shrb
movsl
scas
fldenv
decb
mov
fs
inc
dec
push
movsb
in
push
mov
mov
lock
xchg
sahf
or
inc
ljmp
mov
mov
cmp
ret
sub
sub
fcomps
mov
pop
lret
js
ljmp
mov
adc
dec
mov
test
popf
or
pop
arpl
jecxz
enter
and
std
jmp
ss
ficoms
test
jge
xchg
shl
dec
int3
sti
pop
and
and
cs
sub
sti
je
cmpsb
jp
in
fnclex
mov
mov
idiv
inc
mov
ret
inc
mov
scas
ljmp
and
fdiv
xor
icebp
je
repz
loop
push
insl
add
sub
pop
enter
sahf
test
adc
inc
dec
into
out
push
and
mov
lcall
in
arpl
mov
xor
sbb
in
loope
adc
aaa
pusha
in
fwait
movsl
scas
xchg
jae
jbe
jmp
mov
add
inc
dec
push
add
push
jle
xchg
jnp
jne
mov
ds
and
add
shll
int
add
push
and
pop
call
lcall
rcl
add
cmp
iret
dec
orl
rcrl
push
sbb
sub
movsl
sbb
cmp
or
push
rcr
mov
xlat
fdivr
sub
add
jg
push
and
jno
aad
xchg
pushf
jo
pop
mov
adc
rclb
and
sub
cmp
scas
mov
scas
mov
sub
cwtl
cli
test
xor
mov
movl
scas
div
and
aas
mov
inc
arpl
sbb
out
pop
out
push
and
xchg
add
push
pop
data16
cmp
je
mov
lods
in
dec
add
jae
jge
dec
call
jnp
cmp
jno
es
or
sub
or
dec
xchg
clc
add
in
jp
xchg
mov
inc
push
cmp
insb
data16
jp
mov
data16
cmp
int3
and
jns
dec
jle
aaa
mov
lock
mov
and
aaa
inc
push
push
jg
dec
stos
rcrl
or
cld
xor
dec
pop
jno
ss
pusha
jle
pop
outsb
mov
add
adc
adc
push
ss
jmp
pop
xchg
cmp
hlt
insb
js
sub
or
jnp
es
push
loope
lret
aad
fwait
test
and
imul
or
gs
cmp
xchg
scas
mov
sub
out
sub
jp
aaa
sub
sub
mov
fistps
cmp
inc
dec
push
or
dec
jge
xchg
jbe
push
xchg
mov
mov
pop
cmpsl
and
push
pop
in
outsl
pushf
cmpsb
mov
xorl
iret
fnstcw
mov
jmp
pop
pop
adc
int
les
or
orb
inc
push
fsts
xchg
mov
rcr
out
pop
rolb
sub
and
inc
imul
push
stos
out
stc
add
shll
jnp
in
addr16
shll
jmp
mov
scas
push
shrl
arpl
lcallw
xor
cmp
mov
jno
out
cltd
mov
mov
aad
out
xchg
cmp
push
dec
inc
jg
xchg
dec
std
push
jl
push
sub
scas
sbb
or
adc
xchg
repz
pop
sbb
mov
sbb
lds
or
add
shlb
xor
jns
int
loope
mov
or
orl
xrelease
mov
ds
out
testb
sub
and
hlt
cld
dec
lods
mov
test
mov
iret
push
orl
jle
out
iret
iret
leave
div
addl
jge
jo
shll
test
ret
int
cmp
mov
sbb
ljmp
cmpl
push
pop
stc
mov
dec
into
xchg
js
sub
jmp
or
mov
daa
fcompl
lea
cltd
xchg
mov
jno
out
repnz
push
push
mov
out
inc
mov
xchg
fiaddl
clc
add
scas
cmp
cmp
xor
loopne
mov
mov
sbb
loop
aaa
jo
cs
imul
scas
mov
mov
enter
sub
xchg
pushf
cmpsb
push
pop
mov
aad
loopne
fstl
or
cmc
lret
pshufw
scas
mov
cmc
decl
fsubrp
mov
cld
lock
and
push
sbb
inc
movsb
mov
mov
cltd
rcr
es
push
lds
sbb
xor
call
fwait
and
aad
out
push
pusha
mov
and
sbbb
mov
addr16
test
imull
mov
das
xor
mov
and
sbb
dec
jl
nop
lcall
pop
sbb
int
orl
inc
jnp
cltd
inc
push
add
aad
test
mov
aad
inc
dec
sub
xor
mov
rolb
push
dec
popf
cmp
into
inc
test
movsl
mov
lret
in
out
les
jae
xchg
push
push
scas
mov
jmp
arpl
iret
and
or
lods
or
clc
jb
pop
pop
jae
fsub
lds
or
mov
fidivs
fwait
movsl
test
in
mov
jne
fnstenv
cmp
ja
xlat
push
add
scas
enter
data16
arpl
ja
inc
rorb
xchg
pop
ljmp
mov
movsl
scas
push
arpl
cmpsl
scas
call
pop
addr16
sub
int3
push
pusha
mov
pop
arpl
xlat
sub
add
fwait
lods
test
mov
popf
daa
mov
pop
xchg
or
fsts
add
test
ja
js
lods
xchg
xchg
fsub
cli
in
pop
sbb
xchg
bound
leave
xchg
popa
int3
lret
scas
out
repz
mov
fs
fsub
xor
xor
sahf
ror
or
and
shrb
xchg
xchg
fwait
jbe
into
out
xlat
js
jb
test
loopne
out
pop
cmpsl
and
push
pop
in
outsl
pushf
cmpsb
mov
mov
scas
cmpsl
stos
loop
iret
fnstcw
fldl
inc
jge
xchg
fwait
inc
adc
mov
ror
mov
fsub
mov
int
pusha
mov
xchg
enter
xchg
pop
into
push
sbb
neg
add
adc
out
pop
xchg
pusha
test
push
or
and
int
dec
push
sub
inc
mov
pop
push
in
lock
push
or
outsb
lret
adc
lcall
mov
xor
ljmp
cmc
jmp
testl
push
aaa
orb
adc
dec
add
or
inc
adc
call
mov
add
or
mov
std
and
test
mov
lahf
jae
cmpsl
mov
bound
clc
cmpsb
mov
dec
je
jae
mov
cmc
decl
out
mov
mov
xchg
push
push
inc
sub
imul
xchg
mov
push
sbb
mov
inc
dec
push
sbb
adc
dec
stos
ret
int
cmovl
fidivrs
in
inc
push
mov
mov
insl
push
and
pop
iret
push
sbb
neg
add
xor
xchg
jae
out
push
xchg
pusha
mov
pushf
testb
push
or
notl
mov
test
repz
sbb
sbb
dec
cmp
pop
cltd
ret
pop
sarb
xor
out
sub
jnp
lock
stos
jmp
in
and
mov
pop
cmc
arpl
das
scas
out
clc
add
int3
or
adc
outsl
sub
push
add
pop
leave
enter
or
repnz
cmpsb
sbb
push
xchg
xchg
orb
mov
sbb
pusha
aas
sarl
out
imull
mov
popf
lods
xchg
mov
jo
sub
divl
pop
dec
sbb
fwait
aas
and
mov
fwait
aam
mov
sub
dec
in
das
mov
addl
stos
outsl
shrl
add
and
les
sub
cltd
mov
std
mov
stc
repnz
jno
xor
outsl
pop
loopne
mov
fxch
jg
lret
dec
sub
jle
inc
sbb
cmpsl
xchg
lods
movsl
dec
pop
popf
or
and
fists
negl
pop
xor
or
jns
repz
pop
jae
and
cmp
dec
mov
imul
and
sarb
cmpsl
adc
sub
jmp
test
push
imul
mov
scas
insb
out
and
sub
dec
pop
cmp
pop
jo
xor
fs
inc
int3
inc
iret
dec
jle
xchg
pushf
dec
adc
inc
push
lds
sbb
out
imul
cmc
call
pop
xchg
fwait
movsl
scas
push
and
xlat
loope
mov
mov
pop
arpl
push
mov
xchg
rcr
out
pop
mov
loope
sbb
decl
pop
call
mov
out
stc
pushw
shrl
xor
and
add
pop
jnp
mov
pop
sbb
sub
movsl
sbb
pop
push
lcall
lahf
pop
hlt
rol
mov
fnstcw
pop
mov
aad
pop
lods
negl
imul
cmp
push
lock
shlb
inc
push
cltd
in
sar
mov
pop
jp
fnstcw
dec
movsl
mov
push
xchg
mov
psubb
icebp
sbb
adc
xchg
fwait
cmovle
xchg
decl
dec
sub
mov
mov
or
into
mov
push
lds
sbb
mov
cmp
fwait
movsl
test
dec
push
sahf
notl
sbb
adc
inc
pop
aas
int
stc
add
mov
xchg
jmp
add
rclb
jl
fcompl
jae
xchg
add
cs
push
pop
jmp
cld
add
ror
pushf
dec
push
mov
fidivl
adc
adc
cmp
lcall
loopne
hlt
js
adc
inc
pop
addr16
outsb
or
addb
std
movsl
or
push
repz
loope
sbbb
out
jno
fwait
aad
stos
icebp
inc
aam
mov
mov
jle
mov
sti
add
hlt
sub
and
cmp
insb
mov
jmp
pop
mov
sbb
cmp
je
dec
push
cld
imul
push
movsl
add
sbb
out
mov
add
add
and
xlat
loope
cmc
popf
push
sbb
xor
and
ficoml
push
ss
sbb
pop
mov
push
sbb
xchg
add
push
sub
push
dec
dec
cmp
jae
pop
arpl
xchg
js
loop
in
sub
addr16
push
mov
xor
outsl
in
and
inc
jmp
sub
jl
cmc
jo
scas
mov
ljmp
cmc
lds
jnp
ss
mov
lret
aad
test
sbb
push
popa
imul
xor
pushf
call
lods
imul
dec
push
pop
cmp
int3
push
orb
movsl
push
js
mov
sub
mov
insb
cmp
lock
test
xchg
rcrb
add
mov
xchg
into
fsub
stos
outsb
xor
cwtl
icebp
fsubrs
lret
xchg
ret
int
lods
mov
ror
ja
ret
inc
and
bound
inc
insb
dec
arpl
movsl
xor
and
movsl
in
pop
push
sahf
test
mov
out
cmp
ljmp
push
pop
cmp
iret
cltd
sub
xor
add
std
mov
out
ret
sub
sub
pop
dec
push
fsubs
mov
cmpl
jo
dec
pop
stc
sbb
cmp
fisttps
das
decb
in
xor
loope
icebp
sahf
test
popw
fistpl
xlat
mov
in
jmp
data16
das
mov
push
popa
cmp
inc
out
fdivs
and
fbld
xor
pop
fwait
movsl
scas
mov
jmp
loop
in
and
cmp
mov
pusha
push
gs
push
data16
loop
mul
jo
and
inc
call
jge
repnz
movsl
scas
mov
jmp
call
mov
stc
repnz
and
push
pusha
mov
enter
lock
scas
dec
mul
icebp
int
scas
and
push
inc
jge
jae
and
je
out
int
andl
sahf
sbb
xor
mov
ljmp
add
sub
test
push
ret
push
add
add
dec
test
xchg
mov
mov
call
or
pop
push
popa
imul
popa
sahf
test
mov
xchg
out
clc
mov
xor
add
push
sbb
inc
rolb
ja
outsb
xchg
sub
mov
sub
imul
movsl
scas
mov
int3
jne
or
iret
in
xchg
popf
lock
push
pusha
aas
xor
jo
in
neg
leave
dec
shrl
xlat
loope
ja
call
mov
inc
mov
pop
sahf
sbb
sub
adc
outsb
inc
add
mov
rorl
movsl
stc
mov
int3
pop
sbb
push
dec
jl
sarl
or
cld
push
rcrl
and
movb
pop
or
lret
aad
xchg
and
into
clc
xlat
repz
scas
lock
push
sub
scas
xor
insb
movsl
cmp
sub
sub
xor
sub
lods
insb
orb
push
sbb
stos
repz
dec
xchg
xchg
cmp
lods
imul
or
fimull
jg
xchg
fldl
pop
mov
xchg
add
jge
xchg
xor
xlat
gs
dec
mov
in
xchg
mov
push
xor
mov
mov
test
jp
xor
outsb
or
inc
xchg
fwait
jp
sbb
loope
cmc
leave
adc
mov
and
inc
mov
mov
mov
shl
push
in
adc
fildll
mov
rcl
mov
add
pop
mov
mov
mov
cli
cmpsl
scas
lock
push
and
popf
js
cmp
mov
shr
jbe
or
push
pop
sub
pop
mov
fildll
shlb
or
dec
mov
fistps
sub
rcrb
outsb
aam
fucomip
nop
test
loope
and
inc
push
jne
test
mov
mov
in
mov
mov
bound
arpl
aad
add
aam
stos
je
and
into
fdivs
mov
jecxz
in
ss
or
cmp
pop
pop
pop
mov
int3
inc
cmp
push
sahf
ret
cs
scas
je
jb
call
icebp
cmpsb
in
mov
lods
les
cwtl
jb
ja
jge
jno
and
xchg
out
fsubs
ret
and
rcrl
and
cmp
jl
push
mov
xchg
lahf
std
pop
pop
pop
jno
test
pop
cmp
scas
mov
ljmp
jbe
or
out
inc
mov
and
pop
or
dec
cltd
and
es
sahf
test
push
rclb
inc
dec
push
mov
in
push
pop
das
jo
das
mov
push
decl
fs
sarl
nopl
pop
imul
sbb
jp
loope
lock
xchg
popf
cmc
or
aas
je
mov
jns
fsub
shll
sbb
in
fildll
xor
inc
movsl
scas
pushf
xchg
xchg
mov
push
leave
daa
xor
sbb
pusha
xchg
std
push
gs
stos
loop
xchg
add
loopne
rolb
push
jg
pop
test
rcrl
or
pop
cmc
push
pop
cmp
push
cmp
xchg
mov
fmuls
push
xor
ror
inc
push
jg
push
loopne
inc
mov
js
shlb
or
cmp
dec
add
aad
dec
popf
jmp
in
jnp
push
sub
out
insl
inc
inc
xchg
add
repz
psllw
popa
imul
dec
pop
lahf
cmpsb
loopne
xchg
lock
push
pop
cmp
cmp
out
dec
loope
mov
js
pop
outsl
fisubl
repnz
xor
xchg
cmp
decl
mov
and
out
mov
inc
jb
jnp
dec
test
lods
cmc
adc
lea
and
xchg
cmp
clc
mov
iret
mov
sub
pop
decl
addr16
fcompl
jnp
insl
nop
pushf
mov
pop
xlat
test
adc
inc
dec
jbe
jno
jle
xchg
mov
roll
and
daa
scas
or
push
fildll
mov
scas
hlt
js
adc
xor
jbe
out
outsb
mov
mov
inc
test
sbb
push
xlat
sub
dec
out
addr16
sbb
sub
int3
loopne
dec
fldl
and
das
cmp
jne
dec
mov
outsb
ficoml
sbb
in
es
xor
mov
inc
mov
mov
aas
cmp
push
lcall
inc
inc
pop
sub
xorl
icebp
cmpsb
in
xchg
stos
rclb
outsb
sbb
add
jmp
pusha
mov
fmull
rcrb
and
cmp
js
push
mov
cltd
sbb
add
cwtl
stc
xchg
jmp
jmp
inc
rclb
push
jb
shrl
int
into
out
cmp
adc
and
fsubp
dec
test
mov
jmp
pop
loop
fcompl
in
sub
aaa
mov
imul
scas
aam
notl
or
test
add
jecxz
lret
pop
nop
cmpsl
xor
enter
ror
dec
int
imul
mov
jnp
popa
bswap
and
fildll
push
xor
shl
sbb
popa
daa
imul
fs
in
or
repnz
jge
inc
mov
inc
add
fdivr
dec
add
push
aaa
pop
test
cmpsb
cmp
in
jl
shlb
fldenv
cli
cli
inc
enter
xor
push
shlb
rep
cmc
int
adc
dec
fbld
xchg
mov
xchg
mov
enter
jnp
test
lock
adc
sahf
xor
inc
jbe
repz
stc
test
clc
das
call
or
jnp
mov
stos
add
xchg
dec
int3
jnp
test
in
testb
in
sub
dec
aas
sub
push
cmp
mov
loope
xor
out
push
cmp
adc
xchg
xor
cmp
nop
inc
add
cmp
and
mov
mov
add
lret
cmc
inc
repz
daa
sbb
mov
imul
aaa
adc
and
cmp
pop
pop
add
mov
push
jmp
or
mull
xor
or
into
xor
pop
mov
mov
sub
inc
push
push
mov
inc
stos
jne
or
enter
push
xor
daa
mov
xor
pop
popf
cmpsl
push
pop
ret
lea
and
jo
jb
cmp
insl
push
mov
rol
jmp
repnz
ret
jne
es
cltd
mov
das
mov
std
mov
loope
in
rorb
xchg
inc
jne
fs
dec
xor
push
rcll
sahf
into
add
push
rorb
jno
pop
xor
fucomip
hlt
jle
shr
mov
push
sub
leave
inc
dec
pop
dec
jns
jl
push
xchg
jne
mov
sub
loopne
push
mov
cmp
stos
popa
imul
rcrl
adc
lds
and
aad
jae
xchg
popa
das
mov
into
push
mov
xchg
popf
add
push
pusha
push
fnstcw
or
aad
mov
push
sbb
into
mov
dec
xor
adc
lea
pop
cmp
int
mov
decb
or
and
cmp
pop
stos
mov
sub
shl
in
cltd
into
frstor
sti
or
cltd
and
pop
and
mov
scas
mov
call
pop
icebp
xor
loop
sbb
jp
sti
mov
mov
cld
cmp
lock
dec
adc
sahf
in
movsl
ljmp
sbb
and
push
iret
cltd
mov
xchg
stos
xchg
rorl
adc
clc
mov
imul
inc
sahf
add
test
aaa
mov
sub
leave
xchg
sub
adc
dec
add
mov
jo
add
testl
mull
data16
fwait
xchg
cmp
fisubrs
adc
push
push
xchg
int
popa
pushf
adc
cmpsb
mov
lds
jp
insl
ss
lret
adc
xor
fwait
movsl
jo
test
cmp
ja
shll
inc
and
lds
mov
xor
xchg
inc
xchg
cmpl
lahf
and
aam
lret
xchg
sahf
jge
sbb
frstpm(287
ret
pop
pusha
stos
and
push
aas
lret
jne
fdivs
sbb
mov
icebp
push
pushf
cmpsb
aas
cli
push
into
loopw
jecxz
pusha
adc
loope
xchg
pushf
push
arpl
loopne
cwtl
pop
push
xlat
in
stos
out
gs
jo
mov
xchg
sub
scas
in
cmp
clc
mov
sub
pusha
das
inc
jmp
and
mov
sub
jmp
mov
pop
push
popa
imul
jno
add
sbb
shlb
inc
xchg
fwait
or
les
cmp
adc
dec
cmp
mov
add
mov
lods
testb
test
ja
dec
sub
push
out
cli
jp
mov
insb
jne
xor
sbb
pop
push
mov
inc
xor
enter
mov
add
mov
rclb
jp
pop
call
xchg
outsl
lcall
pop
and
fisttpl
push
adc
adc
dec
ja
jle
das
subb
inc
inc
mulb
fistps
aaa
and
xchg
inc
jne
push
push
push
xlat
lret
add
or
jecxz
in
inc
sbb
fs
fstl
enter
lock
cli
mov
sub
pop
push
das
jns
clc
add
imul
sbb
bound
arpl
push
pop
lods
into
sbb
xchg
decb
std
sub
bound
xor
sub
rolb
mov
sti
inc
dec
hlt
sub
aas
dec
clc
cld
addb
mov
mov
outsb
testl
add
inc
push
bound
cwtl
mov
scas
fcmovnbe
orl
inc
dec
jbe
insl
pop
and
fsub
lds
ret
aaa
cmc
mov
loope
cmp
scas
mov
xchg
stos
xor
cmc
xor
adc
jl
pop
movsl
pop
jae
pushf
cmpsb
jo
into
incb
mov
xchg
ret
movsl
scas
fstps
and
cmc
pop
mov
cmp
push
arpl
mov
stos
mov
xchg
icebp
add
xor
sub
or
shl
popa
rorl
push
and
adc
les
inc
orb
sar
test
mov
je
clc
cmp
stc
pusha
out
mov
pop
mov
or
ljmp
pusha
push
das
dec
xlat
popa
imul
rcrl
fsubs
push
fiadds
fwait
movsl
sbbb
test
loope
repnz
les
mov
inc
dec
mov
mov
push
jle
aaa
xchg
lock
fstpl
and
rcrb
fs
dec
adcl
aas
lret
cmc
jnp,pn
inc
pop
mov
xchg
pushf
jo
mov
inc
testb
sub
jmp
mov
das
mov
mov
or
inc
in
add
ja
lret
lcall
cmpsb
in
jnp
push
push
das
push
adc
push
jmp
lea
mov
and
std
adc
add
popa
stos
popa
xchg
pop
pusha
popf
popf
jnp
shl
xchg
push
scas
mov
sub
pop
je
push
mov
sub
mov
clc
add
xor
mov
jne
mov
mov
data16
and
mov
jae
repnz
mov
lods
mov
cmpsb
out
mov
push
cmc
fnstenv
pop
nop
mov
xchg
mov
mov
rol
aas
mov
pop
das
cmp
xchg
inc
mov
and
and
pop
mov
and
jnp
pusha
cltd
and
cmp
out
mov
out
ss
or
fldcw
cmp
lcall
test
push
and
fists
mull
outsb
cli
pop
insl
mov
lret
xchg
xor
mov
mov
call
pop
arpl
mov
cltd
and
mov
ds
jp
dec
xchg
and
mov
aad
js
jecxz
aaa
movsb
test
fisubrs
dec
ljmp
xor
fcmove
cmpsb
movsb
out
clc
and
sbb
sbb
scas
popf
leave
push
ret
rorb
mov
adc
sbb
sub
push
mov
or
push
dec
divb
decb
inc
mov
jo
dec
jle
xor
data16
out
int
andps
adc
cld
jp
mov
test
call
cli
cmp
mov
bound
or
mov
mov
ja
xor
bound
sahf
push
loopne
jg
push
fsubrl
xor
cld
sbb
push
dec
ret
push
movsl
test
jge
out
cmp
and
jg
inc
xor
outsl
call
fiaddl
mov
out
jmp
data16
popf
nop
dec
scas
stc
sbb
jl
fs
push
xchg
and
sub
ss
mov
mov
inc
loop
xlat
inc
mov
jmp
cmp
adc
outsl
xchg
pop
xchg
mov
adc
rcll
add
adc
push
lea
xchg
jns
dec
mov
nop
sbb
push
icebp
in
std
sub
mov
pop
popf
cmpsl
xchg
sub
add
loop
xor
pop
push
inc
or
test
test
jmp
cld
push
adc
xor
seto
mov
mov
and
adc
repz
jno
ja
add
push
hlt
fistl
xchg
stos
call
and
ja,pt
pop
xchg
rorl
pushf
out
cli
xor
jne
dec
push
pop
sti
pop
dec
test
fisubrl
lret
and
scas
call
dec
jo
stos
dec
mov
mov
sub
mov
sbb
cmp
and
sahf
inc
jb
lcall
xor
and
pop
fnop
mov
jo
xlat
loope
in
jge
inc
xchg
sub
pop
mov
int3
inc
cmp
xchg
fwait
sbb
iret
push
rorl
xchg
mov
jae
popa
sub
test
push
in
and
and
and
push
in
pop
loopne
and
repnz
jnp
dec
push
xor
pop
push
insl
movsb
rcrl
and
in
aam
sub
das
push
dec
data16
mov
test
lock
mov
pop
mov
aad
pop
cltd
negl
fwait
xlat
into
sbb
ss
mov
add
ficompl
repnz
imul
mov
pop
adc
dec
inc
orb
jge
out
mov
sub
inc
aaa
xor
bound
pop
loope
jb
sarb
or
ljmp
mov
lea
aam
sbb
add
imul
scas
mov
lods
push
pusha
stos
rcrl
mulps
add
push
mov
lock
imul
mov
inc
mov
cmp
mov
push
jns
jl
loopne
pop
and
adc
in
sbb
test
cmpsl
xchg
adc
mov
sbb
sub
add
jmp
push
pop
or
xchg
xchg
leave
int
add
ljmp
aas
das
in
data16
cmp
jmp
jge
outsb
cmp
add
std
ss
push
push
cli
aaa
imul
repz
loope
fistl
call
fcoms
sub
lahf
daa
icebp
sti
out
dec
mov
mov
bound
mov
push
xchg
cwtl
sbb
jmp
push
or
inc
pop
jmp
jg
xorl
in
fcoms
mov
lcallw
data16
call
cli
mov
scas
ja
and
enter
shl
shl
in
add
adc
mov
mov
fwait
lds
mov
test
pop
scas
int
cltd
jbe
aas
sar
rol
mov
or
lret
aad
jmp
sbb
mov
orb
and
loope
rcrl
fcoms
loopne
hlt
pusha
scas
shlb
sub
sbb
and
sub
andb
push
and
sbb
sub
lret
dec
xchg
pop
push
mov
adc
sub
adc
pop
or
push
jne
aas
mov
test
jmp
lds
mov
sbb
das
push
push
dec
imull
push
xchg
fdivrl
clc
inc
push
cmp
sbb
int
lea
leave
mov
mov
rolb
pop
xchg
mov
test
sbb
call
inc
push
push
or
cmp
xchg
sbb
sti
add
aaa
inc
in
fcompl
push
xorl
cld
xor
inc
cmc
xor
sbb
rcrb
aas
mov
fdivrs
lret
aas
popf
cli
arpl
push
lahf
cmp
jnp
inc
movl
ficoml
xor
push
lahf
dec
jl
push
stos
in
rcrb
sbb
and
pop
ret
xchg
or
fildll
stos
fbld
push
adc
sbb
dec
cmpb
xchg
ja
mov
mov
sbb
aaa
sahf
lock
mov
lock
cltd
or
scas
loopne
clc
add
and
imul
push
mov
xchg
push
sub
cmp
mov
push
jp
mov
hlt
jge
repnz
dec
inc
jmp
fcoml
xchg
xor
test
arpl
sar
aam
sbb
clc
sbb
push
push
xor
std
ss
fwait
push
jp
bound
push
ror
inc
push
adc
push
ljmp
lods
cmpsb
aas
mov
lahf
aad
add
xor
insl
es
sbb
mov
xor
stc
jmp
test
jb
ret
xchg
xchg
xchg
stos
mov
jge
lock
lock
aad
sbb
pop
lret
fists
inc
outsb
jo
popa
movsl
scas
fldenv
sub
and
push
aas
imul
popf
inc
divb
xchg
test
pop
ljmp
push
jge
pop
xchg
xlat
jnp
mov
mov
add
cmp
and
push
insb
bound
mov
pushf
sub
push
cwtl
sbb
pop
push
xor
scas
mov
xchg
ficoml
lret
rcll
push
and
outsb
lds
inc
and
je
mov
shrl
push
sbb
icebp
les
jb
or
pushf
xchg
inc
jl
xor
int3
or
cmp
aad
inc
cli
mov
cmp
xchg
push
clc
xchg
sti
ss
dec
fwait
out
out
push
jp
cmpsl
shll
dec
movsb
push
or
stos
std
ja
pop
pop
add
pop
mov
mov
sbb
ss
insb
adc
addr16
push
and
sub
jp
sbb
test
push
and
push
nopl
stos
rolb
jae
les
push
xchg
cmp
sahf
out
icebp
fwait
rcr
mov
clc
inc
fstpl
aas
cmp
cmpsb
inc
addl
mov
aaa
lock
inc
fistps
dec
jp
push
inc
test
mov
mov
repnz
in
int
sbb
xchg
mov
scas
push
lock
sbb
adc
push
dec
add
stc
test
xchg
jb
sbb
int
push
xchg
repnz
jg
push
ror
or
insb
stc
dec
jae
xchg
pop
xchg
stos
mov
xchg
ret
sub
add
adc
pop
jp
cmpsl
enter
mov
adc
push
scas
into
xor
icebp
sbb
rolb
xor
jl
cmpsb
fsubl
cld
pop
jo
add
mov
sbb
bound
mov
adc
in
loopne
sbb
sub
sbb
inc
rorb
mov
hlt
fnsave
push
cmpsb
popf
ret
fwait
aas
jb
push
subl
lock
jmp
add
add
imul
xchg
mov
movsb
sti
fimull
push
sub
data16
adc
scas
mov
jae
call
sbb
inc
add
cmp
mov
inc
mov
jecxz
cmc
pop
mov
daa
pop
subb
scas
arpl
jno
mov
fisubrs
push
mov
es
fiaddl
in
inc
test
mov
mov
movb
lret
dec
add
dec
push
insb
call
lret
and
hlt
mov
into
adc
mov
cmp
xchg
xor
jnp
jnp
cmp
or
and
adc
mov
jnp
pop
movsb
mov
push
pusha
fcom
aad
add
pop
xor
and
ss
popa
jne
xlat
and
mov
fwait
and
adc
adc
dec
sarb
mov
stos
popf
jmp
mov
in
sbb
push
xchg
dec
aas
out
add
xchg
adcl
es
xchg
fwait
jno
rcrb
ss
sub
or
jae
inc
push
sbb
int
mov
rorl
xor
inc
inc
dec
push
sbbb
stos
enter
mov
imul
add
sbb
or
cld
pop
lret
push
inc
and
sub
aas
push
mov
cltd
and
jle
sbb
data16
cmp
xchg
loopne
mulb
xor
fwait
pop
sbb
xchg
fwait
das
mov
out
xor
or
cmp
dec
in
lahf
sbb
mov
lods
fsub
lock
rcl
fimull
mov
dec
sbbl
lret
jb
sti
ljmp
dec
cmp
enter
jle
loop
sbb
loopne
or
and
sahf
lods
mov
in
aas
stc
out
lahf
cmpsl
rsqrtps
dec
cmp
xchg
jo
sub
cld
push
sbb
out
push
or
inc
jge
movsl
test
stos
call
mov
arpl
dec
cmp
push
popf
pop
push
cmp
xchg
popf
xor
out
fwait
add
push
pop
inc
jb
inc
xchg
and
dec
xchg
leave
mov
pushf
or
pop
addr16
es
and
mov
pop
xchg
inc
inc
mov
pop
push
in
shr
inc
add
fidivs
iret
xlat
cmp
nop
lcall
mov
aad
mov
pop
faddl
push
dec
xchg
push
pop
pop
add
mov
stc
das
dec
push
imul
mov
dec
mov
int3
movsl
scas
ret
xchg
int
aad
mov
xor
pop
das
sbb
inc
dec
ja
outsb
or
lahf
mov
mov
pop
into
adc
push
sbb
push
sub
push
jge
daa
sub
les
in
rcr
stos
fwait
pusha
lret
dec
cmp
sub
into
mov
lds
iret
stc
aam
mov
sub
jge
dec
pop
es
xchg
mov
adc
shr
xchg
push
adc
adc
repz
mov
sub
mov
mov
and
xor
xchg
sqrtps
arpl
movl
pop
push
divb
xchg
dec
inc
cmp
and
stos
dec
lds
in
rclb
jecxz
dec
push
movsb
scas
xorl
mov
pop
loope
xchg
xor
pop
sub
jo
dec
pop
sub
and
std
xchg
rcrl
fwait
out
xor
push
cmp
imul
mov
adcb
lahf
fisttpll
dec
enter
das
rol
in
clc
call
push
dec
mov
in
js
sub
aad
lock
add
lahf
xchg
loope
mov
push
in
or
jle
xlat
popa
test
mov
xchg
iret
jae
mov
cli
ss
xchg
push
scas
inc
jp
cs
jmp
dec
into
ja
std
fnstsw
inc
and
icebp
sub
xor
arpl
xchg
in
fnstsw
fucomi
aaa
inc
rclb
imul
add
pop
stos
jmp
shl
jmp
into
sub
je
jne
pushf
cmpsb
repz
xor
loop
add
and
nop
sbb
xchg
push
or
cmpsl
out
ljmp
inc
dec
in
add
jecxz
lret
lcall
int
jnp
xchg
scas
and
xchg
addr16
das
scas
sbb
add
push
scas
ljmp
inc
cmp
mov
cltd
cltd
push
cli
stos
jnp
fchs
ljmp
or
imul
fsts
pop
sub
dec
xlat
popa
imul
mov
mov
gs
or
push
sub
cmp
jo
and
mov
mov
xlat
pop
cs
cmp
push
loopne
xchg
jae
xor
add
ret
out
jbe
loope
rorb
inc
dec
fwait
dec
js
pop
jns
movsl
mov
fsubrp
inc
lods
sbb
inc
ficoml
push
hlt
mov
test
in
testb
mov
scas
mov
cmpb
xor
stos
sbb
jno
and
aaa
orb
jae
and
mov
sub
pusha
das
inc
call
rcr
sbb
cltd
lds
sar
scas
mov
imul
adc
das
push
test
and
mov
xchg
js
jl
ret
int
in
adc
popf
sbb
aas
je
pop
xchg
pushf
cmpsb
mov
popf
fsubrl
push
pop
rorb
sbb
bswap
cli
in
sbb
xor
scas
mov
jge
loopne
jecxz
daa
xor
adc
pop
icebp
and
sub
push
mov
vpxor
sub
sub
pop
test
imul
and
push
aas
mov
es
adcl
scas
fistpl
mov
mov
jb
pop
dec
xor
insl
lret
adc
mov
or
mov
fcmovbe
sub
es
dec
rcrb
jp
dec
sub
adc
inc
jb
xchg
movsl
scas
inc
adc
lds
mov
pop
adc
inc
test
mov
enter
mov
rorb
scas
loop
cmp
or
pop
sbbb
int
sahf
test
lea
cmp
hlt
adc
aas
dec
pop
jno
inc
jg
lea
jbe
mov
mov
orl
call
mov
inc
rclb
call
lds
mov
pop
hlt
mov
shrl
push
sbb
icebp
les
sub
mov
jne
frstpm(287
out
jp
cs
mov
inc
push
adc
push
pusha
nop
adc
jmp
fsubs
movsl
fbld
adc
cs
push
nop
lcall
loopne
mov
jmp
lock
push
mov
push
dec
out
subb
fidivl
and
mov
mov
cmp
dec
ja
jae
push
popa
mov
sub
cli
movsl
mov
jo
test
hlt
jbe
mov
popf
mov
jp
mov
in
inc
dec
push
enter
xchg
insb
jbe
test
inc
push
or
cwtl
add
push
and
into
cwtl
outsl
and
push
sub
mov
in
div
js
mov
cltd
rorb
aaa
lock
sub
pop
data16
jp
mov
xchg
adc
mov
cs
ja
pusha
xchg
std
ja
mov
mov
jmp
ss
clc
push
in
sbb
ficoms
sahf
test
mov
out
lahf
mov
jecxz
dec
fmull
adc
out
push
inc
jo
icebp
cmpsb
sti
inc
jp
fucom
mov
out
stos
add
lods
xor
inc
jge
sarb
outsl
mov
cmpsb
xor
or
cmp
dec
pusha
data16
mov
xchg
std
jge
mov
fwait
hlt
fnsetpm(287
lods
les
push
dec
push
call
rcr
aaa
inc
mov
or
jmp
pop
jecxz
int3
inc
push
mov
mov
add
aaa
inc
int3
or
xor
xor
sbb
mov
aas
test
decl
in
in
clc
add
lock
jae
dec
xor
or
fdivrs
fnstcw
aam
imul
lcall
pop
pusha
lret
daa
push
out
loop
and
push
jmp
pusha
cmp
or
insl
stos
push
pop
lds
and
in
sub
mov
es
and
shrb
sbb
pop
test
mov
rorb
loop
ss
xlat
sub
pusha
cmp
int3
pop
movsl
scas
mov
fdivs
sub
jne
mov
mov
repz
or
ret
and
add
inc
pop
call
cmpsl
scas
mov
cmc
iret
aam
pop
scas
mov
popa
dec
mov
jne
pop
fstl
jp
nopl
pusha
inc
sub
push
dec
incl
insb
stc
ret
int
pushf
cmp
and
pop
push
mov
and
fnstcw
enter
outsl
dec
pop
xchg
popf
jge
fnstenv
loop
int3
aam
xchg
fwait
jp
inc
xchg
movsb
xchg
or
fincstp
lahf
cmpsl
adc
xchg
loopne,pn
dec
lahf
push
jp
jnp
mov
icebp
sti
and
jb
imul
and
mov
outsb
stc
add
jp
mov
dec
and
les
sti
test
inc
lret
aad
xor
fwait
and
push
mov
pop
sub
cmp
inc
jge
xor
js
pushf
sub
push
pop
mov
pop
outsb
js
sub
pop
stos
mov
push
mov
pop
loope
adc
nop
lds
dec
test
xchg
inc
int3
sub
mov
enter
pop
mov
out
inc
dec
push
sub
push
inc
dec
xor
xlat
les
in
inc
mov
and
xor
cmpsb
mov
test
fwait
jecxz
jecxz
cwtl
inc
dec
push
cmc
call
sub
pop
cmp
int
sahf
mov
fs
call
mov
and
ja
pusha
inc
sub
jle
xchg
mov
add
inc
dec
rcrb
adc
xchg
frstpm(287
ret
lahf
sub
xlat
fimuls
jecxz
es
and
mov
or
sub
adc
jmp
sbb
xchg
pop
dec
sub
in
cmc
pop
in
mov
cs
mov
js
cmpsb
xor
sub
pop
leave
shlb
add
cltd
or
aad
xchg
jae
pop
adc
mov
pusha
jecxz
sbb
inc
lods
cmp
jb
fidivrl
push
cli
test
jne
mov
add
sbb
or
xchg
pop
cwtl
mov
or
fistpl
xor
addr16
loope
jne
sub
mov
pop
repnz
xchg
fwait
movsl
insl
sub
test
fcmovnbe
call
mov
and
ja
pusha
inc
sub
mov
lahf
pop
insl
lods
ss
adc
mov
xor
push
popl
ljmp
push
pop
cmp
int
cltd
sub
mov
lret
aad
pop
cwtl
jge
push
inc
loop
testb
push
jo
adc
loopne
mov
mov
sub
cmp
lock
jecxz
mov
jb
xor
jnp
lock
jnp
sbb
sub
jmp
fisubrs
in
stos
lods
scas
jl
sub
loopne
movsl
mov
movsb
jp
push
inc
aaa
stc
jmp
push
and
push
fimuls
je
or
out
or
or
add
orb
or
clc
sub
jge
stos
push
aas
inc
iret
push
dec
jno
imul
pop
mov
mov
or
pop
ret
aad
inc
adc
dec
xlat
loope
mov
mov
fldenv
dec
int
loope
je
in
xchg
faddl
jns
push
sbb
mov
ss
inc
inc
mov
imul
in
lahf
xor
xlat
fidivrs
xor
push
jecxz
mov
jbe
insl
cmpsb
mov
mov
jne
scas
ss
dec
int
popw
cmp
enter
cmp
cs
rol
mov
cmc
dec
fnstcw
in
lods
inc
jbe
mov
adc
clc
jle
lods
jne
das
dec
icebp
or
rcrb
or
jae
hlt
mov
subb
inc
in
ja
or
fwait
add
hlt
sahf
clc
out
ja
fdivs
pop
xchg
fwait
bound
ja
sub
gs
in
fsubrl
pusha
lret
xor
mov
pop
xchg
ds
mov
hlt
in
xchg
mov
inc
aaa
or
pop
inc
dec
scas
shlb
insb
jne
xor
sbb
sbb
cmp
and
enter
ljmp
sbb
shrb
fwait
cmpb
insl
lret
lock
mov
cmp
push
dec
push
sub
and
jp
lahf
fmull
push
xor
inc
xchg
popa
push
jae
add
mov
int
and
stc
jmp
negl
push
xor
js
sub
and
fwait
and
sub
push
cmc
jg
lock
sarb
or
adc
iret
repz
pop
das
mov
mov
push
cltd
mov
sti
add
sbb
or
xchg
jo
mov
or
sbb
mov
aas
inc
pop
push
dec
jno
jmp
jg
xor
es
neg
leave
in
in
mull
cld
sbb
push
fiadds
fwait
movsl
scas
ja
je
mov
shlb
jge
adc
mov
jae
jle
mov
stos
rcrl
shll
fcomps
mov
pop
cltd
mov
inc
or
pushf
push
xchg
pop
addr16
es
fldenv
aad
jmp
fmuls
push
xchg
int
incl
fbld
jge
loopne
mov
cmpsb
xor
sub
cmp
add
ss
dec
xchg
jae
pop
rorb
icebp
mov
pop
cmc
jg
je
sub
dec
scas
mov
fs
inc
dec
push
movsb
fistl
jnp
rcr
mov
fnstcw
lcall
cmp
pop
bound
movsb
jne
or
clc
lds
or
iret
sub
mov
mov
retw
xchg
and
inc
rclb
sub
xor
xchg
lahf
push
mov
mov
inc
mov
orl
sub
xchg
mov
subb
pop
mov
add
xor
and
aaa
mov
jae
shrl
int
into
in
and
lods
mov
out
jnp
pop
inc
test
mov
pop
les
and
in
mov
inc
imul
imul
mov
and
stc
ds
push
pop
hlt
xor
mov
push
mov
mov
lret
mov
insl
arpl
adc
mov
mov
sub
adc
xor
fsub
dec
xlat
mov
and
outsb
fneni(8087
jle
or
sub
fiaddl
movsl
cmpb
mov
jnp
sbb
add
je
inc
es
mov
and
pop
loope
out
stc
ss
or
cmp
mov
mov
aam
rcr
sub
sbb
push
cmp
dec
push
cmpb
jnp
pop
xchg
sarb
mov
push
in
adc
lock
push
ja
in
stos
and
xlat
add
inc
cmc
pop
pop
and
push
sub
div
cmpsb
enter
loop
lds
pop
adc
ja
and
mov
jb
ds
cld
daa
cmpsl
adc
inc
ficompl
ds
xchg
dec
xchg
add
js
out
push
filds
inc
or
inc
pop
nop
sahf
and
enter
orl
fldcw
call
mov
popa
mov
enter
jb
out
fldcw
sbb
add
push
pop
or
les
add
mov
out
add
xchg
and
fsubrs
push
iret
jnp
loopne
pushf
add
adc
nop
sbb
movsl
xor
dec
dec
lret
loope
or
dec
fistps
push
mov
push
cmpb
mov
xchg
jecxz
roll
ss
and
pop
cmp
jl
dec
xorl
mov
cwtl
mov
iret
test
push
or
bound
cmp
out
xor
sbb
lock
popa
jne
or
les
fwait
jg
sarb
mov
addr16
mov
jg
mov
std
jge
xor
lock
notl
push
jne
dec
test
jae
xchg
in
mov
lods
fidivrs
sbb
fdivl
xchg
xchg
and
stos
xchg
or
lods
lods
jle
add
into
decb
call
je
jle
mov
stos
insl
xchg
test
xchg
mov
cli
shl
mov
xor
fs
sbb
in
stos
jg
cltd
jecxz
sbb
add
daa
sub
inc
jb
addr16
push
test
mov
call
mov
je
dec
jl
shrb
lock
add
mov
sub
push
lret
fwait
xchg
fwait
inc
mov
popa
sub
shrl
movb
dec
jle
dec
jno
mov
in
and
std
xor
push
pop
imul
insl
bnd
inc
setae
mul
sbb
inc
or
sahf
jmp
fsub
lock
add
in
enter
das
pop
mov
test
fsubl
loopne
ss
push
cmp
sub
dec
or
out
daa
icebp
cld
daa
clc
mov
adc
andnps
sub
outsb
sti
pop
insb
xchg
inc
int
fwait
jmp
mov
xchg
cli
add
fsubl
aaa
jle
push
lds
mov
enter
fsubrl
inc
rclb
jnp
pop
sbb
inc
jno
xchg
xchg
mov
lret
adc
dec
out
sbb
cltd
dec
push
cmpsl
fs
dec
in
orb
sub
and
out
adc
movsl
adcl
in
testb
es
test
mov
pop
int
adc
cmc
sub
xchg
inc
insl
xchg
mov
mov
mov
xchg
shr
xor
sub
jp
pop
js
push
andb
or
push
sbb
jo
gs
dec
mov
inc
imul
inc
test
xchg
and
int
cmpsl
fcoml
iret
jl
rorl
movsb
fadds
inc
in
pop
add
xchg
pop
rol
outsl
fisubl
pop
daa
bound
lds
inc
mov
dec
or
insl
stos
mov
iret
flds
daa
out
cli
xor
sub
sub
aad
ret
jnp
cs
lods
and
push
or
ret
mov
cmp
jne
fwait
pop
mov
cwtl
out
sbb
or
jl
fcompl
adc
mov
ret
int
test
cs
into
dec
lds
inc
mov
or
loopne
and
imul
in
mov
cs
dec
add
push
pop
aaa
rcr
push
iret
cltd
mov
aad
clc
push
roll
xor
popa
imul
adc
cmpsl
mov
popa
xor
pop
sub
int3
inc
ret
mov
or
pop
rorb
and
xchg
sahf
sbb
push
rcrl
or
loope
cltd
sbb
sbb
ffreep
and
pop
rcrb
sbb
in
popf
data16
sub
mov
inc
fucomip
arpl
movsl
scas
xor
mov
in
daa
xor
insl
dec
fs
push
xchg
xchg
fsubrl
hlt
cltd
sarl
or
sub
mov
mov
push
lret
cmpsl
mov
lock
test
cmp
call
sub
sbb
iret
cltd
sub
scas
pop
mov
into
fmuls
sar
scas
push
pop
push
lcall
loopne
hlt
ret
in
jo
sub
or
out
cltd
mov
mov
jmp
sbb
mov
lret
push
pop
mov
js
rcr
movsl
or
aad
xlat
and
xor
lcall
mov
jno
mov
mov
fisttps
inc
dec
adc
push
in
dec
xchg
fwait
movsl
insb
push
xchg
incl
mov
push
lds
popa
mov
cmpsl
jmp
in
loopne
sub
add
shlb
jge
jb
fs
std
cmp
std
mov
sbb
adc
mov
mov
enter
mov
add
sti
xchg
ss
dec
xchg
ljmp
adc
rcr
mov
push
mov
xchg
sti
dec
push
pop
xchg
psubw
cltd
mov
aad
jmp
sbb
sub
movsl
or
test
or
movsb
scas
jg
xor
outsl
js
sub
mov
frstor
xor
lock
mov
insl
fnstsw
mov
out
push
dec
push
ret
ss
jge
jmp
mov
loop
push
int
aad
xchg
hlt
dec
push
pop
sbb
inc
orb
rcr
scas
iret
pop
rorb
sbb
cli
xchg
sahf
pop
push
pop
imul
loope
inc
xchg
xlat
loope
int3
loop
fistps
and
or
je
in
pop
pushf
cmpsb
mov
push
movsl
loop
neg
icebp
jp
sub
inc
sbb
xchg
popa
scas
mov
mov
decl
ljmp
sub
iret
xor
outsl
mov
jne
add
sbb
push
pop
cmp
sahf
test
sbb
xchg
add
and
js
cmpsb
minps
dec
jecxz
push
mov
xchg
pushf
cmpsb
pop
ret
push
sbb
push
popf
decb
pop
push
sbb
aas
nop
lcall
loopne
pop
mov
aam
push
push
pop
addr16
fdivrl
cltd
mov
aad
jmp
sbb
push
popa
imul
dec
sahf
test
popf
test
xor
dec
mov
mov
push
pop
mov
xchg
mov
rcr
out
fisubl
sbb
sub
pop
imul
scas
xchg
sub
jns
sbb
clc
sbb
mov
into
fdivrs
sbb
sub
add
ficompl
inc
jnp
lcall
cmc
ljmp
mov
and
fists
mov
rcr
out
sbb
sub
adc
in
pop
mov
dec
xor
mov
out
stc
add
jge
stos
xor
dec
sbb
pop
test
cmpl
std
xor
push
cmpl
cmp
jle
fcompp
repz
and
adc
jnp
inc
cltd
xor
mov
aad
insb
jp
cltd
mov
aad
jns
push
pop
push
xchg
scas
mov
sub
hlt
repz
insb
sbb
test
jne
loop
xchg
mov
jl
lods
js
ficoms
inc
jae
pushf
push
andl
scas
loopne
arpl
or
cmc
sub
xchg
jns
push
push
aas
mov
int3
lds
stc
aaa
enter
push
lret
repz
and
lock
xchg
hlt
test
or
push
adc
inc
pop
cmp
sbbb
pop
jl
ja
cli
xchg
xlat
sti
mov
cmp
cmc
sub
dec
jne
push
push
pop
xchg
call
ss
outsb
or
pusha
inc
int3
std
je
test
mov
mov
inc
fildl
pop
stc
sub
sbb
cmp
jno
sub
stc
mov
xor
adc
jne
xchg
push
mov
jno
mov
out
jmp
and
or
es
sbb
inc
imul
stos
notl
std
pop
xor
and
push
cmp
jne
lods
mov
adc
loop
clc
sbb
mov
pop
mov
inc
jns
loop
iret
nop
adc
out
push
inc
inc
push
cmpsb
mov
pop
cmpsl
xchg
dec
mov
lds
in
sub
and
inc
xchg
pusha
pop
in
ret
int
je
xchg
ret
jmp
push
adc
mov
xchg
fsts
fisubs
mov
pop
push
pop
imul
scas
mov
shll
mov
aas
rclb
push
inc
or
pop
mov
jge
mov
pop
and
cmc
push
mov
cmp
xchg
push
int
add
jmp
hlt
das
and
xor
outsl
test
test
ret
sbb
jne
sbb
add
js
fisubl
leave
pop
iret
or
jge
add
ret
cld
inc
popa
sbb
cmp
mov
mov
out
cmpsb
in
aaa
decb
adc
divl
xorl
push
jns
fmul
xchg
jmp
xor
getsec
and
inc
mov
xor
outsl
push
aam
js
lret
addr16
mov
inc
or
sbb
pop
outsb
inc
ret
mov
or
cli
mov
inc
insb
push
and
ret
pushf
scas
rcl
rcrl
mov
popa
dec
add
or
imul
mov
push
or
int3
add
jmp
orb
test
ret
pushf
inc
push
mov
dec
cmp
cli
ret
xor
jae
pop
jle
outsb
fwait
mov
xlat
add
clc
sbb
mov
dec
jbe
addr16
and
sub
filds
push
pushf
pop
sub
inc
outsl
lahf
cmpsb
in
dec
jp
mov
inc
movsl
aad
std
mov
cld
das
arpl
cmp
dec
adcb
movsb
aad
sub
fmuls
test
mov
scas
jbe
mov
das
pushf
inc
stc
out
pop
xlat
std
and
dec
aas
out
jnp
fistl
stos
push
ror
flds
fdivrp
xor
add
sub
cmp
imul
jge
pop
in
cmpsl
jecxz
xchg
push
lahf
push
dec
loope
je
in
xchg
fdivl
movsl
or
fucom
adc
add
out
outsb
aaa
inc
dec
jne
push
jae
les
nop
mov
int3
or
cmp
sbb
mov
pusha
loopne
mov
leave
adc
and
popa
es
es
sbb
mov
es
test
pop
sbb
cmp
es
clc
jae
push
inc
mov
push
mov
mov
dec
loope
xchg
sahf
test
pop
pusha
nop
fwait
movsl
outsb
mov
jne
xchg
popf
paddusb
inc
das
fldt
popa
mov
pop
sarb
jo
add
out
inc
int3
cld
divl
shr
out
loopne
scas
mov
jmp
mov
lea
aad
das
pushl
cmpsb
mov
pop
mov
scas
cmp
iret
sti
cmp
inc
dec
mov
cmp
push
inc
fsubl
adc
jmp
rorb
adc
loope
lds
jnp
xchg
push
pusha
push
add
xor
xchg
rcrl
sti
movsl
lcall
testl
push
xchg
rcr
in
sbb
or
cld
and
sbb
into
xor
cltd
je
fs
xchg
mov
mov
add
or
xlat
cmp
nop
lcall
loopne
hlt
pusha
fists
and
fildll
pop
inc
and
fdiv
push
and
mov
xchg
loop
loopne
in
sbb
sub
loope
adc
mov
in
mov
sub
mov
int
dec
insl
sub
imul
sti
add
add
push
pop
jmp
dec
adc
mov
mov
decl
in
in
clc
add
inc
out
add
jno
into
mov
pushf
ret
aam
cltd
rolb
lock
data16
jbe
jl
shrb
jge
test
ja
push
mov
mov
sub
loopne
mov
fucomip
data16
ss
push
jbe
xchg
test
ret
int
lret
std
adc
test
fisubrl
dec
and
stc
xor
sti
mov
mov
adc
movsl
ljmp
push
pop
push
add
outsl
cmp
int3
lahf
popl
ret
int
shr
xchg
mov
xor
mov
aad
jmp
sbb
sbb
sbb
push
mov
into
or
repnz
not
inc
mov
push
or
mov
mov
sbb
aaa
stos
push
push
pop
imul
sbbb
sub
les
fs
push
pop
rolb
dec
sub
xor
ja
ret
stos
add
ljmp
outsb
add
arpl
push
mov
xchg
ret
test
sub
loopne
mov
push
jp
rcr
add
push
ror
mov
insb
clc
rcrl
scas
mov
sub
cmpsl
jno
inc
insb
out
pop
in
mov
mov
arpl
push
mov
push
sbb
xchg
fwait
sti
lea
xlat
xor
nop
lcall
icebp
push
and
mov
daa
push
into
cmp
cltd
mov
adc
lret
mov
popl
xlat
aaa
leave
xchg
sahf
mov
jp
rcr
jne
fnstenv
push
and
stc
dec
add
mov
scas
jp
sbb
popf
sub
movsl
jecxz
mov
xchg
fisubrs
pusha
in
xchg
push
jmp
or
xchg
inc
dec
push
iret
rorl
mov
movsl
xor
add
jo
sub
in
out
lret
inc
jo
outsb
out
mov
sub
rorb
icebp
mov
sub
cmp
mov
push
fistpl
push
mov
xchg
sbb
sub
dec
hlt
cld
js
mov
cmpsl
xor
or
cld
push
push
idivb
decb
inc
sbb
inc
jle
cmpb
sbb
mov
pop
push
pop
movsb
daa
lea
mov
or
lret
push
sub
daa
jno
sub
in
fwait
adc
jmp
iret
sbb
rorl
add
jo
push
shlb
sub
out
mov
sub
cld
cmp
mov
mov
popf
cmpsl
adcl
lcall
mov
out
dec
test
xchg
inc
dec
test
mov
xor
push
aaa
inc
adc
cmpsl
mov
fs
arpl
adc
jae
pop
push
jp
and
mov
mov
divl
inc
adc
sub
mov
inc
push
sbb
xlat
pusha
dec
nopl
ss
or
mov
rcr
mov
pop
and
sbb
dec
adc
mov
xchg
ret
cmp
in
ja
or
add
inc
nop
adc
dec
xchg
cmp
mov
cmc
lds
nop
xchg
dec
in
clc
js
sub
push
jmp
sub
lock
add
mov
and
in
inc
push
popa
push
pop
sub
popf
pop
fwait
data16
dec
fcoms
dec
sub
out
ror
flds
adc
inc
dec
pop
movsl
xor
mov
fcmovnbe
fsubs
js
out
add
inc
rorl
pop
into
fdivr
lret
mov
in
xchg
mov
inc
aaa
or
xchg
cwtl
sub
pop
pusha
fsts
daa
push
push
cmpsl
sbb
dec
xlat
pusha
push
pop
pushf
bound
lock
stos
out
fwait
std
mov
daa
cmp
push
pop
test
nop
push
pop
fwait
in
leave
mov
ljmp
cmp
in
lods
cmp
out
xor
pop
and
inc
fistl
pop
loope
jp
push
jg
scas
mov
scas
hlt
js
adc
ljmp
cltd
sub
push
sbb
das
push
inc
push
push
sbb
sub
inc
arpl
mov
mov
xor
imul
icebp
fwait
cmpsl
sub
jo
dec
popa
ljmp
pushf
sbb
test
or
es
fimull
movsl
dec
lea
xchg
sahf
jmp
rcll
or
loope
pusha
lret
cmp
xchg
jge
mov
cmpsl
in
cmpb
adc
ficoms
rcrb
cwtl
mov
in
daa
xor
lock
xlat
and
pop
aaa
dec
loope
cmc
jbe
sub
iret
out
aad
sub
lret
call
mov
fs
ss
dec
mov
jb
fsubs
push
and
mov
and
adc
sbb
pusha
lods
inc
xorl
mov
test
or
pop
dec
xlat
xor
arpl
xchg
fwait
loopne
enter
and
pop
les
mov
popl
data16
push
and
and
sub
sbb
ds
xor
pop
inc
xchg
das
xchg
loop
imul
push
pop
sbb
xor
mov
mov
out
lret
arpl
sub
sahf
imul
scas
rorb
mov
fwait
sub
in
mov
in
cmp
jmp
sti
mov
lea
cmc
push
mov
push
sbb
xchg
pop
imul
out
mov
dec
cltd
pusha
lret
daa
adc
add
dec
mov
subb
push
mov
sbb
icebp
and
sub
jl
repz
push
out
mov
sub
add
je
imul
sbb
or
aad
ja
xchg
pop
adc
sbb
push
lcall
and
hlt
rcrl
mov
mov
jp
push
aas
ljmp
lods
mov
sub
pop
jmp
cmp
mov
dec
dec
pop
push
lcall
jmp
sbb
insb
jmp
mov
jb
or
dec
push
xor
inc
xchg
inc
out
cmp
repz
mov
aad
in
popf
add
je
dec
xchg
and
xor
add
test
push
mov
xchg
clc
pusha
out
mov
sub
ficoms
stos
ljmp
dec
sbbl
out
cli
xchg
rcrl
test
jo
movzbl
ss
dec
pop
pop
data16
es
loopne
mov
aas
loopne
les
add
aad
jae
call
clc
orl
int
mov
inc
jl
inc
cltd
fiadds
scas
insb
pop
shlb
jbe
js
or
mov
les
mov
jg
in
jo
fs
dec
lods
imul
std
pop
scas
mov
popa
idiv
xchg
cmpsl
cmp
lods
push
add
cmc
decb
xor
cmp
adc
orl
mov
fiaddl
jmp
mov
aas
sbb
imul
push
pop
rorb
push
aam
imul
scas
jo
mov
lds
cmpsl
xor
sbb
and
scas
ja
mov
dec
sub
mov
dec
rcrl
test
pop
push
stos
push
adc
push
fwait
movsl
inc
or
xor
pusha
push
fdivp
sbb
push
mov
dec
push
movsl
xchg
sbb
cli
ja
or
loope
jp
push
lcall
mov
out
mov
jmp
call
push
sbb
fcmovu
mov
xchg
inc
dec
xchg
adc
xchg
ret
dec
push
out
fbstp
cmp
and
insb
xor
xchg
and
mov
std
pop
cmpsl
sbb
int3
sub
mov
mov
inc
test
add
sub
add
jge
xor
movsl
scas
mov
test
or
call
sub
inc
out
add
pop
cmp
into
mov
mov
aam
xchg
xor
inc
xchg
sub
ds
imul
int
mov
or
ja
mov
js
pop
jbe
test
jbe
sar
fldenv
mov
push
mov
int
pop
pop
cmc
pop
inc
and
add
pop
icebp
xor
sub
sub
pop
jmp
fwait
and
jbe
hlt
loope
jb
mov
mov
scas
mov
mov
jle
jno
iret
jo
lds
rorl
shrb
aam
inc
dec
sbb
loope
push
mov
inc
cmp
rcrb
push
lret
rep
ljmp
cli
test
mov
jg
xor
cwtl
and
pop
imul
movsl
adc
push
xlat
loope
jb
rcrb
add
inc
xlat
sbb
mov
mov
mov
adc
xor
and
push
loope
mov
or
lods
jae
add
imul
stos
cmp
ljmp
sub
and
sbb
lret
mov
sarl
lcall
adc
dec
cld
add
ror
xor
into
dec
sbbl
and
and
push
daa
call
ljmp
mov
dec
lcall
cltd
push
aad
scas
sahf
sub
rcr
push
loope
popl
stos
ret
cmp
icebp
sub
aad
scas
fldenv
or
pop
das
sbb
xor
adc
push
fucom
dec
mov
nop
xchg
sbb
cs
xchg
dec
pop
sbbb
cmp
mov
cmpl
xor
icebp
bound
mov
mov
aam
mov
stos
mov
imul
scas
mov
jge
dec
iret
ja
roll
lahf
cmpsl
sbb
insl
dec
sub
xchg
pusha
push
jae
sbb
orl
sti
ja
mov
jl
imul
scas
nop
int
scas
rcll
sahf
lock
out
jno
push
test
pusha
jle
push
arpl
fdivrs
lcall
vmovupd
les
scas
inc
ret
pusha
ljmp
cmc
ds
js
jbe
orb
inc
lret
aad
jnp
pop
push
lea
cmp
dec
jb
jb
sbb
out
pop
push
mov
ja
xchg
mov
cmpsl
hlt
inc
ss
and
aam
addr16
xchg
aad
dec
push
pop
jmp
dec
adc
mov
xchg
jne
or
jb
pop
shrl
or
sbb
je
dec
push
sbb
outsb
xchg
in
mov
leave
in
in
not
movsl
mov
daa
jae
dec
dec
xchg
mov
imul
jge
adc
push
or
out
cmp
jle
xor
cmpsb
lock
les
dec
loop
adc
mov
jl
inc
lcall
mov
push
adc
sbb
pusha
push
inc
and
aas
xchg
push
mov
daa
leave
xor
aas
pop
aaa
jl
cmp
mov
test
scas
mov
in
xchg
rorb
xor
repz
sbb
sub
mov
mov
add
les
shrb
mov
sarl
aas
mov
int
xchg
jnp
std
push
mov
sbb
sbb
in
pop
add
push
push
xchg
rcll
into
mov
out
clc
and
and
dec
push
xchg
dec
or
mov
test
jecxz
cwtl
sbb
pop
push
xor
scas
mov
xchg
ficoml
lret
sub
in
push
adc
inc
fldl
mov
aaa
lahf
fsub
lock
lret
ss
dec
fldlg2
push
push
inc
adc
xor
in
mov
add
push
adc
dec
cmp
or
mov
mov
arpl
pop
push
sbb
mov
sub
cmp
jp
ret
jb
fldcw
push
and
js
lret
inc
out
es
inc
dec
subb
es
lret
aad
imul
das
cmp
lret
xor
xchg
add
out
insl
xchg
inc
jmp
sti
xor
dec
ljmp
push
popa
mov
fucom
icebp
js
push
notb
xchg
stc
out
or
pop
bound
stos
insl
mov
lods
fucom
adc
stc
push
xor
pop
pop
cld
ss
xor
mov
testl
aaa
inc
adc
dec
jl
insl
fwait
ss
fisubl
xchg
lock
jb
ficoml
dec
clc
cmp
sbb
inc
jl
insl
xlat
testl
mov
pop
test
ja
xlat
loopne
scas
push
nop
mov
mov
and
repnz
and
pop
or
push
orb
sub
pop
mov
and
popa
adc
sub
cmp
pop
pop
jge
lds
es
push
lods
push
and
sbb
jmp
adc
dec
jp
pop
js
shlb
lret
adc
out
push
sbb
dec
pushl
dec
je
push
jb
mov
mov
lods
in
std
pop
adc
cli
sub
arpl
dec
popa
xchg
mov
popf
cmp
std
cmpsb
fsubrl
cmc
and
pop
out
pop
jo
push
stos
aaa
pushf
das
cmpps
in
aad
or
cmc
sub
xor
dec
adc
xchg
cmc
mov
movb
out
dec
or
xorb
pop
sbb
pop
mov
jne
cmpsl
xor
in
sub
sub
xchg
mov
xor
add
sbb
cmp
add
jl
push
sub
sub
frstpm(287
scas
cmp
xchg
fsubl
cltd
push
inc
test
inc
js
repz
inc
lahf
pop
sbb
adc
insl
pop
imul
ljmp
mov
dec
xchg
ljmp
mov
aas
add
mov
das
cmp
adc
mov
lahf
pop
in
sahf
cltd
into
lret
or
or
loop
cli
arpl
cmp
bound
add
hlt
cmp
xor
pslld
sysexit
daa
mov
outsb
dec
xlat
loope
pop
sti
jno
cmpsl
cs
imull
imul
mov
push
pop
mov
push
pop
mov
sub
sub
push
xchg
call
xlat
loope
popf
ror
hlt
les
xor
jecxz
adc
stos
sbb
dec
aas
dec
xchg
js
push
icebp
and
sub
dec
dec
hlt
cld
js
mov
in
ret
ljmp
push
pop
add
push
lret
aad
data16
push
leavew
mov
mov
aad
and
arpl
xor
loopne
in
push
icebp
add
sbb
inc
pop
mov
movsl
fsubrp
repz
mov
sar
fisttpl
or
imul
bound
fwait
ss
mov
or
imul
fwait
cmpsl
sbb
push
outsl
cmpsb
cmp
xchg
fsubs
sub
mov
xchg
or
mov
test
shlb
add
sub
jecxz
xchg
pushf
cmpsb
mov
fistpl
rcrb
sbb
or
xorb
xchg
stos
cmc
loop
add
xchg
adc
dec
push
mov
xchg
daa
cmp
mov
sbb
add
and
sbb
push
cmpsl
leave
std
mov
mov
cmp
add
pop
jnp
sub
xchg
fildl
inc
testb
jecxz
sub
scas
subl
hlt
mov
sub
cmc
pop
cli
or
pop
testb
dec
aad
xchg
lahf
sbb
adc
push
fidivs
xchg
mov
std
test
lcall
stos
xor
cmp
les
adc
rcr
mov
sbb
lcall
jge
push
push
push
test
dec
mov
or
out
mov
xor
xchg
pushf
cmpsb
adc
into
fsub
dec
movsb
orl
and
mov
xchg
jo
adc
into
push
leave
mov
sbb
ret
sbb
xchg
ss
mov
lock
push
sbb
mov
cmp
movsl
mov
rcl
pop
call
or
out
inc
insb
inc
je
inc
test
sbb
test
mov
leave
in
testb
hlt
pop
sub
lret
inc
divl
dec
ja
pop
mov
in
mov
or
data16
xor
dec
pop
add
nop
sub
repz
pop
sbb
mov
dec
lods
arpl
inc
xchg
test
mov
pushf
repz
ds
push
xor
in
sub
roll
out
sti
lds
fstl
inc
cmp
dec
mov
cmp
stos
mov
aaa
pop
or
fldenv
mov
push
xchg
popf
jge
aad
ss
in
xor
jae
push
xchg
adc
cmc
jmp
adc
ja
push
push
enter
mov
popf
cmpsl
lock
mov
and
xor
push
les
push
in
aaa
or
cli
test
xchg
jmp
adc
and
lea
pop
out
js
and
repz
hlt
lods
call
push
pop
dec
xlat
xor
push
inc
xchg
fwait
gs
mov
jmp
jae
push
or
data16
enter
ljmp
fsub
mov
inc
push
sbb
mov
lret
lret
xchg
pop
bound
and
mov
add
test
stos
xor
dec
loopne
data16
jle
dec
imul
mov
sti
add
hlt
sub
and
sbb
add
push
aas
cmpsb
hlt
decl
in
mov
js
dec
sub
xor
mov
les
mov
icebp
adc
xchg
pop
pushl
push
xchg
fwait
movsl
pop
inc
mov
int3
inc
cmp
sub
cs
push
stc
xor
sbb
orl
and
inc
daa
jb
xchg
xchg
and
dec
xchg
ret
jo
sub
pop
cmp
pop
orb
cmpsb
xrelease
inc
pop
mov
xchg
add
test
or
in
enter
jmp
sbb
iret
cltd
sub
fists
jo
cmp
leave
loope
adc
jp
imul
or
scas
mov
popa
dec
mov
jne
pop
gs
xchg
je
sub
sbb
jge
cmc
stc
pop
out
mov
cmpsl
jne
or
ds
outsb
cmp
add
iret
xor
pop
int3
add
jae
dec
movl
add
jmp
sub
aas
mov
data16
jle
mov
inc
mov
enter
push
xor
daa
mov
mov
xchg
fsubrl
hlt
cltd
shll
xchg
insl
aas
dec
push
ret
cld
mov
pop
fwait
inc
dec
mov
sub
dec
push
sbb
daa
cmpsb
popf
push
push
or
lret
aad
imul
aad
inc
dec
push
xchg
and
rcrl
fiaddl
ljmp
jg
pop
in
cmovs
adc
mov
lock
aad
clc
test
jecxz
aam
sub
jb
xor
mov
daa
jmp
xchg
insl
das
cmp
inc
push
mov
xchg
popf
push
test
push
xor
mov
fcomi
cmp
int
popf
imul
les
pop
dec
fistps
js
aas
out
idivl
test
jp
in
mulb
xlat
add
push
sar
pop
negb
movsl
scas
jp
enter
mov
jo
sahf
jmp
scas
arpl
adc
push
ljmp
xor
pop
xor
movsl
imul
pop
stc
mov
push
push
jno
jl
dec
imul
aas
ss
aad
add
mov
lret
subb
cwtl
out
testb
pop
loope
jp
push
call
int3
scas
lea
rolb
les
rorb
mov
push
insb
jnp
push
inc
mov
mov
mov
mov
scas
or
pusha
push
fnstcw
xchg
sahf
test
ficomps
xor
insb
push
lret
aad
jmp
ret
orb
outsl
inc
mov
shrl
inc
or
xchg
mov
xchg
inc
dec
into
cmp
adc
loop
int3
add
cli
iret
and
repz
cs
addr16
and
sti
xor
enter
adc
push
push
or
hlt
decl
push
inc
mov
orl
adc
or
pushf
dec
push
pop
lcall
jns
add
fwait
in
stc
lcall
push
pop
lods
dec
sarb
add
repz
rcr
fists
std
push
sbb
sub
inc
adc
sbb
sahf
xlat
imul
clc
add
fsubs
xor
mov
mov
cmp
stos
repz
sub
pop
push
cwtl
aaa
jae
mov
aad
xor
iret
pushf
scas
mov
in
add
jo
sub
mov
flds
pushf
or
jge
pushl
pop
mov
sbb
test
mov
outsl
filds
sub
stc
cmpl
jns
stos
mov
push
sbb
xchg
mov
push
xor
ss
mov
pop
mov
pop
loop
xchg
repnz
dec
pop
cmp
xor
jl
out
cli
rcl
mov
sbb
dec
pop
ror
inc
dec
xchg
clc
dec
cs
movsl
xchg
or
cld
sbb
sbb
test
testl
add
mov
in
popf
movsl
clc
push
pop
push
pop
imul
push
xlat
and
pop
addr16
fdiv
inc
jecxz
mov
lret
xor
jns
gs
sbb
add
mov
scas
cld
push
fiaddl
clc
add
xchg
jmp
data16
popf
nop
dec
jne
pop
mov
inc
movsb
push
add
aaa
inc
dec
mov
xchg
push
sub
mov
mov
jne
add
orl
sbb
pop
mov
ss
push
pop
imul
movsl
test
lcall
sti
out
call
pop
arpl
inc
rcll
mov
test
orb
mov
cltd
movsl
cmc
push
pop
push
fildll
xchg
test
adc
or
test
leave
out
rcll
mov
std
pop
mov
lret
pop
loope
xchg
pushf
push
mov
xchg
pusha
xchg
pop
stos
mov
inc
jns
xor
xor
hlt
push
sbb
jno
je
enter
loop
sahf
push
sbb
mov
sahf
xchg
jle
mov
add
jne
mov
dec
xor
add
push
popa
mov
xchg
enter
dec
pop
fmull
sbb
mov
pushf
mov
push
pop
pop
or
mov
adc
mov
pop
out
push
and
cmp
mov
fs
mov
flds
push
xor
js
inc
push
jl
jae
and
outsl
je
rorb
lret
flds
xchg
mov
push
fsub
lcall
cld
mov
jb
xor
sub
lcall
push
fimuls
mov
imull
mov
push
sbbb
fldenv
sub
std
xor
dec
fistps
adc
int3
test
xlat
add
call
mov
cltd
add
ror
push
test
xchg
inc
dec
cmp
push
jmp
pminub
mov
arpl
xchg
and
xor
out
dec
ficomps
inc
cmp
jne
enter
mov
sub
cmp
jge
sub
push
stc
ret
int
push
imul
and
pusha
push
cmp
dec
push
sub
jp
pop
sub
add
das
cmp
and
lret
test
cmp
lsl
test
ja
ss
push
lahf
jge
daa
cmpsl
lock
ss
and
mov
add
and
jecxz
xchg
fmuls
cmpsb
ds
cltd
sub
fists
jno
ss
push
filds
sahf
enter
xchg
mov
or
iret
ret
jbe
or
push
or
inc
dec
jp
inc
test
xchg
rorl
or
dec
fldenv
sub
gs
sbb
mov
mov
popl
xchg
xlat
push
pop
sbb
push
loopne
and
ja
out
fisubl
mov
repz
mov
out
cmp
scas
mov
push
lcall
jno
cmpsl
cs
xchg
push
movsl
imul
cmpsb
mov
sub
loop
mov
ss
sbb
dec
aam
add
ja
int
inc
push
test
adc
dec
pop
xor
fldcw
or
js
mov
mov
fimuls
push
pop
inc
sbb
mov
es
out
stc
aam
xlat
insb
call
pop
addr16
movb
inc
mov
jecxz
fdivrp
into
push
or
inc
dec
sbb
sub
adc
jb
imul
pop
cltd
ret
int
sbb
push
pop
addr16
push
iret
data16
push
push
mov
push
popf
add
cli
push
out
sbb
sub
loope
push
sahf
test
mov
out
clc
jnp
adc
push
mov
orb
cmp
sub
mov
icebp
sti
lds
fstpl
sbb
push
mov
jbe
xchg
sahf
out
and
rcrl
and
cli
ret
adc
xor
data16
sub
in
mulb
fisubrs
mov
jae
call
mov
ljmp
xor
sbb
stc
jmp
cmp
outsb
stc
insb
test
mov
push
pop
aad
sbb
fwait
or
sbb
cmp
in
pop
pusha
aad
and
push
out
cltd
sbb
sub
inc
sub
push
fucomip
les
mov
inc
stos
and
jb
jmp
sbb
mov
mov
js
clc
jnp
cmpsb
icebp
pop
addr16
out
xchg
mov
and
mov
aad
rcrb
sub
inc
dec
push
xlat
pop
xor
dec
out
jo
mov
mov
jmp
roll
std
movsl
mov
xor
push
inc
push
imul
xchg
cmp
lcall
addl
cmp
add
jb
loope
mov
fs
add
jmp
mov
aas
mov
mov
out
testb
test
xor
dec
aad
sbb
jp
sbb
dec
lcall
dec
push
adc
adc
xchg
std
dec
mov
enter
out
cli
add
arpl
bswap
add
or
inc
fisubrs
mov
mov
out
stc
test
int
call
pop
addr16
fsubp
pop
sbb
push
cmpsb
push
pop
movsl
push
sbb
add
pop
ret
adc
dec
sub
repz
imul
fwait
pop
fs
push
and
stc
sahf
stos
pop
pop
addr16
test
pop
and
pop
jmp
jge
outsb
cmp
add
out
jg
imull
jb
mov
clc
add
adc
add
ret
orb
push
popf
cmpsl
adc
into
sbb
lret
xchg
pop
push
push
pop
mov
ja
xchg
fwait
dec
or
jle
cltd
std
or
ficompl
lahf
inc
dec
push
outsb
cmpsb
jecxz
xchg
pushf
cmpsb
inc
mov
clc
sbb
sub
shr
cmp
jge
bnd
scas
mov
jmp
mov
xor
push
ja
in
jns
stos
mov
add
inc
mov
cli
add
jge
sub
inc
insl
mov
data16
dec
adc
sar
inc
mov
jle
das
aas
dec
push
xchg
aaa
jne
popl
dec
jo
out
das
mov
sbb
push
lods
sub
push
xchg
lcall
inc
xchg
decb
mov
add
addr16
adc
cltd
push
clc
orb
adc
ljmp
sbb
sahf
add
sub
or
imul
rorb
add
cmp
and
sub
jl
aad
loopne
xchg
add
out
mov
rclb
xchg
fwait
jbe
pop
xchg
dec
xlat
loope
rcl
scas
in
mov
xor
push
sbbl
jns
lds
cmpsb
iret
mov
cmp
fwait
movsl
test
jmp
push
repz
sbb
mov
mov
fstpl
mov
mov
faddl
clc
add
jnp
int3
xor
dec
sub
push
xor
jbe
mov
out
stc
test
int
call
pop
addr16
inc
mov
dec
aad
jmp
fsubs
into
orl
cwtl
xor
jge
ret
inc
push
ret
decb
add
adc
pop
xor
push
xchg
aad
jmp
fsubrl
jbe
ss
xor
pop
push
fsubl
sti
fildll
xor
nop
mov
sbb
ja
push
mov
mov
cmpsb
rcrl
jns
in
hlt
rorl
arpl
xchg
cmp
xor
jo
adc
cmpsb
loopne
mov
out
push
aas
dec
xchg
cs
xchg
push
test
movsb
xor
mov
and
xor
push
jp
outsl
push
je
sbb
jbe
clc
ret
xor
and
sub
push
pusha
mov
addr16
cmpsl
rorl
jno
add
add
dec
jae
cmp
push
fwait
movsl
int
imul
loopne
out
push
xor
inc
jle
pop
xchg
pushf
aam
push
adc
add
inc
out
push
fdivl
sub
jae
int3
mov
cmpsl
xor
xor
xor
fstl
dec
js
insl
test
stos
je
enter
fstpt
sar
stos
ret
ss
mov
add
test
scas
mov
sub
jmp
and
sbb
ret
sub
scas
mov
jmp
mov
insb
cmp
jge
ret
addr16
loope
mov
and
in
or
test
pop
jnp
push
test
cmp
je
bswap
add
add
mov
cmp
dec
test
mov
aam
insb
adc
add
cmp
inc
jne
dec
jle
arpl
mov
ret
lock
gs
dec
mov
stc
add
mov
add
mov
jnp
push
std
add
ror
fbstp
std
xchg
aam
mov
sub
pop
push
xchg
bnd
adcl
lds
ret
add
push
stos
cmc
ljmp
cmp
in
and
mov
cmpsb
mov
cmp
adc
repz
cmc
cs
js
mov
mov
std
and
repnz
inc
dec
push
jg
jae
jns
sbb
test
fcomps
notb
cmp
dec
jl
push
mov
rcrl
out
sbb
and
cmc
sub
pop
jb
mov
xchg
iret
flds
sbb
or
cmp
aas
dec
test
in
movsl
loopne
loop
xchg
sbb
adc
push
pusha
mov
push
sbbb
in
xor
and
daa
cmp
push
pop
dec
dec
push
pop
fwait
movsl
int
rcll
dec
in
xor
cmp
je
pop
cwtl
push
mov
into
clc
mov
adc
std
cmp
aaa
push
fildll
mov
scas
hlt
js
shll
fisttpll
jo
push
test
test
stos
mov
int
sbb
xor
sub
lcall
aad
outsl
adc
adc
or
scas
cmp
movl
shlb
insl
aaa
inc
fnsave
adc
js
add
lahf
neg
mov
push
inc
pop
xor
xchg
sub
dec
mov
mov
sbb
mov
orb
out
scas
adc
jae
call
sbb
push
cmp
dec
push
orb
pop
xchg
jmp
mov
icebp
stos
loop
enter
pop
divb
daa
inc
aad
test
sbb
fld
jl
shrl
fcoml
idivl
rclb
or
notl
mov
pop
xchg
lods
dec
cmpl
or
push
pop
mov
xchg
shrl
fmull
sbb
and
pop
jne
mov
cltd
shrb
mov
movl
adc
cmpb
sub
arpl
mov
or
inc
pop
inc
cld
inc
push
jmp
insb
or
jle
push
popf
cmpsl
push
inc
in
fdivrs
adc
inc
or
push
xchg
mov
adc
stc
push
xor
inc
pop
loope
jne
xor
in
loop
cli
cmp
push
sbb
mov
inc
daa
std
push
push
ret
int
ds
jne
or
stos
lock
xchg
cli
add
adc
ljmp
shrb
lock
push
cmpsb
jmp
sbb
lret
mov
xchg
mov
or
add
repnz
sbb
push
pushf
cmpsb
shrb
in
jnp
adc
stc
aaa
jecxz
push
sbb
pop
lcall
popa
sub
es
push
inc
and
rcll
outsl
test
loopne
test
sbb
aas
adc
push
pop
jp
outsb
push
sbbb
aam
icebp
adc
ja
js
dec
mov
mov
push
loopne
adc
push
in
xor
push
ss
jns
orb
rolb
mov
fwait
and
pop
daa
popa
and
imul
xchg
ja
scas
cmp
iret
mov
or
aaa
dec
fsubl
pop
insb
movsb
push
cli
test
pop
xchg
sbb
mov
ds
stos
mov
test
cli
lds
jge
lods
ss
cmc
icebp
xor
and
adc
insl
dec
frstpm(287
fmuls
lcall
adc
adc
inc
dec
push
pusha
push
mov
pushf
cmpsb
aas
mov
sub
adc
xor
push
imul
inc
push
xchg
mov
dec
hlt
or
cmp
dec
pop
fs
js
sub
fucomip
repz
shl
lock
add
and
ss
aad
icebp
or
rcrb
int
ret
push
xchg
pop
scas
mov
popa
dec
mov
jne
test
cmpsb
test
sbb
ljmp
jae
add
pop
bound
loope
mov
movb
int3
push
and
push
inc
adc
mov
add
in
jp
xchg
mov
inc
aaa
jmp
pop
inc
mov
andl
aam
cltd
mov
add
sub
and
popa
push
add
pop
cmp
shlb
shrl
nopl
daa
cld
mov
sbbl
xchg
and
cwtl
pushf
add
es
adc
mov
iret
ret
cmp
je
mov
adc
mov
movsb
inc
int3
loopne
stos
jle
push
orb
and
inc
dec
jp
popa
cwtl
xor
fucomip
mov
adc
scas
cmp
mov
jmp
jg
cmc
cmp
jp
push
scas
mov
cltd
fdivrl
addr16
sbb
push
rcr
dec
dec
mov
in
les
adc
aaa
fadds
add
jmp
arpl
frstor
or
lods
add
push
in
pop
pop
cmpsb
mov
les
lock
mull
jae
idivb
xchg
movsl
scas
jp
xchg
mov
insb
jne
cmpsb
xor
sbb
sbb
cmp
and
push
jle
xchg
cmpsl
cmpsl
xor
fsubrl
xor
jl
imul
int3
frstpm(287
ret
inc
ret
or
aas
dec
aam
pop
cmp
in
push
and
pop
jmp
out
test
add
jl
aas
clc
stos
jae
dec
push
lds
mov
jb
cmpsb
or
cli
dec
xchg
xor
sbb
dec
stos
mov
iret
enter
scas
cmp
add
pop
ss
adc
mov
fwait
aaa
inc
nop
orb
aad
xor
pop
jecxz
jno
xor
mov
icebp
sti
lds
stos
and
fisubrl
fwait
movsl
sbbb
pushl
popf
and
imulb
xchg
pusha
dec
sub
testl
cs
xor
fwait
push
jbe
sub
inc
dec
ficoml
jae
cmp
scas
mov
jge
jmp
sbb
mulps
ret
inc
mov
pop
iret
jle
sub
mov
popf
icebp
les
fdivr
xor
adc
sub
jge
jno
and
mov
cmp
fsubrl
fiaddl
popf
add
insl
lods
imull
les
repz
sbb
push
pop
aas
daa
repz
jecxz
stc
addr16
cltd
lock
daa
clc
jbe
pop
xor
push
push
in
xor
jl
pop
mov
mov
cmp
xor
sub
sbb
orb
sbbl
lods
mov
movsb
fisubs
inc
cld
aaa
push
jmp
pop
mov
loope
mov
cwtl
rcrb
push
or
push
inc
fistl
xchg
pop
fwait
pop
inc
cmc
decl
imulb
sub
arpl
push
sbb
aaa
mov
cmpb
mov
into
aaa
lock
lods
inc
repnz
xor
lods
push
mov
xchg
ud1
mov
xor
cmp
xor
cmpsb
enter
icebp
sbb
or
push
cli
and
dec
push
pop
xchg
movsl
xchg
fists
mov
leave
adc
and
or
push
jo
dec
test
push
ret
loopne
adc
or
lret
fistpl
mov
mov
jae
cmpsl
das
xchg
movsl
out
pop
xchg
int
loope
movb
adc
xor
es
dec
sbbb
ficoml
jae
fdivs
aad
pop
sbb
jb
mulb
ror
jmp
fsubr
int3
cwtl
and
js
dec
jne
imul
adc
decb
sbb
pop
inc
push
lahf
aad
sarb
mov
fldl
in
int
xor
xor
inc
out
adc
mov
out
mov
scas
cmp
pusha
iret
divb
sbb
data16
cmpsb
pop
lcall
subb
jb
ja
insb
cmc
pop
sub
adc
loope
mov
mov
vxorps
ss
dec
gs
jbe
inc
scas
push
in
ret
and
or
sbb
pop
adc
pusha
jp
push
mov
pop
int3
add
in
fwait
lock
inc
std
cmp
xchg
lret
jnp
sahf
pop
movl
and
dec
add
outsb
cwtl
jl
fcmovbe
in
clc
mov
xchg
into
sub
push
dec
inc
pop
and
cmp
xor
add
push
jns
das
call
imul
or
stos
iret
mov
fst
add
loop
dec
xor
mov
arpl
test
out
pop
xlat
adc
in
inc
cs
push
mov
mov
push
enter
pop
sub
inc
or
data16
cmpsb
pop
fwait
loope
fcoms
mov
inc
dec
lock
iret
sub
je
pop
xchg
mov
sarb
bswap
add
pop
sbb
mov
inc
fmull
and
fisubrs
gs
adc
pop
adc
pusha
mov
jle
subb
fdiv
adc
pop
mov
dec
sahf
pop
adc
pop
test
jge
subl
idivl
add
jnp
adc
xchg
sub
ficoms
sbb
rcrb
push
jle
jo
mov
clc
aad
lret
sub
cmpsl
add
imul
jns
fcmovnbe
jle
test
fchs
or
add
sub
sbb
push
add
xchg
notl
rorb
pusha
ljmp
xor
shl
pop
sarl
and
fdivs
xchg
push
jge
ret
int
ret
insb
or
fimuls
fwait
or
dec
pop
and
xchg
mov
pop
movsl
loopne
mov
sub
and
pop
or
jns
rcr
mov
mov
sub
inc
or
push
mov
xchg
fbstp
test
cmp
push
loop
xor
inc
cs
push
pop
or
jp
int3
test
xlat
add
in
sahf
fiaddl
and
xor
in
add
nop
cmp
fildll
faddl
loope
push
repnz
and
adc
cmc
pop
data16
mov
push
scas
mov
out
xlat
std
pop
adc
and
popa
imul
mov
push
aaa
adc
jge
dec
cmc
push
fwait
cmp
lea
and
lahf
cmpsl
sbb
pusha
push
cmp
xchg
jo
sub
test
stos
inc
dec
sub
idivb
xchg
inc
mov
lret
imull
pop
xor
inc
insb
dec
arpl
mov
ret
and
and
inc
imul
adc
stos
pop
stc
add
and
xchg
or
fmuls
cltd
mov
aad
mov
pusha
faddl
sbb
pop
push
jl
xchg
sbb
rcrl
jp
and
mov
adc
push
dec
andl
std
jge
lock
lock
rorl
cmp
sbb
aaa
inc
mov
jne
mov
push
rcrb
dec
cmp
imul
jl
lock
loopne
xchg
in
les
inc
loop
add
mov
movsb
cmc
jl
rcr
sub
add
jbe
xchg
jne
adc
mov
sbb
or
pop
sbb
aas
enter
mov
xlat
mov
scas
jmp
push
sbb
js
cmp
pusha
push
jae
xor
mov
xchg
movsl
ss
dec
pop
add
aaa
inc
dec
fcompl
adc
rcr
mov
xlat
mov
cwtl
pushf
add
inc
jnp
dec
or
iret
insl
cmpsb
aas
jp
outsl
enter
add
adc
push
ja
inc
nop
adc
into
xchg
cmp
adc
decb
mov
rcr
push
mov
mov
aad
push
mov
push
cmp
stos
ret
sub
push
stos
or
clc
push
lret
and
scas
mov
insl
adc
mov
dec
insb
outsl
ds
mov
xchg
adc
push
pop
cmp
push
add
xlat
gs
dec
push
sarl
adc
add
or
cmp
arpl
push
xchg
fdivrl
push
mov
dec
push
pop
inc
das
es
push
incb
jle
ret
int
mov
ror
mov
loop
xchg
fcmovne
cmp
mov
xchg
popf
cmpsl
push
test
xor
jl
cmp
jae
cmpsl
jle
lds
or
and
dec
jecxz
gs
mov
or
loop
mulb
jb
xor
inc
daa
subl
cmc
decl
pop
or
mov
pop
popf
xchg
xor
ljmp
add
cmp
and
cmp
jb
sbb
int
jae
imulb
dec
push
and
andb
push
xchg
xlat
dec
mov
test
pop
rorb
sbb
out
pop
push
xchg
pop
add
xor
lret
mov
mov
add
clc
add
xor
aam
inc
cmpsl
popa
movsl
jns
imul
cmpsl
in
cmpb
inc
dec
push
pop
cmp
sub
popa
ret
cli
test
add
sub
jle
push
daa
sub
cmpl
in
das
mov
push
sahf
cmovnp
jl
inc
int
stos
in
xor
and
or
and
cmp
pushf
xor
mov
jne
roll
add
cwtl
sbb
push
jo
inc
jge
bound
xchg
shl
jmp
addr16
and
js
xchg
rorl
jle
sar
jg
mov
lds
mov
gs
rcr
movsl
fldcw
popa
mov
lcall
loopne
and
push
fucom
or
sub
pop
call
push
aas
in
mov
enter
stos
jg
adc
dec
out
dec
out
or
stos
xor
in
mul
sahf
roll
push
pop
dec
aam
push
xchg
fwait
jbe
sbb
xlat
loope
cmpsb
pusha
mov
lock
and
sti
fs
dec
pop
stos
mov
sub
nop
gs
out
shll
or
push
cld
pop
cs
xchg
cmp
or
jl
nop
dec
pop
push
fdivs
setns
aad
jae
fidivl
pop
and
dec
lds
ret
sbb
cs
adc
daa
jns
loopne
and
add
addr16
xor
or
lcall
loopne
xchg
loopne
dec
push
es
lret
dec
xchg
pop
cmp
inc
xchg
das
mov
add
push
scas
xlat
xor
in
ficomps
ret
mov
pop
stos
ss
pusha
popf
lahf
sti
cld
xchg
idivb
adc
inc
xchg
roll
fwait
aas
fs
test
lea
out
stc
add
push
push
mov
es
mov
mov
sub
adc
cmpsb
xchg
lods
inc
pusha
xchg
leave
loop
mov
xchg
addb
pusha
cmp
pop
mov
and
scas
icebp
sub
into
jmp
push
testb
mov
imul
xor
movsb
or
jl
push
cmp
data16
xorl
mov
xchg
cmpsb
scas
in
push
sub
cmpb
icebp
add
pop
loope
cmc
int3
xor
adc
xchg
mov
ret
repnz
inc
nop
std
and
fildl
jl
pop
pop
pop
pop
mov
cmpsb
test
or
jl
adc
add
xor
test
jg
mov
test
fiaddl
inc
loope
hlt
ror
cmp
cmp
mov
jmp
int
adc
out
clc
inc
fisttpll
pop
mov
enter
loop
and
lds
push
mov
andl
push
adc
mov
mov
rcr
in
stc
add
inc
sbb
dec
stos
test
push
xorb
push
leave
jo
fcoms
xchg
add
loop
xor
push
out
cli
push
lea
inc
mov
cmpsb
call
cmp
out
add
or
dec
icebp
mov
lods
mov
cmp
xlat
cmp
cmpsb
aaa
inc
xor
notb
fwait
lds
scas
stos
in
stc
mov
hlt
xchg
pop
or
mov
popa
or
fwait
rcrb
or
cmc
sub
push
enter
inc
lea
nop
jmp
lret
adc
add
inc
insl
inc
pusha
or
cmpsl
xchg
lds
add
inc
std
sub
dec
pop
inc
hlt
pushf
push
test
adc
add
negl
pop
pop
inc
jns
mov
stos
bound
icebp
scas
orb
xor
push
std
ss
push
sub
add
jns
add
frstpm(287
out
stc
add
inc
sbb
pop
xchg
xor
add
jbe
jo
xor
pop
and
xor
cmp
xchg
cwtl
mov
aam
jmp
jns
jmp
nop
push
movsb
xchg
mov
into
fmuls
iret
repz
pop
into
mov
xchg
jg
lret
hlt
push
imul
movsb
mov
aas
or
sbb
incl
in
cmp
push
aas
pop
movsb
sbb
dec
pop
out
pop
dec
inc
inc
dec
movsl
lock
movsl
scas
mov
sub
xor
adc
and
push
popa
inc
icebp
popf
cmp
and
xlat
mov
jbe
mov
xchg
je
popf
sbbb
jmp
cmp
mulb
loop
decb
push
mov
imul
and
lock
jb
adc
test
pop
data16
push
cmp
mov
call
sahf
les
add
ds
shr
bswap
mov
jns
pushl
sbb
pop
mov
mov
mov
fucomip
shrb
outsl
mov
sub
scas
inc
ret
xor
dec
cmp
aas
clc
inc
imul
sub
jle
xchg
pop
imul
iret
and
in
xchg
jecxz
scas
sub
out
dec
js
fdivrl
push
mov
mov
faddl
mov
mov
push
add
fwait
mov
lret
mov
call
stos
and
lahf
adc
repnz
or
lods
jle
arpl
cwtl
subb
sbb
mov
in
into
add
xchg
sbb
das
ljmp
pop
and
stc
mov
enter
push
adc
push
ret
sbb
das
or
int
xor
push
push
mov
pop
cmp
call
fdivs
push
pop
push
sub
imul
dec
ficompl
aas
lahf
xor
xchg
out
addl
cmp
xchg
or
cmp
and
pop
je
mov
lods
fcmovnbe
and
cmp
test
mov
nop
inc
movsb
push
push
cmp
lock
mov
sbb
ffreep
inc
push
pop
out
push
loop
fisttps
mov
nop
pop
mov
and
int
mov
movsl
dec
adc
jl
ljmp
lock
pop
aad
mov
jl
mov
mov
repnz
lea
imul
dec
sbb
mov
mov
pop
xor
xor
loop
test
inc
mov
push
lret
call
sbb
pop
add
arpl
fsubl
frstor
out
stc
mov
fcoms
in
add
adc
add
mov
mov
dec
fadd
and
inc
lcall
push
mov
enter
mov
repz
fcoms
mov
dec
negl
aas
mov
jno
fidivl
int
outsb
dec
aam
fmuls
invd
and
retw
pusha
lcall
push
mov
mov
insb
stos
mulb
pop
and
xor
cmp
sub
cmp
or
dec
lds
test
cmp
aad
bound
adc
loop
xor
mov
sbb
xor
xor
cmpl
movsb
mov
sarl
adc
and
and
inc
popa
dec
jo
leave
outsb
sbb
sbb
outsl
in
jmp
sbb
js
lea
sbb
leave
lock
arpl
int
mov
ss
jge
jno
iret
aas
lret
mov
inc
add
xchg
pop
lret
push
aam
inc
mov
mov
sub
mov
xor
jnp
insl
sbb
push
into
pop
repz
xchg
or
cmp
cmp
add
adc
sub
cmp
push
pop
inc
sahf
orl
cld
stc
aad
out
and
jne
push
lods
imul
std
cmpsb
rorl
cmp
cli
jbe
push
xchg
mov
rcrl
cs
daa
xor
inc
dec
pop
arpl
subl
and
cli
mov
sbb
or
es
mov
orl
jecxz
mov
and
jo
mov
data16
jne
mov
mov
leave
jl
mov
push
push
push
mov
icebp
mov
lods
sbb
arpl
sbbb
inc
sbb
popa
inc
adc
ja
mov
fcoms
ret
cld
push
adc
sbb
push
cld
lock
push
jae
jno
push
jle
mov
add
adc
push
cmp
cmp
xor
pop
movl
adc
sbb
and
cmpb
leave
adc
mov
jnp
stos
mov
leave
rcr
out
sti
xor
xor
jb
xchg
mov
fs
mov
fistpl
lcall
loop
cmp
jne
out
decl
repz
inc
add
dec
cmp
pop
inc
pop
xchg
or
pusha
mov
xor
cmp
jge
stc
sub
xchg
out
loope
xchg
dec
sti
div
clc
dec
mov
pop
pop
pop
pop
mov
xchg
les
push
frstpm(287
out
stc
add
push
psubsw
ret
and
mov
rcrb
jmp
daa
pop
fildll
sub
mov
mov
clc
ret
add
outsb
jmp
ret
stos
and
or
cmp
pop
enter
fistl
mov
mov
mov
movsl
mov
repz
mov
inc
stc
or
push
mov
xchg
stos
out
cli
add
add
and
test
mov
aad
rcl
std
clc
clc
sti
push
sbbl
jne
push
xor
shlb
popf
mov
jo
sbb
lds
sub
or
sub
call
insb
fiadds
cli
push
repz
fisttpll
jge
cmpsl
pop
and
cltd
ret
mov
iret
cli
cld
pusha
mov
pop
aam
jae
mov
push
cwtl
mov
negb
bound
shl
cltd
mov
push
mov
xor
jg
push
shrl
stc
mov
decb
adc
xor
inc
xor
in
aaa
add
jne
rcrb
sbb
dec
dec
and
js
outsl
fcoms
shl
int
in
test
xor
dec
jg
das
dec
inc
adc
push
sbb
fcomip
int3
sbbl
je
jae
xchg
sub
sahf
aas
rcr
push
loope
and
fsubr
in
sbb
dec
cmp
mov
mov
int
repz
adc
add
or
imul
or
popf
push
mov
int3
clc
mov
mov
push
xor
sbb
insb
jbe
jnp
inc
jns
loop
lret
add
sbb
int3
cmp
dec
jns
pop
xchg
fisttpll
mov
idivl
xor
mov
mov
ret
loop
lret
subb
sub
adc
mov
pusha
push
jae
xor
lcall
bt
aas
or
sbb
xor
inc
xor
in
aaa
add
jne
rclb
sahf
or
out
cmp
xor
xchg
lcall
push
in
mulb
decl
push
inc
fwait
sbb
das
push
idivb
inc
loope
faddl
nop
adc
pop
out
out
pop
jne
xchg
mov
rcrb
mov
sbb
cmpl
xchg
aad
leave
jb
out
lret
ljmp
jg
js
push
nop
mov
mov
stc
sbb
es
pop
or
les
inc
nop
add
cmp
dec
push
cmp
xchg
push
jl
sbb
cmpl
mov
push
push
adc
jo
xchg
cmpsb
pusha
popl
loopne
in
test
lock
and
pop
aaa
dec
clc
xor
ljmp
int3
loopne
hlt
decb
adc
xor
inc
xor
mov
int
inc
sub
and
sahf
dec
and
je
test
mov
mov
stos
repnz
jno
inc
out
xor
pop
push
fwait
int
lahf
jl
mov
mov
or
xor
add
in
dec
mov
push
push
jb
xchg
shr
fdivs
lock
and
fldenv
adc
push
add
int
dec
imul
mov
aad
fchs
or
or
and
xchg
jle
dec
jle
outsl
or
ss
test
mov
jbe
jecxz
shrl
sbb
inc
jmp
push
popf
fisttps
mov
mov
lcall
aam
lock
mov
adc
stos
fcoms
hlt
sahf
cmp
xor
or
cmp
test
cld
out
xlat
and
and
out
dec
fcoml
inc
xor
scas
mov
into
jmp
adc
and
push
popa
imul
jno
lahf
fidivl
negl
and
mov
ja
imul
jnp
ret
int
shr
xchg
shl
cmp
cmpb
in
sub
cmpsl
mov
lods
push
pop
in
xchg
roll
inc
lret
and
xchg
fs
jbe
sub
mov
shrl
pop
push
shll
cmp
popf
pop
xchg
cmp
fsubs
std
imul
pusha
stc
push
cmovp
push
lea
xchg
ljmp
sub
dec
push
popa
imul
nop
mov
jo
bswap
add
cmp
inc
jo
push
mov
les
call
pop
hlt
dec
mov
out
das
dec
mov
push
mov
inc
icebp
stos
loope
sbb
clc
in
or
outsb
inc
dec
jae
xchg
fwait
push
nop
mov
mov
jmp
add
jle
mov
scas
imul
pop
mov
pop
adc
xchg
inc
mov
jnp
cmc
fwait
loop
jecxz
out
test
or
out
bound
sub
cmp
push
pop
inc
sahf
add
pop
cld
test
cli
roll
inc
aad
jmp
loope
das
and
call
hlt
sbb
push
test
ljmp
xlat
or
push
lock
fiaddl
adc
sahf
pop
add
je
movsb
xchg
sahf
enter
rcrb
cld
mov
jmp
popa
cmp
cltd
imul
dec
add
cmp
nop
je
pop
push
xchg
call
push
or
decl
fwait
lds
add
mov
stos
mov
lods
sbb
arpl
adcb
sbb
cmp
adc
xor
lahf
cmp
mov
jmp
mov
and
cmp
test
nop
dec
sbbl
or
shrb
popa
cmp
add
jno
pop
mov
int
shr
pop
rolb
pop
movsl
push
in
cmpb
pop
inc
sahf
subl
out
test
cwtl
popa
imul
sbb
jae
xchg
movsb
call
mov
and
sbbl
movsl
lds
or
ljmp
jmp
inc
dec
pop
sbbb
pop
xchg
les
push
les
mov
adc
and
js
mov
scas
add
sub
cmp
cmp
adc
dec
mov
in
cmpsl
loopne
jmp
cmp
shll
dec
subb
arpl
fldl
fdivrp
add
push
mov
cmp
pop
bound
test
ror
fucomip
shrb
cmp
xor
pusha
push
movsb
pop
cwtl
inc
ja
loopne
sar
mov
pop
imul
insl
es
mov
gs
mov
or
sbb
jb
push
sti
es
cwtl
and
ljmp
movb
or
add
xor
xor
fisttpl
push
outsl
faddl
pop
xchg
std
sbb
adc
dec
hlt
rolb
mov
fdivrs
clc
mov
xchg
xchg
mov
fs
andb
cmpsb
pop
xchg
inc
aas
mov
and
cmp
loope
inc
add
gs
add
push
xchg
lods
test
mov
in
sbb
xor
inc
dec
pop
arpl
jns
popa
xchg
aaa
ror
fpatan
shll
add
inc
sbb
dec
mov
xchg
into
jnp
mov
jno
movsl
scas
sbb
dec
and
js
dec
imul
jl
loopne
xchg
jg
fbld
fdivr
insb
jmp
lahf
xchg
dec
popf
pop
push
je
mov
and
fadds
fiaddl
dec
stc
aad
xor
daa
insb
loop
fwait
mov
in
adcl
and
mov
and
sti
mov
mov
out
clc
scas
subb
das
inc
jo
arpl
scas
lret
mov
scas
adc
pop
adc
clc
push
and
pop
mov
iret
clc
loope
or
xchg
xchg
pop
imul
mov
popa
xchg
mov
rcrl
testl
mov
or
mov
mov
push
jp
cli
mov
in
es
cltd
push
jp
femms
jp
push
loope
mov
hlt
fsubl
mov
arpl
subl
call
pop
pop
icebp
stos
rolb
and
aas
icebp
push
sahf
test
add
ja
inc
scas
mov
mov
mov
xor
jb
bound
jno
lahf
fidivl
popf
aad
mov
dec
push
sub
jge
js
fwait
das
scas
inc
rcl
ret
cmc
xchg
cmp
dec
test
dec
dec
jns
pop
push
insb
xchg
aaa
cld
test
cli
roll
inc
aad
jmp
loope
das
and
call
hlt
sbb
push
test
xchg
dec
xchg
push
iret
mov
mov
sub
sbb
dec
enter
mov
mov
fwait
int3
out
or
call
xor
and
xor
data16
fs
xorb
icebp
ljmp
aas
es
cli
xchg
push
mov
fwait
shll
dec
pop
and
xor
addr16
test
mov
xor
adc
push
pop
imul
callw
dec
push
sahf
lcall
push
outsl
xchg
orb
popf
in
stos
gs
push
xor
and
dec
jmp
insb
push
stos
movsb
scas
mov
or
jnp
xor
inc
pop
xorb
push
jb
mov
shll
out
or
add
dec
inc
inc
dec
je
pop
test
fsubs
jmp
gs
mov
in
testb
adc
sub
cmp
jg
xchg
jp
in
stc
fisttps
sub
in
sub
dec
dec
xor
ficoml
leave
iret
xor
inc
jns
xor
imul
inc
sti
mov
fidivrs
sub
cmp
mov
xorb
fisttps
sbb
push
sbbb
pop
nop
mov
pop
js
icebp
sbb
or
adc
cmc
outsb
sbb
test
mov
test
jmp
cmpb
dec
inc
xor
cmp
jns
ret
out
push
leave
fsub
in
mulb
fists
push
cmp
cmp
inc
js
adc
pop
jl
mov
xchg
lcall
stos
fs
inc
mov
mov
mov
mov
out
sti
out
and
dec
bound
jo
mov
sahf
stos
sbb
repz
ret
pop
cmpsl
and
pop
xor
push
lcall
loope
and
mov
les
fadds
sub
pushf
push
nop
push
lock
in
leave
sub
add
inc
daa
sti
sub
popf
mov
testl
hlt
sub
jo
inc
jp
mov
leave
pop
mov
adc
adc
push
xor
xchg
sbb
rorl
sar
cmc
subl
pop
cmp
ret
add
jb
push
fucomip
shrb
test
mov
xor
insb
or
pushf
cmpsb
shrb
jecxz
testl
add
rorl
int3
jbe
mov
mov
add
dec
inc
jg
js
sub
insl
popa
mov
jo
add
into
sbb
ss
fwait
push
jmp
nop
fwait
lds
scas
stos
fdivrs
stos
cmpsl
mov
and
fs
or
cmpsl
pusha
cmpsl
add
stos
fstp
mov
pop
lock
add
sbbb
push
sarb
cs
sub
dec
sub
inc
cs
xchg
sbb
rorl
lret
sbb
jo
mov
data16
jp
lock
mov
hlt
fsubrl
pop
mov
push
sub
mov
dec
shll
ja
mov
ljmp
inc
popa
mov
push
push
mov
lahf
push
mov
ds
fwait
testb
in
cltd
mov
adc
stos
in
loop
pop
shrb
cmp
pop
imul
icebp
fistl
std
icebp
jno
dec
hlt
cmp
mov
mov
mov
and
push
inc
sub
or
pop
loope
mov
xchg
pop
pop
or
rep
call
sbb
ss
pop
ja
outsb
xor
stos
push
jae
psubusw
or
jle
and
aaa
jp
xlat
jbe
sbb
dec
clc
mov
outsl
fiaddl
inc
xor
pop
subl
sbb
xchg
inc
sti
mov
pop
icebp
adc
lock
push
stc
test
mov
mov
jge
cmp
pop
dec
inc
mov
pop
pop
dec
jns
mov
in
sbb
inc
cli
xor
push
pop
imul
lods
mov
mov
sbb
cmp
pop
xchg
jp
jno
jge
int3
xchg
sar
fists
push
cmp
inc
push
pop
mov
mov
mov
jmp
and
jl
push
sti
sbb
rorl
or
dec
push
sub
sbb
dec
mov
xchg
lea
lret
jb
fstps
pop
xor
pop
pop
xchg
jo
adc
xlat
xchg
mov
int3
adc
or
cmp
pop
mov
push
scas
fcoms
out
clc
add
push
clc
jae
xchg
push
test
icebp
test
bswap
add
cmp
and
pop
jle
cmpsb
bound
pop
fiaddl
mov
cmp
ret
inc
mov
ret
xor
lcall
mov
icebp
dec
push
inc
sbb
enter
enter
sahf
fwait
jns
mov
in
movsb
loope
or
in
sbb
jnp
insb
inc
addr16
dec
test
xchg
fxch
in
or
stc
and
sub
lahf
pop
mov
adc
mov
add
adc
sub
cmp
push
pop
inc
sahf
subl
xchg
out
mov
push
rorl
out
test
dec
imul
jge
xchg
fwait
mov
ret
call
inc
repnz
xor
popf
pop
xchg
lds
out
lods
out
out
xor
push
pop
inc
and
jmp
js
cmpsl
mov
lahf
roll
fistpll
xlat
adc
movsl
xor
inc
stos
push
out
movb
mov
faddl
push
arpl
inc
jo
cmp
dec
cmpsb
jns
mov
imulb
adc
push
mov
inc
dec
jbe
jae
scas
jnp
cltd
movsb
xchg
out
lods
insl
scas
loope
test
and
rclb
movsl
fs
jns
mov
pop
imulb
push
out
adc
inc
dec
jbe
sbb
and
xor
clc
xlat
icebp
sbb
repz
push
jbe
mov
xchg
call
aas
clc
daa
aas
adc
mov
adc
mov
sbb
inc
and
pusha
jmp
popf
and
lret
test
lcall
into
sbb
inc
pop
push
jb
mov
orl
add
and
xor
xor
and
xor
sar
pop
aas
dec
ja
jo
jge
pusha
pop
xchg
in
insl
andw
pop
lret
or
data16
xor
lahf
cwtl
outsl
insb
test
or
add
pop
adc
ja
stos
addr16
mov
mov
cld
sbb
sbb
pusha
imul
mov
pop
fdivp
sbb
xchg
adc
dec
inc
lock
je
test
xchg
mov
xchg
mov
pop
fcompl
cmpsb
inc
cmp
jae
xlat
xchg
and
int
loope
push
sbb
pop
inc
and
xor
insl
adc
scas
jb
sbb
lock
dec
add
xchg
int
sbb
push
xchg
lret
aad
repz
daa
sbb
or
outsl
cmpsb
add
flds
mov
shll
cld
xchg
fwait
bound
mov
dec
sbb
clc
and
dec
std
cmpsl
popa
test
dec
mov
out
adc
adc
inc
adc
and
mov
fcoms
xor
and
pusha
push
fadd
jle
xchg
cmpsl
jle
mov
inc
sti
mov
inc
imul
insl
cmp
and
xchg
test
mov
mov
dec
jbe
outsl
mov
int
insl
xchg
jo
into
clc
test
notb
lcall
inc
int
out
dec
dec
mov
mov
in
cmc
lret
adc
pop
push
sub
mov
and
xlat
in
add
in
psrad
imulb
dec
popf
mov
scas
jg
push
aad
or
jge
sarb
hlt
xor
sti
mov
dec
insb
fcmovnbe
jle
inc
iret
fchs
or
or
mov
inc
dec
jle
jo
cmp
xlat
sahf
test
insb
xlat
cwtl
clc
fs
add
aas
dec
jno
sbb
jg
adc
out
lret
cmc
rcr
adc
fidivrs
test
loopne
or
cli
and
inc
pop
add
gs
daa
sbbl
sub
inc
aaa
hlt
sub
mov
out
ss
xchg
insl
mov
movsl
scas
mov
jne
aam
sahf
repz
gs
lock
pusha
push
inc
insl
imul
lahf
mov
mov
sub
insl
sbb
lcall
mov
mov
es
add
cmpl
enter
or
and
xor
and
sub
cmp
out
lret
jnp
hlt
and
inc
mov
xor
mov
popa
xchg
gs
xchg
mov
xlat
ja
in
sbb
add
lret
popa
mov
cmpsb
pop
fwait
in
jl
push
adc
ret
or
sbb
dec
xchg
xor
jns
mov
loop
lods
les
pop
fstp
call
push
adc
imul
int3
cmpsl
ret
ljmp
in
inc
incl
fstpl
cmp
jp,pt
fstpl
cwtl
adc
aaa
hlt
push
push
push
dec
repz
insl
xchg
sbb
fs
pop
mov
enter
sbb
jmp
pusha
stc
je
adc
fdivs
in
mov
imul
das
insb
ret
cmc
cmp
jl
in
les
mov
mov
outsb
sub
mov
insl
mov
fiaddl
mov
out
and
dec
lock
cmpsl
xchg
sub
lock
mov
adc
dec
push
ja
and
mov
sbb
not
out
adc
lret
out
fistps
xor
mov
lahf
rcrb
mov
push
xor
pop
cmp
insb
xchg
dec
jbe
popa
dec
mov
adc
add
testl
clc
mov
hlt
push
cwtl
mov
aam
push
sbb
bound
xor
addr16
in
popf
mov
push
pop
sbb
and
push
pop
jb
fwait
inc
jnp
repz
fcoms
sub
pop
cmp
push
xchg
dec
jl
push
lcall
jle
mov
add
adc
dec
or
in
pop
dec
xchg
jge
bound
jbe
adc
in
in
testb
adc
sub
cmp
push
pop
inc
sahf
subl
xchg
out
mov
push
rorl
out
test
dec
imul
jge
xchg
fwait
mov
ret
cmpsb
jmp
inc
sbb
fimull
cs
mov
cmpb
sbb
push
out
dec
mov
xchg
insb
adc
sub
or
mov
adc
sti
pop
or
lea
popf
lea
cmpsl
mov
in
or
sbb
xor
inc
dec
pop
arpl
jns
popa
into
xchg
fidivrs
add
pop
sub
addr16
test
mov
push
nopl
xor
sbb
inc
jnp
ja
movsl
scas
mov
test
sbb
or
imul
jno
lahf
mov
pop
and
rcll
or
pop
push
dec
pop
hlt
jge
xor
jle
loope
cmc
or
push
mulb
jne
xchg
mov
rcrb
mov
jmp
es
rcrl
int
aad
mov
cmp
sub
and
mov
stos
sahf
push
lock
es
jbe
fadds
add
mov
mov
leave
ret
iret
ljmp
jg
push
inc
iret
flds
fdivrp
mov
sub
xchg
lahf
data16
pop
pop
rcl
push
push
adc
adc
daa
and
outsb
sub
repz
lret
ljmp
sahf
imul
int
ret
jecxz
decl
mov
pusha
push
orb
sbb
xchg
std
scas
push
sbb
jae
sarl
xchg
jmp
cmp
adc
out
sti
sub
and
mov
jge
and
mov
xchg
std
sub
insl
jb
cltd
pop
lcall
rcr
jmp
or
jg
adc
push
jae
popf
pop
xchg
mov
pushf
fadds
cld
stc
mov
xor
cmc
inc
dec
jge
adc
mov
outsl
fiaddl
inc
mov
xor
imul
jp
in
mov
hlt
es
std
push
adc
in
push
dec
xorl
popa
mov
stos
scas
aad
call
or
jle
adc
push
jb
mov
mov
out
fadds
push
pop
sub
aaa
cmpb
xchg
xchg
cld
mov
jbe
mov
cli
in
mov
cmp
dec
subb
mov
xchg
push
stos
xchg
cmp
add
xor
add
pop
jmp
or
rorl
mov
jmp
mov
cli
dec
js
movb
outsb
js
outsl
inc
lock
ds
popa
out
sbb
add
and
add
sub
dec
imul
loope
xor
add
das
or
popa
inc
mov
sarl
into
ljmp
or
dec
pop
mov
mov
jns
imul
xlat
adc
and
sti
jp
pop
xchg
stos
outsl
lret
cmpsb
negb
fnstcw
adc
adc
cwtl
push
out
pop
push
mov
enter
in
mov
pop
pop
dec
decb
jle
daa
mov
sar
movsl
aad
adc
cmp
lods
aam
mov
push
imul
cmp
jmp
sub
sbb
sbb
mov
lcall
xchg
fists
or
inc
push
imul
addr16
int
shl
adc
or
out
es
mov
sahf
cwtl
mov
and
clc
mov
and
sbb
cmp
jo
mov
lods
sbb
in
fwait
jmp
std
popa
loopne
testl
jne
xchg
nop
popf
cmpsl
scas
jb
fnstcw
out
xor
adc
and
fs
sbb
sub
int3
pushl
fwait
roll
ljmp
push
or
mov
popf
iret
dec
or
scas
loopne
mov
int3
add
jge
inc
pop
test
cwtl
test
lods
mov
mov
iret
add
cmp
js
imul
test
out
sbb
or
xchg
and
sahf
test
push
fldenv
clc
int
mov
lret
jmp
out
or
inc
in
je
test
mov
jecxz
testl
add
jne
or
xor
lret
mov
add
cmp
aas
sbb
fcoml
leave
rcr
lock
push
mov
dec
push
jle
imul
stc
fs
js
sarl
repz
sbb
sub
imul
popf
sahf
mov
add
outsl
pop
adc
dec
pop
andb
mov
pop
cmpsb
fs
negl
add
out
push
jne
in
inc
cs
dec
mov
ret
icebp
scas
loope
mov
aam
pop
sub
pop
inc
push
imul
dec
in
test
iret
dec
pop
and
pop
inc
int
fisttpl
jmp
or
lret
aaa
icebp
addl
scas
imul
movsl
scas
mov
hlt
fsubrl
mov
mov
bound
arpl
push
roll
or
dec
or
imul
test
cltd
movl
mov
sbb
push
pop
fs
xor
xchg
sub
sahf
aas
sbb
faddl
loope
and
fsubr
in
sbb
add
mov
lods
sub
xchg
aad
mov
pop
xor
and
dec
movsb
out
mov
sub
xchg
ret
loope
and
out
adc
dec
inc
hlt
sub
dec
xchg
pop
mov
fisttpll
stos
shll
add
inc
daa
mov
lret
lea
rcr
mov
loopne
xor
push
cld
push
jge
cmpsb
pusha
lcall
add
jecxz
insl
cmp
push
gs
mov
mov
rcrb
mov
into
pop
push
fdivl
fwait
push
nop
mov
test
jmp
inc
cld
xchg
adc
pop
das
cmp
dec
adc
scas
aaa
mov
in
roll
out
mov
lret
xchg
xlat
movsl
pop
outsb
cmpl
cmp
mov
test
cmc
pop
cli
adc
scas
je
out
push
mov
pop
inc
sahf
andl
jno
out
or
add
dec
and
sub
jge
xchg
fwait
mov
ret
jp
sub
sbb
and
pop
jg
jns
aas
push
cmp
pop
mov
out
add
pushf
dec
pop
inc
out
fwait
bound
pop
lcall
sub
loope
in
push
aas
dec
imul
jno
inc
fstl
or
stc
pop
jo
mov
data16
jp
lock
shl
fsubrl
int3
mov
sub
je
mov
sbb
das
add
or
sbb
xor
inc
xor
in
aaa
add
nop
int3
xchg
fsubrp
repnz
ljmp
in
inc
sub
xchg
pushf
push
sub
test
dec
adc
push
cmp
imul
je
ss
ljmp
adc
or
cmp
js
pop
sbb
fs
aam
dec
addr16
cltd
out
dec
dec
aaa
ss
dec
and
jns
loopne
sub
aad
add
mov
push
push
fiadds
test
cltd
movsl
sahf
mov
cmp
pusha
and
subb
outsl
fiaddl
inc
xor
xor
imul
inc
adc
call
xor
mov
pop
lock
test
cwtl
mov
mov
hlt
iret
out
adc
fstp
pop
push
jecxz
daa
xlat
xchg
or
mov
insl
icebp
addl
pop
mov
cmpsl
mov
outsl
lods
cld
jnp
mov
sub
daa
aad
cmp
pop
mov
add
xchg
sub
call
add
and
add
cmp
in
sbb
push
add
int
shr
xor
mov
sahf
daa
xor
xor
cmovs
mov
mov
jl
mov
push
dec
add
and
xchg
mov
xor
std
daa
fistpl
ja,pt
adc
ja
insb
xor
mov
leave
outsl
xchg
and
pushf
inc
mulb
push
js
jno
pop
xchg
mov
iret
jo
and
clc
add
and
adc
push
dec
clc
bound
mov
fcmove
shl
adc
sub
xor
pop
das
pop
push
cmp
int
xchg
scas
push
mov
bound
mov
scas
inc
pushl
fs
pop
xor
dec
imul
mov
ja
mov
ljmp
inc
push
mov
push
push
mov
lahf
push
mov
mov
mov
sbb
das
jno
dec
movsb
pop
xchg
ret
loopne
sarb
lods
out
mov
and
cmp
lcall
or
mov
out
cmpsb
fisttps
out
adc
fs
js
mov
mov
and
out
jmp
cs
loop
mulb
xchg
decl
inc
pop
test
xchg
lahf
push
hlt
std
loopne
cmp
cmp
push
sub
xchg
lds
loop
fdivp
in
add
cmp
aaa
fidivl
cmpsl
mov
mov
ret
sarb
clc
mov
and
dec
push
sbbl
mov
mov
sub
notl
out
pop
xor
pushf
push
mov
push
divb
movsl
cmp
sub
push
dec
sub
fwait
dec
sti
mov
lds
insl
icebp
addl
jg
xor
test
xchg
dec
test
out
rorl
movsb
inc
cmc
xor
inc
push
inc
arpl
jg
divb
jno
test
clc
adc
dec
jg
das
dec
inc
adc
push
sbb
out
decl
adc
sub
dec
roll
mov
sbb
add
mov
pop
out
add
fwait
mov
ret
int
or
scas
call
mov
mov
push
orl
decl
adc
dec
pop
arpl
subl
mov
ret
icebp
scas
jae
out
pop
pushf
jg
mov
test
jp
in
sub
pop
add
inc
xor
sub
nop
sbb
mov
push
inc
adc
inc
lods
cmp
insl
mov
mov
pop
fdivrp
sub
loope
das
pop
dec
push
jg
jo
sub
lret
cwtl
mov
aam
jmp
inc
sarb
inc
pop
xchg
xchg
jnp
scas
imul
out
ret
sub
and
lahf
pop
xchg
lahf
loopne
mov
fcmovnb
sarl
sbb
xor
inc
jbe
xchg
ja,pt
mov
fidivrl
push
rcr
out
sti
out
and
repz
push
lds
jmp
add
jp
arpl
push
pop
dec
jl
adc
iret
mov
in
vpcomud
inc
and
jmp
jns
cmpsl
pop
les
faddl
outsl
or
sti
pop
or
sub
jb
xorb
scas
mov
sub
cmp
outsb
lcall
mov
and
or
outsl
and
icebp
sbb
pop
addr16
test
mov
sbb
popa
pop
push
cld
pop
cmp
ret
addl
xchg
ja
cld
push
xor
and
add
adc
scas
addr16
int3
inc
mov
push
sbb
in
pop
add
es
dec
or
repnz
and
xor
scas
jl
push
loope
adc
dec
hlt
cmp
dec
movsb
cmp
or
test
popf
cmp
cltd
loopne
mov
dec
cmp
pop
xlat
xor
jo
jno
dec
test
insl
mov
loopne
div
push
repnz
das
fs
insl
add
mov
jle
in
faddl
adc
insb
push
cmovns
xchg
mov
mov
mov
cmp
out
pop
into
jg
mov
test
jnp
iret
fstps
stos
jns
xor
push
cwtl
push
mov
pop
mov
mov
rcr
in
stc
add
inc
sbb
dec
mov
xchg
les
sub
bswap
add
xor
inc
xor
in
aaa
add
lret
xlat
stos
es
adc
xor
pusha
stc
je
mov
pushf
xchg
inc
or
out
add
in
sbb
sub
sbb
inc
xchg
fwait
das
jno
adc
loope
out
sub
pop
dec
out
arpl
push
mov
jp
lods
in
ljmp
aas
or
jp
jnp
pop
mov
mov
mov
pop
rorb
loopne
push
cmp
inc
dec
push
popa
imul
mov
in
sbb
or
and
pop
cmp
lock
bound
sahf
into
xchg
cmp
or
adc
cmpl
sbb
into
fsubs
je
bswap
ljmp
jge
push
pop
test
lahf
cli
mov
cmpsl
fmull
movb
mov
cmp
add
subl
orl
aam
aaa
xor
cmp
dec
lahf
jge
fwait
push
mov
or
cmpsl
and
push
jo
fcoms
push
into
loopw
xor
sub
and
mov
aad
push
or
and
or
adc
jbe
jae,pt
sti
mov
lret
cwtl
int
sbb
sub
cmp
xchg
fwait
mov
ret
out
mov
call
dec
ja
imul
mov
inc
in
js
ljmp
xor
ljmp
mov
sahf
inc
mov
mull
or
sbb
sti
hlt
xor
cmc
stos
fs
popa
mov
mov
testl
push
adc
or
mov
aam
call
jmp
push
or
daa
arpl
or
mov
cwtl
push
scas
sbb
xor
pop
jge
jb
push
xchg
mov
fistpll
fisttps
ret
out
lds
inc
jb
arpl
andb
in
mov
xor
jne
fs
mov
xchg
in
jb
insb
ret
out
cmp
pop
sub
mov
stos
mov
jb
sbb
sub
pop
dec
adc
out
arpl
roll
ja
inc
adc
xlat
rcrb
imul
daa
jno
or
fdivrs
or
sbb
dec
pop
arpl
subl
and
add
push
and
roll
or
xchg
mov
jecxz
xchg
cmp
pop
shlb
inc
dec
jg
jo
movsb
jg
ret
lea
in
roll
push
dec
js
insb
xchg
inc
sub
dec
lahf
fcoms
sarl
in
and
sub
fistps
jg
jb
lret
outsb
popf
and
xor
lcall
xor
adc
lret
aad
cmpsb
sarb
sar
and
inc
push
lcall
xorb
push
xchg
movl
jmp
std
mov
xchg
dec
in
push
popa
pop
test
pusha
push
movsl
jle
shr
stos
out
sbb
sbb
cmp
inc
aad
jo
jno
mov
add
ret
jecxz
lea
in
xor
inc
popa
insl
jns
lds
xchg
xor
dec
mov
inc
hlt
sub
es
xor
and
dec
scas
and
ss
neg
xchg
leave
imulb
add
cmp
bound
and
mov
pop
repnz
cmp
aaa
mov
mov
fdivp
sbb
xchg
adc
dec
inc
xor
mov
mov
and
fwait
cmc
fmuls
inc
cld
xor
push
dec
mov
xchg
in
movsb
loope
add
fnsave
out
daa
push
enter
and
int3
xchg
cli
lock
pop
adc
sub
cmp
pop
not
xchg
fwait
lds
scas
stos
in
outsb
mov
hlt
mov
mov
js
inc
test
test
out
stos
out
sbb
popa
loope
xchg
mov
cmpsl
jns
pop
movsb
mov
scas
int
aad
lock
adc
and
add
dec
pop
cmpsl
fs
lds
mov
or
pushf
cmpb
dec
mull
jbe
mov
out
in
lock
mov
cmpl
cmpl
rclb
cmp
movb
jmp
xchg
xchg
cli
push
and
into
test
mov
lret
add
xchg
push
xchg
mov
sub
setg
mov
daa
rcr
pop
imul
push
dec
jle
mov
cmp
inc
dec
push
sbbb
icebp
push
fucomip
aas
xorb
cmc
mov
lahf
xchg
jae
xchg
fwait
das
scas
inc
ret
mov
outsl
jmp
pop
cli
or
xor
repnz
lock
popw
mov
icebp
sti
out
and
pop
mov
jno
movsl
scas
mov
enter
movsb
fiadds
aaa
arpl
pop
gs
mov
pop
xchg
mov
mov
in
or
sbb
push
adc
mov
ljmp
push
test
call
ss
pop
push
sbb
js
ficoms
cmpsl
rorl
in
testl
xor
inc
pusha
scas
push
mov
or
fsubrp
lcall
ret
push
and
mov
arpl
jmp
mov
inc
dec
repz
cltd
mov
scas
mov
dec
enter
ficoml
push
or
push
jle
mov
ljmp
push
fsts
nop
lcall
loopne
fisttpl
jecxz
test
add
xor
pusha
inc
pushf
enter
sub
lods
cli
add
or
dec
xor
pop
adc
movsl
xlat
adc
popa
shr
call
jns
add
testb
adc
sub
cmp
jg
xchg
jp
in
stc
push
mov
aaa
inc
sub
sbb
sub
orb
andb
outsl
xchg
test
repnz
mov
das
aas
pop
movsb
jnp
cmpsl
iret
mov
pop
iret
jo
test
cwtl
or
les
xor
push
push
dec
mov
and
xchg
dec
push
dec
pop
inc
pop
cmp
push
add
xor
pop
fnsave
or
decb
adc
xor
inc
xor
in
lds
ret
xchg
xchg
xchg
repnz
push
inc
jmp
cmp
test
nop
inc
subl
cmpsl
or
loope
inc
and
adc
pop
in
xchg
dec
xorb
into
pop
add
sub
xor
push
pop
xchg
mov
mov
mov
and
adc
testb
insb
push
add
aas
sarl
lcall
adc
dec
out
popa
popa
daa
enter
xchg
mov
iret
mov
loope
out
test
stc
and
dec
je
outsb
add
mov
outsl
fiaddl
push
and
dec
insl
push
sbb
xor
xchg
jle
sbb
das
add
or
sbb
xor
inc
dec
pop
arpl
jns
lea
scas
cmp
ss
inc
pusha
push
jle
push
mov
mov
ficompl
lahf
clc
adc
ret
insb
sub
mov
jb
bnd
aad
lahf
movsl
jle
ss
push
test
jbe
stos
data16
fistl
leave
push
push
mov
dec
xchg
inc
js
bound
sbb
test
or
mov
xchg
or
clc
bound
sbbb
repnz
stos
out
or
add
repz
dec
xchg
ret
mov
xlat
xchg
add
ljmp
inc
out
mov
test
xchg
lret
pushf
fsubrs
pop
add
cmova
and
dec
or
les
bound
iret
add
or
outsl
sub
cmpsl
gs
xor
mov
fstl
mov
push
pop
sbb
cmp
clc
lock
les
js
inc
sahf
call
bound
js
imul
cmpsb
shrl
jo
loop
jnp
jmp
hlt
daa
push
push
inc
repz
imul
js
cld
mov
sub
in
and
push
popa
imul
inc
aaa
repz
jne
fucomip
testb
mov
aaa
mov
bound
test
fcmovne
fstps
pop
xor
pop
nop
mov
adc
cltd
pop
fstpl
hlt
mov
and
dec
and
push
sub
jl
jo
mov
mov
lret
add
mov
and
jb
lds
xchg
pop
addr16
xchg
int3
xchg
fldenv
ficompl
lock
and
insb
jbe
push
popl
pop
adc
or
cmp
push
sub
gs
js
pusha
andb
into
out
add
push
ss
inc
pop
push
pushf
aad
sub
add
bound
jbe
dec
sub
mov
jb
out
add
aad
test
enter
mov
aaa
and
push
mov
cmp
int
loop
int3
jecxz
xor
movaps
mov
xchg
sbb
jge
dec
sbb
pop
fsubl
addr16
stos
xor
imul
lcall
lahf
adc
jecxz
pop
out
rol
lock
dec
cmp
add
pop
add
arpl
dec
je
cmp
imul
xchg
out
mov
jmp
fisttpll
ljmp
int
dec
imul
or
ds
cmpsl
mov
ffree
xor
xchg
cmpsb
cmp
daa
mov
pusha
pop
addb
mov
cmp
test
lcall
test
fsts
enter
addb
cmp
pusha
das
inc
inc
adc
aas
hlt
jge
repnz
or
fidivrs
inc
dec
js
outsb
push
push
xchg
mul
fucom
adc
add
add
and
push
addb
ret
in
stos
loope
leave
std
es
dec
cmp
pusha
push
xchg
sahf
sub
cltd
sar
arpl
pushw
stos
mov
in
and
mov
js
adc
enter
sub
into
adc
dec
jp
outsl
sbb
test
xchg
push
mov
jnp
das
cmp
jp
xor
push
subl
iret
push
fistpll
push
xchg
hlt
sub
push
ja
sub
push
xchg
mov
mov
cld
mov
loop,pn
xchg
xor
push
pop
ss
xchg
mov
int3
xor
mov
or
cmp
xchg
adc
cmpsl
mov
mov
sti
mov
lret
and
sbb
cs
jo
mov
outsl
movsl
fisttpll
movl
cmp
pop
cmpb
mov
movsb
xchg
out
std
into
out
rorb
adc
jp
ja
push
jge
jbe
push
xchg
mov
adc
enter
int
clc
inc
dec
jl
outsl
lcall
mov
xor
and
adc
mov
test
int
ret
decl
xor
cmp
ret
js
sub
lods
mov
mov
pop
dec
and
pop
ds
xor
mov
sub
xchg
jecxz
fistps
lcall
adc
xor
popf
pop
xchg
mov
fisubrl
dec
xor
pushf
sub
mov
mov
cmpsl
fmuls
movl
ds
xchg
xor
push
mov
add
cmc
mov
push
adc
cs
mov
sub
mov
ret
jmp
daa
pop
adc
jne
adc
jns
pop
xchg
sti
mov
aaa
lock
sbb
xchg
push
lahf
mov
xlat
fdivr
popf
cmp
sbb
aaa
outsl
lcall
mov
lret
in
dec
jmp
pop
push
or
ss
xchg
mov
dec
add
out
dec
cmpb
mov
icebp
mov
out
roll
mov
and
push
lahf
xor
dec
mov
imul
cmpsl
mov
push
mov
pop
xchg
cmp
xchg
dec
test
push
cli
sub
test
sbb
sbb
or
sub
push
pop
sbbb
xchg
les
faddl
fistl
adc
and
mov
mov
add
mov
push
pop
test
imul
gs
aam
cmc
xor
adc
xchg
je
xor
pop
adc
sbb
dec
mov
xor
dec
adc
movsl
popa
lcall
jmp
mov
push
push
sbb
mov
inc
dec
push
mov
cmp
jmp
pop
adc
popf
mov
aam
insl
fs
push
fwait
movsl
mov
ret
or
dec
outsl
gs
inc
dec
pop
xor
mov
inc
add
imul
or
addr16
xchg
inc
mov
fidivrs
sbb
mov
enter
fistps
out
out
in
dec
mov
inc
dec
mov
mov
cmp
into
leave
int3
sub
lret
sbb
sbb
inc
daa
cmpl
adc
cmpsl
mov
mov
sti
mov
lret
and
sbb
cs
jo
mov
outsl
movsl
fisttpll
movl
cmp
pop
cmpb
mov
movsb
xchg
out
std
into
out
rorb
adc
jp
ja
push
jge
jbe
push
xchg
mov
adc
enter
int
clc
inc
dec
jl
outsl
lcall
mov
xor
and
adc
mov
test
int
ret
decl
xor
cmp
ret
js
sub
lods
mov
mov
pop
dec
and
pop
ds
xor
mov
sub
xchg
jecxz
fistps
lcall
adc
xor
popf
pop
popf
lds
in
lods
sub
sub
mov
mov
cmpsl
fmuls
movl
ds
xchg
xor
push
mov
add
cmc
mov
push
adc
cs
mov
testb
in
fs
hlt
mov
aas
inc
fs
pop
xor
mov
fwait
mov
mov
loope
mov
pop
mov
pop
sub
cmpsl
sub
movsl
mov
sbb
out
ss
insb
test
sbb
push
jne
jae
scas
je
rclb
lret
out
pop
cmp
sub
arpl
dec
cmp
pop
movsl
scas
fnstenv
lcall
cmp
push
mov
jp
addr16
dec
mov
and
out
jb
out
pop
loopne
dec
push
pop
jp
insl
rcll
jno
aad
aad
mov
nop
into
adc
call
test
popf
pop
xchg
mov
shlb
icebp
sbb
add
in
and
sub
mov
and
ret
add
xor
and
xor
push
popa
mov
test
fstl
xor
loop
pusha
jle
sbb
jl
das
sbb
mov
mov
aad
iret
or
mov
outsb
das
imul
lds
fimuls
sar
out
aad
test
dec
mov
mov
lret
jmp
dec
jecxz,pt
pop
xchg
mov
push
das
aad
mov
pop
lock
mov
insl
and
mov
jl
mov
cs
jns
pushf
rcrb
xor
icebp
sub
cmp
inc
and
mov
ss
fisttps
xor
std
jo
aaa
inc
dec
push
pop
imul
ffreep
movsb
std
mov
lcall
adc
in
jg
or
cli
sub
out
popf
add
mov
push
js
in
sbb
xchg
xor
mov
mov
cmp
push
push
pop
cmpl
lret
test
xchg
sti
hlt
idiv
ds
xchg
sub
test
stos
mov
mov
in
ljmp
xor
xor
addr16
test
mov
mov
das
popa
dec
push
ja
mov
xchg
add
imul
adc
and
push
popa
imul
jno
lahf
test
jecxz
testl
add
push
xlat
cwtl
xchg
xchg
inc
mov
cld
cmc
js
sbb
popa
pop
push
pushf
or
lds
and
adc
rorl
adc
addl
into
fsub
in
testb
adc
sub
cmp
jg
dec
daa
jbe
jmp
dec
mov
out
lods
loop
mov
dec
add
arpl
subl
out
and
fisubl
bound
pushl
jmp
pushf
cmp
dec
xchg
clc
mov
mov
pop
repnz
adc
stc
data16
xchg
cmp
movsl
imul
ret
ljmp
cli
xor
sbb
je
pusha
cmc
popf
cmpsl
loop
mov
fucom
adc
inc
xor
out
test
xchg
ficoml
int3
jecxz
add
or
fstpl
jb
pop
jno
sub
mov
fistl
std
push
cmp
ss
add
sbb
sub
pushf
imul
out
ret
push
hlt
out
cmc
sub
cmpl
xchg
xchg
cmpsb
dec
or
in
pop
les
enter
push
jge
xchg
fwait
or
fcomp
loopne
jecxz
or
sub
xor
push
push
lods
fdivrl
movsl
sti
ja
cmp
push
sub
and
cmp
das
xor
pop
push
pop
mov
xchg
push
push
loop
cmp
and
cmp
push
negb
inc
sub
call
into
into
mul
jp
dec
sbb
and
pusha
lods
test
scas
cld
aad
xlat
sbb
xacquire
jp
cmp
aas
dec
push
pop
addr16
test
daa
sbb
invd
cli
adc
enter
push
insl
lods
outsl
rolb
scas
push
rol
fnstcw
jmp
sub
adc
je
in
cmpsl
xchg
js
jl
adc
movsb
les
out
or
push
sbb
aaa
insl
fs
pop
xchg
mov
gs
stc
repnz
cmp
xor
sub
pop
pusha
xchg
xchg
mov
cld
orb
stc
and
jg
jge
jl
mov
mov
test
sbb
sbb
sub
outsw
fistpll
sbb
setle
push
adcb
rorl
arpl
subl
add
add
repz
push
xchg
dec
push
cs
outsb
xchg
jmp
out
lds
popf
mov
fiadds
inc
pop
xorl
in
jp
dec
lods
mov
push
mov
dec
mulb
pusha
loope
xchg
xchg
leave
andl
enter
jecxz
aaa
inc
and
jb
movsl
iret
mov
pushl
out
jge
jnp,pn
push
cmp
pop
jo
mov
mov
mov
or
push
pop
imul
scas
mov
fdiv
or
lcall
jp
outsl
mov
sti
mov
jge
mov
lock
add
pop
sbb
bound
push
test
mov
add
xchg
sub
arpl
sbb
mov
mov
pop
adc
add
sub
pop
xchg
inc
xchg
sahf
test
pop
xchg
sub
add
adc
loope
jne
dec
xchg
mov
mov
pop
repnz
inc
push
sub
lcall
push
rclb
icebp
adc
scas
arpl
aaa
push
clc
xor
xchg
insl
sub
lret
arpl
bswap
add
aaa
hlt
daa
enter
sub
xchg
int
mov
and
daa
adc
inc
pop
xor
cmp
loopne
js
pop
xchg
xor
add
sub
and
sbb
lret
and
pop
push
jmp
xchg
fwait
lds
mov
enter
cmp
sarb
push
fucomip
aam
mov
mov
xor
xor
inc
outsl
insl
test
shrl
lods
rcr
sbb
sub
dec
jo
lret
int
cs
cmp
push
cmp
mov
cli
stos
mov
shrb
cmp
daa
push
lcall
clc
adc
js
stos
mov
out
inc
mov
and
icebp
mov
in
sub
testl
push
push
cmpsb
dec
lcall
dec
sbb
dec
mov
iret
sub
js
mov
mov
cmpsb
iret
incl
scas
shll
jb
jmp
pop
imul
cli
lret
jmp
and
or
jl
jno
movsb
pop
cwtl
xor
xlat
lock
or
cmp
push
imul
ljmp
and
adc
add
sub
push
lret
loope
fsubl
sub
sub
call
or
mov
fwait
lret
adc
mov
jo
cmp
pop
push
js
enter
stos
int
mov
adc
add
cmp
cmova
popa
xchg
mov
rcrl
adc
push
stc
add
push
and
mov
mov
loope
enter
add
jle
lahf
aad
je
dec
shrb
fcoms
ret
cli
sub
sbb
in
push
orb
jle
xchg
mov
push
std
xor
mov
jae
push
sbb
lahf
pop
pop
dec
xlat
fimuls
xchg
add
fsubrl
mov
pop
ja
scas
pop
xchg
and
stos
out
cmp
xor
insl
and
test
xor
ljmp
sub
out
sbb
cmp
jp
bound
leave
mov
into
test
inc
mov
dec
mov
pop
xchg
jno
testb
fistps
lcall
inc
sub
imul
inc
cmpb
inc
fimull
in
and
push
ja
bound
mov
xchg
les
test
rcr
in
test
push
and
inc
out
sub
mov
pop
in
mov
mull
ret
push
fidivl
adc
scas
ss
lods
ret
ret
or
cmpsb
add
bound
push
jge
je
call
mov
mov
nopl
mov
pop
mov
and
fcoms
repnz
sub
sbb
xchg
push
lock
pusha
cltd
mov
test
notb
ret
pop
mov
xor
imul
cld
pop
xchg
mov
bound
push
jbe
xorb
mov
test
mov
xchg
stc
sub
dec
jle
mov
jmp
imul
repz
xor
adc
adc
lea
inc
orb
into
cmp
lret
enter
pop
inc
and
jmp
stc
ret
int
jne
sarb
jbe
out
rorl
sub
movups
push
mov
mov
test
stos
shr
testl
push
inc
push
inc
xorb
push
stos
adcb
sub
idiv
pop
je
mov
out
rorl
xchg
test
fistpll
mov
jae
inc
cmpsl
xchg
fwait
shrl
add
cwtl
cmp
jae
inc
mov
or
lods
dec
jns
std
mov
sub
sbb
xchg
nop
cmp
ret
lds
ret
fcmovu
add
mov
jo
in
push
xchg
icebp
arpl
leave
clc
shl
mov
push
nopl
sub
pop
imul
ffreep
imul
ljmp
push
shlb
mov
stos
mov
mov
enter
sbb
xor
inc
cmc
sub
mov
test
xchg
ret
lods
clc
loope
or
stc
lods
aam
mov
and
adc
ret
cmpsb
jge
ljmp
cmp
xor
mov
adc
movsl
pop
mov
cmp
adc
mov
mov
ret
cs
loope
jg
pop
xor
sbb
icebp
aaa
cmc
xchg
mov
inc
test
dec
sub
xchg
dec
jae
inc
in
mov
or
jbe
add
mov
fucomip
repz
xchg
popf
cld
dec
push
pop
cld
jb
inc
sub
int3
loopne
fs
add
sub
sbb
xorb
and
aad
stos
mov
sub
push
push
loopne
sbb
inc
int
jg
xchg
push
push
mov
or
aad
jmp
and
test
adc
movsl
in
iret
clc
mov
xchg
aas
insl
es
cmovno
sbb
mov
mov
rolb
mov
cmp
pop
out
xchg
pushf
cmpsb
or
in
mov
addr16
mov
pop
pop
sbb
sti
fisubrs
les
mov
adc
call
mov
dec
sub
rcr
cmpsl
mov
scas
dec
mov
adc
dec
push
push
scas
outsb
nop
dec
mov
lcall
pop
adc
and
push
popa
imul
jno
lahf
loopne
aam
shl
shll
or
cmp
mov
popa
gs
movsl
jl
jecxz
fnstenv
adc
push
push
jp
sbb
test
pushf
fmulp
shrb
mov
push
mov
push
jne
lock
sub
mov
push
test
dec
test
push
jg
xchg
aam
fisttps
ljmp
xor
inc
outsb
dec
arpl
inc
xchg
ret
gs
add
pop
xor
mov
mov
mov
cmpsl
rorl
ljmp
xor
inc
dec
pop
arpl
jns
lea
das
call
mov
insb
cmc
bound
xchg
inc
stos
addr16
mov
add
sbb
sub
pop
imul
mov
aaa
and
and
push
out
adc
inc
dec
jbe
jo
dec
je
mov
int3
jno
in
xor
push
in
imulb
push
xchg
sbb
push
ja
loope
cmc
and
adc
scas
pop
outsb
pop
ljmp
pusha
jecxz
and
ret
and
decl
xor
pop
mov
bound
push
aad
jmp
call
mov
dec
mov
popf
cmpsl
mov
mov
lods
loop
lret
loop
es
or
pop
bound
sub
add
sbb
dec
xor
xor
ficoml
aam
cltd
rorb
xor
or
fs
cmp
fwait
shll
mov
mov
push
push
cmp
push
out
mov
das
cmpsb
and
cmp
pop
add
scas
push
inc
pop
and
jecxz
rolb
sbb
push
popa
imul
jno
lahf
mov
mov
daa
loope
pop
xchg
shlb
xor
pop
xor
sbb
or
pop
lret
das
pop
das
vmread
test
sahf
add
xor
jecxz
and
stos
xchg
pop
push
cli
out
clc
jnp
lods
and
jg
repz
sbb
and
sub
mov
fcmovnbe
jle
loopne
les
sbb
repz
in
pusha
js
orb
enter
out
or
stos
pop
pop
or
dec
ja
insb
scas
shll
mov
mov
or
fadds
xor
inc
dec
pop
arpl
jns
lea
scas
out
cld
push
adc
ret
xor
push
pcmpeqd
outsb
je
lret
push
pusha
jp
sar
xor
cs
inc
rclb
cmp
jp
fwait
sub
lahf
push
xlat
fimuls
jecxz
es
icebp
out
das
jle
notl
fstpl
xchg
or
loop
adc
stc
or
push
lods
cmp
push
mov
movsb
out
jle
push
or
pop
into
or
cmp
add
insl
pushf
pop
jl
cmpsb
lock
push
rcll
inc
fdiv
rorb
popf
testl
xchg
inc
mov
pop
das
call
dec
sub
stos
xchg
push
mov
gs
mov
sbb
add
arpl
add
mov
jb
or
shl
insb
and
mov
adc
les
out
lret
and
inc
cld
aaa
fistps
cmp
pop
mov
arpl
xchg
ret
cli
sub
push
inc
add
mov
add
and
mov
add
test
add
xor
adc
les
cld
push
mov
xor
pop
adc
push
sub
dec
mov
jns
xchg
out
rcrl
cmpsl
dec
pop
inc
dec
ja
push
aaa
lahf
dec
nop
pop
das
outsl
push
stos
stos
sub
out
xor
jmp
outsl
daa
rorl
jo
arpl
jbe
add
mov
enter
lock
dec
inc
ds
aas
je
jle
push
pop
enter
and
test
lcall
sbb
rolb
push
clc
stos
xchg
push
mov
gs
mov
sbb
add
arpl
add
dec
jp
xor
mov
push
out
inc
dec
pushf
inc
pushl
inc
adc
int
mov
add
xor
xor
xchg
and
mov
lret
cs
sbb
dec
push
dec
mov
jle
and
nop
push
jp
sar
aam
into
xor
xor
inc
xor
fwait
ret
jl
aam
loopne
call
in
and
push
popa
imul
jno
lahf
dec
les
or
cld
adc
xor
push
and
orb
cmpsb
or
sbb
dec
pop
mov
push
movb
mov
icebp
sti
out
and
or
push
repz
call
mov
sti
into
fsub
in
testb
adc
sub
cmp
jg
dec
jne
xchg
popf
cmpsl
rorl
lods
rol
loop,pn
cmp
sub
inc
ja
repz
jge
mov
in
clc
add
push
xor
mov
ret
xor
jecxz
add
sub
cmp
inc
jns
test
popf
shrl
lock
pop
adc
insb
in
jnp
mov
lret
lds
icebp
add
imull
adc
inc
dec
push
jg
jno
jge
call
sbb
dec
repnz
push
xor
sub
inc
cmpsl
pusha
push
jbe
aad
cld
pop
out
int
or
clc
scas
add
insb
push
imul
ss
hlt
in
jb
jmp
inc
repz
sbb
sbbl
dec
xchg
mov
xchg
sbb
sub
repz
pop
imul
ffreep
imul
cmp
sub
jae
sub
or
jg
stos
cmpsl
mov
mov
mov
loope
and
cmp
sub
or
bound
xchg
scas
imul
or
and
sbb
cmp
sub
orb
add
inc
lock
xor
push
test
aam
hlt
mov
xor
adc
and
sub
in
dec
mov
xor
fsub
cli
mov
sub
sbb
fcmovu
xchg
xchg
rolb
push
cmp
fsts
push
test
pop
test
sarl
fcomps
shl
or
dec
sti
inc
in
sbb
xor
xchg
outsl
pop
xchg
enter
sub
mov
xor
pop
push
dec
xchg
adc
call
enter
xchg
pop
adc
repz
or
and
stc
cltd
push
lcall
out
sbb
mov
inc
stc
dec
sbb
jne
push
in
dec
xor
call
daa
pop
negb
aad
stc
cmpsl
push
cmova
sub
sub
fsubrl
sbbl
std
gs
xor
jle
push
popa
mov
mov
mov
xchg
adc
enter
pop
sub
xor
xor
dec
jo
mov
lahf
fdivs
mulb
adc
adc
xchg
xor
mov
xchg
push
stc
faddl
mov
add
cmp
insl
jge
outsb
jae
scas
mov
mov
sbb
pop
in
push
insl
mov
jae
push
jl
into
fsub
cmp
icebp
cmp
mov
fwait
movsl
scas
fistl
into
cmc
xlat
aas
in
xor
and
push
push
adc
cmpsl
rorb
pop
les
cmp
and
push
fwait
data16
lods
inc
test
sbb
scas
mov
lods
hlt
cmp
adc
jo
dec
mov
xchg
inc
test
or
or
cmp
xor
pop
repnz
bound
call
fisubl
pop
sbb
pop
adc
xor
mov
repz
rolb
dec
popa
pop
add
xchg
data16
das
insl
mov
xchg
push
fistl
inc
dec
jbe
insl
xchg
push
xchg
shll
and
icebp
add
sub
inc
imul
jp
mov
lret
jmp
dec
ds
sbb
lds
subb
jg
xor
loop
lret
add
pop
push
std
xor
adc
sahf
dec
jle
xchg
pop
cli
adc
sbb
mov
push
ds
jns
lea
leave
rcr
out
sti
out
and
inc
bound
mov
mov
into
fsub
in
testb
adc
sub
cmp
jg
adc
mov
stos
out
in
clc
sub
dec
push
add
test
xchg
push
xchg
add
arpl
and
std
adc
in
imulb
clc
lods
hlt
mov
mov
scas
add
imul
xor
pop
popa
lret
cwtl
sub
rcl
and
jb
out
aad
and
sub
cmp
lds
out
sbb
xor
sbb
lock
fwait
scas
outsb
mov
xlat
fimuls
jecxz
cmpsl
loopne
dec
add
cmp
jns
ret
add
mov
testl
add
clc
ret
popf
movsl
jl
int
enter
call
push
push
xor
mov
scas
mov
mov
sbb
fs
pop
push
cli
xor
mov
lods
jg
lret
aad
mov
push
mov
sub
push
mov
sub
and
cld
mov
and
es
xor
jbe
popa
xchg
les
aas
or
mov
aaa
ret
das
hlt
setae
dec
jns
negl
icebp
scas
loop
jmp
loopne
push
cli
aaa
cmp
inc
jns
test
jmp
loopne
aad
mov
mov
dec
not
jnp
mov
mov
jl
sti
mov
aas
sbb
add
imul
aas
movsb
fcmovne
mov
in
fs
cmpsb
add
sahf
push
cmovne
addr16
jle
xchg
pushf
inc
and
in
push
cli
or
dec
and
test
lods
xchg
pop
cli
push
cmp
orb
xchg
adc
mov
jnp
stos
mov
leave
rcr
out
sti
out
and
mov
dec
ret
jl
fisubrl
scas
ret
lret
aad
std
or
das
pop
xor
stos
repz
pop
lods
xchg
or
hlt
aam
cmp
test
jecxz
dec
pop
fwait
bound
mov
in
mov
or
and
sti
xor
popa
lea
insb
cmpsb
in
push
sub
mull
xor
xor
popw
jo
push
xlat
loope
mov
mov
das
call
sub
cs
aaa
push
notl
testl
mov
jmp
jge
movzbl
divb
imul
jl
ret
int
test
push
adc
es
rol
jle
sub
shlb
or
movsb
mov
scas
mov
scas
mov
scas
xor
add
outsl
daa
sbb
ds
xchg
push
jp
adc
fisttps
dec
push
and
adc
jle
lea
push
stc
nop
fwait
movsl
sarl
jmp
std
popf
adc
sbb
dec
imul
dec
xor
iret
mov
aaa
inc
cs
hlt
sub
jg
mov
pushl
or
adc
imul
mov
lret
iret
in
dec
cltd
pop
aaa
fadds
xor
inc
dec
pop
arpl
jns
jno
xchg
adc
xchg
stos
test
sbb
cmp
rorb
cmpsl
out
mov
or
xor
inc
xor
jne
scas
jns
mov
sub
and
sbb
pop
dec
push
sbbb
lret
xchg
pushf
cmpsb
repz
repnz
daa
testl
add
push
inc
scas
mov
faddl
nop
adc
pop
out
out
pop
jne
xchg
mov
rcrb
mov
or
mov
lods
sub
mov
cmpsb
mov
das
cmp
mov
mov
lret
bound
gs
or
mov
sbb
xor
jbe
push
mov
test
and
lds
inc
aad
es
pushf
inc
orb
ret
icebp
push
or
sub
push
adc
xor
or
mov
sahf
xlat
pusha
jno
xlat
push
mov
outsb
sub
dec
subl
pop
fbstp
stos
cmpsb
fldenv
sub
xor
in
add
push
in
stos
fmull
leave
add
js
dec
cmp
pusha
pop
xchg
scas
pop
xchg
pushf
cmpsb
mov
stc
mov
add
fstpl
into
sti
cs
es
mov
gs
mov
mov
daa
ds
in
push
inc
xchg
outsl
mov
out
sbb
ud1
stc
sub
push
bound
pop
xchg
test
jmp
sti
adc
ret
and
push
popa
imul
iret
mov
pop
xchg
leave
es
inc
insb
inc
bound
jne
out
test
cmp
out
sbb
adc
cmp
push
or
sti
mov
movsl
rcll
jle
mov
xor
jl
das
pushf
push
mov
cmpsb
into
mov
pop
mov
inc
cmp
lret
pop
xchg
jo
mov
bswap
icebp
jecxz
xchg
inc
imul
inc
lods
lahf
mov
test
mov
movsl
jle
ss
dec
and
inc
pop
nop
jnp
push
mov
movsl
adc
sub
stc
add
xor
cmp
aam
jle
jns
inc
lahf
mov
pop
push
xlat
pop
int3
push
cmp
dec
push
mov
sahf
es
cld
ja
lcall
into
sbb
sub
add
sbbb
adc
lret
cmc
int3
call
in
push
mov
dec
pop
jg
jg
xchg
xchg
mov
fidivl
icebp
adc
dec
push
and
or
rcrl
in
push
and
mov
out
stc
add
inc
repnz
push
cmc
jg
out
cld
loop
mov
sub
xor
data16
mov
int3
mov
fidivs
cmc
xor
or
xor
ja
jmp
into
mov
clc
shrl
inc
mov
cs
xchg
aaa
jg
shr
pop
mov
ja
jns
add
mov
pusha
mov
repz
repnz
push
cmp
inc
dec
adc
sub
arpl
popa
sbb
jle
jbe
fistl
movsl
fldlg2
fs
adc
cmpb
and
pop
jmp
fwait
and
pop
push
sub
push
fstpl
test
mov
xor
fucomip
repz
add
dec
jmp
cmpb
xor
mov
gs
ret
ljmp
aam
pop
xchg
fwait
notl
push
jg
nop
les
in
sbb
adc
das
sub
inc
jle
inc
pop
dec
cmpb
insb
into
shrl
sub
test
das
jp
cwtl
lahf
push
cld
mov
dec
mov
add
inc
sub
dec
popf
pop
sbb
inc
aas
dec
cmpsb
jns
push
lods
add
test
pop
dec
daa
mov
pop
imul
lcall
out
vmovaps
gs
lret
aad
dec
mov
sbb
inc
dec
mov
inc
push
pop
imul
ljmp
fdivrp
or
sbb
dec
shll
pop
and
mov
pop
fcompl
push
stos
mov
cmc
jg
je
jb
mov
rorl
push
and
fsts
stos
and
lods
out
imul
dec
mov
push
loopne
mov
in
sub
push
pop
andb
es
xchg
fsubr
fcoms
xchg
roll
xor
dec
clc
xor
rorb
popf
out
mov
xor
jl
inc
push
jl
jno
and
push
loope
outsl
mov
fwait
mov
jmp
xor
or
ficompl
mov
sbb
pop
cmp
mov
fisubrs
xchg
movsb
sbb
pop
and
dec
les
pusha
push
sub
pop
pushf
cmpsb
imull
cltd
mov
ds
and
pop
mov
xor
js
pushf
sub
movsb
xchg
dec
enter
cltd
mov
test
lea
pop
sbb
pop
and
hlt
stos
xor
sbb
jmp
sbb
inc
fwait
movsl
loop
test
ds
and
test
and
enter
jp
pcmpgtw
aam
imul
jbe
xchg
xor
in
test
test
sbb
pop
adc
insl
xchg
cmp
xchg
or
inc
cld
ss
not
std
cmp
pop
lea
mov
leave
loope
ret
out
adc
and
fiaddl
mov
xchg
out
nop
sti
mov
icebp
dec
push
pop
lods
jecxz
jns
cmp
outsb
stc
add
je
stos
xor
add
jl
lret
aad
in
aad
dec
into
fmuls
test
ret
dec
push
pop
ficomps
imul
enter
cmc
ljmp
incb
bound
cmp
sbb
mov
pop
shlb
loop
push
pop
mov
adc
pop
cmp
test
mov
add
cmp
inc
pop
or
test
ds
mov
adc
mov
pusha
cmp
mov
ret
cs
test
sbb
inc
adc
jl
popf
cmpsl
mov
push
xchg
and
add
es
xor
addw
ret
popa
push
popf
daa
xor
cmp
js
dec
xor
mov
dec
icebp
mov
lods
ljmp
jb
mov
cmpsl
jle
inc
jl
ljmp
push
push
sbb
jmp
inc
aaa
ror
sub
hlt
jg
scas
ss
dec
inc
loop
mov
cmp
xchg
fwait
iret
loop
xchg
mov
loope
cmc
and
pop
push
push
sti
es
xchg
push
imul
lods
int
sbb
push
sbb
xor
push
dec
mov
mov
mov
adc
jp
inc
jp
js
mov
enter
call
mov
sub
ljmp
js
loope
pop
xchg
lret
stc
mov
add
aaa
outsl
sub
orl
jecxz
mov
cmp
fistps
dec
lea
imul
subl
ljmp
adc
dec
xor
subb
jae
lock
pop
push
faddl
arpl
outsb
stc
add
xchg
cwtl
fcmove
push
pop
push
pop
pop
out
sbb
inc
pop
dec
test
aam
rcll
lods
or
dec
cmp
inc
sub
ja
ljmp
xor
stos
in
fsubl
pop
das
psubq
ss
add
sub
pop
scas
fwait
and
mov
jmp
sbb
push
sub
mov
or
cmp
push
pop
popa
hlt
daa
xlat
adc
imulb
jg
mov
iret
flds
lahf
test
fisubrs
pusha
adc
pop
jo
sbb
dec
fwait
jg
adc
xchg
icebp
lds
sar
jge
jns
push
xor
insb
testb
adc
call
sub
cmp
jo
push
mov
lods
mov
lahf
lret
cli
push
cmp
sub
pop
or
fmull
mov
jge
mov
sbb
es
mov
mov
or
outsl
fiaddl
cmp
notl
mov
dec
xchg
pushf
cmpsb
mov
out
enter
add
jmp
dec
loopne
insl
adc
xor
push
loopne
pop
movsl
xchg
and
pop
into
pop
xlat
aas
mov
ficoms
test
xchg
js
pop
test
inc
ret
jmp
xor
pusha
das
dec
jo
jno
xchg
fwait
movsl
inc
test
into
mov
dec
pop
ljmp
sbb
cmpb
lcall
cmp
mov
push
xor
inc
out
dec
aas
xor
xchg
sub
sar
fpatan
pop
fildl
nop
scas
pop
inc
pop
and
lea
inc
pop
dec
xorb
mov
loopne
inc
cli
sub
xor
jne
cmp
insb
ret
or
fimuls
ret
add
ja
dec
pop
stos
mov
mov
xchg
mov
dec
xchg
and
cld
pop
cs
scas
out
rcll
adc
pop
fdivs
setns
cmp
rcr
loop
sbb
or
cmp
sub
daa
adcl
mov
stc
xlat
dec
loope
test
orb
xchg
sbb
sub
sub
call
pop
push
xchg
inc
lods
insl
scas
cwtl
es
push
or
adc
and
sbb
cmp
jg
sbb
ja
lret
mov
dec
mov
or
cld
bound
pop
xchg
mov
loope
or
sti
and
lds
inc
out
es
outsl
cmp
xchg
popf
mov
mov
pop
lret
fsubs
push
xchg
fwait
pushf
negl
xchg
sub
icebp
aaa
ror
iret
jmp
sbb
rcr
and
xchg
mov
rcr
roll
fstpl
fwait
cmc
sbb
cld
cmp
jae
je
cmp
or
mov
aam
inc
loopne
aam
je
test
popf
loop
pusha
gs
and
cmpsl
icebp
xlat
pop
push
jns
loope
sbb
push
mov
xlat
add
jmp
jno
inc
pushf
aam
push
pop
inc
lret
aad
nop
push
fwait
xchg
sbb
mov
mov
shrb
mov
ljmp
jo
xlat
loopne
and
push
fucom
dec
pop
cmpsl
mov
and
add
cmp
ret
xchg
pop
gs
xlat
loope
pop
cmpsb
mov
sbb
clc
test
jmp
push
in
cmp
xor
pop
loop
mov
fdivl
sub
je
jo
gs
repnz
mov
adc
dec
pop
lds
add
push
jle
xor
mov
ss
sub
jl
cmp
pop
adc
rcr
inc
and
in
jp
stos
xor
out
jnp
add
mov
pop
push
fcmove
push
pop
mov
loope
adc
hlt
loopne
test
cmpsb
xor
sub
aam
addb
inc
lret
aad
mov
sbb
shrb
or
mov
sarb
or
inc
arpl
xchg
loope
pop
data16
sub
or
enter
test
and
adc
cs
jmp
mov
loope
xchg
mov
sar
sub
aaa
outsl
sub
decl
test
sahf
shll
pop
mov
stos
push
fdivrl
push
sub
dec
jl
andb
mov
mov
sub
adc
in
dec
sbbb
cmp
push
cs
fldl
sub
sbb
pop
or
jge
xchg
fwait
inc
pop
ret
je
stos
xor
adc
cmp
test
nop
dec
subl
shrb
repz
cmp
xchg
dec
xorb
inc
dec
sbb
ds
or
sbb
addb
inc
lret
aad
insl
fwait
clc
mov
inc
dec
sub
sub
cmp
bndstx
in
mov
std
ror
push
pop
scas
mov
push
popa
mov
sub
mov
sti
out
lods
loop
sbb
add
ret
std
xchg
orb
leave
lock
ljmp
sub
dec
not
cmp
sub
out
push
pop
mov
fsubl
lcall
add
sbb
pop
sbb
lahf
inc
dec
push
cmpb
and
fstl
mov
dec
aaa
les
bnd
jae
inc
cs
dec
push
mov
or
rolb
test
jl
clc
sbb
adc
jmp
fwait
and
cmpsl
mov
loope
jb
insl
jmp
cmpsl
add
inc
inc
cltd
jle
push
lret
add
push
sub
fcoml
cltd
mov
aad
stos
sarl
repnz
outsb
xchg
mov
out
sub
jmp
mov
subb
aad
lcall
rorl
cltd
add
dec
enter
cmpb
sbb
add
sbb
cmp
xchg
dec
subl
shll
fnsave
divl
or
cmp
cmpsb
mov
and
out
mov
dec
push
inc
lret
xchg
cmp
enter
shlb
call
inc
cld
mov
pusha
jmp
adc
jb
arpl
sarl
sub
cmpsl
xor
jge
pop
sub
xlat
sahf
test
mov
out
stc
ret
and
jne
adc
pushf
pop
cmp
outsl
popa
jae
sub
cmp
je
mov
into
fsub
in
testb
adc
sub
cmp
push
pop
outsl
jns
lea
leave
rcr
out
sti
add
movl
mov
nop
inc
xor
cmpsb
inc
cmp
cmpsb
stos
and
sub
clc
jne
fbld
popf
filds
lds
jo
sub
sarb
sub
bound
push
push
and
inc
dec
push
pop
push
lcall
loopne
hlt
decb
adc
sub
push
adc
outsl
jnp
cltd
and
mov
lret
nop
fildll
std
inc
orl
in
stc
add
inc
sbb
and
jl
lahf
xor
jg
pop
push
sar
mov
sbb
or
mov
and
inc
jnp
push
fists
pop
fsubrp
repnz
fcoml
inc
stc
xor
and
lret
lret
arpl
mov
or
lret
push
xor
or
out
mov
xor
xor
aas
in
and
and
push
jnp
stos
mov
leave
rcr
out
sti
out
and
inc
jo
gs
xor
addr16
sub
repz
xchg
aam
das
inc
aaa
pop
inc
push
stos
mov
jbe
mov
lss
je
cld
in
dec
sbb
dec
pop
arpl
subl
xlat
add
mov
test
addl
stos
mov
adc
int3
add
adc
or
pop
loope
cmc
loopne
xlat
add
out
pop
mov
inc
movsl
jno
test
mov
add
leave
and
aas
jmp
fwait
test
mov
lret
jmp
cmc
xor
dec
insb
push
xchg
dec
test
sbb
ja
loopne
out
xchg
adc
pop
es
jne
mov
lds
add
divl
add
cmp
push
pop
inc
sahf
sbb
shlb
icebp
sti
out
and
repz
push
mov
lea
scas
push
or
popf
cld
push
ljmp
hlt
pop
push
cmpb
mov
fidivl
pop
mov
cli
push
pop
icebp
push
cmovp
imul
fcoms
xchg
add
pop
adc
sbb
movsl
outsb
js
mov
scas
add
pop
pop
or
inc
mov
add
xlat
loope
push
loopne
xlat
pop
mov
push
xlat
adc
push
mov
xchg
push
mov
sarl
in
sbb
mov
dec
sarb
cltd
inc
lods
pop
ret
in
adc
sbb
pop
pop
icebp
xor
das
sbb
lds
addr16
pop
les
loop
mov
pushl
loop
cmc
pop
add
pop
jl
mov
ret
mov
fstl
dec
js
insb
sbb
pop
in
lods
and
out
sti
out
and
inc
push
pop
push
adc
lock
and
mov
addr16
xchg
mov
cli
or
add
xor
or
int3
loop
jg
fwait
sahf
lcall
scas
decl
rorb
push
cmp
test
push
pop
sar
and
mov
xor
pop
mov
lods
pop
int3
push
and
and
pop
dec
inc
mov
fs
jle
and
push
mov
cld
aad
nop
mov
pop
test
mov
mov
lcall
es
inc
add
mov
jg
repnz
or
pusha
adc
sti
inc
push
pushf
push
pop
ss
jns
inc
cmp
mov
jo
sar
pop
daa
sbb
mov
in
pop
xchg
mov
dec
aad
mov
int
orl
jne
inc
sub
arpl
fwait
push
lret
lret
shll
fildl
or
jne
jecxz
cmp
clc
mov
lret
sbb
pop
sbb
fiadds
movsl
add
xlat
loope
cmpsl
shlb
in
or
mov
xor
divb
into
mov
rcrl
push
pushf
adc
cmp
sub
mov
and
push
mov
adc
xor
and
add
sub
repz
fwait
add
loopne
mov
test
in
cmpsb
shr
loopne
mov
dec
das
fsubrl
and
sub
jnp
fmuls
push
repnz
int
xchg
xchg
inc
jmp
dec
dec
sar
and
mov
and
jnp
adc
xchg
ret
jmp
shrb
and
iret
xchg
push
push
push
ret
mov
sub
loopne
cmpsl
add
es
sbb
popf
push
add
jg
enter
cli
scas
add
xor
jae
fdiv
stc
cmpsl
mov
pushf
cmc
jmp
shl
bound
and
in
push
cwtl
cmpsb
mov
sub
negb
stos
in
movb
sub
repnz
jae
lcall
lods
mov
fisubs
mov
jmp
sbb
ss
mov
mov
addr16
insl
iret
mov
ss
pop
sbb
js
jge
sahf
fwait
in
jne
int
test
sub
dec
in
enter
iret
ror
lea
add
sub
daa
loope
inc
and
cmp
scas
xor
mov
out
sbb
adc
xor
test
in
push
add
clc
push
fistps
xchg
sbb
out
mov
or
scas
add
repnz
decl
orl
das
mov
imul
das
call
mov
popa
mov
daa
xor
push
pop
sbb
inc
dec
adc
xor
ljmp
pop
cltd
xor
push
mov
adc
clc
adc
stc
xor
cmp
xchg
jo
xor
add
je
outsb
les
add
cmp
jge
push
inc
mov
pushf
and
ret
loope
loopne
ljmp
cld
add
ja,pn
dec
aas
mov
mov
loopne
dec
jge
xchg
out
icebp
mov
add
jb
out
pop
xor
sbbl
leave
xor
fsubrp
cld
adc
adc
mov
xchg
pop
jae
test
adc
and
out
cli
in
aaa
cmp
inc
push
add
jno
ret
das
scas
hlt
js
sub
jmp
out
or
and
mov
out
pop
in
mov
adc
repz
call
clc
test
mov
xor
push
arpl
sarb
shll
std
mov
jo
pop
xor
xor
nop
dec
cmpl
mov
add
loop
cmp
and
adc
xchg
push
cmp
decl
lock
loopne
cmp
sub
push
fnstsw
les
insb
into
fadd
mov
inc
stos
sbb
inc
aaa
jmp
fwait
movsl
nop
imul
ljmp
fcoms
mov
mov
xchg
and
out
movsl
or
sbb
adc
add
mov
lods
add
repnz
aad
mov
cmp
push
dec
sub
dec
add
add
add
push
test
push
sbb
jae
movsl
clc
sbbb
mov
push
cmpl
cmp
mov
bound
mov
adc
loopne
and
fucomip
mov
mov
sub
cmp
lret
pop
ljmp
mov
and
jecxz
dec
pop
xor
sub
push
subl
add
jmp
sub
cmp
xor
popa
push
mov
data16
ret
int
adc
mov
dec
add
inc
decb
dec
push
outsb
lods
xchg
push
mov
add
pop
adc
in
insl
dec
push
or
lock
data16
mov
mov
and
adc
add
arpl
mov
push
sbbb
ljmp
addr16
mov
pop
sarb
aad
mov
iret
push
call
adc
cmpsb
pusha
cwtl
sti
scas
sub
cmp
fmuls
test
insb
dec
push
cmpsl
dec
xlat
sub
pop
jo
loopne
fistpl
inc
and
jp
stos
cli
mov
aas
fs
iret
lods
mov
sahf
sub
in
lret
inc
adc
mov
mov
std
push
call
jae
fistps
cld
scas
push
sbb
push
ja
jns
mov
cmp
iret
jg
aaa
inc
sub
das
and
dec
insb
inc
sbb
jmp
nop
les
and
sbb
adc
addr16
sarb
adc
in
push
mov
pop
repnz
mov
push
mov
xchg
push
out
mov
cmp
adc
pop
fwait
pop
push
mov
cvtdq2ps
mov
lahf
jp
rcr
or
mov
cmp
pop
push
insl
mov
movsl
scas
stc
test
mov
sahf
and
inc
add
ficompl
mov
shlb
enter
loop
ja
sbb
ficoms
add
pop
push
inc
stos
mov
out
and
or
add
cmp
mov
in
in
in
push
sbb
dec
daa
xor
mov
cltd
push
lcall
fdivl
dec
push
or
and
sub
xchg
ret
loope
and
adc
outsb
xor
and
jge
ret
cmpsl
push
inc
mov
rol
in
lods
loope
or
in
loope
dec
xchg
pushf
cmpsb
mov
mov
stos
mov
scas
add
inc
das
cmp
jp
outsb
stos
push
xchg
push
mov
rcr
in
stc
add
inc
sbb
dec
xchg
sub
rorb
shll
sti
sub
adc
and
add
imul
imul
and
jbe
mov
sahf
fstl
adc
jbe
outsl
sbb
mov
test
scas
in
sbb
sub
mov
rol
xorb
pop
cli
adc
fsubrl
adc
sbb
pop
lahf
fildl
adc
and
add
cmp
aaa
jp
rclb
xchg
ret
fistps
sub
push
sub
cmp
jg
xchg
pop
mov
stos
cmpsl
icebp
jmp
adc
push
adc
insl
fildl
pop
jbe
cmp
add
jae
in
fnstsw
or
and
inc
insl
hlt
push
addb
mov
fsubr
fnsave
dec
xor
dec
jb
insb
jo
inc
sbb
les
repnz
pop
inc
dec
cmp
jbe
data16
dec
sbb
out
fsincos
xlat
je
dec
push
inc
sbb
add
nop
push
and
int
shr
in
cld
gs
pop
inc
pop
ds
test
push
sub
repnz
jno
push
pop
dec
sub
and
mov
mov
fisttpl
stc
jmp
push
sub
outsb
sbb
or
mov
shll
out
stos
loop
xchg
adc
ds
jg
je
pop
std
std
cltd
push
mov
push
push
or
cmc
int3
out
std
and
cmp
mov
jnp
ret
ret
nop
lcall
loope
and
push
loopne
adc
pop
arpl
subl
mov
stc
add
inc
repnz
je
jg
out
cld
rcll
iret
cmpsb
stos
pop
add
pop
adc
pop
push
pop
jl
lods
aam
and
xchg
pop
cmp
negl
shl
in
je
in
inc
xor
insl
outsb
mov
insl
icebp
add
sbb
xor
jo
push
out
pop
dec
add
fcmovnb
pushf
mov
stos
jmp
icebp
bound
fisttpll
cs
andl
jnp
int
subb
imul
scas
jns
inc
pop
jecxz
repnz
lds
and
mov
sub
std
repnz
out
stos
jecxz
hlt
pusha
cltd
xor
xor
dec
push
fwait
int
mov
mov
mov
scas
sti
xchg
pop
and
popa
sbb
popa
xor
jp
in
xlat
je
negb
push
push
cmp
jbe
movsl
les
loop
xlat
cli
xchg
scas
sahf
fsts
cmp
scas
xlat
jne
ljmp
pop
mov
pop
sbb
push
xchg
mov
pop
sbb
mov
jae
mov
lret
mov
jmp
cmp
sub
sbb
roll
shl
faddl
sub
inc
enter
pop
jg
sbbb
fcmovnu
mov
sbb
and
fbld
dec
mov
fwait
lock
mov
insl
and
mov
cmp
je
mov
in
sub
sbb
cmp
xchg
inc
jns
inc
jmp
push
cli
add
or
xlat
xor
sub
out
mov
xchg
repz
mov
cmp
pop
sti
dec
cmc
add
mov
xor
add
cwtl
add
push
pop
inc
mov
in
mov
jg
arpl
jo
mov
or
add
cld
jle
popa
imul
xor
add
jp
insl
ss
sub
cmpsb
lret
aam
xchg
fwait
xchg
jp
int
jne
xlat
es
or
pusha
loopne
movsl
inc
js
push
jnp
cmpb
fucom
dec
enter
add
and
rdpmc
pop
push
jl
outsb
int
movb
inc
js
sbb
popf
out
push
cmovns
sahf
or
lret
out
enter
pop
xor
imul
or
sbbb
in
adc
or
je
mov
aaa
sbb
aad
push
pop
push
lock
and
mov
pop
outsb
test
js
xchg
stos
or
inc
shl
sar
repnz
mov
xor
hlt
ficoml
ja
dec
cmp
sub
inc
hlt
sub
dec
test
mov
movsl
fsub
xor
or
pop
push
popf
inc
test
fstl
stc
and
data16
push
int3
and
lcall
scas
rcll
or
repnz
mov
clc
cmp
sbb
rcrl
sbb
push
xchg
out
sub
and
hlt
cs
inc
arpl
cmpsb
shrl
imul
push
pop
mov
cld
xor
cmpsb
mov
mov
out
int
xchg
fwait
decb
aaa
nop
lcall
movsl
out
lcall
in
stos
mov
out
jnp
in
and
inc
ds
pop
adc
xchg
out
mov
inc
or
dec
push
jo
jno
rcl
xchg
add
lahf
pop
aad
out
xchg
and
sbb
cmp
mov
sub
xor
inc
dec
cmp
pop
push
sub
sub
jmp
or
lahf
mov
fcomi
dec
lds
mov
mov
jl
loope
jg
addr16
mov
in
lods
jg
xchg
adc
xor
and
cmp
jge
call
fiaddl
jmp
fistps
cmp
pop
or
and
sbb
neg
sbb
jbe
mov
in
fsubs
and
cs
insb
nop
cmp
mov
pop
in
mov
test
pop
dec
push
mov
push
sbb
loop
jns
add
pop
lret
aas
fistps
inc
push
mov
mov
add
aas
sub
shrb
or
and
xchg
jp
dec
cmp
in
enter
sahf
test
inc
mov
cmp
or
dec
cmp
push
clc
aaa
out
cmp
hlt
imul
jnp
mov
add
ja
dec
xor
fwait
movsl
xchg
pop
test
xlat
loope
cmc
mov
mov
and
in
jle
push
popa
or
mov
mov
scas
xor
add
leave
inc
outsb
pop
jmp
loop
mov
inc
xchg
fwait
inc
inc
je
bound
lret
data16
test
fdivr
mov
push
ss
cmpsl
mov
std
cmp
mov
cmp
hlt
daa
xlat
test
and
outsl
scas
xchg
int
fimuls
xchg
hlt
mov
mov
call
lcall
sub
inc
xor
and
jb
inc
push
orl
cmp
mov
xchg
pop
sahf
or
adcb
xchg
inc
mov
adc
mov
push
hlt
shrl
mov
adc
in
js
popa
int3
pusha
sub
fwait
or
dec
push
popa
mov
sub
frstor
stc
xor
add
cmp
lods
pushf
daa
adc
jmp
je
rcr
in
mov
jg
and
xor
sub
add
mov
lods
xor
add
xchg
and
testl
inc
add
mov
xlat
inc
je
inc
cmp
jmp
loop
fcompl
xor
divb
lds
add
push
lahf
daa
cmpl
pop
and
aam
aaa
hlt
sbb
loop
aad
test
dec
outsl
mov
gs
xchg
adc
add
call
push
pusha
mov
test
xchg
es
or
jecxz
loope
aas
repnz
lcall
pop
add
movsl
sarl
in
dec
mov
in
sub
push
clc
dec
pop
test
and
pop
jmp
pop
and
aas
and
push
fisttpll
test
sub
ror
adc
imul
out
movsl
pop
lcall
and
jg
mov
fwait
dec
sub
lods
test
ljmp
loope
in
pop
bound
pop
jg
sbb
call
mov
mov
popa
fsubl
popf
cmpsl
mov
mov
xor
xor
movsl
aaa
and
pop
push
pusha
xchg
mov
lcall
or
fwait
cli
sbb
inc
pop
inc
enter
lret
out
test
jbe
dec
in
ret
shlb
and
imul
pushf
aas
loop
addr16
and
add
xchg
scas
fsts
cmp
outsl
out
cmp
aam
stos
loope
jno
mov
insl
cmc
push
in
mov
push
lods
inc
or
or
into
icebp
xor
out
sub
xchg
and
test
adc
idivb
fxch
fidivl
pop
repnz
mov
mov
pop
int3
inc
and
stc
loope
inc
adcl
loope
test
or
out
mov
js
je
push
loope
or
pop
movsl
cmp
clc
cmp
pop
sub
out
mov
andb
fnstsw
int
into
xor
xor
dec
jge
add
mov
mov
movsb
insl
ja
pop
fld
aas
pop
orl
nop
fildl
out
lds
pushf
mov
xor
imul
movsl
cmp
or
aas
dec
or
sarb
inc
dec
jl
push
xchg
outsb
dec
cmp
xchg
lret
xchg
xor
add
or
xlat
cmp
nop
lcall
loopne
aaa
mov
xchg
stc
mov
inc
das
inc
adc
es
cwtl
xor
bound
cmp
cli
add
or
mov
sahf
lea
insl
fs
fwait
movsl
xchg
lods
cmc
iret
mov
lret
push
sbb
jp
pop
jne
mov
and
test
shr
fcompl
mov
rorb
xchg
fwait
jbe
movsl
mov
ficomps
cs
or
pop
ret
aas
adc
into
fs
sbb
lods
fnop
icebp
dec
loope
loop
xchg
fwait
mov
xchg
ret
popa
lahf
int
xchg
cld
rcll
xor
orl
test
fstps
mov
mov
adc
inc
bnd
mov
mov
pop
and
movsb
cmc
mov
and
sbb
out
jbe
mov
push
sub
loop
mov
imul
addb
mov
in
ds
xlat
pop
lock
inc
jo
bound
sbb
imul
int3
pop
and
sub
push
bound
sbb
fwait
ss
mov
or
cmc
cltd
repz
in
jmp
jg
imul
cmpsb
xlat
mov
repz
test
aam
insb
jbe
jnp
inc
dec
sarb
sbb
push
int
adc
push
pushl
cld
jbe
popa
imul
jno
mov
add
push
repz
push
jl
outsb
sbb
push
loope
loopne
in
jns
xor
scas
or
cmp
je
js
jle
lea
xchg
outsl
cli
add
xchg
lods
ss
mov
dec
shrb
xchg
push
push
mov
jae
rcr
scas
dec
mov
call
out
sbb
jmp
push
insb
pop
mov
dec
mov
xchg
shrb
xor
inc
insb
jnp
jns
mov
mov
lods
leave
adc
dec
pop
add
jnp
pushf
push
mov
pushf
mov
fisttpl
daa
inc
xchg
in
inc
and
rorl
push
and
sahf
and
push
adc
fwait
into
or
pusha
mov
pusha
mov
pop
jle
fimuls
cmp
lock
inc
js
gs
sar
jae
xchg
sub
sub
inc
sbb
in
dec
cmpl
push
or
cmpsl
mov
mov
jnp
divl
dec
dec
es
or
inc
jb
pop
lcall
sbb
adc
inc
pop
cmp
leave
mov
js
pop
mov
and
sbb
add
xlat
sub
push
pop
inc
outsb
sub
std
xor
pushf
call
fisubrl
cs
mov
imul
jecxz
mov
adc
sub
inc
rcrb
push
fwait
movsl
iret
stos
lds
int
xor
xor
aas
sub
adc
mov
lock
xchg
scas
add
imul
inc
sbb
mov
mov
xchg
add
js
dec
push
sbbl
out
bnd
xor
fcoms
aad
xor
inc
outsb
sub
xchg
mov
insl
ficomps
cs
add
and
pop
xor
clc
add
mov
push
lds
sbb
push
rol
push
inc
pop
jb
adc
outsl
dec
xlat
loope
fs
mov
sbb
scas
pop
outsl
sti
shlb
loopne
mov
daa
aad
jg
push
adc
loope
add
or
negl
sbb
test
xchg
dec
ja
insb
xchg
push
mov
cmpl
push
jmp
xor
jbe
adc
loopne
cmpsl
clc
shrb
daa
mov
xchg
pop
adc
jbe
fldcw
push
and
cmc
or
xor
add
push
imul
inc
pushf
mov
sub
adc
xor
out
push
test
js
test
loopne
ret
loope
sarb
mov
push
sub
cmp
and
inc
ja
pusha
fwait
mov
sbb
shr
dec
adc
and
insl
jle
sbb
lret
sahf
xlat
cld
aaa
ret
sbb
jle
jg
xchg
mov
loope
push
mov
scas
dec
or
push
insl
movsb
cmp
and
cmc
rcl
add
mov
out
push
xchg
jnp
clc
mov
enter
aam
int3
cmc
lods
fisttpll
push
push
cmp
jge
arpl
and
pop
or
xchg
push
ss
or
or
dec
adc
lds
leave
into
fmuls
push
iret
sub
clc
ret
jb
fistpl
push
and
addr16
mov
jo
and
sbb
aad
aam
fidivs
pop
and
sub
adc
and
inc
outsb
mov
fs
subl
adc
adc
loopne
xlat
mov
adc
out
aad
outsl
js
les
push
add
pop
push
pop
bound
push
add
ljmp
push
insl
push
pop
orl
jmp
out
jecxz
sub
test
jo
loope
pop
jp
xor
cmc
ljmp
sbb
and
push
xor
pop
jg
pop
mov
pop
pushf
mov
into
das
rorl
sarl
int
mov
movsl
mov
jno
push
xor
pop
jp
ja
into
mov
popf
loop
pop
cmc
ret
daa
mov
xchg
sub
mov
lret
inc
jbe
jne
dec
pop
mov
gs
dec
pop
cmpb
xchg
dec
jg
push
je
mov
sub
sbb
ds
sub
push
cli
cmp
mov
lret
cmc
int3
out
popf
or
fmuls
xchg
mov
mov
xlat
pop
and
mov
outsb
sub
xchg
mov
insl
ficomps
cs
add
and
pop
xor
clc
add
int
leave
push
lds
sbb
push
rol
push
inc
pop
jb
adc
jge
xlat
loope
fs
call
jmp
aas
popa
and
mov
jmp
fsubl
mov
mov
dec
fildll
cmp
xchg
push
pop
dec
add
bound
pop
cwtl
mov
daa
mov
icebp
pushf
movsl
or
nop
lcall
jmp
mov
imul
and
inc
loopne
lds
push
dec
xchg
mov
xchg
lds
pop
mov
into
imul
test
jle
adc
push
ds
aaa
mov
arpl
lahf
iret
mov
loopne
jnp
hlt
sub
sbb
xchg
fwait
sbbb
add
xlat
insl
test
and
outsb
ret
leave
xor
push
and
jge
jp
arpl
dec
fsubs
sbb
pop
das
sbb
cmp
int
pop
mov
fisttpl
inc
push
or
insb
inc
and
jbe
gs
jp
mov
fdivrp
mov
jb
push
dec
je
jae
out
and
pop
and
pop
adc
inc
pop
jecxz,pt
and
cmp
hlt
lahf
loopne
or
inc
jge
dec
sub
imul
int3
lds
jle
push
loope
jnp
aas
ljmp
push
sbb
daa
mov
mov
cmp
movsl
push
cwtl
popa
imul
inc
outsb
cltd
sub
xor
dec
push
das
call
jmp
pop
mov
mov
mov
loop
orl
xchg
mov
inc
xor
into
add
testb
adc
outsl
xor
mov
mov
test
sbb
xor
cmp
outsb
out
mov
dec
pop
mov
adc
mull
notb
xor
cmp
mov
aas
lods
sti
add
ss
mov
mov
jae
rcr
scas
fcoms
xchg
out
sub
pop
loop
fldenv
rcrb
in
in
mulb
repnz
push
daa
cmc
push
dec
push
and
add
loope
daa
adc
mov
or
xorl
xchg
or
xor
pop
push
adc
xchg
lret
mov
into
push
push
and
dec
sbbl
jp
add
xor
push
sbb
cmp
arpl
pop
mov
xlat
loope
pop
lret
sbb
jmp
adc
add
and
inc
ja
lea
xorb
pushf
or
sahf
enter
popa
js
jg
mov
push
sbb
adc
inc
icebp
xor
popa
push
popf
mov
mov
vhsubps
push
and
add
neg
sbb
clc
lock
ret
sbb
nop
lret
call
push
xor
and
cltd
mov
aad
int3
test
in
cwtl
mov
mov
pop
and
inc
gs
dec
ret
and
rorl
and
push
aaa
and
insl
cmpsb
sbb
gs
cmp
ss
das
inc
mov
test
mov
fs
jge
loope
fldt
ds
loopne
cmp
test
cmp
mov
stos
cli
imul
sbb
stc
xchg
ret
int
jnp
rcrb
shrb
push
mov
in
dec
pop
cmpsb
mov
into
fsub
jae
xchg
mov
inc
dec
aaa
shlb
jge
mov
out
les
pop
repnz
call
add
mov
pusha
and
adc
or
arpl
mov
push
pusha
push
jle
xchg
pushf
cmpsb
mov
iret
in
testl
xor
outsl
jns
lea
int
loope
cmc
decl
adc
sub
cmp
push
pop
outsb
js
mov
enter
lock
add
sbb
sub
inc
dec
xchg
pusha
push
ret
out
ljmp
cmpb
sub
fdivrl
divl
push
rolb
in
and
movsl
scas
js
inc
dec
xchg
pop
cmpsb
mov
lds
fnclex
in
test
mov
inc
xchg
nop
lcall
loope
and
xor
sub
or
sub
les
xchg
les
rol
push
lcall
cmc
sub
outsl
arpl
popf
jecxz
push
out
push
fcoml
enter
push
jp
outsb
sbb
ret
mov
ljmp
in
inc
pushl
fs
jno
test
mov
and
pop
sbb
std
clc
jo
push
mov
add
ret
dec
sbbl
cld
xor
push
mov
ljmp
xor
and
push
pop
mov
bound
jbe
adc
in
in
testb
adc
sub
cmp
push
pop
inc
sahf
add
out
mov
push
rorl
out
mov
dec
fs
mov
jge
xchg
fwait
mov
ret
mov
sbb
or
jg
js
jg
fucom
icebp
fdivs
sbb
or
sbb
cmp
arpl
adc
cmpl
out
stc
add
inc
ja
push
push
mov
test
flds
xor
rorb
dec
inc
mov
mov
imul
lods
les
mov
dec
negb
stos
je
mov
lds
int
psubb
aaa
fidivrs
pop
aam
inc
jnp
dec
cltd
inc
push
stc
ret
int
mov
push
cld
stc
fisubrl
cmp
mov
xchg
aam
mov
insb
aad
adc
std
xor
repz
pop
xchg
fwait
inc
jle
xchg
pushf
fbstp
shl
pop
movsb
out
push
addr16
pop
test
and
out
call
test
pop
std
sub
sbb
jae
xchg
movsb
inc
jmp
push
adc
data16
scas
imul
xchg
aam
rorl
out
xchg
test
rclb
pop
bound
mov
outsl
pop
xor
cli
jo
and
xor
xchg
pushf
mov
mov
clc
clc
mov
nop
mov
into
pop
inc
loopne
xchg
popl
pop
data16
in
cwtl
mov
aam
push
adc
mov
jge
lds
test
dec
dec
add
mov
test
push
mov
ret
int
lahf
or
jmp
sbb
add
out
pop
gs
dec
mov
aam
in
loop
int
xor
adc
push
rcll
movsl
scas
mov
out
out
leave
mov
es
fiaddl
out
cmp
jns
call
repz
bts
dec
jnp
push
push
test
jae
push
lcall
cmc
push
sub
jno
das
sbb
packsswb
jne
lea
cmp
hlt
adc
imul
arpl
subl
adc
sub
or
insb
and
and
mov
pop
ret
mov
scas
add
and
shl
cli
fs
and
xchg
test
pop
stc
repnz
add
cmp
pusha
push
jae
mov
jmp
mov
add
cmp
pop
popf
and
nop
lret
hlt
shl
push
out
xchg
sbb
sub
sbb
cmp
sub
lods
sbb
adc
cmp
pop
jne
mov
pop
pop
iret
scas
jnp
cmc
sbb
xor
pop
popa
pop
adc
mov
in
enter
icebp
and
and
adc
out
push
xchg
pop
push
mov
xchg
fwait
mov
ret
out
cmpsl
lret
das
call
popa
dec
sub
jg
sbbb
notb
or
inc
dec
pop
arpl
subl
and
bound
pushl
je
push
popa
imul
mov
je
in
les
xor
inc
fsubrl
mov
and
fincstp
sbb
shl
in
je
in
or
loopne
sbb
mov
insl
icebp
adcl
aaa
enter
shll
lds
sbb
rolb
xsavec
les
xchg
sub
sti
pop
fdivs
in
jb
pop
dec
sub
imul
das
insb
ret
cmpl
icebp
repz
das
clc
dec
cli
test
shl
or
push
sbb
and
mov
push
test
ret
fistps
lcall
cmp
pop
popa
imul
dec
mov
lods
leave
mov
sbb
add
xchg
inc
xchg
ret
in
cmpsl
loope
pop
mov
adc
aas
dec
ja
data16
push
pop
cmpsl
mov
xchg
into
sbb
out
cltd
rolb
aaa
hlt
and
repz
sbb
fcmovnb
inc
jbe
lret
fildll
in
push
cmp
or
imul
out
push
enter
and
inc
push
mov
dec
jne
adc
out
lock
add
or
arpl
pop
jnp
imul
hlt
scas
rorl
int
dec
or
xor
xchg
stos
lods
cmp
lea
daa
xor
cmp
fs
js
sub
lods
push
fsub
lock
and
or
pop
dec
adc
jl
nop
mov
jle
movsl
ljmp
push
cld
das
add
popa
mov
imul
jnp
fchs
ljmp
popa
or
pop
bound
mov
mov
into
cmc
xor
aas
dec
push
orl
into
js
mov
icebp
sub
not
pop
sub
pop
sbb
pop
js
push
jns
jnp
push
lods
lret
sbb
sti
push
adc
and
cmp
and
push
jle
imul
les
into
and
aaa
inc
call
dec
xchg
sub
add
pop
pop
cmp
jp
repnz
pop
shll
mov
repnz
into
pop
sub
nop
cmp
xchg
decb
mov
adc
push
add
aam
xor
jl
stos
mov
lods
in
cltd
add
mov
push
adc
mov
inc
imul
sbb
std
mov
cmp
sub
inc
cmc
outsl
outsb
xchg
push
add
movsb
mov
mov
and
es
adc
sub
jbe
mov
rcl
out
pop
xlat
std
cmp
push
jns
pop
enter
push
jp
in
imul
test
mov
sbb
add
repnz
loopne
jns
mov
mov
inc
dec
sbb
sub
inc
dec
push
pop
push
lcall
loope
cmc
decl
adc
dec
pop
arpl
orl
in
decb
adc
xor
insb
jbe
mov
rcr
in
es
jne
pop
fwait
movsl
scas
mov
insl
cmc
ljmp
add
pop
add
inc
dec
pop
fs
cmp
pop
cltd
shr
test
imul
ror
push
pop
push
jge
lock
clc
xchg
adc
adc
fcoml
xchg
push
mov
dec
mov
jge
jnp
enter
jg
xor
xor
inc
jns
mov
mov
pop
leave
add
sub
call
lahf
mov
dec
icebp
test
bsf
imul
xor
pop
jo
gs
jo
int3
xlat
loope
cmpsl
ret
sbb
cmpps
mov
pop
inc
or
jl
pop
xor
xchg
iret
test
test
jl
jne
insl
xchg
dec
xchg
ret
imul
or
jmp
pop
push
xor
mov
popa
popf
adc
hlt
fisttpll
out
pop
push
xlat
cmp
cs
xor
in
movsl
sarl
out
xor
repz
inc
outsb
push
inc
int
sbbb
repnz
xchg
cmp
mov
sub
pop
pop
pop
lea
xchg
shr
aam
jmp
and
dec
push
popa
mov
push
popf
cmpsl
mov
in
in
jp
decb
adc
add
mov
or
lock
jmp
sar
pop
or
cmp
int
jae
clc
mov
dec
icebp
test
popf
mov
sub
test
sbb
lods
jmp
into
aad
mov
pop
push
lds
sub
jle
mov
out
sbb
ret
cmc
imul
push
jge
jno
orl
add
add
jg
pop
fsubl
pop
sub
lret
xchg
testb
or
mov
adc
rcl
pop
xchg
or
out
inc
cmp
sbb
xor
inc
jo
arpl
add
mov
sub
jne
and
inc
cld
push
pop
push
out
lret
xchg
repz
daa
sbb
inc
popa
add
xchg
pop
push
lcall
loope
and
out
divl
mov
rorb
mov
movsb
pop
je
in
test
popa
test
xor
push
imul
xchg
mov
pushf
pop
fisttpll
add
inc
pop
jmp
cmp
jo
mov
cwtl
mov
adc
fs
or
inc
insb
dec
mov
popf
mov
stos
test
popf
shll
es
add
aad
inc
jae
xchg
je
movsl
iret
cmpsb
shr
loope
lcall
das
cmp
push
popa
imul
jno
lahf
pop
mov
fucom
in
sub
notb
sub
arpl
cmp
ret
inc
mov
rcll
aas
ljmp
insb
cwtl
ljmp
pop
mov
aaa
lock
dec
fidivrs
jmp
outsl
pop
std
std
adc
lods
sbb
aad
or
cld
and
mulb
push
andl
mov
sbb
test
xor
in
lahf
inc
jae
orb
leave
add
add
dec
movsl
outsl
mov
add
mov
enter
sbb
xchg
fwait
mov
cltd
mov
movsl
frstor
ret
call
jo
pop
adc
sbb
leave
test
mov
or
jl
pmaxub
jmp
sub
in
xor
aas
dec
ss
lahf
cmp
jb
bound
sahf
int3
test
ss
cmp
sub
push
imulb
addr16
fcoml
xchg
cmp
cltd
idiv
or
add
addr16
cmc
push
in
clc
pop
mov
lret
sbb
xchg
out
test
les
jl
jb
jnp
lahf
in
mov
iret
add
sbb
or
orb
xor
mov
int
mov
inc
dec
push
mov
xchg
fwait
daa
pusha
fcmovbe
mov
outsl
movsl
lock
adc
and
aaa
pop
stos
push
shll
orl
cmpsb
rorl
or
mov
jo
or
aad
mov
aam
cmp
popf
negb
inc
dec
push
pusha
mov
dec
mov
in
push
movzwl
push
push
fdivl
push
mov
xchg
mov
dec
hlt
adc
enter
ss
sbb
push
insb
add
pushf
cmpsb
xchg
mov
ficoms
repz
mov
cmp
xchg
outsl
ret
movl
mov
fldcw
pop
cmp
cmp
js
sti
cmpsl
adc
int3
repz
add
loopne
mov
bound
scas
mov
fucomip
jmp
push
das
cmp
push
sbbl
mov
sbb
or
fdivrs
or
sbb
dec
pop
arpl
subl
in
clc
rcll
insb
and
xor
push
popf
js
cmpsl
roll
xorb
pop
cli
jno
fldt
icebp
arpl
ds
jae
mov
rcr
in
stc
add
inc
sbb
and
push
jle
push
mov
mov
in
sbb
push
adc
push
arpl
xchg
xchg
fwait
scas
aas
int3
fwait
jmp
adc
dec
fiaddl
arpl
pop
orl
ljmp
pop
push
xlat
sbb
mov
test
lret
sarl
pop
dec
or
cs
ss
icebp
stos
jno
outsl
in
out
cmp
dec
cmc
aas
scas
arpl
mov
scas
push
movsb
data16
repz
imulb
sbb
or
cmp
jg
dec
popf
push
xchg
mov
fstp
loopne
rcrl
adc
dec
daa
jnp
pop
add
adc
jmp
fdivrl
sbb
roll
inc
sbb
cmpsb
mov
jp
xor
stos
out
push
sbb
fdivrp
and
pop
aas
cmp
sub
cmp
cmpsb
bound
scas
and
sub
sbb
xor
xor
imul
or
movsl
add
sbb
adc
add
inc
dec
jne
xchg
dec
test
ror
stos
and
int3
stc
push
popa
imul
jno
lahf
loopne
aam
jmp
adc
push
pop
sub
insb
jbe
mov
cmpsb
or
and
cs
jle
mov
fsubl
fsubrl
sti
out
and
inc
mov
sbbb
sbb
jne
mov
sbb
rol
inc
dec
xchg
stos
mov
jbe
mov
ret
mov
fidivrl
repz
adc
sub
sahf
xchg
in
mov
out
fisttps
push
fsubrp
xor
lea
loop
ret
iret
in
xor
stos
mov
or
inc
push
sbb
mov
mov
cld
sub
sub
cmpl
cld
push
add
mov
rclb
scas
or
jae
icebp
in
pop
imul
push
popf
sbb
fidivs
pop
jle
ror
fs
outsb
je
jbe
jl
repz
pushf
add
xor
push
jg
adc
loop
movsl
jl
in
rolb
fwait
ljmp
pop
push
dec
js
insl
xchg
inc
mov
xchg
mov
shlb
cli
add
push
push
xor
popf
mov
jae
aad
imul
idivb
push
adc
outsl
imul
aad
mov
or
add
and
je
gs
dec
xchg
or
insb
mov
in
movsl
fisttpll
push
and
mov
mov
outsb
js
mov
scas
add
imul
xor
add
cmp
push
rclb
repnz
push
sbb
push
jle
int
inc
xor
mov
test
jp
mov
and
fwait
cmc
fmul
inc
cld
fistps
push
jg
jno
nop
fistpll
rorb
add
ss
cmovne
inc
int3
int3
mov
test
popf
int3
test
fldenv
loope
clc
arpl
push
nop
stc
imul
mov
int
loope
cmc
and
adc
xor
inc
dec
pop
stos
cmc
mov
lea
leave
rcr
out
sti
out
and
sbb
daa
pop
rcrb
mov
sti
daa
mov
mov
inc
xchg
ret
add
jbe
ds
jbe
sbb
popa
cmp
dec
pop
bound
int3
mov
sar
fisubrl
aaa
xchg
xor
daa
ret
xor
push
popa
mov
stos
fs
mov
flds
fdivrp
mov
xor
data16
jne
mov
mov
out
stc
add
inc
sbb
outsb
sub
pop
repz
mov
mov
sub
push
fmull
sub
cli
cmp
scas
mov
test
jb
and
sbb
sub
inc
insl
scas
lcall
mov
add
mov
xlat
sub
outsb
jge
xchg
fwait
iret
jno
js
sub
jmp
rorb
xor
lcall
sahf
addr16
pop
mov
ficoml
dec
mov
xor
xlat
and
pop
lret
jnp
mov
sub
ljmp
inc
sbb
arpl
xchg
xchg
call
push
jle
scas
mov
enter
mov
push
fmull
xor
ficoml
enter
xchg
xchg
inc
adc
je
ds
subl
xchg
push
stos
xchg
inc
sti
mov
sbb
push
mov
dec
xor
inc
pushf
push
nop
mov
int3
jne
cmc
add
push
leave
inc
pusha
inc
and
xchg
mov
aas
dec
push
inc
cli
xor
cmp
inc
xchg
fwait
movsl
scas
fcoms
cld
push
adc
xor
push
dec
push
pusha
push
leave
adc
addr16
cmpsl
mov
jecxz
testl
add
xor
loopne
stos
les
mov
adc
ljmp
outsb
add
clc
fsubrp
repz
or
aad
out
and
sub
mov
jae
xchg
movsb
adc
dec
pop
scas
call
dec
jo
mov
shrl
shrl
jmp
out
inc
rorb
jmp
adc
imul
es
adc
movsb
sub
movsl
outsb
js
mov
scas
add
pop
pop
xchg
aaa
mov
push
js
stos
pop
les
aam
and
call
mov
subl
mov
inc
repz
icebp
push
push
mov
dec
cli
mov
lods
push
mov
aam
jl
inc
inc
int3
stc
push
popa
imul
jno
lahf
mov
mov
pop
and
movsb
roll
out
movsb
scas
popf
js
mov
inc
loope
adc
es
mov
mov
test
lods
in
cmc
and
or
stc
imul
push
push
mov
adc
xlat
cmp
jb
out
lret
mov
dec
clc
xor
popf
mov
cmpsl
iret
jo
cld
int3
loope
and
add
xor
pop
jle
pop
arpl
subl
lock
out
dec
pop
push
ficoms
gs
into
mov
shr
add
xor
inc
jb
pusha
jo
sarl
ror
mov
inc
mov
dec
shlb
mov
popf
mov
movsl
test
adc
add
or
push
adc
xor
insl
rcll
in
mov
imulb
rorl
sub
popa
mov
test
roll
sub
es
loop
push
cmpl
popf
sub
lods
pop
mov
ds
pop
out
push
mov
pop
inc
sahf
add
fdivl
sbb
jp
jg
je
pop
sbb
inc
nop
fwait
lds
ret
popf
psllq
rcrl
and
inc
pop
push
xor
mov
mov
icebp
in
inc
sub
or
scas
mov
jge
push
les
in
sbb
adc
push
mov
xchg
mov
mov
hlt
in
adc
sub
adc
jp
pop
mov
sbb
lods
mov
jne
cmc
hlt
push
fsts
mov
outsb
das
arpl
pop
or
xchg
popf
mov
pop
mov
add
xor
rdpmc
sbb
mov
shlb
loopne
ret
loopne
push
scas
pop
sbb
aaa
push
lcall
into
ljmp
dec
push
aas
push
arpl
push
jecxz
inc
push
jnp
cmpsb
scas
mov
xchg
call
outsb
cmp
xchg
mov
aaa
orb
add
movl
lret
dec
in
inc
enter
rclb
ret
cli
ret
pop
xchg
std
std
and
pop
pop
ja
sub
push
mov
enter
shl
ficoms
pop
cmpsl
push
cmovnp
sub
sahf
mov
lahf
shrb
inc
inc
dec
aaa
adc
imul
frstor
jo
out
decl
aas
sbb
push
fcompl
int
xchg
lods
pop
int
stos
sub
int
rcrb
and
pop
pop
dec
jbe
scas
xchg
divl
stos
rorl
out
iret
mov
aaa
in
xchg
mov
sahf
sub
aad
cmp
xlat
stos
test
imul
add
bound
mov
inc
mov
icebp
lock
pop
sbb
hlt
pop
fisubl
xchg
sahf
test
mov
ret
sub
insb
push
in
push
xor
mov
cltd
loopne
mov
adc
std
addr16
jge
pop
xchg
jb
mov
pop
lret
repz
daa
sbb
mov
pop
xor
cmpsl
sbb
nopl
and
sbb
les
pusha
or
insb
dec
ret
dec
stos
ret
loop
stos
or
in
stc
add
inc
daa
xchg
cmp
cli
into
fdivrs
jae
xor
sbb
or
sub
fidivs
lock
xchg
inc
jns
int
loope
js
fistl
sbb
fwait
sbb
test
jle
inc
mov
cmpsl
push
stos
xchg
dec
sbb
cmp
and
imul
scas
lahf
cmp
xlat
ficomps
repnz
sbb
imul
mov
pop
xchg
ret
ljmp
testl
add
scas
mov
sahf
test
mov
xchg
sbb
cmpb
add
pusha
xchg
fdivr
rcrb
push
cmp
push
xchg
test
das
pop
scas
insb
mov
test
scas
mov
sahf
pop
mov
jb
sbb
jp
pop
movsb
popa
mov
mov
lea
mov
pushf
cld
int3
loope
and
xor
sub
sub
js
pop
xchg
sahf
test
mov
icebp
sbb
pop
pop
dec
movsl
and
xor
shll
in
sti
add
inc
sbb
test
dec
lret
out
lea
and
jmp
js
push
daa
cmpsl
pop
lods
and
sub
adc
and
cmp
pusha
pop
inc
ja
sub
int
insb
call
sbb
jno
pop
jo
pusha
nop
cmp
pushf
jp
jg
cmpsl
loop,pn
mov
sbb
add
int
xchg
sahf
test
mov
lahf
movsb
adc
mov
sub
iret
enter
lock
lret
ds
out
and
adc
push
cli
out
mov
sub
sbb
jb
sbb
mov
jb
jns
jmp
sbb
popa
pop
adc
and
insb
jbe
dec
test
std
mov
rcr
sbb
and
adc
jne
mov
stos
mov
scas
add
mov
sahf
inc
popa
test
imul
cwtl
loop
push
xchg
mov
mov
mov
and
inc
fwait
sub
xor
mov
cwtl
sarb
in
xchg
lahf
or
and
aaa
lea
jae
arpl
lds
or
in
sub
in
and
push
popa
imul
jno
lahf
fidivl
sbb
sub
adc
and
out
xor
popf
mov
mov
loopne
push
incl
cmp
sahf
addr16
lret
push
mov
pop
ss
jmp
outsl
sbb
scas
jecxz
out
fwait
into
fucomip
repz
and
or
cmp
jg
xchg
jp
mov
movsl
iret
leave
leave
insl
lods
rorb
add
loop
je
inc
jmp
jb
dec
fildl
loop
sarl
or
cmc
and
and
sbb
jne
pop
xchg
mov
sarb
out
rolb
and
std
jmp
jae
bound
movb
xchg
iret
icebp
xor
sbb
sub
inc
imul
out
sbb
test
sub
or
xor
outsb
loope
jecxz
xchg
adc
clc
ss
sbb
sahf
sub
adc
push
movsl
mov
testb
cmp
adc
mov
cmp
dec
cmpb
stc
cmpsb
out
sar
mov
sti
inc
pop
or
es
lret
jbe
push
mov
incb
stc
daa
jge
and
loope
xchg
fistps
icebp
and
xorl
jns
loopne
jo
shll
ds
ljmp
add
dec
push
jno
xchg
sahf
lock
popf
roll
mov
or
sub
cmp
loope
xchg
jge
jno
lcall
or
lock
xchg
lret
je
sbb
lods
loopne
fmull
cld
out
test
pop
adc
jb
mov
dec
inc
mov
stc
and
pop
inc
mov
jge
popa
fwait
pop
mov
lret
jne
ljmp
iret
or
sbb
test
pop
dec
andl
outsb
sub
cmp
push
cmp
xor
ret
int
cmpsb
aam
divb
xor
push
mov
sub
mov
rcr
push
sbb
ds
and
pop
dec
cli
xor
push
sub
jb
fistl
cmpsl
stc
insb
test
push
xor
xchg
dec
jp
push
cmc
cwtl
lds
cmc
cs
dec
add
xchg
ficomps
or
mov
sub
out
clc
loop
in
sbb
add
xor
dec
jp
scas
inc
ret
icebp
test
bswap
repnz
es
push
push
cmp
test
popa
into
mov
test
sub
or
test
mov
popf
cmpsl
mov
out
into
sbb
jns
out
dec
xor
addr16
lods
fdivrs
vpmaxub
repnz
cli
push
sbb
jb
push
nop
pop
in
xchg
pushf
cmpsb
call
or
jmp
icebp
clc
adc
xor
inc
jmp
jns
sahf
enter
loope
adc
ljmp
xor
lock
ja
call
cli
add
cmp
insl
sbb
inc
jo
addr16
mov
mov
cltd
std
mov
cmp
sub
rorb
xor
or
mov
lcall
or
cmc
test
aaa
fs
sbb
and
mov
xchg
cli
xchg
out
clc
sub
adc
aaa
in
add
inc
insl
mov
test
imul
sbb
add
repnz
dec
dec
jo
pop
mov
das
sub
test
or
cmc
test
sbb
add
cmp
sbb
mov
jecxz
push
popa
aaa
repnz
cmp
fwait
push
jle
jb
sbb
lret
stos
adc
notl
push
adc
inc
in
lret
out
mov
clc
cmp
push
push
mov
cmp
int
pop
imul
cltd
fistl
pop
add
pop
sbb
inc
outsb
sub
push
popf
shr
ja
or
add
pop
es
push
push
dec
and
push
jg
jae
xchg
iret
enter
xor
mov
dec
push
inc
lahf
in
popf
push
xchg
mov
out
stos
loop
mov
cs
ss
pop
bound
mov
mov
mov
fldz
clc
add
inc
add
pop
jo
xchg
popf
leave
xorb
rolb
lock
push
mov
mov
ret
loop
rolb
xor
or
pusha
mov
call
lahf
sbb
pusha
pop
sbb
adc
mov
xchg
fcomps
xlat
out
call
sbb
or
pusha
cltd
and
add
ljmp
jns
adc
popa
stos
in
cmp
div
scas
pop
push
iret
outsl
int3
dec
inc
ljmp
and
movsl
mov
jae
xchg
mov
imul
adc
lock
mov
notb
mov
cmpb
rorb
repz
mov
sti
xor
outsb
jmp
mov
fcoml
or
aaa
mov
bound
or
fcmovb
out
clc
mov
mov
outsl
imul
out
cmpsl
roll
js
dec
imulb
cmpsl
mov
xchg
mov
mov
and
scas
add
js,pn
outsb
sbb
jle
inc
mov
xchg
enter
and
and
out
xchg
xchg
xchg
movsl
leave
mov
adc
mov
sub
cmp
out
or
xchg
aam
shl
pushf
aad
cmp
push
xchg
xchg
inc
mulb
push
into
into
xchg
scas
sub
loope
and
jge
xor
push
mov
pop
inc
sahf
add
ret
lock
hlt
add
aad
xchg
test
inc
cli
xor
lds
out
xlat
cmp
jb
fistl
lret
and
jmp
pop
mov
ja
ds
and
in
rcll
xchg
rolb
inc
in
sbb
xchg
daa
popf
inc
jnp
xchg
sahf
test
xchg
mov
out
inc
inc
adc
ljmp
cmovne
mov
les
sub
pop
sbb
jp
arpl
adc
ficoml
and
rcrb
add
insb
inc
js
push
ret
push
adc
lds
inc
ds
mov
sbb
mov
jl
insb
mov
xchg
fiaddl
push
clc
das
jle
in
inc
insl
ljmp
mov
adc
in
xchg
xchg
inc
xchg
std
jae
xchg
test
dec
add
xor
bound
ja
pop
mov
sbb
lea
cmpsb
or
jo,pt
pop
lret
cmp
out
or
fistps
std
and
cmp
bound
inc
jne
lret
cmpsl
push
mov
cmp
ljmp
xor
adc
jbe
iret
loopne
sub
rolb
mov
sbb
sub
dec
jns
gs
push
lea
out
fldl
mov
pavgw
jle
push
jp
sbb
div
lods
fcoms
xchg
iret
clc
xor
push
push
mov
or
xchg
fstpt
sar
in
adc
inc
cld
sub
inc
jge
bound
scas
mov
mov
sub
cmp
dec
xchg
movsb
pop
jge
scas
push
iret
ljmp
fisttpl
push
or
xor
pop
stos
fcomps
je
jecxz
xchg
xorl
or
sub
pop
mov
jo
imul
mov
and
in
push
sbb
sub
adc
and
inc
insl
leave
mov
mov
jg
jmp
adc
and
mov
fs
in
xchg
pop
mov
fchs
mov
imull
mov
adc
pop
push
push
fs
cmpl
jbe
fsubrl
inc
pushl
inc
imul
xchg
lds
jmp
rorb
push
testl
sbb
mul
fldl
call
out
sbb
sbb
push
pusha
mov
stos
gs
lds
out
add
pop
cmp
pushf
dec
imul
loopne
std
shl
fcoml
clc
xor
sub
je
test
mov
lret
sbb
pop
xor
jle
pusha
in
mov
mov
incl
sbb
adc
push
mov
sahf
pop
mov
rolb
in
push
ljmp
stos
sti
fmuls
cltd
ret
std
sahf
ljmp
adc
xor
pop
call
ficoml
pop
adc
repnz
push
sub
mov
xchg
call
lock
cmp
push
lds
jne
mov
mov
and
xadd
jp
outsb
pushf
pop
jp
xor
mov
adc
pop
xor
adc
inc
out
jmp
mov
subl
scas
into
bswap
add
sub
dec
xchg
movsl
lahf
cwtl
inc
ds
sahf
ret
add
inc
sti
sbb
cmp
xor
lcall
mov
lods
call
jmp
dec
inc
inc
cltd
and
xchg
mov
out
push
xchg
inc
cmp
adc
movsb
xor
sbb
mov
adc
scas
mov
dec
push
jp,pt
stos
jp
addr16
lret
jbe
mov
add
push
adc
mov
cmpsl
mov
mov
add
call
aaa
xchg
dec
sub
xor
push
mov
push
mov
sbb
sbb
push
or
dec
add
in
rorl
fcomi
add
cmc
push
and
inc
jo
addr16
cmpsb
pop
addb
loop
mov
push
adc
add
mov
cmp
xchg
cmpsl
mov
pop
inc
sti
mov
sbb
std
mov
mov
dec
push
jg
insl
jge
xchg
mov
jne
or
call
cmp
fcompl
inc
pusha
mov
pushf
loopne
mov
aad
mov
imul
mov
imul
mov
sahf
rolb
in
pop
les
xor
fs
add
mov
sarl
lock
mov
jmp
cmp
sahf
cmp
out
mov
mov
adc
sti
scas
fwait
inc
cld
xor
mov
push
mov
scas
mov
enter
push
xchg
mov
dec
iret
lret
andb
outsl
sahf
sbb
sar
xchg
repnz
mov
sub
jne
jnp
out
cmpsl
loop
xor
cltd
rorb
xor
mov
test
cmpl
loop
outsl
and
test
lret
xor
mov
sti
movsl
ficoms
mulps
lret
push
cmp
inc
das
imul
sysret
ret
pop
pop
mov
ss
daa
iret
or
sub
orb
es
in
out
add
and
sub
cmp
jp
fcoms
xchg
int3
stc
cmpsb
out
pop
cld
adc
lcall
xor
sbbb
dec
adc
dec
or
adc
pop
push
pop
movsb
rorb
filds
les
xor
sbb
test
jne
jns
lds
lods
jecxz
lret
add
xchg
pop
imul
and
les
scas
ljmp
push
or
or
jge
fs
cmpsl
mov
loope
rolb
call
sbb
cmp
hlt
dec
cmp
loopne
in
movsl
aam
loop
xchg
sbb
xor
xor
jle
imul
fucom
pop
mov
sbb
jg
pop
int
mov
mov
fistps
int3
lock
adc
repnz
inc
insb
scas
imul
cmpsb
imul
dec
xchg
rorl
inc
imul
mov
jmp
and
jmp
mov
subb
shr
mov
mov
mov
dec
cli
xor
insl
scas
pop
daa
int
aad
xchg
or
cs
and
push
dec
xchg
fucom
icebp
ficoml
cmp
or
imul
jae
push
mov
ret
in
roll
lods
mov
das
xor
or
subb
leave
iret
flds
pop
inc
cli
sub
adc
mov
cltd
fnsave
or
push
mov
dec
clc
cmp
push
je
mov
test
sub
daa
imul
sahf
loopne
fildl
mov
inc
stc
sbb
xor
push
jbe
jno
push
mov
hlt
lods
int3
adc
jmp
xor
pop
lahf
pop
jbe
xchg
mov
add
call
xchg
insb
inc
pop
mov
sub
push
aaa
and
adc
cli
xor
aaa
outsb
sbb
lods
jmp
inc
jnp
call
xchg
jg
jae
sbb
jp
push
loope
and
xor
xor
dec
outsb
dec
cmpsl
jne
es
les
loop
aam
mov
cmp
dec
clc
xor
push
jbe
pop
out
nop
shl
faddp
out
mov
ljmp
das
insl
mov
mov
sub
add
or
cmp
push
jae
jno
push
mov
mov
cli
sbb
sbb
int
cli
xchg
imul
fiaddl
pop
stc
sbb
pop
xor
sub
push
pushf
cmpsb
mov
in
mov
push
dec
aad
xchg
mov
lcall
rorl
or
pop
pop
rcrb
inc
dec
pop
test
jp
fisttpll
stos
mov
test
lahf
into
adc
inc
jb
repz
data16
ja
mull
cmpsl
pop
fdivs
in
pop
shl
ficoms
cmpl
cmp
mov
scas
ficoml
cmp
adc
pop
bound
or
jmp
add
aaa
outsl
sub
sbb
outsl
es
mov
xchg
popf
cmpsl
xchg
out
mov
mulb
loopne
inc
or
cs
push
pop
scas
pop
pushf
pop
lea
scas
repnz
flds
mull
fwait
push
push
ss
sub
lahf
xchg
iret
icebp
lods
lret
test
sub
mov
sbb
pop
popf
sub
mov
fcoml
or
out
and
pop
push
jle
movsb
pop
xchg
jp
loopne
mov
clc
icebp
pushf
xchg
out
pop
rorl
dec
xchg
inc
mov
lahf
cmpsl
rorl
and
or
daa
inc
subl
pop
mov
ja
imul
xchg
not
jle
pop
int3
in
mov
int
rep
loope
int3
adc
cmp
push
mov
addr16
add
out
lahf
push
sbb
cs
adc
pushf
push
jg
jb
fmuls
adc
sbb
inc
fwait
out
stos
adc
dec
mov
sbb
add
or
data16
inc
jb
mov
loop
enter
ficomps
adc
dec
push
pusha
dec
xchg
push
add
leave
test
bswap
add
sub
push
cmpsl
arpl
lods
loop
cmp
cs
ficoml
inc
cmc
and
pop
xor
mov
push
jl
jae
imull
cwtl
sar
mov
aaa
aad
jnp
cs
push
ja
dec
mov
outsl
jae
cmpsb
push
sbb
rcll
daa
xor
push
js
insb
xchg
nop
enter
mov
push
mov
and
adc
sub
inc
sub
jp
jnp
pop
jle
orl
sbb
das
call
cmp
imul
dec
jg
pushf
lret
lock
push
mov
inc
js
sub
push
mov
mov
sbbb
adc
shll
xlat
popa
imul
lock
mov
cli
sub
fisttps
sub
aam
imul
jbe
out
shl
push
out
sbb
sub
dec
imul
xchg
leave
xorl
mov
enter
xchg
mov
data16
xchg
fwait
ret
andb
cmp
or
cld
pop
popa
mov
arpl
push
sbb
ficoms
adc
dec
or
insl
sbb
jle
and
int
add
mov
xor
and
loop
lock
test
in
xchg
xor
and
sti
and
pop
mov
test
rcrl
add
std
mov
stc
mov
push
adc
arpl
push
mov
int
aam
inc
lcall
push
lcall
rolb
add
or
and
insl
cmp
jo
pop
xchg
iret
fldcw
fistps
or
lock
pop
data16
push
sbb
movsb
sbb
int
push
jmp
adc
sub
jbe
add
push
xor
sbb
aaa
and
cwtl
pop
xchg
dec
test
loop
aad
cld
repz
add
adc
jbe
sbb
dec
leave
hlt
scas
lret
adc
push
mov
and
es
or
pusha
adcl
cmpl
test
push
ss
push
jge
jnp
push
mov
or
stc
sub
push
dec
inc
aas
out
pop
test
mov
mov
cltd
lret
std
mov
cmp
es
push
dec
jne
bound
push
xchg
shr
loope
lret
add
lea
xor
fs
push
adc
lods
add
out
or
in
inc
in
xchg
ss
mov
jl
sub
push
jecxz
mul
sub
pop
sbb
sub
inc
mov
ror
mov
jp
cmc
sub
jne
mov
std
mov
cmpsb
rcll
and
add
mov
insl
xchg
dec
jnp
insb
mov
inc
ror
add
mov
fdivr
sbb
mov
add
or
cld
daa
ficomps
gs
arpl
dec
push
inc
popf
sbb
add
xor
in
pop
outsb
stos
repnz
pop
lahf
mov
xlat
lock
add
jmp
faddl
xor
dec
jbe
imul
mov
sub
cmp
jg
dec
lahf
pop
cmp
mov
or
cmc
jne
es
mov
iret
lret
xorb
lahf
sar
in
clc
add
push
add
xor
cmpsb
cmp
mov
lds
push
or
shll
popf
cltd
push
jp
outsb
mov
or
shrb
nop
loope
pop
adc
xor
sub
arpl
popf
cmpsl
mov
mov
push
push
getsec
xor
xchg
adc
or
fwait
ret
mov
add
mov
jg
bound
scas
push
popl
push
mov
insb
sbb
sub
or
ja
push
into
into
xchg
int3
in
mov
leave
jae
mov
js
bound
or
test
mov
bswap
push
sbb
mov
mov
xchg
inc
push
jp
popa
out
fwait
in
lret
jnp
ss
or
dec
jg
int
cwtl
nop
dec
ja
insb
mov
mov
mov
adc
push
xchg
mov
and
cmp
jmp
es
out
clc
add
sar
pop
or
test
add
mov
movzbl
imul
jae
inc
lods
data16
nop
mov
mov
fimuls
mov
gs
shrl
dec
rcrb
adc
xchg
jbe
dec
cmp
in
aad
xor
sahf
test
sbb
adc
in
jl
sub
sbb
adc
dec
shrb
lds
and
push
jmp
fsub
adc
cld
jb
inc
sub
adc
ja
mov
add
addr16
inc
sti
add
test
xor
pop
jb
divl
or
lret
and
add
push
lcall
aad
jmp
lcall
mov
outsb
jg
xchg
popf
fisubrs
cwtl
enter
xchg
aam
xor
int
bound
adcl
mov
rclb
mov
js
dec
push
and
xor
cmpsb
mov
mov
inc
push
sbb
in
testl
adc
das
sbb
imul
jmp
outsl
cmpsl
push
sbb
xor
cmpl
enter
mov
jge
ja
icebp
cmp
lret
push
and
pop
xchg
outsl
pop
rcr
jns
jp
scas
and
mov
sbb
ljmp
adc
jmp
jns
insb
ss
or
sub
insl
cmc
dec
in
mov
push
test
xchg
in
dec
push
pop
pop
les
dec
pop
xorb
mov
cwtl
cmp
aam
inc
dec
mov
dec
out
dec
repnz
cs
add
mov
sub
xor
movsl
lcall
mov
gs
jbe
mov
insl
aaa
inc
cs
mov
xchg
jle
pop
stc
ret
int
inc
xchg
xor
or
jg
outsb
cmp
xchg
loopne
lods
push
fidivrl
pop
lock
push
pop
mov
sbb
lea
sub
out
mov
in
mov
in
ja
xor
es
shll
ret
mov
xchg
daa
jbe
fsub
pusha
cmp
repz
mov
push
pop
dec
loop
lret
xchg
sahf
mov
je
out
stc
adc
xlat
fimuls
xchg
fmuls
fdivs
iret
cltd
mov
aaa
jns
repz
push
jge
insb
ss
sub
adc
adc
adc
int3
lds
loopne
mov
adc
inc
scas
int3
push
sub
ljmp
das
cmp
mov
push
lods
std
dec
cld
shrb
or
mov
mov
movsb
jp
sub
loope
mov
xchg
ret
pop
and
pop
imul
xchg
sbb
loope
push
mov
adc
cmc
jne
add
push
pusha
call
cmpl
mov
ret
mov
fimuls
inc
in
jle
cmp
fwait
movsl
jge
outsb
lret
xlat
loope
insb
sub
fimuls
ret
out
mov
movsb
insl
ja
and
push
jle
push
mov
mov
fcomps
lahf
imulb
int3
out
mov
push
std
rcrl
outsb
lret
xor
addr16
loop
fldenv
cmp
xor
pop
hlt
jge
insb
ss
pop
lods
adc
ss
and
jge
bound
or
das
lret
mov
pop
adc
add
push
add
aad
ds
fwait
ljmp
dec
push
sub
dec
cld
shrb
pop
popf
add
mov
scas
add
pop
stos
mov
sub
out
fisubl
pop
and
icebp
and
inc
andps
push
jmp
loop
int3
sub
dec
sub
or
out
mov
rorl
ja
loopne
pusha
fst
adc
mov
test
shrb
and
cmc
lea
daa
xor
mov
fisubl
pop
in
mov
adc
ja
bound
and
jb
stos
aam
push
dec
std
shr
movsl
scas
mov
sub
stos
and
enter
mov
pop
hlt
lods
call
push
pop
cmp
movsb
sbb
inc
xchg
fwait
push
xchg
inc
or
orl
pop
mov
sub
fucomip
pop
lods
inc
adc
push
lahf
rolb
pusha
jmp
jmp
nop
fwait
test
jnp
cmc
inc
repz
jle
push
dec
mov
int3
cs
mov
imul
sub
mov
mov
mov
mov
mov
cmpsb
add
or
addr16
xor
dec
xorb
iret
mov
cmc
xchg
pop
imul
scas
mov
jmp
loop
aad
in
inc
dec
out
push
or
mov
xlat
jne
nop
xor
add
pop
rcrl
inc
dec
mov
imul
movsl
push
cltd
lock
lods
inc
or
stos
dec
push
pop
int
cmp
jl
popa
test
push
popa
mov
out
dec
push
inc
icebp
and
jmp
fisubl
loopne
pop
shlb
divb
test
aas
in
mov
fisubrl
fwait
mov
enter
fdivrl
inc
dec
inc
sub
lret
es
or
jl
nop
fwait
ss
lahf
inc
or
rep
fbstp
ret
cld
das
popa
sbb
adc
dec
fnsave
icebp
sti
in
arpl
lahf
imul
adc
int
les
cmp
adc
push
pusha
push
jge
jns
pop
lock
push
pop
mov
sbb
cmpsl
bnd
push
pop
sbb
push
orb
dec
cmpsb
jns
lea
jge
repnz
mov
or
jle
int
loope
je
mov
xchg
daa
sub
pop
fdivrp
and
es
repnz
xor
fwait
push
cmp
fcoms
sbb
adc
les
inc
or
arpl
lods
inc
and
and
inc
std
xor
push
jg
repz
je
in
loopne
pop
into
or
test
and
outsb
js
push
xchg
mov
cmpsl
mov
in
in
lret
frstor
ds
xor
inc
push
push
push
mov
mov
fucomip
adc
add
pop
inc
add
bound
jae
or
loopne
mov
sbb
push
cmpsb
inc
divl
pusha
pop
push
sub
je
orb
leave
jbe
jmp
clc
sub
outsl
es
mov
add
cltd
leave
xchg
jecxz
icebp
sub
data16
test
movb
int
mov
and
pop
adc
and
pop
xor
add
push
jle
imul
out
fwait
cmc
fsubrs
cld
xor
pop
sahf
jb
fwait
pop
nop
mov
mov
mov
adc
or
sbbb
cmp
add
rorl
mov
out
in
and
and
xchg
ret
int
scas
push
pop
rorb
xor
cmp
cli
jne
addr16
dec
xchg
mov
push
fsub
mov
xor
sub
inc
dec
xor
push
lcall
rcr
jmp
cmp
cmp
dec
push
imul
xchg
mov
clc
mov
xchg
xchg
or
in
sub
mov
sbb
scas
jbe
mov
out
lcall
mov
xchg
outsb
js
mov
scas
add
pop
push
adc
push
test
mov
push
into
mov
ljmp
adc
nop
jae
jns
inc
push
inc
pop
addl
icebp
sub
sbb
xchg
jae
xchg
ljmp
inc
pop
sbb
sub
daa
fs
push
retw
dec
mov
fsub
in
pop
cmc
adc
dec
pop
dec
aas
mov
xchg
mov
in
in
testb
adc
sub
cmp
push
pop
inc
sahf
add
mov
push
fisttps
mov
and
dec
pop
jns
mov
dec
bound
mov
add
push
mov
nop
je
jb
inc
adc
push
lret
mov
cs
fnstenv
andb
popf
les
fisubrl
pop
adc
adc
popf
inc
fnstenv
ja
xchg
mov
jge
xor
cmc
cmp
arpl
es
je
fwait
insl
les
jo
xchg
add
fs
sub
out
ss
je
pop
jge
mov
sti
mov
sbb
iret
mov
adc
adc
jne
sub
dec
insl
scas
insb
test
test
or
mov
ds
hlt
xchg
scas
and
lea
jl
push
mov
jae
add
adc
subl
popf
push
lods
jp
pushf
flds
xchg
sub
mov
sbb
pop
subb
lret
dec
xchg
mov
test
bound
mov
pop
sbb
int
scas
fcmovb
jle
aad
fbld
adc
hlt
cmp
inc
insl
inc
mov
xchg
mov
or
jle
adc
xor
inc
mov
mov
rcr
or
testb
pushl
gs
pop
or
mov
hlt
adc
mov
pop
pop
adc
dec
icebp
adc
jp
cs
in
xchg
inc
lret
xchg
cld
adc
cmp
xor
int
pop
in
inc
dec
stos
gs
push
outsb
jg
movsb
fildl
pop
ds
orl
sub
and
pop
enter
jno
mov
push
sahf
or
es
push
jb
xor
sti
inc
mov
jle
test
ljmp
loope
aas
shrb
cld
dec
sbbl
pop
sarb
adc
aam
in
xor
mov
push
jbe
sti
mov
flds
xchg
roll
sbb
sub
dec
jp
scas
in
xlat
rorl
pop
les
inc
mov
in
xor
dec
inc
mov
movsl
shll
or
cmc
movsb
call
lods
pop
push
pop
andb
inc
jno
into
xchg
jbe
lahf
or
and
jg
inc
gs
sti
inc
mov
jg
test
test
sub
popf
cmc
ret
and
test
sbb
mov
jle
test
cld
sub
sbb
cld
lret
sbb
xchg
push
jns
outsl
cmpsb
adc
xlat
sti
mov
sbb
iret
mov
push
push
adc
movaps
dec
xchg
cmc
gs
mov
mov
pop
repnz
xor
push
mov
hlt
scas
in
cmpsb
test
cs
push
sbbl
stc
mov
pop
les
jb
or
pop
or
adc
fs
mov
push
sbb
lock
fwait
movsl
scas
mov
fstpt
adc
popa
push
mov
dec
in
pop
shl
jbe
sbb
adc
jb
bound
arpl
out
fwait
add
out
dec
xlat
cmp
lea
push
pop
leave
xchg
ret
cmp
dec
add
mov
dec
jmp
fnstcw
adc
push
mov
mov
bound
pop
test
sarl
lahf
pushf
add
xchg
inc
cli
and
adc
subb
in
test
or
cmpsl
in
dec
ds
pop
xchg
sahf
xor
ljmp
add
mulb
add
mov
cmp
push
nop
push
mov
pop
push
mov
in
cltd
xor
sbb
lret
jle
adc
stos
loop
out
xchg
push
and
and
cmpsb
in
dec
jge
mov
cltd
into
dec
mov
sbb
or
xchg
out
xlat
adc
or
cmpsl
pusha
xchg
out
jle
arpl
shr
sbb
dec
pop
arpl
subl
adc
add
clc
ret
test
xor
movsl
outsb
js
mov
scas
add
push
jg
push
inc
push
pop
dec
stos
push
jns
loope
xchg
fwait
rcr
call
sbb
pop
popa
inc
push
jnp
jnp
leave
cltd
mov
push
jge
je
iret
dec
cmp
mov
andb
ret
hlt
adc
push
adc
dec
jmp
xlat
mov
jg
jno
lahf
fidivl
inc
add
add
cmp
adc
sahf
into
scas
scas
popf
adc
stc
mov
stc
ds
fstl
dec
jp
push
mov
xchg
outsb
das
cmp
shr
sbb
sub
pop
imul
ffreep
cmc
call
xchg
and
das
scas
stos
xchg
mov
popf
jb
aas
ficoml
xchg
rorb
xor
xor
inc
push
mov
pop
lcall
iret
and
sbb
adc
sub
stos
loopne
stos
push
cmpsl
push
ret
inc
jae
repnz
and
out
pop
xor
pushf
push
nop
cli
movsb
mov
rolb
and
push
or
and
subb
cltd
into
sti
mov
pop
or
out
add
sub
pop
xchg
lret
add
jl
loopne
xchg
jg
hlt
pushf
jp
dec
dec
add
dec
push
popa
imul
jno
lahf
mov
mov
movsl
shlb
dec
sti
inc
mov
fildll
lods
movsl
std
imul
adc
sub
and
fnsave
push
mov
sbb
les
and
pop
push
sbb
ds
xor
push
or
loop
aaa
loope
stos
clc
push
int3
add
les
xchg
jg
jae
jns
cmp
jbe
lods
loop
lret
out
inc
scas
cli
jmp
jl
std
lcall
mov
push
ja
mov
daa
imul
pop
stos
rol
mov
bswap
add
pandn
add
data16
xchg
cmp
mov
ljmp
sahf
mov
sbb
pop
xchg
inc
xchg
mov
pop
sub
decb
adc
xor
inc
xor
cltd
dec
scas
mov
call
lock
je
int
insl
test
mov
sbb
sbb
add
jb
and
fistl
ret
repz
addr16
xor
js
popa
xchg
push
xchg
and
adc
or
add
xor
push
subb
push
sub
push
sub
cmp
jg
xchg
jp
xor
dec
mov
jb
aam
lcall
pusha
pop
dec
sub
jo
jle
jb
test
mov
imulb
adc
shr
or
push
popf
pop
xchg
or
rorl
bound
pushf
unpckhps
movsb
jle
and
test
loop
shl
or
add
xor
sub
pop
adc
dec
jae
jle
mov
lods
rorl
and
hlt
decb
adc
xor
inc
xor
fists
loope
or
add
cmp
in
jg
mov
out
arpl
aad
es
cmpsb
aam
fstpl
mov
dec
dec
push
pop
mov
bound
pushf
int3
add
loop
mov
arpl
lahf
lret
enter
mov
push
rcll
je
notb
or
addr16
sub
and
roll
jmp
pcmpeqw
push
adc
xor
out
pop
xchg
out
hlt
sub
or
mov
add
dec
push
cmp
fistl
jbe
adc
fwait
divb
mov
and
dec
outsl
out
stos
loopne
test
and
iret
flds
push
aas
and
fistps
dec
jl
push
and
mov
outsl
cmpsl
fmull
sti
jnp
aad
pushl
bound
add
jae
daa
nop
cmpsb
test
cltd
int
nop
idiv
add
or
aam
push
xchg
dec
xchg
ret
jl
gs
fsubrp
repnz
mov
es
or
adc
test
sahf
sub
fidivrl
add
adc
ljmp
gs
dec
mov
rorl
jmp
incl
mov
dec
jp
sub
jno
push
mov
xchg
mov
subl
adc
jae
xchg
cmc
lock
lret
call
and
xor
popf
push
xchg
mov
shrl
mov
or
bound
outsl
pushf
push
mov
jb
inc
loop
shll
lcall
push
or
negb
mov
fiadds
sbb
psubsw
rolb
pop
data16
jne
mov
mov
out
stc
add
inc
sbb
push
js
outsb
xchg
nop
lea
ret
adc
repnz
jns
jecxz
cli
cmp
jne
and
mov
add
out
push
cmovne
scas
mov
xor
fdivl
jmp
push
push
subl
mov
test
rcr
dec
idivb
data16
xor
pop
mov
mov
cmpsb
add
lods
ss
push
push
jp
jnp
add
xlat
mov
sub
and
inc
andl
cmp
lahf
xor
popf
jmp
cltd
jle
sbb
or
sbb
cmp
push
pop
mov
mov
icebp
sbb
int3
mov
push
ja
insb
jne
pop
rorb
jl
pop
cmp
cwtl
add
push
pop
adc
in
inc
jle
push
cltd
fbld
loopne
jecxz
dec
jo
pop
push
js
outsl
mov
sub
leave
andl
cli
cltd
sub
mov
push
pop
mov
movsl
fs
jns
mov
sahf
jb
test
dec
push
cmp
jl
xor
jno
lahf
fidivl
mulb
sub
sbb
or
les
popf
rclb
sbb
and
jl
mov
xchg
rorb
mov
stc
xor
mov
and
cltd
loopne
filds
adc
push
adc
jne
push
dec
cmpl
shr
fmull
inc
mov
pop
inc
push
xor
and
xchg
mov
add
int
sbb
sbbl
cmpsb
inc
mov
lret
or
arpl
imul
gs
xchg
ret
sti
cmpsl
test
movsl
pop
bound
sarb
hlt
jle
push
mov
mov
add
decl
inc
arpl
mov
lret
jmp
xor
dec
int
add
dec
add
fwait
lods
or
and
nop
lcall
inc
mov
mov
mov
dec
add
lods
mov
jge
lret
cmpl
es
xor
ds
call
mov
fwait
mov
ret
call
call
pushf
xchg
mov
sbbl
mov
mov
rorb
cmpsb
sbb
cmp
imul
cmpsl
xchg
adc
push
pushl
dec
push
popa
movsl
aaa
mov
jno
lcall
adc
lock
dec
pushf
pop
push
pop
aam
mov
dec
ror
add
cmc
jle
cmp
dec
xorb
loope
stc
fbld
rolb
mov
rorb
sbb
pop
aaa
add
pop
mov
ljmp
sbb
inc
dec
push
xchg
push
jle
xchg
lret
je
into
fcomps
in
jo
or
inc
dec
pop
bound
mov
cmpsb
or
pop
addr16
sub
mov
pop
inc
sahf
orl
sub
icebp
sti
out
and
mov
dec
ret
jl
fisubrl
scas
ret
lret
aad
std
or
das
pop
xor
repz
insb
mov
mov
mov
pushf
or
xchg
dec
jbe
sub
subb
loope
ret
movsl
sbb
jnp
cmp
or
xorb
mov
jno,pt
rol
sub
pop
test
jae
push
lods
data16
xchg
leave
bound
fsubrp
repnz
dec
or
js
inc
dec
jbe
jae
fmulp
mov
lods
xlat
lods
int
jnp
adc
aad
dec
jne
push
dec
lret
xchg
fs
mov
push
and
adc
jb
addr16
push
mov
imul
testb
out
or
sahf
repz
mov
popf
scas
xchg
inc
ljmp
movb
pop
jb
inc
sbbb
lods
sti
or
pop
in
and
fsubs
xchg
pop
pop
xchg
iret
push
lods
int
adc
fldcw
push
cld
inc
inc
dec
push
popa
mov
cmp
rol
add
loopne
mov
inc
cmp
push
xlat
loope
cmc
cli
adc
lcall
pop
pusha
or
dec
push
popa
imul
in
fnstenv
fildll
xor
lock
cwtl
mov
cmpsl
sbb
into
push
push
and
jmp
notl
mov
js
mov
mov
dec
shll
bswap
ljmp
sbb
inc
jnp
rcrl
pop
ret
imul
pop
pusha
push
loope
or
pusha
nop
dec
test
cli
pushf
cmpsl
mov
gs
jmp
or
xor
daa
cltd
es
les
scas
mov
or
out
adc
xorb
push
sahf
addr16
scas
repz
cmpsl
sub
inc
push
adc
pusha
inc
dec
push
or
pop
mov
test
fwait
loopne
jmp
or
daa
pop
xor
pop
enter
movsb
pop
lcall
add
sub
xchg
orb
sti
movsl
shl
out
clc
add
and
jle
ja
arpl
lret
popa
push
mov
loop
and
or
fdivl
pop
test
mov
int
cld
cmpsl
add
and
jbe
jno
dec
add
popf
xor
add
call
enter
inc
jne
rcrl
pop
ret
imul
sbb
data16
push
out
push
jle
arpl
mov
daa
xor
sub
inc
push
cmpl
jb
add
xchg
call
adc
pop
pop
jge
and
mov
mov
push
pop
nop
mov
out
cli
add
mov
jp
inc
dec
push
pop
imul
ffreep
cmc
out
lret
call
jmp
insb
mov
cmpsl
pusha
cmpsl
cmpsl
jnp
pushf
in
pop
adc
cs
in
jne
xchg
inc
subl
add
add
mov
sbb
mov
shll
scas
add
adc
dec
push
cmp
nop
sbb
cmpsb
insl
std
adc
call
lret
arpl
aaa
push
mov
xchg
inc
adcb
mov
sbb
push
mov
repnz
rcrl
pop
ret
hlt
cmp
hlt
cld
adc
dec
inc
jl
jno
movsb
pop
cwtl
xor
xlat
repnz
movsl
adc
pop
push
popa
mov
jl
jae
cmp
mov
sub
sahf
sbb
jno
or
repnz
js
mov
mov
lock
add
cmp
pop
ss
lret
lahf
push
into
adc
flds
imul
fs
movb
popa
mov
adc
test
or
dec
mov
jmp
pop
or
mov
testb
adc
mov
or
xchg
into
fadd
pop
roll
sbb
cli
shll
sub
in
imul
xlat
loope
outsl
loope
sbb
xor
nop
bound
mov
xchg
arpl
xlat
jo
dec
push
inc
sbb
or
mov
push
cmp
sbb
int
rcll
dec
cmc
sbb
inc
dec
push
mov
lcall
mov
push
pop
xor
sbb
jb
mov
fwait
add
mov
or
pop
in
jnp
jo
push
push
push
xchg
and
or
add
cli
jne
push
push
ss
add
fidivl
jecxz
divl
rcr
std
and
test
pop
decl
lea
leave
sti
add
adc
or
or
xchg
fwait
movsl
mov
fwait
int
loope
mov
cmp
sbb
ja
data16
dec
sub
add
stc
aam
sbb
cmc
jne
sub
repz
lret
test
mov
jbe
lret
aam
sbb
mov
pusha
js
xorb
cli
add
jno
xor
inc
dec
cmp
sub
ficomps
sahf
test
pop
inc
xchg
frstpm(287
out
mov
sub
mov
push
sbbb
js
int3
subl
sbb
in
pop
lcall
loopne
fistpl
push
and
sub
mov
xor
pop
fcomps
mov
aaa
xor
jo
das
cmp
mov
fisubrs
fwait
mov
mov
jl
add
push
pop
push
mov
xchg
mov
mov
mov
lods
out
mov
inc
sti
ss
loop
mull
pop
sahf
int
loope
fcoms
das
clc
add
inc
insl
cmc
pop
imul
mov
xor
sub
std
jmp
inc
lods
scas
ret
rcl
add
cmp
sub
push
dec
sub
adc
enter
dec
mov
std
aam
fwait
cmc
sbb
lret
mov
ja
movsl
scas
mov
inc
sub
pop
inc
sahf
clc
jecxz
inc
mov
pushf
cmpsb
mov
mov
lods
rorl
shlb
jmp
addr16
fwait
movsl
push
mov
push
pop
add
loope
or
insb
test
stos
mov
enter
adc
push
mov
or
rol
pop
rorb
or
and
jmp
das
jo
test
push
popa
xchg
imul
jle
loop
fsub
pop
cmp
jge
aas
pop
or
aad
mov
push
fimull
ret
cli
sub
icebp
push
push
or
push
jne
mov
fs
and
mov
jae
ljmp
mov
movsl
andb
jecxz
cmpsl
add
imul
push
decl
popf
mov
scas
sbb
arpl
lahf
or
pop
mov
sahf
mov
cmpsl
sbbl
pop
fdiv
popf
adc
xor
jge
mov
mov
dec
jmp
cmc
sbb
dec
ja
std
gs
fcoms
inc
out
cmpsb
jecxz
cmpsl
subl
dec
repnz
jno
aad
lret
pop
mov
aad
stos
mov
jne
mov
jo
jo
jo
movsl
in
fldenv
mov
int3
cmp
popa
out
imul
ficoml
out
pop
adc
xchg
fwait
movsl
inc
pushf
push
nop
repnz
push
sub
xchg
fimull
inc
insl
cmc
arpl
inc
shrl
in
mov
in
pop
pushf
or
loopne
xchg
fwait
movsl
adc
mov
adc
loope
push
mulb
dec
nop
outsb
sub
subl
insl
jno
or
mov
addr16
dec
test
pusha
mov
shl
mov
or
mov
inc
mov
jnp
mov
dec
pop
pop
or
out
clc
add
push
cmpl
mov
int
mov
add
adc
sub
cmp
push
pop
inc
sahf
add
rcrb
adc
int3
push
fwait
jb
repz
pop
jmp
data16
es
jne
or
daa
mov
stos
cmpsl
pop
mov
lods
hlt
decb
push
fisttpll
fs
sbb
inc
jns
pop
xchg
cld
sbb
mov
out
or
sti
or
pop
adc
xchg
push
xchg
cmp
ja
mov
notl
xor
push
jl
outsl
cmp
pop
mov
in
xchg
out
add
add
inc
pop
addb
std
push
out
mov
sub
jae
icebp
mov
adc
pop
out
dec
divb
push
insl
xlat
and
lret
je
cmc
xor
cmp
jbe
insb
je
int
xchg
inc
lds
test
lahf
and
push
in
xchg
dec
mov
mov
mov
cli
mov
or
test
inc
sahf
cmpl
sar
test
cli
roll
adc
roll
push
jo
fs
cmpb
lahf
rcrl
cmpl
or
pop
mov
inc
xor
pop
cmpsl
rcrl
iret
repz
les
mov
pusha
sbb
xchg
cmp
orb
push
aad
in
fwait
or
out
or
push
popa
imul
fs
popa
mov
mov
lret
sbb
lock
sub
xchg
and
fildl
divb
jmp
and
mov
js
orl
in
cltd
mov
or
fistl
test
mov
fsubrp
repnz
jno
push
aas
cmp
aad
jmp
fsub
or
pop
scas
add
outsb
jae
hlt
stos
pop
imul
lahf
xchg
adc
jns
push
or
test
pusha
cmp
xorb
stos
mov
mov
sub
cmp
jecxz
imul
test
jnp
add
mov
fucomip
push
sbb
xor
push
dec
dec
mov
sbbb
sbb
push
icebp
mulb
dec
add
pop
dec
cmc
mov
mov
dec
mov
jmp
push
inc
add
adc
test
mov
jp
mov
cwtl
int3
loop
icebp
jmp
xor
pushf
cmp
enter
mov
rcr
in
stc
add
inc
sbb
xchg
addr16
test
mov
rclb
mov
sub
push
pop
imul
iret
imul
and
test
push
imul
mov
arpl
mov
or
mov
xor
push
lcall
shll
std
cmpsb
or
daa
or
cmp
pop
cmpb
xchg
fsubr
repz
sub
stc
imul
sub
cltd
push
fcomps
stos
xlat
mov
and
mov
push
jne
outsb
xchg
das
dec
addr16
scas
fchs
ljmp
push
sub
dec
and
jbe
mov
outsl
stos
mov
rcrb
stos
adc
loopne
or
addr16
push
mov
jno
mov
aam
cltd
sar
xor
dec
jb
movsl
sub
test
add
int
xor
insb
cmc
push
jp
int3
add
sarl
fcompl
ret
sub
adc
inc
cmpsl
sub
aas
loopne
mov
std
sub
cmpsb
jg
and
in
mov
xchg
loopne
aad
or
cmpsl
push
fnstsw
xchg
xchg
mov
mov
inc
mov
xchg
out
push
aad
xchg
hlt
cmp
push
xor
inc
jns
mov
cmpsl
ret
into
xchg
out
xchg
cmp
cmpsl
cmp
idivb
jae
xchg
fs
push
dec
ljmp
xchg
lds
mov
xchg
pop
imul
pushf
insl
ja
imul
in
mov
jae
push
xor
jns
push
ljmp
out
fadds
popf
pop
aad
add
jp
enter
fs
lret
loope
cmpsl
in
movsl
loope
popa
fsubp
adc
and
ljmp
out
push
lds
jnp
fcoml
aaa
adc
cld
mov
test
ror
fucomip
shrb
inc
cmc
xor
xor
popa
imul
jno
lahf
mov
mov
add
aas
lret
cmp
xchg
jg
jne
mov
fldcw
pop
rorb
cmp
xchg
dec
cltd
sbb
rorl
enter
cli
aad
push
sbb
sub
pop
mov
rcr
lds
mov
inc
ds
dec
jne
imul
shrl
or
les
sbbb
fidivrl
mov
xor
daa
push
icebp
sbb
push
pop
outsb
js
mov
scas
add
xor
inc
push
sub
sbb
push
ret
mov
cli
and
cmp
or
cmp
ja
adc
and
and
xchg
test
sarb
jno
insl
cmpsb
xor
out
mov
jne
xlat
and
sub
and
xchg
push
clc
lcall
xchg
mov
jnp
in
movl
adc
jne
add
mov
sub
decl
stos
pop
rolb
add
andb
xor
insl
fists
in
mov
or
xchg
jne
dec
push
xor
jo
dec
subb
xchg
add
push
jmp
es
dec
mov
push
jno
mov
mov
adc
js
test
pop
test
loop
les
adc
pop
xor
clc
xor
sbb
rorl
test
xchg
inc
cli
and
xchg
lcallw
imul
ror
mov
xchg
mov
adc
and
lock
popl
adcb
scas
jnp
cltd
movsb
xchg
out
std
into
call
sub
inc
jmp
jnp
jo
inc
dec
mov
int
fimuls
sbb
push
ret
xchg
cmp
sub
enter
mov
lret
adc
push
sub
pop
int
or
repz
push
iret
imul
scas
icebp
xchg
push
add
jbe
jb
dec
test
rorb
push
cmp
and
inc
out
test
fisttpl
pop
lock
mov
lcall
inc
imul
stos
xor
ret
inc
test
mov
mov
push
js
sub
push
mov
mov
or
mov
insl
and
mov
fxch
rolb
in
mull
cld
push
rcrb
inc
data16
cmpsb
xor
jg
loop
roll
mov
out
inc
sbb
inc
loope
push
cltd
insb
enter
mov
cltd
shl
int
cmp
aad
dec
jae
addr16
movsl
js
dec
mov
add
pusha
push
loope
mov
mov
test
cli
into
scas
icebp
testb
into
or
and
push
insl
xor
movsl
scas
ljmp
sub
xor
add
push
orl
in
in
ljmp
inc
cltd
pop
push
pushf
pop
aaa
inc
nop
fwait
jae
ret
int
aad
cmpsb
adc
cli
xor
in
add
jg
in
mov
scas
roll
dec
imull
mov
mov
push
jge
repz
and
lods
dec
outsl
sub
push
out
imul
ret
or
jl
sar
pop
sbb
pop
sarb
aas
movsl
jne
mov
mov
negb
jle
mov
mov
mov
mov
in
aam
push
xchg
mov
add
fwait
push
js
js
sbb
js
adc
sub
or
lds
dec
lret
sbb
push
sbb
ret
cld
cmpsb
sar
add
jb
sub
mov
fwait
fs
orb
cmp
scas
stos
fs
dec
outsl
mov
fisubl
xchg
filds
xchg
int3
jo
jno
sub
mov
or
adc
mov
or
cmp
rcrb
mov
and
or
xchg
cli
inc
dec
push
lret
out
mov
cmp
sbb
aaa
and
js
pop
adc
cmpsb
push
jl
popf
cmpsl
mov
xchg
test
or
push
leave
shlb
adc
jge
bound
sbb
ficoms
push
xlat
adc
or
cmp
xchg
popf
cmpsl
rcrl
mov
sti
add
aad
cmp
outsl
cmpsl
sbb
stos
loop
leave
sbb
daa
jne
or
sti
xor
js
out
int3
xchg
mov
std
sbb
cmp
push
ja
or
jge
fwait
pushf
les
sub
jl
leave
ficoml
xchg
inc
jae
repnz
push
bswap
cld
add
mov
aad
fsubs
sub
push
and
insb
inc
and
dec
push
stos
or
aad
inc
xor
add
leave
xlat
in
dec
aaa
shrb
dec
xorb
push
or
push
or
mov
loopne
adc
and
cmp
push
insl
sahf
imul
cmpsl
test
clc
add
push
out
pop
and
jg
mov
fwait
add
aad
and
fnsave
xor
lods
xchg
es
cmc
in
cmp
adc
fdivs
mov
int
dec
add
cmp
dec
push
inc
xchg
jge
sbb
mov
add
in
xor
test
sbb
scas
cltd
sbbb
jle
ret
ljmp
testl
add
pop
pop
fcoms
jecxz
fldenv
push
lret
jns
sti
inc
dec
pop
mov
xchg
lret
pop
mov
mov
in
ss
dec
xchg
pop
inc
dec
mov
dec
stos
ret
add
rcrl
and
movsb
popa
mov
je
movsb
scas
mov
enter
inc
divl
fistl
push
jae,pt
sahf
test
xchg
leave
lock
jae
mov
jmp
imul
jne
xchg
cmp
xchg
in
xor
push
and
xor
loopne
jo
scas
dec
xchg
push
sbb
adc
fldl
fnstsw
pusha
inc
and
mov
jno
fucom
out
clc
add
push
and
xor
dec
push
pop
data16
test
fcomps
lret
jmp
push
cmp
push
pusha
cwtl
cmp
pusha
xchg
sarl
out
mov
or
sub
adc
cli
inc
adc
xchg
movsb
test
loope
cmc
decl
inc
fdivrp
adc
outsb
test
stos
mov
enter
out
cli
add
sbb
add
add
test
neg
fwait
loopne
push
lock
push
ret
movsl
jb
xchg
ret
loope
and
mov
xor
cmp
pusha
outsl
mov
mov
lods
shl
pop
or
and
js
xchg
xlat
popa
imul
mov
es
xchg
dec
movsb
std
jmp
mov
jmp
rorb
cmpsl
or
cmp
mov
xchg
pushf
out
in
inc
jge
in
ss
pop
mov
mov
xor
movsl
pop
lcall
add
loope
mov
arpl
inc
xor
pop
cld
sbb
test
orl
popf
repnz
frstor
push
adc
sbbl
es
aas
mov
lret
inc
and
lret
aad
aam
call
leave
pop
dec
push
sbb
fists
pop
mov
or
rcr
sub
lret
jae
hlt
decb
and
iret
dec
push
sbbl
test
loopne
hlt
scas
mov
push
pop
and
sub
in
lcall
jbe
or
xchg
jo
sub
mov
test
sub
jl
cmp
decl
test
call
fisttps
inc
xor
mov
push
movsb
inc
push
sbb
icebp
sti
add
sbb
mov
jbe
in
pop
jb
push
and
repnz
dec
cmp
jl
push
test
into
adc
lahf
fwait
rcrl
lret
cmp
arpl
frstor
imulb
jbe
jo
dec
cmc
jl
rorb
in
mov
sahf
sub
cmpsl
shrb
cmp
in
cli
or
je
jo
pop
sti
rcl
inc
cmp
xchg
xchg
lahf
sub
mov
mov
ds
push
in
loop
stos
aam
xor
jmp
mov
in
into
bound
mov
inc
fisubl
pop
loope
sbb
fisubrs
stc
jbe
jae
outsl
sti
pop
jmp
test
and
ss
fiadds
fwait
movsl
jo
test
mov
loop
test
adc
inc
fildll
popf
ljmp
fwait
loopne
dec
push
repz
popa
idivb
fisubrl
mov
or
dec
push
lock
sub
into
cltd
mov
out
int3
push
cmpsl
inc
push
sbb
pushf
out
daa
mov
and
cmpsl
dec
mov
mov
das
or
orb
lock
loop
mov
push
ds
mov
insl
lret
fnstcw
dec
ljmp
call
mov
rorl
push
and
adc
dec
fidivrl
fcoms
push
or
into
decl
adc
dec
pop
arpl
subl
mov
in
or
sti
add
push
movsl
outsb
js
mov
scas
add
jns
sub
or
pop
xor
mov
mov
das
call
icebp
push
and
xor
addr16
test
mov
mov
sbb
push
pop
xor
ret
cmpb
push
pop
inc
pop
aas
lock
push
pusha
push
cmp
js
repz
testb
sub
arpl
push
push
test
das
pop
sbb
scas
outsl
daa
push
jecxz
lock
xchg
inc
mov
lcall
into
stos
out
dec
adc
inc
jns
cmp
cltd
rorl
std
cmp
pop
mov
xchg
dec
xchg
mov
inc
scas
outsb
sbb
ss
mov
aaa
jb
push
xchg
mov
push
nop
mov
pop
fsts
mov
stos
xor
lea
stos
fs
or
in
out
mov
repnz
repz
scas
or
mov
push
stos
push
pop
arpl
adc
xor
sub
outsl
stos
push
stos
rclb
test
aaa
lock
or
sub
cltd
movsb
push
push
andl
fisttps
ret
mov
cmp
push
popa
imul
jno
lahf
mov
mov
jecxz
adc
movsl
pop
adc
sbb
xchg
inc
mov
mov
adc
inc
lea
and
add
inc
mov
repz
enter
lock
mov
popa
push
ss
dec
push
pop
mov
adc
out
and
fisttps
loopne
and
or
jne
imul
cmpsl
shrl
or
add
cmp
cmp
mov
into
lahf
test
frstpm(287
out
stc
add
inc
ja
push
push
mov
in
enter
or
add
scas
stos
test
mov
jle
call
push
clc
mov
cmc
mov
popf
shlb
aad
lds
loope
xchg
decl
popa
push
pop
pop
inc
jl
iret
enter
ret
int
decb
inc
sti
xor
sub
outsl
mov
ljmp
fistps
aas
adc
aaa
dec
subl
pop
mov
les
add
cmp
pop
jno
lea
or
mov
add
add
shr
sbb
sub
pop
imul
ffreep
movsb
xor
sbb
mov
cmp
cmpsl
popa
add
adc
pusha
dec
iret
push
dec
aaa
inc
sub
and
cli
and
dec
scas
pop
pop
jo
push
les
nop
les
and
sbb
adc
xlat
push
popa
imul
rorl
ss
sub
and
cmp
jmp
mov
mov
rcr
in
stc
add
inc
sbb
push
stos
test
sbb
mov
insl
icebp
orl
enter
mov
cmpsl
jle
lds
sbb
xchg
in
rolb
sbb
jl
push
lcall
xchg
mov
jp
in
cltd
xchg
fisttpll
pop
movl
cmp
lods
mov
sub
adc
cs
clc
bound
and
out
stos
jecxz
insb
add
and
movsl
pop
dec
jo
arpl
mov
mov
add
call
pop
push
cmp
pop
mov
or
roll
dec
and
adc
hlt
icebp
pusha
sbb
fidivl
lahf
dec
xchg
ficomps
push
push
add
add
xor
push
sub
or
mov
pop
sbb
jp
outsl
enter
les
add
cwtl
data16
enter
dec
sub
out
sub
stos
test
rorl
icebp
sti
add
sbb
xchg
jae
xchg
imul
sahf
out
adc
sub
cli
fbld
push
movsb
pop
jg
mov
jns
xor
push
lret
dec
sti
imul
bound
ja
mov
add
ljmp
mov
sahf
cwtl
mov
mov
or
repz
sbbl
scas
in
xor
xchg
rorb
adc
dec
push
popa
add
push
mov
imul
add
or
dec
jle
jb
push
xchg
jae
fmuls
xchg
iret
add
xor
mov
mov
test
dec
icebp
test
xor
sub
sbb
push
jp
push
into
mov
push
push
adc
lds
dec
mov
addr16
mov
int3
lds
or
mov
push
sbb
movsb
lret
add
mov
cmp
sub
add
cmpsb
mov
mov
sahf
sbb
loop
adc
push
clc
arpl
push
dec
jge
jbe
imul
adc
and
out
je
outsb
stos
icebp
popf
or
ret
add
mov
dec
mov
xchg
shrl
cmp
mov
inc
or
sub
cmp
jg
xchg
jp
mov
icebp
sti
arpl
push
es
add
and
jnp
inc
jns
fsubrl
mov
xlat
or
add
xor
push
mov
mov
mov
int3
in
sub
ljmp
cmpb
cwtl
mov
aam
ds
push
xor
adc
inc
or
bound
pop
cmpsl
mov
popf
mov
rorb
aaa
repnz
push
adc
xchg
dec
subl
or
push
mov
out
mov
or
out
mov
int
test
mov
inc
rolb
fistl
into
pop
xor
push
pop
outsb
js
jo
jno
mov
addr16
roll
mov
sub
xor
xchg
jo
xchg
xchg
mov
sahf
lret
aad
pop
ret
jmp
and
jne
jne
or
xor
out
cmpsb
fmull
or
aaa
pusha
sbb
xor
faddl
xchg
ret
or
clc
repnz
inc
pushl
je
insl
add
jg
jecxz
jbe
pop
xchg
outsb
ffree
add
ljmp
pop
lcallw
inc
mov
stos
jmp
iret
add
ljmp
sub
cmpsl
mov
xchg
push
sti
mov
sub
aaa
pop
sbb
cmp
mov
imulb
mov
cs
jge
and
sti
jp
mov
ljmp
sub
and
sti
aas
insl
es
or
andb
repz
ret
sub
adc
add
adc
and
inc
mov
call
stc
push
roll
xor
mov
inc
jo
gs
ljmp
inc
div
push
notl
cmp
jns,pn
daa
es
hlt
popf
pop
xchg
mov
jmp
ds
dec
call
pop
arpl
subl
int3
ds
clc
rcl
adc
sub
sarb
lods
idivl
xor
mov
sub
mov
or
jo
ds
loope
or
sti
inc
ret
iret
ljmp
outsb
jmp
mov
pop
xchg
sar
aam
fwait
cmc
sbb
inc
cld
xor
adc
aaa
scas
insb
movsb
call
fsubl
mov
loope
jecxz
pop
mov
mov
cmp
adc
add
fmulp
or
mov
lahf
xabort
cmpsb
fsubl
pop
pop
mov
jp
and
pop
aaa
and
adc
pop
in
lods
and
out
sti
out
and
dec
jle
pop
ror
nop
fwait
jne
mov
or
std
std
pop
adc
int
and
xchg
dec
mov
or
mov
cmp
xor
stc
dec
add
pop
sbb
es
xchg
les
rol
inc
movsl
and
sbb
adc
or
add
mov
mov
fs
ljmp
cmp
cmp
dec
xchg
mov
in
sbb
and
or
aam
lock
jmp
aad
movzwl
sub
imul
fs
jle
incl
sbb
std
cltd
sbbb
js
inc
ja
loopne
rcrl
insl
pop
add
es
aam
cmp
scas
imul
imul
into
add
jo
fs
or
jl
jo
std
call
stc
enter
ds
xor
loop
mov
imul
mov
adc
sbb
mov
mov
outsb
scas
sbb
loop,pn
push
xor
inc
dec
pop
xchg
sub
pop
test
mov
in
stc
add
inc
ja
jo
dec
jne
out
cmpsl
mov
xchg
aam
sub
sbb
and
mov
lods
out
shlb
pop
adc
push
xchg
mov
bound
es
lret
mov
lods
mov
stc
test
js
sub
cs
adc
insb
movsb
inc
pop
nop
mov
insb
call
push
clc
sbb
inc
dec
push
sbbb
push
scas
mov
sbb
sub
inc
sub
ret
cltd
push
mov
in
jb
jmp
jle
adc
test
add
adc
jno
mov
stos
out
lea
xor
pop
sbb
xchg
aad
cmc
aad
sbb
xor
inc
incb
or
dec
mov
int
movsb
scas
mov
enter
sbb
push
or
pop
bound
mov
mov
rcr
or
test
sbb
cmp
pop
push
cmpl
pop
xchg
aas
test
dec
in
int3
add
out
insl
mov
test
cwtl
les
cmpb
xchg
xor
aad
mov
add
dec
mov
loop
outsl
arpl
push
adc
pop
mov
and
movsb
loope
mov
in
fwait
pop
mov
or
dec
arpl
dec
subb
test
scas
out
cmpsb
shlb
imul
or
js
bound
stc
cmpsb
loope
jle
scas
adc
jo,pt
and
xor
aas
je
mov
pushf
js
out
scas
fwait
push
popa
imul
data16
nop
mov
out
push
pop
ret
rcrl
inc
add
cmp
popf
push
xchg
loope
scas
fmuls
enter
ffreep
add
bound
xchg
mov
in
test
movsl
adc
xor
adc
xor
inc
imul
jnp
icebp
sbb
or
or
data16
pusha
cmp
mov
call
mov
insb
iret
psubsw
sarl
ret
lea
mov
jae
insl
xchg
dec
xchg
pop
xorl
stos
xchg
int3
or
icebp
daa
dec
jmp
repnz
sub
fbld
shl
fs
sub
cmp
xchg
dec
je
inc
loopne
mov
push
xchg
test
pop
dec
imulb
in
cltd
outsb
js
lock
call
stc
sarl
and
push
jg
and
nop
mov
int
repz
xor
mov
notl
pop
lcall
fadd
jle
or
xlat
add
icebp
sub
add
sub
pop
xchg
in
mov
mov
aaa
ret
cs
push
push
lea
in
fiaddl
sbb
push
sub
adc
mov
xchg
popa
lods
mov
sti
movsl
lret
cld
push
xor
and
ret
insb
push
ja
jge
pop
xchg
mov
into
sti
mov
mov
sbb
imul
cmpsl
dec
adc
fcoms
jb
push
adc
into
lods
nopl
pop
je
cmpb
mov
in
movl
cld
in
and
xchg
mov
pop
fwait
movsl
scas
mov
jmp
pop
mov
xor
cmp
sbb
test
xchg
push
test
mov
push
roll
xchg
not
cmovo
or
movsl
mov
inc
adc
or
lret
in
or
sub
repnz
jns
mov
push
int3
add
mov
lock
bound
cmpsb
popa
xchg
in
jbe
dec
fsubr
sub
daa
dec
testb
sbb
cmp
in
pop
pushf
unpckhps
push
adc
dec
enter
lock
dec
pop
shr
fisttps
out
sub
inc
scas
pop
inc
in
xchg
push
mov
leave
icebp
stos
loop
jmp
lods
out
dec
push
inc
imul
push
xchg
cmp
test
dec
jb
leave
ss
sub
add
sub
pop
xchg
fcoms
aas
enter
or
pop
lret
outsb
popf
notl
push
fistl
mov
mov
push
inc
js
mov
inc
sahf
pop
xchg
dec
rcrb
mov
or
jg
repz
push
mov
outsb
mov
dec
mov
into
or
call
std
pop
jg
ja
or
data16
sti
loop
fucom
pop
js
fcomps
dec
xor
inc
dec
jle
jae
xor
xchg
iret
negb
fidivrs
ljmp
outsb
js
mov
scas
add
inc
lock
cmp
data16
mov
sbb
fidivs
jle
ficoml
aaa
jbe
push
je
mov
popa
xchg
dec
or
mov
out
and
fiaddl
push
test
and
push
arpl
movsl
pop
sbb
pop
call
push
adc
push
dec
push
cmpb
in
push
sti
into
fadds
in
fisttpl
pushf
push
add
pop
popf
and
cmc
mov
sub
mov
dec
xchg
enter
sub
lods
mov
int3
data16
and
and
lret
dec
inc
cs
push
cltd
lds
or
pop
ret
loopne
fyl2xp1
pop
repz
jg
xchg
xor
dec
mov
or
std
sbb
sbb
xor
cmp
push
xchg
outsl
testl
mov
push
or
sbb
dec
repz
test
mov
push
jecxz
mov
imul
mov
cwtl
mov
imulb
cli
out
inc
add
xlat
outsb
sub
jle
xchg
fsubrl
jecxz
sarl
mov
repnz
daa
mov
sahf
test
push
mov
ret
int
mov
xchg
lret
jne
pop
adc
add
push
jle
mov
mov
in
testb
mov
sub
mov
or
les
bound
lcall
adc
and
xor
sti
dec
inc
push
shll
mov
out
and
or
int
cs
push
mov
lahf
js
xchg
les
roll
ret
loopne
inc
loope
push
ja
jne
mov
pusha
dec
clc
mov
mov
jle
pop
imul
mov
jge
jno
into
cmpl
dec
add
pop
negl
inc
daa
addl
stos
mov
sbb
fdivrp
and
psllq
pop
sub
pop
test
scas
push
aam
into
outsl
xchg
cli
rcr
in
stc
add
inc
sbb
push
pusha
add
jle
jg
sti
mov
dec
fnstcw
adc
pop
push
sub
xchg
sbb
fs
cld
test
adc
pop
ss
inc
sbb
xchg
sub
xchg
xchg
cmpsb
mov
repnz
mov
mov
daa
jae
imul
movsl
jge
lahf
sbb
add
dec
hlt
pop
ja
cltd
mov
jb
cmp
fisubl
add
sbb
push
rorw
jae
rcrb
cmp
and
jmp
cmp
das
cmp
dec
popa
scas
push
sub
popf
lds
in
ja
aam
rolb
xor
sub
inc
imul
xchg
cmpsl
xchg
sub
add
add
jge
mov
push
jne
mov
lcall
or
xor
and
pop
orb
sub
cs
cmp
pusha
dec
pop
lds
pop
cmpsl
xchg
fildll
and
adc
xor
mov
dec
jno
repz
push
xchg
movsb
out
ret
out
lds
pusha
nop
cmp
out
and
inc
imulb
sarb
repz
sub
xchg
dec
pusha
mov
inc
xlat
adc
ja
lret
idiv
or
loop
jle
and
sahf
pop
jl
je
pop
adc
clc
mov
imul
push
lret
clc
add
movsl
vpsllq
pop
inc
pop
inc
pop
arpl
pop
cmp
pop
xchg
mov
into
clc
mov
adc
or
xor
cmpsb
pop
jl
cmp
int
imulb
sub
push
pop
jns
data16
or
xchg
sar
mov
sbb
mov
popl
dec
jae
pushf
push
je
mov
hlt
xchg
das
cmp
rdmsr
pop
lds
push
xchg
dec
xchg
adc
dec
pop
stos
addr16
andl
enter
push
mov
pop
pop
push
add
mov
ret
int
lahf
or
aad
add
out
xor
mov
mov
xchg
pushf
int3
xchg
movsl
and
pop
add
xchg
mov
sarb
cmpsb
mov
xor
subl
lret
rclb
and
push
sti
adc
mov
subl
loope
mov
cli
out
jo
cmpsl
lcall
jle
sarb
mov
jle
jmp
inc
dec
pop
subb
pop
mov
lret
xlat
ljmp
pop
cmc
pop
pop
xor
fldenv
sbb
jle
out
mov
clc
loope
pop
inc
decb
pop
ficoml
test
stos
mov
test
xor
cmc
or
dec
xchg
push
fs
test
inc
add
sbb
sub
cwtl
push
jge
inc
lods
jp
mov
lret
jmp
adc
adc
pusha
push
lods
dec
mov
test
or
add
mov
dec
or
imul
xchg
into
xchg
shr
jbe
adc
mov
es
std
adc
sbb
mov
mov
leave
mov
cli
and
adc
push
jp
jnp
mov
cmc
dec
call
jg
das
outsl
jno
aam
cmp
mov
jge
mov
sub
inc
sti
xor
repz
sahf
xchg
decl
adc
mov
cmp
and
popa
add
sub
leave
pop
mov
lods
jb
in
adc
jo
outsl
jno
push
sbb
aam
call
and
push
push
aas
push
clc
loope
mov
mov
out
shr
add
mov
push
pop
imul
scas
mov
loopne
adc
ss
test
mov
insl
ja
nop
inc
mov
jle
jmp
aas
or
inc
and
jae
cmp
lret
mov
jmp
add
adc
push
dec
pop
outsb
cwtl
jae
frstor
lock
mov
cli
add
mov
fistl
test
mov
mov
mov
stos
jmp
out
pop
cs
push
dec
loopne
dec
mov
iret
mov
insl
sub
mov
jo
add
pop
push
or
mov
jecxz
dec
pushf
out
and
inc
outsl
sub
test
lock
and
enter
and
add
ljmp
ficompl
dec
adc
rclb
xor
push
and
cmp
shrb
and
and
inc
xor
test
popf
je
cmp
mov
adc
aas
popa
sub
sub
xchg
inc
lret
aad
int3
mov
push
fbld
cmc
sbb
xor
and
push
jle
push
imul
mov
xlat
loope
pop
mov
mov
sbb
jecxz
mov
jge
addr16
je
enter
js
push
mov
push
icebp
dec
inc
inc
inc
jo
test
lods
je
mov
sub
loopne
fiaddl
xor
jg
xchg
pop
mov
aad
in
test
xlat
inc
decb
out
test
add
sub
inc
sahf
lea
rcr
add
std
and
pop
ret
aas
pop
fcomps
mov
mov
vpsubusb
in
mull
cld
push
negb
xor
inc
dec
pop
arpl
jns
lea
je
and
add
sbb
bound
sub
fs
dec
mov
shl
loopne
insl
cs
bound
xor
mov
jl
loop
aad
out
mov
imul
add
or
pushf
mov
loopne
sar
out
repz
adc
mov
lret
inc
fistps
das
addr16
sbb
loopne
stos
mov
mov
sub
sub
into
test
pop
fstl
xchg
mov
rcr
mov
push
data16
data16
lea
testl
sbb
ljmp
outsb
imul
adc
mov
or
loopne
movsb
ljmp
xor
out
pop
gs
jbe
shll
test
mov
out
lahf
cmpsl
or
dec
xchg
and
xor
je
aad
add
jecxz
xchg
in
mov
std
sub
xchg
xor
roll
fists
lock
sahf
arpl
aaa
push
jbe
sub
dec
push
cmpsl
inc
push
sbb
push
inc
sbb
sbb
jbe
sub
mov
or
jmp
jno
bound
into
mov
inc
mov
movb
and
testl
push
test
cli
hlt
in
enter
arpl
mov
fimuls
mov
pop
in
xchg
jmp
mov
cmp
mov
sarb
lds
dec
pop
scas
mov
popa
dec
lahf
test
mov
test
pop
out
divl
cmp
mov
mov
push
jge
jae
inc
xor
and
inc
fwait
pop
adc
nop
mov
loope
cmc
cmp
movb
sbb
xor
inc
push
pop
test
dec
stos
mov
fcoms
sbb
loop
orb
jle
sbb
pop
add
inc
imul
pop
sahf
test
push
mov
gs
mov
jle
mov
push
jg
cld
push
push
xor
mov
cltd
shll
cli
out
pop
adc
lods
inc
cmp
lods
xor
int3
mov
enter
pop
les
xor
xor
outsb
sub
xchg
inc
xchg
mov
iret
clc
sar
push
push
and
ss
je
jo
jno
dec
cmpl
push
or
rcrl
inc
loope
push
jg
je
cltd
xchg
sbb
fadds
mov
mov
jg
arpl
mov
ss
jne
add
frstpm(287
out
stc
add
inc
jns
insl
ret
inc
imul
mov
add
aas
push
andl
rorb
and
push
and
xor
addr16
test
mov
fsubrl
and
inc
sub
pop
mov
push
out
fwait
movsl
mov
das
call
imul
xor
mov
insl
test
push
sub
lret
add
adc
sub
arpl
push
arpl
xlat
movsl
scas
mov
mov
sbb
cmp
jge
lret
cltd
daa
and
and
sbb
dec
push
pop
imul
ffreep
cmc
out
cmpsl
add
sub
jmp
popa
imul
mov
push
out
cmpsb
out
aaa
inc
or
out
imul
pusha
push
insl
ret
int
sahf
aaa
mov
lock
xchg
cmp
jne
ret
daa
into
js
mov
mov
inc
in
xor
push
das
test
sbb
jge
aam
fcompl
repnz
leave
or
jns
or
adc
test
inc
mov
rclb
sub
mov
jb
js
imul
in
fcoms
and
sub
cmp
xor
jo
and
mov
rcrb
xor
popf
repnz
in
movsl
or
xchg
daa
xor
inc
dec
cmpb
dec
mov
mov
rcr
out
sti
out
and
dec
jo
gs
dec
mov
add
mov
and
stc
loope
bound
jae
jnp
push
iret
mov
insl
lods
out
or
add
add
sbb
xor
hlt
lret
jno
dec
add
jae
stos
push
subb
pop
inc
lahf
mov
push
inc
outsl
xchg
dec
test
rorb
add
adc
xor
dec
jo
gs
sub
imul
mov
xchg
sbb
aaa
bound
push
add
jae
pop
xchg
ljmp
xchg
mov
stos
loop
lret
fldl
xor
inc
mov
push
push
jnp
bound
sahf
add
mov
dec
test
insl
add
cmp
cmpsl
mov
jecxz
testl
add
adc
pop
fcmovb
dec
mov
mov
sbb
dec
pop
outsb
js
pop
xchg
movsb
mov
mov
add
push
jg
je
pop
test
mov
mov
ret
pop
rolb
das
ljmp
push
fdivp
mov
iret
mov
cmpsb
push
loope
and
out
enter
xchg
js
jae
mov
push
ret
mov
or
and
je
push
popa
imul
fs
mov
sti
mov
sbb
dec
push
aas
sbb
data16
cmpsb
pop
pushf
les
mov
out
stc
add
inc
sbb
push
js
outsb
push
push
xchg
inc
icebp
lods
loop
mov
dec
cmpsl
add
es
xchg
rolb
int
xchg
mov
cmpsl
out
dec
add
jecxz
pop
xchg
jns
ds
test
pop
hlt
lods
call
push
pop
into
pop
cs
and
movsl
xlat
add
insb
movsb
mov
xchg
iret
fwait
lret
sbb
dec
mov
sub
add
jo
push
das
aad
sahf
pop
lret
fisubl
or
add
push
jp
insl
cmpsl
cmc
xchg
mov
mov
ljmp
inc
fidivrl
inc
jbe
cli
jmp
dec
iret
mov
cmp
add
adc
movl
enter
xchg
enter
repnz
xlat
push
jge
daa
sbb
sub
mov
aas
sub
leave
cmpb
cmc
and
adc
xor
cmp
cmp
jg
orl
in
stc
add
inc
sbb
inc
outsb
sub
xchg
push
mov
jg
push
out
xlat
pusha
orb
cli
cmp
inc
xor
sub
xlat
push
decb
ret
sbb
cmp
stc
ljmpw
mov
jno
pop
std
jge
lods
sbb
xlat
out
push
pop
repz
addr16
in
loopne
stos
in
jb
insb
add
decb
push
pop
ret
sbbb
push
mov
and
and
sbb
testb
mov
scas
jecxz
or
leave
inc
repz
pop
adc
loope
out
and
loopne
sarl
fchs
or
add
ss
or
mov
dec
loop
int3
daa
pop
push
fdivrl
shrb
push
out
sbb
xor
cmpsl
push
mov
mov
pusha
inc
in
out
lods
adc
mov
movsl
dec
jns
imul
adc
ficoml
cmp
jle
in
sarl
fldl
cwtl
aam
aaa
hlt
sub
add
lods
imul
in
mov
jge
call
and
cmp
out
pop
popa
ja
sahf
sub
mov
fsub
ficoml
iret
dec
push
std
xor
push
cli
inc
ja
fisubs
decl
and
movsb
test
out
sub
pop
jne
aad
lret
ficoml
push
fists
inc
or
inc
pop
or
pop
fmuls
adc
int
cmpsb
ljmp
movsl
jp
arpl
push
xchg
call
pushf
lds
loop
out
and
sbb
and
pop
pop
orb
andb
jns
xchg
enter
xchg
shl
xor
and
inc
fwait
arpl
jl
pop
xchg
mov
sar
mov
pop
mov
mov
daa
push
add
insl
mov
mov
mov
inc
lods
mov
fwait
dec
loopne
adc
mov
ror
cmpsl
ss
sub
and
dec
dec
pop
mov
fwait
push
lods
push
ret
xor
cs
sbb
push
popa
imul
xchg
popf
cmpsl
xor
mov
in
testl
add
jb
inc
jnp
jns
hlt
jecxz
fadds
xchg
call
or
das
cmp
mov
xchg
mov
bound
fsub
lock
aas
jmp
dec
data16
data16
sbb
jae
jnp
lret
aad
xchg
in
std
loopne
mov
and
sbbl
push
mov
jmp
das
lret
adc
xor
add
mov
jnp
les
push
or
inc
xchg
mov
sub
mov
dec
xchg
popf
cmpsl
shll
fsubr
hlt
decb
adc
xor
inc
dec
pop
arpl
jns
lea
call
mov
inc
jbe
jmp
push
xorb
test
shl
push
xchg
mov
mov
movsl
pop
test
push
repnz
call
jno
call
loope
add
push
xor
pop
jg
inc
mov
les
lods
shr
cwtl
push
or
cmc
push
pop
add
sbb
inc
push
sbbl
or
adc
ljmp
mov
lods
xchg
test
bound
xor
and
out
push
test
mov
fs
jge
notl
lret
cmc
aas
ds
movsb
fisubs
inc
incb
imul
inc
jge
mov
addr16
loop
xlat
add
negb
cs
or
sub
adc
mov
mov
out
or
cwtl
jle
ja
insb
xchg
sbb
rcll
iret
out
test
imul
cmp
lea
hlt
jge
repnz
pop
orl
lock
fcomi
lock
push
fmull
sub
dec
xchg
scas
in
test
sbb
and
fimull
and
cmpsb
dec
xchg
add
or
dec
aad
dec
and
pop
aam
xchg
cmp
out
cmpsb
int
movsl
mov
out
mov
pop
fstpl
pop
cmp
ljmp
inc
outsl
pop
fistps
jl
nop
lds
roll
jmp
push
das
push
ret
push
into
fnstcw
rcrl
int
cmpsl
or
add
out
mov
push
sbbb
adc
lahf
int
fpatan
sbb
pop
loope
cltd
outsb
in
xchg
sbb
rorl
lret
push
sub
data16
inc
je
mov
jns
add
push
cld
pop
push
push
cld
jp
dec
sbb
jecxz
push
repz
rcrl
iret
loopne
hlt
decb
rcrb
xor
inc
into
cwtl
cwtl
mov
aam
jmp
dec
aas
jecxz
pop
xchg
movsb
pop
xchg
out
jnp
lret
cmp
lods
in
out
mov
push
dec
stc
sub
jl
push
lcall
bound
cs
js
cmp
push
scas
dec
dec
xchg
in
sahf
movb
lret
neg
fnstenv
dec
jp
inc
mov
jge
xchg
fwait
mov
ret
mov
sub
cmp
jg
imul
int3
pushf
cld
int3
loope
and
xor
sub
or
pop
bound
xchg
div
test
cltd
mov
clc
inc
aad
inc
xorb
jae
xchg
push
mov
in
loope
ss
sbb
jno
pop
inc
mov
jge
fistps
mov
xor
cmp
sub
adcl
cmpsl
mov
out
cmpsl
mov
add
fidivl
push
test
push
mov
xchg
div
scas
mov
in
push
dec
push
mov
daa
dec
fiaddl
arpl
mov
ljmp
mov
stc
insl
push
into
pop
cmp
and
cmp
jbe
mov
sub
dec
fiaddl
jbe
cmp
push
pop
inc
sahf
add
xor
jecxz
and
stos
xchg
pop
push
cli
out
clc
jnp
lods
and
jg
repz
data16
es
jp
insb
sub
mov
fcmovnbe
jle
loopne
les
sbb
repz
in
pusha
js
orb
enter
out
or
stos
pop
pop
or
jle
ja
insb
scas
shll
mov
mov
or
fadds
xor
inc
dec
pop
arpl
jns
aaa
add
pop
std
out
call
jmp
int
call
xchg
daa
cmpsl
cmp
iret
ror
aaa
icebp
addl
jg
xor
test
xchg
dec
test
out
repnz
add
lock
mov
mov
mov
pop
mov
pop
adc
nop
imul
scas
mov
leave
inc
decl
loopne
inc
sarb
xor
mov
mov
addr16
mov
add
ret
ss
pop
pop
push
movsl
xlat
iret
cmp
xchg
inc
mov
add
repz
sahf
mov
icebp
sbb
ja
je
mov
mov
sub
jmp
push
dec
lahf
pop
pop
mov
ja
repz
jns
int
and
sub
mov
cmpsl
push
stos
xchg
pop
sti
mov
xor
sarb
test
dec
outsl
mov
cltd
jp
sbb
adc
inc
and
popf
popa
xchg
pop
rcrl
rcrl
popa
and
pop
aaa
mov
pop
sbb
xor
scas
dec
add
pushf
neg
push
adc
test
jle
mov
jmp
fsub
in
mov
dec
sbb
add
jp,pt
mov
int
xchg
loope
pop
rorb
pop
pop
lock
jo
bound
dec
xorl
div
ss
cwtl
sub
scas
out
orb
pop
cli
aaa
jnp
push
lcall
into
fsub
in
testb
adc
sub
cmp
jg
dec
lahf
pop
pushf
ret
jnp
adc
les
sbb
es
aas
pop
or
jne
fadds
cmp
mov
sub
lea
stos
dec
jo
mov
add
adc
xor
cmpsl
xchg
out
mov
mov
ljmp
aad
divl
pop
pop
inc
pushl
mov
adc
dec
jo
loop
enter
negb
xor
inc
xor
xchg
mov
sbb
int3
or
adc
insb
inc
data16
mov
ret
loopne
int3
jno
in
xor
cwtl
cmp
push
and
xchg
dec
xorb
mov
ret
sub
sbb
cmp
js
mov
lea
mulb
push
or
sbb
lret
mov
xchg
rcr
repz
clc
and
jl
nop
lcall
loope
and
out
stc
cmp
lds
movsb
mov
sbb
test
sbb
pop
adc
sbb
inc
sarl
enter
push
dec
in
adc
inc
dec
pop
arpl
jns
ret
jmp
xchg
xor
es
and
xchg
mov
addr16
sarl
xchg
sar
test
xchg
adc
push
adc
inc
insl
adc
scas
push
cli
lret
jmp
inc
add
int
mov
push
pushf
cmpsb
mov
loop
orl
inc
sub
and
mov
mov
scas
cmc
mov
stc
loop
scas
inc
leave
adc
and
push
ds
jns
lea
leave
rcr
out
sti
out
and
and
ja
inc
lock
jmp
xor
sbb
loope
bound
mov
lods
push
enter
jns
cmc
xchg
shlb
es
adc
pushf
cmp
xchg
lahf
test
frstpm(287
out
stc
add
inc
daa
xorl
pop
add
aad
bswap
add
psubusb
pop
inc
jns
sarl
les
call
sbb
push
add
jae
pop
xchg
mov
ret
loopne
hlt
decb
adc
xor
inc
xor
xchg
mov
sbb
int3
or
nop
jnp
insb
inc
data16
mov
ret
loopne
int3
jno
in
xor
cwtl
cmp
push
and
xchg
dec
xorb
mov
lahf
movsb
adc
js
xchg
dec
xor
inc
sahf
xorl
fucom
icebp
sti
out
and
inc
jle
jae
mov
testl
jo
pop
xor
cs
shlb
push
fldcw
in
lock
mov
orl
push
loope
sbb
cli
add
and
je
push
sbb
jne
stos
fs
leave
push
cmc
mov
in
or
dec
inc
adc
mov
mov
jl
xor
adc
sub
cmp
out
inc
out
imul
lock
inc
push
sub
arpl
xchg
and
cmp
daa
bound
jl
rolb
scas
lcall
push
adc
cmp
stos
stc
lret
loope
cmc
daa
std
cmpsb
or
arpl
cs
sbb
push
imul
jo
mov
out
jnp
mov
inc
je
sub
imul
sub
cltd
aam
filds
adc
adc
call
jg
popf
cmpsl
mov
mov
ja
in
sbb
sbb
jge
outsb
dec
arpl
clc
into
imul
out
stc
add
inc
daa
mov
lret
xchg
popf
je
aad
shrb
test
cwtl
and
sub
rclb
push
mov
int3
mov
xchg
xchg
shll
popf
neg
nop
inc
add
in
push
orb
mov
mov
pop
sar
iret
lods
fwait
cmc
fmul
inc
cld
xor
push
dec
push
jge
xchg
cmp
mov
add
stc
sbb
nop
mov
inc
cltd
push
pusha
je
mov
lret
jmp
add
xlat
jb
imul
inc
js
push
xchg
outsl
pop
push
iret
movsb
pop
or
push
daa
ds
add
mov
call
stc
xchg
into
sub
sub
cmp
insb
xchg
dec
lods
scas
lret
jbe
inc
mov
or
ljmp
movsb
fildl
inc
mov
iret
mov
out
push
add
mov
ficoms
xchg
lea
in
cmpsl
fisttpll
cmp
das
pop
addl
sbb
lret
out
sbb
or
mov
cmp
data16
pop
aas
jge
bound
mov
mov
xchg
int3
or
jmp
divl
dec
push
mov
imul
mov
negb
sub
jb
dec
pop
imull
jge
movsl
mov
int
fcomp
push
fwait
gs
inc
mov
fistpll
insl
pop
dec
test
jmp
cmp
xlat
sbb
jbe
scas
dec
xchg
imulb
or
xchg
into
repnz
movsb
out
dec
sub
or
incb
fldenv
mov
lods
ss
dec
jle
movsl
bound
add
movsl
iret
xchg
ret
mov
sbb
in
push
add
inc
scas
imul
nop
mov
test
ficompl
sti
xchg
loop,pn
cmp
dec
and
mov
test
mov
inc
clc
ret
push
sub
imul
pop
xchg
test
mov
in
mov
sub
adc
jp
js
cli
aam
ret
loopne
xchg
jb
ret
add
dec
fildll
push
mov
sub
adc
arpl
out
fs
fucom
push
enter
and
inc
mov
jl
sbbl
rorb
pextrw
add
adc
or
les
or
pop
inc
jmp
xchg
push
das
jge
xchg
lret
js
hlt
sahf
mov
cmp
sbb
jno
test
dec
outsb
inc
or
lret
xorl
es
xor
fistps
jp
jb
rclb
ret
cli
ret
pop
fwait
call
addr16
pop
jne
inc
jno
mov
sahf
inc
ficoml
repnz
pop
cmpsb
jl
ljmp
xor
test
mov
stos
shll
add
inc
ja
insl
cmpsb
push
test
inc
leave
les
and
push
push
cli
xor
push
pop
pushf
xor
push
xchg
enter
inc
mov
jno
out
push
pusha
mov
xor
aam
dec
sbb
or
in
xchg
mov
pop
enter
xor
scas
mov
pusha
adc
add
adc
cmp
push
xchg
mov
push
jmp
sub
imul
pop
dec
dec
test
test
push
xlat
add
xchg
pop
jp
mov
mov
push
xchg
enter
je
pop
adcb
daa
xor
jp
pop
out
fwait
mov
aad
cmp
dec
push
cmpsl
fwait
sbb
cltd
orb
mov
jle
scas
mov
enter
sbb
or
sub
subb
in
test
test
sbb
aaa
aas
dec
push
popa
lea
sub
pop
icebp
stos
in
icebp
add
adc
data16
xchg
arpl
jns
lea
fsubrp
repnz
cmp
sbb
aaa
mov
out
sti
jb
pop
daa
push
jne
sbb
pop
imul
int
insl
jg
lret
repnz
cmpsb
shl
push
or
jp
jle
pop
test
aad
enter
ret
mov
ds
xchg
inc
push
cmp
mov
push
imul
repnz
imulb
data16
dec
fs
mov
fisubs
pop
repz
cmp
jmp
sub
lea
pop
xchg
in
mov
xor
test
fldenv
jne
mov
fucom
fistpll
or
inc
shll
xor
push
xor
push
jge
pop
lods
pop
xchg
mov
sbb
movsl
sub
mov
add
in
testl
xor
inc
push
pop
pushf
insb
stos
push
mov
mov
add
push
adc
push
jae
xchg
xchg
push
jle
xchg
xchg
fdivrp
add
fucom
icebp
sti
add
test
cmp
das
xchg
fldenv
ja
aad
std
push
adc
dec
push
pusha
push
aam
xor
icebp
push
orb
cmp
jmp
sbb
mov
mov
daa
mov
add
inc
mov
mov
pop
out
pop
jle
mov
sub
inc
dec
gs
xchg
sub
movsl
scas
mov
aad
repz
pop
inc
cmc
push
cld
das
add
popa
mov
pop
cmpsl
mov
cld
adc
decb
adc
loop,pn
xchg
fwait
xchg
insb
add
and
or
add
orl
cmp
pop
mov
gs
fldenv
and
int3
add
jmp
outsl
movsb
cmp
loop
leave
add
sahf
xlat
cld
dec
cmc
and
inc
dec
push
subb
pop
rcll
pop
fildl
add
and
jae
xchg
shrl
jmp
adc
cld
mov
and
cmp
sub
sub
pushf
cmpsb
jo
push
iret
or
std
mov
xlat
sub
pop
pop
ss
cmp
int3
testl
aas
clc
pop
out
inc
dec
pop
bound
dec
fs
mov
cmpsl
fidivs
jge
std
in
push
sar
ret
inc
dec
dec
lock
testl
sub
jbe
hlt
mov
inc
dec
push
popa
popa
and
enter
mov
shrl
sbb
xor
dec
insb
mov
push
xor
cmp
add
sbb
jno
popa
or
jp
xor
xchg
int
notl
jae
cmp
ss
mov
fldenv
hlt
shlb
pushf
mov
add
push
mov
push
iret
jle
addr16
dec
test
lahf
xchg
add
ficompl
xchg
test
push
push
lret
fwait
ja
jle
stc
loopne
aam
mov
pop
and
pop
xor
push
lods
and
dec
xchg
pushf
push
stos
inc
lahf
pop
dec
ret
in
loopne
and
mov
push
mov
dec
repz
xchg
sub
scas
pushf
rorl
loopne
cmc
and
mov
ficomps
mov
jle
xchg
mov
or
xor
and
mov
and
adc
addr16
loopne
inc
out
loopne
lcall
or
scas
fchs
ljmp
xor
push
pop
andb
fstpt
mov
outsl
pop
subl
ljmp
push
push
push
jp
cmp
mov
sbb
dec
jo
push
add
cmpsb
outsb
xlat
loope
cmpsl
shr
leave
cld
fsubl
mov
sbb
bound
xchg
or
je
mov
cmpsl
mov
mov
mov
or
fdivrl
outsb
jle
mov
lahf
adcb
scas
fcoml
cli
sbb
dec
add
dec
jmp
sahf
xchg
pushf
mov
mov
sbb
movsb
adc
push
push
dec
outsb
push
test
xor
or
ds
sbb
ficompl
xor
jb
add
repz
sbb
dec
adc
mov
sarl
shll
push
cmp
jp
xchg
nop
xor
hlt
xchg
xor
addb
in
xchg
out
and
in
push
movd
imul
fadd
insl
mov
cmp
pop
push
adc
loopne
and
jmp
mov
fdivr
call
adc
data16
data16
mov
fwait
mov
insl
push
dec
xchg
dec
xor
mov
popf
sbb
in
clc
add
and
xor
dec
push
pop
xor
mov
lret
jmp
sbb
push
popa
imul
xchg
popf
cmpsl
lock
jecxz
testl
add
jb
mov
hlt
push
dec
lret
cmp
ds
xor
sub
xor
outsb
mov
lret
imul
in
ss
pop
pop
dec
mov
movsl
scas
in
xchg
js
aad
pop
mulb
xchg
and
mov
mov
into
clc
mov
sbb
lods
bnd
sti
and
pop
bound
inc
adc
dec
test
mov
pop
int3
pop
sub
sub
popa
imul
mov
popf
jo
out
pop
dec
push
aas
sbb
sbb
add
push
xchg
mov
int
sbb
adc
jbe
sub
test
mov
or
lock
dec
imul
std
xor
pushf
jp
sahf
dec
cmp
pop
je
cmp
out
push
cmp
pop
push
mov
push
pop
push
add
xchg
inc
je
insb
mov
cmc
xor
mov
adc
inc
sti
es
fucomip
repz
sbb
mov
sbb
sbb
lret
inc
dec
push
jmp
loope
das
and
mov
push
decb
int
dec
insl
add
cwtl
cmpsl
pusha
xchg
lds
sbb
cs
cld
or
or
push
arpl
xchg
fsubrl
leave
lock
int
xor
adc
in
jne
imul
imul
divb
push
pop
dec
push
cmp
adc
bound
in
movsl
fstpl
add
push
adc
and
addr16
inc
adc
cmp
pop
nop
mov
popa
sbb
or
loopne
or
mov
rcr
lds
or
sbb
push
popa
imul
jno
lahf
mov
mov
jecxz
adc
dec
pop
cmp
jne
inc
push
mov
add
inc
in
add
pop
push
inc
cltd
xor
mov
je
pop
in
fadds
and
mov
repz
sub
sbb
fidivrs
xchg
add
jl
jns
jne
outsb
mov
inc
rcrl
adc
lds
fldl
sar
cmpsb
maxps
sbb
aaa
jb
add
outsl
scas
shlb
ljmp
pop
pop
dec
clc
data16
ret
pop
xchg
inc
testb
movsl
in
testl
jae
inc
push
pop
data16
jb
mov
mov
out
stc
add
inc
sbb
and
das
push
pop
ficoml
mov
cmpsb
mov
push
test
xchg
jp
jno
repz
std
xor
fcomp
or
add
jl
jo
add
insl
lods
shlb
adc
cltd
ljmp
nop
insb
repnz
dec
jo
lods
movsl
outsl
xchg
out
pushf
jecxz
mov
daa
ds
data16
pop
and
mov
sub
inc
pop
fdivl
cmp
pusha
mov
push
jmp
in
movsl
fldcw
dec
int
into
sub
cmp
sub
xor
aaa
shr
dec
lods
iret
mov
ljmp
jae
xor
and
movsl
ret
int
sahf
outsb
mov
into
adcl
cmp
or
and
xor
and
js
mov
scas
add
pusha
loopne
adc
inc
js
dec
pop
les
sub
pop
mov
inc
cmpl
mov
ss
aaa
dec
mov
fstpl
sbb
or
xor
pop
or
aad
mov
mov
std
sub
and
ljmp
mov
xchg
pushf
cmpsb
std
dec
in
testl
add
jb
pop
jle
movl
push
xor
adc
xor
hlt
xchg
mov
mov
sub
into
cmp
out
out
ljmp
push
dec
jb
xchg
mov
mulb
cli
xor
jle
ds
cmpsl
mov
add
hlt
adc
rorl
dec
js
scas
xor
mov
mov
loop
daa
push
add
jge
ja
data16
dec
cmc
jb
xchg
sub
out
aas
dec
push
sar
pop
out
fwait
xor
loope
mov
lret
sar
push
inc
dec
dec
and
cmp
jbe
stos
lahf
push
stos
addr16
mov
ret
mov
sub
les
inc
inc
movsw
pop
xchg
push
test
xchg
sub
sub
sbb
cmp
cltd
sbb
mov
and
sbb
xor
pop
bound
mov
cmpsb
or
pop
xlat
das
cld
adc
adc
mov
push
sahf
out
fsubl
xchg
mov
or
push
cmp
das
ss
xor
mov
mov
pushf
sti
pop
ljmp
push
repnz
ss
push
popf
lds
in
xlat
add
mov
dec
mov
jnp
les
insb
enter
hlt
sbb
pop
dec
in
xor
jne
lcall
xor
jecxz
mov
cmp
adc
xor
inc
dec
pop
arpl
jns
jae
gs
adc
inc
jecxz
je
push
xchg
or
sub
ljmp
xor
inc
xor
fs
mov
in
jbe
or
jbe
xchg
dec
sahf
pop
cmpsl
lret
mov
into
test
sub
xlat
push
mov
scas
jbe
mov
fcomi
cmp
loope
cmc
pop
mov
stos
sbb
xchg
xchg
test
mov
mov
les
std
mov
adc
push
scas
push
jb
repz
mov
out
push
std
or
test
clc
loop
xlat
jl
xor
stc
mov
bound
cmovs
pop
lret
and
arpl
pop
in
aam
daa
les
mov
xchg
dec
jns
dec
cmpsl
iret
jecxz
repnz
cmpsb
sub
mov
lret
call
sbb
adc
iret
mov
mov
dec
add
push
dec
scas
cmp
jbe
bound
out
imul
dec
loope
pop
aaa
or
lahf
xacquire
out
jg
mov
cmp
xchg
or
cmp
xor
pop
je
or
xchg
fwait
movsl
out
movsl
add
push
fiaddl
aas
addr16
hlt
xchg
dec
push
mov
mov
in
fdivrs
cmpsb
ds
je
or
sbb
mov
push
sub
dec
xchg
mov
mov
lret
outsb
rcrl
adc
fisttps
ficoms
push
jnp
jno
push
dec
mov
push
into
push
lods
ja
pusha
push
ljmp
aad
call
out
lods
jge
mov
in
cmp
unpckhps
cmp
push
push
cltd
sub
mov
cmova
aam
jp
mov
ljmp
mov
in
jle
orl
insb
mov
mov
andl
add
jmp
cwtl
xchg
repz
cli
xor
loope
jmp
testb
mov
mov
rolb
cmp
push
dec
mov
xor
dec
loope
daa
lahf
adc
lahf
xor
int
inc
jge
aaa
lods
cmc
outsl
push
stos
in
or
aas
and
call
cmp
or
mov
xchg
lea
xchg
sub
ret
pop
cwtl
aad
outsb
inc
std
repnz
imul
out
jne
pavgb
mov
xor
xor
xchg
inc
jmp
xchg
xchg
cmp
xor
mov
sbb
xor
das
ficoml
cmpl
movsb
mov
sarl
adc
and
and
inc
popa
dec
hlt
pop
or
test
call
jns
gs
cld
sub
sahf
jle
cmp
cmpsl
pusha
push
out
iret
mov
cltd
shll
sahf
sub
insl
cmpsb
arpl
test
mov
movsl
push
inc
add
jl
popa
lcall
nop
dec
ficoml
js
out
push
inc
mov
arpl
shl
fimuls
inc
into
cwtl
adc
mov
cmpsb
or
arpl
js
insl
jl
mov
mov
sbb
add
and
fisubl
and
jae
mov
adc
add
mov
dec
out
push
jge
jg
xchg
jp
in
stc
aam
fs
outsl
add
sbb
xor
dec
xor
push
nop
fdivl
fcoms
ret
cli
dec
sbbl
es
aas
outsl
inc
or
pop
jno
fisubs
or
lret
nop
data16
xchg
arpl
jns
jae
jg
or
sbb
in
dec
insl
ja
insb
dec
bound
jno
test
mov
xchg
pusha
incl
push
std
ss
scas
ja
jge
stc
loopne
fdivp
mov
fcoml
inc
clc
das
pop
ret
pusha
sub
lahf
xchg
int3
xchg
pop
icebp
cmpsb
rcll
inc
std
xor
imul
jg
decb
loope
jge
sub
xor
push
pop
inc
sahf
add
rcr
out
cli
push
fisttps
fldt
inc
dec
je
sub
insb
xchg
inc
lods
scas
fldenv
mov
cmpsb
mov
das
cmp
push
fmull
stos
scas
pop
xchg
into
clc
mov
xchg
mov
push
repnz
out
push
jg
pushf
push
lea
imulb
or
inc
and
jecxz
and
sbb
movsb
fildl
adc
mov
jns
dec
cmp
fcoms
xor
push
xor
movsl
iret
ljmp
icebp
mov
icebp
stos
in
ss
nop
sub
sub
adc
adcl
call
adc
inc
pop
fildl
or
pushf
mov
call
in
std
add
es
push
jo
sbb
cmpsl
mov
sbb
outsl
pushf
fcoml
std
or
fstl
dec
andb
loopne
ja
ficoml
inc
push
sbb
xchg
orb
xor
and
pop
popa
mov
or
cmpsb
mov
inc
data16
lock
dec
mov
push
call
sbbl
std
xor
je
gs
orb
in
movsl
loopne
cmp
or
and
xor
push
dec
test
dec
cmpsl
mov
lds
fimuls
enter
negb
xor
inc
dec
pop
arpl
jns
lea
fsubrp
adc
or
adc
iret
sub
loopne
cmp
es
cmpl
stc
movsl
andl
mov
push
inc
push
pop
out
adc
scas
outsb
mov
test
jnp,pn
ficoml
cli
lcall
cmp
jo
cmp
hlt
scas
in
lods
add
mov
dec
jne
and
loope
adc
xorb
and
adc
inc
dec
cli
adc
pop
lahf
mov
ds
addr16
lret
test
bound
rcrb
push
incb
jo
sti
nop
fwait
ret
popa
lret
lret
push
fucomip
or
daa
mov
jecxz
popa
popa
sub
mov
pop
iret
iret
push
loopne
adc
pop
cmp
stos
aas
push
mov
mov
jbe
out
add
sub
xor
shll
insb
mov
jnp
in
sbb
or
jle
repz
sbb
movsl
cmpsl
dec
push
lods
lret
call
pop
and
mov
repz
mov
cmc
inc
mov
and
adc
fdivl
jno
movsl
bound
in
movsb
loopne
repnz
pop
adc
jb
arpl
adcb
jae
loopne,pt
sar
mov
testl
add
inc
js
xchg
fwait
movsl
rorl
jmp
pop
icebp
sarl
adc
pop
insb
and
mov
cmpsb
pop
xor
sbb
lock
xchg
push
pop
add
test
add
aad
pushf
icebp
popf
mov
flds
inc
arpl
popf
push
xchg
out
mov
mov
sbb
cmp
sub
hlt
das
gs
dec
xchg
or
out
loop
arpl
or
jmp
cs
in
push
cmpl
sbb
fsubs
jp
cli
cli
and
adc
cwtl
xor
outsl
pushf
push
lea
mov
out
stc
add
inc
sbb
dec
js
insl
sbb
pusha
mov
bswap
add
pop
and
jg
pop
lea
enter
lock
stos
loope
push
pop
xchg
jne
repnz
inc
imul
cld
xchg
fiaddl
add
in
adc
jne
and
dec
je
pop
jle
jecxz
xchg
cmpl
ret
or
xor
cwtl
xchg
pop
xchg
lods
stos
lock
repnz
or
sbb
inc
dec
push
pop
imul
ffreep
cmc
in
adc
push
mov
popf
jb
mov
popa
push
or
cmpsl
pusha
mov
scas
andl
fnstenv
cmp
or
repnz
xchg
sahf
test
xchg
leave
add
mov
cli
sub
pop
inc
add
in
repnz
lea
popf
mov
xchg
rcll
add
out
xchg
adc
jmp
movsb
inc
push
inc
jg
ljmp
mov
adc
xor
mov
push
mov
out
fildl
flds
and
push
jge
adc
insl
stos
movsl
scas
mov
jne
xlat
and
sub
push
dec
add
dec
push
popa
imul
jno
lahf
fidivl
testb
adc
std
ss
xor
lahf
push
mov
mov
pop
jb
pop
cwtl
loope
push
icebp
sub
cmp
sub
xlat
stos
mov
gs
pop
push
push
loop
cld
dec
and
jp
out
data16
xchg
jmp
push
hlt
and
mov
cmpsl
pusha
xchg
mov
loop
out
push
mov
inc
and
ds
pop
mov
sti
push
sbb
in
or
jle
es
lahf
in
mov
mov
outsl
and
in
sub
pushf
data16
pusha
cmp
fcoms
xchg
iret
repnz
outsb
das
dec
mov
mov
mov
mov
push
sbb
xor
inc
xor
mov
int3
divb
jmp
cmp
test
nop
dec
imul
in
leave
and
inc
pushl
arpl
notb
inc
jnp
sbbl
mov
push
in
cmpb
pop
inc
sahf
andl
fsub
sbb
not
sbb
pop
jno
and
lret
mov
repz
pop
inc
xchg
inc
in
jae
sub
dec
lods
push
xchg
popf
cmpsl
mov
cld
clc
mov
adc
lret
mov
sub
inc
mov
out
dec
xorl
loope
xor
aaa
dec
dec
dec
adc
xor
movsl
outsb
js
mov
scas
add
stos
inc
cli
ss
lret
loopne
jle
cmp
fcoms
repnz
push
out
sub
out
stos
gs
fistpl
into
push
enter
and
pop
imul
iret
test
or
add
xchg
mov
addl
stos
repnz
sub
insl
and
mov
jg
xchg
std
movl
into
adc
clc
push
pop
or
pop
or
mov
xchg
enter
leave
or
sti
push
pop
xor
push
pop
push
mov
cwtl
js
xchg
cmc
mov
repz
mov
cmp
cwtl
jg
outsb
lds
mov
int
mov
mov
leave
outsb
add
push
mov
mov
xor
test
mov
stos
shll
add
inc
ja
push
dec
inc
ror
inc
outsl
xchg
and
add
cmp
inc
js
jle
les
mov
mov
call
in
es
or
out
das
dec
mov
stos
movsl
and
cmpsb
out
loope
and
push
aaa
cmc
cli
xor
shll
xchg
cwtl
shl
in
xor
popa
or
insl
mov
into
push
daa
xchg
mov
test
jl
inc
pusha
lcall
pop
enter
cmpb
sbb
cltd
test
xchg
push
mov
xchg
stos
add
inc
sbb
adc
jnp
cmc
pop
ss
aad
iret
repz
in
adc
add
out
and
or
sahf
add
imul
fdivs
hlt
decb
adc
sub
imul
mov
leave
and
loope
inc
inc
cmp
and
xor
mov
leave
in
sub
and
pop
inc
cld
es
es
cli
gs
int
ret
loop
fadds
cli
hlt
shrb
push
inc
mov
pop
xchg
mov
mov
cmc
dec
fisubrs
popa
cmp
ss
jge
xchg
fwait
sarl
int
ficoms
aam
adc
sti
xor
aas
bound
jbe
pop
jmp
mov
mov
into
pop
sub
push
mov
jl
xor
mov
or
add
adc
pop
push
inc
lcall
jno
je
enter
add
insb
cli
cmp
sbb
inc
rcr
in
dec
xchg
cld
fwait
scas
call
sbb
mov
xchg
cmpsl
mov
in
lret
add
cmp
inc
dec
cmpsb
rclb
inc
jge
imul
aas
ja
in
sbb
repnz
jne
imul
out
fldl
dec
sti
adc
pop
inc
cli
ss
sbb
je
pushf
pop
xchg
mov
hlt
cwtl
add
and
xor
dec
js
popa
push
add
xchg
stc
ret
loopne
hlt
decb
adc
xor
inc
xor
test
int
fdivp
mov
leave
out
rcrb
dec
sub
xchg
imul
jno
lahf
enter
loop
lret
pop
pop
cmp
das
push
sub
lcall
xchg
sahf
test
mov
pop
hlt
or
sbb
inc
dec
pop
cmpb
mov
es
jo
sti
out
test
sub
jo
in
xchg
movsl
cmp
mov
mov
movsb
loop
inc
cld
aaa
popa
pop
aam
cmp
pop
xchg
out
inc
fiaddl
shl
mov
or
and
std
sub
inc
outsb
fisubl
xor
fwait
int3
out
fsubs
pop
mov
lock
mov
in
mov
in
test
repz
jae
pop
jp
jbe
fcoms
xchg
sub
add
cmpsl
ja
dec
push
cmpb
cmp
rcrb
mov
add
adc
inc
xor
and
fimuls
ret
mov
adc
ficoms
cmp
dec
xor
jle
mov
mov
jg
out
mov
xor
pop
sub
insb
jbe
mov
cmpsb
or
movsb
daa
mov
and
xchg
js
lea
add
cmp
and
cmp
icebp
sub
jo
sbb
out
fldenv
loop
testb
adc
sub
cmp
jg
xchg
jp
sub
push
add
sbb
cmovno
push
sbb
jbe
stos
test
ja
aad
neg
mov
dec
sub
sysenter
fwait
outsb
js
mov
scas
add
aaa
lock
push
inc
jo
push
dec
xchg
insl
mov
aam
or
sti
es
add
jmp
pusha
lret
popa
nop
loopne
xor
add
ffree
and
dec
jg
xor
push
mov
jecxz
xchg
rorb
jbe
adc
push
xor
pop
xchg
ret
fidivl
jle
repz
sahf
mov
imul
imul
push
mov
push
test
roll
inc
outsb
sub
out
lods
push
push
rorb
data16
or
or
adc
dec
jp
jnp
inc
jp
outsb
lret
xchg
test
cmp
aad
scas
sti
adc
imul
pop
lds
sbb
into
push
xor
inc
cmp
subl
lock
pop
add
mov
push
cmp
xchg
mov
add
mov
sub
sbb
das
pop
cmp
mov
shrb
jge
es
sbb
cmp
jl
cmpsl
sahf
xor
les
cmc
out
loope
fistps
and
inc
imul
lret
add
int
imul
loopne
lds
call
dec
sbbl
in
fimuls
sar
loope
les
arpl
dec
adcl
mov
cmpsb
or
dec
clc
push
cmp
cmp
lahf
dec
orl
gs
aas
fdivp
sub
dec
adc
cmp
inc
ds
aad
jmp
adc
cmp
push
add
mov
int
cmp
ficoml
lret
out
leave
test
xchg
or
mov
negb
sbb
out
clc
adc
adc
jl
or
cli
fnstenv
inc
das
sub
cmp
outsb
stos
inc
mov
int3
popa
vmwrite
cld
push
mov
test
dec
das
xor
mov
mulb
add
push
sub
cmc
add
fs
fisttps
cmp
cld
mov
daa
push
or
cmpsb
nop
dec
imul
ret
push
xchg
pop
pop
adc
push
mov
and
or
idiv
mov
adc
into
ja
jmp
jmp
pop
or
hlt
outsl
sbb
pop
xchg
mov
fsub
shlb
push
jl
xchg
push
cli
inc
jno
pop
mov
cltd
sarl
sbb
sbb
inc
movsl
stc
fldpi
sub
popf
push
mov
icebp
mov
lea
insb
jecxz
sbb
std
jl
inc
outsl
into
lahf
test
frstpm(287
out
stc
add
inc
icebp
loope
cli
or
into
mov
mov
and
or
jnp
cmp
jo
push
mov
rclb
repnz
push
fimull
xchg
loop
mov
jae
push
xchg
inc
mov
stos
xor
and
inc
mov
xchg
int3
test
mov
leave
out
xchg
sbb
sub
xchg
ja
jbe
lret
repz
testb
mov
pop
inc
jo
xchg
cmp
out
in
movsl
jae
ljmp
nop
xchg
aas
fsubrl
xchg
xchg
dec
fimuls
mov
pushf
pop
ljmp
inc
mov
notl
pop
pop
inc
pusha
addl
mov
push
mov
dec
cli
dec
mov
popa
cld
imul
mov
cmp
decb
adc
and
sub
subl
add
add
adc
stos
test
or
jp
inc
aaa
leave
jo
and
flds
pop
pop
divb
cmp
jp
mov
movsb
int3
rcrl
or
sti
sbb
inc
dec
jbe
outsb
xchg
push
jns
mov
test
movsb
fildl
popa
stc
cltd
xchg
xchg
inc
cli
xor
adc
xchg
lods
or
jg
fbld
ficoml
cmp
xor
or
mov
in
fmull
ret
out
add
dec
jne
pop
testl
mov
xorl
cli
pop
aas
ljmp
mov
lods
push
xchg
cs
mov
out
mov
sub
and
movsl
pop
sbb
mov
stos
xlat
xor
imul
mov
and
sbbl
xchg
dec
mov
xchg
pop
loop,pn
cmp
cli
inc
mov
bound
mov
insb
cmpsl
lret
or
and
gs
jns
sub
icebp
test
das
jmp
xor
lock
pushf
push
lea
aam
or
add
jecxz
data16
adc
xchg
out
subb
mov
arpl
sbb
cmp
ds
push
adc
insb
mov
bound
fstl
dec
int
dec
jbe
outsb
lcall
stos
ljmp
cltd
nop
inc
std
xor
adc
clc
jge
mov
cltd
rorl
mov
cmp
mov
insl
jl
dec
jl
das
mov
call
out
lock
in
dec
add
testl
mov
xorb
ljmp
loope
push
jg
jae
imulb
xchg
into
ljmp
sbb
and
push
push
test
sbb
xchg
fldenv
mov
mov
sub
dec
push
sbbl
push
mov
push
dec
add
pop
fcompl
pop
push
dec
test
xchg
mov
rorb
sbb
lahf
dec
xlat
xlat
test
aas
jae
adc
push
mov
bswap
out
dec
pop
sar
pop
sbb
jg
orl
scas
int
lea
add
dec
add
aaa
push
lcall
dec
lcall
clc
sbb
cmp
cmpl
push
sarl
in
dec
in
jl
sub
sbb
mov
outsb
cwtl
jae
test
xchg
out
imul
mov
push
sbb
repz
pop
fwait
movsl
iret
popf
mov
cltd
into
sbb
das
in
and
push
fsubrp
je
inc
jle
sub
out
mov
iret
not
out
sbb
add
aaa
push
pop
sbb
adc
mov
gs
fsub
pop
clc
add
xor
mov
leave
push
pop
arpl
mov
or
xor
inc
addr16
jl
jne
fcoms
xchg
inc
ret
add
mov
push
lahf
jge
mov
jo
rorb
int3
add
mov
mov
pop
jge
cmp
scas
mov
divb
pop
dec
add
bound
pop
xchg
mov
jo
rcl
fsub
or
add
jmp
outsl
sub
sbb
popf
negl
xchg
enter
push
adc
adc
pop
sbb
fs
aam
aad
data16
lret
add
mov
dec
push
jle
data16
int
inc
jnp
fistps
xchg
popf
sub
repnz
or
jg
andb
ja
out
rorb
xor
sub
adc
test
fdivrl
aas
clc
mov
adc
inc
call
jg
sub
fldenv
fstpl
or
xor
dec
pop
inc
cmpsb
bound
lret
jb
push
xlat
ucomiss
push
pusha
mov
stos
gs
jmp
sti
mov
sbb
sub
sub
xchg
ja
imulb
add
icebp
adc
out
movb
jle
and
mov
stc
dec
add
xor
cmp
test
ret
int
data16
and
adc
scas
icebp
and
mov
sahf
pop
fcoml
stos
loop
je
sbb
sub
lret
fwait
and
pop
inc
jp
in
scas
mov
scas
loop
jmp
loopne
inc
add
jecxz
cmp
jne
and
pusha
iret
arpl
sub
and
mov
imul
jns
adc
loopne
sub
dec
push
sbbl
push
mov
push
mov
pop
jp
cmp
sub
lods
mov
divb
jecxz
inc
add
loop
xor
je
adc
dec
mov
leave
test
add
push
sub
fwait
pop
cmp
test
sub
cld
push
ss
inc
movb
mov
jns
ret
add
lret
icebp
xor
jmp
cmp
pop
jne
push
push
inc
jecxz
mov
mov
loope
or
lds
add
mov
mov
and
or
data16
out
sbb
iret
popf
mov
dec
rep
out
or
in
add
mov
add
popf
pop
xchg
mov
in
arpl
pushf
dec
pop
inc
push
imull
ds
mov
imulb
or
stos
je
ds
sti
jmp
push
mov
inc
mov
or
inc
cld
xor
pop
xor
int
xchg
scas
inc
inc
in
movsl
loopne
add
sbb
inc
pop
jmp
xchg
push
mov
add
add
pop
pop
push
lock
fisubl
sarl
in
movsb
loopne
add
iret
adc
out
ljmp
les
or
push
cltd
cltd
inc
cmp
arpl
push
mov
xchg
mov
inc
out
test
or
ja
mov
inc
pop
out
out
xchg
inc
mov
pop
mov
negb
push
push
pop
jecxz
inc
pushw
sarb
fistps
sar
insl
adc
fimuls
mov
cmpsl
push
mov
negb
push
pop
loop
ss
ret
stos
test
add
pop
int3
add
xor
icebp
loope
dec
subl
add
stc
cwtl
mov
repnz
pop
out
in
data16
ret
scas
mov
add
or
lock
insl
pop
aaa
dec
loope
mov
stos
daa
cmpsb
mov
sbb
fdivrp
mov
adc
cwtl
std
mov
mov
aad
cli
add
lock
cmpsl
jno
xor
loopne
dec
test
jo
dec
sbb
loope
cmp
das
pop
adc
dec
push
pushf
clc
ret
cmpsl
ss
sahf
flds
std
rol
repz
cmpsl
jno
ss
in
mov
sahf
es
sahf
adc
push
sbb
loope
dec
aam
push
pop
push
sbb
iret
popf
mov
dec
rep
out
fnsetpm(287
adc
and
xlat
mov
adc
lods
fchs
ljmp
push
sub
fmuls
jnp
test
push
les
fs
adc
outsl
cmp
jne
pop
lea
loopne
mul
rcr
outsb
sbb
or
cmp
test
movsb
ss
add
push
mov
ret
push
insb
incl
stos
addr16
leave
xchg
mov
xlat
je
mov
xor
addr16
ficompl
fwait
movsl
ret
lahf
sub
push
and
jecxz
xchg
nop
inc
sti
xor
jmp
or
sbb
shrb
sar
lock
sub
adc
popf
js
pop
aad
test
mov
pop
hlt
adc
inc
dec
pop
mov
hlt
icebp
stos
push
pop
repnz
int3
into
dec
add
dec
add
testb
pop
mov
adc
mov
xchg
cs
cmp
cmp
jmp
imul
jmp
mov
loopne
mov
adc
xor
sbb
pop
adc
test
add
mov
lret
out
xchg
ret
mov
xor
cmp
jnp
insb
movsl
roll
xor
mov
push
mov
push
aas
stos
or
rcr
bound
cmp
add
scas
pop
add
dec
push
shrl
repnz
pop
sbb
jg
jno
inc
xchg
repz
mov
test
pop
push
adc
and
cmp
push
ret
jle
xchg
pushf
cmpsb
std
jb
cwtl
loop
mov
mov
cmp
pop
jbe
pop
pop
mov
lods
pop
lret
mov
dec
test
push
cmp
out
adc
xchg
mov
inc
adc
xlat
loop
test
int
fidivrl
inc
pop
in
insb
pop
popf
xor
fcmovb
xchg
stos
aad
jecxz
in
jmp
push
adc
xchg
ds
jmp
dec
leave
ret
clc
cmpsl
add
ja
fcmovnbe
push
jle
test
xchg
mov
fdivr
out
in
mov
ljmp
jg
mov
into
sub
or
xchg
pop
dec
and
rcl
jp
jbe
aad
sub
icebp
outsl
aas
or
iret
ljmp
cs
sub
pavgb
popa
mov
fucom
icebp
sub
add
inc
dec
push
mov
outsb
fcom
xchg
fwait
movsl
scas
mov
call
sbb
cmpsb
lret
sahf
jns
ret
insb
fxch
jle
adc
dec
lds
scas
mov
xchg
cmpsl
sbb
adc
xor
test
cltd
test
mov
xchg
mov
and
jo
test
jne
das
dec
jo
jp
mov
lret
jp
aad
shl
std
loopne
cmp
jp
fwait
imul
and
lcall
loopne
push
sbb
mov
les
out
mov
outsl
lret
rolb
and
mov
xchg
jno
int
dec
leave
imul
imul
loope
inc
jo
enter
pushf
shll
out
call
push
adc
icebp
sbb
pop
addr16
test
mov
inc
jp
rcr
xchg
pop
lods
jecxz
cmpsl
mov
lret
sbb
adc
xor
dec
mov
movsb
pop
cwtl
subb
mov
cmpsl
inc
cmp
rorl
insb
cmpsl
push
mov
mov
or
pop
or
adc
fs
int3
mov
and
and
adc
out
fcoml
push
xchg
test
xchg
fwait
mov
ret
in
push
adc
fs
inc
dec
push
clc
cli
mov
loopne
ds
shrl
fldenv
sub
or
sti
gs
push
pop
jl
sahf
test
jp
rcr
in
int
and
sub
or
xchg
mov
mov
or
inc
xor
inc
pop
xchg
in
lcall
shlb
repnz
xlat
out
out
dec
js
or
mov
leave
push
out
cwtl
sbb
lock
push
ljmp
push
test
scas
mov
fmull
or
jne
or
push
xchg
pusha
push
outsl
mov
sbb
and
ja
daa
imul
gs
xchg
mov
mov
adc
bnd
mov
enter
cmp
pop
pop
jne
xchg
nop
lea
push
cmpsl
popa
iret
enter
sahf
or
test
dec
push
sbbl
push
mov
aad
xlat
aas
sub
repz
sbb
aam
sub
ljmp
inc
psadbw
in
and
xor
inc
dec
movsb
push
xchg
das
pop
mov
mov
out
clc
add
adc
fcoml
test
or
jp
xor
rcrl
and
repnz
and
andl
popa
xchg
and
aam
fdecstp
push
pop
push
rorb
inc
outsb
das
bound
mov
pop
cwtl
int
mov
push
adc
dec
pop
inc
ja
bound
pop
pop
add
or
les
inc
insb
inc
fs
dec
or
inc
jge
loopne
aam
push
out
popl
sub
push
aas
and
jae
cmpsl
orb
jns
jmp
mov
mov
cmp
arpl
inc
jb
and
out
test
ds
xor
insb
pop
int
nop
fwait
lds
cmc
lcall
xor
rolb
inc
push
lock
xchg
mov
insl
lods
out
or
add
andb
pop
jbe
ss
push
test
mov
divb
jecxz
inc
add
arpl
mov
mov
cmp
add
and
cmp
hlt
push
sub
outsb
fcoms
fcoml
fcoms
sbb
fs
push
mov
mov
test
arpl
bswap
add
lahf
and
sbb
dec
push
jg
ja
push
mov
xchg
dec
mov
bound
lcall
ficoml
ss
jle
mov
stos
xchg
adc
daa
rcrl
aas
popf
vpminub
xchg
test
cmpl
add
or
aam
cld
or
test
test
sbb
or
out
xor
sub
and
inc
js
jmp
aaa
inc
dec
fistps
repz
sbb
imul
js
fdivs
sbb
ds
or
mov
dec
pop
sbbb
popa
xchg
in
pop
xchg
enter
adc
pop
push
or
cmp
mov
mov
es
js
or
xor
dec
xchg
lret
sub
les
add
xchg
out
push
fistl
cld
cmpsl
push
or
and
xorb
xor
std
popa
cmp
jp
out
lret
add
imul
push
pop
subl
int3
hlt
xchg
stos
xchg
rorb
ss
daa
jne
ret
sub
imul
sbb
sbb
add
jne
push
push
inc
lds
jecxz
shl
or
pop
rcl
js
insb
xchg
inc
jg
mov
int
jnp
push
fisttps
xor
sub
imul
xorl
pop
cmp
sub
pop
mov
sbb
loop
xlat
jle
sbb
push
cmp
xor
pop
mov
movsl
mov
sub
push
fsubr
loop
xor
rol
outsl
arpl
sbb
xor
in
or
sbb
xor
inc
dec
pop
arpl
jns
lea
fsubrp
repnz
cmp
dec
ds
cwtl
jmp
mov
ds
add
adc
jae
ret
andl
int
insb
call
sbb
loop
arpl
sbb
decl
fwait
lods
pop
fdivs
add
adc
push
icebp
es
nop
jg
addr16
pop
jne
sub
lcall
orb
lds
push
jne
test
xchg
mov
cli
mov
push
rorb
outsl
sbb
scas
sbbl
imul
scas
test
pop
cmp
xor
popf
shlb
fs
fscale
icebp
adc
std
adc
cmpsl
push
fdivrl
dec
xor
mov
into
adc
push
pop
lock
pop
inc
ja
es
push
xorl
daa
bswap
sti
push
pop
or
das
sbb
ret
xchg
rclb
in
jmp
notl
cmp
mov
popf
cmpsl
rcrl
push
cmpsl
xchg
loope
nopl
push
loope
xchg
sahf
imul
scas
xchg
in
out
call
jmp
iret
or
jp
xchg
sahf
cmp
inc
jge
loopne
mov
movsl
cli
es
or
xchg
jmp
rol
andb
out
aad
in
sbb
sti
sub
push
jb
push
cld
mov
xchg
xchg
les
pop
out
cwtl
rorl
xchg
push
pop
xchg
fwait
das
scas
lret
xchg
or
adc
inc
sub
in
push
add
enter
dec
stos
sahf
mov
cs
mov
jle
data16
test
outsl
mov
sbb
loopne
or
call
jg
xor
xchg
xchg
dec
jecxz
jmp
add
sbb
cmp
repnz
and
int
inc
xor
xchg
js
out
sti
and
test
testl
mov
mov
test
adc
adc
fsts
cmp
mov
out
push
cmp
mov
pop
lret
cmp
fwait
pop
aad
sub
iret
jno
xchg
mov
xchg
stos
xchg
into
icebp
xor
movsb
loopne
xor
pusha
mov
movb
jnp
out
inc
dec
push
rcll
cmp
repz
subb
loope
push
jl
cli
movsl
adc
cmp
cmp
das
or
cmpsl
push
cmpsb
adc
mov
insl
aaa
push
stc
sbb
and
push
mov
bound
test
andb
stos
add
or
pop
std
sub
mov
insl
xchg
push
xorb
pop
add
lahf
push
test
out
mov
subb
loopne
loop
push
mov
push
mov
or
mov
icebp
stos
int3
add
pop
dec
and
rcl
jge
fs
insl
mov
and
bound
repnz
cmp
jle
shl
jno
pop
jecxz
pop
mov
add
sbb
dec
cmp
std
std
sbb
lods
sub
popa
sub
dec
in
mov
push
test
aad
fwait
cmpsb
out
mov
cmp
lock
add
sbb
inc
lahf
mov
jb
ret
subb
ret
mov
or
sub
cmp
jg
pop
enter
mov
ljmp
andb
test
rol
test
mov
jle
cld
sub
js
dec
pusha
lods
xlat
xchg
das
test
jmp
mov
cmp
inc
push
pop
data16
inc
jge
pop
cwtl
add
cmp
or
inc
sti
cmp
notl
int3
mov
addr16
sbb
fdivp
cwtl
mov
xor
inc
xor
mov
int
stos
and
out
mov
sbb
push
inc
enter
mov
lret
mov
into
and
in
sbb
or
imul
jnp
cmpsl
scas
mov
jmp
les
mov
xor
int3
leave
orb
rorb
push
loop
cmpsb
sbb
dec
fildll
jbe
mov
ret
loope
aam
mov
mov
dec
ja
test
int
xchg
mov
pop
aad
sbb
sahf
mov
pushf
xchg
dec
imul
mov
fwait
xchg
pushf
inc
jb
lock
jmp
mov
sub
ja
rorb
adc
sub
xor
lods
add
push
mov
data16
mov
rorb
dec
cli
cmc
in
cmp
add
pop
mov
rcr
lock
and
call
aas
les
inc
lret
xlat
fimuls
fldcw
sbb
jns
cmp
lret
push
jle
addr16
lcall
push
or
push
cmp
sbb
pop
outsb
jge
lds
or
loope
xor
in
outsl
daa
shrb
adc
orb
xor
ljmp
mov
nop
fwait
lds
ret
ficoml
mov
imul
add
cmpsl
inc
pop
cltd
dec
clc
mov
lea
adc
fs
bound
jae
inc
fiaddl
adc
push
xor
test
or
mov
loope
push
aad
test
or
mov
push
cmp
sarl
pop
orb
shrb
jmp
movsl
cmpsl
push
or
ss
push
xchg
stos
gs
jp
ret
sbb
fdivrp
out
iret
sbb
sub
xor
enter
ret
int
push
adc
dec
jmp
repnz
and
mov
xor
std
xor
push
subl
lahf
jle
in
pop
lret
xor
sub
or
jo
pop
outsb
inc
xor
ja
pop
xlat
mov
add
clc
mov
fisttps
std
fwait
test
test
mov
mov
mov
adc
scas
in
push
gs
jb
xchg
ret
loope
and
out
inc
xchg
mov
adc
ret
stos
test
adc
int
sahf
leave
sub
sub
pop
mov
imul
jb
sbb
shrl
aaa
inc
lock
push
lea
mov
aad
cwtl
mov
fistpll
repnz
adc
dec
cmc
sub
mov
xchg
inc
xchg
icebp
out
cmpsl
dec
movsl
adc
out
call
dec
add
arpl
mov
add
xchg
xchg
stc
cld
mov
cmp
and
out
jl
cs
dec
push
pusha
push
xor
ret
sbb
in
ja
or
sub
enter
xor
test
decl
adc
sar
insb
sub
cmp
push
pop
inc
sahf
add
loopne
mov
add
cmp
sub
cmp
xor
scas
or
pop
push
xchg
imul
mov
mov
popf
rcrl
sbb
lds
out
and
xor
inc
dec
dec
and
dec
or
test
arpl
or
push
mov
push
sbbl
jno
lds
cmpb
test
pop
rdtsc
add
xlat
loope
gs
fidivrs
jmp
notl
jge
dec
jo
clc
mov
shrl
das
lods
aaa
inc
ljmp
in
jmp
fcmovnbe
fimuls
jecxz
cmpsb
add
bound
scas
cmpsl
pusha
or
jg
xchg
pushf
dec
jne
daa
and
or
fistpl
in
ja
sub
es
imul
pop
int3
ret
int
add
cmp
cmp
outsb
js
lods
gs
or
jle
pop
dec
push
sbb
out
or
or
mov
fwait
imul
mov
cs
imul
sbb
cld
dec
inc
pushf
adc
pop
mov
fs
pop
mov
xchg
loop
xchg
jnp
fmuls
inc
clc
inc
lea
dec
ja
es
jl
push
mov
pop
repnz
clc
in
mov
data16
lods
push
xchg
stos
jbe
push
push
push
xor
add
pusha
stos
je
sub
popf
jmp
mov
icebp
sti
mov
mov
or
jae
cmp
dec
inc
push
ss
or
add
adc
dec
add
sbb
lds
subb
jnp
xor
loop
testb
push
fisubrs
xor
jae
pop
jae
outsb
lds
push
xlat
movsl
aad
push
or
cmp
cmp
outsb
js
sahf
dec
jp
add
js
fsubs
sbb
inc
lahf
mov
sub
out
fsubl
mov
sub
adc
pop
jnp
and
es
hlt
loope
fmulp
fcoms
sbb
cmp
inc
xchg
mov
adc
stc
ret
stos
test
fidivl
jmp
aas
xor
push
popa
mov
sub
mov
cmpsb
shrl
push
jp
pop
pop
les
cmp
repnz
mov
and
push
mov
rorb
or
shll
lods
fsubrs
xchg
jle
aad
fwait
outsb
rcl
shll
das
call
fidivs
nop
mov
std
xor
movsb
dec
sahf
sti
mov
mov
sub
in
pop
cmc
adc
inc
ja
dec
mull
xchg
fwait
movsl
iret
stos
lds
out
and
pop
adc
pop
sub
push
xchg
hlt
icebp
stos
mov
jp
lahf
movl
mov
addr16
shll
enter
loop
testb
adc
sub
cmp
jg
dec
daa
movsl
jmp
lds
or
call
sub
sub
sub
jno
adc
stos
and
add
jae
outsl
sbb
jg
lea
sub
test
inc
inc
mov
push
data16
adc
mulb
xor
and
mov
xchg
popf
cmpsl
mov
jno
or
decb
adc
xor
inc
xor
mov
gs
fsubrp
adc
pop
mov
add
cmp
nop
cmp
sbb
cmp
arpl
ss
stos
mov
sub
xor
mov
scas
pop
mov
int3
adc
daa
xor
xor
pop
outsb
and
mov
mov
xchg
repnz
dec
add
add
cld
ss
push
push
or
push
mov
mov
cli
ret
int
pop
jne
adc
in
adc
scas
cmp
inc
pop
or
push
mov
test
movsb
cs
loopne
mov
cmc
push
cmpsb
lahf
pop
or
aad
fwait
lahf
rclb
push
lret
push
outsl
insb
and
add
leave
jg
mov
and
fnstenv
mov
pop
dec
xorl
inc
pushf
cmpl
shl
out
and
pop
aaa
dec
notl
std
mov
sbb
roll
daa
and
aaa
pop
or
mov
mov
push
outsl
mov
clc
sbb
jb
pop
jl
xor
jno
lahf
push
aad
loop,pn
in
std
xchg
pop
dec
sub
push
jg
mov
pop
inc
cmp
int
mov
adc
or
dec
rorl
xchg
inc
or
push
sbb
sub
pop
jp
inc
dec
push
pop
imul
ffreep
cmc
aam
lret
adc
sub
inc
insl
inc
pop
or
and
jp
in
out
inc
cmp
dec
sbbb
sti
inc
xchg
fwait
add
testb
ficoml
mov
mov
icebp
out
push
sub
mov
lds
scas
cmpb
test
jo
movsb
jg
inc
pushf
cmpl
cld
fdivrl
adc
inc
pop
cmp
mov
sub
add
mov
shlb
jge
aaa
fldenv
jp
imul
scas
push
popf
sub
inc
push
push
adc
pop
ljmp
jg
jno
lahf
push
cmpsb
xor
loop
sti
rorb
aaa
or
inc
into
xchg
in
mov
cmp
mov
xor
jbe
cmp
push
pop
inc
sahf
add
fdiv
daa
or
add
push
xlat
loop
or
cltd
int
mov
ret
and
icebp
popf
imul
and
ja
jns
mov
lds
dec
or
xor
outsl
or
es
lcall
fimull
ret
pop
or
stos
je
ds
add
and
pop
adc
test
push
push
or
cltd
push
cld
push
cmp
sarb
dec
xchg
cli
and
adcb
scas
jnp
cltd
movsb
xchg
out
std
into
out
andb
pop
test
add
js
pop
imul
xorb
lock
adc
dec
test
mov
mov
push
hlt
fbstp
addr16
cmp
jg
xchg
and
xchg
fwait
movsl
shll
std
cmpsb
or
mov
cltd
outsb
xor
int3
xchg
mov
sarb
sbb
mov
icebp
sub
adc
insl
scas
inc
add
xchg
in
loopne
addr16
xor
popa
cmp
mov
xchg
int
outsl
or
dec
notl
lahf
pop
ss
add
loop
mulb
movsl
adc
fdivl
popa
dec
mov
loope
test
test
mov
xor
inc
dec
pop
arpl
jns
lea
jg
xor
inc
cmc
sbb
fninit
push
xchg
mov
jge
clc
mov
mov
mov
dec
push
mov
pop
sahf
test
cmp
cs
rcll
and
repnz
push
adc
cmp
test
jne
mov
lahf
fidivl
testb
adc
std
xor
inc
jnp
xchg
fwait
movsl
rorl
push
or
leave
adc
and
test
and
movb
mov
inc
cmp
cmc
dec
push
lea
jae
xlat
imul
or
pop
add
cmp
ja
bound
mov
js
sub
xchg
sarl
dec
sbb
jbe
push
xor
cmpsl
xor
shr
je
fwait
add
sbb
sub
xchg
fnstcw
lcall
jnp
jmp
pop
sub
cmp
inc
addl
mov
nop
jecxz
lods
repnz
and
or
addb
add
sarl
jmp
add
cmp
add
and
fcoms
insb
or
sub
or
cmp
js
pop
cmpsl
mov
les
or
add
movsb
dec
aad
push
repz
mov
xchg
aad
or
popl
xorb
ret
adc
mov
lock
and
pcmpeqd
mov
mov
lret
test
ret
iret
cmp
sub
or
stos
or
ffree
jle
out
lods
in
sbb
montmul
cmpsb
inc
divl
dec
xchg
push
xchg
shrd
in
stc
add
inc
ja
insl
cmpsb
push
test
xchg
sarl
in
decl
hlt
daa
push
push
dec
jb
and
or
jle
das
popf
sar
cmpsb
lret
push
mov
sub
rcl
jecxz
dec
jl
dec
jle
scas
in
adc
jmp
mov
cmpsb
adc
xchg
jnp
pop
xchg
mov
divb
stc
xor
push
adc
cmp
jecxz
insl
test
iret
in
testl
add
jne
pop
fwait
movsl
scas
mov
in
xlat
into
or
add
out
mov
sti
inc
lahf
in
mov
pushf
sti
aas
push
es
das
mov
push
lcall
mov
movsb
loopne
inc
add
mov
xchg
dec
xchg
ret
push
leave
add
dec
sbb
dec
pop
arpl
subl
repnz
out
leave
dec
stos
pop
pop
loope
jle
ja
insb
xchg
dec
cltd
mov
cmpsl
mov
dec
leave
in
in
imull
push
sub
sarl
xorb
mov
out
inc
sbb
test
mov
jge
xchg
mov
lds
int
lret
inc
dec
cmp
sub
jno
inc
xor
enter
ret
int
insb
out
fisttpl
push
push
pop
inc
pop
cmp
cmp
mov
pushf
mov
fsubs
sub
inc
mov
pop
xor
lods
loope
jnp
ret
int
shr
xchg
shl
xor
dec
sbb
jne
clc
mov
repz
dec
add
int
add
push
sahf
pushf
inc
xor
fwait
arpl
fucomip
repz
cmc
test
icebp
push
mov
jl
cs
loopne
push
mov
mov
nop
mov
pop
and
out
in
insl
mov
mov
in
lret
outsb
jne
dec
xchg
mov
cmpsl
mov
or
lcall
pop
sub
dec
bound
loop
cwtl
in
pushf
add
call
xor
cmp
push
pusha
pushf
cmp
mov
lds
loope
addl
lock
push
mov
int
jns
iret
dec
push
and
jmp
notl
stc
sahf
sub
mov
rcrb
dec
out
pop
cmc
xor
jo
in
xchg
insb
mov
add
loope
jno
das
stos
stos
fs
add
sbb
pusha
and
sbb
sbb
hlt
push
pop
push
enter
rcrl
or
sbb
aam
imul
dec
stos
divb
adc
scas
push
add
test
xchg
pushf
pop
pop
cmp
lock
ljmp
sub
mov
ret
push
popf
cmpsl
dec
cmp
xor
or
push
inc
lahf
imul
jp
movsb
into
repnz
inc
inc
in
cmpsl
lret
mov
pop
inc
pop
cmp
push
shrl
mov
in
sub
adc
adc
and
inc
stos
ret
mov
mov
xlat
add
jne
dec
xor
outsl
mov
mov
push
clc
xlat
icebp
test
jmp
cld
pop
cmc
xor
jo
mull
call
ret
push
cld
cmc
jno
push
sbb
lcall
push
adc
xor
lea
cs
aas
pop
sbb
sbb
mov
cmpsb
mov
push
push
adc
add
or
mov
inc
jne
lcall
pop
jne
inc
push
repz
sti
dec
test
inc
repnz
daa
sarl
imul
cmpsl
lret
add
mov
and
pop
cmp
pop
sarb
or
mov
or
or
or
fmull
xchg
out
mov
pushf
ljmp
fnstsw
pop
dec
inc
outsb
das
push
scas
in
test
fstl
sbb
xor
dec
add
imul
inc
lods
mov
xor
or
push
clc
jecxz
inc
xchg
push
jbe
push
repz
sub
or
into
jmp
js
pop
mov
cld
popf
lds
sahf
inc
stc
cmpsb
fsubrs
outsl
mov
sbb
push
jp
adc
sbb
lret
pop
shr
pop
add
insl
popf
sar
pop
mov
mov
into
adc
dec
jne
add
fisttps
into
adc
sbb
jne
fs
daa
jg
stos
cmpsl
lds
or
add
inc
cmp
cmp
dec
xchg
iret
mov
add
or
inc
daa
sti
lods
outsl
xor
out
fcomi
out
add
adc
sbb
test
lea
xlat
ret
loop
roll
mov
out
inc
sbb
sbb
jg
jle
aam
xchg
pop
daa
dec
rcr
add
sbb
and
push
sub
xchg
dec
test
ret
mov
fisubrs
shrb
add
movsb
popf
push
pusha
mov
mov
pushf
loop
dec
ljmp
shl
imul
int
cs
mov
push
xlat
in
cmpsl
mov
rcrb
mov
stos
out
cs
jmp
dec
push
sbb
into
rclb
jl
jb
ret
stc
and
addr16
push
lret
imul
adc
mov
push
imul
sahf
aam
cli
sub
out
lcall
or
fildl
lahf
pop
jbe
sub
mov
sub
or
rorl
insb
and
jne
out
call
sub
ja
sti
mov
jmp
fcoms
lock
inc
test
lods
mov
mov
push
leave
add
hlt
sbb
mov
mov
add
push
push
cvtps2pi
mov
mov
push
ret
add
ret
jo
push
sbb
jb
repnz
cltd
mov
nop
mov
xchg
push
clc
lcall
idivb
pop
fwait
push
pop
push
or
pop
dec
das
repz
pop
xchg
gs
mov
scas
xor
rclb
xchg
push
testl
scas
lock
push
in
dec
dec
dec
add
push
xchg
mov
sbb
or
aad
jmp
ficoml
jne
imul
loopne
loopne
adc
pop
push
lods
les
fadds
add
adc
push
loopne
ret
stos
mov
push
popa
mov
and
pop
push
jo
test
cwtl
int3
lods
sahf
dec
add
pushaw
popa
cmp
cmp
mov
ljmp
and
jb
cmp
mov
scas
scas
jge
cld
ljmp
inc
mov
dec
jbe
ffree
lret
push
mov
ljmp
pop
dec
inc
scas
push
xchg
jp
sahf
out
insl
mov
fxch
jnp
fidivs
add
scas
mov
jg
and
mov
xor
xor
fs
insb
dec
xchg
mov
mov
push
rcrl
xor
mov
test
jge
dec
xchg
fdivrl
iret
pop
inc
sbb
stc
sub
mov
jne
imul
int
shr
jnp
or
add
cmp
cmpsb
popa
lcall
or
out
leave
mov
jmp
jge
inc
jp
popa
inc
mov
dec
xchg
popf
cmpsl
jmp
add
add
and
inc
cmp
jo
test
jns
add
frstpm(287
out
stc
add
inc
sbb
push
jbe
insl
xor
sub
fstpl
fwait
cmc
fcomps
cld
cmp
hlt
pop
push
cmpb
test
jb
nop
into
mul
mov
sti
sbb
cmp
sub
push
mov
pop
pushf
enter
add
jmp
insl
sub
dec
jg
das
sub
in
jnp
loope
cmc
cmp
mov
es
add
pop
or
xchg
pop
fidivrl
rorb
inc
cmpsb
inc
pop
in
jbe
fcoml
pop
xchg
imul
lret
xchg
and
sbb
rolb
cmpl
xchg
dec
lea
sahf
adc
mov
sbb
lods
sbb
aaa
xor
adc
dec
test
rol
jbe
loopne
int
pop
jmp
mov
gs
push
andl
rcll
mov
aaa
lock
inc
call
sbb
ret
mov
in
aad
mul
or
push
or
dec
jl
imul
adc
push
pusha
dec
dec
jae
pop
mov
fwait
in
insl
or
out
mov
or
outsb
cmp
sub
dec
xchg
int
mov
cltd
sarb
fsubrs
push
or
aaa
sub
cmp
je
cwtl
xchg
mov
fdivr
cmpsb
in
mov
add
xchg
and
mov
cmpsb
hlt
mov
add
push
ret
and
or
adc
jle
movsl
jecxz
fistpll
into
sti
add
sbb
push
pop
js
pop
cmp
mov
shl
ljmp
push
mov
pop
xchg
mov
jl
in
mov
pop
push
je
cmpsl
mov
mov
shrl
es
pop
xor
outsb
lahf
cwtl
les
mov
out
stc
add
inc
sbb
add
push
cmpb
xchg
jb
pop
cmpsl
mov
mov
mov
loopne
hlt
decb
adc
xor
inc
xor
fwait
ret
jl
aam
call
notl
in
and
push
popa
imul
jno
lahf
dec
inc
pop
fmuls
sar
clc
adc
sub
popa
cmp
and
orb
cmpsb
or
pop
out
cmp
push
xchg
rcrb
leave
rcr
out
sti
out
and
or
sub
cltd
push
mov
lret
cmc
int3
call
or
sub
cmp
jg
or
lahf
aad
cmpsl
mov
xchg
int
fldenv
or
inc
dec
pop
arpl
subl
sub
adc
pop
fnstenv
push
scas
js
mov
scas
add
sbb
xor
data16
jne
outsl
rcrb
rcr
in
stc
add
inc
sbb
inc
xlat
push
cmpb
xchg
jb
popf
cmpsl
mov
mov
mov
loopne
hlt
decb
adc
xor
inc
xor
fwait
ret
jl
aam
call
notl
in
and
push
popa
imul
jno
lahf
mov
lds
fisttpll
pop
stc
in
lret
mov
pop
mov
jnp
movsl
scas
mov
fildl
sarl
sbb
xor
inc
jbe
xchg
ja,pt
mov
fidivrl
push
rcr
out
sti
out
and
inc
jo
fs
nop
fwait
movsl
inc
jge
fistps
pushf
scas
mov
inc
ljmp
xchg
mov
iret
mov
sbb
xchg
mov
dec
hlt
das
gs
mov
pop
xchg
sahf
test
mov
mov
and
xor
cmp
aas
mov
out
lods
adc
ljmp
xor
inc
dec
pop
arpl
jns
les
push
mov
xor
es
add
bound
cltd
leave
mov
movsl
in
sub
xor
adc
inc
aad
fdivrp
push
arpl
mov
ror
movsl
insl
mov
sub
jnp
in
mov
cltd
sbbb
pop
cltd
mov
xchg
cwtl
mov
and
sbb
std
xor
push
jecxz
mov
ret
xchg
mov
xchg
enter
and
or
sub
cmp
push
pop
inc
sahf
orl
cmp
popa
mov
xor
or
sarb
lret
aad
jmp
in
inc
push
jne
push
clc
imul
out
adc
je
in
mov
xor
and
sub
fcoml
rolb
mov
jl
push
xor
clc
add
mov
call
sub
sub
push
fwait
movsl
nop
imul
ljmp
fstpl
and
xor
pusha
push
push
mov
aas
xchg
fdivr
add
jnp
sbb
inc
das
les
push
jb
dec
cwtl
ret
mov
fwait
test
testb
or
mov
js
pop
mov
mov
xchg
loop
pop
cmc
adc
xor
jno
xchg
jbe
loopne
stos
hlt
push
and
jmp
dec
les
add
lret
aad
ds
jmp
out
and
push
popa
jg
push
push
push
das
mov
clc
add
iret
aad
pop
repnz
xlat
loopne
xchg
mov
iret
fucom
test
lretw
sub
xor
inc
xchg
and
enter
cs
dec
or
mov
pop
lods
outsl
pop
and
fcomp
mov
add
push
ror
imul
loope
pop
mov
xchg
out
dec
pop
inc
frstor
insl
mov
enter
test
vcmpnge_uqpd
and
aas
jno
jg
pop
test
rcrl
in
test
jl
int3
or
decb
jnp
insb
inc
addr16
dec
test
sbb
std
in
sub
fsubrs
pop
push
ja
xchg
inc
jnp
sbb
iret
lods
hlt
push
and
ret
push
out
jno
inc
add
outsb
mov
jo
icebp
stos
stos
mov
cmpsb
and
sbb
and
xchg
jecxz
aaa
outsb
mov
jns
clc
xlat
scas
lret
fisubrs
dec
push
fs
dec
out
push
jge
jg
xchg
jp
shrb
mov
in
xor
btr
sub
inc
mov
cmpsb
pop
xchg
lock
sbb
ret
and
inc
outsl
sub
or
mov
test
mov
scas
add
aaa
lock
sbb
add
push
nop
mov
or
sbb
loope
inc
int
inc
pop
push
addb
std
xchg
xor
sar
cmc
out
iret
jmp
push
pop
push
sub
xchg
sbb
mov
in
fs
loop
sub
and
ds
jne
scas
arpl
hlt
mov
pop
add
jb
imul
inc
push
das
mov
flds
scas
negl
jp
aas
clc
xor
dec
push
js
insb
cwtl
xor
rcrb
loopne
mov
push
rorb
cmpsl
push
lods
jg
xchg
jle
mov
push
lret
xchg
cmc
out
lret
sbb
out
inc
dec
aaa
stos
sbb
cmp
ficoml
mov
jae
test
push
or
les
in
movsl
loopne
repnz
fsts
cmp
sub
lea
sub
out
fistl
aaa
lock
push
dec
jo
cmp
dec
cmpsb
jns
lea
lock
loopne
cli
dec
push
pusha
dec
push
push
xchg
repz
into
and
pop
xchg
movsl
gs
pop
push
fcoms
adc
or
out
and
pop
xchg
jp
pushf
xchg
ret
loopne
addb
stc
daa
fistps
les
dec
pop
bound
mov
cmpsb
or
cmpsl
pop
add
leave
pusha
js
bound
stos
movb
cli
add
sub
and
cmp
pop
push
pop
xchg
iret
mov
std
mov
mov
dec
push
lret
test
inc
jle
in
add
mov
push
insb
pusha
pusha
stc
ret
int
lods
fcoms
outsb
cmp
or
rorl
outsl
mov
push
fsub
shrl
icebp
jmp
push
pop
dec
and
es
test
test
jge
ror
ficomps
ret
sti
push
adc
and
or
and
outsb
or
out
lods
js
and
and
sbb
adc
jge
ja
pop
mov
mov
nop
shll
ljmp
loope
inc
jb
fs
jp
ss
loop
mov
je
out
int
xor
into
xchg
aaa
arpl
dec
add
lahf
push
jge
lds
dec
outsl
cmpsb
int
shlb
into
pop
aas
mov
pop
fs
push
sahf
js
jge
sbb
sub
sbb
pusha
mov
call
mov
imul
sbb
xor
jg
adc
cmpsl
push
mov
and
push
add
add
pop
bound
sahf
test
lea
xlat
std
push
and
xor
imul
lea
stos
add
inc
lock
cmp
push
jp
mov
lret
sbb
flds
adc
and
or
sub
dec
jge
imul
std
xlat
lods
cwtl
rorb
aaa
repnz
pcmpeqw
popa
jl
movsl
pop
lcall
jmp
adc
or
movsb
dec
cmp
pop
pushf
xchg
vorps
mov
xlat
xchg
push
es
lret
jne
push
cmpb
jns
out
shl
mov
pop
push
fisubl
mov
mov
mov
xor
ss
stos
repnz
addb
pop
mov
add
aad
pop
ret
fcmovnb
incb
lcall
mov
mov
mov
adc
outsb
adc
adc
int
jle
xchg
decl
adc
cmc
mov
pusha
push
push
xchg
xor
inc
mov
les
mulb
add
push
cli
adc
mov
int3
repz
cmpsl
push
fsubrp
xacquire
loope
and
bound
sub
je
mov
test
loop
cwtl
orb
push
cli
push
add
pop
lods
jecxz
je
xchg
popa
mov
pop
cmp
leave
sub
dec
cmc
or
dec
push
xchg
ja
notb
jnp
push
xor
lcall
out
inc
pop
pop
push
lods
adc
aas
mov
mov
pop
mov
addr16
fs
mov
rolb
xchg
std
pop
adc
xchg
into
cmp
cmpsl
inc
cli
dec
aad
xchg
sahf
test
push
or
imul
aam
test
push
repz
xchg
aam
iret
mov
in
iret
mov
loop
insb
xor
inc
mov
arpl
mov
mov
inc
sub
and
jmp
or
fcmovnb
popf
clc
push
adc
inc
jb
and
sub
sbb
negb
or
lock
adc
test
xchg
pop
rorb
sbb
shll
sub
jno
mov
dec
cmp
jb
nop
cmpsb
pop
fsubrp
repnz
jmp
stc
xor
push
or
pop
dec
xchg
pushf
cmpsb
fidivrs
mov
xlat
cmp
sub
push
mulb
fs
dec
test
stc
push
fadds
mov
sbb
inc
cltd
mov
lods
jmp
out
test
sbb
sub
cmc
inc
in
arpl
insb
adc
mov
imul
xor
sbb
jp
pop
push
ja
dec
aaa
fcoms
imul
sar
xor
xor
mov
mov
pushf
cli
mov
mov
push
imul
push
jle
xchg
mov
pop
mov
int3
lds
shr
push
pop
sub
je
xchg
lret
cmp
sub
pusha
aad
sbb
mov
das
insl
ja
insb
add
pop
mov
leave
pop
movb
and
jae
jb
ljmp
push
movsl
scas
mov
jmp
out
mov
daa
pop
or
xchg
push
pusha
push
cmpb
hlt
scas
in
movsb
shlb
inc
push
nop
cmp
xchg
or
loope
nop
rorl
loopne
dec
in
or
in
dec
jae
pop
lahf
lret
imul
stc
push
push
xor
dec
imul
xor
fisubs
inc
pop
stc
loope
bound
xchg
pop
pop
mov
rorb
sbb
decl
jl
sub
xchg
divb
or
and
inc
jmp
push
popf
sbb
mov
mov
fs
lods
and
dec
les
dec
xor
xchg
subb
sub
divl
add
push
or
cs
addb
std
push
jg,pt
fstpl
cwtl
shl
mov
mov
cs
adc
rcr
in
pop
enter
or
cmpsl
mov
addr16
lcall
lods
mov
movsl
mov
dec
mov
rclb
pop
push
scas
imul
pushf
fmull
pop
mov
add
test
fs
insb
mov
jae
stos
mov
fisubl
xchg
fists
int3
movsb
jbe
dec
jns
pop
xor
mov
int
inc
loop
lock
mov
dec
sub
std
mov
dec
pop
fimull
sbb
sub
sahf
jae
inc
dec
add
xchg
mov
mov
inc
fisttpll
mov
pop
jo
cmpsl
mov
out
aam
fs
loopne
push
in
gs
and
pop
data16
push
jne
jae
insb
lcall
es
test
addr16
push
test
sub
call
pop
sbb
rdpmc
sbb
shll
mov
js
sub
addr16
sbbb
sbb
pop
mov
lcall
adc
sbb
popf
idivb
mov
sub
dec
cmp
xchg
fs
sub
mov
fisubl
scas
cltd
and
adc
pop
push
pop
movsb
add
mov
in
scas
call
cmp
ja
cld
mov
test
dec
movsl
ret
jno
add
add
jg
dec
xor
mov
xchg
out
cld
cmp
mull
sub
mov
aas
sub
popa
loope
push
mov
insb
ja
sbb
and
jg
mov
lret
out
data16
mov
and
movsl
and
jp
push
cli
add
f2xm1
jno
ret
cmp
cld
sub
inc
dec
jnp
xchg
inc
push
push
xchg
fwait
movsl
int
lcall
push
adc
sbb
inc
dec
push
xchg
cmp
mov
cltd
sarl
arpl
lret
cmc
xor
push
dec
loop
in
and
mov
jp
mov
dec
into
stc
cmpsb
fcoml
daa
mov
into
inc
cltd
mov
movsl
jmp
out
mov
mov
push
sbb
ds
movsl
xlat
push
cltd
mov
sbb
sub
mov
das
push
dec
imul
gs
add
push
int3
ret
ret
ja
lret
jmp
popf
or
inc
inc
jnp
mov
pop
xchg
decl
adc
mov
push
in
or
scas
push
inc
inc
mov
jno
xchg
lret
ljmp
mov
add
cwtl
jbe
sub
or
fxtract
sahf
cmpsl
and
arpl
or
push
or
mov
stos
push
rcrl
xchg
jbe
add
cmp
sub
loopne
xchg
sahf
test
sub
ret
sub
mov
sbb
cmp
push
push
aas
ja
xchg
mov
sahf
mov
pop
hlt
lods
in
in
mov
stc
imull
scas
mov
ljmp
clc
ds
push
fdivs
sti
subl
mov
jno
repz
pop
adc
pop
and
loope
sbb
sub
rep
sbb
xchg
ret
add
cmp
cmp
or
cmpsb
xchg
rcr
lds
mov
mov
add
inc
dec
js
pop
jbe
sub
pop
test
fsubrl
fisubrl
xchg
mov
push
inc
int
dec
stos
mov
test
sbb
lods
fnop
inc
inc
lock
jp
push
lcall
xchg
scas
hlt
into
test
int
xor
add
push
push
outsb
mov
push
lea
frstor
sbb
aaa
mov
pop
pushf
ret
sbbb
fldenv
cmc
cmp
fsts
xor
mov
xchg
in
shl
js
dec
xor
sub
imul
jle
in
mov
into
cmp
adc
pop
mov
xchg
aam
mov
test
dec
fistpl
mov
dec
insb
imul
jae
or
aad
jns
cmpsl
std
push
jo
in
jp
aas
sub
mov
test
out
cmpsb
lcall
cmp
imul
inc
jge
loop
cmp
jp
mull
shlb
sar
dec
pop
ret
push
aaa
fadds
adc
roll
or
lock
pop
pop
inc
data16
pusha
test
mov
push
xchg
loope
and
ret
xor
xchg
push
xor
out
mov
bswap
icebp
lods
out
dec
push
sub
add
insb
lods
jecxz
inc
lahf
mov
mov
jmp
cmp
xchg
insb
je
mov
into
stos
fists
ja
mov
imul
imul
test
jmp
and
out
addr16
inc
icebp
sub
cmp
pop
sahf
mov
pushf
js
jmp
ds
cs
push
jp
outsb
cltd
push
cltd
xor
mov
nop
roll
orb
cmp
inc
rcr
cmpsl
mov
jne
stos
loop
xchg
mov
repz
jle
sarb
rorl
out
cmp
xchg
imul
xchg
sub
fldt
jecxz
test
push
jmp
xor
push
mov
test
lret
sbb
fisubrs
repnz
rcrb
outsb
js
lea
leave
rcr
jmp
decl
adc
xor
inc
dec
pop
arpl
orl
loop
testb
adc
sub
cmp
push
lcall
das
mov
pushf
cmpsb
xor
insl
ja
cltd
mov
aad
jmp
sbb
cmp
bound
mov
rcr
in
clc
add
and
xor
dec
push
pop
cmpsb
mov
dec
pop
sbb
ja
inc
inc
mov
xchg
aaa
inc
dec
push
pop
imul
scas
mov
sub
cld
push
adc
and
cmp
push
pusha
push
jle
xchg
pushf
cmpsb
mov
into
fsub
in
testb
adc
mov
out
stc
add
inc
ja
jo
jg
xchg
xor
rorl
lret
and
sbb
ja
scas
mov
jge
loop
mov
jmp
insl
ja
inc
pop
add
pusha
lahf
daa
jle
ja
fstpl
enter
or
adc
inc
xor
and
jl
mov
rolb
cltd
dec
cmc
push
xchg
inc
jge
dec
push
stc
into
int3
or
cmpsl
xor
push
testl
cmp
insb
clc
notl
mov
in
fidivl
add
xchg
mov
mov
mov
fsubs
fistl
sbb
cltd
push
outsb
popa
out
clc
ret
int
aad
jmp
std
mov
negl
stos
xchg
adc
sbbb
hlt
sahf
jl
fisttpll
mov
fdivs
stos
mov
popa
lahf
adc
xor
in
test
inc
or
lds
push
imul
xor
mov
add
aaa
repnz
cmp
adc
push
les
xor
aad
or
add
clc
inc
dec
push
or
jns
mov
add
fucom
mov
sub
and
dec
push
pop
xchg
or
pop
bound
xchg
mov
jb
dec
or
mov
add
mov
cmp
aas
popf
cmp
xor
popf
js
mov
or
decl
adc
dec
js
inc
pop
sub
aad
stos
push
insb
aad
jl
xlat
cli
add
or
cmpsl
push
fistpll
push
das
gs
lods
loope
mov
mov
xor
imul
xor
and
inc
mov
dec
outsl
xchg
popf
cmpsl
mov
xchg
outsl
js
ljmp
shrb
sub
dec
mov
mov
lret
movsb
fsubr
gs
sub
inc
mov
push
jae
popf
cmpsl
mov
dec
jmp
and
sbb
sbb
inc
cmp
jne
mov
or
mov
sbb
call
cmp
test
cmp
pop
jp
rcrb
shl
into
pop
push
pop
imul
andb
enter
cmc
xchg
jnp
dec
push
xchg
pop
aaa
lret
aad
cmpsb
neg
mov
sahf
inc
dec
adc
dec
pop
adc
jae
sahf
sbb
rorl
sub
ljmp
in
loopne
jnp
dec
lea
mov
dec
jns
ficoml
mov
add
xlat
mov
sub
adc
test
and
cmc
adc
mov
cmp
fiadds
push
push
xorl
sbb
jl
xlat
imul
mov
cmp
xchg
mov
sbb
pop
dec
xor
xchg
fstpl
loopne
lods
xchg
inc
cld
cmp
adc
pop
jge
mov
lds
inc
cmpb
inc
stos
pop
adc
je
stos
imul
ljmp
xor
push
adc
fwait
outsl
mov
push
pop
jmp
pop
and
arpl
pop
repz
into
xchg
bound
add
adc
push
fnstcw
pushf
ret
mov
fadds
cmp
ret
in
sub
ret
jmp
add
filds
xorl
jl
push
insl
iret
pusha
lret
test
ret
mov
loop
inc
repnz
inc
mov
scas
repnz
out
cmpsb
jmp
in
test
aas
fs
sbb
inc
jb
push
mov
xchg
loopne
fwait
decb
mov
sub
inc
outsb
sub
leave
xchg
mov
mov
pop
cmp
cmp
jp
add
jmp
mov
ja
loope
lahf
xlat
add
push
movsl
jecxz
mov
insb
pop
push
jp
xchg
sbb
add
lret
int3
cmp
inc
imul
xchg
gs
mov
lea
jmp
int3
cmp
dec
dec
push
or
adc
scas
arpl
mov
outsl
lret
sub
sbb
jg
xor
mov
jecxz
xchg
cmpl
cwtl
xor
or
cwtl
mov
mov
mov
pop
test
inc
enter
push
push
ss
jnp
inc
lods
scas
fnstenv
push
add
inc
imul
add
aas
cmpsl
fs
push
cs
lret
mov
fstl
dec
add
or
cmpsb
pop
lahf
mov
shll
adc
in
mov
sbb
fwait
sahf
xchg
push
mov
rcrb
add
aad
sub
dec
ret
in
out
pushf
push
xchg
or
fisttpl
repz
sub
and
push
pusha
push
test
shrl
daa
jmp
cmp
ficoml
negl
xor
pop
fucomip
adc
fbstp
ret
das
cmp
push
popa
imul
jno
lahf
fidivl
call
sbb
dec
push
pop
imul
scas
mov
xlat
adc
adc
xor
outsb
sahf
lea
mov
lcall
xor
dec
add
test
xchg
sbb
fsubrl
rolb
and
movsl
int
dec
add
cmp
jns
mov
fisubl
jmp
into
or
mov
cmp
insb
pushf
push
lea
jne
out
ret
in
aaa
enter
dec
test
mov
imul
hlt
leave
xorb
loop
mov
pop
sbb
jp
pop
pushf
xchg
les
xor
notl
cs
lea
outsl
xchg
push
jae
mov
cmpsb
out
les
and
add
neg
sbb
jp
mov
mov
in
stos
int3
mov
pop
inc
pop
ds
cmp
jns
ret
cli
mov
push
daa
filds
xchg
sub
arpl
push
push
js
jbe
inc
in
lcall
add
adc
sub
cmp
push
pop
inc
sahf
add
div
mov
sti
cmp
dec
push
subl
iret
pusha
lret
test
ret
mov
popa
push
push
jg
outsb
popf
pushf
ja
jnp
sub
dec
sbb
and
cmp
and
inc
je
inc
mov
cmp
mov
adc
xchg
mov
outsl
sub
gs
popf
std
lret
in
fiaddl
adc
insl
adc
inc
push
pop
test
and
mov
adc
out
ficoml
cmp
push
ja
xchg
mov
xchg
and
adc
dec
or
xchg
gs
imul
or
cmp
test
nop
dec
insl
enter
lahf
loopne
mov
aad
xor
xor
push
xchg
inc
je
lods
pop
mov
movsl
aad
lock
sbb
aas
das
add
lods
cwtl
jae
test
xchg
hlt
mov
nop
or
stc
jge
sub
add
aas
jno
pop
movsb
ss
outsl
xchg
sti
into
fsub
in
testb
adc
sub
cmp
jg
xchg
jp
and
lds
fstpl
les
adc
popa
or
pop
bound
mov
lcall
add
hlt
dec
imul
inc
subl
cmpl
sar
iret
bswap
in
sub
and
push
leave
aam
ret
scas
mov
jmp
add
mov
and
dec
push
pusha
xchg
mov
jo
cltd
mov
push
or
repnz
xor
insb
enter
jecxz
and
test
enter
pop
dec
aas
sahf
push
pusha
inc
lock
test
cmpl
inc
icebp
and
stos
sub
jae
jno
out
and
fnstenv
in
sub
lret
mov
xchg
loopne
mov
fxch
pop
js
clc
push
roll
dec
push
jecxz
arpl
push
sarb
lret
imul
adc
call
dec
push
popa
aas
imul
ffree
sahf
mov
sti
je
test
aaa
push
inc
bound
mov
mov
lahf
sbb
movb
gs
jg
cmpsl
xchg
inc
push
cmp
lret
enter
push
sub
rcrb
dec
subl
mov
mov
repnz
test
add
dec
jno
mov
mov
cmpsb
test
adc
add
out
sub
sbb
pop
inc
andb
andl
sbb
pop
cmp
or
xchg
mov
arpl
mov
or
scas
mov
pop
dec
arpl
clc
ret
cmpsb
rorl
stos
xchg
hlt
xor
das
outsb
push
dec
and
xorl
es
mov
dec
xorb
and
fldenv
add
scas
in
sbb
pop
jo
push
popa
imul
push
mov
ja
out
mov
push
adc
sub
xor
ret
aad
or
add
adc
shl
mov
jp
mov
cltd
lahf
inc
push
stc
aam
sbb
divb
cmp
cmp
pop
test
sub
add
cmp
xchg
inc
push
outsb
sub
pop
repz
fadd
mov
lret
insb
ss
push
loopne
rcrb
pop
inc
push
xchg
fcoms
cld
push
ss
push
push
sbb
push
pusha
ds
cmp
out
int
add
sub
inc
insl
and
or
inc
xor
rorl
xlat
rorb
adc
mov
outsb
js
sahf
pop
mov
inc
js
sbb
loope
or
xlat
xor
dec
jo
pop
jnp
movsb
aad
shl
loopne
pushf
out
adc
and
xor
pop
mov
mov
pop
and
in
sbb
adc
jge
aas
pop
mov
daa
lahf
push
pop
dec
xchg
repnz
sub
lret
pop
jg
xchg
mov
xorb
ss
pop
xor
pop
popa
xchg
jl
jno
pop
jns
mov
jbe
fwait
mov
mov
dec
js
imul
movsb
xchg
out
arpl
bswap
push
and
repnz
pop
sbb
lock
fwait
ja
movsl
scas
mov
sbb
shrb
cmp
xor
inc
push
sub
mov
repnz
mov
cmp
adc
add
adc
je
jb
add
cmp
pop
aam
jge
xor
push
pusha
ds
or
xchg
jg
mov
cmpsb
cmp
or
push
pop
or
popf
scas
test
cltd
movsl
scas
mov
fildll
push
xor
adc
inc
cmp
bound
test
rclb
adc
push
or
dec
and
inc
test
mov
adc
in
mov
sbb
ficoml
out
fldl
fnsave
cld
xor
ljmp
mov
loop
fadds
push
out
adc
and
sub
mov
sub
sarl
popf
xlat
sbb
dec
jnp
into
cmp
jge
fstpt
inc
sbb
scas
push
xor
push
decb
inc
cmc
xor
sbb
and
js
pop
cwtl
mov
aam
mov
mov
cmp
and
inc
je
insb
cmpsl
rorl
fists
rorb
xor
outsb
sbb
mov
inc
sub
stos
call
out
inc
push
popa
imul
push
outsl
pop
std
mov
sub
in
fldenv
pop
dec
pop
pop
fsubl
xchg
add
filds
cmpsl
pusha
fwait
adc
mov
or
call
pop
arpl
subl
push
push
ret
test
pop
inc
add
arpl
pop
add
bound
rorb
iret
flds
je
sti
adc
or
fwait
aam
mov
lahf
fdivs
ret
ljmp
and
inc
add
fs
mov
mov
or
lret
aaa
hlt
xor
pop
sbb
jne
pop
xchg
mov
mov
sahf
call
ret
adc
cmp
sub
mov
ret
loopne
sar
stos
out
push
jno
xor
flds
inc
push
jg
jb
ss
fwait
movsl
rorl
fistpll
fiaddl
aas
cmp
jne
jle
jb
pusha
stos
mov
mov
cli
add
out
dec
jnp
dec
gs
daa
xchg
mov
scas
pop
fwait
das
call
dec
sub
ja
out
popf
cmpsl
mov
mov
adc
or
or
sub
and
jae
fdivrs
vmovaps
aaa
xchg
ljmp
inc
test
fstl
movb
aaa
hlt
cs
jo
inc
jge
mov
test
push
lcall
mov
sbb
insb
cltd
js
jo
mov
test
lds
adc
addl
scas
icebp
jge
mov
cmpsb
int
ljmp
push
sbb
or
push
movsb
pop
xchg
ret
sub
daa
loope
inc
in
push
stos
push
ja
pop
adc
test
jle
push
stc
mov
stc
and
push
loope
divb
fs
outsb
js
jb
and
xchg
cli
add
lret
sub
jnp
faddl
imul
mov
popa
push
std
mov
scas
sbb
ss
dec
ja
outsl
sub
xchg
popf
dec
out
iret
lcall
inc
cs
dec
loop
loop
inc
xchg
fcmove
rcr
add
cld
shlb
and
pop
pop
addr16
imul
mov
mov
icebp
jmp
or
sbb
jl
outsl
jp
iret
leave
jae
mov
mov
push
cmp
xor
mov
fwait
mov
or
mov
lret
clc
dec
mov
fwait
scas
outsb
test
test
or
cmp
pop
js
cmc
adc
loop,pn
mov
dec
sti
ss
ja
pop
ja
pop
mov
movsb
sarl
in
dec
mov
adc
std
fisubl
mov
fcompl
shr
test
or
mov
push
sbb
push
inc
jo
xorb
sbb
adc
sub
cs
mov
cmpb
hlt
adc
fistpl
pop
xor
dec
test
jae
inc
loop
fiaddl
lret
add
pop
icebp
jns
dec
ja
push
dec
or
jecxz
flds
adc
data16
cmp
cli
cmpsb
bound
adc
call
and
pusha
jle
je
dec
sahf
mov
sar
ja
cwtl
rorb
aas
mov
testb
pop
pop
xor
cmpb
cmpb
xor
cmp
jns
dec
into
jo
les
add
negb
push
aaa
je
pop
adc
cld
pop
jae
dec
ret
xor
or
adc
sti
out
push
xorb
xchg
dec
out
outsl
mov
jp
lods
in
cli
add
inc
fnstsw
pop
xor
and
insb
dec
xchg
jmp
add
cmp
cmp
push
jnp
mov
adc
jmp
push
pop
imull
add
jp
nop
push
lret
and
insb
and
inc
lret
jnp
jg
xchg
popf
cmpsl
rorl
lret
and
sbb
cs
cwtl
mov
aam
or
add
cltd
cmp
xor
fs
pop
xor
dec
andb
jno
aad
xchg
sti
add
ja
dec
jne
push
cmp
insb
mov
call
adc
push
cmova
jl
outsb
or
mov
jb
loop
testb
popa
cmp
or
jge
sub
aam
xor
pop
into
cld
xor
dec
dec
pop
fs
xor
outsl
test
ljmp
push
xchg
add
jle
data16
int
sbb
jl
or
push
adc
repnz
push
dec
stc
sbb
lds
adc
add
rorb
cmp
pop
bound
jne
fmuls
repnz
mov
int
jecxz
popa
imul
test
mov
or
ficomps
repz
or
inc
jl
js
xor
mul
fidivrs
inc
pop
cmp
cmp
add
xchg
pop
leave
cmpl
sbb
adc
imul
push
xchg
cmp
add
or
mov
pop
xchg
dec
fs
mov
pushf
in
or
call
movsl
pop
adc
mov
imul
mov
jmp
cmp
mov
orb
stos
stc
pop
sbb
add
push
dec
jae,pt
jb
cld
push
adc
and
cmp
push
pusha
push
jle
xchg
pushf
cmpsb
mov
jecxz
testl
xor
outsl
jns
lea
leave
loope
xor
adc
sub
cmp
int
pop
sub
mov
add
fsub
lock
add
sbb
jmp
addb
scas
add
xor
data16
test
movsl
pop
into
xchg
in
add
fiaddl
cmp
shrl
xchg
push
mov
leave
cmpl
stc
and
sbb
or
insl
adc
mov
aam
jmp
push
cmp
push
pusha
mov
stos
out
cmpsb
shll
shl
adc
add
cmp
das
mov
imul
pushf
das
in
inc
or
fcoms
inc
cwtl
sti
out
dec
mov
xchg
push
jg
mov
mov
stos
les
adc
or
jb
xchg
pop
lds
mov
xchg
iret
repz
sar
adc
inc
cld
aaa
in
popa
imul
xor
iret
mov
in
inc
mov
inc
inc
divl
dec
mov
gs
dec
test
sbb
jns
loop
pop
mov
adc
pop
lock
adc
popa
imul
mov
jp
stos
mov
scas
add
aaa
lock
aas
jmp
jle
sbb
jge
xchg
int3
jp
push
cld
push
push
fadds
and
outsb
xchg
push
xchg
icebp
scas
jmp
jnp
cmc
flds
cmp
or
addr16
movsl
jmp
decb
inc
stc
xor
or
xchg
nop
inc
test
loopne
aad
mov
pushf
test
jmp
dec
loopne
in
and
mov
js
adc
pushf
fistl
push
sub
aas
ljmp
insl
xchg
inc
xchg
jno
xchg
ficoml
xchg
rcll
xor
xor
rcpps
dec
test
dec
sarl
fwait
mov
ret
cmc
adc
add
out
sub
imul
xchg
mov
out
loopne
gs
or
dec
out
pop
xchg
dec
pop
bound
pop
xchg
sahf
test
mov
ret
sti
inc
sarb
or
xor
push
test
or
rorl
shufps
push
cmp
ret
lcall
jbe
lahf
roll
mov
mov
aaa
jbe
movsb
push
push
jae
cmp
sbb
notb
mov
cmp
movsl
pop
test
sbb
call
imul
cli
ffree
jmp
out
inc
mov
sbb
push
push
jmp
fcomps
mov
and
fisubrs
xor
popf
clc
bound
sahf
aad
xchg
jo
or
aas
in
push
fisttpll
cmp
push
cwtl
push
aam
mov
stc
filds
mov
jae
xchg
dec
jns
jae
mov
scas
sbb
push
rolb
inc
sbb
push
fisubrs
popf
pop
mov
js
fsubs
std
in
adc
add
cmp
shlb
cmc
pop
xchg
js
pop
cmp
fistps
and
push
dec
ja
pop
cmc
mov
shl
and
mov
out
sti
in
lret
pop
test
and
lods
adc
incb
inc
test
stc
dec
push
pusha
sub
add
movsl
ret
fs
push
fucom
bswap
out
lods
ljmp
pop
mov
outsb
add
sahf
lret
xor
sbb
das
call
mov
xor
lock
pusha
push
dec
jne
insl
lcall
or
hlt
and
jb
pop
jge
jae
xchg
pop
ja
mov
cli
outsb
daa
push
incb
inc
cmpsl
insb
js
lods
xchg
in
fcoms
push
mov
dec
cmp
scas
push
test
mov
sarl
int3
mov
fistpll
sbb
iret
cmp
aas
or
xchg
shl
inc
in
cmp
cmp
xor
cs
pop
bound
dec
jl
fwait
les
loop
mov
xlat
or
ret
sbb
imul
cwtl
mov
jae
jecxz
sbb
notl
mov
jo
clc
daa
mov
lret
call
cmp
aaa
pop
push
or
pushf
mov
stos
push
mov
mov
add
cmp
in
push
adc
pop
xchg
pop
inc
andb
adc
iret
mov
jo
push
je
sbb
sar
cmpsb
or
shlb
and
aaa
arpl
push
push
jge
push
fildl
mov
sarl
in
push
pop
lods
psubq
pop
and
aad
mov
into
nop
and
in
push
call
inc
and
stos
notl
adc
add
out
sub
popa
imul
xchg
mov
mov
loopne
sbb
push
pop
sub
cld
lea
fisttps
push
inc
jge
jp
rcr
in
int
pop
int3
xchg
pop
pop
push
pushl
mov
and
movsl
iret
flds
and
add
movsl
lea
je
add
imul
in
adc
es
add
iret
js
insb
xchg
outsb
dec
xor
test
pushf
pop
push
mov
xor
dec
jae
xchg
out
jns
int
in
push
out
or
adc
scas
arpl
mov
stos
in
xchg
imul
imul
pop
inc
mov
std
stos
lds
and
cmp
js
arpl
mov
jns
dec
and
in
in
sti
push
popa
dec
daa
cmp
cli
xor
insl
mov
repz
out
fwait
or
pop
mov
int3
popa
dec
jne
es
repz
mov
out
xlat
add
fisttps
push
js
sub
push
mov
mov
sbbb
and
pop
cmp
push
aas
stos
push
xchg
sarl
cmpsl
iret
sti
and
sbb
push
in
pop
jo
push
cld
cmpsb
pop
lcall
add
test
push
or
pop
or
mov
enter
in
addr16
pop
rorb
data16
jae
sbb
xchg
jge
scas
call
int
add
repnz
pusha
sbb
mov
nopl
sub
pop
imul
scas
mov
jmp
cmp
xor
inc
dec
push
pusha
push
jle
xchg
pushf
cmpsb
mov
mov
ljmp
jle
inc
fstpl
insb
lds
mov
rcr
movsb
outsb
stc
add
adc
xchg
std
cmp
ds
mov
jne
imul
xchg
outsb
sbb
es
enter
sbb
cmp
push
push
sahf
test
iret
jbe
add
cmp
mov
out
es
pushf
inc
jp
xchg
popf
cmpsl
loop
fmull
sbb
int
add
lods
pop
dec
fmuls
xchg
fwait
cli
mov
mov
loop
xlat
jb
fidivrl
push
adc
adc
jbe
push
popf
cmpsl
mov
ret
inc
xor
sbb
imul
dec
push
out
cli
jge
xchg
mov
mov
inc
push
adc
adc
cltd
mov
aad
jmp
hlt
loop
testb
cmp
jp
ret
addr16
inc
or
rcr
xchg
shl
xor
stc
in
outsb
js
pop
xchg
pop
stos
mov
push
shr
xchg
cmp
sbb
out
and
sbb
jns
test
loop
ret
loope
jl
std
sbb
scas
outsl
fnsetpm(287
scas
ja
insb
int3
mov
sbb
test
cltd
lds
stc
push
inc
lret
xchg
pushf
int
loope
les
iret
add
cmp
in
arpl
xchg
jnp
cmp
lret
xchg
add
and
ds
filds
int
xchg
scas
repnz
mov
movsl
bndldx
sub
pop
add
adc
mov
mov
sub
sub
pop
imul
out
mov
int
add
pop
addr16
inc
jb
imul
enter
mov
pop
fiadds
cmp
cmp
arpl
mov
loopne
push
ret
int
add
out
cltd
mov
xchg
lret
pop
rclb
sbb
mov
push
data16
mov
scas
mov
add
repz
dec
fcomps
xchg
mov
mov
fmull
sbb
or
sbb
push
pop
out
jae
inc
dec
insb
pusha
jo
add
mov
scas
pop
pop
loopne
sbb
pusha
push
movsl
push
es
jg
cmp
jo
and
lret
pop
sub
push
cli
insl
data16
out
sbb
shrl
daa
xor
es
inc
pop
push
orb
mov
mov
jbe
sbb
xchg
add
push
ret
xor
mov
gs
shll
jbe
pop
pop
and
cs
xor
cmp
jno
ljmp
jg
jno
lahf
push
int3
sub
mov
testl
add
jge
push
fwait
scas
nop
hlt
push
int
jns
cmc
decl
pop
es
ljmp
pop
adc
inc
jae
ficoms
cli
rcll
repz
insl
dec
ret
jl
push
ficompl
adc
and
out
cmp
lea
inc
je
sub
lret
scas
adc
je
mov
inc
int3
add
xor
pop
xchg
sub
pop
test
mov
lods
xor
or
inc
std
dec
popa
sahf
push
sbb
mov
leave
cmpb
sbb
or
mov
das
jp
scas
addr16
pop
rorb
ret
push
xor
hlt
dec
ds
daa
cmpsl
cmp
bswap
or
aaa
hlt
sub
inc
inc
rcrb
xchg
dec
mov
adc
jne
ficoms
sahf
cld
adc
gs
lock
pusha
push
dec
mov
xchg
mov
add
sbb
jb
adc
xor
push
jne
je
fisttpl
pop
shr
pop
pop
mov
dec
push
lahf
dec
or
repz
fsub
lock
xlat
add
sbb
push
pop
lea
jnp
rcr
in
push
test
movsb
adc
fldcw
mov
es
aas
xchg
push
jp
mov
mov
jle
adc
cmp
xchg
inc
xchg
jecxz
mov
in
int
int3
push
and
pop
adc
jb
cmc
lahf
jns
cmpsb
mov
sbb
cmovno
fistps
dec
lea
outsl
mov
icebp
movsb
or
ficomps
adc
lock
jmp
cmp
mov
sarb
adc
xlat
xchg
sbb
cmp
adc
addr16
aad
cmp
fcoms
jnp
pop
jecxz
addr16
or
clc
movsl
pushf
adc
jmp
stos
jg
xor
inc
sbb
pop
idivl
scas
pop
xchg
mov
mov
pop
into
lock
xorb
loop
mov
mov
ficoml
push
add
ret
jg
push
outsl
pop
scas
insb
mov
lods
imul
into
or
subb
mov
mov
nop
mov
lods
faddl
xchg
les
adc
mov
sahf
je
cmp
imul
imulb
mov
push
or
aas
insl
xor
gs
mov
dec
cmp
push
dec
pop
and
mov
in
and
xchg
sbb
xchg
ret
idivl
mov
call
jnp
add
and
scas
shlb
sbb
or
mov
xchg
sahf
sub
out
rcrb
pop
cmp
or
pusha
push
rorl
dec
mov
xchg
jno
je
sbb
mov
mov
int3
mov
mov
packssdw
cli
adc
pop
ds
js
jp
lods
xchg
fs
enter
stos
pop
test
andl
mov
in
push
fisttpll
cmp
leave
fs
inc
dec
push
jg
jae
xor
cmp
lahf
movsl
adc
test
hlt
ficompl
mov
cmc
cs
cli
jecxz
jp
mov
movsl
jp
or
push
ret
int
outsl
imul
daa
xor
shlb
sub
push
pop
sbb
int
in
lcall
sahf
push
adc
adc
sbb
inc
pop
call
mov
fnsave
out
jo
push
repz
mov
ret
int
adc
cmp
ss
mov
insl
mov
xor
test
sbb
hlt
xor
mov
jle
jb
mov
and
addr16
rcl
xchg
or
jb
push
mov
cwtd
daa
and
adc
stos
cltd
dec
or
sub
je
pop
test
negb
mov
into
fsub
in
testb
adc
sub
cmp
jg
dec
push
mov
loop
add
sbb
xor
dec
xor
xchg
fdivrl
pop
mov
or
insl
sbb
cmpb
testl
in
es
push
pop
xchg
je
pop
and
jnp
sahf
sbb
fdivp
mov
and
sub
xchg
push
adc
jle
xchg
mov
sarl
jmp
lahf
or
sub
push
fmull
push
and
ljmp
loopne
inc
inc
cmp
jl
insb
lcall
std
in
fnsave
cmp
sub
insl
sbb
fidivrs
mov
jo
mov
pushf
shlb
xor
or
inc
and
mov
xorl
jo
or
push
data16
xchg
in
jnp
arpl
jmp
in
testb
adc
sub
cmp
jg
dec
popf
push
xchg
clc
fs
lcall
add
inc
fs
mov
mov
jle
or
sbb
cmp
cmpsb
jg
xchg
popf
cmpsl
shrl
ret
add
pop
cmp
ss
cmpsb
pusha
lcall
fxtract
sahf
xlat
stc
xor
sub
js
stos
xchg
jae
mov
cmpsb
shll
add
loopne
hlt
decb
adc
xor
inc
xor
cltd
push
test
xchg
sub
sub
sbb
cmpsl
fldl
cmpsb
mov
push
fildl
adc
stc
add
sbb
lahf
dec
xchg
mov
stc
loop
aad
pop
adc
cmp
idivl
xor
or
jnp
fidivs
or
mov
adc
push
xchg
ss
sbbl
jmp
mov
out
cltd
sti
pop
jg
adc
loope
push
mov
add
divb
ss
mov
pushf
xchg
je
std
mov
fistl
pop
push
pusha
pusha
xor
mov
ret
push
mov
adc
inc
dec
pop
or
cmp
arpl
jns
lea
fsubrp
and
add
insl
adc
push
pusha
push
mov
jle
cmpsl
mov
mulb
add
push
dec
lret
cmp
pop
xchg
and
cmp
dec
imul
pop
cmp
ds
mov
mov
les
xlat
repz
add
jno
mov
jne
add
into
icebp
xor
test
push
aad
stos
mov
lods
pop
jno
aam
xbegin
inc
dec
hlt
sbb
xchg
jl
das
xchg
mov
mov
fucomip
sahf
xchg
sbb
dec
es
mov
mov
xlat
mov
and
xchg
mov
jge
mov
sbb
push
dec
test
jmp
daa
pusha
inc
inc
dec
push
popa
imul
mov
lds
and
or
push
sti
in
leave
test
ret
loopne
repnz
push
xor
arpl
inc
dec
push
pusha
push
push
mov
and
popa
daa
icebp
sti
and
fsubrs
inc
dec
repnz
xor
add
imul
stos
sub
jnp
jns
pop
inc
mov
push
mov
mov
and
adc
nop
jns
jge
cmp
pushf
mov
or
mov
outsb
push
inc
negl
outsl
cwtl
rcrb
lcall
loop
xchg
jo
gs
in
fwait
jne
lret
xchg
jmp
ffreep
jnp
cmovs
sub
jg
jae
push
nop
popf
cmpsl
mov
in
xlat
adc
hlt
decb
adc
inc
mov
inc
jg
pop
insb
jbe
mov
outsl
mov
sbb
loopne
or
and
nop
mov
out
xor
adc
sub
cmp
jo
push
xchg
jae
loopne
in
cmpsl
rorl
pushf
mov
int
inc
lods
xor
popa
mov
jg
fstpl
cwtl
sar
aaa
repnz
push
or
jg
push
xor
into
and
test
popa
inc
and
sbb
jl
pop
dec
movsb
pop
test
int3
subl
xor
cmp
push
jae
jl
pusha
mov
fcmovnbe
add
lods
mov
sub
add
js
push
cwtl
repnz
fs
pop
repnz
data16
mov
push
or
push
dec
jbe
mov
clc
add
cmpsb
sarl
jae
insb
mov
add
or
iret
mov
mov
fld
mov
and
fwait
movsl
mov
sub
xchg
js
ret
in
inc
rcrb
sub
jb
add
push
jge
mov
movsb
int
sbb
cmc
lods
add
xor
adc
dec
popa
dec
addr16
divb
mov
and
or
mov
test
lea
andb
faddl
push
jl
adc
aas
popa
sahf
ret
loope
dec
push
sbb
cmp
dec
push
subl
push
ja
inc
jmp
lcall
aas
lret
sahf
jl
fsts
xchg
fwait
lds
lcall
adc
mov
and
aad
stos
mov
mov
cli
in
sub
adc
add
push
call
andl
ss
loope
mov
cmp
pop
mov
cmc
xor
stos
cmp
mov
add
call
es
push
xchg
jnp
insb
pop
lea
decl
rcr
imul
xor
dec
mov
stos
fs
dec
lds
mov
pop
dec
or
jns
pop
data16
scas
sbb
popf
aas
imul
cmc
sbb
ror
js
insb
xchg
push
jns
jo
rorl
icebp
sti
and
or
aad
jl
push
popf
sbb
xor
fsubrs
add
fucomip
shrb
cmp
sub
dec
addr16
mov
arpl
lahf
popf
nop
add
add
xor
jg
cs
lcall
dec
repz
les
xor
outsb
sub
test
dec
cmpsl
mov
out
sbb
add
add
jo
pop
xchg
pop
mov
pop
fwait
aam
xchg
jmp
push
dec
or
mov
jle
inc
cmp
ficoml
sbb
stos
fistps
xor
daa
xchg
jle
outsb
pushf
add
gs
into
dec
shrl
xchg
test
pop
inc
pushl
cmp
and
aas
jbe
fstpl
stc
adc
jae
cmp
inc
mov
pop
mov
mov
rcr
in
stc
add
inc
sbb
adcl
insl
shlb
cmpsl
mov
out
add
aaa
popa
cmp
mov
lds
dec
ja
je
aam
int
stos
cmp
out
cmp
je
js
mov
and
mov
shrl
adc
imul
int3
or
xchg
sbb
mov
mov
outsl
mov
bswap
xchg
test
adc
in
cli
push
cmova
jp
outsb
mov
push
jnp
cli
ret
jbe
aad
jmp
push
inc
push
popa
imul
iret
jle
mov
add
adc
loop
xor
ret
dec
xchg
ret
bound
clc
rcll
adc
jecxz
dec
push
xchg
cmp
jg
xchg
popf
leave
xorb
fistps
xor
sub
inc
insb
and
mov
or
sbb
adc
and
pop
sbb
mov
xchg
into
jnp
cli
add
sbb
mov
add
pop
mov
inc
cli
xchg
dec
outsl
movsl
mov
sahf
aad
sub
les
add
cmp
aas
mov
adc
call
or
sbb
xchg
insb
mov
insb
in
int3
or
or
and
ficompl
xorb
push
lret
dec
xchg
mov
ret
clc
shl
push
adc
dec
jne
das
xchg
or
subl
add
adc
sub
cmp
jg
or
lahf
xchg
push
hlt
mov
mov
lahf
decb
adc
dec
fisttpl
xchg
jno
call
lock
call
dec
add
jne
xor
add
add
mov
mov
fcoms
push
pop
pop
adc
jle
out
cli
jp
dec
and
and
or
cmp
int
pusha
push
rol
inc
out
jo
cli
or
loop
dec
add
pop
jae
insl
inc
fwait
pop
xchg
sub
jl
aam
cwtl
or
cld
scas
push
sbb
pop
adc
xor
sub
addr16
sbb
sub
adc
pop
repz
dec
nop
pop
movl
stos
in
inc
shlb
and
mov
enter
add
in
mov
inc
sbb
cmp
repnz
jnp
aad
mov
lret
data16
outsl
test
popa
imul
push
loopne
les
dec
push
pop
imul
mov
jae
inc
loop
enter
call
xor
daa
ret
je
xor
push
xchg
fsts
fsubp
mov
pop
shlb
inc
fcompl
cwtl
mov
popf
fidivl
gs
ljmp
insb
dec
loope
cmc
je
popa
cwtl
xor
pop
sbb
adc
push
lock
push
stos
fistps
lcall
fcoms
dec
add
pusha
push
jle
sbb
int3
pop
test
jecxz
testl
add
adc
pop
pushf
loope
jecxz
gs
sub
adc
push
add
aam
xor
jl
dec
mov
je
jge
cmp
lock
jno
and
and
xchg
sbb
clc
add
or
or
pop
fwait
inc
in
jae
sub
xchg
jp
cmp
pushf
fadds
shl
out
arpl
xchg
cmp
bound
jbe
mov
sahf
inc
cmc
loop
roll
add
repz
push
add
lahf
daa
sbbb
adc
test
sbb
enter
mov
pop
loop
xlat
ret
popa
fwait
sar
xchg
cld
rcl
cmp
insl
bound
xlat
push
jmp
xchg
push
jns
mov
push
sti
mov
sbb
mov
jl
sub
mov
sbb
pop
lds
fimuls
ret
cli
jecxz
cmp
pop
xchg
sahf
cmp
push
push
sbb
sub
daa
mov
dec
sbb
add
jge
sub
hlt
push
int
jns
cmc
decl
pop
es
ljmp
data16
adc
inc
jae
ficoms
cli
rcll
loop
inc
and
push
jmp
loope
das
scas
inc
ret
or
mov
ss
imull
sbb
push
insl
lcall
fbstp
mov
push
adc
bound
xor
inc
xchg
sbb
sub
repnz
outsl
clc
add
loopne
popa
imul
rorl
lret
sti
gs
pop
sub
repz
nop
sbb
mov
pop
imulb
push
sbb
sub
mov
cmpsl
in
sub
mov
int3
pop
mov
pop
sbb
xchg
scas
push
scas
cmp
call
sbb
fs
push
and
pushf
push
mov
lahf
sahf
or
ljmp
popa
jmp
popf
and
xchg
or
add
ljmp
or
mov
mov
pushf
out
cli
scas
push
and
filds
mov
nop
fwait
dec
or
int3
std
adc
pmulhw
sbb
nop
dec
hlt
push
inc
mov
jns
cmp
mov
jne
stos
sbb
out
sbb
icebp
xchg
and
les
pop
je
push
and
stc
popf
push
sti
jmp
daa
mov
shl
cltd
mov
ljmp
pop
out
pop
lds
movsb
add
aam
xchg
out
jge
adc
cmp
and
dec
subl
pop
test
adc
xchg
ror
inc
cmp
int
movl
shl
dec
or
adc
clc
pusha
int3
subl
fwait
adc
add
test
in
mov
jmp
pop
movsb
or
inc
fidivl
xchg
mov
shrb
push
mov
incb
ds
xor
aaa
insb
cltd
push
mov
pop
or
aas
out
mov
mov
icebp
and
ja
jns
sbb
test
cmp
loopne
cmp
xor
push
jle
pop
ret
and
dec
ret
out
clc
shrb
and
jae
cmp
popa
imul
push
popf
cmpsl
dec
mov
repnz
and
sbb
jo
xor
test
cwtl
inc
jge
loopne
int
mov
cmp
mov
ja
push
pusha
push
jle
mov
fbstp
mov
push
shl
fists
cmp
pop
sbb
enter
add
mov
push
add
jge
dec
push
jle
insl
test
clc
test
not
push
push
push
fidivrl
pop
add
mov
jp
leave
xor
cli
inc
outsb
mov
sbb
xlat
fcompl
fdivl
test
fistpl
lock
add
test
xchg
ficompl
int
int
movsl
xlat
or
jno
out
cmpsl
dec
push
popa
cwtl
inc
jle
xchg
popf
cmpsl
iret
mov
xor
or
or
or
cmpsb
popa
xchg
icebp
fwait
rcrl
and
cmp
or
sub
cmpsb
push
jg
popf
cmpsl
mov
xchg
lret
sub
and
jp
mov
test
mov
cwtl
rcr
shrl
xchg
sarb
pop
test
out
in
icebp
lods
iret
lds
add
imul
and
mov
xchg
notl
push
cmp
xchg
pushf
icebp
cmp
ja
adc
in
testl
add
jne
pop
nop
cmp
iret
jns
out
les
xor
add
fmull
out
jl
inc
repz
enter
test
jnp
add
pop
mov
mov
xor
call
jge
jg
xchg
jp
and
fists
je
or
add
cs
xor
fs
pop
or
sahf
mov
sub
sub
ret
dec
push
addl
hlt
and
cmpsl
add
sbb
or
add
lods
data16
cmpsb
push
lcall
push
call
inc
es
inc
insb
and
mov
inc
ret
mov
out
add
das
in
pop
test
pop
loope
into
clc
sarl
xchg
mov
xchg
andl
pusha
ja
mov
mov
in
faddp
inc
testb
sub
cmp
ret
jge
adc
dec
push
add
jmp
daa
push
or
stos
outsb
inc
subb
shlb
dec
add
sbb
sub
inc
push
push
inc
mov
xchg
scas
add
xchg
cmp
xchg
xchg
ret
mov
outsl
popf
xorl
movl
cli
push
aad
lock
dec
lret
cmpb
in
cltd
loopne
inc
clc
test
pop
inc
pushl
lea
sbbl
in
fildl
adc
insl
push
bound
pop
test
sbb
in
xlat
ror
incb
movsl
movsl
push
or
sub
jge
and
xor
jmp
sbb
or
adc
aad
inc
jae
arpl
add
ret
movsb
fmull
enter
sbb
sti
and
adc
mov
stos
pop
mov
fdivrl
cmp
sub
and
pusha
inc
jno
jns
ljmp
adc
jmp
push
bound
xorb
mov
stc
scas
inc
outsb
dec
aad
dec
and
xchg
mov
push
std
pop
adc
psrad
cmp
mov
fwait
cmpsl
mov
push
out
cmpsb
out
pop
notb
jmp
jae
addr16
adc
adc
inc
out
pop
ret
lea
push
iret
in
sbb
clc
cmp
jle
cwtl
push
sub
dec
mov
mov
clc
fstpt
int
js
insb
dec
push
shrl
loope
pop
xchg
pop
dec
and
jmp
imul
int
fcmovnu
in
xchg
pop
inc
pop
ds
jp
pop
jle
pop
push
pop
hlt
lods
in
testb
jmp
dec
loop
in
and
mov
fs
not
or
sbb
or
sar
xchg
xor
in
ds
fidivrs
or
aad
out
and
inc
cmp
jb
dec
pop
push
sarl
xchg
jl
sbb
sbb
shrb
xchg
imul
xchg
dec
mov
ret
loopne
dec
aaa
aaa
inc
sub
and
and
xchg
je
gs
cmp
mov
cmc
repnz
fisttpl
cmp
mov
insw
adc
js
add
in
cmpsl
decl
sbb
outsb
push
aad
inc
mov
lea
add
inc
sbb
push
mov
xchg
mov
mov
into
dec
push
adc
movsl
inc
dec
push
jge
pop
fwait
dec
scas
push
imul
icebp
adc
add
sub
push
push
pushf
cmpsb
mov
jno
sbb
sarl
inc
push
arpl
or
int3
mov
lret
stc
mov
xchg
into
or
mov
ficompl
dec
int
add
mov
stos
movb
lret
icebp
cs
pop
push
fwait
das
and
test
push
adc
xor
dec
mov
stos
iret
mov
insl
cltd
add
cmp
push
or
pop
ss
dec
xorb
inc
adc
fxtract
pop
fscale
aaa
shlb
ficoml
xchg
out
mov
out
xlat
adc
testl
xor
mov
dec
cmpsb
jns
ret
lahf
sbb
fidivs
cs
add
push
ss
jge
inc
fdivs
int
and
pop
ljmp
pop
mov
cmp
jl
dec
adc
jno
rorb
ss
daa
shll
or
mov
insl
test
fcomps
mov
je
push
in
cmc
adc
lahf
dec
xchg
mov
iret
stc
mov
xor
scas
rolb
shrl
in
in
bound
sbb
fcompl
movsl
adc
js
jb,pt
lods
xchg
inc
popa
xchg
aad
sub
dec
push
inc
insl
dec
and
outsb
cmpsb
push
xor
enter
pop
out
xchg
xchg
jecxz
adc
enter
movsl
fnsave
call
outsl
sub
cmc
mov
loope
mov
sbb
call
xchg
and
push
lret
test
pusha
xchg
xchg
pop
rorb
iret
int
cld
inc
or
dec
mov
test
mov
subl
jb
and
lods
imul
scas
and
jmp
sbb
adc
popf
push
mov
xchg
fistps
pop
sbb
sbb
push
fistl
mov
into
xchg
push
lea
or
or
lret
decl
pop
jl
cmp
js
inc
xor
mov
cmpl
sub
stc
dec
test
xchg
mov
sbb
sub
ljmpw
xchg
outsl
cltd
int
shll
rorb
lds
sahf
out
inc
decb
daa
dec
cmpl
mov
ret
decl
cmp
sbb
jbe
je
dec
jnp
imul
in
test
repz
sub
adc
addr16
imul
movsl
cmp
jne
in
aam
mov
and
pop
in
inc
pop
xchg
dec
xchg
sbb
rcrb
aad
lds
xchg
cli
adc
sub
inc
mov
fs
sarb
mov
and
cmp
aas
mov
jnp
pop
jp
push
aaa
push
icebp
cmpsb
repz
repnz
mov
das
push
push
pop
movsb
sub
fwait
loop
loopne
cwtl
xlat
push
xlat
and
loopne
dec
xchg
dec
cltd
sbb
mov
mov
pop
or
mov
sar
inc
jnp
mov
dec
jne
lock
sub
ds
push
jno
popa
stos
cmp
loope
out
stos
out
fldenv
mov
and
pop
out
and
dec
fwait
sub
aad
xlat
addr16
adc
adc
dec
jecxz
dec
mov
mov
push
pop
jg
pop
nop
lret
add
testl
jge
dec
xorb
rep
cmc
mov
outsl
and
add
test
stos
xor
in
out
mov
test
pop
loop
and
pop
aad
fistpl
lcall
dec
push
push
rcrb
adc
dec
lds
dec
xchg
mov
mov
inc
testb
idivl
jl
dec
xor
jae
inc
lea
scas
hlt
jl
lods
xor
xor
pop
call
push
and
lods
xor
insl
iret
popf
and
and
sbb
cmp
jbe
enter
mov
add
push
popf
icebp
lret
push
cs
jl
adcb
inc
mov
jle
mov
mov
mov
daa
imull
jae
pusha
xor
outsl
jmp
scas
fisubl
fucomi
bound
pusha
notl
sahf
push
pushf
xor
ficoml
push
iret
sbb
call
xchg
and
aam
test
pusha
xchg
adc
rorb
iret
dec
inc
cld
inc
mov
lds
clc
mov
subl
jb
and
pop
bnd
cs
push
sbb
adc
dec
loop
xchg
fistps
pop
sbb
sbb
or
cmp
push
imul
add
jmp
and
adc
inc
jo
ljmp
lcall
iret
out
push
rorl
pop
xchg
rclb
iret
pusha
add
jb
int
jae
add
repz
in
and
xlat
adc
jne
outsb
shrl
push
in
clc
mov
inc
out
mov
or
push
jle
jae
hlt
sub
insb
test
xlat
adc
enter
es
add
push
subb
sahf
fstl
cltd
rorb
in
enter
mov
sub
shrb
scas
adc
add
cmp
add
mov
mov
pop
push
sbb
xchg
jmp
nopl
add
mov
and
lret
xchg
ret
int
pop
repnz
adc
xor
movsb
pop
jl
or
mov
rcrb
push
dec
repz
cmp
jne
test
and
cmpsb
dec
scas
pop
les
xor
cmp
jge
sub
mov
add
mov
add
gs
jbe
sub
mov
aad
lock
movsb
ficoms
incb
xchg
mov
lods
pop
lds
and
hlt
and
pmulhuw
cmp
jg
xchg
and
les
pop
fs
adc
dec
and
je
ficoml
add
shufps
int
imul
push
inc
stos
ja
mov
rcr
in
stc
add
inc
sbb
jmp
pusha
cmp
js
pop
leave
test
insb
ss
notl
and
mov
jb
int3
xlat
jmp
adc
or
inc
stc
xor
xor
outsl
mov
sbb
cltd
or
jecxz
testl
add
inc
jg
int3
movsl
scas
test
or
loope
mov
sub
pop
ror
cmp
jp
push
push
rorl
mov
cli
add
repnz
push
cmovbe
shll
and
shll
xor
sub
in
jg
jae
loopne
mov
mov
cmp
push
jg
xor
popa
fnstenv
iret
lret
or
movsl
lea
mov
in
js
sub
or
imul
mov
lds
mov
lret
sti
pop
adc
dec
jmp
outsb
lcall
add
and
xor
notl
inc
data16
mov
ja
ficoml
out
mov
loopne
hlt
decb
adc
xor
inc
xor
cltd
pop
out
stc
ret
int
and
repnz
rcl
mov
xor
push
push
jl
icebp
cmpsb
mov
xor
call
adc
dec
hlt
or
or
int3
movsl
scas
fnstcw
push
repnz
movb
push
pop
daa
xor
jecxz
jbe,pt
sahf
addr16
aam
rorb
cmp
mov
dec
repz
xor
cltd
pop
mov
lret
cmc
int3
out
in
loopne
mov
cld
aaa
jns
out
popa
add
jno,pt
cwtl
int
cli
ljmp
adc
insb
jbe
stos
test
outsb
add
cmp
and
js
mov
scas
add
not
jp
push
sub
test
popa
xchg
aam
call
outsb
mov
jbe
ja
rorb
mov
testl
sub
pop
test
xchg
fwait
inc
lahf
ret
xchg
out
inc
cld
leave
adc
and
ja
dec
in
stc
xor
lcall
into
fdivs
ss
xlat
sub
jl
fcoms
in
push
adc
xchg
les
cmp
jl
dec
mov
stc
ds
loop
aad
cmp
cmp
adc
mov
lods
imul
xchg
and
or
xchg
and
and
mov
cmp
jle
mov
jmp
pusha
bound
cmpsb
dec
mov
fdivrs
clc
mov
or
jns
outsl
dec
cltd
xchg
adc
sbb
mov
and
push
sub
push
mov
aam
call
cmp
xor
ljmp
lcall
sub
or
jb
mov
pop
imul
fldl
call
pop
addr16
in
push
sub
sahf
pop
cmpsb
mov
les
or
xor
or
cmpl
sbb
pop
and
mov
aas
add
sub
sub
out
test
or
xchg
pop
je
mov
iret
push
test
movsb
adc
fldcw
push
cld
inc
add
popa
mov
test
mov
out
and
sbb
jmp
jns
int
loope
sti
scas
xchg
pop
pop
fisttps
dec
cmc
and
cmp
mov
dec
scas
lds
or
fdivl
pop
test
scas
push
in
movsl
loope
adc
or
pop
jmp
notl
mov
js
stc
cmpsl
mov
out
faddl
sbb
mov
push
pop
inc
outsl
cmpsl
sub
movsl
mov
xor
out
pop
iret
or
cmp
pop
mov
jge
mov
xchg
ret
ja
lret
cli
pop
add
mov
imul
clc
popf
and
inc
ret
push
xlat
add
add
mov
push
out
dec
test
sti
inc
incb
push
lock
or
jb
mov
test
add
push
xchg
and
mov
jno
insb
lcall
aad
je
clc
mov
inc
addr16
sub
mov
ss
jne
add
frstpm(287
out
stc
add
inc
ja
insl
xchg
push
mov
jno
fimuls
int3
ljmp
std
jmp
xchg
mov
mov
cwtl
jg
ds
sbb
in
push
mov
xchg
push
xchg
adc
inc
cmpsb
gs
add
and
xor
jae
push
mov
lret
jmp
dec
ds
cltd
pusha
push
ror
pushf
jae
divb
mov
xor
or
imul
dec
and
or
loope
lock
sbb
cmpsl
dec
and
iret
icebp
sbb
xchg
jo
mov
mov
pop
pushf
jns
in
or
jg
je
pop
pop
insb
push
test
xchg
fyl2x
aad
popf
sub
std
and
test
xchg
xor
ret
nop
lcall
loope
and
stos
inc
divl
dec
fnsave
inc
je
int
loope
cmpsl
ret
sub
pop
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
loopne
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
dec
sub
jmp
jmp
add
add
add
jmp
ret
xor
ror
stc
add
rol
rol
sub
add
add
jmp
call
int3
xorb
pop
test
mov
sbb
dec
aam
aad
cmpsl
sbb
dec
and
daa
xchg
push
dec
loop
test
stc
sahf
or
les
push
cmp
imul
loopne
xor
mov
lahf
jle
or
movsb
ficompl
mov
dec
and
add
cltd
aad
mov
inc
sahf
mov
cmp
clc
es
js
scas
and
xchg
mov
andl
pop
jl
les
add
jl
jp
jno
cmp
push
mov
jle
out
or
or
jge
pop
test
mov
addb
ret
idivl
test
shrb
jnp
mov
jnp
and
hlt
outsb
cmpsb
jecxz
repnz
sub
dec
jmp
testl
fnstenv
pop
imulb
xchg
arpl
mov
popa
xchg
loop
aam
mov
loope
jge
cltd
push
xor
int3
aam
pop
fists
add
inc
pop
aam
adc
jge
into
cmp
mov
jb
ret
cmp
xor
jmp
sub
cmp
stos
out
adc
stos
inc
cs
cmp
mov
mov
mov
mov
es
mov
iret
sbb
sub
sub
dec
or
cli
sbb
cmp
lcall
daa
sahf
push
pinsrw
sub
test
push
fists
or
xchg
or
xor
add
mov
and
inc
xchg
addb
test
jns
xlat
add
lods
push
jle
sub
add
push
jg
and
cmc
addr16
fdivrl
sub
ljmp
pop
hlt
push
cmc
inc
adc
pop
xchg
shrb
outsl
xchg
mov
out
fs
pop
inc
mov
popa
cmp
fistpl
cwtl
mov
sbb
test
add
fcoml
push
aad
filds
xlat
cld
out
dec
mov
cmp
dec
push
cmp
xor
add
jb
cmp
vshufps
cmp
loope
les
out
cmc
and
popaw
test
inc
sbb
pop
xor
xor
aas
pusha
push
sub
push
sub
shll
mov
mov
rolb
and
sbb
clc
es
xchg
sbb
out
cmpsl
daa
and
out
adc
popf
ret
or
mov
in
adc
jmp
test
add
push
mov
mov
pop
lret
addb
or
repnz
jbe
add
clc
xor
cld
jge
mov
xlat
cmc
addr16
fdivrl
jl
mov
imul
repnz
inc
in
or
loop
fmull
fs
mov
adc
or
inc
gs
into
fsubrs
ret
aaa
aad
and
rcrl
stc
mov
pop
jmp
mov
xlat
into
cmpl
jae
cwtl
xor
in
dec
les
shrb
mov
cmp
stc
lods
cmp
xchg
andl
cmpsl
cltd
cmpsb
pop
mov
mov
mov
add
lcall
imul
sub
enter
and
cwtl
sbb
scas
cmp
cltd
add
sahf
cmp
add
clc
xchg
enter
sbb
add
add
dec
inc
or
sub
add
hlt
jnp
add
mov
push
cmp
imul
and
and
sbb
cmpsl
mov
js
sbb
outsl
call
test
push
fcom
jbe
jae
out
addr16
in
sti
ficoms
in
rcl
gs
pop
jb
cmp
in
inc
lahf
cmc
shl
testb
mov
adc
daa
out
dec
out
out
stos
xor
mov
into
arpl
mov
sub
subl
lods
imul
pop
mov
shrb
shll
scas
push
mov
enter
fsub
xchg
lret
sbb
mov
leave
mov
inc
fldl
sbb
add
stos
and
sub
and
or
loop
cmc
xor
out
in
movsl
icebp
lock
cmpsl
xchg
cmpb
popf
adc
dec
cmp
or
icebp
inc
add
or
test
or
insb
lods
test
jno
js
mov
mov
add
jge
loop
jg
sbb
cmpsb
in
cmp
je
jne
sbb
gs
pop
adc
enter
loop
ret
dec
imul
sbb
mov
loop
jle
dec
pslld
ret
into
xlat
pop
fisubs
sarl
leave
cmp
mov
push
imul
jecxz
out
dec
test
data16
scas
repz
mov
cmp
inc
sub
xchg
cmp
mov
bound
lods
sti
push
ds
insb
mov
lret
pop
lahf
aas
mov
cwtl
push
mov
add
pusha
cmc
inc
loop
cmp
adc
movsl
and
jg
pop
ret
fwait
test
pop
ds
lahf
pop
inc
notl
adc
test
jl
fnstcw
xchg
cmp
ss
dec
push
and
adc
xchg
xlat
jne
test
pop
test
jns
add
push
jo
in
ja
jle
out
push
jo
jno
push
lret
ret
jbe
out
sbb
and
ljmp
cs
and
jl
aad
cli
fmul
or
xorb
mov
inc
push
pop
cmp
fists
dec
rcll
pop
aaa
jg
dec
mov
outsb
int
jb
aam
mov
call
jmp
jne
cmp
int
outsl
fwait
mov
dec
mov
sbb
push
cmp
cmp
in
xor
xor
mov
iret
sbb
push
cs
mov
ret
sbb
movsl
and
dec
lcall
sbb
push
dec
aam
xchg
sub
xchg
fisttpll
pop
xchg
pop
mov
sbb
xchg
lea
push
push
add
addl
clc
sub
or
das
andb
and
jl
pusha
insl
and
xchg
cmc
outsl
mov
jge
or
lcall
and
in
shlb
movsb
push
fadd
xlat
push
inc
pushf
sbb
mov
nop
or
popa
loop
fldenv
popf
push
mov
aaa
aad
ret
dec
pop
rcrl
mov
cld
das
dec
mov
lock
xor
je
sub
xchg
ret
repz
add
fsubrl
mov
inc
mov
jo
fnstcw
push
movsl
pop
and
xchg
xchg
imul
dec
mov
aam
and
and
fimuls
cmp
pop
xchg
lcall
and
js
dec
xchg
sahf
push
add
add
inc
ljmp
sub
jg
mov
ret
cld
bnd
cltd
xchg
pop
cmpsl
fwait
movsl
mov
jo
and
ficoms
and
push
stos
xor
fdivr
pop
arpl
xchg
xorb
add
call
fimuls
cli
sub
push
xchg
push
shlb
cmp
int3
mov
dec
cmp
pop
pop
mov
cmpsl
adc
and
imul
jbe
xchg
cmp
or
jne
ret
xchg
cltd
popa
std
xor
cmp
sub
andb
cmpsl
xchg
or
sub
inc
fs
pusha
push
xchg
fwait
xchg
add
cmc
mov
push
je
xchg
lods
and
icebp
loopne
rcrb
add
jae
and
inc
test
in
jb
movsb
push
cs
inc
sub
cmp
xlat
pop
mov
negb
add
test
push
inc
pop
mov
shrl
xor
xchg
mov
mov
pop
ret
repnz
nop
add
xchg
pop
cmpsb
fnstenv
dec
outsl
nop
loop
inc
adc
adc
push
nop
fnsetpm(287
sub
sbb
mov
xchg
int3
jle
jns
jl
jno
lret
cwtl
adc
lcall
push
addr16
pop
imull
ja
jp
insb
das
popa
loop
std
sbb
ret
in
out
scas
arpl
fstps
pop
fistpl
pop
fstpl
popa
xchg
inc
xor
mov
out
stc
adc
push
xlat
cld
pop
dec
mov
gs
out
dec
lea
inc
pop
xchg
fimuls
inc
bound
inc
mov
cmp
movsb
mov
jecxz
xor
mov
mov
mov
mov
mov
test
test
sub
cmc
sub
jp
jmp
and
mov
cmpsl
daa
cwtl
sbb
sbb
lahf
pop
nop
adc
adc
xchg
pop
mov
mov
mov
mov
mov
jo
add
add
js
jns
jp
jnp
jl
jge
jle
jg
jo
jno
jb
jae
je
jne
jbe
ja
outsl
call
push
imul
in
insl
out
outsb
out
loopnew
loope
loop
jecxz
in
in
out
out
fcomps
pop
ficompl
pop
fcompl
ficomps
push
rclb
push
rclb
push
aam
aad
push
xlat
enter
lret
dec
int3
dec
int
into
dec
iret
dec
rolb
ret
inc
les
movb
mov
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sub
scas
das
mov
and
and
cwtl
sbb
sbb
lahf
pop
nop
adc
adc
xchg
pop
mov
mov
mov
mov
mov
jo
add
add
js
jns
jp
jnp
jl
jge
jle
jg
jo
jno
jb
jae
je
jne
jbe
ja
sbb
test
pop
in
enter
out
outsb
out
addr16
dec
add
dec
inc
das
pop
icebp
ret
fcmovu
pop
fstps
mov
enter
stc
pop
lret
bound
push
rcll
sub
call
lods
and
out
mov
iret
dec
xor
lds
cwtl
inc
inc
movb
or
mov
gs
cmp
add
lods
xor
mov
and
lods
adc
in
push
push
sub
mov
int3
add
in
push
and
sub
sti
bound
pushf
sbb
sbb
or
in
cmc
push
sbb
mov
add
popa
leave
push
add
