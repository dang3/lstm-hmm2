push
add
dec
and
movsb
lahf
sahf
add
lret
push
pop
cltd
pushw
std
push
cmpsl
rclb
gs
mov
test
fdivrs
xor
adc
cmp
das
pop
je
add
aas
jecxz
mov
int3
and
rcr
xor
les
add
rorb
dec
bound
add
cmpb
pop
mov
dec
cld
sub
subl
mov
sbbb
insb
add
in
stos
subl
es
cwtl
jbe
pop
scas
and
mov
xchg
mov
cmp
xchg
lret
or
rcll
testl
mov
push
pop
adc
push
fisttpll
push
scas
dec
mov
mov
push
xchg
mov
adc
fisubs
mov
lods
add
or
mov
and
adc
popa
aas
stos
nop
arpl
jb
jg
bound
jae
dec
dec
sbb
adc
jns
pop
mov
sbb
dec
add
xor
scas
pop
push
sub
rol
shll
jne
je
inc
push
pushf
mov
test
and
inc
mov
pushf
pop
mov
lds
lods
jle
mov
jle
sub
lret
gs
jno
and
in
mov
leave
push
xrelease
push
rorl
and
push
jl
or
or
fbld
cwtl
adc
add
loope
int3
daa
jno
aas
ja
dec
mov
push
dec
in
inc
bound
dec
cld
jle
mov
clc
push
xor
xchg
dec
lret
xchg
jge
cltd
or
sub
shll
mov
insb
mov
or
js
and
bound
push
addr16
adc
xchg
lret
in
add
sub
lods
or
ficompl
imul
fsubs
sub
insl
add
mov
orb
adc
cmp
push
mov
pushf
push
add
fcoms
push
xchg
xchg
pushf
test
sarb
push
cmp
mov
dec
imul
aas
or
pop
push
mov
mov
mov
dec
popa
push
inc
jno
in
leave
inc
jecxz
daa
mov
repz
inc
mov
es
lcall
bound
fs
jmp
add
cld
lea
cmpsb
jb
push
cmpsb
addb
sbb
sbb
xor
popf
cmp
shlb
dec
mov
push
xor
mov
add
xor
loopne
lock
sub
andb
fisttps
aad
xor
sub
push
dec
aaa
cld
rcll
inc
test
jb
xchg
mov
push
cwtl
cmp
xchg
lcall
int
cmp
push
sub
ret
inc
xchg
cmpsw
cmpsb
xchg
sbb
lds
xor
push
mov
inc
pop
int
in
adc
sub
cwtl
sbb
dec
cmp
or
jle
jecxz
mov
inc
xchg
sub
add
loop
push
aas
adc
xor
xchg
shl
in
imul
adcl
mov
xor
sub
pop
ljmp
mov
pop
aad
push
or
lods
adc
adc
dec
clc
mov
arpl
cmp
stos
inc
xor
or
or
inc
pop
cmpl
adc
pop
pop
vpcomb
out
leave
push
mov
scas
mov
push
pop
inc
iret
xchg
push
cmpl
or
data16
lcall
add
rcrl
fdivs
insl
std
test
les
cmpsb
outsl
loope
lahf
mov
int3
xchg
inc
push
mov
or
xchg
push
sub
sub
fisttpl
dec
sub
pop
ret
sbb
sahf
jmp
jg
xchg
rorl
stc
cmp
icebp
aad
push
adc
mov
jl
lea
mov
push
and
mov
cmpsb
xor
leave
lea
arpl
push
mov
push
cmp
pop
inc
cmc
outsl
or
push
call
lret
jne
dec
or
xchg
xchg
xor
xchg
enter
dec
or
stos
das
mov
add
cmpsl
jp
inc
or
popa
lcall
xchg
int3
pop
lahf
inc
mov
cmovs
push
jb
ret
sub
push
mov
push
icebp
mov
jne
es
xchg
mov
call
xchg
add
mov
xchg
sbb
aas
push
push
jae
jae
nop
je
xchg
pop
xchg
ret
pushw
dec
push
xchg
inc
test
mov
cltd
cmpsl
push
rcrl
mov
jle
and
push
mov
adc
push
faddl
add
cmp
push
out
inc
sub
sbb
add
int
roll
adc
mov
mov
and
sahf
jecxz
inc
ficoml
sbb
jmp
sbb
xchg
rclb
mov
inc
cmp
insb
xchg
jge
jb
andb
pop
push
je
jbe
lods
or
mov
pop
sub
dec
pop
lods
xor
ficomps
adc
mov
and
cmp
lods
pusha
push
xchg
aam
inc
and
inc
inc
adc
xor
mov
popa
adcl
jle
pop
insl
inc
fisubrs
pop
and
sbb
or
cmp
cmp
nop
xchg
xchg
pop
jne
in
push
inc
fbld
shlb
fld
xor
push
adc
iret
pop
cmp
imul
add
shl
cmp
push
dec
push
dec
push
imul
xchg
or
aam
dec
push
lret
dec
data16
jmp
dec
sub
sub
lds
mov
pop
pop
or
imul
pushf
push
adc
sub
inc
cld
xchg
add
ja
ss
and
adcl
ds
cld
add
out
or
andb
cmp
sarb
adc
push
inc
out
xchg
mov
cld
cld
pusha
xor
repnz
outsl
mov
or
lods
lods
loop
les
push
addr16
stos
enter
mov
ljmp
push
nop
xchg
add
or
cmp
push
sar
sbb
scas
inc
repnz
in
addr16
inc
sbb
aam
or
xor
in
pop
sub
mov
sti
fadds
andl
ss
shrb
add
xchg
and
fistpll
in
cs
es
sub
cmpsb
mov
pusha
call
roll
mov
mov
mov
lock
subl
dec
aam
je
or
xchg
xorb
add
bound
inc
add
jno
imul
xchg
ret
adc
ret
and
mov
pop
sbb
xlat
dec
jmp
xchg
cmp
push
mov
lea
in
addr16
jg
icebp
inc
mov
xchg
xchg
jmp
into
add
repz
add
test
xchg
testl
pop
cmpsb
or
jnp
push
and
lock
add
cltd
jle
ror
es
pop
shrl
or
inc
dec
rclb
fcom
dec
jb
dec
fisubrs
jb
dec
push
sub
fstpt
adc
push
push
dec
ljmp
popa
rcr
out
xchg
out
pop
sbb
cmp
dec
jo
jmp
je
mov
mov
push
nop
mov
leave
xchg
add
mov
ja
sbb
les
dec
xchg
jecxz
xchg
pop
dec
pushf
arpl
orb
push
mov
lods
in
jmp
daa
pop
popf
imul
cmp
push
mov
pop
out
pop
sbb
pop
xchg
sub
sbb
or
gs
popf
or
mov
jmp
pop
loopne
gs
hlt
mov
and
out
sub
movsl
mov
pop
nop
test
pop
pop
in
cmp
pushf
pop
jb
push
dec
and
cmpb
xchg
pop
lea
lcall
rcrb
addr16
push
notl
add
and
shll
mov
aam
dec
dec
and
cld
mov
inc
sub
adc
xor
adc
test
int3
nop
jge
bound
add
inc
aam
adc
aad
jno,pt
mov
mov
ljmp
pop
das
sub
mov
sub
and
push
mov
jae
lretw
pop
or
sub
test
and
push
cmp
cmp
aas
pop
inc
nop
xchg
jo
sti
fstl
xor
dec
adc
test
push
sub
inc
jg
adc
add
xor
ret
and
adc
pop
jl
mov
negl
mov
mov
mov
popf
dec
les
popf
aam
andb
pop
es
dec
and
xchg
and
push
lods
cli
lds
inc
jl
push
mov
jo
movsb
sub
cmpsb
add
cmp
out
push
test
scas
dec
aam
push
fstpl
subl
movsl
add
roll
lea
push
sar
and
std
lods
dec
push
cwtl
xchg
mov
pop
fwait
loope
divb
xorl
cmpsb
pop
sbb
pop
or
test
and
xor
jno
stos
adc
aam
out
es
dec
fistpll
lods
push
and
call
and
adc
pop
cs
adcl
test
in
jg
pusha
jno
cmpsl
movsl
fsts
add
cmpsb
add
or
aam
setae
push
call
lds
mov
out
loope
int3
in
stc
fistl
and
into
gs
addr16
outsb
mov
xor
cmpsl
cwtl
repz
fists
push
push
inc
fimull
jnp
popf
jbe
insb
jle
xchg
jbe
and
pop
popa
shl
test
xorb
adc
push
popa
xchg
and
je
flds
and
sbb
imulb
inc
mov
or
daa
mov
stos
jmp
or
iret
es
out
insl
lret
subl
mov
lds
dec
fs
jbe
cmp
pop
sub
adc
mov
sti
xor
andl
dec
in
scas
out
xor
mov
idivl
pop
incb
sub
jae
loop
sub
in
mov
loopne
inc
xchg
jnp
push
mov
mov
cmp
rcrl
xor
punpckhdq
jnp
dec
pop
je
jmp
pop
mov
adcb
mov
or
cli
je
repnz
cmc
fwait
hlt
iret
push
dec
inc
xchg
inc
or
push
fwait
sahf
sahf
xor
in
dec
movb
push
pop
sub
mov
inc
int
jns
pop
mov
popf
sahf
cmc
dec
push
loop
in
xor
and
test
daa
cwtl
jg
and
and
dec
push
in
aad
mov
fcompl
cmpsl
sahf
pop
addb
push
imul
add
mov
leave
shll
inc
dec
imul
push
push
popa
adc
sub
adc
cmp
lea
lsl
sub
ds
cmpsl
adc
inc
call
pop
mov
inc
push
jle
bound
insb
jns
push
out
cmpsb
arpl
bound
ficomps
popa
inc
mov
pop
imul
adc
cmp
sbbl
pop
adc
in
aas
pop
adc
jns
lret
cmp
cld
jl
rcl
add
test
xchg
pop
add
lcall
push
or
and
test
fnstsw
add
sub
clc
sbb
mov
dec
inc
and
pop
hlt
shrb
pop
ret
sbb
pop
jmp
testb
data16
and
std
lods
inc
xor
mov
mov
sub
filds
andb
les
dec
cmp
xchg
leave
hlt
sbb
jmp
ljmp
outsl
fucomp
dec
fbld
cmp
jo
xchg
fwait
lods
cmc
sbb
pop
mov
xchg
mov
les
aaa
or
add
cmp
pop
fcomps
inc
pop
fisubrl
cmp
adc
jo
mov
or
mov
sub
inc
cmp
jp
adc
jecxz
adc
test
add
ror
out
ret
xchg
xchg
or
jecxz
rcll
in
and
push
xor
fiadds
sti
push
and
inc
les
dec
pusha
pop
push
xor
inc
test
push
pop
orb
out
or
ja
and
cmpsl
mov
in
adc
mov
push
and
inc
hlt
out
xor
jbe
mov
jnp
push
pop
mov
shrb
subb
in
in
jnp
xchg
mov
fcmovnbe
jb
hlt
out
dec
mov
add
hlt
in
into
jae
jp
xor
cmpsb
nop
dec
push
xchg
aam
inc
in
inc
cmp
out
and
sub
xchg
adc
int3
sarb
sti
pop
sub
cmp
int
adc
scas
mov
and
or
cmp
test
push
or
testl
pop
and
lock
adc
popa
add
outsl
enter
jg
ja
push
insl
std
push
jmp
dec
pop
movsb
in
data16
lods
adc
arpl
adc
push
inc
test
sbb
stos
mov
sahf
jb
testb
imul
adc
in
cld
mov
rorb
imul
sub
cmpsb
sub
xchg
cs
call
inc
adc
adc
add
ss
shrl
push
popa
sti
mov
mov
lahf
xor
and
daa
cmp
push
push
push
push
cmp
outsb
cmp
int
test
ret
mov
pop
sub
push
add
inc
enter
test
and
cmp
inc
mov
scas
popa
pop
rcrl
mov
aas
mov
daa
and
xor
dec
add
or
push
xor
or
xchg
or
or
in
cs
loope
scas
inc
ss
and
xor
push
cmpsb
xchg
mov
mov
loope
mov
pusha
in
lahf
xor
rcrb
aad
sbb
jne
xor
mov
xor
fdivl
daa
push
in
dec
xor
scas
mov
hlt
repz
das
push
in
xchg
sub
lret
pop
aaa
push
loop
pop
lret
sbb
lds
imul
cmpsb
or
pop
or
push
sbb
negb
repz
jmp
mov
xor
xchg
enter
lock
dec
data16
add
xlat
lea
jb
xchg
psubusb
cmp
lret
xor
mov
ss
insl
add
mov
cwtl
jo
add
lods
loope
lahf
add
jno
jno
shrl
push
in
stos
mov
sbb
xchg
mov
repz
aas
icebp
push
out
and
cwtl
dec
daa
add
push
sbb
mov
mov
push
jbe
dec
fwait
push
jb
mov
jbe
cmovae
rcrb
add
inc
inc
sahf
testl
mov
cmpsl
popa
inc
sub
or
out
insb
imul
mov
lods
xor
cmp
ret
mov
lods
aad
fcom
sbb
xchg
sub
lret
or
stc
cwtl
push
in
jbe
aad
inc
hlt
xor
cmc
jb
movsl
int3
dec
in
mov
adc
repz
rcrl
fucomip
pop
xchg
in
dec
mov
in
sub
sbb
xchg
lds
bound
push
lods
into
rdtsc
hlt
and
mov
cmpb
sub
mov
cmp
fs
or
das
xchg
mov
inc
in
xchg
sbb
incl
movsl
mov
es
inc
sub
push
mov
mov
cmp
ljmp
lds
inc
cmpsb
iret
cmpb
mov
or
mov
int
arpl
inc
lods
adcb
inc
insb
jbe
movsl
stos
xchg
pop
pop
xchg
mov
push
popf
inc
ljmp
stos
inc
dec
sbbb
push
sbb
push
push
icebp
mov
ja
fisubrl
fisubrl
fs
mov
xchg
inc
scas
leave
neg
inc
jge
in
sbb
sub
mov
out
xchg
inc
es
jo
inc
xlat
adc
outsl
rcrb
sub
xchg
push
fstps
and
das
lock
sbb
loopne
test
and
jnp
fiaddl
lods
fistpll
sbb
fs
sub
pop
mov
mov
jmp
sub
ljmp
bound
mov
jg
cmc
xlat
fcmovb
xor
adc
std
sub
adc
sub
stc
xchg
inc
ds
adc
cmp
xor
jl
shlb
push
int
or
add
jp
and
and
push
ret
rcrl
gs
push
sbb
test
repz
das
movsl
divl
es
jl
aad
mov
cmp
ret
mov
push
and
inc
fistpl
ds
sti
les
dec
inc
leave
das
sbb
popf
dec
aam
mov
sbb
loop
inc
lea
or
loop
cmp
add
mov
mov
fiadds
mov
cmp
push
adc
add
lds
jnp
push
sbb
push
mov
sub
jne
loop
loope
jge
inc
jl
xchg
popf
lret
repz
xchg
fadd
sbb
add
mov
cmp
repnz
movsl
or
shl
arpl
xor
xor
lods
add
push
add
shlb
pop
jnp
aam
es
sbb
shl
mov
hlt
push
xchg
push
and
mov
dec
xor
mov
and
hlt
mov
pop
subl
je
fmuls
adc
or
add
xchg
repnz
std
jbe
xchg
pop
icebp
fstps
jne
push
push
nop
push
or
mov
sbb
sbb
pop
imul
push
mov
pop
cltd
out
dec
mov
dec
fldcw
gs
mov
pop
lret
xchg
jmp
fadd
ret
jmp
cmc
in
cmp
aam
xchg
inc
fisttpll
mov
and
cmp
push
pop
fildl
lods
adc
adc
xor
adc
punpcklbw
xchg
mov
aad
sahf
or
iret
pop
xlat
rorb
mov
inc
add
jl
add
adc
loopne
fildll
test
pop
dec
mov
xor
insb
enter
daa
mov
lds
loop
cmp
xor
push
push
or
inc
push
cmpsl
lods
addl
or
loopne
ljmp
cmp
xor
inc
scas
xor
jnp
test
les
imul
aam
cmp
inc
ljmp
and
cmp
or
push
inc
cld
and
imul
shrb
push
fwait
xlat
pop
addr16
fs
add
xor
cld
fadds
addr16
sub
repz
sub
cmc
mov
addr16
sbb
jecxz
xlat
xor
xor
sahf
decl
popf
pop
xchg
lods
sub
enter
xchg
repnz
xchg
loop
and
aaa
int
lret
xor
cwtl
mov
cld
jmp
push
mov
push
ret
lods
ret
mov
or
push
stos
aad
mov
push
add
lods
jle
pop
out
ja
out
mov
lods
scas
add
pop
outsb
jl
arpl
outsb
push
inc
lods
int3
sbb
cmc
test
std
nop
cmc
int3
int
xor
mov
adc
mov
jnp
push
icebp
jo
xchg
sub
fs
pop
xor
int
inc
cmc
das
push
adc
data16
sub
jg
add
mov
jmp
mov
jl
sbb
pop
cld
clc
mov
cmc
push
insl
push
rcrl
pop
fistl
jne
ljmp
cltd
insb
pop
aaa
icebp
pop
fwait
in
pop
rolb
and
iret
sub
imul
daa
neg
mov
cmp
ja
xchg
daa
lds
pop
popa
push
pop
aas
adc
xchg
cmp
mov
sub
pop
inc
cmp
dec
cmp
inc
scas
jbe
pop
xor
adc
inc
cmpsl
fisubl
daa
int
push
incl
and
lods
mov
cld
insb
cs
imul
call
lods
mov
jno
test
cmp
outsb
ret
mov
dec
popf
ret
arpl
inc
scas
ret
mov
mov
mov
daa
popa
and
iret
add
leave
add
cmp
xchg
mov
and
fldenv
xchg
ljmp
or
push
jae
daa
loopne
pop
repz
flds
cs
and
mov
sahf
sub
dec
fidivs
es
push
and
in
fwait
and
lret
les
inc
mov
xor
out
iret
push
sub
stos
rcll
test
adc
xlat
push
mov
mov
mov
nop
dec
pop
inc
arpl
jno
or
jmp
mull
dec
push
dec
cltd
push
dec
xor
cmp
dec
add
push
mov
ret
cmp
nop
inc
mov
lds
inc
and
aam
adc
ror
jnp
push
sti
xchg
mov
lods
out
cli
cmp
and
popf
jl
cmp
sbb
ds
xor
inc
or
popa
xchg
pop
sbb
in
insb
inc
mov
testl
gs
outsb
fwait
xchg
mov
xchg
pcmpgtb
inc
dec
mov
outsb
xchg
push
mov
js
mov
push
dec
insl
mov
push
aaa
jb
nop
mov
sbbb
movups
loopne
xor
dec
test
rcl
xchg
or
in
cli
aaa
shlb
out
int3
jne
sbb
push
xor
jle
mov
xorb
ss
mov
imul
movsl
xlat
push
mov
pop
xor
dec
loopne
insb
cs
sahf
adc
xor
add
sub
cmp
push
in
add
pusha
mov
in
inc
out
test
scas
insb
test
fcoms
pop
shr
test
mov
push
pop
push
inc
or
dec
leave
mov
cmp
add
push
shrl
or
gs
mov
cmpsb
pop
pop
shl
mov
scas
mov
insl
into
cmp
mov
sahf
sub
sbb
jmp
int
bound
push
pop
mov
mov
cmc
enter
dec
sbb
xchg
cmp
in
jo
push
xor
or
xchg
ds
mov
or
and
sub
aad
lods
mov
test
pop
adc
sbb
aas
inc
test
adc
ljmp
sbb
mov
aaa
shrl
jge
dec
out
andb
add
pop
fsubl
cmp
sub
inc
sbb
aad
add
sub
sbb
hlt
pop
or
out
les
mov
or
jmp
loopne
cmp
fcomps
sub
icebp
in
daa
dec
jge
lret
mov
pop
adc
jne
rcl
mov
sub
inc
xor
push
mov
stc
xchg
mov
fwait
xor
and
data16
imul
fcoml
loope
cmp
or
sti
pop
xor
cmp
scas
test
loopne
call
ret
sbb
cmc
adc
xor
clc
popf
std
mov
movsl
outsl
cmp
call
push
mov
dec
out
dec
test
pop
push
mov
pop
pusha
les
mov
pop
push
movsl
xchg
mov
sub
inc
pop
mov
pushf
lea
insl
out
xor
inc
pop
cltd
rcrb
push
cs
push
push
mov
dec
ja
mov
ja
orl
dec
sub
pop
sbb
das
xor
cmpsb
push
scas
push
xchg
sub
popa
lret
sbb
adc
add
add
mov
aas
inc
movsb
push
call
mov
ret
lea
jno
add
aaa
sub
pushf
je
xchg
dec
movsb
xchg
sar
push
popa
outsb
imul
or
mov
sub
add
dec
fcomi
adc
aad
push
repz
adc
mov
dec
adc
fcmove
clc
test
jnp
arpl
inc
and
clc
jg
xor
push
jns
popa
and
push
jmp
rcll
xchg
mov
iret
dec
jp
lock
outsl
stos
pusha
mov
xchg
cmpsb
mov
pop
dec
fninit
mov
ds
sub
push
adc
orb
jecxz
addb
mov
arpl
xor
icebp
cli
arpl
and
push
xor
and
cwtl
cmp
rcrb
aad
push
inc
mov
addr16
mov
imul
jmp
inc
adc
mov
aad
int3
icebp
or
gs
adc
or
adc
pop
popa
push
mov
lea
mov
pop
mov
gs
add
repnz
sbb
or
mov
pop
inc
data16
popa
testb
cmp
pop
ret
not
pusha
js
or
cwtl
xor
bound
inc
jge
ret
popf
jmp
mov
dec
push
mov
or
inc
outsl
push
or
popa
addb
push
out
arpl
adc
lods
fldl
push
cwtl
rorb
shrl
fdivs
mov
xchg
mov
pop
stos
std
imul
mov
mov
aas
jbe
mov
pop
pop
jle
rcrb
jl
cltd
add
pop
add
adc
xchg
pop
inc
add
inc
in
roll
icebp
or
mov
mulb
sbb
jge
daa
scas
mov
loopne
add
dec
cmp
jp,pn
jbe
cli
cwtl
inc
loop
dec
cwtl
inc
loopne
jle
repnz
jbe
cmp
cltd
cmpsb
adc
or
stos
insb
xor
adc
stos
add
and
int3
or
popf
out
xor
push
aas
lods
xor
pop
ss
jle
cmp
and
cmp
cli
jmp
out
sti
dec
fistl
testb
push
and
xlat
jne
dec
jno
jp
or
xor
mov
add
cmpsb
xor
push
mov
and
or
out
sbb
out
mov
test
arpl
loop
dec
sub
das
mov
ja
cmpsb
jg
leave
adc
push
cltd
lods
mov
or
xchg
ret
test
test
iret
out
scas
ds
push
out
mov
cld
push
pop
jb
jmp
pop
or
sbb
jg
sbb
xor
sti
mov
push
rorb
icebp
mov
adc
addb
mov
mov
lods
inc
aaa
sbb
test
or
fisubrl
ffree
xchg
inc
mov
testl
add
fwait
iret
pushf
dec
sbbb
xchg
push
push
sub
ret
and
mov
and
mov
jnp
push
or
das
inc
loope
mov
jns
inc
inc
push
lahf
mov
aaa
xlat
addr16
mov
sub
inc
jb
sti
sbb
xchg
push
and
dec
cmpb
icebp
jmp
adc
inc
movsb
bound
push
inc
jle
mov
dec
stc
std
cmp
jae
add
push
ljmp
fcoms
aas
pop
mov
scas
pusha
outsl
push
cmpb
call
adc
stos
sub
mov
std
ficomps
jecxz
adc
dec
and
inc
cmc
test
dec
jbe
sbb
rcll
pop
test
enter
cmp
das
lock
jnp
push
sbb
mov
mov
mov
mov
fs
test
mov
sbb
mov
insb
in
stc
sub
and
dec
and
divb
cwtl
stos
sub
mov
es
inc
aam
je
aam
test
dec
mov
mov
mov
loope
sar
aas
xchg
xchg
pusha
repz
lret
stos
mov
adc
ficoml
mov
lods
cmpsb
and
add
mov
and
aad
call
dec
and
and
push
mov
and
sbb
test
test
and
lahf
aas
clc
insl
fcom
repnz
cmpsl
or
jmp
into
mov
lock
pusha
and
adc
jb
ja
mov
mov
add
mov
push
mov
arpl
push
enter
in
inc
mov
jl
fstpl
inc
sbb
sti
pop
mulb
push
fcompl
dec
dec
std
fcmovbe
cltd
clc
xor
jmp
adc
mov
cmpsl
lret
or
pop
sbb
mov
xor
xor
adc
lahf
pop
xor
inc
add
jle
fs
fs
sbb
jle
push
addr16
add
aam
push
das
xchg
xlat
imul
sub
xchg
sbb
jnp
jmp
xorl
in
call
xchg
xchg
jae
dec
arpl
lcall
aam
cltd
shrl
aad
lock
dec
xchg
sarb
inc
pop
aam
fisubs
mov
in
scas
loope
inc
cli
mov
stos
mov
cmp
into
std
mov
dec
aas
stos
lret
or
push
jmp
es
rolb
xlat
in
adc
inc
stos
adc
rolb
fucomp
test
movsl
mov
clc
mov
add
repnz
lahf
mov
cmp
sbb
mov
lret
scas
loope
cmp
add
shrb
cmpb
int
xor
jecxz
add
orl
inc
push
push
popf
test
mov
repnz
push
testl
aas
cmpb
jae
clc
pop
std
andb
pop
dec
rcr
cmp
jbe
push
xor
lock
ret
xor
inc
arpl
sbb
jge
lods
push
lock
insb
test
or
pop
loopne
gs
jmp
xlat
shll
lahf
and
mov
add
pop
das
ret
mov
sarb
test
jecxz
mov
cs
cmpsl
aas
mov
lods
sbb
pop
outsb
inc
cmpsb
push
push
fnstcw
ja
cld
push
mov
mov
xchg
xor
adc
push
mov
pop
inc
mull
push
push
cmpsl
int3
adc
pushf
into
jo
bound
scas
bound
mov
sub
pop
push
jb
imul
mov
hlt
adc
hlt
test
xchg
mov
sub
out
jae
push
push
or
hlt
push
out
sbb
push
mov
sbb
mov
mov
or
mov
xchg
sbb
aad
mov
bound
popa
movl
lret
pop
hlt
call
cwtl
sub
test
pop
add
or
inc
lret
fwait
or
mov
in
push
dec
lcall
daa
mov
gs
insl
enter
mov
push
adc
rclb
arpl
dec
push
es
arpl
jo
lds
jno
xchg
into
and
test
adc
leave
addl
mov
js
in
push
sub
adc
test
mov
inc
mov
mov
and
cmp
add
cmp
movsb
fdivl
add
into
loop
mov
loopne
fwait
add
pop
mov
or
adc
inc
sub
or
pop
in
ret
lret
and
imul
adc
insb
mov
cmpsb
dec
mov
mov
cmp
rorl
cmc
call
enter
insl
imulb
faddl
pop
adc
xchg
insb
pop
mov
iret
pop
addr16
xchg
repnz
hlt
xor
mov
jno
dec
sbb
gs
icebp
fldenv
mov
inc
jl
pop
mov
push
push
aam
sub
rorb
xchg
dec
jle
hlt
adc
xlat
aas
stc
sbb
jb
cmc
xchg
in
lret
pop
or
stc
sbb
lock
test
or
adc
ds
xlat
aaa
lcall
sub
dec
in
les
xor
and
and
or
jb
cmp
iret
rol
xor
pop
mov
loope
sub
pop
pushf
mov
rclb
mov
adc
mov
xchg
push
repnz
or
push
or
mov
push
repz
jns
cmc
pop
sbb
push
xchg
pop
push
or
and
xor
xor
xchg
adc
cmp
notb
xor
push
pop
adc
lret
fs
inc
sbb
enter
out
or
xor
adc
sub
bound
xor
sbb
or
popf
scas
scas
dec
adc
lea
icebp
ds
hlt
je
sbbl
test
mov
cli
jecxz
fldl
push
aad
negl
add
fstl
jmp
add
lahf
jge
cmpsb
sti
xchg
xchg
mov
push
movsb
xor
dec
mov
int
pop
sti
test
hlt
movsl
scas
insl
std
je
jl
in
ljmp
jo
jae
mov
mov
xchg
nop
or
das
test
andl
sbb
fcmovu
cld
push
mov
cmp
add
inc
sub
push
stos
test
sbb
int3
jecxz
sbb
jge
push
jmp
aas
inc
orb
movsl
ret
sbb
xor
imul
xchg
data16
cmc
loopne
push
sbb
cwtl
add
sbb
int
es
lret
int3
fneni(8087
stos
push
inc
pusha
jbe
xchg
mov
jnp
cmp
sub
mov
sub
sbb
mov
cli
lods
out
int
jo
imul
ja
sub
insl
push
mov
daa
sub
cltd
int
dec
pop
cmp
pop
push
fldenv
andb
add
cmp
jge
loop
sub
mov
xchg
xchg
cmp
fimuls
xor
loope
sbb
xor
jne
fs
loop
mov
mov
dec
bound
inc
imul
push
aad
inc
pop
lahf
rcrl
cs
inc
test
repz
ja
addl
sbbb
adc
bound
or
fwait
mov
mov
aas
inc
mov
cmp
mov
dec
jecxz
nop
inc
cli
pop
and
adc
shr
push
xor
inc
outsb
cmpsb
inc
dec
iret
testl
ljmp
inc
inc
or
mov
daa
push
jo
pop
push
test
hlt
outsb
loope
adc
push
stos
icebp
jg
and
cmp
mov
jle
rorb
sbb
or
xchg
xchg
mov
mov
sub
xchg
or
sti
je
cmpsb
loop
lret
out
cmp
testb
jmp
xorl
popf
cmc
jb
mov
fldenv
out
dec
pop
adc
prefetchnta
sbb
imul
push
jno
ret
fldt
adc
movsb
icebp
stos
xor
imull
mov
aam
iret
mov
cmp
jmp
push
jl
lret
or
std
cmp
cmp
inc
pop
fstps
into
push
pusha
inc
adc
mov
adc
adc
xor
xor
pop
sbb
push
icebp
and
inc
mov
into
mov
jb
pop
inc
mov
push
enter
adcb
jno
mov
mov
mov
xor
sub
repnz
and
xchg
push
loopne
push
in
sub
mov
les
sti
jl
inc
mov
mov
add
adc
ret
or
pushf
adc
and
movsl
sub
pop
mov
add
hlt
mov
es
aam
or
push
pusha
and
cmp
pop
jno
fsubl
cmpsl
or
sub
add
xchg
movsb
sub
hlt
cwtl
pop
dec
aam
data16
lcall
leave
add
xchg
sub
xchg
xlat
mov
mov
test
arpl
loop
roll
push
mov
gs
addr16
push
sahf
fistpll
ja
dec
adc
popa
repz
pop
and
inc
add
outsl
mov
dec
or
or
test
sti
xchg
lds
dec
sub
and
std
lahf
aas
sub
push
dec
dec
enter
bound
pop
aas
insb
cmp
fs
and
cld
xor
jg
inc
les
mov
out
sbb
push
rol
stos
jbe
mov
xor
mov
mov
adc
cmp
dec
fidivrl
lret
scas
test
cmpxchg
call
and
xchg
xor
mov
stos
add
mov
popa
aaa
pop
push
pop
pop
cli
pop
lods
out
sub
mov
mov
sbb
sbb
sbb
xchg
pop
ss
lods
push
or
repnz
xor
push
mov
loope
sbb
inc
sub
adc
adc
je
xchg
inc
or
mov
aad
add
loope
loopne
push
lea
mov
mov
scas
frstor
stos
popa
inc
mov
sbb
xchg
push
cld
fsubl
pop
cmpsl
mov
or
fdivrs
mov
cltd
sbb
fldenv
gs
or
lret
inc
mov
add
xchg
or
stc
dec
mov
sbb
ja
pusha
ret
sub
popa
dec
pop
mov
mov
cmp
mov
xchg
xchg
mov
xchg
ficomps
call
movsb
in
xchg
lret
notb
pop
sub
mov
jp
pop
ret
cwtl
pop
test
jge
xchg
add
and
xor
push
cmp
int3
dec
ret
lret
ljmp
push
scas
mov
cmp
xchg
push
xchg
sub
xlat
xchg
aaa
sbb
xchg
jnp
stos
xchg
cltd
repnz
lcall
in
ljmp
pusha
mov
pop
fstps
iret
jb
arpl
dec
add
cmp
sub
scas
call
test
enter
sti
popa
jmp
xchg
cwtl
inc
popa
or
mov
rol
adc
adcl
add
fs
push
shrl
mov
mov
lahf
xchg
add
test
add
pusha
push
fsubl
sbb
mov
add
pop
outsb
popa
outsl
fcoms
lea
or
rcrl
and
aam
add
adc
fstpl
ja
mov
mov
mov
addr16
bnd
inc
insb
add
dec
cmpsb
push
lods
insb
dec
cli
test
cmp
orb
sub
mov
add
fisttpll
and
sbb
cs
sahf
push
and
cmp
pop
hlt
push
outsb
dec
scas
or
das
cwtl
mov
lahf
xchg
or
cs
mov
pushf
inc
or
repz
jb
pop
test
mov
test
or
or
enter
push
and
mov
in
and
jne
pop
push
je
push
jge
xor
lds
push
outsl
cltd
push
inc
push
xor
aaa
fs
or
adc
repnz
scas
xor
js
mov
in
add
aad
mov
dec
sahf
xor
ret
jle
ja
sub
mov
pop
push
xlat
sub
das
mov
sub
mov
xor
testb
xlat
cld
xchg
or
lock
je
addr16
mov
push
or
cmpsb
jmp
mov
xchg
cwtl
je
pop
adc
popa
sub
fiadds
pop
inc
dec
daa
testb
scas
loop
inc
sub
imul
shl
add
insl
add
fdivrl
adc
cli
imul
mov
loopne
ffreep
adc
dec
dec
enter
xchg
mov
push
xor
adc
mov
xchg
movsb
pop
mov
stos
mov
xor
or
test
fdivl
aad
or
popa
addr16
hlt
xor
std
outsl
out
and
jae
mov
push
cmp
or
cli
xor
jmp
jle
loopne
push
rolb
mov
adc
dec
mov
nop
mov
xchg
cmc
or
sti
mov
mov
xor
mov
dec
mov
jg
out
sti
hlt
mov
adc
jl
mov
sahf
std
ss
stos
mov
push
jp
sbb
pop
out
fidivrl
rcl
add
adc
mov
testl
movsb
and
mov
fwait
push
dec
mov
add
xchg
sub
in
out
enter
icebp
and
jnp
outsb
out
imul
fldt
mov
leave
gs
int3
jle
fldenv
fnstsw
xor
or
xor
mov
imul
inc
mov
rcll
test
in
fcoms
fmul
or
ljmp
cmp
or
xor
xor
push
mov
mov
inc
int
dec
inc
lds
jnp
out
fwait
xlat
ja
cltd
lcall
xor
pop
scas
jmp
mov
adcb
adc
inc
jbe
sbb
rolb
lea
jb
jns
call
jmp
push
jne
fldcw
fildll
mov
cmp
lods
inc
mov
scas
and
push
test
xor
jno
xchg
or
pop
ret
jg
mov
xchg
stc
lret
or
xor
cmc
into
movsl
pop
sbb
sbb
or
subb
mov
mov
xchg
mov
jae
js
cmp
cmc
sub
add
push
daa
cmp
rol
fisttpl
dec
lock
jb
sbb
inc
or
push
mov
cmc
sbb
rcrb
cwtl
out
sub
cmp
out
sub
xor
jg
mov
jbe
enter
and
loop
ja
or
insb
and
adc
cli
add
push
mov
adc
cmp
in
dec
arpl
dec
push
mov
scas
and
jp
cltd
lock
ja
xchg
sub
int3
dec
jbe
outsl
and
stos
or
popa
xchg
fs
imul
data16
jne
inc
aad
scas
and
jge
xchg
mov
bound
cmp
jg
lcall
clc
or
inc
sub
lock
add
stos
cmp
movsl
push
xor
loope
inc
dec
mov
cs
add
inc
push
lock
push
xor
fists
loop
xor
lock
mov
or
dec
or
sub
or
add
mov
rorb
cld
mov
cs
repnz
outsb
mov
daa
push
notl
jb
movsl
fs
rorb
cmpsl
pop
sub
xchg
mov
mov
xor
out
xchg
test
fnstsw
pushf
sub
mov
int
scas
sahf
mov
add
pushf
xor
stos
pusha
test
mov
out
out
jne
fcompl
repnz
and
lcall
push
call
movsl
test
mov
sbb
lret
xchg
sub
add
or
ljmp
fstps
and
pop
pusha
cli
or
loopne
pop
mov
push
jnp
mov
xchg
pop
test
out
cltd
das
imul
add
lea
out
lret
jmp
sti
add
mov
stc
das
arpl
ds
and
cmp
std
xor
sbb
int3
cmp
xchg
xor
xor
mov
loop
inc
mov
push
jbe
test
jp
xchg
outsl
and
imul
push
fs
imul
inc
daa
jne
push
pop
jns
inc
or
jl
and
and
pop
push
sahf
pop
and
mov
leave
sti
lcall
inc
loope
test
jnp
jge
or
mov
add
mov
cld
pop
out
jne
and
push
cltd
pop
adcb
xor
jge
sbb
mov
outsl
sbb
cmp
imull
das
nop
sbb
loopne
dec
inc
fsubrs
aam
and
icebp
mov
clc
mov
je
shlb
mov
cld
mov
xchg
repz
stc
and
popf
mov
lds
xor
ss
lock
test
xchg
or
pop
movsb
push
leave
das
scas
ret
jbe
pop
mov
rdpmc
insl
pop
xchg
jl
in
pop
ljmp
jb
jecxz
add
or
mov
mov
andb
mov
mov
and
pop
ds
pop
inc
pop
fsub
mov
out
aad
fidivrl
sbb
cmp
and
enter
mov
cmp
cmp
xor
xor
gs
enter
clc
jb
jge
mov
cmp
lea
mov
aas
sub
loopne
je
and
ss
loope
sub
ret
cs
push
shrl
cmpsb
popa
mov
xchg
inc
inc
data16
aam
push
rcll
mov
in
and
fs
leave
clc
std
int3
aas
repz
in
xor
mov
ss
jl
adc
push
xor
cli
mov
and
ret
movsb
sub
xor
adc
add
push
mov
into
ja
inc
adc
je
add
mov
iret
repnz
xor
pushf
cmovne
dec
jmp
inc
out
adc
xchg
test
popf
sti
jp
mov
scas
cs
xchg
add
jo,pt
adc
adc
stos
in
daa
add
addb
or
xchg
nop
adc
xor
es
adc
pushw
cmp
stc
cwtl
pop
and
mov
ljmp
repnz
imul
cmpl
lods
hlt
mov
ljmp
cli
test
jae
ss
mov
jg
jno
add
lods
arpl
jg
jmp
subb
in
mov
cmp
mov
fs
add
push
sbb
ja
add
popa
dec
sbbb
push
test
inc
dec
fs
cmpb
mov
sub
jne
pop
out
cmpsb
icebp
xor
cmpsb
decl
mov
push
fwait
repnz
and
or
es
fmuls
push
data16
and
jle
out
ds
lcall
cwtl
or
cmp
or
sub
icebp
cmp
push
lods
xchg
or
adc
or
add
das
es
sbb
dec
fcoms
and
and
sbb
lret
jnp
cmp
out
inc
push
mov
sahf
repnz
or
push
mov
lcall
andb
mov
inc
inc
or
or
xor
rclb
xor
rolb
leave
cltd
pop
xor
push
xor
ret
fs
push
test
xchg
mov
or
enter
or
and
mov
jmp
sub
sahf
dec
sub
dec
stc
test
aaa
inc
adc
jp
dec
mov
adc
stos
mov
inc
mov
and
es
dec
lahf
dec
and
mov
mov
xor
mov
dec
pop
push
pop
adc
xor
sbb
fnstsw
test
and
pusha
test
ds
jo
push
mov
aam
int3
jno
shll
aad
rolb
inc
fcoml
cmc
nop
jecxz
fsubs
adc
sbb
dec
dec
dec
pop
xor
push
or
xor
adc
adc
lcall
or
es
es
sbb
dec
loop
adc
and
aam
adc
xchg
or
or
push
pushw
dec
loopne
loope
faddp
leave
mov
sbb
cmp
adc
mov
repz
int3
or
adc
xchg
add
pcmpgtd
jbe
mov
and
rcrb
lods
pop
loope
mov
inc
popa
bound
js
mov
xchg
adc
cmpsb
bound
nop
xchg
pop
pop
add
mov
add
xchg
mov
adc
jmp
pop
sarb
aam
add
nop
cli
adc
mov
inc
inc
xchg
lcall
test
push
bound
and
loopne
xchg
dec
cmp
fwait
rcll
and
mov
xor
pop
sub
sbb
leave
and
out
ret
inc
add
push
nop
lock
cmc
es
orb
cmpsb
xor
rcr
push
xor
add
bound
dec
jmp
jno,pt
pop
jle
xchg
xlat
cwtl
dec
adc
stos
adcb
or
inc
enter
repnz
inc
xchg
inc
mov
push
add
xchg
lds
push
sub
cs
scas
and
sbb
mov
mov
push
std
loopne
insb
lea
and
and
js
inc
pop
ja
orb
into
xchg
popf
or
push
cltd
andb
push
mov
popl
aaa
sub
inc
lods
popa
arpl
inc
xchg
arpl
and
test
imul
and
and
jl
aam
es
aam
mov
call
or
adc
jnp
shrb
rcll
push
out
pop
insl
movsl
mov
or
and
repnz
loope
lock
arpl
shll
and
sub
dec
pop
clc
popf
mov
pop
xor
movsb
pushf
xchg
mov
and
into
sbb
ret
adc
cs
adc
loopne
outsb
mov
enter
bound
or
sbb
jg
dec
pop
ret
sbb
rorl
inc
jne
sbb
std
sbb
push
xchg
mov
push
push
adc
add
adc
sub
jns
dec
out
out
ss
jns
outsl
adc
ret
xor
fwait
popa
lret
mov
pop
and
imul
mov
stc
lret
dec
loopne
subl
cmpsb
and
push
negl
and
jno
jmp
idivb
std
sub
jp
fisttpl
les
push
cli
jp
fwait
test
or
insb
clc
xor
pop
mov
xor
or
adc
fwait
andl
mov
xor
arpl
pop
mov
xor
and
scas
mov
negl
jecxz
adc
cld
inc
rcll
les
sbb
add
jnp
jg
das
xor
les
and
xor
aaa
mov
adc
adc
pop
cltd
aaa
pusha
lods
sbb
jb
mov
jb
sbb
mov
mov
mov
aaa
jl
cmp
sahf
clc
adc
push
ficoms
add
mov
mov
adc
std
push
push
and
clc
xor
mov
movsl
out
lahf
mov
mov
sahf
cmp
stos
mov
push
in
mov
ja
or
sbb
loopne
in
aad
xor
cli
push
mov
ja
cmp
add
mov
cld
icebp
mov
and
mov
hlt
addr16
stos
sbb
ret
and
lret
or
aaa
les
hlt
divl
aas
test
mov
iret
mov
cld
xchg
sub
push
jecxz
loopne
jle
inc
adc
xchg
push
and
icebp
push
jbe
cmp
aas
pop
adc
lods
bound
mov
inc
pop
or
dec
hlt
sub
dec
inc
jge
mov
pop
and
rcrb
cmp
inc
add
ret
xchg
jne
jnp
mov
jno
push
sbb
mov
inc
push
or
out
cmpsb
in
jp
sar
loopne
or
or
sub
xchg
sub
divl
push
cltd
xor
jo
in
ss
mov
int3
fdivrl
sub
movsl
jp
stos
int
xchg
popa
lahf
jne
mov
xor
xor
jae
outsb
rolb
mov
es
roll
test
dec
cmpsl
call
push
sub
mov
aaa
adc
sbb
stos
and
inc
xor
cmp
xchg
out
int3
in
mov
dec
xchg
inc
sub
js
insb
xchg
test
sub
js
fadds
negl
cmp
fisttpl
cs
mov
jle
sbb
mov
sub
imul
or
jge
sub
mov
mov
mov
mov
leave
xchg
and
fs
loop
test
lds
test
scas
fidivs
call
in
scas
push
jb
inc
adc
loopne
sbb
jmp
jnp
pop
shrb
out
jb
int
mov
popf
and
xchg
push
xchg
push
dec
in
or
fnsave
repz
inc
test
call
jp
inc
cmp
orps
das
pop
cmp
cmp
inc
andb
pop
mov
xlat
insl
in
xlat
insl
and
xor
sti
cld
or
or
divb
mov
cmpl
push
adc
icebp
sub
fucomi
mov
cmp
inc
push
inc
iret
insb
push
jno
inc
int3
jns
andl
jns
cwtl
and
pop
inc
sbb
xor
or
cwtl
stc
add
adc
loopne
lds
xchg
decb
aam
pop
popf
xchg
pop
jo
gs
test
sub
outsb
ljmp
stos
repz
inc
bound
repnz
ljmp
jl
fstl
das
pop
push
cmpb
aad
lahf
jge
fldenv
outsl
and
pushf
pusha
roll
rcrb
out
lds
out
imulb
jne
inc
mov
push
stc
inc
lret
fistpll
enter
mov
arpl
mov
das
push
sub
push
jno
add
inc
pop
mov
or
mov
push
cmp
cmc
adc
frstor
add
repnz
add
jmp
add
adc
inc
mov
lock
lock
fsubl
mov
sbb
shlb
aam
flds
pop
leave
add
xchg
jmp
pop
enter
lock
push
stos
mov
repz
stos
jo
enter
or
pusha
jmp
xchg
jns
add
clc
test
mov
sub
cld
mov
xchg
inc
xchg
mov
xchg
out
rolb
std
pop
fstpl
mov
mov
data16
cld
push
add
sbb
fimull
sbb
je
xor
xor
and
inc
add
pop
arpl
or
fucomi
sbb
jmp
pop
and
xor
add
push
ljmp
xor
out
ss
sub
in
jmp
jbe
andl
sub
repnz
push
push
rolb
aas
call
repnz
fwait
int
aad
add
xor
dec
xor
cwtl
sbb
mov
arpl
movsw
pop
out
out
fcoml
cmpsb
sbb
outsb
je
lret
xor
push
enter
rorl
xchg
jae
pop
xchg
cli
pop
hlt
int
adcl
dec
inc
pop
dec
ja
mov
cmp
add
and
rcll
jmp
rcll
xchg
mov
arpl
cwtl
and
jns
lret
mov
add
add
cli
jge
xchg
dec
mov
mov
pop
in
xchg
mov
movsb
in
pop
or
mov
xchg
in
push
cmp
mov
mov
aad
cli
test
xchg
adc
sub
gs
sub
in
cmp
jne
xor
jnp
jp
cltd
dec
mov
sbb
pop
fbstp
outsl
push
out
aam
out
shl
cmp
sbb
mov
rorb
cltd
pop
int3
add
test
adc
dec
and
repz
push
fisubrl
stc
movsl
mov
pop
out
stos
jmp
stos
jmp
repnz
cli
inc
daa
add
add
in
adcb
sti
les
inc
or
sub
rcrb
imul
xor
fsub
dec
cmp
int
dec
jno
cli
push
repz
add
push
repnz
fs
push
shrb
adc
push
stos
xchg
xor
lcall
dec
cmp
scas
test
aam
mov
xorb
pop
mov
out
adcb
cltd
pop
push
ficoms
push
mov
jge
cmpsl
or
arpl
loopne
and
es
cs
xlat
push
data16
cmp
jne
scas
lods
ds
and
dec
add
ret
cmp
mov
jne
add
dec
testl
aas
fucomp
gs
ss
xor
inc
inc
enter
out
fninit
gs
dec
sub
mov
repz
mov
or
dec
les
mov
push
jnp
xchg
xor
test
cmp
sbb
ret
sbb
jge
mov
ret
dec
jg
sub
adc
inc
popf
jecxz
inc
push
dec
addl
dec
sub
aad
sahf
adc
sti
loop
sbb
in
push
cmp
ja
ljmp
pop
outsl
leave
xor
rorl
data16
jg
jno
add
rcrb
loope
push
out
jecxz
mov
cmpsb
and
inc
in
mov
scas
lods
scas
call
mov
shrl
shl
les
aam
mov
cmpsb
ret
incl
pop
sub
lods
movsl
mov
leave
jbe
sbb
sbb
dec
jecxz
jcxz
shrl
cmp
mov
mov
icebp
sub
std
pop
sub
addr16
adc
mov
xor
insl
into
xchg
fists
fnsave
fisubrs
mov
adc
adc
scas
or
cmp
jb
sbb
cs
mov
dec
sarl
jge
inc
sar
imul
insb
cmp
rcll
loope
andl
outsb
or
xlat
int3
out
mov
dec
sbb
mov
push
stos
stos
jle
stos
ret
fs
cmpsb
xchg
into
pusha
incb
xchg
sbb
or
scas
into
dec
xor
or
and
in
mov
add
and
mov
lock
mov
mov
rol
adc
lods
cmpsb
sub
push
leave
imul
dec
dec
push
std
repnz
inc
push
sbb
or
add
xlat
add
lcall
fsts
fsubl
push
jae
aad
xor
test
shl
xor
leave
xor
adc
push
and
int3
xchg
imul
insb
jo
dec
pop
push
pop
add
adc
in
cmp
pop
cmc
rcrb
jno
pop
mov
lret
sub
icebp
popa
pop
roll
or
cmp
xlat
cli
mov
dec
repnz
sub
loop
in
push
push
cmp
fists
test
test
jb
gs
ljmp
mov
push
push
mov
test
das
add
push
outsb
add
inc
into
stos
and
cmp
mov
inc
insb
loope
cli
mov
fsts
adc
pop
push
rclb
rcll
test
xchg
or
inc
xchg
adc
bound
fmull
pop
sbb
aam
sub
cli
loop
enter
dec
push
sub
pop
leave
inc
shll
mov
mull
pusha
add
sti
loope
push
sbb
orb
lcall
cmp
ret
mov
push
adcl
lds
loope
pop
xchg
sbb
inc
add
mov
mulb
dec
cmp
dec
and
into
sarl
dec
ljmp
push
pop
add
lds
lods
or
rorl
pusha
inc
jb
imul
imul
out
call
ficoml
rcr
dec
add
in
jge
jae
in
pop
out
icebp
hlt
imul
scas
pop
fsubrs
dec
xchg
std
out
jecxz
jae
jbe
mov
cmp
jno
insl
insb
or
mov
mov
aad
loop
mov
pop
or
pop
cmp
or
jne
insb
xchg
pop
inc
sub
push
mov
push
mov
xchg
mov
outsl
orl
mov
adc
inc
std
pop
es
push
mov
lods
jne
mov
fwait
out
gs
mov
divl
ss
mov
inc
test
ljmp
fbld
inc
cmp
add
mov
insb
add
sbb
test
and
push
jp
nop
pop
or
xor
test
pusha
das
jae
add
comiss
jns
dec
cmp
xchg
mov
test
sub
fstpt
shll
fisubl
xchg
sbbb
enter
xor
das
sbb
test
sub
mov
nop
out
das
dec
lcall
pop
add
movsb
push
jns
pop
test
add
lods
or
pop
jle
lahf
bound
xor
mov
ret
jbe
cmp
cwtl
fdivs
cmp
sub
mov
in
bound
jnp
sub
xchg
scas
lds
cmp
cmc
loopne
pop
rcll
adc
adc
or
stos
sub
cwtl
jnp
xchg
xchg
std
sub
fists
fsts
jp
test
inc
push
outsb
jnp
test
adc
push
imul
out
jb
mov
adc
pushf
sahf
out
sbb
movsl
jb
inc
dec
addb
xchg
sarb
lods
mov
cmp
test
ret
sub
inc
scas
int3
addr16
inc
std
jo
adc
xchg
push
test
jge
jo
adc
push
in
push
jo
xchg
imul
mov
shlb
jg
push
mov
add
cmp
inc
pop
mov
aam
js
cmp
push
or
mov
sbb
fisubrl
push
addr16
iret
les
mov
sub
lds
push
pushf
mov
rorb
fbld
xchg
adc
pop
inc
dec
add
cmp
adc
ljmp
mov
sbb
dec
mov
sub
mov
cmp
rcll
imul
add
dec
ss
mov
pop
jge
push
add
lea
push
inc
movsb
jbe
gs
push
adc
add
inc
pop
mov
push
insl
loope
inc
inc
mov
fisubs
rcrb
inc
xchg
fwait
xchg
mov
movsl
lcall
xor
aas
cmp
subl
repz
xchg
mov
fmulp
mov
out
jp
cltd
pop
fldt
sub
movsl
xchg
xchg
fsubs
inc
jp
mov
jo
les
mov
push
jae
pushf
ret
ds
xor
ja
leave
lds
dec
lret
sbb
or
lcall
push
aas
inc
pop
cmp
xchg
stos
sub
loopne
cltd
popa
xchg
mov
sarl
mov
inc
out
mov
jg
aam
mov
or
dec
incb
nop
dec
testb
dec
push
adc
out
mov
mov
xor
fs
sbb
pcmpgtb
inc
push
inc
fcomp
insb
push
inc
aam
inc
gs
movsl
testb
mov
xchg
fs
xor
hlt
inc
xor
enter
cmc
fnstsw
and
out
jb
dec
mov
jle
push
mov
push
sbb
lods
cmp
xlat
mov
jle
jle
js
adc
push
gs
stos
fidivrl
jmp
mov
xor
cld
loopne
push
scas
jno
pop
js
cwtl
aas
aam
cmp
or
adc
cmp
sub
imul
sbb
dec
leave
lret
add
dec
test
lods
pop
cmp
mov
mov
int
dec
xchg
or
lds
imul
ljmp
inc
loopne
out
xor
lret
mov
xchg
lahf
aam
dec
inc
jbe
and
fldcw
lea
pop
jno
add
and
xlat
jb
out
mov
jo
mov
and
lods
xchg
aad
pop
cld
inc
mov
mov
jmp
repz
xlat
out
in
sub
adc
ret
fdivrs
stos
xchg
jns
les
sub
inc
daa
cmp
fnstenv
push
mov
loopne
imul
sbb
add
xor
push
adc
cli
xchg
dec
or
adc
pusha
jg
cli
cmp
fcomps
insb
ja
ss
mov
sub
adc
cmp
ret
sub
mov
add
xor
and
lods
mov
sub
jae
push
dec
dec
mov
pop
in
inc
xor
lcall
xchg
jg
daa
xchg
inc
pop
pop
test
inc
mov
xchg
and
aad
xchg
jle
fnsave
in
pop
jecxz
ret
add
jmp
shll
sbb
sbb
add
xchg
pop
repnz
sbb
test
xchg
loope
sbb
jns
dec
pop
aam
es
sbb
push
mov
mov
bound
inc
jmp
loope
pop
movsl
sbb
sub
add
je
icebp
adc
mov
mov
inc
or
xchg
mov
jp
out
pusha
enter
dec
xlat
jl
ret
inc
jns
roll
adcl
or
and
lret
bound
fidivrs
icebp
and
cmpsl
cli
fcomps
cmpsl
mov
lods
or
lret
push
das
sti
iret
xor
and
insl
insb
push
outsl
xor
sbb
popf
fsubrp
or
sbb
add
rclb
movsb
push
lret
rclb
or
int
js
insb
pop
movsb
push
enter
mov
xor
stos
lds
movsb
push
aad
cld
bound
stos
movsl
inc
iret
add
xchg
sti
cmpb
inc
fsubl
in
rol
shll
dec
push
xlat
pop
test
sbb
lret
out
popf
and
mov
push
inc
xor
xchg
jb
popf
jbe
bound
jg
pop
icebp
xor
lea
cltd
jl
jge
cmpsl
addr16
fsubrl
lea
testl
gs
xor
or
and
jmp
cmc
clc
cmp
sub
xor
pop
scas
clc
push
out
enter
cld
inc
mov
add
aas
pop
mov
sbb
inc
mov
outsb
adc
hlt
hlt
cwtl
pusha
mov
push
scas
popf
test
or
or
scas
out
das
mov
scas
xchg
incb
pop
jmp
sub
sbb
gs
mov
insl
lds
loopne
adc
push
mov
es
in
call
dec
dec
sbb
sbb
stos
push
add
add
xchg
pop
push
bound
stc
sub
iret
xchg
adcb
and
out
sahf
cmc
pop
xor
test
push
sub
mov
adc
jp
mov
ss
pop
inc
pop
fbld
jns
ficoms
pop
adc
inc
dec
shrl
mov
in
push
or
inc
xchg
xor
dec
dec
repnz
fisubl
jle
and
add
push
lds
test
aam
ss
inc
push
enter
imul
xor
inc
scas
cwtl
pop
rcrl
aam
jecxz
cmp
xchg
mov
xorl
push
dec
inc
cmp
movsb
scas
xor
fists
imul
pushl
cltd
mov
push
popa
and
cmpsb
adcl
fisubs
arpl
mov
mov
pop
ret
mov
aas
lahf
sbb
and
add
pop
fbld
jg
iret
dec
out
fiaddl
lock
scas
mov
mov
test
mov
dec
addr16
fcoml
and
jp
insl
mov
pop
stos
mov
mov
sub
fidivl
ret
bound
pop
insl
xorb
bound
stos
mov
cli
in
push
enter
imul
pop
inc
clc
inc
jl
test
sbb
lods
mov
pushf
dec
inc
out
xchg
adc
aas
je
push
add
mov
arpl
mov
lcall
push
mov
cmp
mov
mov
sub
ljmp
mov
ja
outsb
xchg
or
xchg
pop
push
add
mov
addr16
push
jns
in
sti
movsl
inc
mov
adc
adc
ljmp
inc
inc
fnstcw
mov
dec
xchg
out
cmpsl
xor
mov
pop
jne
push
nop
enter
sahf
sub
or
subl
push
aam
sbb
hlt
adc
sub
xlat
add
jecxz
cmpsl
push
or
lcall
ljmp
adc
orb
add
jmp
sbb
popf
add
aam
jmp
push
mov
add
insb
pushl
and
pop
dec
ja
ficomps
cs
push
jne
mov
sub
pop
inc
lahf
push
repz
jno
jg
mov
xor
pop
popf
ret
rcr
adc
leave
movsl
faddl
iret
xchg
mov
stos
sub
mov
jecxz
lahf
aaa
adc
cmp
lds
xchg
stos
adc
outsl
loopne
mov
scas
mov
outsl
in
mov
cmpsl
insl
jl
insb
pop
inc
mov
call
jbe
mov
out
mov
push
sub
outsl
loopne
int3
pop
pop
stc
mov
jbe
test
inc
pop
dec
lods
push
cld
sbb
pop
push
in
xchg
imul
and
mov
xor
loopne
mov
inc
movsb
add
xor
loopne
cld
pop
or
int
jg
inc
jecxz
xor
scas
jp
rolb
push
sbb
fcompl
sarb
jmp
imul
xchg
xor
pop
sub
or
test
cli
lret
in
inc
add
jle
jecxz
inc
mov
sbb
sbb
jl
mov
lods
dec
lahf
mov
daa
add
loopne
or
push
jo
cmp
mov
negl
std
push
jo
adc
sub
cmp
js
fidivl
inc
adc
jae
and
pop
xchg
mov
jne
mov
mov
add
es
fistl
add
cmpl
push
inc
cmp
out
dec
dec
hlt
jl
xchg
jns
js
int
sarb
cmp
imul
test
and
enter
add
fcmovu
icebp
test
add
je
xor
paddusw
and
stos
or
inc
popf
add
jecxz
dec
aad
das
pop
adc
pop
mov
cs
and
ror
int
push
in
cmp
adc
imul
aam
mov
and
fcomps
arpl
out
push
jne
test
test
and
push
shl
test
jecxz
fistpl
sub
test
popa
lea
mov
sub
inc
or
cltd
cwtl
jae
mov
cmp
push
dec
add
pushf
mov
jae
fwait
mov
push
cli
daa
mov
push
aam
jmp
jmp
repz
ljmp
inc
xchg
dec
in
test
sbb
iret
int
repnz
mov
push
shll
sub
insl
pop
xchg
aas
inc
push
mov
data16
adc
mov
imull
dec
jne
pushl
idivb
or
add
and
cld
stc
orb
push
sbb
stos
mov
fwait
sahf
dec
negl
dec
pop
cli
jae
mov
dec
in
out
xor
flds
sub
stc
or
push
jge
loope
xor
sbb
aad
js
adc
pop
and
or
jbe
inc
mov
ret
xor
pop
outsb
and
and
and
dec
in
test
pop
rclb
sub
mov
nop
lock
mov
fcompp
scas
outsl
mov
ss
dec
movsl
ljmp
or
daa
pop
mulb
xchg
mov
sub
pop
fisttps
xor
imul
cli
fistpll
cli
in
loopne
sbb
inc
insl
cs
jg
cltd
and
mov
test
jno
stc
ds
mov
aaa
mov
out
test
pusha
or
mov
dec
or
sti
fnop
aaa
test
lods
pop
jne
dec
insl
or
nop
hlt
pop
mov
add
sbbl
jge
mov
sub
outsl
movb
dec
push
add
pop
into
mov
mov
pop
fisttpl
rol
mov
push
lea
sbb
inc
pushf
inc
mov
inc
aam
icebp
dec
outsb
cli
or
xor
adc
pop
nop
fistpl
push
inc
push
cmp
sbb
push
xor
cltd
mov
das
adc
push
sub
inc
bound
testl
leave
jno
subb
arpl
push
xchg
mov
loop
jne
pusha
mov
inc
pop
add
imul
imul
int
jno
mov
cmp
mov
mov
sbb
shr
das
pop
enter
mov
mov
pop
es
adc
fisttpl
pop
lods
loopne
or
mov
xor
rcll
pop
out
mov
jne
scas
jge
std
aad
jbe
xor
pusha
sti
mov
sti
cmp
ror
jns
xchg
jmp
mov
jbe
scas
and
add
fucom
xlat
mov
add
mull
mov
inc
dec
in
mov
jecxz
mov
and
aad
xchg
inc
hlt
jns
push
adc
or
mov
repz
jno
push
out
test
and
leave
push
push
mov
sub
pusha
shrl
sub
xor
xchg
mov
mov
sub
adc
shlb
jno
lds
xor
xchg
pop
jne
jge
mov
testl
jne
mov
jg
push
pop
push
leave
rcrl
mov
push
add
popa
out
mov
incl
mov
xor
jecxz
in
movsb
sbb
int
jl
sbb
and
daa
fmul
mov
xor
loop
dec
das
popa
mov
gs
xchg
js
pop
push
add
cmpl
mov
sub
std
mov
in
pop
inc
sbb
scas
mov
push
scas
stos
jge
sbbl
pop
mov
inc
jg
add
sbb
scas
mov
push
or
mov
push
leave
xor
divl
mov
xchg
xchg
subb
sbb
sbb
aad
or
cmp
xchg
inc
sbb
arpl
cmpsb
int3
sbb
push
mov
aaa
jae
arpl
fucomip
push
in
mov
mov
sbb
add
iret
adc
xlat
xchg
xor
pop
jmp
mov
mov
nop
enter
out
inc
mov
and
adc
add
sbb
inc
dec
arpl
lds
inc
cmp
mov
push
adc
mov
lret
jl
in
mov
push
add
nop
jnp
loope
add
in
mov
push
sub
push
sbb
test
jmp
cmp
bsf
repnz
cs
sbb
sbb
aam
adc
mov
pop
pop
inc
inc
push
sub
push
and
scas
cld
mov
pop
iret
repnz
cmc
xchg
sub
dec
dec
pop
jp
mov
in
mov
add
cmp
xchg
pusha
ret
jae
push
mov
pop
and
popf
repz
clc
dec
shll
repnz
or
cmp
mov
xchg
lods
cmp
sarb
jg
imul
icebp
sbb
jge
dec
add
cwtl
xor
cmp
mov
orl
or
xlat
inc
in
xor
xchg
mov
jge
out
mov
pop
pop
movsb
sub
xor
stos
dec
jg
adc
int
sti
cs
and
sbb
and
ret
adc
clc
adc
jmp
pop
jns
jp
mov
jl
mov
pop
stos
sahf
or
or
jp
cmp
int
jae
mov
scas
xchg
inc
xor
xor
push
ret
dec
mov
stos
mov
fucomip
push
shlb
out
xchg
ret
mov
aad
repz
and
lea
mov
pusha
sbb
dec
stos
mov
mov
inc
out
cwtl
insl
ror
jnp
lahf
jge
les
or
notl
inc
jl
push
xchg
ret
pusha
pop
adc
xchg
es
sbb
outsb
xor
xchg
cmc
enter
mov
sti
or
inc
and
cld
cwtl
out
mov
mov
fwait
test
cld
lret
pop
cmpl
jns
xchg
xlat
loope
repz
or
test
xchg
mov
inc
jne
lods
leave
ja
push
push
into
inc
cli
ret
jb
fistpl
xor
cmpsb
push
jge
inc
xchg
aas
fnsave
sbb
cmp
pop
inc
xchg
test
pusha
jge
ja
cmp
icebp
push
mov
pop
clc
add
cmp
out
in
mov
sbb
push
lahf
xor
cmp
add
add
and
or
enter
adc
mov
ret
addl
mov
push
out
fwait
lret
out
in
ret
sub
pushf
xchg
ret
into
push
fs
xchg
push
push
push
jmp
out
scas
movsl
mov
cmc
push
call
push
shlb
mulb
jno
jo
outsl
frstor
test
popf
inc
call
pop
xchg
mov
jmp
xor
and
jg
mov
sbb
dec
mov
out
add
add
fldcw
dec
xor
sti
adc
jge
xchg
rcl
pusha
push
es
cmp
gs
sub
push
ljmp
sbb
xchg
mov
sbb
xor
out
ss
sub
jecxz,pt
mov
inc
inc
aam
jge
add
lret
cli
lock
pop
arpl
negb
test
sbb
xor
push
jbe
push
pop
add
add
jg
and
cmc
shrl
cmc
push
and
stc
sbb
lea
mov
cmpsb
les
jmp
pop
nop
bound
lret
mov
scas
sbb
mov
cmp
sahf
and
xor
jo
loop
push
inc
or
ds
and
ds
push
and
mov
cli
test
lahf
insb
pop
fwait
mov
cmp
sar
sub
arpl
dec
and
das
repz
adc
or
inc
fisubl
xchg
sub
loopne
scas
fwait
push
aad
ja
in
ljmp
xlat
inc
ja
xchg
mov
pop
movsb
xchg
ret
xchg
inc
add
iret
pop
sub
mov
or
shlb
jle
pop
pop
xchg
mov
adc
popa
ja
push
push
mov
xchg
fwait
ljmp
xor
push
lret
adc
mov
adc
mov
cmp
jmp
add
mov
xchg
pusha
out
fcmove
ret
mov
fistps
rolb
enter
aad
mov
and
inc
add
pop
xchg
stc
sbb
sti
xchg
ret
add
and
idivb
mov
cmp
xchg
aas
dec
out
and
in
test
mov
lods
clc
mov
sub
movsl
daa
outsb
mov
subb
ljmp
pop
mov
mov
pop
dec
jo
in
jp
xchg
push
mov
adc
jmp
test
das
jmp
sub
adc
jge
lret
subb
mov
cmp
jb
xor
xor
dec
adc
imul
push
rcrl
push
aam
gs
xchg
push
adc
lods
mov
mov
xchg
fsubr
negb
daa
or
push
pop
movb
sbb
sbbb
bound
insb
dec
fnstcw
push
push
sbb
std
pop
lcall
imul
stc
inc
or
jae
jo
stos
add
push
xchg
insb
std
and
fstl
pop
int3
pop
jns
andl
hlt
clc
mov
pop
pushw
popf
out
mov
ss
cs
cmpsb
cmp
lahf
push
insb
adcb
push
cwtl
fbld
push
cmpl
push
jg
out
push
adc
cmpsb
test
gs
dec
fwait
icebp
jle
add
aaa
mov
cmp
cmp
cld
add
arpl
jns
push
adc
xchg
test
roll
xchg
cmp
hlt
or
ret
inc
sbb
pop
add
into
imul
mov
int3
xor
les
mov
adc
add
hlt
dec
inc
fimuls
inc
sbb
mov
mov
repz
and
cmp
push
pop
out
ficomps
rclb
lods
cltd
sbb
push
test
and
int3
mov
mov
inc
movsl
outsl
inc
imul
adc
nop
nop
pop
and
lods
cmp
inc
loop
stos
jno
or
xor
pop
ffreep
push
mov
test
jl
jno
ja
adc
jl
mov
inc
inc
push
and
mov
inc
fsubs
ret
dec
mov
bound
cmp
jmp
ljmp
and
cmp
stos
lock
or
movsb
xor
mov
inc
push
pop
mov
sbb
pop
lods
cwtl
push
push
adc
out
test
dec
pushf
jecxz
js
pop
rcrl
adc
sub
scas
or
add
repz
adc
fsubl
pop
jl
sbb
push
inc
xlat
add
rcrl
push
cltd
into
iret
jmp
push
shll
dec
les
sbb
ds
mov
fsub
push
jns
dec
jo
sub
and
pop
js
mov
test
push
lds
movlps
mov
jle
stos
int
mov
jecxz
sbb
and
imul
scas
jns
xchg
faddl
jo
nop
mov
cwtl
inc
add
sbb
pop
cmp
movsb
frstor
xchg
add
sub
dec
js
sub
xor
push
adc
mov
push
shlb
test
incb
dec
jecxz
or
fistpll
in
mov
js,pt
call
jno
add
mov
rcrl
fmull
mov
into
cmp
cli
shl
mov
jno
lock
push
sti
sahf
cli
adc
mov
cmovne
enter
lahf
sbb
cmp
and
arpl
enter
adc
lahf
in
mov
insb
mov
mov
mov
mov
inc
inc
push
out
out
roll
mov
pop
cwtl
imul
fs
pmulhw
in
imul
addr16
ja
mov
movsl
outsl
test
mov
cmp
adc
push
jns
icebp
fnop
int3
imul
push
sub
and
arpl
pop
repz
or
mov
and
push
repnz
push
sbb
mulb
fisubs
sub
push
mov
in
mov
push
fcom
hlt
pop
mov
movsb
nop
sbb
lods
mov
jg
sbb
pop
ret
dec
xchg
int3
lods
aaa
inc
or
sbbb
inc
xor
mov
sbb
fldt
movl
stos
stc
mov
arpl
jnp
out
call
inc
inc
or
jo
int
xchg
mov
jp
jne
mov
mov
outsl
mov
out
xchg
push
mov
pop
xchg
insb
inc
out
or
inc
add
lea
aas
add
xchg
and
mov
mov
icebp
in
pop
mov
mov
push
fadds
inc
mov
cmp
clc
xchg
and
test
push
mov
popf
fistpll
subl
imul
pushl
push
gs
js
mov
gs
xchg
stc
das
cli
add
add
push
inc
into
sub
mov
ret
mov
inc
aaa
mov
xchg
and
lcall
jmp
xchg
movsb
imulb
sub
sbb
es
ja
mov
ret
or
rclb
xor
incb
enter
xchg
inc
inc
shr
ja
dec
mov
test
or
fs
jl
add
jne
pop
and
jecxz
lods
sbb
and
dec
jo
mov
inc
mov
sub
rcl
nop
mov
jecxz
adc
jno
stc
sbbl
orl
push
jp
push
in
adc
xor
data16
addr16
fs
jnp
push
jp
imul
push
loopne
sti
and
popa
aaa
das
test
sahf
outsb
gs
and
jg,pn
inc
popa
or
or
jmp
pop
rcrb
or
and
cs
mov
cmp
incl
ja
sbb
mov
jmp
mov
mov
and
sub
or
jp
ja
inc
jg
push
mov
inc
ret
sbb
int
mov
movsb
inc
mov
pop
sub
or
mov
fs
inc
add
pusha
repnz
mov
pop
mov
fcmovnbe
fwait
cmp
stos
enter
xchg
lcall
pop
loope
int3
jb
pop
sub
cmp
test
mov
adc
add
ljmp
pop
in
nop
adc
sub
xor
les
adc
inc
pop
inc
mov
add
int
out
adcb
cmp
shlb
mov
xchg
xchg
add
mov
adc
outsl
adc
pop
rcrl
mov
fs
cmp
loope
repnz
or
sub
pop
or
andl
sub
andl
sub
andl
sub
mov
push
inc
sbb
cs
cmp
xchg
or
pop
les
movb
inc
lret
mov
jae
push
and
enter
and
mov
mov
fs
inc
stos
jno
or
pop
inc
pushf
inc
mov
cmpsb
shrl
les
push
addl
lea
shrl
or
lahf
fisttpl
imul
push
xchg
push
sbb
movsb
sbb
or
adc
push
or
mov
les
and
and
hlt
and
dec
lods
add
pop
adc
dec
or
les
jno
or
pop
inc
cwtl
inc
das
and
pop
adc
repz
orb
dec
sbb
das
iret
or
sub
xor
sub
and
mov
mov
push
loop
sbb
repz
adc
inc
cmpsb
lret
xchg
inc
loope
xor
gs
and
nop
jg
and
out
out
inc
mov
sbb
mov
add
sub
inc
adc
mov
push
loop
sbb
mov
ds
dec
je
and
movsl
lds
sbb
hlt
pop
adc
rcrb
xorb
loop
push
push
pop
jle
and
or
leave
dec
mov
jecxz
test
filds
mov
pusha
stos
add
daa
shll
lret
push
cli
in
jne
lahf
les
leave
inc
xchg
int
mov
sbb
push
inc
arpl
adc
adc
add
testb
hlt
mov
push
pop
nop
mov
and
in
sbb
inc
push
mov
dec
andl
int3
add
push
adc
filds
nop
cmp
sub
into
andl
call
xor
mov
push
loope
inc
repnz
xchg
xchg
inc
mov
mov
and
insl
or
andl
inc
sub
and
inc
psrlw
sbb
sbb
and
pop
add
sbb
out
clc
xchg
mov
es
mov
shr
pop
mov
sbb
sub
aam
or
outsl
jmp
cmp
push
test
ja
mov
out
inc
stc
xlat
scas
ljmp
add
pop
cmc
push
cmp
xchg
aam
pop
sbb
lahf
sbb
inc
mov
mov
mov
pop
or
aam
adc
ret
and
shl
out
pop
or
sbb
int3
loop
push
mov
or
dec
xorb
shrb
dec
imul
jl
lock
stos
mov
ret
sub
sub
fwait
push
adc
jg
mov
pushf
bound
xchg
adc
cmp
xchg
out
loope
sub
jl
push
testl
xchg
mov
aas
inc
dec
or
mov
push
push
bound
jmp
imul
jp
in
add
aam
cmp
test
dec
sbbl
and
mov
sub
int
and
mov
movl
mov
mov
jge
sub
pop
cmp
inc
inc
inc
cmpsl
nop
push
fmull
mov
dec
sti
jmp
ljmp
pop
lods
mov
jne
adc
arpl
pop
inc
arpl
or
imul
push
cltd
adc
add
mov
jmp
xchg
sub
sahf
sbb
xor
int3
pop
jno
dec
adc
test
mov
mov
outsb
adc
subb
fsts
or
inc
test
cmp
dec
lcall
and
mov
mov
sbb
push
lods
add
fcoms
sub
test
inc
lock
mov
loope
pop
add
add
adc
and
mov
sub
cmc
aad
inc
loope
fwait
push
pop
push
push
cmc
xchg
jb
inc
inc
std
sbb
push
jne
subb
jp
lea
or
adc
mov
in
jne
pop
fimull
push
insl
pop
jg
mov
sub
adc
or
movl
mov
jle
in
in
aad
mov
inc
ret
or
test
cmp
xor
test
std
dec
call
sub
xchg
inc
jl
inc
popf
nop
inc
je
xor
push
or
andl
or
jae
sub
faddl
adc
mov
cwtl
or
sbb
insl
andb
call
xor
mov
pop
inc
rclb
je
add
hlt
or
and
shlb
bound
adc
and
push
aas
and
daa
sub
lret
sbb
mov
xchg
or
loop
push
and
adc
xor
pop
outsb
jns
int3
mov
inc
pop
sbb
addb
test
inc
mov
mov
repz
andl
inc
rclb
mov
out
or
xchg
and
push
pop
nop
add
and
call
sbb
outsb
loopne
cmp
inc
incl
and
test
and
jno
fwait
mov
out
xor
fwait
jle
repz
ja
or
adc
lea
xor
xor
adcb
lahf
call
sbb
test
leave
ja
cmp
cli
hlt
and
fstpt
clc
or
sbbb
add
dec
mov
jmp
lea
push
enter
xor
stos
sub
push
sub
add
cmc
arpl
rol
fwait
hlt
cmp
jne
stos
push
xor
sub
and
inc
pop
popa
mov
adc
inc
lods
das
negb
mov
jl
outsb
or
push
scas
mov
mov
aas
pop
pushf
lahf
mov
inc
push
jo,pt
and
push
cmp
stos
cmpsl
das
scas
movsl
push
dec
inc
ja
fnstsw
out
stos
push
inc
mov
cmpsb
inc
jge
cli
fsub
hlt
pop
or
outsl
sub
push
push
mov
ds
sub
inc
mov
shll
lock
or
popa
mov
ficoms
mov
dec
cli
test
mov
jns
mov
fmuls
test
out
inc
lahf
es
ljmp
nop
push
stos
loopne
int3
jge
iret
xchg
iret
rcll
and
pop
rorl
xchg
cli
xorl
fcoml
lods
lods
popa
and
pop
mov
imul
inc
lock
hlt
push
mov
xchg
or
cwtl
ret
mov
cltd
mov
and
cmp
test
out
sbb
xchg
stos
mov
sub
je
xor
fwait
popa
nop
insl
jns
repnz
push
inc
sar
shll
mov
or
fdivrs
inc
sahf
imul
cwtl
xchg
imul
repz
push
out
cld
std
lds
dec
cmp
or
mov
daa
add
cwtl
cmp
mov
sbbl
test
scas
stc
in
sar
out
inc
rcll
jecxz
fdivrs
fwait
mov
nop
or
clc
jnp
push
ljmp
les
or
lods
pop
sar
mov
or
inc
pushl
mov
hlt
pop
les
adc
fnstcw
mov
mov
call
imulb
mov
push
pop
in
cs
jp
jg
test
xor
sub
scas
mov
into
sub
mov
inc
sahf
xor
and
jge
in
inc
xchg
ss
out
fisubl
in
fmuls
mov
test
adc
inc
js
enter
lcall
mov
popf
aas
jg
out
pusha
sub
jmp
jl
in
xor
daa
xor
std
popf
mov
mov
mov
outsb
and
in
inc
push
in
xor
lock
push
addr16
pusha
xchg
test
push
loopne
in
cmpsb
in
push
push
adc
inc
test
mov
lcall
gs
sbb
jl
jbe
or
add
push
sub
out
popf
out
arpl
outsl
call
or
xchg
add
fistps
cmpsb
stos
xchg
adc
in
or
test
ja
pushf
faddp
xor
add
and
mov
xor
mov
sahf
or
or
pop
fcom
sub
nop
rolb
or
jae
lret
fistpll
in
or
dec
negl
inc
test
jae
jns
sbb
add
subl
push
data16
push
mov
sub
lods
sbb
cmpb
adc
cwtl
add
fstps
sub
movsl
dec
sbb
push
inc
out
xchg
lret
fimull
in
test
cmp
xor
daa
sbb
cmpsb
jbe
roll
call
orb
mov
loopne
adc
push
jne,pn
xchg
dec
push
pop
div
jae
push
cmp
popf
push
int
add
sub
mov
das
mov
dec
or
mov
push
sub
dec
or
sub
push
mov
cmpsl
ret
cwtl
shll
aam
add
sti
and
cld
xor
mov
jl
rcll
lret
mov
and
lret
lret
and
pop
mov
sub
jae
fs
mov
cmp
js
aam
adc
cli
int3
cmp
push
mov
in
cld
fsubs
or
adcl
ljmp
sub
cwtl
gs
rorb
push
loopne
stos
xchg
lahf
push
lock
or
xor
pop
je
pop
pop
popa
imull
cmpsl
stc
jo
fwait
mov
push
fisubrs
sub
das
sbb
test
mov
loop
pop
push
pop
enter
mov
pop
repnz
jmp
cs
mov
sarl
aaa
sbb
jge
add
scas
mov
sub
pushf
test
cmp
push
adc
sbb
jae
xchg
sub
arpl
mov
in
xlat
cmc
and
cmp
pop
adc
pop
mov
test
pop
into
lock
mov
imul
enter
push
loopne
icebp
stc
push
jno
int
movsl
je
cmp
out
addr16
loop
cmp
mov
jns
xchg
xchg
popf
fadds
ret
xchg
test
jl
xchg
int3
inc
icebp
or
clc
inc
pop
and
and
out
test
inc
and
cs
sbb
add
dec
repz
ja
loop
or
pop
mov
push
pop
es
in
dec
mov
out
cld
adc
inc
stc
add
hlt
and
mov
mov
es
lret
mov
nop
rorl
fldl
xlat
xor
jp
lock
pop
ret
pop
movsl
or
les
mov
mov
popfw
ftst
cmp
push
xor
dec
adc
in
jne
stos
pusha
fcompl
fcomps
mov
adcl
in
or
test
or
sub
or
movsl
faddp
xor
jbe
and
and
add
repz
xor
enter
cmp
fstps
les
jl
and
or
xor
add
iret
or
sub
inc
roll
jmp
inc
dec
adc
pop
pushf
loope
gs
das
or
jge
stc
out
sub
in
push
call
or
mov
and
shrb
sbb
stc
push
sbb
ss
xlat
mov
adc
movsl
lret
inc
outsb
ss
dec
stc
aas
push
rolb
shr
das
mov
push
and
mov
xor
shlb
pop
add
xor
mov
insb
jnp
mov
sahf
and
or
imul
arpl
jge
stos
fiaddl
jg
push
mov
pop
xchg
push
and
xchg
adc
mov
fdivrl
adc
ljmp
sub
jmp
inc
inc
xchg
sbb
mov
pop
cmpsb
add
cmp
sub
out
mov
mov
inc
xor
xchg
xchg
int3
out
sub
xchg
inc
sti
std
fmul
sub
cmp
or
sahf
mov
mov
sub
mov
xor
mov
out
stos
iret
int3
mov
mov
add
aam
inc
adc
and
lcall
bound
out
inc
test
inc
ljmp
inc
mov
sbb
test
cltd
dec
mov
movsb
inc
sbb
pusha
or
sbb
cld
jns
sub
xlat
inc
add
pop
hlt
shl
pop
adc
sbb
int
push
mov
lock
sub
add
mov
mov
xchg
les
aam
jmp
mov
and
into
xor
push
dec
stos
aaa
ds
push
dec
in
mov
repz
mov
and
aad
xlat
cmp
fcom
test
push
push
mov
loop
lods
adc
movb
mov
mull
scas
lds
xchg
jge
or
rorb
inc
mov
lods
push
repz
add
xchg
ficoml
enter
adcb
cmpsl
mov
pop
dec
subb
inc
dec
jmp
and
cmpl
scas
xchg
test
pop
out
inc
inc
inc
negl
push
push
jge
loope
decl
pop
test
and
sbb
loop
cld
mov
sti
dec
or
les
repnz
out
push
push
jbe
mov
and
and
mov
test
fiaddl
mov
scas
loopne
mov
cmp
imul
mov
mov
push
or
ret
lcall
push
xor
ljmp
loop
filds
mov
jb
lret
mov
fiaddl
lret
add
jg
mov
jne
cmp
mov
fidivrl
lods
push
sbb
sbb
push
lds
int
sub
xor
adc
test
lret
lds
or
push
add
orl
aas
xchg
iret
mov
repz
mov
lods
or
mov
mov
fisttpl
stos
push
jne
movsl
adc
mov
movsl
add
sub
pop
jg
inc
inc
adc
sub
mov
and
lods
fsubr
scas
in
xchg
insl
sbb
pop
pop
and
jns
call
enter
sub
sahf
gs
aam
bound
sbb
inc
push
pop
push
xchg
adc
mov
scas
pushf
inc
mov
cmpsb
adc
movsl
mov
cli
aad
out
jo
push
cmc
movsl
mov
pop
push
mov
push
pop
popa
std
sub
loop
sub
dec
sub
out
call
daa
inc
cmp
xchg
hlt
mov
les
adc
movsb
pop
pushf
mov
or
mov
sbb
jecxz
fs
xchg
inc
jns
jl
inc
cwtl
mov
mov
adc
popf
ljmp
sub
sbb
mov
hlt
adc
and
es
sub
mov
adc
sbb
mov
lret
roll
negb
adc
mov
std
andb
scas
mov
mov
add
hlt
sub
pop
lock
out
lock
push
push
pop
push
sub
pusha
or
dec
cmp
stc
stos
testl
mov
sub
cmpsl
ret
bnd
stos
xchg
daa
dec
imul
xchg
jp
mov
jp
fwait
sti
out
and
sbb
int3
mov
mov
adc
lods
jecxz
adc
sub
mov
xchg
imul
cmc
fidivrl
stos
mov
sbb
imul
mov
fstl
call
cltd
mulb
sub
jle
call
fcmovnb
test
sti
js
orl
sub
fldl
or
sub
stos
mov
xorb
cwtl
lcall
sbb
mov
roll
pop
mov
pop
jo
nop
or
clc
shlb
dec
mov
adc
aaa
jmp
pop
push
inc
jp
jns
pop
inc
das
adc
push
and
loopne
sbb
ljmp
iret
push
outsb
mov
mov
mov
call
adc
jns
cmc
push
out
cld
add
push
push
sbb
inc
pop
pop
enter
or
or
mov
push
inc
jmp
fucomp
lret
push
stos
mov
mov
sarl
stos
jp
push
testb
push
sub
push
inc
pop
out
cltd
repnz
mov
repnz
xor
sub
mov
std
imul
push
aam
loop
xchg
lcall
jno
lret
xor
adc
inc
jg
adc
stc
cli
cld
mov
pop
sbb
test
inc
push
aad
sbb
mov
add
push
lods
pop
push
bnd
sub
shl
test
cmp
or
jns
stos
fbld
stos
jecxz
addl
adc
mov
xor
fldenv
es
sbb
jmp
scas
inc
leave
inc
lret
ljmp
out
mov
or
jbe
or
xchg
or
fisttpl
sbb
decb
js
and
pop
aad
xchg
add
xor
push
mov
fidivrl
adc
push
push
mov
push
sti
outsb
cmp
add
shrb
fs
loopne
mov
push
mov
push
inc
and
mov
lock
addl
lods
dec
jae
pop
push
push
dec
pop
xchg
and
fstp
test
xchg
pop
xor
cmp
push
int3
loop
outsl
int
outsl
jb
jle
mov
sub
icebp
mov
in
fldln2
or
int3
stos
cmp
mov
fldenv
cltd
xchg
add
pop
bound
jne
data16
and
daa
nop
pop
das
sbb
inc
aas
pop
cli
push
push
aad
adcb
adc
std
mov
sbb
inc
jmp
fdivrs
inc
mov
jp
aad
rcl
pop
and
je
dec
test
in
push
pop
xchg
pop
out
and
pop
pusha
and
lods
and
pop
mov
shlb
movsl
push
out
pop
cmp
pop
xchg
mov
sarl
pop
mov
jp
mov
mov
cli
hlt
rorl
xor
pushf
mov
mov
mov
xor
or
mov
inc
popl
mov
dec
in
je
jecxz
jge
enter
xchg
xlat
adc
popa
inc
xchg
xchg
loop
push
sbb
pushl
jg
push
sbb
lods
dec
std
add
fwait
jno
xor
jbe
das
sub
xor
inc
push
outsl
push
push
out
cmp
xchg
fnsave
adc
outsb
pop
mov
jg
lock
inc
add
inc
icebp
in
cmp
or
mov
mov
mov
rorl
in
daa
jo
pop
xchg
jne
aad
lahf
xlat
repz
mov
and
movsl
push
pusha
or
cmp
insb
mov
mov
cmpb
dec
pop
iret
ss
jo
loop
or
adc
lds
and
repz
inc
cltd
push
out
jbe
in
stos
adc
hlt
mov
scas
out
in
mov
mov
ja
mov
mov
ds
sahf
pop
xchg
push
inc
adc
fcoms
cwtl
jmp
xchg
mov
mov
adc
sahf
lcall
mov
sub
add
imul
add
adc
popf
or
jmp
mov
arpl
cmp
je
arpl
test
or
mov
push
aas
shrb
sub
mov
sarb
test
ds
xor
lea
out
out
mov
mov
test
adc
mov
push
test
sub
adc
mov
push
mov
cmp
aas
or
jno
adcl
add
jp
test
pop
jge
push
aad
loop
fldcw
aas
shl
loope
mov
or
imul
inc
or
loope
jae
lock
fistl
jno
push
out
notl
stos
data16
shrl
fsincos
loopne
ljmp
and
pop
popf
cmp
xor
lods
push
cwtl
test
cmp
lds
lret
mov
mov
mov
test
mov
ljmp
repz
inc
and
popa
push
std
mov
pusha
daa
sbb
push
push
dec
inc
test
flds
push
cs
scas
nop
add
push
adc
insb
pop
addr16
push
or
repnz
aas
pop
mov
cmp
push
fldt
xchg
imul
pop
test
pop
popf
push
scas
movsl
sarb
lret
jae
mov
push
push
push
scas
mov
test
icebp
dec
cmp
mov
iret
cmp
jg
mov
jp
enter
xchg
ds
add
fldenv
xchg
aad
or
jge
cmp
push
sahf
pop
cwtl
adc
nop
inc
inc
aad
xlat
stos
inc
adc
sub
jecxz
or
psrlq
pop
pop
test
js
xchg
loop
pop
pushl
and
or
cltd
or
pop
in
push
inc
inc
xlat
ret
adc
loopne,pt
stos
sbb
int
jnp
push
push
fsubrl
xchg
mov
call
leave
iret
sbb
xor
lock
nop
pop
mov
aas
mov
cli
pop
cmpsb
pusha
sub
sbbl
call
jle
mov
repnz
loopne
pushf
lds
daa
stos
icebp
mov
jmp
sbb
out
bound
andb
imul
lahf
mov
nop
cmp
sbb
cs
and
cmpsb
call
mov
push
mov
pop
mov
fildll
add
and
cwtl
mov
mov
les
mov
xor
push
leave
loop
sbb
pop
in
enter
pop
pop
pop
js
icebp
pop
cmp
mov
into
cmpsl
jmp
cwtl
xchg
fbld
cmp
mov
das
push
loop
nop
lods
xor
dec
sbb
out
mov
movsl
ds
push
out
lds
pop
mov
push
jp
ljmp
mov
lds
cwtl
push
sbb
push
and
shr
je
rorb
iret
adc
outsl
mov
out
push
lret
je
mov
sti
push
and
xchg
xlat
xchg
divb
call
das
lret
scas
scas
push
cmp
pusha
add
or
mov
sbb
ja
loop
or
sub
cli
inc
nop
lds
cmc
mov
into
les
push
mov
bound
xor
clc
sbb
fwait
fs
mov
repnz
jmp
lret
jge
sbb
or
ret
jbe
sbb
gs
hlt
xor
out
sti
repnz
mov
cmp
in
cmp
pusha
cli
das
das
pop
clc
lret
fistpl
adc
pop
aam
add
mov
fnstenv
icebp
mov
add
movsb
and
xorb
pop
xchg
fcompl
push
jge
mov
mov
test
add
lahf
add
insb
insl
pop
stc
cmp
in
jg
dec
ja
adcb
call
mov
out
lods
push
mov
push
bound
es
add
push
std
out
lds
gs
bound
std
sti
sarb
push
cltd
sbb
jno
jmp
icebp
mov
adc
fwait
test
mov
aaa
pop
imul
nop
ds
adc
xor
mov
inc
inc
outsl
ljmp
aam
and
addr16
pop
lret
dec
dec
push
mov
scas
nop
dec
cmpsl
ljmp
mov
ja
and
dec
aad
dec
les
or
adcl
push
jnp
or
pop
out
and
or
xchg
fiadds
adc
jp
xchg
push
addb
arpl
cwtl
xlat
inc
lret
push
lock
into
ja
jp
mov
adc
adc
imul
lods
iret
mov
xchg
and
or
fildl
leave
imul
sbb
and
adc
inc
xor
pusha
ljmp
cli
in
nop
ret
addr16
lret
lods
xchg
cld
mov
iret
fldl
stc
fldenv
bound
sbb
clc
and
scas
inc
jnp
mov
pop
add
pop
jb
add
cmp
mov
stos
cli
mov
push
pop
adc
xor
or
pop
test
xchg
cmpsl
or
or
test
movb
push
fs
mov
scas
mov
into
adc
mov
push
xchg
lahf
sahf
and
ret
jg
mov
dec
stos
xor
insb
jns
mov
leave
lods
nop
fmul
nop
repnz
adc
sahf
sbb
sbb
ss
repnz
cmp
fs
cmp
push
lret
add
xor
pushf
inc
cmp
sub
sub
xor
xor
mov
jbe
bound
jge
or
std
jns
mov
bound
lret
out
add
jbe
jmp
movsl
pushf
aad
push
dec
shrl
cltd
scas
loope
mov
inc
jns
icebp
popf
fisttpll
ss
jne
mov
push
icebp
mov
add
popf
insl
xchg
clc
cmpl
jl
cmp
lret
xchg
jb
mov
push
icebp
pop
dec
sbb
jne
pop
add
mov
sub
xchg
cmp
test
loop
nop
adc
jge
ljmp
pop
add
inc
jle
sbb
push
ret
mov
mov
ja
push
pop
fsts
pop
vhsubps
lods
fildll
aad
test
roll
sbb
push
ret
jae
ret
repz
push
pop
nop
sbb
movb
mov
jle
mov
movsb
xchg
sbb
leave
inc
adc
pop
iret
xchg
push
ljmp
int3
lods
xchg
cmpsb
call
inc
mul
cmc
shll
mov
pop
pop
and
out
mov
jno
rol
rclb
push
jecxz
sbb
sub
out
pusha
mov
fsubrl
cmp
popf
cmp
ljmp
out
mov
pop
inc
leave
rcll
mov
fwait
movsb
push
mov
or
aad
push
xchg
test
adc
adc
out
xchg
les
stos
fsub
outsb
sbb
mov
sbb
es
xchg
push
or
cmpsl
mov
fs
push
ret
mov
sub
xchg
test
dec
cli
pop
ljmp
stos
in
mov
sub
mov
jno
pop
neg
ja
stos
shll
xor
push
test
in
out
inc
mov
sbb
in
jns
inc
xlat
pop
cs
scas
stos
cli
lds
and
or
sub
cltd
push
idivl
pop
lods
adc
push
mov
in
mov
mov
sub
popa
add
repz
pushl
xchg
inc
repz
mov
mov
aaa
dec
aad
outsb
mov
add
push
push
push
jae,pt
dec
push
cltd
or
jne
and
inc
daa
and
dec
push
scas
bound
sub
push
popa
sbb
je
enter
xchg
out
hlt
orb
or
cmp
mov
mov
ror
pop
inc
mov
adc
pop
sub
or
add
or
jne
xchg
loopne
adc
fsts
sub
lods
xor
loopne
xor
lea
sbb
jb
mov
push
int
shlb
sub
scas
icebp
addl
stos
stos
xor
push
push
imul
or
dec
dec
sarl
roll
pop
or
in
push
jl
pusha
imul
rcrl
fs
mov
cld
sbb
inc
cmp
addb
or
adc
cmp
push
and
bound
push
cmp
inc
shr
pop
dec
inc
aaa
cmpsl
push
jo
sbb
inc
fs
sbb
jae
addr16
pop
js
adc
ja
push
pusha
mov
add
sar
pop
repz
cs
adc
jne
enter
and
xchg
daa
and
loopne
jg
insb
enter
nop
and
dec
inc
inc
ret
out
mov
xchg
xchg
imul
dec
les
jo
loopne
adcl
pushaw
or
mov
cmpsb
mov
repz
xorb
mov
mov
mov
jo
lahf
fsubrs
rcrl
daa
push
or
jg
adc
add
mov
xor
xchg
sbb
and
push
int3
dec
mov
mov
xchg
jmp
imul
add
inc
push
xchg
push
sti
mov
icebp
dec
imul
add
pop
mov
dec
jnp
rcll
push
movsl
jg
mov
js
pop
mov
inc
xor
mov
sbb
cmp
aad
ja
pop
cli
ror
mov
inc
mov
mov
std
movsb
clc
fistpl
icebp
shl
xor
das
add
mov
sbb
cmpsb
scas
notl
mov
decl
dec
jg
idivb
imul
cmc
pop
int3
jg
mulb
imul
and
ds
in
sbb
int
imul
mov
cld
fldl
cmp
out
xchg
jae,pn
mov
cld
divl
insb
popa
xor
jg
push
mov
xor
setne
or
dec
or
nop
cmpsb
dec
mov
loope
popa
mov
sub
mov
xor
pop
push
xor
push
std
push
add
sbb
sub
push
mov
dec
sbb
push
adc
inc
sbb
and
and
orl
add
fdivl
and
dec
jle
mov
addb
incb
cmp
in
lods
mov
jae
std
scas
jg
mov
lods
sub
loope
pop
dec
lods
test
popa
lea
sbb
push
es
gs
out
dec
arpl
cli
in
and
cli
sbb
inc
sub
push
adc
lods
mov
imul
adc
mull
push
daa
scas
push
lods
add
fs
jns
stos
insb
inc
fsubrl
nop
aad
sbb
iret
popf
shrb
movsb
adc
sahf
mov
xor
cmp
mov
imul
pop
jbe
repz
pop
lahf
in
mov
pop
mov
rorl
mov
test
add
sub
mov
dec
adc
test
stos
stc
je
cmp
jmp
mov
inc
ljmp
mov
mov
mov
sub
inc
cmc
inc
inc
adc
push
in
test
dec
add
mov
insl
test
push
xchg
add
fdivrs
add
ds
xchg
cltd
jnp
testl
stos
xor
or
nop
leave
inc
push
adc
jmp
jmp
sbb
jne
inc
jb
xchg
mov
and
loop
mov
mov
popf
jae
mov
addb
mov
adc
fisubrl
xchg
cs
jg
test
out
rcrl
mov
add
add
icebp
pushf
or
clc
lock
clc
popf
stos
scas
mov
repnz
movb
test
mov
fcomps
push
inc
xchg
test
push
mov
je
cmp
int3
imul
imul
cmp
fsubrp
mov
xor
mov
out
mov
ljmp
jb
loop
test
and
adc
shrl
xchg
test
inc
sub
testb
lahf
push
cmc
rcrl
mov
scas
addb
test
inc
add
js,pt
adcb
movsb
pop
or
or
int3
mov
mov
out
inc
mov
out
fstpl
in
test
lret
gs
adc
es
ljmp
test
inc
sbb
xor
pop
movsb
nop
ret
jecxz
sti
int
xchg
mov
cmp
xchg
push
adc
test
pop
push
mov
fcompl
jge
lods
aaa
pop
shll
or
push
dec
enter
xor
pop
mov
sbb
lret
loop
inc
sub
mov
sbb
push
push
cli
xlat
jne
arpl
les
xor
xchg
jmp
cwtl
push
inc
jns
pop
je
iret
in
sub
subl
ljmp
add
movsl
xor
adc
adc
int
inc
inc
push
loop
and
sbb
lock
cmp
xchg
sbb
pop
fs
adc
or
das
or
das
rcr
loope
orl
sub
add
push
xlat
fcmove
inc
and
pop
stc
xchg
push
sbb
mov
push
inc
sub
xor
push
mov
call
cmpsl
imul
out
stc
xchg
cmp
sahf
pop
cmpsb
and
andl
insb
xlat
bound
repz
mov
inc
les
and
xor
cmp
out
lahf
add
sbb
insb
jnp
out
jmp
push
jp
scas
out
jl
dec
jo
fmull
xchg
jo
xchg
push
cltd
popf
pop
rsm
lret
hlt
outsl
ds
and
mov
in
push
sub
lret
mov
mov
or
pop
mov
pop
repz
mov
rorl
sub
adc
push
dec
lods
push
int
lea
movhlps
push
jge
in
test
popa
adcb
sub
adc
mov
push
or
xchg
cmp
mov
pop
xor
pusha
or
push
fnstsw
dec
add
sti
repz
or
dec
xchg
scas
test
in
and
call
push
ud1
and
xchg
push
mov
cmp
xchg
and
mov
inc
mov
les
stos
cmp
fidivrs
sbbl
inc
and
fsubrl
pop
mov
adc
icebp
ret
stc
sub
sbb
sub
cwtl
dec
loop
into
cmp
pushf
cwtl
in
sti
inc
dec
mov
push
cs
stos
cwtl
idivb
push
xor
lods
dec
sbb
pop
jbe
mov
lret
mov
xchg
adc
iret
aad
xchg
pop
in
sbb
and
cwtl
adc
and
repz
push
inc
mov
jo
nop
pop
jg
mov
add
or
or
pushf
dec
mov
xchg
mov
lock
addr16
mov
pop
sahf
inc
adcb
pop
repnz
pop
fucomp
fwait
sub
jge
movsb
xor
lods
pusha
sbb
dec
add
push
sbb
jmp
xlat
add
xor
mov
cmp
mov
and
xlat
outsb
arpl
testb
cmc
mov
push
jg
out
and
push
inc
and
cs
push
mov
mov
ss
mov
xchg
mov
pop
std
out
lods
mov
dec
fldenv
xor
mov
pop
movsb
jl
add
test
cmp
jne
jne
adc
test
mov
in
cmp
call
loope
or
xor
stos
jmp
sub
pop
pop
ja
mov
jmp
sbb
testb
mov
fistpl
sbbb
lcall
sbb
mov
push
jmp
lods
xor
test
cmp
adc
test
sub
das
inc
pop
call
and
jg
lcall
sbb
add
fcomps
sub
push
cmp
cmc
mov
dec
repz
cmp
mov
call
fwait
lret
es
ret
popf
xor
ficoms
mov
pushf
pop
rclb
hlt
stos
mov
inc
test
jbe
and
pushf
inc
or
pop
loopne
aad
pop
mov
jl
adc
dec
pushf
sbb
add
testl
test
addr16
sub
jmp
in
out
nop
test
lret
and
xor
es
xchg
lods
arpl
inc
and
cmp
sti
cwtl
push
pop
and
mov
in
mov
jne
adcb
mov
aas
lahf
push
loop
mov
stos
xchg
add
stos
mov
call
lret
rclb
aad
sbb
lods
ret
test
out
adc
jo
jmp
mov
or
in
rcll
push
mov
testl
cs
mov
ljmp
add
adcl
xor
fwait
xor
rcr
inc
inc
cmpsl
xlat
push
jno
xor
dec
mov
inc
pop
jle
mov
push
jne
sbb
dec
aas
or
mov
jmp
pop
and
ljmp
cmc
rcrb
faddl
sbb
sti
lock
jb
adc
mov
out
push
pusha
add
and
add
fsubl
shrl
push
mov
pop
cwtl
in
ret
xchg
ret
xor
nop
mov
jo
stc
movq
movsl
ss
js
mov
js
jmp
xchg
es
pop
xchg
lcall
or
fcmovbe
int
add
push
sub
fcmovu
dec
mov
daa
fadd
sub
cmp
lret
scas
addl
idivb
enter
sbb
enter
adc
add
repz
clc
scas
mov
out
rcr
and
jecxz
popa
push
cmc
jno
adc
mov
cmc
out
and
dec
jl
jb
xchg
stos
gs
out
pop
push
and
add
stos
scas
orb
inc
jno
andl
mov
fs
add
clc
and
inc
aam
cmc
add
or
pop
add
sbb
ds
stos
loopne
fmull
push
dec
mov
mov
insl
cld
cmp
je
sub
mov
adc
test
inc
dec
mov
aaa
das
lods
aam
mov
jae
dec
inc
xor
mov
je
xor
sub
jg
jmp
xchg
jecxz
iret
rorl
push
push
orb
xorb
sub
bnd
lock
xchg
ja
jl
jno
xor
xlat
add
les
inc
stc
add
in
dec
inc
push
fistpll
aas
sbb
and
sub
addb
pop
mov
inc
aaa
and
add
mov
mov
sub
aas
mov
rol
jp
dec
dec
pop
pop
xor
inc
std
out
jl
push
ss
inc
mov
aam
and
or
push
push
push
sbb
decl
push
push
aad
pop
xchg
pop
inc
dec
movsl
lea
pop
pusha
push
mov
ret
ljmp
or
push
loope
clc
js
and
ljmp
and
ja
push
sbb
pop
clc
xor
pop
mov
aaa
lea
push
sbb
add
lock
inc
add
outsb
test
mov
pop
neg
negb
or
jne
dec
cmp
movsb
cmp
andl
repnz
and
push
cwtl
adc
cmp
xorb
push
xor
xor
sbb
mov
xchg
dec
mov
add
xor
sub
lds
aas
and
out
xchg
xchg
call
push
sbb
xchg
xor
popa
cmp
cmp
push
inc
adc
mov
bound
pop
pop
pop
add
add
pop
adc
and
rclb
add
loope
dec
jg
jecxz
adc
data16
jbe
mov
and
in
fsubl
sub
sub
cmp
pop
xchg
pop
insb
bound
adc
pushf
inc
mov
fadd
movsl
loope
dec
jg
pop
xor
ja
ret
aaa
sub
aas
loope
andl
adc
sub
mov
push
mov
cmp
in
call
sahf
bound
mov
sarl
lcall
xchg
mov
ds
stos
cmc
inc
loop
pop
insb
mov
lds
icebp
jmp
dec
xlat
insl
repnz
jmp
lock
or
and
aas
cwtl
mov
test
rcrl
pop
adc
cmc
xchg
or
mov
cmpsb
add
cmp
sub
sub
rol
xchg
enter
jecxz
dec
js
int3
iret
ret
and
lock
sub
test
jae
mov
xlat
scas
pop
push
pop
cli
jg
lock
cs
mov
test
ljmp
push
loope
hlt
aad
xchg
mov
es
enter
adc
mov
filds
mov
aam
jo
xor
sub
std
test
mov
sbb
mov
mov
inc
mov
sbb
add
fstl
mov
movsb
jno
ss
out
ret
mov
fildl
xchg
jb
mov
mov
add
dec
stos
jle
pop
insb
notb
loope
lea
imull
hlt
and
mov
inc
notl
push
or
add
lds
inc
sub
loop
adc
fcompl
or
push
ffree
data16
mov
push
scas
out
cs
stos
xor
lcall
ja
jo
xor
push
iret
dec
clc
jno
imul
mov
mov
inc
xor
fcompl
add
jl
lods
mov
xor
mov
cwtl
add
mov
fwait
sbb
jno
ret
daa
push
imulb
mov
inc
jg
and
in
movsl
test
mov
test
out
or
outsb
es
aaa
push
push
push
pop
push
das
cmpsb
mov
jno,pt
fstl
mov
int
stos
mov
cmp
stos
cli
popf
pop
stos
jle
std
xchg
push
mov
stc
mov
cmp
icebp
fwait
stos
je
jnp
ret
push
aaa
jb
sub
pop
or
jns
dec
add
dec
imul
lret
push
ds
or
ja
int
inc
sbbb
sub
fs
adc
lahf
leave
test
cmpsl
stos
adc
shrl
push
push
notl
insb
push
or
push
jae
mov
xor
lret
xor
lea
popa
sub
mov
sbbb
mov
mov
mov
psrlq
adc
adc
adc
adc
add
sub
ja
popa
push
cmpsl
fildll
add
jge
fs
mov
movsb
jp
and
dec
stos
ret
mov
imul
or
pop
dec
push
das
lret
addb
push
popf
and
cmp
out
adc
or
and
and
andb
sub
ret
inc
and
int3
or
add
fmul
mov
mov
mov
js
pop
cld
enter
adc
mov
cmp
imul
or
aaa
lgs
jne
push
pop
icebp
stos
adc
out
mov
push
mov
out
push
mov
lds
testl
adc
mov
pop
xchg
push
ja
add
punpckhdq
decb
std
and
cmp
loop
xchg
sbb
lret
sub
xchg
shl
lods
mov
sti
push
testb
mov
jge
nop
jne
dec
pop
push
out
mov
jbe
xchg
xor
pop
fdivrl
sbb
pop
sbb
sahf
dec
movsl
push
sub
outsl
std
pop
sbb
xor
outsl
mov
daa
lcall
add
cmpsl
sbb
test
das
xor
adc
mov
lret
xchg
xor
mov
xchg
add
dec
out
mov
sbb
int3
cmp
mov
mov
stos
cmp
ret
fisubrl
insb
scas
lods
fbstp
cwtl
or
test
data16
xchg
repz
mov
sub
xor
and
ret
mov
push
cmpsb
sub
mov
mov
hlt
jp
push
cmp
aad
movsb
mov
repz
add
jne
sbb
adc
push
int3
out
cmpb
sahf
push
test
fdivr
out
jne
repnz
repz
jle
addr16
out
sub
int3
dec
jo,pt
popf
dec
xor
xlat
dec
inc
pop
loop
dec
inc
enter
lods
xchg
mov
push
pop
in
mov
shlb
repz
push
jl
sub
outsb
lds
and
fldt
sub
mov
test
xchg
dec
je
xor
int
les
in
into
push
jl
xchg
cmp
mov
out
cmp
cmp
roll
pop
add
outsb
jo
mov
cmp
and
into
push
dec
push
sbb
mov
ljmp
dec
sti
fsubs
popa
mov
jg
rcll
jb
mov
push
xor
in
or
dec
pop
rcrl
icebp
pop
filds
out
nop
aad
cmc
inc
mov
out
mov
or
xchg
sub
mov
mov
cwtl
xchg
dec
or
fisubl
jae
cmovae
pop
lret
xor
dec
aaa
xchg
jno
or
or
lcall
loope
mov
test
bound
dec
sbb
fistpll
or
jle
roll
jno
dec
xor
adc
out
xor
adc
add
out
divl
jle
or
pop
repz
sbb
adc
cmpl
ffree
in
adcb
loope
inc
xor
ja
sbb
packuswb
jmp
lock
mov
lahf
out
lret
and
or
add
jmp
xor
aaa
out
call
lds
aas
cmpsb
idivb
mov
ljmp
mov
loopne
divb
push
je
push
mov
mov
int3
jae
movsl
ds
inc
xchg
xchg
addb
aas
fidivrs
sub
push
cmpsl
mov
push
test
sbb
popa
pop
rcrb
or
add
sub
push
mov
sbb
cwtl
inc
dec
scas
popa
imul
cmp
xor
dec
outsl
sbb
add
ja
inc
pop
ljmp
or
dec
mov
nop
lds
ds
andb
sub
shr
ljmp
push
pop
aad
dec
adc
mov
push
pop
jp
add
es
aas
inc
push
lds
mov
sahf
mov
lret
jle
notb
cmc
dec
jno
lds
data16
mov
test
rorb
push
pop
lret
cwtl
xchg
es
xlat
gs
cmpsl
ja
jmp
cs
dec
fs
and
test
or
rcll
cmp
movsl
in
jae
movsl
iret
call
sub
and
stc
int3
inc
sbb
inc
dec
jo
dec
mov
out
ret
fsin
sbb
out
cmp
dec
jbe
jnp
scas
inc
insl
cmc
scas
xchg
lods
popf
push
dec
and
pushf
int3
les
inc
sub
mov
outsb
fs
pop
inc
into
dec
mov
sub
inc
add
mov
popa
dec
cmpsl
int3
dec
test
popa
pop
adc
les
rclb
mov
popa
in
mulb
sub
scas
mov
inc
sub
out
or
sub
adc
les
push
mov
loope,pt
add
add
es
adc
in
cmc
loop
aad
or
mov
xor
and
hlt
xlat
mov
lods
cmp
dec
add
mov
enter
icebp
add
mov
or
sti
push
dec
add
sbb
inc
lods
ret
loope
das
adc
xlat
or
lret
test
jle
pop
cli
xchg
sar
inc
bound
sbb
xchg
pop
test
jne
lret
xor
mov
sub
in
sub
in
dec
or
dec
jns
mov
in
cmc
out
mov
imul
pop
fadds
or
daa
adc
scas
and
clc
les
add
lcall
push
xor
dec
aad
fmul
add
and
or
les
lret
ficompl
addb
inc
xor
shlb
je
lret
imulb
mov
out
sar
test
mov
mov
mov
mov
push
into
sub
pop
mov
sbb
sbb
int3
stos
jecxz
jge
enter
shl
jo
mov
push
rcrl
push
mov
adcl
icebp
andl
pop
dec
decb
jbe
scas
jo
iret
in
add
cmp
scas
mov
jmp
cwtl
mov
mov
cltd
fs
mov
push
in
cmp
and
daa
imull
adc
xlat
in
arpl
incl
add
mov
mov
dec
sarb
cmp
pop
subb
xchg
xchg
test
adc
mov
mov
add
pop
push
sbb
push
fsubl
xchg
jne
mov
cli
mov
push
into
xchg
push
out
popa
daa
pop
and
sub
test
test
test
test
mov
in
dec
inc
push
dec
outsl
clc
and
add
movl
or
into
push
leave
add
lret
lods
imul
jb
jl
iret
adc
push
inc
mov
sti
dec
cld
icebp
xor
out
dec
xor
imul
adc
aad
repnz
jae
ljmp
imul
scas
push
rcr
rorb
cmp
fadds
ret
out
inc
or
dec
inc
vmovhps
repnz
jmp
ret
mov
cmp
fisttpll
lret
stc
dec
pop
xchg
add
lods
bound
orl
mov
adc
sbb
dec
std
popa
inc
dec
ljmp
sub
pop
mov
mov
cmp
rcr
pop
inc
cs
and
lods
stos
inc
adcb
fsubp
jle
cmp
enter
aam
jmp
xchg
sub
mov
inc
jmp
scas
divb
int
ret
sbb
jno
push
push
mov
lcall
enter
cmpsb
jmp
cmpsl
test
jno
pop
cwtl
sarb
push
and
fstpt
imul
or
mov
mov
mov
push
test
popa
or
cmp
sub
icebp
push
shll
sbb
mov
pop
push
pop
lahf
mov
scas
out
addl
mov
test
cmp
xor
out
xchg
sarb
xor
std
sbb
pop
dec
or
inc
mov
mov
lret
inc
lds
pusha
mov
mov
xchg
push
or
mov
test
test
ljmp
mov
repnz
mov
mov
orl
dec
mov
push
aaa
xchg
imul
mov
xchg
les
cmp
mov
mov
out
rcll
imul
jle
ret
js
and
add
adc
xor
pop
pop
lret
mov
into
aad
dec
xchg
jo
mov
mov
or
push
add
popa
inc
lret
inc
add
mov
std
jge
push
mov
rclb
and
and
adcb
sbb
or
add
add
test
enter
mov
in
lret
push
rorl
mov
dec
push
xchg
pop
sub
adc
ljmp
lds
xchg
xchg
into
adc
fcmovnb
lods
xor
into
cmc
inc
sub
nop
adc
jnp
xlat
clc
lret
sub
enter
fbld
nop
pop
add
jp
mov
mov
sub
pusha
cli
rorl
inc
ficomps
mov
pushf
sbb
leave
mov
ss
ret
test
inc
xor
mov
sub
pusha
cmp
repnz
inc
arpl
sub
push
mov
sub
pop
add
lcall
pusha
insl
mov
sub
and
stc
aad
mov
add
movsb
sub
push
lret
or
and
cmpsb
in
popa
push
inc
enter
jmp
xchg
pop
sbb
scas
in
roll
insb
aad
sbb
ljmp
adc
in
nop
add
push
popf
add
mov
movb
cmp
push
icebp
adc
stos
sub
mov
bound
lret
scas
or
or
mov
addb
mov
cli
lcall
add
outsb
ljmp
dec
lods
add
adc
pop
sbb
add
gs
jnp
sti
jne
mov
popa
stc
mov
adc
stos
lods
mov
jne
jmp
jp
fwait
daa
add
add
fiadds
fsubl
and
or
and
out
ds
add
lods
add
mov
add
std
xor
mov
adc
xor
insl
and
pop
aad
lahf
jbe
add
imul
ja
out
divb
mov
mov
jo
mov
cmpsl
aas
mov
jnp
mov
jmp
add
sahf
fldcw
sub
sbb
orl
and
aas
mov
mov
xchg
movsb
popa
aas
adc
sub
lahf
or
pop
repnz
ret
enter
adc
mov
mov
shlb
cmp
mov
cltd
xor
mov
xor
mov
push
cmp
add
fwait
clc
adc
sbb
adc
push
or
stos
sub
lock
adc
jmp
jecxz
aad
ret
addr16
stos
sbb
or
pop
sub
aad
push
inc
arpl
dec
add
cmpb
popf
ja
es
es
cmpsl
or
or
loope
lods
adc
pop
inc
and
sbbb
mov
xor
icebp
inc
xor
test
pop
mov
popa
cmp
push
jmp
scas
in
movsl
push
bound
bound
mov
adc
cltd
push
lds
stos
jp
paddusw
xchg
gs
adc
aaa
push
cmpb
xlat
iret
icebp
orb
int
in
jb
loopne
outsb
add
adc
stos
jp
loop
ret
in
loope
aam
mov
les
les
lret
jmp
and
pushf
mov
or
sbbb
cmp
mov
push
aad
add
sbb
imul
mov
pop
repnz
and
pop
lods
mov
cltd
or
add
ljmp
clc
repnz
call
push
jne
mov
mov
cmpsl
push
mov
mov
lods
mov
lods
fimull
xor
adcb
cmpsl
mov
fmul
xor
mov
xchg
jb
mov
mov
sbb
xor
int3
add
test
jg
mov
inc
repnz
cmpsb
sti
fistl
pusha
xor
sub
test
or
lds
dec
adc
stos
or
aam
sbb
rolb
mov
dec
xchg
sbb
adc
inc
test
push
push
jg
jnp
lds
in
leave
and
imul
and
dec
daa
lar
push
sub
insb
pop
ds
pop
pop
or
cmpsb
push
push
lcall
adc
xchg
sbb
mov
and
add
cmp
imul
sahf
push
imul
test
push
sbb
xor
pop
sbb
inc
cmp
out
dec
imul
mov
jae
xor
push
dec
jno
mov
repz
cmc
and
rolb
sub
xor
mov
xor
push
iret
popf
cmp
imul
or
shr
jl
and
cmpsl
push
insb
jb
dec
jbe
nop
pop
pop
pop
xchg
mov
lds
dec
addb
test
sbb
jb
imul
sahf
imul
dec
cmp
xor
roll
dec
add
xor
rorl
dec
or
aaa
decl
pop
stc
xor
pop
cmp
fisubl
jo
mov
jo
cmpsb
push
sbb
cmp
in
and
jmp
jmp
jge
outsl
or
in
pop
js
push
mov
pusha
dec
lcall
adc
cmpsl
or
inc
mov
adc
push
xchg
mov
sub
daa
aad
loopne
add
nop
sbb
sbb
ret
mov
add
decb
lods
inc
adc
inc
rclb
lahf
mov
xchg
cs
call
cmp
inc
inc
nop
dec
insl
cld
xchg
icebp
popa
scas
cli
sbb
and
call
imul
ret
in
aaa
sbb
leave
leave
pop
divb
mov
push
mov
cltd
data16
lahf
dec
and
xor
pop
jne
mov
int
cmc
je
mov
or
vcvtdq2ps
test
outsb
jmp
pop
push
dec
push
fstpt
fwait
pop
cmpsl
mov
cmp
ja
or
test
fst
jp
add
sbb
cmc
lds
xchg
out
rep
pop
xor
movsb
scas
or
xor
scas
or
push
test
xor
orb
or
js
push
dec
inc
mov
pop
enter
mov
push
ficompl
push
pop
sub
mov
sub
jl
aas
pop
int
in
fldcw
jb
push
test
ret
xlat
add
movsl
sti
out
shufps
jae
loop
out
out
imul
xchg
popa
cmp
inc
rolb
push
inc
ret
xchg
jnp
bound
stc
push
outsb
stos
mov
aas
pop
mov
fsubs
ret
repz
jge
sbb
add
lcall
add
cmp
sbb
xorl
xlat
or
ss
xchg
sti
lock
push
sti
ret
pusha
xor
cmp
ds
stos
add
and
sub
or
sub
sbb
xchg
sub
popa
push
mov
fstpl
or
cld
jl
rcl
notl
fistps
and
out
mov
call
aad
mov
sbb
mov
adc
xchg
jecxz
iret
jo
fsubr
or
sti
inc
int3
popf
push
inc
in
stc
and
lods
mov
lods
mov
mov
mov
ljmp
ret
xchg
ss
arpl
lret
loop
jbe
fsubs
mov
lods
pop
add
jnp
push
push
cmpsb
sub
cli
and
bound
lahf
add
dec
adc
inc
pop
pop
push
pop
arpl
dec
jmp
jmp
dec
sbb
jb
test
xchg
in
ret
lcall
andl
outsb
and
aaa
out
mov
jmp
pop
mov
int
loopne
jge
inc
test
lahf
sahf
pop
sbb
mov
cmpl
mov
dec
or
and
mov
mulb
push
mov
add
js
adc
sub
mov
mov
sbb
insb
xor
add
sbb
lcall
mov
test
enter
cmp
push
mov
test
lahf
stos
ret
dec
pusha
mov
cmp
insl
in
movsb
adc
inc
jge
shlb
sub
bound
inc
mov
int3
push
mov
stc
outsb
xor
mov
cmc
insb
subl
jb
sbb
xchg
std
jle
xchg
pop
in
jo
test
mov
ltr
dec
or
dec
inc
call
idivl
mov
add
sti
push
jp
jle
xchg
jb
ljmp
and
mov
jle
movsb
sbbb
leave
xchg
aas
dec
jb
mov
or
mov
cmpsb
and
and
iret
and
jo
cmp
je
ficompl
fisubrs
fwait
push
cmp
enter
mov
fsts
mov
or
inc
dec
mov
sub
push
xlat
aaa
sahf
jecxz
or
pop
test
adc
aam
or
mov
sti
mov
mov
iret
fistps
or
xchg
jbe
jae
and
jecxz
xchg
jle
push
sbb
in
je
addb
imul
add
shll
xchg
mov
mov
sub
mov
shll
xchg
push
mov
stos
sub
or
sti
add
pop
bound
adc
or
sub
pop
jo
scas
pop
mov
cs
jbe
sbb
xchg
loop
sbb
lret
dec
xor
push
dec
dec
inc
sbb
mov
mov
lock
push
xor
test
add
lods
mov
push
fstl
xor
xchg
loop
sbb
insb
sbb
xchg
movsb
leave
movsb
mov
pusha
sub
rolb
data16
or
lods
xor
loopne
adc
and
pushf
shll
out
idivb
sbb
and
cmp
lahf
icebp
hlt
pop
jne
dec
cmp
pop
pop
jbe
jno
leave
mov
push
mov
jnp
xchg
cltd
fidivrs
xlat
dec
xor
pop
jmp
jmp
hlt
idivb
ljmp
stos
adc
push
leave
fsubrl
mov
sbb
mov
mov
icebp
xchg
scas
fnsave
xchg
mov
xchg
mov
pop
in
xchg
loopne
flds
stos
pop
xchg
cmp
test
cld
xchg
enter
js
sbb
stos
fcoms
jl
xchg
fs
les
lea
sub
test
xchg
loopne
sti
inc
movsb
and
mov
push
pop
push
stc
xlat
sahf
adcb
stc
pop
dec
ja
mov
or
pushf
loop
imul
pop
push
cwtl
mov
adc
jl
pop
dec
movsb
jae
push
sbb
sbb
jo
adc
divl
ljmp
adc
mov
hlt
add
mov
inc
add
push
xlat
xor
dec
cli
lock
push
jne
xchg
lock
or
dec
adc
jle
mov
iret
add
mov
insl
cmpsl
mov
dec
and
or
xchg
call
mov
push
sbb
ds
and
rcrl
cmp
inc
sbb
adc
mov
and
cmp
dec
ret
pop
cwtl
dec
inc
xor
push
aam
movl
les
fwait
or
mov
cmc
xchg
ret
testl
sbb
pop
cmp
xor
jl
xchg
std
mov
shlb
xor
and
cmpsb
inc
xor
sbb
add
add
add
adc
sub
in
mov
jae
sub
adc
inc
and
adc
daa
lods
stc
test
jb
andb
mov
mov
mov
rclb
outsb
and
add
ja
jno
and
and
repz
xchg
mov
push
inc
dec
adc
dec
stc
inc
or
into
les
adc
sub
loopne
cs
mov
mov
push
rcll
inc
out
add
sti
cmp
pop
push
push
xchg
into
xlat
xchg
in
jl
cmp
push
push
mov
mov
xchg
rorb
push
xchg
push
push
mov
les
jecxz
adc
loop
lea
jne
lea
dec
div
jg
loope
enter
cmp
jae
test
jbe
mov
pop
push
fidivl
push
lret
cmovno
mov
in
sub
pop
pop
inc
jecxz
xorb
leave
ss
fwait
ret
lods
inc
cmp
pop
into
push
mov
mov
xchg
dec
test
xchg
push
mov
std
loopne
dec
mov
test
call
push
push
in
mov
xchg
jp
mov
adc
cmp
mov
jno
popa
adc
or
cmp
pop
pusha
popl
stc
or
push
xchg
xchg
lcall
xchg
insl
pusha
push
lods
outsl
push
cmp
inc
xchg
or
cmp
insl
push
fidivl
dec
pushf
mov
test
jmp
or
mov
mov
test
or
lock
es
and
rcrl
dec
add
cmp
out
mov
mov
or
mov
int
into
xchg
mov
sub
dec
ret
shll
dec
data16
inc
xor
notb
cs
lods
push
movsb
nop
pusha
ja
movsb
popf
xor
mull
bound
mov
aaa
mov
mov
push
xchg
sub
cmpsl
ss
dec
xchg
mov
cmp
dec
add
sub
rolb
pusha
jle
push
in
ret
mov
xchg
outsb
std
mov
mov
lock
sbb
and
jb
es
and
imul
sbb
shl
leave
je
popf
popa
dec
test
insl
mov
sub
divl
xor
in
adc
mov
xchg
sahf
add
dec
sahf
insb
fs
adc
jb
xchg
dec
push
inc
inc
cwtl
xchg
enter
sub
inc
cli
in
imul
add
and
cmp
push
inc
add
inc
mov
pop
inc
xchg
lds
pop
jg
jne
das
sub
cmpsl
mov
dec
sahf
push
adc
and
rcr
not
mov
mov
idivl
sub
sahf
loope
cmpsb
sbb
stos
mov
pop
nop
pop
dec
pop
push
jle
xor
mov
rol
dec
cld
or
pop
pop
sbb
or
sub
aad
xchg
jbe
and
push
lods
cmp
into
and
lods
das
mov
mov
inc
dec
push
xchg
pop
sbb
ds
jge
push
push
mov
sbb
stos
outsb
push
cwtl
dec
sbb
sub
jmp
test
cmpsl
out
sub
pop
rcll
jnp
fldenv
or
shr
push
roll
ja
icebp
ffree
repnz
dec
sub
fsts
hlt
sbb
mov
std
sub
dec
idivb
cwtl
cmp
mov
adc
mov
repnz
push
push
pop
inc
sub
add
cmp
add
push
cmp
inc
scas
jbe
pop
mov
ljmp
insl
in
mov
inc
mov
add
cmc
jnp
pop
push
test
lahf
popa
inc
sbb
dec
jo,pt
mov
adc
popa
jp
out
je
hlt
cld
xchg
jge
add
push
cmp
ret
dec
pop
test
or
shlb
scas
add
std
jae
clc
lock
stos
sub
fs
repnz
mov
inc
andb
rcl
cltd
out
or
inc
aaa
sub
int
mov
pop
out
dec
cmpsb
imul
je
loopne
or
jmp
cli
jg
mov
cmp
dec
out
std
lock
fisttpll
negb
jnp
xchg
ret
sbb
loopne
sub
inc
rorl
fstps
dec
rcrb
lcall
mov
jecxz
rcr
fs
insl
aas
jg
shlb
xlat
ss
cmpsb
xchg
pop
int3
jno
add
out
nop
dec
aam
jae
mov
int
xchg
jp
jmp
pop
jne
gs
imul
mov
aaa
fistpl
mov
xchg
push
inc
mov
add
xchg
pop
sbb
adc
add
mov
nop
inc
out
xchg
mov
or
dec
mov
dec
shll
das
arpl
popf
sbb
or
imul
and
ret
xchg
pop
fcoms
fdivrl
inc
inc
inc
jmp
mov
mov
fcompl
dec
incl
mov
inc
inc
or
sbb
add
mov
loope
jge
pusha
test
cmpsb
bound
cwtl
cli
arpl
or
out
sub
cmp
mov
pushf
mov
cltd
addb
jp
and
stos
pop
push
lods
push
lea
inc
pop
outsb
mov
rcrb
inc
lcall
inc
pop
hlt
sbb
or
and
test
test
in
sbb
mov
xor
shrb
repz
outsb
imul
push
or
pop
adc
ret
les
sub
pop
movsb
jle
loope
xlat
mov
xchg
xchg
rcll
xlat
dec
xor
pop
sarb
jmp
mov
ret
pop
cwtl
sar
adc
gs
adc
stos
popl
repnz
in
aas
aad
lock
ja
push
js
adc
mov
call
dec
arpl
push
or
push
push
push
xchg
add
incl
xchg
mov
cs
push
scas
cmp
mov
lock
xor
xchg
add
and
popa
or
lcall
sti
subb
mov
pop
icebp
xorl
call
xchg
push
cs
mov
mov
add
ss
sub
cmpsb
popa
into
sub
mov
enter
cmp
mov
cmpsl
xchg
cld
cs
xchg
inc
mov
mov
dec
mov
mov
int3
sbb
add
mov
dec
jecxz
int3
xchg
ja
and
je
test
mov
test
dec
mov
pop
outsb
loop
pop
outsb
loop
xchg
movsl
sbb
shlb
push
xor
je
test
mov
adc
ljmp
sub
ss
repnz
add
and
rcll
mov
adc
outsb
and
popl
mov
enter
je
mov
rorb
repnz
ljmp
int3
xor
ret
xchg
jae
scas
sub
adc
ss
pushf
xor
mov
xchg
fsts
dec
lea
addb
test
mov
inc
dec
push
mov
jle
pop
insl
cmp
in
andb
jnp
add
daa
jecxz
jmp
adc
dec
lds
push
mov
imull
lahf
fidivrs
xchg
fwait
clc
rcrl
iret
in
add
or
movsl
adc
ljmp
out
popa
push
push
pop
jbe
sbb
xchg
dec
xor
jno
in
lret
imul
sbb
xor
cld
das
and
add
cwtl
push
dec
mov
push
xchg
mov
inc
scas
pop
in
cmp
ljmp
push
dec
or
adc
cld
mov
dec
popa
and
xor
pop
sti
enter
jl
sub
scas
stc
mov
fwait
sti
mov
and
jb
loope
push
mov
lret
testb
ja
xcrypt-cfb
cmpsl
movsb
dec
xlat
mov
and
sbb
popf
add
jge
rcrl
stos
xchg
push
mov
pop
xchg
jb
jmp
mov
jb
outsb
stos
jmp
pop
imul
sbb
ret
stos
jno
out
cmp
cmp
cld
xchg
sbb
dec
jns
xchg
loopne
cmp
ffree
mov
std
cs
out
std
or
push
xchg
sbbl
shlb
xchg
mov
mov
enter
pop
mov
mov
test
in
pop
outsb
call
cmc
sbb
lea
cmpsl
sbb
cmpsl
and
jmp
int3
push
popa
mov
xor
iret
scas
sub
push
lods
jo
js
bound
adc
cli
adc
cltd
aaa
xchg
out
sbb
std
ljmp
mov
es
sub
or
inc
lods
outsb
xor
lret
sbb
imul
cmp
fcompl
mov
sbb
and
pop
cli
jp
lahf
ret
mov
mov
loope
xor
push
int
xor
and
xchg
cltd
arpl
fldt
xor
ds
pop
dec
inc
push
xor
xchg
adc
dec
add
dec
popf
sahf
and
xchg
adc
xorb
adc
xchg
adc
jge
adc
dec
adc
push
push
pushf
mov
dec
sbb
and
and
mov
inc
inc
sub
fimull
push
in
negb
lcall
addb
pushf
sbb
mov
scas
ds
add
sbb
jecxz
lock
mov
jb
lcall
int3
inc
in
test
into
mov
je
test
loopne
lcall
or
inc
pop
jg
sub
in
mov
mov
fildl
movsl
mov
inc
mov
cmp
jge
movsb
dec
jno
pop
mov
arpl
fdivs
jno
fwait
mov
push
lea
jl
xchg
fidivl
add
pusha
cmp
insl
jbe
fstps
inc
sub
jecxz
aaa
loop
jmp
setg
inc
iret
iret
ja
mov
cmpsl
stos
add
pop
mov
pop
mov
mov
cmp
xor
ljmp
add
fistps
stos
or
cmp
mov
repz
daa
or
pop
je
dec
mov
aam
dec
sahf
cmp
test
aad
or
mov
add
test
push
and
xchg
out
add
cs
pop
call
cmc
cmp
inc
fists
orb
shrb
rcl
lret
enter
cmpl
xchg
lcall
mov
outsb
inc
cmpsb
cmpsb
popa
xor
mov
mov
jbe
sbb
jmp
movsb
sub
ja
enter
adc
lods
mov
mov
test
loop
sub
sub
popf
leave
pop
jge
addl
mov
cmc
push
fisubrs
andb
je
push
cmp
push
sub
into
adc
add
mov
mov
mov
push
std
sub
add
jno
jnp
jbe
cmpsl
xchg
loope
mov
data16
jae
adc
dec
inc
or
fsubrs
cltd
pop
mov
cmpsl
push
xorb
std
dec
jmp
jmp
cltd
jg
xchg
add
mov
jbe
fsubl
sbb
loope
shrb
pusha
xor
pop
inc
mov
nop
mov
inc
cmp
jo
lret
push
ds
dec
cmpsl
ret
punpcklbw
cmp
repnz
sbb
shlb
mov
mov
shll
add
ret
lret
mov
and
or
ret
outsb
cmp
enter
or
and
mov
lods
cmpsb
xor
movsl
pop
int
and
mov
jns
ret
adc
jo
ja
out
adc
pop
hlt
or
mov
mov
mov
iret
xchg
push
fldenv
jmp
in
sub
sahf
fwait
pushf
cmp
add
and
mov
sti
dec
xorb
std
in
push
dec
lahf
out
or
push
cs
jbe
jbe
call
xor
es
out
not
scas
xlat
lahf
sub
popa
sbb
fdivs
les
jno
xchg
jp
and
adc
push
and
es
pop
or
test
in
les
enter
xchg
inc
xchg
push
subl
shlb
xor
aaa
add
lea
jl
pop
sarb
lds
imul
inc
jnp
mov
inc
xchg
adc
stos
xchg
sub
jnp
cmp
mov
dec
push
adc
pop
xchg
and
jae
xor
insb
mov
shll
jmp
pop
adc
push
out
outsb
out
out
bound
lea
mov
pusha
in
andb
imul
push
adc
lcall
push
in
dec
push
jbe
or
cmp
mov
hlt
mov
pushl
mov
ja
xor
pusha
test
arpl
outsb
addr16
xchg
rorl
mov
mov
push
inc
add
or
test
fistps
in
pop
stos
and
and
sbbl
sbb
jae
insb
sahf
dec
pop
pop
push
inc
mov
imul
lods
adc
sub
iret
sub
test
cmc
jmp
mov
push
clc
cmp
sbb
sub
imul
push
loop
push
fsub
or
subb
popf
xchg
popa
inc
push
dec
mov
push
sbb
add
mov
adc
insl
ja
hlt
and
push
cmpsl
stos
xchg
and
add
dec
xchg
mov
push
inc
jge
sub
shrl
jae
cmp
add
jns
or
xchg
add
cmp
dec
xor
xor
mov
mov
lods
andb
jge
dec
in
pusha
stos
push
push
sbb
lcall
imul
xchg
mov
rorb
xchg
fcoml
cs
mov
mov
or
mov
push
dec
outsl
out
mov
and
stos
into
pop
jo
int
imul
pop
dec
inc
data16
popf
fcoms
je
mov
jns
jl
clc
jne
add
scas
mov
popf
outsl
ret
incl
add
mov
cli
pop
mov
adc
mov
jle
xchg
pop
jmp
mov
push
sbb
xlat
push
loop
rclb
jnp
aad
adc
xchg
sbb
sbb
cs
push
xchg
out
push
stos
outsb
push
jl
dec
xchg
clc
jns
clc
fs
jl
xor
and
push
loopne
xchg
scas
testl
cwtl
mov
pop
cmpsb
shl
leave
repnz
ljmp
outsb
mov
lds
push
daa
lods
aad
outsb
xor
sbb
sahf
loop
push
das
popa
push
mov
lcall
dec
mov
test
mov
paddsw
xor
stos
rcll
cmp
jno
add
pcmpeqb
pushf
xor
mov
and
xchg
or
inc
mov
mov
scas
push
inc
je
sub
imul
jecxz
or
rolb
imul
into
imul
add
push
lods
insb
dec
push
gs
ss
xor
adc
add
jbe
ljmp
push
xlat
mov
cs
call
dec
mov
lock
mov
sahf
out
insl
dec
out
jne
sub
mov
mov
adcl
jne
adc
popa
jno
pop
dec
lock
adc
or
or
or
imul
out
bound
sahf
inc
xorb
push
outsl
dec
jb
pop
test
fists
jmp
push
mov
jne
stos
repnz
and
inc
cmp
ljmp
mov
jge
xlat
dec
push
loop
arpl
hlt
xor
stos
sbb
or
enter
sub
cmp
test
mov
test
mov
pop
and
push
fiadds
push
push
icebp
loop
push
xchg
or
push
stos
in
mov
push
mov
jg
inc
push
and
push
xor
test
xchg
xlat
pop
push
xchg
mov
pop
mov
inc
int3
sbb
jl
aaa
inc
enter
sar
mov
add
jmp
out
rcrl
out
call
xchg
and
insb
push
inc
jle
and
pop
add
xlat
ja
cmpsb
jg
and
cmpsb
xchg
adc
mul
inc
mov
pop
xchg
pop
lret
mul
lods
pop
rcl
xchg
mov
les
xor
aam
aaa
negl
data16
and
int
dec
clc
in
ret
add
push
push
pop
popa
xchg
or
sahf
push
mov
stc
in
popf
cwtl
repnz
imul
mov
imul
mov
jmp
push
xchg
push
xchg
jbe
mov
pop
lods
pop
test
sub
cmpsl
pop
pusha
loope
inc
xchg
in
inc
inc
ljmp
gs
jge
pop
sub
dec
add
rol
cmp
and
scas
outsl
pop
ds
test
cmpsb
lahf
pushf
fcompl
jp
enter
int3
pusha
sbb
loopne
push
sub
std
out
jge
and
push
pop
mov
mov
aam
test
pop
and
mov
mov
bound
out
push
jl
mov
push
gs
cmp
or
repz
cmpsb
fadd
xchg
and
push
mov
scas
cmp
jmp
adc
test
adc
or
into
push
lahf
lea
adc
adc
subb
adc
in
xchg
inc
inc
sbb
repnz
mov
or
ds
mov
movsl
add
ja
cwtl
scas
lods
jle
shll
sub
sbb
test
sbb
pop
pop
or
jl
add
adc
jno
jbe
cli
leave
int
stos
xchg
jne
sbb
cmpsb
sub
movsb
je
das
push
stos
push
push
rcll
leave
pusha
xchg
mov
aas
clc
lret
lock
cmpsl
mulb
loope
cmp
bound
es
dec
adcl
jbe
popf
inc
jnp
pop
je
addb
cmpsl
or
test
lret
das
xchg
mov
cmp
mul
arpl
ja,pn
fildll
sub
out
es
inc
pop
sahf
mov
and
mov
ja
inc
pop
lahf
jo
lock
lea
fsts
test
adc
je
mov
or
xchg
jmp
repz
pop
mov
stos
mov
lahf
scas
pop
ljmp
push
ds
ds
add
rcrb
mov
icebp
mov
mov
dec
jg
loop
pop
repnz
cmpl
outsb
add
jp
inc
scas
jnp
incb
je
adc
xor
sbb
je
lock
scas
mov
mov
scas
stc
fldt
mov
cld
sub
lock
testb
daa
pop
je,pn
add
movsb
shrl
icebp
jge
shlb
push
push
xchg
rclb
ss
sbb
icebp
movsb
ja
cmc
mov
or
leave
or
jmp
andnps
arpl
sarl
pop
call
push
xchg
popa
push
fidivrl
or
and
lea
lret
dec
in
and
call
movsl
adcl
jo
ja
mov
push
push
pushf
fisubs
xor
test
add
inc
sbb
jbe
mov
popf
lcall
cmp
add
or
add
mov
mov
pop
add
int3
push
sbb
xor
clc
add
sub
add
sbb
jbe
add
pop
push
mov
mov
adc
or
ret
sub
je
pusha
repz
or
dec
mov
push
es
mov
sbb
fisubrl
das
shl
in
push
insl
inc
out
lds
nop
dec
xchg
add
repz
loope
sbb
dec
add
inc
out
rolb
rol
subb
xchg
sahf
mov
push
jb
push
and
lret
mov
push
insl
mov
add
or
cmp
nop
ljmp
cld
test
outsl
test
cmp
cmpsb
aam
jl
loopne
data16
ret
jo
lcall
nop
rolb
sbb
repz
dec
addl
pop
repz
lret
mov
pop
ja
inc
push
movsb
mov
pop
pop
pop
xchg
int3
out
insl
dec
aas
dec
jle
rolb
aaa
fimuls
scas
fidivs
inc
or
sbb
mov
mov
test
or
xchg
popf
stos
decb
adc
lret
pop
call
xchg
push
mov
add
adc
cwtl
xchg
pusha
sarb
or
lods
roll
add
sub
push
push
dec
stos
adc
push
adc
add
mov
movsb
subl
cld
mov
fsubr
hlt
sbb
push
mov
push
mov
pop
adc
push
mov
xchg
cmp
xlat
jecxz
in
mov
xor
ljmp
daa
test
sub
das
xchg
inc
sbb
fstl
xor
dec
ds
mov
mov
mov
ret
sbb
loop
mov
addl
jp
psubsw
popf
sbb
inc
jns
inc
pop
leave
mov
fiadds
ss
fisubrl
cmpsb
jecxz
inc
std
xchg
mov
cmp
adc
xor
int
xor
adc
mov
dec
add
into
or
dec
mov
jle
mov
cmp
mov
ror
pushf
and
movsb
dec
out
loopne
inc
adc
stos
test
outsl
mov
mov
test
in
sbb
xchg
push
jae
scas
inc
lock
mov
addr16
inc
inc
xchg
jle
jb
cmc
push
sarl
mov
jmp
ret
xchg
sti
repnz
mov
lods
rcrl
mov
addr16
out
aad
fs
div
xor
sahf
loop
mov
adc
push
or
pop
lods
mov
outsb
jmp
jne
or
sub
cld
adc
pop
pop
and
xor
mov
rorl
dec
lea
cmp
mov
push
sub
sub
jecxz
fs
push
pushl
fstl
cmp
test
stos
cli
xchg
push
test
mov
int3
insl
adc
mov
test
mov
in
aad
and
mov
sti
pop
add
ds
leave
mov
cli
dec
rorl
les
cmp
aas
fidivrs
cmp
xchg
ret
jl
push
jbe
xor
dec
inc
pop
jmp
enter
jecxz
sbb
mov
movsl
dec
and
sbb
popa
cmp
aam
dec
adc
das
lcall
in
imul
dec
jle
nop
jne
ficoms
cmc
and
or
jmp
mov
add
push
adc
repnz
cmpsl
int3
outsb
adc
aam
xchg
inc
inc
add
out
push
shr
sbb
add
popa
pop
or
mov
rorl
mov
icebp
mov
mov
hlt
xchg
ret
aas
mov
lahf
sub
call
jae
ret
or
in
mov
pushf
mov
stos
mov
pop
outsb
add
and
mov
jo
sub
xlat
shrw
shlb
ljmp
rolb
pop
sbb
pop
fmull
jno
cltd
mov
jno
imul
and
pop
rorb
sbb
nop
push
inc
daa
lds
sbb
sbb
fisttps
jbe
mov
cmc
dec
mov
dec
dec
and
nop
mov
test
cli
into
out
jno
pop
cwtl
xor
arpl
cli
cmp
hlt
stos
xchg
test
ret
mov
lret
cmp
pop
and
mov
fists
test
inc
imul
mov
cs
add
enter
mov
aam
xlat
adc
ficoml
test
and
scas
imul
sub
jb
mov
xchg
add
stc
lods
or
adcb
adc
add
inc
iret
add
insb
pushf
icebp
fmull
jge
outsl
fdivrl
cwtl
jmp
jmp
aas
sbbb
fcom
popf
fsubrs
or
sti
notl
or
cltd
cmp
jl
and
les
mov
and
in
and
ret
loope
test
shll
jg
cmc
or
loopne
addb
clc
cltd
sub
and
lea
popa
imul
adc
mov
or
pop
pushf
ret
mov
xchg
add
sub
aas
jl
clc
xchg
cs
out
push
sub
and
xchg
imul
jnp
add
pop
nop
fs
scas
xchg
jne
fistpll
mov
push
pusha
in
mov
push
loop
pop
popf
in
mov
and
orl
out
lret
inc
or
xor
fldenv
cmpsb
mov
sbb
inc
cs
pop
into
add
inc
adc
dec
jmp
xor
test
push
push
dec
push
mov
repz
add
mov
addr16
xchg
popa
xor
leave
daa
and
jmp
daa
xor
arpl
sbb
adc
push
and
notl
cmpsb
stc
add
dec
repz
mov
fwait
adc
hlt
mov
lds
mov
gs
adc
jl
js
lcall
push
and
mov
push
decb
lods
cmp
iret
or
fstpt
pusha
std
cmp
sub
std
inc
push
xchg
mov
sub
pop
mov
notb
sbb
fs
inc
into
sbb
andb
add
cmpsl
push
xchg
xor
cmp
cmp
push
mov
gs
daa
int
or
pop
xchg
xor
add
mov
and
scas
xor
push
ficoml
or
or
cs
daa
fisubrs
cmc
cmp
xchg
inc
lods
inc
rcl
loopne
push
jg
jnp
gs
xorb
mov
add
movsl
stos
inc
push
mov
flds
sub
xchg
dec
dec
repz
xchg
stc
dec
loope
dec
ret
jno
mov
loope
in
loope
popf
push
sbb
jae
xor
mov
inc
push
jl
lea
es
pop
push
sub
call
xor
pop
inc
cmp
mov
nop
cmc
xchg
stos
loope
enter
test
lret
leave
call
es
inc
mov
sub
push
jb
xchg
arpl
shrb
arpl
das
push
push
fstps
mov
mov
js
mull
pop
adc
ljmp
test
xchg
aam
cmpsb
mov
scas
xchg
pop
or
subb
int3
jcxz
adc
sbb
fwait
cmc
jnp
ja
mov
xchg
push
popa
test
iret
aas
jae
inc
bound
fcoml
add
filds
xor
and
rcl
rclb
jmp
jecxz
movsl
je
inc
cmp
test
adc
dec
mov
dec
sti
jno
dec
cmp
cmp
scas
jo
cltd
xor
push
and
xchg
push
dec
xlat
cmpsb
popa
add
sub
push
cmpl
dec
dec
sub
push
movsb
dec
xor
push
dec
push
cmp
jecxz
outsb
sub
insb
loop
lcall
add
inc
orb
lcall
ret
test
sbb
ljmp
loopne
das
sub
scas
or
mov
pop
cs
in
push
leave
and
cmp
lret
scas
cmp
cld
add
push
js
cmpsl
lds
lret
pop
dec
adc
add
add
imul
xchg
jg
sub
jns
jg
push
popa
jmp
ljmp
icebp
stos
cmpsl
add
push
movsb
xlat
pushf
mov
js
xchg
test
mov
xor
dec
sub
mov
je
add
adc
dec
adc
scas
je
xor
test
adc
dec
stos
bound
clc
xchg
scas
jmp
pop
mov
xchg
mov
add
mov
push
or
mov
rclb
iret
ret
or
aas
jnp
mov
add
leave
imul
push
mov
or
nop
adc
push
mov
and
mulb
mov
and
scas
inc
sub
pop
adc
movsl
out
outsl
adc
out
fcoml
and
mov
sarb
sub
jno
or
push
mov
jno
enter
dec
loop
mov
dec
jmp
in
psubsb
jns
mov
xor
movsb
add
ret
dec
xor
and
mov
jae
insl
out
mov
scas
mov
or
mov
mov
fidivrl
jp
in
cmpsb
pop
push
jmp
xor
pop
cli
stos
mov
nop
inc
adc
or
mov
sub
dec
dec
dec
test
adc
icebp
movsl
lahf
mov
cwtl
adcb
push
adc
mov
mov
xor
push
div
cltd
dec
dec
shr
lock
test
in
gs
hlt
mov
adc
fldl
pop
js
sub
outsb
les
adc
mov
jae
ret
push
gs
jo
push
test
inc
rcl
bound
test
shll
in
int
and
sub
data16
mov
out
lahf
or
inc
xor
add
jo
add
cmp
call
mov
mov
xor
mov
rcrl
xchg
insl
lods
daa
dec
rcr
test
dec
jmp
or
add
push
mov
stc
xor
shl
ret
adc
outsl
mov
movsb
fimull
lcall
mov
inc
lret
cmp
cmp
pop
cmpsl
addr16
in
inc
cs
ret
out
rcr
push
mov
sti
inc
mov
mov
loopne
out
push
daa
insb
insl
jle
add
pop
popa
xchg
sub
mov
mov
pushf
lock
aam
mov
adc
addr16
loopne
add
inc
jae
lcall
mov
pop
scas
fs
gs
inc
lret
mov
dec
les
jmp
pop
inc
pop
mov
sub
insl
aad
mov
lcall
pusha
stc
in
or
jg
cltd
aam
pop
je
xlat
mov
jbe
pop
mov
in
cmp
mov
xchg
fimull
xchg
enter
sarl
inc
mov
fistpll
jno
dec
mov
xchg
pop
les
aaa
sub
mov
sub
loope
pop
subb
jmp
outsb
test
xchg
xchg
mov
std
push
sub
xchg
inc
lahf
cmp
std
pop
movsl
stos
inc
adc
inc
pop
jbe
test
jnp
outsl
cmp
jg
test
test
mov
loope
out
adc
add
dec
nop
mov
jnp
dec
sub
sti
mov
pop
mov
subb
loopne
fldcw
mov
sub
outsl
or
lret
sbb
fs
stos
stos
xchg
je
xor
push
sbb
pop
xchg
sub
lcall
ljmp
mov
mov
outsl
jmp
mov
inc
mov
ret
push
inc
lcall
mov
or
xchg
stos
sahf
xchg
pop
jbe
dec
mov
cmp
icebp
jns
xchg
rclb
movsl
gs
xchg
push
inc
cmp
mov
mov
shl
fldenv
iret
movsl
je
ss
mov
add
pop
clc
or
cmp
stos
icebp
sti
popf
mov
xchg
fwait
add
push
scas
adc
mov
inc
test
cmp
jg
mov
test
jl
mov
dec
negb
insl
fs
flds
mov
sub
outsb
sbb
adc
dec
or
add
and
ss
orl
xor
aam
data16
sub
push
lods
and
fcomps
mov
stos
or
jg
or
jns
jge
or
mov
mov
and
mov
fistpl
cmc
aaa
enter
or
xor
fdivrs
out
aad
out
cs
sub
cmpsl
ret
adc
lea
and
fistpll
and
xor
pop
xor
xor
ja
jmp
adcb
nop
loop
cmpsl
sti
call
sti
mov
jo
add
rorl
mov
in
jo
sub
in
mov
sbb
mov
lods
nop
out
dec
out
in
ds
adc
and
fs
les
lods
mov
or
fst
mov
scas
aad
shrb
sub
or
xchg
outsl
rorl
popf
aad
sbb
xchg
fs
fwait
es
scas
pop
js
sub
addr16
push
aaa
cmpsb
mov
ret
stos
xor
dec
mov
or
or
sub
je
push
cmp
cmp
xor
and
cmpsb
in
imul
mov
mov
js
sbb
pop
jmp
sti
stc
clc
xor
mov
in
pop
addr16
or
scas
mov
enter
fistpll
pop
push
add
ret
mov
cmp
adc
xchg
jecxz
int
xchg
mov
ret
and
das
xchg
lods
gs
out
cltd
mov
fcoml
nop
outsb
mov
out
cmp
pop
adc
ljmp
outsl
mov
loopne
xchg
pusha
jbe
flds
push
sub
mov
fmuls
ljmp
xor
xor
pop
cwtl
cmpsl
xchg
std
movsb
adc
stos
mov
mov
mov
daa
push
cmp
sbb
shlb
shr
push
pop
enter
dec
pop
fiadds
mov
ljmp
mov
and
jo
fimuls
aad
loopne
xchg
aaa
push
xchg
add
jmp
std
mov
cltd
arpl
inc
in
pop
out
imul
fldenv
jo
dec
leave
das
mov
jl
and
mov
notl
and
mov
shlb
jge
push
fisttpl
fwait
jge
and
add
cmp
push
fimull
loopne
add
repz
mov
push
imull
sub
xor
ret
fiaddl
leave
lcall
pop
xlat
mov
in
cli
fchs
test
jne
push
daa
or
jge
icebp
sbb
icebp
cli
push
lods
mov
stos
push
fiadds
mov
inc
mov
repnz
nop
lods
mov
loope
cltd
imul
cmp
or
xchg
pop
aaa
push
out
mov
mov
push
sub
das
pop
push
std
in
inc
inc
pushl
push
je
cmp
mov
stos
mov
lods
xchg
push
in
adc
and
sub
xor
repz
fnstcw
mov
dec
add
adc
xlat
sub
in
out
popa
mov
ljmp
or
dec
dec
int3
insb
mov
fcompl
ljmp
push
and
mov
cmc
inc
arpl
push
popa
sarl
dec
ljmp
jae
add
or
push
mov
sub
jg
in
push
add
scas
insl
mov
rcrl
ret
and
and
insb
inc
mov
pop
mov
subb
movsb
or
mov
data16
sub
mov
pop
or
fildl
movsb
sub
pop
xchg
xchg
mov
mov
insb
call
adc
adc
sub
cld
pop
cmpsb
lods
pop
pop
add
xchg
bound
arpl
addl
in
aad
lcall
ss
popl
stos
cli
outsl
or
xor
popa
bound
and
or
out
std
test
popa
mov
iret
dec
jne
insl
xlat
lahf
in
mov
movsl
sahf
sub
repz
mov
cmpsb
inc
int3
xor
test
cwtl
mov
and
rclb
cmp
std
out
adc
lret
inc
nop
pop
push
enter
sbb
cmp
dec
jne
inc
inc
dec
insl
dec
jge
adc
shll
adc
jae
add
lock
out
jb
lret
push
mov
fsub
and
iret
cld
xor
jo
call
pusha
into
dec
lret
pop
mov
rcll
loop
fs
outsl
inc
in
dec
pop
pop
rcll
test
xchg
or
mov
das
roll
fwait
out
testb
out
mov
pusha
pop
fbld
pop
std
repz
dec
adc
xchg
adc
pop
dec
sbb
dec
mov
pop
mov
sub
add
fmul
pop
adc
sub
jp
or
in
or
push
dec
aas
hlt
mov
aad
and
mov
mov
ds
push
sbb
or
leave
inc
leave
out
xor
ja
adc
pop
cmp
mov
xor
std
std
test
xchg
mov
cmpsb
or
inc
scas
stos
filds
jo
jmp
jecxz
nop
fisttps
sbbb
fidivrs
dec
xchg
add
mov
in
and
push
and
dec
or
out
mov
push
sbb
mov
mov
mov
lds
mov
pop
fcmovu
daa
sub
adc
out
cli
cld
shlb
mov
or
out
xchg
jle
das
gs
ljmp
pushf
clc
pop
stc
mov
out
sub
outsl
mov
ret
push
bound
test
repnz
pushf
in
xchg
data16
bound
cld
mulb
imul
mov
pop
lahf
outsb
outsb
gs
sbb
xor
push
hlt
push
mov
cli
pop
sbb
cwtl
pop
pop
xchg
sbb
push
mov
push
dec
and
adc
fstps
sub
fwait
cmpb
lds
lret
pushf
pop
in
mov
rcrb
ror
inc
xchg
mov
out
mov
stos
frstor
sbbl
mov
movsl
stos
scas
add
out
out
pop
mov
lock
std
mov
add
mov
js
push
sbb
jnp
jg
xchg
andl
push
xchg
std
aad
xlat
ret
pushf
stc
addr16
andl
adc
ffreep
aas
scas
inc
popa
icebp
mov
dec
and
and
sbb
or
mov
dec
rcrb
mov
mov
pop
mov
cltd
or
sbb
sbb
lea
xor
lret
or
lret
inc
dec
imul
adc
push
stos
rcll
push
add
xlat
cmc
pusha
and
inc
sub
std
movsb
mov
sti
mov
ljmp
sub
push
xor
inc
mov
push
push
cmc
inc
imul
je
mov
cli
pop
cmpsl
sub
mov
adc
push
xor
lret
jae
adcb
add
ret
adc
jno
mov
je
or
push
pop
jo
add
inc
xor
cmpsb
movsl
dec
add
xchg
add
fdivl
mov
mulb
add
inc
or
dec
inc
fmuls
test
mov
and
sbb
pop
mov
sub
dec
je
mov
das
fwait
rolb
ja
sub
dec
insb
roll
mov
jl
mov
dec
repz
cs
add
les
sbb
xor
ds
cmp
or
pop
jle
insl
out
mov
or
xchg
dec
jbe
add
sbb
cmp
movsl
bound
or
xor
jmp
cmp
sub
test
mov
test
xchg
mov
xor
stos
mov
lods
pop
cwtl
and
cmp
es
popa
lds
fmulp
jg
imul
or
push
xchg
pushf
mov
jnp
aad
or
push
sbb
cmpsl
cmp
add
push
insb
dec
mov
xchg
dec
ret
inc
outsl
popa
js
inc
inc
pop
adcb
std
rolb
cmp
scas
sub
out
cmp
or
inc
mov
cmp
ds
dec
in
or
mov
inc
mov
cmc
clc
test
add
ret
mov
xor
or
jp
xchg
or
add
xlat
mov
mov
mov
ja
stos
xlat
call
and
mov
fucom
mov
mov
imul
lock
loop
adc
and
push
cli
inc
xor
enter
movsb
cltd
inc
pop
cli
imul
xorb
test
xchg
xchg
jp
daa
les
or
loop
push
xchg
jg
dec
sbb
or
test
push
test
cli
leave
mov
pop
mov
jns
jbe
mov
in
mov
je
pop
outsl
xchg
pop
mov
bound
lea
iret
mov
sbb
dec
out
out
add
and
insl
push
lcall
cmp
mov
xor
jg
xchg
mov
mov
sub
sbb
add
inc
cs
push
les
xchg
aaa
lods
mov
jne
cmp
xchg
add
jo
lods
je
jmp
and
push
enter
outsb
ljmp
cmp
lahf
in
or
xchg
stos
jb
scas
mov
dec
frstor
and
test
mov
std
or
movsb
orl
fstpt
stos
mov
sbb
js
cmp
push
clc
js
nop
push
movsl
jae
push
jns
cmpsl
jp
pop
xchg
xor
adc
loop
stc
ja
pop
pop
pusha
outsl
pop
iret
push
push
out
add
nop
hlt
xor
mov
pop
sbb
pop
cltd
je
jg
xor
push
jle
add
cmp
outsb
inc
and
push
out
adc
mov
scas
cmp
loope
mov
fisubrs
lret
shrb
xchg
sahf
mov
ds
mov
push
lcall
pop
fwait
adc
cmc
pop
ja
movsl
or
mov
and
adc
and
test
mov
dec
and
fxch
or
push
int
popf
rcr
sbb
mov
movsl
push
dec
ss
fidivrl
test
push
sbb
scas
enter
popf
inc
aas
xorl
mov
ret
addb
push
sbb
and
shll
outsb
leave
mov
jns
out
out
ficoms
in
xchg
in
out
or
add
es
cmp
shlb
jl
dec
call
xor
fistl
leave
and
or
flds
jmp
idiv
test
xor
dec
les
dec
lods
bound
sub
loope
jg
push
xchg
ja
rcll
xor
cmc
pop
mov
mov
bound
in
adc
mov
sbb
in
mov
loop
jge
xchg
lods
inc
inc
or
mov
push
push
mov
sbb
scas
out
xor
xor
std
mov
pop
push
mov
sub
cs
icebp
add
pop
inc
pop
jp
hlt
es
dec
dec
or
insl
adc
cmc
pop
inc
inc
mov
mov
inc
xor
test
pop
je
mov
adc
xor
inc
mov
mov
ja
mov
es
push
aam
scas
fistpl
int
scas
addl
subb
scas
iret
loopne
pop
je
cmp
hlt
cmp
mov
out
jp
rcll
mov
popa
jge
xor
loop
pop
push
xor
rcrb
outsb
inc
leave
push
adc
inc
decb
inc
jmp
call
imul
movsb
xor
sti
in
xchg
adc
inc
xchg
or
mov
cmp
jg
mov
add
jb
mov
icebp
cmpb
jmp
add
ja
out
xchg
ret
inc
sub
ja
sbb
jmp
call
ljmp
jg
or
lea
gs
xor
gs
mov
pop
std
fwait
addr16
add
fwait
pop
lret
mov
bound
fstps
dec
and
imul
fwait
add
mov
sbb
sbb
lret
pop
jmp
jae
fcmovu
iret
adcb
add
push
jno
add
repz
scas
inc
pop
dec
and
xor
ljmp
shll
popa
pop
inc
sub
dec
push
call
cmp
add
jo
lods
cmp
and
cmp
out
sbb
push
sub
stos
dec
dec
cmpsl
pop
movsb
push
push
jmp
and
clc
mov
add
sub
sub
subb
repz
shll
js
or
or
mov
cmp
mov
sub
xchg
push
or
hlt
push
or
xchg
adc
or
aam
cmpsb
aas
lahf
push
pop
cli
mov
mov
mov
xor
or
out
ret
pusha
test
dec
mov
jle
divb
cmpb
mov
and
xlat
mov
out
fcmovb
push
xchg
jge
or
stos
jecxz
push
mov
lock
jbe
mov
imul
xchg
les
enter
adcl
xchg
ja
scas
decl
and
ds
test
lds
lcall
pop
test
pop
xor
gs
inc
std
and
std
std
or
sub
adc
sub
pop
popf
pop
mov
je
icebp
xor
sbb
hlt
or
sarb
or
aam
jecxz
push
sti
lea
jno
jne
mov
push
mov
rol
js
push
mov
lods
popa
mov
les
xchg
aam
xor
hlt
clc
enter
mov
lds
pop
cmpsb
rcl
jne
jecxz
fimuls
call
mov
ds
outsb
loope
mov
das
sbb
jb
xchg
push
inc
push
jmp
xchg
pop
fildl
stos
sub
aad
out
or
mov
mov
mov
adc
fisttpl
mov
dec
pop
xchg
ret
cmp
sub
imul
das
pop
roll
mov
mov
loope
add
and
or
mov
lods
int3
add
adc
adc
jns
sbb
xor
adc
push
in
jae
push
js
inc
gs
jns
pop
pop
test
pop
cmp
mov
mov
mov
jecxz
jp
xchg
mov
jnp
daa
std
stos
shll
pop
call
push
push
movsl
jg
pop
mov
mov
sub
push
add
pop
or
lock
pushf
loop
shrb
push
sbb
mov
fisubs
cs
pushf
pushf
adc
pop
mov
xchg
mov
adc
sbb
mov
stos
mov
scas
or
lahf
aas
call
mov
sub
pop
ja
mov
mov
std
movsl
loop
add
hlt
mov
inc
dec
into
imul
jle
hlt
jnp
push
lahf
lea
sbb
scas
stos
xchg
xor
out
or
push
mov
fwait
jae
cmp
adc
jg
mov
es
stc
cwtl
push
enter
es
jp
ljmp
leave
repz
xchg
xchg
test
mov
out
add
insl
inc
inc
lret
clc
add
rcr
xlat
lcall
rcll
dec
mov
push
rcl
dec
stos
xchg
enter
lret
call
stos
sub
add
test
cmpl
mov
and
add
pop
xchg
inc
sub
mov
mov
push
mov
mov
sub
dec
jecxz
jge
rclb
je
mul
rorb
push
sbb
outsl
mov
lock
lods
xchg
lods
lret
sub
jns
ret
out
das
push
stc
imul
and
mov
shrb
popf
push
lret
lds
aaa
xor
aad
xchg
leave
in
mov
dec
outsl
mov
test
mov
push
xchg
cmpsl
mov
add
das
ret
aas
gs
out
add
call
or
pop
dec
or
pop
xchg
movl
mov
xor
mov
push
pop
arpl
sub
daa
fistps
adc
test
adc
sbb
and
push
out
bound
mov
daa
out
push
pop
pushf
mov
or
movsl
orb
add
je
push
sub
add
jnp
jns
dec
adc
ja
dec
cltd
mov
pop
mov
inc
sbb
cs
lcall
mov
incl
mov
xor
ds
cmc
adc
sarb
mov
adc
mov
int
pop
jecxz
leave
jl
insb
cmp
jo
mov
jbe
pop
mov
lds
jb
jle
inc
stos
cli
mov
int3
gs
and
ljmp
mov
out
popa
push
lds
cmp
lods
lds
mov
fldcw
fists
add
xor
mov
notb
push
cmc
in
ds
sub
xlat
test
cld
push
test
lods
cltd
into
mov
or
sub
shll
adc
xor
and
insb
mov
mov
inc
pop
ss
pop
jle
cmpsb
insl
xor
mov
mov
scas
sbb
jg
mov
in
jb,pt
dec
and
imul
inc
xor
add
jle
stos
dec
xor
push
push
lcall
and
sub
les
mov
fsts
sub
xchg
idivb
jnp
xor
cmp
push
call
pusha
fidivrs
push
into
dec
sbb
fsubp
lods
addr16
xor
pusha
loope
test
mov
and
mov
and
cwtl
bound
leave
stos
pop
ljmp
pop
mov
rorb
mov
xchg
xor
adc
xlat
jo
sbb
mov
dec
loope
jle
mov
les
cwtl
or
in
mov
mov
sbb
les
xchg
fnstsw
mov
jl
xlat
inc
mov
sbb
ret
fwait
scas
imul
cwtl
dec
jnp
cmc
shll
shll
ljmp
xchg
and
fisubrs
cmp
fstp
cli
mov
pop
add
les
and
out
xchg
mov
les
pop
fs
fxch
pop
cmp
scas
xor
xchg
adc
clc
xor
xchg
inc
sti
mov
mov
into
movsl
pop
gs
fisttpll
cmp
subl
divl
out
iret
sbb
cltd
arpl
push
and
xchg
stos
fbld
dec
kxorb
push
pop
lret
push
jne
iret
mov
es
in
aas
cmp
out
jp,pt
das
pop
cmp
cld
add
sub
adc
xor
iret
xchg
ret
cltd
aaa
xlat
jle
je
js
mov
sbbl
mov
pushf
mov
mov
mov
push
xor
lock
mov
shl
sub
das
mov
fs
jg
test
out
and
mov
movntq
pop
inc
mov
int3
mov
popf
lock
add
out
sahf
das
scas
jg
test
test
and
mov
test
imul
jmp
insl
sar
shr
nop
pop
mov
and
ljmp
jmp
mov
and
jecxz
jns
sbb
cmc
rorl
stos
mov
push
inc
mov
dec
inc
popf
inc
in
out
jl
xor
adc
rcr
mov
sub
daa
test
and
movsl
ss
cmp
stos
in
mov
pop
aam
cmp
pop
push
subb
sub
mov
sub
pop
or
inc
adc
xchg
mov
fnsave
pop
jle
fadds
stc
sub
std
xor
dec
cmc
lret
test
lock
xchg
mov
jnp
fidivrs
movsl
gs
repnz
outsl
mov
sub
stos
pop
inc
or
sbb
lods
cmc
push
xor
dec
in
push
push
cmpsl
jl
jmp
adc
cmpsb
scas
jg
push
aas
movsb
aaa
and
stc
xor
pop
ss
sub
mov
or
push
dec
push
sub
mov
xchg
outsb
out
and
jmp
ret
mov
xchg
loope
idiv
jns
popa
sub
ljmp
xchg
mov
scas
out
dec
repnz
push
and
inc
clc
add
jns
mov
lahf
dec
jp
fists
cmp
mov
add
dec
out
test
sbb
xchg
in
adc
pop
int3
sub
test
test
sub
xchg
sub
pop
xor
or
add
rclb
mov
dec
aam
inc
push
mov
fcoms
dec
movsb
pop
or
ret
int3
jl
into
sti
int
sbb
or
sahf
sub
inc
mov
and
or
ss
pop
lods
inc
fwait
movsb
xor
cli
fistl
cmpsl
jle
clc
pop
xrelease
fsubs
lds
jle
cmc
shll
lcall
ja
fidivrs
cmp
and
jmp
dec
sbb
add
icebp
icebp
jg
push
lods
push
push
and
les
pop
subb
rol
jns
sub
mov
push
mov
andl
sub
mov
jge
loop
incb
mov
cmpsb
or
xor
rcll
sarl
adc
or
push
and
pop
cmpsb
jge
loop
pop
iret
push
rorb
fimuls
add
dec
stos
or
push
mov
adc
repz
andb
push
je
mov
scas
xlat
lock
in
pop
gs
sbb
ret
addl
pop
cmc
inc
cld
icebp
aad
call
pop
sub
add
cwtl
pop
cmc
aad
pop
bound
icebp
decb
mov
cmpb
mov
ret
mov
jp
dec
adc
jmp
add
ljmp
sbb
popf
and
xchg
dec
jnp
aam
rorl
adc
lds
flds
inc
push
adc
jo
inc
cmpsl
les
pop
jge
pop
xor
pop
mov
xchg
insb
repnz
imul
addb
mov
xlat
dec
ret
pop
xchg
je
cmp
fwait
int
xchg
or
add
sahf
or
scas
inc
dec
inc
js
xor
clc
scas
fidivl
arpl
sbb
aad
pop
sbb
mov
push
divl
mov
std
lods
inc
aad
jae
and
in
push
push
rcl
fcmovb
sbbb
por
cmpsb
sub
push
jmp
push
data16
orps
cs
xchg
das
push
lods
fimuls
pop
jmp
in
into
add
or
jmp
and
into
inc
and
ljmp
add
jecxz
or
or
inc
pop
cmpsl
stos
xchg
push
lods
add
jne
lods
std
xchg
sub
mov
das
and
sti
outsb
inc
dec
imull
arpl
mov
dec
jno
mov
lahf
cmp
push
mov
jbe
sub
and
push
pop
xchg
inc
mov
gs
in
xorb
out
out
iret
aad
push
movsb
add
imul
loopne
ss
pop
pop
mov
push
dec
mov
xchg
or
or
jge
movsl
cld
add
sub
push
sub
loopne
inc
popa
loopne
lock
xor
sbb
out
or
scas
cmp
adc
pushf
in
sbb
aad
movsb
out
mov
out
rcrb
dec
push
leave
pop
dec
test
mov
pop
sbb
cld
add
jae
lods
xchg
ja
aam
jno
outsb
pop
pop
cmpsl
faddl
scas
out
add
or
test
or
and
mov
out
lea
inc
dec
in
jno
inc
loope
das
pop
inc
pop
mov
outsl
cli
xchg
lock
repnz
jge
jg
loop
lret
push
scas
scas
jmp
mov
xchg
test
insb
push
cmp
push
ljmp
js
mov
jge
jle
movsb
test
imulb
push
mov
loope
mov
jge
cmpsb
add
call
push
test
jg
movsl
xor
popa
mov
sbb
cmpl
sbb
mov
outsb
inc
add
xor
inc
pop
inc
cmpl
jno
pop
jb
cmp
or
fld
xchg
xor
xor
sub
or
es
daa
sub
fcmovnbe
nop
lods
rorl
jbe
sbb
sbb
jnp
mov
sbb
dec
lock
enter
sti
in
mov
jmp
cmp
push
dec
in
insb
je
test
add
xchg
pop
or
mov
jmp
ljmp
dec
lea
sbb
bswap
push
add
push
jns
dec
mov
popa
mov
rcrl
fstps
aad
dec
pop
sbb
pop
xor
inc
movsb
in
test
std
add
in
sub
add
movsb
cli
clc
cltd
sub
pushf
mov
ss
add
loope
xchg
add
mov
repz
sbb
mov
cmp
ret
push
aas
cli
adc
stos
je
and
enter
or
mov
iret
xchg
fwait
push
dec
sbb
sbb
sub
les
bnd
arpl
cli
mov
test
scas
imul
add
jae
mov
xlat
pop
and
loop
jmp
sbb
add
fsubs
sbb
lods
sbb
jp
aaa
les
dec
xchg
add
fildll
jbe
fbld
and
popa
adc
repz
ljmp
push
sub
scas
or
in
lcall
ror
in
mov
fildll
mov
cli
or
sti
mov
adc
cmp
sub
sub
das
xchg
dec
jge
lds
dec
xor
mov
lock
das
lds
je
outsb
leave
movsl
pop
mov
push
mov
ret
test
mov
ds
inc
loop
pop
mov
pop
aad
inc
popa
mov
subl
scas
push
cmpsl
xor
sbb
scas
pop
fwait
mov
popf
add
in
data16
sbb
mov
outsl
xor
gs
push
scas
and
or
mov
xchg
js
mov
lret
jecxz
sub
cmp
push
adc
mov
lock
jo
out
arpl
inc
in
push
cli
add
add
decl
add
mov
cmp
sub
xor
inc
adc
xor
stos
call
adc
mov
repnz
stos
xor
jle
sbb
loopne
movsl
mov
jo
sub
int3
mov
adc
adc
or
rolb
fldenv
xchg
xor
mov
call
push
outsb
dec
das
jp
mov
pop
dec
imul
xor
test
out
lock
dec
imul
jmp
jbe
adcl
or
test
lods
ja
hlt
repz
jg
sarb
push
push
mov
insb
fistl
fcomps
and
inc
xor
push
mov
push
into
add
ja
jbe
pop
adc
ret
fisubrl
dec
pop
sub
pop
mov
push
adc
arpl
push
dec
add
icebp
xor
dec
pop
xor
js
jg
ficompl
inc
xchg
or
aaa
inc
popa
cli
or
add
clc
arpl
xor
stos
add
fisttpl
sub
push
or
lret
lds
mov
mov
inc
aad
xchg
rcrl
sub
test
dec
and
rcll
dec
outsl
in
mov
sbb
int
or
pop
push
mov
test
pusha
ss
mov
xor
and
inc
xchg
xor
mov
in
daa
fcompl
xchg
jns
sti
lahf
push
push
xorb
pop
sahf
mov
mov
jne
push
push
dec
push
and
arpl
xor
out
cltd
movsl
xchg
dec
sbb
add
stos
iret
lret
sbb
stos
sti
sub
ja
fisubrl
ljmp
inc
pop
push
into
mov
and
dec
testl
stos
and
cmc
out
imul
add
iret
repz
adc
pop
and
bound
lods
aam
sbb
jmp
mov
push
ja
adc
adc
aad
jge
cmp
test
push
mov
stos
mov
sahf
add
jg
mov
frstor
fwait
jne
in
xor
pushf
dec
insb
xor
add
pop
jl
rol
sub
das
test
fdivl
or
out
stos
ret
lods
loope
mov
and
or
mov
xor
push
cwtl
sbb
mov
cmp
fisubs
or
mov
ja
or
mov
or
aad
inc
push
ljmp
ja
adc
sub
or
inc
jb
stc
rcrb
out
in
cmp
and
mov
pop
push
mov
lea
dec
ret
xor
into
outsb
jmp
ret
popa
xor
pop
aad
sub
test
mov
or
addr16
enter
aam
loope
test
jno
pop
scas
mov
imul
imul
leave
push
test
call
test
cmc
pop
pop
push
jg
mov
rol
cltd
pop
es
mov
sbb
add
push
add
popf
jge
mov
push
out
pop
mov
inc
inc
js
mov
insl
and
lea
movsb
cmpb
negl
cmp
sbb
sbb
sub
arpl
sub
sbb
jg
push
incb
sub
shrb
cltd
jnp
cmpsb
push
xchg
inc
sahf
call
imul
outsb
popf
push
movsb
cmp
rcll
mov
cli
or
sbb
subl
scas
mov
pop
or
sub
ljmp
dec
jge
in
test
dec
mov
dec
jmp
pop
adc
dec
in
out
ret
lcall
std
mov
jp
ret
mov
and
sub
jb
std
cmp
clc
cmp
mov
pop
jb,pn
and
ds
ret
jno
push
sub
or
div
and
test
cli
push
inc
xchg
insb
sti
js
out
call
movsl
andl
jge
jl
sbb
sub
push
add
push
hlt
mov
xchg
lret
xchg
or
outsb
jle
scas
inc
jne
sub
mov
clc
mov
adc
stos
xchg
xor
xchg
lret
rorb
mov
add
and
shll
cmp
pop
lods
push
add
or
mov
int
lock
add
mov
cmc
js,pt
out
gs
mov
icebp
mov
das
scas
adcb
fisubrs
push
mov
mov
es
mov
movsb
push
das
xchg
sbb
and
cmp
rorb
inc
dec
mov
mov
loope
inc
fdivs
sub
subb
nop
xchg
push
sbb
stc
out
and
push
or
mov
mov
push
scas
add
inc
jbe
ds
shlb
cmp
and
stos
and
pop
test
lods
sub
out
imull
shrb
adc
lea
sub
bound
or
rcll
xor
inc
and
pushf
or
je
xchg
gs
je
pushf
repz
rol
je
repnz
sarb
mov
sbb
mov
fucomi
xorl
add
push
and
aad
and
mov
mov
push
repnz
pop
adc
sahf
xchg
clc
pop
pop
je
add
loop
mov
cwtl
lds
adc
test
fiadds
test
sbb
xchg
cmpl
or
sub
xchg
push
cmpsb
mov
xor
fs
pop
sub
ss
sub
jle
loope
sti
dec
loopne
mov
enter
ret
call
adc
gs
push
adcb
xchg
dec
testl
data16
imul
xor
adc
fisttpll
and
sub
and
data16
insb
jle
mov
xor
jge
in
fwait
shlb
fdivrl
inc
sub
out
ljmp
and
in
sub
pop
jg
dec
in
sub
addr16
js
mov
sarb
mov
ljmp
jl
out
mov
pop
push
lret
xlat
in
jns
loop
popa
iret
xchg
dec
adc
mov
jl
sbb
add
pusha
pushf
and
jne
push
scas
adc
pop
xchg
mov
int
movsb
or
icebp
js
xchg
mov
xlat
jae
jno
push
jle
das
iret
dec
pop
ret
jne
or
jecxz
sbb
fsubl
ljmp
push
cmp
jg
xor
sub
jge
sub
adc
inc
scas
fsincos
fcompl
cmp
sahf
mov
dec
pop
mov
adc
in
nop
movsb
outsl
insb
xchg
insl
jl
dec
pop
loope
or
xor
inc
shlb
add
mov
adc
loope
gs
fcmovbe
sbb
addr16
pop
mov
into
dec
mov
dec
mov
leave
icebp
andl
push
dec
iret
add
xchg
sub
lods
cmpsb
cmpsl
jg
jne
add
mov
movsb
fucomip
push
into
push
ret
fs
into
add
dec
sbb
inc
mov
push
repz
xchg
or
rdmsr
xor
negl
mov
mov
ljmp
cli
test
cs
out
or
movsl
leave
sub
or
adc
stos
cld
scas
pop
dec
in
sub
pop
mov
add
cmp
dec
adc
lahf
push
xor
in
ljmp
adc
xor
push
popf
push
cltd
dec
jbe
and
dec
les
mov
push
fwait
xchg
fucomip
subl
imul
sbb
std
adc
test
fsub
xor
mov
xchg
mov
add
pop
cmc
mov
or
xlat
push
test
mov
addb
inc
repz
sbb
sub
stos
xlat
nop
pop
jmp
and
push
cmp
sub
push
lods
xor
and
call
mov
xchg
xchg
mov
int
imul
fsubrs
les
push
arpl
push
leave
sub
punpckhbw
jle
test
inc
cwtl
mov
push
stos
push
stos
dec
inc
push
xor
fwait
mov
pusha
jns
outsb
mov
jmp
pop
imul
nop
mov
xchg
sbb
lcall
mov
push
lcall
popa
add
and
or
lcall
scas
add
fs
xchg
adc
decl
lods
test
les
ljmp
out
adc
xchg
jge
lea
xchg
xor
cwtl
mov
jo
roll
inc
test
dec
mov
or
mov
inc
fidivs
cmp
jg
les
stos
dec
cmp
fnstsw
and
stc
sbb
push
push
loopne
jecxz
sti
movsb
sbb
push
mov
mov
lahf
pop
rclb
aad
sub
pop
leave
ds
cmp
sbb
inc
jbe
fnstsw
cmp
mov
push
lods
leave
mov
ret
and
dec
arpl
ret
push
sub
es
sti
cwtl
sbb
insb
cmp
fidivrs
aam
pop
pop
jg
test
or
cmp
inc
ret
add
inc
test
ss
sub
lock
cli
pushf
xchg
mov
call
dec
inc
mov
xchg
mov
jle
jbe
adc
std
jne
out
leave
sub
nop
movsb
outsb
fs
aas
pop
cltd
pop
mov
sbb
jge
inc
push
testb
and
scas
jae
mov
movsl
out
push
aas
adc
cwtl
sub
test
aad
clc
cltd
into
sbb
scas
mov
xchg
jl
jae
lcall
push
scas
loope
or
lds
xor
xchg
leave
dec
leave
push
push
aas
aaa
sub
mov
mov
bound
mov
xchg
ljmp
movsl
jbe
movsl
ja
std
or
add
sub
mov
gs
mov
push
mov
lock
mov
xor
movsl
pop
sbb
es
inc
push
pop
mov
dec
jp
xchg
push
int3
sub
push
mov
rcl
repnz
or
loop
mov
jnp
aas
hlt
mov
popf
es
movsb
ret
and
sahf
pop
pop
hlt
shr
pop
les
out
pop
jb
rorb
mov
out
mov
insb
jmp
sbb
movsb
dec
lds
add
mov
jno
ss
sahf
div
push
pop
ret
inc
into
loope
inc
ret
push
xchg
xchg
xchg
inc
jl,pn
mov
mov
loope
rclb
pusha
dec
and
and
cmp
push
xchg
mov
mov
iret
mov
push
push
mov
out
fcmovb
push
pop
jg
test
inc
fcom
mov
arpl
and
lea
inc
dec
jne
dec
inc
jg
xor
test
out
inc
add
jecxz
ja
mov
jmp
sbb
pop
repnz
jl
les
push
mov
push
cs
scas
data16
and
mov
or
fbstp
test
popf
imul
cmp
jmp
maskmovq
fiadds
notb
fistpll
jmp
stos
repnz
add
test
xchg
xchg
out
ja
add
push
jecxz
sub
jmp
cmp
test
push
jge
jmp
xor
or
pop
popf
cmp
test
xorl
adc
sarb
inc
jbe
cmp
cltd
push
adc
add
adc
ljmp
ds
cmpb
ljmp
inc
mov
push
pusha
pop
ljmp
sub
push
stos
mov
lock
inc
stos
mov
in
lds
xchg
xchg
mov
test
jb
outsb
sti
dec
xor
inc
or
add
pop
mov
test
and
cmp
jmp
in
out
cmpsl
sahf
call
push
sar
call
rcr
jmp
xor
lcall
cmp
neg
mov
shlb
mov
negb
sub
push
in
cmp
inc
lret
outsb
mov
xlat
fldt
enter
mov
shll
test
push
adc
hlt
pop
pop
rep
ja
xorb
adc
push
rcrb
mov
into
pop
leave
mov
sub
or
sbb
in
jne
test
mov
mov
push
dec
popl
push
shlb
mov
in
bound
lcall
cmpsb
mov
or
cmpb
imul
outsl
mov
adc
xlat
jo
lahf
push
push
sub
dec
and
movsl
adc
insb
fiaddl
add
sbb
movsb
xchg
lods
jo
push
cmc
mov
adcb
test
out
mov
adc
gs
in
inc
jno
mov
jecxz
add
add
call
out
sub
push
dec
xor
jne
rorb
in
in
and
lahf
inc
pop
sub
sbb
lcall
lcall
lcall
dec
idiv
xor
rcll
sub
sbb
jp
inc
rcll
movsb
orl
in
cld
cmpsb
or
lcall
cltd
push
inc
dec
pushw
xor
shll
dec
xor
xor
shl
dec
clc
ljmp
xchg
cmp
sbb
roll
push
xor
shll
fcmovbe
or
clc
out
shrb
cmpsb
mov
push
cmpsb
jl
lcall
cltd
popf
and
shll
ror
dec
aam
xor
shll
leave
lcall
imul
out
imul
imul
ss
mov
enter
dec
ret
add
and
fbstp
in
cwtl
add
jecxz
mov
sbb
and
add
push
das
or
popf
mov
pop
add
add
stos
jae
scas
out
add
xchg
insl
fcmovnbe
pop
out
out
xlat
fs
mov
icebp
ret
add
xchg
out
cmp
push
xchg
popf
orb
or
add
xchg
jnp
mov
stc
xor
add
jmp
insb
sub
pushl
xchg
cmp
xchg
mov
cmpsb
mov
sub
icebp
mov
into
xorb
jbe
cmp
pop
or
outsb
add
outsb
hlt
dec
push
sbb
lahf
fincstp
jne
add
std
sahf
jae
or
scas
inc
mov
sbb
movb
repnz
cs
scas
dec
cmp
adc
adc
mov
aas
cmp
add
jl
je
jg
lret
jp
push
lcall
inc
jge
add
ret
add
movsb
pop
dec
add
lock
subb
sub
add
jle
xchg
cmp
cld
dec
in
mov
xchg
cli
test
inc
or
cmp
mov
aas
add
mov
inc
add
push
inc
and
and
dec
jne
jbe
jp
add
nop
pop
adc
std
lcall
adc
repz
add
es
add
adc
add
jnp
or
movsl
xor
sbb
scas
sbb
adc
jecxz,pn
xchg
inc
jbe
jecxz
add
xchg
pop
adc
aas
aaa
adc
adc
aam
aas
rcrl
fs
add
subb
lcall
scas
add
fwait
int
ficompl
popf
sub
mov
add
cmp
fidivrl
push
in
test
sbb
add
xchg
add
out
cmpsb
movsl
add
in
data16
inc
push
cmp
ror
psubusb
mov
ljmp
loopne
into
and
fwait
cmpsl
jecxz
cwtl
add
pop
popa
popf
inc
push
sahf
add
push
xor
fidivrs
push
pop
pop
cmp
loopne
leave
mov
and
mov
xchg
mov
mov
in
into
mov
in
or
rcll
js
pop
insb
cli
insb
outsl
add
jecxz
imul
add
sub
jo
lea
xchg
lahf
xor
adc
stos
pop
push
repnz
add
mov
sbb
push
in
xchg
or
jne
stos
pushf
jbe
outsl
adc
cmc
jo
mov
xchg
mov
lock
std
mov
aam
mov
lock
into
jb
je
add
inc
sub
xchg
fstpl
sub
push
xchg
cld
add
mov
add
int3
addl
cmpsl
stos
movsl
xchg
aam
inc
les
lret
ljmp
add
pop
movsb
mov
mov
add
rcrb
cmp
mov
hlt
cmp
pop
sarb
push
stc
dec
inc
shll
inc
add
push
adc
add
subl
dec
or
test
cmp
and
enter
cld
stc
add
hlt
int
fwait
pop
stc
into
add
loopne
lret
jge
nop
enter
sbb
add
jmp
inc
mov
sbb
movsl
into
mov
xor
int3
lock
test
repz
add
bound
sbb
and
add
or
push
mov
fwait
push
pusha
shr
mov
test
stos
sbb
pop
mov
decl
pusha
loope
pusha
fidivrs
push
jecxz
adc
add
xor
adc
loop
pop
pop
xchg
mov
push
pop
and
add
add
xor
es
mov
lea
mov
cmp
pop
mov
into
les
sbb
sub
pop
sbb
add
int
data16
jae
arpl
dec
pop
or
cmpsw
or
sbb
push
outsl
jno
dec
test
inc
adc
pop
inc
call
cmp
cmp
push
adc
and
adc
sbb
cmp
ret
sbb
jp
add
inc
jnp
jno
or
pusha
cmp
popf
xor
cltd
push
xchg
out
enter
mov
push
xchg
xchg
xchg
popf
popl
xchg
cltd
mov
xchg
repz
ljmp
andb
mov
pop
loop
lret
push
adc
frndint
fdivrp
jecxz
out
add
sti
call
negb
hlt
repnz
push
sub
or
aas
ss
aas
add
pop
leave
jo
adc
mov
mov
lret
leave
xor
xor
dec
inc
ret
pop
push
adc
mov
pop
or
jbe
movsb
adc
lock
pop
pop
addr16
or
or
inc
dec
sarl
stos
rcrl
int3
or
shlb
mov
mov
mov
cmpsw
stos
mov
push
cmpsl
das
inc
xchg
sti
add
inc
mov
add
fldt
xchg
shrb
cs
push
mov
outsl
mov
mov
sbb
imul
and
and
dec
add
insl
inc
stos
and
xor
push
push
jmp
mov
mov
lds
xchg
jb
loop
mov
outsb
mov
sub
or
lds
mov
dec
mov
cmp
test
push
mov
lock
cmpsb
cmpsb
testb
test
fwait
or
in
push
sub
out
not
xor
out
fwait
pop
mov
test
dec
inc
sub
adc
rolb
and
iret
dec
cmp
adc
xor
test
mov
cmp
xchg
lods
clc
filds
sarl
mov
cmp
scas
and
mov
shl
std
call
push
mov
lods
fdivl
out
or
push
sti
repz
hlt
mov
or
mov
and
lea
stc
inc
adcb
xor
inc
cs
xor
loop
xchg
ljmp
pop
inc
sub
inc
fxch
push
leave
pop
pop
mov
sub
push
js
scas
jmp
push
jg
inc
mov
dec
xor
in
dec
inc
jmp
mov
icebp
test
pop
or
dec
iret
sbb
adcb
mov
sbb
lock
orl
std
sub
gs
dec
addr16
lock
fstl
test
decl
mov
mov
mov
jne
fisttpll
fsubrp
aam
inc
sub
add
adc
mov
mov
mov
mov
jno
insl
dec
subl
jno
add
aam
out
shlb
je
dec
gs
insl
push
ds
cmp
aad
aas
insb
or
xchg
jg
stos
movsb
xchg
ljmp
movsb
loopne
lret
cmp
adc
jmp
push
fmull
in
mov
nop
lahf
stc
in
imull
clc
out
lods
fdivrp
out
repz
adc
mov
or
or
pop
or
mov
cmp
adc
shlb
cmp
push
cmp
pushf
mulb
push
iretw
aaa
sbb
bound
pop
push
xchg
push
dec
js
imul
push
mov
mov
leave
jo
andb
or
shll
pop
and
jmp
insb
fildll
fsincos
scas
cmpsb
dec
movsl
insl
pop
ja
aas
xlat
cli
add
loop
or
jae
lcall
sub
pop
sti
sahf
aad
push
mov
bound
scas
pushf
jp
iret
lahf
pop
or
int
inc
movsl
scas
mov
rcr
mov
mov
scas
cltd
dec
mov
out
cmp
jmp
scas
loopne
test
mov
fs
jae
xor
jbe
push
testb
ret
int
cmp
push
das
aas
push
ret
adc
sahf
shl
inc
das
and
add
inc
insb
pop
rcrb
push
dec
dec
in
push
mov
push
xchg
js
add
enter
inc
xchg
stc
dec
or
mov
stos
je
add
mov
iret
lret
lret
mov
lcall
ds
adc
adc
xor
cmc
or
sub
or
loopne
push
lea
call
mov
cmp
mov
cld
push
imul
sub
cmpsb
js
popf
jmp
cmpsb
mov
mov
push
lret
icebp
cvttps2pi
repz
pop
pop
sub
sahf
pop
out
add
adc
adc
or
sbb
scas
xchg
cmp
mov
ja
std
sahf
sub
add
cld
cli
fistl
add
enter
mov
cmp
test
push
cmp
aaa
mov
mov
inc
jmp
jne
adc
cltd
cmp
aam
xchg
rol
dec
mov
sbb
pop
adc
xor
push
cli
sbb
jecxz
cmp
loop
enter
pop
pop
mov
adc
jl
fnsave
cmp
mov
add
mov
and
sub
shr
shll
mov
mov
or
jmp
xchg
or
lea
hlt
and
mov
add
loope
mov
inc
xchg
push
mov
aam
lock
dec
push
pop
mov
or
pop
pop
push
mov
inc
push
cmc
xchg
dec
pop
push
jg
add
add
pop
inc
cmp
aaa
mov
lret
jae
dec
sub
push
push
push
and
add
shlb
loope
fwait
and
mov
movsw
jmp
add
arpl
fnstenv
mov
subl
jl
in
sbbl
imul
add
add
mov
or
and
out
xor
fstps
xorl
scas
cmp
shlb
stos
xor
xchg
cmpsb
mov
add
mov
inc
inc
add
enter
fs
and
jg
js
inc
sub
out
add
rcrl
mov
inc
push
jle
fbstp
push
loope
push
aas
lcall
sub
addl
sbb
mov
jnp
orb
xor
mov
mov
movsl
and
add
nop
aam
push
into
mov
xor
jo
cmp
dec
push
xor
loopne
test
pusha
scas
inc
hlt
in
mov
push
fmuls
pop
sbb
add
mov
inc
loope
in
lret
leave
xor
dec
mov
cmp
xor
mov
int3
dec
mov
or
imul
hlt
dec
add
data16
negl
jmp
add
popl
test
pusha
mov
or
xor
loope
xchg
jb
sub
jmp
sbb
xchg
mov
clc
test
mov
test
scas
or
or
sub
jle
add
push
jnp
mov
xor
xor
repnz
fcmovnb
jmp
ret
adc
out
dec
std
mov
dec
pop
push
xchg
xchg
push
sahf
mov
and
stos
sbb
mov
jmp
call
or
xor
ds
out
les
xchg
rcrb
rol
push
lret
bnd
cmp
and
fldl
inc
jg
jl
pop
adc
jg
adc
cltd
call
lea
in
popa
mov
sub
sub
or
mov
inc
adc
push
cvtpi2ps
cmp
jns
aaa
dec
jge
or
add
pop
jnp
aaa
out
sbb
xor
jmp
inc
das
cmc
lods
dec
bound
mov
xchg
push
pop
dec
sbb
and
inc
aad
push
lock
mov
mov
shlb
adc
jl
lahf
fst
add
adc
pusha
lret
fnsave
fld
je
xchg
jmp
sbb
loope
xchg
mov
or
pop
push
setae
in
inc
jae
adc
and
push
xchg
fnstenv
push
add
mov
jae
jecxz
sbb
test
hlt
fnstenv
movsb
stc
hlt
repz
mov
popa
cmpsb
dec
jp
enter
dec
jb
mov
sub
jg
js
ja
push
jbe
mov
int3
es
daa
cmp
xchg
daa
nop
out
shll
or
sbb
sub
xchg
adc
stos
pusha
aam
cmc
hlt
and
mov
cmp
clc
jae
imul
push
mov
pop
inc
pop
dec
cmp
xchg
xor
sub
fistps
push
sbbl
add
cmpsb
popl
insb
jns
adc
frstor
repz
ljmp
xchg
sbb
jae
clc
adc
add
sbb
dec
imul
sub
pop
push
arpl
push
xchg
sub
sbb
and
arpl
xchg
mov
add
fisttps
test
mov
lret
mov
test
icebp
dec
std
and
ret
js
mov
xor
gs
push
push
push
adc
addr16
outsl
add
jae
gs
jle
add
jae
outsb
cmp
mov
sub
and
or
arpl
xchg
xchg
adc
xchg
das
insb
shrl
imul
add
xchg
mov
mov
mov
sub
int3
fcmovne
lret
xchg
cwtl
push
pop
mov
xchg
inc
andb
hlt
into
push
jnp
dec
imull
sub
push
xor
mov
add
fsubrl
cmp
dec
sub
sbb
sub
mov
xchg
repz
stos
fdivp
push
inc
je
jp
imul
not
sub
xlat
cs
je
jo
lods
pop
lods
test
shlb
shrl
mov
mov
push
sti
ds
sub
xchg
jecxz
and
movsl
sete
push
adc
or
add
mov
sub
jb
pop
xchg
movsl
es
mov
adc
fnsave
adcb
scas
adcl
nop
push
or
xor
mov
in
pop
add
adc
fwait
or
lret
add
sbb
inc
mov
arpl
std
lds
xlat
cmp
cmp
insl
cmpxchg
rcrl
or
add
flds
sbb
or
inc
xor
sub
sbb
sbb
xorb
mov
sub
xor
inc
into
jge
dec
clc
jnp
add
and
cmp
in
lods
xor
pushf
mov
int
mov
fidivrs
fdiv
lods
ret
mov
push
imul
add
sbb
hlt
insb
and
imul
lods
sbb
mov
pop
xlat
adc
std
push
lahf
xor
out
mov
xchg
sub
and
or
xchg
mov
mov
add
and
mov
enter
and
rcrb
and
enter
inc
arpl
cwtl
pop
push
mov
or
xchg
sub
mov
xchg
sbb
bound
or
in
loopne
fmull
pushf
ss
jns
lahf
push
sti
in
shrl
inc
pop
fdivs
in
outsl
inc
sbbb
or
ss
rclb
adcb
lock
inc
int3
fs
out
xchg
mov
mov
mov
and
sbb
loopne
add
or
and
mov
cmp
sub
fbstp
cwtl
mov
imul
in
sbb
filds
or
mov
xchg
fdivs
enter
out
repz
dec
sbb
lock
adc
sbb
cmp
sbb
or
sbb
adc
jle
xor
mov
or
push
std
ss
or
cmpsb
movsl
dec
xor
or
inc
sub
jbe
js
jo
xor
outsl
sub
pop
roll
pushf
xchg
nop
scas
sbb
mov
inc
cmpsb
mov
cltd
sbbl
mov
stos
rcll
iret
test
xchg
ret
fisttpll
fistpl
ret
cmc
mov
sar
movsb
mov
ljmp
int3
call
mov
in
mov
lods
mov
push
js
or
fwait
cmp
push
jmp
aaa
movsl
sub
jno
pop
js
jb
inc
or
fsubrs
xchg
ja
rcrb
rcrl
lret
sub
adc
pop
fldcw
mov
mov
and
clc
loopne
fcmovnu
sub
xlat
xor
jmp
inc
in
mov
enter
aaa
neg
pop
iret
test
loopne
int3
test
stc
int
xor
sub
push
sbb
test
mov
ljmp
xchg
fwait
pop
fucom
lret
cmp
pop
mov
repnz
dec
out
lcall
push
push
imul
shr
jge
dec
fisttpll
in
call
int
leave
leave
cmp
cmp
popa
je
push
mov
ljmp
mov
and
cmp
pop
lods
xorb
aaa
xchg
push
into
jae
sub
dec
icebp
push
and
cmp
jno
mov
int3
inc
mov
push
push
adc
push
pop
add
and
lods
fs
call
rcrl
lcall
popa
scas
xchg
or
fcmovnbe
iret
lds
adc
lods
push
lds
cs
leave
xchg
pusha
jns
xor
pop
js
push
cmpsl
inc
test
cmp
mov
push
movsl
orl
lock
leave
xor
in
aaa
adc
ljmp
cld
int3
sti
hlt
add
mov
or
data16
pop
xchg
ss
inc
jno
imul
push
sub
stc
mov
js
cmpsb
sti
lret
mov
jae
test
push
mov
push
mov
xchg
test
pop
lods
mov
fdivrs
fisubrs
stos
loop
mov
stc
jo
sbb
ljmp
lods
add
aaa
jge,pt
imul
pop
out
daa
jg
push
das
xchg
mov
rolb
add
rcr
mov
std
sarl
and
or
cld
jne
dec
scas
add
js
lds
xor
dec
lods
icebp
push
and
sub
aas
call
jno
cmp
scas
movsl
xor
jno
mov
sub
push
fsub
jmp
sbb
out
sbb
adc
and
sub
mov
jp
and
sbb
iret
inc
cld
faddp
mov
lods
ds
sbb
enter
fbstp
stc
jne
sub
mov
sub
lods
mov
adc
cmp
xor
stos
movsb
push
cld
fldenv
mov
jns
push
push
adc
pop
dec
pop
push
inc
push
mov
pop
pop
mov
movsl
adc
xor
and
cs
dec
mov
out
lds
loop
out
jp
and
outsl
icebp
stc
mov
test
jg
adc
repz
or
xlat
jg
mov
and
and
sub
ljmp
dec
dec
pop
sub
push
movsl
lds
mov
mov
insb
sub
gs
mov
pop
mov
imul
fnclex
aaa
or
aaa
das
lods
push
cmp
add
mov
mov
movsb
sub
mov
adc
jb
fcompp
and
loopne
aad
xlat
cmp
repnz
in
aam
push
lea
call
xlat
repz
xor
mov
dec
or
or
loopne
fnstsw
mov
sbb
jae
push
or
icebp
outsb
jl
mov
into
das
push
addr16
gs
stc
dec
fildll
imul
xchg
jp
std
shrb
idivl
cmp
test
lods
xchg
out
pop
jo
outsb
adc
mov
test
ja
out
in
mov
xchg
add
mov
mov
xor
xchg
mov
add
imul
shlb
lods
add
mov
or
sbbl
push
pop
add
es
mov
leave
and
lcall
push
or
rolb
gs
popf
lret
int3
adc
lcall
add
mov
scas
pop
movsb
or
pusha
lcall
mov
test
addb
mov
orb
sub
inc
pop
cmpsl
xor
cwtl
sbbb
stos
add
xor
ja
push
dec
and
stos
fst
inc
out
cs
xor
jbe
push
sub
imul
sti
dec
sub
add
and
mov
dec
cltd
or
xor
fimull
loopne
add
sti
mov
push
mov
lahf
nop
sahf
sub
dec
out
nop
sbb
mov
dec
or
add
mov
sbb
pop
pop
pop
add
aam
fadd
iret
add
into
iret
fcmove
mulb
int
movl
testl
icebp
jecxz
test
jmp
push
addr16
and
ljmp
jb
push
push
pop
jle
sbb
or
xchg
xchg
sbbb
sbb
adc
add
insb
outsl
fs
daa
push
and
ja
xlat
pop
adcb
out
icebp
roll
scas
ds
push
sub
pop
pop
xchg
sbb
adc
sub
push
lcall
cmp
addr16
mov
call
jae
jbe
cmp
push
xor
xchg
xchg
xchg
xchg
sbbb
shll
inc
push
scas
aam
lock
sarl
cli
xlat
sbb
mov
add
and
test
outsb
sub
sub
cmpsb
dec
adc
pop
sti
insl
and
ds
add
es
sbb
push
adc
adc
clc
push
sub
cmpsl
xlat
ret
fnstsw
subb
jb
popa
scas
mov
int
aad
or
lret
test
inc
std
lock
repnz
mov
stos
mov
xchg
loopne
ret
xchg
aas
loop
jge
adc
int3
dec
test
cli
je
out
repz
or
popf
fnstsw
mov
and
and
sub
out
xorb
imul
jno
pop
push
imul
cmpsb
xor
mov
scas
repz
mov
popl
adcb
int
cmc
addb
test
rcl
into
pop
or
sbb
jecxz
or
sahf
xchg
cmp
or
out
notb
xor
or
cmp
sub
adc
push
sub
and
stos
sbb
in
popf
bound
adc
iret
fstp
sbb
shrb
fsubs
push
lcall
push
pusha
addl
cltd
movsb
gs
popa
xchg
enter
xor
adc
push
adc
cmpsl
push
addl
xlat
scas
dec
inc
outsl
push
or
and
into
mov
xor
les
dec
int
cmc
test
addb
push
lock
outsb
inc
mov
add
xchg
shll
rep
movb
mov
pusha
dec
das
sub
notb
and
jnp
mov
orl
pop
clc
adc
cmp
loope
in
lods
pushf
push
test
mov
lcall
arpl
imul
mov
pop
lock
repz
xchg
mov
and
push
mov
sbb
jp
daa
mov
in
shll
aad
lea
es
fisttps
push
lods
jae
stos
cmp
dec
jl
jl
orb
and
movaps
insb
not
push
or
das
outsb
data16
mov
rclb
pop
je
out
xlat
out
pop
xchg
push
sbb
adc
fadd
adc
cmpsl
add
add
jne
xor
out
xchg
add
jb
mov
push
sub
mov
in
xor
adc
ds
sub
pushf
addb
sbb
push
sub
pop
adc
push
arpl
mov
cwtl
insb
unpckhps
pushf
aaa
test
orl
test
push
in
inc
jmp
jg
mov
push
cs
xor
pop
jae
xchg
cmpsl
mov
xchg
jns
xor
jecxz
hlt
sahf
test
sbb
jge
cwtl
cmc
je
outsl
pushf
adc
mov
aaa
fmull
stc
dec
cmpl
jl
ja
scas
ret
jne
data16
ja
loop
pop
pusha
xor
inc
adc
cmp
add
cmp
or
test
or
xchg
xlat
dec
ret
add
test
std
xchg
gs
lods
xor
lods
ret
add
or
ret
add
adc
shl
jecxz
add
xchg
sbb
cmc
into
inc
imul
jne
std
mov
fldl
test
dec
dec
js
scas
cmpsb
pop
scas
inc
add
pop
push
cmp
push
jae
mov
mov
mov
cmp
mov
ljmp
inc
mov
inc
mov
sbb
add
cwtl
mov
push
cmc
les
out
cmc
and
jmp
adc
cli
repz
or
int
xchg
adc
add
or
mov
jp
bound
imul
outsb
xchg
imul
icebp
popf
lods
mov
jmp
hlt
pop
aad
cltd
cmc
mov
popf
push
add
daa
or
stos
xchg
loop
sbb
rcr
out
jmp
mov
adc
in
lods
inc
xlat
mov
mov
xlat
sub
das
cmpsb
add
xchg
dec
jae
mov
in
sub
pop
repz
jo
mov
mov
lods
ss
stos
aam
in
xchg
mov
xor
out
cmpsl
or
mov
mov
std
pop
lret
cmc
push
out
pushf
or
scas
loopne
mov
hlt
push
clc
inc
adc
loopne
push
jns
mov
xchg
push
sbb
jns
add
push
jl
scas
insb
add
test
lahf
or
push
aaa
or
jle
jns
in
sub
sbb
jp
lock
pop
dec
int
push
or
mov
mov
add
push
mov
movsl
sub
fs
cmc
ja
sbb
mov
std
xchg
decl
shl
in
mov
push
mull
jne
test
cmpsb
or
add
push
sbb
push
push
add
jg
mov
push
insl
push
rcll
or
ficoms
push
cwtl
testl
aad
cmpsl
inc
cmp
mov
lea
js
pop
xlat
inc
subb
mov
inc
out
mov
test
test
imul
sahf
sbb
fisubs
lret
push
adc
xlat
sbb
mov
fcomps
test
fdivp
jno
stos
mov
xchg
leave
test
jge
hlt
shl
ds
add
fcmovnb
outsl
jle
je
xchg
mov
push
push
bound
sbb
pop
dec
pop
je
test
js
call
loop
push
jmp
mov
pop
arpl
and
fistps
scas
sbb
loope
divps
ja
out
or
xorb
jp
daa
sbb
fmul
cmp
icebp
sti
mov
cltd
xorb
clc
add
jbe
or
mov
push
int3
sahf
mov
mov
add
in
add
stos
call
stos
mov
dec
pop
mov
and
pop
mov
and
imul
or
jge
push
pusha
add
inc
push
imul
push
xchg
addr16
inc
fsubrs
repz
je
fcompl
and
push
xchg
inc
jns
sahf
shrb
lret
inc
cmpsb
mov
push
inc
repnz
movsb
daa
xor
cmpsl
and
xorl
jmp
dec
ror
scas
sti
dec
aad
out
pop
loop
inc
fnop
enter
xchg
dec
mov
mul
pop
dec
enter
dec
adc
popf
push
pushf
push
outsb
fcmove
cmp
aad
out
sub
data16
add
dec
sbb
dec
mov
cmp
into
add
sbb
test
xchg
xchg
enter
das
and
ret
and
int
inc
dec
pop
pop
inc
pop
pop
pop
cmpsb
sub
push
loop
mov
pop
loope
inc
dec
clc
xor
mov
fstp
lcall
push
sahf
test
mov
add
lret
mov
xor
mov
mov
sub
xchg
add
adc
add
push
cli
sbb
ds
sbb
pop
push
insl
push
jno
jnp
xchg
or
pop
in
push
cmp
sub
lcall
push
stos
cltd
sub
mov
je
bound
cmpsb
mov
fsubl
jmp
cmpsb
imul
add
idiv
pop
ror
stos
in
stos
xchg
xor
shlb
test
jae
into
mov
add
imul
gs
fdivl
loop
sub
push
pop
test
cmpsb
inc
xor
mov
dec
aam
pop
mov
xchg
daa
inc
in
es
daa
arpl
divl
mov
push
addl
add
push
or
dec
push
lret
mov
pop
mov
cmpsl
and
jle
std
int3
or
mov
test
cmpl
cld
js
jbe
ja
das
sahf
mov
add
mov
push
dec
std
sub
or
and
mov
in
push
stos
pushl
mov
aad
daa
lahf
pop
popf
push
test
cld
mov
fwait
mov
cmpsl
xor
fcmovnb
or
ret
fiaddl
hlt
and
jb
fdivrl
mov
xlat
stos
inc
push
cmp
push
pop
inc
cmp
out
das
popa
inc
add
or
jecxz
add
dec
inc
pop
ljmp
iret
xchg
test
les
fnsave
int
cmp
mov
in
int3
adc
lds
pop
xor
scas
adc
lods
pop
cmp
pop
pop
lret
xor
cmp
and
loope
stos
mov
and
pop
dec
push
scas
xchg
sbb
push
push
mov
jecxz
and
call
and
std
sti
jmp
mov
fstpl
cli
jae
hlt
inc
lahf
jg
sub
xor
scas
mov
xor
fbld
push
sbb
sahf
xor
or
dec
and
in
push
das
add
push
outsb
jno
add
jecxz
sub
add
jecxz
xorb
mov
xchg
pusha
and
mov
pop
cwtl
or
jecxz
xorb
mov
fisubs
xchg
mov
jecxz
add
jno
rcrb
inc
mov
fmuls
adc
xor
imul
loopne
aas
xor
xor
mov
pop
jmp
sub
xor
mov
add
mov
ret
adc
imul
pop
rcrl
mov
sbb
rcrl
test
es
rcrl
inc
xchg
add
rcrl
pop
xchg
add
rcrl
jmp
or
sti
add
push
adc
jns
xor
or
sub
dec
mov
stos
xchg
jbe
xor
in
ret
cltd
leave
inc
pusha
add
push
gs
cmp
xchg
jbe
xor
out
push
fadds
xor
cltd
adc
add
ds
xchg
add
dec
adcl
arpl
cwtl
xchg
jbe
xor
add
pusha
add
or
cmp
xchg
jbe
xor
out
push
fadds
inc
pusha
add
push
fs
subl
jnp
ja
push
fwait
xor
in
add
int3
dec
mov
xor
rolb
sbb
lret
sbb
add
int3
mov
xor
sbb
leave
add
rolb
xor
adc
faddl
popa
add
sub
cmp
sbb
push
push
or
lahf
pop
cmp
pop
gs
fwait
jnp
inc
dec
dec
mov
pop
popf
jle
dec
xor
xchg
pop
xchg
scas
lcall
add
arpl
inc
lea
lds
mov
push
call
jmp
push
xchg
leave
fnstenv
daa
aaa
aas
aas
imul
sti
push
orb
adc
mov
shll
ja
push
cmpsl
mov
aaa
ret
mov
ljmp
cltd
adc
out
movsl
leave
negl
cmp
scas
fildll
mov
mov
arpl
sbb
out
push
cmp
arpl
sbb
hlt
lret
cmp
xor
or
jnp
out
mov
test
xchg
fsubs
sbb
mov
out
adc
movsl
mov
dec
mov
gs
lahf
pop
push
cmpb
xorl
xchg
loop
mov
dec
movsl
divl
out
cmpsb
push
xor
movups
pop
add
es
mov
fimull
shl
aad
xlat
hlt
pop
xor
pop
pop
gs
push
pop
inc
fstpl
pusha
jae
push
mov
sub
ljmp
mov
leave
mov
sbb
test
pop
mov
xchg
mov
inc
lahf
mov
xchg
mov
jp
test
fcomp
mov
jecxz
outsb
xchg
out
push
dec
ret
pop
push
xchg
pop
cmp
mov
std
sbb
push
sub
push
mov
inc
repnz
jno
push
add
adc
sub
cltd
cmc
adc
cmp
out
dec
adc
aam
fbstp
pop
cmpsl
sbb
xchg
mov
nop
sbb
sahf
test
inc
xchg
mov
push
mov
lcall
in
jae
lds
cs
scas
std
stos
ret
jge
xor
dec
push
pop
mov
dec
xlat
xor
xor
add
adc
jb
and
adc
lds
push
rep
xor
and
cmp
sub
daa
outsb
mov
inc
mov
jle
mov
mov
lahf
mov
lock
fists
cmpsb
sbb
fmul
push
cwtl
aam
subb
ret
adc
call
int
push
jb,pn
mov
xchg
adc
push
jge
es
in
sub
and
test
test
cltd
dec
cli
aam
lret
into
lret
jp
sahf
mov
aam
lcall
test
scas
js
in
mov
lret
or
mov
mov
sti
loope
pop
icebp
dec
stc
out
xchg
pop
setbe
in
jg
clc
in
pop
jbe
dec
fistpl
sub
push
inc
cs
mov
cli
mov
push
dec
mov
xor
cmp
jg
xchg
imul
jmp
push
stos
sbb
jne
enter
mov
stc
mov
subl
lret
popa
rclb
das
ja
jle
movsb
mov
pusha
rcl
fsub
push
sarb
pop
out
arpl
xor
jge
jae
xchg
pop
pusha
sbb
iret
sbb
add
sarl
jnp
stos
pop
in
popf
call
pop
jns
in
pop
jo
popa
fstp
std
hlt
mov
jne
mov
mov
sbb
and
addr16
jne
jmp
gs
fdivr
std
dec
aam
sarl
lret
fldt
mov
cmp
dec
out
cmp
add
pop
dec
fistl
push
dec
pop
mov
mov
jmp
into
adc
and
imul
push
mov
jg
movsb
arpl
jp
jl
mov
dec
insb
lahf
xchg
mov
gs
add
mov
pop
push
inc
dec
mov
pop
dec
mov
cmpsl
xlat
sbb
lahf
jbe
pop
push
xchg
andnps
out
scas
adc
or
outsb
push
lahf
xchg
dec
pop
jmp
imul
cs
lods
xchg
dec
dec
or
jae
mov
repz
imul
bound
mov
pop
andb
orb
arpl
jne
adc
dec
mov
mov
out
daa
insl
or
fsubrp
lret
jecxz
lods
idivb
fstpt
out
xor
mov
add
test
mov
sub
lods
sbb
sbb
add
jo
insl
hlt
add
out
mov
in
xor
ljmp
push
mov
into
outsl
push
add
jmp
mov
sarl
xor
mov
pop
mov
jne
and
scas
loope
inc
push
fistpl
jecxz
add
fs
stos
mov
dec
pop
lods
je
pop
fsts
adc
inc
xchg
push
popf
mov
jg
mov
jecxz
loop
jns
hlt
cmc
mov
insl
mov
adc
pop
sbb
pop
adc
stc
pop
sub
jnp
pop
inc
incl
dec
pop
out
sti
push
dec
sub
add
ds
pop
xor
cmp
jp
leave
rcrb
ja
testl
mov
daa
fbstp
or
rorl
fidivl
dec
and
jp
jbe
mov
and
out
imul
add
mov
imul
adc
jle
mov
lcall
nop
es
jb
cmp
add
cmpsl
icebp
stos
jno
xlat
bound
lcall
rorb
aas
mov
fwait
into
mov
sub
in
fistpl
mov
push
jecxz
and
mov
mov
fimuls
add
negb
mov
subb
add
jns
add
jb
sahf
add
push
mov
sbb
fiadds
rorl
xor
aas
sub
and
pop
xchg
add
jle
scas
jb
lcall
mov
aad
xchg
mov
test
jge
pop
mov
sbb
sub
aad
and
ds
daa
scas
enter
or
in
adc
pop
stos
repnz
inc
jle
jl
push
aad
inc
pop
andb
xchg
cmp
mov
scas
leave
cld
addr16
cli
mov
mov
pop
mov
mov
push
mov
sub
dec
cmp
ljmp
mov
fadds
cmpb
xor
jge
in
icebp
loope
mov
jne
pop
inc
push
add
pop
push
pop
pop
inc
pop
inc
add
pop
pop
dec
inc
inc
inc
dec
and
mov
mov
inc
fstpl
decl
jge
dec
fistpll
xor
mov
in
push
and
std
xchg
sbb
adc
xchg
jmp
mov
xchg
or
xchg
loop
lcall
xchg
int3
cmpsl
and
push
lea
aaa
in
insb
mul
and
sbb
mov
xlat
push
cmp
push
or
fs
mov
pusha
sbb
and
and
cli
and
mov
sbb
xchg
mov
rcll
fnstsw
mov
cltd
ss
xchg
or
negl
nop
imull
or
ret
dec
push
subps
mov
popa
jle
lret
test
mov
int3
cmp
mov
push
sbb
jmp
push
inc
cwtl
std
sbb
hlt
push
pop
add
dec
xchg
xchg
rorb
push
push
mov
or
sub
popa
into
les
mov
cmc
outsb
enter
and
fnstsw
xor
stos
xor
mov
dec
ret
insl
in
ret
lret
mov
stos
imul
lret
push
scas
call
shl
adc
jbe
add
ret
xchg
dec
mov
dec
xchg
insl
xchg
nop
sbb
aad
sub
push
xor
pop
add
div
mov
and
sub
mov
imul
adc
mov
lods
mov
in
push
addl
push
das
xchg
jns
inc
push
jp
jle
aad
shl
notb
xor
mov
push
pop
scas
sbb
xchg
xchg
ret
xchg
cmp
js
test
xor
shlb
leave
icebp
loop
hlt
dec
addb
adc
pop
mov
popf
or
rolb
add
aas
loop
sti
pop
in
sbbl
jg
xor
xor
sahf
pop
pop
jae
xor
ds
cld
cltd
std
dec
sbb
inc
sti
mov
aad
mov
movsb
test
pop
pop
aaa
push
test
out
movsl
mov
sub
sub
vmovmskps
mov
or
jmp
lds
jmp
sarl
sbb
rorb
sbb
jp
lods
jecxz
scas
cmp
mov
imull
dec
aaa
jne
pop
pop
sbb
pop
ffree
shrl
add
ds
out
mov
and
mov
sarl
inc
and
out
stos
loop
push
mov
wbinvd
sbb
fmuls
push
movsb
add
sti
out
je
lret
xor
xchg
cmp
xor
and
cmp
mov
sbb
stc
test
push
add
imul
pop
arpl
fcom
ficoms
push
mov
jge
adc
cmc
inc
mov
leave
sub
mov
rcll
sub
xlat
fldenv
sbb
add
sub
out
mov
jmp
fs
jmp
push
loop
sub
sub
fdivrl
add
int3
jo
adc
dec
xchg
pop
inc
dec
xchg
cmp
mov
and
shrl
dec
hlt
xor
ljmp
dec
pop
movsl
aaa
xchg
mov
mov
inc
idiv
scas
mov
ret
push
iret
lahf
pushf
mov
pop
loope
aad
inc
push
int
out
pop
std
jbe
lea
repnz
xlat
mov
scas
call
stos
jg
les
or
cmp
insl
lcall
sti
sbb
xchg
dec
dec
pop
nop
aad
add
dec
pop
push
dec
jae
mov
js
test
call
das
cltd
out
mov
inc
inc
mov
sub
sub
stos
or
push
scas
inc
les
fsts
pop
stos
out
pop
pop
roll
mov
mov
push
addr16
cmp
in
sub
pop
push
stos
jle
shll
jg
fstl
pop
fstl
sub
test
fisubrs
or
or
pop
and
cmpsb
push
in
mov
into
jmp
lret
cmp
adc
cli
xchg
adc
pop
lock
push
pop
dec
test
push
out
jecxz
sub
mov
xchg
cmc
mov
arpl
xchg
adc
aaa
sub
ljmp
mov
lds
imul
in
jge
mov
in
cld
mov
sarb
push
inc
lcall
aad
pop
mull
jmp
popa
jg
js
in
lahf
sub
cmp
sti
mov
add
aaa
movsb
pop
mov
inc
int
es
inc
mov
fwait
scas
mov
push
or
aaa
ja
mov
lods
fisubl
mov
jno
ficomps
adc
iret
lods
pop
in
test
jp
xchg
fisubl
fisubs
xchg
into
pop
inc
mov
fcom
add
sarl
push
js
movsb
sbb
daa
fdivrl
sbb
std
leave
or
fsubp
sub
into
mov
mov
into
cmp
lret
stos
gs
dec
aam
lods
push
push
mov
leave
push
test
jg
es
push
or
scas
pop
into
xor
mov
ljmp
popf
adc
mov
imull
lcall
jl
loop
jmp
mov
mov
addl
cltd
mov
sti
movsl
dec
mov
mov
fwait
ja
sarb
mov
mov
mov
clc
or
xor
cwtl
add
stos
out
ljmp
sarb
rep
add
pop
gs
popa
test
jne
mov
xor
arpl
cmp
mov
ljmp
outsl
fildll
xchg
pop
fidivl
call
adc
imul
pushf
je
ljmp
mov
pop
pop
pop
fiadds
sub
adc
shrb
bound
pusha
aad
jg
pop
loopne
bound
jbe
fmul
imul
and
outsl
pop
xchg
fsubrl
fists
mov
mov
dec
dec
popf
cmpsb
scas
shrb
inc
repnz
xor
int3
pop
stos
mov
cli
in
push
adcl
push
adc
push
lock
sub
pop
lock
push
movsl
pop
scas
pop
arpl
enter
or
push
mov
mov
xor
imul
test
mov
pop
push
in
outsb
scas
aad
mov
lock
cmp
pop
out
call
xchg
clc
xor
out
loop
mov
pop
testb
xchg
or
sub
pop
das
sbb
jne
xchg
jge
dec
popf
icebp
loop
mov
ss
decl
mov
aaa
lock
pop
in
arpl
jno
sub
fildl
sti
fnstcw
ficompl
mov
cmp
or
pop
pop
daa
fldl
adc
mov
pop
bound
inc
pop
mov
dec
mov
pop
push
or
or
adc
fidivrs
aad
cmp
outsb
ss
outsb
mov
xchg
les
mov
push
jbe
out
rolb
sbb
test
push
insl
push
pop
into
push
jne
push
mov
scas
push
scas
in
cmp
push
arpl
sbb
fnstsw
leave
jg
aaa
pop
subb
jno
jle
fbstp
xchg
fisttpl
pushf
aaa
faddl
pop
pushl
xorps
or
insb
mov
xor
fdivs
cltd
arpl
jns
lcall
inc
xchg
aam
push
std
pop
jnp
aad
imul
cmpsb
sub
mov
xchg
sbb
in
inc
cmp
xor
bound
xchg
inc
xor
xor
loop
daa
push
lds
push
inc
test
xchg
mov
aam
cwtl
mov
jae
aaa
lods
and
andb
cwtl
xchg
xchg
clc
jp
push
test
jecxz
nop
sahf
fistpl
add
mov
stos
cmpsl
stos
xchg
pop
scas
loope
mov
lahf
sti
or
fcompl
loopne
fwait
gs
jg
add
outsb
je
push
idiv
stos
outsb
lret
lds
stos
xchg
scas
sbb
stos
cmc
int3
sti
arpl
or
xchg
test
loopne
xor
xchg
rol
mov
std
scas
mov
jmp
stos
sarl
fldcw
sub
ljmp
shl
xor
loop
cld
addr16
add
add
testl
pusha
adc
fisttpl
adc
adc
and
and
and
mov
add
mov
jp
es
test
addr16
mov
lock
mov
lods
mov
testl
aad
sbb
and
mov
sub
fildl
inc
addl
mov
adc
xor
cmp
daa
jmp
insb
dec
xor
aam
sub
dec
lahf
sub
pop
or
push
inc
sub
xor
int
bound
mov
repnz
std
testl
push
lret
xor
ret
out
iret
mov
outsl
lods
cwtl
xor
mov
mov
imul
lds
ds
mov
dec
or
roll
pop
fs
sbb
fstps
nop
mov
dec
pop
fs
fnstcw
fs
sbb
pop
bound
xor
jp
inc
add
sysret
fs
vpsraw
fs
sbb
lods
fnstenv
pop
outsb
sbb
add
imul
lea
in
stos
movsl
cmpsl
xchg
enter
cmp
inc
xorl
and
push
enter
xchg
in
incl
dec
cmp
jl
and
xor
cmp
mov
jns
jnp
cmp
out
in
xchg
xorl
stos
jl
pop
je
inc
push
sbb
in
jno
pop
pop
fs
sbb
and
in
incl
ja
add
mov
push
enter
insb
mov
loopne
jl
sbb
or
int3
and
push
push
sub
shrl
dec
push
and
mov
mov
sbb
lock
scas
call
jl
call
stos
mov
cld
ljmp
popl
sub
and
mov
mov
lods
adc
jle
jbe
mov
push
dec
dec
adc
icebp
out
add
mov
stos
jb
in
scas
movsb
mov
mov
jge
push
mov
fistl
aad
jecxz
mov
fcomp
fcmovnb
lret
jge
push
stos
xlat
fndisi(8087
cmc
pop
xchg
cmc
pop
jns
scas
mov
gs
jns
add
loop
xchg
ds
pop
jmp
rcr
add
xlat
test
popf
mov
in
sbb
mov
cmp
into
mov
pop
out
dec
scas
push
mov
mov
fwait
push
ljmp
out
cwtl
popf
test
outsb
sub
mov
pop
sub
add
dec
mov
or
push
sub
jmp
mov
xor
and
jne
push
iret
cltd
pop
pop
mov
lods
push
popa
loop
push
pop
xor
jne
dec
dec
add
addr16
or
jecxz
arpl
test
push
shll
mov
call
jp
mov
es
and
cmp
xor
mov
sub
lss
aad
pop
xor
pop
shrl
dec
stos
xchg
push
popa
and
and
cmp
lcall
dec
push
or
add
ljmp
sbb
ret
xchg
sbb
or
xor
rorl
rorl
rcrl
rcl
dec
aam
xor
roll
inc
xlat
fadds
push
dec
jl
xor
ljmp
stos
dec
arpl
call
lock
roll
nop
rcll
pusha
shrl
push
xor
sarl
rcr
dec
aam
xor
sar
dec
int3
shlb
enter
xor
dec
imul
jl
je
push
shll
mulb
sub
xchg
sbb
or
xor
rcrl
dec
adc
xor
shll
shll
js
cmp
repnz
lock
xchg
dec
aam
shl
lcall
push
xchg
xchg
fsubrl
mov
loope
nop
cmp
ret
xchg
mov
xorb
test
mov
shll
cwtl
sti
outsl
cs
cmp
das
rcl
xchg
aad
scas
out
rolb
xlat
jg
loop
cli
movsb
dec
scas
mov
scas
cld
repnz
pcmpeqd
sbb
out
aaa
pop
pop
push
out
pop
rcr
adc
daa
ja
jne
jo
sub
dec
xor
mov
inc
pop
pop
and
sbb
stos
in
ljmp
cmp
lea
fldenv
cld
clc
arpl
pop
and
loop
out
lea
inc
aad
jecxz
jle
push
lock
sti
jecxz
shl
out
stc
mov
sub
repnz
mov
movsl
sbb
sbb
out
pop
cmp
scas
hlt
pop
fbld
xchg
xchg
ss
stos
das
insl
call
sub
xchg
dec
pop
jecxz
fsubrs
iret
mov
jl
push
outsb
jns
hlt
cmp
arpl
cmpsb
in
scas
aam
cltd
mov
pushf
sbb
icebp
pushf
cld
mov
xlat
sub
mov
gs
push
arpl
leave
shrb
fsubrl
ror
std
push
repz
cmp
mov
in
mov
sbbb
jns
push
sbb
ds
enter
mov
out
mov
xchg
gs
ja
hlt
inc
jle
mov
or
bound
jp
cli
std
popa
test
ja
lds
shlb
aam
push
fimuls
in
mov
lods
mov
aaa
jle
cmpsl
inc
cmpsb
pop
stos
pop
andps
loop
in
test
mov
andl
pop
mov
mov
jb
xor
jno
xlat
adc
push
lret
lods
push
xchg
inc
xchg
jp
sbb
mov
jb
push
xor
cmpsb
cli
mov
enter
mov
ficomps
sti
test
mov
cmc
pop
push
ret
pushl
hlt
movsl
mov
iret
mov
mov
mov
mov
cli
xchg
mov
jno
stos
sub
lds
aad
cmp
clc
mov
cs
cwtl
cmp
arpl
push
out
xor
dec
jp
inc
adc
jns
mov
cmp
cmp
mov
movsl
jmp
inc
lods
movsl
out
loope
mov
pop
stos
loop
cmp
jmp
xor
stos
fs
test
stos
mov
ljmp
cmp
mov
stos
out
into
adc
mov
mov
mov
mov
stos
test
pop
aas
xorl
jl
mov
mov
mov
push
cmpsl
test
fisttpl
lcall
mov
test
stos
jmp
aaa
pop
lahf
adc
mov
popf
std
push
pop
popf
fistpll
jg
fistpl
scas
inc
stos
sti
in
mov
mov
out
std
bound
fldt
dec
mov
ss
mov
das
mov
arpl
push
pop
stos
cmp
jne
inc
and
pop
scas
mov
aad
aad
jecxz
sar
sti
clc
xchg
or
or
fisttpl
roll
add
jae
stos
mov
out
push
leave
or
pop
dec
test
stos
leave
xor
mov
gs
pushf
cmp
dec
fistps
shr
scas
test
cli
jl
ljmp
sti
mov
cmp
jp
sub
pop
movzbl
inc
hlt
jns
insb
jge
pop
sub
push
mov
scas
pop
inc
je
in
xchg
fnsave
mov
dec
mov
data16
jecxz
addl
xchg
xchg
hlt
nop
in
dec
mov
cmp
pop
lcall
add
test
out
ret
mov
sub
loopne
movsbl
stos
xchg
xor
lock
mov
scas
scas
jecxz
arpl
pop
mov
push
pusha
in
inc
ficoml
push
int
ljmp
sbb
push
ficomps
add
lahf
jg
and
fisubl
push
and
pop
push
push
rclb
xlat
push
mov
xor
xor
mov
insb
inc
out
xchg
mov
xor
pop
pop
sbb
cmp
inc
aas
or
fidivrs
jecxz
ljmp
dec
push
jecxz
imul
sbb
pushf
jns
fdivrl
mov
lret
cltd
mov
lods
mov
sub
stos
out
push
fsubrl
insb
push
cmp
shrb
sbb
mov
cld
push
mov
ljmp
mov
dec
in
add
aaa
les
sbb
mov
mov
data16
pusha
xor
xor
push
jge
stos
jne
repz
sarb
adcb
mov
xchg
aas
mov
pop
testb
pop
inc
mov
xor
in
fs
out
mov
jg
push
jg
mov
lret
pop
aaa
cmp
mov
fidivrs
jo
jg
jno
cmpsb
stc
int
sbb
fsubrs
dec
cmc
add
rcll
mov
mov
stos
stos
pushf
and
fcmovb
outsb
arpl
mov
mov
jmp
mov
movsb
jg
ss
pusha
pop
popf
xchg
popf
stc
in
mov
dec
jecxz
aas
xor
cmp
loopne
lods
enter
sub
movsl
lret
sti
mov
xor
lea
mov
cltd
filds
lret
sarb
test
xor
pop
push
jno
cltd
aad
pop
push
cmc
push
test
mov
lods
adc
cwtl
fnsave
push
inc
clc
bound
std
loope
jnp
pop
nop
neg
jns
fucomi
sbb
jmp
pop
cli
test
subl
aam
scas
cmp
jecxz
sbb
dec
pushf
jb
out
imul
sub
xor
stos
aaa
cli
loop
imul
pop
add
jp
mov
hlt
bound
cmpsb
lds
xchg
pusha
in
add
lods
insb
xchg
inc
or
out
cmp
sub
ror
shll
lret
hlt
js
pop
jle
push
jbe
out
fwait
push
bound
xor
js
decl
shrb
mov
test
call
mov
mov
xchg
push
insb
fcmovbe
or
mov
stos
loope
ret
push
mov
inc
test
jmp
sti
and
out
xor
mov
ljmp
mov
mov
cmpb
jnp
imul
test
fisubrl
add
enter
es
ret
in
xor
cmp
dec
jl
out
or
out
jl
jmp
out
stos
out
mov
scas
int
mov
sbb
mov
lcall
mov
jmp
out
xchg
into
lret
cmp
shr
adc
aad
scas
out
outsl
mov
std
cmp
in
scas
mov
xchg
lods
xor
jae
cmc
hlt
popa
cmpsl
push
pop
popa
pop
inc
or
addr16
hlt
fdivs
test
es
jge
fs
out
adc
sti
les
ds
cltd
jg
cs
push
push
jns
stc
jbe
rcll
div
out
shl
xlat
jne
jecxz
pop
js
push
lahf
jl
bound
mov
sub
aam
xchg
xor
push
addr16
jge
pop
sub
cmp
jmp
lock
mov
push
inc
mov
sub
das
call
xchg
test
stos
xlat
or
lahf
push
push
rcll
mov
lahf
mov
lock
push
std
bound
xchg
sub
jle
call
ffree
mov
lds
xor
call
dec
stc
popa
push
out
cld
jno
stc
jae
lahf
adc
nop
adcb
std
jno
jb
cmpsl
stos
sti
loope
mov
test
outsb
stos
jecxz
push
jbe
mov
cmpb
pop
add
sub
popa
cltd
mov
jle
jne
pop
ss
aaa
call
jecxz
sbb
mov
sbb
adc
inc
adc
scas
mov
xchg
jne
nop
pop
iret
pop
sti
aas
push
mov
pop
or
cli
fidivrl
mov
out
inc
ljmp
cli
hlt
pop
mov
jno
push
pop
idivl
aam
fists
sahf
lea
arpl
les
xor
mov
icebp
out
sub
test
and
jne
testb
mov
adc
push
push
sbb
hlt
cltd
imul
stos
fistpl
dec
dec
dec
inc
pop
out
lods
xchg
mov
xor
out
jmp
cmp
addr16
out
push
arpl
push
gs
or
mov
adc
jo
lods
inc
mov
pop
bound
and
jno
test
mov
fistps
cmp
cmc
rorb
notb
subl
ret
push
jmp
xchg
dec
or
out
mov
movsb
and
adc
adc
jae
and
add
call
addr16
jle
or
in
xchg
dec
stos
ret
xor
fs
outsl
ljmp
or
lock
mov
popf
xlat
aaa
or
cwtl
lahf
sti
in
cmp
pop
push
std
movsb
adc
sti
adc
jo
les
mov
push
popa
jmp
mov
ljmp
out
jmp
cli
sti
clc
icebp
xor
push
or
mov
xor
outsl
das
cmpb
scas
out
iret
les
pop
inc
push
add
add
pop
dec
loope
hlt
int
jno
jg
clc
cmc
aad
jnp
fimuls
repz
xchg
lea
test
scas
pushl
loope
fdivl
pop
ljmp
aam
lret
repnz
lret
or
sti
mov
enter
cmp
sar
cld
comiss
jmp
bound
jp
ja
scas
nopl
push
jnp
les
cmp
scas
jp
ss
ljmp
stos
mov
cmpsb
fimull
pop
dec
out
pop
dec
cli
stc
xlat
sbb
adc
fucomip
mov
js
fnstenv
push
xchg
insl
dec
sbb
push
das
in
ja
push
push
jb
push
jle
pop
arpl
sbbb
fsubrs
jbe
xlat
jge
cmp
jne
cmc
xlat
fsubrp
aam
fwait
push
in
test
ja
or
and
jne
push
push
pop
out
mov
jl
cmpsb
stc
xchg
pop
xor
jne
push
and
cmp
sbbl
jge
xlat
cld
push
fcmovb
sub
jnp
mov
stos
xchg
mov
mov
pop
mov
jp
cmp
mov
push
xchg
popf
sub
sbb
xchg
cmp
aad
lret
mov
movsl
push
lretw
mov
out
sub
mov
dec
xchg
pop
xlat
sbb
aas
shlb
pop
push
loope
test
ljmp
js
lahf
mov
ljmp
pop
push
scas
das
inc
xor
lds
pop
push
mull
stc
jl
xchg
iret
mov
ds
mov
cld
decb
lret
sub
xchg
jnp
cwtl
repz
das
mov
mov
or
fstp
jge
sub
popf
test
sub
scas
xlat
adc
aas
pop
push
loope
jmp
cmc
push
cld
or
loop
rcr
xor
add
jecxz
stos
xor
inc
sub
fwait
scas
inc
cli
ljmp
dec
mov
cmp
mov
orb
cmc
jge
aas
jecxz
hlt
xorb
cld
mov
hlt
out
lods
cmp
pop
shll
ja
or
push
jnp
test
fbstp
mov
or
cli
in
or
outsb
popa
sub
cld
movsl
push
in
stos
mov
xor
push
mov
push
push
movl
dec
mov
jb
scas
cmpsb
fdivl
jg
lea
jge
gs
pop
fstl
aad
xchg
pop
out
cltd
hlt
mov
in
push
int
aas
fisttpll
mov
ret
stos
test
lods
lods
mov
icebp
pop
pop
jmp
mov
stos
cld
clc
adc
stos
sub
mov
push
adc
xor
js
pop
fstpl
lods
imul
mov
ret
jbe,pn
lcall
jmp
loope
xchg
std
mov
mov
out
pop
outsl
flds
mov
or
mov
rcrl
lcall
jne
popa
xor
in
repz
insl
out
mov
xorl
ss
gs
mov
jnp
out
or
call
sbb
jb
pop
ficomps
popf
rclb
cmp
arpl
jo
fcomip
loope
fsts
jge
sbb
or
incl
fimuls
jae
mov
xor
or
shrl
jmp
pop
idiv
inc
ljmp
ljmp
sub
jle
or
sbbb
push
aas
jbe
xchg
js
imul
xchg
mov
push
arpl
mov
jecxz
icebp
cmpsl
jl
jmp
subl
stos
movsl
inc
mov
jnp
popf
bnd
jp
in
lods
xor
pusha
adc
nopl
mov
or
fwait
stos
add
pusha
stos
or
stos
out
dec
out
push
fimuls
repz
rcr
pop
mov
sub
lds
int
popf
xor
push
mov
jbe
mov
dec
dec
scas
fistpl
sti
mov
jae
or
jge
jbe
push
fdivs
out
out
loop
cmp
fwait
sbb
lea
jno
call
mov
sti
sbb
mov
out
into
pop
repnz
pop
shll
stos
sahf
mov
sub
int3
out
scas
lds
cmc
push
sub
out
ret
sbb
stc
mov
fbstp
sub
push
lock
jge
ret
data16
push
lock
std
enter
push
xor
dec
dec
cli
movsl
mov
pusha
mov
repnz
hlt
sti
ret
adc
sbb
dec
cmp
stos
scas
das
stos
jmp
jmp
sub
lods
lods
shl
ret
lcall
aad
arpl
push
in
push
push
sub
sahf
cmp
or
sbb
cmpsl
add
clc
lods
jg
mov
sub
push
gs
pop
or
rolb
insl
pop
rolb
sub
jmp
sbb
notl
outsl
push
fstl
sub
dec
testl
push
cwtl
lds
pop
cmp
cmp
mov
lea
xchg
fisttpll
adc
test
xchg
cli
movsb
lds
cmp
sti
xchg
sbb
out
out
or
adc
and
sbb
sti
sub
clc
popf
jge
pop
ffree
mov
sub
jnp
stos
out
dec
scas
mov
ja
inc
sbb
fwait
in
dec
mov
dec
mov
imull
nop
stc
xlat
addb
mov
imul
xchg
push
mov
jecxz
cli
cmc
cs
sahf
sub
ret
incb
xchg
pop
jl
fistps
in
add
inc
rcr
jb
imul
ds
jns
xor
cmp
xlat
push
sub
cmc
push
and
out
mov
and
cmp
jl
subb
out
icebp
loop
icebp
jge
test
movsl
lret
sbb
loope
jae
stc
cmp
xorl
in
leave
popf
stc
fwait
xor
cmp
subb
mov
xchg
sbb
inc
push
xlat
in
add
cmp
mov
and
aad
mov
or
push
ja
test
cli
scas
or
sti
out
lds
les
dec
gs
mov
jns
cmpsl
gs
repnz
add
pop
mov
pop
sub
aas
pop
fiadds
push
pop
sbb
ds
popf
sahf
das
sub
sub
mov
icebp
out
lds
fidivl
mov
mov
sbb
xorps
xlat
ljmp
push
clc
ljmp
out
dec
or
in
mov
sub
jae
test
jae
orb
test
pop
mov
mov
lods
cmp
jnp
negl
insl
push
outsl
jecxz
dec
adc
mov
push
inc
push
mov
iret
push
pop
inc
inc
add
enter
and
sarb
movb
sbb
push
in
imul
xor
add
xor
xchg
repnz
xchg
loope
stos
ret
sti
dec
xor
xor
call
cmpsl
lds
pop
push
adc
mov
jmp
add
lret
sahf
cmp
xor
xchg
xchg
mov
jnp
nop
cmc
mov
cmp
mov
sahf
daa
arpl
sbb
inc
pop
add
inc
xchg
addr16
imul
jl
jmp
scas
mov
cmpsb
nop
pusha
les
or
cwtl
outsb
out
roll
andb
insb
out
or
sahf
add
pop
or
mov
scas
faddl
sbb
lds
add
adc
adc
inc
mov
mov
cmc
idiv
push
bound
mov
sub
loop
lret
fsubl
jb
cmp
and
scas
enter
cmpsb
add
mov
or
cmpsl
das
out
in
subb
push
mov
out
ljmp
stos
movsb
nop
pushf
mov
xchg
rorl
testb
popf
cwtl
mov
xchg
xchg
and
xlat
repz
ret
pop
jle
mov
out
pop
xor
aaa
or
out
adc
xchg
js
mov
sbb
pop
js
sbb
fs
push
push
scas
cld
shll
fnstsw
stos
cli
mov
lea
inc
mov
notb
pop
mov
aaa
test
cmp
mov
add
gs
fnstsw
push
mov
lods
pop
mov
cli
imul
call
sarb
and
daa
pop
sbb
cmc
pop
aam
les
xlat
pop
std
loope
xlat
xlat
mov
arpl
cltd
xchg
imul
mov
mov
mov
xchg
cmpsb
data16
sbb
cmp
cmp
ljmp
scas
mov
fistpl
cli
mov
mov
mov
dec
sarl
js
repz
jmp
push
mov
mov
jo
mov
fxam
ret
pop
pop
testl
xlat
xor
fucomi
mov
mov
adc
cld
and
aad
cmp
adc
push
insl
pop
bound
cmc
jnp
cmc
fcompp
xlat
pop
mov
mov
mov
inc
sti
pop
sub
inc
scas
mov
cmc
fstps
cmp
jmp
ja
subb
pop
add
xor
out
pop
subl
mov
aas
mov
sbb
mov
dec
mov
mov
daa
and
pop
jge
es
jo
insb
pusha
das
mov
in
push
insb
sbb
dec
inc
push
mov
xchg
add
or
or
rcll
scas
cltd
mov
stos
sti
push
out
stos
out
and
mov
sub
out
mov
xchg
or
scas
sub
add
add
push
jmp
loopne
roll
mov
sbb
pop
xor
push
inc
fs
mov
mov
jbe
loop
sbb
subb
sub
int3
push
adc
push
pop
push
subb
sub
lea
add
cmc
jle
icebp
inc
inc
inc
inc
dec
sbbb
dec
mov
loop
mov
in
inc
xchg
popf
test
in
push
insl
xchg
test
cmpsb
in
xor
insl
adc
imul
adc
mov
cmp
and
lods
sub
stos
adc
mov
push
add
addb
fs
xor
cwtl
lret
add
fsub
loop
cmpsb
add
in
push
pop
fadd
arpl
mov
pop
fimull
arpl
mov
lcall
lcall
andl
int
mov
mov
pop
pop
xchg
loop
test
dec
popf
lcall
inc
les
nop
daa
gs
and
pop
inc
pop
cmp
shll
inc
pop
xchg
inc
dec
or
aad
push
and
adc
outsl
jle
ja
sub
jno
jne
leave
inc
sahf
and
adc
mov
cmp
loop
jnp
mov
int3
pop
incl
gs
enter
or
cmc
jl
and
mov
or
les
mov
or
daa
pop
dec
adc
pusha
jmp
cwtl
sub
cltd
ja
pop
jmp
mov
shl
pop
pop
xor
test
lcall
cld
dec
xlat
enter
push
lcall
lahf
loope
mov
xor
shl
and
xchg
lcall
pop
mov
jl
sub
popa
pop
pusha
sbb
js
popf
aad
cmpb
clc
jle
scas
out
jg
pop
jmp
lods
jb
pushf
aaa
stos
aam
rcll
fdivrl
scas
andl
mov
int3
and
mov
rclb
and
inc
lea
adc
shr
repz
add
fsub
inc
adc
or
mov
mov
hlt
xor
nop
adc
cmpsb
push
add
push
adc
sub
add
std
mov
adc
mov
or
add
lock
adc
mov
roll
mov
or
mov
inc
jle
lods
add
test
mov
xor
dec
add
add
add
popf
lock
ret
or
daa
insb
add
cmp
sub
mov
movsl
jae
sub
sbb
push
adc
movsl
mov
fisubl
loop
lock
add
lcall
into
sarl
jg
movsl
push
lret
scas
pop
or
shrb
jge
stos
add
sub
jle
or
or
add
xchg
add
mov
and
in
fs
add
cs
adc
xor
test
lcall
push
daa
jns
add
mov
push
cs
in
push
sub
xchg
fists
cld
and
lods
add
popa
mov
test
push
add
test
jo
pop
movsb
add
xchg
std
sub
cs
push
add
fistpl
add
cli
sti
lret
xchg
jbe
int3
push
sbb
shll
xor
popa
adc
sub
std
add
dec
fidivrl
test
add
lcall
add
hlt
adc
push
mov
mov
lods
sahf
xchg
or
mov
xchg
mov
add
push
xchg
xor
lods
dec
repnz
mov
add
or
pop
inc
sbb
fsubp
jo
add
mov
mov
imul
lods
add
mov
imul
scas
lret
add
mov
add
add
lds
inc
movsb
incl
jge,pn
ret
test
insl
push
stos
out
das
sub
add
adc
dec
pop
push
add
jg
push
or
repnz
xchg
pop
xchg
add
iret
ljmp
hlt
push
jecxz
fldl
adc
jb
adc
add
jns
lcall
sub
ror
add
cmp
mov
and
push
pop
add
jmp
fwait
sub
aam
xchg
add
aad
add
movsl
fimull
cmp
add
int3
in
dec
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
xor
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
xor
call
sub
jae
mov
inc
jmp
mov
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
leave
push
add
cld
invd
add
rolb
cmpsb
cmc
add
add
add
mov
add
jo
pop
add
pop
add
add
add
lock
add
pop
add
in
add
xor
add
hlt
or
add
add
rorb
add
mov
or
inc
adc
add
adc
add
adc
add
adc
add
add
add
or
data16
add
or
mov
or
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
inc
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
