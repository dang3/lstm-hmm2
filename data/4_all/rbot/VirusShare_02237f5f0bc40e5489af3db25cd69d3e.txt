pop
dec
in
inc
addb
pop
shl
dec
adc
nop
xor
adc
inc
mov
sub
mov
sub
rcll
push
jns
push
pop
push
test
mov
and
out
leave
jo
stc
lahf
pop
outsl
cmp
iret
repz
ljmp
test
cmpsb
and
pop
pop
jge
std
mov
cs
or
sar
stc
mov
sub
mov
mov
test
in
ret
push
test
incb
push
jb
inc
lcall
cmp
xchg
imul
rcl
ja
jmp
and
iret
push
or
test
les
loop
mov
pop
sti
xchg
lods
xchg
in
cmp
fdivs
lret
lret
xchg
xor
fnsave
es
loope
jle
jnp
or
pop
stc
aaa
xorb
test
icebp
jno
pop
xor
aas
push
cli
pop
stos
mov
dec
nop
mov
dec
adc
mov
sub
je
adc
or
test
cmpsl
movsl
mov
repz
sbb
jmp
mov
pop
adcb
jecxz
dec
mov
xlat
and
pop
mov
push
adc
repz
push
jnp
mov
insl
movsl
ja
xrelease
into
adc
ret
iret
and
test
mov
push
xor
in
xor
in
or
inc
adc
subl
xor
xchg
mov
movsl
inc
push
icebp
jmp
out
bnd
or
cmp
mov
inc
js
outsl
ret
mov
mov
cmp
gs
daa
xor
fdivr
sbb
mov
inc
mov
inc
mov
push
outsl
imul
loopne
cmpsl
pushf
jo
aaa
loope
ffreep
xor
movsb
cld
xchg
inc
lret
in
jg
or
adc
scas
sub
and
jecxz
cwtl
les
sti
leave
lret
loop
aad
in
nop
les
xor
xchg
jl
inc
movsl
fcoms
stc
cmp
aaa
std
push
dec
sbb
cmp
rol
jbe
lea
bound
stos
out
sbb
test
add
mov
lds
xchg
mov
mov
lds
mov
adcl
jg
sarb
push
dec
out
loopne
inc
arpl
lods
push
push
ret
push
inc
mov
add
stos
cmp
rclb
call
ret
pop
enter
icebp
or
cli
jbe
pop
pop
lret
xchg
pusha
cwtl
stos
and
pop
add
pop
lods
xlat
add
jae
jns
cmpsl
mov
mov
or
subl
nop
add
icebp
xor
pusha
push
fdivrl
push
xchg
cmp
push
and
icebp
xchg
sbb
dec
call
jne
jge
pop
cmp
lds
jl
or
adc
mov
xchg
xor
xorb
int3
pop
pop
jmp
fldenv
xchg
insw
adc
incl
mov
cli
jg
sbb
out
mov
insl
insl
cmpb
clc
daa
lcall
fdivs
mov
ja
sub
mov
adc
cld
cs
scas
andl
imul
es
out
push
insl
inc
cmp
lods
out
push
xchg
lock
lea
cmp
cli
cmc
pop
into
pop
loop
bound
sub
stos
pop
sub
iret
loope
jno
daa
mov
cmc
in
cmc
or
ficoml
sub
and
dec
xchg
and
iret
cmp
inc
sbb
pushf
ficoms
mov
dec
sbb
test
mov
int3
jg
lods
cmp
jle
aas
mulb
push
cmpsb
mov
in
fisubs
xchg
push
xchg
jle
mov
es
mov
or
repz
fnstcw
enter
in
or
dec
mov
outsl
sub
mov
sbbb
or
aaa
mov
xchg
push
dec
xchg
mov
aaa
jae
call
adc
push
leave
sbb
lock
add
das
fdivs
jmp
and
pop
aaa
outsb
mov
cmp
mov
xor
data16
js
mov
imul
push
jge
vsubsd
movsl
popa
movsl
sti
std
aaa
lret
js
sbb
mov
push
mov
and
cmp
dec
ljmp
in
or
jmp
mov
negl
push
test
out
int
dec
mov
mov
jge
cltd
mov
push
out
or
mov
mov
jns
scas
push
adc
sub
push
pop
and
pop
push
pop
ficomps
dec
jle
jae
pushl
mov
ret
sahf
jecxz
mov
pmaxub
pop
adc
aam
test
dec
adc
xor
push
push
imull
scas
cld
call
shl
loope
jle
mov
aad
lcall
jmp
xor
stos
xchg
outsb
sbb
sbb
test
sub
adc
xchg
mov
lahf
sarb
loop
outsl
cmp
pushf
movsb
popa
stos
jbe
push
movsl
iret
xchg
out
int3
clc
aas
addr16
cmp
insb
mov
lsl
xlat
xchg
sub
in
sub
dec
sahf
loope
add
mov
dec
cmp
pop
jne
push
bound
adc
sbb
test
jno
fimuls
xor
cs
cs
or
cli
jmp
jnp
add
scas
inc
cwtl
cmpsb
int3
xor
iret
outsb
aas
adc
add
ret
inc
lods
sub
adcl
or
push
cmpsb
repnz
mov
xchg
mov
lea
lods
jg
popa
sbb
cs
jo
xchg
xor
ds
ret
outsl
mov
mov
iret
lock
adc
push
jbe
xchg
push
push
and
out
xchg
aad
sub
cmp
mov
lods
xor
aam
call
mov
and
xchg
mov
push
inc
cmp
inc
stos
sub
shll
or
popf
cmpsb
std
or
pop
ja
mov
xchg
imul
sub
shll
ds
xchg
sbb
cmp
shr
rolb
jmp
mov
jmp
jbe
adc
mov
les
or
jle
ds
aam
jne
icebp
pushf
dec
js
adc
xor
xor
lea
push
sub
rol
repnz
push
aam
pop
cmpsl
fldenv
adc
dec
push
jl
test
inc
add
nop
sbb
adc
outsb
sar
dec
nop
clc
xchg
in
mov
cmp
std
push
dec
sub
pop
jge
dec
mov
jg
inc
jle
push
and
andl
inc
lods
icebp
sub
mov
les
xchg
xor
pop
mov
jp
mov
ljmp
jo
mov
mov
mov
add
sub
inc
sarb
int3
lret
and
sbb
jmp
inc
dec
and
and
push
inc
fisubl
mov
mov
and
xchg
fs
int
push
gs
in
pop
fistl
push
lcall
lods
fnsave
out
pop
ficomps
jo
loopne
sub
mov
sub
xlat
test
ret
and
sbb
mov
scas
in
sti
jb
arpl
jmp
push
push
pop
jnp
pop
jno
frstor
xor
jle
dec
xchg
fidivl
call
push
pop
push
sub
rcl
sbb
cmp
test
stc
js
aad
add
aas
adc
adc
lock
test
jae
inc
jae
push
xorb
sbbb
push
in
mov
arpl
imul
cmp
and
push
test
pop
jo
into
imul
js
jge
adc
cmp
add
sbb
mov
bound
arpl
cld
dec
dec
xor
lods
push
stos
into
stos
mov
dec
jl
sbbb
iret
inc
out
xchg
js
inc
cmpsl
sbb
jg
cmp
popa
fildl
xchg
insb
push
jmp
xchg
inc
xchg
sub
xchg
imul
mov
enter
mov
cmpsl
popf
pop
gs
or
jo
ret
lock
mov
sub
jl
inc
int3
and
dec
add
jmp
bound
jno
sub
push
mov
insb
flds
push
xor
popf
pop
mov
das
aas
and
xchg
and
stc
or
outsb
dec
inc
in
mov
mov
xor
xor
xchg
jne
xchg
push
pop
notb
jg
fs
ret
imul
call
add
fs
jp
sub
mov
push
insl
pusha
loop
rol
jae
jo
sbb
inc
cwtl
jbe
fidivl
mov
pushf
ljmp
add
ss
mov
adc
loope
inc
add
cmp
add
lock
ljmp
mov
inc
push
xchg
mov
xor
jp
in
sti
pop
mov
fsubl
fs
in
sbb
add
or
sub
push
sti
bound
sbb
adc
adc
mov
les
xchg
loopne
insb
fisubrs
sbb
push
pop
add
into
sbb
insb
jne
xlat
pushf
adc
lret
mov
icebp
add
or
test
dec
sbbb
add
enter
jb
sbb
dec
cmp
cmp
cli
repnz
xor
mov
jle
pop
enter
test
mov
sbb
push
xchg
push
cmpsl
idivb
mov
cld
sub
push
fisubs
loopne
and
addr16
cmpsl
iret
or
aas
push
test
mov
out
jmp
adc
mull
clc
xchg
pop
xorl
lods
jno
inc
xchg
lret
mov
and
popf
inc
cli
pop
mov
pop
adc
roll
mov
inc
leave
mov
xchg
aas
xchg
sub
daa
jb
aad
add
adc
lds
add
ljmp
adc
daa
xchg
negb
movb
aad
nop
jecxz
pop
jge
out
xor
sub
hlt
push
cmp
or
pushf
aaa
lcall
add
inc
jnp
push
and
cmp
lret
push
hlt
lret
fdivs
cmpl
mov
lahf
cmp
jno
cwtl
sbb
cmpb
iret
loopne
add
sbb
dec
or
mov
jns
pop
sbb
mov
sahf
xor
out
sti
jge
push
mov
iret
andb
add
xchg
out
out
pop
das
fiaddl
push
sarl
inc
jae
inc
test
stos
les
sub
push
mov
ja
inc
sahf
inc
das
ficompl
sbb
xchg
sarl
xchg
scas
pop
scas
dec
sbb
pop
lcall
fucomip
scas
xor
inc
sub
pop
add
ss
mov
jp
fs
lock
shrb
jle
fld
mov
std
inc
dec
cmp
adc
ret
sub
cs
xor
and
cli
popf
arpl
lods
test
mov
cld
ljmp
xchg
adc
cltd
xchg
sub
sti
dec
divb
lds
cmp
pop
lret
push
dec
ret
out
add
lahf
xchg
sub
add
adc
sbb
pop
sub
or
addl
dec
and
cmp
out
jle
push
sbb
jg
sti
lea
test
in
inc
and
stos
push
jae
insl
fwait
sub
jae
test
mov
loope
cmp
popa
jge
jno
dec
mov
adc
int3
mov
xchg
call
mov
mov
fldl
fldt
mov
inc
leave
add
cltd
cmp
ret
mov
repnz
or
mov
cmp
shlb
lret
mov
lcall
arpl
add
inc
cwtl
cmp
daa
daa
mov
test
sbbl
movsl
jbe
pop
divb
dec
xchg
lods
jno
xsave
cmp
andb
movsl
jne
xor
xchg
in
sbb
mov
pushf
dec
pusha
shlb
mov
mov
insl
xchg
les
sbb
daa
pop
scas
xchg
adc
mov
push
test
xor
add
fimuls
pushf
lcall
je
js
jnp
jle
mov
inc
sti
xchg
xchg
aaa
xor
fdivrl
inc
pushf
pop
scas
ja
daa
push
cmpsb
out
sar
pop
pop
sbb
mov
mov
pop
pop
test
jle
cmc
mov
xchg
push
push
inc
cmp
pusha
jl
jmp
inc
push
xor
rol
dec
cmp
push
adc
inc
sub
cmp
cmp
mov
insw
sahf
fiadds
repnz
push
cmpsb
and
mov
dec
cmp
pop
enter
fucomp
push
and
fistps
mov
push
ret
out
fistl
pusha
pop
stc
dec
out
lcall
mov
imul
dec
push
fnstenv
int
jnp
loope
in
mov
jnp
sub
mov
jmp
fucomp
jae
lock
aas
nop
or
ja
pop
push
sbb
test
scas
lcall
mov
bound
sbb
cmp
jle
in
add
adc
mov
es
repnz
fidivrl
mov
fsubs
pop
add
xlat
sahf
mov
sbb
xchg
dec
push
shrb
xchg
pop
sub
adc
xlat
bound
rcr
pop
aam
push
add
cmp
mov
sbb
or
push
in
inc
cmpsl
and
xchg
lea
push
aam
adc
xchg
xchg
jo
ret
cmpsl
loop
mov
test
rcrb
mov
jae
xchg
dec
add
stos
mov
fmulp
push
enter
es
mov
push
stos
mov
loop
shll
push
sbb
sahf
sub
ss
jb
or
je
or
and
aas
mov
rorl
aad
out
mov
rolb
pop
mov
mov
mov
push
rorb
addr16
test
or
sub
mov
ret
andl
xor
lret
adc
and
sub
sub
sbb
jecxz
mov
pop
rorl
cli
ret
fcompl
fldenv
fs
sub
fimuls
dec
out
out
lret
jne
loop
and
fnstsw
mov
mov
jns
aaa
test
mov
clc
sbb
jl
popa
xadd
mov
aas
movsb
dec
jmp
adc
bound
mov
roll
add
gs
push
add
inc
sub
pop
pop
mov
lock
pusha
sub
adc
jg
mov
xor
pop
sub
das
loopne
and
cmc
movsb
cwtl
adc
push
pop
mov
mull
adc
es
dec
cmp
push
inc
aaa
xor
out
loop
inc
fisttpll
lods
pop
pop
push
andb
sti
mov
dec
push
add
jns
adc
or
cmc
lahf
cmp
pushf
fidivs
xchg
xchg
pushf
xchg
sbb
ficomps
jle
stc
xorl
jb
adc
jg
mov
sbb
and
test
inc
mov
jne
in
adc
mov
loop
jecxz
adc
and
sahf
loopne
xor
sub
mov
imul
cli
inc
dec
add
cmp
repz
cs
lahf
mov
xchg
idivb
dec
inc
sbb
cmpsl
aad
dec
lods
fstl
xchg
jns
add
sub
js
mov
int3
out
je
pop
mov
add
movsl
push
adcl
flds
jbe
adc
std
daa
pop
sbb
outsb
test
inc
stos
mov
stc
xchg
cmp
pop
or
xor
xchg
iret
cmp
fistpll
xchg
scas
sbb
lods
ret
add
xor
dec
add
mov
mov
fbld
jns
sbb
ds
xor
in
push
les
mov
fwait
xorb
mov
aaa
pushf
sbbb
dec
les
roll
cmc
push
mov
xchg
fwait
test
mov
out
insb
insb
cmc
mov
shrb
cmp
sub
jecxz
dec
pop
jp
xor
testl
fs
clc
cmpsl
sub
dec
fsubs
and
popa
xor
rcrl
cmp
inc
js
pop
out
xchg
push
insl
imul
loope
mov
idivb
xchg
cs
pop
or
jnp
pop
push
push
push
jbe
into
cwtl
mov
cmp
pop
cltd
movsl
inc
daa
adc
inc
or
mov
push
mov
cmc
mov
in
xchg
jbe
cltd
pop
adc
pop
dec
test
cltd
pop
xchg
dec
jae
sbb
pop
popa
shlb
fldt
mov
inc
mov
xchg
mov
sbb
jl
ja
movsb
scas
leave
or
adc
sarl
fcmovbe
inc
jae
or
mov
adc
jb
repz
sbbb
push
add
aas
push
adc
lahf
ja
outsb
adc
lret
pop
push
add
pop
push
jae
test
sbb
inc
lret
pop
pop
dec
mov
mov
in
out
les
out
out
addl
iret
mov
rclb
xchg
jo
jmp
dec
sbb
xchg
adc
jo
inc
insl
mov
jecxz
jbe
loope
andb
rorb
mov
xchg
nop
and
jo
hlt
mov
mov
jbe
leave
sub
add
mov
lods
ret
enter
adc
pushf
stos
jecxz
or
cld
mov
repnz
cmp
inc
xor
adc
xor
outsb
rolb
aad
pop
sub
ljmp
movb
loope
in
ret
fbstp
inc
mov
sar
in
js
push
pop
imulb
test
push
or
mov
jno
les
movsb
subl
loope
cmpsb
addr16
sbb
out
cltd
pop
test
xchg
xor
xchg
subl
loop
rorl
cmp
add
aas
int
lods
dec
dec
mov
int3
or
dec
add
hlt
in
in
outsl
sub
std
add
dec
or
sbb
loop
sarl
mov
fcomps
cmp
or
or
mov
adc
repz
lret
sti
mov
mov
xchg
repz
rorl
mov
outsl
and
add
cmpsl
mov
inc
jecxz
sbb
test
pushl
nop
stc
jecxz
clc
sbbb
xor
sbb
xor
mov
jl
or
pop
mov
dec
mov
inc
daa
repnz
mov
cwtl
cmp
pop
scas
or
mov
loopne
fstpl
mov
xor
cmpsb
cli
or
ljmp
sbb
fsubs
sahf
outsl
xchg
pop
add
pop
loope
cs
iret
dec
stc
xchg
out
add
aam
sbb
js
mov
jns
fistl
lds
pop
push
mov
push
pop
and
lods
ret
mov
mov
out
test
mov
lcall
lds
push
fwait
rcrb
negb
sbb
jle
lds
jl
gs
ficomps
sbb
mov
push
enter
out
push
sar
sbb
xchg
int
or
add
das
jns
pop
std
aas
sbb
dec
stos
mov
je
push
adc
ret
pusha
push
sbb
in
in
arpl
outsl
xor
pop
stos
xchg
add
xchg
xchg
sub
jg
popl
ror
push
sbbl
xor
das
aaa
in
testb
cwtl
outsl
xchg
sbb
fcmovu
fwait
popf
jbe
popa
popa
inc
pop
mov
ja
mov
insb
push
aas
jne
xchg
popa
lret
mov
xor
cmp
inc
xor
imul
or
in
frstor
movsb
js
push
es
dec
sub
cmpsl
and
jle
or
leave
dec
sub
call
test
inc
push
ret
repnz
enter
mov
call
push
or
into
stos
push
add
xchg
pop
sbb
or
pushf
pusha
sbb
xchg
sub
xor
cmpsl
movsb
inc
rcl
jl
out
inc
gs
andb
jl
cmp
pop
sbbl
xchg
shlb
mov
daa
jmp
arpl
pusha
sbb
icebp
adc
and
mov
ret
sub
loop
cmp
ss
cwtl
xor
lods
push
int
aad
daa
in
inc
addl
and
andb
rorb
int3
add
lcall
mov
movsl
cmp
xor
pop
mov
sub
push
out
cli
cld
test
shrl
cmp
insb
cmp
int
out
scas
pop
subb
sbb
fisubrl
push
mulb
andl
insb
imul
lea
scas
addr16
push
dec
pop
sub
push
in
jl
adc
enter
xor
or
pusha
cwtl
es
test
cld
mov
xor
lcall
aam
fstpl
imul
push
fwait
into
adc
sub
stos
sbb
fbstp
or
lret
and
and
fisubrl
ja
rep
add
cs
das
rol
xchg
xorl
fmuls
dec
aaa
add
imul
imul
int
ret
xor
cwtl
lcall
shll
push
es
imul
stos
dec
stos
lods
inc
std
cmp
xchg
in
push
and
fisubrl
leave
cmp
stos
xor
push
mov
mov
test
aam
ret
lods
icebp
cltd
pop
and
jbe
ret
jecxz
sub
sarb
jae
sbb
jmp
jbe
fdivr
gs
lret
jns
jecxz
repnz
imul
mov
sti
into
cmc
mov
xchg
mov
and
cmp
clc
rorl
in
push
dec
xor
mov
lock
xor
aas
sbb
inc
sub
addb
push
xor
aas
cs
push
es
push
xor
jecxz
ss
test
and
sbb
cmpsl
sbb
in
push
outsb
shlb
mov
mov
cmpl
fsubrl
mov
adc
add
cmp
add
push
insb
int
mov
mov
leave
jecxz
aad
push
loope
int3
fbld
into
ljmp
sbb
jmp
aam
loop
jecxz
mov
add
je
sbb
xchg
inc
mov
dec
ja
mov
mov
stos
enter
jecxz
add
aas
cld
popa
mov
stc
mov
sbb
int
adc
test
jp
push
dec
pop
dec
stos
mov
fdivs
lods
sti
insb
xchg
xchg
or
mov
shl
aaa
add
imul
sti
pusha
pop
loop
je
mov
xor
and
lods
popl
sbb
push
jmp
les
mov
pushf
xchg
push
xchg
daa
mov
insb
loopne
xor
and
test
out
or
push
out
fadds
in
and
pop
push
leave
stos
or
ret
mov
xchg
inc
fildl
inc
movsl
or
inc
inc
mov
movsb
ror
inc
adc
insb
mov
xor
sbb
test
sbb
dec
frstor
loope
mov
mov
lock
ret
or
mov
pushf
orl
loopne
mov
sbb
xor
cmp
or
test
insb
scas
cmovle
jnp
and
loop
mov
shl
pop
xchg
cmp
shl
xorl
jne
inc
ret
inc
pushf
push
xchg
inc
movsb
jns
or
lret
cmpsb
cld
add
add
mov
arpl
lret
mov
cmpb
cwtl
enter
rcr
lods
int3
lahf
mov
je
mov
mov
inc
test
jno,pn
data16
mov
jg
sub
fisubs
cmp
andb
push
mov
ss
hlt
inc
cs
sub
pop
cmp
mov
nop
jmp
sub
dec
fisttpl
mov
mov
arpl
cmp
xchg
mov
fwait
sbb
cmp
jnp
xor
cwtl
rcr
fwait
jle
enter
adc
mov
out
out
and
push
sub
push
and
cld
xor
jne
dec
outsb
in
fdivp
ret
das
ljmp
jb
pop
xchg
js
inc
decl
cwtl
gs
inc
pop
pop
mov
push
push
xchg
dec
popf
cwtl
push
jl
mov
xchg
mov
out
mov
jns
adc
adcb
ja
std
or
mov
js
cli
mov
test
dec
imul
jl
shll
sub
test
fldcw
xchg
xor
test
repnz
shll
or
dec
test
addr16
into
mov
cmp
inc
in
xchg
jge
add
xor
adc
mov
xor
mov
push
push
std
xor
inc
aas
cmp
cwtl
inc
or
stc
jle
out
iret
and
add
jp
push
xor
push
ljmp
sti
push
mov
pop
ret
sub
and
or
jmp
call
pop
dec
fsubr
xchg
mov
bnd
xor
cmp
mov
jmp
xor
push
and
ret
pusha
dec
test
xchg
mov
pushf
iret
jmp
js
sbb
xor
test
adc
jg
addr16
pop
stos
sub
adc
and
jl
fadd
xchg
les
adc
mov
gs
or
les
out
inc
pop
fsubrp
push
jge
xor
sahf
scas
insl
outsl
jbe
and
das
jo
lahf
aad
mov
xor
mov
cmc
dec
test
call
out
inc
adc
call
fucomp
xchg
adc
mov
movsb
push
jb
or
sub
adc
push
int3
push
mov
adc
cmp
jmp
dec
pop
movsb
rcrl
mov
lea
push
mov
int3
mov
sub
pop
mov
incl
sbb
arpl
mov
mov
mov
dec
mov
adc
divl
or
mov
add
jle
addr16
or
or
lds
mov
std
fdivl
daa
stos
call
pop
arpl
jno
pop
mov
icebp
pause
pushf
mov
loop
xor
sub
sbb
test
adc
in
push
fdiv
cmp
je
fsubl
xor
and
cmp
in
shl
mov
lods
roll
test
cltd
or
lds
cmp
outsb
jbe
icebp
lods
jp
mov
insb
dec
loope
push
cmp
mov
or
xchg
cmp
icebp
mov
cmp
xor
sub
xchg
mov
xchg
mov
testl
mov
sub
iret
cwtl
fwait
out
xor
push
jb
jno
divl
iret
jae
divl
ljmp
cltd
insb
xor
aam
jne
bound
int3
sbb
fidivrs
movsl
cmp
xor
mov
popa
mov
push
xlat
pop
jecxz
lock
xorb
cmp
add
flds
lret
add
nop
sub
stos
push
and
push
es
cltd
sbb
sarl
xlat
dec
das
sub
addb
lds
ds
ja
inc
test
or
out
loopne
pop
in
sbb
rorb
dec
jns,pt
pop
das
cmp
sub
xor
sbbb
push
ljmp
leave
fucompp
jae
cmp
inc
movsl
testb
xchg
xor
shr
jnp
dec
push
iret
fiadds
pop
addr16
adcl
call
sbb
mov
addr16
cmc
inc
cbtw
jle
xor
jecxz
push
mov
jae
call
mov
push
mov
mov
xchg
pop
and
inc
mov
aas
xchg
loop
pop
pop
jns
insb
lret
push
adc
or
add
push
add
jns
int3
pop
lods
sub
cmpl
aaa
cmp
cld
lahf
push
or
stos
pop
and
jge
out
pop
lods
cs
scas
xchg
outsl
imul
push
dec
push
jo
data16
sahf
cmpsb
rcrb
cmpb
mov
lret
scas
push
mov
sub
jecxz
xchg
sub
movb
stos
loopne
les
mov
stos
jge
and
inc
adc
cmp
add
mov
mov
jp
or
and
fimuls
scas
cwtl
jbe
xor
jge
dec
loopne
cmp
cmp
inc
popa
jle
fwait
adc
stos
scas
sub
outsl
out
aaa
call
mov
xor
clc
cwtl
fs
test
inc
popf
das
movsb
push
mov
xchg
push
jl
lret
cmp
sbb
cmp
xchg
hlt
jle
mov
cmp
push
bound
out
push
mov
sub
out
and
repz
pop
addr16
pop
adc
dec
into
cmp
popa
mov
pop
pop
filds
nop
fxch
fimuls
mov
add
push
fcompl
lods
mov
jb
or
loop
repnz
jecxz
jno
xor
mov
jb
jg
scas
rcrl
or
les
cwtl
das
cmp
jecxz,pt
pop
or
mov
cmp
clc
insb
rcrl
lods
aaa
sbb
mov
inc
mov
and
inc
test
adc
lea
mov
test
mov
adc
daa
pop
mov
aaa
je
xorb
mov
pop
dec
loop
inc
in
es
mov
arpl
fnstenv
inc
shl
cltd
and
daa
aad
cs
ds
out
pop
shll
xor
dec
cmpsl
ss
pop
and
pushf
lret
outsb
idiv
mov
or
dec
xchg
cmp
imul
mov
adc
das
hlt
outsb
popa
cmpsb
or
and
mov
add
mov
dec
scas
sub
lret
nop
mov
sbb
and
mov
out
add
cltd
mov
cmp
mov
jge
mov
dec
mov
add
popf
jl
sub
add
mov
xchg
adc
or
cmpsb
adc
fistps
imul
imul
ss
push
push
push
in
sbbl
sbb
outsl
pop
add
es
or
sbb
push
dec
pop
xchg
shl
sahf
clc
adc
sti
pop
mov
stos
aam
repz
roll
pop
nop
cmpsb
adc
aas
aad
data16
push
stc
pop
mov
jns
adc
xor
out
sar
mov
add
fwait
cmp
xchg
arpl
movsl
test
les
call
repz
sbb
push
add
pop
cmpsl
fimull
push
dec
pop
sub
rol
sbb
filds
pop
in
in
out
xor
ret
addr16
je
mov
sbb
jbe
add
addl
add
subl
mov
jo
mov
call
cmp
mov
xchg
aas
and
pop
pusha
fs
lahf
aam
add
addl
bound
outsb
pop
mov
les
rcrb
xchg
outsl
fnstcw
out
pushf
mov
fwait
daa
mov
push
cli
inc
add
iret
sbb
test
xchg
mov
insb
push
loope
outsl
ret
insb
pop
pop
mov
jns
push
mov
inc
fwait
mov
jno
sbb
jno
shlb
std
add
mov
jecxz
daa
bound
add
sbb
insl
xor
ret
stc
jb
inc
or
inc
jb
sub
pop
push
das
bound
inc
rcll
pop
jg
sub
sbb
or
lds
push
jno
divb
push
xchg
imul
push
mov
fadds
in
nop
sbb
rorl
xchg
cmp
and
leave
scas
mov
mov
sub
sub
int
pop
push
jo
int3
pop
in
mov
in
loop
xchg
scas
push
jb
repnz
adc
jle
addr16
sbb
pop
inc
cmp
cmp
mov
das
fs
std
aam
dec
mov
mov
cmp
lods
xchg
pop
repz
lods
scas
sbb
jge
mov
outsl
pop
dec
pop
daa
mov
inc
adc
push
cwtl
call
mov
sbb
pop
add
push
adc
inc
lea
lods
sbb
cli
or
cmp
adc
xchg
mov
mov
adc
add
leave
hlt
out
test
loope
fs
setae
push
and
push
sub
lods
mov
mov
sub
jo
dec
xchg
xchg
fwait
cmp
fsts
fs
mov
mov
xchg
push
mov
or
add
add
pop
and
into
lds
enter
mov
mov
cmpsl
cltd
inc
cmp
sbb
scas
or
xchg
incb
push
movsl
dec
cltd
and
xlat
adc
stc
in
xchg
sub
jle
rol
leave
sbb
cltd
xchg
rolb
fxch
sarl
dec
cli
add
push
cmp
push
sub
scas
adc
mov
xor
cmp
mov
push
push
ja
sub
scas
or
das
xlat
cmp
or
ja
mov
lcall
push
push
mov
push
push
fisttpll
stos
xchg
int
aas
push
test
jl
mov
ljmp
jnp
incl
and
xchg
int
dec
rolb
cld
negl
jae
pop
sub
mov
test
mov
negl
push
jmp
mov
repz
add
call
into
mov
rorb
cmp
jno
lahf
dec
and
ja
aam
aas
push
push
push
cmp
fldcw
popa
lret
dec
mov
ret
xchg
popf
inc
repnz
ja
sti
push
cs
fcoms
pop
sub
xchg
mov
lods
gs
xchg
stos
mov
jne
mov
jmp
jo
call
adc
outsb
adc
fsubl
mov
xor
or
jno
jno
out
mov
scas
fidivs
or
xchg
pop
sub
lds
les
lret
push
xchg
fs
into
sub
adc
cmp
scas
jl
fwait
repz
push
sbb
jmp
out
add
mull
notl
cmpsb
and
icebp
repz
dec
xchg
pusha
dec
es
test
jle
cmp
add
mov
xchg
xchg
call
xlat
pop
jecxz
pop
jbe
aad
adc
or
out
sti
pushl
jae
inc
pop
mov
jne
jae
mov
popa
dec
in
mov
ljmp
out
sub
sbb
mov
into
pop
jno
loopne
sbb
jl
sbb
stc
jl
sbb
add
into
testb
sbb
push
cmc
popf
mov
adc
lds
daa
scas
push
in
data16
test
jne
lods
jle
add
test
and
sub
pop
mov
mov
jmp
lds
pop
mov
xchg
mov
fisttps
mov
dec
hlt
imul
and
rcrl
addr16
push
jmp
stos
dec
ret
lahf
lds
jge
insl
iret
clc
test
dec
and
into
test
test
adc
jle
and
cli
mov
jae
fistps
popa
mov
popa
cmpl
rcll
xchg
dec
fidivrs
sbb
sub
pop
pop
xchg
movsb
cmp
adc
sbb
push
lock
push
xchg
fwait
in
pop
cmp
ret
enter
jl
test
imul
into
xlat
icebp
push
push
jnp
ja
lods
arpl
sbb
jge
aas
in
push
icebp
cwtl
inc
rcll
shll
and
aad
inc
dec
jne
aas
out
cmp
mov
sbb
ret
popa
push
adc
and
add
repz
testl
daa
jo
jbe
cld
cmp
jnp
and
idivl
mov
lods
xchg
insb
mov
and
add
fmuls
test
xchg
movsb
cwtl
bswap
cmpb
sub
xchg
scas
lods
lds
jmp
je
daa
pusha
sub
enter
fcomip
icebp
lret
cmp
cmc
aas
aas
push
jmp
pop
rorb
psllq
mov
xchg
or
inc
mov
jbe
xor
loop
pop
lock
sub
lret
test
jg
clc
mov
inc
js
push
icebp
or
add
fistpl
pop
outsl
mov
mov
jge
in
inc
xchg
mov
popf
js
mov
add
cmp
cmpsb
mov
enter
inc
jle
pushf
cld
aad
js
and
lret
sbb
and
dec
dec
mov
jno
movsl
test
lock
fstpl
pushf
stc
jo
dec
mov
lds
mov
or
jnp
loop
or
cmpb
bound
add
push
icebp
jns
lahf
dec
xor
pop
fcompl
inc
mov
adc
push
stos
jge
aam
jne
xorb
mov
mov
pop
fdivrs
aaa
xchg
inc
stos
push
fsubp
popa
gs
fisubs
loopne
inc
and
mov
sub
loope
mov
es
sbb
xchg
jns
xor
pop
add
cli
push
adc
xlat
adc
shrb
loope
dec
mov
sbb
xor
cwtl
ss
mov
out
popf
jb
mov
or
mov
arpl
add
cmpsb
inc
adc
or
mov
xor
jnp
jp
out
test
iret
sahf
pop
enter
xor
lret
adc
add
and
mov
sbb
js
push
ds
dec
rclb
pop
mov
iret
inc
int3
loop
push
dec
jo
gs
inc
adc
sub
ss
and
add
inc
mov
mov
insb
test
inc
jns
cmp
inc
add
mov
int3
scas
fst
fsubl
push
rcrb
jl
loope
gs
out
adc
sub
push
mul
sub
push
out
shl
mov
sbb
mov
lret
popa
dec
mov
cmp
mov
inc
lds
dec
imul
aaa
lds
dec
data16
push
fisubs
divl
mov
adc
mov
lret
inc
lods
movsl
rcll
addr16
mov
test
xchg
aas
xchg
adc
adc
rorb
fcoms
xor
pushf
mov
pop
or
js
movsl
das
pop
and
adc
cltd
mov
adc
addb
fimuls
cs
ucomiss
in
sub
jl
cli
xchg
leave
adc
mov
daa
ja
rclb
dec
mov
push
jo
cmp
push
mov
mov
mov
or
repz
insl
xchg
imul
mov
dec
jmp
inc
inc
outsb
jp
mov
mov
mov
jp
outsl
xor
dec
scas
aam
enter
cmp
cli
xlat
test
aas
ljmp
ljmp
adcl
add
inc
add
xor
sub
mov
sub
and
sbb
xchg
hlt
and
insl
pop
imul
xchg
and
loop
cld
xor
leave
test
mov
sub
pop
adc
add
sbb
pop
add
mov
sahf
dec
inc
out
repz
rcl
iret
enter
dec
sbb
js
xchg
mov
rdpmc
pop
mov
into
xchg
fnstenv
lods
je
test
popf
int
pop
les
imulb
jmp
push
adcb
add
stc
xor
and
mov
mov
fwait
sbb
aad
test
loopne
jb
repnz
mov
enter
and
push
call
shlb
std
and
in
lock
pop
movsl
push
pusha
fistpll
pop
cmp
dec
push
mov
test
arpl
loop
mov
or
orb
sar
icebp
out
mov
push
pop
xchg
xor
cmpl
es
and
shr
xchg
mov
sbb
xor
shlb
jne
ffree
sarb
stos
loop
push
lahf
xor
rorb
repz
std
mov
shlb
cmpsb
popa
mov
xchg
test
lock
jmp
sub
xlat
xor
mov
pop
lods
pushf
and
push
daa
outsb
add
jmp
pop
cltd
inc
mov
and
jl
jnp
dec
notb
shll
push
or
lods
and
loope
jge
pop
pop
repz
iret
inc
fdivs
loop
dec
jge
and
add
xchg
pop
push
jmp
fisttpl
xchg
jmp
and
scas
cli
pushf
fcompl
pop
out
or
jp
dec
stc
pop
xchg
std
push
pop
add
stos
ds
filds
popa
das
outsl
inc
sbbb
and
sbb
jmp
pop
mov
mov
sub
jle
mov
jge
mov
or
in
push
dec
js
lods
adc
fwait
mov
jecxz
popf
ss
xchg
mov
dec
pop
cs
push
sub
sub
push
jl
aas
mov
bnd
ja
fidivrl
test
inc
in
in
jle
mov
lds
addb
repnz
jmp
push
mov
or
lcall
xchg
mov
and
cmpsl
cmpsl
inc
sub
popf
sub
sarl
mov
add
mulb
adc
push
outsb
inc
xor
ret
pop
push
adc
imul
mov
call
xchg
and
pop
mov
cmp
pop
cld
mov
jno
out
bound
push
sbb
rclb
pop
loop
or
jno
mov
and
in
jmp
callw
or
jne
imul
sbb
dec
iret
shrl
or
adc
adc
insb
das
or
cmpl
dec
mov
adc
cmp
in
out
sub
shrl
hlt
cmp
inc
or
xor
insl
scas
xor
cmp
repnz
pop
pop
faddp
inc
inc
jae
cmpsb
sahf
jne
test
xor
xchg
sbb
aaa
outsl
xchg
jmp
mov
cmp
or
ret
mov
lock
in
xchg
outsb
loope
xchg
pop
dec
push
xor
andl
icebp
and
cmp
test
mov
cli
test
clc
ds
arpl
lret
lcall
shrl
pop
sub
inc
push
aas
aad
jl
rcrb
negl
or
mov
stos
push
sti
andl
lock
jns
pop
sbb
aad
shlb
lret
sub
dec
xor
adc
xchg
fistpl
mov
ja
out
add
xchg
adc
in
jl
jbe
jnp
cmp
adc
jp
pop
jne
add
xorb
add
adc
or
testl
xor
xchg
cli
jecxz
pop
cmp
loopne
adc
enterw
ret
pop
xchg
rorb
jle
dec
sbb
ficoms
repnz
inc
stc
sbb
pop
cmp
adc
lret
test
mov
mov
lods
out
mov
sub
and
adc
les
mov
mov
push
mov
aam
jo
inc
xchg
sbb
ds
pop
in
faddp
cld
mov
daa
cmp
lds
enterw
lods
lea
and
stos
das
push
sbb
ret
or
dec
movsb
mov
ljmp
jno
adc
or
sbb
mov
lret
push
sbb
push
xchg
push
jo
roll
mov
lahf
imul
into
fwait
shlb
inc
jb
dec
sbb
jg
outsb
mov
inc
ja
xor
pop
inc
pusha
repz
fstcw
sbb
nop
adc
outsl
sahf
and
cmp
in
add
lea
shr
shl
dec
je
popf
ss
imulb
sbb
dec
lret
lock
mov
out
push
sahf
mov
inc
jne
ljmp
pop
mov
inc
xchg
sub
les
aaa
pop
cmp
or
loope
je
sbb
out
and
pop
cmp
jae
cs
sbb
adc
clc
idivl
mov
fbld
lds
call
fisubrs
xorw
sbb
push
jl
iret
mov
and
mov
jge
mov
and
add
sbb
out
xchg
mov
lret
mov
xor
inc
xchg
xchg
pop
push
loopne
aam
dec
shrl
jbe
sub
roll
lods
cmp
mov
jns
sub
push
cmp
insl
subb
dec
cs
fsubrl
nop
test
loope
mov
ja
sub
jns
xchg
xchg
add
and
xchg
into
sarl
sub
insb
mov
test
lea
xchg
xor
push
test
add
mov
inc
stos
out
ret
push
inc
push
fidivl
mov
ficompl
xchg
or
xchg
call
xor
pop
bound
stc
xchg
out
or
nop
cwtl
clc
jo
addl
push
in
sar
xchg
sarl
mov
xchg
mov
pusha
adc
cmc
mov
sahf
pop
lods
and
xor
sub
xchg
repz
lcall
in
sbb
xlat
cmp
mov
cwtl
pushf
scas
test
jp
mov
imul
push
jecxz
pop
push
mov
sbb
and
inc
std
dec
call
ret
and
push
test
loopne
nop
xor
std
outsl
and
xchg
sbb
lahf
mov
cli
in
jb
mov
jne
or
stos
lods
mov
enter
pop
pop
pop
jmp
push
icebp
std
loopne
shll
push
lahf
lods
xor
push
push
inc
test
fstpt
adc
xchg
lret
lcall
scas
xor
dec
les
cmc
mov
push
sbb
movsl
push
je
push
jmp
add
xchg
mov
divb
in
push
jp
xlat
lods
pop
sbb
lea
mov
iret
xor
mov
scas
lcall
mov
mov
push
pop
jmp
jecxz
cmp
inc
push
jle
pushf
adc
stc
sbb
pop
cmp
sbb
pusha
repnz
jo
dec
rorl
dec
push
pop
xchg
cli
pop
je
cmpl
push
cld
data16
call
inc
dec
pop
jne
push
mov
stos
js
es
mov
adc
nop
andb
retw
shll
rol
test
pushf
cmpb
pop
add
outsb
pop
dec
insb
mov
divb
jecxz
adc
loope
push
pop
xlat
or
xchg
add
cmp
dec
adc
lods
dec
pop
shll
icebp
pop
and
ljmp
xchg
rcr
pop
rcrb
popl
arpl
xchg
jge
ja
pop
mov
dec
movsb
lcall
sub
fidivs
dec
add
aam
loop
push
mov
lahf
cmp
sub
scas
jmp
repz
jae
cld
jne
mov
lret
xchg
add
int3
in
mov
or
imul
out
and
dec
jns
xor
arpl
xchg
arpl
icebp
int
icebp
xchg
pop
mov
push
sbb
inc
and
add
mov
fiadds
adc
add
test
sbb
xchg
addb
cmpsl
push
adc
arpl
xchg
jns
sbb
sar
jl
mov
jl
es
sarl
dec
xchg
nop
shr
js
clc
sti
xchg
in
loop
test
inc
or
mul
in
pop
cmp
scas
mov
fnstenv
or
mov
jl
mov
or
fstp
or
lock
imul
pop
jle
push
andb
fidivs
rorb
test
inc
ror
push
mov
mov
pop
push
outsb
jg
push
pop
aaa
adc
jae
rep
in
jecxz
outsb
or
and
gs
mov
in
xchg
fistpll
dec
dec
adc
shrb
fbld
inc
push
out
add
xchg
jmp
fmuls
adc
mov
add
adc
fcmove
adc
rclb
cmp
cwtl
mov
xchg
rorl
int3
jl
pop
aad
mov
out
gs
sbbb
mov
in
paddusb
pop
mov
mov
movsb
inc
sarb
jmp
dec
adc
add
ljmp
inc
repnz
jle
jp
addr16
arpl
sti
push
test
das
fnstenv
ja
clc
or
inc
or
loope
bound
xchg
jns
iret
decl
mov
in
negl
leave
loope
scas
pop
daa
lods
std
mov
outsl
outsl
xor
arpl
mov
xchg
ret
sbb
cs
xor
sti
xchg
cli
fimuls
jae
cwtl
les
xchg
insb
setns
mov
insb
out
stos
or
sbb
lock
xchg
xchg
popf
mov
mov
inc
mov
and
lret
mov
cmp
das
aaa
pop
shll
add
pop
orb
mov
data16
jecxz
mov
adc
dec
das
adc
jae
add
mov
mov
xchg
test
inc
xchg
xchg
mov
fwait
dec
pop
popf
sub
scas
mov
pop
mov
cmp
and
cmp
fisttpl
stos
or
xchg
sub
pop
lods
and
inc
sbb
cli
movsl
in
int
ljmp
cmc
insb
les
pop
popa
int3
and
add
jnp
xor
aam
jmp
cmpsl
mov
ficoml
cmp
dec
dec
mov
aad
xchg
shll
testb
cmpsl
cs
or
fidivrs
fucom
fstpl
cmp
mov
cld
daa
jne
xchg
inc
mov
xchg
out
ffree
in
rorb
pusha
mov
movsb
jl
mov
sub
push
clc
push
add
mov
xchg
ret
push
cld
inc
mov
push
je
sbb
test
hlt
push
outsl
pop
sbb
mov
jge
scas
mov
inc
mov
pop
in
or
sub
pop
sub
mov
dec
loopne
out
loop
inc
push
test
cmpsl
mov
add
pop
pop
push
cmp
popa
shl
or
repz
jl
shrb
out
push
repz
sbbb
jnp
lret
cmp
scas
xor
stc
int3
movsl
adc
cmpsb
add
sbb
or
mov
jb
xchg
inc
dec
hlt
into
xchg
fwait
sub
jb
and
mov
fldenv
mov
jno
je
jnp
imulb
lock
cld
xchg
std
nop
push
push
push
inc
dec
push
std
shlb
fcmovbe
sahf
inc
adcb
pop
and
sub
mov
int3
add
scas
insb
jmp
ds
les
cmp
inc
xor
push
sbb
mov
or
aam
inc
inc
aas
rolb
outsl
cmp
cmpsl
outsb
lahf
fists
mov
mov
pusha
sbb
inc
pop
andb
hlt
out
lahf
mov
rcrb
lret
dec
mov
dec
xchg
mov
sbb
push
out
xchg
scas
lret
mov
or
lea
pop
inc
add
movsb
in
xchg
fdivrs
cs
mov
lea
adc
inc
xchg
shlb
orb
xorb
stos
repnz
jno
aad
ret
jmp
dec
stos
inc
cmpb
sub
psllw
jb
xlat
es
cmp
jmp
ss
push
in
sbb
sbb
xchg
or
push
adc
cltd
or
cmpsl
xchg
jp
dec
nop
icebp
xchg
or
imul
cmp
int3
mov
ja
mov
adc
push
cmp
pop
pop
movsb
sub
dec
mov
push
cmp
sub
fisttpl
sub
push
and
sub
mov
leave
mov
mov
stc
pop
cltd
jno
std
cmp
insl
and
aas
in
dec
sub
cld
sbb
mov
jle
adc
jg
push
fisttps
insl
push
lcall
push
mov
and
sub
das
push
and
daa
xchg
mov
mov
xchg
testl
enter
xchg
lahf
addl
sbb
insl
mov
or
loope
repz
imul
mov
cmp
xor
rolb
jne,pn
cs
bound
aad
mov
inc
jl
popf
dec
push
push
lods
test
and
mov
sbb
lock
jecxz
mov
mov
cmpsb
pop
shll
popf
dec
xchg
cmc
lock
popa
popf
cmp
mov
subl
sub
push
cmp
xchg
bound
pop
mov
lea
mov
aam
fld
add
pop
in
adc
adc
sarl
push
movl
in
stos
push
into
addr16
cmp
pop
lock
loopne
mov
push
sub
ja
dec
jecxz
push
sbb
push
pop
jnp
pop
pusha
xchg
loope
pop
push
in
jecxz
jmp
ja
lock
daa
out
scas
pop
ror
pop
shr
test
mov
shll
das
xchg
aam
or
movsb
ss
dec
mov
repz
jo
inc
jg
mov
ljmp
adc
xor
sub
pushf
jne
inc
in
iret
and
dec
and
add
adc
mov
or
push
lcall
xchg
mov
dec
jo
xchg
ds
and
inc
out
lret
inc
pop
fmull
insb
xchg
test
add
mov
sti
xlat
mov
xor
cmpsb
xlat
xchg
jmp
or
jle
popf
rclb
fisubrl
fwait
push
sub
cmp
cmp
outsl
mov
jns
fs
adc
repnz
inc
insb
dec
aam
push
jg
and
push
jnp
pop
dec
fidivrs
outsb
xchg
add
aam
xlat
ja
call
jno
rclb
les
mov
mov
mov
adc
test
xor
repnz
loope
shrb
or
decb
test
xor
ja
or
cmpsl
pop
xchg
sarl
cmc
pusha
fisubs
test
movsb
sbb
sti
pop
push
mov
out
rcll
insb
insb
daa
cmpsb
or
dec
jle
outsl
int
ret
push
jbe
mov
vmaskmovdqu
dec
pop
pop
mov
fmuls
pop
lcall
int
cltd
aas
pop
pop
jo
mov
mov
dec
bound
mov
add
mov
xor
mov
inc
mov
mov
mov
in
loop
pop
lock
ja
fsubrs
fstpt
xchg
fneni(8087
loopne
mov
mov
data16
das
push
or
push
aaa
cmpsl
and
mov
pop
dec
and
adcl
ret
aaa
test
ficompl
push
inc
pop
enter
ds
shlb
ja
repz
jbe
xchg
shlb
mov
fdiv
popa
lds
mov
scas
xchg
push
push
bound
leave
mov
int
or
jge
adc
mov
xchg
and
out
or
ret
sti
movsb
xor
adc
inc
add
xchg
leave
loop
aad
inc
loopne
push
sbb
inc
sub
stos
mov
ljmp
mov
es
inc
fdivs
mov
sahf
aad
inc
mov
test
out
cmc
mov
mov
xor
jmp
stos
pusha
pop
cmp
cmpl
daa
enter
int3
outsl
inc
mov
jo
push
stos
xlat
or
jle
lods
cmp
lock
jno
pop
mov
jnp
mov
jae
push
push
xchg
xor
out
jmp
mov
aaa
mov
inc
lock
add
call
clc
lock
xchg
insb
popa
add
lret
mov
and
mov
test
push
popa
inc
inc
dec
addr16
icebp
and
xchg
or
jmp
adc
mov
addr16
mov
adc
rcll
jl
movsl
cmp
inc
xchg
adc
pushf
sub
imul
or
cmpsl
jmp
add
push
pushf
cmp
or
sbb
mov
jl
dec
cmp
je
addr16
cmp
or
mov
fmulp
les
add
mov
pusha
movsb
test
jae
ljmp
ficompl
adc
push
xor
out
mov
jl
push
jo
push
xchg
or
loop
pop
mov
push
leave
int3
xchg
icebp
test
out
and
test
fs
cmp
aaa
pusha
and
xchg
pop
mov
mov
mov
push
sbb
or
out
cmc
lods
jp
in
jnp
add
pushf
dec
scas
stc
aad
icebp
aas
data16
lea
popa
lahf
loope
jmp
cli
xchg
mov
dec
fisubl
into
and
mov
test
les
out
push
inc
jmp
cs
js
rorb
jecxz
mov
push
jge
in
outsl
push
jns
dec
out
inc
ljmp
bound
fsubrp
dec
or
push
or
lea
ja
repnz
mov
fidivrs
test
sbb
sub
xchg
sbb
ficomps
add
cmp
dec
out
inc
fadd
push
jg
sbb
or
push
insl
movsl
dec
push
bound
pop
push
ja
mov
push
jge
jo
lahf
sahf
out
pop
pop
fidivs
lods
xlat
stc
and
vpgatherdd
sbb
xor
add
pop
scas
adc
lcall
rclb
jnp
adc
or
movsb
loopne
mov
or
jmp
cs
jle
and
pop
les
fisttps
jb
or
outsb
pop
cmp
test
sti
lds
pop
sahf
in
add
mov
shrl
fadds
ret
jecxz
jl
push
mov
lods
xchg
out
je
and
xor
pop
fstpt
xchg
cli
add
imul
sbb
inc
mov
pop
cmpsl
movsb
lcall
dec
icebp
js
aaa
mov
shll
inc
inc
test
push
jbe
xchg
push
lock
jle
aad
jne
inc
rorb
or
cmc
jmp
and
dec
pop
pop
add
call
aaa
jns
lods
add
add
daa
push
add
je
inc
les
loope
in
aam
xchg
mov
mov
inc
sbb
xor
sbb
xchg
push
pop
xor
ret
sub
adc
shll
jp
gs
aam
sbb
iret
cld
or
lds
jp
dec
lock
fs
pop
mov
lret
aaa
mov
jmp
sbb
adc
inc
imul
sbb
fwait
arpl
js
lock
lds
iret
add
notl
shlb
mov
in
fs
int
or
sub
js
add
xor
pop
push
mov
jb
dec
add
jo
adc
arpl
pop
xor
jbe
fiaddl
mov
cmp
push
add
inc
or
xor
mov
or
dec
js
sub
xchg
or
std
in
fndisi(8087
pop
es
and
cwtl
neg
lock
ss
mov
inc
push
scas
and
push
inc
and
leave
ljmp
push
or
mov
lahf
movsl
mov
push
adc
ja
push
outsb
push
push
int3
bound
test
leave
dec
arpl
sub
cs
lret
imul
mov
mov
and
stc
lea
sbb
subl
stos
mov
imul
mov
icebp
cmp
mov
sbb
aaa
pop
pusha
mov
xor
arpl
mov
shlb
xchg
xor
in
jae
addr16
lret
icebp
inc
fcmovb
and
mov
push
shll
xor
mov
fstpl
mov
ret
loope
add
inc
xchg
cmp
test
mov
addr16
and
xor
inc
sbb
or
out
pop
inc
aas
jg
daa
xor
cld
lds
dec
xchg
lods
adc
clc
dec
sub
rcr
add
jno
filds
ds
cltd
xchg
loop
cltd
int
daa
icebp
fdivl
incl
into
imull
inc
lods
and
dec
lea
mov
enter
and
fcoml
divl
push
mov
enter
push
push
hlt
pop
adc
cwtl
push
hlt
bound
fstps
scas
add
test
int
inc
jbe
repz
mov
jge
movsl
push
push
dec
sub
jp
adc
lods
pushf
dec
xchg
mov
dec
inc
or
jle
dec
push
or
orl
icebp
sub
stc
xor
test
outsb
xor
bound
lods
sub
jmp
jo
add
insl
cmp
pop
es
outsl
int3
mov
add
mov
mov
aas
xchg
loopne
les
jbe
int
jg
mov
pop
inc
xchg
dec
jle
pop
push
or
and
leave
aad
jge
enter
movsb
sti
ds
adc
xchg
jbe
add
inc
scas
out
in
les
mov
jno
lcall
adc
loop
addr16
mov
flds
xchg
mov
call
xchg
cmp
sbb
bound
mov
inc
cmpsb
dec
pushf
test
pop
sbb
sbb
mov
xor
xchg
add
popa
mov
mov
rcrl
into
cwtl
sbb
mov
mov
rorb
jb
outsl
outsb
pop
mov
lcall
cli
adc
inc
out
sbb
inc
mov
repz
pop
sub
dec
js
jae
or
cmp
in
insl
pushf
or
lret
movsb
andb
and
cmovs
or
xchg
sub
pop
mov
lahf
push
jmp
mov
xor
jp
fstpl
rorb
dec
or
ljmp
mov
int
add
les
sbb
sub
mov
mov
push
clc
dec
jl
in
mov
and
jmp
mov
outsl
bound
pop
test
jl
rcrl
fcomps
stc
or
loope
mov
xchg
lcall
jmp
sub
jecxz
cmc
lds
out
ja
sub
scas
jne
mov
popf
in
mov
enter
pushf
data16
into
add
pop
cmp
adc
insl
in
popf
mov
popf
int3
mov
lret
dec
push
mov
rcll
xchg
mov
aas
insb
ror
and
dec
jecxz
in
sbb
loop
cltd
daa
cmpsb
nop
inc
sub
xor
inc
decl
sbb
roll
sub
dec
addr16
and
sub
mov
repz
imul
add
std
testb
mov
imul
test
mov
or
inc
jle
dec
int
outsl
imul
and
rclb
cbtw
cs
sub
push
int
xor
mov
sub
jae
mov
iret
xchg
lods
mov
xchg
add
leave
or
mov
ljmp
inc
rep
mov
insb
adc
cmp
fucom
cmpb
bound
mov
dec
adc
loopne
scas
and
push
daa
xchg
xchg
push
inc
test
rol
icebp
jl
mov
cmp
js
push
push
xor
pop
add
cltd
xor
frstor
push
das
jae
shlb
adc
and
adc
push
mov
inc
sbb
loop
dec
sahf
ret
inc
xor
mov
in
in
pop
cli
mov
xor
cmp
and
insb
imul
pop
fmul
rclb
andb
sbb
mov
bound
adc
scas
cmc
aad
pop
out
inc
pop
daa
daa
lret
xor
sbb
aam
fwait
out
jns
je
out
mov
lcall
pop
xor
orps
fidivrs
pop
push
les
in
and
std
lret
gs
nop
inc
xor
add
cmpsb
in
inc
clc
aam
cmp
lret
mov
push
xchg
mov
iret
push
push
idivb
dec
pop
sbb
std
push
popf
cmp
xchg
adc
movsb
sub
xchg
scas
mov
xor
adc
lds
movsb
inc
cmp
mov
xor
cmp
pop
rorl
add
push
pop
lea
sbbl
mov
push
pop
mov
jno
mov
inc
adc
stos
lahf
mov
xchg
ret
push
xchg
xor
aas
inc
inc
cmp
ret
push
shrb
addr16
test
sbb
lds
push
add
aaa
fwait
xor
fstps
push
push
cli
mov
sub
xchg
sub
sahf
into
sahf
adc
nop
stos
adc
arpl
sub
xchg
ret
aam
addr16
xchg
imul
lret
xchg
pop
clc
in
pop
clc
popf
jbe
pop
mov
ffreep
testl
movsb
cli
std
bound
push
cmp
push
and
out
sbb
in
es
jle
push
xor
xor
and
and
addb
les
mov
pop
adc
mull
xchg
push
push
jnp
add
movsl
fisttpll
pushf
fs
dec
dec
cli
stos
test
clc
ret
inc
loop
dec
das
or
mov
or
push
mov
lret
xchg
fisubrl
push
int3
enter
mov
pop
roll
xor
dec
jo
adc
test
out
xor
push
hlt
pop
subb
pushw
mov
sub
aam
or
push
push
lahf
imul
xchg
xchg
sub
dec
mov
jge
mov
in
pop
imul
hlt
inc
mov
fisubs
jo
cmpsl
in
jns
push
insb
fldcw
je
mov
jbe
cmpsl
xchg
pop
aas
pop
rolb
push
call
push
pop
xor
stc
jecxz
aas
in
hlt
sahf
out
test
aas
jb
bound
addr16
jp
nop
cli
or
and
xchg
das
inc
mov
lods
mov
aaa
lock
mov
inc
xchg
cld
ja
push
dec
xchg
data16
lods
and
sti
sti
push
xchg
icebp
and
xchg
icebp
sub
aad
jecxz
xchg
or
pop
pop
xlat
push
into
mov
xchg
lret
gs
hlt
jno
mov
stc
or
xchg
fisubrl
cmp
sbb
mov
and
fcomip
jbe
divb
loope
mov
push
leave
and
rcrb
inc
sbb
cmp
int
roll
dec
mov
mov
inc
jmp
loop
jecxz
dec
dec
ret
add
imul
rcrl
adc
push
xchg
mov
lock
cli
jnp
mov
pop
sahf
jbe
or
jle
stc
xor
sti
out
adcb
pop
js
leave
and
movsl
test
imul
popa
dec
call
push
mov
push
out
call
mov
hlt
push
inc
and
outsb
push
sbb
mov
lcall
imul
cmp
dec
xchg
cmp
adcl
popf
xor
lcall
pop
cmp
cmp
adc
lahf
add
push
rcrl
fiaddl
inc
repz
cld
test
je
mov
xor
in
js
andl
push
mov
xchg
mov
inc
cmpsl
out
dec
in
or
ret
lret
popf
aam
dec
push
daa
fstpt
fstpl
cmpsl
insb
mov
data16
loop
xchg
push
aam
mov
sub
add
jle
push
and
lret
pop
adc
dec
xchg
sbb
ret
movsl
inc
mov
out
bound
jno
in
sti
xchg
leave
push
cwtl
add
mov
jo
mov
push
in
shl
loopne
les
setg
insl
xchg
mov
lds
lock
pop
jg
nop
dec
lock
bound
dec
adc
fcompl
imul
leave
jecxz
add
popf
cmp
push
adc
mov
mov
xor
add
xor
dec
xchg
cmp
fildll
push
push
mov
addb
lret
insb
dec
cmpsb
add
push
lret
int3
dec
and
into
jp
inc
test
arpl
push
test
dec
xchg
cmp
push
aad
adc
add
jae
add
andl
test
repz
ja
jmp
jl
add
pop
push
push
dec
adc
and
xchg
push
mov
sub
mov
arpl
dec
in
sbb
pop
inc
mov
jno
cmpb
pop
or
cmp
fs
xchg
push
cmp
stos
mov
fistpll
add
and
shl
pusha
stc
pop
push
decb
cmpsb
mov
mov
cmp
insb
mov
mov
adc
and
out
jo
loop
fistpll
jle
dec
jns
je
adc
js
aam
stc
testl
or
pop
sub
ret
xchg
or
xor
mov
icebp
fists
aaa
fsubs
and
outsb
int
and
arpl
and
icebp
sub
jecxz
loopne
dec
daa
daa
pop
arpl
inc
data16
rclb
mov
stos
mov
scas
sahf
ret
fsubrl
push
add
pop
push
jnp
adc
mov
jl
adc
jae
mov
cs
jnp
addr16
xchg
dec
ficomps
std
movsl
ret
xchg
rorl
jb
jns
dec
or
rclb
and
mov
xchg
ds
sbb
rorl
adc
je
jo
push
gs
sbb
push
sbb
aas
mov
scas
pop
lds
stos
lds
cwtl
mov
xchg
fsub
mov
push
outsb
adc
divl
xor
addr16
fistl
outsb
fmul
and
jmp
out
insb
daa
cmp
inc
push
dec
js
xchg
xor
bound
scas
sbb
call
lock
jmp
pop
adc
mov
ss
and
mov
mov
cmp
cmc
dec
gs
repz
sub
sbb
repz
adc
in
jns
xor
ja
adc
jle
popa
add
test
bound
iret
mov
jnp
cmp
jg
and
dec
jno
jecxz
dec
dec
sbbl
imul
lods
adc
cmpsb
or
inc
call
and
icebp
pop
mov
xor
aaa
popa
repnz
xchg
and
jg
fst
push
pop
orb
out
jp
pop
xchg
pushf
adc
mov
insb
xchg
inc
adc
jp
arpl
test
loope
rep
cmp
xchg
or
pop
adc
lret
xchg
inc
sbb
mov
lret
test
jbe
pop
imul
es
xchg
dec
sub
push
sub
insb
dec
jne
sub
andl
in
cwtl
fnstcw
daa
jo
jecxz
test
inc
xchg
mov
and
xchg
mov
push
pop
arpl
jl
bswap
fwait
pop
movsb
pop
test
lcall
or
dec
enter
cmpsl
or
push
xor
push
pop
add
lds
or
jmp
dec
cmpsb
popa
xchg
and
sbb
xor
adc
or
pop
clc
push
jnp
lds
scas
cmp
xchg
in
xchg
mov
cmp
scas
cmpsl
jmp
lret
sub
jecxz
inc
mov
inc
push
or
mov
out
sti
or
xor
mov
ss
jg
and
ror
iret
stos
xor
insb
sub
movsl
repz
push
call
shr
fistps
mov
push
divl
inc
sub
adc
mov
lret
mov
fisubs
shll
and
xchg
sbb
xchg
adc
adc
mov
mov
sbb
dec
pusha
mulb
adc
lea
pusha
in
popf
mov
test
and
jl
adc
pop
lret
pusha
jb
mov
xlat
int3
aas
or
movsb
subl
sub
loop
sbb
mov
adc
das
stos
mov
xchg
loope
lods
add
sbb
mov
mov
sahf
enter
jne
pop
shrb
mov
or
rclb
push
filds
pop
push
dec
enter
jl
ds
cmc
dec
cmp
stos
cli
jmp
outsb
and
ret
and
movsb
movsb
enter
mov
fstps
lret
outsl
or
cmpl
mov
stos
or
stos
pushf
iret
je
mov
popa
jg
inc
xchg
mov
fwait
adc
pop
aam
addl
stos
mov
add
je
outsl
lahf
cs
ds
mov
push
inc
mov
cmp
arpl
das
or
sub
mov
mov
dec
dec
je
test
sub
in
lods
push
loopne
cmc
jg
mov
sub
popa
repz
add
jae
test
sub
push
push
arpl
addps
iret
dec
sub
in
out
pop
aad
push
mov
and
or
and
hlt
mov
sub
cmp
jb
cmp
xchg
add
inc
cmp
stc
int
movsb
pop
fisttpl
popf
fs
daa
mov
dec
cmpsl
cmp
cltd
mov
xor
mov
pop
mov
fwait
push
pop
mov
in
mov
pop
test
sbb
sbb
cmp
push
icebp
orl
cmp
aam
dec
mov
inc
fmuls
inc
arpl
or
add
in
imul
shlb
xchg
mov
mov
fsubr
in
push
stos
jne
xor
cs
push
movsl
xchg
mov
dec
sahf
jg
and
ret
sub
jmp
push
stos
mov
loopne
inc
adc
xor
add
cltd
mov
mov
popf
push
cmp
add
rcrb
mov
inc
mov
jle
rclb
scas
sub
cld
loop
ss
bound
jns
dec
push
aaa
test
jg
jg
push
pop
stc
jecxz
lock
stos
shlb
lds
popf
scas
std
and
sbb
or
sbb
fnstsw
push
lcall
lock
xchg
not
popf
mov
push
adc
fistpl
push
add
cmp
sub
pop
aas
mov
js
lock
inc
xorb
call
aad
cld
sarb
aaa
mov
pusha
push
or
mov
sbb
jg
push
sub
cmpsl
mov
mov
stc
adc
inc
imul
dec
add
out
out
push
push
insl
cmp
add
push
subl
repz
pop
insl
imull
cld
nop
push
icebp
jp
loop
xor
data16
cmpsl
jns
and
call
mov
test
adc
ss
push
and
and
outsl
pusha
push
hlt
dec
cli
aaa
xor
and
jl
xchg
inc
lds
cmc
adc
pop
std
pop
into
ret
ficoms
addl
clc
sub
js
lret
push
rolb
jno
adc
repnz
inc
pop
jg
fmulp
repz
mov
pop
das
arpl
ficomps
repz
stos
enter
rol
add
in
mov
test
sub
in
cmp
xorb
leave
mov
dec
cld
push
inc
fdivl
ret
mov
loope
mov
gs
jo
mov
push
push
sbb
fdivs
or
scas
add
in
mov
and
mov
cltd
cwtl
fs
jge
movb
sahf
mov
inc
inc
mov
dec
adc
movsl
pop
das
test
rolb
adc
mov
jmp
inc
aad
sbb
dec
xor
or
push
sub
cltd
ficompl
pop
push
mov
call
orl
movsb
inc
add
mov
xchg
dec
lahf
daa
dec
sub
imul
in
out
xor
cmp
fsubs
fwait
inc
mov
andl
xchg
fstpl
xor
cld
clc
push
out
scas
lods
scas
pop
mov
sti
or
sti
mov
xchg
pop
add
push
add
pushf
bnd
cwtl
mov
sub
xor
xor
add
cmp
icebp
cmp
inc
pop
repz
loope
sti
xchg
das
repnz
sub
adc
mov
push
jl
dec
mov
std
push
push
cmp
sub
jecxz
mov
shl
movsb
and
sub
pop
dec
or
mov
mov
sarl
cmp
push
clc
movsl
sbb
rclb
xor
popf
mov
xor
push
and
inc
mov
pop
les
stos
cmpsl
inc
push
arpl
dec
add
rorb
aad
jns
or
lea
and
fimull
aad
xor
shl
jg
sub
bound
inc
in
and
jle
inc
pop
mov
out
loopne
rcl
xchg
cs
movsb
mov
call
idivb
popa
cmp
mov
mov
rcrb
mov
mov
js
test
cld
decl
lahf
icebp
mov
adc
dec
xchg
xor
in
jno
out
mov
and
jge
rorl
xor
fs
dec
push
add
xor
pop
pop
sbb
adc
sbb
shrb
jae
xlat
fwait
mov
aas
mov
xchg
emms
loop,pt
mov
and
je
or
xchg
mov
popa
out
fiaddl
or
aad
clc
mov
pop
mov
cmp
fbld
mov
in
jmp
add
or
jle
sahf
mov
cmp
cli
mov
mov
xchg
xchg
test
fs
sar
mov
xchg
inc
fildl
push
xchg
scas
call
or
std
rcll
mov
mov
arpl
mov
sbbl
jno
das
clc
mov
test
xchg
jns
dec
xor
fwait
adc
int
cltd
movsl
jne
das
clc
ljmp
add
ret
repz
mov
outsl
fidivrs
iret
push
icebp
sub
cmc
xor
aaa
push
clc
loope
ja
pop
push
sbb
sbb
and
je
inc
push
and
repz
repz
mov
mov
fwait
cmp
push
jmp
add
or
inc
aam
push
pop
cmpsb
std
fdiv
in
pop
mov
push
jnp
scas
sahf
mov
sbb
cmp
inc
jno
push
lahf
sub
rcl
xchg
mov
iret
in
dec
push
in
jecxz
add
nop
and
bound
inc
jle
and
cmp
xchg
dec
mov
js
add
mov
mov
adc
scas
cmp
shrl
sar
push
cmc
mov
xor
mov
hlt
sub
mov
insb
leave
divb
inc
jge
cmp
sub
cmp
loop
aam
outsb
mov
cmp
cmp
mov
xchg
push
and
push
pop
jmp
push
pop
mov
xor
out
popf
dec
in
das
test
cmp
push
imul
jecxz
inc
or
inc
cmc
lcallw
inc
sti
jbe
sbb
cmp
and
push
xor
clc
push
rclb
adc
and
ds
cli
popa
adc
out
icebp
out
fimull
test
sbbb
imull
push
imul
xor
clc
sub
stos
mov
jle
les
popa
ret
sbb
jb
lock
adc
icebp
sbb
aam
clc
push
jae
push
stc
push
sub
int
jmp
fmuls
std
aad
rcll
pop
jno
arpl
lret
jo
mov
push
ja
xlat
hlt
mov
bound
hlt
rcrb
push
pop
and
leave
fdivl
loope
pop
mov
adcl
and
hlt
loopne
push
inc
xchg
mov
jmp
jno
adc
xchg
mov
pop
rcrb
rcr
bound
movsl
adc
inc
jmp
jle
lea
mov
lds
push
fcomp
xchg
mov
mov
repnz
inc
idivl
dec
mov
and
cs
mov
jle
inc
xor
mov
jg
cltd
push
or
push
xor
ljmp
fnsave
sarl
insl
loop
add
jg
aad
sbb
jno
lds
test
and
dec
push
aad
rorl
negl
adc
outsl
push
movsb
jno
dec
jne
jb
test
mov
subb
pop
repnz
arpl
int3
dec
ljmp
xchg
aas
mov
push
mov
je
nop
pushf
mov
loope
xor
lods
in
inc
lods
add
call
repz
out
pop
fstpt
push
rcrl
inc
out
cmp
mov
fldcw
jae
pop
out
or
mov
clc
jno
fisubrs
jne
arpl
and
scas
mov
daa
insl
adc
add
inc
push
imul
hlt
pop
cltd
mov
test
push
ja
cmc
jno
imul
mov
jmp
pop
adc
push
pop
or
fcoms
sahf
test
sbb
int3
push
pop
adc
fdiv
scas
xchg
push
aam
jo
lods
adc
sbb
or
jmp
inc
inc
push
sbb
fbstp
loopne
rorl
sbb
lret
xchg
iret
arpl
push
xchg
add
js
cltd
dec
sub
mov
push
addr16
fmulp
or
cli
cmp
decb
add
cs
mov
fcmovu
sbb
mov
adc
int
mov
add
mov
adc
mov
jo
ret
mov
rcr
dec
mov
shl
adc
xchg
into
xchg
scas
sbbl
hlt
adc
sbbl
xchg
add
out
call
jb
push
inc
rol
xchg
hlt
outsb
jb
dec
mov
and
xchg
xchg
test
je
xchg
pop
adc
fdivrl
shrl
cli
mov
pop
nop
gs
xchg
lods
jle
insl
push
add
mov
cmp
mov
pop
xlat
int
xor
jp
sahf
sbb
pushf
imul
lods
push
pop
push
pop
pop
cwtl
stc
leave
data16
mov
data16
pop
push
in
mov
push
dec
aaa
mov
adc
pop
punpcklbw
dec
mov
xor
sets
or
subl
mov
cltd
addb
mov
dec
aad
das
cli
out
dec
neg
das
mov
ret
mov
cmp
aaa
fisttps
ds
xchg
inc
inc
sbb
inc
mov
inc
add
ds
sbb
add
sub
ja
test
insl
dec
sub
adc
imull
popf
imul
xor
notl
push
xchg
arpl
sbb
lods
insl
aam
or
pop
fstpt
sub
cmpsb
loopne
mov
inc
jbe
cmpsl
push
inc
outsb
nop
fnstsw
inc
sub
xchg
xchg
cmpsl
mov
xchg
dec
inc
les
mov
lret
int3
cmp
inc
into
stos
aad
ljmp
mov
das
es
mov
mov
sbb
mov
xor
xchg
rclb
movsb
lods
je
jbe
mov
pop
call
push
adc
sbb
xor
fistl
jo
inc
nop
std
push
sti
mov
push
test
imul
add
jecxz
dec
mov
les
movsb
mov
add
pusha
cmp
mov
dec
inc
sub
sbb
negl
and
fwait
outsb
mov
sbb
mov
std
xchg
pusha
int3
shll
lcall
add
push
rcrl
clc
xor
or
xchg
xor
cmp
mov
fwait
hlt
pushf
bound
inc
int
push
frstor
jge
jg
push
xor
jo
inc
int3
dec
jle
and
roll
mov
inc
mov
inc
mov
lock
out
inc
inc
imul
cltd
loopne
dec
pop
pop
inc
je
les
lea
cmp
int3
loopne
cltd
lret
cmpsb
aas
mov
sub
pop
popf
sti
inc
sub
mov
rorb
sub
push
mov
sarl
sub
push
ret
xchg
xor
outsl
rcl
out
push
mov
sbb
jp
ret
fdivrp
imul
popa
movl
pop
loopne
pop
rcll
movsb
shrb
test
mov
jno
lahf
popf
aad
in
dec
mov
subl
dec
dec
inc
and
hlt
popf
jae
shll
iret
mov
mov
rcrb
les
mov
addr16
iret
iret
cli
lahf
addr16
iret
mull
aad
adc
inc
pop
add
jns
mov
out
loop
in
and
fadds
lds
jo
push
jae
in
mov
sub
enter
js
and
shrl
or
dec
xchg
push
pusha
jmp
jle
sbb
sbb
iret
test
js
push
sbb
shrb
jns
cld
push
rcrb
testb
pop
cmp
shlb
fnstcw
pop
sbbl
scas
xor
mov
or
std
test
inc
mov
outsb
in
pop
pusha
aad
leave
xchg
loopne
mov
stos
aad
cmp
sub
pop
mov
inc
cmp
leave
jl
rorb
out
sub
mov
mov
mov
clc
xlat
sti
jp
lds
inc
cld
sub
jle
pop
sbb
mov
adc
dec
xor
lcall
test
rorb
and
push
or
lahf
jnp
mov
and
mov
outsb
jp
push
mov
mov
in
loopne
lahf
int
xchg
fisubrl
xlat
cld
bnd
aaa
and
loop
insl
cltd
insb
idiv
sbb
and
inc
arpl
outsb
adc
imul
rcrl
sub
adc
imul
pop
repnz
test
fbld
lds
imul
xor
push
inc
xlat
inc
push
call
ret
les
insb
cli
pop
adc
xchg
jnp
das
jns
int3
aaa
cwtl
pop
jae
adc
dec
cmpsb
cmp
adc
lock
inc
aam
dec
js
lret
test
and
rclb
mov
cmc
pop
int3
xor
mov
cwtl
cli
mov
enter
insl
xchg
fsts
dec
ds
sbb
in
cwtl
lret
imul
es
mulb
std
insb
clc
leave
mov
loopne
repnz
stos
mov
fcompl
cmp
pop
sbb
jle
sbbl
imul
sbbb
mov
sbb
orl
jle
push
mov
lret
or
cmp
mov
cld
shlb
icebp
sub
inc
mov
inc
fmuls
xor
push
mov
fbstp
cmp
les
sub
leave
or
add
xchg
jp
call
in
insl
inc
pushf
bound
jb
nop
aad
rol
cmp
fsub
xchg
mov
jnp
fsubrs
xor
sub
popa
fcomi
push
cmpsb
jmp
inc
testb
dec
mov
mov
fcmovbe
mov
test
popf
inc
and
outsb
test
and
mov
lds
outsb
cmpsl
mov
mov
repnz
int
push
mov
pcmpgtw
or
mov
xchg
xor
cmp
ja
or
adc
popa
sub
xor
stos
iret
mov
pop
sbb
divl
fidivrs
icebp
imul
mov
cmc
and
mov
jmp
in
movsb
mov
xchg
dec
lahf
xchg
sarl
int
loop
mov
push
push
xor
mov
pusha
stc
loop
jmp
lcall
pop
ret
sbb
mov
mov
rclb
pusha
jae
loope
push
xchg
and
jne
sub
sub
push
dec
test
mov
sbb
add
push
rcrl
mov
cmp
shll
sbb
fimull
mov
xchg
icebp
mov
sub
aas
insl
in
cmp
cmp
mov
xchg
nop
mov
fstpt
leave
jno
add
mov
scas
jo
cmp
stos
cmp
pop
test
cmp
push
mov
fidivrs
push
arpl
nop
in
loope
adc
dec
cmp
jp
xchg
test
sarl
and
mov
repnz
xchg
or
xchg
mov
fisttpll
arpl
jg
jo
addr16
add
in
mov
lods
lea
cmp
nop
adcl
orb
pop
adc
and
test
shr
or
xor
je
push
xchg
add
aaa
cmc
out
rorl
or
cmpsl
popf
daa
cmp
jmp
test
not
inc
pop
sahf
mov
sbb
add
mov
mov
pop
sti
sub
add
loop
xchg
sbb
mov
movsl
test
adc
add
jecxz
jb
std
inc
divl
pop
pop
sbb
leave
jmp
ret
pop
imul
pop
mov
shlw
jae
rcrb
popa
sbb
repz
cwtl
jo
push
sub
and
aam
or
push
in
roll
jle
dec
sub
sub
pop
pop
jno
fcmovu
mov
mov
outsl
dec
adc
mov
sub
sahf
stos
xchg
xor
push
test
mov
mov
push
push
and
pmulhw
adc
jb
add
jp
jno
daa
movsb
rorb
ja
jb
rclb
push
sub
test
test
mov
stos
lret
jecxz
aad
sahf
mov
mov
lahf
fwait
lods
mov
fsts
or
ret
adc
loopne
xlat
and
pop
aad
mov
sub
xor
pop
shll
inc
cmp
fdivrp
mov
cwtd
xor
add
stc
loop
sbb
push
pop
lock
adc
and
cmp
and
mov
jne
out
lcall
sub
test
pop
add
aaa
adc
sbb
ljmp
xor
inc
aam
jb
mov
mov
jnp
ljmp
inc
adc
xchg
icebp
push
pop
out
push
pop
mov
jno
nop
adc
adc
lahf
out
insl
into
push
pop
nop
xchg
mov
cmp
leave
bound
mov
inc
mov
mov
jo
xchg
idivl
mov
jnp
int
jge,pt
xor
nop
fsubrl
cwtl
loope
and
call
ds
xchg
adc
xchg
or
sbbb
xor
in
imul
fs
test
scas
rcrl
test
jo
xchg
cmp
clc
xchg
inc
stos
xchg
dec
ret
cli
pop
add
fsubr
add
lret
ds
cmp
push
ret
aad
mov
mov
movsl
sti
addl
mov
xchg
iret
pop
cmp
adcb
idivl
shll
pop
jmp
xor
cmp
jne
xor
sti
loop
xchg
adc
jp
int3
out
cmp
cld
out
or
mov
movsb
test
adc
cltd
and
sbb
xchg
mov
ror
mov
xchg
aas
test
adc
mov
call
dec
mov
mov
xor
loop
insl
cmpl
xchg
cmpsl
sbb
xorl
repnz
adc
cmp
mov
sarb
in
cmp
rorl
aad
mov
jbe
or
movsl
and
scas
inc
int
mov
mov
push
sub
repz
mov
sbb
ret
test
inc
aad
xchg
sbb
xor
pusha
dec
fsubrl
jns
fcmovnbe
mov
scas
xor
inc
dec
inc
lods
sbb
int3
mov
rcrb
test
test
clc
sbb
lock
cwtl
inc
addr16
cmp
sbb
insl
mov
outsl
std
xor
sti
jbe
sti
or
pop
and
data16
and
push
out
add
mov
xor
adc
int3
fnstsw
and
push
int
ds
test
test
inc
xor
mov
std
movsl
add
leave
lret
pop
rcll
push
mov
adc
lahf
lods
test
sbb
dec
pop
cmp
xlat
sbb
add
nop
adc
das
sarb
loop
dec
int3
mov
int
mulb
test
push
jno
int3
adc
mov
jb
std
jl
fiaddl
les
fcomi
ss
jp
cld
repz
xor
fstpl
call
shl
neg
dec
loop
and
xor
dec
and
or
sbb
push
inc
jle
ret
push
shrb
mov
fisttps
or
mov
loop
cmp
mov
out
add
ja
das
cmp
mov
shr
aaa
fwait
mov
lret
ffreep
cmp
adcb
or
push
repnz
xor
push
or
pop
popf
aaa
repnz
in
test
fimuls
cmpsb
pop
pushf
cmp
subb
cmp
ret
hlt
inc
push
mov
in
out
loope
cmp
je
rorl
lock
je
loopne
ret
into
sub
sub
sub
pop
into
pushf
mov
js
imul
jne
dec
in
movsb
mov
pusha
mov
paddq
add
je
aam
dec
das
or
xor
mov
push
sub
add
mov
jmp
insb
pop
sub
ljmp
out
lds
in
sti
stos
adc
fstpl
aad
and
pop
mov
sub
sub
mov
mov
xchg
inc
push
test
mov
inc
popf
lock
jge
lods
adc
inc
or
xor
adc
enter
fcmovne
loope
push
mov
ljmp
and
mov
push
dec
call
in
mov
mov
or
push
in
add
int
test
dec
lcall
inc
stc
repz
shrb
dec
shll
es
jne
or
data16
cmpsb
push
ljmp
pop
clc
inc
inc
cltd
fsubrs
sbb
je
jl
and
add
in
sub
jo
in
xchg
in
shrl
xchg
inc
push
ds
es
sbb
inc
popf
icebp
out
xchg
and
mov
mov
xchg
or
xchg
cmp
imul
push
sti
insb
cs
imul
mov
sbb
jno
aad
add
xchg
cld
mov
aaa
out
push
or
outsl
xchg
mov
add
cltd
jb
lahf
fcompl
xor
leave
out
push
push
mov
jnp
sbb
outsb
in
loope
dec
push
mov
xlat
mov
sbb
and
inc
inc
mov
fstps
add
mov
mov
daa
addr16
ret
adc
push
lds
pop
paddd
in
in
rolb
cmc
testl
mov
mov
mov
mov
mov
pop
fildll
push
jl
leave
push
mov
sub
adc
jne
enter
iret
mov
imul
call
out
pop
lahf
add
mov
adc
jge
aad
ds
pop
andl
cmp
shl
fisttpll
pmaddubsw
adc
xor
out
mov
xchg
push
pop
arpl
movsb
push
mov
shlb
das
pusha
adc
loope
mov
pushf
xchg
sub
push
pop
enter
and
in
lret
xchg
sub
loope
or
or
xor
mov
jge
or
adc
call
shlb
ds
fiaddl
mov
imul
les
loop
cmc
push
fucom
fnstenv
xchg
pusha
pop
mov
or
or
cli
push
mov
gs
lret
nop
inc
inc
push
add
and
jne
mov
dec
mov
xor
sbb
push
mov
dec
cmpsb
or
movsb
lret
adc
mov
out
mov
leave
pop
test
es
adc
sub
jg
pop
das
inc
dec
or
mov
pop
test
inc
pop
jp
xchg
imul
loope
cmc
stc
xor
jo
sub
pop
pushf
mov
stos
pushf
cltd
iret
push
ss
out
xlat
jmp
mov
rclb
mov
mov
or
ja
in
push
aas
jmp
jae
pop
or
xchg
out
jge
clc
mov
cwtl
into
lcall
popf
movb
sti
xchg
pop
xrelease
jno
pop
iret
imul
aad
xor
add
sbb
mov
sbb
dec
pop
imulb
or
sub
sub
adc
dec
jns
xchg
xchg
sub
call
adc
sahf
inc
cmp
mov
cmp
iret
inc
clc
pcmpeqw
mov
jle
bound
and
jg
out
aas
sub
outsb
ss
add
mov
push
pop
fs
sarl
or
and
out
sbb
out
lcall
loope
xor
mov
add
iret
xor
fsubp
push
sbb
daa
lcall
sub
out
mov
mov
push
jno
movsb
or
test
das
loope
fnsave
fs
xchg
and
push
mov
jmp
lahf
test
testb
jae
popa
ds
adc
jmp
adc
clc
jbe
or
xchg
leave
xchg
or
pop
and
mov
ficompl
pusha
call
mov
inc
inc
test
fldl
fcomp
push
jae
aam
xlat
xchg
subb
mov
sub
cld
arpl
lcall
popa
daa
cmpsl
mov
pop
loope
pop
xor
ljmp
jmp
push
xchg
jns
out
ret
sbb
xchg
cld
jecxz
push
insb
adc
shrb
jl
aaa
stc
jbe,pt
inc
mov
and
mov
mov
enter
idivb
pop
cs
and
inc
jle
and
pop
enter
cmp
mov
fadds
pop
outsb
cmpsl
loop
push
in
cmpb
push
or
xchg
mov
adc
lds
repz
out
lods
push
cmp
aad
push
fisubrs
addr16
xchg
inc
pop
lret
sub
xor
inc
mov
test
leave
sub
enter
mov
dec
dec
ss
dec
fistl
dec
cld
push
mov
cmp
lret
rorb
ljmp
lods
scas
test
negl
push
pusha
add
hlt
bnd
and
negb
push
xor
call
insb
add
pop
lret
mov
lret
sbb
subl
lea
fistpl
jmp
loope
sub
cmp
in
cmp
mov
xor
pop
dec
ret
jp
xchg
imul
data16
rcrb
jnp
mov
xchg
push
adc
mov
dec
in
pop
mov
or
repz
add
jne
cwtl
xchg
push
data16
push
push
addb
sbb
stc
sbb
push
and
mov
jne
inc
popl
and
popf
and
cmp
mov
jo
lods
push
scas
dec
and
mov
cmp
sbb
aas
mull
push
test
inc
push
ficompl
test
xor
fs
sbb
lock
scas
sti
out
jmp
cmp
jge
int
mov
imul
in
repnz
dec
and
aad
mov
int
or
in
mov
adc
arpl
push
sub
xchg
call
jge
push
mov
xchg
je
insl
test
dec
pushf
xchg
sub
rcr
pop
pusha
push
jmp
mov
sbb
mov
cmp
aaa
inc
pop
add
push
mov
push
loop
and
jecxz
and
lea
daa
jbe
cmpsb
dec
sub
int3
pop
shrb
lock
andb
xor
out
cmc
xor
mov
xchg
cld
lock
mov
scas
mov
xchg
push
pop
mov
dec
or
xor
jp
popa
in
in
cltd
xor
lcall
dec
std
sub
dec
stos
sbb
faddl
jl
icebp
shlb
jnp
sti
enter
std
insl
mov
mov
rclb
aad
pushf
mov
push
out
fsubrs
arpl
cmp
add
imul
cmp
daa
xor
or
push
dec
xor
mov
pop
xor
movsl
outsb
repnz
sahf
or
movsb
and
repnz
fistpl
fmuls
push
insl
or
cmp
cmpsl
outsb
push
sub
in
aas
mov
jl
int
int3
enter
sahf
inc
cltd
mov
inc
pop
or
clc
xchg
push
jmp
fs
jl
mov
push
push
lds
lret
jge
push
pop
sarb
scas
loop
insl
jg
lcall
and
mov
in
cmp
push
add
loope
xor
mov
addl
xor
sbb
inc
imul
sbb
in
int
push
ljmp
roll
and
hlt
jae
mov
movzwl
push
push
cmp
outsb
fmull
js
xor
in
jmp
mov
je
and
je
push
or
dec
fisttps
or
pop
inc
mov
outsb
xchg
mov
and
sbbb
int
sub
aaa
cmp
xchg
sahf
add
bound
movsb
outsb
imul
jb
mov
dec
pop
cmc
ss
push
or
into
cmp
mov
lds
cmp
push
popf
or
pop
inc
inc
sahf
mov
cwtl
sbb
pushf
xchg
mov
loopne
scas
fcomip
adc
cwtl
fs
in
or
pop
repz
mov
iret
lret
in
aam
arpl
mov
sub
or
fidivs
inc
jae
or
daa
adc
mov
mov
movsl
jbe
dec
pop
jnp
xlat
or
add
mov
and
outsb
subb
cmp
int3
sarl
sub
mov
insb
xchg
add
enter
or
popa
sti
jnp
subb
adc
push
das
stos
rcrl
inc
push
dec
enter
outsb
mov
dec
jno
testl
cltd
jne
sbb
pop
mov
loope
xchg
jge
jns
outsb
inc
test
iret
xchg
or
int
dec
jle
adc
jp
mov
and
pop
add
mov
daa
out
jo
pop
cld
sub
jae
mov
push
mov
dec
push
mov
sbb
inc
fidivl
jg
lcall
dec
andb
sub
jns
sub
jne
add
cmpsb
mov
xor
inc
sbb
out
inc
out
imul
sub
outsb
daa
push
stc
lea
mov
jnp
or
xchg
xor
push
nop
leave
xor
idiv
dec
int3
iret
ss
inc
lds
sbb
pop
sub
pop
rcl
movsl
push
inc
or
xchg
lods
dec
sbb
js
add
add
xchg
mov
push
into
inc
fcompl
out
push
fistl
mov
jmp
jns
pop
sbb
push
stc
sub
fnstenv
dec
dec
pop
js
adc
int
xor
jne
cmp
scas
ds
lock
add
xchg
dec
xor
xchg
sbb
cmpsl
icebp
hlt
mov
pop
dec
movsb
mov
leave
das
js
in
mov
lea
jns
jno
fwait
movsb
xor
jp
xor
shlb
xchg
inc
sti
dec
popf
cmp
jecxz
add
cmpsl
incl
lods
cmp
cs
sub
mov
sbb
fdivrl
push
cmpsb
jb
mov
insb
cmovae
frstor
into
sub
mov
fnstenv
mov
xchg
cld
jb
lds
addr16
test
loope
dec
andb
dec
xor
test
pop
dec
cmpsb
lods
xor
clc
inc
lea
sarb
inc
mov
out
sarb
cmpsl
popf
xor
jl
cmp
fdivp
push
negb
insb
or
inc
ficoml
pop
sbb
fistl
data16
xchg
pop
adc
aas
mov
lret
in
mov
add
sub
jmp
mov
sbb
sbbl
insb
mov
add
movsb
cmp
xchg
mov
cli
loop
mov
mov
mov
or
sbb
jo
data16
pop
gs
outsl
cmp
lock
pushf
jae
or
adc
std
mov
and
inc
sti
lods
push
data16
push
or
or
popf
xchg
jbe
mov
fisttpl
jl
xchg
mov
jb
mov
push
and
jmp
mov
sbb
sub
cld
sub
add
push
ss
enter
pop
cmpsb
inc
add
sub
and
xchg
aas
or
jl
addl
insb
jecxz
add
out
xchg
cmpsl
iret
movsl
leave
inc
push
dec
xor
and
push
outsl
dec
lods
push
jle
pusha
sub
cs
pusha
loopne
and
mov
xchg
fisttpl
adcl
cmp
ljmp
sub
jl
and
out
dec
xor
aaa
in
fs
fwait
jns
or
outsb
addr16
add
push
adc
out
inc
pushf
pushf
jl
insl
lock
cli
or
push
add
sbb
jbe
sbb
shll
inc
imul
lock
in
mov
cmpsl
dec
scas
jb
lea
xchg
jns
shlb
sti
sarb
dec
adcb
outsb
shll
jns
sahf
adc
imul
inc
outsl
mov
mov
cmp
aaa
lcall
or
or
jp
mov
test
addr16
mov
jp
js
pop
imul
iret
jo
xchg
mov
push
or
pop
dec
movsb
inc
xchg
aad
sbb
push
dec
mov
dec
andb
imul
mov
mov
fs
xchg
jbe
pop
add
and
adc
inc
mov
dec
leave
insb
xor
mov
pop
ret
ja
xchg
test
pop
mov
mov
pop
jb
mov
out
cmp
lods
imul
jb
pop
clc
into
cmpsb
pop
dec
sbb
cmp
dec
or
push
push
dec
les
dec
scas
xor
cmp
or
in
fcoml
frstor
dec
push
jo
adc
push
sub
mov
movaps
or
adc
shrb
loop
add
inc
mov
push
fs
lcall
xchg
cmp
mov
addr16
xor
loopne
adc
push
fcoms
push
mov
insl
push
and
mov
mov
icebp
push
inc
sub
push
lcall
fsubrl
pushf
dec
sti
mov
push
jns
or
or
inc
or
jno
fldcw
ds
pop
xchg
mov
sbb
cmp
xchg
or
cmp
cmc
jg
cltd
mov
or
shll
daa
enter
jne
sub
xchg
or
adc
add
lods
lahf
cmp
inc
inc
mov
inc
pop
sub
xor
lcall
push
js
sti
test
fisttpl
das
icebp
mov
fcmovnu
sbb
jbe
sar
dec
fiaddl
cmp
repz
lahf
xchg
loopne
in
sub
inc
loop
mov
cmc
cld
in
lods
std
cmp
sub
sub
test
cmpsb
incl
add
mov
movsl
enter
in
mov
jg
out
mov
mov
jb
fdecstp
popa
and
mov
scas
push
popf
cmpsl
lds
loope
and
mov
xor
push
lods
lock
add
stc
in
lahf
aaa
ja
inc
int3
clc
lods
adc
movsl
nopl
in
mov
sbb
push
mov
inc
dec
push
sub
add
adc
push
lahf
push
jmp
mov
imul
sub
push
mov
cld
or
test
cmp
mov
inc
push
inc
mov
shl
jo
cmpsl
xchg
jg
xchg
jmp
adc
sbb
cmp
out
in
es
sub
les
jae
icebp
add
fisttpl
out
sbb
daa
int
test
cltd
pop
pop
jle
add
push
dec
mov
xchg
jae
and
sub
jl
push
in
test
add
je
into
xchg
ja
jecxz
outsb
test
shlb
insb
add
push
shr
mov
mov
push
ret
enter
adc
pop
rcl
dec
imul
fidivs
in
aas
cmp
mov
stos
mov
adc
ret
bound
in
xchg
shll
test
cmc
sahf
dec
push
or
cwtl
repnz
test
ja
push
mov
repz
mov
adc
lcall
push
js
fwait
push
add
cwtl
push
adc
mov
rclb
movb
mov
sbb
dec
add
shr
fists
sub
push
popf
sub
popf
bts
inc
jge
adc
out
imul
pop
dec
dec
cmp
outsb
sbb
inc
pushf
or
stos
pop
add
add
scas
ja
or
leave
imul
xchg
adc
mov
xlat
xchg
pusha
inc
sub
sbb
xchg
ficomps
mov
mov
and
shl
lods
fldcw
std
or
xor
inc
pop
rcl
mov
cmpsl
movl
loope
pop
aas
pop
or
or
push
aam
push
pop
jle
daa
jbe
incl
sbb
mov
fs
aad
icebp
aam
mov
fidivl
aas
push
pop
pop
cmpsl
dec
xchg
arpl
jmp
inc
mov
fdivrs
mov
push
cmp
jle
xchg
jmp
repz
dec
out
in
repz
pushf
outsl
fdivrs
lods
popf
mov
rorb
lea
cmpsl
roll
sbb
push
cmp
jbe
imul
jbe
pop
int3
lret
jb
into
inc
fcomps
xchg
mov
jns
dec
bound
lahf
mov
mov
popf
and
cmp
stc
imul
test
xchg
outsl
aam
lea
adc
daa
std
stos
pop
xor
addr16
pop
pop
lahf
int3
cltd
dec
imul
stos
sub
inc
pop
cmpsb
loope
orl
movsl
mov
sbbl
push
lock
cmp
mov
insl
cli
loop
ds
mov
mov
aad
cwtl
pusha
pop
mov
sub
pop
push
add
mov
hlt
and
mov
ljmp
and
gs
mov
pop
sub
jae
cmpsl
gs
mov
or
and
sahf
or
cmp
adc
cmp
push
outsb
sbb
push
adc
add
into
insb
imul
ret
popa
out
fdivrs
pop
jbe
jg
add
dec
out
aad
imul
push
jnp
out
mov
xor
pop
fisttps
andb
lahf
jmp
insl
add
daa
mov
imul
sahf
addb
je
outsb
push
call
loope
mov
or
imulb
mov
imul
repnz
sub
inc
aaa
rorl
lods
xor
inc
mov
outsb
inc
pop
xor
jns
addl
inc
jnp
cwtl
pop
ljmp
xor
xor
cmp
xchg
out
cmp
adc
data16
and
iret
shrl
out
push
cmp
rclb
xchg
xchg
and
or
cmp
jns
lahf
imul
xchg
push
aad
lea
shlb
dec
add
mov
imul
cs
xchg
xchg
jnp
mov
sbb
adc
or
mov
ljmp
sbbl
sub
ret
xchg
xchg
data16
movsl
jae
insl
loopne
mov
mov
stos
jae
add
add
push
dec
sbb
xlat
shll
data16
test
das
test
call
fsts
dec
xor
stos
loope
inc
xchg
jle
push
cwtl
in
pop
loopne
mov
ljmp
adc
cmp
sahf
cwtl
aas
sti
push
roll
fisubl
daa
or
dec
fwait
mov
into
xor
leave
je
jnp
shr
ss
lcall
fimull
enter
dec
add
mov
xchg
out
sarl
int
cmp
and
mov
mov
dec
sub
push
jl
xchg
int
sbb
jg
lcall
xchg
sbb
dec
sbb
cmpsb
stos
mov
mov
sub
xchg
cmp
loop
and
inc
dec
mov
inc
inc
jge
addl
imul
inc
push
into
test
dec
aam
pop
stc
inc
mov
out
cld
es
mov
push
or
fisttpll
cmp
int3
loopne
mov
push
shll
pop
repnz
and
push
fdivrl
hlt
leave
jnp
fildl
cmp
adc
push
loop
rorb
pop
mov
addr16
mov
sbb
add
leave
inc
pusha
jecxz
push
test
or
cwtl
sub
pop
shll
loop
jb
inc
inc
push
pop
cmp
mov
push
in
out
mov
in
je
mov
daa
push
mov
sbb
sti
or
shrl
scas
push
sbb
jbe
ss
or
daa
dec
add
movsb
jmp
incb
je
jg
arpl
dec
loopne
cwtl
cmp
ja
or
pop
scas
jbe
arpl
lahf
iret
cmpsl
jbe
or
pop
mov
iret
mov
jne
out
pushf
push
jnp
faddp
pop
test
mov
cs
pop
xchg
jns
dec
pushf
dec
add
notb
pop
test
aaa
test
inc
sbb
adc
lret
jnp
arpl
pop
inc
jae,pt
jg
inc
loope
inc
cmp
cmp
into
fldlg2
push
sbb
invd
orl
mov
mov
dec
push
jmp
mov
call
xchg
sub
shll
ds
loopne
mov
mov
pop
in
repz
mov
pop
add
sbb
pop
cmp
cmpl
in
and
push
sbb
mov
or
sti
popa
in
adc
sahf
xor
fsubrl
jecxz
addl
jbe
inc
loopne
int3
adc
adc
fildll
or
out
mov
push
std
rorl
movsb
out
mov
sarl
sbb
ss
jecxz
mov
push
push
je
movsb
jno
add
mov
jmp
negl
pop
cmp
ja
push
stc
pop
adc
bnd
mov
add
fstpt
inc
les
mov
dec
sahf
nop
out
sbb
mulb
data16
jb
subl
in
sbb
push
mov
xchg
xor
jle
scas
les
inc
lahf
add
sub
push
out
pop
daa
std
out
gs
cmp
xor
fninit
push
loop
adc
cmpl
mov
pop
add
gs
addr16
cmp
or
rcll
add
cmpsb
loop
mov
outsl
ljmp
push
pop
bsr
mov
lret
outsb
outsb
pop
or
cmp
in
cld
dec
f2xm1
cmp
jbe
jle
adcl
jnp
push
xchg
cmp
sub
lods
push
mov
sub
dec
arpl
lods
push
stc
pusha
add
or
cwtl
es
add
stos
shrb
adc
sbb
aam
cmp
inc
aaa
dec
aad
adc
lret
xor
movsl
push
or
mov
mov
jle
cmpsl
adc
cmp
inc
dec
fstl
cmpsb
xor
lds
mov
pop
dec
shrb
out
mov
bound
hlt
daa
aaa
add
testb
ret
lahf
movsl
push
and
sbb
inc
pop
shrb
cmp
pop
inc
sub
cmp
mov
cmp
pop
jge
enter
cli
adc
xchg
mov
sub
in
xchg
es
mov
cmc
test
sarb
shrb
jae
add
jmp
push
xchg
sbb
pop
mov
add
jge
prefetcht0
fisubs
or
and
pop
icebp
cwtl
loopne
xchg
push
xchg
aaa
jg
sbb
push
insl
clc
inc
aas
inc
sub
aad
xchg
sbb
aam
fs
movsl
les
shr
sub
outsb
sub
out
or
std
je
ror
mov
es
cmp
outsb
das
stc
inc
es
adc
dec
stos
data16
imul
mov
sarb
jbe
pushf
stc
fiadds
adc
push
or
jne
push
mov
mov
enter
into
push
adc
out
out
cwtl
xchg
and
jp
jmp
push
cs
bound
in
mov
and
das
inc
push
test
jo
repnz
cld
cmpsb
fldcw
xchg
repz
mov
pop
dec
jo
insl
punpckhbw
aam
xchg
shll
outsb
adc
vmovaps
or
jb
iret
jne
sbb
jnp
out
clc
pop
out
xchg
loop
mov
sbb
sti
test
out
fistps
dec
in
fnstsw
pop
into
call
imul
jmp
cmc
jle
pop
xchg
aas
mov
sbbb
pop
lock
mov
andl
outsb
sbb
sarb
popa
xor
aad
push
repz
and
ret
add
adc
addr16
repnz
pop
mov
or
addr16
arpl
lret
adc
aas
in
pop
dec
repnz
mov
out
sbb
shll
call
mov
int3
pop
test
mov
push
cli
lahf
jle
aaa
pop
sub
je
fwait
into
add
call
cltd
insl
jmp
imul
xchg
push
mov
jo
dec
or
xchg
sub
aam
xchg
push
dec
xor
shll
pop
es
pop
dec
xchg
sbbb
dec
inc
out
pop
lcallw
fwait
mov
mov
lcall
jmp
cli
fimull
mov
pop
shlb
aam
lfs
std
jg
sbb
mov
sti
pop
lahf
ret
mov
les
notl
jge
sub
cmp
inc
mov
je
scas
xor
mov
xlat
clc
xchg
ja
fisubs
fwait
push
out
cli
ds
push
sbb
sub
and
lds
push
pop
out
sahf
xchg
loope
mov
jecxz
shrb
dec
sub
addl
lahf
adcl
add
push
push
int
mov
in
cmpsb
les
inc
xchg
loope
popf
adc
int
sbb
and
lret
mov
ret
iret
push
mov
xchg
mov
lret
jae
xor
in
jmp
and
cmp
sahf
and
aas
inc
cmp
mov
mov
or
adc
jbe
jl
mov
gs
mov
pusha
scas
pop
add
and
lea
out
mov
cmp
mov
enter
cmp
pop
add
in
jo
insl
faddl
cli
sbb
es
dec
add
inc
shrb
test
mov
cmpsb
rcrb
mov
insl
xor
sarb
mov
adc
inc
aaa
xchg
je
in
adc
xchg
bound
pop
mov
inc
aas
jnp
div
or
sbb
lahf
cli
pop
loop
pusha
in
lahf
lcall
ret
adc
fsubrs
xchg
mov
sbb
daa
push
pop
add
addb
fnstcw
fs
mov
or
idivb
cld
stos
shr
sbb
fisubs
fcoms
dec
jmp
jb
inc
jb
roll
xchg
jne
sub
and
sbb
or
or
mov
cmp
inc
xchg
mov
mov
icebp
cmp
scas
pop
adc
dec
cmp
push
sbb
nop
pop
inc
push
sbb
ja
cli
les
stc
rcrl
xchg
cltd
incb
cmp
aaa
mov
lods
and
mov
sbb
cmp
jbe
ret
repz
and
dec
out
int3
outsb
cli
filds
mov
add
fisttpl
dec
out
mov
push
fistl
enter
test
insl
xlat
sub
lock
xchg
lcall
jae
pop
loop
jle
sub
pop
ljmp
push
fmul
sub
pcmpgtd
out
lea
jecxz
mov
xchg
loop
xorb
pop
mov
adc
mov
adc
in
leave
ret
mov
sbb
push
adc
add
inc
dec
and
mov
shrl
jb,pt
ss
out
sub
inc
mov
add
stos
or
inc
mov
xor
push
out
popf
xchg
mov
pop
jo
fstpt
imul
enter
test
pop
xchg
dec
cld
fstps
xlat
inc
fwait
adc
adc
cli
mov
fwait
dec
xor
rclb
jo
dec
add
imul
lcall
lcall
fsubs
mov
or
push
lods
xchg
lcall
xchg
push
jbe
jno
sbb
and
dec
loop
insl
sub
mov
sbb
fistpl
inc
or
dec
out
adc
pop
jmp
sub
ffree
xor
push
push
push
push
fstp
dec
dec
pop
xchg
ret
enter
divl
aas
arpl
outsb
mov
fs
cltd
push
in
daa
jns
sti
hlt
mov
lods
add
loop
sub
scas
jg
xchg
jbe
push
mov
jno
lcall
mov
pop
out
mov
push
push
xchg
pop
and
mov
jmp
push
cmp
out
je
es
sbb
adc
push
mov
in
inc
scas
mov
daa
es
in
lods
add
jle
aad
test
mov
pushf
out
fbstp
jbe
icebp
sbb
rcl
divb
fs
loop
js
outsb
dec
or
sub
mov
or
call
mov
pmuludq
or
mov
sti
push
cmp
loope
imul
inc
adc
mov
xorl
mov
test
xchg
pusha
jae
movsl
sbb
jnp
rolb
push
icebp
fnstenv
cs
out
cmp
dec
scas
inc
pop
loopne
jge
neg
dec
shl
movsb
and
push
test
jb
mov
negl
fwait
adc
insl
mov
arpl
sti
jns
and
xchg
xor
sti
mov
push
jmp
divb
mov
mov
and
popa
sarl
cwtl
xor
aam
ds
xchg
popa
arpl
scas
dec
sbb
xor
aaa
iret
clc
sbb
sti
lahf
hlt
int3
jmp
iret
sub
fmuls
sub
mov
imul
roll
in
in
push
jl
jg
adc
inc
mov
jmp
mov
sbb
push
xchg
and
jae
or
iret
rorl
aas
or
xor
int
xchg
movsb
aad
fmulp
enter
cmp
pop
loopne
inc
test
stos
imul
int
sbb
jae
add
push
jnp
xchg
xor
imul
leave
dec
mov
jmp
and
shlb
xor
enter
pop
enter
mov
pop
jmp
inc
push
cld
xlat
dec
mov
mov
cmp
loopne
sbb
sub
aaa
lcall
decl
cmpsb
sbb
and
xchg
mov
sub
mov
pushf
test
push
nop
fdivr
jl
xorl
sbb
mov
nop
push
pop
movsl
sub
cmp
test
es
nop
addr16
push
sbb
sbb
ja
jnp
mull
adc
fcoms
lods
scas
mov
and
data16
jne
scas
pushf
dec
popf
repz
das
insb
ja
cwtl
aas
adcl
jno
arpl
adc
leave
loope
mov
cli
ds
aas
or
nop
out
std
and
add
cli
cltd
mov
lock
cwtl
test
int
jecxz
xor
jmp
xor
in
and
sbb
cs
cmp
testb
pop
in
mov
test
imul
ljmp
aas
add
dec
fstps
xor
xchg
add
out
das
xor
fidivl
jnp
fnstcw
imul
mov
add
aam
xor
xchg
loope
xchg
jl
out
mov
and
sbb
cmp
cld
shlb
push
test
cmp
dec
adc
adc
test
rorb
mov
and
bound
pop
mov
loopne
in
xchg
nop
mov
popa
scas
decl
cld
clc
push
sbb
mov
mov
sbb
or
cmp
mov
inc
lds
mov
xor
daa
loopne
cmp
stos
popa
dec
mov
imul
stc
jge
xor
stc
or
jb
mov
inc
push
ss
jecxz
out
push
test
daa
into
cmp
in
push
mov
push
dec
pushaw
xor
mov
push
xchg
cltd
imul
imul
int
aad
xchg
hlt
adc
mov
ja
mov
pop
pushf
sub
loope
jp
shll
mov
jae
cmpl
fwait
cli
sbb
mov
shrl
cmp
mov
fcompl
cmp
xchg
sbbb
cli
cld
xchg
jg
out
shrb
adc
stos
or
sahf
sbb
outsl
sbb
jmp
pop
fucom
aas
mov
aas
iret
xor
aas
in
push
xchg
sub
addb
leave
mov
adc
lods
add
pop
xor
push
adc
sarl
pop
daa
sahf
jbe
fidivrl
cs
add
cs
lods
lret
ljmp
stc
imul
sbb
pop
daa
cmpsl
or
and
lock
jecxz
hlt
repnz
mov
mov
mov
pop
sub
test
lods
xor
fcompl
adc
sar
lods
dec
sbb
jne
pop
pop
ficomps
insl
enter
lahf
cmp
ljmp
cmp
add
loopne
js
mov
push
and
frstor
iret
xchg
test
add
or
mov
lods
movsb
ljmp
cmp
cmc
icebp
jnp
xchg
push
std
mov
cmpl
repz
pop
cmpsl
pop
icebp
sub
dec
gs
arpl
xchg
push
cltd
clc
inc
inc
rclb
jle
dec
jne
xchg
in
or
sbb
ja
sbb
sarl
sbb
mov
sub
enter
add
out
sti
push
call
out
mov
ret
jo
add
cltd
xchg
pop
test
xchg
out
push
push
movsb
sub
pop
jno
xor
pop
push
jecxz
or
inc
jp
inc
insb
add
adc
adc
inc
jecxz
jne
into
shlb
mulb
mov
mov
orl
push
sub
rolb
adc
xchg
mov
fstps
mov
xchg
jmp
and
add
push
sub
jae
mov
iret
popf
imulb
addr16
and
sub
mov
aaa
sbb
daa
loopne
xor
decl
call
jae
jge
subl
ljmp
push
jmp
jle
xorb
scas
inc
mov
inc
addb
out
fldl
push
xor
mov
add
je
jne
movsb
jp
ror
push
fldl
dec
cmp
sub
lods
shlb
ret
arpl
mov
or
and
push
cwtl
sti
mov
scas
push
mov
adc
mov
mov
lds
sbb
ljmp
adc
ret
xchg
mov
adc
mov
cli
pop
pop
jge
push
add
xor
fidivrs
mov
test
add
jp
mov
mov
adcl
push
xor
cmp
leave
xchg
and
inc
out
add
fwait
out
fcmovnb
dec
jge
jns
sbb
jae
ficoms
adc
syscall
sbb
pop
push
loop
xchg
lds
or
ss
push
and
call
in
das
test
adc
mov
sbb
leave
divb
xchg
fsts
iret
xchg
add
or
inc
loopne
test
fisubl
xor
push
or
push
push
inc
mov
cltd
mov
cmpsl
lret
adc
or
mov
mov
mov
nop
pop
dec
push
mov
cmpsl
sub
xlat
addr16
cmc
test
gs
dec
cmp
jae
mov
push
arpl
xchg
outsb
and
dec
pop
cmp
ljmp
inc
xchg
cmpsl
mov
aaa
sbb
std
repnz
outsb
insb
pop
mov
or
push
adc
test
mov
aad
add
idivl
jno
lods
dec
sbb
outsb
or
cld
and
outsb
mov
fdivr
out
sbb
test
mov
add
xchg
dec
mov
fmuls
repnz
mov
sub
jg
mov
or
js
pop
testl
adc
addr16
scas
sbb
jl
lret
and
jp
jnp
fcomip
inc
out
into
rolb
mov
bound
push
xlat
roll
shrl
sti
shlb
mov
push
lret
repnz
out
sbb
push
pop
enter
jns
push
xor
movsb
pop
aam
pop
mov
pop
cs
push
clc
outsb
adc
and
jb
popf
xor
es
dec
test
xor
mov
push
adc
rorb
jno
or
xchg
push
in
dec
xchg
faddl
dec
aam
setl
jmp
leave
imul
add
mov
cmp
sbb
js
xchg
insl
popa
ja
mov
es
test
mov
dec
pop
and
scas
xchg
filds
sub
andb
sbb
sbb
mov
or
rclb
aad
pop
in
add
xor
scas
inc
repnz
dec
cwtl
add
stos
xchg
adc
ljmp
das
dec
or
movsb
dec
jnp
mov
or
cmp
or
sarl
or
lahf
xchg
push
add
push
dec
ror
and
adc
mov
in
xchg
out
push
ret
popa
mov
ja
jg
xlat
xchg
imulb
lret
or
decb
cmpsb
inc
xchg
cmp
loopne
imul
pop
and
mov
ret
int3
fstps
popa
jmp
fwait
cmp
in
inc
push
add
xchg
stc
adc
adc
jmp
mov
xchg
and
sbb
sbb
aad
cmpsl
push
aas
dec
es
scas
fsubr
inc
fisubl
fsubs
cmp
rolb
cwtl
ss
pop
dec
mov
rorl
sahf
out
pop
xchg
xlat
xor
or
fbld
sahf
push
jno
xchg
xchg
add
rcll
adcb
rcrl
mov
push
xchg
dec
push
jae
xor
aas
lock
dec
cmpsb
xor
sbb
mov
mov
mov
xor
xchg
ss
pushf
xchg
lea
in
or
ret
or
jg
ds
xchg
es
jns
xchg
mov
jmp
jo
je
sbb
cs
cmp
insb
add
inc
repz
mov
dec
adc
aaa
sbb
mov
cmp
scas
push
and
aas
pop
int3
lret
push
mov
test
and
jmp
or
aas
sahf
jmp
daa
repz
loop
cmp
ja
testb
arpl
or
fsubp
or
fstps
jne
cld
jae
jae
xlat
rcrl
icebp
std
fstl
jno
push
sbb
les
daa
rcr
mov
lret
iret
scas
push
mov
pop
dec
js
inc
xor
push
sbb
int
test
movsb
add
stos
fldenv
cmp
xor
repz
push
pusha
sbb
insb
push
nop
jge
jns
jg
pop
into
or
and
or
mov
xor
inc
fnsave
or
mov
out
idiv
inc
add
es
push
mov
lcall
daa
out
fisubrl
jno
scas
jmp
inc
test
cld
je
adc
enter
mov
xorl
push
adc
out
inc
adc
xchg
jnp
push
fnsave
push
dec
lret
ficoms
fxch
clc
enter
faddp
test
mov
daa
pop
adc
dec
fildl
inc
add
dec
outsb
enter
jns
push
mov
sahf
add
fdivrp
loopne
mov
push
cli
aas
imul
mov
jge
dec
pop
lret
mov
sbb
test
lods
test
mov
lret
shlb
loop
inc
outsl
mov
push
pop
mov
in
popf
stos
sub
add
mov
pop
stc
cmc
inc
fstp
inc
mov
pop
push
aad
pusha
mov
and
aam
xor
jl
out
fistps
sbb
call
jns
mov
stos
xchg
pop
test
xor
fs
cmc
dec
or
bound
stos
cmc
lahf
inc
mov
push
jbe
cwtd
inc
mov
gs
neg
roll
adcl
pop
inc
push
aas
arpl
sbb
inc
push
movsl
jae
je
push
ds
repz
pop
hlt
lods
cwtl
jae
xchg
push
div
das
neg
inc
push
sbb
inc
or
notb
shll
shll
jns
inc
or
fbld
mov
mov
push
xor
popf
dec
pop
vmaxpd
loopne
push
dec
in
shl
outsb
xlat
in
dec
loopne
sbb
fistps
hlt
mov
xchg
cltd
push
pop
sbb
lds
movsb
lret
cltd
jnp
pop
jbe
adcl
pop
lea
pop
jne
inc
xchg
mov
jno
inc
sub
shl
inc
jp
rcr
sub
pusha
fsubrs
dec
movsl
pop
rolb
pop
mov
mov
xor
mov
sbb
rolb
xor
xchg
cltd
aaa
pop
cwtl
add
jbe
sbb
shl
sbb
fstpt
xchg
fldcw
lods
rorb
movhps
lret
push
xchg
in
lahf
es
mov
loopne
stos
gs
and
inc
jae
outsb
cmp
imul
pop
mov
in
mov
jmp
out
fidivrs
aam
lret
movsl
push
cwtl
arpl
push
mov
sub
push
jnp
add
insl
pop
in
xchg
xlat
mov
testb
mov
mov
std
dec
sahf
jmp
pop
mov
je
pop
mov
les
es
cltd
aad
enter
jno
xchg
or
movsb
jmp
mov
popa
jnp
mov
out
fwait
and
jl
and
shrl
inc
cld
nop
mov
mov
aam
icebp
lds
add
sbb
sub
push
stc
lcall
call
std
adc
mov
add
imul
jae
repz
pusha
dec
xchg
into
xchg
push
add
icebp
popa
mov
pop
xchg
idivl
jno
xchg
insl
movsb
add
jl
fisubl
mov
pop
loopne
inc
test
push
xor
or
mov
insb
sbb
dec
jmp
push
mov
sahf
fmuls
mov
fprem
in
sti
mov
dec
out
insb
fwait
ss
stos
push
sub
and
sahf
jno
mov
jmp
mov
add
sub
dec
bound
sub
mov
pop
mov
pop
js
lcall
aad
paddw
and
xchg
xor
xchg
jns
mov
mov
jae
jmp
jo
push
lret
xchg
xchg
ret
icebp
adc
lock
pusha
mov
push
pop
inc
lret
mov
daa
or
mov
jns
test
mov
xor
popa
rcl
push
bound
xlat
xchg
pop
or
sar
mull
or
pop
out
rcrl
and
popa
repnz
dec
in
pop
fisubrl
jno
adc
mov
mov
out
push
aas
mov
or
out
test
fisttpll
cmp
call
pop
jns
mov
cmp
lret
mov
test
fmull
je
cs
dec
jbe
add
sub
jle
daa
push
insl
repz
xchg
and
out
xor
xlat
inc
stos
jb
andb
mov
fisttps
xchg
mov
loop
cmpps
and
jecxz
cmp
jns
push
jnp
int3
mov
movl
adc
scas
xor
push
xchg
stos
add
das
sub
idiv
xor
jmp
mov
sub
sbb
push
push
sbb
lods
in
mov
or
scas
lods
repnz
jae
insb
xchg
fnstenv
push
in
loopne
clc
add
xchg
sbb
dec
in
mov
stc
add
lods
dec
push
fiaddl
push
adc
add
and
sub
add
cs
push
cmp
xchg
das
loop
les
cli
pop
mov
fsubrs
popa
inc
lock
fnclex
push
icebp
cmp
mov
ja
dec
ficoml
clc
mov
je
scas
icebp
jl
fsubl
dec
mov
stos
xor
pusha
gs
jp
lock
lret
xlat
dec
js
loopne
out
popa
xchg
stc
add
inc
jl
mov
xorb
mov
in
daa
lcall
insb
outsb
pushf
lods
pop
mov
sub
mov
cmpsl
mov
mov
lcall
add
fmuls
mov
xchg
sub
pop
scas
cmp
or
call
lea
pushf
je
hlt
sbb
mov
pop
sbb
push
popaw
in
and
dec
cmp
inc
add
jge
xchg
cmpsl
pop
or
push
enter
stos
fisttpll
inc
jle
inc
sbb
cmp
xor
pop
sbb
jg
add
or
cmp
lahf
lahf
sti
jnp
mov
xchg
pop
bound
sbb
pushf
push
addr16
jae
ljmp
sarb
push
aas
fisubs
fcompl
lea
in
push
dec
push
nop
ja
add
adc
jns
icebp
fcomps
add
movsl
ret
test
xor
dec
rcl
adc
or
ds
pop
cmp
mov
jns
xchg
addb
inc
sbb
mov
sub
inc
mov
sti
jmp
xchg
xchg
aaa
test
sbb
pop
arpl
sbbb
lods
lret
push
loop
add
xor
xchg
mov
lahf
dec
sub
adc
xchg
xlat
push
cwtl
sub
lods
mov
scas
jno
jnp
stos
roll
gs
enter
bound
shl
test
cmp
adc
jp
pop
cmp
push
adc
ficoml
in
xor
movl
inc
scas
in
stc
data16
je
shrl
jno
fdivrl
push
inc
mov
leave
cmp
int3
xrelease
loopne
adc
cs
fildl
mov
inc
mov
pop
lods
mov
push
push
clc
fidivs
andb
stos
fwait
leave
and
adc
mov
outsl
loop
int
xlat
fdivrl
or
inc
sahf
dec
jp
clc
popf
fmull
or
sbb
lret
pushf
popa
jge
xor
mov
pop
sbb
mov
jge
fnsave
cmpl
sub
mov
jae
ljmp
mov
inc
cs
xor
mov
ss
bound
jb
scas
sub
ja
insb
sbb
xchg
pop
adc
scas
inc
xchg
pop
cmc
ss
sub
mov
push
movsl
aam
int3
or
mov
cmp
jge
fsubl
clc
sbb
cmpsl
es
mov
sahf
negb
outsl
inc
and
xlat
sbb
xchg
popa
jge
cltd
xor
dec
mov
sbb
jno
out
jmp
dec
add
add
dec
fisttpll
mov
decl
xchg
call
outsb
xchg
mov
mov
call
mov
call
aaa
or
in
sub
lret
frstor
aad
fsubs
cmpsl
shrl
test
stos
push
js
push
popa
test
mov
inc
lea
adc
aad
lods
lods
les
enter
out
jge
pop
outsl
inc
mov
jmp
sahf
ficomps
pop
jnp
push
inc
add
adc
arpl
lret
add
hlt
es
jbe
inc
and
cmp
push
sub
mov
sub
push
lret
push
dec
scas
push
lret
dec
jmp
jl
cmc
shlb
sbb
mov
lcall
adc
pop
lea
aad
mov
cmc
fisttpll
mov
pcmpgtw
stos
rclb
pop
sub
pusha
mov
iret
jae
push
and
add
jo
into
ja
adc
inc
xor
das
lds
popa
bnd
fisubs
sub
push
fimull
add
mov
lahf
out
mov
cltd
sbb
lret
loope
xchg
cmp
and
push
je
outsl
cmp
push
inc
mov
movsl
dec
jae
cli
jmp
mov
pop
mov
add
insl
addb
aad
xchg
xchg
ret
xlat
aad
pop
xchg
push
aad
sbbb
sub
mov
lock
in
inc
ret
push
popa
jecxz
aam
jb
cmp
mov
repz
adc
mov
adc
and
sbb
aaa
jb
mov
arpl
mov
pop
in
jnp
jecxz
mov
scas
rclb
imul
mov
andb
pop
and
scas
inc
addr16
and
or
dec
xchg
sbb
aaa
mov
mov
mov
sbb
jmp
sbb
fdivs
xchg
arpl
cli
and
pop
fwait
jbe
xchg
fsubrp
clc
lcall
sbb
add
pop
aas
je
mov
jl
scas
mov
fstpt
adc
or
call
fldcw
ret
jne
mov
jl
daa
inc
out
mov
shlb
leave
sbb
push
adc
and
xchg
movb
les
inc
mov
inc
inc
push
inc
adc
inc
sub
rorb
mov
mov
adc
jge
xchg
or
leave
cmp
scas
insb
jl
pop
add
loop
addr16
dec
dec
movd
fldt
shll
jns
push
push
push
pop
and
fstps
mov
fsts
mov
ljmp
and
sub
jp
mov
sahf
int3
mov
mov
sub
rorb
imul
out
lret
arpl
jge
rclb
xchg
inc
in
sub
or
outsl
icebp
in
lahf
repz
mov
faddl
sbb
and
jo
ficomps
outsl
jnp
into
pushw
sti
insb
loop
test
push
notl
std
sub
pop
shlb
jbe
movsb
jmp
dec
sar
out
in
pop
lds
loop
fs
test
jle
scas
movsl
repnz
sbb
cltd
into
mov
in
out
js
cmc
sbb
iret
orw
popf
jbe
addr16
lds
push
movsb
xor
pushf
mov
adc
cmp
xchg
mov
das
aas
mov
jge
cwtl
sarb
xor
test
sbb
int
mov
stos
cwtl
inc
jb
lds
push
mov
jo
cwtl
into
push
std
insb
mov
das
cmp
add
cli
mov
aam
test
scas
out
iret
or
ljmp
push
mov
dec
push
mov
pop
mov
dec
push
xor
out
adcb
aaa
or
pop
add
jl
divb
adc
pop
or
sbb
jne
mov
mov
xor
leave
icebp
repnz
mov
les
sub
mov
loop
jo
dec
notb
mov
mov
fnstcw
pop
scas
lods
es
stc
ret
jb
push
sub
cmpsb
and
xor
add
in
sarl
mov
mov
pop
and
stos
hlt
jb
push
leave
loopne
loopne
pushf
sarb
inc
shll
mov
punpckhbw
pop
xchg
dec
arpl
jecxz
dec
sub
jg
xchg
pop
pop
pop
cltd
and
or
inc
xor
dec
adc
out
rorl
xchg
xchg
jns
xor
or
jns
out
enter
sbb
xor
push
lret
out
aad
xchg
sbb
sbb
nop
out
ja
jae
add
jmp
nop
aad
mov
rcll
ficoml
cmc
cmp
add
dec
movsl
jmp
cmpsl
es
adc
jns
les
imulb
int
sub
jb
or
xchg
enter
mov
add
xchg
andb
pushf
jg
pusha
push
imull
mov
pop
mov
lret
push
arpl
cmc
mov
mov
push
aas
jns
aad
into
in
cltd
add
add
sahf
sub
std
pusha
cwtl
push
lea
adc
imulb
lret
jbe
scas
addl
xor
enter
cmp
inc
push
stc
sarl
ret
push
loope
ret
mov
jo
fists
scas
sar
leave
pop
mov
test
imul
and
repz
and
jmp
fdiv
mov
jmp
dec
daa
xchg
hlt
mov
decb
pop
cltd
mov
adc
pop
bound
xchg
jne
aaa
fs
loope
imul
mov
cs
sub
rcrl
mov
imul
ret
scas
add
sbb
jno
enter
cmp
nop
pop
outsb
dec
mov
shrb
lods
xchg
sbb
stos
xor
aas
popf
sbb
adc
dec
mov
out
mov
mov
pop
xchg
in
and
inc
lret
jnp
pop
mov
sbb
pop
shlb
sbb
outsb
in
in
fwait
outsb
xor
pop
call
jae
dec
rolb
test
fucomi
es
fs
rolb
mov
in
and
inc
mov
ret
cmp
pop
xlat
sub
ficoms
aad
sub
mul
shlb
test
inc
outsb
push
mov
nop
lret
imul
pop
jo
ja
adc
xor
xor
fs
dec
dec
lahf
into
mov
add
xchg
mov
mov
dec
lret
cld
dec
cmp
flds
xor
jl
jno
xchg
xchg
data16
int3
enter
lods
mov
mov
sbb
call
out
inc
call
cmpsb
jg
mov
jbe
jae
adc
int
fidivs
mov
test
dec
sbb
push
sub
pop
sti
xchg
adc
call
xchg
mov
rcrl
stos
mov
xor
dec
mov
inc
xor
stos
pop
fdivs
lock
or
popf
adc
mov
mov
stos
cmp
add
xchg
and
mov
movsl
lret
ds
mov
nop
push
pop
lret
ret
or
xor
dec
jae
pop
cmp
icebp
pusha
repnz
int
lods
xchg
jnp
testl
pusha
mov
mov
or
cld
dec
clc
inc
insb
es
sub
xor
dec
insl
pop
add
call
mov
call
ret
or
pop
lahf
js
nop
leave
lods
add
ljmp
sar
xor
dec
cmp
popf
mov
cs
cwtl
push
jae
sbb
xor
mov
and
pop
pusha
bound
and
inc
enter
lds
in
mov
popa
sbbl
in
out
adc
xlat
push
jge
xchg
fstpt
aaa
ja
inc
xchg
cld
ficompl
mov
adc
inc
iret
fimuls
pop
scas
arpl
stos
aaa
shlb
mov
repz
sbb
and
add
mov
pop
in
or
push
fisubrs
adc
mov
and
jg
fwait
rorl
andl
fyl2x
repnz
xchg
push
je
mov
pop
pop
inc
hlt
dec
das
outsl
sbb
outsb
jno
cli
andl
xchg
or
shll
sbb
inc
dec
scas
pop
push
mov
mov
jnp
push
cltd
loop
imul
les
mov
mov
pop
pop
int3
mov
lock
iret
dec
scas
xor
dec
in
jae
fwait
enter
call
nop
push
add
pop
outsb
int3
sbb
aad
mov
in
cmp
inc
sub
aas
aas
adc
xor
paddb
jns
in
lods
je
insb
mov
mov
inc
repnz
mov
and
nop
adc
lcall
sub
jg
cmpsb
inc
jmp
orl
cmp
mov
mov
jnp
insl
in
xchg
sahf
or
mov
pop
adc
ret
mov
inc
mov
inc
mov
xchg
dec
dec
test
jno
into
mov
jnp
mov
jg
xchg
out
mov
push
mov
xchg
jnp
dec
popf
inc
mov
mov
lds
je
sbbl
inc
mov
stos
jno
xchg
clc
dec
cli
xchg
mov
movsb
jg
jg
cmp
or
nop
jae
pop
push
xchg
sub
cltd
mov
nop
dec
jo
leave
mov
ss
cmp
pop
movsb
mov
sbb
into
xchg
or
lcall
ret
out
push
stos
ret
sub
daa
and
jne
imul
mov
push
fsts
or
mov
cmc
cmpsb
imul
and
or
in
pop
push
stos
xchg
hlt
adc
fdivs
movsl
pushf
mov
pop
je
fmuls
add
cli
scas
jo
jp
push
dec
cmpsb
xor
sbb
outsl
jle
xchg
jnp
adc
out
pop
and
mov
mov
dec
aam
sbbb
lock
push
inc
std
mov
add
xchg
fs
add
dec
mov
imul
cmp
ret
cwtl
cmpsl
sub
jne
jb
pop
aas
faddl
test
xor
push
loopne
movsl
sub
mov
testl
mov
roll
out
cli
dec
cs
fs
pop
xor
push
test
jae
negb
ss
mov
loopne
in
dec
sbb
xchg
pop
push
mov
aam
or
push
test
cmpsl
int
and
cmp
mov
mov
aaa
outsl
sbb
xchg
lahf
outsb
stos
xchg
push
pusha
and
push
inc
adc
jbe
adc
pop
jb
cmc
gs
fnstcw
sbb
fmul
pop
add
mov
popa
das
sbb
cld
mov
stc
dec
lcall
jne
jg
mov
cmp
and
loopne
pop
rclb
dec
jae
ja
fsubr
dec
sarl
jnp
xor
push
and
add
jnp
insb
push
imul
mov
and
clc
out
iret
repnz
inc
or
adc
iret
dec
test
mov
jg
jbe
andb
mov
dec
test
dec
jne
jl
fistl
pusha
popa
sbb
out
cmpsl
mov
sbb
pop
jo
mov
and
jo
xchg
adc
into
sbb
in
fs
push
scas
xchg
lret
leave
xlat
adc
sbb
jns
cmp
or
loope
inc
sti
cmc
popl
loope
fs
mov
push
in
daa
sub
dec
int
sub
in
jnp
jae
xlat
imul
adc
test
frstor
lret
xchg
cmpsl
inc
pop
orl
iret
and
outsl
ss
adc
in
dec
push
iret
popl
cmp
stos
fistl
xor
xchg
in
test
imul
sub
std
sub
inc
loopne
or
push
inc
pop
movsl
rcll
push
jne
push
jp
pop
fildl
add
loope
fcomps
ficomps
test
push
xor
sub
out
rcr
out
and
xlat
mov
and
mov
lret
jo
xchg
cmpsl
ficoms
inc
lods
mov
movsl
mov
sarb
xor
in
mov
inc
sbb
adc
mov
stos
dec
xchg
fwait
push
aad
and
into
inc
aaa
out
out
mov
mov
xor
sbb
jbe
mov
jb
adc
or
test
sub
xchg
stos
or
das
repz
lahf
jp
cltd
xchg
ds
pop
aad
ljmp
mov
jmp
into
cmp
mov
lock
ds
adc
xchg
cmp
adc
cmpsl
ja
rcr
add
outsb
mov
mov
in
push
ljmp
xchg
dec
rclb
ret
dec
sbb
or
insb
dec
hlt
pop
mov
jecxz
out
outsl
cltd
and
jecxz
push
out
dec
ljmp
xor
test
nop
sbbb
xor
dec
jbe
lret
hlt
push
mov
into
call
xor
and
aas
xchg
jge
and
sub
in
jns
or
mov
and
insb
pusha
push
mov
mov
nop
and
sbb
xchg
sti
push
daa
cltd
out
cltd
xchg
xchg
mov
mov
mov
gs
or
repnz
je
test
dec
out
xchg
pop
adc
pop
int
dec
mov
out
mov
add
pop
mov
pop
jnp
mov
lcall
pop
sbb
addr16
repnz
and
outsl
pop
xor
ds
daa
mov
inc
sarb
out
and
push
xchg
jge
sahf
in
iret
scas
dec
out
cmp
lods
iret
aas
cmp
insb
pop
jbe
inc
mov
js
jne
ds
adc
or
jge
or
in
adc
mov
jle
jecxz
dec
push
jne
adc
mov
inc
pushf
imulb
xchg
mov
pop
or
std
fcomi
lds
cmpsl
mov
fnclex
fdivl
outsb
out
cmp
inc
idivb
dec
inc
inc
sub
xor
aad
scas
gs
ret
scas
enter
daa
xor
aas
adc
xor
inc
rcll
cld
cli
fisubl
dec
sti
popf
xchg
pop
fsub
push
inc
pushf
and
jbe
out
lock
push
in
add
fdivrs
in
xor
mov
scas
jns
nop
add
pop
pop
push
pop
sbb
sub
fsubrl
mov
hlt
test
pop
addr16
jns
ja
inc
push
mov
ret
rol
pop
add
xorb
mov
push
lods
out
mov
sbb
fdivp
sbb
or
in
fstl
jecxz
xchg
hlt
xchg
iret
add
imul
and
xor
aad
push
ret
and
add
cs
push
aaa
fs
xor
sbb
lcall
out
fisubs
stc
mov
dec
jecxz
std
fs
push
lods
cmp
xor
sub
xchg
loopne
and
sbb
scas
scas
dec
lds
mov
shrl
push
cmp
fists
mov
mov
pop
ror
in
add
mov
sti
test
imul
cmp
mov
lods
outsl
cmp
and
hlt
xchg
testb
out
rolb
repnz
fwait
cmp
pop
xchg
sub
cli
sbb
mov
addl
das
or
jg
mov
mov
sbb
arpl
adc
jo
mov
dec
insb
jmp
fmull
xorb
icebp
lea
outsb
pop
push
jmp
lea
filds
cmpsl
inc
pop
repnz
cmp
cmc
aas
push
imul
das
jl
inc
inc
cmp
fnstenv
xchg
aaa
and
outsl
mov
bound
jge
pop
cs
cmpsb
push
out
inc
xor
loopne
loop,pt
aam
xlat
jge
jnp
in
pop
add
and
scas
in
pop
xorb
mov
adc
or
fsubrl
jnp
adc
clc
mov
pushf
cmp
pop
add
xchg
pop
nop
gs
sahf
into
fdivrl
jae
mov
mov
mov
pop
arpl
pop
sbb
cs
in
xor
icebp
out
sbb
jle
cmp
std
push
cwtl
mov
mov
mov
and
pop
pusha
daa
es
jp
and
movsl
and
mov
xchg
push
pop
and
and
lret
xor
jp
xor
imull
mov
mov
mov
mov
or
stos
test
dec
jmp
std
lock
xchg
dec
add
mov
aad
dec
sbb
xchg
or
pop
adc
push
push
fistps
pop
pop
pushf
add
xorl
jne
and
jl
jb
orb
xlat
lahf
repz
jb
pop
iret
lods
mov
and
mov
dec
cld
adc
ljmp
shll
pop
dec
fstpl
cmpsl
fwait
in
xchg
jp
shlb
outsb
into
notb
int
hlt
bound
sbb
lahf
xchg
mov
cmpl
adc
pushw
xchg
test
stc
xor
push
xchg
mov
xor
mov
push
repnz
and
es
xor
xchg
or
clc
push
jo
push
xchg
pop
aam
adc
imul
test
mov
stos
out
shll
out
xchg
and
inc
xchg
xor
out
ret
push
ss
push
bound
inc
jle
cmp
mov
lea
divl
data16
out
sub
adc
fisttpl
int
cli
jno
and
xchg
dec
push
mov
sub
jae
data16
in
test
stos
adc
xlat
push
lods
aam
push
cltd
cltd
jns
or
push
push
std
int3
xchg
pop
fs
in
inc
mov
pop
test
ret
movsb
ss
cmp
mov
int3
aas
sbb
rcrb
jbe
pop
pop
sbb
push
add
les
cmc
out
or
subb
mov
add
stos
rcrb
mov
and
data16
mov
lahf
fbld
in
mov
xor
in
add
jnp
cltd
fdivrs
cmc
lcall
jb
and
push
lea
imul
jno
jno
jo
push
xchg
cmp
push
outsb
mov
jmp
xchg
pop
leave
mov
mov
mov
jne
movsb
push
cmc
out
pusha
and
aad
push
and
pop
jbe
out
sub
or
out
jp
adc
aas
insb
push
xchg
addr16
dec
sbb
dec
movsb
jecxz
leave
ljmp
hlt
hlt
sub
xor
daa
mov
lds
xor
fisttpl
inc
adc
mov
sarb
push
cli
lret
in
mov
adc
loopne
pop
xchg
sub
imul
lods
jl
xor
xlat
data16
lods
lret
cli
divb
testl
push
jns
mov
ss
push
lret
fucomip
js
enter
ss
bound
popa
in
pop
add
sarl
sub
imul
adc
fxsave
ret
mov
ret
popf
adc
and
out
xchg
add
xchg
ljmp
pop
nop
push
pop
push
cli
sub
dec
sbb
mov
addl
loope
lds
add
inc
mov
inc
push
fs
or
repnz
xchg
rcr
bound
mov
addr16
pop
xchg
mov
fidivl
xor
jge
push
push
cmp
xchg
mov
les
add
lcall
mov
movsb
rorl
test
dec
incb
cmpsb
push
jg
mov
add
gs
jl
loope
sbbl
mov
daa
push
jle
mov
movsl
shrb
sti
and
cmp
addr16
xchg
sti
loopne
add
mov
lods
jo
pop
dec
and
inc
aaa
imul
imul
adc
bound
sub
and
out
mov
sti
sub
adc
test
mov
add
mov
loopne
int
jo
lock
adc
lds
test
and
sub
rcrl
sub
push
fistl
or
add
sbb
dec
popa
jmp
or
inc
dec
fdivrl
js
out
sbb
push
inc
call
dec
pop
idivb
mov
sub
xor
mov
adc
xchg
cmp
shr
add
adc
dec
cmp
and
mov
pusha
ds
bound
cmpsb
pop
or
repnz
or
notl
bound
xor
or
cmc
int
stos
sub
push
lret
lahf
fmull
daa
out
sbb
xor
cmp
pop
inc
jb
js
sub
push
cmp
dec
imul
jbe
pop
mov
jno
mov
jbe
push
xchg
ja
mov
iret
inc
cwtl
or
andb
jb
push
inc
out
and
mov
lcall
add
insl
pop
sbb
dec
add
aas
imul
outsl
sti
in
outsb
adc
jb
jb
mov
movsb
jmp
mov
or
cmp
dec
jns
sar
jno
loop
xchg
lds
pop
sub
xchg
sbb
fmul
shrb
ret
xchg
xchg
inc
dec
loopne
lea
in
out
test
call
jmp
and
dec
or
cmp
jb
jns
imul
in
push
sbb
jnp
pop
and
incb
lcall
xchg
test
loop
add
mov
insl
popl
add
and
mov
icebp
stc
in
xchg
dec
popf
add
cltd
mov
lcall
bound
sub
aad
dec
insl
sub
mov
pop
movsb
lcall
cld
xchg
mov
mov
mov
lods
mov
sbb
lods
fwait
sbb
mov
mov
sbb
mov
mov
cli
outsl
les
fcomps
test
test
cltd
add
push
jae
imul
sbb
sub
lock
cld
adc
aam
fcomp
cwtl
subb
loope
pop
in
mov
mov
or
xchg
mov
pop
popf
mov
orb
fisubl
out
xchg
dec
fmul
and
ret
sub
dec
sbb
jmp
sbb
pop
mov
jp
dec
push
xor
mov
mov
fcmovu
in
fstpl
aas
sub
push
inc
push
enter
push
addr16
test
pop
jle
pushf
sub
inc
inc
pop
pop
adc
pop
pop
cmpsb
sbb
lods
xchg
push
adc
hlt
mov
jmp
ror
sub
push
sbb
and
je
or
mov
gs
jge
in
xchg
push
call
xchg
sbb
cmp
into
popf
gs
das
jmp
jnp
mov
std
scas
outsb
push
js
daa
add
xchg
fimull
push
movsb
fmulp
lret
dec
aam
xchg
ss
ret
cmc
dec
jge
int
lret
xchg
into
cwtl
lahf
jne
cmp
fucom
jg
aas
push
mov
pusha
movsl
sub
mov
scas
das
mov
lahf
add
mov
fwait
or
adc
fidivrl
test
adc
outsb
jns
sti
and
pop
inc
scas
aas
pushf
in
mov
cmp
ja
jmp
adc
xchg
sbb
pop
popa
pusha
pop
in
push
mov
mov
xchg
pop
test
xchg
ja
call
js
push
xlat
dec
out
xchg
lds
push
mov
sahf
mov
stc
sub
cmp
mov
cwtl
pop
push
add
add
xchg
sub
xchg
jecxz
test
xchg
popf
dec
shrl
dec
jae
sub
rcll
jmp
or
fisubrs
scas
mov
xor
and
cmp
adc
and
adc
sbb
add
jl
imul
push
pop
jle
pop
addr16
lds
jl
jl
scas
inc
xchg
push
shl
cs
cltd
and
not
or
sarl
cli
sbb
fldt
xchg
ljmp
aas
imul
jmp
jne
dec
lret
cltd
xchg
jge
push
int
sub
mov
and
and
cmp
out
je
push
xor
fcmovnb
and
imul
repz
xor
mov
and
and
push
aas
or
pop
dec
pop
mov
xor
cld
fndisi(8087
xlat
inc
xor
ds
shr
cmp
pop
insb
mov
sbb
inc
insb
shlb
out
rcr
aad
jne
xchg
daa
into
mov
and
cmp
fs
into
les
clc
dec
mov
sub
inc
or
lret
inc
sbb
in
xchg
push
mov
je
dec
add
pop
js
jne
add
in
fdivrs
or
cmp
addr16
and
and
mov
jo
inc
mov
lret
shll
sbb
sub
fiadds
fldl
cmp
ret
add
insl
filds
pop
xor
xchg
adc
stos
sub
mov
sbb
mov
stos
push
pop
stc
mov
or
jno
lea
sub
cli
pop
nop
cmp
in
lods
loope
out
sub
notb
push
push
xchg
sub
jle
loopne
jb
call
jg
int
inc
adc
dec
stos
stos
xor
ret
pop
mov
push
sti
fs
sub
adc
addl
jmp
pop
inc
lds
mov
es
dec
mov
sbb
in
jecxz
and
cmpsl
cmpsl
adc
sub
aaa
in
xor
add
xor
jl
mov
bound
fcoml
sbb
or
push
add
shlb
add
inc
call
cwtl
mov
dec
cli
cmp
adc
sub
into
push
sbbl
and
cmpl
daa
mov
fs
sbb
push
add
fwait
imul
ss
xchg
push
pop
or
lret
pusha
lds
sbb
jecxz
inc
pop
scas
sub
sahf
data16
mov
inc
adc
dec
aaa
icebp
jbe
mov
mov
repnz
push
sti
mov
sub
or
jge
sahf
add
pop
lahf
and
clc
sbb
push
mov
scas
aaa
push
pop
adc
jmp
fs
rclb
fsubrs
jle
pusha
lock
mov
enter
add
fldcw
in
xor
dec
pop
xchg
idivl
xlat
cmpsl
das
les
inc
mov
popf
ja
inc
movsb
add
es
rcrb
and
xorl
push
mov
push
fnsave
inc
jb
and
fwait
sbb
sub
pop
dec
in
sbb
fwait
cmp
test
or
lahf
dec
add
test
cli
imul
jge
dec
sbbl
jle
stos
cmpsb
aam
in
inc
mov
ljmp
pop
cmpsl
fldenv
out
ret
lock
xor
mov
cmc
std
push
fdiv
add
hlt
daa
jl
xchg
push
add
xchg
jp
lret
shrd
adc
jmp
add
and
out
xchg
push
jp
jg
int
mov
dec
mov
xor
jbe
nop
push
cltd
jb
cmp
flds
push
ds
adc
xor
and
mov
nop
out
push
xor
inc
outsb
fs
or
mov
movsb
cmp
cmp
dec
inc
test
mov
fadd
inc
mov
ljmp
push
dec
pushf
rcll
and
fiadds
inc
rorl
fldenv
mov
stos
xor
and
inc
stc
inc
dec
mov
jae
xor
imul
gs
pop
inc
jmp
mov
mov
xor
or
jne
push
orb
jne
into
mov
lret
cmp
lahf
xor
je
jp
mov
mov
pop
adc
pop
push
outsl
mov
xchg
pop
cmpsl
loope
mov
imul
in
sub
dec
rclb
shll
pushf
inc
cmp
and
cmpsb
fs
adc
pop
push
inc
jecxz
cli
in
push
cmc
mov
testl
or
sub
flds
mov
pop
push
pusha
cmp
mov
or
enter
shl
xlat
sub
outsl
insl
loope
xchg
out
inc
inc
into
mov
lret
push
inc
mov
pop
mov
jbe
xchg
cmp
cli
mov
stos
jecxz
dec
outsl
cmp
fdivrs
dec
out
mov
mov
or
int
in
in
rol
test
popa
fisubl
jae
stos
jle
lahf
xor
sbb
daa
pop
adc
pop
and
add
push
jg
pop
and
xchg
leave
js
repz
sahf
outsb
out
out
xchg
pop
nop
loopne
popa
imul
lcall
fadd
xchg
or
inc
xchg
mov
xchg
xor
push
movsb
aaa
cmp
mov
andnps
pop
leave
mov
shl
xchg
aam
mov
leave
les
shll
lock
jmp
ljmp
in
mov
dec
stc
popa
fcompl
lret
popw
sub
rorb
test
fsubp
mov
dec
pop
imul
mov
cmpsl
or
mov
push
arpl
stos
test
sub
or
xchg
or
outsb
mov
les
mov
mov
fmull
mov
xor
xchg
cmp
and
data16
adc
push
sub
add
add
cmp
rorb
fldenv
and
popa
movsb
shl
pushf
push
push
lret
insl
cmp
push
std
mov
push
test
outsl
das
mov
sub
loop
mov
dec
push
in
pop
jbe
mov
push
in
shl
xchg
insl
cmp
add
push
mov
mov
cmp
push
jg
je
rol
mov
into
jo
stos
fs
pop
dec
jo
pop
fildll
mov
movsb
cmp
mov
lahf
movsb
mov
xchg
xchg
nop
xchg
pop
pop
sti
xor
xor
mov
cmp
arpl
into
add
cli
jmp
pushl
or
dec
rcrb
fwait
arpl
add
mov
pop
dec
jecxz
ds
insb
les
dec
add
and
mov
inc
or
idiv
and
das
mov
out
decl
test
sub
loope
rol
xlat
push
das
push
into
or
jge
ljmp
add
testl
ficoms
mov
iret
mov
push
xlat
inc
adc
idivb
xchg
rorb
add
and
or
mov
rclb
add
push
sub
xchg
and
shll
int
fcomi
inc
lds
pop
push
andb
into
pop
test
ret
test
or
lods
and
add
sub
pop
bound
push
xor
jbe
xor
push
insl
pinsrw
jnp
sbb
cmp
jns
out
int3
lahf
dec
jns
push
or
push
inc
loope
sbb
rorb
sbb
push
cmp
aam
cmp
stos
cmp
test
lret
jb
sarl
inc
out
sbb
in
add
sub
and
jge
push
jp
cmc
sub
icebp
movsb
dec
fsubl
pop
fcoml
mov
pop
clc
movsl
dec
imul
sti
push
jb
mov
mov
mov
out
das
cmp
adc
ds
clc
loop
and
jnp
sbb
cmp
jbe
mov
mov
lds
push
jne
mov
xor
gs
adc
add
mov
jl
sub
adc
cmp
inc
adc
aam
and
cmp
mov
and
iret
and
daa
scas
stos
jmp
dec
mov
imul
call
sti
insl
jg
mov
sarl
loope
xchg
fisubl
adc
mov
cmp
test
mov
out
inc
shll
xchg
into
mov
inc
and
and
test
mov
popa
mov
sarb
lret
mov
xor
popa
push
lret
imul
fcmovb
rolb
xchg
add
out
and
dec
cmc
lret
loop
insb
lock
ljmp
mov
push
mov
or
stc
xlat
dec
sub
aam
cmpsl
movsl
arpl
pop
orb
scas
out
jg
add
arpl
test
iret
jle
mov
mov
mov
cli
in
mov
sub
xor
sub
popf
mov
icebp
and
ljmp
jl
mov
or
adc
and
cmpsb
ds
mov
out
mov
lahf
js
sub
push
push
enter
xchg
int
fwait
jae
scas
inc
loop
adc
ja
pop
mov
into
inc
aad
or
xchg
pop
sub
stc
inc
inc
rcr
pop
sbb
mov
mov
or
test
into
xchg
mov
stc
jnp
cmp
and
into
push
adc
mov
push
mov
add
or
lcall
push
sbb
sub
loop
notl
dec
pushf
insl
mov
out
lahf
jmp
push
sub
mov
xor
into
test
adc
roll
lock
dec
daa
loop
and
decl
cmp
or
xchg
add
pusha
or
or
les
fs
in
idivb
lods
ljmp
dec
call
js
jno
jge
and
in
mov
lods
pop
sbb
push
cwtl
pop
mov
cmpsb
mov
jge
or
and
sub
xor
out
call
adc
xchg
mov
or
and
jecxz
inc
into
lods
in
jne
or
jmp
mov
jl
cmp
dec
bound
movsl
and
push
mov
stc
mov
mov
jb
loope
mov
adc
mov
in
out
and
pop
jb
ror
movsl
imul
adc
and
sahf
cltd
fistpll
inc
pop
aaa
cld
aad
push
aaa
ficoml
addb
add
cmpsb
inc
hlt
jecxz
scas
sub
add
xor
ret
out
test
and
sbb
or
push
enter
dec
push
jmp
cmpsl
sbb
mov
cwtl
xchg
in
shrb
repz
dec
ljmp
jp
dec
pushl
inc
sbb
cmpsl
or
mov
rorb
pop
mov
daa
test
xor
shlb
add
cmp
scas
pop
int
cmp
mov
push
sarl
adc
insb
mov
inc
daa
jg
jo
pushf
popf
fs
mov
fmuls
das
and
shll
mov
adc
negl
mov
scas
iret
dec
dec
cmp
jecxz
mov
jle
inc
mov
xchg
pop
pop
mov
cmp
test
pop
jg
and
daa
in
pop
inc
mov
pop
xchg
and
add
nop
subb
aad
add
call
int3
js
cmc
mov
pop
mov
pop
shll
inc
pop
xchg
adc
add
mov
imul
pop
cld
and
movl
xchg
scas
mov
mov
daa
outsb
adc
dec
stos
adc
ljmp
adc
aam
js
popw
mov
daa
rorb
cmp
mov
xchg
adc
movsl
iret
pop
jp
mov
and
sub
adc
jecxz
imul
jmp
jae
in
in
inc
fs
jne
std
xchg
aam
dec
pusha
mov
mov
loop
lret
pusha
mov
jnp
xor
xor
mov
movsb
lcall
xchg
cmp
pop
in
jl
cld
rcrb
push
sbb
or
ja
pop
add
jae
mov
mov
jb
mov
sbb
scas
xchg
xor
fcmovnb
rorb
xor
jge
mov
jmp
test
sub
jno
mov
cwtl
addr16
and
xor
hlt
sbb
mov
jbe
fiadds
xchg
mov
aas
aad
inc
push
xchg
mov
icebp
sbb
inc
iret
imul
push
lds
cmp
nop
xor
aaa
outsb
pop
jg
pop
outsl
ss
push
xchg
movsl
scas
pop
fdivrl
xchg
in
sub
das
sbb
fstps
or
in
push
jb
mov
and
add
shlb
fsts
jge
lahf
es
rclb
dec
test
pop
orb
and
out
int
lea
les
je
lea
repz
ret
lret
loope
mov
nop
in
mov
jg
push
ret
sub
and
iret
pop
mov
xor
outsl
push
mov
leave
arpl
sti
cli
cmp
or
inc
push
ljmp
shrl
std
popa
dec
scas
les
sub
aam
dec
iret
add
jns
sbb
test
lret
sub
inc
ja
hlt
insl
pop
enter
fdiv
jnp
sbb
jae
roll
aam
or
cmpsb
repnz
movsb
xorl
and
ljmp
out
xorl
ret
jno
test
push
das
xor
push
fcoms
repz
ds
repz
testl
filds
adc
xchg
out
mov
faddp
or
mov
add
push
fstl
mov
loop
test
xchg
imul
das
sbb
scas
sub
mov
shl
insl
hlt
mov
sti
mov
jnp
out
clc
push
sub
test
inc
data16
cmpsb
sahf
dec
push
loopne
push
lds
push
xsave
loopne
jle
int3
push
push
and
push
lea
cmp
out
jb
cltd
pop
dec
pop
add
sbbl
das
popa
clc
iret
mov
call
popf
mov
insl
jl
and
jl
movsb
mov
imul
jecxz
xchg
icebp
mov
dec
testl
or
mov
xor
cld
daa
outsb
inc
movsl
ss
jl
out
fwait
sbb
pop
adc
cmp
sub
push
inc
cmp
inc
sub
mov
lcall
cld
push
cmp
faddl
xor
cli
bound
inc
lret
popf
mov
fwait
add
imul
loope
cltd
mov
shrb
mov
enter
cli
xchg
xor
stc
jle
push
push
or
inc
cmp
leave
je
sbb
jmp
ja
lods
cmp
andb
adc
xchg
mov
add
cmc
test
pop
mov
aad
inc
cld
lock
sub
cmp
jns
sub
lret
adc
cmp
imul
outsb
jo
pushf
add
cmpsl
scas
cmp
mov
andb
ss
or
and
rorl
push
sub
mov
popa
pushf
nop
dec
xchg
and
ficompl
xor
into
sub
pop
mov
xchg
jmp
jl
jb
adc
adc
dec
subb
mov
call
xchg
jb
mov
inc
add
jne
mov
and
and
dec
imul
int
repnz
xor
ret
int3
jb
inc
pushf
adc
push
jg
inc
mov
fs
jge
in
pop
sti
push
adc
neg
dec
out
adc
add
dec
arpl
icebp
push
dec
cwtl
inc
push
stos
jo
movsl
push
mov
jl
add
sub
or
push
push
movsb
mov
imul
pusha
inc
xor
fcmovbe
push
adc
addb
mov
popf
sbb
test
xchg
int
or
jmp
dec
sbbl
mov
lods
aad
pop
xchg
repnz
sbb
inc
std
jo
inc
lock
dec
or
inc
push
sbb
mov
fldt
cmp
pop
add
imul
mov
cmp
out
enter
mov
je
arpl
hlt
fnop
sub
adcb
xchg
ljmp
ret
xchg
mov
xor
jnp
or
jbe
jge
xchg
cli
and
fidivs
sub
out
and
xlat
mov
imul
sbb
cmpsl
cmp
gs
roll
insb
dec
dec
pop
mov
loopne
repz
push
stos
or
in
push
in
pop
divb
and
cmp
xlat
cmpl
lret
mov
leave
imul
ret
sbb
movsl
cmp
mov
stos
popa
xor
jmp
sub
and
mov
fdiv
inc
xor
xchg
fmulp
pop
ds
roll
jp
adc
jno
repz
sahf
data16
fcompl
sahf
mov
loope
jb
repnz
test
ret
imulb
test
int
aaa
out
popa
or
scas
int3
pop
icebp
out
fldenv
js
shrb
jns
rcl
push
sbb
xor
mulb
ret
shrl
mov
ds
cltd
mov
push
or
scas
jae
movsb
xchg
sbb
dec
xor
push
fstl
shlb
or
ljmp
sbb
pop
sar
ret
mov
sahf
push
cmp
cmp
fnstsw
andl
xor
mov
mov
sub
mov
jb
jns
inc
fnstcw
jl
inc
adc
jae
sbb
in
cwtl
imul
mov
xchg
push
cltd
insl
shr
jb
xchg
scas
andl
mov
inc
roll
lret
pop
lahf
arpl
cmpsb
insb
jmp
or
arpl
mov
jnp
leave
add
xor
test
fs
call
dec
outsl
imul
sahf
mov
inc
loope
dec
jae
cmp
enter
cmp
jecxz
scas
daa
cmpsb
dec
sti
in
mov
loope
cmc
jmp
mov
mov
mov
xchg
pop
or
movsb
xor
adc
push
inc
push
incb
and
and
gs
mov
mov
enter
movsl
push
jbe
arpl
fcoml
sarl
sbb
pop
inc
push
and
sbb
stc
jae
adc
sbb
addr16
inc
test
cmp
cmp
add
inc
add
data16
addr16
jb
dec
test
dec
jne
fimuls
ja
or
ljmp
cli
pop
xor
dec
fnsave
je
cmp
lcall
test
mov
mov
pop
adc
jnp
pop
scas
mov
xchg
loop
adc
imulb
jno
shl
mov
stos
pusha
and
fcoms
cmpsb
je
xchg
push
cmp
fistps
int
mov
mov
and
adc
cs
jne
in
popa
and
iret
aad
pop
pop
or
lds
cld
push
jne
cld
jne
scas
stc
xor
cli
jge
shlb
cmp
jb
xchg
pop
or
mov
enter
mov
push
ret
movl
shll
lahf
push
push
ds
jle
push
stos
jmp
sbb
xchg
cld
aaa
add
mov
push
inc
mov
mov
enter
fcoms
popf
je
inc
jge
and
outsl
das
in
movsb
dec
dec
and
mov
loopne
fwait
mov
test
lahf
pop
test
mov
dec
lcall
jmp
xor
nop
inc
or
mov
jecxz
mov
popa
stos
cmp
std
andb
or
in
xor
mov
std
out
mov
xchg
outsb
jge
aam
pop
cmp
add
cmovae
call
pushf
cld
test
ffree
andb
cs
jae
cmpsb
push
aam
je
adc
ds
cmpsl
mov
je
ja
int3
cmp
incl
xchg
inc
scas
cli
iret
push
sub
unpcklps
sbb
je
test
cmp
pop
stos
push
push
imul
mov
lock
push
sbb
inc
je
jbe
mov
sub
add
cmp
xor
sbb
out
clc
cmp
and
add
mov
cltd
and
mov
pop
adc
movsb
jecxz
fnstcw
cmp
fildl
and
inc
pop
xor
jb
lret
jmp
jb
cs
bnd
je
int
push
gs
mov
xchg
aam
xor
loopne
mov
in
jecxz
sub
cltd
nop
xchg
sub
jle
shll
test
sbb
mov
js
jb
popa
xorl
pop
adc
pop
faddl
mov
je
xchg
idivb
shll
xlat
dec
adc
push
lret
jg
call
mov
dec
out
xchg
lret
icebp
cmpsb
pop
je
jp
mov
push
mov
repnz
icebp
mov
aas
call
mov
mov
fcom
cmp
int
shlb
dec
inc
dec
dec
xlat
in
int
jmp
dec
sbb
mov
bnd
push
in
jae
mov
sbb
pop
mov
lds
pop
push
jns
pushf
xor
jo
loope
cmp
jo
lret
lods
dec
mov
test
repnz
xlat
or
xor
mov
push
xchg
dec
mov
push
pop
pop
movsl
jno
cmpsl
mov
decl
mov
push
cmpsb
jae
xchg
adc
es
out
jb
mov
jp
test
movq
mov
lods
daa
xchg
ja
push
test
dec
pop
lcall
jecxz
inc
pusha
sbb
cld
idivb
fwait
push
pop
repz
fdivl
jmp
sub
jnp
add
xor
sbb
rolb
mov
fldl
movsl
daa
push
mov
sub
fwait
addr16
mov
lret
aas
xor
adc
jmp
pop
das
aas
xchg
test
push
mov
push
loop
push
xchg
test
inc
bound
dec
jecxz
mov
add
inc
jns
push
push
scas
cmp
js
fdiv
shll
aad
mov
dec
nop
xchg
adc
nop
in
rcl
dec
or
inc
inc
mov
mov
roll
push
sti
lds
add
nop
cmp
gs
lret
stc
sbb
or
add
gs
test
jmp
mov
xchg
xlat
pop
sbbl
lds
hlt
frstor
dec
ja
or
add
mov
inc
sub
cld
in
stc
and
lds
push
mov
addr16
dec
mov
or
xor
divl
xor
xchg
sbb
out
inc
pusha
xchg
cmp
push
addr16
and
push
fistpl
lret
repz
xchg
inc
aaa
mov
call
fistpl
scas
inc
cmpsb
leave
repz
insl
adc
xchg
test
pop
push
insl
cli
mov
test
scas
xchg
arpl
in
ds
imull
sub
or
push
fdiv
push
stc
jge
ss
iret
cmp
mov
add
sti
orl
xchg
or
mov
push
cmpl
xlat
daa
jnp
movsb
arpl
lods
add
sbb
test
jnp
xor
les
mov
hlt
mov
in
fbld
mov
iret
add
jnp
inc
or
sub
mov
add
xchg
add
sub
and
xlat
add
shrb
jmp
lret
dec
xchg
pop
ss
xchg
dec
je
fimull
stos
xchg
push
mov
sub
jne
ja
movl
jo
dec
and
and
and
outsl
and
stos
push
push
lcall
test
fildll
pop
pop
add
hlt
push
scas
call
pop
pop
dec
mov
jp
out
int3
adcb
jb
lahf
rclb
xor
mov
fdivl
add
mov
and
lods
pop
push
pushf
sarb
push
rcl
data16
dec
clc
or
cmp
out
mov
iret
fs
mov
popf
stc
std
xor
xor
aam
stos
xchg
xor
aam
cltd
shll
pop
inc
mov
push
mov
pop
dec
xor
adcb
mov
xchg
mov
out
inc
incb
push
lret
lea
rol
das
jae
scas
pop
fstpl
push
jne
xor
rcrl
and
xchg
sbb
cs
mov
sub
adc
loop
dec
mov
adc
cmp
sub
xchg
fdivrs
sub
stos
mov
mov
mov
fildll
push
adc
adc
xor
popf
aaa
cmpsl
mov
push
cmp
decb
add
xchg
scas
xchg
aad
decl
xchg
push
adc
ret
ljmp
mov
dec
mov
mov
in
lods
imul
xchg
rorl
cmpsl
clc
dec
pop
fisubs
int
repnz
cltd
std
ret
or
mov
lds
push
or
in
mov
mov
enter
lods
fstpl
ja
inc
rcll
enter
inc
push
aas
sahf
fsubr
fsubrs
adc
add
aad
push
mov
jbe
xchg
jnp
ret
cld
das
lahf
imul
sarb
xchg
push
dec
sbb
inc
fisubrs
adc
xchg
mov
push
mov
popa
loope
xchg
fists
add
call
or
test
test
out
push
ret
inc
ljmp
hlt
insb
mov
add
xor
jmp
into
dec
ret
into
ljmp
pop
pop
push
pop
leave
lcall
inc
mov
mov
daa
cli
clc
or
js
push
ss
sub
pusha
bound
pushf
push
flds
into
leave
xchg
xor
or
push
out
jmp
repz
mov
add
inc
inc
ret
in
adc
cmp
mov
xchg
inc
shrb
test
icebp
add
outsb
push
sahf
or
inc
push
in
shrb
mov
fxch
mov
push
jnp
sub
mov
and
cld
mov
lret
jl
xchg
pusha
rorl
aas
mov
aaa
xlat
jo
mov
in
out
arpl
test
push
std
lods
out
aam
adc
aas
int
add
ficompl
addr16
add
jl
cmpl
pop
cmc
push
stc
orl
lea
sub
inc
adc
add
inc
imull
or
pop
int3
adc
xor
jo
mov
inc
aam
dec
shl
xor
pop
mov
loop
lods
mov
cmp
push
stos
and
stos
push
mov
ss
lock
or
in
jae
shl
shl
or
ret
mov
adc
xor
mov
lea
xor
jne
lcall
shr
nop
adc
sbb
dec
and
pusha
pop
pop
push
les
mov
xor
push
jae
or
mov
dec
inc
sub
cmp
inc
xchg
xorb
aad
or
jmp
fmuls
repz
loopne
icebp
sbb
xor
aas
pop
iret
fbstp
out
fnstenv
sti
cmp
je
in
push
test
cltd
adc
mov
fdivs
stos
outsb
xor
lcall
pop
xor
lds
xor
or
es
inc
out
ds
pop
stc
mov
xlat
pusha
inc
lods
mov
inc
mov
mov
xchg
aam
mov
clc
imull
fildl
js
xchg
cwtl
push
jbe
addr16
mov
imul
inc
gs
inc
dec
adc
xor
fs
sub
or
mov
cld
xchg
stos
in
call
inc
xorl
add
cli
mov
pop
cmp
popf
mov
mov
cwtl
pop
cld
subb
adc
and
inc
mov
sbb
call
mov
addr16
enter
test
add
sub
xor
or
notb
jmp
int3
mov
xor
pop
lods
fdiv
std
xchg
movb
push
test
ret
adc
or
rcll
or
fwait
dec
scas
loopne
es
cltd
out
pop
incb
ret
jo
fdivrp
lahf
adc
cwtl
mov
mov
mov
push
cli
pop
into
repz
loop
popf
inc
mov
dec
jp
xlat
das
mov
sbbl
jg
int
mov
in
mov
pop
and
add
jnp
enter
aas
xchg
xchg
inc
scas
cmp
adc
mov
fs
aaa
imul
xlat
mov
dec
fstl
out
in
fs
cmp
push
repz
jae
arpl
ret
das
lds
fsubrs
shr
shl
jno
clc
pop
rcll
popf
lret
dec
add
test
and
dec
xchg
popa
pop
cli
insl
int
shrl
cmp
sti
movsb
mov
jbe
into
push
pop
xchg
les
xchg
jp
repz
mov
cwtl
adc
rorl
push
push
inc
jge
daa
pop
out
inc
xor
int3
jle
mov
clc
inc
fildl
mov
cli
xchg
xchg
cwtl
dec
cmp
push
in
imul
and
cmp
jecxz
fstl
sub
pop
test
pop
es
pop
rcll
push
sbb
pop
xor
jo
add
jle
push
roll
sbb
or
mov
int
shrl
and
pop
and
repnz
fs
pop
in
mov
dec
push
or
jge
jp
and
add
cmpsl
sub
xor
and
mov
imul
jle
mov
dec
test
fsubrl
inc
cld
shlb
test
test
rcrb
fstps
aas
js
mov
clc
leave
xchg
negl
sbb
add
imul
pop
dec
push
inc
sub
hlt
scas
add
or
inc
push
push
dec
rcll
and
fs
xor
pop
push
mov
enter
loop
into
mov
or
xchg
adc
mov
dec
or
pop
out
fisubrs
dec
pop
cmp
mov
mov
leave
xor
xor
leave
fucom
les
mov
and
sbb
push
pop
and
clc
cwtl
jmp
xchg
aas
sub
int3
dec
scas
mov
dec
mov
loopne
sub
movb
ljmp
push
push
mov
and
stos
outsl
xchg
sbb
or
add
hlt
lods
lret
cmp
rcr
and
ficomps
mov
subl
mov
add
and
lahf
xchg
stos
adc
pop
jb
lahf
dec
sbb
mov
or
jg
test
xchg
sub
into
stc
fwait
rcrl
cwtl
mov
sub
xor
mov
pop
in
or
nop
dec
mov
xchg
inc
in
sub
or
int3
repz
bound
jno
sbb
sbb
sbb
outsb
inc
pop
push
rcrb
test
call
sub
fwait
sub
push
fimull
xor
repnz
int3
movsl
push
fucomi
aaa
jb
jo
mov
inc
mov
mov
xchg
test
sbb
enter
aaa
pop
sub
mov
cmp
pop
mov
das
les
jns
add
fldl
comiss
cmp
mov
mov
add
inc
stos
inc
fildl
pop
into
cmp
mov
jo
es
loopne
xor
pop
push
aaa
nop
or
lahf
icebp
iret
mov
scas
aam
sub
xor
insl
push
xorb
cmpsl
imul
je
cmpsb
dec
cmp
js
mov
xchg
add
jge
lock
jo
xor
inc
sbb
setb
in
xchg
movsb
ret
jmp
jg
pop
mov
andl
jmp
xor
js
ds
or
jge
cmp
sbb
pop
das
fimull
mov
test
mov
push
mov
cmp
jle
pop
sbb
aas
arpl
mov
adc
cmpsl
add
movsl
and
je
jnp
cmp
xchg
mov
and
and
push
jb
xchg
push
xor
xchg
fidivl
jnp
xchg
sub
shlb
cmp
nop
push
fisubrl
push
pop
sub
ds
mov
lret
mov
xor
test
mov
push
ss
sbb
insb
outsb
iret
outsb
movsl
mov
out
add
fwait
push
shrl
inc
cmp
jg
and
dec
mov
and
push
jb
inc
movsl
in
fldenv
xchg
add
sub
push
popf
cmp
mov
xchg
hlt
sbb
sub
cmp
cld
movsb
icebp
adc
mov
in
and
ret
mov
ret
int3
aad
aad
inc
std
fistpl
and
pushf
jmp
repz
in
mov
push
mov
lea
out
cmp
imul
mov
popa
out
loop
popf
pop
lcall
push
sti
jecxz
loope
mov
cmp
pop
cltd
ljmp
xchg
lret
lock
rcl
add
xor
in
xchg
mov
js
iret
aad
test
mov
call
pop
add
mov
lcall
gs
into
in
push
call
loope
jle
pop
xchg
enter
fsubrl
sti
dec
and
lock
popa
push
xor
pop
xlat
pop
popa
aam
cld
movsl
loopew
pushf
push
cs
ret
adc
fisubl
cmp
jl
lock
fnstsw
inc
ds
cmp
push
sub
ss
daa
clc
mov
jg
mov
pop
and
shl
mov
cmp
out
popa
or
mov
jmp
sbb
std
and
cmpsl
lds
sahf
dec
sarb
movsb
fmulp
out
mov
xor
pushf
pop
repz
inc
sbb
mov
dec
jae
enter
loope
adc
loope
push
add
jg
outsl
jae
lock
into
bound
pop
sub
aam
loope
or
add
pusha
adc
hlt
dec
sbb
xchg
mov
loop
outsb
mov
lahf
push
jle
or
scas
mull
bound
jnp
sbb
int3
pop
outsb
frstor
xchg
rcrl
adc
sub
xchg
fistl
pop
cld
loop
idivl
and
fld
pop
push
pop
rcr
imul
stc
outsb
test
cmp
ljmp
xchg
mov
js
pop
mov
test
aaa
or
add
lahf
fnstenv
adc
mov
int3
sub
xstore-rng
cmpsl
test
add
loopne
and
dec
bound
jae
ss
add
repz
add
push
loop
std
dec
lds
push
mov
call
lock
inc
daa
arpl
movsb
sarb
sti
scas
xchg
out
jno
outsl
add
and
pop
int3
jbe
lea
cmp
pop
sbb
adc
sub
mov
jbe
dec
add
imul
out
outsb
test
in
sar
jmp
ret
cld
fcmovne
inc
mov
jp
sub
dec
pop
or
sbb
dec
adc
sbb
scas
sub
fdivs
adc
jo
mov
in
test
ja
sub
shll
aad
mov
cmovo
push
cmp
cmpsb
inc
cltd
bound
ds
push
sbbb
lret
mov
fstpt
pop
les
test
imulb
cld
jg
jge
pop
jbe
nop
adc
adcl
adc
push
lea
jnp
cmp
mov
cltd
jno
mov
xor
repz
and
loopne
shll
lea
nop
punpcklbw
mov
sub
or
xchg
mov
in
int
mov
sbb
shrb
mov
arpl
cmp
jne
mov
leave
insb
xchg
mov
mov
in
lret
adc
mov
ss
mov
movsl
lcall
jmp
mov
lahf
stos
int3
mov
in
pop
test
mov
hlt
adc
and
lcall
int3
mov
fnstcw
sbb
add
jg
lds
fisttpl
jmp
test
mov
sub
push
idivb
mov
or
add
bound
or
mov
pop
xor
sbb
stos
fisubrs
lods
insl
in
inc
movsl
mov
xor
jno
dec
test
fsubs
inc
aam
or
mov
fldenv
loopne
or
cwtl
inc
rorl
mov
cld
popf
mov
movsb
mov
push
cmp
scas
mov
push
inc
int
mov
fwait
add
mov
into
subb
adc
decl
sbb
imull
inc
jge
rolb
sub
mov
xchg
ret
xchg
sbb
inc
and
and
test
leave
es
movsb
inc
clc
lcall
clc
icebp
cmp
scas
les
mov
dec
inc
fldl
inc
bound
in
cli
jns
mov
loope
add
ja
ret
scas
in
push
cs
pop
cli
jmp
out
sub
int
dec
cmc
dec
and
fmull
dec
sub
imul
mov
insb
add
stc
jle
in
pop
ljmp
inc
repz
push
test
popa
pop
mov
lahf
mov
aas
mov
les
xor
dec
adc
movsl
shr
lahf
cmovbe
clc
lods
or
mov
ret
xchg
and
xor
inc
mov
insl
xor
enter
cmpsl
fs
outsl
mov
pusha
inc
clc
mov
pop
lahf
adc
stos
mov
std
jo
mov
and
icebp
clc
test
jmp
aas
fcmovne
mulb
add
add
sub
jge
jmp
mov
dec
mov
inc
pop
fwait
ds
cmc
jnp
add
xor
sbbb
aam
xchg
and
mov
test
mov
push
cmpsb
repz
jge
mov
push
or
push
jmp
pop
cmp
fwait
jnp
roll
mov
push
ja
lret
jg
dec
or
fcoms
fbstp
popf
mov
inc
or
fstpt
subb
or
push
mov
movsb
cmp
cmpsl
adc
dec
and
out
xchg
pop
fwait
pop
shl
icebp
cs
filds
cmp
push
cld
fstps
inc
mov
in
lahf
cmpsb
mov
loopne
pop
out
jbe
push
sbb
xor
xor
movsl
fwait
int3
inc
mov
jno
repnz
mov
lcall
popf
sbb
movq
cmp
dec
xchg
mov
in
insb
jmp
js
adc
cld
add
xorl
imul
or
cmp
jge
cmpsl
pop
xor
popa
ret
dec
fcmovb
gs
aas
shlb
sti
outsb
jp
jnp
or
ret
cmp
sub
mov
cmc
lret
stc
xor
imul
gs
xchg
and
loop
divl
int
shll
or
xor
cwtl
mov
lret
inc
mov
mov
push
mov
dec
imul
inc
inc
pushf
and
movsbl
sahf
xchg
dec
or
inc
fcmovnu
xchg
movsl
and
jo
mov
cltd
cmp
outsl
xchg
nop
or
push
aam
ficoms
cmp
outsl
fsub
lret
inc
lods
sbb
scas
in
pusha
sbb
xchg
movsl
iret
xbegin
cwtl
leave
aad
sub
lds
hlt
jmp
pop
or
mov
into
cmp
int3
stos
ja
sti
cmpsl
or
jbe
add
loop
jl
cs
fs
leave
add
xchg
and
inc
inc
sub
push
mov
fldt
out
mov
dec
push
aas
add
adc
and
mov
xor
cmpsl
xor
add
pop
cs
int3
fcmove
adc
loope
pop
mov
outsl
jno
jp
jp
pop
add
cmp
sub
in
outsl
mov
mov
ja
fisttpll
bound
lods
testb
add
or
pop
jp
cmpsb
mov
clc
mov
or
inc
xor
repnz
dec
rcrb
test
js
push
movsb
nop
lds
stos
push
mov
push
and
push
inc
into
stc
sub
xor
adc
and
inc
xchg
push
stc
mov
pusha
mov
leave
mov
outsb
out
sub
in
fs
loope
out
in
and
lret
ret
pushf
shl
mov
ja
push
add
adc
mov
dec
testb
inc
lcall
inc
xchg
sub
mov
push
mov
xor
cmpsb
hlt
pop
cmp
cltd
pop
sarb
iret
inc
insb
mov
call
std
aaa
sub
ljmp
pop
std
daa
xchg
sub
dec
lret
dec
daa
out
repz
push
cmp
rcll
adc
mov
xchg
and
shl
jae
cmp
dec
lcall
std
outsl
int
stc
test
mov
rorl
add
rcr
dec
xor
or
cbtw
push
push
testb
fadds
das
scas
pop
pop
fucompp
sbb
in
dec
sti
cld
xor
pop
ret
fucomi
enter
xrelease
lock
dec
test
mov
fnsave
fnsave
dec
aad
and
add
pusha
imul
xor
aaa
pop
dec
xor
pop
pop
xor
xor
mov
jp
js
int
ja
pop
test
pop
mov
out
sbb
xchg
cld
sbb
es
pop
xor
dec
leave
or
pop
sti
pop
ret
pop
mov
sahf
mov
in
inc
push
push
sub
std
out
ja
test
cmp
cmpsl
adc
bound
mov
pop
out
xchg
rorl
fs
mulb
push
popf
xchg
loop
push
lcall
and
pop
adc
mov
fldcw
ljmp
add
add
faddp
mov
xchg
pusha
lock
push
sbb
lock
jno
sbb
sarl
sub
xchg
outsb
arpl
xchg
sbb
shlb
add
xor
mov
lahf
mov
jo
inc
sahf
mov
push
in
mov
shl
mov
jb
loopne
mov
lods
aad
mov
orl
inc
loope
loope
daa
push
inc
lret
inc
cld
jo
das
and
into
call
outsl
insl
jno
mov
filds
or
je
or
lock
cwtl
sbb
or
je
lods
es
add
rclb
xchg
subb
sahf
inc
cmp
mov
insb
cmp
fistl
adcb
pop
mov
push
aad
mov
sbb
rclb
mov
pop
adc
test
sub
pop
call
adc
aas
sbb
andl
and
ljmp
jne
cwtl
lods
jmp
sbb
dec
mov
push
and
pushf
jb
jnp
jb
mov
inc
pop
loope
incb
mov
cmp
mov
mov
and
mov
into
jo
cwtl
in
add
push
and
ja
xchg
daa
out
ja
lretw
or
xor
pop
popa
cld
int3
andb
jle
mov
mov
push
cli
mov
dec
mov
gs
push
push
xor
aaa
pushf
clc
and
or
in
fistl
repz
jne
pop
movb
adcl
lcall
daa
jle
vmptrld
ret
push
into
dec
sub
enter
pusha
repnz
sarb
imul
dec
fsubrl
mov
push
and
nop
inc
ret
icebp
jp
ficomps
xchg
test
inc
notl
dec
pop
shl
pop
insl
jg
add
call
push
mov
mov
call
push
outsl
cmp
mov
cs
push
imul
cs
cmpsb
in
xor
std
jmp
inc
jb
sub
adc
cs
xor
mov
aad
pop
hlt
jl
sub
dec
jne
push
adc
mov
add
fmuls
fistl
jp
pop
and
mov
sarb
lcall
or
mov
pop
nop
loope
pop
sbb
jmp
sbb
je
adc
data16
loopne,pt
loope
jno
add
cmp
mov
ljmp
in
scas
cli
rcrl
jge
jp
cltd
jb
lds
jge
cltd
pop
push
lods
add
hlt
imul
mov
pop
cmp
ja
and
inc
mov
mov
inc
mov
jo
pusha
ljmp
xor
push
ret
pop
jecxz
xor
nop
cmpsb
mov
cld
icebp
pop
xor
aaa
insb
and
hlt
arpl
adcl
cmp
call
ss
jnp
or
mov
cld
inc
xchg
adc
imul
dec
xchg
xchg
repz
fldenv
add
mov
cmc
mov
cmpsb
mov
jl
sbbb
std
or
mov
push
out
jge
idivl
es
cld
mov
sbb
shr
xor
xchg
and
clc
adc
dec
mov
fcoms
pushf
paddw
xor
xchg
or
lods
inc
fiadds
fimull
push
stos
xchg
movsb
les
jmp
push
ror
aas
add
ds
sahf
push
cmp
repz
inc
repnz
lret
mov
push
out
add
mov
dec
out
mov
fcomip
daa
ds
ficomps
adc
adc
stc
xor
jnp
dec
sub
jo
dec
cltd
jb
pop
call
xchg
inc
sbb
pop
xchg
inc
sub
ds
add
xor
lock
mov
mov
orl
cmp
insb
xorl
enter
xor
loopne
cmp
jae
shl
add
hlt
bound
xor
outsb
push
pusha
add
lods
cltd
jle
popf
mov
test
aad
push
daa
xchg
mov
sbb
push
sahf
loopne
test
pusha
into
push
mov
adc
push
or
mov
sbb
test
repnz
xor
into
es
sub
cmpsb
jo
shr
or
xchg
sub
mov
icebp
mov
cwtl
test
clc
pop
add
pop
mov
fnstenv
mov
lahf
xchg
cmp
mov
pop
xor
jno
push
lods
mov
arpl
aad
mov
sbb
aaa
pop
jnp
insl
repnz
jl
xlat
or
pop
mov
sub
js
iret
sti
push
adc
mov
inc
mov
cmpsb
and
adc
subb
mov
aaa
push
gs
into
push
jo
loop
aam
jge
ljmp
jge
mov
loopne
scas
push
mov
fs
xchg
jp
or
adc
ja
daa
lahf
mov
cmc
sub
inc
in
jbe
movsb
adc
jne
mov
andb
in
dec
out
out
scas
fwait
lds
out
add
lods
mov
xor
pop
pop
es
fisttpl
jns
add
xchg
push
cmpsb
push
mov
sbb
xor
cmp
inc
cmc
test
xchg
div
inc
cmc
fisttpll
jg
or
mov
sub
cmpsl
stos
sub
pop
bound
fmull
xor
adc
pop
aad
test
dec
sub
push
iret
scas
mov
cmpsb
mov
sub
fs
xor
int3
das
pop
popa
mov
and
inc
pusha
pop
dec
and
addl
std
sbb
test
dec
jge
in
add
or
data16
dec
imul
sbb
mov
xchg
lods
movsb
mov
sub
jg
and
mov
adc
mov
sbb
lret
xchg
xor
push
mov
adc
out
xor
add
mov
or
pop
jle
sbb
data16
cs
or
mov
into
adc
scas
out
jb
xor
and
mov
sbb
pop
cmpsl
mov
sub
je
mov
xchg
int3
je
push
xor
jne
pop
aaa
out
int3
mov
mov
jae
mov
insl
repz
loop
jno
out
fnstsw
fiaddl
jl
mov
push
xor
sbb
xor
ficompl
dec
ljmp
ret
fwait
pop
inc
cmpl
call
mov
ret
movsb
repnz
enter
mov
arpl
enter
loop
or
je
cwtl
enter
dec
divb
cmpsb
xchg
repz
movsb
test
inc
ret
outsl
push
lock
movups
pop
cmc
xchg
add
pop
cmpsl
sbb
fs
ret
pusha
std
mov
pop
push
sbb
add
push
mov
cmp
loopne
and
scas
nop
outsl
adc
cwtl
pop
xor
hlt
sti
out
sbb
mov
adc
dec
addr16
or
jmp
and
jae
stos
mov
repnz
mov
lret
adc
std
test
mov
mov
cli
xor
mov
lds
fld1
shll
mov
ficompl
add
fwait
xor
add
inc
fwait
lock
mov
push
dec
add
xchg
push
inc
xor
in
pop
push
cli
jns
test
jbe
dec
lahf
xor
jge
mov
and
pushf
ret
or
scas
mov
das
repnz
movsb
pop
shlb
out
adc
in
orl
jnp
stc
mov
dec
push
lock
stos
das
dec
sbb
movsl
pop
and
outsb
xlat
dec
push
jns
test
lods
daa
nop
mov
fs
and
aad
pushf
sahf
imul
movl
mov
pop
fdivrs
jl
sbb
lret
pop
push
lret
pusha
fstp
sub
arpl
ja
repz
faddl
fxam
stc
mov
jg
cld
sbb
arpl
mov
setge
dec
bound
jno
pop
or
in
mov
stos
push
idivl
mov
mov
arpl
ja
pop
and
mov
mov
adc
cld
mov
add
pop
xchg
inc
fdiv
jne
sti
fstpl
sub
scas
xchg
mov
xor
sbb
mov
xchg
clc
push
mov
clc
jge
mov
roll
cli
cmc
sarb
rorb
sub
pop
mov
pop
mov
mov
fadd
in
cmp
rcrl
popa
jmp
mov
imul
jbe
push
push
pop
cmp
lds
jae
das
push
iret
xor
sub
xor
stos
rcrl
cmp
lahf
fwait
jge
push
push
stos
or
pop
into
jae
sbb
and
icebp
movsl
mov
mov
addr16
cmpsl
pop
adc
lock
div
add
inc
add
sbb
dec
outsb
inc
into
or
movsl
cwtl
jae
cmp
mov
inc
popa
icebp
test
push
scas
push
lret
sti
mov
xor
push
or
scas
xor
insb
mov
or
lahf
pushf
cmc
aaa
sbb
rorl
push
jb
out
or
movl
inc
scas
cs
stos
out
inc
mov
les
data16
iret
inc
pop
int3
mov
jle
lock
cli
mov
sub
mov
mov
dec
je
insl
or
jbe
pop
add
lock
xor
lret
fidivl
inc
or
mov
mov
int3
adc
sub
mov
call
outsl
movsb
sti
mov
push
sub
xor
roll
xor
adc
jb
scas
ljmp
xchg
fldl
pusha
cmp
push
test
ror
sti
mov
lret
xchg
aas
pop
rorl
mov
and
aas
lahf
mov
push
add
stos
popf
int
and
push
adc
bound
sub
mov
fnstenv
inc
cmp
push
dec
cmpb
pop
push
pop
fildll
xchg
outsl
outsl
aaa
sub
dec
mov
sub
push
mov
stos
test
mov
cld
loop
jno
cmp
test
aad
dec
stos
out
aaa
rol
pop
add
xchg
adc
test
pop
lock
xor
xchg
sbb
or
mov
sub
mov
mov
in
out
sub
pop
outsb
push
repz
mov
pop
mov
popf
mov
popf
mov
xchg
mov
dec
test
ljmp
lret
pop
arpl
fisttps
orb
jo
cli
and
movsl
jnp
rol
and
lcall
cmc
dec
sbb
mov
lcall
inc
jnp
in
lods
cmp
add
push
loope
pop
jb
test
push
test
jae
aad
fcmove
jge
rorl
sarl
dec
jbe
insb
sub
ret
roll
dec
std
jo
jp
stos
xchg
cwtl
int3
add
xchg
popa
pusha
inc
dec
in
sbb
add
mov
test
cmc
scas
jne
ljmp
sarl
push
pop
scas
or
mov
sub
fs
lret
inc
mov
mov
mov
pop
dec
push
adc
pop
scas
jne
mov
xchg
loopne
ret
fcmovnb
mov
ss
jae
js
push
adc
fidivrl
insl
call
frstor
out
mov
cmp
test
dec
jecxz
in
xchg
cmp
xchg
lret
cmpsl
jns
aaa
rcl
pop
outsl
les
or
sub
jo
rolb
push
cmpsl
jp
addl
inc
adc
sub
push
adc
hlt
rcll
adc
insl
out
stc
movsl
orb
push
call
aas
imul
add
les
inc
movsl
orl
popa
jns
sub
pop
sub
xor
inc
push
mov
xor
dec
inc
xchg
mov
jno
dec
scas
fldt
push
into
push
add
out
dec
jp
xchg
ret
xchg
mov
or
jb
out
mov
out
mov
pop
aam
aam
jno
sahf
les
and
repz
push
leave
push
add
and
mov
arpl
pop
xorl
sar
pop
shl
leave
mov
add
pop
outsb
add
sti
fnstenv
and
xlat
into
xchg
ffree
ret
inc
insb
inc
cmp
xchg
ficoms
mov
test
xchg
dec
loopne
nop
and
push
or
out
inc
out
mov
lret
out
sahf
das
cmp
jmp
or
xor
in
insb
and
cli
imul
add
test
jg
xchg
movsb
dec
ret
jmp
dec
push
mov
fimuls
add
inc
mov
xchg
mov
sbb
in
mov
daa
int3
pop
mov
or
or
sbb
mov
pop
mov
sbb
arpl
xorb
jmp
sbb
push
mov
mov
lahf
rcr
std
dec
insl
mov
cmp
repnz
inc
cmp
rolb
cmc
sbb
cwtl
mov
call
mov
std
push
stc
xlat
pop
xlat
shrl
jmp
aad
mov
pop
cwtl
stc
call
sbb
daa
das
jle
jl
and
mov
mov
fidivrs
cmp
aad
outsl
shlb
pusha
aas
fstpl
xchg
scas
lock
push
push
aad
and
mov
dec
sub
sbb
out
pop
mov
sbb
les
xchg
test
adc
out
sub
lock
es
mov
out
pop
jg
xorb
in
mov
pushf
scas
mov
es
or
test
mov
mov
leave
xorb
popf
negl
ret
xchg
inc
aaa
jecxz
mov
fwait
pop
pop
mov
adc
in
xchg
add
test
pushf
mov
xor
repz
popa
push
aas
pop
or
mov
pop
aad
jge
xchg
mov
addr16
and
push
xor
xchg
or
dec
das
insb
subb
movsb
or
lcall
repz
push
xor
sahf
xor
lret
ret
mov
test
mov
repnz
inc
outsl
addr16
jg
es
int
mov
dec
adc
jo
aaa
loope
cmp
cld
loop
mov
mov
jno
flds
insb
cmp
mov
in
jns
and
outsl
xor
leave
xchg
jb
bound
adc
das
and
ds
pop
cs
fwait
das
iret
das
jno
or
sti
pushf
sti
popf
adc
xlat
loop
jnp
and
cmpsl
hlt
dec
adc
shll
push
mov
dec
icebp
rcrb
xchg
push
or
push
rcrb
scas
jnp
mov
mov
push
and
imul
sahf
dec
xchg
mov
out
outsb
jmp
loopne
push
cmpsb
push
mov
gs
cmc
push
sarb
mov
sub
pop
insb
mov
fidivrs
adc
popf
stos
stos
clc
or
cld
mov
mov
or
test
into
cmc
dec
xchg
in
movsb
les
mov
popf
xchg
mov
dec
or
sahf
test
ret
mov
inc
std
push
mov
pushf
adc
push
push
sub
cs
ljmp
mov
test
lss
call
les
push
insl
mov
cmpsl
mov
jb
push
xchg
insb
les
or
sub
mov
fs
jg
dec
aam
xchg
inc
add
jg
enter
adc
test
int3
lods
mov
dec
out
fwait
cmp
pop
mov
out
add
aad
cmp
enter
push
push
movsl
pop
rcll
mov
or
sub
mov
pop
test
pushl
sti
popf
xor
andl
in
mov
leave
mov
mov
ss
xchg
outsb
or
sar
adc
pop
add
or
xor
and
inc
mov
mov
pop
scas
imul
jle
std
ja
sbb
pushf
cmp
ljmp
repnz
gs
into
loopne
pusha
xchg
rorb
and
xor
mov
and
and
loope
ret
rcr
dec
jnp
rcll
jno
jnp
aaa
and
mov
stc
filds
mov
fs
sbb
fnstcw
adc
xorb
cmp
mov
pop
cmpsb
sub
or
sahf
jmp
mov
xchg
pop
repnz
in
and
push
fstpl
in
mov
cwtl
insl
das
lods
xor
ffreep
out
out
out
xor
mov
jg
fisubl
sahf
and
mov
push
sahf
inc
mov
sbb
in
or
adc
jmp
dec
push
cli
aaa
into
fnsave
out
rcrl
add
les
mov
push
push
mov
popa
adcb
jmp
dec
inc
cli
mov
or
testb
cmp
sub
fimuls
sub
or
popf
lret
aad
push
or
popa
inc
mov
das
cmp
sub
mov
into
lods
jg
push
adc
mov
outsb
subb
cmpsb
sub
push
push
imul
pop
cmp
mov
aaa
shufps
mov
mov
lods
arpl
loopne
sub
loop
mov
push
mov
xchg
or
push
mov
pushf
add
jno
sbb
and
aad
loope
jno
aad
push
mov
in
xor
cld
mov
rcr
data16
jge
jecxz
gs
js
orl
lods
push
std
hlt
addl
das
dec
mov
int
outsl
into
pop
xchg
inc
ss
and
push
js
pop
jb
sub
pop
or
cmp
inc
sub
mov
lock
jns
bound
aam
fisttpl
jns
jne
mov
adc
jle
mov
adc
cmc
popa
cmp
pop
sub
ficompl
inc
aaa
jo
pop
and
dec
pop
pusha
fdiv
ds
dec
insl
push
inc
xor
daa
repz
inc
mov
or
roll
or
xlat
lahf
out
or
mov
pop
adc
jmp
sbb
jne
xor
xchg
out
scas
cmp
test
pminub
push
fdivrs
lret
insl
jp
mov
push
add
mov
and
xor
dec
fistpl
or
pop
cmp
stos
sbb
loopne
mov
jns
cmp
std
jns
enter
outsl
pop
mov
push
xor
movsb
xchg
and
into
or
ja
jmp
and
fsub
jns
test
push
hlt
frstor
mov
repz
sahf
ja
and
cs
popa
mov
inc
jae
ja
mov
jge
cmp
adc
mov
int
in
dec
mov
sub
push
xor
in
xlat
jg
mov
pop
adc
lret
fdecstp
or
repnz
cmp
xchg
stc
sahf
les
arpl
jp
add
stos
mov
fsubrs
sbb
cmpsl
inc
je
xlat
mov
xchg
or
jb
mov
mov
cmp
cmp
in
loope
cmp
cltd
sub
push
sub
cmp
js
jb
loopne
inc
orl
test
out
mov
push
popf
sahf
fistl
ljmp
dec
xchg
pop
push
test
stc
mov
and
fwait
add
lock
push
loopne
cmpsb
nop
jp
into
nop
or
nop
rorl
xor
lcall
xchg
iret
stos
sub
ret
aad
and
outsl
lea
repz
cmpsl
js
fstpt
or
push
xor
dec
test
cmp
sbb
test
pop
pusha
jecxz
or
mov
into
pop
jbe
orb
push
dec
icebp
mov
out
xchg
inc
inc
jge
push
stos
loope
inc
cmp
and
test
int
das
push
sarl
dec
gs
adc
cli
leave
loope
cmp
mov
lret
dec
repz
loopne
sub
and
lret
push
inc
loopne
inc
cmp
mov
push
push
xor
lea
push
mov
jge
dec
mov
jge
jae
repnz
pushf
pop
stc
shrb
push
jns
or
movsb
call
ss
imul
in
out
mov
sbb
repz
mov
mov
repnz
cmc
and
push
lea
bound
cmp
pushf
push
sub
jae
push
push
sahf
sti
outsl
out
xor
mul
push
mov
add
addr16
test
jns
dec
shr
popf
fdivl
adc
popf
js
xchg
sahf
test
xor
pop
inc
cmp
push
add
pop
mov
aam
and
sub
and
imul
jg
dec
mov
inc
add
jge
cmp
out
scas
pushf
mov
sbb
ss
scas
les
adc
fistps
icebp
notb
mov
mov
sbb
push
in
test
jmp
addr16
stos
fs
pop
enter
addr16
jmp
cmpsl
repnz
lret
mov
lds
imul
in
lods
pusha
inc
cmp
fs
and
xchg
jbe
lods
pushf
lret
leave
ret
outsb
rol
push
or
pop
js
icebp
cmp
mov
sbb
jecxz
push
or
push
or
repnz
dec
ss
push
mov
pop
ret
test
inc
mov
mov
cmp
xchg
repnz
inc
jae
xchg
add
and
hlt
jb
cmpsl
dec
and
push
insb
push
add
adc
sbb
dec
into
adc
jo
mov
inc
test
adc
mov
xorl
dec
sub
pop
mov
inc
daa
xchg
jne
push
pop
jne
rcl
int
jl
push
testb
movsl
or
push
outsb
aas
push
sarl
cmp
rcr
repz
add
data16
rcll
test
shl
shll
dec
daa
into
push
cmp
sarl
push
jne
lea
jmp
shll
stc
push
scas
sti
addr16
imul
add
nop
ja
xchg
aas
in
xchg
imul
pop
cmpsb
cmp
push
and
and
pusha
mov
and
cmp
push
or
cmc
int3
aam
aas
push
jg
push
repz
jle
jge
cmp
mov
int3
sbbb
ffreep
cld
jnp
sbb
pop
mov
pop
cmc
popa
lea
fildll
test
fidivrl
repnz
outsl
xorb
or
orb
adc
rclb
fistpll
xchg
stos
and
ret
clc
push
imul
dec
decl
incl
add
idivb
cmp
ret
xor
bound
lahf
cli
cltd
lock
add
arpl
jo
jae
mov
ret
jo
cld
js
pop
inc
ja
pusha
in
fistl
pop
sub
test
mov
sbb
aad
ret
xor
mov
lods
inc
dec
push
mov
hlt
add
mov
insl
sbb
aaa
xor
push
mov
jg
insl
or
xor
sbb
pusha
push
clc
inc
add
imul
loopne
xor
pop
data16
add
je
aad
pop
sub
insl
mov
mov
bound
scas
test
clc
gs
setns
rolb
clc
ljmp
lret
cld
movsl
jecxz
bound
lret
daa
inc
pop
mov
roll
shlb
sbb
ficompl
fcoml
fldenv
add
outsl
or
pushf
jmp
sti
call
cltd
push
cmpb
jmp
aaa
adc
jmp
dec
movsb
dec
mov
out
xchg
cli
sub
push
adc
sbb
das
adc
dec
arpl
inc
roll
jns
imul
push
cli
push
mov
sub
ja
mov
sti
adc
fsubl
enter
dec
decb
push
cmp
push
xchg
mov
dec
mov
add
imul
sub
push
jg
lods
stc
pop
push
pop
cmpsb
mov
sbb
jecxz
mov
mov
aam
movsl
movsb
iret
dec
inc
or
cmpsb
and
xchg
cmp
test
mov
lods
scas
pusha
xor
aad
loope
push
push
out
adc
mov
lcall
imul
bound
mov
xor
lods
sbb
loop
call
daa
mov
sbb
addr16
pop
scas
cmc
xchg
mov
fimull
xchg
test
xchg
popf
sub
insl
cmp
shll
in
inc
xlat
scas
mov
mov
popa
sub
aam
jne
movsl
mov
inc
faddl
test
fdivs
into
inc
mov
scas
shr
add
lret
cmpsl
js
and
pushf
out
mov
in
xchg
mov
inc
fistps
pop
jecxz
xchg
aas
pop
imul
xchg
push
insl
mov
push
add
dec
mov
fnstcw
test
and
jecxz
or
push
lahf
dec
in
add
sub
je
imul
sbb
ficomps
adc
loopne
hlt
mulb
and
pop
xor
inc
loope
mov
sbbl
dec
push
mov
cmp
push
out
aad
or
mov
movsb
mov
repnz
lds
cmp
or
sbb
rclb
xor
mov
lret
data16
lods
mov
xchg
mov
pop
add
xchg
jnp
sbb
js
inc
scas
cmp
mov
xchg
adc
xor
std
insl
jmp
push
orl
xor
or
test
aad
in
fisubrl
jno
aad
lods
mov
mov
lods
jmp
mov
es
dec
arpl
push
add
sub
add
dec
mov
je
pop
pop
addr16
sub
stc
rcrb
push
insb
xor
or
nop
out
adc
shll
and
sahf
inc
or
out
insl
das
sbb
arpl
xchg
inc
lahf
mov
mov
add
inc
pop
adc
aam
push
inc
daa
xchg
out
lret
cmp
pop
adc
push
pop
pop
or
ret
iret
popa
cwtl
in
sub
push
sbb
fmul
mov
dec
pop
gs
add
imul
fldt
xchg
fndisi(8087
pop
push
std
push
out
iret
xchg
inc
jmp
fsubrp
icebp
aad
stos
push
call
movsb
repnz
jge
cli
push
popf
pop
ja
pop
or
es
mov
or
dec
mov
cmp
sub
mov
loop
cmpsb
cmp
pop
sarb
and
jl
dec
arpl
push
shll
lret
imul
mov
cmp
cs
stos
arpl
hlt
adc
out
cmp
je
or
ret
or
adc
test
mov
hlt
sbb
mov
sub
inc
ret
xor
xchg
test
jl
mov
dec
add
adc
mov
mov
loope
icebp
call
push
in
test
push
loope
and
inc
leave
push
add
in
push
aam
sbb
out
xchg
lahf
in
imul
adc
add
js
mov
adc
cmp
pop
pusha
mov
or
fldl
xchg
testl
lods
test
stos
adc
icebp
das
push
movb
shr
popa
mov
ds
mov
sbb
out
add
cmp
dec
iret
mov
xchg
sbb
push
mov
cmc
push
jmp
push
mov
das
cmp
mov
jnp
push
in
loope
and
jno
jnp
mov
enter
lods
sarb
add
ss
dec
fnstenv
nop
scas
xor
movsl
pop
xor
or
mov
pop
push
jmp
sub
jne
outsl
push
and
push
adc
jg
jle
xchg
dec
out
outsl
es
insb
lods
inc
leave
daa
jp
mov
out
aas
adc
and
lret
out
bound
imull
or
mov
int
aas
sub
jne
in
jmp
int3
sub
cmp
xor
filds
andl
pop
mov
aaa
push
mov
mov
sbb
cmp
sbb
xchg
sbb
dec
mov
icebp
inc
sarb
pop
jl
repnz
adc
lods
addl
push
loopne
out
stos
pop
and
mov
ss
and
mov
outsl
fs
jno
mov
out
out
and
andl
push
mov
xchg
xchg
jecxz
je
jns
mov
inc
and
or
mov
mov
adc
push
or
xchg
or
movsb
bound
int3
rclb
sahf
mov
notb
push
mov
rolb
sbb
es
inc
fistl
adc
lods
pop
hlt
and
lock
mov
or
dec
inc
mov
or
ljmp
push
addl
lea
add
pop
push
popa
jb
sub
inc
xor
pop
xor
ds
test
cmp
lods
fldcw
mov
jns
or
outsl
ds
pop
test
jne
test
imul
cmp
or
mov
nop
bound
pop
and
sub
inc
inc
pop
jne
leave
push
test
add
mov
cmp
out
xor
fcmovne
dec
nop
fistps
adc
dec
test
jp
popf
hlt
mov
sub
inc
mov
mov
inc
sub
mov
sahf
jmp
out
dec
lea
fidivrl
dec
clc
adc
popa
sets
leave
movsb
sub
pop
es
aam
mov
out
shrb
dec
das
fisttps
scas
fidivrl
outsl
and
stos
jmp
mov
in
cmc
test
cmc
repnz
fiadds
mov
testb
push
jmp
xorb
inc
in
and
rcll
imul
adc
adc
mov
pop
and
imul
cmp
fwait
testl
call
pop
push
insl
pop
ss
std
imul
jo
iret
cmpsl
sbb
movsb
dec
push
int
push
adc
jl
jle
mov
mov
jne
lret
cmc
pop
in
cmpl
push
movsb
lds
cmp
nop
test
cmp
dec
and
xchg
pop
xchg
stos
mov
pusha
xchg
mov
sub
test
xchg
add
pusha
jae
and
xor
jmp
rorb
fxam
roll
mov
inc
push
cmpsl
adc
stc
mov
jmp
push
pop
inc
out
sar
loop
jge
imul
pop
pop
mov
or
movsl
cli
mov
sub
mov
aaa
adc
push
outsl
or
sub
lds
add
mov
lcall
stos
mov
call
pushf
cmp
add
and
and
mov
icebp
adc
pushf
inc
pop
inc
adc
add
dec
mov
mov
xchg
cmpsb
loop
outsl
cmpsb
or
cmp
std
dec
outsl
mov
sub
ret
stos
nop
jl
mov
cli
and
jmp
movsl
notl
shl
or
movsb
repnz
cmp
call
push
add
lahf
or
cmp
lcall
sar
inc
adc
dec
inc
les
add
stos
mov
push
add
pushf
xchg
sbb
sahf
pop
xchg
das
pop
cmp
test
in
int
cmpsl
or
insb
cmc
popf
cmp
sbb
adc
adc
hlt
out
xchg
mov
push
cmpsb
and
sub
jmp
sahf
ljmp
jo
enter
lods
fstpt
dec
addr16
pushf
mov
ds
in
icebp
mov
inc
hlt
sub
addr16
mov
idivb
sarl
add
call
fld
pop
jo
bound
cmp
mov
pop
lock
pop
das
and
xor
stos
fstpl
faddl
outsb
adc
pop
mov
loope
fs
cwtl
pop
andl
scas
aas
aas
inc
scas
jge
movsb
xchg
xchg
add
jns
add
imul
mov
rorb
xor
dec
stos
stc
jg,pt
add
in
decb
inc
ror
sti
add
hlt
pop
out
rcrl
push
sub
das
xchg
pop
mov
ret
xchg
inc
jae
int3
add
in
dec
cmp
lods
adc
push
ret
inc
pop
scas
fiaddl
adc
add
xorl
jb
push
lahf
and
mov
jg
movsl
dec
xchg
sub
mov
jns
mov
or
xchg
xchg
jge
mov
fld
pop
add
movsb
push
jbe
xchg
mov
cmp
ficoms
mov
push
ja
je
jp
clc
inc
add
pop
mov
clc
xchg
or
push
cmp
adc
lods
sub
jno
inc
scas
ja
add
xor
jae
cld
or
imull
std
mov
mov
mov
sbb
sbb
xor
cmp
aad
roll
shrl
mov
or
fidivs
addl
sbb
leave
aad
xor
add
out
fstl
sub
or
push
int3
inc
filds
in
jae
outsl
cmp
cmpsl
insb
lret
sub
mov
jmp
add
lds
sub
loop
jns
or
roll
insb
mov
push
std
add
dec
fcoms
repz
and
mov
xchg
inc
data16
push
cmp
and
pop
adc
rcrl
sub
mov
jo
lcall
rcr
cmp
aas
fidivs
sbb
fdivrs
and
lods
movsb
dec
push
int
dec
out
mov
and
stos
lcall
xadd
cltd
xchg
add
dec
mov
jnp
clc
jl
cmp
jg
add
adc
push
mov
mov
or
in
add
push
imul
jl
pop
sub
cmp
cmp
xor
loope
stc
sahf
sahf
cmp
sbb
cli
xchg
sarl
and
pop
pushf
add
roll
stc
sub
xlat
movsb
and
pusha
xor
dec
cmc
fmuls
push
dec
pop
js
sti
mov
lret
mov
jnp
gs
xchg
or
loop,pn
mov
test
cmc
adc
div
push
fsubrl
jae
repnz
std
scas
fs
insl
push
les
jle
mov
mov
add
mov
arpl
outsb
dec
cli
hlt
mov
add
cmp
fdivs
mov
mov
loop
push
xchg
ret
push
mov
scas
push
shrb
in
test
clc
divl
cmp
mov
scas
outsl
shr
idivl
jecxz
filds
pop
cld
lret
push
sahf
pop
mov
xor
mov
mov
mov
js
icebp
gs
int
jg
jecxz
iret
std
pop
out
and
inc
xor
test
mov
sub
ds
push
mov
xchg
or
iret
pop
das
mov
push
mov
or
or
lock
fs
cmc
fs
dec
in
dec
xor
add
mov
movsl
jge
xchg
mov
sbb
jno
pop
add
inc
push
xchg
mov
add
dec
push
or
jle
xchg
sbb
jge
and
aas
fisttpll
inc
jae
mov
cmpsl
jl
or
pushf
xchg
xor
iret
lods
push
aaa
cld
jp
scas
lock
xchg
ljmp
fsts
lds
add
jbe
cmc
in
xor
fsubl
push
call
stc
push
fstps
mov
sbbb
in
into
inc
lods
cmp
dec
cwtl
pop
out
aam
popl
iret
lahf
leave
or
push
xchg
call
inc
das
ret
repnz
mov
add
jns
push
nop
into
cmp
shll
fsts
cmp
rcrl
mov
int
jle
push
lock
stos
shr
adc
out
popf
fbld
mov
or
cmpsl
adc
cld
inc
cs
std
icebp
mov
pop
mov
lret
ror
adc
push
sub
fdivrl
push
dec
mov
dec
mov
push
sbb
sbb
stos
es
and
xchg
sub
ds
es
jns
xchg
sbb
pusha
js
lds
mov
cmpsb
test
arpl
mov
mov
mov
or
test
lcall
xor
dec
pop
lods
fwait
rcll
ret
jp
xchg
cwtl
gs
or
insl
fs
sbb
subl
xchg
fs
fldl
iret
pop
xchg
pushf
mov
xchg
and
cmp
dec
shrb
and
clc
aaa
stos
sti
mov
adc
dec
jmp
divb
mov
lea
sbb
sbb
fs
and
jmp
scas
inc
insb
add
pop
idivb
dec
jno
out
stos
mov
movb
fwait
xchg
push
fucomip
jp
ljmp
mov
adc
imul
mov
into
push
pop
icebp
mov
in
sub
jge
inc
xor
btc
xor
das
scas
pop
mov
mov
xor
push
mov
push
xor
loop
mov
ss
xchg
sub
and
push
dec
daa
insl
or
inc
jle
push
pop
xchg
fnstenv
sbb
or
xor
shrb
cwtl
pop
jno
add
insb
mov
add
xor
push
cmp
jge
test
jle
add
jge
or
js
jge
and
int3
mov
mov
ret
les
cmp
pop
ss
add
xchg
dec
dec
lret
pop
and
xor
pop
mov
daa
dec
into
gs
leave
fcmovu
cmp
hlt
jne
mov
cli
test
and
aad
add
stc
enter
out
lcall
icebp
ffreep
gs
xchg
push
insl
outsb
dec
shr
pop
pop
adc
sbbl
fwait
in
jp
cld
xchg
push
push
dec
lods
inc
pop
or
les
add
xchg
sub
mov
push
mov
jbe
pop
fidivs
ret
aas
out
sub
push
lret
mov
notl
mov
mov
lahf
in
es
xlat
rorb
push
lret
jecxz
mov
adc
mov
inc
dec
cmc
fwait
arpl
sahf
and
inc
gs
fisubs
mov
cs
or
pop
xchg
push
push
loopne
add
mov
insb
pop
or
lods
test
inc
inc
cmp
mov
jecxz
dec
mov
sarb
jne
pop
loope
les
je
enter
cmp
or
icebp
mov
xor
push
and
push
inc
add
imul
jmp
lock
cmc
fsubs
add
sub
inc
xlat
or
cmp
imul
pusha
xchg
movsb
xor
fs
pop
mov
jns
ficoml
cltd
cmp
imulb
mov
test
xchg
cmp
pop
jmp
fidivrl
fisubl
cwtl
mov
dec
loop
mov
and
jp
jle
cmpsl
add
mov
cmovns
dec
lock
push
mov
gs
jo
adc
fistpl
inc
inc
fldl
mov
pop
insl
sub
icebp
push
pop
pop
inc
shrl
inc
add
jns
enter
sbb
adc
stos
dec
imul
es
outsb
pop
mov
adc
int
loop
cmc
jno
mov
push
xchg
mov
pop
inc
adc
aad
pop
lret
aad
filds
mov
pushf
pop
mov
mov
cmp
sub
sub
jmp
out
mov
imul
test
jo
sbb
dec
call
push
mov
loop
insl
pop
cmp
sbb
shlb
in
xchg
popl
ja
mov
cmpsb
enter
aaa
shll
adc
ja
mov
cwtl
nop
xchg
xlat
faddl
mov
insb
jmp
mov
jb
sbb
insl
sbb
sub
mov
dec
mov
mov
dec
mov
xor
cld
mov
add
mov
lahf
adc
xor
fstpt
aam
ja
mov
loop
adc
into
add
scas
enter
push
dec
inc
cmp
test
stos
sbb
ret
push
lea
movsl
out
call
stos
cmp
jo
hlt
imul
rep
xor
push
lcall
and
int3
pop
or
xchg
outsb
es
jb
jns
es
mov
sbb
shrl
stos
loopne
les
jmp
pusha
jle
fucom
negl
xchg
or
loop
pop
mov
add
negb
pop
or
daa
dec
and
cmpsb
xchg
clc
fcoms
inc
and
xor
sbb
movsl
das
daa
cmp
xor
mov
mov
or
add
pop
mov
in
mov
jbe
in
or
push
push
push
cmp
sti
stos
daa
shll
xor
cld
data16
popa
mov
add
xor
movsb
sub
mov
pop
cmp
pop
mov
mov
mov
inc
add
mov
fisttpll
int3
jnp
push
mov
jl
lret
lcall
pushf
sbbb
loop
and
adc
pop
pop
daa
int3
or
push
lock
sub
lods
mov
lea
call
out
lods
outsb
test
mov
fisttpll
push
les
pop
ret
mov
push
aad
jmp
data16
loopne
push
icebp
push
jo
lahf
jecxz
mov
dec
pop
xchg
pop
adc
mov
push
cmp
mov
shr
dec
mov
or
mov
adc
arpl
mov
and
or
int
or
add
push
jnp
mov
mov
fwait
sbb
lock
sarb
mov
add
inc
sbb
jl
movsl
sbb
fwait
pop
hlt
pop
push
cmp
aad
pusha
int
std
and
mov
push
out
addr16
push
add
pop
shrl
cmp
xor
stos
out
nop
pop
cmp
or
insl
clc
cltd
int3
sbb
push
imul
adc
aad
js
les
pop
popa
xchg
in
push
sbb
pop
lret
fisubrl
mov
int3
out
jl,pn
dec
mov
scas
pop
mull
es
and
or
and
and
inc
stos
push
inc
xchg
jle
or
dec
repz
stos
push
lods
xchg
adc
xchg
scas
fcomip
pop
jns
and
xor
push
ljmp
sub
xor
dec
add
je
mov
cwtl
and
int
lcall
cmp
clc
push
dec
orb
dec
adc
pop
shl
orl
pop
and
mov
sub
lahf
inc
scas
fmuls
dec
and
psubsw
pop
dec
cmpb
aad
xchg
xchg
movsl
in
test
jecxz
dec
in
ja
mov
fdivl
pop
xchg
jo
aad
pshufw
es
xchg
or
jns
testb
inc
inc
mov
mov
daa
test
sub
xor
mov
inc
fwait
adc
repnz
xchg
int3
lods
jge
xchg
lods
cmpsl
lea
mov
adc
fistps
in
sub
sub
lret
push
pop
xchg
jb
das
loopne
jmp
pop
js
lods
test
lock
jno
fadds
bound
mov
insl
int
cmp
nop
lret
add
dec
into
rolb
repnz
orl
lods
pop
lods
fwait
mov
or
cmc
add
lods
cli
divl
xchg
ret
sbb
ss
data16
cmpsb
push
xchg
or
stc
pop
sbb
mov
inc
mov
pop
js
xchg
rcrb
call
xchg
fs
mov
jle
into
idivb
xchg
push
mov
xor
ret
push
dec
mov
bound
push
jp
sbb
xor
cmp
shll
fcmovbe
lret
mov
adc
jns
je
jmp
pop
mov
hlt
jecxz
clc
pop
ja
inc
inc
sbb
dec
adc
stos
add
into
fdivp
imul
jbe
mov
lret
lahf
cmp
flds
pop
aam
sbb
ud1
fisttpll
lods
push
jno
pop
mov
mov
dec
imul
movsl
in
out
fistl
mov
lea
arpl
adc
cmp
arpl
jns
cmpsw
jne
scas
inc
movsb
mov
shr
out
fxch
cmpsb
push
or
dec
or
icebp
ss
sbb
push
cmpsl
sub
push
sti
mov
aaa
mov
pop
push
es
xchg
add
xor
outsl
test
mov
xchg
mov
loopne
mov
int3
sahf
xor
aaa
mov
test
shlb
lods
ret
lahf
sbb
js
push
and
fistpll
dec
jmp
jb
call
inc
sub
aam
dec
mov
into
lcall
es
cmc
sbb
xchg
dec
cmp
push
std
push
mov
xchg
insl
adc
pop
mov
popl
outsb
or
inc
not
stc
dec
sbb
push
imul
cwtl
pusha
in
inc
outsl
fildll
cmp
xor
dec
pusha
sub
mov
pop
ds
movsb
and
loop
dec
push
loope
movsb
ror
call
movsb
sub
bound
loopne
fcmovbe
adcw
out
and
mov
in
mov
popf
mov
inc
into
out
cmpsb
inc
sub
andb
daa
and
mov
pop
mov
xor
push
pusha
test
mov
mov
or
imul
clc
mov
jmp
decl
push
lea
loop
subl
insb
pop
jl
sbb
les
mov
out
leave
jle
rol
popa
pop
in
lcall
ja
push
call
lock
add
test
sbb
sbb
lcall
imul
ret
andl
pop
lds
mov
adc
pusha
in
push
insb
inc
decb
clc
inc
rclb
jmp
add
shll
icebp
js
movsb
cmp
or
je
jne
xchg
adc
mov
push
inc
adc
mov
dec
test
dec
add
mov
dec
jne
adc
ja
xor
pcmpeqb
js
cmp
jno
xor
and
mov
cld
in
and
sbb
cmp
clc
imul
dec
add
add
fnstcw
mulb
xchg
fstpl
insb
mov
cli
ja
in
mov
mov
mov
pop
out
cmp
push
dec
mov
inc
pop
xor
fidivrs
jno
test
cmp
adc
into
test
add
outsb
xor
cmp
fistpl
dec
inc
xchg
inc
pushf
adc
or
jg
inc
xchg
xchg
xor
shlb
sbb
pushf
inc
or
inc
pop
data16
movl
aad
imul
ss
mov
popa
and
mov
fldt
jl
mov
flds
jmp
int
adc
stc
icebp
in
fcoml
sub
dec
das
xchg
pop
push
add
pushf
jbe
mov
pop
pop
adc
inc
adc
mov
mov
jnp
mov
test
test
or
int3
xchg
sub
mov
push
mov
xchg
push
lods
and
pop
mov
push
xchg
sbb
outsl
jle
sahf
jp
fwait
dec
xchg
fnsave
negl
icebp
xor
xor
mov
xchg
les
lods
fwait
popa
repz
aaa
adc
iret
das
popf
pop
sbb
mov
sbb
mov
adc
vextracti64x4
cwtl
inc
stc
cmp
adc
cmp
pop
popf
fcompl
sub
cmc
and
les
push
cmp
and
or
cmp
jmp
and
adc
push
xchg
jge
xor
or
sub
stos
iret
insb
sti
sub
and
and
aam
mov
or
xchg
and
ds
push
push
mov
test
stos
cmp
insb
pop
mov
xchg
jge
popa
insl
subl
scas
add
js
mov
stos
pop
pop
clc
jg
test
gs
mov
scas
mov
xor
push
mov
xor
jb
iret
or
adc
xchg
fisttpll
ds
lahf
jo
sbb
addr16
mov
and
pop
push
dec
cmp
add
xchg
mov
in
ficoms
dec
cmpsl
testl
push
hlt
mov
inc
popa
mov
das
xchg
jb
jae
push
xchg
or
jb
les
dec
xchg
js,pt
imul
sbb
cmp
inc
cwtl
fidivrs
push
push
subl
mov
cmp
adc
or
or
pop
dec
jge
mov
ret
dec
sub
lods
lods
xlat
mulb
hlt
lret
pop
test
into
dec
loope
pop
in
add
or
lahf
lahf
sub
daa
repz
shrl
das
fcoms
movsb
add
das
in
in
ja
and
ret
jmp
iret
mov
outsb
push
dec
pop
push
inc
mov
bound
cmp
scas
ss
enter
imul
push
mov
mov
faddl
push
sbb
xchg
std
sbb
mov
jp
xchg
mov
sub
out
push
leave
sbb
pop
push
js
mov
xchg
fsub
sbb
push
rol
test
gs
out
xchg
loopne
jb
rolb
mov
sahf
dec
in
sub
cmp
adc
or
clc
ljmp
and
dec
inc
loopne
xor
daa
mov
movsl
pop
outsl
pop
inc
mov
pop
fstps
popa
lret
mov
sbb
pop
imul
cld
pop
mov
xchg
nop
pop
xchg
mov
dec
sar
lcall
mov
jns
mov
out
aad
or
enter
sbb
jl
pop
sub
xor
shrb
push
adc
and
or
incl
scas
cmpsb
cld
in
push
xchg
loopne
mov
imulb
jne
jmp
jno
xorl
xchg
div
and
inc
sub
pop
in
ja
jge
xor
test
pop
sarl
imul
mov
or
fldt
fcmovnbe
cmpsl
leave
push
and
sub
in
mov
adc
xchg
pop
stc
jnp
add
pop
jo
stos
stos
cmc
insl
ljmp
push
dec
jae
sub
and
adc
xorl
push
sbb
dec
test
sahf
cli
inc
xor
pop
mov
adc
or
sbb
mov
or
pop
das
and
and
sub
push
ljmp
cmpsl
mov
cmp
xchg
aaa
incl
rcrl
mov
shlb
pop
xchg
mov
adc
cmpsl
ja
xchg
jbe
pop
es
jo
pop
icebp
mov
pushf
xor
cmpl
stc
jo
test
cltd
jae
in
mov
sub
loopne
out
paddusb
testb
out
pop
hlt
inc
jnp
icebp
pop
mov
inc
inc
fwait
ret
mov
imul
push
cmp
lea
or
lds
jno
cli
sbb
arpl
insb
adc
sub
jmp
fidivs
lods
ss
xor
dec
idivb
inc
xchg
mov
dec
jno
sbb
dec
mov
popa
test
addr16
div
mulb
xor
test
lcall
lea
fisttps
adc
inc
mov
push
fstpl
adc
leave
ret
push
xor
inc
std
lahf
cmpsb
push
mov
jl
nop
add
xchg
andl
jae
loopne
outsb
mov
sahf
lods
loop
mov
loope
dec
add
mov
xor
out
rclb
mov
jno
mov
outsl
inc
sarb
jl
rorb
leave
mov
jl
loope
adc
cmpsl
push
xchg
cmpsl
jae
rorb
imul
push
rcll
ror
xchg
push
pusha
push
cmpb
inc
mov
fdivrs
pop
daa
enter
xchg
int3
test
mov
lcall
mov
mov
or
xchg
mov
push
test
mov
push
or
or
inc
or
mov
cmp
cmp
repnz
dec
xorb
das
icebp
into
xchg
jge
dec
cmp
pop
xor
inc
mov
andb
xor
pop
or
cmpsl
jp
fsubs
fildl
testl
cwtl
sub
rcrl
push
dec
es
out
fcmovbe
jg
mov
add
pop
mov
jno
jle
or
int3
xchg
and
enter
add
pop
xor
adcl
test
stos
xor
mov
mov
in
outsl
xchg
cmp
and
stos
pop
test
xor
ficoms
lods
int
lret
fs
loope
mov
adc
adc
xchg
cmp
out
xor
sti
xorl
ret
in
pop
test
xlat
fmull
xor
insl
pushf
add
movsb
notl
hlt
in
mov
mov
mov
testl
out
jae
mov
jge
adc
pushf
dec
sbb
int3
cmp
add
pop
and
jae
aas
pop
loop
xor
pop
adc
cmp
mov
outsl
gs
lods
gs
and
pop
popa
ficoml
or
scas
add
xchg
mov
in
jns
das
je
sbb
rorb
pop
cmp
sti
dec
cld
cmp
jp
mov
test
cmp
lcall
loop
add
mov
and
xor
push
add
sub
pop
pop
push
sbb
insl
test
popf
mov
or
mov
inc
cs
mov
jmp
inc
shlb
mov
outsb
bound
leave
xlat
pop
data16
mov
add
sub
mov
jp
push
jge
rcrl
xchg
mov
push
cmpsl
adc
cmc
call
dec
loop
sub
mov
mov
dec
out
sbb
and
aad
es
mov
mov
les
cltd
loopne
frstor
sbb
int3
fs
jno
sbb
pop
xchg
je
cmp
mov
xor
sub
mov
inc
sub
pop
xlat
stos
push
outsb
cmp
cltd
push
or
hlt
adc
push
stc
arpl
adc
out
call
aas
das
frstor
sahf
loop
mov
pop
push
sbb
dec
insl
shr
xchg
lea
sbb
inc
scas
and
pop
xchg
cmc
dec
mov
sbb
dec
fstl
xchg
sbb
hlt
push
or
add
fucomp
xchg
sbb
loope
test
in
test
lret
cmp
adc
xchg
dec
mov
mov
shll
sarl
mov
push
les
out
jg
mov
fisttpll
inc
and
xchg
test
add
cwtl
cmc
xchg
jne
js
movsl
test
testl
mov
jle
fsubrs
pop
lds
in
dec
and
adc
shlb
movsb
add
jb
add
cmpsl
xchg
xor
adc
cmp
jnp
insl
sbb
aaa
mov
lret
mov
mov
pop
dec
shrb
sub
inc
and
gs
pushf
pop
js
rcl
insl
jb
inc
push
shl
jle
cld
pop
sbb
shl
inc
sub
fidivs
pop
or
and
cmp
mov
jns
push
stos
or
inc
xchg
xchg
mov
loopne
mov
popa
cmpsb
imul
in
cs
jbe
sahf
mov
pop
inc
out
lea
mov
adc
xor
mov
ss
sub
jae
mov
sbb
popf
jnp
loope
mov
pusha
sbb
jl
loop
imul
mov
push
clc
inc
loopne
dec
pop
cmp
mov
adc
mov
adc
cltd
cli
pop
loopne
subl
lcall
call
mov
das
imul
push
gs
cmpsl
dec
jbe
pop
jmp
xchg
jns
inc
adc
or
mov
xlat
push
cmpsb
mov
cmp
xor
sub
outsb
dec
adc
fndisi(8087
pop
or
int3
pusha
pop
adc
jecxz
std
adc
jnp
std
cmp
aas
jno
movsl
leave
into
pop
adc
in
test
jbe
fs
pop
mov
idiv
push
and
cmpsl
lcall
push
popf
shll
fwait
xor
sbb
shll
jmp
test
adcb
int3
jns
dec
lret
in
add
ds
jnp
jno
loopne
lods
sbb
and
aad
cld
loopne
mov
mov
pushf
lret
and
sub
jp
shll
loop
repz
or
shll
mov
inc
test
arpl
lret
pop
lret
or
inc
sbb
fdivrs
sti
test
sbb
push
in
xchg
jge
and
cmpsl
xor
push
ljmp
fimull
repnz
sub
sub
insl
loop
ret
dec
movsl
loop
push
inc
cmp
add
idivl
push
xor
sbb
add
push
aaa
xor
dec
jp
rolb
or
xor
outsb
sahf
pop
and
jae
pop
xchg
adc
subb
lahf
push
movsb
rol
stos
push
push
enter
inc
stos
orb
in
sahf
lret
test
mov
out
divb
in
icebp
xor
daa
jg
inc
cmp
push
sahf
xor
mov
add
orb
ss
movsl
xor
pop
sbb
mov
jmp
sub
xor
lar
mov
ficoms
xor
mov
xor
mov
xchg
push
out
dec
testb
out
mov
fwait
movsl
push
dec
dec
out
pop
cwtl
flds
int3
shlb
cmc
bound
shl
dec
cwtl
push
imul
pop
sbb
jp
movsl
add
sub
scas
mov
mov
out
pop
sub
jl
jp
mov
repnz
out
add
fcompl
xchg
movsb
push
cmp
addl
mov
mov
rcrb
sbb
das
outsl
pop
aaa
test
lcall
dec
dec
sbb
outsl
mov
mov
jbe
inc
jnp
sub
mov
filds
into
and
mov
and
cmp
in
shrl
pop
out
cmp
setne
es
pop
lods
insb
inc
push
jb
jecxz
iret
mov
push
shll
adc
scas
imul
mov
and
cmpsl
xchg
lahf
cld
negl
fsubrs
cs
pop
ds
movsl
jp
xor
sub
cmp
aam
scas
or
inc
cli
aaa
push
in
cmc
mov
xchg
lock
aaa
jb
push
stc
lcall
push
sbb
in
scas
dec
call
rcrb
adc
stos
sub
lahf
dec
push
insb
scas
test
mov
add
je
sub
test
sub
out
push
shlb
in
movsb
bound
dec
and
push
fdivr
mov
inc
fs
mov
call
das
inc
xchg
lcall
inc
pop
cmp
cwtl
insb
sub
lea
cmpsl
sub
add
sbb
jb
xor
sbb
jmp
mov
push
xchg
stc
test
jmp
add
mov
dec
fs
hlt
cld
dec
jae
mov
or
pop
adc
je
pop
dec
mov
iret
mov
fnstcw
daa
mov
icebp
ds
add
push
rcrl
fnstsw
dec
daa
mov
mov
adc
dec
daa
and
jle
popf
sub
push
inc
call
or
testl
jne
jecxz
rclb
or
inc
pop
dec
test
mov
dec
out
adc
cli
cwtl
sti
push
lods
rorb
shl
rcll
and
pop
mov
ja
add
pop
pop
inc
in
stos
and
popa
sbb
loopne
adc
or
inc
clc
aas
scas
or
xor
adc
enter
jmp
data16
cmc
adc
mov
lods
jns
leave
stc
ret
jg
dec
push
mov
loope
push
or
xor
push
rcrb
push
ficomps
and
aaa
cltd
mov
sbb
ds
fildl
jb
loopne
in
cmpsb
sarb
enter
pop
sbb
mov
push
and
cwtl
add
mov
pop
daa
adc
lods
movl
mov
aaa
jbe
mov
or
mov
xor
mov
mov
sbb
sbb
mov
or
addr16
test
cli
mov
imul
out
addr16
roll
testb
and
cmpsb
xchg
stos
fcmovbe
out
fistl
jmp
inc
and
or
out
das
add
or
sti
imul
inc
pusha
outsl
clc
data16
pop
add
xchg
aam
std
cmp
fwait
push
lea
xor
cmpsb
sbb
leave
es
das
inc
out
sbb
jmp
mov
cwtl
pop
loop
jno
or
mov
test
outsl
sub
rcll
jp
icebp
fcoml
push
out
repnz
loopne
or
jecxz
xchg
inc
xlat
loopne
in
fstps
cmpsl
push
iret
insb
shll
and
imul
lock
push
dec
je
outsb
or
stc
mov
leave
arpl
mov
ljmp
add
inc
loop
fdivs
outsb
clc
cmp
xchg
sahf
sbb
jmp
lds
mov
inc
pop
dec
inc
lret
pop
xchg
cmpsl
insb
push
sbb
addr16
dec
lods
push
js
stos
cmpsb
lods
cmpsl
int3
jl
mov
lret
fisubl
push
out
stos
addr16
mov
outsb
fcomip
cmpl
mov
insb
push
fcompl
jl
dec
pop
dec
in
pusha
cmp
inc
ret
in
jge
cmp
adc
outsl
ret
sbb
pop
push
sub
js
adc
dec
repz
aad
movsb
adc
dec
mov
mov
cmc
fldenv
mov
cmp
mov
cmpsl
add
lret
es
movsb
or
lahf
aaa
or
subb
in
sub
push
dec
hlt
jmp
or
movl
sub
adc
js
sub
into
cmp
mov
mov
shl
sbb
and
enter
popa
jno
adc
dec
outsb
movsl
movsb
mov
pop
dec
in
das
cltd
cmp
inc
push
push
das
stos
dec
jo
add
add
or
in
cli
jg
sbb
cs
jl
xor
cmp
mov
fldt
pop
enter
int3
or
xor
stos
ja
call
aaa
daa
lea
dec
sub
adc
mov
push
aaa
add
std
inc
gs
dec
daa
pop
in
imul
sarl
leave
lods
or
push
or
pop
mov
jo
dec
outsb
xchg
ror
pop
out
std
stos
jo
inc
clc
imul
daa
push
mov
jns
and
xorl
pop
adc
sahf
jecxz
sub
sbb
mov
inc
cld
mov
dec
pop
aaa
jmp
push
gs
lock
add
xchg
add
das
add
cmp
inc
lahf
jp
cmp
cmp
add
outsb
cmp
cmpsl
loopne
out
inc
cs
outsl
push
aad
adc
push
addr16
loop
shl
mov
add
rcr
pop
mov
cld
lods
mov
pop
jae
dec
dec
cli
or
jmp
inc
or
and
mov
cs
xchg
add
push
mov
mulb
xchg
divb
call
and
push
je
movsb
imul
mov
fldcw
xorb
iret
fdivs
cmp
shl
inc
add
sbb
sbb
popa
fistps
dec
sbb
dec
add
cltd
jp
xchg
mov
and
std
and
icebp
mov
arpl
push
cmp
adc
imul
xor
ja
icebp
push
sahf
faddp
in
ss
fdivrl
fdivl
mov
lcall
mov
outsb
fwait
testl
mov
mov
add
inc
push
lret
push
hlt
and
inc
push
add
adc
aad
lock
push
cmp
add
insl
testl
arpl
icebp
dec
adc
add
cld
ret
sub
inc
je
data16
fs
out
and
loopne
adc
fst
push
pushf
and
les
insl
or
sub
and
insl
lods
out
push
mov
dec
sub
push
gs
out
inc
add
int
inc
mov
out
mov
push
loop
jb
jb
das
sti
xor
insb
xchg
inc
les
shll
scas
sbb
mov
lcall
scas
add
pop
js
rcr
sbb
es
movsb
inc
cmp
je
xor
cld
xor
popf
ds
cmp
inc
xor
sbb
jle
scas
pusha
sub
xor
pushf
mov
call
movsb
pop
pusha
xchg
jle
icebp
sbb
mov
addr16
out
shrl
cltd
sbb
and
cmp
lods
adc
cli
nop
arpl
push
sub
pop
cmc
loop
inc
push
adc
mov
cmp
fldt
mov
fdivrl
cmp
in
add
fdivr
xchg
rolb
and
nop
cmpsb
sti
nop
ret
icebp
call
stos
lret
rorl
push
ret
sbb
xchg
aad
mov
mov
xchg
xchg
cmp
add
negl
ss
sub
inc
arpl
popa
fsubrl
and
pop
xchg
fdivrs
jb
mov
sahf
adc
dec
mov
adc
jo
push
adc
and
and
jge
mov
fisubl
inc
mov
dec
bswap
out
push
pop
pop
sub
mov
es
jae
push
xorb
in
mov
push
rcrb
insl
cmp
pop
fisttpl
push
push
mov
addr16
mov
roll
xor
mov
sub
xor
xchg
jne
jb
or
xor
and
push
dec
jmp
jle
mov
or
sub
in
xchg
sub
xor
xchg
test
mov
fisttpll
rorb
dec
test
jmp
dec
jecxz
fnstcw
pop
fists
aas
mov
sub
lock
jecxz
test
mov
lods
xchg
insl
popf
sub
pop
mov
push
sbb
jo
scas
adc
aaa
inc
jb
subb
cmpsb
ss
arpl
ja
fs
movsb
lahf
cmc
lcall
leave
iret
push
call
adc
push
cmp
popf
mov
and
ljmp
aad
ja
and
jne
in
aaa
mov
cmp
mov
and
mov
sbb
out
push
cmpsb
mov
sbb
sbb
inc
adc
add
leave
fisttps
or
aaa
lds
xor
popa
arpl
add
ds
enter
pop
xchg
ljmp
sbb
pop
inc
outsb
lds
and
bt
ss
dec
ljmp
arpl
pop
adc
imul
xchg
cmpxchg
in
gs
into
clc
cli
dec
push
test
xchg
dec
fcmovu
lds
adc
rcll
xchg
sbb
xchg
cmp
jne
inc
mov
imul
push
sub
mov
outsl
lock
out
jo
daa
adc
xchg
push
js
mov
jl
stc
js
cmpsb
lret
out
jg
dec
sbb
adc
les
mov
dec
sbb
add
xchg
in
jl
or
inc
push
and
es
mov
ljmp
subb
push
mov
aam
outsl
testl
jb
or
jns
repnz
pop
inc
pop
inc
push
and
cld
out
mov
mov
mov
sbb
xlat
scas
rorl
in
mov
cmp
ror
push
js
sub
ljmp
in
mov
stos
mov
pop
inc
test
mov
pop
subl
jbe
sarl
mov
cmp
std
push
lea
ss
lahf
daa
mov
sahf
sbb
fisubl
mov
mov
push
int
jmp
inc
xchg
push
sbb
pop
adc
dec
xchg
push
das
cmp
xor
pop
dec
loop
mov
jg
dec
imul
inc
in
aaa
push
sub
fisubrl
std
sahf
incl
adc
pop
es
dec
movaps
cmp
nop
rclb
mov
sub
sbbl
ljmp
pop
inc
xchg
push
outsb
inc
adc
mov
outsl
les
xlat
dec
ret
hlt
loop
add
mov
arpl
adc
fwait
test
lret
mov
sahf
fs
lcall
enter
cmp
stos
jae
push
sub
arpl
or
cmovb
imulb
add
mov
and
or
bnd
xchg
popa
lods
sahf
insl
iret
add
out
mov
push
icebp
es
fiadds
sub
add
aam
ficoml
add
pop
cld
push
inc
je
dec
add
adc
orps
or
mov
lahf
mov
jg
lret
mov
fmulp
or
inc
jecxz
dec
or
sarl
aad
push
inc
sbb
movsl
push
mov
daa
mov
hlt
scas
inc
xchg
push
out
jnp
sbb
fstl
xchg
dec
addb
dec
cmp
jmp
adc
add
and
stos
mov
iret
enter
jg
arpl
jmp
mov
xlat
sbb
mov
imul
sub
or
hlt
xor
jmp
test
jno
xor
cmpsb
sbb
or
dec
mov
xlat
xlat
mov
mov
adc
or
cwtl
imul
pop
xlat
out
rolb
pop
je
push
add
adc
insl
loop
xchg
mov
adc
adc
mov
lea
dec
cmp
mov
pop
sahf
dec
mov
sahf
add
into
lahf
sbb
and
sub
fiadds
lods
mov
push
shll
mov
push
xor
pop
inc
and
loopne
decb
out
or
lea
mov
bound
mov
test
dec
loopne
imul
shll
or
mov
repz
xor
cld
mov
xchg
lock
out
add
les
insl
mov
and
adc
lret
rolb
jp
idivb
adc
sub
mov
dec
mov
dec
and
mov
adc
xchg
andl
int
xor
leave
sub
aad
ret
sbb
lahf
adc
xchg
mov
adc
pop
loopne
jae
cmc
cmp
push
cs
or
fists
adc
test
fs
loope
pop
int
xchg
jl
scas
xor
pop
lods
mov
mov
push
lret
movsl
push
or
xchg
and
loopne
repnz
test
rcrl
sub
or
sarb
push
cmc
aaa
aam
in
int3
icebp
mov
in
jo
mov
jmp
inc
xor
and
ret
xor
sar
jnp
outsl
mov
jo
fcompl
mov
movb
mov
fdivl
movsb
cwtl
sub
push
xchg
jns
sub
mov
mov
adc
lret
int
clc
in
ret
sbb
mov
mov
arpl
jp
sbb
repnz
in
xchg
stos
jge
sbb
jg
jmp
insb
mov
lods
or
fsts
and
cwtl
dec
ds
bound
aaa
cmp
inc
js
mov
mov
addr16
xor
int
adc
mov
stc
mov
push
jae
loopne
sub
outsb
mov
enter
scas
rcrl
cmpsl
nop
test
and
pusha
lcall
es
push
test
jne
shrl
cmp
lret
aam
xchg
lock
xchg
sub
les
mov
jno
bound
ds
mov
jo
ret
dec
mov
imul
stc
idivb
jmp
sub
fnsetpm(287
loope
and
pop
push
enter
xchg
test
push
and
imul
xor
or
icebp
sbb
xor
loop
lods
daa
add
push
fsts
inc
jmp
dec
fldenv
add
adc
imul
movsl
ss
hlt
cmp
mov
pop
movsl
sub
mov
sbbl
ja
mov
adc
test
in
cmp
dec
sahf
pusha
sbb
mov
clc
test
cmp
add
xor
and
pop
mov
movsb
lea
call
xchg
pop
cmp
mulb
scas
sub
pop
dec
or
movb
cmpsb
mov
inc
cs
pop
mov
int3
adc
jg
cmpsb
xchg
xchg
adc
sub
adc
negl
xchg
icebp
sbb
sub
adc
push
outsb
fbld
test
mov
mov
jmp
daa
jge
jbe
inc
mov
lods
push
and
imul
aam
jg
js
adcl
sbb
push
push
notb
and
xor
jae
icebp
cmc
push
inc
pop
mov
pop
add
add
push
sbb
test
ljmp
popf
fwait
mov
mov
xor
sti
loope
or
imul
in
ss
or
fdivrs
scas
or
adcl
ret
out
clc
cmpsb
jecxz
les
mov
adc
mov
jg
in
jns
mov
loopne
int3
dec
shlb
int
sub
loopne
loopne
fdiv
mov
popf
js
fsubrs
mov
shll
pop
and
jg
inc
xchg
pop
xchg
sbb
lahf
in
mov
dec
fdivs
les
lock
das
mov
or
outsl
aam
inc
loop
dec
aad
adc
bound
xor
jne
jg
jl
scas
adc
test
jle
xor
pop
jns
les
jb
in
call
mov
lcall
sbb
lods
jnp
loopne
outsb
das
dec
push
jo
add
sbb
out
mov
sub
addb
sbb
in
inc
and
outsb
subb
jge
jae
ret
adc
stos
dec
mov
int3
cmp
pop
adc
cmp
jno
xchg
or
leave
bound
jo
and
roll
inc
mov
mov
popf
dec
push
popa
inc
mov
aam
and
cmp
jb
and
sbb
push
cs
push
pop
movsb
dec
rclb
pop
loope
lcall
notl
scas
hlt
pusha
xchg
add
dec
sbb
imul
andl
dec
rolb
test
cmc
mov
fistps
cwtl
sub
aad
inc
xchg
cmc
xchg
mov
in
and
or
test
in
mov
stc
iret
sub
jno
stos
fisubrl
sbb
clc
xchg
fidivrl
cwtl
das
aaa
lds
mov
subl
int
inc
pushf
repnz
adc
lods
and
rolb
or
dec
daa
loopne
mov
ret
inc
dec
jb
jns
mov
mov
data16
bound
mov
mov
data16
cld
xchg
rcrl
jge
clc
pop
adc
icebp
jo
adc
int3
aas
lods
dec
cmc
lahf
inc
xchg
or
aaa
leave
test
fadd
sbb
rol
xor
ss
add
jae
and
mov
add
pop
mov
push
xor
mov
fidivrs
mov
mov
inc
xchg
adc
mov
or
push
pop
aaa
sub
mov
lahf
push
aam
inc
xor
out
sbb
add
sub
mov
jnp
xor
aad
cmp
icebp
sbb
ss
sti
sub
mov
pop
fs
add
in
and
repnz
mov
push
shrb
loop
push
notl
mov
add
clc
lcall
lock
arpl
mov
cmp
jbe
and
pushf
lcall
add
sahf
pop
loop
and
shl
arpl
sub
aas
jmp
insl
call
pop
inc
sbb
lock
inc
stos
add
aam
pop
mov
and
sub
scas
lea
pop
lods
push
jle
aaa
movsb
inc
movsl
adc
das
add
subl
and
hlt
mov
aas
and
jno
imul
cld
xchg
mov
repnz
push
cmp
out
jae
mov
gs
push
add
les
movsl
sbb
xchg
push
test
mov
arpl
subl
in
or
sub
not
jne
inc
inc
loopne
insb
xchg
nop
jle
xor
sub
mov
mov
arpl
pop
cltd
push
push
dec
lahf
push
cld
iret
sti
jl
pop
cmc
jo
imul
jle
cmp
lahf
xchg
mov
popa
and
std
adc
inc
pop
aaa
imul
or
adc
or
lcall
mov
stc
sti
mov
imul
mov
lds
daa
mov
enter
xchg
cmc
adc
xor
mov
fcoml
jb
jmp
jl
mov
seta
xchg
inc
les
out
fiadds
mov
pop
insl
fincstp
lret
mov
ja
je
bound
jbe
sub
inc
jbe
das
xlat
mov
std
xchg
push
xor
rcrb
mov
fidivrl
pop
pop
cmp
imul
loopne
sbb
pop
sbb
cli
jo
fadd
xchg
pop
or
incl
jnp
arpl
mov
in
sbb
aas
dec
xchg
push
inc
mov
jne
lret
pop
mov
xor
cld
mov
sbb
mov
mov
cli
add
pop
in
adc
stos
push
xchg
push
insb
adc
jo
imul
hlt
lahf
cs
cmp
test
xor
or
adc
icebp
pop
or
outsl
scas
ret
cwtl
stc
shlb
push
inc
mov
adc
dec
adc
sub
sti
cmp
hlt
jb
pop
movsb
xchg
out
cmp
cmc
push
jmp
push
mov
adc
iret
dec
scas
imul
mov
movsb
rcrb
rol
sub
jb
pushf
fldt
and
xchg
cld
sbb
popa
out
js
lock
aaa
xor
pushf
push
mov
xorl
adc
jl
push
push
gs
bound
add
fisubrs
or
fcomps
mov
jns
adc
add
xor
lea
fsubp
testl
add
dec
scas
lret
sbb
sub
imul
mov
jo
pop
inc
popf
fldl
dec
fsubrl
xchg
js
pusha
xchg
scas
adc
push
or
ret
sub
fldpi
pop
sbb
cwtl
lahf
adc
in
notrack
jmp
inc
insb
mov
jns
cwtl
popf
jmp
adc
xchg
lods
or
sub
xor
adcl
arpl
lods
fcomp
dec
repz
repz
mov
pop
pop
mov
movsl
sbb
icebp
push
imul
jb
aaa
jp
jl
hlt
andl
jp
fisubl
xchg
add
scas
jmp
adc
jmp
mov
inc
sar
mov
ret
in
ss
jb
cmc
push
adc
mov
lods
or
das
pop
fwait
pop
add
add
ja
jb
push
add
jmp
adc
call
hlt
mov
or
and
outsb
mov
addr16
gs
lret
inc
mov
loope
stc
push
pop
mov
pop
jg
jns
xlat
push
mov
jo
int
sahf
mov
cmpsb
adc
or
xor
call
cmp
pop
mov
jo
sub
je
lock
jae
pop
sbb
dec
imul
xchg
mov
cmp
pop
cmp
xor
sbb
js
test
cmp
fwait
xchg
loop
pop
rcrl
cmp
negb
jecxz
xchg
jp
iret
cmp
scas
gs
out
push
ss
lods
sti
test
int
pop
repz
xor
hlt
iret
imul
repz
outsb
sbb
dec
add
pop
push
xor
scas
jp
pop
xlat
fldenv
fwait
aam
out
dec
xchg
jb
xlat
jecxz
pop
cmc
inc
push
mov
aas
std
or
movsl
outsl
cltd
add
xor
out
push
pop
aam
sbb
xor
mov
movsb
jbe
leave
fiadds
pop
fstp
mov
insb
xchg
pop
pop
mov
daa
add
add
cwtd
inc
push
popl
lock
cmp
cmp
cltd
imul
aaa
imul
cwtl
int3
or
stos
xor
ret
cmp
bound
mov
inc
nop
xor
or
mov
push
in
imul
sub
inc
fcompl
add
aaa
sbb
and
addr16
mov
mov
mov
xchg
mov
mov
dec
jmp
in
xchg
repnz
and
cmp
cmp
cmpsl
aas
dec
and
faddl
push
adc
jge
in
dec
es
push
push
subb
pop
push
les
into
fmuls
movsb
push
cmp
cs
sub
fnstenv
mov
outsl
outsb
es
das
and
int3
mov
cmpsl
add
jge
adc
orl
out
in
xor
push
jbe
int
in
shrl
inc
dec
loope
sub
test
xor
push
rcl
cld
movsl
jae
aam
test
cltd
mov
out
fdivrp
into
mov
jl
pop
lahf
fsubl
pop
ret
je
and
pop
push
pop
sbb
mov
push
jno
out
xor
sub
jecxz
sbb
push
xorl
repz
inc
or
xchg
xor
xor
sbb
jle
sbb
ficompl
das
movsb
leave
add
pop
pop
loope
addr16
gs
stos
xchg
inc
cmp
mov
cwtl
inc
dec
dec
xchg
adcl
ret
scas
add
into
sbb
cmp
lock
pop
test
push
scas
out
xchg
pop
mov
mov
int
cmpsb
cmp
xor
push
mov
push
mov
mov
popa
ficoml
adc
out
add
popa
inc
pop
imulb
inc
cmpsb
xor
cmp
jnp
jns
lock
ss
or
jnp
cmpsb
xchg
mov
push
movsl
sti
insl
div
stc
ja
dec
repnz
fwait
movsl
push
xchg
add
lret
push
mov
sub
and
pusha
push
xor
rorl
and
in
into
inc
sbb
pop
popf
xorb
mov
and
jne
mov
lods
aam
neg
add
pop
adc
sub
lods
test
xchg
sbb
cmp
jne
pusha
sbb
outsb
jnp
and
or
dec
scas
xchg
orl
js
add
pop
inc
mov
sub
fcmovnbe
mov
mov
std
leave
cmp
out
lahf
test
aas
es
imul
das
adc
cmc
or
push
cltd
jb
mov
adc
aam
aam
push
cmp
cmp
aaa
lret
sub
mov
adc
mov
jp,pn
ss
orl
subb
lret
cmp
enter
sub
fistpll
dec
inc
cmp
xchg
cmp
lock
ljmp
inc
xchg
mov
jo
lds
pop
push
shrb
jge
push
in
ds
jmp
xor
adc
js
or
movsb
or
sbb
fldl
jbe
rcr
sbbb
movsb
insb
dec
out
and
lds
jae
lret
jbe
mov
and
leave
andl
dec
pop
xor
pop
jmp
or
stos
stos
ret
adc
test
jbe
mov
out
add
iret
xlat
mov
push
push
in
cmp
shll
push
jle
sbb
jge
rol
fwait
dec
fidivrs
iret
cwtl
inc
out
mov
fcmovu
movsb
fists
adc
push
orb
icebp
sub
mov
mov
iret
mov
insb
inc
negl
addr16
cld
or
inc
divl
imul
pop
push
in
in
fcomp
flds
push
fists
inc
std
mov
popf
jecxz
fsubrl
dec
or
sub
jbe
test
and
push
movl
mov
xor
push
push
add
xchg
mov
jno
mov
call
push
lods
lods
mov
adc
adc
in
lcall
ret
mov
outsb
mov
in
aam
add
pop
jo
ret
shrl
adc
cmp
sub
ret
jb
push
dec
rol
leave
les
outsl
das
std
xor
jb
fstps
sbb
sbb
movsl
push
sbb
jne
push
hlt
imul
outsl
shrl
sub
mov
ret
out
rcl
mov
int
dec
imul
jbe
dec
shrb
mov
dec
add
sub
xlat
fnstcw
shlb
lds
bound
cltd
int
scas
outsb
push
adc
sbb
inc
jecxz
aad
inc
fmuls
jg
push
xor
imull
imul
hlt
mov
out
jb
dec
lret
inc
xchg
adc
jbe
or
xchg
mov
repnz
jae
rorl
testb
mov
mov
add
sbb
xchg
mov
xlat
fidivs
hlt
enter
repz
repz
cmp
adc
jg
adc
xchg
adc
gs
shl
arpl
jo
je
lcall
addr16
stos
dec
pushf
xor
cmp
call
jl
mov
push
sbb
jns
aam
mov
fmul
sub
mov
je
pop
mov
mov
push
sbb
cmpsl
cmp
adc
lock
pop
je
imul
and
mov
pop
ds
adc
xor
dec
mov
enter
jns
mov
adc
push
add
jg
sti
fwait
jp
scas
bswap
shrb
or
lods
aam
jmp
leave
xchg
orl
popf
inc
mov
mov
push
add
out
repz
les
xchg
cld
and
lcall
int
scas
cmpsl
sub
jmp
aas
outsl
les
xchg
adc
insb
pop
stc
punpckhdq
pop
jno
sahf
andb
push
es
and
push
dec
cmp
icebp
loop
stos
jne
in
cs
neg
mov
cld
rcrl
fistps
dec
pop
les
ljmp
fldenv
stc
stos
loopne
outsl
icebp
inc
inc
cltd
sbb
pop
rclb
es
cmp
out
mov
into
jg
popa
cmp
xchg
xor
xor
cmp
outsl
ret
shll
inc
cmp
iret
hlt
jl
adc
in
lds
es
push
xchg
push
insl
aam
loopne
movsl
mov
cs
sbb
fcompl
sub
add
pop
insl
divb
push
inc
in
std
inc
push
mov
fdiv
sbb
adc
dec
mov
cmp
pushf
ds
mov
rcrb
std
nop
ja
jae
cltd
aad
dec
adc
inc
or
cmp
add
pop
fnstenv
call
aam
insl
out
cs
and
lock
imul
push
jnp
sub
mov
jg
mov
int
into
push
fadds
mov
jecxz
xchg
push
movsb
mov
repnz
jmp
mov
push
push
addl
repnz
stos
push
pop
fdivrl
pusha
enter
mov
or
stos
mov
adc
dec
decl
mov
test
or
ljmp
lea
stos
sub
add
xchg
mov
xor
xchg
mov
jmp
sti
sahf
mov
mov
lds
rcl
mov
andl
fnsave
int3
sti
pop
sbb
test
or
mov
or
add
pop
out
jecxz
scas
test
leave
imul
in
cwtl
aas
mov
stos
out
cmp
sub
jge
lcall
ret
push
mov
popa
dec
ds
or
aad
int
pop
mov
xlat
enter
imul
cmp
notl
insl
pop
shll
push
mov
add
add
jle
lea
cld
pusha
movsl
data16
or
mov
lea
andb
cmp
push
fdivrl
mov
mov
fidivs
mov
and
mov
into
and
pushf
test
inc
dec
push
cwtl
lcall
or
sub
into
sub
lods
cs
mov
daa
fldpi
insb
add
push
xchg
mov
jmp
cmp
js
lea
sbb
pop
pop
outsl
inc
jbe
mov
mov
pop
mov
push
mov
xor
shlb
sbb
mov
inc
and
ficoms
fistl
mov
pop
lahf
hlt
cmp
mov
and
mov
lahf
incb
adc
cmp
in
imul
cltd
addr16
mov
or
jecxz
sbb
movsl
lods
fcmovb
mov
xor
mov
ret
add
shl
cli
gs
arpl
int
js
mov
pop
inc
or
jb
stc
xor
das
or
pushf
jg
rcl
adc
mov
shrl
mov
dec
add
or
xchg
decb
mov
adc
test
fstps
lea
lret
stos
loop
dec
fisubl
fdivrl
or
fildl
aas
fsts
inc
mov
sub
sub
mov
fadds
lds
xchg
jg
imul
mov
out
jmp
cmpl
or
pop
adc
pop
lods
sbb
inc
and
mov
sbb
nop
adc
inc
and
or
popa
leave
adc
lcall
pop
test
inc
je
mov
loopne
sti
lock
jmp
adc
aaa
push
jns
mov
push
xor
ret
rcll
stc
jl
mov
mov
lods
add
cltd
fbstp
push
setge
filds
jne
cmp
jnp
outsb
out
data16
mov
dec
or
sub
hlt
stos
adc
adc
sub
dec
xor
lahf
mov
fnstsw
dec
adc
adc
dec
clc
cltd
mov
rcrl
add
mov
mov
cmp
je
xlat
sub
add
data16
and
scas
je
cmp
repnz
lods
fadds
cmpsl
jge
inc
scas
out
sahf
sub
add
pop
lock
mov
adc
inc
pop
fnstsw
or
aaa
test
das
fdivrl
and
add
mov
fnstcw
repnz
pop
lret
fs
cmp
add
outsb
dec
mov
lahf
rcr
sub
cli
mov
cmp
dec
ficoms
pop
movsb
jns
stos
mov
scas
mov
inc
xchg
cmp
push
add
shll
int3
sti
bound
bound
cmpl
or
ds
pop
or
fsub
jns
and
push
push
xor
mov
mov
push
in
in
insl
push
std
into
xor
push
mov
inc
ret
sbb
hlt
cltd
cld
lcall
pop
adc
adcl
push
roll
mov
push
cltd
data16
add
mov
xor
xchg
sbb
sbb
int
scas
sahf
jmp
cmpsb
inc
loope
inc
add
jb
mov
dec
mov
cli
ret
mov
repnz
jmp
enter
sbb
sbb
cmp
sub
cmp
and
sub
out
dec
daa
cmp
and
push
es
cltd
mov
xlat
mov
and
pop
mov
add
lea
lcall
aam
push
ret
jmp
cmp
xor
loop
jnp
test
mov
repnz
xchg
in
xchg
hlt
cltd
add
fwait
mov
mov
sub
xor
sub
and
or
sbb
out
lret
fwait
sbb
sub
fimull
les
out
int
mov
imul
popw
in
fistpll
cwtl
jnp
push
xchg
sbb
test
int3
push
mov
aaa
push
jb
out
ss
ja
cmp
or
push
jp
lahf
jns
dec
aad
fs
or
cmp
pop
int3
add
add
mov
push
push
mov
in
cli
mov
pusha
mov
scas
adc
std
jecxz
test
mov
aas
negb
lock
mov
xor
or
dec
mov
lock
and
sbb
dec
pop
jmp
jle
add
aas
pop
dec
push
aas
push
lret
inc
cmp
cmp
mov
mov
int
inc
out
adc
js
adc
add
rolb
jmp
cmpsl
sahf
cli
jecxz
jl
sub
jecxz
mov
or
xchg
dec
out
push
mov
or
sbb
inc
mov
out
std
mov
fsub
cmpsl
or
mov
int3
xor
adc
pop
pop
sub
inc
int3
insl
xchg
outsb
pop
fbld
jbe
push
arpl
sbb
or
mov
inc
int3
loop
les
mov
mov
test
fsts
out
xor
xchg
test
and
mov
pop
movsb
mov
sub
xor
jne
or
inc
xchg
mov
bnd
mov
push
xchg
cli
cwtl
movaps
dec
test
cwtl
mov
inc
in
xor
push
sub
xchg
cmp
ljmp
sti
movsb
cli
pop
jl
cmp
clc
es
mov
mov
dec
xchg
dec
mov
xchg
push
sub
pop
mov
rcrl
rolb
adc
sar
cs
sti
dec
xchg
push
rcl
pop
adcb
pop
ret
mov
in
jo
push
out
jge
or
loopne
es
adc
cmp
mov
or
xchg
outsl
hlt
add
pusha
lcall
cmp
test
repnz
push
or
rcll
cmp
mov
stos
les
sbb
test
and
xor
out
mov
mov
lods
jmp
mov
cltd
test
jmp
jns
ds
sub
cmpsb
lret
out
mov
ljmp
mov
cmpsb
cmp
dec
push
fsubp
jb
xor
xchg
mov
je
loope
fnstcw
mov
or
test
mov
int
mov
fxch
insl
and
js
mov
addb
inc
xorl
sbb
pop
adcb
test
repz
pop
mov
push
je
dec
es
jecxz
jo
enter
dec
ffreep
call
stc
imul
iret
and
jmp
div
aam
xchg
mov
js
mov
xchg
imul
add
test
fsubl
xchg
inc
jns
mov
or
or
into
dec
ss
dec
cmp
cmpb
aam
aad
or
fdiv
xchg
in
inc
push
push
loope
dec
call
lret
xchg
push
ds
sarl
cmpsl
dec
cmp
js
push
and
jp
pusha
sub
stos
cs
jle
ds
xor
sbb
cmp
pop
mulb
lock
stc
inc
cmp
cs
insl
jnp
xor
mov
inc
mov
ja
stos
sub
mov
loope
sbb
icebp
cmp
bound
push
ret
out
xchg
pop
inc
je
sub
cmp
mov
mov
arpl
popf
sarb
or
ljmp
pusha
cmpb
push
in
cwtl
enter
popa
es
xor
cli
xchg
mov
mov
push
mov
jns
stc
rolb
fidivrl
mov
add
pop
clc
in
xchg
pushl
adc
sbb
mov
mov
sub
call
mov
js
jge
sbb
sti
lahf
outsl
sub
jmp
insb
andl
inc
inc
pop
xor
je
jmp
adc
mov
sbb
jmp
orps
lcall
jae
pop
adc
xchg
out
pop
inc
aaa
push
outsb
out
sub
push
loopne
xor
mov
ljmp
dec
rol
sbb
outsl
out
sbb
fs
popa
sub
mov
dec
das
test
pusha
pop
fadds
stos
shr
pusha
sbb
sbb
ds
js
icebp
push
adc
sbbb
xchg
stos
sbb
mov
jbe
cld
cmovno
lcall
xor
add
test
inc
sbb
push
das
popf
test
xor
test
add
loopne
es
inc
outsb
or
cmp
lock
aam
fisubrs
fldl
sub
hlt
jmp
lods
or
test
pop
inc
and
and
loope
jne
fwait
ret
div
mov
inc
and
rol
inc
insl
push
add
mov
imul
cmp
push
jb
testb
popa
stos
add
sub
lahf
sbb
sbb
xchg
dec
mov
popf
xor
cmp
in
or
insb
je
stc
xor
cmp
lcall
aas
push
ret
movsl
daa
dec
test
scas
inc
pop
jnp
scas
jno
adc
mov
scas
int
out
fs
jb
or
mull
testl
or
cmpsb
outsb
add
sbb
fwait
outsl
inc
or
test
jmp
mov
add
lcall
hlt
mov
and
sub
mov
rclb
cmp
fadd
mov
cmc
dec
pop
jmp
adc
test
xor
mov
push
sbb
lods
les
inc
mov
or
push
adc
inc
jns
jb
xor
jge
xor
sbb
jnp
rolb
stc
inc
sub
cltd
xlat
sbb
push
sbb
mov
mov
cmp
je
mov
cmpsb
push
test
and
jmp
inc
jne
xor
rcll
cld
mov
movsb
inc
int3
inc
fwait
loope
or
test
xchg
jg
jne
fucomip
outsb
jl
cmc
cmpsb
xorb
xor
dec
negl
adc
scas
or
in
test
add
xchg
pop
push
inc
inc
aaa
pop
inc
flds
mov
xchg
mov
mov
sbb
call
cmp
add
inc
popf
mov
mov
dec
inc
push
mov
int3
test
ret
pushw
pop
lods
loop
xor
dec
and
dec
arpl
fsubrl
sbb
mov
jne
cmpsl
leave
addr16
fisttpll
rcl
enter
xchg
int
sti
les
fstl
jb
xor
in
xor
adc
test
pop
test
lfs
movl
inc
mov
maxps
fs
mov
xchg
push
mov
jmp
lds
xchg
cmc
mov
cmp
jno
mov
mov
fdivs
pop
jmp
mov
inc
fmuls
xchg
adc
dec
add
xchg
sahf
fisubl
iret
mov
sbb
pop
add
shll
mov
scas
xchg
xor
sub
pop
out
pop
mov
mov
sbb
push
testl
jl
adc
sbb
xchg
test
push
cld
sbb
or
sbb
mov
jno
lock
cltd
add
lret
insb
cmp
cmp
in
jecxz
aad
jb
out
shl
mov
rolb
sbbb
mov
dec
xchg
and
fs
aas
dec
pop
leave
movsb
xchg
idivb
xchg
fwait
sbb
pop
lock
mov
inc
jnp
cli
into
stos
and
adc
lret
outsl
daa
shr
push
movsb
xchg
cmpsb
xor
xor
shlb
iret
mov
mov
add
call
roll
inc
enter
int
push
filds
mov
sub
mov
aaa
or
dec
ss
pop
jle
cs
inc
testl
addr16
stos
pop
xor
adc
mov
sbb
cmp
xor
inc
sti
mov
out
push
in
out
mov
fdiv
aas
sbb
jp
cli
xchg
dec
pop
jne
push
sbb
pop
pop
call
movsb
dec
push
mov
push
test
sarl
xchg
cmp
popf
jo
jge,pn
lret
xlat
out
rcr
in
scas
out
cltd
add
rorl
xor
aas
in
inc
repnz
nop
inc
cmp
jbe
or
fwait
inc
xchg
inc
pop
cwtl
mov
sub
pop
movsl
jecxz
mov
popa
ss
scas
lods
loopne
xor
mov
jns
mov
xor
jecxz
xchg
jg
xor
int
sbb
cmp
mov
adc
xor
jecxz
insb
notb
popa
jns
jbe
inc
in
cmp
int3
inc
xchg
mov
or
stc
mov
loopne
sbb
sbb
dec
mov
insb
iret
push
in
stos
pop
das
push
loope
mov
or
sub
sbb
xchg
jecxz
fists
xor
loopne
sub
push
mov
addr16
add
int3
jae
sbbl
adc
mov
sar
sbb
mov
repnz
mov
cli
and
fwait
enter
jle
ret
movsb
pop
pop
inc
shrb
jge
or
jp
mull
add
push
dec
xor
xlat
ja
push
and
test
arpl
inc
jmp
and
dec
mov
jge
inc
outsl
xchg
push
cmp
inc
xchg
mov
idivb
cmp
test
rcrb
jecxz
scas
mov
lret
xchg
and
fcomi
aam
aam
fwait
movsl
rorb
aas
int3
adc
mov
push
push
sbb
mov
pop
or
jg
mov
lret
mov
or
dec
pop
ret
push
loop
mov
mov
add
sbb
mov
imull
shrb
xor
mov
in
dec
sub
add
cwtl
mov
adc
xor
cld
call
jb
mov
mov
mov
inc
jl
xor
push
jecxz
ret
dec
insb
cli
mov
fistpl
jno
mov
xchg
iret
sbb
shll
xor
aaa
xor
push
sub
xchg
movsl
xor
pop
pop
sub
pminub
subb
mov
adc
sub
pop
xchg
adc
push
js
push
sbb
jb
xor
rol
leave
test
imul
push
mov
sub
js
lods
int3
scas
xor
jge
fdivs
popa
mov
push
adc
cmpsb
mov
sbbb
jge
lret
bound
pop
cmp
outsb
ss
ficoms
xor
ret
xchg
xchg
push
cmc
in
pop
jg
mov
test
cs
aam
subb
ret
add
push
fnclex
das
inc
or
leave
in
jb
jg
popf
mov
pop
mov
ss
cltd
es
popl
xor
test
addr16
test
dec
push
nop
xchg
jns
psubw
add
pop
lahf
outsb
and
push
pop
pop
stos
adc
testb
lea
jp
mov
mulb
jnp
pop
sbb
dec
cltd
mov
pop
movsl
cwtl
repnz
fistpl
fsubrs
int
xchg
icebp
xchg
push
call
cmp
rolb
lods
sbb
scas
pop
mov
fbld
notb
cmp
push
aad
into
push
ficomps
or
fwait
or
pop
lcall
ret
nop
jb
ficoms
push
pop
xchg
push
cmp
call
les
pop
inc
xchg
sub
pop
test
push
loop
fldl
add
push
add
mov
mov
sub
and
push
sahf
scas
loop
das
outsb
sbb
arpl
rol
shrl
mov
push
pusha
out
addl
lods
push
cmp
or
mov
jnp
fcmove
jnp
adc
mov
out
shlb
shl
xor
aas
and
pop
fistl
call
jle
mov
mov
nop
js
cltd
fwait
rorb
cwtl
dec
mov
pusha
test
out
dec
stos
stos
mov
mov
sub
sbbb
jno
pushf
scas
mov
jge
or
sahf
add
test
mov
xchg
out
inc
mov
sbb
cli
inc
and
xor
mov
js
push
inc
call
stos
aam
xor
fistpl
sub
mov
mov
inc
int3
push
push
stc
xchg
pop
push
mov
cmp
sub
cli
fwait
pusha
hlt
push
in
dec
imul
dec
fwait
subb
mov
scas
clc
jo
cld
in
rcrb
fucom
popf
push
decb
and
jno
stos
or
ds
xorl
sub
scas
mov
ljmp
test
xchg
imul
dec
int
xor
call
loopne
dec
xorb
lods
mov
mov
or
stc
int
sbbb
lock
mov
dec
cmc
sub
jmp
ret
pop
js
in
mov
fldl
adc
inc
mov
jg
cmc
xchg
mov
push
jne
scas
mov
jb
mov
sbb
xchg
jg
sbb
notb
dec
adc
xchg
cmp
jecxz
jle
insb
adc
imul
cmp
pop
dec
fildll
jle
mov
idivl
xchg
sbb
ret
cmpsl
cmpb
imul
jne
loope
sub
in
pop
jmp
mov
popa
cmc
stos
aad
jns
adc
out
mov
add
and
jbe
lock
jl
pop
lea
ret
mov
and
sbb
or
dec
jmp
test
in
cmp
addr16
sub
pop
ljmp
in
movsl
icebp
add
lcall
cld
cmpl
out
sub
inc
addb
fisubrs
jo
inc
mov
mov
add
mov
and
xchg
lcall
roll
xchg
lock
sub
sub
mov
mov
icebp
sbb
push
jge
mov
cwtl
mov
push
pushfw
cld
sbb
scas
adc
and
ret
xor
sahf
fsubs
lret
aad
rolb
jmp
adc
jp
push
outsl
jo
adcl
add
push
mov
cs
je
mov
jns
pop
xchg
sarb
cmp
pushw
xor
jns
ret
stos
rcrl
and
shll
call
inc
cmpsb
mov
mov
es
js
rolb
mov
cmp
faddp
mov
pop
lret
clc
pop
es
stc
push
pop
mov
and
mov
mov
inc
cmp
ror
lock
ja
xchg
jbe
mov
mov
fdivs
push
cmp
enter
adc
ret
aam
movsw
add
cmp
mov
incl
push
and
adc
mov
aaa
insb
in
ret
mov
daa
ret
xchg
and
jnp
and
cmp
inc
mov
or
hlt
imul
pop
mov
imul
mov
scas
pop
mov
push
mov
repz
mov
dec
jle
inc
xor
or
stos
in
test
cmpsl
mov
in
inc
orl
pop
dec
testl
int
imul
dec
pop
cmp
shl
push
int3
jg
xor
pop
in
jnp
int3
push
dec
in
mov
stos
mov
outsb
xchg
push
scas
pop
lds
icebp
inc
mov
and
in
mov
loopne
mov
pop
cmp
insl
adc
mov
xchg
mov
jge
xor
sub
lods
fcomps
and
loopne
sbb
stos
fbld
push
je
out
fstl
nop
add
cmp
es
pop
int
pop
push
stos
push
inc
and
dec
in
aas
lods
xchg
mov
mov
push
jecxz
je
mov
imul
jnp
ficompl
data16
xor
sar
adc
pop
lods
inc
in
bound
lock
push
rol
xor
mov
dec
push
push
lret
pop
pop
or
bound
push
cmp
sbb
xor
inc
icebp
adc
cwtl
xor
xor
aaa
adc
and
jge
sbb
push
sub
mov
mov
pop
push
dec
add
divb
mov
jle
mov
xor
xor
mov
push
leave
xchg
inc
test
in
loope
mov
pop
popf
and
aas
fdivs
ror
leave
xchg
sub
xchg
mov
in
dec
in
in
pushf
push
movsb
jnp
imul
pushf
add
mov
imul
call
je
pop
jae
jns
sub
pop
jmp
arpl
and
mov
outsl
push
sahf
push
outsl
push
enter
inc
mov
rcrb
pop
cltd
fisubrl
es
adc
mov
dec
mov
iret
push
mov
dec
test
adc
in
shlb
hlt
out
cs
push
push
imul
adc
aaa
mov
mov
aaa
mov
mov
or
push
mov
rol
xchg
dec
sbb
sbb
mov
in
pop
push
das
jg
inc
sbb
jne
mov
jg
shlb
stos
mov
or
mov
push
imul
inc
test
adcb
jecxz
daa
cltd
adc
xchg
push
cmp
lret
scas
mov
rorb
or
rcll
pusha
and
mov
insb
or
sbb
push
out
scas
dec
and
jne
mov
mov
xchg
pop
xchg
mov
push
mov
inc
test
xor
fsubrs
sbb
rcll
xchg
push
test
xor
push
das
dec
call
lcall
mov
inc
fists
sub
xchg
stos
gs
dec
in
gs
ret
or
xchg
imull
aas
fldt
jo
mov
sti
lock
cmpsb
xchg
bound
xchg
inc
fdivl
xchg
out
inc
es
pop
push
push
shlb
dec
add
cmp
push
cmp
push
je
push
mov
test
outsl
sbb
ds
mov
sub
or
inc
mov
rclb
mov
fcoms
insb
repz
inc
popf
sbb
loopne
sti
mov
or
cmp
sub
jae
leave
jg
rorl
lahf
je
insb
jns
mov
push
mov
ljmp
pushf
dec
xor
in
inc
in
out
lods
idiv
mov
push
leave
lods
mov
push
das
ljmp
mov
fsubrp
enter
inc
push
fdivl
repz
mov
mov
out
sahf
movsl
jp
inc
sub
mov
popf
add
pop
and
std
mov
js
gs
je
inc
call
pop
fsub
mov
stc
test
daa
mov
mov
xor
ret
adc
add
jo
and
fsubr
sub
lea
icebp
mov
xchg
sbb
dec
inc
imul
loop
rclw
push
sub
xchg
mov
cmc
xor
aaa
xchg
ljmp
je
popa
mov
add
sub
mov
or
cld
xchg
pop
popf
jns
cmp
xor
dec
dec
pop
sti
in
gs
mov
loopne
adc
cmp
and
int
inc
addr16
inc
xchg
xor
and
aaa
jp
lea
cmp
mov
out
dec
adc
out
sbb
fmuls
pop
test
mov
adc
in
daa
xchg
xorb
jno
jmp
sub
xchg
pop
mov
ret
stos
xor
push
sub
jae
int3
pop
sbb
ss
shlb
rcl
in
mov
es
xlat
mov
addr16
mov
adc
cmpsl
dec
jmp
push
mov
notb
stos
jg
sbb
loope
hlt
bound
or
loop
adc
jg
xchg
test
cwtl
data16
or
cwtl
cmpb
stos
into
xchg
lret
lods
jle
inc
out
jge
stos
out
mov
sbb
lock
pop
jmp
outsl
dec
push
imul
jl
inc
mov
pop
cmp
xchg
pop
cwtl
addl
clc
or
add
js
sahf
movsb
lods
pop
pop
add
rcr
push
xlat
jmp
andb
enter
push
call
lods
fs
push
ja
adc
ret
insb
cltd
sub
dec
aam
test
loopne
lcall
xchg
mov
or
inc
cwtl
inc
pusha
add
xor
pop
in
pop
testb
out
xchg
inc
pop
push
mov
push
jmp
out
mov
jnp
add
xor
push
lret
loope
pop
aam
pop
and
repnz
mov
sarl
sbb
cmp
jno
mov
push
dec
inc
imul
pop
sub
ret
jb
nop
sub
pop
fstps
mov
fmul
int3
and
cltd
xchg
inc
mull
jno
inc
sub
jbe
mov
cmp
outsl
ja
stos
mov
push
jne
or
push
lds
iret
movsb
xchg
cmp
cmp
jg
jge
mov
daa
les
mov
or
and
cs
fstpt
cmp
or
jg
mov
jns
adc
adc
xor
hlt
mov
ljmp
sti
pop
inc
xchg
mov
dec
xchg
jnp
cmp
pop
dec
cmp
sbb
fneni(8087
fisttpll
mov
ja
inc
mov
popf
xchg
sbb
pop
outsl
movsl
or
push
adc
cmpsl
add
out
in
xchg
test
pop
movsl
and
out
mov
mov
les
jb
test
xchg
mov
call
add
mov
imul
and
and
inc
lahf
out
cmp
mov
inc
mov
int
xor
mov
mov
sub
xor
inc
je
into
aam
mov
in
push
jecxz
insl
pop
push
cmp
les
loop
cltd
mov
imul
pop
xchg
imull
jae
cs
faddl
les
mov
das
nop
pop
je
stos
ret
aam
add
jno
cwtl
mov
mov
sbb
jne
xchg
add
dec
or
ret
push
lahf
int
pop
das
inc
pop
fadds
lods
cmpsb
in
mov
loopne
push
inc
imul
loop
jmp
je
mov
test
fwait
pop
rolb
mov
es
mov
into
xchg
fs
out
dec
sbb
fists
in
scas
sbb
dec
xchg
test
push
dec
lcall
mov
dec
xchg
adc
jecxz
push
pop
fsubl
pop
faddp
push
orl
push
fistl
inc
or
xchg
adc
clc
ja
out
xchg
test
push
int3
popa
push
sbb
in
jecxz
pmullw
mov
mov
into
or
insb
xchg
je
mov
repz
xchg
and
leave
xchg
popa
dec
aaa
xchg
in
fnstsw
mov
add
xchg
stos
repz
and
cmp
repz
pop
inc
xor
cmp
lds
lret
rorl
push
dec
add
or
inc
ret
fiadds
cld
sbb
add
adc
adcb
cwtl
ljmp
rcrb
and
mov
aam
shll
jge
fisttpl
insl
cmp
sbb
mov
into
fistpll
icebp
cs
cwtl
lahf
ret
xor
cmpsl
aas
pop
rorb
xchg
mov
jle
mov
testl
in
pop
jl
into
cmpsb
lret
pop
pop
add
je
cltd
movsl
out
and
daa
or
enter
add
ljmp
and
not
lods
mov
mov
xlat
adc
cmp
dec
inc
push
in
pop
sub
push
imul
pop
sti
dec
cmp
arpl
imul
mov
lods
cwtl
es
aad
sbbl
add
add
dec
iret
pop
push
mov
ds
cld
jl
pop
loopne
xlat
ljmp
jg
cmp
mov
adc
inc
xchg
fisubs
repnz
push
mov
nop
cltd
enter
mov
xor
in
insb
push
push
ficoms
ret
loopne
je
adc
cmpsl
insl
mov
xchg
mov
ds
xorb
aas
icebp
mov
movsl
adc
stc
mov
stc
int3
mov
jbe
mov
repz
mov
pop
sub
mov
add
cmp
push
out
stc
sti
ljmp
test
sub
xchg
test
adc
scas
xor
testb
push
and
divb
stos
cs
jnp
and
pop
inc
and
and
arpl
xorb
jae
dec
ljmp
pop
push
movhps
pop
sbb
mov
mov
data16
jns
sbb
cltd
sub
jbe
sub
aaa
inc
movb
movsb
sarb
jl
xor
gs
int3
out
xlat
subb
push
daa
xor
jno
andb
jae
jo
test
lret
lahf
push
les
in
fucomip
aas
flds
lret
cwtl
jle
cvttps2pi
pop
loopne
xorb
sti
enter
mull
fcoms
mov
sbb
mov
mov
imul
mov
jecxz
dec
insl
inc
jae
insb
jp,pn
mov
mov
inc
xor
in
outsl
xchg
and
pop
stos
lret
stos
sbbl
mov
insl
jecxz
dec
mov
mov
add
stos
xchg
loopne
call
sub
sbb
push
cmp
dec
in
jo
pop
call
push
push
lcall
popf
aaa
cmpsb
pop
imull
negl
inc
or
dec
sbb
loop
arpl
pop
xchg
pushl
out
xlat
xchg
gs
aam
sbb
sbb
push
sbb
mov
nop
sub
push
mov
pop
movsb
add
mov
es
ret
xchg
cli
aad
mov
and
pop
nop
pop
or
mov
adcb
cmp
divb
cmpsl
int3
enter
fistpl
jg
mov
mov
jg
vpcmpgtd
cmp
into
sub
xchg
adc
cmpsl
sbb
sbb
faddl
push
mov
sbb
orl
or
in
arpl
jo
mov
fsub
lcall
pop
jl
mov
imul
sbb
lahf
sbb
mov
daa
outsl
pop
addr16
insl
sub
or
push
inc
fcomps
mov
inc
aad
xor
add
subl
jmp
or
int
aam
js
ret
mov
jns
dec
das
mov
push
popf
pop
push
xor
sbb
sbb
push
inc
mov
adc
arpl
das
xor
mov
jg
adc
pop
or
jno
call
pop
ljmp
fcoms
ja
jbe
push
nop
loope
aas
cmove
or
xor
push
mov
popa
push
sub
xor
lret
or
xor
inc
add
pop
int3
movsl
sahf
and
iret
rcrl
lret
push
testb
push
dec
jle
shll
or
cmp
sbb
jge
cmc
ret
movsb
popf
out
mov
lock
push
cs
mov
mov
pusha
sub
lret
push
xor
xor
pop
in
rclb
adc
stc
ja
int
push
sub
cmp
push
shrb
xchg
cwtl
clc
push
and
fldl
adcb
adc
mov
add
pop
mov
loope
inc
pop
cli
push
jl
daa
loope
or
cmp
dec
and
dec
pusha
cmp
pop
and
icebp
aam
stos
loope
imul
fisubrl
sti
mov
add
ret
fs
faddl
and
pop
out
mov
mov
addr16
xchg
pop
mov
lods
cmp
les
ficompl
pop
pop
push
test
imul
jae
xor
cmp
cmp
adc
lock
out
scas
in
xchg
aas
out
or
dec
mov
xor
mov
int3
pop
lods
dec
iret
and
cltd
iret
push
frstor
adc
lcall
add
inc
scas
xchg
push
push
xchg
mov
js
mov
int
popl
bound
repz
add
stos
push
rorl
leave
fdiv
mov
and
pop
xor
clc
mov
out
lcall
mov
cli
je
call
pop
shrl
mov
push
nop
and
bound
popf
stc
std
jns
aaa
sbb
aad
stos
ret
std
sarb
sub
jle
shlb
pop
cmpb
sbbl
cltd
and
xchg
pop
add
idivl
cltd
cmpsb
es
mov
pop
or
jae
lahf
test
cmp
push
mov
mov
mov
rcrl
xchg
decb
jo
sbb
lret
aad
push
test
or
mov
add
repnz
mull
bound
sub
or
fsts
jno
pop
fdiv
mov
mov
sbb
aad
rcrb
push
mov
test
mov
mov
fsubrl
dec
andl
leave
fstpl
jge
sub
jno
insb
cmp
push
sbb
mov
daa
in
pusha
jl
pop
shl
fsubrl
call
lahf
push
mov
xchg
mov
jl
xor
sub
es
mov
sub
xchg
bound
or
or
dec
jg
fisubrs
and
pop
push
in
xor
mov
popa
mov
sub
hlt
jb
jb
mul
xlat
insb
sbbl
lret
js
mov
adc
mov
pop
psllw
ljmp
pop
pop
inc
jge
cltd
add
call
mov
mov
add
cmp
or
and
pop
aas
mov
ljmp
ljmp
lock
sub
inc
cmp
mov
add
and
sbb
enter
mov
dec
addb
ljmp
push
rclb
mov
lcall
ss
xchg
sti
push
js
int3
jb
mov
sbb
jo
push
mov
shlb
subl
push
push
dec
mov
out
and
imul
xor
xorb
ret
xchg
or
xor
jae
pop
or
xchg
outsb
call
lods
or
int
out
test
test
mov
icebp
and
jl
or
xor
lret
bound
les
xor
mov
sub
pop
xchg
xchg
mov
xor
dec
xchg
xor
jg
stc
pop
stos
sbb
jle
out
push
and
or
add
scas
lock
inc
insb
mov
sbb
or
ret
cmp
xchg
std
in
cli
push
mov
test
sub
xlat
xchg
inc
cmp
cmpsl
shll
dec
cld
adcl
in
ja
or
push
out
adc
push
cli
xchg
dec
pop
leave
aas
test
mov
test
repz
in
cmpsl
mov
mov
xchg
mov
pop
jae
push
imul
pop
ret
out
loopne
adc
push
add
fcomi
gs
in
dec
imul
or
or
in
mov
or
es
adc
mov
rorb
or
pop
cmp
xorb
push
add
movsl
push
push
das
jnp
cld
sti
call
insl
lcall
xchg
lcall
addr16
ret
fs
ret
sub
hlt
cli
outsl
jb
ds
das
mov
ljmp
sbb
fcmovne
lods
pop
orl
fistpll
sbb
fs
push
rcrl
cld
and
stos
gs
mov
xor
push
xor
out
pop
pop
std
data16
adcl
lret
pop
inc
flds
fld
add
ja
mov
sbb
xchg
dec
daa
lcall
lret
in
cmc
repz
mov
idivb
jmp
push
int
mov
in
jg
nop
add
idivl
xchg
loop
mov
and
arpl
aam
mov
cmpsb
adc
mov
out
cmpsl
test
mov
mov
in
lret
cmp
ja
xor
xlat
icebp
pusha
cmp
int3
test
aam
aam
lahf
or
push
adc
sarb
pop
mov
cmc
into
dec
add
sarb
clc
loopne
inc
push
out
fistpll
push
repz
nop
gs
xor
sbb
into
imul
mov
je
rorb
pop
sub
mov
jmp
in
out
xchg
clc
push
cmp
test
cltd
xor
mov
subl
mov
cld
scas
sub
push
pop
sahf
lds
sbb
aas
ljmp
gs
cld
stc
sub
and
mov
mov
fdivr
aas
jnp
std
shr
fistpl
loop
pop
cmp
outsl
test
mov
inc
adc
push
pop
fs
testb
in
inc
insl
in
fs
stc
jge
pop
pop
mov
inc
popf
cmpsb
jb
mov
push
inc
test
push
mov
dec
test
out
out
or
cmp
popf
xlat
pop
arpl
arpl
lcall
in
mov
sbb
xlat
inc
pop
pand
add
adc
dec
imul
test
or
jno
mov
cmpsb
jmp
aas
outsb
into
cld
pop
lods
ja
jp
or
fisubrs
sahf
cmpb
add
les
dec
orb
ret
fisttpl
popa
sti
mov
int3
ltr
adc
popf
cmp
hlt
lret
mov
outsl
xorl
mov
call
or
jecxz
push
xor
cmpsl
adc
mov
movsl
and
sub
mov
popf
fsubrs
jmp
xchg
mov
push
fsubrl
out
rorb
sahf
inc
sub
push
ja
dec
aam
lea
rcrl
ja
sub
mov
pusha
cs
mov
fwait
sarl
mov
jecxz
sub
or
lds
cwtl
xchg
sub
lcall
fmuls
push
add
pop
fisttpl
mov
lahf
mov
fsubs
inc
cs
mov
mov
jecxz
mov
sbb
xor
cltd
or
xchg
adc
sub
lret
cmp
roll
jg
and
cwtl
adc
punpckhbw
mov
mov
jo
dec
adc
lods
nop
icebp
pop
fadds
ljmp
es
mov
add
dec
test
jl
popa
test
dec
jne
cmp
mov
popf
push
mov
aam
pop
ficoms
mov
mov
push
sbb
mov
clc
loop
mov
mov
in
in
mov
out
in
xchg
jmp
fwait
iret
std
pop
inc
jo
stos
pushf
fcmovnb
leave
ds
mov
rolb
aam
lods
or
jmp
xor
cmc
mov
sbb
mov
daa
sbb
mov
gs
mov
out
pushf
mov
or
inc
cwtl
add
test
sub
jae
nop
sbb
flds
pop
jne
cmc
jb
aad
mov
or
ja
sbb
sbb
cmp
imul
lds
or
es
pushf
inc
xchg
mov
cmp
sahf
pop
psubsw
stc
outsl
arpl
cmp
or
sbb
mov
imul
sbb
xchg
dec
push
gs
movl
pushl
jl
add
ret
mov
jmp
mov
getsec
lea
sub
push
inc
inc
mull
jge
repz
rcll
sbb
pop
jns
jmp
jbe
cmc
add
lods
jecxz
or
pop
add
jl
push
loopne
iret
int
std
xor
dec
fimull
xorl
sti
mov
adc
or
push
sub
xor
bound
or
fiadds
ljmp
dec
sti
mov
mov
mov
inc
add
or
stos
jge
gs
push
jecxz
sahf
xchg
lea
mov
xchg
jp
dec
shrl
test
jl
add
int3
filds
dec
cmp
xor
imul
mov
xchg
pushf
add
ljmp
cmpsl
and
in
xor
lret
or
ret
fcomps
pop
pop
sub
and
adc
sbbl
mov
sarl
cli
xor
pop
stos
inc
cwtl
mov
xchg
stos
pushf
mov
xchg
or
xchg
xor
insl
cs
movsl
std
dec
fcmovnb
stos
jo
adc
jbe
imul
imul
jne
mov
and
push
leave
shlb
cmp
jmp
mov
out
sahf
mov
cmpsb
jns
leave
push
cmp
pop
adc
and
iret
lret
push
add
test
lods
ljmp
dec
pop
push
add
cs
jne
adc
pop
scas
and
icebp
std
inc
stos
mov
repz
pop
or
xor
cli
call
lahf
ja
jne
xlat
jns
enter
inc
mov
rcll
aas
xor
cli
mov
jmp
dec
push
mov
std
jae
mov
pushl
jl
pop
ret
add
popf
test
cmp
out
test
fisubrl
dec
pop
push
sbb
out
aam
xlat
add
xchg
pop
cld
mov
or
push
pop
shrl
dec
pop
xchg
dec
fsubs
xchg
xor
fxch
ja
mov
dec
fs
ja
mov
fidivrs
jl
sub
mov
jmp
outsb
sbb
sbb
push
adc
insb
aad
pop
shr
xor
xor
sub
filds
cs
jle
popa
adc
mov
mov
mov
inc
jecxz
imul
lds
ds
leave
outsb
cld
add
sub
fcomip
sbb
mov
lds
sarl
int
xor
dec
push
test
outsl
idivb
out
cli
and
mov
aad
lret
or
mov
pop
adc
cwtl
jnp
jl
fidivs
pop
jp
orb
cli
out
sbb
pop
ds
xchg
xor
sub
push
imul
fidivl
neg
movsb
aam
push
push
js
adc
mov
cmc
xor
adc
test
mov
rorl
ss
xchg
mov
pop
sbb
xor
iret
sbb
cmp
les
adc
lcall
pusha
sbb
mov
sbb
enter
fidivrs
pop
and
sbb
xchg
add
pop
jb
cmp
outsl
gs
sbb
sub
add
sbb
movsb
xor
rcr
insl
ljmp
pop
jbe
movsb
pop
xlat
aas
adc
mov
aas
pop
pop
mov
or
sbb
ljmp
cmp
cmpsl
xchg
mov
xchg
cmp
adc
add
dec
sub
push
repnz
cmpsb
adc
inc
insb
pop
add
add
xor
xchg
jb
and
clc
ret
cmpsl
xor
jbe
adc
cmp
inc
xchg
js
and
jmp
sub
cmp
sbb
rcrb
mov
cwtl
push
sub
pop
mov
cmpl
fadds
mov
stos
les
aaa
aam
cmp
outsb
insl
push
lock
cmp
sub
cld
jmp
dec
test
or
gs
test
das
adc
popf
dec
jne
mov
add
cmp
sbb
xchg
outsl
faddl
movsl
outsb
adc
push
jae
insb
ss
jns
fidivl
jbe
inc
xor
cmpl
ja
nop
adc
xchg
ja
mov
pop
add
cmc
in
fnsetpm(287
and
mov
stos
mov
inc
dec
fneni(8087
push
and
inc
pushf
push
fisubrs
cmpsb
push
pop
push
sbb
rorl
ret
push
mov
int3
leave
mov
lea
push
push
mov
and
fsubl
mov
inc
xor
mov
jns
sub
dec
test
sbb
rcrb
jle
fs
jl
push
mov
outsb
jge
sbb
scas
insb
mov
cmp
into
clc
out
push
lds
flds
inc
push
cmc
sbb
jb
dec
cltd
cmp
push
pop
int
ss
xor
stc
push
mov
mov
sub
pop
iret
sub
sub
js
xlat
leave
dec
xchg
loope
or
xchg
push
mov
dec
push
pop
cmp
xor
subb
jg
shll
mov
out
add
popa
ret
and
add
push
and
xchg
mov
sbb
xchg
xlat
jge
jae
insb
xor
shlb
lahf
movsb
add
into
mov
dec
lock
into
xchg
jno
mov
aas
cltd
idiv
dec
dec
jnp,pn
sbb
imul
sbb
add
ret
fcoml
inc
gs
inc
arpl
in
cmpsb
jl
inc
movsb
mov
addb
mov
push
cmpl
sub
shll
add
loope
js
pop
dec
add
and
lock
cmp
push
xchg
pextrw
mov
mov
mov
push
fsts
fidivrs
jae
ljmp
rclb
negb
xor
cmpsb
gs
xchg
fdivs
out
ja
add
imul
shll
lock
jp
xchg
or
and
jbe
add
out
push
or
or
mov
pop
ja
dec
mov
xchg
add
mov
addr16
int
dec
xor
sub
mov
mov
adc
out
push
inc
dec
push
jle
push
ret
mov
mov
jo
addr16
fwait
add
bound
inc
xchg
xor
sub
sub
xchg
rcl
mov
je
ljmp
pop
ja
mov
out
inc
dec
dec
lahf
dec
ficompl
cmp
mov
popa
pop
xor
adc
fsubl
mov
mov
mov
sbbl
aam
data16
and
cmp
bound
insb
cld
xchg
rcl
jne
mov
jmp
outsb
in
pop
and
sub
hlt
int
jle
test
mov
ljmp
push
rcrb
imul
movsb
popf
daa
icebp
leave
sbbl
dec
pop
int3
add
mov
pushl
xchg
imul
mov
xchg
cmpsb
fdivrs
out
mov
mov
mov
lea
hlt
arpl
adc
fwait
ss
scas
pop
dec
arpl
xlat
mov
jmp
add
pushf
mov
fcmovnu
gs
jne
loope
addb
inc
jle
lahf
int
aaa
mov
cmpsb
scas
hlt
sub
test
mov
scas
xor
push
cmc
jmp
adc
jg
dec
and
jle
mov
fwait
cli
mov
clc
daa
push
ret
or
movsb
lahf
insb
dec
dec
ja
push
std
add
adc
negl
jmp
sbb
xchg
dec
pop
add
and
popl
lods
jmp
or
testl
sbb
push
sub
push
cmp
fwait
fs
aaa
xchg
cmp
mov
cmpsb
add
fidivrl
mov
scas
call
xor
out
inc
push
push
add
sbb
int3
sbb
or
mov
aaa
faddl
in
jmp
cs
ljmp
jnp
xor
mov
add
lret
sbb
push
jo
or
into
add
lods
xor
das
mov
popf
shlb
xor
inc
mov
fwait
andl
sahf
pop
addr16
in
cli
addr16
sbb
mov
push
xor
scas
xchg
sub
mov
mov
sarb
roll
cwtl
sbb
or
sbb
fidivs
pop
je
mov
fists
fisttpll
test
insb
dec
xchg
pop
data16
jge
into
ret
dec
setg
ja
mov
outsb
in
popa
fwait
mov
popa
ss
dec
pop
sbb
xchg
lahf
xor
arpl
mov
inc
adc
loopne
lods
and
fildll
or
adc
mov
adc
jns,pt
or
or
stc
lock
call
adc
jmp
xchg
mov
push
aas
lock
xchg
fst
pop
or
addr16
pusha
mov
mov
mov
xor
mov
mov
push
in
pop
popf
mov
push
or
movsl
scas
iret
daa
jo
stos
jne
int3
xor
inc
test
push
mov
repnz
or
call
xchg
sbb
aad
and
lret
adc
andb
xchg
inc
imul
cmpsb
pop
ds
or
repnz
lret
xor
out
mov
inc
bound
loop
fs
xchg
imul
stos
dec
xlat
mov
sysret
dec
testb
push
test
or
fists
js
in
jl
popa
subb
xor
test
test
cld
clc
rcr
scas
xchg
std
lret
mov
mov
je
cmpsb
jae
xchg
mov
aam
dec
cmpsb
xchg
pop
pusha
outsb
fs
push
adc
sti
fdivr
xchg
inc
dec
enter
xchg
or
outsb
add
mov
adc
and
xchg
push
inc
pop
mov
mov
inc
mov
je
sar
cmp
pop
sbb
or
inc
lret
and
loopne
inc
add
out
jecxz
xchg
jmp
sbb
inc
sahf
push
pop
mov
and
pop
xor
xchg
inc
push
mov
insl
popaw
lret
lret
inc
fs
andl
lcall
rolb
xor
mov
cmc
jne
jns
pushl
and
cltd
in
jp
lret
and
or
cmp
push
mov
loope
into
jmp
jns
jge
pop
mov
mov
or
add
in
xchg
cmpsb
fisubl
cwtl
sahf
out
repz
inc
mov
jecxz
mov
push
xchg
sub
leave
repz
fiadds
and
dec
add
sub
mov
pop
inc
js
sbb
nop
or
sbb
and
push
gs
sarb
repnz
jmp
jmp
fcomp
aad
mov
dec
mov
xchg
jae
leave
call
adc
cmpsl
inc
pop
mov
icebp
loopne
mov
mov
dec
xchg
test
aam
int
xchg
fmul
pop
cmpb
es
pop
mov
mov
mov
inc
add
test
adc
adc
inc
fnstcw
icebp
gs
lea
lea
pop
mov
or
fidivs
add
xchg
inc
mov
xor
ds
xchg
loopne
lahf
fcmovnb
pop
pop
cld
cwtl
push
les
clc
popa
ficomps
mov
and
lret
jae
add
arpl
les
repz
fsubrs
xchg
pop
pop
test
fcoml
mov
sub
push
and
test
pop
push
test
sbb
fsubrs
jbe
and
or
orl
add
push
scas
nop
clc
in
enter
jns
mov
push
out
jbe
and
pop
sub
cmp
lods
rorb
das
scas
sub
dec
testb
jns
pop
mov
sub
or
scas
mov
shll
push
pop
rcrl
add
mov
jecxz
call
call
in
loopne
rcrb
xor
dec
fcomps
adc
std
negb
loope
sar
imul
xchg
mov
or
sbbl
sahf
aad
incl
in
sti
outsb
or
subb
mov
jle
pop
dec
dec
std
cmc
mov
scas
fs
subl
test
xchg
pop
ds
xor
enter
jl
or
fnstcw
movl
into
add
std
fdivrs
mov
jbe
jo
fisubs
push
popa
push
mov
inc
roll
jb
add
ror
xor
adc
std
pushf
push
lods
xchg
pop
incb
leave
jge
icebp
xchg
dec
cltd
repz
and
lret
xchg
imul
sub
or
and
mov
into
dec
gs
push
pop
loope
jle
cwtl
sub
dec
cwtl
add
sbb
cmp
sub
dec
or
repz
cmp
gs
pop
insl
mov
das
xor
pop
push
dec
mov
dec
call
aas
adc
push
push
std
aad
out
testb
mov
mov
out
and
arpl
dec
inc
dec
scas
or
mov
jg
pop
hlt
jge
xchg
jecxz
clc
sub
and
add
fsubp
lahf
pop
std
jmp
mov
daa
loop
bnd
push
stos
vpshuflw
push
xchg
mov
fstl
push
dec
pop
sbb
or
notl
mov
sbb
out
lahf
rorl
lods
push
push
mov
mov
mov
push
push
cwtl
push
mov
cs
fsubrl
mov
js
lret
clc
cltd
mov
jl
sbb
int3
testb
fcmove
jl
lods
push
fistpll
jo
movsl
ljmp
sbb
jnp
cmp
das
out
adc
lea
loopne
stos
rcrl
jno
or
fucompp
pop
jecxz
jnp
in
and
fdivrs
aam
sub
pop
or
xor
sub
pop
xor
adc
sub
in
je
fdivrl
test
divb
pop
sarl
or
xchg
push
push
dec
fld
cmp
out
add
scas
xchg
in
mov
rorl
dec
push
xor
mov
jle
mov
xchg
jne
cli
pop
jb
inc
xchg
mov
mov
fbld
pop
jecxz
mov
sub
daa
test
sbb
jge
mov
idivb
pop
imul
notb
xor
loope
loop
pop
pop
add
popf
es
pop
ret
jmp
and
add
pop
lcall
sub
or
sub
xor
inc
fcmovbe
xchg
dec
lods
xchg
gs
push
pop
or
iret
cmpsl
or
pop
ret
jp
cwtl
pop
dec
js
scas
test
xchg
sbb
jp
or
icebp
add
lods
push
xchg
arpl
jmp
gs
mov
adc
mov
jns
sbbb
mov
adc
cmc
loop
imul
sbb
xorps
hlt
out
sbb
loope
fldt
xor
pop
pop
jge
adc
sar
leave
sub
inc
mov
mov
lods
scas
call
test
mov
movsl
lret
leave
jp
nop
out
pop
cli
cs
popa
cmpsb
adc
cld
inc
jp
icebp
and
sub
inc
xchg
mov
mov
mov
cmp
stc
stc
mov
add
mov
arpl
add
shlb
jae
aad
push
test
daa
cmp
jp
popa
wrmsr
jne
stos
into
mov
sti
aas
cltd
movsb
adc
and
lods
stc
stc
add
cmp
xor
lret
add
and
leave
insl
xchg
pop
push
loope
adc
mov
jle
mov
add
dec
add
movsl
outsl
jl
push
cmp
mov
mov
shlb
mov
aad
iret
imul
mov
push
adc
sbb
clc
and
or
stos
insb
or
inc
add
mov
mov
cmp
lods
cld
fmull
dec
xor
sti
outsb
fs
fiaddl
stos
pop
pop
insl
hlt
clc
xor
leave
rclb
in
aad
gs
aad
push
dec
fbld
xor
pop
inc
lock
stos
jo
jl
mov
cmp
leave
sub
mov
loop
stos
mov
sub
add
pop
xorb
add
mov
sub
or
push
mov
sub
je
sbb
sub
or
pop
cmp
cmpsl
cli
fnstcw
enter
inc
arpl
xchg
pop
loope
add
insl
jno
std
and
sbb
cs
push
jecxz
mov
cmp
jecxz
jne
sti
xor
fs
rcr
rcl
sub
xchg
ret
cld
ds
inc
dec
add
rep
iret
xor
mov
cltd
jecxz
das
cwtl
loope
filds
fs
gs
movsl
push
ret
jb
test
call
xor
movsl
test
ret
sti
dec
push
mov
fxch
ja
pusha
mov
mov
push
add
fnstenv
add
pusha
mov
ret
jge
mov
mov
insl
xchg
pop
pop
mov
in
out
call
sarb
sar
fisttpll
flds
stos
jbe,pn
pop
sub
sub
push
nop
mov
inc
mov
jl
adc
fs
das
sarl
addr16
push
lcall
jp
mov
or
movsl
adc
inc
lock
fstpl
xor
outsl
sahf
je
jno
push
rcrl
cwtl
jbe
pop
rcrb
into
pop
lret
aaa
push
sbb
fistpl
bound
xor
lds
pop
add
jg
incl
or
mov
pop
shr
pushf
ret
inc
out
mov
rcrb
xchg
pop
test
and
adc
dec
pushf
scas
int3
test
xor
jo
mov
js
lret
mov
popa
ficompl
pop
imul
ficoml
or
divl
jge
stos
iret
mov
jecxz
mov
sbb
out
imul
bnd
jge
add
or
sti
and
iret
lret
mov
pop
in
mov
ds
jmp
insl
out
cmp
pop
ljmp
push
test
sub
scas
test
jg
pop
jge
cmpb
int3
mov
mov
inc
aaa
jnp
icebp
jbe
inc
ret
and
push
popf
frstor
ret
inc
adc
arpl
in
or
mov
jbe
jb
xchg
mov
cltd
shlb
push
push
clc
test
adc
out
in
lods
jne
mov
int
xchg
xchg
sbb
sub
repz
testl
push
mov
out
jnp
fsubrs
pop
dec
gs
arpl
xchg
imul
test
repnz
dec
sub
xchg
loopne
leave
call
pop
fimull
lahf
andl
push
sbb
pop
xchg
cmpsl
leave
rcrl
fnstenv
xchg
sahf
xchg
ljmp
mov
ret
xchg
and
add
sbb
push
int
xor
xor
fstps
and
movsb
mov
mov
inc
iret
test
pcmpgtd
jmp
cmp
mov
inc
mov
icebp
sub
sub
dec
pop
xor
lea
mov
mov
mov
push
divl
cmp
add
pop
loop
adc
lcall
sub
lahf
sbb
in
mov
mov
loopne
adc
jecxz
jb
repnz
cmp
xor
cld
fucompp
push
fdivrl
mov
mov
and
xchg
mov
and
cmp
pop
popf
outsl
in
sbb
movsb
mov
add
ds
fcmovnbe
dec
dec
fadds
jbe
fistps
mov
jge
xchg
and
int
xor
and
bound
adc
inc
jne
bound
popf
pop
push
subl
push
mov
sub
ret
lods
adc
pop
mov
jns
scas
jbe
push
rorl
sub
aam
xchg
jb
cmc
subl
xchg
out
add
sar
and
aaa
jecxz
cltd
mov
pop
inc
mov
loope
pop
insb
dec
pop
pop
push
imul
popa
orb
outsb
jp
fiadds
out
dec
adc
loopne
hlt
loop
movb
in
cmp
sbb
gs
cmp
filds
arpl
mov
aad
out
and
cmp
in
inc
into
or
into
mov
push
out
dec
xchg
jg
xor
mov
les
or
vpshuflw
inc
xchg
xor
push
imulb
or
mov
insb
sub
push
push
add
les
or
rep
mov
movsl
fisubs
add
fcompp
push
out
push
popf
pop
mov
ret
sub
cmp
jmp
gs
adc
add
mov
adc
mov
xor
xor
mov
out
xor
adc
sbb
ljmp
xorl
fidivrl
lcall
enter
in
std
dec
test
bndstx
leave
dec
pop
mov
mov
mov
mov
bound
mov
cmpsl
jp
push
popf
imul
nop
dec
dec
or
pop
xchg
push
mov
out
fcomps
sti
and
adc
and
pusha
test
xchg
test
xor
into
and
mov
mov
or
fdiv
je
pop
jne
lahf
addr16
jne
sbb
mov
pop
pop
cmp
push
push
cmc
adc
sbb
lock
adc
push
scas
imul
inc
jmp
cmp
popa
xchg
mov
outsl
and
sub
mov
push
and
inc
jb
jo
out
insw
fcompl
ret
xchg
cmp
xor
mov
hlt
adc
pop
aam
mov
in
lea
add
shll
popa
aad
jmp
inc
pop
sbb
lret
adc
std
imul
cmp
xchg
inc
cs
popf
shr
push
push
sub
aas
jbe
cmp
clc
add
add
popf
xlat
sub
xor
sbb
jo
pop
pop
jecxz
enter
xchg
and
addr16
cwtl
xchg
js
pop
jo
adcb
sbb
fmull
outsl
bound
cmpsl
sar
jle
outsb
push
in
add
mov
cmpsb
xchg
mov
mov
cmp
push
pop
je
and
gs
fnstsw
xor
lds
mov
loop
sub
xorl
test
pop
pushl
test
inc
stc
xlat
mov
add
adc
ss
and
sub
mov
xchg
pop
cmp
inc
sub
mov
mov
pop
dec
in
inc
nop
xor
into
lock
int3
push
xlat
or
aaa
aas
dec
insl
mov
or
mov
mov
jmp
cli
mov
sub
cmp
sub
pop
sub
into
lcall
push
xchg
pop
jmp
sub
stc
lds
stc
dec
jo
adc
test
out
push
lret
cmp
push
stos
push
loopne
cmp
ljmp
push
rcll
bound
outsb
lret
mov
inc
fisubs
out
fimull
inc
sbb
ucomiss
loop
test
xor
fs
jb
lock
mov
hlt
adc
loope
clc
jg
xor
push
out
lret
mov
scas
nop
ret
xor
xchg
jp
xchg
jle
cmc
cmpsl
lret
sahf
cmp
cmpsl
push
xchg
sbb
ja
xchg
dec
push
pusha
std
mov
mov
imul
mov
xchg
roll
cwtl
gs
pop
push
xlat
mov
add
push
dec
push
cmpsl
add
sbb
and
push
pop
mov
or
lcall
jae
dec
mov
ljmp
call
cmpb
cmp
jbe
add
mov
sub
add
mov
ret
mov
test
push
fwait
cmc
cmp
movsb
fwait
mov
inc
fisttpl
movsl
inc
mov
data16
pushl
popf
inc
sub
insl
cwtl
add
or
xchg
sub
ret
cli
jecxz
xchg
xchg
in
out
or
xor
shll
dec
addr16
pop
divl
push
iret
and
in
adc
psrad
mov
mov
pop
mov
lods
fwait
pop
fldcw
pop
fsub
lock
aaa
les
cmpsl
pop
fsubrl
fbstp
dec
inc
sbb
insl
lods
xchg
mov
pushf
lods
rcrl
xor
push
fstpt
mov
sarb
add
sub
cmpb
test
icebp
push
push
dec
pop
or
cmp
pop
lods
sub
insb
xchg
pop
fldt
sbb
ljmp
popf
insb
dec
fiaddl
push
pop
mov
dec
push
jo
loopne
mov
movsl
mov
cmp
es
and
data16
mov
aad
sbb
sub
jb
xor
sbb
and
lds
dec
adc
out
jecxz
add
dec
cmpsl
fldt
mov
xchg
push
lret
push
xchg
push
pusha
sbb
sbb
dec
push
addb
adc
dec
xlat
sub
or
stos
jne
lahf
out
pushf
stc
or
xchg
inc
stc
adc
push
mov
repz
data16
xchg
sub
adc
repz
fimull
add
push
arpl
repz
bound
push
jb
mov
or
sbb
sbb
xchg
sbb
in
fdivrl
xor
aam
repnz
and
je
stos
push
stc
xlat
push
ficoms
repz
push
mov
adc
js
inc
int3
mov
mov
outsb
inc
xor
xchg
das
imul
add
lret
and
xchg
int3
jae
testb
or
fadd
sbb
movsb
push
xor
dec
and
cwtl
xor
mov
daa
das
enter
lock
cli
xchg
jb
push
adc
repz
mov
loopne
arpl
push
cmp
cli
sahf
sahf
jae
xor
sub
loop
and
pop
fucomp
push
clc
mov
push
test
mov
fwait
xor
loop
mov
pop
cld
fidivs
bound
insl
les
rolb
call
fcomps
mov
sbbb
adc
out
mov
cld
inc
dec
popa
rorl
sub
pop
mov
adc
aas
repz
or
sbb
mov
mov
inc
jae
cld
adcl
ss
push
mov
loop
call
push
xchg
orb
clc
mov
jge
sbb
sbb
loop
xadd
out
pushf
iret
add
xchg
ret
lcall
shrl
lret
gs
cmpsl
fwait
push
xor
notl
push
sub
test
sub
push
pop
mov
cltd
mov
loope
and
mov
rcll
cmp
push
mov
ss
push
outsb
fisttpl
ficomps
add
int
jns
js
dec
insl
pop
sahf
cltd
shrl
mov
pushf
inc
sti
xor
jo
mov
test
addr16
fdivrp
cmp
test
mov
fwait
loopne
xor
fcomps
idivl
lcall
ja
hlt
icebp
icebp
mov
insl
rcll
cmc
xchg
movsb
hlt
cmp
mov
popf
movsb
std
cwtl
into
es
push
jne
aad
pop
push
and
push
lock
arpl
jbe
stos
xchg
jo
cmpl
sbb
jp
sahf
add
pop
jmp
out
mov
dec
cmp
sarb
loope
jne
mov
test
jne
popa
enter
loopne
sub
mov
call
push
negb
inc
shrb
ficompl
push
push
jle
xor
out
adc
in
mov
popf
scas
jb
ljmp
aaa
add
pop
push
iret
ja
mov
sbb
enter
mov
add
push
stc
fwait
sbbl
jne
loope
sbb
out
jnp
jecxz
std
sub
add
dec
inc
xchg
out
flds
into
xchg
fwait
xchg
dec
shl
mov
out
lret
pop
shlb
stos
das
sarl
imul
jne
mov
xchg
and
lods
cmpsb
add
stos
xchg
ret
cltd
and
sahf
add
hlt
mov
pop
lods
adc
xor
mov
xchg
cmp
xor
mov
cs
fcmovbe
jg
inc
movsb
mov
inc
xlat
shll
iret
jmp
ret
jo
mov
insl
push
mov
iret
lock
fstpt
scas
in
es
mov
dec
pop
das
inc
and
dec
pop
dec
xchg
cmp
sub
push
ljmp
add
insb
insl
insl
loop
jae
aad
daa
hlt
mov
cmpsb
pop
clc
or
icebp
adc
add
add
enter
fdivs
jge
sub
cmpsb
push
push
js
loopne
je
jbe
jnp
xor
add
inc
test
mov
outsb
jb
fnstenv
and
push
iret
popf
push
push
cmp
notb
xchg
scas
mov
jle
icebp
inc
dec
cltd
stc
jno
cli
and
scas
xor
push
mov
mov
fistpll
add
sbb
mov
jbe
sbb
sub
imul
divl
pop
fsts
imul
fistps
or
and
jge
test
push
sbb
je
js
inc
adc
mov
adc
adc
fsubrl
mov
cwtl
push
jns
arpl
jb
aad
jae
sbb
push
xchg
and
xor
mov
shrl
sbb
xchg
mov
fldcw
adc
sti
mov
mov
dec
std
ret
nop
popa
push
movsb
mov
xchg
mov
fsts
sbb
cmc
and
in
pop
repnz
or
add
add
call
or
mov
enter
fdivrp
mov
pop
sarw
dec
xor
jge
lret
lret
mov
lahf
mov
cmp
xchg
fsub
jno
adc
mov
pop
les
push
add
daa
mov
into
jo
les
aam
sub
pusha
mov
dec
sbb
loope
ja
dec
nop
into
dec
test
dec
xchg
jecxz
jae
dec
xchg
jae
add
test
sub
cwtl
and
inc
imul
sti
pushf
pop
mov
orl
stos
int3
scas
adc
test
jae
mov
les
cltd
inc
popl
mov
mov
loope
fildll
sti
arpl
pop
jnp
lret
lahf
xor
jmp
test
movsb
sub
jp
jmp
xchg
add
in
call
adcl
movsb
mov
cs
dec
repnz
bswap
pop
les
gs
xchg
mov
icebp
outsl
out
mov
das
fwait
dec
pop
sbb
mov
imul
fidivl
or
sbb
dec
rcr
test
dec
mov
nop
mov
or
movsb
mov
mov
xchg
mov
and
mov
inc
fsubp
pop
cmpsl
lods
aad
mov
test
aaa
ljmp
mov
mov
sti
xchg
jecxz
mov
aam
pop
scas
or
movsl
mov
pop
mov
lods
mov
xchg
jmp
into
les
into
bound
lahf
jbe
or
loope
pop
repnz
dec
add
in
mov
pop
xchg
out
and
repnz
or
insb
arpl
gs
pop
inc
push
xor
scas
mov
test
push
imul
aaa
jmp
gs
jmp
outsl
dec
stc
sub
repz
xlat
mov
repnz
sub
mov
outsl
ss
lahf
loopne
insl
add
jne
jmp
test
xchg
push
pop
cmpsb
inc
adc
mov
enter
pop
xor
adc
ljmp
lock
addr16
dec
aas
in
leave
int3
xchg
or
stos
sti
insb
pop
pop
jb
inc
xor
inc
rorl
pop
mov
sub
aam
and
dec
int
add
add
mov
pop
pop
xorl
sbb
xchg
adc
movsb
lret
jecxz
mov
test
outsb
jmp
pop
and
aam
aam
imul
in
sbb
add
test
push
sub
or
lds
idivl
rcrb
sub
mov
jg
jecxz
jnp
push
mov
push
mov
adc
std
cs
sbb
out
lcall
rorb
add
mov
xchg
aam
les
lods
xor
and
jno
jle
mov
cmp
mov
jg
pop
jmp
sbb
dec
int3
jnp
mov
push
push
pusha
pop
icebp
push
insb
lret
jns
cltd
mov
and
mov
testb
jnp
dec
mov
inc
push
xor
sbb
dec
cmp
loop
dec
jae
mov
xor
jp
scas
cltd
insl
js
jbe
pushf
push
in
xlat
jae
or
movsl
sbbl
mov
pop
cmp
daa
mov
lods
subl
stc
cmp
mov
mov
adc
mov
sbb
scas
push
and
cmpsb
sbb
inc
xchg
jno
ret
pop
popa
xchg
adc
jns
xchg
and
mov
dec
jo
hlt
jne
rcrl
mov
push
cmc
push
mov
scas
pop
scas
push
xlat
add
mov
ljmp
mov
add
incl
and
cmp
push
addr16
lret
cmpsl
sub
pushf
ds
add
pop
inc
shlb
sub
xchg
jne
xchg
mov
inc
or
or
jp
gs
sub
cmpsb
dec
mov
jmp
aam
sub
jns
and
iret
mov
xor
dec
and
loop
scas
cmp
mov
pop
loope
popf
jge
pushw
add
into
xor
sbb
push
out
bound
and
lods
nop
jno
rorb
addr16
lods
loop
aam
fldl
iret
in
in
sub
enter
mov
sarl
popa
mov
test
and
lods
xchg
jns
testl
lods
shrb
inc
or
xchg
adcl
pop
sbb
mov
dec
popa
cld
ret
jnp
fcmovu
inc
das
jl
in
insl
sarb
pop
sub
popf
dec
ret
aas
lcall
dec
sahf
add
inc
pop
jb,pt
arpl
pushf
repz
out
jae
push
jne
in
cmpb
notl
ror
adc
ss
sub
imull
jae
cld
mov
pop
xchg
cmp
xor
adc
xor
loopne
shrb
bound
sbb
ljmp
cmp
pop
mov
arpl
jp
cwtl
sahf
xor
repz
mov
sarb
xor
aas
push
in
sub
pop
and
jae
lods
rcrl
or
test
xor
shl
and
into
pop
push
sbb
ds
push
ret
lahf
stos
pushf
pusha
cmp
adc
push
ljmp
aad
addr16
or
das
cmp
scas
inc
jae
cmp
inc
stos
mov
pop
dec
enter
int
fcmovnb
mov
pop
cld
mov
cwtl
mov
mov
dec
sbb
pop
xor
cmp
out
push
and
xor
jnp
mov
je
scas
js
pop
pop
das
mov
inc
aam
pop
mov
fistl
fisubs
and
cmp
mov
ss
pop
cltd
adc
shrb
adc
lea
roll
mov
pop
sub
idivb
mov
fcomps
loope
repnz
imul
in
jno
adc
xchg
fnsave
rolb
pusha
cmp
ret
or
sbb
test
add
std
mov
frstor
lahf
loope
sbb
in
xorb
aad
loopne
out
mov
scas
aaa
jne
sub
loop
mov
jne
fwait
aaa
das
dec
aam
sbb
pop
movsl
pop
ret
lds
mov
mov
cs
icebp
xor
and
je
mulb
cmp
frstor
adc
jno
ja
mov
mov
mov
bound
int
arpl
mov
mov
jbe
ret
pop
daa
rcrb
adc
popa
mov
jmp
cmpsl
popf
ja
mov
mov
shlb
jle
inc
iret
xchg
cltd
fmull
int3
xchg
sbb
mov
imul
ficoms
fwait
add
stos
sub
movsl
mov
push
dec
and
test
dec
or
adc
dec
dec
je
aad
add
jle
mov
movsl
mov
rcll
sbb
inc
cld
push
inc
gs
push
xchg
shlb
xchg
inc
sub
int
js
sub
adc
push
cmp
lcall
fisttpll
push
in
stos
es
cltd
jae
push
push
mov
leave
jb
pop
fmull
jecxz
int3
jb
mov
rorb
movsb
mov
lds
sbb
cwtl
pop
push
mov
fdiv
jmp
mov
push
outsb
push
notb
mov
es
jle
sbb
and
xchg
inc
sub
or
xor
jb
adc
gs
jle
sti
mov
jb
push
pop
movsl
xchg
test
sahf
sub
add
pushf
fimull
imul
pushl
aam
jp
les
inc
xor
in
xlat
mov
adc
fcmovne
push
and
clc
out
popf
xlat
pop
scas
xchg
sub
pusha
addr16
and
fmul
pop
xchg
aad
loopne
enter
bnd
adc
and
jb
inc
mov
scas
inc
adc
arpl
push
jg
mov
pop
scas
sbbl
xchg
int3
mov
push
dec
hlt
cmp
xor
daa
and
ljmp
mov
cmpsl
clc
pusha
test
shr
jne
clc
push
mov
dec
outsb
mov
xchg
out
lods
mov
pop
pop
push
and
cmp
or
jb
gs
sbb
jmp
jae
mov
push
pop
pop
inc
fidivl
es
adc
cmp
lcall
xchg
sbb
adc
xchg
cmp
pop
xor
rol
adc
stos
mov
lahf
bt
sbbl
cmp
add
add
mov
xor
pop
fucomi
arpl
cmp
pop
cld
fisttps
push
arpl
cmc
cmc
push
jg
test
lret
std
xor
lods
mov
jge
and
pop
lods
sbb
add
aas
in
jp
xor
xor
test
adc
int
repz
nop
xchg
mov
mov
xor
pop
andb
jl
mov
mov
push
sub
cmp
pusha
add
mov
in
fdivl
pop
scas
sbb
cmc
out
add
cmp
das
push
jnp
push
jne
dec
fbstp
push
fldenv
call
pushf
push
ja
jbe
dec
out
lahf
into
mov
lods
fwait
pusha
jae
cwtl
f2xm1
arpl
cmpsl
mov
or
sub
jb
xor
add
cltd
sub
xchg
xchg
mov
aaa
inc
sub
pop
ljmp
mov
dec
cltd
mov
loope
jb
mov
jbe
sarl
sbb
lock
jge
je
jle
inc
scas
loope
or
aas
out
push
jle
jbe,pt
mov
test
mov
pop
jp
arpl
nop
push
lods
cwtl
test
imul
cmp
jecxz
fstl
mov
enter
sbb
and
roll
xor
dec
call
dec
mov
jb
xchg
inc
xchg
ffree
out
mov
out
xchg
pop
test
std
xor
cmp
enter
mov
repnz
mov
sbb
pusha
loop
mov
and
sbb
daa
adc
leave
aas
pop
jle
cmc
mov
std
dec
or
cmpsl
or
mov
insb
mov
push
push
push
int
mov
push
imul
jns
test
movsl
data16
cli
not
sbbl
mov
in
cmp
xlat
jmp
aad
cmp
fdiv
sbb
xchg
mov
mov
lcall
aam
test
add
fnstenv
out
adc
addb
dec
lahf
popa
stos
rcrl
dec
jp
push
out
push
cld
icebp
mov
into
scas
cmp
cwtl
sbb
mov
jg
and
mulb
jb
mov
cmpsl
mov
cmpsl
jbe
mov
sbb
and
test
add
mov
or
int
mov
addl
cmpsl
aaa
push
cli
mull
leave
stc
in
enter
cmp
mov
mov
sbb
xchg
adc
mov
inc
push
popa
inc
test
repnz
andb
es
adc
test
aas
sub
stos
out
rorl
gs
push
inc
sbb
mov
sbb
sarb
fildll
inc
fdivs
and
sbb
sub
into
rcl
inc
popf
sub
adc
mov
fisubs
test
jbe
inc
pushf
adc
or
test
testb
sar
rcrb
clc
aas
cmp
inc
mov
sub
jl
ljmp
cmpb
push
pop
ret
shrb
pop
adc
and
push
ss
popa
test
in
das
insl
sbb
inc
dec
cli
cmp
gs
mov
repz
or
mov
lcall
lds
les
mov
sbb
outsb
popa
mov
popa
pop
idivb
inc
jae
add
out
adc
dec
jnp
adc
sbb
jns
cwtl
pushf
xor
loop
and
mov
daa
or
test
jp
and
mov
aas
pop
lock
dec
jae
add
daa
ljmp
sub
push
outsl
xor
fwait
pop
inc
mov
dec
lret
xor
dec
dec
shll
mov
movsb
lret
pop
pop
call
pushf
or
dec
adc
jbe
out
push
hlt
leave
and
sahf
mov
test
jb
xor
aam
mov
mov
add
inc
jbe
rol
and
mov
test
jmp
lcall
jns
fbstp
test
loope
xchg
es
scas
push
or
pop
or
jne
mov
push
jg
addr16
lds
mov
lods
outsb
adc
inc
enter
sbb
stos
sar
paddw
push
pop
fists
and
mov
loop
das
pop
in
mov
jmp
push
sub
jg
sub
or
int
mov
push
jle
les
iret
inc
test
cltd
std
adc
xchg
push
pusha
fimull
or
jecxz
pop
and
mov
jae
or
inc
fimuls
sub
xchg
inc
mov
mov
jae
push
leave
gs
orl
xchg
xor
xchg
pop
ficompl
sti
mov
repz
pop
in
mov
or
cwtl
dec
outsb
imul
push
mov
sbb
into
leave
or
sbb
xchg
inc
mov
inc
daa
les
cmpsb
test
leave
clc
cltd
sub
xor
repnz
push
sub
insb
inc
push
mov
xchg
gs
int
push
pushf
mov
xchg
ja
repnz
push
push
shlb
jo
xor
repz
pop
repnz
movsl
mov
xchg
jns
or
movsl
mov
dec
mov
push
sqrtps
mov
test
aaa
push
jle
cmp
push
xchg
sbb
out
in
jmp
cs
push
sub
mov
call
pop
add
sub
sub
test
xchg
addr16
ss
movsb
mov
sub
xor
cmp
into
dec
pop
xor
in
xchg
mov
loopne
out
inc
jnp
cmp
mov
rcrb
push
xor
aad
jns
xor
mov
lods
test
test
loope
icebp
mov
in
cmpsl
pop
mov
imul
pop
or
mov
push
mov
mov
xchg
in
mov
xchg
addr16
jecxz
in
popa
sub
into
cmc
fs
sbb
and
sahf
dec
andb
daa
jnp
adcl
mov
xor
mov
cmp
cld
inc
loope
rcll
iret
mov
stos
insl
push
pop
scas
push
and
mov
mov
pop
inc
sbb
sub
out
jecxz
mov
jge
movsb
push
daa
xchg
or
rcll
jecxz
jns
fnstsw
jp
cmpsl
loopne
sub
inc
sub
nop
pop
push
cmp
ja
enter
jb
pop
mov
stos
dec
pop
and
fstpl
mov
stos
mov
cmp
ja
xchg
jge
cmp
mov
movsl
push
lret
test
sbbb
movsl
push
add
stc
outsl
pop
outsb
ljmp
dec
sti
mov
xchg
sub
jecxz
insl
sahf
test
fidivrl
out
mov
or
mov
push
adc
clc
test
testb
iret
pop
popa
or
lods
icebp
push
mov
pop
cwtl
xchg
outsl
add
sbb
inc
pop
pop
push
pop
repz
push
pop
loope
ljmp
sti
push
mov
hlt
cmp
inc
cmp
push
adc
in
xchg
or
mov
push
mull
inc
mov
inc
in
ss
inc
adc
adc
cmp
xchg
mov
cmp
enter
xor
inc
add
jg
mov
dec
outsb
and
dec
jecxz
and
push
or
jo
cmp
inc
in
xchg
dec
int
rcrb
scas
shl
ja
dec
arpl
aaa
mov
lea
in
jg
xor
movsl
adc
jbe
pop
pop
xchg
mov
mov
push
mov
dec
mov
fistpl
lret
fidivs
jne
testl
mov
adc
js
and
in
loopne
sbb
pop
pushl
pop
mov
xchg
addr16
shlb
test
cmp
add
movsb
leave
cmp
and
cmp
sub
cmpb
lea
lock
js
jae
xor
adc
in
fsubrs
sbb
es
adc
hlt
xor
push
push
in
scas
sbbb
ja
cmp
sahf
shl
dec
frstor
mov
call
aaa
fidivrl
loopne
movsb
in
icebp
mov
xor
xchg
sub
mov
push
cmpsl
push
and
xchg
aam
add
mov
jl
xchg
mov
pop
int
xor
adc
inc
lock
add
repz
mov
mov
mov
adc
pop
ds
lret
pop
mov
sar
inc
mov
jge
test
xor
andl
arpl
popa
xlat
adc
mov
cltd
stos
inc
dec
ljmp
mov
dec
adc
push
pop
movsb
aam
loope
push
outsb
inc
adc
cmp
and
stc
xor
or
mov
xchg
xchg
adc
jl
in
addr16
stos
loop
ljmp
out
push
pop
nop
call
stc
push
sub
mov
adc
mov
or
iret
into
cwtl
push
inc
sub
push
add
cwtl
cmp
xchg
mov
xor
out
push
hlt
jmp
and
mov
addr16
adc
adc
xorl
ljmp
maxps
xor
or
mov
movsl
pop
test
xor
jo
inc
xorl
inc
add
sbbl
dec
insb
mov
mov
js,pn
cmp
mov
pop
imul
or
in
iret
mov
mov
dec
fs
or
mov
jno
sbb
push
push
mov
sub
aas
lock
or
adc
adc
mov
mov
jl
insl
addr16
push
push
popf
adc
push
mov
sbb
imul
hlt
pop
test
dec
inc
push
out
fcompl
cltd
jb
pop
idivb
aam
cltd
arpl
mov
or
and
adc
xor
jbe
stos
pop
jb
push
int3
mov
mov
inc
data16
fimuls
sbb
lcall
inc
xor
es
lods
cmp
xchg
fdivs
scas
add
or
enter
fsubrs
mov
in
mov
outsb
add
repz
inc
pop
popa
enter
fdivrs
aaa
shl
pop
push
dec
dec
push
pop
sbb
aad
dec
ljmp
cmpb
je
inc
adc
je
mov
jns
pop
inc
int
mov
in
mov
dec
dec
mov
mov
dec
fldenv
add
jp
sub
mov
mov
and
jp
mov
sub
inc
inc
loopne
lcall
std
shll
repnz
xchg
ds
push
push
fwait
sbb
cmp
loopne
lret
dec
dec
in
mov
in
push
pop
mov
lea
scas
mov
testb
pop
adc
push
and
jecxz
push
addr16
outsl
gs
sarl
fsubrs
xchg
fmulp
xchg
call
or
xchg
adcb
rorb
mov
aam
fdivl
mov
adc
mov
sub
inc
xor
sub
rol
and
je
cmpsl
cmp
xor
bound
aas
in
nop
loop
push
push
xorb
mov
inc
test
lret
out
into
in
mov
leave
jno
popl
sub
push
adc
jae
add
add
cli
gs
int
push
popa
lcall
pop
dec
and
nop
pusha
stos
xchg
outsb
in
jp
or
fisubrl
hlt
sbb
fwait
xorl
dec
mov
sub
shlb
mov
arpl
sub
sahf
loop
cmp
mov
cwtl
cwtl
shrl
dec
stos
xchg
js
sbb
mov
jae
lock
push
mov
mov
jbe
add
pusha
movsb
mov
movq
bound
mov
call
in
push
jae
dec
sbb
int
ja
dec
cmp
cmp
cmp
xor
jmp
mov
fstl
sbbb
jae
rorb
dec
cmpsb
mov
mov
mov
add
lahf
lahf
jg
aas
ljmp
or
insl
pusha
outsl
mov
enter
ljmp
addr16
sbb
dec
add
insl
jp
mov
mov
fs
mov
pop
sbb
xchg
xchg
sbb
scas
push
add
ret
and
fcoml
aaa
out
and
fsubs
xor
xor
outsl
add
or
inc
movsb
jbe
cmpsb
mov
sub
mov
and
mov
sbb
lret
vpmovzxbq
xchg
cmp
inc
xchg
sub
mov
or
int3
movsb
pop
lret
cltd
int3
jle
lahf
outsb
mov
mov
mov
lea
rcrb
call
data16
sub
xchg
stos
sub
in
xchg
jl
or
adc
xbegin
jmp
mov
mov
pop
mov
popf
sahf
aad
cmp
ja
inc
cmp
or
add
adcb
and
vcvttsd2si
add
jle
sbb
adc
icebp
repnz
and
int3
lahf
xor
in
inc
dec
xchg
adc
dec
roll
push
push
or
xor
lea
and
stc
mov
jbe
mov
inc
push
rorb
daa
jp
pop
rcrb
or
xchg
mov
inc
shrb
and
lret
or
mov
movsl
outsl
xchg
in
out
sub
pushl
les
jae
xchg
inc
jl
fsub
dec
or
mov
cmp
inc
scas
inc
out
push
sub
xchg
xlat
add
rcrb
orb
cs
pop
inc
fs
pop
sbb
ljmp
fs
inc
xor
lods
mov
test
lods
mov
xorl
mov
imul
icebp
push
out
xor
sub
adc
push
sub
lods
mov
test
sahf
loop
test
push
xchg
xor
sub
and
sub
shl
imul
arpl
jp
fistpl
js
outsl
mov
roll
pop
and
fwait
mov
subb
pop
mov
stos
mov
xor
mov
mov
pop
jne
cwtl
mov
mov
push
adc
pop
leave
cmp
push
test
dec
sub
ja,pt
ficomps
aad
xchg
je
dec
fdivrs
lods
les
sub
pop
inc
push
jo
out
repz
fadds
xchg
cld
aam
fisttpll
mov
mov
xor
sub
and
sti
cwtl
adc
cmp
outsb
stos
mov
push
test
cwtl
popf
popa
sbb
and
jno
mov
xchg
movsb
push
cmp
stc
mov
pand
and
insl
movsl
sub
mov
mov
xlat
xchg
add
sub
out
into
xor
stos
add
enter
jne
push
sub
leave
pop
push
cwtl
lods
sub
push
shr
push
adc
cmpsl
add
mov
repnz
xor
movsl
test
xchg
add
or
and
adc
insb
adc
iret
pushf
sbbl
cmp
sub
popf
sub
test
push
movl
lea
addr16
pop
xchg
int3
aam
test
xchg
and
test
mov
mov
daa
or
mov
pop
jle
lea
sub
jg
data16
inc
mov
daa
push
sub
push
in
cld
rcll
mov
out
xchg
scas
outsb
push
fucom
test
fs
pop
jae
sub
lds
dec
mov
xor
sub
test
outsb
aaa
pop
test
in
cltd
jns
add
out
push
adc
sahf
out
imul
insl
or
pop
cli
outsb
out
dec
jp
and
fdivr
mov
cmp
lods
sbb
loope
mov
test
and
lods
loope
xchg
aad
gs
movsl
cmp
hlt
fisubrl
ljmp
adc
push
push
adc
clc
lahf
mov
lds
stc
ja
jbe
and
stc
cmpsl
jp
scas
add
mov
imul
mov
ja
test
daa
pop
out
rol
and
push
add
push
push
add
mov
in
cwtl
pop
and
and
fldenv
jg
aas
les
es
jle
push
shlb
addl
sbb
ficoms
mov
mov
or
xlat
xor
inc
xchg
fwait
cmp
sbb
icebp
call
push
xor
cmpsl
and
call
mov
fimuls
int
cmp
push
imul
mov
sub
out
cmpsl
sti
cltd
sbb
loopne
imul
xchg
lds
insb
das
in
mov
inc
jge
xor
lahf
push
or
arpl
fldt
mov
in
ret
test
scas
dec
add
mov
xchg
mov
inc
pushf
lods
insl
icebp
inc
hlt
je
hlt
ljmp
dec
inc
sarl
jl
lock
mov
push
pop
pop
call
into
mov
out
adc
shrb
cmpsb
mov
xchg
sarb
add
or
jg
out
out
mov
pusha
inc
or
adc
cmpb
push
enter
in
cmpsl
push
push
xchg
mov
mov
pop
push
sbb
lods
cmpsl
add
xor
test
rol
mov
cmp
out
daa
jbe
aaa
shr
in
cltd
sub
gs
mov
loope
je
les
jne
sub
aam
push
dec
add
aaa
lds
sub
shll
mov
mov
out
sar
dec
mov
cmp
pop
orb
and
jmp
push
adcl
add
sub
dec
hlt
pop
loopne
lret
mov
inc
shll
sbb
shl
xor
add
push
sbb
int3
pushf
bound
and
aad
cmpsb
fstl
and
dec
jns
fcmovu
adc
bound
adc
mov
mov
push
cmp
xor
sub
and
cwtl
cmp
xchg
xchg
pusha
or
dec
div
jnp
int3
gs
pop
cli
es
sub
imul
push
lahf
gs
xchg
or
or
out
in
nop
jmp
push
popf
mov
inc
outsb
push
enter
adc
push
aam
add
loope
push
ss
aas
or
or
and
mov
jno
xor
mov
push
xchg
xsavec
repnz
shl
sub
sub
pop
lcall
inc
dec
dec
insb
sbbb
jp
mov
cmpsb
mov
sub
mov
cmp
stos
sahf
daa
sbb
and
cmpsl
lahf
inc
and
lret
test
adc
and
in
jae
das
cmpsl
dec
sbb
imul
sbb
push
aam
jge
leave
inc
and
mov
pusha
mov
fcoml
rcrb
xchg
test
or
xor
sbb
inc
xchg
lods
repz
or
dec
cmpsl
imul
negb
mov
jp
aas
pop
data16
jg
stc
pop
sbb
mov
leave
imul
sub
ret
cmp
pop
push
adc
xchg
xor
sub
idivl
ret
fdivl
mov
mov
daa
sub
inc
sub
add
push
push
in
fwait
dec
add
sbb
lods
pop
sub
icebp
sub
jns
lcall
rolb
out
or
push
mov
push
jae
popa
mov
lret
xchg
andb
stos
mov
lods
std
sub
push
xchg
sbb
das
adc
sub
mov
mov
in
loope
dec
push
push
xchg
in
ret
gs
popa
clc
loope
and
push
sti
mov
jo
jno
push
loopne
or
sub
cmc
cli
pushf
popa
inc
es
pop
outsb
out
movsb
or
aas
lret
xor
scas
cmp
push
test
cmp
stos
sub
add
aaa
jg
xor
fadds
shrl
pop
or
sarb
mov
and
add
fidivrs
addr16
inc
push
sbb
movsl
fisttpl
xchg
fwait
cwtl
fcmove
mov
push
out
cmp
call
pop
cmp
mov
or
es
or
ret
dec
or
mov
adc
imul
add
or
jl
aam
xchg
rcll
sub
ljmp
clc
or
movsl
mov
xor
jp
pop
cmp
mov
pop
adc
xor
fdivl
jmp
imul
in
aas
cltd
sti
cmp
ss
xchg
jns
push
outsl
adcb
pop
lods
lahf
jns
sahf
call
fcoms
dec
push
pop
xor
popa
push
dec
js
xchg
cmc
mov
out
jle
pop
and
dec
fcompl
push
mov
aam
and
lcall
xor
xchg
inc
jl
pop
outsb
js
lods
iret
dec
sub
test
pop
push
cld
mov
add
add
rclb
js
or
int
push
cmpsb
mov
inc
popa
and
lods
filds
lods
shlb
adc
inc
add
mov
fcmovb
cmpsb
into
push
cmc
mov
roll
cmp
xor
daa
rclb
int3
jl
outsl
imul
add
js
mov
fcomip
adc
sub
cmc
and
in
mov
xlat
addr16
imul
add
icebp
sub
outsb
push
sub
mov
leave
out
inc
pop
adc
in
or
xor
mov
inc
jno
popf
outsb
int
add
imul
and
out
push
fisubl
imul
xor
sub
ficoml
xor
fsubl
add
popa
and
mov
icebp
sub
insb
mov
test
and
cmpsb
lcall
in
push
pop
push
dec
je
xchg
jecxz
enter
jnp
cmpsb
mov
or
pop
jno
gs
fcom
arpl
test
xchg
mov
mov
jb
and
rcll
cmpsl
bound
or
roll
inc
mov
leave
vpmaxsw
mov
mov
cmpsl
xchg
cmpsb
add
ds
hlt
fdivs
jle
adc
mov
js
mov
cmp
cmpsl
ds
mov
add
popf
mov
ud0
fiaddl
notb
js
sub
pop
pushf
add
adc
sbb
bound
fmuls
aad
jne
pop
mov
into
pusha
xlat
push
push
and
stos
pop
les
inc
adc
mov
and
cmp
xchg
fldl
or
pop
and
jl
fimuls
iret
insl
jnp
fwait
in
pop
fdivr
mov
mov
sub
iret
mov
fst
imul
add
ret
mov
push
inc
mov
aaa
push
shlb
hlt
dec
das
fidivrs
pop
stos
xchg
lock
cmpl
int
pop
pop
jle
add
in
xor
sbb
stos
clc
mov
popl
cmp
jp
ror
sub
out
in
inc
adc
pop
mov
dec
push
jns
faddl
mov
in
push
xor
mov
xchg
mov
cmpsl
adc
mulps
xor
int
sub
inc
xchg
pop
test
mov
into
std
mov
and
call
into
sbb
mov
repnz
add
fiadds
popf
mov
push
or
jno
xchg
mov
cwtl
cmp
scas
fidivl
mov
push
ret
insb
sub
or
cmp
scas
inc
scas
ret
xchg
int3
fs
hlt
add
loop
pop
inc
jb
push
mov
rcr
movb
stos
nop
pop
jno
sahf
inc
jno
cmp
sahf
scas
int
and
push
and
inc
clc
xor
and
and
push
lods
push
fs
adc
aaa
pop
pop
xor
clc
cmp
xchg
push
add
ja
add
data16
jle
pop
cli
xlat
xor
cmpsb
sbbl
inc
fadds
or
mov
dec
lock
test
sbb
loopne
cmpsb
into
and
shrb
ja
mov
and
push
inc
dec
loop
push
adcl
pushf
gs
dec
jbe
and
loop
xchg
icebp
mov
xchg
jle
and
pop
dec
test
xchg
add
and
mov
ss
jb
xor
mov
sbb
sbb
sbb
hlt
dec
mov
push
add
add
xchg
or
xor
push
add
sub
js
call
mov
inc
stos
das
loop
aas
push
inc
jae
ja
add
jnp
mov
sbb
xchg
not
xchg
add
aas
pop
imull
ja
or
out
mov
lods
sahf
ds
cwtl
repz
stc
dec
mov
out
out
push
mov
imul
lcall
rcr
xor
mov
int
mov
std
xchg
fwait
xlat
daa
fisubrl
xor
add
clc
jne
repz
aad
std
stc
and
cmp
cmp
fidivs
jbe
scas
and
mov
insb
or
js
jp
mov
loopne
sbb
int3
inc
jmp
das
xor
mov
cmp
cwtl
sbb
in
pusha
js
fdivl
sub
or
fwait
mov
push
cmp
cmp
mov
fisubl
dec
sbb
push
das
addl
es
sub
unpcklps
shlb
pop
dec
pusha
dec
repz
out
cltd
inc
ret
lret
lods
test
jecxz
pusha
and
cltd
and
jb
outsl
imulb
rolb
mov
ficoms
int3
mov
ret
out
jno
jno
pop
iret
jnp
mov
cld
push
add
out
mov
test
testb
push
inc
dec
mov
scas
jecxz
insl
lea
sub
dec
push
js
scas
push
sbb
rcl
jge
frstor
jne
cltd
sbb
nop
jns
fwait
insl
sti
testl
cmp
add
pop
mov
cs
fmul
shll
ljmp
sti
cwtl
je
sub
ja
pop
cli
nop
inc
pop
decb
jecxz
cmp
dec
std
mov
fbld
inc
mov
inc
sbb
repz
mov
push
es
out
jmp
push
cmp
add
adc
add
les
stos
xchg
dec
cmc
push
mov
test
lock
xor
movsb
push
mov
jecxz
outsl
je
out
rorb
sbb
mov
cwtl
mov
cmp
insb
repnz
sub
push
xchg
jo
in
sub
or
scas
fisubl
add
sub
mov
addl
mov
push
cmp
int
rol
insb
mov
out
loop
pop
pop
mov
push
incb
cmp
or
sub
in
testl
loopne
cmpsl
stos
stos
bound
xor
repz
arpl
xchg
pushf
pop
mov
ficompl
ss
sbb
inc
jno
stos
sbb
test
xor
push
xchg
push
jae
dec
mov
test
xor
enter
push
cmc
cmp
in
or
push
jbe
push
push
push
xchg
mov
aaa
ficoms
xchg
push
ret
jecxz
push
mov
outsb
inc
roll
cmp
xor
jmp
imul
xor
add
out
testb
cmpsl
sti
enter
rcll
mov
cltd
das
jb
cs
fisttpll
or
enter
into
xchg
jae
add
repnz
shr
push
idivb
inc
sbb
stos
loop
aaa
cmpsb
into
subb
mov
sbb
jge
xchg
xchg
cmpsl
aad
stos
mov
ja
imul
jno
and
mov
adc
repnz
inc
cwtl
xchg
nop
push
into
in
cmp
gs
repnz
adc
push
cmpsb
inc
lcall
lret
jb
imul
dec
push
mov
push
sti
cmp
push
rclb
xchg
decl
xchg
pop
mov
pop
call
pop
int
mov
lret
push
aad
cmc
in
sub
outsb
inc
std
gs
fisubl
mov
les
mov
and
pop
mov
xchg
xor
jno
inc
xor
ret
leave
lret
sbb
pop
loop
into
mov
xchg
or
inc
mov
inc
popf
dec
inc
imul
push
je
and
cmpsb
dec
hlt
fsubl
lahf
sub
test
cmpsl
mov
cmp
repz
mov
das
shlb
add
pushf
xchg
add
fs
jns
arpl
fwait
mov
out
std
adc
andl
jle
cmp
mov
mov
mov
mov
addb
sub
leave
leave
jo
sub
sbb
popf
inc
adc
daa
icebp
fst
repz
lods
pop
or
add
sbb
xchg
cmpsl
jns
xchg
ror
xchg
jae
add
adc
shl
cwtl
sbb
mov
cmp
push
out
dec
jnp
xchg
pop
push
mov
or
sbb
inc
push
iret
popf
in
fbstp
push
mov
mov
arpl
inc
pop
adc
jmp
dec
sahf
ss
movb
mov
adcb
inc
mov
out
mov
sbbb
jne
xchg
sub
data16
pop
jo
stos
roll
orb
lret
lods
std
jmp
jle
fdivs
call
sbb
add
loope
cli
pop
pusha
jge
ss
pop
sbb
pop
pop
test
sti
push
in
jl
mov
jle
popa
nop
mov
sbb
out
xor
ret
ret
mov
test
and
sbb
xchg
out
adc
sti
mov
mov
in
or
jg
cmc
add
repnz
in
mov
mov
push
repz
imul
popf
adc
sub
aas
cmp
mov
pop
inc
dec
fwait
aam
dec
mov
imul
sub
sbb
xchg
mov
xchg
ror
int3
popa
jle
loop
push
data16
mov
sbbl
pop
ret
adc
movsl
pop
std
pop
inc
inc
movsb
scas
imul
es
dec
jp
andl
sahf
fsubrs
aam
mov
xchg
jno
pop
mov
fmulp
pop
sahf
imul
in
data16
aad
pop
push
xor
cmp
adc
xchg
cmp
and
leave
sub
movsl
das
xchg
push
ret
popf
inc
mov
add
cmp
cmp
mov
and
outsl
sbb
pop
add
cmc
outsl
jb
mov
jecxz
movsbl
test
dec
jmp
int3
mov
adc
call
push
arpl
cmc
lahf
loopne
fisttpll
ds
xor
loope
rcrb
xchg
out
cwtl
mov
lock
hlt
sar
stos
lods
adc
imul
sbb
push
jae
cmp
gs
pusha
mov
rorb
inc
sub
lock
sub
in
dec
and
fstps
fs
xchg
enter
jle
and
and
iret
mov
inc
xlat
scas
adc
cmp
ds
neg
nop
test
and
xchg
test
inc
repz
je
jns
jb
xchg
cwtl
sti
clc
call
jg
cmp
push
lock
gs
je
dec
or
add
shrb
and
add
shl
push
andb
cs
sbb
sti
push
mov
xchg
and
lea
mov
cmp
lret
loop
or
lock
std
lea
adc
xor
jge
lret
pop
ljmp
outsb
insb
gs
jp
xor
dec
push
sub
lds
lock
arpl
mov
push
push
outsb
adc
ja
xchg
in
lahf
adc
jb
sbb
imul
push
inc
sbb
scas
cs
sahf
fidivrl
lods
lret
lahf
mov
das
dec
mov
jnp
jg
jno
cmpsl
and
xchg
xchg
pop
sub
fisubrl
scas
pop
popf
and
mov
pop
inc
jmp
popa
inc
add
xchg
and
xor
xor
mov
fstl
mov
iret
sub
pop
xchg
mov
and
leave
loope
inc
mov
addr16
inc
aas
mov
pop
rol
add
add
sbb
or
sub
pop
adc
movsl
scas
sub
and
ss
and
movsb
ret
mov
movsl
cmp
adc
leave
xor
add
js
add
sbb
mov
lods
mov
nop
pop
pop
icebp
add
aaa
inc
icebp
jne
push
into
push
lock
pop
cmp
xor
mov
jge
lock
ret
pushf
aaa
loopne
fmull
inc
into
push
inc
stc
cmc
out
outsb
nop
dec
stc
jno
andl
repnz
lods
jb
arpl
jbe
aad
out
push
jp
test
lock
add
mov
adc
sub
outsb
or
or
pop
mov
adc
ret
sar
adc
or
mov
aam
loope
inc
xchg
pop
xchg
dec
mov
inc
push
pop
aam
out
sbb
scas
je
sub
xchg
mov
ret
inc
ss
sbb
dec
enter
mov
push
mov
mov
fisubl
movsb
push
cli
sub
cs
fimuls
push
sub
enter
arpl
dec
sbb
neg
bound
pop
mov
jo
aad
xchg
jl
lcall
push
mov
push
lcall
or
out
int3
enter
sti
xchg
fistl
gs
sub
or
push
pop
xor
js
pusha
sub
inc
jne
ficoms
ss
inc
out
ss
mov
out
mov
das
xor
push
jmp
lret
cmp
nop
out
es
jno
call
inc
sti
cltd
testb
cltd
adc
sub
std
push
dec
jl
inc
cmp
mov
sbb
scas
loope
les
mov
mov
push
mov
xchg
js
mov
push
imul
inc
aas
mov
and
pop
pop
pop
push
pop
push
adc
int
xchg
xor
cmp
jmp
fisubs
dec
and
jl
sbb
jb
xchg
cld
es
xor
xor
cmp
or
subl
jl
push
add
adc
andl
and
push
enter
jg
in
int
add
les
xchg
in
inc
stc
pop
jo
pusha
daa
vpsubd
pushf
bound
and
and
stc
subb
mov
adc
mov
jnp
shrl
add
inc
pushf
fucom
mov
cmp
adc
xchg
test
xchg
bound
cmp
pop
mov
scas
jbe
sub
ja
cltd
in
push
inc
adc
xchg
ja
inc
mov
xor
inc
lret
enter
cmp
push
inc
jns
xor
mov
test
jb
sub
push
in
addr16
push
jmp
jge
mov
ds
data16
sbb
push
add
dec
loop
imul
xor
subl
dec
ret
in
and
push
jb
push
std
or
out
push
jnp
and
test
inc
pop
lret
sbb
aaa
out
movsb
pushf
sub
jg
xchg
sbb
push
dec
mov
cmp
aaa
por
int3
sbb
test
addb
repz
mov
mov
push
or
and
movsl
fsubrs
ficompl
mov
rcrb
call
push
in
daa
cmp
add
mov
xchg
sarl
divps
sbb
adc
dec
jge
test
repz
add
movsb
inc
dec
loop
inc
out
shll
test
pop
jecxz
ret
sahf
inc
mov
mov
pusha
mov
push
jnp
cmp
inc
mov
pop
out
jb
and
jae
adc
and
and
xchg
lcall
decb
leave
sbb
stos
lcall
sarl
xor
lock
ret
cld
xlat
lods
dec
dec
repnz
xchg
dec
mov
ja
xor
rcrb
dec
nop
adc
lods
stos
mov
and
in
pushw
mov
hlt
push
pop
cmp
cmp
repz
bound
std
lods
scas
addl
iret
fiaddl
mov
xor
mov
inc
mov
aas
lahf
addr16
jmp
push
clc
xchg
mov
mov
and
in
xor
movsl
push
fdivrl
push
cld
lret
jo
or
rolb
push
cmp
jne
pop
popa
clc
jb
push
stc
push
jg
mov
xchg
std
mov
popa
jle
adc
sbb
fnsave
ljmp
and
add
inc
je
nopl
mov
shlb
outsb
xor
pop
push
jo
mov
mov
jnp
push
pop
mov
imul
ret
pop
cmp
stos
jmp
push
loopne
imul
jl
push
leave
lcall
nop
sarb
sbb
adc
es
dec
fwait
sti
imul
inc
outsb
je
pop
cltd
cmp
scas
repnz
and
sbb
sub
fdivrp
push
or
pop
sbb
std
or
cmc
out
and
cmp
ret
rcrl
orl
jno
outsb
add
mov
add
mov
jle
xchg
rep
ljmp
add
dec
fldcw
xchg
scas
sahf
es
std
imul
xchg
loop
mov
sbb
cmc
inc
jmp
int
add
jge
or
pop
call
loope
les
bound
inc
lods
leave
mov
pushf
data16
pop
pushf
in
mov
dec
loopne
or
shlb
dec
xchg
xor
push
lock
daa
sbb
lret
inc
xchg
enter
xor
nop
outsb
pop
inc
test
jecxz
dec
mov
cs
or
jnp
adc
pusha
inc
cmp
test
sub
push
inc
imul
mov
pop
pop
dec
rorb
rcl
adc
cmp
mov
in
aad
loope
imul
js
lea
adc
mov
mov
loopne
and
test
or
dec
movb
or
pop
mov
imull
mov
cmpsb
adc
inc
aam
test
outsl
adc
fst
jno
fiadds
fs
fisubrs
or
stc
movb
xlat
jae
test
add
mov
sbb
xchg
push
es
ljmp
cltd
sbb
sub
dec
enter
out
and
repnz
je
pop
int3
jae
out
add
sub
dec
rcrb
and
mov
js
mov
dec
mov
out
fnsave
negl
mov
jge
sar
pop
out
hlt
jbe
inc
cwtl
jne
xchg
je
je
inc
repnz
sub
dec
in
mov
cmpb
jle
xor
fildl
add
jae
mov
and
mov
push
mov
mul
jo
xchg
xor
dec
mov
sti
cmp
add
loopne
add
mov
mov
pushf
iret
std
xor
sub
add
dec
mov
adc
or
lods
cmc
outsl
pop
in
pop
push
cmp
push
jae
mov
pop
or
push
xor
cmp
xbegin
push
iret
and
jno
xchg
stos
sub
aad
or
cs
scas
mov
xor
or
int
or
fstl
call
jge
leave
insb
ljmp
ret
getsec
hlt
cmp
xchg
add
pop
nop
mov
jae
dec
shll
lods
cmp
mov
gs
and
stos
das
mov
repz
cmp
or
pop
mov
cmp
outsb
sub
mov
push
ret
xorl
and
sbb
mov
xchg
stos
xor
pop
cmp
mov
push
fisubl
dec
gs
out
lcall
adc
aad
xlat
push
into
in
mov
cmp
jp
xchg
out
xor
cs
notl
xor
vmovd
add
ds
add
aam
jmp
and
mov
jl
ss
sbb
add
daa
leave
roll
and
pop
adc
inc
sub
push
mov
scas
sub
mov
jns
inc
in
cwtl
fwait
push
in
sti
in
cmp
mov
lds
pop
aam
es
outsb
fwait
outsb
int3
movsb
popa
loop
lods
imul
sub
sbbl
inc
cmpsl
add
into
call
or
inc
or
dec
pushf
jl
sbb
dec
out
cli
mov
dec
fistpl
cmp
mov
push
jp
je
mov
mov
out
mov
mov
scas
push
les
ret
xchg
cmpsl
xor
movsb
jecxz
scas
stos
cmp
ret
push
fwait
xchg
mov
stc
das
adc
daa
loope
es
in
cmp
inc
mov
ljmp
mov
test
push
or
pop
rcll
mov
mov
pop
scas
std
ds
dec
into
lods
and
sbb
push
es
js
movl
scas
iret
pop
mov
pop
push
or
out
pop
out
sbb
sbb
and
pushf
jecxz
sti
jecxz
lea
lock
or
lea
sbb
loopne
decb
and
pushf
mov
push
ljmp
inc
add
sahf
and
mov
in
fcompl
push
popf
mov
inc
pop
sub
push
fildl
movsb
into
and
inc
or
decb
fildl
or
lock
jge
cmpsl
std
rcrb
int3
push
fnsave
sbb
or
mov
or
loopne
mov
shll
mov
cmp
dec
bnd
out
lret
adc
xchg
data16
sbb
push
push
adc
jmp
xchg
adc
pop
ds
and
push
sahf
add
sbb
cmc
leave
xor
into
lea
fidivrl
jl
mov
in
test
inc
push
gs
adc
push
and
xor
out
lods
dec
sbb
out
repz
aas
adc
or
cmp
bound
pop
fildll
outsl
icebp
dec
ret
lahf
jae
cmp
mov
dec
into
cmp
push
shll
xchg
ds
cmp
pop
adc
fcoms
cmp
out
mov
scas
sbb
lret
ret
and
and
ja
lcall
out
mov
sbb
or
fldt
sub
xchg
sbb
or
popa
outsb
cmc
mov
lock
outsl
jnp
push
popa
xchg
pop
addr16
inc
fists
or
ss
jno
data16
add
shlb
sahf
outsl
rorl
push
or
pop
leave
pop
subl
or
repz
sbb
lods
shll
out
lret
das
movsb
ja
bound
mov
rclb
xchg
test
lds
inc
call
sbb
pop
sub
lahf
adc
fisttpl
outsb
push
int3
mov
ljmp
mov
mov
addr16
push
inc
sti
sbb
add
fwait
test
dec
xor
lret
les
mov
outsl
inc
push
cmp
incl
fwait
pop
flds
adc
imul
mov
push
or
inc
jae
leave
xorw
repnz
ret
fwait
sub
mov
push
and
sub
out
sti
adc
fimull
iret
ja
scas
subl
popa
or
push
and
call
mov
add
loope
mov
add
mov
stos
shlb
xor
xchg
add
fs
mov
mov
xlat
inc
cli
dec
ja
outsl
fmuls
shl
pop
insl
push
xor
xorl
sub
les
or
shlb
and
or
xchg
fnop
popa
cwtl
fcoml
xchg
sub
movsl
mov
push
pop
dec
out
xlat
fbld
and
xchg
adc
and
push
and
sbb
cmp
push
loope
xchg
addr16
pusha
push
les
push
idiv
lods
lret
hlt
and
in
and
cmp
test
mov
jp
jae
lahf
xorb
mov
sbb
ja
cmp
push
stos
inc
sub
je
or
testb
push
call
out
scas
push
mov
and
cli
pop
push
ljmp
xchg
data16
xchg
and
mov
xchg
pop
or
mov
test
outsb
sar
enter
or
rorb
loop
cld
xchg
lods
jns
ja
dec
mov
add
jmp
test
cmpl
sbb
enter
or
pop
xor
dec
sub
sbb
xchg
insb
add
cmp
paddusw
iret
push
into
sbb
icebp
int
mov
xchg
out
adcl
push
inc
pusha
mov
repz
fmul
xor
ja
fisttpl
sub
fcomps
xchg
imul
jecxz
in
pop
push
mov
xor
test
aaa
dec
pop
mov
loop
push
int3
inc
sub
lret
or
mov
push
daa
loope
mov
mov
scas
out
hlt
shrb
pop
inc
cmp
add
jp
sti
push
jae
out
add
and
enter
jge
sbb
dec
xor
mov
test
push
inc
adc
or
push
mov
outsb
in
std
add
stos
out
and
fdivrs
jbe
dec
pusha
sub
add
xchg
popf
jle
ds
or
mov
pop
popa
dec
fisttpll
and
frstor
adc
stos
sbb
mov
in
jno
jne
adc
in
or
add
push
not
adc
mov
lcall
ja
bound
mov
cwtl
sub
push
imulb
jle
and
xchg
jmp
mov
inc
pop
xor
in
mov
repnz
add
lock
das
cmp
sub
adcl
test
sbb
jb
lods
outsb
inc
repz
in
mov
jo
xor
adc
adc
xor
pusha
test
push
jnp
loope
daa
jle
xchg
pop
sahf
pop
add
xor
dec
std
add
jmp
xchg
mov
movsl
adc
xor
lahf
mov
pop
shlb
repnz
adc
jbe
xchg
adc
push
xchg
rcrl
test
stos
imul
icebp
shll
out
sbb
push
sbbb
cwtl
fcmovnu
vmwrite
sub
stos
in
clc
cli
xor
loopne
fstl
testb
out
addb
xor
data16
bsf
mov
xchg
lahf
jno
xchg
xor
lret
jge
nop
xchg
lret
je
push
cmpsl
jecxz
push
addr16
movsb
mov
addl
xchg
ss
xchg
pop
inc
stos
xor
fbstp
das
aas
push
cld
lcall
cld
sbb
push
fidivl
or
in
ja
xlat
lea
adc
xchg
dec
xlat
clc
push
push
loopne
or
jecxz
adc
inc
mov
and
mov
push
xor
dec
inc
insb
mov
pusha
cld
push
pop
stc
je
jne
mov
and
icebp
jb
inc
fs
outsb
mov
insl
lahf
add
xchg
push
jge
xchg
xchg
jle
mov
mov
ljmp
jnp
shlb
pop
inc
popf
dec
iret
cmpsl
push
fucomi
scas
sub
mov
pop
repz
notl
inc
imul
ss
adc
adc
add
fs
or
lds
test
in
inc
mov
int
stc
pushl
and
or
fimuls
mov
adc
mov
outsb
lods
cmp
mov
int3
fisttps
cld
and
test
ret
and
push
pop
lcall
enter
inc
je
sti
repz
popa
jbe
mov
add
mov
push
sbb
dec
push
pop
or
jle
jge
pop
or
sti
and
mov
out
and
cmp
mov
sahf
loopne
into
mov
divl
dec
mov
inc
or
pop
jns
jge
cmc
dec
lods
sbb
jmp
push
mov
add
jl
mov
jg
mov
xchg
je
popf
movsb
mov
ja
lods
pop
cltd
dec
mov
mov
into
lahf
adc
jp
xchg
pop
adc
aad
push
ficompl
xor
cmp
sarb
scas
mov
in
mov
popf
dec
ret
fldt
pop
flds
dec
cli
cmp
divb
sbb
loop
sbb
inc
icebp
add
xor
scas
cmc
sub
in
xchg
or
dec
out
xor
ret
inc
ds
xor
rcrl
clc
movsl
cmpsl
insb
cltd
mov
scas
jp
stc
or
sbbb
adc
pop
sbb
std
inc
ds
sti
mov
inc
inc
jmp
loopne
pop
add
inc
and
fisubl
scas
fwait
mov
and
fxam
icebp
cmp
jo
clc
lahf
in
mov
leave
cmp
sbb
mov
jg
dec
outsl
and
fbstp
pop
xor
mov
xchg
push
mov
rorl
inc
cs
rcrb
call
stos
ret
into
jno
cld
sub
cmpsl
pop
and
push
dec
mov
or
lds
or
incl
jle
in
push
out
sub
adc
out
xchg
in
je
out
sahf
dec
sahf
sbb
mov
clc
gs
xor
push
and
adc
dec
sbb
xchg
icebp
mov
mov
test
mov
daa
xchg
lahf
sbb
cmp
repz
sti
and
mov
add
loope
ljmp
sbb
mov
sbb
sahf
incb
cmp
or
nop
sbbl
ds
aas
and
sbb
or
repz
aad
movsb
cmp
outsb
xor
dec
mov
pop
pop
daa
ja
pushf
add
aad
ret
aas
nop
xchg
jecxz
roll
push
push
jge
mov
outsl
cmp
mov
and
and
pop
or
jle
rolb
stos
iret
and
sub
push
repz
clc
arpl
pop
repnz
fwait
and
movsl
fwait
jmp
mov
adc
lods
mov
out
dec
cli
dec
repz
cwtl
je
mov
scas
iret
aad
or
leave
lods
popf
gs
lds
adc
adc
jo
or
std
push
dec
push
pop
paddd
mov
emms
leave
ret
pop
jbe
sub
xor
into
jae
push
mov
stos
inc
sbb
add
mov
pop
les
out
jnp
or
or
add
pop
push
sub
jno
test
dec
ds
xor
lock
outsl
sub
or
lret
cmpsb
sub
mov
jns
cli
divb
or
sar
adc
inc
xchg
or
add
mov
inc
cmp
jmp
mov
fs
into
pop
mov
cmpsb
pop
push
lahf
dec
lds
push
cwtl
cmp
add
inc
insb
jp
mov
xchg
cmp
inc
add
sbb
in
popa
pop
pusha
pushf
push
ret
add
mov
mov
jg
jmp
mov
dec
pop
pop
loop
lods
push
mov
pop
aam
pop
dec
adc
fildll
xor
into
dec
dec
sub
cmp
repnz
mov
shlb
add
daa
xor
dec
subl
mov
js
push
stc
lods
xchg
lods
mov
and
mov
std
test
mov
add
loop
and
arpl
ror
cmp
cmp
out
mov
sbbl
xlat
insb
cld
fmull
mov
jp
pushf
ret
aas
mov
add
or
cmp
inc
jb
out
jo
inc
jle
push
pop
imul
lret
ret
xchg
cmp
jmp
mov
fwait
loope
xor
lods
imul
cmp
xor
repz
mov
nop
pop
nop
scas
or
in
and
ret
arpl
jg
xor
lock
repz
or
jmp
cmp
fmuls
xchg
push
rcrb
jmp
addr16
pushf
leave
loopne
or
das
adc
mov
cmp
jg
cld
inc
scas
push
push
mov
sub
push
fcomi
movsl
test
xor
sub
scas
cmp
jno
mov
mov
mov
pop
iret
mov
fcoml
adc
fs
test
ret
push
add
xor
pusha
adc
pop
add
dec
addr16
pop
aas
or
lds
cmp
jb
and
out
sub
or
jmp
rorl
add
jo
gs
mov
jl
adc
call
xorb
inc
sarb
fdivl
insb
dec
roll
dec
xchg
mov
sbb
jp
lods
mov
and
or
dec
ret
rorb
loope
push
and
jae
leave
int3
push
lea
lea
sub
cltd
je
jl
mov
sub
in
sbb
push
sbb
dec
sbb
ret
and
pop
jns,pt
pop
dec
inc
push
jb
xor
leave
movsb
jg
cmove
fmulp
outsb
sar
mov
inc
xchg
sti
inc
push
ja
mov
imul
push
out
or
push
into
mov
sti
xchg
or
fdivrl
jmp
sbb
insl
leave
xchg
roll
movq
out
pop
sub
sbb
insl
pop
daa
xchg
rcrb
push
mov
cs
mov
int
xchg
sub
lcall
int3
sub
lock
mov
add
out
bndstx
push
rcrl
sbb
sbb
add
adc
shll
ja
leave
mov
inc
fldl
jge
pop
cwtl
imul
cs
and
lods
icebp
mov
mov
cmp
jns,pt
mov
daa
cmc
xor
clc
xchg
imul
shr
push
add
xchg
mov
lret
or
sub
or
xchg
xor
cmp
jne
pop
jmp
adc
mov
push
gs
add
fdivl
push
inc
mov
in
push
add
movsl
pop
mov
pop
push
sahf
xchg
ret
pop
pop
jo
xor
notl
pop
andb
xchg
test
data16
repnz
inc
jecxz
pop
es
hlt
fdiv
cmp
mov
cmp
sub
in
ret
adc
sbb
or
fistpll
mov
xchg
add
outsl
and
pop
outsb
loop
mov
sbb
mov
adc
mov
inc
ds
mov
xchg
pop
insl
jo
sub
add
ret
test
jae
fidivl
mov
sbb
add
repz
xlat
xor
adc
pop
jg
or
sub
aam
movsb
jns
daa
add
sub
dec
cld
pop
mov
inc
out
outsl
cmc
movsl
loope
sub
aaa
dec
into
imul
fisttpll
jbe
std
ja
lret
int
adc
inc
enter
cltd
test
add
xchg
and
cmp
pop
into
fistl
ret
pop
jmp
imul
and
lret
fsts
test
out
cmc
adc
sub
mov
add
fwait
lcall
cltd
adc
neg
adc
pop
pop
je
or
fwait
xchg
mov
and
xchg
inc
dec
std
les
jmp
ja
mov
xlat
or
inc
ds
pop
mov
mov
pop
mov
mov
pusha
mov
pop
fcompl
mov
push
and
int3
sahf
iret
xchg
add
jns
fsts
inc
push
inc
and
mov
add
pop
adc
jno
jbe
frndint
andb
add
rorb
mov
aas
push
int
mov
xor
adc
dec
push
popa
sbb
insb
push
sarl
lcall
dec
inc
test
cwtl
negb
rcl
pop
and
push
mov
inc
ja
adc
les
push
subb
cld
lock
xlat
sbb
ret
cs
es
lcall
rcrb
jl
mov
cmp
out
xchg
jo
add
add
rcr
lret
add
jp
ficomps
notb
inc
mov
pusha
mov
mov
arpl
mov
popa
jg
scas
std
jno
lea
dec
xorl
mov
inc
pop
xor
sbbb
roll
mov
mov
push
outsb
inc
lret
lea
dec
push
dec
stc
dec
and
xchg
mov
into
cltd
jbe
push
or
outsb
sbb
pop
dec
les
xchg
lods
and
int
adc
xchg
jnp
lods
jle
into
xchg
out
test
pop
pop
in
or
sbb
push
sbb
subl
and
lods
int
insb
push
popf
xchg
push
add
or
ret
rcrb
fnstsw
pop
mov
es
and
repz
rcl
mov
mov
stos
mov
pushf
xchg
jns
adc
inc
push
xor
add
inc
pop
mov
orb
pop
xchg
aaa
rclb
bound
jb
mov
in
jmp
jg
scas
sub
pop
insb
adc
arpl
fiadds
les
lock
jae
mov
fs
icebp
xorl
mov
xor
mov
sub
rol
push
or
xchg
fadds
fwait
arpl
cli
cmc
cmp
inc
rorl
call
push
jbe
leave
cmc
push
sbb
cs
adc
icebp
movsl
clc
cld
xor
xchg
test
out
sub
sub
and
push
fsubl
out
in
jbe
rolb
pop
in
cld
popf
bound
xchg
sbb
or
je
into
scas
add
lea
fcomps
sbb
xchg
fwait
scas
outsl
fsubr
and
das
ret
add
mov
aad
mov
test
aas
call
xchg
repnz
pop
mov
icebp
and
lock
cwtl
pop
mov
mov
mov
bound
mov
dec
lcall
ljmp
pop
mov
xchg
sti
push
xchg
jecxz
loope
and
jg
cmp
xchg
scas
push
mov
test
fs
jmp
inc
xchg
mov
cli
sbb
mov
in
pop
mov
mov
pop
push
dec
and
cmp
pushf
xchg
fsubrs
mov
mov
shll
outsl
mov
jnp
mov
dec
sub
dec
sub
push
pop
jbe
pop
sub
lods
pop
sub
and
push
scas
xchg
rol
mov
mov
sub
mov
sub
fists
jmp
adc
ljmp
jb
cmpsb
lds
cmpsl
mov
mov
or
lods
mov
es
popf
cmp
movsb
das
mov
xor
in
push
jnp
cmc
pop
pop
fldenv
xchg
loope
fst
fidivrl
mov
mov
sub
adc
sbb
or
push
aad
fcmovne
insl
sbb
sub
adc
dec
out
int
inc
test
int
jmp
ret
jle
sbb
sahf
ss
in
es
push
cmp
xor
cmp
jno
in
sbb
je
dec
push
ret
push
clc
inc
pushf
js
stos
jns
adcl
lods
mov
rcrl
adc
int3
dec
outsb
push
mov
mov
xchg
sbb
xchg
inc
lea
movsb
inc
dec
lods
icebp
das
jne
dec
dec
pop
rcr
movsl
cmp
test
cmp
cmpsl
inc
mov
jb
pop
repz
dec
push
dec
push
mov
mov
dec
sub
mov
insb
test
insb
dec
xor
adc
adc
sub
add
xchg
daa
popa
adc
cltd
pop
repnz
insl
mov
mov
and
outsb
cmpsl
add
out
pop
loope
xchg
inc
stc
rcrl
pop
jae
inc
mov
sbb
cmp
inc
jmp
ss
call
mov
enter
outsl
mov
fs
xchg
jg
dec
jne
outsb
inc
add
loope
jmp
jecxz
fsub
xor
int
mov
in
pop
sbb
jg
test
pop
andl
pusha
notl
jp
aad
adc
cmp
push
call
fucom
jns
insl
jg
mov
in
cltd
push
pop
jbe
out
lret
gs
mov
mov
cmp
xchg
cwtl
icebp
add
mov
jle
icebp
int3
pop
cs
outsl
xchg
cld
les
out
sub
xchg
repnz
adc
int
mov
sub
and
sub
xor
addr16
jbe
and
sbb
xor
mov
int
pushl
mov
cmp
sbb
cmc
addr16
jmp
inc
xchg
adc
inc
inc
popa
aad
cwtl
fwait
sbb
mov
lret
jle
push
mov
and
jge
test
lods
faddp
enter
aam
idiv
xor
rclb
inc
int
add
xor
into
push
stos
lods
sbb
add
xor
outsb
mov
jno
test
rcll
sub
adc
jae
xchg
add
push
add
dec
or
or
cld
push
mov
push
cmp
mov
xor
mov
mov
stos
cmp
add
mov
ficompl
sbb
call
push
pusha
sub
fadds
jne
mov
subl
xor
test
or
outsl
add
xchg
fisttpll
aad
jl
arpl
mov
psubw
dec
or
or
xor
fcmovbe
popf
pop
loop
push
push
pop
or
shrb
and
out
add
or
cltd
aam
imul
pop
dec
xorb
add
bound
mov
cwtl
and
repnz
push
mov
scas
mov
int3
lock
ljmp
add
loope
pop
in
mov
mov
push
lea
dec
jne
sub
fs
push
push
dec
mov
jbe
std
cmp
xor
or
stos
and
sub
cs
jecxz
loopne
test
loope
popf
adc
jge
scas
add
mov
aaa
sub
in
pusha
mov
rolb
es
push
mov
std
push
repz
sub
and
divl
enter
loope
lods
sbb
and
hlt
scas
jb
adc
fwait
mov
lret
je
imul
sbb
or
jne
testb
pop
sub
push
insl
push
push
sti
nop
rcl
pop
sub
pushf
dec
out
xor
xchg
mov
xchg
shrb
add
xchg
lret
inc
xchg
push
push
jg
lock
pushf
pop
into
xor
nop
dec
fs
sub
xchg
sbb
paddsw
pushl
push
or
adc
sbb
cmc
insl
dec
jnp
mov
xchg
adc
pop
mov
aam
or
scas
in
mov
mov
pop
das
xlat
and
or
pop
ds
dec
mov
lcall
add
dec
mov
pop
xorl
sub
xor
mov
xor
orl
cwtl
sbb
dec
sbbl
jb
mov
in
sub
pop
cmp
push
std
mov
repz
cmpl
lcall
pop
pop
repz
decl
ret
sub
cli
or
cmpsl
jbe
xlat
loope
dec
push
and
xor
nop
inc
fs
adc
inc
gs
and
cmp
daa
xlat
andb
gs
dec
lret
mov
adc
jbe
inc
sbb
push
shrb
aam
imul
data16
dec
cmp
arpl
mov
lods
subb
jb
aam
into
je
int3
mov
add
jno
push
mov
and
mov
scas
lcall
cmc
sbb
sbb
add
pop
adc
sub
ljmp
xlat
imul
cmpsb
jle
and
push
jae
xchg
scas
repz
xor
and
inc
push
mov
scas
adc
aaa
adc
xchg
inc
psllq
push
jns
jle
pop
pusha
out
les
push
fiaddl
pop
jecxz
dec
movntps
lods
stos
in
mov
imul
cltd
pop
scas
pop
ljmp
call
push
cmp
testb
mov
mov
pop
scas
push
into
push
sbb
icebp
jle
pop
movsb
testb
ss
dec
hlt
stos
xchg
mov
stos
push
int3
xchg
setg
shlb
leave
and
mov
dec
inc
pop
jg
sub
cwtl
adc
jnp
mov
jmp
jmp
mov
sbb
outsl
inc
sub
adc
aam
loopne
gs
xchg
cmc
ret
setne
pop
xchg
leave
xchg
out
lcall
loop
test
fldenv
icebp
inc
push
js
les
bound
sbbl
int3
push
mov
cld
cmp
movsl
out
pushw
or
bound
addr16
add
das
mov
and
xor
jle
jmp
test
push
lds
xlat
mov
cmp
cmp
pop
clc
mov
and
jb
mov
in
js
lods
cwtl
rcr
add
sbb
xchg
mov
adc
out
daa
sub
sub
je
jg
push
cmc
jmp
mov
cld
flds
mov
scas
aam
movsl
es
jne
xor
shlb
dec
test
hlt
ret
pop
std
jle
adc
and
repz
outsb
loop
popa
cmp
push
test
ret
and
jl
popf
add
xor
push
mov
cltd
jb
cld
add
push
add
daa
arpl
push
inc
dec
mov
push
jmp
cmp
pop
xorl
fwait
xchg
dec
add
icebp
mov
stos
sub
js
pop
icebp
mov
fisttpl
cmpsl
es
mov
enter
sbb
add
repnz
lcall
pushf
out
or
outsl
scas
xlat
add
cmp
dec
or
and
rol
rcll
fisttps
loope
cmp
lret
push
cmp
mov
jns
push
jo
mov
popf
xchg
dec
xor
xor
dec
jae,pt
imul
icebp
push
sbb
xlat
pop
iret
push
ret
dec
adc
shlb
pop
imulb
scas
dec
mov
mov
loope
pushf
sub
mov
dec
addr16
mov
jne
dec
bound
aas
mov
enter
dec
cmpsb
pop
mov
push
repnz
dec
hlt
add
or
imul
dec
jmp
adc
js
stc
insb
dec
push
pop
sldt
imull
cmp
ja
fadds
imulb
cmc
add
mov
pop
repnz
xlat
rcrb
add
pop
cmpsb
xchg
movsl
dec
and
stc
test
cwtl
xlat
fisttpll
push
aaa
test
sbbl
int3
cwtl
movsb
out
dec
icebp
inc
loopne
inc
pop
ret
xchg
movzbl
lods
cmp
fwait
ja
sbbb
mov
xchg
add
outsl
js
into
inc
dec
mov
inc
jg
inc
jp
push
or
mov
xor
inc
rolb
js
adc
jae
scas
mov
mov
bound
or
xchg
scas
notb
cmp
decb
sub
incb
cmpsb
test
sar
cmpb
pop
adc
adc
mov
fucomi
cmp
cltd
es
xchg
jl
dec
xchg
nop
xchg
movsl
jecxz
mov
popf
std
out
sbb
orl
xchg
jnp
cmpb
stc
jbe
fucomip
mov
cld
scas
movsb
mov
and
stc
sub
mov
xchg
ficoms
shr
mov
pop
aad
aam
mov
sub
inc
mov
jbe
adc
aas
and
xchg
xor
and
xchg
xor
mov
xchg
insl
sahf
mov
cmp
pop
pusha
out
dec
sbb
ljmp
pop
xor
push
mov
xor
lods
cli
lret
ja
or
pop
fidivrs
ror
jecxz
xchg
inc
or
cpuid
pop
push
adcl
dec
jae
sub
mov
adc
mov
aas
mov
cmp
in
aam
in
mov
adc
std
sbb
push
sti
sarl
cmp
ss
sti
sub
bound
in
inc
int
xchg
sub
ss
cmpsb
cmpsb
xchg
into
jae
sahf
dec
test
test
xor
aam
incl
jae
xchg
xor
inc
imul
movsb
insl
xchg
mov
leave
test
into
fs
jge
dec
mull
mov
fwait
dec
rorl
movl
dec
xchg
jmp
adc
sbb
xchg
mov
sbb
out
cmpsl
xchg
inc
mov
fwait
icebp
mov
sub
xchg
cmp
push
sbb
cmp
mov
dec
fs
scas
jne
push
or
add
lret
lret
mov
lahf
adc
imul
loop
movsb
inc
test
jbe
je
pop
test
push
and
loop
push
test
gs
pop
mov
ljmp
aaa
out
jno
sub
cld
in
add
xor
decb
mov
out
adc
xor
frstor
pcmpgtw
loope
push
mov
pop
or
adc
mov
xchg
adcb
adc
les
data16
aad
push
pop
dec
jo
frndint
and
inc
rcll
cmp
push
sub
lret
xchg
adc
jno
scas
jno
out
test
adc
cmpsl
jne
lret
test
fcmovu
sbb
push
cs
fwait
mov
or
fcomps
sahf
int3
mov
sti
fnstsw
cmc
add
dec
lock
imul
nop
dec
fstpt
xchg
pop
cmp
repz
les
or
mov
aas
xor
popa
cmpsb
jns
or
xor
add
test
sbb
adc
xor
lahf
push
fs
mov
inc
rcll
js
stos
add
or
decb
adc
dec
jo
outsl
cwtl
scas
cmp
or
xor
movsb
call
mov
inc
xchg
mov
jecxz
fucomi
hlt
fcmovb
adc
int3
jmp
fildll
fdisi(8087
jmp
cmp
data16
addr16
insb
fnstcw
sahf
push
pop
fs
out
mov
inc
mov
push
sub
out
jo
add
loop
fnsave
test
shll
imul
aas
push
push
sbb
jne
jnp
stos
dec
shrb
inc
mov
stos
jns
jmp
shll
lea
push
cli
gs
mov
lahf
lods
xchg
jmp
pop
pushf
mov
pushf
imull
movsb
scas
mov
and
pop
mov
mov
adc
pushf
jo
jbe
stos
repnz
jns
movsl
pop
xchg
xchg
daa
add
sub
fxam
inc
das
and
in
adc
jge
fdivrl
leave
movlps
dec
fs
decb
push
rolb
dec
dec
add
push
xor
or
mov
lret
insb
sbb
cmp
sub
xor
repnz
cmpsl
loope
ljmp
sbb
stc
push
push
nop
out
cltd
mov
xchg
sahf
inc
dec
cmp
cmpsb
das
jnp
jmp
adc
fucompp
out
xlat
pop
or
psubd
xor
adc
pop
sbb
cmp
mov
adc
push
ret
jne
divb
loope
mov
shrb
test
push
fwait
unpcklps
imul
sub
pop
xlat
dec
fimull
mov
outsb
sub
dec
call
sbb
fisubs
add
jnp
hlt
xchg
mov
adc
rcrl
xor
jl
inc
mov
adc
xchg
imulb
and
or
mov
jp
in
xchg
push
std
mov
and
sbb
pop
mov
jns
xchg
jo
adc
adc
iret
cmpsb
push
iret
sbb
xlat
pop
add
stos
loop
fwait
mov
and
push
mov
test
ljmp
imul
dec
jge
mov
adc
ss
jge
jo
mov
dec
jl
sub
ret
ret
sub
aaa
dec
xor
lcall
push
aad
inc
jnp
xor
pop
jnp
inc
mov
inc
jno
je
jno
scas
mov
mov
mov
ljmp
adc
das
mov
pop
imul
movsb
mov
adc
mov
in
inc
jge
aam
sbb
add
dec
add
mov
push
xchg
cmp
mov
insb
fadd
aaa
and
popf
pop
leavew
inc
sbb
call
mov
pop
xor
hlt
loopne
incb
pusha
or
les
dec
mov
push
xchg
push
and
sub
xor
into
jbe
jbe
fmulp
and
scas
cwtl
pushf
flds
lods
gs
xor
jae
push
lahf
ja
lahf
decb
mov
ret
jle
add
dec
loope
scas
loop
das
fmuls
xchg
cmp
mov
sub
sbb
push
fdivl
sbb
add
mov
jecxz
leave
inc
lods
insl
add
cmpsb
sbb
and
fwait
pop
fucomi
push
mov
xor
loopne
pop
push
pushf
mov
ret
xchg
dec
or
cmp
insl
dec
movsb
push
xchg
xchg
jmp
jnp
das
aad
cmp
push
das
int
shll
cmp
icebp
xchg
ja
xlat
stc
jno
sti
mov
and
jno
pop
loop
xchg
xor
sub
bound
cmp
xchg
and
jb
mov
jg
cs
inc
stos
outsl
lcall
fdivrp
test
lret
sbb
jae
sarl
inc
shr
movsb
dec
and
sahf
scas
or
jle
jno
in
test
mov
arpl
or
popf
pop
and
mov
and
cld
fcoml
mov
cltd
push
sub
xor
mov
mov
out
xchg
mov
fwait
sbb
pushf
lahf
xchg
or
inc
pop
mov
fisubl
into
ljmp
repnz
aad
repz
lods
testl
loope
orl
ja
mov
les
pushf
out
and
mov
outsl
cmp
jno
sub
mov
rcr
nop
pop
mov
testl
or
xchg
mov
insb
jle
sarl
jl
inc
outsb
addr16
cmp
repz
popf
cwtl
sbb
test
jmp
iret
lahf
outsb
pusha
call
and
call
or
cmp
mov
cmp
mov
jp
sbb
loopne
pop
xchg
addr16
dec
push
lock
in
orl
or
adc
xchg
sub
add
and
inc
sahf
fcoml
pop
dec
adc
inc
mov
inc
mov
rcr
cmp
adc
dec
lods
or
aaa
fmull
data16
unpckhps
or
aas
jle
xor
data16
andb
das
cwtl
hlt
loope
xchg
int
hlt
add
jmp
or
jo
push
lods
pusha
pop
mov
pop
cmp
fnstenv
rcll
in
out
mov
xchg
inc
xchg
xor
xor
leave
cli
add
pusha
adc
or
cmp
sub
ss
movsb
ds
sub
insb
xchg
fsubrl
cmpsl
push
fs
pop
test
sub
jae
shll
sahf
push
sub
mov
adc
inc
adc
inc
ret
out
push
xchg
outsl
lret
cmp
push
or
jl
adc
or
mov
xchg
repz
cmpsl
pop
pop
into
mov
cmp
into
cmp
jge
loop
pop
pop
fs
and
dec
rolb
movsl
adc
mov
push
pop
mov
les
ret
xor
dec
hlt
inc
adc
xlat
ss
ljmp
movsl
add
scas
adc
mov
cltd
pop
enter
push
ja
scas
mov
lock
je
jno
add
pop
add
xor
jl
mov
push
popf
cld
pushf
add
mov
mov
or
pusha
pusha
scas
pop
inc
mov
mov
addr16
loope
mov
pop
cmp
fimuls
jecxz
unpcklps
mov
scas
test
inc
pop
fdivrl
and
pop
js
ficompl
mov
aad
push
std
mov
and
cmp
jo
mov
add
fistps
cmp
repz
mov
push
out
pop
jg
dec
add
pop
inc
addr16
cmp
mov
enter
xlat
int3
or
push
pop
pop
mov
iret
xchg
in
popa
mov
test
adc
xchg
gs
dec
push
and
sub
or
pop
in
lcall
aaa
push
xor
gs
popf
jle
mov
aas
jb
jge
mov
pop
ret
push
nop
test
js
push
insl
into
mov
jp
pop
xchg
pop
je
test
rcl
fisubs
pop
imul
leave
ret
sub
cld
mov
sbb
mov
dec
push
mov
sbb
lahf
in
retw
inc
adc
sub
xor
pusha
xchg
test
jne
fisttpll
push
pop
jnp
and
out
cld
add
cld
or
sbb
aas
out
or
dec
inc
std
adcb
mov
pop
adc
sbb
fbstp
inc
xlat
push
mov
out
add
in
push
sub
ret
xor
mov
push
xor
sub
lret
jnp
fsubrl
ds
or
mov
xlat
pop
lret
cmp
jecxz
data16
fildl
sbb
fs
and
mov
xchg
xchg
test
cmpsl
sarl
stos
je
inc
sti
test
inc
popf
cmp
xchg
jb
test
jae
mov
pop
out
rcrl
int
dec
fwait
jl
sub
inc
cmc
cltd
fidivrs
mov
xchg
mov
scas
inc
popf
cmc
ja
jmp
ja
sub
xor
jae
mov
pushf
mov
sbb
sbb
out
outsl
int3
pop
inc
rcrb
lods
lahf
push
in
jb
sti
jmp
sbb
outsb
movl
nop
or
cmpsl
xor
or
sub
jle
mov
mov
or
and
in
jo
pushf
ljmp
add
mov
inc
or
add
lock
sahf
jmp
xchg
jmp
add
add
adc
xchg
sbb
jns
out
outsb
out
xor
pop
add
les
mov
or
repz
pop
rcrl
push
aam
test
jae
jecxz
les
test
loopne
sbb
iret
notb
push
sbbl
push
mov
add
fwait
or
in
pop
insl
cmpsl
leave
jo
mov
jb
jmp
xchg
sbb
pop
decl
add
test
sub
mov
cltd
stos
jg
push
test
dec
push
scas
lods
xchg
mov
sbb
out
sti
aas
and
pushf
lods
in
outsb
ja
jns
sbb
mov
or
cmp
rcrb
loope
push
loopne
cmp
testb
pop
mov
cli
mov
arpl
mov
fcoml
cmp
pop
ds
ljmp
mov
cld
or
mov
and
fisttpll
push
adc
in
das
xchg
push
ret
inc
scas
stc
aam
and
imul
jae
jmp
push
lods
sbb
dec
lret
bound
insb
movsl
sub
sub
jb
aaa
cmpsb
sub
repnz
jbe
test
push
xchg
fwait
xor
cltd
mov
xchg
and
xchg
ja
rorb
insb
bound
enter
stos
roll
gs
call
mov
aad
push
xchg
insb
fists
cmp
jg
loope
jp
sbb
pop
push
in
outsb
into
sbb
sahf
sub
scas
iret
adc
loope
fcoml
sar
cmp
mov
aad
ja
aas
outsb
xchg
aaa
sahf
aad
and
repz
adc
xorb
rcrb
cmp
and
push
ret
dec
fcomps
popa
mov
in
jmp
mov
or
imul
repz
ljmp
fnsaves
arpl
bound
xorb
cltd
push
popa
hlt
jecxz
sub
and
or
es
jnp
jne
mov
lods
andl
jl
aaa
jge
imul
dec
subb
dec
or
inc
lock
out
les
pop
pop
sub
idivb
xor
test
or
xorb
test
push
pop
ficompl
das
popf
shlb
out
jns
dec
cmpsl
std
sub
rsm
fiadds
and
repz
and
mov
pushf
push
or
lret
cmc
mov
and
mull
fs
mov
pop
dec
mov
test
das
fiadds
out
ficomps
or
out
insb
xchg
lret
xor
js
push
mov
mov
or
sub
imul
sbb
hlt
daa
loope
stos
lret
iret
sub
aas
loopne
xchg
mov
and
mov
fcompl
inc
jecxz
insl
fcompl
dec
mov
and
and
rorb
loop
sarl
xchg
insb
cmp
jmp
pop
jo
xor
outsb
out
sti
ret
push
je
call
int3
outsl
xchg
xor
in
rorb
lea
stos
push
pop
sbb
loope
dec
fcmovnu
xor
push
leave
dec
push
hlt
ret
dec
int
push
les
xchg
sub
and
xor
icebp
dec
sbb
daa
or
pop
lods
cmpsb
cmc
mov
jl
mov
scas
or
adc
xor
mov
cmc
repnz
or
inc
sbb
sub
or
add
sti
and
hlt
mov
movsb
push
jl
pop
stc
add
mov
adc
xchg
and
sbb
mov
gs
pop
dec
inc
je
mov
dec
pop
jo
dec
push
in
ja
ljmp
sub
dec
lret
mov
pop
or
jecxz
pop
adc
pop
ljmp
lock
aas
add
das
pushf
dec
dec
shrl
jl
jge
cmpl
jl
push
scas
aaa
dec
inc
push
mov
xchg
popl
loopne
xchg
push
outsl
mov
cmpsl
inc
pop
and
repz
or
pop
hlt
and
popa
cmp
adc
std
pop
xor
and
inc
das
hlt
jo
inc
test
jp
leave
orb
and
mov
mov
mov
jg
mov
iret
mov
or
scas
push
mov
rcrb
out
inc
sub
fnstsw
cmp
and
pop
mov
jl
mov
aaa
out
xlat
push
push
pop
jmp
cmp
andl
imull
cmp
cltd
push
jnp
rolb
in
sbb
daa
push
inc
and
jp
mov
mov
and
inc
leave
pushf
jmp
adc
jmp
jmp
std
in
js
std
neg
mov
lcall
xchg
sbb
outsl
push
push
cmp
jno
mov
shr
ljmp
aaa
test
scas
ret
in
cmp
rcl
cmp
mov
rolb
sub
xchg
dec
xchg
aaa
push
clc
mov
xor
incb
daa
sar
mov
adc
jle
mov
hlt
dec
test
gs
xchg
pop
and
in
popf
pop
inc
fwait
lods
daa
loop
add
cmp
stos
jecxz
jne
lret
hlt
das
inc
mov
sahf
fimull
inc
pop
jbe
push
imul
push
sarl
mov
lods
fimull
testl
rol
xor
pop
mov
add
in
jp
loop
or
test
gs
dec
xlat
outsb
jns
clc
ss
pop
out
pop
mov
push
out
aaa
ror
ret
mov
lea
test
enter
mov
nop
cmc
and
movsl
inc
gs
jmp
sub
cld
das
pushl
imul
sub
dec
sub
jno
or
mov
sbb
std
jb,pn
add
lods
mov
push
xchg
jne
push
jnp
push
call
nop
movsl
dec
mov
fcmove
imul
aas
movsl
addr16
pop
call
and
ljmp
aas
popa
push
aad
push
pop
mov
dec
in
mov
xchg
int3
in
sbbb
jp
xlat
sbb
loope
aam
fwait
xchg
ds
xchg
das
add
pop
rdmsr
movsl
lahf
hlt
adc
pmulhuw
nop
mov
dec
push
cltd
dec
es
xchg
loop
std
and
jl
push
flds
pop
jmp
sahf
outsl
cmc
xchg
test
mov
aad
and
pop
inc
getsec
mov
outsb
loopne
or
std
imul
lds
sbbb
mov
movsl
jmp
test
sbb
mov
push
cmp
sub
sbb
add
andl
stos
mov
inc
mov
sub
push
pop
sub
test
push
sub
lcall
xchg
jae
add
dec
dec
dec
xchg
sub
and
jb
dec
mov
cmp
call
inc
add
mov
dec
cld
mov
dec
lods
mov
add
ja
hlt
ds
insb
cs
fwait
test
mov
aad
inc
mov
fildll
xor
gs
xchg
sub
clc
fwait
and
gs
pop
pusha
xor
jle
aam
cltd
jns
into
push
mov
or
mov
ret
lcall
dec
mov
adc
mov
fbstp
xchg
insl
hlt
movsb
mov
call
icebp
jge
test
loope
mov
aaa
push
push
adc
iret
in
pop
mov
mov
cwtl
mov
cmc
fldl
out
jmp
lret
jmp
out
dec
pop
or
jb
cli
push
cmp
sub
push
cltd
cmpsl
inc
sbb
pusha
jbe
iret
test
inc
push
or
test
fildll
negl
adc
xchg
call
mov
and
mov
cli
push
test
bound
sbb
jg
in
sti
and
icebp
add
mov
cltd
add
ret
push
subl
js
mov
mov
sti
add
xchg
cltd
and
add
je
cwtl
sti
mov
push
push
xor
xchg
mov
xchg
xlat
cltd
mov
xor
sub
dec
fists
or
pop
xor
inc
into
ss
ret
mov
mov
adc
sbb
pushf
xchg
imul
movl
ret
mov
sbb
sbb
ljmp
mov
lea
mov
hlt
fucom
sti
out
mov
imul
xchg
pop
cmpsl
jg
popf
out
rorb
pop
jmp
cld
and
inc
sarb
xchg
imul
and
test
dec
xchg
or
adc
lea
sbb
xchg
and
jae
loopne
icebp
enter
ficomps
repz
cltd
mov
inc
mov
add
xor
inc
fisubrs
push
pop
imul
xor
and
adc
dec
mov
cmpsl
and
sub
in
and
outsl
js
cmpsb
popa
out
jno
push
bound
mov
out
mov
xor
xchg
ds
lods
popl
mov
mov
orl
dec
xchg
inc
scas
jnp
or
fdivl
sub
or
adc
pop
leave
inc
test
aad
sub
dec
ffree
xchg
mov
movsl
cmpsb
test
and
sarb
pop
es
fwait
loopne
lcall
and
add
movsl
in
icebp
push
push
out
pop
cltd
sub
pushl
roll
jbe,pn
hlt
dec
sbb
popa
clc
imul
scas
xchg
mov
mov
sub
pop
sub
dec
mov
mov
rcrb
cwtl
add
fsubrs
jne
mov
jb
cmpl
fsubl
aam
push
in
xchg
inc
cmc
push
fucom
push
push
pop
repnz
sub
inc
cmc
push
ds
shll
arpl
dec
mov
jno
mov
push
and
sub
adc
fbstp
pop
nop
mov
scas
cmp
lods
jb
sub
inc
out
test
xor
jb
out
rcl
pinsrw
push
jmp
pop
orl
push
mov
xchg
add
ror
and
cli
ja
pop
ljmp
out
inc
inc
arpl
shl
mov
pop
xlat
sbb
push
pop
mov
jne
outsb
and
jge
mov
repnz
clc
mov
or
test
xchg
xor
lahf
fdivl
shrl
cmp
lods
mov
xor
mov
push
rcrl
cmp
les
imul
pop
jb
lret
shlb
mov
int
adc
mov
sbb
xor
movsl
jns
pop
out
fwait
loopne
add
xor
inc
cmp
int3
fwait
pop
mov
cmpsb
sbb
dec
push
sub
jne
shll
cmp
and
xor
xor
inc
adc
int3
popa
inc
xchg
leave
outsl
cs
out
xor
jno
daa
pop
mov
lds
movsb
jnp
mulb
lds
xchg
subl
and
test
or
aam
mov
dec
sub
in
popa
mov
xchg
pop
ret
xchg
pop
mov
jno
pop
push
pop
mov
inc
outsb
sbb
loopne
pop
jae
out
jno
mov
or
cmp
cmpsl
pop
bound
mov
aaa
loope
xchg
loop
daa
xchg
push
orl
fildl
adc
leave
scas
je
enter
push
in
jae
pop
jmp
inc
pop
clc
in
jecxz
outsb
sti
imul
cmp
dec
pop
stos
in
lret
nop
cmp
jle
pop
push
lret
clc
pop
sahf
pop
jecxz
sti
ljmp
inc
roll
clc
pop
jo
ss
and
test
dec
bound
inc
jnp
int3
xor
mov
jge
rcrl
fsin
pushf
stc
popa
inc
iret
mov
or
adc
dec
or
sbb
inc
push
movsb
xchg
lods
cli
in
inc
cs
in
cmpsb
xchg
adc
xchg
push
push
xchg
mov
mull
ficoms
scas
or
fwait
clc
jno
sub
pop
lods
sub
outsb
ja
push
mull
xchg
xchg
mov
pusha
xor
cmp
call
sbb
xchg
xor
in
fwait
aad
fisttps
dec
inc
or
cs
lret
pop
popa
sti
movsb
loop
sahf
lock
cld
mov
dec
sub
add
xchg
jns
pop
jmp
outsl
pusha
cli
lods
sar
cmp
jg
stos
sbb
lods
or
lds
dec
adcb
and
xchg
out
push
mov
incb
pop
dec
in
mov
incb
pop
loop
push
mov
add
pop
sahf
and
sahf
mov
ret
roll
xchg
pop
mov
test
scas
mov
das
cmpsl
test
inc
lods
xchg
xor
leave
and
vpxor
mov
cmp
popf
mov
mov
or
inc
lret
fcomps
dec
cmc
cmp
out
scas
test
lods
mov
inc
das
sbb
jns
sarb
ret
ljmp
adc
repnz
jo
pop
dec
lcall
inc
test
icebp
push
inc
int
je
dec
iret
mov
pop
in
fmull
cmp
xorb
jl
pop
rep
cmp
enter
outsb
and
inc
mov
pop
orl
fiadds
shlb
scas
sub
cmp
cwtl
jecxz
aas
rcr
add
jl
cmc
out
sbb
out
in
jne
stos
mov
adcl
scas
push
pusha
lcall
rolb
xor
dec
mov
lret
inc
in
ds
cmpl
lock
push
int
pop
cmp
inc
lods
sub
sub
xor
dec
das
pop
sub
lcall
repnz
lret
sbbb
aas
popf
lret
fldcw
adc
gs
pop
daa
sar
pop
adc
push
fstps
and
cmpsl
shl
xor
jne
ret
mov
inc
jg
mov
in
scas
push
shlb
jns
sbb
adc
push
iret
ljmp
sub
lahf
sub
mov
mov
jno
cmc
gs
roll
pop
jne
in
cltd
dec
xchg
in
adcb
push
xchg
out
pusha
add
xor
pop
cmp
add
sub
in
call
int3
aam
lret
repnz
mov
repz
mov
xchg
jmp
sti
pop
mov
es
ret
mov
in
push
jns
je
xor
adcl
popa
sub
and
mov
hlt
insb
sbb
icebp
add
xchg
icebp
adc
or
mov
mov
pusha
in
adc
xor
movsb
sti
sarb
test
jbe
icebp
clc
pmaxub
js
movb
pop
int
je
pusha
fwait
addr16
cwtl
adc
add
mov
pop
lret
fwait
rol
loope
push
in
icebp
mov
jge
xbegin
inc
ret
lds
xchg
in
xlat
inc
je
in
or
mov
stos
xchg
in
mov
mov
ljmp
repz
jns
decl
add
xor
scas
movsb
mov
call
bound
inc
loope
clc
scas
iret
scas
cmp
roll
push
stc
bound
adc
mov
mov
or
test
and
jecxz
in
mov
pushf
fbstp
rol
or
cmp
fwait
xor
jmp
sub
jo
int
adc
ja
outsl
cs
call
or
imul
or
fwait
das
add
fwait
sbb
mov
insb
sbb
jbe
rcrb
bound
shlb
hlt
or
mov
mov
mov
jne
jbe
add
pop
lcall
shrb
outsb
inc
push
mov
mov
insb
out
mov
xor
xor
aad
and
sbbl
loope
add
data16
dec
sbb
adc
xor
insl
mov
push
cmc
cmp
insl
pop
popa
lret
inc
mov
negb
sbb
push
ret
pop
lods
cmpsl
rep
insb
mov
aaa
je
add
iret
test
mov
mov
aaa
add
enter
add
sub
sbb
ss
movsl
cmp
xor
mov
mov
lret
fwait
ret
mov
les
dec
add
adc
jle
sti
jmp
jne
and
fdivrs
jo
jo
in
aad
sbb
cmp
inc
pop
lea
and
jo
pop
jl
int
out
les
gs
pop
aaa
dec
loop
out
adc
movsl
xor
jbe
aas
cmp
cltd
mov
repnz
xor
xchg
ja
fldenv
stos
test
shlb
mov
or
mov
inc
cmpb
movsl
or
mov
mov
lcall
incl
adc
pop
jl
mov
and
mov
imul
lret
inc
push
push
insl
lret
sbb
jecxz
adc
cld
cld
aaa
std
dec
mov
sub
inc
xlat
mov
loop
hlt
out
test
movsl
or
and
stos
cmp
dec
pop
lock
fwait
notl
fcmovb
ja
int3
sub
leave
add
xchg
add
ja
mov
es
or
loop
arpl
jnp
andb
sbb
pop
push
add
pop
fcmovu
int3
inc
xchg
jmp
mov
xchg
xchg
sbb
pop
cmpsl
aas
pop
arpl
repz
add
cmpsl
fisubs
mov
mov
shll
push
imull
sbb
push
sbb
js
aaa
sbb
cmp
aad
nop
fucomi
fidivrl
into
jmp
jg
xchg
js
xchg
vmovhps
stos
test
sbb
out
stos
inc
mov
gs
pop
push
xor
xor
pop
out
dec
iret
ret
pop
mov
or
mov
lds
push
data16
iret
jo
push
xor
insb
out
push
in
jp
stos
xor
pop
xchg
add
mov
mov
mov
popf
popa
mov
je
sub
cli
jecxz
stos
cmp
mov
subb
jle
jb
add
dec
orl
hlt
sbb
fwait
mov
int3
sbb
loopne
sbb
dec
mov
xchg
or
push
inc
or
nop
enter
inc
cmp
jae
mov
stos
and
push
xchg
or
inc
sbb
mov
test
repnz
in
sub
sti
push
ljmp
lcall
pop
mulb
or
mov
sub
jecxz
fcomps
pop
test
jne
jge
add
outsl
movsl
popa
lcall
inc
adc
test
scas
addb
es
ret
cwtl
cltd
outsb
testb
lods
jmp
int
jns
sahf
push
loope
jno
gs
xchg
in
xor
popf
xlat
sbb
jbe
xor
push
aaa
into
jne
imul
lcall
in
jbe
or
mov
or
in
jecxz
ds
mov
test
adc
mov
jns
dec
mov
pop
sbbl
shrb
jecxz
fldt
sub
rclb
cld
xchg
jae
jmp
pop
xor
cltd
push
pop
cld
inc
int
daa
cmp
cwtl
cmp
repz
out
ds
push
out
cmp
aas
imul
pop
or
adc
std
inc
sub
or
outsl
pop
mov
inc
fidivl
pop
ficomps
lret
sub
push
fcomp
jecxz
adc
movsb
mov
cwtl
fdivrs
push
jne
gs
or
xchg
mov
call
inc
mov
jo
inc
arpl
dec
pop
xor
insb
mov
lcall
popa
cmp
jecxz
or
and
fdiv
pusha
shll
mov
cli
mov
sahf
xchg
gs
loope
ja
inc
stos
sbb
loope
add
mov
inc
aad
xchg
dec
xchg
fldl
daa
cmp
jg
mov
mov
lahf
jmp
push
mov
push
mov
stc
xor
push
jecxz
aaa
cmpsb
cmp
mov
cmp
mov
push
pop
or
rcll
dec
mov
push
pop
xchg
xor
cmpsb
dec
ljmp
xorl
bound
mov
repz
xchg
jns
cmp
aaa
aad
in
mov
iret
xor
sarb
sbb
cmpxchg
addb
or
sub
pop
pushf
add
pop
lahf
mov
repnz
mov
in
fwait
xor
insl
loope
icebp
shr
dec
mov
ds
add
adc
es
mov
out
cmp
push
fisttpll
cli
ja
pop
inc
dec
call
bnd
mov
jae
loop
adc
insl
mov
mov
loope
cmp
ds
popa
int3
dec
mov
xor
imul
sahf
int3
call
xchg
and
hlt
ret
sub
and
out
repnz
or
loop
add
mov
xorl
pop
or
rcrl
xchg
mov
pop
add
adc
jp
into
xchg
mov
adc
aas
pop
cmp
arpl
gs
xor
push
rol
jp
cmp
iret
mov
loope
push
and
and
dec
push
into
cmp
ss
cmp
stos
aad
loop
push
cmc
xlat
and
xor
imul
ss
fninit
cmpsl
lock
mov
jne
in
lret
arpl
jbe
lret
mov
les
adc
pop
adc
and
push
cmpsb
icebp
cmc
sub
pushf
and
repnz
adc
fnstenv
lods
xchg
xchg
loopne
jno
imull
stos
fld
jns
popa
sbb
push
int3
in
sbb
mov
jns
jbe
popf
dec
push
ret
sub
or
icebp
leave
sahf
add
pop
inc
rorl
push
shll
movsl
or
subl
xchg
repz
add
filds
fcmovnb
mov
jno
inc
incb
dec
jmp
shr
scas
in
or
mov
pop
mov
xchg
add
aas
xor
scas
and
xor
jp
mov
adc
shlb
sbb
and
aaa
pushf
fs
out
ror
int3
fistpll
loope
in
cs
adc
ficomps
lea
mov
jmp
shrb
movsb
pop
sbb
add
adc
sbb
arpl
ret
push
and
repnz
out
test
inc
orb
mov
cmpsb
sarl
outsl
mov
mov
ja
sbb
cld
xchg
out
movsb
sub
dec
insl
insl
or
pop
sub
pop
and
push
int
dec
in
mov
rcl
testb
lret
dec
imul
mov
hlt
jnp
add
adc
stos
jnp
cli
repz
cmp
mov
scas
or
lcall
adc
adcl
sti
mov
jno
xor
popf
cltd
dec
std
mov
or
mov
jnp
and
into
push
aad
jl
pusha
repnz
pop
pop
mov
sti
or
jl
inc
jg
std
test
out
sahf
test
ss
aam
xchg
jnp
jl
pop
das
lods
jno
insb
mov
mov
cli
in
mov
pop
test
mov
les
int
lea
fistpll
pop
lret
mov
test
shrb
adc
add
daa
imul
adc
or
adc
mov
jno
js
repnz
adc
fisubrs
sar
imul
add
cs
dec
outsl
in
fcoml
adc
mov
xor
stos
cmp
mov
stc
xor
pushf
sbb
inc
fisubs
out
push
jge
xor
xchg
cs
shrb
cli
lods
aam
inc
icebp
and
insb
nop
xchg
ljmp
je
test
xchg
scas
mov
sub
pop
outsb
jmp
xor
in
cmp
pop
call
push
mov
int3
lahf
jg
inc
cli
pop
icebp
mov
lahf
xor
or
aad
cwtl
push
test
je
repz
fbstp
jmp
loope
fs
cmp
mov
popf
cmp
sar
imul
popl
stc
sbbb
roll
xor
jno
cmp
in
fstpl
cmpsb
aaa
daa
repz
lods
sti
sti
mov
xchg
fbld
dec
pop
addl
mov
scas
popf
fst
pushf
ds
in
adc
ds
dec
or
pop
sbb
fadds
jmp
or
std
cmp
in
jecxz
aad
cwtl
pop
ljmp
cld
mov
adc
stos
imul
jg
jg
mov
lcall
aaa
nop
cwtl
mov
mov
and
lock
jge
test
jle
lret
mov
aaa
std
fldt
scas
ror
xlat
push
jns
pop
inc
cwtl
sahf
xlat
fldt
daa
fwait
es
aaa
ljmp
dec
pop
sbb
fnstcw
gs
cmp
leave
push
out
jns
mov
push
xchg
movsl
inc
incl
xor
mov
or
pop
ds
aas
mov
and
addr16
jae
daa
mov
pop
sbb
pop
jecxz
pop
lea
dec
jae
jne
push
push
pushf
repz
inc
rolb
rclb
fstl
shlb
mov
xchg
sti
jecxz
lcall
push
adc
mov
push
sub
push
mov
push
sti
stos
xchg
pop
insb
and
movsl
xchg
not
pop
pop
fnstenv
insb
mov
iret
xor
dec
add
lock
mov
in
out
or
mov
ljmp
mov
out
push
cmp
xor
mov
jecxz
push
out
jbe
jecxz
sbb
test
xor
mov
pop
jnp
xor
inc
repz
fcmove
and
std
cmpb
mov
mov
fs
dec
xchg
addr16
ret
push
out
cmp
popl
push
cld
aaa
andl
jg
add
test
inc
jno
cmp
rorl
or
mov
and
pop
sub
mov
xor
cmp
mov
icebp
xor
cmp
mov
mov
push
mov
dec
dec
xor
lcall
imul
push
pop
pop
sbb
mov
ds
xor
add
xchg
sbb
sahf
pushf
push
mov
cs
dec
scas
getsec
test
sub
test
pop
jb
sahf
in
or
mov
jl
cli
std
inc
addb
dec
inc
sub
fdivs
jbe
into
and
aaa
inc
xchg
sbb
repz
jecxz
add
xor
test
cmc
push
cwtl
pop
pop
lds
scas
mov
xor
pop
pusha
test
dec
sarl
aad
es
into
jns
inc
mov
pop
add
add
sub
out
mov
clc
dec
jo
push
mov
data16
sub
mov
lea
xchg
sbb
enter
pop
jl
xor
cmc
in
cmp
lcall
cli
scas
mov
dec
inc
sbb
adc
addr16
xlat
adc
fstl
mov
cmpl
fcoms
jno
fcmovu
mov
ds
stos
mov
and
jno
in
mov
pusha
mov
and
mov
xchg
xor
sbb
stos
jne
xor
test
rcll
and
mov
das
xchg
adc
mov
jne,pt
sbb
aad
jmp
cli
mov
inc
shlb
inc
std
adc
clc
and
jne
stc
loope
divl
stc
stos
dec
push
xor
lods
sbb
scas
mov
leavew
jp
rcll
xor
pop
cmp
or
js
into
jecxz
pop
sub
push
movsl
outsb
shl
imul
cmp
ds
faddl
fnsave
mov
and
mov
adc
roll
in
jp
mov
jle
sbb
fcmovb
roll
pop
out
add
clc
les
cwtl
mov
ret
lea
pop
cmp
stos
shrl
adc
cmp
pop
add
mov
test
clc
imul
imul
out
test
xchg
jnp
movntq
gs
clc
test
cmp
mov
xor
mov
inc
inc
arpl
push
je
add
popa
mov
mov
call
inc
jne
and
lahf
adcl
mov
inc
sti
outsb
push
arpl
xchg
xchg
add
fdivrl
add
ret
push
ljmp
and
mov
jg
leave
jae
sbb
fs
mov
or
mov
inc
jnp
mov
push
out
xor
dec
rcrl
dec
insl
cmp
jmp
scas
sbb
out
push
adc
addr16
push
push
int3
jb
mov
pop
jnp
mov
xchg
xchg
xchg
scas
loop
aam
pop
or
or
rcrl
ret
imul
or
adc
mov
lds
lods
dec
ja
sbb
imul
loope
repz
xchg
nop
adc
into
inc
mov
inc
mov
jns
popf
inc
out
xchg
sub
enter
filds
out
dec
clc
stos
outsb
in
in
xor
pop
sub
xor
mov
dec
dec
je
sub
roll
mov
ljmp
stos
mov
cwtl
outsb
in
pop
push
inc
ret
push
dec
mov
push
loop
add
ds
dec
xor
sub
push
push
add
and
inc
and
orb
sub
andl
mov
imul
ret
shrb
lret
lret
sub
rcr
mov
fsubp
aaa
lods
bound
jle
dec
and
popf
cmpsl
cmp
lods
fidivrl
out
push
mov
lret
jns
in
mov
mov
sbb
mov
inc
mov
scas
push
lock
lret
push
inc
fwait
adc
lret
jge
lret
std
sbb
ss
icebp
insb
inc
out
sbb
fdivr
in
jo
xchg
jge
add
mov
addr16
dec
ss
nop
xchg
les
fnstenv
push
cmp
insl
or
icebp
imul
pop
stos
pop
xor
and
sub
mov
test
jae
int3
js
popa
wbinvd
loopne
aaa
inc
outsb
out
xor
test
and
fsts
mov
dec
push
xchg
imul
sbb
pop
sub
cmp
test
test
fcoms
rcll
jl
daa
scas
cmp
pusha
ret
add
jno
enter
dec
ja
cmp
leave
inc
mov
cmovb
xchg
cmp
pusha
pop
inc
jns
inc
sbb
ja
call
push
mov
cmpsb
enter
mov
insb
jne
dec
xor
xchg
xor
in
mov
cmp
lret
adc
inc
aam
aam
aam
pop
cmp
iret
shlb
add
pop
movsb
jnp
stos
mov
push
mov
outsl
push
fisubrl
mov
mov
out
imul
dec
lods
jne
or
or
mov
lret
and
cld
loope
push
jg,pt
lods
push
mov
fsub
sub
jl
jle
test
sub
jno
ss
lret
mov
movsl
xlat
das
sahf
std
icebp
in
xor
cmp
int3
or
xor
mov
push
jne
adc
cmpsb
ret
inc
addr16
inc
adc
shll
sbbb
xorl
xchg
fwait
mov
cld
dec
adc
insl
aad
mov
in
std
sti
loop
aad
mov
mov
add
dec
out
sbb
add
jecxz
rorl
push
ficomps
mov
sbb
enter
cmp
sub
stos
push
out
xlat
push
mov
and
mov
inc
clc
das
and
pop
cwtl
jnp
mov
push
adc
out
mov
push
push
or
icebp
mov
subl
mov
clc
sbb
mov
shlb
sub
and
mov
nop
ss
xor
stos
fwait
xchg
pusha
mov
mov
pop
adcb
inc
inc
pushf
enter
sbb
repz
je
sub
mov
mov
addr16
daa
or
push
jle
jp
cmp
push
push
xchg
push
out
in
push
shll
inc
jns
daa
mov
and
push
pop
inc
mov
add
jno
push
mov
push
mov
push
push
jle
dec
mov
and
mov
fmul
xchg
xor
fcoml
push
or
xor
push
hlt
iret
xor
popa
in
scas
xchg
ret
mov
stc
pop
rep
xchg
mov
pop
lahf
ljmp
test
adc
and
cltd
adc
mov
xor
sbb
jle
cli
pop
lret
cld
sbb
scas
xor
pop
mov
mov
pop
cmpsb
xor
jb
mov
in
or
push
xchg
xchg
cld
call
mov
mov
xchg
and
movsb
ljmp
mov
sub
add
out
push
fs
or
fdiv
outsb
xor
test
movsl
imulb
out
pushf
scas
loope
jo
mov
jnp
nop
xchg
or
xchg
inc
xchg
rcr
pop
mov
ss
pop
push
xlat
sbb
cmp
jb
imul
lret
mov
into
sbb
test
aaa
inc
push
pop
adc
mov
dec
je
xchg
in
ret
rcl
inc
add
mov
in
mov
stos
mov
pop
jnp
lret
in
pop
and
dec
mov
andb
cli
sub
push
shll
pop
test
mov
pop
out
rorl
ss
out
jbe
cwtl
int
out
inc
or
inc
scas
xlat
testb
mov
inc
ret
das
pop
sbb
inc
push
dec
mov
and
testb
push
adc
mov
enter
lock
pusha
mov
pusha
std
xorl
outsb
xor
clc
std
cltd
mov
add
xchg
pop
fnsave
sub
and
xor
cmp
movsb
add
in
inc
sub
sbb
ja
out
push
fucomi
push
enter
nop
pop
and
repnz
jp
gs
pop
clc
adc
int3
fcmove
inc
test
adc
mov
mov
jl
push
pop
and
jmp
ja
xchg
sahf
arpl
ret
jae
dec
int3
fidivrs
test
addr16
pop
inc
inc
add
ret
mov
lods
into
ja
jne
adc
push
sti
dec
mov
addr16
insb
sbb
pop
ds
in
lahf
lock
lock
outsl
adc
sub
ror
aam
jns
mov
pushf
inc
fiadds
data16
mov
cwtl
movsb
and
adc
enter
cli
adc
jno
push
jg
jnp
movsl
sti
add
push
das
js
cmpsb
pop
shll
mov
jp
adc
cmc
es
adcb
mov
jns
pop
sbb
jbe
or
inc
jmp
inc
insb
cmp
pop
mov
idivl
aam
fcoms
jecxz
nop
sbb
xchg
add
std
inc
in
dec
xchg
xchg
push
fildll
inc
fwait
aam
push
into
loop
std
sbb
rcll
fimuls
xor
xchg
insl
stos
mov
sahf
sbb
out
inc
inc
js
sub
loope,pn
xchg
das
les
mov
in
xchg
cli
mov
xchg
imul
les
xchg
jmp
adc
lods
xor
sbb
insb
rclb
mov
xor
test
push
lret
push
test
xor
and
push
add
lock
outsl
cs
or
dec
lods
js
mov
shll
and
sub
push
lods
ljmp
cmp
sbb
mov
inc
inc
sti
jne
pop
faddl
lret
scas
out
lret
mov
lret
jne
aad
push
inc
dec
loop
subb
mov
sub
aad
js
push
pop
mov
mov
outsb
dec
adc
ffree
dec
bound
mov
sbb
enter
stos
jno
cmc
xchg
push
dec
inc
daa
test
pop
movsb
dec
inc
sbb
subb
inc
ja
adc
push
pop
imul
fwait
add
insb
pop
sub
popf
push
daa
fwait
cwtl
mov
rol
movsl
shll
push
add
lahf
into
cwtl
shl
xchg
ret
add
scas
jmp
std
imul
arpl
push
push
ret
add
dec
or
mov
cmc
in
cmp
or
roll
cmp
test
adc
imul
mov
icebp
je
fs
xor
inc
mov
insb
loopne
dec
es
repz
push
pop
into
push
xor
mov
fsubl
push
sbb
aas
out
lods
push
mov
pop
popa
pop
mov
xor
pop
adc
pop
and
hlt
int3
xchg
jp
cmp
mov
add
test
ret
sub
mov
repnz
cs
dec
daa
inc
mov
aas
pop
je
loopne
shl
push
pop
mov
or
cmp
pop
jbe
mov
xchg
cli
inc
outsl
push
outsb
xchg
sbb
adc
adcb
fcomi
pop
stos
dec
lods
push
movsb
sub
addr16
inc
dec
mov
pushf
and
fsubl
loop
cmp
or
pusha
mov
ret
adc
mov
hlt
scas
pop
pushf
scas
in
adc
mov
cmpsl
imul
mov
mov
lret
jnp
fwait
or
orb
or
fcmovnb
movsl
les
xor
shrb
sub
push
das
mov
mov
push
jns
pop
xor
push
mov
jmp
call
mov
mov
jo
fdecstp
inc
out
subb
xchg
ljmp
jmp
pop
pop
sub
mov
push
and
loopne
hlt
jae
mov
rol
gs
mov
cmpsl
into
icebp
or
add
pop
pop
xlat
cltd
ret
pop
inc
inc
mov
popf
mov
lcall
fimull
cmp
lret
xchg
shll
dec
movsb
mov
pop
iret
mov
xchg
jle
iret
push
arpl
shl
hlt
add
sahf
cmp
roll
rcrb
and
mov
test
jmp
xchg
xchg
xchg
adc
pop
popa
cli
out
fisubs
xor
mov
mov
dec
out
arpl
sarl
loopne
popf
ret
out
mov
rcrb
push
and
jb
insb
xchg
loop
and
xlat
dec
sub
aaa
or
data16
lahf
push
sub
jbe
imulb
ror
outsb
sub
bound
lods
sahf
stos
cltd
cmp
ret
cmp
xlat
xchg
leave
ret
mov
jb
rclb
mov
decl
sub
and
push
jbe
sbb
in
lcall
jb
mov
mov
jo
gs
add
inc
cmpl
mov
push
sub
jl
pop
jne
imull
test
test
xchg
daa
xlat
inc
pop
mov
xor
out
push
adc
iret
xchg
insl
ja
js
sbbb
mov
push
movsl
xchg
inc
cmp
lea
cmpsl
push
fstl
jmp
dec
mov
xchg
int3
xchg
mov
adc
int
xchg
insl
pop
add
fidivl
and
mov
pop
push
fdiv
push
lcall
cmp
sbb
push
xchg
adc
rolb
lret
cltd
jae
dec
loop
add
lea
mov
lods
mov
sub
ss
xor
aad
xchg
lock
xchg
pop
out
mov
or
dec
fists
das
inc
out
shrb
movsl
pop
jae
movsl
dec
inc
cmp
cmp
xlat
mov
pushf
enter
and
add
dec
push
jp
iret
push
cmpsl
fs
ret
adc
jae
dec
fs
into
sub
int3
push
add
push
roll
iret
insl
fadd
cs
xor
cmp
dec
mov
or
xor
loopne
and
test
push
out
xor
aam
ss
in
outsl
aaa
imul
sub
mov
enter
jno
xchg
ror
test
test
je
lock
fsubrp
std
jg
ret
mov
or
fisttps
popl
mov
imull
mov
xor
test
xchg
push
stos
mov
mov
pop
repnz
push
hlt
inc
dec
fsts
jbe
sub
sub
dec
dec
into
inc
enter
sbb
stos
mov
pop
repnz
cs
arpl
mov
xchg
mov
jg
push
dec
ret
dec
je
sbb
subb
and
rorb
repnz
shll
mov
sub
insb
cli
mov
jmp
loope
mov
pop
mov
dec
adc
push
adc
push
stc
or
fadds
movsb
shrb
sbb
xchg
loopne
sbb
and
sbb
mov
and
lcall
cmpsb
test
out
push
leave
mov
lret
push
std
pop
adc
lods
dec
mov
loopne
sahf
xchg
add
jg
int3
pusha
push
sbb
int
test
scas
ret
cmp
scas
lret
sbb
sar
and
inc
adc
pop
test
test
sub
mov
outsb
cmpb
mov
pop
add
mov
sbb
xchg
cmp
sbb
pop
or
sub
sub
clc
sub
std
cmp
in
cs
loop
jecxz
lcall
fnsave
mov
adc
js
pushf
pop
popf
xor
sub
lods
mov
test
push
adc
dec
mov
pop
aad
sbb
mov
wbinvd
mov
in
cmp
fld
add
mov
and
jns
sub
adc
lds
aad
sti
leave
lahf
push
lea
popf
lret
aam
inc
repz
adc
ds
inc
mov
cmpsl
mov
aad
sub
add
xchg
pop
in
push
sub
and
xchg
out
and
mov
add
add
mov
ret
ret
lret
inc
loop
adc
and
mov
jb
cltd
daa
add
insb
push
bound
xor
test
roll
or
sbb
fmulp
inc
sbb
rclb
lods
sbbb
in
mov
ret
std
mov
std
adc
mov
pusha
clc
test
ja
aaa
loope
sub
repnz
push
outsb
xchg
pop
enter
mov
push
shl
into
jns
es
stc
call
sahf
xchg
push
in
out
insb
inc
and
rcll
mov
aas
dec
jg
mov
sub
ljmp
lret
lds
movsb
int
rorl
push
arpl
adc
push
push
loope
xchg
scas
clc
lcall
insl
add
sub
cwtl
cmp
sbb
out
loopne
aam
mov
and
popf
mov
jo
mov
fsubl
jp
inc
dec
sub
sbbb
dec
inc
imul
inc
fdivl
xchg
push
jge
fcoms
cmp
aad
xchg
stos
std
or
lock
push
cmp
fnstsw
dec
pmaxub
mov
andps
jbe
out
jnp
imulb
dec
mov
xchg
and
test
in
push
lcall
fsubrp
das
sbb
dec
mov
ss
xor
jl
dec
add
sbb
and
rcll
mov
rcrb
ss
sbbl
aaa
jne
pop
ljmp
call
push
ret
xchg
stos
int3
xchg
lcall
cwtl
jb
out
pop
or
mov
cmp
push
subb
push
mov
sub
jle
lret
mov
pusha
mov
js
adc
mov
dec
dec
hlt
or
push
icebp
jns
mov
int3
sbb
inc
adc
mulb
xor
cmp
lods
add
ja
popf
cmp
cwtl
fnstsw
hlt
addr16
push
mov
sbbb
xchg
mov
insb
and
dec
aad
push
imul
int
fisubs
out
js
cmp
add
lcall
lods
gs
add
xchg
aad
pushf
loopne
fwait
xchg
or
add
xor
in
mov
xchg
adc
shrb
mov
cmp
fwait
inc
movsl
pop
loop
cmp
in
cli
popf
xorl
fldt
xor
jae
dec
xchg
dec
sahf
movsl
mov
and
jb
aaa
add
lea
mov
adc
mov
mov
sbb
push
roll
mov
lret
sbb
add
fisttpll
xlat
das
movsl
mov
push
jl
stos
dec
sub
cmp
adc
xchg
mov
inc
inc
movsl
push
outsl
std
sbbb
test
js
cli
out
sbb
add
fwait
jno
xor
inc
xchg
sub
cli
pop
jae
xchg
mov
or
sbb
cmp
pushf
movsb
add
in
pusha
add
mov
adc
push
xchg
jb
mov
mov
stos
jle
sub
mov
loopne
xchg
data16
sahf
and
cmp
push
mov
inc
lcall
icebp
sub
lds
sbb
repz
mov
and
fcoms
pop
adc
xor
insl
test
dec
sub
pop
jo
in
or
jp
push
adc
pop
or
fucom
cmp
sub
adc
js
sub
js
mov
frstor
divl
iret
cmpb
sub
push
cmc
clc
lods
fs
je
aaa
adc
and
pop
inc
sub
call
cwtl
cmp
fcmovne
xchg
mov
inc
mov
insb
fistpl
fldl
hlt
ja
jbe
lods
sub
sbb
ficompl
scas
aad
jp
adc
xchg
xlat
sub
adc
adcl
xor
repz
icebp
mov
jl
cmp
aad
das
pop
stos
jmp
cltd
jne
sti
movsl
mov
cmpsb
imul
fidivrs
jne
test
mov
in
xchg
in
lea
cmp
into
test
sub
add
adc
add
inc
faddl
dec
stc
jl
repz
das
testl
add
push
divl
cltd
mov
mov
out
mov
xor
out
imulb
add
jl
sub
or
jb
sarb
nop
out
dec
add
jo
std
into
inc
sarb
pop
jp
xchg
repz
adc
jp
stc
adc
inc
xchg
inc
adc
enter
pop
repz
enter
movsl
push
mov
fucomip
fcmovb
or
adc
gs
and
insl
push
inc
repnz
xchg
enter
pop
ret
data16
jo
mov
adc
ja
cmp
dec
jne
mov
insb
out
clc
pop
ljmp
aas
pop
jb
call
or
cmp
and
ret
roll
push
inc
cmp
mov
xor
jne
imul
sti
repz
addr16
rcll
cmpsb
repz
lods
jnp
add
mov
sub
or
or
shll
sub
daa
daa
in
shrb
test
xchg
push
adc
lock
mov
or
outsl
inc
ret
push
dec
sub
pusha
std
scas
sahf
loop
xor
outsl
dec
mov
sbb
out
in
cwtl
stos
inc
cmp
sbb
or
xchg
in
or
xor
xor
xor
mov
fisttps
mov
and
lds
xlat
sbb
cli
mov
push
mov
sbb
xlat
aas
inc
mov
arpl
leave
out
push
pop
inc
bnd
sar
gs
jg
push
imul
mov
std
fcomi
icebp
ss
cmp
je
mov
stos
shl
and
push
push
cmpsb
jmp
shlb
sub
cmp
jnp
mov
dec
dec
lods
sahf
addl
icebp
jbe
in
lret
call
inc
push
xchg
ret
jle
iret
inc
jge
add
lods
outsb
adc
jg
cmp
shlb
push
cmp
dec
dec
jno
fisubl
into
adc
pop
arpl
jmp
loop
shl
call
insb
xchg
cmp
shl
dec
jecxz
xchg
mov
pusha
push
add
roll
out
loope
mov
mov
sub
stc
xor
popf
in
push
loope
mov
pushf
mov
hlt
and
movsb
movsb
movsb
or
jp
imul
cmp
test
lahf
fwait
xchg
xlat
or
dec
jns
mov
jmp
pop
inc
cwtl
sbb
xor
loope
popf
arpl
push
inc
dec
xor
adc
add
cmp
das
loopne
hlt
fsubs
mov
add
or
mov
into
sub
pusha
cltd
sub
jns
xchg
scas
icebp
pop
lds
cmpb
je
insl
jmp
lock
data16
cmpsb
pop
cs
xchg
cs
push
mov
fisttpll
bound
test
rcrl
dec
push
andb
xor
pop
insl
in
aas
je
daa
sub
xor
lahf
push
sub
xchg
mov
iret
sahf
dec
jns
iret
cmp
movsl
mov
data16
xlat
cs
hlt
imul
add
sahf
adc
loope
xlat
pusha
mov
fnstsw
and
sub
mov
lahf
sub
cmp
adc
dec
sbb
pushf
leave
leave
jae
add
or
push
popf
es
jo
int
push
sbb
jg
mov
ret
sub
jl
add
mov
add
sbb
pop
xor
mov
xor
insb
and
inc
xchg
loope
pop
add
imul
xchg
push
pop
jl
cmp
sub
leave
mov
cltd
sub
sbb
sub
mov
lahf
cmpsl
cmpl
mov
sub
pop
stos
aaa
and
dec
scas
aam
push
mov
inc
fs
push
test
or
fsub
adc
sub
test
and
hlt
pop
dec
jns
fidivrs
lock
and
pop
stos
mov
xchg
cmp
leave
leave
out
mov
jp
loop
in
mov
imul
mov
aas
sarl
dec
adc
out
add
cmpsl
int3
lds
inc
shl
mov
dec
iret
and
jge
sbbb
pop
mov
pop
sub
pop
cs
sub
jns
adc
xor
popl
and
jmp
mov
addb
das
cs
pop
dec
pushw
xor
xor
or
push
and
sarl
call
xchg
pushf
pop
dec
sub
jae
sub
inc
lods
fimuls
adc
aad
insl
xchg
jno
add
inc
fmuls
sahf
inc
pop
rcrl
sub
in
add
sbb
dec
sbb
ss
adc
mov
xchg
cmp
lret
pusha
cwtl
xchg
mov
dec
pusha
rcrl
and
popa
fldl2t
aam
popa
fptan
xlat
cmp
adc
pop
pop
test
cmp
addr16
dec
xchg
mov
test
xchg
push
insl
cld
jno
push
imul
out
and
xchg
add
mov
sahf
or
pusha
jmp
lea
aam
xor
insb
pushl
gs
inc
mov
pop
sub
or
ret
call
pop
loopne
js
adc
sub
roll
push
repz
test
sbb
shlb
icebp
xor
xchg
cmp
mov
repz
loopne
xchg
pop
dec
inc
cmpsl
fsubl
mulb
sbb
or
ret
dec
and
sbb
ljmp
add
sub
cld
into
filds
xchg
cs
dec
cmpsl
and
mov
adc
mov
ja
jecxz
gs
add
pop
dec
mov
cmp
mov
inc
mov
push
aad
jo
adcl
icebp
das
mov
mov
xor
outsl
into
fimuls
and
mov
daa
mov
push
loope
and
sbb
pusha
repz
adc
loop
sbb
jns
sub
cmc
xor
adc
fcmovbe
mov
divb
sbb
add
inc
add
and
sbb
loopne
leave
cmp
aad
mov
sbb
cmp
icebp
das
outsb
cmp
out
lock
scas
xchg
push
xor
inc
xchg
push
in
dec
out
jbe
and
mov
repz
mov
jmp
or
xchg
sub
xchg
lcall
inc
dec
cmpsb
push
xor
and
or
pop
gs
lcall
and
add
jmp
ds
adc
test
mov
pop
cmp
cmp
cld
push
mov
cmp
mov
cli
out
push
gs
jno
cwtl
enter
mov
xor
fwait
loop
jmp
add
das
add
adc
lcall
subb
jp,pt
jns
leave
out
adc
cmc
bound
push
pop
mov
clc
push
aad
int3
add
lods
into
mov
outsb
jp
cmp
jg
dec
loope
mov
cltd
pop
add
xchg
xlat
test
pop
add
sbb
fildll
sarb
jmp
dec
pop
mov
mov
adc
outsb
sub
ljmp
xor
loop
inc
push
jmp
mov
stc
mov
insb
mov
cmp
pop
gs
popf
sbb
dec
inc
dec
dec
mov
popf
jno
sbb
arpl
lock
subb
sti
ret
cs
cmp
in
pop
push
jmp
pop
rclb
iret
lds
pushf
fdiv
je
pop
test
mov
mov
add
in
or
rclb
sub
sti
nop
testb
pushf
xor
dec
jb
mov
cmp
jns
rol
flds
dec
stc
scas
sbb
cmp
mov
and
ret
cmp
sub
mov
out
mov
xchg
daa
pop
test
out
and
shll
sub
or
lret
mov
jne
sub
cli
push
fwait
jge
popf
pop
cmpsl
icebp
rorl
xchg
mov
fidivrs
outsl
jne
xor
mov
enter
add
cld
stos
jge
mov
test
jns
pop
pop
sti
dec
mov
icebp
lea
test
iret
sbb
pop
ss
adc
pusha
pop
jnp
adc
arpl
or
fst
into
daa
and
sbb
ja
repnz
adc
inc
icebp
loope
imull
je
jg
mov
in
shrb
or
cmc
in
insb
fsubp
repnz
int3
popf
adc
stc
bound
insl
cltd
cltd
sbb
sbb
pop
dec
sub
cmp
repnz
addr16
mov
ljmp
mov
and
lds
jmp
add
in
mov
aas
inc
mov
xor
cmc
aam
add
cld
std
daa
fcoms
mov
adc
hlt
imul
mov
or
add
xchg
insb
imul
inc
fcompl
pop
repnz
stos
scas
ja
push
sbb
subb
fs
arpl
mov
mov
xchg
sahf
or
cwtl
lret
inc
rolb
mov
mov
and
dec
add
dec
test
dec
lods
lahf
cmp
jmp
jne
insl
fld1
mov
inc
inc
jl
mov
ja
lods
ss
mov
sub
xchg
lods
cmpsl
cwtl
fmul
hlt
jmp
inc
sbb
stos
sti
aad
fldt
or
lcall
pop
jl
imul
dec
in
rcr
sarl
loope
jne
fldenv
adc
sub
xchg
xor
clc
and
in
jns
inc
fimull
aas
scas
and
stc
sub
or
push
mov
nop
nopl
dec
adc
mov
enter
push
roll
jno
mov
arpl
inc
and
cld
je
inc
cmp
cmp
inc
rorl
push
jg
jge
and
push
jmp
mov
sub
das
mov
bound
sub
mov
popf
subl
push
loope
sbb
pusha
or
mov
into
jae
jmp
aam
push
in
pop
dec
leave
out
push
lret
out
cltd
sub
insl
mulb
push
in
ret
sbbb
cs
mov
xchg
outsb
push
sbb
lds
incl
pop
cmpsl
push
adc
out
pop
dec
jb
test
das
and
fadd
pushf
shrl
push
lret
xlat
or
mov
fsubrs
jbe
outsl
addr16
pop
sbb
mov
stos
cmc
push
xchg
pop
repnz
xor
sub
add
pop
adcb
add
lea
pop
in
push
adc
push
popa
div
rcr
dec
int
stos
xchg
pushl
outsl
dec
inc
movsb
jg
out
pop
jnp
icebp
mov
mov
or
xor
and
mov
divl
aas
fwait
rcl
lods
mov
add
xchg
add
test
jl
pop
sub
out
sub
loope
mov
ret
hlt
mov
xor
insl
xchg
push
xchg
scas
xchg
gs
bnd
mov
mov
lea
mov
push
mov
xchg
outsl
inc
loope
dec
subb
pushf
jl
lock
out
lods
add
insl
add
mull
test
jge
adc
xor
push
push
sti
pop
out
arpl
in
int
cmp
jno
jno
xchg
add
adc
scas
xlat
out
and
orb
cmp
insb
sub
jae
inc
or
stos
mov
pop
sub
sbb
push
jle
jg
int
subl
xor
jge
popa
mov
push
and
fwait
jecxz
mov
popa
loop
test
and
daa
lock
and
mov
mov
pop
sbb
cmpsl
sbbl
dec
pop
loopne
fsubr
dec
mov
cmp
ja
ffreep
xchg
insb
rorl
push
fsubl
enter
or
jnp
push
xchg
adc
push
gs
dec
shll
fistps
jmp
jne
jbe
test
sub
addl
iret
sbb
jne
push
test
jne
mov
cmpsl
xchg
add
add
and
dec
shll
leave
push
mov
push
and
and
cmp
dec
sub
pop
xchg
leave
test
push
das
mov
jl
es
hlt
sub
outsb
clc
pop
fmuls
lea
repz
sub
jecxz
push
jmp
arpl
addr16
cmp
lods
sbb
inc
mov
imul
jo
mov
ljmp
cli
push
cmp
jmp
fists
push
jle
pusha
pop
not
xchg
mov
mov
and
pop
rcll
lock
ds
mov
data16
iret
mov
jns
out
mov
and
stos
xchg
xor
cld
xchg
lret
mov
jge
sub
pushf
ret
jl
pop
mov
in
pop
lock
jae
out
inc
add
mov
mov
fwait
xlat
loope
movsb
jo
mov
ret
mov
xchg
fwait
enter
push
jns
mov
pop
mov
decb
xor
lea
push
or
lret
cmpsl
imul
push
es
cld
pusha
popl
aam
bound
testl
orl
dec
popf
int3
jnp
or
jmp
dec
std
test
push
cld
cs
lret
incl
cmp
lock
cltd
gs
lods
fbld
loop
bound
cld
sbb
and
es
psrlq
jle
fldl
xchg
stos
lahf
xor
sbb
icebp
sarl
mov
mov
rorl
test
jbe
scas
aam
decl
loopne
push
dec
sbb
xchg
mov
lcall
popf
mov
mov
outsl
or
adc
mov
jae
movsl
cld
or
push
pop
in
inc
jl
filds
mov
mov
cmp
bound
sub
outsb
jb
and
jmp
mov
cmc
add
and
xor
insb
and
dec
mov
xchg
popa
adc
mov
mov
les
sti
jne
outsb
mov
jmp
mov
vpsubsb
imul
int
cmp
lret
mov
mov
in
pop
data16
cmp
push
cmp
call
or
inc
test
test
vpcomd
cs
or
pop
stc
inc
mov
add
jg
nop
fnstcw
test
imul
lret
jno
shll
push
adc
or
add
mov
ljmp
mov
stc
loop
insb
sbb
sub
imulb
mov
or
fs
lea
loop
int3
push
les
xchg
fiaddl
lods
dec
jns
imul
arpl
fwait
mov
adc
cmp
push
push
xor
xor
jg
and
scas
add
inc
inc
xor
lock
je
sub
scas
insb
cwtl
mov
pop
jns
lahf
push
xor
movsl
xor
jge
in
push
es
add
sub
and
fs
add
cmp
cwtl
push
lea
mov
dec
stc
push
xrelease
js
adc
mov
mov
jnp
and
and
dec
cmp
in
rorb
mov
mov
jbe
add
ss
and
int
xchg
fwait
scas
not
ljmp
adc
loopne
dec
adc
pop
mov
pop
cmp
mov
rorb
dec
push
lock
mov
aam
push
xchg
jp
dec
ds
in
inc
lock
push
mov
mov
mov
out
jno
outsl
cld
into
leave
cmp
outsl
cmpl
ss
hlt
mov
pusha
mov
movsl
out
dec
or
insb
fwait
mov
int
adc
mov
mov
push
je
xchg
jnp
mov
inc
lret
or
lds
imul
fs
pusha
or
push
mov
iretw
in
pop
push
movsb
mov
in
lahf
jl
je
into
outsb
shl
dec
adc
in
lods
push
lds
xor
push
idivb
adc
repnz
inc
jl
test
js
out
inc
dec
add
mov
or
rcll
mov
stos
lods
cmp
mov
aas
cmp
mov
adc
cmp
jne
lahf
jnp
rorb
add
jbe
or
mov
add
push
test
fimull
jge
pop
pop
mov
mov
xor
adc
in
ss
and
cltd
jno
inc
mov
test
cwtl
push
stc
inc
push
popf
hlt
cmp
clc
shlb
xor
and
test
aas
out
popa
xor
cmpsb
repnz
mov
jno
cmp
push
negl
add
dec
cmc
jbe
mov
sub
sysenter
cmp
sub
sbb
sbb
or
bound
jns
fistpl
ret
lods
sahf
jno
xchg
pop
and
fstps
outsl
xor
loopne
pop
and
cld
push
mov
pop
ljmp
dec
dec
sbb
cmp
cmp
repz
aas
or
or
jb
test
add
cmc
adc
movsl
lods
scas
mov
pop
js
xlat
inc
cmp
mov
int3
ja
sti
ret
out
dec
pop
dec
int3
jl
aam
ffree
adc
add
mov
rcll
mov
pop
xor
lcall
or
insl
mov
cmc
je
aaa
mov
into
arpl
and
add
outsb
mov
pop
mov
sbb
sbb
nop
cmp
pushf
loopne
or
pop
push
int
ds
mov
addr16
in
inc
es
push
mov
and
fcomi
pop
mov
or
sub
stos
shr
lock
gs
jns
jnp
sub
mov
xor
dec
add
push
pop
iret
sbb
push
push
popl
jmp
in
sub
sub
scas
stos
shll
in
xor
rcr
push
pop
sub
jg
movsl
stc
ljmp
and
inc
mov
fistpll
sub
rcr
mov
rclb
stos
push
shrb
mul
inc
cmp
and
cmp
cmp
sub
iret
call
ret
jns
jg
jmp
out
mull
test
cmp
sbb
call
cld
lea
addr16
inc
inc
ja
repz
test
enter
int3
lcall
add
sbb
jns
sub
jmp
dec
das
xlat
sbbb
test
arpl
sbb
pop
adc
jcxz
cmp
xchg
lds
mov
xchg
push
jl
and
inc
xorl
shll
cmp
lret
jnp
scas
dec
dec
xchg
xor
addl
fdivrl
push
ljmp
stos
nop
imul
test
push
fstpl
cmp
xchg
mov
mov
je
daa
daa
bnd
arpl
inc
and
push
and
push
mov
cmp
negl
mov
pop
pop
pop
ret
mov
and
mov
aam
add
mov
nop
inc
jmp
sub
hlt
dec
push
fucomp
xchg
push
mov
sub
dec
ret
in
dec
int3
movsl
scas
cmc
push
fisubrl
or
lea
xchg
nop
inc
fistpl
sti
cli
dec
cld
cmp
cmp
mov
jmp
ds
adc
pop
or
cld
inc
mov
pop
or
mov
imul
or
add
or
fisubs
fisubrl
out
cs
add
outsb
iret
xchg
js
or
mov
xchg
mov
add
or
mov
sub
gs
mov
lea
mov
pop
sbb
add
or
scas
sbbl
jo
pop
pushf
cmpsb
mov
jecxz
push
movsb
xor
gs
call
push
and
and
cmp
or
or
mov
xchg
pop
imul
dec
nop
add
sbb
push
sbb
addr16
jmp
loope
inc
xlat
xor
movsl
out
out
and
popa
xchg
arpl
push
add
xor
sub
cld
jl
mov
mov
mov
sub
cmp
push
subb
adc
pop
jge
aas
das
mov
hlt
mov
insl
mov
shlb
push
lcall
sub
mov
sub
pop
inc
push
add
xor
lods
jmp
mov
inc
in
pop
add
pop
dec
neg
sub
mov
mov
mov
pop
and
cli
sbb
inc
mov
aam
outsb
jmp
and
fs
mov
fsts
imul
push
inc
jae
paddb
insl
dec
cs
xchg
mov
dec
imul
fsubrs
std
stos
scas
push
int
addb
rol
or
stc
xor
outsl
mov
fcoms
jecxz
scas
fidivrl
repnz
rcrb
fcompl
bound
lock
mov
pop
mov
ret
mov
addr16
jecxz
dec
icebp
lods
push
inc
dec
push
out
jb
xchg
mov
outsl
ja
aas
mov
mov
xchg
aas
and
sub
or
jnp
mov
loope
or
xchg
jnp
sbb
out
mov
push
orb
adc
sti
aam
push
cltd
jb
inc
inc
xor
rol
hlt
push
jo
outsb
xor
inc
nop
sub
jg
dec
sbb
pop
inc
or
and
inc
and
fwait
lods
mov
imul
aaa
xchg
inc
xchg
insl
and
mov
dec
pop
xchg
jbe
or
sbb
xchg
bound
jae
sub
je
fmuls
xor
push
add
sub
push
sub
mov
push
int3
mov
and
out
cmpsl
or
test
enter
aad
xchg
mov
mov
lds
jg
loop
dec
nop
adc
cmp
jecxz
and
xchg
ja
je
jecxz
lret
scas
pop
sbb
mov
loopne
sbb
pop
xchg
fs
pop
pop
iret
stc
int
xor
arpl
insb
loope
repnz
xchg
cmp
test
dec
mov
and
test
divl
loop
popa
cld
fdivrs
lock
pop
push
cmpsl
dec
xorl
adc
xor
scas
xor
push
dec
jbe
mov
je
neg
push
lea
mov
mov
std
cmp
inc
or
sub
xchg
test
cwtl
repz
pop
jnp
int3
push
fs
je
mov
sub
fisttpll
mov
adc
sar
xchg
jb
add
sbbb
rclb
in
mov
rclb
into
dec
lock
push
pop
ret
and
loope
fadds
mov
jge
dec
addr16
test
data16
or
popf
mov
imul
cmp
lods
cli
pop
ljmp
push
or
idiv
xchg
icebp
add
cmp
mov
fisubrl
pop
mov
jp
mov
cltd
pop
idiv
lds
pusha
pop
xchg
insb
enter
int3
ljmp
ret
movsb
sbb
int
loopne
mov
jg
ja
imul
mov
adc
pushf
xchg
fsubl
fdivrs
mov
insl
mov
jmp
daa
and
in
sub
or
pusha
fimull
and
or
pop
mov
sub
call
cwtl
mov
imul
xor
dec
into
lds
sbb
sbb
pop
pop
aas
pop
dec
scas
test
mov
arpl
sarb
inc
stc
fisubrs
lods
vcvtsd2si
aas
or
dec
inc
inc
das
daa
xchg
mov
or
dec
pop
adc
mov
mov
aaa
mov
mov
mov
adc
int
mov
dec
mov
dec
sti
mov
xchg
rorb
dec
xchg
rolb
inc
dec
js
shl
add
daa
fsubrl
pop
iret
push
or
pushf
mov
das
shll
fcompl
mov
sbb
and
mov
mov
outsl
sbb
popf
xchg
fistps
repz
inc
cmp
imul
add
cmp
add
cmp
and
cmp
ss
xorb
adc
sbb
jae
cmc
add
add
cmp
cwtl
adc
mov
iret
inc
outsl
inc
mov
sahf
sub
xor
jmp
les
push
sub
jp
mov
ljmp
or
cmp
je
push
mulb
js
jg
lds
adcb
pop
dec
into
sub
sbb
push
and
stos
pushf
adc
mov
cmpsb
es
jmp
data16
fidivl
and
adc
pop
in
lret
lret
orb
jno
sbb
jno
mov
mov
test
adc
push
cmp
stc
test
cmp
adc
jns
je
jo
pop
add
lods
push
les
sub
dec
fldenv
cli
addb
push
pop
and
int3
mov
rcrb
pop
std
mov
adc
ds
mov
push
pop
in
cmp
pop
cmp
imul
sar
sbb
adc
inc
pop
jecxz
pop
sahf
sub
lret
inc
or
add
fists
ficomps
pop
outsl
add
and
pmaxsw
mov
jg
mov
jmp
insl
jnp
and
dec
cmp
jg
push
xchg
idivb
or
or
loope
enter
mov
push
nop
push
jge
dec
push
push
or
lret
mov
rcll
outsb
mov
cs
pop
push
cmp
cmpb
popl
sub
add
enter
mov
inc
adc
add
shr
movsb
ret
mov
jno
cmpsl
cwtl
aam
cltd
xchg
loope
mov
aam
dec
ja
xchg
lea
xorl
cld
jg
pop
mov
mov
xor
lock
aam
jo
xor
movsb
je
adc
inc
xchg
pushf
shll
sahf
adc
cmc
inc
ficoms
and
into
and
mov
xor
xchg
nop
mov
sbb
lahf
jo
mov
mov
jo
dec
cmpsb
pop
and
adc
xchg
lods
ja
dec
mov
sbb
and
jle
dec
inc
and
bound
aas
inc
ds
loopne
pop
dec
sub
jbe
sub
imul
adc
xlat
stos
mov
sbbl
sub
inc
xorb
sbb
mov
xor
mov
enter
getsec
sub
das
in
push
aaa
incb
mov
aas
mov
popf
sti
dec
les
daa
mov
insb
xchg
das
pop
dec
mov
insl
fdivrl
mov
mov
mov
jl
xlat
ss
lods
mov
cmp
adc
push
mov
jmp
inc
sbb
out
dec
adc
mov
xchg
aam
loopne
sub
fdivl
testl
push
inc
insb
stc
std
scas
push
test
incb
scas
cmpsl
ret
jbe
jne
mov
loop
movsl
or
dec
stos
xchg
sbb
push
test
stos
cmp
cmp
jg
clc
push
bound
addr16
push
fisttps
addr16
out
filds
jmp
aaa
adc
daa
push
mov
fsubrs
ljmp
into
push
and
jo
pusha
test
mov
cli
jmp
shlb
scas
loop
adc
sbb
pop
data16
dec
adc
imul
inc
cmc
bound
xor
mov
pop
jo
pop
pushf
rorl
aad
jecxz
test
mov
addl
popf
lock
jbe
fisttpl
imul
mov
hlt
js
outsb
pop
mov
mov
pop
push
xor
dec
push
pop
movsb
adc
daa
add
jns
bnd
test
pop
ss
push
out
dec
insb
or
repz
dec
cmp
lea
dec
in
fildll
jg
subl
xor
popl
push
push
jae
arpl
cltd
jb
sarb
decl
xchg
adc
lret
mov
jnp
push
lcall
dec
into
mov
sbb
shlb
jb
push
sub
js
jmp
add
sbbb
les
ss
mov
add
or
fdivl
inc
int
std
dec
xchg
test
in
and
mov
xchg
arpl
sbb
cmpsb
enter
and
mov
pop
mov
mov
in
stos
les
push
lret
cmpsl
ficoml
or
ds
mov
mov
inc
mov
or
test
scas
mov
in
mov
dec
jg
shll
or
pop
nop
iret
outsl
mov
cld
sti
inc
stos
push
pop
ss
and
loop
mov
cwtl
adc
into
xorl
add
ret
aad
xchg
inc
ljmp
mov
sbb
fcmovb
pusha
sbbb
lret
cmpsl
pop
hlt
xchg
andb
cmc
dec
add
xor
cwtl
xor
fcmovne
sbb
mov
ljmp
mov
fdiv
jb
pop
inc
or
xor
lods
dec
mov
pop
test
ret
into
and
insb
xor
jl
and
inc
pushf
push
psubq
mov
jae
loop
stc
ffree
sub
and
aam
jns
in
xor
jbe
sub
xor
aam
cwtl
adc
lcall
cmp
arpl
or
mov
jge
mov
fwait
adcl
loopne
pop
fucom
jge
pop
sbb
test
aad
push
gs
popf
cmc
or
mov
rcrb
xchg
pop
cmp
push
ror
lahf
xchg
rcrl
dec
cmpsl
sbb
inc
mov
mov
jbe
mov
popf
mov
icebp
push
inc
xchg
gs
lods
or
inc
fildl
or
push
les
push
fwait
push
push
xor
mov
fimuls
std
shr
incb
pop
lahf
lea
pop
je
int3
dec
or
xchg
cmpsl
xor
out
push
mov
xchg
mov
loopne
jnp
clc
jbe
mov
cmpsb
int
sbb
mov
out
pop
dec
mov
pusha
cltd
jnp
test
dec
ja
rcll
xlat
jnp
inc
insb
inc
xchg
ret
outsb
xor
dec
dec
inc
adc
xchg
cmpsl
sbb
sub
mov
xor
push
stc
jne
ds
daa
mov
sub
mov
cmpsl
cmp
jmp
sub
or
xor
and
push
jmp
push
pushf
sub
aaa
shrl
aad
fcoms
push
adc
shrb
in
ret
adc
dec
jg
mov
dec
mov
das
ret
lcall
or
icebp
lahf
lret
sub
pop
aam
add
cmp
fmuls
cwtl
mov
and
push
push
add
idivb
stos
cmpsb
lret
xchg
ljmp
mov
into
fidivrl
cmpsl
mov
loopne
push
iret
or
jecxz
sti
jo
sbb
popf
int3
sbb
cmpsl
adc
xchg
add
jecxz
jns
popa
push
xor
fs
xlat
out
fsubl
mov
mov
sbb
mov
jge
add
dec
mov
lret
int
jle
inc
in
imul
roll
imul
iret
lods
dec
or
test
push
test
or
push
inc
mov
lret
das
dec
aas
and
cli
call
neg
test
xchg
cmp
cltd
mov
jle
int
ret
push
mov
pmuludq
dec
js
jge
jb
movsl
je
es
cld
andb
cmp
pop
lods
and
call
lods
adcl
lods
cmpb
add
mov
dec
dec
stos
lods
sub
and
aad
out
jae
mov
lods
lods
pop
lods
les
popf
jg
inc
fdivrs
shrb
adc
insb
inc
cmp
mov
into
mov
and
nop
shl
cld
hlt
xor
cwtl
loop
sub
cwtl
imul
sbbl
es
cmp
mov
mov
dec
or
mov
adcb
add
add
jl
imul
sbb
sub
jecxz
imul
aam
lea
ret
lcall
xor
mov
inc
outsl
ud1
xchg
jb
call
pop
out
mov
lea
outsl
dec
cmp
subb
jnp
xor
jp
push
popf
cmp
lcall
mov
jno
add
push
orb
repz
int
fisubrs
inc
ret
clc
push
ret
pop
jle
mov
dec
mov
mov
push
js
mov
fisubrl
aam
dec
mov
icebp
lret
ljmp
mov
add
cld
insl
mov
imul
dec
push
addb
outsl
outsb
xchg
and
in
insl
push
inc
sub
movsl
jb
mov
xchg
jmp
mov
les
rclb
pop
int
jo
pop
cld
in
sub
cmp
imul
jg
fcoml
dec
addb
stos
cmpsb
and
sbb
push
jmp
nop
js
incb
mov
cmp
mov
sub
les
jb
push
mov
andl
pop
push
cmp
rolb
ljmp
dec
or
pop
ds
adc
lds
dec
pop
aad
sub
and
fxch
mov
adc
fwait
and
xor
sarl
addl
jo
jle
stos
shrb
add
or
dec
pop
ljmp
aam
xchg
pop
cmpsb
dec
jae
idivb
dec
fstpl
add
mov
lret
push
test
xlat
sbb
icebp
or
outsb
xchg
ljmp
jbe
out
out
cmp
imul
pushf
es
lret
nop
cwtl
mov
or
pop
sub
pop
mov
iret
ljmp
test
ljmp
fcompl
mov
and
ret
out
in
cs
out
inc
push
mov
dec
mov
clc
js
inc
imul
outsl
loop
adc
mov
repz
filds
xchg
jb
xchg
dec
mov
daa
imul
sub
movsb
popa
testl
data16
in
sahf
pop
pop
adc
shll
xchg
xchg
add
push
pop
push
sahf
out
lods
andb
push
push
pop
lods
adc
imul
sbb
ss
ficoml
cwtl
sub
jle
push
cld
add
or
push
mov
nop
cmpsl
loopne
movsl
cmp
rcll
ficoml
imul
xchg
int
js
dec
mov
mov
loopne
jmp
inc
test
lds
leave
push
dec
mov
ret
cmp
push
and
fistps
inc
xchg
mov
out
or
jbe
xchg
push
dec
movsl
int
or
xchg
sub
inc
pop
ljmp
rcrl
jp
dec
ss
adc
xchg
inc
loopne
inc
sti
sub
pop
sub
cmp
mov
out
add
xchg
popa
scas
jns
in
xchg
cmpsl
fists
addr16
and
mov
out
cmp
push
sub
shll
or
mov
jns
xor
mov
sbb
in
push
or
imul
lea
out
loope
mov
lea
push
add
ret
das
or
xchg
sub
mov
add
or
dec
sbb
loope
pushf
push
sub
sub
loop
addr16
popa
icebp
dec
jbe
cltd
mov
adc
cmp
add
adc
mov
lret
add
mov
das
inc
pop
leave
mov
lock
insl
and
pusha
enter
test
bound
pop
and
jecxz
or
ficoms
jge
jle
lods
mov
lahf
xchg
nop
mov
movsb
dec
mov
or
and
push
es
jmp
imul
clc
sti
cltd
sbb
mov
xchg
fstpt
mov
push
or
xchg
dec
inc
push
cmp
shlb
pop
inc
lods
cmp
les
mov
or
dec
or
rcr
pop
mov
scas
sbb
inc
imul
cmpb
popa
lahf
or
or
and
pop
lret
sub
cmp
xor
dec
imul
in
mov
cmp
jne
cmp
das
xor
xchg
js
ljmp
sbb
adc
arpl
jae
mov
cwtl
mov
daa
xchg
mov
pop
xor
lds
pop
jae
repz
mov
enter
adcb
jae
std
call
iret
mov
popf
jns
out
xchg
fmull
idivl
xchg
idivl
jbe
test
daa
leave
fbstp
aaa
dec
or
inc
or
in
or
mov
lods
leave
pop
mov
inc
push
push
sbb
jecxz
mov
xchg
xchg
jp
shlb
pop
push
leave
mov
xchg
xchg
neg
imul
pushf
cmp
js
sbb
jecxz
xor
ja
cmp
cmc
shll
sub
push
cmpsb
imul
repnz
iret
xlat
pushf
dec
scas
mov
ret
inc
sbb
fwait
pmuludq
sub
in
test
in
adc
mov
mov
dec
fisubrl
xor
cmpsb
sar
sbb
push
xorb
mov
mov
and
shlb
jne
jmp
xor
push
xchg
fs
adc
insb
hlt
std
adc
pop
mov
mov
int
std
call
leave
add
or
adc
pop
cmc
mulb
dec
dec
sub
push
addb
ret
stos
push
sub
inc
stos
xchg
stos
dec
ret
andl
or
scas
xor
dec
push
mov
dec
cmp
push
mov
mov
fsubrp
in
add
dec
arpl
sub
inc
cmp
xchg
in
sub
enter
loope
mov
int
push
cmp
sub
aas
lds
mov
adc
pop
xchg
cmc
jbe
pop
mov
mov
add
mov
xorb
fsts
jg
push
xchg
loope
mov
insb
out
push
leave
outsl
das
or
xchg
xor
call
mov
jg
fnstcw
repnz
pop
pushf
in
fwait
mov
sarl
out
fwait
ljmp
jne
xor
push
call
mov
mov
imul
mov
sahf
push
xchg
push
inc
outsb
pop
out
jo,pn
adc
enter
ss
dec
outsl
inc
ret
inc
mov
sbb
movsl
fstpt
adc
loop
insb
fstps
mov
nop
jmp
jg
mov
popf
push
dec
sbb
sti
test
scas
rcl
dec
pop
stos
and
cmc
movsb
pushf
jge
adc
cmp
adc
adcl
rorb
hlt
dec
movsl
insl
cmpsb
push
cmc
xorl
pushf
in
aas
test
fs
sbb
lods
mov
je
rorb
out
xchg
push
inc
scas
cli
dec
push
fistps
jl
mov
and
dec
ss
dec
sbb
pusha
mov
dec
mov
lcall
cmpsl
add
pop
sub
jl
sahf
ds
or
mov
divb
movsb
dec
jbe
stos
faddl
loopne
mov
loope
mov
dec
popf
lods
xor
and
lods
mov
sti
sub
cwtl
hlt
adc
xor
or
out
ljmp
hlt
inc
imul
mov
mov
dec
hlt
sbbl
iret
sbbl
out
mov
icebp
mull
dec
into
std
pop
sarb
out
mov
shrb
fmuls
clc
dec
sbb
cltd
xor
xor
cli
xchg
movsl
test
sbb
mov
jl
pop
jl
jp
push
std
xlat
fldl
jmp
icebp
sahf
repz
xchg
lret
inc
fstpt
jg
xchg
jg
dec
movsl
inc
pop
lock
ret
nop
mov
mov
leave
push
insl
xor
inc
aas
mov
cmpsb
cmpsb
xchg
push
add
test
loop
push
outsl
gs
pop
addl
xchg
push
mov
lea
out
lods
or
adc
jp
pop
lcall
call
mov
sti
inc
jecxz
pop
xor
ficomps
ficomps
push
ret
and
cwtl
cmp
jb
hlt
pop
jo
mov
pop
cmc
out
cltd
test
shrl
add
js
into
adc
adc
arpl
shlb
fsubs
sbb
std
test
mov
adc
aaa
lret
or
in
pusha
pop
in
and
sub
rclb
dec
mov
in
jmp
sub
inc
jno
dec
testb
mov
hlt
repz
addr16
lret
scas
or
cmpl
andl
and
out
aad
mov
and
out
call
out
adc
and
sub
repz
dec
xchg
cmp
inc
fcoml
mov
push
add
jl
jp
cwtl
mov
dec
jle
je
mov
scas
shlb
in
movsb
pop
xlat
sbb
iret
sbb
adc
adc
xchg
js
jle
inc
xor
hlt
jb
mov
mov
gs
adc
push
sub
in
ss
fistl
mov
popa
arpl
jb
and
outsl
mov
adc
ja
rclb
lds
call
decb
cltd
pop
shlb
cmc
or
cmp
mov
leave
sbb
daa
pop
dec
lcall
dec
ss
daa
xchg
add
testl
mul
iret
or
mov
dec
sti
dec
jae
cmp
xor
mov
fidivl
cmp
cli
jae
jecxz
shrl
jmp
outsb
inc
push
in
jns
adc
ficompl
mov
pop
dec
jae
push
stos
adc
lods
sbb
sbb
aam
lods
xchg
shr
lods
popa
sub
push
mov
jl
pop
clc
lret
push
test
movsl
jle
test
sbb
iret
push
push
adc
dec
cmp
ss
jb
adc
repz
call
test
lahf
dec
mov
test
push
cmpsb
sub
stos
arpl
cmp
insl
movsl
fld
hlt
psrad
stos
mov
mov
movsb
dec
bound
dec
lea
push
jmp
repnz
ret
pushl
lea
jae
add
sarb
insb
daa
jnp
and
add
rclb
stos
repz
repnz
test
xchg
adc
pop
out
mov
lret
xor
jmp
mov
or
das
pop
int
inc
xchg
cmpsb
pop
lahf
xor
cs
leave
imul
lods
scas
sbb
sbb
push
push
fmuls
ja
jge
sahf
lret
shll
leave
sbbb
test
aam
nop
cmovo
push
jns
ret
pop
fimuls
daa
jge
adc
and
outsb
push
xor
cmp
out
insb
adc
scas
sub
xor
ret
sub
pusha
sbb
pop
adc
jb
leave
pop
sbb
xchg
xchg
fdivl
xor
push
sub
pop
scas
xor
add
mov
repz
sbb
inc
lahf
adc
and
stos
sub
popa
adc
mov
mov
mov
dec
and
testb
xchg
ret
pop
jo
lcall
adc
mov
outsb
ljmp
fs
fcomip
and
fildl
mov
jecxz
mov
ja
push
jb,pn
xchg
dec
out
push
mov
cli
fwait
dec
inc
je
pop
jne
popf
and
mov
aad
pop
pop
mov
push
inc
xor
fadd
outsb
jmp
insl
fwait
jae
add
xchg
out
jmp
pop
ficomps
lret
lcall
pop
sbb
push
cltd
xchg
rcl
ss
mov
les
add
xchg
and
mov
faddl
xchg
arpl
pop
jo
mov
pop
fsubl
iret
pop
gs
pop
mov
pusha
or
jbe
adc
adc
stos
adc
fistps
inc
shll
ror
shlb
lock
sbb
dec
mov
fcoms
xor
push
xor
popa
adc
ficompl
clc
mov
jb
and
sub
dec
cmp
inc
insb
ljmp
cmp
imul
ficoms
xlat
xor
lods
loop
push
sahf
ja
xchg
cli
jg
dec
or
scas
hlt
aam
mov
and
mov
push
sub
aas
mov
scas
popa
shrb
les
xor
add
and
jno
mov
cli
xchg
xor
lds
out
mov
push
sti
xchg
jae
jle
aaa
cs
aam
ret
ror
lret
addl
in
insl
in
fldcw
dec
mov
cwtl
nop
mov
push
repnz
aaa
mov
lds
push
and
pop
pop
fdivr
lahf
sarb
frstor
sbb
xchg
adc
pop
cmp
xor
mov
loopne
sub
dec
andl
fldt
xchg
test
cmp
jnp
or
lods
lea
xchg
and
xor
add
ret
rclb
push
out
bound
lcall
fwait
mov
push
and
pop
insb
xor
mov
es
loop
stos
xchg
and
xchg
adc
insb
scas
pop
int3
cmp
mov
jbe
sbb
dec
jg
push
and
push
and
and
sahf
xchg
push
jmp
add
mov
dec
pop
fdivl
mov
pop
jne
gs
mov
pop
mov
enter
mov
test
jae
movsb
das
cmp
fistps
mov
jl
stos
and
or
add
loope
add
out
test
dec
jnp
fimuls
push
data16
xchg
hlt
push
test
popf
or
pop
fwait
insb
push
mov
mov
sub
cld
sahf
xchg
adc
push
adc
mov
shll
or
inc
jb
loop
jecxz
adc
repnz
aad
outsl
add
aam
xchg
dec
in
aam
lods
test
jnp
inc
packsswb
pop
ret
lahf
push
out
es
cmp
je
gs
test
stos
pop
and
and
leave
xchg
ss
pop
dec
test
leave
mov
testb
push
xor
loopne
inc
inc
sbb
fdivrs
pop
cmpsl
xor
adc
cmp
bound
pop
xor
ja
sub
idiv
andb
mov
mov
aad
loop
jo
sub
leave
or
jmp
popa
sarb
sahf
mov
sub
es
jge
leave
adc
test
inc
movsl
lret
or
daa
shll
ljmp
mov
and
xchg
dec
arpl
cmp
arpl
testb
rcr
sbb
sbb
cltd
mov
jge
test
jno
jecxz
mov
outsl
xor
pop
sar
shll
test
ja
aas
lea
cmp
imulb
mov
xchg
push
imul
scas
mov
adc
inc
inc
adc
ja
add
pop
hlt
cltd
iret
xchg
sub
dec
push
inc
or
cmpsb
int3
out
dec
xchg
outsl
cltd
loope
cmp
push
pop
inc
in
rorl
jmp
xor
rcrb
jne
data16
jge
adc
mov
jmp
sub
push
fistps
xchg
push
ficoml
adc
imul
sbbl
cli
lods
js
pop
or
aad
scas
fimuls
test
xchg
repnz
push
ljmp
jp
inc
xorl
pop
mov
mov
loopne
dec
or
push
cmp
adc
out
push
scas
pop
in
push
mov
je
cmp
add
leave
dec
jne
call
cmp
fs
test
scas
cmpsb
cltd
and
out
jmp
lret
add
jno
cmp
mov
iret
in
int
mov
aam
or
fbstp
mov
sbb
outsb
ret
outsl
and
fisubrl
inc
push
mov
adc
mov
sti
les
push
rcrl
shlb
movsb
xlat
mov
scas
and
decb
aad
xchg
xchg
push
mov
add
add
or
test
outsl
sbb
test
jbe
inc
pop
popa
int
jmp
pop
out
pusha
xchg
cmpl
mov
dec
js
idivb
xor
rolb
jmp
push
pop
jge
nop
jbe
mov
mov
test
add
jl
icebp
jle
push
out
ljmp
or
cmp
adc
lods
andl
dec
mov
mov
push
lds
mov
movsb
sub
int3
xor
xchg
mov
enter
dec
jne
and
sub
adc
sbb
outsl
ljmp
add
add
fadds
jg
push
test
iret
jnp
push
fldt
repz
ficoml
out
pusha
addr16
aam
jecxz
cmpsb
pushf
adc
and
sbb
jg
xor
pusha
xorb
pop
rorb
cwtl
clc
ss
sub
ret
mov
pop
mov
punpckhwd
xor
xor
inc
mov
aaa
inc
stos
push
and
adc
adc
cli
clc
lcall
jg
jmp
jb
cmc
dec
lcall
inc
jno
and
dec
enter
inc
add
scas
pop
xorl
nop
out
adc
pop
or
push
push
mov
les
rorl
ret
jnp
xor
psubusb
push
movsb
lret
push
mov
cmc
cmc
lret
fwait
or
out
inc
or
dec
fdivl
adc
test
mov
mov
dec
xchg
adc
div
sbb
pop
xchg
std
mov
sti
jne
fs
cmp
into
ret
fwait
mov
push
scas
jg
mov
movsb
cmp
stc
xchg
xchg
pop
incb
jecxz
sahf
insb
push
sbb
iret
test
jmp
jg
mov
fmuls
xchg
sbb
out
jbe
sbb
shlb
mov
je
in
cltd
inc
xchg
insb
pushf
loope
inc
xor
cmp
into
cmp
call
mov
or
or
sub
mov
orb
push
and
inc
mov
or
cmp
adc
rol
pop
dec
sbb
rcr
into
xor
jg
arpl
in
mov
pop
out
gs
xor
cmp
mov
sub
dec
mov
shlb
cmc
in
sub
das
jo
mov
xlat
adc
cmc
test
adc
lahf
dec
iret
push
jg
inc
fs
andl
addr16
lahf
pop
shlb
and
sbb
cld
mov
outsb
dec
ss
push
shlb
int3
imul
dec
xchg
xchg
cltd
dec
mov
fsub
mov
dec
mov
mov
pop
push
push
mov
jbe
xor
mov
and
mov
mov
cmp
cs
ss
mov
push
adc
sbb
nop
adc
aad
jnp
lods
mov
cmp
rclb
mov
mov
and
arpl
lock
leave
or
xor
and
dec
out
dec
jg
cmp
cld
xchg
shl
mov
mov
mov
stos
mov
jno
xchg
pop
inc
lods
nop
mov
pop
pushf
adcb
shll
sub
xchg
jecxz
push
adcl
and
or
icebp
negb
pop
sbb
and
or
repnz
xor
jbe
add
mov
and
jl
xor
mov
add
fs
xchg
arpl
cmpsb
and
cmp
iret
mov
das
shl
subb
addr16
stc
pop
push
xchg
leave
adc
jne
jp
cld
xor
or
mov
dec
mov
mov
xchg
push
aam
mov
cltd
scas
mov
pop
sub
mov
clc
adc
and
jnp
lock
sahf
test
push
lret
in
clc
out
je
ret
mov
push
jb
push
cmp
sbbb
dec
in
add
add
lahf
pop
xchg
scas
fcmovnu
pop
jg
test
push
dec
xor
pop
loop
cmpsb
mov
movsl
mov
push
xlat
pop
inc
call
lods
xor
pusha
push
lods
into
xchg
jbe
fimuls
sbb
fs
sar
push
rolb
out
xchg
test
insb
negl
sub
and
lahf
xor
xchg
cs
push
icebp
int3
xor
aad
push
rcrb
push
fmuls
sub
imul
xor
xchg
push
mov
xchg
pop
sbb
icebp
jno
stc
daa
loope
cs
dec
or
inc
xor
push
sub
stos
xor
out
sub
add
lret
mov
std
push
push
adc
adc
xor
adc
mov
shrb
enter
and
out
xorl
add
push
jne
addl
push
jne
pop
dec
test
bound
or
adc
lret
adc
mov
pop
mov
fildll
insl
mov
test
lahf
cli
inc
push
jb
dec
ljmp
arpl
xor
pop
testl
adc
add
ret
paddusw
inc
int
inc
sahf
call
popf
outsb
push
stos
enter
arpl
adc
test
pop
fs
adc
pop
arpl
mov
leave
xor
or
push
leave
jnp
fidivs
nop
ltr
push
dec
mov
test
in
xor
push
adc
sbb
dec
icebp
lea
push
daa
or
jne
fsub
fldl
gs
sub
bound
scas
jns
sub
xor
jbe
jp
addl
xchg
jns
in
sub
and
stc
adc
or
loopne
inc
mov
jmp
xor
addb
popa
ss
bound
xchg
call
cmpsb
lods
rol
jb
icebp
sbb
push
cltd
fimuls
mov
dec
ss
cmp
add
jns
mov
hlt
or
push
pop
sub
cmp
mov
push
inc
jo
push
xor
push
mov
xchg
jecxz
pop
les
orb
lea
popf
dec
dec
adc
xchg
jmp
outsb
push
lcall
leave
lahf
cmpsb
xchg
shl
mov
xor
inc
mov
add
ljmp
scas
cmpsl
cmpsl
xor
cmp
pop
mov
sub
mov
xchg
pop
pop
sub
pop
jmp
lds
inc
xor
push
je
inc
and
and
mov
stos
dec
and
add
test
pop
pop
pop
lahf
jge
imul
add
fisubrs
jo
loope
sbb
das
movsl
insb
push
sbb
inc
inc
dec
mov
aad
or
mov
loopne,pt
inc
loope
inc
ret
push
xchg
lds
dec
adc
mov
imul
and
pusha
movsb
pop
cmp
mov
call
push
addr16
fdivl
sarl
xlat
dec
xor
ja
pop
lahf
inc
out
icebp
movsb
cmp
lret
pop
sahf
bound
and
jp
mov
dec
cli
sub
cmp
inc
mov
sbb
jl
pop
inc
clc
adc
push
pop
mov
dec
div
xlat
or
adc
les
mov
jns
dec
fmuls
mov
stos
cmp
popa
int3
dec
and
xchg
outsb
pop
mov
dec
icebp
inc
repz
sub
inc
scas
or
in
add
and
outsb
sub
rcrl
sbb
loope
jmp
fldl
fwait
imul
lods
mov
fs
pop
inc
int3
repnz
inc
push
and
xchg
dec
pop
aam
ret
cltd
imul
cmpb
push
fnstcw
hlt
or
sarb
popa
pop
add
mov
sub
fs
leave
or
jl
adc
aaa
and
inc
jne
xchg
out
mov
jns
arpl
cli
mov
or
cmpsl
jne
insl
faddl
arpl
mov
lcall
scas
pusha
xchg
aas
repz
addr16
repz
bound
nop
adc
dec
mov
inc
icebp
push
subb
aaa
jb
loopne
xor
xchg
mov
cmc
fmuls
pop
sbb
cmp
enter
lock
and
mov
cmpsl
lods
mov
movsl
cmp
fmuls
sbb
notl
mov
xchg
xchg
fcomi
pop
iret
cmp
xor
sbb
repz
ficompl
mov
push
ja
mov
aaa
bound
xor
insb
test
jno,pn
mov
cwtl
imul
adc
inc
cmpb
sub
xor
sbb
cmp
insb
and
ss
iret
xlat
rclb
sbb
cmc
push
sbb
sbb
pop
xchg
sub
or
xchg
mov
jnp
push
dec
pop
mov
outsb
popa
movsl
mov
mov
or
xchg
movsb
imul
repz
adc
xor
xor
fwait
ret
lock
cmp
mov
imul
mov
lahf
dec
mov
sbb
mov
xchg
rorb
gs
pop
rcl
add
imul
lock
test
fcmovu
ljmp
sti
in
mov
xlat
iret
cmp
mov
mov
repnz
adc
mov
into
or
push
into
imul
sub
xor
xchg
inc
or
xor
lret
and
and
mov
mov
push
rcr
xor
and
mov
sbb
shrb
loopne
arpl
jp
sbb
sahf
jne
mov
lret
pusha
jmp
fcoml
jae
sbbl
dec
mov
sub
rcl
pop
inc
stos
xor
jg
xor
lods
outsl
push
or
dec
jp
jp
add
iret
dec
loop
xor
mov
add
fdiv
mov
popa
inc
dec
dec
jns
mov
dec
stos
clc
jecxz
mov
cmp
dec
and
or
cmpsl
inc
and
adc
mov
sub
aas
lret
std
ret
mov
fucom
pop
in
lret
cs
xchg
insl
cmpw
jmp
adc
out
ja
inc
cltd
popa
mov
fdecstp
jo
fucomi
and
shll
and
orl
fwait
ret
leave
dec
leave
shrl
mov
sub
neg
add
das
ja
push
push
cltd
popa
mov
addr16
jnp
or
pop
lcall
cmp
jae
hlt
and
int3
clc
add
jge
sbb
cmp
lods
pop
jae
xchg
jo
aaa
xor
aaa
jecxz
inc
ds
lods
and
insl
jns
ficomps
add
ss
out
adc
rol
std
adc
pushf
xchg
cmp
dec
iret
in
mov
je
rcrb
in
adc
addr16
jg
out
push
mov
in
cli
pushf
push
lods
inc
int3
push
sub
mov
stos
add
push
enter
adc
ja
adc
jb
shlb
mov
hlt
and
xchg
dec
ss
inc
xor
mov
idivl
xor
loop
imul
test
inc
push
fdivp
jno
loope
xor
mov
test
mov
cmpsb
mov
cld
mov
ret
fistpl
scas
push
negb
test
imul
out
push
sbb
jbe
cmpsl
mov
mov
cli
ds
cmp
xor
aad
notl
mov
scas
and
gs
mov
test
sar
adc
or
jle
add
mov
je
fisttpl
or
mov
jmp
fldl
sbbl
push
outsb
xchg
sahf
adc
jns
fwait
mov
cwtl
xchg
ret
outsl
pushf
sbb
sbb
pop
xchg
adc
jo
push
push
sbb
das
imul
ja
ficomps
inc
inc
fistpll
std
mov
xchg
test
xchg
rorl
and
adc
cmp
mov
cmpsl
shll
int
pop
jecxz
xchg
hlt
pop
or
imul
mov
lahf
icebp
es
push
lods
test
sub
add
mov
scas
push
cmpsb
xor
dec
mov
and
loope
or
xchg
popf
or
jo
test
jmp
rolb
sbb
inc
insb
sbb
movsl
pop
push
sbb
xchg
fidivrl
inc
cmp
and
loope
out
or
mov
xchg
daa
ds
cmpsb
sahf
popa
lods
push
xlat
jmp
stc
xchg
popf
loope
pop
pop
andl
sbb
bound
pop
lods
in
int3
movsl
mov
lret
leave
sti
xor
pop
sarb
jg
push
lock
icebp
push
xor
sub
inc
cwtl
scas
push
sub
or
repz
sub
or
push
mov
ficoms
dec
rclb
pop
or
dec
pop
dec
repz
movsl
dec
and
add
rorb
movsb
push
pop
xchg
jo
push
or
dec
jle
popa
cltd
dec
in
sahf
mov
fdivr
inc
mov
or
jmp
pop
mov
icebp
aad
mov
mov
test
out
lods
mov
jge
jmp
sub
mov
jl
fisubrs
es
scas
adc
mov
push
and
insb
mov
or
lods
outsb
addr16
lret
lahf
movb
mov
xlat
mov
xchg
out
int3
shll
push
lods
sub
cli
adc
and
push
aaa
add
cmpsb
dec
push
iret
pop
sbb
in
lods
mov
mov
jg
dec
push
orl
adc
and
test
in
pop
je
aad
sbb
scas
cmp
push
or
icebp
mov
rorb
xchg
ljmp
sbb
loopne
xchg
adc
sbb
ljmp
push
in
dec
xorl
lahf
cmp
mov
add
lds
xchg
jno
pop
add
and
loopne
mov
in
sbb
bound
sahf
call
sub
adc
insb
inc
jp
cmp
and
and
push
das
sbb
adc
sub
or
sbb
mov
mov
sub
cmc
pop
ja
out
addps
outsb
ret
int3
mov
js
cld
lods
popa
xor
popa
xchg
dec
mov
or
pop
mov
mov
lret
stos
mov
xchg
pop
data16
ja
mov
call
lahf
andl
xchg
les
dec
push
jne
mov
into
inc
fists
and
lret
inc
mov
lret
pop
aas
or
mov
lods
sbb
push
pop
les
orl
imul
das
xor
cmp
fstpt
push
ret
and
test
mov
xchg
adcl
mov
pop
testb
mov
mov
xchg
pop
jb
out
xchg
pop
ds
xor
aam
movsb
pop
ficomps
lods
mov
mov
lods
add
stos
inc
ljmp
cmp
inc
out
xor
adc
imul
pop
adc
mov
in
or
or
inc
or
sbb
xchg
jne
mov
idivb
push
xchg
ljmp
jmp
popf
dec
inc
lret
jmp
out
out
cli
mov
dec
movsb
xor
pop
pop
scas
fstpl
xor
cltd
rolb
subl
inc
lcall
mov
jb
rcrl
lahf
xor
pop
inc
clc
mov
movsb
aas
mov
xchg
fs
sbb
test
lods
test
cmp
ja
pushf
add
dec
popl
xchg
pop
test
adc
movsl
cltd
data16
dec
mov
je
xorb
stc
jecxz
push
jbe
lahf
dec
xchg
sahf
rcrb
fnsave
addl
dec
mov
outsl
lcall
popa
mov
dec
jno
jle
xor
mov
sbb
out
lods
stos
mov
inc
les
les
jbe
xchg
lret
inc
in
mov
das
or
mov
sahf
mov
sbb
jp
int3
jb
pop
lahf
sar
cwtl
push
iret
bound
mov
imul
jne
ret
sub
ret
xchg
and
xor
addl
outsl
loopne
dec
push
jecxz
push
cwtl
add
fwait
aam
jge
push
dec
iret
js
outsb
jns
repz
into
sub
sbb
and
mov
mov
jo
iret
mov
xchg
sti
cltd
xchg
in
test
daa
xlat
jbe
push
jle
pop
cmpsl
dec
in
and
movsb
adc
mov
mov
mov
mov
jb
xor
ljmp
mov
jnp
pop
adc
pop
sbb
aaa
add
lods
fidivrs
test
push
mov
xchg
lods
push
or
or
cld
ret
cmp
clc
daa
jl
sub
notl
pop
out
ljmp
and
jae
mov
mov
add
outsl
sbb
dec
or
sub
xlat
mov
adc
mov
inc
xor
pusha
sub
sub
xchg
clc
adc
lret
sahf
push
cli
insl
popa
and
ss
push
pop
dec
add
jo
pop
jp
ficompl
mov
jnp
jnp
scas
xchg
out
out
popf
cli
fisubrl
stos
stos
shr
xchg
and
mov
mov
jg
mov
test
sar
decb
jne
mov
and
repnz
out
fabs
mov
and
std
dec
lahf
nop
add
rcr
sar
xlat
mov
out
shll
or
cmp
clc
mov
rclb
or
push
sti
outsl
mov
pop
rcr
pop
jp
out
add
mov
lahf
loope
nop
fnstcw
inc
push
das
cmp
or
mov
dec
test
sub
inc
jle,pn
stos
jg
out
popa
add
fsubrl
xor
incl
fld1
imul
pop
pop
mov
and
leave
sbb
mov
sub
mov
mov
loop
or
jns
data16
or
loop
and
dec
mov
xchg
mov
insl
cmp
mov
dec
push
push
ljmp
dec
push
xor
js
jmp
aas
xchg
jae
divb
lcall
push
nop
xor
movsl
pop
lock
mov
mulb
pop
shlb
ljmp
lods
insb
fmull
or
inc
int
fcmovnbe
pop
stc
pusha
push
mov
loop
adc
push
shrb
mov
arpl
sbb
popa
jne
mov
cwtl
sarb
in
dec
test
dec
shll
minps
inc
adc
enter
loop
lock
mov
ds
cld
jmp
xor
fnsave
addr16
cmp
mov
cltd
movsl
sbb
cmpsb
scas
sbb
push
xchg
stos
jmp
mov
in
mov
insb
and
pusha
adc
sbb
cwtl
sub
xor
xchg
push
imul
icebp
jno
into
pop
lods
popf
adc
and
lret
sub
cltd
dec
mov
popf
lret
test
xchg
sbb
sub
pop
clc
iret
mov
shll
push
testl
adc
dec
loopne
xchg
orb
adc
xchg
or
test
je
cmp
jg
daa
cld
loopne
jne
push
subb
xchg
add
dec
and
orl
fsubl
dec
inc
in
movsl
notl
and
outsb
push
test
mov
fdivrl
pop
xchg
push
sbb
xchg
and
cltd
jmp
jns
dec
sbb
jbe
cmpsb
lods
fisttpll
and
jne
push
leave
aad
popa
push
cltd
hlt
test
pop
pop
push
jo
xor
int3
jno
dec
dec
sub
scas
mov
jbe
sbb
mov
movsb
cmc
ret
loopne
dec
repz
pop
push
aas
push
adc
pusha
sbb
push
inc
out
adc
xchg
nop
cmp
mov
rcrl
nop
or
cmp
out
stos
lea
jmp
pop
shlb
xchg
js
loop
sub
mov
dec
hlt
ret
loopne
pop
xchg
mov
or
push
jle
mov
xor
cmp
add
mov
es
mov
in
ret
clc
lcall
gs
push
pop
call
ljmp
addr16
cltd
imul
adc
rorl
inc
ret
clc
repz
mov
lcall
xchg
mov
movsb
lret
ljmp
pop
add
movsb
mov
sbb
aad
ror
cmp
sbb
pop
xor
jl
js
push
push
dec
jo
sub
bound
addr16
pop
sbb
loope
aad
int
daa
lods
mov
mov
mov
ja
cmp
inc
leave
in
sub
push
pusha
sbb
sbb
mov
inc
xchg
sub
xor
lret
testb
test
push
pop
setp
cmpsb
sbb
xchg
push
shll
decl
fwait
stc
mov
fnstsw
pop
lcall
sbb
jno
nop
add
mov
adc
jecxz
lock
hlt
add
add
cmp
add
jp
push
popa
nop
push
in
mov
test
jl
inc
sub
pop
lods
arpl
ljmp
mov
add
xchg
leave
insl
cmp
push
mov
add
dec
and
popf
push
or
fwait
xchg
dec
sti
std
pushf
loop
push
push
push
scas
stos
inc
xor
cmpsl
add
xor
cmpsb
movsb
loope
cmp
stos
fcoml
lods
mov
sub
scas
push
fiadds
shll
dec
icebp
jae
xor
ret
les
jno
aam
adc
adc
dec
or
mov
test
xchg
jg
cmc
push
push
stc
xchg
addr16
mov
cmp
mov
popf
std
sbb
mov
and
cwtl
mov
aaa
lock
lahf
sbb
jmp
lods
arpl
jo
repnz
imul
outsl
loopne
add
sub
rcr
and
xor
xchg
pop
bound
inc
add
inc
sbb
sub
mov
repnz
imul
sbb
or
scas
pop
rolb
dec
push
loopne
fs
mov
cld
insb
and
fistps
mov
cli
imul
pop
push
inc
fnstsw
jb
jg
inc
stos
hlt
jnp
push
aam
clc
sub
sbb
fiaddl
es
ret
mov
mov
imulb
cld
lods
push
dec
arpl
outsb
jge
dec
xor
mov
push
sahf
xor
dec
mov
sub
mov
mov
adc
js
xchg
adc
push
ss
sbb
hlt
and
cmp
adc
leave
xor
jns
enter
lret
pop
push
pop
jne
shlb
cmc
mov
leave
mov
mov
les
daa
movhlps
push
dec
jge
add
pushf
ja
imul
xor
mov
out
or
or
mov
push
test
mov
lret
out
sbb
mov
pop
pop
repz
mov
test
mov
fs
push
jno
sub
push
add
or
sub
mov
mov
push
clc
and
or
rolb
sub
xor
sbb
ret
repnz
ja
dec
adcb
test
mov
outsb
fiadds
mov
cld
cmp
pop
inc
addr16
or
call
add
push
lret
ret
leave
in
add
je
std
and
add
push
xchg
and
fisttps
jge
push
pop
sbb
lods
fcomps
fstps
fs
pop
dec
lahf
sarl
in
inc
and
subb
mov
jnp
std
sub
pop
lock
adc
shlb
bsr
sub
jg
aaa
insl
or
cmp
ja
bound
std
adc
cs
mov
dec
mov
arpl
adc
sahf
pop
mov
mov
jg
cmp
out
icebp
inc
push
das
xor
jne
sbb
gs
js
add
mov
cli
in
mov
or
fbstp
mov
iret
repz
int
inc
adc
pop
mov
aad
lahf
stos
xor
jb
lock
test
mov
mov
iret
icebp
iret
ja
or
or
inc
lods
and
fcoms
mov
std
push
push
aas
xor
mov
stos
cmp
sbb
cmp
push
xchg
imul
xor
test
mov
in
popa
movsb
fists
scas
ljmp
jl
cmp
mov
mov
adc
es
jecxz
xchg
andb
lret
mov
pop
sub
pushf
mov
and
mov
outsb
xchg
mov
std
sbb
adc
sbb
inc
mov
repnz
negl
mov
add
push
test
xlat
es
jp
inc
push
lds
xchg
xor
mov
int
sbb
inc
pop
dec
mov
fldenv
mov
mov
inc
fmuls
push
xor
pusha
dec
adc
and
and
movsb
test
sbb
adc
insb
aam
leave
in
cmp
dec
sahf
inc
jecxz
enter
push
jl
insb
ds
xlat
sbb
pop
jbe
sbb
add
push
jne
mov
addb
fstps
xor
add
loop
dec
sub
mov
cli
and
shl
stos
dec
sub
jp
call
pop
sub
or
xchg
xchg
mov
in
adc
pop
xchg
lret
push
push
sbbb
fxch
ret
inc
cld
jb
es
popa
repz
jmp
cmpsb
aas
push
in
hlt
jne
pop
and
into
fisubs
pushl
mov
xor
aas
mov
adc
push
mov
push
and
movsb
sarl
cltd
dec
popa
mov
jo
rol
movsl
inc
pop
push
sbbl
xor
jmp
adc
popa
iret
sub
mov
clc
outsb
imul
loopne
cld
mov
imul
in
xchg
stos
mov
cs
movl
push
push
and
push
sbb
movsl
pop
outsl
jle
cmp
mov
pop
loope
jg
pop
cli
jmp
dec
jl
cmc
scas
xchg
leave
push
popa
dec
push
push
mov
adc
add
xlat
push
iret
arpl
mov
or
cmp
add
lock
adc
xchg
xor
mov
xchg
shlb
or
ds
inc
mov
fstpt
xor
mov
outsb
mov
shrl
add
pop
sbb
fucomi
push
ret
add
std
sti
push
xor
aam
insb
jmp
leave
pop
and
dec
lcall
adc
xor
leave
jp
dec
pop
jge
sbb
and
shl
jmp
test
pop
or
dec
mov
leave
xchg
mov
inc
in
aaa
aam
js
dec
pop
cld
xchg
xor
lahf
push
cltd
aas
xchg
popf
in
jae
lret
mov
je
pop
pusha
in
ss
fidivs
xor
push
jae
jae
xchg
dec
jno
andb
pop
arpl
out
call
scas
dec
inc
xor
data16
sti
aas
rorl
mov
shrl
fwait
lock
daa
cltd
test
xchg
pop
add
cmp
dec
loope
sbb
mov
test
add
adc
push
cmpb
add
and
cmpsl
stos
cmpsl
cltd
stos
in
imul
fs
adc
nop
mov
adc
xor
xor
stos
fs
jne
cmp
and
inc
xchg
xchg
mov
ds
int
pop
lret
and
mov
test
xor
cs
dec
fistpll
pop
pop
mov
arpl
inc
fistpll
mov
pop
icebp
xor
scas
sbb
mov
sub
inc
lds
loop
pop
in
cmp
faddp
adc
cld
push
mov
or
fs
movsl
stos
loop
into
orb
pop
sbb
std
shl
add
es
cmp
mov
popf
inc
mov
inc
adc
es
int3
out
movsb
in
adc
mov
js
sub
popa
movsl
jecxz
das
loopne
push
mov
lret
movsl
and
mov
movsb
xchg
push
shll
jno
dec
xor
pop
jle
js
add
mov
lock
cmc
inc
and
in
mov
clc
jne
or
ds
xor
shrb
test
cmp
pusha
jge
mov
lahf
and
int3
inc
mov
push
sbb
aam
ds
and
xlat
mov
and
fldlg2
mov
or
sbb
lret
cli
and
sbb
push
mov
push
shll
adc
pop
stos
shrl
frstor
and
inc
dec
out
mov
mov
cmpsl
outsb
or
xchg
xor
xchg
adc
cli
shrl
shl
addr16
outsb
xchg
lahf
push
scas
inc
inc
mov
outsb
pop
jle
pop
cmp
loope
mov
xchg
inc
rclb
jp
jo
jns
and
mov
xchg
les
stos
test
lods
lods
mov
sarl
push
into
shl
cmp
and
ja
movsl
lret
cvtps2pd
in
and
pop
pop
cmp
aas
push
imul
test
xor
dec
pop
movl
fildl
in
cmp
je
xor
push
mov
gs
stos
fdivrp
in
fdivs
movsl
rorb
fs
repnz
imul
mov
aas
loope
in
int3
rolb
aam
sub
orb
icebp
inc
ljmp
imulb
inc
fmul
dec
cmp
mov
cld
cmp
push
insl
push
aam
jns
or
or
jno
xchg
imul
sub
mov
cmp
push
in
loope
sbb
pop
andb
push
outsl
sub
xor
jno
jg
add
sbb
cmpsl
push
mov
jns
xchg
ljmp
adc
repz
cmp
or
in
int3
rclb
adc
xor
push
push
fs
add
mov
out
push
jo
push
popf
outsb
cwtl
or
pop
out
and
jae
xorl
jmp
sbb
push
lods
ret
push
mov
jmp
mov
xor
scas
dec
mov
push
sahf
and
xchg
and
jle
inc
inc
xchg
jmp
mov
jnp
insl
out
dec
cmp
xrelease
mov
pop
int
mov
cld
add
sub
or
in
or
sub
lcall
pop
mov
pop
int
mov
xchg
or
pop
cmp
sub
dec
insb
fs
loopne
gs
scas
cmp
or
xor
stos
xor
iret
nop
daa
std
pop
xor
add
pop
adc
jg
mov
or
pop
pop
mov
sub
inc
mov
ds
test
add
aas
ss
cmc
jnp
cmc
lock
popa
push
mul
sub
and
xchg
adc
movsb
hlt
adc
subl
mov
popf
fldl
and
inc
xchg
inc
out
das
lret
push
mov
jg
sub
push
sbb
dec
sub
in
outsl
push
jae
add
lock
cmp
inc
leave
fstpl
xchg
sbb
sub
fs
adc
loope
cmp
mov
jl
push
js
sbb
adc
or
dec
add
icebp
addr16
sbb
lea
xor
or
xchg
xchg
cmp
add
sbb
pop
addr16
inc
xchg
pop
jo
push
sbb
clc
shl
ljmp
inc
jo
sahf
xchg
add
das
sbb
ret
push
pop
push
shlb
iret
sub
xor
jne
xlat
sbb
inc
fdivl
lea
out
pop
pop
sbb
fbstp
in
mov
mov
mov
stos
fwait
push
scas
in
jb
xchg
arpl
add
cmp
out
pop
pop
mov
fistps
sahf
jns
jb
adc
mov
jno
mov
xor
jp
movsl
jo
sub
and
scas
jp
das
pop
add
mov
mov
out
es
cmp
arpl
inc
adc
loopne
insl
in
inc
sub
jp
sahf
xor
sbb
fdivrp
pushf
jne
rcll
sbb
scas
cmp
add
pushf
ret
and
and
sbb
dec
sub
int
mov
mov
pop
xor
test
loopne
adc
cmp
lds
pop
into
mov
mov
mov
sbb
rolb
add
ret
and
or
scas
insl
out
push
xchg
pop
xchg
sahf
lcall
mov
sub
dec
jno
rcrb
jns
out
movsb
inc
rcll
mov
fsubs
xchg
adc
xor
mov
out
adcl
dec
add
out
scas
cwtl
mov
call
xchg
pop
inc
add
cwtl
mov
lcall
cltd
addr16
pop
mov
pop
push
cmp
adc
loope
clc
lret
lea
movsl
inc
pop
cmp
sahf
or
push
pop
shl
xchg
xchg
sahf
jb
mov
fstpl
mov
out
test
ret
jp
mov
or
cmp
fldl
addl
jp
push
xchg
push
dec
lods
sarb
pushf
stos
push
icebp
outsl
out
pop
pusha
call
mov
dec
push
xchg
mov
fs
mov
lcall
imul
subb
mov
jmp
push
idiv
xchg
pop
sbb
aam
ds
xor
add
imul
adc
mov
jge
add
outsb
pop
ret
push
sub
cmp
sub
mov
mov
mov
jne
mov
push
dec
adc
std
push
xchg
ss
add
ret
mov
mov
mov
mov
adcb
pop
out
dec
movsb
xchg
or
pop
nop
cmp
or
mov
sahf
insl
mov
sbb
mov
push
movsb
cwtl
pop
ret
push
sbb
into
aaa
les
lret
pop
inc
xor
and
jno
into
daa
dec
sahf
sahf
cs
icebp
add
icebp
fdiv
dec
push
fisubs
mov
push
clc
jle
cli
dec
push
add
jae
pushf
xor
add
out
mov
test
or
mov
jbe
mov
inc
inc
push
cmpsl
add
xchg
push
gs
popf
xor
mov
cwtl
dec
mov
or
shl
test
mov
aam
and
int3
cmpsl
jmp
xchg
dec
test
dec
xorb
mov
mov
rolb
xchg
push
xchg
test
into
dec
push
ja
rorl
cli
cld
xor
rcl
loop
arpl
jo
shrb
aaa
lock
rolb
rol
icebp
arpl
repnz
nop
fidivl
dec
xchg
popa
mov
jb
fidivrs
lods
push
mov
rcl
mov
cs
mov
dec
in
cmp
mov
xchg
jbe
outsl
testl
repnz
mov
pop
xchg
mov
fsincos
cmp
add
mov
pop
ljmp
sub
mov
sub
lret
je
stos
sarl
and
into
mov
pop
jge
sahf
insb
xor
out
int3
cmpsb
stos
xchg
in
mov
xchg
enter
sbb
mov
jbe
dec
mov
dec
ret
fists
cmc
push
nop
roll
xchg
sti
mov
jno
pop
mov
mov
dec
push
in
dec
lods
cmp
xor
and
mov
fisttps
ret
pop
outsl
mov
pop
mov
rcll
jnp
shl
test
divb
sti
bnd
lahf
icebp
xchg
fisttpl
mov
or
movsl
je
fistps
and
jg
push
xor
inc
jl
movq
adc
inc
aas
outsl
loopne
add
jo
cmpsl
push
push
inc
jne
inc
mov
xor
pop
sbb
adc
inc
out
dec
push
je
push
clc
xcrypt-ecb
cmpsl
lret
shlb
add
js
add
xlat
inc
sbb
xchg
in
sub
ficoms
push
dec
mov
out
or
cmp
fs
pop
xor
mov
mov
lret
push
jmp
cltd
imul
jo
add
call
cltd
mov
jl
pop
stos
jb
jecxz
and
jp
add
hlt
sbb
addl
push
cmpb
inc
sbb
les
jo
pop
jge
das
or
fidivl
mov
fwait
jno
pop
mov
out
adc
sbb
xor
iret
jbe
rolb
lods
mov
cwtl
mov
mov
sarl
roll
xorl
mov
ficompl
into
xor
mov
mov
shr
xor
push
xchg
pushf
cmc
scas
bound
and
add
pop
add
push
adc
lcall
sub
repz
adc
fnstenv
adc
icebp
push
push
lcall
xchg
scas
pop
jne
inc
or
and
cli
push
addr16
loopne
nopl
out
pop
and
pop
inc
sub
jmp
dec
sbb
lds
shll
pop
mov
insb
mov
pop
xchg
or
loopne
out
mov
inc
mov
stc
es
dec
shl
cld
outsb
jle
jne
fsubrs
pop
loope
jmp
pop
sbb
inc
cltd
mov
xchg
leave
sub
fisubrs
adc
jbe
movb
sub
mov
jle
jmp
rolb
divb
xchg
cs
daa
hlt
pop
imul
jbe
mov
cld
ja
stc
xor
lock
push
xor
or
sbbl
inc
mov
push
je,pt
cmp
scas
and
mov
pop
int
pop
mov
xchg
hlt
sbb
fld
scas
popa
push
leave
and
inc
sbb
xor
jne
xchg
das
and
pusha
hlt
inc
pop
sbb
jns
and
cmp
adc
cmpsl
inc
out
xchg
cli
mov
sahf
inc
js
adc
adc
lods
stos
js
adc
popf
inc
rclb
fldenv
mov
cli
or
jns
repnz
rcll
in
pop
stc
add
cld
inc
sbb
outsl
xchg
pop
das
and
fisubl
rcr
in
pop
mov
lods
mov
nop
mov
popf
jmp
pop
sbb
mov
iret
sub
push
dec
lea
outsl
lahf
addr16
loop
insl
mov
gs
dec
mov
jl
call
xlat
pop
cmp
hlt
rcrl
inc
int
sbb
sub
and
call
jbe
sbb
in
mov
sub
sub
jp
add
fadd
mov
subl
cld
mov
mov
add
imul
scas
icebp
lret
push
ret
mov
outsl
in
jge
jbe
fadds
loope
mov
into
je
ret
mov
loop
push
loopne
loopne
fwait
in
mov
shrb
mov
and
imul
shll
fldl
ds
into
and
pop
das
movsl
mov
xor
jae
pop
adc
popa
push
lea
es
hlt
ret
inc
stc
add
xor
sbb
shl
adc
inc
lret
out
xchg
xchg
xchg
iret
push
out
inc
sbbb
flds
mov
adc
rep
jle
fs
dec
xchg
push
leave
xlat
pusha
les
cmp
dec
push
ds
int
push
repz
push
cmp
scas
pop
jecxz
jmp
add
or
xchg
adc
add
movsl
sub
sub
iret
fs
sub
dec
mov
xchg
sub
out
jmp
aaa
mov
adc
in
mov
jbe
adc
ja
cmpsb
and
xchg
or
lock
mov
shlb
xor
push
in
add
into
ret
mov
cmp
jge
ret
sub
cmp
mov
ret
push
mov
jmp
gs
fwait
mov
jns
inc
fistl
les
sub
sbb
jno
xchg
or
pop
inc
in
push
arpl
sub
mov
hlt
and
sub
inc
jnp
or
push
cmp
push
adc
sahf
addr16
ljmp
fsts
ficompl
xor
mov
jne
xchg
ja
adc
rcrb
imull
js
mov
push
pushf
add
dec
lea
movsl
xor
loope
cmc
xchg
shrl
pusha
push
mov
mov
cmp
sahf
ja
xchg
sbb
fimull
add
or
mov
xchg
sbb
mov
sub
push
das
add
aad
and
jnp
and
sbb
pop
xor
dec
adc
mov
mov
mov
inc
sahf
cld
out
popl
scas
push
inc
lods
fnstsw
dec
push
es
enter
stos
addl
dec
xlat
ja
and
nop
iret
cmpsl
psubd
jo
sub
push
in
mov
sbb
sbb
pop
in
sub
cmpb
out
loop
movsl
inc
insl
jmp
stos
test
xchg
icebp
mov
inc
addb
mov
adc
jl
test
xchg
test
sbb
ja
inc
jmp
enter
sub
sbb
xor
out
pop
js
ror
rolb
arpl
loop
xlat
je
add
loope
dec
xchg
or
fsubl
popf
add
pop
pop
cli
loop
repnz
rol
sub
sbb
frstor
and
cmp
mov
scas
adc
arpl
divl
jne
sbb
aam
mov
push
xchg
out
cltd
rcrb
jp
mov
jge
out
lcall
push
xchg
cmp
mov
adc
movsl
inc
fsub
call
add
jbe
movsb
mov
push
fistps
stos
mov
mov
repnz
loope
mov
pop
out
lock
cli
jp
mov
xchg
jp
dec
dec
rcrl
sti
in
sti
aas
movsl
ret
push
ss
adc
lcall
scas
or
sbb
aas
mov
call
sub
inc
mov
je
and
lcall
lea
imul
dec
test
push
in
cmpsl
roll
cli
loop
push
xor
push
mov
mov
ljmp
shlb
aaa
ret
lods
adc
cmp
sbb
jb
adc
stos
pop
add
jge
iret
movsb
push
out
adc
add
ret
pushf
ja
fsubrl
xchg
aam
mov
loope
inc
loop
repnz
mov
adc
adc
insb
jb
pop
mov
dec
imul
push
cmp
or
or
lcall
test
and
jno
dec
cmc
and
fs
ret
jae
adc
loopne
pushf
add
fs
jg
xor
mov
sub
add
cmp
push
and
inc
hlt
and
hlt
pop
outsl
ret
outsb
pop
adc
adc
mov
pop
and
sbb
lods
es
sbb
or
fs
dec
addr16
mov
and
sbb
lea
and
incl
mov
cltd
push
enter
mov
or
jmp
add
sbb
je
xchg
or
cmc
rol
push
adc
adc
pop
jp
cmp
cmpl
das
jl
pminub
rorl
and
das
sbb
fdivrl
pop
mov
xor
into
pop
jecxz
dec
mov
mov
test
mov
or
adc
cli
fdivrp
add
mov
clc
inc
dec
mov
icebp
adc
fincstp
inc
loopne,pn
sar
call
xorb
pop
push
jg
push
push
lock
sub
test
in
xorb
insb
sahf
cltd
cwtl
gs
add
lcall
and
lods
mov
roll
into
dec
or
out
es
sub
mov
dec
daa
push
gs
bound
jns
lods
cmp
fsubs
stos
test
push
fsts
ljmp
out
jle
cwtl
push
loop
dec
inc
test
jecxz
enter
aad
inc
xor
clc
or
cmp
push
xchg
cmpsl
out
push
xchg
out
aas
mov
in
dec
sbb
bound
fstpt
or
test
jb
popa
mov
or
iret
add
int3
or
cmp
cmpsl
inc
mov
lret
cmp
push
je
cmp
popa
jecxz
cltd
push
cs
cmp
dec
jmp
jns
mov
cmp
sbb
pop
addr16
cmpb
mov
lret
sub
xor
ja
adc
mov
adc
pop
rolb
jge
jns
xor
jns
jae
mov
mov
std
stos
mov
pop
xor
mov
sub
repnz
jo
js
sbb
scas
aas
pop
jo
inc
jl
jmp
adc
pop
inc
out
push
xor
push
iret
sarb
into
pop
cmp
repnz
jbe
cmpsl
das
iret
pop
mov
or
aaa
xchg
lret
pop
and
test
jno
lea
stc
pop
pop
or
pop
out
add
pop
in
scas
or
repnz
cmp
inc
jns
cmp
bound
dec
bound
clc
pop
mov
jb
fucom
fwait
loop
xor
sbb
insl
sti
lret
add
push
sub
in
push
int3
ja
loope
fdiv
push
int3
pop
xor
jno
jecxz
sub
xchg
negb
aad
fwait
ror
sbb
dec
cmp
stos
orb
lea
pop
fsubrl
cmpsl
sti
dec
xchg
bound
sub
and
dec
into
out
pushf
test
stos
js
push
or
divl
jb
icebp
hlt
leave
aas
dec
inc
hlt
cmp
mov
sub
icebp
sub
xchg
xlat
xchg
cs
xchg
divb
jnp
mov
aad
xlat
mov
push
data16
bound
std
mov
pop
in
lret
cwtl
cmpsl
sbb
ss
stos
push
cmpsb
cmpsl
jg
out
mov
test
fnstenv
ret
push
movsb
xchg
ja
mov
mov
cltd
jne
lcall
outsb
sti
cmc
sub
cmc
hlt
bound
sti
xchg
push
mov
mov
inc
call
js
js
cmc
testl
or
sbb
add
and
inc
fisubrs
aas
xor
cmp
dec
je
std
aas
test
mov
dec
or
cwtl
outsb
mov
out
lds
imul
mov
xorb
mov
shr
mov
xchg
js
es
dec
xor
cmp
cltd
mov
out
imul
cwtl
push
pop
movsb
cmc
add
sbb
sahf
xor
stc
enter
cmpsb
sbb
inc
or
mov
push
stos
std
lret
lea
pop
sub
inc
push
mov
test
mov
hlt
loop
or
pop
and
push
mov
push
test
jae
mov
cmp
fs
jge
iret
cmpsl
ret
dec
mov
inc
cmpsb
lock
out
hlt
ljmp
or
pop
rclb
cmpsl
cmp
call
pop
pop
in
imul
cmpsb
popa
icebp
fistpll
inc
mov
movsl
fs
push
into
xlat
sbb
pop
fldt
lea
cs
xchg
and
out
movsl
jo,pn
movsb
or
jnp
out
rolb
mov
lods
and
call
mov
sub
xchg
xchg
cmp
fcompl
scas
push
insl
out
ljmp
mov
mov
jnp
mov
fistpl
sub
cwtl
movsl
inc
push
aad
add
and
sbbb
in
pusha
in
fmuls
std
ljmp
in
adc
adc
sbb
lock
sbb
cli
and
popf
cmp
jge
lea
arpl
lea
cld
out
mov
xor
inc
subl
jne
popw
sbbb
mov
out
mov
div
into
fwait
mov
jl
fistps
cs
jp
pop
test
pop
xchg
cmp
and
mov
push
pusha
iret
sbb
and
enter
fsubs
and
jmp
sbbb
cmp
push
loopne
pop
mov
lods
mov
sub
xor
outsb
dec
test
lods
adc
or
and
fcompl
adc
inc
mov
mov
andb
int3
add
mov
or
fisubs
js
lret
and
js
into
sbbb
cmpsl
push
sub
sub
and
mov
jnp
ds
les
xchg
inc
push
imul
adcb
insb
loopne
push
mov
pop
adc
stc
pop
sahf
pop
je
and
mov
call
inc
insl
outsl
shll
ficoml
cmp
jge
shl
gs
push
ljmp
xor
pop
mov
sub
dec
pop
arpl
mov
mov
in
shl
repnz
stc
pop
rcll
cmp
or
jg
sub
pop
unpcklps
lea
jae
xchg
mov
sahf
scas
jns
rorl
xorl
fistpll
lods
push
lods
adc
lcall
std
sahf
pop
sbb
outsb
and
xchg
xchg
mov
cltd
nop
stos
xor
pop
jle
dec
in
enter
xor
aaa
push
in
ljmp
inc
outsl
jns
fmull
or
popa
xchg
cmp
xlat
cmp
pop
scas
in
xor
adc
inc
mov
pop
sub
sub
mov
or
in
fnstcw
in
xchg
adc
mov
and
out
jge
arpl
xchg
mov
sub
in
push
ficoms
sti
dec
and
cmp
mov
mov
sub
icebp
arpl
jnp
mov
gs
and
or
xor
mov
jle
mov
loope
mov
pop
dec
data16
mov
aad
mov
and
mov
xorb
jmp
inc
dec
mov
repnz
push
nop
insl
dec
lahf
fneni(8087
outsl
mov
and
imul
add
dec
sti
in
ret
sbb
popa
pop
mov
ret
add
mov
cmpsl
fsubr
or
fwait
les
xchg
lret
loopne
movsl
sbb
call
cltd
cmp
push
lds
xchg
popa
lret
adc
mov
jl
das
mov
je
mov
sahf
cld
stos
das
sbb
jnp
sub
mov
int
roll
jecxz
sub
add
add
pop
mov
cmc
mov
cmp
mov
ds
inc
int
push
das
dec
sahf
loop
gs
popf
cmp
in
subl
popa
push
js
daa
scas
rclb
insb
dec
jo
dec
push
adc
and
call
dec
push
add
gs
stos
nop
sahf
fnstenv
lcall
pop
repz
into
cmp
stos
daa
xchg
pop
xchg
mov
xchg
lods
mov
xchg
pop
leave
inc
cmpsb
lret
lcall
ljmp
jmp
fisubs
movups
fists
dec
inc
stos
mov
lret
mov
out
dec
cld
mov
sub
in
mov
dec
or
fs
add
cmpsb
xor
cld
bound
mov
mov
inc
pop
mov
fsubrs
das
and
mov
jae
fiaddl
mov
mov
les
sti
loope
lcall
lods
xchg
cs
stos
fstp
rolb
int
inc
inc
das
lahf
ja
aas
sbb
or
jmp
pop
push
sub
inc
mov
cmp
xor
je
xchg
stos
pop
lods
call
rorl
sbb
mov
lret
sbb
into
in
cmp
push
pop
add
sbb
jmp
cld
or
sub
fists
pop
pop
mov
mov
sbb
adc
cmpsb
xchg
sbb
mov
push
in
stos
pop
push
xor
sbb
jns
mov
lods
nop
pop
dec
scas
mov
addr16
pop
sub
adc
and
in
jmp
loop
test
push
je
leave
sbb
movl
mov
fimuls
lret
testb
scas
jg
adc
dec
jg
xchg
inc
lock
imul
pop
jno
or
xchg
dec
cmp
insl
loope
int
fidivrs
sar
sub
mov
pop
mov
cmp
mov
xchg
inc
push
xchg
add
mov
test
dec
jg
xchg
cmp
and
push
jle
add
pop
cli
jne
sub
cmpsb
or
lcall
lahf
push
into
add
mov
inc
fcoml
or
in
xorl
push
sub
clc
je
add
addl
xchg
fcompl
xor
cmpsl
ds
cmp
repnz
pop
mov
fbstp
pop
xchg
pop
pushf
and
popf
filds
fdivs
movhlps
jae
in
std
lea
idiv
inc
ret
add
ljmp
push
xchg
push
ljmp
jae
and
aam
or
lods
push
fstl
aas
popf
out
cmp
pop
fisttpll
xor
in
push
fsubl
call
sbb
movsb
push
push
mov
sub
adc
cli
daa
sbb
ret
fcoml
sbb
ficompl
hlt
in
pusha
add
fisubrs
jbe
mov
push
pop
add
mov
pop
and
repz
in
shrb
or
loope
movsl
addl
add
outsl
push
mov
sub
mov
inc
adc
push
dec
jae
cmc
sub
push
out
rcrl
adc
movsl
pushf
pop
or
movsb
cmp
sub
cmc
jp
mov
sahf
fildll
mov
scas
xchg
hlt
mov
jb
in
je
pop
pop
jmp
xor
add
xor
shrl
cwtl
rolb
orb
rorl
and
out
sbb
sti
pop
incb
cmp
fucomip
fstpt
fisubrs
jnp
mov
sbb
notl
cwtl
nop
pop
add
pop
xchg
loope
jo
xchg
cmpsl
movsl
cs
aaa
loope
test
xlat
cmp
sbb
pop
and
aas
mov
jp
mov
jnp
stos
sti
mov
pop
or
int
adc
and
outsb
ljmp
dec
xchg
jle
adc
adc
stos
cwtl
mov
cld
add
sub
mov
and
in
mov
lahf
cmpsb
and
popa
mov
add
mov
into
in
mov
and
xchg
lret
rcrl
push
insl
test
add
sbb
jns
push
out
loope
jb
sarb
outsb
add
and
sbb
push
ret
pop
rclb
mov
int3
inc
fists
not
cwtl
fisubrl
cmp
or
aad
mov
out
scas
sbb
push
ja
xchg
call
fs
stos
mov
add
test
adc
inc
notl
pop
call
stos
mov
scas
cmpsl
xchg
leave
sub
add
mov
addr16
cwtl
enter
ljmp
sub
nop
lods
test
lahf
cmpsb
dec
lds
xchg
inc
xorl
xchg
repz
dec
fnstsw
cmp
lods
cs
jno
jae
jle
add
pop
pop
inc
mov
lock
xor
shrl
jns
into
or
lcall
in
or
sub
rorb
sub
cmpsb
dec
std
nop
mov
inc
fsubs
jb
ljmp
mov
inc
mov
jne
push
cmp
add
enter
dec
repnz
jns
dec
bound
cmc
dec
sbbb
addr16
ja
pop
mov
addr16
lret
nop
in
jne
popa
or
xchg
or
fucom
mov
stc
adc
mov
aas
ss
jl
test
cmc
pop
or
cmpsl
lcall
cwtl
xchg
arpl
or
push
or
js
test
mov
dec
sub
movsl
dec
fidivrl
mov
xchg
xchg
pop
xchg
inc
push
int3
inc
imul
mov
mov
int3
pop
pop
test
mov
and
fcmove
scas
loope
add
fst
test
pop
int3
jmp
mov
fwait
inc
in
imul
scas
ds
ret
ljmp
fsub
mov
xchg
pop
or
iret
clc
lcallw
das
xchg
insl
mov
stos
flds
lock
jne
iret
sbb
pusha
dec
mov
dec
int
frstor
xchg
pop
and
mov
and
fsubl
inc
scas
rcrb
jne
arpl
into
jecxz
and
jecxz
push
and
dec
jg
mov
cmp
aas
or
clc
cmc
mov
clc
nop
repnz
xchg
stos
mov
jbe
pop
xchg
inc
or
fistpl
jecxz
add
cmp
nop
jg
lods
xchg
cs
pusha
mov
xchg
insl
arpl
xchg
aad
mov
add
les
mov
aam
inc
mov
aad
call
or
xchg
xchg
scas
aam
dec
adc
das
mov
and
test
mov
jge
enter
mov
xchg
mov
out
xchg
sarb
in
or
lock
and
push
repz
mov
pop
popa
pop
pusha
xchg
lea
arpl
jp
adcb
and
dec
cmp
shlb
test
jno
add
es
cmp
mov
adcl
adc
cld
fsubrs
notb
inc
ljmp
xor
ljmp
fisubrl
inc
push
pushf
mov
cmp
mov
push
add
sbb
js
pop
leave
pop
into
push
pusha
sbb
in
rcl
mov
push
sbb
cltd
repz
enter
mulb
mov
adc
xor
les
test
lahf
and
mov
or
inc
pop
insl
aaa
and
mov
sub
adc
or
lret
xor
into
into
pop
fmuls
pop
stos
mov
pushf
xchg
enter
das
push
aaa
mov
mov
daa
idivb
xchg
sti
ret
and
scas
jl
and
jecxz
insb
add
mov
xor
imul
aas
out
out
push
int3
sbb
mov
out
repz
xchg
test
push
xchg
fnstcw
addr16
mov
aaa
pusha
pop
inc
ret
push
out
lahf
mov
xor
xchg
pop
subb
ss
dec
data16
push
pop
push
int3
mov
pop
aaa
jns
mov
lret
jp
pop
mov
inc
push
cltd
add
iret
popa
pop
imul
sub
dec
xchg
fists
xchg
jb
mov
popl
xchg
xchg
or
std
into
mov
mov
mov
dec
in
push
or
dec
popa
insl
add
push
insl
rcll
stc
test
pusha
ljmp
cmp
push
mov
or
cmc
test
das
daa
sub
push
push
mov
dec
cmpsb
outsb
scas
shll
jmp
push
cmc
and
lock
dec
jns
mov
jnp,pt
mov
lods
push
mov
subl
jl
and
mov
jbe
push
lret
enter
cmpsb
and
inc
aam
and
jb
jp
into
clc
lret
and
repz
lods
and
das
pop
ss
xchg
ret
or
xchg
and
test
or
stos
sbb
mov
popa
sub
mov
test
ljmp
stos
sbbb
dec
imul
insl
xor
sbb
iret
adc
rcr
dec
push
xchg
xor
xor
adc
stos
outsl
push
push
ret
outsl
les
dec
cwtl
lret
jnp
inc
ss
icebp
mov
add
stos
icebp
cwtl
adc
lahf
int3
xchg
outsb
loope
mov
sbbl
push
xchg
mov
outsb
mov
xor
cmp
xchg
jmp
mov
push
repnz
mov
ja
cwtl
mov
mov
jo
or
mov
xchg
cwtl
adc
push
fcom
pushf
mov
lret
in
mov
sbb
mov
xchg
jp
mov
mov
scas
or
pop
sbb
pop
out
mov
shlb
inc
outsl
insb
xlat
out
cmp
cmp
mov
and
pop
arpl
pop
stos
xchg
mov
loop
push
mov
mov
rclb
and
xchg
pop
xchg
sbb
cltd
xor
call
dec
fisubs
scas
icebp
mov
popa
pop
pusha
sbb
xchg
xchg
xorl
lock
or
movsb
cs
xlat
mov
sbb
data16
pop
dec
imul
sbb
jg
fidivl
shr
push
or
lcall
push
popa
rep
popl
scas
inc
mov
adc
push
sbb
popa
push
lcallw
jnp
or
minps
mov
mov
jge
pusha
jge
or
in
sub
or
or
addl
fucomp
cmp
dec
sub
pop
jns
call
mov
push
insl
xchg
xchg
dec
sub
push
mov
sbb
pop
xor
aaa
data16
out
xchg
repnz
mov
cmp
jmp
out
pop
inc
cli
stos
adc
fnstcw
ficompl
adc
movsl
mov
test
dec
outsb
loopne
shrl
jno
mov
aas
add
imul
dec
dec
lods
in
push
into
cltd
and
ret
dec
rorl
pop
adc
xlat
jbe
and
cmp
inc
outsl
dec
mov
and
imul
inc
scas
or
mov
jp
hlt
std
enter
inc
adc
outsb
in
sub
xlat
mov
scas
xor
pop
fxch
mov
shll
mov
clc
mov
divb
es
add
dec
cwtl
add
adc
mov
aaa
test
xchg
movaps
sub
or
out
sub
mov
sub
mov
inc
sbb
xchg
inc
mov
cld
add
inc
scas
and
divl
and
clc
rclb
ret
leave
sub
xor
lock
mov
cmp
addr16
imul
lock
cwtl
stc
xor
stos
dec
lock
or
pop
adc
mov
daa
pop
and
push
jne
inc
movsb
mov
shl
sbbl
ljmp
cmpsb
fisttpl
xchg
pop
and
dec
aaa
popf
icebp
aad
sub
mov
sub
adc
lret
ret
pop
test
xor
pop
push
lcall
xor
mov
int3
mov
xchg
test
sbb
inc
mov
push
or
std
push
jb
insb
jno
push
mulb
push
mov
sbb
fcom
iret
outsl
loopne
data16
fisubrl
mov
adc
out
push
into
in
mov
adc
clc
into
into
mov
dec
push
fimull
inc
jo
outsb
jno
jbe
aaa
add
notl
push
fdivrl
aad
mov
outsl
mov
cmp
sub
mov
mov
mov
std
mov
jl
adc
insb
sub
aaa
scas
xlat
lea
jno
xor
fucomp
xchg
add
enter
cmp
ret
or
imul
insb
cmc
sbb
insb
and
xor
mov
or
or
movsb
pusha
push
ja
xor
pop
fsubrs
pop
ss
push
xchg
aas
rcll
mov
dec
stos
adc
dec
mov
icebp
outsb
sbb
jle
and
push
cmp
push
imul
out
or
sarb
stos
inc
jae
and
jmp
cltd
push
int
es
adc
ja
or
pop
xlat
xchg
push
sub
xchg
xchg
lcall
mov
and
in
mov
fcoml
arpl
jbe
and
sub
mov
aas
dec
insl
dec
sub
inc
push
xchg
xchg
mov
jnp
test
nop
fimull
xchg
add
mov
mov
adc
mov
repz
dec
sub
dec
pop
xchg
insb
mov
mov
mov
cmp
mov
fidivrs
mov
jmp
and
and
sbb
gs
fsubs
sub
outsl
into
sbb
das
lock
jne
push
cmp
and
push
xor
jno
add
mov
or
dec
xchg
push
sub
popa
mov
xchg
test
inc
or
inc
or
and
jle
mov
adc
mov
fsubrs
pop
add
jo
pop
sub
fcoms
cmp
fnstsw
mov
stos
fistpll
outsl
in
push
sbb
stc
scas
jnp
loopne
enter
cwtl
cli
fildll
mov
jmp
mov
push
jge
cwtl
add
outsb
sub
adc
ret
push
pslld
imul
shll
and
push
imulb
and
mov
pop
sub
mov
aam
aaa
insb
dec
test
jp
mov
ja
xchg
fcmovnbe
push
or
out
int3
rolb
clc
mov
sbbb
fs
push
adc
stc
andl
cmpsb
cmpsl
push
sbb
pop
int3
fs
js,pt
fs
jecxz
cld
jno
pop
pop
clc
jge
gs
jp
loopne
popa
adcb
add
data16
xor
ret
push
jne
sbb
lcall
jb
addr16
lcall
scas
or
rcll
jmp
inc
cld
js
filds
js
xor
xchg
sub
sub
push
sbb
and
xor
add
xorb
inc
scas
dec
pop
jmp
xor
sti
push
jne
stos
push
mov
ljmp
jne
sub
xchg
std
dec
xchg
outsb
bound
ljmp
repz
in
add
add
or
and
adc
pop
repz
addr16
cltd
mov
in
dec
dec
sarl
shl
testl
mov
frstor
mov
xor
pop
mov
xor
xor
call
ja
repz
cmc
mov
test
adc
push
les
std
and
clc
das
cmpl
addr16
jge
cld
stos
enter
mov
fisubrl
adc
inc
aad
aaa
or
stc
nop
js
fcoml
js
call
aas
insb
scas
sub
sub
jnp
leave
push
fists
ret
cli
xchg
ret
xor
cmp
cmp
test
cmpsl
sbb
mov
or
sbb
pop
jno
imul
inc
dec
scas
insl
loopne
jno
xor
adc
add
imul
mov
inc
push
ljmp
add
imul
jmp
push
test
mov
push
loopne
out
xor
mov
mov
push
ds
add
sbb
sub
and
cmpsl
jle
push
xchg
jno
lahf
fidivrs
lcall
gs
in
scas
and
pop
popl
cmp
cmc
cmc
outsb
stc
shlb
xor
or
xchg
pop
fs
mov
mov
adc
jae
jge
out
mov
js
movsb
rcrl
adc
xor
sahf
jmp
insl
xor
jae
gs
add
imul
xor
or
lock
mulps
add
adc
arpl
mov
cli
or
mov
sarl
inc
testb
out
shrl
mov
cmpsl
fwait
dec
mov
mov
mov
daa
fsubs
insl
rorb
sub
data16
mov
lahf
adc
ret
fwait
jge
inc
jnp
push
mov
shll
inc
inc
mov
inc
mov
fmull
lock
jno
xor
xor
and
dec
pop
dec
cmp
pop
jg
fwait
cmp
outsb
imul
mov
jns
jmp
inc
cmp
aas
jl
call
dec
xchg
mov
dec
loop
sbb
ja
jnp
mov
cmpxchg
lea
sbb
jmp
shlb
daa
test
aas
popf
add
mov
dec
ss
loop,pt
fst
clc
sub
pushl
pop
roll
mov
pop
pop
in
mov
push
out
iret
add
loop
inc
into
and
pop
mov
pop
jmp
mov
push
pop
sbb
loop
cmp
pushl
sahf
out
divl
sbb
push
push
fidivs
sti
stos
enter
test
xchg
pop
dec
push
pop
or
mov
jmp
pop
sub
insl
cli
dec
xor
xlat
call
cmp
push
movsb
pusha
mov
jne
lock
inc
js
fsub
shlb
leave
iret
inc
das
xchg
add
lcall
jmp
push
and
leave
push
pop
sub
jg
xor
inc
jnp
xchg
mov
loopne
dec
inc
test
lcall
mov
fsub
mov
out
stc
adc
mov
xchg
jp
cmpsb
int
inc
cmpsb
push
cltd
mov
repz
mov
xor
cmpsb
shlb
lock
jae
adc
cmp
fiaddl
adc
das
xor
movl
push
cltd
sbb
loop
inc
xchg
out
fildl
insl
and
mov
add
ja
add
mov
pop
jmp
mov
pop
rorb
arpl
add
fists
adc
adc
xor
stos
jo
mov
fmuls
push
jae
add
push
das
dec
clc
arpl
cmc
sar
xlat
negl
mov
mov
sbb
lret
test
mov
cmp
scas
sahf
aaa
mov
ret
dec
cltd
mov
out
arpl
mov
retw
add
mov
stc
imul
push
imulb
lea
add
pop
ret
in
lock
test
scas
std
rcrb
xlat
stos
sbb
cmp
sti
jle
inc
or
stos
dec
jbe
adc
xchg
loopne
mov
ds
es
repnz
lcall
or
sti
xchg
aas
andl
inc
insb
insb
cmc
pop
xchg
push
loop
out
roll
add
pop
lcall
lcall
adc
jo
jnp
inc
repz
flds
cmp
shrl
aas
jbe
sub
xchg
lea
jecxz
out
call
test
lret
aaa
pop
test
xchg
xor
mov
pushf
les
insl
mov
icebp
mov
loope
push
shll
es
leave
mov
xchg
ds
dec
pop
and
add
add
sbb
loopne
mov
xorb
lret
jg
jmp
scas
pop
pushf
adc
aad
dec
dec
pop
jb
test
imul
iret
int
sub
sub
pop
arpl
sti
sub
pop
imul
arpl
push
jp
into
ds
jns
shll
mov
popf
lea
cmp
cmp
jmp
mov
mov
nop
in
xchg
push
sbb
in
movsb
scas
push
or
idivl
leavew
sbb
and
push
sbb
mov
orl
clc
pop
mov
int3
sub
adc
sbb
and
data16
test
popl
mov
imul
push
repz
ja
push
push
and
dec
pop
sub
xor
push
js
scas
test
xor
shr
pop
sbb
wbinvd
movsl
hlt
clc
les
stos
mov
ss
jns
xchg
add
pop
call
jns
mov
movsb
lds
sbb
jl
push
out
add
orb
pushf
inc
push
mov
in
jbe
xchg
int
lods
mov
push
repz
inc
sbb
cmp
mov
fisubs
jne
and
lcall
shlb
lea
data16
cmpsb
cmp
add
f2xm1
aad
mov
add
add
aas
mov
ffree
xchg
cltd
inc
xchg
mov
adc
int
lret
jp
sub
in
movd
inc
mov
and
rcll
jb
out
jo
fnop
fidivs
jg
adc
daa
cli
cwtl
mov
xlat
rolb
sbb
orl
hlt
enter
in
cld
in
int
push
pushf
xchg
or
stc
test
fcmovne
pop
sub
mov
push
mov
xchg
rol
lods
inc
stos
shl
adc
jb
into
or
cmp
aas
dec
jbe
pop
cwtl
dec
inc
fildl
and
cs
push
lcall
xor
stos
cmp
pop
xchg
inc
mov
mov
sbb
xchg
test
push
push
and
mov
xchg
xor
loopne
test
mov
inc
out
jl
mov
push
sar
xchg
and
dec
xchg
pop
cmp
dec
mov
in
inc
mov
cs
jbe
icebp
repnz
pop
pop
xchg
nop
lods
mov
lahf
cmp
cmpsb
push
jecxz
jmp
mov
fnstsw
fadds
shll
jbe
rorl
loope
out
mov
ret
add
sbb
loopne
push
loop
pop
js
jmp
push
mov
ret
and
pop
add
dec
adc
xchg
or
sti
insb
lret
or
mov
and
lods
cld
jns
shll
pop
dec
and
subb
stos
in
fdiv
out
imul
xchg
pop
xchg
pop
mull
xor
pop
adc
out
push
std
add
dec
pop
fsub
pop
xor
pop
xchg
mov
jp
mov
arpl
out
inc
cmc
mov
std
das
ja
sbb
add
cld
les
jl
imul
int3
mulb
mov
jmp
lcall
fcomps
sub
lcall
add
mov
lds
jnp
leave
dec
aad
repnz
pop
jp
ljmp
fwait
push
orl
rolb
mov
xor
lea
fs
sub
add
ret
outsl
aad
std
and
push
xor
fbstp
mov
movsb
sbb
fstl
cs
out
cmp
xlat
aas
mov
xorb
adc
fcoms
adc
push
add
push
dec
and
jl
lret
gs
jecxz
ret
sbb
imul
pop
scas
iret
jp
fbld
lcall
pop
or
xor
xchg
fsubs
xchg
fimull
xchg
xchg
adc
mov
lahf
xor
sbb
sub
xchg
cmp
nop
int3
xlat
adc
int3
std
jbe
clc
outsb
xor
push
fmull
xchg
mov
jmp
dec
xchg
push
and
cli
pusha
insb
xchg
jmp
mov
mov
xchg
in
jl
jecxz
lods
inc
pop
dec
arpl
pop
test
pusha
push
pusha
hlt
sbb
cltd
mov
xor
lret
bound
arpl
inc
jnp
icebp
mov
xchg
lea
or
mov
bound
insb
les
cwtl
xchg
movb
cmpsb
push
sub
jecxz
in
and
mov
loop
jge
dec
nop
jo
lcall
loopne
inc
int3
mov
sbb
xchg
out
mov
test
movsb
adc
mov
sarb
inc
outsl
inc
stos
into
leave
push
fsts
push
pop
sarl
or
fldl
push
push
and
jbe
sbb
xor
xchg
inc
pop
add
iret
jmp
sbb
pop
sbb
fs
fstpl
popa
push
xor
out
dec
das
sbb
push
xchg
adc
outsl
inc
call
stos
cmp
and
popa
out
jbe
dec
inc
stc
jge
mov
imul
mov
leave
add
pop
mov
and
icebp
test
mov
jae
mov
jg
imul
xlat
ret
push
mov
sbb
stos
lea
sti
inc
fsubl
fstl
lods
sbb
nop
push
jmp
aas
add
push
or
or
jmp
push
sub
fistps
sbb
and
jge
je
inc
or
jae
lock
or
rep
jle
icebp
sahf
test
mov
cwtl
mov
push
mov
push
ret
jne
fstpl
or
xchg
push
sbb
cmpb
imul
jmp
fcomi
inc
das
dec
pop
xchg
ror
lahf
jmp
xor
mov
and
mov
rclb
shlb
pop
mov
xchg
mov
ja
testb
inc
enter
mov
sbb
nop
mov
fmul
jge
cs
or
sub
js
cmp
les
jne
fwait
push
dec
inc
add
xchg
loope
jl
out
mov
sub
mov
push
add
dec
shll
cmp
cli
dec
xor
call
pop
mov
xor
push
movsb
and
lret
add
stc
lcall
mov
imul
adc
loopne
pop
mov
adc
test
mov
push
cmc
sub
mov
lahf
dec
nop
cmp
shll
js
shr
push
addl
das
ret
mov
or
lcall
loopne
mov
leave
idivb
and
inc
movsb
add
frstor
push
test
add
adc
je
inc
popa
xor
out
mov
add
jl
or
and
call
cmp
mov
dec
lcall
inc
jl
mov
xor
push
arpl
fs
pop
xor
cmpsl
nop
adc
and
adcl
push
flds
ss
addps
dec
fstps
ljmp
popf
loope
mov
dec
pop
mov
mov
jns
movsl
les
mov
jge
test
mov
and
and
jbe
and
push
or
dec
jecxz
xor
imul
stos
iret
dec
repz
cwtl
push
adc
or
adc
test
insb
mov
movsb
ret
pop
inc
or
xorb
adc
fsubrs
mov
cmpsb
lret
cltd
xchg
scas
pop
cmc
xor
loope
into
out
cs
mov
jnp
in
fisubl
std
pop
cmpsb
push
stos
push
xchg
inc
xchg
xchg
pusha
dec
add
lods
test
push
in
adc
add
sahf
js
cld
int3
jle
push
pop
adc
mov
ja
mov
jae
jb
pop
xchg
cmp
pushf
xchg
mov
pop
addr16
shll
aas
inc
fstl
hlt
mov
xchg
adc
mov
out
sbb
add
andb
xchg
jae
push
in
pusha
mov
cmp
pushf
jo
mov
xchg
out
fisttpl
sbb
ret
mov
cmpsb
xchg
mov
nop
sti
in
adc
insl
repz
mov
outsb
pop
pushf
jne
test
roll
call
aaa
std
clc
into
cmpsb
xor
xor
mov
jl
std
and
out
pushf
xor
sbb
and
fnsave
and
fists
repnz
mov
xchg
push
divb
and
es
mov
xchg
hlt
xchg
pop
popf
pop
pop
repnz
push
jae
sub
pop
add
inc
outsl
xor
adc
jg
xchg
cmp
cltd
dec
iret
adc
movsb
pop
je
and
inc
inc
inc
xchg
sbb
sarb
mov
jnp
sub
xor
ja
mov
adc
test
mov
xchg
pushf
sbb
push
mov
mov
dec
pop
inc
xlat
mov
mov
jnp
movsb
les
or
xchg
movsb
mov
jle
xor
and
pop
stc
bound
pop
lods
add
inc
cwtl
and
roll
or
add
je
scas
inc
sub
test
xchg
jl
pop
fistps
and
cmp
ret
out
push
out
sub
cmc
loopne
xor
les
sub
push
es
mov
stos
dec
or
clc
adc
inc
pop
add
sbb
lds
stos
in
outsl
jb
xor
cld
jl
mov
cwtl
sbb
mov
lret
pushf
xor
stc
pop
gs
aaa
ret
mov
mov
das
xchg
add
std
cs
stos
jecxz
jge
into
mov
faddl
pop
cmp
dec
mov
dec
push
mov
xchg
shr
loopne
fmull
sbb
sub
add
cmp
push
loop
push
mov
loopne
enter
fadd
imul
rorl
test
xchg
jno
scas
mov
ret
cmp
fs
inc
data16
fdivrs
sub
mov
cmp
test
mov
sbb
mov
cmp
mov
sbb
test
cltd
xchg
or
lock
or
rcrb
mov
adc
shlb
mov
xchg
out
hlt
in
dec
lds
int3
push
sub
cmpsb
ds
lcall
push
gs
xor
cmc
cmp
push
sti
loopne
cmp
cmp
cmc
dec
stos
scas
loopne
scas
movsl
std
jg
shrl
inc
and
sub
enter
lret
inc
and
leave
cld
inc
fnsave
mov
push
inc
jmp
xchg
jp
pop
xchg
mov
mov
in
shll
inc
sbb
jno
mov
sbb
ret
adc
fbld
cmp
xor
mov
je
adc
jp
test
and
xchg
adc
or
jnp
mov
and
add
scas
scas
movsb
pop
xchg
sbb
sub
push
roll
or
outsl
lahf
andw
aas
cmc
or
fwait
repnz
xor
jg
mov
cmp
lds
xchg
shll
fs
int3
daa
jne
sub
xor
xor
test
nop
scas
in
or
testl
sub
mov
inc
ror
test
mov
sbb
mov
mov
mov
pop
out
push
rolw
adc
bound
and
xchg
jno
mov
imul
loopne
adc
hlt
jle
adc
inc
pusha
dec
popa
sub
push
lret
mov
xor
into
int3
fimull
sub
mov
mov
in
and
aas
mov
jo
fildl
and
ret
push
outsl
or
or
clc
filds
mov
add
jo
into
popa
mov
lea
sub
test
icebp
insl
test
mov
xchg
mov
sbb
mov
cmc
sub
testl
mov
adc
idiv
scas
dec
jmp
ss
cli
pop
dec
idivl
test
bound
mov
clts
xlat
lcall
xor
pop
and
dec
rcr
loop
lcall
inc
outsl
sahf
imul
or
and
adc
and
lea
arpl
push
inc
incl
jl
test
dec
cmpb
mov
push
aas
fwait
es
movsl
gs
mov
insb
addr16
mov
cmpsl
inc
stos
pop
adc
lret
mov
clc
mov
and
cmpsb
cmp
inc
xor
sub
mov
fistl
lods
dec
inc
inc
cld
ss
inc
adc
sub
pop
xchg
sahf
int
out
fstpt
mov
mov
xlat
or
push
adc
mov
test
hlt
push
cmp
push
rol
cwtl
xor
and
out
sar
xchg
lods
inc
adc
adc
pushf
jecxz
jae
adc
adc
in
mov
or
insl
or
scas
insb
sbb
test
mov
or
mov
data16
int
adc
sahf
lret
iret
in
jns
aaa
jb
and
jl
sti
ljmp
and
test
jmp
cltd
add
hlt
push
and
sti
add
scas
jmp
pop
cmp
scas
xchg
sub
sub
or
sbb
xor
cli
xchg
fstl
out
out
pop
dec
lds
arpl
xlat
mov
mov
sub
push
int
test
pop
les
mov
push
sbb
xchg
mov
jno
dec
lds
lahf
imul
dec
in
sub
jnp
add
push
inc
mov
rcrb
dec
lods
sub
insl
jae
fstpt
iret
ret
dec
cli
jns
cmp
or
rdmsr
cli
clc
mov
or
xlat
xchg
clc
and
outsl
cmc
mov
mov
lcall
sub
push
lds
xchg
andl
scas
cmp
add
mov
jp
push
icebp
sub
in
push
mov
mov
ds
popa
dec
ja
dec
stos
jo
into
sbb
mov
fcmovnbe
push
scas
pop
lahf
cmpb
int3
mov
repz
in
gs
jns
lock
outsl
mov
jbe
iret
ret
aam
insb
dec
mov
leave
movsl
pop
cltd
jo
add
idivb
rorb
sbbl
int3
mov
hlt
jnp
push
pop
test
out
test
adc
adc
scas
not
fistl
mov
fldz
cltd
ss
pushf
imul
cld
scas
cmc
xor
lods
and
leave
dec
aaa
loopne
popa
mov
jo
ror
or
add
repnz
cmc
push
sbb
imul
xor
call
fimull
repz
neg
imul
lods
insb
xchg
sbb
pop
cmp
or
sub
adcl
lods
jg
jmp
jecxz
loopne
jnp
aad
testb
in
jnp
rcr
mov
fsub
stos
push
jmp
or
scas
jge
jg
push
inc
mov
adc
push
adc
leave
sti
repz
gs
jmp
dec
cltd
out
inc
das
mov
and
addb
pop
pusha
pop
mov
mov
loope
push
dec
lea
mov
mov
fs
xchg
mov
mov
outsl
dec
mov
fdivrl
loope
mov
xchg
imul
mov
add
jns
dec
sbb
cmp
mov
dec
movsl
imul
data16
mov
bound
or
or
xor
jne
xor
insl
test
or
mov
mov
lods
jbe
push
and
and
adcb
xlat
xchg
test
xchg
dec
ficoml
mov
or
pop
rcr
mov
xchg
sbb
or
mov
jo
cld
pop
roll
pop
fucomip
dec
push
xchg
and
mov
in
mov
cmp
inc
dec
icebp
pop
xchg
cwtl
mov
in
arpl
bound
mov
test
cmp
jbe
xor
xor
sarl
scas
sarl
xchg
jmp
jne
dec
sahf
rorl
cmp
repnz
push
add
push
xor
in
adc
mov
add
out
add
lods
jne
js
adc
mov
xor
mov
xlat
mov
pop
pusha
push
rcrb
fwait
mov
sbb
arpl
daa
jp
addr16
shl
sbb
clc
push
xorb
test
jbe
jle
or
push
ljmp
mov
stos
hlt
aad
sbb
nop
das
add
cwtl
jge
lahf
out
lods
fistpll
xchg
fsubl
jl
xchg
push
idivb
inc
imul
fistpl
sti
push
movsl
add
jmp
mov
jbe
cld
cmpsb
jg
fwait
sub
xor
popf
fisubl
dec
scas
das
mov
jg
adc
pop
rclb
sbb
sub
cmp
mov
xor
daa
clc
pop
imul
popl
dec
adcl
int
mov
mov
cmp
push
adc
mov
into
mov
je
ret
inc
mov
mov
push
sbb
push
out
mov
shlb
jb
mov
scas
sti
lea
xchg
push
xchg
int3
fsub
sbb
shr
clc
inc
in
lret
adc
jo
adc
xchg
pop
sbb
jle
mov
rclb
scas
xchg
sub
mov
mov
lret
adc
inc
std
sbb
pusha
cmp
xchg
mov
pop
dec
into
push
scas
mov
outsb
jg
es
mov
mov
std
cli
lods
jno
dec
outsl
lods
sub
push
jno
pop
xchg
cs
jae
adc
cmpsb
sub
out
push
pushf
add
cs
insl
scas
xchg
inc
cmp
xor
leave
loop
mov
in
sub
std
pushf
sub
push
mov
xor
ja
sub
mov
movb
adc
or
cmp
jo
pop
fdivrs
ds
mov
cmp
mov
inc
mov
fwait
pop
fisubs
adc
mov
jecxz
lea
negl
and
xchg
in
adc
jo
ljmp
inc
nop
subl
testb
inc
inc
adc
mov
sub
adc
adcb
cmp
pop
push
fs
jbe
cltd
xor
push
sub
push
mov
xchg
pushf
mov
repnz
data16
mov
add
jp
mov
xor
mov
insb
bound
add
dec
sbb
cmp
dec
xor
loopne
inc
orl
enter
arpl
push
jb
mov
or
test
shr
ret
int3
sub
fcompl
pushf
push
insl
or
add
mov
rcrl
mov
outsb
sub
pop
cmp
push
data16
lcall
ret
sti
xchg
aaa
sbb
cltd
test
xchg
lahf
dec
push
push
out
push
jmp
test
add
mov
and
pop
add
xchg
add
xorl
ficompl
sub
xchg
add
mov
rcrb
mov
inc
sbb
enterw
mov
lock
mov
push
test
fmul
adc
push
bsr
jae
int
sti
loopne
mov
repz
jge
nop
add
inc
or
fistpll
je
adc
adc
adc
mov
movsb
mov
js
outsb
mov
dec
xchg
mov
adc
shlb
mov
shlb
cmpsl
jno
or
sub
fwait
insb
je
pop
cmp
and
sahf
xchg
sub
jle
xlat
xor
mov
pushf
jge
xchg
and
fs
push
mov
adc
jle
dec
mov
movsb
sbb
mov
in
jns
outsl
leave
imul
mov
js
push
dec
adc
aaa
xchg
push
add
stc
pop
fistps
sbbl
stc
pop
jo
xor
dec
outsb
inc
addr16
and
in
pusha
std
mov
mov
shrl
bound
subl
dec
lock
mov
inc
or
cmpsb
dec
movsl
icebp
inc
addl
ret
pop
fisubs
xor
sub
mov
xchg
push
pop
or
mov
pop
pop
stc
repz
out
jle
jnp
mov
loope
jle
outsb
xor
xchg
jg
repnz
mov
mov
daa
cmp
sbb
fisttpl
dec
loope
push
jg
add
xor
cwtl
mov
scas
xlat
movsb
push
in
and
pop
inc
dec
into
mov
mov
cli
cmpl
pop
xchg
cmpsl
mov
pop
fs
addb
jecxz
dec
pop
int3
mov
adc
div
les
rcr
les
cs
lret
rol
popf
xor
mov
adc
jl
push
pop
lods
es
mov
movsb
mov
and
pop
lds
mov
mov
pop
loope
sbbl
jns
jb
pop
add
pop
or
loop
xchg
cmp
sahf
adc
mov
cltd
sti
mov
xchg
lods
add
bound
pop
mov
js
xor
imul
fadd
cltd
ss
lds
jge
push
lock
mov
sahf
test
pop
ret
adc
nop
nop
push
or
fldt
rolb
lods
pop
int
test
pop
aam
out
shr
psubw
or
mov
bswap
das
pop
inc
flds
jg
int
sarl
inc
int
in
insl
ljmp
push
js
xchg
jnp
push
mov
lock
cmpsb
xchg
adc
cmp
dec
sahf
inc
sbb
in
out
push
stos
push
xchg
pop
dec
sub
jp
xor
mov
rclb
das
sbb
push
xor
push
push
sbb
stc
push
xchg
xor
push
and
rorb
ret
outsl
sub
fprem
pusha
mov
sbb
lcall
xor
xor
fcompl
sbb
lret
xlat
shr
jnp
dec
xlat
int3
clc
leave
pushf
mov
or
fld
movsb
das
lds
int
dec
add
dec
cmp
xchg
cmp
pop
mov
push
lods
jmp
popf
push
push
sbb
adc
push
hlt
pusha
loope,pn
push
push
dec
iret
xor
pop
mov
pop
add
inc
cld
pop
push
loope
sbb
xchg
aaa
dec
ret
push
shlb
out
dec
out
jnp
rcrl
jle
js,pn
inc
xchg
jecxz
jo
inc
push
clc
lcall
dec
and
sbb
lahf
sbb
shlb
push
pop
fs
pop
adc
repnz
cwtl
mov
mov
enter
cmp
jae
enter
pop
je
pusha
sub
xchg
ljmp
jle
stc
add
ret
cmp
popf
mov
push
in
imul
shrb
jge
xorl
mov
ror
rorl
push
jo
out
les
add
and
stos
adc
cwtl
xchg
gs
or
jecxz
add
testl
xor
push
repz
adc
shll
sarl
jmp
or
loop
leave
lods
dec
aad
cmpl
push
cmpsl
jecxz
test
dec
cmc
movsb
movsb
mov
jl
add
and
adc
pop
add
out
mov
xor
mov
dec
adc
dec
gs
inc
mov
mov
add
adc
jne
mov
xchg
sbb
push
lea
or
mov
and
int3
mov
xor
xor
aam
or
lods
out
call
imul
scas
ret
les
lret
ds
sahf
ljmp
mov
and
mov
cmpsb
addl
sub
jmp
mov
jge
and
xchg
fisttpl
ja
stos
mov
sbb
roll
ficoml
xor
push
cmp
push
scas
lahf
idivl
add
mov
and
mov
sti
sbb
jg
dec
sbbl
sub
jmp
ret
bound
pop
je
mov
bound
jbe
fs
sbb
mov
or
mov
cwtl
sbb
jnp
cmp
push
imul
pop
or
mov
fwait
jns
cmp
aam
sbb
adc
pop
movzwl
out
stos
jg
xchg
xchg
cmpsb
mov
jmp
jns
pop
mov
dec
imul
scas
xchg
or
xor
sarb
iret
repz
push
push
jge
mov
lds
aaa
popf
dec
cltd
adc
aad
inc
cmp
in
jmp
mov
xchg
gs
jmp
fs
and
addr16
mov
xor
lods
movsl
jmp
cmpsl
test
pop
dec
inc
fwait
xchg
sub
out
loope
pop
adc
adc
pop
xor
leave
xor
popw
mov
pop
ret
jo
jnp
cmp
cs
pop
je
mov
movb
dec
sti
pop
fcomps
sub
idivl
mov
or
sub
pop
ljmp
loope
enter
xchg
lahf
call
in
pop
mov
mov
call
mov
es
je
mov
test
pusha
and
cmc
mov
int3
mov
sub
jae
or
sub
pop
inc
xchg
aad
je
push
mov
imul
inc
movsb
sbb
xchg
or
fwait
push
sbb
dec
scas
mov
mov
push
mov
and
stos
js,pn
js
sarb
int
mov
loop
outsb
scas
inc
stos
mov
sbb
push
cmc
sbb
jge
stc
insb
popf
fisttpll
clc
jg
sbb
insl
iret
sbbb
adcl
cmp
jp
jo
leave
fwait
testb
push
inc
movsb
add
mov
stos
clc
sub
push
add
and
mov
sbb
add
mov
dec
and
ss
mov
test
jge
xchg
jg
repnz
add
dec
mov
lahf
cs
xchg
test
pop
pop
roll
push
test
ficompl
movsl
mov
inc
cmp
movl
ja
and
pop
aam
or
fisubs
xchg
es
lahf
adc
sub
das
sbb
outsb
cmpsl
sahf
rcrl
mov
popf
sbb
popa
inc
jg
push
outsl
dec
push
lods
pop
xor
repnz
sub
popf
push
mov
dec
jl
adc
or
dec
jb
sbb
mov
insl
fwait
test
es
stos
cltd
addr16
adc
mov
sbb
sub
jecxz
lock
ljmp
lret
add
cmp
mov
in
outsl
leave
mov
xchg
mov
test
pop
cli
lods
mov
icebp
lret
les
fwait
popa
mov
les
and
es
les
pop
leave
stc
test
adc
add
xchg
push
fldcw
pop
mov
mov
ud0
mov
mov
fucomip
sub
jecxz
jnp
jl
push
fs
stc
aas
pop
test
icebp
mov
cmp
push
jl
daa
popf
mov
unpckhps
and
stos
sarl
jb
notl
push
inc
cltd
cld
xchg
cmpsb
loope,pt
adc
sub
aam
arpl
hlt
dec
test
and
add
inc
mov
jle
sbb
mov
daa
jecxz
fistpll
cli
lods
mov
push
outsl
sub
push
rcl
adc
push
pop
xor
mov
data16
xchg
adc
inc
xlat
mov
std
push
lods
push
aas
xchg
pop
subps
dec
jo
mov
test
push
and
add
shlb
push
data16
jb
cmp
push
cmp
nop
jp
insb
mov
push
mov
mov
xchg
outsb
loope
and
adc
mov
sarl
insl
push
or
pop
mov
std
sub
pop
dec
cmp
out
clc
jg
xor
jmp
sbb
xor
imul
jnp
mov
testl
mov
int3
mov
vphadddq
inc
push
dec
scas
dec
repnz
mov
lock
call
flds
xchg
enter
jmp
icebp
cmp
adc
loope
subl
sub
pushf
mulb
sar
arpl
xlat
fs
inc
aam
ds
pop
shll
jne
push
ds
data16
insl
pusha
pop
jecxz
jmp
adc
dec
jns
pop
xchg
sbb
cmp
push
je
mov
or
scas
lcall
ret
push
xchg
cmpsl
arpl
pop
pop
ljmp
sbb
pop
xor
scas
out
fwait
mov
pusha
aaa
cli
test
pop
pop
jmp
scas
sub
push
mov
push
cmp
and
decl
ret
dec
sbb
and
push
lods
xchg
jae
shlb
fsubrp
inc
pop
cmp
lcall
jle
sub
and
mov
stc
test
int3
ds
test
pop
cmp
jle
push
aad
cli
sbb
pop
testl
cli
pusha
push
and
inc
pop
adc
bound
mov
push
enter
cs
xchg
rolb
xchg
or
mov
leave
pusha
push
jo
insl
ficoms
das
test
cwtl
dec
pop
or
cmp
push
mov
mov
mov
sbbl
les
loop
cmc
xchg
mov
pop
scas
sbb
push
test
aam
rclb
fwait
lahf
xchg
cmp
inc
xchg
ret
push
orl
cmp
dec
and
mov
xor
fwait
out
mov
cmp
mov
xchg
stc
rdpmc
fcmovnb
in
dec
icebp
stc
out
loop
xchg
unpckhps
push
aaa
inc
or
lahf
inc
notb
push
mov
push
pusha
jno
lods
mov
in
adc
insb
add
add
xchg
out
out
lret
lods
fwait
icebp
in
pop
shl
inc
mov
js
js
sahf
push
jbe
out
in
lock
inc
push
mov
cmc
fisttpl
sbb
clc
jbe
fnsave
lea
sbb
dec
and
push
mov
cmc
roll
adc
add
mov
loopne
dec
test
cld
fbld
out
dec
push
pop
xor
push
insb
inc
movsb
cwtl
cmp
cmpsb
popf
adc
out
pop
jl
int
in
and
jecxz
mov
xchg
or
in
jge
je
mov
imul
or
inc
hlt
lods
insl
jge
test
mov
dec
pop
jbe
inc
movsl
mov
push
std
or
xchg
mov
int3
fimuls
into
clc
jo
jb
mov
push
aaa
pop
jae
fdivp
xchg
adc
mov
cwtl
enter
hlt
loopne
pop
lahf
pop
ja
cwtl
and
dec
xchg
pop
lcall
push
das
rep
mov
mulb
mov
xchg
aaa
test
or
or
sub
clc
sbb
fs
pop
push
cmp
pop
cmc
xlat
outsb
mov
mov
xor
push
sbb
dec
and
xor
mov
sub
sbb
dec
pop
adc
data16
and
sub
jno
seta
sti
lret
sub
rorb
dec
cmp
fiadds
popf
fisubs
pop
fwait
mov
fistps
jno
mov
pop
sub
mov
aas
movsl
rcrb
das
sub
xor
pop
out
in
jle
stos
push
aas
lret
push
push
je
jbe
xchg
sbb
iret
mov
fidivrs
lds
dec
cmp
lahf
xchg
adc
lret
pusha
sub
mov
ficomps
sub
stos
xor
or
call
mov
lahf
das
cs
cmpsb
cwtl
sub
rolb
sub
mov
mov
lods
bound
or
push
je
icebp
pop
jbe
cmp
addr16
stc
or
rcr
ret
sub
cltd
aam
std
js
aad
jge
ficoml
out
aam
xor
fsub
popf
subl
mov
push
pop
mov
mov
add
shrl
and
xor
sahf
lcall
cwtl
test
int
out
cmc
jecxz
iret
mov
addr16
xor
popf
inc
xor
leave
test
sub
dec
dec
inc
insb
mov
shrb
xorl
aad
inc
sbb
xor
je
std
bswap
hlt
push
push
lcall
in
fwait
jmp
sub
js
movsl
mov
adcb
sub
les
iret
icebp
fcomps
jge
mov
push
jne
cwtl
repnz
mov
sbb
pusha
pop
sub
shr
arpl
sbb
cltd
sbb
nop
or
and
and
pop
push
jno
insl
jmp
dec
and
sbb
lcall
jmp
mov
adc
jns
cmp
xor
les
popa
js
nop
stos
ds
roll
repz
dec
dec
dec
dec
fwait
lcall
movsl
dec
add
sti
mov
incl
inc
and
adc
testl
lea
cmpl
jmp
icebp
jle
divl
mov
xor
stc
int
pop
cmp
jle
mov
dec
or
push
push
divb
sub
test
test
jne
adc
fdivrs
mov
fwait
ja
mov
je
adc
pop
xchg
and
push
mov
shl
jl
pop
roll
adc
leave
sahf
es
push
jbe
cmpsb
xchg
imul
mov
iret
pop
rcll
ftst
cli
xchg
nop
ret
adc
sub
aad
ja
or
dec
call
cmp
jp
loop
or
adcb
jno
mov
sub
aaa
pushf
push
jns
inc
daa
or
cmp
lahf
popl
je
dec
call
shr
add
mov
jbe
and
aas
jl
jns
jg
mov
imul
je
icebp
pslld
icebp
push
movsb
sbb
out
rorl
iret
pushf
and
lods
pop
push
push
and
mov
clc
add
xchg
push
in
aam
outsl
insl
shll
push
xor
dec
leave
test
inc
cli
or
jo
xor
in
pop
jg
push
popa
jg
out
popf
lret
and
mov
sbb
out
in
adc
test
mov
in
mov
sbb
mov
mov
call
lahf
sahf
clc
out
fmulp
and
adc
out
or
inc
imulb
ror
dec
fisttpl
rorl
mov
jecxz
insb
rcrl
jns
fistps
cmpsb
fmuls
in
ret
cld
leave
cmp
sub
out
gs
das
addb
fcomps
mov
fxtract
mov
adc
icebp
repnz
mov
popf
mov
lock
mov
adc
jbe
repz
jb
sub
mov
lods
es
adc
xor
fimuls
std
lret
pop
test
xor
rolb
imul
or
je
sahf
faddl
or
setne
sub
mov
outsl
xchg
mov
int
sub
xorl
pop
sahf
inc
dec
je
adc
add
jmp
lcall
add
sbb
xchg
cli
shlb
add
mov
les
mov
pop
fucomp
enter
lahf
mov
push
imul
clc
add
mov
mov
sub
pop
cmp
in
icebp
inc
pop
pop
push
or
fwait
and
push
icebp
add
lret
adc
pop
push
ds
cmp
loopne
ret
sub
cmpsb
jb
mov
out
roll
cs
notl
in
ffreep
into
or
or
push
rcl
ret
mov
dec
jmp
outsl
push
dec
xchg
inc
loope
cmp
xchg
xor
add
dec
jmp
and
add
sarb
lds
add
sub
and
clc
popf
dec
insl
jl
scas
test
lahf
cmp
les
mov
mull
push
xchg
adc
xchg
mov
arpl
and
repz
ds
cmp
int3
inc
pusha
hlt
loop
mov
call
jmp
push
repz
loopne
cs
shl
sub
decb
or
push
ret
mov
sub
fimuls
xor
arpl
jns
xor
cmpsl
mov
fsubl
outsl
adc
arpl
lea
fs
stos
lods
ss
cld
stos
aas
in
out
cltd
xor
adc
jge
sbb
sbb
js
push
in
pop
aaa
and
xor
pop
mov
pushl
adc
sub
jg
sub
dec
pop
mov
stos
mov
es
dec
cld
scas
or
xchg
add
and
loope
xchg
stos
test
sbb
sbb
hlt
sarb
mov
inc
sbb
xchg
jp
mov
jmp
pop
dec
sub
inc
sub
adc
push
out
ror
mov
rcrl
sub
jno
mov
daa
les
jg
dec
pop
mov
add
jne
mov
push
or
sbb
xchg
mov
cmpsl
add
aaa
cld
push
stc
mov
xor
cmp
add
jmp
pop
xor
adc
xor
jp
inc
lcall
aaa
lahf
xor
cmpsb
lods
sub
cmpsl
clc
inc
loop
cmp
bound
cmpsb
sbb
aas
jae
lock
enter
dec
popf
outsb
jb
rcll
cwtl
fldenv
popf
mov
std
jg
add
into
fchs
fwait
outsb
addr16
enter
xchg
jns
aas
jmp
lahf
in
stos
sar
inc
pushf
lds
cmpsb
and
sub
out
in
jb
stos
daa
imul
addps
pop
mov
jecxz
mov
cltd
test
xor
out
push
lcall
sti
jae
mov
sbb
outsl
outsl
cli
inc
and
cs
mov
out
mov
jo
add
leave
mov
popf
xchg
idivl
pop
fidivrs
scas
insb
mov
push
cmp
and
sub
cmp
adc
pusha
cmp
dec
sbb
call
das
lock
cmpsb
dec
daa
movsl
mov
adc
and
shrb
inc
adc
mov
add
xchg
xchg
adc
mov
or
cmp
pop
pop
jns
add
and
mov
lcall
scas
test
fiadds
or
stos
aas
inc
add
or
leave
sub
sub
jle
subl
cli
cmp
sub
leave
jns
fwait
adc
pop
xor
mov
pop
cmpsl
aam
push
js
aaa
fdivrl
sbb
inc
mov
mov
imul
jg
lahf
pop
dec
lds
popf
sub
scas
xchg
inc
push
outsl
repz
enter
sahf
adcb
icebp
xor
push
loopne
mov
mov
xor
or
pop
adc
sti
jne
loop
jo
cmpsl
repz
scas
xchg
cmp
and
xchg
mov
or
mov
cli
jns
mov
lahf
gs
lret
aaa
insl
js
sbb
sbbl
insb
repz
sbb
lods
sub
and
test
xor
hlt
out
push
icebp
mov
scas
add
push
push
mov
pop
gs
cmpb
mov
repz
popl
test
outsb
adc
pop
es
int
mov
scas
cmpsb
test
adc
mov
fs
mov
inc
pop
jo
nop
movsl
fdivl
jle
adc
das
push
dec
pusha
adc
mov
popf
xchg
bnd
sbb
push
lock
lods
popf
mov
sbb
imul
jbe
add
inc
add
sbb
ss
add
push
jnp
stos
xchg
adc
fdivl
sub
fsts
add
pop
jle
ss
cmc
icebp
lock
mov
inc
mov
or
fwait
pop
flds
push
dec
fwait
sbb
inc
sbb
push
push
or
xor
cwtl
fwait
test
mov
mov
and
pop
jmp
mov
loopne
xor
ret
and
jb
xchg
jae
ljmp
inc
in
ret
js
lock
sahf
push
push
loop
movsl
daa
jo
stos
lock
scas
loop
jmp
lret
repnz
and
lret
sub
fsubrp
inc
add
adc
jecxz
andb
adc
pop
cmpsb
ret
jbe
or
addr16
cmp
jne
adc
adc
call
dec
mov
arpl
scas
inc
ror
out
clc
mov
fisubl
inc
pop
loopne
rcrl
and
add
push
or
sbb
or
adc
cwtl
xchg
or
bound
add
pop
je
in
add
mov
mov
sub
ret
movsb
mov
call
jmp
repz
xchg
adc
rol
and
push
arpl
xor
mov
xorl
xchg
mov
clc
xor
ds
clc
jp
nop
out
mov
mov
jmp
andl
pop
sbb
sti
jmp
lcall
lods
out
iret
jb
sahf
cmp
int3
cmp
rcrl
add
mov
bnd
rcl
add
add
xchg
into
pop
popf
insb
and
ret
xchg
outsb
int
or
cmp
xor
mov
pop
adc
sub
mov
inc
push
sbb
movsl
xchg
rcr
mov
sti
sub
push
lret
inc
xchg
sarb
mov
pop
cli
sub
pop
pop
or
incl
mov
mov
enter
mov
cmc
or
movsb
popa
pop
mov
out
std
and
push
rcr
mov
mov
cmpsl
test
jl
inc
jns
add
imul
mov
shlb
mov
imul
lods
adc
loop
sbb
into
inc
mov
fwait
xchg
push
je
stc
insl
mov
lret
leave
pop
adc
add
mov
mov
lods
out
jmp
xor
mov
fistps
ljmp
loopne
inc
jno
push
std
fldcw
lahf
dec
mov
pop
xlat
pusha
shlb
lods
testb
or
in
push
std
jns
jmp
nop
push
les
xchg
mov
push
movsl
xchg
loope
das
js
outsb
sub
sbb
jmp
ljmp
idivb
pop
stos
push
fisubl
xchg
outsb
cltd
add
pop
in
jle
mov
fsubr
or
dec
jae
shlb
movsl
sarb
push
mov
fisubrs
popa
adc
das
push
cmp
mov
loopne
addl
cmp
roll
mov
imul
out
stos
repnz
cld
clc
data16
sub
leave
pop
jae
iret
fmulp
lret
aaa
jge
loop
addr16
jecxz
xor
push
push
pop
xchg
enter
loopne
dec
insb
or
in
pop
adc
aam
inc
aam
scas
dec
call
mov
push
sbb
or
lods
into
bswap
ret
addr16
movsb
and
push
jb
push
ficoml
cmpsl
ss
adc
push
mov
sub
fistpl
std
sub
mov
adc
add
mov
dec
mov
fdivrs
push
rclb
repnz
lock
inc
xor
and
shr
jnp
mov
and
fisubs
jge
iret
cmp
xchg
in
call
xchg
or
scas
cmp
adc
push
imul
cltd
stos
sbb
psubusw
pop
cmp
ret
pop
dec
je
leave
ffreep
pop
xchg
fwait
jp
xor
cmp
ret
in
stc
lcall
mov
xchg
xchg
jnp
cmpsl
mov
add
dec
push
sbb
sar
pusha
add
mov
shrb
jno
test
andb
xor
ret
bound
xchg
cmp
sub
inc
jb
out
stos
mov
jne
inc
adc
or
mov
sbb
mov
push
in
scas
inc
out
dec
lock
ficoml
outsb
fnstcw
push
push
push
mov
fdiv
pushf
dec
inc
push
scas
fcomps
jmp
pushl
pop
sub
pop
aam
jbe
push
jne
jle
ds
sbb
push
pop
out
push
aam
nop
out
push
add
stc
sbb
adc
dec
jno
push
iret
pusha
xchg
xor
xchg
sbb
mov
scas
loope
in
and
xchg
xor
inc
ljmp
jne
push
movsb
mov
movb
cs
push
out
aam
dec
ljmp
jae
fwait
mov
loopne
out
jle
xchg
test
ret
mov
and
adc
push
xchg
adc
xor
mov
leave
sub
add
xchg
aam
xor
imul
cmp
outsb
fidivrs
lret
add
andb
scas
sub
les
shll
test
es
xchg
lods
cli
sub
lea
lea
gs
jmp
icebp
aam
add
mov
xor
stos
fistpl
adc
jb
inc
pushf
jno
std
push
xor
adc
in
xchg
not
out
dec
xchg
rorl
mov
dec
pop
jecxz
lret
or
gs
fs
or
dec
xchg
cmp
stos
hlt
jp
mov
mov
add
dec
lods
ret
lock
sub
insl
paddusb
cmp
push
push
test
adc
ljmp
stos
outsb
pop
out
fisubrs
adc
pop
cmc
xor
xor
adc
push
ljmp
lret
jmp
xor
jecxz
inc
pop
push
sub
sar
xor
sbb
repz
js
dec
sti
fs
push
dec
jbe
cmovo
mov
push
cmp
xchg
push
adc
js
cmpsb
lock
loop
int3
testb
or
dec
out
es
sub
icebp
int3
jmp
and
push
fcomps
dec
or
mov
mov
adc
pusha
popf
cmp
fucomip
shlb
mov
push
add
ja
mov
repnz
outsb
xor
jmp
sbb
xor
mov
pop
inc
add
or
mov
mov
out
and
xor
and
push
mov
out
mov
push
cltd
lret
loopne
jno
hlt
or
push
mov
push
divl
jne
imul
jnp
idivb
jb
notb
dec
pop
nop
xchg
mov
pop
dec
jbe
fcmovnbe
mov
inc
pusha
jle
mov
ficomps
cmp
ss
jp
adc
push
and
rcr
insb
mov
ret
cmpb
or
mov
jge
sub
sarb
imul
pop
enter
rorl
iret
std
gs
shll
add
mov
mov
dec
inc
push
jno
movsl
or
cmp
inc
sbb
lock
rcl
cli
add
sbb
cmp
push
out
sub
sbb
inc
fcomp
jle
cmp
adc
test
mov
fwait
jb
jge
test
pop
sahf
imul
outsb
mov
add
test
and
inc
inc
jns
lea
movsb
test
mov
adc
movsb
clc
jno
mov
jbe
pop
sbb
rol
fdivrs
inc
movsl
pop
in
dec
subb
sbb
mov
mov
and
loop
cmp
xchg
mov
push
int3
pop
mov
dec
cltd
xchg
mov
adc
dec
cmpsl
je
push
or
sub
icebp
rclb
aam
mov
push
push
mov
rclb
or
inc
pop
repnz
sub
mov
and
mov
lcall
add
cmp
sbb
add
outsb
cmpsl
lea
scas
push
in
int
pop
mov
outsl
scas
sbbl
add
sub
addb
mov
fmul
insb
ljmp
sbb
out
cwtl
jae
sarl
mov
ret
mov
bound
and
shrl
out
inc
sub
mov
mov
gs
daa
push
or
lods
and
push
fnstcw
xchg
inc
addl
push
jo
jnp
arpl
jp
lock
xorl
cli
push
sub
and
vsubsd
or
movsb
js
pop
cmpsb
sub
pop
pop
sub
imul
ret
dec
js
pop
test
fdivrp
pop
ds
imul
adc
pop
mov
jnp
sub
stc
mov
stc
shrb
mov
and
popa
or
movsl
stos
mov
ret
lahf
sub
repnz
aas
cld
loop
xchg
cli
sub
cmp
enter
cwtl
nop
mov
lods
cli
inc
cmc
data16
cltd
mov
outsb
movsl
push
out
or
sbb
and
ja
inc
decl
mov
xor
data16
and
aaa
scas
icebp
pop
rol
push
imul
mov
xor
test
roll
pusha
pushf
inc
mov
cbtw
sub
cltd
test
fildll
int
je
fidivrs
mov
jo
inc
cld
subl
cmp
push
mov
mov
pop
mov
adc
inc
or
pop
cmc
fsubrs
daa
repnz
cmp
imul
push
jecxz
mov
push
dec
and
insl
dec
xchg
cld
mov
mov
inc
dec
test
scas
pop
leave
mov
inc
push
push
repz
test
nop
ffree
out
popf
adc
xor
pop
add
ja
jmp
fwait
movsb
jno
das
xchg
push
insb
push
aad
pop
and
popf
arpl
jne
pushf
mov
lods
arpl
add
rorb
out
in
scas
lahf
pushf
stc
adc
dec
icebp
push
mov
mov
scas
push
xor
mov
scas
mov
pop
fistpll
push
movsl
aam
sub
outsl
lret
sub
loope
stos
addr16
test
rcrl
sbb
push
fcomps
test
dec
mov
pop
hlt
mov
dec
repz
sbb
fs
jnp
dec
sbb
rolb
stos
cmp
lock
fimuls
sub
mov
movsb
mov
dec
fadd
push
fwait
mov
cmc
ret
mov
cli
add
shl
insb
int3
add
es
dec
push
addr16
adc
sbb
lahf
pushf
int3
add
pop
bound
jmp
loope
sub
sub
pop
pop
popf
dec
bound
inc
int3
sbb
je
aaa
jno
adc
aas
xchg
into
mov
in
cli
dec
nop
lcall
stos
inc
imul
ds
in
pop
loopne
or
cli
std
adc
sarl
add
jmp
or
inc
cs
dec
mov
sub
inc
sub
push
pop
popa
jle
push
aaa
push
cpuid
sti
bound
push
jp
in
sbb
or
out
push
pop
push
imul
pop
xor
pop
sbb
pop
mov
sub
mov
inc
adc
pushf
inc
clc
mov
xchg
clc
mov
inc
push
mov
dec
stos
sbb
dec
fmul
lcall
dec
and
mov
add
sub
sarl
scas
mov
push
pop
fdivl
adc
adc
push
xchg
cmp
push
movl
jae
sub
js
sub
inc
loope
rclb
push
jmp
es
push
ja
or
dec
mov
insl
movsb
add
sahf
outsb
xchg
adc
xor
mov
fistpl
imul
xchg
ja
bound
mov
cs
inc
outsb
stos
faddp
jno
push
lods
jg
in
push
andl
scas
movsl
js
cld
mov
lods
add
mov
ret
imul
movsb
popa
out
dec
lret
sub
int
cmp
andb
cli
fildl
popa
and
mov
adc
in
jb
pop
adc
sub
xor
push
fsubl
xchg
iret
adc
shlb
sbb
scas
in
fcoms
cmp
cmp
movsb
add
fst
insb
xor
mov
cmpsl
inc
ret
jp
lcall
adc
nop
scas
push
cs
dec
and
jo
adc
mov
les
pop
ret
adc
mov
fstps
lock
int
mov
lret
mov
dec
nop
pop
popf
loopne
lea
icebp
add
pop
popa
imul
xchg
push
mov
ds
sbb
popa
iret
fistpll
cltd
and
xchg
icebp
sub
jmp
repz
mov
pop
add
mov
adc
test
xchg
mov
mov
push
and
imul
outsl
pop
mov
jne
mov
dec
pop
sbb
daa
lcall
les
ds
mov
fstpt
add
into
add
pusha
out
adcl
in
mov
cmp
sub
inc
fs
aas
cmp
test
nop
stos
pop
cmpb
push
in
pop
inc
mov
icebp
lret
mov
or
xchg
inc
or
pushf
dec
out
mov
adc
rorl
push
mov
outsl
loopne
mov
cmpsl
dec
fdivrs
ret
or
dec
pop
mov
int3
into
push
cld
pop
mov
ljmp
sub
out
fmull
lcall
roll
push
pop
pop
pop
inc
pop
mov
outsl
leave
push
dec
into
repnz
repz
les
jge
in
cmpsb
jmp
in
push
sub
ror
je
push
xor
cmp
iret
repnz
data16
push
mov
pop
pop
push
push
xor
aas
cmp
sub
popf
adc
bound
andb
jb
mov
or
in
bound
popa
scas
push
out
fs
gs
stos
popa
xor
test
xchg
sub
dec
jno
cmp
inc
ss
imull
mov
nop
sub
jno
sbb
std
mov
and
pop
jnp
mov
sub
fs
enter
in
stc
xchg
xor
push
insl
xor
mov
sub
dec
notb
ffreep
mov
mov
cmpsb
inc
add
sbb
aam
mov
sub
sub
pop
rolb
mov
mov
sub
sub
pop
mov
ror
pop
rep
inc
xchg
rorb
dec
movsb
ret
xchg
mov
ds
jp
jno
dec
pop
xor
sub
js
out
ss
jnp
cmp
add
inc
jmp
xchg
or
xchg
cmc
mov
add
cmp
test
push
repnz
in
dec
adc
sbb
das
fwait
xchg
mov
ret
mov
scas
lahf
loope
test
es
dec
and
jl
push
cmpsb
inc
mov
iret
mov
jns
xor
xchg
add
stc
scas
cltd
lcall
mov
jp
movsb
fcmovb
adcl
scas
cmp
and
sbb
mov
jns
push
cmp
push
push
repnz
mov
leave
enter
mov
mov
mov
aad
mov
or
ljmp
js
adcb
repnz
cmpb
or
inc
cmpsl
or
cmpsl
aad
sbb
push
movsb
jecxz
lods
xchg
or
jne
or
mov
cmc
adc
dec
dec
cmp
or
aad
lods
sbb
stc
xchg
lahf
test
dec
lahf
dec
and
fisubrl
jno
mov
dec
mov
jo
mov
mov
lods
mov
xchg
jecxz
xchg
jo
pop
sub
dec
sbb
push
popa
fistpll
mov
imul
inc
notl
out
movsb
xchg
inc
jns
and
es
rorb
mov
dec
sbb
xor
fidivrs
xchg
imul
popf
icebp
cmp
add
sbb
xchg
pop
les
lods
shrl
push
lahf
adc
push
xchg
mov
pop
es
std
jmp
inc
adc
sub
jae
adc
push
movsb
std
add
loopne
stos
mov
popf
fmull
fidivl
dec
xor
jmp
mov
or
jnp
cmpsb
push
add
into
ljmp
sbb
fcoml
inc
inc
sbb
or
fldenv
jg
xchg
inc
lock
pop
cmovb
sub
std
dec
jmp
mov
mov
xor
out
push
setge
xchg
int3
imul
ja
std
push
push
pop
fwait
xchg
sub
shll
shlb
or
jae
or
mov
mov
and
sbb
ljmp
imul
hlt
adc
imul
add
jmp
dec
dec
mov
test
push
jo
xor
inc
lods
mov
bound
ja
std
sahf
orl
cmp
lock
sub
adc
mov
cmp
loope
pop
push
jbe
cli
jle
shrb
cmpsb
sub
adc
cmc
enter
mov
fs
mov
out
xchg
sub
mov
inc
and
inc
push
adc
fsubrl
loop
cld
nop
xchg
inc
fidivs
mov
add
jl
lret
add
mov
adc
in
add
sub
mov
dec
mov
cld
ljmp
in
std
daa
sub
dec
sub
sbb
test
xor
xlat
outsl
jle
arpl
adc
xchg
cmpsl
xor
ret
jno
mov
sbb
xor
cli
incb
push
std
jae
into
push
cwtl
inc
lcall
inc
push
mov
mov
test
stos
or
aam
and
nop
sti
xor
mov
push
add
lods
inc
or
mov
repnz
movsb
cltd
mov
clc
mov
push
mov
lret
inc
arpl
add
push
aad
addr16
push
jg
icebp
mov
repnz
and
adc
pop
xor
inc
pop
mov
jne
ret
jno
inc
lret
mov
gs
cmp
push
imul
lret
filds
cmp
sbb
mov
scas
push
jbe
std
ljmp
mov
push
lcall
mov
cmp
and
sub
mov
ret
jp
add
inc
mov
imul
sub
insb
mov
or
jns
es
add
mov
cmc
repz
cmp
enter
cmp
cmp
mov
adc
push
xchg
out
xor
insb
pop
out
aas
lret
inc
fnstenv
je
pushf
xor
mov
and
adc
cs
gs
cmc
test
jecxz
stos
data16
jp
cmp
movsl
fs
in
inc
icebp
imul
lar
ds
fldcw
fbstp
cmp
mov
xor
nop
orl
movsb
cmpl
out
repz
cmp
pushf
rolb
fldt
xchg
adcb
pop
push
xor
and
movsb
insl
pop
sbb
mov
push
rcrb
mov
sbb
outsl
leave
push
je
arpl
fxch
xor
jnp
adc
loopne
daa
dec
into
das
mov
adc
lock
xchg
jnp
jmp
mov
or
ret
xor
mov
jo
mov
and
enter
adc
pop
out
dec
xchg
jge
pop
jns
mov
dec
push
fwait
hlt
std
cmc
daa
cmp
or
pop
cld
xchg
js
pop
jno
cmp
adc
or
mov
cmpsl
sbb
mov
sbbl
jae
mov
lahf
push
mov
xchg
inc
andl
enter
in
jecxz
gs
mov
lods
nop
add
jbe
fdivrl
cmpsb
sarb
imul
jmp
mov
into
and
mov
loopne
sub
rcrb
stos
pusha
call
leave
push
cmc
sub
mov
fwait
and
jg
je
push
push
jo
loop
or
jl
loope
shll
fwait
imul
pop
ficoms
hlt
jmp
and
xor
addb
out
stc
test
imul
addr16
push
mov
repz
jg
fs
inc
xchg
jecxz
divb
jo
mull
orb
cmp
sub
mov
push
pop
ljmp
or
data16
sbb
enter
lahf
sbbb
or
xchg
stc
je
rol
mov
daa
add
cwtl
outsl
push
xor
mov
xor
lcall
stc
and
orb
xchg
andb
add
test
andl
add
mov
insl
inc
jne
pop
test
test
out
or
mov
lods
int
push
pop
sbb
bnd
test
fildl
aam
mov
mov
call
mov
cwtl
stc
in
pop
mov
ret
push
nop
loop
xchg
or
dec
jp
les
movhps
pop
lods
fbld
jb
mov
test
fcoms
cld
loop
fsubl
dec
stos
sarl
ficoms
idivl
xchg
shrl
cmc
mov
pop
mov
adc
cld
mov
test
mov
xor
imul
jge
add
loopne
lret
ror
and
xor
pop
test
test
or
dec
inc
pop
inc
dec
dec
adc
incb
cmp
movsl
mov
adc
jp
ret
and
fcmovnb
sub
in
test
int
test
and
push
test
clc
push
sub
outsl
adc
mov
out
outsb
sbb
adc
mov
jg
movsb
cmp
outsl
mov
jecxz
mov
addb
inc
and
pop
push
movb
dec
fdivs
adc
cmpsl
outsb
mov
add
inc
dec
inc
xchg
cs
or
cmpsl
aad
jns
sub
xchg
jp
inc
jns
pop
xor
dec
mov
je
lret
xchg
xor
cli
mov
sbb
daa
sub
mov
xor
shl
adc
xchg
cmc
xchg
in
and
xor
lods
or
movsb
mov
mov
fisttpll
lods
sahf
insb
int
mov
sbb
xchg
scas
adc
sub
test
fwait
stc
xchg
sahf
dec
and
mov
fs
mov
pop
xchg
add
sub
std
loopne
popa
pop
insl
shll
popa
adc
std
dec
mov
mov
push
or
push
sbb
push
jp
mov
pop
hlt
andb
subb
cmpsb
cli
js
fsubp
mov
data16
dec
fwait
mov
addr16
lods
dec
das
rcl
sub
ja
loope
js
or
jo
testl
push
lods
cmp
shrb
mov
outsl
or
push
push
add
mov
fildll
and
or
mov
test
mov
dec
jle
add
jo
fisttps
mov
orl
insl
mov
les
mov
jo
loopne
cmc
ret
repnz
cmpsl
popa
ficompl
mov
mov
and
xor
imul
adc
fstpl
sbbl
aam
jg
cli
xor
push
jmp
lock
cmp
test
insb
mov
fs
lahf
xchg
je
mov
jge
xchg
xlat
mov
les
xchg
xchg
pop
repz
xchg
insb
push
scas
data16
mov
push
pop
mov
in
or
and
stos
adc
lds
sbb
bound
jae
shlb
add
fcompl
dec
push
sbb
cwtl
mov
jmp
mov
ljmp
or
jno
mov
mov
mov
inc
int
adc
incb
push
pop
out
dec
insl
aad
int3
cmc
hlt
sbb
clc
inc
cmp
add
fiaddl
jne
fildl
dec
fcomps
lahf
mov
xor
daa
in
fnsave
dec
sbb
mov
fmuls
outsb
movsb
push
pop
cmpsl
dec
or
xchg
fwait
mov
xchg
fstp
insl
daa
push
loope
in
cmp
cmp
push
sahf
test
adcb
rorl
test
jb
sub
iret
dec
adc
and
mov
mov
push
xchg
dec
rolb
add
iret
hlt
out
jbe
fmul
inc
sbb
xor
cmp
mov
cmpsb
test
out
cmpsl
mov
inc
mov
push
adc
push
mov
sahf
rcrb
ds
rclb
xor
push
roll
pop
cwtl
xor
fldenv
rorb
arpl
cmpsl
stc
inc
jae
mov
test
test
je
push
jl
mov
mov
xchg
xor
adc
out
mov
mov
xchg
push
nop
mov
jbe
jp
cmp
lds
test
push
shlb
cmp
jbe
ljmp
inc
add
push
rcll
jne
cmc
rcl
test
insl
jno
scas
xchg
div
add
mov
mov
sub
push
scas
cmp
or
imul
dec
mov
fnstsw
push
mull
sub
cmp
push
sbb
icebp
test
int
test
aad
mov
imul
xchg
mov
shrb
cmp
xchg
jns
cmp
cmp
xlat
cmc
or
xchg
adc
pop
sub
mov
repz
sbb
jge
daa
adc
xchg
xor
mov
jp
push
mov
out
xor
adc
xlat
jb
dec
test
js
sbb
daa
dec
cli
pop
dec
dec
aas
fiaddl
mov
push
push
arpl
bound
popf
mov
rol
cmc
clc
out
push
sti
pop
es
push
mov
rcll
cvtdq2ps
repnz
popf
mov
xor
dec
mov
lods
adc
icebp
mov
fs
outsb
and
movsl
loop
jmp
scas
lret
cmpsl
repz
mov
xchg
pop
xor
cmp
lods
lea
mov
std
out
cmc
hlt
aam
pusha
add
cmp
jo
sahf
adc
enter
inc
xchg
pop
mov
mov
sahf
pop
repz
fdivrs
test
pop
xchg
add
aad
adc
xchg
xlat
mov
shl
xchg
sbb
cmp
rcrb
dec
popf
dec
xor
sub
out
jbe
cmpsl
sub
sbb
popf
pop
add
icebp
pop
iret
xchg
into
jl
icebp
fs
int
jae
sbbb
mov
inc
daa
or
or
mov
lods
ljmp
fcomp
mov
xchg
scas
mov
pop
and
mov
in
jb
test
sbb
xor
sub
or
scas
loop
sarb
push
or
repz
in
fwait
js
lret
mov
and
push
mov
cmpsb
daa
xchg
inc
lods
push
lahf
add
stc
or
imul
nop
mov
mov
xor
mov
jge
dec
sarl
ljmp
adc
adc
cwtl
cmp
ds
test
push
push
or
sbb
js
xlat
push
mov
push
inc
insb
rorl
and
sub
aad
jle
je
push
out
sub
jl
sub
sbb
pushf
mov
dec
repz
cmp
cld
pop
sbb
imul
push
in
sbb
std
daa
lret
fdivr
out
cmc
push
sbb
mov
pop
mov
cmpb
jnp
fimull
mov
mov
xchg
mov
out
bound
push
sahf
and
cwtl
in
dec
ja
insl
mov
jno
je
cs
inc
sub
je
push
out
ljmp
jno
mov
daa
nop
je
repnz
arpl
stos
in
pop
and
cmp
fidivrs
out
dec
and
jbe
xchg
mov
xchg
ja
scas
and
push
pop
addr16
jmp
adc
push
xor
sub
std
inc
cmpsb
pop
mov
or
jb
sbbl
clc
jae
xorl
inc
xor
mov
lods
mov
or
adcl
cmp
ljmp
and
or
lock
and
mov
mov
inc
and
test
or
repnz
sub
aaa
mov
or
cmp
sub
inc
pop
adc
mov
imul
mov
inc
sub
mov
shlb
fcoml
mov
addr16
bound
dec
xchg
xchg
pusha
sbb
jmp
test
lcall
inc
repnz
inc
popa
push
scas
or
mov
cmp
jl
repnz
add
inc
out
xor
xorb
leave
fistps
sub
xlat
adc
out
idivl
shrb
call
bnd
inc
inc
data16
shlb
adc
jmp
push
jle
mov
push
mov
cld
lret
sub
sbb
sub
xchg
std
jecxz
mov
call
sahf
test
lcall
xchg
cmp
cwtl
mov
xor
fsubl
in
fisttpll
and
call
adc
dec
daa
cmp
or
ljmp
loope
stos
sahf
stos
push
lahf
popa
sbb
aam
ljmp
dec
in
xlat
cmp
or
outsl
fbstp
dec
std
mov
or
repz
cmpsb
xor
addr16
mov
pop
adc
sti
jno
mov
jmp
jge
xor
or
sub
dec
and
xor
insl
cvtpi2ps
add
fs
fdivr
arpl
sbb
loope
rclb
pop
stc
cmp
ret
sub
add
ret
adc
aas
rorb
jecxz
std
or
ds
rol
out
repz
dec
adc
pop
ret
pop
pop
mov
popf
push
add
push
lret
or
fpatan
mov
movsb
bound
insl
mov
loope
sbb
sbb
push
rcrl
jbe
cs
mov
cmpsb
inc
mov
mov
push
jle
rol
shrd
or
mov
lret
lret
add
imul
lock
inc
push
fistl
sbb
loopne
sub
sub
mov
stos
xchg
out
sub
pop
mov
inc
lods
or
ret
sahf
shrd
xor
in
inc
dec
xchg
jns
add
add
sbb
inc
mov
sti
gs
lahf
mov
xorb
mov
lds
sub
xchg
push
sbb
dec
jns
xchg
in
xor
sbb
xlat
mov
adc
jae
ficomps
pusha
dec
lahf
loope
cwtl
sbb
filds
int
ret
xor
inc
aam
out
lds
loopne
icebp
xor
fnsave
call
jae
fs
and
iret
pop
ror
bound
dec
ror
mov
cmp
or
and
lods
push
mov
mov
shrb
mov
lcall
test
test
imul
negb
xor
push
pop
rorl
sub
mov
icebp
notb
mov
insl
test
je
ja
and
push
popf
into
add
jg
ret
popa
push
stc
sbb
sub
out
das
add
imulb
inc
loopne
pusha
bound
pusha
and
jno
xchg
pop
mov
stos
cmp
pop
stos
push
xor
xchg
pop
mov
ficoms
enter
inc
daa
pop
mov
lcall
jne
loope
lahf
sbb
and
cwtl
jo
jb
popf
pop
stos
test
mov
dec
adc
xchg
mov
push
jo
enter
sarl
loope
add
out
pop
xor
mov
or
xchg
or
push
cmc
dec
cmp
out
dec
aam
sbb
jo
push
call
in
sbb
lea
test
jle
mov
pop
lahf
jp
adc
jae
ljmp
mov
loopne
inc
xor
hlt
cld
stc
lds
xor
sub
xor
out
xchg
imul
out
cli
das
loop
test
mov
jns
iret
paddd
movsb
inc
mov
insl
xchg
faddp
stos
cmp
xor
mov
popa
sub
xchg
lahf
out
test
hlt
in
out
gs
cmp
fcoms
adc
jle
or
loope
adc
cltd
jns
pop
movsb
and
repnz
pop
xchg
jmp
sub
jle
vpabsd
int3
sar
mov
and
ss
and
xlat
push
or
add
inc
ret
and
push
mov
scas
mov
ds
lret
mov
movsl
xor
mov
sub
xor
test
lahf
cli
sti
inc
mov
pop
and
xchg
inc
lret
rol
or
pop
test
mov
or
imull
pop
jns
push
rorl
orb
fs
sub
xchg
mov
js
sbb
xchg
addr16
xchg
jb
or
scas
push
adc
imul
cmpsl
xor
mov
fucomip
dec
dec
mov
insl
adc
or
mov
subb
ss
rcrl
or
shr
mov
dec
push
lahf
sub
arpl
push
in
je
cmc
lahf
das
and
mov
cwtl
add
push
fnstsw
sbb
jb
sub
sub
lcall
das
es
inc
push
aad
mov
adc
aaa
cmp
xlat
sbb
xchg
push
jae
jo
push
in
jmp
lret
insb
out
sub
jae
xlat
loopne
pushf
into
mov
mov
mov
sub
mov
push
sbb
out
ja
and
xchg
or
or
xchg
lods
mov
mov
xorb
mov
shrb
shll
lret
ret
or
ficoml
adcb
inc
inc
pop
sbb
loop
add
stos
xor
insl
add
mov
adc
sarl
sbb
ja
aad
scas
add
pop
dec
jg
mov
xorl
jns
dec
xor
cmpb
inc
sub
enter
test
jle
mov
popa
pop
notb
lret
mov
imul
pop
push
cmp
dec
sub
clc
xor
inc
ss
inc
jmp
int3
and
pop
cwtl
lock
xlat
imul
sbb
sub
sbb
mov
xlat
cld
ret
sbb
cmp
push
dec
lret
xor
aaa
mov
push
je
push
xor
ja
dec
xchg
pop
mov
sbb
dec
es
lret
sbb
and
jno
lods
mov
mov
loopne
fs
adc
jecxz
add
testl
xchg
std
insb
repnz
mov
sbb
mov
test
insb
lock
xlat
push
dec
mov
push
mov
lods
loope
fmull
int
cmpsl
aam
mov
scas
mov
addb
ja
loopne
mov
pop
mov
lds
addb
push
ret
add
jge
xlat
push
into
xor
xorl
imul
mov
push
push
and
mov
fistpll
lds
and
out
data16
push
daa
cmp
stc
cmpsb
mov
adc
aaa
out
repnz
icebp
les
into
and
leave
adc
mov
ss
xchg
and
mov
shlb
dec
mov
loopne
repnz
negl
mov
dec
rorb
mov
xchg
call
ss
mov
ficoml
insb
imul
dec
es
inc
sbb
add
es
stos
insl
cmp
mov
xor
jnp
movsl
arpl
push
jns
push
int
xlat
sub
mov
push
inc
push
dec
lret
inc
leave
test
sbb
aaa
pushf
mov
sub
rorb
adc
fs
clc
sbb
mov
jne
mov
jne
inc
sbb
cmp
arpl
stos
fdivl
mov
push
mov
mov
out
lret
pusha
jbe
pminsw
in
icebp
pop
sub
push
or
xchg
insl
push
in
dec
sub
xlat
add
sub
int3
sub
lahf
fadd
fiadds
xchg
xor
ss
add
dec
ss
popa
nop
sti
pop
xor
xchg
leave
inc
stos
into
lods
shl
inc
adc
imul
push
sub
es
jnp
dec
xchg
fninit
inc
pop
popa
or
jne
es
mov
cltd
loop
data16
inc
std
in
sbb
repnz
pop
xor
andl
mov
dec
fdivp
sbb
cmp
pop
mov
insb
mov
fisttps
xor
jge
mov
jno
pop
pushf
out
dec
imul
in
mov
in
stc
arpl
add
in
rcrl
pop
push
pop
lcall
pop
xchg
mov
mov
repnz
fidivrs
jl
ror
push
xor
pop
fwait
rorl
loop
sahf
inc
xorb
push
sbb
cmc
mov
in
insl
fsubr
mov
sbb
daa
aad
cld
mov
sti
jno
pop
lahf
lea
or
xchg
cs
jmp
sub
das
out
cmpxchg
js
dec
add
or
cltd
jb
inc
jg
inc
xor
pop
mov
sbb
out
pop
pop
jg
movsl
jb
lret
into
adc
cmp
fadd
inc
nop
mov
movsb
jmp
adc
jecxz
sbb
dec
ds
dec
imul
cld
js
jg
sbbl
push
out
cmp
adc
jb
cmp
adc
rclb
push
inc
cs
xchg
xchg
and
sub
xchg
icebp
xor
outsb
mov
or
inc
sbb
call
adc
aad
cmp
fs
xchg
dec
cwtl
das
jbe
aam
dec
cltd
add
out
shrb
mov
fs
mov
jge
cltd
push
add
loopne
pop
xlat
pop
test
jbe
flds
mov
mov
repnz
mov
adc
jo
pop
adc
clc
pushf
notl
out
insb
dec
push
and
cmp
jg
mov
cmp
xchg
jg
cmp
cmp
pop
packuswb
pop
loop
mov
inc
shrb
ja
fidivrl
or
aad
lea
je
int
clc
adc
les
aad
test
push
push
mov
lahf
push
jle
jo
sub
in
push
fidivrs
push
and
adc
int
push
inc
add
push
sbb
xchg
sbb
pop
ss
lcall
out
and
out
jae
imul
xchg
lods
and
dec
mov
and
pop
ret
dec
cmc
xchg
jg
mov
pop
ds
and
jmp
in
aam
test
or
add
add
aad
sahf
and
pop
cli
leave
shll
cmpsb
xchg
mov
jg
out
stc
mov
pushf
and
inc
xor
jp
mov
popl
mov
hlt
mov
aaa
mov
jns
fs
jmp
inc
jne
lea
adcb
shlb
out
stc
push
mov
lock
mov
cli
in
not
int3
mov
pop
push
push
dec
sbb
sti
pop
lods
popa
xchg
in
and
lret
int
ret
orb
addl
jmp
insb
inc
sbb
stc
dec
mov
push
or
sbb
jl
loope
out
lods
in
xor
mov
movsl
sub
call
adc
dec
jbe
adcb
jmp
dec
ds
test
imulb
addl
pusha
push
subl
sbb
pusha
sarl
xor
xchg
orl
cmp
sub
fidivs
std
imulb
pop
outsl
cld
and
sub
cmp
dec
dec
fistps
dec
testb
in
mov
int3
lds
xchg
enter
xor
mov
inc
push
aam
mov
add
fidivrs
pusha
xchg
jle
inc
pop
jg
and
mov
push
jge
cmc
aam
or
jmp
cli
sbb
add
loopne
xchg
shrl
sahf
and
jl
imul
mov
jmp
fnstsw
sahf
arpl
mov
ja
push
addb
and
sbbl
jo
add
mov
push
add
sub
mov
in
mov
popa
or
shll
or
inc
lds
out
xlat
mov
adc
dec
add
jnp
imul
fs
dec
xlat
cmpsl
add
ror
sbb
dec
mov
daa
out
mov
jmp
out
sti
ds
sub
mov
jo
in
sub
mov
adc
cmp
insb
int3
mov
fs
addb
mov
pop
mov
xchg
fsubl
sahf
das
ss
movsb
into
shrl
data16
out
shll
out
dec
sbb
push
pop
mov
add
mov
in
cmp
lods
xchg
xchg
sti
sbb
and
or
mov
popa
cld
repnz
mov
xchg
pusha
sub
ja
dec
fisttpl
lahf
push
jo
sbb
insl
lcall
shll
stos
stos
jb
and
arpl
nop
inc
inc
xlat
xchg
sarb
dec
js
mov
popa
sub
das
jnp
jmp
into
push
repz
xchg
movsl
cmpsb
roll
xor
cmpsl
movsl
push
cltd
mov
rclb
xor
icebp
push
add
push
pop
xchg
sti
fwait
scas
lret
cwtl
shll
cmp
push
insb
mov
adc
cmp
cmp
pop
jo
lcall
pop
mov
addr16
arpl
inc
push
and
adc
out
push
pop
jle
xchg
xor
push
mov
sbb
jbe
dec
fcmovnbe
sbb
cmp
dec
insb
sahf
xchg
lret
push
ljmp
flds
addr16
lods
hlt
push
lret
mov
imull
sbb
fcomip
mov
xor
and
out
push
ja
rorl
cmp
ret
imul
adc
xchg
push
mov
or
fstps
mov
bound
aaa
pop
cmpb
aam
xor
push
out
pop
es
fwait
and
jmp
pop
inc
pavgb
add
jge
pop
rcll
les
rcll
out
mov
stc
pusha
cltd
in
jle
inc
pop
jge
cwtl
xchg
push
lret
and
mov
inc
or
bound
and
pushf
sahf
xor
lods
pushf
outsb
inc
gs
out
jo
jns
in
cmpsb
test
sbb
jle
inc
mov
xlat
and
sbb
lcall
sub
jle
inc
js
test
fidivs
jle
shlb
sub
outsb
dec
iret
ficomps
cmp
lcall
mov
testl
inc
mov
push
push
aaa
out
nop
mov
pusha
leave
mov
sbb
adc
mov
push
sub
add
or
sbb
inc
mov
mov
sarb
hlt
pop
mov
xchg
clc
in
and
xchg
scas
clc
sbb
test
out
pushf
in
mov
cmp
or
hlt
sti
cmp
mov
fildll
in
jo
mov
rol
les
xlat
xchg
pop
inc
shll
out
loopne
cmp
xor
xor
repnz
ss
xchg
xor
adc
mov
mov
rcll
push
into
xchg
mov
push
enter
sbb
and
clc
xchg
aas
shr
in
push
dec
xchg
outsb
test
adc
lret
test
jo
or
lea
sbb
cmpsl
mov
bound
aaa
add
mov
arpl
fmull
mov
repz
fwait
shlb
in
lods
add
cwtl
pop
adc
js
xchg
inc
lea
imulb
nop
jno
arpl
pop
mov
in
scas
adc
mov
xchg
cld
decb
push
in
movsl
rcrb
insl
fwait
clc
bound
xor
outsl
ds
mov
and
xor
cmp
notl
push
mov
cltd
fwait
sub
or
popa
repnz
jae
mov
inc
ljmp
out
mov
or
clc
es
out
adc
xlat
and
mov
rcll
jg
add
into
lahf
in
loopne
hlt
iret
mov
popa
inc
outsl
sbb
sub
stc
dec
pop
scas
mov
aad
ds
jl
in
fwait
jnp
adc
cmp
fisttpl
insl
xchg
push
bound
jbe
dec
and
jp
pop
and
add
filds
mov
cmp
dec
arpl
sti
adc
adc
jl
leave
add
push
sub
rclb
in
push
pusha
ss
pop
jne
movsl
movsl
insl
rcr
repnz
repz
das
cmp
pushf
fistl
cmp
cltd
sub
cld
jnp
pop
insb
sbb
jbe
cld
test
inc
mov
cmp
inc
cmp
pushf
xor
mov
test
inc
rcl
xchg
lods
push
pop
pavgw
mov
int3
inc
inc
in
mov
jae
mov
and
adc
adc
adc
enter
fisttpl
movsb
or
cwtl
cmp
mov
dec
or
fnstsw
daa
faddl
test
sub
add
sub
stos
jb
leave
mov
sti
lods
add
scas
lea
daa
dec
int3
xchg
mov
jo
push
js
shlb
xor
ret
es
xchg
mov
or
xor
mov
push
jmp
mov
jne
sbb
sbb
xchg
je
add
and
push
outsb
adc
sub
and
icebp
sub
or
xor
sbb
dec
push
dec
ret
add
scas
mov
pop
mov
push
insb
mov
cmpl
and
dec
mov
fldt
out
in
mov
mul
enter
sbb
adc
xchg
push
cs
xor
mov
mov
imul
add
cltd
call
xorl
push
mov
sub
pop
adc
ss
inc
inc
out
jecxz
rolb
nopl
lret
test
sbb
fisubrs
cli
pop
test
popf
jmp
sub
sbb
xchg
mov
and
aam
in
inc
mov
mov
mov
dec
div
inc
out
shrl
push
fucomip
rcrl
push
add
push
mov
lods
sub
stc
inc
pop
scas
dec
adc
roll
call
xor
cmp
inc
cmpl
cld
mov
push
and
dec
adc
jnp
hlt
ret
fwait
movsl
xor
mov
in
fstps
insl
mov
das
sbb
stos
pushf
incb
int
nop
inc
inc
nop
adc
pop
sti
test
push
pop
mov
pushf
push
adc
insb
xchg
mov
inc
nop
fnstcw
fildll
push
xorl
add
push
xchg
fisttpl
pop
or
jg
ret
adc
pop
loop
jp
in
inc
inc
fsubrl
fs
loope
dec
out
adc
movsl
jp
jl
ljmp
aaa
stos
stc
xlat
popa
dec
pop
pop
pop
cltd
orl
inc
xor
rclb
mov
pop
out
inc
cmpsl
movsl
hlt
testb
sub
jge
out
sub
testb
pop
js
mov
mov
movsl
mov
insb
add
inc
dec
dec
ljmp
sbb
jns
sti
enter
cmp
push
outsl
stc
adc
add
add
pop
mov
mov
bound
cltd
mov
aam
or
lret
shlb
lods
push
in
xchg
jnp
add
lods
jge
test
jle
xor
sbb
mov
in
cmp
push
push
imul
xchg
jp
adc
cwtl
shll
jae
loope
bnd
pop
mov
fcoms
in
dec
cmp
popa
imul
dec
xchg
adc
jnp
add
call
ret
sbb
xchg
fdivrl
mov
dec
dec
ljmp
mov
fidivrs
inc
push
pushf
cmp
and
pop
fst
pop
or
stc
ds
pop
or
pop
addr16
repz
mov
lahf
and
xchg
dec
inc
hlt
inc
or
pop
mov
andl
ret
jle
filds
repz
fldcw
fadd
jns
fnstsw
inc
loopne
and
lret
fwait
push
push
out
or
fwait
pop
xchg
int
sbb
or
out
fdivrs
jmp
fdiv
aad
xlat
jle
mov
mov
xchg
sahf
int
sahf
xchg
lahf
cmpsb
cli
stos
pop
test
xchg
fisubl
sbb
mov
bound
inc
mov
lret
xchg
pop
inc
into
jns
sahf
add
mov
push
sub
pop
movsl
dec
sub
and
xchg
cmpsb
inc
xchg
mov
push
dec
sbb
idivb
pop
adc
enter
lods
mov
dec
rol
add
and
and
push
pop
je
jp
leave
adc
paddsb
sarl
les
mov
sbb
mov
insb
xchg
roll
push
insb
mov
adc
xchg
pop
mov
mov
dec
pusha
add
push
mov
notb
shlb
mov
and
or
cli
fisubl
jo,pt
pushf
jb
jp
jmp
push
clc
xchg
sbb
jne
adc
repnz
mov
pop
pop
sahf
arpl
add
cmp
mov
test
or
out
mov
xchg
push
add
sbb
cmp
or
mov
mov
in
mov
adc
push
mov
imul
lret
push
mov
test
inc
pop
mov
call
ja
or
pop
pop
xor
ficomps
imul
stc
xchg
cmpsl
out
and
xor
and
inc
sbb
jo
popf
lock
mov
mov
inc
enter
dec
sarb
and
insl
or
loope
sti
lret
aaa
xlat
adc
fsubrs
scas
stos
jl
pop
add
xchg
and
orb
jmp
jl
pop
pop
add
sub
xor
xchg
jl
push
xchg
mov
pop
push
aad
aad
or
fwait
js
scas
mull
inc
mov
xchg
xchg
stc
push
test
filds
nop
scas
imul
xchg
xchg
addr16
mov
jns
xor
mov
out
pop
sbbb
lret
jbe
xor
inc
mov
in
ss
xchg
mov
jnp
movsb
popf
mov
popf
pushf
mov
sbb
call
mov
mov
outsb
push
mov
pop
or
add
lds
lahf
dec
es
mov
xor
fdivrl
push
cmp
pop
push
out
jae
fmulp
jmp
mov
add
mov
and
ret
mov
sarb
sub
add
mov
scas
test
loope
pop
and
jo
or
mov
mov
mov
repnz
arpl
repz
clc
pop
hlt
push
mov
mov
fsubs
pushl
enter
fstpl
call
lock
lea
in
jno
mov
pushf
jle
fistpl
mov
enter
adc
jp
mov
mov
jmp
repz
addl
fucom
cmp
adc
mov
mov
dec
iret
lds
sarl
fisttpll
xchg
xchg
test
ret
mov
adc
gs
ret
pop
rclb
mov
jmp
insw
repz
roll
aaa
jo
inc
fildl
repz
or
imul
or
ret
xor
push
and
cmp
enter
js
iret
cmpsl
xor
pusha
cmpsb
and
and
ss
lods
inc
cs
insl
xchg
jl
ret
dec
mov
out
das
add
fistps
ds
jmp
shlb
mov
xlat
push
sub
xchg
fadd
mov
jns
pop
cwtl
adc
loope
out
cwtl
pop
push
adc
rcrb
push
sbb
add
sti
int
mov
andb
ds
adc
xlat
adc
dec
pushf
arpl
aas
xchg
sub
or
decb
loopne
sbb
sbb
cs
mov
stos
fldcw
xlat
fisttpll
inc
mov
gs
cmp
loopne
pop
sbb
fdivl
mov
rorb
mov
stc
fcompl
and
sahf
movsbl
testl
sbb
andb
int
addr16
xchg
xor
add
movsl
data16
rorb
jne
dec
xchg
sbb
in
in
pop
stos
in
ficoml
mov
mov
lret
mov
xchg
mov
push
xor
fcmovbe
xchg
bound
aad
xor
dec
sbb
or
adc
stos
mov
mov
push
push
jle
push
jns
cmpsl
push
xchg
stos
pop
loope
cmpsb
add
into
xchg
fidivl
gs
leave
fsub
or
loopne
add
subb
push
and
pop
mov
popa
clc
xlat
scas
jnp
or
xor
or
loop
cs
pop
push
repz
mov
sbb
inc
xlat
cmc
fcompl
push
out
cltd
xchg
cmp
adc
cmc
push
imul
loop
mov
imul
ret
or
dec
adc
pop
mov
iret
cmpb
xor
sbb
ds
mov
mov
mov
add
mov
imul
cs
sub
dec
popf
or
jp
cmpsb
vunpckhps
arpl
cmc
lcall
xchg
mov
jb
mov
cmpsb
sbb
pushw
xlat
call
mov
hlt
mov
jns
jecxz
push
mov
mov
lock
sub
cmp
push
inc
ljmp
jge
pop
hlt
insb
jb
xor
mov
xchg
movsb
out
push
cld
dec
std
mov
mov
shl
lock
sub
es
pop
and
int
xor
je
in
gs
and
dec
xchg
out
mov
mov
jmp
repz
lret
inc
in
fsts
xor
es
pusha
rolb
add
inc
iret
pop
xchg
orps
stos
cltd
mov
shrl
jecxz
aam
jo
mov
push
bound
or
add
cmp
mov
gs
cli
fwait
daa
and
cmpsb
pop
xorb
dec
adc
sti
pop
lret
cli
insb
cmp
outsl
mov
cs
pop
out
pop
pop
dec
sbb
adc
adc
iret
or
leave
fidivs
adc
add
mov
lret
cltd
add
mov
dec
mov
xchg
mov
shll
out
dec
push
andb
into
jecxz
sub
out
push
clc
adc
mov
scas
out
pop
dec
aad
adc
scas
sahf
adc
adc
clc
dec
mov
test
js
mov
dec
or
sub
add
or
in
mov
jne
gs
or
cmc
add
and
dec
in
cmp
rol
and
mov
inc
adc
jg
jmp
mov
aad
xchg
cmp
in
xchg
int
inc
es
mov
mov
add
jecxz
and
and
arpl
pop
shl
xlat
jo
daa
xchg
mov
ret
pop
rcll
movsl
xchg
sbb
in
outsb
and
ljmp
inc
mov
push
outsb
ds
stos
loopne
cmc
lock
adc
das
xor
leave
mov
cltd
dec
mov
add
in
test
cmp
xchg
mov
pop
out
pop
sbb
std
inc
xchg
iret
pop
mov
and
movsb
and
jecxz
mov
imul
mov
out
jbe
xchg
cmp
cmp
xor
pop
mov
out
imul
mov
out
sbb
and
lods
pop
mov
xchg
cltd
mov
inc
outsb
sbb
cs
cmc
mov
jg
out
xchg
sub
mov
popa
test
jg
jno
inc
in
xlat
and
scas
insb
pushf
jp
test
inc
pop
incl
fnsave
add
sbb
fs
cmp
and
or
jns
add
cmovp
shrb
mov
aam
push
jb
xchg
and
cmp
jecxz
push
maxps
fcmove
xor
xor
loope
xor
dec
mov
cmp
ret
push
jmp
dec
mov
fbld
enter
fdivl
jp
dec
out
sub
and
or
lds
add
imul
insl
scas
sbb
dec
stc
icebp
jno
push
repz
cli
stos
bound
mov
mov
outsl
scas
stos
stos
mov
mov
cmp
add
repnz
cmc
xchg
push
adc
mov
mov
testb
sub
inc
cmp
fists
std
cmp
or
mov
pusha
cmpsl
pop
add
sub
inc
cmc
sbb
lock
iret
lea
mov
xchg
orl
cld
bound
loopne
cmpsb
xchg
push
cld
aad
pushf
pushf
aaa
sbb
ret
mov
outsl
outsl
shrl
cwtl
and
in
lea
sbb
in
aad
pop
adc
cmp
sub
adc
sbb
xchg
pushl
jbe
jg
leave
mov
mov
clc
jp
fisubl
test
testl
pop
jp
push
adc
lea
mov
or
popf
dec
pop
daa
je
fdivs
lcall
adc
int
push
arpl
mov
inc
adc
fdivs
cmp
or
or
loope
out
add
jae
ds
sbb
mov
inc
mov
loopne
out
xchg
aaa
and
jns
testl
mov
negl
aaa
ja
ljmp
rcrb
add
dec
xchg
push
les
ja
mov
scas
dec
mov
jmp
sti
aas
push
insl
push
test
loope
xchg
mov
add
push
xchg
add
mov
xlat
sub
xchg
xchg
mov
or
push
popa
out
adc
mov
bound
push
jp
adc
into
lea
loope
fwait
jnp
add
lea
mov
inc
jnp
mov
in
lcall
pop
insl
sub
push
cmc
loope
ret
lret
mov
jns
cmpsb
mov
push
ds
loopne
adc
rol
lret
jns
pop
push
dec
mov
sub
insb
mov
cmp
fcompl
jp
jnp
fidivs
pop
dec
jae
into
push
inc
in
popf
insl
in
push
xlat
sbb
inc
sbb
mov
aad
sbb
inc
jnp
scas
mov
and
xchg
test
xchg
inc
fldt
scas
cmp
adc
mov
dec
and
fnstsw
add
add
data16
fwait
ret
jae
aaa
mov
stc
dec
ficoml
sub
jno
fwait
pop
dec
or
pop
cld
mov
arpl
or
mov
lods
adc
cs
cmp
cltd
cmp
adc
jns
stos
jo
pop
sbb
nop
sarb
xlat
xlat
lock
insb
je
icebp
xor
sub
jno
inc
gs
push
pop
in
mov
cmp
push
inc
sahf
iret
mov
lcall
mov
loope
xchg
push
sub
xchg
cmc
add
lods
scas
std
push
pop
and
inc
jne
mov
or
outsb
add
daa
and
repz
test
icebp
rcr
imul
cmp
idivb
push
jmp
or
cmp
pop
lret
rcl
fimull
movsb
xchg
and
mov
jnp
mov
push
and
sbb
nop
dec
jmp
or
outsl
stos
fs
js
and
jg
fs
daa
clc
lods
xchg
pop
inc
xchg
clc
adc
add
loopne
mov
add
dec
mov
sarl
cmpsl
test
addr16
or
divl
lea
inc
or
push
iret
test
popa
xchg
movsl
pop
lret
xchg
sarl
idivl
cwtl
cli
mov
sub
inc
dec
and
andb
ljmp
movsl
scas
push
popa
mov
sub
movl
sbb
cs
dec
add
lahf
mov
pop
test
fldenv
mov
xor
mov
mov
cmp
popa
cmp
pop
push
bound
mov
jp
and
adc
jno
in
cltd
inc
and
outsl
sti
dec
jl
daa
stos
frstor
pop
dec
jge
dec
or
mov
movsl
ret
aam
adc
movsl
jo
rclb
ret
or
sbb
add
ds
xor
xor
pushf
cmp
and
andb
or
sbb
mov
lods
out
dec
push
fs
pusha
sarb
enter
pop
gs
push
sahf
inc
pop
mov
push
out
clc
mov
bound
test
jno
inc
push
out
jo
sahf
test
mov
dec
lods
xchg
imul
test
subb
pop
push
push
sub
dec
scas
sbb
lcall
iret
iret
out
dec
xor
adc
mov
adc
pop
push
dec
fimull
jns
out
insb
push
inc
iret
mov
test
cld
or
pop
jae
test
lods
insl
adc
jle
add
jae
xor
or
adc
movsb
cmpsl
faddl
add
adc
mov
movsl
push
ret
cmp
cld
fstpl
pop
scas
loope
leave
xor
sub
mov
mov
jge
lahf
mov
push
jne
notl
inc
push
inc
xchg
or
jge
mov
fmuls
mov
insb
sti
add
fwait
dec
sbb
hlt
cmp
lods
loope
ljmp
cli
inc
cs
je
cltd
dec
mov
lret
and
ja
or
dec
jle
js
mov
cmp
push
mov
orl
cmp
mov
pusha
cwtl
mov
fstpl
push
scas
andb
outsb
cmc
nop
cmp
add
add
lahf
cmpsl
sbb
xchg
mov
int3
cmp
cld
in
push
mov
scas
ret
or
test
jae
loopne
clc
movsb
inc
or
shrl
lahf
sbb
push
in
jo
jle
xor
imul
sub
insl
jp
cmpsb
mov
das
rcrb
fcomps
popa
lock
mov
sbb
jns
sahf
pusha
push
dec
cmc
jl
iretw
addr16
mov
dec
xor
out
inc
stc
popa
mov
add
int3
xchg
aad
cmp
into
pusha
movsl
lea
enter
jge
repnz
in
jae
sbbl
push
icebp
ficomps
stos
add
data16
outsl
rorl
push
cmp
add
sub
sbb
pop
sbb
adc
mov
xchg
in
test
or
in
aad
stos
or
adc
xchg
xor
inc
popa
lcall
pop
divb
sbb
add
mov
movsb
es
dec
test
mov
adc
adc
push
mov
vmwrite
xchg
aas
div
pop
cli
mov
push
loopne
xor
push
or
inc
scas
out
stos
cltd
inc
loope
pop
and
and
push
mov
test
fwait
sahf
push
xchg
adc
xchg
imul
scas
icebp
push
jl
and
pop
out
inc
loop
mov
jae
inc
sarb
push
popa
jl
iret
mov
mov
les
cmp
cmpsb
and
fdivs
dec
mov
adc
inc
fwait
mov
jnp
cmp
clc
lea
ficoml
sbb
mov
pusha
popw
mov
lahf
rclb
sbb
mov
sub
mov
iret
xchg
mov
mov
or
mov
fsts
and
stos
cmpsl
out
mov
jecxz
in
xchg
xchg
loopne
jnp
pop
scas
hlt
cmp
pop
inc
das
xor
leave
iret
fbstp
sub
push
addb
fnstenv
push
pop
and
pop
dec
push
and
jns
inc
jnp
leave
jns
call
mov
inc
cmpsl
or
int3
xchg
movsl
cmp
out
inc
xor
lret
sbb
fwait
sbb
mov
cmc
std
loop
xchg
mov
outsb
pop
out
xchg
cmp
pop
mov
subl
out
ret
jne
xor
sbb
add
cwtl
cli
rcr
jg
pop
xor
scas
lcall
mul
sahf
cld
les
add
cs
push
add
aas
pushw
cmpl
mov
mov
add
xor
jg
aas
mov
adc
and
xchg
mov
xcrypt-cfb
outsb
and
addl
lods
in
adc
push
add
pop
jbe
test
outsl
fxch
loope
xor
mov
sub
hlt
push
das
push
and
mov
test
or
push
sti
ficoms
xchg
mov
push
and
jle
mov
sbb
mov
lret
daa
aaa
push
inc
mov
daa
out
inc
divl
inc
ja
sbb
ftst
pop
imul
cltd
enter
mov
xor
inc
xchg
aas
xor
mov
and
sub
push
insl
adc
cwtl
stos
push
xchg
or
inc
outsl
jg
rorb
xchg
or
je
fs
add
mov
jne
xorl
icebp
sbb
add
xchg
fs
lret
add
dec
add
inc
push
inc
int3
dec
popf
movsl
add
ror
rclb
pop
bound
inc
and
imul
sub
sbb
lods
mov
pop
lcall
test
mov
adc
sbb
add
flds
ds
std
jb
cld
into
lret
loop
sbb
jle
xor
shrl
jns
or
jmp
pop
push
cltd
scas
inc
lcall
push
pop
lahf
sbb
jp
sbb
push
adc
push
jbe
pushf
inc
jbe
sub
imul
icebp
push
sti
dec
int3
add
imul
movsl
mov
jb
popa
or
sbb
mov
lock
js
fs
push
out
pushf
jbe
bound
or
sbb
pushf
mov
sbb
arpl
or
fs
xor
cmpsb
sub
cmp
rcrl
jnp
mov
push
insl
punpckhdq
imul
xchg
mov
mov
cmpl
jg
int3
pop
jno
or
lahf
rclb
loopne
addr16
test
sahf
stos
in
sub
mov
xorb
push
jo
inc
ss
iret
sahf
mov
test
sbb
aam
aas
cmp
adc
xchg
or
xchg
lret
inc
xor
fistps
in
dec
lock
sbb
mov
and
into
dec
clc
pop
out
jmp
pop
movsl
pop
lretw
and
dec
clc
lds
testb
adc
sub
inc
or
ljmp
and
xor
push
lds
xchg
xchg
mov
es
pusha
stos
sbb
xor
adc
adc
rcrb
imul
popa
mov
mov
mov
mov
scas
addr16
ds
dec
adc
int
fmuls
adc
inc
add
mov
adc
or
mov
mov
pop
pop
jae
iret
xor
sbb
cli
sbb
loopne
add
hlt
inc
jnp
mov
mov
clc
add
lret
jmp
or
dec
in
lea
push
aam
sbb
mov
push
rclb
out
pop
je
dec
jo
je
imul
imul
je
jno
mov
mov
rclb
lea
fcomps
pop
mov
icebp
mov
idivb
add
imul
stc
popf
xchg
jl
sub
leave
repz
cmp
mov
push
out
mov
ret
xchg
mov
fsubs
sub
mov
add
cmp
mov
lret
or
mov
push
adc
movsb
pop
cltd
mov
inc
insb
pop
cwtl
xchg
aad
push
pop
negb
sub
mov
sbb
pusha
sti
arpl
add
cmpsl
lock
loope
xor
ja
or
sahf
das
dec
fists
adc
cmp
cmpsb
lds
sbb
aaa
push
mov
cmp
rcrb
dec
call
aaa
and
push
ret
sub
lods
dec
jae
push
sub
lea
push
ret
cmpsb
jno
lods
inc
mov
mov
mov
and
loop
testl
inc
mov
pop
es
mov
mov
les
adc
stos
and
and
inc
divl
rcl
xor
stos
jbe
xchg
cvtps2pd
loop
addr16
pop
out
mov
movsb
cmc
ja
xor
movsl
cmc
shll
push
or
or
inc
arpl
inc
jmp
xor
stos
jno
xor
icebp
cmp
sub
nop
jb
mov
xor
or
or
jecxz
inc
mov
jno
jne
dec
pop
sbb
ret
adc
mov
mov
ja
dec
daa
lcall
cmpsl
imul
pop
mov
jmp
sbb
inc
mov
mov
cwtl
cmp
mov
stos
sub
sbb
add
daa
mov
es
cmp
push
in
jle
das
fildl
cmc
lcall
sarl
call
jne,pn
mov
xor
jnp
sub
jp
fldt
push
cwtl
jmp
gs
sub
adc
mov
fnstenv
out
data16
dec
sbbb
in
xlat
test
dec
adc
pop
adc
push
adc
cld
pop
out
sbb
shll
ljmp
shl
jbe
cltd
mov
mov
adc
mov
imul
cmp
pop
xor
dec
subb
dec
xlat
inc
aaa
xchg
and
xchg
neg
stos
push
sub
mov
add
lock
dec
dec
xlat
stos
shlb
cld
push
cli
add
ud2
in
mov
cmp
out
out
jno
lods
imul
leave
adc
add
inc
jle
cmpsl
ret
and
sub
jg
push
dec
movsb
push
push
lock
xor
mov
sub
pop
push
insb
add
scas
or
add
add
pusha
add
es
push
cs
cmp
sbb
lret
repnz
lret
mov
or
or
in
ss
adc
or
pusha
and
enter
fld1
cmp
adc
fnstsw
lcall
mov
xchg
push
pushf
sub
sahf
sbb
out
nop
cmpsb
mov
cwtl
in
xchg
mov
arpl
mov
testb
mov
inc
packuswb
inc
rorb
popf
xor
sbb
xchg
leave
lcall
jge
inc
ss
ja
fwait
inc
xchg
hlt
mov
imul
aaa
mov
cmpsb
ficompl
adc
cmpsb
mov
inc
mov
inc
sbb
fcompl
cld
push
int3
add
mov
ja
cld
mov
lahf
or
idiv
cmp
inc
sbb
xchg
lds
sub
inc
dec
popf
push
icebp
mov
pop
mov
xchg
adc
pop
adc
pop
jo
cmp
or
rolb
and
sbb
dec
sar
sarb
mov
pushf
cli
int
clc
call
pop
popf
and
push
loopne
aad
test
fsub
dec
mov
lret
push
cmpsb
outsb
scas
inc
adc
xchg
mov
adc
pop
cltd
mov
push
stc
repz
lods
xor
xchg
leave
scas
fisttps
icebp
int
lret
mov
sar
in
jb
lret
in
xchg
je
mov
xchg
jl
in
or
jl
or
pop
out
stos
xor
call
mov
gs
xor
cld
mov
rclb
cmpsb
pop
adc
shl
mov
in
or
xchg
scas
rcl
lret
shll
inc
ja
roll
dec
in
repnz
repnz
sub
cmp
adc
outsl
mov
lret
cmp
cmc
fisttps
and
adcl
dec
insl
push
inc
cmpb
add
cmp
jno
fnstsw
add
fs
jne
out
push
xchg
or
in
insl
andl
and
das
mov
movsl
aam
xchg
es
cmp
adc
js
jp
imul
mov
xchg
lock
pop
in
nop
pop
pusha
pop
scas
push
cmp
cli
shr
scas
test
jo
xor
ja
mov
pop
cmpsl
sar
aaa
add
push
mov
rorb
pop
push
cmp
mov
cmp
mov
ret
inc
add
popf
jecxz
cld
or
les
or
and
lahf
lret
xchg
mov
int
sahf
push
ret
pop
cmp
mov
dec
mov
cmp
push
rcll
jge
xor
push
rcr
clc
fsts
mov
in
mov
sub
pushf
scas
rcr
std
push
or
insb
xor
ja
push
adc
xor
stos
mov
xor
inc
in
cmpsb
jnp
adcb
fsub
mov
push
testb
cmp
mov
and
sbb
mov
mov
fwait
jb
fwait
test
in
addb
scas
insl
das
inc
stc
movsb
sub
xor
mov
lods
in
jnp
jne
mov
out
daa
into
jge
xchg
push
ss
movsl
pushf
popa
add
arpl
mov
dec
jg
and
rcrb
mov
sbb
fstpl
dec
stos
xchg
mov
push
mov
or
rcl
and
push
addr16
test
das
xorl
das
mov
call
lods
xorl
dec
cmp
mov
lock
pop
jecxz
cmp
fiaddl
sbb
or
or
ret
xchg
sbb
pusha
jge
xor
pop
adc
xchg
xchg
lahf
xchg
jmp
jno
cli
lahf
shll
dec
mov
std
mov
into
pop
push
cmp
mov
mov
outsb
mov
pop
test
lock
jp
out
or
stos
lahf
push
test
dec
loope
pusha
push
in
sbb
or
push
jbe
adc
clc
in
and
jl
lcall
scas
bound
sub
lods
pop
cwtl
and
jns
fcoml
fdiv
and
lods
push
sub
lock
stos
cwtl
inc
sbb
js
xor
and
movl
repnz
pop
aam
ret
out
push
js
loope
imul
call
jl
push
rcl
push
insb
and
icebp
push
cltd
ret
stos
or
dec
stos
xor
inc
fs
pmaxub
push
ds
pop
fisubrl
out
sbbb
or
lea
mov
fwait
jp
mov
jnp
cltd
test
movsl
pcmpgtd
fsubr
sub
mov
test
adc
sbbl
cltd
push
repz
cmp
pop
out
out
test
in
lock
rcl
arpl
jnp
mov
pushf
push
test
popa
clc
pusha
dec
fcmovne
lea
lods
mov
xor
push
push
cltd
ret
mov
mov
rclb
cltd
sub
add
notb
int
mov
and
scas
loop
js
loope
mov
jns
imul
nop
pushf
into
mov
daa
hlt
into
sahf
sbb
frstor
gs
cmp
cmp
cmp
and
xchg
aaa
enter
mov
insb
pop
jge
lock
sbb
sub
mov
repz
xor
cmpsb
jne
mov
sub
lahf
stos
ljmp
into
loope
mov
les
jbe
movsl
fwait
jae
insb
xorb
xor
aad
fidivl
mov
xchg
jp
lret
aas
out
and
je
cwtl
dec
or
test
fmuls
int3
arpl
hlt
popf
test
or
xchg
loop
or
imul
push
or
jb
jg
test
mov
pushf
push
test
xor
fnstcw
jo,pt
les
and
loope
dec
inc
lahf
pop
scas
in
fwait
adc
rorl
cwtl
out
jle
xlat
adc
cmpsb
add
lahf
mov
cwtl
pushf
jb
aas
imul
imul
mov
and
xor
jecxz
rclb
fisubl
hlt
scas
mov
jmp
ja
mov
leave
std
fisubl
mov
cmpsb
push
cmp
out
enter
and
decl
push
scas
je
mov
rcrl
mov
popa
shll
adc
jnp
inc
loopne
lds
inc
jmp
push
mov
cmp
icebp
xor
inc
insb
mov
pop
jmp
jb
mov
repnz
mov
dec
pop
adc
jbe
mov
test
mov
jecxz
iret
stos
imul
enter
int3
test
add
pop
fistpll
mov
push
lock
stos
test
pushf
push
mov
xchg
out
pop
pop
add
jbe
jnp
mov
adc
call
test
notb
out
pop
idiv
mov
mov
jne
xchg
mov
dec
sub
sbbl
outsb
xor
popf
inc
sahf
and
in
xchg
cs
out
inc
cmc
andl
imul
jnp
out
push
scas
lods
imul
int3
outsl
adc
cld
rcl
xor
cmpsl
fcompl
sub
push
in
jo
jne
mov
jmp
daa
imul
mov
jne
mov
pop
mov
xchg
sbb
xlat
and
adc
mov
insb
pop
dec
mov
xor
push
loopne
mov
iret
pop
mov
pop
imul
xchg
cltd
jmp
jno
nop
sbb
jne
scas
addl
lcall
inc
or
push
and
in
addr16
pop
jbe
jno
jno
repnz
outsl
aad
pushl
pusha
insl
xor
mov
sarb
insb
sbb
ljmp
pop
jne
lahf
pop
stos
or
xlat
push
jno
xchg
mov
repz
mov
or
sahf
test
dec
push
rclb
mov
xor
adc
lcall
sbb
jbe
lods
mov
insl
pop
fcomps
push
jecxz
aad
xchg
sbb
test
out
in
pop
mov
adc
call
insl
push
push
mov
int
mov
mov
mov
jbe
mov
mov
add
into
in
inc
aaa
mov
popa
xor
cs
daa
jnp
add
mov
xor
or
push
mov
movsb
scas
movsl
jns
cmpsb
sub
pop
adc
ret
in
out
push
test
dec
inc
loopne
stos
sbb
outsl
in
dec
cmc
subl
or
bound
or
pop
mov
shr
push
pop
lret
pop
rol
pop
cwtl
jge
sub
push
inc
lds
aas
and
inc
and
popf
les
test
fdivl
mov
scas
dec
ret
test
dec
sbb
sbb
xor
add
hlt
out
pop
or
cmpsb
aaa
adc
jo
push
es
lret
adc
xor
iret
fdivs
fcoml
xchg
aaa
dec
and
cmpsl
pusha
jno
cs
das
aad
fwait
or
sti
inc
xchg
jmp
adc
test
fcmovnbe
mov
cmp
xchg
rcrb
pop
scas
rcrb
jmp
gs
imul
testb
inc
lods
and
imul
cmpb
push
push
aas
lret
daa
pop
mov
jg
lods
cltd
pusha
adc
mov
nop
leave
rcl
icebp
ja
lcall
cmpsb
pushl
sub
pop
mov
inc
mov
mov
addr16
fs
movsb
mov
cmp
xchg
jns
rcrb
or
cmp
in
sti
adc
into
and
xchg
add
push
lahf
imul
loop
in
scas
xor
jae
fistpl
sbb
test
in
cs
mov
ss
lock
xchg
push
ds
xchg
xor
xlat
ret
sbbl
xchg
movsl
aad
aas
rcrb
pop
xchg
imul
out
lret
lods
jb
jle
jl
or
jle
push
jbe
xor
and
jl
popf
push
adcb
pop
mov
std
aas
les
mov
and
loope
data16
or
jno
xchg
sysenter
scas
mov
fdivrs
jo
dec
cli
pop
lcall
outsl
ljmp
add
xchg
lock
xchg
cmp
sub
sub
outsl
cmp
movsl
cmp
cmp
mov
repnz
fptan
or
xor
inc
mov
bound
sti
push
divl
fwait
out
mov
mov
adc
add
in
leave
fdivl
add
push
test
lds
call
or
rcrl
fdivrs
sbb
add
fsubs
ljmp
pop
jb
dec
add
dec
jne
add
push
jbe
sbb
add
div
pop
les
imul
lds
xchg
dec
into
out
inc
xor
mov
inc
lahf
mov
mov
gs
jmp
or
jge
fdivr
movsb
dec
in
sbb
xchg
imul
outsb
and
jne
rcrb
ja
loope
lret
shll
cmp
lahf
jne
aas
xchg
xchg
push
xor
dec
icebp
mov
dec
adc
xor
mov
fsubrp
mov
mov
mov
xchg
pushf
jle
jle
in
fsubrs
loope
clc
cmp
pop
cmc
mov
shl
xor
shrb
jle,pt
aam
lods
pop
add
mov
fsubs
into
xor
aaa
cmpl
mov
dec
je
repnz
shl
push
leave
mov
mov
adc
cmpsl
es
jecxz
adc
fisttps
adc
addr16
mov
dec
mul
xchg
aas
stos
repnz
xor
in
cmp
or
clc
outsb
cli
push
mov
rcl
jmp
iret
fisttpll
sub
push
dec
movsl
lods
mov
pop
sbb
xchg
mov
xchg
aam
sahf
pop
mov
mov
xchg
daa
and
in
dec
testl
cld
jb
jnp
loop
imul
cmpsl
mov
xorb
das
aam
out
inc
pop
js
movsl
or
pushl
push
adc
and
int
pushf
mov
mov
pop
fcompl
clc
loope
push
loopne
push
bound
shrb
sbb
test
jle
je
jmp
inc
pop
lods
mov
and
imul
pop
cmp
dec
fs
push
cmp
jae
mov
stos
add
sahf
enter
icebp
pushf
mov
mov
mov
shrl
bound
dec
icebp
dec
and
fwait
adc
dec
mov
shrb
or
sub
test
sub
push
cmp
test
push
mov
jnp
adc
sub
pushf
cmp
xchg
sahf
sub
pop
in
mov
cmpsl
xchg
test
and
dec
popf
aad
adc
xchg
cmc
call
fisttps
imul
cmp
cmpl
adc
test
shl
jl
push
or
movsl
mov
loopne
rcrl
outsb
popa
adc
cs
jno
fs
shlb
sbb
sub
insl
inc
dec
push
jns
iret
and
push
fcom
push
cmp
jl
sbb
push
add
jmp
push
jne
cmp
shl
decl
test
mov
jl
sub
xor
loop
rol
lds
mov
and
leave
pop
rorb
test
lret
adc
movsl
sbb
orl
mov
int
popa
arpl
call
mov
inc
imul
mov
jne
xchg
stos
xor
fidivl
frstor
dec
aaa
in
rol
mov
inc
data16
mov
aad
sub
fsubr
pop
jg
xchg
push
push
sti
jle
inc
mov
outsl
mov
popa
lret
xchg
notl
mov
sub
lcall
pop
aam
test
mov
mov
daa
adc
in
and
xchg
rol
mov
ljmp
test
ss
sub
mov
cmp
aad
jb
xchg
repnz
je
clc
loopne
imul
mov
sub
pop
pop
inc
push
or
imul
aad
mov
sub
cmp
and
mov
xor
nop
roll
cld
xor
test
or
fisubl
test
arpl
movsb
xchg
loop
aam
fistl
cltd
mov
inc
rcrl
ja
sbb
mov
mov
mov
dec
mov
jecxz
aad
jmp
lds
push
fwait
int3
cli
lret
sbb
xchg
js
mov
cs
xchg
jecxz
mov
push
cmp
movsl
mov
iret
test
dec
jge
adc
jne
push
mov
loopne
lahf
cmp
pop
stc
cmc
stc
jb
sbb
ficomps
je
mov
popf
sbb
fsubs
add
sbbb
push
call
sbb
xchg
xor
outsl
out
add
xchg
pop
mov
in
or
rcrb
ss
and
mov
mov
in
cs
sub
outsb
dec
je
ljmp
test
cld
push
and
jmp
fyl2xp1
add
call
imulb
test
rcr
inc
inc
les
rep
aaa
mov
les
and
push
in
sub
hlt
sbb
outsl
sbb
sub
add
xor
push
or
bnd
push
mov
pop
in
arpl
lea
xchg
sbb
int3
ljmp
movsb
adc
inc
enter
xor
sub
jle
sub
mov
lock
jo
ja
dec
mov
test
clc
arpl
dec
xchg
dec
fsubrs
cmp
jno
sbb
scas
in
sbb
pushf
jae,pt
or
repnz
or
cld
mov
lahf
out
cmp
popa
cmpsb
es
cmp
push
lret
push
dec
jle
xor
cmp
bound
out
lret
inc
cmp
xchg
insb
dec
xlat
scas
xchg
repnz
out
ret
inc
sub
push
sub
jle
dec
test
cmp
enter
lods
inc
and
mov
je
cli
mov
jo
test
xor
pop
jo
pop
pop
xor
int3
movsb
sub
sub
push
jp
fidivl
js
inc
aad
jbe
dec
repz
jmp
bound
inc
into
pop
mov
pop
stos
lret
je
enter
pushf
or
call
cmp
cli
mov
js
mov
pop
leave
xchg
and
fdivrl
fnsave
cmp
jmp
in
pop
push
dec
insl
out
lods
pop
cmp
xor
aas
push
mov
jle
mov
std
gs
mov
ljmp
or
outsb
cmpsl
test
jo
aas
insl
sbb
push
and
cmp
testb
aas
push
inc
repz
aas
or
leave
sub
ja
iret
pop
lcall
sub
jb,pt
fdivl
adc
cmc
inc
std
jmp
push
gs
aad
iret
test
sahf
push
xchg
rcrb
mov
pushf
mov
test
push
mov
rclb
or
jle
decl
ret
test
mov
in
and
nop
int
sbb
sub
dec
mov
xchg
mov
int
add
and
fildl
mov
pop
xor
and
cmp
mov
push
aaa
into
inc
pop
pop
pop
and
ret
and
nop
pop
test
xchg
pop
lds
fs
sub
dec
pop
inc
mov
lret
pop
adcb
jae
std
aas
push
cmp
pop
test
call
add
es
enter
rorl
push
fldt
push
insl
lock
adc
cld
into
test
pop
rcl
js
xor
insl
sbb
fstps
out
push
xor
lock
negl
outsl
lods
sti
jmp
jno
daa
cmp
pusha
add
addr16
pop
adc
arpl
pop
and
mov
mov
push
loopne
stos
push
testl
call
pop
jb
sbb
mov
pcmpeqw
cmp
xor
add
lcall
into
mov
xor
enter
cmpsl
inc
ljmp
add
hlt
gs
mov
iret
pop
cmp
sahf
dec
sub
inc
mov
aad
orb
cwtl
hlt
sbb
call
mov
out
add
scas
rcll
arpl
fadds
data16
jnp
iret
ds
shr
pop
and
pop
jns
lea
cmp
data16
pop
inc
test
adc
adc
fistl
ficoms
out
clc
jle
sbb
pusha
mov
jbe
mov
sbb
mov
jmp
pop
dec
sbb
call
rcll
fstl
add
in
mov
xchg
xor
mov
aam
js
sbb
and
fdiv
fsubrp
and
out
stos
and
imul
popf
pop
jle
pop
cs
stos
mov
sbb
out
je
scas
push
xchg
jl
jbe
push
sub
dec
aam
xchg
pop
mov
inc
push
jne
pop
iret
sbbb
rolb
inc
shlb
in
cmp
fistl
in
cltd
in
pop
jl
adc
push
test
hlt
leave
pop
push
pop
out
std
mov
popf
mov
mov
scas
fs
add
pushf
inc
inc
jecxz
fs
jge
int
sbb
cld
cmp
hlt
cmpsl
and
pusha
out
popf
fsubr
and
test
xor
or
js
aam
cmp
dec
aam
jge
repnz
adc
mov
stc
and
fidivrl
ja
sbb
xchg
xlat
mov
xchg
pop
aas
ds
scas
jbe
rcrb
out
adc
mov
push
stc
inc
push
sub
into
iret
mov
sub
dec
sahf
repz
mov
mov
xor
sub
sbb
ret
rorb
lods
xor
sub
sbbb
call
seta
jnp
out
xor
push
push
push
push
out
lds
sbb
sbb
pop
mov
cld
popa
pushf
divb
fisubrs
lods
out
jb
out
lock
pop
mov
xchg
stos
repz
mov
inc
jg
push
add
ficomps
xor
pop
in
icebp
or
xor
hlt
add
mov
cmp
enter
sub
hlt
in
lret
xchg
add
addr16
inc
pop
aam
xor
push
push
pop
addr16
aam
push
add
pop
xchg
sti
jg
push
cli
jnp
aad
lcall
repz
adc
or
mov
mov
cmc
test
cmp
orl
in
lret
mov
push
lds
sub
xchg
cwtl
iret
out
rcll
ljmp
dec
inc
xor
jl
xchg
in
dec
pushf
dec
test
and
lock
cmp
imul
push
adc
out
xchg
or
pop
xor
icebp
jno
and
enter
rorb
xchg
jo
add
add
cmc
adc
mov
or
dec
ss
cmc
mov
jp
xchg
dec
fs
mov
mov
cmc
cwtl
iret
jmp
jae
out
stos
push
and
add
sub
dec
adc
cmp
nop
cmpsb
test
fwait
cmpsl
fbld
jle
lahf
xchg
jae
loope
sbb
popa
jg
and
call
mov
mov
mov
enter
jmp
movsl
xor
sbb
sub
inc
jno
fisttpl
push
fcoml
inc
jnp
popa
and
std
pop
pop
scas
out
mov
hlt
sub
mov
sub
push
mov
sbb
scas
iret
les
adc
dec
int3
mull
jl
js
mov
loopne
pop
test
xchg
mov
fwait
xor
adc
aam
xchg
in
mov
mov
adc
sub
mov
std
inc
sbb
add
mov
lret
mov
ficoms
mov
adc
add
aaa
stos
or
outsl
and
ret
stos
aam
imul
push
frstor
xor
int
push
push
test
lods
fimuls
jge
shl
push
jl
inc
push
adc
pop
xorl
xchg
pop
pop
pop
insb
iret
push
or
fstpl
jb
scas
inc
or
stos
xchg
rorb
inc
lods
in
lahf
jnp
adc
mov
mov
insl
pop
movsl
jl
lret
cmp
aaa
or
pop
cmp
test
js
test
add
pop
lods
out
loope
or
or
jge
aam
loop
fwait
rclb
push
insb
pop
fnstenv
dec
in
lods
jecxz
dec
add
sub
out
cs
mov
pop
pop
inc
in
cwtl
daa
lcall
loop
icebp
leavew
xchg
cmp
add
out
arpl
adc
push
int3
mov
fsub
add
loopne
minps
and
aam
imul
fs
jp
mov
push
jmp
in
or
push
cmpsl
add
inc
sarb
push
shlb
ret
lret
dec
ficoms
mov
jbe
clc
mov
fs
fucom
lods
push
or
and
fwait
inc
out
fucomi
cltd
pop
mov
or
sub
sbb
adc
movsl
insl
rorb
inc
lock
and
das
stos
add
aas
sbb
mov
popf
imull
sub
jb
stc
aaa
jl
mov
cli
sbb
enter
fsubl
pop
out
pop
test
pusha
negl
imul
jb
cli
add
jbe
cmc
mov
pop
adc
add
in
andl
gs
repnz
sbb
sub
inc
loopne
dec
sbb
adc
mov
lcall
push
cli
sub
mov
bound
mov
push
lret
pop
jae
sub
ss
test
lcall
mov
out
inc
xor
jmp
clc
mov
stos
lahf
data16
ja
dec
inc
mov
imul
jge
add
xchg
insb
mov
ffree
push
and
and
sbb
and
dec
divb
jb
inc
and
pushf
mov
mov
mov
adc
std
inc
ljmp
shrb
xchg
xchg
int3
pusha
mov
movsl
in
nop
fsin
pop
fcmovnu
imul
xor
and
roll
push
outsl
xchg
dec
lret
push
inc
stc
push
call
mov
push
mov
repnz
add
and
jo
xor
mov
jg
and
imul
stos
mov
loop
and
sub
lods
mov
in
sbb
xchg
mov
inc
dec
xchg
dec
sub
aaa
sub
fsts
fwait
sarl
enter
or
jmp
lods
sub
mov
xchg
shll
or
jb
dec
mov
stc
jbe
lds
inc
jmp
or
xchg
outsb
mov
pop
imul
and
cld
pop
or
fdivrl
dec
into
add
adc
jp
enter
pop
fisttpl
add
cmp
mov
xor
aaa
pop
call
les
lods
loopne
add
lret
add
jecxz
dec
mov
cwtl
into
mov
adc
dec
lea
ljmp
fsubrl
addr16
pop
notb
ret
stos
jle
loope
sarb
push
mov
dec
xchg
xlat
push
lods
or
sarb
es
pop
jle
add
icebp
mov
mov
stos
cmp
jb
fisttpl
pop
hlt
or
imul
ja
hlt
sbb
movsl
add
mov
dec
gs
hlt
mov
sub
xlat
cmpsl
push
inc
inc
add
ret
imul
insl
aas
movsb
inc
adc
mov
mov
adc
add
pop
stos
repz
mov
lahf
mov
jae
in
jae
lcall
xchg
mov
sub
add
shll
pop
test
mov
xor
rcrl
sub
fwait
xchg
pop
lret
pop
in
inc
xchg
repnz
push
dec
mov
gs
pop
xchg
fnstcw
fsubs
clc
inc
mul
hlt
in
sbb
add
flds
lea
idivl
outsl
lock
cli
push
inc
push
add
shr
xor
dec
movsb
pop
or
jo
mov
and
xorl
ss
test
ret
call
ljmp
xor
dec
xor
je
divb
and
stc
dec
arpl
jb
pop
push
into
sbb
xchg
jecxz
cli
inc
out
push
iret
test
mov
sbb
pop
imul
add
xor
inc
jb
mov
lret
push
mov
adc
xorl
aas
sbb
push
adc
lds
lds
lcallw
push
mov
xor
xchg
test
push
test
out
movsl
movsl
lahf
or
mov
push
orl
lea
push
sub
mov
mov
fstps
outsl
cli
push
adc
insb
out
shl
cmp
adc
lahf
xor
pop
mov
rclb
adc
sub
cmc
dec
stc
mov
scas
aam
mov
lcall
aam
jne
sub
mov
pusha
xor
add
cmp
mov
adc
and
inc
jge
sub
ja
fidivrs
mov
rcrb
jnp
and
sbb
xchg
push
inc
sub
adc
push
dec
push
mov
pop
lea
inc
xor
dec
jmp
cmp
dec
push
dec
and
out
incl
mov
inc
jmp
andb
adc
pushfw
cs
xor
xchg
out
push
pop
ret
mov
insb
add
sti
into
andl
test
mov
xchg
in
sahf
sub
pop
adcb
mov
push
int
jecxz
cmp
and
or
jns
add
ss
lea
cmpsl
jns
mov
rolb
or
add
or
mov
sahf
shrb
jbe
add
cltd
jne
dec
mov
ja
sub
pop
repnz
hlt
call
jae
sbb
dec
mov
inc
sbb
insl
jnp
mov
mov
mov
inc
sub
iret
and
lcall
and
dec
jp
cmpsb
ficompl
hlt
push
inc
dec
sub
lret
dec
xlat
jo
xchg
stc
and
dec
andb
ljmp
inc
mov
and
pop
sbb
or
loope
cmovge
xchg
sub
push
pusha
pusha
inc
push
nop
jae
and
nop
jae
push
and
mov
lret
enter
or
jl
ds
push
lods
fists
mov
movsb
arpl
xchg
xor
dec
push
in
adc
jb
sar
rclb
fs
xor
jg
xor
sub
adc
sahf
orl
xor
push
insb
jns
inc
lcall
mov
and
sub
xchg
jl
into
call
sub
fildll
dec
mov
pop
sub
jae
adc
mov
mov
das
jecxz
mov
ret
scas
cmp
idivl
leave
sbb
pushl
loopne
inc
jne
loop
mov
mov
lock
mov
push
jg
cmpb
out
andl
or
cmpsb
xchg
sub
in
pop
and
loope
scas
ljmp
mov
mov
or
jle
out
addl
lea
bnd
lret
mov
add
jg
pop
shlb
jae
fsubrl
cmc
cwtl
ljmp
testb
sub
lret
or
sahf
or
xchg
pushf
dec
aam
adc
inc
sbb
insb
loope
stc
rorb
xor
fdivr
jg
cli
movsb
popl
scas
int3
sbb
mov
mov
and
mov
mov
sbb
cmp
mov
push
addr16
push
xor
inc
mov
bound
fnstenv
jno
fisubrl
add
adc
outsl
push
cmp
mov
std
cs
or
inc
lods
daa
jge
push
dec
mov
or
adc
jno
xlat
icebp
dec
stos
or
lret
dec
inc
mov
popa
mov
ss
and
jl
loopne
test
inc
inc
clc
add
rorl
push
xor
adc
nop
rclb
negb
pop
mov
cli
negl
sbb
pop
lahf
scas
rolb
lea
jl
cmp
push
adc
into
mov
sti
and
loop
lds
inc
dec
in
gs
fwait
jp
insl
pop
dec
scas
icebp
dec
adc
sub
jnp
xor
mov
std
mov
out
xchg
lds
adc
dec
push
cli
sub
pop
shrb
mov
in
mov
ds
neg
outsb
dec
pop
int3
jl
cld
jo
js
addr16
cmp
xor
pop
sub
jmp
fs
mov
int
cwtl
in
mov
shlb
mov
movsb
shrl
mov
ja
mov
or
xor
imul
or
ja
push
inc
or
lods
adc
stos
jecxz
pop
mov
or
jo
cs
enter
adc
in
sbb
loope
out
dec
jp
cmp
push
mov
mov
add
call
sub
aad
cmp
mov
iret
outsl
int3
jmp
pop
sbb
sbb
pop
cmp
movsb
mov
mov
dec
imul
xor
xor
dec
jmp
sbb
pop
in
jp
jecxz
jge
lods
mov
adc
push
shr
pop
in
cld
ret
scas
dec
add
jp
rcr
push
dec
enter
add
add
jg
mov
jbe
cs
jbe
test
test
stos
ja
xchg
adc
in
pop
jl
jne
ret
xchg
cltd
sub
scas
in
out
mov
mov
les
adcb
rorb
dec
ror
or
jmp
inc
adcb
outsb
sub
cmp
mov
mov
ret
ljmp
pop
cs
sbb
sub
in
lods
adc
lea
es
mov
dec
push
push
pop
jmp
pusha
xchg
jmp
sbb
loope
or
and
pop
movsb
mov
pop
adcb
leave
shlb
jne
adc
ret
mov
leave
and
into
push
lods
mov
mov
push
test
and
je
inc
and
cltd
in
sub
lock
cltd
sbb
xor
ret
add
sbb
xchg
ja
popa
sbb
sbbb
shrl
xchg
daa
inc
scas
cli
fstpt
out
cmp
mov
push
rclb
and
pusha
dec
lods
sub
lock
ljmp
not
inc
mull
shlb
dec
not
rolb
fs
rcll
push
fcompl
and
push
and
nop
xor
loope
sub
pop
adc
jl
shrb
dec
fwait
mov
popf
cmpb
and
fadds
mov
adc
xlat
rclb
push
outsb
jmp
mov
mov
ret
bound
cmp
or
orb
into
call
lea
cmp
mov
rol
inc
fcomip
sbb
arpl
adc
test
pusha
ss
in
push
xor
xchg
ja
push
and
std
pop
outsb
xor
dec
pusha
xchg
add
movsl
inc
jp
mov
sub
insl
jl
push
icebp
xchg
clc
mov
mov
loopne
push
aas
jmp
les
imul
add
inc
ss
fdivl
insl
stc
ds
sub
in
fdivl
loop
sbb
adc
pop
fucom
pop
xor
mov
add
mov
or
sbb
adc
mov
fisubrl
and
sub
into
add
out
xor
xor
add
or
lea
pop
add
fidivrs
std
push
add
push
into
mov
mov
loope
inc
icebp
nop
or
push
mov
push
les
rolb
popl
adc
lea
jg
mov
sbb
test
fldenv
loopne
cmp
cmp
or
xchg
adc
aam
push
lret
push
adc
dec
ds
cwtl
ss
out
loopne
pop
stc
jl
xor
test
je
dec
dec
jns
jecxz
jle
in
push
popf
fdivs
cmc
jne
inc
mov
lea
cmp
sti
jno
shlb
jnp
arpl
inc
lock
fcom
push
push
jns
icebp
loope
jle
xchg
or
mov
xchg
inc
xor
jl
int3
xchg
xchg
mov
pop
out
inc
inc
add
xor
mov
xchg
addr16
fwait
pop
aad
imul
push
aam
ret
pop
xor
jmp
cltd
dec
stc
fld
js
jge
es
inc
mov
leave
xchg
mov
and
enter
push
fnstenv
call
xor
aas
adc
mov
mov
mov
je
mulb
int3
dec
fsts
push
fnstcw
jno
imul
push
pusha
adc
shlb
and
jecxz
pop
ja
mov
loopne
jecxz
mov
je
js
adc
dec
mov
clc
add
shlb
and
add
aas
push
jb
jno
fwait
daa
in
mov
mov
lea
rolb
mov
sub
sarl
shlb
fisubrs
in
sbb
jno
std
add
or
add
sub
mov
xor
push
sub
and
fdivr
lahf
cmp
sbb
out
cmp
repnz
mov
add
inc
push
fwait
mov
jl
fsubl
leave
das
addb
xchg
sahf
jb
sbb
insl
jge
mov
ds
mov
pop
icebp
in
fidivrl
sar
inc
imul
movsb
jecxz
push
push
mov
jp
cmp
jne
fsub
fs
fyl2xp1
cmpsb
jmp
cmc
cmp
and
xchg
jnp
scas
loop
sub
cli
jno
mov
aam
and
pop
mov
cmpsb
pusha
fstpt
jl
lahf
das
sub
sub
arpl
and
or
pushf
lods
inc
outsb
aas
insb
jno
jae
into
push
xchg
out
mov
push
sub
in
xchg
mov
fdivrp
aad
lock
jge
lret
iret
mov
lret
sub
out
addl
imul
bound
jge
in
adc
cmc
xor
adc
das
insl
adc
xchg
lds
cmpb
imul
inc
imul
out
dec
ljmp
fabs
and
cmp
sbb
vxorps
js
jecxz
add
mov
mov
test
push
out
mov
addr16
mov
pop
lcall
cltd
mov
jo
iret
pop
sub
leave
push
or
and
das
jo
jns
fidivl
xchg
mov
pop
or
cmp
and
outsb
leave
stos
and
lahf
adcl
jecxz
mov
shll
ja
adc
sbb
cmc
xchg
sbb
mov
xchg
push
fwait
push
mulb
sbb
repnz
xchg
mov
push
lods
pop
ret
loopne
ss
pop
cmp
pop
or
cmp
or
xlat
jge
pushf
jno
inc
sbb
sbb
mov
add
repnz
or
scas
mov
sbb
inc
mov
jns
inc
fistl
dec
hlt
fucom
cwtl
and
pop
lcall
add
cmovne
and
push
xlat
arpl
xor
out
push
inc
fs
push
jle
push
dec
sub
fsubs
outsb
aas
pop
les
jmp
loope
fisttpl
fwait
ds
insb
dec
xchg
std
push
sbbb
pushf
jo
addr16
or
cmp
xchg
pop
daa
std
cld
pop
pop
inc
jp
arpl
jb
mov
test
mov
out
fwait
stos
mov
pop
cwtl
mov
in
call
mov
mov
pop
jnp
ss
repz
ror
div
lods
mov
out
jno
sub
push
sbbl
test
and
add
mov
iret
fcmovbe
in
pop
lock
lods
pushf
popa
sbb
ret
push
ljmp
ret
insb
cltd
das
push
jne
ds
rorb
or
push
mov
xor
cmp
ss
pushf
xor
sbb
lds
es
out
fisttpll
std
pop
xor
in
aas
stos
xor
dec
inc
inc
mov
lea
sbb
int
sub
push
and
push
dec
lock
aad
test
cli
jmp
jae
pusha
js
inc
mov
fs
sub
xchg
clc
xor
sub
cld
push
xor
xchg
mov
in
mov
jg
mov
clc
sbb
or
das
cmp
into
add
mov
jne
add
mov
pop
add
dec
mov
xor
addr16
sub
cmc
jmp
push
pop
std
ss
cmp
jbe
call
mov
nop
push
cmp
in
adc
adc
ljmp
imulb
or
inc
mov
jmp
loope
sti
cltd
inc
lods
adc
and
dec
cmp
sarl
jo
sarl
mov
data16
xor
mov
arpl
hlt
pop
ljmp
xor
dec
sbb
sbb
repz
jge
idivb
sbb
stc
mov
add
fsubrs
shll
inc
xchg
incl
enter
push
mov
jne
addr16
faddp
dec
inc
ljmp
push
jl
dec
aaa
daa
sti
and
push
test
inc
mov
insb
cmp
test
int3
xchg
ret
out
sub
dec
mov
out
push
sbb
sub
mov
inc
nop
inc
pop
add
cs
stc
adc
xor
fimuls
mov
leave
sarl
fcmovnb
jo
xchg
inc
pusha
ret
js
test
cld
jo
sub
push
scas
popa
cmp
movsb
outsb
clc
push
fwait
fwait
aam
add
ret
inc
xchg
lods
dec
jle
inc
push
cmp
xor
int
push
xchg
xchg
shrl
xlat
inc
icebp
les
push
xchg
fwait
pop
or
testb
jns
lahf
or
iret
add
mov
mov
arpl
fldt
xor
jg
xor
sbb
and
pop
mov
sbb
aaa
into
scas
hlt
inc
mov
aas
mov
mov
decl
cmp
out
dec
stos
out
pushf
stc
sub
shrl
loopne
sbb
adc
jo
pop
xor
xor
or
and
iret
ljmp
loopne
arpl
inc
jmp
mov
mov
shl
inc
into
mov
and
xchg
mov
or
push
es
push
mov
push
or
les
std
pop
out
hlt
xchg
in
imul
inc
and
test
adc
lret
jae
sahf
std
sbb
test
pop
movsl
xor
clc
dec
mov
push
xor
mov
adc
inc
scas
test
or
movsb
fistpl
out
push
push
lret
sbbb
leave
xchg
push
dec
xor
mov
pop
add
out
mov
test
push
push
ljmp
ljmp
mov
imul
out
lea
and
push
icebp
dec
andb
adc
pop
push
pop
ds
fsubrl
mov
jp
loopne
repz
orb
or
and
mov
clc
jmp
clc
subl
and
lcall
popf
push
mov
cmp
add
lret
xchg
sub
cmp
jmp
sub
sbb
dec
shll
push
repnz
cs
mov
mov
dec
stos
adc
jns
xchg
push
cmpsl
mov
dec
pop
xchg
fwait
lock
insb
pushl
pop
dec
sbb
or
gs
cltd
loopne
and
in
out
and
cwtl
movsl
lods
loopne
xchg
daa
insl
stos
cmpsl
dec
mov
fistpll
imull
mov
outsb
stos
xor
js
loope
es
push
incb
add
es
in
dec
mov
push
jo
mov
adc
cmp
sti
sbb
mov
xchg
xlat
or
push
in
jge
ret
imul
push
and
mov
in
and
mov
jae
push
adc
and
nop
inc
or
jecxz
lcall
mov
cli
cmp
xchg
lods
cmp
push
inc
ljmp
add
lret
xor
adcb
pop
fmulp
dec
dec
pop
aaa
int3
add
push
ret
mov
push
pop
jb
mov
lods
push
xchg
xor
in
cmp
jae
bound
lcall
xchg
xchg
jns
jo
mov
lret
dec
mov
outsb
add
inc
loope
jp
setle
inc
sbb
sbb
out
or
sub
cs
dec
jno
jnp
mov
jae
sbb
loop
xchg
scas
jno
movsl
fisttpll
inc
repz
sub
mov
testl
loop
les
data16
shrb
push
dec
xchg
test
aam
push
notb
mov
mov
daa
dec
aas
lods
adc
adc
mov
pop
fnop
pmulhw
sbb
mov
inc
dec
roll
lret
lcall
sbb
imul
xor
lcall
lret
andb
cmp
imul
xchg
mov
push
cltd
test
inc
dec
in
lret
or
jmp
mov
out
pmuludq
fildl
add
outsb
mov
cmp
add
imul
addr16
and
jne
addb
stos
sbb
jne
lock
pop
sub
fwait
lds
cltd
int3
mov
pop
mov
mov
mov
xlat
mov
lret
shr
mov
and
mov
sbb
add
mov
std
cmp
lea
xchg
cmp
pop
fs
xchg
jne
mov
fisubrl
inc
aas
and
int3
xorb
add
pop
paddq
push
bsf
lahf
inc
dec
mov
dec
dec
xchg
imul
sub
push
movsb
sbb
mov
insl
or
stc
repnz
or
bnd
test
add
scas
lods
rcrl
inc
clc
cmpsb
xor
aas
mov
adc
dec
xlat
shrb
rorb
ds
cli
in
leave
into
sbb
sub
push
push
imul
icebp
sub
cmp
sub
mov
lea
aas
lods
test
bound
cmp
pushf
lcall
mov
outsb
sbb
pop
push
push
out
push
adc
inc
lock
add
scas
std
adc
cmpsl
sbb
nop
inc
sub
popa
jmp
mov
decb
pmaxsw
lahf
lods
add
mov
pop
mov
pop
sub
cmpsb
pop
jae
or
inc
in
stc
test
pop
add
jbe
cld
adc
sahf
scas
mov
mov
clc
gs
jecxz
int
in
xchg
lcall
xchg
xorl
xor
or
mov
and
arpl
or
jmp
dec
lods
out
cmp
int
or
andb
aam
loopne
imul
popa
xor
mov
jge
dec
xor
sub
daa
sbb
jle
loop
mov
lods
sar
out
jecxz
ljmp
pop
in
xchg
xchg
test
inc
mov
cmp
stc
sub
fisttpll
cli
popf
mov
jl
sbb
or
push
cmpsl
jo
popl
mov
sbb
enter
in
xlat
int3
fs
adc
mov
inc
and
aaa
lock
or
push
fcmovnbe
inc
dec
fisubrl
mov
or
in
mov
lods
mov
int
pop
xchg
cmc
jno
or
aas
fiadds
or
dec
insl
jb
xor
sub
and
lock
and
push
mov
fcmove
out
jnp
mov
push
ficomps
hlt
or
jge
sub
mov
imul
xor
push
jno
and
add
ds
das
fisubrl
js
shlb
cli
sahf
in
sbb
fwait
andb
add
adc
push
add
fcompl
mov
mov
xlat
testl
imul
fdivl
inc
loop
daa
jnp
fst
shr
xor
clc
sbb
js
cmp
lods
les
sub
lds
jl
fsub
stos
mov
add
outsl
push
in
mov
cmp
popl
sahf
rcrl
faddl
stos
inc
in
jecxz
inc
lahf
lds
and
int
lock
xchg
jno
mov
mov
pop
xor
fldcw
das
xchg
cmp
and
xchg
fnstcw
or
pusha
shrb
sbb
push
pop
jo
push
in
push
in
and
fwait
xchg
pop
dec
mov
push
mov
add
cmp
fdivrl
jge
xchg
imul
push
in
loop
sbb
shrl
xchg
loope
sbb
loopne
outsb
push
push
xor
sbb
inc
jp
dec
inc
sahf
scas
mov
ret
jo
dec
movsb
subb
pushf
andb
lret
mov
pop
data16
jp
and
mov
call
dec
test
dec
sarl
jo
and
mov
ret
xchg
mov
fcompl
insl
dec
or
mov
cmp
std
jne
dec
rorl
lret
mov
pop
mov
mov
fists
icebp
cmp
pop
sub
pop
sbb
movb
rolb
pop
mov
movsb
jle
push
jae
bound
enter
leave
add
call
sarl
jg
call
or
mov
cmpsl
and
add
add
jae
mov
arpl
pop
repnz
inc
or
jb
sbb
arpl
fwait
add
fisttpll
jl
jge
sub
inc
mov
xlat
lahf
inc
or
adcb
aad
pusha
sub
xchg
les
mov
jne
pushf
mov
sub
fnstsw
adc
sub
add
in
fstpt
int
rolb
test
cwtl
lahf
ljmp
imul
loope,pt
pop
aad
mov
or
fidivs
mov
lea
stos
cmc
mov
sbb
mov
out
mov
enter
in
adc
repnz
iret
hlt
sbb
pop
sbb
aas
fnstcw
jecxz
mov
adc
adc
arpl
lcall
pop
sub
adc
push
or
push
push
outsl
push
daa
or
mov
test
inc
les
ljmp
repz
lcall
sub
repnz
js
mov
arpl
and
notb
rolb
xor
cmc
call
dec
mov
ret
inc
test
push
or
or
hlt
add
cmc
sub
hlt
dec
or
fstp
lret
jne
das
lahf
incb
popa
cmp
test
fistpl
push
xchg
xchg
nop
fmull
cmp
ficomps
inc
mov
pop
nop
insl
icebp
or
sub
popf
and
dec
adc
inc
imul
cmp
popf
dec
insb
es
mov
imul
or
push
sub
rcrb
mov
mov
repz
sub
popf
jl
mov
fsts
xchg
jmp
add
xor
aad
adc
jp
add
mov
les
jmp
cmp
mov
sahf
fcomp
enter
dec
decb
inc
push
or
aam
inc
stc
dec
push
mov
sbb
pop
adc
mov
and
sbb
xor
fstps
js
jge
aas
mov
adc
mov
push
cmp
add
sti
adc
jb
mov
mov
nop
adc
je
mov
jg
ret
rcr
push
pop
aam
insl
shll
loope
clc
jo
lea
mov
adc
lahf
ret
popa
jnp
sub
fsubrp
lock
push
jge
inc
mov
mov
dec
inc
push
loop
cwtl
mov
xchg
div
lods
xlat
mull
push
add
shll
cmc
ret
adc
xchg
stc
hlt
loopne
icebp
push
jae
std
pop
dec
icebp
sarb
hlt
jae
test
fadds
xor
in
add
call
pop
cltd
outsl
inc
lods
cmpsl
rolb
and
xor
or
pop
cmp
jns
js
movsl
rorl
out
push
insb
imul
stos
push
in
push
enter
lock
cmc
lods
jbe
sbb
sbb
out
or
push
push
fists
rcrb
inc
lret
mov
imul
ret
mov
push
in
jl
cltd
icebp
add
sar
adc
call
std
push
or
std
sbb
insl
cmpsb
add
inc
sbb
fcmovnb
sbb
or
shl
push
pop
push
jae
cmc
ja
lds
dec
sbb
inc
push
mov
mov
cmp
mov
ljmp
adc
pusha
and
in
sub
data16
adc
jno
mov
xchg
mov
sub
cmp
mov
movsl
dec
mov
push
push
mov
push
dec
jle
fwait
dec
test
pop
jge
xchg
cltd
lcall
dec
fistpll
push
mov
hlt
iret
fstl
adc
ds
cs
lods
mov
pop
push
push
dec
fwait
stc
and
lods
pusha
push
sub
sbb
cld
and
outsb
adc
movsl
or
xor
in
inc
lcall
cli
push
and
shlb
int
rorl
in
fsubl
mov
push
mov
lods
sbb
dec
add
dec
xchg
out
dec
inc
aad
pop
sbb
int3
sbb
pop
pop
ret
mov
jecxz
lcall
push
sub
and
es
popa
test
daa
out
addr16
lea
icebp
add
out
jnp
push
test
mov
and
xor
ljmp
mov
mov
das
ja
daa
pop
insb
out
pop
push
lcall
pop
setb
cmp
mulb
mov
jp
mov
jp
test
and
cmp
lods
xchg
sub
fnstcw
sti
daa
lds
and
push
lods
dec
sti
bound
xor
in
ss
mov
lods
int
add
mov
mov
divl
mov
mov
cmp
mov
jmp
addb
loop
fs
dec
mov
jle
add
pushf
lahf
push
xchg
mulb
xlat
xchg
cmp
xchg
mov
or
ret
pop
push
add
inc
mov
xchg
orl
mov
adc
pop
pop
mov
or
imul
jo
hlt
inc
lds
and
or
jb
add
and
les
mov
mov
movsb
enter
mov
js
inc
stos
nop
push
in
les
aam
shrl
xor
lahf
adc
mov
xchg
mov
push
jno
test
mov
stos
into
aam
push
jnp
rcl
push
popf
ljmp
fwait
push
mov
sub
leave
aas
xchg
inc
lods
das
daa
inc
jb
mov
popa
fmulp
fdivrs
add
ljmp
xor
lods
inc
cmp
xor
int
and
add
xchg
cs
in
sbb
imul
jns
mov
push
push
mov
adc
clc
xorb
cld
pop
mov
push
popa
ret
ss
shr
xor
bts
lret
dec
dec
call
dec
sub
ljmp
mov
mov
jp
arpl
jo
push
jnp
fs
and
fldenv
sbb
lds
daa
push
push
pop
rcrb
mov
sub
mov
cmpsl
mov
test
std
jae
or
andb
les
fisubs
and
aad
xlat
mov
push
jmp
xchg
jno
pop
or
imul
add
cmpb
fwait
mov
mov
sbb
mov
pop
or
mov
xor
push
sub
xchg
xor
jl
or
sahf
jne
mov
xor
sbb
push
mov
push
clc
repz
fsubrl
inc
fildl
stc
cmp
pop
add
pop
fs
mov
jecxz
push
or
mov
cmc
add
sarb
xchg
aas
xchg
jnp
lock
mov
jbe
ja
mov
ss
lods
mov
and
pop
or
out
sbb
loopne
pop
imul
cld
stos
and
inc
addl
fwait
movsb
push
pusha
jno
push
fists
jnp
scas
rcl
pop
ret
push
loope
enter
sbb
mov
lcall
jmp
pushf
inc
aas
and
mov
int3
or
les
ret
subl
mov
rcl
adc
fwait
mov
inc
fld
mov
or
scas
dec
into
inc
je
jae
dec
mov
pusha
stos
xor
jp
pop
std
push
cmc
jge
xchg
rclb
decl
loopne
pop
jns
shll
mov
lea
add
mov
adc
cmp
jecxz
stos
push
xchg
inc
jecxz
jle
stos
xchg
in
push
lods
pop
mov
loopne
cs
jno
ljmp
mov
or
inc
mov
testb
lods
jnp
mov
jb
pushf
fwait
out
pop
ss
idivl
inc
fbstp
fcmovu
sbb
rclb
scas
test
gs
mov
sub
cmp
mov
lcall
mov
mov
aaa
rorb
xchg
dec
inc
test
jg
daa
rolb
dec
inc
lcall
or
or
das
mov
sbb
push
dec
movsb
popf
sbb
int
mov
fwait
push
dec
add
push
test
filds
iret
das
xor
lods
pusha
sub
mov
insb
sub
mov
lods
pop
pop
lods
jmp
in
pop
adc
lock
mov
out
inc
or
fdivrl
rorb
rcr
xchg
popa
or
stc
mov
xor
xchg
mov
lock
test
cmp
xchg
ja
lods
adc
sub
lret
jne
push
dec
outsb
in
inc
test
hlt
addb
cmpsl
fwait
hlt
out
ds
jbe
mov
sub
cmp
cmpsl
cmp
push
sbb
mov
adc
sub
mov
jp
pop
inc
sahf
adc
add
dec
mov
lds
enter
nop
sbb
adc
mov
clc
jo
jg
sbbb
das
sbb
cmp
jns
push
jbe
jbe
enter
add
jp
int
mov
dec
pop
rcl
fs
scas
into
sub
cwtl
xor
call
and
fs
mov
xchg
sti
mov
jmp
dec
mov
mov
adc
pop
repz
cld
cmpsb
push
mov
push
loope
xchg
xor
xorl
add
xor
push
jno
xchg
mov
mov
mov
add
xchg
dec
mov
pop
jo
int3
and
fcmovu
sub
jg
stos
insl
test
addr16
in
iret
mov
aam
dec
push
nop
sub
pop
cli
push
test
push
jno
cli
mov
mov
add
cmp
push
lods
imul
repz
mov
adc
lret
jnp
pop
lcall
xchg
mov
inc
jns
pop
lret
jge
int3
lods
in
outsb
adc
mov
cmp
and
dec
pop
subl
sub
test
xor
fisubl
loope
je
jp
call
cmpsb
icebp
push
imul
jnp
pop
fsub
jecxz
mov
jecxz
faddp
pop
rcll
les
cltd
test
addr16
pusha
lods
repz
pusha
push
lock
sub
mov
es
vandnpd
xchg
ljmp
dec
insb
out
add
mov
jge
rcll
sbb
in
cmpsb
jg
repz
adc
sbb
mov
push
iret
or
in
das
fwait
daa
inc
mov
jle
pop
fstpt
imul
or
pop
addr16
fstpt
push
and
int
ss
dec
sbb
loope
insl
sahf
add
and
pop
jp
and
fistpll
inc
imul
iret
popa
mov
sub
out
movsl
and
mov
fdivrs
add
pop
cmpsl
iret
outsb
mov
shl
sbb
lods
jl
sahf
and
loopne
bound
fldl
jp
daa
scas
ss
imul
jmp
xor
mov
add
inc
cmp
jne
xchg
cmpsl
push
sub
or
sbb
fidivl
mov
push
pop
mov
jno
out
loope
mov
test
std
mulb
mov
jecxz
ret
into
cmp
jno
cmp
outsb
test
je
int3
xchg
add
jnp
and
jecxz
dec
sti
add
mov
loope
popf
adc
movsl
push
xchg
mov
pop
aad
push
pop
or
and
dec
mov
push
aas
test
push
sbb
rol
push
adc
shll
jmp
cmpsl
sahf
jg
push
fisubs
jl
fisubrs
fisubrs
out
xchg
sub
out
loope
mov
das
fistps
push
out
push
data16
lret
rol
pop
or
pop
add
popa
rorl
mov
mov
fcmovbe
pushf
xchg
add
push
jno
imul
stos
mov
sti
jb
lods
mov
sub
pop
mov
push
mov
enter
jbe
cmc
dec
push
adc
gs
ljmp
sub
in
shrb
fmul
pop
jl
pop
jo
pop
mov
xchg
jae
sbbb
ss
call
test
les
push
or
dec
lods
int3
mov
or
inc
push
div
or
push
leave
rorl
ja
sub
jnp
popa
dec
mov
xorl
add
cli
jmp
test
adc
sbb
push
jecxz
lods
and
lods
push
add
sub
xchg
jo
leave
loope
jp
fcomi
pop
push
rorb
inc
loope
ljmp
les
sub
pop
fst
out
push
inc
aas
push
fistpl
add
pop
clc
inc
xchg
int3
sbb
mov
mov
cltd
or
pop
dec
cltd
bound
mov
add
xlat
icebp
sbb
inc
cmc
int
jno
sbb
outsb
cmpl
lea
mov
pop
dec
jbe
xor
push
push
insl
lret
adc
les
xor
in
cld
imul
lods
lods
add
sub
or
jl
scas
add
test
lods
arpl
ja
add
ljmp
or
jmp
fwait
jp
pop
cmp
loope
sti
jae
xor
xor
jg
xchg
jl
inc
sub
xor
call
insl
mov
js
imul
xchg
outsb
into
cmp
data16
cmp
jmp
mov
movsl
or
notl
arpl
sub
mov
inc
repnz
dec
popf
movsl
loop
test
push
xchg
inc
enter
ret
inc
cltd
outsb
popf
jl
cmpb
mov
jo
inc
adc
sti
lret
jae
data16
cmp
pop
add
movsb
sbb
repz
stos
xchg
movsl
pop
mov
push
and
ja
add
xorb
ss
mov
cmc
sti
push
or
sbb
mov
not
xchg
insb
dec
mov
stos
test
fcmovb
or
sti
push
pop
and
dec
cmp
push
je
jbe
lods
js
sti
mov
daa
addr16
or
xlat
cld
jne
call
xorb
add
int
arpl
icebp
or
sbb
or
mov
pop
mov
fisttpll
mov
pop
mov
xlat
adc
xchg
mov
mov
sbb
pop
mov
aas
dec
rcrl
aaa
mov
aam
stos
mov
cs
pop
sahf
aam
inc
enter
data16
imul
mov
xchg
mov
frstor
xor
icebp
add
out
repz
daa
les
sub
stos
psraw
outsb
fldcw
cltd
les
adc
test
and
jle
les
xchg
stos
push
and
aaa
pop
mov
push
xor
jae
repnz
mov
mov
cmp
adc
inc
js
jae,pt
sbb
xchg
dec
pop
int3
ja
mov
pushf
shll
xchg
stc
xchg
xchg
imul
jae
adc
xchg
push
dec
dec
xchg
adc
mov
jl
sub
inc
lea
outsb
mov
faddl
mov
xchg
jle
and
push
cmpsb
mov
cmpsl
loopne
cmp
dec
mov
les
mov
cld
sub
pop
dec
dec
sti
cmp
dec
mov
daa
jl
lret
lret
push
mov
test
jg
enter
rdmsr
fcoml
aad
loop
scas
sti
jb
out
je
xchg
subb
das
popf
push
fwait
mov
pop
xor
outsb
inc
dec
dec
xchg
ss
int
and
dec
sarb
nop
lcall
mov
int
and
repz
lock
popw
and
dec
into
adc
push
jno
loope
sbb
jmp
dec
nop
pop
shrb
push
jmp
lock
add
rcrb
inc
pop
push
xor
and
cs
cli
mov
sarl
lock
sbb
sub
adc
sbbl
les
pop
pushf
mov
stos
mov
or
aam
inc
out
aam
fistps
jb
vsubss
jnp
mov
inc
mov
cmp
push
push
adc
cmc
inc
lcall
mov
sub
mov
inc
jp
mov
add
mov
ja
inc
loop
xchg
jo
cld
pop
arpl
fs
stos
cmc
fbld
mov
pusha
add
mov
pop
shl
leave
ja
sub
xlat
mull
sahf
ret
pusha
dec
sub
xchg
xlat
push
arpl
out
pop
xchg
clc
adc
mov
xchg
mov
push
lret
js
les
fidivrl
popa
stos
inc
jle
pop
icebp
inc
test
aas
mov
loop
jbe
push
insl
pop
call
and
test
xchg
adc
sti
out
mov
das
stc
inc
push
pusha
outsb
push
pop
pop
in
sub
pop
pop
inc
xchg
js
out
insb
popl
push
out
das
imul
andl
out
fwait
jno
orl
mov
xor
int
sbb
sbb
or
sub
leave
jg
push
mov
push
aas
shlb
hlt
aas
mov
cmp
push
mov
mov
inc
fimuls
push
push
scas
and
daa
adc
and
adc
xorb
push
or
cmp
mov
lods
sub
lock
test
in
xchg
sub
sbb
jne
sti
out
cmp
lahf
cmpsl
adc
dec
xchg
addr16
push
pop
call
jp
jg
in
add
mov
pop
lds
xor
faddl
das
mov
add
xchg
xor
mov
ret
xor
es
aad
insb
mov
scas
popf
jle
dec
cltd
rorl
cli
and
sub
jno
adc
popa
fdivrs
adc
inc
pop
js
outsl
out
cwtl
es
ds
addb
in
cmpl
mov
xchg
sbb
xchg
mov
out
fsubs
pop
or
roll
sub
dec
cmp
dec
movsl
adc
sub
call
rorb
xchg
jge
popf
add
fadd
xchg
mov
or
jecxz
and
dec
mov
lods
js
push
or
pop
in
je
shufps
and
sub
sub
xchg
ret
scas
jae
popf
out
pushf
out
aam
add
xor
cmp
mov
fidivl
adc
call
sahf
testb
roll
inc
ret
pop
mov
fnstcw
ljmp
pop
cli
out
xchg
jecxz
fildll
and
ja
mov
fcoml
cmp
clc
dec
mov
enter
xor
dec
lods
mov
shrb
sub
ss
add
xor
rcrl
jle
mov
sub
dec
rorl
test
loop
inc
sub
xchg
mov
int3
roll
cwtl
sub
inc
jp
mov
rcll
add
andl
aas
loope
cwtl
inc
inc
mov
loope
xor
out
pusha
mov
ljmp
dec
rolb
xchg
mov
jge
xor
ja
mov
or
dec
test
adc
rcll
les
repnz
rcl
addb
lcall
pop
testb
inc
xor
xchg
and
imul
add
dec
add
or
jnp
je
jmp
stos
sub
jns
decl
icebp
js
xor
inc
das
cmp
or
mov
mov
in
out
add
aad
add
pusha
loop
mov
cmpsb
add
arpl
fwait
aam
rcl
mov
jp
and
dec
enter
adc
pop
scas
roll
test
sub
ret
inc
jmp
add
lea
xor
push
js
sub
sti
or
into
mov
jmp
jge
sub
add
call
sbb
ljmp
imul
repnz
test
inc
sbb
add
lods
icebp
pusha
push
mov
sbb
sub
push
loope
push
stc
add
jmpw
push
sub
push
lea
fsub
push
cmpsb
jno
loopne
stos
lcall
aaa
les
pop
xchg
pusha
loopne
shl
cmp
and
or
ds
fimuls
out
pop
lfs
addr16
fisubs
cmp
imul
fwait
pmulhuw
pop
mov
push
pusha
dec
outsl
mov
pop
inc
and
inc
shrb
sub
fldt
mov
out
xchg
push
out
jl
and
daa
jle
xchg
mov
sub
imul
mov
outsb
hlt
mov
js
vmovupd
rolb
sarl
sub
ret
pop
filds
xchg
addr16
data16
cmpb
mov
adc
repnz
xorb
std
test
mov
es
xor
sbb
shl
je
push
add
jmp
jmp
dec
push
addb
mov
scas
and
movsl
sub
push
jmp
ja
in
mov
cmpsl
jo
push
ljmp
iret
mov
dec
sahf
mov
iret
add
sbbl
icebp
xor
xor
add
cmp
inc
in
aaa
jge
lahf
data16
xchg
adc
ljmp
leave
mov
sbb
mov
mov
shr
adc
jecxz
notb
or
add
outsb
cmpsb
setno
dec
adc
mov
nop
inc
push
xor
push
xor
fldenv
imul
sbb
das
mov
pop
int
lock
test
test
ds
in
sub
pushf
jle
xchg
mov
out
and
stos
imul
repnz
pusha
repz
test
pop
mov
insb
xlat
in
je
mov
push
testl
repz
pop
out
add
push
cwtl
xor
or
or
xchg
test
imul
add
rcl
cwtl
in
cmp
mov
or
sub
lea
outsl
or
lahf
out
iret
sbb
rorl
lods
insb
jg
mov
je
sbb
mov
xor
fs
or
fdivr
aad
jecxz
xor
sbbl
out
xor
mov
into
ljmp
xor
or
jl
mov
ret
pop
pop
push
sub
jb
and
pusha
loopne
jne
mov
jmp
mov
jmp
adc
fwait
mov
mov
push
xchg
adc
iret
dec
mov
int
pop
mov
out
bound
shlb
or
mov
lret
or
lahf
mov
pop
loopne
jmpw
into
or
fstps
fs
xchg
lods
xor
xlat
mov
mov
icebp
jnp
push
jne
fbstp
out
ss
pop
shlb
frstor
xchg
mov
mov
cltd
sarb
dec
jmp
inc
test
fld
in
push
dec
push
add
loop
fnstenv
push
inc
push
les
inc
mov
rolb
sbb
and
idivb
sub
mov
cmc
fiaddl
jns
push
loopne
or
jnp
push
dec
or
xchg
stc
fsubs
xor
push
in
in
ret
scas
sbb
jns
jns
imul
add
sbb
ss
in
xchg
in
mov
call
mov
xchg
in
sub
test
les
mov
dec
aad
push
jno
lret
insl
mov
cli
and
cmp
std
imul
pushf
pop
stos
mov
xchg
fs
jecxz
out
loop
mov
xlat
lahf
mov
loopne
shr
iret
cli
ret
lods
pop
sub
lcall
sarb
imul
push
andl
sbb
pop
out
mov
into
testl
in
cld
out
ja
xor
lock
jbe
mov
xchg
push
je
xor
call
or
ss
mov
cmp
mov
mov
mov
insl
inc
stc
dec
and
pusha
es
lods
cmpsl
sbb
repnz
adc
fwait
inc
shlb
mov
aas
sysenter
push
aad
insl
cmp
xor
insb
nop
test
cmpsl
dec
pop
jns
int3
mov
fucom
lea
call
mov
adc
inc
jo
cmp
pop
mov
pop
mov
jp
aas
mov
jmp
push
and
dec
inc
std
sub
test
rsm
pop
ss
and
xchg
mov
div
cli
mov
ja
ret
xchg
xchg
dec
int3
adc
add
jg
sbb
jl
cmp
sub
mov
mov
mov
ljmp
das
add
xchg
adc
ds
xor
bound
divl
push
xor
mov
lods
push
lods
imul
cs
push
dec
or
subb
add
ljmp
std
movsb
repz
push
das
sbb
push
adc
leave
jmp
in
dec
in
out
cmc
jl
call
idivl
sub
mov
add
fdivl
addr16
pop
pop
sbb
int3
loop
jae
cmc
or
push
lods
test
imul
add
insb
mov
adcb
xchg
mov
dec
pop
data16
cld
stc
add
repz
lgs
mov
pop
orb
cmc
fdiv
nop
jmp
shlb
pop
xchg
push
push
sbb
push
pop
xor
ret
lcall
out
jns
imul
and
fldcw
aad
stos
dec
scas
sub
mov
imul
hlt
mov
xor
jp
sahf
sub
cltd
cmp
sbb
sbb
mov
aam
or
push
pop
bound
movsl
fst
gs
push
add
and
mov
sub
pop
stos
imul
push
pop
stos
adcl
xchg
push
sbb
cmp
push
sub
mov
outsl
xchg
cmp
mov
and
xor
pop
shr
xchg
push
push
aaa
xchg
mov
mov
push
inc
scas
mov
ja
ror
movsb
pop
cmp
decb
std
xchg
fs
in
dec
repz
cmpb
ds
cmpsl
pop
out
in
fcmovb
addr16
call
pop
clc
jecxz
ret
jge
sub
mov
mov
or
lret
popf
iret
hlt
jle
cmp
enter
mov
setge
stos
outsl
cld
inc
rcrl
or
and
sbb
push
mov
mov
or
xor
mov
ss
les
and
movsb
or
mov
into
call
ret
jae
es
jne
mov
in
mov
xchg
jmp
std
in
popa
icebp
leavew
dec
out
testl
das
and
xlat
mov
pusha
jnp
aam
cmp
and
orl
shll
push
xlat
mov
jno
add
repz
ja
out
push
adc
push
or
fisttps
ret
pop
iret
aad
add
or
mov
repnz
inc
sbb
cltd
and
int
add
call
ljmp
xorb
stos
imulb
lods
push
mov
aas
add
push
pusha
cwtl
sbb
pop
lret
and
pushf
fimuls
mov
mov
pop
ret
xlat
lcall
fmuls
mov
dec
cwtl
loopne
fcmovnu
loop
inc
pop
and
out
push
push
scas
mov
adc
mov
cmc
arpl
push
mov
cmp
stos
js
pop
gs
scas
pop
add
in
pushf
push
mov
sbb
mov
movb
ret
or
int
in
push
aad
fidivs
iret
pop
and
std
mov
add
fsubs
outsl
les
test
mov
cmpsl
cmp
cmp
jbe
rcrb
rorl
rcl
mov
mov
stc
cld
ret
cli
popa
fadds
xlat
int
lret
clc
push
sub
push
out
loopne
.byte
pop
dec
xchg
xorb
loop
jmp
call
jmp
cmpsl
insb
cmpsl
repnz
push
cmpsl
adc
cmpsl
andb
add
xchg
mov
add
cmp
dec
sub
mov
js
rol
cmpsl
dec
pop
xchg
scas
add
ds
push
mov
inc
scas
mov
jl
push
jns
adc
std
fs
repz
lahf
rorl
sub
outsl
and
inc
js
pop
and
jmp
lods
add
add
enter
and
push
out
andl
lret
jb
into
dec
adc
mov
mov
xchg
jne
test
cli
push
sub
fcompl
and
repnz
loop
bound
dec
adc
adc
push
das
inc
xchg
gs
push
setbe
jmp
rcl
push
negl
pop
sub
cli
jo
cmp
shlb
stc
mov
lods
lret
in
inc
add
adc
cmpsb
hlt
js
cmpsb
pop
mov
push
sbb
mov
daa
push
stos
sahf
pop
cld
or
aas
push
pop
das
dec
int3
adc
mov
adc
xor
sbb
mov
fmul
xchg
mov
into
in
clc
pop
scas
cltd
int
adc
sahf
cwtl
ret
jl
dec
pop
push
int3
sub
in
jl
movsb
daa
std
add
mov
cmpsl
pop
or
mov
cmp
xchg
jnp
lcall
shlb
out
sar
pop
fsubrl
imul
leave
clc
or
dec
inc
pop
cmpsb
jnp
mov
or
pop
ret
mov
xchg
out
nop
idivb
push
dec
stc
subb
push
ret
test
out
pop
jnp
mov
iret
dec
movsb
push
mov
movsl
repz
dec
push
cmc
pop
dec
cmp
aad
and
lcall
push
and
jg
add
cwtl
mov
pop
pop
jge
insb
inc
sub
popa
bound
xchg
push
arpl
lods
ficoml
arpl
mov
inc
or
movb
lods
xor
outsb
fstpl
aaa
mov
je
or
orl
push
mov
outsl
jns
xchg
cwtl
push
sbb
mov
ds
sbb
jbe
pop
pop
pop
fs
lea
ja
push
pop
pop
or
pop
enter
je
outsb
mov
aam
fbstp
or
or
cmp
pop
xor
dec
les
sbb
xor
add
push
fldl
mov
mov
add
test
and
mov
add
mov
pop
mov
dec
imul
jno
xchg
cmp
jo
push
or
lds
mov
or
cmp
mov
jnp
or
xor
lahf
cmp
fs
scas
and
clc
fdivrs
orb
imul
mov
inc
daa
scas
das
push
or
push
jmp
addr16
jecxz
repnz
insb
pop
jnp
loope
aam
xlat
lds
sbb
push
dec
sub
in
jb
aaa
push
outsl
mov
test
int
in
xchg
ds
jmp
ret
fsubp
mov
ss
add
loop
sub
xor
push
push
scas
or
in
ljmp
push
pop
outsl
andb
rcrl
or
jo
or
repnz
int3
xchg
inc
sub
cmp
and
shld
adc
cli
or
jbe
xor
adc
pop
insb
pop
mov
adc
in
sahf
jo
pop
push
jecxz
loop
inc
gs
fwait
pop
pop
push
lea
push
ret
inc
ret
subl
test
dec
enter
pop
data16
ss
and
icebp
add
mov
and
les
mov
xor
dec
add
mov
mov
jbe
push
sub
cmp
jg
mov
xchg
mov
es
jle
pop
inc
xlat
popf
cmpsl
xchg
into
je
fs
stos
lret
sbb
dec
das
loope
fldenv
fsts
hlt
test
cmp
jne
lods
gs
mov
vmptrst
push
push
out
movsb
mov
fnstcw
lcall
js
jg
dec
les
mov
mov
xlat
loopne
imul
int
xchg
ret
mov
sti
mov
pop
push
leave
and
xchg
pop
jns
enter
clc
and
out
std
daa
ret
testb
mov
sub
ljmp
push
mov
inc
fnsave
in
aaa
or
add
lods
push
mov
push
jp
jb
or
pop
bound
or
sahf
cmp
cmc
mov
int
push
cmp
pop
js
cwtl
mov
push
xchg
inc
sub
cmp
cmc
lock
lret
stos
pop
jae
cmp
add
dec
sub
jbe
mov
pushf
xor
push
push
jbe
jae
sbb
push
add
xor
and
cmp
fstl
cld
imul
xchg
ret
pop
jge
fistps
and
push
pop
pop
dec
pop
cmpsl
fwait
add
andl
fwait
into
dec
sbb
imul
jl
out
add
js
into
nop
mov
sub
test
outsb
inc
cwtl
inc
cmc
jmp
movsl
js
sti
or
mov
jge
loopne
xor
dec
hlt
imul
das
test
inc
bnd
xor
push
insb
pop
dec
push
mov
imul
pusha
dec
fs
sarb
lods
xchg
cld
jb
xchg
into
scas
rcrb
and
fmuls
cmp
dec
jg
fdivl
pop
pushf
enter
or
repnz
push
sti
lahf
sarb
mov
call
insb
clc
scas
and
repnz
mov
cmp
leave
jb
adc
dec
rcrl
outsl
ret
jno
dec
lahf
ja
mov
fcoms
mov
adc
dec
leave
inc
fsubrs
fistps
xchg
or
mov
dec
enter
dec
inc
sbb
ja
jo
sbb
out
mov
imull
inc
xchg
cmp
pop
repnz
xchg
mov
pop
arpl
cmp
jne
in
add
cmp
movsb
push
add
in
int3
loope
pop
subl
inc
mov
push
outsb
dec
adc
shrb
mov
rcrb
loope
jne
and
inc
xchg
fwait
xor
mov
and
xlat
int3
out
and
cld
shl
xchg
inc
or
jb
mov
fildl
xchg
dec
pop
adc
sbb
adc
xor
mov
pushf
outsl
in
mov
inc
sbb
xchg
cwtl
jnp
movsb
repnz
mov
jb
cmp
pop
cmpsb
test
test
in
dec
test
mov
inc
xorb
sub
and
pop
push
mov
mov
and
int3
sahf
sti
xchg
dec
xchg
iret
outsl
pushf
aaa
lock
mov
mov
lcall
out
jmp
jns
cmpsl
sbb
cs
enter
mov
xlat
xchg
in
pop
fistpl
jmp
mov
lret
and
fidivs
xorb
pushf
lods
icebp
mov
jne
push
fwait
into
shll
and
ljmp
inc
leave
mov
and
popf
iret
in
sti
mov
add
and
scas
push
inc
and
sub
mov
and
pop
jl
pop
fmul
xchg
mov
nop
mov
jb
xor
mov
ja
inc
sub
xchg
lahf
pop
mov
inc
dec
add
push
outsb
sub
dec
in
pop
adc
cmp
popa
xchg
int3
jnp
test
add
xchg
in
dec
rcrl
je
ja
scas
mov
jo
inc
pop
push
and
rorl
xchg
sub
std
cli
or
out
into
xchg
ficomps
xor
insl
push
movsl
lock
sbb
jno
cmp
push
mov
iret
sbb
dec
xor
push
mov
jmp
mov
push
fistpll
mov
insl
ret
or
and
fmull
movsl
mov
stos
and
push
inc
pop
mov
out
lahf
fwait
outsb
fstpl
in
and
mov
cmpsb
adc
xor
pushf
and
pop
xor
stc
int3
push
push
jmp
and
inc
aaa
cld
adc
add
je
dec
cmpb
or
dec
xchg
test
int3
xchg
xor
jecxz
shlb
and
minps
jb
cmp
xorl
mov
pop
jg
xor
mov
repnz
xor
add
sub
imul
insb
lods
mov
aad
ficomps
out
cmp
mov
mov
lcall
or
add
xchg
and
dec
ds
cli
inc
and
and
dec
mov
scas
clc
jl
bound
sti
mov
jp
fdivs
mov
sub
iret
mov
cs
sub
ror
dec
xchg
popf
outsl
cs
xlat
inc
and
insb
pop
nop
rolb
and
in
ror
cmc
jmp
dec
imul
repnz
test
push
arpl
dec
rorl
push
ja
jle
out
es
dec
xlat
cltd
sahf
sti
sub
sub
adcl
loopne
push
jnp
in
test
dec
jmp
out
xor
push
cmpsb
gs
jle
lds
lods
cs
jp
vpaddusw
aas
inc
xchg
xchg
sbb
enter
insb
add
push
fstpl
push
daa
add
xchg
push
mov
data16
fdivl
enter
outsl
mov
rol
aas
jb
sub
fldcw
push
iret
data16
dec
xchg
lds
imulb
imul
mov
mov
push
outsl
jecxz
cld
push
les
popf
mov
mov
push
fadd
sub
xchg
xchg
insb
or
mov
push
out
inc
insl
mov
shrb
out
xor
test
mov
xchg
adc
int3
sub
je
pop
fisttpll
sub
insl
fdivrl
fists
mov
int
mov
jmp
cmp
xor
lret
sarb
das
ret
gs
lcall
mov
mov
fnstcw
outsl
movsl
lret
mov
outsb
cmp
push
sub
dec
cwtl
xlat
jb
loopne
push
pop
mov
ror
int
pushf
dec
add
mov
mov
repnz
push
sub
inc
and
jl
inc
add
and
cmp
mov
cmp
mov
fistl
orb
jne
xchg
leave
fsubr
push
test
stc
std
aad
jmp
mov
jp
lahf
fldt
fists
add
cmp
movsb
push
or
cs
in
mov
xchg
adc
push
cmp
and
in
js
mov
stc
push
stos
and
fistps
inc
push
sub
out
mov
pop
test
popf
addl
imul
into
push
mov
lret
data16
in
repnz
scas
movsb
jle
dec
icebp
adc
push
pop
inc
and
decl
xchg
nop
scas
cld
or
movsl
cld
or
cld
or
dec
inc
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
