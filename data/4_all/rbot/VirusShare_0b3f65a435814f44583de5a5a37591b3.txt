add
add
add
add
je,pn
js
add
add
dec
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
push
add
add
add
adc
add
enter
add
add
add
add
aas
addb
adc
or
and
or
xor
or
inc
and
add
add
or
add
add
or
add
cld
and
add
add
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
.byte
or
add
add
adc
add
add
add
adc
add
add
add
push
add
add
add
adc
add
enter
add
add
add
add
aas
addb
adc
or
and
or
xor
or
inc
and
add
add
or
add
add
or
add
cld
and
add
add
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
dec
add
add
add
add
add
mov
pusha
add
sbb
je
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
addb
add
or
add
mov
popf
stos
pusha
leave
fildll
push
dec
and
cmp
ja
sti
and
adcl
arpl
mov
push
inc
jge
ret
push
inc
sahf
sub
mov
sub
je
dec
hlt
ds
andl
mov
lret
jo
push
xchg
add
out
pusha
push
jle
push
push
mov
daa
jg
leave
testb
sub
shlb
ja
inc
addr16
mov
push
enter
ja
jb
enter
fcoms
mov
xor
sbb
popa
cmp
leave
adc
cmp
cld
into
test
aam
ja
inc
pop
fnstenv
mov
cmp
pop
push
cmpsl
ljmp
xchg
dec
inc
push
scas
popf
mov
imul
clc
frstor
xchg
push
inc
or
out
pop
jb
inc
ja
lret
sbb
inc
add
adc
xchg
or
xchg
test
das
add
mov
pushf
and
cmpsb
and
pop
jl
cmp
test
push
and
out
xchg
aaa
ljmp
cmp
mov
and
lea
jg
sub
pop
lods
in
into
adc
mov
xor
imul
xchg
fs
pop
je
leave
inc
mov
jae
mov
ss
inc
mov
cwtl
xor
sbb
ror
insl
mov
mov
cmp
xor
scas
es
rcrb
outsl
mov
adc
inc
es
inc
test
mov
adc
in
adc
in
repz
orl
or
push
stc
loop
mov
pop
pusha
pop
cli
and
bound
es
sub
pop
inc
icebp
into
and
popa
cltd
and
adc
add
mov
imul
or
imul
mov
rclb
pushf
cmp
push
in
xor
dec
sbb
xor
mov
inc
cmpsb
mov
xchg
aas
pop
or
cmc
popa
inc
push
mov
je
cmp
jle
lcall
jle
fstps
adc
movl
inc
out
fnsave
mov
gs
popa
sahf
adc
test
adcb
outsl
lea
jb
add
push
mov
adc
leave
lods
jecxz
jmp
ja
aam
sbb
xor
aaa
sbb
adc
sbb
pushf
adc
ret
stc
aas
sbb
sub
and
mov
mov
popa
test
sbb
add
je
bsf
outsb
inc
jecxz
pop
push
iret
fadd
and
mov
add
loop
cmp
mov
mov
mov
decl
and
movb
ljmp
pop
xorb
push
inc
xchg
inc
lret
je
mov
inc
test
dec
not
pop
mov
scas
jg
popf
jnp
add
aam
cmc
sub
pop
repz
or
dec
cmp
rdmsr
adc
gs
aas
xchg
out
stos
cmp
mov
cmp
lea
loope
and
divl
ficompl
dec
movsb
repnz
mov
push
jo
and
lds
xchg
xorl
and
mov
inc
mov
cmp
and
andb
leave
lcall
dec
out
das
mov
aas
inc
push
adc
cli
data16
in
inc
adc
inc
clc
mov
mov
inc
out
sbb
imul
subb
jl
jne
inc
mov
pusha
loope
mov
dec
icebp
ds
or
cmp
or
add
scas
das
int
dec
xchg
loope
xchg
fcmove
fdivr
out
out
push
jge
mov
jb
in
mov
adc
or
xchg
cmp
jecxz
popa
mov
ja
sbb
pop
push
pop
movsl
aam
inc
daa
push
mov
and
movb
mov
jbe
mov
or
mov
ja
push
loope
movsb
mov
xchg
outsl
inc
push
in
jns
addl
lea
sbb
cmp
inc
int3
andb
xchg
mov
inc
imul
and
jmp
out
mov
cmpb
inc
lds
aas
push
pop
orb
stc
push
add
ja
cmp
das
outsb
mov
icebp
push
adc
pusha
jmp
clc
mov
push
jle
mov
out
lea
sarb
push
push
push
xor
cmp
adc
daa
jno
xchg
add
int
sahf
rorl
or
add
fs
pop
sbb
cmpxchg
mov
push
cmp
mov
xchg
mov
in
and
testb
rcrb
pop
push
lret
mov
jle
xor
divb
clc
mov
in
sbb
fstps
xchg
mov
imull
mov
xchg
jns
loopne
inc
pop
ss
clc
inc
jle
sub
out
jecxz
pushf
jp
cmp
or
sub
cmp
jns
cwtl
pop
fimuls
daa
out
push
scas
inc
sti
ja
loop,pt
add
mov
insb
mov
aam
dec
cmp
mov
es
xchg
imul
aaa
jne
sbb
push
push
cld
cld
out
aad
cmp
cmp
sub
push
dec
sahf
fs
in
inc
out
testb
loopne
ds
mov
xor
movsl
push
cmp
in
shr
int
ret
sub
je
xor
lods
and
sbb
xchg
divl
rcr
shll
adc
repnz
imul
sti
orb
lret
mov
insb
mov
insl
and
push
js
sbb
push
and
push
jnp
jle
jb
mov
mov
ljmp
or
jne
mov
xchg
aas
jo
int
mov
and
push
hlt
push
mov
mov
addl
repnz
iret
out
or
xchg
roll
out
xchg
lret
loop
dec
ret
or
inc
and
push
into
mov
add
test
sub
inc
cmp
loope
cld
and
push
in
rcll
shr
int3
add
sub
push
xor
sub
aaa
data16
stos
and
cli
cmc
icebp
jmp
sbb
fnstcw
test
push
cmp
pop
cmp
and
push
and
std
jnp
add
movsb
xor
sbb
loop
jle
push
fimuls
mov
cmp
mov
mov
scas
mov
lock
sub
movb
ret
and
pop
test
cs
jb
push
gs
xchg
mov
dec
cmp
leave
cld
jecxz
lret
out
hlt
add
mov
ret
les
sub
xchg
imul
into
sbb
lret
mov
jg
inc
pop
jp
mov
xchg
inc
add
inc
sti
std
dec
fdivs
ja
cmpl
sbb
pop
sldt
cmpsl
mov
dec
negb
roll
fs
mov
mov
loopne
outsl
mov
push
or
rcl
stos
sbb
ljmp
popf
xchg
dec
mov
into
jecxz
mov
pop
jns
fbstp
test
imul
push
cmp
ja
loope
or
shlb
loop
addr16
lahf
cmc
dec
shrb
loop
out
ficoms
and
xchg
jle
cs
fldenv
xor
jle
mov
out
jne
out
test
iret
inc
cld
aad
push
ret
cltd
sti
inc
lods
neg
popa
push
fwait
inc
mov
add
mov
jb
in
and
js
ja
xor
xchg
mov
das
xor
sub
fcom
test
lods
sub
mov
inc
negl
dec
pop
cmp
mov
jne
leave
rolb
loope
add
jl
inc
jg
loopne
es
and
dec
call
jp
push
fs
dec
sub
call
cmp
mov
and
push
xor
cmp
xor
adc
dec
loopne
out
roll
aas
sbb
test
jge
mov
scas
das
jle
mov
or
cmp
mov
pop
pushf
in
lcall
std
shr
das
gs
outsl
inc
out
mov
sbb
add
addb
arpl
push
adc
inc
call
in
mov
dec
adc
dec
andl
mov
inc
movsl
cmp
push
rcll
addr16
mov
push
stos
ja
movsl
in
xor
sbb
cld
test
add
cwtl
and
ret
mov
inc
sub
pop
das
sbb
add
mov
and
stc
lahf
dec
cli
xchg
ds
orl
clc
mov
rcr
clc
push
nop
leave
xchg
jg
mov
xchg
scas
cmp
insb
leave
bound
subl
mov
xor
movsb
lods
cs
pop
into
mov
dec
pop
loopne
lods
pop
push
mov
pop
xchg
dec
movsb
ss
idivl
push
jb
loope
xchg
inc
sbb
push
push
pusha
in
xor
sbb
mov
ja
xlat
in
or
int
insl
add
inc
xchg
test
push
loopne
and
mov
mov
mov
sbb
xchg
push
addb
jecxz
cmpsl
push
pop
pushf
nop
inc
add
xchg
push
adc
out
xchg
and
inc
imul
lea
mov
lcall
push
or
mov
not
jp
or
shrl
inc
mov
movsl
dec
scas
lods
pop
cmp
cltd
dec
cmp
test
lahf
pop
cmp
iret
mov
sub
cmp
push
scas
inc
mov
out
or
pop
je
jb
dec
in
mov
ds
pop
push
lret
faddp
mov
adc
xlat
mov
sub
inc
inc
dec
nop
testb
sbb
sub
cmp
jbe
xchg
lcall
rorl
sub
insb
pop
bound
fsubr
shlb
test
push
fucom
pushf
and
or
rol
push
insb
push
outsb
adc
movsb
mov
xor
dec
aad
cltd
loopne
fcmovnb
sahf
cwtl
xor
pop
sbb
sbb
mov
arpl
mov
push
jmp
push
jbe
cmp
pop
cwtl
icebp
cmovp
inc
jmp
pop
mov
cmp
adc
enter
rorl
movsl
pop
sub
xchg
ret
call
lahf
pop
and
aas
loope
pop
add
aas
lods
je
dec
in
fistps
and
and
popa
cmpsb
movsb
inc
addr16
lret
push
fsubrp
stos
lret
sub
cmpb
sti
lahf
pop
xchg
sub
loope
mov
push
mov
movl
sti
outsl
add
fsubl
pop
in
nop
idivl
push
lret
pusha
mov
mov
jne
add
mov
outsb
mov
cmp
mov
scas
pop
adc
cmp
cwtl
in
popf
loopne
test
push
stos
cmp
fucomi
outsl
shrb
lds
aad
lahf
push
es
add
lahf
in
lods
jge
or
dec
jae
jge
add
js
cli
test
lds
aaa
and
cli
je,pn
pop
pop
ja
sub
jg
enter
fnsave
stos
xchg
arpl
mov
int3
push
cmpsl
mov
sarl
shll
clc
mov
push
add
inc
sub
insl
mov
or
push
and
or
loopne
sbb
daa
popa
sub
pusha
jp
cmp
inc
add
lods
mov
insl
jecxz
out
adc
add
popa
pop
fsubl
out
push
or
arpl
jns
adc
sbb
adc
inc
or
iret
push
dec
insl
pop
push
mov
fsubs
popf
dec
inc
pop
push
add
addl
jle
sar
sbb
push
fiadds
clc
mov
out
dec
loope
pop
testl
repnz
fcoms
jno
xchg
adc
mov
shlb
out
mov
xchg
movsb
xor
sbb
movsb
call
adc
pop
sub
inc
int3
add
in
cmpsl
jnp
lds
out
fisubrl
add
xchg
and
testb
xor
into
add
dec
and
jae
call
jbe
movsl
fcoml
faddl
adc
fcmovnbe
push
idivb
push
jle
clc
adc
mov
mov
cld
or
or
push
mov
push
sub
sub
cld
and
and
test
fwait
test
and
icebp
xchg
inc
adc
xchg
and
sub
inc
sbb
pop
pop
mov
ds
jno
adc
push
sbb
mov
rorl
lds
stos
cmp
jle
rcrb
rcll
shrl
or
pop
sub
out
push
lds
sub
sub
adc
mov
adc
adc
ss
and
rep
scas
xorb
mov
lahf
inc
hlt
push
shrb
jo
subb
cld
inc
pop
inc
jp
dec
ret
daa
out
bnd
adc
jns
adc
xchg
int3
pop
shrb
mov
xchg
sbbb
out
aad
and
jns
adc
and
out
nop
or
dec
add
mov
call
movb
bound
aaa
pop
pop
adc
notl
push
jns
mov
mov
pushl
push
jle
and
adc
loop
ljmp
mov
push
in
rcll
dec
jmp
sbb
add
inc
push
dec
pop
fistpl
lock
outsb
push
pop
fwait
jmp
stos
inc
movsl
jo
mov
or
mov
lods
jns
fists
mov
outsl
mov
mov
into
push
or
adc
mov
mov
xor
pop
int
or
test
xchg
jecxz
push
mov
inc
pushf
into
aad
pop
es
jl
or
mov
popf
inc
sub
in
cmc
ret
or
or
xchg
push
mov
push
push
in
das
nop
das
js
xchg
out
push
inc
and
lahf
sub
movsl
pop
dec
es
jo
jp
cmp
lcall
dec
aam
sub
pop
imul
scas
adc
sbb
adc
mov
fsubr
mov
decb
mov
int3
imul
enter
pop
cmp
js
fisttpl
inc
testl
out
test
xchg
adc
and
add
aaa
jmp
pop
push
adc
lret
outsb
inc
dec
mov
aaa
hlt
cmp
inc
lcall
inc
int3
out
test
les
mov
and
jle
in
int3
sub
test
stos
xchg
mov
test
pop
jns
mov
test
add
sahf
sub
or
cmpsb
fcoml
lcall
add
sbb
cmpsl
jb
shll
add
push
clc
fwait
popa
sbb
push
mov
iret
mov
dec
int3
mov
bound
mov
push
out
rclb
push
bound
cltd
pop
jge
sub
cwtl
adc
stos
jb
stc
sahf
lret
push
or
iret
or
sbb
roll
jp
and
pop
call
hlt
sbb
aam
pop
sbb
cmpsb
movsb
xchg
lret
insl
mov
shlb
pop
xchg
pop
add
push
imul
iret
jge
cmpsb
xor
mov
in
mov
pop
add
je
lahf
cld
sbb
dec
popa
fnstcw
fwait
nop
movsl
sub
xchg
jle
fdivr
sub
mov
jecxz
xor
pop
pusha
or
jo
icebp
sub
fwait
jb
addr16
pop
aaa
dec
pop
popa
repnz
xchg
xchg
push
mov
stos
xor
mov
cwtl
dec
stos
faddp
and
jmp
sbb
dec
fdivs
push
sub
pop
xchg
sbb
jns
std
pushf
xor
xor
cmc
imulb
hlt
lret
lahf
cmp
mov
add
sub
xor
xchg
cmpl
pop
adc
jge
cmpsl
repz
pop
mov
ja
std
dec
jbe
adc
fsubl
out
adc
mov
arpl
clc
adc
xlat
push
addl
fsubrp
popa
pop
je
lahf
fidivrl
unpckhps
jl
jae
out
cmc
test
adc
add
cltd
pop
mov
cmp
fwait
mov
scas
rol
push
jle
jmp
cmp
dec
and
imul
ds
add
rcll
dec
push
cmpsl
stos
icebp
xchg
pop
mov
jb
out
mov
pop
jl
in
in
push
mov
xchg
add
lock
cmpsb
fninit
fcomp
js
clc
inc
add
jb
fs
mov
dec
stc
rcrl
fdivl
clc
outsl
xor
rorb
imul
fsts
jns
arpl
dec
adc
push
cmpsb
mov
sbb
push
sub
cmp
sub
jno
mov
and
and
push
xor
cs
pop
iret
mov
or
js
jno
fists
mov
loopne
les
mov
lahf
push
into
mov
add
adc
icebp
jae
addr16
into
in
lock
movsl
adc
pop
cmpsb
inc
cmp
movsb
mov
fisttpl
repnz
and
lea
pop
inc
and
jbe
mov
xchg
loop
lds
mov
scas
fisubrl
dec
ficomps
test
xchg
and
xor
cmpsl
ret
loopne
push
mov
scas
xor
xchg
mov
xor
test
call
rcrl
lcall
es
out
dec
push
xor
fwait
cs
xor
out
inc
out
repz
xor
aad
jns
sbb
jae
dec
mov
addl
xchg
cmp
add
sbb
inc
movsb
cmpsb
sub
adc
push
push
hlt
lods
add
ffreep
inc
inc
mov
lds
das
inc
mov
test
sub
and
jg
in
repnz
gs
int3
sub
js
insb
jns
ficomps
orb
push
inc
dec
sub
filds
jo
data16
ja
push
fidivl
add
dec
xchg
subb
cltd
ss
mov
jmp
dec
add
rol
jnp
jno
es
rcr
mov
sbb
fstpl
mov
fnstenv
scas
insl
testl
fistl
sahf
mov
sahf
adc
or
dec
or
sub
ss
aad
jno
aam
ret
in
jbe
fnsave
mov
inc
das
mov
sub
ret
int3
push
ds
cli
gs
dec
sbb
into
jns
push
and
scas
loope
jle
jmp
pop
popf
fisttpl
test
je
mov
outsl
xor
dec
lock
sbb
sub
daa
arpl
pop
cmp
push
xor
jg
sbb
sbb
mov
andb
sub
mov
add
xchg
adc
pushf
xchg
and
cs
dec
mov
cmp
enter
out
fildll
cld
out
int
in
movsb
test
repz
mov
loopne
lea
nop
xchg
mov
ljmp
pop
shlb
pusha
js
pushf
andb
xchg
pop
fwait
mov
mov
mov
lea
sbb
sbb
pop
push
mov
std
adc
std
cmp
sub
xchg
pop
mov
pop
xchg
and
mov
hlt
lahf
fldcw
or
push
dec
cmp
aam
lret
xchg
push
xor
push
rclb
iret
int
inc
cmc
pusha
xor
aaa
jmp
push
pop
sub
inc
fimull
pushf
lret
lret
cmp
mov
insl
mov
pop
stc
lds
jne
outsb
gs
pop
lods
imull
dec
into
sub
inc
xchg
mov
or
insb
loope
ja
mov
sub
sub
loopne
hlt
push
cmpsb
push
jo
scas
es
ja
pop
mov
xchg
outsl
dec
cs
pusha
sbb
pop
adc
sbb
xchg
dec
js
out
adc
pop
stos
mov
cmc
xor
or
adc
or
popa
scas
and
mov
xor
jecxz
pop
and
scas
movsb
add
lahf
cmpsl
xchg
insb
mov
push
push
inc
xchg
add
mov
mov
repnz
lods
mov
addl
lock
push
jne
pushf
ja
xor
jl
insl
in
jg
loopne
add
add
lret
mov
cmpsl
xor
mov
test
adc
jo
leave
pop
icebp
pop
in
sub
sub
cmp
loope
sub
jae
scas
sarl
push
mov
xchg
in
cli
movsb
shl
repnz
ror
xor
inc
sbb
lods
aaa
sbb
jbe
pop
sub
pop
fbld
or
stos
mov
xchg
int
and
cltd
mov
mov
lret
or
mov
insb
lds
cmp
mov
sub
add
adc
sub
pop
push
mov
inc
xor
and
xchg
mov
push
test
adc
jno
mov
out
ficomps
mov
add
cwtl
xchg
mov
sbb
std
and
sahf
xchg
stos
jnp
dec
sti
roll
insl
mov
or
jmp
test
enter
popf
gs
je
rolb
out
push
inc
cmp
jb
icebp
je
scas
std
xchg
mov
lahf
repnz
inc
or
push
enter
xor
sub
lds
jae
out
fwait
stos
outsl
pop
jnp
fcmove
fsubrp
push
or
repz
cmp
mov
movsb
pop
into
add
data16
dec
stc
fcompl
add
jge
insl
ja
mov
gs
test
es
or
push
or
pop
push
pop
rcr
xchg
das
xchg
add
mov
ja
roll
gs
and
or
sbb
es
inc
ds
mov
mov
int
pop
sarb
aaa
mov
xor
mov
sahf
cld
xor
mulb
xchg
push
clc
and
mov
out
enter
pop
lahf
movsl
movsb
imul
mov
xchg
adc
inc
cmpsl
add
add
loope
cmp
xor
insb
iret
push
xchg
hlt
and
enter
adc
jbe
popa
push
xor
mov
cwtl
sbb
inc
push
cli
data16
and
sarb
add
fimull
jbe
jge
lods
movsb
addr16
lock
hlt
xchg
pusha
mov
and
sti
adc
jb
iret
cld
pop
lea
test
into
pop
and
adc
mov
mov
sbb
push
je
jne
xor
push
fldenv
in
arpl
dec
dec
test
in
roll
push
cmp
sub
jo
insb
in
adc
push
or
lahf
pop
int3
sbb
and
fisttpll
jle
clc
nop
std
into
in
sbb
dec
add
subb
imul
subl
loopne
div
fdivp
adc
out
stc
mov
xchg
dec
loope
add
stos
xchg
mov
imul
mov
les
jo
push
jl
adc
cld
jp
popl
aam
cmpsb
push
ficoms
aad
out
pushf
loope
cmp
mov
mov
hlt
xchg
loope
push
and
idivl
popa
push
jno
add
xchg
mov
pop
aad
push
push
mov
test
mov
add
fstps
xchg
adc
in
xchg
mov
dec
jo
in
or
pop
inc
xchg
hlt
enter
jge
inc
fdivrl
or
inc
push
push
testl
cs
sbb
inc
fstpl
stos
loope
push
mull
into
hlt
pop
lds
jne
orb
rcpps
repnz
and
outsb
pop
push
pop
out
pop
fisubl
fcompl
test
loope
mov
jecxz
adc
sbb
mov
movsb
repnz
nop
pusha
and
mov
xor
push
mov
pop
xchg
mov
pop
insb
mov
xchg
frstor
icebp
cli
adc
pushf
cmpsl
cmpl
es
push
cmp
xchg
mov
xor
push
leave
cmpsl
movhlps
sahf
outsl
dec
sub
fisubl
push
int
sub
mov
cli
cmp
sub
fbstp
pop
sub
lahf
inc
enter
or
int3
add
xlat
sbb
or
cltd
addr16
fldt
popf
pop
jbe
inc
push
dec
stos
cmp
sbb
or
sub
add
je
and
cli
sbb
rcll
in
and
push
mov
aas
daa
and
push
sub
lahf
inc
xchg
cmp
inc
inc
xchg
sbb
sbb
pop
and
jmp
pop
xchg
sarl
inc
add
test
and
out
std
push
cmpsl
int3
push
stc
rol
fisubs
dec
sbb
sub
mov
mov
test
sub
sbb
cmp
jle
xor
and
inc
jg
into
fcmovnbe
pop
cmp
mov
dec
stc
test
pop
mov
cmp
mov
incl
daa
imul
rorl
notl
mov
adc
and
cld
or
dec
cmp
sub
push
scas
cld
enter
dec
int3
test
jae
scas
int
andb
out
dec
cmp
test
sbb
rclb
mov
int3
sub
mov
or
loopne
gs
cmp
imul
mov
idiv
adc
imul
inc
repz
sbb
pop
and
or
outsl
in
xchg
in
mov
pop
addr16
lcall
sti
aaa
addr16
xchg
out
or
dec
sub
pop
das
mov
dec
iret
lock
out
cld
and
loope
xor
xor
aas
push
or
or
or
or
mov
lahf
add
mov
dec
inc
or
mov
stc
push
repz
push
jg
inc
jns
pop
jge
fwait
add
xor
sub
and
jp
stc
jmp
push
jbe
or
into
je
rcrb
mov
adc
out
mov
data16
test
xor
fwait
rcll
xor
dec
cli
mov
imul
sbb
dec
jp
fadds
jne
cli
ficompl
and
cmp
mov
push
insb
inc
lea
mov
mov
mov
pop
sbb
xchg
xor
int3
ret
pop
push
iret
mov
xchg
enter
pop
test
adc
push
adc
out
cmp
aad
lcall
repz
pop
jae
jnp
test
pop
and
ret
dec
fcmovnu
clc
ret
or
pop
js
and
shrb
xchg
add
xlat
adc
enter
mov
adc
inc
mov
fsubrl
js
xor
scas
add
push
and
cmp
fsubrl
mov
jl
add
cli
pop
out
flds
inc
ja
add
scas
and
inc
or
stos
jp
pushf
mov
and
xor
insb
dec
lret
dec
int
sti
xchg
mov
daa
daa
push
lods
imul
xchg
mov
stos
lret
in
xlat
push
xchg
pop
cltd
popa
adc
daa
push
or
bound
push
add
add
je
orl
jae
xor
pop
imul
lds
mov
mulb
or
insl
int3
pop
mov
inc
pop
sub
jp
call
test
mov
lcall
movsl
lods
aam
jmp
push
lahf
mov
xchg
mov
sub
jo
sub
ja
pushf
or
mov
std
test
aas
lock
fadds
xor
pusha
or
mov
mov
stos
stos
push
fsubp
or
push
mov
mov
movsb
aam
test
push
fwait
xchg
push
insb
mov
cmpsb
mov
ficompl
scas
mov
xchg
push
outsl
out
cmp
pop
sub
pop
js
cmpsb
fmuls
fstl
leave
pop
scas
int3
imul
and
add
xor
pop
and
repnz
stc
sub
dec
push
mov
and
mov
scas
daa
lret
rcl
and
lock
sub
fdivrp
jo
inc
mov
lret
xor
mov
inc
test
pop
cmp
lods
or
jmp
arpl
add
gs
xchg
outsl
ja
push
lcall
jae
mov
sti
mov
add
int3
dec
mov
jae
pop
jle
ret
mov
mov
mov
fisubrl
cmpsl
mov
stc
sarb
loopw
es
stos
lods
sub
jecxz
pop
add
aaa
cmp
rolb
inc
adc
cmpsb
lods
scas
popf
sbb
dec
push
pop
xor
mov
ss
lods
mov
cmpsb
inc
mov
out
movsb
inc
dec
inc
xchg
xchg
push
test
cvtpi2ps
inc
mov
and
js
outsl
xchg
pop
ret
sub
mov
movb
fldcw
imul
sbb
sub
jle
cmc
push
jb
push
dec
pop
xchg
fiadds
sub
decb
mov
push
xchg
sub
out
cmp
call
popa
push
ret
dec
mov
or
push
loope
lcall
dec
pushf
stos
push
ja
xor
sub
push
aaa
or
cmp
out
loope
or
mov
hlt
inc
fmuls
inc
dec
jb
clc
ret
xchg
idivb
stos
movsb
xchg
repnz
and
inc
and
adc
pop
in
scas
decb
mov
call
mov
mov
jns
stc
ja
adc
pop
pushf
cmp
sbb
scas
clc
cmpsb
jle
pop
iret
loopne
pusha
and
and
fucom
aad
outsl
mov
outsb
mov
inc
repnz
sub
push
pushf
iret
or
cmp
xchg
sbb
daa
lret
jne
jbe
pop
xor
dec
stos
mov
fnstsw
mov
cwtl
lcall
mov
pop
arpl
lret
jmp
cmp
xor
push
jnp
mov
jmp
test
adc
data16
test
jno
sub
aam
leave
daa
sbbl
bnd
and
int3
mov
push
enter
pop
sbb
inc
scas
out
das
push
xor
sbb
mov
pop
xor
sub
arpl
push
or
mov
addr16
hlt
das
rcr
sbb
dec
testb
shrl
mov
imulb
jl
sub
sub
je
ds
or
rorl
cwtl
bound
ret
inc
cld
cmpsb
cs
out
cmp
insb
call
xorb
rorl
cmp
jg
aam
add
sbbb
lods
movsb
or
mov
xchg
stos
leave
dec
adc
call
aad
es
xor
mov
ficoms
shll
cwtl
or
xchg
mov
push
inc
repz
pop
aad
pop
out
jne
loopne
repz
push
dec
imul
fptan
int3
clc
mov
dec
pusha
fs
call
and
js
pop
stc
jecxz
movsb
mov
mov
ret
rorb
nop
into
ss
inc
mov
loope
cmp
xor
mov
iret
lret
push
xor
repz
out
push
mov
ret
ret
fisttps
enter
and
or
in
adc
addr16
pop
movb
jbe
popf
sub
pushf
mov
iret
xchg
push
movsb
push
loop
lret
mov
and
ljmp
adc
cmp
add
jo
push
or
out
jae
xlat
mov
in
stc
cmc
sbb
or
push
xchg
repnz
pop
cli
add
jnp
repz
sub
xor
inc
outsl
fnstsw
sub
ret
shl
out
push
mov
add
les
bound
cmp
mov
fstpl
pop
test
mov
inc
and
lret
fs
lock
add
push
lock
clc
ljmp
mov
jno
enter
jne
lret
stc
outsb
jp
cmp
cmp
xor
push
in
push
or
stos
xchg
xchg
mov
mov
mov
mov
inc
js
loop
sbb
bound
cmp
push
cmp
mov
cs
stos
jmp
xor
xchg
in
outsb
sbb
lds
jnp
jge
inc
ret
sahf
repnz
fnstcw
out
inc
and
in
shrb
dec
leave
xor
sbb
cwtl
call
clc
aad
ja
jnp
ret
sbb
fs
aas
les
cmp
push
push
fisubrs
sub
jl
lret
mov
lock
mul
sub
xchg
adc
gs
mov
loopne
stos
mov
gs
lods
daa
fidivl
mov
out
lods
fucomi
rcrb
pop
aad
aaa
pop
insb
and
pushf
xchg
xchg
dec
stos
or
loop
inc
inc
push
hlt
adc
jmp
mov
daa
outsl
das
incb
xlat
les
or
xor
cs
jg
mov
shl
xchg
roll
pop
push
test
je
sti
test
popf
xor
sti
dec
ret
sub
sbb
shr
sti
lret
jmp
or
inc
mov
cmp
sbb
or
push
jne
lods
mov
sub
dec
xchg
iret
sub
jne
data16
inc
mov
cmp
jg
sbb
push
mov
mov
ds
mov
cltd
xor
push
fstps
dec
cmp
sub
lods
in
add
sbbb
outsb
adc
push
add
mov
pop
add
in
cwtl
jae
mov
vrsqrtps
cmp
inc
ja
bound
fildll
mov
insl
fsubs
pop
and
xor
insl
imul
testb
jns
add
add
dec
adc
shlb
out
adc
aaa
mov
mov
popf
mov
xchg
and
inc
sti
jno
mov
fiaddl
cmp
shlb
rol
out
adc
shl
xchg
xlat
xor
and
xor
add
fidivrl
dec
pop
loop
inc
iret
sarb
jno
jl
mov
lods
cmp
es
shll
addr16
loop
sbb
pop
inc
imul
dec
xor
inc
xchg
ret
mov
xchg
out
outsb
jo
repnz
jno
fldcw
repnz
push
mov
xchg
loope
sar
mov
sbb
xchg
sub
cmp
call
call
imul
mov
xlat
outsb
mov
testb
cmp
jge
fnsave
aam
rorl
shr
lret
testb
movsl
pop
imull
cmp
pop
xchg
jae,pt
mov
lcall
push
popf
inc
mov
sub
ja
pop
dec
std
and
nop
xchg
pop
sub
lods
fisttps
lcall
mov
adcl
fildl
clc
push
das
mov
pusha
inc
mov
call
cmp
andl
xor
cmp
xor
sub
gs
or
imulb
fdivr
inc
inc
sbb
add
mov
add
lret
or
sbbl
in
push
ja
jmp
in
inc
xorb
in
or
int
xchg
leave
pop
jno
jno
in
add
jne
cmc
mov
imul
in
mov
dec
xor
inc
enter
or
sahf
dec
lcall
sahf
or
jge
leave
and
adc
std
insb
or
out
mov
negl
push
mov
pusha
lea
xchg
in
mov
rcrb
mov
xlat
adc
inc
push
repz
gs
inc
popa
repnz
push
testl
mov
and
gs
sahf
mov
adc
mov
scas
jmp
rcl
dec
pop
sub
mov
jae
push
inc
cmp
dec
imul
add
out
popf
lods
hlt
fdivrl
mov
jb
mov
lret
mov
xchg
xor
bound
loop
xchg
jno
iret
mov
sbb
inc
or
cmove
test
pop
or
insl
loope
aad
in
stos
movsl
lods
loopne
inc
or
out
push
lret
push
sar
push
jmp
ja
mov
lahf
xor
stos
test
xchg
cwtl
pop
shll
faddl
nop
xchg
jns
arpl
pop
cmp
xchg
xchg
imul
nop
cmp
and
ret
stc
repz
andl
and
push
shrl
sbb
stc
cmpsb
out
jo
cmp
mov
sbb
arpl
mov
aad
popf
das
sub
sub
cmpsb
mov
ds
push
incl
fcmovnu
int
rolb
test
inc
jmp
pop
out
mov
test
or
inc
shlb
pop
sbb
push
and
pop
scas
push
inc
lock
add
stos
roll
movsl
lret
cs
xlat
xor
or
js
cmovae
loop
pop
or
dec
cmpsb
push
out
nop
aad
push
jmp
outsb
inc
loopne
mov
data16
lods
and
sub
xor
test
add
jecxz
shlb
shrl
ja
sub
inc
sbb
xchg
mov
data16
rorl
sbb
adc
icebp
lret
jle
sahf
push
lret
repnz
lcall
mov
inc
jnp
loope
or
mov
push
enter
ret
inc
lock
pop
and
and
jae
dec
dec
jg
sbbb
and
popf
mov
pop
sub
mov
cmp
clc
dec
push
mov
int
and
out
adc
sti
add
xlat
shl
mov
add
loope
cmp
adc
lods
dec
xor
aam
push
inc
fstpl
pop
ja
sub
in
mov
jb
mov
xlat
pop
std
xchg
sub
mov
cmp
and
rcrb
inc
and
shr
add
sbb
fstpt
dec
cmp
adc
enter
stc
lcall
int
mov
test
inc
mov
adc
mov
outsl
adc
and
lock
ficoms
iret
iret
sub
sub
daa
push
es
jnp
push
stos
mov
rcrl
jp
or
sub
or
lret
sub
mov
adc
xor
dec
test
xchg
pop
push
and
pop
add
mov
mov
sbb
sub
je
adc
xlat
sub
mov
fdivs
lds
adc
lods
hlt
and
jg
jge
test
pop
rcl
xor
xchg
loop
les
nop
aad
aas
xlat
ret
sarb
sub
popf
into
lods
mov
outsl
lret
andl
push
mov
sbb
jne
loopne
test
add
and
inc
arpl
dec
inc
subb
or
dec
dec
out
fimull
adc
es
dec
mov
fmull
inc
cmp
add
icebp
mov
cmc
mov
lds
jecxz
cmp
lock
fstpt
rcr
or
adc
dec
iret
xchg
cmpl
mov
loop
cmp
or
std
jg
jecxz
mov
add
pop
push
pop
jno
scas
stos
scas
fiaddl
scas
test
data16
pop
mov
aaa
or
cmp
cli
pop
lret
push
push
loope
inc
std
mov
ret
mov
adc
je
nop
cmp
adc
fdivs
shrl
adcb
adc
pushf
cmp
sbb
mov
jge
popa
lea
aad
repz
in
out
pop
insb
arpl
rolb
lret
xor
loopne
sub
add
inc
rcl
cmpsl
loope
or
mov
mov
ss
jnp
push
xchg
mov
cmp
mov
bndldx
jno
mov
mov
sub
xor
popf
sti
movsb
mov
mov
or
ret
dec
sbb
or
inc
inc
sbb
sbb
mov
pushf
push
xchg
pushf
push
pop
dec
jo
pop
adc
call
dec
arpl
mov
adc
ret
add
aad
loopne
sbb
or
addr16
in
pop
xor
inc
sbb
adc
and
inc
icebp
inc
stos
repz
mov
enter
popf
cmp
push
or
mov
sbb
cmp
push
cmc
imul
mov
out
or
imulb
push
mov
sub
push
cmpl
jecxz
add
cwtl
imul
fnstenv
mov
shl
gs
rol
dec
mov
xchg
mov
sbb
lds
pop
cmp
lret
stos
in
jbe
outsb
xor
xchg
cs
in
dec
sub
cmpsl
lcall
sahf
popf
insl
or
insb
idivl
sub
jg
out
cltd
into
rorb
stos
sub
inc
pop
lret
lahf
paddq
adc
cmp
std
js
xor
aaa
dec
cmp
xchg
xlat
dec
jle
cmp
mov
sub
sub
pop
ljmp
mov
fildl
fs
xchg
mov
lret
jmp
mov
mov
cmc
rcrl
aas
leave
cmc
into
adc
fldcw
sub
sub
cmp
push
xor
les
pop
into
pop
sub
inc
data16
jge
sbb
pop
add
daa
cltd
stos
ds
rorl
pop
xor
shlb
inc
inc
cmp
mov
fnstenv
pop
pop
sub
das
sub
push
adc
fwait
cmpl
fwait
mov
loop
out
mov
sbb
pop
mov
addr16
frndint
popl
and
add
insl
pop
fldenv
add
dec
daa
cmp
daa
adc
cwtl
mov
syscall
mov
popa
push
mov
fwait
mov
arpl
sbb
dec
je
scas
xchg
and
jecxz
and
jo
jp
pushf
cmp
pushf
sub
fs
or
mov
jl
ret
inc
mov
add
lock
jo
add
sbbb
mov
clc
sbb
push
cli
and
cmp
movsl
dec
dec
cmp
adcl
cld
repnz
lret
leave
mov
clc
pop
pop
lds
popl
daa
jge
insb
mov
lock
dec
into
adc
fwait
inc
push
jg
imul
jne
or
mov
xchg
inc
pop
sbb
lcall
add
pop
dec
xchg
jno
std
jns
icebp
popl
mov
dec
xor
divb
addb
fldl
jle,pt
cmpsb
addl
adc
nop
xchg
push
pop
in
jb
out
pop
mov
fs
jle
mov
scas
or
or
mov
pop
sbb
fcomps
xlat
push
jl
call
dec
add
xor
add
mov
pop
add
or
sub
movsl
js
das
xor
jge
pusha
lods
pop
pusha
gs
mov
aas
jnp
movsb
mov
das
hlt
subl
inc
jae
idivb
xchg
into
rcr
adc
fdivs
dec
add
sub
dec
add
shl
adc
pop
and
cmp
push
sub
addr16
clc
les
mov
jne
mov
movsl
ret
cwtl
les
mov
imul
xchg
push
int3
insl
xchg
mov
arpl
mov
mov
cmp
loopne
std
rol
jae
sub
push
int
lret
lahf
mov
mov
cs
ljmp
lods
mov
push
cmc
push
mov
sbbb
inc
cmp
mov
loop
push
add
inc
shr
xor
push
sbb
sub
inc
dec
pop
jg
push
jbe
aas
jle
fwait
jmp
jg
cwtl
movsl
sbb
outsl
cli
jno
pusha
xor
and
xchg
jmp
or
into
mov
call
movsb
mov
jle
sbb
ljmp
mov
bound
fists
xchg
enter
repnz
call
pushf
addb
add
enter
mov
mov
xor
scas
inc
inc
dec
pop
std
cli
jle
add
addr16
addl
push
xchg
dec
pop
out
sarl
push
cmp
dec
scas
adc
push
or
adc
addr16
mov
push
fisubl
in
xchg
cwtl
hlt
cwtl
pop
mov
jmp
lahf
movsl
std
in
sbb
lea
ret
and
and
xchg
sub
jmp
sti
inc
inc
xor
cld
test
in
jl
cmp
pop
and
xchg
sbb
inc
mov
fiadds
cmpsl
aam
call
in
shll
data16
orl
fs
mov
test
and
add
repz
xchg
outsb
xor
xchg
cmp
jns
mov
insb
hlt
in
aad
cld
out
test
inc
xchg
sbb
bound
mov
fdivr
or
adc
push
cmp
mov
jne
xlat
push
adc
push
jae
iret
clc
push
loopne
mov
mov
lds
pop
push
in
or
sub
leave
dec
insl
adc
sbb
scas
or
out
in
jmp
je
adc
sub
mov
and
dec
lret
sub
xchg
xchg
stos
clc
adc
push
mov
lods
lahf
xor
mov
push
xor
and
cmp
lods
mov
outsl
cmp
fwait
adc
mov
xor
fndisi(8087
or
cmc
sbb
mov
insb
test
mov
lea
popa
adc
ret
jne
aas
ffreep
adc
cld
cltd
lahf
add
lods
mov
sbb
or
js
ljmp
jge
add
xor
pop
and
es
mov
pop
ss
popa
hlt
cmp
pop
jge
add
sub
sbb
sahf
sarb
push
xorb
enter
scas
push
add
cltd
pushf
push
adc
mov
cmp
dec
fsubp
je
cmc
add
jns
add
mov
xchg
or
push
mov
cmp
lret
xor
les
addl
sarb
mov
adc
outsb
shlb
je
mov
daa
adc
fdivl
jmp
and
mov
mov
sarb
jle
clc
mov
addr16
pop
inc
mov
out
inc
rolb
jae
sti
insl
out
jne
pop
or
adc
push
dec
dec
sbb
mov
icebp
insl
xchg
jae
stos
loope
mov
sub
or
pushf
out
enter
fadds
stc
dec
in
sbb
adc
pop
jg
push
sbb
jmp
scas
pop
cli
pushl
or
sub
push
pop
jl
nop
and
cmp
pop
pop
aaa
aas
aaa
and
out
push
jnp,pn
push
mov
out
cmp
pop
mov
pop
pusha
mov
and
mov
sub
sub
fistps
xchg
cwtl
mov
mov
fldenv
push
jge
mov
adc
inc
or
sbb
out
add
fmul
xor
push
inc
jb
mov
sbb
pop
or
idiv
inc
push
hlt
mov
sub
test
or
shlb
dec
xor
and
loopne
loop
test
popf
int3
push
stos
fbld
bound
ss
or
arpl
lcall
idivb
lahf
ret
das
mov
or
jmp
sbb
fistpl
jle
cmpsl
cmp
xchg
or
in
add
sbb
xor
in
movsl
leave
cmp
add
sbb
bound
imul
data16
scas
popl
pusha
cmpsl
jo
ss
daa
or
or
xchg
stos
fcompl
mov
xor
in
fidivl
repnz
and
popa
jae
stos
mov
popf
sub
orb
push
fwait
mov
shl
fcom
jo
and
lock
fwait
inc
iret
dec
mov
or
and
mov
fidivrl
jp
out
push
in
lock
std
xchg
jmp
inc
adc
pop
pop
loopne
fwait
jge
sub
aam
or
mov
mov
inc
mov
dec
mov
std
mov
leave
and
xor
pop
mov
cld
jmp
test
mov
ja
and
push
or
ret
jg
or
popa
mov
ret
scas
xor
in
push
and
sbb
fabs
ljmp
out
fnstenv
add
daa
pusha
aad
or
mov
mov
inc
and
sub
pop
subb
add
stos
adc
lods
xor
mov
bound
push
ss
mov
pop
mov
adc
push
sub
fmuls
into
test
inc
and
mov
xor
xchg
push
sbb
push
scas
add
xor
jmp
cltd
xchg
aad
fsts
fs
add
jno
mov
cwtl
lahf
push
xor
inc
adc
mov
ror
push
jne
inc
out
push
test
movsb
cli
xchg
sbb
js
outsl
mov
xlat
repnz
pop
mov
iret
xlat
mov
sub
or
or
lea
rcll
add
test
mov
cmovno
lahf
push
mov
inc
dec
pop
xchg
leave
mov
jmp
sarb
sahf
ret
outsb
cltd
lea
inc
scas
mov
fistpl
sub
aaa
ret
push
cmp
ss
mov
hlt
mov
dec
or
rclb
mov
jne
aas
jo
sti
test
fidivl
stos
xor
das
mov
mov
add
movsl
clc
pop
in
aas
add
pop
fiaddl
jmp
push
fstl
sti
cmp
mov
add
cli
inc
pop
xchg
push
orb
shrl
hlt
mov
or
adc
xor
icebp
xor
sbb
sarl
push
pop
js
out
mov
sub
mov
mov
cmp
loope
and
sbb
lock
inc
pop
ljmp
cmpsb
mov
adc
fldt
cltd
mov
sbb
sub
jae
and
addr16
rcrb
mov
jb
and
stos
outsb
in
sahf
imul
cs
lods
bound
lea
inc
push
xchg
imul
out
dec
mov
pop
pop
das
xchg
nop
add
popf
dec
jnp
cmpsl
out
sub
cltd
sub
movsl
xchg
jbe
inc
out
pop
fistpl
leave
cs
ret
sub
pop
mov
cli
push
or
out
dec
adc
inc
scas
adc
cmp
arpl
fcoms
gs
fadd
in
xlat
js
jne
fdivl
mov
push
pushf
inc
jns
mov
xorb
mulb
sbb
ficompl
out
xchg
mov
sub
inc
std
movsl
movsl
stos
mov
push
push
sti
ja
std
cmp
dec
setbe
add
push
mov
test
std
sbb
xor
jl
dec
mov
jp
pop
repz
dec
fiadds
dec
mov
jmp
fimull
jae
sarl
xchg
mov
insb
fisttps
jmp
stos
rclb
jl
flds
popf
mov
xchg
xchg
mov
popf
cmp
xorb
lds
sub
jecxz
push
cmp
cmp
negl
mov
push
out
div
sub
js
inc
call
sbb
cmpsl
or
inc
arpl
arpl
push
lret
ds
mov
out
pop
cmp
daa
mov
mov
or
fs
or
mov
mov
aad
sar
inc
cld
leave
loope
in
sub
sti
je
jmp
and
fiadds
mov
fiadds
or
fdivrl
insl
test
pop
lods
cs
popa
test
jb
and
roll
mov
sahf
jae
in
popa
call
pop
insb
jno
push
pushf
scas
push
loope
rcrl
enter
push
adc
arpl
mov
lret
sahf
nop
cld
push
sbb
dec
cmp
jb
aaa
repnz
add
dec
enter
sub
ret
jl
jecxz
push
mov
sarl
jnp
dec
imul
pushf
xchg
or
mov
stc
stos
mov
std
loope
sbb
arpl
lods
shrb
pop
sub
test
adc
outsb
ret
jnp
jp
lds
ret
lahf
jno
and
jmp
pop
jnp
adc
cmp
int
stos
ds
push
pop
xchg
push
out
loopne
pop
lahf
ljmp
in
add
or
inc
and
leave
inc
cmpsl
mov
sbb
stos
mov
sbb
lds
push
jne
mov
and
and
mov
xchg
sarb
push
iret
shlb
daa
inc
sbb
aad
jae
jno
mov
aam
add
mov
jno
jns
add
or
sub
faddl
cwtl
sbb
test
stc
cli
mov
xchg
dec
mov
sbb
fwait
jns
in
fldt
xchg
lret
dec
cmpb
adc
fneni(8087
rorb
cmp
push
dec
loop
addr16
fisubrl
mov
mul
or
outsl
into
outsl
mov
sahf
out
pop
add
pop
cld
mov
push
sbb
or
rcrb
jp
cmpsb
inc
repz
dec
xor
and
int3
aas
mov
cmpl
push
inc
imul
dec
shr
in
outsl
enter
insl
push
add
push
mov
xchg
daa
popf
cmp
mov
add
pop
sbb
arpl
add
jle
and
out
scas
mov
dec
andb
daa
popa
in
pop
push
lcall
imul
mov
pop
mov
fiadds
iret
out
or
jo
jae
mov
faddl
test
out
mov
xor
adc
lahf
push
call
aam
lods
in
pop
shll
and
mov
adc
fcmovnu
loop
xor
ss
outsl
pop
mov
cld
pop
test
mov
int
lret
int3
push
ficomps
xor
movsb
and
push
stos
mov
fiaddl
mov
pop
pusha
pop
lock
jne
loope
addl
repz
xchg
std
in
fst
test
mov
pop
add
fwait
dec
ffree
ficompl
push
sbb
sub
les
addr16
cwtl
pop
inc
xchg
rcrb
mov
add
aad
lret
daa
sti
ret
gs
push
and
das
ds
imull
fadds
fstpt
adc
ror
push
les
call
inc
add
addr16
jo
inc
out
adc
out
add
scas
in
aam
or
xchg
and
inc
fs
xor
fwait
push
mov
rclb
pushf
test
out
mov
sbb
ja
pop
std
and
out
repnz
call
cli
dec
arpl
add
mov
scas
and
jecxz
push
addb
les
push
xor
dec
or
cli
pop
inc
xor
test
adc
dec
xlat
cltd
mov
std
adc
push
repnz
cmpsb
mov
stos
rorb
faddl
cmpl
dec
jae
pop
xchg
mov
push
fidivrl
pop
jo
int3
cmp
adc
lea
pop
test
push
hlt
mov
mov
adc
jae
cli
es
mov
sbb
int3
xor
sub
inc
fldenv
add
adc
sub
jbe
pusha
sbb
inc
or
aad
sbb
jg
ja
ljmp
shrb
fwait
and
mov
jle
mov
aam
jo
mov
jae
outsl
test
in
sbb
fstl
sub
int3
data16
imul
dec
in
cs
mov
pop
cmc
rclb
nop
push
dec
cmp
bswap
addb
mov
sbb
mov
mov
enter
test
inc
fbstp
rcrb
scas
pop
xor
scas
imul
sub
adc
lret
loopne
test
and
stos
fsubrp
pop
sub
arpl
arpl
cmc
fists
out
testb
sbb
dec
inc
in
pop
gs
jns
push
ret
adc
out
inc
mov
add
mov
loopne
jne
imul
mov
cmp
add
xchg
inc
inc
mov
xchg
pop
clc
lret
pop
pushf
flds
emms
ret
inc
push
or
ja
out
xor
push
push
pushf
jo
inc
jne
into
xchg
cli
ret
aaa
inc
test
pop
sub
cmpl
inc
dec
xchg
aaa
xor
sub
xchg
or
and
cmpsl
movsb
and
sbbb
add
bound
sub
adc
push
insb
push
pop
sub
push
lock
sub
imul
lea
rolb
rcll
fstps
xlat
jle
test
test
hlt
pushl
xchg
outsb
fsts
in
sub
scas
orb
jno
cmpsb
add
fmull
mov
mov
or
icebp
inc
gs
popl
insl
outsl
testb
jg
outsl
jg
inc
dec
nop
add
arpl
popa
bound
sub
pusha
je
sti
in
mov
adc
add
clc
xorb
xor
mov
dec
add
mov
or
mov
jmp
and
out
lods
inc
out
mov
shll
pop
jnp
insb
dec
sbb
int
ss
adc
add
mov
sub
addr16
push
xor
sub
in
cmpsb
inc
sub
sub
jle
push
fdivs
loop
sbb
inc
jbe
movsb
iret
sub
mov
sub
pop
xchg
cmp
or
test
cmp
mov
pop
cmp
push
and
xor
cwtl
fstpt
inc
xor
les
out
xor
sbb
sti
and
scas
cmpsb
ljmp
mov
dec
fmull
or
fldl
aam
xor
fnsave
lock
cmpsb
mov
ds
mull
jns
push
inc
js
fs
lock
sahf
xchg
push
adc
sbb
scas
mov
stos
in
or
addr16
rolb
ret
andb
cwtl
dec
pop
cmp
jne
lret
xchg
mov
mov
pop
sub
sbb
adc
sub
jbe
xlat
js
sbb
lods
out
dec
and
je
mov
movb
cmpsl
jne
fdivrl
pop
sar
dec
push
ret
jmp
push
fnsave
test
jne
and
ds
xchg
aam
aad
mov
scas
push
mov
dec
jge
jns
movsl
jnp
xchg
std
cld
repnz
notl
or
mov
and
or
stos
popf
pop
orl
in
test
fwait
into
inc
and
adc
in
mov
loope
sbb
add
xchg
dec
ja
add
ljmp
jp
filds
repnz
ret
js
lret
xor
mov
hlt
dec
lea
outsb
int3
mov
pop
leave
xchg
lds
cltd
pop
lea
cmp
jge
cmpsb
imul
imul
push
nop
xor
je
lods
mov
repz
push
xor
imul
lock
lods
std
scas
nop
call
shll
ja,pn
sbb
xlat
mov
shll
stos
lret
lds
mov
ss
push
mov
sahf
and
jae
faddp
push
or
enter
repnz
mov
out
mov
lret
rcll
int3
sysenter
andb
pop
dec
cmp
push
daa
je
pop
or
in
and
imul
and
inc
sbb
pop
fnstcw
xor
mov
out
cwtl
sbb
pop
out
and
dec
cltd
scas
test
outsl
and
jmp
push
inc
jl
js
xchg
sbb
pop
andps
jnp
ret
fdivs
or
jo
sub
ret
sbb
mov
sub
iret
sarl
mov
icebp
fildll
loop
cld
pop
sbb
enter
fcmove
loop
lcall
movsl
pop
xchg
mov
pop
add
leave
clc
shlb
fidivs
cs
inc
sub
scas
pop
sti
push
xchg
mov
and
aaa
mov
clc
mov
push
pop
cltd
push
and
shlb
icebp
xchg
inc
mov
push
sub
and
inc
xchg
pusha
pop
lods
stos
insb
ljmp
xchg
inc
ffreep
nop
push
cmpsl
xchg
mov
or
add
data16
pop
mov
ss
mov
mov
iret
sahf
pusha
mov
add
cmp
enter
js
cmp
xor
fstpl
fcomp
out
pop
jle
add
sbb
sub
adc
shl
fmuls
jno
dec
xchg
cmp
mov
lret
xchg
imul
movsl
pop
popa
bound
fnstenv
sub
stos
or
and
int3
fcmovb
or
mov
and
test
cwtl
cmpsb
xlat
jo
jmp
sti
out
mov
pop
in
test
sub
std
inc
jb
bound
pusha
out
adc
sbb
or
jg
imul
ss
mov
psubusw
push
and
pop
imul
mov
imul
push
add
or
jae
xlat
sahf
fwait
clc
pusha
pop
into
movsl
xchg
fwait
pop
lret
rorb
lea
inc
loope
xchg
push
js
loop
pusha
mov
cmp
ss
push
jne
xor
fsubs
js
ret
ds
das
orb
push
lcall
sbb
cmc
mov
pop
divw
or
clc
fidivs
mov
inc
scas
outsl
mov
sbb
in
shlb
out
add
fmul
push
sbb
sbb
sub
rol
in
out
xchg
dec
lahf
shrb
insl
add
scas
dec
cmpsl
push
sub
fists
sbb
mov
xor
repz
ret
cmovge
bound
push
pop
jmp
call
cmp
pusha
inc
sub
fwait
dec
jecxz
in
iret
das
push
call
sbb
div
xchg
and
pop
dec
fistl
stos
xchg
pop
aam
and
dec
push
jmp
pop
mov
xchg
mov
sub
int
xor
adc
push
lds
pop
leave
fcomip
cmp
mov
mov
cmp
mov
cmpsl
fstps
mov
sub
jecxz
jmp
adc
mov
testl
cmc
sar
fldl
or
loopne
data16
mov
push
jecxz
pusha
push
arpl
sbb
ss
push
lods
daa
push
test
dec
bnd
addr16
movsb
mov
xchg
adc
inc
xchg
lea
xchg
dec
xchg
cmpl
adc
arpl
jne
ljmp
xorb
idiv
xchg
pop
or
push
ja
xchg
xor
xchg
das
mov
push
or
jae
dec
push
addr16
jb
xchg
push
inc
and
in
daa
shrb
dec
pusha
hlt
flds
push
and
scas
sbb
popf
jmp
rclb
jmp
repnz
jmp
push
lret
aas
into
cmpsl
lds
and
adc
repz
out
das
xchg
cmp
and
bnd
andb
iret
jns
out
jne
mov
test
push
jmp
insb
add
dec
pop
ds
ja
and
add
mov
sub
adc
jo
loope
nop
cmpsb
inc
divl
adc
sysret
loop
daa
dec
orb
rcll
jp
cli
fwait
and
rcll
mov
repz
jl
mov
into
pop
mov
in
inc
cmp
pop
mov
pop
and
loop
cld
pop
shll
adc
cmpsb
and
cmp
int3
inc
lock
movsb
scas
or
cmpsl
pop
aaa
les
fldcw
test
out
pop
add
add
push
daa
pop
xchg
mov
call
and
xor
inc
xor
push
pusha
out
lret
fs
xchg
jecxz
loope
jae
pop
push
bound
mov
push
js
ja
aad
mov
lret
negb
out
jbe
mov
mov
inc
cmpsl
test
stc
dec
cmp
fcoms
js
dec
pop
and
pop
gs
shll
repnz
ss
dec
push
into
loopne
jae
fsub
popf
subl
mov
sbb
push
sahf
sbb
push
xchg
sbb
or
scas
cmp
imul
lds
push
sbb
dec
les
sbb
clc
dec
push
pop
in
in
xor
push
or
ljmp
dec
repnz
dec
or
insl
sbb
jmp
push
xor
xorl
and
pop
pop
pop
rolb
jno
test
jmp
jg
push
mov
cmp
arpl
mov
jecxz
adc
dec
sarl
lds
mov
sub
adc
xchg
push
test
adc
sub
dec
std
ja
rclb
xchg
andb
popf
pushf
add
and
cs
mov
gs
add
push
pop
jle
dec
xchg
pop
inc
xor
fstl
and
packssdw
test
or
adc
arpl
movsb
add
xchg
dec
jl
mov
mov
rcrb
gs
xchg
sub
lods
mov
adc
inc
loopne
popf
into
jns
pop
inc
sarb
cs
insl
icebp
xchg
push
mov
mov
sbb
add
lret
mov
push
mov
mov
mov
popa
or
mov
bound
popa
cwtl
dec
lcall
mov
fildl
adc
and
fdivrl
int3
and
dec
push
lds
int3
sbb
jbe
clc
pushf
sti
mov
pop
mov
mov
or
aam
or
in
enter
imul
fildll
outsl
shr
and
repnz
loope
mov
and
gs
mov
jnp
jl
and
test
xchg
iret
lods
aaa
sub
and
rcrl
sub
or
adc
cmp
lahf
push
mov
sahf
and
or
insl
push
pop
jnp
inc
dec
rorb
in
mov
push
mov
push
cmp
push
push
dec
sub
inc
enter
clc
ljmp
cmp
stos
loopne
shrb
rcr
std
sbbl
int3
ljmp
pop
cmp
jae
adc
faddp
mov
or
dec
dec
push
shr
pop
mov
and
or
push
add
shrb
arpl
icebp
xor
xor
test
push
lods
outsb
xor
repz
rol
and
push
inc
inc
das
or
into
pop
loopne
sbb
xchg
inc
mov
lret
mov
xor
daa
lea
in
jg
add
xor
lds
aam
out
jae
jbe
ficoml
mulb
or
inc
incb
mov
jp,pt
ljmp
jb
lahf
xchg
out
out
and
adc
je
xor
pusha
push
push
add
lock
jbe
notb
sahf
ret
pop
xorl
lea
xchg
inc
mov
mov
xor
subl
xchg
sub
imul
repz
inc
lret
hlt
enter
sub
mov
lret
mov
imul
enter
jg
insb
pop
lahf
jl
enter
loope
xor
push
mov
es
lahf
lods
in
or
mov
mov
fldt
jb
ljmp
sub
jne
fsubl
pop
fnsave
mov
push
jmp
cld
jecxz
lcall
notl
cmc
adc
shr
aas
xchg
scas
push
cmp
push
into
mov
push
aas
int3
loopne
call
dec
or
push
add
pop
lret
addl
jnp
and
out
je
call
mov
push
lahf
gs
mov
iret
xlat
pop
xor
popa
xor
aas
push
add
dec
mov
stos
nop
mov
or
add
mov
test
dec
push
insl
aas
lock
lods
jp
shrb
scas
scas
arpl
jnp
xchg
jo
jl
sub
mov
xchg
mov
jne
cltd
xchg
jle
fwait
test
cmpsl
pop
sarb
mov
hlt
inc
cs
sub
bound
xor
mov
or
pop
pushw
nop
dec
jae
push
fnstsw
dec
outsl
lret
lahf
es
add
pop
cli
pushf
inc
loope
les
pusha
rcl
fildll
or
popa
aas
sub
sti
fdivrl
jge
aad
mov
enter
mov
sub
imul
xor
sbb
dec
mov
jge
rclb
int
dec
xchg
push
or
or
sbb
mov
mov
mov
jg
xor
rolb
jns
push
mov
mov
in
ja
or
mov
das
and
int
scas
or
inc
push
test
ret
jno
push
inc
cmp
jmp
fsubrs
fs
ficoml
mov
add
or
push
push
mov
outsb
ficompl
jl
cmpb
dec
mov
fdivrp
aad
pop
imul
les
cmp
clc
add
mov
dec
pop
pop
popf
mov
pop
daa
lods
testb
mov
inc
lods
mov
clc
arpl
mov
push
testb
xchg
mov
push
jbe
and
xor
push
sbbl
mov
mov
int3
and
push
xor
nop
das
ficompl
mov
jo
add
int
mov
lods
adc
jns
in
leave
cwtl
cmp
idivb
fisubl
nop
out
cmpsl
mov
pop
add
xchg
cmpsb
mov
insl
dec
add
jb
mov
pop
repnz
sti
ss
test
addr16
mov
push
cmp
js
stos
push
fcomi
inc
xchg
mov
xchg
cmp
cwtl
push
push
lds
enter
gs
jb
test
fiadds
outsb
aam
je
pop
loope
imul
sub
mov
push
xor
aas
insl
loop
adc
out
das
jo
mov
pop
popa
outsb
fistpl
adc
dec
mov
inc
push
cmp
and
test
stos
aaa
lds
hlt
jl
fisttpl
imul
adc
add
or
nop
fdivrs
jmp
mov
adc
hlt
push
filds
or
mov
sti
hlt
mov
cmpsb
in
dec
sub
fwait
pop
in
loope
in
jae
push
jecxz
xor
lcall
pop
sub
std
xchg
arpl
js
sti
stos
add
cmovne
jno
fmull
adc
clc
push
or
ds
jb
xor
and
lods
mov
int3
mov
mov
andb
loopne
add
cmpsb
jmp
push
add
shlb
jl
stos
pop
or
mov
mov
mov
mov
sahf
dec
les
cmp
xchg
shlb
dec
pop
sbb
call
shl
xlat
int3
mov
daa
sub
mov
outsl
cli
das
daa
mov
pop
mov
dec
test
adc
rol
jp
bound
ret
or
push
mov
xor
mov
mov
ljmp
and
stos
test
fwait
inc
insl
aaa
iret
cmpb
sti
bound
jge
lret
aam
cmp
mov
scas
enter
int3
xor
test
and
mov
in
xchg
in
xchg
jnp
pop
fisttpll
jnp
fisttpll
sahf
pop
jecxz
test
sub
shlb
lcall
dec
mov
fsts
test
test
aaa
jns
mov
jmp
je
sub
cmp
push
xor
jae
push
jo
js
out
jno
repz
mov
cli
sbb
in
arpl
mov
lahf
jbe
ljmp
in
stc
sub
mov
test
fcoml
cmp
xor
mov
mov
dec
loop
out
cs
test
pop
enter
mov
mov
jle
lds
test
and
or
dec
movsl
addl
into
movsl
mov
adc
or
outsb
pop
xchg
rolb
fists
add
jmp
or
cmpsl
stc
roll
sahf
pop
adc
mov
cmpb
pop
andl
test
and
shlb
jp
loope
push
aad
imul
and
outsl
pop
dec
xchg
or
lret
mov
sub
push
pop
out
lcall
pop
in
mov
mov
in
adc
mov
sub
lcall
cmpsb
add
sub
test
cld
ds
xchg
out
jnp
push
mov
jns
sub
xchg
mov
add
push
jecxz
gs
jnp
sbb
mov
mov
sub
mov
stos
push
sub
jnp
pmaxsw
adc
and
mov
mov
cli
das
push
adc
jno
dec
push
sbb
je
xor
jg
stc
fstp
fidivrl
push
xor
xchg
jge
adc
push
xchg
and
mov
aad
mov
mov
mov
ret
adc
sti
xor
ret
stos
xchg
mov
inc
fwait
lahf
pop
inc
xchg
sub
sbb
mov
xchg
icebp
dec
xchg
inc
aaa
inc
cmp
int3
xchg
cmc
xchg
add
mov
adcb
push
daa
subl
push
sbb
or
mov
push
pop
lret
mov
sub
jne
dec
imul
or
mov
repz
inc
pop
icebp
dec
imul
jae
arpl
std
dec
data16
dec
jae
test
or
aaa
js
mov
cmp
pop
mov
dec
xchg
xchg
push
xor
dec
out
jno
ljmp
dec
add
lock
pop
setb
test
jl
pusha
adc
and
xor
nop
or
rorb
pop
fbstp
mov
pop
jg
and
mov
sbb
decb
addr16
in
pop
lods
jb
cmpsl
lods
push
or
xlat
ja
mov
aaa
xchg
cmpb
jecxz
mov
int
ret
mov
into
and
cmp
fwait
loopne
or
es
jbe
mov
pop
add
cli
inc
outsl
mov
subb
cmc
add
imul
into
xchg
push
or
inc
push
hlt
push
inc
mov
inc
add
inc
cmp
ljmp
movb
fiadds
cmpsl
mov
push
das
jno
lds
inc
sbb
mov
adcb
jae
fwait
add
cmp
pop
ljmp
mov
dec
sub
cmpsb
out
mov
jns
jne
movsl
push
mov
rolb
jg
push
repnz
dec
pop
push
out
jb
cmp
int
loopne
or
xor
je
jno
stos
push
into
in
sub
clc
rcl
jmp
and
fnstcw
sti
mov
inc
push
pop
ficoms
jb
enter
adc
lret
popa
ret
push
and
imul
xor
popf
clc
rcll
add
lcall
sub
test
cli
loope
xchg
loop
in
sbb
adc
repnz
inc
call
int3
sti
lea
push
pop
je
jl
mov
aaa
test
das
subb
cmp
lahf
movsl
xor
pop
jmp
mov
adc
and
bound
bound
inc
stos
xchg
add
jmp
pop
into
roll
inc
test
ret
xor
adc
in
jns
sbb
nop
in
sub
cmp
mov
jne
shll
adc
xor
insb
fistpll
andl
add
jl
push
jne
icebp
pop
stc
mov
pop
dec
push
int3
adc
pop
mov
dec
lea
leave
sub
cmp
mov
xor
lret
adc
lea
jo
movsl
int3
cmpsb
push
xchg
in
stc
loope
sub
lods
jmp
cmc
push
shlb
or
jmp
push
adc
xchg
in
je
lods
mov
dec
test
sub
push
mov
shld
loopne
mov
jmp
inc
mov
add
mov
xchg
sti
loop
mov
add
dec
mov
jp
fs
lods
mov
fdivp
xchg
imul
mov
cmpsb
inc
inc
xchg
movb
ret
outsl
jne
jbe
cwtl
xchg
mov
popf
outsb
rorl
jbe
repz
push
push
mov
jp
mov
lds
fwait
test
pop
insb
jns
sub
notl
pop
fcoml
je
pop
push
adc
add
cmpxchg
cmp
cmpsl
sarl
xor
xchg
in
and
dec
add
jmp
mov
mov
jbe
mov
andb
movb
cli
ja
add
mov
sti
out
mov
push
adc
cmp
mov
add
adc
aad
aas
pop
adc
pusha
sub
push
gs
idivb
ja
add
gs
or
and
testl
icebp
dec
add
push
jne
push
mov
js
cmpsb
arpl
xchg
dec
dec
sbb
in
mov
test
loope
andb
push
and
xchg
cmp
xor
mov
imul
and
sub
fwait
not
divl
adc
sbb
push
ljmp
mov
mov
sbb
cmp
adc
sti
add
inc
mov
outsl
add
sub
fsubrl
sub
ss
jmp
cmp
adc
loope
dec
add
mull
lock
enter
adc
orl
out
jns
outsb
repnz
movsb
mov
loop
ja
les
or
and
xchg
sahf
adc
stc
push
ja
xchg
jmp
pop
mov
xlat
dec
sarb
lods
test
push
cmp
fildl
cmp
cmp
cmp
in
adc
fnstsw
popa
roll
out
shrl
cmc
inc
jae
add
cmc
jnp
stc
xchg
lea
mov
subl
test
mov
fs
lock
adc
mov
stos
or
jno
leave
inc
cmc
mov
lea
lcall
pushf
in
int3
jmp
cltd
add
xchg
mov
mov
xchg
test
mov
cmp
in
lret
sub
scas
push
nop
jl
or
mov
popf
xchg
sub
test
sbb
sub
push
pushf
sub
gs
or
or
dec
cs
addr16
xchg
mov
hlt
mov
ret
sti
loope
hlt
arpl
cmp
push
jae
xchg
ljmp
rcll
and
lret
lds
fisttps
stc
sbb
dec
push
lods
lret
pop
lock
mov
fidivrl
int3
mov
sub
cmp
mov
in
push
fs
cmp
cld
loop
stos
lahf
imul
mov
mov
and
clc
sbb
scas
mov
cmp
push
scas
movsl
test
jge
fists
loop
aas
sub
daa
mov
aaa
cmp
mov
pop
or
icebp
cmc
aas
xchg
out
sahf
xchg
pusha
stos
sub
jb
fisttpll
repnz
xchg
pop
push
jno
fcomps
jbe
cli
subb
xchg
test
mov
sbb
into
jl
aas
sub
in
jo
xlat
mov
ljmp
jl
adc
jae
dec
mov
pusha
push
inc
pushf
adc
cmpsl
call
jmp
push
adc
lea
out
fsubrs
pop
dec
mov
in
test
lret
jle
xor
xlat
rorl
and
push
xorl
dec
fildl
push
ds
sub
mov
dec
lcall
mov
lods
and
pop
jmp
dec
xor
mov
divl
xor
xlat
insl
pop
pop
mov
ljmp
shlb
push
or
cld
jo
daa
dec
sahf
cmp
stos
pop
dec
and
sub
push
out
sarb
add
inc
cmp
cwtl
clc
int3
das
xchg
ret
ret
out
inc
push
mov
mov
lods
bound
and
jns
mov
dec
test
in
pop
imul
arpl
adc
sbb
jb
je
sbb
and
fistpl
aad
push
mov
ja
mov
pop
xchg
or
xor
dec
addl
ret
push
aam
aaa
sbb
fstl
popa
cmpsb
cmp
jb
aad
adc
pop
sbb
mov
sub
lret
dec
jb
int
xchg
add
mov
jo
fcmovnu
xor
scas
sub
mov
push
cmc
lcall
push
mov
sbb
adc
mov
je
xor
xlat
std
loope
arpl
jno
hlt
xor
xchg
adc
adc
jne
pop
cli
jle
shll
sub
mov
fcmovbe
insl
mov
out
shll
and
lock
inc
inc
cmpsb
push
jg
mov
pop
inc
stos
pop
fyl2xp1
cltd
scas
int3
fldl
sub
into
bnd
push
mov
or
adc
inc
sub
cwtl
outsb
mov
scas
inc
cmp
bnd
int3
out
cs
adc
stc
out
xchg
mov
lods
jno
mov
cmp
sahf
xor
test
daa
inc
lahf
aam
mov
mov
pop
cmp
jp
sub
ret
mov
fs
mov
daa
scas
push
adc
das
call
jb
call
movsb
mov
sub
inc
adc
xor
aam
or
mov
inc
cmp
xorb
sbb
shll
dec
loope
je
lds
inc
orl
mov
sub
in
sbb
fadds
lret
mov
pop
mov
lea
cmp
mov
ret
sti
jg
pop
shr
das
das
sbbl
daa
clc
mov
icebp
aad
cwtl
adc
sbb
lret
mov
mov
cmp
pop
in
xor
adc
push
dec
push
xor
xor
adc
jbe
jbe
sub
mov
mov
sarb
add
insb
and
or
call
repz
iret
in
movhps
repz
lods
and
fcoml
or
push
jne
js,pn
repz
dec
rol
fdivs
add
push
xor
lds
pusha
test
movups
incb
sub
shll
push
xchg
lock
lret
xchg
in
fldt
mov
out
and
pop
cmp
push
sbb
rolb
repnz
out
pop
popf
dec
in
and
js
cmp
cmp
scas
mov
push
imul
subl
or
lds
mov
les
shl
lret
shrl
ret
fucom
insl
in
lret
test
ret
std
cli
out
gs
mov
popa
mov
mov
movsb
jp
sbb
add
xchg
ret
loop
mov
xlat
push
lea
pushl
push
mov
jmp
insl
mul
arpl
mov
jg
lock
pop
or
and
add
addr16
push
and
hlt
into
lcall
add
add
cmpsl
mov
fisttpll
adc
or
pop
nop
shll
or
mov
sbb
pop
dec
add
lret
pop
inc
imul
ficoml
out
push
ja
push
push
stos
push
stos
jne
sub
les
push
jp
mov
les
xor
pop
data16
shrb
icebp
pop
loope
jl
xor
xchg
int
pop
fdiv
repnz
inc
xchg
pusha
daa
sbb
icebp
lahf
inc
negl
mov
dec
out
or
clc
push
or
xor
out
sub
mov
loop
adc
pusha
or
pushl
or
insb
cwtl
subb
addr16
adcl
stc
push
sub
in
enter
push
pusha
mov
fidivrs
jnp
adc
je
adc
jnp
jmp
mov
shrb
and
lcall
idivl
adc
xchg
stc
cmp
dec
mov
out
stc
jge
cli
and
test
mov
loopne
popa
mov
arpl
into
mov
sbb
mov
dec
stos
cwtl
push
mov
in
jmp
ror
aad
push
js
es
push
jmp
icebp
jle
push
xchg
add
es
outsb
jo
inc
je
jmp
pop
clc
jl
sbb
out
lcall
int3
movsb
ficoms
sbb
xor
or
rclb
push
pop
sahf
in
inc
les
sub
rcrl
aad
shlb
aas
or
in
or
mov
jbe
add
das
scas
rcll
div
cltd
lcall
mov
loopne
enter
fcoms
mov
jbe
xchg
sbb
scas
dec
mov
scas
outsb
inc
imul
fnsave
mov
ds
sub
add
xchg
and
mov
sbb
xchg
in
xchg
cmpb
mov
popa
and
push
sgdtl
mov
jle
enter
daa
xchg
pop
sti
mov
shll
mov
push
lret
bound
in
lcall
cmpsl
sub
mov
jbe
aas
test
xor
adc
adc
jmp
xor
in
sbb
dec
stos
outsb
cmpsb
jae,pn
push
iret
mov
mov
sub
xchg
ret
push
addr16
jae
int3
pushf
lcall
fstps
fdivs
push
sbb
or
popl
push
push
mov
push
lods
movsl
lret
jne
lds
in
and
mov
jmp
pop
jmp
movsb
test
add
aad
mov
out
xchg
inc
push
movb
inc
jno
push
fldt
jle
paddsw
aam
xlat
push
fcos
sbb
lea
aas
aas
or
popf
dec
xchg
mov
dec
add
sbb
jecxz
call
dec
sbb
cmp
test
and
in
mov
pop
arpl
pushf
in
inc
ror
ja
out
mov
rcll
pushf
or
loope
int3
fistpll
mov
or
cmp
loope
aam
mov
dec
cmpsb
aad
outsl
movsl
test
rcrw
add
sti
icebp
pop
push
fdivl
scas
mov
sub
js
dec
add
int
or
xor
insl
icebp
fcoms
les
push
inc
cmpsb
push
push
ret
stos
js
out
imul
jmp
pop
push
sbb
movsb
jge
lods
pop
lret
outsl
push
jns
dec
stc
push
xor
push
xor
ja
inc
lcall
add
call
pop
popf
pusha
xchg
addb
inc
add
notl
jnp
es
cs
sti
aas
lret
ficoml
and
ficomps
ja
pop
cld
or
in
jns
lea
xor
pop
adcb
sbb
nop
adc
inc
jp
es
movsb
sub
inc
out
sbb
int3
xlat
daa
cmp
mulb
jecxz
push
sarl
ss
fst
popa
lcall
lods
popa
js
pop
mov
leave
rcr
cmp
dec
popa
sbb
xchg
movsl
movsl
fiadds
mov
mov
lcall
cmpsl
lcall
mov
mov
enter
pop
lock
int3
mov
xchg
fs
fistpl
xchg
jo
loope
mov
sub
aaa
sahf
les
popf
push
mov
lea
add
inc
xor
jns
inc
sbb
into
pusha
push
incl
notb
popf
std
cmp
pop
mov
stos
mov
movsw
cmp
in
add
rclb
or
daa
push
mov
jno
push
push
fdiv
sub
test
insl
ret
xchg
sub
jae
inc
sbb
dec
test
mov
jle
mov
xorb
adc
cs
addb
stc
insb
rorb
ljmp
cmp
xchg
pop
and
pop
ds
test
mov
pop
or
stc
dec
notb
sub
ds
clc
rcr
xchg
dec
pop
dec
xlat
jnp
ret
jne
cwtl
fcomps
xor
adc
lods
push
ds
jmp
cltd
les
ss
inc
orl
jnp
jl
sub
mov
imul
mov
ja
ret
mov
outsb
jnp
mov
cmpsb
jecxz
xchg
adc
jg
inc
fstpt
mov
xor
push
fistps
ja
enter
ret
xor
mov
and
cmp
je
xacquire
popf
icebp
adc
nop
push
imul
and
scas
jbe
rolb
in
cmpsl
shrb
xor
mov
enter
cwtl
and
insl
test
mov
jne
lods
cmp
or
int3
sbb
aad
icebp
mov
out
lahf
lds
sbb
xor
test
jnp
mov
sub
add
gs
xchg
andb
stos
andb
sbb
fcomps
inc
divb
stos
into
mov
aas
lds
push
pop
dec
sub
inc
pop
or
mull
cmpsb
lods
adc
pop
loope
xchg
mov
loop
mov
mov
or
or
in
loop
cmp
add
iret
out
mov
mov
push
out
push
in
mov
and
push
jp
lret
mov
adc
in
out
int3
sbb
enter
dec
cmp
push
sbb
pop
cmp
aad
cmp
xor
pop
xor
cs
jb
jo
sbb
xor
xor
jb
add
mov
or
mov
sbb
push
adc
adc
pusha
inc
cld
outsb
das
pop
push
cmova
sub
jecxz
and
xorb
nop
xor
mov
mov
inc
and
enter
adc
pop
aad
jne
xchg
push
fcompl
lret
jmp
push
jno
lcall
out
in
sbbl
sbb
mov
out
fldcw
inc
or
cmp
popa
jecxz
gs
push
popf
push
cmp
inc
and
jle
dec
jge
repnz
jno
sbb
and
mov
shlb
repz
jl
adc
mov
insl
ljmp
add
pusha
mov
mov
xor
into
mov
cmp
cmp
and
repnz
or
mov
push
aaa
xchg
popf
push
loope
dec
out
cmp
jae
dec
push
clc
ljmp
mov
sub
int3
jp
mov
orl
adc
pop
pop
int
mov
sbb
push
mov
fcoml
enter
outsl
xor
je
iret
fiadds
lds
hlt
lea
xchg
jp
inc
xor
jnp
nop
sarl
jge
sahf
inc
mov
mov
inc
push
cld
cwtl
mov
scas
and
adc
movsb
aaa
dec
dec
fiaddl
mov
xchg
sbb
adc
enter
mov
sub
push
push
push
shl
repz
fisubl
xor
ret
fwait
pop
mov
adc
sbbb
pop
lods
dec
imul
dec
pop
call
sbbb
lods
in
xor
imul
cmp
lods
xor
jnp
daa
enter
das
jo
sbb
mov
add
sub
jno
gs
xor
mov
pop
nop
mov
push
jne
xchg
mov
or
push
repnz
scas
cmp
add
ret
shl
push
mov
xchg
push
push
addr16
loope
test
adc
jl
stc
lcall
add
dec
sub
xor
push
out
xchg
inc
fnstsw
push
ss
ret
outsb
mov
add
into
push
mov
xor
lret
fldcw
notb
pop
jecxz
add
sbb
jo
stos
into
sub
xor
leave
movsb
xor
cmp
mov
lcall
fildll
movsb
and
mov
jmp
lahf
repz
cmp
lock
xor
and
lret
add
fists
adc
adc
mov
xchg
xchg
js
xlat
mov
fldl2t
xor
aam
mov
js
sub
lret
pop
pushf
insb
pop
pop
fnstcw
lahf
inc
imul
jne
rcr
xor
or
xchg
xchg
lock
sub
std
std
add
outsb
js
adc
cmp
fistpll
cmp
push
lds
xchg
int3
out
and
mov
cmp
lret
out
push
add
std
shlb
dec
mov
das
xor
jns
inc
sahf
dec
cmc
shl
inc
push
imul
dec
lret
out
js
jo
sub
lret
js
ds
sbb
xor
subl
cmp
popa
push
std
arpl
push
sbb
popf
inc
xchg
scas
push
sbb
xchg
cmp
jne
outsb
push
cmp
cli
dec
mov
mov
iret
bndldx
sub
push
mov
lcall
jae
insl
sub
cmp
scas
mov
mulb
cmp
pop
aas
cmp
jae
mov
sub
push
je
or
pop
pop
idiv
mov
mov
out
mov
pop
je
ds
paddusb
adc
movsb
or
shrl
xor
out
push
fistps
in
mov
or
jns
sub
jmp
pushf
cltd
je
pop
cmc
idivb
xor
or
nop
ds
in
xchg
orl
cltd
xchg
cmpsl
sub
lret
ret
and
mov
mov
movsl
sbb
out
imull
push
pop
dec
cli
jb
scas
int
inc
xchg
pop
pop
js
push
fisttpl
mov
fdivl
pop
and
int3
sub
jmp
aam
ljmp
push
cld
mov
mov
les
mov
pusha
mov
jbe
jno
pop
into
jmp
mov
dec
lcall
fistl
js
mov
xchg
cmp
push
inc
ds
ret
jae
cmc
mov
mov
ret
enter
cmp
cltd
test
add
fcomps
and
xchg
xchg
insb
imul
mov
pop
mov
in
cmpl
enter
iret
and
sub
bound
xor
into
rolb
les
inc
push
mov
sub
aad
repz
inc
mov
or
ds
fbstp
imulb
jo
shrl
fisttpl
out
mov
mov
dec
mov
rclb
and
sahf
inc
cmpsb
shll
and
cmpsl
hlt
fbstp
ficoms
push
stc
das
les
adc
jne
test
outsb
xchg
call
cmp
cmpsb
add
fsubl
nop
dec
int
push
add
orl
cmp
stc
xor
imul
xor
mov
lret
mov
xor
jg
icebp
add
das
ljmp
dec
iret
out
inc
sbbl
push
je
cmp
xchg
lods
sbb
add
mov
repz
inc
inc
push
test
pop
pop
jae
stos
cmp
mov
insl
aaa
and
xchg
call
lahf
sub
movsl
stos
mov
cltd
xor
xchg
sbb
loopne
jo
jae
adc
ffree
leave
mov
test
sbb
and
jle
stc
and
push
outsb
orb
push
jle
test
cmpsb
or
mov
jmp
inc
inc
fs
sarb
jae
and
pop
arpl
mov
data16
cs
or
ja
sbbl
mov
mov
psraw
gs
std
dec
out
sub
push
mov
mov
scas
mov
not
pop
add
jo
inc
adc
inc
or
rcrb
in
cmp
iret
fwait
pop
fdivp
outsb
mov
push
lret
fsubr
and
push
ljmp
call
adc
movsb
rclb
xorl
mov
pusha
pop
pop
dec
outsb
dec
aad
movsb
inc
push
pop
into
mov
cltd
pop
push
sub
sti
inc
fstp
sbb
push
ret
or
test
lods
jl
push
xchg
cmc
aas
adc
in
pop
dec
or
gs
rolb
cwtl
rclb
mov
insb
pop
add
in
andl
jo
stos
movsl
vpshab
xchg
mov
mov
sahf
inc
enter
es
movsl
fcompl
push
out
sar
into
jo
gs
iret
sub
xchg
mov
cmp
repnz
outsl
mov
sti
jnp
fiaddl
shl
testl
cmp
push
dec
scas
xor
loope
in
cmc
xor
lods
jbe
cli
in
ss
add
add
lea
out
out
cwtl
outsb
pushf
jge
jle
cmp
cld
xor
leave
ficomps
jg
xchg
or
pushf
mov
in
dec
iret
ja
dec
pusha
lret
movsl
inc
inc
xlat
adc
cwtl
test
arpl
adc
in
jns
sbb
lcall
or
add
lock
test
inc
daa
mov
xor
and
fldt
test
add
shrb
mov
je
push
leave
lcall
jecxz
dec
mov
outsb
aam
and
cmp
jns
leave
mov
mov
xchg
push
adc
bound
adc
push
addr16
jne
pop
cmp
cmpsl
jecxz
enter
inc
pop
and
push
jmp
mov
movsb
mov
inc
push
jo
imul
sub
and
xchg
jmp
gs
push
bnd
std
testb
data16
aam
dec
mov
or
test
rorb
pop
lahf
movsb
xor
push
ljmp
cmp
test
inc
pop
cmpsb
push
cs
push
lcall
inc
imul
lods
lahf
or
mov
pusha
sbb
xor
push
outsb
shr
aam
pushf
xor
jecxz
xor
add
pop
je,pt
out
test
into
pop
jle
push
filds
mov
mov
push
add
and
inc
xor
mov
lods
rorb
dec
mov
mov
or
aaa
and
cmpsb
sbb
push
pop
add
sarl
clc
in
enter
push
add
xchg
jne
add
andb
and
pop
retw
dec
adc
cltd
xor
insb
imul
fildl
dec
int3
stos
mov
movsb
nop
rcrb
flds
mov
pop
push
ds
adc
jecxz
cmp
popf
clc
aad
xchg
cmp
repnz
add
sub
or
in
fs
ljmp
je
out
insb
xchg
mov
fiaddl
mov
and
pop
cwtl
imul
inc
popa
xorl
jo
xor
loope
in
lods
add
pop
adc
das
push
mov
pop
notl
cmp
pop
mov
movsl
int3
cmp
xor
and
enter
mov
pop
fdivs
mov
cld
pop
lods
mov
lahf
push
insl
push
cmp
add
mov
cs
add
jmp
outsb
xchg
or
sarb
mov
popa
ljmp
mov
rolb
fwait
sub
fs
pusha
ret
icebp
stos
pop
pop
jb
shr
cmp
dec
loopne
mov
mov
mov
inc
outsl
mov
mov
int3
jp
mov
sbb
notl
out
dec
mov
push
pop
lock
sbb
nop
std
add
cs
mov
add
sarl
adc
aaa
inc
popf
push
or
hlt
mov
mov
inc
pop
jg
sbb
jbe
shlb
xor
mov
jg
xchg
jnp
movsl
mov
jno
out
rolb
adc
cli
jb
adc
cmc
and
dec
mov
pushf
adc
jbe
sahf
imul
enter
mov
call
into
pop
stc
mov
in
jb
dec
sub
movsb
pop
mov
outsb
aas
pop
sahf
pop
js
xchg
lds
push
lret
nop
out
adc
hlt
and
js
jo
test
jl
mov
pop
push
sahf
test
ret
cmc
mov
jge
sarb
insl
push
pop
mov
inc
leave
inc
sahf
pop
lcall
and
incb
pop
xchg
dec
ja
addr16
sbb
int
push
mov
orb
adc
dec
insl
flds
mov
outsl
and
xchg
mov
add
xchg
roll
sbb
push
push
and
dec
dec
xchg
cmpsb
lods
fistps
paddw
inc
outsb
into
mov
mov
jo
mov
add
int3
ret
jno
test
fcmovnbe
adc
xor
jecxz
cmpsb
sub
jl
adc
ja
xor
xchg
cmpsl
repnz
push
icebp
adc
jp
pop
cmpsb
or
and
aam
xor
xor
dec
adc
fsubs
inc
lods
adc
js
xchg
cli
mov
xchg
popa
test
test
add
inc
data16
sub
scas
insl
in
jmp
xchg
and
test
lcall
imul
incb
jge
call
cmpsb
sbbl
popf
ror
nop
inc
mov
daa
push
pop
dec
sub
scas
ret
jb,pt
mov
btc
ljmp
insb
mov
pop
ret
xchg
arpl
and
test
sub
or
jns
jg
mov
testb
pop
testl
movsb
fisttpl
push
enter
scas
repnz
inc
popf
shl
mov
iret
lahf
icebp
adc
iret
aam
in
movsb
and
or
incl
push
jge
sub
dec
test
mov
inc
xchg
in
fbstp
push
clc
int3
push
outsb
repz
nop
and
dec
lock
pop
dec
dec
pop
pop
adc
sub
dec
and
lret
mov
shl
pusha
xchg
bnd
jne
icebp
mul
jge
pxor
inc
mov
sarb
aaa
mov
jle
or
cld
xor
test
test
mov
mov
cmpsb
push
dec
movsb
adc
pop
xlat
loope
push
jmp
es
hlt
push
pop
outsb
movsl
pop
sub
fstpt
mov
rol
mov
decb
pop
mov
pop
outsl
loopne
lcall
xor
mov
and
mov
gs
or
dec
or
imul
fwait
sub
inc
addl
cmpsl
xchg
popf
jg
ds
imul
xchg
mov
push
xchg
mov
xchg
pop
and
inc
inc
in
notb
inc
or
sub
push
aas
stc
inc
bound
adc
fistps
mov
idivl
loopne
dec
sub
cmp
mov
or
inc
sbbb
jl
mov
lock
adc
test
cld
popa
xor
fisttpll
aas
je
sti
inc
and
cmp
mov
cld
test
cli
int3
cmp
test
push
xchg
and
push
mov
cwtl
int3
in
popf
into
fs
inc
fidivrs
mov
mov
adc
mov
ret
or
dec
add
out
sbb
pusha
imul
iret
shl
xor
adc
fnstenv
xor
outsb
les
in
cvtpi2ps
je
call
push
or
insl
push
pop
pop
sbb
mov
adc
cli
sub
mov
jne
aaa
iret
iret
daa
xchg
fwait
mov
inc
adc
mov
mov
lret
hlt
repnz
jmp
push
je,pn
push
orb
imul
xchg
pop
addr16
fs
out
std
mov
lret
leave
inc
mov
mov
inc
out
sub
mov
in
sbb
pop
mov
gs
das
mov
xchg
push
mov
jno
clc
ds
dec
inc
dec
or
sub
or
cmpsl
mov
loop
dec
pop
sub
call
jl
pop
aam
inc
pop
jmp
mov
add
cmp
cmp
testb
cmp
mov
inc
in
mov
jmp
mov
mov
aas
push
js
cld
mov
loopne
int
out
xor
xchg
pop
outsb
mov
lds
pop
xor
out
shll
mov
call
sbb
pop
mov
mov
push
inc
cmpsb
bound
mov
inc
xchg
into
sar
movsl
cmp
pusha
test
popa
mov
and
mov
pop
idiv
mov
xor
out
popa
xchg
or
cmp
add
ljmp
mov
nop
sub
aam
subb
add
std
fadd
fbld
lahf
test
mov
push
add
and
addl
into
fistps
sti
insb
add
push
loop
outsl
les
push
xlat
test
inc
add
xchg
pop
cmp
jo
inc
aam
or
push
imul
mul
mov
gs
int3
pop
test
push
adc
adc
movsl
sub
mov
leave
jbe
push
push
pushf
mov
dec
pop
cwtl
xchg
ss
pushf
lcall
sub
dec
les
dec
push
call
inc
lods
mov
std
dec
sbb
lahf
int
sbb
sub
push
je
jae
cltd
jbe
sti
add
mov
test
mov
add
cmp
jge
scas
add
mov
dec
or
in
cmp
scas
mov
addb
mov
mov
xor
gs
into
sbb
jne
adc
cmp
mov
test
ja
mov
mov
push
mov
fimull
pushf
fs
mov
popf
jecxz
push
loop
dec
dec
mov
aam
pop
ror
adc
and
stos
lret
loop
neg
xor
mov
xor
push
repz
adc
mov
jp
test
and
ror
fdivrl
inc
ret
shrl
rcr
dec
sub
stos
fwait
cmp
cld
orb
out
std
cmp
jmp
sbb
pop
sub
imul
sbb
sub
add
fcoms
inc
push
mov
xor
mov
push
aad
or
test
xor
inc
int
mov
xor
enter
mov
cmpsb
adc
out
fs
clc
or
popa
js
or
mov
cmc
into
xor
sbb
mov
dec
fsubs
mov
jl
xchg
aam
cmp
or
test
mov
ss
imul
add
jecxz
xor
in
test
push
loope
cmp
lock
pop
ret
sub
sahf
xchg
movsl
cli
inc
xchg
and
mov
das
mov
inc
stos
mov
fsubrs
lret
insb
push
cmp
or
push
das
inc
pop
or
bound
inc
xchg
iret
mov
cmpsl
leave
adc
mov
rol
fucomp
xchg
jmp
mov
cmovs
sahf
mov
das
fcmovne
in
rcr
cmove
mov
mov
popf
push
movd
adc
adc
fcoml
out
jne
push
add
adc
jl
pop
and
out
notb
andl
xchg
lods
xlat
fidivrs
lret
sub
sub
sbb
dec
call
jae
imul
bnd
lds
jne
insb
jnp
aam
scas
das
adc
xlat
adcb
or
or
ficompl
test
mov
test
push
rolb
loopne
sbb
or
push
in
mov
call
lock
push
lret
dec
adc
sti
arpl
and
xor
cmp
fs
cmpsl
hlt
add
ds
in
int3
jle
mov
shll
cwtl
dec
jmp
sahf
push
dec
les
xchg
mov
sub
ds
push
repnz
add
test
mov
pop
shll
jo
inc
jge
mov
insb
push
xor
pop
mov
xor
clc
ds
mov
push
xchg
loop
shr
insb
fcomps
xor
sahf
aas
jmp
sub
push
insl
push
fdivl
mov
nop
movsl
in
mov
movd
mov
mov
adc
stos
cmp
pop
push
repz
mov
gs
insl
mov
sahf
pop
fcmovnu
cmp
dec
cmc
fs
data16
inc
mov
out
scas
and
jle
push
pop
out
xchg
jbe
sbb
js
xchg
shrb
mov
and
icebp
fiaddl
nopl
xrelease
cltd
sub
xor
mov
pop
sub
add
adc
pusha
aad
dec
cmc
or
adc
sub
testl
pushf
jmp
add
dec
xchg
imul
sahf
and
xchg
cmp
das
lock
mov
ljmp
ret
ret
std
mov
xchg
mov
lret
jge
dec
xlat
and
push
dec
mov
fbld
add
jb
addr16
int3
ret
in
call
sti
mov
ds
clc
sub
jae
lods
ds
add
dec
in
outsl
fists
pop
jg
cmp
aam
jo
push
or
inc
scas
xor
sarl
push
mov
sbb
cwtl
mov
push
sbb
mov
mov
sbb
mov
das
imul
and
push
sub
pop
testl
lcall
int3
pusha
pushf
dec
cmp
add
jnp
iret
cmp
push
gs
xchg
inc
or
or
sbbl
popf
mov
xor
cmp
inc
mov
clc
xchg
int
inc
xchg
push
or
dec
adc
shrl
lcall
inc
mov
cwtl
mov
inc
push
ret
data16
cmp
sbb
adc
pop
or
jp
sbb
cmp
addr16
subb
out
dec
stc
insl
test
pop
jle
mov
sbb
and
stc
mov
cld
sbb
icebp
mov
inc
xor
and
aad
insb
sbb
cli
fstps
jae
push
std
aas
or
ja
inc
cmpl
test
mov
roll
adcl
xor
std
mov
xor
mov
lret
orb
loope
adc
call
shlb
pop
jb
push
out
into
insl
mov
jns
fmuls
jmp
push
ljmp
addr16
and
nop
inc
pop
pusha
inc
xor
in
jb
js
scas
stos
xor
out
mov
sub
fistps
push
mov
xchg
pop
xchg
jp
xchg
fisubrs
mov
mov
mov
or
add
in
les
xchg
notl
pop
cwtl
pop
stos
shrb
fadd
mov
mov
jecxz
imul
inc
test
mov
push
mov
enter
aaa
lock
arpl
sbb
xor
sbb
mov
scas
lret
mov
cltd
ljmp
adc
dec
xor
hlt
rolb
or
imul
mov
mov
orl
mull
addb
andl
add
es
test
jae
insb
pop
or
ss
jl
pusha
sub
push
add
clc
aad
cli
mov
in
push
sbb
enter
mov
aam
nop
ret
idivl
mov
xchg
xor
mov
aam
inc
dec
aaa
jae
movsb
sti
xchg
mov
out
outsb
xchg
push
loop
dec
insb
jge
dec
jge
mov
addr16
out
and
out
push
mov
hlt
sbb
loop
rcrb
mov
rcl
pop
arpl
jecxz
subl
out
cmc
dec
and
mov
lret
mov
push
out
sbb
xor
push
enter
xchg
rorl
mov
fisttpl
int3
xor
bound
mov
roll
mov
inc
repnz
jb
jne
push
push
jecxz
mov
in
mov
mov
or
ljmp
inc
inc
push
cmpsb
outsb
add
xchg
nop
fwait
or
cmp
add
out
repnz
inc
jge
ret
adc
mov
fisubrl
push
sbb
or
movsl
and
nop
dec
inc
jb
xor
sub
test
xchg
pop
mov
repnz
mov
std
mov
mov
mov
sahf
daa
fwait
stc
fcoms
mov
jle
push
loop
push
mov
xor
std
push
in
sbb
sbb
in
or
pop
imul
iret
je
mov
dec
push
pusha
adc
rolb
in
jno
dec
push
cs
lock
sub
test
add
outsl
sub
pop
mov
mov
lcall
lock
mov
push
sti
fildll
int3
ja
push
mov
jmp
fwait
inc
xor
sub
iret
insl
push
pmaxsw
shrb
adc
aad
pop
nop
fidivl
xor
stos
fisubs
jo,pn
fisubs
jmp
dec
adc
jle
mov
inc
add
pop
int
shr
cli
mov
inc
lea
sbb
adc
mov
cmc
mov
push
xor
clc
pop
mov
xchg
xor
movsb
mov
fldpi
sub
aas
mov
mov
daa
iret
cmp
outsb
std
cmpsl
sbb
xchg
fs
xor
dec
or
arpl
mov
lcall
jbe
mov
lahf
xchg
dec
cmp
popl
pop
divl
in
rcrl
movsl
shl
lock
int3
cmp
and
pushf
mov
mulb
sahf
fldenv
cltd
jo
imul
pop
xchg
adc
out
pop
movsb
jns
lds
jnp
inc
xchg
cmc
jno
popl
cmp
movsl
bound
cmp
add
rcrb
mov
cmc
fwait
or
out
add
push
inc
loopne
mov
shll
rcrb
movsb
lcall
push
mov
jae
mov
aas
xchg
mov
xor
dec
ds
sbb
test
mov
push
mov
ficoml
pop
outsb
aas
mov
inc
jmp
mov
in
rorl
fidivl
enter
inc
pop
mov
in
mov
int3
es
bnd
jne
in
and
daa
insl
xor
test
xor
shll
mov
daa
cmp
mov
lods
mov
xchg
push
or
out
xchg
xor
mov
fidivrs
sub
into
out
pop
push
hlt
leave
push
xchg
pop
icebp
xchg
jecxz
lcall
enter
std
ret
xchg
sarl
lret
insb
mov
enter
gs
repnz
jg
cmp
das
mov
mov
loopne
out
clc
sahf
outsl
fmulp
shlb
xor
cltd
add
ds
pop
jg
sbb
push
cmp
cmp
std
shrl
mov
pop
rcrb
xor
or
notb
out
inc
mov
cmp
mov
mov
insl
std
mov
adc
inc
dec
cmpsl
cmpb
push
scas
cltd
pop
xor
rcrb
adc
repz
xchg
or
adc
cwtl
ss
mov
outsl
xchg
lcall
or
cmp
dec
mov
dec
popa
int3
mov
cmp
xor
hlt
jne
mov
xchg
adc
xchg
mov
int3
cltd
dec
fisubs
xor
sbb
mov
hlt
ret
and
stos
data16
addr16
repz
in
sti
or
push
shlb
lret
lds
iret
enter
lods
cltd
mov
jno
fiaddl
push
push
or
mov
and
call
add
cld
xchg
mov
xchg
ss
pop
xchg
lds
dec
pop
or
xchg
mov
ret
and
adc
push
mov
dec
mul
add
jp
xchg
cmp
popf
into
cpuid
pop
mov
xchg
adc
dec
sar
iret
mov
movsb
lcall
cli
mov
sbb
pop
xor
push
shlb
js
cmp
negl
sub
inc
mov
imull
mov
icebp
xchg
lea
xor
sbb
xchg
pop
ljmp
pop
cmpsl
xchg
je
int
enter
push
stos
sbb
and
dec
jbe
pop
jmp
and
aad
int
mov
jb
pushf
pop
mov
mov
mov
mov
ds
test
and
loope
xor
add
ret
pusha
sbb
xor
adc
or
insl
mov
push
xchg
sub
iret
sub
adc
mov
lret
in
repz
jecxz
sub
jge
aaa
fidivrl
mov
jbe
sbb
fidivl
enter
or
test
jge
les
sarb
movsb
dec
cmp
adc
mov
cmp
ficoml
test
push
xchg
fsubrl
jge
scas
incl
cmp
into
mov
shl
out
orl
jg
ds
shlb
rorb
mov
adc
in
or
jcxz
jmp
out
push
dec
outsb
and
pop
and
repnz
cmp
movsb
movsb
cmp
fistps
xor
loope,pn
rorl
jg
inc
mov
push
fwait
dec
repz
into
mov
jno
xlat
prefetcht0
xor
mov
or
dec
aas
push
dec
sub
insb
and
test
adc
xor
xchg
hlt
fimuls
pop
and
ret
jge
sub
push
and
inc
xchg
adc
outsl
add
enter
and
mov
jb
lret
test
in
cmpb
and
xor
pop
push
imul
or
std
ja
in
in
xchg
les
jae
adc
pushf
je
in
into
negl
jge
adcl
cmp
ljmp
mov
ss
mov
inc
mov
cmc
fcomi
jae
das
mov
lock
call
push
ss
inc
mov
aam
cli
fwait
sti
xor
jae
fdivrs
fisubs
mov
into
es
cli
lahf
cmp
out
xchg
mov
nop
sbb
or
inc
pop
loopne
outsl
pop
rcr
daa
mov
cltd
jae
jno
lret
dec
jl
jnp
inc
and
xor
inc
out
test
test
xchg
inc
jns
dec
xchg
jl
push
inc
mov
ja
in
imul
jnp
jmp
mov
cmpsb
xchg
loope
sbb
jge
in
mov
pop
loopne
dec
inc
sti
dec
lock
xchg
stc
push
sub
daa
pushf
in
cmp
mov
mov
loopne
jecxz
or
outsl
in
push
lock
sahf
call
sbb
xor
and
xchg
sbb
cmp
jae
push
stos
ficoml
divb
mov
mov
scas
testb
fwait
xchg
insb
xchg
bound
jmp
push
shl
int
inc
push
nop
test
icebp
fstps
add
lods
in
inc
ja
add
in
lods
add
daa
sub
lods
nop
int3
loope
add
xlat
jle
or
mov
add
loopne
aas
aaa
sbb
and
adc
push
movsl
cld
add
imul
inc
mov
fildll
fnstsw
jg
mov
push
xor
mov
ljmp
or
push
pop
in
lret
xlat
push
mov
sbb
outsl
inc
mov
cmp
mov
and
pmaxub
jecxz
xchg
pop
mov
mov
xor
pop
loop
jmp
in
xchg
push
nop
mov
cmpsb
das
pushf
xor
pop
or
lods
lds
inc
in
fs
lods
aad
dec
jnp
dec
and
lds
mov
adc
sti
outsl
sub
dec
jecxz
mov
test
xlat
enter
sbb
jb
in
or
fwait
ja
jbe
jbe
xchg
js
stos
ss
adc
ret
dec
dec
xchg
clc
xchg
mov
sub
sub
xchg
and
daa
cli
sbb
int3
sbb
enter
mov
shr
mov
cmp
sbb
push
arpl
pop
das
push
sbb
aas
scas
xchg
sbb
aas
fldl
dec
add
mov
cmpsb
xor
popa
insb
mov
mov
jo
mov
jb
pop
cmpsl
sbb
cmpsl
into
or
cmp
scas
inc
lret
in
adc
lret
sub
jb
fstpt
insb
mov
dec
pop
in
push
xor
sub
mov
inc
lods
push
lds
mov
es
int
sbb
stos
out
push
lcall
inc
mov
pop
icebp
sahf
je
sbb
sti
cmp
arpl
clc
add
insl
or
adc
lods
pop
loope
inc
std
sahf
xchg
adc
push
lretw
xlat
outsl
jecxz
jb
xchg
xor
sbb
icebp
mov
xchg
cli
pop
int
push
or
ds
cmpsb
into
push
or
mov
jge
je
pushf
mov
testl
and
mov
arpl
notb
adc
add
sahf
mov
mov
mov
insb
push
add
sub
mov
mov
scas
xadd
mov
pop
test
pop
mov
lea
inc
cmp
adc
outsb
ja
js
shll
loop
sbb
jle
outsb
sti
inc
jo
cli
lds
mov
enter
rol
in
les
or
lahf
or
repz
adc
popa
repz
scas
dec
jg
bound
push
incb
mov
mov
scas
sbb
fdivl
hlt
xchg
pop
jbe
sti
adc
pop
mov
adc
movsb
sub
inc
xor
inc
dec
xchg
pop
sbb
sahf
pop
mov
in
jmp
mul
aas
je
in
popf
sti
scas
and
jge
std
iret
cmpsb
mov
adc
jno
pop
xchg
inc
lea
jne
jo
lcall
pop
mov
push
sub
pop
dec
push
inc
xchg
mov
push
mov
sar
mov
insb
mov
mov
jb
loope
cwtl
jecxz
cltd
pop
sbb
xor
add
subb
mov
ror
dec
test
clc
sbb
aas
cmp
cmp
jmp
flds
push
pop
std
imul
sbb
call
shlb
mov
gs
out
and
cld
push
cld
xchg
cmc
in
cmp
or
int
insl
mov
fbld
loop
add
les
xor
mov
push
mov
and
xor
into
ds
or
or
sbb
add
xchg
jg
add
pop
jnp
xchg
insb
inc
lret
sarb
jae
insb
xchg
mov
nop
xchg
lea
insb
out
cmp
rcrl
fldcw
lock
jnp
cld
or
popa
dec
jo
js
or
aas
cmp
mov
dec
push
inc
sub
inc
jmp
dec
insb
or
xor
sbb
jge
aas
jb
cwtl
divb
jp
cmp
sbb
push
add
mov
rclb
les
xor
jecxz
imul
xor
xchg
or
push
mov
mov
push
mov
cld
mov
mov
cld
aam
sub
jb
pop
mov
inc
pop
mov
jo
fistps
or
inc
fisubs
mov
aam
and
clc
dec
add
or
addb
cltd
jle
cltd
cmc
cli
push
in
je
sub
mov
xchg
not
test
cmp
cltd
sbb
shr
sub
sbb
stos
syscall
jle
mov
adc
push
and
xchg
sub
movsb
xor
scas
cmpsl
movsl
add
fdivr
insb
daa
das
or
sbb
mov
inc
and
inc
mov
sub
addr16
sub
mov
or
mov
add
cmpl
lds
jns
test
pushf
dec
push
mov
pusha
mov
repz
int
dec
enter
pop
inc
aas
lock
insb
dec
mov
sbb
cmpsl
xchg
inc
sub
cmp
xchg
sbb
adc
jb
iret
pop
int
clc
sub
mov
mov
aaa
aaa
dec
push
dec
in
ret
xchg
movsb
test
lods
mov
xor
in
jecxz
adc
mov
inc
xchg
stc
repz
cltd
mov
leave
aam
pop
loope
repnz
inc
repnz
or
test
mov
enter
sti
bound
xor
sbb
xchg
pop
mov
xor
arpl
leave
cmp
mov
or
cwtl
lods
dec
jnp
divb
jg
mov
dec
mov
dec
mov
cmp
or
xor
cmpsl
cltd
xchg
xchg
rcl
sub
cli
push
outsl
sub
loope
xor
inc
bound
xor
out
aad
adc
push
push
into
adc
pop
scas
xor
pop
push
inc
and
and
xchg
iret
enter
ss
fmull
jg
sub
dec
out
stos
mov
sub
shrb
and
int3
pop
outsl
pop
subl
loope
adc
fwait
cmp
pop
push
push
cmpsb
cld
dec
cmp
cmpsl
dec
ret
jmp
popf
lcall
scas
loope
sub
xchg
cmp
xlat
xchg
ret
loopne
sub
or
adc
xor
stos
popa
mov
ja
cmp
push
pusha
mov
out
in
or
sbb
xchg
push
out
cli
je
push
adc
add
fiadds
dec
js
nop
test
leave
imul
outsl
cmp
nop
xor
cmp
imul
pop
je
lods
rcl
jg
scas
movsb
stos
pop
xor
mov
mov
cmp
aad
inc
scas
add
ret
mov
sti
pop
inc
repnz
ja
jecxz
add
scas
push
mov
ficoml
pop
push
sub
ror
sbb
mov
and
call
dec
pop
out
lcall
sbb
xchg
pop
test
and
scas
xor
fidivrs
cmpl
outsw
test
mov
dec
cmp
mov
and
mov
mov
adc
pop
stos
lds
fcmovu
push
cmpsl
sub
and
scas
pop
mov
repnz
cmpl
xchg
aaa
mov
mov
or
jmp
push
sbb
push
inc
mov
push
aam
ja
cmp
sbb
lret
mov
fcompl
fwait
clc
mov
mov
mov
xor
dec
in
add
or
mov
xchg
enter
and
insb
and
movsb
pop
jbe
mov
add
pop
xchg
test
jl
sub
push
xor
stos
outsb
mov
push
push
ljmp
ss
repz
cmp
sbb
sbb
add
andb
lea
dec
rcrl
mov
pop
xorb
daa
sti
xchg
sub
not
pop
shlb
dec
imul
fidivl
xor
out
std
mov
int
faddl
push
mov
cmpsb
sbb
mov
cld
add
loop
movsl
outsb
xchg
pop
int
sbb
aaa
fwait
lcall
lcall
mov
and
or
pop
xor
imul
rcr
je
aaa
jnp
push
loope
sbb
pop
in
cmpsb
popf
push
mov
mov
das
repz
inc
push
cmpsb
test
sbb
ret
xchg
and
call
xor
cmc
inc
and
dec
or
lds
and
ret
push
mov
fs
mov
popf
xchg
imul
incl
pushf
dec
jmp
adc
arpl
inc
add
repz
pop
mov
shrl
leave
sub
and
adc
stos
dec
in
bound
ret
ret
int
out
jge
sbb
mov
adc
fs
jmp
icebp
adc
jmp
call
mov
mov
out
repz
mov
xor
push
imul
orb
jmp
xchg
aad
push
fists
stos
adc
cltd
push
iret
or
cmp
loop
rol
lea
ljmp
clc
mov
push
test
xlat
mov
scas
xchg
xor
sub
aad
stos
jbe
mov
or
mov
rol
out
pushf
sbb
xor
xor
sub
fsubrl
lcall
aaa
filds
das
push
sbb
or
pop
dec
cltd
pushf
sub
mov
leave
ret
and
out
add
shrb
mov
test
or
mov
arpl
mov
notl
out
pop
pop
out
out
mov
dec
or
sub
fcoms
shll
inc
sbb
testb
rorb
cltd
lcall
ret
ljmp
js
int3
push
push
push
nop
xor
cmpl
stos
inc
or
sahf
int
cli
testb
pop
lcall
in
add
loop
pop
inc
and
scas
mov
daa
pop
mov
push
inc
repz
push
or
sub
xor
inc
mov
jp
pop
enter
mov
fnstenv
rorb
pop
iret
adc
cmp
ret
adc
cmpsl
out
pop
add
std
dec
nop
xchg
loop
call
inc
mov
mov
testb
sub
push
mov
pop
gs
dec
fildl
ja
inc
pushf
push
mov
sbb
pusha
add
int3
pop
inc
jecxz
jecxz
push
test
cmp
mov
mov
push
and
jp
mov
in
pusha
test
xchg
dec
popa
adcl
mov
fstpl
sub
fdivl
mov
dec
adc
jb
ss
sub
test
adc
jecxz
xlat
insb
add
sbb
daa
add
pop
mov
data16
cmp
mov
test
into
mov
mov
and
dec
pop
jg
pop
jae
sbb
add
jmp
lods
and
in
mov
mov
scas
mov
sub
cltd
cmpb
push
aaa
inc
jl
call
mov
test
pop
pop
ja
jp
mov
mov
jle
add
add
pusha
mov
cmp
lret
shrl
push
mov
inc
mov
scas
xchg
or
mov
xor
orl
mov
adc
push
repz
pop
xor
push
xchg
cltd
fmull
cli
and
xchg
lcall
push
adc
test
sbb
jbe
out
out
xorl
aas
shl
sub
mov
inc
cmpsl
push
addb
ds
hlt
inc
adc
push
add
imul
in
daa
inc
adc
mov
push
inc
xchg
out
test
or
inc
mov
cbtw
arpl
mov
sub
or
xchg
imul
repz
fwait
push
in
leave
xchg
cmc
arpl
in
pop
xchg
add
add
add
jle
cmp
je
shrl
mov
pusha
inc
movsl
insl
cmp
pop
push
cmpsb
xor
das
cmovg
jp
or
stos
imul
jns
jae
test
jbe
lcall
inc
xlat
in
adc
jmp
lds
bound
xchg
addps
push
push
into
jg
adc
or
mov
or
sbbb
sbb
jle
push
jle
jb
lea
push
arpl
sbb
dec
jp
andl
add
lds
and
lock
jns
insb
lret
test
mov
mov
push
cmp
rorb
cmp
in
push
add
xchg
nop
xchg
mov
or
pop
mov
insb
inc
sub
push
xor
rcll
pusha
fcom
push
int
adc
sub
jg
mov
pushl
cmc
push
mov
mov
dec
call
jnp
inc
cld
jecxz
inc
or
loope
or
ds
cmp
jno
add
push
lods
mov
jne
por
xchg
call
and
xchg
into
fbld
or
pop
dec
les
mov
cmc
add
or
gs
or
lret
adcl
xor
cmp
push
or
jge
lods
sbb
add
cmp
aaa
cs
mov
loop
xlat
mov
cmp
cmp
jg
movsb
hlt
mov
cmc
mov
pushf
xchg
add
lcall
cmp
xor
cmp
pop
dec
icebp
xlat
pop
mov
and
and
xchg
rclb
fidivl
mov
and
inc
lods
inc
inc
xchg
sub
cmc
jp
int
sub
jno
mov
pop
dec
test
into
cmp
ficompl
cmpsl
enter
sub
mov
xor
lret
fisubl
mov
add
mov
inc
in
in
test
aam
enter
and
enter
sti
cmp
test
add
je
jecxz
dec
xchg
xchg
pusha
mov
fcmovu
mov
mov
and
stos
mov
cmp
sub
pop
mov
mov
cli
mov
or
mov
jmp
mov
and
out
insl
xlat
push
xor
cmp
jp
lds
fs
dec
ss
inc
push
fsubrs
mov
pusha
ficoms
xchg
pop
rcll
mov
stos
mov
jle
push
xor
cli
repnz
loop
xor
dec
addl
mov
test
das
lret
cltd
adc
rcr
icebp
inc
jecxz
add
movsb
sbb
inc
adc
mov
adc
enter
push
lret
jecxz
stos
clc
lds
cli
int
fwait
outsb
lock
xchg
xchg
adc
cmp
cli
cltd
push
cmp
insb
mov
in
ds
cmp
push
xchg
cmp
inc
and
adc
mov
aas
cmpsb
int3
adc
jp
sbb
sbb
mov
pop
sub
jp
jmp
jnp
xchg
xor
sarb
push
scas
gs
sub
mov
lahf
fwait
or
and
mov
push
std
mov
lret
leave
dec
mov
push
imul
ss
test
popf
fdivrs
or
xor
pause
cwtl
fwait
adc
adc
jge
ret
imul
push
pop
xor
shlb
xor
jne
pop
movsb
in
pop
cmp
mov
insb
movsl
push
or
les
in
add
sub
inc
es
fistpl
cmpsb
push
and
lods
jge
add
dec
xor
outsl
out
xchg
cwtl
add
sahf
inc
mov
popa
inc
sub
sbb
cmpsb
lds
jg
jmp
out
out
ret
imul
flds
adc
and
xor
out
xor
pop
pop
or
stos
or
adc
dec
and
lea
push
data16
out
pop
lods
xchg
pop
cmc
fisttps
push
test
fldcw
mov
icebp
jg
xor
icebp
loope
xchg
cmpsb
or
jno
jnp
mov
cmp
cwtl
rol
xor
xor
jno
lods
aaa
out
lods
andl
jbe
inc
cwtl
xor
out
or
bound
push
test
les
or
std
stos
in
and
cltd
push
imul
jmp
adc
add
sbb
or
stos
sbb
roll
cmpps
popf
gs
test
sbb
ss
call
mov
push
pop
and
mov
add
xchg
pop
in
dec
pushf
dec
aas
sub
lret
js
sarb
aam
aaa
aad
jae,pn
push
sbb
fdiv
mov
adc
out
fnstcw
lods
adc
pop
push
jmp
imul
sub
xchg
jne
jg
addl
jae
xchg
inc
sbb
jle
jle
sbb
aaa
iret
push
aad
dec
out
adc
dec
dec
push
mov
test
cwtl
sbb
icebp
es
mov
test
movsb
mov
sub
mov
mov
mov
or
sbb
std
imulb
popf
jo
cltd
idiv
pop
add
inc
sbb
cs
mov
jge
xor
rclb
sbb
sarl
test
divl
adc
dec
add
push
pop
add
xchg
adc
cli
sub
adc
out
and
nop
fistpll
mov
mov
or
sub
xchg
sub
jge
sti
xor
jne
negl
or
fildll
mov
dec
es
adc
cltd
enter
pop
shll
push
cmp
dec
jecxz
adc
mov
and
inc
inc
cld
and
int
data16
dec
insb
mov
jne
sbb
mov
andl
inc
scas
sub
mov
mov
sbb
fwait
xor
lock
ret
mov
cmp
dec
mulb
ret
cmp
add
lret
xchg
xchg
jecxz
adc
repnz
push
mov
sbb
mov
push
push
fnsave
test
icebp
jmp
es
cld
or
jp
in
xchg
push
pop
test
xchg
xchg
movsb
aad
dec
in
sbb
movb
dec
movsl
sbb
outsl
test
jmp
out
dec
cmc
aaa
gs
mull
loop
es
adcl
insb
xchg
aad
outsb
ret
jecxz
js,pt
xor
sub
xor
push
or
sahf
outsb
xor
or
xchg
cmp
cwtl
pop
adc
pop
pop
fs
fdivl
pushf
or
fisttpll
rcrb
repnz
out
add
jge
cmp
mov
gs
push
or
push
mov
cmpsl
mov
bound
fsubrp
shlb
inc
mov
xchg
and
movsl
repnz
inc
inc
mov
call
pop
sub
mov
orb
jg
pusha
mov
jbe
sti
pop
dec
mov
push
out
or
lods
mov
dec
or
pop
adc
mov
jg
sahf
xlat
mov
out
lods
pop
push
sbb
hlt
hlt
cmp
pusha
in
inc
aaa
js
loopne
dec
aaa
adc
aad
dec
mov
outsb
aas
lods
enter
sbb
daa
mov
mov
sub
in
icebp
out
int
and
mov
test
add
test
push
or
mov
mov
adc
imul
into
jge
or
hlt
nop
sub
xorb
cmp
adcb
int3
jb
movsb
xchg
inc
sub
xchg
sub
mov
push
sbb
fildl
sar
fimull
cmpsl
and
mov
fidivrs
push
js
pop
fsubs
pop
sarb
cmc
xor
mov
es
xchg
out
sub
xchg
dec
pop
mov
js
aaa
jns
mov
inc
lret
add
push
out
xorl
cmc
lock
dec
inc
inc
sub
xlat
sub
push
cltd
rol
or
inc
push
xchg
pop
mov
jnp
mov
insb
push
out
cmp
fsts
lock
and
or
icebp
je
jge
lcall
jae
movsb
scas
cmpsb
pop
sub
push
push
les
sub
pop
push
mov
sbb
cmpsl
mov
ret
push
mov
mov
bound
add
push
jp
loopne
lcall
add
sbb
mov
mov
std
jecxz
add
lods
pause
adc
cmp
in
or
or
adc
and
push
jmp
or
mov
pop
add
mov
popf
dec
into
cmp
push
imul
inc
inc
test
aaa
insl
jg
push
mov
inc
cli
arpl
cmp
lods
jmp
or
xchg
loope
mov
push
or
sbb
mov
lods
push
pop
daa
call
cmpsb
pop
and
ljmp
cmp
dec
iret
jge
push
add
into
les
mov
mov
inc
jle
mov
mov
add
aas
cmp
out
push
pop
adc
xor
sbb
in
insb
data16
dec
imul
std
fadds
mov
pusha
jge
dec
in
int3
adcl
sub
xchg
xor
ja
aaa
mov
mov
jp
addr16
mov
rolb
aas
push
jnp
lock
in
dec
scas
addl
imul
in
jae
daa
in
or
mov
gs
sub
pushf
sub
mov
mov
or
scas
aad
push
and
fsubl
scas
bound
in
xchg
enter
xchg
leave
dec
fcompl
in
in
adcb
arpl
xor
add
jne
pop
std
xchg
cltd
stos
icebp
das
or
cwtl
sub
inc
add
xlat
add
xor
jns
test
test
mov
xchg
insl
and
repnz
mov
imul
cmp
lods
and
xchg
pop
bound
jmp
xchg
sbb
adc
dec
lods
in
in
shl
mov
pop
push
jnp
mov
enter
ret
jge
xchg
iret
push
loop
iret
dec
jnp
mov
fldenv
mov
push
mov
jl
and
int3
decl
or
fsub
arpl
xchg
push
mov
loopne
xor
jmp
dec
lret
nop
push
pusha
jmp
enter
jns
or
loopne
mov
int
or
or
loope
fmul
nop
mov
popa
xchg
add
imul
jle
mov
jge
es
push
jle
pop
mov
pop
jle
scas
mov
xchg
dec
loop
push
mov
sbbl
push
shl
sbbb
jmp
fnstcw
dec
add
mov
xlat
cwtl
test
and
mov
push
mull
call
mov
add
clc
ljmp
mov
jge
arpl
jecxz
sub
cld
push
push
mov
pop
stc
aad
stos
cmc
sbb
pop
jne
sbb
push
adc
mov
cmp
mov
pop
lret
cmc
es
jp
sub
pop
in
mov
xchg
xor
pop
rolb
push
fidivrs
dec
cld
sbb
inc
clc
add
aad
scas
mov
or
fisubs
cmpsl
sbb
repz
lahf
test
cwtl
mov
xchg
mov
adc
addb
pusha
jmp
gs
popa
push
dec
inc
sbbb
inc
in
mov
cmp
fisttpll
dec
inc
fadd
push
stos
mov
jns
std
and
push
pop
xchg
mov
rcrb
cmpsl
movsl
stos
xchg
loopne
movsl
imulb
pop
loope
ret
seta
sub
xor
cs
sbb
insl
rcr
or
xchg
or
mov
add
pop
pop
out
jne
loop
popa
push
dec
cmp
vpinsrw
jp
lods
mov
dec
out
xor
mov
ret
sahf
jp
fnstenv
mov
push
dec
jnp
mulb
cmc
dec
jo
adc
jb
pop
pushf
add
xchg
movb
cmc
fsts
cltd
cmp
movsl
sbb
iret
cmp
adc
out
gs
mov
fcompl
sbb
inc
jecxz
xchg
popa
mov
out
pop
int
addr16
repnz
xorb
popa
xchg
popf
aam
mov
dec
and
lods
icebp
mov
adc
ret
and
adc
cmpsl
bound
scas
pop
call
pushf
mov
dec
mov
mov
jle
sahf
inc
pop
xchg
mov
scas
or
cmp
fmul
pop
and
fmuls
or
popf
popl
aam
jmp
clc
out
sub
cmp
test
out
int3
filds
testb
fildll
sub
fsubrs
sbb
in
sbb
pop
cld
push
dec
das
es
into
pop
mov
je
in
dec
enter
push
and
cmp
jg
cmp
xchg
lods
out
mov
shll
mov
bound
subb
sbb
jg
rcl
xlat
add
or
insb
jle
roll
in
push
xchg
xchg
push
jne
pop
movsl
jmp
mov
add
std
mov
add
std
stos
shrb
xchg
movl
in
sbb
xchg
pop
pushf
dec
popf
daa
arpl
xor
cmp
inc
push
pop
mov
mov
xor
push
mov
jmp
comiss
gs
ror
fwait
nop
out
xlat
ret
pop
and
loope
aas
call
popf
mov
ds
and
sub
jl
nop
stos
imul
les
jp
jns
push
mov
push
rclb
popa
rol
and
fdivrs
iret
xor
dec
push
dec
call
call
scas
mov
dec
cmp
cmp
cmp
add
jne
out
and
or
popa
mov
push
or
push
mov
jmp
nop
mov
fs
lahf
ja
fistps
sbb
xor
ret
push
add
iret
cmp
sub
jge
das
and
cmp
jg
scas
mov
dec
inc
cmp
std
jl
cmp
xchg
lods
outsb
cwtl
pop
or
mov
rcr
xlat
mov
cmp
rclb
inc
decl
cmp
ret
js
jbe
jecxz
jecxz
mov
fcmove
xchg
add
nop
and
test
test
insl
jmp
pop
mov
dec
out
aaa
lods
sbb
mov
jnp
and
jle
jle
adc
punpcklbw
sar
push
arpl
jb
push
test
lods
std
cs
pop
cmpsb
fwait
push
dec
push
ret
dec
fcomip
shlb
aaa
sub
push
icebp
push
pop
push
jge
mov
and
mov
cmp
mov
pop
cld
pop
lret
insl
jno
fdivrs
dec
inc
adc
mov
inc
push
stos
lods
mov
push
dec
jne
cmpsb
push
in
or
cltd
xchg
xlat
mov
imul
sahf
mov
pop
sbb
out
xchg
inc
and
mov
scas
int3
out
or
jge
push
dec
xchg
mov
mov
xchg
mov
push
fsubr
sub
mov
loope
push
mov
or
pusha
xchg
negl
xchg
les
int3
jno
test
loope
push
cwtl
daa
pop
and
andl
repz
dec
cwtl
cmpsl
jb
fsincos
pop
jo
mov
and
sarb
or
js
jge
mov
dec
cmpl
push
cmpsb
dec
cmp
mov
ret
xor
jo
pop
mov
xchg
shrb
rcrb
sub
jg
pop
mov
jmp
jno
movsb
lret
mov
inc
repnz
pop
into
insl
adc
cmc
sbb
repnz
or
adcl
push
xlat
inc
addr16
dec
pop
push
ret
dec
lods
xor
mov
xchg
repnz
adc
fstps
in
lret
cmp
loop
mov
cmp
cmpsb
xor
ja
ret
je
and
faddp
jae
pop
into
shlb
mov
xlat
fisttpll
out
pop
mov
lock
cmpsb
mov
test
out
int
lods
push
xchg
test
pop
inc
mov
je
pop
or
or
mov
inc
sbb
fnstenv
dec
insl
jae
ljmp
ss
cmpsl
mov
mov
mov
add
gs
sub
lods
pop
mov
outsb
cmp
pop
lret
hlt
mov
int3
sbb
idivb
inc
sbb
mov
jp
pop
and
cli
mov
adc
cmp
in
add
ljmp
popa
pop
insl
dec
mov
cmp
push
mov
fdivl
insb
xor
xor
test
scas
dec
jp
push
jle
repz
test
adc
aaa
fstl
jo
jnp
nop
pop
ret
sbb
or
cli
jae
mov
sub
mov
xor
ds
cmc
out
iret
adc
fadd
mov
mov
xor
jb
or
shlb
fistl
cmp
sbb
imul
mov
call
pop
mov
ret
testb
sub
fidivrl
lcall
jnp
lea
sub
or
int
push
inc
and
addr16
cli
mov
ret
fdivrl
push
sbb
lods
fisubrl
mov
push
mov
add
int3
popf
xor
xlat
repz
mov
call
cmpsb
inc
sub
jo
dec
inc
adc
mov
int
pusha
testl
in
pop
xchg
cmp
nop
dec
cmp
std
lds
inc
mov
sbb
and
data16
xchg
jge
mov
lea
sbb
cli
daa
dec
nop
pop
sub
mov
sub
adc
popa
xchg
cmpsl
dec
pop
xchg
pop
shlb
shll
jno,pt
out
ds
ret
add
lret
das
insl
adc
add
movsb
test
push
cltd
mov
xchg
cmp
add
imulb
dec
pop
mov
mov
push
inc
stc
or
cmp
inc
xor
jne
mov
adc
push
fdiv
adc
lock
lcall
adc
out
mul
pushf
sahf
cmc
push
ret
push
inc
add
out
cmpsl
sahf
push
stos
xchg
sub
pop
xor
sub
mov
rcll
sbb
and
xor
dec
xlat
xchg
idivb
imul
dec
movsb
stos
cwtl
pop
test
xchg
mov
pusha
and
in
inc
loop
xorl
pop
test
xchg
xorb
xchg
cmp
cli
adc
test
stos
sbb
sbb
fucomp
aaa
jb
in
mov
mov
mov
mov
popa
mov
repnz
adc
pusha
test
add
push
clc
imul
clc
or
pop
movsb
mov
call
xchg
jbe
jg
mov
xor
out
movsb
sbb
mov
sti
cmp
push
out
pop
lahf
cmpsb
or
xor
or
mov
add
pop
arpl
sub
imul
data16
int
aad
dec
adc
fisttpll
xor
or
test
jns
cmpb
xchg
xlat
dec
outsl
xor
mov
loop
clc
fdivrp
data16
aad
sbb
data16
lods
dec
dec
jo
ja
dec
fisubs
insb
adc
pop
fisttpl
ficompl
pop
mov
into
push
lret
fsts
ja
xchg
jns
mov
fdivrl
adc
jecxz
aam
pop
pushf
adcb
lock
push
sbb
and
and
xchg
mov
sbb
pop
cmp
loope
repz
push
adc
aam
outsl
test
push
shl
push
dec
pop
into
mov
cs
pop
fdivs
icebp
clc
push
leave
mov
push
out
rcr
sub
pop
and
shll
shrl
inc
repz
testl
leave
int
ret
leave
aad
dec
add
mul
lcall
dec
xchg
iret
xor
xor
or
das
mov
popf
push
stos
jb
push
sub
xchg
fadd
mov
lret
fnsave
cmp
fucomp
lcall
jns
jb
pop
outsl
test
cli
loop
repz
inc
sub
push
int
mov
adc
aaa
sahf
sbb
test
ret
mov
and
xor
fs
cmp
std
mov
mov
or
jns
inc
cwtl
xchg
adc
mov
jle
sbb
out
pop
test
adc
divl
push
cmp
sub
stos
push
dec
in
pop
jb
mov
adc
pop
dec
aas
fcoml
aam
xchg
arpl
lret
jl
push
rcrl
push
iret
inc
cld
inc
cwtl
push
mov
adc
lds
mov
mov
jl
mov
int3
xor
je
push
and
sub
aaa
idiv
ljmp
jns
cmp
data16
push
adc
ret
shrb
adc
mov
addr16
pusha
fidivs
dec
xor
lds
jns
jmp
repz
stos
sub
push
imul
pop
fisttpll
push
rorl
push
inc
cmp
mov
addr16
cmpsl
icebp
pop
xchg
sbb
jb
mov
bound
ret
mov
inc
scas
push
push
sbb
mov
lods
xor
sub
jmp
imul
pop
nop
or
xorb
arpl
lahf
aad
cmc
ret
add
dec
sbb
out
jmp
add
push
clc
pushf
and
add
xchg
dec
xchg
jo
add
jno
mov
mov
adc
into
jecxz
out
icebp
loop,pt
xchg
lods
xlat
or
fchs
cmc
inc
push
fnsave
add
mov
int
in
and
cltd
fdivrs
mov
and
es
popa
mov
dec
cmpsb
fwait
jne
outsl
push
in
ljmp
pop
test
jmp
adc
rorl
shr
xchg
jl
pop
dec
bound
movsb
jle
xchg
push
sbb
das
call
jnp
out
sbb
and
faddp
bound
mov
and
dec
xchg
push
scas
cld
sbbl
cmp
lret
nop
push
or
or
test
es
leave
mov
and
scas
iret
lds
mov
inc
outsb
clc
mov
fiaddl
mov
xchg
mov
pop
or
pushf
mov
sub
or
push
lods
idivl
pop
push
jle
mov
pop
das
sub
push
lods
test
dec
lods
in
add
push
aad
clc
insb
and
int
rolb
sahf
inc
lret
or
xchg
std
ror
imul
clc
fsts
jmp
pop
aaa
sbb
jmp
pushf
insb
mov
xor
mov
addr16
pop
lahf
push
jg
and
aam
push
stos
mov
outsl
jo
cwtl
fsubr
jg
mov
add
adc
aas
ds
clc
je
push
jl
call
ss
jge
notl
inc
mov
xor
cmpsl
pop
fwait
cli
jbe
ss
xchg
cltd
pop
sub
bnd
cmp
inc
repnz
mov
ret
jle
pop
mov
icebp
push
lcall
mov
or
mov
adcl
sub
mov
inc
jmp
scas
sub
sbb
rcll
pop
fbld
out
push
mov
lds
fsincos
mov
mov
pop
js
jae
fistl
repnz
xor
lret
pop
clc
out
sbb
mov
ja
iret
nop
subb
cmp
adc
push
or
jecxz
rorl
cmpsl
xchg
js
jl
adc
mov
in
and
sub
adc
cmpsb
sub
and
ljmp
repz
int
movsl
add
int
leave
push
jge
addb
fildll
inc
stc
sub
sub
leave
int3
fs
frstor
sarb
loopne
das
cmpsb
int
push
out
dec
mov
loopne
add
push
stc
ds
add
out
mov
dec
push
and
or
std
and
jge
pop
scas
dec
and
dec
out
into
push
ret
in
gs
ret
loopne
push
das
bound
ja
xor
lods
maskmovq
dec
bound
and
or
out
lods
lahf
rcr
push
test
cmp
mov
dec
insb
and
arpl
cmp
lods
mov
sbb
mov
test
ja
scas
lds
and
rcrl
repnz
addr16
and
int
andl
jp
mov
pop
jl
ficoms
lds
fildll
leave
enter
xchg
inc
lcall
test
or
mov
cli
jnp
imul
xchg
inc
cmp
sub
and
mov
xorb
adc
pop
test
hlt
sub
cmp
sub
fdivrs
stos
data16
or
adc
movsb
jno
cmpsl
jbe
or
sarb
cmp
divl
stc
xchg
and
xchg
mov
repz
push
jecxz
sbb
mov
call
and
mov
and
cld
sub
cmp
repnz
mov
imul
fldcw
sbb
inc
inc
and
xor
nop
mov
jne
lds
popf
adc
rorl
fdivrl
mov
aam
mov
insl
and
in
ja
mov
sbb
pop
mov
mov
or
js
pop
inc
sahf
cmpsb
sub
mov
jns
add
dec
xor
push
vsubsd
popa
pop
xchg
cmp
gs
lahf
dec
xor
inc
xchg
dec
adc
addr16
mov
mulb
call
outsl
pop
adc
fadd
mov
xchg
test
stos
pusha
xchg
adc
sub
mov
aad
and
out
sub
adc
arpl
testl
inc
cmpsl
xchg
lds
lea
in
enter
pop
and
push
lret
jae
jno
fdivs
cmp
pop
je
lods
fsub
add
add
das
and
lds
lock
icebp
sti
test
jmp
add
jae
lds
lods
mov
cs
xchg
fadd
negb
mov
inc
adc
and
repz
loope
jbe
inc
das
fwait
lea
stos
cmc
or
bound
call
movsb
adc
or
ljmp
add
mov
cmpsl
dec
or
push
mov
clc
cs
mov
mov
dec
stos
jns
jge
ss
nop
gs
fwait
mov
jne,pn
add
scas
roll
xor
icebp
pusha
jne
xor
dec
lods
int
stos
test
mov
ja
mov
push
sub
adc
mov
into
adc
ds
xlat
loope
mov
cmp
jl
jnp
test
je
and
cmc
xchg
xor
in
dec
into
adcl
stc
cmp
mov
popf
jns
repz
xor
inc
shlb
jbe
mov
sub
cmp
shrl
test
fwait
xor
in
pusha
mov
in
inc
hlt
iret
mov
dec
adc
lds
cmpsl
add
push
mov
jb
repz
inc
pop
lret
lret
ror
mov
inc
ffree
mov
dec
scas
iret
cltd
xor
or
loope
mov
scas
cmp
mov
xlat
leave
stc
add
push
imul
insl
jns
mov
insl
push
ret
sbb
loopne
push
lea
push
mov
cli
imul
int
xchg
mov
mov
mov
iret
sbb
or
mov
mov
pop
mov
es
jg
mov
mov
fisubs
loope,pn
and
adc
test
fs
xchg
inc
repz
mull
xchg
mov
sub
push
pop
inc
xchg
xchg
scas
stos
imul
iret
repnz
xor
mov
insl
les
mov
pop
xchg
test
fadds
or
dec
inc
cs
sbb
sbb
fmul
mov
add
arpl
pop
dec
mov
and
cmpsb
orb
repnz
cmp
inc
into
mov
ret
xlat
sarl
cmp
stc
xchg
mov
les
pop
ret
stc
push
push
jp
and
int
xchg
movsl
pop
cmp
jge
jp
test
int
adc
jge
popa
pcmpeqw
or
mov
call
pop
mov
fildll
ficoml
push
cmp
xchg
mov
in
and
jmp
sbb
cli
and
sbb
mov
adc
push
jecxz
in
icebp
in
dec
fists
pop
push
xchg
lea
in
pop
jle
cmp
cmpsb
jmp
push
push
pusha
fsubrl
add
insb
mov
inc
addr16
pop
xchg
lods
inc
adc
out
xor
and
aad
lret
idivb
lds
xchg
insl
jo
or
mov
push
daa
sbb
jmp
mov
jne
lret
aad
lea
outsl
enter
sub
cmpsl
jmp
pop
icebp
cmpsb
push
and
popf
mov
add
adc
frstor
lock
aas
addb
or
movsl
adc
nop
inc
mov
fstp
pop
mov
aam
jns
or
fdivs
inc
xor
jmp
movsb
cli
add
push
adc
retw
out
sbb
and
adc
or
mov
and
lret
mov
into
inc
or
and
sbb
popa
or
xor
mov
clc
mov
mov
pusha
or
enter
cli
pusha
or
push
rol
jle
cmpsl
push
lret
fisubs
push
cmpsb
sub
decl
cmpsb
rol
push
aam
push
ja
jno
aad
popa
xchg
aad
mov
loop
jo
xorb
mov
pop
dec
mov
push
daa
sub
dec
cmpsb
scas
movsl
fs
xchg
sub
mov
and
cld
xchg
jp
lds
dec
sub
dec
and
ja
enter
je
push
pop
scas
inc
jle
leave
inc
les
pop
add
call
dec
je
mov
xchg
sub
and
sbb
lods
cltd
adc
leave
inc
cmpl
inc
add
xlat
imul
cltd
testb
addb
push
jl
adc
mov
dec
add
testl
mov
mov
in
shlb
jge
mov
jle
xlat
sbbb
mov
jno
mov
divps
lock
scas
add
xlat
xlat
dec
out
mov
int3
shl
sti
in
bound
pop
addr16
repz
and
add
call
subb
jb
pop
in
mov
cmp
stos
cmpsl
stos
push
nop
lds
cmp
cld
lret
out
lods
es
mov
inc
outsb
popa
mov
sub
mov
cwtl
mov
mov
mov
cmp
or
lret
sarl
mov
jge
dec
fwait
dec
and
clc
shrl
shll
xor
addl
push
lret
jmp
cltd
popa
sub
sub
int3
xchg
mov
sub
pop
mov
xchg
sbb
rorb
lods
mov
jns
sub
loop
jp
xor
cmp
or
mov
mov
xor
testb
mov
pusha
jnp
sahf
ffreep
push
pop
cwtl
mov
cli
sub
insl
jb
sbb
mov
std
loope
in
imul
in
cld
dec
les
mull
or
fmull
aam
or
xchg
popa
mov
js
inc
cltd
ds
add
cmp
into
fmuls
add
mov
xor
dec
test
add
filds
xor
into
out
movsl
fisubrs
sub
push
add
shl
pop
cmp
loope
in
rolb
mov
add
push
push
insb
inc
pop
sti
xchg
test
dec
das
cmp
push
add
nop
es
rcll
or
pop
cld
repz
lcall
cli
and
jle
cmpsb
push
outsl
outsb
pop
sub
sub
aam
pop
dec
subb
aaa
es
cltd
daa
xchg
mov
sbb
mov
mov
mov
clc
in
or
adcb
outsl
xor
push
cmp
mov
cmp
cwtl
mov
rcl
jbe
movsb
mov
cmp
sbb
sbb
lcall
jp
in
jnp
xor
adc
out
mov
cld
mov
lahf
stc
imul
loop
ds
xchg
xor
in
mov
jb
cmp
mov
outsl
ja
adc
std
aaa
addl
or
cmp
inc
imul
sti
arpl
mov
or
adc
adc
pop
lock
imul
int
test
adc
aas
inc
out
pop
push
dec
fsubrs
add
lea
cmp
push
andl
fdivrs
push
sbb
ss
cmp
cwtl
inc
xchg
jb
mov
repnz
shll
scas
adc
in
lods
adc
outsb
add
loopne
sti
jae
pop
inc
sbb
inc
stos
ljmp
push
or
lahf
xchg
aas
loop
sbbb
cmpsl
mov
sbb
scas
mov
scas
sbb
pushf
cmpsb
filds
add
lods
cld
add
iret
lea
dec
aam
adc
repz
push
add
push
data16
mov
rcrb
cs
mov
sub
adc
sub
cmpsl
jl
insl
clc
stc
popa
sub
xchg
add
fdiv
lds
add
daa
lret
pop
inc
inc
lea
jmp
mov
or
fsubrs
jle
cltd
clc
push
popf
mov
leave
sub
and
fsubrs
pop
ljmp
inc
aas
inc
sahf
mov
push
push
fptan
fs
aad
mov
scas
mov
pop
jmp
cmp
mov
xchg
je
in
pop
pushf
or
dec
pop
shl
pop
int3
and
mov
mov
mov
icebp
and
mov
rcl
mov
data16
mov
in
int3
ret
push
push
push
jo
mov
repz
stc
mov
pop
xlat
ficomps
subb
test
sub
fsubrp
movsb
push
pop
aad
add
das
out
js
sbb
sbb
addl
andl
cmpsl
js
pop
mov
add
rol
sbb
pop
or
sahf
dec
pop
inc
cmp
mov
stos
xchg
mov
cmc
cmp
ja
lahf
imul
leave
jp
hlt
addr16
push
push
aas
push
cmp
mov
divb
mov
jecxz
xchg
test
imul
inc
xchg
push
repz
mov
in
int3
xchg
push
mov
or
in
into
jp
inc
push
mov
mov
or
cmp
pop
mov
push
cmc
xor
stos
push
cmp
xchg
in
outsl
jne
aas
hlt
push
stos
cmpsb
jl
fsts
cli
adc
mov
mov
rcll
lret
mov
pop
mov
pop
arpl
mov
inc
mov
incb
inc
or
repnz
mov
adc
pop
scas
cld
idiv
popl
inc
sub
adc
add
xlat
adc
xor
ds
adc
or
test
mov
les
outsb
pop
xor
jb,pn
push
xor
stos
dec
cwtl
in
cmp
jmp
add
xor
movsb
jno
dec
gs
int3
xchg
pop
push
adc
outsl
dec
adc
mov
push
cmp
lods
pop
push
add
pop
push
cmp
jmp
lret
xchg
insl
das
push
mov
sbb
lcall
cmp
sub
add
in
ss
mov
and
fildll
ss
and
mov
into
lock
sub
lret
insl
das
clc
xor
aam
xor
out
mov
dec
sub
loope
add
jno
inc
loopne
fcoml
repz
add
repz
pop
and
mov
iret
arpl
fsubrs
pop
push
imul
adc
xor
inc
sub
xchg
fidivs
pusha
dec
fdivp
sub
ja
hlt
and
decb
ja
fstpt
aam
aad
inc
outsl
test
mov
or
mov
sub
clc
icebp
ficomps
inc
xor
or
jb,pn
push
cmc
pop
xor
mov
xchg
sbb
sub
bound
fwait
in
fldt
je
push
outsb
xchg
in
sbb
sbb
mov
out
leave
ficoml
iret
fbstp
mov
or
lahf
into
inc
out
shlb
int
mov
mov
inc
adcl
int3
xchg
bnd
sbb
cs
and
imul
push
mov
lds
adc
mov
or
mov
push
cmp
std
mov
repz
clc
enter
lods
imul
xor
std
leave
das
push
movsb
mov
add
fdivp
pop
mov
mov
pop
aaa
sbb
mov
jmp
popa
push
mov
mov
aaa
adc
lret
pop
adc
dec
insb
outsl
repnz
les
lret
je
push
outsb
jmp
jg
in
or
jne
cmp
add
mov
in
jmp
ja
add
pop
movsb
sbbl
mov
ja
pushf
lret
dec
in
idivb
mov
cmp
cwtl
pop
inc
cmp
jne
iret
or
pop
outsb
arpl
xchg
pushf
cli
jp
pop
repz
sub
lcall
les
cmp
xor
cmp
sbb
jae
les
bound
inc
adc
insl
test
fnstsw
push
test
pop
cmpsb
or
idivl
push
dec
add
and
movsb
js
int3
cld
sub
ret
sbb
mov
inc
ja
ror
jbe
mov
mov
jb
sub
sbb
bound
cmpsb
aam
xchg
fsub
bound
and
popf
xlat
ds
or
and
cltd
repnz
loopne
out
mov
mov
repnz
in
dec
adc
adc
movsb
push
lea
outsb
mov
cwtl
in
mov
insl
jp
inc
aas
es
enter
lret
int
movsl
adc
aad
imul
je
outsl
xor
out
add
pop
aas
sbb
xchg
dec
int3
lahf
call
aad
jb
lods
mov
das
push
in
mov
add
pop
lret
sbb
or
cmpsl
bound
enter
lock
xchg
incl
xlat
lods
loop
sub
scas
xchg
ja
sarb
xchg
inc
fcmovne
arpl
mov
xchg
mov
fisttpll
adcb
mov
movsb
in
aaa
cmp
in
scas
xchg
ljmp
shrb
push
dec
out
lea
and
fsubs
or
loop
call
mov
arpl
mov
sbb
or
mov
mov
mov
xchg
fsubs
mov
sub
mov
push
sub
movsb
arpl
cs
sarb
and
icebp
cmp
int
pop
arpl
lock
or
jl
push
inc
ret
pop
sub
cmp
inc
cmpsb
and
call
cltd
ss
lock
or
push
jecxz
aaa
out
icebp
cmc
mov
out
add
dec
push
and
cmp
les
sub
and
bound
in
test
xchg
xor
mov
sbbb
sti
rcrl
and
sbb
mov
out
dec
negb
pop
push
lret
clc
mov
xchg
mov
jno
gs
aas
sub
mov
sub
js
and
inc
xchg
jmp
int
ficompl
sbb
aas
leave
jg
lods
jle
int
or
fs
das
sbb
mov
cmp
sbb
pop
cld
xor
cmpsl
ja
sti
dec
and
cmp
lea
test
in
cmp
je
jp
mov
loope
icebp
xchg
sti
gs
and
int3
add
mov
or
popf
jbe
fdivl
fnstcw
inc
cs
setae
jmp
sarb
cmp
mull
sub
inc
dec
or
lods
mov
xchg
jae
add
push
mov
imul
scas
jno
in
push
lahf
mov
nop
fs
loopne
and
add
movb
or
jo
push
mov
arpl
outsl
enter
fsubp
stos
and
adc
addr16
hlt
movsb
fldenv
push
cmp
ljmp
in
jge
insl
rcrl
call
mov
es
fdivs
pop
or
adc
mov
faddl
lock
imul
xchg
sub
cmp
adc
out
ret
inc
jnp
adc
dec
sbb
mov
jg
sti
in
nop
lret
pop
ja
in
loop
stc
adc
aad
push
xor
ficomps
sbb
sbb
test
sarb
xor
push
inc
jl
jnp
arpl
out
pop
imul
inc
lret
mov
loop
push
dec
xor
fprem
xor
sarl
int3
add
xchg
fildll
xchg
pushf
xchg
xor
divl
jecxz
xor
pop
add
fcom
loopne
add
mov
push
pop
lock
call
lahf
pop
jmp
push
gs
mov
out
inc
push
xlat
jbe
lcall
sub
push
in
mov
mov
dec
addl
cmp
rolb
outsl
mov
push
adc
sub
pop
pop
lret
inc
xor
scas
fcmovnbe
dec
rorb
cmpb
sub
cmp
jp
or
pusha
ret
ret
int3
inc
pop
inc
jo
loope
and
mov
in
jmp
xchg
cmpsl
jnp
in
sar
sub
dec
xchg
pop
lea
dec
hlt
mov
cmp
jmp
mov
bound
iret
je
or
imul
mov
movsl
pop
iret
cmc
mov
inc
arpl
push
rolb
mov
mov
add
data16
xchg
xchg
xor
push
mov
stc
mov
mov
mov
push
in
and
push
inc
mov
dec
dec
mov
nop
mov
and
je
movsl
pop
rcr
mov
adc
adc
loopne
jo
dec
mov
or
stos
and
jmp
js
and
sbb
add
ret
dec
ss
sub
aad
and
outsb
mov
or
push
sub
das
mov
pop
push
call
std
roll
push
mov
lods
nop
xchg
cmp
test
mov
inc
push
es
xor
lcall
mov
lds
xor
pop
and
mov
leave
mov
xlat
inc
adc
mov
out
sarl
aaa
shll
call
dec
cmp
outsb
out
aad
es
cmp
dec
mov
mov
mov
pop
arpl
lds
adc
popf
mov
inc
pop
test
cmp
loop
mov
dec
xchg
shr
je
in
xchg
out
xchg
add
mov
cwtl
fistpll
lret
stos
inc
inc
mov
fisttps
out
test
cs
in
or
mov
inc
or
dec
fidivs
stc
add
adc
cmp
rcl
cltd
jnp
mov
pop
add
popa
fmul
add
pushf
cmp
add
adc
mov
mov
fistpl
pop
or
jne
jae
ljmp
loopne
scas
cmp
int3
dec
pop
out
adc
xlat
mov
mov
cmc
jmp
in
ficoms
dec
inc
sub
jns
sbb
mov
jne
xchg
jbe
adc
sahf
adc
add
aad
dec
shll
scas
adc
jle
xor
jp
mov
cwtl
je
mov
pop
stos
decl
jae
pop
je
pop
mov
jnp
std
lock
cmc
xchg
or
inc
in
cmp
cmp
and
in
mov
pop
lahf
rolb
pop
mov
pop
mov
in
or
shr
dec
push
add
pop
push
and
into
adc
inc
insl
js
pop
xorl
loope
mov
in
in
xor
rcrb
daa
jne
lods
or
lea
pop
std
out
ficoml
pop
mov
jne
subl
subb
push
cmc
xchg
inc
dec
and
pusha
aas
cltd
mov
and
out
popa
dec
out
popa
pop
fwait
push
fucomip
scas
fimuls
idivb
repz
out
ja
adc
adc
mov
mov
int
cmp
mov
pop
test
stc
and
outsb
daa
inc
cmpsb
fdivl
js
sub
aad
repz
and
jmp
xchg
movsb
pop
push
mov
or
sub
test
cli
and
pop
ret
je
lahf
xchg
cltd
aaa
sbb
es
mov
jno
out
push
mov
cmpsb
bound
mov
loope
test
add
mov
and
bound
push
lods
test
stos
test
lods
adc
sti
push
fdivl
mov
adc
ret
arpl
mov
cmpl
cmp
inc
addl
subl
fcmovbe
inc
xchg
sub
or
inc
int3
push
inc
stos
stos
repz
mov
xor
pop
push
cltd
push
push
dec
pop
ljmp
iret
push
cmp
xchg
ror
dec
outsb
pusha
and
popa
jge
cmp
mov
lock
cwtl
sub
sbb
sbb
fbstp
out
ljmp
pop
mov
jl
add
jbe
ret
lret
loop
mov
mull
add
imul
mov
or
int
int3
or
fiaddl
fstpt
sbb
in
jno
lahf
cmp
add
and
push
lods
lock
test
imul
mov
sbb
call
aam
cmc
push
daa
jg
sub
adc
sub
push
or
jle
jns
mov
ljmp
pop
dec
xchg
addr16
fstl
pop
mov
inc
mov
or
xor
inc
pop
sub
xchg
cld
movsb
stos
add
rcll
mov
cmp
cwtl
dec
sbb
js
lock
gs
xchg
jmp
adc
aas
mulb
lods
outsl
mov
xchg
and
movsl
dec
in
and
hlt
cmp
lock
lds
scas
mov
fcmovne
pop
into
pop
sub
mov
dec
jo
outsb
push
enter
add
out
push
aaa
jge
xchg
mov
adc
leave
or
dec
push
fdivs
int
sub
jge
adc
sahf
adc
pushf
adc
inc
push
out
leave
movsl
dec
shlb
cmp
sahf
mov
aaa
xor
in
scas
jg
inc
add
dec
mov
mov
jnp
vhaddps
and
and
ficoms
jl
jns
xchg
out
sbb
dec
lcall
pushf
cmp
aam
hlt
cld
in
sub
mov
adc
pop
mov
adc
inc
or
dec
cld
jp
rorb
jmp
dec
dec
adc
insl
cmpsl
and
xchg
jo
pop
out
adc
mov
lret
mov
inc
insl
sub
fstpl
shll
ljmp
adc
mov
adc
xor
xchg
mov
rclb
mov
ss
adc
jle
addr16
and
xchg
or
in
hlt
test
inc
dec
ret
xchg
jnp
mov
fsubrs
mov
in
nop
js
notl
xor
cmpsl
outsl
pop
and
loopne
lods
and
in
lret
or
and
mov
in
ljmp
fstpl
and
fyl2xp1
mov
test
push
lods
dec
and
mov
into
and
mov
das
inc
scas
jno
dec
and
lret
dec
inc
push
rorb
push
cwtl
and
outsl
add
inc
mov
jmp
xlat
movsl
ja
lret
or
pop
sub
imul
lcall
push
data16
mov
ret
outsl
loope
dec
or
push
pop
movsb
xchg
lds
mov
sbb
psubusb
xor
pop
scas
and
cltd
cmp
lahf
add
mov
inc
out
les
mov
ret
xor
jne
sahf
mull
aam
mov
aaa
mov
and
xor
fistl
movsl
into
mov
adc
repz
scas
push
sbbb
push
loopne
cmp
jle
lret
cs
push
or
enter
cmpsl
cltd
inc
lock
mov
js
ja
addb
push
pop
ret
lods
cmpsb
jnp
ficoms
mov
mov
popa
or
fsubs
xor
rorb
xchg
bound
call
popa
ret
sbb
dec
adc
sahf
xchg
sbb
sub
sub
in
sahf
fcomps
aas
and
cmp
repnz
clc
xor
pop
addr16
leave
repnz
seto
cwtl
dec
mov
movsb
ds
outsl
xor
std
sbb
mov
mov
sahf
push
test
or
sbb
outsl
scas
inc
call
mov
ljmp
js
jae
outsl
int3
in
lods
sarl
orl
loop
leave
lock
fwait
mov
roll
lahf
xlat
fsubl
xchg
mov
imul
xchg
fsubp
shr
mov
fldl
xchg
mov
out
lahf
rcl
int3
cmpsb
das
insb
xchg
enter
sub
pop
fiadds
and
fdivrs
aaa
sub
inc
ret
add
push
fwait
mov
clc
or
adc
sbb
xor
xor
dec
addr16
pop
jl
movsb
es
arpl
pop
dec
and
sub
adc
mov
arpl
jle
mov
insl
mov
pop
iret
inc
dec
out
repz
add
hlt
lcall
popf
mov
cld
inc
imul
push
fucom
dec
mov
push
das
xor
call
lahf
in
xor
push
mov
mov
dec
cmp
sub
movsb
xor
dec
pushf
out
bound
aam
popf
mov
mov
jae
packssdw
mov
mov
adc
and
cmp
pop
or
popa
dec
add
call
scas
fiaddl
cld
aaa
xchg
mov
xchg
icebp
push
adc
rcrb
rclb
jnp
cmp
xlat
xor
cmpsl
xor
pusha
jnp
test
ja
lds
cmp
cli
dec
scas
scas
insl
repz
mov
lea
scas
into
adc
hlt
shlb
mov
rorl
jl
jno
mov
fsub
lds
dec
and
das
outsb
lret
lods
jb
insb
aas
sbbl
adc
push
cli
jl
xchg
test
jmp
mov
fucomi
je
mov
aad
call
cmp
cmp
fisubrs
fs
jmp
mov
push
jae
push
sbb
imul
outsb
imul
mov
add
lock
mov
push
lods
cmp
andb
xchg
push
push
outsl
mov
test
mov
cli
clc
icebp
add
nop
mov
jecxz
or
push
pop
scas
pop
call
pop
shl
push
xor
int
les
mov
sub
shll
shll
rol
push
jmp
xor
mov
sahf
insl
and
fimuls
sarb
pop
nop
sbb
nop
push
mov
call
into
mov
mov
es
hlt
movzwl
mov
push
repz
inc
loope
fcompl
pushf
in
jmp
stc
xor
push
leave
cmp
insb
jbe
subb
cs
imul
mov
or
dec
loopne
sub
cmpsl
cmpsl
push
sub
je
xchg
pop
sti
jl
scas
inc
add
sub
mov
xor
pop
add
mov
aam
mov
jl
arpl
inc
push
in
push
jb
jae
mov
lds
jo
or
inc
pop
or
arpl
aas
inc
xchg
lret
bound
and
imul
ljmp
cmpl
je
inc
je
sub
add
mov
adc
push
leave
push
push
add
shr
ffreep
cmp
dec
jle
cmp
jmp
cmp
out
mov
jns
cmp
dec
add
adcb
je
test
int3
mov
push
pop
dec
xchg
scas
xchg
xchg
imul
inc
jmp
lret
int
add
shl
xor
into
loopne
leave
scas
testb
stos
stc
push
mov
cmpsb
fistps
push
sbb
js
xchg
cli
mov
jbe
push
dec
mov
ret
data16
out
jbe
pop
jp
sbb
out
mov
cmp
imul
jge
sub
push
push
cli
dec
pop
int
lods
jo
cmp
bound
xchg
sub
sub
hlt
int3
enter
test
push
lea
xor
cli
or
aaa
outsb
xlat
or
dec
je
cmp
dec
fs
pop
and
jle
pusha
and
sarb
mov
data16
sbb
sbb
dec
into
lret
ficomps
add
adc
xchg
es
outsl
das
and
inc
loop
or
std
hlt
mov
xor
mov
or
xor
jl
stos
shll
inc
sub
loope
sub
rcr
xlat
sahf
pslld
xor
out
dec
hlt
inc
fmul
xlat
push
push
add
adc
xchg
cld
dec
or
mov
out
aas
push
test
stc
mov
scas
repnz
aaa
ret
stos
aad
xor
scas
imul
pop
in
or
xlat
div
sbb
lds
pop
pusha
nop
dec
jns
jmp
cmp
lret
addl
sbb
and
mov
gs
addr16
push
movsl
clc
sbb
imul
sbb
fimull
into
mov
xchg
outsl
dec
push
out
insl
out
jbe
adc
nop
movsl
push
cmp
pop
jecxz
add
ret
popa
mov
es
call
dec
fisubs
pop
sub
fisttps
pushf
pop
pushf
hlt
fnsave
mov
negl
cmp
mov
bound
pop
lcall
repnz
mov
sub
cli
cld
or
jb
push
leave
lret
pusha
mov
mov
add
fcomps
loop
lret
pop
fimuls
jno
push
mov
imul
sahf
jecxz
andb
dec
cmp
iret
mov
lods
dec
pop
adc
fs
jo
lds
out
cwtl
aam
aam
adc
inc
shlb
outsb
push
jle
sub
push
sbb
adc
loop
lea
pop
enter
adc
pop
push
subl
mov
nop
mov
xor
inc
bswap
jle
out
xlat
dec
add
jp
add
out
cmp
fdivl
testl
adc
shlb
inc
push
movsb
addr16
xchg
add
dec
insl
add
sbb
sub
orl
call
gs
lcall
push
sbb
push
mov
pmulhuw
sbb
lret
jbe
or
in
stos
lret
subl
gs
dec
imul
clc
jp
sub
insb
push
popf
jle
loopne
sub
mov
dec
aad
into
aas
mov
sub
sbb
fidivrs
aad
movsb
jmp
push
push
and
xor
and
sub
jmp
es
and
sub
loop
popf
push
push
mov
cmp
pop
out
lods
sub
cmp
cmpsl
and
or
jb
and
push
mov
mov
test
mov
nop
push
fsubrs
fs
ljmp
dec
add
or
dec
or
pop
add
push
fldcw
jp
lods
mov
leave
fnstcw
mov
shl
lock
std
aaa
negl
js
jge
fmul
pop
cltd
dec
sub
out
or
add
ret
and
jmp
pop
and
inc
pop
das
ljmp
ja
push
mov
push
sub
ja
and
pop
repz
mov
std
sbb
cmc
adc
or
push
gs
rorl
dec
add
mov
add
rcr
lcall
int
adc
out
inc
gs
push
push
test
xchg
les
stos
pop
pusha
xchg
insb
addr16
jne
jne
push
add
ret
dec
stc
pop
rcrl
testb
inc
pusha
or
mov
stos
push
sti
xchg
jge
cmc
insl
shlb
add
repnz
cmp
cld
cmp
jecxz
push
sub
in
mov
sub
enter
outsb
mov
nop
dec
jns
mov
shrb
jno
lret
dec
dec
repz
sbb
aam
jne
sub
and
cmp
in
xor
std
dec
inc
int3
jge
sbb
push
inc
and
cltd
dec
jle
stc
or
pop
push
xchg
inc
in
popf
push
pop
mov
mov
sub
cmp
out
xor
into
push
pop
ret
jp
or
xor
push
test
mov
mov
sub
push
add
jg
ss
pop
jp
xor
shr
xor
js
jnp
xor
loope
aad
fistpll
adc
subb
dec
sarb
mov
aas
xor
add
jno
mov
pop
inc
mov
and
push
lds
rol
data16
mov
movsl
pusha
push
dec
repnz
add
push
cmp
xor
xchg
and
out
loopne
insl
repz
pop
call
imul
push
testl
inc
shrb
stc
sub
mov
xlat
out
ljmp
jno
loop
loopne
pushf
mov
push
xchg
rolb
shl
cld
enter
add
push
and
mov
fnsave
mov
mov
sub
sbb
insb
push
cmpsb
or
rol
dec
jg
in
imul
adc
in
rol
pop
shl
adc
fildll
inc
inc
xchg
xor
out
out
fdivrl
xor
or
mov
cmp
hlt
fldt
xchg
jns
outsb
xorl
push
adc
mov
sarb
mov
fldl
lods
adc
sahf
daa
push
insb
pop
add
outsl
jecxz,pn
dec
mov
out
enter
lea
outsb
lcall
mov
imul
enter
inc
repnz
loopne
test
mov
scas
inc
jle
sahf
aas
inc
push
jne
xchg
fsubl
fmull
popf
sub
imul
roll
xchg
lds
add
adc
hlt
mov
out
or
jmp
mov
mov
xor
lods
and
mov
cltd
mov
mov
xchg
sbb
mov
mov
into
adc
jns
sarl
mov
movsb
jnp
inc
sti
xchg
xor
adc
or
daa
lods
push
call
cmp
dec
and
jns
cmp
adc
xchg
fs
mov
jne
loope
cmp
inc
stos
sub
popf
outsl
sbb
push
jae
repz
mov
and
xchg
aaa
addr16
pop
sbb
sub
pop
sahf
subl
insb
test
pop
nop
xor
rolb
sub
lcall
jne
int
mov
sub
jo
ror
pusha
sub
out
mov
xchg
in
sti
cli
mov
push
mov
into
xor
or
popa
shr
xchg
sub
int
cmpsb
adc
xchg
or
arpl
jge
cld
insl
xchg
stos
add
dec
lock
scas
addb
xor
mov
jnp
jle
cmp
jo
xchg
xchg
jp
xchg
in
lock
icebp
xor
xchg
dec
dec
mov
inc
cmp
mov
movsb
cmp
faddl
xchg
mov
rcr
dec
cmp
loopne
cmpsl
jne
xor
inc
adc
or
mov
sub
pop
fwait
bnd
inc
sub
xorl
in
sub
out
fidivrs
sub
pop
cmc
mov
mov
fs
pop
mov
jp
sub
fmuls
and
pop
and
sbb
and
pop
sti
in
push
out
jp
in
push
iret
pushl
rol
iret
call
jnp
adc
cmpsb
push
xchg
mov
jmp
inc
mov
rcl
imul
mov
and
leave
and
push
jne
loop
inc
add
push
jle
ss
inc
stc
add
or
and
cmp
ret
leave
dec
sbb
enter
mov
cmp
sbb
pop
pop
push
mov
add
jae
sub
dec
ss
inc
pop
cltd
enter
jb
xchg
pop
rol
or
pop
fnstsw
out
dec
aaa
fnstsw
xor
insb
inc
pop
cmc
mov
pop
lahf
jp
mov
mul
aam
or
jle
out
rolb
cld
incb
stc
or
lods
aas
iret
notl
addr16
inc
lock
mov
mov
mov
pop
movsl
aaa
adc
insb
xchg
aam
mov
mov
sbb
mov
xchg
loop
add
into
or
fwait
ljmp
dec
mov
xchg
cli
sub
add
sbb
sbb
mov
push
adc
push
out
mov
or
in
rolb
in
pop
cmp
sbb
lods
scas
pop
push
or
mov
das
cld
ds
lcall
push
stc
fucomip
movb
fisttpll
dec
aam
cmp
mov
test
mov
addr16
loope
xor
sarb
in
add
mov
fs
push
dec
inc
jmp
jb
jno
mov
adc
je
fnstenv
xchg
xor
jle
dec
xlat
fcoml
jae
lods
adc
push
aaa
mov
clc
push
aam
movsb
jg
pop
and
push
push
sub
ljmp
ret
cli
jo
hlt
add
lret
pop
pop
subb
js
lahf
imul
mov
pop
je
icebp
dec
jle
test
into
js
test
lret
scas
lret
jle
cmp
xor
leave
sub
cwtl
sbb
daa
push
cmp
push
insb
jnp
pushf
fwait
sbb
mov
in
adc
jbe
sbb
inc
jb
add
popl
jge
mov
cltd
xchg
inc
jae
sub
popf
sbb
push
xchg
jne
inc
test
add
jo
push
test
dec
repz
outsl
clc
lcall
mov
dec
out
aad
iret
aaa
gs
mov
fwait
cli
ja
inc
pop
into
xor
addr16
pop
sbb
in
mov
inc
clc
mov
jbe
jmp
scas
adc
dec
mov
fldl
aas
dec
add
mov
sbb
lahf
mov
xlat
inc
push
jo
ret
jmp
lock
xor
fnsave
xchg
xor
mov
xorb
or
dec
mov
sub
rcrb
cmc
push
mov
pop
movsl
jl
es
jns
in
push
test
out
mov
rolb
loopne
dec
pop
repz
mov
or
in
or
and
out
ds
xorl
cmp
push
ja
hlt
ss
insl
mov
mov
lods
sub
das
out
sar
iret
mov
cli
inc
cmpsb
testb
jle
or
gs
push
fs
jle
push
sahf
pop
cmpsl
xor
mov
mov
push
das
pop
outsl
jnp
mov
mov
andl
out
add
mov
mov
jo
jno
cs
loope
inc
ljmp
out
inc
inc
loop
mov
movsl
mov
test
ljmp
cwtl
and
pusha
imul
sub
out
xchg
pop
or
jne
jp
arpl
into
inc
fdivr
jmp
popf
ret
mov
ret
or
call
enter
sub
xor
mov
int
decl
cs
add
mov
sub
cmpsl
cmpsb
xchg
dec
dec
and
in
cwtl
mov
hlt
or
addr16
insl
shl
adc
mov
jb
fwait
scas
scas
add
sbb
imul
mov
pop
add
xor
lret
imul
push
mov
lcall
or
ret
ljmp
sbb
mov
jmp
pop
jg
xor
xchg
dec
dec
daa
mov
or
pop
push
jecxz
xchg
sahf
rcll
data16
mov
adc
aaa
shl
mov
sub
or
lcall
scas
repz
nop
cmp
jbe
mov
fidivs
lods
mov
inc
push
jecxz
repnz
jns
lret
sub
test
lock
or
insl
pop
out
jbe
imul
stc
enter
cmc
sbb
aaa
add
push
push
adcl
pop
out
popf
icebp
xchg
dec
test
push
jl
aam
inc
ret
add
pop
rcrb
lods
idiv
aam
mov
aas
mov
in
in
pop
pop
popa
xchg
add
ret
loop
dec
adc
jg
jp
cmp
cli
fdivl
in
mov
mov
int
inc
pushf
sub
pop
mov
adc
lret
mov
iret
dec
loop
fidivs
push
push
subl
and
push
adc
cmp
and
jo
out
mov
adc
insl
ss
cmpl
mov
mov
adc
push
shlb
arpl
xchg
mov
add
test
sub
xor
repnz
in
jne
mov
mov
xchg
popa
dec
cmp
jl
jae
lods
loop
jge
mov
clc
movsb
adc
adc
outsl
daa
xchg
mov
mov
jo
mov
adc
mov
pop
mov
fisttpl
in
dec
out
jmp
icebp
cmp
xchg
mov
mov
adc
repz
xchg
mov
inc
inc
or
xchg
fidivs
dec
cmp
ret
add
push
and
pop
mov
pushf
pushf
mov
mov
jg
inc
cltd
cmp
inc
inc
cli
dec
xchg
and
jne
scas
loop
push
sub
pusha
fstl
adc
into
sbb
jmp
pusha
stc
int
test
fxch
mov
jne
mov
xor
mov
push
inc
push
out
movsb
shlb
faddl
adc
out
mov
mov
pop
xchg
jp
xorb
inc
mov
xchg
repz
rcll
push
fwait
or
cmc
out
sbb
test
push
xor
ss
cmpsl
cmp
push
jno
add
jb
xchg
mov
sar
pop
adc
fmuls
dec
test
xor
xor
pushl
sar
bound
shll
loope
push
ret
dec
pop
inc
sahf
call
inc
lret
inc
ja
xchg
push
data16
jae
arpl
cmp
mov
cmpsl
mov
push
mov
pop
mov
mov
ljmp
popl
xchg
xchg
pop
cwtl
xchg
push
daa
mov
cmp
repz
push
lahf
mov
fnstenv
mov
sti
test
in
mov
jnp
jne
xlat
jno
adc
out
dec
in
mov
adc
mov
push
std
pop
ret
outsl
adc
sub
add
sarb
loop
jge
xor
aas
std
push
aad
mov
xlat
push
or
cltd
pop
mov
arpl
xorl
fisubl
dec
xor
vmovlps
pop
xlat
dec
xchg
push
daa
adc
sarl
push
setb
mov
loope
lea
sub
or
lret
aad
push
lret
cli
add
hlt
es
adc
xor
jae
xchg
and
mov
xchg
jmp
andl
mov
in
loopne
push
clc
xchg
shrb
fwait
sbb
loop
ffree
dec
cwtl
ret
addr16
adcb
and
lock
data16
fnsave
xchg
xlat
dec
ljmp
andb
roll
mov
cmpsb
add
jle
dec
cli
mov
or
test
out
stc
or
or
pop
mov
loope
pop
mov
cwtl
adc
inc
inc
mov
push
mov
mov
and
cmp
cmp
pop
rcrl
cmp
sti
adc
sub
ljmp
rorb
cltd
mov
xchg
inc
sar
lea
adc
jg
mov
inc
push
push
sub
jl
and
sbb
fcmovbe
mov
jl
lods
out
mov
xor
adcb
sarl
aam
les
add
lcall
fwait
scas
daa
out
lret
mov
mov
xor
scas
scas
mov
adc
loopne
int
sub
fldt
stos
sub
mov
mov
jbe
imulb
shll
out
pushf
pop
fistpll
mov
in
aad
je
jg
adc
xor
fidivl
push
out
test
fldenv
pop
dec
repnz
xchg
or
movsb
push
and
sti
xchg
jg
xchg
push
pop
fdivs
mov
add
in
pop
stos
insb
in
or
shll
sub
test
pop
outsb
inc
cmp
clc
gs
and
push
rcrl
mov
hlt
insb
or
xchg
and
fsubrs
sbb
pop
cmc
popa
adc
dec
pop
pop
fwait
or
imul
fistl
test
shll
loopne
les
aam
cmp
adc
jae
lods
outsl
cwtl
int
call
popa
xlat
fucomip
or
out
inc
xchg
jg
popf
scas
test
mov
push
mov
mov
pop
push
jecxz
ret
movsl
ja
idiv
scas
lahf
ret
fucomip
cwtl
push
sub
dec
or
lret
rclb
out
in
add
xor
leave
and
negb
cli
movsb
std
subl
aaa
xor
mov
cmp
jno
bound
add
inc
mov
testb
push
loope
aas
xchg
shl
mov
add
mov
xchg
mov
lds
adc
inc
dec
test
sarb
in
push
inc
dec
hlt
cmp
scas
js
inc
inc
mov
sub
mov
push
adc
dec
addr16
xor
loopne
pop
jmp
pop
cmc
and
jne
in
shl
dec
mov
dec
hlt
imul
jno
popa
cld
or
xchg
rorb
aaa
xchg
cmp
sbb
dec
push
sbb
xchg
or
push
xor
jp
lret
inc
jnp
cmc
popa
jnp
imul
dec
mov
push
sbb
cmpsb
xor
cmp
call
fwait
rolb
mov
sti
clc
push
in
dec
or
add
fisttpll
mov
lret
stc
arpl
popf
dec
cmp
sbb
movsl
xchg
clc
bound
dec
add
dec
xchg
stc
test
ss
ljmp
repnz
push
mov
ja
cs
sbb
jb
mov
adc
fcomps
fisubrs
clc
pop
int3
hlt
and
sbb
inc
jae
sub
mov
dec
jbe,pt
mov
jno
inc
stos
mov
rorb
or
sbb
mov
pop
jbe
stos
inc
test
xchg
push
fldcw
vpshrdvw
mov
push
rclb
fdivrs
in
jne
loope
ret
pop
push
push
sub
cli
pop
outsb
mov
in
lcall
clc
in
fcompl
xchg
jg
mov
sub
ret
fwait
stos
pop
inc
cmp
sar
cmp
xchg
test
out
int3
in
shr
pop
sbbb
pop
pop
dec
stos
mov
rcll
fucomi
adc
jae
lea
pop
aas
cmp
mov
jmp
inc
ss
push
fs
cltd
mov
les
mulb
stc
and
sti
outsb
enter
add
mov
aas
idivl
push
add
mov
inc
cmp
cmp
fsts
dec
les
adc
mov
js
mov
addr16
std
shr
push
dec
or
fisubrs
mov
test
sub
lods
fildl
movsl
fwait
sub
dec
sub
mov
mov
mov
inc
cwtl
push
dec
sbb
xchg
mov
and
mov
fimull
aas
inc
adc
jge
repnz
aaa
je
cmp
pop
add
jl
leave
cmpsl
rclb
mov
and
dec
push
dec
push
jns
push
ljmp
pop
out
inc
in
sub
stc
mov
mov
adc
lcall
inc
jns
lds
push
jmp
pop
inc
cli
jae
push
pop
jecxz
add
std
shrl
add
js
test
divl
xor
ljmp
jecxz
mov
scas
outsl
loopne
pop
sbbl
cmp
repnz
cmp
mov
daa
in
push
xlat
sbb
dec
decl
iret
push
and
cmp
push
xchg
mov
pusha
cli
jb,pn
or
sub
or
daa
imul
mov
gs
push
xchg
inc
jno
jne
xchg
cmpsl
mov
mov
and
mov
push
inc
xorb
mov
xor
sub
mov
jmp
repnz
addr16
in
lea
mov
lea
xor
cmc
adc
sub
repnz
xor
pop
push
repz
or
mov
sub
setl
inc
in
hlt
addr16
xor
mov
sub
push
cld
insl
enter
xchg
enter
mov
lods
pop
adc
pop
icebp
adc
out
pushf
fistpll
or
push
and
rcll
jmp
adcb
cwtl
mov
pop
mov
inc
loop
pop
jnp
xchg
dec
lods
outsl
push
scas
sbb
sub
inc
push
in
mov
and
mov
sbb
sub
std
xchg
sbb
ret
xchg
sub
fwait
adc
push
adc
xchg
imul
push
sub
pop
push
loop
push
imul
mov
test
dec
xchg
mov
push
aas
adc
outsl
ret
mov
cmp
stos
cmc
in
or
jg
mov
call
cmp
mov
ljmp
push
int3
js
adc
sub
xorb
sti
cli
inc
dec
leave
rcll
sbb
inc
fmull
sbb
adc
repz
jp
fwait
mov
lods
push
adc
add
mov
hlt
shlb
pop
inc
sar
jge
add
jmp
pushf
data16
cmp
sub
push
mov
push
imul
loop
test
pop
pop
sarl
mov
pop
mov
xlat
pusha
sub
in
test
repnz
stc
cli
iret
sbb
ss
movsl
push
xchg
dec
dec
pop
jle
dec
sub
xchg
jne
pop
dec
shl
cwtl
mov
cs
push
mov
jb
popa
ja
jge
mov
dec
cmp
jecxz
shrl
sub
fisubl
pop
mov
adc
inc
push
add
jbe
loop
fwait
enter
inc
insl
adc
fiaddl
sar
loopne
andb
mov
mov
push
xchg
clc
push
stos
sbb
mov
jb
in
push
sbb
pop
addl
sarl
mov
or
lds
lea
and
mov
push
subl
jbe
repz
hlt
xor
dec
sbbb
add
stc
pop
or
out
mov
frstor
and
sub
cmp
push
dec
enter
sub
arpl
inc
pushf
xor
icebp
xor
sahf
mov
jmp
std
jae
push
xchg
leave
int3
hlt
scas
daa
mov
aaa
xchg
in
mov
sub
ja
mov
jp
loop
insb
andb
jns
add
sub
dec
cmpsb
test
mov
dec
push
add
adc
jecxz
daa
cltd
shlb
int
mov
out
sub
in
aas
dec
shlb
cmpsl
jbe
rorb
popa
int
aad
loope
data16
je
arpl
dec
jb
sub
sub
shr
shll
xor
jl
into
inc
cmp
mov
push
inc
inc
neg
dec
mov
push
add
xor
xchg
insb
xlat
add
clc
push
adc
mov
cmp
pop
mov
cwtl
movb
out
mov
aaa
imul
dec
sahf
or
mov
ja
sbb
dec
daa
jle
lcall
pop
outsb
adc
lock
frstor
outsb
enter
call
xchg
cld
push
ds
mov
outsb
mov
jns
lahf
movsb
mov
ret
xor
add
lods
dec
shll
jg
test
mov
dec
mov
mov
push
jb
orl
repz
jbe
fcmovnbe
pop
and
ljmp
mov
jmp
jg
xchg
xchg
cmp
aad
sbb
pop
rolb
xor
add
es
rorb
inc
popa
mov
fwait
mov
cmpsl
push
in
or
not
fstps
push
ret
and
xor
movsb
and
lods
popl
imul
inc
and
rcrb
xchg
cmc
add
les
std
ljmp
mov
jmp
mov
mov
outsl
in
jns
mov
push
icebp
call
cltd
ret
jmp
inc
clc
rorb
push
adc
inc
pop
inc
loopne
mov
call
fistps
adc
mov
mov
pop
mov
call
daa
push
and
xor
pop
pop
jge
mov
pop
add
cmp
mov
movsb
call
nop
bound
aam
add
and
cmp
lock
pusha
movsb
leave
adc
les
push
iret
jbe
int3
mov
gs
in
sub
rcrb
jg
mov
decb
movsb
mov
scas
fsts
jl
int
arpl
jnp
adc
inc
pop
cwtl
in
outsb
xchg
mov
mov
lcall
and
dec
push
stos
aas
iret
adc
test
jge
dec
mov
jge
and
adc
push
clc
mov
mov
inc
xchg
fiadds
daa
sub
dec
clc
adc
fdiv
scas
mov
and
clc
loopne
dec
adc
mov
cld
sti
xor
imul
cmc
push
push
jno
adcb
add
fwait
xchg
imul
add
mov
dec
cmp
aaa
sahf
pop
xchg
xchg
in
mov
push
push
sbb
pop
xor
sub
inc
jbe
adc
addr16
fdivrl
push
inc
rcrl
mov
dec
std
sub
mull
subl
push
cltd
lret
cmp
xor
dec
xchg
mov
xchg
mov
inc
or
push
mov
pop
push
loop
lahf
or
out
adcb
test
mov
fisttpll
lahf
fwait
movsb
adc
call
push
sahf
ficoml
das
mov
push
push
insb
push
sub
dec
xchg
mov
shrb
add
xor
lods
in
aaa
jno
mov
movsb
repz
xrelease
dec
cmp
cltd
lock
div
js
mov
test
cmp
mov
adc
jp
inc
xchg
clc
mov
jg
insl
pusha
xchg
out
fistpl
lahf
pusha
jae
sub
xor
lods
test
dec
lcall
loop
mov
ss
lods
mov
push
xchg
aaa
push
shlb
mov
lds
cmpxchg
xchg
cmp
pushf
cmp
cmp
inc
es
xor
add
stos
push
int
mov
loope
push
inc
push
outsb
repnz
sub
icebp
call
mov
inc
hlt
or
dec
mov
nop
or
mov
aas
and
jmp
outsl
notb
pushw
adcl
ret
mov
inc
cs
test
push
mov
xor
fwait
lods
insl
cld
ljmp
inc
adc
test
das
stc
cmc
mov
fdivs
jg,pt
mov
cmc
and
and
mov
jae
push
testb
sbb
dec
lret
push
push
or
dec
push
into
dec
and
xor
out
and
cmp
rolb
mov
sub
rcrb
push
sub
jle
inc
popa
fists
sbb
aaa
xor
xchg
inc
adc
stos
and
sbb
jnp
pop
popf
adc
testb
add
das
daa
lods
notb
push
fsubrp
pop
aam
xchg
and
mov
pop
lods
ljmp
fsubrp
xor
sub
or
enter
rcll
xchg
cmp
push
jb
push
cmp
and
pop
mov
and
mov
hlt
add
push
jae
in
or
aaa
sbbb
hlt
mov
lahf
ds
data16
fcompl
cs
cli
pop
addr16
daa
in
push
cmp
into
adcl
push
cmp
or
mov
popf
sbb
add
mov
sbb
popa
sbb
jle
jo
hlt
mov
sbb
mov
pop
mov
mov
imul
jb
lods
shlb
rolb
gs
imul
repz
iret
sub
stos
add
mov
lcall
xchg
pop
pop
adc
jbe
aad
and
mov
or
ror
adc
les
mov
adc
arpl
fwait
lock
dec
aam
into
daa
sub
sub
inc
and
inc
mov
cs
pop
cmp
insl
cmc
dec
int3
fs
imul
inc
in
data16
in
mov
push
mov
inc
jg
hlt
push
sub
test
inc
icebp
or
inc
push
jl
cs
fmuls
and
movsl
bound
mov
cld
xchg
xchg
push
push
test
adc
mov
pop
xor
sub
lret
scas
fadds
xchg
pushf
stc
jo
xchg
pop
xor
addl
push
scas
and
xlat
loope
push
out
cltd
pandn
or
mov
lcall
pusha
out
repnz
mov
jbe
scas
inc
adc
pushf
enter
and
push
jbe
adc
mov
sbb
in
lea
lcall
and
jle
scas
sbb
lock
stos
and
aaa
add
lods
pop
cmc
push
cmc
dec
cmp
sub
mov
setbe
mov
pop
sbb
jo
xor
xlat
aam
mov
scas
mov
jnp
sti
add
xchg
repnz
adc
mov
mov
andl
mov
xor
cwtl
loopne
and
jnp
pushf
push
cmp
cmp
mov
push
icebp
mov
add
push
pop
dec
or
mov
rcrl
inc
mov
test
hlt
decl
xor
das
sub
jl
repnz
jecxz
jecxz
mov
das
popw
cs
xchg
dec
lock
jle
sbb
es
mov
and
mov
xchg
in
sbb
dec
mov
push
scas
jno
ja
cmpsb
cmpsl
rcrb
mov
loope
xchg
addl
mov
test
ja
mov
cmpsb
test
subb
pusha
dec
push
and
divb
xchg
popa
inc
lock
push
loopne
cmc
cmc
sub
cltd
ljmp
ljmp
int
stos
adc
adc
lahf
jg
ljmp
pushf
cmp
jl
pusha
and
hlt
movsl
stos
scas
ja
and
sub
mov
aad
int
clc
inc
pop
test
cmp
mov
or
insl
cmp
xchg
cmp
or
mov
sbb
mov
lods
mov
sub
and
and
jno
das
pop
jecxz
and
mov
lock
inc
sar
into
mov
int3
push
mov
pop
mov
xor
dec
fwait
jae
dec
stos
sbb
xchg
fadds
addr16
test
movsl
les
jne
je
add
in
sbb
add
mov
xchg
mov
dec
test
mov
andl
popa
sbb
jne
fmull
out
cmp
adc
xorl
push
xor
daa
jecxz
add
mov
jl
outsl
je
mov
lahf
sub
jg
add
sbb
ret
sub
push
sbb
addr16
faddl
push
lret
pop
stc
add
cmp
lock
xchg
adc
movsl
push
add
and
popa
fisubrl
sub
cmpsl
mov
and
sub
stc
and
ss
pop
add
mov
mov
cmp
dec
mov
xchg
push
imul
cmp
adc
movsl
push
sahf
mov
scas
jmp
push
fiaddl
data16
cmp
dec
mov
insb
jp
sub
fucom
mov
mov
lahf
ss
data16
ss
sbb
dec
stc
lods
mov
jb
jge
les
mov
daa
fs
les
shl
adc
imul
push
sti
xadd
lock
add
push
repnz
dec
mov
lcall
repnz
push
ljmp
and
in
ret
cltd
sub
dec
stos
in
outsl
push
cmc
cmp
mov
repz
lods
inc
dec
loope
add
in
push
mov
scas
pop
into
or
jge
enter
ljmp
mov
ret
dec
enter
test
xchg
test
cmp
call
mov
xor
adcb
pop
sbb
inc
sbb
xchg
leave
adc
dec
sub
or
pop
sahf
into
sub
sti
xchg
repnz
push
push
in
hlt
xchg
lret
pushl
inc
stc
fdivs
out
jo
adc
sub
lahf
push
xorl
cmp
or
test
fnstcw
mov
or
outsb
mov
ja
pusha
mov
cmp
int
jne
or
or
xchg
out
adc
jp
sbb
mov
ss
cmp
adc
ret
add
push
call
sub
xchg
inc
add
lret
mov
cmp
mull
jb
sub
aam
fcmovne
hlt
lods
lods
pop
add
pop
cmpsl
pushl
xchg
cmp
lea
cmp
and
iret
cld
cs
or
mov
mov
adc
mov
cli
and
popf
fcmovbe
push
and
insb
cmp
mov
dec
xchg
faddl
inc
push
jmp
ret
and
adc
sub
data16
add
ret
ret
popa
or
idivl
sub
scas
add
mov
in
lea
aad
xor
sub
das
inc
push
cwtl
bound
ret
loope
mov
pop
pop
and
mov
daa
ss
lods
push
sub
pop
jle
call
outsb
in
sub
adc
and
jb
jmp
rcr
jg
fwait
xor
mov
or
push
lods
pop
andl
lahf
jmp
pop
daa
clc
add
mov
sti
stc
add
push
xchg
or
jno
dec
and
sbb
test
fstpt
inc
fcmove
pop
test
out
xchg
jecxz
into
sub
fists
adcb
add
xor
addr16
cmp
fwait
add
addr16
in
mov
mov
or
push
dec
mov
test
or
repz
push
xor
xchg
adc
push
adc
pushf
dec
adcl
mov
mov
jp
aas
test
mov
popa
movsb
dec
ds
adcb
pop
push
iret
push
inc
jecxz
xor
adc
pop
and
and
test
sbb
pop
mov
dec
paddsw
clc
je
popa
stos
pop
in
inc
clc
lea
mul
sub
add
pop
xchg
in
inc
and
stc
imul
js
outsl
test
leave
pop
inc
inc
rclb
pop
sti
dec
pop
negb
push
mov
jno
ds
sbb
dec
je
adc
rcrl
jmp
js
hlt
fstpt
adc
ret
pusha
cmpsl
daa
loop
shll
aas
push
lea
out
mov
lea
mov
mov
mov
jne
inc
loope
das
imul
cmpsl
sub
dec
mov
jge
hlt
icebp
jle
and
jo
dec
filds
mov
mov
shrl
call
cmpsb
out
sub
and
cmpsb
lds
dec
xchg
out
add
pop
imul
lret
inc
inc
mov
adc
ret
inc
cs
add
add
pop
cmp
ljmp
sahf
or
pop
jg
pop
adc
rolb
fmuls
sbb
sbb
sub
xchg
dec
sbb
in
mov
addr16
mov
push
ret
inc
jle
jmp
stos
shlb
pop
jno
daa
in
cmp
aaa
lock
mov
mov
loope
xor
inc
scas
std
mov
inc
jecxz
jae
aas
int3
mov
std
or
mov
mov
adc
inc
and
xor
ret
lods
sbb
ret
enter
rcrb
xchg
xor
test
movb
or
lahf
cld
cld
cwtl
fcoml
mov
cmp
into
pop
jle
xchg
mov
fstpt
mov
out
dec
cmp
rolb
pop
xchg
dec
rolb
adc
pusha
stos
inc
push
inc
mov
aas
push
adc
lret
sub
and
in
jecxz
mov
int
lret
jg
sahf
hlt
jbe
std
cltd
jecxz
mov
inc
ds
cmp
jbe
dec
sbb
pop
ret
xor
repz
mov
clc
sub
add
mov
stc
mov
outsb
movsb
out
or
add
cs
outsb
lock
cmpsl
ljmp
jecxz
xor
mov
es
in
repz
cmp
out
lds
mov
adc
repz
mov
lret
jecxz
je
xchg
pop
mov
jbe
mov
cmp
fisttpll
out
or
andl
ja
fs
jnp
cs
xor
iret
cmpsb
mov
mov
imul
enter
ja
lret
pop
mov
xchg
mov
push
mov
rcrb
loopne
mov
nop
andb
inc
andb
repz
adc
pop
out
shll
mov
cli
jne
adc
in
push
push
add
dec
pop
test
push
or
push
fistpll
arpl
cmp
xor
adc
mov
jo
xchg
imul
push
pop
jge
xchg
cmc
sbbl
clc
rcrl
pushf
out
mov
dec
push
sbb
sub
cltd
fisubrs
sbb
lret
and
data16
cmpsb
aaa
adc
and
lds
push
jne
or
sub
jns
mov
arpl
das
dec
push
pop
bound
xchg
push
mov
adc
push
int3
fwait
out
xor
pop
scas
divl
and
sub
dec
adc
hlt
fmuls
nop
js
mov
push
mov
push
in
and
mov
mov
lcall
and
cmc
arpl
dec
lahf
lcall
adc
das
pop
fdivs
adc
cli
push
mov
in
or
sar
jg
loope
idivl
jbe
movsb
fcmovnb
mov
xor
scas
hlt
dec
std
imul
xor
xor
mov
mov
pop
sbb
xchg
xchg
dec
popf
and
inc
add
adc
push
xchg
or
pop
into
pop
fwait
xor
call
loopne
mov
or
push
pop
ss
imul
out
mov
loopne
imul
inc
out
data16
mov
mov
xchg
mov
sub
push
adc
divb
add
cmc
lea
xor
adc
mov
rorl
adc
stos
pushf
outsb
lds
stos
leave
push
out
test
jae
out
cmp
xor
and
scas
pop
loopne
or
pop
and
call
lock
add
push
mov
xor
dec
add
pusha
xchg
xlat
xchg
out
inc
cmp
pop
into
out
mov
jo
pop
cmp
sar
push
jnp
into
dec
adc
push
xchg
out
shl
mov
mov
xor
call
mov
mov
movsl
incb
mov
fstl
adc
xchg
mov
or
mov
ret
cmp
aad
jae
pop
xchg
push
sub
mov
int
add
xor
sub
push
adc
je
andb
pop
test
sbb
inc
in
push
xchg
add
xchg
pop
imull
mov
dec
add
mov
fiadds
sbb
lahf
push
and
jnp
push
xchg
push
sti
mov
pop
or
push
stos
jne
add
orps
rcl
inc
jmp
int
jno
scas
aad
jge
sarb
das
or
pop
bound
shlb
fnstsw
subl
sub
mov
imul
mov
jae
jae
inc
outsl
scas
jg
cmp
push
out
repz
fdivs
imul
push
hlt
pop
lcall
insl
ja
scas
xchg
sub
cmp
cwtl
mov
lods
cmpsb
outsb
push
pushf
pop
fldl
scas
xchg
sub
dec
mov
dec
ja
insl
push
fwait
jnp
cs
xchg
addb
jae
inc
repz
jp
je
cmp
jae
cli
inc
fiaddl
mov
jbe
cmpb
fadd
mov
int
lret
movsb
nop
cmp
mov
imul
int
stc
inc
cmpsl
push
bound
adc
add
ja
outsl
push
mov
shll
mov
inc
icebp
fdivr
pop
or
in
fcoms
loope,pn
ffree
pushf
sub
push
jb
adc
addr16
test
cmp
sbb
push
into
cld
cmp
fsubs
jge
dec
fadds
or
cwtl
pusha
les
xor
pop
lcall
cmp
pop
push
jle
cmp
or
fmull
pop
cltd
push
lea
cltd
lds
test
ja
movsb
lds
shr
call
inc
dec
pop
cmp
xchg
or
mov
clc
pusha
xor
xchg
cmp
push
outsl
sbb
andb
fisubrl
scas
mov
lea
cmp
out
outsb
stc
mov
test
clc
gs
and
sbb
lds
daa
mov
adc
addl
lds
je
rcrl
outsb
enter
xchg
jae
mov
xchg
iret
loope
push
push
sub
and
jns
popa
xor
jp
xchg
cmc
cmp
ljmp
ret
mov
fstps
ja
adc
hlt
clc
add
out
out
aad
loope
stos
pop
lock
fsts
sbb
and
rorl
and
lods
mov
clc
fadds
in
fcmovnu
mov
mov
ret
loopne
xor
pushf
inc
das
fldenv
sbb
loopne
push
popa
aad
js
jmp
nop
jns
fsubrp
cmp
sbb
dec
aam
pop
dec
addl
ja
mov
mov
repz
cmc
imul
jns
mov
call
addb
cld
push
sti
out
adc
xchg
mov
sbb
in
fsubs
jne
and
xchg
sub
das
xchg
les
nop
in
loop
or
jo
lods
push
loopne
dec
cli
dec
rcll
sbb
xchg
inc
cmp
test
out
push
sbb
add
pop
mov
in
sub
out
mov
test
js
fistpl
shrl
and
mov
cwtl
js
mov
xor
stos
fdivr
xchg
mov
jns
push
aam
jns
test
push
shlb
xchg
enter
cmp
sub
push
or
adc
xchg
pop
mov
jne
dec
jl
jmp
fcomps
adc
sbb
inc
sbb
xor
ret
in
loop
fisubrl
arpl
subb
loop
lret
enter
dec
xchg
mov
mov
jno
cld
daa
int3
cmp
outsb
jno
push
out
mov
xchg
xchg
out
or
cltd
mov
push
pop
push
add
and
lock
dec
faddl
imul
outsb
mov
popf
ljmp
iret
stc
or
push
xor
cmp
mov
push
test
lods
or
mov
out
outsl
in
mov
orl
iret
inc
push
cmp
mov
inc
cmpsb
subl
stos
cmc
cmc
data16
jno
movb
je
pop
leave
dec
repnz
ret
mov
sub
inc
add
arpl
cld
fstps
in
insl
popf
pop
mov
mov
cmp
cltd
dec
push
shll
gs
dec
jnp
and
mov
testl
js
push
adc
sbb
xor
adcl
mov
xor
push
cmc
lret
jae
mul
sub
xor
ret
adc
mov
lret
mov
addr16
cmc
enter
inc
pop
addr16
divl
and
pop
jle
out
dec
lock
repnz
dec
sahf
test
loop
push
pop
std
sbb
outsl
adc
andb
sbb
hlt
rcrl
shll
popa
mov
cmp
add
fs
lahf
in
xor
ret
bound
jle
ja
xchg
sbb
mov
sti
cmpsb
mov
push
cmp
sahf
iret
push
mov
std
cmp
sub
repnz
sahf
adc
arpl
aam
mov
cmp
pop
add
add
mov
stos
inc
lds
inc
and
mov
mov
push
into
out
push
adc
lcall
xor
int
mov
push
aas
push
nop
lcall
outsb
test
push
imul
leave
daa
orl
jns
fsubrl
cmp
icebp
lret
leave
jnp
cmp
push
mov
sbb
push
insb
xor
and
loopne
aad
les
pusha
mov
mov
stos
push
je
mov
out
adc
mov
in
mov
pushf
pop
inc
cmc
mov
and
inc
mov
jne
loopne
xchg
orl
jge
push
jae
cld
jae
sub
movsl
cmp
cmp
aam
sbb
shlb
push
dec
jae
rolb
test
sbb
fwait
push
push
test
mov
inc
cmp
mov
stos
movsl
inc
fistl
jl
add
lock
cltd
in
dec
cmp
cmp
xchg
ret
test
add
inc
and
psubusb
xorl
test
lds
push
sbb
imul
stc
daa
out
xor
lock
mov
ret
and
js
and
fwait
insb
jge
mov
js
add
scas
and
add
pop
iret
arpl
dec
inc
or
pop
mov
icebp
movb
subl
jbe
xchg
and
mov
mov
iret
insl
and
inc
ss
jno
rorb
cmp
cmp
xor
xchg
ret
mov
out
adc
inc
ja
shl
inc
loope
divb
mov
sbb
cmp
arpl
xchg
mov
leave
jl
mov
xor
out
fxam
xor
sub
jg
pushf
mov
push
lods
cmp
test
xchg
xor
jge
out
cmp
cwtl
ja
xor
and
mov
cld
push
jecxz
int3
mov
mov
xchg
aaa
idiv
mov
add
cmc
jae
jecxz
je
jns
sbb
inc
hlt
sti
sbb
int3
lods
mov
cltd
mov
inc
adc
inc
mov
or
dec
nop
xchg
xchg
cmp
jo
insl
jge
dec
and
mov
add
ja
xchg
pop
jl
jno
cwtd
pop
mov
enter
xchg
mov
xchg
int
mov
mov
xchg
pushf
cmp
movsb
push
inc
push
adc
adc
jmp
push
jo
cmpb
pop
sbb
hlt
pusha
push
rol
fisubrl
into
pop
dec
outsb
xchg
cwtl
inc
mov
popa
call
ret
adc
jno
add
add
pushf
jle
stos
ja
lret
mov
test
sbb
mov
aad
xchg
xchg
and
and
ja
add
mov
push
inc
jae
pop
sub
pop
in
jmp
mov
in
lock
test
stc
rcll
sbb
lea
and
addr16
fstpt
std
stc
out
loopne
mulb
lds
add
jae
fwait
out
push
cwtl
cli
mov
sbb
jnp
mov
hlt
loope
lock
push
test
mov
fadds
test
ss
and
aas
sbb
out
mov
inc
je
ficomps
cmpsb
out
push
and
push
add
adc
push
jl
outsl
jno
mov
insl
iret
test
arpl
mov
out
cmp
mov
fildl
popa
adc
lock
mov
sti
insb
stc
mov
xchg
cwtl
outsl
ja
popf
cli
je
xchg
pop
or
push
aas
pop
sbb
icebp
inc
bound
cmp
or
sub
fmull
pop
loopne
ljmp
cmpsl
out
sbb
dec
pop
xor
add
pushf
pushf
ret
pop
dec
mov
mov
dec
push
mov
nop
pop
fadds
mov
xchg
nop
inc
add
arpl
mov
dec
add
loop
add
push
mov
std
aad
pop
in
je
fists
xor
ds
xchg
fstpl
imul
mov
sti
xor
and
mov
out
xor
sub
mov
sahf
movsl
sbb
mov
inc
jns
push
or
dec
jbe
icebp
cmp
adc
test
lods
data16
scas
insb
repnz
push
push
out
jmp
das
dec
jge
jge
xchg
jno
es
fldl
xlat
xor
mov
out
icebp
mov
sub
xorb
dec
xchg
push
ss
or
in
jbe
fwait
adc
mov
mov
xor
fmuls
mov
orl
arpl
sbb
xor
lods
les
shlb
sti
hlt
add
pushf
jle
push
or
int3
stos
out
test
in
loop
pushf
mov
aad
pop
sub
dec
call
pop
shlb
les
idivb
enter
aam
minps
in
push
idivl
push
fnsave
dec
adc
push
loope
cmpsb
adc
aas
cmpsb
dec
mov
xchg
xchg
clc
mov
mov
orb
mov
push
outsb
push
sbbl
ss
aas
shrl
mov
lods
fs
pop
aaa
xorb
xchg
sbb
lods
inc
sti
out
lret
and
repz
sahf
cmpb
test
xor
adc
mov
mov
inc
lret
mov
pop
and
inc
mov
sbb
dec
shrl
loope
out
popl
les
sub
or
out
push
test
lcall
sti
outsb
mov
jl
push
cmp
in
fadds
cmp
repz
movsb
mov
xchg
add
pop
roll
mov
mov
and
inc
arpl
scas
mov
cmp
xorb
clc
jne
or
std
es
cmc
pop
out
add
adc
cmp
push
fsubr
push
mov
sub
fldl
fdivl
push
xor
cmp
aaa
insb
inc
daa
mov
call
shll
mov
fildll
jmp
es
pop
pop
add
fwait
cli
fmuls
ljmp
test
into
fwait
scas
insb
cmp
xlat
aas
dec
stos
cmpsb
aaa
les
mov
mov
div
jb
nop
ret
popa
xchg
push
xchg
xchg
and
test
and
mov
pop
adc
lods
push
mov
icebp
mov
mov
adc
ds
jae
inc
inc
or
mov
sbb
test
cmpsl
out
iret
lock
loopne
dec
sub
mov
in
and
push
add
push
movsb
jmp
jl
out
pop
mov
xor
scas
push
dec
dec
jb
daa
aam
adc
imul
leave
insl
mov
dec
xchg
push
adc
es
jle
aam
adc
xor
jg
xor
mov
pop
ret
loope
xchg
test
cwtl
jae
stos
xlat
stos
mov
stc
jnp
and
clc
int3
inc
jb
loop
fistpl
mov
jae
dec
ja
cli
aaa
mov
push
mov
mov
das
or
xor
pop
mov
mov
and
jecxz
add
fidivrs
inc
aas
mov
das
or
ja
mov
shll
and
sub
aam
in
jo
fcoms
dec
and
arpl
ljmp
imul
sahf
mov
mov
jecxz
and
ja
mov
jnp
adc
jg
shl
push
ljmp
shll
js
jle
mov
arpl
cmpxchg
inc
int
in
inc
test
in
cltd
fildl
test
xor
mov
jnp
xchg
ja
xor
icebp
je
out
mov
ret
mov
scas
jnp
and
in
daa
jo
pop
jns
js
lret
pop
hlt
scas
mov
insl
mov
inc
in
pop
xor
inc
lods
inc
jne
add
insb
aaa
pop
add
test
inc
mov
jbe
fldl
dec
lods
sarb
sub
pop
and
xchg
jbe
mov
or
xorb
and
repz
push
jmp
jmp
xor
das
cmp
ret
mov
or
jo
test
rcrl
dec
andl
push
dec
sbb
sbb
sub
insl
cmpsb
lret
pop
add
xorb
jo
fnsave
aam
into
xchg
add
jbe
dec
cmc
mov
add
ret
test
mov
fwait
dec
adc
pushf
push
in
sub
cmp
xchg
cmpsl
pushf
pop
and
push
xchg
dec
test
push
mov
mov
data16
xor
call
push
xor
lret
cli
or
adc
push
sub
dec
mov
outsb
xor
rcrb
aaa
mov
xorl
inc
pop
lea
push
sbb
pop
sub
xor
in
dec
xchg
push
inc
in
outsl
or
daa
fwait
fnstcw
lods
sbb
adc
sub
les
mov
out
push
adc
pusha
push
cmc
xor
sub
sbb
cli
push
xchg
mov
mov
xor
add
xchg
sbb
dec
cltd
jns
adc
mov
adc
dec
sar
daa
in
push
incl
syscall
adc
xor
fimull
mov
hlt
inc
cmp
ss
dec
mov
cld
ljmp
xor
adcl
mov
dec
sbb
jo
ret
cmpl
and
scas
mov
ret
add
wrmsr
lods
mov
mov
dec
mov
dec
xchg
mov
cld
fidivrl
inc
pop
nop
inc
shlb
xor
test
int
loopne
and
dec
pop
lea
or
and
xor
mov
pop
cwtl
mov
cmpsl
pop
jbe
cld
jbe
mov
push
aas
es
ds
mov
imul
push
sub
aad
pop
movaps
scas
add
mov
xchg
test
out
xchg
nop
pop
adc
dec
adc
clc
fdivrs
inc
sti
insb
cmp
sar
or
inc
xchg
sbb
aas
mov
mov
das
push
dec
jo
sbb
push
fwait
cmpsb
out
pop
pop
mov
div
pop
sti
sub
xchg
push
in
loope
pusha
mov
pusha
sti
add
shrb
mov
cmpsb
jge
dec
call
mov
xlat
insl
shl
test
insl
xchg
cmpsb
push
rolb
pop
imull
add
je
aam
xchg
arpl
mov
lahf
mov
mov
out
pop
xlat
or
pop
jecxz
pop
sub
jle
fildl
fbld
aas
sahf
push
xor
add
pop
mov
je
mov
decl
mov
fs
lea
in
mov
dec
in
movsl
or
mov
mov
mov
fbld
inc
sbb
cli
test
add
fidivrl
sub
aam
je
xchg
mov
mov
lock
stos
lcall
push
or
aam
dec
cmp
test
das
mov
pop
adc
and
xor
movsl
xor
jge
ret
test
arpl
movsl
fdecstp
jno
insb
insl
gs
mov
cltd
mov
push
and
arpl
adc
rorl
data16
loopne
out
insb
cmc
shrb
enter
bound
dec
loope
test
xor
add
mov
dec
cld
fnstcw
popa
fcmovu
push
xor
aam
sbb
sbb
push
aam
pop
mov
outsl
xchg
cmp
out
mov
mov
mov
mov
in
mov
fistps
test
insb
js
push
outsb
lcall
and
ja
and
aam
sti
pop
inc
pop
int3
or
sbb
das
addb
cs
and
and
mov
pop
mov
ret
notl
xchg
xlat
div
cmp
rclb
jbe
fs
mov
lret
cmpsb
pop
cmp
adc
xchg
dec
pop
into
aam
cld
push
int3
inc
inc
testl
shl
or
ss
adc
popa
sbb
mov
int
mov
dec
inc
add
sbb
adc
mov
jmp
loopne
out
insb
cltd
imul
aam
push
push
imul
inc
add
dec
je
jbe
stos
ja
roll
faddp
dec
sub
mov
mov
lods
and
cwtl
cmp
aas
cld
in
mov
dec
sbb
sub
les
fmull
fstpt
add
aad
pop
jle
js
xor
mov
fistpl
dec
mov
pop
push
clc
mov
movsl
lock
mov
jl
push
cmp
movsl
adc
icebp
lds
mov
popf
inc
mov
ljmp
test
push
bnd
cmp
shll
ss
push
or
xchg
in
es
dec
data16
bound
sbb
and
pop
lcall
mov
cs
xor
pop
cli
cs
cwtl
movsl
mov
mov
pop
adc
aam
add
xor
and
inc
fmull
pop
cmpb
jae
jb
inc
add
mov
sbb
push
xchg
and
mov
inc
sub
sbb
xor
sbb
dec
movsb
mov
fwait
inc
jns
push
fisubrl
mov
xor
xor
imul
cmp
push
js
mov
rolb
ja
cmc
push
fmul
jmp
popa
out
jae
aas
cmc
cmc
iret
std
enter
add
andb
jecxz,pt
rcr
sbb
inc
inc
or
fwait
sbb
movsl
lods
mov
or
sbb
rorb
int
lods
dec
fs
imul
je
lahf
inc
inc
outsb
add
mov
xchg
dec
and
or
je
out
cmpl
jno
pop
lret
dec
inc
xor
out
popa
add
pop
movsb
ds
popl
or
push
mov
mov
rorl
xchg
les
stc
mov
push
push
inc
add
fucomp
cmp
cli
movsl
and
incb
jmp
lock
call
add
inc
aad
pushf
leave
pop
stos
repz
push
push
xchg
mov
pop
sub
sbb
mov
and
cmp
gs
lcall
inc
xor
cmp
jle
pop
inc
aaa
dec
gs
cmp
xchg
xchg
mov
adc
cmp
je
jbe
in
sti
imul
sti
outsb
inc
stos
fsubrl
or
mov
dec
lret
aaa
push
pop
es
in
jle
loope
das
and
mov
xchg
xchg
dec
daa
mov
adc
cmp
xchg
cmp
mov
lock
pop
dec
jbe
std
in
es
pop
ja
pushf
xlat
dec
call
aaa
and
fisubrs
adc
or
cmp
and
sub
xchg
clc
cmp
jmp
into
nop
in
push
arpl
pop
adc
cmpsb
mov
mov
mov
daa
pop
pop
mov
mov
dec
add
filds
loope
mov
ret
popa
sub
xchg
repz
or
sbb
push
jmp
scas
mov
xchg
and
sbb
into
dec
loope
or
and
cwtl
xchg
xchg
movsl
xchg
xor
icebp
xchg
inc
and
dec
shlb
shrb
xor
iret
je
les
shrl
outsb
mov
fs
loopne
jo
addr16
rorb
inc
push
push
adc
jmp
cmp
enter
and
negl
pop
adc
adc
add
lock
stos
imul
popf
loope
mov
jl
cmc
mov
dec
mov
xor
mov
mov
jo
lea
inc
and
imul
mov
mov
mov
push
push
mov
sbb
pop
xchg
loopne
jle
sub
scas
xrelease
ret
scas
pop
xacquire
cmpsb
aam
dec
push
ja
mov
out
es
mov
insl
add
insb
daa
loope
test
and
add
or
inc
stc
addr16
stos
push
scas
in
push
mov
hlt
pop
cmp
std
xorb
insb
jge
sbb
das
xlat
add
test
cmpsl
cwtl
xchg
ret
test
fwait
stos
negb
jmp
sub
addb
lods
push
cltd
mov
popa
inc
jge
shrl
pushf
mull
mov
xor
or
xchg
pop
push
shlb
sahf
repnz
jecxz
nop
pop
popa
fs
jl
sbb
jl
or
inc
aaa
mov
mov
mov
das
push
cmpsb
out
lahf
scas
push
movsb
stc
flds
shll
test
pop
add
fsubs
sbb
sbb
and
or
stos
inc
or
cmp
jl
jb
inc
lock
arpl
bound
pop
mov
cmp
mov
mov
js
stos
dec
aam
dec
jae
inc
mov
std
pop
fisubrl
mov
in
or
imulb
fsubl
mov
orl
dec
sbb
sub
push
cld
sti
and
imul
adc
mov
lds
mov
fmull
imul
cs
sbb
les
dec
sti
out
mov
fsubr
xlat
inc
pusha
cmp
mov
fs
inc
xorl
es
mov
adc
xor
gs
ds
inc
jnp
jno
jmp
sub
push
mov
cmp
aam
sahf
bound
add
and
push
cld
or
lret
mov
push
test
popl
outsb
mov
xchg
loopne
popf
inc
cltd
cmp
jl
std
call
push
fs
test
out
push
in
mov
inc
sub
mov
jp
push
call
jae
repz
add
fimuls
stc
stos
aad
mov
jge
cmp
fistpl
gs
sub
dec
push
out
mov
mov
in
push
xchg
popf
or
push
lahf
out
mov
addr16
xor
dec
movsb
sub
cmpsl
sub
inc
mov
addr16
out
inc
clc
mov
jo
lahf
orl
clc
add
das
adc
outsb
nop
lods
sub
or
js
das
push
lcall
mov
inc
insl
add
andl
repz
cmp
add
and
mov
mov
jmp
sti
addb
test
jle
in
xor
out
test
out
stc
mov
pop
push
cmp
inc
ss
pusha
mov
popf
in
pop
int
jnp
mov
aaa
repnz
mov
aam
mov
push
xchg
mov
pop
mov
inc
aas
sbb
sbb
and
adc
shr
enter
iret
inc
xor
sbb
cmp
rol
in
ljmp
pop
pop
loopne
and
mov
ds
mov
jns
inc
push
cs
shlb
adc
test
xorl
lret
or
arpl
jl
icebp
fnstenv
cmpsl
add
inc
mov
mov
cmovns
movsl
pop
aam
adc
xchg
jbe
mov
cmp
pusha
loop
bound
cmpsb
mov
and
int
mov
sub
fimull
pop
xchg
rolb
jp
xchg
movsl
pusha
cmp
add
or
mov
fsts
loop
xchg
mov
cwtl
pop
mov
sub
jmp
loope
movsl
inc
and
or
cmp
movsl
jmp
dec
pop
shrl
frstor
popl
push
adc
das
inc
cwtl
sub
jge
push
bound
jmp
divb
movsl
ficoms
and
adc
cmp
es
gs
lods
mov
mov
pusha
aas
out
inc
int
aad
add
addb
inc
jne
mov
jne
cli
fcoms
mov
sub
loop
and
mov
push
je
sub
and
faddl
mov
pop
pop
out
pop
test
fnstsw
pusha
or
mov
aas
addr16
jle
fs
mov
jne
clc
pop
cmc
jg
mov
adc
xor
ljmp
mov
out
stos
sbb
xchg
xor
mov
adc
leave
dec
lock
das
and
divl
out
insl
pop
ret
mov
push
mov
adc
inc
enter
and
dec
fcmovbe
push
arpl
arpl
xchg
push
xor
stc
fstpt
xorl
jae
fld1
ja
add
push
or
pop
or
mov
xchg
jbe
mov
xor
add
jp
xchg
cmpsb
movsl
in
pop
fistps
cmp
iret
sbb
xchg
and
jg
pop
and
jp
inc
xchg
popa
xchg
xor
hlt
lods
pop
jb
in
loopne
sub
mov
xlat
xchg
mov
dec
pop
cmp
loopne
lds
mov
and
movsl
mov
insb
xor
pop
ficompl
inc
lret
jnp
clc
scas
sbb
test
shlb
xor
mov
xor
fprem
sbb
xchg
mov
aam
mov
imul
add
cli
sbb
pop
fbstp
add
jb
fbstp
ljmp
imul
sub
push
notl
cmp
inc
out
das
push
testl
imul
mov
push
loope
sti
stc
scas
scas
mov
jmp
inc
fs
mov
iret
sbb
or
xchg
push
bound
pop
cltd
xor
aam
inc
xor
cmp
into
xchg
popf
cmpsl
cwtl
fst
test
push
cld
xchg
imul
mov
jp
gs
mov
out
and
dec
movsl
mov
sub
or
inc
mov
and
sti
and
mov
xchg
add
or
out
in
xor
push
call
xchg
add
xchg
loopne
mov
pop
fmuls
and
add
aam
cmpsb
ds
mov
in
jne
inc
stc
sbbb
cmp
sbbb
cmp
adc
in
inc
dec
leave
sbb
jecxz
or
mov
cmp
mov
ds
adc
ja
mov
adc
daa
ret
sbb
pop
dec
jne
data16
daa
lcall
ja
imul
sbb
push
mov
sub
insl
jae
jmp
pop
insl
push
xchg
adc
pop
pop
test
repnz
movb
dec
jno
je
aad
or
rcll
push
cli
jle
pop
dec
sbb
in
out
scas
push
xchg
movsl
mov
popa
jle
loop
xor
jno
out
hlt
inc
cli
inc
mov
add
sbb
rclb
inc
fnstenv
jo
aas
add
xor
cwtl
push
add
dec
test
mov
jle
push
int3
je
outsl
jae
nop
and
test
daa
mov
cld
add
filds
jmp
push
test
mull
push
add
stc
push
mov
jge
mov
ss
repnz
mov
mov
pop
sahf
mov
pop
pop
stos
out
add
and
int
push
mov
and
sub
lock
icebp
inc
mov
sbb
pop
mov
xor
adc
and
xchg
mov
xorb
cwtl
mov
lret
inc
addr16
test
in
inc
mov
mov
xorb
cmp
inc
xchg
ret
in
cmpsl
pusha
lods
xor
js
fs
jge
fcoms
or
add
sahf
out
sbb
xor
call
lcall
nop
push
lcall
xchg
idivl
inc
loope
mov
and
adc
add
ret
sbb
iret
testl
rcrb
pop
cltd
int3
fs
cmp
or
mov
lock
mov
fs
cld
xchg
mov
testb
push
sbb
dec
add
sahf
jmp
mov
out
jmp
inc
and
push
or
movb
gs
mov
je
cmc
cmp
sbb
cmp
inc
sarb
pushf
insl
mov
ror
testb
mov
and
mov
or
or
inc
pop
andl
enter
outsl
mov
loop
aaa
mov
es
push
dec
inc
orb
iret
cwtl
mov
sbb
sub
jg
sbb
pop
dec
jbe
bnd
popf
imul
fistpll
dec
in
rep
push
jmp
lcall
fcoml
inc
clc
rcr
xor
je
pop
cmc
jbe
push
pushf
inc
sub
filds
lret
cltd
faddl
test
ds
xchg
push
test
add
mov
movsb
sub
cs
lods
out
int
adc
pop
xchg
cmp
js
sti
adc
sub
add
leave
xlat
mov
inc
push
std
pop
xchg
pop
and
rcr
xor
fwait
push
ficompl
xor
xor
or
jnp
or
imul
fsubrl
fmuls
jbe
loopne
mov
jno
rcrl
jo
or
fdivp
cmp
icebp
mov
add
stos
out
fucomip
arpl
shrl
xor
popf
int
bswap
das
add
in
mov
and
in
dec
enter
in
mov
fwait
add
dec
aad
pop
mov
loopne
xchg
mov
mov
mov
cld
js
sarb
mov
cmp
push
outsb
arpl
ss
out
xchg
mov
cmp
inc
leave
mov
push
lahf
and
mov
xchg
ds
test
pop
sbb
ret
xorl
sbb
stos
fsubr
dec
mov
sub
push
cmp
adc
rcrl
pushf
lds
mov
sti
pop
xchg
mov
add
imul
mov
xor
or
aas
add
inc
cmpb
add
repz
push
js
inc
dec
push
add
jp
sbbb
insb
int3
lret
popa
jle
cmc
aaa
bound
lahf
jl
aad
insb
call
test
dec
roll
adc
ljmp
inc
pop
xchg
push
xchg
pop
gs
out
testl
push
xor
jle
shll
dec
adc
xchg
inc
rclb
test
jae
jge
pop
inc
je
pop
bound
out
cs
pop
pop
inc
into
jge
mov
scas
pushf
icebp
xchg
test
push
into
mov
mov
or
test
inc
add
push
addr16
mov
int3
mov
fidivs
jbe
pop
xor
popa
inc
add
push
js
mov
cmp
insl
outsl
or
jp
pop
out
dec
push
iret
jg
adc
jl
idivl
push
mov
enter
cmp
mov
insb
addb
adc
cmc
aam
addb
nop
or
sbb
sub
out
mov
pop
insl
test
call
sub
fwait
stc
shlb
mov
cmp
cmp
loope
les
nop
repnz
push
and
jne
adc
sbb
iret
inc
aas
aam
pop
mov
clc
enter
scas
xchg
jl
sub
int3
int
mov
pop
ljmp
out
frstor
push
xor
lods
lods
mov
jle
fcmovnb
adc
mov
xchg
fcoml
xor
dec
mov
movsl
pop
mov
fidivrl
fdivr
push
in
push
jg
insl
icebp
flds
out
or
push
outsl
cli
fbld
cmpsl
or
cmova
push
push
jecxz
out
jge
cli
mul
dec
xchg
push
mov
sbb
subb
mov
adc
pop
lahf
add
push
aad
and
xchg
out
frstor
or
add
lret
dec
dec
add
out
enter
cmp
fidivs
mov
sbb
adc
cmp
mov
or
add
das
jecxz
or
mov
xor
sbb
jmp
push
dec
inc
xchg
decl
aaa
orb
mov
lret
pop
jl
mov
outsb
pushf
js
mov
add
xchg
in
fdivl
iret
mov
jle
xlat
pop
sub
and
xchg
sub
pop
jno
mov
push
jl
sbb
ljmp
daa
inc
clc
xchg
loop
mov
cmp
jne
mov
rcll
jns
pop
ss
mov
lock
pop
scas
ficompl
pop
jno
sahf
les
xlat
mov
dec
and
add
clc
xchg
mov
call
enter
sbb
les
in
adc
dec
insl
fistps
cwtl
push
cmpsl
xlat
mov
xchg
sub
cmp
loopne
insl
fsts
icebp
out
ja
pop
cmp
insb
cltd
xor
adc
add
aam
sub
gs
cmc
cs
mov
mov
cmpsl
jp
push
mov
lods
mov
insl
lret
into
bnd
out
bound
jae
gs
fmull
and
and
xchg
sub
sbb
jne
xchg
push
pusha
cmp
add
jo
cwtl
aaa
dec
sti
ljmp
mov
fs
loop
add
gs
mov
sbb
lcall
or
lods
push
movsl
jns
add
lcall
jbe
mov
or
in
inc
call
or
lea
pop
clc
sbb
push
in
rorl
push
sbb
mov
lods
enter
repz
outsl
push
movsb
out
scas
dec
and
lds
cmp
mov
cmp
test
out
xchg
lret
mov
lret
sahf
mov
lds
lods
daa
mov
iret
stc
jno
cmpsl
lcall
iret
mov
inc
jmp
pop
mov
dec
mov
std
jne
add
and
repnz
push
insl
jp
sub
cmpl
adc
or
mov
push
and
loopne
push
sbb
loopne
xor
flds
addr16
ds
or
pushf
test
mov
or
mov
xchg
stc
rcrb
idivl
pop
pop
iret
out
or
lret
loopne
mov
push
pop
enter
xchg
popf
xchg
sub
sbbl
pop
xlat
popl
iret
mov
aaa
popl
imul
movsl
mov
xor
inc
lea
sti
test
sub
mov
dec
inc
popa
jns
mov
xlat
fisubs
idivl
out
pop
inc
pushf
xchg
jge
test
xchg
pop
clc
pop
ror
jae
test
daa
jbe
add
test
out
inc
out
out
push
sbb
sbb
iret
aad
call
adc
notb
test
jle
jne
cmp
push
divl
mov
lret
lret
sbb
stos
mov
scas
mov
sti
or
enter
int
clc
ror
pop
outsb
stos
push
fisubrl
cld
fcmove
testb
sub
scas
clc
xchg
test
mov
notl
repz
imul
fldcw
fdivrs
ja
out
rcr
insb
add
scas
or
or
push
movsl
pop
mov
sbbl
in
in
enter
roll
adc
addr16
adcl
mov
cmpsb
jg
cmp
lret
cmp
sbb
enter
stos
fcmovnu
fdiv
push
inc
cld
pop
or
add
xor
int
lret
cmpsl
jae
ss
jbe
mov
pop
iret
dec
scas
inc
stc
insb
push
inc
xor
sbb
inc
scas
dec
pop
sub
push
pop
xchg
in
rorl
adc
cltd
pop
xor
mov
sub
pop
int3
mov
mov
leave
lret
inc
sbb
or
adc
aad
push
std
fwait
xchg
jmp
or
lahf
mov
ja
mov
mov
lret
push
push
xchg
jl
jno
mov
xchg
nop
call
mov
or
mov
inc
test
mov
icebp
sbb
sub
ss
rolb
std
and
xchg
pushf
mov
ljmp
xchg
pop
subb
into
push
test
jecxz
mov
mov
js
and
and
mov
xchg
mov
pop
sub
mov
mov
cmpsl
mov
inc
or
adc
sbbl
adc
scas
push
adcb
cmp
mov
pop
mov
mov
clc
scas
cld
lea
shl
stc
push
cli
push
and
imul
or
in
push
insb
mov
popa
add
sbb
lret
insl
in
scas
inc
test
xor
cmpb
les
pop
mov
mov
nop
lahf
les
fidivl
leave
xchg
out
xchg
sar
pop
lret
movlps
clc
btrl
test
loop
mov
pushf
and
pop
repz
js
pushf
adc
stc
sub
lret
cmp
adc
out
push
pusha
jg
hlt
btc
pop
nop
stc
jl
movb
ffree
push
adc
nop
push
pop
mov
out
es
inc
mov
cli
xchg
xchg
scas
cmpsb
aaa
imul
sbb
popa
mov
mov
cmp
cmpsl
jae
arpl
push
insb
aad
mov
ja
sbb
sahf
in
sbb
push
ret
mov
and
imulb
sbb
in
faddl
sbb
inc
dec
push
jecxz
and
adc
mov
jecxz
sbb
push
in
jbe
dec
mov
js
inc
push
mov
jp
and
add
and
stos
iret
ljmp
xchg
iret
data16
mov
loope
sbb
fimuls
pop
sar
xchg
push
push
add
xchg
sbb
push
into
push
insl
clc
ret
fdivs
arpl
aas
mov
add
dec
inc
inc
div
lods
pop
daa
pop
push
mov
rcr
mov
pop
cwtl
push
adc
cwtl
mov
ja
es
xor
pop
aas
fcoml
xor
push
rcl
dec
mov
xchg
out
xchg
shl
push
ret
mov
ja
andl
daa
lcall
jno
cmc
out
mov
daa
pop
push
push
das
cmp
sbb
push
push
pop
cmpsl
pop
mov
xchg
das
push
repnz
ret
loop
and
rcrl
insl
push
mov
jae
insl
pusha
je
outsb
lret
das
add
pop
mov
aad
stc
fists
add
fucom
push
icebp
in
rorb
jmp
mov
insl
insl
leave
push
pop
push
jno
ds
pop
pusha
inc
mov
jmp
aaa
int
fmuls
jp
and
cmp
jns
inc
out
xchg
sub
xchg
pop
and
inc
dec
ret
xor
repz
xchg
repz
xor
mov
ret
mov
cwtl
inc
inc
fwait
xlat
sbb
mov
pop
ror
in
sti
sub
fsubrl
and
aaa
std
mov
xchg
sbb
dec
xchg
cmpl
and
lret
in
or
jnp
lods
frstor
loop
ljmp
mov
sub
jo
loope
subb
cmc
test
dec
shll
fsubrl
fiadds
xchg
inc
sbb
pop
mov
pmuludq
fsubr
jb
xchg
and
in
cld
sti
test
aad
cwtl
addr16
jmp
jge
sbb
and
push
cltd
and
les
inc
sbb
sbb
mov
xchg
call
cmp
aad
mov
outsl
sahf
mov
adc
push
dec
inc
inc
stc
lods
or
cmp
in
jbe
test
cmp
jbe
stos
sti
fldcw
sub
js
out
lods
mulps
out
cmova
fldt
sbb
push
jno
add
lret
sbb
in
jae
sahf
hlt
mov
popf
pop
out
insb
fsubr
mov
push
sub
pop
xor
lds
mov
pushf
ret
jg
push
xchg
ja
jge
adcl
xor
bound
push
cmpsb
dec
inc
and
orb
int
mov
movsl
mov
in
iret
cmp
sbb
jbe
stc
js
mov
outsl
xor
push
inc
add
and
jae
push
scas
cmp
je
push
and
outsb
xor
dec
call
push
in
jo
stos
xor
ds
inc
sub
stos
sbbl
imul
cmpb
nop
loopne
mov
sub
dec
fwait
sahf
std
mov
comiss
xchg
cld
data16
icebp
mov
adc
cmp
addr16
mov
lds
jge
test
fstpl
les
cli
or
push
jl
xor
pusha
and
jb
negl
orb
lret
faddl
jo
xor
mov
popf
iret
inc
cmp
jl
mov
mov
mov
out
pop
out
mov
loop
cmp
lret
jg
lea
je
movsl
pop
dec
fwait
sti
push
sbb
cmp
xchg
dec
ljmp
in
pop
pop
cmp
xlat
lods
hlt
les
mov
test
inc
pop
insl
jbe
cli
jl
dec
xchg
xchg
or
js
xor
or
mov
sub
add
mov
jo
aaa
std
xlat
adc
loope
clc
xchg
mov
outsl
xlat
sub
aas
not
inc
aas
loop
outsb
and
mov
mov
mov
pop
rorl
mov
or
fsubs
fidivrl
mov
pushf
xchg
in
imull
mov
ljmp
inc
cmp
popa
notl
jmp
test
sbb
rcr
xchg
in
mov
shl
cmpsb
push
clc
and
xchg
pop
push
hlt
dec
jp
sbb
inc
loope
rol
sub
xchg
mov
jns
mov
mov
cmp
lret
aad
xchg
les
sub
roll
xchg
ret
cmc
mov
jb
mov
and
inc
shlb
cmp
clc
les
mov
orb
inc
sub
fldl
dec
outsb
cmpsb
pop
xorb
mov
push
fwait
daa
lahf
jmp
jns
inc
jne
mov
mov
pop
lods
imul
sbb
mov
dec
je
sarb
cmpl
inc
jl
fwait
push
outsl
xor
or
mov
mov
repnz
ljmp
or
pop
divl
rep
shl
jno
out
insl
imul
cmp
les
jecxz
testb
lahf
pop
mov
rorl
into
and
cmp
add
movsb
dec
sub
pop
cmpsb
xchg
sahf
mov
inc
fimull
mov
ja
xchg
or
mov
movsb
push
jp
shl
cmc
mov
adc
imul
lods
cmp
mov
sbb
sbb
and
ss
mov
jge
aas
pop
pop
sub
orb
push
rep
push
cmc
pop
stc
stos
insl
adc
hlt
add
pop
jmp
dec
xchg
pop
mov
out
iret
ficoml
cmpsl
and
adc
push
cwtl
jl
hlt
insb
loop
push
add
into
test
cmp
cld
jae
sub
mov
xchg
adc
test
pop
sar
add
repnz
or
pop
push
xor
pusha
andb
jne
pop
aaa
test
addr16
rcrb
inc
xchg
insl
sbb
lods
xchg
or
sti
cli
shrb
fists
iret
jno
int
rorl
jo
shll
cmp
int3
enter
mov
jne
arpl
and
lret
aaa
dec
in
sbb
roll
dec
add
sub
sbb
insl
mov
adc
push
push
inc
fiadds
scas
mov
hlt
pop
xor
pop
pop
clc
sub
aam
mov
out
ud1
popa
and
dec
gs
pop
pop
fwait
jle
pop
xlat
xchg
out
or
leave
aas
aam
sub
movsl
pop
sbb
sbb
inc
outsl
xor
js
sub
test
or
mov
orl
lahf
jecxz
xchg
lahf
std
sub
imul
mov
push
scas
outsb
fldenv
cli
pop
aad
mov
sub
pop
inc
fs
in
push
in
xor
insl
xor
test
adc
jb
pop
add
ljmp
cli
sbb
pop
xchg
sbb
int
jecxz
xchg
das
les
aam
les
sub
add
pop
es
lcall
xor
sbb
xchg
es
push
bound
popf
out
jbe
out
xchg
adc
or
adc
lods
xor
inc
addb
imul
dec
aaa
or
insb
dec
push
mov
repz
adc
psadbw
inc
xchg
roll
adc
jne
in
out
outsb
rcrl
fwait
lret
mov
mov
dec
std
mov
cmp
jb
cmc
jb
int3
das
aam
movsb
popf
shrb
scas
dec
aaa
icebp
xlat
sub
repnz
popf
jns
out
ret
ret
sbb
clc
mov
or
int3
jbe
mov
pop
mov
cmp
sahf
scas
mov
mov
mov
push
and
jp
cmc
cmc
shl
push
mov
in
stos
adc
loopne
or
test
add
or
sti
sub
inc
jg
lahf
cltd
add
push
inc
into
or
movsl
cmp
sbb
add
fadd
shlb
ljmp
stc
or
ror
stos
fwait
push
fildll
push
pushf
mov
sbb
pop
call
idivb
push
call
and
stos
sub
add
imul
xor
icebp
imul
mov
cmp
mov
decb
into
mov
pop
mov
pop
push
push
rorl
scas
aaa
subl
or
xor
insl
jge
or
lret
xor
fistpll
jae
pop
fwait
imul
dec
les
or
cmp
ss
add
sub
cmp
out
fwait
push
xchg
leave
xchg
jnp
notb
pop
jecxz
mov
adc
je
data16
aad
movsl
push
sbb
in
inc
out
mov
loope
or
fisubl
rolb
jle
jae
jge
ret
fwait
mov
pop
push
lods
mov
pop
xchg
fdivp
xor
push
xor
jns
pop
inc
sahf
aaa
xchg
clc
in
jns
outsl
xor
jge
cmp
xchg
hlt
fwait
or
adc
jmp
lock
sbb
mov
aad
fidivl
add
pop
insb
sbb
sub
cmp
pop
mov
cmp
xchg
sub
test
mov
mov
xor
mov
xchg
mov
subb
decl
ror
cmp
fnstcw
gs
or
push
adc
mov
shlb
sub
fildll
add
lcall
js
mov
sub
adc
mov
scas
pop
push
aas
cmp
lret
xchg
and
pop
mov
sbb
sub
mov
or
call
pop
insl
sbb
jge
enter
sub
scas
mov
int
ljmp
leave
cmp
popf
imul
sbb
mov
pop
fwait
jns
loope
add
adc
or
ja
sbb
cmp
orb
sub
fdiv
pusha
outsl
or
stos
fcmovnu
scas
mov
inc
and
mov
mov
jns
push
cmpsb
popa
cld
flds
pusha
xor
jmp
adc
stos
add
mov
data16
shlb
fistpl
shll
test
stos
mov
add
or
ja
dec
loope
mov
lret
jmp
push
shr
mov
in
sahf
mov
push
inc
dec
arpl
sti
gs
repz
es
add
jae
xchg
sbbb
jl
repnz
rorb
mov
in
lahf
test
cmp
cmc
jl
pusha
jmp
inc
xchg
cmc
shll
or
sub
jns
negl
jno
testl
les
aas
xor
fildl
sub
mov
out
mov
dec
mov
mov
or
ss
rorl
cmp
adc
out
xorb
xchg
in
push
or
mov
inc
jle
xor
pop
je
xchg
out
lods
repz
popa
mov
push
mov
xor
pop
imul
cmp
fcoms
aam
lods
pop
out
xor
test
xchg
rclb
out
loope
call
lcall
dec
xchg
aad
daa
sub
sti
fcoml
pop
add
cmovge
xor
arpl
mov
add
push
xchg
stc
jbe
and
aas
add
xchg
notb
push
test
pop
movsb
pop
cltd
inc
xor
inc
orl
cmp
pop
cwtl
mov
ret
push
mov
sbb
shll
cmc
mov
repz
int3
mov
adc
and
push
xchg
cmpsb
test
mov
std
fdivrl
hlt
pop
enter
es
enter
cltd
int3
inc
lock
int3
cwtl
sub
dec
stc
enter
es
std
jae
stos
xorl
and
inc
sbb
insl
adc
orl
iret
lret
or
arpl
sbb
ljmp
pop
popf
xchg
add
leave
andl
xchg
lcall
sbb
mov
fimull
xchg
pop
xchg
xor
sbb
das
jg
inc
out
mov
shl
icebp
push
xchg
push
mov
and
test
push
mov
in
adc
push
aam
in
lea
mul
imul
stos
filds
push
ja
test
mov
mov
insb
sub
or
mov
lahf
sbb
sub
mov
lods
les
adcl
cmp
lds
or
fcmovbe
clc
mov
mov
mov
lods
push
dec
aaa
cmp
cmpsl
sahf
popa
pop
push
imul
sarl
mov
mov
cli
jmp
in
cwtl
xor
mov
add
out
dec
idiv
xor
mov
jne
pop
lock
faddl
mov
xchg
movsb
cmpsb
sbb
jns
mov
mov
adc
mov
lock
lock
in
js
shl
lcall
cmp
subl
jle
jne
add
adc
cmpsl
fwait
scas
out
andb
xor
dec
movsb
in
aam
pop
or
inc
push
jnp
jp
pop
push
inc
insl
cmp
push
cmp
ja
jle
dec
or
nop
pop
add
and
jl
inc
aad
adc
or
aad
mov
xor
push
rcr
cmpsb
mov
mov
out
mov
sahf
iret
push
xchg
inc
cli
je
inc
test
stc
sbb
stos
cmp
mov
lock
enter
in
aad
mov
scas
mov
xor
sub
out
pop
out
les
scas
lock
xchg
jmp
mov
mov
xlat
fs
ret
cmp
int3
cmp
inc
in
jl
push
popf
mov
andl
mov
cli
push
aas
cmp
mov
fistpl
lret
lds
mov
stos
push
arpl
shll
scas
mov
aaa
insl
in
mov
mov
int
mov
out
add
adc
and
test
stos
jne
das
or
dec
push
and
test
push
je
fs
repz
xchg
insl
inc
pop
rcr
fsubs
out
cmp
pop
std
xor
outsl
daa
fs
cmp
mov
test
fisttpll
shlb
sahf
add
sbb
adc
dec
out
testl
test
std
xor
mov
addr16
movsb
jecxz
js
jo
nop
scas
inc
adcb
ds
into
movsl
sbb
dec
ds
pop
adc
in
shll
sarb
lcall
bound
arpl
push
cmpsl
sub
jg
lahf
mov
mov
imul
sub
push
jae
scas
loope
lret
loope
popf
xchg
jb
push
or
repnz
cmp
mov
mov
mull
mov
xchg
fildl
push
aas
lods
sub
mov
jne
imulb
jmp
bound
cld
push
xchg
imul
adc
or
sbb
fwait
stos
repz
inc
xchg
mov
add
adc
loope
icebp
pushf
cmp
adc
sub
cmp
fs
xlat
ljmp
popa
xor
loope
mov
lock
mov
and
mov
xchg
jnp
aas
shl
cmpsb
or
mov
dec
clc
xorb
mov
lds
ss
outsb
mov
bound
movsl
cmpsb
adc
popa
mov
je
inc
sub
sub
gs
dec
in
popf
sbb
pop
mov
in
test
fisubrs
xchg
in
jl
add
or
and
or
pop
sub
pop
sahf
fdivp
push
dec
call
fs
test
dec
sbb
cmpsl
scas
fninit
xor
cmpsb
imul
lahf
cmc
cli
inc
mov
fisttpl
inc
test
sbb
in
sub
adc
lahf
jns
and
js
shrl
sub
popa
and
sbb
or
jnp
ret
or
xchg
lea
mov
sbb
imul
mov
jge
pop
sub
push
xor
cmpsb
jg
adc
js
mov
mov
inc
push
stos
xchg
int
pusha
pop
ja
sti
fimull
je
sub
cmp
fistl
or
inc
jb
pushf
int
xlat
in
shl
out
xchg
dec
push
es
movsb
js
mov
xchg
shll
lea
ret
and
hlt
shll
fildll
push
mov
int3
inc
xchg
leave
mov
imul
jg
inc
lods
std
sbbb
pop
and
repz
repz
inc
pop
mov
adc
mov
add
inc
data16
jge
or
xchg
das
inc
dec
sub
mov
xor
fiadds
xchg
jbe
mov
mov
lock
cmpsl
mulb
xchg
sbb
dec
fisttps
jmp
shll
fsts
stos
xchg
out
ds
loop
mov
xchg
jo
mov
setae
mov
jmp
mov
mov
push
mov
add
dec
and
and
jb
mov
arpl
ret
sub
hlt
cli
dec
or
mov
xchg
adc
or
mov
sti
or
inc
das
cmp
mov
pop
ret
testb
mov
and
je
scas
push
mov
jnp
test
xchg
fcmovne
sub
push
xor
or
rolb
xor
cld
jb
or
xchg
sahf
add
outsl
fcoml
mov
mov
jecxz
pop
aaa
pop
add
adc
iret
mov
jmp
jb
mov
scas
adc
mov
jae
bound
cmp
mov
mov
ss
rcl
in
scas
scas
and
jge
lds
or
test
jnp
loop
mov
sbb
add
push
cmp
nop
add
mov
int
xor
sub
mov
jns
jecxz
icebp
xchg
add
xchg
les
add
cmp
mov
jecxz
cmp
ror
imul
lret
xchg
gs
xor
mov
add
xchg
xchg
push
mov
xchg
xchg
int3
data16
scas
pop
sub
add
xchg
mov
sub
pusha
dec
dec
addr16
loop
hlt
mov
or
mov
sub
loope
aaa
mov
lods
sbb
aas
xchg
and
jl
bound
mov
sub
push
dec
adc
aad
lret
call
mov
outsb
out
sub
xlat
sub
lds
mov
cld
xor
cmc
pop
vpmullw
push
loop
enter
addb
dec
shlb
push
add
and
push
mov
adc
int3
pop
daa
push
xchg
cmc
imul
adc
lods
leave
je
sub
lods
push
mov
outsl
mov
fbld
fmull
jnp
mov
cmp
das
daa
int3
rorb
in
stos
xchg
add
jbe
inc
dec
mov
fldt
insl
call
icebp
mov
fildl
mov
lods
lock
and
jle
or
shl
aas
imull
xor
in
clc
xchg
jno
ja
ficoms
movsb
or
and
or
mov
lahf
xchg
dec
dec
pop
mov
rcrb
sub
nop
and
pop
dec
jne
sub
cmpsl
dec
ret
push
sbb
out
jg
xor
xchg
in
jle
cmpsl
xchg
adc
push
lds
mov
sbb
sbb
and
jbe,pn
sahf
or
inc
dec
xchg
js
leave
mov
sub
icebp
push
sub
push
orb
int3
pop
ja
sub
ljmp
loope
aam
insb
mov
into
enter
cmp
inc
imul
out
cs
mov
cmp
add
bound
shrb
in
push
xchg
and
cmp
cmp
aad
xchg
sub
daa
push
adc
xor
adc
pop
and
ficomps
movsb
and
cld
std
xchg
mov
sub
xor
jno
sbb
push
or
loop
push
dec
out
dec
fisttpl
add
loop
test
jmp
jns
cmpsb
sar
xchg
jb
mov
loopne
mov
inc
lds
ret
mov
pop
in
inc
sbb
jmp
cmp
stc
rorl
dec
xchg
dec
adc
sbb
xchg
std
dec
icebp
loopne
or
mov
clc
lret
xchg
loopne
adc
cmpsb
or
shll
imul
mov
push
imul
idivb
mov
pop
mov
iret
insb
dec
jae
lret
cmp
cmp
adc
mov
mov
repnz
cmp
outsb
hlt
scas
or
icebp
fcmovnu
adc
jmp
aas
int
fadds
daa
xchg
adc
dec
pop
imul
aaa
sahf
fidivl
sub
and
mov
mov
or
mov
lcall
mov
ja
xchg
mov
enter
loop
adcl
or
mov
call
seta
loop
in
outsl
adc
xor
or
xor
push
insb
or
pop
lock
loop
sub
mov
adc
xor
cmp
dec
mov
mov
ja
cli
mov
lea
push
xor
mov
mov
mov
and
adc
inc
out
inc
sub
mov
push
sub
adc
mov
out
enter
fiaddl
mov
dec
mov
xchg
lret
test
inc
scas
xor
mov
push
xor
test
lds
mov
daa
ds
mov
jns
sbb
xchg
add
xchg
inc
jne
lds
movsb
jae
xchg
pusha
rcrl
and
mov
xor
sti
into
out
leave
mov
outsb
xchg
xor
nop
out
xchg
push
icebp
inc
aas
sarb
adcb
sbb
shlb
dec
test
insl
stos
cmp
out
mov
clc
cmp
mov
add
dec
xlat
mov
gs
je
lahf
dec
and
rcll
push
jae
mov
dec
call
cltd
mov
call
inc
pop
xor
mov
or
xchg
sub
adc
ljmp
jbe
movsl
into
mov
lret
rcr
orl
lret
sub
xor
sub
dec
enter
dec
push
or
mov
cmpsl
jae
stos
adc
cltd
loopne
cwtl
mov
fmuls
pop
call
add
hlt
mov
or
aaa
enter
sahf
test
fildll
rclb
pop
lea
inc
push
pop
scas
sbb
in
mov
pop
mov
sbb
imul
mov
fwait
sub
and
popa
dec
faddp
pop
arpl
jecxz
aas
cmpsl
in
testl
pop
jmp
mov
add
sub
cmp
mov
cltd
push
fisttpl
and
xor
sub
or
jle
jecxz
fwait
sahf
sbb
lea
mov
dec
loopne
roll
es
xor
mov
call
pop
xlat
sbb
dec
sbb
cld
or
movsb
mov
jle
js
popl
and
add
cmpsb
bound
loop
repnz
daa
test
and
or
roll
and
or
ss
addr16
xchg
cmp
dec
aam
dec
mov
jnp
int3
adc
adc
popf
push
imul
das
jno
xchg
cmp
lods
xchg
dec
or
int3
push
out
subl
push
in
add
hlt
jo
push
adc
iret
pusha
call
push
dec
xlat
sub
notb
adc
inc
fs
in
xor
aam
cmpsb
jo
jg
mov
int3
mov
fsubl
xchg
insb
pushaw
cmp
sti
call
push
rclb
notl
jge
adc
sti
mov
and
dec
sub
fcmovnb
pop
mov
inc
push
dec
pop
mov
mov
cli
xchg
dec
pushf
mov
inc
std
add
arpl
xchg
add
ja
mov
lock
cmp
or
jmp
sub
sti
jae
dec
imul
jle
inc
jmp
sub
add
les
cmp
sub
clc
pop
sub
jmp
jl
sti
jecxz
xor
mov
aam
and
lcall
ja
jb
lea
adc
icebp
push
cmpsb
insl
jns
fwait
pop
lcall
ret
hlt
jne
pop
add
cmp
repz
pop
ljmp
and
adc
or
movsl
and
xchg
push
stc
and
iret
xchg
test
cmp
mov
and
or
sahf
test
out
push
dec
call
icebp
scas
lahf
xchg
lcall
mov
sahf
add
pop
stc
rclb
jl
lods
adc
lock
xchg
test
or
loop
outsl
jge
pop
loop
test
mov
mov
out
dec
test
pop
mov
mov
jg
adcl
cltd
dec
je
fs
gs
dec
rorb
sub
call
insl
inc
ds
mov
fcomps
outsb
mov
into
xlat
pop
or
sub
stos
push
adc
mov
es
lcall
rclb
clc
add
jecxz
jae
xor
lods
jb
out
loope
cld
mov
mov
inc
lock
rclb
lock
mov
xchg
jno
and
arpl
xchg
sub
dec
cmpsb
ljmp
scas
mov
cmp
mov
push
sbb
push
inc
xchg
push
adc
test
pop
wbinvd
lcall
mov
stc
fsubs
clc
jb
mov
in
mov
cs
jl
push
sub
cmp
arpl
dec
in
mov
mov
lods
jne
stc
pop
lds
mov
ja
dec
ret
loope
push
push
lcall
push
xor
add
push
cmp
pop
shrb
dec
test
or
pop
push
mov
mov
lret
lods
push
insl
push
in
popf
hlt
sub
and
inc
jle
dec
mov
dec
push
js
jmp
insl
pop
sub
pusha
jge
shll
jb
daa
sahf
outsb
adc
out
mov
xchg
dec
std
jg
add
leave
cmp
push
mov
inc
or
icebp
fwait
std
mov
mov
rcl
add
pop
scas
adc
adc
sbb
mov
lods
or
pop
cmp
shrl
movsb
in
test
mov
gs
outsb
ret
sub
adc
cs
jns
cs
add
dec
repz
out
adc
xchg
mov
enter
ja
jo
aad
push
cmpsl
ficompl
cmpb
ds
jmp
adc
dec
sbb
call
cmpsl
xchg
xlat
mov
dec
dec
inc
stc
and
xor
sub
mov
repz
cltd
jnp
adc
push
push
out
ljmp
or
leave
ss
cmpsl
adc
dec
xor
xor
xor
lods
aam
inc
stos
add
mov
sub
aad
mulb
out
sub
mov
lret
adc
nop
mov
adcb
sbb
js
sub
cs
cmpsb
mov
inc
in
decb
popf
leave
mov
pushf
xchg
add
and
xor
fsub
fistpl
pusha
inc
int
insl
and
sbb
and
repz
test
dec
xor
add
popl
imul
xor
sbb
sti
or
adc
scas
add
push
mov
add
mov
cmp
aas
fdiv
cwtl
into
push
sbb
xor
and
mov
sub
je
sbb
mov
jg
jnp
sahf
xchg
mov
fs
hlt
clc
out
jae
dec
dec
daa
leave
fisttpll
in
push
fcoms
fsubl
lea
call
out
or
xor
shlb
imul
rcl
addr16
test
dec
push
or
sti
mov
cmp
jg
add
sub
repz
adc
mov
or
sub
js
xchg
jne
andl
gs
int3
dec
pushf
imul
insb
push
stos
subb
test
repz
mov
sbb
pop
add
fldenv
cmpsl
outsb
lahf
daa
sbb
test
hlt
mov
cs
arpl
enter
xchg
nop
lcall
xchg
std
add
movsb
jp
fisttpl
lcall
sahf
les
mov
xchg
mov
xchg
fstpt
dec
js
mov
jle
and
addr16
xchg
fistps
daa
stos
cmpsl
dec
aam
xor
ds
shrb
int
out
std
mov
pop
dec
icebp
sbb
fsubrp
pop
adc
push
lods
pop
out
fstpl
fstpl
jb
xor
dec
and
and
mov
ljmp
sub
bnd
imul
cmp
mov
xor
jnp
fnstsw
jae
jns
xchg
out
pop
ljmp
aad
adc
cmp
mov
sub
dec
jae
xor
sarl
and
pop
stos
xchg
add
sbb
pop
testb
inc
add
call
mov
enterw
lods
loope
lds
andl
out
dec
push
leave
sbb
pop
mov
sub
push
addr16
cmpsb
shll
push
lcall
test
lods
aas
sbb
rorb
jmp
gs
mov
subb
movsb
mov
arpl
mov
aaa
jecxz
fmull
inc
xor
test
jae
cmp
in
xchg
cmp
xchg
mov
adcb
jecxz
loopne
dec
mov
ret
sub
sbb
mov
orb
in
ret
faddl
or
push
ljmp
pusha
mov
dec
movsb
and
mov
xchg
lret
enter
mov
push
mov
loop
loop
adcl
and
es
cmovp
xor
imul
mov
in
sbb
add
pop
test
lds
out
push
dec
and
add
pop
les
addr16
fmuls
cmp
cmp
sub
lahf
dec
popa
sti
rolb
add
subb
aaa
insb
jl
sar
add
das
insb
mov
std
leave
lods
das
mov
jp
mov
push
xchg
xchg
out
incl
sub
xchg
fwait
sbb
fdivs
adc
pop
in
xchg
data16
add
shll
or
lods
add
pop
cmp
leave
lods
dec
shll
lods
cmpsl
xchg
stc
sbb
add
ret
arpl
or
sbb
sub
in
mov
cmpsb
push
ja
and
test
sub
xchg
shll
es
sti
lods
mov
xchg
and
imul
clc
jb
lods
sub
adc
mov
lea
mov
and
dec
adc
pop
push
mov
fildl
cmp
jno
pusha
movsl
mov
mul
test
mov
cwtl
and
and
add
pop
inc
jbe
lods
sbb
shrl
cmp
jge
pop
adc
and
hlt
fstpt
aas
cmpl
test
and
shrb
fcoml
add
xor
add
daa
jnp
imul
es
lds
imul
pop
cld
loop
ret
fmuls
jmp
ret
add
adc
mov
in
inc
cmp
jb
or
sub
fs
mov
jae
rol
lcall
dec
cmpsl
push
dec
fwait
out
loope
cmp
ljmp
nop
ret
mov
cmp
fistpl
ficompl
sbb
fnstcw
sahf
push
adc
and
dec
and
mov
sahf
nop
xor
push
std
pop
gs
adc
sbb
fucom
ljmp
test
stos
daa
ja
cs
push
in
xlat
jo
mov
lret
fwait
jo
js
push
iret
sub
cmp
rorb
loop
sub
test
adc
lock
and
imul
das
pop
stos
cmc
mov
insl
std
push
int
cwtl
push
adc
bound
or
stos
adc
and
js,pn
xor
push
cmp
and
push
icebp
push
test
jno
mov
lret
mov
push
out
lret
test
and
push
outsb
scas
xlat
jge
fimull
push
in
sbb
aaa
add
jb
sub
pop
test
sub
ret
addr16
ret
xchg
add
pusha
mov
in
push
mov
lods
jb
clc
jmp
mov
pusha
lods
add
jmp
cmp
daa
dec
lods
dec
out
mov
sub
mov
inc
dec
lahf
inc
fwait
or
shlb
adc
enter
lret
std
cmc
push
inc
add
aas
or
fiaddl
push
jns
in
jo
repnz
pop
ret
in
mov
or
and
inc
add
clc
and
push
xchg
fsubrp
dec
ljmp
or
push
sub
push
cmp
out
sar
lds
aam
sub
sbb
add
cmp
and
mov
sbb
xchg
js
add
andl
movsb
lahf
roll
push
jmp
add
push
sahf
pushf
add
sbb
fidivrs
xor
mov
push
fnsave
sti
idivl
mov
sbb
loope
push
call
movsl
mov
jmp
mov
enter
imul
cli
dec
and
daa
dec
cli
testb
inc
push
int
dec
popf
xchg
loope
xchg
out
xor
and
test
dec
mov
popf
jge
in
fdivr
xchg
inc
dec
mov
jl
adc
dec
add
adc
enter
fnstsw
adc
adc
outsb
test
pop
xchg
push
or
sbbl
jbe
xchg
sbb
jo
out
mov
lea
mov
imul
in
add
mov
dec
inc
faddl
lcall
cs
push
mov
sub
test
xor
loope
sbb
insl
push
pop
push
cwtl
jo
enter
rcrb
sub
insl
ret
push
fcmove
pop
test
popf
in
inc
jl
push
and
lret
scas
push
lret
push
sbb
imul
stos
imul
dec
or
lods
mov
mov
xchg
xchg
lret
les
into
adcl
stc
call
or
mov
sti
xchg
push
push
add
mov
out
push
popf
jle
pop
xchg
sbb
vmovapd
mov
inc
ds
lret
out
fcompl
push
mov
test
cwtl
sarl
inc
cmovne
add
iret
xor
bswap
pop
gs
xchg
outsl
cmp
cmp
test
hlt
dec
lods
int
sub
mov
addr16
jno
mov
mov
and
test
mov
mov
sarb
in
sbb
mov
mov
jo
push
inc
adc
mov
push
mov
shrb
mov
sbb
pop
into
addr16
out
jnp
ret
je
roll
push
dec
mov
lret
out
jp
pop
sti
inc
dec
data16
in
ja
push
insb
mov
sub
pop
pushf
sbb
xchg
and
insb
into
les
test
xor
cwtl
dec
mov
xor
je
pop
or
push
mov
pop
pop
int
scas
sbb
adc
test
mov
and
into
lds
ret
push
jbe
sub
and
lods
pop
testb
mov
adc
cmp
in
scas
pop
xchg
jne
lcall
pop
inc
mov
cli
mov
push
test
rolb
daa
data16
mov
int
lds
fwait
jbe
sbb
xchg
repnz
jb
in
mov
lcall
cmp
je
popa
ja
xor
fs
push
jl
loopne
pop
out
mov
insb
int
fiaddl
add
push
inc
addr16
ret
mov
mov
fstpl
pop
xor
or
cmp
pop
daa
jl
jnp
xchg
push
inc
cmc
mov
pusha
add
jnp
mov
adc
mov
cld
push
sahf
popf
ja
fwait
and
fbld
or
dec
dec
sbb
testl
mov
mov
adcb
test
fldt
pop
pop
mov
push
inc
out
and
pop
and
jecxz
out
inc
in
sbb
frstor
popa
pushf
incl
inc
adc
testb
adc
cmp
or
pop
fsubrs
mov
outsl
push
push
shrl
cld
pop
ljmp
or
stc
pusha
xchg
lods
mov
cmpb
mov
gs
or
jo
les
dec
add
jle
lret
rorb
cmp
scas
rorl
xlat
xchg
cmpsl
cmp
pop
and
in
loope
fdivl
dec
and
push
leave
sub
shrb
add
dec
pop
fcoms
int3
add
stos
mov
dec
stc
nop
dec
mov
cwtl
movsl
mov
inc
adc
in
push
pop
es
xchg
test
xor
sti
xor
ss
inc
aaa
aam
aaa
sub
pop
sarb
pop
jo
fdivrs
fcomps
ljmp
xchg
inc
mov
sbb
pop
loopne
push
mov
stos
mov
mov
xchg
push
stos
add
cld
add
inc
hlt
mov
rcll
xor
je
xor
in
push
clc
or
xlat
daa
xor
adc
stc
aaa
inc
xlat
mov
mov
or
jne
dec
insb
pop
jnp
in
ret
lock
loop
xchg
or
icebp
aad
push
ja
cmp
pusha
sub
jl
mov
lock
ficoms
ret
loopne
lret
cmpb
addr16
shl
add
or
push
pop
mov
int3
xchg
pop
aaa
mov
in
fisttpll
enter
stos
sub
add
rorl
or
mov
test
repz
xchg
sarl
xlat
sub
addb
int
inc
cmpsb
dec
sub
jns,pt
cmp
or
icebp
loop
repnz
cltd
mov
and
gs
shl
jge
stos
push
cmc
out
shrb
xchg
lret
aam
ljmp
xchg
pop
mov
mov
cmp
fdivl
adcl
mov
pop
sbb
mul
mov
xor
xlat
mov
aas
mov
cli
in
or
outsl
jmp
sub
js
push
aaa
xchg
cmp
push
inc
out
mov
sub
dec
pop
daa
add
in
xchg
sub
lock
pop
push
push
les
pop
inc
cs
ljmp
pop
mov
jp
clc
stos
lret
mov
fdivl
cmp
mov
call
int
jae
xchg
jge
push
push
jg
or
loopne
ja
mov
js
sti
xchg
lahf
outsb
inc
fists
mov
cld
xchg
push
cmp
xor
dec
xchg
negl
addb
mov
sbb
loope
nop
jno
aad
decl
mov
fnstsw
cmp
sbb
mov
jmp
enter
add
loope
aam
sbb
mov
rcll
fxtract
mull
dec
ret
pusha
shr
bound
inc
mov
pop
fnsave
pushl
testl
out
pop
mov
lods
inc
ja
pop
dec
fldcw
pop
push
lds
jnp
nop
xchg
inc
mov
cmp
xchg
pop
out
fimuls
xchg
pop
adc
sub
jbe
fisubl
mov
subps
aam
or
add
jg
repnz
fistpll
scas
repz
add
in
call
push
das
nop
jmp
insl
sbb
push
pop
mov
and
mov
adc
jmp
and
lss
insl
popa
lahf
sub
mov
inc
jbe
mov
push
pop
inc
jge,pn
cmp
cmpsb
sbbb
dec
out
or
mov
cmc
into
inc
adc
dec
out
inc
xor
jmp
sarl
outsb
bound
in
ret
into
ret
cmp
fwait
jecxz
xchg
jnp
inc
mov
dec
jge
loope
push
ret
push
shr
add
int
imul
test
mov
push
adc
cmpsb
jns
rcrl
xchg
cli
outsb
adc
xchg
shrb
xor
data16
jne
cmpsl
pop
je
xchg
lea
out
add
pop
movsl
divl
push
jecxz
inc
jl
lods
inc
lret
je
pop
faddl
and
loope
pop
pop
push
in
cmp
adc
mov
loop
inc
cld
cwtl
addr16
add
out
idiv
shlb
add
mov
cmp
sbb
popf
pop
fwait
sbb
add
mov
dec
cmpsl
xor
pop
sti
fldt
movl
call
push
fs
jp
int3
mov
hlt
adc
inc
jae
xchg
sbb
push
inc
adc
mov
aam
shl
push
ret
andb
movsl
mov
push
arpl
mov
das
mov
xchg
push
lret
xchg
jecxz
std
test
rolb
jnp
sub
test
dec
test
xchg
sbb
sbb
xlat
cmp
push
mov
ljmp
mov
xchg
xchg
adc
pop
pop
gs
xchg
inc
cltd
mov
pop
cmc
cmpsb
jo
sub
mov
icebp
xor
iret
xor
xchg
lcall
xor
filds
outsl
movsb
mov
imul
sub
adc
popa
sub
pop
pop
jmp
loope
xchg
add
outsl
add
stos
jl
jp
push
out
mov
leave
push
mov
sub
mov
rclb
dec
cltd
les
add
rorb
sarb
mov
es
jmp
add
lock
mov
push
add
in
mov
add
and
sbb
ret
jecxz,pn
insl
shrl
popf
xchg
push
loopne
fwait
xchg
or
xor
xchg
mov
test
enter
jl
inc
pop
jge
or
outsb
jmp
sar
pop
cmpsl
cli
push
or
cmp
add
or
inc
adcl
xor
push
aad
or
inc
and
aad
jmp
jae
aam
cmp
and
inc
mov
adc
fbstp
int3
xchg
push
sub
pop
and
loopne
int
push
jge
dec
jns
sub
testl
int
xchg
dec
dec
xor
sbb
mov
clc
sbb
fsubrs
lods
dec
xchg
cmp
push
movsl
pop
bts
sub
dec
sar
daa
lock
mov
mov
lds
hlt
jo
dec
mov
scas
sub
mov
je
bound
push
xchg
loope
add
lahf
xchg
cli
mov
push
adc
mov
adc
xchg
fs
push
rorb
pop
and
or
repz
cmp
mov
loopne
ficomps
cli
pop
jo
jmp
scas
cmpl
jge
xchg
sbb
xchg
sysexit
push
mov
cmp
lret
lcall
test
xchg
cld
clc
jno
pop
dec
test
cmpb
fisttps
mov
and
testb
dec
or
dec
clc
mov
test
mov
cmc
mov
leave
out
fwait
popa
ds
lods
xor
stos
and
out
and
mov
rcll
imul
cld
or
push
dec
je
js
cmp
sar
xor
inc
int
inc
pop
sti
sahf
mov
adc
and
sbb
dec
sti
fmull
daa
adc
aas
fld
fmull
lods
xchg
dec
cmova
xchg
je
mov
addr16
test
mov
xchg
pop
push
jno
icebp
dec
add
mov
jne
jno
inc
movsl
rclb
pop
aas
cld
mov
sbb
adc
scas
or
xor
xor
pop
mov
jp
xchg
sub
cmp
inc
mov
cs
pusha
popl
dec
pushf
jo
lods
test
cmp
cmpsb
addr16
imul
mov
cli
hlt
add
daa
ljmp
hlt
pushf
pop
sti
movsb
nop
add
push
add
test
mov
mov
mulb
sub
insl
push
xchg
adc
aam
test
scas
mov
xchg
jle
push
test
shl
arpl
jmp
mov
repnz
sub
jl
mov
or
mov
int
add
mov
mov
shrb
or
add
insb
cwtl
add
loope
int3
fisttpl
js
mov
jg
std
fistps
mov
xchg
js
sbb
dec
mov
xchg
stos
mov
nop
push
ljmp
inc
pop
and
iret
mov
push
dec
js
int
dec
imul
fnstsw
xor
popf
xor
sbb
jp
mov
movnti
jnp
mov
dec
sti
dec
test
movsl
xor
lock
xchg
dec
test
dec
lret
fistl
sub
pop
push
dec
pop
out
jbe
cmp
lahf
fidivs
sub
dec
sub
repz
pop
pop
jae
ret
xchg
jp
sub
mov
out
dec
cs
in
push
mov
jo
popf
shll
lea
mov
mov
inc
ficompl
and
mov
pop
mov
jecxz
loopne
jo
dec
pop
fdivr
adc
or
loop
stos
mov
xchg
aaa
mov
std
sub
dec
in
sub
sub
cwtl
adc
jmp
mov
dec
out
push
clc
sub
jns
out
adc
scas
cs
in
or
add
lcall
xchg
lea
fwait
icebp
repz
xchg
outsb
hlt
repnz
in
mov
and
loopne
add
cltd
stos
add
add
xchg
out
imul
shl
add
cmp
inc
bound
mov
out
and
rorl
shlb
mov
pop
pop
xor
mov
arpl
loop
inc
nop
ds
xchg
mov
and
jmp
out
mov
mov
clc
xor
fs
sbb
add
jns
adc
pop
scas
mov
testl
sbbl
es
push
cwtl
je
lds
out
mov
add
mov
and
pusha
sbb
mov
mov
loopne
enter
ret
stos
mov
repnz
push
pop
pop
jp
fistps
or
ss
push
cmpsl
mov
in
push
std
xchg
les
xchg
pushf
aas
insb
test
dec
add
cmpsl
je
xlat
popa
divb
inc
cmp
lea
pushf
pop
mov
jle
div
ret
mov
sbbb
imul
fiaddl
lods
sbb
or
cmpsb
stos
enter
pusha
cli
mov
mov
inc
sub
sub
lahf
stos
or
push
lds
lds
dec
out
fcomps
addr16
inc
mov
xor
sub
cmpl
ljmp
imul
jno
pop
mov
ja
xchg
mov
pop
out
sbb
inc
xchg
fcoml
mov
inc
mov
and
ret
jmp
arpl
adc
xchg
inc
cld
stc
mov
add
std
jmp
in
fadds
add
movsb
in
lret
dec
sarb
jp
iret
stc
mov
rcrl
adc
ljmp
jge
mov
sub
incb
dec
nop
pushf
mov
mov
mov
inc
jl
mov
sub
push
pop
sbb
mov
mov
in
jns
rorl
mov
pop
test
out
jae
js
xchg
aas
mov
or
and
xor
lcall
cld
stos
in
out
adc
mov
clc
lods
pushf
pushf
stos
fiaddl
mov
lret
adc
adc
les
rolb
or
loop
jmp
cs
pop
pop
std
sub
push
mov
sbb
mov
sahf
lret
push
mov
out
andl
lcall
sbb
push
lahf
mov
mov
mov
not
hlt
sub
xchg
pop
xlat
out
jno
fldl
pop
xchg
int3
out
mov
xchg
in
lods
mov
insl
push
jns
push
cmp
pusha
je
pop
movsb
aaa
jge
mov
imul
dec
xlat
jno
cmpsl
popa
sbb
pop
adc
in
dec
dec
dec
cld
cmp
out
pop
cmp
jno
insl
sti
movsl
fdivl
push
fiadds
imul
pop
inc
stc
data16
push
xor
mov
nop
push
les
in
jle
mov
dec
insb
int3
xor
pushf
ljmp
icebp
xor
lcall
dec
jl
mov
cmp
dec
pushf
xlat
mov
adc
movsb
adc
lret
outsb
mov
lcall
pop
xor
nop
jb
repz
insb
in
addb
lret
div
cmp
mov
inc
mov
inc
gs
jno
dec
push
in
add
lret
cmp
test
inc
pop
dec
pop
rcrb
fistpll
dec
and
out
push
pop
dec
mov
fldt
pushf
je
jp
jge
lret
mov
push
mov
adc
jmp
xor
mov
sbb
sbb
pop
sub
jb
xchg
mov
aaa
lret
je
mov
ffreep
out
and
xor
rcll
lea
cld
insb
xchg
push
sub
inc
or
and
out
jbe
ret
mov
mov
push
fildl
cmp
xor
adc
subl
dec
xor
pop
xchg
js
out
adc
shl
jbe
inc
aas
sbb
mov
inc
cmc
mov
movsb
mov
jmp
out
ret
fs
dec
mov
inc
sbb
push
imul
test
loope
les
outsl
sub
rcrl
popa
aad
test
push
pushf
fldcw
daa
ljmp
add
jae
pusha
cld
in
in
or
mov
push
cwtl
test
pop
or
add
mov
dec
mov
call
jge
push
push
dec
movsl
push
push
sahf
dec
fwait
pop
push
jl
mov
mov
movb
jo
dec
fimuls
push
lcall
sub
cli
sbbl
je
lods
mov
xor
mov
lret
test
int
rorb
fs
cmp
mov
ds
std
adc
jge
pop
push
dec
mov
mov
mov
pop
and
inc
inc
push
pop
iret
mov
imul
push
push
and
mov
adc
xchg
mov
add
inc
dec
mov
inc
mov
or
in
push
push
jge
insl
xchg
jl
ds
jp
dec
into
mov
and
int
cli
orb
mov
cld
popf
enter
lea
and
xchg
sub
push
xor
sahf
sahf
or
mov
push
or
shrl
mov
dec
cld
out
cmpsb
sbb
xor
jp
jg
dec
mov
mov
pop
add
jne
jno
nop
mov
jg
jno
popa
pop
cwtl
addr16
push
sbb
lods
paddw
jl
idivl
mov
inc
xchg
add
hlt
jne
add
bound
xchg
ja
jle
jns
sub
ds
sub
inc
add
je
movl
jo
inc
and
in
imull
cltd
or
addr16
dec
mov
add
mov
mov
jmp
pop
mov
sbb
or
das
in
loopne
xchg
or
push
loopne
in
jge
sahf
inc
push
sahf
sub
xor
push
int3
pop
shll
fstps
lea
cmp
gs
aad
dec
loop
mov
xchg
ja
gs
lret
or
cli
scas
sub
aad
sbb
iret
data16
sarl
inc
mov
aam
popf
push
repnz
pop
xchg
push
jmp
and
dec
xor
loopne
push
jp
cld
add
add
int3
fmull
adc
xor
pop
cmp
and
test
gs
mov
ret
gs
xor
cmp
cltd
pop
fcoml
cmp
es
adc
fs
mov
pop
cmp
ds
in
sub
icebp
jnp
aas
add
lods
test
bound
mov
or
inc
in
ljmp
loope
outsl
mov
stc
add
clc
or
out
mov
pop
pop
mov
and
into
pop
sti
jle
fstl
js
dec
jg
push
pop
add
fildll
or
cmpsl
leave
mov
push
clc
int
faddp
mov
enter
hlt
outsl
bound
popa
ja
pop
pop
scas
ret
sub
xorb
sbb
pop
test
aad
jle
cmp
add
cld
jl
or
dec
jecxz
xor
pop
int3
mov
mov
pop
pop
pop
stos
pop
inc
cmpsb
ret
fcoms
push
stc
push
mov
push
xchg
out
out
mov
inc
dec
arpl
andl
push
jne
je
jb
xor
jae
iret
mov
fidivs
lret
in
sub
and
sbb
adc
xchg
movsl
xor
push
xorb
cmp
dec
fnstenv
xchg
sub
xchg
mov
cmp
xchg
push
cltd
xchg
nop
dec
mov
jle
mov
xor
push
sub
adc
ljmp
lcall
mov
int
adc
cmp
push
mov
sbb
sbb
dec
push
pop
out
push
cltd
les
sbb
xorl
cli
push
out
mov
push
cmp
xchg
icebp
in
push
push
movl
int
lods
add
fdivrl
jbe
lods
dec
sub
inc
sbb
push
bound
xchg
jb
jp
loopne
cmp
push
shlb
cmpsb
mov
mov
jb
mov
and
jmp
mov
inc
add
jo
push
sarl
jne
fists
out
rcl
xchg
mov
cwtl
jae
mov
mov
lds
sbbl
imul
xorb
aas
imul
or
das
mov
mov
into
adc
daa
sub
ret
shll
push
xchg
mov
dec
mov
adc
add
mov
adc
cld
push
sbb
out
push
sub
shl
mov
idivl
shlb
popf
pop
cmp
sbbl
int
pusha
lods
popa
mov
add
test
or
orl
inc
push
sbb
shld
popa
adc
mov
je
loope
dec
aaa
inc
pop
mov
fdivrs
inc
mov
dec
mov
fwait
mov
cmp
mov
add
jle
icebp
or
jg
sub
stos
xchg
sub
dec
or
pop
aaa
jp
sbb
aad
pop
dec
add
cltd
xor
sti
sub
ds
mov
andl
mov
fnstenv
jg
lcall
out
jmp
sub
das
lcall
lret
add
jge
data16
cltd
es
mov
mov
insb
insb
sbb
push
push
int3
push
fsubl
addr16
sub
cmp
jbe
mov
aaa
cmpl
dec
aas
stc
pop
sbb
aad
ret
sbb
jmp
dec
jbe
aaa
loope
pop
daa
aas
scas
cmp
iret
mov
aam
inc
mov
es
push
repnz
pushf
mov
jg
cli
stc
jno
iret
mov
pop
inc
jnp
jmp
fdiv
xchg
xchg
scas
jecxz
mov
push
test
ficoml
data16
sub
ljmp
xor
fsubl
mov
mov
and
std
push
mov
xchg
jno
jp
and
and
and
les
arpl
ret
insb
cmp
stos
dec
pop
and
sbb
xchg
sbb
cmp
inc
or
fidivrl
out
xchg
out
cmc
inc
clc
cli
cmpsb
fs
test
aaa
test
in
mov
inc
int
xor
inc
cmp
ret
aam
lods
std
movb
jl
mov
xlat
test
inc
push
mov
mov
pop
push
testl
aam
mov
movsl
sbb
mov
xor
jecxz
popa
insb
fwait
add
pop
jns
jo
add
cli
sub
mov
add
push
into
fstps
lods
cltd
pop
mov
out
push
xchg
aad
mov
fdivrs
loop
into
jo
jno
xchg
push
push
setne
push
nop
or
jl
pushf
inc
jb
outsl
int
mov
ret
add
testb
push
fstl
adc
bound
or
test
mov
nop
fbstp
aas
pop
adc
movsb
push
fcoml
push
fnsave
sub
imul
into
push
in
loope
cmpsl
in
push
cltd
cmpsl
aad
push
bound
lods
movsb
sbbl
cmp
or
stos
insb
fs
lods
inc
insl
addr16
ljmp
movsl
fnstenv
bound
int
xchg
fidivrs
mov
jnp
mov
stos
in
pop
jbe
mov
xchg
fs
repz
in
out
test
mov
add
mov
in
cmp
jns
lods
aaa
mov
push
jl
mov
lret
sbb
and
inc
test
cwtl
add
xchg
gs
pop
push
shlb
inc
inc
into
cmp
movsl
jne
int
sbb
dec
inc
in
xor
push
cmpsl
mov
adc
jne
and
fisubrl
movsl
clc
mov
ss
push
insl
cwtl
shrb
in
popa
sahf
in
xchg
adc
push
mov
lea
inc
add
into
aad
sub
dec
addr16
mov
enter
js
sbb
mov
repnz
adc
fidivrl
std
push
push
decl
into
cmp
stc
push
ret
je
ljmp
xchg
jmp
lods
shr
push
push
sbb
jno
or
jl
pop
and
mov
sub
sbb
stos
sub
es
jno
cmp
fisubrs
push
jg
fdivr
insb
or
hlt
es
push
and
mov
ljmp
fbstp
lret
shl
pop
loope
enter
pop
pop
mov
cli
into
in
ficoml
adc
mov
test
xchg
arpl
aaa
add
mov
sub
mov
jecxz
call
or
ret
pushf
pop
sti
dec
xlat
jbe
sub
mov
xchg
mov
into
mov
xor
stos
and
xchg
sub
and
xchg
jecxz
xchg
fimull
outsb
lcall
dec
repnz
imul
mov
xchg
inc
inc
or
mov
stc
enter
daa
aad
mov
imull
rorb
sub
out
insl
xor
push
jo
aad
cld
lock
cs
ficoml
stos
arpl
mov
xlat
in
rorb
pop
mov
adc
fistpl
insl
mov
ljmp
ljmp
adc
cmc
xor
adcb
jmp
pop
sbb
lcall
sahf
jo
cmpl
movsb
test
orb
mov
pop
aaa
loop
jp
test
fildll
mov
insl
data16
insb
jno
xchg
fucomp
or
punpckhbw
xor
insl
movl
daa
mov
mov
mov
jne
adc
xchg
call
and
mov
popf
scas
stc
negl
data16
test
popa
shrb
cmc
add
clc
cmp
out
in
aad
mov
into
xor
lea
sub
inc
out
fyl2x
std
push
mov
das
xchg
pop
or
add
adc
out
in
fildll
inc
add
in
bnd
and
pushf
ds
push
dec
mov
imul
cmpsl
popa
mov
std
mov
lcall
mov
push
xchg
add
enter
arpl
pop
push
movsb
jge
fidivrl
pop
sub
mov
daa
xlat
scas
roll
js
es
out
mov
das
jg
inc
roll
testl
mov
leave
mov
jb
jo
cltd
pop
idivl
push
out
or
xor
inc
outsb
sub
sarb
lahf
push
or
daa
repnz
aam
jnp
jbe
insl
pop
stos
xchg
adc
pop
bound
mov
adc
and
push
sti
xchg
dec
xor
lahf
cmp
stos
jnp
sbb
pmulhw
or
and
pop
pop
movsl
aas
xchg
fildll
andl
negl
addr16
pop
clc
mov
mulb
cld
cmc
sahf
pop
xchg
xchg
xlat
fmuls
loop
mov
push
loop
mov
mov
mov
sbb
ja
mov
xorl
out
mov
lahf
aas
mov
fimuls
scas
insl
shll
int3
mov
push
add
outsl
pop
out
js
inc
sbb
xlat
pop
push
cltd
dec
ja
push
xlat
mov
push
push
cmp
scas
inc
or
add
sahf
jb
stos
imul
insb
lahf
add
jbe
inc
inc
add
dec
mov
loop
repz
enter
xlat
jg
push
je
mulb
or
int3
inc
enter
sarl
outsl
fistpl
lcall
mov
outsl
addl
sub
mov
dec
in
pop
xor
in
dec
pop
repnz
and
lret
mov
test
pop
pop
sbb
enter
push
dec
pusha
in
sbb
lret
lcall
add
xor
push
insl
jnp
adc
arpl
jnp
inc
shll
add
jmp
xor
or
inc
movb
mov
lock
xchg
cltd
mov
mov
pop
jnp
lret
push
mov
in
xor
roll
stos
repnz
sub
mov
xchg
mov
mov
mov
out
xchg
xchg
pop
repnz
in
ret
inc
sub
subl
cli
dec
or
fcomps
jg
aaa
lock
xchg
lock
add
xor
enter
popa
stos
push
add
cltd
into
outsl
dec
test
fisubrs
insl
inc
pop
gs
xchg
xchg
push
push
out
inc
stos
setne
sub
das
rorl
adc
or
pusha
push
inc
iret
aas
sti
push
fwait
add
gs
movsl
adc
or
sub
push
adc
pop
insl
scas
mov
pop
not
scas
je
and
aad
sub
mov
adc
outsl
push
sub
dec
jo
dec
inc
ja
clc
mov
mov
test
pop
out
in
movsl
mov
jg
test
xchg
nop
cmpsb
dec
xchg
pop
xchg
mov
das
adc
jp
xchg
movb
mov
add
test
fcomip
jne
std
jno
aad
mov
mov
fadds
dec
mov
push
fs
in
icebp
call
cmp
dec
inc
or
shl
mov
or
xchg
mov
std
mov
movsl
aas
jae
packsswb
jbe
shll
dec
stc
test
dec
repnz
mov
mov
inc
push
imul
sarb
test
enter
aas
and
jno
imul
iret
cmpb
or
into
mov
cmp
call
lret
out
repz
push
shl
outsb
movsl
cmp
inc
test
out
ds
cltd
mov
adc
sti
nop
or
or
and
out
mov
cltd
jae
add
cmc
rcr
and
repz
sahf
push
pop
cmc
fdivs
xchg
push
and
sub
mov
cld
inc
fwait
jge
ljmp
pusha
jle
add
cmp
push
push
cmp
icebp
xchg
sub
clc
push
mov
inc
test
add
popf
loop
fs
sub
adc
push
into
lods
int3
jae
shr
fld1
mov
jae
push
rcl
jg
sbb
mov
testb
xor
jge
mov
pop
lcall
addr16
cld
addr16
lea
push
call
sub
cs
mov
push
rcll
mov
xchg
mov
shll
cld
scas
sahf
jns
out
sbb
call
inc
lahf
mul
jg
mov
xchg
popf
nop
dec
xchg
xchg
je
sub
sub
rcrl
xchg
sub
call
adc
addb
pop
addr16
push
hlt
insl
adc
loop
lods
andl
js
mov
push
cld
in
xchg
scas
ss
cli
in
xor
daa
fsubrl
rdmsr
leave
push
aas
fldt
insb
adc
movl
push
jnp
mov
or
xchg
or
lds
adc
cltd
lock
ss
sub
or
push
jg
inc
ret
jbe
cmp
fisubl
lea
cmp
lahf
cs
imul
arpl
pusha
cmp
test
arpl
das
xlat
or
sbb
pusha
mov
fstl
push
arpl
inc
sahf
adc
dec
or
mov
stos
xchg
sahf
ret
nop
dec
sbb
ljmp
lods
inc
mov
sbb
add
nopl
dec
xor
push
fmull
adcb
ret
repz
stos
xor
push
push
lods
or
lahf
setl
push
cmp
and
push
add
cmp
adc
fwait
daa
jne
mov
pop
jno
xchg
pushl
and
jge
add
push
int
push
jecxz
add
movsl
sbb
cld
rcrl
adc
icebp
mov
lea
sub
and
sbb
ret
bound
stos
inc
loopne
mov
push
scas
mov
ret
sbb
mov
inc
stc
movsb
xor
mov
int3
lock
sbb
ffreep
add
xchg
fmul
addr16
ja
dec
or
push
cmc
fistl
in
inc
sbb
pop
mov
negb
sbb
dec
mov
push
lret
pop
ja
cmp
dec
pop
stos
decl
add
aad
inc
sahf
mov
insb
mov
imul
out
sub
scas
icebp
mov
mulb
mov
jge
or
mov
add
das
js
pop
lods
call
mov
lock
lret
mov
add
cmpsl
shlb
dec
sbb
push
fiaddl
movl
ja
sub
and
dec
dec
jl
movsl
and
cwtl
cwtl
mov
outsb
pop
iret
push
leave
sub
repz
push
rcrl
adc
push
lret
mov
inc
orb
mov
ret
push
mov
xor
call
lcall
mov
xor
ret
push
fcomps
and
popf
xchg
jno
sbb
jecxz
scas
insl
sbb
fnstenv
idivl
imul
fimuls
mov
ret
add
out
pushf
sbb
in
cmpb
pop
inc
dec
and
adc
ss
cwtl
rep
je
mov
dec
ret
inc
out
add
inc
clc
repnz
jns
leave
push
rolb
mov
andl
xlat
push
mov
pop
xor
cli
dec
bound
xchg
jmp
nop
fwait
out
push
push
in
scas
and
aaa
jne
out
cmpsb
and
nop
frstor
imul
and
pop
pop
dec
or
popa
movsl
cmp
inc
mov
sbb
push
jo
movsb
cmp
mov
sub
dec
sbb
xchg
jno
xchg
fcmovnb
lahf
mov
rcrb
adc
mov
mov
or
into
mov
fcmovb
push
xchg
sub
ja
dec
xor
dec
jl
mov
pop
popl
cmc
cli
sarl
loope
sbb
pop
repz
jns
ret
push
cwtl
inc
mov
mov
inc
inc
imul
in
fcoml
jp
pop
cltd
sbb
out
outsb
adcl
xor
pop
cs
mov
adc
mov
stc
sub
mov
movsl
mov
arpl
push
mov
movsl
pusha
outsb
cmp
lds
and
rolb
sbb
pop
jmp
jb
jbe
mov
push
xchg
cwtl
or
nop
jecxz
repz
mov
mov
lret
push
dec
cmp
mov
fdivrp
addb
data16
push
into
das
imul
lea
notb
push
ss
ret
arpl
push
aas
sbb
pop
fwait
pusha
test
inc
dec
jl
testb
xor
add
mov
lret
sbb
mov
pop
popa
shrl
fcoms
push
das
mov
out
push
int3
push
ret
pop
or
and
addb
add
jne
pop
sti
cli
cld
jp
ljmp
push
mov
cmc
int3
lahf
xorl
push
lret
mov
pop
ret
mov
lods
testl
mov
je
push
call
jecxz
into
sbb
ficompl
insb
shll
out
es
lds
fwait
xchg
imul
xchg
add
push
inc
insl
in
or
sbb
js
lret
jbe
lds
xchg
pop
fsubr
jp
or
or
test
out
mov
sbb
dec
movsl
ljmp
or
aam
and
mulb
mov
xchg
cmp
popf
mov
int
and
cmp
sub
je
iret
add
test
dec
jae
pop
sbb
in
adc
stc
mov
ret
pop
push
sbb
xor
inc
xchg
loope
sahf
ja
jne
popf
stos
push
adc
mov
pop
dec
insb
aas
xchg
pop
pusha
sub
out
jge
es
push
dec
daa
inc
and
fstpt
xor
mov
dec
shrb
popf
and
adc
and
ret
out
mov
push
outsl
int3
addr16
movsl
shlb
data16
push
mov
ret
in
xchg
dec
out
jle
mov
xor
rcl
mov
mov
push
or
dec
iret
push
or
or
addr16
xor
mov
xchg
out
xor
ficoms
test
push
in
or
shll
mov
sbb
jmp
dec
pushf
repnz
loope
adc
insb
adcl
das
cli
sbb
add
pushf
jge
xchg
push
dec
sarl
insb
adc
push
xchg
mull
mov
dec
test
cmpsb
push
adc
int3
mov
inc
in
xchg
mov
out
xchg
sub
aam
ret
dec
pop
out
and
rolb
push
mov
sbb
mov
outsl
mov
and
adc
sbb
or
or
divl
fmul
mov
bound
sahf
ss
pop
int
clc
and
sahf
adc
movsb
fnstcw
shrl
into
jmp
cld
dec
jle
lahf
xlat
lahf
dec
xchg
add
and
adc
xchg
mov
rorl
in
ja
and
enter
push
movsl
add
jmp
lea
pop
out
and
or
mov
daa
adc
pushf
or
push
xchg
mov
xor
insb
xor
adc
push
data16
pop
or
iret
mov
add
jns
or
mov
lods
push
mov
daa
ret
inc
mov
popf
mov
fnstcw
mov
or
mov
insl
inc
imul
pop
pusha
jae
adc
xchg
testl
and
clc
enter
scas
jmp
adc
pop
mov
or
push
daa
out
out
enter
movsb
pushf
pop
scas
jle
mov
ss
mov
cltd
or
insb
sub
xor
push
rorb
les
xor
flds
mov
sub
pop
mov
or
xor
jp
xor
jbe
cmp
pop
outsb
popa
lahf
out
mov
out
inc
sarb
pop
add
inc
scas
cltd
adc
hlt
jbe
pop
addr16
pop
imul
ret
test
sbb
test
mov
add
and
dec
call
mov
cmc
mov
cmp
jle
fninit
into
iret
jbe
and
popa
frstor
lds
mov
loopne
cmpsl
loopne
test
lahf
movsb
and
pop
bound
sub
fistpl
push
jae
shlb
jns
or
ret
inc
jg
in
imul
sbb
cmp
mov
or
outsb
jbe
mov
xor
sbb
jo
adc
jb
int
sbb
rclb
mov
aas
in
inc
xchg
sahf
loopne
movsb
adc
cmpsb
mov
sbb
movsb
scas
sub
xor
fcoms
inc
dec
hlt
in
cmp
push
pop
and
push
jg
inc
ds
dec
insb
hlt
movsb
mov
add
jp
jge
shrb
or
sbb
xchg
push
inc
sbb
and
fildl
lea
lds
adc
inc
mov
cmp
mov
mov
gs
xor
cwtl
inc
push
push
scas
dec
stos
fld1
test
loope
mov
or
push
sti
adc
xchg
or
adc
push
int3
sub
pop
cmp
adcl
movsl
sbb
cmpsw
inc
or
iret
mov
rol
pop
push
fists
add
pop
shr
sbb
shlb
stos
loope
popf
es
inc
or
dec
mov
or
sub
xor
rclb
add
xchg
scas
and
adc
mov
scas
cmp
jp
xchg
jo
in
push
hlt
mov
cmc
jnp
add
cmpsb
xchg
movsl
fsubl
fimuls
test
sub
mov
hlt
inc
mov
xor
lahf
xchg
jp
and
icebp
mov
test
insb
ficoms
repnz
xor
int
imul
push
stc
lcall
imul
jo
movsb
fiaddl
mov
add
popa
xchg
ror
in
fnsave
dec
cmp
sbb
popf
add
sti
aaa
and
icebp
ffree
test
push
jmp
or
lret
mov
int3
ljmp
mov
add
sbb
push
out
ret
dec
cmp
cmp
pusha
lea
xchg
xorb
pop
testb
sub
aaa
inc
pop
out
xor
and
sub
dec
out
mulb
loopne
mov
sub
pop
es
scas
cli
cmpsl
add
lods
sbbb
jle
aam
je
loopne
lcall
fiadds
xchg
mov
mov
inc
vucomiss
adc
mov
popf
jns
sbb
.byte
.byte
.byte
