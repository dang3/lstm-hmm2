jbe
mov
popf
pop
imul
stos
or
jnp
mov
stc
mov
add
jne
inc
and
out
dec
nop
fnstcw
pushf
sbb
inc
std
aam
pop
jp
jbe
sub
cltd
jl
test
cwtl
sbb
or
stc
mov
push
ror
mov
jne
fdivrl
mov
icebp
pop
jl
push
sbb
cmp
dec
in
jb
fisubrl
pop
inc
aad
cwtl
je
aas
dec
mov
mov
add
movsb
fcoms
fstps
not
jo
inc
leave
pop
sbb
repz
fmuls
and
mov
lods
lret
mov
add
inc
lcall
test
pop
add
movsb
add
jo
cmpl
mov
idivb
cmp
and
jl
sub
cld
test
iret
aam
inc
xchg
xlat
mov
les
repnz
cmp
in
mov
mov
mov
push
xor
pushl
pop
dec
push
or
add
xor
pop
ficomps
push
jo
mov
ja
mov
xchg
inc
push
xor
loopne
fwait
enter
push
loop
in
and
xchg
jno
neg
add
push
and
mov
rcrb
mov
into
fcompl
adc
or
xchg
icebp
mov
and
pop
outsb
mov
cmpsb
cmp
dec
cld
xchg
aad
daa
pop
push
push
fdivrs
scas
cwtl
sbb
mov
adc
mov
add
lret
dec
xor
in
or
pop
dec
imul
push
sti
mov
in
aaa
add
mov
jp
imul
in
mov
shrb
in
xchg
mov
loopne
xor
icebp
mov
mov
aas
cmc
push
dec
pusha
addr16
or
icebp
and
lcall
rol
lahf
jp
xor
mov
mov
enter
mov
xchg
mov
les
sarb
push
xchg
lahf
pop
inc
and
xlat
xor
into
lahf
into
gs
popf
sbb
pop
xchg
pop
addr16
fdivrs
push
push
xchg
imul
fbstp
xor
jb
add
sbb
andb
movsl
aas
arpl
lret
clc
call
imull
adc
ds
jle
lret
repnz
data16
fwait
or
mov
lock
sub
fistpll
rorl
dec
and
mov
leave
cmp
enter
push
leave
or
cmc
or
popa
xchg
jae
sbb
das
cmp
bound
std
xchg
dec
mov
inc
pop
xor
jp
xchg
mov
lods
xchg
movsb
popa
fldenv
pop
mov
stos
mov
adc
sub
pop
lcall
push
jb
mov
les
test
push
push
cmc
stos
pop
aam
jns
mov
leave
gs
add
xor
notl
nop
in
xor
inc
inc
les
add
sub
cld
cld
jp
pop
imul
add
jle
movsl
push
pop
out
inc
sbb
out
cltd
mov
ja
jno
inc
xchg
push
stos
push
push
and
ljmp
or
jmp
mov
push
rolb
stos
or
sub
js
xor
xchg
cmpsb
pop
negb
ficoml
popa
jb
divl
iret
jg
test
inc
fiaddl
lods
jle
out
xor
pop
pop
jne
scas
or
sbb
cmpsb
mov
fstps
out
inc
inc
pop
loop
pop
cmp
xor
mov
std
mov
mov
mov
jp
mov
jle
mov
test
aad
test
fdivp
enter
lods
test
sarb
pop
mov
push
push
pusha
add
fs
pop
lods
jne
mov
mov
xlat
inc
stos
jno
xchg
clc
das
mov
lcall
decb
jg
dec
jle
push
fcomps
adc
fsincos
shlb
pop
adc
jmp
cmp
jecxz
xor
jnp
cmpsb
stos
sbb
mov
cmpb
mov
adc
data16
cli
ljmp
stos
mov
test
popf
lock
xchg
lret
mov
mov
and
flds
pushf
mov
pushf
rcrb
js
jbe
push
fs
push
iret
out
and
mov
repnz
jl
push
test
lret
cmp
cmc
mov
sub
cmp
sub
xor
xchg
aad
mov
fdivl
stc
xor
mov
test
and
aam
push
aaa
add
sbb
bound
fbstp
loopne
cmp
mov
add
ss
movsl
pop
cld
test
jecxz
das
adc
pop
xchg
gs
xchg
lret
dec
cmp
fs
push
adc
stos
jecxz
jnp
cld
push
js
pop
pop
dec
inc
mov
push
xchg
pop
lret
push
push
mov
and
cld
cli
inc
jne
adc
mov
inc
ja
add
shll
adc
sbb
and
sub
in
cmp
mov
test
sub
jns
les
outsl
adcb
cmp
test
clc
jbe
pop
sbb
push
jp
pop
xchg
cld
mov
xor
sbb
int3
sub
jle
cmpsb
xchg
adc
sbb
mov
add
pop
out
mov
les
push
cltd
lock
outsl
enter
into
rclb
xor
orl
cmp
cltd
shll
cs
xor
add
jmp
insb
xor
out
jmp
rcl
rcl
add
add
stos
xchg
fadd
adc
nop
mov
pop
push
pusha
rolb
jg
loopne
xchg
sub
or
ds
jmp
push
push
inc
in
inc
xor
js
add
fwait
leave
fimuls
fsts
loope
jnp
jnp
int3
ret
imul
adc
fcompl
and
shrl
insl
int3
lcall
sbb
inc
clc
out
inc
lods
xor
ret
popa
push
testb
mov
mov
sahf
sub
test
mov
stc
repnz
lods
dec
jae
imul
mov
jns
fdivrs
loop
xchg
and
cmc
fcmovnb
cmp
and
fildll
insb
mov
imul
loope
insl
lds
cmp
mov
mov
dec
loope
std
data16
mov
push
push
inc
jbe
addb
inc
lods
out
std
iret
imul
mov
mov
adc
push
push
ret
int3
sarb
repz
mov
inc
add
cld
dec
icebp
movsb
leave
mov
in
inc
pop
aam
notb
mov
scas
pop
insl
gs
jnp
mov
cmp
mov
idivl
fwait
imul
mov
cmp
xchg
mov
jl
js
gs
fldcw
push
push
sbb
pop
push
pop
adc
movsb
pusha
mov
orb
out
add
sbb
jno
int
dec
adc
add
call
jp
aad
cmp
xor
dec
inc
ja
test
xchg
mov
std
fidivrl
push
mov
cs
movsb
push
arpl
int3
jecxz
push
jno
xlat
fs
iret
and
cli
dec
lret
push
int
popa
mov
pop
and
sbb
or
pop
dec
push
lcall
xchg
int
in
push
mov
divl
cltd
stos
int3
or
not
mov
out
stc
popl
mov
je
jb
xchg
push
adc
std
int
cmpsl
aas
adcb
test
inc
add
pop
jne
push
jecxz
jmp
pop
and
ja
cmp
popa
std
stc
xchg
cld
int
mov
pushf
sub
aas
lds
orl
ja
jge
idiv
adc
mov
xchg
add
pop
in
enter
mov
mov
mov
add
imul
cmc
mov
in
sub
jns
xchg
out
mov
fdiv
shll
push
jmp
jg
js
or
pushf
pop
xchg
scas
sbb
pop
dec
hlt
icebp
sub
inc
adc
add
rcr
imul
sar
fists
push
fiadds
pop
outsl
pop
mov
dec
and
movsl
addb
mov
subl
mov
cmp
cwtl
test
mov
fs
loope
xchg
es
xor
pop
push
jl
in
jg
cltd
cmc
sbb
popf
adc
mov
jg
jno
mov
rcrl
add
loope
fidivrl
sbb
movsb
aaa
std
sub
stos
add
subb
aam
pop
in
inc
inc
aaa
loopne
movsb
push
add
inc
sbb
stos
add
adc
mov
iret
xor
add
and
cmp
push
lahf
scas
js
movsl
enter
xchg
popf
outsb
sub
lret
lods
or
add
push
sbb
xor
lret
sti
call
cmc
lret
les
loope
push
fistl
iret
sub
jno
inc
and
outsb
inc
fdivrl
imul
sub
stos
add
int3
push
xchg
movsb
dec
ret
loope
loopne
mov
orb
pop
add
adc
in
xchg
or
jecxz
add
mov
ror
add
mov
lahf
xor
lret
mov
negb
dec
xchg
jne
push
mov
inc
imul
add
loopne
inc
jmp
test
out
ds
and
dec
jle
dec
sub
xchg
or
test
aam
and
fucom
pop
lahf
jae
fisubrl
aam
loopne
push
cmp
dec
mov
jle
ss
arpl
sbb
push
popf
mov
add
lods
insl
add
sahf
add
xchg
sbb
test
sub
jb
dec
xor
push
dec
in
pushf
int
and
xchg
push
dec
ret
gs
dec
js
int
mov
stc
loop
mov
ja
test
in
enter
push
test
aad
and
inc
fldl
enter
rorb
or
sbb
insb
add
mov
xor
xchg
pop
mov
inc
andl
mov
jo
xchg
sub
enter
adc
fcomps
xor
jle
add
in
and
adc
xorl
pushf
jno
xchg
push
pusha
dec
lret
dec
mov
mov
push
inc
mov
aas
cmp
in
stc
daa
sbb
mov
inc
mov
aad
xor
dec
sbb
pusha
sbb
loop
call
push
imul
jl
cmpsb
cltd
loope
data16
inc
cmpsb
and
lahf
fs
pop
cmp
pop
xor
sbb
jmp
ja
cli
cmp
scas
fsts
dec
xchg
fisubrs
push
aad
repz
dec
pop
pop
loop
andb
or
rcrl
loope
inc
aam
jae
stos
or
inc
sub
fnstsw
inc
xchg
rcrb
jne
fsts
imul
add
push
push
mov
in
je
das
xor
push
push
decl
fdivr
add
in
xchg
pop
mov
xchg
imul
jle
addl
out
add
or
pop
and
popf
aad
lock
sub
into
cltd
or
stos
ret
lock
sar
push
fs
sub
cmc
jg
cld
gs
cmpsl
pop
aam
inc
cmpsb
lar
pop
xor
sub
int
stc
cmp
pusha
popf
xchg
add
pop
inc
les
mov
inc
mov
stos
pop
addr16
push
dec
inc
imul
sti
mov
std
jecxz
mov
scas
movsb
sub
or
lods
test
jle
pop
aam
mov
sbb
xchg
jmp
cmpsb
popa
faddl
in
jp
in
out
jnp
popf
sahf
repnz
scas
mov
jge
add
sarl
xor
push
sbb
shll
dec
ljmp
movsl
mov
rcr
shll
jl
inc
dec
sbb
je
cmpsb
jmp
aam
xchg
and
and
dec
xor
in
jecxz
add
filds
cmp
cmp
leave
out
push
in
or
add
in
lods
test
mov
and
mov
test
mov
push
xchg
jo
cmp
mov
dec
adc
in
sbb
insb
test
aam
hlt
add
add
or
sarl
sahf
push
and
or
das
xchg
outsb
adc
rclw
lret
inc
fstpt
push
xchg
enter
imul
cs
in
imul
lds
mov
pushf
test
jne
push
sbb
inc
push
imulb
call
add
es
andl
leave
lret
loope
js
pushf
mov
js
or
sti
dec
mov
inc
mov
adc
jmp
mov
popf
mov
nop
mov
inc
push
test
cld
je
push
pop
lcall
fwait
rol
pop
cltd
je
rcr
dec
pushf
jae
decl
scas
push
push
xor
imul
popa
pop
cs
mov
test
sub
pop
sbb
jl
push
push
push
jbe
jl
std
test
cmp
adc
addr16
dec
movsl
add
fbstp
adc
sarl
mov
add
and
out
in
out
adc
push
mov
data16
je
lock
xchg
popa
imul
dec
call
out
loop
or
adc
inc
outsl
fs
in
mov
inc
sarl
push
jbe
mov
sbb
popl
scas
leave
mov
pop
and
add
addr16
test
je
aaa
dec
sub
inc
sbb
jmp
add
ret
popa
pop
dec
lret
dec
clc
or
inc
jno
mov
fisubl
subl
sbbl
or
add
xor
pop
mov
sarl
xor
sub
add
js
mov
push
jae
cmpb
and
ljmp
repz
dec
fistps
push
leave
sbb
shll
fisubl
shrl
rcrb
iret
xor
lods
fistl
adc
jg
mov
cmpsb
push
mov
jg
xchg
mov
pop
sbb
fwait
push
add
repnz
adc
mov
loopne
cmp
mov
cmp
xor
hlt
mov
inc
push
sbb
iret
fidivs
movsb
les
clc
pop
orl
rorl
enter
jecxz
rcrb
out
stc
adc
adc
inc
inc
dec
stos
stc
sbb
je
bound
cmp
xor
in
in
icebp
sbb
add
and
in
xor
mov
pop
inc
jae
sarb
push
stc
int3
in
and
xchg
ds
int3
push
icebp
mov
in
mov
mov
xor
sbb
fsub
movsb
ret
arpl
or
pusha
jbe
xchg
and
gs
daa
mov
jmp
negl
push
ret
xchg
or
jb
stos
xor
pop
notb
pop
xlat
push
stos
and
mov
or
push
outsb
test
movsl
jecxz
or
stos
cld
mov
rol
testb
cmp
jmp
adc
xchg
pop
pop
xor
mov
cltd
mov
jmp
or
pop
je
das
add
fisttps
inc
std
push
add
push
xchg
scas
sbb
mov
popa
rclb
pop
push
mov
movsb
push
cmp
xchg
iret
push
pop
mov
hlt
pop
fsts
neg
add
push
ret
xor
cmc
popa
in
insl
shrb
scas
dec
mov
insl
insl
cmp
mov
out
outsb
dec
mov
or
mov
nop
sub
or
push
pop
arpl
rcr
sbb
icebp
mov
fistpll
sbb
xchg
xor
lods
adc
scas
loop
adc
or
loop
cltd
inc
icebp
adc
pop
pop
aam
in
aas
repz
loop
lods
loope
loope
leave
mov
arpl
das
pop
test
xor
mov
push
add
call
sub
popa
notl
js
ja
jge
mov
ret
add
xor
testb
clc
inc
fidivl
mov
ret
push
in
push
push
xchg
add
leave
jp
popa
jnp
sub
imul
mov
adc
push
or
jmp
js
test
divb
inc
add
jp
cltd
xchg
fs
mov
pop
lahf
mov
adcb
fs
mov
cmpsb
mov
jp
jno
lock
rep
ljmp
xor
mov
cld
or
dec
mov
pop
mov
cld
fildl
push
xor
in
sbb
mov
outsb
decl
ficompl
jg
add
arpl
fsts
cli
and
xlat
stos
or
movsl
ds
jmp
or
and
aad
jp
push
mov
cmc
mov
fwait
mov
mov
or
dec
mov
aaa
js
inc
pop
fs
mov
dec
std
lods
sub
ss
mov
pop
pop
sbb
add
pop
stos
push
mov
mov
inc
ds
out
xchg
adc
int3
sbb
out
dec
lods
lahf
mov
jo
lret
ljmp
cmp
pushf
repnz
test
dec
pop
rolb
fsub
mov
dec
ds
in
ds
xchg
mov
fidivs
mov
sbb
mov
lret
pop
out
mov
iret
dec
fmuls
or
mov
mov
cmp
in
mov
or
lds
test
aam
inc
popf
xor
sbb
inc
cs
push
ds
pop
cmp
subb
mov
negl
cld
mov
imul
test
mov
or
cmpsb
xchg
push
loopne
clc
bound
push
mov
mov
adc
js
inc
jbe
xlat
sub
aad
add
stos
pushf
test
fsubs
xor
sbb
stc
xchg
movsl
add
iret
jmp
popl
lret
mov
jecxz
jbe
cwtl
std
stc
ret
fdivrl
not
jmp
jnp
inc
fcoms
add
jae
mov
dec
pop
mov
fcoml
rorl
dec
ret
mov
mov
xchg
pop
inc
mov
inc
js
adc
out
test
int3
movsb
pop
fisttpll
pop
xchg
add
insb
jae
jle
fcmovnbe
adc
repnz
push
mov
jns
mov
jns
jb
test
push
ss
sti
bswap
js
sbb
lea
dec
pusha
sub
push
xchg
fcomps
jbe
or
jg
fstps
fdivrl
pop
mov
mov
push
stc
cmp
cmc
mov
enter
xor
out
test
pop
repnz
popa
xor
lret
fs
rorl
pusha
xchg
pop
push
cmp
pop
test
fdivrs
xor
mov
fdivrl
pop
dec
mov
out
inc
mov
jnp
outsb
and
mov
gs
imulb
cmpsl
and
lods
rolb
push
mov
fwait
out
in
xchg
popa
cmp
jle
cmp
jb
push
data16
nop
mov
divb
in
cmp
ficomps
movsl
test
push
or
xor
mov
dec
movsl
rcr
cmpsl
mov
dec
lock
mov
clc
pop
xchg
inc
bound
adc
lods
add
fdivr
adc
xchg
aam
ja
pop
mov
inc
ret
xchg
stos
push
dec
addr16
or
mov
insb
scas
dec
add
rcrb
add
mov
dec
aam
pop
int3
insl
adc
or
mov
pop
push
cmc
das
and
stc
iret
adc
sbb
mov
or
shll
push
js
stos
and
mov
adc
xor
subl
xchg
aad
fildl
dec
stc
add
jp
mul
orl
cmc
fldcw
rcr
and
mov
lods
xor
mov
or
and
ja
aad
xor
fnsave
cmpsb
icebp
inc
aas
fistl
push
push
cmpsb
out
shrb
cs
jmp
js
lock
pop
xor
inc
pop
dec
je
add
lcall
shrb
cmpsb
jbe
pop
add
psubusb
push
int
outsb
bound
ljmp
ja
adc
push
ljmp
lret
cmp
stos
repnz
push
xchg
int3
mov
pop
xchg
jecxz
rolb
and
mov
test
lcall
fisubrl
jl
or
push
add
pop
cmp
fs
aaa
or
andb
pop
cmpl
out
or
mov
push
mov
or
pop
mov
fmuls
jb
sub
out
xor
mov
cmp
sub
sbb
stos
in
and
call
and
out
and
xchg
cmp
cltd
movsl
lds
pop
or
pop
arpl
dec
inc
cwtl
nop
fstl
push
push
out
pop
add
into
lods
das
adc
sub
enter
mov
cmp
mov
adc
pop
lret
movsb
fsubl
cmp
or
dec
adc
clc
int
dec
sbb
mov
lods
mov
loop
and
int3
mov
xor
ret
cmpsb
cwtl
sbb
jecxz
sar
cmpsb
stos
add
mov
mov
dec
dec
sub
pop
lahf
mov
in
add
jge
jae
jbe
lret
mov
pop
insl
cld
xor
pop
and
pop
or
xchg
scas
iret
mov
dec
adc
and
pop
out
push
aas
mov
xchg
test
mov
jmp
mov
fldl2t
and
mov
sub
sbb
mov
push
inc
adc
in
xchg
jmp
mov
and
fsubrl
add
in
xor
fnstcw
pop
mulb
ja
fistpll
dec
sbb
lods
adc
enter
cwtl
lret
cmp
ror
fs
lock
pop
and
mov
xchg
push
out
inc
dec
dec
out
pop
daa
add
and
xchg
adc
xchg
popf
pop
test
sar
lahf
jge
loope
sbb
and
sbb
or
add
or
cmp
stos
std
push
out
mov
test
add
out
adc
cmc
je
pop
lds
add
pop
inc
sub
jno
repnz
cwtl
mov
mov
outsb
xchg
mov
out
mov
loopne
jae
mov
fcomi
pusha
mov
mov
jmp
jmp
repz
in
mov
add
daa
jno
test
movsb
mov
jecxz
jl
cmp
lret
scas
aam
jnp
mov
mov
or
inc
flds
rsm
imul
aam
pusha
into
scas
repz
sbb
in
int3
sbb
pop
sbb
aas
add
int3
lods
pop
sub
sbb
mov
xchg
out
sbb
leave
std
or
je
loope
sbb
lcall
shll
mov
sbb
imul
pop
xchg
inc
mov
pop
push
scas
stos
sub
push
add
jae
je
rcl
daa
cmpl
fmuls
mov
loop
xor
leave
inc
leave
adc
or
pusha
das
push
jle
loope
lock
push
dec
nop
push
jle
test
add
insb
or
jmp
add
jno
or
xchg
les
cwtl
mov
cmp
push
std
dec
fbstp
xorl
add
pop
ds
xchg
leave
stc
adc
cmpsb
jp
aaa
mov
insl
pop
ret
adc
add
movb
cmp
pop
mov
out
jp
call
inc
cmc
and
mov
sub
js
ja
mov
mov
es
mov
lock
sub
imul
out
mov
roll
pusha
pop
jns
cmpsl
or
jo
sbb
mov
ds
leave
nop
sahf
shlb
and
add
aas
sub
popf
mov
cltd
les
clc
jge
cmp
mov
loopne
pop
sub
sub
add
pop
idivl
outsb
jecxz
loop
loope
cwtl
xor
popf
call
sahf
out
xchg
addb
mov
mov
aas
mov
add
stos
dec
mov
in
mov
inc
test
or
jo
stos
outsl
lretw
adc
xlat
mov
or
pop
mov
pop
es
ds
mov
push
in
jle
repz
push
fs
mov
or
add
das
fdivl
ret
je
sbbb
pop
jge
daa
inc
jnp
jge
jp
sub
and
test
insl
fisttpll
xchg
inc
rorb
pop
adc
iret
mov
ss
movsb
in
inc
repz
pop
testb
sub
insl
push
sahf
mov
icebp
add
xchg
mov
in
mov
mov
ret
dec
es
mov
loopne
insl
test
or
xchg
outsl
inc
fbstp
loope
inc
sbb
push
cmp
push
push
bound
push
jne
in
pop
lret
push
xchg
adc
shll
adc
xor
pop
mov
stos
lock
fwait
pop
sbb
mov
fcompl
adc
int3
dec
inc
jnp
es
into
fs
cs
sub
pop
pop
aaa
out
cmpsl
pop
ljmp
data16
cmp
lcall
or
andb
mov
sub
cmp
pop
arpl
imul
movsb
icebp
push
stc
loop
adc
xor
je
imul
mov
ss
fxch
fldcw
mov
pop
pusha
dec
insb
cmp
out
out
mov
jnp
hlt
sbb
mov
fnstcw
pop
pop
jns
push
mov
sbb
stos
lahf
push
or
adc
test
cmc
cmp
icebp
cmp
leave
or
jbe
dec
insb
int3
cs
and
mov
jbe
shrl
cmpsb
mov
in
bound
xor
fcoms
jo
sarl
cmp
pusha
stc
mov
jae
stos
mov
xlat
punpckhdq
pop
lahf
stos
mov
icebp
outsl
stc
add
mov
xchg
into
mov
dec
inc
pop
movsb
lea
add
rcrl
xchg
test
shll
ds
dec
icebp
add
out
clc
mov
sarl
add
add
add
and
inc
dec
mov
jnp
cmp
push
xchg
and
jbe
cmp
jge
dec
es
push
inc
add
mov
aad
cld
shlb
bound
adc
inc
inc
pop
push
mov
scas
pop
dec
sbbl
rcrl
shl
lods
movhps
test
enter
cltd
fistpl
cli
lods
aaa
out
data16
jecxz
jne
into
lahf
sbb
cmpsb
adc
jg
mov
or
pop
add
rolb
jns
nop
inc
dec
sbb
inc
movsb
das
out
dec
fstpl
stc
fnstsw
push
shll
call
clc
jecxz
test
es
imul
hlt
rolb
jbe
xchg
cmp
lock
inc
fldt
cmp
roll
leave
cmp
out
pop
loop
or
mov
aas
scas
fisubrl
popf
push
sbb
cs
icebp
loope
stos
xchg
sub
mov
fisttpl
divl
mov
inc
imul
fnstsw
imul
cwtl
mov
icebp
jnp
dec
mov
add
out
push
sub
mov
mov
loope
dec
lods
rol
jno
mov
pop
loope
mov
push
in
iret
cmpsl
sbb
pop
js
pop
pop
cmp
in
stos
test
add
sbb
cld
adc
stc
push
jl
add
notl
jmp
jp
jp
out
fwait
lock
cmp
leave
mov
mov
inc
lds
mov
inc
xchg
mov
cmp
int3
lods
int
lret
and
cmc
pop
push
jb
int
jb
fstps
ljmp
js
jmp
icebp
xchg
xchg
mov
movsb
ret
int
cmpsb
cli
cmp
cmpl
pusha
test
cmc
sarl
jne
xor
push
jl
stos
and
leave
xor
inc
fdivs
inc
testb
jo
sbb
jb
in
push
jge
inc
or
fdivr
pop
insl
mov
outsl
repnz
sarl
mov
xor
and
adc
stos
jb
jmp
dec
stos
jge
gs
cmp
mov
dec
cld
icebp
movsb
movsb
and
dec
jb
mov
jle
das
movsb
shll
adc
dec
fildll
cmpsl
data16
aas
push
movsb
mov
neg
mov
shl
lock
mov
jg
rcr
daa
push
test
out
jl
cltd
shll
flds
lock
adc
jns
out
jg
repz
dec
jbe
sarb
test
and
and
mov
in
cmp
xor
fimull
jle
add
pop
xor
or
mov
iret
adc
pusha
in
cmp
or
nop
xchg
ds
nop
xchg
cmp
js
inc
inc
addl
negb
jae
xchg
mov
leave
adc
and
aaa
ja
popl
adcb
loop
and
mov
dec
jae
imul
fldt
jg
and
push
outsl
pop
or
daa
xchg
repnz
aad
adc
mov
cmpsb
test
loopne
sarb
hlt
jne
cs
cmpsl
lahf
fistpl
mov
mov
sbb
sahf
mov
das
inc
mov
mov
adc
sti
pop
out
jb
push
sub
inc
js
sub
stos
pop
jbe
pop
pop
push
into
das
dec
clc
movsb
adc
subb
into
add
pusha
in
push
stos
push
or
cmp
insb
dec
add
jo
inc
pop
sarb
push
mov
inc
enter
sbbl
es
push
popa
cmp
add
fsts
adc
add
mov
mov
cmpsb
scas
mov
xor
ret
cmp
mov
xor
mov
or
leave
sahf
aas
xlat
fsubp
xlat
jl
stos
outsb
data16
mov
push
stc
stc
out
pop
mov
in
sbb
xor
jge
inc
push
inc
sub
enter
xorb
in
mov
pcmpgtd
xchg
cmpsl
in
xchg
xchg
dec
mov
out
pop
mov
adc
xchg
outsb
mov
enter
jl
cmp
call
aam
xchg
sub
gs
jo
or
std
xor
fcoms
insb
adc
xor
pop
dec
dec
jbe
sbb
sbb
cmp
pop
xor
xor
jle
mov
and
inc
mov
mov
je
out
dec
popf
sahf
std
pop
add
je
enter
xchg
repz
push
add
fstps
dec
mov
icebp
lahf
lds
and
outsb
insl
adc
sti
xchg
jb
loopne
repnz
orb
mov
lock
push
faddl
enter
ja
push
addr16
test
dec
dec
mov
mov
fs
and
popa
pop
add
jle
dec
dec
loopne
jle
rol
pop
mov
pushf
or
jae
insb
push
jg
test
push
xor
jl
xor
pushf
adc
ret
mov
shrb
out
lock
add
addr16
ds
push
xchg
imul
cmpsb
dec
lret
sub
inc
iret
cmp
push
pushf
pop
dec
mov
movsb
adc
loop
xor
cli
in
lret
cmp
sub
imul
pop
cmpb
outsb
pushf
aam
loopne
or
fnstenv
dec
arpl
or
inc
push
js
jno
mov
sbb
and
icebp
xor
adc
stc
xor
std
add
dec
mov
loope
and
lahf
lahf
out
xor
push
test
dec
pop
push
push
fwait
in
fsubrs
stc
sbb
mov
mov
cltd
and
push
loope
push
sahf
leave
push
hlt
xchg
scas
push
and
fistpl
mov
xor
push
stos
xchg
push
jl
out
enter
outsl
bound
es
mov
push
dec
ljmp
mov
sbb
pop
mov
mov
insb
xchg
je
jl
lods
cmc
inc
adc
lcall
js
iret
mov
shlb
sub
in
jle
jl
clc
cs
fdecstp
popa
imul
cwtl
cmp
mov
jle
int
xor
mov
jo
fcoml
jle
andl
scas
pop
sbb
jle
mov
repz
adc
fs
out
shlb
cwtl
sub
cs
lea
cld
mov
and
ds
setne
nop
cltd
xor
rol
popf
cli
repz
push
ds
xchg
dec
xor
push
daa
pusha
mov
testb
push
das
push
movsl
in
out
aas
mov
cmpsl
stc
cmpsb
mov
xchg
int3
insl
fs
pop
stc
ljmp
jge
int
fwait
cmp
xchg
stos
cltd
sti
push
jb
loop
cmp
fsub
dec
loopne
push
xchg
lods
mov
cmc
sub
jg
lds
andb
xor
dec
push
xchg
add
cli
in
inc
jmp
out
shlb
sub
bound
fsubrs
pusha
pop
jmp
cmp
push
stc
mov
cmp
aas
fcmovnu
sarl
ds
pop
sbb
cld
sti
adc
mov
pop
sbb
repnz
in
ret
lock
pop
scas
xor
add
enter
out
lods
scas
jp
ds
xchg
clc
mov
lret
push
outsl
add
xor
pop
jle
add
ret
fldlg2
pop
sbb
sbb
mov
push
pushf
or
lods
adc
xor
mov
fs
dec
pop
pop
xlat
jns
push
std
mov
imul
xchg
mov
xchg
pop
test
jp
scas
pop
push
imull
pop
sarb
xlat
jl
mov
pop
jle
fcom
leave
fsubl
js
jg
repz
fists
xorb
incb
leave
cmp
mov
movsb
clc
jg
loopne
push
cltd
mov
aas
and
sub
test
mov
shll
outsb
aaa
xor
test
loope
or
cli
int
fbld
sub
int
pop
sub
jg
sub
aad
cmpsb
cmc
inc
stos
aas
mov
jnp
inc
je
adc
je
addr16
pop
adc
adc
add
mov
outsb
rcr
in
add
cwtl
pop
into
dec
push
pushf
or
pop
icebp
ret
mov
jmp
fdivl
jge
aaa
mov
out
xor
iret
nop
daa
inc
mov
sbb
stos
iret
xchg
sbb
and
mov
not
test
xchg
push
clc
xor
adc
mov
js
frstor
lahf
push
or
ret
sbbb
mov
in
lods
in
xor
xor
fidivrs
ret
mov
push
xorb
jle
xchg
push
cmp
push
cs
jl
cld
hlt
add
jecxz
div
add
dec
lock
jne
and
fistl
repz
jnp,pn
pop
jnp
jb
test
cld
test
inc
mov
sub
inc
daa
fs
jle
loope
es
out
les
shl
jle
push
jmp
or
mov
push
xchg
roll
mov
pop
mov
out
push
sub
inc
add
jmp
jg
push
jp
sub
push
loopne
or
jg
es
push
pop
aad
adc
aas
insb
aad
xchg
in
push
test
int
mov
or
orl
mov
jmp
jmp
adc
lahf
push
iret
fisubs
gs
out
jo
sti
ja
jmp
or
xchg
pop
push
loopne
xchg
sbb
push
fistpl
sbbb
dec
aas
xchg
je
inc
rol
scas
pop
xchg
jg
mov
data16
xor
cli
sarb
adc
cmp
xchg
aas
jle
or
cli
roll
loopne
lret
out
test
outsb
sbb
lret
jo
lods
and
dec
inc
jl
or
sub
push
adc
xor
mov
jo
push
insl
dec
out
inc
jl
cmp
push
out
popa
xor
ficoms
jbe
hlt
mov
mov
mov
cmp
lock
xchg
cli
dec
repz
mov
popa
outsb
push
dec
xchg
fwait
pop
xor
fsubr
xchg
dec
push
cmp
bound
push
das
ja
mov
cmpsb
jno
stos
push
orb
xor
lock
pop
mov
dec
dec
aaa
out
and
jo
xchg
mov
add
mov
sub
rcr
bound
gs
mull
add
inc
push
sbb
push
lds
jle
cmp
mov
sarb
pop
xchg
jo
sub
lods
push
jo
je
inc
mov
outsl
call
cmpsl
popa
rcrl
adc
adc
outsb
mov
sbb
adc
xchg
xor
insb
mov
xchg
pop
popf
loopne
rcll
inc
jbe
push
pushf
adc
pop
inc
push
push
cmpsb
ret
loop
lock
xor
cli
xor
xor
js
and
sbb
stos
loopw
fiadds
jae
inc
push
mov
stos
jge
xor
xchg
fs
scas
pop
jge
or
lea
adcb
or
xor
inc
cmp
cmc
cmp
loope
mov
jnp
push
hlt
xor
pop
inc
cltd
icebp
int
pop
inc
cmc
and
sbb
push
nop
out
stc
push
in
mov
inc
push
dec
pushl
mov
cmp
push
mov
or
or
add
jg
or
adc
cmc
lahf
inc
push
int3
loop
push
imul
adc
sub
cmpsl
iret
addr16
mov
mov
data16
jg
jecxz
push
dec
xchg
adc
sub
aas
dec
sbb
into
dec
shlb
repnz
nop
fistpll
or
js
loopne,pn
mov
add
loopne
inc
xchg
jl
add
xchg
inc
sub
loop
fwait
jecxz
loop
cld
jno
inc
add
test
icebp
xor
out
xchg
adc
inc
jnp
mov
adc
es
jo
add
out
add
iret
mov
sbb
leave
inc
scas
pop
pop
insl
or
dec
bound
push
lret
cmp
mov
or
push
mov
call
and
mov
into
sbb
push
jbe
and
push
jmp
or
mov
fisubl
mov
jno
push
add
dec
mov
fs
imul
mov
shlb
xchg
fwait
or
bound
jmp
mov
rorb
ja
fistpll
test
stc
add
popw
arpl
jg
cmpsl
cld
sti
hlt
xchg
inc
xor
push
arpl
cmp
or
stos
leave
adcb
int3
cld
cmp
fildll
push
loope
push
xor
fldt
xchg
and
add
fucom
or
fcmovnbe
stos
xchg
inc
xchg
mov
xchg
aad
cmpb
lret
insl
daa
jmp
outsb
push
outsb
es
add
ljmp
mov
jo
lahf
and
sub
mov
pop
mov
xor
lock
push
insb
dec
jno
or
clc
or
mov
or
xor
cmpsb
out
loope
jp
mov
clc
or
icebp
in
push
xor
inc
mov
and
xchg
and
popf
pop
scas
in
or
push
pop
hlt
or
imul
push
insl
fbstp
ss
or
sub
add
push
adc
clc
push
int
jns
adc
clc
fistpl
xchg
pop
xchg
xchg
popf
in
adc
inc
mov
xchg
push
mov
int
outsb
adc
cmp
aaa
loope
outsb
neg
lds
push
lods
pop
mov
or
sub
jns
push
rcll
enter
ret
xlat
push
xor
add
imul
pusha
ret
cmp
add
push
stc
jecxz
popf
loopne
bound
outsb
andl
add
mov
shlb
stc
sarl
aas
or
pop
cmp
test
mov
pop
mov
es
adc
test
outsl
pusha
dec
dec
push
pop
or
push
in
xchg
mov
mov
add
pop
sti
sarl
out
fmuls
popf
insl
cmpsb
pop
das
jg
fsubs
imul
push
test
test
pop
je
sbb
out
insb
ja
arpl
cmpl
dec
fsubrs
cld
enter
mov
mov
mov
loopne,pn
mov
cmpsb
loope
fwait
mov
pusha
ds
mov
mov
fsts
sub
dec
dec
mov
ja
out
dec
mov
cs
jae
es
mov
xor
inc
pop
xor
mov
cmpsl
in
int
insl
jne
adc
gs
lret
adc
sbb
dec
jg
push
push
loopne
out
enter
or
xchg
sub
in
adc
adc
inc
sub
pop
popf
mov
lds
xchg
popa
fcompl
lea
lcall
sub
lods
jae
jecxz
cvttps2pi
aaa
adc
pop
jmp
mov
out
pushf
cwtl
mov
inc
mov
dec
cmp
fstpl
jo
int
fsubrs
sbb
and
cmc
je
inc
lcall
lods
add
mov
mov
das
cmpsb
stc
xor
sub
fnstsw
scas
mov
cmpsl
and
shlb
dec
jge
lret
call
ret
cmp
jge
inc
cltd
sti
jle
scas
call
inc
std
jl
imul
shrb
movsl
fdiv
popa
out
inc
and
addr16
adc
test
cmp
mov
sbb
or
stos
sub
scas
lods
mov
sbb
add
or
xchg
mov
inc
ret
jmp
lahf
mov
xchg
mov
cmp
mov
cmc
dec
jbe
adc
mov
das
mov
push
mov
mov
mov
and
cmp
test
das
and
mov
test
jae
jb
xor
xchg
mov
pop
aas
mov
lds
movsb
cmp
jecxz
call
dec
loopne
add
xchg
dec
xchg
pop
xchg
fcompl
jmp
push
jbe
xchg
rcl
int
enter
loop
inc
je
sub
sbb
das
add
dec
jge
or
push
sub
outsb
mov
sbb
dec
std
cmp
lahf
out
add
inc
sbb
test
in
rclb
ror
mov
inc
mov
in
mov
xor
mov
dec
push
test
lods
push
shlb
into
and
push
clc
rol
es
sbb
or
add
adc
or
xlat
sti
addr16
imul
mov
shlb
sub
push
lock
and
cmp
cmp
sub
leave
subl
inc
cs
ss
int3
je
xor
dec
shl
xchg
xchg
int3
sahf
stos
xor
mov
pop
inc
push
mov
int
pop
dec
mov
out
xchg
cltd
cmp
pop
rcr
mov
sbb
mov
xor
pop
jo
mov
mov
jg
adc
repz
cmp
fisttpl
cmc
and
mov
or
pop
jecxz
mov
enter
push
push
inc
and
mov
lcall
or
decb
jl
incb
lock
jecxz
push
sub
sub
add
mov
fdivrs
cld
incb
jge
and
sarl
sub
repnz
sub
std
clc
sbbl
orl
jg
mov
and
sbb
and
mov
jnp
pop
fs
xchg
repz
xor
int
scas
mov
mov
mov
dec
ret
lods
adc
lahf
adc
pop
mov
jne
mov
xchg
bound
cmpb
mov
into
repz
fwait
shlb
fwait
shlb
adc
mov
cmc
push
xchg
movsb
ret
fs
cli
jmp
les
xor
push
add
data16
dec
dec
into
cmp
icebp
sahf
int
or
mov
sbb
xor
mov
ret
jecxz
dec
out
daa
jmp
shlb
or
es
in
jns
das
loopne
shl
stos
or
adc
jne
cmp
adc
js
dec
xchg
aaa
and
pop
xchg
sub
daa
fnsave
jg
add
mov
cmpsb
aaa
add
mov
xor
inc
pushf
enter
movsb
aas
fcoml
js
das
and
leave
idiv
lahf
mov
aas
jle
paddw
push
inc
movsb
ret
jg
xchg
xchg
cs
mov
xor
stc
jecxz
cmp
sar
das
test
cld
adc
jl
sbb
je
mov
lods
mov
loop
jae
dec
add
or
or
add
test
add
mov
cld
ret
lcall
mov
out
inc
lods
inc
cmpsl
dec
adc
iret
int
scas
and
inc
push
mov
int3
rcl
les
jge
dec
mov
inc
dec
je
int3
dec
gs
popa
jne
cmp
fucomp
sub
pop
adcl
mov
sti
pop
inc
pusha
enter
sub
add
iret
inc
das
add
or
jne
pop
cwtl
jp
lret
xor
neg
fbstp
xchg
arpl
into
stos
aad
cmc
add
repz
xchg
cmpsb
xchg
and
mov
push
daa
mov
push
or
pushf
add
xchg
mov
dec
sahf
inc
sbb
mov
or
loop
lret
ret
into
add
mov
mov
lock
push
incb
loop
dec
add
sub
xchg
or
jl
add
inc
cwtl
in
xchg
xchg
jp
enter
cmpl
test
xchg
into
add
dec
stos
add
and
or
push
sbb
mov
cs
fmuls
jmp
jl
repnz
mov
jl
dec
nop
sub
mov
or
jmp
ja
divl
rorb
cmpsb
rolb
stos
dec
xchg
or
jo
orb
dec
outsl
pushf
push
cmpl
movsb
test
pop
pop
or
popa
cmp
fidivrl
fucomi
pop
pop
fistps
clc
cmp
imul
jbe
cmp
neg
cld
xchg
movsb
dec
xor
mov
mov
jl
push
push
jmp
rolb
lahf
jb
add
push
sub
clc
addr16
inc
dec
outsb
xchg
ds
mov
jge
shll
cltd
dec
out
loope
test
sbb
mov
cmp
dec
sbb
aad
incl
fidivl
jmp
cmpsb
pop
mov
add
andl
sub
aas
cmp
loop
leave
rcr
in
out
ret
adc
xchg
and
mov
jmp
mov
rorb
out
cmp
xchg
dec
xchg
mov
cli
mov
adc
les
pop
outsb
lods
loopne
test
cmc
lahf
scas
ret
mov
dec
push
andl
adc
shrb
push
in
ja
push
out
cmc
test
or
fnsave
out
mov
mov
lea
pop
or
jp
test
jne
adc
ljmp
jmp
or
fisttps
adc
shll
xchg
andb
rcl
or
nop
cwtl
mov
or
ljmp
out
lahf
jmp
gs
outsb
mov
pushf
pusha
mov
cltd
xchg
jno
imul
js
daa
jg
dec
bound
daa
push
jbe
shl
scas
xchg
push
scas
add
rcr
sub
dec
add
bound
push
jns
pop
mov
cmp
jne
fidivrl
loopne
jae
pushl
inc
ficoms
and
das
add
cmp
add
dec
js
jns
stc
fmuls
es
mov
push
jbe
or
bound
std
push
mov
sti
mov
cmp
and
shlb
jae
sahf
mov
daa
notl
out
fabs
inc
jnp
or
cmpsl
cmpsb
dec
mov
lock
fldt
xchg
fidivrl
jae
addl
mov
pop
or
call
and
ds
not
pop
icebp
mov
jmp
ds
out
sarl
ds
iret
lahf
into
test
cmp
out
testl
fadd
and
jns
sub
ret
sbb
mov
int
test
fdivrp
cli
pop
add
push
ja
nop
je
mov
data16
cmp
insb
les
sbb
push
xor
fldt
pusha
orb
jno
stc
cmp
pop
arpl
inc
and
imull
push
clc
stos
fisubl
mov
xchg
js
mov
dec
or
shlb
fmull
sub
popf
into
sbbb
lds
test
cltd
push
fdivs
xchg
outsb
xchg
sub
int3
push
jp
add
das
inc
dec
icebp
clc
leave
dec
dec
insb
xor
inc
clc
xchg
repz
mov
clc
or
dec
outsl
mov
lret
fs
pop
stc
or
pop
push
sahf
mov
or
enter
fwait
icebp
pop
push
out
pop
lahf
mov
negl
fdivrp
cli
lret
mov
inc
xor
popa
cmp
int
iret
mov
in
jb
xor
mov
pop
fdivs
sbb
inc
mov
xor
or
inc
popa
push
js
lcall
and
or
int3
add
inc
cmp
in
test
lea
enter
repz
das
inc
pop
pop
pop
jns
dec
imul
decb
inc
or
jp
sub
cwtl
insl
fucomi
inc
xchg
fwait
jns
arpl
pop
je
loop
imul
lahf
and
fcmovnbe
lock
inc
int
mov
sub
icebp
arpl
leave
xor
and
faddl
sahf
outsl
lahf
insb
xor
shll
xchg
adc
bnd
xchg
jp
dec
clc
xchg
and
push
clc
jnp
dec
sbb
xor
sbb
in
ja
jns
mov
roll
out
add
adc
push
inc
xor
pop
repnz
jns
push
gs
mov
sbb
mov
testl
push
mov
les
inc
int
aad
cmp
loopne
fucom
mov
lock
jns
sbb
mov
movsb
test
and
fildll
jp
xor
mov
xor
scas
mov
cwtl
into
mov
jae
cmpb
enter
pop
imul
mov
dec
adc
ret
lret
sbb
jbe
xor
xlat
push
cmp
xchg
jmp
shl
lahf
fmuls
pop
pop
sub
dec
dec
inc
test
sbb
push
push
jl
loope
push
mov
mov
jecxz
jbe
aaa
fs
adc
fnstsw
test
sbb
inc
pop
in
insb
inc
jnp
mov
insl
lahf
mov
inc
imul
cld
jge
int3
xorl
cmp
insl
lahf
in
mov
rcrl
stos
jge
cld
xor
aas
js
jno
and
cwtl
cmp
roll
add
push
movsl
aam
jbe
in
pop
js
mov
js
icebp
lahf
ss
test
addr16
imul
js
jnp
pop
mov
bnd
icebp
out
fisubrs
outsl
push
das
jns
or
and
insl
cs
push
cmc
nop
mov
dec
std
rcrb
cld
lcall
int3
stos
pushf
sbb
stos
movsb
sbb
pop
xor
push
xchg
mov
insb
ss
pop
int3
inc
dec
adc
push
xlat
repnz
pop
add
jle
dec
pusha
les
jp
loope
mov
out
sbb
jns
cmp
enter
push
es
daa
cld
adc
mov
les
mov
mov
xorb
lods
jle
enter
add
mov
lcall
push
movsb
nop
mov
mov
add
mov
mov
xchg
sub
je
dec
sub
iret
outsb
cmp
shrb
loop
mov
fistpll
inc
mov
int3
inc
pusha
xchg
sbb
stos
stc
rcll
cmp
popa
mov
xchg
les
loop
out
popa
imul
dec
sbb
bound
and
xlat
aaa
xor
scas
fs
jae
dec
imul
cld
xchg
sbb
adc
cmc
sub
imul
cmp
mov
dec
jg
push
ja
xchg
or
dec
fwait
sbb
aam
fwait
jns
int3
in
stc
loop
stos
pop
lret
aam
shll
cwtl
mov
loopne
dec
jo
cmp
aam
sub
fsubr
push
jae
fcoms
movsb
lcall
es
imul
es
dec
sub
xchg
lods
jl
fdivp
adc
leave
lea
out
insl
or
bound
xor
in
mov
pop
out
inc
pop
and
mov
stos
xchg
movsb
dec
jecxz
or
fwait
cld
mov
daa
push
fdivs
mov
inc
xor
scas
and
xchg
jecxz
outsb
in
insb
pop
jnp
mov
fdivrl
inc
xor
aaa
icebp
mov
jp
sti
xor
psraw
pop
dec
insl
pop
push
test
mov
mov
dec
mov
sub
or
js
fisttpl
push
das
pop
jne
and
lds
cli
jne
dec
pop
pushf
sbb
sub
jae
in
push
dec
xor
daa
push
add
repnz
cld
inc
jno
adc
pop
lret
dec
push
repz
fidivrs
mov
test
in
dec
xor
imull
add
out
repz
xchg
dec
call
sub
sbbb
inc
repz
fidivrs
stos
fildl
icebp
add
cs
mov
dec
pop
push
imul
ljmp
mov
jg
jle
dec
dec
and
xor
fs
dec
add
leave
cwtl
daa
stos
push
sub
inc
adc
std
outsb
or
mov
cmpsl
repz
dec
pop
outsl
cltd
xor
xor
outsb
inc
ja
cmp
lods
dec
js
out
pop
mov
jbe
sub
push
sub
cltd
int
or
mov
or
imul
je
cltd
movsb
out
and
inc
jb
test
mov
idiv
cmc
jno
push
sub
and
pop
lods
mov
dec
inc
or
inc
jle
clc
push
jns
lods
pop
in
jge
dec
inc
sti
daa
sahf
mov
xlat
repz
jmp
fisttpl
cmp
mov
sbb
jle
notb
jno
sti
xor
mov
pusha
movsb
testb
pop
ljmp
cmp
inc
les
fisubs
out
sbb
push
lock
repnz
mov
fs
pop
lock
movsb
cmpsl
sahf
mov
shrb
jl
dec
jge
mov
faddp
fstps
cs
fistpl
mov
add
push
inc
push
cmc
cli
jae
or
mov
mov
mov
incl
mov
pop
mov
jle
push
mov
or
mov
test
mov
xor
mov
dec
jecxz
data16
iret
xchg
mov
je
into
cmc
sti
imul
cmpb
xchg
pop
inc
mov
lcall
rcrl
loop
xchg
mov
je
and
push
mov
dec
adc
popa
jnp
mov
clc
sahf
mov
pop
cmp
jbe
lods
jmp
cmp
iret
sbb
or
jns
sub
xlat
inc
xor
cmc
fisttpl
xor
push
mov
stc
xchg
in
push
xchg
pop
mov
mov
lret
xor
nopl
test
mov
jle
repnz
adc
sub
sti
or
mov
add
dec
jp
adc
jbe
mov
mov
cmpl
inc
scas
lds
out
jge
xchg
adc
xor
pop
mov
mov
dec
sub
repnz
and
clc
mov
out
add
and
outsb
lds
jmp
mov
jmp
imul
add
in
dec
xchg
aas
int
and
mov
loopne
sti
mov
pushf
mov
cmp
push
in
mov
jecxz
test
jge
mov
test
sub
dec
imul
xchg
and
ret
jmp
push
iret
dec
sbb
xchg
popf
mov
push
adc
or
loop
sub
or
jg
mov
testb
popf
adc
cli
arpl
prefetch
or
push
xchg
movsl
imulb
jae
test
inc
fistps
jge
cmp
mul
loopne
lock
mov
daa
inc
and
roll
and
jnp
ret
dec
insb
jns
ret
daa
mov
mov
push
scas
inc
das
inc
dec
push
jp
scas
in
dec
pop
adcl
mov
jb
int3
and
testl
call
sti
rorb
aad
sub
add
mov
xor
daa
or
sahf
pop
out
push
jo
movsb
icebp
dec
push
pusha
inc
stos
push
test
dec
pop
pusha
fs
cmp
insl
xor
cli
and
jg
mov
adc
cmp
push
pop
roll
cmpxchg
jbe
cmp
jbe
fucomp
in
notrack
rorl
adc
addl
jnp
scas
or
es
andl
xor
sbbb
inc
pcmpeqw
loop
inc
movb
xchg
int3
ret
adc
call
xor
aam
popa
mov
add
shrb
mov
jnp
push
out
jb
das
pop
orb
jp
adcb
jb
fiadds
lcall
in
xchg
in
pusha
sbb
ret
clc
out
cmpsl
das
sbb
pop
fcomp
pop
pop
aas
aam
cmp
popa
mov
xchg
das
sub
or
mov
add
jbe
lods
arpl
dec
mov
mov
insb
xchg
cld
scas
andb
push
movlps
in
or
dec
mov
aad
icebp
sbb
lock
mov
mov
add
in
outsl
jnp
cmp
xchg
mov
mov
xor
loopne
and
pop
sub
orb
push
inc
add
cmp
cld
push
inc
pop
jnp
add
aam
repnz
std
addr16
mul
jg
dec
repnz
cld
stos
xor
cli
inc
inc
pop
mov
pop
cmp
pop
lahf
push
jns
push
xor
addr16
inc
and
and
xchg
mov
lods
add
iret
leave
sbb
test
out
jmp
cmpsb
rcrb
jns
ds
cld
xor
jns
into
xchg
es
push
out
cmp
mov
pop
rcrl
push
jae
sti
push
pop
call
xchg
aaa
push
adc
cmp
jle
push
add
test
jmp
mov
insb
in
and
push
pusha
mov
xchg
xchg
lods
inc
rorl
jmp
inc
imul
ds
and
add
stc
add
dec
xchg
adc
leave
xor
jnp
lret
cmc
fucom
or
imul
pop
jno
jmp
imul
jecxz
push
test
rolb
je
mov
push
dec
sub
adc
iret
or
popf
push
mov
push
jnp
fwait
and
icebp
cmpsb
out
int
movsl
test
push
aam
jo
iret
sub
cltd
pop
push
rolb
push
dec
mov
movsl
cmp
mov
push
lock
in
xor
hlt
arpl
scas
stos
movsb
loopne
inc
cmp
pop
push
pop
jp
jbe
mov
push
gs
push
or
push
push
or
pop
stc
cmpsb
push
testl
jl
jp
inc
pushf
fisttpll
fistl
ljmp
dec
scas
jns
mov
or
filds
imul
xchg
movsb
aas
xor
dec
dec
aad
add
sarl
mov
in
es
cwtl
xlat
mov
mov
filds
outsb
xor
pop
push
sub
stc
sub
xor
enter
push
inc
popa
loopne
cld
and
and
lret
adc
pop
arpl
or
jle
or
seto
adc
push
adc
dec
cltd
popa
decl
insb
lret
sub
mov
or
jl
popa
inc
xor
cmp
sub
int3
mov
mov
jecxz
mov
outsl
mov
movsl
ljmp
jbe
addl
loopne
mov
imul
scas
jns
ret
mov
pop
jecxz
fucomip
test
and
mov
or
rorb
jl
mov
add
repz
sbb
sbbl
inc
push
jnp
imul
xchg
aaa
push
mov
pop
mov
scas
push
ss
mov
pop
pushl
sub
lock
outsb
adc
stc
lcall
ljmp
cmp
cmp
mov
std
pusha
mov
xor
pop
jg
scas
mov
jmp
cwtl
sub
push
mov
ja
sbb
or
fsubrs
push
jbe
in
mov
imul
xchg
mov
arpl
push
jns
xchg
ljmp
lods
in
imul
mov
stos
sub
sbb
dec
or
inc
scas
notl
popa
fwait
inc
test
repnz
inc
jns
add
loop
icebp
dec
xchg
scas
adc
jae
xchg
pop
dec
xchg
call
and
lds
inc
insb
call
fs
sti
stc
dec
jl
stos
mov
cmpsb
jg
push
xorl
mov
or
add
pop
sbb
ss
add
jmp
xchg
or
dec
dec
in
push
es
test
cmp
mov
xchg
lret
int3
aas
shll
jns
xchg
and
lods
pop
push
adc
dec
clc
mov
sbb
jg
add
xchg
divb
or
out
inc
cmp
dec
push
xchg
loopne
dec
sbb
xchg
inc
fldcw
movsl
xor
int
cwtl
icebp
add
and
int
js
jae
inc
int3
jl
mov
mov
daa
dec
sbb
pop
push
fimuls
add
mov
push
xchg
or
push
jmp
add
xchg
and
inc
sarb
mov
add
xor
outsb
dec
scas
adc
jnp
inc
jmp
adc
mov
sbb
call
scas
add
lods
popf
bound
sub
lcall
push
imul
fdiv
inc
dec
jbe,pt
xchg
lock
js
inc
push
popf
xchg
jecxz
inc
add
add
loopne
rcrb
aam
dec
scas
mov
sub
dec
mov
shll
mov
shrb
jecxz
jnp
xorl
das
iret
stc
lret
sub
mov
int3
sub
inc
dec
xor
mov
mov
iret
iret
fs
push
add
mov
pop
sbb
xchg
iret
or
enter
stos
push
icebp
dec
mov
inc
lcall
popa
jb
jae
out
es
loopne
repz
scas
mov
jbe
fld
outsb
xor
and
xor
mov
loopne
stos
outsb
pop
dec
add
cmp
stos
dec
int
push
cmpsl
push
loopne
adc
pop
jg
mov
dec
fldenv
and
or
pop
les
pslld
icebp
jne
jl
mov
jne
cli
push
and
out
pop
lea
push
aad
loopne
movsl
out
mov
inc
xor
and
in
jbe
xchg
scas
insl
fdiv
pop
pushf
lods
mov
aas
dec
jge
lret
scas
inc
jb
in
fcmovnb
push
jle
dec
movsl
leave
fs
or
pushf
ror
xchg
insl
call
in
jae
push
push
add
repnz
loope
pop
adc
push
insl
jb
inc
arpl
cwtl
out
xor
or
dec
pushf
loope
stc
testl
in
icebp
pop
std
jns
hlt
xor
mov
push
dec
adc
push
insl
stos
bnd
frstor
cwtl
fnsave
dec
jns
inc
xorb
das
jbe
add
push
fwait
cmpsb
mov
adc
and
dec
les
cmc
movsb
push
mov
mov
adc
jmp
sbb
jg
addb
inc
frstor
mov
xchg
cmpsl
pop
pop
add
mov
dec
adc
lcall
and
jge
das
push
sub
and
jmp
mov
xorb
adc
outsl
push
mov
mul
ljmp
out
cmp
add
sub
jge
testl
out
cmpsb
mov
shlb
jg
sub
test
out
pusha
out
adc
test
xchg
sti
mov
imull
pop
jp
aaa
pop
iret
mov
mov
push
jl
je
and
movsl
arpl
cmp
test
inc
ja
mov
add
mov
js
add
jle
cmp
cmp
dec
adc
out
push
in
bound
ss
jecxz
fstpl
push
ret
insb
out
aad
sbb
dec
xchg
add
addr16
lcall
mov
ja
inc
xor
gs
das
jnp
mov
das
pusha
mov
test
push
repz
or
xlat
and
outsl
test
pop
fwait
mov
ret
test
dec
and
enter
sub
out
daa
jmp
mov
mov
popa
jg
popa
xor
sub
incb
mov
rclb
xor
ficompl
in
pop
xchg
mov
lret
or
daa
push
adc
inc
add
fdecstp
push
enter
mov
stos
cmpsb
push
inc
aam
add
fwait
imul
inc
pause
or
mov
shll
cs
mov
push
or
push
sbb
add
orb
into
jmp
inc
push
sbb
call
sarb
fcompl
pop
loope
push
repz
test
mov
inc
rcrb
pop
or
add
fadd
xchg
fists
bound
and
fdivl
sub
fistl
mov
mov
nop
mov
cld
cwtl
imul
loope
push
xchg
lock
je
loopne
add
pop
ret
mov
dec
pop
cltd
iret
lods
push
add
sub
dec
inc
jp
xchg
fidivs
inc
test
popa
pop
lds
mov
sub
iret
jne
mov
fcoms
xchg
inc
pop
add
mov
jbe
inc
leave
jecxz
mov
push
mov
mov
je
je
sub
aas
out
scas
orl
xor
in
in
popf
cmp
xchg
cmpsb
mov
cmp
jns
mov
ss
lock
dec
ljmp
cmc
push
inc
push
inc
xchg
cmp
xchg
ret
add
push
lods
mov
minps
push
outsb
es
mov
cmpsb
rcrl
push
aas
push
jmp
pop
push
imul
inc
xorl
inc
pushl
add
dec
push
insb
lods
cmp
rcr
repz
pop
adc
test
int
mull
lea
call
into
add
mov
mov
and
mov
and
sbb
clc
cmp
lock
mov
rorl
inc
cmpsl
int
leave
push
cmpsb
push
fstsw
pop
repz
push
pop
leave
push
inc
fistpl
pusha
jl
mov
scas
rep
in
jmp
imulb
inc
add
test
dec
push
jae
rorl
adc
loopne
pusha
sahf
inc
mov
sar
lods
into
sub
add
adcb
sbb
scas
jge
sbb
rolb
mov
insb
fucomp
push
inc
clc
dec
mov
hlt
das
push
mov
add
fistpll
cs
repz
xchg
jg
add
cmp
jle
cmp
iret
stos
cmp
jle
inc
push
push
outsb
dec
insb
add
pop
sbb
xor
and
lods
add
ljmp
ret
rol
mov
push
dec
stos
mov
and
xor
push
scas
mov
movsb
cmp
inc
sub
jp
fcmove
repz
sbb
sub
testl
xchg
jle
in
cmp
dec
les
push
cmpsl
insb
ja
je
lock
cmpsb
popf
repnz
ret
sub
mov
and
jmp
xor
push
out
jo
mov
ljmp
fldcw
jbe
lods
ret
rcll
xor
ds
lret
inc
sbb
filds
adc
and
in
test
mov
dec
js
imul
jmp
mov
push
xchg
cmpb
daa
scas
ficoml
fwait
pop
sbb
shlb
adc
adc
adc
or
int
pushl
fs
cwtl
scas
adc
and
sbb
cmp
cmpsb
jp
test
clc
mov
or
cmp
sbb
fsubl
jno
mov
lcall
das
ljmp
jmp
outsl
jns
mov
jge
pop
sti
out
pop
andb
popa
aam
push
mov
mov
aad
xchg
ret
dec
cmc
jbe
daa
mov
xchg
lahf
dec
mov
pushf
popl
xor
lea
loope
xchg
int3
sbb
daa
jbe
add
iret
out
cwtl
sub
fwait
shr
jecxz
dec
pushf
test
jno
data16
sbb
lcall
push
mov
or
xchg
ss
nop
insb
push
jmp
in
enter
sbb
aas
in
and
mov
cmp
sbb
shlb
cmp
jns
mov
and
gs
inc
imul
or
sar
dec
sbb
clc
bound
mov
mov
pop
inc
xorb
pop
pop
pop
sbb
pop
sbb
fisubrl
loop
mov
mov
xor
and
fs
jo
nop
icebp
cmp
movlps
dec
ret
push
and
rorb
cmpsb
or
scas
sbb
and
dec
lea
stos
jp
add
lods
push
mov
mov
pop
or
push
aas
push
incl
icebp
sahf
jbe
inc
out
jb
jne
sarl
or
jb
movsb
sbb
int
sbb
mov
xor
lret
add
mov
movsb
sbb
pop
push
mov
punpckhdq
adc
xchg
gs
push
jns
pop
mov
imul
push
or
or
add
movsl
mov
rcrl
dec
push
adc
jne
push
mov
pop
jbe
mov
movl
in
cmpsl
cmp
mov
daa
rcrl
fdivp
pop
jge
sub
sbb
xor
call
fstpl
mov
push
lds
out
sar
cmp
dec
arpl
fs
stc
lods
and
mov
clc
test
rcrl
insl
pop
xchg
or
add
cli
add
inc
ja
jecxz
fdivl
lcall
mov
mov
mov
adc
pop
xchg
fs
out
ljmp
fs
dec
dec
push
iret
xor
jno
addr16
fisttps
es
fldenv
adc
push
add
cmpsb
jmp
jmp
and
adc
xor
cli
mov
add
ljmp
mulb
inc
ja
je
or
adc
aaa
sub
jo
repnz
lret
sti
iret
lret
or
call
adc
inc
push
cmp
adcb
dec
pushf
int3
sbb
push
sub
xchg
mov
imul
push
popa
out
roll
mov
jecxz
pop
xlat
mov
test
jecxz
sub
adc
cmp
sub
fisubrs
xchg
inc
lods
pop
sbb
fidivl
arpl
lahf
xor
rcll
stc
imul
sub
mov
adc
insb
lret
xchg
pop
jmp
mov
repnz
out
or
cmpsb
add
stc
leave
or
outsl
mov
call
icebp
pusha
xchg
mulb
fbld
push
jle
jnp
ljmp
jmp
sahf
mov
int3
shll
mov
es
repz
xchg
scas
pusha
loope
xor
jns
sbb
jbe
push
pop
mov
and
sub
adc
jl
jge
out
add
test
int
repz
and
in
xor
arpl
mov
test
in
faddl
std
push
popa
pusha
dec
lcall
imul
out
or
std
out
leave
daa
lret
ja
dec
xchg
cwtl
mov
jae
sub
loopne
ljmp
cmpsb
shrb
push
aas
leave
jg
mov
mov
mov
or
sbb
mov
fstl
sbb
arpl
rcr
imul
in
jle
jns
inc
sahf
cld
push
repz
jl
ss
pop
je
jle
orps
es
into
jmp
insl
in
mov
jg
push
ret
fisttpl
mov
add
std
cmp
jae
movsb
pusha
cs
dec
sbb
inc
movsl
pop
pusha
frstor
test
imul
mov
xor
cltd
adc
fistps
sarb
jae
xchg
jbe
or
jle
scas
jle
stos
or
cmp
movsl
bound
lock
call
jmp
out
insl
mov
sbb
adc
out
aas
bound
call
mov
pop
loop
dec
lret
ljmp
or
fsubrs
pop
pop
mov
fldenv
lea
jge
and
cmpsl
dec
jbe
or
imul
enter
mov
inc
pushf
sub
push
sub
das
pop
and
shrl
shl
xor
add
out
les
jmp
dec
mov
sar
sahf
pop
in
jne
lret
out
pop
sbb
adc
xlat
lret
fstpt
adc
xchg
addr16
sub
lret
and
jnp
pop
and
cmp
js
sbb
std
xchg
adc
test
stc
dec
pop
movsb
mov
dec
popf
data16
cli
das
mov
call
lahf
xchg
jp
ret
mov
test
fwait
insl
dec
cli
adc
push
add
loop
pop
mov
inc
rcl
je
lods
call
jb
dec
push
test
insb
inc
cmp
arpl
cmp
mov
fwait
add
xchg
jbe
xchg
addl
mov
lret
add
fsubs
or
xchg
jo
insl
dec
sbb
lea
cs
mov
daa
js
inc
lret
cmp
cwtl
push
xor
mov
dec
push
das
adc
push
lods
inc
push
int
mov
cs
repz
arpl
lret
stc
fcoml
fisubl
mov
jmp
adc
inc
push
arpl
lret
ljmp
das
loope
sbb
or
adc
xchg
xchg
pop
popf
mov
call
arpl
aam
xchg
mov
addr16
gs
out
xchg
push
std
push
sub
dec
sbb
das
cmp
mov
lods
jbe
stos
sbb
xchg
aaa
jbe
popf
out
stos
pop
add
push
in
mov
les
push
call
pop
ret
mov
arpl
cmp
dec
mov
jecxz
or
insb
rcll
adc
scas
loopnew
rolb
push
pop
loopne
stc
pop
decl
enter
inc
pop
aam
and
movsl
addr16
sarb
mov
jbe
outsb
cmp
leave
push
push
enter
int3
pop
adc
cmp
in
adc
dec
add
dec
mov
ficomps
pop
aas
xor
or
jo
push
in
add
lods
mov
push
push
xchg
roll
sub
out
cmc
push
test
mov
push
leave
loop
pop
lret
add
loope
fdivl
imul
gs
sbb
jo
fiadds
cli
pop
jae,pn
fldt
incb
dec
lock
pop
xor
cmpsb
popa
ltr
mov
or
mov
vmovapd
insl
fcmovne
sub
cmp
inc
xchg
ds
push
push
dec
les
cmp
stos
cmp
stos
xchg
or
mov
mov
rcll
jl
inc
out
mov
cmp
fstl
repz
mov
jl
hlt
mov
sub
sub
std
add
push
sub
xchg
mov
and
and
shrl
push
jl
jg
ds
lock
insl
test
in
pop
cmp
adc
sbb
testb
repnz
pop
js
icebp
popa
ffreep
or
mov
and
inc
mov
in
imul
pop
pusha
or
adc
addl
xor
mov
xor
scas
orl
xor
xor
add
addr16
imul
jmp
push
aad
sbb
and
and
js
lds
ja
dec
add
xchg
rcr
jns
pushl
sarl
fs
cmpsl
lret
scas
leave
inc
cmpsb
xchg
cmp
stos
inc
or
jmp
mov
sbb
filds
inc
test
shr
lret
fs
fbstp
fdivs
mov
push
dec
pop
mov
jmp
mov
daa
stos
arpl
aas
and
add
jge
sarl
jecxz
pop
mov
bnd
mov
sti
pop
dec
test
push
fisttpl
xor
jnp
jnp
inc
xchg
pop
sahf
or
out
mov
push
dec
dec
fcoml
das
ss
test
mov
fdivrl
mov
jbe
mov
and
ljmp
test
arpl
sbb
call
inc
ss
movsl
mov
imul
mov
aad
sbb
push
outsb
sti
fadd
jle
ret
incb
add
fldcw
cli
addl
popf
mov
mov
std
lock
out
pop
fs
add
ljmp
xchg
pusha
mov
inc
push
xor
mov
fwait
scas
popf
loop
dec
inc
cmp
aas
dec
jecxz
and
push
fwait
js
test
jmp
push
cmp
sbb
inc
imul
insb
inc
or
jge
leave
sahf
int
or
jmp
ja
aad
push
cmpsb
or
jne
imul
lahf
dec
cltd
jbe
ljmp
cld
fists
js
mov
lods
mov
or
push
push
shlb
jbe
negl
adc
fdivs
leave
xlat
mov
out
or
lret
mul
lds
int
or
hlt
jb
mov
jp
lret
insb
mov
pop
insl
pop
sub
insl
cmp
testl
lcall
repz
mov
test
dec
xor
lahf
and
cld
xchg
cltd
xchg
or
mov
jb
and
out
imul
push
cmp
icebp
inc
rcrl
test
imul
push
fdivl
gs
loope
jbe
push
popf
sub
ret
js
lcall
cld
into
mov
sbb
cmove
push
jae
into
in
jl
xchg
push
ss
dec
jp
jle
sbb
mov
enter
leave
inc
mov
aaa
jne,pn
or
jns
or
je
dec
sti
imul
fdivl
xor
mov
aam
or
jnp
outsl
je
mov
xchg
xchg
dec
jl
jp
mov
adc
push
fcoms
cld
push
das
fsubp
mov
mov
add
mov
mov
mov
sahf
cmp
inc
stos
les
fdivp
mov
iret
decl
push
sbb
insl
push
jecxz
sbb
add
mov
xor
mov
or
lcall
mov
adc
fstp
adc
enter
into
cmpsl
dec
push
nop
insb
addr16
outsl
mov
mov
mov
inc
or
stos
lret
flds
xchg
fnsave
mov
movsb
push
ficomps
outsl
stos
xchg
mov
xchg
pop
cwtl
repnz
xor
xorb
out
sbb
or
adc
dec
outsl
or
inc
jl
ret
ss
dec
dec
fldpi
or
jnp
fadds
insb
aas
shl
enter
jne
adc
xchg
cmp
add
clc
mov
insb
jb
outsl
nop
mov
sbb
mov
cmp
decl
popf
mov
in
cmp
loop
inc
inc
enter
and
add
mov
adc
popa
lcall
lock
ror
out
icebp
and
or
pop
cld
loope
mov
push
jle
pop
inc
outsb
sarl
in
xchg
lcall
js
jb
pushl
jnp
fmuls
mov
call
sbb
loopne
repz
push
jge
test
and
mov
in
adc
movq
push
or
call
stos
pop
mov
insb
inc
subl
and
in
sahf
ja
add
rol
dec
scas
mov
nop
dec
dec
les
push
jo
sub
bound
xchg
ficomps
dec
jecxz
xchg
mov
aaa
dec
loope
sar
test
in
cmpb
dec
jbe
fldcw
push
repnz
sbb
cli
fdiv
jne
sarb
xor
out
popf
push
bound
ljmp
push
xor
ljmp
addr16
dec
mov
mov
mov
cmpsl
jno
lods
add
mov
pop
test
xor
lahf
mov
out
test
pop
add
cmp
js
sbb
mov
adcb
add
insl
and
add
shrl
xchg
popa
dec
pop
stos
push
fstpl
lret
lret
jge
push
and
add
testb
fidivrs
mov
popf
popa
jle
popf
cmp
js
xchg
cmpsl
xchg
ret
scas
dec
dec
or
pminub
jecxz
cmpsl
and
loope
in
mov
and
scas
lahf
andl
add
stos
sbb
test
lret
or
shrl
push
jb
mov
inc
aad
test
add
dec
xchg
cmp
fstpl
jno
fs
in
xchg
add
jmp
sbb
mov
fcos
xchg
xchg
adc
mov
xchg
mov
das
insb
adcb
jns
jle
xchg
push
sub
sub
sbb
xchg
push
jl
push
stos
mov
inc
jl
lods
loop
push
push
negb
pop
pushf
mov
and
dec
outsb
adc
and
sarl
imul
aad
jle
xor
lea
popa
pusha
lret
inc
xchg
inc
pop
punpcklwd
stos
negl
arpl
repz
xchg
imul
mov
insl
sbb
xor
mov
mov
push
imul
or
xchg
testl
or
in
daa
imul
aam
fimull
lods
pop
xchg
repz
xchg
xchg
or
push
fsubs
cwtl
lods
enter
imul
loopne
xor
sub
mov
pushl
push
scas
test
decb
sarl
and
and
jns
sbb
ja
dec
clc
mov
lahf
jo
add
loope
pop
adc
movsl
test
icebp
movsl
cmp
shll
jle
fwait
mov
stc
call
mov
mov
call
fmull
push
fwait
stos
mov
mov
outsl
pop
iret
test
mov
fidivs
jge
push
xchg
fidivrs
dec
xchg
jecxz
xor
mov
push
dec
int
js
dec
mov
inc
mov
and
dec
int
js
dec
jmp
pop
jne
mov
add
popf
sbb
dec
mov
pop
jb
push
inc
sub
aam
sbb
lahf
mov
test
xor
jns
outsl
call
dec
aam
pop
out
fdiv
inc
aad
sub
insl
out
push
cwtl
xchg
lcall
adc
mov
cld
add
int3
mov
gs
rorl
pop
inc
sbb
cltd
and
ss
clc
cmc
pop
dec
push
int3
pop
mov
jne
test
mov
and
mov
inc
cltd
mov
pop
nop
pop
dec
xor
jne
nop
mov
mov
fisubs
pop
ja
test
pop
xor
jecxz
cs
fiadds
leave
mov
mov
xlat
xor
sbb
jns
add
push
push
sarw
clc
mov
lea
add
iret
ret
fstpl
push
in
fxch
cmc
push
jl
and
arpl
jae
movsb
push
insb
pop
cld
inc
or
xchg
cld
imul
or
mov
fildl
cmp
sbb
test
int3
push
push
lret
mov
xor
stos
adc
fstpt
push
outsb
cmp
mov
out
std
scas
jnp
sbb
sbb
adc
sub
mov
vmptrst
enter
aam
xor
adc
je
mov
xchg
cmp
jp
jecxz
xor
lods
test
in
xor
lock
and
repz
sub
out
xor
push
jae
pop
pop
movsb
les
imulb
or
push
ja
cmp
pop
xchg
mov
add
pop
jns
loopne
loopne
fidivrl
flds
out
add
jg
les
test
mov
mov
pop
or
ljmp
jg
xchg
adc
sub
divl
test
and
insb
fstpl
popf
pop
sbb
xor
rolb
inc
mov
and
shrl
xchg
sbb
lea
xchg
cmp
push
jns
cmpsb
clc
pop
cmp
into
cmc
push
insb
pop
push
repz
clc
sahf
int3
nop
mov
rclb
imul
mov
es
xchg
negl
js
aas
xor
loope
subl
test
inc
adc
or
and
cmp
enter
mov
imul
lods
cwtl
fmulp
mov
addr16
add
add
adc
xor
lock
fdiv
or
ffreep
int
shl
psllw
ljmp
stos
out
mov
jle
adc
or
cli
test
xor
jns
cmc
bound
ljmp
loopne
jl,pt
std
mov
repnz
mov
outsl
stc
sbb
rolb
mov
mov
add
test
mov
sbb
dec
lahf
sub
jmp
mov
inc
mov
inc
add
mov
lock
pop
jo
jecxz
or
int
and
and
std
sbb
inc
sub
jle
and
cmp
loopne
shl
movsl
adc
int
fdivrp
in
xlat
xlat
ret
lods
xchg
adc
ss
push
xor
push
mov
dec
cmovs
pop
jno
jg
movsb
ss
or
lds
jp
mov
mov
mov
lock
jo
cwtl
lahf
pop
stc
dec
and
fwait
lods
pop
lock
adc
mov
aad
cwtl
scas
daa
sbb
mov
pop
push
pop
sub
and
xlat
jg
push
fs
sti
and
hlt
rcll
xor
add
pop
test
pop
push
or
jg
ds
cmp
mov
push
jl
cmc
repz
fidivrs
js
sub
adc
inc
xor
pop
mov
cwtl
add
in
or
add
test
subl
sub
cmp
arpl
or
adc
jnp
xchg
jne
jne
aam
dec
or
pop
push
pop
adcl
dec
rol
lcall
popl
mov
fcmovb
mov
testb
into
jmp
dec
pop
and
mov
das
xor
ja
xchg
jp
jle
lods
mul
or
lcall
inc
movsb
cmp
test
xchg
xor
andl
stc
scas
push
fmull
push
lock
decl
dec
lea
dec
fmuls
push
jo
adc
add
addl
jmp
dec
adc
mov
test
dec
in
pop
shl
ja
orl
lods
test
std
sub
in
mov
aad
stos
mov
fwait
jle
mov
movsl
sbbb
xchg
lock
arpl
sbb
pop
cmpsl
push
call
cmp
imul
dec
pushl
jae
jnp
pusha
pop
mov
pop
hlt
ficoms
sub
inc
xchg
mov
mov
jo
xor
stos
xor
cmp
out
scas
mov
adc
sbb
adc
xor
or
add
rolb
or
clc
cmp
lock
push
jb
stos
imul
mov
clc
mov
fisubrs
ja
add
dec
rorl
mov
fldcw
push
push
bound
sub
popf
es
and
lret
lods
mov
cmpsb
insl
subb
and
mov
inc
mov
repz
cmpsl
add
fists
or
jb
and
not
les
rorb
xchg
in
mov
loopne
jl
repz
je
jo
inc
lods
decl
stos
sbb
loopne
fcoml
or
pop
out
xchg
call
add
test
adcb
push
stc
loopne
jg
flds
and
cltd
mov
mov
test
inc
mov
outsl
pop
or
sti
cmc
fldcw
iret
aas
sahf
xchg
sbb
in
mov
mov
push
cmpsb
out
arpl
clc
push
mov
cmpsl
mov
mov
out
jae
cmp
jne
adc
jno
fcmovnb
test
bound
sbb
ljmp
jne
leave
imul
stos
jno
fcomps
add
mov
mov
fistps
push
jne
movsb
push
push
fildll
mov
pop
scas
jbe
sbb
mov
les
aaa
mov
jp
mov
dec
shll
insl
sahf
or
sbb
mov
pusha
pop
movsb
call
leave
test
or
pop
jg
mov
aas
mov
pop
push
xchg
jno
jb
mov
cli
or
pop
fldt
out
fisttpl
add
push
in
movsl
jmp
mov
dec
pop
add
cli
fcmovnu
out
adc
push
sbb
int3
pop
add
jle
int3
arpl
add
xor
mov
dec
iret
mov
push
popf
out
outsl
scas
imul
push
mov
dec
icebp
lcall
addl
fcmovnb
inc
sbb
addb
jle
imul
dec
scas
add
pop
fdivrl
sbb
out
fistpll
push
popf
movsl
fidivl
xchg
ret
mov
xor
bound
mov
adc
bound
mov
xor
pushf
sub
xor
adc
lret
xchg
mov
dec
loop
jbe
mov
xchg
dec
shlb
les
and
xchg
fdivs
mov
add
ret
lea
out
scas
in
outsb
jecxz
mov
test
mov
add
js
sub
das
jle
push
repz
mov
push
mov
mov
lods
or
sub
sbb
arpl
repz
lahf
adcl
addb
inc
adc
rorb
addr16
out
adc
js
dec
pop
inc
push
jb
xlat
fldcw
jb
add
loop
mov
cmpsb
out
dec
cli
lods
lea
mov
pop
mov
andl
mov
frstor
mov
and
sub
sti
stos
aas
jl
fs
dec
or
sbb
push
cld
int3
xchg
dec
fidivrs
lret
adc
dec
data16
dec
sub
in
sar
push
mov
out
adc
sahf
adc
dec
fwait
mov
push
dec
and
fs
push
inc
pop
and
dec
aam
das
push
dec
sub
into
repnz
sub
out
ds
and
jb,pt
mov
mov
add
xor
hlt
mov
outsl
inc
mov
daa
push
dec
mov
repz
push
add
into
add
xor
push
cmpsl
fwait
outsl
cmp
and
pusha
mov
hlt
and
jno
jns
lahf
cs
or
add
mov
push
fs
into
movsl
insl
rclb
dec
dec
out
fwait
hlt
mov
adc
and
enter
mov
stos
repz
sbb
jnp
popf
hlt
daa
jp
daa
roll
ficomps
sub
fcmovbe
and
dec
scas
jle
mov
cltd
adc
insl
mov
push
fiaddl
xchg
aaa
lods
cli
mov
nop
pushf
push
adc
mov
dec
sahf
mov
mov
push
xor
sbb
fstpl
insl
jecxz
xchg
stc
fwait
jge
icebp
adcl
xor
mov
mov
fcmove
imul
jmp
repnz
dec
xchg
clc
fs
sahf
int3
shr
add
adc
out
dec
fadds
push
dec
cmp
and
loope
popf
fstl
or
push
xlat
imul
fmull
int
cmp
or
fxch
aam
movsl
lcall
push
fwait
icebp
leave
ss
xor
pop
into
test
shlb
jl
js
int
mov
push
out
xor
bswap
xchg
mov
mov
es
add
or
shlb
movsb
ss
pop
mov
sbbl
ficoml
mov
int3
sarb
out
icebp
push
pop
sub
dec
mov
cmp
scas
xchg
xlat
ja,pn
clc
fdivrl
roll
adc
stos
and
sbb
jle
xchg
nop
dec
popa
mov
pop
jnp
inc
inc
aaa
lcall
lcall
mov
ja
sahf
pop
mov
fwait
sbb
popf
enter
dec
mov
cmpsb
ret
cmpsl
adc
dec
jmp
lcall
das
and
loope
faddl
inc
lds
incl
stos
adcb
push
icebp
add
mov
cmc
jb
pop
cmp
ja
imulb
push
jns
sbb
push
push
jle
xor
cmp
in
dec
or
bound
mov
jae,pn
push
lret
fnstenv
pusha
and
mov
cmp
or
and
addb
and
or
mov
dec
aas
ljmp
push
push
push
in
mov
add
dec
add
inc
gs
test
xchg
jg
int
dec
mov
out
push
push
mov
mov
leave
inc
push
sub
cltd
sbb
das
pushf
repnz
or
in
scas
cmp
pop
mov
aas
jb
adc
sbb
add
loop
cli
outsb
inc
push
sub
sbb
mov
jnp
add
sbb
cltd
mov
icebp
cmpsl
jno
cwtl
ss
call
es
adc
loopne
insl
sbb
ret
lea
call
dec
inc
xchg
imul
enter
add
js
fcmovb
test
push
daa
inc
mov
bound
and
leave
pop
mov
dec
xchg
push
inc
fcoms
rcrb
ljmp
sbb
loop,pt
subb
cmpsl
or
subb
faddl
and
in
mov
lock
sbb
sub
jo
mov
push
cmpsl
ja
cmp
push
lcall
fsts
idiv
cmpsl
jbe
sbb
pop
stos
fdivs
mov
cmc
mov
cmp
push
or
out
mov
add
es
outsl
lret
cmpsb
orl
add
orb
ret
shlb
out
pop
pop
int
sbb
leave
loopne
orl
and
pop
int3
aaa
cmc
popa
pop
xchg
lret
push
cmc
push
sbb
jae
jnp
js
cmpb
scas
mov
jno
fisttpll
test
ss
lret
mov
xchg
dec
ret
iret
jg
in
mov
lea
sub
mov
cmpsl
test
lret
add
sarb
fistps
sub
jns
idivb
push
cmpb
jb
js
mov
fdivs
cmpsl
cwtl
jmp
jecxz
leave
repz
add
push
bound
popf
adc
into
in
loopne
sbb
fsubrl
pusha
in
aad
loop
fidivl
aam
popf
and
enter
sti
cmp
repz
inc
mov
das
mov
rcrl
add
sbb
addb
ficoml
sbb
aad
mov
cmpsb
cld
loopne
and
jbe
mov
dec
jmp
add
das
inc
pop
int
or
fldl2e
xor
or
popa
xor
bswap
and
shll
loope
insb
sub
mov
scas
repnz
and
ljmp
pop
into
es
ret
adc
loop
insb
dec
add
sahf
push
addr16
cs
pop
xor
out
adc
lcall
fsubs
and
stos
stos
out
sub
pop
inc
lods
in
fnstcw
in
pop
push
mov
in
lock
je
fidivl
cmpsl
adc
jecxz
sbb
sbb
inc
popa
dec
jl
loope
jecxz
push
push
stc
repnz
stos
repnz
xchg
in
jecxz
push
jle
aad
shlb
pop
pop
aam
rorb
cltd
sahf
push
push
cmp
gs
cmpsl
cmp
ret
jbe
pop
and
jge
pop
clc
jo
loopne
aas
data16
fistps
add
fdivl
xor
sbb
inc
sub
scas
add
cwtl
rcr
lock
cli
aas
popa
loop
stos
adc
pop
add
aas
sbb
inc
push
jle
jge
ret
xchg
push
mov
lcall
iret
jae
xorl
dec
fwait
sub
rorb
push
ja
test
fstpt
and
divb
sub
ficomps
fs
sub
clc
mov
das
xor
lods
loope
add
cmp
fcoml
adc
pop
lock
shll
sbb
loope
pop
cmpsb
jne
in
push
aam
les
test
push
scas
popf
lock
sub
mov
lock
pop
repz
adc
push
rorb
xor
jp
sarl
mov
sub
dec
add
cmpsl
adc
test
out
int
push
dec
pop
lods
xchg
jmp
or
add
movsb
jns
mov
xor
inc
mov
jecxz
sbb
cmpsb
hlt
arpl
movsl
arpl
mov
ja
imul
pushf
cmpsb
sub
lock
lds
dec
cmp
test
jmp
in
pop
mov
lods
inc
xchg
lcall
push
sbb
pop
dec
jbe
bound
mov
lea
xchg
lods
xchg
lods
dec
mov
pusha
popf
sub
cmp
cmp
jg
jl
inc
insb
adc
cmpsb
dec
in
andl
nop
and
push
aaa
jae
mov
out
mov
push
pop
push
lcall
cmc
int3
ss
test
dec
pop
push
mov
cwtl
jnp
mov
aam
cltd
addl
xchg
es
dec
push
or
jne
fstps
push
dec
jns
sahf
add
or
lea
sub
xorl
aad
sbb
pop
aaa
push
or
jo
xor
sbb
push
enter
fwait
adc
mov
sti
push
stos
add
rorb
mov
out
adc
or
xlat
rcr
push
imul
jno
and
or
push
andb
sub
xorb
fwait
sbb
adc
clc
mov
mov
adc
das
lahf
add
lcall
jg
insl
adc
ficoms
cmp
iret
and
mov
fistps
jge
gs
dec
addb
and
sti
in
nop
jb
out
lret
jb
mov
ss
test
push
xlat
xor
adc
mov
xchg
cmc
vpsubsb
pop
add
mov
xor
add
gs
adc
cmp
add
nop
xor
loope
or
repz
pushf
xorl
movsb
inc
jne
popf
adc
leave
leave
aad
pop
rcrb
sarl
out
cmp
out
dec
fcomip
jl
mov
adc
orl
sub
aaa
or
imul
pusha
cltd
arpl
test
push
call
rorb
shlb
add
cld
imul
xor
in
in
pusha
add
and
mov
hlt
imull
jge
dec
pop
imul
je
mov
ss
sub
xor
fdivrs
imul
hlt
in
jecxz
push
inc
aad
imul
xor
mov
pushf
scas
imul
outsl
lods
sub
xchg
nop
cmp
lret
int3
cmp
push
std
mov
pop
cmp
xor
adc
lret
adc
dec
xchg
push
jo
sahf
stc
lret
mov
fdivr
xor
insl
mov
movsl
repnz
mov
out
xchg
ss
or
mulb
test
adc
fcompl
fs
and
cmpsl
add
or
pop
xor
inc
testb
cmp
push
push
mov
cwtl
aam
ffree
pop
inc
popf
popf
cmpsl
je
ret
lret
mov
xchg
xor
and
les
pop
mov
xor
cs
lods
insb
cltd
scas
adc
in
push
js
sub
inc
mov
sbb
roll
test
repz
xor
lods
rol
mov
mov
dec
lahf
mov
xchg
loope
in
inc
pushf
arpl
aaa
dec
mov
dec
inc
adc
jnp
push
push
stc
xor
cmp
loope
adc
call
mov
jl
inc
push
push
aam
jns
sbb
ja
movsb
jmp
into
jg
adc
mov
testl
movsb
test
adc
int
inc
mov
in
xor
stos
iret
push
pop
xchg
sarl
out
dec
mov
cmp
push
ret
cmp
dec
ds
push
jecxz
push
add
push
adc
sbb
dec
xchg
sub
test
pop
sub
shrl
xchg
sbb
fdiv
adc
cmp
and
mov
in
dec
cmp
cmp
outsl
les
jne
popa
pop
push
adc
mov
mov
jns
lea
xchg
pop
loop
jo
cs
int3
ror
jno
mov
ret
jno
cltd
loop
mov
adc
je
sahf
push
in
js
andb
fmuls
out
mov
push
pop
and
repz
iret
cmp
fsubl
hlt
mov
outsl
fisttps
mov
stc
jno
das
scas
and
xchg
test
mov
jecxz
sub
dec
rorl
mov
pushf
lods
push
jl
sbb
lock
rep
cli
stos
hlt
mov
push
jno
dec
cld
xchg
test
and
mov
pop
mov
push
push
push
sbb
jne
std
nop
dec
loop
mov
ret
mov
mov
adc
jno
popf
sti
mov
cwtl
inc
dec
jp
jb
and
xor
sbb
sbb
mov
push
mov
jge
les
lock
or
test
fcmovbe
clc
scas
jmp
cmpsl
jmp
jnp
mov
inc
and
insb
jp
inc
pushf
cld
loope
jmp
or
lahf
mov
fwait
mov
lahf
popf
sub
jb
cmc
divl
dec
stos
jg
sub
js
pop
sahf
arpl
push
mov
sub
xchg
mov
loop
add
mov
imul
and
dec
cmp
xor
lock
mov
and
dec
or
jp
mov
push
movsb
outsb
jo
cmpb
sbb
sahf
jne
and
add
and
in
test
shr
and
cmpsl
clc
lea
mov
mov
adc
adc
aad
dec
subl
sub
and
or
pop
add
xor
cmpb
pop
test
push
shlb
sbb
sbb
jge
and
je
in
inc
iret
lahf
xor
inc
sub
mov
notl
and
test
aad
dec
arpl
in
xor
and
mov
je
int3
cmp
loopne
adc
rcl
mov
add
test
nop
jg,pn
inc
dec
push
fiaddl
xchg
pop
lret
cli
mov
add
add
push
sub
xchg
mov
out
bound
data16
xorb
loop
cmpsb
mov
clc
adc
mov
rcrb
and
lahf
pop
addr16
push
jae
rclb
imul
ret
scas
add
fldt
iret
cwtl
ror
inc
in
xor
lea
or
jge
push
test
fildl
je
std
int
popa
bound
cmp
test
mov
arpl
jp
dec
cmp
xor
or
rcl
dec
mov
add
test
jae
sahf
xorl
or
rcrl
pusha
pusha
sbb
cwtl
inc
data16
icebp
add
jns
or
out
loopne
in
cmpsl
fwait
adc
ror
cwtl
stos
pop
in
cltd
repz
adc
cmp
or
jle
jle
gs
test
xchg
xchg
aad
loope
or
int3
pushf
lret
mov
or
push
dec
adc
push
js
sahf
add
popa
test
int3
rorb
add
xchg
mov
imul
bswap
cltd
inc
scas
and
cmp
inc
loope
fstp
sbbl
pop
cmc
fidivrs
inc
shll
outsl
rcrl
mov
inc
or
sub
mov
inc
jnp
ljmp
mov
in
mov
fbld
xchg
call
mov
insl
outsl
shll
test
lea
adc
int
jo
or
pop
push
fldenv
iret
xor
out
sub
or
loope
fst
pop
push
add
mov
pop
clc
aas
iret
fdivrl
fdivs
lret
fidivrs
jne
jbe
pop
arpl
lods
or
add
call
xchg
fwait
jns
mov
imul
shrl
pop
mov
pop
imul
jl
or
or
sbb
aam
pop
add
add
dec
pop
fdivrp
push
add
mov
stos
imul
das
lahf
and
jo
add
ret
insb
imul
adc
imul
push
hlt
dec
loop
arpl
leave
es
mov
add
cltd
sbb
pop
les
cmp
sbb
inc
js
fistps
xor
jl
xchg
fstpt
mov
lock
shlb
jne
jne
es
das
add
pcmpgtw
xor
js
mov
scas
cmp
in
pushf
inc
and
das
iret
gs
and
push
std
fstpl
jl
or
cmp
or
lock
jno
and
je
clc
rolb
leave
int3
ja
cli
jecxz
outsb
mov
mov
cmp
sbb
stc
mov
xor
mov
xor
les
fwait
adc
gs
add
jle
ret
sarl
into
jmp
sbb
jo
stos
mov
and
dec
mov
mov
lods
mov
and
lods
mov
or
pop
daa
loop
and
jbe
mov
pop
sub
adc
push
jne
xor
mov
dec
and
cmp
dec
dec
inc
orl
cld
jbe
outsl
lahf
fsubrs
or
fs
inc
fs
fs
jmp
and
aad
dec
jle
sbb
aaa
mov
scas
lahf
mov
or
jae
mov
inc
pusha
push
out
mov
mov
cmp
and
mov
into
lret
int3
leave
ja
lock
stc
push
sbb
sbb
add
clc
loopne
inc
pushf
mov
dec
jns
mov
jmp
jge
pop
shll
nop
into
stc
repz
faddp
mov
xchg
jmp
js
imul
sahf
push
clc
adc
ret
inc
aas
mov
add
les
testb
cmp
add
hlt
bound
fsubp
add
cli
and
add
pop
add
ficoms
lahf
pop
or
dec
arpl
dec
pop
mov
xor
ds
std
test
push
mov
incb
fimull
lds
adc
and
push
and
or
pop
repnz
sbb
add
shll
sub
inc
lock
scas
push
out
dec
jecxz
mov
imul
mov
inc
cmc
dec
xor
inc
lcall
je
les
inc
add
pushl
aaa
or
adc
and
ror
push
or
mov
je
das
imul
adc
mov
xor
ret
testb
and
adc
mov
std
movsb
scas
pusha
xor
cmpsb
jmp
in
jmp
push
jns
jne
dec
and
test
push
mov
popf
cld
movsb
xchg
test
add
imul
xor
cmpsl
mov
jns
pop
pushf
inc
sbb
test
lock
and
add
xchg
cmp
mov
pop
pop
cli
lock
push
jo
xor
pushw
stc
and
lock
push
push
pop
out
lret
cld
mov
push
add
xchg
mov
inc
call
inc
jl
jp
xor
dec
lds
stos
les
cld
gs
stos
flds
lahf
cld
and
pop
sub
xor
jmp
xor
pop
xchg
shlb
jg
xor
push
movsl
insl
cltd
ds
or
push
add
test
daa
adc
add
pop
popf
mov
repz
push
xchg
stos
in
out
push
lahf
mov
mov
push
jl
sub
mov
addr16
leave
mov
pusha
push
add
lds
sub
mul
aam
dec
fcmovnb
out
sahf
movsb
cmp
adc
mov
movsb
leave
or
test
xor
mov
push
cmp
sahf
incb
add
sahf
push
fstps
and
pop
repnz
adc
repz
lahf
inc
fwait
stc
cmc
mov
into
test
jg
push
lret
mov
jno
lcall
std
fmuls
jmp
fs
xor
fists
jp
clc
hlt
movntps
fbld
jecxz
jecxz
dec
sub
mov
push
aad
mov
sbb
or
test
pushf
fiadds
in
add
cmpsl
jle
or
stc
loopne
and
push
add
inc
push
cwtl
adcl
mov
inc
sahf
lahf
pushf
jl
stos
lahf
mov
jle
mov
shlb
inc
in
fwait
rcll
cs
fcmove
or
inc
faddl
xchg
inc
mov
enter
addb
add
mov
dec
xchg
dec
mov
outsb
sub
inc
xchg
mov
xor
pop
fisttps
fucomi
jo
daa
mov
unpckhps
and
aad
pusha
dec
loop
stc
int3
lret
icebp
loopne
sub
xorb
inc
push
js
cmp
popf
jb
pop
mov
mov
testb
xorl
cmp
fimuls
pusha
movsl
and
xchg
and
or
mov
inc
xlat
cmp
dec
decl
jnp
sbb
sti
mov
and
add
cmpsb
lods
das
pop
aad
movsb
mov
je
mov
pop
dec
out
push
lods
xor
jb
cmovb
lcall
jo
and
pop
mov
dec
adc
jnp
les
mov
dec
daa
inc
mov
add
xlat
xchg
pop
jge
es
mov
push
xor
adc
push
jns
pop
push
test
push
add
lods
push
adc
push
push
ss
lea
xor
jg
mov
es
jae
subl
sbb
lahf
rorl
push
iret
fists
xlat
icebp
pop
out
add
mov
push
stos
add
push
sbb
imul
mov
cmp
aad
mov
loop
jge
jno
addb
insb
sub
jo
lcall
dec
jo
bound
in
in
or
pop
movsl
jge
add
or
push
adcb
lcall
enter
adc
les
rol
ljmp
jne
outsl
sar
inc
inc
in
test
add
jg
cmpsb
movsb
mov
lahf
cltd
faddl
ret
push
popf
pop
pusha
jmp
lock
jge
dec
adc
pop
dec
ds
mov
fistl
adc
jb
leave
jmp
shrl
jne
pop
in
xor
test
out
loopne
popa
cmp
pop
pop
mov
jmp
fstpt
mov
je
mov
sti
mov
and
or
jns
jns
roll
or
jp
and
mov
jo
loope
or
adc
pusha
ss
cmp
cmp
in
outsb
shll
add
ss
dec
jbe
adc
cmpsb
loopne
popf
jg
hlt
ja
xlat
and
jne
mov
xor
add
inc
orb
push
test
pop
mov
fs
mov
stos
pop
push
fnstcw
jg
mov
pop
out
cmpsl
lret
in
je
cmp
gs
rcrl
stos
insl
fstpl
push
jge
cwtl
add
ja
sbb
testb
push
out
scas
jne
xchg
cmpsl
daa
nopl
gs
rcll
add
jg
scas
mov
jno
mov
xlat
xor
or
jg
roll
int3
sbb
cmp
fstl
lea
mov
or
in
sub
or
mov
mov
cld
rclb
loopne
hlt
call
xrelease
push
and
int3
clc
imul
mov
jns
xor
divl
jle
mov
xchg
jbe,pn
xor
in
xchg
mov
sti
repz
ljmp
xor
mov
ja
out
jbe
int
je
dec
les
inc
mov
jo
xchg
scas
or
jne
mov
sahf
call
jmpw
inc
loope
sti
mov
je
and
jne
xchg
inc
xor
loopne
addr16
fists
pop
jno
xor
movsb
bound
xchg
xor
jle
push
mov
sub
das
imul
cmp
iret
aad
cmpsl
sub
ret
into
or
jmp
inc
andl
mov
out
or
lahf
fwait
mov
xor
test
sbb
push
loope
lret
jo
dec
adc
cmpsb
sbbl
push
push
and
xlat
or
pop
lock
jno
out
jl
stc
xor
jbe
and
addb
mov
into
inc
inc
or
jge
mov
scas
outsb
data16
mov
pop
pusha
lret
into
movsb
push
xchg
shll
jb
xchg
sub
or
push
dec
or
ficoms
je
cmpsl
push
dec
add
sub
stc
or
testw
hlt
mov
and
popa
mov
mov
or
pop
mov
stos
sub
rol
insl
pop
sbb
fidivrl
sbb
jge
fimull
jns
push
pop
mov
das
jno
fdivl
cmc
xor
dec
xor
adc
sbb
dec
popa
mov
xor
into
lods
test
xchg
xlat
push
mov
mov
aas
push
push
cmp
icebp
repz
sbb
repnz
mov
inc
adc
sti
out
jbe
stc
lahf
jl
in
out
xor
xchg
cmp
pop
and
aas
outsb
xchg
push
sbb
lods
sub
add
int
in
and
xchg
push
push
adc
std
dec
pushf
mov
cld
pop
sub
jg
push
dec
pop
mov
sbb
jmp
inc
test
pop
dec
mov
push
js
int
movsb
ja
lods
cmc
push
jge
lds
insb
sbb
lret
lahf
lret
arpl
cmp
xlat
inc
push
out
fisttpl
jo
das
jge
jns
jno
repnz
ss
fildl
jnp
clc
test
cmp
out
aad
std
icebp
mov
mov
push
ret
pop
add
cmc
dec
movsb
sub
jb
mov
dec
pop
jle
dec
adc
sub
mov
push
mov
sti
mov
push
xor
cltd
sbb
mov
popa
cmp
push
test
enter
inc
jl
movl
rcll
mov
cmc
or
mov
int
aaa
gs
push
and
jbe
xchg
dec
jnp
push
sbb
sub
pop
mov
mov
lret
shl
mov
jb
dec
xchg
mov
popf
cmp
testl
insl
cld
fistl
pop
jp
pop
sub
mov
imul
sub
fistpll
loop
popf
xchg
cmp
arpl
xchg
lods
jo
popf
sub
pop
ss
or
js
mov
stos
jle
aas
scas
filds
rorl
shr
movsb
pop
cmp
jae
adc
push
fstpl
adc
add
push
jecxz
in
mov
jp
push
sbb
loope
sbb
mov
js
pop
push
loopne
push
and
lret
lods
out
rorb
push
pushf
mov
leave
icebp
ss
rcr
ret
mov
pop
ss
pop
push
or
or
ret
push
dec
jbe
lods
aas
cmp
sbb
sub
ja
cmpsb
jp
sub
push
and
or
imul
inc
jnp
enter
pusha
xchg
int3
cmpsl
xlat
pop
daa
or
pop
iret
mov
xor
add
jo
xor
cltd
cmpsb
cmp
jmp
pop
inc
jne
loope
pop
mov
outsl
test
aad
in
push
mov
xchg
sti
cltd
call
aas
mov
imul
aad
js
dec
fisubs
xor
xor
jmp
xchg
cmp
nop
cmp
leave
or
jo
adc
xchg
mov
das
add
je
mov
cmc
mov
jne
mov
stos
stc
bound
dec
shr
or
jmp
lcall
cltd
std
push
les
ja
test
popf
pushf
fstps
add
fsub
aad
sub
inc
inc
mov
mov
push
xor
iret
cmp
xor
cli
imull
add
dec
int
imul
inc
lods
out
mov
imul
aam
rcl
shlb
fdivs
pop
push
sbb
mov
bnd
push
sbbl
fldl
pusha
or
add
xchg
stc
mov
cmc
bound
xor
lea
loop
std
pop
xchg
jbe
mov
or
int3
dec
add
pop
fwait
ret
push
int
add
inc
cs
xor
inc
sub
push
dec
push
icebp
sbb
ret
and
mov
leave
and
out
insb
aaa
add
add
ds
rcrb
jne
clc
xchg
aam
mov
inc
ja
lcall
fmul
cmpsb
enter
push
mov
mov
lds
cmp
gs
clc
push
xchg
mov
xor
sub
ss
int3
xor
or
xor
inc
push
sbb
jmp
inc
dec
and
sbb
dec
fcmovb
mov
rclb
rcll
sbb
in
or
push
adc
ss
jmp
daa
popf
pushf
dec
lods
add
push
inc
ja
jb
lret
mov
jmp
rolb
xchg
push
cmp
hlt
add
adc
in
or
rcl
xchg
stos
cmp
xchg
dec
or
mov
mov
inc
stos
aam
push
clc
mov
lret
mov
xchg
sahf
int3
pop
aas
sbb
or
mov
add
ja
inc
aaa
inc
frstor
pop
xor
into
mov
xor
jp
push
add
xchg
xchg
aad
bound
roll
dec
enter
in
imul
repz
gs
addr16
pop
mov
cmp
sub
addr16
dec
loopne
sub
aas
dec
adc
push
lret
adc
push
mov
stc
xchg
loopne
es
fucomi
iret
in
js
and
xor
sbb
cwtl
add
js
popf
test
out
aam
push
ret
mov
pop
test
orb
pop
mov
push
mov
jg
popf
pop
jmp
mov
add
mov
push
loope
jb
add
xchg
lods
loop
adcl
sub
pushf
out
and
jmp
fcoml
sub
jo
and
and
inc
movsb
repnz
dec
out
std
stos
icebp
inc
movsl
sub
clc
clc
push
divl
shl
mov
mov
fildll
lcall
push
mov
in
jge
stos
in
inc
cld
xchg
insb
inc
cld
cmpl
outsl
pop
cwtl
pop
cltd
sub
cmp
dec
jp
into
pop
lahf
push
and
stos
rorl
xchg
fadd
dec
lcall
sub
pop
push
test
and
aam
adc
fnstsw
add
rcll
fsubr
sbb
jno
push
push
mov
inc
sub
cli
pop
push
cmc
jb
fdivrp
dec
lods
push
mov
xlat
mov
push
lock
arpl
jmp
mov
int
mov
aad
mov
pop
or
add
pop
sahf
dec
sub
imul
imul
jne
and
xchg
ret
mov
andl
sbb
sbb
adc
imul
loope
add
dec
inc
cmc
fistpl
mov
scas
es
add
xchg
and
sub
lahf
cmp
xor
mov
push
xchg
adc
xchg
mov
test
fdivrl
mov
hlt
sub
test
xlat
cmp
and
push
cmpsb
mov
ja
mov
mov
aas
mov
aad
rcll
iret
mov
decb
and
imul
movsb
sbbb
pop
js
jb
ror
cmpsl
cmp
or
in
mov
fidivl
push
mov
sarl
sbb
sbb
inc
pushl
jg
sbb
and
pushf
mov
ja
jl
sbb
rcr
lcall
loopne
add
in
xchg
mov
cmp
fcomps
lods
scas
xor
subb
dec
jb
dec
mov
dec
xchg
arpl
stc
xchg
jmp
ja
jno
push
mov
pop
jp
dec
mov
pusha
cmp
xor
push
shrl
leave
mov
cmp
and
test
sub
fs
fldcw
xor
lds
out
or
cmp
into
mov
jbe
dec
cmp
incl
pop
rolb
pop
jne
inc
mov
mov
imul
xchg
aam
scas
jae
xor
lret
fs
cwtl
jnp
and
xchg
jle
fidivrl
sarb
js
push
jnp
push
adc
pop
xchg
fistps
pusha
mov
mov
fstpt
clc
bound
clc
scas
or
xchg
ja
mov
add
int
lahf
daa
pop
mov
inc
insl
adc
cltd
mov
es
outsb
mov
fmuls
sbb
pushl
and
je
xor
mov
and
hlt
and
inc
scas
jbe
push
pop
push
sbb
addr16
sbb
stos
imul
xchg
jl
mov
nop
scas
xchg
dec
inc
adc
push
mov
adc
rolb
mov
push
stos
leave
test
fildl
xor
cmp
add
stos
repnz
js
test
fstl
xor
jne
pusha
and
or
shrb
push
and
mov
test
data16
add
xor
mov
cmp
jmp
mov
lock
arpl
and
insl
or
dec
enter
lret
insl
jo
cmpb
rolb
jns
js
fisttps
jns
cmp
push
mov
mov
add
fildl
mov
in
xchg
xchg
inc
ret
hlt
jb
xor
fwait
adc
fiadds
push
jns
mov
jge
mov
insl
movsl
pop
mov
in
repnz
jge
ror
xor
xchg
add
push
cmp
in
rclb
and
fwait
sub
imull
insl
sbb
jo
popf
xchg
ja
sbb
lret
adcl
xor
jp
jle
jp
dec
cs
sbb
xchg
hlt
pop
loopne
push
in
loopne
rorl
pop
outsl
leave
shlb
jns
inc
fildl
fnstsw
mov
xchg
pop
xor
loope
or
cs
dec
add
adc
add
cli
aam
dec
push
incl
lods
inc
das
cwtl
sbb
inc
cmp
push
dec
inc
pop
pop
push
sub
fildl
mov
je
fcoml
pusha
mov
jb
es
push
icebp
xorl
mov
fbld
add
cmp
add
dec
and
mov
jmp
and
lods
and
hlt
push
or
push
aaa
movsl
cwtl
stos
cmp
sbb
sub
adc
inc
test
add
stos
dec
sbb
xor
xor
jnp
sbb
leave
pop
adc
push
inc
mov
cmp
xchg
fimuls
arpl
pop
sub
cmc
ficomps
cmp
outsb
push
scas
push
xchg
test
adc
dec
and
loopne
jae
adc
dec
es
lahf
adc
dec
pop
xchg
add
dec
push
mov
mov
mov
iret
xchg
mov
or
jp
cmp
fs
cmc
push
inc
cmp
pop
mov
fyl2x
push
pop
scas
cmp
inc
fdivl
dec
push
pushf
adc
pop
push
inc
jecxz
sbb
jb
iret
xor
js
inc
enter
mov
hlt
and
sub
daa
pop
rcrl
xor
push
pop
cmc
enter
sti
in
outsb
push
sub
jo
mov
lods
adc
mov
subl
or
mov
mov
imul
repnz
push
mov
mov
adc
cmpsl
jbe
adc
pop
ss
mov
xor
in
push
pop
paddw
mov
jmp
jge
int
hlt
jo
fistpll
aam
sub
mov
divb
jo
mov
push
dec
cmpl
cli
lret
sbb
imul
insb
mov
lahf
adc
hlt
insl
lret
dec
pop
cmpsl
xchg
push
cwtl
fildll
shl
stos
movsl
icebp
aam
jg
cli
xchg
outsl
jmp
mov
mov
mov
jns
ds
testl
stc
xor
ds
push
les
filds
add
jno
ss
loopew
xor
lods
mov
pop
push
add
sbb
or
in
xor
sub
mov
inc
cld
andl
mov
std
pushf
pop
sarb
icebp
mov
cltd
sbb
mov
daa
xor
xor
jne
out
mov
and
pop
lret
push
daa
ret
cmp
dec
sbb
leave
call
ds
jne
inc
mov
jge
dec
fcompp
pop
add
fisubrl
imul
xchg
lret
push
mov
addr16
in
mov
cmpsb
clc
dec
mov
lds
fldcw
cli
xchg
jmp
dec
push
inc
and
xor
cmp
jb
push
inc
pop
es
dec
or
aam
pop
push
orl
cmc
adc
xchg
divl
icebp
pop
js
jbe
insl
xchg
dec
xlat
push
jmp
pop
jb
aad
adc
decl
js
add
int3
jns
mov
sub
daa
inc
sub
lds
or
int3
sbbb
xor
clc
jecxz
fisttpll
loopne
mov
mov
sar
in
cmp
and
xchg
push
ficoms
push
test
dec
or
xor
stos
jo
lods
mov
dec
rcrb
inc
adc
inc
pop
sub
out
sub
lods
add
mov
jg
xor
push
push
fildl
xorb
lock
dec
cmp
test
or
icebp
shll
int3
cli
cmpsl
ret
push
sahf
jo
jmp
out
lret
xor
fidivs
pop
xlat
jg
lods
adc
push
fwait
loop
insl
cmpsl
mov
inc
sub
cmp
and
lods
push
pop
mov
fsub
jno
ror
add
in
dec
or
jle
hlt
inc
shll
or
sub
repz
mov
cltd
inc
xchg
jae
xchg
dec
mov
jae
mov
mull
testl
mov
cmp
sbb
scas
sub
idiv
mov
and
mov
fld
dec
insb
les
inc
add
push
dec
test
testb
fcoms
div
inc
negl
sbb
mov
xchg
iret
scas
cmc
cmp
stos
andb
jbe
pop
xor
fldcw
fisttpl
cmpsl
mov
inc
rclb
lret
cld
pop
sti
adc
je
xchg
or
out
pop
pushf
inc
aad
hlt
popa
shl
mov
daa
arpl
and
rolb
push
push
test
add
popa
mov
out
mov
sbb
insb
xchg
das
sarb
insl
mov
lea
cmp
lea
inc
call
jp
cli
fwait
cmp
ja
cmpsl
negl
popa
in
dec
icebp
ds
mov
pop
cmp
movsb
stc
out
sub
push
incb
cld
dec
dec
nop
mov
ror
inc
jg
mov
insl
cmp
mov
mov
aad
jb
jae
jo
lcall
in
out
mov
popl
jo
sbb
inc
loopne
xorl
into
mov
call
or
inc
push
push
inc
add
push
xchg
mov
pop
and
pop
and
mov
pop
jne
and
or
mov
xchg
push
or
outsb
rcl
pop
int
pop
mov
cmpsl
adc
or
stos
sbb
shrl
shrl
xorb
das
mov
mov
sbb
push
pop
dec
add
cmp
mov
and
pop
int3
adc
lret
pushf
mov
sbb
xchg
push
push
jb
and
jg
or
jnp
lods
enter
adc
mov
xor
lds
push
out
adc
pop
cmovg
mov
cmpsl
aas
inc
or
into
shll
xlat
lret
bound
xor
mov
mov
ret
dec
or
mov
adc
lods
test
push
out
sbb
lods
sbb
leave
xor
jp
dec
add
arpl
mov
mov
outsb
jnp
sbb
sub
mov
rcl
sti
pop
scas
push
call
adc
icebp
nop
or
pusha
add
sbb
imul
cmp
mov
ds
decl
sbbl
jle
jp
aas
clc
mov
push
sub
mov
test
cmpsb
dec
ror
insl
nop
adc
ret
inc
inc
orl
popa
xor
xor
dec
jp,pt
je
cmpsb
pop
jbe
or
xor
pushf
lods
mov
and
sbb
mov
add
div
mov
fnstcw
jne
cmp
jg
push
mov
jae
push
push
mov
aad
and
bswap
into
xchg
loop
popf
les
fldt
add
jno
stc
mov
lret
mov
daa
push
sbbl
pop
ja
cli
pusha
imul
mov
ds
sar
ret
rorl
add
jle
jl
les
push
scas
mov
filds
popa
sbb
xchg
repnz
jge
stc
cmpsl
mov
add
dec
test
jbe
cli
addr16
sti
pop
cli
dec
pushf
cli
jne
cmp
adc
or
push
push
iret
add
push
stc
mov
xchg
mov
in
jge
out
cmp
movsl
add
ljmp
xor
repz
push
ja
pop
mov
test
push
or
jg
in
fistl
aad
push
jbe
fwait
and
xchg
sarb
lret
xor
stc
sub
push
movsl
fdivp
fwait
xor
and
jnp
xchg
and
mov
mov
out
jb
fstl
call
mov
jge
mov
jno
sbb
mull
xor
es
mov
mov
pop
movsl
fs
or
imul
ret
sbb
dec
insb
arpl
dec
pop
sbb
dec
popf
cwtl
icebp
jne
test
mov
mov
leave
or
pop
lock
inc
repz
lahf
sti
adc
and
sbb
int3
mov
lahf
lcall
mov
adc
je
jg
jo
dec
pop
xchg
addr16
xchg
mov
pop
xor
hlt
mov
xor
pop
fs
int
xchg
xchg
into
xchg
cli
test
std
sti
lret
cwtl
and
push
enter
test
jg
fmuls
movsb
sbb
xchg
lds
call
dec
dec
loope
test
lods
or
mov
outsb
sbb
mov
andl
inc
cli
xchg
push
lods
and
stos
pop
sub
push
push
imul
rorb
sub
adc
xchg
ret
adc
inc
mulb
or
scas
cli
lret
cwtl
scas
bound
and
jae
jbe
pop
inc
repz
and
inc
mull
push
loope
add
adc
js
cmpsl
dec
repz
test
mov
fstl
imul
fsubrl
cmp
and
enter
push
js
inc
dec
bound
test
add
cmp
push
sbb
sbb
jns
dec
cltd
fucom
fs
adc
sbbb
cmp
sbbb
sbb
or
ds
int3
xor
pop
clc
mov
test
sbb
insl
xlat
add
inc
sbbl
mov
idivl
xor
shrb
repnz
les
out
dec
jbe
ss
push
into
addb
jg
inc
mov
ss
push
js
fidivrs
je
mov
mov
imul
pop
push
cs
sub
add
lds
shlb
jae
in
cltd
and
pop
inc
or
jecxz
cwtl
popa
add
xchg
mov
xchg
stos
and
dec
dec
sbb
ja
push
dec
pop
mov
mov
pop
xlat
xchg
mov
mov
jae
imul
lcall
stos
out
adc
push
mov
fdivrs
pusha
adc
push
jl
scas
inc
cmp
mov
xor
pop
sub
inc
mov
or
and
push
pop
ret
adc
mov
inc
out
jbe
and
sub
andb
xor
movb
jmp
xchg
in
pop
xchg
cltd
lcall
cld
mov
sbb
call
jl
or
test
bound
inc
adc
cmpl
pop
push
inc
cld
fnstsw
xchg
stc
cwtl
lods
add
push
mov
push
xor
ss
pop
and
mov
andl
sub
jge
pop
outsl
lret
sbb
adc
dec
push
jg
in
out
insl
lahf
idivl
jmpw
lcall
ja
fiadds
scas
lock
lret
mov
pop
mov
frstor
mov
addb
cmp
adc
mov
rolb
push
hlt
cmpsl
or
adc
push
les
jge
les
imul
fistps
pop
adc
push
imul
repz
ret
mov
sahf
mov
sub
sbb
std
stc
popl
or
mov
aam
xchg
imul
sbb
loopne
mov
mov
jo
hlt
dec
add
stos
incl
cmp
mov
lods
or
xor
push
xor
leave
fdivrs
cmp
push
das
cmp
inc
cld
jbe
js
je
repnz
mov
push
test
xor
shll
mov
adc
jb
test
aas
sti
out
int3
xor
cld
push
jbe
popf
jns
jl
or
fisubrl
jl
clc
std
call
xchg
mov
cmp
adc
stc
xchg
pop
xchg
add
add
stos
pop
repnz
shlb
sarb
mov
inc
jmp
jge
data16
bound
inc
jg
imul
lock
dec
test
xchg
add
cmp
cmp
stos
or
int3
ja
stos
stos
jns
and
out
je
push
aad
push
mov
push
aam
push
mov
xor
add
xlat
in
sub
lods
pop
jl
xor
cltd
mov
xchg
mov
mov
xor
into
dec
mov
push
rolb
popa
dec
loopne
jno
lock
sbb
and
imul
mov
fs
lcall
sbb
fwait
das
mov
fbstp
adc
cmp
sbb
fwait
sub
test
push
push
add
dec
inc
scas
rcll
sbb
ret
push
cli
xor
xorl
lahf
dec
sti
into
mov
orb
push
lds
jl
imul
divb
xchg
lret
jnp
or
cmp
pop
xchg
rorb
inc
lret
cmpb
sub
dec
pop
je
mov
clc
lcall
je
aas
jmp
clc
aam
mov
lods
mov
aad
je
dec
sbb
sub
jns,pn
in
pushf
dec
xchg
jns
jo
es
hlt
jae
enter
mov
icebp
inc
repnz
pop
pop
daa
aad
stos
insl
push
mov
sbb
cmp
int3
or
mov
pop
in
into
loop
bound
imul
mov
or
iret
mov
adc
mov
test
in
mov
mov
std
push
jp
mov
inc
addr16
sbb
cld
popf
mov
aas
lahf
stos
out
inc
fs
adc
sbb
mov
pop
cmp
movsl
cmpsb
add
gs
adc
sub
push
outsl
jmp
mov
pop
test
or
lods
mov
pop
dec
fstpl
mov
push
and
addr16
jae
gs
xlat
cld
mov
outsb
pop
mov
pop
or
sbb
cmp
cmc
xor
add
sbb
lea
ret
out
pushf
mov
out
jns
sub
jge
fcomps
lret
into
lcall
mov
fidivrs
jle
adc
shll
xchg
xchg
or
cmpsl
icebp
fcomp
jp
scas
rclb
mov
mov
push
fmuls
repnz
jo
and
lcall
hlt
push
rcrl
stos
icebp
fwait
lahf
xchg
jl
enter
jp
in
lcall
idivl
cmp
mov
shrb
dec
jo
int
ss
pop
pop
jb
cmp
pop
rcll
push
bound
cmp
fs
mov
mov
cmp
cmpps
mov
jns
lcall
sbb
or
stc
pop
push
sahf
jl
jmp
fwait
jecxz
pop
xchg
sub
out
xchg
ja,pt
and
test
fwait
pop
lods
push
test
test
popa
jne
rcll
rcr
cwtl
adc
pushf
std
inc
mov
or
mov
jae
in
pushf
adc
lahf
sub
add
mov
cld
in
and
sbb
dec
or
lret
inc
fsubr
dec
or
das
sarb
imul
push
cli
or
test
add
mov
cwtl
notb
mov
daa
filds
data16
mov
push
jne
repnz
ret
sub
mov
push
push
add
xor
je
ja
xor
pop
and
popa
das
ja
push
or
mov
ja
jo
mov
dec
inc
push
popf
pop
js
stc
or
cmpsb
mov
sub
adc
pop
xor
push
inc
jle
icebp
or
jbe,pn
daa
icebp
push
push
xor
mov
or
xchg
fistpl
xchg
dec
inc
xor
and
mov
ret
mov
mov
test
sub
pop
or
cltd
aas
push
inc
jp
adc
cmp
push
repz
pop
jge
cli
push
in
or
xchg
jnp
shll
xchg
mov
lock
cld
pop
out
jbe
push
inc
insl
lcall
clc
ficomps
push
adc
pop
int3
lahf
adc
ret
adc
lods
stos
cmpsl
inc
cmpsb
pop
es
push
lcall
sbb
nop
sub
test
xchg
daa
pop
pop
popf
jecxz
lods
fdivl
jge
fimull
mov
jns
jo
shlb
push
dec
cmpsb
and
rcrb
repz
aas
scas
mov
das
jo
stc
cmpsl
lods
adc
cmp
test
add
lds
and
mov
push
dec
sbb
out
pop
jle
jo
sbb
push
lea
or
mov
xchg
cmp
cmc
imul
add
cs
add
inc
jo
jg
stc
sub
pop
pop
shlb
jbe
arpl
loopne
lods
jg
xchg
lret
sti
inc
sbb
push
je
fs
push
int
dec
je,pn
fbstp
lahf
cmpsl
fs
sbb
adc
test
stc
add
int3
outsb
in
jo
pop
xor
sub
stos
testl
or
inc
stc
hlt
add
adc
test
dec
dec
push
stc
out
pusha
adc
cmp
aaa
push
push
ljmp
int3
add
mov
cltd
mov
icebp
inc
mov
movsl
incl
cmc
scas
cmp
mov
xlat
scas
fsubs
mov
mov
xor
mov
flds
pushf
add
dec
adcb
and
jmp
hlt
lods
inc
scas
and
mov
mov
push
sarb
pop
lahf
jp
sahf
shrl
mov
pushf
fistps
sub
dec
lret
sbb
cli
test
hlt
lcall
mov
lret
push
fdivrl
jg
loopne
fwait
lods
inc
cmp
sti
sub
pop
out
xchg
outsl
daa
xor
loope
pop
ficomps
clc
movsl
pop
jl
stos
movsb
inc
push
and
pusha
mov
stc
push
push
incb
mov
dec
push
clc
shrl
jge
divb
subl
or
add
popf
sbbb
ss
and
xchg
push
shrl
pop
add
fmull
leave
push
ficompl
mov
ret
push
imul
pop
adc
pop
mov
loopew
dec
inc
ss
hlt
inc
mov
outsl
pusha
mov
jl
icebp
push
stos
mov
fwait
pop
push
add
sub
scas
into
das
xchg
push
dec
jmp
fildl
jp
fisttpll
jb
add
stos
fs
pop
fidivrs
jbe
adc
adc
out
mov
imul
lcall
jne
push
and
xchg
outsb
pusha
lret
loopne
add
leave
cmp
xor
lret
ds
in
and
mov
je
cmp
mov
lods
imul
add
andl
adc
scas
fsubl
jl
xchg
cmp
testl
mov
int3
pusha
jle
xor
mov
popa
jns
scas
out
jp
mov
loopne
loope
cmp
push
mov
mov
push
in
ljmp
out
js
inc
jmp
imul
fwait
xchg
mov
mov
fisubrl
inc
sub
cmpl
pop
inc
outsb
fs
leave
mov
jae,pt
in
imull
xchg
in
pop
stos
insb
xchg
jne
xor
enter
jo
sub
imul
adc
and
cmp
sbb
lahf
loop
jle
adc
int3
sbb
jp
lock
mov
stos
sbb
xchg
into
repz
add
sbb
mov
orl
sub
mov
push
stc
ficoml
cmpsl
js
data16
push
rorl
xor
xlat
adc
inc
dec
and
ret
aaa
adc
in
xlat
enter
dec
mov
jl
out
xchg
inc
xchg
mov
stos
negl
imul
outsl
fyl2x
mov
adc
jmp
lcall
mov
movsb
inc
jns
into
xchg
and
xchg
mov
fwait
add
jle
mov
dec
in
push
aas
pusha
xchg
xor
movsl
or
dec
dec
inc
jg
out
and
sbb
pcmpgtb
jp
cmpsl
popa
mov
outsb
and
outsl
bound
xorl
and
ret
enter
push
movsl
clc
repz
and
lea
add
mov
jle
decl
or
in
xchg
xchg
inc
lahf
ficoml
cwtl
icebp
jg
mov
popa
dec
inc
jne
in
testb
icebp
add
fsubl
inc
inc
out
scas
jmp
bound
flds
loop
cli
movsb
filds
jmp
pop
jle
add
loope
insb
dec
loope
pop
lods
das
jg
cmpsb
in
aad
fsub
les
int3
test
adc
xchg
rorl
int
ja
mov
call
movsl
push
stc
or
push
push
sub
add
inc
lods
jl
ja
jl
add
popf
stc
sbb
mov
inc
add
cmp
sarl
cli
daa
pushl
xor
jno
push
movsb
jl
and
das
push
mov
movsb
mov
in
das
outsb
pop
mov
imul
out
push
das
gs
dec
into
jns
js
movsl
imul
sub
in
mov
pop
inc
pop
stc
dec
repnz
incb
sbb
bound
ljmp
stc
cld
sub
inc
call
pop
xchg
in
nop
inc
push
cwtl
jge
test
cmpsb
push
cld
add
daa
stos
mov
adcl
incl
cmp
mov
insl
rcrb
xchg
cmpsb
mov
jbe
ja
lds
insb
xor
jmp
push
outsb
pop
mov
sub
pusha
jmp
xor
cmp
push
daa
shlb
testb
hlt
jg
add
fwait
ds
jg
jo
jb
pop
notb
mov
pop
jmp
jo
pushf
int3
jl
cmp
jnp
out
sar
cmp
lock
pop
push
push
sbb
push
loopne
jecxz
jno
add
pop
fdiv
shll
ja
dec
ret
add
movsl
dec
jl
jecxz
std
movsl
bound
ljmp
mov
adc
pop
xor
dec
mov
lret
mov
adc
out
sub
mov
ret
inc
adc
outsl
cwtl
enter
mov
ficomps
mov
int
cs
fistpl
stc
mov
mov
xchg
dec
clc
mov
js
bound
jo
in
jnp
loope
test
je
shrb
jno
in
cmp
push
jno
sahf
push
mov
orb
mov
push
lahf
pop
ret
repnz
mov
push
mov
cmp
loope
pusha
mov
imull
jmp
mov
int3
sbb
sub
dec
pop
jbe
push
add
cmp
popa
in
imul
popf
lods
lods
xchg
xchg
sbbl
jno
cs
pop
jmp
mov
ficomps
mov
xlat
xchg
decl
mov
pop
out
lock
popf
aas
lahf
bound
mov
fsts
andb
xchg
push
push
add
mov
cmp
mov
movsb
arpl
mov
mov
sub
fisttps
push
mov
incl
xchg
lock
cmpsl
cmp
xchg
negl
bound
ja
xchg
adc
sub
in
mov
inc
fnsave
das
jae
sub
jns
and
stos
orb
test
push
daa
adcl
mov
xchg
cltd
adc
jp
scas
push
testb
les
xchg
arpl
aad
mov
lret
dec
loop
mov
cmpsb
dec
push
cmpsl
rorl
jmp
mov
lret
int
fisubrs
add
pop
lods
cli
jge
icebp
jnp
loopne
sub
cmc
movsb
mov
mov
xchg
adc
je
int3
add
loopne
mov
ds
sub
xlat
addr16
cmp
mov
std
in
mov
or
decb
mov
inc
or
mov
ljmp
clc
push
jmp
mov
jmp
pop
jae
pop
xchg
push
mov
notb
outsb
jp
pmulhuw
cltd
lock
ds
jle
push
dec
xor
movsb
or
add
mov
mov
orl
test
insb
dec
scas
mov
aam
repnz
call
push
std
mov
dec
dec
xor
cmp
push
sbbl
add
xlat
in
push
es
cmp
mov
lea
add
sarl
mov
je
lds
dec
fsts
xor
lds
jnp
cmp
mov
fldl
sbb
or
jg
stos
jo
mul
jmp
add
divb
fcompl
jb
cmc
pop
shl
lahf
leavew
jae
mov
mov
xchg
mov
movsb
xchg
xchg
jg
mov
adc
push
xor
sarb
scas
out
xor
mov
les
sbb
loop
cmc
mov
daa
adc
or
dec
insb
add
pop
xor
loopne
mov
mov
mov
sti
add
gs
mov
or
jae
add
in
outsl
xchg
add
and
add
iret
inc
es
dec
lods
lock
xchg
mov
jmp
mov
scas
lods
dec
mov
dec
jmp
int3
std
mov
xchg
pop
mov
adc
gs
in
or
loopne
cltd
cli
and
jg
lcall
test
jge
add
fisubl
loopne
pushf
cmp
fst
hlt
lods
add
xchg
xor
push
and
mov
int3
and
adc
add
dec
imul
adc
movsl
pop
movsb
mov
pop
and
test
fidivrs
ret
cmp
and
dec
sbb
test
addb
mov
sub
jp
or
sub
ret
jecxz
out
aad
pusha
ret
ljmp
stos
push
mov
gs
jecxz
push
ror
je
call
vmovd
int
mov
out
or
xchg
leave
push
mov
std
dec
add
mov
sbb
std
mov
lods
movsl
add
imul
push
out
imull
push
push
lret
sbbl
insl
xlat
fnstenv
xchg
xchg
les
cmp
inc
in
cmpsb
push
or
fldenv
jae
in
adc
mov
pop
int3
in
jbe
stos
adc
cmp
mov
je
ja
dec
jmp
test
inc
pop
pop
mov
shll
fdivl
xchg
push
mov
cltd
into
pop
jnp
fisubrs
aas
inc
test
cltd
je
pushf
jb
out
repnz
insb
lahf
jl
mov
jmp
cmp
jl
aaa
dec
insb
push
lock
xchg
dec
add
xlat
arpl
or
xchg
adc
sub
mov
clc
lock
jnp
xor
rsm
out
jo
ret
sahf
sub
jbe
jb
testb
push
scas
push
iret
cmp
cmpsl
call
jp
ja
cmpsl
sub
jb
testl
popf
add
mov
xor
out
xor
cmc
mov
push
inc
sub
and
adc
rcr
cmp
scas
pop
or
data16
pushf
bound
out
js
and
out
sbb
fstpl
jmp
pop
fld
mov
outsb
in
lods
sti
pushf
jb
jmp
pop
jne
lds
lret
fstps
dec
pop
scas
leave
or
pop
aaa
add
outsl
xor
push
movl
or
cmp
cmp
dec
adc
mov
cmc
fidivl
pop
sub
pop
fnstcw
mov
dec
insb
ret
inc
jnp
jbe
push
or
and
push
sub
lahf
fstpt
xor
andb
and
push
fildll
sti
mov
in
push
and
push
ja
aad
inc
cmpsb
repnz
adc
out
inc
movsl
ljmp
es
dec
scas
add
lds
outsl
clc
andb
lret
xchg
shrl
pushl
shll
jno
sbb
test
xchg
or
das
add
xor
clc
pop
cli
in
pop
jge
xchg
dec
fs
cmp
outsb
addb
pop
fmul
fdivl
lods
cwtl
cmc
jo
adc
fdivs
rcrl
js
pop
add
mov
dec
clc
js
sub
ljmp
repnz
inc
xchg
leave
int
mov
push
lret
push
adcb
push
test
icebp
dec
pop
movsb
repz
mov
xorb
aad
pop
js
xor
cmp
cmc
cs
adc
sub
sub
pop
cmp
sub
add
push
jg
dec
sbb
jns
ss
lahf
push
stos
mov
jns
stc
stos
sub
mov
or
mov
loope
stc
jle
lcall
ret
or
sbb
in
repnz
sub
and
jle
mov
pop
sub
ret
xor
jo
pop
fwait
sarb
sbb
in
mov
loope
leave
pop
push
cmpsb
stos
test
inc
ds
pop
loopne
inc
or
add
je
push
xchg
leave
jmp
mov
push
cmpl
sub
mov
xchg
add
inc
add
ja
jae
jge
push
add
pop
insl
stc
fcomp
or
jae
xor
inc
cs
mov
jo
mov
inc
fisubs
mov
outsb
fldt
mov
rorl
lock
xor
ljmp
out
sub
out
cmp
mov
mov
mov
aaa
test
sub
xchg
test
mov
data16
daa
fildl
or
xchg
notl
xor
dec
or
lock
ror
jp
cmp
fisttpl
ljmp
or
xor
out
jmp
rcll
push
cmp
mov
or
inc
fwait
adc
lahf
arpl
mov
daa
cwtl
aad
int
jno
fsubp
test
jae
test
ja
xchg
adc
xchg
aam
inc
daa
fisubl
inc
fldcw
lahf
cmp
leave
xor
test
mov
repnz
rolb
or
push
lods
jno
adc
add
or
ret
hlt
xchg
cmc
sub
mov
xchg
push
fiadds
in
je
xchg
ret
ljmp
mov
mov
call
adcl
jmp
or
stc
in
test
dec
mov
lds
sub
icebp
push
test
push
push
mov
xor
fs
imul
jecxz
jge
sbb
and
movsb
jmp
std
jne
mov
xlat
xchg
pop
movsb
pop
xchg
icebp
push
insl
lahf
mov
xor
pop
insb
cltd
test
test
cltd
pop
insb
movsl
cmp
testb
sub
fisttps
jo
dec
mov
in
je
bound
mov
cmc
or
add
icebp
sub
cmp
jb
xchg
add
sysenter
daa
jno
sbb
lahf
mov
add
cld
adc
hlt
jnp
daa
mov
or
or
add
jne
fcomps
pop
jmp
jmp
push
push
scas
jae
fiadds
cld
into
adcl
outsl
add
pop
stos
jmp
lahf
mov
out
int
sub
xor
push
jbe
or
js
orl
mov
imul
jo
loope
aaa
sub
and
push
rcrb
mov
cltd
sbb
jne
or
aam
sub
mov
insb
add
les
push
dec
adcl
lahf
movsl
pop
jb
xchg
cmp
dec
dec
enter
lret
jne
mov
je
xchg
ljmp
mov
int3
cld
sti
addr16
repz
xor
test
mov
inc
dec
xchg
fisubrl
pop
das
mov
aas
in
xchg
jle
add
mov
adc
add
sahf
dec
mov
ljmp
adc
add
pusha
mov
mov
aas
mov
ret
or
fstps
icebp
int3
fisubrl
mov
xchg
mov
pop
mov
sub
gs
push
add
int
jecxz
jne
sub
cmp
fcomps
pop
sahf
xchg
lock
and
adc
or
sti
xor
xor
dec
mov
cwtl
repz
and
cmpsl
sub
push
sbb
push
call
xchg
push
pop
repnz
sbb
xchg
lcall
mov
addl
cli
cli
imul
or
dec
cld
data16
xor
dec
mov
sbb
adc
mov
adc
pop
fucom
jbe
lret
lcall
pop
lock
mov
cmp
idiv
shl
data16
adc
pop
repnz
dec
nop
add
push
arpl
cmp
fwait
add
fnstsw
inc
adc
pop
ds
rol
xchg
lcall
add
iret
jo
lcall
sahf
test
mov
movsb
pusha
sub
rorl
mov
push
out
andps
mov
xchg
icebp
lds
ja
test
add
out
popf
jnp
aas
cli
cld
mov
cmp
int3
mov
dec
xchg
dec
movups
inc
sub
out
pop
in
ret
and
mov
nop
shl
adc
sub
movsl
and
adc
dec
pop
mov
add
add
test
js
aaa
data16
mov
subb
mov
icebp
adc
xchg
mov
pusha
std
xchg
mov
mov
in
dec
mov
dec
sbb
jmp
xchg
lahf
mov
jl
popf
mov
lock
jne
cltd
jbe
fs
mov
into
aaa
or
jg
int3
subl
xlat
push
mov
sub
movsb
test
cmp
scas
fsubrs
xchg
add
cs
adc
into
ds
dec
jge
arpl
js
aaa
int
sub
push
add
lret
pop
or
in
push
ret
arpl
mov
loopne
lret
hlt
mov
sti
dec
push
fwait
repz
push
xor
pop
jb
mov
lcall
out
insb
hlt
mov
js
mov
lcall
mov
sti
mov
ret
sub
push
push
insb
dec
loop
arpl
sbb
lahf
jp
lcall
xor
mov
movsl
jge
pop
cmp
jle
sbb
mov
mov
js
xor
push
adc
jnp
fisubrl
lock
jnp
xlat
movsl
push
adcb
stos
dec
sub
call
inc
popf
sub
push
jmp
in
add
and
in
xor
lods
mov
jne
push
ffree
outsb
inc
stos
cmp
push
push
iret
addb
roll
ja
cli
mov
lret
and
js
addr16
inc
jmp
mov
sub
int
in
inc
popa
imul
test
push
outsb
sarl
push
js
jl
orb
jns
cmp
test
movsl
pop
push
mov
sub
ljmp
in
mov
and
lods
js
in
ret
loop
xor
int
push
jge
js
inc
jle
fwait
dec
sbb
jg
aaa
out
push
mov
fcoms
arpl
and
dec
lcall
mov
out
fisubrl
shlb
fstl
sbb
das
jae
cmpsb
fidivrl
shl
mov
push
push
pop
mov
pop
or
stos
int
sub
lret
test
shl
std
cltd
inc
jp
mov
adc
or
fwait
sbb
and
push
icebp
add
mov
shll
insl
jb
mov
jns
stos
push
mov
xchg
sbb
jg
test
ret
push
cmp
jecxz
xor
rcrb
loop
sbb
cs
outsl
add
jmp
fisttpl
mov
pop
and
loop
outsl
ds
lods
pop
gs
pushf
pop
dec
lret
push
lcall
ds
pop
aad
jl
sub
fcoms
inc
dec
mov
push
sbb
or
jbe
adc
sub
imul
nop
adc
lcall
push
mov
add
push
lahf
xchg
repnz
push
outsl
mov
lcall
inc
stos
jmp
cwtl
test
cmpsb
xchg
lea
stos
in
call
cmp
push
inc
mov
jbe
cli
push
inc
mov
inc
mov
adc
mov
or
mov
mov
rcl
dec
pusha
push
mov
mov
cmc
mov
imulb
mov
loopne
adc
icebp
xchg
mov
repz
jnp
das
jbe
mov
sub
test
shrb
cmp
push
inc
hlt
push
fnstcw
xchg
add
jae
dec
int
in
ret
fwait
test
sbb
movsl
repz
rorl
add
mov
mov
stos
dec
outsb
inc
cld
cmc
adc
aad
xor
inc
ljmp
push
scas
je
repz
jns
mov
xor
push
mov
imul
sbb
loopne
test
aam
scas
adc
mov
inc
mov
stc
stos
stc
jno
xchg
mov
push
or
mov
leave
mov
add
cs
hlt
stos
das
shll
jo
fcoms
icebp
lea
outsb
jecxz
cmp
inc
pop
dec
jns
adc
int
mov
ss
mov
lret
ret
push
xchg
push
in
sarb
xchg
in
and
in
jns
add
xchg
push
add
mov
loopne
dec
addr16
add
xchg
xchg
push
stos
shlb
stos
sbb
shlb
cltd
fiaddl
cmp
and
jp
jle
loop
push
pop
jo
cs
in
mov
ds
loop
clc
fs
iret
shrb
or
xlat
lods
add
lock
dec
pop
lock
and
es
push
dec
ret
outsb
xorl
test
jno
mov
push
add
repz
lret
mov
mov
leave
dec
pop
mov
add
ud2
xchg
pop
lahf
pushf
mov
ljmp
cmp
or
addr16
incb
jo
dec
fwait
cmc
decl
cmc
pmaddwd
push
adc
xor
int3
push
inc
popl
das
pop
in
inc
inc
test
mov
stc
das
jg
push
or
or
jp
out
cmc
movsl
push
icebp
out
sub
cwtl
add
call
into
arpl
add
cmp
cwtl
in
ljmp
repnz
mov
sub
sarb
dec
das
int
adc
dec
and
jge
into
fcmovne
pop
or
mov
mov
pop
insl
in
mov
or
push
and
outsl
xor
and
mov
push
mov
neg
testb
inc
jl
push
mov
fwait
jnp
imul
or
out
push
mov
pushf
mov
jp
ja
nop
lods
inc
pop
jnp
or
adc
in
std
mov
or
mov
dec
pop
test
scas
push
cmp
lahf
xor
cmpsl
xchg
cs
mov
mov
adc
insl
jmp
andb
add
push
xchg
sub
xchg
jns
daa
shrl
out
sbb
pop
pop
sti
mov
andl
out
inc
and
js
adcl
repz
imul
movsl
enter
imul
xlat
inc
xchg
jne
push
inc
mov
sahf
popf
sbb
xchg
addr16
ret
inc
dec
pop
ja
xlat
pushf
popa
xchg
into
pop
stos
sub
xchg
lods
jnp
pop
mov
mov
daa
cmp
push
test
xor
gs
pop
int3
push
jbe
cs
mov
push
xor
add
mov
and
push
jp
inc
mov
js
jns
add
cmp
test
push
mov
cld
sti
leave
mov
xor
shrb
xchg
lock
cwtl
outsl
jle
mov
sub
lds
jo
imul
rcll
mov
dec
sbb
dec
lahf
cmpsb
pop
sub
mov
sbb
sub
fisubrl
outsl
imulb
sbb
das
andl
mov
data16
loopne
jle
imul
mov
add
mov
mov
inc
les
repnz
mov
aam
mov
adc
je
add
rcr
lret
aaa
sub
stos
adc
leave
push
or
xchg
pop
push
test
mov
inc
imul
sahf
std
pop
mov
repnz
xor
adcl
xchg
or
bnd
jl
mov
lahf
add
iret
lock
test
xchg
mov
mov
scas
xor
hlt
jge
fisubl
aam
pop
aas
repz
lods
scas
mov
push
aas
or
fs
pusha
imul
and
and
or
cld
adc
ror
dec
fsubrl
jp
or
xchg
jb
mov
sbb
add
testl
inc
mov
aad
aaa
inc
andl
sbb
jg
repnz
push
loop
cmpsb
jl
cli
popf
xor
push
jecxz
jns
and
cmpsb
popf
dec
int
xor
loopne
push
pushf
pop
pop
outsl
shll
xor
js
or
or
dec
stos
sbbl
push
xchg
imul
jo
fdivs
and
or
pop
adcl
dec
cmp
cli
push
mov
arpl
jb
fmull
jns
push
pop
mov
jl
push
cmp
xchg
pop
data16
push
cmp
lods
clc
popa
divb
inc
ss
not
jb
add
mov
scas
movsl
xor
fadd
in
mov
xchg
jmp
adc
scas
or
xor
pop
push
inc
push
aaa
andb
mov
fstp
sbb
pop
mov
mov
push
mov
xor
rcll
out
popf
icebp
mov
mov
jl
jg
lahf
fwait
out
and
jle
xor
pop
pusha
je
cmp
sub
push
and
sbb
sbbl
clc
clc
out
and
jno
in
mov
adc
idivb
cwtl
pop
or
loopne
div
inc
sub
sbb
xchg
xor
bound
dec
data16
or
mov
sub
sbb
dec
in
cmpsb
inc
lock
adc
jne
repnz
and
ljmp
dec
sub
add
sti
jg
xchg
jbe
mov
lods
xor
xchg
cld
push
hlt
hlt
sub
xor
ret
mov
xor
mov
ljmp
mov
sub
dec
jnp
ret
scas
cmpl
faddl
cwtl
aad
lods
punpckldq
jmp
iret
test
mov
jp
sub
ficoms
xor
pop
cmp
or
fidivrl
dec
jg
mov
push
push
dec
dec
movsl
cmpsl
mov
out
or
jb
fstpl
les
adc
inc
jbe
leave
pop
insl
in
and
inc
mov
and
inc
xchg
std
lods
fsubrp
shll
inc
js
xor
cmc
pusha
rclb
pop
repnz
test
mov
add
jmp
inc
nop
movl
dec
xorb
je
push
and
cmpsb
dec
push
or
std
xlat
or
jl
adc
or
add
fstpt
js
cmp
xchg
mov
add
add
out
cld
sbb
sbb
or
sbb
test
imul
pop
ss
leave
inc
stc
add
and
lret
or
adc
mov
sbb
test
imul
mov
cmp
dec
jb
or
jmp
mov
and
into
sahf
pop
sbb
mov
push
repnz
out
pop
out
sbb
and
adc
bnd
aas
fiaddl
dec
push
rcll
jo
pop
add
inc
aas
cmp
xlat
sub
xor
or
cmp
mov
pop
mov
sti
pop
lds
mov
cmp
andl
test
jo
and
dec
mov
mov
xchg
add
inc
aaa
push
xor
jmp
jge
outsl
hlt
rolb
addb
pop
xor
push
sahf
jp
pop
cmp
xchg
aas
clc
lahf
cli
aad
imul
mov
sub
fidivs
cwtl
pop
repnz
aad
sbb
movsb
paddusb
ror
lret
add
mov
xor
lods
pop
scas
sub
push
fsubrl
fwait
mov
orl
cs
jmp
mov
xchg
adc
mov
aaa
mov
and
push
fldcw
inc
sbb
jmp
loop
sub
jb
sbb
xchg
fdivs
jae
pop
xchg
pop
das
jl
pop
sbb
sbb
and
jbe
sub
inc
and
rcrl
mov
bound
push
jns
cmp
outsb
mov
dec
mov
test
sbb
jbe
xor
push
movsl
imul
aas
sbb
pop
sbb
leave
adc
movsl
cmp
je
movsb
mov
movzbl
pop
pop
xchg
fsubrs
out
mulb
lods
add
lock
sahf
jo
jl
test
jl
cmc
pop
addr16
fs
out
mov
or
add
call
mov
out
loopne
mov
pop
jl
lret
cmp
mov
jo
stos
inc
arpl
push
ljmp
inc
in
lods
mov
movsl
mov
sbb
pop
pop
add
outsb
inc
mov
push
pop
shll
cmp
cltd
call
ds
sahf
js
notl
mov
sbb
sbb
out
sbb
xchg
sahf
mov
pop
push
imul
sbb
inc
jae
ficomps
shr
push
insl
fcoml
int3
inc
xchg
aas
jmp
inc
sub
jno
add
push
repnz
pop
scas
mov
in
inc
popa
add
pop
insl
loopne
pop
fidivs
jo
xorl
mov
ljmp
loop
outsb
add
sbb
pop
in
sub
jg
dec
test
test
push
rolb
out
aas
test
adc
jle
mov
xchg
mov
call
lds
js
push
pop
fnstenv
in
ret
hlt
shll
std
pop
mov
das
daa
jns
fnsave
inc
adc
push
or
adc
out
push
loopne
cmp
fildll
jecxz
lret
bound
movsb
movsb
hlt
xor
xlat
aam
bound
mov
int
sub
and
aas
or
push
test
pop
fbld
and
mov
xchg
push
lret
jmp
pop
fs
dec
leave
loop
in
sub
popa
push
add
mov
aam
repz
pop
cmpl
cwtl
pushf
jle
sbb
iret
sub
xor
mov
repz
mov
insl
jg
ljmp
pop
mov
fdivs
cmc
jns
push
jg,pn
adc
xor
xchg
push
fldcw
jl
test
add
adc
rclb
sahf
xchg
mov
imul
mov
in
gs
push
movsb
aad
jbe
lret
mov
imul
dec
xor
inc
pop
push
inc
xchg
pop
int3
pop
ret
xchg
shrb
jnp
xchg
cs
int3
mov
mov
jne
lahf
sahf
enter
mov
aad
aad
pop
popf
mov
sbb
test
cmp
mov
inc
mov
adc
into
lods
data16
sbb
mov
icebp
popaw
hlt
sub
pop
mov
out
icebp
movsb
sahf
les
data16
test
sti
fisttpl
cltd
test
jbe
addr16
cs
fstp
mov
sub
jg
jae
ja
jnp
mov
and
adc
out
fistpll
push
fimull
mov
pop
adc
jle
test
test
jp
cltd
mov
cwtl
sbb
repnz
cmpsb
fcomip
jae
cltd
stc
cld
sub
jge
lahf
cwtl
in
pop
cmc
jno
cs
mov
decb
mov
inc
pop
mov
addb
mov
adcl
push
fs
mov
jae
add
sbbl
lcall
out
imul
notl
mov
movsb
dec
jle
fstpl
mov
outsl
lds
and
xchg
mov
jecxz
xchg
push
push
inc
jl
gs
in
sub
or
in
outsl
mov
int
inc
xchg
rorb
lds
cmp
test
into
outsl
cwtl
sbb
rcr
aas
mov
pop
or
adc
stc
out
fwait
sub
fbld
lcall
mov
outsl
testl
xor
aas
rclb
adc
daa
leave
cmp
je
push
mov
jmp
outsb
push
or
data16
bound
enter
or
test
push
call
cs
jnp
cwtl
cmp
pop
inc
jecxz
roll
mull
outsl
inc
int3
dec
dec
jp
pop
popf
xor
add
and
leave
sarb
gs
sbb
call
mov
iret
sub
mov
mov
pop
in
jno
mull
dec
mov
mov
lds
dec
movsb
rcr
mov
aaa
into
cs
or
sbb
sub
pop
movsb
dec
jle
ret
pop
jl
sbb
jmp
push
lret
dec
sub
test
mov
fisubl
shlb
andb
xchg
out
fidivrl
lcall
xor
mov
or
enter
int3
xchg
mov
xchg
ds
lods
fsubrs
add
jl
xchg
or
aam
repz
enter
aam
dec
icebp
jl
dec
clc
or
or
cmpsl
mov
mov
jno
xor
mov
out
pop
addr16
xor
dec
cli
lret
dec
and
arpl
lods
out
js
lods
jge
or
in
out
aam
xor
inc
xchg
fsts
shr
jbe
adc
inc
inc
push
jge
loopne
adc
xor
push
adc
mov
ret
pop
es
jg
imulb
mov
mov
mov
rol
jbe
and
jl
sbb
adc
push
lret
adc
and
fwait
repz
or
icebp
test
push
ljmp
cld
rcll
or
xchg
dec
push
lcall
js
push
addl
sahf
into
mov
mov
addl
sub
push
fidivl
cmc
jo
pop
rcll
fcoms
subl
mov
mov
mov
jg
mov
outsb
xchg
jbe
out
add
sub
lahf
sahf
loop
sti
dec
outsb
gs
jnp
adc
loopne
imul
sbb
jb
mov
jle
mov
enter
inc
xchg
into
jle
aam
sbbl
sub
push
jb
ret
cld
xchg
push
cmp
mov
shll
fisttpl
test
lret
jne
push
insb
in
aad
ljmp
add
daa
dec
adc
sahf
fstl
jg
or
mov
push
data16
mov
jne
cmp
xchg
mov
or
dec
test
push
xor
dec
sarb
dec
jb
pushf
enter
testl
es
in
call
or
aam
jb
and
inc
insb
xchg
jmp
sbb
adc
sarb
mov
mov
shrl
test
pop
sub
dec
mov
jmp
dec
sahf
pop
fs
jecxz
xchg
lret
jmp
adc
movsl
cld
stos
pop
fldenv
lcall
or
hlt
dec
cmc
xor
shll
or
or
mov
addr16
mov
int3
into
jo
mov
adc
mov
add
jg
jmp
gs
imul
addb
fcmovnb
setbe
or
out
or
mov
xchg
mov
jno
pop
xor
mov
jl
repnz
or
cmpsl
outsl
add
popf
mov
dec
mov
xchg
sub
repz
dec
cmp
cld
add
out
and
fcom
jb
cltd
fbstp
sbb
jge
lods
dec
std
loope
insl
mov
add
push
test
or
pop
jl
jb,pt
jge
iret
sbb
xor
test
bound
xor
int
repz
outsl
mov
mov
lret
mov
ss
pushf
jle
cmp
arpl
test
loope
pause
js
add
ret
mov
test
mov
mov
lret
mov
pop
daa
cs
filds
repnz
inc
fistpl
call
out
std
sub
cmc
ret
das
sub
jno
dec
pop
sbb
lret
push
cmp
into
insb
mov
ret
hlt
hlt
cld
and
rcll
mov
fmulp
or
dec
inc
inc
loopne
fisubs
jl
js
jns
rclb
push
inc
std
icebp
das
pop
jnp
mov
repz
cmpsb
xchg
mov
push
xchg
test
fisttpl
popf
cmp
cmpsl
ret
push
and
ss
inc
loopne
into
icebp
xchg
mov
cmpb
mov
adc
sahf
adc
adc
lock
mov
fdivrs
in
lahf
add
rorl
repnz
xorb
imul
cmc
cwtl
fistps
xchg
xchg
imull
faddl
xor
add
testl
data16
or
pop
inc
add
xor
int
dec
adcb
push
enter
int3
pushf
aam
pop
fidivs
adc
popa
mov
mov
mov
add
pop
jno
push
mov
cmp
fstpt
popf
test
mov
pop
cld
and
push
cmp
inc
cli
sbb
jae
dec
jae
lods
push
pop
imul
add
and
fcoml
call
jo
int3
mov
xor
pop
mov
push
popa
mov
jno
pop
xchg
and
inc
sbb
pop
add
push
out
in
jle
xlat
mov
add
dec
mov
lahf
jae
ret
mov
xchg
pop
stos
mull
test
dec
adc
pop
or
in
pop
dec
orb
dec
jmp
xor
mov
xor
insl
add
leave
mov
mov
int
ss
dec
rorb
sub
xor
rcl
and
jno
push
cmp
xchg
and
adc
rolb
push
test
mov
xlat
shll
shll
dec
inc
or
pushf
inc
push
imul
stos
rcrl
fs
pop
fistpll
dec
sub
imul
mov
or
lahf
fwait
sahf
push
cmpsb
sti
lret
mov
mov
out
and
cmp
movsl
in
cs
xlat
test
push
in
sub
dec
movb
sbb
int
das
arpl
call
seta
popa
xor
dec
ja
mov
and
jb
fs
leave
sti
mov
fisubrs
cmp
roll
push
je
shll
inc
enter
add
pop
aas
insl
and
data16
inc
push
mov
mov
dec
push
bound
mov
inc
xchg
das
pop
test
aaa
sbb
scas
cld
lcall
popa
pop
les
out
jbe
xor
ret
testl
mov
shl
cvtpi2ps
push
imul
jg
lods
out
test
dec
cltd
imul
sbb
shl
push
cli
sbb
sub
xchg
mov
jne
adc
lcall
popa
push
add
jne
add
scas
push
sahf
push
mov
inc
sbb
mov
subl
mov
jg
leave
jl
bnd
lcall
pop
sahf
bound
sub
movsb
ret
cmc
or
fiaddl
iret
inc
pop
shll
sbbb
mov
fnstsw
or
loopne
sahf
jge
cmpsb
pop
mov
mov
arpl
jae
mov
inc
fldenv
movl
imul
adc
pop
pop
in
adc
jle
popf
jne
xlat
xor
lods
inc
test
je
movsb
mov
inc
jge
std
push
jecxz
mov
inc
adc
xchg
imull
jno
orb
imul
push
inc
insb
loopne
push
gs
mov
inc
gs
push
jno
sub
mov
add
and
iret
sbb
xchg
push
sub
outsb
adc
jmp
jle
push
popa
mov
mov
aaa
mov
mov
test
lret
pop
loopne
cmp
inc
push
add
icebp
nop
cs
push
stc
mul
mov
bnd
pusha
mov
test
movsl
mov
lret
xor
in
out
in
and
js
lcall
out
icebp
cmc
adc
movsl
push
jp
adc
xor
push
pop
push
inc
lock
mov
rclb
imul
xchg
mov
idivl
adc
xchg
popf
sbb
sbb
sbb
mov
lock
jl
jl
pop
inc
out
cmp
mov
clc
stc
xchg
pop
mov
arpl
cmp
fsubr
int3
out
inc
das
adc
wrmsr
rolb
adc
add
addl
fsubrs
stc
fbstp
adc
call
pop
cmp
ja
inc
mov
xor
jge
imull
leave
dec
cwtl
movsb
push
sbb
mov
add
divb
sbb
jle
add
imul
mov
imul
adcl
mov
js
cmp
or
push
aaa
roll
shll
pop
push
mov
dec
sub
ja
test
icebp
jecxz
test
ds
push
imull
pop
in
pushf
ret
popf
mov
mov
add
mov
lret
std
pop
jle
adc
sbb
pop
loope
pusha
mov
imul
xor
ljmp
iret
mov
jo
dec
mov
pop
rcr
sub
xchg
rcll
test
sub
push
adc
or
inc
cmp
inc
out
adc
mov
mov
pop
popa
cmpsb
dec
mov
jmp
in
jmp
fiadds
rcrl
inc
rcll
inc
mov
push
mov
lcall
xor
fs
jb
ret
push
mov
test
push
xlat
cwtl
push
push
je
pop
push
jl
sbb
pushf
jp
pandn
sbb
mov
into
adc
or
cmp
inc
adc
xor
mov
ret
add
cmp
jp
fs
xchg
flds
ds
pop
jmp
sub
mov
push
fs
sbb
and
add
stos
outsl
xor
mov
insb
scas
repz
dec
mov
mov
into
movsb
mov
mov
mov
push
xchg
stc
call
popa
out
sub
fimull
aad
inc
cmp
subb
lds
pop
inc
aad
arpl
fs
ret
out
push
testl
shll
push
pop
jmp
mov
filds
iret
jnp
jle
movsl
dec
fs
rcr
out
mov
mov
aas
flds
mov
jle
push
repz
jp
mov
push
test
add
mov
add
add
push
mov
fstpt
sbb
stos
in
inc
incl
jp
movsb
push
adc
push
mov
pop
hlt
in
lcall
fisubrl
fdecstp
mov
jno
rolb
fldcw
xchg
mov
lcall
sbb
mov
adcl
add
sub
jmp
cmpsl
imul
and
insb
int
sbbb
mov
out
es
xchg
aas
in
mov
inc
fnsave
cmp
in
mov
or
sbb
testl
xor
bound
leave
stos
outsl
fidivrl
xor
jae
xor
mov
cs
sbb
lcall
scas
out
pusha
cmpsb
ret
pop
dec
or
icebp
imul
mov
mov
ljmp
popf
mov
popa
into
mov
jns
mov
pop
inc
movsl
lock
dec
cmp
cltd
dec
inc
orb
mov
or
loope
push
je
add
sbb
jo
in
jle
sti
movsb
data16
push
add
imul
inc
jnp
pop
stos
and
inc
xor
enter
das
popa
scas
or
ljmp
and
lahf
mov
outsl
fwait
and
mov
mov
jmp
mov
packuswb
cmpsb
add
lea
std
in
lds
loope
fdivrl
adc
popa
popf
sbb
les
dec
mov
push
mov
pusha
pop
mov
cmp
ja
cmpl
add
aas
test
popf
mov
imull
pop
mov
dec
jbe
mov
adc
ss
idivl
push
mov
ljmp
int
ret
inc
aas
xor
test
stc
pop
fdivrp
xchg
dec
icebp
jb
mov
push
xor
inc
ret
adc
push
xorb
inc
incb
lahf
inc
es
add
and
ret
mov
jnp
mov
mov
dec
pop
fwait
cmp
idivb
jne
mov
fiaddl
cmp
in
xor
jae
jnp
dec
ret
sahf
outsb
stc
in
and
inc
out
jle
jbe
sti
add
js
idivl
mov
not
cmpsl
lahf
out
mov
pop
mov
xor
cltd
ja
sub
negb
add
pusha
in
subl
mov
xchg
pop
stos
mov
fwait
and
jae
mov
push
testb
pop
lahf
jnp
add
add
add
call
and
lret
mov
lods
fsubrl
shlb
daa
fimuls
push
mov
fwait
out
cmp
push
jbe
xor
push
pop
push
jmp
lods
mov
sub
cmp
jg
sbb
add
into
orb
sbb
insb
xchg
data16
mov
pop
popf
add
xor
jl
mov
test
jno
jo
jno
xchg
fistpll
scas
mov
push
push
repz
sahf
test
add
xchg
sbb
mov
daa
jg
jmp
cli
push
add
loope
sahf
push
leave
jl
mov
and
pop
xchg
pop
push
mov
in
jl
push
pushf
stc
or
addr16
adc
divb
ds
jbe
push
dec
adc
fwait
ret
cs
xchg
aad
jecxz
fcoms
sbb
or
sub
xor
sbb
stos
and
rorb
je
inc
test
dec
push
xchg
hlt
push
push
std
in
loop
aas
xor
adc
or
add
mov
xlat
jge
sbb
sub
pop
push
mov
xchg
pop
cld
les
push
pusha
inc
mov
cmp
int3
push
xlat
mov
cmpsb
or
sarl
lret
cld
dec
push
push
sbb
out
jae
scas
mov
xor
loope
fcomps
pop
mov
mov
fnstsw
orl
jns
pop
mov
cli
xchg
adc
mov
jns
xchg
cmp
clc
icebp
add
xor
xchg
out
loopne
je
fdivl
sbb
mov
cwtl
sbb
cmp
nop
js
adc
jecxz
push
lods
mov
push
jno
sbb
and
mov
mov
ret
into
mov
cmp
fwait
sub
popf
sub
out
into
inc
add
jg
dec
cltd
xchg
push
rorb
mov
iret
push
jo
mov
jmp
and
jns
add
cwtl
adc
mov
aam
adc
fnstcw
cmp
cmpsb
stos
decb
mov
popa
pmulhuw
mov
pop
movl
jmp
cmp
dec
add
sti
sub
dec
jo
ljmp
push
cs
fisubs
lock
push
test
and
add
dec
push
aas
int3
vmread
fistl
and
bound
ucomiss
jl
in
xorb
adc
jbe
incl
cwtl
gs
push
xchg
addr16
daa
fwait
mov
add
ja
cmc
fisubrs
adc
jle
repnz
les
fcoms
popa
xchg
sbb
jmp
cli
ret
add
mov
adc
dec
leave
mov
lods
adc
pop
xchg
inc
sbbl
adc
cwtl
stc
roll
pop
dec
nop
mov
mov
mov
hlt
js
arpl
push
mov
hlt
inc
xchg
xchg
dec
mov
jnp
enter
orl
and
dec
hlt
or
movsb
sbb
movsb
fstps
xchg
ja
jne
loope
mov
pop
push
pop
and
aad
rorl
lods
xor
inc
ret
xchg
adc
jns
adc
cmovge
cmp
cmpsb
xor
dec
cmp
pop
add
jle
icebp
ficomps
out
imul
shrb
pop
cmpsl
cltd
jo
pusha
enter
mov
fstps
lret
repz
mov
gs
fidivrl
icebp
pop
xor
adc
pop
insl
je
fcomip
jns
rorl
mov
fwait
cwtl
lcall
pop
lcall
pop
xor
cli
or
fidivl
repz
push
mov
cmp
xchg
cld
sub
test
fdiv
mov
movsl
pop
push
mov
das
push
cmp
mov
jl
adc
int3
mov
mov
jne
dec
cmp
fists
in
mov
stos
arpl
and
push
repnz
mov
jne
lock
jae
ja
rcrb
jne
mov
adc
mov
jp
aam
jne
mov
stc
sbb
sbb
repnz
icebp
adc
repnz
pop
test
aad
scas
xorl
stos
fwait
mov
ja
out
sub
xchg
scas
xor
ljmp
mov
sbb
mov
mov
pop
and
pop
sub
clc
adc
in
sub
and
mov
pop
rcrl
dec
adc
push
div
add
jge
sub
mov
cmp
jle
mov
push
dec
js
test
pop
mov
mov
push
fldenv
mov
or
jmp
ja
mov
ret
mov
xor
rol
jmp
jnp,pn
inc
iret
outsb
das
mov
push
inc
test
in
jle
pop
push
cmp
fcoml
aaa
fucomip
pop
mov
cwtl
stos
sbb
std
hlt
cmc
dec
out
push
shrl
xchg
dec
mov
jle
mov
mov
xorl
pop
sub
mov
push
addb
test
push
push
daa
jne
test
mov
add
loopne
jmp
inc
jo
lret
inc
jnp
pop
mov
in
cmpsl
test
jle
fmulp
jbe
out
out
xor
pop
hlt
cmpsb
push
arpl
mov
shl
push
out
pop
fnstcw
mov
incl
dec
or
notb
and
adc
xchg
mov
shlb
dec
das
bound
pop
imul
lret
adc
push
inc
inc
mov
das
fs
hlt
sub
ret
notb
ror
cwtl
inc
mov
jmp
push
lret
push
inc
push
andb
cmp
daa
push
rcrb
addb
jle
cmp
xchg
xor
lret
mov
push
hlt
pop
out
xor
negl
jl
lds
bound
cs
rcrb
fmull
and
adc
or
vhsubps
jae
out
sbb
inc
enter
out
out
jmp
dec
pop
clc
mov
xorb
aam
add
stc
out
cmp
add
in
jp
daa
mov
xlat
imul
xchg
lcall
aad
addr16
push
dec
fsubl
dec
mov
aas
lahf
lahf
lds
test
fnstcw
hlt
gs
sub
je
mov
inc
cmp
push
int3
ja
ljmp
xlat
jb
test
adc
sub
add
or
ja
in
cmp
jno
mov
xchg
cmpsb
shlb
or
fistpl
iret
dec
orl
adcb
xor
xorl
jo
inc
xchg
xchg
cmc
dec
loope
and
das
pop
or
pusha
movsb
stc
test
mov
cs
mov
in
inc
dec
adc
push
lret
or
mov
cli
xor
mov
in
jo
mov
les
fs
xchg
loopne
mov
shlb
mov
adc
sbb
stc
divb
mov
cmc
lret
inc
xor
cmpsl
inc
pushf
inc
jge
in
jle
lock
jno
ficompl
cmpsb
in
xchg
inc
ss
sbb
pop
arpl
insb
mov
lahf
pop
mov
cwtl
jb
and
mov
push
lods
aad
stos
pop
dec
sub
cmc
aas
scas
pushf
call
sub
mov
push
jns
enter
xor
cli
loope
push
and
js
fucomi
aam
mov
test
ja
stos
inc
dec
inc
sbbb
or
and
dec
stos
mov
icebp
adc
jge
adc
xor
add
fwait
adc
pop
push
testl
insl
int
enter
mov
and
xorb
push
mov
jg
push
mov
inc
ss
dec
dec
sbb
movsb
inc
add
push
std
andl
mov
dec
sub
adc
jge
push
xor
call
add
add
sbb
imul
add
lret
fwait
mov
mov
cs
jg
inc
cmp
pushf
jmp
push
ficoml
dec
out
addr16
push
cmpb
jle
add
add
mov
jo
mov
dec
xor
std
pop
out
xchg
popf
pop
push
arpl
les
hlt
and
add
mov
pop
inc
jne
or
mov
mov
pop
xor
xchg
pusha
dec
popa
jns
iret
xor
mov
mov
out
dec
sbb
xchg
jmp
dec
enter
inc
push
and
add
dec
dec
imul
mov
adc
add
mov
pop
cmpsb
mov
mov
pop
jns
dec
std
xchg
icebp
sub
lock
pop
dec
push
shll
rcl
xor
in
lds
fs
pop
jno
sub
sbb
add
arpl
dec
or
mov
mov
stc
shl
pop
inc
cmpsl
sti
and
insl
ror
call
and
lret
cs
mov
xor
push
push
pop
inc
addr16
jg
jmp
dec
ds
in
leave
jne
addr16
push
stos
and
clc
push
je
cwtl
and
incl
mov
jae
ja
jne
imul
mov
sysenter
pop
add
mov
sub
inc
lock
popa
shl
daa
xlat
lret
call
jno
xchg
xor
add
cmpsl
testl
jno
mov
sub
mov
inc
ret
fadd
fwait
movsb
jmp
adc
xchg
push
push
rcrl
clc
jae
mov
out
leave
cwtl
jbe
pusha
pusha
aas
lea
sbb
mov
loope
std
pop
push
inc
std
sbb
jle
or
xor
push
decl
pop
add
dec
jb
jbe
pop
insb
test
xchg
cs
adc
or
add
popf
jb
mov
fs
ficoms
sbb
jge
pusha
divl
dec
xor
cmpsb
xchg
adc
ftst
mov
cmp
lret
nop
pop
pop
mov
mov
incl
mov
ja
mov
pop
jb
mov
mov
xor
add
addr16
scas
mov
addl
push
mov
popf
dec
pop
ret
jae
cltd
mov
in
loope
jbe
adc
iret
xor
sub
iret
js
or
jo
cli
cwtl
lret
xchg
mov
mov
adc
pop
add
pop
outsb
aam
and
or
pop
jbe
mov
mov
fisubs
fists
push
add
clc
jo
fsubs
sarb
stc
les
mov
or
les
add
pop
imul
test
lret
push
movsb
inc
mov
jg
iret
fadd
out
adc
daa
cs
popf
fisubrs
jl
decb
mov
out
or
jle
movsl
mov
mov
mov
mov
sbb
mov
repnz
out
sbb
mov
jbe
mov
jg
daa
rorb
popa
xlat
mov
cmp
sub
test
xchg
mov
jns
xchg
imul
and
jno
jecxz
notl
adc
adc
mov
push
jne
jle
hlt
add
and
sbbb
sbb
jnp
lods
jbe
adc
jl
sbb
mov
fcoml
or
mov
mov
out
cmc
rclb
notl
adcl
jl
dec
mov
xorl
int
fdivs
xor
fsubs
lods
jne
outsl
xor
mov
scas
sbb
jne
or
push
jl
mov
add
adc
push
mov
cmpl
add
popf
stos
loop
xchg
movsl
or
fstpt
fidivs
lods
jle
ljmp
or
pop
pusha
mulb
int
xchg
arpl
push
jnp
into
dec
mov
inc
mov
fcompl
jl
scas
cmpsl
lcall
mov
addr16
mov
pop
out
mov
fisubl
sbb
stc
jge
jl
xchg
add
ljmp
fistpll
jne
xlat
insb
xlat
mov
push
daa
out
pop
in
mov
or
sbb
or
out
es
and
adc
fstpl
loope
subl
push
jle
add
xchg
xlat
stos
dec
into
clc
pusha
push
test
leave
mov
inc
and
pop
pop
mov
insl
lds
add
pop
dec
pop
shrb
or
push
aad
cmp
push
shll
fnstcw
insb
or
fldt
jecxz
mov
lods
mov
push
xchg
and
test
or
pusha
loop
fnstcw
cld
jo
cmpsl
lods
push
in
ja
jns
xor
aas
jl
mov
insb
inc
test
cs
loopne
sar
sub
pop
xchg
mov
mov
cmpb
or
imul
jno
repz
mov
mov
mov
pop
ja
xchg
inc
fisttpl
inc
pop
movsb
push
loopne
inc
and
out
jns
add
xchg
icebp
cmp
dec
mov
loop
jnp
mov
sub
pop
cltd
mov
xchg
fistpll
lret
dec
addr16
rol
daa
xlat
mov
pusha
push
inc
inc
jmp
add
std
idiv
mov
sahf
aas
adc
int
enter
scas
int3
loop
daa
mov
push
pop
inc
sub
sub
lahf
scas
dec
rorb
pushf
mov
std
arpl
sub
loop
sbbl
je
mov
adc
add
es
pop
adc
fsubrs
mov
and
int3
lret
xor
divl
add
out
pop
in
mov
sbb
jnp
in
shl
sbb
jne
pop
dec
dec
popf
xor
cwtl
cwtl
sub
sahf
ret
imul
leave
sbb
rolb
xchg
je
add
lret
pop
push
push
dec
push
pop
pushf
dec
adc
scas
fstps
xor
js
jo
test
mov
jbe
mov
imulb
repnz
pop
faddl
rcr
adc
dec
fs
sbb
jge
sub
mov
sti
es
cwtl
xchg
jp
jle
add
cmc
push
mov
shlb
add
pop
lods
push
and
mov
rclb
shr
inc
mov
dec
into
jnp
subb
les
lret
popf
cli
jo
or
movsb
cmpsl
push
jmp
fwait
pop
mov
mov
push
testb
cmp
push
inc
pop
test
jmp
mov
cld
fnsave
call
and
cmpsl
mov
xor
pushf
add
js,pn
leave
and
jl,pn
mov
sub
fs
and
lret
fdivrs
dec
into
les
mov
ds
and
fidivrl
pusha
aam
rcll
pop
sub
jo
shlb
jge
js
sub
mov
push
mov
jb
xchg
push
mov
bound
mov
push
mov
dec
notb
test
dec
sti
mov
inc
cmc
and
out
cmovl
inc
imul
cld
adc
xchg
ljmp
mov
sbb
stos
fistl
addb
pop
inc
test
mov
ficoml
negb
jmp
mov
mov
fbld
jne
insb
xorl
dec
fidivs
jae
xor
add
push
cmp
bound
mov
xchg
pop
add
mov
enter
or
test
loop
adc
pop
jo
je
gs
cmpb
jle
aas
and
sub
in
or
ret
lods
sub
xor
icebp
scas
jb
int
icebp
ds
ficoml
popa
cwtl
fs
pop
inc
mov
push
pop
or
mov
mov
aas
push
pop
cmp
aaa
pop
scas
ja
sub
out
lahf
fistps
push
loop
push
out
sub
sub
mov
ljmp
mov
sub
aam
dec
lret
dec
push
out
and
mov
mov
xor
leave
rclb
cmp
adc
xor
ljmp
dec
jnp
mov
mov
mull
not
or
mov
push
add
insb
jne
adc
mov
loop
jle
cwtl
lods
or
push
test
ljmp
mov
inc
cmp
stos
daa
xor
jnp
pop
adc
adc
in
pushf
push
push
stos
mov
dec
int3
in
push
lahf
pop
and
dec
addr16
insl
pushf
cmpsb
mov
and
fwait
cmpsl
mov
xchg
jo
lahf
pop
jmp
pushf
push
xchg
jnp
dec
push
lahf
add
mov
push
cmp
mov
xor
sub
jmp
mov
fisubrs
add
test
jb
popa
lret
push
inc
shlb
and
push
add
jl
cwtl
lea
dec
dec
adc
add
fwait
sub
sub
xchg
add
jo
out
or
pop
andb
xchg
lret
add
jle
setge
pop
cmp
jnp
movsb
or
hlt
xor
in
sbb
jbe
incb
in
lea
mov
shlb
insb
mov
cmpsb
lahf
add
lret
shll
adc
pushf
ret
mov
fs
jo
push
fiadds
adc
mov
pop
jbe
xor
lcall
sarl
adc
pop
add
push
add
push
pop
arpl
out
ljmp
inc
lods
out
fidivl
pop
out
mov
mov
icebp
pop
lahf
shll
mov
mov
inc
mov
dec
add
nop
addr16
pop
out
lods
mov
scas
mov
imul
shlb
xchg
pushf
xchg
sbb
lahf
push
sub
jg
jbe
cmp
add
mov
adc
mov
aad
data16
lcall
push
andb
pop
mov
add
pushf
enterw
int3
ja
xor
mov
hlt
lock
enter
jecxz
mov
mov
jecxz
pushf
xchg
xchg
mov
inc
jo
push
dec
inc
iret
out
scas
addb
dec
imul
inc
push
add
cwtl
sub
adc
mov
outsl
leave
ja
xchg
mov
jnp
or
dec
into
cltd
mov
pop
lahf
mov
popf
or
xlat
nop
shlb
add
fsubs
repnz
push
lods
stos
rolb
loope
insl
cwtl
cmc
xor
fdivr
lret
fs
call
fwait
pop
stos
orl
aas
loop
or
add
cmpb
xchg
outsl
xchg
cwtl
std
xorl
mov
jl
mov
lcall
sub
dec
ret
rorl
jg
iret
cmc
add
mulb
push
adc
cmp
mov
sub
andb
imul
and
inc
icebp
jecxz
push
iret
mov
sbb
sahf
push
lahf
jb
sub
jns
leave
mov
cs
das
push
lahf
les
sti
decl
ret
call
in
sub
ret
bound
xchg
js
add
mov
jno
dec
mov
subl
xchg
les
jge
mov
cmpsl
jge
or
xorl
nop
xor
movsb
stos
out
xchg
xchg
ret
pop
cmpsl
int
jmp
mov
pop
pop
sbb
push
test
dec
push
lods
dec
test
ret
pop
test
int3
lods
repz
fucomp
mov
jnp
nop
xorl
popa
orb
mov
sbb
xchg
xchg
xchg
mov
mov
mov
cmp
in
iret
les
xchg
cmp
dec
and
shl
and
add
mov
jne
push
pop
mov
xor
je
adc
das
gs
cld
inc
jmp
push
fldt
in
inc
cld
xchg
outsb
xchg
inc
mov
mov
inc
imul
push
mov
mov
mov
mov
sbb
xchg
lods
cmpsb
loope
mov
xchg
hlt
inc
and
add
daa
mov
dec
pop
inc
mov
jns
pop
mov
xor
popl
jg
and
mov
popf
cmc
lods
adc
in
xchg
push
jae
shlb
sbb
insb
xchg
inc
sbb
sbb
cmp
sbb
inc
pop
lret
cli
rolb
sbb
xchg
mov
or
add
dec
loopne
stos
cmp
mov
or
and
enter
fcompl
ljmp
push
stc
not
mov
in
fs
mov
loope
insb
lds
mov
cmc
mov
stc
insl
jo
push
push
in
cmpsl
push
inc
pop
fidivs
xor
cli
dec
push
sbb
into
mov
ja
test
jl
jmp
dec
ja
sub
pop
push
adcb
repnz
and
or
stc
scas
mov
inc
push
fsubrs
insb
fs
sbb
mov
jl
adcl
or
addr16
inc
mov
add
mov
mov
addr16
push
cli
movsl
cmp
aas
insb
divl
mov
mov
inc
stc
or
mov
xchg
or
imul
pop
leave
data16
arpl
push
jl
pop
xchg
pop
and
aam
push
push
rcrb
jmp
fimuls
mov
pop
add
fimuls
sub
data16
or
push
pop
stos
lods
bound
or
pop
ljmp
loopne
mov
outsb
add
sbb
scas
push
inc
mov
inc
inc
xchg
enter
gs
sbb
inc
les
mov
lret
sub
out
jbe
adc
pop
popa
aaa
jmp
pop
add
and
mov
mov
fmuls
int
iret
jae
jge
sbb
lods
xor
and
inc
inc
cmp
popa
pusha
iret
xor
push
mov
xchg
lock
push
fldcw
sti
lret
push
inc
inc
nop
adc
subb
rcll
mov
in
pop
inc
mov
pop
jg
dec
xor
mov
mov
mov
pop
xor
add
clc
lret
leave
pop
and
jle
adc
mov
add
es
fcom
shlb
xchg
adc
dec
ret
das
addr16
lock
mov
sahf
mov
lods
testb
nop
fsubrs
or
loope
inc
push
cmp
sarb
push
sub
icebp
mov
push
jmp
lahf
adc
jg
ret
xor
dec
popa
jl
outsb
call
ljmp
fstl
add
or
push
movsb
lahf
push
popf
aad
lods
ds
push
in
out
push
sarl
cld
push
sbbb
int3
jp
adc
xchg
adc
and
push
sti
pop
jo
test
stos
dec
or
lea
out
movsb
into
mov
mov
adc
sahf
sti
das
cmp
xor
push
mov
mov
dec
add
xchg
mov
daa
mov
shl
and
and
mov
loop
in
in
or
and
adc
mov
adcl
xor
xchg
into
mov
xchg
fistps
xchg
inc
dec
adcb
popf
adc
jge
cltd
rclb
aaa
and
hlt
iret
ss
jge
stos
imul
sbb
fwait
bound
call
jnp
int3
call
sbb
mov
dec
das
insb
xchg
pop
fwait
jnp
cmp
scas
mov
testl
add
pop
lcall
mov
test
dec
xor
into
or
fsubs
cmc
jmp
pusha
in
mov
jecxz
inc
ljmp
and
in
cmp
nop
dec
mov
dec
in
popa
sub
ss
adc
cmpsb
xchg
ss
fdivrl
jmp
xchg
repz
ret
out
orb
aad
popf
clc
xchg
mov
xchg
xchg
add
ds
pushf
fdivs
mov
pop
movsb
or
movsl
mov
call
mov
add
or
push
jo
lods
repnz
mov
cli
pop
dec
cmc
sbb
sar
mov
pop
ret
fistps
sub
inc
dec
je
mov
push
jae
mov
sahf
mov
and
insl
jne
divl
sahf
nop
loop
cmp
in
out
xchg
cmp
sub
mov
fdivrl
pop
clc
jb
and
int3
int3
jmp
inc
adc
loope
jne
cmpsl
dec
push
mov
int3
push
lret
cmp
push
hlt
lret
xor
jns
lods
or
cmp
inc
cmp
dec
fucomp
cmp
ja
push
xchg
dec
mov
lods
jle
sub
sbb
stos
cltd
push
add
mov
add
daa
fildll
sbb
stos
insb
push
add
popa
call
loopne
int3
jl
cmp
mov
sbb
jns
jle
cmp
leave
jp
pop
xchg
jg
mov
dec
pop
es
aaa
push
clc
xor
cmp
ret
lret
cmc
xchg
or
cmpl
cmpl
jbe
cmc
fistps
stos
out
stc
adc
mov
dec
push
push
ss
cmp
cli
shrb
outsb
subb
fdivr
dec
std
add
fwait
add
fcoms
std
ljmp
fs
pop
popa
hlt
icebp
jg
sarl
pop
or
sub
sti
movsb
and
imul
pop
ja
mov
aad
lods
xor
mov
dec
push
mov
push
pop
sub
push
movb
add
cmc
rol
pop
lock
adc
mov
and
pop
dec
loopne
jmp
xchg
cmc
loopne
dec
or
push
pusha
mov
pop
out
mov
icebp
pop
xor
popa
cmpsb
add
pop
cld
dec
inc
fcomps
popa
popa
test
push
inc
xchg
pop
arpl
jb
cmc
in
test
loope
dec
pop
ret
lock
lahf
fwait
inc
int
cmp
push
ret
fistpll
mov
popa
and
dec
jnp
pop
pop
clc
jecxz
mov
add
jmp
mov
ljmp
mov
xor
divl
push
dec
test
stos
inc
jge
xchg
pop
add
pop
out
or
idivl
loop
sub
xor
xlat
mov
popa
jl
pcmpeqw
adc
iret
jnp
icebp
xor
cmp
scas
daa
cltd
cmp
scas
stc
data16
call
popa
les
mov
out
inc
mov
inc
out
stc
iret
bound
mov
pop
stc
mov
jno
in
add
sbb
inc
jl
mov
and
arpl
add
sahf
sbbl
pop
dec
iret
std
pop
jo
stc
jbe
dec
jecxz
and
lea
ja
or
hlt
pop
leave
fs
mov
add
cmc
sub
mov
imul
mov
push
lret
in
sub
mov
jmp
das
mov
pop
insl
mov
and
les
and
jne
dec
push
insl
into
sub
jnp
cmpsl
lds
out
xlat
daa
mov
push
sub
aad
int
test
testl
int
mov
hlt
mov
scas
sub
test
hlt
mov
jp
dec
loope
mov
decl
sub
adc
mov
mov
mov
cmp
icebp
cmc
or
stc
mov
mov
ret
ret
mov
in
add
popa
cmpsb
cmp
std
leave
test
mov
movsl
jne
or
ja,pn
test
xor
jnp
lret
cmc
jb
mov
aam
mov
stos
mov
dec
jg
pop
jns
mov
popa
sbb
aaa
or
sub
aad
fisubs
adc
cli
mov
push
xchg
pop
dec
cmc
cli
xor
cmp
xchg
rcrl
mov
mov
in
ljmp
repnz
lods
mov
scas
cmpl
lock
out
pop
stos
or
mov
and
cwtl
push
mov
sar
pop
dec
sbb
leave
notl
incl
iret
orl
loope
repnz
push
clc
out
xor
adcl
push
push
ror
hlt
add
fcoml
add
inc
xchg
push
aas
cld
dec
mov
jnp
ds
ret
dec
sbbb
es
mov
xor
insl
or
imul
xchg
pop
dec
insl
stos
mov
lock
inc
hlt
popa
int
mov
fdivrs
jg,pn
addr16
cmpsb
sbb
add
aad
xchg
pop
jp
sbb
std
lcall
sbb
xor
repz
cwtl
cld
jns
lcall
adc
sub
adc
sbb
xlat
scas
jno
xor
xor
sbb
sbb
mov
clc
xor
push
dec
jno
jno
adc
xchg
pop
sbb
push
cmp
adcl
into
movsl
adc
cmpb
scas
daa
lret
das
pop
aas
daa
in
out
aas
lcall
xlat
or
cmp
movsl
xchg
pop
inc
xor
xchg
jmp
into
data16
and
inc
sub
xchg
push
lahf
scas
loope
pusha
int
fs
mov
sahf
xchg
or
in
fnsetpm(287
mov
std
adc
mov
mov
outsl
jbe
cmpsb
jmp
push
stc
xor
fcmovnu
cld
call
pop
or
in
aad
ret
or
dec
push
cwtl
repnz
pop
test
adc
inc
lods
lret
adcl
test
mov
jge
into
xchg
mov
add
mov
pusha
push
into
push
lcall
es
dec
or
inc
sub
cmpsb
mov
xchg
mov
push
inc
xor
jp
dec
sub
cmpsl
icebp
sub
pushl
cs
xchg
cmp
dec
mov
pop
or
into
out
addr16
out
aas
popf
cmc
inc
jo
lahf
aas
xchg
mov
push
shll
fwait
push
out
stc
je
jae
dec
jnp
dec
imul
cmc
push
les
add
sti
sti
ds
subb
rcrl
sub
arpl
mov
mov
pop
popf
xchg
loopne
inc
lcall
js
hlt
fwait
std
adc
repz
xchg
push
and
xchg
push
cmpsl
push
xchg
lret
out
dec
popf
jecxz
xchg
and
imul
mov
popf
adc
mov
popa
out
mov
addr16
fs
cmp
jle
cmp
mov
and
jp
cmpsb
jmp
adc
out
imul
cmc
pop
jne
stc
imul
push
pop
jo
inc
and
or
mov
jnp
sbb
dec
push
xor
push
add
aas
or
test
jne
inc
jnp
jnp
mov
xor
mov
mov
cmpsl
loop
inc
xchg
mov
in
loopne
xor
push
arpl
sbb
lcall
adc
mov
pop
icebp
adc
imul
or
rorb
shlb
js
in
jge
in
test
pop
xchg
testl
lcall
mov
into
test
shrl
in
lock
out
mov
bound
xchg
jmp
cli
mov
mov
xor
dec
ficompl
cmc
movsl
jl
cltd
int3
in
inc
testb
or
scas
mov
lods
stos
or
shll
test
adc
pop
fbld
jp
lret
or
inc
cmp
sahf
les
test
arpl
pop
fmuls
adc
mov
dec
add
incl
xchg
mov
out
dec
jo
notl
add
xor
add
mov
or
repnz
popa
or
repz
mov
pop
pop
dec
sarl
cld
pop
mov
insb
mov
out
push
pushf
push
jbe
mov
and
mov
inc
or
enter
pop
dec
orb
movsb
int3
jge
lahf
fcmovnu
mov
add
mov
lea
fsubl
enter
inc
pop
sub
mov
mov
mov
jmp
nop
stos
xor
add
dec
cwtl
insl
stos
lds
mov
js
sbbb
dec
jae
mov
jo
lods
jl
pop
inc
dec
push
mov
push
popa
jle
cld
movsl
jo
xlat
cmp
bound
fwait
pop
dec
sub
or
jle
sahf
or
fistps
dec
icebp
adc
jge
sbb
stos
mov
outsb
ds
loop
flds
movsb
mov
sbb
rorb
sub
pop
jb
mov
or
cmp
les
out
or
cwtl
mov
stos
push
fistpl
pop
cld
je
mov
call
mov
mov
loopne
mov
or
adc
add
cmpsb
in
fisttps
imul
inc
shll
adc
xchg
push
and
ljmp
stos
dec
cwtl
or
pop
movsl
or
test
push
jecxz
fmuls
xor
push
jg
mov
lock
rcll
in
popf
cmp
mov
sahf
into
lods
mov
push
push
lahf
fisubl
or
jae
out
les
inc
or
gs
aas
pop
pop
scas
mov
mov
xchg
lahf
lock
test
or
hlt
mov
fisttpl
fyl2x
enter
es
aam
pop
mov
or
xchg
sbb
jl
in
lahf
pop
xor
jle
xor
arpl
cmp
mov
push
lret
jns
fiadds
out
sub
fisttps
xchg
pop
jno
idivl
clc
pop
ret
cmp
aad
gs
sub
add
adc
dec
mov
stos
jge
out
out
outsl
xchg
outsl
ljmp
ljmp
idivl
jg
daa
andb
sahf
fs
mov
dec
xchg
add
popf
jo
lds
test
stos
pop
and
jl
mov
pushf
cmpsl
divb
mov
roll
ss
in
out
jle
add
cmp
inc
add
sbb
into
mov
mov
in
rorb
pop
stc
mov
fstpl
and
inc
jmp
adc
or
mov
lods
xor
ja
jbe
test
lret
popl
jbe
dec
int3
cli
push
fwait
jp
push
ret
inc
push
xchg
frndint
dec
dec
leave
pusha
popa
xlat
decb
xor
addb
jecxz
shlb
adc
pushf
xor
inc
or
scas
jnp
mov
mov
mov
or
mov
mov
in
jb
popf
and
aam
or
int3
repz
jl
jbe
sub
sbb
sbb
aad
icebp
push
fisttpl
cmp
push
jbe
add
or
mov
ror
orl
dec
sub
jns
jecxz
xchg
ret
rcrb
in
xchg
or
xchg
mulb
shrb
push
push
push
aas
rorl
dec
inc
rol
lods
repnz
test
push
cmp
dec
jmp
ret
sbb
out
inc
shrl
jmp
or
mov
or
mov
loopne
in
lock
inc
xor
lcall
sbb
stc
out
mov
push
mov
je
fs
adc
jns
jecxz
lods
popa
cmp
push
mov
fbld
cmp
aas
imull
mov
push
loopne
sbb
push
cmp
jp
cmp
pop
pop
cmp
sub
out
popf
in
jae
mov
and
in
fdivs
mov
mov
push
lods
jo
enter
mov
leave
mov
push
inc
or
pop
xor
call
cmp
stos
cmc
push
fdivrl
pop
mov
jle
mov
ja
jl
xchg
push
dec
insl
push
imull
pop
fcoms
mov
cmp
clc
rclb
divb
sbb
clc
xor
push
pcmpeqw
scas
sbb
push
mov
movsl
mov
cmp
cmp
lods
in
mov
cmpsl
addl
icebp
out
inc
cmp
fcomps
and
push
add
fdivr
jbe
outsb
addl
pushf
add
mov
imul
jle
jne
test
andl
jno
pop
mov
or
mov
push
lods
arpl
mov
fisttpll
xchg
mov
scas
fidivrs
int
int
movb
insl
in
sub
out
sbb
xor
add
dec
fmuls
gs
dec
test
jg
test
mull
repnz
repnz
mov
jle
stos
out
xor
push
xchg
in
or
pushf
int
bound
loope
mov
orb
outsl
dec
stos
icebp
cli
lods
mov
and
mov
popf
add
add
cmpsb
iret
test
int3
shlb
pop
pusha
orl
dec
xor
push
cmp
ds
neg
loopne
ret
rcrl
dec
ljmp
push
or
iret
das
outsb
pop
incl
and
addr16
cmc
sub
aaa
sub
add
xlat
das
mov
inc
and
xchg
pop
int3
int
xchg
out
jbe
jnp
arpl
xchg
arpl
outsl
movsl
push
xchg
push
fiadds
lcall
xor
fs
push
out
int3
fldenv
out
mov
lahf
sahf
xlat
jno
xor
popa
clc
icebp
test
out
pop
push
and
stos
lahf
ret
add
jle
mov
nop
lods
mov
add
outsl
jo
fistps
aam
insb
fldenv
lods
out
gs
cmp
sbb
mov
fldcw
clc
rcl
cli
cmp
dec
inc
cmp
pushf
push
add
data16
adc
mov
xchg
test
out
into
mov
bnd
dec
sub
inc
xchg
mov
mov
rcrl
cmp
sbb
insl
pop
shlb
in
mov
push
or
xchg
mov
cmp
jne
push
mov
outsb
fdivl
lds
out
inc
cs
lahf
inc
call
je
pop
stos
gs
dec
xchg
push
insb
addl
mov
pop
inc
jne
in
stc
mov
mov
jns
jg
loop
push
jg
stc
lahf
jp
popf
mov
les
and
jmp
popf
cmp
enter
stc
in
xchg
mov
gs
test
dec
mov
dec
loope
lret
sbb
jbe
cmp
icebp
jmp
out
sbb
dec
jbe
popf
mov
xchg
fimull
sarb
jne
mov
adc
pop
inc
pop
jecxz
sarl
sub
jge,pn
push
xchg
shlb
aam
inc
xchg
inc
popf
lret
lss
jb
ret
pop
lods
outsl
dec
push
lds
mov
addr16
dec
test
adc
mov
dec
add
and
les
movsb
out
xchg
icebp
jne
push
sub
inc
stc
sbb
push
add
pop
sub
fnstenv
cmpb
in
and
hlt
mov
out
or
dec
ffree
out
adc
aas
mov
mov
cwtl
cmpsb
pop
pushf
lds
sbb
jnp,pn
mov
inc
mov
aas
imul
pop
inc
cs
popa
sub
pushf
xchg
lret
add
push
inc
mov
and
fucomip
xchg
xor
mov
insl
mov
cltd
push
mov
sub
and
ret
push
subl
dec
push
xlat
jbe
adc
je
test
xchg
in
divl
sub
sbb
mov
scas
push
scas
mov
lret
jns
mov
xorl
fwait
cs
sub
mov
jae
lcall
adc
add
or
bound
inc
jae
inc
cli
out
shll
xchg
mov
cwtl
pop
dec
cmpsb
in
mov
out
clc
mov
push
push
dec
xor
jge
in
adc
fadds
outsl
bound
clc
xchg
popf
mov
mov
stos
ss
add
js
xchg
ffreep
and
and
adc
jo
icebp
or
test
sbb
into
or
or
push
jo
pcmpeqw
outsl
cmp
jno
and
jp
add
jg
inc
mov
gs
push
lods
adc
cwtl
fwait
add
inc
dec
test
cs
bound
or
xor
ret
not
test
push
stos
call
js
mov
xchg
pop
mov
xchg
imull
lock
iret
cmpsl
add
push
fstpl
jo
add
push
fstpl
cmp
pop
shr
xor
inc
sarl
loop
shlb
subb
or
and
cmp
or
xchg
add
mov
fld
movsl
pop
xlat
frstor
dec
push
movsb
dec
jo
mov
adc
outsl
add
sub
pop
adc
into
test
or
loopne
push
fcmovbe
lret
xor
xor
test
cwtl
daa
mov
inc
sbb
dec
push
hlt
dec
stc
jl
insl
dec
inc
inc
test
xchg
jmp
mov
mull
dec
fstps
arpl
rclb
icebp
jo
cmpl
ljmp
adc
push
jg
pop
mov
push
cld
fisttpll
mov
adc
loope
jle
jae
imul
xchg
push
xor
dec
mov
movl
scas
fsubrs
cwtl
push
lret
fldcw
cmpsl
aaa
outsb
and
xor
out
fmull
dec
xor
outsb
sub
push
or
das
and
leave
dec
mov
or
hlt
mov
leave
adc
fsts
mov
add
push
push
mov
sbbl
add
out
ds
jmp
sti
xchg
mov
adc
jo
mov
push
mov
loopne
dec
sarb
icebp
bound
fistpll
in
and
nop
xchg
movsb
xchg
bound
xchg
icebp
jmp
ds
lcall
sahf
lods
jnp
sahf
or
sub
gs
pop
mov
mulb
out
orb
mov
mov
cmpsb
les
and
jecxz
pusha
loop
rorl
sub
ljmp
and
loop
mov
ret
jo
arpl
icebp
sub
cmp
xchg
dec
mov
xor
xchg
int
cmp
pop
leave
and
into
repz
ret
add
pop
pusha
xor
push
int
cmp
mov
inc
subl
xor
idivb
sbb
sarb
mov
inc
xor
dec
xor
dec
ret
and
and
mov
out
cmpsl
jbe
ja
inc
ja
mov
add
xchg
mov
dec
dec
xchg
dec
jmp
stos
ret
lcall
jns
into
lods
push
jecxz,pt
or
mov
mov
push
repnz
popa
jne
cmc
jmp
andl
out
jle
into
jbe
icebp
jbe
es
hlt
mov
pop
push
xorl
aas
enter
cs
rcr
sub
js
lret
adc
das
clc
repz
int3
sarb
push
jae
loopne
lds
jbe
aaa
xlat
loopne
inc
inc
xchg
cmp
lea
sbb
mov
mov
inc
sbb
addl
in
call
sahf
xchg
add
adc
sbb
jno
sbb
xor
fcoml
xor
dec
pop
xchg
push
dec
sub
test
fdivl
pop
lret
out
pop
stos
bound
into
orl
enter
movsl
fists
and
xchg
sarb
jno
push
outsb
arpl
pop
clc
mulb
cwtl
aaa
aaa
lods
add
add
movsb
push
rorl
dec
dec
fadds
jmp
lret
jle
add
jo
or
or
inc
aas
mulb
mov
pop
in
sub
out
push
arpl
pusha
inc
notb
add
adc
int
or
lret
dec
movsb
in
adc
sub
mov
cmc
lock
iret
test
dec
mov
jns
xchg
mov
movsb
out
scas
cmp
aas
out
jmp
jo
stc
cltd
ret
lods
push
nop
jp
addr16
or
cli
sbb
sbb
xor
jae
loope
stos
xor
clc
clc
ds
ret
or
dec
add
inc
jl
adc
cmpsl
sub
rolb
pop
mov
push
jecxz
movsb
pop
repnz
mov
test
scas
adcl
lcall
insb
fisubs
int
push
or
lods
adc
insl
movsb
mov
mov
mov
adc
mov
push
xor
pop
inc
lock
stc
aam
mov
and
rcr
lcall
jo
mulb
push
jg
ficomps
shrb
sub
or
dec
cmp
dec
dec
xlat
shr
mov
ja
les
adc
jne
xor
jl
movsb
xor
cmp
mov
mov
mov
mov
test
iret
in
leave
or
mov
mov
pop
mov
dec
movsb
in
mov
pop
adcl
add
imulb
push
add
scas
cmp
movsb
adc
jge
pushf
dec
push
mov
jno
flds
movsb
xchg
add
je
jge
jge
icebp
fimuls
pop
lods
jae
out
in
adcl
scas
adc
scas
cmpsb
sub
lret
ror
xorb
icebp
in
and
je
movsb
cmp
xlat
fidivrs
adc
popl
inc
iret
aas
or
dec
push
inc
xor
ret
xlat
sbb
mov
aas
ja
int
inc
addl
pop
pop
sahf
lods
daa
subl
xchg
dec
inc
jmp
xorl
movsl
adc
stos
jl
clc
cmpsl
test
or
out
int
xchg
cmp
popf
mov
movsb
sti
adc
add
and
jae
mov
jo
mov
push
xor
jecxz
ret
jmp
hlt
cwtl
std
movsb
leave
pushf
adc
pop
lods
adc
jnp
push
clc
jl
mov
cmp
sub
jl
repz
or
outsb
mov
push
les
cmpsl
repz
je
xchg
lds
fists
pop
aad
fiadds
xchg
pop
cmpsb
cwtl
imulb
mov
dec
test
push
sbb
fscale
dec
dec
sbb
cld
sub
mov
push
hlt
mov
push
int3
ret
lret
jae
xor
test
and
cmp
test
xor
lods
xchg
call
scas
sbb
sbb
mull
int
add
xchg
or
push
in
rcr
fwait
cmp
icebp
in
outsb
jmp
scas
adc
mov
repz
sub
sbb
adcb
and
fstl
xchg
lock
fucomp
incl
ret
mov
jae
jmp
int3
cli
jle
rclb
and
mov
pop
fwait
in
xchg
add
mov
out
stos
add
andb
dec
jp
lods
repnz
mov
push
mov
mov
sbb
mov
jae
sub
xchg
mov
in
mov
shrl
ss
mov
stc
loope
test
dec
sub
lds
rcll
jecxz
addr16
and
test
xchg
movsl
jno
xchg
test
shll
in
and
push
ret
rcll
xor
out
dec
aaa
sbb
push
dec
leave
fdivp
push
lcall
cmp
xchg
in
lods
test
in
sbb
loop
cmp
clc
cmpsb
sbb
xchg
adc
fdivrp
push
fcmovne
les
pop
jnp
jg
aam
jecxz
or
and
mov
cmc
cmp
cwtl
lcall
hlt
stc
mov
mov
nop
roll
sub
js
fidivs
cmp
aad
fidivl
test
shll
scas
hlt
xlat
ljmp
nop
loop
in
int
stos
cmp
xchg
into
mov
add
sti
sub
loopne
ja
ljmp
push
outsl
mov
aam
into
inc
mov
mov
xchg
ja
pop
stos
dec
mov
mov
ljmp
xlat
push
popf
xchg
out
sti
test
mov
fsub
rcrl
or
cltd
xor
les
gs
lds
rolb
pop
shll
aad
cli
cli
jnp
mov
pop
inc
cmpsl
movl
push
push
mov
into
icebp
iret
inc
imul
push
xchg
idivl
mov
push
leave
xchg
dec
outsb
rcrl
movb
out
es
mov
out
rcr
pop
lds
inc
mov
leave
adc
mov
add
push
std
mov
call
aam
out
mov
mov
inc
jle
orl
scas
and
repnz
scas
inc
jmp
int3
movsl
mov
add
ja
xchg
cmp
imul
stos
pushf
leave
stc
xchg
xor
adc
add
xor
and
leave
xor
mov
sub
push
xchg
into
and
lock
xchg
xchg
and
subl
out
cmp
loopne
xchg
mov
xchg
push
test
or
inc
mov
pop
ljmp
lock
lret
jecxz
orb
aam
dec
xlat
add
mov
xchg
pop
shll
aas
popa
mov
adc
movsb
repz
loopne
int
jnp
xchg
icebp
test
mov
xchg
mov
xchg
xchg
and
fistpl
ljmp
and
adcb
cmpsb
inc
lock
mov
push
sub
inc
xchg
rclb
daa
pushf
ret
mov
cmpsb
aas
cmpsb
push
fs
hlt
xchg
sahf
xlat
adc
ret
xchg
cld
cmpsl
add
sub
xor
mov
daa
jl
aad
dec
into
ljmp
call
repz
mov
fwait
in
mov
nop
fcoml
insb
add
fcmovb
xor
mov
xor
sarl
cld
pop
out
xchg
and
or
lret
movsb
fmul
and
in
out
cwtl
repnz
ror
stc
mov
adc
mov
xchg
lret
xchg
stos
mov
jp
cmpsl
sbb
cmp
mov
pushl
subb
mov
ljmp
xchg
push
sar
enter
jmp
xchg
out
jl
in
push
movsb
arpl
dec
sbb
fimuls
sbb
rorb
cmpsb
outsl
test
fs
dec
es
xchg
and
or
mov
push
mov
ror
jl
orl
mov
cwtl
lret
cwtl
cmp
sub
sbb
jecxz
xchg
div
verr
into
subl
push
sarb
pop
repz
and
and
fidivl
push
xchg
adc
cld
cs
stc
push
nop
lgs
xchg
adc
push
lret
pop
lret
adc
pop
andl
mov
pop
fstpt
js
pop
xchg
fildl
cmp
cs
aad
mov
stos
adc
fistl
and
fldt
pop
cmpsl
pop
sub
lock
xlat
ds
inc
xor
rcrl
daa
mov
sbb
je
adc
sbb
fstl
js
pop
sbbb
mov
decb
mov
cmpl
xchg
or
ja
add
dec
cwtl
cmp
inc
xchg
xor
mov
pop
mov
andl
pop
jnp
loopne
into
push
clc
add
or
aas
mov
xlat
xor
sbb
cmp
out
imul
sub
inc
nop
mov
in
mov
in
pop
add
inc
or
xchg
adc
lret
aas
pop
sub
sub
adc
sub
or
lea
enter
test
aad
lods
push
pop
mov
mov
sub
cmp
das
pop
imul
pop
mov
pop
push
shrl
or
cmp
ret
movsb
jp
ss
dec
adcl
add
insb
xor
xchg
xor
out
and
cs
jl
clc
sbb
ret
dec
test
xlat
ja
popf
mov
xor
dec
in
pop
sub
scas
cmp
dec
adc
sub
int3
repnz
cld
add
fs
shll
into
cmp
xor
int
xchg
xor
sbb
cmc
sbb
sar
xchg
adc
or
loope
mov
gs
mov
cmp
mov
push
add
in
rcll
xor
lahf
sbb
pop
cltd
cmp
pcmpgtw
adc
sahf
notl
insb
movsl
scas
mov
repnz
shlb
ror
cmpsb
pop
jnp
decb
rcll
or
fcomps
xchg
pushf
aas
movsb
std
iret
cmp
jg
adc
fs
pushf
aad
fistps
int3
mov
mov
mov
loope
cmp
sub
push
dec
adcl
cmpsb
push
mov
daa
adc
jo
push
push
mov
pop
loop
fwait
or
and
mov
push
mov
fnstsw
mov
int
fadd
mov
std
fwait
clc
out
pop
xor
repnz
jb
imul
repnz
xchg
or
sub
std
scas
idivl
mov
inc
sub
xor
sub
pusha
sbb
add
in
pop
fdivr
pop
pushf
xor
pusha
jmp
aaa
cmpsl
aas
cmp
mov
fs
inc
inc
mov
jle
cmp
sbb
adc
mov
jl
pop
aam
mov
loop
xchg
cmp
and
cli
shr
push
sub
inc
cli
add
outsl
xor
addr16
jp
mov
jne
insl
sbb
popf
out
jnp,pn
fnstenv
mov
iret
gs
adc
outsb
aaa
mov
jmp
sub
push
and
push
cld
mov
mov
or
xor
cmpsb
cmp
clc
jbe
cmpsl
loopne
sbb
inc
mov
inc
les
lea
jmp
sarl
aam
popa
add
push
mov
mov
iret
ror
es
iret
dec
js
leave
jo
negl
inc
push
sub
outsl
xchg
aad
popf
nop
mov
sub
dec
lret
pusha
xchg
incl
add
or
ret
icebp
data16
push
inc
int
fimuls
pop
fimuls
sub
cmp
iret
sahf
ret
stos
in
fs
bound
or
jmp
xchg
dec
or
in
out
xchg
movsl
pop
jbe
bt
sarb
mov
cmp
sbb
cmp
mov
pop
cltd
cmp
and
test
testl
push
sub
rorl
cmpsb
bswap
or
push
mov
aam
jmp
cmp
adc
stc
test
pusha
bound
cmpsl
idivl
fisttps
lds
subb
adc
xchg
sub
inc
xchg
in
into
lcall
mov
xchg
popa
cmpsb
inc
xchg
subl
inc
push
mov
jae
sub
xor
enter
nop
loope
lea
std
pop
sbb
cmpsb
pop
jbe
lea
lds
cmpl
jmp
scas
movsl
mov
enter
xchg
cmp
mov
sub
insl
mov
cwtl
fcmovne
xchg
mov
ret
adc
lret
jecxz
test
push
mov
mov
sub
xchg
xchg
nop
popa
rorl
mov
push
xlat
divl
dec
int3
push
fwait
xchg
push
mov
cmp
push
and
jnp
mov
push
xor
or
jb
or
and
pop
fimull
push
jb
fldl
add
mov
add
test
iret
push
push
inc
xor
mov
adc
dec
push
int
out
mov
xchg
push
mov
out
mov
pop
movsl
aad
mov
sbb
pop
and
jne
cmp
daa
loope
leave
andl
lods
sti
jno
xchg
push
rolb
mov
inc
lahf
sbb
jnp
sbb
xchg
push
es
fs
in
insb
jecxz
mov
xchg
dec
test
nop
repz
xchg
jmp
aad
movl
xor
add
sbb
pop
aad
aaa
leave
stc
pop
fldcw
push
icebp
fistl
cs
pop
mov
sub
xchg
arpl
pop
sti
aaa
mov
adc
or
pop
addr16
xor
cs
inc
scas
roll
fldcw
cmp
mov
pop
stc
xlat
inc
mov
fcmovu
dec
mov
iret
lret
ficomps
pop
fwait
aaa
aaa
scas
int
dec
iret
dec
fstpl
lahf
xorl
inc
inc
sub
out
aaa
arpl
iret
jmp
sbb
mov
pop
push
scas
out
sbb
cmpl
mov
mov
push
pop
push
cwtl
cli
pop
push
lahf
xlat
mov
add
int
imul
or
add
popa
sub
shlb
push
adc
inc
xor
xor
xchg
xchg
cmpsl
addr16
sti
pusha
lds
aaa
leave
push
out
jecxz
lret
add
xor
mov
ret
add
rolb
mov
lahf
outsb
fwait
add
and
les
or
jnp
push
aaa
cmpsl
push
cmpl
lcall
cmp
xchg
xchg
mov
push
fs
daa
loopne
xor
popf
cmp
mov
jnp
daa
cmp
adc
lret
cmpsl
sbb
xchg
cli
inc
shlb
sbb
outsb
aam
push
dec
xor
movsl
push
iret
into
loop
xchg
sub
dec
lahf
xor
inc
and
mov
mov
mov
and
inc
ret
and
sbb
jg
push
popf
ret
sbb
mov
ret
and
lret
cltd
xor
pop
jge
mov
hlt
int
loope
push
mov
mov
out
and
xor
data16
or
ret
add
mov
mov
stos
mov
mov
jnp
jno
mov
push
or
and
sbb
mov
aas
dec
dec
fwait
push
out
cmp
xlat
xchg
jp
jbe
xor
dec
gs
lret
insb
xchg
inc
mov
pop
cmp
popf
pop
or
cmp
mov
xchg
mov
push
pushf
ja
jle
js
sub
lds
fcmovnbe
xlat
aaa
sub
dec
subl
or
rcrb
add
scas
aaa
orl
pushf
inc
ret
pop
push
sbb
sub
lock
cmp
pop
loope
test
jbe
add
inc
cmc
inc
jb
cmpsb
mov
andb
push
adc
pop
cli
pop
test
or
xchg
mov
popa
sub
test
jb
sbb
sbbl
mov
bound
stos
xchg
sub
aad
pop
imul
xor
enter
mov
pop
test
call
rcr
cltd
outsl
dec
sub
dec
mov
and
in
imul
adc
jmp
or
xor
mov
push
mov
mov
add
xor
test
icebp
cmpsl
jmp
test
adc
pop
data16
outsl
ficomps
fnstsw
mov
push
mov
adc
bound
cmp
xor
adc
mov
cmpsl
adc
repz
inc
inc
add
jns
mov
push
jmp
mov
aaa
pushf
icebp
fldcw
mov
loope
in
jle
push
mov
jbe
push
mov
sbb
sbb
enter
jae
clc
decb
xchg
pop
add
xchg
shll
imul
cmp
adc
lret
fiadds
test
subb
xor
gs
stos
clc
popa
test
jbe
insl
shlb
test
lods
dec
fwait
cmc
test
cmc
fsubrp
dec
popf
jae
xor
or
int
aam
arpl
push
push
ret
flds
cmp
jb
cmp
mov
inc
cmp
ss
popa
test
jbe
xchg
inc
lcall
out
ja
jae
or
and
add
add
fcoms
xchg
ja
add
xchg
push
cld
xchg
jae
arpl
or
addr16
ret
jae
js
outsb
push
bound
push
mov
gs
ljmp
adc
es
push
pop
sti
lods
sbb
outsb
mov
xchg
xor
add
push
mov
jnp
insb
je
lahf
insl
mov
cmp
cmpsl
loope
mov
call
mov
mov
gs
and
test
js
stc
mov
jmp
pushf
dec
das
mov
mov
cmp
add
fwait
int3
lods
inc
pop
dec
jbe
push
pusha
mov
push
lahf
fdivrl
xchg
sahf
mov
sub
sbb
popa
bound
pop
enter
jno
inc
outsl
inc
in
dec
mov
stos
dec
rorb
mov
push
jl
cltd
jae
out
imul
xchg
pop
fs
add
push
icebp
and
xor
inc
loopne
mov
outsb
sti
inc
bound
popa
mov
cmpsl
cmp
add
fistpl
mov
cld
ficoml
dec
ds
cmc
xchg
mov
mulb
fistpl
stos
mov
fnstsw
pop
sub
call
clc
or
jns
adc
jno
add
inc
add
xor
aad
mov
xor
xchg
ja
mov
mov
xchg
insb
ja
mov
std
out
movsb
fwait
cmp
sbb
pop
push
push
push
dec
mov
mov
arpl
mov
aam
mov
or
movsb
aaa
sahf
mov
fisttpll
sbbb
mov
push
pop
push
sub
fldenv
out
cs
push
popl
cs
stos
in
mov
or
addl
js
jge
lret
shl
scas
shlb
sbb
mov
les
xlat
xlat
sti
push
mov
xor
mov
mov
cltd
add
or
push
mov
ds
pop
nop
mov
popa
shlb
sub
sub
sub
jb
lods
sti
adc
mov
or
ret
imul
sub
mov
cmp
ret
xchg
cmp
mov
lahf
stos
jp
test
cmp
std
xchg
popa
test
jle
sahf
mov
mov
mov
inc
push
inc
pop
mov
rorl
push
pop
jns
xchg
xor
sti
lret
jmp
stos
inc
pop
mov
xchg
divl
addr16
adc
cmp
inc
mov
sbb
sbb
fwait
jl
push
repnz
push
pop
icebp
xor
enter
dec
mov
pop
mov
iret
inc
mov
lcall
add
dec
push
out
sbb
ljmp
shr
scas
or
xchg
cltd
mov
cs
inc
dec
mov
mov
repnz
inc
cs
dec
xchg
jg
insl
jns
xchg
data16
push
mov
aad
cltd
and
ja
xlat
mov
movsl
push
push
std
pusha
ret
enter
jmp
mov
mov
out
xchg
adc
test
fisttpl
mov
mov
xor
jle
lret
mov
fistpl
cwtl
dec
add
or
movb
mov
xor
dec
mov
xchg
loop
mov
fcmove
sbb
and
out
sub
jecxz
lds
push
pop
lcall
inc
rcll
mov
push
jns
inc
pop
add
pop
stos
mov
mov
xorb
mov
jmp
aad
test
xor
adc
pop
in
jno
push
scas
add
jp
or
iret
sub
adc
shr
sarb
pop
stc
mov
lret
cmp
mov
and
or
cmp
jnp
inc
orb
xor
cmp
mov
inc
cmpl
mov
mov
mov
jnp
mov
out
dec
sbb
xchg
adc
add
ljmp
dec
mov
mov
or
xchg
xchg
jl
cmp
push
dec
or
adc
push
or
push
jnp
or
in
sub
shlb
xlat
mov
xchg
mov
lock
ret
ds
xor
sub
cli
nop
jnp
push
xchg
push
icebp
pop
push
cld
xchg
ret
push
roll
ja
jecxz
mov
jae
cmp
rol
xchg
lock
mov
mov
cmp
adc
rcrl
mov
mov
xor
jle
js
lcall
js
cmpb
daa
leave
mov
push
mov
xchg
aas
nop
movsb
inc
cmp
pop
icebp
pop
cmpb
rorl
iret
insb
out
inc
aas
mov
push
cmp
sbb
add
xchg
aas
mov
jnp
jl
jns
xlat
or
bound
adc
cli
push
fstps
outsb
daa
pusha
sbb
roll
jno
or
cli
mov
jge
das
adc
mov
xchg
dec
mov
out
cs
jecxz
stos
sub
int
out
cmp
lea
mov
jle
pushf
push
mov
cltd
push
jb
jg
pushf
dec
enter
cltd
sub
cltd
or
js
mov
sbbb
sbb
lock
aaa
mov
or
sbb
jle
pop
aam
sbb
cwtl
jecxz
cmpsb
lahf
add
or
js
push
cltd
dec
dec
jp
out
insb
jecxz
dec
xchg
xchg
dec
add
into
inc
sbbb
pop
lahf
inc
in
push
mov
les
push
mov
or
enter
rorb
iret
mov
pop
les
or
jmp
jb
pop
fwait
sarl
jne
pop
mov
inc
repnz
adc
xlat
sti
cmpsl
mov
push
std
ficoms
xchg
mov
mov
aad
icebp
push
loop
cwtl
adc
xor
insl
mov
int
pop
shll
xchg
adc
mov
dec
jmp
enter
inc
test
adc
rorl
fisubrs
cmp
cmp
mov
icebp
cmp
pop
mov
or
dec
sbb
ljmp
outsb
mov
mov
adc
xchg
xchg
leave
fstl
jmp
dec
aaa
insb
xor
scas
pop
jne
xlat
push
or
and
cltd
aaa
aaa
shl
xchg
sahf
xchg
stc
jl
into
out
push
inc
xchg
and
lods
pop
sahf
cmc
add
dec
aas
mov
sbb
ss
out
rolb
aaa
cmpsl
ss
jbe
xchg
call
ror
dec
clc
je
iret
pop
push
jp
adc
mov
pop
pop
inc
and
mov
je
outsb
dec
out
and
mov
mov
cmp
out
or
xchg
push
jmp
cmpl
mov
sbb
push
mov
fwait
es
or
jns
pop
xchg
jl
fs
xchg
and
decl
mul
pop
lret
mov
clc
hlt
lcall
orl
aas
addr16
int
into
outsl
divb
mov
push
orl
pop
sbb
xor
test
fwait
mov
xchg
push
cld
cmp
xchg
jecxz
std
sub
xor
js
adc
or
or
adc
add
insb
ljmp
mull
push
stc
int3
outsb
pop
dec
fisubrs
inc
cmc
das
pop
shrl
sarl
ret
leave
xchg
mov
aam
cwtl
into
cmpsb
cwtl
jbe
roll
cwtl
push
sub
jne
sub
dec
dec
adc
cmp
jno
out
popa
cmc
fisttps
or
popa
cmpsl
xchg
negl
jl
repz
popa
jl
dec
test
sbb
jo
pushw
clflush
add
dec
jge
rorb
idiv
adc
inc
push
mov
test
hlt
loope
repnz
or
loope
push
orl
pushf
fwait
inc
mov
insl
jle
pop
fldcw
mov
cld
inc
cmp
ret
add
add
jecxz
sti
pop
lcall
outsl
in
mov
shlb
arpl
divb
enter
data16
xchg
test
mov
test
int3
gs
xchg
and
xor
push
mov
push
in
inc
sbb
mov
or
cmc
jecxz
mov
cs
pop
scas
std
inc
pop
out
ja
cwtl
repz
ficoml
pop
outsl
pop
not
sub
loopne
fidivl
nop
jb
pop
cld
sub
or
aam
stc
das
fidivs
add
pusha
xor
outsb
pop
mov
sub
cmpsl
jl
imul
cld
lret
rcrl
pusha
in
cld
rcrl
push
in
rcrb
sub
sub
xchg
iret
xchg
push
or
daa
jle
lret
mov
ret
stc
and
cmp
inc
adc
mov
xchg
jbe
sub
dec
sbb
pushl
rorb
sbb
mov
nop
shrb
xchg
loopne
xchg
pop
lock
out
jne
xor
imul
clc
jnp
xor
clc
xlat
loope
add
in
pop
mov
pop
pop
pop
dec
nop
xor
push
incl
jecxz
inc
rolb
fadd
outsb
es
push
fdivs
dec
mov
jge
es
aam
stc
psubsw
popa
push
ja
lods
ret
inc
lock
push
pmaxsw
out
js
movups
cs
push
lcall
add
out
jle
jge
pop
cmp
adc
jnp
adc
es
push
cmp
lock
rolb
and
xchg
es
mov
aas
fisubl
cmp
jl
mov
stos
sarb
fsubs
xchg
es
adc
jnp
sbb
es
push
addl
leave
adc
inc
outsl
push
jp
mov
fiaddl
subl
lock
dec
inc
push
call
cmp
push
pushl
mov
inc
cli
int
ret
jnp
imul
lock
lods
ret
dec
lock
insl
sbb
out
stc
out
jl
jge
push
inc
cs
adc
inc
outsl
push
jp
inc
lret
lock
cmp
loopne
add
pusha
sti
nop
jb
lret
add
jmp
mov
sbb
popa
sub
aas
clc
sub
push
mov
lret
bound
add
cmpl
test
lahf
pop
inc
ror
loop
fs
movsl
insb
inc
pop
lock
or
addr16
xchg
pusha
outsb
out
xchg
jp
mov
jns
and
imul
in
hlt
cmp
or
adc
push
nop
mov
xchg
aad
inc
xchg
imul
pop
dec
sub
roll
sub
test
jecxz
into
jo
sub
lahf
fs
aam
mov
rorb
cmpsl
aad
mov
inc
jbe
xchg
mov
ds
enter
pop
lahf
jmp
movsb
stos
jmp
xor
stos
cmp
pop
jle
mov
orl
and
addb
push
aas
xchg
mov
jnp
sbb
mov
imul
inc
cmp
jge
jle
adc
mov
popf
sti
mov
cmp
sbb
add
sbb
lret
sbb
mov
cmp
add
pop
nop
sbb
adc
mov
dec
pop
inc
outsb
out
and
lea
out
sbb
sub
aas
enter
xchg
out
stos
test
lahf
xchg
pop
adc
mov
movsl
push
mov
mov
cwtl
dec
mov
mov
add
clc
or
xchg
xor
sub
xchg
nop
jl
jns
mov
mov
sbb
dec
nop
daa
repnz
cld
cmp
add
out
add
out
fucomip
int
leave
or
aaa
sbb
add
andb
lds
data16
sbb
jle
jb
mov
scas
aas
mov
sti
pop
addb
sbb
imul
jne
jl
mov
cmpsb
push
pusha
mov
jle
push
lahf
fsubrl
int
sahf
adc
into
aad
or
sbb
jp
cmc
inc
cli
push
lcall
test
or
jecxz
add
div
sbb
mov
pop
jp
mov
cmp
ja
adc
dec
test
addr16
xchg
jb
dec
mov
add
enter
cwtl
fucomi
or
sbb
lea
sbb
cmpsl
xorl
jg
adc
sbb
or
mov
or
push
cltd
lcall
mov
popa
shlb
cwtl
js
xchg
mov
arpl
popa
fists
fbld
ficomps
fs
lock
iret
ret
or
inc
jle
push
push
inc
sahf
pop
les
sub
das
leave
pop
cmc
cmp
test
rcll
inc
iret
outsl
push
dec
cltd
xor
js
rcrl
and
pop
mov
sbb
loope
shl
addr16
cmpl
test
leave
pop
subl
push
push
mov
push
mov
cmpsb
ds
mov
lods
push
cmpb
mov
jp
push
and
jl
and
mov
jge
cli
or
sbb
ret
jmp
out
xchg
data16
cltd
cli
out
mov
icebp
inc
xchg
mov
or
cmpsl
iret
jg
sub
pop
leave
add
mov
xchg
fsubs
xor
pop
push
inc
xchg
inc
inc
mov
testl
jmp
cmp
out
add
or
adc
xchg
in
xor
cmp
sub
jmp
dec
push
lock
subl
sbb
push
mov
aaa
inc
jb
mov
into
or
scas
xor
dec
cltd
pop
jg
nop
das
sbb
ret
clc
fisttpll
hlt
test
pop
jns
add
stc
mov
lret
mov
js
inc
push
dec
js
push
sub
jno
mov
mov
mov
jno
jo
leave
xor
push
fidivs
test
icebp
push
pop
xchg
je
cmp
pusha
fldl
sbb
aaa
dec
lea
pop
std
mov
rcll
rclb
stos
add
mov
lods
dec
mov
push
mov
xor
and
and
test
addr16
adc
lock
add
dec
xor
lds
fisubrl
rcl
scas
push
sbb
xchg
mov
ja
mov
test
shll
mov
mov
dec
stos
cmp
idiv
not
gs
push
add
loope
inc
jle
in
cmpsb
push
fimull
jns
scas
inc
mov
mov
nop
scas
nop
aaa
insb
pop
sub
jb
mov
jmp
add
or
jmp
repnz
lahf
jecxz
and
fnstenv
out
mov
addb
and
cmp
stos
ja
cmpl
mov
xor
xor
outsl
scas
xor
inc
jae
out
mov
dec
dec
enter
pop
mov
mov
mov
dec
mov
mov
sub
sbb
cli
xor
push
daa
out
repz
int
pop
movl
or
int3
mov
pop
js
jnp
cmp
mov
fs
and
int
lea
xor
dec
push
mov
shl
mov
cmpsl
hlt
push
insl
mov
arpl
jle
jno
mov
imul
lock
fs
cmp
xor
aaa
mov
mov
cmp
mov
jo
arpl
mov
pop
outsb
test
outsl
dec
out
xor
or
inc
inc
cmp
push
inc
sub
pop
repz
inc
xchg
daa
xlat
rolb
mov
cmp
xlat
hlt
inc
dec
repz
mov
scas
cmp
mov
insl
mov
mov
xchg
dec
repz
cmpsl
test
ret
sub
pop
mov
sub
adc
ret
dec
rcrl
sbb
arpl
pop
in
push
dec
xor
sub
jbe
inc
fsubrl
add
mov
pop
add
add
les
xor
mov
adc
inc
push
add
sub
lcall
cmp
mov
aas
pop
test
inc
mov
in
cs
jo
inc
insl
shl
xchg
fnstcw
mov
cmpps
push
mov
leave
jae
jnp
jo
pop
stos
call
cmpl
ja
repnz
aad
popl
nop
mov
aaa
xchg
je
dec
mov
add
std
jp
dec
hlt
pop
pop
icebp
scas
add
dec
sub
data16
dec
mov
out
mov
test
test
mov
roll
les
mov
cmp
cmpsb
xchg
idivb
sub
xor
inc
mov
mov
mov
push
add
js
int
jg
push
insl
jge
mov
into
cmp
add
adc
imul
mov
rcl
int3
dec
sub
push
xchg
pop
mov
adc
cmp
mov
mov
das
mov
jmp
fbld
pop
cmc
sbb
and
sbb
adc
repnz
pop
inc
cltd
mov
lock
lahf
push
pop
mov
xchg
pusha
pop
mov
roll
xchg
xchg
jmp
push
adc
mov
mov
addr16
jns
jns
pop
nop
push
push
cwtl
cmp
outsb
add
adc
test
add
jnp
inc
and
enter
rcll
cmpb
mov
add
dec
shrl
in
or
mov
shlb
hlt
fdivs
stos
imul
shll
lret
arpl
lret
mov
xor
data16
jecxz
sti
outsl
int3
sarl
xchg
and
cld
fnstcw
jl
cmpsl
adc
sbb
mov
std
cmpsl
mov
pop
inc
ret
add
fwait
adc
pop
out
in
add
push
test
sub
cli
loopne
or
das
je
push
outsb
jo
xchg
sbb
dec
mov
add
adc
out
xchg
pop
out
and
hlt
or
popf
aad
push
and
sbb
jne
inc
in
jle
push
inc
xchg
jp
ret
mov
outsb
mov
xchg
mov
movsb
nop
adc
out
mov
aad
pop
jmp
jae
cmp
fmull
dec
sub
je
dec
ss
shl
andl
ja
daa
mov
mov
insb
xor
push
jl
mov
shl
mov
es
hlt
shl
cmp
movsb
enter
cli
leave
sub
jbe
or
imul
scas
or
cmpsb
lret
pop
fisttps
xchg
jle
lea
fistps
jl
pop
cmp
dec
sub
cmp
cmp
in
out
rcll
xorb
ret
sbb
lods
iret
dec
insl
cmp
out
xor
inc
enter
mov
outsb
xchg
mov
in
mov
jg
insb
fadd
xchg
dec
ror
adc
xor
pop
mov
xor
leave
xchg
xchg
pop
jo
lods
or
jbe
pop
fcoml
push
pusha
xor
and
sbb
sub
rorl
ja
lahf
mov
rcll
pusha
pop
mov
decb
sahf
es
and
mov
mov
or
mov
divb
jno
popf
or
repz
test
sub
fbstp
popa
stos
lcall
sub
call
enter
repz
sbb
pushf
or
daa
sub
mov
popf
lea
mov
lock
push
xor
sbb
shrl
sub
je
gs
lahf
and
inc
pop
mov
dec
imul
pop
lock
loopne
cld
sbb
ret
sub
movsb
rorl
xlat
je
es
sbb
mov
in
pop
addr16
out
aad
xor
cmp
data16
shrl
dec
add
loope
pop
fmull
pop
lahf
jp
push
xchg
popa
repnz
insb
mov
adc
jbe
aaa
jp
cmpsb
insb
mov
xor
mov
in
pop
jb
cmp
jecxz
mov
stos
sbb
leave
shlb
xor
push
faddl
enter
je
push
std
mov
mov
std
mov
or
xchg
jg
adc
ljmp
sub
ja
repnz
mov
push
out
or
push
repz
pmaddwd
cmp
addr16
pop
or
jb
shll
rcll
jb
xor
push
iret
sarl
mov
outsl
or
jae
outsl
jl
imul
imull
push
add
jle
cmp
sub
lcall
add
jb
roll
and
addr16
icebp
add
sbb
xchg
mov
xchg
xchg
push
xlat
dec
cmp
mov
mov
cmpsl
sbb
pop
fistpll
cmp
enter
icebp
adc
or
jne
outsl
xorl
mov
push
icebp
jae
push
xchg
cmpsb
iret
dec
sti
or
push
repnz
mov
dec
into
arpl
dec
inc
or
fwait
xlat
xchg
xlat
iret
repz
mov
dec
add
cmp
addr16
ja
pop
push
jmp
adc
fnstenv
xor
aad
imul
fcomi
push
icebp
out
mov
push
pop
mov
lahf
push
pop
addr16
inc
inc
and
cmpsb
jo
pop
sbb
divl
shr
repnz
mov
shl
scas
mov
dec
orl
push
jmp
sarl
out
pop
pop
fistps
dec
or
inc
jl
imul
cmpsl
jmp
cmp
fsts
xchg
adc
xlat
iret
cmp
or
jb
in
push
imul
into
fwait
stos
push
icebp
inc
mov
dec
out
or
push
idivl
ljmp
addr16
addr16
jb
shll
fwait
punpckhdq
cmpsl
xadd
jmp
loop
sbb
xchg
cmpsl
xchg
mov
pop
mov
out
addr16
iret
testl
daa
dec
pop
push
cmp
push
push
dec
mov
xchg
ds
jnp
push
notl
mov
inc
or
inc
xchg
and
push
dec
ret
jb
sar
xchg
fwait
xchg
push
icebp
mov
dec
mov
mov
xlat
inc
pop
and
push
pop
aaa
or
jb
sarl
cmp
addr16
dec
lret
or
add
pfrsqrt
and
sbb
pop
iret
inc
or
jb
shrl
fwait
add
icebp
cmp
scas
dec
imul
pop
lahf
jmp
fiaddl
fnstenv
xchg
ja
xlat
xchg
cmp
out
iret
fistpll
pop
pop
ret
push
icebp
sti
mov
dec
dec
or
push
mov
mov
jle
cmp
push
lock
dec
es
push
add
rcrb
jmp
adc
fldcw
or
xlat
fstpt
pop
leave
rcr
fbstp
icebp
xchg
mov
dec
push
or
jl
imul
pop
aaa
jmp
scas
inc
or
jb
sarl
cs
dec
mov
dec
jecxz
fists
ret
mov
push
fcmove
mov
dec
arpl
pop
push
inc
mov
xchg
add
jmp
jle
cmp
pop
repz
outsl
sbb
iret
jb
shl
sahf
fwait
fwait
push
icebp
mov
into
push
cmpsb
xchg
lahf
push
mov
jecxz
pop
stos
mov
iret
prefetch
sbb
xchg
jb
rorl
push
mov
dec
xchg
or
push
mov
jmp
xor
inc
iret
arpl
jb
sarl
fwait
pop
push
icebp
movswl
cmpsl
add
push
ret
jmp
xchg
inc
out
xchg
lahf
pop
xlat
dec
cmp
iret
mov
outsl
jb
rorl
inc
fwait
daa
jbe
inc
xchg
jo
dec
repnz
push
icebp
stos
mov
dec
orl
push
jmp
xlat
jl
imul
pop
je
or
dec
iret
ja
arpl
pop
push
jb
rorl
fwait
outsl
push
icebp
pop
mov
rclb
jmp
lcall
ja
push
cmp
mov
xchg
or
jb
ret
pop
and
sbb
add
push
pop
cmpsl
jmp
push
inc
fldenv
add
xlat
lret
cmp
psrld
lret
mov
dec
ja
imul
mov
mov
outsb
testl
nopl
jb
shl
sahf
fwait
fwait
push
icebp
mov
rclb
mov
push
aas
sub
push
iret
xor
pop
push
push
ljmp
clc
ret
jge
push
dec
xor
mov
or
push
in
xchg
cli
fisttps
sahf
inc
add
xorl
xor
lcall
movsb
into
xchg
xchg
xor
dec
lea
mov
push
rcr
mov
into
lahf
xchg
sbb
and
or
mov
out
outsb
mov
cli
rorl
andl
push
and
cwtl
fbld
mov
adc
rol
repnz
in
loope
lret
outsl
repz
cmp
xchg
jecxz
movsl
jl
inc
stos
pop
mov
fwait
les
negb
imul
aas
iret
js
sbb
scas
fs
xchg
data16
and
loopne
adc
jl
sbb
rorl
dec
in
cltd
int
sub
pop
xchg
bound
or
inc
roll
jmp
into
or
cmp
stos
dec
and
and
lods
sbb
mov
jne
in
inc
test
xor
and
stos
jg
pusha
lret
das
and
icebp
lret
in
mov
pop
sbb
dec
js
ret
imul
call
xor
xchg
out
or
cmc
jecxz
lret
es
sbb
push
xor
ljmp
rorb
int
sbb
imul
iret
lea
lods
outsb
fs
mov
js
aaa
fs
fidivl
or
xchg
inc
ljmp
adc
aad
inc
test
mov
adc
dec
hlt
js
push
or
jecxz
dec
sub
add
iret
mov
lahf
pop
push
addr16
dec
ja
cmp
inc
jo
dec
sbb
pop
lahf
push
jp
test
jecxz
outsl
cmp
or
sbb
adc
pop
movsl
mov
xlat
fwait
daa
sub
outsb
sbbb
sbb
lret
adc
lret
mov
dec
stos
out
popa
bound
pop
lcall
or
pop
jl
lea
jae
mov
cmc
andl
scas
xor
das
dec
lcall
cmp
out
subl
inc
sahf
shlb
push
pushf
pushf
rolb
and
das
mov
mov
ret
jns
adc
cli
popa
inc
push
mov
sbb
add
sbb
loope
out
dec
ret
jnp
inc
sbb
lods
lahf
loope
cmp
bnd
lahf
push
jmp
iret
imul
fistps
call
mov
sub
pop
test
loopne
sbb
mov
xchg
inc
pushf
and
jecxz
xchg
jmp
dec
sahf
push
mulb
inc
mov
movsb
out
mov
insl
push
dec
clc
xor
std
adc
inc
sahf
mov
xor
pop
pop
daa
sbb
lods
rcrl
and
faddp
mov
lahf
xchg
loopne
hlt
dec
cltd
or
xor
adc
mov
fistpll
sub
int3
cs
mov
test
ficomps
call
icebp
mov
mov
lret
pushf
sbb
ret
push
lret
lock
fisttpl
inc
xor
fisttpl
jp
xchg
xor
adc
pop
jle
sti
repnz
mov
cmc
insb
and
lret
jg
lods
mov
mov
jp
stos
pop
xchg
push
adc
mov
dec
ss
jle
js
sbb
add
repnz
into
inc
push
repnz
jbe
js
daa
sti
sarl
push
or
xchg
jo
adc
and
lods
mov
lods
pop
sahf
lock
andl
sub
xor
arpl
sbb
bswap
pop
dec
add
mov
cli
das
push
pushf
pop
xchg
pop
fists
into
data16
leave
xchg
sahf
pop
bound
pop
mov
sti
popa
cli
jno
jg
sbb
inc
push
mov
outsb
imul
shl
dec
fistl
xchg
push
int
lcall
inc
out
fwait
mov
dec
xchg
hlt
imul
mov
xchg
jp
clc
xchg
test
adc
push
jp
adc
std
jns
xchg
jnp
inc
lahf
push
nop
mov
push
pop
sub
mov
sbb
xchg
push
mov
dec
ret
jns
xchg
adc
pop
sbb
into
or
push
pushf
jle
aaa
stos
push
jne
popa
mov
push
push
outsl
test
mov
mov
pop
bnd
test
push
ss
inc
xchg
pushf
jnp
jl
sbb
mov
mov
repnz
mov
inc
insb
inc
dec
out
fisttpl
test
jmp
das
int3
ss
mov
adc
or
inc
pop
push
xchg
inc
lcall
mov
loopne
pop
or
jno
mov
jae
inc
sub
dec
fucomp
mov
scas
mov
std
mov
subb
leave
mov
mov
sub
sbb
in
loopne
es
mov
adc
jge
mov
cli
sahf
xchg
jns
push
or
mov
xor
pop
movsl
adc
add
xchg
enterw
call
inc
cmp
dec
jle
imul
ficoms
jmp
in
test
bound
loope
out
in
outsl
out
jno
cmpl
mov
mov
lret
incb
cs
fwait
jb
jg
insb
mov
fwait
inc
mov
mov
xchg
out
mov
cltd
js
or
push
adc
sti
push
sbb
dec
push
stos
in
mov
aas
jno
cmpl
cmp
test
rcrl
xchg
jle
jns
dec
jb
iret
pop
ljmp
jne
xor
mov
mov
mov
jmp
lcall
adc
int
sbb
xchg
idivl
inc
cmpl
mov
dec
and
add
ds
cli
mov
sub
mov
sbb
adc
adc
sbb
stos
sbb
leave
test
outsb
mov
nop
mov
inc
inc
fdivrs
sti
scas
bound
mov
jl
inc
adc
aad
cli
stos
int3
jp
es
testl
mov
xchg
mov
push
pop
sub
or
inc
push
push
xorl
xchg
jae
push
leave
jp
push
test
ss
fstpt
cmp
push
andl
mov
jno
fcoms
pushw
and
sbb
sub
insb
bound
div
out
lea
pop
jecxz
jecxz
cli
jmp
adc
jae
pop
in
mov
cs
xor
xchg
push
cwtl
cmpsb
sub
sub
cmp
xor
insb
push
pop
cltd
jg
fidivrs
shll
jg
mov
jne
in
xchg
mov
mov
aad
mov
addr16
lcall
insb
push
push
or
mov
addb
popa
inc
xchg
mov
data16
sbb
xchg
pusha
pop
cmp
pop
pop
jbe
and
fcmovne
push
mov
xchg
cmp
loopne
mov
push
mov
movsb
xor
xlat
push
int
xchg
lds
lea
push
lock
adc
inc
add
add
scas
jge
xchg
jnp
lea
inc
fwait
mov
add
xor
lahf
lahf
bound
movsb
dec
addr16
push
nop
arpl
xchg
js
push
sbb
pop
mov
aaa
aad
cltd
add
inc
enter
fimull
inc
ds
jg
repz
in
jmp
mov
inc
popf
addr16
cmpl
addb
std
fisttpll
ficompl
adc
cwtl
scas
add
adc
cmp
loop
mov
jle
pop
std
mov
push
and
cwtl
mov
sbb
imul
cmp
add
sti
jns
loopne
push
push
test
jg
sbb
mov
adc
xlat
stos
call
roll
mov
fists
fwait
sbb
int3
cwtl
mov
ficoml
mov
lods
mov
iret
fs
xchg
xchg
rcrb
iret
arpl
pop
cmpsb
subb
loopne
jecxz
xchg
mov
jle
jne
nop
imul
xchg
fadds
lahf
sub
xchg
out
pop
fnsave
ret
fbstp
adc
pop
mov
fldt
add
xor
mov
out
add
hlt
ja
stc
ja
pop
fldl
out
arpl
mov
aas
imul
out
push
fbstp
push
push
aad
loop
xchg
shl
arpl
daa
lcall
pop
filds
xor
cli
jmp
xchg
push
jmp
jle
cmpsb
add
cs
shr
daa
sub
ljmp
xlat
call
xlat
dec
xchg
bound
inc
or
mov
mov
mov
mov
or
loop
jp
mov
xchg
push
inc
insl
xor
pop
mov
inc
lahf
xlat
push
stc
sbb
xchg
inc
pusha
jmp
ja
lods
dec
shrb
xorb
mov
sahf
inc
fs
jne
cltd
cmpsb
xchg
popa
ljmp
in
rol
xor
insl
out
insl
stos
push
pushf
dec
pop
inc
bound
xlat
xchg
ljmp
orb
xchg
test
mov
jecxz
cwtl
aaa
pop
ficompl
enter
scas
sbb
push
ja
xchg
mov
inc
mov
sbb
flds
aaa
cltd
xor
xchg
arpl
mov
mov
mov
outsl
test
test
in
or
jle
adc
push
mov
in
jno
jne
add
jnp
jo
mulb
jl
out
fldt
jbe
push
pop
cmp
dec
inc
sub
cmc
sub
inc
mov
aad
sbb
int3
adc
dec
jnp
call
btr
jae
fstpt
or
lret
dec
test
push
mov
lods
arpl
sub
xor
cli
lret
pop
out
xor
nop
popa
inc
pop
movsl
add
jg
dec
pop
je
inc
jecxz
loopne
or
aad
aas
in
mull
mov
jge
aad
add
push
out
mov
mov
in
jle
jl
jp
rolb
sbb
mov
sbb
or
cli
push
mov
jle
or
push
andb
pop
ljmp
dec
mov
push
dec
hlt
into
imul
fistpll
push
ret
je
rcrl
mov
cmp
pop
int
ret
push
push
inc
mov
popa
mov
popf
clc
popa
popa
mov
mov
leave
lret
push
pushl
repz
and
sahf
aaa
xorl
out
push
test
sbb
mov
push
push
ja
pop
inc
clc
sbb
push
sbb
cmp
push
imul
addl
out
enter
pop
sbb
mov
jb
ret
mov
mulb
out
inc
jbe
fidivrl
lret
test
dec
xchg
jns
rcr
mov
test
jmp
jle
jge
mov
push
push
push
fcmovnb
jge
xchg
aas
push
pop
aas
mov
orb
mov
clc
push
dec
fwait
aaa
and
add
mov
mov
jns
and
aas
subl
xchg
pop
test
xlat
mov
imul
xchg
insl
inc
sbb
mov
xchg
adc
inc
pop
rorb
out
shr
pop
push
mov
ret
fistpll
adc
ljmp
fists
into
sub
pushl
push
xchg
je
fstpt
cwtl
mov
es
mov
xchg
jl
lret
and
push
outsl
inc
dec
xor
adc
xor
aas
nop
mov
sbb
lods
fbstp
jecxz
jae
iret
pop
push
lods
dec
inc
pop
stos
in
xchg
mov
nop
inc
vmulps
adc
adc
mov
dec
mov
leave
movnti
jmp
push
lret
push
adc
test
inc
out
test
and
imul
jnp
dec
arpl
xchg
stc
mov
lret
or
mov
sahf
cmp
leave
jg
fstps
xor
bound
adc
push
inc
fwait
lcall
push
cmp
mov
jmp
xchg
aam
lahf
add
cs
and
loopne
out
lods
push
cmp
push
cld
je
jle
add
ja
aad
gs
js
jle
arpl
mov
or
rcl
jp
push
js
cmp
xchg
or
pop
adc
sbb
je
push
ret
out
xchg
cmp
lret
fistpl
xchg
aaa
fistpl
enter
subb
out
jge
and
pop
dec
pop
cwtl
cmp
dec
cmpb
jbe
sub
jl
pop
lret
rorb
movb
mov
mov
cvtps2pd
popf
fimuls
mov
pop
call
pop
add
add
or
push
xchg
outsb
movsb
or
out
cli
nop
outsl
dec
jg
outsb
das
inc
adc
iret
mov
orl
push
fcmovbe
cmp
addr16
iret
prefetch
sbb
out
jb
rcrl
lret
mov
dec
mov
mov
mov
pop
pop
out
mov
pop
out
xor
jl
mov
repz
jo
ficompl
pop
pushf
mov
mov
dec
xor
and
add
push
cli
pop
mov
lret
mov
inc
push
test
xor
es
sbb
addr16
xchg
add
inc
jmp
lret
iret
fiaddl
fnstcw
xor
xlat
fistpll
repz
daa
out
ljmp
repz
xchg
jmp
incb
fxch
xchg
mov
jg
push
addr16
cmpsl
or
jb
shll
fwait
imul
out
iret
jecxz
rcrl
divl
jb
shll
pop
loop
pop
sahf
rcr
fsts
imul
pop
jecxz
inc
xchg
fldz
xchg
xchg
jae
arpl
addr16
scas
or
lahf
dec
mov
mov
dec
pop
ret
jecxz
ret
dec
pop
roll
cmp
push
aas
jecxz
mov
shl
xchg
fwait
out
push
icebp
fwait
mov
dec
inc
or
lock
lcall
fisubl
lret
xor
inc
fistpll
fwait
dec
push
icebp
jnp
adc
or
push
mov
jecxz
pop
daa
in
push
pop
xlat
inc
dec
daa
or
popf
mov
repnz
divl
shr
out
xorl
ss
dec
ja
bnd
mov
dec
mov
mov
mov
cmp
addr16
xchg
out
ljmp
aaa
fisttps
sub
outsb
ds
jl
imul
pop
imul
mov
out
sahf
inc
fdecstp
xchg
mov
xlat
inc
cmp
jnp
stos
or
jb
shll
fwait
outsl
push
icebp
pop
mov
dec
fisttpl
mov
inc
mov
iret
and
add
push
iret
jnp
pop
sbb
jb
shll
ss
jae
push
xchg
mov
jl
imul
pop
daa
jmp
cmpsb
push
iret
jb
shl
loop
xchg
push
icebp
lahf
mov
dec
inc
or
stos
mov
lret
inc
mov
mov
push
xchg
adc
xlat
idivl
jecxz
or
jb
les
jae
imul
or
test
imul
iret
pop
or
jb
shll
fwait
pop
push
icebp
or
dec
xlat
or
out
fdivp
mov
lret
push
icebp
sti
mov
dec
or
ja
addr16
imul
push
jmp
cmp
xchg
arpl
jp
addr16
iret
or
jae
imul
pop
cmp
pop
and
leave
or
pop
jae
sbb
jb
shll
fdivp
push
mov
dec
mov
mov
xchg
mov
xlat
jp
xor
dec
mull
mov
pop
rorl
or
jb
shl
lcall
mov
dec
pop
or
scas
mov
lahf
add
jmp
bound
fnstenv
or
xlat
cmp
pop
call
icebp
lret
mov
dec
pop
or
mov
inc
and
pop
or
jae
push
cmp
xchg
iret
mov
mov
push
rcrl
jb
punpckhdq
cmp
cwtl
fdivrp
pop
cwtl
mov
jl
push
shrb
jne
aaa
jl
xor
xlat
xlat
adc
jno
mov
push
pop
and
pop
lcall
ud2
stos
lds
sbb
iret
imul
lret
pop
mov
sbb
movsb
out
enter
cld
out
pop
jne
int
mov
and
imul
pop
jne
mov
push
aaa
sbb
insb
call
pop
xor
aaa
xor
loop
push
jne
into
int
lcall
adc
push
int3
inc
sbb
adc
sub
int
pop
shr
lock
cmp
pop
fsubp
mov
aaa
sbb
outsl
push
sbb
das
movsb
dec
push
push
mov
mov
inc
pop
pop
fbstp
xchg
jns
sbb
cs
cmpsl
mov
int3
cmc
ljmp
mov
xor
pusha
xchg
into
aas
fiaddl
push
mov
ret
in
enter
pop
push
pop
sub
mov
dec
aas
ret
cwtl
loop
cmp
imul
cmp
outsl
adc
sbb
jmp
jle
sub
push
addr16
adc
jle
push
pop
sbb
out
pop
clc
imul
push
xchg
xor
scas
repz
fcmovu
sbb
daa
mov
pop
pushf
cmp
sbb
insl
mov
cwtl
push
loope
mov
inc
arpl
aas
test
pop
leave
cmp
or
xchg
mov
add
jge
dec
and
jge
jae
xchg
xor
pminub
aas
cmp
xor
dec
xor
mov
fldt
popa
push
cltd
mov
push
in
int
pop
sbb
insl
negl
xor
mov
iret
insl
pop
sbb
cmpsb
push
sub
pushf
iret
mov
mov
repz
xchg
cs
and
inc
xor
insl
jle
jns
inc
test
cli
or
repz
test
lret
add
cli
mov
je
adc
sbb
sti
inc
lret
stos
mov
pop
cwtl
and
ja
ret
repz
push
inc
clc
ss
pop
jp
xchg
dec
xor
mov
out
pop
push
outsl
repz
out
inc
mov
iret
sub
add
pushf
iret
into
cmc
je,pn
dec
outsl
decb
cmp
lret
ss
mul
nop
mov
nop
movl
inc
or
mov
imul
fistpl
adc
dec
push
lret
mov
shl
testl
loop
mov
dec
in
jp
push
repnz
outsl
jbe
stos
push
jmp
int
out
iret
push
loopne
leave
cmp
push
lock
mov
jle
stos
icebp
outsb
cmpsb
cs
push
adc
sbb
aas
out
dec
aaa
jg
xchg
push
bound
and
push
inc
sub
push
sbb
js
add
and
pop
loop
outsl
repnz
cmp
jno
jge
pop
push
xor
cmp
es
mov
aad
pop
ret
dec
mov
mov
jno
lds
mov
daa
dec
divb
jnp
out
mov
fstpl
out
dec
shlb
popf
test
cwtl
ja
fdivrl
inc
loop
dec
adcl
cmp
insl
push
ret
cmp
pop
adc
leave
pop
mov
cmp
rorb
div
repz
adc
or
add
outsl
push
inc
xchg
into
xchg
shll
imul
add
jbe
or
jno
mov
sub
push
cmpsb
cvtps2pi
mov
sub
gs
shll
nop
sub
mov
les
ljmp
xchg
mov
push
pop
push
inc
cltd
aam
aaa
rolb
rol
pop
rcll
mov
cltd
jo
lods
mov
cmpsb
mov
add
call
mov
xor
sti
xor
shll
xor
dec
cmp
sar
and
jecxz
mov
insb
jnp
add
cmpsb
iret
daa
test
mov
jle
repnz
leave
xor
pushf
mov
push
mov
imul
fwait
jno
hlt
fdivrp
stc
push
andb
mov
test
mov
sbb
insb
sub
test
daa
es
dec
adc
nop
mov
sti
aaa
lods
or
in
rorb
sub
jno
push
cli
inc
loop
jno
aaa
mov
dec
lret
xor
rorb
cltd
cltd
outsl
idivl
push
daa
enter
lret
mov
jae
sbb
ret
mov
mov
mov
sbb
fbstp
js
jge
push
sti
out
clc
cltd
mov
outsl
out
lcall
aas
sbb
scas
loope
leave
mov
jb
mov
sub
sbb
pop
jbe
ficomps
cmp
mov
xchg
xchg
pushf
inc
ss
popa
popa
dec
inc
fistl
or
or
dec
dec
mov
adc
inc
mov
test
stos
inc
xchg
inc
call
dec
push
bswap
jle
sbb
into
repz
mov
xor
mov
jae
divl
mov
cmpb
fisubrs
mov
out
xchg
jmp
dec
jbe
cmp
fistpll
add
or
cwtl
push
or
mov
out
sahf
jno
dec
xchg
jl
jl
add
lods
jno
js
xor
imul
cmpsw
ret
fs
repnz
gs
inc
xchg
ficoms
or
movsl
addr16
cmp
and
int
xlat
cwtl
test
cld
jns
adc
aad
mov
sbb
xchg
scas
add
mov
sti
je
jbe
xchg
iret
movb
jns
pop
rolw
push
daa
insb
cmp
sbb
mov
pop
sti
adc
aam
add
cmpsb
rorb
sub
mov
sub
cmp
repnz
push
jb
jg
adc
imul
mov
add
xchg
and
aas
mov
out
test
sub
sub
aaa
fisubs
jns
push
jno
hlt
mov
inc
mov
sub
imul
inc
bound
lret
sub
jb
cmpsb
call
shlb
clc
lds
jns
cmp
aad
pop
mov
pop
inc
and
movsl
jg
xor
sahf
loopne
loope
out
mov
mov
pop
dec
cs
mov
mul
or
inc
cltd
mov
jp
push
popf
data16
push
xor
jmp
lahf
xor
icebp
in
pusha
rcrl
outsb
mov
in
loope
loope
pusha
push
xor
ret
setg
pop
push
mov
sub
jns
adc
inc
inc
inc
or
or
sbb
not
lret
mov
add
ljmp
ja
xor
lea
xchg
mov
mov
inc
xchg
aaa
rcr
test
sbb
outsb
test
xchg
mov
push
cmpb
sbb
sbb
adc
bound
cmpsl
jge
jmp
dec
mov
mov
mov
sub
add
or
dec
mov
and
sahf
into
in
popf
pop
out
mov
cmpsl
fstpt
mov
movsb
popf
or
xchg
mov
xchg
sbb
mov
gs
xor
mov
fdecstp
sti
mov
fdivrl
data16
inc
xor
jp
ja
add
mov
cmpsl
loop
lret
stos
stc
in
dec
push
pop
nop
mov
cmc
test
ret
icebp
and
mov
sub
sub
loop
mov
sbb
int
mov
or
xor
insl
mov
fs
jo
dec
lcall
mov
jns
xlat
ja
stos
pop
jbe
movsl
addr16
ud2
adc
add
fbstp
or
sub
scas
data16
or
jl
bound
pop
jecxz
orl
stos
xor
sahf
test
roll
fldt
or
lret
test
ds
lods
jno
pop
xchg
movsl
mov
and
cli
add
adc
dec
and
pusha
fiadds
and
fwait
dec
push
or
rcl
mov
fisubrs
test
sbb
ljmp
int3
inc
mov
lods
pop
or
sub
not
aaa
scas
ljmp
jmp
adcb
lahf
lods
pop
or
ds
mov
bound
das
mov
cmpsl
or
add
xor
loop
es
mov
seta
jp
ret
xor
pop
dec
dec
lock
daa
lcall
mov
sti
repz
xchg
ret
inc
inc
pop
xor
push
les
mov
lret
lret
lods
pop
es
outsl
push
cs
adc
negb
jbe
adc
or
shlb
fmuls
adc
cmc
loopne
loopne
out
adc
out
dec
jnp
test
js
imul
mov
lods
outsb
inc
aad
jp
inc
inc
test
lock
int3
push
decb
jbe
dec
push
inc
ss
xlat
das
pop
or
adc
dec
imul
in
sbb
mov
and
test
das
insl
inc
cmc
mov
and
mov
stos
mov
insb
mov
xchg
mov
push
sti
pusha
jae
das
mov
sahf
icebp
mov
inc
mov
sub
cmp
pop
cmp
ja
ja
sbb
testb
dec
jl
repz
movsl
inc
aaa
loopne
push
lods
push
sbb
mov
and
lcall
jle
adc
repz
mov
pop
out
mov
add
adcb
stc
repnz
pusha
push
mov
sbbl
mov
fwait
out
lret
lcall
data16
scas
xor
mov
dec
mov
int
or
hlt
jne
mov
sbb
arpl
std
cmpb
cmpsb
out
and
pop
adc
jnp
pop
loope
sbb
incl
popf
out
add
es
jae
mov
cmp
test
jne
jle
andb
add
stc
scas
jge
adc
in
int
mov
movsb
repz
add
lods
popf
pushf
negl
outsl
fldl
xchg
pop
out
filds
mov
outsb
inc
cmpsb
int3
lahf
ja
lret
outsl
lcall
jb
mov
sbb
out
jae
js
icebp
xchg
out
pop
out
and
sahf
jbe
iret
aaa
adc
popfw
data16
dec
sub
or
jge
repz
xchg
stos
sti
mov
mov
mov
jns
dec
mov
fldt
sbb
or
outsl
xchg
ret
inc
jg
mov
cmp
cmc
out
scas
xor
stos
xor
cli
fcoml
into
adc
mov
rolb
inc
shlb
imul
xor
jecxz
rcrb
push
jecxz
or
dec
jno
xchg
dec
loopne
stos
push
inc
xchg
ret
mov
fs
loope
push
push
outsl
xchg
cmp
dec
test
cli
pop
sbb
or
xchg
sbb
mov
pusha
jbe
adc
or
xorl
dec
pop
scas
ds
mov
cli
nop
mov
mov
sub
das
adc
mov
xchg
sub
xchg
insl
push
test
push
in
mov
addr16
add
test
fxrstor
sbb
dec
push
xchg
leave
gs
cmp
mov
mov
out
bound
sbb
or
aad
adc
arpl
or
cmp
and
arpl
outsb
mov
orl
pop
push
cli
popa
adc
adcl
dec
pop
cs
movsb
mov
jmp
push
je
aam
fisttpll
movb
cmpsl
push
xchg
mov
push
ja
dec
mov
xchg
into
sub
sub
add
dec
aam
mov
mov
mov
mov
and
cmpsl
jbe
and
push
mov
imul
outsl
sub
xchg
inc
jo
ret
cs
fcoml
add
testl
cmpsb
mov
sub
decl
imul
in
pop
add
push
cli
repz
mov
jge
inc
mov
or
jmp
dec
push
and
andl
xor
mov
mov
add
pop
inc
or
sbbb
pusha
movsl
mov
sbb
or
push
mov
pop
push
scas
jle
jbe
or
push
mov
fstpt
xor
adc
fildll
mov
cmp
xchg
and
fcmovu
pop
scas
lock
pop
jae
fimull
in
outsl
adcb
dec
stos
mov
dec
stc
push
inc
mov
or
popa
es
inc
xor
stos
dec
pop
sub
add
mov
pop
jae
std
dec
jecxz
cmovb
cwtl
push
in
inc
jle
popl
or
inc
sbb
mov
cmp
or
dec
pop
mov
lock
ret
pop
outsl
inc
mov
out
or
stc
push
insb
inc
dec
pop
jo
jl
sarl
mov
sti
add
pop
sub
and
and
xor
subl
test
lcall
call
push
jne
jge
int3
cltd
test
mov
stos
push
cmp
add
test
sbb
xchg
cltd
test
das
cmp
sbbl
xlat
rol
xchg
outsb
mov
out
loop
jb
flds
fwait
pop
nop
push
add
nop
dec
sti
movsb
decl
xchg
gs
push
mov
aaa
push
fwait
stos
pop
loop
fnstenv
jno
xchg
jg
nop
in
shll
fistps
pop
cmpsb
mov
mov
sub
sub
jno
shrl
pop
sbb
sti
dec
mov
sub
mov
dec
dec
jns
mov
imul
or
dec
aam
lss
fisubl
pop
push
inc
sarl
mov
ljmp
ficoms
cmp
jbe
mov
es
into
cmp
popf
ds
out
cs
sti
negl
or
xor
mov
mov
btcl
push
stc
pop
andb
pop
je
movsb
jmp
mov
cmc
mov
stos
mov
andb
xor
lock
mov
pop
es
mov
iret
outsl
mov
xchg
pop
or
inc
add
prefetchw
mov
and
cmpsb
sti
and
push
sahf
xor
cmp
dec
mov
fildll
cltd
es
cmp
inc
push
int
cmpsl
in
mov
pop
iret
mov
bswap
lret
inc
out
add
out
scas
jo
mov
movsb
dec
bswap
adc
fnsave
test
fcmovnbe
mov
xor
cmp
inc
in
scas
mov
pop
lret
test
outsb
add
repnz
stos
jge,pn
imul
movl
push
stos
pop
jo
xorb
mov
jne
dec
xorl
adc
add
inc
mov
in
adc
aas
pop
push
lcall
pushf
xchg
jbe
sub
inc
hlt
add
sub
imul
iret
mov
iret
data16
pop
into
mov
adc
sbb
imul
ret
insl
fisubrl
pop
fimull
outsb
cmp
sbb
jo
jmp
xchg
stos
jae,pt
jb
je
imul
cmp
sbb
or
aas
scas
mov
fildl
enter
pop
pop
lods
leave
cmc
mov
mov
pop
inc
xchg
nop
sbb
xchg
push
in
pop
jmp
testb
rcll
and
or
call
and
call
xchg
xlat
cmp
scas
add
jnp
pop
mov
sub
mov
push
mov
daa
jno
and
push
jae
fldenv
or
adc
cltd
dec
mov
sbb
sbb
idiv
inc
in
mov
jne
dec
jb
cmp
ljmp
leave
xchg
mov
out
scas
stos
mov
mov
dec
gs
xor
or
bnd
sahf
inc
fisttpll
mov
cld
xchg
cmpsb
and
sub
sti
insb
mov
mov
ret
fisubs
and
test
mov
call
or
xor
loopnew
out
inc
out
mov
mov
outsb
loope
out
xchg
cmpb
movsl
test
pop
cld
repz
nop
lret
mov
iret
push
sub
push
adc
test
lcall
cld
inc
lods
and
ret
mov
fimuls
inc
ret
and
add
sub
inc
popf
inc
xlat
or
jmp
mov
movl
call
jne
cli
sarb
lock
test
ds
rolb
jnp
imull
inc
or
cmp
push
push
aad
addr16
popl
add
jl
cli
fwait
mov
das
sub
stos
sub
inc
xchg
adc
adc
and
andb
jno
jp
jg
cvtpi2ps
inc
and
and
mov
cmpb
or
sub
rolb
pop
add
dec
pusha
in
sarb
and
push
pushl
stc
jmp
loopne
jp
xchg
or
into
filds
mov
lea
std
mov
stc
and
aam
add
sbb
in
add
push
testl
sub
and
out
xchg
xor
sub
inc
mov
arpl
dec
adc
sub
mov
sarb
mov
test
pop
popf
pop
fcmovbe
shlb
pop
fwait
sbb
es
xor
pop
push
je
iret
pop
xchg
fidivl
mov
dec
mov
cmpsl
push
xchg
outsb
pop
or
inc
idivl
mov
pop
rcl
dec
daa
or
jb
shl
loop
fwait
push
icebp
mov
dec
scas
or
jl
imul
testl
fsts
sub
xor
into
push
pop
or
aas
xlat
outsl
cmp
pop
iret
dec
or
jb
rorl
fwait
arpl
icebp
pop
mov
dec
filds
ljmp
es
dec
pop
or
push
pop
mov
push
pop
mov
mov
inc
dec
flds
xchg
jnp
xlat
out
cmp
out
iret
fstpt
add
fistpll
dec
pop
or
push
adc
pop
pop
mov
mov
inc
inc
fnstcw
xchg
jnp
xlat
xchg
cmp
ror
repz
jae
div
sbb
cmp
xor
adc
jb
shll
and
pop
mov
dec
orl
push
out
mov
filds
cmp
push
call
fidivs
push
cmp
sub
negl
fld
xchg
mov
jp
addr16
iret
or
jb
roll
inc
fwait
aas
push
enter
icebp
sbb
or
jb
rcll
icebp
mov
into
pop
cmpsb
xchg
xchg
push
mov
mov
jbe
xor
daa
or
fisttps
icebp
lahf
mov
dec
pop
or
stos
mov
fwait
push
pop
jg
push
imull
inc
pop
fnstenv
pavgw
ret
xor
das
push
jp
rol
mov
icebp
jmp
loop
cmpsb
push
dec
jae
arpl
inc
mov
xchg
pop
inc
jmp
push
inc
fstps
lret
xlat
idivl
test
and
aaa
xlat
pop
cmp
pop
iret
inc
or
jb
rorl
fwait
jnp
adc
outsl
mov
dec
iret
or
push
repnz
iret
mov
dec
adc
inc
push
arpl
arpl
pop
stos
jmp
xor
flds
xchg
jg
xlat
xchg
cmp
ror
iret
or
xchg
inc
cmp
fnstenv
inc
es
jl
imul
cmpsl
jmp
cs
dec
flds
xchg
jg
xlat
xchg
cmp
iret
or
fsubrs
ja
fnstenv
arpl
outsl
push
pop
mov
mov
pop
dec
jmp
sbb
fnstenv
xor
xlat
fstpt
repz
daa
xor
mov
lret
mov
dec
outsl
or
jg
pop
jl
imul
push
jmp
add
fsts
xchg
outsl
ret
xlat
jecxz
sarl
jcxz
ret
or
sbb
imul
sbb
xchg
jb
roll
shl
scas
mov
dec
xchg
mov
xchg
mov
lret
jbe
psubsw
and
dec
and
jb
rcll
icebp
mov
dec
mov
mov
outsb
pop
pop
jmp
push
inc
sub
cmpsb
lret
push
aaa
imul
pop
out
sahf
notl
fld
xchg
mov
cmpl
lahf
iret
or
jb
rcrl
jb
or
icebp
cmp
inc
push
fcompp
mov
addr16
push
pop
or
push
imul
rcrb
jmp
ss
jae
or
cmp
pop
aas
jb
ret
in
add
adc
addr16
iret
pop
or
jb
rorl
push
mov
dec
mov
stos
push
xchg
mov
filds
cmp
push
std
ds
lds
jb
sar
xchg
fwait
out
push
icebp
lahf
mov
dec
inc
or
push
mov
xchg
ds
jg
push
notl
mov
inc
pop
flds
aas
repz
das
cmp
mov
in
push
xchg
repz
xlat
sbb
push
iret
ja
arpl
inc
cmpsl
jb
rcll
fwait
inc
push
icebp
ja
push
fwait
cmpsb
mov
push
sti
mov
negl
shr
fbld
cmp
and
add
jb
rorl
icebp
scas
mov
dec
or
jl
imul
pop
pop
jmp
push
imul
rol
mov
fwait
jmp
loop
fwait
mov
dec
inc
or
push
mov
xchg
ds
jnp
adc
addr16
inc
pop
fnstcw
aaa
not
push
imul
fcmovnu
push
icebp
iret
mov
dec
or
ja
addr16
imul
pop
jmp
or
fstps
xchg
sbb
xlat
repz
call
sub
ljmp
cmpsb
sub
inc
push
arpl
imul
push
jmp
ds
jnp
adc
cmp
out
iret
fistps
cmpsb
ret
repnz
repnz
out
sahf
rcrl
ret
mov
dec
mov
mov
outsb
pop
pop
jmp
push
xor
sqrtps
repnz
inc
jmp
loop
fwait
push
xlat
ja
addr16
addr16
push
or
jb
sarl
fwait
imul
sbb
dec
lret
or
push
fnstcw
pop
cmp
inc
iret
arpl
jb
shrl
ss
dec
mov
dec
jmp
lret
push
sti
mov
repz
aas
cmp
xor
outsl
or
jb
shrl
cmp
jae
or
or
push
repz
repz
icebp
xlat
negl
addr16
xor
jb
roll
lret
mov
dec
mov
mov
mov
jbe
btr
aas
fsts
ds
ret
fistpll
icebp
out
mov
dec
jae
arpl
inc
mov
xor
jmp
push
inc
sbb
jb
or
xlat
cmp
add
push
icebp
iret
mov
dec
outsl
or
jg
pop
jl
imul
mov
mov
inc
inc
flds
xchg
jnp
xlat
xchg
cmp
iret
or
jae
fisubrl
daa
push
pop
mov
inc
out
pop
mov
idivl
fldcw
xchg
dec
mov
jp
addr16
iret
sti
or
jb
les
cmpsb
movsb
divb
xchg
out
mov
dec
dec
or
pop
mov
xchg
add
jmp
bound
fnstenv
or
xlat
ret
cmp
ljmp
icebp
idivl
dec
imul
push
ja
addr16
imul
pop
jmp
add
fsts
xchg
outsl
ret
xlat
cmp
out
iret
fbstp
pop
xor
das
jp
addr16
iret
addr16
jb
shrl
add
jg
push
out
cmpsb
lret
dec
testl
idivl
pop
pop
xchg
fistl
xlat
das
jp
addr16
outsl
or
jb
sarl
sub
inc
mov
dec
fwait
or
jl
imul
pop
sub
cmpsb
jg
or
cmp
jb
rcll
icebp
mov
into
pop
cmpsb
jnp
stos
or
jl
imul
testl
fsts
add
mov
aad
es
sbb
jb
rorl
fdivp
push
mov
dec
xchg
mov
xchg
mov
fisttpl
sub
cmpsb
rcll
daa
jl
imul
pop
sub
divl
xchg
pop
xchg
xlat
mov
cmpsl
jp
addr16
xchg
or
jb
sarl
push
fwait
sub
sarb
aas
imul
pop
jecxz
sahf
notl
fsin
xchg
mov
xlat
pop
cmp
xchg
iret
mov
mov
push
rcll
outsb
fwait
pop
push
icebp
aaa
mov
dec
sub
inc
sbb
sub
cmp
pop
lahf
jmp
add
pop
scas
aas
or
hlt
push
or
popf
lahf
dec
cmpsb
test
lret
cwtl
cwtl
insb
sbb
mov
push
and
icebp
insl
push
inc
inc
jns
jno
daa
test
dec
dec
pop
cmpsb
lods
push
fistps
xorl
mov
negb
fisttpl
repz
dec
cltd
dec
push
dec
fneni(8087
pop
call
fadd
inc
adc
xchg
aas
xchg
xor
daa
push
leave
cmpxchg
or
jg
jb
pop
sub
and
jae,pt
cmp
jmp
fstpt
sahf
xor
jbe
push
jle
imul
jb
xchg
cmp
test
sbb
jecxz
dec
jg
add
or
test
push
mov
mov
lret
cmpsl
jbe
pushf
and
ret
sub
mov
ja
inc
test
push
mov
xchg
mov
mov
push
mov
fistpll
push
jmp
mov
xor
add
daa
imul
rorb
arpl
xchg
push
inc
pushf
hlt
and
lods
push
sbb
mov
or
es
orl
sbb
jmp
inc
mov
jecxz
inc
mov
test
sub
mov
pop
ja
popa
dec
jle
mov
cmpsb
mov
xchg
into
add
xchg
adcb
popa
xchg
aam
mov
ret
outsb
mov
cld
cmp
add
shrl
jecxz
or
ds
cmp
sbb
dec
dec
or
adc
loop
xchg
imul
dec
shlb
xchg
sub
aaa
mov
xchg
adc
pusha
aaa
lock
fwait
mov
jle
and
or
mov
call
rolb
ljmp
dec
jmp
mov
mulb
in
jge
loope
mov
bnd
daa
mov
mov
popf
rcll
mov
addb
mov
or
xor
out
cmp
jne
insl
inc
push
int
adc
mov
pop
push
xchg
pop
nop
mov
stos
mov
int3
sahf
xlat
mov
or
ds
mov
fstpt
mov
dec
lea
xchg
cli
jmp
nop
xor
rdtsc
ret
mov
xchg
mull
mov
jmp
push
imul
lret
addr16
vpxor
scas
arpl
pop
or
test
mov
mov
rcll
lods
lret
ret
xchg
ret
dec
cmpsb
push
fs
mov
jmp
aas
lahf
jmp
dec
and
mov
ret
mov
and
je
addl
adc
dec
daa
std
push
xor
xchg
loopne
fcmove
sub
mov
push
push
movsb
pushf
idivl
fildl
push
pop
jnp
dec
lcall
inc
inc
pop
and
clc
popf
inc
fistpl
and
daa
xchg
addr16
or
stos
mov
xchg
gs
repz
inc
dec
push
inc
fwait
jns
daa
pop
clc
and
push
inc
scas
push
jle
lret
cld
shufps
cmp
xor
mov
xchg
push
testl
sub
jge
mov
and
out
cmp
ds
out
cmp
xchg
loop
push
hlt
subb
aaa
bound
stos
cmp
push
out
sbb
mov
je
cmp
popf
push
aas
cwtl
add
daa
mov
aaa
test
dec
pop
xor
aaa
mov
rcrl
pop
aas
clc
lret
neg
inc
xor
fiaddl
rorb
fistpl
repnz
push
sahf
sti
subl
movsl
and
xchg
aaa
mov
sbb
jge
push
sub
imul
xor
cmp
cld
enter
test
or
arpl
push
jns
fistl
add
mov
aam
mov
add
jnp
std
mov
test
pop
xchg
adc
jecxz
daa
nop
push
ss
cmpsl
ds
sbb
dec
sbb
push
push
cmpb
dec
inc
outsl
nop
or
test
push
data16
cli
dec
fninit
and
cmpsb
push
cld
stos
pop
jnp
or
lret
and
fists
pop
cmp
adc
iret
inc
imul
push
repz
adc
xchg
fisubs
fwait
popf
mov
dec
stos
mov
sub
stc
cs
mov
imul
shll
sub
jg
mov
setae
nop
adc
xchg
push
mov
lahf
int
jle
xlat
jmp
dec
mov
lods
jne
push
jno
je
fisttps
mov
xchg
cmp
sbb
call
push
jle
xchg
pop
fiaddl
aas
test
movsl
arpl
leave
xor
outsb
push
int
xor
xor
data16
imul
into
xchg
mov
bound
repz
push
jne
cmp
jle
rorl
push
xchg
inc
xchg
inc
mov
dec
or
cs
cmpsl
into
mov
push
push
or
jo
es
icebp
fidivrl
inc
jmp
jne
pop
mov
daa
popf
notb
mov
lret
mov
loope
test
mov
arpl
in
xor
daa
aaa
push
mov
aas
mov
fisubl
ret
dec
pop
or
jnp
mov
ficoms
aaa
cltd
and
cltd
inc
jno
mov
jnp
pushl
push
adc
push
repz
popf
popf
cmp
inc
and
inc
repz
or
xor
push
mov
mov
or
mov
pop
rcl
mov
jne
inc
or
and
ja
add
fs
rcll
sbb
ror
mov
xor
jne
aaa
jge
fwait
add
icebp
mov
enter
int3
inc
test
lcall
xchg
jne
cmpsb
dec
lods
movsb
gs
inc
scas
cmp
daa
sti
lret
movsl
mov
push
popf
shll
movsl
inc
push
in
into
xor
daa
outsb
cs
je
hlt
in
jmp
push
inc
jmp
fildll
inc
test
add
cmc
lret
test
sub
cld
call
stos
sbb
iret
push
pop
cmp
lcall
cmc
push
pop
mov
jmp
add
imul
jns
push
jo
ja
inc
mov
loop
pop
addr16
add
dec
jp
or
ds
xchg
jns
dec
mov
dec
xchg
jp
stos
and
xor
or
cwtl
adc
and
mov
popf
or
out
sub
push
xchg
dec
fucomip
jo
lcall
push
mov
ja
pop
insb
jl
imul
lds
dec
pop
and
aaa
imul
call
adc
xchg
pop
popa
cs
shlb
mov
pop
dec
dec
int
sub
insb
inc
xor
imul
ja
mov
es
cmp
or
hlt
pop
loopne
scas
ds
int3
mov
mov
lret
pop
orb
adc
repnz
pusha
jmp
or
repz
jmp
adc
pop
pop
jg
insl
push
jp
xor
in
fisttps
cmp
dec
xor
dec
cmp
pusha
out
cli
cmp
or
cmp
shlb
lea
pop
out
xor
inc
pop
xlat
leave
ds
push
mov
iret
push
add
adc
fisubrl
outsl
cmp
mov
sub
adcb
mov
mov
divl
mov
push
jecxz
mov
jge
xlat
in
ret
or
xchg
test
dec
stos
mov
ljmp
cmpsl
xchg
dec
cmc
aaa
dec
mov
loope
ret
xor
out
inc
adc
lock
mov
dec
cmpsl
inc
lods
imul
ss
jo
mov
test
or
mov
inc
jmp
lock
sbb
hlt
dec
aad
sti
mov
repz
cmp
dec
cmpsb
shl
adc
mov
pushf
xchg
inc
cmp
fisttpl
mov
sbb
nop
fnsave
aaa
mov
cmp
dec
sbb
adc
mov
aaa
fwait
push
lret
ret
vmovss
pop
out
xchg
push
test
sbb
jp
mov
repz
test
mov
sub
inc
bswap
mov
mov
dec
shll
cmpsb
cmp
jnp
mov
jbe
pop
mov
icebp
movsb
repz
jo
push
data16
ret
jecxz
or
mov
mov
push
stc
inc
sahf
outsb
lahf
imul
dec
sti
out
daa
mull
xor
lods
mov
cld
sbb
sti
stos
xchg
cmp
add
int3
decl
hlt
inc
loope
pop
and
leave
mov
mov
adc
ret
add
popf
push
mov
addr16
mov
arpl
pop
mov
pop
mov
inc
cmp
add
or
aaa
mov
repnz
setae
mov
subps
cltd
inc
cmp
iret
add
mov
stc
loop
sbb
xchg
out
push
push
dec
andb
mov
push
sahf
stos
imul
imul
mov
jns
stos
cmpsb
repz
mov
sub
dec
andb
or
adc
ljmp
jge
test
js
rorl
mov
jbe
push
lahf
push
xchg
ja
dec
ljmp
cmp
pop
or
and
es
ljmp
ds
sub
repnz
dec
sub
out
sbb
popf
xchg
jecxz
data16
arpl
jmp
mov
and
pop
pop
xchg
aad
jp
xchg
push
mov
mov
fistpl
outsb
add
mov
inc
cmpsl
lock
fistl
mov
inc
stos
push
mov
xor
push
les
push
inc
dec
dec
stos
sub
cmp
sub
cmp
mov
andb
xor
xor
add
mov
add
jno
jns
in
sbb
fldt
xor
push
xor
dec
push
cmp
aas
rolb
insb
mov
mov
fidivrs
cmpsb
and
pushf
popa
ljmp
pop
fldt
pop
mov
push
sbb
inc
or
dec
mov
in
jecxz
dec
inc
jmp
dec
pop
dec
dec
mov
push
add
pop
out
movzwl
dec
sbb
mov
push
and
pop
je
hlt
sub
xor
fstpl
ds
daa
rorl
aas
test
inc
dec
aas
mov
jae
loop
push
cltd
cmp
sbb
js
inc
repnz
das
sub
jecxz
out
mov
lret
dec
mov
mov
jo
insb
dec
pop
scas
stc
shrb
fisttpl
insb
lods
sub
cmp
mov
clc
add
and
and
fisttps
hlt
mov
mov
xor
scas
gs
sub
cmp
inc
aam
aaa
push
out
push
repz
scas
adc
popa
ret
lods
loope
ds
xchg
mov
ret
mov
popa
add
sbb
stc
inc
lret
lret
pop
inc
dec
adc
push
or
outsl
push
cwtl
aaa
ret
adc
sbb
in
in
mov
jp
jmp
inc
mov
lds
into
outsl
push
xorb
fcmovnb
testb
dec
mov
and
xchg
pop
je
cltd
in
jp
fisubrl
xor
xor
pusha
into
push
sahf
rcrb
sarl
pushf
sbb
inc
insl
mov
push
lods
inc
mov
inc
andb
imul
movsl
dec
xchg
fwait
lahf
xor
xor
add
cmp
fcmove
push
jno
pop
xchg
jecxz
adcl
mov
daa
dec
inc
mov
inc
pop
fisttpl
xor
fistl
sub
gs
es
pop
data16
adc
stc
lret
stc
adc
ret
stos
popa
cmp
ss
add
jmp
push
sbb
add
jmp
sti
mov
xchg
mov
test
pop
sbb
andb
sub
pop
test
mov
inc
fstpt
cli
mov
arpl
mov
lret
xor
lret
sbb
xchg
xchg
int
push
stos
dec
pop
push
or
leave
dec
mov
pop
loopne
mov
xlat
hlt
or
inc
ljmp
aaa
rorl
aaa
shlb
pop
fcompl
pop
repnz
daa
shrb
dec
nop
inc
lcall
je
pusha
push
sub
fildl
clc
push
out
loop
sarb
enter
cmp
push
mov
repz
dec
addr16
sahf
aaa
sbb
mov
dec
aas
cmp
mov
xchg
sbb
inc
jo
xor
mov
sti
inc
int
ret
popa
xchg
xlat
mov
aaa
mov
xor
fistps
insb
sbb
or
dec
mov
ret
pop
nop
int3
ret
fcomip
sub
mov
lods
out
hlt
bound
adc
fsubp
mov
not
fdivrl
xchg
scas
sarb
test
jae
or
or
lods
es
ficompl
fadds
sbb
mov
xchg
test
insb
sbb
mov
pusha
fists
out
cmp
ret
mull
pop
xchg
aam
fwait
stos
dec
push
pop
dec
in
mov
xchg
icebp
pop
gs
cld
aaa
pusha
xchg
sarl
jne
cli
add
aaa
cmpsb
testl
shr
and
sbb
cmpsb
jmp
mov
iret
push
jle
mov
fisttps
xchg
iret
fwait
jecxz
or
xchg
nop
push
daa
pushf
inc
ret
insl
lcall
aas
ror
jb
mov
sahf
cmp
fisttpl
add
inc
xor
mov
test
scas
mov
pop
jle
inc
adc
inc
lcall
jle
je
mulb
ret
pop
loope
ret
in
lret
cmp
sti
push
jmp
mov
mov
repnz
and
enter
mov
daa
fadd
aas
jge
ss
add
and
fists
stos
popa
inc
xchg
lds
push
and
xchg
filds
fsts
cmp
xor
push
jae
sbb
sub
test
or
rorb
adc
jnp
mov
test
in
dec
sahf
daa
ret
xchg
es
xchg
and
mov
hlt
mov
mov
mov
shlb
mov
mov
push
aas
mov
sbb
xchg
push
inc
dec
int3
dec
mov
scas
dec
add
scas
adc
rclb
mov
stos
out
shrb
dec
push
cmp
dec
mov
dec
inc
aaa
dec
dec
aad
xchg
test
out
popa
mov
hlt
daa
aam
fwait
test
mov
jmp
repz
insb
addr16
sbb
out
mov
dec
ds
mov
pop
mov
xor
test
and
dec
aad
cmc
adc
mov
or
pop
push
repz
mov
mov
push
dec
pop
dec
adc
sbb
cmp
jmp
dec
inc
jmp
add
sub
mov
insb
sub
push
jge
pop
insl
jg
mov
sub
or
xchg
pop
inc
int
jb
xchg
mov
pop
mov
imul
pop
xchg
inc
pusha
sbb
dec
mov
push
cmp
or
push
loopne
sub
out
add
jmp
addl
mov
mov
aaa
pop
or
cmp
insb
fwait
pop
cmp
push
data16
ret
xlat
jp
jmp
or
mov
mov
dec
ja
lret
inc
adc
jns
push
rcll
insl
push
inc
ds
scas
mov
leave
push
cld
addr16
push
xor
mov
dec
adc
cltd
in
mov
sbb
test
movsl
mov
push
xor
mov
xlat
dec
or
das
cmpsb
scas
push
pop
sahf
inc
dec
mov
or
xchg
push
dec
test
sarb
sti
mov
inc
inc
jp
out
jbe
mov
cwtl
push
sbb
adc
lcall
lret
push
push
call
mov
mov
add
and
xchg
mov
ret
dec
jnp
push
mov
xchg
mull
pop
insl
rcr
stos
pop
mov
dec
add
lea
mov
rorl
xorl
cmp
xor
adc
addl
jmp
stc
ja
jnp
movsb
mov
sbb
ljmp
shll
push
xchg
push
out
sub
lret
jecxz
mov
aas
jb
jns
repz
mov
pusha
mov
out
cmp
mov
clc
jecxz
mov
jmp
xchg
cmpsb
repz
sub
aam
popa
clc
ljmp
enter
gs
inc
lds
or
nop
jb
jp
dec
stc
push
nop
inc
inc
or
daa
cmpsl
shr
cmp
dec
test
lahf
aas
lcall
out
outsl
push
add
jnp
inc
fldl
lret
es
jo
push
scas
push
xor
mov
lcall
fimuls
jmp
cmp
icebp
mov
and
jbe
mov
lret
cs
loop
bound
xchg
hlt
sbb
jno
nop
daa
inc
and
fisttpl
fs
daa
scas
cs
mov
lret
scas
adc
loopne
push
xchg
mov
push
into
jns
divl
test
or
and
addr16
pop
sahf
jp
xchg
push
mov
mov
fsubp
and
loopne
and
cltd
push
outsl
lret
movsb
xor
push
rorl
and
fisubrs
notl
fisttps
in
loop
and
jle
lods
or
inc
pop
adc
dec
clc
inc
inc
mov
jns
and
sbb
push
inc
lods
js
aas
lcall
imul
ret
pop
mov
xor
test
or
push
daa
int
mov
mov
or
jmp
aaa
add
aas
scas
popf
andl
sub
gs
sub
add
pop
or
test
lock
or
jno
mov
orb
inc
xor
push
xchg
sub
ljmp
daa
ret
xor
lahf
cli
ret
rcll
inc
xor
xchg
add
fisubrl
mov
out
or
xor
jge
dec
or
dec
call
inc
repz
jbe
pop
lods
lock
xchg
push
cli
xor
icebp
arpl
adc
dec
jne
sub
divl
jp
add
cmp
dec
jmp
dec
imul
xchg
ljmp
dec
pop
inc
push
popa
out
push
xchg
movsl
stos
xor
dec
pop
jbe
mov
xchg
dec
dec
add
xchg
pop
or
icebp
cli
pop
scas
push
insl
jnp
scas
inc
jno
out
daa
fsubp
nop
daa
mov
xchg
hlt
iret
pop
outsb
call
mov
xor
jp
push
push
xor
xchg
lds
push
sbb
mov
push
pop
fists
fs
push
inc
arpl
mov
jmp
aaa
ja
dec
aas
cmpsl
lcall
neg
xor
add
dec
xorl
jge
dec
ds
fists
jbe
in
inc
lcall
add
notl
cmpsl
xchg
pop
inc
mov
aas
jbe
ja
imul
ja
stos
aas
push
repz
mov
jmp
stos
dec
cmp
inc
sahf
sub
jp
push
mov
std
xor
leave
xor
je
mov
jns
xor
inc
sahf
insb
movl
or
mov
test
int
int3
stos
insb
lret
loop
and
jno
jb
pop
movsl
xor
dec
add
stc
pop
repz
imul
lahf
mov
lea
sub
mov
mov
fwait
ja
fiaddl
aas
mov
adc
insb
popf
lret
stc
ljmp
add
cmpsl
lods
mov
inc
es
mov
mov
lahf
add
stos
cmp
jp
repz
in
add
xchg
je
inc
mov
clc
int
stos
push
mov
jecxz
scas
test
push
scas
push
loope
les
orl
insl
dec
cmpsb
dec
pop
fisubl
push
cwtl
jbe
bound
ja
push
shld
cmc
out
sahf
jecxz
cmpsb
scas
mov
aas
lods
push
enter
hlt
popf
and
fistps
pusha
xor
cltd
xor
push
ss
dec
mov
lret
pushf
lret
dec
cmpsb
lahf
aas
sahf
es
lcall
in
jl
dec
mov
popf
mov
aam
mov
cltd
clc
das
fiadds
cli
lahf
in
xor
ja
dec
mov
sbb
fcmove
add
fists
cld
pop
pop
ss
sub
enter
xchg
dec
sbb
outsl
ret
adc
jg
jne
push
test
pop
jo
jno
pop
and
es
add
out
das
pop
iret
add
fdivrp
insb
mov
stos
lret
adc
aas
mov
jecxz
inc
ljmp
inc
pop
inc
cmpsb
mov
lea
je
hlt
dec
das
test
clc
jo
lods
jmp
or
add
xlat
adc
inc
cwtl
xlat
cs
push
mov
shrl
pop
mov
fwait
push
mov
fistl
clc
push
lds
enter
test
mov
adc
adcb
lock
imul
fs
pop
inc
pop
testl
mov
cwtl
dec
sti
cmpsb
movsl
sub
add
imul
cld
push
stos
mov
adc
pop
pusha
push
test
lahf
sbb
pop
mov
sub
pusha
xchg
xchg
lock
push
mov
mov
pop
aad
add
stos
dec
cmpsb
inc
aad
dec
or
cmc
adc
jb
les
mov
test
cmp
push
sti
mov
mov
xlat
lods
adcl
add
push
pop
aaa
mov
test
pop
xchg
sbb
or
dec
sub
js
xlat
stc
ja
inc
bound
mov
arpl
sub
xchg
das
out
push
shrb
xchg
mov
sub
movsl
xchg
sbb
movl
outsl
sbb
scas
mov
insb
sbb
and
pop
rcrl
cmp
outsl
lret
es
push
cmp
mov
xchg
leave
sub
shlb
or
repz
mov
sub
or
dec
push
add
mov
dec
rcrb
enter
fstl
sub
popf
jecxz
or
mov
push
clc
lods
aad
lods
mov
incb
gs
inc
mov
jbe
cmp
in
popf
loopne
cli
popf
pop
popf
cld
cmp
sub
clc
adc
add
jg
mov
mov
aad
mov
or
lahf
mov
lcall
scas
or
pop
jnp
sahf
adc
aaa
jns
xor
cltd
std
and
adc
pop
pop
push
push
int
jge
adc
mov
push
sti
outsb
jne
mov
dec
sti
push
mov
fisubrl
aas
jg
dec
popf
idiv
mov
mov
jb
push
sub
xlat
jecxz
shlb
notl
dec
dec
sti
daa
mov
add
insb
stos
or
push
ficomps
mov
fwait
push
jb
push
fstpt
lock
and
mov
mov
jns
imul
mov
dec
cmpsb
inc
xchg
and
push
mov
adc
je
mov
clc
pop
loop
jb
ja
adc
bound
movsl
pop
shl
bound
push
mov
xchg
jle
cmpsl
and
mulb
subb
dec
push
ja
xchg
pop
sub
daa
test
int
imul
popa
outsl
cmc
outsl
xchg
adc
outsb
sbb
xor
test
imull
in
jae
or
out
mov
jno
sub
xor
push
int
push
divl
jnp
push
arpl
js
enter
shrl
cmp
mov
mov
mov
push
xor
push
push
sub
push
mov
mov
mov
loopne
xchg
ds
add
je
movsl
sbb
leave
push
lods
fimuls
fst
gs
test
push
sub
inc
leave
out
cmpsl
shrl
cmp
cli
insb
movsb
sbb
arpl
in
insl
jbe
leave
mov
pop
lcall
jns
mov
stc
stos
inc
fstpt
lcall
mov
pop
jl
in
outsb
movsb
or
mov
stos
ret
push
add
sub
xchg
adc
xchg
add
pushf
cmovbe
fildl
test
imul
xchg
mov
adc
dec
daa
mov
lret
mov
jle
paddd
lret
in
shrb
mov
stos
enter
xchg
jmp
mov
fdivs
imul
sbb
loope
cmp
jb
sarl
fwait
push
push
icebp
and
dec
fmull
dec
or
or
int
addr16
imul
mov
mov
inc
stos
push
out
cmpsl
cmp
ljmp
cmp
les
push
icebp
or
mov
sub
and
fldt
mov
ret
aas
push
xchg
scas
lcall
pop
lret
pop
adc
rcrb
in
out
and
incl
adc
fistl
and
mov
insb
sub
imul
jmp
inc
stos
inc
add
push
jp
mov
aam
xchg
int
enter
mov
cltd
cs
int
jae
cltd
arpl
pop
pop
subb
xlat
imul
pop
and
pop
mull
mov
inc
and
push
inc
xor
lock
lds
mov
ret
mov
sbb
cmp
fiaddl
mov
sbb
sbb
or
dec
test
fstpt
mov
xor
mov
cmp
and
xchg
mov
pop
lods
fisubs
jp
inc
lods
fistl
fwait
mov
jmp
jb
imul
pop
pop
inc
sbbl
pop
aaa
cld
outsb
fildll
stc
data16
daa
mov
addr16
push
fistpll
int
addl
jp
xor
mov
notb
dec
cmp
or
add
jmp
pop
dec
pop
ljmp
inc
xor
adc
inc
cmp
lret
jle
push
or
ret
adc
xor
sbb
and
and
arpl
into
jmp
and
rcll
into
push
mov
mov
into
fnstcw
mov
dec
lods
push
inc
xchg
dec
pop
cmp
xchg
es
mov
jecxz
add
jb
stos
push
jnp
rorl
xlat
mov
cmpl
xor
pop
lahf
jmp
dec
stos
xchg
mov
and
ja
mov
sub
jg,pt
or
mov
jmp
jo
sahf
sub
aam
xchg
insl
inc
mov
jno
jnp
xor
push
inc
je,pn
idivl
lar
scas
test
icebp
dec
mov
fisubrl
or
dec
cmp
dec
subl
lds
mov
push
cmp
stos
push
int
rorb
lock
ja
push
or
and
push
mov
mov
push
push
adc
inc
mov
and
dec
addb
push
sahf
ja
aaa
jnp
ficompl
xor
and
movsb
fildl
ret
stos
jg
and
pop
push
mov
ljmp
out
rclb
jecxz
out
adc
mov
repz
shlb
idivb
data16
or
inc
pop
pusha
in
cmp
sbb
cli
andb
nop
pop
sbb
ret
pop
dec
jns
sbb
mov
add
lcall
mov
sbb
int
das
mov
jns
mov
xchg
bnd
sub
movsw
cmp
seto
aaa
lods
cli
add
push
or
cmpsb
cmpsb
xor
fidivrs
mov
lods
and
sbb
push
outsb
xchg
xchg
dec
aaa
cltd
sarl
loop
jo
mov
sub
arpl
sbb
adc
pop
stc
inc
push
shrb
dec
mov
push
cld
mov
jae
gs
mov
adc
jle
jnp
shl
sub
jle
or
cmp
add
sbb
fidivrs
mov
fwait
lcall
das
pop
shrb
icebp
dec
add
mov
xlat
sti
add
adc
adc
hlt
xor
lods
push
ficoms
cld
xlat
cmp
sub
push
les
hlt
jge
stos
mov
stc
cmp
das
xchg
xor
imul
inc
sbb
lret
insb
adc
push
sbb
jecxz
cmc
aaa
das
aam
mov
mov
insl
and
xor
jl
sub
mov
pop
or
push
inc
int
xor
rorb
fcomps
loop
pop
sti
or
push
jmp
mov
mov
mov
sub
lods
xchg
scas
sbbl
xchg
lahf
and
das
cwtl
and
movsb
lods
cmc
mov
sub
ficomps
repnz
clc
jmp
mov
mov
das
daa
mov
loopne
cmp
in
jne
sti
cwtl
push
push
pop
gs
bound
in
aad
loopne
in
add
insb
cmp
das
pop
fldcw
lods
test
or
rcrl
ljmp
cwtl
jmp
mulb
mov
addb
pop
xlat
mov
adcb
sti
movsl
cmp
in
xor
mov
loope
lods
flds
popa
mov
mov
jnp
jl
outsl
outsb
scas
cmpsl
orb
sbb
es
or
aas
inc
or
dec
inc
or
pop
inc
or
outsl
inc
or
addb
mov
add
add
add
add
add
add
add
add
add
inc
or
add
add
xlat
inc
or
add
add
or
add
in
inc
or
add
add
inc
or
sbb
or
add
or
and
or
adc
add
or
push
inc
or
xor
or
sub
add
or
xor
or
inc
inc
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
pop
sub
add
dec
adc
add
pop
add
xor
adc
pop
sbbl
pushl
inc
lock
mov
xor
pop
hlt
ja
mov
xchg
mov
fxch
push
or
lret
dec
inc
dec
jbe
pop
sbb
push
orl
aaa
pop
sbbl
mov
sub
sub
gs
adc
adc
push
stos
test
fisubl
xor
jecxz
jo
sub
add
mov
sar
or
or
add
add
push
or
cmp
loopne
jg
or
scas
test
cmp
pop
push
rcr
jmp
add
lock
in
fcoms
push
scas
int3
roll
arpl
ds
sti
movsb
add
cmp
incb
insb
dec
bt
int3
mov
stc
sbb
sub
je
jno
jbe
add
sbb
add
xchg
imul
js
sbb
sub
outsb
add
rcll
mov
push
add
jge
inc
hlt
xor
xchg
inc
sub
mov
lret
lea
dec
orb
pop
nop
aaa
dec
push
mov
arpl
and
mov
fisttpl
popf
loope
dec
fimuls
add
scas
hlt
inc
enter
add
fistl
data16
mov
ja
rolb
andl
sbb
sub
lds
adc
add
int3
clc
cs
add
pop
or
mov
sub
add
xchg
push
xchg
cmp
sbb
xchg
loope
jmp
rorl
loopne
out
cmpsl
mov
mov
xchg
arpl
inc
fisttpl
cmpb
push
mov
jmp
repz
xorb
int3
es
adc
imul
add
inc
outsb
pop
cli
pop
push
arpl
outsl
mov
push
fdivrl
mov
and
mov
and
pusha
int
push
cmpsl
shrl
dec
mov
add
int3
inc
shl
jbe
sbb
lret
pushf
lea
pop
pop
and
arpl
jge
in
add
pop
stos
mov
repnz
bound
add
divl
sbb
push
ljmp
push
and
mov
adc
punpckhbw
sbb
ficomps
pop
cmpl
je
sub
mov
add
cmpsb
add
test
fldcw
nop
lods
add
scas
add
add
inc
movsl
mov
sbb
adc
add
fldl
lret
loopne
inc
jecxz
inc
in
in
shl
aam
nop
xor
adc
pop
in
xor
or
icebp
add
testl
cli
add
add
arpl
or
or
or
or
or
rorl
jb
or
adc
rclb
adc
sub
adc
cmpb
xor
subb
insl
inc
adc
jmp
arpl
dec
inc
shrb
sbb
push
inc
push
inc
inc
sub
addr16
inc
jns
inc
jp
inc
jl
inc
jge
inc
xorb
fucompp
adc
jns
inc
in
aaa
inc
test
mov
test
jno
or
mov
or
or
test
ljmp
adc
mov
push
int
sbb
jp
add
loopne
lods
jecxz
cmpsl
in
leave
ror
out
fs
call
and
add
in
add
testl
push
mov
inc
push
mov
pop
dec
fistl
push
add
jmp
sbb
inc
sbb
sub
enter
popa
sub
adcl
sub
outsl
sub
insl
add
pop
mov
shlb
mov
mov
add
clc
les
push
push
jno
cmp
cmp
jecxz
add
and
and
mov
stos
or
mov
mov
jmp
addl
add
add
add
add
and
and
in
and
xor
pop
incl
pop
dec
xchg
test
ljmp
clc
and
push
or
push
add
scas
xor
add
lea
push
fldenv
popl
pop
or
lcall
cmp
mov
aam
and
cmpsl
stc
in
enter
add
xchg
testb
xor
pop
push
sub
cmp
and
inc
inc
cmp
add
into
inc
nop
xchg
dec
sbb
pop
arpl
fbld
jo
or
jno
cwtl
adc
adc
adc
and
and
mov
stos
fcoms
adc
inc
push
push
enter
scas
sbb
daa
sbb
rcrl
sbb
or
sbb
dec
and
push
scas
cld
xor
fs
cli
mov
inc
pop
jbe
adc
xchg
adc
aas
add
inc
add
cmp
inc
xor
inc
adc
ret
inc
lea
xor
add
pop
movsb
or
jecxz
xor
xchg
adc
cmp
fisubl
push
push
add
jno
stos
sti
movsb
mov
inc
or
sahf
xor
cli
adc
rcll
sbb
sar
mov
inc
aas
inc
inc
sbb
inc
lret
inc
jno
test
xor
syscall
orl
adc
and
add
inc
xchg
addb
inc
cmp
and
inc
sub
ret
call
mov
fdivrl
push
mov
lods
mov
popa
push
or
fstpl
out
xchg
sub
mov
sti
add
aas
test
lret
lret
aad
nop
lds
push
sub
cmpsb
and
sub
xor
cmp
adc
imul
lahf
insb
es
sub
pop
add
int
add
xor
cs
cmp
shll
incl
clc
inc
push
aaa
inc
push
loop
data16
cmp
xorb
xchg
cmp
fsubl
test
cmp
add
add
add
add
mov
or
daa
cmc
insl
aam
es
cmp
xchg
and
lods
inc
mov
int3
mov
mov
adc
ja
or
fwait
add
add
sarl
filds
or
arpl
cmp
add
stos
pop
mov
cmp
jae
cmp
jnp
or
pop
pop
adc
inc
loope
imul
inc
mov
jbe
loopne
add
dec
ljmp
popf
add
ret
jne
or
cs
pop
xchg
jo
sbb
fs
push
inc
push
adc
inc
movl
push
daa
xor
mov
cmpsb
rol
cmp
or
add
imul
les
lods
sub
and
incb
ret
aaa
imul
imul
push
pop
xor
dec
inc
add
ret
arpl
clc
add
daa
mov
and
cmp
and
inc
fisttpl
cli
inc
sbb
push
sbbl
iret
scas
fwait
xchg
test
or
std
xlat
dec
inc
or
push
jp
out
mov
testb
cmp
or
jecxz
pop
mov
mov
mov
xchg
sub
or
add
mov
push
inc
xor
adc
dec
cld
les
jg
add
or
lods
fidivs
aaa
clc
aas
xor
mov
icebp
or
push
in
mov
loopne
mov
enter
pusha
sahf
enter
xchg
cmp
testl
push
jp
daa
pop
pop
and
loopne
aam
hlt
add
js
xlat
pushl
mov
jge
out
ds
push
dec
add
mov
paddw
inc
push
sub
shlb
out
or
in
pop
jmp
dec
inc
fs
mov
pop
and
cwtl
add
jmp
fsubs
cwtl
xor
sbb
repz
add
push
add
push
add
push
pop
adc
jle
movl
xlat
push
jmp
stos
mov
mov
and
dec
out
adc
xor
imul
je
test
or
scas
sub
out
sub
jne
out
adc
cld
or
jge
push
xor
pop
pop
add
out
sub
mov
jne
cmp
adc
inc
pop
and
aas
add
in
in
push
lret
add
enter
xor
inc
mov
adc
decl
dec
adc
xor
sahf
xchg
cltd
sbb
xor
shll
push
adc
sub
or
js
xchg
outsl
std
sub
fs
mov
popa
jg
repz
add
addr16
xchg
adc
cmp
or
or
or
mov
add
mov
rorb
mov
fidivrs
or
add
adc
or
stos
inc
pop
lods
je
and
arpl
jp
adc
mov
cmp
jne
dec
clc
jle
add
pop
enter
lahf
mull
loope
add
add
cltd
adc
fdivrl
xor
popa
or
jne
orl
js
int
frstor
rorb
add
mov
mov
loopne
xor
call
and
out
cld
fstpt
sbb
mov
sub
iret
dec
rorb
fmull
daa
xlat
test
test
enter
mov
das
insb
stc
xchg
icebp
nop
repz
int3
aad
sahf
and
sub
adcb
cli
and
adc
fs
push
mov
scas
sbb
or
dec
xor
sbb
jmp
xabort
push
add
scas
mov
mov
out
cmp
pop
push
jo
inc
das
mov
adc
sbb
cli
cmp
xor
add
lds
push
fdivrl
cwtl
fadds
xor
and
add
cmpl
sbb
out
xor
daa
add
cmpsb
jg
cmp
roll
jbe
fldenv
pop
mov
ss
mov
adc
or
subb
adc
jp
jle
loopne
jne
jle
xchg
stos
in
add
es
jae
cmp
fmuls
je
xorb
mov
cmp
and
adc
inc
push
inc
clc
inc
inc
stc
lods
mov
movsb
cmp
adc
jmp
lods
cld
sbb
out
aam
test
repnz
xchg
add
add
add
enter
adc
push
in
mov
adc
sub
icebp
jne
add
rcr
and
bound
add
xor
loopne
in
inc
movsb
mov
add
sub
clc
subb
sbb
leave
jecxz
fbld
sbb
js
add
lret
cmp
sub
xchg
cwtl
adc
fbstp
add
add
add
dec
popf
xlat
mov
out
cmc
sub
movd
push
or
movsl
adc
cld
mov
enter
ret
adc
push
cmp
xorw
jb
pop
lods
test
pop
xchg
test
jno
imul
xor
cwtl
xor
into
jmp
mov
adc
dec
daa
adc
mov
cli
add
stos
cmpsl
or
push
dec
mov
sbb
ja
inc
mov
mov
add
jmp
push
add
xchg
or
fmuls
shl
add
xor
pusha
pop
xchg
xor
adcb
test
sbb
ljmp
cmp
sbb
push
arpl
pop
fdivrl
or
icebp
out
scas
push
xchg
or
addl
or
in
or
clc
mov
push
das
inc
sub
pop
cmpsb
pusha
sbb
cmp
xchg
jo
popa
lret
mov
xor
sahf
mov
dec
or
aam
adc
xchg
jns
pop
mov
fmul
test
cltd
repnz
sbb
adc
cmp
adc
pushf
or
lea
add
inc
into
push
xor
movsl
sub
xorb
das
jnp
mov
imul
mov
mov
dec
jo
push
cmp
pop
sbb
lcall
sahf
lods
cmpsb
adc
loope
clc
xchg
sbb
cmpl
sub
pusha
mov
add
mov
es
xor
pop
or
push
pop
aas
mov
sti
in
rcrl
fdivr
add
or
sub
xchg
orl
movsb
aas
aam
pop
bound
push
fucomp
and
adc
add
sub
xchg
inc
in
add
xor
xchg
inc
or
adc
loopne
shlb
jle
mov
xchg
and
add
loop
or
adc
jne
pop
mov
cmp
adc
pop
popa
addb
xor
cmp
add
mov
jbe
add
enter
pusha
js
push
jg
mov
movb
sub
inc
dec
inc
adc
jnp
fmull
popf
jo
pop
sbb
mov
nop
movsb
das
test
mov
xchg
adc
pop
dec
cmp
push
or
inc
insl
or
lret
outsl
dec
or
or
add
dec
clc
std
jns
jge
dec
imul
cmp
dec
cmp
int
mov
cmp
mov
push
pop
jo
insl
jbe
sub
push
mov
cmp
xchg
mov
pop
push
leave
rorl
mov
mov
xor
mov
lcall
xor
leave
pop
xor
stc
xor
cmp
adc
into
or
mov
jp
addb
dec
iret
outsb
int3
jno
or
subb
mov
sbb
cmp
cwtl
adc
shlb
adc
mov
adc
mov
jnp
scas
outsb
xlat
inc
aam
jb
add
add
aaa
pop
jmp
inc
pop
xlat
add
jnp
cmp
add
addl
fdivl
xchg
push
lret
inc
pop
pop
add
add
arpl
cli
push
cmp
cmp
add
pop
xchg
aam
sahf
adcl
jo
rolb
sahf
sub
jecxz
mov
add
sbb
adc
pop
pop
neg
jmp
iret
mov
xchg
or
add
dec
cmp
xlat
out
add
leave
shl
call
stos
jle
dec
cmpsl
add
pop
sub
aam
or
aad
call
aaa
inc
jge
add
sub
mov
add
mov
mov
cmpl
add
mov
movsl
idivb
testl
jecxz
add
sub
add
clc
shl
call
or
dec
or
outsl
lret
jmp
jle
adc
dec
call
xchg
push
pop
adc
enter
test
not
data16
add
movzwl
add
int
nop
mov
xor
cmpsb
mov
mov
mov
cmp
push
dec
inc
mov
xor
sub
pusha
inc
loope
roll
dec
test
push
daa
inc
sarb
lcall
jmp
insl
ret
jmp
int
sub
xor
loop
jp
inc
xor
push
xchg
lahf
sub
adc
add
das
fnstenv
inc
ja
stc
sub
call
jns
ret
fcmovne
sbb
xchg
add
adc
rol
cld
mov
cli
aas
loop
add
sarl
or
gs
shrl
leave
repnz
aaa
lock
cmc
aam
inc
test
jge,pt
mov
adcb
dec
adc
mov
xor
xor
lret
sahf
push
inc
aas
inc
xchg
sbb
cmp
aaa
out
sub
es
xchg
sbb
test
pop
neg
pop
add
or
xchg
add
in
jo
or
adc
cltd
shlb
pop
test
or
inc
xchg
ret
movsl
sbb
nop
cmc
jge
hlt
add
repnz
xlat
push
pop
pop
add
insl
movsl
and
add
xchg
movb
add
test
pop
movsb
and
mov
out
push
push
jl
flds
sbb
push
stos
stos
mov
sbb
test
jae
jnp
add
test
fstpl
pusha
pop
inc
scas
xor
aam
neg
add
adc
inc
add
mov
push
or
ds
arpl
xchg
and
pusha
push
sub
or
add
mov
mov
and
mov
aad
outsb
out
jne
pop
dec
push
pop
pop
dec
xchg
stos
test
jns
rcl
call
push
cltd
xchg
push
push
pop
dec
call
gs
mov
lea
ss
xor
mov
ljmp
or
inc
adc
les
cwtl
aas
lods
adc
nop
jecxz
jmp
and
sbb
pop
roll
outsl
icebp
enter
push
xor
mov
add
adc
push
push
mov
fld
xor
sbb
data16
mov
movsb
dec
sahf
inc
test
mov
clc
xchg
lret
mov
enter
adc
add
mov
lock
sub
pop
sub
pop
stc
inc
gs
neg
push
jg
push
and
jge
aad
enter
bound
jmp
call
cwtl
jbe
bswap
rcll
inc
push
cmc
mov
xor
mov
shlb
xchg
push
mov
shll
and
inc
jmp
jle
xor
mov
mov
add
jns
inc
fmull
in
ret
dec
ljmp
mov
mov
adcl
repnz
sbb
xlat
outsb
cwtl
push
inc
inc
neg
pop
test
or
mov
sub
add
mov
subb
jp
sbb
sub
test
mov
mov
in
sub
mov
adc
call
outsb
sbb
mov
and
push
add
cmc
out
pop
test
push
and
daa
stos
adc
xor
cwtl
xchg
hlt
out
sub
add
cwtl
nop
and
xor
and
add
insl
movsl
popf
mov
das
mov
test
and
cmpsb
dec
jo
push
das
and
fcmovb
inc
and
xchg
dec
xor
mov
push
jae
ss
and
sbb
and
faddl
pop
jns
cmp
sbb
cmp
adc
or
sub
iret
mov
popf
jmp
test
cwtl
sbb
sub
cmp
or
pop
xchg
shlb
sarb
mov
pop
data16
loope
ljmp
xor
mov
into
xorl
pop
mov
jo
mov
iret
cld
lds
sti
mov
icebp
packsswb
cmp
lret
mov
out
xor
add
pop
mov
mov
dec
pusha
lock
sub
push
dec
notb
les
cli
mov
test
add
mov
test
fldt
fmuls
rclb
mov
ljmp
out
and
pop
int3
mov
aad
fisttpll
loopne
ljmp
xchg
mov
sub
sbb
test
cmp
or
roll
stc
inc
adc
iret
mov
add
in
enter
clc
mov
mov
cltd
popf
or
push
xorb
cld
push
fstpt
mov
and
adc
inc
push
push
not
cwtl
cwtl
inc
pop
es
lods
cmp
or
std
push
mov
mov
rorl
xchg
leavew
sub
cld
int3
out
and
in
not
inc
ret
ror
clts
push
pop
pop
stos
ficoms
mov
enter
insb
push
lds
sbb
shll
sub
out
add
mov
cmp
bts
push
in
dec
push
enter
mov
jbe
addl
jno
and
add
loop
pop
adc
add
and
lock
or
call
aas
lock
fwait
mov
dec
xor
lret
cmpl
jecxz
test
xor
lds
pusha
mov
mov
dec
stos
js
mov
aas
add
xchg
sti
ret
cmp
repz
add
inc
or
or
pusha
mov
push
rolb
dec
pop
pop
xchg
add
out
push
rcrb
xchg
add
mov
fdecstp
push
aam
pop
mov
rclb
out
and
and
scas
xor
fbld
or
imul
xor
insb
orl
addr16
jbe
add
cmp
push
adc
mov
sbb
or
sbb
push
push
add
mov
jle
into
xor
dec
test
jns
add
xlat
cmp
rolb
xor
push
decl
not
and
add
and
push
and
jo
rcll
lds
cmp
mov
add
imul
inc
inc
mov
sarl
ficompl
inc
add
xchg
shll
lea
cmp
pop
andb
dec
sub
xchg
sub
insb
or
iret
aas
mov
xor
xchg
jae
sub
shll
sub
test
subl
cmp
loopne
adc
ss
or
shll
mov
sar
enter
out
scas
cmpsl
mov
push
rcrl
jge
outsb
mov
or
cli
fbld
clc
inc
sbb
lods
pop
lds
adc
mov
lock
mov
les
jo
cmp
shrb
sarb
mov
or
test
cltd
dec
cli
adc
loop
dec
lahf
push
add
shr
cmpsl
push
mov
imul
mov
jmp
cmc
fnsave
ja
or
jno
test
push
test
dec
ds
or
xor
cld
nop
cmp
test
leave
pushf
pop
cwtl
mov
or
pop
in
rorl
addr16
jmp
popa
int3
insl
insb
cmpb
sub
mov
inc
ret
and
cmpsl
sub
dec
les
mov
mov
lcall
xor
outsb
pop
inc
pop
sub
jo
xchg
pop
ret
push
pop
mov
ljmp
cmpsb
jmp
sbb
or
dec
add
push
pop
pop
rclb
xor
int3
mov
scas
in
pop
into
nop
jl
lock
loope
addr16
jge
or
lahf
lds
add
xchg
sub
mov
das
scas
inc
add
aad
and
std
mov
aad
jle
inc
cmp
xor
pop
adc
xorl
cmp
shll
add
sub
or
mov
out
cmp
pop
jmp
int
sti
cmpsb
movsl
push
fdivs
scas
icebp
mov
lret
xor
and
push
adc
fmuls
sbb
inc
add
jg
not
mov
jle
lds
cwtl
dec
stc
mov
lcall
jg
inc
sub
cmp
or
fisubs
into
xchg
es
push
sbb
add
notb
push
sub
repnz
outsb
insb
into
cli
xor
or
adc
dec
sbb
xor
pushf
out
mov
cmc
adc
aam
xor
les
cld
outsl
jl
pop
push
pop
add
out
push
hlt
inc
push
push
mov
mov
imul
movsb
push
jne
cmp
lods
xlat
push
mov
add
iret
pusha
les
into
mov
xorb
pop
mov
sti
fmuls
mov
cmpl
inc
push
fs
das
xor
idivb
das
adc
adc
add
sub
push
imul
jmp
leave
aad
sub
xor
adc
hlt
add
push
push
pop
pop
addl
mov
aam
dec
movsl
aaa
test
xor
and
jecxz
xchg
add
mov
inc
xor
stc
daa
mov
sbb
or
out
cmp
mov
adc
fbstp
imul
sbb
cmp
popa
xor
negb
cs
lret
adcl
cmp
test
mov
or
neg
sbb
push
push
mov
add
fnstcw
and
dec
pusha
jb
push
ret
and
cmc
pop
es
add
jno
lret
cmp
xor
xor
cmpsb
in
je
push
push
dec
stos
or
sub
push
dec
adc
pop
mov
jle
adc
jno
push
movsl
loope
or
cmp
mov
ss
sbb
add
sahf
rorb
inc
pushl
and
mul
mov
mov
push
mov
or
repz
and
adc
rcll
in
adc
and
iret
cmp
sti
mov
jg
and
or
ret
pop
inc
test
xor
sbb
add
inc
loop
jbe
sbb
pop
inc
enter
lea
leave
popa
movsl
call
xchg
cmp
push
pop
pop
mov
sub
and
mov
aam
fnsave
inc
outsb
push
xor
int3
arpl
aam
pop
pop
xor
sub
movaps
sub
xchg
mov
add
jne
jl
and
das
jmp
or
dec
das
mov
daa
lret
insl
mov
inc
sub
mov
cmp
xchg
lcall
sbb
orl
cmp
or
prefetcht1
xchg
pop
mov
mov
ret
pop
insl
daa
test
inc
push
and
aaa
ficompl
enter
mov
mov
bound
sbb
inc
mov
adc
loop
adc
pop
sub
cltd
sahf
adc
dec
adc
push
loop
and
pusha
mov
repnz
ret
ficoms
xchg
fmull
addr16
cld
and
aas
sub
movsb
in
push
add
cmp
xchg
jnp
add
mov
iret
xor
push
or
lds
jns
call
mov
or
in
jb
sti
or
add
sarb
insl
popl
test
push
call
push
vphaddubd
push
shlb
add
adc
adc
int
inc
xchg
push
pop
xor
mov
and
push
call
or
adc
mov
sub
notb
scas
dec
inc
sub
xchg
cltd
and
xchg
add
xor
fiaddl
test
and
sub
pop
int3
mov
adc
scas
mov
fcmovu
pop
and
sbb
mov
das
repz
je
pop
inc
lret
loopne
add
inc
loopne
mov
push
push
cmp
xlat
fs
movsb
lcall
add
or
jns
inc
test
push
mov
in
aam
test
xor
sarb
in
je
inc
int3
mov
xchg
mov
xchg
add
adc
lret
cltd
mov
dec
stc
jns
mov
test
mov
rcrb
test
xchg
push
lcall
inc
dec
adc
not
sbb
pop
xchg
xor
mov
mov
shr
xchg
adcb
xor
mov
cmpsl
es
push
inc
mov
js
xlat
scas
stos
adc
cmp
rol
stc
adc
mov
pop
mov
in
push
add
push
mov
lods
insb
outsl
sub
in
into
and
or
ds
lcall
mov
fwait
add
pop
mov
adc
add
iret
loop
lret
std
xor
dec
push
xlat
jmp
int
bound
jmp
rcrl
sbb
rcrl
test
pop
adc
add
adc
gs
pop
add
cmp
bound
shrb
xchg
fildll
aad
inc
stos
adc
sub
lea
enter
cmc
inc
inc
push
mov
adc
insb
call
and
fcoml
movsl
push
mov
int3
les
or
jno
subb
les
add
lock
dec
sar
enter
jnp
mov
data16
jae
add
aaa
xor
flds
inc
pop
into
fs
ljmp
adc
xchg
sub
add
xorl
mov
outsl
add
stc
ret
cltd
shll
push
sahf
mov
das
stos
xchg
jl
addl
xchg
and
enter
cmp
add
sub
cmc
scas
in
adc
shrl
lods
mov
inc
pop
or
cmp
push
sbb
jle
out
sub
into
popa
rorl
mov
int
and
ret
inc
stos
pop
adc
pop
addl
fnstcw
into
inc
adc
mov
add
add
pop
pop
pop
mov
lods
mov
popa
xchg
das
iret
mov
lods
cmpsb
shlb
mulb
test
adc
fisttps
cld
enter
mov
inc
cmpsl
dec
ret
mov
sub
push
dec
adc
and
mov
push
pusha
jb
nop
sub
fcomps
sbb
inc
lcall
add
int3
mov
xchg
xor
nop
orb
lret
bound
pop
shrl
test
sbb
movsb
movsl
add
sub
fmull
dec
imul
add
lret
or
shlb
js
sub
mov
sbb
in
test
add
xchg
cmp
pusha
shll
out
int
loop
dec
mov
mov
in
sbbl
push
cs
movsl
add
adc
add
inc
addr16
inc
jb
out
xchg
add
pop
fs
rorl
push
lret
mov
xchg
test
mov
pop
mov
adc
jmp
mov
rol
dec
xlat
jnp
push
mov
int
inc
push
adcb
leave
inc
add
nop
and
sub
sbb
pop
sub
or
or
add
mov
fcompl
out
ljmp
sub
das
outsb
mov
xor
xor
xor
or
cmp
fildl
inc
test
xchg
ficoms
aam
sbb
push
out
mov
push
popa
cmp
or
adcl
out
mov
outsl
test
adc
sbb
mov
dec
xlat
add
mov
test
jbe
nop
cltd
sub
testb
mov
leave
cmpsl
add
rclb
push
mov
xchg
imull
or
xlat
sbb
std
cmp
sbb
push
dec
adc
cmpsb
paddsb
jge
iret
ret
mov
inc
adc
push
xchg
fs
add
jbe
cmp
push
adc
or
add
dec
mov
push
lods
shrl
xchg
pop
out
xor
jo
add
push
adc
outsb
xor
fiaddl
jecxz
in
mov
imull
mov
lahf
xchg
lea
adc
inc
push
inc
push
add
idiv
lds
cmpb
inc
cmp
mov
and
mov
popa
push
cli
fs
push
outsb
add
fimuls
dec
addb
test
je
inc
addl
loop
shr
or
xchg
movsl
pop
pop
fst
inc
add
test
push
pop
pop
jmp
sub
push
rorl
or
outsb
mov
xchg
mov
test
es
pop
faddl
or
dec
inc
cltd
mov
xchg
push
test
push
sub
mov
mov
pop
movsl
sub
push
lahf
sbb
les
push
cli
subb
jmp
cmp
cmpsb
movsl
jl
xor
lahf
sbb
sub
icebp
pusha
fidivl
imul
add
add
movb
fistpll
inc
aam
mov
out
push
sub
pusha
lea
sub
mov
aaa
test
xor
mov
xor
push
mov
lret
adc
push
fisttpll
call
pop
pop
pop
inc
xchg
clc
xlat
int
test
mov
sbb
aas
xchg
mov
mov
dec
je
push
cmp
dec
rorl
cmp
punpckhwd
sub
xchg
sbb
out
and
mov
xchg
push
sbb
adc
aad
push
jo
mov
dec
cwtl
mov
xor
ret
aas
addr16
mov
xchg
jle
addr16
bt
cwtl
jmp
or
inc
dec
xor
sub
fdivl
pop
inc
push
adc
dec
sbb
mov
and
mov
pop
popf
mov
dec
les
rcll
test
jne
idivl
adc
imul
adc
add
test
dec
out
orl
loop
and
out
cmp
cmp
mov
jp
jae
sbb
mov
sbb
jecxz
mov
and
mov
enter
jmp
push
mov
cltd
fisubrs
andb
mov
push
fbld
ret
pop
jo
jmp
or
daa
xchg
dec
cmp
fmull
xor
ss
sub
xchg
push
add
dec
not
sub
data16
insl
jp
orl
xchg
adc
psubw
fcmovne
dec
sar
mov
sti
pop
jbe
pop
inc
insl
push
push
jge
mov
bound
int
call
add
ret
imulb
in
push
or
or
dec
test
or
jno
test
repz
push
or
je
add
loopne
data16
dec
lret
arpl
push
xor
mov
pop
push
inc
jmp
rorb
outsl
jge
and
lcall
gs
xchg
jmp
jl
addr16
shr
pop
and
lods
cmpsb
repnz
jno
gs
aad
imul
dec
shrb
xor
jne,pn
fistps
daa
or
es
cli
das
mov
jmp
xchg
push
inc
cltd
in
addr16
lea
ljmp
fstl
enter
pusha
add
inc
xor
sahf
cmp
jno
inc
sub
push
dec
adcb
fisubrs
add
xchg
sahf
int3
movups
add
push
pop
pop
mov
push
call
or
adc
cmp
ljmp
lds
imul
push
jl
cmp
jns
and
mov
xor
les
sub
jo
mov
mov
inc
mov
push
push
pop
or
dec
pop
add
dec
clc
push
or
dec
bound
mov
aaa
sbb
clc
push
sub
add
cmp
push
xor
inc
outsl
je
sub
xor
outsl
cmp
addr16
fildll
xor
inc
jnp
js
jb
test
sub
scas
mov
inc
ja
add
imul
jg
push
push
mov
xor
pop
ss
dec
mov
and
cwtl
das
hlt
dec
dec
and
xchg
jl
cmp
into
jae
jmp
pop
test
aaa
push
cmp
sub
test
xor
jg
mov
sub
pop
jno
adc
aad
inc
jg
adc
inc
dec
cli
sti
inc
lret
insl
xorb
sbb
fs
sbb
and
popa
push
push
pop
pop
adc
jae
push
xchg
jp
stos
dec
js
xor
adc
sbb
cs
add
loope
and
cmp
mov
sub
andl
xor
sub
dec
sub
pusha
scas
inc
xor
sahf
or
ja
sub
fldz
dec
jg
mov
jo
xor
pop
push
or
sbb
cmc
in
test
mov
fiaddl
mov
stc
into
sarb
adc
scas
gs
sbb
add
out
add
mov
inc
sub
mov
mov
mov
lds
ja
sub
jbe
inc
and
jne
or
inc
jnp
xor
mov
adc
out
jmp
jbe
mov
mov
in
xchg
aad
adc
addr16
imulb
xor
push
push
jne
and
pop
cld
scas
test
popf
scas
imull
sti
in
dec
aaa
dec
in
sti
dec
test
jb
and
or
cmc
and
jnp
jp
and
cmp
lds
enter
xor
daa
daa
push
scas
imulb
cmp
push
push
ret
jb
xlat
out
mov
xor
divl
sub
xor
push
sub
sbb
sub
and
je
es
fsubrl
cmp
mov
paddusw
bnd
push
enter
fldcw
cmpsb
jp
jns
and
test
jbe
fnstcw
push
xor
xchg
daa
ja,pt
iret
sub
dec
cs
or
bound
inc
iret
dec
lcall
pop
sbb
mov
gs
and
mov
ss
leave
aad
in
or
daa
pop
jnp
int3
ss
cmp
inc
sbb
dec
sub
sbb
sbb
sbb
push
jns
test
inc
xor
inc
ss
ficoml
mov
jmp
clc
adc
mov
fldenv
cmp
iret
xor
adc
sub
ret
mov
cmp
mov
push
sar
dec
mov
jns
imul
shll
ljmp
adc
fdivl
inc
pop
sub
ja
mov
sarb
stos
imul
rolb
fs
std
jle
xchg
nop
je
cmp
je
cmp
or
inc
dec
mov
lods
adc
mov
popa
xchg
mov
divb
outsl
insl
fcomi
sti
aaa
clc
and
into
jg
xchg
and
inc
daa
cli
push
xor
sub
imul
in
xlat
dec
jno
lret
cmp
stc
xor
pop
mov
sub
loopne
fisttpl
fcoms
addr16
jecxz
xchg
repz
loopne
test
inc
fsts
das
mov
push
jge
stos
xor
imul
ljmp
insl
scas
dec
loope
into
mov
push
jge
test
sbb
lods
adc
jae
push
sub
sbb
push
decb
dec
mov
dec
jl
loop
xchg
test
fsubrs
aas
or
outsb
sub
or
pop
xchg
xchg
in
sub
hlt
sub
cmp
dec
or
lea
mov
jbe
jge
imul
popw
repnz
dec
xchg
cs
mov
cmpsl
xlat
mov
fs
pushf
es
xchg
repz
and
lret
push
pushl
clc
into
inc
mov
lret
lock
jnp
inc
sbb
daa
int3
xor
popf
dec
or
imul
fidivl
pop
cmp
mov
testl
dec
lcall
sub
push
outsb
negl
insl
in
pop
mov
and
add
or
cmp
xchg
mov
push
packsswb
sarb
mov
push
dec
adc
js
in
mov
inc
iret
xor
xchg
lock
sub
pop
popf
xchg
ljmp
cmp
push
orl
sub
js
cmp
insb
inc
js
add
pop
and
sub
pop
fsubrs
test
push
adc
pop
mov
mov
loop
adc
lret
ret
inc
cli
dec
push
out
out
inc
in
mov
ss
jo
sti
daa
insl
pop
mov
mov
mov
int3
xor
and
cltd
add
xchg
add
test
mov
add
mov
pop
and
and
mov
popa
daa
mov
xor
push
pop
add
scas
and
pop
jbe
sub
repz
das
sbb
mov
or
xchg
jo
testb
sbb
loope
push
rorl
rcrb
outsb
loop
lea
add
das
pop
pop
mov
mov
jecxz
repnz
and
mov
outsl
xchg
push
jns
cmc
adc
scas
pop
xor
jl
mov
pop
cld
test
scas
pop
cmp
andl
ss
sbb
xlat
add
jno
movsl
mov
sbb
add
cmp
outsl
dec
xor
ja
icebp
jmp
addr16
lods
lcall
or
and
mov
and
xchg
push
add
mov
bound
mov
xor
rcl
arpl
stos
jmp
cmp
sbb
mov
push
ss
cmpsb
mov
test
shl
or
cmp
int
xor
mov
mov
fsts
sub
repz
popa
mov
cltd
arpl
das
dec
jno
cmp
sbb
int3
push
push
test
sbb
xor
adc
aaa
clc
jne
sbb
jnp
mov
fstpt
sbb
add
dec
imul
add
sub
stos
out
cmp
mov
rcll
mov
out
adc
xchg
or
insb
data16
push
cltd
sbb
sub
push
pop
add
testl
xorb
jecxz
pop
jg
outsb
adc
fs
inc
jbe
and
inc
push
push
das
outsl
and
fnstcw
cmp
into
jno
push
sub
test
xlat
test
pop
xchg
xchg
cmp
adc
jns
sti
cmp
ss
pop
rcll
sub
jb
adc
subl
and
jp
int3
outsl
mov
push
cmc
shlb
mov
mov
xor
cmpsb
jg
cmp
and
test
ret
in
rcll
pop
mov
ljmp
mov
mov
cs
jae
out
fsts
pop
cld
add
jp
out
pusha
cld
cmc
jb
jae
cmc
pop
xor
lods
dec
loope
daa
stc
mov
int3
scas
test
cmp
or
xor
in
adc
lret
xchg
stos
xor
cmp
js
and
push
push
lret
sub
mov
pop
je
pop
jne
ds
mov
mov
jp
jae
insl
dec
add
ss
mulb
mov
and
imul
repnz
cmp
dec
inc
clc
ja
sub
roll
aam
mov
add
xor
jl
sub
adc
loopne
daa
mov
insl
leave
jns
add
dec
xlat
xlat
mov
cmp
sbb
xor
sub
sbb
loop
es
dec
mov
cmpsl
outsl
add
pushf
xor
dec
mov
ret
adc
mov
xchg
ds
outsb
push
pop
cmpsl
mov
jmp
ds
adc
pop
std
push
cmc
xchg
addr16
xrelease
adc
and
mov
adc
mov
push
mov
test
or
daa
das
push
test
sub
aaa
bound
xor
and
fwait
jnp
push
cltd
sub
sbb
lods
icebp
and
mov
ret
dec
add
out
push
dec
lock
imul
sahf
ficompl
push
mov
insb
xchg
ljmp
loopne
xor
inc
pop
pop
jns
or
insb
mulb
pop
xchg
push
popa
ss
and
jmp
dec
pop
lret
pop
xor
jge
shll
cmp
jo
xor
iret
cmp
mov
fwait
or
jmp
xor
jns
fucomp
jb
add
or
mov
ret
les
repnz
test
mov
pop
hlt
pop
xchg
cmp
mov
or
lret
add
push
stos
lods
mov
sti
hlt
dec
dec
in
icebp
sub
jge
nop
mov
or
jo
pop
sub
pop
jle
inc
mov
iret
sbb
mov
addb
jnp
icebp
sarl
jmp
lcall
stos
lea
ficomps
fidivrl
add
mov
js
mov
pop
adc
insl
cmp
push
fldt
lods
jno
jne
mov
push
and
int3
je
adc
inc
mov
in
scas
mulb
mov
js
jne
insl
movsb
fdivrp
shr
mov
or
mov
or
cmp
push
insl
sub
es
jbe
or
and
mov
and
dec
subl
sbb
cltd
push
sub
sub
into
mov
test
test
int3
lcall
insb
adc
inc
icebp
jns
mov
imul
ja
add
outsb
insb
dec
sbb
outsl
xor
mov
in
jg
add
xchg
clc
fistpll
jl
and
addb
cmp
push
mov
test
push
dec
dec
and
cmp
sbb
lock
add
sbb
test
jl
lods
inc
adc
xor
scas
jns
inc
xor
rclb
cwtl
pusha
rorl
and
mov
loope
idivb
in
add
into
fldl
sub
dec
sarl
cmpsl
mov
flds
sbb
cmp
or
sbb
ds
lods
xor
repz
and
push
dec
sbb
xchg
sbb
sarb
push
jno
out
dec
and
xor
xlat
aas
xor
push
xor
push
cmp
adc
imulb
xor
lret
inc
bound
enter
push
pop
xor
sbb
and
ss
add
inc
lods
dec
xchg
jmp
loopne
insb
imul
xchg
cmp
mov
sbb
xchg
shll
adc
mov
adc
inc
in
lahf
ss
mov
imul
pop
mov
cmp
cld
mov
dec
cmp
and
ja
in
push
sub
lcall
arpl
ljmp
mov
movsl
or
adc
xor
fimull
inc
jle
in
or
push
jo
fnsave
dec
pop
cmpsb
ja
add
pop
add
jno
out
scas
and
xor
and
loope
jge
xchg
inc
and
mov
mov
jne
out
aam
add
icebp
test
sbb
aad
es
jbe
notb
push
aas
test
mov
add
test
sbb
dec
or
dec
or
call
sub
scas
subb
adc
mov
mov
cmpsb
lds
xchg
repz
lock
cmp
mov
jg
cmc
mov
mov
jbe
scas
cld
adc
outsb
mov
lods
arpl
int
mov
jl
xor
roll
or
pushf
mov
inc
push
push
icebp
out
or
sub
xor
mov
scas
lea
cld
ret
inc
push
outsl
out
sbb
dec
push
into
dec
inc
cs
xlat
lcall
xorb
cmp
add
cmp
xchg
ds
and
add
fdivrs
jo
or
lods
pop
jne
in
jbe
sub
and
out
push
jge
scas
scas
inc
daa
sub
cmpsl
or
inc
mov
repnz
cmpsl
sarl
js
movsb
push
ljmp
shll
push
mov
stos
pop
xor
daa
jl
aad
jl
jbe
in
fdivs
insl
inc
mov
add
shlb
cld
aam
pop
in
out
es
nop
lea
daa
xchg
fldl
jp
cmp
pop
and
lret
out
sub
push
adc
scas
cmpl
adc
jb
and
stos
sbb
or
bound
iret
sbb
shlb
pop
mov
jg
xchg
ss
fidivl
pop
sbb
mov
pop
lods
repnz
les
push
jb
out
adc
ss
sbb
mov
adc
sub
cmp
jnp
mov
sti
jl
lods
cmp
je
js
mov
repz
and
cmp
adc
fmull
push
mov
adc
and
mov
es
sbb
mov
ja
cmp
iret
cmp
dec
add
inc
pop
push
push
leave
jno
mov
sbb
movsl
mov
ret
popw
jmp
sub
into
mov
enter
je
aaa
jg
out
mov
iret
mov
jo
and
inc
mov
daa
stos
adc
dec
cmp
xor
aas
jnp
out
xchg
mov
iret
cmp
jl
movsl
push
dec
cmp
mov
or
xchg
out
nopl
shlb
cmpsl
inc
jl
mov
rolb
push
mov
jns
std
mov
cmp
in
push
outsl
mov
mov
daa
jnp
dec
cmp
data16
adc
ja
int
xor
cmp
xor
mov
cmp
adc
jp
xchg
xor
cmpsb
ficoms
push
outsb
fbstp
testl
mov
outsl
lret
jbe
shrl
mov
ss
mov
mov
daa
incl
addr16
and
sbb
adc
jge,pn
cmp
addl
xor
mov
mov
test
cmp
rorb
cmp
dec
fs
pop
ret
orb
aas
inc
dec
xor
out
and
aad
pop
clc
mov
jp
aam
shll
mov
xor
jne
mov
pop
dec
pop
mov
xor
add
push
lea
leave
repz
std
loop
test
pusha
or
arpl
lcall
jno
or
lret
ss
stos
hlt
jmp
test
dec
inc
sbb
mov
call
xchg
mov
jmp
mov
cltd
add
inc
sbb
test
seta
icebp
cltd
incb
xchg
aas
xchg
push
cli
daa
aad
aas
fiadds
fistpll
cmp
sub
add
aas
nop
push
jno
xor
enter
out
add
mov
mov
fstpt
xchg
pusha
cmp
js
int
testb
or
jnp
je
in
pop
andb
jge
das
sarb
mov
test
jle
enter
inc
movsb
mov
pop
inc
fsubl
in
cmpsb
sbb
mov
addr16
pushf
lds
xor
pop
inc
mov
jb
jle
lods
or
xchg
and
cli
push
push
scas
mov
rcr
jmp
test
dec
pop
fisttpll
pop
and
mov
lea
and
decb
cmpsb
pop
and
xor
sti
adc
aam
push
dec
mov
dec
nop
adc
pushf
mov
and
std
fdivrl
inc
aad
bound
mov
cmp
mov
cmpb
push
out
mov
lds
mov
or
int
je
mov
mov
ret
adc
pop
stos
jb
stc
jno
pop
push
inc
push
into
dec
cmpsl
mov
mov
stc
pop
call
push
pusha
xchg
dec
inc
pop
pop
fcompl
daa
pop
sbb
adcl
test
inc
int3
xor
mov
sub
and
jae
arpl
js
pop
or
push
push
adc
jne
push
dec
pop
pop
clc
insl
gs
push
jb
or
add
fsubrl
and
out
push
jmp
mov
xor
xlat
fwait
adc
mov
insl
add
and
scas
cmp
fsubrl
imul
cmp
lcall
ds
aaa
mov
cmpsl
xchg
sbb
es
stos
cmp
adc
push
sub
es
sbb
and
je
adc
jbe
outsb
int
fsubs
lcall
fcoms
sbb
pop
jge
lods
div
fcmovnbe
mov
xchg
insl
and
jecxz
inc
and
sub
cmp
aad
cmpsl
pop
repnz
imul
mov
jns
and
aaa
push
add
popf
bnd
fst
loop
pop
fwait
loopne
or
cmpsl
jns
hlt
add
out
sbb
pop
add
das
pop
aad
xor
aam
xchg
add
cmpl
aam
cmc
mov
xor
test
outsb
mov
jecxz
ret
sbb
insb
test
in
stc
mov
int
xchg
insb
jl
out
jb
xchg
jg
inc
mov
xchg
or
xor
mov
jl
imul
xlat
ret
addr16
int3
and
outsl
add
iret
cmp
jbe
bound
inc
xor
push
aas
sbb
mov
notl
xor
sub
jo
test
mov
push
jae
dec
aaa
xor
ljmp
jg
or
mov
movsl
outsl
adc
les
mov
outsb
fldt
push
sahf
cmp
dec
dec
mov
in
jg
xchg
popa
inc
repz
inc
inc
xor
loopne
xchg
sub
push
imul
push
out
cmp
imul
lcall
pop
push
mov
jb
jb
xor
insb
fcoms
movsw
pop
sti
es
gs
int
push
mov
sub
insl
adc
cmp
or
sbb
dec
sarb
lds
arpl
loope
arpl
daa
sub
imul
in
and
js
mov
adc
xor
cli
cld
je
je
test
adc
jns
pop
pop
or
inc
js
mov
out
out
mov
fsubs
xor
or
xor
fnstcw
pop
rcrl
ss
push
sbb
or
mov
pop
xchg
and
out
dec
mov
xor
dec
das
jmp
ljmp
sub
aaa
jbe
pop
add
mov
xchg
xor
and
sbb
xchg
mov
lahf
js
ss
stc
sub
cmpsb
jne
cmpsl
inc
add
lahf
push
xchg
cld
and
inc
jecxz
test
mov
xchg
into
fcmovnu
fistl
ljmp
mov
lods
scas
jno
gs
fdivs
mulb
push
repz
dec
jecxz
cs
movsl
inc
cmp
add
sbb
ret
pop
aaa
sub
and
scas
mov
or
cld
mov
xchg
jg
mov
sub
mov
lods
push
jno
add
mov
mov
mov
divl
pop
xor
and
jno
xchg
push
sub
inc
test
jae
lods
push
mov
add
lea
sub
outsl
mov
lahf
sub
mov
das
out
push
call
xor
jb
pushf
xchg
or
mov
jg
pop
and
ja
sub
pop
push
mov
jns
push
push
jnp
mov
lret
out
or
push
insl
popa
call
or
mov
faddp
mov
or
fidivrs
divl
arpl
jle
xor
loopne
push
lock
pusha
add
sub
arpl
jbe
arpl
jne
fcoms
or
xor
out
jp
imul
mul
movsl
cmp
or
das
push
push
push
test
hlt
jge
mov
movsl
cld
es
imulb
push
and
ret
jmp
addr16
ret
mov
pop
xor
std
pop
or
mov
cli
dec
mov
xor
gs
cmp
push
pop
pop
rcll
fstl
fiaddl
outsb
nop
jne
std
sub
or
mov
mov
ss
into
or
push
xor
shl
adc
repz
dec
sub
jbe
ja
lods
in
inc
jp
sbb
jl
mov
cmp
xor
and
js
adc
push
pop
mov
insb
sub
push
push
mov
and
sahf
or
jecxz
aad
mov
pop
dec
gs
add
xor
arpl
sbb
xchg
inc
xchg
add
sahf
addl
xor
mov
jnp
push
cmp
push
pusha
aaa
sub
mov
mov
out
sub
sub
push
sub
xor
mov
xor
sub
xchg
add
clc
mov
mov
je
adc
stos
lret
mov
cmp
cmpsl
xchg
es
ja
int3
ljmp
inc
sbb
sub
into
divl
stos
add
xchg
sub
inc
pop
cmp
mov
mov
int
sbb
sub
mov
jmp
loop
or
test
dec
ret
jg
in
lods
sbb
inc
push
dec
insl
sbb
daa
cli
sub
mov
shll
ss
adcl
sbb
pop
mov
mov
std
add
xor
sbb
cmp
lds
add
sub
scas
pop
jp
hlt
mov
es
mov
call
xchg
xchg
dec
or
add
stos
jb
inc
mov
test
cmpsb
pop
es
adc
and
js
stos
push
jecxz
test
pusha
mov
in
push
call
daa
movsb
imul
addr16
xor
or
dec
or
pushf
aam
js
into
push
mov
mov
pop
lds
test
sub
cmp
push
pop
or
jle
cmc
mov
aaa
jae
push
js
adc
xlat
cmp
insb
aaa
jp
movsl
jae
jne
sub
std
mov
cmpsl
mov
pop
pop
inc
push
xor
inc
jo
xlat
xchg
sahf
mov
cmp
xchg
jnp
sbb
mov
pop
jae
es
cmp
xlat
rcrl
mov
jne
lea
jb
gs
sub
ret
push
mov
xor
repnz
pop
push
mov
in
pop
mov
ret
pop
xchg
mov
je
ss
dec
pushf
es
daa
mov
jg
sub
mov
or
dec
cs
call
inc
data16
scas
mov
sub
xor
js
xor
into
sub
push
pop
cmp
clc
daa
out
aaa
push
mov
inc
aaa
push
push
xchg
sbb
out
jne
repz
sub
shll
aaa
adc
in
pop
adc
mov
fidivrl
inc
pop
stc
cs
and
je
inc
sahf
push
in
xlat
in
pop
and
jo
rol
outsb
gs
jnp
jmp
and
jbe
mov
and
leave
daa
mov
fdivl
inc
repnz
push
fsubl
repz
mov
xor
mov
sbb
pop
add
push
dec
stos
daa
sub
xor
fildll
andl
outsl
and
movsl
sti
xchg
ja
cmpsb
or
out
clc
jns
iret
pusha
mov
sbb
icebp
add
addr16
lods
add
mov
inc
ffree
pop
test
out
out
xlat
data16
aam
mov
in
popa
test
sbb
ljmp
mov
clc
test
aad
lods
push
rol
int
ja
cld
arpl
pop
jbe
cmp
xor
jg
fwait
or
cmp
daa
ja
std
lahf
aas
ficoml
cmc
gs
push
dec
outsl
dec
insb
lahf
add
pop
or
jg
cmp
mov
movsl
jae
or
jl
cmp
inc
xor
push
jo
or
out
outsb
scas
jmp
or
sbb
shlb
es
sbb
insb
cmp
dec
fmuls
mov
mov
mov
cmp
ret
fcomp
add
fldcw
int3
dec
mov
mov
and
ds
inc
ljmp
cmc
push
pop
insl
add
es
hlt
out
testb
add
add
popf
js
cmp
cwtl
pop
xor
es
sbb
cli
mov
lods
insb
icebp
cld
jp
ret
xor
clc
cmpsb
imul
fildll
cmc
outsl
pop
stos
fcmovnu
jp
jge
sbb
es
cs
mov
adc
lods
cmc
fcomp
das
push
das
or
xchg
add
in
inc
jb
aaa
add
adc
sub
xor
pop
ds
decb
push
pop
aad
or
push
ret
push
rcrl
into
dec
daa
fstpt
iret
aaa
mov
cmp
mov
cmpsl
je
or
mov
mov
or
or
pop
pop
cmp
xor
gs
jl
adc
jecxz
pop
dec
inc
insb
out
xor
aad
pop
repz
mov
inc
popf
push
xor
insl
adc
pop
clc
xor
outsb
leave
and
leave
cmp
inc
and
iret
repnz
rcll
push
dec
imul
pop
xor
and
inc
adcl
addr16
rol
sbbl
ds
xchg
pop
pop
mov
cmp
aaa
jns
gs
push
xor
cmp
mov
scas
sub
jge
movsl
stos
out
leave
cmp
out
jmp
mov
inc
repnz
xlat
xor
or
or
les
and
or
imul
xor
mov
mov
int
fldt
mov
pop
outsb
inc
sub
inc
and
in
das
hlt
mov
xorl
xor
pop
add
mov
iret
xchg
sub
jmp
hlt
sbb
add
push
movsl
sarb
dec
xor
mov
add
data16
push
rcrb
xor
ds
xor
insl
dec
je
pop
and
int3
pop
cld
or
sub
cmpsb
inc
jns
in
test
lock
push
and
xchg
lret
mov
sub
xchg
in
jl
dec
int
cld
jo
xchg
or
stos
loop
or
int3
inc
adc
dec
mov
call
xor
xchg
outsl
cmp
xor
cmp
outsl
outsl
jne
int3
xchg
mov
jbe
rcrb
test
pusha
sub
jl
movsb
pop
push
test
push
jmp
ja
scas
test
inc
fnstcw
fs
push
imul
and
ret
pusha
clc
jbe
mov
lods
adc
ret
iret
ds
out
sbb
pop
cmp
pusha
cmp
sub
cmp
sub
cmp
sub
xor
lea
push
cmp
dec
or
movsl
leave
xchg
popa
dec
and
jbe
xor
outsb
and
fimull
xor
je
xor
and
cmp
mov
nop
mov
sbb
stc
lret
xor
out
dec
sti
testb
movsl
cli
xor
jo
and
and
sub
sbb
bound
fbld
jne
out
add
mov
imul
dec
dec
imul
sub
inc
cmp
jmp
fdiv
pop
dec
imul
mov
fimull
out
or
ds
sbb
repnz
lods
jnp
cmp
or
add
xchg
xor
mov
dec
cmp
xchg
dec
add
fidivl
imul
mov
cmp
fs
xor
mov
add
xor
pop
pusha
jbe
push
lock
cmpsl
movsb
inc
and
jl
xor
add
cs
sub
jle
aaa
mov
ja
dec
push
xor
and
mov
clc
add
cs
sub
andl
xchg
and
adc
cs
and
fmull
jl
mov
cmp
add
jno
jl
fiaddl
incb
jl
mov
ss
sbb
ja
fs
and
or
imul
push
cld
cmp
cld
cmp
icebp
and
xor
mov
jbe
mov
mov
les
daa
mov
jnp
mov
xchg
bound
das
pop
dec
aad
dec
pop
in
insb
into
xor
pop
shr
imul
es
into
or
jae
jge
and
aad
and
daa
movsl
xchg
in
jne
arpl
lock
sbb
loopne
xchg
aaa
or
addl
das
xor
xchg
sbb
enter
adc
cli
cmp
inc
ss
add
lock
mov
jmp
sub
aaa
xchg
ss
ret
loope
xor
inc
jbe
gs
sub
pop
mov
loopne
mov
std
loopne
adc
sarb
jp
daa
jns
sub
mov
aaa
inc
mov
ss
jns
cmp
test
cmp
pop
gs
sub
fld
aas
mov
addr16
cs
bound
hlt
mov
aaa
ds
sarb
or
inc
and
adc
cmp
clc
mov
aas
sub
add
cmpsl
repz
inc
daa
ds
dec
lods
clc
arpl
adc
push
dec
xchg
div
xor
xchg
jecxz
iret
sbb
and
je
shrb
lcall
outsl
subl
out
push
mov
xchg
lods
mov
mov
cmp
pop
test
jbe
std
fs
hlt
sub
fisubl
push
push
rolb
xor
or
push
cld
idivb
mov
or
cmp
sub
cmp
pop
add
hlt
cmp
sub
xchg
sub
jp
and
push
sub
leave
sub
mov
xchg
xor
dec
adc
push
fldenv
mov
daa
outsl
mov
jo
adc
enter
pop
mov
aam
js
push
sbb
mov
insb
imulw
pop
xchg
cmp
popa
dec
icebp
lock
jl
adc
popa
jb
stc
lods
imul
outsl
arpl
ror
lea
cs
sub
shrb
mov
pop
into
pop
pop
in
xor
jnp
jne
xchg
pop
and
mov
lea
fiadds
test
push
mov
inc
jb
inc
cmp
or
adc
jo
sub
add
or
xor
mov
ret
cmp
out
and
inc
xlat
fmull
in
mov
sahf
jle
xor
xchg
in
lahf
cmpsl
in
xchg
out
mov
or
sub
dec
sbb
leave
sbb
das
lahf
dec
or
pop
out
xchg
test
pop
pushf
fcoms
mov
sub
lret
aaa
xlat
and
inc
and
mov
std
sub
xor
jbe
xor
gs
mov
or
mov
cmc
sub
sahf
lds
stc
xor
adc
popa
test
jb
ss
arpl
loopne
push
hlt
cmp
cmp
insl
lret
fldcw
xor
jb,pn
pop
dec
or
jne
insb
test
cmpsl
icebp
pop
or
adc
jmp
ror
scas
and
imul
mov
pop
push
cli
je
add
je
ds
push
cld
jns
stos
jnp
lcall
inc
out
out
hlt
mov
push
or
cld
pop
sbb
std
adc
and
push
inc
inc
std
stos
js
or
pop
sbb
outsl
push
jecxz
jno
adc
and
addb
test
test
std
push
inc
aas
stc
je
add
in
pop
mov
rolb
js
loop
cmp
xor
sbb
lods
xor
and
fcompl
cld
sbbb
stc
cmp
jmp
sti
int3
or
sbb
mov
pop
loope
outsl
mov
out
sub
out
cld
jmp
xor
popa
pop
dec
es
testl
jne
gs
cltd
jnp
test
pop
int3
cmp
mov
in
lcall
xor
and
add
pop
jb
and
cs
pop
jecxz
jl
push
pop
adc
lods
pxor
out
mov
mov
mov
es
mov
jbe
or
pop
sub
sbb
ret
or
pop
test
imull
daa
bound
es
inc
or
push
cmp
push
sub
loopne
mov
xchg
bound
leave
push
pop
push
and
test
dec
dec
pushf
sahf
inc
cmp
push
push
jns
int3
jns
scas
leave
pop
scas
jp
stos
mov
cs
mov
test
sbb
push
cmp
in
icebp
dec
jb
ds
xor
pusha
mov
sbb
imulb
pushf
leave
mov
sbb
cwtl
stos
jl
push
cmp
insb
push
xor
dec
je
fisubl
stos
and
movsb
jl
cmc
xor
cmp
fmuls
sbb
mov
xor
add
mov
sbb
xor
pop
dec
mov
es
es
sub
and
jbe
cmp
or
jl
pop
mov
xor
cs
pop
xchg
inc
jg
inc
sbb
out
xchg
stos
mov
jo
vmovupd
pop
adc
outsb
stc
mov
ficoml
add
cmp
adc
xchg
lods
mov
push
sub
xor
cmpsl
xor
cmp
test
cmp
sti
fwait
bnd
sub
and
outsb
pop
ret
jg
insl
dec
jmp
rolb
mov
scas
iret
insl
push
sahf
cmc
pop
or
xchg
mov
cmp
nop
push
mov
cmp
xorl
mov
mov
addr16
xchg
jl
jno
cli
popa
loope
cmp
mov
push
pop
and
dec
jmp
jbe
adc
int3
lock
loope
cmp
je
jmp
rcrl
mov
xchg
inc
insb
cwtl
inc
sbb
sub
pop
jg
adc
out
xor
push
adc
repnz
js
xor
movb
push
mov
xor
addr16
loope
sub
lock
iret
mov
push
jecxz
scas
mov
movsl
std
mov
ficomps
dec
cmpsl
add
xor
into
pop
stc
fnstsw
xor
push
lods
inc
jne
jb
outsb
fimull
xchg
inc
mov
shrl
xchg
inc
call
sub
mov
pop
enter
sbb
push
adc
or
mov
sub
cmp
adc
lock
loopne
jle
das
cmp
xchg
imul
xchg
and
xchg
jp
pop
in
and
nop
dec
mov
imull
xor
test
or
mov
and
jbe
pop
mov
icebp
daa
push
out
sub
cmp
aas
mov
into
dec
inc
cli
or
xchg
cmp
or
popa
xor
lret
out
test
repnz
mov
fs
pop
in
push
mov
movsl
es
popa
lcall
cmp
dec
mov
mov
fnsave
lock
std
loopne
into
in
push
cmpsb
mov
clc
bnd
loope
or
adc
push
inc
jp
popf
mov
xchg
mov
sub
xchg
out
mov
mov
mov
push
mov
lock
xchg
leave
xchg
jbe
pop
aaa
mov
xchg
setge
jg
sahf
imul
jne
jb
add
pushf
mov
ja
mov
insb
cmp
sub
pop
or
int
jae
push
insl
pusha
testb
sahf
lock
inc
loop
mov
daa
mov
cmc
stos
je
inc
repz
popa
sub
imul
mov
push
ret
mov
mov
leave
mov
xchg
or
fstps
shr
lcall
xlat
lock
cmp
xchg
push
cmp
xchg
jbe
rcll
xchg
mov
stc
xchg
shr
scas
sbb
js
pop
icebp
scas
out
repz
or
push
jmp
pushl
mov
mov
cmp
mov
out
loop
negb
out
and
lock
adc
rorb
int
js
pop
xchg
xchg
pop
xchg
scas
mov
lahf
push
lea
mov
rolb
mov
jmp
pop
dec
repz
bound
addr16
and
xlat
fdivr
sub
cmp
sbb
mov
je
cltd
jecxz
lcallw
inc
xor
dec
push
insl
xor
fstl
mov
mov
and
pushl
pop
inc
sarb
mov
arpl
sti
push
pop
cld
cmp
or
push
inc
pop
sbb
push
arpl
aad
xchg
dec
lods
scas
adc
das
jp
adc
subb
jl
pop
aam
mov
ja
cmp
pop
dec
xor
jbe
sbb
jb
shlb
insb
testb
pop
arpl
mov
aam
xchg
xor
aas
fistps
aad
dec
push
lods
mov
cs
jae
jle
xor
mov
dec
es
lods
xor
inc
mov
data16
in
or
mov
shll
pop
pop
adc
inc
idivb
stc
test
pop
pop
mov
xor
sub
jl
shl
pop
add
cli
nop
dec
icebp
addr16
pop
jle
push
scas
or
jl
adc
imul
fs
lret
mov
mov
fwait
pop
xchg
idivb
cld
mov
mov
imul
cmp
jge
mov
ds
mov
push
test
pop
popa
or
push
sti
mov
je
ret
adc
repz
dec
cwtl
and
inc
or
leave
imul
push
dec
test
out
sub
xchg
ds
mov
inc
notb
addr16
lods
adc
stos
jne
jmp
pop
mov
repz
push
jp
adc
aad
sub
xor
lods
adc
sub
out
mov
fstl
mov
ss
cmp
pop
adc
leave
je
add
sbbb
and
xor
data16
or
insb
loope
cmp
pop
dec
pop
mov
int3
pop
sub
sbb
mov
adc
inc
out
push
xchg
mov
out
cmpsl
cld
xor
popf
push
loopne
insb
add
jno
inc
push
insb
and
inc
pop
shl
dec
shlb
and
or
ss
cmp
bound
jnp
dec
adc
add
andl
repz
mov
jb
in
fldt
enter
aaa
xchg
jg
sub
int3
fstpl
push
cmp
arpl
enter
cmp
pop
outsb
add
mov
outsb
pushf
sbb
mov
imul
cs
xchg
or
mov
scas
push
cltd
add
jns
jbe
iret
es
decl
shl
fstps
insl
pop
into
or
ja
cmp
cli
lahf
mov
jb
jecxz
aad
fisubs
cld
lret
inc
push
cmp
outsb
and
jle
rcrb
and
out
orl
cmp
outsb
dec
lret
adc
enter
mov
inc
lea
mov
std
jo
lea
arpl
xchg
stos
mov
sbb
gs
push
out
fistl
pop
mov
fdivrs
ss
push
fwait
mov
incl
inc
push
xor
jnp
jl
adc
aaa
xchg
and
out
mov
iret
cmp
pop
mov
cli
jecxz
xchg
mov
sub
out
jl
loopne
loopne
faddp
shlb
popa
xor
mov
jge
movsl
mov
sbb
pop
testb
pop
pop
pop
push
mov
ficompl
mov
test
fs
test
sub
xchg
jbe
outsb
leave
incl
jmp
jae
arpl
es
xchg
push
ja
lcall
sbb
xor
cs
adc
decl
xor
jg
stos
add
xor
or
add
jmp
push
scas
arpl
adc
xor
push
repz
and
scas
adc
add
jle
pop
inc
clc
add
pusha
or
clc
add
incl
mov
add
mov
movb
xchg
mov
cmp
push
in
cmp
fdivrs
js
loope
loopne
testb
jmp
pop
stos
push
dec
inc
lret
lods
fs
stos
addl
or
and
cmp
xor
and
pop
dec
cld
sub
xor
dec
jns
jb
sub
sbbl
ds
add
iret
idivl
push
dec
pushf
cmp
inc
and
cltd
pop
fisubrs
lods
pushf
outsl
jns
sub
addr16
sbb
adc
cli
ret
mov
pop
es
or
xor
mov
mov
cmp
aam
xor
ds
push
push
mov
xchg
fnsave
repz
out
xlat
sbb
les
rclb
and
and
xchg
adc
clc
add
xor
jno
xchg
sbb
or
das
cmp
vpcmpgtb
sub
mov
in
inc
iret
pop
roll
pop
pop
icebp
xor
xlat
push
cmc
or
pusha
gs
scas
popf
and
fstpt
jge
mov
adcb
or
push
inc
inc
dec
pushf
shll
in
dec
jns
mov
shl
shrl
pop
sub
push
push
push
mov
scas
cwtl
pop
test
push
xor
addb
andb
and
outsl
bound
mov
imul
inc
jmp
and
mov
add
inc
stc
insl
out
adc
xchg
hlt
cmp
in
stos
or
xor
push
pop
adc
sbb
js
inc
cmp
adc
pop
push
sti
stos
bound
fistpl
dec
ljmp
cmpsl
dec
cs
stos
call
cli
inc
aam
test
sub
jno
arpl
popa
pop
outsb
out
xsave
leave
cmp
and
imul
push
push
cs
jg
lods
jp
loopne
imul
pop
push
and
xor
and
adc
loope
aaa
and
add
mov
jne
cmc
push
repnz
jno
sub
or
xor
das
add
gs
push
push
pop
stos
mov
push
cmp
mov
bound
test
shrb
jp
add
xor
mov
pop
ljmp
clc
and
mov
adc
ja
and
int3
cmp
jb
aaa
push
data16
addr16
lods
cltd
ficoms
add
and
in
rcl
out
imul
mov
xchg
add
sbb
adc
movb
inc
cmpsb
jne
lds
mov
insb
ja
jle
cmp
mov
xor
xor
jb
cmp
aam
cltd
add
lea
xor
push
sub
sub
aaa
mov
push
mov
aas
dec
push
add
xchg
dec
mov
sub
lods
aad
int
sbb
add
incb
das
iret
jb
daa
repnz
sbb
mov
mov
mov
ret
scas
arpl
movsb
dec
cmp
js
mov
movsb
cmp
insb
sbb
ss
mov
add
testl
cmp
je,pn
add
fs
pushf
and
pushf
fisubrs
mov
sub
cmp
ficomps
inc
jmp
push
xor
mov
je
add
aas
outsb
mull
es
dec
cwtl
daa
and
dec
and
dec
adc
andl
and
push
cmpsb
or
cld
xchg
jno
jg
std
sbb
inc
mov
aam
adc
aam
and
mulb
push
insb
mov
and
jne
std
mov
sub
subb
push
push
pop
sub
pushf
out
pop
inc
into
jmp
xor
push
and
mov
das
add
mov
sub
imul
lcall
push
scas
xor
pop
jo
outsb
not
movsb
sub
cltd
in
popf
lds
xchg
fidivrl
cltd
int
bnd
sbb
iret
jo
jp
inc
fs
xor
push
adc
xchg
cmp
push
sbb
stos
repz
sbb
sub
cld
push
jecxz
and
add
sub
cs
cmpsb
not
sbb
cmpl
test
fwait
mov
imul
sub
shr
dec
bound
pop
daa
pop
les
jb
push
imul
out
lret
push
lret
xchg
mov
add
pushl
mov
and
fistpl
in
test
lock
mov
shll
fs
lock
enter
jmp
add
jge
ret
mov
push
sbb
or
imul
mov
dec
mov
imul
arpl
ret
imul
lahf
sbb
sub
in
out
xchg
jp
lds
dec
adc
shll
fsubs
dec
js
adc
movsb
shl
cmp
les
mov
sub
incl
aaa
jl
aaa
sub
in
inc
fdivrs
xor
sbb
popa
into
iret
in
sbb
je
xchg
mov
mov
sub
nop
cmp
loopne
jo
and
clc
mov
insl
pop
int
ffreep
sbb
lcall
je
push
cmpsl
adc
add
xor
aad
jg
jmp
in
jnp
aam
fdivs
push
leave
cmp
into
add
mov
or
lcall
pop
dec
shll
pop
or
sbbl
push
cmp
jnp
bound
decl
inc
stc
das
cmp
ret
pop
pop
mov
xchg
mov
adc
inc
add
imull
shl
inc
ret
sbb
mov
mov
push
dec
aaa
push
lock
cmc
js
push
or
ss
cmp
cmp
dec
loope
cmp
icebp
xor
fwait
sub
xchg
lock
mov
cmp
push
ds
jnp
push
mov
inc
mov
out
fs
add
leave
jbe
push
mov
cmp
fcoml
cmpsl
jge
mov
insl
or
cmp
inc
jo
je
jbe
iret
pop
mov
dec
mov
jmp
into
popa
mov
fmulp
andb
flds
scas
ret
je
sahf
mov
lret
adc
xor
cs
ss
lea
mov
cmp
sub
shlb
faddl
xchg
cmove
mov
shlb
jne
jb
jle
xchg
mov
cmpsl
pop
ror
inc
pop
cmp
int
jno
xor
mov
loop
adc
dec
mov
mov
inc
rorb
inc
jne
sbb
test
cmp
sbb
stos
adc
jp
cmp
mov
notb
int3
pop
and
push
fs
adc
xor
mov
sub
and
jg
or
or
inc
or
adc
cmp
xor
sbb
or
adc
stos
loopne
adc
rcr
jbe
mov
fstps
pop
data16
cmp
lods
std
adc
lods
outsl
loop
test
inc
pop
sub
cmp
pop
int3
outsl
pop
scas
daa
ja
inc
movsb
data16
jno
ds
cmp
ss
push
lahf
jle
pop
in
jl
sub
leave
mov
inc
cmp
push
icebp
lcall
ljmp
aad
shll
mov
out
in
popf
rcrb
leave
or
jns
and
inc
xchg
icebp
in
les
jnp
cltd
mov
lcall
sbb
dec
in
mov
jbe
cmp
xor
lret
pop
adc
xorl
inc
into
popa
adc
adc
pusha
xor
xor
inc
cmp
xor
rcr
push
pop
test
push
push
mov
insl
mov
ja
sbb
sub
or
ret
sub
mov
in
in
negl
js
lret
sbb
sarb
and
into
test
cmp
mov
push
mov
je
mov
jp
adc
mov
shll
decb
mov
xchg
jo
sbb
lcall
sbb
int
out
cmp
test
add
pop
and
aaa
mov
clc
cmp
sbb
push
xor
add
and
mov
xor
jbe
jno
push
push
mov
cli
mov
mov
sbb
push
pop
dec
pusha
arpl
jg
mov
insl
daa
push
stc
mov
je
aad
mov
jnp
mov
dec
fldcw
cmp
sar
loope
pushf
mov
lods
mov
loopne
cmpsb
xor
les
aam
js
ss
mov
adc
xor
arpl
adc
stc
mov
mov
daa
sbb
xorl
sarb
mov
and
dec
lcall
push
popa
test
cltd
int3
ljmp
push
fcomps
or
mov
fldl
inc
cmp
andb
pop
pushl
jl
or
pop
andl
or
adc
clc
stc
inc
js
sub
gs
dec
jo
xchg
xor
daa
arpl
gs
xchg
jmp
jl
insl
mov
out
cmpsb
lret
into
pop
mov
out
or
adc
ds
inc
std
sbb
xor
cmp
fsub
in
add
ja
and
scas
repz
lahf
push
xchg
add
sub
dec
out
dec
add
and
fwait
shlb
adc
push
ret
pop
xor
rolb
jmp
adcl
ja
out
mov
insl
sti
iret
or
testl
sub
mov
cs
sub
sub
sbb
dec
aad
insl
sub
iret
push
cmp
fsubrs
mov
out
aaa
inc
fdivl
aam
xor
mov
cmpsl
push
jge
xor
xor
mov
pop
inc
insb
pop
add
cmc
push
sub
xchg
push
mov
arpl
insb
js
xor
jns
mov
scas
jo
and
inc
stc
fsubrl
das
xchg
xchg
push
mov
lods
or
push
cmp
push
mov
iret
push
out
push
xor
jg
enter
lret
jmp
mov
jnp
push
ss
inc
and
jo
fisubrl
mov
pop
mov
jge
scas
inc
cmp
sarl
cwtl
cmp
and
sub
mov
outsb
cmp
push
pop
popa
data16
jne
fistpl
nop
adc
pop
roll
pop
cli
mov
adc
xadd
or
movsb
imul
xchg
insb
fs
mov
sahf
imul
lea
pop
mov
aad
jle
jnp
jo
sbb
push
imul
push
fcmove
int
and
push
push
add
call
sbb
hlt
jl
inc
xchg
and
mov
push
xor
mov
dec
nop
xchg
out
ljmp
fwait
sbb
jno
cmp
add
int
adc
jl
cmp
sbb
lds
rcr
neg
loopne
adc
sbb
xchg
push
jecxz
iret
std
aad
in
movsb
dec
cmp
mov
adc
das
popa
xor
adc
test
ret
stc
std
loope
push
xor
test
outsl
das
xchg
popa
std
int
push
int3
cmp
outsl
hlt
je
dec
shlb
mov
jae
sbb
pop
mov
andb
add
and
or
std
cmpsl
inc
mov
sarl
mov
add
into
lcall
out
push
repnz
pop
and
push
lcall
jnp
out
push
bound
mov
jecxz
loope
cs
cs
xor
xor
jmp
mov
ret
outsl
adc
or
outsl
jne
cwtl
pop
popa
repz
je
scas
mov
fldcw
pop
jp
jge
cs
xchg
jp
decl
dec
fwait
mov
sub
jne
or
push
xor
fistpl
xor
out
gs
movl
inc
and
or
or
ja
test
es
xchg
pusha
dec
cmp
xor
aam
out
inc
cld
inc
jnp
fbld
bound
in
jb
int3
xor
incb
sub
sbb
cmp
rcrb
add
daa
cmpsb
pop
push
gs
in
mov
mov
rcll
fnstcw
or
pusha
push
test
xchg
aas
fbld
sti
cs
ss
xor
sbb
push
sbb
lahf
scas
ljmp
cmp
les
div
divl
sub
xor
dec
cmpsb
xor
add
cmp
xor
xor
jge
imul
pop
dec
sti
dec
rcrl
or
ds
jo
or
fmul
jbe
xchg
sub
pop
sub
out
mov
sahf
cmp
bound
je
cltd
fldcw
pop
daa
fimuls
sbb
xor
daa
std
sbb
sbb
in
add
inc
cmc
cmp
and
cmp
loopne
lret
ret
and
repz
ja
adcl
lcall
sub
daa
mov
fnstenv
xchg
lock
xchg
mov
sbb
mov
aas
test
and
cpuid
add
mov
pop
xchg
arpl
dec
out
dec
je
data16
ficompl
cmpsl
outsl
and
test
fidivl
sub
imul
xchg
loopne
push
leave
leave
mov
es
scas
mov
sub
push
loope
jle
loopne
fwait
sti
xchg
sbb
sub
cli
shlb
and
fisubrl
add
mov
popf
sbb
sub
std
shrb
cmp
sbb
pop
mov
pusha
xorl
imul
loopne
aaa
mov
adc
pop
repnz
pop
pop
inc
testl
pop
adc
xor
mov
int3
add
dec
push
sahf
and
je
test
pop
popa
jle
pusha
andl
popa
jnp
pop
inc
outsl
cmp
mov
jb
popa
out
add
xchg
outsl
je
pop
iret
mov
mov
xor
dec
jnp
outsb
xlat
ret
inc
bound
aam
mov
jbe
sub
cmp
xor
inc
out
sub
jge
xor
lea
xor
mov
push
jno
mov
arpl
lods
xchg
inc
xor
xor
adcl
pop
pop
jne
fdivs
push
jl
sub
push
fchs
dec
pop
and
sbb
adc
mov
cwtl
inc
in
insb
lea
add
mov
loope
push
jno
dec
shr
xchg
clc
sbb
bswap
les
xchg
sub
icebp
xchg
out
mov
xchg
xchg
add
add
mov
ja
stos
jne
sub
jmp
jns
pop
in
cmp
ds
jb,pt
fistpll
dec
ja
sub
mov
imul
cmpsl
jbe
imul
lods
or
out
mov
andl
cmp
subb
push
sub
and
cmc
popf
pusha
xor
mov
ja
sbb
sar
out
and
sub
mov
push
xor
and
mov
repz
cwtl
cwtl
ss
inc
call
xchg
and
adc
adc
cmp
js
subl
add
sub
add
pop
and
aam
faddp
sahf
rcrb
pop
sbb
or
fmull
jo
xor
add
ret
aaa
mov
push
xor
adc
xor
push
imul
ss
mov
les
cmp
pop
pop
ja
add
add
test
sub
and
mov
in
pop
pop
cmp
jnp
xchg
add
adc
mov
cmc
inc
cmp
rorl
or
cmp
mov
xchg
or
adc
mov
xor
and
aaa
outsb
and
cmp
sub
xor
out
pop
fwait
mov
mov
pop
cwtl
and
fidivl
xor
add
cmp
sbb
xchg
test
andb
ds
cmpsl
arpl
sbbb
fisubl
sub
xchg
scas
push
leave
in
cmp
add
push
sahf
jno
push
clc
or
xchg
lcall
mov
jbe
in
mov
mov
dec
popf
dec
mov
fisttpll
movsb
mov
mov
cmp
xor
push
sbb
dec
push
xchg
out
cmp
lock
or
pusha
xchg
nop
xor
or
mov
gs
inc
mov
stos
stc
out
arpl
ficoml
xchg
add
sub
jae
in
scas
addr16
pop
push
add
scas
mov
sbb
scas
repz
aaa
xchg
sti
sbb
sbb
mov
mov
sub
cmp
je
dec
adc
push
lahf
fiadds
lret
scas
mov
es
repz
in
sahf
lds
rcr
jge
mov
dec
outsl
rolb
push
cmp
jecxz
lret
sub
xchg
or
mov
inc
xchg
add
lods
jmp
pop
sub
adc
pop
shlb
pop
mov
xlat
xchg
pop
incb
std
leave
jns
xorb
xchg
xchg
mov
repnz
sub
pop
sbb
das
dec
dec
jnp
out
outsl
bound
lods
cmp
fnsave
push
inc
add
sahf
cmp
cmp
insb
cmp
movsl
lock
pusha
ja
lea
xor
mov
adc
jg
xor
sub
aad
js
test
fwait
inc
push
or
aam
sahf
xchg
in
scas
jo
sbb
pusha
scas
jne
jno
and
xor
bound
xchg
stos
pop
pop
fidivl
xchg
cmp
aad
dec
jl
sub
das
ljmp
into
fdivr
push
sbb
xor
aas
pop
xor
xor
inc
dec
jge
enter
pop
mov
pop
sub
mov
add
cmp
push
mov
pop
and
cmp
in
shll
addr16
or
cmp
subb
adc
mov
imul
test
das
sub
add
xor
mov
jne
lods
xchg
or
cld
jge
insl
loop
and
lcall
shlb
dec
ss
ja
adc
mov
dec
xlat
sbb
mov
fbld
jmp
subb
bound
iret
stos
sbb
call
mov
sbb
inc
add
jnp
js
adc
test
sub
and
jbe
add
jecxz
fs
loop
faddl
ds
enter
and
ret
cmp
rcll
punpckldq
xchg
jg
lss
inc
shl
nop
inc
mov
pop
and
or
out
insl
scas
and
jb
popa
rol
and
lret
xchg
mov
popf
and
jne
push
pop
add
dec
imul
cmp
popa
push
cmp
add
dec
and
in
mov
inc
xor
rep
pusha
sub
pop
mov
xchg
pop
inc
pop
and
cmp
aad
mov
adc
icebp
js
xlat
dec
fs
sub
rcrb
insb
cmpsb
mov
jmp
ret
xor
jno
mov
inc
ljmp
push
sub
xchg
dec
inc
lahf
je
aaa
xchg
or
jns
iret
add
and
xor
add
cmp
push
mov
mov
inc
mov
mov
adc
mov
inc
scas
in
cmp
cmp
pop
mov
test
cmp
mov
ljmp
and
push
xor
insb
sbb
adc
push
xor
dec
andl
test
shll
stc
imul
xchg
sbb
cmp
xchg
cmp
pop
or
cmpsl
jnp
inc
mov
rcrl
test
jecxz
mov
push
mov
push
mov
inc
stos
les
test
fstl
aam
add
dec
pop
mov
lods
pushf
pop
jp
add
jmp
xor
sbb
gs
mov
cld
aaa
cmp
les
add
adc
mov
sub
adc
mov
cmp
in
adc
jae
push
dec
in
or
stos
and
in
cld
dec
repz
push
mov
pop
mov
pop
or
cmp
hlt
xchg
xchg
or
out
popf
leave
movsl
xchg
lds
test
lock
or
sbb
out
sbb
ds
push
mov
out
cmc
jo
add
xor
cmp
out
call
rolb
fsts
and
int
dec
push
and
mov
xchg
sub
sub
and
nop
lods
enter
jnp
aad
notl
xchg
test
into
imul
lods
mov
scas
aaa
jo
adc
orl
dec
cld
xor
adc
pop
inc
push
movsl
jb
dec
popa
xor
rclb
jnp
and
je
arpl
xor
pop
push
inc
testl
inc
bound
pop
vshufps
ss
xchg
jp
sahf
dec
push
xchg
mov
out
xchg
pop
out
and
cmp
rolb
push
bound
dec
popa
sarl
xchg
fs
mov
js
jne
push
push
ja
jecxz
bound
inc
pop
fstpt
imul
xor
aad
mov
sbb
lock
ja
std
hlt
sbb
mov
out
mov
xor
sub
xchg
cmpsb
adc
pop
xor
cmpsl
push
out
add
mov
sub
mov
add
movsl
dec
adc
testb
jge
xor
push
jns
inc
jno,pn
push
push
jne
je
add
sbb
cmp
adc
enter
and
fsubrs
cmp
fs
insl
outsl
mov
pop
shll
nop
jg
mov
mov
fwait
inc
fisubrl
dec
shrl
cmp
mov
xor
mov
testl
add
sbb
dec
add
adc
push
mov
cmp
pop
pushf
sbb
sub
pop
ljmp
stc
mov
in
pushf
arpl
adc
arpl
cmp
ljmp
jge
test
dec
xor
mov
notl
jae
lods
jge
pop
mov
xor
inc
mov
testl
jge
dec
mov
xor
push
mov
negl
jae
push
lods
xchg
jge
js
inc
xor
mov
bound
xor
pop
fcomp
mov
cmc
mov
cmpsl
cmp
mov
aaa
jnp
dec
sbb
lods
add
xor
insb
pop
mov
mov
jbe
ss
pop
daa
cmp
push
xor
cmp
pusha
push
xor
mov
jge
pop
adc
outsb
insb
mov
push
cmpsl
add
and
and
stos
xchg
js
mov
dec
je
jl
lods
shrb
jge
mov
mov
mov
add
out
out
lods
sti
jae
adc
popf
mov
lods
push
mov
jbe
adc
push
jg
repz
ljmp
xor
sbb
ret
jbe
sahf
push
jp
adc
bound
push
cmp
mov
dec
or
cmp
jl
test
jle
mov
loope
cmpsb
in
cmp
pusha
jl
jnp,pn
dec
and
xchg
stos
aad
and
mov
je
gs
xchg
jno
nop
sbb
cs
cmp
xchg
popa
cltd
xchg
xchg
jecxz
bnd
mov
fidivrl
xchg
loopne
xchg
mov
mov
mov
xchg
cbtw
jae
mov
pop
lods
jge
add
lret
les
inc
jns
dec
jg
pop
lret
outsl
int
arpl
jne
ja
mov
add
je
or
lea
cmove
push
push
mov
mov
outsl
les
pop
pop
insb
mov
incl
loope
push
add
fwait
sub
cmpsb
int3
mov
cmp
fisubrl
push
mov
pop
hlt
gs
movnti
sbb
cwtl
ljmp
mov
imul
fdivrs
mul
push
and
push
mov
mov
fcompl
pop
cmpl
out
mov
mov
fcomi
shll
stc
int3
push
testl
je
lods
mov
inc
jo
sbb
sub
outsb
mov
out
mov
lods
mov
aam
ss
inc
daa
sahf
dec
insb
cmp
fistpll
add
and
or
lock
cmp
pop
es
xor
insl
push
sarb
shll
jbe
sub
call
mov
repnz
dec
adc
xchg
test
adc
pop
cmp
fstpl
daa
mov
mov
sub
daa
xor
les
fstpl
adc
jge
mov
or
sub
xor
xor
pusha
push
and
adc
cmp
or
and
pop
sbb
and
jnp
lret
int3
xchg
and
push
push
jmp
sbb
push
jmp
xlat
xchg
add
repz
addr16
sbb
scas
lret
push
adc
jp
test
sub
xchg
iret
fs
fnsave
addr16
sub
cmp
mov
push
xor
mov
jge
mov
add
clc
mov
jo
das
out
scas
jl
jae
and
fwait
add
sbb
sbb
add
icebp
arpl
bound
and
pop
mov
and
push
stos
movsb
clc
xorb
add
mov
outsb
popa
inc
push
mov
push
inc
sub
dec
dec
imul
andb
out
std
imul
sub
jbe
movsb
mov
dec
pop
sbb
push
sti
repnz
mov
lahf
add
popa
cmp
bound
dec
mov
scas
jge
cmp
std
cmp
sahf
jno
jg
sub
pop
mov
loop
loop
negb
inc
push
xchg
je
xor
rcll
dec
push
pusha
mov
push
push
pop
int3
push
jb
repz
xchg
cmp
cmp
aaa
cmp
cmp
pusha
ds
js
in
sub
insb
cs
das
pop
pusha
cmp
aaa
inc
adc
inc
stos
imul
xchg
add
callw
xor
xchg
jae
xchg
push
dec
xchg
iret
bound
inc
lds
and
scas
cmp
push
pusha
arpl
std
push
sub
popf
xor
xor
jae
and
dec
and
cltd
inc
pop
ficoms
dec
jmp
lcall
inc
aad
inc
mov
int3
ljmp
mov
out
insl
mov
add
cmpsl
mov
nop
cmp
je
add
dec
test
subb
xor
adc
add
call
xlat
cmpsb
cmp
mov
imulb
call
mov
adc
xor
aaa
add
test
push
xor
push
inc
ss
jle
xor
inc
pop
ss
sub
xor
xor
xchg
popa
or
cltd
jns
push
cmp
push
scas
popa
inc
xor
xor
dec
dec
dec
sub
bound
push
pusha
mov
test
repnz
inc
jno
push
aaa
push
sbb
and
cmpsb
aad
mov
cmp
rcrl
lods
test
xor
inc
or
push
push
bound
cs
ja
ds
pop
aad
push
pop
or
daa
mov
dec
fmul
mov
out
cld
mul
lcall
xlat
cmpsb
in
xchg
inc
ret
test
xchg
or
mov
int3
push
pushf
pop
sti
inc
lretw
cs
pop
cwtl
js
lock
adc
pop
scas
inc
mov
fistl
jl
popa
bound
ds
pop
mov
pop
lcall
xchg
repz
cmpsl
xchg
arpl
sub
clc
cmp
ja
mov
fistps
outsl
in
push
imul
pop
rclb
add
or
push
in
cmp
adc
mov
xchg
xchg
stos
push
out
inc
out
ja
sbb
sub
sbb
adc
sbb
je
xchg
hlt
jne
and
push
lds
insb
xchg
mov
jmp
push
data16
insl
xor
out
data16
push
hlt
daa
loope
push
mov
out
xchg
pop
mov
ljmp
mov
imul
mov
jge
inc
insb
xchg
call
cmpb
mov
sub
lock
stos
mov
xchg
jmp
into
push
and
js
or
add
bound
mov
test
mov
add
addr16
xor
xchg
adc
outsw
lahf
adc
push
movsb
sbb
loop
scas
std
jp
das
mov
cwtl
xor
dec
sbb
sbb
add
std
je
push
jg
mov
xor
and
inc
push
or
lods
pop
lds
cmp
ret
cmp
jg
lret
insb
lods
sbb
xchg
aas
jne
loop
pop
shll
pop
cmp
cmpsl
inc
xor
pop
add
inc
pop
insl
mov
jae
jl
test
in
in
outsl
ljmp
cmp
mov
push
cmp
xlat
setno
xchg
sub
sarb
bound
jno
jne
mov
push
mov
xor
dec
mov
pop
add
inc
sbb
scas
mov
push
lods
jno
cmp
cmpsb
xchg
roll
mov
mov
sub
clc
mov
pop
stc
dec
cmp
sbb
fbstp
xlat
fstp
cs
outsb
mov
pop
inc
into
jl
or
push
push
dec
inc
jno
dec
dec
cmpsb
stos
imul
dec
cmp
and
notb
and
pusha
push
pop
mov
js
or
in
xchg
mov
int
mov
fwait
inc
or
jne
xor
add
cmp
in
outsl
jnp
sub
je
add
in
cmp
jmp
and
and
add
and
ds
push
aad
int3
push
cmp
sub
imul
shl
jne
or
add
sbb
dec
dec
push
and
and
mov
push
addb
cmp
pop
test
adc
xor
sbb
jg
inc
jno
pop
sbb
cmp
xor
adc
test
jb
lods
pop
loope
mov
push
xor
jp
push
sub
jg
jbe
shl
jne
jbe
fwait
cmp
jp
lea
outsb
push
push
cmp
cmp
scas
sbb
jo
mov
sub
xlat
pop
mov
xor
xor
push
repz
mov
test
data16
inc
push
pop
das
shlb
cltd
outsb
je
inc
ds
in
xchg
movsb
outsb
movsl
int
dec
test
into
jp
xor
mov
add
jb
xchg
add
xor
xorb
outsb
mov
push
inc
pop
loopne
mov
xchg
add
popa
bound
jl
in
gs
negb
adc
xor
inc
or
xchg
fdiv
mov
mov
jae
pusha
inc
dec
out
sub
testl
xchg
int
leave
faddl
nop
push
adc
cmp
lods
cmp
outsb
mov
idivl
outsl
stos
sub
push
adc
aas
push
mov
dec
in
xor
push
dec
fsubs
jecxz
mov
ja
sbb
dec
mov
cmpsl
or
cmp
xchg
aas
mov
xor
enter
xchg
outsl
sub
insb
cmp
das
sub
enter
mov
mov
mov
cmp
cmp
xor
ret
int3
xor
popf
jbe
divb
es
sub
xchg
rcrb
xchg
stc
sbb
std
pushf
mov
repz
xchg
adc
adc
sbb
xor
cmp
pop
jp
xchg
mov
out
popf
popf
xor
xor
mov
push
leave
sbb
cmp
aas
push
or
push
fs
out
add
imul
inc
sub
sbb
or
pop
loop
push
jge
lods
jne
dec
cmp
dec
call
shr
adc
xor
xchg
sbb
shrb
cmp
xchg
inc
fnstcw
in
std
movsb
popa
add
mov
and
or
add
mov
cli
data16
or
mov
ljmp
mov
in
xor
sub
mov
daa
xor
fidivrs
xchg
clc
adc
add
adc
ja
test
cmpsl
mov
test
enter
iret
cmp
mov
fs
mov
lcall
jnp
cs
dec
inc
or
lods
inc
out
into
mov
jnp
inc
xchg
adc
aaa
test
cmp
mov
daa
pop
adc
rolb
nop
mov
mov
or
xchg
xor
loope
jns
add
cltd
inc
outsb
imul
adc
jo
push
cmp
jbe
out
xchg
adc
shlb
das
sbb
mov
and
inc
loop
jnp
fsts
or
ret
test
ret
pop
dec
mov
ss
sarl
jge
and
mov
push
cmp
push
jp
cli
insb
rolb
int
mov
mov
pushf
fiadds
cmp
cmpsl
lds
push
and
scas
jae
rep
mov
mov
stos
jbe
mov
stc
scas
jno
movsl
leave
inc
imul
outsb
jp
mov
je
cmp
dec
test
push
imul
xor
sub
and
ficompl
inc
jns
and
dec
in
pop
lret
je
je
mov
test
rcrl
dec
push
mov
std
lret
pop
setle
add
push
push
adc
in
pop
jae
cmp
mov
add
out
sbb
xchg
fisubrl
cmp
sub
cmp
dec
push
pop
and
mov
dec
into
loope
loope
das
stc
inc
xchg
incl
xchg
mov
inc
jge,pt
into
jne
jl
je
aas
add
fdivrl
adc
out
sbbl
push
mov
fs
sbb
sub
daa
jg
pushf
cli
int
push
in
call
add
in
and
shrb
ds
scas
jns
mov
mov
inc
cltd
adc
jecxz
dec
push
fisubl
outsb
ds
sub
jb
mov
in
nop
outsl
sub
jg
sar
sar
pop
insb
mov
pop
adc
or
cltd
mov
faddp
notb
push
mov
in
sbb
iret
mov
or
cmp
xchg
popa
jb
push
out
cmp
loopne
movl
addr16
xor
jp
jo
mov
aad
shlb
data16
mov
and
inc
sub
push
push
pop
lret
fidivrl
cmp
jbe
dec
mov
outsb
or
push
in
lock
aaa
push
nop
or
inc
or
dec
add
pusha
jae
cmp
mov
out
or
cmp
daa
pop
fwait
sbb
xchg
jge
xchg
gs
aam
insb
add
test
jb
leave
test
inc
ljmp
xor
ss
mov
rcr
das
insl
pop
and
mov
out
push
daa
add
ret
xor
mov
adc
call
jnp
sub
mov
sub
jo
pushl
add
in
cmp
leave
sarb
pop
push
out
cs
pushf
mov
mov
lret
insb
and
je
push
subl
cmc
ja
and
ret
fldt
xchg
push
hlt
and
cmp
iret
mov
and
cltd
or
sub
inc
ret
jns
cmpb
jne
mov
or
jge
in
nop
pop
xor
lea
lahf
xor
ret
jge
dec
aam
int
add
mov
xchg
leave
mov
jo
xor
inc
ret
pusha
in
ret
scas
in
sub
cwtl
ret
cmp
test
in
test
add
add
or
adc
or
data16
jb
popa
jns
outsb
je
xor
popa
das
jbe
gs
imul
mov
pusha
and
mov
in
fdivrl
out
lret
cmp
xchg
mov
jp
enter
stos
ss
sub
repnz
fcompl
pop
clc
inc
leave
aaa
add
outsl
xor
lahf
adc
pop
out
ss
push
inc
cli
mov
adc
insb
repnz
jne
xor
xor
fwait
repz
imul
into
stos
iret
inc
xor
dec
xor
sub
jle
mov
mov
inc
ds
aaa
aaa
push
mov
or
shll
or
das
dec
mov
push
scas
dec
mov
cld
mov
jb
mov
jo
fldt
push
mov
pop
and
pop
je
adcl
sub
pop
insl
ret
add
sub
add
je
decl
enter
pop
out
inc
or
fistps
push
push
or
inc
cwtl
pop
mov
push
ja
push
mov
ja
sub
jns
cmpsb
or
and
sbbb
aas
inc
dec
in
xor
cmp
cmp
xlat
push
adc
xor
fadds
popa
and
inc
incb
stos
or
xor
mov
push
gs
jl
iret
cmp
daa
jae
movsl
outsb
es
push
aaa
add
negb
mov
test
jb
negl
inc
sub
ds
cmp
mov
jns
sub
xchg
add
push
into
mov
repnz
mov
les
mov
mov
push
push
dec
mov
lods
mov
cmpsb
in
rorb
inc
push
js
enter
dec
inc
or
inc
or
cmp
push
pop
mov
pop
pop
arpl
shlb
movsl
clc
jp
inc
sbb
inc
lret
cmp
add
push
jl
sarl
loopne
loop
outsl
adc
mov
adc
cmp
outsl
ds
xlat
xchg
xchg
lock
testb
out
aam
mov
js
imul
sbb
stos
or
lea
dec
daa
sti
cmp
arpl
push
push
xchg
outsl
and
sarb
jnp
lock
nop
fwait
mov
cmpsb
jmp
fsubr
mov
ja
xchg
movsl
bound
push
xor
adc
jl
mulb
push
lret
jmp
jo
popa
pop
sub
test
loope
cs
and
shl
stc
xlat
clc
ss
sub
shl
das
repz
leave
out
cmc
sub
and
push
mov
daa
pusha
pushf
pop
sub
arpl
or
pop
inc
arpl
cmpsb
popf
fs
out
div
aas
out
adc
int
mov
mov
push
js
out
scas
and
or
das
inc
mov
aam
add
xor
add
dec
cltd
cwtl
lret
loope
cmp
cwtl
cmpsl
adc
ja
xor
sbbb
pop
ret
jae
aaa
mov
cmp
in
pop
adc
and
add
jno
xchg
shll
cwtl
cmp
cmp
cmc
sub
aaa
fdivs
xor
popa
xor
jno
cmpsb
fs
ds
dec
add
sbb
mov
dec
and
push
test
xor
jo
stos
jnp
cmp
out
movsl
rorw
jg
clc
sarl
push
pop
sarb
scas
xor
sub
cwtl
mov
sbb
inc
fstl
mov
xlat
loop
cmpb
push
xor
movsl
les
shrl
mov
xchg
inc
lret
or
jns
cli
xor
aam
test
push
jle
mov
push
cmp
loopne,pt
lcall
inc
sti
inc
repnz
add
inc
xchg
pop
pop
cmp
or
dec
das
out
pop
sub
jl
and
push
xor
mov
and
push
jge
jg
jbe
jnp
sub
movsl
and
in
adc
fdivrl
dec
jl
adc
lret
lar
aaa
in
inc
jl
sbb
inc
das
dec
jmp
cmp
xchg
fidivrl
mov
gs
pop
add
cli
inc
aaa
je
jecxz
adc
ja
lods
jle
or
stos
and
xchg
fnstsw
add
aaa
inc
jae
xlat
xchg
fs
fldcw
mov
iret
jp
sub
outsl
xchg
shrl
and
ljmp
out
movsb
aam
xchg
fistps
mov
mov
push
cmp
pop
mov
test
jns
xor
sbb
dec
fstpt
cmp
adc
repz
cmp
popa
mov
aas
mov
jg
jmp
enter
fadds
test
xlat
and
call
movsb
pop
inc
jg
cmpl
xchg
inc
cmp
mov
xor
enter
and
ljmp
add
mov
ljmp
mov
out
mov
mov
negl
bound
jl
pop
lock
adc
mov
movsb
iret
cmp
sub
test
movsb
cli
add
cmp
fidivs
and
mov
gs
or
test
jo
pop
imul
cs
add
outsb
hlt
notl
sub
cmp
mov
arpl
test
fldl
and
inc
in
or
scas
cmp
cmp
leave
push
daa
cmp
mov
es
push
lret
xchg
in
dec
std
adc
repnz
mov
jl
mov
adc
dec
cmp
test
aaa
mov
mov
push
xor
push
xorb
push
in
xorb
mov
popa
mov
lods
xlat
xchg
imul
lds
mov
mov
mov
jp
outsl
cmpsb
pop
add
stc
inc
add
out
test
cmpsl
stc
loopne
and
fwait
adc
aam
mov
lods
aam
mov
aad
pop
add
sub
jo
int3
test
in
sub
fdivrl
frstor
xor
pop
data16
adc
adc
fdivl
mov
ret
ja
repnz
loopne
xor
scas
xchg
lock
cmc
test
and
sbb
sub
mov
aam
pop
test
test
or
idivl
sbb
jae
int
shl
mov
popf
and
call
test
cmpsl
je
pop
cmp
pop
cmp
test
dec
and
in
mov
push
mov
lock
mov
std
xor
iret
stos
das
lods
fdivrl
jmp
cmpb
rcrb
out
jmp
pop
cwtl
mov
daa
pushf
cmp
or
cli
adc
jbe
xchg
addr16
fldcw
icebp
xor
xchg
push
cmp
adc
aam
fdivrs
cmp
mov
sub
inc
in
add
xchg
mov
stos
add
pushf
in
das
outsl
popl
clc
mov
sbb
cmp
jno
pop
mov
jb
lods
lds
and
ret
stc
add
or
in
or
das
cmp
sti
push
ret
cmp
mov
pop
aaa
mov
xor
das
push
rclb
mov
adc
mov
ret
lods
xchg
inc
mov
mov
mov
cld
pop
ds
repnz
iret
or
adc
adc
mov
sub
mov
dec
mov
xor
stc
enter
test
push
int
aad
push
lock
test
dec
add
sub
inc
push
popa
out
push
pop
jns
and
imul
stos
loop
and
push
cwtl
dec
add
adc
xchg
neg
cmp
mov
fs
jmp
mov
inc
mov
repz
xor
lods
fscale
xchg
cmp
outsl
dec
shl
rol
adc
add
jle
cmp
sbb
fimull
xor
mov
icebp
sub
cmp
sub
fnstenv
xchg
inc
insl
jbe
cmc
cwtl
mov
lret
sub
xor
add
jne
iret
sub
rol
adc
or
cmp
dec
xor
iret
gs
or
int
mov
outsl
stc
shll
mov
adc
xorb
cmp
mov
cmp
cmc
cld
and
mov
jns
cltd
push
outsl
add
xor
xor
insl
int
inc
sub
cmp
test
leave
mov
ss
cs
aas
idivl
xchg
inc
sahf
mov
aaa
pop
ja
jmp
pop
jae
repz
jp
enter
adc
mov
dec
cmp
jmp
sub
jb
jno
dec
xor
repnz
jp
cmpsl
inc
sub
mov
sub
out
xorl
push
sbb
rorl
nop
ja
stos
pop
mov
push
jge
daa
jle
in
pop
je
and
jae
xor
mov
sub
out
imul
mov
inc
xchg
lds
and
xor
test
shrl
fldt
jbe
xor
bound
push
shrb
adc
clc
arpl
dec
repnz
dec
call
adc
cltd
jmp
jecxz
pushf
jne
cmp
je
mov
xor
push
xchg
add
ljmp
mov
sahf
lret
outsb
mov
inc
fwait
cmp
dec
mov
push
std
out
xor
addl
mov
rclb
shrb
scas
lret
cmp
xor
jne
cmp
adc
lret
jb
bound
ss
cmp
xchg
xor
pop
and
adc
sub
sbb
pop
dec
pop
or
jno
shrl
not
aaa
ss
es
idivl
jb
arpl
xor
and
insl
xchg
sbb
sbb
push
or
hlt
bound
call
sti
fidivs
sbb
xor
bound
jl
push
lods
mov
push
iret
or
push
xor
xor
and
sub
add
scas
sub
cmp
outsb
push
xchg
mov
adc
loope
cld
cltd
sub
imul
pushf
arpl
les
idivb
lock
inc
cmpb
sub
in
popf
insl
mov
mov
xor
xchg
arpl
lods
fbld
mov
jge
jnp
xchg
std
cmc
push
loop
pushf
pop
idivb
mov
push
push
nop
cmp
cmpsb
cmp
or
and
mov
sbb
add
imul
push
push
xchg
sub
sbb
mov
push
inc
movsl
push
sbb
jnp
les
dec
mov
sub
xchg
xchg
pushf
stos
stos
mov
jns
fbld
and
xor
pop
pusha
mov
lods
mov
lock
xchg
pop
sbb
sub
xchg
pushf
ja
xchg
test
repz
xchg
xchg
in
rcr
fwait
lahf
les
cmpsb
pushf
add
lods
cld
push
ss
lods
hlt
jns
adc
icebp
cmpsl
cwtl
pop
fbld
sub
mov
push
jno
xlat
add
nop
es
popa
insl
xlat
push
insl
loop
push
fsubs
data16
push
arpl
insb
push
stos
mov
loop
mov
mov
jle
sbb
cld
std
xchg
xchg
mov
or
ljmp
xchg
sbb
xchg
jne
addb
daa
dec
pop
xchg
mov
popf
loopne
jae
add
xchg
repnz
inc
lcall
and
sub
call
pop
push
and
pop
adc
mov
fsubrs
cmc
out
lds
inc
xchg
jns
add
sub
rolb
push
std
sub
push
mov
js
push
arpl
imul
int
mov
daa
stc
aad
inc
ret
jbe
jne
outsl
bound
cmp
lret
out
mov
arpl
adc
jp
pop
ficomps
xchg
stc
jae
into
int3
inc
and
xorl
cmp
jnp
mov
aam
push
jo
mov
jl
pop
sbb
ds
std
sbb
add
testb
inc
shll
push
lds
fs
cmp
sub
fadds
icebp
lods
repnz
out
sub
cs
xchg
mov
pop
or
imul
inc
clc
ds
cwtl
mov
in
arpl
fcompl
daa
addr16
in
dec
and
or
xor
insb
push
test
adc
aam
push
cmp
in
or
push
pop
lcall
pop
hlt
push
shlb
inc
out
dec
mov
test
fwait
and
ja
sbb
clc
repnz
inc
jmp
and
out
fnsave
xchg
lock
movsb
mov
dec
in
out
sbb
push
xchg
push
xor
cli
lahf
mov
pushf
int3
inc
jno
leave
mov
test
pop
jnp
aad
or
inc
sub
lahf
push
sbb
js
xchg
mov
or
decl
cmp
js
mov
jge
or
pop
push
je
das
nop
add
add
xchg
jle
jno
or
repnz
mov
sbb
outsb
ss
push
loopne
je
dec
vmovupd
push
fwait
idiv
pop
xchg
outsl
mov
add
lds
pop
pop
or
dec
inc
adc
cmp
mov
fldenv
sbb
pusha
fucomip
adc
adc
rorb
mov
popa
sub
lods
adc
and
leave
mov
pop
cmp
jo
mov
or
jl
jp
cli
repz
xor
inc
pop
mov
jl
or
rcll
imul
test
mov
jb
cmp
or
sbb
add
dec
sub
adc
xor
push
adc
js
push
inc
and
pop
add
cmp
testl
repz
cmpsb
and
call
out
gs
pop
push
jns
jb
xor
and
xor
cwtl
sub
js
rcll
sub
sti
das
aam
and
jnp
loope
sub
xor
push
sub
movsl
inc
add
call
push
pop
mov
add
xchg
push
push
daa
stc
js
xchg
fs
cmp
mov
inc
sbb
test
fldcw
imul
scas
data16
stos
bound
stc
ja
jge
int3
xor
jae
cld
sub
jg
lods
ret
loope
pop
push
iret
mov
sbb
test
das
or
pop
popa
mov
xchg
ret
lea
jmp
int
fdivl
mov
jmp
popa
sub
cmp
mov
inc
outsl
fcmovne
arpl
nop
add
fidivrl
sahf
cmpsb
aas
dec
int
cli
int3
push
jecxz
mov
outsb
loope
out
pop
push
xor
pop
xchg
sub
loopne
pop
jg
mov
sbb
cs
in
mov
xor
add
repz
and
lea
ljmp
mov
mull
ret
scas
cmp
xor
sti
xchg
lcall
mov
push
call
push
lcall
jl
negb
in
dec
jb
add
mov
cmpsl
sahf
xor
xchg
pop
fistpll
pop
lret
out
lods
mov
stc
dec
outsl
adc
xchg
cmp
pop
inc
cmp
ficomps
sub
inc
cmp
sub
scas
sub
mov
mov
in
xchg
mov
imull
mov
lods
incl
jecxz
jecxz
xchg
aad
js
or
lea
sub
cmp
xor
mov
add
fs
push
insb
and
stc
jl
cli
pushf
lock
jmp
lds
push
cmp
imul
pop
add
mov
in
sub
dec
sub
insl
mov
adc
add
imul
adc
ds
sbb
rcll
fsqrt
in
movsb
or
and
mov
arpl
cmp
aaa
mov
ss
inc
mov
ret
lods
mov
fst
jne
jle
fisttps
pcmpeqb
or
pop
inc
xorl
mov
iret
iret
inc
scas
cmpsb
mov
dec
add
sahf
out
cmc
ja
popf
jo
in
inc
call
and
xor
ret
int
pop
cli
cs
inc
and
scas
cmp
cmp
xor
pop
in
sub
pushl
cli
repz
add
push
aam
mov
or
test
fcomip
mov
xchg
mov
pop
or
daa
int3
push
xchg
test
jae
mov
outsl
jecxz
pop
mov
xchg
mov
add
cmp
xchg
in
fs
and
repnz
inc
sub
jo
xor
or
scas
mov
jae
jg
out
lret
loopne,pt
nop
pop
cmpsb
cmp
xor
in
jg
sub
aaa
xor
inc
js
pop
daa
cmp
push
enter
stos
jns
jecxz
jno
sbb
out
xlat
dec
scas
lock
test
cmpsb
mov
inc
fsub
jns
cltd
add
push
iret
cmovne
sub
pop
jno
mov
sbb
ljmp
cmp
in
jl
fwait
jb
mov
xchg
cmp
mov
jnp
jae
mov
bnd
mov
jg
mov
andb
repz
mov
cli
shlb
ss
rcll
dec
mov
out
push
jo
push
leave
call
xor
sarl
in
pop
iret
lock
movsb
loope
cmc
xlat
xlat
js
lds
dec
pop
add
mov
mov
inc
mov
add
enter
fildll
call
int3
mov
mov
jne
dec
and
or
cltd
dec
mov
into
pop
insl
xchg
addl
movsl
cli
sbb
mov
push
js
rolb
pop
cltd
nop
outsl
ret
mov
int3
sbb
clc
je
cmp
jg
mov
es
jne
jb
fxch
or
aam
or
jg
pop
pop
das
inc
stos
shrb
cmp
test
sahf
imul
xor
pop
out
imul
fistl
xchg
mov
mov
inc
jbe
stos
mov
dec
jb
pop
inc
insb
xor
aaa
dec
push
jno
int3
in
call
push
daa
jg
jb
out
cmpsl
xor
mov
enter
mov
shll
or
ds
and
xor
leave
mov
jmp
jle
rclb
pop
mov
pop
enter
rcll
pop
mov
jns
and
ret
lea
and
insb
stc
in
or
sti
cwtl
adc
push
cltd
lret
sbb
push
fcoml
cmp
scas
cmp
lods
iret
mov
inc
lods
ja
repnz
sbb
dec
mov
cmp
mov
push
stc
jl
jmp
inc
inc
mov
out
add
jbe
dec
mov
popf
xor
sbb
lret
push
and
xor
cli
into
ljmp
dec
shlb
mov
inc
sub
push
leave
mov
jae
sub
jnp
sbb
sub
and
cmpsb
jbe
push
dec
jne
sbb
mov
fcompl
cmp
sbb
lahf
js
mov
jae
push
jl
sbb
xor
mov
sbb
sub
out
faddl
cmp
sub
adc
or
gs
arpl
sub
xorb
cltd
ds
jmp
add
icebp
adc
dec
and
and
loope
jb
add
rolb
mov
call
xchg
inc
mov
push
xor
or
push
jne
sti
or
adc
or
out
rol
arpl
sub
mov
ljmp
testl
jge
lret
cmp
pop
add
add
add
sbb
sub
ja
dec
or
mov
sub
pop
cmp
jne
adc
add
jne
jo
arpl
cmp
xchg
xor
cmp
xchg
data16
xchg
ret
ljmp
enter
loopne
sub
xor
outsb
xor
bound
jle
jo
insl
or
int3
pop
jg
push
mov
movsb
cli
push
frstor
jo
mov
fwait
or
cmp
bound
into
aas
add
add
jecxz
jne
insl
je
nop
adc
adc
movsb
sbb
dec
int
fldt
adc
jb
adc
push
mov
inc
stc
jae
sub
sub
test
je
sbb
int
sub
sub
divl
jl
fsubs
mov
sbb
pop
or
mov
loopne
imul
shrb
fimull
shr
lahf
je
fstl
aam
jbe
inc
mov
jne
movsl
je
cmp
or
shll
les
lock
jnp
pop
sbb
es
addl
popf
jae
and
mov
xor
mov
add
sbbl
sub
sub
adcb
scas
xlat
push
mov
data16
cld
in
mov
aaa
pop
addr16
mov
nop
and
shl
dec
mov
dec
pop
pop
pushf
xor
in
stos
je
in
cmp
nop
cmp
ljmp
imul
inc
imul
sbb
int
enter
xor
push
popf
jmp
mov
aas
shl
mov
sbb
ss
insb
and
in
sbb
popa
addl
adc
jge
or
jg
scas
fisubs
adc
stc
jnp
rcl
mov
ja
dec
pop
sbb
add
mov
pop
fsub
push
pop
test
add
roll
lods
ja
test
je
mov
mov
push
xlat
dec
sbb
test
and
repz
pop
sarb
aaa
data16
mov
pushf
push
aas
or
xchg
and
test
loop
mov
mov
in
dec
repz
out
sti
push
mov
sbb
mov
mov
addr16
sar
cs
or
js
jns
pop
outsb
es
push
movsb
aas
push
test
or
jns
xchg
movsb
mov
and
pop
insl
jg
dec
or
fsubs
and
cmp
push
out
mov
sbb
mov
stos
andl
int3
xchg
push
and
fwait
dec
push
sub
push
or
in
adc
pop
pushf
mov
inc
stos
mov
and
repz
shlb
inc
into
or
sub
cmc
data16
pusha
jbe
cmc
push
movsb
leave
addr16
sub
push
add
cmc
xor
je
jecxz
scas
inc
xchg
sbb
inc
cmc
xchg
stos
mov
cli
jo
adc
inc
call
popa
loopne
lods
inc
pop
fisubrl
mov
pushf
adc
push
sub
and
jecxz
inc
mov
pusha
and
sbb
sbb
pop
mov
adc
sbb
rorl
mov
adc
ja
lods
pop
mov
dec
mov
cmc
pop
push
mov
aam
sub
xor
adc
xor
and
push
add
in
dec
and
jl
xor
fsts
frstor
mov
mov
inc
ss
xchg
lea
daa
iret
mov
sbb
adc
ss
lock
popf
fwait
pop
int3
popa
stos
fmul
lcall
inc
jecxz
push
xlat
dec
cmp
mov
js
or
push
popf
lret
push
add
fnstsw
cmc
hlt
or
imul
and
and
leave
sub
dec
jbe
pop
dec
xor
and
pop
mov
mov
in
adc
xchg
xor
xor
imul
orl
jl
fwait
push
idivl
and
inc
inc
sub
pop
into
push
mov
cmp
and
xor
fisttpl
sub
or
sti
cmpsl
shlb
mov
daa
mov
aas
push
pop
cltd
adc
inc
outsl
xchg
push
push
jns
insb
mov
push
insb
jne
mov
xchg
push
fldenv
pushf
dec
mov
xor
hlt
mov
cmp
pop
adc
mov
xchg
rol
lock
int
and
push
mov
ljmp
icebp
mov
ss
lret
scas
jge
mov
mov
mov
ss
outsb
lods
xchg
gs
lret
nop
mov
adcb
rol
push
jle
ss
sarb
and
jno
pop
cmp
add
push
aaa
pop
insl
xor
pop
shlb
jg
push
jns
or
pop
sbb
adc
je
shr
jne
sbb
sub
sahf
and
jne
jns
and
ret
jnp
out
repz
imul
movsl
jg
adc
lahf
cmpsl
shlb
jns
out
xor
addr16
je
lret
pop
push
cmp
cmp
and
sub
cs
js
sub
dec
push
es
jb
adc
aam
jbe,pt
dec
xchg
test
push
lahf
ss
sbb
aaa
mov
xor
comiss
ds
add
cs
movsb
dec
pop
test
aas
out
and
sub
add
shrl
add
add
adc
xchg
jns
movb
stos
insb
fbld
fwait
test
lret
addr16
aaa
insb
sub
push
and
cmp
and
in
ss
out
js
pop
cmp
fdivs
or
stos
sbb
xor
je
pop
in
std
cmpsb
lods
mov
enter
cs
push
cmp
push
jns
mov
popa
pop
repz
sub
push
adc
sbb
xchg
cmp
repnz
pushf
fs
xchg
iret
mov
ja
cmp
pop
add
sbb
mov
daa
insb
pop
mov
or
mov
scas
sbb
pop
cmpb
lods
test
aad
mov
ficoml
ljmp
dec
adc
add
sbb
aam
xlat
cli
dec
lods
jae
add
push
mov
adc
pusha
stos
xchg
testl
aaa
in
outsb
int3
rclb
pop
and
ret
aaa
cmp
ss
mov
inc
insb
jl
xor
outsb
jne
jnp
push
insb
dec
sbb
pop
scas
mov
lods
jnp
jmp
pushf
lcall
sahf
sub
out
repnz
mov
sbb
cmp
sub
mov
push
insb
add
cmp
jbe
sub
pop
xor
xchg
push
mov
push
es
pop
push
cmp
andb
mov
arpl
int3
je
movsb
shrb
jb
mov
and
xchg
dec
fimuls
dec
xlat
lods
lret
cli
shll
shll
sbb
jno
xchg
clc
mov
pop
shl
push
add
mov
pop
and
loop
stos
add
jle
add
xor
imul
lcall
jbe
aaa
mov
jmp
loopne
es
ss
loopne
mov
sbb
pop
pop
ljmp
jmp
adc
xchg
lahf
push
mov
mov
pop
or
sti
in
js
cmp
stc
stos
adc
add
push
ja
ja
out
jnp
push
cmp
mov
add
inc
sub
sbb
mov
jg
aas
iret
outsb
adc
arpl
in
das
mov
jge
xchg
sbb
cmp
adc
sbb
add
sub
xor
mov
cmc
in
fildl
shlb
mov
adc
push
mov
or
das
stos
sbb
add
lods
test
lds
push
pop
mov
iret
outsb
push
pop
push
or
pop
xlat
cs
fldl2e
sbb
add
fidivl
popl
clc
pushf
mov
inc
test
pop
or
mov
lds
inc
int3
push
sbb
or
inc
cmpsb
inc
push
jmp
xchg
inc
cmp
dec
inc
pop
xchg
or
mov
scas
iret
xchg
mov
and
and
in
mov
pop
push
sbb
cli
cmpsb
or
cmp
mov
loope
pop
sbb
or
cmpsl
and
inc
std
or
mov
fnstsw
lret
sbb
gs
arpl
jb
lea
cli
cli
data16
add
sub
pop
jecxz
push
jno
mov
adc
fistpl
jnp
jb
insb
mov
cmp
jo
push
xor
push
mov
sub
add
idivl
xor
pusha
jae
or
lds
bound
adc
sub
push
or
stos
scas
pop
daa
rdtsc
xor
icebp
lods
and
sub
fmull
stos
stc
sbb
mov
testb
add
loop
shrl
pop
cmp
pusha
inc
iret
call
mov
ja
lret
jp
in
dec
inc
cmpsb
jno
sub
inc
cli
andl
sbb
inc
dec
movsb
pop
jnp
add
cmp
xor
aaa
out
add
cs
sub
sub
js
js
mov
and
pusha
mov
and
pusha
mov
and
xor
push
jbe
in
jns
pusha
insl
jns
mov
iret
sub
and
jp
cmp
pop
arpl
dec
cmpsb
outsl
sub
out
aaa
aaa
imul
add
cli
mov
dec
aam
mov
daa
jns,pt
mov
mov
sbb
mov
mov
in
adc
and
loop
imul
hlt
cmp
outsl
jg
sbb
pusha
imul
xchg
jns
repz
cmc
add
popa
dec
add
pop
mov
lret
leave
add
stos
ds
insl
push
jl
add
repz
and
jb
ret
in
inc
or
orb
xor
pop
fcompl
push
faddl
sub
jb
dec
dec
pop
xchg
data16
ret
jg
fbld
loop
xchg
gs
daa
jns,pn
imul
arpl
aaa
cmp
cmp
pop
or
pop
js
or
sarb
xor
out
sbb
in
adc
daa
xchg
sub
cld
rcl
mov
loopne
mov
xor
into
xchg
ljmp
xchg
into
repnz
xorb
push
lock
sub
int
cmpl
pop
lret
or
stc
lcall
mov
mov
xor
push
xor
es
push
gs
pop
imul
mov
push
inc
inc
mov
test
xchg
das
arpl
jae
pop
cmp
in
mov
stos
in
mov
mov
out
mov
inc
pop
mov
mov
mov
inc
dec
sbb
adc
push
mov
or
jge
ds
aad
and
sbb
and
mov
or
or
sti
adc
mov
test
mov
icebp
jg
loope
leave
push
testb
repnz
jle
mov
dec
out
pop
js
mov
mov
iret
inc
xor
loope
xor
cltd
outsb
mov
cmp
addr16
push
xchg
ja
pop
data16
sub
or
jl
jge
insb
bound
jnp
sub
or
dec
ds
jp
int
jo
aas
push
cmpsl
sbb
push
adc
lcall
cmp
adc
sub
xor
and
fsts
push
cs
jo
stc
xor
sahf
outsl
and
fcmovu
bound
incl
jno
test
mov
jns
pop
gs
push
fistpl
test
clc
hlt
sbb
mul
pop
mov
jne
adc
push
aas
or
xlat
es
test
push
pop
mov
jbe
std
pop
xor
dec
mov
pusha
push
sub
jg
sub
adc
sbb
xor
jno
insl
int3
and
push
ret
sbb
mov
pop
mov
into
aas
sub
aas
fstpt
pop
fisubs
or
in
lahf
xor
xor
dec
add
aaa
lea
and
test
cmpsl
cmp
nop
repnz
mov
mov
insl
push
xor
jp,pt
ljmp
iret
outsb
mov
nop
mov
lahf
cmp
ja
andb
cmp
popfw
bound
out
out
cs
jbe
daa
jl
gs
popf
lahf
or
lahf
push
mov
sub
mov
sbb
jg
adc
imul
jb
push
cs
adc
cltd
cs
dec
in
aaa
stc
or
fisttpl
xchg
in
pop
leave
pop
dec
inc
and
jg
loopne
jle
cmpb
jge
jmp
inc
std
stos
adc
cmpsb
jns
mov
mov
cs
and
or
pop
cmc
mov
xchg
dec
das
push
adc
jno
adc
and
ss
in
pusha
cwtl
mov
hlt
mov
xor
fldt
test
mov
inc
sub
jno
stos
xchg
jae
fwait
mov
aas
icebp
cmc
cs
adc
fcomip
or
ds
xor
shll
or
mov
jl
lods
stc
mov
add
or
fidivrl
xchg
ds
mov
and
out
cmp
rolb
inc
add
fs
and
sahf
add
testl
rcrb
jbe
mov
stos
call
movsl
mov
sub
push
lods
cmp
loope
popf
xchg
cltd
inc
fdivrp
and
mov
pop
nop
aas
sub
roll
pop
adc
jmp
pop
mov
jmp
insb
inc
sbb
mov
fldcw
fcom
sub
sub
loopne
imul
push
mov
ret
sbb
sbb
push
push
shrl
or
ljmp
inc
sub
sahf
push
xor
test
mov
lods
jo
daa
jle
nopl
inc
jmp
sbb
xor
push
ret
pushf
jno
insl
sbb
pop
leave
pop
cmp
popf
mov
jne
xchg
outsb
test
das
or
je
xor
jno
repnz
push
push
mov
sbb
in
and
xor
cmp
icebp
sub
cltd
ss
or
xchg
jae
cli
dec
and
pop
sub
enter
sub
adc
cltd
or
in
cmp
insb
jbe
dec
jb
sub
inc
dec
int
insb
movsb
add
xor
int3
sub
xchg
in
addr16
int3
dec
adc
bound
mov
fsubrs
ds
shll
xor
jae
lds
test
pop
add
or
adc
mov
lods
cmp
xor
mov
decl
push
xchg
out
hlt
mov
push
out
ret
in
push
test
pop
add
mov
mov
das
sub
mov
out
movsl
and
add
add
cltd
inc
fstps
or
std
ss
sahf
aas
fldt
je
jmp
sub
fstps
sbb
mov
js
dec
jns
xor
sub
pop
imul
incl
popl
dec
sub
jge
int
dec
fs
inc
inc
aad
popf
das
cmp
hlt
xchg
ret
inc
pusha
in
push
inc
rcrb
call
fcmovb
hlt
in
mov
into
aaa
js
and
jecxz
or
leave
aas
fdivs
rcll
in
in
lds
or
dec
mov
jp
mov
shr
dec
push
imul
das
cmp
cmp
pop
stos
test
inc
daa
mov
fsubrl
sub
hlt
sub
int3
jecxz
jecxz
mov
es
out
int
mov
in
mov
roll
or
push
enter
inc
outsl
sub
aad
pop
popf
add
roll
push
jecxz
sub
jp
lods
fs
ja
lret
cmp
push
inc
mov
ds
cmp
cmpsb
dec
inc
xchg
xor
jp
jmp
aas
imul
test
in
outsb
push
dec
fbld
jp
push
outsb
je
outsl
aaa
mov
jno
xor
scas
jl
in
xor
mov
mov
jae
push
fnstenv
mov
scas
jbe
lret
cmp
mov
lea
data16
xlat
insl
sbb
add
pop
push
repnz
ss
movsl
dec
mov
outsb
rorb
sar
orl
sub
shrb
add
and
and
and
jg
lods
hlt
icebp
das
fwait
or
xor
aaa
jg
adc
bndstx
andl
lods
xor
decb
sub
xor
xor
cli
mov
or
pushf
mov
lds
jne
push
daa
fnstcw
mov
jns
mov
mov
insb
das
jns
sti
pop
adc
sub
cmp
adc
addr16
adc
test
mov
dec
sub
mov
sti
push
xchg
inc
and
sub
movsb
bound
inc
jns
add
push
sbb
loop
mov
sbb
popf
pop
cmp
sub
ja
and
jg
sbb
or
cmp
sub
testb
call
mov
jl
pop
adc
mov
jp
daa
and
add
add
test
cs
add
mov
iret
mov
sub
pop
cld
sbb
data16
in
aas
stc
shlb
inc
push
mov
aas
clc
mov
aas
aas
xchg
pop
add
mov
js
ljmp
cmp
adc
lea
aaa
mov
xor
pop
jb
push
cmp
adc
pop
and
inc
imul
push
cwtl
cli
sbb
cmp
mov
pushf
mov
pop
in
lcall
test
sbb
aam
lret
adc
ds
mov
das
negl
sub
imul
loop
movsb
and
push
mov
addr16
cmpsb
pusha
pop
mov
push
dec
ds
cmp
jle
aaa
mov
dec
mov
cmpsb
popa
xchg
bound
fidivl
movsb
out
jmp
xchg
test
hlt
insb
push
fidivs
sahf
add
cmp
and
inc
dec
add
jo
stos
rclb
or
test
decl
cs
arpl
popa
sub
pop
call
jl
add
jo
push
je
insl
jns
ss
stos
jle
mulb
push
or
inc
dec
imul
jp
cmp
js
into
dec
pop
push
adc
inc
inc
out
rclb
mov
cmp
and
mov
jp
cmp
jbe
xor
cmp
das
sub
and
mov
mov
bound
fstpt
hlt
cs
push
or
xchg
clc
idivb
mov
mov
sbb
gs
divl
pop
or
aas
fistl
pushf
pop
out
jp
sub
jmp
dec
push
push
mov
popa
adc
inc
mov
push
les
mov
rolb
leave
ja
inc
adc
xchg
sub
dec
xchg
cs
sbb
fistl
or
dec
aas
adc
add
outsl
xchg
popf
add
daa
add
adc
inc
cmp
push
add
xchg
adc
leave
lret
mov
xor
outsb
popf
leave
loop
loope
dec
daa
in
xchg
and
sub
cmovp
leave
mov
ljmp
jno
push
jno
lahf
pop
out
and
push
jle
js
and
frstor
ds
iret
inc
shl
outsl
sub
sub
jp
std
mov
cmp
push
xor
pop
add
je
dec
mov
cltd
adc
add
push
sub
mov
in
and
js
mov
idivb
pop
popa
add
mov
ret
mov
mov
or
dec
and
xor
jbe
sub
adc
sub
dec
cmp
sti
mov
push
mov
push
mov
aas
hlt
in
dec
mov
xor
sahf
insl
iret
flds
dec
xor
fs
sub
ss
cwtl
add
push
push
pop
jo
inc
dec
push
mov
iret
inc
sub
sub
and
adc
popa
sbb
je
rclb
fldcw
mov
in
orb
ss
xlat
data16
insl
sbbb
cmp
mov
js
inc
pop
mov
adc
outsl
daa
aas
mov
aas
lahf
outsb
xor
stos
hlt
push
daa
test
das
pop
scas
mov
or
or
fneni(8087
inc
adc
fcomps
popf
or
ss
dec
or
jg
inc
addr16
int3
jo
out
inc
mov
jo
imul
push
jne
push
popa
in
mov
jmp
or
movsb
or
dec
mov
imul
fwait
nop
test
mov
or
push
testl
or
mov
mov
xchg
movsb
jno
movsb
xor
jmp
mov
or
in
sub
xchg
sti
xor
mov
iret
xor
jns
aad
cmp
lret
pop
ret
insl
sbb
jae
std
xor
xor
sub
repnz
les
add
cmp
sub
mov
jne
or
sub
movsl
daa
addr16
mov
fidivl
cmp
lods
inc
leave
dec
xor
xchg
jb
popa
mov
dec
sbb
mov
rorl
out
push
xchg
and
jle
out
lock
das
push
xor
out
cmp
js
jbe
or
stc
out
mov
in
or
or
sub
inc
jbe
or
fwait
cs
mov
or
dec
sti
outsl
lret
arpl
or
fs
xchg
shlb
adc
stc
jno
xor
adc
sbb
fs
pusha
inc
pop
inc
clc
sub
ss
sub
outsl
test
gs
inc
and
pop
inc
fstpt
adc
sub
mov
sub
xchg
sub
inc
ja
imul
jecxz
andb
dec
es
mov
inc
movsl
aad
pop
addb
cmp
les
adc
in
xor
push
mov
imul
out
jmp
inc
inc
lcall
sbb
mov
dec
xor
or
add
test
pop
pop
cmpsb
or
xchg
xchg
stos
xchg
cmp
inc
sbb
sub
test
cmp
dec
inc
sbb
pop
imul
jle
nop
inc
subl
or
mov
in
lds
push
and
jl
dec
cmp
xchg
or
pop
ss
xchg
inc
sub
imul
inc
add
sub
clc
pusha
or
mov
outsb
push
jnp
sub
mov
enter
sbb
sub
cmp
test
fildll
addr16
out
and
mov
pushf
mov
cmp
xlat
mov
adc
pop
mov
sbb
or
xor
sub
sbb
addr16
add
push
into
out
and
pop
sub
sub
pop
pop
add
add
clc
jne
dec
xor
push
pop
inc
pop
ret
xor
inc
in
dec
pop
cwtl
xchg
inc
xchg
test
sub
rolb
pop
mov
roll
xor
sbb
cs
into
sbb
pop
cmp
jae
mov
faddl
bnd
xor
mov
dec
or
outsl
adc
pop
inc
ds
and
adc
push
xor
loop
test
comiss
xchg
icebp
cmp
loop
xchg
sbb
hlt
sub
sub
lahf
dec
inc
add
sbb
mov
mov
cmpsb
test
sbb
fcomps
lds
lods
cmpsl
inc
lcall
push
es
mov
ja
xor
sahf
inc
out
imul
arpl
add
movsb
ret
mov
sub
and
push
mov
or
sub
into
sbb
aad
sbb
inc
cmpb
and
leave
js
ret
test
mov
rclb
adc
lds
add
jo
add
xchg
cmp
xor
pop
shr
aaa
jle
lds
sbb
jg
cld
sub
mov
scas
mov
test
add
push
push
cwtl
mov
jnp
mov
test
jle
mov
jg
lcall
inc
lods
sbb
cmp
mov
lods
call
push
and
pop
or
negl
sbb
sbb
lahf
ss
mov
inc
dec
push
add
adc
andb
mov
sbb
or
mov
push
ds
jnp
mov
lock
shl
jns
push
xor
mov
add
jl
insl
dec
shll
mov
jecxz
orl
out
push
push
pop
mov
mov
pushf
shlb
jb
mov
sahf
add
mov
testl
icebp
xor
mov
loopne
add
movsb
scas
mov
lock
out
lock
and
sub
std
out
std
addr16
notl
movsb
loopne
add
cmp
jl
mul
pop
cltd
dec
mov
and
mov
stos
test
add
xchg
adcl
cmp
adc
mov
lret
sahf
mov
inc
dec
inc
mov
xchg
mov
sub
cmp
mov
arpl
insl
popa
and
add
push
stos
addr16
mov
push
adc
out
loopne
add
jle
arpl
xor
or
mov
rorb
pop
call
movsb
xchg
xor
and
test
sub
sub
data16
popf
push
js
aam
das
stc
adc
imul
insl
shll
xor
sti
je
mov
std
daa
cmp
fnstcw
outsb
push
insl
test
push
scas
and
sub
es
xor
add
test
xchg
rorl
mov
fldcw
ds
lods
xor
dec
bswap
leave
push
loopne
cmc
ficomps
sub
pusha
xor
and
pop
jns
data16
inc
movsb
or
pushf
push
sub
icebp
add
pop
cmp
cmpsb
push
ds
inc
xchg
mov
imul
arpl
xchg
jmp
add
into
std
push
addr16
sub
jb
mov
xchg
and
cmpsb
scas
cmp
xchg
fdivrp
pushf
or
clc
pop
mov
subb
pop
xchg
sahf
pop
xchg
and
in
mov
inc
arpl
test
adc
mov
and
std
push
insl
pop
sbb
imul
mov
push
in
jp
xor
pop
cwtl
imul
mov
popa
repz
jecxz
sub
cmp
pop
dec
sahf
pop
and
cmp
dec
ljmp
add
mov
dec
xchg
insb
sub
dec
outsl
in
pop
push
or
lea
shlb
jne
inc
les
mov
bound
sti
shrl
shll
inc
jge
popf
imul
aaa
dec
popf
mov
rcrl
mov
and
jno
or
cmc
aaa
daa
pusha
add
xor
and
cmp
daa
adc
stc
repnz
or
mov
sti
sbb
push
mov
cmp
bound
adc
pop
sub
out
xor
mov
cmp
sub
cmp
cmc
jp
adc
inc
loopne
jb
push
xchg
jne
sbb
stos
xchg
dec
dec
and
orb
push
fnstenv
sbbl
iret
jne
xor
xor
cmp
jo
xchg
dec
or
lods
add
ss
push
or
js
xchg
scas
sub
xchg
popa
add
xlat
cmp
std
aaa
cmp
fisttps
pop
sub
cmc
or
sbbb
xchg
int3
push
mov
sti
mov
cmpsb
jecxz
test
xor
xchg
add
in
test
das
push
mov
xchg
xchg
sbb
jmp
sub
cld
lods
aaa
or
rcrb
lcall
jae
sub
pop
dec
and
inc
pushf
push
or
int
or
adc
or
lods
and
imul
dec
jb
sbb
dec
mov
push
mov
sub
pop
rol
jp
inc
xchg
add
adc
je
push
sbb
insb
pop
add
push
dec
filds
imul
dec
push
stos
push
jl
adc
es
mov
xor
cmp
push
and
or
test
mov
adc
inc
pop
popa
push
mov
xorb
push
cmp
insb
xor
fildll
addr16
stc
test
lcall
cmp
push
pop
sbb
push
lds
aaa
mov
scas
pop
push
pop
mov
pop
pop
aaa
pusha
popf
inc
or
sahf
aad
mov
xor
jo
ds
je
jo
mov
fs
ljmp
jg
push
lret
pop
adc
mov
push
outsb
int3
stos
pop
loop
push
add
stos
push
fs
push
jbe
pop
popa
fcomi
and
xor
jnp
roll
aaa
jg
sbb
inc
pop
pop
repz
lahf
jge
push
dec
dec
rcr
pop
adc
clc
clc
add
dec
ret
sbb
lock
dec
pop
jb
push
cmpl
andl
popa
insb
ja
divl
bound
pop
out
push
dec
cmpl
testb
inc
push
add
rorl
cmpb
or
mov
cmp
jo
inc
xor
inc
sarb
mov
push
or
cmovo
jl
imul
xor
insb
sbb
xchg
addl
rclb
push
sub
adc
add
ja
push
fldenv
or
jae
shrl
subl
subl
js
pop
loop
cmpsl
xor
inc
push
push
push
ljmp
adc
or
add
sub
cli
lea
or
jo
sarl
cmpsb
popf
mov
cmp
orl
scas
addr16
sub
push
push
pop
xlat
dec
vandpd
dec
clc
add
mov
ja
mov
std
int3
ss
das
xor
xor
xor
xchg
lret
jae
mov
test
pushf
or
ret
lret
inc
je
pop
or
shlb
pop
icebp
addr16
mov
fxam
in
fsubrs
xor
imul
pusha
sbb
sbb
jo
fs
inc
mov
adc
push
jp
lcall
push
inc
add
xchg
and
mov
cmp
std
cli
sbb
mov
insb
fnstcw
negb
push
mov
stc
aaa
ror
sti
and
gs
repz
jb
adc
or
les
dec
sbb
add
pop
sbb
mov
fdivl
inc
icebp
data16
into
or
testb
iret
ljmp
lods
inc
arpl
xchg
dec
sbb
mov
mov
add
jp
inc
scas
xor
xor
lret
loop
inc
test
bound
cmp
je
adc
stos
vshufps
adc
pop
orb
js
dec
xchg
in
jne
sub
sub
gs
inc
int3
inc
add
testl
ljmp
dec
cs
cmc
cmp
mov
insb
push
jns
push
sub
loope
jp
sub
sbb
cmp
jg
jbe
jnp
jbe
imul
and
xchg
xor
sbb
orb
jae
push
push
pop
xor
push
mov
popa
sbb
aaa
je
mov
jae
mov
add
int3
outsb
cmp
loop
pushf
jge
dec
cmp
jns
mov
xor
hlt
adc
mov
push
scas
inc
repz
cs
jg
and
mov
cmp
sub
cmp
cmp
fdivl
std
dec
mov
cmp
ja
xor
or
and
xchg
push
add
rorb
jo
sub
jge
mov
orl
dec
jg
notl
mov
jnp
shll
mov
pusha
sarl
ss
iret
scas
mov
mov
pop
bound
cmpsl
lock
out
push
mov
xor
jg
dec
enter
in
into
cmp
add
jg
ss
cmp
dec
mov
xor
xchg
push
adc
or
inc
stc
inc
int3
rcrb
out
cmp
sar
or
pop
pop
arpl
jne
push
int3
std
add
xor
sbb
pushf
mov
and
lds
xor
xchg
cmp
push
fldenv
sbb
in
fildll
aaa
jno
mov
lahf
loope
mov
pop
mov
outsl
xchg
ss
xor
test
inc
pop
shrb
sbb
push
daa
scas
push
adcb
ss
rorb
clc
sbb
outsl
shl
movsb
xchg
bound
and
fisubl
pop
call
arpl
fs
sbb
fidivl
xchg
push
jl
inc
ljmp
push
cmpsb
push
mov
pop
rorl
sbb
stc
lcall
dec
jmp
jb
ficompl
inc
loope
je
jb
and
in
pop
sub
aam
push
xor
and
jb,pn
jne
xchg
lds
adc
fadds
fildl
out
cmpb
xor
add
pop
push
cmp
mulb
pop
jb
xor
xor
test
xchg
outsb
call
or
pop
add
stc
xor
or
ds
lret
mov
mov
mov
jmp
ja
test
and
cmpsl
scas
add
incb
push
inc
mov
cmp
test
outsb
std
jo
mov
lock
fs
insl
pop
sbb
pop
xor
insl
inc
inc
outsb
sub
mov
jae
xor
js
ja
xchg
cli
dec
add
out
in
sub
or
fsub
sbb
inc
adc
ds
push
sub
cwtl
or
add
call
aam
ret
pusha
test
jo
push
test
movsb
pop
test
outsl
bound
cs
stc
mulb
stos
sbb
andl
sti
repnz
shlb
and
outsl
das
pusha
fidivs
dec
ljmp
dec
push
insb
add
cmp
int
clc
pop
jae
lea
lock
rorl
jp
jp
adc
cmp
dec
enter
pop
sub
loopne,pn
pop
arpl
fmuls
cli
cs
or
sub
xchg
popf
scas
fnsave
adc
outsl
pop
repz
jbe
add
sbb
sbb
adc
in
jnp
or
cmp
push
ljmp
in
push
sub
sbb
ds
je
inc
cli
mov
cmp
repz
jg
jb
mov
sbbb
adcl
pop
lret
xor
push
inc
push
mov
and
addb
fisubrl
fistl
inc
int
inc
jge
cmp
or
ljmp
mov
fistpll
in
fsts
insb
xchg
mov
fbstp
sub
push
arpl
aas
insb
into
jb
xor
cltd
jne
sbb
jg
sub
push
or
mov
shll
divps
repnz
sub
xchg
or
das
repnz
in
add
shll
xlat
cs
and
call
cmp
jnp
andb
test
and
add
cmp
insl
lea
mov
cmp
sbb
inc
xchg
int3
ja
jmp
popf
sarb
int
or
sti
mov
and
je
in
fwait
jl
dec
sbb
gs
jno
and
push
and
fs
sbb
mov
push
jmp
hlt
push
hlt
xor
inc
push
push
or
sti
ja
sub
cli
out
iret
imul
aad
sbb
repnz
lds
pop
lcall
jns
sbb
lea
fsubl
sbb
inc
inc
and
ja
jo
loopne
into
mov
mov
lock
aas
test
push
adc
fisttps
mov
push
push
push
push
jo
not
jge
movb
jae
mov
out
xor
add
mov
in
test
leave
rclb
xchg
out
std
or
mov
jns
jg
xlat
mov
add
or
or
push
add
xor
in
rcll
fninit
test
lret
outsl
lds
addr16
cmpsb
or
or
je
movsl
lret
outsl
fadd
pop
or
xchg
jge
pop
cmp
add
cmpb
xor
loop
stos
adc
add
imul
in
mov
cmp
imul
icebp
aas
jmp
popf
sub
sub
lret
in
inc
test
popa
jnp
aas
loopne
loop
push
add
das
add
xor
push
inc
adc
push
xchg
pop
and
cmp
mov
push
push
cmc
cmp
xchg
fbstp
shll
je
mov
sbb
in
sti
sub
jb
aas
adc
mov
mov
mov
push
lea
mov
insb
ja
mov
xor
das
lret
or
cmp
aaa
push
mov
dec
xchg
xchg
arpl
mov
xor
mov
xor
push
shlb
je
xor
push
orl
fs
or
std
out
lcall
inc
push
shrb
mov
sbb
imul
inc
mov
stos
xchg
push
movsl
test
jge
xchg
int3
add
pushf
xchg
ja
sbb
xor
lret
loopne
sub
outsl
push
jge
subb
leave
shll
test
cmpsl
mov
xchg
ds
lds
or
mov
xchg
add
jno
arpl
xchg
ret
jns
test
bound
movsl
sub
rcrb
xor
sbb
pop
popf
sbb
imul
sub
mov
int3
rorb
fisubrs
je
pop
xor
cmp
pop
fucomi
les
icebp
jns
and
das
in
cmp
loope
xor
stos
and
xlat
aas
and
bound
cli
dec
loop
out
add
push
and
pop
inc
cs
imul
insb
lcall
ss
popa
dec
pop
mov
pop
sub
sub
stc
push
test
xchg
mov
mov
lock
add
push
sti
jne
ljmp
sub
push
mov
daa
inc
adc
sbb
and
or
mov
data16
adc
paddb
inc
pusha
insb
popf
sti
jg
add
cmp
jne
std
scas
js
cmp
dec
mov
cmpsl
jne
insl
aaa
push
out
push
sbb
mov
repz
sbb
popf
sbb
push
fwait
shl
xor
ds
pop
in
and
jp
mov
or
push
loopne
mov
ds
subl
imul
push
and
pop
jl
sub
sahf
xchg
stc
cmp
push
dec
sub
imul
sbb
daa
jb
xor
xlat
pop
mov
xor
test
adc
repnz
and
mov
mov
divl
push
fs
xor
lds
pmulhw
pop
mov
mov
lahf
mov
lahf
pop
test
test
pop
cmp
dec
scas
insl
push
add
sbb
cmpsb
fadds
sub
pop
pop
pop
inc
pop
je
or
inc
out
inc
lea
mov
add
or
addr16
push
push
stos
repz
into
add
dec
cmp
mov
lcall
fistpll
push
mov
fsubs
pop
je
outsb
sub
dec
xor
pop
int3
gs
pop
dec
and
and
rolb
sbb
and
loopne
jmp
xchg
add
ja
lahf
nop
or
mov
sbb
ljmp
jl
push
add
or
pushf
pusha
in
and
and
js
jge
add
jge
jl
push
jb
jno
xor
out
push
push
mov
xor
inc
bound
rcl
xchg
outsb
dec
cwtl
cmp
sahf
sbb
out
adc
stc
cld
cmc
lea
loope
or
fwait
test
or
daa
data16
lods
pop
les
fcomps
cmp
mov
xor
scas
mov
lods
cltd
add
pop
ljmp
out
inc
das
js
imul
inc
xor
xchg
mov
adc
or
ds
push
inc
iret
stc
xchg
clc
xchg
add
lea
pop
inc
mull
jb
xlat
aad
jle
sub
mov
adc
or
jge
jg
shlb
add
sbb
stc
jb
push
xlat
sbb
and
push
adc
data16
xor
lds
and
xor
fwait
xchg
xor
mov
or
insb
stos
arpl
jge
addb
sub
sub
jb
pop
outsl
jb
push
xchg
inc
sbb
xchg
in
nop
and
lea
icebp
negl
sti
dec
int
mov
sti
xchg
cmp
xchg
dec
pusha
outsl
out
ds
push
outsb
or
je
aaa
cmp
fstpl
xor
push
push
mov
push
adc
pusha
iret
mov
cmp
sub
cmp
addr16
cmp
push
cmp
lock
je
imul
cli
cmp
test
out
push
or
data16
cmp
das
jmp
inc
out
arpl
cmp
jge
or
es
enter
pusha
ja
cmp
mov
loopne
stos
xlat
in
ss
out
xchg
das
inc
sub
mov
jns
arpl
adc
sbb
repz
addr16
shll
test
xchg
repnz
mov
sti
icebp
cmp
test
and
mov
push
sbb
and
push
xlat
push
dec
and
loop
mov
ss
das
xchg
sub
repz
jno
xor
jmp
push
mov
outsb
xchg
xchg
movsb
arpl
jns
mov
insl
inc
loop
mov
xchg
stos
xor
mov
mov
negb
mov
jns
into
cs
cmp
cmpb
stc
mov
sbb
and
sub
js
dec
push
adc
insl
and
sahf
jb
lods
aaa
stos
stos
cwtl
arpl
andl
out
cmp
jnp
xchg
cmp
xor
jns
jne
push
jnp
or
adc
xchg
stos
jbe
test
addr16
cmpb
data16
lret
jge
je
pop
test
xor
or
adc
push
outsl
into
mov
loop
jns
in
scas
mov
stos
outsl
rolb
lods
fsubs
lods
pop
push
push
pusha
cmp
xchg
sahf
jo
pop
push
cmp
sbb
xor
fs
imul
lahf
js
outsb
dec
jae
add
subb
and
andl
sub
cli
push
dec
sub
push
add
mov
es
jl
cmp
sbb
and
or
cmp
cmp
imul
ret
outsl
mov
loope
cmp
add
mov
les
and
aam
mov
cmp
xor
leave
push
jnp
ja
cmp
push
xchg
in
aas
adc
jne
sub
repnz
and
es
cltd
xor
pop
fwait
sbb
pop
xchg
or
scas
mov
xchg
dec
pop
ss
and
sub
sub
sbb
mov
jns
leave
daa
jbe
or
and
je
inc
movb
js
inc
pop
mov
sub
fisttpl
popa
jmp
xor
jae
movsl
jp
adc
add
sub
pushf
sub
js
sbbl
test
sbb
pop
xchg
stc
mov
xchg
negw
ror
jne
ja
ret
out
pop
sub
mov
repnz
cmp
add
repz
or
jecxz
imul
aaa
andl
mov
mov
and
lods
fstps
jo
mov
repz
fs
lret
dec
mov
cmp
push
cli
push
and
fidivs
mov
jg
ljmp
xlat
lds
leave
lret
jg
adc
pop
test
daa
mov
sbb
mov
mov
inc
repnz
scas
fs
outsb
mov
sti
ficoms
outsb
lcall
mov
lods
or
les
arpl
jne
and
into
inc
xlat
inc
cmp
aas
std
cmp
movsl
shlb
cmp
enter
js
pop
mulb
xor
sub
jl
lea
and
ljmp
shrb
ja
sbb
bound
sahf
push
sub
loopne
outsl
inc
test
popa
or
cmp
mov
lea
xchg
sub
iret
insb
cmp
and
cli
push
imul
pop
and
cwtl
jmp
and
pusha
gs
jl
or
xor
lahf
push
mov
mov
pop
pop
das
imul
push
repnz
sti
out
outsl
addr16
jne
pop
lret
dec
inc
or
xor
fs
addr16
jbe
loopne
outsl
bndstx
hlt
jae
xor
stos
pop
xor
push
lahf
pop
push
outsb
stos
push
fiadds
sarl
scas
ret
and
push
idivl
in
xor
shll
push
jge
mov
ss
cmc
pop
jb
add
push
je
pop
sub
cmpsb
inc
pop
mov
dec
imul
repz
and
sub
scas
sub
and
pop
fnsave
jg
cmpsb
and
in
std
insb
stc
push
fstps
dec
test
ret
sbb
ljmp
aas
sbb
enter
xor
icebp
sub
cs
push
mov
pop
add
test
mov
push
ljmp
fstl
sarl
test
out
test
nop
pop
and
pushf
xchg
fsubp
sbb
mov
movsl
dec
addr16
dec
mov
lds
std
lret
sbb
sbb
sbb
jns
add
shrb
ss
cmp
sti
cld
sbb
std
push
xlat
mov
in
ss
jecxz
mov
sub
mov
xchg
xlat
pushw
lods
test
sbb
mov
addr16
inc
add
test
xchg
repz
and
mov
cltd
gs
fs
xchg
xchg
out
inc
xlat
and
inc
xor
inc
jg
test
sub
lea
hlt
fldcw
jnp
popa
jmp
ljmp
push
sbbl
mov
ret
push
popf
stc
pusha
addr16
adc
cwtl
push
xchg
xor
mov
mov
addr16
add
mov
jg
dec
push
mov
sti
sbb
loope
cli
mov
test
push
insb
dec
sbb
int3
std
insl
sbb
lret
adc
pop
xchg
stc
sub
insb
push
test
loope
pop
adc
jns
mov
daa
push
arpl
sbb
bound
mov
imul
cmc
mov
mov
xor
mov
mov
mov
aas
orb
jle
push
jp
cli
mov
add
cwtl
add
and
mov
dec
jae
lds
jb
lcall
inc
and
or
test
loopne
pop
or
popa
femms
pushaw
mov
adc
inc
std
hlt
adcb
test
lea
inc
pusha
cmp
push
popf
inc
pusha
push
mov
jnp
fcoml
sub
cwtl
and
mov
add
dec
xchg
pop
mov
or
push
and
aam
pop
sti
lods
add
xor
sbb
xlat
nop
push
mov
lea
inc
add
lret
and
mov
pop
xor
and
jae
lds
pop
nop
or
push
pop
push
sub
fidivl
xor
pop
or
ret
or
add
lods
cmp
cwtl
pop
minps
loopne
pop
inc
out
movsb
inc
out
sub
add
push
mov
sbb
aam
pushf
fistps
pop
cs
push
stc
dec
and
pop
inc
std
mov
negb
pop
mov
push
fisubrs
cmp
inc
sbb
adc
xchg
iret
sbb
ja
hlt
push
xor
std
pop
adc
sbb
sbb
fwait
inc
push
sbb
addb
sti
je
or
jo
pop
pop
dec
jl
push
push
or
mov
inc
notl
lea
sbb
mov
jne
xchg
pop
xchg
sub
jl
rcrl
jbe
pop
mov
sbb
js
icebp
das
and
mov
movnti
stos
sbb
ss
mov
or
jnp
idivl
inc
cmpsb
ret
rcll
shll
pop
dec
repz
and
add
mov
das
dec
shrl
cli
sub
cmp
inc
pop
xlat
out
sbb
cli
cwtl
movq
mov
leave
xlat
mov
fsts
lods
pop
inc
adc
ficoms
jno
sbb
int3
and
push
icebp
inc
mov
pop
jae
jmp
inc
lahf
jo
cmp
jg
add
or
push
sbb
imul
pop
dec
outsl
pop
dec
cmc
mov
cmp
in
sbb
mov
rcrb
push
jmp
xor
cmc
adc
rcrb
sbb
nop
jg
inc
inc
test
es
je
stos
sub
and
ja
out
outsl
ss
dec
test
scas
clc
push
mov
ss
dec
mov
cmp
pop
or
inc
jmp
sub
es
mov
add
addr16
sti
jl
pop
repz
inc
and
pop
scas
cmp
lods
jbe
es
mov
add
addr16
lds
pop
xor
mov
adc
orb
jge
and
or
or
pop
jae
scas
sub
xchg
pop
nop
push
shll
jmp
lret
in
insb
lret
mov
pop
bound
movsl
pop
inc
out
movsb
jp
sub
sub
cmp
adc
adc
cmc
push
call
and
adc
ret
dec
jmp
xor
xor
bound
jb
sti
jl
pop
repz
inc
and
pop
scas
cmp
lods
add
in
push
mov
add
jp
push
xchg
push
sub
pop
xor
mov
adc
or
sub
inc
sbb
add
mov
out
pop
mov
inc
inc
pop
bound
lea
sub
daa
jns
add
fildl
dec
loope
cmpsb
addb
aad
leave
jl
mov
gs
pop
fwait
and
xor
inc
mov
push
inc
sti
xor
push
imul
inc
fildl
cs
decl
clc
pop
loopne
adc
cltd
movsb
dec
or
inc
jbe
push
jmp
mov
dec
pop
xor
popf
xor
pop
push
mov
out
cmp
ss
adc
cmp
sbb
pop
jmp
test
push
dec
fimull
jbe
inc
dec
add
sbb
imul
sbb
stc
sbb
cmp
jle
addr16
pop
dec
inc
out
movsb
and
jns
out
lahf
push
leave
xor
xor
push
pop
arpl
jl
jg
mov
sbb
outsb
inc
xchg
cmp
add
xchg
pop
mov
imul
push
lcall
adc
dec
cmp
pop
mov
adc
fldl
vmread
sub
mov
cld
push
add
or
push
push
jno
jl
jg
and
xor
mov
stos
pop
in
ss
out
push
das
add
push
jge
xor
jl
and
mov
ret
sbb
cs
fimuls
sub
mov
icebp
dec
iret
call
aam
jle
cmp
sbb
sti
mov
and
xor
inc
outsl
cwtl
arpl
loopne
inc
adc
dec
or
xor
pop
push
cmp
xor
dec
inc
stc
movb
push
jno
insl
pop
js
movsl
adc
addr16
sbb
push
jecxz
mov
jbe
inc
leave
add
mov
mov
xchg
bound
ds
js
xchg
flds
sbb
iret
les
mov
cmpsb
pop
popa
cmp
insb
arpl
and
or
call
mov
movl
or
das
push
cld
xchg
adc
mov
inc
mov
push
dec
aas
mov
cmc
leave
push
push
mov
cmpsl
jne
xor
xor
popa
cwtl
repz
inc
sub
push
push
inc
jae
cmp
push
inc
sbb
cwtl
mov
enter
sbb
xchg
sbb
pop
lahf
sti
mov
mov
sbb
movsb
dec
sbb
bound
mov
sbb
jno
xchg
xor
jne
iret
or
arpl
movsb
test
dec
ret
adc
gs
mov
pop
cmp
in
inc
adc
jg
push
mov
mov
xor
subl
adc
adcl
push
inc
sahf
xor
scas
jg
sti
pop
mov
inc
lcall
dec
cli
push
mov
and
inc
repz
mov
cmc
push
int
pop
sub
or
sahf
stos
das
push
mov
loop
cmp
push
sbb
and
lahf
les
or
xor
push
sbb
fwait
js
inc
std
fimuls
movsb
pushf
pop
sub
jle
mov
scas
jns
mov
pop
scas
jnp
dec
bound
inc
out
mov
sbb
jb
mov
les
or
push
shl
add
mov
popf
sbb
cmp
in
dec
adc
shrl
into
mov
mov
inc
pop
cmp
mov
cmove
outsb
cmpl
xor
xchg
xor
mov
divb
fdivrs
xor
sub
mov
add
or
mov
sbb
sub
inc
pop
cmpb
pop
stos
jle
lods
dec
mov
xchg
pusha
and
push
jl
dec
loopne
mov
adc
pop
fstl
or
jne
mov
imul
outsb
adc
loopne
out
cld
js
push
enter
jbe
scas
mov
pop
xor
pop
lods
xchg
adc
add
jnp
dec
add
jbe
inc
jmp
add
pop
je
ret
loopne
adc
cli
movsb
fistpl
cmp
cmp
out
in
xor
jne
and
fbld
js
adcl
xor
push
cmp
sbb
dec
not
push
in
jno
outsb
and
pop
cmc
stos
jo
dec
rolb
mov
lods
insl
and
jp
push
cwtl
add
pop
iret
pop
add
movsb
dec
addr16
fucom
hlt
or
pop
inc
out
popa
mov
dec
jae
jp
sar
jp
das
enter
daa
fiadds
and
dec
lret
mov
das
mov
jbe
wrmsr
xor
mov
xor
ja
jg
fisubrl
shrl
movsl
and
ja
inc
pop
enter
scas
cmp
ja
mov
repz
sub
cmp
and
aaa
cmp
xchg
imul
sub
ss
xor
sahf
gs
push
mov
out
pop
mov
and
xchg
call
dec
lds
loopne
cmp
bound
push
iret
jge
sub
repnz
outsl
mov
and
fbld
add
cmp
sar
mov
insb
mov
push
cmp
sub
mov
or
outsl
and
jno
int3
cmp
inc
mov
xorb
xor
jbe
xchg
xor
mov
rcrb
jecxz
je
fsts
aaa
adc
sub
pop
mov
pushf
es
notl
sub
xchg
dec
js
pop
mov
test
aad
sub
push
pop
or
add
jmp
and
popf
mov
push
add
push
push
sahf
in
jg
dec
stos
dec
pop
dec
jo
adc
shlb
sbb
gs
das
mov
xchg
and
int
pusha
cmp
push
cmp
dec
shll
dec
and
mov
ja
outsb
adc
shll
std
je
mov
ss
add
sub
pop
jns
je
imul
push
inc
mov
out
insb
cmpsl
mov
into
pushf
mov
insb
in
sbb
ss
scas
sarl
cmp
and
sub
and
adc
mov
or
ss
outsl
imul
es
loope
mov
mov
sbb
pop
mov
ds
push
imul
fcmovu
and
lret
adc
jg
cmp
bound
cmc
sub
insl
repnz
or
and
mov
cmpsl
push
mov
jno
mov
and
notl
sahf
sub
dec
and
or
and
pop
jns
mov
adc
sub
imul
push
inc
mov
out
js
jne
mov
icebp
ss
scas
shll
or
mov
adc
ss
jp
push
mov
mov
imul
cmc
andb
xor
cmp
adc
mov
out
mov
outsb
int
cmp
cld
xlat
fs
lods
fstpl
out
push
movsl
sti
ja
ds
and
xor
cmp
jns
daa
cmp
xor
ds
mov
xor
sub
cmp
bound
and
mov
in
movsl
addb
mov
scas
xor
out
gs
push
adc
pop
sub
mov
sub
push
mov
rclb
dec
sbbl
push
mov
jns
fwait
mov
dec
mov
lods
and
sbb
xchg
mov
xchg
aas
dec
jns
xchg
out
cmp
xchg
insb
aas
inc
xlat
loope
shlb
ficompl
xchg
aas
lds
mov
xchg
pop
sbb
push
jle
sar
sbb
sub
adc
pop
and
sub
mov
and
pop
xor
jle
stos
push
xor
xchg
adc
js
jp
je
sti
sub
pop
lret
and
mov
testb
mov
insl
mov
and
push
dec
std
pop
pop
inc
sub
pusha
fs
xor
xchg
lret
test
sti
cmpb
movsb
jmp
xchg
ret
sbb
pop
cmp
and
jle
xor
pop
int
or
and
pop
push
xor
aas
sub
in
sbb
xchg
scas
xor
clc
dec
aaa
ud0
lea
in
test
negl
mov
xchg
fisttpl
int3
bound
inc
add
and
sub
sub
mov
push
dec
push
sbb
jmp
and
pop
pusha
adc
cmp
add
mov
shlb
and
mov
les
je
gs
xchg
fsub
sub
inc
cmp
sub
scas
divl
lret
lea
adc
push
push
aas
ffree
jp
mov
loopne
cmc
scas
add
test
push
xor
dec
or
lods
pop
pushf
scas
pushf
pop
jmp
and
xor
dec
jnp
jge
mov
dec
jae
add
mov
jb
sbb
imulb
xorl
int
mov
push
mov
xor
mov
push
push
adc
hlt
popl
jns
mov
sub
xor
mov
mov
leave
mov
cmpsl
daa
jmp
iret
and
aad
or
mov
xor
insb
and
push
popf
mov
cmp
sub
jo
mov
push
shlb
dec
cmp
shrl
xor
std
aaa
pop
jns
data16
hlt
push
sbb
sahf
dec
push
inc
gs
iret
sahf
paddsb
outsb
call
loopne
paddusw
faddp
stos
jl
leave
xor
or
inc
out
in
cmc
sahf
cmc
or
aas
or
loopne
popl
lret
xorl
stc
cmp
insb
in
jae
jae
je
nop
xor
call
and
or
push
out
sub
pop
cltd
mov
lcall
mov
mov
jecxz
add
rcll
and
movsb
or
repz
das
aas
mov
xor
xor
lcall
int3
mov
imul
cmp
js
xor
hlt
mov
arpl
pop
xor
add
push
xchg
mov
xor
aaa
ja
add
dec
sub
mov
and
push
jae
xor
outsb
andb
adc
add
sub
stos
and
xchg
incl
cmp
pop
rolb
mov
jle
fs
rcr
inc
into
push
push
xor
and
inc
inc
adc
aas
into
mov
cmp
das
ds
outsl
and
push
icebp
dec
xchg
push
xchg
int
xor
xor
xor
je
shll
lods
sub
gs
and
jle
cmp
pop
add
mov
push
scas
imul
adc
jne
scas
mov
xor
out
jne
jg
jno
out
sub
mov
lock
int3
jae
push
and
ret
add
repz
out
rdtsc
in
xchg
insb
xchg
fstl
out
lret
call
shll
pop
or
int
aas
jnp
loopne
sub
jns
xor
adc
nop
popa
stos
xor
mov
lret
cmp
adc
mov
fwait
mov
or
jge
pop
xchg
int3
lcall
cmp
loope
push
mov
adc
cmc
and
pop
add
ljmp
sub
scas
and
stc
xor
mov
dec
inc
ja
mov
jo
setle
rorb
push
mov
pop
je
rclb
push
in
ss
test
lods
cmp
or
outsb
aaa
outsb
sub
cmp
bound
cmp
xor
arpl
or
adc
repz
cmp
hlt
cmp
addr16
fisttpl
adc
jns
cmp
lret
mov
add
adc
fstpl
inc
mov
or
xchg
addr16
pop
cmp
jb
add
mov
shrd
idivb
jg
in
scas
repnz
cmp
or
sahf
insl
out
out
cmp
int
dec
cmp
xchg
mov
cmc
dec
aam
jns
adc
sub
push
push
sbb
pop
enter
xor
dec
cs
sbb
mov
popa
cli
push
shlb
xlat
jns
pop
daa
sub
push
and
xor
jnp
xor
das
pop
dec
sbb
pop
dec
mov
jo
add
xor
adcl
sub
stc
mov
dec
pusha
mov
in
dec
scas
inc
dec
add
add
pop
push
sbb
adc
xchg
cltd
cmpsb
test
jle
ja
cmpsb
push
es
sbb
push
mov
in
push
loop
fisubs
loopne
xlat
jbe
movl
pop
push
and
push
mov
lret
sbb
mov
inc
fldcw
cmpsl
sbb
cwtl
aam
pop
enter
add
dec
es
mov
enter
divps
iret
jbe
in
pop
mov
mov
or
dec
out
sbb
daa
rcrl
dec
ss
xor
push
push
mov
insb
out
sbb
ss
cwtl
pusha
sub
jg
inc
ja
out
movsb
sbb
mov
sahf
jo
add
cmp
jne
xor
das
jne
mov
cmp
stos
mov
out
pop
into
insb
bound
sub
mov
dec
arpl
imul
and
lods
addr16
pop
lahf
cltd
mov
and
push
jg
outsb
int3
jno
pop
lods
or
sub
popa
push
push
xor
mov
out
push
cmp
mov
repnz
push
cmp
sbb
sbb
jnp
jp
inc
clc
lods
test
jns
mov
adc
cmp
mov
sub
or
mov
out
mov
jg
or
cmp
rol
ja
pop
add
pop
dec
ja
out
lods
sbb
mov
xchg
add
in
mov
cmp
dec
lods
add
xor
movsb
jne
xor
popf
jns
mov
adc
lret
clc
and
xor
es
push
dec
mov
mov
loopne
xchg
jne
ljmp
xchg
and
jns
mov
adc
pusha
gs
mull
mov
call
aaa
pop
mov
ss
hlt
mov
insl
cmp
repnz
ss
out
xchg
sbb
mov
jl
sbb
ss
jnp
jp
inc
cli
lods
cmpsl
and
add
aas
xchg
jne
popf
xorb
inc
cmc
push
imul
inc
mov
insb
xchg
fsubrs
mov
clc
or
jl
iret
cmp
push
pop
shrb
jnp
stc
loopne
sbbb
xor
mov
sub
insl
inc
ret
mov
cwtl
adc
lahf
sbb
lahf
mov
inc
xchg
sub
andl
gs
pusha
popf
ds
dec
cs
ret
xor
push
push
mov
jae
xchg
and
pop
inc
pop
cld
mov
push
sub
sbb
daa
sub
sbb
sub
inc
cs
movsl
jae
pop
pushf
inc
stos
fidivrl
shrl
xor
pop
inc
dec
push
pop
xor
aas
stos
lcall
cmp
ljmp
nop
sbb
or
dec
xchg
insb
loopne
frstor
and
push
ja
dec
sub
data16
outsb
sbb
jo
adc
sub
inc
stos
cs
add
push
popf
pop
in
mov
addl
movsl
wbinvd
stos
mov
insb
pop
out
ret
sub
push
bound
jp
mov
mov
outsl
lods
dec
sbb
pop
inc
sbb
stos
pop
jecxz
mov
dec
pop
jns
imul
jns
stos
jno
movsl
push
daa
or
push
stos
inc
pop
insb
lcall
mov
jecxz
push
inc
sbb
imul
pop
adc
adc
push
dec
jnp
sub
sbb
and
and
push
imul
nop
inc
sub
aas
cmp
movsb
scas
lret
xchg
or
pop
lret
call
loope
jmp
outsl
inc
mov
mov
lods
ffree
jne
jp
mov
inc
pop
pop
cmp
add
push
add
mov
cmpsl
dec
faddl
cli
in
and
je
rclb
push
jo
out
imul
push
jmp
insb
pop
xor
xchg
shrl
lret
stos
lahf
push
mov
xor
jge
sub
sub
jae
iret
sbb
jnp
shl
out
insl
mov
mov
cmpb
popf
inc
jecxz
add
pop
loopne
out
or
inc
iret
ljmp
loopne
fists
pop
and
mov
jnp
dec
sub
fldt
jle
and
push
and
or
je
jnp
bound
lahf
push
cltd
xchg
mov
pop
pop
cld
jne
daa
das
test
popf
pop
leave
pop
ljmp
daa
sub
push
lods
mov
jmp
aad
cmp
mov
inc
mov
lahf
fcmovnu
fs
lea
xor
push
gs
dec
pop
rorb
loopne
out
push
xchg
inc
repz
int3
fcomi
cmpsl
sbb
into
push
inc
cmp
push
jne
jo
stos
sub
push
loop
push
punpcklwd
lea
out
adc
xor
outsl
xor
inc
jo
insl
pop
add
adc
mov
push
test
cld
popf
dec
mov
dec
xor
aad
adc
out
sti
pop
inc
sbb
pusha
daa
mov
jbe
enter
js
pop
in
push
xchg
add
and
inc
xchg
jmp
jle
mulb
and
jbe
inc
std
push
mov
cltd
jbe
sbb
les
fists
jae
or
addr16
jns
call
pop
dec
rcrb
xchg
je
jne
cmpsb
adc
fiaddl
mov
pop
lcall
js
xchg
xchg
fadds
scas
mov
sub
fstpt
push
shll
jno
xor
xchg
pop
data16
jnp
push
out
or
inc
inc
test
jae
popa
sub
sub
imulb
push
push
xor
movsb
iret
mov
cmp
inc
mov
scas
add
jle
shlb
mov
stos
call
loopne
sub
mov
or
ljmp
out
out
out
sub
js
jo
push
add
jnp
push
fsubs
aaa
dec
pop
xchg
imul
pusha
andl
out
push
daa
pcmpgtw
sub
neg
xchg
js
jge
dec
lcall
andl
jmp
lods
and
push
or
add
adc
push
pop
or
mov
in
enter
mov
inc
add
jge
test
cmp
mov
sbb
xor
into
lret
and
std
pop
or
add
int3
push
sub
and
sbbl
jne
pusha
mov
ds
addr16
add
mov
cmp
lods
and
push
lods
adc
mov
in
mov
xchg
lods
int3
mov
cmc
lods
lods
mov
aad
mov
xor
push
pop
add
push
cmp
jne
sub
gs
sbb
push
push
or
mov
push
enter
mov
add
sbb
inc
aaa
push
push
add
rcll
add
or
and
mov
in
pop
mov
mov
adc
inc
aad
shlb
aad
aad
shr
xchg
sub
xchg
inc
fdivr
aaa
inc
sub
in
lods
jl
jno
push
in
inc
lods
inc
in
pop
lods
mov
in
mov
in
les
out
sub
bound
mov
jecxz
int3
cmp
cwtl
sbb
or
loopne
fwait
mov
mov
rcrb
push
rolb
ret
aad
sbb
push
inc
inc
cli
push
aad
rolb
int3
jo
add
inc
jno
xor
jno
and
out
aas
jmp
dec
push
add
push
push
and
sbb
push
dec
inc
pop
sbb
or
dec
rorl
cmp
mov
jp
xor
aas
hlt
insl
popf
sub
imul
mov
or
inc
and
inc
adc
inc
mov
push
les
and
inc
lods
cli
mov
test
fbld
mov
in
pushf
push
addl
clc
xor
dec
clc
out
in
xchg
clc
in
lock
mov
adc
or
dec
out
dec
adc
xor
mov
mov
pop
rorb
rclb
push
mov
or
das
add
add
lods
pop
mov
push
jl
push
outsl
xchg
movsl
or
sbb
call
lods
loopne
cmp
adc
push
pushf
inc
nop
push
out
pop
push
push
xor
mov
fucomi
es
lcall
xchg
shr
enter
ja
mov
dec
push
or
dec
inc
or
dec
dec
or
dec
mov
or
dec
cwtl
or
dec
lea
dec
shlb
push
sub
loop
mov
jmp
xlat
mov
ds
xor
adc
sbb
jns
push
pop
movsl
sbb
pop
in
pop
dec
or
fs
imull
sbb
loop
mov
lods
iret
popf
mov
test
push
sub
sbb
hlt
inc
push
jmp
jl
cmp
addr16
inc
push
pop
jo
add
xchg
lcall
lcall
clc
in
and
pop
in
push
clc
push
in
js
cs
data16
sbb
push
clc
call
in
stc
sti
aas
push
jmp
clc
nop
in
leave
stc
pusha
sbb
or
dec
pop
or
jbe
dec
sbb
icebp
or
sub
or
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
push
jg
addr16
mov
push
mov
mov
xor
insl
mov
adc
pop
dec
mov
idivb
pop
xchg
fwait
pop
xchg
sbb
pop
negb
jmp
sbb
in
test
mov
insb
shlb
dec
rolb
sub
gs
sbb
push
inc
or
inc
inc
cld
push
mov
in
cwtl
push
xchg
inc
mov
cmpl
in
lods
movsb
mov
int
test
punpcklwd
or
jl
xor
sbb
sbb
push
xchg
adc
mov
mov
xchg
sub
into
or
dec
inc
sbb
jno
insb
push
popa
inc
jl
push
inc
dec
push
inc
inc
pop
push
mov
lods
push
mov
inc
mov
adcl
dec
loope
cld
dec
sarl
dec
xchg
dec
fdivl
aad
rclb
movsb
push
pop
inc
ds
ja
cs
addr16
push
jge
filds
push
mov
lods
push
mov
inc
mov
addl
push
loope
cld
push
sarl
mov
dec
sub
and
cmp
adc
or
add
sbb
jno
shrb
pop
or
data16
inc
repz
pop
nop
sbb
pop
hlt
sbb
pop
cld
sbb
pop
les
aad
int3
into
scas
dec
push
iret
pop
adcb
xor
or
sub
adc
je
mov
repnz
adc
in
mov
jmp
cmp
loop
xchg
loop
mov
jno
insb
mov
mov
loop
lods
push
xor
test
xchg
pop
mov
popf
pop
xchg
sbb
pop
in
jmp
dec
and
cmp
sbb
pop
xor
sub
sbb
stc
pop
sbb
jl
insl
pop
inc
sbb
dec
sbb
push
sbb
pop
sbb
pop
nop
sbb
pop
loopne
stc
pop
call
adc
dec
sub
cmp
pop
cmp
sub
pop
or
or
pop
dec
sbb
push
sbb
pop
sbb
movsb
sbb
pop
cwtl
sbb
pop
loopne
stc
pop
call
sbb
pop
clc
scas
shll
sub
data16
pop
rcrb
push
rclb
dec
mov
aad
rcrb
rorb
rolb
sarb
repnz
mov
repz
shr
cmpsb
shl
sahf
rcr
mov
mov
push
pop
add
push
push
add
loop
sbb
or
push
in
inc
clc
in
mov
clc
out
in
stos
clc
out
xchg
clc
mov
jmp
cmpsb
in
jecxz
and
xchg
dec
lahf
or
push
pop
test
inc
rolb
push
dec
jnp
shlb
rclb
shrb
loop
lahf
aad
rclb
mov
sub
lds
fdivl
and
add
xor
add
add
sub
jg
push
jg
push
jg
push
push
mov
testb
mov
lods
sbbb
jb
das
lods
push
daa
lods
dec
mov
arpl
push
mov
dec
js
test
ror
inc
lea
or
dec
std
or
dec
in
fdivrl
mov
add
pop
add
lds
mov
mov
adc
jmp
push
and
daa
sub
or
sub
add
mov
mov
aaa
shlb
shrb
shlb
rcrb
rclb
rorb
rolb
sarb
dec
addl
rcrb
push
imul
mov
into
movsl
rorb
push
sbb
stc
xor
dec
loopne
iret
dec
les
add
push
jo
fnstcw
xor
test
inc
rcll
jno
sub
sti
fwait
dec
inc
mov
shrb
inc
mov
xchg
cmpsl
les
xlat
cmp
dec
lods
loop
jecxz
lahf
xor
jno
xor
pop
aaa
scas
jg
jmp
clc
dec
aad
sub
xor
jg
jb
xor
jg
outsb
es
sub
bound
push
loop
mov
movsb
sub
xor
mov
or
mov
mov
test
imulb
xchg
mov
inc
jecxz
and
jno
xor
int3
inc
ljmp
outsb
lcall
dec
lcall
mov
lcall
test
test
lock
lret
push
les
das
mov
sbb
es
scas
sbb
mov
roll
movsb
lcall
iret
fwait
push
mov
dec
or
arpl
lahf
mov
sub
sbb
adc
inc
add
inc
icebp
outsl
lcall
divl
cmp
push
push
mov
std
clc
xchg
in
stc
push
dec
sub
sbb
jp
jp
push
or
dec
movsb
or
or
dec
or
loop
mov
outsb
mov
jl
inc
popf
push
int
jl
xor
jne
jne
and
out
jae
imul
xor
popf
xor
jg
scas
outsl
icebp
xchg
cmpsb
pushf
or
push
ret
roll
cmp
xor
daa
push
sbb
jg
cmp
push
gs
imulb
loop
push
jnp
push
mov
rcrb
xor
dec
sbb
aad
sar
mov
mov
clc
arpl
adc
mov
add
and
in
mov
sub
dec
insl
daa
inc
lods
or
sbb
mov
addr16
test
cmc
push
cmp
or
addr16
fsubl
lahf
mul
push
xor
pop
adc
xchg
in
adc
fwait
sub
sbb
pop
sbb
inc
xchg
push
popl
push
loop
stc
push
inc
leave
sbb
inc
mov
and
pop
add
sbb
bound
push
xor
mov
out
popf
adc
xchg
lods
stos
mov
jecxz
lea
jne,pn
or
and
loop
mov
cltd
loop
mov
movsl
out
and
jae
adc
popa
inc
mov
sub
idivb
lea
mov
in
lods
movsb
mov
int
test
cmp
add
or
out
jne
sub
push
sbb
mov
sbb
pop
mov
sbbl
repz
out
sbb
pop
sbb
in
add
mov
je
sub
aad
xchg
push
sub
xor
insl
mov
in
push
lods
dec
in
cmpsb
lods
mov
or
dec
fwait
or
dec
mov
dec
sti
or
data16
sbb
lds
jl
xor
js
add
pop
rcrb
inc
imul
mov
mov
divb
or
and
push
mov
inc
jg
mov
fildll
jl
or
dec
jno
adc
sub
ss
inc
sbb
pop
or
sbb
add
fidivs
gs
add
push
in
pop
mov
mov
inc
int3
cmp
or
sbb
push
ss
sbb
jp
sti
rorl
call
mov
sbbl
jmp
jge
push
sub
movsb
cli
divb
into
jbe
icebp
jl
setl
fisttpl
adc
repnz
inc
imul
and
xchg
mov
lods
pop
add
dec
out
mov
xchg
or
jne
jle
xlat
mov
adc
xchg
sub
hlt
inc
sbb
pop
cmc
shrb
fidivrs
repnz
cmpsl
cmpsl
rcl
lret
lods
lret
data16
mov
or
sbb
leave
push
jbe
sbb
lock
shlb
sub
jbe
std
in
mov
call
ljmp
loop
test
jb
push
daa
mov
mov
mulb
inc
or
pop
sarb
mov
shr
testb
mov
xor
jnp
inc
loope
jle
aas
mov
insb
lods
popa
scas
mov
imul
lock
movsl
xlat
inc
lret
fcompl
int
dec
outsl
or
sbb
enter
lods
dec
cmp
mov
mov
mov
imull
call
inc
in
push
mov
inc
shrl
mov
and
adc
pushf
and
mov
mov
mov
test
push
or
jp
aas
lcall
arpl
pop
sub
insl
adc
push
sbb
ja
loope
dec
push
imul
cmp
or
or
int3
clc
dec
testb
and
cmp
mov
in
add
sub
mov
movhps
mov
jo
pavgb
xor
ficoms
fstpt
lcall
cmpsl
pop
lcall
cmp
adc
cmc
mov
loope
cmp
mov
jnp
imull
pushw
lahf
adc
sub
fwait
mov
cmpsb
popf
adc
pop
push
xchg
pop
mov
xchg
add
nop
xchg
mov
subl
int3
xor
mov
push
add
push
push
call
cwtl
movsb
add
dec
repnz
pop
lods
dec
push
sub
or
dec
mov
out
lods
idivb
call
dec
jmp
sbb
xlat
mov
mov
inc
in
pop
adc
in
movsb
jbe
cld
inc
cmp
push
xor
sti
cmpsb
ja
mov
std
inc
mov
movsl
jns
mov
loop
mov
jmp
inc
sarb
mov
ror
lods
leave
xchg
dec
cmp
mov
inc
inc
push
add
imul
push
addr16
and
pop
clc
sbb
push
sbb
sbb
test
js
gs
mov
fwait
out
mov
dec
push
xor
jge
filds
push
adc
sbb
pop
mov
mov
jmp
aas
dec
das
or
xor
sbb
or
aaa
data16
pop
sbb
xor
mull
inc
cmp
mov
mov
jae
sub
clc
add
push
sub
jno
rorb
dec
sub
aaa
pop
pop
dec
out
add
mov
popf
scas
cmc
pop
cld
jg
xchg
das
sub
or
scas
and
popf
hlt
pop
iret
lods
sub
roll
push
mov
stos
sbb
cmp
push
inc
outsl
test
jg
push
jg
push
jb
sbb
mov
inc
jo
and
push
xchg
lcall
aaa
mov
cmpsl
int
in
lds
and
mov
out
mov
out
pop
mov
bound
or
pop
loop
mov
xchg
loop
mov
inc
sub
mov
jmp
cli
int3
inc
nop
fldt
lcall
mov
mov
pop
das
mov
mov
cmpsb
mov
repnz
cmp
in
push
leave
lret
sbb
or
sbb
divb
adc
movzwl
push
inc
push
sbb
fldln2
mov
jecxz
aam
aaa
push
push
xor
jle
jg
pusha
aas
adcl
xor
fldl
sbb
xchg
inc
adc
jno
push
cmp
jge
push
daa
pop
cmp
fnstenv
dec
or
add
sub
inc
cmpsb
das
imul
and
movsb
popl
cwtl
shlb
inc
or
add
push
jo
jge
adc
lcall
clc
inc
sub
xchg
enter
std
movsl
das
xor
push
cmp
fildl
lcall
and
adc
pop
lcall
xor
or
cmp
xor
push
jg
insl
push
dec
adc
repnz
lods
mov
in
sub
bound
mov
push
loop
test
cld
cmp
gs
cmp
or
and
pop
lods
fwait
and
and
dec
aaa
mov
or
mov
jno
xor
outsb
in
pop
lahf
jnp
rclb
inc
add
out
xchg
push
cmpsb
test
std
sub
push
pop
add
ljmp
inc
push
xor
inc
pop
push
jl
xor
pop
adc
int3
mov
hlt
sbb
or
inc
cmp
push
cmpsb
or
sbb
aad
mov
shlb
ret
jbe
fisubl
sbb
mov
jecxz
repz
lcall
clc
xor
imul
mov
stos
adc
loop
mov
loop
fmuls
cmp
sbb
mov
inc
sub
push
push
and
mov
push
xor
dec
orl
push
or
dec
orb
aam
sub
adc
mov
or
je
jp
dec
pop
xchg
lods
mov
jbe
pop
ljmp
jne,pn
outsb
push
add
mov
clc
cmp
and
fidivrs
stos
cmp
or
das
sub
mov
call
addr16
mov
add
dec
xor
pop
nop
orb
shl
mov
cvtps2pd
sbb
xor
or
lret
dec
cmp
cmp
inc
add
push
xchg
cmpsb
pop
loopne
out
xchg
sbb
or
or
outsb
inc
sarl
xchg
divb
inc
testb
cltd
jg
aaa
or
ja
inc
and
in
push
cmp
mov
lods
push
es
jp
insb
mov
and
push
js
xor
sub
push
popa
and
jnp
sub
cmp
push
lds
mov
mov
pop
ret
sti
and
fisttpl
flds
push
mov
out
and
dec
push
or
jbe
sbb
dec
xor
jb
jg
xchg
sbb
xor
lret
and
mov
outsb
adc
cmpsl
je
mull
movsb
in
subl
sub
adc
les
gs
jne
nop
shrb
testb
inc
shlb
dec
or
loope
dec
add
mov
notl
dec
ret
adc
mov
fdivrp
cmc
sbb
ja
insl
stos
rorl
pop
inc
cli
adc
inc
sub
pop
adc
in
mov
fiadds
ss
mov
xor
dec
xor
jno
aas
int
cld
inc
push
jno
fsubrl
push
xchg
mov
push
xchg
mov
or
add
repnz
lea
sub
ret
inc
add
push
add
in
shlb
cmp
sbb
sub
pop
push
fdivrs
or
mov
mov
xor
inc
xor
dec
push
or
jno
mov
mov
fldenv
add
out
mov
adc
cwtl
or
dec
call
cs
xor
dec
pop
or
out
jno
pop
insl
dec
imul
div
out
push
jns
sub
pop
ss
mov
enter
add
ret
aas
clc
pusha
pop
jne
pushf
push
cmp
fstl
sub
sbb
or
dec
inc
xor
cmp
mov
mov
es
jae
lods
lods
ja
cld
jno
int
pop
mov
outsl
cmp
pop
je
or
loop
mov
dec
aaa
insb
mov
push
test
inc
mov
mov
mov
pop
jnp
sub
popa
mov
sub
jb
cmp
sub
pop
adc
lcall
sbb
mov
ja
je,pn
rolb
and
and
seto
fadd
sar
and
cmp
movsb
fldt
cmp
pop
ja
cmp
dec
mov
dec
cmpsb
add
cmpsb
aaa
jecxz
add
or
jo
std
test
sub
mov
add
iret
or
jo
and
cmp
xor
sub
sub
mov
out
out
scas
cwtl
or
dec
cltd
rorb
mov
in
std
test
inc
push
inc
inc
cli
push
out
push
cmpsl
test
jae
jg
orb
inc
pop
pop
sbb
jnp
xor
push
jl
inc
xor
inc
adc
dec
jp
sub
dec
iret
xor
mov
gs
mov
addr16
xor
int3
fsubrs
cmp
push
fsts
push
xorb
imul
dec
push
or
add
shl
or
inc
or
xor
add
mov
mov
mov
insb
cmp
mov
sbb
rcl
insb
fstpt
inc
fisttpl
fwait
in
xor
adc
inc
pop
adc
mov
add
xor
jg
mull
xchg
nop
stc
dec
notb
jl
sbb
lock
jns
or
pop
cmp
push
pop
movsb
outsl
lret
inc
out
mov
inc
imul
inc
push
mov
cwtl
lods
shr
jg
dec
cmp
or
outsl
mov
cmp
jp
cmp
adc
adc
mov
fldl
jl
test
jnp
sbb
inc
aad
inc
lcall
in
lock
jns
mov
fwait
mov
xor
mov
mov
push
sbb
and
ficompl
out
lock
fisttpll
in
mov
loope
pop
aas
jb
and
out
rclb
cmp
cmpl
fsts
or
loope
pop
pop
sbb
mov
xor
jae
js
or
fucompp
shlb
jo
add
push
or
test
or
xlat
xlat
pop
mov
dec
adc
mov
mov
subb
ljmp
repnz
cmp
mov
cwtl
xchg
mov
shrb
and
jbe
aas
es
shll
mov
dec
pop
push
roll
ret
pop
fistpll
pusha
mov
add
leave
lods
add
adc
fucomi
xchg
sbb
clc
mov
lahf
mov
sbbl
add
inc
jnp
sbb
jle
cmpsl
inc
inc
in
out
adc
lahf
xor
movsl
mov
adc
ja
mov
mov
jno
outsl
jns
shrb
add
adc
mov
lea
sarb
loop
dec
lods
xchg
mov
mov
insl
xlat
adc
pusha
jne,pt
sbb
enter
mov
imulb
inc
inc
xchg
push
pop
and
aam
or
ja
cmp
jnp
pop
xor
ljmp
roll
pop
in
nop
cli
mov
sbb
roll
jbe
push
jle
insl
rolb
mov
dec
in
imul
ret
and
outsl
repz
and
mov
adc
inc
inc
and
cli
xor
ret
cmc
jmp
cmpsb
jmp
jo
jecxz
push
xchg
add
mov
dec
stos
mov
gs
push
cmp
cli
add
push
fiaddl
xchg
adc
mov
fdiv
int
push
aaa
cmp
mov
and
outsb
or
shrb
cmp
inc
daa
and
cli
and
insl
call
add
aad
rorb
ss
mov
push
mov
sub
fcmovbe
or
pop
pushf
lods
mov
xor
cmp
or
xor
insl
aas
insl
and
xor
in
daa
clc
bound
xor
push
push
cltd
cli
jl
sbb
add
adc
lods
popa
in
jo
and
in
pop
inc
or
insl
push
cld
sub
mov
inc
outsl
arpl
js
mov
ret
fwait
fs
xchg
lods
arpl
pop
inc
negb
mov
mov
and
mov
in
out
in
lahf
lods
scas
xchg
pop
inc
cmpsb
push
jecxz
sahf
push
xchg
sbb
sub
shlb
daa
pop
outsl
inc
sbb
lret
xor
pusha
xlat
pop
dec
xorb
xlat
add
cli
fs
dec
sbb
jge
mov
push
xor
adc
push
jl
cmp
add
push
je
cmp
and
pop
or
adc
cs
pop
fidivl
out
fistpl
leave
and
xchg
pop
mov
xor
pushl
or
push
cmp
xor
ret
push
cmp
aad
sbb
xchg
xchg
add
dec
mov
dec
out
add
ret
cmpsb
add
mov
daa
mov
sbbl
aaa
out
inc
add
jne
jb
jb
push
xor
cs
js
cmp
sbb
xchg
fistpll
lods
fbld
inc
filds
push
filds
inc
mulb
mov
xlat
jns
pop
push
pop
dec
cmp
inc
dec
pop
jbe
daa
inc
testl
push
insb
jge
subb
push
pop
out
push
push
insl
jae
cmp
xor
pop
pop
xor
cld
and
insl
out
cltd
or
mov
xor
fsubs
inc
outsb
or
sub
and
cmp
sti
lods
jne
sub
pop
out
gs
push
ficoms
xor
pop
and
and
call
dec
inc
jae
cltd
mov
jno
sub
cmp
mov
movsb
loope
sub
and
sbb
cwtl
xchg
dec
dec
sub
sbb
dec
lret
sbb
sbb
push
insb
pop
loopne
dec
adc
and
int
pop
push
add
xchg
das
jmp
mov
call
or
into
push
out
dec
cs
sub
dec
push
mov
sbb
or
fildll
adc
mov
pop
jo
es
dec
insl
inc
sub
test
sub
cmpsb
pop
xchg
dec
xor
fldenv
adc
adc
out
jbe
dec
lock
push
add
lods
push
gs
mov
fldt
pop
sub
dec
jns
inc
mov
xor
push
mov
or
xor
fdivs
lods
jbe
or
aam
movsb
test
sbb
pop
cmp
or
pop
xor
pop
popf
adc
jo
xchg
push
dec
es
inc
hlt
cwtl
jnp
out
xchg
xchg
mov
sbb
push
sub
dec
xchg
ss
dec
testb
add
cmp
enter
subb
push
or
adc
mov
lea
adc
into
push
mov
ret
jmp
rcll
mov
push
fiaddl
adc
inc
int
push
jno
sbb
jne
fistl
pusha
mov
mull
sub
stos
divb
mov
and
lods
outsl
mov
pop
ret
insb
sbb
push
arpl
jb
loop
sub
imul
adc
dec
stos
dec
or
adc
inc
dec
in
cmpsb
inc
fiadds
add
jl
lods
dec
pop
push
pusha
pop
mov
fsts
sti
repnz
mov
addr16
pop
pop
dec
testl
cwtl
jbe
jb
dec
pop
movsl
fdivs
mov
xor
xchg
sub
pop
mov
push
or
adc
ss
movsb
data16
cwtl
sub
outsb
cvttps2pi
test
testb
js
das
mov
sub
sub
cmp
xor
sub
into
push
or
pop
mov
mov
jp
mov
jae
jo
jb
or
mov
leave
jb
adc
ds
insb
jmp
bound
out
cmp
push
int3
bound
pop
pop
adcw
js
inc
pop
out
adc
ljmp
insb
dec
pop
push
in
adc
push
scas
scas
mov
dec
inc
jl
fldt
jl
cmp
sub
out
ret
lret
jg
push
mov
sarl
inc
inc
pop
or
loopne
lcall
out
sbb
shr
outsb
sti
and
mov
mov
mov
mov
imulb
xor
push
add
adc
ds
stos
adcl
xor
jo
mov
xlat
sbb
xor
repnz
sbb
jne
push
pop
ljmp
outsl
js
jecxz
mov
and
outsl
cmpb
js
sub
es
shr
outsb
push
pusha
icebp
outsl
sub
pop
addr16
jl
adc
inc
xchg
imul
daa
xor
jne
or
inc
xchg
sbb
roll
mov
popf
out
pop
sbb
mov
popf
sarb
jns
sub
lods
push
adc
fadds
pop
and
xor
adc
mov
push
inc
jbe
clc
rcll
jbe
jo
push
movsb
js
cmp
sbb
out
xor
or
adc
fmuls
insb
pop
adc
pop
pop
jmp
xor
jae
dec
jg
pop
popa
inc
push
xchg
outsl
pop
ret
adc
xor
sbb
out
test
dec
les
sub
mov
dec
mov
jne
sbb
bound
jle
pusha
xor
push
sbb
je
mov
add
test
rcrb
fsubr
fcomps
add
sbb
add
add
add
pop
sub
sub
adc
mov
or
btr
add
cmp
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
and
mov
mov
movsbl
add
or
or
jmp
lcall
ret
or
adc
adc
and
xor
xor
add
adc
adc
jmp
lcall
xor
add
add
pop
xor
xchg
push
not
adc
adc
or
adc
xor
or
test
call
lcall
incl
ret
neg
sub
sub
test
add
or
movzwl
neg
xor
btc
jmp
lcall
add
shr
adc
xor
adc
not
adc
test
mov
mov
xchg
push
push
xchg
dec
add
add
call
cmp
adc
bt
test
cmp
bts
test
add
mov
shl
inc
add
test
inc
btc
test
and
mov
shl
sub
xchg
mov
not
shr
bsf
and
shr
adc
add
neg
jmp
lcall
ret
or
add
dec
and
bsf
test
adc
xor
and
call
lcall
add
xorl
pop
xor
xchg
push
sub
and
dec
xor
shr
not
and
movzwl
movswl
jmp
lcall
stc
add
xchg
ret
neg
sub
and
or
add
cmp
shr
cmp
cmp
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
test
mov
add
mov
movzbl
test
bts
jmp
lcall
or
call
not
bswap
cmp
test
bts
adc
xor
cmp
add
mov
adc
test
shl
sub
test
adc
and
call
lcall
add
not
shl
xor
shr
or
xor
sub
bsf
call
lcall
or
and
or
neg
btc
cmp
btc
bts
bts
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
test
test
dec
xor
bsf
or
bt
bswap
call
lcall
xor
les
cmp
mov
repz
or
dec
adc
jmp
lcall
fsubs
aaa
xchg
ret
mov
test
or
or
cmp
mov
or
or
or
add
sub
cmp
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
or
test
test
test
add
mov
push
or
add
bsf
add
or
xor
add
add
mov
shl
sub
shl
test
movzwl
shr
mov
and
add
mov
xor
test
adc
and
xor
btc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
not
test
shr
shr
btr
and
cmp
call
lcall
add
sub
xor
adc
cmp
bt
cmp
mov
xor
inc
mov
add
mov
or
xor
and
sub
bsf
xor
mov
sub
mov
test
bsf
shr
adc
mov
and
not
cmp
add
call
lcall
mov
adc
cmp
btr
movzwl
mov
inc
bts
cmp
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
add
cmp
bt
neg
test
xor
test
and
bts
shr
neg
not
btc
and
mov
add
cmp
shr
bsf
jmp
lcall
jmp
mov
test
mov
xor
adc
neg
movzbl
mov
add
cmp
btr
test
inc
shl
shr
or
bt
call
lcall
add
bsf
shl
test
and
shr
adc
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
btc
adc
sub
shr
neg
or
and
sub
mov
adc
test
mov
sub
mov
movzbl
sub
btr
movswl
or
bt
and
bt
shr
bt
bt
mov
add
and
shr
shl
or
sub
xor
and
test
lea
inc
cmp
jne
btc
sub
xor
xor
movzwl
sub
add
bts
add
shl
movsbl
bt
xor
adc
bsf
neg
and
inc
call
lcall
je
sub
test
sub
shl
test
add
or
movswl
sub
mov
bt
cmp
or
shr
cmp
test
bsf
call
lcall
mov
xor
bt
bts
sub
sub
mov
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
neg
bswap
btr
and
test
or
mov
bsf
call
lcall
inc
and
shr
sub
btc
cmp
test
mov
add
shr
shr
shl
add
not
test
or
cmp
mov
jmp
lcall
xor
test
test
movswl
shl
shl
mov
add
mov
and
add
xor
and
test
or
inc
call
lcall
add
shr
cmp
and
or
xor
test
add
push
pop
inc
add
loop
add
sub
xor
bt
xor
btr
not
push
decl
mov
add
cmp
xor
shl
mov
shl
xor
add
call
lcall
jmp
loopne
mov
bsf
or
and
sub
xor
test
push
shll
or
adc
cmp
test
xor
not
shl
push
cmp
sub
btr
or
shl
test
bsf
sub
mov
shl
or
neg
or
bts
test
add
mov
push
push
pop
add
add
call
or
bsf
btc
cmp
bts
add
adc
xchg
shr
add
shr
mov
shr
mov
sub
mov
mov
mov
mov
test
cmp
adc
cmp
xor
bsf
call
lcall
mov
bt
cmp
and
not
sub
shl
shr
add
btr
mov
mov
test
sub
xor
xor
call
lcall
sub
call
mov
hlt
leave
test
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
add
inc
btr
xor
test
adc
test
test
bsf
bts
mov
btc
bts
btc
bswap
call
lcall
les
test
neg
or
and
cmp
cmp
mov
bsf
and
not
add
movswl
adc
sub
movzbl
cmp
je
cmp
bts
cmp
cmp
bts
bt
and
adc
inc
add
mov
shr
or
xor
movzwl
movzwl
test
call
lcall
inc
mov
cmp
cmp
mov
shr
and
neg
or
dec
sub
shr
bsf
btr
bts
cmp
adc
neg
xor
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
shl
cmp
shr
test
neg
bsf
test
inc
push
decl
mov
add
not
test
test
cmp
movzbl
btr
btr
btr
push
decl
mov
add
btr
not
sub
bts
add
add
xor
add
xor
mov
btc
test
neg
xor
mov
bt
jmp
shl
sub
or
movswl
adc
bt
cmp
cmp
mov
or
dec
xor
cmp
btr
cmp
or
mov
shr
or
and
bt
cmp
and
bsf
sub
add
test
inc
btc
neg
btc
cmp
add
add
bts
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bt
shl
bts
or
inc
not
adc
add
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
adc
sub
not
adc
xor
and
mov
sub
or
push
push
btr
shr
test
bt
bt
shr
shl
dec
add
push
sub
mov
neg
not
shl
cmp
adc
or
adc
xor
mov
cmp
test
test
shl
mov
xor
not
add
shl
call
lcall
js
mov
test
neg
btc
btc
and
shr
cmp
dec
lea
bts
shl
bsf
add
cmp
xor
add
mov
shl
dec
xor
or
test
adc
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
or
std
stos
lods
test
bt
not
shl
bsf
xor
sub
mov
btr
sub
cmp
inc
cmp
test
shl
sub
push
sub
inc
not
cmp
cmp
or
add
btc
push
test
bts
and
xor
dec
bt
bts
push
shl
xor
not
test
cmp
adc
sub
adc
call
lcall
mov
xor
btc
shl
inc
cmp
test
mov
cmp
movswl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
bt
test
cmp
bsf
movzbl
test
call
lcall
sub
test
cmp
shr
cmp
xor
sub
add
or
xor
bsf
or
sub
dec
shl
call
lcall
mov
adc
add
bts
add
mov
dec
add
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
inc
cmc
fiadds
hlt
or
push
std
pop
je
add
pop
ss
add
inc
mov
fdiv
cmp
add
jo
add
mov
add
imul
adc
xor
movsb
add
or
mov
and
or
popf
add
loop
add
dec
add
das
gs
ljmp
aad
push
add
sti
pop
gs
pop
jne
pop
push
and
int
scas
dec
ds
ret
das
inc
dec
lea
cmp
gs
aas
inc
in
out
adc
dec
mov
lock
add
add
or
out
add
xchg
or
loop
add
adc
inc
or
mov
or
or
add
xor
mov
fsubl
mov
inc
or
shlb
add
sbb
or
push
mov
sbb
xchg
jp
call
pop
mov
adc
inc
dec
inc
push
dec
ja
add
inc
pop
inc
aaa
cmp
jbe
cmp
jbe
inc
ds
xor
xor
arpl
pop
fsts
jecxz
dec
inc
xor
dec
pop
push
inc
dec
pop
mov
jbe
idivb
jno
jp
pop
inc
xor
icebp
adc
aaa
flds
xor
std
mov
dec
add
push
push
push
inc
inc
dec
xor
faddl
add
gs
dec
inc
nop
pop
sub
test
add
xor
dec
inc
enter
sbb
push
sahf
ss
aaa
push
pop
pushf
ds
repz
lds
dec
dec
mov
cmp
pop
loop
jmp
pop
cmp
pop
aam
bnd
cmp
inc
cs
pushf
cld
and
push
push
inc
push
pop
add
shll
aaa
fistl
inc
or
pop
push
add
or
add
and
jne
jecxz
jb
hlt
popa
jl
jmp
jecxz
aaa
cs
push
push
outsl
addr16
cmpsl
insl
xorl
jecxz
mov
fsubl
or
push
inc
cli
loope
outsw
loop
sti
adc
push
push
imul
fimull
stc
aas
push
gs
jmp
jecxz
jecxz
mov
xchg
into
jb
es
cs
das
adc
adc
pop
jb
inc
insl
jo
ss
jmp
sbb
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
out
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
ljmp
jae
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
add
addb
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
ljmp
add
insb
