sub
xor
clc
inc
loopne
js
addb
mov
or
rorb
js
cmc
or
sub
shlb
in
scas
ror
adc
jbe
shll
sub
cmp
pop
or
in
sbb
les
in
cmp
mull
sub
inc
lret
pusha
in
bswap
je
sub
pop
iret
fidivrs
add
std
popf
lods
lahf
adc
fldenv
push
int3
pusha
dec
mov
sbb
mov
sub
pop
in
cmp
jnp
jle
push
movsb
sti
inc
mov
jo
je
pusha
dec
mov
push
scas
test
ret
push
pop
jmp
jmp
fsubrl
dec
xor
ret
in
sbb
sub
jne
call
shl
fstpl
mov
cmp
push
mov
push
orl
mov
scas
andl
je
bound
or
sbb
pushf
cltd
add
sti
ljmp
fsubl
mov
test
adc
shrl
ss
iret
mov
incl
in
inc
sub
push
xlat
test
fs
mov
cltd
ss
push
push
add
jnp
jnp
repnz
in
or
xor
pop
inc
mov
sbb
pop
shrl
jg
out
dec
lcall
scas
xchg
mov
add
mov
mov
test
andb
cmp
js
cs
adc
sbb
xchg
mov
out
inc
out
add
or
mov
lock
xor
fnstsw
and
inc
test
fnstsw
mov
mov
incb
adc
fcoml
fistps
lds
push
pop
add
pop
xor
dec
jne
rcll
cmp
ds
cmpsb
xchg
sub
add
mov
or
add
rorl
xchg
push
push
pop
stos
iret
gs
in
dec
out
jo
shr
int3
jg
je
pushf
iret
dec
out
cmp
sub
pop
dec
cmp
inc
int3
mov
jl,pn
cli
stos
pop
inc
pushf
ljmp
or
shlb
cmp
add
or
ljmp
adc
xchg
sub
jp
addr16
cli
pop
ds
enter
cmc
movsb
in
lret
push
mov
aam
test
cmc
pop
jo
in
fstpl
push
pop
fwait
jo
popf
sbb
mov
loopne
mov
jmp
imul
add
or
shlb
ja
in
imul
xor
orb
or
mov
cltd
js
stos
test
scas
push
xor
or
cmp
inc
cmc
test
cmc
stos
pop
loopne
subb
fld1
enter
movsl
sub
loopne
out
idiv
ret
sub
xchg
jo
pushf
sbb
mov
sub
cmp
rcll
jecxz
jno
cmp
stos
out
lea
int3
sub
mov
or
xor
fdivl
out
jecxz
daa
xor
aaa
inc
sub
xchg
or
pop
jb
rolb
insb
not
sub
xor
mov
and
xor
ljmp
out
rcrb
sbb
scas
xchg
add
scas
dec
lds
sbb
in
mov
cltd
lea
cmp
cmp
sub
xchg
movsb
xchg
xchg
arpl
outsb
jmp
sahf
add
pop
mov
inc
fmuls
mov
cmpsb
jmp
dec
cmpsl
pushf
lahf
lock
pop
inc
fiaddl
inc
sbb
fcomps
mov
cmpsl
in
dec
push
dec
adc
rcrb
and
jl
int
jp
jg
mov
sarl
lods
sub
dec
mov
sarl
in
mov
aaa
sarl
jmp
rcrl
jmp
xchg
call
mov
or
add
jbe
mov
mov
adc
out
aad
xchg
out
in
ret
das
xchg
pushf
sti
jp
aad
fstpt
cmp
outsl
enter
call
xchg
test
imul
mov
cmpsl
cmp
jno
add
pushf
mov
mov
dec
arpl
loopne
movsl
mov
inc
xor
jnp
or
jno
fldt
cwtl
cli
push
cmp
sarl
or
add
jmp
les
scas
push
pop
adc
mov
mov
push
or
outsl
and
mov
les
das
and
add
lock
lret
cmp
mov
pushf
in
mov
xchg
aad
cld
fildl
xor
mov
and
pop
and
jl
xor
icebp
pushf
add
bound
push
inc
xchg
adc
out
leave
pop
aas
fistpll
mov
cmp
decl
rcrl
in
add
cmp
cmp
fsubl
cmp
mov
xor
inc
mov
mov
test
out
into
aam
movl
push
idiv
jae
inc
outsl
mov
iret
pop
test
cmp
leave
jecxz
mov
xchg
add
out
push
xor
iret
insl
xchg
and
jp
xor
xchg
mov
jmp
inc
lcall
fmuls
xchg
cmp
in
lahf
cmp
inc
xchg
and
movb
fidivrl
jecxz
stc
pop
jns
cs
mov
push
test
ret
mov
in
jecxz
in
cmp
call
xor
insb
adc
int3
push
or
fsubrs
leave
jmp
and
outsl
pop
insl
adc
push
mov
push
negl
mov
rcrl
shlb
in
es
clc
loopne
pusha
in
cmp
add
mov
jg
frstor
ljmp
xlat
sti
dec
test
lcall
cmp
push
xchg
lcall
push
push
lods
inc
jl
add
jp
cmp
push
fcomp
fdivs
cmp
xlat
jp
xor
cli
adcl
fnstsw
addr16
sbb
cmp
stos
cmp
cmc
jge
in
cmp
pop
out
jnp
xchg
fstps
fbld
mov
dec
notl
push
dec
ds
call
dec
shrl
inc
add
add
icebp
adc
rol
sbbb
enter
addr16
out
jecxz
pop
inc
mov
aad
jno
arpl
push
sub
adc
adc
mov
dec
and
cmp
pop
push
or
and
roll
imul
xor
ljmp
sub
stc
in
jle
loope
hlt
iret
stc
and
mov
loopne
jg
dec
rol
leave
loope
popf
fistps
shlb
mov
add
lahf
and
and
into
pop
add
mov
sub
call
pop
movl
ja
mov
loopne
xchg
invd
in
xor
pop
call
mov
inc
lcall
cmp
pushf
push
fisubrl
mov
pop
fsubr
sbb
xchg
jne
hlt
aad
or
iret
cmp
cld
mov
jne
cli
xchg
test
dec
rorl
and
jecxz
sti
imul
jbe
mov
lret
xor
popl
cmp
add
arpl
and
fistps
xor
idivb
int3
pop
xchg
shll
orl
pop
sbb
test
jbe
sbb
loop
out
push
jle
pusha
sahf
mov
dec
sbbb
jb
fidivs
popf
sbb
push
add
xchg
in
dec
mov
xchg
mov
in
insl
jo
mov
adc
loopne
and
sub
dec
pop
xchg
fneni(8087
stos
daa
test
dec
inc
fs
pop
js
dec
jecxz
rcl
in
fstpt
daa
or
sbb
jbe
imul
fwait
sub
inc
mov
popa
xchg
cmp
daa
mov
fsub
call
mov
fisttpl
iret
into
mov
sub
mov
inc
xor
aad
add
pusha
pop
fnstcw
loop
jno
lock
xchg
pushf
mov
cmp
sub
negl
or
or
sbb
or
jle
xchg
shl
inc
shlb
mov
out
mov
jge
cmp
pop
arpl
jecxz
out
mov
mov
cmp
sbb
daa
mov
lock
fistpll
bound
es
mov
les
jne
in
dec
or
pop
sbb
ret
mov
xchg
imul
or
das
sbb
push
or
mov
loope
daa
or
enter
cmpsb
repnz
fisubrl
clc
mov
jle
enter
sub
lcall
dec
push
das
push
cmp
mov
or
clc
add
dec
xor
jl
lock
bswap
sbb
fcmovb
xchg
lods
lds
stc
mov
ja
mov
or
pop
sub
or
cld
sbb
outsl
dec
adc
aam
sbb
addr16
fsubs
sub
fdivr
sub
mov
stc
lds
mov
jo
and
mov
pushf
mov
sbbb
pop
bound
repz
and
popf
scas
jecxz
mov
mov
repz
out
jns
push
clc
adc
jge
outsl
add
pop
or
xor
rolb
fldcw
xchg
jle
test
insb
cmpsl
sarl
mov
cmpsl
lds
inc
pop
sub
dec
mov
roll
or
mov
jns
js
add
dec
cmp
cwtl
xor
fsubr
aam
or
pop
rorb
cmc
cs
rcl
or
aad
int
bound
push
dec
stc
mov
stc
push
and
dec
xchg
mov
sub
sbb
push
push
inc
mov
lea
mov
or
xlat
push
add
and
cwtl
addl
in
adc
jbe
xchg
xchg
movsl
cwtl
pop
inc
mov
fimull
add
pushf
and
push
mov
subb
mov
and
and
cmp
es
shrl
sbb
aad
arpl
jne
ds
jns
add
rcrb
cmp
inc
sahf
loopne
mov
mov
mov
adc
fnsave
stos
xor
add
lret
ljmp
ss
adc
mov
cmp
dec
cmp
cmp
lret
jp
vmwrite
xor
insb
cmp
jecxz
fs
mov
adc
insl
repnz
push
js
sbb
inc
adc
sti
xchg
les
pop
adc
jle
popf
add
int
add
mov
nop
pop
aas
lds
sub
pusha
cwtl
push
movsl
xor
jbe
push
enter
into
ljmp
shr
sar
jl
aaa
push
je
push
dec
jb
pop
sbb
insb
adc
inc
and
fptan
sub
jl
shl
push
std
lods
sar
lret
lock
jns
dec
mov
push
mov
imul
test
ror
call
dec
pusha
aam
push
notl
ficomps
fs
loopne
jae
push
leave
sub
cli
xchg
mov
and
lret
xchg
rcll
sub
or
shrl
mov
and
sub
fsubrs
dec
fldcw
notl
icebp
mov
sub
inc
rorb
sbb
cmpsb
sbb
push
or
xchg
test
sub
shll
cmp
mov
dec
adc
iret
push
xor
lcall
sbb
mov
inc
inc
jmp
iret
inc
pop
in
inc
push
mov
xchg
xchg
mov
dec
fildl
divps
jae
clc
lock
shll
lods
xor
sti
sti
shrl
push
sub
lret
jnp
jnp
fcmovu
rol
rcr
jecxz
test
sbb
sub
pop
insl
inc
mov
mov
jle
mov
sub
divl
pop
cli
lret
arpl
fcoml
call
outsl
sarb
out
mov
movsb
loopne
ret
loope
adc
xchg
and
pop
and
clc
cmp
dec
daa
add
adc
es
fld1
icebp
sti
cmc
inc
clc
adc
adc
dec
inc
stc
pop
out
adc
lcall
push
out
aam
inc
sbb
or
cs
pop
mov
fs
sub
xchg
cltd
cwtl
int
out
daa
inc
imul
scas
push
push
xor
jle
fistl
repz
pop
inc
in
mov
pushf
movsl
out
shrb
cmp
stos
or
out
call
push
subl
add
push
aaa
jo
jmp
jns
add
push
in
addl
fildll
and
jb
cmp
sbb
cmc
aad
repz
or
imul
xor
into
cmpsl
dec
insb
mov
pop
dec
dec
cmp
jecxz
pop
stc
int3
xchg
mul
pushf
insb
mov
call
addl
js
mov
mov
adc
ss
push
pop
imul
outsb
inc
sbb
out
lahf
and
cli
cmp
lret
roll
dec
jne
xchg
sbb
lock
mov
arpl
call
in
fdivrl
mov
imul
jl
into
push
jmp
data16
push
mov
push
nop
mov
and
pop
lret
or
lret
into
andb
aaa
loopne
adc
ja
inc
pop
cmp
pop
add
xor
loope
es
in
xchg
xchg
daa
sbb
adc
push
mov
push
call
inc
insl
fmulp
loop
lds
cmp
sbb
js
pop
rorb
xor
fisubrl
mov
ljmp
clc
aam
jo
das
mov
dec
and
jl
popa
dec
sub
mov
sub
jle
in
adc
int3
dec
arpl
mov
arpl
xlat
data16
inc
mov
dec
fwait
in
scas
cmp
dec
cs
shrb
add
arpl
fisttps
in
mull
jae
or
fwait
cmp
mov
mov
pop
jle
stos
dec
or
jp
mov
push
test
lods
mov
loop
add
inc
ret
cs
sbb
jmp
insl
fcomip
fdivrs
inc
push
outsl
or
shrl
popa
adc
push
cmp
push
stc
sub
xchg
jle
or
addr16
push
cli
cmpsb
shr
lock
add
mov
add
mov
daa
cli
scas
clc
lea
push
ret
shrb
add
mov
pop
cli
xchg
es
add
xchg
out
insl
add
push
pop
xor
ret
das
fs
fwait
mov
add
rcl
xchg
cmp
shll
pushl
pop
mov
into
sbb
sub
push
cmc
mov
mov
gs
jl
orb
jno
out
ss
das
sub
dec
mov
adc
xorb
and
lea
jmp
add
shl
cmp
dec
inc
rclb
xor
mov
mov
jb
aad
mov
divb
mov
ds
bound
add
and
gs
sub
mov
sti
xchg
jp
dec
pusha
inc
jge
out
arpl
jne
mov
xchg
xchg
and
dec
jo
push
mov
jge
shr
aad
sub
xchg
push
pop
and
jmp
mov
cli
adcl
cmp
adc
and
std
pushf
out
loopne
lods
test
pushf
cs
movsl
or
mov
mov
xor
xchg
fimull
add
lahf
imul
push
push
pop
mov
pop
push
push
addb
mov
fcomps
sub
lods
mov
fsubrl
sbb
scas
inc
clc
hlt
outsb
movsb
and
loop
out
mov
popf
cs
jecxz
inc
popa
addl
adc
sahf
mov
push
mov
add
adc
xor
mov
shlb
shrb
push
in
cld
call
aad
lret
cmpsl
inc
push
xchg
cmc
sbb
and
cmp
and
add
adc
enter
pop
or
xchg
lahf
iret
push
sbb
arpl
repz
shll
xor
das
mov
adc
jns
jmp
mov
je
mov
mov
sbb
out
clc
mov
je
adc
popf
pop
das
inc
mov
mov
jne
pop
sbb
stc
pop
imul
cmp
pop
repnz
lcall
jmp
rclb
pop
jo
mov
jns
xor
jg
and
pop
mov
stc
xchg
imull
fwait
stos
jae
shrl
sub
aas
lods
loope
out
imul
jb
repnz
shl
subl
test
xchg
mov
push
std
jns
out
aas
aad
cld
sti
xchg
jle
adc
mov
and
dec
clc
test
and
or
jo
loopne
popa
clc
sti
shufps
aas
push
fisttpl
sub
and
pusha
insl
mov
jbe
jo
mov
mov
mov
add
fnsave
or
mov
jo
sub
xchg
addb
inc
in
pop
mov
cld
jo
push
or
mov
cmp
xchg
clc
add
in
sub
repnz
pop
jns
and
ja
dec
mov
out
and
mov
xchg
mov
mov
cltd
inc
pop
cwtl
jb
shrl
lret
imul
data16
inc
jne
xchg
jg
sbb
shl
in
rorb
aaa
loop
mov
adc
ljmp
jbe
shr
jb
int3
push
sbb
inc
sarl
sub
ja
and
dec
in
imul
pop
outsl
inc
mov
leave
fisttps
outsb
sub
and
hlt
dec
mov
sbb
in
inc
add
rclb
es
shlb
cld
std
int3
or
dec
push
inc
or
out
shll
ret
dec
jb
pop
popf
rorl
popa
ret
inc
mov
aas
repnz
insb
xchg
push
and
fsubs
push
loop
xchg
and
repz
jbe
and
dec
sub
sbb
frndint
dec
cmpsl
sbb
pop
xchg
sub
mov
mov
adc
jle
loopne
mov
cld
inc
mov
and
jo
jno
pusha
push
and
popf
subl
jmp
jne
sahf
test
setae
xlat
jns
cmpsb
addl
push
sub
lods
ss
sbb
push
or
mov
rcll
and
sbb
ja
mov
pushf
mov
jno
or
mov
inc
rolb
jp
lods
xor
int3
cmp
call
insl
mov
dec
mov
sub
ret
out
xor
dec
jbe
dec
jbe
ljmp
mov
clc
push
int3
stos
fisttps
push
aas
daa
pop
jl
sbb
jnp,pn
jl
mov
mov
test
jnp
mov
lea
loope
and
cmp
xlat
dec
adc
mov
lock
fadd
popa
hlt
popl
cmpsl
pop
es
cs
fcmovb
mov
stos
scas
jno
inc
adc
cltd
pusha
sbb
ss
enter
push
jbe
jne
int
dec
sti
popf
cli
sarb
mov
xor
adc
dec
aam
xchg
and
and
dec
data16
jecxz
mov
aad
mov
or
dec
clc
add
mov
push
xor
and
out
out
mov
dec
xchg
cld
inc
push
out
pushf
jne
adc
fidivrs
icebp
add
fs
adc
cmpsb
repnz
jbe
or
xor
adc
dec
aas
in
das
mov
mov
ds
inc
sahf
shll
mov
mov
stos
xchg
inc
inc
jb
faddl
push
mov
mov
mov
pop
xor
mov
or
test
dec
mov
mov
in
mov
leave
pop
imul
fdivs
sti
sahf
mov
mov
fcomip
adc
sub
shrb
inc
cld
jns
pop
xor
repnz
aad
cmc
add
inc
je
sub
jmp
xchg
and
psrad
inc
jne
fs
mov
add
mov
sub
xor
mov
push
adc
lds
adc
out
xchg
mov
aas
imull
in
push
cmp
and
xor
aas
fists
mov
push
lcall
xchg
mov
inc
popf
in
and
mov
iret
sub
pop
jae
test
inc
jle
mov
jmp
inc
mov
imul
mov
mov
xor
sarl
shll
adc
xchg
add
and
dec
jge
je
rorl
js
mov
or
outsl
sarl
mov
sarl
outsl
xchg
js
mov
andl
imul
sti
mulb
mov
lahf
and
xchg
dec
cwtl
fsubs
repnz
aaa
fcmove
jmp
fisubs
jne
and
mov
clc
xchg
je
sahf
lret
mov
adc
cmp
fldt
fldl
cmp
sbb
out
sub
mov
jnp
adcl
aam
mov
push
or
pop
cmp
in
sbb
xorb
jmp
orb
jae
std
fcoml
pop
mov
addr16
enter
xor
insb
pop
das
cmc
ss
imul
mov
dec
jg
call
js
fsubs
fdivrp
jmp
cmp
push
repz
lret
arpl
lods
into
jnp
cmp
xchg
jae
sub
repz
pop
bound
repnz
popf
add
arpl
into
push
sar
mov
dec
subb
adc
jmp
lcall
adc
cli
xor
and
pusha
outsl
lret
add
mov
clc
test
movsl
test
xchg
aas
mov
and
mov
dec
jge
std
ret
mov
callw
ss
pextrw
xchg
test
scas
into
xor
cmp
outsl
sti
or
not
orb
das
cli
je
sub
repnz
pop
sbb
aam
dec
inc
mov
xchg
in
lcall
sahf
icebp
jecxz
xchg
aad
mov
sub
cmp
add
mov
and
inc
and
mov
idivl
nop
lods
in
inc
push
xchg
jp
jecxz
ljmp
push
inc
push
xor
jg,pt
cli
sub
lock
ss
push
sti
leave
mulb
mov
mov
mov
cmp
xchg
mov
push
and
insl
inc
mov
stos
hlt
cmc
jg
out
sbb
add
sub
leave
xor
or
lcall
and
pop
mov
in
adc
jp
push
or
xchg
sbb
es
or
and
inc
push
cmpsl
xchg
fists
and
or
cmp
test
out
mov
daa
add
mov
loopne
sbb
xor
mov
sbb
sub
sub
call
fbstp
pop
orb
mov
daa
pop
jmp
add
je
ret
mov
pop
lock
hlt
gs
or
mov
xchg
jmp
subb
inc
scas
mov
cli
inc
ret
sarl
out
shll
mov
out
icebp
jno
sbb
add
mov
add
fcomps
movsb
mov
out
xchg
es
cltd
mov
out
sti
push
cmp
add
outsb
jmp
call
ret
sbb
add
dec
rclb
mov
popf
sar
shrb
mov
enter
insb
mov
and
daa
jp
jno
jmp
push
inc
outsl
mov
xlat
dec
dec
arpl
cmp
add
sbb
scas
xor
and
je
mov
adc
jmp
pop
hlt
ljmp
test
push
sbb
xor
push
sbb
cmp
out
mov
dec
push
aad
sub
call
sbb
dec
in
pushf
jg
stos
stos
or
insl
inc
mov
mov
mov
dec
ja
les
movsb
jecxz
sub
mov
mov
call
sbb
sub
test
test
jl
fisubs
dec
int3
int3
or
aam
add
rclb
sti
pop
mov
sahf
std
jge
or
adc
test
and
cs
lret
fidivrs
adc
push
inc
jl
sub
push
mov
sub
repz
aad
inc
gs
test
xor
and
xchg
pushf
movsl
cmp
enter
mov
sahf
das
loop
imul
dec
pop
imul
xchg
mov
shl
imul
cmpsb
fnsave
cmp
xor
cmp
in
push
jl
jp
nop
nop
sbb
sahf
jmp
and
into
verr
in
fiadds
xor
imulb
cmpsl
mov
push
pop
adc
sbb
lret
popa
mov
fcmovu
mov
shlb
movsb
add
xchg
xchg
lahf
inc
sub
mov
outsb
xor
repz
inc
sbb
push
insl
push
rcll
out
cld
rorb
mov
pop
iret
lea
sbb
sub
mov
aad
call
nop
cmpsb
adc
lret
inc
adc
nopl
fadd
pop
mov
xor
add
out
jnp
and
sbb
es
fcmovu
push
xor
or
inc
cld
rolb
lahf
lods
cmp
push
cmpsb
xchg
xlat
cld
loop
faddp
xchg
add
clc
out
es
xor
xor
xchg
divb
rclb
inc
xchg
aam
popf
xor
ss
lds
lret
xor
push
mov
lahf
clc
cmp
add
cmp
or
mov
stos
fildll
fsubrs
mov
fildll
test
xor
jge
jmp
adc
jns
mov
xchg
andl
mov
dec
dec
lcall
cmp
jb
xchg
add
inc
loop
fs
and
jg
aas
insl
in
xorl
sbb
popa
mov
xlat
lret
sbb
add
sub
daa
sbb
sub
cmp
adc
cmp
daa
lods
test
stos
fcomps
mov
ja
or
je
es
stc
jl
xchg
jne
jno
push
mov
fimull
sbb
cltd
push
inc
mov
fcomip
ficoml
fidivs
inc
xchg
jmp
mov
cmpb
sub
addr16
or
mov
adc
imul
lcall
je
fwait
psraw
lds
ljmp
mov
mov
leave
ja
je
push
out
lock
int
aad
shl
push
mov
jecxz
cmpsl
nop
int3
fistpl
add
mov
fnstsw
movsb
push
mov
dec
push
mov
xchg
jae
jb
jge
repz
push
pop
jo
push
lret
adc
jbe
adc
pop
out
call
sbb
cmp
loop
jns
jmp
fstps
inc
out
lods
push
add
ret
loop
or
and
or
leave
push
int
mov
sbb
stc
inc
mov
sub
inc
push
sarl
stos
ret
dec
push
mov
rcrb
imul
andb
mov
mov
test
les
inc
pop
push
adc
jno
mov
sarb
inc
adc
add
pop
imul
mov
sub
outsb
sarl
pop
fiaddl
xchg
scas
adc
mov
cmp
mov
or
fucom
dec
fs
jp
cmp
mov
cmovnp
jp
jo
inc
rcl
mov
fcoms
aad
loopne
pop
mov
rcrl
faddl
push
jno
outsb
addr16
xrelease
lods
loop
mov
es
push
push
xor
pop
shrb
and
shl
mov
int3
fs
inc
pop
lahf
mov
mov
mov
hlt
fbld
fcmovbe
aam
mov
sbb
pusha
mov
inc
std
in
frstor
cmp
push
mov
mov
mov
mov
sbb
wrmsr
ret
pop
andb
inc
lcall
das
fs
mov
and
adc
test
xor
cltd
cld
and
std
push
xorb
jmp
test
sbb
mov
aaa
add
shlb
and
imul
mov
or
pop
or
incl
add
popf
call
lret
xchg
popf
movsb
rcrl
adc
mov
cli
scas
addr16
not
push
xchg
adc
pop
sahf
push
and
xchg
mov
jo
sbb
lods
jbe
sahf
jne
daa
mov
idivb
xor
pushf
mov
enter
icebp
xor
ret
insl
and
jb
pusha
repz
dec
cmc
into
movsl
ljmp
adc
aas
int
ja
or
cld
mov
les
into
cmp
mov
lret
out
sbb
dec
out
xchg
sbb
andl
push
dec
inc
sbb
ljmp
lret
ret
aam
sbb
push
in
leave
sarl
mov
pop
mov
sub
iret
cmpl
jo
jmp
fstpt
fstl
cld
sub
cltd
les
cmp
stos
mov
out
ja
add
sbb
and
push
cmp
inc
test
or
mov
imul
sub
scas
push
dec
and
in
and
sbb
xor
imul
movsb
pop
mov
mov
cmpb
nop
loope
inc
enter
pop
mov
cmp
stc
mov
add
add
daa
cmp
mov
leave
cmc
xchg
cs
inc
in
leave
adc
add
in
push
das
sub
mov
lcall
xchg
jmp
stos
clc
push
fimull
movsb
sub
adc
shlb
sub
xchg
mov
fld
cmp
jne
adc
mov
dec
add
sbb
loope
daa
mov
xchg
rcrl
inc
fsubrs
sub
mov
adc
sbb
cmpsl
and
or
add
pop
add
fs
call
mov
push
cltd
lret
arpl
fs
inc
pop
xor
mov
adc
add
adc
fsubs
addl
inc
lcall
push
jg
cmc
inc
divb
arpl
mov
push
cmc
mov
imul
jo
lods
dec
pop
aad
jb
in
insl
leave
fucomi
icebp
push
jl
mov
out
call
xor
pop
int3
out
daa
stos
insb
test
jae
xor
pop
mov
sahf
js
mov
sbbl
stos
enter
sbb
call
decb
rcrb
ss
test
cld
pop
jl
mov
inc
jl
ret
push
push
mov
into
arpl
or
xor
cld
in
lret
js
sub
movsb
int
dec
gs
dec
pop
ror
test
xor
insb
mov
test
lcall
xchg
lock
push
and
cmp
inc
dec
roll
cld
adc
or
shrb
rclb
jmp
jg
js
cmp
ficomps
inc
sub
mov
cmp
mov
and
cmp
sti
mov
mov
pop
mov
mov
lds
jecxz
mov
movsl
xchg
mov
fisubrs
in
pop
jecxz
movsb
mov
lahf
push
add
sub
mov
and
sub
add
ss
outsb
mov
jo
imul
ja
popa
sbb
out
mov
inc
mov
mov
in
dec
dec
jo
popa
or
fistps
repz
pop
lock
nop
loopne
enter
out
adc
popa
jb
push
sub
lock
aam
inc
fnstcw
mov
inc
subl
dec
hlt
xor
call
popf
cmpsl
jbe
leave
jno
sbb
or
pop
cwtl
fs
mov
inc
lock
loope
iret
and
popa
sarb
pop
int3
xlat
xor
fists
mov
roll
lods
es
adc
push
lret
or
fdivrp
aam
pop
xchg
je
mov
mov
mov
jno
cmp
or
ret
outsl
cmp
stc
ret
roll
ss
xchg
out
adc
fwait
mov
mov
leave
pop
sahf
jp
jo
adc
pop
andl
sbb
push
dec
mov
std
jae
fcmovb
sbb
adc
or
cld
sub
jne
in
movsb
mov
jne
loop
jecxz
cmp
and
cli
out
or
mov
mov
fmull
push
add
inc
inc
cmp
out
cmpsb
aam
push
cmc
xchg
mov
adc
sbb
cmpsl
mov
mov
xlat
js
jae
std
incl
cmpsb
lret
mov
aam
movsl
adc
dec
sub
sub
inc
fcmovnb
aaa
xchg
or
movsl
aaa
insb
dec
sub
mov
pushf
sub
sbb
xchg
push
rclb
pop
pop
fistpll
cmpsb
sbbb
imul
and
or
loop
mov
ret
in
dec
adc
mov
lcall
xchg
stos
out
cli
pop
push
dec
mov
pop
pop
sbb
out
pop
push
pop
mov
xlat
fwait
mov
cmp
sbb
loop
mov
movsb
jmp
das
pop
fldenv
std
push
add
xor
or
ret
je
insb
imull
adc
cwtl
cmpsb
mov
inc
test
lods
aad
push
jmp
loopne
push
add
lret
sbb
adc
lds
fcompl
xor
mov
cmp
inc
dec
pop
add
es
or
call
sbb
xlat
adc
adc
pop
lods
loopne
leave
adc
inc
js
or
xchg
leave
mov
push
mov
pop
mov
sbb
test
mov
xor
mov
fidivs
pop
xchg
ret
sar
push
jle
notl
test
xorl
jle
inc
loopne
xor
sbb
addl
nop
push
inc
aad
cmp
lds
fsubr
pop
xor
movsl
shr
cs
and
xor
pop
in
adc
addr16
mov
flds
mov
inc
cmc
push
je
mov
addr16
ja
sub
and
cmp
and
add
leave
in
dec
push
pushf
imull
repz
arpl
jb
push
cmp
jno
pop
ficoms
adc
sarl
pop
hlt
test
mov
inc
lcall
pusha
adc
outsb
adc
mov
mov
jge
xor
cmp
and
fcoms
add
mov
add
pop
sub
out
lods
sbb
jo
insl
and
mov
inc
imul
sub
mov
jb
in
arpl
loop
sub
sbbl
addl
jne
fnstsw
dec
xor
ret
aas
dec
ljmp
jmp
test
shrl
fcmovne
xor
add
add
cs
inc
pop
mov
and
dec
xchg
sbb
mov
mov
push
inc
push
filds
mov
xchg
rolb
adc
out
scas
mov
mov
sarl
fstpt
lods
cmp
imul
enter
adc
gs
jbe
push
divl
cmp
lock
and
cld
movsl
ret
adc
outsl
pop
sahf
arpl
insb
xlat
mov
cltd
test
or
adc
mov
add
add
sti
dec
jae
movsb
push
jno
add
adc
lods
xlat
call
in
xor
push
es
mov
loopne
mov
jo
mov
in
mov
repnz
subb
dec
sbb
mov
jb
inc
push
cli
sub
mov
fwait
xchg
inc
mov
jg
call
jge
sub
mov
inc
fidivrl
imul
ja
sahf
scas
add
insl
icebp
int
xchg
sub
dec
shlb
dec
push
pushf
xor
xor
mov
sbbl
aad
insb
imul
mov
lods
mov
jle
adc
pop
or
and
pop
mov
ficomps
ficompl
repz
mov
rolb
and
sbb
jns
xchg
data16
addr16
sbb
out
cmp
xchg
xor
mov
rcl
inc
sbb
adc
stos
mov
mov
xchg
push
jno
xor
push
xchg
hlt
mov
dec
mov
cs
xchg
fwait
push
leave
add
cld
mov
or
in
cld
call
mov
push
ficoml
je
sbb
in
mov
push
dec
fnstcw
loop
ficoml
iret
inc
in
cmovl
dec
jne
add
aaa
sub
outsb
test
mov
dec
pushf
in
shll
aam
jp
pop
std
out
cmp
clc
jb
jmp
js
idivb
jl
xor
stc
adc
loop
fwait
out
aam
ret
jae
or
lea
and
pusha
jmp
or
ja
addl
push
cmp
pop
mov
mov
vpmultishiftqb
xchg
pop
bound
js
cmp
xchg
add
mov
xor
or
shlb
loop
pcmpeqd
mov
lods
cmp
mov
sub
int3
int3
pop
and
inc
pop
sub
sub
jmp
pop
pushf
pusha
in
cmp
jnp
nop
jbe
iret
loope
test
inc
sub
sub
sub
in
mov
jo
and
ret
in
lea
clc
hlt
in
sub
fs
sbb
pop
shr
sbb
mov
ss
ficoml
and
xor
cmp
and
movsb
lret
out
stos
dec
aam
rolb
sbb
mov
cmpsb
push
in
je
push
dec
add
shll
adc
clc
push
inc
rol
adc
fs
mov
sbb
dec
xchg
inc
fdivrl
cmp
sarb
pop
adcl
data16
dec
out
movsl
rcrb
fsubrl
pop
cmp
push
xchg
jmp
out
mov
jecxz
dec
repnz
loopne
addr16
in
add
enter
in
ja
jo
and
ds
cld
or
dec
rol
xchg
scas
push
dec
loop
scas
pop
jp
outsb
mov
ret
xor
inc
ret
add
shl
popl
xor
jge
or
lret
xchg
ret
adc
or
das
xor
adc
or
adc
sarl
xchg
jge
lret
and
dec
stc
movsl
sarl
lock
leave
sub
jno
cmc
movsb
outsb
mov
or
mov
mov
lods
lds
xchg
inc
or
mov
stc
adc
pop
arpl
xlat
frndint
jmp
mov
sbb
push
jno
pop
and
mov
repnz
popa
outsl
jecxz
bound
mov
repnz
sbb
aad
and
mov
stos
sbb
ja
test
pmaddwd
shl
and
enter
sub
or
pop
aam
pop
cmp
sbb
mov
or
mov
cwtl
jo
mov
icebp
or
dec
jmp
fs
jo
ljmp
ret
popf
cmc
xor
pushf
pop
mov
leave
xchg
jle
cmp
jne
inc
sub
pushf
repz
pop
addr16
and
imulb
mov
loopne
pop
call
insb
mov
sbb
sbb
lods
jecxz
inc
dec
pop
arpl
add
xchg
arpl
mov
mov
mov
imul
loop
mov
mov
test
adc
fisubl
leave
adc
divb
out
cmp
cmp
sub
dec
into
out
out
inc
ret
sbb
icebp
mov
clc
mov
leave
jle
stc
aam
repnz
dec
iret
push
sbb
lret
imul
jp
inc
sti
das
or
cmpsb
fisubs
jl
fidivrl
cmp
jmp
ljmp
lret
loope
stos
frstor
fwait
outsb
lcall
sub
dec
sbb
push
stos
xchg
ret
pushf
inc
mov
inc
movsb
lea
mov
add
jge
daa
jne
ljmp
fildl
mov
xchg
lahf
mov
xor
test
icebp
out
movsb
addr16
jbe
pop
movsl
clc
loope
mov
xor
rolb
xor
xchg
jnp
and
lret
adc
push
sbb
leave
ret
mov
push
mov
lds
jno
fldt
mov
lea
fs
sub
in
sti
or
mov
sbb
mov
mov
jle
cmc
mov
push
mov
jge
test
mov
ss
xchg
pop
xor
push
rorb
xchg
sub
dec
jge
aaa
pop
test
xchg
dec
popf
loopne
dec
icebp
fdivrs
mov
dec
cmp
push
in
shl
or
mov
fcoms
jns
adc
popl
sbb
inc
mov
adc
and
in
imul
sbb
push
dec
ret
repz
push
cmpl
mov
test
int
jnp
or
cwtl
jb
push
pop
aad
or
push
movsl
mov
stc
aam
mov
pop
pop
sbb
jge
addr16
and
es
pop
daa
cmp
cld
sub
arpl
pop
test
mov
data16
mov
and
sub
sbb
add
cmp
jge
jns
ss
repz
daa
fists
inc
aam
pop
fsubs
mov
sahf
mov
push
jg
adc
sub
into
dec
xor
mov
clc
aam
ljmp
outsb
inc
out
sub
cmp
rol
lock
adc
add
movsl
dec
fsubp
sti
lcall
dec
bound
sub
mov
or
aas
jmp
in
pop
jecxz
jo
leave
cmp
add
mov
jne
loop
xor
mov
pop
push
xchg
rol
dec
in
js
adc
test
es
je
fistps
fdivrl
pop
in
or
sbb
mov
dec
stos
pop
inc
stos
cmpsb
into
les
mov
mov
push
ja
daa
ret
adc
popa
repnz
fists
lea
inc
sbb
cmp
adc
jne
repnz
sub
xchg
sbbl
jne
lds
in
vmread
out
imul
aas
mov
cmpsl
cli
out
mov
mov
jmp
push
lret
aas
xor
mov
pop
mov
call
sub
mov
nop
add
xchg
lds
inc
xchg
shll
jne
push
orl
sub
cmp
xlat
or
daa
cmp
sub
and
add
pop
rorb
mov
in
test
push
or
xor
push
adc
mov
or
ja
mov
arpl
xor
fistl
jne
cmp
das
pop
sahf
sahf
and
mov
out
std
xchg
pmulhw
add
inc
add
add
cmp
dec
fsubp
aad
xor
loope
xor
ss
lahf
push
insl
sub
loopne
sub
cld
shlb
ficoms
push
outsb
mov
test
pop
lock
in
adc
xor
inc
mov
bound
cld
dec
fimuls
fists
fnsave
push
test
enter
push
adc
mov
idiv
ret
mov
jle
fcoml
rcrb
icebp
xchg
dec
inc
and
xchg
ds
lock
mov
ret
cmp
sub
addr16
and
lcall
fmulp
push
jl
test
divl
sbb
ret
into
lods
in
mov
sbb
push
mov
ja
sbb
dec
mov
enter
jle
idivl
test
in
arpl
inc
dec
ret
ds
inc
mov
sbb
jp
ficoms
call
stos
cld
stos
mov
out
aad
lds
xchg
loop
dec
mov
sbb
add
int3
pop
sbb
and
lock
pop
cmp
mov
ljmp
mov
add
dec
pop
sbb
sub
pop
push
popa
fistl
or
decb
mov
xchg
mov
pop
cmp
xchg
aad
mov
cmp
in
xchg
inc
cld
push
pop
sbb
push
and
add
pop
lcall
xchg
cli
gs
cs
iret
jle
adc
cmpsl
mov
shlb
adc
test
jmp
aas
jle
sti
decb
aaa
in
xchg
adc
mov
fldl
cmc
ljmp
lcall
sub
jle
add
lods
sub
fcmovb
inc
movsb
mov
addb
push
scas
add
shlb
xchg
dec
in
mov
jbe
sub
mov
test
outsb
std
cmp
adc
push
lods
pop
shlb
pop
lds
lds
fwait
jecxz
out
int
jb
ficoms
lcall
fcmovnu
imul
mov
inc
push
mov
push
jmp
dec
xchg
xchg
ret
push
in
test
xchg
lods
dec
scas
sbb
cmp
lods
sub
test
popa
insb
cmp
add
push
stos
rcl
jmp
test
pop
nop
in
mov
dec
jl
popa
arpl
js
inc
stos
mov
xor
ss
jmp
push
adc
js
clc
scas
out
out
pop
mov
mov
mov
and
mov
stos
stc
test
ret
inc
imul
and
clts
sub
mov
shrl
ja
dec
xor
in
pushf
push
hlt
movsl
stos
pop
mov
shll
and
dec
mov
xchg
int3
jbe
aaa
xor
cld
mov
jle
dec
gs
in
test
js
pop
aad
push
subb
sub
mov
dec
iret
mov
leave
inc
cld
out
pushf
jl
andl
div
leave
inc
jmp
adc
mov
call
push
mov
lock
xor
add
or
jnp
jmp
xor
lods
dec
sbb
cltd
enter
mov
lds
dec
adc
in
cmp
cmp
lock
lret
xchg
pop
aam
adc
int
clc
mov
shlb
cli
inc
sbb
orb
cwtl
cltd
loope
add
add
xor
mov
es
ja
dec
dec
loopne
imul
sbb
cmp
repnz
inc
mov
arpl
test
stos
cmp
loopne
cmp
jmp
mov
cmp
gs
movsl
test
and
mull
xor
daa
inc
incb
stc
je
dec
add
daa
xchg
stc
test
dec
sub
js
jmp
cmp
xor
jno
adc
mov
cli
sbb
clc
shlb
sub
pop
js
mov
clc
xlat
sub
jmp
xor
stos
je
and
push
xchg
hlt
cmc
iret
lret
push
repz
push
cld
jg
aam
cld
adc
std
lahf
xchg
jns
push
dec
js
imulb
pushf
cs
dec
insb
cwtl
sbb
cmp
sarl
sqrtps
cmp
adc
mov
ret
add
push
pextrw
ss
arpl
cmp
xchg
push
and
repz
mov
dec
jb
push
mov
push
dec
les
stos
mov
xchg
das
stos
sbb
ret
das
mov
js
incb
jns
push
adc
push
repnz
inc
pop
pop
movsb
cs
cwtl
fisttpl
mov
mov
cmp
mov
mov
ret
std
cltd
subl
aas
imul
ds
fst
divb
and
cmp
mov
out
mov
jmp
push
rolb
jns
jmp
aaa
add
push
xor
lds
push
leave
push
sarl
outsb
hlt
adc
jp
xor
add
cmc
mov
cmpsl
popf
test
hlt
xor
daa
jecxz
adc
jae
loope
pop
lock
cltd
xchg
out
mov
lods
pop
add
sub
nopl
push
psubd
out
cmp
dec
xchg
mov
adc
sub
inc
pop
push
dec
jl
push
push
push
ret
loop
sbb
xor
loopne
inc
jmp
dec
push
and
mov
cmc
fstpl
shr
psllq
ds
pop
loop
jno
das
shrl
pop
sub
int
dec
dec
fwait
pop
dec
out
and
lea
sbb
ja
xor
shlb
cmpsb
pop
and
out
data16
pop
add
jmp
cli
scas
inc
sub
adc
mov
push
sbb
mov
int3
or
jno
sub
cmpsb
jmp
jne
xor
adc
xchg
in
and
mov
mov
pop
pop
mov
scas
int3
push
scas
adc
out
push
jb
mov
lds
call
xor
xor
sahf
jns
inc
mov
lods
sbb
push
cmp
sbb
and
xchg
les
out
repz
mov
aaa
lods
out
pop
insb
push
in
ret
sub
mov
bound
fiadds
jbe
jno
xchg
andl
or
lock
pop
or
scas
dec
push
jns
lods
clc
cli
int
and
push
popa
and
or
out
jecxz
out
and
adc
push
mov
dec
dec
shll
rorb
pop
mov
dec
movsb
mov
sbb
mov
fwait
out
add
mov
ret
lods
or
mov
clc
mov
movsb
cmpb
gs
mov
in
rorl
push
jbe
ja
mov
adc
test
jecxz
adc
cmp
addr16
mov
push
cmpsl
xor
sbb
add
arpl
and
popa
adc
cmp
pop
add
and
mov
jp
sbb
test
repnz
mov
flds
mov
lret
fstps
inc
cmp
lahf
lea
insb
ds
cmp
popa
outsl
adc
pusha
inc
movsb
sub
push
add
cmp
jge
jmp
sub
in
ret
cmp
add
data16
rep
icebp
and
daa
sbbl
leave
sbb
addr16
pop
mov
orl
inc
test
jge
pop
xchg
sbb
jmp
mov
jne
ds
imulb
mov
popa
xor
or
test
sub
out
je
add
ret
hlt
stc
pop
out
sbb
xchg
scas
fsubrl
jnp
inc
js
jmp
ljmp
fwait
ret
inc
adc
int
sub
xor
xchg
fidivrs
mul
js
loope
lods
shr
pushf
dec
popa
mov
add
mov
or
pop
imul
les
iret
pop
mov
adc
addr16
pop
fdivl
push
mov
icebp
pop
add
mov
xchg
push
rcll
sub
scas
popa
cltd
in
cmp
js
das
jae
ljmp
cmc
adc
lock
sbb
mov
out
fs
push
je,pn
mov
pop
jle
mov
mov
inc
xchg
shll
sbb
cmp
mov
repnz
movsl
mov
inc
dec
into
sbb
lods
je
repz
daa
push
push
loop
jo
aas
adc
sarl
cld
iret
adc
dec
fimuls
jb
mov
cmp
into
fildll
hlt
push
imul
cmp
arpl
rcrl
jnp
mov
or
xchg
int3
scas
xor
jecxz
or
dec
and
sbb
pusha
mov
dec
ljmp
add
inc
in
mov
and
fsubrs
inc
inc
add
lret
lret
je
sub
mov
js
movsb
dec
push
or
add
pop
sub
sub
sub
mov
jmp
lret
cmpsl
or
lds
xchg
enter
mov
lcall
push
inc
sub
mov
sub
jmp
jecxz
fisubl
sbb
in
in
and
stos
stos
filds
out
mov
stos
sbb
xchg
jp
jmp
dec
adc
sub
in
add
pop
icebp
cmp
xor
push
mov
and
insb
mov
fwait
inc
and
and
mov
jns
outsb
repz
jmp
sub
in
fld
out
cmp
out
cltd
cmp
mov
pushf
pop
inc
repz
xor
fnstenv
call
mov
jp
lea
imul
cld
in
xchg
es
jo
and
add
mov
push
mov
pusha
jg
out
pop
testl
divps
lods
and
xor
add
loop
push
xor
sti
and
sahf
sbbb
das
adc
pop
pop
cmpsb
sti
xchg
int
aas
lcall
cmp
and
call
sub
cmp
lock
lds
fsubrs
pusha
sub
add
stos
dec
test
lock
ds
dec
dec
pusha
sub
and
xchg
int
ret
inc
add
orb
movsl
inc
cmp
dec
loope
sub
mov
xchg
mov
lret
dec
push
mov
sub
mov
add
repnz
inc
sub
xor
mov
cld
push
mov
mov
pop
scas
pop
mov
adc
mov
in
cld
ret
aas
repz
cmp
sbb
add
cs
fiadds
pop
mov
push
lea
jbe
inc
mov
inc
lret
xor
mov
and
idivl
jns
pop
cmp
into
popa
xchg
jl
clc
mov
cs
test
xorb
cwtl
push
cs
sub
push
cmpl
adc
dec
mov
push
add
xor
out
cmp
imul
and
jp
icebp
lahf
inc
shrb
inc
mov
push
xchg
cmp
jl
add
pop
ljmp
lret
sub
ss
pop
cmp
bnd
pop
mov
lret
sti
sbb
sti
stos
lret
xchg
inc
pop
bound
cs
xchg
pop
pushf
pop
mov
negb
in
cld
cmp
sbb
jge
add
lods
ds
pop
jecxz
inc
adc
push
jecxz
lret
cmp
inc
mov
cmp
shll
inc
in
pop
mov
in
aam
insl
outsl
mov
sub
xor
jae
push
flds
ficomps
ret
sbb
dec
out
and
adc
es
sub
jno
inc
or
jnp
movsb
dec
sbb
or
int3
jp
or
jle
mov
sub
aas
lock
mov
call
fnstsw
popfw
mov
sbb
and
mov
das
daa
mov
lds
cmpsl
jl
arpl
pop
mov
hlt
lcall
dec
push
adc
mov
and
rcl
movsb
clc
ss
mov
xor
lods
lahf
inc
or
sub
or
pusha
out
movsl
lret
mov
ficoms
fstpl
add
xlat
mov
mov
dec
adc
dec
daa
sbb
es
fisubrl
ret
adc
ret
push
test
data16
mov
rolb
mov
add
aam
jl
push
cmp
xor
cmp
loopne
aad
ds
jl
push
sbb
cmp
scas
cs
test
out
pop
orl
adc
fsubl
in
fsubrs
cmpsl
sahf
mov
mov
stos
add
or
inc
and
fnsave
and
nop
idivb
cli
fsubs
inc
pop
pop
mov
add
cmp
stc
cli
shl
aam
push
dec
ret
mov
adc
repz
int
fwait
cmp
hlt
das
dec
push
cwtl
loope
or
ss
fcomp
je
icebp
jnp
repz
sbb
aas
fistpll
daa
inc
sbb
addr16
mov
stos
ret
in
stos
xchg
jg
inc
jns
add
subb
fwait
cmp
xchg
xlat
sbb
sbb
pop
rorb
iret
push
inc
push
dec
lcall
jnp
push
lods
xlat
inc
cs
cmp
ret
ret
mov
fs
aad
sub
scas
test
mov
adc
or
iret
jmp
mov
lahf
push
cmp
sbb
pop
dec
cmc
and
and
sbb
push
cmc
pop
clc
stos
xor
xor
ja
mov
push
or
inc
xchg
xchg
outsl
push
adc
aaa
sbbb
cmp
cwtl
les
push
dec
incl
mov
aas
andl
sbb
lret
outsl
imul
scas
add
mov
test
fs
xchg
aas
loop
sbb
inc
push
aaa
rolb
mov
mov
sbb
dec
cmp
sbb
faddp
dec
in
dec
cmp
ret
mov
sti
dec
mov
push
mov
popa
lock
jle
enter
mov
and
lret
in
pop
jmp
dec
inc
test
sub
stc
xor
sti
xor
inc
movsb
outsl
out
sbb
lods
mov
push
leave
popa
inc
push
rorl
cmp
mov
cli
or
cmpsl
pop
aas
imul
mov
or
push
orl
push
mov
enter
fistpl
mov
dec
dec
fstl
lods
call
dec
jae
leave
lds
xchg
out
or
adc
mov
ret
test
sbb
sbb
or
push
dec
sarl
outsb
and
jnp
mov
stos
vpaddsw
cli
jo
cs
adc
mov
mov
mov
xchg
push
sbb
cwtl
mov
xor
arpl
aam
jbe
out
and
mov
adc
repz
or
pop
push
movsb
lds
aam
pusha
cmpsb
cmp
mov
mov
scas
cmp
fsubrl
movsl
xorl
js
cs
xchg
cmp
mov
sbb
xor
loope
mov
sub
cmpl
popa
ret
in
shrl
mov
js
jne
js
ljmp
pop
out
mov
jl
lock
addr16
aaa
and
es
arpl
sub
mov
arpl
adc
sub
mov
call
fstpl
pop
bound
mov
shrb
cld
ret
jmp
adc
mov
movsl
lahf
sbb
movsb
sbb
mov
rorl
mov
mov
jmp
data16
xchg
lods
jnp
or
inc
add
jmp
rcll
sti
push
ss
inc
fmuls
jle
mov
mov
xor
aam
enter
push
mov
xor
cmp
cmp
aas
push
adc
lret
lea
mov
or
ret
xchg
scas
test
push
cmp
mov
in
out
stc
jnp
jg
cmp
mov
xchg
dec
cwtl
cmp
scas
dec
pop
dec
jns
jle
les
cmpsl
int3
incb
jp
daa
jge
cmp
or
pop
xchg
repz
pushl
inc
jl
in
fstpt
ret
dec
adc
dec
fidivrs
mov
mov
jg
out
adc
mov
add
add
mov
inc
out
mov
out
xchg
fmul
dec
sub
mov
push
jg
es
mov
pushf
pusha
sti
jecxz
jno
insl
push
out
lock
clc
add
inc
rcrl
shr
mov
cmpsl
sub
dec
lahf
test
and
clc
std
aaa
fisubrs
outsl
sbb
addb
ds
fucomp
push
aas
enter
sbb
imul
cmc
mov
pop
xchg
sbb
xor
aam
sbb
imul
lds
cmpsb
add
xor
mov
lods
inc
add
cmp
loop
jp
dec
dec
mov
mov
jp
xor
hlt
cmp
lret
ds
cs
addr16
cmp
and
mov
sbb
mov
mov
push
mov
dec
mov
ljmp
cmp
dec
mov
dec
pop
lock
clc
icebp
sbb
cli
data16
cmp
add
jmp
cmp
imul
ja
push
inc
xchg
dec
dec
frstor
dec
inc
jg
or
jle
mov
cli
gs
pop
sub
das
inc
xchg
rolb
lods
subb
je
inc
sub
and
ss
and
lcall
mov
mul
inc
mov
std
ljmp
mov
sub
add
jle
int3
dec
inc
xor
mov
mov
ljmp
int
jne
mov
fs
cmp
lret
adc
lcall
or
and
xchg
jns
in
mul
pop
jge
outsl
mov
jbe
fs
and
mov
cmp
jl
mov
adc
or
rorb
sbb
pop
push
repnz
insb
inc
jge
loope
imul
cmc
jb
or
dec
mov
movsb
jne
mov
jge
out
cmpsb
addr16
sub
mov
popa
adc
mov
sub
outsb
test
lcall
sub
mov
out
jecxz
out
loope
call
jns
iret
push
divb
fwait
xor
jmp
aam
sub
mov
sbb
sbb
test
ss
dec
dec
jmp
jmp
cs
adc
mov
jecxz
and
push
dec
sub
add
shrl
mov
jnp
add
push
shll
or
sbbl
in
add
xor
xchg
mov
loope
jp
dec
jno
out
inc
jle
incl
xchg
cmpl
xor
mov
mov
bound
inc
add
jo
outsb
sbb
pop
lahf
pop
xchg
pop
outsb
nop
push
sbb
leave
jae
xchg
dec
fsub
mov
mov
out
imulb
ja
fbstp
inc
rcrb
stos
mov
dec
mov
arpl
or
cli
add
in
lods
cmpsl
lods
jmp
pop
ret
jge
in
sub
push
pushf
xor
pushf
pop
test
jl
cmc
push
xlat
mov
xor
pop
adc
or
stc
mov
inc
jg
pushf
imul
int
sbb
cmc
pushf
cmc
rcr
fnstcw
push
xor
cmp
cmpsl
adc
insb
xor
ss
in
add
mov
adc
popf
leave
das
fs
jne
test
mov
mov
cld
in
hlt
add
loope
mov
dec
push
into
insl
inc
inc
dec
bound
mov
daa
out
inc
sub
mov
mov
mov
mov
popa
push
out
sahf
or
adc
or
jnp
pop
adc
mov
push
lock
or
test
dec
xor
pop
pop
add
stos
imul
pop
cmpsl
iret
cmpsb
popf
pop
mov
es
outsb
cwtl
out
cmp
lds
insb
test
mov
ret
mov
xor
cld
mov
push
cmp
dec
addl
jle
ljmp
outsb
push
xchg
cmpb
xor
adc
mov
leave
push
sbb
lds
cmp
jg
dec
adc
hlt
in
nop
sub
inc
out
cmpsl
sbb
ret
push
in
movsl
mov
rolb
in
inc
call
jle
add
pop
mov
in
mov
dec
mov
push
mov
es
test
push
enter
xor
inc
shrl
jl
movsb
aaa
cmp
shll
mov
mov
or
adc
iret
arpl
les
insb
push
pushl
aad
data16
inc
je
js
fs
and
sub
adc
add
lret
pop
jns
pushf
fsub
inc
stos
ja
push
xchg
inc
fldl
mov
adc
out
mov
test
aas
inc
xchg
cmp
sbb
test
shlb
movb
adc
push
dec
movsb
jne,pn
sub
lods
adc
cwtl
loop
jo
mov
cmpsl
push
jb
fidivs
fdiv
pop
sub
ja
pop
clc
push
std
test
xchg
rcl
push
dec
lods
sti
jp
or
sbb
sub
fs
xor
adcb
icebp
aam
jecxz
pop
sbb
loope
jl
sub
push
xor
add
pop
das
dec
xchg
jp
add
shrl
mov
and
sbb
cld
jg
jmp
cltd
cmpsb
repz
pushf
cwtl
mov
cmpl
xchg
dec
lcall
jecxz
cmpl
add
jbe
cpuid
xor
push
add
lcall
outsb
imul
aaa
sbb
outsl
or
notl
fsub
dec
pop
mov
mov
sub
pushf
insb
push
dec
and
jge
xchg
call
jne
mov
push
sub
and
and
cmpsl
mov
mov
enter
ret
jg
icebp
cmp
sti
test
outsl
scas
repnz
sub
test
sahf
mov
and
aaa
arpl
mov
loop
out
lds
mov
mov
xor
mov
test
and
mov
std
shl
ret
dec
jp
mov
or
jnp
jle
inc
lret
enter
test
pop
popf
pop
push
ror
dec
std
div
sbb
outsb
xchg
lods
xor
push
push
cmp
xor
pop
icebp
cltd
mov
dec
xor
aad
jne
cmp
adc
insb
loopne
sbb
jl
adc
loop
movsb
notl
pushf
enter
lds
lcall
mov
outsl
cmp
cmc
pop
cltd
nop
bound
imul
pop
data16
out
les
lock
shl
push
addl
cmp
leave
mov
scas
xor
push
dec
pop
mov
pushl
jl
data16
pusha
xor
push
cwtl
dec
mov
cwtl
dec
lods
push
sbb
cltd
sub
sub
pop
leave
sarb
dec
xlat
xchg
cmpl
lea
and
pop
rorl
popf
cmp
mov
dec
dec
shrb
daa
icebp
shrb
and
mov
cmp
add
lds
daa
cltd
out
sub
int
les
ficoml
imul
lret
cwtl
sbb
inc
xor
pusha
cwtl
cmp
sub
mov
adc
push
pop
aad
xor
out
shrl
sub
or
addr16
sbb
cld
js
and
outsb
addl
fsts
mov
mov
jo
pop
or
dec
adc
js
ret
stos
pop
mov
repz
xor
sbb
in
scas
xchg
mov
daa
pop
pop
jl
lods
inc
cmp
dec
in
ljmp
mov
decl
gs
loop
test
and
xchg
pop
mov
and
scas
mov
shrl
jmp
push
call
push
fbstp
test
ds
mov
out
imul
addr16
cmp
cld
mov
repnz
je
mov
and
test
pop
inc
andnps
mov
loopne
mov
cmp
jnp
adc
test
lods
push
ds
add
int3
and
inc
testl
aaa
les
scas
int3
adc
hlt
in
insb
fsubp
add
mov
add
ss
sub
sbb
lret
outsl
mov
hlt
in
adc
push
gs
clc
ret
jb
mov
xchg
cmp
mov
mov
cmp
fwait
and
adc
mov
scas
adc
mov
cmp
imul
popa
mov
sbb
rol
aas
push
xor
sbb
les
mov
pushf
leave
dec
push
push
dec
ds
scas
jmp
push
mov
adc
cmpsb
mov
sub
dec
mov
push
xlat
lret
inc
and
ss
lret
int3
mov
push
cmp
movsb
mov
jl
mov
orl
xor
xlat
adc
cs
xchg
cmp
fildl
ficoms
aam
cmp
repz
ret
cli
add
push
cmpb
pop
and
pop
insb
inc
mov
lods
push
and
vhsubps
rcr
dec
xchg
dec
ja
mov
sarb
xor
pop
jns
jecxz
ret
sub
sbb
fildl
sbb
sub
jbe
or
add
iret
xlat
shr
das
sub
or
and
sub
xchg
lock
pop
gs
idiv
in
pushf
inc
bound
fs
xor
xchg
and
mov
fnsave
mov
or
into
mov
xlat
adc
loopne
inc
push
push
push
in
mov
subl
bound
adc
dec
add
decb
jbe
or
or
cmp
shll
and
push
sahf
sbb
mov
mov
cmp
add
mov
push
jb
std
enter
aas
cmpl
jl
insb
sbb
pushf
inc
fidivl
add
incb
imul
mov
xlat
jmp
movsl
stos
dec
aad
and
adcl
idivl
in
xchg
jno
cmp
mov
jle
cmp
cmp
mov
fs
ljmp
xchg
fsubrs
adc
leave
mov
fdivr
stos
or
and
pop
sbb
cmp
pop
icebp
adc
jg
or
cltd
lahf
sbb
push
subb
jmp
out
out
push
add
jb
cmpsl
aad
or
and
jno
bound
sti
cmpl
and
arpl
fistps
je
mov
xchg
sbb
ljmp
sbb
adc
jnp
aam
cmp
pop
push
out
xor
mov
pop
fsubl
adc
sbb
pop
add
inc
test
pop
xor
nop
insl
jbe
sahf
xor
jg
enter
hlt
mov
jl
jp
movsb
ret
mov
sti
lock
adc
inc
xor
cmp
push
push
dec
dec
jmp
mov
adc
mov
and
fstpl
xor
inc
pop
mov
and
js
xchg
ret
ja
pop
out
sub
ret
ret
fcomps
or
sub
test
mov
nop
add
sbb
rol
mov
and
repnz
and
sub
sbb
sbbb
mov
adcl
arpl
out
fildll
jbe
sub
and
stc
push
push
xor
fwait
pop
jp
jmp
dec
pop
out
dec
sub
dec
fsts
cli
sbbl
das
mov
inc
jl
popf
roll
jl
insl
add
aaa
ss
scas
sbb
cmp
cld
aad
push
repz
in
sub
inc
sbb
push
pop
jl
sbb
hlt
aad
dec
ds
push
decl
or
mov
xchg
inc
pusha
cmp
mov
jno
cli
popf
jbe
adc
pushf
ds
test
fcmovnbe
xor
daa
and
out
fs
inc
repnz
ss
mov
mov
sarl
les
scas
imul
mov
mov
jno
cwtl
fsubrl
adc
and
adc
in
stos
mov
inc
sahf
fnsave
push
push
bound
int
enter
jbe
jge
rolb
ss
xor
std
bound
call
sbb
add
inc
cmp
sub
adc
push
cmc
fdivrl
push
mov
inc
scas
rcrl
mov
lahf
fdivrs
ljmp
push
sbb
hlt
insl
adc
repnz
jge
push
outsl
jp
sti
sahf
xchg
and
inc
jp
aas
notl
jp
pop
pop
or
xor
mov
aad
push
push
pop
int
jecxz
ja
sarl
push
sbb
mov
inc
lods
xor
out
enter
xchg
jne
fiadds
or
mov
jb
cmp
sub
in
into
sti
cmc
loop
xor
add
sbb
lret
nop
insb
pop
cltd
dec
jle
popf
dec
lahf
jge
das
insl
iret
dec
insl
scas
xchg
lock
idivl
fwait
sbb
mov
pop
in
sub
out
inc
mov
or
jmp
xchg
jnp
fwait
ret
xchg
aad
loop
call
mov
sbb
ret
popf
repnz
leave
sub
loopne
pop
inc
mov
push
push
and
jge
mov
inc
cld
jo
sub
dec
pop
sbb
cmp
cs
cmovb
ficoml
sub
dec
lret
scas
sar
inc
rclb
je
int3
int3
mov
pop
loopne
jmp
clc
mov
sub
jmp
test
mov
xchg
cmp
rol
lret
cmp
call
lret
into
sahf
jnp
push
stc
sahf
movb
int
int3
cmc
or
cmc
mov
jmp
cmp
movsb
mov
adc
outsl
push
push
sbb
xor
fimull
jno
jae
jbe
andb
jne
mov
or
push
jg
in
icebp
sub
popa
jns
popf
pop
call
or
mov
enter
adc
sbb
push
cli
shll
jae
and
mov
flds
loopne
lret
mov
mov
sarl
das
fldt
sub
mov
lahf
call
das
cmp
or
inc
push
lods
push
scas
ret
adc
cmp
mov
push
cs
mov
push
cmpb
jg
aam
in
ret
sub
test
xlat
cmp
jmp
addr16
push
push
sbb
dec
pop
or
and
sub
fcoms
mov
pop
ficoml
mov
outsl
wrmsr
jmp
testb
push
xchg
mov
mov
sub
or
dec
cmpl
mov
divb
std
bound
shlb
push
jnp
mov
push
fistl
popa
repnz
push
add
mov
sub
subb
pop
hlt
fisubs
mov
pop
out
inc
negb
ds
fnstsw
in
mov
outsl
lds
imul
xchg
and
lret
jmp
mov
mov
push
sub
xchg
mov
lds
pop
ljmp
lods
or
push
add
dec
jae
fs
movsb
mov
mulb
push
cld
sub
cmp
outsb
and
mov
fcomip
notl
jno
sbb
mov
test
cmc
sbb
inc
adc
jmpw
sub
and
inc
outsb
test
push
addl
pop
pop
pop
cmp
lret
or
fistpll
dec
sbb
push
inc
dec
inc
loope
aaa
pop
dec
or
dec
adc
xor
fs
jne
xchg
sub
add
pop
loopne
inc
clc
arpl
outsl
pop
sub
xor
or
xor
lret
xchg
cld
mov
repnz
lds
in
mov
mov
jmp
cwtl
iret
repz
shrl
jg
in
jge
ljmp
xlat
and
jb
cmp
xchg
test
mov
mov
xchg
and
stc
fldcw
xor
cmp
shrb
adc
pop
pop
lret
add
adc
pop
push
sbb
mov
mov
mov
or
jne
jno
cmp
cmpb
mov
adc
dec
cld
aas
and
and
rorb
mov
or
push
push
outsb
mov
clc
mov
dec
or
jl
rcrl
jge
and
mov
in
ja
je
sti
ret
pop
lret
dec
pop
mov
ja
stc
daa
jb
push
fcmovne
sbb
push
xchg
jecxz
mov
pop
cmp
lds
aaa
rcrl
pop
subl
cmp
dec
mov
jp
daa
sbb
push
fisttpl
lods
inc
ss
push
or
and
pop
pop
out
jmp
mov
pop
mov
ret
std
inc
in
mov
pop
iret
jecxz
mov
rcrb
insb
cld
push
lock
sub
mov
out
dec
cmp
test
std
inc
push
adc
pop
dec
cmp
popw
push
imul
sub
std
mov
sbb
dec
xor
addb
cmpsb
mov
push
mov
inc
stos
cmp
ljmp
shlb
insb
inc
lds
movl
into
pop
dec
xchg
jae
addr16
das
fs
ret
mov
push
insl
or
aam
inc
push
inc
inc
add
sbb
mov
testl
sbb
lea
dec
cmpsb
cmp
sub
jbe
arpl
imul
jle
mov
loope
cld
js
push
loope
pop
repz
sbb
popa
adc
pop
loope
divl
pushl
dec
mov
jns
mov
fstpt
cwtl
xchg
std
cmc
in
ja
aaa
pop
pop
outsb
mov
xchg
out
cmp
inc
push
sbb
and
aaa
push
les
sbb
inc
popa
loop
aaa
add
adc
shrl
cmp
dec
std
in
fistpll
jecxz
xor
and
out
div
inc
shrb
dec
lods
xchg
cmpsl
adc
xchg
mov
mov
loope
das
fdivl
cli
mov
cmpsl
subl
and
daa
xor
sarl
imul
or
incb
push
sub
or
mov
mov
sbb
push
push
mov
cmc
loope
fdivs
sbb
add
lods
xchg
insb
loop
add
push
jne
mov
insb
sub
xchg
and
pushf
aam
xor
lret
aaa
mov
out
ljmp
jge
sub
or
int
in
in
inc
or
adc
mov
call
inc
mov
movsl
xchg
or
es
pop
push
fwait
push
and
fstps
sbb
les
lods
inc
loope
fmull
pop
mov
test
outsl
daa
lods
or
scas
lods
int3
push
in
in
loopne
sub
les
adc
or
cmp
sbb
xchg
clc
inc
pop
add
mov
std
jne
mov
in
in
out
and
xor
out
lret
fs
mov
ss
mov
lret
lcall
pop
in
and
out
mov
addb
mov
or
mov
jns
aam
mov
mov
jmp
mov
cmpsl
push
in
push
mov
mov
shll
sbb
dec
pop
xchg
mov
mov
and
cwtl
cmp
sbb
fcomps
jmp
lcall
inc
stos
sub
jae
cmp
push
push
out
push
popa
add
cwtl
stos
rclb
jmp
and
mov
es
iret
int3
sbb
xchg
aad
sahf
pushf
inc
mov
sbb
inc
lcall
aaa
andl
sub
and
add
icebp
lds
shr
dec
cmp
subl
dec
addb
adcl
icebp
sbb
cwtl
pop
push
decl
sahf
pop
mov
pop
sbb
iret
inc
repnz
int3
test
and
hlt
xlat
and
pop
fs
lahf
flds
push
sbb
fs
xor
sti
scas
clc
mov
shl
out
lret
int
cmpsb
jo
jg
mov
lea
js
inc
cs
ja
pop
or
iret
mov
fsts
dec
je
test
jbe
xor
std
aas
in
sbb
aad
mov
and
pop
add
out
jo
add
mov
test
aas
or
jns
shll
and
repz
aad
das
sub
aam
lret
sub
mov
lds
jg
or
sbb
add
pop
lcall
adc
dec
in
xchg
cmp
push
das
mov
shrl
lahf
in
sub
adc
lahf
daa
dec
sub
daa
es
daa
in
fimuls
push
and
in
and
mov
add
lcall
loop
stos
mov
cmpsl
int
fadds
cmp
mov
push
lret
subb
and
and
mov
fs
and
mov
or
fcoml
popa
dec
addr16
inc
jnp
xchg
aad
sub
and
push
faddp
out
lar
fmul
mov
insl
test
pop
mov
push
jns
fwait
outsl
fisubl
int
sbb
lds
inc
test
add
mov
mov
mov
inc
icebp
pop
orb
jo
cmp
sub
cmp
cmp
cmp
push
stos
cmp
jecxz
xchg
stos
mov
in
mov
dec
adc
sarb
les
fmuls
sbb
scas
jnp
rclb
test
push
test
movsb
inc
xchg
lods
mov
pusha
inc
and
mov
jns
sub
sub
cs
and
cwtl
mov
jbe
lret
insb
mov
xchg
ret
ds
or
in
lcall
xchg
pop
pop
pop
mov
fwait
mov
sbb
push
clc
pushf
fldcw
mov
insl
adc
out
cmp
ds
mov
fdivs
cmpsb
xchg
shrl
mov
dec
jecxz
sub
mov
lahf
popf
ljmp
pop
mov
push
rclb
fst
adc
push
jbe
xchg
stc
xor
movsb
xchg
incb
jmp
xchg
lcall
cmpsb
cmp
clc
push
mov
outsb
and
outsb
or
and
xor
repnz
sub
loop
sub
and
enter
jl
sahf
adc
adc
jg
lock
mov
adc
mov
movsb
into
dec
mov
loope
daa
xor
push
add
incl
mov
pop
xchg
dec
cmpsb
enter
outsb
push
stos
cmp
data16
mov
lods
mov
adc
mov
inc
mov
push
enter
mov
mov
inc
jg
in
adc
fstpl
inc
loopne
iret
or
je
out
mov
push
xcrypt-ctr
cmpsl
pop
inc
pusha
fidivrl
jmp
xchg
ret
movsl
aad
pushf
stos
in
dec
push
xor
nop
nop
les
dec
mov
mov
cld
cmpsl
add
or
ljmp
std
test
mov
jl
stos
rcr
sub
lds
in
jle
shrl
sbb
dec
lahf
jbe
push
mov
push
mov
ret
ds
fstpl
out
mov
mov
cmp
xchg
and
test
xor
movsl
push
insb
fimuls
sbb
inc
sbbb
xor
xchg
cmpsl
decl
inc
mov
andl
adc
ficoms
and
aad
daa
and
sub
mov
pusha
jbe
popf
popa
inc
ret
dec
cmp
adc
sbb
sub
push
cmc
cmp
fisubrl
jge
cmpsb
mov
clc
rolb
outsb
test
pop
xchg
jae
sbb
mov
cmp
andl
sub
es
mov
xchg
mov
sub
add
push
lret
subb
sbb
mov
fistps
mov
fidivrl
push
jl
sbb
push
rcr
adc
dec
xor
mov
fbld
inc
stos
sbb
jb,pn
add
dec
add
inc
mov
test
shll
add
shrl
xor
call
lds
ss
ret
and
push
enter
dec
test
ds
jl
or
xchg
shll
stos
addr16
shlb
and
add
repnz
inc
push
mov
mov
mov
daa
xlat
mov
leave
jle
inc
loop
pop
fwait
inc
jbe
and
jl
mov
fcoml
in
cs
icebp
pop
xchg
loop
sub
push
add
pop
sub
lock
lret
fwait
clc
push
and
daa
aad
push
dec
inc
ret
enter
push
adc
fs
cli
aas
bound
movsb
shr
repz
out
out
adc
stos
adc
stc
dec
fwait
sti
das
das
xor
inc
push
fs
out
cwtl
dec
add
les
inc
inc
pop
mov
das
cmpsl
mov
scas
jae
mov
aam
stc
ja
scas
ss
and
cld
aad
pop
mov
bound
jp
loop
aaa
test
aas
es
mov
xchg
aas
mov
pop
jmp
les
test
inc
adc
pop
inc
addr16
jae
out
mov
loop
push
in
xor
inc
cmp
fiadds
cltd
cmpb
pop
and
xor
mov
jl
or
lods
mov
stos
jb
fdivs
cmp
add
adc
dec
xlat
jle
mov
es
loop
fsubl
flds
bound
inc
inc
push
jnp
scas
mov
loop
xor
das
push
cmpsb
mov
in
jne
or
out
sbb
loopne
roll
xor
sub
ret
jle
orl
cmc
in
imul
push
mov
xor
rcrl
in
rolb
xor
jmp
inc
xchg
sub
dec
mov
pop
fwait
add
mov
pop
fiadds
mov
fildll
pop
adc
in
cwtl
pop
cmp
test
push
imul
aas
pop
push
pop
daa
das
int3
jnp
fdivrl
sbb
mov
jmp
mov
js
or
add
jl
sti
shr
mov
cmp
inc
or
sbbl
and
test
fsts
mov
js
fbstp
add
sbb
sub
xor
mov
mov
ficomps
xchg
xor
pusha
pop
xlat
and
pop
xchg
daa
ljmp
adc
sbb
and
sub
cmpsl
popl
or
loop
pop
sub
rep
mov
hlt
mov
mov
add
jp
cmp
adc
insl
mov
adc
cmp
push
xchg
icebp
outsl
sub
arpl
int
addr16
shl
out
loope
jb
int3
jg
lock
push
cmp
les
rcr
cmpb
xor
loop
lret
nop
or
push
lea
xchg
push
imul
dec
push
inc
or
sub
mov
cmp
xchg
fptan
sub
adc
js
aaa
xor
lret
sub
ss
stc
aam
adc
loope
mov
flds
xor
xor
fidivs
jmp
xorl
faddl
daa
and
loop
das
iret
stos
or
adc
sbb
sbb
and
aas
popa
aam
jle,pt
push
daa
mov
movsl
fs
imul
lds
xchg
out
jp
mov
loope
gs
test
rcrb
movsb
mov
clc
imul
aam
out
loope
scas
in
in
mov
xor
test
mov
mov
dec
jmp
shlb
inc
into
iret
jb
mov
stc
aas
or
sti
cmp
ljmp
cs
aas
jo
xchg
mov
inc
sbb
cwtl
out
sbb
lcall
mov
add
xchg
fistl
sub
sub
inc
in
call
dec
adc
ja
out
mov
sti
push
subl
ljmp
leave
bound
outsb
jo
add
xchg
xchg
add
and
jge
pop
into
ja
xor
mov
lock
jmp
aas
mov
and
dec
add
hlt
cs
sbb
mov
sbb
cmc
cmp
and
and
or
mov
cmp
push
push
enter
push
rclb
mov
scas
pop
mov
mov
and
add
fisubrs
rcrl
jns
aaa
xchg
sub
ret
pop
and
xchg
jo
jg
mov
dec
pop
xor
mov
cmp
jecxz
stc
rolb
push
ja
ljmp
xor
and
xor
xor
in
jmp
loopne
sahf
xchg
in
cmc
in
add
push
into
xor
or
push
icebp
aas
or
push
dec
in
fildl
hlt
jge
arpl
push
cmc
mov
nop
popa
and
mov
iret
adc
sbb
hlt
hlt
repnz
cmpsb
adc
sub
loope
aad
js
cmp
xchg
test
inc
fistps
pop
jb
xchg
jp
movb
cmp
dec
push
sarl
pop
jge
cmp
pop
push
daa
iret
fidivrs
or
push
cwtl
mov
inc
pop
mov
jg
sahf
arpl
lea
push
popf
or
push
mov
inc
mov
ret
and
adc
sbb
stc
xorl
dec
fs
xor
mov
scas
xor
mov
inc
pusha
push
sub
lahf
and
dec
enter
repz
bound
and
xchg
cmpsb
dec
cmp
cmp
mov
in
sub
jne
in
mov
into
adc
add
scas
stc
scas
and
mov
and
popf
cmpsl
daa
jo
out
push
rolb
lds
mov
jo
hlt
or
mov
xchg
fidivl
iret
mov
pop
aad
js
xchg
in
xchg
jl
aaa
push
jl
or
pusha
push
mov
fsubl
xchg
scas
out
je
ficomps
and
call
jb
inc
addr16
push
jp
fwait
or
cli
sahf
leave
in
sbb
lds
mov
in
adc
incb
add
fiadds
or
movsl
pop
mov
xor
jnp
rorl
xchg
mov
xor
mov
pop
jg
sub
push
jmp
push
cs
dec
cmp
jl
lret
adc
lds
imul
pushf
or
or
clc
sub
fdivrs
sti
cmp
es
jns
and
and
jmp
rcrb
and
push
test
pusha
push
add
adc
daa
and
xchg
les
pop
xchg
or
lcall
call
jae
sub
cwtl
xor
cmpsb
in
add
xchg
stos
push
das
in
decl
push
lcall
ror
fs
roll
mov
push
clc
inc
mov
fs
mov
add
out
push
out
inc
sbb
movlps
aam
dec
jge
shll
add
lea
mov
fidivrl
leave
and
mov
out
int
outsl
or
sahf
stos
inc
icebp
pusha
xchg
xchg
jnp
pop
leave
das
popf
lret
cs
jb
insb
mov
bsf
test
je
pop
clc
addb
jbe
test
jl
in
call
scas
add
hlt
popf
add
xchg
stos
dec
push
aas
pop
iret
arpl
pushf
adc
bound
movsb
cmp
jp
lods
jecxz
sbb
pop
xchg
inc
out
out
push
jb
pop
jp
dec
sar
int3
jns
adc
fcoml
lea
addr16
pop
and
or
xor
push
add
pop
lcall
int3
rcrb
mov
fcomps
xchg
cmpsb
mov
pop
pusha
add
jge
inc
sarb
adc
call
cmp
sub
shll
add
jmp
dec
jae
push
insb
fbld
cmc
fistps
cli
dec
push
sbb
je
push
mov
icebp
fsubs
mov
dec
mov
scas
out
inc
repnz
sub
mov
popf
bound
push
mov
imul
mov
lret
es
push
mov
lds
cmovae
insb
movsl
aad
inc
shrl
fiaddl
sahf
nop
iret
or
or
mov
mov
lret
movsl
xor
jp
fs
add
pop
xchg
dec
ds
adc
pop
cmp
mov
xor
mov
loop
ret
cmp
inc
lods
cmp
jmp
push
ret
inc
jmp
test
fwait
jno
or
jo
dec
bound
mov
clc
arpl
mov
xchg
fstps
mov
jl
repz
sbb
iret
pop
loop
mov
ds
cld
in
pop
int
ret
daa
push
push
out
out
and
xor
scas
push
addr16
jp
std
jge
in
and
or
stos
dec
pusha
mov
div
mov
mov
mov
dec
cs
sarb
sbb
mov
xchg
test
movsl
arpl
and
sub
dec
pushw
aas
jmp
adc
iret
jmp
fstpt
sbb
popf
cmp
jae
xchg
imul
roll
mov
outsl
and
js
call
mov
mov
daa
pop
arpl
scas
xchg
adc
std
fwait
xchg
clc
inc
shr
jmp
mov
test
cld
js
dec
pop
je
jns
inc
pop
mov
rorl
dec
ljmp
dec
out
inc
adc
cmc
jmp
inc
fsubrl
repz
xchg
pusha
sub
sbb
les
insl
mov
xor
xchg
dec
push
fwait
mov
mov
lret
pop
xchg
stc
pushf
test
push
lds
je
xor
outsb
push
testb
not
pop
dec
js
popf
hlt
jmp
decb
adc
rclb
mov
outsb
mov
daa
aad
jo
call
jl
sub
negl
add
dec
out
nop
cmp
ds
iret
sbb
push
leave
pop
out
mov
sub
cmp
cwtl
ror
dec
repnz
xor
fwait
rolb
daa
in
push
jmp
and
arpl
test
jp
mov
mov
sub
movsb
ds
sbb
jno
inc
arpl
pop
cmpsl
jns
dec
test
xchg
add
adc
icebp
xchg
ret
stos
xchg
dec
push
jne
pop
faddp
or
adc
nop
push
adc
loop
jp
and
pushf
fs
das
xchg
loopne
xor
leave
pop
bound
xchg
lods
or
popf
faddl
mov
sub
mov
xchg
pop
loopne
mov
pop
in
push
dec
arpl
ret
test
mulb
dec
cmp
jecxz
bound
or
mov
sbb
jl
mov
fidivs
add
xor
fiadds
xorl
call
ret
insb
rcrb
test
cmp
dec
mov
add
aad
addr16
stos
lods
pop
movb
loop
mov
iret
pop
jp
cli
xchg
push
in
dec
test
in
ljmp
rcrb
dec
push
cwtl
nop
sbb
out
fwait
mov
xorb
fdivs
repnz
mov
cmc
bound
and
mov
mov
aaa
xchg
cs
jg
xchg
mov
sub
sbb
add
pop
xlat
jb
fistl
shrb
dec
push
push
fldl
xor
dec
xor
dec
lea
cmpsb
popa
mov
push
inc
xchg
and
or
mov
dec
out
arpl
repz
jmp
gs
or
gs
pop
push
xchg
lcall
pop
movsb
dec
xchg
xor
popa
cli
sbb
aad
adc
cltd
jg
inc
xchg
in
mov
inc
mov
jbe
dec
jecxz
cld
popf
push
lahf
dec
push
ja
xor
xchg
std
inc
in
mov
mov
mov
ficoms
dec
rclb
or
xchg
sub
repnz
adc
shll
jg
ret
in
cld
push
insl
mov
pop
pop
mov
jmp
aaa
aaa
shrl
daa
mov
mov
adc
mov
cmp
or
es
ljmp
inc
inc
adc
cmp
mov
cmp
mov
mov
outsb
in
xor
daa
adc
xorb
hlt
and
mov
dec
adc
ret
das
cmp
inc
mov
gs
push
jl
mov
pop
push
cltd
inc
cmpsl
mov
pop
mov
jno
aas
cmp
cmpsl
or
cmp
adc
andl
jns
dec
push
pop
xchg
cmpsb
jns
jg
test
mov
pop
cmp
out
lahf
add
aad
daa
inc
pushf
sbb
inc
stc
pop
stc
les
in
adc
and
dec
xchg
sti
jae
and
in
xor
ret
sar
sbb
pushf
push
jnp
rcrb
cmpsl
push
inc
lods
mov
iret
mov
movsl
push
rcrl
ret
mov
stos
and
ds
adc
imul
stos
test
out
mov
sbb
movb
cld
xor
loopne
aaa
push
pushf
pop
mov
mov
inc
cltd
mov
stos
nop
jo
xchg
cmp
xor
popa
fidivs
arpl
jl
xchg
push
lcall
push
scas
mov
sbb
xor
out
mov
lods
mov
ret
dec
orl
inc
fs
mov
aas
mov
les
cmp
inc
ja
arpl
or
cmp
cmp
push
fimuls
adc
mov
push
es
mov
lahf
adc
and
das
sarb
mov
mov
adc
loopne
sar
jnp
mov
daa
sbbb
outsb
mov
cli
out
insb
outsb
xchg
mov
add
xchg
rcl
push
popl
adc
dec
and
push
popf
or
add
and
mov
xchg
and
cmpb
cmp
adc
jecxz
push
sbb
in
in
ljmp
push
mov
lock
cli
mov
inc
and
xchg
mov
movsb
je
es
xor
adc
ja
andb
mov
jmp
ret
jns
cltd
cmp
cwtl
xlat
mov
aas
push
imul
fidivrs
ss
pushf
dec
and
inc
iret
pop
push
cmp
call
sbb
cld
mov
jns
push
pop
lock
push
js
jp
inc
inc
lahf
push
test
shll
push
xchg
aad
xor
jae
movsb
loopne
outsb
lods
mov
fdivs
sub
movq
stc
fcmovbe
mov
and
mov
cmp
pop
idivb
xor
insl
int3
dec
repz
mov
mov
int3
out
je
xor
and
gs
fstpl
xor
es
outsl
jge
je
sbb
fmull
xor
jmp
repnz
push
out
mov
inc
int3
jae
sarb
dec
loop
sbb
repz
lahf
mov
or
out
sub
popf
mov
mov
aam
cli
ds
dec
dec
loopne
or
lret
cmp
xchg
movsb
pop
cmp
js
xor
fucomp
rcr
mov
sub
ror
pop
push
stos
dec
cltd
adc
mov
push
lock
cld
test
xorl
pushf
insb
cmp
inc
dec
sbb
push
mov
jecxz
or
sub
mov
push
mov
dec
and
dec
loopne
jge
addr16
pushf
repnz
andb
jecxz
sub
lods
sbb
or
aaa
mov
jecxz
dec
xor
cmp
stc
jecxz
sub
push
sub
outsl
mov
outsb
loope
vpminuw
pop
dec
fstpl
imul
cmp
mov
push
xchg
das
es
cli
test
cmp
push
pop
dec
mov
ret
jl
ds
daa
jo
mov
popf
cs
and
mov
jns
movsb
es
sbb
mov
adc
adc
cmp
mov
mov
leave
scas
mov
lods
cmc
inc
pushf
fcoms
mov
mov
popf
mov
and
jb
inc
or
ret
gs
adc
sub
jl
fwait
pop
pushf
ror
mov
mov
sub
loop
inc
add
adc
push
push
popa
stc
lret
mov
adc
xor
sub
int3
or
aad
jne
outsb
sbb
and
fdivrs
aad
mov
adc
outsl
mov
push
and
mov
lcall
stos
mov
data16
cs
fndisi(8087
dec
leave
add
sahf
cmpsb
cmp
and
sub
leave
sbb
xchg
call
add
insb
and
pushf
mov
arpl
rol
pop
rolb
out
xor
mov
push
fwait
and
mov
add
inc
outsl
mov
inc
pushf
mov
mov
ss
ds
inc
inc
xor
lds
xchg
test
xor
loop
sbb
aas
xor
cs
test
ret
push
mov
inc
jno
sbb
call
outsb
lods
mov
fcoml
cmp
xchg
test
pop
data16
push
fs
orl
incl
xorps
dec
cs
ffree
addr16
mov
mov
popf
fwait
push
sbb
aaa
int
jle
nop
push
mov
js
repnz
movb
mov
sub
push
jecxz
fldcw
cmp
out
out
loope
mov
cld
ljmp
out
fldenv
cwtl
rorb
cmp
dec
popa
aad
or
dec
xchg
gs
fldcw
test
fldcw
pop
cltd
in
inc
cmp
push
xor
xor
cli
xorl
or
in
out
iret
inc
in
mov
mov
push
add
or
jecxz
xchg
sbb
movsb
adc
jp
out
loope
push
hlt
sti
cmp
xchg
and
xor
cmp
jp
push
dec
xor
or
popa
dec
lret
cli
clc
stc
cmpsb
fstpl
ljmp
aaa
push
iret
add
xor
xchg
in
mov
aam
test
sbb
int3
jbe
mov
out
shlb
inc
outsb
lods
popf
in
loop
in
das
cmp
add
icebp
push
rol
fsubrl
add
fbld
in
fwait
push
outsb
shlb
pop
fs
xor
xor
and
mov
sbb
imulb
lret
imul
addl
and
sub
jns
mov
mov
cltd
xlat
ficoml
loop
ret
into
lds
mov
out
pusha
stos
cmp
push
insl
mov
jmp
test
push
xor
imul
orl
fdivrl
ljmp
cmpsl
mov
fs
divl
sub
jp
cmp
shrb
lret
push
mov
push
adc
xor
add
scas
sbb
mov
jae
cmpl
mov
js
inc
roll
ss
in
mov
js
dec
cli
into
and
test
pop
mov
aas
enter
mov
adc
pop
lahf
inc
mov
lret
pop
imul
jmp
pushf
mov
iret
test
mov
mov
mov
call
jecxz
add
push
jmp
jle
and
sbb
fsubrs
test
cmp
inc
outsb
addr16
jmp
loop
cld
aaa
jecxz
mov
insb
and
stc
or
xchg
scas
jecxz
sti
lea
cmp
cmp
dec
add
ret
rcrl
test
xchg
imul
pushf
mov
sbb
add
and
outsl
lret
mov
fldt
push
and
cwtl
xor
cld
jo
push
xchg
jo
cmc
mov
cli
jp
faddl
stos
dec
sbb
in
mov
mov
dec
ljmp
push
add
inc
fmull
pop
movsl
mov
lahf
xchg
sub
aaa
scas
add
outsl
mov
fwait
ret
mov
adc
test
pop
incl
pop
lret
cvttps2pi
scas
andl
in
or
push
out
mov
sbb
xor
sbb
sbb
jmp
cmp
and
ljmp
aaa
mov
xor
andl
cli
cmp
mov
lret
xor
inc
scas
sub
push
sub
add
filds
mov
adc
fs
xchg
dec
fcoml
mov
push
hlt
cs
ds
daa
in
jmp
inc
cmpb
pop
sbb
popa
aas
mov
daa
pop
rcrb
xor
add
sbb
scas
iret
mov
ret
ljmp
pop
out
mov
adc
sub
or
add
pop
cmpb
and
mov
dec
adc
out
aam
out
data16
dec
dec
loopne
dec
fidivl
cs
cs
dec
sahf
mov
sbb
inc
mov
adc
mov
ljmp
cld
pop
cs
adc
das
es
xor
out
in
mov
ret
ret
cltd
enter
call
sbb
test
mov
inc
js
mov
mov
nop
rolb
mov
or
imul
inc
jmp
js
pop
ds
and
push
fiaddl
fistpl
cmp
xor
cmpsb
mov
cld
nop
aas
push
cmp
sbb
das
push
xchg
mov
arpl
push
sub
scas
call
out
aas
mov
and
andl
sti
cmpb
and
cs
ret
pop
aas
xor
sbb
imul
xchg
xchg
dec
mov
inc
sti
cmp
negb
rcrl
push
pop
loop
jo
movsb
jmp
ja
ret
fcomps
fistl
outsl
jg
nop
pop
cs
fsubrl
test
or
pop
lret
das
rcrl
fs
repz
cmp
push
mov
and
test
lret
push
movsb
lea
mov
adc
mov
dec
sbb
imul
push
in
insb
mov
mov
mov
sub
mov
mov
or
xor
iret
xor
je
aas
addl
cmpsl
insl
cmovp
pop
and
cmp
inc
mov
xor
ja
push
push
mov
in
aad
lret
rcrb
aaa
or
pop
jge
pop
andl
and
das
jmp
xchg
fwait
ljmp
pushf
cwtl
cmp
std
ret
add
xor
mov
sbb
fdivrs
cmp
xlat
enter
bnd
adc
and
fists
adc
scas
out
mov
mov
sub
and
push
xor
addr16
mov
lods
ljmp
pop
push
popa
int3
lahf
and
push
sub
ljmp
push
cld
mov
lret
mov
ljmp
and
mov
stos
das
mov
cld
pop
sub
sbb
movsl
inc
sub
fbstp
sbb
xor
popa
inc
out
fiaddl
mov
lea
ficoms
rcr
outsl
pop
mov
aad
and
lcall
jbe
into
pop
fsubr
cmpsl
and
repz
aaa
aam
and
push
mov
xchg
pushf
xchg
hlt
or
mov
js
scas
sub
test
out
adc
das
addr16
aas
cmc
aas
ret
loope
icebp
hlt
out
mov
les
adc
xchg
push
cmpsb
sbb
loopne
shrb
js
sub
mov
std
out
and
ss
popf
sub
imul
and
int
fcompl
dec
mov
mov
mov
jge
xor
xorb
sub
rol
je
jg
xchg
sbb
in
jecxz
push
sbb
lret
jl
mov
cmpsl
xchg
add
add
inc
repnz
sub
ljmp
adc
scas
negb
pop
fbld
sbb
mov
add
xchg
lret
jo
jle
mov
ja
jb
add
adc
xchg
leave
sbb
das
mov
rcll
lret
sarl
lahf
mov
pusha
mov
dec
cld
mov
fsubl
mov
inc
push
scas
or
mov
cmpsb
inc
sub
or
mov
xchg
pop
push
dec
outsb
dec
add
adc
jp
out
push
xlat
sbb
mov
sub
in
fnstenv
pop
mov
iret
out
les
addr16
imul
imul
stos
jecxz
jecxz
sbb
and
pushf
lods
cmp
adc
les
fadd
push
rcrl
lock
xchg
push
push
sti
stos
loop
jmp
push
adc
jae
fdivr
in
fs
outsl
add
dec
in
xchg
mov
xlat
les
dec
jbe
sarl
pushf
lret
or
add
pushf
cmp
add
fisubrl
rcr
jns
ljmp
dec
mov
cli
aaa
mov
nop
mov
cmp
sbb
ret
xor
ret
mov
roll
dec
enter
cmp
ret
movsb
dec
and
xor
xor
repz
nop
out
je
mov
popf
enter
add
or
xor
sub
in
jp
mov
sub
lods
mov
push
call
std
imul
icebp
jmp
or
mov
addr16
sarl
pop
and
sbb
js
sub
ja
add
js
stos
lods
fiaddl
xor
aaa
fiadds
in
sub
dec
dec
mov
xlat
call
addr16
rcll
xor
loop
sbb
into
pop
or
inc
mov
icebp
inc
xchg
cmp
lea
lcall
fabs
int3
mov
or
jp
mov
divl
sbb
sub
mov
test
pop
xor
sbb
dec
jl
das
dec
jae
lahf
out
jns
mov
adc
sbb
and
and
popa
pop
cmpsb
pushf
lds
mov
fisttps
mov
dec
and
pop
mov
dec
outsb
xor
notb
movsl
scas
sbbl
jp
xchg
inc
mov
sahf
in
leave
push
cwtl
mov
add
or
cs
jl
xor
iret
or
flds
stos
adc
mov
fldcw
call
out
fdivl
mov
out
or
std
fildl
push
in
pop
adc
sbb
sbb
jecxz
gs
out
les
sub
mov
cmp
sahf
or
fucomi
fcom
lock
fists
iret
pop
add
sbb
cld
popa
adc
mov
dec
xchg
movl
cmpsl
leave
sub
push
pop
xor
imul
dec
jno
inc
sbb
outsl
jmp
lcall
add
rcrl
pop
adc
xchg
mov
pop
sti
fwait
ret
xor
mov
aas
jns
xchg
das
mov
call
fsub
sbb
dec
xor
dec
xlat
pusha
dec
mov
sub
loop
adc
and
mov
push
pushf
mov
sub
and
sbb
test
gs
cmp
mov
fs
sti
fidivl
jl
mov
rclb
aam
outsl
adc
imul
je
sub
xchg
adc
shr
rcr
jp
cmp
and
lret
mov
fisttpl
xchg
aas
pop
sarl
aam
fs
cmp
mov
adc
idivl
xor
push
or
imul
bound
rcr
sub
xchg
int
jne
sbb
pusha
push
arpl
ror
sbb
pop
cs
scas
rsm
aam
mov
adc
shlb
lret
sarb
out
mov
das
pop
jns
sbb
jmp
pop
push
cmp
jno
sub
pop
lret
ljmp
repnz
mov
sarb
add
mov
pop
and
cmp
repz
std
xchg
stc
add
cwtl
repnz
inc
pop
into
xor
std
into
mov
or
fs
imul
jmp
mov
xor
movsb
or
push
lods
int
cs
in
xor
outsb
cmp
pop
das
daa
mov
fisubs
int3
outsb
aaa
pop
and
aad
pop
mov
les
inc
mov
je
and
mov
int
push
addr16
repnz
test
lret
int3
cmp
push
inc
incl
push
movsb
xchg
jmp
shl
lret
in
mov
in
cmpsl
popa
nop
or
dec
xor
data16
fnstsw
mov
xchg
shll
add
mov
push
mov
mov
mov
fs
lcall
or
add
addr16
fcomps
pop
and
cmp
repz
stos
mov
pop
outsb
adc
lcall
pop
dec
cmc
xor
mov
rcrb
imul
jge
mov
stos
stos
add
sbb
mov
test
adc
jle
cmpb
in
scas
push
sub
rcrb
call
cli
punpckhdq
inc
outsl
lcall
insl
inc
pop
push
and
push
jecxz
sti
push
in
jle
and
ljmp
and
sub
int3
call
mov
fistl
int3
push
mov
push
push
mov
sti
sub
pop
pop
mov
push
xchg
or
jbe
dec
lods
jg
xlat
cmp
sub
push
aad
jmp
mov
std
and
fwait
clc
jle
int3
out
in
pushf
std
and
lds
mov
fwait
shl
lods
and
idivl
fisttps
sbb
rclb
pop
aas
mov
xor
mov
adc
sbb
insl
dec
loopne
aaa
out
popf
add
mov
pop
cmp
lods
vmread
push
mov
cmc
push
sub
mov
add
jnp
stc
push
inc
cwtl
pop
adc
out
je
sarl
adc
cld
dec
es
or
pushf
and
sbb
or
or
push
inc
ret
jae
push
push
sub
jmp
xor
lds
mov
xchg
dec
call
repnz
daa
clc
jle
jp
jp
pop
mov
clc
xor
popa
popa
dec
mov
jbe
pop
mov
sub
repnz
frstor
sub
pop
sub
out
daa
cli
and
sti
lds
test
cmp
mov
sub
mov
fs
sbb
sub
aam
sub
dec
or
lret
pop
mov
enter
lret
xor
in
scas
scas
dec
xchg
push
int3
lahf
arpl
fidivrl
mov
sarb
sub
pop
out
cmpsb
push
xchg
into
sub
jbe
or
jns
sub
sub
cmp
scas
lret
loopne
into
sub
daa
pop
jae
pop
or
sbb
arpl
mov
call
jle
sbb
xchg
inc
or
inc
movsl
xchg
movsb
fcompl
daa
stc
nop
and
dec
xchg
mov
push
stos
out
jbe
cmp
push
je
stos
dec
aad
mov
stc
sarb
jp
incl
das
cwtl
and
nop
push
mov
rolb
or
or
mov
add
int3
ds
out
cwtl
out
js
jp
dec
test
adcb
sub
or
insb
and
sub
mov
pop
push
pop
inc
cmp
aad
xor
fisttpll
in
adc
cli
sub
addr16
sbb
xor
sti
mov
adcb
dec
cmpsb
jge
aad
sub
pop
and
fcoml
add
fidivrs
sahf
std
sub
adc
mov
imul
and
or
push
clc
and
and
fisttpll
out
fwait
xchg
inc
jp
test
and
cwtl
imul
jl
ljmp
push
aam
iret
inc
mov
adc
dec
jl
add
in
adc
xchg
ja
mov
xor
adc
sub
push
clc
scas
aad
mov
test
pop
das
scas
sub
inc
jmp
cld
pop
mov
add
jns
pop
test
ret
add
lahf
adc
dec
and
xchg
cmp
cmpsl
adc
inc
pop
loopne
fmuls
lcall
sub
outsb
cwtl
pop
or
and
jae
lods
data16
dec
cli
and
loope
add
lea
jno
test
cmp
in
pop
and
sbb
aam
test
ret
lahf
aas
push
lods
push
dec
test
outsb
stos
jnp
xor
pop
sbb
jecxz
out
and
inc
stc
std
sub
fidivs
loop
mov
jns
nop
ja
pop
aas
call
hlt
out
fwait
cli
bound
jecxz
sbb
inc
test
es
lods
cmp
shll
in
pop
mov
mov
mov
cmp
popa
pop
jns
aad
gs
imul
pop
inc
cmpb
lcall
adc
sahf
lds
imul
aas
das
gs
hlt
mov
sbb
mov
mov
push
dec
jg
xchg
pop
pop
out
mov
ljmp
pop
or
dec
arpl
lods
inc
fldl
fidivrs
dec
sub
jge
scas
lcall
pop
bound
aad
icebp
push
out
lret
rcrl
xchg
push
gs
mov
xchg
sbb
cmp
jno
pushf
add
cs
hlt
sbb
jmp
jmp
daa
fbld
push
add
and
mov
adc
int3
xchg
stos
in
pop
pushf
cmc
lret
dec
cs
xchg
out
pop
cmp
inc
in
or
pop
cmp
cmp
pop
ret
add
or
xchg
lret
sbb
in
ljmp
jp
pop
pop
imul
movsbl
pop
std
jmp
sub
dec
stos
sub
mov
fisttps
sub
push
and
sbb
ret
sub
leave
mov
xchg
pushl
in
mov
push
cwtl
or
adc
jae
mov
add
adc
sbb
lret
adc
dec
bound
je
cmp
out
sub
xor
sbb
inc
out
test
sbb
adc
andl
mov
int
lods
xchg
dec
int3
push
clc
out
fidivl
add
jns
imul
cmp
inc
xchg
cmp
repz
lretw
or
lods
sub
dec
out
push
dec
out
add
or
xchg
ret
sub
dec
insl
int3
ret
adc
aas
xchg
mov
dec
sub
mov
js
push
call
clc
xor
adc
xchg
dec
int3
cmp
mov
mov
out
pushf
pop
loop
xchg
inc
sub
xor
andb
adc
repz
imul
lods
and
int3
andb
adc
out
aad
scas
outsl
cmpsb
pop
jns
decl
mov
ficompl
ret
dec
add
test
pop
loopne
dec
jge
dec
js
mov
cli
mov
mov
and
iret
loope
in
push
shlb
dec
call
fs
push
cs
in
fcom
hlt
test
xlat
int3
daa
scas
aad
stos
push
add
fs
mov
mov
jb
or
dec
xor
ret
aam
arpl
cmp
int
insb
dec
jbe
xor
imul
hlt
int
movsl
js
mov
and
pop
sbb
cmp
mov
and
xor
imul
adc
movsl
sbb
xlat
sbb
insb
or
into
lea
jmp
sbb
jg
repz
jle
dec
xlat
add
dec
sbb
adc
dec
cmp
push
icebp
xor
xchg
in
aad
cli
and
sahf
pop
ljmp
jmp
pop
insb
je
cmpsl
pushf
and
lds
push
mov
clc
mov
test
or
xchg
xor
cmp
fwait
add
jbe
rclb
out
xor
or
push
test
pop
adc
and
push
ds
imul
das
lahf
pop
in
cmc
add
or
inc
push
repz
push
and
icebp
hlt
push
xchg
enter
lcall
pop
subl
repnz
inc
sub
mov
out
pop
sbb
mov
push
imul
cltd
in
imul
shll
xchg
mov
jecxz
cld
lcall
cld
pusha
cwtl
dec
mov
out
in
les
in
xor
sarl
lret
push
daa
je
fcomps
jl
movsb
outsb
imul
rcrl
xor
ds
aas
fisubl
loopne
sub
lcall
xchg
jbe
ljmp
pop
pop
inc
cltd
adc
xchg
sahf
js
ret
push
addl
lcallw
xchg
bound
push
jle
sub
call
ds
mul
ret
nop
and
and
mov
cwtl
sbbb
cmp
fbstp
mov
pop
cs
arpl
cmp
iret
in
out
cltd
test
dec
xor
pop
leave
idivb
and
out
pop
pushf
shl
jg
outsb
lock
addr16
lods
dec
fisubrl
jle
imul
cmp
idivb
jecxz
fisubrs
fwait
pop
push
mov
cltd
pop
shrb
mov
cmp
bound
insl
addr16
cli
xor
ret
push
mov
jo
call
cs
insl
xlat
xorl
and
mov
lds
ret
fisubrl
inc
lret
mov
leave
scas
movsl
shrb
loopne
jle
lret
arpl
setnp
dec
push
add
stos
push
pop
inc
test
test
mov
mov
cli
pusha
cmp
fldenv
xchg
leave
ficoms
das
ljmp
push
and
gs
and
test
lods
sbb
xchg
cltd
mov
jg
inc
vucomiss
xchg
int3
and
int3
fcos
aad
and
xchg
in
push
pop
mov
mov
popf
inc
lods
xchg
outsl
ljmp
xchg
insb
aas
inc
scas
push
rcrl
dec
shrl
ja
test
push
inc
cmp
sub
inc
stc
adc
mov
lea
sar
or
adc
into
xchg
xchg
pop
daa
aad
jg
sub
scas
and
arpl
dec
fsubs
xlat
push
adc
aas
clc
xor
xor
out
dec
mov
inc
leave
mov
pop
inc
mov
push
xchg
mulb
fwait
mov
pop
inc
repz
testl
in
or
jo
push
mov
jb
or
repnz
lahf
add
loope
mov
xchg
test
out
lret
inc
push
lret
test
shll
sub
mov
scas
fwait
jmp
add
mov
xchg
dec
fdivrs
aad
fdivl
cld
loop
adc
int
push
jle
add
or
pop
sub
sub
out
aam
mov
xor
sbb
repz
inc
repnz
inc
pop
cmpsb
xor
popf
push
pushf
mov
and
xchg
faddl
jl
inc
push
loope
xlat
and
xor
xchg
sub
iret
jle
mov
pop
loopne
loope
mov
pop
out
imul
cmp
loop
js
pop
add
push
daa
fdivrs
scas
ja
or
push
and
cltd
shrl
cmp
xchg
push
mov
pop
aam
and
inc
xchg
add
pop
push
pop
ret
stos
inc
dec
pop
add
dec
faddl
int
scas
xchg
push
xchg
adc
mov
sbb
and
mov
test
pop
sbb
mov
call
xchg
ljmp
lcall
jmp
dec
ret
fdivl
mov
dec
xchg
xchg
xchg
mov
fldcw
into
ret
cmp
popf
cwtl
iret
sbb
pop
or
cmpsl
jbe
in
jne
insb
subl
xchg
xor
inc
mov
pop
cld
mov
movb
sbb
lea
ds
or
cltd
stos
sub
add
js
push
lret
fsubrs
push
call
xchg
dec
inc
out
movsb
hlt
cmc
test
mov
mov
sub
dec
pop
mov
std
fwait
push
mov
daa
gs
iret
es
pushf
gs
jo
fcom
pusha
cltd
and
das
inc
pop
int3
and
test
filds
mov
add
hlt
push
int3
pop
xchg
add
lahf
jl
xor
inc
push
mov
inc
mov
mov
fstpt
in
cmp
xchg
jb
push
cmp
push
sub
das
scas
lret
mov
cmpb
xor
push
mov
ja
sahf
insl
inc
rcl
mov
jnp
sbb
cmp
enter
fwait
add
int3
not
es
xchg
lea
arpl
fdivrl
push
lcall
mov
mov
rcrb
adc
push
outsb
les
dec
pop
or
sub
jge
mov
push
jmp
pushf
daa
aad
sahf
insb
pushf
aam
mov
mov
jb
or
inc
fcmovnu
les
dec
fiadds
enter
dec
push
mov
pop
jo
dec
pusha
imul
adc
shrl
push
mov
fadds
sbb
pop
sub
daa
xchg
scas
hlt
sbb
sub
push
rcrb
or
adc
add
popa
test
sarl
dec
inc
pop
mov
loope
jae
adc
fcomps
ret
sbb
sbb
inc
cmpsl
push
pusha
pop
loop
js
movb
and
cmp
jmp
mov
pop
cmpsb
imul
in
jnp
repz
mov
int
dec
int3
adc
fimull
xlat
in
std
jns
and
subb
ja
mov
sqrtps
or
jg
int
mov
push
hlt
dec
add
sbb
vpunpcklqdq
je
mov
adc
repnz
jno
loope
aad
xlat
cmpsb
cld
push
or
sub
sbb
mov
add
daa
cmpsl
insb
xchg
fimull
movl
or
stc
xor
out
lret
and
in
inc
bound
push
ds
xor
pop
push
mov
pusha
jecxz
aas
push
jbe
popa
adc
lods
pop
aaa
xor
dec
adc
leave
insb
fcoml
daa
and
inc
stos
ds
mov
mov
rolb
fidivrl
imul
cli
xlat
xchg
fs
cmp
sti
sbb
loopne
and
mov
push
data16
aas
xchg
sub
and
jmp
or
rol
mov
mov
cmpl
jecxz
lret
mov
mov
sub
ss
shll
outsl
jge
sbb
jno
pmuludq
xchg
rol
stos
cmc
inc
out
sbb
shrl
out
out
test
cmpsb
outsb
fdivrp
xor
ror
and
xor
push
xor
dec
lea
mov
scas
aam
cmc
xlat
data16
testl
jle
popl
mov
pop
or
cmpsl
aaa
cmpsl
push
les
cld
jbe
xchg
cld
cld
jae
push
mov
mov
shl
int3
loop
jae
xchg
dec
mov
inc
or
mov
or
inc
out
aam
push
enter
stc
cs
sbb
pop
mov
mov
adc
out
rclb
adc
push
je
inc
sti
xchg
sarl
push
shll
pop
jae
popf
mov
enter
push
sub
divb
aas
inc
cmp
cmp
jmp
mov
xchg
xlat
lds
out
jno
iret
cmp
xchg
jl
sbb
outsl
js
daa
repnz
adc
in
gs
leave
js
cs
push
add
jns
sub
test
ljmp
iret
cli
inc
inc
cld
xor
mov
imul
jns
orb
lods
in
push
cmp
sbb
add
movsl
jbe
or
sub
shlb
sti
pop
addr16
hlt
mov
push
xchg
outsl
cmp
or
mov
lock
mov
and
ja
test
push
xlat
sub
jae
jg
mov
inc
adc
fwait
xchg
inc
gs
or
sub
jle
sbb
mov
mov
dec
adc
mov
ja
xchg
push
xor
xor
cmp
push
add
push
mull
sti
outsl
pop
mov
cwtl
fnstenv
cmpsb
aaa
fildl
ds
or
insl
rorb
shll
jns
mov
je
mov
lods
add
mov
dec
jge
ror
cmp
subps
or
cs
xchg
lret
mov
gs
mov
fldenv
decl
popf
jecxz
or
outsb
sub
inc
inc
pushf
adc
scas
or
leave
adc
je
test
mov
fs
sbb
push
xor
mov
mov
xor
mov
xor
inc
into
pop
jmp
nop
inc
int
inc
and
xor
or
jmp
sbb
cmp
lcall
jg
scas
xchg
or
pusha
addl
inc
out
andb
out
inc
jmp
sbb
sbb
sub
lock
loope
mov
add
stos
lds
sti
push
and
sbb
cmp
and
xor
sahf
movsl
loope
push
adc
mov
or
stos
mov
loopne
repz
fildl
outsb
dec
jno
mov
cmc
test
jp
pop
inc
dec
inc
divb
cmp
mov
test
test
out
idivl
shll
pop
dec
repz
sbb
daa
mov
xor
dec
push
push
inc
fwait
ret
xchg
imull
pop
inc
rcrl
sbb
out
push
loopne
cmp
insb
out
leave
jmp
fidivl
push
imul
stos
jb
jecxz
mov
mov
dec
inc
jno
sub
jle
movsl
out
mov
or
insl
mov
xor
pop
icebp
adc
jp
mov
shll
and
pop
and
mov
or
lds
inc
leave
and
mov
pop
and
in
pop
repz
mov
mov
mov
cwtl
push
jb
iret
pop
jp
lret
int
mov
jb
push
mov
aas
aad
fisubrs
in
sub
lea
cmp
adc
ret
jle
daa
outsb
pop
aam
jmp
fdivl
cmpsl
sub
mov
sub
mov
or
dec
loopne
xor
cli
cmp
scas
rolb
xchg
inc
or
movsb
mov
mov
add
pop
push
cmpsb
insl
push
lds
andb
jp
bound
jae
mov
cmc
stos
fstpl
inc
inc
fdivl
mov
xor
xchg
sbb
jnp
js
dec
push
cmp
cmp
popa
pop
cwtl
sbb
sahf
cmp
scas
nop
sti
inc
sbb
iret
inc
ja
andb
leave
sub
mov
lret
dec
jbe
and
push
js
and
gs
jmp
pop
mov
push
out
cmp
sbb
dec
and
arpl
sub
or
aaa
insb
lds
push
lcall
mov
ljmp
adc
inc
in
jns
inc
mov
scas
jno
jg
sbb
iret
dec
push
int3
out
adc
cwtl
xlat
das
fadd
lret
push
jecxz
shlb
cmp
cmpsb
lcall
and
mov
jns
aas
jg
sbb
xor
jle
or
dec
outsb
or
in
or
xor
lea
jle
sti
rolb
jae
lret
push
mov
sub
nop
addr16
pop
mov
outsb
fbld
arpl
mov
xor
jbe
sbbl
and
mov
adc
mov
lcall
push
push
cmp
outsb
or
fcoms
je
mov
imul
out
ret
jecxz
cmp
pusha
bound
inc
xchg
push
dec
into
jns
fisttpl
push
out
ret
dec
or
jns
push
loopne
add
repz
cmp
adc
sarl
loopne
xor
aas
sbb
jb
insb
fisubrl
dec
sbb
fdivs
sub
insb
jb
out
jnp
loop
inc
pop
in
sbb
mov
js
repnz
cmpsb
mov
pop
out
inc
out
loop
pop
cs
popf
jle
fistl
lds
into
cmp
out
mov
loopne
sahf
push
pop
test
fwait
sahf
lcall
mov
pop
jge
clc
push
jmp
in
xchg
stos
std
cwtl
mov
adc
daa
mov
xor
popa
pop
sbb
mov
sub
and
or
arpl
pop
cs
adc
and
mov
dec
jg
into
call
testl
out
dec
fcompl
cmc
imul
call
sub
or
pop
std
push
pop
lods
out
int3
and
inc
push
sub
pop
add
ljmp
jg
les
int3
out
mov
push
shl
push
pop
push
add
sti
dec
mov
xchg
nop
fs
xor
dec
sub
jae
adc
shll
scas
dec
mov
xchg
jl
or
and
dec
fcmovne
jb
les
sub
scas
lret
mov
jo
rclb
enter
roll
sbb
fistps
lret
fisttps
lds
push
sub
movsl
aas
xor
xlat
or
add
sahf
cli
mov
ret
imul
fsub
jp
push
dec
mov
int3
cmp
fistpll
daa
lea
cs
jg
mov
add
stos
dec
lcall
add
cwtl
adc
mov
fwait
sub
or
fimull
dec
adc
test
orb
adc
test
fninit
add
xchg
jl
mov
test
jp
cmp
cli
or
push
and
push
adc
xchg
sbb
sub
cmp
imul
xchg
cmp
pop
call
mov
inc
pop
cmp
sub
mov
xchg
shlb
xor
scas
lret
imul
fmull
fistpll
dec
or
hlt
stc
in
mov
leave
push
cs
in
and
or
stos
out
fwait
mov
out
insl
mov
push
std
js
bound
jmp
sub
mov
add
outsl
pop
in
adc
movsb
mov
movups
push
loopne
pop
cmc
and
out
cltd
xchg
jbe
lea
cmp
scas
jo
bound
ljmp
dec
mov
int
add
sti
insb
jne
or
pop
fldz
xor
les
mov
out
out
xchg
sahf
arpl
jne
pop
inc
shll
int3
aas
lahf
mov
ss
jmp
bound
std
test
mov
cmp
cmp
insl
rcr
and
xlat
and
jbe
inc
cmc
aam
clc
cmp
popa
jns
ss
mov
call
orb
jg
cmpb
cmp
ret
mov
push
das
andl
push
jmp
jmp
pop
mov
out
and
jb
fisubrs
div
outsb
bound
fisubs
sub
inc
and
cmc
aad
int3
cmp
add
mov
push
sti
jmp
mov
das
xor
and
xor
pop
out
loop
and
or
jne
xor
xor
enter
jnp
adc
push
fstps
jo
negb
aad
in
aas
scas
daa
mov
xchg
pop
pop
subb
adc
sbb
sbb
inc
das
repnz
sar
jecxz
xchg
push
dec
shr
and
dec
aas
ljmp
jb
xor
imul
mov
pop
cmp
xchg
not
fistps
int
iret
stos
sti
fucom
add
xchg
and
std
adc
out
sub
clc
jno
insb
repnz
aaa
outsl
aad
sub
cmp
sbb
jl
mov
fyl2xp1
xor
repnz
cmp
mov
test
cli
dec
mov
mov
imul
pusha
dec
fbld
aam
cs
push
daa
sbb
jo
xor
ret
mov
sbb
ds
cld
dec
lock
sbb
mov
std
jne
pop
inc
imul
ficoms
and
adc
xor
push
jbe
mov
mov
push
fdivrs
out
adc
std
jge
or
xchg
outsl
sub
jns
ror
stos
mov
or
andb
dec
xchg
mov
out
cltd
sahf
jae
imul
dec
mov
insb
fwait
lret
es
adc
and
in
movsb
inc
outsl
outsl
pop
push
int
into
fcomps
in
jae
test
dec
sub
pop
sbb
cmovns
fmul
fildl
bound
dec
andb
ret
mul
xchg
sbb
push
aaa
pop
xchg
hlt
scas
aaa
pop
cli
jle
or
add
loopne
pop
pop
rcl
adc
lret
lods
sahf
gs
mov
ja
xorl
mov
mov
nop
jg
hlt
pop
xchg
pushf
mov
dec
std
ret
bnd
push
rcl
out
or
adc
aam
lret
xchg
daa
xchg
mov
mov
daa
push
fwait
xchg
push
cwtl
daa
sbb
enter
cmp
cmp
in
push
mov
inc
out
popf
loopne
inc
mov
daa
mov
int3
bnd
or
inc
and
ss
mov
dec
insl
dec
movsb
hlt
xchg
outsl
sahf
pop
adc
jo
inc
mov
xchg
add
jo
ret
inc
inc
sbb
js
sbb
dec
adc
rcr
pop
cmp
mov
push
adc
daa
mov
or
js
push
sub
inc
inc
or
data16
xlat
dec
and
out
jb
nop
sub
jmp
mov
mov
jge
mov
ljmp
loop
dec
dec
cmp
in
lret
and
push
and
andb
shrb
mov
xchg
lods
xor
outsl
nop
push
insb
scas
out
or
mov
test
xorl
into
jp
jecxz
push
rclb
pop
mov
adc
cmc
xchg
lahf
jne
in
lret
movsl
jo
jns
arpl
imul
dec
insb
pushf
push
mov
or
mov
mov
mov
das
and
cmpsb
push
cs
aad
mov
adcb
aas
out
xchg
add
das
es
inc
sbb
dec
repnz
pop
dec
dec
and
fimull
ret
xchg
xor
adc
aaa
cs
pop
or
sbb
lea
bound
adc
push
out
mov
mov
cmpsb
inc
sbb
cmpsl
jne
inc
pop
sbb
xchg
xchg
mov
add
daa
sti
sub
mov
pop
pop
es
fidivs
jne
pushf
push
or
or
jae
inc
lret
loop
cmpl
into
gs
jo
mov
dec
testb
test
je
repz
scas
int
dec
or
sub
aaa
cltd
jle
sbb
add
push
and
xchg
inc
dec
loop
sub
pusha
icebp
pop
mov
and
mov
rcl
repz
inc
in
add
lahf
pop
sbb
pop
add
pop
and
and
ret
jl
jbe
inc
gs
call
enter
lods
adc
add
sub
ds
inc
push
neg
xor
sub
ljmp
sti
insb
lahf
dec
cmpsb
or
or
test
fs
data16
or
and
stos
mov
inc
or
rcr
jb
xor
arpl
and
hlt
xchg
lret
cltd
adc
mov
cmp
xor
pushf
sbb
pop
adc
xchg
ret
adc
orb
not
adc
ret
mov
inc
xorb
lock
adc
mov
mov
cs
mov
mov
negb
jecxz
xchg
ds
pop
test
lds
and
fisubl
xor
sub
lods
mov
jmp
sbb
or
mov
stc
mov
imul
ss
xchg
icebp
out
out
lock
sbb
in
pop
pop
cmp
ja
mov
fwait
push
shll
sbb
repz
fdivl
lea
out
les
mov
inc
mov
mov
mov
cmpsb
loopne
out
jno
adcl
adc
cmpsl
mov
lods
and
lods
adc
pop
clc
mov
mov
jl
push
jmp
test
scas
call
inc
xor
sbb
jnp
xchg
add
iret
inc
pop
jle
fwait
incb
adc
int3
jmp
jl
lcall
cwtl
inc
or
mov
pop
cmp
mov
mov
in
pop
js
stc
scas
jmp
mov
sub
insb
ss
ret
add
mov
imul
mov
repnz
and
dec
or
sti
imul
pop
fwait
pop
and
add
mov
jle
dec
push
orl
mov
push
movsl
lds
dec
ret
out
test
pop
fidivrl
mov
pop
sahf
mov
add
mov
call
mov
pop
fmull
jo
aad
lcall
negb
adcl
roll
inc
adc
mov
int3
jl
sub
jecxz
cltd
pop
mov
pusha
pop
arpl
mov
pop
fdivrs
pop
outsb
adc
aam
mov
sub
sbb
insl
enter
push
aad
gs
push
push
jl
inc
divps
cmp
int
icebp
movsb
scas
adc
cmp
push
push
icebp
fisttpll
sub
push
push
add
mov
fnstenv
cmp
mov
jge
pop
rcl
dec
ja
sub
xlat
lahf
bound
sub
pop
jnp
mov
shlb
sub
lret
cli
xor
or
out
cmp
add
or
mov
cmpl
iret
sub
lcall
fbld
enter
test
in
insb
push
mov
jle
xchg
adc
or
and
jmp
in
sub
mov
repz
or
popf
cmp
sbb
les
mov
inc
mov
jb
sbb
enter
mov
push
lret
insl
jno
out
enter
sub
mov
ja
imul
push
and
mov
sbb
xchg
loope
pusha
inc
cs
xor
in
jae
mov
sti
ljmp
xor
movsl
sub
jmp
jp
add
addr16
push
rcrl
nop
mov
pop
mov
sarl
xchg
or
out
inc
inc
adc
stos
aas
add
iret
pop
mov
dec
and
insb
push
scas
sarb
xlat
dec
aad
enter
fcmovne
mov
aas
cltd
mov
jae
pop
mov
in
test
jg
cmpsb
mov
or
dec
jmp
push
cmp
das
jns
mov
cmpl
stos
adc
xchg
lods
inc
ja
lret
cmpsb
xor
cmp
fsub
add
fisubrs
xor
out
roll
cmpb
push
lret
xor
popa
repnz
sub
movsb
adc
adcl
pop
adc
jo,pn
jecxz
jne
mov
addr16
fisubl
stos
inc
sub
inc
mov
aas
xchg
lcall
iret
adc
mov
rcrl
sub
in
jl
pusha
sub
dec
mov
int
test
popa
and
pop
lss
mov
xchg
pushf
shrb
adc
push
mov
sarb
fisubs
add
fmull
sub
gs
adc
jne
jae
aas
aad
mov
mov
movsl
push
mull
std
call
sbb
xchg
jp
clc
stos
sub
hlt
adc
mov
fcomps
not
clc
jb
aad
sahf
mov
les
mov
inc
ljmp
clc
pop
and
adc
je
lods
fstps
xlat
push
cmp
xor
lcall
in
pop
out
lcall
sarb
stos
push
push
mov
insl
rcr
mov
test
js
or
or
pop
fs
sar
popf
mov
mov
cwtl
pop
std
call
icebp
stos
push
loopne
out
mov
test
insb
pop
mov
ficoms
out
fwait
lret
dec
call
jg
nop
jnp
dec
in
sub
push
mov
sbb
cmpsb
aam
push
daa
mov
movl
int3
scas
out
mov
aad
sbb
roll
js
mov
cld
cmp
mov
mov
pop
cmp
pop
das
lock
jmp
pop
adc
sahf
jno
mov
adc
sbb
fdivrs
outsb
cmp
subb
out
out
nop
cli
aad
add
add
out
push
xor
popf
les
or
rcrl
rorb
pop
fmull
mov
push
and
or
push
mov
xor
jne,pt
repz
or
test
fwait
jns
inc
scas
dec
mov
mov
dec
inc
push
ffreep
cmp
and
out
or
mov
lods
aas
xchg
and
or
sub
scas
das
scas
call
cld
or
cmc
fwait
adc
icebp
and
sub
loopne
xor
mull
and
xor
xchg
sub
pop
ljmp
bound
jge
mov
xchg
jne
add
imul
loope
lret
adc
mov
mov
in
aas
outsl
mov
call
ret
jle
ficomps
sbb
outsb
into
inc
push
popa
jmp
leave
inc
xor
and
xor
cmpsl
pop
sub
mov
inc
xchg
dec
cli
mull
dec
add
push
sbb
aas
pop
add
push
clc
fisubl
mov
rcrl
push
das
in
cmpsl
in
out
cmp
arpl
mov
pop
xor
adc
shr
jne
lahf
push
pop
dec
mov
lods
repnz
cmpsl
pop
pop
mov
fisubrl
cmp
adc
sbb
or
push
add
and
mov
add
and
ljmp
pop
add
jns
mov
lods
inc
pop
lret
mov
rcr
jmp
inc
jb
mov
ret
push
or
or
inc
adc
popa
mov
mov
dec
imul
out
lea
mov
test
cmp
call
stos
mov
in
push
testb
negb
cmp
mov
lret
es
mov
aam
push
orb
mov
sub
int3
dec
imul
mov
in
or
xchg
shll
inc
push
cmp
xor
pop
xchg
cmp
out
sahf
adc
push
dec
push
cmc
test
fsub
mov
mov
imull
inc
pushf
or
pop
mov
or
mov
dec
je
sub
jno
lret
sbb
dec
fdiv
leave
cmp
adc
xchg
mov
enter
inc
repnz
sbb
xlat
inc
dec
jns
ljmp
popf
xor
lcall
jge
add
outsl
je
test
xorl
pop
pop
negl
aas
movsb
add
dec
cmp
stc
cmp
inc
je
mov
mov
gs
sti
cmp
das
fst
popf
push
arpl
mov
int3
test
or
jl
rcr
arpl
addb
orl
mov
fidivrl
stos
xchg
pop
sub
mov
jo
push
pop
fwait
jns
mov
bound
in
mov
iret
pop
cmp
jb
add
mov
xor
ficompl
test
and
jg
push
sarb
dec
xchg
outsl
ffreep
xor
jecxz
dec
das
mov
aam
lret
push
adc
sub
pop
pop
mov
mov
sbb
int
fs
jnp
xchg
xchg
xlat
das
adc
ds
sbb
ss
inc
sti
aam
in
ds
fucomi
sbb
nop
jp
add
rol
adc
dec
mov
push
dec
mov
les
cwtl
push
fbld
xor
lock
not
jbe
imul
xor
mov
pushf
mov
cmp
cmp
inc
push
sbb
fsts
add
mov
fwait
inc
cs
out
xchg
test
mov
and
and
sbb
cmpb
aas
dec
ljmp
and
adc
gs
les
mov
push
sub
ljmp
xchg
sbb
inc
iret
inc
or
ljmp
jl
in
lcall
ss
js
shll
adc
pushf
not
fsts
sub
add
mov
dec
jl
lods
je
fcom
sub
cmp
push
pop
rcrb
daa
mov
xchg
nop
fldcw
in
jmp
pop
pop
arpl
nop
dec
out
dec
mov
inc
mov
sti
iret
add
pop
aas
outsl
sub
outsb
adc
xor
lods
sti
jns
push
outsb
repz
jnp
add
movsl
dec
out
movsb
insb
in
enter
insb
mov
movsb
mov
jns
sub
fmuls
and
fnstcw
lods
fcompl
jecxz
mov
xchg
and
cmp
cmp
and
les
mov
lods
cmp
push
or
sub
enter
jl
push
and
jne
pusha
inc
jmp
into
fwait
ja
rolb
rcl
mov
mov
ret
fnstenv
movsb
in
mov
loop
pop
sbb
fwait
enter
iret
pop
jecxz
sarl
push
ret
mov
rorb
adc
mov
sbb
addr16
fidivs
int3
push
sbb
cmp
and
mov
pop
fsubr
insb
scas
jl
out
movsb
dec
pop
adc
lea
jecxz
in
fs
push
mov
add
test
xchg
movb
out
cli
add
loope
mov
add
inc
pop
mov
or
or
loopne
add
jae
sbb
adc
jecxz
push
pop
out
ficoml
dec
sub
push
mov
inc
shll
sub
rcl
mov
sub
std
cli
jmp
push
or
push
movsb
into
pop
insl
push
std
mov
sbb
fwait
mov
repnz
aas
je
push
aaa
mull
mov
fs
data16
mov
repnz
add
outsb
push
inc
fucomip
jge
dec
hlt
hlt
call
mov
imul
mov
xchg
repz
push
cwtl
add
movsl
inc
jge
dec
out
les
daa
inc
xor
xor
xor
mov
out
lock
gs
faddl
sbb
addr16
insb
mov
lret
or
fcmovbe
mov
mov
shrl
call
jp
in
or
cli
and
pop
xor
push
scas
jecxz
jo
push
nop
sbb
out
lret
iret
fistpll
xor
sbb
mov
aaa
jae
std
dec
cmpb
xlat
and
mov
enter
jb
push
dec
push
es
adc
mov
cli
jmp
or
adc
sbb
push
gs
jae
xchg
push
js
test
test
cmp
sbb
mov
stos
adc
mov
out
jnp
jb
sbb
xlat
into
adc
or
in
lock
fisttps
aaa
sub
fstpl
aaa
or
lods
xchg
pop
dec
pop
add
in
shlb
aad
cmp
int3
in
outsl
out
and
dec
mov
dec
std
sbb
sub
aad
jg
sbb
or
adc
lds
mov
push
adc
xor
stos
jg
mov
inc
das
js
insb
inc
jl
repz
mov
cli
sub
loope
mov
push
lock
mov
push
add
mov
push
cs
mov
bound
sbb
cmp
adc
xchg
lods
push
arpl
out
xchg
sub
daa
inc
and
mov
cmc
imul
les
arpl
mov
jmp
test
dec
in
int
fdivrl
xor
mov
sub
xor
sahf
mov
cld
and
mov
xchg
dec
mov
or
jl
cmp
fsubs
mov
arpl
xchg
out
bound
jns
sbb
mov
push
das
lods
mov
dec
jno
add
sub
dec
out
xchg
sbb
lret
in
lahf
xor
add
inc
fidivl
add
cld
sbb
push
xchg
xlat
add
jl
out
inc
xchg
test
cltd
test
scas
or
add
daa
sarb
std
cmp
ret
repz
jecxz
sbb
cmp
dec
or
jns
mov
lret
rcrb
ljmp
popa
mov
insl
daa
out
sbb
movsb
lea
mov
pop
push
repz
out
lret
pusha
std
pop
movl
in
inc
sbb
cmpsl
ja
mov
orl
ret
mov
mov
or
out
jo
xchg
call
loop
xchg
jmp
inc
in
mov
add
jb
idivl
cmpsb
je
lret
jmp
pop
in
jecxz
sub
mov
clc
dec
lret
pop
xor
cli
mov
out
negl
mov
pop
mov
fiaddl
jg
outsl
mov
push
fwait
sub
test
cmpl
fnstenv
cli
stc
xchg
push
dec
test
nop
pop
data16
cmpl
mov
cmp
push
shlb
mov
ret
inc
xchg
cld
mov
add
jecxz
loop
repnz
push
sbbb
shlb
jns
add
jb
sahf
lds
cmovbe
push
shrl
mov
ret
sbb
loop
ljmp
leave
loope
xor
imul
shl
pop
dec
jbe
into
scas
jmp
mov
push
cld
push
cmove
ds
xor
inc
or
lcall
scas
xchg
mov
lds
jae
inc
cmpsl
ret
ret
call
and
aad
out
push
adc
xchg
out
bound
mov
ret
add
mov
ja
xchg
stos
add
push
lock
dec
dec
dec
push
ds
add
sub
gs
mov
sti
inc
std
sub
mull
add
or
mov
push
inc
cltd
mov
xor
cmp
mov
int
daa
jle
sti
fmuls
push
repz
and
in
dec
or
sbb
ds
dec
adc
out
testb
xchg
arpl
sbb
mov
cmp
mov
fwait
icebp
std
dec
ja
test
jl
out
dec
xor
pop
jge
sti
sub
out
mov
lcall
push
and
je
out
and
stc
aad
and
mov
insb
loope
shll
mov
imul
in
xchg
and
lar
iret
fs
sti
sbb
mov
in
pop
xor
add
or
push
sbb
mov
ficoms
cmp
out
add
adc
daa
out
popa
call
je
jg
jno
pushf
xchg
xchg
sub
fdivr
sub
sbb
sbb
into
jg
inc
jne
push
repz
dec
mov
inc
pushf
fldl
movb
stos
in
sub
xor
aad
xor
fwait
jnp
mov
push
es
jp
inc
loopne
cmpsb
test
daa
add
jge
dec
sbb
dec
inc
call
aas
inc
pop
ljmp
or
out
enter
addr16
mov
aad
popa
pop
cld
adcb
enter
sbb
dec
in
jl
push
sahf
lret
lret
mov
loope
add
clc
adc
sbb
xor
push
lds
ds
movsl
iret
insl
sub
inc
cmp
jl
subl
cmp
repz
or
and
jnp
cmp
push
mov
mov
dec
mov
ljmp
mov
push
stos
add
insl
divb
and
jbe
out
std
jns
stos
pop
lods
cs
add
push
cs
jmp
gs
addl
outsb
or
je
xchg
adc
push
xlat
mov
jmp
jmp
xor
ds
jns
mov
outsb
xchg
int
clc
sbbl
xor
lds
and
cmp
fnstenv
repnz
movl
hlt
out
and
dec
sub
lret
mov
stos
stos
pop
ret
insl
lcall
xor
ret
adc
cmp
addb
mov
enter
adc
int
and
iret
jbe
jp
int3
dec
push
push
sub
bound
ds
inc
les
ds
jno,pt
js
movsl
xchg
sub
insl
pop
mov
cmp
testl
test
out
jg
shr
xchg
mov
mov
adcb
pop
daa
mov
bound
aad
sub
dec
fs
dec
cmc
mov
addr16
xchg
mov
jle
xchg
movsl
fiaddl
add
xor
in
or
add
in
inc
aaa
lcall
add
loopne
addr16
push
inc
and
insl
nop
fidivrs
or
pop
cmp
cmp
mov
xchg
pop
pop
loop
pop
mov
adc
sahf
js
or
popa
pop
iret
stos
outsl
adc
cmpsl
idivb
xor
mov
inc
mov
pop
cld
loopne
sysexit
mov
iret
jbe
jno
fisubl
pop
mov
jbe
dec
cmpsl
pop
es
jg
adc
push
fcmove
aas
mov
in
pop
daa
loope
cld
in
rcrl
adc
loopne
pop
mov
sub
dec
fsubs
inc
add
pop
xchg
stos
and
andl
sbbb
mov
pop
xor
movsb
xchg
jmp
f2xm1
xchg
jne
and
stos
dec
mov
bound
mov
test
dec
pop
adc
pop
in
xlat
cmp
xor
in
and
jge
mov
movsb
mov
minps
pop
fildll
adc
fsubs
arpl
jle
rep
mov
int
addr16
inc
jb
sti
cmp
jno
pop
shlb
enter
lock
lret
sub
ficomps
push
pop
xchg
cs
adc
lods
pop
sub
mov
xrelease
and
lret
cmp
push
mov
jmp
push
pop
inc
outsb
loopne
pop
std
daa
push
aaa
add
imul
jecxz
lahf
out
imul
es
lret
cmp
add
sub
daa
imul
movsl
pushf
xchg
adc
cmp
or
push
pop
pusha
cwtl
mov
outsb
popa
add
int
pop
dec
shlb
fcoms
mov
and
ret
out
aas
fidivrs
or
clc
les
pop
and
pop
incb
and
jle
je
or
sahf
movsl
into
add
mov
pushf
es
inc
mov
and
and
pop
inc
xchg
add
jg
sub
ja
pop
push
hlt
push
sub
clc
mov
and
dec
fwait
repnz
adc
f2xm1
pop
and
xor
std
push
lods
mov
mov
push
and
cmp
add
movsl
bound
cli
out
test
and
mov
test
pop
lahf
sub
test
dec
push
popa
add
mov
stos
mov
sub
sub
movsb
dec
add
jecxz
xor
jne
jae
xor
cltd
push
out
xor
push
or
rclb
ficoml
sbb
push
mov
test
cmpsl
adc
or
add
in
sub
das
cmpsl
ret
xchg
sub
xor
and
pushf
cmp
cmp
pop
cwtl
stos
mov
decb
lods
cwtl
jge
mov
shrl
jne
stos
sahf
sub
stc
cmpsl
data16
mov
cli
add
xchg
ja
sbb
xchg
sub
push
push
mov
loope
lock
sub
push
mov
aaa
ret
or
push
pop
mov
jmp
cltd
adc
dec
sti
jecxz
idivb
adc
and
je
and
or
vmovhps
cmp
add
and
cwtl
ljmp
mov
ret
clc
add
xor
int
in
loopne
and
push
jecxz
jnp
add
sub
lock
test
add
orl
or
xor
add
cmc
subb
out
jecxz
ljmp
jl
out
add
lcall
inc
mov
lock
pop
cmp
sbb
inc
mov
hlt
data16
xor
or
push
lock
or
xor
or
es
push
or
inc
cmpsb
jb
xchg
mov
adc
mov
push
nop
cmpsl
ret
cmp
add
xor
out
or
and
jp
sub
xor
or
lods
popa
sti
aaa
hlt
lret
dec
push
in
hlt
sbb
jb
pop
in
sahf
in
adc
std
cmp
mov
dec
mov
mov
dec
sub
jecxz
loope
insb
inc
cmp
xor
pop
mov
or
xor
push
xchg
cltd
ds
push
dec
ss
xor
lcall
add
mov
loop
sti
dec
cmp
sbb
movq
test
sar
outsb
and
mov
jle
ret
cmp
sub
xlat
ss
jb
pop
addb
femms
bound
dec
arpl
movsb
or
pop
movsl
sahf
jae
lds
pushf
int3
lods
mov
cli
pop
filds
loope
and
popa
xor
mov
data16
call
jge
insl
jne
in
sbb
sub
call
test
sti
dec
lds
outsl
hlt
loopne
add
sar
mov
lret
into
mov
mov
or
sbb
push
sbb
shr
imul
push
xor
sar
cs
or
enter
inc
mov
int3
and
sbb
jl
mov
shll
push
xchg
mov
jp
leave
pop
test
pusha
lods
inc
xor
js
setae
mov
addr16
test
sti
jge
pop
xor
lahf
xchg
mov
jle
dec
movsl
lcall
fadds
inc
mov
cld
cmpsb
stos
rcr
daa
inc
cmp
inc
xchg
add
scas
push
jae
aaa
fidivrs
xor
sub
scas
call
add
jae
sub
lea
flds
repnz
push
jl
shll
cmp
orb
add
xchg
insl
lcall
js
idiv
fwait
jne
pop
cmp
loop
sbb
xchg
xor
jnp
pusha
push
cmp
xor
ds
or
decl
jmp
adc
pop
mov
aam
dec
fs
adcl
daa
push
dec
aas
lahf
and
inc
aad
mov
loop
xchg
and
in
add
daa
nop
js
add
outsl
push
cmp
daa
lret
scas
test
sar
mov
inc
sbb
cwtl
nop
fists
push
cwtl
out
push
mov
dec
into
lcall
push
stos
cs
pop
test
sbb
test
shl
cmp
aas
or
cmp
ljmp
jae
and
mov
xor
mov
mov
pop
insb
lret
ljmp
outsl
and
dec
out
jb
insl
xor
add
xchg
adcl
jecxz
push
nop
mov
bound
pop
mov
fisubrs
popa
loopne
xchg
sbb
jg
pop
divl
lds
fs
cmp
pop
btr
sbb
stc
les
scas
dec
xchg
int3
push
ret
push
das
inc
dec
sar
mov
pushf
cmpsb
and
pop
ljmp
mov
rorl
out
cmp
mov
and
push
fcmovnbe
cmp
mov
cmp
push
inc
aaa
sbb
cmpsb
sub
sbb
sarb
mov
std
xor
xchg
cwtl
mov
push
iret
pop
jge
jae
jmp
sub
inc
cwtl
pop
movsb
ja
push
bound
push
jle
mov
add
iret
xchg
sub
sbb
dec
aas
pop
cmp
dec
sahf
mov
push
in
pop
cwtl
ret
cmc
dec
xchg
sub
sarb
adc
daa
adc
jo
xor
dec
mov
in
shrb
adc
push
arpl
xor
adc
gs
or
add
inc
nop
aas
sbb
stos
scas
or
cwtl
push
out
sbb
cmp
push
xchg
inc
in
lret
xchg
mov
aas
mov
fs
stos
sub
sbb
jnp
lods
outsl
xchg
lea
jnp
dec
mov
out
sub
scas
dec
rcrb
iret
pusha
in
mov
xor
mov
pop
js
xchg
orb
in
sahf
int3
das
xchg
jo
in
mov
xchg
les
jb
rcrb
or
jp
out
jns
leave
mov
mov
scas
lahf
pop
mov
inc
out
ret
mov
pop
jae
lods
scas
and
and
add
popa
popa
repz
push
mov
outsl
mov
xor
mov
xor
push
cmp
sbb
loope
sub
aaa
sub
sub
mov
mov
fisubrs
inc
pushf
dec
outsb
jmp
and
fbld
cmp
jns
stos
and
mov
lock
scas
insl
adc
out
outsb
bound
loop
cwtl
inc
xor
or
clc
and
leave
mov
dec
adc
jp
out
cmpsl
push
add
adc
add
xor
cmpsl
in
iret
lahf
pop
and
and
push
mov
or
or
mov
hlt
lds
outsl
int3
push
clc
lods
bound
mov
lods
std
dec
mov
xor
shl
lods
ret
cmc
ds
mov
outsb
cmp
mov
das
pop
sub
repnz
fs
int3
push
cld
sub
and
sbb
or
dec
jmp
mov
xchg
pop
jp
jb
xor
cmc
std
ret
mov
mov
sbb
pop
dec
repnz
out
mov
sub
fbld
icebp
mov
or
mov
imul
mov
clc
mov
pop
adc
and
jecxz
scas
or
push
cwtl
or
xchg
mov
lea
jmp
cmp
call
lds
cli
popa
out
cltd
jge
push
xor
dec
xchg
stos
rcrl
jns
leave
jp,pn
adc
fs
imul
fimuls
pop
or
xchg
dec
mov
adc
stos
insb
mov
mov
mov
jmp
lods
sub
mov
shll
push
push
xor
out
imul
sbb
push
xchg
das
sbb
sub
inc
insl
test
inc
and
jno
mov
add
adc
and
or
pop
sbb
xchg
icebp
inc
ret
das
bound
stc
ret
lods
mov
roll
in
pop
xor
and
mov
das
fs
mov
rorb
stos
adc
push
outsb
fs
add
mov
mov
ljmp
cli
adc
loope
pop
gs
mov
lods
rolb
shrl
add
pop
lcall
mov
cmp
pop
pop
ss
adc
mov
add
out
js
xor
dec
popa
pop
data16
push
das
xchg
daa
xchg
cmp
or
mov
ljmpw
xorb
cmp
pop
mov
out
es
adc
xor
add
idiv
dec
outsl
jns
mov
aad
bound
add
sbb
ficoms
andb
insl
jb
mov
fimull
iret
lahf
fstl
loope
cwtl
mov
daa
xlat
dec
int
inc
jmp
mov
out
or
jne
cmc
or
xor
stc
xor
inc
pop
ret
sbb
sub
lcall
in
xchg
rorb
mov
addr16
add
arpl
add
ret
cld
mov
mov
xchg
fidivrl
jge
ficomps
xlat
cld
mov
iret
sbb
repz
dec
shrb
fstpl
inc
jmp
cmp
ficompl
es
pop
cmpsb
andl
cli
jge
mov
bound
movb
push
add
cmc
cmp
insl
scas
arpl
push
mov
pop
jae
repz
mov
cwtl
push
xchg
shlb
insl
cmpsl
mov
xchg
sub
xor
jbe
mov
pop
fdivs
xor
pushf
repnz
mov
sub
adc
jne
out
mov
xchg
cmp
pop
in
xor
jecxz
pushf
mov
and
std
test
clc
enter
sbb
push
std
inc
lea
and
popf
into
push
fptan
pop
ret
sbb
insb
fwait
adc
pop
into
mov
shlb
xor
das
stc
cli
les
stos
cmp
or
cmp
sbb
or
fucom
adc
cwtl
push
or
push
jge
add
rcrb
ds
mov
adc
cmp
loop
and
ss
lods
mov
push
xchg
rcl
fistl
jle
sbb
xchg
jle
mov
inc
std
inc
leave
loope
pusha
cmpl
jne
sbb
sti
mov
jne
mov
daa
mov
fdivl
push
lock
popa
mov
pop
xchg
ja
cmpsb
insb
push
inc
js
int3
mov
cltd
dec
ret
jmp
cmp
es
jae
bound
sbb
sub
ss
dec
or
das
jns
and
in
jbe
test
dec
or
or
mov
pop
jo
in
sbb
mov
andl
jae
icebp
cltd
inc
mov
test
out
ret
push
imul
ds
mov
sbb
sub
je
fucomip
push
movsl
mov
cmc
adc
inc
repz
fcmovnbe
jge
mov
mov
rorb
mov
or
jecxz
and
jmp
pop
mov
aad
jp
rcrl
imul
and
clc
add
test
std
les
push
sub
adc
enter
aaa
sbb
jbe
and
test
movsb
sub
jmp
scas
or
ret
popa
sbb
lahf
movsl
test
xor
ror
inc
and
cmp
enter
ret
and
cmp
xchg
sub
push
jno
outsb
mov
loope
stc
mov
jno
std
xorb
testb
sub
inc
mov
push
incl
outsl
lods
pushf
ret
cs
mov
push
adc
add
loopne
jl,pt
ljmp
cmpsl
call
and
and
push
mov
xchg
out
sub
mov
sub
int3
and
add
adc
jp
pop
dec
xor
adc
pop
mov
test
lods
out
jecxz
dec
icebp
push
pop
ljmp
mov
mov
icebp
sbb
pop
fcompl
jp
inc
aam
cmp
cmp
add
add
jp
mull
fbld
cwtl
mov
ficoml
inc
in
cmp
push
pop
in
dec
add
ss
jmp
stos
jge
ss
dec
pop
cmp
and
insl
add
jae
das
pushf
add
enter
test
fdiv
aam
xchg
sti
jmp
mov
xor
jae
and
rolb
push
orps
mov
stos
call
add
jmp
add
test
sbb
mov
rcr
or
movsb
cmp
jae
pop
sahf
jns
xchg
mov
inc
mov
pop
pop
pmaxsw
or
out
dec
leave
mov
cmc
jge
jmp
mov
xchg
pop
cmp
and
push
push
inc
out
loop
mov
popf
jg
push
mov
call
arpl
out
mov
movsl
shll
xchg
fnstsw
push
pushf
pop
in
add
pushf
nop
xlat
xchg
dec
push
inc
fistpll
sub
pop
cmp
jmp
aad
jns
pushf
mov
daa
sub
imul
out
ret
cmp
dec
push
mov
daa
sub
movsb
sub
mov
jae
mov
sti
and
fsubrl
cmp
mov
cmp
adc
loopne
clc
push
into
pop
in
inc
push
iret
push
and
push
sbbb
rcll
cmc
rcrw
push
and
sub
ljmp
push
fs
in
fldenv
cmp
cmp
pop
sub
jae
mov
pop
sub
fimull
es
sti
cmc
push
loopne
lods
fists
sbb
cmpsl
or
mov
add
bound
jbe
cltd
cltd
mov
jbe
aas
mov
jae
rclb
in
lcall
mov
xor
into
mov
inc
fcoml
lahf
je
incb
mov
xor
add
mov
test
jp
ja
push
pop
pop
sahf
cmp
pop
mov
test
mov
shlb
stc
cwtl
jg
js
mov
dec
push
daa
push
clc
fistl
cmp
or
and
push
add
mov
je
cmp
pop
test
and
push
add
les
ret
cmpsb
fadd
sarl
mov
aas
xor
pop
mov
push
fcomp
mov
out
in
fsubr
and
divb
bound
imul
mov
jae
jns
cmc
cmc
pop
xchg
orb
in
pop
ret
add
xchg
and
mov
test
daa
lret
test
sbb
je
aad
xchg
gs
je
test
mov
add
lea
out
sbb
adc
jb
aas
xchg
into
js
rorb
xchg
push
clc
loopne
jb
mov
mov
cwtl
pop
bound
outsb
iret
push
fisubrs
lret
xor
in
ja
loop
jae
and
js
xchg
cmp
nop
mov
pop
jge
pop
jle
sbb
sarb
imul
jnp
and
xchg
jg
fbstp
inc
mov
ficompl
push
pop
xor
movb
dec
sub
into
into
xlat
ret
cli
loop
test
and
add
pop
push
jle
pop
sub
cmc
dec
fnsave
jne
ret
mov
xchg
dec
pop
xchg
push
mov
enter
fmulp
lret
ret
cmovnp
jp
imul
pop
call
mov
lock
scas
ja
xchg
or
sub
jge
xchg
jmp
jle
sbb
cmp
add
push
out
sarb
pop
inc
jl
mov
cmpsb
mov
inc
cmpl
mov
popf
mov
ret
daa
add
sti
clc
enter
sub
js
enter
shl
cmpsl
repz
arpl
mov
rcrl
test
mov
ljmp
test
addr16
sar
add
ret
mov
sbb
imul
shrb
adc
mov
add
jmp
adc
xlat
add
dec
aaa
sbb
popf
mov
movsl
jo
outsb
lods
inc
sbb
int3
push
sub
jg
dec
jg
ljmp
add
jne
aad
jg
pop
cmpsb
fisttpll
mov
add
sub
inc
sar
mov
jne
shll
nop
pusha
out
cmp
out
out
or
adc
xor
mov
pop
dec
mov
add
std
out
mov
stos
lahf
in
ds
fistps
std
cli
dec
dec
loope
cmpsb
inc
sbb
dec
les
sbb
jmp
insb
lods
inc
adc
jp
cmp
cmp
jle
cmp
pop
loop
outsb
inc
xor
in
or
ja
lcall
pop
dec
xlat
dec
xor
cmc
aam
out
inc
sub
dec
cli
sahf
bound
cltd
mov
sub
in
in
out
add
ret
sbb
insb
jg
adc
or
inc
inc
and
jmp
pop
gs
loop
fisubs
sbb
or
cmp
push
repz
push
mov
mov
ds
cmp
in
push
add
movsb
pop
sub
jl
fmulp
cmp
cs
xchg
add
or
aas
xor
mov
fadds
and
les
or
jmp
cld
cli
insl
push
fsts
mov
loope
jns
mov
shrl
pop
xchg
mov
loop
or
ret
adc
dec
pop
adc
lahf
push
sbbl
sarb
inc
xor
lds
push
xlat
into
das
js
adc
sbb
pop
push
rol
jae
jmp
movsl
daa
fcomps
fs
mov
pop
mov
push
outsl
adc
xlat
fldl
mov
mov
je
push
sub
pop
lahf
cmp
gs
jo
mov
fstpt
adc
cwtl
xchg
push
mov
mov
dec
jecxz
sti
mov
xchg
imul
ret
sub
pop
daa
add
bts
repnz
in
cltd
mov
aam
test
in
inc
or
cld
dec
push
iret
cltd
or
and
test
fisubs
and
repz
cmpb
mov
inc
dec
clc
mov
or
jbe
mov
nop
icebp
and
es
leave
push
mov
jl
test
int3
hlt
mov
fidivrs
shll
jmp
hlt
mov
pop
push
dec
loopne
into
cmpb
std
pop
add
loopne
inc
idivl
pop
inc
xchg
or
sbb
inc
popa
mov
and
loopne
mov
jnp
xor
add
rcr
rcl
fnstsw
mov
test
ret
lds
pop
idivb
in
fadd
das
jne
xchg
cmp
movsb
or
adc
int3
dec
push
push
mov
pop
es
adc
gs
lret
sub
imul
cwtd
repnz
lock
adc
fstps
jmp
jb
cmpsb
les
dec
xchg
pop
ljmp
push
mov
or
push
cmp
jl
das
outsl
push
mov
fdivrl
or
hlt
dec
lods
jg
cmp
leave
push
fsubrl
and
out
pop
cmp
inc
insb
add
fimuls
mov
dec
jne
call
cmpsl
into
cmpsb
aad
sub
test
and
fs
in
loop
adcl
push
lret
mov
js
divb
mov
inc
mov
aad
and
xchg
test
inc
mov
mov
mov
nop
pop
rcrb
adc
adc
cli
push
mov
push
cmpsl
loope
fildll
sti
outsb
mov
in
mov
inc
inc
lock
imul
int
ret
inc
test
xor
push
test
pusha
stos
push
add
loope
cmp
mov
lods
xchg
jne
mov
rcrl
add
jo
push
movntq
scas
dec
pop
pop
hlt
in
sbbb
mov
pop
aaa
enter
push
cli
dec
ret
stc
aad
adc
stos
adc
jge
fcomi
sbb
dec
mov
sub
or
and
mov
ja
mov
pop
mov
cmp
cmp
nop
test
les
pushf
sarb
inc
clc
add
mov
xor
push
adc
lret
mov
in
sarb
js
jne
cmc
jmp
lahf
inc
xchg
lret
sbb
jbe
fnstenv
jmp
add
cmp
sub
jne
and
push
jge
es
adc
ret
notb
test
je
jns
fmulp
stc
xchg
into
push
pushf
int
popf
dec
or
jl
mov
fadd
mov
push
mov
mov
inc
or
mov
fistps
sub
ss
pushf
mov
sbb
sub
imul
out
out
mov
out
cmp
es
ljmp
jecxz
push
sub
mov
push
sarb
mov
add
xchg
mov
mov
inc
and
and
jns
cmp
into
cmpsl
daa
hlt
jae
inc
push
std
add
sbb
add
fisubs
in
in
faddl
xchg
mov
cld
lods
and
inc
pop
ret
push
call
arpl
xor
mov
dec
hlt
inc
dec
sub
cwtl
daa
mov
clc
leave
push
leave
and
xchg
movsl
mov
adc
jne
jl
jae
scas
mov
ljmp
cmpsb
test
test
fmull
cli
insl
mov
imul
push
int
sbb
and
mov
lea
rolb
jo
mov
in
call
adc
shlb
sbb
or
cmpsl
jae
pop
aad
scas
lds
daa
popa
xor
xor
bound
pusha
iret
cmp
arpl
dec
ret
in
adc
data16
cmp
les
or
xchg
aam
sub
pop
add
push
jp
mov
adc
sbb
clc
stc
cmp
and
adc
jge
xorl
inc
sahf
jae
dec
jmp
outsb
dec
sbb
in
cmp
mov
cmp
mov
mov
out
dec
loop
shlb
leave
inc
jecxz
mov
imul
sbb
fcoml
push
fistps
in
inc
sub
outsl
xor
sub
js
rcrl
xor
xor
int
adc
xchg
lret
cs
sbb
xchg
jp
pop
mov
ljmp
or
pop
sbb
cmp
ret
sub
stos
jno
mov
mov
add
idiv
xchg
xchg
dec
cmp
xchg
filds
push
inc
insb
mov
repz
outsb
mov
pop
pop
mov
addr16
repnz
pusha
sarb
dec
fdivrl
jmp
jl
mov
cmc
gs
lods
out
sahf
clc
jmp
jl
ss
jns
std
call
sbb
jmp
test
mov
stos
cltd
pop
cmp
or
pop
ret
add
ret
xchg
aad
movq
and
aaa
mov
popf
and
inc
adc
or
iret
push
imul
mov
mov
das
test
dec
out
fmuls
fcomip
adc
mov
movsb
add
xchg
lret
aas
inc
lods
push
mov
jmp
mov
dec
cli
loop
jb
mov
call
mov
mov
loope
lock
mov
mov
sbb
push
popf
or
xchg
inc
sub
out
lcall
in
out
in
jmp
sbb
add
or
outsl
pop
std
hlt
aaa
or
xchg
xchg
jecxz
and
mov
lods
cwtl
xchg
popa
sub
xchg
inc
shll
std
jo
testb
or
push
jle
loopne
mov
and
mov
add
mov
fwait
sub
sbb
push
insb
sbb
fisubrs
pop
cmp
ret
and
xor
arpl
jb
add
enter
pop
fbld
je
jmp
pop
pop
pop
test
data16
repz
adc
in
mov
or
leave
push
movsl
out
mov
cs
cmpsb
adc
jmp
jecxz
cld
in
mov
inc
imull
push
test
inc
push
stos
jbe
imul
xchg
cltd
fwait
incb
stos
and
movsb
ret
sub
gs
fildl
pushf
push
das
mov
add
mov
cmp
in
sbb
xchg
insl
inc
jne
repz
push
cmp
enter
insb
mov
pop
dec
dec
pop
test
sbbl
pop
scas
rcrb
pop
mov
xor
movsl
and
jle
adc
dec
mov
je
inc
xor
xor
aaa
xor
test
arpl
mov
pop
lock
fs
jbe
pop
sti
push
adc
fnstcw
mov
or
inc
outsl
fwait
scas
into
push
and
or
cltd
faddl
dec
dec
or
adc
jae
lret
adc
mov
aad
dec
dec
inc
loopne
fs
or
push
adc
mov
push
std
adc
or
enter
push
cs
mov
stos
ds
mov
outsl
push
sbb
jo
xor
js
push
push
jb
cld
or
adc
cmp
sbbl
js
or
rol
push
into
movsb
hlt
stc
jge
in
pop
leave
mov
push
imul
ret
ret
outsl
ret
movsb
lock
addr16
sub
lret
addr16
pop
dec
cmpsb
cs
lret
lock
rcr
sub
push
sbb
rolb
bound
mov
daa
je
iret
inc
sbb
mov
fldl
inc
jecxz
loop
fildll
movsbl
lds
repz
pop
pop
xlat
in
fidivrl
aas
jecxz
repz
lcall
sbb
lods
fwait
je
and
jnp
xor
inc
or
cmp
sub
popa
dec
sub
dec
sbb
aas
mov
out
adc
push
imul
inc
in
jnp
adcb
adc
outsl
sbb
sub
or
push
ja
or
add
testb
pop
jb
aaa
sub
jae
arpl
bnd
sub
fcomi
jnp
sub
xchg
movsb
push
jae
cld
pop
or
xor
fs
push
les
cmp
jg
orb
mov
stos
in
add
jns
pop
cld
mov
inc
push
or
fsave
dec
test
add
cmovns
mov
push
ret
inc
call
mov
lcall
inc
sbb
sbb
inc
sbb
bound
outsl
push
pop
push
roll
jns
and
decl
aaa
fsubs
in
loope
add
je
jp
in
mov
cltd
cld
mov
adc
adc
jnp
mov
into
push
gs
hlt
jae
arpl
xor
sub
jp
test
mov
cli
sbb
sub
xchg
ficomps
mov
add
mulb
adc
add
repnz
loop
imul
lods
aaa
jnp
adc
push
jecxz
mov
loop
nopl
adc
add
jns
and
mov
cwtl
add
xor
mov
push
sub
mov
sarl
loop
cmpsb
adc
mov
pop
sbb
ljmp
cli
loop
or
mov
inc
movsb
mov
loope
xor
in
push
xor
cmpsb
hlt
add
data16
rcrb
imul
imul
shll
lea
mov
lcall
in
int3
hlt
fsubl
insl
add
test
cli
pusha
daa
adc
push
daa
sbb
jbe
pop
or
cld
dec
mov
sbb
cli
mov
sbb
mov
fbld
and
test
inc
sub
xor
andl
fbstp
adc
sbb
push
scas
sti
cmp
sbb
dec
mov
insl
cmp
popa
std
aaa
pop
push
push
aas
push
sub
pusha
sahf
sbb
lods
add
imul
popf
adc
mov
mov
outsb
mov
add
inc
popa
xor
jb
out
inc
push
stc
rclb
cs
das
out
jle
inc
repz
xchg
or
sub
push
xchg
jmp
adc
out
aas
es
pop
cmpsl
arpl
jb
pop
jnp
mov
jne
push
pushf
xchg
xchg
sar
ss
lret
add
inc
aam
cltd
testl
sub
bndldx
outsb
mov
push
sub
cmpsl
mov
mov
stos
and
test
stos
lds
in
and
adc
cs
aas
pushaw
push
cwtl
les
mov
leave
fnsave
jp
aas
push
gs
sti
movsl
dec
mov
jle
ja
lock
fidivrs
gs
leave
andl
pop
push
adc
addl
fsubr
inc
loop
aaa
cmpsl
pop
cmc
cmp
out
xor
loopne
das
cli
aad
mov
dec
xor
inc
pushf
jbe
test
mov
stc
jns
mov
idivl
hlt
addr16
movsb
push
mov
sub
mov
push
ret
cltd
out
movb
jge
call
adc
sbb
jo
inc
jae
shll
pop
jecxz
mov
cmp
andl
mov
incl
push
int3
fdivs
fwait
or
xor
mov
or
addr16
jmp
and
repz
arpl
aad
in
in
gs
call
mov
rclb
mov
sub
jmp
jo
imul
cmpsb
sbbb
mov
mov
mov
push
or
in
lock
fs
pop
mov
scas
cltd
sbb
cmpsb
out
sti
cmp
pop
cltd
cmp
mov
and
test
jno
test
push
fstp
xor
mov
inc
bound
jl
repz
lods
repz
jp
mov
xchg
mov
shlb
and
add
push
cmp
stc
inc
push
jbe
sbb
lods
lods
inc
cmp
cld
fisttpll
xchg
in
adc
xor
icebp
inc
iret
jecxz
cmpsl
add
mov
pop
sub
lret
dec
cld
test
out
sahf
mov
mov
je
adc
lret
add
inc
cmp
sub
ret
lock
pop
fbstp
xlat
and
xor
sbb
inc
scas
add
mov
dec
notl
adc
je
add
adc
xchg
sub
push
lea
xor
mov
cmpsl
sub
push
fdivl
jecxz
jnp
sbb
push
aam
mov
scas
mov
and
inc
sub
mov
hlt
fdivs
jns
or
pop
and
in
dec
in
dec
test
push
jns
xchg
in
clc
mov
lahf
and
icebp
test
push
xor
repz
fstps
repnz
cmpsl
ret
movsb
popf
out
insb
xchg
fmull
xor
pop
pop
imul
hlt
jl
or
or
mov
int
das
jno
fisubs
cmp
mov
cmp
lock
sbb
cmp
ret
sub
mov
loopne
and
rcrb
in
cmp
lds
xor
stos
fwait
mov
decb
pop
mov
push
repz
sbb
mov
push
stos
dec
mov
mov
jae
hlt
incl
divl
xchg
mov
mov
pop
movsb
and
loopne
das
fwait
xor
por
xchg
loope
mov
xor
int3
push
pop
xchg
in
sub
enter
or
rolb
neg
add
cwtl
or
cmp
xchg
out
push
sbb
ds
or
mov
sub
ficoml
bnd
jmp
bound
scas
clc
xchg
jmp
mov
mov
pop
mov
and
fdivs
push
cli
mov
mov
add
dec
mov
ret
xchg
sbb
les
sarb
mov
push
mov
into
faddl
mov
fimuls
cmp
test
ficoms
insl
jmp
or
jo
cli
out
icebp
das
xor
and
mov
inc
cmp
sbb
outsb
mov
sub
lods
in
jg
je
sbb
cld
cmp
icebp
clc
in
ljmp
jl
mov
inc
pop
and
sub
out
int
rcrb
lret
sti
inc
stc
and
cmp
leave
or
ror
jp
mov
or
adc
xor
enter
lcall
aam
sub
insb
out
cwtl
cmp
xchg
ds
sub
call
cmp
repz
inc
rcrl
mov
aas
clc
adc
ror
ss
push
pushf
cmp
lret
and
jbe
jecxz
scas
cltd
adc
mov
push
sbb
xchg
out
fistpll
cwtl
mov
push
mov
cwtl
std
mov
adc
hlt
xlat
adc
mov
pusha
loop
cmp
mov
dec
inc
sub
shrb
sbb
mov
sub
outsl
mov
imul
pop
ret
xor
and
leave
popf
mov
orb
ds
cs
jp
mov
inc
mov
movsl
push
adc
mov
sub
movsb
punpckhdq
xor
sub
xchg
xor
out
repnz
ljmp
fcoms
cmp
adc
movsl
sub
repz
cmp
pusha
jne
mov
xlat
stos
sti
ja
adc
push
nop
int3
ds
push
push
mov
xchg
cwtl
inc
rorl
xchg
fs
pop
shll
leave
fidivl
cld
mov
xor
xchg
lea
xchg
and
shl
push
inc
adc
inc
js
xchg
loop
inc
xchg
ljmp
out
lret
jbe
pushf
xor
dec
scas
push
pusha
add
call
ret
in
out
jne
jecxz
pop
rcr
mov
mov
imul
mov
jne
shlb
xchg
clc
dec
dec
lcall
mov
pop
jecxz
dec
lods
pop
stos
push
and
cs
sub
adc
cmp
lods
sbb
xor
mov
rorb
sub
aas
jo
in
dec
lcall
mov
pop
mov
jbe
int3
push
loope
pop
mov
inc
push
push
cmp
aad
add
adc
push
pop
cmp
xor
std
xor
je
lret
and
dec
int3
ja
or
nop
fimull
push
pop
test
or
popf
adc
loop
aad
dec
ret
push
cmc
daa
insb
pop
loop
sbb
pop
push
push
xchg
push
mov
adc
cwtl
push
into
adc
xchg
insb
loopne
shll
lea
ficomps
shl
loopne
and
stos
adc
and
shrb
stc
out
push
xchg
and
bound
insl
adc
mov
mov
dec
or
movsl
dec
pop
cmp
arpl
mov
mov
jge
mov
and
test
imul
leave
shlb
sti
repnz
lret
ja
cmp
insb
pop
or
adc
and
push
pop
fmull
aad
xorl
in
ficoml
dec
xchg
adc
dec
lahf
stos
and
nop
mov
iret
pushf
cli
iret
jge
fisttpl
lcall
inc
dec
and
add
imul
jns
add
push
cmp
push
test
jl
jecxz
cmp
mov
add
aad
mov
and
adc
ljmp
cs
sub
xchg
imul
mov
cmp
cmpsl
lea
xchg
arpl
jecxz,pt
jle
pop
pop
jno
iret
add
adc
sub
jmp
fsubl
ljmp
sti
lret
std
ret
ljmp
adc
jae
and
cmp
adc
lcall
adc
out
mov
out
jle
out
adc
mov
insl
cli
ficomps
in
mov
push
rcrb
add
sub
pusha
mov
pop
leave
das
jb
and
mov
sub
cld
inc
lods
popa
daa
nop
sub
js
xchg
pop
pop
leave
sub
ljmp
imul
or
pop
inc
or
rol
mov
mov
fwait
imul
xor
jmp
js
push
insl
xchg
fadds
outsb
add
cli
and
or
outsl
adc
mov
repnz
ret
stos
scas
mov
sbb
ljmp
mov
out
je
ss
jle
dec
scas
test
fnstenv
jmp
push
mov
mov
rcr
push
iret
sbb
stos
xor
test
jmp
push
ja
movsl
mov
sbb
sbb
inc
xchg
adc
insl
xchg
ds
adc
testl
push
imul
testl
and
mov
mov
ss
pop
mov
adc
call
jns
pop
js
movsb
inc
xchg
notl
and
and
insl
cwtl
ljmp
mov
adc
stc
decl
add
dec
neg
ds
xor
cmp
outsl
cmpsl
aas
mov
push
or
repz
xchg
push
jecxz
ret
cli
cs
js
icebp
sub
jmp
rcll
inc
lahf
sbb
cmp
movswl
pop
ss
inc
and
andl
leave
dec
xchg
in
out
int3
mov
outsl
les
pop
jnp
sub
lds
cmp
dec
out
jne
nop
lcall
mov
pushf
sub
dec
fwait
and
push
cmp
movsl
pop
loope
mov
or
mov
xchg
test
data16
mov
inc
mov
shlb
mov
call
test
pop
test
or
outsl
mov
addr16
loope
lcall
or
out
pop
mov
repz
gs
lds
adc
mov
inc
dec
add
xlat
sti
sub
cmp
frstor
iret
inc
ret
scas
cwtl
pop
bound
dec
xchg
sbb
push
dec
scas
stc
imul
sbb
inc
out
stos
mov
ljmp
cmp
repnz
leave
cld
or
sbb
jecxz
mov
pop
sbb
in
inc
fistps
sub
mov
and
add
xchg
incl
lock
out
daa
xchg
fbld
push
dec
mov
loop
stos
jb
cs
mov
sbb
and
push
pop
clc
pop
lds
jecxz
shlb
add
xor
cmc
add
sub
jmp
sub
fs
xor
ljmp
mov
mov
mov
xor
pop
xlat
cld
sub
jns
fcoms
mov
popa
pop
adc
jne
rclb
push
jl
inc
mov
daa
mov
sub
mov
mov
les
mov
and
clc
clc
jecxz
inc
data16
call
test
mov
popf
je
xor
jnp
das
outsb
outsl
mov
call
in
sbb
or
loopne
pop
mov
mov
sub
std
xor
out
mov
push
and
and
sar
push
flds
mov
adc
outsl
std
cmp
les
out
add
xor
roll
adc
mov
mov
push
leave
mov
cltd
les
inc
dec
xchg
test
sub
das
dec
jl
sbb
out
mov
mov
loop
sbb
cwtl
mov
jne
push
mov
popa
sub
xchg
xchg
or
es
out
adc
pop
mov
mov
xor
sub
andb
adc
pop
push
fidivrl
inc
call
out
out
pop
outsl
push
hlt
sub
scas
test
lock
jnp
sti
jmp
addr16
sbb
stc
sbb
push
idivl
cli
roll
cmp
das
sub
out
push
imul
jg
mov
lods
iret
jae
mov
fldenv
pop
inc
xor
lcall
or
xchg
pushf
cwtl
mov
pop
push
clc
clc
jmp
mov
fstps
jbe
mov
std
sbb
stos
dec
cmpsb
pop
out
std
sbb
adc
add
xor
cs
xor
lcall
lcall
jmp
les
sub
out
imul
xlat
nop
mov
sub
push
cmp
push
inc
les
add
loop
fstpl
cwtl
sub
mov
pop
loop
lret
xchg
and
jecxz
xor
and
mov
add
fucom
cltd
loop
mov
fsubs
leave
aaa
pushf
xchg
jbe
pop
fmull
jmp
shrb
fidivs
xor
push
pop
inc
jl
cmc
mov
adc
repz
push
stos
adc
std
xchg
xchg
test
das
cmp
mov
cmp
xor
inc
mov
adc
clc
mov
in
push
sbb
lret
sub
dec
mov
mov
daa
add
mov
int
mul
jg
sbb
fnstenv
cmp
xor
mov
jae
jne
pop
sub
add
pop
out
dec
fwait
and
adc
imulb
pop
add
mov
das
cs
cmp
and
testl
xor
sub
gs
or
mov
mov
fdivrs
mov
mov
mov
jl
imul
xor
xchg
jge
adc
xchg
lods
pushf
adc
out
sahf
xchg
sub
fdivp
fcoms
popa
ds
mov
iret
into
movsb
jg
ss
cld
push
sarb
and
and
leave
lods
jge
loop
mov
fadd
xchg
and
or
das
cmp
cmp
inc
adc
cli
hlt
dec
mov
popf
or
mov
subb
adc
out
xchg
cltd
adc
into
cmc
mov
mov
sub
mov
test
iret
xchg
stos
xor
mov
push
pusha
rorl
mov
fidivl
insb
cli
int
mov
mov
jp
or
sub
addr16
pop
andl
add
test
mov
mov
daa
mov
das
xchg
clc
enter
out
scas
mov
mov
subb
and
or
or
cmp
mov
mov
jecxz
cld
cli
in
inc
nop
fsubrp
push
adc
pop
mov
sub
mov
rorb
push
es
add
stc
shll
aam
or
in
enter
iret
cld
add
xor
lea
loopne
pushf
pop
ss
xor
sub
push
shll
mov
sub
xchg
and
sub
adc
shlb
in
push
dec
or
mov
mov
pushf
mov
mov
mov
push
adc
int
addl
mov
movsb
gs
add
inc
std
xchg
jo
lea
lods
pop
add
sbb
sub
stos
imull
nopl
inc
scas
sub
sub
mov
adc
int3
mov
sbb
pop
mov
in
and
clc
xor
loopne
fwait
cmc
imul
adc
sbb
pushl
arpl
or
into
cmp
add
scas
sbb
ret
testb
insb
mov
cs
adc
mov
test
sti
cs
mov
data16
outsl
out
jecxz
outsb
fiadds
fistpll
add
mov
push
add
loop
mov
cmp
sbb
imul
clc
data16
daa
std
mov
mov
in
lcall
mov
jbe
mov
mov
lods
mov
push
iret
adc
push
pop
mov
or
or
aaa
push
add
rolb
push
mov
xchg
xor
add
lds
mov
xchg
lret
icebp
mov
fs
xchg
xchg
popa
dec
lods
sti
and
out
inc
jno
cmpsl
int3
dec
dec
fld
hlt
fidivrs
movsb
repnz
mov
push
mov
mov
add
sahf
cmpsl
aam
adc
and
cli
sub
push
mov
outsb
hlt
dec
cwtl
pop
ret
inc
adc
test
mov
shl
hlt
aas
push
in
pop
mov
clc
jecxz
mov
sub
inc
faddp
push
out
int
mov
inc
fbld
out
cmp
inc
leave
mov
fisubrs
jb
xchg
push
int3
subl
and
int
int3
mov
or
outsl
xchg
xlat
ds
jno
dec
jo
xor
notb
add
ret
push
jb
jns
jae
addr16
adc
les
rcr
adc
inc
add
cltd
aaa
in
ds
push
ret
and
and
enter
gs
mov
sbb
mov
xor
or
sub
push
clc
mov
pop
cmp
add
xchg
iret
push
xchg
xchg
in
jecxz
jo
jb
dec
fisttps
addl
cmp
dec
sahf
inc
xor
enter
int
xor
out
jge
aam
and
cltd
adc
xchg
shrb
fdivr
and
out
leave
and
add
or
mov
cmp
adc
es
call
int3
xchg
pop
push
mov
mov
jb
in
divl
sahf
mov
fisubrl
fldl
rorl
int
stos
cmp
push
xor
lock
into
fstpl
push
out
inc
add
or
or
std
and
stc
push
cmp
mov
cmova
pop
add
aaa
inc
fstps
mov
aaa
enter
punpckhdq
pop
nop
shr
lcall
bound
arpl
sbb
push
imul
mov
or
cltd
xor
jp
loop
xchg
leave
dec
inc
mov
add
rcrb
cmpsl
movsl
ficomps
push
jb
fs
mov
add
mov
aad
sub
pop
adc
pop
mov
and
inc
leave
test
pop
lret
cli
into
add
cmpsb
mov
icebp
shr
jns
or
out
repz
in
sub
and
int3
push
mov
sbb
cmp
sub
cmp
pop
into
mov
dec
insb
adc
pop
repnz
dec
adc
sarl
leave
mov
outsb
xchg
xchg
push
mov
mov
sbb
ljmp
lcall
add
mov
lock
mov
mov
jmp
mov
or
dec
xor
cmp
lods
and
xor
cmp
iret
lods
in
cmp
mov
in
bound
fdivs
sbb
xchg
sub
popf
xchg
in
and
aas
or
outsb
sbb
out
sub
out
cld
mov
mov
or
mov
pop
and
scas
sbb
std
imull
xor
pop
mov
sub
add
dec
mov
jno
adc
nop
jecxz
jmp
inc
pop
fisubl
imul
aad
enter
jl
ds
jno
pop
enter
ljmp
shl
lea
rol
pop
in
ja
mov
and
add
mov
inc
mov
cmpsl
mov
insl
sub
cwtl
shll
in
mov
hlt
sub
lcall
sbb
scas
dec
xor
ja
adc
int
je
icebp
loop
sub
xor
mov
psubusb
in
xor
sbb
jns,pt
pop
xchg
add
es
sahf
cmpsb
cltd
iret
dec
aam
mov
dec
fidivrl
ficoml
outsb
sbb
add
and
fmull
adc
sub
xor
mov
sub
xchg
out
sub
jno
cmpsl
ds
dec
or
pop
in
dec
sbb
jmp
gs
out
adc
sbb
popa
test
mov
das
inc
push
and
or
and
pop
lea
sub
out
rorb
add
or
jmp
lret
pop
in
or
fldcw
sub
sub
push
mov
mov
mov
ljmp
cmpsl
mov
cmpsb
fdivl
sahf
movsb
lods
clc
jbe
iret
loopne
addb
popf
cld
xlat
push
lahf
cmp
sarb
push
loopne
push
and
xor
mov
lcall
cld
and
xchg
aas
pop
and
xor
or
jecxz
push
stc
push
cmp
mov
xchg
loop
inc
add
inc
popa
lcall
lret
pushf
pop
and
xor
inc
pop
xchg
push
dec
mov
fistl
subl
loope
cmp
pop
mov
and
addb
fabs
outsl
adc
lea
nop
je
inc
das
push
lahf
pop
test
mov
cmpsl
fdivrl
cld
xchg
data16
jmp
xchg
outsb
dec
into
cwtl
xor
imul
xchg
mov
xor
sbb
and
shlb
sti
dec
addr16
jo
mov
mov
jns
mov
xor
jno
mov
mov
dec
mov
sub
mov
lods
scas
orb
arpl
mov
pop
xchg
nop
cld
ret
aas
loop
les
inc
dec
push
sub
loope
or
mov
pop
inc
cmp
pop
bound
cmc
ror
add
gs
out
fdivrp
xchg
lock
lret
jno
mov
test
scas
inc
or
cmp
or
inc
je
aam
aaa
add
pushf
xor
enter
and
cmp
sbb
ficompl
cmpb
mov
jle
jns
subl
dec
adc
or
ss
push
shlb
push
das
adc
xchg
icebp
inc
dec
or
es
cltd
xbegin
cmp
es
aad
adcl
in
inc
dec
inc
out
loopne
pusha
pop
mov
ss
ds
int
mov
mov
mov
cmp
test
pop
cmc
stos
into
and
addr16
add
iret
mov
cli
dec
and
shlb
push
push
cmp
xor
rorb
clc
jg
fldenv
int
adc
cld
jle
mov
std
cmpsb
addb
adc
scas
pop
daa
add
push
shl
jp
jp
stc
int
sbbb
shlb
pop
data16
mov
push
xchg
mov
dec
test
ret
int
in
mov
mov
outsb
xor
nop
nop
jns
and
xor
dec
outsb
pop
pop
jne
pop
inc
pop
cwtl
pop
test
cmpsl
test
jge
fsincos
inc
jmp
inc
xchg
sub
ss
data16
pop
popa
cld
fisubrs
mov
mov
jae
repz
ja
pop
lcall
cmpsl
ret
loopne
div
shl
cld
sub
inc
sahf
shr
test
push
inc
dec
or
jb
and
mov
dec
fmull
iret
clc
stos
movsb
enter
std
js
enter
xchg
jecxz
cwtl
inc
mov
inc
push
adc
pushf
xchg
and
js
push
int3
dec
lcall
xor
mov
daa
and
arpl
rcrb
test
call
pop
mov
sub
ds
inc
pop
movsl
ror
and
data16
out
adc
bound
inc
jmp
or
mov
jne
dec
in
mov
jbe
in
mov
mov
je
fsts
lret
ja
mov
dec
int
jg
mov
test
fs
mov
out
adc
cs
mov
and
subb
lods
outsb
jmp
pop
sub
ds
loopne
ljmp
repnz
mov
loop
xor
xchg
shrb
push
insb
or
sbb
jg
pop
push
test
insb
pop
cmp
lods
and
pop
dec
pop
jp
fst
repz
aad
xor
pop
push
jb
das
mov
adc
mov
add
shrl
aas
add
jle
inc
push
pop
xor
fisttpl
sub
mov
ljmp
in
push
adc
mov
cmpb
fincstp
xchg
mov
imul
popa
in
mov
fisubl
add
mov
cli
rol
xor
xchg
shl
push
jecxz
call
pop
pop
stos
std
rcrb
bound
sbb
ljmp
sarl
jbe
daa
mov
push
stc
dec
rorb
out
and
scas
mov
push
lret
rolb
dec
les
hlt
in
ds
sbb
inc
xchg
jl
js
xchg
jb
mov
xchg
cmp
lea
adc
ret
rcrl
add
mov
push
lea
cld
jmp
fwait
bound
outsb
xchg
pop
hlt
push
cld
dec
sbb
in
lods
iret
je
scas
sbbb
cmp
xor
push
call
mov
mov
adc
sub
hlt
aam
mov
mov
xor
sub
ja
dec
aas
xor
daa
jle
dec
lods
cmp
fwait
sub
pop
inc
shll
roll
cmp
mov
loop
out
inc
inc
xor
addl
dec
dec
stos
lods
mov
add
cld
lcall
add
test
enter
fcmovnu
scas
lea
inc
imul
rclb
subb
imul
mov
loope
enter
aad
mov
mov
mov
sbb
sahf
jns
mov
rcr
jne
xor
fs
and
and
cld
lds
jo
ja
mov
lock
sub
add
jl
fldenv
adc
loopne
loope
jge
push
cmpsb
stc
fisttpll
jno
lret
lcall
mov
sahf
iret
cmp
sub
popa
jg
push
sbb
sbb
dec
fwait
loope
xor
sub
pop
les
inc
das
lcall
das
pusha
or
adc
imull
ja
lds
sub
mov
pop
sub
mov
imul
je
sbb
bound
lret
stos
ds
ljmp
in
jns
sbb
fbld
mov
mov
jl
mov
subl
xorb
mov
push
and
ljmp
insl
popf
stc
test
cmpb
sti
inc
mov
arpl
xor
pop
or
ds
stos
and
inc
dec
jecxz
js
aad
mov
cld
xchg
clts
shlb
push
inc
loop
out
jbe
adc
mov
push
mov
xor
js
pop
dec
inc
nop
cld
push
add
mov
mov
push
dec
and
and
push
in
mov
mov
mov
int
int
lahf
jl
inc
jl
mov
push
call
mull
mov
inc
mov
mov
cs
sbb
or
mov
fcompl
loope
pop
push
adc
icebp
xchg
jmp
in
cltd
inc
xchg
jbe
or
and
dec
stc
cmp
mov
and
push
mov
dec
jle
sbb
dec
xor
xor
imul
lret
inc
inc
jb
mov
and
ds
roll
mov
jae
mov
aas
int3
jnp
dec
cmp
sarl
mov
leave
add
adc
pop
je
sar
sti
push
sub
ds
jmp
mov
and
mov
add
outsb
pop
addr16
cmc
je
into
arpl
imul
dec
xor
xlat
bound
outsb
icebp
outsl
fildl
sbb
cltd
xchg
andl
pop
pusha
push
push
xchg
loope
aas
in
inc
psraw
adc
mov
ljmp
xchg
adc
fs
aad
andl
xlat
xor
cmpsb
sbb
in
push
dec
xchg
out
lea
xchg
dec
jae
sbb
out
dec
out
dec
std
testb
push
pop
int3
mov
jnp
mov
dec
jecxz
or
mov
pop
mov
cld
pop
lcall
std
xchg
jg
test
bound
dec
mov
lcall
cmc
scas
jnp
nop
jbe
ficomps
sub
mov
pop
leave
in
test
push
dec
ficompl
mov
jo
or
iret
rcr
mov
mov
popa
das
mov
mov
fcomps
sub
xor
xchg
pop
stos
in
sub
mov
push
pop
add
in
mov
addr16
or
into
add
ret
ret
and
mov
call
enter
aas
push
in
call
sbb
pushf
mov
push
in
and
adc
mov
xchg
outsl
add
mov
cmp
mov
push
jno
clc
stc
in
lahf
jns
sbb
mov
js
sbb
sbb
xchg
iret
mov
mov
les
es
inc
bound
bound
adc
jbe
pop
in
cmpsl
cmpsb
push
mov
jge
or
adc
outsl
fs
inc
push
cltd
mov
pop
mov
inc
adc
mov
mov
out
push
out
xchg
test
mov
and
aam
mov
aad
lds
cltd
movsb
mov
mov
loop
sub
mov
push
jo
or
dec
imul
pop
adc
pushf
sbb
repz
or
loop
mov
arpl
cmpsl
mov
mov
test
add
aad
and
pop
in
mov
add
mov
mov
xlat
mov
in
lcall
jp
ds
lods
fisubrs
cmp
or
mov
add
pop
pop
test
test
es
pop
adc
rcll
mov
mov
out
or
push
add
add
add
cmp
pop
jg
outsl
pop
fld
jl
mov
flds
jecxz
mov
dec
mov
inc
imulb
divb
push
out
pusha
dec
cwtl
inc
cwtl
cwtl
mov
fwait
mov
push
jmp
sub
lret
mov
push
push
sar
inc
dec
das
iret
dec
icebp
mov
loope
sbb
adc
pop
movb
dec
inc
xor
shlb
stos
mov
scas
xchg
sbb
dec
cmpsl
add
into
test
lods
insl
inc
js
stos
inc
inc
clc
loope
lods
das
out
adc
ret
xchg
inc
ds
mov
pop
add
bound
jmp
call
sub
scas
and
sbb
shl
cmpsb
nop
jne
jp
or
mov
pop
cld
out
inc
fmull
xchg
mov
ret
daa
out
hlt
das
in
push
addr16
add
cwtl
call
sbb
fisttps
xchg
sub
fsubr
push
dec
dec
jecxz
add
clc
cld
mov
mov
iret
cmp
and
outsl
decb
sub
pop
std
test
fstcw
add
xor
push
fimuls
or
shr
clc
mov
add
or
sbb
out
xor
fstp
fnstcw
xlat
fcomip
mov
push
cmp
mov
mov
lret
push
and
add
aas
mov
xor
pusha
test
mov
bound
jl
out
or
pop
ljmp
pushf
xor
xor
addr16
fimull
xor
in
movsb
bound
les
jb
rcl
sub
push
repz
pop
cmp
mov
aam
inc
test
shll
or
aam
fisubl
mov
outsl
cmp
jb
and
fs
push
mov
cmp
and
push
pop
int
cmpsb
aas
lret
xor
out
adc
cmpsb
push
push
add
lds
mov
outsb
icebp
sub
lods
adc
mov
pushf
frstor
test
xor
jno
sbb
cmovg
add
and
push
fdivs
insl
nop
cmpsb
notl
inc
pop
push
ret
mov
push
std
fdivl
push
mov
out
dec
push
and
lahf
add
pop
loopne
adc
cmp
imul
aaa
fs
outsl
mov
dec
pop
lea
mov
loope
repz
jae
arpl
outsl
pop
popf
pop
pop
scas
bound
pop
cmp
notb
call
inc
ja
lcall
mov
int3
imull
ja
jno
sti
mov
addl
sarl
pop
add
mov
cwtl
negl
add
xchg
jbe
fdivs
sbb
mov
lods
jecxz
cmp
cmp
and
and
cltd
lret
jmp
fisubs
jmp
loop
stos
xor
and
xchg
cmp
jno
out
lcall
ja
subl
ja
jno
lock
hlt
stos
mov
stos
mov
push
xor
and
outsb
jp
and
push
xchg
test
outsl
xchg
mov
sbbl
fcompl
push
addr16
popf
adc
fwait
and
lock
jae
mov
mov
lods
and
and
xorl
bound
jae
pop
in
ret
xlat
shlb
mov
pushf
sub
pushf
pop
mov
and
cld
leave
repnz
sbb
or
xchg
push
out
xorl
in
ljmp
add
mov
ds
sub
xor
cmp
je
iret
and
imul
adc
adc
mov
and
cmpsl
cli
dec
pop
into
sbb
shlb
pop
ret
push
adc
ja
pop
mov
pop
nop
or
insb
push
xorl
push
test
mov
jg
sub
arpl
cmpsb
jb
dec
mov
adc
out
into
mov
dec
lret
and
pop
xchg
sbb
mov
ljmp
dec
inc
push
dec
xchg
fs
push
into
cs
cmp
cld
fldt
shrb
add
sub
jge
cmp
jb
ss
mov
in
lds
nop
imul
imul
xor
mov
xchg
ficoms
cmp
adc
mov
mov
jecxz
xor
mov
dec
cmp
push
or
pop
lods
and
icebp
mov
dec
lcall
sbb
cmpsb
and
vpxor
ret
imul
ret
pushf
imul
pop
mov
scas
cmpsl
fwait
adc
fsubrs
roll
xchg
inc
mov
jns
mov
lret
mov
dec
dec
divl
dec
mov
sbb
dec
and
pushf
adc
cmp
pop
sbb
jb
ficoms
data16
pop
lret
mov
and
xchg
ror
pop
dec
sbb
aam
int3
dec
adc
pushf
add
push
adc
testb
addl
push
mov
or
and
in
or
pop
cmp
pandn
xor
std
mov
hlt
mov
sbb
fsub
push
cmp
rolb
rolb
in
mov
scas
sub
inc
mov
bound
inc
jge
adcb
loope
jne
inc
xor
arpl
cltd
lahf
cmp
or
mov
aad
mov
add
sbb
shll
xchg
inc
in
and
sub
mov
pushf
cmpsb
inc
pop
add
out
dec
enter
fcmove
push
mov
adc
cs
notl
xlat
fbld
packssdw
in
mov
adc
fmuls
push
or
cmp
push
dec
clc
pop
jns
fwait
pop
and
xor
outsb
pop
out
lds
out
xor
loopne
fstpt
or
je
movsb
imul
ret
pusha
or
push
clc
popl
out
pop
push
fs
mov
or
jle
jge
leave
insl
or
rcll
mov
adc
add
mov
and
push
sbb
test
in
adc
imull
push
repz
and
lods
mov
xor
push
outsl
push
mov
sbb
dec
pusha
push
adc
cmp
scas
leave
int
jl
int3
cmp
cs
fnsave
sbb
fldcw
shll
inc
out
sub
mov
add
test
negl
cmpsb
daa
pop
push
mov
lcall
clc
jle
ss
sub
arpl
shrl
stc
xorb
insl
jb
sbb
mov
outsl
lds
add
add
out
rclb
mov
mov
shll
dec
jae
inc
repz
mov
xor
les
in
pop
xchg
adc
xchg
mov
bound
push
cmp
lcall
sbb
xor
je
jl
mov
mov
inc
call
adc
fdivs
cmc
arpl
sub
adc
dec
mov
cld
out
jmp
pop
push
adc
jae
sbb
xchg
cmc
les
ficomps
pusha
fidivs
pushf
or
jmp
pop
dec
add
pop
add
pop
xor
cmp
pop
and
xor
mov
add
bound
cltd
test
xor
aad
ret
mov
xor
mov
imul
cli
mov
dec
xchg
jne
outsb
jle,pt
sti
gs
add
jb
movb
fsubrp
ja
cmp
inc
xor
pushl
push
pop
outsl
jg
cwtl
aad
mov
test
mov
inc
loope
bnd
hlt
mov
mov
mov
int3
jp
and
dec
daa
cmp
push
dec
cmp
cld
jbe
call
std
push
test
int
inc
ret
mov
mov
dec
push
sbb
dec
jno
mov
das
out
shll
out
cmp
sub
ja
sub
jle
fsubs
or
sbb
int3
xchg
incb
imul
jle
scas
es
mov
jb
push
push
dec
mov
add
aam
pop
test
lea
cld
ret
fistpl
movsb
dec
stos
ret
outsb
notl
adc
filds
cmc
fs
or
mov
call
and
mov
addr16
jmp
mov
leave
bnd
mov
outsl
leave
daa
cmp
dec
push
adc
test
sbb
dec
mov
das
std
and
mov
xor
loop
sbb
outsl
in
xor
inc
mov
addr16
mov
ds
sbb
movsb
movl
and
loop
loop
lock
movsl
inc
cmp
gs
add
adc
sbb
outsb
and
add
pushf
scas
pop
jg
lret
add
data16
aam
jb
sub
lret
movsb
sbb
and
push
jecxz
fidivs
xchg
pop
leave
jmp
bound
roll
ds
or
cld
pop
or
fmuls
sbb
imul
lcall
mov
cltd
inc
inc
pop
mov
add
out
jnp
mov
pop
lcall
out
ja
in
test
jae
mov
cmp
mov
mov
popf
ljmp
mov
sub
sbb
or
inc
mov
and
clc
inc
fsubs
andl
push
mov
sbb
fmull
mov
adcb
loopne
cld
les
lods
shlb
lcall
mov
sbb
sub
call
pop
or
cli
or
fwait
cmp
mov
jle
stos
inc
and
jle
lcall
call
addr16
mov
clc
jle
js
mov
lea
pop
subb
lea
adc
nop
adc
jns
mov
daa
and
or
mov
insb
mov
push
out
pop
scas
xor
and
dec
cmc
pop
adc
int
jmp
jle
xchg
push
mov
mov
pop
dec
cmc
or
add
sbb
pop
shlb
xor
mov
test
adc
sub
cvtdq2ps
fldenv
lods
adc
repnz
sub
ret
cmp
repz
pop
fsubrl
movsb
xorl
nop
mov
sub
adc
les
adc
push
cmpsb
mov
std
pop
icebp
loop
mov
mov
scas
lcall
and
jp
popa
xor
rcl
shlb
cmp
out
cmp
stc
mov
dec
outsb
jle
sahf
pop
popa
clc
mov
or
int3
cmp
cmp
mov
fbld
lahf
jo
movsb
lods
sub
std
loopne
or
mov
mov
add
ret
xchg
push
xchg
in
repnz
push
mov
jp
lret
and
sarb
add
out
sub
fsin
inc
pushf
subl
sbb
ficomps
pusha
dec
adc
sbb
jp
call
pop
les
jecxz
cmpsl
and
lahf
sti
loop
stos
mov
enter
rcll
mov
dec
jecxz
mov
stos
pop
xchg
inc
adc
std
xor
pop
add
filds
or
add
mov
bswap
fldenv
icebp
lahf
sbb
ret
nop
cmp
sub
pop
push
cld
clc
and
nop
pop
cmp
outsb
lcall
jbe
cmp
sahf
std
cwtl
mov
xor
inc
mov
add
jmp
idivl
cmpsb
popf
cld
pop
fisttpll
and
mov
mov
in
dec
stos
adc
push
out
aas
and
fcmovb
and
fistps
dec
or
push
sbb
push
out
and
aaa
or
sti
andb
loopne
in
int3
pop
jle
sahf
xchg
lock
sbb
test
les
and
jns
pop
push
mov
sar
loopne
xor
mov
mov
rcll
cmp
and
icebp
or
sbb
mov
into
mov
test
incl
dec
faddl
jge
icebp
aas
xchg
shll
cli
pop
sub
rcrb
and
push
insl
stos
ss
loop
fiaddl
in
insl
pop
sub
fisubs
xor
jne
out
mov
add
pandn
nop
sbb
and
push
adcl
lahf
and
pop
adc
in
push
sti
or
fldcw
cmp
sub
push
popa
repz
es
pop
mov
loopne
aam
mov
in
dec
int3
cmp
mov
lcall
xor
outsl
and
mov
mov
push
lcall
and
mov
stos
add
push
jbe
pop
and
xchg
lds
fmuls
js
push
sub
cmp
pop
ja
cmp
lcall
sub
enter
jl
mov
adc
cmp
jbe
pop
sub
sti
loop
mov
push
push
outsb
pop
push
call
nop
sub
ret
cmp
ja
add
les
insb
xor
popa
decl
ljmp
out
lret
out
xchg
pop
add
mov
pusha
push
bswap
stc
loop
cld
push
push
jbe
sbb
mov
sarb
aas
shrb
popf
arpl
xchg
jb
fldenv
add
insb
jp
int
fistpl
fldt
or
push
clc
shll
sub
pop
add
notb
out
xchg
jl
stos
mov
fbld
sbb
pop
lock
mov
lahf
adc
movb
lock
cwtl
push
xchg
xchg
lock
push
dec
aam
ret
mov
fisubs
pop
cli
add
popa
xchg
int3
and
divb
xchg
xlat
inc
adc
mov
push
aas
and
pop
stc
aam
imul
pusha
rolb
mov
cmpb
pop
xchg
movsl
dec
aad
jns
jnp
pop
dec
sti
repz
aad
repnz
xchg
pop
sub
sbb
pop
push
sub
jecxz
push
ja
mov
shr
ret
pushl
inc
test
rcrb
fstpl
clc
adc
xchg
add
fldt
mov
les
fstpt
xchg
mov
cmp
lret
xchg
int3
push
outsb
in
dec
pop
or
or
lret
xchg
mov
hlt
test
add
sub
mov
adc
cmp
dec
mov
std
daa
mov
inc
cmp
xor
testl
adc
das
dec
shll
clc
daa
in
jno
stos
in
pop
mov
jae
xchg
mov
mov
daa
test
jecxz
repz
jge
jmp
sbb
loopne
adc
iret
dec
sbb
cwtl
mov
f2xm1
addr16
or
fildll
xchg
daa
mov
pushf
adc
dec
stc
mov
add
lret
fwait
das
enter
mov
js
pop
ret
sub
or
loope
xchg
sbb
push
clc
and
pop
das
cmp
imul
cmp
addl
xchg
pop
lock
inc
out
push
fildl
add
jae
add
scas
jl
call
ret
ljmp
sbb
popf
popa
dec
or
xor
and
sbb
mov
mov
xchg
in
jmp
test
pop
sub
mov
jae
jb
in
lock
pextrw
sbb
jl
push
lods
lret
bound
xchg
rcll
mov
inc
pop
jl
xor
ds
sbb
rcrb
sbb
in
je
adc
jb
inc
out
shr
leave
jb
lret
pop
cwtl
mov
sub
push
ja
dec
xor
rcll
bound
stos
repz
mov
cld
sbbl
loop
jno
cmp
mov
lea
in
cltd
cmp
stc
cld
sbb
stos
pop
mov
lock
xor
adc
into
jle
pusha
out
or
fnstenv
add
push
pop
pop
or
stos
or
mov
or
bound
cmp
mov
and
xor
ljmp
sarl
repz
push
in
inc
lcall
xor
push
xchg
xor
inc
sbb
jo
insb
pop
mov
or
mov
lds
scas
jns
enter
into
cltd
cmpsl
sbb
sub
ds
mov
adc
inc
or
hlt
adc
jl
jp
cmp
jp
cs
loope
pop
fldcw
ja
and
sbb
popf
xor
pop
in
rcrl
sub
inc
cs
inc
push
scas
adc
push
into
mov
sbb
test
ds
outsb
push
push
sub
lret
inc
mov
repnz
sarb
aam
lods
out
xor
in
jae
push
mov
and
xor
in
hlt
cmp
roll
jp
mov
loope
inc
lret
into
sarl
ds
cmp
jmp
mov
iret
and
and
adc
adc
je
mov
xchg
loop
call
or
xchg
inc
xor
mov
addb
mov
sub
out
inc
jp
adc
push
add
into
rcr
sarl
cld
adc
aaa
push
sub
inc
xchg
dec
ljmp
jbe
aad
mov
mov
hlt
jbe
or
sahf
fwait
std
mov
icebp
mov
sub
je
es
push
call
sti
jno
jl
or
out
mov
cld
push
pop
out
mov
in
lds
mov
stos
inc
push
out
subb
mov
dec
or
fucomp
inc
mov
test
std
cmp
sub
sti
pop
imul
jp
add
out
jbe
shll
dec
jne
xchg
hlt
push
jle
mov
rcll
in
repnz
scas
xor
inc
fmull
inc
mov
fcoml
xchg
outsl
mov
adc
or
push
dec
test
insb
fdivl
pop
les
fstp
daa
insb
fildl
mov
sahf
mov
jp
daa
insb
jbe
popa
xchg
xchg
ljmp
mov
ss
cld
rorb
mov
mov
iret
push
inc
sbb
sub
arpl
cmp
js
shrb
popf
push
pop
shlb
je
xchg
push
lcall
test
clc
stos
add
stos
cwtl
mov
jbe
and
jmp
add
insb
xor
es
arpl
dec
push
inc
jbe
cltd
lea
push
movsl
push
test
addb
jg
lret
in
adc
std
xlat
in
addr16
ficoml
fildl
xor
jecxz
lods
sti
pop
repnz
pushf
jmp
out
outsl
push
jecxz
push
mov
adc
movl
outsb
outsb
push
and
inc
sbb
out
out
call
pop
cmp
adc
add
data16
mov
sti
cwtl
mov
adc
or
mov
sbb
int3
es
pop
invd
mov
jp
repz
gs
pushf
idiv
push
aam
daa
push
jno
add
hlt
loop
sub
ljmp
mov
repnz
shl
jae
jge
cmc
pop
lock
frstpm(287
mov
mov
inc
jb
cmp
mov
orb
fistpll
clc
push
cmc
push
stos
out
and
rcll
loope
lahf
imul
add
cli
repz
sbb
inc
jp
xor
pop
sub
and
in
jle
movsb
inc
insl
loop
or
cmp
scas
cli
push
adc
cltd
insl
and
in
cmp
cld
xchg
cmp
arpl
mov
jb
add
mov
inc
sub
rorb
pop
mov
jge
dec
pop
xchg
inc
mov
mov
or
js
mov
xor
aas
pop
call
mov
jns
fdivrl
rolb
nopl
sub
jge
rcl
mov
jae
push
pusha
mov
push
pop
cmp
pop
stos
test
pop
lret
xchg
jle
add
push
xor
dec
cmp
outsb
inc
sbb
push
orl
sub
daa
repz
mov
add
cli
jbe
lcall
jle
repz
incb
xor
cmp
push
loop
out
int3
cmp
out
cld
xor
dec
cltd
jns
jecxz
fiadds
insb
test
and
gs
mov
and
lahf
inc
je
test
pop
fmul
xor
movsb
pusha
loop
sbb
data16
push
repnz
or
shlb
sub
pop
fwait
add
icebp
mov
scas
lret
mov
xchg
add
inc
mov
aaa
arpl
data16
cld
jle
les
pop
pop
shrb
insl
xor
jle
inc
mov
das
test
and
addr16
ss
mov
jo
xchg
sbb
pop
mov
imul
sbb
cld
jbe
cmc
das
ret
push
inc
fwait
inc
push
xor
lahf
pop
out
jnp
rorb
mov
sub
fimull
jle
sbb
int3
jp
or
data16
repnz
push
outsb
lods
jae
sbb
add
xlat
aaa
add
and
add
mov
jecxz
jp
xchg
mov
pop
sub
icebp
incb
int
notl
dec
adc
add
push
out
std
jb
inc
enter
int3
mov
mov
mov
in
mov
sahf
cmp
cmp
push
mov
cwtl
xchg
inc
adc
in
mov
jo
adc
mov
aam
dec
js
push
jge
pop
dec
mov
shlb
or
xchg
add
inc
jp
aas
mov
mov
mov
jns
adc
or
lcall
cmp
xorl
adc
add
jge
in
sti
ret
xor
inc
ja
and
adc
repz
xchg
xchg
insb
gs
xchg
sub
imul
out
gs
adc
push
nop
lds
jo
and
push
pop
sti
stos
mov
das
inc
dec
jns
jno
mov
sti
je
jmp
add
xor
xor
in
jg
cmp
jo
adc
mov
pop
in
sarb
test
push
shll
pop
ret
mov
repz
push
mov
pop
ljmp
fnstcw
or
fisttpll
mov
or
fiadds
mov
test
push
pop
je
mov
ret
mov
mov
adc
and
mov
add
dec
xor
cmp
mov
jno
filds
andl
cmp
xchg
aas
sbbb
mov
shrl
push
sbb
jle
sbb
xor
sub
lods
sbb
divb
mov
mov
xchg
cmpl
mov
loop
repnz
outsl
js
test
sub
pop
fisubl
jge
mov
mov
adc
outsl
cmp
rcrb
jno
in
mov
fsub
out
pop
mov
shll
cli
addr16
test
and
mov
fsubrl
loopne
cmp
int
std
jno
call
jae
mov
sub
add
fs
and
daa
int3
jp
cmp
dec
lcall
jo
andl
int
mov
mov
and
int
pop
and
daa
sbb
jno
sbb
repnz
push
ja
out
cmp
xchg
or
int3
push
sbbb
cmp
pushf
pop
inc
mov
dec
xchg
xor
aam
jne
cmp
aaa
ret
mov
inc
rcrl
aas
add
fidivl
jle
test
cwtl
dec
jne
rcrl
lret
cmp
add
lods
daa
inc
adc
movsb
loope
pop
inc
cmp
test
fisubrs
leave
ret
push
popa
ja
cmp
xchg
add
sarl
mov
xchg
sbb
dec
sub
imul
cmpsl
sub
testb
repnz
sbb
sbb
rcll
cmp
sbb
ret
ds
pop
inc
ficoms
popf
sub
data16
nop
cmp
mov
push
cmpsl
out
pushf
xchg
pop
adcl
push
adc
andb
lea
add
push
sbb
pop
sbb
and
mov
out
inc
cwtl
or
cmp
mov
negb
addr16
pop
loopne
cld
fisttpll
sub
jns
jbe
mov
add
add
xchg
aaa
std
pop
pusha
test
xchg
and
cmpsb
jmp
sti
into
sahf
jle
aas
outsb
sub
cs
lret
pop
adc
adc
jb
mov
push
adc
enter
xchg
jmp
add
mov
mov
jmp
test
outsl
jg
loop
jge
inc
enter
adc
pop
or
out
jo
mov
cmp
sarl
stos
push
cmpb
insl
js
pop
out
lea
insb
shll
movsb
dec
add
push
pop
mov
adc
mov
out
insb
in
data16
or
movsb
dec
outsb
les
cwtl
push
dec
ja
cwtl
mov
mov
out
in
lods
hlt
adc
pop
sbb
xchg
jne
xchg
clc
sub
enter
inc
out
adc
jo
shlb
xchg
pop
popa
xor
push
push
loopne
push
aam
gs
jo
ja
jl
lret
lds
fdivl
std
fdivrl
pop
mov
add
xchg
pop
jge
push
xchg
cmpsw
sbb
mov
inc
leave
sbb
xor
arpl
sub
xchg
jne,pt
mov
loop
loopne
sbb
pop
inc
push
popf
loopne
enter
lock
push
mov
loope,pn
pop
and
mov
ret
pop
inc
outsl
xchg
add
lcall
movsl
loope
frstor
pusha
lret
xchg
and
cmpsl
repz
in
sub
push
push
jnp
add
jnp
pushf
mov
lods
push
xor
cmpsb
roll
icebp
cltd
and
xchg
sub
fwait
lcall
jl
sbb
jmp
and
fcoms
adc
xchg
ljmp
aad
jo
push
bound
data16
mov
adc
fs
jmp
xchg
xchg
add
sub
xlat
cmpsb
add
cs
ja
mov
lcall
xor
jecxz
add
cltd
leave
lret
sub
jnp
call
add
adc
lds
insb
test
out
mov
lods
push
outsb
fisubs
sbb
outsb
cmc
mov
sarl
push
mov
vrsqrtss
mov
mov
mov
sbb
and
and
jmp
sub
mov
out
js
mov
xchg
loop
sbbb
lods
cld
mov
sahf
es
pop
fcmovne
push
jns
mov
loope
lahf
xor
cmp
in
jmp
leave
mov
cmc
jmp
add
call
outsb
pop
insb
xchg
sti
sub
xor
rorb
pop
mov
fistps
sbb
imul
aaa
sbb
jle
adc
imul
pusha
add
movsb
out
clc
pop
jbe
in
mov
sub
xor
xlat
fists
cs
lret
out
or
aaa
aad
repz
adc
jo
imul
jecxz
lods
xorl
adc
int3
push
cmp
shlb
xchg
pop
dec
or
pop
add
mov
std
mov
cmp
cmp
rclb
add
or
push
scas
cmp
pop
jb
add
sbb
jle
or
add
cld
mov
push
mov
leave
clc
mov
daa
pop
or
pop
add
pop
pop
xchg
int3
test
lret
dec
lret
into
xchg
push
jne
out
lret
pop
add
xor
inc
lcall
mov
inc
addr16
dec
fcoms
in
xchg
shll
leave
cmp
jae
lods
pop
test
cmp
mov
cmp
adc
push
or
push
icebp
inc
scas
loopne
add
jo
fsubrl
sbb
ud1
pop
clc
xchg
mov
jp
push
dec
push
loopne
cmp
jbe
movsb
test
jne
enter
insl
fnstenv
mov
push
xchg
or
pusha
sub
sarl
in
mov
jno
lcall
jbe
sbb
cltd
and
shll
jg
rclb
mov
cmpsl
movsl
in
push
inc
fmuls
insb
inc
xchg
aad
in
psubusb
adc
insl
lahf
fisubl
pop
ds
in
xchg
pop
mov
and
cmp
fiadds
rcrl
popf
testl
xor
jb
sbb
cmp
jecxz
in
xchg
sahf
sbb
enter
fs
les
lahf
roll
aam
mov
fs
xchg
frstor
add
xchg
inc
jns
rdtsc
and
cltd
mov
bnd
xchg
ds
lahf
and
fisttpl
loop
push
push
bound
rolb
sbb
dec
sbb
out
mov
jo
iret
mov
adc
jns
les
in
mov
out
cmp
loope
fldt
ds
jae
push
bound
sub
cmovl
fidivs
jnp
mov
dec
cwtl
cmp
testl
sahf
cmpsb
ds
add
sbb
xchg
je
jb
arpl
popa
mov
jnp
xchg
xchg
divl
lret
cmp
fidivrs
aam
pop
aas
xor
mov
movsb
cmc
xchg
mov
and
add
jecxz
out
pop
cmp
or
dec
pop
into
popf
imulb
mov
cmp
mov
xchg
adc
xchg
std
bound
aas
pop
adc
ret
sub
test
ds
jecxz
ss
push
sbb
add
cltd
push
sub
push
bound
sahf
mov
xchg
and
xor
xor
add
dec
cmp
or
xor
mov
pop
jge
int3
out
cmpsl
adc
sub
dec
cmp
mov
adc
pop
outsl
xchg
ror
test
fidivl
jne
cmpl
stos
inc
adc
aam
dec
jmp
pushf
xlat
mov
mov
cmp
out
loopne
insb
add
adc
push
movsb
sub
idivl
adc
adc
cmp
out
dec
sbb
test
pop
jge
push
into
cmp
pushf
pop
push
pop
scas
test
repz
in
xchg
sbb
xor
test
add
sbb
jne
loop
not
test
mov
mov
das
pop
dec
add
dec
mov
ret
cwtl
cmc
outsl
xlat
push
or
sbb
fstps
mov
mov
test
adc
xorl
pop
test
inc
iret
cmp
jmp
and
add
mov
xchg
push
jmp
cmpsb
test
sbb
daa
lock
sub
inc
jns
rclb
test
out
pushf
fisttpll
les
in
imul
loop
dec
mov
mov
stos
loopne
or
fisubrs
cmpsl
and
dec
cmc
cmpsb
jb
sub
rorb
leave
jle
aam
and
jo
mov
pop
xchg
inc
push
jp
sub
sub
pop
cmpsl
mov
je
mov
and
jp
imul
inc
mov
jmp
mov
mov
stc
jp
aaa
pop
fwait
loope
mov
out
sbb
xchg
and
and
test
add
gs
stos
push
notb
push
or
push
and
movsb
sub
cmc
sbb
fmuls
je
in
mov
mov
test
add
jns
jb
jb
jle
jb
and
xchg
jecxz
fdivs
push
hlt
xchg
lds
mov
add
ret
sbb
testb
faddl
fsubl
add
adc
jb
and
add
cmp
pushf
and
pop
clc
push
andl
fsubl
inc
adc
jo
std
xchg
ljmp
mov
jp
pop
mov
jno
std
xor
lds
sbb
subl
cli
jo
out
mov
js
leave
xor
mov
jb
and
jmp
mov
mov
loop
pop
jge
andl
push
cmp
mov
std
in
and
pop
stos
add
inc
push
xor
inc
sub
into
ret
rorl
mov
mov
in
mov
insb
aas
and
push
repz
push
push
jp
mov
jg
inc
cmpsl
add
iret
add
jmp
pusha
mov
dec
inc
pop
mov
mov
ljmp
movl
rorl
pop
aam
xchg
adc
adc
testb
rcrl
scas
test
inc
xlat
pushf
push
pop
sub
xlat
cltd
dec
stc
lret
xchg
xor
push
addl
leave
cld
xchg
mov
out
xor
fs
sub
iret
je
cmp
sbb
jge
xor
lock
xchg
lahf
gs
in
cwtl
cli
aaa
cmc
xchg
pop
inc
inc
or
pop
iret
xchg
loopne
cld
int
jg
fidivrs
notl
aad
sub
cld
mov
push
insl
mov
pop
dec
pop
jg
fucomip
sti
add
xchg
push
loopne
int3
cmp
fists
or
cmp
lock
xchg
mov
ror
adc
sub
cmp
add
cwtl
and
subb
jno
fistps
rcrb
push
mov
mov
jno
ja
daa
xor
push
das
out
xchg
test
sbbb
jb
inc
or
insb
mov
or
inc
sbb
cmp
mov
mov
loope
loop
das
pop
sub
jbe
in
pop
fidivrs
xor
out
lcall
jecxz
xchg
addb
pop
xor
shlb
dec
ljmp
stc
mov
in
mov
and
push
pop
cs
movsb
lret
sbb
jae
mov
jl
ja
in
adc
jmp
bound
imul
hlt
cli
cmp
rclb
pushf
xchg
or
js
cld
mov
out
in
bound
popa
les
mov
pop
jle
jae
rol
xor
test
cmp
mov
mov
loop
xchg
pop
lret
sahf
js
push
cmp
fimull
sub
mov
pop
fsubs
cmpsl
das
inc
push
enter
dec
cmp
adc
cmp
pusha
sbb
shlb
enter
loopw
in
outsb
pop
popa
cld
loop
clc
xchg
sti
outsb
ret
adc
mov
mov
aas
and
sbb
xchg
xlat
rcrb
jle
cmp
xor
sbb
fldcw
int
mov
pop
rclb
and
enter
divb
negl
cmc
popa
test
clc
shrb
shlb
leave
das
sbb
sbb
nop
ud2
orb
adc
clc
ficoml
sbb
and
movsb
pushf
dec
stc
dec
iret
inc
rorl
popa
cmp
xchg
dec
adc
mov
dec
cmp
inc
scas
jae
adc
mov
in
decl
popf
ret
stos
sub
mov
jle
popf
js
ss
lcall
jl
mov
add
lock
test
fwait
jp
sbb
ret
out
add
popa
xor
adc
gs
fdivs
outsl
stos
mov
sbb
stos
push
adc
or
imul
jne
mov
loope
sbb
ds
movsb
add
lcall
cmpsl
lahf
jp
dec
dec
bound
rorb
cmp
insl
push
cmp
sbb
repnz
or
push
lock
and
ret
es
int3
in
addl
jmp
insl
jecxz
xchg
jo
add
in
adc
pop
sbb
jl
push
dec
test
frstor
xor
mov
in
popf
xor
xlat
jne
or
fmul
loop,pn
mov
sub
rcrb
int3
push
and
stc
lret
lcall
scas
nop
mov
iret
xchg
lahf
clts
lea
cmp
mov
jb
push
out
inc
scas
jb
and
push
les
mov
mov
dec
xchg
xor
dec
call
push
push
sbb
je
push
stos
inc
sub
dec
rolb
mov
repnz
test
test
dec
mov
xor
push
out
fucomi
loopne,pt
pop
mov
push
bound
sbb
adc
fs
pop
out
jno
imull
xor
mov
pop
jnp
test
js
cltd
ljmp
mov
faddl
dec
into
and
and
cmp
or
shll
sbb
cmp
add
cmp
mov
sti
mov
mov
xlat
pop
movsl
push
mov
dec
pop
test
popf
and
stos
repnz
sarb
scas
add
mov
inc
xor
out
mov
xchg
jbe
push
movsb
sbb
insl
sub
imul
fistpll
call
inc
cmp
mov
add
fbstp
popa
fistpll
loop
pop
jne
push
mov
mov
fdivrl
data16
lock
sub
xor
xchg
cmpsl
adc
jne
mov
or
arpl
rclb
xchg
aad
std
mov
sub
push
mov
mov
or
xchg
push
mov
sub
popf
xchg
imul
push
lods
in
push
jmp
push
out
and
dec
push
imulb
lret
sub
lock
mov
push
push
pop
sbb
xor
test
daa
shrb
scas
dec
les
fidivrs
and
loopne
sti
movsl
and
test
inc
and
rclb
inc
lret
jb
ret
jnp
arpl
pop
movb
add
aaa
shrb
push
mov
add
mov
fidivrs
and
daa
mov
xor
pop
inc
mov
push
cmp
add
cmp
and
mov
std
out
push
dec
push
les
dec
jns
lahf
dec
jmp
mov
cmpsb
xor
sub
sub
mov
ret
or
xchg
mov
push
cmp
or
daa
pop
jg
das
repz
shlb
movsb
leave
call
int3
jle
sub
fisttpl
mov
xchg
push
into
or
dec
add
jbe
mov
in
mov
mov
jge
mov
lret
dec
test
and
fcompp
mov
pop
rcrb
and
sar
mov
adc
or
dec
pop
cmp
sti
mov
jae
stos
dec
gs
movsl
push
sbb
adc
ret
mov
lahf
jecxz
sbbl
lcall
les
sbbb
sbbb
dec
aam
int
push
cmp
test
in
aas
mov
pop
cmp
sub
push
aaa
push
xchg
or
add
xchg
and
outsl
fidivrs
pop
jo
jmp
push
adc
incl
mov
out
jo
dec
jecxz
faddl
int
loopne
sbb
cmp
xlat
clc
test
dec
movsl
loopne
push
mov
fstl
mov
or
loope
or
in
lds
inc
dec
test
dec
call
es
pushf
stc
mov
rcrl
imull
movsl
icebp
incl
dec
xor
xchg
mov
sub
aaa
movsb
ljmp
or
fstps
in
mov
sahf
fldcw
in
inc
ret
lret
and
add
mov
mov
xor
xor
lret
pop
sub
das
lds
bound
shlb
lcall
popf
sbb
iret
andl
rorb
ljmp
cmpsb
xchg
and
andb
insl
lock
sub
push
sub
add
gs
fmul
mov
jge
dec
pop
sbb
bswap
dec
or
push
push
gs
stos
shll
jo
test
mov
and
xor
sti
push
out
int
and
test
pop
mov
xor
cltd
add
cld
jb
pop
arpl
dec
std
shr
jns
mov
loope
and
and
aaa
ret
pusha
push
test
or
adc
dec
add
inc
arpl
scas
xchg
cmp
rorl
pop
sbbb
sub
sub
stos
xor
call
addr16
sub
mov
aam
dec
gs
negl
in
pop
inc
sbb
pop
or
lcall
mov
test
pusha
imull
jle
vaddsubps
sarl
fdivr
pop
fmuls
int3
sbb
clc
push
mov
fnstenv
add
inc
cmc
add
add
shlb
mov
and
lahf
cmp
cmp
pop
add
inc
jmp
jns
or
push
dec
in
lods
icebp
pop
xchg
add
ucomiss
push
notb
cmp
or
cmp
xchg
idivb
jl
mov
mov
lret
lds
dec
imul
mov
loope
sub
mov
sub
movsb
adc
test
dec
add
mov
mov
sbb
dec
out
add
dec
das
pushf
jno
orl
add
call
xor
cmc
pop
dec
push
and
cmp
push
jmp
xchg
xchg
xchg
mov
mov
daa
iret
inc
add
loopne
roll
jno
and
fiaddl
aaa
mov
aaa
int
fcoms
lret
repnz
mov
cmpsl
rol
jns
pop
sbb
std
repz
pop
xor
and
icebp
sub
jb
lcall
outsb
sbbl
je
nop
in
insl
shlb
out
out
or
sub
and
or
shrb
sub
jo
push
sarb
xchg
mov
push
ret
mov
test
xchg
mov
testl
imul
xchg
dec
xorl
push
pop
mov
pop
ret
lods
add
lret
ds
mov
cmp
mov
adc
lret
pop
mov
pop
cld
and
adc
sahf
cmp
shlb
adc
pusha
in
stc
test
pop
adc
aas
mov
cmpsl
in
pop
call
fiadds
daa
sub
enter
xchg
movsl
lret
or
or
or
cmp
cmpsl
test
test
adc
dec
mov
fsubrl
loopne
pop
lods
mov
jnp
sub
or
mov
fs
pop
loop
loopne
xor
push
xchg
adc
xchg
sub
fld
xor
scas
add
inc
jnp
loop
mov
rcr
mov
lods
adc
cmp
data16
jge
out
repz
cli
mov
daa
ljmp
sar
addl
mov
addl
in
sbb
jns
mov
loope
push
insl
ljmp
in
xchg
inc
sbb
dec
test
out
and
int
rolb
pop
das
repnz
mov
dec
adcl
lcall
adc
imul
in
fdivp
mov
xlat
test
fbstp
cltd
xchg
push
int3
into
lods
mov
hlt
mov
push
pop
dec
out
fisubrl
sbb
ret
mov
test
decl
ljmp
mov
es
mov
or
out
out
cwtl
add
jae
inc
arpl
mov
das
lcall
inc
in
and
xor
mov
xchg
mov
sub
jnp
aad
clc
stc
mov
mov
lahf
popa
inc
repnz
jl
push
and
pop
sub
sbb
mov
or
mov
dec
jmp
shlb
jg
popf
and
loop
ds
cmp
pop
xchg
scas
and
mov
cs
mov
dec
in
mov
cltd
xchg
inc
aas
ja
fcoml
inc
int
lods
sbb
add
daa
and
mov
in
cmp
cmp
hlt
insl
pop
and
mov
fadd
sub
in
adc
xor
lret
sbb
imul
imul
fsubrl
in
mov
add
sub
mov
mov
aaa
and
gs
ds
pop
dec
stos
out
push
mov
dec
ret
pop
rorb
rcr
in
or
pushf
roll
or
pushf
ffreep
mov
adc
hlt
pop
ljmp
xor
push
adc
mov
adc
nop
jno
ss
addr16
test
xchg
mov
or
outsb
in
sbb
in
xor
pop
add
inc
mov
ret
lods
add
fiadds
int3
xchg
xlat
dec
fistpl
mov
inc
jnp
add
or
les
cli
pop
out
mov
xor
mov
push
xchg
mov
pop
jae
inc
xchg
sbb
adc
lcall
movsl
mov
xor
dec
mov
shlb
mov
adc
xchg
adc
push
shrb
test
outsl
xor
div
and
mov
aam
lret
sbb
sub
add
sbb
sbbl
ljmp
out
ret
cld
test
mov
pop
mov
push
hlt
xor
add
fs
push
cvtdq2ps
lahf
and
hlt
fstpt
cli
addr16
insl
in
xor
jp
hlt
int3
lahf
sti
sub
cwtl
cltd
lahf
dec
adc
jo
mov
sahf
sbb
into
lret
dec
sahf
mov
decb
scas
in
xor
orl
and
repz
test
repnz
mov
pusha
and
sub
or
add
mov
addr16
mov
pop
inc
les
imul
andl
inc
sub
xchg
xchg
jecxz
mov
test
stc
xlat
jle
mov
jnp
ja
push
sbb
filds
sub
imul
mov
or
loopne
fisttpl
mov
inc
jb
or
jmp
aam
add
xchg
flds
push
adc
or
aaa
shll
mov
jno
sub
jb
std
pushf
push
push
sbb
fidivrl
jecxz
sbb
xor
xchg
or
pushf
addr16
pop
pop
fbstp
lods
push
pop
add
rorb
and
xchg
xchg
xor
add
push
push
sub
insb
jbe
adc
mov
dec
sti
leave
sbb
push
mov
daa
in
sub
mov
clc
cmc
add
inc
ds
ret
adc
adc
push
popa
cmpl
call
and
and
lcall
ficomps
cmp
and
lret
sub
cmp
sahf
rorb
lret
mov
test
dec
or
bound
mov
mov
pop
mov
or
cmpsl
sub
pop
jecxz
sbb
in
pop
je
sbb
iret
je
jl
push
mov
mov
jb
xlat
sti
pop
in
mov
pop
ds
addr16
add
pop
adc
test
bound
mov
pop
mov
je
mov
cli
push
push
orl
icebp
push
paddusb
into
adc
insl
dec
insb
mov
xor
dec
iret
fdivrl
clc
mov
cmpsb
cmp
sub
cmp
and
rep
and
out
xchg
jns
or
xor
sbb
and
pop
jle
xor
xor
or
test
xchg
mov
inc
clc
ret
cwtl
stc
addr16
jecxz
mov
dec
xor
xchg
cld
loop
std
mov
rorb
sub
pop
jmp
cmp
xlat
inc
cmp
mov
out
adc
stc
add
int3
push
test
mov
js
jne
in
cmc
inc
sbb
adc
inc
cli
in
pop
inc
pop
jne
adc
out
xchg
sbb
mov
aas
ja
or
adc
inc
inc
mov
mov
rcl
mov
jg
mov
subl
cltd
out
aaa
loope
arpl
jb
mov
mov
ds
rclb
inc
in
xor
xor
xchg
or
mov
cmpsl
test
imul
cmp
das
mov
sar
mov
aam
and
test
adc
jbe
das
into
or
inc
fwait
ret
push
xorl
cmp
push
lret
loope
add
push
stos
sbb
mov
arpl
enter
jbe
mov
dec
adc
shrb
and
lea
fisubs
popa
xor
mov
outsb
mov
and
lea
scas
incl
shlb
mov
cli
fsts
lds
fsubp
orl
jbe
movlhps
mull
int3
imul
pop
in
mov
adc
aam
mov
mov
shlb
add
hlt
pop
clts
xor
repnz
lret
xchg
jmp
imul
scas
xchg
pop
xchg
lret
popa
push
add
jp
add
out
push
aad
imul
out
cld
ret
dec
inc
lret
dec
push
rorb
mov
jmp
jno
sbb
cmp
in
mov
push
mov
mov
ljmp
and
shll
outsb
mov
ss
adc
mov
mov
into
ret
pop
mov
imul
inc
fnstcw
inc
push
mov
pop
xor
push
les
dec
mov
stos
dec
cmp
mov
inc
cmpsl
scas
mov
pop
mov
dec
pop
add
aaa
cmp
adc
mov
add
push
data16
cmp
xchg
mov
fldenv
or
mov
jecxz
pop
into
xor
lods
pop
stc
xor
imul
scas
sub
mov
aas
xorb
clc
push
je
fildll
sub
jnp
sub
jmp
xor
xor
inc
cs
aam
jge
push
jno
out
pop
aad
jo
cmpsb
pop
ljmp
sbb
and
arpl
aas
lret
addr16
jnp
in
add
inc
adc
insb
popf
mov
push
outsb
sub
jg
rol
in
xor
stos
and
dec
stc
sti
dec
dec
fdivrs
push
mov
pop
add
xor
imul
mov
in
mov
int3
mov
add
mov
je
shrl
push
sub
xor
jbe
mov
push
push
and
jle
fildll
mov
ret
push
fidivl
out
cwtl
xor
cmp
icebp
mov
in
jnp
mov
cmp
mov
xchg
adc
push
adc
or
lock
stos
cli
push
cmp
pop
add
xor
and
lcall
test
xchg
mov
fdivl
fstpt
into
add
cmpsb
imull
or
adc
fisubs
add
xor
pop
or
rcl
int
imul
jb
fwait
mov
rcl
out
in
dec
sbb
imul
inc
sbbb
or
insb
lcall
lcall
and
mov
mov
into
in
cmpsl
pop
gs
fdiv
std
pop
gs
xchg
add
xchg
jmp
fnop
jnp
pop
and
mov
lock
mov
lret
test
pop
lods
pop
mov
add
nop
aad
sub
dec
fcomps
push
testl
sti
cli
xor
js
negb
fucomip
mov
mov
cmp
or
les
das
cmp
dec
mov
clc
rcr
push
out
sbb
dec
int3
mov
xchg
clc
or
popa
shl
and
jle
or
push
xor
mov
mov
outsw
push
and
add
fwait
jg
test
aas
mov
xchg
dec
pop
into
ret
xchg
in
xchg
repnz
mov
jle
fwait
dec
pop
sti
aaa
lcall
sbb
dec
xchg
dec
dec
hlt
jae
sub
data16
aam
iret
lret
adc
enter
xor
xor
out
pop
pop
adc
mov
sbbl
sahf
jbe
adc
jmp
loopne
jne
mov
jge
adc
push
aam
xchg
mov
xor
push
xchg
mov
scas
sarb
mov
enter
pusha
shr
xor
xchg
mov
shrb
mov
inc
rcrb
inc
shl
pop
cwtl
outsl
jae
popf
popa
add
dec
rcll
pop
pop
aas
movb
into
iret
cmc
fdivr
popf
dec
dec
mov
stc
sbb
mov
cwtl
imul
outsl
repnz
pop
adc
lcall
push
shll
xchg
stos
add
imul
push
out
push
adcl
xlat
adc
adcl
fidivs
lret
mov
sbb
std
adc
jmp
xchg
imul
outsl
pop
mov
insl
gs
mov
std
aaa
es
fistpll
and
add
mov
xchg
mov
pusha
movsb
ffreep
cld
add
adc
data16
inc
repnz
fisubrl
xchg
add
pop
mov
test
xchg
jnp
sub
cmp
mov
mov
dec
mov
and
cmp
sbb
add
movsl
leave
and
mov
jmp
mov
mov
js
mov
adc
push
fs
xor
scas
jg
mov
dec
xchg
jge
fidivrl
adc
pop
imul
mov
or
fiadds
add
jl
cmc
cmp
dec
in
xor
pop
pop
adc
pop
add
sbb
nop
push
das
inc
add
cmp
lods
loopne
push
in
jg
lods
jbe
shll
arpl
jno
fistpll
rcll
add
int
mov
jge
shll
mov
sub
in
cld
mov
cltd
adc
jmp
outsb
pop
out
cmp
loope
push
lcall
pop
cltd
sub
test
out
imul
sub
mov
cmp
mov
dec
nop
mov
idiv
mov
ds
xchg
in
sub
or
shrl
xchg
outsb
cmp
loope
fcom
push
flds
cmp
jecxz
fsub
and
hlt
repnz
ret
in
imul
test
lahf
push
and
pop
aaa
or
dec
out
mov
in
mov
ret
inc
inc
cs
cld
ljmp
das
jo
and
cltd
jp
or
ljmp
push
jg
mov
xor
test
shll
inc
jmp
aaa
pop
mov
out
sti
sbb
jmp
mov
repnz
push
jno
jns
mov
pop
rcll
stos
test
jge
xor
test
inc
cmp
andb
addb
jecxz
std
jns
sbb
xchg
out
jbe
popa
idivl
dec
jecxz
shrl
ljmp
mov
cmpsb
filds
push
jbe
lcall
sub
rcrb
jl
mov
jbe
outsb
popa
popa
loopne
pop
dec
pop
nop
int3
clc
fbstp
popa
push
cltd
mov
cmp
xchg
aam
ss
dec
js
stos
daa
mov
sarb
aas
sbb
adc
add
lcall
cmp
mov
mov
popf
arpl
icebp
xor
loope
imull
out
or
xor
sbb
pop
sub
imulb
ja
jmp
xor
mov
or
pop
sub
arpl
push
dec
dec
ja
xchg
fildl
dec
sbb
das
push
rorb
ficoms
mov
ret
ret
loopne
data16
adc
stc
sbb
shll
divl
sbb
or
das
loop
mov
lock
subl
popa
xor
push
fisubs
dec
sbb
or
aas
mov
xor
pop
jo
popf
cs
and
lahf
leavew
movlps
sub
sarl
icebp
rcr
test
adc
xor
and
and
aaa
outsb
xchg
jb
xchg
xchg
xor
dec
sub
call
les
popa
xchg
adc
add
mov
push
in
pop
mov
mov
sbb
shl
mov
sbbl
daa
fnstcw
xchg
pushf
andl
and
mov
mov
xchg
ret
or
jge
xchg
add
dec
push
cmpsb
jne
ret
repz
sub
fstl
push
mov
or
lea
pop
andb
xchg
cmp
stos
les
rclb
mov
clc
mov
in
cld
mov
and
mov
sub
sub
nop
aas
rcrb
add
dec
ret
sbb
jp
or
testb
cmp
jecxz
pop
mov
jno
mul
dec
or
sarb
dec
sub
fcomp
mov
pop
pushf
inc
in
popf
cmpsb
mov
cmp
sub
mov
mov
pop
ljmp
fbld
mov
vrcpps
gs
rcl
pop
xchg
ljmp
pop
ljmp
cld
xchg
fwait
outsb
stc
mov
scas
aas
cmp
daa
sbb
fmulp
sub
sub
jp
pop
in
or
xor
aaa
cmp
xchg
xchg
adc
ficomps
mov
add
push
lahf
subl
out
add
jge
ljmp
sbb
imul
aas
inc
enter
fisttps
add
cmc
dec
mov
pop
shl
mov
mov
and
xor
sub
pop
or
jge
lock
dec
inc
adc
aas
pop
xchg
cmp
rcrb
cmp
fs
in
imul
loop
xchg
mov
mov
mov
daa
ret
mov
jl
mov
idivb
mov
test
or
aad
add
and
xchg
mov
daa
xchg
xor
test
pusha
dec
lret
xlat
sub
pop
int
mov
sbb
test
mov
sub
jnp
mov
mov
adc
cmp
fwait
sbb
lock
negb
or
lods
out
ja
or
stc
shrl
jb
cmp
arpl
out
out
into
sub
adc
add
ror
loop
unpckhps
pop
jmp
ret
jecxz
cld
mov
pop
add
repnz
sar
jns
je
outsb
add
ja
and
bound
pop
nopl
lea
jne
loop
ss
aam
mov
rcl
int
jmp
sub
icebp
pop
adc
mov
jne
dec
ja
jecxz
mov
std
xlat
xchg
rclb
mov
out
jle
shll
or
roll
and
ljmp
fabs
rcrl
or
pop
pop
pop
fnstenv
push
mov
cwtl
xorl
dec
mov
insl
sub
daa
pop
and
loop
leave
push
add
movl
in
sub
cld
sub
stc
or
mov
push
cmpsl
in
mov
push
repz
mov
mov
mov
mov
iret
dec
out
fisttpll
jg
dec
insb
xchg
pop
xlat
out
fdivrs
sbb
iret
les
jae
sbb
jmp
mov
inc
push
mov
and
jge
dec
in
scas
sbb
les
loop
or
std
inc
dec
aam
enter
imul
insb
fildl
sahf
inc
rcl
sub
dec
adc
out
pop
clc
push
dec
dec
out
or
in
xchg
cmp
gs
adc
xchg
lock
lret
iret
scas
inc
dec
mulb
dec
repnz
shlb
push
popa
push
std
ret
lret
and
sbb
ret
clc
fisttpl
sbb
xor
mov
xorb
push
out
ljmp
mov
loop
jl
fs
and
loop
sub
rorb
push
add
mov
aad
push
mov
adc
xor
xchg
mov
push
mov
insb
ja
call
mov
sub
outsl
test
xchg
callw
add
data16
mov
fs
ret
add
mov
sbbl
aam
call
push
jnp
xor
pop
stos
pushf
js
pop
fdivr
mov
mov
aaa
add
xchg
movsb
sbb
sub
daa
sbb
dec
mov
cmpsl
sarb
rcrl
hlt
dec
and
lea
nop
mov
mov
adc
pop
inc
pop
cmc
or
cltd
out
sbb
mov
xor
adc
lahf
xchg
movsl
or
inc
ret
pop
scas
jecxz
data16
sub
push
xchg
orb
sarl
dec
push
jge,pt
pop
call
jmp
or
pop
pop
out
cld
or
aad
adc
je
mov
push
push
cld
ja
dec
imul
xchg
pop
pop
xchg
bound
ret
sub
es
out
addb
movsl
jbe
mov
push
jne
inc
flds
lds
cs
xchg
ret
push
data16
ljmp
or
xor
mov
mov
clc
pop
outsb
jb
sahf
push
pop
xchg
mov
mov
or
or
daa
outsl
fmul
xchg
loopne
in
push
test
or
cmp
loopne
cmp
xor
sub
adc
xor
loopne
mov
frstor
mov
call
jo
jle
ficoml
popf
sub
imul
xchg
and
mov
cmc
xlat
mov
xor
repz
dec
imul
and
pop
pop
pop
mov
fidivs
mov
or
test
cld
imul
cld
or
dec
jb
inc
ds
lea
sub
xor
and
pop
lock
mov
adc
sbb
cld
insb
cmp
shlb
inc
jecxz
add
fstps
or
daa
pop
sti
and
cwtl
fisttpl
adc
pop
repnz
stos
testl
out
push
cmc
out
aas
addl
jnp
in
push
lods
lods
mov
fldl
cmp
and
je
add
push
bound
sub
and
movsl
aaa
out
push
xlat
sbbb
shrl
aam
xor
mov
cmp
dec
or
inc
ds
xor
mov
loopne
dec
lods
inc
loope
arpl
ljmp
jl
mov
out
mov
mov
pop
mov
scas
ja
es
inc
roll
bound
sti
jmp
mov
and
push
add
mov
cmp
fdivrp
in
stc
outsl
adc
mov
mov
mov
lahf
mov
xor
fdiv
jl
aas
push
lds
lods
or
icebp
aaa
incl
sahf
aam
stos
pop
jns
gs
rorb
mov
iret
ret
mov
push
xchg
mov
and
cmc
cmp
fucomp
mov
add
adc
add
adc
js
dec
dec
mov
mov
push
data16
mov
ret
call
loop
and
pop
cmp
adc
lods
pushf
rclb
in
adc
hlt
mov
sub
loop
dec
nop
and
scas
cmp
dec
bound
mov
insb
hlt
lcall
mov
shlb
inc
xchg
sbb
sbb
push
pop
cld
cmp
mov
out
call
sbb
or
and
pop
nop
sub
dec
test
jge
cmc
adc
icebp
jno
movsl
inc
sub
in
mov
mov
pop
rclb
outsb
adc
loop
and
das
xchg
lcall
shr
inc
std
mov
sub
hlt
or
and
cmp
stc
dec
jge
pop
dec
mov
in
inc
mov
pop
push
xchg
dec
out
sub
dec
mov
shlb
mov
sbb
adc
push
and
fmull
and
std
adc
push
stos
mov
mov
gs
shll
mov
xchg
pop
and
pop
cmp
outsb
jle
lock
pop
pop
popa
rcll
sub
ss
out
and
cltd
mov
mov
repnz
push
int3
shrb
pop
dec
fstpt
test
rcr
stc
ja
loopne
inc
inc
out
mov
mov
xor
push
loop
outsb
xchg
cmp
inc
sub
js
fadd
cld
push
dec
and
je
call
jecxz
sti
dec
push
scas
add
rcll
jb
cld
fmull
lock
imul
clc
dec
insl
stc
push
clc
es
cmp
xor
jae
popf
or
push
or
repz
mov
loopne
dec
xor
mov
jae
lock
loope
cmc
les
add
push
inc
stos
sub
pop
je
sbb
sbb
fldl
ret
mov
loope
xchg
mov
add
fistpl
aaa
outsl
push
pop
jns
xor
test
jbe
cmp
clc
bound
push
daa
inc
dec
inc
enter
data16
adc
fdivrl
enter
add
fidivs
lcall
aas
outsb
iret
enter
arpl
pop
xchg
jle
xor
scas
psubw
aam
pop
push
xor
sub
loopne
ret
data16
dec
or
mov
mov
dec
sub
fiaddl
add
lcall
mov
sbb
arpl
popf
fstl
mov
xor
jo
test
movsb
aad
mov
ds
xor
xchg
arpl
sub
movsl
or
push
mov
ja
sarl
movsb
mov
adc
hlt
mul
adc
mov
sub
fldl
cmc
xchg
loop
jecxz
sbb
pop
sub
sbb
fldl
jbe
fsts
xor
mov
xchg
add
imul
popf
cli
sbb
or
je
xchg
jle
mov
in
pop
or
and
jo
jge
cmpsl
add
lock
int
jb
rcll
push
push
adcb
mov
xchg
mov
mov
or
cld
pop
xor
ds
mov
mov
in
push
cltd
out
mov
pop
out
pop
push
sarl
iret
xchg
pop
out
xor
and
js
imul
cmp
and
lds
push
and
addr16
xor
flds
xchg
dec
cli
and
movsl
nop
cmpsl
adc
mov
lea
and
push
mov
sub
clc
dec
imul
mov
movsb
std
mov
jbe
ljmp
les
aaa
xchg
out
jp
add
in
in
movsb
xor
bound
sbb
dec
xchg
shrl
push
dec
in
rcrb
xchg
mov
imul
lcall
or
inc
sbb
pop
mov
iret
jecxz
or
fstl
pushf
cmp
popf
push
popf
mov
sbb
and
cmpsl
dec
loope
pop
add
fld
adc
and
xor
hlt
pop
mov
lret
std
dec
pop
movsb
inc
mov
leave
sub
jge
xor
movsl
cmpsl
push
lret
cmp
xor
inc
add
push
insl
in
je
in
lds
dec
sbb
cmc
js
dec
ljmp
push
daa
xor
dec
sbb
cmp
addr16
cmpb
xchg
sbbb
loop
clc
mov
jecxz
mov
jns
jno
pop
int
adc
lods
cmpsb
jecxz
pop
enter
imul
lret
pop
push
rcrl
push
sbb
scas
pusha
repz
sbb
and
sub
mov
insl
aaa
jnp
add
scas
loop
cmpsl
in
push
inc
adc
in
es
ffreep
mov
mov
loop
xor
jbe
add
into
pop
mov
mul
outsl
mov
xor
xor
into
sar
mov
movsb
cmovg
dec
push
jae
fadds
mov
pop
leave
cmpb
jg
andl
pushf
outsl
shr
pop
or
push
jl
test
cmpsl
mov
mov
add
add
outsb
add
rclb
test
into
adc
popa
loop
cld
push
mov
and
push
aaa
mov
ds
dec
add
cmp
jmp
dec
test
push
sbb
fisubl
cmpl
fwait
shll
jbe
push
pop
push
bound
inc
data16
push
insb
cmp
in
ds
lds
lahf
or
sti
ja
test
or
test
or
xchg
or
daa
ja
bound
xor
pop
cmp
mov
in
adc
lret
pushf
dec
adc
inc
cld
inc
jo
dec
cmp
cmp
mov
mov
outsb
mov
sbb
adc
mov
repnz
jns
jns
cmp
out
cmp
and
bound
inc
and
xor
jmp
mov
adc
sbb
out
arpl
jb
pop
mov
xchg
inc
gs
arpl
inc
outsl
jmp
gs
jl
or
cmp
hlt
add
out
sub
xchg
xor
aas
fisubl
iret
int3
push
mov
leave
or
popf
push
xor
add
push
pop
subl
stos
mov
push
jnp
mov
flds
push
pop
call
in
leave
add
mov
shll
aaa
aad
add
adc
or
add
push
add
ret
out
jns
fwait
repz
test
jge
pop
ret
and
push
mov
ret
pop
add
lcall
popf
mov
lcall
and
pop
ret
lahf
add
insb
mov
sahf
pop
popa
cmp
ja
int
jb
dec
push
imul
shrl
push
je
loope
int
mov
cmp
add
stc
xchg
jmp
aad
in
sub
jb
fstps
shll
imul
in
lods
shlb
dec
test
scas
call
sti
sub
add
mov
push
or
and
mov
scas
add
xor
or
mov
inc
addr16
add
xchg
add
mov
pop
cmc
jp
data16
inc
loopne
pop
add
mov
and
xor
pushf
ret
sub
pop
int
movsb
sub
movsl
stos
test
sbb
pop
pop
push
rorb
inc
xchg
or
ljmp
fmull
std
out
in
cld
imul
add
out
fisubrs
stos
ljmp
fsubl
adc
sahf
int
pop
push
out
cmpsb
popl
scas
arpl
lods
add
loop
xlat
lahf
inc
daa
xor
aam
test
mov
ret
cmp
cli
push
iret
stos
lds
sarl
aaa
push
mov
jnp
push
and
mov
stos
xchg
sbbb
mov
cmp
std
iret
xor
and
or
sbb
test
or
hlt
inc
xlat
mov
xchg
icebp
jp
mov
insb
xchg
lret
inc
inc
xchg
stos
clc
ret
mov
test
dec
and
or
icebp
jmp
mov
pop
insb
rol
jge
inc
add
or
movsl
pop
in
pusha
push
pop
mov
movsl
ljmp
jns
aas
sbb
adc
pop
cwtl
dec
loope
out
pop
aad
adc
jno
mov
test
icebp
out
mov
cmp
imul
das
sbb
mov
add
fdivs
add
scas
fsubr
dec
pusha
fistpll
or
idivb
push
jl
adc
lods
push
push
mov
arpl
sbb
mov
or
insl
cwtl
call
test
loopne
sbb
push
cmp
add
es
sub
inc
shl
or
nop
add
es
hlt
hlt
mov
pminub
mov
cmpsb
rcrl
lret
mov
push
add
ss
in
fidivrl
mov
leave
lods
ljmp
test
mov
mov
daa
loope
shl
cmp
xor
mov
dec
push
mov
addl
push
inc
ja
and
cld
call
push
mov
gs
mov
call
xor
push
and
rolb
and
pop
pop
in
scas
pop
shlb
leave
xchg
nop
sub
adc
ret
sub
shrb
out
bound
insb
into
inc
cmp
in
dec
int
or
jp
sub
cwtl
hlt
clc
pusha
in
fwait
mov
les
fcoml
add
xor
cmp
jae
rcrl
adc
mov
mov
sar
aam
or
ret
vpmadcswd
mov
xchg
data16
dec
aaa
and
sub
jbe
jmp
cmpl
cmpl
lret
lods
fisttpl
cmp
enter
pushf
or
mov
and
imul
loop
sti
insl
xchg
mov
ret
inc
or
clc
loope
es
mov
xor
mov
push
out
mov
pushl
into
fdivrl
popf
jno
mov
lea
ret
sti
hlt
xor
sub
mov
sarl
dec
popf
pop
and
aad
sub
sbb
xlat
sbb
loope
adc
aad
mov
out
pextrw
iret
arpl
fnstsw
jne
jp
pop
mov
inc
sbb
push
mov
loope
stos
aas
ds
push
and
ret
mov
addr16
sbb
aam
adc
mov
das
fcomp
mov
sub
incl
ret
jns
mov
mov
lahf
push
mov
lahf
pushf
popf
sub
insl
lahf
mov
and
scas
daa
dec
out
mov
pushl
lods
lret
icebp
int3
clc
decb
mov
adc
mov
testb
xor
hlt
inc
stc
adc
call
mov
cli
and
lods
xor
jmp
mov
popa
fnsave
xor
hlt
sbb
mov
repnz
jl
repnz
jmp
rorl
hlt
or
mov
lret
xor
into
sbb
lods
jecxz
iret
movsb
sbb
push
movsb
iret
sub
mov
fs
inc
popa
andb
std
sbb
cmpsb
addb
ficompl
and
inc
test
fisttpll
andl
mov
cli
pop
pop
in
inc
loop
ja
mov
lahf
sub
rol
aad
loop
mov
aas
add
call
mov
ja
sub
insb
ds
fld
mov
mov
sbb
add
fnsave
repnz
ret
sbb
inc
adc
push
pushf
dec
arpl
or
fstpt
adc
std
mov
outsl
xchg
jp
clc
filds
loop
sub
mov
pop
imul
repz
mov
addr16
inc
dec
loopne
mov
lods
mov
adc
mov
and
cli
xchg
jmp
hlt
inc
hlt
mov
jg
int
dec
ljmp
repnz
lock
xlat
test
in
sbbb
dec
int
cld
ret
cwtl
lret
sub
test
pusha
sbb
or
cltd
mov
pop
sbb
xchg
shlb
out
xchg
push
arpl
lret
push
out
ret
inc
ja
pusha
fwait
jmp
lcall
mov
cs
fwait
sbb
pop
jo
mov
leave
ret
sub
jge
enter
out
rorb
and
cmp
in
std
ficomps
mov
shlb
scas
popf
inc
sub
sub
inc
test
stos
or
loope
pop
movsl
jb
sbb
in
ss
je
and
outsb
jmp
adc
jnp
adc
movsl
lods
repz
dec
adc
into
mov
xor
mov
or
dec
push
mov
mov
add
mov
jnp
hlt
mov
xchg
js
outsl
xor
mov
jmp
push
cmp
cmpsl
sarb
jl
les
mov
sarl
lret
dec
js
scas
clc
xlat
fistpl
jmp
je
out
push
int
xchg
in
lret
lds
inc
lods
xchg
push
popa
and
sbb
mov
adc
push
sarb
or
cmc
fiaddl
push
or
lods
test
xor
dec
dec
js
in
add
test
dec
in
mov
repnz
pop
xor
idivl
enter
jns
pop
iret
add
popa
inc
cwtl
int
push
loop
and
inc
mov
sbbl
adc
pop
int
pop
adc
cltd
mov
loopne
movsb
mov
fisubrs
add
loopne
adc
mov
cmpsl
sbb
sbb
mov
jle
xchg
xor
and
std
imul
add
sub
jmp
lods
pop
mov
imul
fcmovne
fldcw
out
lret
js
adc
out
or
xor
pop
sbb
mov
mov
cld
shlb
inc
xlat
lret
add
or
and
and
add
cltd
xchg
adc
mov
add
cltd
push
rclb
dec
adc
aam
sub
adc
mov
addb
pop
xor
sub
mov
jb
sbb
repz
mov
pop
stos
dec
dec
or
jecxz
jo
stc
test
imul
in
adc
shrb
sbb
and
xor
adc
fstl
push
inc
add
int3
cmp
or
fadds
and
sub
aas
out
enter
or
add
cli
inc
in
push
mov
mov
jmp
sub
xor
ss
cwtl
inc
add
cmp
mov
cmp
jb
cmpsl
pop
int3
pop
ljmp
repnz
jp
out
push
int
push
lods
adc
mov
subl
xchg
xchg
fs
lcall
mov
insb
adc
or
ret
std
adc
lock
insl
aad
fs
fisttpl
loope
iret
mov
push
xchg
lods
push
jb
lods
pop
scas
ret
es
cmp
xchg
decb
cmpb
or
in
sbb
push
dec
clc
outsl
scas
test
dec
lcall
add
mov
mov
jb
and
cmc
scas
mov
ds
push
arpl
dec
or
sti
push
sbb
push
iret
sbbl
addr16
aam
sbb
mov
loop
mov
ret
fadd
jbe
xor
mov
jb
pop
and
call
sti
ret
cld
mov
fsub
sub
outsl
fildll
sahf
mov
ja
out
adc
fld
cmp
lock
xor
aas
aam
xchg
pusha
jmp
pop
jg
out
mov
aaa
pop
inc
scas
sbb
mov
outsb
mov
ja
and
mov
mov
das
pop
mov
fwait
adc
stos
hlt
jmp
pop
and
bound
cmpsl
in
lcall
arpl
sub
daa
pusha
fidivs
insb
jmp
xor
repnz
jbe
dec
int
push
cmpsb
mov
fcompl
cs
imul
jp
jnp
mov
sbb
sbb
and
lret
jno
aas
loopne
shld
xor
xor
daa
pop
mov
add
adc
mov
es
mov
dec
inc
push
lret
das
cmpsb
mov
lcall
and
hlt
or
movsb
popf
sub
cmp
es
mov
mov
add
pop
mov
adc
inc
into
adc
pop
out
repnz
jns
mov
pop
xor
repnz
pushf
adc
and
xor
jecxz
cmp
nop
cmpsb
sbbb
xchg
xchg
shl
in
push
fs
stos
and
andl
xor
pop
out
aad
lret
cmp
jnp
sub
sbbb
scas
xchg
jo
aad
ss
int
lods
or
pop
mov
pop
rol
in
cs
push
jle
adc
mov
xchg
mov
and
pop
mov
sbb
mov
into
cs
sub
push
aad
sarl
sbb
inc
jnp
mov
ds
in
nop
xor
iret
loope
test
sarl
jp
mov
out
dec
and
pop
jb
or
mov
adc
xor
arpl
repnz
mov
and
rclb
pop
lods
add
lods
bnd
mov
loopne
je
aas
dec
shl
add
pop
daa
sbb
cmp
add
cmp
adc
and
push
lret
cmp
mov
hlt
addb
movsl
and
dec
jnp
pop
pusha
lea
dec
mov
add
adc
data16
mov
ror
sbb
inc
push
mov
andl
mov
cmp
sub
ss
cmp
jo
bound
fldt
scas
lea
cmp
xchg
stos
mov
xlat
sbbl
je
popa
daa
push
mov
mov
outsb
mov
mov
ja
popf
outsl
jns
lret
jg
inc
pop
jnp
cmp
mov
mov
xor
das
ret
jp
ljmp
mov
repnz
mov
cmc
cmp
out
jno
ljmp
dec
pop
ljmp
pop
clc
push
and
adc
insb
mov
test
xorl
push
cmp
inc
mov
imul
dec
jl
push
mov
into
incl
insl
rol
loope
cmp
xchg
lret
shll
ss
rcrl
xchg
xchg
add
cmp
add
jmp
aas
sub
mov
mov
int3
data16
dec
leave
and
lret
loopne
imul
mov
inc
mov
mov
xchg
jp
jo
or
push
dec
fwait
pop
ud0
lea
rol
nop
pop
adc
test
sarl
pop
out
call
loopne
fdiv
std
adc
push
mov
add
movsl
sahf
sar
pushf
ljmp
add
fldl
mov
xchg
dec
pop
dec
sub
mov
add
imul
lock
jnp
ljmp
inc
cmpsb
mov
inc
and
loopne
sbb
pop
std
dec
and
push
push
mov
test
or
dec
scas
xchg
mov
push
sub
push
jns
push
mov
sbb
mov
xchg
int3
cmp
mov
mov
push
dec
sub
aas
das
insl
dec
nop
out
in
jp
add
push
add
adc
jecxz
cmp
in
sbb
xor
adc
or
loop
or
mov
mov
xchg
dec
mov
add
jb
leave
notl
les
inc
fs
lock
mov
adc
daa
jp
repnz
cmpsb
xchg
inc
andl
scas
jnp
push
or
jbe
inc
xchg
out
mov
or
and
imul
lret
repnz
fucomp
cmp
aas
stos
cld
stc
sarl
push
push
cmp
lret
jg
mov
xchg
sbb
arpl
jae
mov
jge
ss
outsl
and
out
int
sub
mov
adc
icebp
pop
and
data16
sbb
js
mov
xchg
xchg
fwait
sbb
dec
cld
mov
mov
add
push
nop
roll
add
sbb
or
inc
addl
xor
mov
mov
lds
aaa
inc
rcrb
sub
jb
xor
push
and
xor
insb
cld
inc
pop
lock
inc
stos
xchg
scas
dec
movsl
inc
adc
push
jg
xlat
test
mov
cmp
ds
sti
xchg
push
jns
sbb
mov
mov
sub
add
mov
mov
sub
adcl
scas
int3
std
mov
loop
xchg
jno
sbb
out
dec
mov
shl
hlt
mov
cmp
and
inc
dec
popf
adc
or
add
mov
mov
ret
mov
add
push
lret
stos
int3
sahf
dec
ja
ret
add
ret
not
sub
mov
push
ret
mov
cmp
mov
cmp
jnp
pushf
aad
cltd
adc
nop
rol
movsb
adc
xor
push
xor
cmp
sti
adcb
mov
jecxz
inc
movsl
mov
stc
lret
fs
test
mov
xchg
jbe
push
pop
imul
mov
lret
sub
rcr
xor
shl
fs
mov
subl
loope
jno
add
mov
push
shll
xor
int3
and
fs
bound
int
dec
add
insb
xchg
pop
jl
ss
out
jo
mov
adc
pop
sub
call
loop
xor
cmp
shrb
push
roll
and
dec
aam
hlt
push
stc
jle
leave
addl
mov
outsb
lock
aaa
push
dec
insb
pop
dec
cmp
and
test
incb
push
sbb
jg
inc
and
sbb
sub
jnp
xchg
and
das
and
pop
in
mov
fwait
dec
fcomps
outsb
dec
test
cmp
inc
mov
jo
and
pusha
inc
into
test
mov
insl
scas
test
mov
psllq
fwait
dec
and
mov
aaa
leave
repz
mov
lds
dec
mov
in
sbb
popa
out
and
lcall
mov
mov
mov
mov
orl
movups
out
or
push
xchg
jb
sub
call
rolb
xchg
mov
mov
jge
sahf
shlb
push
jge
xor
mov
in
xor
fidivrl
arpl
jnp
cmp
mov
cmp
jae
bound
add
shrl
nop
repz
sub
in
cs
adc
nop
lods
aad
movsl
lods
cmp
fs
data16
scas
int
mov
sbb
push
pop
xchg
sub
and
das
mov
in
lock
xchg
mov
dec
je
jle
add
mov
dec
jo
addl
loope
imul
inc
cltd
mov
and
sahf
jge
mov
scas
jecxz
jge
js
and
sub
shlb
test
sub
sahf
fcompl
mov
mov
mov
fistpll
daa
xchg
jns
imull
or
fisttps
mov
int3
outsb
lock
or
ljmp
movsl
pop
test
mov
add
sub
add
int
sbbb
inc
out
les
pushf
push
mov
in
imul
shl
pop
xchg
aas
imulb
sbb
subb
dec
jne
or
int3
sub
jae
jno
dec
rclb
orb
pop
sbb
pop
adc
notb
add
mov
and
or
pop
mov
jp
loopne
adc
lock
rep
mov
push
imul
or
adc
enter
adc
negb
nop
jge
pushl
push
aas
mov
pop
mov
and
mov
aad
push
sbb
mov
sub
fisttpll
xor
push
sub
rclb
sbb
pop
insl
fildll
mov
sbb
insb
pop
add
mov
out
in
sarl
dec
hlt
icebp
iret
cmpsl
sbb
adc
xor
pop
cmp
mov
adc
loop
test
jne
inc
roll
add
mov
jbe
pop
mov
cmpsl
jmp
pop
pop
movsl
xchg
and
push
or
sahf
mov
imul
and
xchg
sub
xor
in
outsb
js
inc
imul
inc
xor
cmp
lds
sbb
xor
jle
mov
scas
popa
divl
insb
xchg
or
call
add
pop
popa
shlb
mov
fs
jmp
dec
out
xor
push
xchg
inc
jae
std
pop
repz
mov
flds
bound
mov
and
jo
pop
cmpsl
xor
mov
repnz
imul
xlat
push
ret
loope
lret
out
ds
ljmp
pop
fldenv
das
xchg
jb
mov
jmp
iret
add
xor
sbb
dec
leave
rorb
add
and
pop
iret
lods
cmp
ss
pop
jle
bound
call
cltd
mov
adc
adc
rcr
dec
pop
inc
out
adc
push
jmp
sar
pop
inc
jmp
xor
ret
jns
adc
es
xchg
mov
jl
inc
mov
dec
sub
mov
daa
fwait
cmp
ret
mov
jmp
div
lcall
loop
inc
inc
jb
mov
pop
cmp
imulb
stos
repnz
adc
xchg
adc
pop
ret
xchg
jo
mov
je
out
xchg
xlat
out
inc
stos
ja
cmpsb
xchg
jge
dec
pop
jbe
rorb
xorb
fsts
add
hlt
push
rcrb
add
fcoms
adc
into
or
add
shl
lcall
add
cmp
in
xor
das
shl
stc
sbb
int3
jnp
cltd
xchg
and
jg
cs
pop
push
lcall
xor
cld
jecxz
mov
push
loopne
dec
stos
popa
xor
push
push
lcallw
push
mov
sub
cld
lods
mov
sub
ret
fsubrs
push
cmp
xchg
aad
in
ret
or
xor
adc
arpl
inc
and
stc
lcall
in
out
ja
xor
rorb
sahf
xor
push
xchg
adc
shrb
mov
aaa
mov
out
sbb
inc
jae
push
cmp
mov
and
dec
mov
std
or
aas
fisttpl
adc
data16
test
iret
inc
push
stc
mov
jg
xor
sbb
out
rcrl
out
and
inc
dec
mov
fmul
inc
dec
mov
jle
ss
roll
outsb
sbb
mov
or
icebp
push
mov
jle
cmp
jmp
add
fiadds
popa
add
fs
imul
pop
cli
lcall
pop
mov
jge
ds
lahf
xor
mov
fs
test
test
daa
inc
jb
jge
bound
aas
push
xchg
jo
jns
mov
dec
jb
ja
cli
xchg
dec
adcb
out
pop
ret
pop
ljmp
cli
add
mov
test
mov
sbb
test
repz
pushf
dec
lret
mov
and
pushf
mov
cmp
xor
push
aaa
inc
pop
int
neg
int3
xor
pop
dec
les
daa
fstl
repz
mov
sub
dec
jo
fldl
loope
call
insl
sub
cmp
clc
xchg
mov
aaa
xchg
xchg
mov
fcomps
jmp
lret
popa
dec
push
hlt
inc
arpl
lahf
sub
push
iret
jb
push
and
sub
mov
pop
push
or
adc
fists
lahf
std
int
sti
or
test
xchg
or
ret
push
insl
add
push
mov
imul
popf
adc
lea
add
cs
outsl
and
sbb
add
pop
sbb
jl
call
xchg
xor
cmpsl
and
and
mov
nop
jns
test
and
cmpl
push
sub
mov
jle
jmp
test
fidivrs
andb
mov
xor
and
mov
push
aas
xor
push
lret
outsb
xor
pop
xchg
push
hlt
xchg
mov
mov
push
out
mov
ficoml
pop
xor
sub
aad
cmp
mov
loopne
and
xor
movsl
cmc
and
mov
mov
push
and
mov
roll
sbb
adc
lahf
adc
stc
lods
sub
shll
jmp
push
inc
roll
leave
pop
sub
leave
pop
imul
xor
xchg
ljmp
mov
adc
dec
repz
gs
mov
or
and
sarl
mov
mov
mov
jbe
dec
call
incl
push
mov
ficompl
push
inc
pop
and
hlt
out
test
repnz
sbb
jo
loopne
dec
push
lds
aad
das
out
ficompl
inc
push
lret
sbb
pusha
jecxz
rclb
xor
lcall
mov
or
add
lcall
je
or
mov
cwtl
iret
xchg
sub
nop
fs
jb
pop
or
dec
mov
mov
jl
mov
xchg
inc
and
adc
push
pop
and
jae
adc
out
mov
aam
sbb
pop
dec
outsb
and
dec
dec
jo
add
xchg
mov
and
pop
jl
or
mov
fsts
cmc
pop
sti
mov
int
mov
dec
pop
rcll
arpl
mov
insb
ss
mov
mov
stos
mov
mov
sub
add
mov
roll
push
cwtl
repnz
mov
mov
cmp
rcrl
sub
ss
lock
leave
xchg
and
pop
and
push
insb
ss
mov
dec
jecxz
in
push
mov
adc
inc
and
dec
pusha
cmp
or
sarl
push
idivb
push
mov
dec
icebp
cmp
and
outsb
lret
das
pop
sub
cld
test
jp
fmull
add
and
sub
outsb
fcmovb
fdivrs
cmp
fstps
out
add
subb
xor
dec
cmp
insb
ror
or
sub
loop
lahf
rcr
ret
je
and
popf
push
mov
icebp
aad
insl
and
adc
xchg
movsl
mov
xchg
lea
push
pop
jbe
test
daa
ror
lret
xor
cmp
jae
push
inc
dec
shll
popa
pop
out
mov
sbb
adc
cmpb
in
sub
les
cmp
inc
push
test
xchg
lea
pop
rcl
add
adc
pop
popa
std
pop
adc
jp
icebp
rol
out
test
sub
fidivrs
mov
arpl
sub
and
fs
loope
imul
in
xchg
and
dec
cmp
arpl
pop
push
std
inc
mov
das
std
dec
sbb
jl
xor
mov
out
adc
mov
mov
and
inc
lcall
jp
cmpsl
xchg
addl
pushf
jo
and
push
cli
and
mov
mov
iret
mov
lret
mov
jns
pop
fcoml
inc
pop
sub
or
bound
mov
pushf
in
popa
push
sti
add
sahf
cmp
mov
outsb
call
cli
data16
les
cmp
mov
out
lahf
inc
jae
test
or
push
movsb
mov
stos
call
cltd
adc
adc
outsb
mov
lret
mov
xor
jbe
cmpsb
adc
in
dec
xchg
xor
cwtl
push
xor
jge
push
sub
adc
jle
jmp
pop
inc
ja
out
pushf
and
add
xorb
mov
stos
ss
imul
adc
pop
loope
cmp
sti
push
push
ds
jp
mov
mov
and
aad
scas
shll
inc
outsl
lcall
ret
cmpsl
mov
pop
js
call
mov
lret
and
or
jle
push
jmp
mov
dec
or
fldt
adc
dec
and
xchg
movl
clc
je
int
imul
add
out
push
ss
xor
lods
push
inc
es
jmp
push
push
imul
push
mov
sub
push
pushf
pop
cmp
pop
inc
aad
and
sbb
lea
shlb
cmc
xor
and
lahf
xchg
in
pusha
pop
mov
mov
sarb
sbb
ds
sub
ret
mov
xchg
mov
dec
mov
gs
pushw
jle
sbb
mov
daa
push
push
and
std
pop
out
std
pop
outsl
dec
fisubrs
cmp
mov
out
cmp
adc
fiaddl
cmp
js
out
out
mov
ja
daa
out
cmpb
stos
dec
loop
aaa
daa
test
in
inc
add
pop
imul
not
or
add
adc
shll
imulb
xor
addr16
repz
movl
xchg
inc
dec
scas
pop
pusha
mov
in
stos
xor
imull
pushf
inc
jp
adc
add
mov
scas
and
js
fildll
in
mov
mov
mov
mov
imul
mov
sub
ljmp
mov
cmp
jp
int
mov
repz
pop
mov
inc
aaa
lods
add
test
dec
cmpl
popa
scas
xchg
sbb
call
sbb
xor
test
xor
aad
jno
fidivl
sub
popf
daa
in
sub
roll
int
push
mov
inc
inc
sub
test
lret
jno
repz
cmc
aas
lea
push
int
dec
ljmp
cld
and
pop
mov
and
mov
subl
jmp
push
loopne
xor
add
scas
fdivrl
stc
push
dec
mov
fstpt
fbld
imul
fisubrs
pop
mov
cmpsl
jle
cmpsl
sbb
adc
lret
pop
pop
insl
jecxz
push
dec
jecxz
bound
sub
in
nop
pop
sub
jnp
dec
cs
ljmp
outsb
add
in
fstps
clc
inc
mov
jp
ret
hlt
addr16
cmp
loope
fisubrl
push
and
dec
arpl
xchg
fadd
jns
int
fnstcw
add
adc
mov
add
outsl
mov
cmp
outsb
xchg
sub
dec
out
pop
clc
adc
dec
mov
addr16
inc
sub
cmp
xchg
call
add
in
out
xchg
bound
jb
dec
mov
sbb
out
xor
add
dec
xor
mov
and
or
fildll
jns
ljmp
jb
push
xchg
push
cltd
popf
and
lds
rclb
sbb
rol
push
fcomps
shll
add
movsb
addr16
sbb
push
sarl
cwtl
push
mov
es
jg
lret
jbe
adc
jnp
ds
xor
fsubrp
xchg
in
sbb
xchg
movsb
sbb
jge
leave
in
mov
jb
test
filds
arpl
inc
outsb
pop
in
and
jbe
ljmp
sub
push
out
inc
add
mov
jecxz
or
pop
pop
inc
test
mov
jbe
mov
xor
adc
std
imul
aas
add
sub
jmp
scas
jbe
cltd
sbb
js
jmp
sbb
enter
lret
jnp
test
insl
adc
jecxz
xor
fmulp
roll
ljmp
nop
jbe
lods
ss
out
popf
pusha
test
addr16
andl
or
loop
mov
inc
jmp
dec
sbb
outsl
mov
dec
aam
sbb
or
dec
cld
fstp
loopne
push
fwait
xchg
dec
push
pop
shl
add
mov
adc
insl
fnstcw
lcall
dec
jge
adc
out
sti
mov
sub
pop
inc
jle
imul
ficoms
mov
dec
outsl
and
and
dec
mov
call
xchg
subl
mov
dec
add
scas
hlt
cmc
push
ret
pop
dec
nop
add
mov
or
ss
mov
xchg
add
ret
mov
gs
subl
and
push
addl
clc
dec
fnsave
call
or
leave
insl
pop
dec
xchg
or
leave
fsts
push
fimull
pop
ficomps
daa
xlat
cmp
lock
jle
outsb
ljmp
test
or
add
fstps
push
adc
cltd
inc
jle
mov
cwtl
cmp
pop
add
dec
xchg
cmp
addl
enter
mov
dec
fnstenv
out
xchg
movsl
dec
sub
xchg
pop
repz
add
pop
ror
mov
pop
mov
cmp
push
aas
sbbl
scas
pop
mov
lret
test
jmp
mov
cmp
icebp
cmpsl
leave
adc
idiv
pop
xor
xchg
das
in
pop
xor
and
fcmove
fistl
cmc
xor
roll
test
shrb
mov
mov
pop
dec
push
mov
push
sbb
fisttpll
push
fidivl
nop
outsb
jb
jmp
mov
mov
jns
fidivrs
aad
leave
repnz
mov
loopne
fs
out
ds
push
pop
orl
xor
add
push
ss
lock
pushf
sub
popf
xchg
xor
jnp
insl
fmuls
xor
mov
fadds
movsl
cmpsb
inc
sti
dec
loopne
sbb
fisttpl
xor
outsb
cmp
call
push
and
cwtl
sub
rol
cltd
jge
sbb
adc
xor
ret
sbb
cmp
cmp
mov
cli
test
xor
loopne
inc
cwtl
sub
cmp
pushf
dec
xchg
test
test
adc
push
push
dec
xchg
xchg
add
lods
int3
jae
pop
in
fadds
sub
cld
adc
mov
push
cmc
sbb
insl
mov
out
cltd
lock
fs
test
xor
cmp
ds
sbb
jmp
out
insb
cmp
call
add
mov
cwtl
xchg
inc
ja
ret
lret
push
xchg
jmp
es
stc
mov
pop
inc
popa
xchg
add
xchg
jo
rcr
and
jmp
cli
mov
lcall
test
loop
mov
loop
xchg
adc
mov
jno
mov
sbbl
imul
cmc
fidivs
inc
ror
lret
lock
adc
push
sub
pop
jae
or
in
scas
lods
jne
push
jg
add
ds
in
jmp
sbb
negl
dec
push
fwait
and
in
mov
lret
stos
notb
mov
rclb
in
xor
aad
popa
pop
fwait
dec
or
inc
mov
or
inc
jp
mov
test
cli
fiaddl
insb
test
sarb
insb
push
imul
sub
bt
mov
mov
pop
aas
xor
ja
sub
jae
adc
mov
mov
sub
int3
dec
pop
pop
das
inc
jno
test
cmp
mov
jb
inc
push
aad
stc
sbb
pop
icebp
mov
scas
es
insl
jp
jae
das
in
scas
daa
aaa
or
fcomip
xchg
dec
adc
mov
inc
xlat
incl
pop
add
cld
rorl
inc
sbb
aam
movsl
push
into
add
push
sbb
mov
bound
out
sbb
ljmp
mov
enter
in
lods
fisttps
sub
cmp
jnp
popa
outsb
lods
daa
lds
push
push
xlat
xchg
fs
mov
gs
ss
imul
mov
sbb
xor
enter
aam
jno
bound
dec
mov
add
neg
inc
or
dec
mov
sahf
push
mov
mov
inc
les
test
cmp
and
push
pop
cmp
push
sub
jno
cld
cmp
outsl
call
sar
push
push
cmc
rcpps
std
outsb
pop
fidivl
cmp
and
jnp
stos
pop
repnz
mov
arpl
icebp
imul
mov
jae
or
xchg
insb
fildll
scas
jle
xor
loop
mov
out
ret
sub
cld
mov
inc
mov
dec
out
mov
or
sti
or
xchg
or
sub
insb
jmp
pop
scas
mov
push
dec
mov
mov
push
clc
mov
mov
pop
cld
dec
shlb
lea
sub
sub
and
inc
xor
xor
nop
or
jo
lds
mov
jl
js
lods
xchg
xchg
imul
aam
cmp
jbe
jp
lcall
cmpsl
mov
xor
xor
lret
shll
jb
je
iret
cmc
aaa
fdivr
dec
xchg
rcll
bound
insl
nop
rcll
popf
or
cmp
pop
xor
stc
dec
jmp
mov
mov
ja
dec
insl
hlt
xor
adc
lret
and
in
xor
gs
mov
in
fsubl
or
fildl
nop
sahf
mov
dec
mov
jl
xchg
gs
adc
jb
mov
xchg
jno
mov
lret
or
cs
jnp
mov
lahf
cmp
xor
push
cltd
ret
dec
mov
cmp
hlt
jle
aaa
mov
jb
sub
jle
jnp
add
inc
cmpsb
mov
push
jp
popa
mov
iret
fstl
sub
call
ret
adc
or
mov
jne
or
lcall
pop
pop
and
or
sub
mov
div
in
lret
jmp
leave
insl
push
mov
jmp
mov
test
mov
aad
mov
xor
xchg
fdivr
sbb
xor
imul
aas
jo
sub
rol
xor
subb
adc
cmpsl
imul
loopne
fcmovbe
sahf
mov
sbb
mov
aad
rcr
jno
jg
in
les
leave
lret
mov
or
mov
insl
insb
pop
jo
dec
sbb
sub
dec
faddl
adc
and
pushl
jle
cltd
mov
lods
aam
cmp
test
or
push
fadd
outsl
xor
pop
pop
test
lock
jg
adc
insb
lret
and
in
repz
pop
rorb
inc
in
pop
cld
push
lret
pop
add
mov
or
mov
jae
inc
lock
or
ljmp
inc
cwtl
cmp
jl
filds
push
aas
test
in
inc
cld
loop
rclb
jne
hlt
leave
lea
lret
mov
sub
out
mov
jo
icebp
inc
or
mov
xlat
cltd
sbb
in
mov
fdivs
ds
loopew
fadd
aam
xor
jge
jae
cs
jg
mov
repnz
mov
bound
lcall
mov
xchg
cmp
in
inc
std
jecxz
dec
sbb
sub
mov
jns
lds
fsubrl
aas
nop
sbb
mov
jne
test
lods
lret
test
xchg
adc
xchg
push
adc
call
xor
out
mov
sti
jl
pushf
test
faddl
mov
inc
call
sbb
mov
jns,pn
or
mov
les
sub
das
fwait
les
and
dec
in
repz
adc
fucom
test
lods
cmp
daa
cmp
ficomps
inc
mov
out
mov
dec
movsb
lahf
sbb
dec
and
ss
sbb
movsb
in
in
dec
cmp
dec
add
scas
fmuls
xchg
pushf
les
inc
daa
in
aaa
push
sti
cmpl
addr16
dec
in
ljmp
imul
xor
in
sbb
xchg
fnstsw
fists
stos
lods
dec
pop
sub
pop
add
push
aad
add
add
repz
xchg
and
pop
add
addr16
frstor
pop
bound
in
in
xor
mov
adc
cwtl
js
inc
out
scas
cld
push
call
or
sbb
call
cli
imul
pop
es
pop
cmp
inc
xchg
in
out
hlt
ret
fisubs
adc
push
mov
pop
loopne
and
mov
sbb
mov
decl
mov
rcrb
pop
shll
xor
jge
cmc
mov
scas
out
push
jb
sub
icebp
push
mov
lret
fildl
enter
sbb
mov
test
pop
and
cmc
mov
jp
jns
addl
ret
cmp
loop
dec
push
pop
test
jge
pop
sub
push
jo
shrl
cmp
push
jp
cmp
push
xchg
lea
cmp
xchg
cwtl
add
int
fwait
clc
push
shll
movl
cltd
movb
pop
sub
sub
inc
loop
int
adc
push
imul
sbb
mov
clc
ljmp
sbb
dec
mov
rcrb
or
xchg
mov
outsb
mov
xor
jmp
push
mov
data16
jae
sub
aas
rcrl
inc
in
mov
shll
mov
ss
in
mov
scas
pop
or
push
icebp
xchg
pusha
cmp
xor
cmc
mov
aam
xchg
pop
fimuls
sub
fldpi
ljmp
dec
imul
mov
and
bound
fs
fs
push
hlt
mov
mov
mov
fistpll
test
sub
xor
daa
xor
add
maskmovq
testl
ret
jp
in
aad
adc
sub
int
push
xchg
shlb
popf
mov
push
and
inc
mov
das
adc
das
cmp
lods
push
shlb
add
push
pop
xchg
cmp
mov
ret
add
out
paddsw
cmc
push
in
push
mov
jl
sahf
cwtl
pop
gs
jl
sub
fcoml
jecxz
punpckhbw
inc
sbb
push
dec
fldt
movsl
inc
stos
mov
loop
lret
mov
xchg
in
lcall
xor
das
xor
inc
je
jmp
das
imul
mov
jns
push
mov
jns
mov
mov
mov
pop
sbb
lcall
fwait
sarb
cmp
jo
push
mov
fdivrs
nop
fisubrl
mov
sub
xchg
sbb
arpl
add
dec
pop
dec
mov
in
push
or
add
rcr
or
push
sbb
mov
insb
mov
pop
inc
lds
push
mov
lahf
cmp
gs
push
or
fcompl
inc
testl
jnp
xchg
sti
std
or
and
jg
inc
xchg
cltd
adc
add
mov
and
repz
ret
xlat
pop
xchg
mov
inc
mov
ret
in
movsl
jbe
fcompl
inc
sbb
sub
imul
mov
lods
dec
rclb
sbb
jl
or
pop
push
mov
sbb
mov
mov
cs
dec
pop
ficomps
add
push
std
jmp
jge
push
sbb
popa
adc
fs
dec
dec
and
scas
pop
pop
cmp
pop
cwtl
fst
jmp
jae
lret
xlat
adc
iret
inc
xchg
aam
xor
shl
mov
fcoml
dec
inc
mov
or
fisttpll
fwait
xor
hlt
sbb
dec
jne
jne
jle
ljmp
or
je
adc
stos
popa
ss
enter
pop
sbb
aam
cmpl
rcrb
push
adc
lds
imul
popa
pop
jl
cmp
lods
out
hlt
adc
ljmp
into
dec
cld
ret
ljmp
pop
cmpsb
and
push
sub
push
cli
aaa
dec
and
repz
clc
cmp
idivb
es
pop
nop
arpl
cmp
sbb
in
js
lret
leave
subb
pusha
sbb
mov
loope
inc
xor
sbb
shlb
fnsave
or
pop
std
push
pop
push
leave
mov
aas
into
ds
jp
lods
jmp
dec
sub
pop
jmp
fidivl
data16
mov
mov
xor
test
pop
filds
xchg
add
ljmp
xlat
adc
loope
mov
loopne
lahf
rcrl
cmp
mov
mov
jo
sbb
jne
xchg
xchg
pop
add
outsb
lea
add
addr16
and
sub
sbb
xchg
cmpb
mov
test
pop
push
push
scas
fldt
xlat
inc
int3
pop
jns
loopne
in
lret
xchg
mov
cmp
add
inc
push
jmp
mov
es
push
test
mov
lret
shll
push
jne
stos
out
mov
fs
jb
pushf
cmpsl
push
lret
gs
mov
inc
cld
sbb
test
dec
sbb
scas
cmp
inc
mov
jne
shlb
pop
fnsave
or
lods
pop
loop
mov
cli
jp
sub
adc
loop
je
lahf
mov
mov
loopne
sub
xor
sarl
push
rorl
push
js
xchg
cli
arpl
cmp
ss
insb
xchg
push
pop
repnz
stc
cli
lods
xlat
mov
adc
cmp
add
lea
int
push
dec
das
xchg
cwtl
mov
pop
mov
enter
jb
mov
mov
out
add
clc
inc
sub
lcall
adc
jne
imul
push
fwait
and
mov
pop
pusha
fsubl
sub
mov
add
hlt
shll
xchg
sahf
rcrl
push
push
pop
xor
fsubl
aad
bound
inc
mov
cwtl
inc
int3
inc
mov
imul
nop
cmp
or
jmp
jmp
sbb
adc
and
mov
das
js
or
std
mov
inc
int3
pop
fmull
or
and
sbb
jecxz
cld
cld
es
lahf
clc
repz
stos
in
pop
sbb
jecxz
lcall
mov
mov
lcall
inc
xchg
dec
push
mov
jge
mov
mov
mov
inc
pop
jno
loopne
cmp
and
adc
xchg
inc
out
out
jae
dec
mov
iret
pop
js
add
push
cmp
cld
cmp
pop
inc
in
out
pop
cmpsl
ljmp
mov
lret
dec
adc
and
xor
addb
lcall
lods
push
fwait
xor
xchg
ljmp
mov
sahf
mov
xor
inc
rcrb
shll
and
xorb
dec
push
mov
test
jle
lods
fcos
jle
jae
xchg
pop
aad
mov
cltd
lods
outsl
xchg
movsb
int3
rcrl
loop
pop
xchg
and
mov
fisubs
mov
ljmp
insl
jae
lock
mov
pop
loop
iret
sub
mov
mov
aam
popa
or
mov
mov
and
mov
daa
add
mov
pop
and
lods
cmpsb
cmp
int3
div
pop
out
lock
stc
aaa
iret
sub
lock
lcall
add
sbb
dec
and
mov
outsb
dec
cmp
imul
or
mov
mov
inc
xor
mov
in
incb
out
data16
imul
inc
fidivrl
inc
fwait
xchg
pop
aas
sbb
clc
outsl
lods
lods
orl
scas
int
test
adc
cld
adc
and
out
data16
roll
enter
adc
shrb
out
mov
or
inc
adc
mov
or
dec
jbe
js
adc
adc
or
jns
xor
mov
jno
and
dec
inc
add
fbstp
add
lods
fdiv
flds
jns
or
loope
inc
or
xor
or
adc
jnp
fmul
sub
cli
aaa
mov
xor
or
fstpt
mov
mov
inc
cwtl
fsubs
cmp
push
ret
iret
mov
sbbb
aaa
sbb
ds
mov
cmp
push
jb
repz
push
and
arpl
xchg
repz
add
ret
clc
aad
xor
daa
pop
loopne
or
mov
mov
fwait
inc
mov
cmp
inc
stos
mov
cs
ss
aam
std
push
inc
xchg
pop
popf
xlat
push
mov
xor
sub
mov
xchg
xchg
adc
lods
ret
movsb
movsb
cmpb
adc
mov
cmp
cmpsb
stos
repz
in
xchg
mov
in
pusha
adc
pop
jecxz
lret
out
roll
ds
ljmp
push
mov
and
cmp
les
fwait
je
pushf
dec
jb
fsubr
mov
scas
mov
sub
jb
stos
lds
lret
pop
mov
adc
and
stos
pushf
pop
sub
cmp
imul
test
test
rorb
mov
cmc
adc
negb
repz
out
jge
or
sub
mov
adc
testl
mov
pop
push
xchg
push
or
fnstenv
ljmp
pushf
xchg
jno
lcall
repz
sub
adc
pushl
xor
out
pop
decb
adc
lock
jge
mov
cwtl
stc
ljmp
call
outsl
jmp
pop
in
rcrb
mov
fisubs
push
adc
addr16
and
test
sti
gs
arpl
inc
icebp
jnp
inc
pushf
add
xchg
mov
mov
xchg
cmc
dec
sahf
push
xor
pop
mov
sarl
movsb
fnstsw
pop
je
mov
adc
push
jp
push
push
mov
lret
xchg
xchg
mov
mov
cmp
subl
or
mov
push
jmp
ret
xor
and
sysenter
je
pop
mov
std
stc
jae
cli
xchg
aam
sub
push
bound
or
outsl
sub
aam
jmp
and
xchg
lock
lret
lods
imul
mov
in
pop
stos
mov
rcll
js
cs
adc
fisubs
shlb
scas
mov
jbe
inc
push
ljmp
push
cmp
push
push
bound
pop
cmp
int3
int
cmp
roll
ret
and
mov
pop
add
inc
push
vpmaxub
icebp
and
out
or
push
call
pop
mov
lret
cli
xor
push
jecxz
sub
ljmp
insb
jge
jecxz
jo
xor
push
dec
mov
sahf
and
push
push
std
dec
xchg
mov
cli
inc
xchg
pop
mov
xor
push
pop
inc
clc
movsl
fldenv
stos
in
je
sti
mov
cmpsb
jl
std
fistpll
sbb
movsb
bound
lods
inc
cmp
std
adc
or
.byte
