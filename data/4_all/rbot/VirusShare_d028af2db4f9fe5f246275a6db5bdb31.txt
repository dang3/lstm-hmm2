inc
xor
xchg
loop
fisttps
jno
push
es
repnz
insb
mov
sbb
dec
es
adc
jbe
cmc
hlt
pop
mov
inc
mov
mov
into
inc
sub
adc
push
sti
lret
out
dec
cs
out
fptan
popa
dec
fcoml
ljmp
xchg
stc
ror
mov
push
and
enter
insl
add
es
les
mov
mov
cld
sbb
fisubrs
sbb
in
push
jbe
mov
subl
bound
ja
or
adc
jns
out
cs
fisubrl
outsb
xchg
lahf
iret
push
sbb
insl
mov
sbb
stc
mov
cmp
mov
mov
lret
sub
bound
out
jmp
mov
loopne
mov
out
sarb
aas
shll
adc
inc
adc
pusha
xchg
outsb
fcoms
rcl
mov
dec
sub
push
jno
mov
adc
pop
repz
out
je
lock
clc
jno
sub
jae
or
xchg
push
test
xor
aas
sahf
in
stos
push
decl
push
mov
sti
sub
xor
xchg
jl
adc
mov
lret
and
push
jmp
rorb
add
sti
cmpsb
retw
jecxz
bound
mov
ret
neg
das
inc
cmp
mov
sbb
int
mov
mov
into
or
in
sbb
xor
mov
mov
insb
inc
sbb
xchg
loop
inc
mov
dec
out
adc
xchg
mov
imul
rorl
xchg
orb
xchg
icebp
xor
mov
sub
sub
dec
mov
fiaddl
sbb
push
mov
fsubp
lahf
and
repz
lahf
inc
sbb
sahf
inc
fildl
test
or
loop
repz
jmp
scas
inc
loop
aad
xor
add
push
and
inc
and
mov
in
and
push
mov
mov
jne
jbe
cmp
mov
stc
inc
mov
in
jecxz
mov
movsl
fisubs
fnstsw
mov
loopne
jle
decb
mov
xchg
loope
inc
push
add
fdivs
repz
out
and
pop
and
sti
push
mov
test
psubusb
sbb
repz
subl
fcomps
loop
mov
sbb
adc
sti
stc
daa
icebp
and
and
mov
push
inc
mov
push
pop
add
xchg
xor
ret
loope
rcr
lret
sub
lahf
push
jno
sub
sub
dec
mov
fs
pop
test
out
int3
repz
dec
into
mov
dec
in
add
loope
mov
jmp
out
jp
sub
out
sub
stos
xchg
ret
mov
cmc
ficoml
je
aas
jl
stc
dec
xor
out
or
dec
mov
push
xor
cmp
mov
insl
cs
stc
jg
mov
pusha
add
push
daa
mov
or
push
and
pop
rcrb
mov
fstl
das
push
test
fsub
enter
jb
push
lret
mov
shll
inc
push
mov
jecxz
push
int
test
jmp
nop
pushf
in
pop
movsb
push
das
mov
lds
inc
pusha
push
arpl
pop
roll
arpl
ljmp
sub
cmpsb
adc
dec
cmp
outsb
push
addr16
out
xor
aad
mov
xchg
jns
push
push
dec
negb
inc
jns
mov
add
push
cmp
xorl
xchg
or
mov
or
xor
lods
sbbl
mov
and
jo
cli
xor
lahf
sbb
push
push
sub
add
push
mov
dec
jo
aam
mov
aas
cmp
and
pop
jnp
jmp
sahf
xchg
and
iret
fstl
shrb
arpl
cld
pop
mov
push
lcall
xchg
add
mulps
push
cmpsl
adc
lds
sbb
rcll
xchg
xor
adc
repnz
mov
mov
sub
ja
sub
andl
xor
imul
jbe
inc
and
iret
ror
out
insb
mov
popf
mov
insl
xchg
aam
rol
push
out
das
cltd
shlb
push
dec
pop
push
addr16
ss
pushf
dec
ret
xor
sub
js
mov
test
and
xchg
lahf
fcoml
mov
sub
in
popw
xchg
mov
jmp
fisttpl
stos
push
inc
loop
xor
or
jae
sbb
xchg
jnp
outsb
sti
or
bnd
xchg
ja
int
ss
cmp
gs
jle
rcl
mov
push
jno
xchg
lods
pop
cli
or
arpl
add
movsb
or
adc
or
xor
cmp
stc
adc
inc
std
sub
lahf
lret
or
movsb
add
or
pop
mov
andl
mov
mov
shll
push
jne
test
mov
stos
adc
jns
jne
add
int
lret
xchg
nop
lret
sub
jge
stc
insl
jne
loop
cmp
scas
in
pop
pusha
jecxz
iret
mov
inc
or
cwtl
push
shrb
and
inc
in
insb
push
or
out
int
sbb
and
and
inc
nop
sbb
iret
inc
pop
fdivrl
jg
scas
dec
inc
xlat
int
sbb
xor
fcomip
mulb
scas
sub
insb
out
mov
cmp
add
push
cmpsl
mov
int3
pusha
and
popl
jg
arpl
xchg
addr16
test
jle
pop
push
movsb
ret
aas
das
and
xchg
aaa
push
movsb
xorb
divb
popf
mov
nop
out
cmp
out
push
loope
movsb
and
popf
int3
loop
adc
mov
xor
mov
addr16
push
jb
int3
xor
jne
xor
shrb
xlat
inc
es
in
xchg
pop
inc
push
mov
inc
out
lock
pop
fistps
jb
fadd
cmc
popa
or
cmpsb
push
iret
add
push
pop
pop
insl
fldt
aad
and
sub
cmc
and
test
testb
jns
add
ljmp
ljmp
aam
pop
xchg
xlat
sbb
jmp
movsl
adc
stos
div
mov
jnp
leave
arpl
lock
mov
iret
pushf
mov
popf
cmp
xchg
dec
mov
jmp
leave
sbb
xchg
sub
and
or
cs
inc
adc
pop
out
loopne
ret
mov
imul
daa
cld
in
fwait
pushf
pop
jne
sub
jb
pop
mov
scas
push
push
jns
mov
mov
and
mov
divl
dec
das
shrb
dec
or
loop
fimull
leave
inc
adc
addl
jae
jmp
sub
mov
jne
mov
das
or
aaa
or
or
push
inc
loope
mov
test
inc
loop
stc
shll
sub
bound
cmp
sahf
dec
mov
cwtl
jae
cmp
daa
fisttps
xorl
cwtl
mov
fistpll
jns
std
pop
dec
mov
repnz
cld
fxam
ficoml
shll
xorps
inc
ret
call
push
mov
or
je
addr16
mov
cli
sti
dec
mov
xor
xchg
popa
mov
mov
sub
adc
push
pop
add
rorb
pop
mov
add
rcr
scas
fwait
movsl
lock
jno
dec
leave
jns
sub
cld
in
je
popf
imul
inc
add
mov
jl
repz
rorb
dec
aas
aas
mov
cmp
xchg
dec
mov
arpl
sub
shl
movsl
dec
fistps
or
mov
mov
int3
stos
pop
or
mov
cmp
sbb
add
jl
xor
inc
ss
sbb
dec
lds
sbb
pop
enter
movsl
xchg
fcompl
jo
push
outsl
mov
jle
xor
dec
mov
pop
jmp
xor
pop
sub
pop
lcall
push
mov
js
fdivrp
andl
fcoms
and
cmp
pop
loope
adc
pmulhw
loop
sbb
pop
out
jg
lea
test
insb
push
mov
or
insb
ret
ror
add
xorl
cmp
jne
outsb
inc
negl
jecxz
aas
fwait
jbe
mov
test
test
dec
inc
das
and
mov
jne
loope
icebp
dec
mov
stos
push
popa
mov
mov
cli
fs
stos
mov
ss
adc
push
sub
gs
hlt
jle
dec
stos
push
inc
jge
stos
and
xor
jns
fs
mov
push
out
dec
and
sub
xor
add
sahf
loopne
xchg
sbb
popa
mov
lods
int3
jae
dec
sti
or
out
mov
les
and
test
pusha
std
push
int3
add
pop
out
lods
mov
sbb
dec
movsb
dec
jns
cmpsb
sub
imul
inc
push
aad
dec
mov
push
cmp
dec
and
push
sub
pop
jecxz
mov
push
sbb
and
popf
sub
dec
aas
lahf
push
mov
je
mov
add
xchg
movsl
push
and
pop
xorl
sbb
mov
push
pop
pop
xor
fidivl
stos
or
bound
loop
push
push
mov
ficoml
cmpsb
shll
push
pop
push
loop
mov
stc
cld
xor
int
dec
mov
fsub
fxch
gs
movsb
xor
xor
mov
pop
data16
fsubs
cltd
mov
sub
add
pop
outsl
insl
scas
gs
sbb
push
fwait
mov
sbb
popa
int3
loop
adcl
dec
push
push
push
repz
mov
pop
xor
pop
lret
mov
mov
push
xor
xor
mov
push
div
ja
decb
sbb
lock
pop
and
mov
les
push
jg
pusha
xor
sbb
mov
fwait
decl
inc
call
xor
ljmp
inc
pusha
dec
inc
jnp
dec
out
mov
dec
add
add
sbb
into
insl
mov
mov
mov
enter
lret
cmp
dec
and
test
adc
lods
pop
out
inc
pop
cwtl
mov
cwtl
inc
push
adc
fdivrl
inc
mov
dec
and
and
dec
push
pop
cmc
and
add
pop
popa
mov
lret
sub
out
xchg
sti
sahf
pop
inc
inc
imul
inc
dec
jne
in
out
icebp
sti
dec
mov
push
sbb
mov
outsl
add
lret
dec
out
test
adc
shlb
sbb
mov
jns
testb
in
ds
insb
mov
dec
jg
cmpsl
insl
daa
push
jbe
pop
jo
lret
pop
mov
sub
je
cltd
jo
fs
jns
ss
cwtl
or
insb
adc
cmp
sahf
imul
stos
daa
shrl
test
movsb
dec
and
pop
pop
mov
xchg
int
sub
scas
and
adc
out
lret
push
fidivrl
xchg
dec
test
enter
test
xchg
or
push
mov
cmp
sti
pushf
cmpsb
xchg
xor
lahf
dec
cltd
inc
mov
mov
rcrb
pmaxub
add
jmp
das
jge
and
imul
xchg
imul
push
imul
dec
in
xchg
add
movsb
jno
fwait
into
or
in
xor
fildll
and
leave
and
arpl
insl
xor
test
loopne
hlt
mov
push
bound
pop
stc
cld
mov
jo
shlb
nop
sbb
andl
lcall
test
mov
lods
popf
loopne
jb
pop
jg
sbb
inc
or
fnstcw
fimuls
arpl
mov
mov
lds
or
in
sbb
adcl
mov
jb
inc
push
stos
int
pop
xlat
cmp
sbb
movsb
ljmp
or
stos
and
xor
push
dec
pop
das
idivb
in
mov
xchg
cmp
bound
icebp
loope
repz
add
add
cmc
jecxz
fisttpl
in
or
fwait
in
mov
stc
out
lds
in
inc
data16
mov
loop
sbb
cmpsb
jno
xchg
imul
mov
test
testb
mov
lcall
mov
dec
jno
lock
sub
shrb
cmpsb
inc
roll
aas
fiaddl
xchg
not
popf
aaa
jl
mov
ja
jno
cli
insb
inc
jecxz
hlt
cmpsl
fsubs
jne
pop
aas
add
hlt
fnstenv
mov
sub
dec
rclb
cmpsb
inc
jbe
or
rorb
shrw
scas
in
insl
jge
pop
xchg
push
lahf
lods
inc
nop
mov
loop
or
inc
cwtl
or
pop
stos
push
mov
mov
cld
cmp
sbb
loopne
cli
stos
nop
nop
fisubl
inc
outsb
adc
xchg
imul
sahf
inc
arpl
push
outsb
dec
pusha
lcall
add
scas
imul
sbb
mov
mov
mov
pop
jns
aad
notl
popa
push
add
jp
mov
outsl
inc
adc
sbb
or
pusha
mov
mov
mov
mov
nop
mov
inc
imul
xchg
mov
mov
sarb
sti
and
aaa
ret
fnstenv
pop
jg
ljmp
loopne
bound
lret
xchg
ds
lods
les
ds
ficoml
and
jg
bound
sub
lcall
insl
pop
aad
mov
in
psrad
out
loopne
sahf
cmpsb
mov
and
dec
scas
scas
stc
jecxz
clc
xor
cmp
lret
lock
push
loopne
inc
jecxz
dec
in
xor
subb
lods
sbb
mov
ss
lret
std
xor
sbbl
getsec
push
outsl
clc
adc
add
push
outsl
imul
cli
imul
mov
and
ret
push
cmp
or
push
cmpsl
mov
rorb
xchg
mov
or
and
mov
pop
pop
test
xor
mov
loopne
add
sbb
pop
out
fidivl
call
addr16
mov
push
pop
insl
cvtps2pd
jmp
cwtl
xchg
sbb
inc
rcrb
clc
ds
jmp
out
xor
pop
movsb
mov
sbb
test
jo
out
cmp
mov
cld
cmp
js
fisttpl
mov
inc
fnstenv
call
pop
cwtl
mov
inc
sub
flds
add
adc
rolb
std
popa
in
jb
ja
dec
pop
push
push
fldenv
sbb
push
jae
rcrl
or
jmp
or
cmp
out
into
loop
mov
pop
mov
lret
adc
or
enter
lock
insb
cmp
mov
pop
push
push
ret
insb
pop
dec
inc
sti
stc
and
and
stc
ja
and
adc
fistpll
ja
shll
dec
sub
cmpsb
sbb
loope
xchg
stos
lods
pop
dec
dec
shlb
pop
xchg
add
lahf
jnp
jmp
pop
lods
sbb
xchg
fs
lock
insl
std
mov
pop
or
lret
out
aam
fucomp
sbb
add
xchg
insl
mov
inc
dec
shlb
test
mov
ret
jno
or
aaa
xor
push
pop
mov
je
pop
ret
pop
cmp
test
add
std
std
flds
adc
dec
push
pop
xor
inc
cmp
aaa
adc
push
jecxz
test
push
mov
cmpsb
andl
pushf
ret
sbb
jns
pop
int3
pop
mov
lods
xchg
outsl
xchg
cmpb
mov
sbb
aad
dec
ds
addr16
je
inc
push
testl
add
jns
pop
push
mov
cmp
popa
push
inc
popf
mov
movsl
mov
jge
js
andb
nop
out
push
adc
aas
outsb
jnp
ret
and
scas
sub
or
test
repnz
push
mov
mov
add
daa
movsl
leave
xchg
aaa
mov
sbb
mov
dec
cmc
aad
hlt
aam
aaa
pop
pop
dec
xchg
lds
out
int3
xchg
jnp
stos
das
mov
lahf
pushf
cmc
or
xor
sub
pusha
repz
mov
or
mov
in
gs
gs
divb
movsl
pop
dec
shrl
daa
cmp
cmp
mov
in
mov
push
sti
jp
sbbl
sub
xor
xchg
cs
add
scas
xor
cmp
sub
mov
std
cmpsl
add
pop
scas
jb
inc
sub
mov
lcall
ror
add
aas
xlat
rcl
mov
out
ja
cmp
lea
clc
cmp
mov
fiaddl
sub
fwait
in
adcb
mov
sarb
fists
aaa
movb
inc
xchg
mov
clc
lods
dec
les
ret
mov
orl
jg
jne
fwait
mov
pop
or
xchg
idiv
lds
loope
pop
sbb
or
fdiv
mov
lcall
enter
dec
and
cmp
mov
lcall
iret
arpl
inc
fidivs
fisubrs
sbb
pop
lock
xor
inc
dec
push
xchg
sarb
mov
stos
jge
sbb
rorl
xchg
and
in
sti
imul
mov
stos
add
jne
cld
repnz
inc
sti
push
test
mov
ficomps
adc
xorb
test
add
xor
xchg
mov
push
sbb
cmpsb
or
decb
cmp
loop
push
jmp
mov
stc
int3
or
call
xchg
cli
shrl
xchg
cs
xchg
pushf
les
xchg
push
daa
dec
cmp
fcoml
negl
aas
cli
call
jmp
mov
adc
ljmp
mov
cmp
test
jo
adc
lret
mov
or
cmp
jnp
mov
fdivs
jnp
or
push
loop
xlat
imul
jl
fs
mov
ret
jae
push
test
mov
push
inc
bound
lds
add
ret
xlat
jnp
pop
inc
mov
sbb
mov
sbb
shufps
push
adc
jge
ljmp
mov
dec
inc
inc
mov
scas
lods
adc
jb
push
mov
inc
mov
into
enter
jp
insb
rcl
jge
or
or
jnp
and
leave
pop
repnz
push
jg
jp
fisttpl
mov
or
and
push
or
jne
adc
sub
sbb
pushf
push
xor
leave
scas
xchg
dec
aaa
inc
push
rolb
sbb
and
and
mov
stos
add
or
in
lcall
and
pop
loope
or
mov
inc
mov
cmpl
or
mov
addr16
sbb
mov
and
dec
and
mov
lret
sub
pop
add
stos
mov
xchg
pop
outsl
shl
adc
and
pop
ret
mov
cmp
or
jl
or
cmc
push
call
and
lock
out
leave
xor
and
mov
xchg
mov
dec
pop
loope
stc
out
mov
inc
cld
jmp
add
push
mov
push
imul
cs
in
movb
mov
xchg
test
or
mov
xchg
or
sub
in
lds
stos
mov
cmpsb
addl
hlt
repz
cmpsl
jo
and
gs
cmp
cmpsl
aaa
popf
cwtl
ss
mov
inc
inc
push
out
in
and
cmp
fisubrs
hlt
in
nop
test
clc
push
mov
add
aaa
repnz
dec
stos
shrl
loop
dec
mov
or
inc
ror
xchg
adc
outsl
jbe
daa
mov
dec
dec
in
cld
daa
lea
mov
pop
mov
popa
mov
and
add
jg
jnp
jbe
lods
push
in
xor
mov
adc
fstps
movb
lahf
push
dec
sub
outsl
mov
lds
bound
repnz
jp
movsb
and
insl
cmpsl
mov
shll
push
iret
dec
xchg
fdiv
mov
jmp
lcall
xor
or
out
xchg
pusha
aam
mov
mov
jg
add
scas
testb
repnz
clc
jbe
cmp
cld
outsl
dec
aad
cmp
in
push
jg
idiv
subb
pop
sub
fucomip
test
ret
add
dec
in
sysexit
out
dec
pushf
lock
repnz
insb
sti
sti
fistps
stos
jle
add
bnd
inc
pop
jne
icebp
rorb
add
mov
jbe
push
rcr
sub
xchg
jo
xlat
sahf
add
enter
ds
lret
and
fcmovbe
dec
out
lods
mov
sahf
fs
inc
repnz
or
adc
insl
das
int3
xlat
ds
int
xor
sbb
mov
xchg
cmp
adc
mov
adcb
cli
pop
sub
inc
call
jo
aad
mov
jmp
sahf
pusha
into
cmp
jmp
arpl
jne
insb
jno
js
jecxz
jno
lock
inc
add
loopne
pop
or
sub
sbb
scas
pusha
or
xor
out
ficoms
scas
cmp
dec
mov
fistpll
lock
lret
and
icebp
out
mov
cli
mov
int
add
xlat
lahf
mov
fxch
xlat
mov
xchg
pop
shlb
adc
mov
cmp
jo
jp
pop
subl
jbe
jle
out
in
lock
in
scas
or
push
fimull
adc
xchg
sbb
and
cs
push
pop
int
sbb
jl
fsubrl
pop
xchg
es
cmp
nop
call
fldt
jnp
fmull
or
push
lods
mov
jae
sbb
jmp
xor
mov
pop
lret
stc
movsl
inc
mov
fdivl
sbb
jg
mov
stc
bnd
add
mov
xchg
push
das
clc
xor
push
clc
sbb
mov
cmpl
mov
add
scas
mov
sub
or
loop
cs
push
sbb
adc
sbbb
aad
dec
es
xor
push
mov
stos
imul
inc
xor
dec
and
shlb
sub
in
add
leave
into
sbb
mov
dec
or
fcmovb
cmpl
add
sti
add
adc
cmpsl
nop
test
lcall
add
mov
pop
push
icebp
js
sub
mov
ficomps
adc
xchg
xor
mov
or
rolb
xchg
pusha
jmp
and
test
jns
enter
jbe
sarl
aas
dec
rorl
addb
jns
data16
jle
incb
mov
test
or
out
xor
mov
add
mov
mov
insl
jbe
lock
cmpsl
cwtl
jnp
in
outsb
or
xor
shl
lcall
test
mov
mov
lahf
jecxz
sub
mov
lret
xor
sbb
pop
xchg
jp
mov
aad
jbe
adc
push
pop
adc
sarl
add
xor
and
sub
or
xchg
hlt
lcall
push
cmpsl
outsl
je
sub
fwait
stos
nop
sub
adc
fidivs
pop
xchg
fisubs
adc
jo
hlt
fcoml
les
xchg
rcrl
and
test
mov
cmc
adc
adc
fwait
sti
pop
test
iret
add
pusha
cld
outsl
outsl
xor
jnp
js
aaa
sti
sbb
lcall
adc
loop
iret
sarl
push
in
pop
mov
or
leave
bswap
and
adc
inc
and
dec
xor
jo
pop
arpl
inc
push
push
xor
ljmp
pop
std
divl
mov
js
and
fiadds
inc
mov
pop
lret
pop
pushf
lret
shll
dec
or
inc
mov
inc
shrl
sbb
jnp
mov
jmpw
in
sets
jae
jle
pusha
mov
test
dec
jns
inc
test
sub
cs
mov
adc
mov
ret
xchg
jae
add
dec
in
push
je
movsb
mov
ret
cs
mov
pop
popf
js
cmp
inc
sarl
cmp
mov
fsubr
fwait
adc
push
fsubrp
inc
push
imul
push
xchg
push
mov
mov
bound
adc
cmp
jbe
insb
adc
ficomps
and
xchg
scas
hlt
arpl
pop
push
adc
jnp
gs
sub
and
sbb
mov
nop
cmp
mov
icebp
ret
and
add
sbbb
mov
adc
sub
jo
str
sub
jae
loopne
mov
loope
sti
add
cmc
mov
xchg
jge
fs
and
add
outsb
int3
out
insb
jae
rcll
aaa
popl
fisubrs
lods
loop
xor
subb
cmp
ljmp
sbb
in
mov
sub
add
addr16
push
jl
inc
inc
push
pop
add
mov
pushf
rcll
mov
adc
out
in
and
loop
into
jnp
iret
push
jge
lret
add
insb
xrelease
mov
sub
ss
sbb
lock
std
dec
cmp
push
mov
test
or
jmp
andb
add
imul
mov
bound
cmp
ss
xor
mov
xchg
es
int
cmp
loopne
repnz
and
xchg
rcrl
das
into
pop
insb
adc
ljmp
enter
lods
mov
pop
rcll
xor
xchg
sub
push
sbb
aam
or
test
sub
cli
js
cmc
pop
jae
iret
imul
aam
dec
shrb
mov
add
ss
mov
fsubs
mov
pop
aaa
pop
and
movsl
push
test
dec
es
pop
mov
jmp
inc
sub
pushf
push
push
inc
imulb
rcrb
pop
rclb
lret
jecxz
imul
and
cmp
popa
mov
pop
and
xor
xchg
ret
mov
lret
loopne
ds
inc
jbe
mov
ds
ss
inc
xor
in
xor
cmc
adc
mov
pop
sarb
lcall
sbb
pop
pop
jmp
sbb
jl
and
push
cltd
loopne
loopne
std
and
stos
addr16
in
mov
sarl
sbb
aad
fstpt
add
sbb
inc
das
adc
add
jecxz
push
test
inc
int
iret
mov
in
lods
popf
enter
sbb
mov
adc
mov
mov
fdivp
sbb
aaa
int3
xor
orl
or
dec
inc
mov
push
push
dec
rorb
mov
aam
enter
pop
mov
jns
icebp
shrl
xchg
notl
add
inc
pop
pop
testb
jmp
gs
jb
pop
adc
popf
fildl
popf
outsb
cltd
cmp
push
jle
ss
pop
fxtract
loope
cmp
mov
ljmp
fwait
sub
pop
and
sbbb
xor
sub
dec
les
mov
test
sbb
cmc
pop
mov
and
xor
aas
sbb
test
movsl
jbe
jb
sbb
sbbb
xlat
mov
into
lea
sbb
jle
xchg
shrb
in
sub
insb
fcomps
adc
mov
mull
clc
sbb
jno
or
xchg
loope
and
hlt
jge
in
fildl
imul
hlt
cmpsl
leave
sbb
push
fadds
mov
adc
loop
int3
out
cmc
clc
aas
and
pop
in
mov
sbb
or
pop
and
jl
aaa
push
es
insb
xchg
push
and
cmp
xchg
hlt
addl
loopne
mov
or
call
push
sbb
aam
scas
mov
lret
mov
stos
ljmp
and
or
pop
ljmp
dec
sbb
dec
jne
mov
pop
jae
dec
mov
pusha
and
pop
ljmp
dec
mov
cli
jecxz
xchg
adc
xor
pop
sub
pop
aas
sbb
and
pop
movntq
loopne
xchg
sbb
push
mov
test
stos
push
test
in
sbb
les
in
push
dec
add
xor
sbb
roll
mov
lods
inc
in
jo
dec
int
mov
ljmp
scas
mov
mov
sub
lock
mov
mov
xor
imul
push
loopne
ret
out
daa
sub
jbe
and
in
jno
cmp
xchg
incb
jg
les
xchg
push
std
xchg
and
xchg
and
out
sahf
mov
int3
mov
adcb
out
xchg
pop
test
or
push
sbb
jbe
testb
mov
jle
fimuls
fdivrs
ficompl
stos
leave
popa
insl
xor
push
pop
adc
dec
popf
push
pushf
sbb
and
cmp
xchg
pop
fildll
push
lcall
push
push
pushf
xor
mov
stc
lret
pop
lcall
inc
adc
fisubl
outsl
mov
mov
fistpl
dec
test
ljmp
sarb
pop
sahf
jb
push
lahf
push
inc
lahf
jnp
jnp
push
cli
jb
int
imul
fisubrl
cmp
fldcw
in
xor
cmpsb
xlat
mov
addr16
dec
jno
call
adc
sub
xchg
ja
stos
int3
loope
je
dec
mov
dec
push
push
mov
insb
xor
add
jb
jnp
mov
popa
rcll
shll
lods
sub
sub
jl
push
add
push
mov
enter
loop
pop
cmp
dec
mov
jle
dec
dec
sahf
sbb
mov
sbbl
sub
xchg
mov
mov
mov
dec
sub
mov
scas
rcl
sbb
push
movsl
xchg
mov
adc
xchg
lret
push
jecxz
dec
sub
pop
stc
cmp
iret
mov
inc
insl
push
icebp
pop
or
cmpsl
movsl
lahf
mov
rorl
dec
dec
mov
add
jp
xchg
pushf
lods
sahf
rolb
ret
cwtl
sbb
ja
pusha
nop
movsb
imul
cs
roll
jno
pop
inc
jne
fdivp
lret
dec
mov
ljmp
xlat
lock
xor
in
sbb
js
jb
jecxz
les
out
add
sbb
sbb
mov
xchg
adc
ret
jg
fmuls
pmaxsw
mov
ljmp
into
mov
mov
sahf
lcall
ret
and
mov
inc
mov
dec
fisubrs
add
enter
dec
dec
inc
xor
cmpsl
jg
lahf
clc
push
jae
rolb
enter
ljmp
xor
mov
lret
imul
jmp
or
iret
fdivs
mov
andl
mov
or
and
cmp
roll
imul
rorb
movsb
push
inc
rclb
insb
dec
adc
push
or
je
pop
test
insl
cmp
pop
mov
push
mov
mov
adc
data16
ficompl
or
sbb
mov
inc
pop
cmp
mull
mov
decb
cmc
sbb
dec
in
mov
lret
loope
je
std
imul
mulb
lods
aas
inc
rorl
adc
loopne
xor
insb
xchg
outsl
sar
xchg
push
cmp
aas
shlb
xor
add
fistpl
jb
mov
nop
and
mov
sub
dec
push
mov
mov
movsb
mov
and
shl
push
add
mov
in
jbe
dec
gs
push
adc
adc
or
outsb
js
divl
mov
daa
stc
push
mov
sbbb
and
jecxz
push
cmpsb
push
sub
fiaddl
icebp
std
or
or
popa
inc
lods
lods
xor
sarb
push
xor
fwait
out
mov
movsl
ds
mov
push
mov
push
dec
xlat
aad
iret
loope
pop
loopne
jne
push
test
loope
and
popa
es
sbb
call
dec
add
popa
out
lahf
sbb
jg
and
push
add
sarb
jecxz
mov
add
dec
and
mov
jle
das
dec
imul
arpl
xchg
insb
pop
pop
andb
imul
inc
pop
pop
cli
leave
cli
pop
fwait
scas
test
push
scas
adc
push
jo
ja
aas
or
and
sub
pop
dec
loop
call
xchg
lods
inc
add
addr16
jmp
lock
lret
dec
jmp
test
fidivrl
and
adc
lock
dec
dec
pop
xchg
adc
jo
cmpb
mov
sbb
add
sbb
jno,pn
xchg
cmp
mov
dec
jle
shlb
cmp
cmp
add
push
pop
test
sbb
ss
shll
and
negl
push
addl
dec
pusha
pop
inc
into
cmp
loopne
push
and
stos
int3
insl
or
jno
daa
jno
int3
fimuls
jae
repnz
jae
mull
out
xchg
pop
jo
or
loope
stos
or
repz
ja
push
testl
testl
inc
shlb
add
cltd
adc
xchg
xchg
in
adc
xlat
xchg
insb
jg
sub
bound
addr16
adc
test
imul
mov
dec
and
xchg
sub
std
adc
pop
mov
ja
leave
jmp
es
and
hlt
shlb
cmp
or
insl
cltd
pop
cld
dec
jge
cmp
das
decl
push
fstps
inc
xchg
decb
mov
aad
stos
testb
push
pop
inc
rol
jle
mov
adc
loop
push
add
movsl
dec
mov
stos
push
push
sahf
leave
testb
xchg
movsb
in
clc
aas
xchg
mov
pop
lret
mov
mov
testl
or
and
addr16
popf
in
mov
lret
or
fidivrl
stos
scas
clc
shl
daa
adc
xor
test
out
dec
jge
mov
jge
out
dec
in
int
add
mov
push
ds
data16
add
bound
into
in
and
rcrl
aas
push
add
add
mov
movsb
add
cwtl
cmp
lahf
call
mov
pop
xchg
adc
lea
addb
mov
jg
adc
in
xor
push
mov
and
cmp
int3
jge
dec
nop
add
xchg
inc
xor
xor
push
cmp
push
dec
je
sub
icebp
cwtl
shll
jbe
mov
mov
in
inc
adc
out
dec
xlat
sub
adc
hlt
push
sbb
je
mov
and
ss
inc
mov
sahf
test
insl
mov
cmp
push
xor
ret
cmp
push
or
add
test
push
fistpl
inc
std
sbb
lock
in
mov
push
loopne
loopne
lret
cld
les
mov
sub
lea
inc
jge
leave
adc
pop
or
aad
xchg
add
js
lcall
jg
pop
cmp
mov
push
push
push
sbb
icebp
insb
sub
aaa
lret
call
enter
pop
adc
cmpsl
test
mov
pusha
in
cmp
sahf
imul
cmp
adc
inc
inc
sahf
mov
jmp
dec
mov
fdivrl
ds
out
rcrb
push
sub
outsl
cs
fwait
imul
int
jle
int3
cs
push
sub
cmpsl
cmp
imul
sti
aad
repz
adc
or
sti
jp
test
push
mov
cmp
bnd
hlt
aam
dec
ret
mov
cli
in
int
pusha
inc
dec
pop
subl
mov
dec
jecxz
in
cmpsl
adc
push
mov
ljmp
jg
test
loope
mov
lahf
daa
popa
jmp
or
stos
inc
mov
stos
xlat
xchg
inc
jns
or
adc
or
xchg
add
cmp
ret
sub
notb
xchg
xor
xor
push
mov
in
popf
aas
jo
inc
arpl
popl
mov
loop
mov
jno
data16
or
test
jmp
mov
xchg
cmpsb
xor
aam
sbb
mov
ja
test
leave
mov
dec
movsl
xchg
inc
je
jg
aas
pop
push
sub
lea
xor
adc
mov
popf
pop
xchg
into
mov
sub
dec
sub
je
jmp
jae
lea
xchg
dec
sub
mov
sub
push
test
enter
inc
or
test
adc
inc
inc
imul
jno
rcr
cmp
or
push
inc
ljmp
fcoms
sub
fwait
sahf
cli
fs
or
dec
or
jp
jp
pop
mov
xor
repz
pop
shrl
inc
or
ss
add
sub
scas
test
aad
hlt
jle,pn
pop
imul
repz
out
clc
cld
je
mov
push
xor
mov
into
nop
push
adc
outsb
sub
mov
add
lret
repz
push
ljmp
xchg
movsl
adc
addr16
jle
negb
hlt
movsb
inc
dec
xorl
sub
lea
mov
fcoms
adc
xor
addl
scas
rcll
jmp
xorb
lea
jmp
inc
aas
and
daa
mov
and
ficomps
adc
inc
pop
insl
in
jb
std
out
movsl
cli
sbb
mov
test
std
or
push
test
inc
fstl
out
fs
xchg
testl
in
je
incb
push
lods
mov
addl
fists
scas
ds
pop
adc
addr16
cltd
jno
test
dec
and
popa
lret
loop
ficoml
faddl
fsubp
pop
pusha
add
cltd
and
push
aam
aad
fimuls
add
push
imul
inc
das
in
lahf
fcmove
or
addb
inc
enter
and
sbb
shlb
adc
dec
pushf
out
std
sub
fists
insl
out
mov
loop
sub
cmpsb
mov
jno
push
xor
icebp
mov
es
scas
and
jno
orw
imul
iret
and
push
lret
enter
and
loopne
scas
sub
inc
jg
mov
jbe
mov
lahf
mov
and
push
mov
add
pop
stc
cmovns
pusha
jnp
xchg
xchg
mov
cmp
out
jno
es
bound
cs
ret
iret
push
dec
in
jnp
dec
pop
dec
pop
hlt
jbe
mov
cmp
lret
add
jno
sbb
popf
adcb
dec
into
push
mov
scas
fidivs
or
cmp
in
in
sub
fwait
sub
mov
movsl
arpl
push
mov
ret
inc
outsb
cmp
sahf
xchg
ret
popf
je
jmp
or
jmp
std
jb
dec
inc
cmc
mov
shr
imul
cmp
lret
pop
xchg
idiv
xchg
mov
arpl
inc
call
enter
xchg
jmp
lret
int
adc
mov
imul
and
or
xchg
clc
ret
push
push
movsl
mov
lahf
cmp
and
push
outsl
or
inc
mov
pop
dec
std
in
pop
xchg
repz
out
insl
pushf
aaa
cmpsl
insb
orb
cmp
jle
jnp
xchg
repz
or
adc
fldenv
mov
ljmp
sbb
es
pop
inc
jmp
jp
test
mov
mov
add
xor
sbb
lock
mov
stc
fstps
mov
in
push
shrb
aad
lcall
in
loope
gs
movsb
fwait
add
mov
imul
mov
adc
dec
nop
ds
out
iret
inc
iret
outsl
ja
lds
pop
or
lods
inc
xor
sarb
and
cmc
fwait
mov
test
push
sbb
int3
sbb
dec
xchg
xchg
adc
sbb
jns
js
dec
sti
in
daa
cs
rcrb
ljmp
mov
dec
cmpsb
push
or
mov
js
ss
add
divl
stos
mov
fidivl
pusha
data16
arpl
jo
decl
popa
inc
test
sbb
sti
or
adc
or
push
movsb
lods
mov
and
jp
scas
mov
adc
sub
imul
lcall
pop
inc
mov
pop
cmpsl
jp
das
pop
cmp
mov
lret
cmp
sub
jg
stc
sub
adc
fmul
and
call
pop
dec
inc
mov
jo
or
dec
outsl
add
iret
ret
inc
fwait
pop
insl
or
add
fs
xchg
cs
and
not
cltd
push
sbb
mov
mov
ja
cmpb
jbe
stos
xchg
adc
ficoml
jne
icebp
lea
mov
movsb
inc
jns
repnz
fwait
push
inc
pop
ljmp
pop
xchg
pop
dec
pushf
lds
mov
loopne
jae
sbb
mov
test
enter
mov
leave
lods
sub
scas
xlat
fs
lods
add
call
mov
movsb
je
and
mov
movsb
and
test
movsl
sbb
cmp
mov
push
xor
xchg
sub
out
sbb
inc
adc
test
test
adc
mov
arpl
dec
sbb
inc
adc
mov
push
adc
jbe
out
jnp
decb
mov
jle
je
int3
loop
jg
daa
daa
mov
lret
clc
adc
aad
lods
nopl
mov
mov
xor
das
sub
cld
mov
mov
jbe
loope
loopne
jle
mov
push
pop
push
cmpsb
stos
cmp
pop
sbb
pop
cmp
cmp
cmpl
stos
add
cmpsb
in
or
fsubl
jle
jecxz
xchg
out
jne
fildl
xlat
inc
sbb
hlt
out
ja
es
or
sbb
out
jnp
dec
push
sbb
stc
inc
cmpsb
add
dec
mov
ds
jns
jg
dec
lahf
aaa
jmp
inc
sbb
push
lret
mov
mov
pop
dec
mov
push
test
loop
sbb
lcall
jge
push
mov
rcrl
les
sbb
push
clc
jnp
or
adc
cwtl
icebp
xor
xchg
outsl
sub
mov
out
jp
inc
sbb
aas
in
mov
imul
and
fadd
or
shll
shlb
mov
jmp
sbb
mov
mov
ds
repnz
inc
and
cmp
imul
mov
hlt
enter
mov
mov
jmp
jb
fisubl
xlat
mov
shl
or
in
movsl
xchg
mov
shr
mov
pop
inc
cld
adc
sub
stc
pop
mov
fcomip
mov
vpshld
in
push
push
aas
mov
inc
cmpsl
inc
cmc
les
in
jge
jp
lea
sti
mov
cmp
mov
sbb
push
sub
push
sarb
aaa
aas
cli
mov
mov
loopne
inc
filds
mov
xchg
sub
scas
mov
test
cmp
mov
and
jge
mov
arpl
xor
js
and
mov
xchg
pop
repz
lock
daa
in
cmove
add
jp
fimuls
sbb
lea
imul
test
inc
add
pop
out
xor
jae
jne
mov
dec
mov
mov
lock
je
andl
mov
mov
mov
in
pop
mov
ret
push
pop
test
cpuid
lret
out
cmp
cld
add
xchg
cli
rcr
sbbb
push
mov
enter
sarb
ljmp
repnz
or
pop
push
push
sub
adc
jns
xlat
pop
pop
xor
mov
or
sti
adc
je
pop
jno
and
pop
leave
push
and
cmc
repnz
je
scas
xchg
es
push
pop
repz
mov
push
leave
xor
dec
pop
mov
lcall
nopl
jnp
push
popa
jne
inc
pop
mov
pop
sub
add
xchg
push
cmpsb
pop
insb
pop
inc
pop
mov
mov
mov
clc
xchg
lds
das
sbb
jne
fisubs
stc
loop
addr16
addr16
mov
bound
loopne
loop
imul
mov
mov
add
test
call
inc
dec
mov
xor
jno
repz
lea
push
test
rcr
xor
nop
mov
fbld
pop
jecxz
cmp
mov
sub
lret
jns
mov
and
dec
add
pop
scas
daa
scas
hlt
or
popa
fisubs
lds
push
in
xchg
mov
xor
movsl
mov
mov
movsb
mov
mov
test
outsb
fsubs
or
loopne
lret
mov
aas
aam
mov
xchg
cltd
and
jne
pop
dec
push
add
adcb
aam
mov
nop
mov
add
inc
out
out
cmp
test
adc
cld
inc
cmpsb
pop
fnstsw
pop
stos
pop
add
xchg
sbb
stos
cmpsl
push
xor
xor
jbe
mov
mov
scas
xchg
cmp
xor
pop
aad
dec
or
out
sub
push
adc
inc
fisubl
repnz
stc
enter
cmp
push
and
leave
dec
xor
lods
or
mov
aas
jno
js
testb
and
and
inc
sub
loope
and
outsb
mov
mov
je
mov
or
out
and
rcl
pop
mov
in
aas
sub
mov
aas
insb
dec
sbb
fsubrl
and
or
xchg
lcall
out
in
ljmp
mov
cmp
int
mov
outsl
test
mov
fisttps
scas
in
ds
rcll
dec
jno
in
add
and
pop
addr16
jnp
fstps
test
data16
pusha
cli
push
jle
stos
sub
test
or
ljmp
fs
les
dec
mov
repz
test
cmpl
sbb
in
mov
jmp
test
in
or
push
out
xchg
je
fdivrs
cwtl
inc
repz
jl
mov
aas
adc
je
jne
sub
in
lcall
xlat
daa
push
mov
fwait
or
adc
inc
jo
addl
add
xor
loopne
rorl
icebp
jno
add
dec
jno
xor
inc
mov
push
stos
mov
lcall
sub
or
into
mov
out
add
pop
fptan
outsl
dec
jne
idivl
jg
mov
cmp
das
hlt
mov
push
adc
inc
inc
popf
push
jne
jmp
mov
cmc
mov
mov
dec
popf
jno
lret
push
popa
cltd
pusha
shrl
out
sbb
rorb
cmp
inc
cmp
movsl
and
sbb
rol
iret
mov
pop
pop
daa
xchg
scas
xor
adcb
mov
sbb
insb
dec
mov
sub
rcrb
inc
inc
mov
push
cmp
shll
lcall
sub
mov
ja
add
or
push
mov
insb
out
adc
adc
movsl
add
add
outsb
inc
cwtl
and
cmp
adc
push
mov
cmp
outsb
enter
lret
dec
push
nop
pushf
push
add
dec
jmp
jmp
je
scas
xchg
outsb
mov
xor
pushf
adc
fwait
ljmp
jmp
push
sub
push
cli
arpl
cli
lods
mov
inc
and
xor
std
arpl
push
nop
les
addr16
mov
push
hlt
inc
cmp
pop
push
jg
lock
inc
adc
imul
mov
xchg
jge
dec
cwtl
push
pop
in
andb
xchg
lods
repz
mov
jnp
pop
push
pusha
mov
push
dec
shufps
jne
gs
mov
mov
cmp
push
imul
cmp
andl
xchg
test
ja
ficomps
sub
gs
adc
addl
jge
stc
scas
imul
fst
add
or
lea
push
push
adcl
aam
push
aaa
int
aas
jecxz
fwait
push
mov
imul
addl
add
ss
xchg
dec
sti
or
arpl
adc
sub
in
sahf
mov
mov
fcoml
shl
repz
xchg
std
jbe
and
mov
addr16
push
cs
adc
or
push
mov
push
mov
dec
mov
imul
jo
imul
scas
aad
xorl
sbb
pop
fcoms
push
and
mov
jne
xchg
xchg
add
pop
dec
xor
cmp
stos
pop
pop
jo
js
lock
push
mov
xchg
cmpsb
test
lret
fstp
stos
mov
mov
jmp
call
lret
sbb
inc
add
mov
call
js
pop
dec
xor
in
rorb
mov
mov
ret
push
insb
sbb
icebp
xchg
xchg
jnp
sahf
fcmovbe
mov
ljmp
cmp
lcall
jns
aas
out
push
cmpsb
dec
and
aas
xchg
dec
pop
lock
outsb
sub
call
pop
mov
fbstp
imul
fs
loope
sbb
inc
mov
xchg
mov
mov
flds
xlat
fsubrs
inc
sub
or
lds
iret
fadds
popa
push
fucomp
and
inc
dec
push
mov
sub
ret
dec
push
pop
lea
xor
inc
adcl
bound
flds
sbb
int
mov
push
xchg
jo
push
jmp
push
jae
xchg
es
inc
shrb
mov
in
add
addb
inc
ja
mov
cmpsb
or
fsubs
push
dec
mov
lods
xchg
ror
push
sub
flds
sarb
or
repnz
add
jnp
xor
and
push
fucompp
inc
lret
cmp
dec
sbb
xchg
out
cmc
add
lods
push
movb
call
leave
pop
push
ljmp
lock
mov
cmp
xchg
xchg
push
pushl
add
xchg
push
and
mov
xor
push
out
leave
mov
lods
in
fnsave
push
sbb
jae
pop
jge
inc
sub
notl
pop
ficomps
jecxz
addl
popf
jmp
dec
cmpb
shrb
jno
insl
lahf
mov
in
inc
cmp
jg
mov
cmc
nop
sbb
and
aas
aam
cmp
rcrb
xor
pop
pop
cmp
jecxz
pop
dec
jmp
or
pop
pop
and
and
jecxz
cmpsb
dec
in
insl
dec
out
std
gs
jno
mov
imul
imul
or
mov
xchg
mov
sub
xchg
mov
mov
mov
insb
pop
bound
in
or
testb
lret
xor
sub
inc
nop
sbb
fwait
sub
popf
sub
cmpsb
es
push
mov
dec
loop
pop
movsb
out
sbb
daa
cmp
jge
loop
scas
sti
rorb
in
orl
mov
pop
sbb
cmp
adc
inc
std
popf
pop
jns
repnz
rcll
mov
not
jmp
sub
xchg
add
pop
sub
dec
stos
in
sub
xchg
push
sahf
loop
insb
mov
imul
mov
pushf
inc
inc
sahf
notl
enter
insb
lret
add
push
pushf
lret
cmp
jno
push
iret
xchg
mov
pusha
movsb
jb
iret
cmpb
sbb
dec
cmp
adc
iret
inc
xor
popa
mov
ds
xchg
and
cli
push
fld
mov
cmp
lock
sub
xchg
jl
dec
cmp
lret
mov
add
fdivs
jp
sub
mov
cld
mov
fnstenv
push
loopne
dec
in
xor
xor
inc
cmp
out
repnz
into
cs
and
fnsave
mov
pop
and
sub
fildl
divl
mov
repz
aam
enter
andb
fyl2xp1
movsl
mov
and
jmp
mov
xor
fnstcw
insb
insb
jb
pop
adcb
jmp
arpl
cmp
push
xchg
mov
stos
fldcw
rorl
aam
mov
lock
rolb
push
mov
inc
std
dec
cmp
cmp
xchg
adc
inc
and
jmp
dec
sahf
sub
or
in
xor
sbb
xchg
in
mov
cmp
push
xor
xor
sub
repz
or
mov
dec
stos
out
or
outsl
push
cli
in
cmp
clc
or
je
pop
push
shrl
subb
imul
xchg
and
and
leave
andb
sbb
cwtl
rolb
pushl
pop
dec
adc
stos
lcall
mov
fldenv
jl
push
sub
lcall
sbb
jb
xor
das
pop
idivb
or
dec
xchg
and
shl
subb
mov
and
dec
pushl
pop
cmp
scas
fcmovnbe
fidivs
test
sbb
inc
push
roll
inc
dec
shr
lods
sahf
cld
fldcw
fs
in
divb
xor
daa
movsb
roll
sbb
inc
mov
iret
xor
aam
add
lods
xchg
dec
roll
add
pop
fsubr
jno
mov
movsl
insb
and
es
ja
jne
data16
pop
loop
jg
popa
or
pusha
inc
inc
sbb
add
sub
mov
ja
into
mov
add
add
pop
ja
xchg
push
push
mov
sbb
push
dec
sar
jno
cmp
insb
pusha
jns
scas
cs
mov
ret
lcall
sbbl
arpl
lret
mov
jg
and
xor
jle
inc
clc
jo
inc
adc
test
aas
mov
or
out
loope
dec
adc
dec
push
in
mov
pop
cmp
dec
in
add
ds
aad
nop
push
mov
jecxz
add
inc
inc
jp
jo
cwtl
or
jg
mov
addr16
das
inc
cltd
cmp
movq
adc
jge
loope
or
push
xchg
mov
jno
add
jle
std
or
sti
mov
adc
or
xor
jmp
int
into
adcb
aas
mov
jmp
inc
aam
sub
mov
sbb
cmp
jbe
orb
push
xchg
dec
cmpsb
lret
push
jl
outsl
xor
cmp
daa
mov
repz
inc
xor
test
hlt
sub
mov
lcall
pop
sbb
fwait
mov
enter
rolb
test
outsl
stos
pusha
sbb
push
jge
jl
aad
push
movsl
hlt
lea
adc
pushf
mov
xchg
rcr
cmp
loop
jno
data16
arpl
leave
jecxz
lret
lock
push
fistl
test
leave
and
sti
mov
push
fucomp
shlb
xor
xor
sahf
cmpsb
stos
je
mov
mov
cmp
or
push
shlb
pushl
cmpl
jno
cli
in
push
mov
jl
xchg
pop
xchg
mov
out
pop
scas
sar
jns
sbb
xor
test
pop
popf
pop
mov
cltd
data16
repnz
loope
scas
cltd
add
aaa
fwait
repnz
sub
xchg
popa
xchg
sbb
insb
jne
mov
sbb
or
or
and
pop
jbe
cmpsb
imul
push
daa
arpl
int
push
jg
fwait
fs
dec
xor
rcrb
movsl
out
xchg
sbb
dec
jg
sbb
xchg
mov
data16
mov
mov
rcl
cmp
jno
ficompl
jl
mov
xchg
push
and
inc
stos
push
adc
iret
push
mov
jl
aas
das
xor
fiaddl
sbb
cmp
minps
cmpsb
in
js
hlt
or
fiadds
mov
das
mov
jecxz
out
dec
rcl
sub
int3
adc
dec
mov
clc
xor
inc
jge
aaa
pop
mov
and
out
push
cmpb
shlb
push
test
cmpsl
or
sub
movsl
xor
xchg
loopne
and
daa
mov
mov
mov
aad
and
cmp
jbe
push
outsl
sahf
push
xchg
adc
sub
mov
xchg
ret
cltd
aam
mov
cmc
add
mov
addr16
movq
ja
jo
mov
cmp
jp
insl
mov
dec
cmpl
pushf
mov
xlat
and
mov
pop
inc
addl
add
orl
jle
mov
setnp
inc
push
out
ret
mov
and
js
adc
inc
xor
outsl
inc
jbe
fldt
ljmp
insb
mov
xor
sbb
mov
jl
mov
das
mov
dec
mov
je
sbb
pop
jo
xor
fsubrl
inc
inc
xchg
lds
popf
mov
mov
mov
mov
call
jnp
outsb
inc
jmp
add
jae
ret
or
outsb
lret
rorb
inc
sbb
sub
or
dec
cld
jne
pusha
adc
sub
xor
ret
popa
xchg
and
loop
adcl
sub
int3
aam
stos
inc
data16
dec
jg
fstpt
jns
daa
lret
js
imul
add
mov
fmull
or
mov
adcb
cmp
ljmp
push
xor
dec
in
or
jp
or
sub
out
cmc
mov
lcall
or
pop
add
lods
add
mov
aam
adc
sub
inc
sub
mov
cmp
test
push
or
adc
js
cmp
xchg
out
stc
dec
mov
lret
mov
mov
scas
mov
pop
rcrb
stos
jp
adc
imul
mov
ret
outsl
enter
test
jns
cs
shrl
cmp
pop
rcll
outsl
push
push
ljmp
sbb
cmc
sbb
bound
and
jl
mov
push
mov
sbb
jne
sti
std
shl
inc
dec
cmpsb
adc
repnz
sub
or
or
ret
cmc
in
test
std
xor
ret
hlt
jmp
pop
xlat
mov
dec
mov
xchg
ds
adc
fildl
pop
xchg
enter
call
fsubl
inc
mov
lahf
inc
adc
testl
addl
cmp
adc
scas
rcr
fisubl
or
mov
jne
jns
imulb
lea
or
sbb
cmpsl
mulb
iret
mov
rcrb
aas
or
adc
leave
dec
movsl
mov
cwtl
addr16
jmp
push
popf
cwtl
stos
sub
adc
in
js
test
cmc
popa
ss
jae
jp
movsl
jo
ret
subl
jbe
outsl
fidivs
ja
jle
push
scas
mov
jle
les
jge
mov
sqrtps
jb
fmul
dec
mov
jns
pop
popf
push
inc
xor
sub
loopne
enter
push
int3
int
cmp
add
loopne
add
in
mov
inc
mov
add
sbb
out
negb
sbb
adc
loop
mov
sbb
jnp
jl
pop
jae
xchg
mov
inc
xchg
xchg
out
fstps
out
and
jge
sub
xor
mov
dec
xor
and
xchg
push
add
shll
pop
lea
jne
fs
xor
ret
mov
fs
test
lds
popf
sbb
sub
sub
push
into
xchg
movsl
jno
leave
sub
int
je
mov
shrl
mov
ret
inc
adc
and
std
sub
push
test
cmp
stc
pop
ss
dec
xchg
mov
and
jecxz
add
loope
test
push
daa
push
hlt
cmp
fwait
in
xchg
inc
sub
fstpt
mov
in
sub
fnsave
or
add
out
lods
push
or
sub
movsl
mov
ffree
sub
mov
mov
leave
sub
adc
push
jno
popa
aam
repz
lock
cmpb
shlb
mov
addr16
pop
mov
and
pop
aaa
stos
sub
imul
ret
xchg
adc
jnp
into
pop
test
aaa
pop
lcall
xchg
cmp
and
hlt
lret
les
mov
adc
dec
sub
mov
daa
sub
mov
test
cmp
aam
jne
ds
out
cmp
and
pop
pop
cwtl
pop
je
jmp
scas
pushf
mov
adc
jle
scas
loopne
push
aas
inc
sbb
bound
icebp
push
cmpb
mov
gs
clc
xchg
or
sbb
imul
or
pop
movsl
mov
xchg
fs
stos
lock
and
stos
mov
ds
jns
cmp
outsl
jo
inc
dec
push
push
lea
cmp
mov
mov
stos
out
int
mov
mov
mov
sbb
inc
subb
adc
sti
fistl
ss
jmp
fucomi
mov
pop
sbb
out
adc
and
test
loop
addl
outsl
in
dec
jle
in
mov
xchg
push
sub
dec
jo
push
cmp
aaa
push
arpl
cmp
pop
mov
aaa
jbe
cmp
dec
jbe
fs
xchg
xchg
xchg
inc
div
clc
pop
pop
mov
sub
and
push
fcomip
mov
fisttps
mov
xchg
fwait
ljmp
pop
rcl
or
and
fs
sub
lahf
and
add
or
inc
jmp
dec
lea
and
pop
dec
es
dec
lea
mov
xchg
ret
adc
dec
stc
lcall
xchg
dec
into
jl
push
jmp
cltd
pop
arpl
ret
jo
mov
mov
les
cbtw
xor
cmp
pop
jmp
lods
inc
push
mov
mov
movsb
test
fldl
sbb
inc
mov
inc
rcll
dec
mov
add
pop
sub
nop
xchg
add
or
rcrb
inc
jmp
xor
inc
push
jb
mov
lods
in
pop
mov
push
jbe
mov
shrl
fcomp
jb
push
xchg
inc
orl
int
cld
cmp
mov
data16
lea
rolb
jno
clc
test
fistpl
push
jge
clc
cmp
xchg
pop
repz
pop
loopne
jmp
stos
mov
sbb
cmp
data16
push
xchg
and
mov
fiadds
mov
repz
push
ljmp
sub
jns
adc
negl
jno
jmp
inc
out
das
sub
push
ret
cmp
mov
bnd
fldt
stc
and
cmp
push
in
andb
jbe
enter
aad
rorb
sub
std
mov
xchg
test
aad
fnstcw
and
in
xchg
pusha
dec
gs
lahf
pop
or
in
and
or
sbb
push
shlb
jne
stos
or
in
stos
aad
fst
rcrl
test
lcall
add
xchg
imul
cld
jne
push
sti
sbb
jge
sbbb
sub
ljmp
insl
out
mov
xchg
mov
pop
mov
arpl
pop
test
or
or
pop
xchg
adc
ret
negb
daa
mov
cmp
fiadds
notb
fldt
pop
fisubrl
mov
repnz
cmpsb
lods
mov
jle
lahf
lods
les
dec
xchg
jecxz
sbb
inc
mov
xor
insb
inc
pop
mov
jmp
cmpsl
aaa
add
or
out
pop
daa
jnp
addr16
or
and
and
icebp
xor
jp
jbe
jp
mov
xchg
movsl
cmc
and
cltd
mov
out
push
jmp
push
jmp
xchg
outsl
push
dec
iret
call
stos
and
test
pop
loope
jg
dec
mov
shrb
cmp
jbe
adc
das
push
out
cs
outsb
negl
scas
lret
jl
jae
cmp
arpl
adc
in
mov
es
int
scas
icebp
pushf
sahf
mov
sbb
xor
jl
jne
xchg
add
mov
lds
stc
aam
mov
inc
insb
sub
or
jbe
mov
sub
sub
test
fildll
fstpt
cmp
sbb
xchg
cmp
pop
push
xlat
rcrb
cmpsl
stos
inc
xor
inc
jbe
and
push
cmpsl
stc
mov
add
xchg
jmp
in
lcall
scas
push
push
mov
and
cli
mov
scas
mov
std
scas
repz
sbb
inc
roll
sahf
sti
mov
adcl
sbb
sub
lret
lea
cmp
les
jp
das
mov
into
sub
in
xor
cmpsb
mov
inc
push
shl
data16
daa
pop
add
mov
orb
scas
int
js
sub
cmp
test
insb
cmp
mov
imul
inc
sbb
out
mov
push
pop
inc
lcall
sub
push
mov
cltd
inc
mov
lret
movsb
clc
jl
pop
pop
or
add
mov
xchg
enter
jge
into
das
dec
aaa
loope
jp
leave
mov
mov
push
lds
inc
add
xor
mov
out
jbe
fs
sbb
pop
addr16
pop
int
je
or
inc
push
push
push
add
loopne
push
pop
call
and
mov
arpl
stc
pop
dec
shrb
xchg
sub
jmp
nop
xchg
sbb
les
cli
lock
sbb
and
fcompl
iret
jne
cli
cmpsb
mov
sti
pushf
std
nop
xchg
add
fwait
mov
iret
dec
fdivrl
mulb
cmp
cmc
ss
jns
ret
pop
les
mov
int3
jl,pt
daa
imul
mov
lcall
scas
add
dec
popf
fs
sbbl
call
dec
xchg
aaa
jns
mov
rcl
pushf
mov
dec
xlat
jecxz
adc
cmp
cmp
inc
mov
js
pushf
cwtl
pop
leave
lock
je
scas
fcoms
sbb
mov
mov
push
arpl
or
jp
dec
xchg
imul
fdiv
mov
cltd
jo
add
addb
pop
jmp
sbb
inc
out
in
mov
je
fidivs
mov
test
and
cld
push
jno
jp
int
loope
jl
xchg
in
ds
cmp
mov
adc
xlat
xchg
lods
std
out
sbbl
js
jp
or
bound
enter
jne,pn
ret
pop
and
mov
daa
push
pushf
pop
adc
pop
mov
adc
lret
lcall
adc
xor
or
jo
jp
sub
xlat
stc
mov
out
xchg
add
mov
fcmovnbe
adc
lcall
neg
and
aam
xchg
jecxz
jge
loope
jno
lods
into
xchg
push
nop
shrb
popa
lds
sub
push
in
pushf
or
int3
lods
test
add
fcmovnu
in
sbb
jb
push
loope
cmpsl
dec
aad
mov
jmp
or
les
inc
and
clc
out
jbe
jno
sbb
jmp
sbb
movsl
add
xchg
mov
dec
insb
jle
lahf
push
add
mov
outsl
sbb
sbb
pop
je
fbstp
cmp
insb
ss
push
add
dec
xor
dec
mov
jp
jg
gs
out
into
test
daa
xchg
fsub
add
mov
mov
ret
xor
popf
mov
and
xchg
cmpl
lcall
fmull
mov
mov
das
jmp
insb
jge
imul
hlt
mov
and
xchg
lds
shrl
mov
stc
adc
imul
nop
loope
ret
pushf
fnstsw
mov
pop
xor
cwtl
mov
mov
daa
and
setg
push
sub
fistpll
mov
or
mov
sub
push
stos
pop
sbb
dec
fnstsw
test
outsl
sarl
pop
int3
or
aad
pop
aad
sahf
or
pop
cmc
ret
mov
lcall
cltd
enter
lcall
push
or
mov
sub
mov
ljmp
fdivs
inc
add
jns
or
inc
xchg
push
xchg
cmp
mov
icebp
lds
shlb
adc
push
adc
sbb
mov
repz
jle
push
push
push
inc
mov
iret
or
or
ja
mov
aam
inc
cwtl
pop
cmp
pop
jecxz
outsl
sub
adc
push
mov
pushf
rcll
stc
inc
out
cmp
out
sti
ds
adc
loope
cli
outsb
lea
inc
mov
repz
mov
outsb
adc
inc
ret
ss
or
dec
or
test
and
jle
push
mov
mov
or
pop
jl
je
sahf
sub
out
push
mov
cwtl
cwtl
stos
push
dec
jbe
fwait
cmpsl
adc
adc
mov
sbb
cmp
dec
dec
cmpsb
add
outsb
int3
add
dec
sti
sub
sub
mov
add
nop
int3
pop
xchg
filds
jmp
add
inc
sti
dec
call
cltd
mov
addb
dec
inc
lods
jo
mov
icebp
xchg
cltd
nop
scas
shll
push
push
xchg
loopne
gs
pop
ds
mov
or
mov
mov
cmp
xor
xchg
loop
cltd
loope
push
mov
data16
or
sahf
pop
and
push
inc
cmpsl
jg
xchg
fldenv
sbb
loopne
dec
adc
inc
pushf
inc
push
jns
mov
xlat
scas
mov
es
imul
mov
rcrl
pop
jle
pushf
adc
dec
pop
xchg
jae
roll
insl
mov
push
push
fidivrs
mov
mov
dec
mov
hlt
pop
adc
sbb
movsl
pop
pop
inc
jmp
xchg
cmp
adc
pop
daa
aas
xchg
das
call
fildll
jb
inc
or
stc
mov
imulb
imul
rcr
pop
xchg
mov
popf
jp
add
lock
push
push
repnz
int3
je
jmp
je
insb
mov
mov
dec
pop
mov
adc
loope
loopne
jl
mov
je
mull
cmp
push
aaa
cmpsb
ret
mov
add
int3
mov
movlps
les
dec
push
pushf
out
rcrl
and
bound
cmp
cmp
push
xor
dec
in
addr16
or
shll
xchg
loop
aad
sbbb
rcrl
addr16
fdivrp
jne
loop
roll
mov
mov
mov
cmc
push
dec
mov
lcall
movsl
lock
xor
mov
call
test
repz
aad
daa
out
sahf
mov
jmp
ss
stc
inc
xchg
add
xchg
mov
jnp
int
fcmovu
xlat
add
jecxz
pop
jns
cwtl
pop
inc
fstl
negl
inc
xor
jmp
lret
mov
inc
xchg
andl
or
sub
fistpll
fldl
mov
push
jg
popl
adc
cmp
sub
call
je
into
cld
dec
fcmovne
jle
fsub
lahf
insb
jmp
sub
pop
xchg
jecxz
scas
adc
jp
stc
xlat
std
sbb
mov
xor
add
xchg
outsb
sub
dec
fisubs
enter
cmp
push
xchg
mov
mov
scas
push
adc
adc
clc
dec
cmp
inc
fs
xchg
xor
loop
pop
sbb
aaa
lahf
jb
out
inc
sub
sbbb
add
fwait
push
pop
xchg
fmul
shll
pop
popf
add
jno
jo
repz
insb
notl
int
les
mov
xor
sahf
jnp
lds
add
mov
andb
cmpsb
cmp
mov
inc
sbb
inc
sub
fisubs
sub
les
shrd
ljmp
dec
enter
mov
mov
out
sbb
dec
outsl
in
pop
jg
xlat
dec
add
test
loopne
add
lahf
push
xor
mov
dec
test
mov
push
mov
jg
sbb
mov
loop
roll
cltd
test
sub
jg
iret
frstor
push
movsl
aaa
and
or
jne
shll
pop
std
mov
xor
mov
mov
flds
hlt
in
push
sub
sbb
pop
mov
mov
fstpl
pop
inc
in
clc
sub
pop
call
in
addl
sub
lock
rorl
or
sbb
sbb
and
sbb
call
xchg
sahf
arpl
xchg
sbb
shll
inc
pop
dec
sbb
cli
clc
mov
add
ja
in
in
lcall
stos
push
pop
fidivs
mov
out
and
pop
and
sub
das
insl
and
ds
pop
scas
inc
aas
xor
nop
pop
jmp
aas
mov
fimull
and
cmpxchg
pop
add
push
cwtl
inc
in
inc
mov
arpl
les
pop
adc
sti
lods
sbb
pop
and
or
pop
push
data16
jg
test
mov
push
out
xor
in
shl
or
enter
sbb
push
into
in
mov
adc
mov
inc
sbb
adc
sub
mov
xchg
mov
mov
fisubs
mov
out
adc
or
and
and
cmp
bound
push
jle
test
and
pop
int3
test
pop
lret
std
popf
cltd
aas
int3
jne
rcrl
in
dec
pushf
mov
mov
lock
and
bound
aaa
mov
add
testl
push
push
inc
mov
inc
std
mov
push
xchg
test
adc
cwtl
mov
sub
jle
adc
lea
inc
mov
ds
sbb
pop
adc
pop
lods
jl
or
cmp
push
ret
mov
popa
enter
sub
jmp
mov
mov
mov
cmc
or
lock
jmp
fld
mov
shlb
paddb
cli
pop
mov
push
negl
cmp
fwait
mov
out
sti
stos
int3
fnop
jnp
movsb
pop
pop
je
xchg
out
dec
lret
jmp
jl
sub
mov
sub
jg
push
or
jo
rcrl
sub
mov
loopne
and
addb
mov
xchg
icebp
pop
movl
dec
or
cmp
or
xchg
test
out
je
mov
and
mov
jns
lret
shll
mov
movsl
ja
loope
pushf
imul
daa
push
inc
insb
xchg
xchg
loope
roll
cltd
aam
imul
dec
lods
dec
aad
cmc
dec
stos
test
arpl
inc
xor
push
clc
xchg
inc
cmp
clc
push
sarb
jg
scas
jnp
mov
out
std
jp
and
arpl
xchg
fsubrl
inc
sub
push
dec
aaa
test
in
or
add
jmp
add
dec
mov
testb
jmp
mov
mov
mov
push
fwait
sub
lcall
mov
xchg
fimull
lods
mov
lods
xchg
insb
aad
push
ficoms
fwait
std
cmp
dec
dec
int
ss
in
or
push
mov
stc
sbb
xor
jo
int
pop
adc
mov
aad
lret
out
sub
mov
sahf
pop
stos
fidivs
inc
testb
xor
mov
jns
iret
and
imul
mov
jns
inc
and
lret
jp
in
mov
inc
pop
jae
push
outsl
adc
lea
mov
iret
or
lods
outsb
test
pop
push
nop
hlt
in
or
jge
xor
rorb
xor
scas
push
jne
ds
cmp
rorb
jnp
sahf
lods
insb
xchg
mov
ljmp
test
add
or
test
xorl
xchg
icebp
dec
push
fucom
in
pop
dec
out
jb
jmp
adcl
cltd
gs
data16
add
movsl
jae
push
lret
dec
push
mov
inc
inc
test
adc
shrb
push
jp
push
jnp
test
push
movsb
lret
sbb
mov
cmpsl
inc
lret
stos
adc
jo
test
imul
dec
cmc
mov
out
fistl
add
sbb
jnp
adc
pushf
jg
sarb
jge
mov
fsubl
sbb
sahf
push
bound
outsb
mov
jnp
scas
add
mov
jge
iret
gs
lods
imul
inc
xor
movsl
xchg
push
push
pop
cld
daa
push
push
mov
shrl
ffreep
iret
int
push
push
sub
inc
lds
lds
xor
inc
mov
gs
dec
dec
inc
add
add
js
or
or
inc
xor
scas
stos
pop
dec
das
adc
int
xchg
push
iret
xor
push
mov
xor
sub
loopne
sahf
jbe
mov
aad
lcall
cwtl
xchg
sbb
scas
jae
push
sbbb
sti
out
jecxz
sbb
rorl
lea
inc
sub
cmp
adc
mov
jo
adc
ffree
mov
or
push
jp
or
test
mov
out
pop
push
cmp
inc
popf
mov
pop
xor
cmpsb
pushf
mov
shrb
push
sub
popa
or
inc
fdivr
cs
imul
lret
lock
jae
loop
adc
mov
jne
insl
aam
mov
pop
cli
enter
pop
fnsave
fmul
jno
ret
mov
insl
adc
daa
add
jl
sub
xchg
sub
les
movsb
int3
loope
adc
ret
lret
push
rol
and
cmp
cmp
nop
out
inc
jmp
outsl
sbbl
mov
adc
movsl
daa
lret
repnz
cld
fisubs
nop
or
jo
adc
rcrb
jg
cltd
rorb
or
call
and
jno
jnp
lea
es
int
mov
mov
cld
xor
test
inc
sub
jg
jnp
dec
int
jns
push
jno
jbe
das
xchg
out
icebp
jo
adc
and
mov
xchg
mov
in
add
int3
arpl
ficoms
jle
mov
lahf
insl
push
jl
push
stos
cmpsl
rdpmc
mov
out
out
ret
dec
push
in
jae
xchg
push
or
roll
aas
out
repnz
mov
fcomps
popf
push
pop
mov
pop
aam
adcb
mov
dec
mov
cmp
out
enter
jbe
mov
dec
push
fst
addr16
xchg
mov
mov
jge
lods
je
and
xchg
stos
rcrb
push
xor
jp
inc
sbb
mov
leave
cmpsb
xor
sbb
adc
pop
xchg
sub
and
xchg
daa
xlat
outsb
cli
adc
mov
push
out
dec
nop
or
cmp
jge
or
sub
movsb
jge
stc
xor
sub
or
lahf
cld
fsubl
pop
pop
lret
push
addr16
cmpsl
scas
or
jp
lds
std
out
cwtl
movsl
popf
ja
xor
jne
adc
outsl
cmp
xchg
inc
pop
mov
bnd
mov
in
or
pop
jle
push
jge
subl
sbb
pop
in
das
add
iret
fbld
xchg
jp,pt
orl
into
iret
jns
push
out
addr16
and
std
loope
and
xor
lds
xor
shll
std
xchg
stc
das
jae
out
mov
arpl
mov
mov
xchg
mov
xchg
adc
xchg
aam
lods
jle
cmp
in
xor
fwait
sub
dec
mov
mov
pop
movsl
jns
xchg
loope
adc
movsb
dec
mov
mov
pop
dec
adc
or
nop
xchg
fwait
cmp
mov
pop
lock
aad
xchg
ljmp
ljmp
cltd
mov
cmpsl
mov
add
dec
addr16
inc
lds
aam
push
and
fwait
andb
mov
scas
stos
jp
pop
test
pop
rolb
aam
loop
jns
pop
dec
iret
xchg
cld
inc
leave
stos
int
jge
or
lods
mov
fmull
mov
adc
std
in
jmp
movsb
cld
push
int
mov
sarb
jmp
mov
repz
inc
jmp
cmpsl
mov
mov
in
and
inc
imul
pop
scas
xchg
and
mov
data16
stos
test
dec
mov
sub
sbb
int3
push
pushf
in
mov
daa
or
mov
pop
pop
push
mov
sub
stos
push
xor
jecxz
xor
imul
stc
hlt
sarl
mov
mov
jge
adc
push
pop
mov
inc
rcll
jmp
jno
mov
call
popf
loopne
xor
xor
jne
mov
jnp
cmc
sbb
rclb
in
cmp
jmp
pop
fimuls
outsl
clc
test
out
in
mov
out
or
or
jae
lods
leave
sub
jge
xchg
cltd
inc
into
inc
test
mov
xchg
adc
inc
out
insl
into
inc
mov
bound
mov
push
mov
das
mov
je
xchg
fadds
repnz
fidivrl
dec
push
pushf
mov
and
fldl
or
jae
jbe
arpl
movl
mov
push
inc
ret
pop
sbb
pushl
jecxz
jmp
insl
std
xchg
pop
push
xchg
rcll
movups
xlat
mov
add
cmp
and
popf
lock
push
mov
leave
aas
pop
jns
jne
clc
lret
push
aam
es
repz
xchg
xorb
lods
lock
fldenv
mov
fildl
aaa
dec
inc
pop
mov
jp
nop
pop
cmp
dec
test
pushaw
lcall
insb
inc
lret
push
mov
stos
mov
cli
rol
hlt
jbe
mov
xor
sbb
fldenv
out
and
dec
ret
pushf
mov
or
xchg
push
cmpb
jl
dec
pop
repz
cld
ss
mov
inc
mov
loope
add
fucomi
imul
roll
out
rorl
loop
rcll
push
test
nop
pop
mov
cltd
sub
xchg
cld
jns
loopne
cmp
iret
fwait
push
fdivrs
fldcw
and
in
outsl
xor
push
imul
shr
sahf
sub
cmp
in
push
out
inc
adc
lds
outsl
fmuls
mov
mov
cmp
cmp
testl
daa
push
push
mov
dec
cli
cmc
movsb
dec
xchg
jo
push
mov
lahf
push
cmp
jp
dec
stos
mov
inc
mov
mov
fcoms
mull
mov
js
repnz
dec
mov
dec
xchg
std
into
pop
cwtl
and
dec
jae
dec
sub
mov
inc
cwtl
scas
sub
adc
dec
stc
mov
adc
test
mov
jmp
sub
cmp
ret
repz
jmp
sub
xchg
adc
xor
push
push
movaps
loopne
clc
xchg
xchg
loopne
sub
shll
stos
aaa
jb
out
cltd
cmp
and
imul
aaa
daa
sbb
sbb
pop
fstl
xor
push
fidivl
push
test
movsb
cli
jae
lret
ret
lret
fldenv
data16
movsb
push
ret
imul
mov
outsl
mov
push
sub
sbb
xchg
and
inc
cmp
cli
pop
mov
rolb
adc
dec
ja
add
js
sar
mov
mov
cmc
push
repz
sahf
jle
pop
fisttps
xor
or
add
std
jle
pop
inc
adc
push
and
mov
pop
pop
data16
xchg
out
clc
cmc
mov
in
xlat
add
popf
mov
push
sub
pop
xor
inc
adc
dec
mov
into
jnp
outsl
out
xlat
sub
shrb
popf
or
lahf
cmpsb
lods
push
dec
jp
push
cli
pusha
jbe
mov
in
mov
jl
stos
out
add
scas
out
pop
lea
iret
mov
pop
cli
mov
or
cmc
ss
out
cmp
sar
mov
pop
pop
in
ret
das
add
loopne
add
rcrl
sbb
jns
mov
or
sub
inc
mov
inc
mov
lds
loope
cwtl
lock
and
inc
mov
sub
lds
loop
repnz
sub
lahf
jmp
ss
movsb
push
dec
test
mov
cmp
xor
add
push
insb
popf
dec
rol
cltd
sub
fnstenv
stos
add
jne
jb
push
cs
fidivrl
outsb
mov
jb
sbb
sar
ss
dec
dec
sbb
jb
enter
test
fwait
fwait
mov
sub
mov
stos
add
mov
sbb
dec
aaa
inc
ss
jp
mov
cmp
mov
sub
sub
sbb
mov
scas
in
out
insb
sldt
xchg
mov
mov
jle
jge
in
je
mov
jl
and
insl
mov
mov
mov
sub
add
sbb
mov
icebp
aas
mov
inc
push
cwtl
test
sbb
pop
cli
aas
fwait
cmp
dec
cmp
shll
mov
jmp
xorb
ficompl
pushf
aaa
lds
xchg
mov
jbe
and
popf
movsb
pop
popa
cmp
aad
cmpsb
and
scas
loop
fucom
test
lcall
and
cmp
add
fsubr
mov
mov
adc
hlt
sub
dec
scas
popf
push
push
idiv
imul
je
inc
jo
shlb
in
ret
cli
xor
and
mov
sbb
jg
jo
mov
pop
in
int
mov
addr16
neg
add
push
aad
pushf
cmc
xor
daa
clc
mov
push
mov
rorl
pop
mov
or
xchg
dec
push
in
fcomps
jb
push
mov
sahf
pop
iret
dec
stos
cmpsb
call
cmp
outsb
daa
jo
rolb
or
test
lcall
loopne
repz
jge
pop
mov
dec
pushf
pusha
repz
mov
imul
mov
mov
cmc
push
out
loopne
mov
js
push
les
rolb
or
xor
notb
std
mov
cmp
arpl
jbe
mov
icebp
jne
mov
incb
sbb
gs
sub
lcall
xor
add
sub
addr16
mov
rolb
dec
add
dec
lock
mov
gs
shll
js
and
push
into
pusha
mov
jmp
out
js
mov
ret
testb
jecxz
pop
mov
mov
les
shlb
lods
cmp
pop
mov
xchg
cld
dec
test
lods
add
sbb
incb
mull
in
movsb
idivb
enter
mov
push
repz
cmp
pop
lahf
push
mov
mov
xchg
sub
adc
cmp
lahf
mov
in
sub
js
adc
fnstenv
push
jecxz,pt
pop
lods
les
sbb
nop
sub
jp
repz
insl
push
lret
lret
dec
fdivrl
cmc
int
xchg
je
inc
inc
lret
es
es
movsb
loopne
mov
xor
call
insl
jbe
jno
aad
jo
ds
and
idivb
add
xchg
inc
xor
xchg
push
sub
jns
fidivrs
iret
fisubs
jo
aad
stos
and
xchg
inc
dec
xchg
in
nop
jle
push
mov
fsubrl
xor
pushf
outsl
stos
mov
ss
out
xchg
cs
cmp
mov
ss
pop
aad
data16
xor
pop
xor
sub
pop
enter
pop
pop
outsl
dec
inc
scas
inc
push
or
or
sbb
in
je
mov
inc
sbb
pusha
push
xor
test
cmp
mov
popa
xor
cli
and
sub
cmp
adc
mov
iret
cmc
sub
or
mov
idivl
jg
sti
or
and
push
out
pop
and
or
mov
push
in
sbb
mov
mov
test
push
or
dec
fisttps
push
nop
imul
adcb
stc
inc
mov
aaa
cmp
mov
xor
cmp
js
inc
mov
pop
repnz
lods
out
mov
xchg
mov
mov
and
mov
push
testl
insb
in
jp
xor
call
out
sbb
std
fwait
xchg
rcl
inc
or
les
or
stc
and
cmp
pop
rcll
mov
cmp
in
mov
inc
adc
imull
mov
dec
imul
outsl
push
lds
outsl
hlt
mov
movsb
fwait
inc
test
jb
in
jp
cmc
xor
xchg
popa
pusha
addr16
jge
xlat
pop
add
call
clc
iret
callw
iret
out
jmp
and
divb
mov
fdivrs
arpl
mov
gs
xor
jnp
pop
or
rol
mov
cmpl
mov
int
xor
or
lods
aaa
or
out
dec
xchg
sbb
ja
shll
xor
scas
ret
push
mov
cmc
cmpsl
mov
in
pop
mov
adc
scas
sbb
inc
and
adcl
xchg
push
cmc
sbb
adc
pop
sub
add
pop
mov
cmp
fyl2x
xor
enter
sub
cmp
cmc
outsl
stc
inc
adc
adc
mov
ss
inc
jmp
sub
xchg
jns
test
mov
aas
scas
test
cwtl
mov
inc
and
adc
test
rcrl
xchg
in
data16
jmp
add
or
enter
sub
fs
cmp
pop
mov
pop
and
pop
xor
mov
clc
jb
into
or
sarw
adc
xor
push
aad
lods
mov
scas
gs
mov
test
in
data16
filds
int3
and
mov
push
xchg
cli
and
xchg
aaa
scas
xchg
mov
fxch
xchg
inc
rcrl
test
popa
movsl
stos
sbb
popa
out
push
xor
sub
pop
and
cmpsb
iret
daa
lods
and
and
mov
mov
popf
cmp
sbb
stos
popa
adc
shll
ficoml
push
mov
jl
dec
ja
mov
in
jmp
test
cwtl
mov
cltd
stc
sub
out
clc
pop
orb
pushf
mov
icebp
outsb
in
jo
push
mov
inc
xor
shlb
xchg
cmp
dec
push
cld
insb
add
aaa
fs
lea
test
imull
adc
adc
or
xchg
aaa
add
inc
push
pushf
fisubrs
pmuludq
push
call
gs
cmpsl
push
push
and
and
inc
loop
popf
test
js
or
mov
fdivrs
mov
scas
or
adc
pushf
pop
cltd
jo
mov
stc
adcl
loope
cmpsl
inc
adc
add
xchg
mov
xor
or
rolb
stos
add
push
jmp
xchg
movsb
adc
mov
push
ss
dec
mov
or
mov
mov
cmp
push
lock
cmp
push
cmp
pop
cmp
ja
pusha
mov
ficoms
mov
fs
cld
mov
popa
add
jecxz
sahf
loopne
xor
test
pop
les
arpl
add
lds
pushf
icebp
or
pop
inc
lods
push
jl
cs
dec
dec
jg
lods
hlt
es
mov
jns
dec
push
xor
pop
jae
pop
lds
fwait
cmp
data16
mov
cmp
mov
mov
push
dec
pushf
pop
cwtl
mov
sub
imul
jecxz
les
lret
popa
in
cmp
int
scas
fwait
out
addb
sahf
inc
sub
loopne
shl
xchg
push
lds
and
in
mov
jnp
sarl
cmp
push
inc
dec
adc
popa
loope
xchg
mov
xor
test
pop
jecxz
aad
sbb
outsb
cmp
mov
push
push
mov
push
xchg
inc
xor
lahf
test
push
in
xchg
mov
outsl
lock
adc
and
pop
leave
rorl
imul
leave
cmp
mov
into
dec
pop
mov
aaa
mov
addr16
cmp
xchg
or
ds
aad
cmp
add
pusha
and
mov
xchg
push
mov
xchg
fisubl
leave
add
les
mov
sbb
inc
imul
stos
inc
jg
orl
das
outsl
xchg
cmp
cmp
mov
push
loop
and
mov
icebp
cwtl
or
push
mov
dec
adc
pop
xor
xor
ret
fdivl
cld
popa
flds
mov
xadd
push
jae
cmpsb
inc
ret
lods
push
test
cwtl
outsb
mov
mov
arpl
jge
mov
imul
push
mov
adc
fcmovne
das
dec
jp
lea
scas
mov
lods
ret
xor
clc
and
cs
and
lds
ja
push
push
loop
or
mov
inc
push
bound
in
rcl
insb
xchg
loopne
add
loopne
daa
add
mov
or
adc
sbb
push
cld
lock
rol
push
cwtl
or
mov
mov
fs
sbb
jbe
stos
jbe
lods
adc
adc
inc
fists
pop
adc
xchg
xchg
in
pushf
negl
inc
push
and
std
inc
jno
shl
scas
adc
push
aam
xor
movb
loope
jo
mov
ror
adc
push
pop
subb
xor
inc
clc
sub
or
in
inc
ss
adc
les
out
lods
mov
push
mov
in
xchg
adc
fdivrl
sarl
aas
aad
fdivl
xor
psubusb
shlb
loop
or
rcll
dec
cmp
add
loope
addr16
push
mov
xor
fcmovnu
neg
inc
pop
popa
aam
add
ja
nop
fnsave
iret
sbb
pop
lcall
iret
xor
and
bound
xor
jns
sbb
cmp
cli
push
push
push
arpl
xlat
loop
pop
xchg
imul
pop
mov
in
loop
push
push
test
loope
fildl
sub
xchg
aam
push
sub
cmpsl
dec
scas
xchg
cmc
ret
jge
orb
adc
repnz
jl
pusha
pusha
cmp
fiaddl
mov
and
xchg
ss
push
inc
sub
dec
push
je
rcll
sarl
in
adc
xor
and
adc
mov
pop
lret
sbb
mov
mov
insl
outsl
mov
adc
mov
adc
ja
mov
mov
shrb
push
cmp
loope
ja
fidivs
enter
mov
push
adc
jno
xchg
sub
pop
mov
inc
dec
sahf
add
and
loop
enter
jecxz
xchg
pop
jmp
aaa
loop
sub
dec
xor
mov
push
xchg
mov
idiv
xchg
rorb
adc
push
pop
aam
mov
cs
pop
pop
loop
add
rcrl
incb
cmovae
fidivrs
test
hlt
ds
push
xchg
sub
mov
loop
jb
fiadds
fistpl
orl
cld
cltd
imul
add
loopne
xchg
sub
int3
pop
add
or
jns
cli
mov
cmp
pop
mov
popf
mov
and
mov
lock
dec
bound
push
adc
lahf
cmpl
movsl
or
xchg
ror
mov
jmp
ja
sub
add
cmc
gs
mov
test
aam
sub
icebp
xchg
jg
jo
adc
aas
jnp
jle
jle
jecxz
or
xchg
dec
in
or
xchg
mov
ljmp
add
inc
push
fwait
pop
inc
adc
xchg
add
stc
insl
aam
addr16
xor
lcall
popa
bound
arpl
test
sar
inc
dec
mov
imul
dec
imul
lock
aas
out
sub
mov
fidivrs
inc
inc
mov
jns
jno
stos
or
push
jb
int
fcoms
out
or
sub
subl
pop
outsl
sub
sarb
push
fistps
adc
dec
and
pop
daa
pop
pop
adc
pop
mov
push
stos
cmc
inc
outsl
jp
cli
jbe
cmp
push
out
outsb
cmp
jle
in
cwtl
mov
sub
sub
clc
in
add
jae
shlb
fsubp
jmp
jle
aam
lods
ja
aas
inc
cli
stc
dec
test
xor
mov
push
leave
xchg
int
roll
imull
lds
leave
jno
mov
adc
inc
mov
ficomps
jl
add
movsb
movsl
sbbl
or
inc
test
pop
call
dec
popf
and
and
inc
test
xor
jmp
je
sbb
mov
sub
cmp
mov
sbb
in
stc
push
faddl
xchg
mov
iret
push
outsl
jmp
cmp
dec
add
push
adc
subb
cld
les
pushf
fsubr
lods
jge
sbb
aad
add
dec
clc
shll
and
push
push
sti
push
cmp
mov
stc
rol
hlt
sbb
std
lahf
jns
mov
mov
pop
mov
jg
xchg
xor
sbb
xchg
push
adc
std
inc
cmp
or
jge
xor
cvtpi2ps
mov
mov
push
mov
inc
mov
in
imul
fcmovne
loope
push
cmp
imul
xchg
in
mov
push
cvtps2pd
xor
cs
sti
lock
aad
scas
andb
les
mov
loope
dec
xor
xlat
push
mov
mov
jo
leave
imull
sbb
jnp
iret
dec
pusha
sub
mov
and
mov
cltd
jb
cli
mov
cmpsl
push
add
push
push
pop
xor
mov
mov
shr
imul
aas
xchg
xor
push
or
lcall
mov
fs
dec
sub
jecxz
mov
cmpsb
jl
sub
adc
fiadds
adc
push
push
dec
sbb
rcl
lds
data16
pop
jns
adc
sub
cwtl
sbb
cmp
std
adc
push
mov
insl
push
jp
psubusw
es
dec
nop
setae
inc
xlat
and
pusha
sbb
dec
dec
cmp
ljmp
imul
in
sbb
call
arpl
shr
mov
aad
fdivs
repz
stos
xor
mov
arpl
mov
mov
lock
sbb
mov
cmpsb
xchg
outsl
add
les
pop
arpl
in
sbb
adc
add
jmp
dec
jbe
inc
pop
js
adc
pop
and
or
jnp
jae
insb
cli
stc
dec
cmp
sbb
mov
xor
hlt
nop
pusha
xchg
mov
inc
sti
repnz
insb
xor
mov
sub
push
mov
call
out
cli
inc
dec
js
dec
push
dec
inc
ja
mov
cmpsl
ljmp
flds
dec
lret
loope
int3
addr16
fucompp
or
pop
jg
into
sub
cmp
cmp
fstpl
push
jmp
mov
imul
rcr
inc
inc
out
cs
fs
lret
loope
and
lods
icebp
jg
ret
and
outsl
loope
mov
push
shl
adc
pop
scas
and
andl
jns
aaa
shll
mov
mov
add
repz
jg
aad
gs
xchg
cltd
or
inc
xchg
mov
pop
or
mov
out
les
movsb
inc
sti
lock
inc
popf
daa
mov
fadd
mov
dec
pop
pop
subl
enter
imul
jmp
adc
mov
int3
stos
dec
cs
mov
jnp
inc
jno
mov
inc
xchg
loopne
or
xchg
out
xor
ljmp
jb
push
xchg
enter
push
negl
mov
pop
loop
pop
push
cmc
gs
mov
stos
cmpsb
push
pop
mov
push
shlb
aas
xchg
pop
jg
jnp
pushf
test
pop
adc
ret
xchg
fidivrs
mov
in
pop
mov
movsl
mov
sbb
aas
mov
xchg
sub
sbb
or
lods
test
bound
and
mov
mov
dec
adc
push
insb
lcall
add
out
cmp
push
xlat
or
mov
aas
push
inc
jle
jnp
fs
repnz
mov
test
aad
fldenv
dec
cli
ljmp
cltd
mov
fidivs
cmovns
or
in
sub
add
idivb
jecxz
jmp
test
adc
test
mov
and
sti
dec
test
lea
jg
fstps
jmp
scas
adc
mov
adc
inc
outsb
mov
or
mov
aas
orl
sahf
or
xlat
mov
mov
imul
outsl
and
cwtl
adc
cmp
mov
out
imul
mov
or
int
dec
lret
and
cli
cmp
xchg
lods
addb
jnp
das
mov
or
mov
xor
sbb
and
add
daa
xchg
cmp
stos
jb
outsl
shll
inc
pop
add
inc
cmpsl
mov
add
cmp
and
orb
mov
sub
aaa
sbb
lods
xor
dec
ret
fstpl
aaa
xchg
xor
lret
je
orb
mov
leave
xchg
in
in
jp
xchg
sti
jo
xchg
ss
push
xchg
push
icebp
nop
fists
rorb
lcall
leave
jbe
adc
adc
inc
xor
or
fs
pusha
cli
cmpsb
dec
inc
dec
sub
add
mov
in
mov
or
es
dec
xor
inc
xchg
dec
sub
pop
xor
fcmovb
in
or
dec
cli
ficoml
fistl
xor
inc
repz
xor
mov
jnp
mov
adc
pop
or
leave
cmp
sbb
sbb
loopne
test
scas
jno
sbb
inc
push
in
push
lods
repnz
pop
sarb
aam
stos
test
in
bound
icebp
idivl
xchg
fs
jbe
mov
test
dec
aas
pop
push
movsl
call
sub
pop
icebp
adcb
andb
jmp
scas
aam
test
jp
jge
dec
pop
lahf
divb
add
adc
mov
aad
fmull
scas
push
bound
fistps
cmp
outsl
ljmp
movsb
jmp
xor
rorb
pop
jo
les
mov
push
fsts
pop
mov
outsl
sbb
mov
lods
aas
sub
mov
cld
xlat
or
pusha
inc
subl
ret
cs
shl
sub
filds
lds
dec
mov
sbb
push
push
rolb
in
aaa
cltd
and
testl
shr
jl
cmp
cmp
ja
jp
ljmp
mov
cmc
jo
hlt
out
xchg
decb
pop
pop
jmp
or
xchg
pushf
ret
cld
imul
stc
dec
and
mov
in
mov
jg
and
mov
and
lret
int3
jne
adc
push
push
sub
mov
ret
icebp
sub
jns
mov
pop
shlb
jl
pop
fwait
and
orl
rolb
push
div
dec
cmpsl
xor
test
les
or
js
sub
andl
aas
add
mov
dec
add
dec
add
incb
push
adc
pop
loope
xor
and
hlt
pop
stos
dec
jmp
enter
jmp
lods
movsb
push
jno
jmp
lock
push
and
cmc
or
popa
xor
push
lcall
aas
scas
push
dec
imul
mov
insl
sbb
adc
cmp
cmp
orl
add
xchg
mov
push
mov
repz
push
dec
cmp
mov
popf
mov
pop
scas
fld
lret
aam
ja
pop
into
test
adc
test
test
ffreep
ficompl
xor
mov
int
loopne
push
jb
fisubl
fsubrl
ljmp
push
xchg
mov
xchg
cmp
cmp
dec
inc
int
inc
loope
adc
sub
xchg
jle
mov
mov
out
jl
test
jle
sub
sub
test
clc
mov
ret
push
in
movsb
adc
out
pop
cmp
mov
mov
nop
adc
and
push
sbbl
insb
jp
lret
adc
pminsw
inc
cli
loop
pop
jno
js
inc
jb
xchg
mov
cmpb
sbb
mov
xchg
sbb
mov
shll
or
mov
adc
testb
and
lea
inc
lds
adc
and
xchg
push
mov
cld
in
enter
jecxz
sub
or
fistpl
fisubl
mov
cmp
inc
clc
dec
xchg
push
mov
jge
or
inc
int3
jne
add
or
fldenv
pop
inc
ja
leave
mov
xor
pop
ljmp
mov
insl
add
pop
fxch
nopl
mov
shlb
dec
loop
enter
push
mov
sub
ja
popa
add
loopne
mov
sbb
adc
clc
test
inc
xchg
ret
mov
loope
arpl
xor
adcl
xorl
int
mov
pop
addr16
jp
fs
and
adc
sub
cmp
pop
push
sub
lods
pop
test
in
rorb
jns
fsubrs
dec
repz
fbld
leave
xchg
add
mov
outsl
pop
xor
cmc
cwtl
add
push
cli
adc
mov
xchg
daa
movsb
mov
mov
mov
adc
jg
xor
xor
push
inc
ja
cmovl
add
xchg
push
xor
fnsave
cltd
out
mov
test
mov
fsubs
sarl
jne
jge
mov
cmp
jge
mov
icebp
div
sahf
dec
sub
jbe
mov
jge
fsubrl
sub
and
xchg
shrb
xchg
inc
rclb
jno
clc
jae
mov
cmc
cmp
xor
mov
arpl
sub
cmpl
rolb
imul
sbb
mov
sahf
call
lahf
xchg
ljmp
add
sahf
lretw
mov
adc
addl
add
pop
mov
in
test
call
das
daa
fwait
pop
adc
sub
sub
ret
jecxz
mov
outsl
pusha
cli
scas
pop
mov
xor
lret
cmp
gs
iret
pusha
jb
pop
push
jnp
mov
pop
lods
jae
push
mov
arpl
imul
push
rol
jg
adc
js
dec
lahf
inc
in
inc
dec
sub
out
pop
int
addr16
lret
outsl
and
je
repz
inc
add
mov
add
lods
fnstcw
sbb
xchg
adc
jns
adc
sub
in
outsb
aaa
inc
clc
xchg
out
mov
pushl
push
jg
sbb
sub
push
or
stos
dec
inc
arpl
or
loope
xor
popa
ds
pop
sbb
push
and
repz
outsb
xchg
lock
xchg
stos
inc
imul
addr16
insb
clc
mov
and
add
jnp
push
insl
adc
arpl
push
adc
adc
test
xchg
cmp
in
jecxz
outsb
add
fbld
sbb
push
xchg
xor
push
and
enter
lret
pushf
icebp
lret
push
jb
negb
out
popf
inc
mov
daa
xchg
cld
and
ds
jne
shl
pop
loopne
inc
and
mov
and
lock
or
out
dec
mov
push
jecxz
pop
pop
clc
xchg
xor
into
mov
iret
jae
adcl
add
aad
enter
and
xor
imull
fistps
sbb
and
adc
fstl
cltd
jb
xchg
fs
test
xor
xchg
cmp
fdivrs
jecxz
xchg
test
jbe
adc
loop
xor
mov
push
lret
or
ret
iret
pop
mov
or
sbb
scas
int
adc
mov
pusha
int
jbe
je
pop
inc
mov
loopne
lcall
jl
into
mov
xor
or
test
fwait
cmp
dec
pop
dec
aaa
add
out
mov
adc
cld
loopew
and
pop
cwtl
shrb
jg
movsl
or
lock
in
test
movl
and
rolb
push
push
sbb
scas
out
push
adc
fcoml
jne
testl
addr16
xchg
repz
push
jno
jp
pop
std
sarl
pop
out
and
mov
out
jnp
lret
cmp
inc
movsb
pop
inc
movsl
mov
lods
sahf
cmp
push
cmc
data16
or
ja
ret
cmp
out
ljmp
rorb
mov
mov
xor
insl
int
xor
fcomip
dec
sbb
add
stc
jp
dec
push
adc
xchg
bound
sub
iret
mov
addr16
mov
out
cmp
lea
mov
cmp
and
popa
lea
mulb
loop
movsl
repz
scas
or
push
rcrl
mov
mov
sub
pop
imull
scas
stc
xchg
lahf
push
push
cmp
ds
insb
cwtl
sbb
mov
jge
lret
dec
and
mov
inc
sbb
sbb
cwtl
inc
xor
mov
out
inc
stc
fistpl
sbb
call
test
fs
push
repz
in
shll
mov
xor
push
mov
dec
and
cmp
mov
mov
jnp
mov
faddp
mov
lods
out
or
cmp
push
sbb
jecxz
cmp
daa
mov
popa
pop
lock
insb
and
inc
push
cmp
pop
lret
mov
sub
mov
negl
movsb
cmpsb
sbb
jnp
clc
in
data16
ret
mov
inc
mov
js
add
in
fmul
mov
add
out
test
int3
and
add
aam
inc
add
in
in
cmp
pop
testb
fdiv
xlat
in
dec
repnz
repz
jmp
stos
sbb
out
sbb
lock
std
sub
dec
movsb
in
mov
inc
pushf
jg
fiadds
inc
mov
ss
mov
jg
arpl
test
xchg
sti
pop
movsl
mov
push
idivb
jp
jge
jno
cmp
repnz
dec
or
nop
mov
fcmovnbe
ret
push
arpl
cmp
push
sub
dec
outsb
pop
ja
mov
xchg
je
jmp
mov
cmp
popa
notl
lcall
sub
push
adc
enter
mov
push
hlt
pusha
iret
jp
or
or
test
or
shl
das
push
loope
jmp
mov
mov
push
in
into
jno
vandnps
inc
and
mov
jl
pop
jo
dec
stos
in
outsb
mov
mov
pop
arpl
sbb
and
push
je
fwait
popa
mov
xchg
jns
cmp
ja
pusha
pop
fs
jb
dec
test
pusha
iret
scas
cmc
cmp
pop
inc
int3
or
in
imul
mov
cmp
push
jmp
fsubr
leave
lods
cmp
int3
mov
test
sub
mov
hlt
inc
add
fwait
psllw
daa
pop
mov
jo
in
int3
enter
and
xor
adc
jne
in
clc
xchg
cmc
mov
or
sbb
cld
adc
arpl
xchg
sub
aam
jb
imul
xchg
cmp
imul
rcrl
xchg
push
out
xchg
or
push
mov
pusha
mov
mov
je
bsf
add
adc
xlat
jns
xor
and
movsb
dec
pop
sbb
icebp
push
js
subb
sbb
mov
mov
mov
mov
mov
aas
out
jbe
cli
scas
and
add
daa
inc
shlb
or
adc
fists
mov
add
dec
ret
or
jmp
mov
xchg
pushl
sub
in
push
stos
nop
xchg
shl
mov
xchg
ret
xchg
mov
add
xor
stos
sub
sahf
xchg
push
cmp
movl
sub
outsl
fcmovne
sub
jnp
cmp
js
fwait
mov
test
sbb
pop
in
insl
cltd
fidivl
xchg
jecxz
push
add
js
cmp
inc
outsl
fwait
mov
dec
aaa
xchg
cmp
ss
stc
repnz
outsb
mov
push
aam
xor
movsb
test
xor
pusha
es
hlt
push
xchg
inc
lods
adc
mov
xor
ffree
jo
xchg
lahf
je
data16
or
mov
fs
cmc
popf
pop
fsubrl
mov
je
sub
or
lret
aam
and
jp
push
sub
ret
test
loopne
or
lret
mov
pop
sub
arpl
lcall
fisttps
loop
push
push
mov
or
das
ljmp
aaa
and
in
pop
out
idivb
adc
xor
pop
xchg
mov
adc
jg
cmp
sub
inc
repnz
stc
xchg
mov
daa
psllq
xor
addl
push
stos
push
enter
in
lahf
fnstsw
shrb
push
lods
jb
or
pop
mov
jecxz
add
movsl
addr16
adc
insb
jo
inc
jp
pop
arpl
out
lret
jecxz
mov
call
mov
into
pusha
shlb
mov
push
sbb
fsubr
fwait
and
mov
xchg
daa
dec
ret
xor
in
pop
fs
int
test
jle
sub
or
movsb
aam
mov
push
xchg
decb
sbb
xchg
inc
in
add
sbb
fnop
aad
inc
test
jno
xor
or
call
lret
sub
sub
xchg
adc
adc
mov
and
pop
lds
cltd
inc
add
insb
jnp
or
gs
repnz
call
add
inc
fistps
sbb
fsts
cld
sbb
add
or
add
mov
xchg
mov
out
pop
popf
dec
fwait
cmp
pushf
sub
mov
or
fcomps
or
mov
sar
jle
fs
mov
les
sbb
dec
add
stc
push
imul
push
stos
dec
sub
and
minps
dec
in
sbb
js
mov
ffreep
fbld
inc
and
lret
in
and
jno
stc
ljmp
adc
in
push
mov
sbb
adc
dec
fsts
inc
aam
int
mov
mov
outsl
sbb
outsl
cmp
outsb
sbb
adc
jno
divl
out
sub
mov
loop
cmpsb
rcll
inc
adc
mov
cmpb
loope
idivb
pop
sbb
movsb
loope
cmp
inc
mov
lret
addl
ret
imul
stos
fsqrt
adc
outsl
dec
gs
xor
lret
push
jae
icebp
pop
icebp
push
pop
xor
dec
fldenv
and
sbb
jg
ss
popl
xchg
sti
xchg
scas
andb
add
jg
icebp
pop
sub
xor
mov
dec
inc
outsl
push
dec
sbb
repz
xor
clc
addr16
leave
fldenv
pop
repnz
outsl
bound
mov
fildl
popf
fisubrl
cwtl
pop
in
mov
hlt
pop
cmp
aam
sbb
push
add
xchg
mov
fnstenv
dec
fmuls
scas
je
and
xor
cmc
mov
jo
js
in
jmp
jae
jo
sbb
xor
pop
or
fcmovbe
lods
scas
push
out
mov
insl
enter
je
test
pop
aaa
enter
dec
sbb
fwait
sbb
mov
push
inc
cmp
lods
push
mov
ljmp
pusha
addr16
mov
dec
cltd
imul
clc
sbb
add
inc
push
popf
stos
test
push
dec
pop
push
into
inc
cld
iret
push
sbb
mov
loop
and
pop
dec
add
mov
inc
or
fiaddl
imul
pop
push
daa
pushf
ds
push
and
popf
add
or
addl
call
out
pop
mulb
aas
add
dec
aad
or
inc
ja
and
insb
mov
push
sarl
shrl
lcall
outsb
insl
xchg
mov
inc
cmp
mov
fidivl
jne
cmp
or
or
mov
and
pop
shrl
pop
iret
mov
shl
push
sbb
mov
sbb
notb
out
cmp
or
and
mov
ja
popa
inc
aam
insb
in
fcoms
loopne
sbb
pop
sbbb
mov
xchg
punpckhwd
pop
sahf
shrb
aam
mov
stc
pop
jmp
mov
insl
in
push
add
sbb
stos
or
sub
sub
or
int3
int
sbb
inc
mov
and
sub
aaa
lea
lret
test
add
mov
mov
frstor
fadd
lret
aam
fdivr
test
iret
sbb
push
xor
cmp
sub
and
cwtl
mov
jge
xor
and
pop
xchg
mov
sub
and
movb
icebp
xchg
fiadds
imull
sub
aad
lods
gs
and
inc
mov
jle
bound
pop
mov
cmpsl
sub
mov
inc
xchg
mov
fcmovne
lock
pop
repnz
dec
fcomi
sub
aad
sub
push
jbe
arpl
test
mov
mov
mov
adc
inc
jns
xchg
xor
int3
push
pop
in
mov
sub
and
cmpsb
int3
bound
and
sub
or
fwait
xchg
mov
push
mov
lcall
sar
pop
or
pop
jg
das
sub
add
xor
stos
mov
push
in
and
sub
xchg
ret
xchg
lea
rcr
fcompl
fs
int
lahf
sub
mov
lea
insl
adc
insl
test
stc
sahf
outsb
loopne
add
js
shl
jo
xor
cmp
lods
mov
mov
xchg
les
lret
movsb
pop
lea
fldt
fcmovnbe
mov
mov
push
mov
sbb
adc
push
jge
mov
adc
sub
pop
xlat
or
add
dec
cmp
mov
daa
pop
add
push
adc
push
jl
ror
sbb
sti
push
lret
cmp
pop
das
or
ss
push
out
and
xor
pop
fcmovu
cmp
out
push
sub
xchg
cld
repnz
dec
mov
lret
testl
sbb
loop
sub
fs
adc
jns
inc
and
fldenv
inc
mov
ss
xchg
or
inc
shrl
and
test
push
jg
fisubs
ja
out
jp
cmp
clc
jp
rclb
sbbl
ret
xchg
jp
sub
inc
xlat
ficompl
or
test
enter
jne
cmp
ja
sbb
lret
mov
lods
sub
insb
mov
jle
push
pusha
xchg
addr16
lahf
hlt
ret
test
xchg
pop
lcall
xchg
lea
adc
bound
nop
dec
stos
and
shl
leave
jae
out
push
sub
fmul
sub
jle
mov
fiaddl
addl
jmp
sbb
notb
cmpsl
add
pop
add
mov
mov
add
add
xlat
mov
sbb
mov
and
push
jecxz
fs
adc
arpl
xchg
cmp
and
leave
or
pop
fsubs
mov
jmp
push
inc
lods
mov
sahf
add
out
dec
adc
fs
sbb
aad
filds
xchg
and
jmp
mov
xchg
rcrb
pop
or
pop
pop
pop
mov
inc
cmp
sbb
int3
stos
sub
jne
xor
lret
inc
adc
or
mov
dec
mov
push
test
out
fiaddl
arpl
call
mov
sub
ja
xchg
ja
xchg
mov
mov
repz
fwait
or
andb
inc
pop
inc
out
add
push
insb
std
icebp
decl
imul
inc
scas
aad
xor
add
lcall
mov
lahf
aas
inc
inc
stos
cmpsl
sub
add
nop
mov
inc
je
ss
insb
mov
push
test
adc
out
or
mov
add
mov
dec
insb
push
cmc
sarb
mov
mov
inc
lret
fs
mov
mov
sar
cmc
sub
sbb
lret
imulb
int3
shll
jbe
xchg
cmp
insb
subb
pop
push
fbstp
inc
int
inc
pop
dec
sbb
cmp
insb
pop
arpl
sub
test
and
add
cmc
jmp
fstpl
call
mov
into
movsb
cmc
mov
mov
xor
push
nop
out
mov
inc
cltd
push
rclb
inc
pop
cmp
or
shrb
fsubl
pusha
jno
mov
mov
push
jne
push
dec
cmp
addr16
sbb
or
rolb
sbb
sub
mov
mov
movsb
push
inc
mov
xchg
mov
stc
adc
sahf
leave
repnz
mov
push
std
sub
pop
cmpsb
in
dec
sub
xor
push
cltd
pop
push
mov
repz
add
sub
xlat
stc
sbb
into
xchg
add
mov
jb
orl
frstor
mov
or
aam
push
cwtl
jnp
mov
and
lds
or
push
xchg
imul
push
sbb
mov
sub
adc
out
xchg
mov
mov
insl
stc
test
push
push
fimuls
hlt
xor
into
movsl
in
sub
daa
rorb
enter
push
pop
aas
mov
mov
jno
leave
mov
cmp
jecxz
loopne
xchg
pop
fisttps
sbb
negb
insb
daa
lahf
adc
and
lea
ret
jns
cmp
push
and
fists
test
xchg
enter
push
pusha
cmp
sub
cmp
and
xor
push
loope
mov
pop
jge
pop
addb
sub
loopne
fisubl
inc
dec
cmp
popa
adc
in
pop
jbe
pop
out
dec
hlt
sti
cmpl
adc
aas
adc
test
icebp
mov
sub
dec
mov
shl
push
and
icebp
lcall
lods
add
and
imul
and
and
jp
cld
xchg
in
jno
outsl
aam
insb
ds
movsl
sahf
icebp
adc
mov
add
xor
or
xchg
inc
mov
shll
add
jp
jge
data16
lahf
stos
xchg
fidivs
sbb
adc
repz
out
iret
push
jecxz
out
cmp
in
filds
jns
sbb
dec
jl
test
out
dec
clc
loopne
loope
movsb
mov
fwait
cmc
stc
call
dec
xchg
imul
sbb
push
jnp
mov
mov
test
into
mov
gs
clc
dec
mov
cwtl
dec
xor
pop
hlt
out
fs
subl
aad
inc
loope
lret
into
bound
stos
sbb
xchg
sub
pop
sar
mov
add
out
and
sub
int
jecxz
fs
movsl
rclb
div
xor
jo
mov
popa
jbe
in
out
cmc
incb
adc
mov
out
pushf
sahf
pushf
ds
outsb
or
pop
dec
ss
nop
mov
mov
xchg
xor
pop
adcb
jae
push
flds
add
aaa
push
adc
mov
mov
inc
lahf
or
test
xchg
scas
jge
jno
cmp
dec
inc
add
sarb
fnstenv
jl
mov
cmc
push
cmpsb
in
mov
sbb
in
mov
add
jb
and
fidivrl
jnp
jns
aas
dec
xchg
push
cwtl
in
movsl
imul
fisubrs
mov
sahf
mov
inc
ret
mov
dec
dec
xlat
clc
ja
pop
bound
out
mov
rcrl
int
sahf
push
das
inc
je
pusha
mov
sbb
out
stos
enter
cmp
cmp
lahf
fsub
dec
mov
scas
andb
cmpsl
cmc
jmp
add
lcall
das
jecxz
pop
sarb
nop
add
xor
push
xor
imul
xchg
loop
push
aam
loopne
sub
xchg
in
cli
daa
testl
and
dec
lret
sbb
mov
mov
fs
xor
dec
sbb
jl
sub
push
mov
inc
xchg
push
inc
sub
cmp
filds
iret
icebp
dec
dec
push
push
jle
xchg
pop
leave
rorb
mov
out
sub
and
sub
xchg
jecxz
add
mov
es
outsb
out
mov
mov
lret
pusha
mov
pop
pop
loop
mov
cmpb
mov
out
or
jmp
cmp
lods
movsl
dec
ljmp
loopne
leave
daa
dec
xchg
imul
mov
push
out
shlb
out
fcmovnb
adc
mov
lahf
pop
cmp
iret
jmp
in
divl
or
std
jae
test
icebp
iret
pop
loope
aaa
fs
mov
jbe
insl
sub
repnz
ret
outsl
pop
mov
pop
rcr
adc
mov
in
pop
inc
fbstp
cmp
popa
out
jo
lods
mov
aad
xchg
ja
in
pop
cmp
repz
sub
mov
mov
push
movl
roll
ret
in
jo
push
lea
xor
lds
jno
cmpsb
push
push
in
in
pop
inc
and
repnz
push
mov
push
xor
xor
xor
repz
adc
loope
jne
xchg
mov
insb
ds
xchg
sbb
loop
pusha
std
sbb
nop
sbb
sub
or
imul
stc
sub
roll
cmp
mov
mov
call
inc
out
xchg
in
ljmp
fwait
mov
sti
je
lds
adc
push
dec
movsb
mov
ljmp
insl
test
jae
daa
add
adc
rcrb
push
or
pop
xor
fnstenv
es
sub
mov
mov
or
enter
loope
fwait
xor
or
inc
mov
cmc
sub
cmpsl
or
test
es
mov
mov
lods
and
cmp
outsb
sbb
sahf
xchg
leave
mov
shrb
xor
mov
fcomps
popa
insb
xchg
insb
xor
mov
jo
mov
enter
cmp
xchg
mov
jnp
outsl
pop
fs
scas
sub
sub
icebp
xchg
add
js
iret
ljmp
push
inc
sbb
xchg
filds
cmpsl
ss
ds
xor
xchg
mov
cltd
pop
ss
or
sbb
jne
stos
stc
xchg
jbe
cmp
and
cmp
mov
in
std
lcall
inc
rcl
outsl
mov
cmpsl
cmc
xor
xor
and
pop
scas
pop
lods
fsub
xchg
repnz
push
jmp
mov
dec
in
pop
jle
addb
pop
sahf
test
push
push
mov
mov
pusha
cld
push
in
sbb
pop
add
pop
mov
into
or
mov
inc
fidivrs
sub
jl
out
lock
or
or
or
out
test
jo
aad
push
sbb
sbb
add
or
sub
cmp
jg
dec
loop
push
pop
aaa
dec
mov
stos
pop
jle
add
or
repz
inc
les
lea
inc
push
sbb
and
sub
sbb
ja
ljmp
xchg
stos
xchg
mov
jnp
cld
mov
out
shrb
adc
xlat
int
lret
movsl
loop
dec
mov
sbb
ja
xor
jmp
adc
jb
mov
pop
das
mov
leave
mov
and
test
scas
pushf
xchg
jmp
nop
ret
das
jmp
xor
out
repnz
cmpsw
inc
repnz
cmc
dec
roll
clc
adc
jmp
lahf
je
cmpsl
fwait
mov
inc
or
orb
adc
rclb
cmp
jmp
enter
or
std
loop
ss
push
dec
mov
dec
jle
je
mov
sbb
mov
not
push
sbb
insl
repnz
test
mov
insb
push
test
scas
popf
jecxz
dec
pushf
lahf
dec
outsb
mov
hlt
leave
test
mov
jg
sbbb
pop
pop
bound
push
in
xor
cmc
insb
push
inc
bound
sub
in
or
mov
push
xchg
jae
jl
lahf
orl
pop
add
jle
cmp
cmpsb
add
mov
nop
mov
lret
push
popw
pop
popa
adc
out
dec
pusha
sbb
cmp
lods
dec
nop
push
leave
cmpsl
mov
sarb
and
test
mov
sub
dec
pop
je
mov
scas
lock
mov
mov
mov
shlb
sub
fstpt
push
je
push
outsl
inc
dec
enter
int3
rcrl
push
lock
sbb
das
lret
mov
sub
jb
enter
pop
lcall
xchg
dec
lods
test
dec
fsubrl
pop
or
inc
mov
frstor
inc
adc
bound
sub
jg
fwait
dec
inc
cltd
in
pop
hlt
add
cld
out
rcrl
sbb
xor
adc
test
std
xchg
es
pop
sub
lds
cmp
or
aam
adc
cwtl
fildl
xchg
jo
repnz
cli
push
aaa
jo
and
mov
cmp
not
aam
xchg
mov
dec
test
mov
lods
inc
mov
xor
jae
mulb
rorb
sbb
notl
adcl
xor
or
frstor
mov
mov
pop
jle
xor
repz
push
push
adc
and
or
and
mov
pop
inc
test
lea
mov
loop
rclb
push
mov
outsb
rorb
jne
daa
fldenv
pop
cli
loop
sub
dec
pop
scas
lea
movsl
and
icebp
and
pop
push
outsl
dec
insb
pusha
or
xor
gs
loope
fisttps
pop
push
mov
sti
sub
mov
cwtl
shlb
xor
cli
inc
mov
addr16
xlat
xchg
ret
fstps
mov
or
lds
pusha
mov
sub
aad
movsl
js
jmp
xchg
pop
xchg
es
dec
sub
movsb
bound
enter
mov
insl
gs
inc
xchg
mov
mov
mov
aaa
xchg
pop
movsl
pop
add
stc
aaa
loopne
test
out
add
fldcw
sub
sbb
sahf
decb
mov
xor
in
pop
mov
int3
xor
adc
pop
mov
lcall
sbb
pop
pusha
sbb
and
inc
aam
xchg
cmc
fcoms
or
into
xor
mov
aad
inc
mov
cmp
je
aad
push
or
and
movsl
in
icebp
or
dec
mov
or
ljmp
push
mov
jne
xchg
enter
pop
imul
jg
test
aam
cmpsb
jne
sbb
std
mov
mov
stc
sti
mov
lods
xchg
loop
xchg
or
setne
mov
sub
aad
ret
test
mov
sub
test
std
roll
cmp
push
cmp
add
pop
xor
or
sbb
dec
sbb
pop
add
sahf
add
mov
out
xlat
sub
mov
sub
pop
xchg
in
dec
add
adc
pusha
adc
push
pop
pop
or
push
mov
fwait
jl
jg
imul
push
mov
enter
cmp
mov
jle
imull
enter
sahf
lret
in
mov
iret
in
mov
fcoml
hlt
shlb
xchg
inc
mov
sub
mov
pushf
adc
ljmp
mov
mov
cmp
sbb
jp
mov
stc
mov
sbb
fwait
popa
cmc
and
cmp
fidivrl
cmpsl
icebp
aaa
mov
lock
add
int
xor
call
mov
dec
subb
push
je
mov
std
pop
gs
pop
shr
cmp
cmpsb
sub
xchg
int3
rorl
sub
les
inc
mov
and
sbb
sti
inc
mov
cmp
push
lea
les
ss
mov
mov
cmc
xor
inc
testl
cmp
sbb
in
incb
lahf
push
fcoml
cmp
jmp
aam
test
nop
mov
addr16
lock
popa
sub
push
int
fsubl
mov
rclb
cmc
push
or
rorl
rolb
cmpsb
xchg
push
push
push
push
push
pop
stos
in
pop
dec
push
or
lds
lods
pushf
loope
or
push
sub
lods
xor
jb
repnz
sub
testl
xor
insl
mov
lcall
icebp
inc
push
cmp
pop
push
pusha
stos
shll
sbb
dec
add
aam
sub
repnz
popa
pop
pop
pop
ret
inc
fldenv
mov
sbb
pop
sbb
call
xchg
mov
mov
fucom
sbb
add
push
nop
ret
je
xor
add
pop
inc
cmp
mov
and
lcall
idiv
test
and
les
rcrl
iret
pushf
rclb
ja
arpl
int
iret
pop
imul
push
sub
jge
aam
pop
cs
fmul
fucomp
scas
pushf
xor
movsl
sbb
jp
and
aaa
and
mov
inc
xchg
dec
lahf
outsb
mov
xor
neg
pop
imul
push
or
mov
test
test
ja
rcll
outsb
inc
mov
in
mov
inc
xchg
or
testb
push
sub
lock
sbb
add
addl
cmc
lds
jecxz
sti
mov
je
add
push
mov
jb
cld
pusha
mov
push
mov
ret
push
mov
aam
stc
lock
std
pushl
sub
inc
ret
mov
mov
rcr
xchg
icebp
jge
ret
aaa
mov
out
fsubl
mov
sub
not
push
out
and
pop
and
xor
push
scas
sub
rclb
jg
xor
mov
xchg
cli
cmp
push
cmp
outsl
outsb
adc
rcrl
fdivs
and
push
lret
xor
stos
test
clc
mov
mov
xorl
loop
and
jp
mov
jp
or
mov
addb
ss
pop
int3
and
lock
fidivrl
fcoml
sub
clc
jl
iret
push
lds
mov
insb
inc
fcoms
popf
ja
push
imul
jnp
test
loope
push
jmp
loop
mov
testl
loope
stos
mov
and
repnz
push
decb
std
xchg
ja
sahf
push
mov
xor
pushl
xchg
or
loopne
int
std
mov
pop
std
cmp
pop
xchg
push
imul
inc
in
mov
lods
or
jns
jb
leave
cs
int3
mov
jns
dec
and
add
pop
adc
push
mov
hlt
sbb
mov
sbb
mov
push
xor
dec
xchg
test
inc
imul
lret
cwtl
pop
ds
ljmp
cmpl
cmpb
out
and
dec
call
jo
sub
inc
or
in
repz
inc
cmpsl
test
pushf
inc
out
sub
push
scas
das
xchg
jecxz
mov
mov
jns
in
push
cs
xlat
fwait
out
mov
repz
pop
pop
lds
pop
mov
adc
sbb
rclb
jnp
mov
mov
ss
cmp
loope
daa
sub
pop
std
lret
mov
xchg
mov
push
dec
push
out
int3
mov
push
mov
daa
sub
scas
rcrb
sub
pop
cmp
xchg
insb
test
sub
stos
mov
fcom
lret
jmp
adc
cmpsb
or
sbb
jp
adc
dec
nop
and
rcl
lret
pop
pop
scas
cld
mov
sbbl
and
lahf
inc
xor
test
scas
push
mov
add
push
mov
sub
mov
push
ljmp
pushf
icebp
mov
or
repz
movsl
jge
pop
adc
mov
inc
jge,pt
jno
andl
adc
pop
mov
sbb
push
xor
cmpsl
int
pop
cmc
or
adc
shll
pop
mov
mov
fstpt
xor
inc
push
cli
out
mov
hlt
sbb
mull
pusha
push
pop
fbld
mov
xchg
out
cmp
mov
fiaddl
pop
into
xchg
mov
xor
gs
popa
arpl
jnp
sbbb
pushf
cltd
sahf
and
xchg
iret
mov
je
inc
mov
jge
cwtl
js
popa
in
adc
or
sbb
adc
pop
sarl
fnstcw
pop
mov
dec
lock
insl
xchg
popa
mov
jns
push
pop
or
sbb
inc
dec
pop
stos
test
shlb
outsl
xor
jns
or
xchg
mov
mov
and
mov
outsb
pop
jns
and
sbb
and
ja
mov
xchg
push
mov
scas
jae
loop
xor
xor
icebp
sub
dec
xor
fisubl
sbb
adc
int3
sbbb
add
fldcw
out
or
sahf
imul
pop
pop
sahf
ss
jnp
pop
mov
fsubrp
inc
cmp
cmpsl
cmpsl
mov
out
insb
jle
rorl
mov
mov
shlb
push
mov
jge
sbb
add
xor
das
mov
jbe
adc
cmp
xchg
sub
fidivrl
pop
hlt
push
mov
pushl
aad
aas
fdivs
shll
test
out
mov
mov
push
cltd
insl
scas
mov
pop
loope
popf
push
in
insl
test
ds
daa
sbb
and
cmp
lret
jmp
xchg
sbb
lcall
bound
push
adc
cli
pushf
jo
sbb
mov
cmp
jg
sub
mov
add
inc
es
iret
lods
outsb
jg
fdivrs
cmpsl
popf
mov
ss
lds
popl
cmpsl
mov
sub
dec
mov
test
stos
sahf
sbb
jno
lea
lds
fsts
mov
jecxz
cltd
cmp
repnz
cmc
adc
aaa
pop
jl
mov
cmp
mov
lcall
fsts
xchg
inc
outsb
jl
ljmp
adc
repz
pop
rcrl
pop
sub
aad
xchg
mov
xor
mov
jmp
inc
icebp
ss
adc
repnz
jle
and
jp
mov
mov
fiaddl
sbb
xor
pop
mov
pop
inc
gs
std
sti
or
dec
int3
jo
push
inc
jmp
pop
addr16
insl
sbb
xchg
nop
mov
mov
shlb
movsb
mov
or
les
out
or
in
mov
std
ret
sbb
mov
dec
or
scas
mov
cmp
int3
aam
jae
mov
add
mov
andl
sub
mov
sub
mov
scas
cmpsb
call
subb
or
or
test
dec
mov
inc
fs
lea
lock
sbb
xor
adc
xor
aam
andb
pop
jmp
jbe
cmp
push
cwtl
cmpsb
int
pop
xchg
lods
call
dec
mov
xlat
nop
xchg
cmpsl
pop
shlb
popa
insl
sbb
fcoml
jmp
scas
or
gs
test
loope
gs
jl
or
inc
je
sub
shrl
js
sub
sbb
add
add
in
mov
push
bound
mov
xor
xchg
fdivr
xor
bound
mov
loopne
shrl
push
scas
lret
jne
es
sub
cwtl
mov
sbb
pop
xchg
jg
jns
mov
inc
mov
fnstsw
pop
das
imul
jns
pop
mov
sbb
aad
inc
and
sub
push
movsl
mov
mov
lea
inc
cs
in
mov
xchg
sub
push
out
mov
addr16
xchg
pop
pusha
cmp
cld
mov
movsl
dec
mov
and
mov
dec
fbld
add
push
jmp
clc
adc
inc
int3
rcr
jmp
jp
out
sbb
sub
loopne
insb
pop
in
pop
bnd
lret
cmp
idiv
cltd
pop
ds
fs
xchg
loop
cmc
push
adc
lods
or
fucomi
cmp
andb
testb
lret
mov
mov
bound
faddl
cmpsl
sub
sub
cmp
aas
shll
rcrb
dec
xchg
shrl
sbb
inc
movsb
sbb
and
fwait
mov
dec
or
div
xor
loope
shrl
imul
adc
jb
movsb
stc
cltd
xor
dec
mov
jmp
dec
lea
or
xor
sbb
leave
add
stos
mov
cmp
mov
add
mov
jbe
pop
in
jecxz
int3
js
into
dec
pop
and
daa
mov
mov
xchg
jne
addr16
mov
adc
js
push
push
jmp
and
mov
mov
lock
gs
pop
pushf
add
push
sti
inc
ss
adcl
dec
stc
leavew
packuswb
and
cli
push
adcl
in
add
cmp
icebp
ret
inc
gs
mov
pop
xchg
lods
push
leave
test
mov
dec
push
pop
mov
cmp
repz
sbb
inc
xlat
mov
sbb
ret
rcrl
ljmp
or
jmp
xor
xor
lods
and
jns
mov
push
mov
mov
push
push
scas
cmp
outsl
dec
adc
lret
lcall
je
in
daa
or
shll
rcl
in
push
imull
jnp
pop
insl
cmp
lea
jle
mov
int3
sbb
out
imul
push
and
mov
popa
inc
outsl
lods
adc
ficoms
xor
mov
aaa
test
lea
popa
sbb
pop
mov
push
in
lret
push
pop
cmp
out
mov
or
scas
jne
rcll
adc
xor
scas
jmp
push
lcall
mov
cmp
inc
aam
retw
lcall
es
aaa
or
mov
pop
jmp
cmc
popa
cmp
cmp
push
sahf
xor
adc
sub
scas
test
cltd
pop
insl
fbstp
and
pop
dec
pop
xor
lock
in
and
icebp
test
ret
test
ret
repz
jmp
sbb
flds
dec
or
inc
sub
jge
jg
mov
movsb
jecxz
pop
inc
out
pop
ret
adc
xchg
add
sbb
sub
adc
aad
js
fisubrs
mov
arpl
push
ds
fcoms
mov
mov
cmp
pop
inc
sub
mov
cmp
mov
sub
addr16
shlb
imul
add
dec
out
mov
add
mov
sub
aaa
fs
pop
and
mov
xchg
ret
sbb
add
sahf
cli
and
sbb
adc
pop
scas
mov
jo
add
and
mov
shrl
enter
sub
in
cmc
mov
mov
adc
inc
sbb
sub
xchg
insb
popf
lock
jp
sbb
adc
repz
out
pop
scas
repnz
in
xor
loop
mov
xchg
es
daa
or
mov
ljmp
ret
pop
sbb
lods
testb
cmp
xchg
add
pop
sbb
jo
nop
inc
inc
stc
mov
out
dec
jle
test
ds
jecxz
push
cs
jno
into
dec
mov
js
jecxz
mov
clc
scas
cmpsb
mov
insb
lods
sbb
inc
lds
in
shrl
sbb
xchg
mov
xchg
in
add
add
stc
cmp
push
lret
push
or
xchg
mov
and
cwtl
out
gs
cmp
mov
mov
mov
repz
xchg
loope
je
outsb
aaa
sbb
outsl
cltd
dec
ret
movsl
lret
xor
push
push
divb
jmp
push
mov
sub
xchg
pop
adc
and
mov
int
movsb
rorb
pop
fsubr
test
fimuls
arpl
pop
xorb
notl
stos
insb
mov
jns
adc
stos
xor
clc
imul
add
dec
add
pop
cld
aad
repz
clc
jge
dec
ret
es
xchg
mov
dec
pop
cli
int3
rcl
leave
xor
scas
test
mov
je
aas
stos
jp
xchg
mov
insl
stc
clc
xchg
and
ret
dec
leave
sbb
mov
push
inc
pop
jne
sub
je
out
adcb
insl
xchg
movsl
xchg
inc
cmpb
cmc
rclb
jo
add
arpl
cmpsb
pop
pop
dec
lret
mov
mov
pop
cmc
daa
out
push
pop
clc
mov
cli
add
push
xchg
js
movsb
dec
xor
aad
js,pn
dec
or
mov
dec
dec
xchg
add
jns
dec
lods
xor
mov
movsb
mov
ret
ljmp
sub
stos
movl
imul
roll
daa
dec
lods
mov
push
je
call
sti
push
sbb
mov
cmp
bound
add
push
fisttpl
mov
lods
mov
xor
pushf
jg
add
popf
jmp
inc
pop
pop
stc
mov
mov
add
enter
jns
out
jp
mov
cli
loope
sub
xor
add
pop
insb
jmp
dec
je
lcall
scas
sub
aad
into
inc
repz
mov
xor
inc
popa
stos
jecxz
add
and
mov
mov
jne
add
mov
jne
in
dec
outsb
outsl
mov
out
sahf
negl
lret
push
sub
scas
push
xchg
arpl
push
xor
xchg
mov
int3
notl
shll
pop
or
ret
ret
aaa
mov
mov
mov
mov
jb
in
or
popf
lock
adc
xor
or
adc
ljmp
sahf
push
arpl
stos
rcll
into
jecxz
xchg
bound
sub
mov
mov
or
and
dec
jb
sub
and
sahf
out
mov
inc
orb
xlat
int
sti
pop
pop
or
sti
gs
add
push
int3
jne
or
inc
jle
xchg
xchg
icebp
mov
fisubrl
or
mov
jmp
add
ds
in
fdivrl
sub
mov
add
xor
enter
aam
xor
or
test
inc
test
add
in
popa
or
data16
jle
imul
cmpsl
inc
clc
xor
jns
test
lret
pop
pusha
xchg
aas
push
shrb
xchg
jbe
and
std
push
mov
push
inc
and
test
pop
fisubrs
mov
adc
sub
push
jno
cmpb
int
xchg
jae
addr16
out
mov
cs
ds
jl
push
jns
adcl
jno
mov
mov
cwtl
xchg
leave
mov
shll
dec
mov
fdivrl
stos
cmc
lock
cmp
out
daa
insb
js
in
mov
mov
scas
cmc
icebp
or
jnp
xchg
lahf
shll
and
sbb
jecxz
std
cmc
jge
rclb
mov
dec
fsubrs
fwait
nop
out
insl
push
add
cmpsb
ljmp
pushf
xchg
leave
fdivrs
sbb
jg
into
in
mov
xchg
sbb
and
push
push
ret
mov
dec
sbbl
fsubs
inc
or
int3
push
rcrb
mov
ds
add
add
in
push
ror
aaa
cmpsb
in
cmp
loopne
cmp
sub
out
pop
add
out
mov
xor
std
test
xchg
mov
inc
or
or
adc
mov
bnd
jecxz
movsb
adc
aam
adc
sub
nop
aaa
flds
mov
stc
push
lret
lods
out
je
push
inc
pushf
fisttps
in
jle
lahf
shll
jmp
dec
push
push
notb
scas
lods
sbbl
nop
xchg
jecxz
sbb
mov
ret
gs
xor
out
repz
sbb
mov
mov
inc
pop
mov
jns
and
jmp
pop
and
or
rol
dec
xchg
or
push
adcb
jp
lahf
mov
loope
int3
mov
mov
pop
adc
shll
adc
lret
add
pop
jmp
xchg
lcall
aaa
shrb
adc
mov
lret
popf
push
jbe
ret
xchg
test
in
jae
std
sti
pop
push
mov
pop
xchg
fmull
ja
rol
ss
lret
pop
xor
call
rcll
pop
insb
test
jg
jo
sub
outsl
mov
push
sbb
clc
push
jne
repnz
scas
iret
xchg
add
int
sub
repnz
fiaddl
inc
cmp
sub
adc
mov
inc
pop
push
xchg
and
int
les
in
or
shl
fiadds
mov
sub
add
rcll
sbb
inc
test
inc
add
popa
jne
mov
adc
into
sub
sarb
push
sbb
jge
inc
aas
push
sbb
adc
movsl
sub
subl
push
ror
aas
xor
lea
and
mov
movsl
inc
lods
les
pushf
ret
mov
pop
cltd
fwait
jne
imul
or
dec
inc
shlb
mov
iret
cmpsl
xchg
xchg
in
xor
lods
bound
popa
adc
out
jo
cs
and
in
jp
lahf
stc
cld
iret
jecxz
lret
sbb
add
adc
aas
xor
pop
inc
fs
sahf
pop
lret
ss
dec
lcall
xchg
mov
es
fs
xor
pop
call
push
loop
sti
cmp
cwtl
sahf
mov
push
jp
in
pop
lea
push
mov
or
add
adc
or
mov
iret
sbb
or
mov
negl
std
imul
cwtl
gs
mov
or
bound
mov
pop
fstps
test
and
fcomps
sahf
sub
or
pop
aas
repz
aam
pushf
cmpsl
bts
jmp
xchg
aas
sahf
arpl
add
cmp
or
sbb
sarl
or
mov
enter
pop
add
mov
test
aas
jp
loop
iret
scas
push
cmpsb
xor
jb
cmpsl
mov
enter
insl
dec
xor
pop
pop
xor
inc
jp
fs
fcomip
pusha
add
mov
xchg
in
push
and
ds
in
and
add
or
pushf
jbe
ljmp
rcrb
rclb
jg
fisubs
or
or
divb
mov
sbb
pop
sbb
movsl
add
addr16
stos
inc
cmp
mov
pop
and
mov
xchg
and
or
fildll
mov
xor
rcrb
lea
mov
xchg
mov
cli
push
lret
iret
sti
fcoms
cwtl
adc
xor
mov
xchg
lret
stc
ror
or
shlb
sbb
mov
dec
sbb
or
mov
int3
movsb
dec
scas
jne
gs
arpl
and
loope
aam
cld
adc
adc
out
pop
cld
clc
daa
mov
pusha
mov
pop
enter
adc
xchg
dec
fucomp
jb
out
bound
repnz
mov
imul
dec
and
mull
pop
inc
jp
sarb
sahf
addr16
es
mov
dec
ds
pop
xor
movsl
pop
sbb
data16
test
out
inc
or
sbbb
loopne
dec
repz
fucomi
loopne
scas
out
push
mov
pushf
leave
xchg
inc
xor
test
scas
rcrl
or
insb
sbb
std
xchg
inc
lea
das
or
push
add
or
push
push
mov
loopne
stos
lret
jmp
pop
int
imul
ret
push
cli
mov
cmp
add
sbb
fsubl
push
push
cmp
iret
jbe
stos
mov
loopne
int3
mov
cltd
xor
outsl
push
push
cmpsl
inc
movl
data16
or
mov
pushf
push
and
adc
or
out
xchg
pop
scas
xor
or
push
dec
jbe
jb
outsb
push
jns
xchg
je
sub
icebp
sti
sbb
aaa
ljmp
xor
frstor
add
inc
xchg
stos
jmp
aaa
cmp
lahf
imul
lret
push
mov
shl
bound
mov
mov
insl
pop
jnp
shl
leave
stos
cmpsl
xchg
out
loopne
adc
stc
lods
or
pop
mov
loop
or
cmp
inc
sub
pop
push
lds
dec
out
mull
test
pop
adcl
mov
fs
or
enter
add
int
mov
test
dec
mov
stos
ficomps
bsr
stc
mov
mov
in
clc
fwait
mov
rcr
mov
sbb
sbb
cmp
mov
and
pop
pop
es
imulb
bound
dec
loope
pop
dec
jmp
addr16
sarl
jl
pop
mov
and
dec
xlat
jp
inc
mov
cmpsb
faddp
sbb
test
mov
ret
dec
icebp
scas
jno
repnz
inc
jp
imul
jecxz
mov
js
fmuls
sub
andb
jmp
call
push
inc
stos
jae
push
in
push
push
push
movsl
dec
aaa
dec
and
mov
mov
xchg
cmpsb
out
and
mov
jmp
adc
in
add
cmpsl
repz
dec
xor
enter
sbb
ja
rolb
mov
pop
cmpsl
pop
es
insl
and
sbb
aaa
push
mov
mov
inc
cmpsb
jge
and
jns
add
loop
add
inc
sti
data16
enter
out
add
xchg
dec
aad
lahf
aaa
push
stos
xlat
cld
lods
insb
in
xor
es
jmp
jne
mov
sbb
and
and
add
loope
lock
jae
add
mov
mov
sets
stos
sbb
jp
pop
cmc
shrl
cltd
cmp
aaa
xchg
pusha
add
mov
leave
aaa
mov
pop
aas
pop
imul
dec
push
movsl
movsl
or
sahf
ss
jg
push
adc
mov
xor
mov
insl
push
mov
pop
clc
rorl
popf
push
pusha
push
cmp
mov
xchg
std
imul
xor
adc
dec
loope
pop
mov
push
jnp
adc
out
rolb
cmp
and
repnz
xchg
addr16
pop
jp
fneni(8087
mov
repnz
leave
mov
leave
xchg
arpl
daa
xchg
fcmovbe
mov
outsb
xor
adc
mov
fsubrs
pop
fsubl
mov
popf
pop
inc
cwtl
or
mov
dec
sti
jmp
and
cmp
aas
in
rorl
mov
imul
dec
xor
mov
call
fmull
jg
loopne
lret
jae
inc
cmp
lret
test
pop
jmp
pop
out
stc
jnp
shrb
sub
lahf
fcoml
xchg
iret
ljmp
insb
xchg
mov
mov
test
ljmp
fbstp
clc
cmc
fldt
xlat
jo
mov
and
inc
das
push
xor
pop
xlat
iret
push
inc
jo
cmpsb
idivb
xor
into
cltd
jb
lods
sahf
inc
lret
cwtl
push
pushf
insb
lahf
jle
jnp
push
add
cmp
xchg
stos
aad
jb
imul
enter
jmp
data16
xchg
and
repz
divl
xchg
inc
pop
mov
cmc
aad
cmp
out
addr16
xchg
fidivrs
mov
movb
cmp
cmp
int
pop
jo
fisubs
decb
bound
xchg
adc
lahf
mov
push
cmp
adc
inc
inc
dec
sti
inc
jecxz
or
xchg
mov
or
ljmp
jmp
xchg
dec
push
cmc
mov
or
xor
sbb
ret
pop
jmp
cmp
popf
sub
test
mov
inc
aaa
lret
xor
xor
ss
lahf
xchg
pop
cmp
stos
repnz
scas
shrb
dec
sub
pop
and
bound
rclb
fld
test
outsl
inc
and
pop
mov
pop
ret
add
sbb
out
mov
lret
bound
arpl
xchg
xor
pop
mov
sbb
popa
pushf
shlb
push
aam
fmul
pmullw
push
xor
mov
or
adc
mov
add
push
std
test
mov
roll
xlat
mov
lret
mov
sbb
lret
ss
rclb
cmp
dec
adc
inc
push
out
sbb
jecxz
mov
push
mov
sub
sahf
or
daa
sbb
sbb
xchg
roll
xor
push
dec
aam
jne
mov
fucomp
cmp
notl
dec
iret
mov
inc
dec
gs
loope
aad
xlat
daa
shlb
in
loopne
mov
xor
mov
mov
sub
sbbl
mov
cmp
mov
clc
push
into
jno
data16
pop
cmp
dec
int
pushf
add
outsl
jne
pushf
rclb
pop
in
jle
outsb
cmpb
stc
xchg
inc
sub
mov
cwtl
jge
jae
inc
enter
mov
jg
inc
int
enter
jne
pop
stc
aaa
mov
pop
imul
loope
add
testb
out
mov
mov
insl
mov
or
add
stc
ja
daa
andb
cmp
mov
xor
xlat
pop
push
in
repnz
das
in
lcall
mov
fsubs
jge
inc
mov
dec
popf
stos
push
dec
mov
lret
sbb
or
dec
jp
call
cli
fstpt
into
je
push
xchg
mov
cmp
in
bound
adc
call
xchg
jae
js
lods
xchg
imul
fld
xchg
lock
mov
xchg
test
popf
mov
add
cmp
scas
adc
psubw
jmp
mov
inc
cmp
and
xorl
dec
xchg
les
and
addr16
cmp
sbb
dec
fistps
cld
in
sub
jp
lahf
stos
sbb
cmp
jecxz
ss
and
into
cli
cmp
loop
outsl
sbb
testl
mov
lahf
rorl
mov
rcll
fs
cli
ds
inc
sub
sbb
mov
push
test
cmpsb
push
mov
add
push
mov
in
pop
push
pop
imul
push
push
fdivs
mov
and
call
in
pop
into
mov
fldt
stos
insb
xchg
mov
dec
adc
or
adc
cmp
push
mul
inc
pop
add
andb
cmp
mov
mov
sbb
cmp
or
or
test
pop
out
xchg
inc
xor
inc
xlat
jnp
out
arpl
sbb
cmovp
ret
arpl
xor
cwtl
mov
cmp
aaa
stos
sbb
pop
mov
dec
push
out
mov
sbb
sbb
test
xchg
imul
int3
cltd
jns
sub
sub
pop
push
cmpsl
sub
add
ret
aas
cmp
sbb
adc
test
push
jne
int
add
fdivrl
scas
xor
aas
push
dec
pusha
lcall
mov
int
cmpsb
shl
push
pop
adc
roll
lret
cmp
outsb
insl
xor
xchg
push
stos
mov
jb
or
dec
ljmp
mov
cmp
jg
loope
mov
push
xchg
ss
test
pop
and
pop
xor
ja
aad
faddl
cmp
pop
xchg
mov
test
test
dec
jmp
sti
push
dec
pop
outsb
subl
repz
shl
mov
xchg
shll
aas
test
jg
clc
mov
test
insb
push
call
pop
push
fsubrl
add
rclb
or
mov
xor
mov
push
test
in
jg
or
mov
push
mov
mov
sub
negl
mov
xor
add
fsubs
ret
adc
dec
and
ret
adc
mov
fmuls
icebp
aaa
inc
and
and
mov
xchg
cmpsl
inc
pop
ds
ljmp
adc
mov
xchg
mov
clc
movsl
jae
mov
test
push
cmp
pop
sub
and
xor
out
cli
mov
mov
inc
les
fsubrl
pop
out
ret
push
js
push
pop
adc
or
or
push
mov
nop
iret
cmp
and
ljmp
adc
popf
das
mov
jno
adc
or
rcl
loopne
scas
push
push
ficoml
cmpsl
mov
jns
je
imul
mov
js
add
mov
xchg
repz
sub
add
cmp
cmpsl
std
pop
mov
pop
or
ds
mov
popf
mov
push
jbe
mov
push
jb
mov
sub
int3
mov
in
pop
mov
and
mov
inc
or
sub
or
rcrl
dec
adc
mov
ja
fidivs
push
pop
ficompl
pop
jbe
sub
push
jl
mov
jne
rcll
clc
call
sbb
adc
sbb
cs
ss
movsl
movsl
xor
pop
jae
dec
popa
cltd
add
movl
dec
pop
ss
notb
cmp
mov
adc
bound
je
mov
xchg
int3
fst
jnp
adc
cs
inc
mov
add
add
aad
and
pop
leave
push
cmp
pop
cld
sarl
pop
out
test
fstpt
push
scas
cwtl
mov
test
sbb
push
iretw
daa
push
mov
fsubl
ret
dec
inc
dec
jl
test
xchg
xchg
repnz
nop
mov
cmpb
rclb
xor
cmpsb
xchg
cli
lret
jle
mov
push
sbb
dec
lahf
cwtl
mov
mov
popf
mov
in
dec
and
pop
js
dec
mov
or
xchg
mov
or
jns
mov
pop
jle
mov
idivl
shlb
pushf
sub
xor
mov
cmc
rcl
or
lock
orb
jae
and
iret
mov
repnz
dec
lret
xor
clc
mov
pushf
loop
pop
inc
cmp
test
xchg
lock
pop
loope
inc
adc
fistps
push
sbbl
mov
xchg
or
cmp
jns
arpl
loop
out
lods
mov
push
lret
in
push
testl
cld
into
mov
mov
xchg
decl
mov
out
jbe
ficoml
fisubrl
xchg
push
int3
out
jge
jo
inc
mov
and
mov
repnz
js
imul
cmpsl
dec
push
pop
mov
inc
mov
aas
add
sahf
outsb
cmpsl
lds
add
icebp
push
pop
ficompl
jle
repnz
subb
or
scas
pushl
popf
aaa
pop
dec
mov
jle
in
inc
jle
repnz
push
mov
xchg
adc
xchg
push
sbbb
in
mov
mov
ljmp
mov
cmp
arpl
mov
dec
ret
mov
popa
xchg
jmp
xor
cmp
cmp
cmpsb
out
mov
xorl
push
ja
adc
sub
out
test
mov
popa
xchg
xchg
lcall
cmpsl
xor
or
push
cmpsb
mov
loopne
lds
mov
fildll
sub
imull
fildl
out
movsl
shll
xor
cmp
sub
adc
add
inc
leave
add
ds
repnz
test
mov
jmp
cli
pop
xor
adc
sub
sbb
sti
dec
stos
jg
inc
cwtl
fwait
dec
ret
xor
adc
sbb
arpl
daa
test
dec
shl
sbb
jl
lret
pop
fidivs
pushf
es
and
insb
pop
or
push
das
xor
out
jo
xor
jg
and
pop
insb
icebp
in
clc
imul
sbb
push
jnp
rorl
add
ljmp
add
nop
loope
test
mov
jle
mov
mov
pop
stos
inc
divb
orl
rcrb
fs
lahf
dec
jb
movsb
adc
mov
fdivrl
pusha
xchg
push
sarb
test
xor
loop
inc
test
nop
aad
push
and
cmp
add
rcr
pop
adc
add
inc
lret
sbb
lods
xor
std
and
mov
xchg
add
jmp
pop
xchg
rcrb
xor
shll
repnz
lock
sub
add
jbe
jmp
mov
lahf
aaa
jl
das
insl
cltd
sbb
xor
dec
sbb
push
in
mov
xor
dec
pop
mov
mov
stos
out
out
lahf
dec
mov
jl
jg
aam
lcall
pop
je
in
nop
fsubl
xor
aas
mov
popa
in
xor
stos
pop
out
mov
dec
xchg
xor
cs
pushf
repnz
mov
sbb
jnp
mov
out
nop
imul
popa
insl
aam
cmp
jge
lahf
or
es
out
cmp
sub
sub
push
mov
jp
daa
pusha
out
add
dec
ss
jge
and
pop
adc
sub
data16
aad
imul
cmpsl
mov
jnp
shl
jne
or
test
cmp
out
sub
sbbb
or
cmpsb
mov
xchg
push
xlat
or
mov
cmp
mov
leave
add
sahf
cmpsl
mov
inc
imul
xchg
sub
xor
cmp
sbb
inc
ja
mov
les
cwtl
or
scas
pop
int3
aaa
push
hlt
in
faddp
and
mov
shrl
xlat
sub
aad
mov
jmp
jb
or
mov
and
jne
out
inc
rclb
xor
arpl
mov
jbe
fnstcw
rcrl
push
out
jmp
cmp
aad
pop
addr16
fnclex
cmp
ja
gs
sbb
dec
shlb
sti
out
mov
and
into
arpl
stos
fdivp
push
lds
shl
ljmp
xor
jmp
shlb
imulb
lret
jl
sub
sbb
lret
pop
push
fimuls
movsl
ret
and
xchg
leave
xchg
outsl
mov
dec
inc
add
add
rorl
int
or
scas
push
fadd
cs
xorb
mov
repz
or
inc
or
jp
xor
sub
adc
push
push
pop
jo
pop
mov
jle
adc
cld
sbb
pop
add
out
xlat
and
cs
fcomps
scas
cld
sub
xor
lcall
ret
adc
mov
jbe
mov
test
jp
in
mov
fdivrl
xchg
lcall
cmp
pop
or
cmp
push
lods
das
adc
je
inc
sbb
inc
aad
adc
cmp
shrl
xchg
lahf
ret
mov
pop
mov
cs
add
mov
pushf
or
adc
in
lahf
mov
add
push
xor
ss
mov
and
inc
stos
fmull
loopne
mov
shrl
sbb
push
ret
repnz
add
jne
xchg
fisubs
pusha
mov
xorb
int3
jmp
cli
pusha
icebp
dec
or
or
pop
mov
clc
fsub
mov
in
int
xchg
outsl
cmp
stc
and
popf
adc
add
adc
fisubrs
mov
movsb
xchg
into
or
xor
iret
lcall
test
add
leave
shlb
out
int3
inc
xlat
or
clc
xorl
pop
jge
push
push
jecxz
mov
push
xor
int3
xlat
inc
jne
or
push
mov
ljmp
and
cmc
shl
cmp
mov
add
pop
mov
jae
dec
jge
push
mov
test
inc
mov
pop
xchg
cwtl
adc
leave
in
ja
aad
push
ret
and
xlat
ss
lcall
dec
mov
sub
mov
lret
lret
fisubl
repz
scas
mov
cmp
stc
and
xchg
stos
sbb
mov
pop
adc
adc
mov
fs
cmp
bound
jmp
mov
jl
and
shll
decb
sbb
sub
push
xlat
jnp
sub
inc
lcall
mov
aam
add
out
push
push
and
jle
int3
and
adc
insl
cld
orl
xlat
xchg
xchg
mov
cmpsl
adc
inc
adc
hlt
je
xor
pop
rolb
or
lods
leave
sbb
pop
std
rolb
lods
xchg
mov
dec
icebp
xchg
push
cmp
hlt
add
xor
push
xchg
jnp
pusha
scas
and
jl
cmpsl
jae
sbb
fldcw
imul
pushf
mov
xor
xor
pushf
js
sbbl
loop
add
and
adc
jae
repz
jae
aaa
inc
sbb
push
lock
push
aas
les
cmpsb
arpl
dec
mov
frndint
addl
add
cmp
mov
or
inc
mov
iret
mov
add
mov
ja
or
and
lret
dec
inc
sbb
mov
fistpll
push
sbb
or
dec
xorb
mov
dec
call
test
dec
mov
sbb
adc
cwtl
mov
lea
pop
mov
rcrl
test
cs
dec
mov
inc
lock
sub
fwait
test
pop
fnsave
test
cmp
adc
xchg
into
mov
mov
test
jmp
mov
jmp
mov
dec
inc
mov
sahf
test
mov
fdivrl
jns
push
push
cltd
daa
nop
lret
pop
fsubs
leave
sub
push
adc
sub
sti
bound
inc
xchg
sti
pop
push
jecxz
mov
and
xor
pop
jecxz
pop
push
test
aam
jb
je
jle
mov
xchg
mov
out
and
sti
add
es
inc
adc
in
out
lea
push
ja
mov
sbb
sub
mov
lret
mov
repz
mov
lds
mov
test
add
icebp
mov
push
rep
inc
jp
dec
out
rcrb
cmp
daa
inc
aam
stos
adc
lret
sub
pop
mov
jg
jne
jae
loope
stos
push
inc
aam
out
lea
mov
scas
sbb
xchg
pop
pusha
add
lods
inc
push
jp
mov
jbe
outsb
decl
push
jmp
bound
aas
ds
lock
dec
in
icebp
roll
arpl
push
cmc
test
mov
fadds
pop
and
in
inc
sub
jecxz
xchg
loop
out
mov
lea
arpl
nop
stos
push
and
jae
arpl
mov
xor
sbb
cld
jmp
dec
mov
mov
xchg
xor
push
data16
xchg
rolb
adc
daa
adcb
adc
inc
lods
add
stos
xchg
and
push
js
out
testb
jne
aam
or
adcb
xchg
enter
push
imulb
sbb
add
xlat
pop
inc
pop
int3
dec
jb
xor
inc
mov
addr16
cmp
div
out
pop
or
in
push
sbb
into
mov
movsl
jb
nop
repz
fdivl
jo
das
push
pop
and
decl
lcall
out
out
outsl
rorl
in
push
push
and
cmp
out
rolb
pop
movsb
in
xchg
sbb
push
ficoms
push
pop
mov
sub
mov
dec
sbbl
hlt
xchg
cmp
rcrl
sbb
add
inc
push
adc
xchg
aam
jo
out
cmc
pop
lds
sbb
mov
jno
out
mov
inc
ds
dec
lds
xchg
sbb
repz
push
les
int
insl
push
xor
lahf
lods
mov
movsl
lret
xchg
push
decl
push
popf
xor
cmp
jo
cs
cli
sub
sbbl
mov
call
mov
mov
stos
stc
or
and
movb
hlt
pop
or
push
add
popa
jge
push
jne
and
dec
mov
dec
push
dec
leave
aas
jl
sbb
outsb
sbb
or
pop
adc
jno
cwtl
cmp
mov
sbb
shlb
mov
mov
ja
mov
xchg
ret
fmulp
push
inc
xchg
scas
add
nop
adc
aad
pop
rorl
xor
dec
jno
mov
jb
dec
mov
ljmp
mov
fnstcw
jge
inc
fsts
icebp
lds
in
pop
fs
push
inc
fs
or
dec
or
fisttpl
pop
or
sarb
pop
sarl
push
mov
push
adc
push
icebp
or
dec
dec
add
repz
pop
lods
jmp
pop
xchg
jne
mov
test
push
or
ja
movsb
sub
ret
aad
mov
push
pushf
mov
push
mov
sub
jl
xchg
mov
out
movsl
ss
jno
sbb
inc
jl
dec
jb
jecxz
push
inc
jmp
hlt
xor
aaa
inc
int
mov
xchg
sbb
or
mov
pop
jne
pop
push
divl
shrl
and
ds
mov
mov
jl
scas
mov
stos
mov
sub
and
adc
out
fldt
imul
sbb
filds
mov
ja
mov
loop
push
dec
and
push
aam
out
push
cmpsl
out
sub
mov
das
popf
test
xchg
inc
xchg
mov
mov
mov
or
xchg
pop
pop
popa
je
push
push
imul
adcl
xchg
mov
push
inc
in
in
mov
outsl
inc
pop
jge
push
jo
je
mov
inc
orl
push
pop
fstpt
xchg
mov
add
xchg
jle
mov
pop
dec
rcl
jp
jo
cwtl
and
jbe
push
fsubs
jb
inc
lods
sub
xor
push
sub
and
fwait
cmpsl
jmp
mov
clc
xor
pop
in
xor
not
js
rorl
or
mov
mov
packssdw
add
int3
aad
leave
mov
jb
clc
xlat
scas
in
or
cwtl
in
ja
nop
mov
mov
push
sub
rorl
arpl
fnstsw
decb
lds
sarl
dec
jge
add
cmpsl
sahf
bound
insb
jl
out
arpl
cmp
addb
jecxz
xor
xchg
inc
aad
lret
popf
xchg
lret
adc
stos
sub
push
cld
dec
in
imul
dec
add
fstpt
pop
imull
push
or
jecxz
jp
lret
push
es
pushf
and
lock
or
addr16
sub
in
push
sbb
jo
pop
stos
cmp
insb
cmp
mov
mov
cmp
lret
or
or
inc
xchg
sbb
dec
add
gs
scas
inc
mov
jl
pop
jnp
imul
pop
sbb
push
push
jb
hlt
repnz
nop
les
mov
mov
in
lock
jno
xor
rol
add
vshufps
fnstcw
cltd
or
das
jno
pop
sub
imul
mov
cmc
mov
pop
dec
add
dec
mov
inc
push
xor
outsb
js
mov
xor
cmc
out
inc
daa
lock
lahf
icebp
pop
mov
cli
add
idivb
repz
fidivrs
stos
fdivs
jecxz
push
cmp
jno
test
pop
pop
out
adc
lods
ss
and
cmp
in
cwtl
enter
leave
xlat
xor
test
inc
je
shll
shlb
es
sbb
cmpsb
mov
jmp
dec
lds
xchg
mov
cmpsl
ret
sub
or
pop
push
test
xchg
daa
out
cmovo
loopne
in
mov
push
add
jl
cmpsb
in
push
ret
pop
cltd
xchg
push
xor
mov
fs
out
pop
data16
arpl
cmpsl
scas
inc
in
into
sub
push
in
cli
sbb
jo
push
dec
enter
aaa
and
or
push
sahf
mov
adc
jbe
pop
rorb
push
leave
scas
xchg
in
cltd
rcrb
inc
sbb
or
shll
mov
std
mov
fcomip
ret
aas
nop
sub
test
outsl
push
lods
xlat
loopne
push
mov
or
cmp
fcoml
inc
je
or
push
pop
test
jp
inc
imull
push
in
fs
jns
cld
shrl
mov
icebp
shlb
decl
aam
add
mov
movsl
lcall
xor
mov
sbb
mov
cwtl
cltd
pop
insb
jl
outsb
movl
leave
hlt
lret
cmp
mov
ss
std
mov
jl
sbb
int
fcompl
cmp
cs
addr16
das
jne
int3
pop
mov
test
aad
mov
sbb
aam
inc
adc
mov
mov
pushf
lcall
mov
xchg
pop
and
mov
dec
dec
cmp
xor
mov
sbbl
push
aam
jg
sbbb
mov
pop
ret
aaa
psllq
aam
loop
call
iret
add
and
xor
leave
add
insb
popf
sbb
fisttpl
xchg
cmpl
sti
mov
add
movsl
out
repnz
inc
pop
add
xor
addr16
test
outsb
js
rorl
out
mov
or
pop
outsb
jg
cmp
adc
lret
stos
ret
bound
adc
shll
add
pop
pop
add
stos
fdivs
xor
imul
clc
adc
outsb
icebp
test
adc
xor
mov
jo
dec
push
stc
sbb
dec
negb
gs
bound
icebp
fisubl
pop
adc
jecxz
cli
testl
repnz
into
sahf
paddw
gs
sub
jg
lock
sub
orb
sti
inc
xchg
sub
lock
into
fsub
aaa
adc
or
test
insb
es
loope
dec
rol
iret
inc
pop
insl
mov
mov
je
cld
movsl
out
push
stc
xor
in
inc
pushf
mov
add
lahf
add
sub
sbb
xchg
jge
ja
sahf
mov
out
movl
push
scas
xor
out
sbb
add
notb
lret
lods
xorl
test
xor
pusha
push
xchg
and
pop
call
mov
insb
pop
push
das
pop
js
lahf
jo
adc
ret
aad
pop
inc
shrb
mov
dec
or
inc
aas
mov
cmpl
ljmp
cmc
int
shlb
dec
push
sbb
enter
mov
jge
insl
cmpsl
fdivl
cwtl
rcl
test
or
mov
push
jne
aas
jnp
jl
cld
xchg
and
push
outsl
or
inc
hlt
or
mov
push
ljmp
jb
sub
push
loopne
and
icebp
add
out
jp
scas
jl
dec
loope
rorb
jp
sub
or
inc
dec
pop
pop
loop
pop
sub
mov
cltd
mov
stos
sub
ret
jl
mov
inc
inc
or
jle
stos
xor
mov
lcall
xchg
jb
roll
movsb
arpl
imul
sti
push
imul
stos
stos
xor
std
test
mov
pop
adc
dec
add
push
add
inc
shrl
sbb
rorl
pop
js
xchg
mov
xor
push
add
aam
fs
xchg
xor
sti
jg
jge
gs
popa
cwtl
push
cmp
loope
sub
fsubs
gs
or
cmp
xlat
scas
inc
inc
stos
outsb
sbb
repnz
fistl
daa
sub
jb
iret
sub
lret
sbb
mov
sub
dec
loope
pop
aam
dec
insb
dec
add
push
mov
mov
into
mov
dec
mov
fadds
imul
pop
xor
mov
pop
sub
inc
and
aas
or
inc
shll
fs
fisubs
lret
mov
in
cmp
push
cmp
js
pop
push
jne
out
shll
outsb
fsts
cmp
xor
push
je
outsb
fs
pushl
inc
cmc
push
popf
ja
and
hlt
sbb
mov
push
test
notrack
loopne
in
popa
pop
adc
leave
in
aad
dec
out
call
push
out
push
lahf
cmp
xor
mov
xchg
pop
stos
insl
sbb
aam
enter
cmp
mov
cmpsb
jge
int3
sub
mov
jns
movsl
insb
fwait
repnz
xchg
jo
data16
ret
cmpsb
popa
push
inc
in
dec
cmpsb
fsubl
test
jmp
hlt
in
sub
mov
stc
enter
add
jno
cmp
test
dec
xchg
ljmp
add
fwait
sbb
adc
lret
pushl
repz
mov
and
int3
jbe
or
push
mov
cs
or
out
stos
dec
xor
sbb
mov
adc
out
or
and
ja
in
xor
mov
push
jae
popa
inc
and
mov
push
fstp
sar
repnz
xchg
or
sbb
sub
cs
cltd
fstpt
jns
push
mov
daa
lea
add
lret
xchg
popf
lea
scas
xchg
adc
dec
ret
jns
cli
sbb
cli
movsb
icebp
adc
in
mov
sbb
js
ljmp
or
shl
xor
xchg
lds
dec
sub
test
rclb
ss
push
jl
cmpsb
mov
jp
inc
in
fstpl
add
add
arpl
mov
rclb
xor
std
inc
xchg
and
ret
insb
fs
aad
bound
fsubr
dec
ficoml
ja
mov
dec
pop
push
mov
out
mov
lahf
fld
fcomps
ret
mov
pop
and
jae
sahf
jne
or
ds
jg
pushf
aad
push
sbb
xchg
sbb
ja
fbstp
and
sub
cmpsb
adc
adc
pop
imul
pop
adc
xchg
pop
mov
popa
aad
mov
loop
add
imul
fbstp
jb
movsb
shrl
xor
pop
jmp
jns
dec
xchg
std
test
and
sarb
jne
mov
mov
lock
icebp
jnp
mov
push
jo
push
les
mov
pop
call
movsl
pop
shrl
les
push
daa
and
and
lds
adc
je
in
push
sub
jbe
dec
xchg
pop
sbb
inc
pop
repz
xor
daa
jae
test
jmp
decl
push
or
cltd
out
jmp
jl
xor
mov
push
pop
pusha
shll
adc
sbb
leave
or
and
test
push
jb,pn
loop
daa
pop
loope
or
lret
stos
mov
and
mov
inc
or
lock
and
xor
mov
pop
pop
lock
jmp
inc
xchg
es
int
iret
mov
test
push
push
xchg
dec
pextrw
daa
adcl
sbb
cli
mov
and
test
xor
and
lock
stc
adc
addb
outsb
jbe
data16
push
repnz
jo
push
cli
push
add
jmp
ds
bound
pop
push
mov
mov
add
lret
es
cmpsl
fsts
in
pop
pop
mov
push
xor
les
outsl
das
bound
jnp
lret
push
aam
dec
aaa
fwait
mov
test
inc
sbb
repnz
dec
or
mov
dec
push
pusha
sub
cmp
fists
test
je
push
mov
lods
xor
or
push
outsb
push
push
mov
outsl
sub
cmp
ss
mov
aas
pusha
sub
adc
cmp
pop
scas
dec
push
add
movsl
test
testb
mov
bound
xchg
dec
jmp
xorb
pushf
pop
sub
mov
insl
insl
or
fwait
xor
mov
fcoms
inc
dec
int3
test
das
jo
mov
jmp
add
data16
jle
mov
sbb
sub
loop
addl
lods
enter
mov
sub
push
add
mov
call
fwait
sub
jns
cli
push
cmp
outsb
shll
fldl
mov
lods
hlt
mov
adc
enter
mov
adc
in
jge
mov
popl
xor
test
aas
test
push
cld
add
in
mov
cmovl
in
rcrl
insl
mov
lahf
sub
addb
testl
aam
insb
cmp
pusha
pop
pop
jnp
sbb
stos
fwait
sti
addr16
mov
adcb
mov
aam
jne
sub
aad
sbb
jae
jnp
pop
xchg
jge
cmc
mov
cmc
call
sbb
in
cmp
loope
and
or
mov
cmp
pop
dec
mov
dec
jp
int3
popa
push
cli
push
loope
sarb
out
dec
stos
out
mov
fcompl
addl
dec
jge
cli
adc
rcrb
add
ss
pop
stos
mov
add
mov
test
mov
lods
daa
add
push
lods
enter
cwtl
add
sbb
push
stos
mov
jno
fst
fldl
xchg
into
push
pushf
adc
jmp
das
mov
cmp
lea
dec
xchg
andb
mov
rol
mov
xor
loope
fwait
clc
mov
test
ficoms
cmpl
fmull
leave
mov
stos
clc
cli
mov
cmpsb
add
or
jbe
adc
outsl
push
or
aaa
mov
mov
testl
and
cmp
lea
add
mov
add
loope
sub
gs
sbb
push
pop
in
mov
cmp
xchg
test
add
sub
push
inc
mov
inc
xchg
sub
sti
icebp
xchg
mov
mov
iret
cmp
shll
mov
adc
or
sub
das
icebp
and
ret
add
jp
pop
test
aaa
pop
and
into
in
inc
add
and
sbb
pop
dec
movsb
rep
int
xchg
sqrtps
std
aam
int
xchg
pop
push
lahf
std
cli
push
stc
hlt
test
sbb
pop
into
sti
adc
fldcw
add
in
nop
push
inc
xor
xor
in
stos
or
popf
les
fs
out
sarb
sub
out
imull
push
imul
mov
ret
jmp
mov
pop
adc
add
push
push
and
pop
cwtl
pusha
in
lods
mov
popf
mov
xor
lea
int
fcmovbe
sub
mov
adc
xchg
pop
add
push
int
inc
clc
int3
rclb
mov
xchg
push
and
push
xor
mov
addr16
inc
mov
dec
cs
jae
iret
lods
dec
adc
mov
xor
in
ljmp
scas
imul
dec
inc
cmp
sti
fdivp
dec
addl
push
ja
stc
xchg
inc
lods
cmp
scas
and
sbb
out
cmp
adcb
fnstcw
ja
les
faddl
dec
mov
ret
ljmp
adc
add
mov
roll
movsb
cli
data16
xchg
aam
hlt
mov
sub
dec
push
test
rclb
mov
jae
test
and
mov
jbe
lcall
push
cld
les
dec
inc
pop
jmp
xchg
inc
sbb
mov
ror
fiaddl
sub
sub
mov
mov
and
lret
jmp
mov
xor
xchg
sarl
push
ret
loop
fldl
test
lods
andl
sbb
mov
dec
sti
call
iret
int3
cmc
unpckhps
aas
test
xor
rcrb
or
add
or
call
adc
popf
andb
testb
stos
pop
imul
inc
loop
sbb
xchg
in
scas
mov
pusha
pop
adc
shlb
leave
push
mov
push
sarl
xorb
xor
es
jp
mov
ret
adc
aaa
push
xor
fdivrl
mov
lahf
enter
mov
jmp
jb
jle
adc
push
mov
inc
clc
sahf
idivl
push
or
xor
cmc
stos
cld
push
ds
push
xchg
loopne
cmp
stos
sbb
xor
add
sbb
cmc
lods
xor
shrb
les
cmc
and
sahf
daa
xor
iret
ss
repnz
or
mov
pop
bound
pop
and
idivb
and
pop
dec
cmp
fbld
push
mov
insb
in
mov
mov
and
je
cltd
cmc
arpl
and
iret
ds
jbe
movsb
lret
xchg
sti
inc
or
aaa
pop
cs
push
mov
test
lea
lds
inc
in
mov
sbb
stos
ficoms
arpl
pop
mov
mov
imul
pusha
iret
loop
push
out
cmp
jnp
popa
scas
dec
push
lret
or
sbb
bswap
push
cmp
or
or
xchg
outsb
arpl
aaa
sbb
mov
mov
pop
stos
fistps
xchg
pop
sti
pop
dec
pop
jg
sbb
in
in
cmp
js
leave
or
mov
imul
xor
inc
repz
push
sbb
fmul
mov
leave
fimull
in
cmpsl
xchg
sarl
inc
sbb
xor
leave
rcr
mov
mov
mov
int3
out
xchg
in
inc
fldl
mov
pop
ret
mov
xchg
push
mov
xchg
xlat
inc
mov
xor
sub
out
cmc
das
fdivr
mov
test
shr
insb
lahf
ds
sub
add
push
pop
addr16
movsb
decb
jmp
test
cmc
jecxz
insb
shl
dec
push
add
mov
pop
addr16
fsubrs
adc
ss
jmp
adc
push
movsb
fsubrl
clc
pop
in
cmp
lea
jp
outsl
dec
adc
ds
xor
or
sbbb
sbb
cmp
push
pop
pop
scas
push
add
data16
mov
clc
jle
dec
jo
in
out
inc
jae
into
ds
mov
adc
mov
push
push
adc
pop
push
add
xchg
sbb
dec
and
pop
jno
insb
mull
ja
cmpsl
data16
mov
divb
sub
mov
sahf
jb
into
adc
dec
dec
andl
pop
sbb
mov
je
cmpsl
mov
aas
outsl
adc
push
mov
clc
jmp
sub
lret
cmpsb
shrl
jbe
jno
adc
and
out
xchg
jge
mov
fcmove
dec
ret
aaa
stc
push
mov
adcl
scas
outsl
sub
lahf
sbb
mov
mov
lods
xor
and
ss
mov
outsl
out
mov
repnz
or
in
std
hlt
pusha
fcmove
mov
hlt
scas
xlat
mov
test
repz
dec
enter
adc
stos
mov
xchg
mov
ja
outsl
popf
or
fadd
stc
lcall
fildll
mov
jg
pop
cmp
lock
cmpsl
mov
cli
jp
mov
data16
push
or
add
fisubs
xchg
pop
arpl
popa
icebp
adc
fs
adc
and
mov
mov
cmc
notb
pop
mov
iret
add
mov
lock
xor
cmc
xchg
mov
sub
mov
push
int
rcl
mov
push
jl
popa
xor
push
insb
mov
jns
or
and
add
xchg
mov
mov
mov
sahf
ljmp
cmpsl
sbb
repnz
mov
fiadds
dec
enter
dec
cmp
adc
into
iret
push
xor
shrl
add
pop
scas
lret
je
stos
mov
jg
popf
jns
call
and
ja
popf
rcr
cwtl
mov
mov
sub
aad
dec
shll
add
inc
mov
in
push
test
jecxz
adc
mov
daa
push
xor
adc
or
push
addl
jmp
add
pushf
mov
mov
xchg
or
jle
fdiv
push
arpl
repnz
ret
sbb
mov
mov
pop
outsb
push
fadd
xorb
daa
xor
popf
and
mov
adc
pusha
pop
shlb
cld
movsb
fldenv
xchg
pop
pop
or
in
mov
jmp
shlb
jo
and
jp
test
xchg
sbb
ds
incl
fldl
cmpsb
jnp
jns
mov
mov
jae
mov
arpl
insl
mov
jne
call
test
lret
mov
lock
jp
fwait
ljmp
das
mov
repnz
dec
out
cmp
and
rclb
xor
add
pushf
jb
mov
pop
adc
xchg
mov
imul
lret
xor
lahf
add
in
mov
mov
les
rcll
lret
fistl
or
sbb
or
shll
xchg
mov
lret
into
lods
or
jno
ret
push
neg
es
scas
add
pop
mov
mov
add
stos
mov
test
cli
jp
mov
push
rcrl
lahf
and
call
int3
inc
or
xchg
pop
mov
jmp
dec
bound
lret
hlt
gs
pop
jb
sahf
loopne
es
xchg
jnp
inc
add
test
shll
inc
mov
arpl
adc
aam
push
movsl
cmp
mov
or
int3
sbb
loopne
ret
aaa
in
stc
xchg
and
mov
ret
sub
arpl
addb
xchg
xchg
out
pop
or
mov
loopne
out
leave
fcomps
popf
jp
mov
ret
aam
pop
pop
inc
in
imul
out
mov
pop
sti
xor
adc
imul
inc
gs
cmp
mov
push
into
fstpl
cmp
xchg
push
xchg
jmp
sbb
xchg
pop
mov
sbb
mov
aaa
pop
in
scas
popf
mov
leave
fsubs
test
push
jb
aad
sbbb
pop
stos
dec
xchg
dec
lcall
adc
cmpl
shrl
leave
cmp
mov
fadds
sub
shll
in
loop
push
aam
fisttpll
adc
sub
or
pop
leave
cmp
pushf
lods
das
sbb
push
psraw
pusha
shlb
jmp
ret
leave
pop
test
mov
mov
fucom
xchg
jnp
popa
leave
popf
je
xchg
jne
in
pop
fstpt
mov
rorb
call
xchg
mov
sub
in
int3
fs
jae
es
aaa
mov
fidivs
stos
aaa
mov
adc
popa
lods
cmpsl
fwait
jne
loop
dec
xor
test
dec
or
cmc
ret
in
mov
pop
xchg
jb
inc
out
mov
push
mov
loop
mov
ret
push
xchg
jb
cmp
jno
mov
jns
xchg
outsl
push
cmp
or
imul
push
notb
fidivs
cmpsl
int3
xor
ret
mov
xor
imul
repz
pop
sub
dec
jmp
push
and
or
mov
enter
dec
adcb
add
inc
cmpsb
out
mov
jle
dec
or
leave
pusha
push
ds
into
pop
mov
scas
and
xchg
lds
cmpb
add
xor
in
cmp
jae
ss
jbe
cmp
inc
jl
insb
rol
mov
pop
jae
lahf
into
inc
imul
sahf
mov
subb
bound
cmp
sbb
sar
mov
dec
sub
push
outsb
dec
dec
fsubrp
xor
inc
xchg
push
fisttpl
mov
sbb
mov
out
pop
and
jle
dec
or
push
lea
push
je
xor
inc
fdivrl
jmp
add
mov
sti
xor
mov
push
adc
dec
add
inc
mov
adc
inc
sub
scas
xchg
mov
pop
stc
xorb
in
jb
lds
fldt
inc
pop
mov
popa
ret
xchg
sbb
test
mov
inc
movsb
fs
lds
sbb
in
scas
mov
ret
jo
mov
xor
in
push
inc
and
cs
xchg
or
jne
jns
ljmp
fldl
jl
push
ja
pop
int3
bound
out
push
mov
jae
out
fstpt
jp
cmc
xchg
dec
shl
hlt
pop
xchg
mov
cmp
test
cli
fnstcw
inc
lret
das
xchg
mov
addr16
aas
leave
xchg
and
xor
les
es
mov
lock
test
add
mov
cmpsb
imulb
add
out
lock
sbb
pop
add
fld
outsl
and
add
out
cmp
lods
fcmovb
loope
rclb
lods
and
and
rcrl
imul
fadds
mov
jno
sub
xchg
add
adc
movsl
mov
test
out
or
inc
or
sbb
shl
test
jle
out
lods
and
into
fsubl
aas
or
loopne
ficompl
pop
sub
lcall
lret
stc
xchg
pop
sbb
mov
dec
inc
aam
dec
xchg
xor
mov
jo
aas
sbb
pop
inc
push
int3
jne
and
and
lods
jmp
inc
iret
aad
ss
xchg
lods
mov
sti
test
mov
pop
xchg
inc
push
cmp
add
scas
stos
cwtl
cs
ret
cmpsb
and
xchg
fndisi(8087
lea
cmpsl
aas
popa
mov
js
xor
cld
out
inc
mov
jle
xchg
insb
inc
add
addr16
jecxz
jecxz
dec
inc
sahf
ja
push
ds
mov
jl
int
lock
out
jae
dec
orb
pushf
mov
jp
pushf
scas
pop
push
pop
cmp
lret
pop
cmp
stos
adc
stos
mov
push
outsl
lahf
or
ss
xchg
jo
in
loope
sbb
pop
xor
inc
mov
int3
jmp
lods
xchg
test
fucom
inc
int
scas
mov
sbb
pop
dec
fldcw
inc
push
daa
xor
lret
cmp
stos
pusha
push
test
cli
push
lahf
sbb
jae
xchg
cmpsb
pop
movsb
imul
add
jno
adc
data16
push
xchg
push
cmp
sbb
stc
insb
xchg
jbe
push
adc
mov
mov
pop
pop
or
add
sub
hlt
mov
and
negb
xchg
pop
lahf
fmuls
fucomip
cmpsb
xchg
mov
insb
jecxz
lock
int3
add
mov
fwait
sbb
push
xor
negb
add
imul
inc
mov
lock
and
mov
pop
xor
ja
fcoms
jo
fsubl
xchg
arpl
pop
test
mov
in
or
imul
loop
mov
add
inc
rolb
fadd
or
jl
daa
int3
adc
mov
outsb
addr16
aas
ljmp
pop
adc
cmp
push
cmp
and
add
xchg
jmp
dec
and
int3
sub
cmp
mov
test
jb
loop
dec
jmp
or
loope
jmp
sti
imul
xor
xchg
mov
xorl
jge
repz
or
dec
cs
xchg
dec
jbe
aaa
mov
movsl
inc
vmovlpd
lahf
sti
jp
jne,pt
inc
xor
aaa
loop
sub
xchg
add
les
mov
fiadds
test
add
out
mov
or
js
inc
out
push
dec
iret
icebp
xchg
mov
mov
sbb
scas
push
dec
push
daa
inc
mov
loope
popa
and
pop
mov
pushf
lcall
xor
lcall
ss
cmp
add
sbb
ss
xchg
mov
adc
xchg
adc
sbb
push
sbb
std
mov
scas
dec
and
sbb
jmp
mov
jbe
push
jge
arpl
mov
mov
mov
loop
es
push
dec
outsl
in
scas
jge
incb
jecxz
mov
mov
adcb
push
mov
les
dec
mov
and
xchg
push
adc
jne
cmp
int
call
loopne
lahf
adc
jmp
cs
mov
jge
sbb
es
cmpsb
aad
loop
inc
or
cmp
push
in
in
cmp
ss
jne
mov
ret
stos
lret
scas
mov
jb
stos
push
sarl
push
insl
in
popa
push
fsubs
pop
repnz
sub
xchg
scas
loope
add
cltd
jmp
ret
lods
sti
xchg
jp
movsl
jp
cwtl
into
sub
test
ljmp
cmp
jmp
js
std
pop
sub
das
out
ja
fcoml
mov
mov
movsl
sub
out
popf
mov
pop
ljmp
or
jb
mov
loope
lock
inc
fnstsw
adc
insb
or
inc
in
inc
pop
pop
aas
push
in
insl
mov
pop
or
add
cmp
push
dec
lods
stc
sub
cli
jl
lea
mov
bts
jp
sub
lods
add
xor
sbb
mov
cmpsb
inc
sarl
adc
loope
fildl
pushf
jl
cwtl
push
mov
pushf
or
mov
orb
cmpb
ret
xlat
dec
testb
les
sarl
mov
dec
mov
ljmp
pushf
cwtl
xchg
xchg
or
push
popf
in
sbb
ljmp
rolb
sahf
push
push
popa
fistpl
es
sbb
cmp
add
loopew
adc
fimull
xchg
push
inc
pop
aam
sbb
imul
mov
pop
out
inc
xchg
dec
xor
cmp
lret
push
or
cmp
or
sub
enter
sub
adc
pop
scas
out
xor
in
out
in
out
das
dec
mov
xor
pusha
iret
pop
aaa
xor
mov
stc
xor
popl
rorb
jecxz
ja
jb
outsl
adc
mov
xlat
mov
pop
dec
and
call
jmp
pop
lds
sbb
mov
or
out
xor
test
mov
stos
pushf
cmp
sti
mov
and
push
fcmove
pop
notl
in
mov
xchg
sbb
or
inc
outsb
mov
xchg
xchg
and
cmc
pop
push
fisttpll
out
lcall
cmp
dec
mov
mov
filds
rol
jne
enter
ret
sahf
xor
jmp
data16
dec
push
or
xchg
leave
or
movsb
mov
inc
push
xchg
popf
xor
ret
push
popa
xchg
es
cmpsb
xchg
mov
ret
jae
mov
push
and
dec
mov
in
pusha
adc
cmp
ss
stc
lock
test
mov
mov
loop
outsb
je
sub
addr16
inc
in
pop
ret
cmp
cld
dec
fldcw
jae
sbbb
insl
ret
ja
pop
js
mov
push
aad
sub
push
push
jl
or
mov
inc
xchg
lock
xchg
rcr
and
fmuls
lock
fs
jg
iret
or
aas
fnstenv
jne
pop
xchg
jnp
push
add
xlat
test
shr
jae
and
sub
adc
push
pop
movsl
ret
std
sub
js
iret
sbb
nop
aam
xchg
push
int
pop
aas
push
push
or
addl
cld
jns
lods
hlt
leave
sub
das
mov
enter
sub
mov
cs
dec
or
cmp
push
and
sbb
sub
insb
and
inc
ret
icebp
das
fcomps
iret
jns
cmp
mov
movb
pop
rcrb
jmp
push
mov
dec
pop
cmp
outsb
push
add
xchg
pusha
scas
add
sbb
push
mov
movsl
stos
mov
pop
lahf
rcrl
jle
dec
push
adc
lods
stc
divl
push
in
or
cmp
movsb
addr16
inc
daa
jecxz
inc
push
xor
nop
notb
dec
push
adc
sahf
fstpl
or
aam
cmp
push
xor
bnd
cltd
test
lret
cmpsb
mov
mov
je
sbb
xchg
test
mov
shll
adc
inc
rol
in
cmpsl
repz
ja
mov
ljmp
dec
ss
or
sahf
inc
pushl
ja
sbb
ret
loope
push
xor
pop
fs
dec
push
stos
scas
sti
inc
icebp
pop
xor
mov
add
cltd
test
jb
sub
sarb
lret
das
das
push
adc
loop
or
ret
cli
jbe
lock
push
pushf
ret
enter
ds
mov
sub
inc
pop
into
cmp
shll
loopne
inc
jbe
fisubl
mov
xchg
dec
or
pop
pop
add
xchg
aas
dec
pop
jae
push
scas
xchg
leave
stos
push
dec
push
lods
std
cmp
cmp
push
bound
test
jp
mov
adc
jle
xchg
fisttpl
scas
xor
push
fdivs
loope
xor
and
push
lret
xor
pusha
enter
jge
dec
inc
fisttpll
lret
dec
into
inc
inc
pop
cmp
sub
sub
imul
mov
sub
jl
test
mov
mov
ljmp
and
jmp
fldenv
push
outsb
cmp
lods
ljmp
mov
pop
and
mov
pop
repnz
cmp
dec
sahf
jl
jns
inc
mov
lret
mov
mov
xlat
imul
loop
repz
stos
mov
add
ja
imul
inc
pop
pop
sbb
fcom
cmpsb
xor
push
xchg
test
add
pop
clc
cmpsl
ds
mov
cmp
push
or
sub
repnz
mov
cmp
mov
sbb
inc
xchg
mov
sbb
shlb
stos
mov
adc
cmp
imul
or
clc
js
lret
lret
or
insl
loope
xlat
nop
add
xor
lret
dec
jg
les
rorb
add
hlt
fs
or
pop
xorl
aam
loopne
movsb
or
adc
cmp
popa
das
fnstsw
outsb
rcrl
xchg
jmp
pop
xor
jp
loop
push
pop
jbe
jp
out
dec
out
push
mov
jle
call
sbb
add
push
scas
iret
dec
nop
sub
adc
ja
jge
pop
js
add
pop
adc
cmc
dec
popf
and
stc
fyl2x
xor
nop
es
pop
in
mov
loopne
adc
fidivrl
js
fwait
inc
pop
aad
sbb
test
stc
cmp
jmp
pop
inc
adc
mov
add
rolb
movb
nop
aad
gs
icebp
mov
dec
cld
test
push
scas
sahf
in
pop
lods
dec
ds
mov
bswap
jnp
sti
and
push
ljmp
sub
cmp
jp
repz
adc
mov
pushf
lods
push
inc
scas
pop
flds
jg
arpl
inc
cmp
fbld
sbb
ja
inc
push
andl
cmp
stos
aad
dec
lret
cs
call
imul
xchg
aaa
aad
fstps
adc
push
sub
cmp
mov
fucom
cmp
orb
out
add
jecxz
mov
jecxz
cmp
jl
stc
sub
add
shll
loope
pmaxsw
sbb
fadd
insl
or
mov
out
scas
test
jl
add
xchg
push
pusha
cmc
into
or
int3
in
scas
lea
aaa
dec
out
inc
jae
hlt
mov
cmp
mov
push
push
or
jecxz
lret
divl
push
xlat
cmp
aam
call
loop
gs
test
das
es
int
fidivl
mov
hlt
pop
pusha
mov
clc
mov
stos
shlb
jnp
xchg
outsl
repz
cmpsl
sbb
mov
xor
pop
sbb
adc
cmp
mov
or
fadd
loope
xchg
scas
imul
outsb
and
pop
mov
sbb
bound
add
mov
adc
pop
push
add
testl
movl
mov
push
add
push
cmpb
scas
sub
stos
psubsb
sti
in
outsl
sbb
inc
jp
das
push
mov
xchg
dec
dec
and
in
add
cmp
idivl
lea
ret
imul
sbb
sbb
imul
or
stos
clc
cmp
ss
mov
js
xchg
iret
cmc
cmp
stc
xchg
adc
lods
std
lea
mov
mov
mov
cmp
cld
loopne
adc
in
add
xchg
cmpsl
in
mov
xchg
cmp
pop
jns
dec
iret
pusha
and
mov
adc
xchg
in
xor
icebp
sub
sbb
push
ja
ss
push
shrl
mov
dec
insl
sub
push
mov
cmc
push
xchg
test
lcall
sti
stc
hlt
cmpsb
xor
test
int
aad
and
fldt
loope
sub
mul
jmp
hlt
push
cmc
push
push
xchg
sbb
into
pop
mov
xor
in
fsubrs
cmpsl
insl
bound
movsb
mov
dec
imul
pop
push
adc
jg
add
lds
and
pusha
jae
push
loope
int3
js
pop
bound
rolb
pushf
nop
dec
mov
jecxz
pushf
mov
cltd
mov
jecxz
int
std
mov
adc
sub
ficomps
cltd
and
sub
or
arpl
in
dec
xchg
int
xlat
lock
xor
gs
cmp
push
jnp
aas
xchg
mov
fs
mov
jbe
repnz
movsl
mov
inc
scas
jb
mov
mov
xchg
xor
insl
pop
inc
pop
xor
cmp
mov
popf
sti
ret
mov
in
hlt
or
xor
mov
rorb
cmpsl
xchg
pop
inc
push
call
jno
pop
in
and
sub
out
fstpt
fstpt
and
and
and
jg
nop
movsb
pop
adc
sar
out
adcl
lods
mov
mov
mov
shll
dec
or
lea
and
cmp
mov
sahf
jle
xchg
iret
sub
loopne
faddl
pop
push
into
lret
xchg
iret
xchg
sbb
inc
ss
pop
out
mov
mov
xchg
cmpsl
repz
ret
inc
inc
inc
movsl
push
dec
das
ret
imulb
mov
xchg
add
push
in
test
add
xor
jbe
push
sahf
jns
push
cmp
xchg
das
orl
and
fistpl
push
aaa
pushf
xchg
and
adc
sbb
pop
mov
xchg
lahf
stos
repz
clc
aaa
ljmp
or
lcall
pop
out
popf
pop
or
mov
xchg
cmp
jl
xor
lds
xchg
dec
push
ds
inc
adc
mov
pop
in
gs
add
cmc
pushl
loop
mov
push
call
push
mov
or
jae
inc
push
jnp
shrb
dec
add
pop
push
lea
aam
add
lods
pop
pop
test
out
cmp
inc
iret
sar
out
movsl
xchg
and
jns
cld
imul
stc
dec
int
jno
scas
icebp
pop
addr16
mov
push
xlat
xchg
sahf
mov
cld
int3
push
mov
insl
mov
stos
and
dec
aad
mov
push
adc
shlb
test
mov
andb
es
fistpl
cmpsl
in
and
clc
xor
sahf
les
jg
ljmp
fstpl
pop
imul
loopne
cltd
aaa
addr16
mov
movsl
movntps
pop
dec
adc
daa
inc
out
mov
fistpl
push
rcr
imul
cs
push
jne
fwait
lock
xor
mov
jecxz
mov
enter
lods
xor
in
jnp
or
sub
enter
sub
int
pop
je
jge
ljmp
int
imul
imulb
or
push
dec
repnz
addr16
inc
xchg
pusha
jb
or
loope
and
mov
test
jp
dec
fsubl
xchg
jne
and
mov
xchg
push
add
in
sub
mov
inc
mov
inc
fcoml
cmp
dec
je
dec
pop
mov
and
jecxz
sub
in
test
ss
sti
mov
cmpsl
aad
sub
xlat
mov
insb
outsb
arpl
es
fsubs
mov
nop
sbb
pop
aam
dec
add
inc
push
xchg
in
or
shl
testl
into
loopne
popa
scas
ds
int3
gs
addr16
push
and
in
hlt
incl
rcrb
xor
mov
mov
jge
gs
fsubr
mull
adc
cmpsl
addb
jl
dec
in
outsb
pop
les
jmp
test
and
xor
movsb
fildl
push
xor
or
xor
sahf
add
out
add
xor
dec
cltd
sbb
xchg
hlt
sub
loope
push
mov
inc
dec
sbb
inc
pop
mov
xor
cmp
js
mov
mov
pop
fs
dec
jns
lret
push
fcompl
mov
sbb
sbb
int
or
jecxz
jae
or
ret
cli
addr16
pop
add
daa
mov
mov
jmp
subl
inc
fimull
pop
movsb
pop
divb
and
fsubs
mov
cmp
sbbl
fmuls
icebp
add
shl
hlt
and
rcl
adcl
mov
hlt
call
adc
in
pop
lds
adc
sub
outsb
sbb
dec
and
daa
dec
lret
jg
pop
mov
sub
out
and
xlat
fmuls
fidivrl
movsl
pop
jne
adc
jl
imul
mov
and
pop
pop
cmp
jmp
pop
daa
jb
fs
xor
adc
jns
cmp
xchg
mov
aad
rorl
jo
pop
jnp
stos
movsb
das
popf
mov
out
loopne
jecxz
sub
out
pop
push
jne
cli
sbb
or
cmp
je
jae
push
fs
mov
cmpsb
xchg
fcoms
mov
add
jns
stos
and
ret
aad
mov
out
mov
adc
ret
int3
dec
les
xor
push
ficomps
cmc
in
sahf
test
adc
fcompl
jb
pusha
xchg
notl
mov
inc
push
mov
mov
mov
fndisi(8087
fists
adc
int3
push
jns
jmp
push
jge
in
adc
std
sub
icebp
mov
mov
jns
sysexit
rorl
fwait
leave
xchg
loop
xchg
jge
aas
data16
push
xchg
ja
fs
bound
repnz
push
or
dec
mov
lret
cmp
jnp
out
cmpsl
aam
repz
mov
xor
dec
dec
mov
gs
sub
std
push
inc
mov
lods
inc
mov
adc
pop
fs
or
fisttps
flds
lahf
lahf
mov
aas
test
test
mov
ljmp
sub
clc
push
cmp
arpl
push
xchg
xor
pop
aaa
ja
jne
mov
mov
adc
sbb
pop
mov
aas
cs
jp
adc
hlt
and
or
xor
mov
shl
mov
aaa
xor
xchg
out
inc
mov
out
cmpsl
jae
loopne
xchg
sbb
cli
shl
hlt
cmpsb
or
andl
loope
add
cs
or
ficompl
rolb
int
dec
xchg
jns
cmpsb
mov
leave
xchg
xlat
inc
cltd
add
mov
iret
add
frstor
sbb
and
je
mov
xchg
es
cmp
in
fisubrs
arpl
xor
repnz
lods
in
inc
pop
adc
imul
push
aad
dec
imul
sub
mov
sahf
jl
sub
and
fldcw
mov
push
sbb
push
dec
mov
mov
adc
mov
ficoml
or
fsubrl
push
rcrl
push
xor
xlat
in
xchg
add
lret
pop
and
add
sub
popa
jb
xor
ret
cld
int
aam
gs
loope
adc
fisttpll
imul
into
std
loop
mov
mov
xor
xor
lock
sbb
leave
scas
cmpl
push
xchg
mov
sbb
jnp
repnz
cltd
fwait
mov
in
aam
sub
push
push
mov
aam
dec
jns
shlb
sub
mov
outsl
jne
lret
jp
push
xor
and
sub
jbe
dec
or
ret
or
in
add
and
clc
jnp
shll
sahf
dec
rorb
or
cld
and
dec
xchg
in
jge
lods
jbe
jle
jecxz
mov
and
mov
fwait
xchg
mulb
mov
clc
scas
xchg
mov
mov
pop
hlt
fisubs
cmp
mov
push
pop
sbb
xor
and
inc
aaa
or
test
jbe
xor
stos
stc
rorl
mov
jnp
dec
xchg
rcrb
cli
lret
in
dec
mov
adc
or
mov
imulb
stc
je
ficompl
push
lret
pop
xor
or
cmpsb
ds
mov
push
and
xchg
and
mov
notb
fwait
inc
add
fs
subl
lret
jge
push
aas
xor
ss
stc
jns
scas
int3
test
xchg
cmpb
fnstcw
mov
cltd
and
xchg
lods
dec
lea
fs
jbe
mov
pop
mov
sti
xchg
sbb
mov
cmp
repz
test
sbb
pushf
les
rorl
loop
dec
out
out
es
loopne
xor
mov
fstpt
dec
mov
inc
cmp
leave
mov
mov
mov
jb
mov
fcoml
add
xor
fdivrl
repnz
sub
push
cld
aas
mov
sahf
sbb
daa
lods
jmp
pop
lret
adc
inc
xchg
shrl
pop
fldt
mov
scas
cmpsb
cmpsb
je
mov
mov
gs
xchg
inc
fcompl
ret
fs
cmpsl
pop
lcall
cli
dec
pop
rol
sbbb
das
mov
mov
pop
mov
mov
nop
jge
fnstcw
xchg
mov
adcb
insb
cs
int
dec
das
nop
mov
movsl
ds
or
add
mov
mov
cli
push
popa
mov
dec
mov
iret
and
fisubrl
imul
cmp
cmpb
mov
inc
add
xor
scas
add
sub
nop
negb
push
enter
xchg
inc
mov
mov
inc
mov
stos
mov
cmc
aad
movsb
adc
dec
dec
push
mov
nop
shll
dec
xor
cmp
iret
bound
ja
xchg
or
out
shrb
loopne
scas
mov
sahf
stos
mov
adc
xor
andb
mov
jle
aam
fldenv
mov
in
inc
in
push
fidivrs
pop
gs
es
outsb
cmpb
jge
cmp
dec
cli
mov
test
sub
les
shrb
and
les
mov
pop
arpl
cmp
inc
adc
repz
jecxz
scas
push
sub
jp
jle
jnp
ss
mov
mov
sub
in
inc
jnp
jg
jge
test
fldenv
jnp
pop
aam
imul
loopne
addl
dec
scas
test
arpl
fs
aam
pop
cmpb
lods
add
mov
jge
pop
dec
es
popf
lretw
push
mov
push
imul
out
sub
sub
sub
sub
sub
sub
sub
.byte
fdivrs
fbstp
stc
xor
adcb
or
jecxz
imul
dec
xchg
add
sbb
fcmovnu
std
into
pop
nop
sbb
cwtl
pop
mov
cltd
sbb
enter
out
cmpsb
inc
inc
call
mov
test
jne
sahf
ljmp
enter
cmpsb
cmp
jb
or
out
cmpl
xor
cmp
testl
loop
sbb
lods
mov
aam
sti
cmc
addr16
jl
stos
mov
xchg
js
jbe
sub
sub
cmp
add
in
scas
mov
outsb
pop
jae
les
xchg
imul
rcll
pusha
lock
iret
sbb
adc
cmp
add
adc
jmp
mov
or
xor
scas
add
mov
outsl
or
outsl
imul
cli
andb
pop
in
pushf
dec
or
ja
out
pop
scas
div
sbb
and
out
jae
sti
and
xor
xchg
cli
pop
adc
leave
stos
lea
pop
sbb
fdivl
lea
mov
push
test
fsubl
pusha
mov
cld
adc
arpl
fwait
mov
out
pop
cli
popf
dec
rcrb
or
fsubrl
adc
cli
xchg
jge
xchg
in
fs
push
pop
push
je
push
outsb
loop
add
pop
pop
xchg
push
xor
cltd
mov
sti
jbe
inc
lea
enter
xchg
mov
lcall
push
mov
leave
mov
sub
pop
push
cs
xchg
test
inc
pop
testl
xchg
in
mov
lcall
loop
int
xchg
xchg
pushf
xor
test
jb
xor
sub
sbb
lahf
or
imul
jb
hlt
sbb
dec
and
sbb
mov
ret
pusha
into
cmp
dec
int
data16
and
and
dec
shlb
sub
dec
arpl
pop
add
push
or
ret
das
or
jns
ja
and
jae
into
in
mov
repz
fcmovbe
repz
sub
xchg
scas
cs
pop
lods
dec
mov
stos
insb
adcl
cmp
out
xchg
cs
pop
xchg
mov
nop
hlt
sub
ret
add
vmovntpd
or
in
in
or
iret
xchg
adc
cli
sub
pushf
out
adc
inc
arpl
or
icebp
shll
mov
andb
sbb
push
dec
in
cld
aaa
outsb
xor
icebp
push
sub
arpl
push
loopne
push
lea
scas
push
jmp
pop
mov
adc
xchg
lahf
in
push
in
dec
jle
leave
mov
popa
sub
inc
stos
xchg
and
aas
xchg
cmpsb
jmp
sbb
xchg
cmc
std
push
inc
scas
mov
enter
cs
in
fdivrs
pop
pop
fstl
popf
jbe
and
inc
sub
fiaddl
loope
pop
cs
lret
xchg
inc
mov
xchg
clc
push
andl
sbb
dec
push
mov
inc
cmpsl
adcl
sub
in
add
mov
push
stos
lret
mov
adcb
popa
push
cmp
push
int3
mov
or
adcl
add
cli
ljmp
mov
outsl
cli
sub
inc
mov
in
pop
pushf
sbb
in
js
data16
fildll
lcall
mov
pushf
sahf
or
out
movsb
movsl
icebp
inc
call
out
clc
test
cvtps2pd
adc
das
push
pushf
fildll
in
leave
lods
fisubrl
and
pop
jo
jp
adc
jne
fildl
lock
imul
pop
mov
sahf
test
xor
adc
or
xor
or
mov
push
pop
in
test
clc
push
adc
xchg
push
leave
mov
add
sbb
cmpsb
inc
addr16
ss
in
push
push
sahf
mov
mov
sbb
repz
outsb
gs
cld
or
jae
fdivs
mov
sub
xchg
lock
and
sbb
subl
pop
mov
popa
xchg
push
lods
xor
pop
subb
inc
sbb
icebp
mov
outsl
xor
outsb
imul
push
mov
pop
mov
pop
jecxz
fwait
mov
ror
and
or
mov
sbb
stc
inc
test
dec
fwait
andl
xor
xor
mov
out
jnp
sub
push
jmp
sbb
cld
imul
fsubrs
sbb
ficompl
js
inc
jmp
int3
loop
push
pusha
lret
mov
mov
sti
lea
jmp
inc
or
loop
fists
cmpl
dec
and
dec
jae
push
ljmp
or
adc
call
add
dec
mov
outsb
sahf
es
push
dec
push
lock
enter
and
dec
cld
xor
repnz
adc
popa
movsb
sbb
xchg
lahf
add
mov
mov
in
mov
mov
push
xor
cmp
dec
inc
repnz
fs
std
push
inc
or
or
je
mov
jb
or
mov
xor
out
and
and
mov
lock
dec
ficompl
or
iret
call
outsb
push
les
or
jnp
mov
mov
jb
fstpt
popa
mov
sub
xorb
mov
divl
orl
int
adc
add
out
push
fsubs
lahf
sbb
daa
jns
repnz
loop
adc
mov
add
add
adc
mov
jge
mov
dec
sbb
jge
mov
sarb
repz
and
add
in
loope
cli
in
loopw
cmp
ror
sbb
or
jo
xchg
pop
mov
xchg
rcrl
sbb
xchg
cmp
repnz
sub
mov
and
into
add
push
jns
mov
sub
mov
bound
cmp
add
and
inc
jno
jp
sarb
add
cmpsb
mov
sbb
dec
push
fistpll
sbb
aad
loop
sbb
mov
dec
andb
inc
lock
cmc
cmp
ret
rcrl
cmp
xchg
push
mov
xchg
shrb
mov
pop
xchg
xlat
mulb
out
add
popf
jmp
mov
lret
jo
fildll
fmull
pop
fstps
loopne
rorl
insl
test
add
into
popf
add
push
cmp
fwait
iret
test
repnz
ljmp
jo
hlt
and
mov
add
pop
enter
div
stos
add
outsb
ret
out
jns
mov
add
and
push
and
sbb
lcall
xchg
aam
cmc
pop
insl
pop
movsb
pop
push
push
pop
dec
movsl
mov
mov
lahf
push
popa
sub
sbb
pushf
fwait
pop
into
jb
push
popa
es
divl
popf
pop
sbb
test
inc
xor
mov
adc
push
push
lcall
inc
dec
lods
call
pop
push
out
loope
outsl
mov
inc
push
test
push
stos
dec
sub
xchg
and
std
sarl
add
fsts
add
bnd
iret
insb
loope
leave
cs
lcall
or
pop
aaa
jns
jmp
push
push
sub
ficoml
dec
or
lret
cmp
sub
fcomps
leave
std
pop
xchg
adc
xor
jne
jecxz
rcl
dec
inc
addb
sub
xor
jae
cmp
insl
jp
push
enter
mov
data16
das
dec
push
or
push
jne
sub
xor
sbb
cli
add
adc
pop
lea
pop
sub
add
mov
sti
pop
iret
jne
push
sub
mov
push
dec
sbb
xchg
enter
push
adc
pop
cmp
dec
out
fwait
rorl
mov
jo
mov
ds
lods
es
hlt
jbe
mov
mov
mov
or
cmp
paddusw
dec
push
repnz
pop
inc
cli
push
mov
lret
xor
fwait
dec
jno
subps
insb
xor
add
jmp
ret
add
and
xorb
mov
int3
pop
fbld
sarl
in
pop
pop
gs
loope
ret
loop
jle
outsb
sbb
jmp
adc
mov
sarb
mov
negl
orb
test
cmp
ja
pop
stos
xchg
imul
push
mov
inc
loop
dec
mov
data16
ret
cmp
cltd
in
push
pop
mov
lahf
fsubrl
cmp
test
jb
dec
adc
mov
pop
imul
cld
dec
or
popf
out
jge
insl
lret
pop
jge
ret
ljmp
inc
jae
lds
popa
add
xchg
dec
das
push
cmp
movsb
std
xchg
push
insl
jmp
cwtl
xchg
icebp
ret
sbb
mov
and
fiadds
imul
jmp
in
inc
imull
sbb
and
xchg
xor
xchg
lahf
add
adc
sbb
cmp
movl
xchg
jbe
js
aam
sub
test
pop
orb
loope
xchg
lea
adc
and
jb
aam
movsb
inc
ljmp
dec
lea
fsubl
sub
pop
cmpsb
in
add
scas
out
fimull
mov
jnp
dec
fisttpll
pop
xchg
or
mov
jp
inc
loop
inc
pop
sub
pop
cs
or
xor
add
inc
ficoml
loope
sub
lahf
je
inc
pop
js
lods
fwait
pop
mov
jmp
add
loopne
pop
rcr
repnz
dec
cmp
mov
mov
sub
xchg
das
adc
add
fidivrs
xchg
dec
jmp
mov
and
jns
pusha
call
sahf
jne
sahf
mov
call
cs
fidivrl
add
mov
push
mov
cltd
hlt
xchg
xchg
frstor
xor
inc
lret
fwait
adc
inc
pop
leave
pusha
adc
mov
inc
xchg
push
outsb
mov
mov
lret
ret
fwait
or
mov
inc
or
testl
test
add
test
xor
pop
out
.byte
loope
push
dec
sub
icebp
int3
jle,pt
aam
xor
jns
add
mov
mov
popf
outsl
pop
aad
mov
lock
jbe
add
aaa
mov
sahf
aad
push
dec
sub
loop
call
pop
sub
and
scas
or
xchg
push
sbb
push
xchg
dec
test
inc
adc
sbb
icebp
std
push
lods
jo
cmp
push
fldcw
sub
icebp
inc
xchg
lcall
add
icebp
inc
xchg
call
jle
out
mov
jbe
push
inc
repnz
cmpsb
aad
add
in
clc
outsl
repnz
insb
jb
jb
out
add
cmp
push
add
and
in
je
lock
das
sub
xor
dec
adc
pushf
nop
outsb
xor
push
jne
in
rcrl
add
dec
mov
repz
stos
and
mov
xor
push
add
rorl
movsl
mov
arpl
jb
cmp
jbe
jb
loope
push
popf
xor
lahf
push
gs
xor
jp
mov
iret
int3
imul
mov
cmc
cmp
sub
dec
leave
push
test
hlt
movsl
jns
and
adc
mov
push
adc
cmp
adc
cltd
in
pop
cmp
xchg
mov
adc
out
adc
mov
mov
dec
inc
xchg
xor
dec
pop
jle
adc
rcr
loop
mov
les
xor
push
cmc
adc
sub
dec
pop
sbb
sysenter
repz
and
mov
mov
mov
aad
sti
mov
lods
mov
lds
insb
xor
and
cltd
add
jl
sbb
jns
cltd
test
out
imul
lods
push
jae
and
das
or
pop
dec
ficoml
and
in
mov
cmp
dec
dec
ja
dec
clc
cvttps2pi
pop
pop
cmp
adc
jns
lods
jge
scas
call
mov
mov
fcompl
and
dec
cmpl
ds
das
sbbb
in
pop
dec
add
mov
xor
add
int3
adc
add
gs
mov
sbb
mov
inc
into
outsl
mov
jnp
cmc
sub
cmp
xchg
xlat
ss
push
int3
xor
movsb
mov
push
push
push
roll
es
fcomps
mov
jb
adc
sbb
sub
ret
cs
mov
mov
leave
mov
divl
bound
cmc
ljmp
sti
or
or
sbb
cmp
lock
or
mov
lods
and
fs
xchg
push
fistl
scas
push
push
test
sub
push
std
inc
sbb
xor
das
cmpsl
jl
push
jmp
int
int
andb
cltd
jb
mov
mov
mov
arpl
add
or
in
and
jns
or
nop
push
dec
lahf
inc
leave
and
mov
mov
cmp
xor
pop
insl
cwtl
push
jb
ja
cmp
or
icebp
dec
scas
aas
pop
test
lret
cmpl
or
push
fcomps
sahf
ret
daa
cmp
mov
scas
push
jbe
sub
out
pop
adcl
mov
loope
daa
cmp
test
or
lcall
xchg
ret
lahf
sbb
fst
enter
mov
push
xlat
fcomps
out
addr16
jno
push
adc
gs
xor
out
cwtl
jb
dec
inc
test
dec
aas
jecxz
add
dec
pop
leave
cmpsb
push
and
test
xor
lods
jge
xchg
test
loopne
das
test
xchg
push
jecxz
push
adc
jmp
add
push
lret
mov
push
pop
mov
adcl
shl
jle
mov
outsl
out
test
inc
addl
ljmp
inc
scas
dec
jo
push
arpl
dec
and
mov
aas
insl
jae
push
xchg
popf
fcomps
pextrw
cmpsb
push
pop
lock
sar
aaa
sbb
dec
xchg
or
sbb
xchg
jae
jmp
dec
repnz
pushf
xchg
adc
cmpsl
lea
iret
dec
arpl
gs
test
fmuls
lea
mov
test
or
test
fcoml
lea
repz
and
or
outsl
int
pop
shlb
int
adc
std
add
out
stos
push
add
insb
push
mov
int
adc
mov
dec
push
pushf
stc
pushf
jge
add
popa
js
fcmovnu
fcoms
rcr
jl
adc
insl
mov
mov
fdivrl
rcl
movsb
iret
add
aam
push
js
dec
nop
push
mov
mov
aam
xchg
in
pop
push
movsb
cmp
cld
inc
add
xabort
pop
and
cltd
cld
push
sub
cmc
mov
xor
cld
outsl
enter
mov
inc
enter
and
xchg
push
mov
mov
stos
adc
adc
outsb
loopne
jbe
and
and
inc
push
mov
inc
or
add
ficoms
jge
cmp
fldcw
sbb
dec
dec
push
add
cmpsb
ss
fidivrs
pop
out
cmp
mov
movsb
add
int3
mov
push
fisttps
xchg
nop
dec
daa
stos
mov
shr
test
aad
sti
cmp
lret
lcall
enter
mov
rorl
scas
movsb
iret
and
sbb
xor
loop
mov
ds
rclb
xor
lods
inc
add
mov
jge
pop
out
mov
popf
lock
mov
dec
out
sub
cmp
lahf
movsl
adc
dec
mov
iret
push
pop
dec
jl
movsl
inc
fwait
pop
xor
enter
es
insb
mov
ficompl
mov
push
jns
out
fs
add
jbe
mov
pusha
pop
or
lds
stos
shrb
inc
cmp
adcl
or
pop
pop
push
mov
pop
mov
sub
roll
pop
jb
int
cmp
cs
ss
gs
push
mov
ss
sbb
mov
push
mov
jle
negb
pusha
rolb
or
dec
xchg
cmc
and
dec
push
sub
mov
or
and
bound
out
mov
outsb
push
jge
mov
out
push
mov
xchg
outsl
cmp
and
lock
int
pop
arpl
iret
call
cmpsl
loope
cmp
mov
test
aaa
xchg
push
mov
out
pop
sub
pop
sbb
sub
mov
or
dec
fs
js
bnd
jnp
mov
outsl
das
xor
jmp
mov
inc
sub
fwait
sbb
aas
jp
sub
js
addr16
stos
outsb
mov
add
jb
xor
test
scas
nop
les
push
dec
cmp
jne
lock
mov
mov
movsl
mov
xchg
shll
punpckldq
test
jae
rcrb
adc
sbb
das
outsl
les
mov
cwtl
mov
sarl
mov
insl
nop/reserved
inc
dec
out
pop
or
or
jno
mov
push
sarb
xor
push
daa
xchg
and
out
pop
jo
xchg
jne
mov
mov
orb
mov
enter
cmp
sub
jae
sub
hlt
xchg
popf
mov
xor
add
cmp
sbb
data16
mov
jle
js
dec
dec
int3
inc
push
ret
or
jg
xchg
test
or
popa
call
inc
jbe
dec
sbb
jb
subl
pop
aam
popa
out
out
cmp
aas
ljmp
cmpsl
add
fcmovbe
mul
pushf
int3
cmp
push
incl
push
rcll
out
ja
outsl
cli
popa
hlt
out
into
lcall
dec
jg
xorb
addr16
sti
insb
sarb
cmp
push
fs
loopne
out
push
and
adc
ja
cmp
repnz
xchg
push
nop
mov
push
sbb
cmp
adc
cmpsl
adc
xchg
pop
and
pushf
xor
lods
filds
ds
pusha
lock
sahf
pusha
dec
dec
jle
pop
xchg
and
sbbb
push
xchg
jae
int
adc
inc
lret
mov
sub
xchg
sbb
mov
mov
add
clc
test
fidivl
xor
push
aam
test
pusha
jmp
cmpsb
jne
cmp
enter
add
sbb
or
lahf
xchg
push
mov
or
test
sub
push
fst
mov
out
cmp
xchg
pop
cmpsb
call
xchg
mov
stc
or
loop
mov
jne
data16
xchg
fdivrs
xor
mov
aas
gs
jl
lcall
subl
sbb
scas
cmpb
jecxz
sbb
hlt
adcb
mov
pop
dec
sti
cmpsb
ret
push
sub
fstps
mov
mov
mov
push
addl
xchg
fs
sbb
dec
scas
lds
jne
ret
loop
test
cltd
or
aad
fmuls
sub
aad
fs
push
test
inc
sub
hlt
lock
and
cmp
nop
jg
scas
into
ret
xor
pop
xor
xor
test
lods
jge
dec
mov
jo
addb
inc
xor
mov
ljmp
mov
sub
adc
xor
leave
adc
addb
add
and
in
sbb
pop
and
mov
pop
pop
cs
and
sbb
test
mov
arpl
adc
cmp
addl
inc
jae
jbe
adc
jecxz
mov
ja
stos
rol
mov
pop
clc
rcll
daa
mov
inc
or
jmp
mov
test
jns
lds
sub
popf
js
push
js
popl
test
jecxz
adc
inc
movsl
or
out
pop
test
xor
rorl
aaa
cmc
fxch
or
mov
xchg
lods
pop
cwtl
test
push
scas
push
repz
cltd
jl
aaa
cmpl
jle
iret
adc
dec
ja
pop
nop
idivb
sti
nop
xchg
std
into
mov
incl
mov
pushf
test
test
stos
mov
out
xchg
and
push
dec
xor
add
cwtl
xor
jnp
sbb
mov
pop
mov
and
call
mov
int3
jge
push
je
ss
xchg
mov
cld
scas
push
pop
dec
movsb
aam
es
xchg
xorb
add
push
loope
sbb
cmpsl
ja
inc
out
in
push
mov
out
jp
out
mov
or
cmpsb
outsl
add
push
outsb
xor
daa
fdiv
ljmp
sbb
add
ja
mov
adcb
loopne
or
cmpsb
mov
inc
xchg
popf
shlb
lcall
inc
sbb
scas
orl
insb
or
idivl
hlt
inc
pop
xor
mov
enter
mov
add
imul
hlt
sti
jp,pn
sub
and
xor
jnp
js
push
test
and
out
jecxz
push
dec
fwait
in
push
or
inc
add
mov
cli
and
xchg
cmp
fldt
fsubrl
lret
cmp
mov
jb
fadds
ljmp
ljmp
cmp
jg
adc
mov
mov
jbe
inc
insb
sub
nop
push
pop
add
js
imul
push
cmp
or
add
mov
push
bnd
in
inc
ljmp
les
out
rcll
dec
lahf
test
mov
or
xchg
cmp
scas
mov
xchg
repz
mov
aad
dec
xchg
xor
andl
xor
mov
jecxz
mov
push
dec
sbb
cld
or
test
xchg
fdivl
test
in
adc
inc
call
or
cmpsl
adcb
mov
fcompl
pop
scas
out
cmpsl
jae
push
push
decb
sbb
sub
test
and
sub
cmp
sar
cmp
test
dec
push
pushf
or
mov
imull
data16
call
mov
cmp
dec
and
test
adc
int3
lds
fadds
notb
pusha
imul
mov
push
cmpsl
ror
movsl
leave
ret
xchg
xlat
scas
pop
out
out
sbb
cmp
push
sbbb
aad
add
jecxz
mov
inc
fdivrl
repz
sub
sahf
jmp
scas
in
push
and
add
dec
inc
adc
ja
push
lcall
mov
adc
adc
pop
or
add
or
jae
adc
andl
mov
data16
xchg
jmp
pop
xor
xor
outsl
insb
mov
jmp
mov
jno
scas
or
adc
imul
mov
xchg
scas
testb
cmc
rol
lea
xor
ficoms
ficomps
sub
inc
push
psubsw
ljmp
stos
cwtl
or
jnp
in
mov
es
push
jnp
mov
shrl
aaa
pop
cmp
frstor
mov
stos
out
mov
pop
inc
js
mov
enter
mov
ja
push
dec
mov
pop
insl
push
addr16
pop
pop
daa
fdivr
inc
or
dec
hlt
mov
popa
xor
mov
sub
cmp
insb
jb
jl
sub
fcompl
sti
push
cli
mov
call
mov
je
push
adc
inc
sbb
sub
int
add
and
dec
xchg
cld
push
inc
mov
in
aaa
xchg
mov
adcl
sbb
xor
outsb
sub
or
incl
push
fisttpl
and
mov
fldl2t
les
popl
jne
dec
mov
mov
pop
idiv
dec
pop
sub
cmp
mov
inc
dec
pop
int
lret
fsubrs
loope
push
adc
inc
mov
lret
push
inc
cwtl
lret
pop
sbb
mov
and
jnp
in
jno
pop
sbb
jg
mov
dec
inc
out
pop
xchg
pop
rolb
jne
std
popf
dec
push
add
mov
sub
ja
fldenv
mov
std
xchg
int
and
ret
push
sarb
fwait
shll
mov
incb
call
insl
cld
je
adc
mov
mov
stos
ja
sub
pop
cmp
test
enter
ficompl
pop
inc
fsubs
das
sub
lods
inc
push
insb
mov
loope
and
push
outsl
loope
out
cmpsb
xchg
popf
and
imul
mov
ja
popa
popa
inc
pusha
mov
adc
mov
jmp
icebp
xor
stc
mov
jae
sub
outsl
add
stos
inc
bound
xchg
call
dec
dec
jae
arpl
xlat
outsl
fcom
std
sub
xor
subl
or
adc
fucom
cwtl
xchg
mov
mov
pop
sahf
mov
ret
jmp
adc
cmp
pushf
movsb
nop
icebp
scas
pop
mov
cltd
mov
stos
xchg
das
push
dec
mov
fisttps
in
pop
aam
pop
enter
push
fadd
hlt
shl
filds
jb
daa
loop
push
mov
fwait
andb
mov
or
inc
cmp
sahf
shll
fisubrs
stc
loop
mov
pop
int3
pop
jne
cmp
adc
xorl
shrd
mov
fstps
sahf
shl
outsl
xchg
popa
mov
inc
push
add
mov
rorl
mull
jmp
add
test
mov
dec
clc
push
inc
push
xchg
jns
push
mov
cmp
cmp
adc
jns
mov
bound
scas
xor
addl
cwtl
jl
jnp
add
loop
sahf
and
jge
test
imul
cmpb
icebp
into
cmp
rcll
loope
inc
sarb
jnp
cmp
mov
mov
adc
notb
sub
ret
mov
hlt
iret
sbb
pop
fmuls
pushf
sub
jp
adc
adc
fcoml
mov
mov
out
pop
inc
mov
xchg
inc
mov
inc
add
push
in
cmc
insb
mov
xor
jnp
sbb
ds
int
pop
repnz
push
ds
inc
jne
xchg
or
xchg
sbb
loopne
fwait
in
mov
sbb
data16
xchg
pop
mov
div
mov
stc
cwtl
lds
aas
push
jmp
fdivrl
leave
mov
and
mov
mov
negl
in
push
dec
sbb
std
inc
sbb
xchg
cwtl
nop
rcrb
xor
leave
pop
arpl
and
bound
sub
jl
loopne
mov
xchg
push
pushf
enter
ret
ja
mov
out
fwait
push
sbb
sub
cmp
in
loope
jne
push
daa
jne
inc
sub
jp
cmp
jnp
mov
inc
cmp
add
jne
inc
pop
cld
xchg
test
or
test
push
imulb
ret
add
lea
mov
shrl
sbb
jbe
jae
add
jae
mov
imul
cmp
aad
ljmp
jl
pop
mov
inc
test
cwtl
xor
call
inc
mov
popf
pop
dec
icebp
cltd
mov
lcall
xchg
cmp
bound
stos
arpl
jb
aad
sbb
pop
loop
and
dec
test
sub
xchg
jle
fldl
sub
xchg
fldz
jmp
fimull
ret
es
popa
jmp
sub
sbb
sbb
andl
jl
nop
sub
lods
ret
mov
aam
adc
inc
cmp
scas
cmpxchg
pop
push
and
clc
bound
jecxz
sbb
cmp
int
fs
arpl
das
add
sub
ljmp
xor
or
inc
and
push
imulb
adc
push
loope
int3
pop
lods
sti
sub
inc
mov
mov
test
push
adc
or
in
sub
jg
pop
jecxz
pop
into
clc
rorl
add
lock
sub
pusha
xchg
xchg
repz
push
xor
xchg
loop
cmp
push
das
in
leave
jb
xchg
leave
sub
and
pop
push
pop
movsb
push
and
pop
mov
push
out
aaa
cmc
lods
adc
cmpsl
orl
addb
testb
jae
pushf
lock
jecxz
mov
lock
insb
je
push
xor
stc
mov
push
addb
push
in
aam
mov
aad
or
inc
sub
inc
vucomisd
push
mov
dec
push
insl
sahf
inc
jge
leave
leave
or
int
sub
or
xchg
xlat
mov
mov
imul
mov
iret
xchg
or
mov
mov
add
lret
add
jne
sti
jg
popf
jae
cmp
mov
mov
in
jae
mov
sbb
addr16
adc
sub
mov
push
add
mov
and
ret
push
scas
rcll
and
stos
dec
mov
and
ljmp
mov
mov
fwait
sbb
sbb
out
push
mov
iret
pop
enter
or
inc
xchg
push
cwtl
mov
jns
or
add
out
sbb
pop
ret
in
cmpb
sub
jge,pt
jle
in
fldt
push
mov
and
pop
mov
adc
cs
rcll
lods
xchg
jecxz
pop
cmp
fdivs
cmc
push
rorb
rclb
mov
pushf
and
ss
sub
or
push
mov
lret
add
lret
outsb
cmp
fcmovbe
adc
inc
fldl
pop
testb
sbbb
in
insl
fimull
in
pusha
xchg
inc
push
push
push
loopne
xchg
cmp
ds
in
aas
xor
aas
pop
xchg
lret
or
adc
es
sbb
pop
daa
pushf
fadds
push
xchg
xlat
mov
in
pop
xchg
adc
scas
lahf
insb
sarl
xor
mov
movsl
inc
mov
inc
mov
xlat
add
scas
and
int
mov
xor
xchg
push
outsl
repnz
cmp
cli
aaa
inc
adc
in
cmp
cmpsb
mov
shll
xchg
ja
fldt
add
sub
addr16
pushl
dec
pop
or
lods
movsb
push
dec
push
sub
das
lar
dec
out
dec
mov
call
mov
jnp
mov
inc
adc
mov
cmp
scas
sub
sub
fnsave
arpl
or
inc
pop
arpl
sub
aad
aad
push
test
hlt
ds
in
mov
xchg
push
fsubrs
out
cmpsb
incb
lock
dec
mov
sbb
xor
xor
ja
out
insb
loope
decb
jnp
outsl
lcall
dec
lods
adc
pop
mov
and
xchg
jp
fwait
push
dec
call
sbb
push
and
test
jb
add
add
pop
scas
mov
jo
enter
push
inc
pushf
jns
pop
pop
pop
ss
cmpsl
or
mov
add
jbe
repz
dec
sub
push
data16
or
push
dec
test
mov
in
inc
add
hlt
jl
nop
enter
movsl
ljmp
mov
fs
loopne
dec
lock
push
arpl
push
cmpsl
dec
push
dec
lcall
adc
aaa
mov
insb
movsl
or
push
adc
rcrl
dec
sbb
or
ret
pop
call
xor
xor
pusha
jmp
xchg
push
mov
sarl
sub
pop
lods
cwtl
leave
arpl
jo
lds
mov
jl
pop
movsb
mov
sbb
sbb
mov
insl
pop
xchg
inc
aas
out
adc
popa
jbe
test
mov
mov
pop
mov
mov
sbb
cmp
mov
int3
pusha
xchg
mov
out
cmpsb
mov
test
aas
lahf
scas
add
push
mov
ds
loop
mov
sub
or
ja
jbe
jnp
add
xchg
and
push
cltd
sub
fcmovnu
inc
pop
into
adc
xchg
mov
fstpt
push
fcomps
ret
lss
sub
push
mov
xor
pop
shlb
bound
je
mov
fldenv
mov
shl
sub
ljmp
xor
cmp
fcoml
test
je
or
outsl
ss
sarb
es
add
sub
fsubrs
aas
mov
aad
in
rorl
add
insl
outsb
mov
jae
js
and
mov
mov
mov
mov
lret
cmpsl
pop
cltd
pushf
or
fwait
or
pop
lods
and
push
jns
cwtl
xchg
stos
pop
mov
stos
popa
cmp
into
xchg
inc
lret
add
sub
add
out
jns
mov
push
jns
shlb
cmp
icebp
xchg
push
xchg
int
test
or
orl
cltd
dec
xor
ljmp
movsl
ret
in
lods
jl
xchg
jmp
push
or
pop
mov
or
adcl
mov
in
pop
or
sahf
shll
and
lods
pop
sahf
xchg
cmp
push
and
sbb
inc
add
into
mov
cmc
addl
push
shlb
loopne
jle
adc
lret
sub
movups
push
popf
rorl
adc
shrb
xchg
and
inc
loopne
loope
or
out
push
ss
push
add
add
or
lahf
outsb
icebp
call
dec
in
sub
jg
ror
mov
mov
mov
lret
add
sarl
lcall
lea
cmpsb
or
xor
mov
add
push
push
inc
movsb
mov
cmp
js
ss
inc
dec
dec
sbb
cmp
call
imul
push
xlat
cmp
insb
addr16
out
enter
add
jns
aad
xor
push
je
loop
push
cmp
sarb
mov
mov
inc
fsubl
mov
jbe
in
lret
or
cmp
xchg
ficoml
fs
inc
xor
das
add
mov
add
pop
ljmp
cmp
pop
es
cmp
pop
mov
insb
fdivs
pop
lret
rcrb
test
sub
jae
enter
dec
and
dec
lods
jnp
xor
loope
inc
push
xor
mov
gs
xor
mov
add
dec
loopne
repz
pcmpeqb
cmp
pop
mov
cwtl
or
mov
pop
xchg
fisubrs
jge
add
jecxz
in
add
and
push
pushf
add
mov
add
mov
sti
insl
mov
dec
cmp
outsl
dec
mov
fdivrl
mov
jp
mov
lea
insl
lods
aaa
iret
push
out
push
es
inc
std
dec
movsb
cli
inc
ror
xorl
mov
js
xchg
xor
repnz
or
cld
jbe
call
sub
lock
je
xor
rorl
xchg
int3
jne
out
xor
movsb
adc
sbb
inc
insl
lahf
jb
sub
lret
cwtl
jae
imul
fwait
lcall
lret
sarb
mov
data16
xor
cmpsl
fcoms
sub
dec
push
out
lock
ficompl
cmpb
push
aaa
push
sbb
fildll
or
xchg
add
add
pop
push
fistpll
daa
pop
out
insl
gs
push
into
gs
push
jle
push
orl
fidivrl
mov
pop
jle
mov
sub
xchg
or
loopne
ja
loopne
gs
add
and
jg
shlb
jp
aad
repz
adc
in
rolb
mov
mov
ret
dec
sub
movsl
lock
fcompl
pushf
movsl
or
lds
dec
call
jnp
mov
mov
xor
xor
and
insb
aas
inc
out
push
mov
fbld
loopne
roll
sub
jmp
cmp
add
leave
add
std
xor
lods
iret
adc
negl
and
xchg
lret
inc
fsubr
jp
dec
xchg
mov
inc
sub
push
ret
and
dec
pop
stc
push
dec
jnp
mov
arpl
movsl
dec
sbbb
test
mov
ret
out
lds
and
lcall
bound
int
fmuls
mov
leave
loope
pop
iret
fs
out
push
rol
cmp
mov
inc
in
inc
loopne
push
mov
addl
icebp
mov
mov
sahf
cmc
jns
in
scas
test
mov
cltd
and
adc
mov
mov
enter
outsl
dec
cwtl
mov
add
add
scas
adcl
mov
xlat
fcmovnbe
sub
cmp
test
mov
in
repnz
in
mov
stos
dec
dec
push
loop
fabs
pop
sbb
push
pop
jmp
rcl
lret
test
xor
xchg
jp
cmp
push
mov
hlt
sahf
jbe
mov
out
test
mov
or
mov
outsl
leave
daa
and
push
insb
add
out
out
rcll
push
sbb
fcmovnbe
sti
in
cs
dec
rcrl
add
push
mov
imul
jne
fistpll
jbe
or
mov
mov
adc
inc
inc
and
popf
xor
inc
test
xor
sub
pop
repz
dec
mov
pushf
and
mov
lock
xor
inc
dec
pop
cmp
hlt
xchg
cmp
enter
stc
adc
xchg
lret
sub
lds
fs
sub
dec
std
pushl
cld
popa
jne
xchg
xor
je
sub
lods
and
dec
je
inc
ret
fwait
sub
dec
fs
aad
das
test
sbb
popa
sbbb
sbb
jmp
xor
cmp
sbb
push
roll
cld
mov
pop
push
and
ret
push
int
mov
fs
pop
dec
add
dec
cwtl
fbstp
mov
and
push
popfw
xor
movsb
hlt
mov
inc
movsl
adc
shrl
clc
int3
iret
test
leave
fstpt
out
nop
mov
jnp
rcrb
mov
mov
mov
sub
out
fdivr
jp
push
xchg
out
lods
stos
push
xchg
mov
push
dec
inc
mov
mov
jo
in
adc
movsb
jne
inc
mov
lret
xlat
push
pop
mov
or
out
cmp
ds
xor
xor
mov
decl
addl
sbb
loope
or
adc
shll
jecxz
lret
add
xchg
sbb
add
es
adc
jns
sub
and
hlt
fcoml
xor
mov
mov
test
repnz
addr16
arpl
dec
rcl
jbe
imul
dec
jae
mov
loope
or
loope
mov
inc
leave
adc
aaa
mov
jb
add
add
call
mov
test
sbb
ss
sub
push
or
mov
bound
push
nop
test
in
addl
push
stos
clc
movb
scas
xchg
out
mov
fcmovnbe
stos
pop
test
leave
mov
adc
pop
in
sbb
cmp
jp
incb
les
add
lds
or
mov
cmp
out
dec
mov
imul
out
pop
mov
mov
in
pop
in
adc
je
stos
pop
aad
jns
push
xor
and
in
xchg
enter
mov
lcall
mov
xchg
stc
push
out
cmc
rcl
xchg
push
push
mov
pop
xchg
in
lods
pop
inc
xchg
mov
addr16
fs
cmp
or
pop
cmc
outsb
pop
cld
dec
pop
std
out
dec
mull
mov
add
test
push
sub
push
hlt
and
xchg
repnz
and
xor
jecxz
cmp
lret
mov
adc
mov
sbb
jg
pusha
and
outsb
popf
mov
bound
cmp
lcall
xorl
imul
fst
movsl
cmp
pop
dec
popa
adc
dec
dec
jl
lock
push
cmp
lods
cmp
add
pop
cmp
fstpl
mov
sbb
ss
and
loop
xchg
cltd
mov
jp
addb
gs
pop
sub
sub
jae
and
loope
sub
jge
inc
scas
xchg
add
sub
and
pop
mov
fdiv
insl
imul
jno
add
push
mov
mov
aaa
xor
aam
int3
push
jecxz
or
ss
add
iret
push
sbb
fstl
pop
jne
or
push
sbb
jecxz
data16
push
pop
and
dec
negb
xchg
xchg
cmc
mov
or
add
lret
mov
push
std
jmp
xchg
fsts
sarl
xchg
xor
and
jns
cli
sub
into
pop
stos
test
rorl
jp
dec
in
inc
xor
punpckhwd
pushl
enter
nop
loop
xor
xchg
in
inc
imul
push
xchg
movsl
fcoml
mov
mov
es
mov
test
ds
fisubrl
dec
rcrb
jecxz
adc
stos
adc
cmp
ret
push
add
add
fbld
cmpsb
sbb
add
test
ss
daa
cmp
dec
dec
jae
mov
loopne
push
sahf
xor
xlat
pop
stos
je
add
jl
movsb
mull
xor
add
das
stc
sbb
xchg
lcall
mov
cmp
dec
jbe
out
imul
adc
pop
jecxz
popf
sbb
arpl
shrb
inc
arpl
mov
fwait
xor
lods
rcll
scas
ds
out
jb
adc
scas
loopne
jbe
inc
pop
xor
aas
shll
sub
pop
clc
in
inc
int3
mov
loopne
arpl
mov
sbb
push
sub
jae
adc
push
xor
pop
pusha
and
xor
pop
mov
mov
xchg
sti
shll
xor
xchg
add
push
xchg
and
xchg
push
push
pop
push
cmpb
mov
movsl
aas
int
add
inc
mov
sbb
lds
xorl
push
push
mov
in
push
aad
cmp
iret
xchg
lods
xchg
jo
jge
xor
fsubs
push
jge
fimuls
sbb
sahf
xor
mov
loop
or
fs
daa
mov
addr16
ret
add
push
ffreep
lock
mov
fldt
hlt
push
jge
hlt
mov
add
jb
inc
test
cld
movsl
fsubrs
push
test
in
in
sti
dec
int
test
cmp
and
shrl
mov
sub
pop
and
in
adc
and
jge
jnp
pop
sub
xchg
fcomp
lahf
cwtl
xchg
jnp
add
push
add
mov
addr16
adc
jle
fistl
insl
pop
movl
dec
mov
mov
adc
mov
jae
mov
xchg
and
and
subb
scas
inc
out
int3
pushl
cmc
dec
inc
dec
or
mov
dec
inc
in
gs
mov
mov
in
jge
mov
js
or
cmpsl
mov
xchg
ja
jns
pop
add
out
mov
in
jmp
imul
add
xor
sub
xchg
cwtl
int3
xor
push
mov
inc
call
sub
dec
or
xchg
sbb
mov
push
sub
movsb
push
adc
push
xchg
fsts
dec
adc
add
nop
push
das
popf
insb
in
mov
push
push
rorb
jae
inc
movsb
fcomps
xchg
and
mov
sub
sub
shll
push
sub
fildll
sarb
mov
dec
or
cmp
inc
sub
test
stc
fdivs
xchg
fsubr
fldl
ds
push
rcl
and
and
bound
push
pop
inc
das
je
hlt
aas
sahf
shll
lods
inc
pop
imul
aad
jecxz
popf
pop
pop
in
jns
xchg
incl
or
jg
and
mov
sbb
or
mov
sbb
xorl
mov
push
xor
clc
pop
dec
sbb
xchg
mov
das
js
in
adc
sbb
jne
push
pop
mov
xchg
cmp
jg
or
outsb
push
adc
mov
pop
stos
shlb
and
xchg
pop
ret
nop
pop
lret
fnstcw
and
daa
mov
mov
mov
jne
pop
loopne
mov
xor
out
fs
or
jp
fwait
mov
jb
enter
mov
xchg
shrb
adc
jno
jecxz
mov
inc
jmp
xor
pop
clc
adc
push
movsl
lods
jl
ret
std
fdivp
sti
negl
arpl
or
cltd
subb
rcrb
xchg
out
or
xchg
clc
insl
add
rorb
xor
iret
cmp
xchg
arpl
cmp
xorb
outsb
cmp
sbb
test
inc
xchg
mov
movsb
dec
mov
push
sub
xchg
add
push
cmpsl
cld
inc
gs
testl
cmpsb
and
jg
ja
or
push
jns
jge
inc
jno
push
push
cld
cmp
mov
scas
out
pop
jae
inc
sub
test
lods
push
popa
into
jo
cmp
mov
loop
rcll
or
dec
fcomi
lret
shll
sub
je
push
push
mov
roll
ret
in
fwait
mov
out
ret
and
adc
out
push
and
dec
xchg
cld
push
loopne
jno
idivl
pop
ljmp
sbb
ret
mov
in
adc
jns
jp
cmp
sub
adc
adc
repz
push
mov
movsb
push
aaa
mov
lods
das
test
insb
into
leave
xor
push
movsl
xorb
stos
sbbl
mov
cld
int3
sbb
cltd
inc
sahf
mov
xchg
pop
push
sahf
sub
shrl
pop
sbb
xor
cltd
arpl
push
fisttpll
mov
adc
jbe
inc
shrb
jo
mov
stos
cmp
scas
push
sbb
mov
dec
dec
in
inc
mov
testl
mov
jge
xor
sbb
stc
sub
packuswb
fistpl
and
push
jg
xchg
xchg
loopne
and
pushf
mov
adc
inc
fst
mov
mov
mov
inc
xor
fisubs
es
xorb
xor
daa
inc
aas
mov
jbe
popa
jb
arpl
push
inc
sahf
adc
rcrl
xchg
sub
dec
into
inc
stos
lock
out
push
insb
insb
fcoms
dec
mov
in
pushf
adc
nop
mov
adc
mov
dec
mov
pop
dec
mov
imul
xorl
rcll
test
scas
clc
lock
mov
jmp
add
push
mov
or
mov
push
dec
pop
movsb
ret
adc
mov
aam
or
push
clc
xchg
sbb
mov
lret
test
and
loopne
cmpsb
mov
add
push
adc
adc
push
push
mov
pushf
fidivs
cmp
jns
imul
es
jne
or
lds
fs
incl
xchg
clc
test
lods
ljmp
mov
faddp
dec
pusha
push
cmpsb
fnstsw
jnp
pop
xchg
lock
in
das
push
push
pusha
xor
repz
jmp
in
lret
dec
lcall
mov
fs
fmull
cmpsb
rclb
inc
or
call
add
xchg
iret
push
and
xchg
sti
ret
and
mov
arpl
xlat
gs
add
mov
pop
hlt
push
jne
mov
cmp
daa
pop
std
imul
fmuls
aas
xor
inc
sti
inc
imul
and
and
push
sub
sbb
pop
cmpsb
jo
cwtl
nop
lret
and
lock
les
inc
imul
xchg
stos
out
in
mov
adc
mov
notb
sbb
test
pop
add
jae
or
mov
mov
or
shlb
xchg
enter
pop
and
in
sbb
xorb
lods
insl
xor
xor
pop
sbb
std
je
xor
je
lcall
leave
mov
out
std
push
mov
mov
and
enter
mov
mov
dec
pusha
subl
xlat
mov
pop
subb
clc
and
jle
jb
je
mov
stos
mov
pop
lahf
sub
fisttpll
dec
ljmp
and
shll
dec
push
sbb
fisttpl
xchg
or
xor
jne
mov
js
into
enter
and
mov
dec
arpl
cmpsb
mov
in
push
xor
adc
incl
sbb
shrb
mov
pusha
inc
jbe
dec
mov
add
clc
push
cmpsl
int3
adc
movsl
mov
divb
xchg
rcr
fnstsw
sbb
jb
testb
mov
iret
out
shlb
xchg
fsts
rol
inc
mov
jns
cmp
pop
pop
mov
clc
ja
fsubrs
into
jb
test
leave
add
out
dec
push
stos
push
mov
xchg
jecxz
aaa
icebp
cmp
nop
aad
mov
mov
andl
aam
daa
xchg
negl
js
fidivrl
cmp
push
xchg
das
or
scas
nop
mov
rolb
pop
loope
int3
pop
mov
cs
mov
mov
xchg
scas
or
ret
into
int3
fxch
inc
add
sbb
jle
fucomp
cmpsl
subl
xor
adcb
ja
cld
mov
mull
fcomip
das
sbb
adc
jne
jg
mov
imul
inc
push
nop
jl
or
jb
lcall
push
add
aad
in
xor
sbb
and
pop
mov
pop
and
fdivl
pop
xor
insb
ja
ret
jle
mov
andl
loopne
or
jb
mov
or
cs
call
cmpsb
push
mov
repnz
bound
int3
jle
mov
ret
pop
in
mov
push
inc
fmulp
xor
fimull
xor
add
cmc
les
test
test
and
mov
fs
cmpsl
std
aas
jnp
xchg
mov
test
jge
sub
mov
dec
js
dec
outsb
ret
xor
notl
movsb
cli
xor
xor
insb
ja
ret
dec
push
inc
std
out
cmp
and
dec
dec
sbb
rorb
sbb
push
adc
or
leave
pop
outsl
mov
lods
insb
lret
cmp
dec
xlat
push
fs
adc
jecxz
adc
jo
inc
sub
mov
xor
inc
jge
aam
test
and
cwtl
add
mov
std
scas
pusha
lret
shll
push
inc
aad
aam
loopne
shrl
jl
pushf
cmpsb
push
mov
add
jb
cwtl
jb
enter
popf
mov
out
fistps
xor
xor
jmp
shlb
cmp
fsubl
dec
cmpsb
fisubl
loop
xchg
decl
sarb
sub
subb
andl
dec
cld
sbbl
adc
jmp
sbb
popl
jo,pt
int
out
add
icebp
push
in
xorl
imul
adc
in
mov
lcall
popf
fistl
push
push
mov
cmp
out
sbbb
lods
sbb
fimull
xchg
pop
mov
push
xchg
or
out
test
xor
xchg
push
push
ds
rcll
jae
adc
add
cmpsb
iret
mov
dec
dec
push
out
gs
mov
pusha
mov
mov
mov
cmpsb
in
hlt
sbb
aas
mov
pop
dec
xor
aad
or
test
inc
dec
xor
rep
jmp
sub
dec
adc
dec
jmp
and
pop
mov
cmp
adc
frstor
and
aad
pop
pop
jecxz
jno
sbb
addl
pop
pop
pop
xchg
add
adc
push
idiv
pop
out
stos
call
scas
mov
xor
pop
cmp
dec
or
mov
lea
loope
addr16
add
add
xchg
push
jbe
adc
xor
dec
mov
mov
inc
mov
cmp
in
dec
inc
adc
pop
scas
jmp
inc
cmp
rorb
mov
jne
fstl
fisubrs
in
xor
lea
lcall
das
jno
sbb
test
popa
push
dec
and
xchg
shrb
push
jo
add
mov
add
lods
cmp
repz
xorb
mov
shll
into
in
push
jb
int
lds
out
in
adc
out
push
addr16
daa
lret
inc
sub
cmp
adc
sbb
sub
sbbl
fwait
out
pop
cmp
aad
cmp
pop
jge
xor
imul
dec
inc
gs
cltd
clc
mov
and
cmpsb
adc
sti
adc
or
jno,pt
pop
mov
gs
es
add
loope
ljmp
jne
in
and
pop
dec
sub
fs
js
mov
sub
jle
es
push
sbb
adc
push
fwait
pop
push
mov
cwtl
inc
mov
out
push
or
add
test
xor
push
stc
push
jmp
mov
ljmp
sub
rorl
jno
movsb
aam
push
jb
stos
insb
mov
icebp
in
movsl
xchg
push
iret
mov
sti
push
popf
mov
pop
and
adc
adc
ja
mov
mov
and
das
std
pop
fidivs
cmpsb
cmpsl
shll
xor
rcll
fldt
pop
enter
cmpsl
imul
lock
jle
out
jb
out
das
je
imul
push
fisttps
and
jne
pop
shlb
xchg
xchg
cmp
and
inc
fcomps
pop
clc
add
lea
jb
sbb
and
push
stos
daa
out
in
pop
cld
pop
icebp
test
cli
lods
jno
loop
stos
mov
out
sahf
es
js
push
rclb
adc
sbb
lds
je
pop
xchg
addr16
pusha
pushf
insl
cmp
fwait
mov
and
popa
sub
fldcw
push
lahf
xchg
lahf
or
xor
rcl
xchg
jno
movsb
aam
fst
push
ficoml
cmp
ljmp
lods
inc
sub
rorb
push
cmp
cmpsb
xor
inc
aad
add
dec
not
adc
cli
mov
aaa
call
fs
repz
push
xchg
xchg
push
add
leave
out
mov
repz
jmp
ja
fdivs
out
cmc
push
push
mov
insb
push
sub
jl
int
jo
ret
popa
dec
fnstsw
pop
sahf
insb
xchg
repnz
sbb
aam
ret
lods
lret
xor
cli
cmp
jne
jo
insb
loopne
popa
push
adc
test
and
xchg
gs
int
push
stc
jl
icebp
jmp
push
mov
pop
loope
push
adc
in
lcall
ret
call
dec
cmpsl
mov
arpl
stc
jl
icebp
jmp
fiadds
mov
pop
test
ret
pop
loopne
dec
jb
arpl
add
sbb
push
inc
push
sahf
dec
mov
loop
ds
ret
fisttpl
push
mov
xchg
cmpsl
outsb
cli
in
and
clc
fnstsw
ret
xor
mov
dec
dec
imulb
cmp
imul
or
mov
lcall
je
inc
jecxz
adc
adc
jno,pn
popa
outsl
hlt
jp
inc
cmp
repz
xchg
jne
xchg
mov
xchg
or
daa
hlt
mov
push
fwait
scas
jo
mov
or
add
rcll
test
push
mov
lods
pop
rol
xor
lods
dec
lret
inc
lret
es
pop
ds
ret
gs
cmp
dec
or
jbe
gs
cmp
jo
fistl
inc
pusha
hlt
jl
cmp
push
sub
inc
cli
test
jecxz
mov
mov
rorb
dec
addb
les
push
adc
int3
xchg
aas
mov
in
out
es
inc
test
dec
push
enter
sbb
arpl
lock
cwtl
js
dec
cmp
into
rcll
into
stos
or
mov
jbe
inc
push
stc
push
jmp
sbbl
jo
mov
jecxz
pop
mov
aaa
mov
sahf
lods
add
and
and
hlt
mov
mov
jns
push
pop
and
inc
call
cmp
psubsw
mov
imul
test
inc
mov
mov
push
in
iret
xchg
fcoml
lods
adc
xchg
mov
dec
outsb
imul
flds
add
out
loop
daa
inc
stos
push
push
rclb
repz
pop
lcall
jno
dec
das
xchg
imul
jnp
mov
jno
push
aam
int
jp
and
dec
insb
mov
clc
push
fcompl
fdivrp
dec
xor
insb
loop
sbb
cli
xchg
mov
xchg
stc
movsb
lods
jae
xchg
pop
pop
ret
je
xor
into
pop
ja
mov
scas
dec
push
aas
xor
pop
pop
push
mov
fildl
sub
and
or
and
xchg
add
lea
jl
mov
rolb
test
aas
inc
pop
sbbl
insb
hlt
test
push
xchg
push
sub
inc
xor
popf
jl
in
lret
add
mov
sbb
xchg
cld
pop
sbb
mov
test
repnz
push
in
push
stc
je
xor
mov
inc
ljmp
cmpsb
sbb
addl
fisubrs
xchg
lods
jo
or
mov
mov
es
xor
inc
fwait
fwait
adcb
cmp
fwait
adc
mov
push
call
mov
dec
sub
stos
lds
and
iret
sbb
jb
add
ror
and
xchg
cmpsl
push
dec
aam
inc
xor
xchg
push
aad
or
scas
xchg
in
add
test
push
ss
add
imul
mov
cmp
les
push
test
inc
popf
mov
mov
sarb
sub
xchg
add
lret
movsl
cwtl
repnz
insb
add
sub
jns
push
lods
push
pop
fbstp
loopne
js
mov
mov
and
loopne
test
pop
insl
mov
xor
pusha
push
aam
sahf
mov
pop
mov
int3
or
push
jo
xor
mov
shll
fisttpll
pop
stos
std
jns
mov
push
inc
les
cmp
dec
xchg
je
pop
stos
lret
mov
scas
lea
cltd
lea
xchg
pusha
sub
push
mov
push
fwait
dec
lahf
in
jge
xor
fs
test
nop
in
in
repnz
inc
out
sbb
adc
subl
int3
add
inc
inc
incb
int
dec
cmp
ljmp
loope
jg
xor
xchg
push
daa
dec
insl
push
xor
inc
inc
jo
jae
or
add
call
mov
dec
xor
stc
cld
or
jb
bound
hlt
adc
jg
aaa
cmp
jmp
outsb
inc
add
jo
pop
jecxz
pop
ret
ret
notb
push
and
dec
fimuls
stos
stos
push
int
adc
xchg
stc
test
push
pop
bound
fbld
clc
filds
out
push
shrl
xor
xlat
sbb
mov
sub
and
jbe
cmp
cmpsb
pop
mov
mov
adc
mov
cmp
icebp
repz
cmpsb
popf
ja
inc
imul
in
and
push
mov
lret
in
cwtl
or
je
inc
lods
push
fs
xor
push
mov
xchg
iret
sbb
lcall
dec
add
pusha
movsb
pop
scas
lods
in
int
sub
xor
sub
jnp
icebp
jp
jecxz
icebp
out
or
jmp
shlb
or
inc
dec
mov
orl
imul
xchg
mov
gs
pop
popf
push
scas
jae
sarl
add
sbb
push
fdivr
push
mov
fdivl
ss
adc
or
jnp
mov
jae
mov
cmp
out
pop
mov
jbe
lcall
pop
fcmovne
sbbb
addl
loopne
pop
add
test
xor
adc
sarl
fcmovne
out
fs
sbb
mov
inc
xchg
pop
push
outsl
out
nop
and
xchg
mov
nop
pop
push
stos
xchg
xlat
pusha
jge
jl
push
push
shlb
mov
movsl
lods
lods
xor
xor
outsl
mov
xchg
inc
sbb
in
dec
clc
pop
mov
xor
mov
sahf
ret
rclb
pop
int3
pop
cmpsl
sub
stos
xchg
mov
bound
neg
das
mov
in
add
jno
rorl
mov
lcall
dec
sbb
adc
fimuls
cmp
inc
push
ret
xor
push
and
inc
cmp
test
push
xchg
cmp
sahf
pop
mov
cmp
ret
mov
subl
js
mov
sbb
je
sub
sarb
adcb
std
pop
cmp
mov
repnz
push
or
mov
mov
jl
adc
or
sbbb
stos
xor
pop
sti
popf
mov
inc
add
jb
xor
sbb
notl
sub
popf
fwait
in
test
jno
or
movsl
je
jo
sbb
stos
sub
imul
push
jl
xchg
pushf
adc
sbbl
ret
mov
fmulp
and
daa
mov
addr16
cmpsb
jne
cld
in
jl
fcomps
pop
pop
fcoms
sub
jl
stc
mov
pop
dec
test
ja
faddp
or
or
mov
and
sub
mov
andb
or
cmpsl
fldt
xor
push
scas
hlt
arpl
mov
mov
push
push
push
idivb
mov
notb
das
push
das
mov
jp
and
scas
test
stc
xor
pop
mov
iret
jl
mov
hlt
nop
ja
mov
popf
adc
out
test
jbe
sbb
jmp
and
add
push
leave
cmp
cli
mov
decl
push
inc
out
lcall
add
add
dec
pop
cmp
adc
fimuls
lcall
aam
mov
daa
fldenv
call
push
pop
je
add
or
push
fnstcw
insb
push
push
inc
xor
sub
xor
xchg
mov
sbbb
mov
in
dec
shrl
mov
push
rep
gs
and
cld
fistpll
mov
pop
mov
enter
add
sub
mov
lahf
shlb
pop
sbb
push
jg
adc
inc
push
xchg
lods
pop
jle
int
lahf
xchg
das
leave
jo
jbe
mov
cwtl
push
mov
or
nop
inc
lea
repz
lret
sahf
xor
inc
ret
outsb
adc
int3
in
inc
movsb
andl
mov
add
pop
push
or
cwtl
inc
lcall
xchg
adc
mov
adc
dec
das
scas
add
push
iret
arpl
xor
mov
movsb
add
sbb
shlb
mov
repz
aad
adc
rcrl
andl
popf
sub
push
dec
into
lea
sbb
fbstp
shll
loope
mov
imul
sbb
push
loop
mov
ss
mov
sbb
mov
dec
decl
mov
and
clc
cs
mov
popl
outsl
jmp
jns
dec
cmp
scas
jecxz
outsb
push
adc
add
ss
mov
jo
inc
add
das
and
push
arpl
xchg
dec
and
sbbl
mov
shll
aam
or
leave
mov
lahf
push
nop
movsl
loopne
jecxz
ss
je
aad
xlat
lcall
inc
mov
imul
pop
or
jmp
movsb
test
jecxz,pt
adc
out
push
push
out
insb
cli
push
xchg
rorl
xlat
std
daa
outsb
sub
lcall
sub
pusha
arpl
push
loope
sub
cli
mov
rolb
push
in
xor
or
insl
pop
mov
xchg
and
les
cmp
and
repz
cmp
fisubrs
mov
adc
bound
push
or
roll
cs
rorl
cld
dec
loope
out
xor
fsubs
test
and
or
or
push
aam
jl
lcall
lcall
mov
insb
mov
rolb
push
cmp
push
ss
push
fidivs
pop
pop
mov
stos
movl
jns
mov
loope
cmpsb
in
leave
inc
cli
dec
inc
rclb
loop
add
push
bound
loop
mov
xor
dec
imul
in
cwtl
sti
lods
lods
loop
jecxz
mov
adc
loopne
call
mov
or
or
xchg
test
jnp
and
arpl
cmpsl
xchg
jp
ret
dec
xchg
mov
xchg
pop
sbb
imul
xor
mov
in
into
popa
icebp
scas
inc
rcrb
cmpsb
add
and
dec
mov
cltd
xchg
aam
xchg
mov
lock
test
cli
or
pop
sbb
in
add
xor
push
in
pop
mov
mov
jne
insb
xor
or
add
inc
jne
rep
lods
cmpsb
aad
mov
jb
mov
cmpsb
adc
inc
int
cmc
cld
ljmp
nop
leave
xchg
dec
shl
jnp
dec
push
cmp
outsl
mov
aam
idivl
dec
inc
mov
stc
scas
icebp
xor
cltd
nop
loopne
xchg
bound
mov
call
ret
push
sub
mov
mov
aam
fldl
aam
jle
push
add
hlt
es
xchg
fsubl
jmp
push
push
and
mov
jb
lcall
cmp
rorb
fscale
push
adc
lcall
sub
into
push
lret
daa
in
movsl
lcall
stc
xor
subl
aad
cmpsl
test
les
xorl
loop
shlb
xchg
icebp
jo
cmp
test
xor
adc
mov
lret
add
cwtl
clc
pop
sar
inc
inc
sub
add
ret
xor
xor
push
pusha
daa
pop
cld
fs
dec
sbb
cld
pop
adcb
repz
insl
js
xor
mov
popa
jecxz
lods
repnz
sbb
mov
pop
int3
insl
and
mov
std
mov
aaa
into
add
outsb
jp
cld
lret
mov
pop
add
inc
dec
aaa
inc
sub
shlb
mov
or
aaa
pop
int
cld
push
fildl
shl
mov
rcr
cmp
in
scas
jle
lock
pop
mov
incb
inc
add
sub
int3
push
inc
or
lea
jg
fistpll
mulb
mov
xor
outsl
mov
mov
pop
in
sub
inc
push
lds
push
je
lds
notl
jb
mov
sub
mov
lods
cmp
lcall
loopne
ret
stos
fdivrl
fisttps
add
dec
mov
outsb
mov
imul
push
ret
inc
stc
xchg
pop
mov
clc
add
popf
pop
shrl
cmpsl
rolb
sbb
xlat
add
inc
jmp
or
lea
into
add
in
fwait
mov
jne
out
or
scas
pop
adc
or
jg
stc
push
andps
addl
movsb
xor
inc
mov
push
jecxz
add
jno
push
jl
sbb
sub
and
and
jecxz
flds
inc
loop
fstpl
gs
cmpsl
stc
xchg
dec
test
stos
dec
pushf
mov
ljmp
movsl
adc
and
dec
pop
addb
cmp
scas
xchg
or
outsl
popa
fmull
mov
or
int3
pop
icebp
std
sbb
sub
jp
call
xor
push
jns
stc
jne
xchg
push
xlat
inc
xchg
cmp
sbb
int3
insl
les
sbb
or
sub
push
push
rorl
mov
fwait
ja
and
sbb
sbb
out
xlat
sbb
sbb
push
into
cmp
adc
push
pop
or
cwtl
jmp
fiaddl
xchg
ret
mov
out
dec
ficoms
sub
adc
xor
call
aas
cmpl
rep
xchg
jo
adc
xor
stc
add
xchg
je
jno
fsts
test
lods
mov
jp
push
rcll
sbb
add
adc
xorl
and
push
iret
test
adc
lods
mov
out
cltd
mov
leave
daa
mov
and
add
gs
out
jl
xchg
jo
insl
add
xchg
fsubrl
outsb
icebp
inc
jle
inc
lods
cmpsl
shlb
sbb
pop
dec
or
cwtl
jmp
repnz
add
shr
cwtl
dec
sub
push
idivb
es
xchg
out
hlt
cmp
divb
cltd
or
loopne
push
icebp
popf
push
or
pop
enter
ret
roll
scas
push
popa
sub
ja
add
or
cld
pop
lahf
sbb
jmp
lret
aas
out
push
jb
jmp
push
movsb
sub
adc
enter
movsl
mov
mov
hlt
jae
shr
jecxz
stos
pop
xor
push
stc
sub
shll
pop
nop
ffreep
cmp
addr16
xchg
xchg
rcll
sub
ja
jno
push
sub
lret
jmp
out
sub
aaa
pop
clc
cmc
cmp
je
mov
mov
in
push
divl
jg
shl
cltd
dec
dec
bnd
and
les
outsb
movsb
mov
xchg
in
sbb
push
lods
adc
or
sub
and
imul
cwtl
mulb
pushf
cmpsb
pop
inc
mov
jbe
push
cmp
xchg
adc
adc
stos
test
mov
hlt
adc
je
sbb
and
popa
out
rcr
loop
lret
sub
jb
popf
lods
std
lock
out
mov
imul
test
push
mov
sbb
jb
iret
fs
mov
push
movsb
ja
xor
outsb
and
push
shll
inc
inc
sbb
out
jmp
jns
negb
sbb
xor
sub
pmullw
popfw
xchg
ss
test
jo
sub
lret
addb
push
insb
mov
xchg
mov
int
lcall
lret
and
scas
sub
jp
adc
push
jmp
add
cmpsb
nop
bound
stos
push
add
jge
cmpsb
push
xchg
mov
jmp
popa
in
int
rcr
arpl
js
push
gs
lock
lds
xor
out
ret
push
in
push
and
jne
test
pushfw
pusha
inc
cmp
jne
shll
xor
mov
push
cmp
popa
test
lahf
sarb
xchg
and
jnp
sub
ret
mov
pop
cltd
sar
dec
pusha
in
xchg
cmp
push
scas
dec
inc
inc
and
add
add
jno
popa
adc
mov
dec
out
mov
xchg
arpl
mov
insl
mov
rcr
ljmp
std
mov
ret
push
shlb
pop
int
sub
leave
push
jae
add
sbbl
ret
mov
adc
or
test
sbbl
scas
stc
fidivs
add
inc
fisttpl
mull
mov
jnp
out
pop
ret
daa
lahf
mov
jne
push
adc
dec
ret
fmuls
adc
mov
lret
dec
mov
mul
jle
pop
int
mov
imul
add
repnz
shl
mov
and
popf
or
dec
fdivrs
inc
inc
and
mov
pushf
dec
cmp
adc
or
mov
pop
stc
and
fsubp
or
or
mov
cmpsb
jnp
mov
aas
imul
mov
fisubs
jmp
sub
sysenter
mul
aaa
repnz
xchg
inc
arpl
in
jo
sbb
sbb
or
loopne
sub
cmpsb
jae
js
ljmp
mov
sub
out
andb
sti
mov
fimuls
movsl
in
in
mov
push
xchg
sbb
adc
nop
mov
and
adc
hlt
lret
dec
add
addr16
lcall
out
inc
mov
imul
pusha
divb
test
hlt
jl
cmpsl
scas
push
push
arpl
lret
lods
fsubp
push
mov
les
psubusw
iret
cltd
sahf
push
push
cmc
xlat
ret
outsl
pop
cmp
mov
xchg
jne
inc
scas
add
jle
jo
xchg
jl
inc
pop
jne
jb
and
push
movsb
xchg
dec
jne
out
xchg
add
andb
dec
iret
pop
loope
ret
fs
pop
mov
mov
mov
xor
cltd
repz
push
leave
sbbb
jl
add
push
in
cwtl
in
ds
aaa
cmp
mov
outsb
sub
mov
jns
xlat
jge
js
add
sti
xchg
cld
cltd
dec
aad
mov
cli
fmuls
pop
mov
dec
or
inc
lahf
jge
inc
mov
xchg
fnstsw
jnp
push
lcall
pop
sbb
add
cmp
pop
mov
call
inc
lea
leave
repz
dec
jge
mov
xchg
mov
pop
dec
fistl
dec
mov
lods
aas
xchg
test
and
stos
and
pushf
push
imul
scas
inc
dec
bound
dec
cmp
stos
movsb
pop
dec
movsl
gs
call
adcl
cmpsb
imul
mov
aam
mov
mov
and
movsl
xchg
xor
sbb
jge
mov
div
inc
loopne
or
xlat
mov
fsubl
div
je
push
aad
xor
insb
loope
outsb
cli
inc
fbld
imul
add
popa
stc
test
mov
jmp
push
or
outsb
idivb
cmp
pop
mov
out
stc
ret
fs
lock
push
pop
aad
dec
jno
jb
daa
cmp
mov
sub
icebp
mov
scas
js
lods
lcall
mov
push
xchg
cmc
incl
pop
test
insb
int
mov
cmp
ljmp
jp
sbb
cmpsl
aas
and
arpl
and
decl
in
or
sub
mov
xor
icebp
mov
cmp
xor
add
test
push
fs
mov
testl
loopne
xchg
push
inc
sbb
movsb
jle
out
sahf
mov
sub
das
push
jne
jg
scas
loopne
lret
xchg
mov
fwait
lret
enter
push
cmp
pop
into
push
outsl
rcll
test
in
sbb
imul
xor
pop
je
dec
mov
inc
movsb
jne
xor
or
je
mov
sub
mov
sub
push
ret
leave
scas
mov
mov
cmp
out
xor
out
lea
push
jl
das
add
push
test
xchg
out
dec
sbb
fists
mov
insl
pop
cmc
test
dec
fistpll
pop
adc
scas
fs
js
and
adc
dec
add
push
sbb
icebp
mov
sbb
out
pop
fldt
cltd
mov
xchg
scas
sbb
and
enter
push
inc
dec
pop
lcall
addr16
or
iret
in
sub
es
jg
out
pusha
aad
popf
sbb
and
fdivrs
icebp
mov
cli
xlat
int3
xor
adc
shrl
outsb
pop
inc
pop
daa
adc
insl
gs
push
out
cmp
inc
push
sub
inc
or
mov
gs
mov
cmp
mov
sbb
or
mov
out
xchg
inc
jbe
ret
sbb
mov
fwait
fwait
leave
out
add
rcrl
xchg
xchg
sub
lea
add
xor
xor
lahf
test
sub
mov
loopne
ret
movsb
test
pop
mov
outsb
and
inc
sub
out
cmpsb
cmc
fcmovnb
es
jmp
icebp
push
imul
imul
out
xor
xor
add
sarb
je
and
sub
inc
jg
push
dec
add
pop
push
cmpl
orb
movsb
add
fisttps
push
dec
rcl
mov
out
inc
fucomi
dec
rorl
mov
pop
sbb
loop
pop
hlt
add
shll
pop
lock
add
sbb
add
mov
rcll
xchg
dec
inc
stos
out
pushf
ljmp
xor
fwait
addb
mov
popa
dec
sub
scas
jg
test
rcl
add
repnz
idivl
and
and
pop
adc
imull
fnstenv
insb
sbb
scas
fimull
push
addb
int
and
push
stc
push
fcomp
pushf
cwtl
ljmp
mov
sub
xchg
mov
mov
lods
mov
lock
cmpsl
into
inc
push
pusha
insb
push
xlat
dec
xchg
outsl
mov
sarl
js
lods
rcll
mov
pop
xchg
aaa
pop
shlb
ss
shrl
push
fs
shlb
in
cmp
aad
cs
pop
movsb
xchg
in
cmc
push
scas
xchg
mov
adc
mov
jg
push
scas
adc
in
in
cmp
sbb
mov
fstps
ficoms
ret
cld
imul
jo
pop
mov
inc
dec
cmp
shlb
jns
or
mov
popf
imul
scas
sbb
shrb
fisubs
cmp
mov
pop
add
testl
push
jecxz
jbe
sub
adc
mov
ljmp
ret
pop
xchg
xor
sub
rcr
xchg
sub
data16
and
mov
lahf
stos
mov
mov
movsl
popl
in
or
mov
cmp
dec
inc
daa
sbb
sub
sbb
ror
jae
fmull
push
sub
mov
and
jb
sub
dec
sub
push
and
rcll
popf
subl
rclb
lahf
or
rcr
aad
mov
xchg
stos
jge
movsb
insl
addl
fnstsw
push
push
mov
iret
cli
push
cmp
mov
outsb
and
mov
scas
lock
jl
je
addr16
movsb
movsl
stc
dec
mov
sbb
loope
faddl
jne
data16
push
jnp
or
push
je
sbb
data16
test
push
mov
in
push
out
add
push
fimuls
jl
lock
xor
ja
in
into
cs
lcall
sub
cmp
pop
imul
xchg
rorl
popf
pop
movups
mov
aas
jnp
test
fldl
xor
into
jo
cli
popa
mov
outsb
xchg
lods
icebp
lret
pop
dec
push
aas
clc
in
inc
mov
fxch
xor
in
xchg
out
and
mov
es
nop
mov
stos
inc
push
sbb
inc
loop
sbb
cmpb
xchg
daa
and
jecxz
cmp
nop
push
sbb
push
repz
sub
movsl
insb
pop
push
mov
mov
cltd
or
push
popa
stos
adc
dec
dec
mov
rclb
mov
push
xor
jbe
dec
or
lock
lods
imul
mov
pop
cmp
xor
push
filds
test
test
in
imul
leave
or
sub
orl
fildl
test
push
repnz
xchg
xor
outsb
lods
leave
fidivrl
icebp
mov
in
dec
jg
inc
fnstenv
adc
jnp
adc
sahf
jmp
add
push
sub
pop
sub
pop
mov
push
gs
in
das
adc
int3
push
ret
mov
loopne
insl
jmp
mov
addr16
mov
mov
aaa
jp
push
je
xchg
dec
gs
adc
ljmp
pop
cmpsb
scas
mov
out
rcll
and
sbb
mov
aam
das
mov
das
and
iret
or
and
sub
icebp
dec
cmpl
cmp
addl
or
int3
arpl
lds
jmp
sbb
int
mov
jl
push
pushf
jmp
cmp
mov
inc
es
imul
rcl
cmp
and
inc
jge
icebp
data16
inc
adc
dec
mov
js
sbb
mov
out
pop
cmc
dec
sub
popf
data16
mov
mov
mov
out
insb
push
mov
jne
ret
mov
addr16
mov
push
ret
and
in
jb
inc
imul
mov
cmc
push
std
mov
jb
addr16
xor
push
repz
push
movb
les
mov
cmp
cmp
cmpsb
mov
pop
mov
add
pop
sbb
push
in
orl
sbb
sbb
push
pop
or
jne
pop
aad
fnsave
sbb
xorb
in
lods
xchg
in
pop
lds
dec
jbe
js
cmpsl
mov
cmpsb
mov
xor
neg
sub
and
mov
sub
sbb
push
mov
shll
lret
xchg
hlt
mov
inc
xchg
xchg
jnp
dec
into
inc
dec
pop
aaa
lds
cmpl
notb
fldz
outsb
aas
imul
jmp
jne
dec
js
push
arpl
test
cmpsl
or
jle
mov
push
and
dec
xor
pop
cmpsb
cmpsb
xlat
movsl
mov
lret
inc
or
in
lcall
rcrb
stc
pop
cltd
jmp
push
lret
mov
push
adc
nop
mov
cmp
loop
lret
data16
loop
push
ror
adc
xchg
repz
in
jmp
stos
push
daa
in
adc
ret
push
cmp
mov
jp
rol
and
mov
push
nop
pop
icebp
cmp
add
aas
xor
xchg
cmp
mov
add
addl
sbb
push
arpl
les
mov
add
shr
mov
lock
sub
dec
xor
jnp
pop
dec
popf
sar
int
iret
and
mov
pusha
lods
sti
pop
shll
shll
add
lea
push
dec
outsb
xor
jl
add
push
imul
jb
imul
ret
xchg
sub
jecxz
pop
ss
cwtl
jg
jmp
aad
pop
jmp
shlb
ljmp
testl
ret
push
add
sti
pop
xchg
pop
lds
sub
prefetch
or
and
xchg
xchg
sub
subl
adc
stc
pusha
mov
cld
mov
fnstenv
push
in
repz
scas
jg
adc
jae
cmp
cmp
mov
cmp
mov
aad
rolb
or
lds
insb
pop
in
cmc
cltd
ds
inc
pop
cmp
sub
data16
lock
int3
xchg
push
test
int
in
cmp
xorl
mov
mov
clc
aam
jg
ja
xor
fidivs
int
fidivl
inc
insl
pop
in
sahf
cmpsl
dec
test
jecxz
sub
mov
cs
dec
push
xchg
dec
and
and
or
movsb
pop
jecxz
jae
fadd
pop
mov
sub
xor
pop
xor
push
mov
shll
cmp
xchg
push
dec
in
repnz
mov
dec
sbb
data16
dec
stos
adc
frstor
jmp
enter
xchg
jg
sbb
je
es
push
mov
xor
pop
sbb
nop
jnp
sub
daa
add
mov
out
in
pop
dec
adc
push
jnp
xabort
cltd
dec
fidivrl
pop
pop
inc
aad
les
add
in
aam
push
mov
int
vmovdqu
push
outsl
stc
ret
inc
lahf
fndisi(8087
xor
rcr
pop
sbb
test
aad
shrb
pop
jp
pop
fdivp
adc
testl
test
or
mov
aas
pop
dec
into
mov
xchg
fadds
test
icebp
push
out
popf
icebp
dec
int
daa
lock
stos
decl
outsl
jmp
lock
and
pop
movsb
add
scas
clc
or
xor
subl
sbb
aas
push
push
test
movsl
cli
push
aaa
loope
lcall
mov
pop
insl
shlb
pop
fwait
hlt
adc
fistpl
enter
mov
jnp
xchg
jns
and
dec
nop
dec
inc
pop
fistpll
add
xchg
cmpsl
xor
mov
lret
mov
xor
push
pop
and
push
int
jl
loope
test
lret
loop
test
out
aas
ror
or
aaa
mov
adc
in
lods
sub
add
mov
mov
flds
sub
mov
xorl
in
mov
mov
clc
sub
push
push
scas
ljmp
fwait
and
lock
fstpl
and
cmpsl
mov
xor
inc
stc
jmp
cld
mov
sbb
or
pop
or
mov
mov
pop
jp
mov
xchg
mov
xchg
clc
and
push
in
scas
and
stos
ljmp
pop
loopne
jne
push
lods
and
push
in
sahf
stc
aaa
xor
xchg
das
pop
cld
mov
outsb
pop
roll
lods
xchg
mov
mov
sahf
test
sub
fs
pushf
pop
sbb
out
pop
mov
cmp
sbb
sub
dec
mov
fisubl
in
cmpsb
fs
mov
sbb
add
nop
test
cmp
aam
adc
mov
sahf
adcl
pop
jb
cmpsl
inc
mov
popf
mov
faddp
fcmovne
mov
dec
push
aas
add
mov
sbb
mov
xor
inc
pushf
pop
lret
icebp
cmp
adc
push
rclb
flds
push
es
stc
push
dec
shlb
ret
cmp
xor
mov
jbe
lods
in
cmp
pushf
xchg
les
popa
pop
test
fwait
cmp
mulb
push
adc
push
bswap
cmp
or
int
in
popf
sbb
push
cltd
and
cmp
cmpsl
mov
subl
inc
out
ja
fsubs
addb
out
in
daa
in
jno
push
daa
cmc
outsb
or
arpl
xchg
inc
stos
cmc
mov
mov
dec
les
sahf
int3
sub
scas
jmp
out
dec
call
pop
sarl
repnz
add
fadd
mov
adc
xchg
in
mov
outsl
jp
xchg
cmpl
adc
out
jle
mov
xchg
in
mov
shll
push
cmc
jne
mov
inc
loope
or
mov
jecxz
fsubp
mov
pop
xchg
hlt
stc
aam
mov
popa
push
lea
mov
sbb
dec
out
push
dec
add
mov
sbb
aas
xchg
out
push
xchg
mov
sbb
inc
jge
idiv
loopne
icebp
js
mov
sti
cmp
add
fisubs
stc
jge
dec
jmp
jnp
es
dec
pop
or
mov
xorl
roll
daa
fstpt
scas
inc
sub
jecxz
xchg
dec
jmp
mov
xlat
dec
inc
xlat
and
out
shlb
mov
pop
test
sbb
in
pusha
pop
push
mov
mov
and
nop
cmpsb
cli
or
insl
test
pop
inc
mov
sahf
jg
cmp
xchg
push
mov
pop
jne
clc
pop
lock
mov
fidivl
xor
jbe
add
jns
fsubrl
in
jl
pop
mov
mov
dec
xchg
pusha
and
pop
stos
pushf
push
cmpsb
mov
in
mov
mov
in
addl
xor
dec
fmul
test
cwtl
adc
adc
mov
je
inc
data16
stos
fcmovnbe
leave
cmc
pop
arpl
push
popa
hlt
mov
jmp
mov
push
add
push
cs
cmp
xor
xchg
xchg
scas
pop
ljmp
xchg
rcll
xorl
cmp
into
xchg
outsl
enter
andb
test
cld
jecxz
mov
out
ja
inc
dec
es
dec
sub
push
ror
xchg
jnp
lcall
test
jno
jmp
or
jl
dec
push
mov
stc
or
loop
push
je
xchg
jno
push
or
push
pop
test
stos
inc
sub
ror
mull
sub
test
jne
insb
mov
pop
cmp
mov
pop
aaa
gs
dec
pop
jp
stos
push
aam
js
movsl
rol
scas
daa
fs
inc
jno
adc
bound
sub
mov
outsb
xchg
cld
jnp
sub
mov
rolb
mov
lahf
ja
jp
mov
xchg
and
and
loope
inc
push
ss
cmp
aad
push
test
shlb
dec
cmp
jnp
or
ret
add
mov
pop
les
loope
in
aam
xchg
addr16
sbbl
test
nop
test
or
or
movsl
leave
rorl
xchg
pop
int
movsl
add
roll
dec
sarb
dec
add
jg
push
pop
jne
and
jp
sbb
cmc
pop
mov
jle
std
pop
fucomp
push
mov
cmpsb
imul
jns
dec
je
push
xchg
and
sub
pop
xchg
ja
test
pop
dec
insb
sbb
mov
punpckldq
jns
inc
xlat
scas
mov
movsb
fistpl
mov
and
or
mov
jge
push
int
out
push
call
inc
stos
jno
mov
jmp
dec
into
data16
insl
rorl
dec
pop
imul
into
aaa
fwait
or
pop
jae
mov
bound
or
push
add
mov
xor
sarl
imul
fisttpl
jb
xchg
aas
dec
cmpsl
mov
jae
inc
dec
pusha
mov
dec
xchg
clc
push
lret
mov
push
fbld
sbb
fidivrl
fisttps
mov
add
add
or
xchg
cmc
lcall
mov
mov
mov
pop
pop
fldcw
push
xchg
cmp
push
lea
jle
or
lcall
aam
cmp
pop
mov
sbb
adc
xchg
cltd
xor
stc
xchg
popa
inc
cmpl
stc
test
pop
mov
insl
mov
repz
add
add
inc
je
adc
loop
lret
lahf
pop
or
mov
mov
ljmp
and
add
mov
or
js
fildll
aas
fwait
cmp
shl
push
js
fnstcw
jno
mov
sti
cmc
div
push
xor
pusha
or
dec
sbb
dec
test
lds
les
out
add
jne
frstor
inc
push
or
out
cli
add
pop
loope
movsl
inc
dec
adc
mov
test
std
and
mov
and
ds
cld
fnstcw
add
pop
sti
insb
inc
fcmovne
jmp
jge
adc
movsb
int3
lret
mov
popa
scas
add
mov
xchg
lcall
ss
push
xor
in
adc
bound
inc
aas
fldenv
mov
add
enter
pop
xchg
push
adc
pop
jnp
sub
cmpb
jnp
xor
test
popa
add
fcmovnb
ret
and
push
fs
push
add
sarb
adc
xchg
jb
test
push
sbb
mov
fwait
mov
inc
fwait
stos
push
lret
push
cmpsl
fucompp
jle
aam
lcall
mov
mov
test
or
push
leave
xchg
andl
pop
or
sbb
xor
fadds
adcl
cmp
push
xor
mov
sbb
testb
pop
push
jg
dec
jne
sub
and
fs
and
cli
leave
mov
inc
add
jmp
push
imul
lock
and
loope
adc
sbb
loopne
hlt
mov
ss
aaa
xchg
push
mov
outsl
lods
in
add
add
shl
push
pusha
test
roll
stos
mov
fwait
jecxz
cwtl
int3
adcb
inc
push
adc
rcrl
sbb
mov
inc
daa
jne
insb
pushf
mov
add
push
mov
xor
shll
movq
mov
inc
push
cli
mov
mov
gs
pop
push
call
imul
dec
data16
fdiv
fcmovu
and
scas
sub
fcoms
les
or
jge
xor
rorb
jne
push
test
fwait
inc
frstor
popf
movsl
sub
in
cmp
mov
jnp
xorb
mov
adc
pushf
cmpsl
cmc
push
dec
cmpsl
mov
cli
adc
inc
pop
mov
cwtl
jl
inc
jmp
out
cmp
sub
sub
stos
orl
or
scas
adc
leave
inc
aas
push
sahf
xchg
push
repz
cmpsb
pop
mov
cmpsl
cmpsb
int3
data16
and
adc
je
pop
js,pt
int
ds
mov
fsubrl
mov
jmp
adc
jecxz
xor
mov
inc
scas
xchg
test
gs
mov
movsl
lret
mov
cmp
inc
jae
movsl
push
mov
xor
popf
stos
push
movsl
lea
ss
fiadds
jmp
pop
xor
stc
nop
sbb
mov
popa
dec
xor
insb
mov
cmp
mov
outsb
stos
cs
xchg
push
ljmp
sub
and
pop
dec
mov
dec
xor
pop
mov
ret
lahf
negl
rorb
fldcw
stos
sahf
cwtl
in
adc
add
movsb
xchg
push
loope
sbb
push
lea
mov
cmpsb
jae
xor
addr16
add
and
cmp
jle
lret
addr16
mov
push
insl
mov
scas
lret
sbb
lahf
sbb
or
fsub
dec
sarl
push
sub
cmc
jmp
push
cmp
shll
insb
daa
and
jo
sbb
mov
fs
sbbb
je
ret
cmp
pop
sahf
cmp
sarb
lods
cmp
push
sub
jmp
push
or
roll
pop
sbb
cmp
loop
cmp
js
or
iret
jb
cmc
inc
lds
movsl
mov
enter
insl
cwtl
test
incl
jecxz
sub
xchg
daa
mov
mov
mov
adc
jle
add
cs
mov
ret
and
mov
bound
aam
jmp
adc
int
aaa
cmp
sbb
mov
pop
pop
pop
jmp
scas
punpckhdq
inc
xorl
inc
dec
cltd
push
adc
xchg
sbb
mov
sub
fistps
shrl
cmp
xor
cmp
les
adc
xchg
sub
jo
pop
or
pop
or
push
xchg
sbb
lods
daa
mov
pop
dec
jnp
sub
setp
push
dec
leave
insb
addb
dec
ror
sbb
pop
xchg
je
xchg
fidivrl
fstpl
clc
xor
push
lock
jo
inc
into
sbb
jle
cmp
cmc
pop
aad
test
cmp
gs
xor
or
cwtl
loop
lock
ret
and
cmc
hlt
and
test
lods
xor
icebp
dec
mov
mov
push
les
add
xchg
pop
dec
into
rcll
mov
mov
xor
xchg
test
inc
jge
nop
gs
sub
outsb
pop
inc
insb
cmp
xorl
fnstenv
lods
test
mov
xor
subb
mov
cltd
and
int3
test
mov
add
sarb
jle
ret
ret
adc
mov
xor
inc
lock
pop
mov
lcall
dec
or
rcll
mov
in
arpl
push
sbb
movsl
adcl
cmp
inc
jns
adc
fcomip
jg
sbb
push
jbe
in
jecxz
sub
fcomi
std
sub
and
in
mov
orl
ret
pop
ret
in
outsb
call
xchg
les
insb
dec
dec
xchg
pop
aam
lret
cli
push
aam
out
out
mov
cmp
jecxz
adc
fiadds
push
int
mov
hlt
or
dec
cmpl
ss
inc
incb
out
nop
insl
xor
loop
push
cs
notb
nop
jg
sbb
aad
shrb
mov
sub
out
inc
and
in
addr16
pusha
test
hlt
push
test
bound
or
xor
stos
std
test
jp
jmp
xlat
xorl
or
xchg
fcomps
and
in
pop
mov
jmp
je
rorb
push
dec
lds
out
clc
sti
jne
or
or
aaa
mov
subl
clc
dec
mov
fs
stos
mov
and
pop
jae
xchg
outsl
stc
data16
adc
and
out
mov
pop
push
in
icebp
or
adc
cmpsl
shl
inc
scas
out
scas
add
mov
and
cmp
fwait
push
dec
cmp
stc
cmp
cmp
repnz
mov
decb
push
adc
dec
inc
in
cmpb
sub
xchg
lods
cld
bound
daa
sub
cmp
adc
punpckhwd
mov
push
pinsrw
xchg
int3
jo
shl
push
add
cmpsb
outsb
shll
hlt
cli
enter
sub
adc
and
adc
sub
stos
dec
mov
stos
je
int
mov
xorb
scas
inc
roll
sbb
jge
adc
cli
xchg
out
jnp
jno
shrb
cmpsl
sub
mov
jmp
mov
inc
js
ret
jns
out
jl
ja
rcr
and
ss
jmp
add
add
mov
jne
in
adc
in
pushf
xor
xor
iret
ss
cs
push
adc
add
and
clc
mov
push
push
in
les
adc
mul
sbb
mov
out
fisubrs
cmp
dec
loop
in
in
mov
pushf
lds
sbb
or
jl
incl
aad
mov
sub
push
jp
aam
mov
push
adc
jge
aad
gs
ss
ret
add
lock
ljmp
rorb
testl
aas
add
pop
mov
icebp
xor
loope
or
nop
popf
xor
inc
jl
mov
loopne
shll
and
add
pop
mov
xchg
addr16
pop
test
jnp
sbb
push
loop
jp
pop
call
loopne
add
int
cli
and
fs
mov
or
outsl
jge
xor
pop
and
faddl
pop
push
stc
mov
bound
xor
repnz
mov
fistps
fldt
lahf
in
in
pop
adc
sbb
jo
xor
daa
and
shll
mov
sbb
rclb
cmpsl
fcmove
clc
pop
adc
mov
arpl
inc
push
idivb
jns
push
icebp
call
xchg
icebp
jle
dec
mov
pop
push
cmpsl
inc
ja
pop
mov
jb
cmp
jae
scas
cmpsb
inc
sub
jb
inc
adc
dec
inc
fisubrs
xchg
inc
xor
faddp
ret
sub
leave
outsb
aaa
movsl
arpl
jecxz
shl
aaa
sti
pop
dec
xchg
mov
sub
or
and
push
and
adc
adc
inc
push
lods
nop
xchg
adc
jmp
repnz
and
pop
fildl
pop
dec
dec
sub
adcb
dec
imul
test
int
ds
imul
pop
xchg
jo
jne
icebp
popa
ja
cmpsl
mov
lock
mov
mov
push
cmp
imul
popl
ret
lret
nop
and
push
pop
mov
in
push
mov
jne
aad
mov
pop
pop
sub
mov
sub
cli
sbb
into
test
sbb
insb
push
imul
cmc
shlb
addb
loopne
xchg
pushf
repz
test
cmp
mov
jae
lods
mov
rcll
and
mov
subb
nop
xchg
or
dec
push
xchg
rcrl
xchg
aad
icebp
cmpsl
xchg
cld
push
test
xchg
lahf
shl
fucomip
sti
hlt
shrl
push
cmpsl
filds
xor
dec
sub
cli
lret
inc
pusha
and
mov
lret
out
loopne
in
jne
xchg
insb
or
sahf
and
fildll
sbb
sbb
int
inc
or
sahf
in
gs
sbb
sub
cs
out
icebp
cmp
push
iret
cmc
add
xor
or
nop
daa
dec
xlat
hlt
outsl
mov
xchg
mov
enter
jb
jecxz
rcll
scas
and
dec
xchg
pop
adcb
outsl
pop
testb
push
or
xchg
movsl
pop
adc
mov
dec
mov
mov
jg
xchg
movsl
pop
adc
push
jne
mov
lcall
adc
cmp
xor
fcoms
sub
adc
out
or
movsl
and
aaa
add
mov
scas
scas
movsb
inc
lret
jne
mov
and
pop
es
sub
sbb
jmp
push
les
push
test
call
push
jg
loope
jge
pushf
cmp
push
cmp
loope,pn
lret
xchg
pop
sub
mov
xchg
xchg
fwait
jo
cld
js
xor
mov
push
cmp
inc
adc
jle
test
inc
sub
add
add
hlt
jno
loopne
fs
popa
and
cmp
fdivr
adc
mov
jae
movsb
jo
sti
inc
testb
push
push
dec
cmp
mov
mov
jl
jno
out
stos
sbbb
leave
in
es
and
mov
lds
pop
fcmovnb
cmp
notb
xchg
push
out
inc
add
push
mov
fdivrp
sahf
icebp
xchg
pop
stc
jnp
ret
jnp
jno
mov
imulb
hlt
sub
movsb
lock
mov
jns
mov
shrl
in
fsubr
xor
in
repz
mov
out
fcoms
jmp
lcall
into
push
out
frstor
cmp
leave
out
popa
jnp
mov
or
jle
mov
scas
inc
fists
jmp
sbb
inc
add
mov
iret
stos
sti
fwait
pop
mov
loope
inc
dec
xchg
aas
dec
push
pop
addl
mov
pop
inc
insl
xchg
dec
sub
leave
jns
pop
in
arpl
out
in
sub
jg
or
imul
mov
mov
pop
std
mov
pop
sub
cmp
inc
fnstenv
ficomps
add
xlat
lcall
push
int
int
mov
scas
shll
repnz
cltd
inc
fs
xchg
jl
ljmp
fwait
es
test
sub
inc
cmp
mov
ss
in
sub
stos
out
lods
nop
pop
cs
ljmp
out
sbb
dec
sub
sbb
pop
rcrb
loope
mov
inc
int
das
sbb
xchg
add
pop
out
sbb
stos
sbb
psrlw
ret
stc
iret
or
jl
shr
call
out
mov
cmpsl
sub
mov
imul
negl
je
popf
cmpsl
jnp
bound
mov
insb
add
sbb
jge
sbb
cltd
outsl
and
sbb
test
dec
pop
mov
push
dec
xchg
adcb
pop
jnp
ret
js
daa
cwtl
push
push
std
ficomps
push
jl
or
in
faddl
daa
xor
test
test
pop
xor
fildl
fistl
bound
pop
cmp
leave
pop
aad
push
mov
mov
psubusb
mov
jg
xor
jb
push
test
inc
pop
frstor
ficoms
or
dec
sbbl
cmp
cltd
cmpb
rol
mov
jb
push
iret
push
int3
jmp
es
cmpsb
ficomps
jle
and
xchg
push
sub
xor
mov
sbb
movsb
repnz
jge
ljmp
fcmovnb
daa
mov
cli
inc
insb
subl
push
roll
ret
popf
dec
mov
aas
clc
popa
pop
mov
lret
adc
mov
ret
xchg
xchg
mov
mov
rolb
dec
adc
lcall
sub
loope
lods
pop
mov
out
pop
imul
ret
cltd
fsubrp
cmp
jge
push
or
pause
insb
popf
bound
adc
fs
sbb
loope
cltd
fistps
fnstsw
adc
std
das
pop
mov
push
insl
dec
and
add
insb
enter
mov
adc
mov
jae
dec
in
or
sbb
push
arpl
mov
dec
xor
sahf
loope
sub
jp
mov
sbbl
lret
sbb
flds
xchg
test
xor
mov
sub
repz
out
xchg
jmp
aam
ja
je
xchg
pop
adc
mov
dec
aas
xor
or
add
rcll
push
xlat
and
inc
jge
mov
fidivrl
addr16
fcmovne
ljmp
dec
sbb
push
push
pop
out
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
call
call
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
int3
add
add
add
add
add
add
add
add
jb,pn
popa
je
add
sub
add
loopne
add
or
add
or
add
add
cs
je
add
add
add
add
jo
add
adc
add
add
je,pn
js
add
add
in
add
add
add
add
add
add
jb,pn
popa
je
add
test
add
add
add
add
add
inc
add
loopne
fs
je
add
add
add
add
add
add
add
inc
add
loopne
add
dec
dec
dec
inc
inc
dec
pop
xor
add
add
pusha
call
and
jecxz
es
rorl
idiv
xor
mov
adcl
popa
shll
add
sbb
in
movsb
adc
jno
mov
sbb
outsl
fs
or
add
sbb
add
jmp
call
scas
aad
add
add
imul
push
xchg
or
dec
sbb
roll
cmp
adc
sub
aas
repz
addb
xor
jmp
mov
mov
xor
pop
lea
sahf
rclb
pop
jno
int
inc
mov
jl
out
push
and
mov
xor
scas
and
dec
repz
mov
test
cltd
std
shrb
add
add
lea
mov
sub
lahf
sti
mov
scas
add
fmull
fwait
pop
scas
shr
test
lea
push
rcrb
mov
mov
mov
lahf
sub
xchg
pop
push
stc
jecxz
popf
je
push
ljmp
jo
adc
jg
movsl
lds
push
clc
shll
and
hlt
loope
repz
xor
mov
lret
fucomi
lret
or
mov
int
xchg
test
subb
adc
out
out
shlb
xlat
and
lcall
push
mov
cwtl
xor
push
push
mov
mov
cmpsl
int3
aaa
xchg
test
jae
mov
and
arpl
das
jne
ja
or
andb
add
loopne
add
call
or
mov
inc
icebp
push
or
xchg
push
jo
hlt
jae
pop
xchg
popf
loopne
ret
shll
xor
push
mov
js
dec
sub
fnstsw
add
std
rcr
cmp
cmpb
pop
in
cltd
jnp
jbe
inc
push
jecxz
jbe
pop
addr16
push
dec
mov
or
cmp
lret
imul
test
or
stc
scas
repz
and
js
pop
jno
pextrw
xchg
xchg
adc
mov
mov
mov
aad
jbe
jne
mov
push
push
sbb
xchg
push
xchg
sahf
adc
push
aad
clc
fcomi
or
mov
aad
or
cmp
push
dec
cmp
cmpsb
xor
js
mov
lahf
push
stos
dec
repz
inc
adc
movsl
pusha
mov
adc
or
ds
jl
ret
imull
mov
pop
test
cmpsl
push
jae
aas
jns
pop
and
mov
stc
pop
mov
cmp
add
push
in
adc
mov
push
out
rcr
xor
mov
push
lods
mov
push
nop
jb
loope
mov
insl
ret
adc
xlat
and
xchg
xchg
insl
xchg
xchg
repnz
mov
clc
or
mov
pop
inc
mov
pushf
dec
outsb
push
or
jle
jmp
pop
push
cmpsb
lods
mov
in
loop
adc
int
lods
hlt
jecxz
or
xor
sbb
xor
ja
repz
pop
push
inc
outsb
lds
add
mov
xchg
jbe
jg
insb
dec
lret
popf
jbe
sub
add
push
jge
popf
rcll
xchg
sbb
inc
daa
mov
xlat
int
jb
dec
sbb
fs
mov
sub
in
adc
insl
adc
mov
xchg
imul
pop
sti
inc
es
push
arpl
lods
push
pop
sub
mov
dec
adc
pop
das
or
mov
movsl
popf
data16
mov
push
clc
loopne
inc
call
lret
add
int
xchg
pop
fcompl
cmp
cmp
call
mov
loope
mov
xchg
hlt
mov
pop
negl
testb
dec
mov
jmp
in
sbb
jp
jge
fs
mov
mov
and
aad
fstps
push
in
pop
xchg
xchg
xchg
fimuls
popf
sub
les
xchg
xor
pop
idiv
jle
cmp
or
lret
xor
test
es
popa
aad
fwait
out
xor
push
popl
mov
loope
cmc
cmp
in
or
roll
loopne
jl
mov
mov
test
mov
and
add
xchg
movsb
daa
mov
lods
jo
adc
xor
or
rcl
lods
xchg
add
fmulp
test
in
int
leave
lret
vfrczpd
push
mov
inc
roll
sarb
xor
call
ret
loop
dec
js
push
sbb
divb
bound
cld
lds
cmp
inc
xchg
aaa
into
mov
movsb
adc
push
sub
jae
jae
lea
fldl
xchg
ret
cwtl
into
ret
mov
jno
lock
sub
scas
gs
push
or
xchg
dec
jb
out
mov
dec
push
mov
in
les
jns
popf
outsb
inc
std
add
fs
stos
fstps
cmp
mov
lahf
adc
jbe
jecxz
push
add
pusha
jbe
fdiv
outsl
sub
mov
push
iret
mov
js
sbb
das
scas
aam
lods
in
mov
fwait
cmp
aad
js
add
push
aad
jnp
and
hlt
xchg
inc
xchg
mov
mov
push
es
stos
rorb
xchg
outsl
mov
lcall
cmp
and
cmp
push
mov
pop
mov
imul
push
push
add
test
nopl
test
outsl
stc
aas
mov
leave
filds
inc
js
out
mov
rorl
in
lahf
pop
push
jecxz
add
xchg
ds
inc
or
xchg
inc
adc
cmp
dec
or
sahf
jle
mov
adcb
loopne
sti
mov
arpl
es
cmc
iret
in
rclb
les
xlat
mov
ficoms
cmp
into
lcall
je
dec
cmpsb
mov
adc
es
in
xor
xor
add
sub
mov
jge
inc
nop
cmp
inc
inc
call
or
aaa
icebp
pop
dec
dec
dec
mov
dec
push
xor
adc
xchg
lds
and
in
sub
dec
pop
icebp
sbbl
dec
cmc
outsb
pop
push
adc
xor
pop
mov
sti
inc
adc
cld
mov
loope
cmp
pushf
xor
rorl
dec
stos
mov
jl
test
test
push
adc
loop
xchg
jmp
call
and
mov
cmpsb
lea
mov
mov
in
mov
and
push
data16
idiv
dec
inc
mov
sub
data16
iret
push
in
loope
push
scas
ret
aas
hlt
popf
out
sbb
testb
ds
mov
insb
pop
jb
jle
fadds
ja
mov
inc
and
pop
cltd
addr16
jmp
std
repnz
out
mov
sub
sbb
in
sti
lret
aas
fimuls
sbb
mov
xor
xor
movsl
ret
dec
mov
xchg
sub
mov
imul
adc
jle
lods
xchg
adc
and
inc
lret
loopne
sbb
cmp
je
mov
inc
and
and
and
adc
lods
test
insb
push
or
lret
movsb
dec
ds
mov
lods
push
inc
movsl
loop
inc
sbb
stos
adc
test
pop
mov
and
or
in
or
jae
jo
add
or
ror
ljmp
or
ja
in
mov
mov
inc
movb
mov
leave
fsub
scas
push
out
loop
cmc
push
orb
ret
jo
mov
jnp
stos
adc
movsb
jle
cmc
adc
js
and
movsl
addr16
push
sub
shrb
mov
test
mov
mov
and
and
outsl
inc
jp
ret
push
jl
mov
push
xchg
sub
jb
add
lcall
out
mov
int3
mov
repnz
test
es
popf
and
adc
adc
xchg
push
cs
and
lret
vcvtps2dq
ljmp
leave
add
das
js
jle
pop
or
rol
fidivs
xchg
add
adc
out
mov
mov
pop
int3
pop
mov
xchg
addr16
and
icebp
popf
sub
jg
sbb
icebp
insb
repnz
inc
call
hlt
scas
jle
data16
out
dec
lret
cmp
cld
cwtl
jecxz
iret
test
scas
mov
xor
mov
nop
or
icebp
gs
mov
and
mov
popa
icebp
mov
imul
subb
cmp
adc
fwait
jl
push
sub
sub
adc
pop
je
cld
xor
push
cli
xchg
xchg
cmp
mov
je
xor
aad
add
daa
loope
jg
in
stc
sub
mov
push
data16
mov
push
jb
cmpb
test
mov
sbb
mov
jl
mov
mov
mov
xchg
and
dec
sub
sub
cmp
sbb
lock
cli
xchg
loop
pop
mov
out
push
in
cmp
dec
or
or
test
push
dec
mov
mov
out
add
daa
fnstsw
clc
sbb
xor
push
push
push
sbb
mov
adc
mov
and
xor
lea
mov
shl
add
mov
fwait
jmp
lret
hlt
iret
cmpsb
fimuls
cmc
xlat
mov
add
pop
inc
xchg
out
sub
push
pop
daa
aas
add
faddp
in
mov
add
jns
insl
ss
jecxz
sbb
jp
lret
mov
divb
mov
repz
and
push
repnz
jl
push
mov
adcb
jp
popa
add
sti
or
stos
inc
cmpsl
stc
jmp
movsb
frstor
fimuls
scas
arpl
cmp
popf
outsl
push
das
mov
mov
sub
sarb
mov
sub
out
mov
pop
popa
test
dec
push
dec
mov
enter
test
cltd
test
pop
ss
shrl
clc
xchg
push
pop
shlb
or
adcl
and
cmpsb
adc
aam
xor
and
pushf
cmp
mov
pop
mov
jl
es
dec
fstps
hlt
fsubrs
add
mov
dec
jbe
jle
pop
subb
xchg
sub
outsb
int3
sbb
mov
cmpsl
ds
mov
sub
bnd
arpl
fs
xlat
mov
or
adcb
mov
and
mov
lahf
sbb
pop
cmp
jp
add
mov
stos
out
andl
jge
test
ljmp
loop
fstl
cmp
mov
fldt
pusha
xchg
mov
imul
inc
mov
not
data16
mov
jb
cld
fnstcw
dec
ficompl
leave
lret
popa
mov
xchg
js
jmp
inc
ss
pushf
cwtl
rorl
push
test
sti
mov
clc
lahf
and
pop
push
push
addr16
pop
xchg
adcb
cmp
pushl
iret
jmp
sub
sti
mov
push
outsl
pushl
movsb
loope
movsb
loop
fistl
sbbb
mov
pushw
xchg
shlb
popf
int
inc
adc
mov
sub
addr16
mov
sub
popf
lret
push
lds
sbb
or
aaa
daa
addr16
loop
xchg
cmc
lahf
mov
lods
inc
call
push
or
or
mov
data16
divb
gs
gs
jp
mov
push
loope
dec
cmp
inc
fisttpll
movsb
lret
cltd
and
xchg
xor
jle
lds
or
mov
push
out
lock
lret
outsb
frstor
nop
inc
lock
ljmp
out
cmc
dec
les
enter
lods
jle
jae
sbb
pop
icebp
cmp
faddl
int
fisttps
mov
pop
jle
sbb
dec
aad
cli
mov
inc
es
mov
sub
mov
push
adc
sbb
xor
scas
imul
pop
xchg
icebp
test
out
and
xchg
jge
pop
mov
push
inc
out
fcmovnb
sub
mov
or
fsubr
ss
dec
xor
pushw
lods
mov
pop
loope
daa
movsl
hlt
mov
pop
jbe
mov
mov
movsb
cmp
mov
in
sahf
mov
ja
xor
lods
pop
loope
loop
roll
cmp
cmc
push
aad
popa
test
lcall
imul
ret
ljmp
cmp
inc
fucom
pushf
ds
and
mov
push
add
jmp
and
jne
loop
push
es
mov
mov
imull
jne,pn
rorl
or
out
push
in
or
cmp
sub
shll
xor
jecxz
mov
fcomp
lds
leave
adc
pop
inc
stc
stos
pop
out
mov
push
out
dec
push
mov
push
dec
cmc
mov
sbb
int3
cltd
xchg
fdiv
out
sub
and
inc
adc
mov
arpl
leave
pop
cs
mov
hlt
gs
mov
push
adc
cmp
pop
sbb
bound
dec
sbb
inc
lret
shrb
adc
jge
out
addb
pop
gs
mov
out
fsubrl
and
imul
mov
sub
mov
test
lret
cmpsb
or
test
les
inc
inc
sbb
ljmp
pop
sub
dec
stc
push
out
add
mov
in
sub
mov
mov
loop
inc
test
mov
dec
inc
hlt
mov
sub
loopne
inc
arpl
pop
pop
mov
adc
orb
push
sarb
setp
push
pop
mov
ret
pusha
push
and
in
jg
loopne
mov
add
jbe
adc
iret
enter
mov
in
js
pusha
cwtl
cli
lret
loopne
pop
xchg
out
mov
pop
pop
gs
lods
jns
leave
xor
mov
les
and
fidivrs
jp
jo
and
test
mov
mul
lret
das
xor
stos
push
inc
inc
adc
rcl
push
mov
jp
xor
dec
es
test
daa
sbb
mov
jg
in
vandnpd
jg
shrb
lahf
lahf
xchg
jle
mov
outsb
xlat
cs
lahf
jb
stos
mov
shll
xchg
out
mov
and
xchg
lock
mov
cmp
xchg
cmp
push
dec
shr
scas
sub
mul
divb
gs
push
sahf
lahf
test
je
insb
out
jo
cltd
adc
jp
cmpsl
pop
xor
adc
mov
std
insl
dec
imul
adc
imul
test
cltd
mov
mov
mov
movsl
ret
xchg
push
dec
cwtl
nop
fidivrs
and
inc
insb
mov
lahf
js
xchg
cmp
adc
stos
jecxz
lds
pushf
lea
pop
pop
mov
pop
das
mov
pop
push
fwait
mov
into
mov
lcall
ret
cmc
jg
add
push
andb
mov
add
ret
hlt
jle
mov
jg
dec
pop
adc
push
mov
or
xchg
pop
test
pusha
cld
inc
push
int
cmp
mov
js
sub
into
insl
pop
sbb
sahf
cmp
sbb
cmp
std
outsl
pop
adc
dec
cltd
mov
test
stos
test
add
dec
enter
cmp
std
jg
or
push
in
idivb
into
and
inc
or
rclb
repnz
jne
scas
mov
cmc
fchs
mov
and
andb
movsb
dec
jae
and
push
pop
fldt
popa
xchg
mov
cmpsb
mov
push
push
subb
jne
inc
fstl
loop
arpl
rorl
cmpb
jge
arpl
cwtl
jge
aam
mov
push
inc
sbb
push
jo
add
cmp
sarb
jge
sbb
mov
sbb
dec
test
xor
sahf
sub
mov
fldenv
and
mov
jne
jp
jbe
xlat
js
mov
push
fsubrl
push
mov
pop
jns
jp
scas
scas
addr16
rorb
lahf
out
push
push
pop
sub
or
gs
insb
iret
sub
jle
jg
xchg
dec
inc
xor
or
pop
cmp
in
push
pop
and
stos
cmpsb
sub
je
clc
andb
incb
scas
lahf
movsl
jecxz
push
sbb
pop
in
lahf
mov
mov
mov
je
repz
rcl
cmpsl
in
push
dec
fsub
add
cmp
xor
inc
filds
and
insb
or
gs
lods
jb
mov
hlt
das
inc
xor
stos
push
xor
xchg
int
cmp
mov
adcb
ret
fiaddl
lds
fdivl
loopne
mov
push
lds
pop
or
push
push
xchg
stc
sar
mul
adc
lods
mov
aam
loopne
cmpsb
bound
mov
jbe
fisubl
mov
clc
or
in
fsubrs
mov
icebp
push
mov
cmp
lret
daa
jnp
and
xorb
pop
rcrl
fsub
cltd
fnstsw
pop
and
shrl
adc
in
in
and
test
mov
xor
mov
push
scas
test
imul
insb
mov
fsubr
add
xchg
mov
mov
in
jmp
ds
lret
mov
lret
jns
mov
gs
xlat
nop
adc
inc
add
leave
push
xor
pop
push
xchg
xor
jbe
inc
cmp
int
adc
mov
pop
sbb
rcll
jo
fwait
adc
repz
add
xor
pop
scas
mov
cmp
rolb
lcall
and
pop
pop
pop
test
dec
push
mov
adc
loopne
dec
inc
adc
test
xor
aam
push
adc
data16
mov
scas
add
cmc
or
cwtl
sbb
shlb
xchg
sbb
icebp
cmp
jb
mov
dec
fbstp
sbb
jbe
cmp
ret
xchg
xor
out
push
sub
into
sbb
jae
out
sbb
arpl
adc
stos
mov
js
mov
int
cmp
psubw
cltd
and
fcomps
ret
insb
fmull
mov
loope
xor
push
mov
pop
xchg
dec
cmpsl
jae
dec
mov
or
ret
pop
xchg
pop
mov
dec
jmp
shufps
push
ljmp
sbb
mov
push
adc
jb
pcmpeqb
enter
and
push
xchg
jo
push
mov
mov
shl
icebp
mov
sub
fucomi
es
xchg
sbb
sub
xor
arpl
lret
push
ja
jno
ret
clc
dec
inc
adc
adc
jg
fisttps
out
pop
dec
mov
aam
mov
mov
xlat
cmpsb
lds
mov
jmp
cmp
push
lret
out
mov
std
fisttpll
call
fidivrl
shll
sti
mov
out
insl
add
outsb
stos
add
mov
adc
mov
cmpsb
jmp
insb
push
jb
adc
shrl
inc
loopne
insb
add
sbb
mov
out
push
fsubs
mov
sbb
popa
ja
sub
pop
cwtl
addr16
fdivrp
and
lods
sti
imul
shl
mov
scas
out
add
sub
ror
mov
xor
mov
pop
sbb
mov
aas
ret
imul
mov
sub
sub
dec
sahf
mov
por
enter
dec
aaa
outsb
mov
int3
jg
push
ljmp
xchg
std
mov
sti
in
xchg
or
stos
jnp
sub
or
dec
pmaxub
jno
ds
int3
test
or
or
dec
movsb
sbb
cmpsb
ljmp
xor
imul
aam
and
mov
pop
add
jbe
enter
cmp
mov
or
subb
shl
sbb
xor
jge
sub
jg
daa
dec
jns
mov
push
aaa
pop
xchg
push
addr16
adc
in
ror
push
inc
cli
sbb
push
mov
cmp
test
pop
sbb
xor
push
push
daa
int
xchg
aas
cmpb
test
mov
outsb
mov
push
xchg
push
push
xchg
clc
js
xor
mov
addr16
pop
shll
push
das
jns
xor
sub
push
ret
inc
into
arpl
movq
aad
cmc
mov
pop
adc
ficomps
insb
inc
and
aaa
notb
out
lods
stos
xchg
push
test
sub
adc
cs
adc
mov
inc
sti
loope
mov
mov
jmp
movsb
adc
xchg
push
xor
loope
inc
fimull
xchg
push
lods
lcall
insl
cmpsb
mov
xrelease
and
mov
mov
sbb
or
addl
call
cmp
xchg
les
lock
pop
mov
test
int
shl
pop
add
test
sbb
push
push
xchg
xchg
nop
xor
push
push
fisttpll
adc
imul
inc
icebp
mov
addr16
cmp
pop
xorl
or
arpl
stc
movsl
cmpsl
push
mov
add
jg
inc
rcll
hlt
fnstsw
pop
fwait
jmp
jb
fwait
rcrb
jl
fsubrl
out
divl
pop
xchg
dec
js
push
loope
cmp
sbb
aad
js
nop
jne
adc
test
inc
push
cmp
sub
sbb
or
mov
xor
jne
push
sbb
cmp
dec
push
fdivp
cmp
pop
int3
mov
andl
pop
imul
testl
stc
fcomi
push
xor
mov
negl
js
mov
xchg
adc
fidivl
push
popf
pop
mov
or
sub
mov
scas
push
push
mov
hlt
int
mov
out
dec
xchg
cmp
sbb
je
setge
andb
sbb
pop
int
call
push
outsb
adc
inc
sbb
sub
test
daa
loop
adc
adc
cmp
push
insb
fbstp
xor
js
mov
cmp
loop
fidivl
dec
dec
or
arpl
js
repnz
mov
pop
and
adc
fmul
fwait
je
push
jne
inc
insl
fstpl
mov
sar
mov
add
dec
pop
dec
cwtl
xchg
test
data16
inc
jmp
and
rolb
rorb
fisubrl
repz
mov
aad
sub
fdivs
sub
xor
fimull
pop
jle
cmp
mov
sub
and
xchg
inc
cltd
and
inc
dec
shr
adc
andl
int
test
pop
test
in
mov
adc
sub
icebp
mov
adc
dec
mov
jo
dec
dec
and
pop
rol
div
clc
xor
hlt
sub
insb
pop
aas
jmp
shll
mov
outsb
sub
add
push
cld
movsl
punpckhdq
mov
or
scas
das
imul
loopne
mov
nop
inc
aam
cmp
mov
mov
mov
out
cld
fistpl
shlb
dec
icebp
or
mov
imul
xchg
icebp
fwait
jnp
int3
inc
and
out
pop
sbb
sbb
mov
sub
out
stc
les
push
mov
out
dec
andb
or
cmc
pop
add
push
inc
sti
hlt
test
arpl
dec
ret
jecxz
inc
inc
cmp
mov
sbb
enter
sub
inc
inc
jno
es
clc
add
cld
mov
mov
stc
aad
fidivrl
stos
inc
imul
jecxz
mov
jmp
shll
add
push
lods
jg
into
es
pop
fcmovbe
or
in
jae
pop
gs
adc
lods
pop
xchg
leave
negl
cmp
sub
lods
pop
pop
mov
loope
movb
cld
pop
xchg
jb
ret
arpl
xor
int3
push
in
inc
jecxz
lret
outsb
out
in
fwait
ljmp
sbb
pop
add
scas
or
jle
inc
mov
add
insl
push
jno
insl
je
push
jg
or
push
icebp
out
add
lret
jmp
xlat
push
cmpsb
shrl
fiaddl
jb
in
scas
mov
mov
dec
fs
push
push
bnd
jge
and
js
xchg
aas
cmp
and
shrb
sub
jp
lret
cmpsl
push
add
rcll
ret
cmc
jb
cmp
negb
fwait
jnp
daa
mov
repz
movsl
xorb
xchg
jp
stc
scas
jne
mov
and
ljmp
out
out
inc
or
repz
out
fucomip
dec
add
hlt
clc
fisttpl
cld
push
push
cmp
lcall
inc
loope
add
call
test
outsb
std
movsl
sbb
nop
in
icebp
inc
xor
pop
popa
mov
movsb
ljmp
sbb
jge
cmc
sub
es
lods
ljmp
fcmovne
xor
sarl
cmp
jns
sbb
pop
cmp
shl
mov
cmc
dec
pushf
iret
sub
fisubs
les
mov
sub
ja
stos
cltd
outsb
sub
and
and
aad
insl
mov
stos
xchg
cmp
andb
cmc
or
mov
or
cmp
mov
insw
js
dec
mov
outsb
std
pushf
or
push
mov
cmp
fwait
shl
pop
popa
or
test
imull
xchg
sbb
repz
dec
gs
xchg
outsl
dec
and
imul
das
jl
fdivrs
fsubrs
mov
jl
inc
aaa
ret
shlb
cmp
cmp
daa
pmaxub
mov
popf
xchg
adc
jmp
fdivp
jb
repnz
not
lock
inc
and
out
push
mov
or
adcb
std
push
in
loop
sbb
ret
mov
xchg
stc
jle
inc
mov
sahf
cs
ret
adc
test
icebp
repnz
cmp
cwtl
adc
mov
or
bound
ljmp
ss
jl
js
push
cmp
mov
mov
cli
cli
xchg
xchg
mov
das
ret
cmpsl
cmp
add
lcall
ljmp
arpl
clc
imulb
adc
cmp
popf
sub
pop
int
lcall
mov
in
xchg
sbb
push
sbb
std
xchg
les
mov
mov
cltd
push
jecxz
push
xchg
insb
mov
sbb
mov
cmpsl
dec
shl
cltd
aaa
lods
movsb
xor
pop
es
stos
pop
addr16
rcr
in
mov
sbb
push
push
insb
std
int3
test
repnz
int
adc
dec
jle
mov
push
xchg
mov
aaa
xchg
js
pusha
cwtl
mov
aad
inc
push
ja
pop
int
push
and
xorl
ljmp
lea
sub
push
mov
sar
jns,pn
jp
lods
xchg
sbb
mov
sub
xchg
mov
adc
rcr
pop
sub
mov
ret
dec
sub
pop
mov
push
mov
jb
out
jg
mov
ds
leave
pop
ss
sbb
test
in
out
or
mov
adc
xor
lds
sbb
fld
xor
lret
lods
push
loopne
adc
cmp
mov
xchg
lea
loope
pop
es
cmp
aam
imul
inc
dec
cmp
jbe
add
les
cli
sub
xor
orl
xor
xchg
pop
dec
test
shl
out
div
enter
mov
in
cwtl
imul
or
insb
pop
push
inc
sti
mov
or
insl
sbb
cmpsb
enter
and
inc
sar
sahf
outsl
push
sti
push
imul
mov
sbb
into
sti
sbb
mov
inc
pop
stos
mov
hlt
int3
mov
mov
fildll
push
jnp
sub
or
push
jge
daa
les
xchg
pop
add
mov
pop
aam
dec
enter
pop
pop
dec
jl
xor
and
fs
insb
fldcw
jo
mov
inc
push
jmp
popf
and
cmp
push
jns
sahf
jg
adc
mov
mov
xor
push
leave
jns
push
mov
push
out
pop
pop
cmpsb
ret
mov
sahf
fsubs
cltd
fidivl
stos
jle
jnp
insb
mov
dec
and
imul
inc
test
fstps
add
xor
adc
test
xchg
fwait
jns
aas
cmp
rcll
ds
testb
push
sub
pop
adcl
fbstp
pushf
mov
cwtl
dec
mov
and
mov
cmp
ficomps
shlb
int
jle
sub
xchg
insl
push
fs
iret
pop
scas
push
in
jb
adc
sbb
mov
movsl
in
int3
or
push
dec
pop
inc
cs
pop
xlat
loopne
xchg
aas
mov
std
xor
sbb
or
mov
loope
popa
movsl
push
pop
xor
pop
mov
mov
sub
sahf
add
rolb
shll
sub
mov
stos
lahf
arpl
sbbl
lods
jg
nop
xchg
aaa
adc
mov
adc
pop
xchg
mov
xor
inc
mov
sub
pop
sub
adc
or
iret
outsb
scas
ret
int3
mov
rolb
testl
adc
add
and
jbe
outsl
cmp
xor
fdivrs
dec
enter
sbb
and
mov
xchg
pop
mov
jno
popf
in
shlb
imul
sbb
mov
dec
mov
sbb
movsb
mov
sbb
in
nop
mov
lock
xchg
inc
cld
cld
xchg
fldl2e
lret
cmp
rclb
mov
ret
lea
lret
cltd
push
sti
nop
imul
outsl
jecxz
add
jb
sub
mov
cmpl
add
push
jno
hlt
shll
xor
pop
popf
out
sbb
js
cwtl
push
pop
add
or
mov
cmpsb
jo
sub
mov
push
mov
cld
rolb
aas
and
cwtl
imul
dec
popf
mov
loopne
xor
cmp
jmp
pop
aaa
or
ja
cld
xor
rclb
lahf
xchg
pop
into
mov
insl
out
clc
pop
andb
pop
nop
sahf
es
scas
add
pop
push
jbe
add
clc
or
fstpt
out
inc
mov
out
push
notl
mov
inc
aad
cmpl
fs
ret
and
adc
push
imul
adc
pop
insb
mov
pop
mov
sbb
jne
pop
popf
pop
jo
dec
add
jns
repnz
outsb
lock
movb
shl
mov
test
add
test
and
xchg
xor
cwtl
mov
fsts
cmp
adc
lret
push
inc
in
xchg
cmp
pop
pop
push
insb
jle
lods
add
int
fsubrp
scas
insl
scas
pop
inc
jbe
in
out
aad
push
dec
shlb
inc
mov
lods
not
pop
repz
inc
pop
jb
int
insl
push
mov
stos
sub
mov
loope
jmp
xor
std
xchg
aaa
jle
adc
sub
out
mov
loope
aas
sbb
insb
mov
mov
xchg
mov
push
ret
add
addr16
mov
int
cs
or
popa
andb
cmp
or
outsb
movsl
aas
add
push
insb
mov
jnp
into
sbb
rcr
clc
push
stos
lods
push
in
xchg
imul
dec
fsubrl
addl
scas
orl
bound
xchg
xlat
sti
insb
sbb
pop
jbe
sub
pusha
sub
add
add
cmp
in
push
lods
js
pop
sbb
into
shlb
mov
addr16
stc
xor
lods
pop
xchg
sbb
xlat
repz
loop
or
pop
aaa
fistl
cwtl
lods
loop
or
mov
inc
mov
outsl
arpl
aas
add
cmp
mov
shrb
adc
dec
push
daa
mov
dec
xchg
pop
lahf
stc
xchg
dec
out
pop
jae
test
aas
inc
xor
movsl
fnstsw
push
pop
xor
xchg
aam
sbbb
mov
jmp
cltd
sbb
clc
dec
sub
jo
sbb
xor
pushf
ret
in
out
lea
ret
insl
jg
add
stc
xchg
inc
mov
shrl
push
fwait
cmp
xchg
mov
mov
mov
jecxz
outsb
aas
pop
bound
jmp
mov
mov
mov
mov
mov
outsb
ffree
jae
and
xlat
inc
inc
cmp
iret
decb
mov
and
sub
gs
push
and
movsl
mov
xchg
jo
dec
xchg
test
jecxz
andl
arpl
imul
pop
adc
mov
cwtl
aad
andb
mov
insb
in
mov
pop
scas
xor
sub
sub
mov
sub
fdivrs
xor
sub
divb
shll
out
jmp
jecxz
push
test
loop
std
jae
daa
cmp
addr16
shll
adc
jp
aas
fwait
cmp
lahf
mov
dec
mov
mov
cmp
add
insl
movsb
loop
leave
xlat
xlat
inc
daa
dec
inc
mov
mov
sarl
inc
out
cmpsl
fucom
cmp
jle
xor
xchg
cmp
lds
or
mov
sbb
mov
cmp
add
negb
popf
test
outsb
ret
dec
add
adc
dec
inc
fiadds
xchg
add
pop
subl
xchg
aas
scas
xchg
aad
xchg
or
repz
jge
xchg
push
push
ds
outsl
xor
mov
pop
lods
sbb
push
xor
add
mov
adc
add
cmc
inc
fs
shrl
add
inc
add
xchg
aam
jge
cmpsl
or
daa
jo
fistpl
adc
fadd
pushf
fchs
mov
push
sbb
push
dec
popl
mov
mov
rclb
jmp
push
xor
jne
mov
xchg
fcoml
fcmovu
jle
xor
lds
out
jle
or
mov
or
je
mov
fildl
adc
adc
stc
mov
enter
sbb
stos
xchg
sbb
jp
sub
testl
push
jbe
sbb
xchg
fldcw
adc
stos
add
push
enter
dec
lret
push
xchg
pop
xchg
dec
cli
push
add
clc
push
das
inc
jb
xchg
adc
in
loop
push
iret
lock
jl
mov
std
in
mov
mov
lods
pop
mov
jl
push
push
bswap
jl
sarl
repnz
repnz
sbb
nop
clc
and
sahf
repnz
leave
mov
je
xchg
mov
cli
push
ja
xor
int
add
fcoml
lret
xchg
mov
aam
addb
xchg
rdmsr
ret
nop
lcall
add
mov
popf
aad
ss
loope
cwtl
mov
fadds
lods
mull
mov
mov
les
and
ret
adc
mov
add
add
dec
ucomiss
loope
lods
cmp
xchg
xor
mov
lret
jno
notl
ss
push
add
sub
jl
mov
pop
mov
sub
nop
imul
xchg
jg
cmpsb
inc
xor
jl
les
ror
jae
mov
mov
stos
xchg
inc
out
push
push
lahf
jnp
roll
cmp
aad
loopne
xchg
fistps
dec
shl
scas
movsb
add
lret
cmp
adc
add
fadd
call
rclb
mov
data16
loop
std
pop
pop
xchg
int3
cli
push
fmul
scas
loopne
xor
mov
adc
imul
mov
arpl
cmp
mov
fildll
mov
cmp
cwtl
int3
scas
shlb
push
inc
imul
call
lcall
pop
fimuls
jle
faddl
push
xor
es
adc
ret
pop
ljmp
mov
lods
ds
sub
test
sbb
les
loop
dec
das
mov
inc
adc
sub
cmp
lods
test
add
orb
sub
cmp
ds
and
inc
jmp
adc
mov
shll
push
mov
dec
cmp
dec
or
ret
out
fists
adc
int
cmpsl
inc
xchg
ja
inc
repnz
add
mov
cltd
mov
and
jnp
mov
xchg
or
cmp
pop
cmp
in
xor
cltd
push
jecxz
or
mov
icebp
sub
and
setno
daa
and
loope
inc
into
dec
push
ljmp
xchg
inc
or
cmpsl
xchg
pop
ja
and
mov
pop
inc
imul
test
push
ljmp
sbb
aam
dec
sub
bound
xlat
pop
pop
cmp
mov
adc
int3
lret
pop
adc
inc
pop
addr16
xor
xor
in
pop
push
xor
imul
test
dec
rcrb
jmp
pop
std
popf
sub
out
aam
xor
xor
xor
mov
jmp
addl
insl
cmpsb
push
cmp
and
pop
push
out
insb
insl
mov
push
ljmp
arpl
addb
fs
xor
mov
cmc
jb
push
mov
outsl
mov
mov
mov
and
dec
gs
add
imul
mov
decl
es
xlat
loopne
pop
js
mov
fsub
push
pop
dec
pop
rcll
sub
ds
es
shrb
fimull
outsl
sub
sbb
fistl
sub
fmull
out
or
fsubrs
loop
xchg
sahf
adc
inc
inc
inc
nop
and
into
lahf
in
adc
das
pop
and
adc
nop
mov
fistps
xor
int3
into
lock
adc
rclb
pop
adc
xchg
lea
add
pop
jg
cmp
pop
sub
add
fdivs
mov
les
out
jmp
add
add
imul
out
repz
and
or
inc
mov
push
push
sbb
adc
push
mov
jge
jo
pusha
dec
jo
lods
or
aas
out
mov
ja
mov
push
sbb
jp
cmp
push
divl
ja
push
jmp
push
sbb
mov
xchg
push
mov
incb
mov
push
rorb
js
cltd
dec
xor
mov
std
sbb
mov
pop
jle
xor
je
neg
xorl
xor
cltd
fidivs
int
imul
out
push
into
mov
mov
or
scas
jl
jmp
fsubs
jnp
scas
dec
icebp
pusha
lret
popa
push
ljmp
out
jg
cmpsb
icebp
shr
inc
mov
mov
inc
and
cltd
popf
and
int3
pop
mov
inc
loop
icebp
cld
inc
pop
add
push
mov
jle
rcrb
xchg
pushf
jns
cmp
mov
dec
outsb
sahf
lcall
imul
mov
sbb
mov
je
mov
sbb
fdiv
not
add
sbb
or
sub
add
cmp
and
movsb
pop
int3
paddq
cld
cmp
xor
test
sub
dec
jg
inc
rorl
xchg
cwtl
loope
mov
add
pop
add
push
icebp
sbb
inc
mov
adc
les
jle
cltd
adc
xchg
andl
sahf
stos
lcall
ss
pop
push
xor
xchg
jmp
add
cmp
mov
dec
movsl
std
sbb
iret
dec
dec
cmc
aas
pop
mov
fwait
ja
mov
ljmp
cli
mov
jp
add
cmp
test
nop
push
lcall
and
outsl
mov
repnz
stos
adc
xchg
test
int3
or
mov
shlb
pusha
sub
mov
inc
dec
inc
clc
and
mov
adc
aad
push
fwait
es
enter
or
xchg
mov
fnstcw
cwtl
xchg
fstps
push
pushf
sbb
pop
inc
mov
cmp
add
push
popa
popf
jmp
mov
or
mov
cmp
adc
cs
imul
xchg
inc
mov
into
iret
cmpsl
mov
add
pop
lds
mov
in
iret
jbe
cmc
shlb
xor
mov
data16
aad
leave
xchg
pusha
inc
stos
shll
imul
cmp
daa
mov
inc
icebp
jmp
push
push
je
ret
mov
test
outsl
push
or
or
jb
sbb
std
pop
lock
icebp
cwtl
lret
popa
push
lret
push
xorb
popa
pop
addr16
xlat
pop
cmp
jecxz
imul
xor
sbbl
fdivr
out
test
adc
sbb
aas
stos
mov
jge
outsb
lret
xchg
xor
mov
dec
pop
jns
fnstsw
or
sar
xor
pop
xor
pop
push
push
loope
in
pop
mov
and
int
inc
add
dec
adc
leave
adc
loopne
xor
lcall
gs
sub
repnz
fildl
add
fmulp
pop
cmc
sbb
xlat
iret
fsubrl
xlat
bound
xchg
sub
ret
pop
pop
stos
and
jl
fdivl
cmp
pusha
out
mov
pusha
clc
push
mov
and
test
mov
push
cmpsb
inc
ficomps
xchg
xchg
push
push
in
iret
and
push
add
mov
sbb
lret
rorb
inc
inc
sub
repz
mov
scas
lods
out
xchg
cmc
dec
cli
scas
push
outsl
ret
sbb
or
push
push
lret
sub
jns
add
add
sbb
movsl
mov
mov
lcall
push
pop
sub
mov
dec
push
dec
xchg
mov
add
add
mov
test
and
orb
xchg
ficomps
inc
sub
mov
pop
adc
mov
repz
add
test
loop
in
mov
insb
fld
repz
or
imul
add
in
sbb
imul
data16
cmp
cmpsl
pop
dec
cmpsb
icebp
out
dec
les
int3
or
jp
daa
push
inc
push
stos
or
insl
dec
inc
mov
jbe
lcall
add
mov
xchg
cmp
outsb
fsubs
insb
sub
push
lcall
call
mov
sbb
fdivl
les
icebp
lahf
pop
add
inc
add
xchg
aad
xor
jb
jno
pop
pop
mov
adc
scas
lret
mov
gs
mov
push
movsb
push
mov
fs
fadds
jmp
jge
pop
adc
xchg
mov
js
and
in
mull
push
jle
jno
inc
ss
mov
lret
jns
sub
jbe
fcompl
and
add
jp
repz
insb
enter
adc
rcr
jp
push
arpl
push
daa
es
mov
or
lret
in
jo
xchg
or
negl
loop
inc
jae
ljmp
rolb
jge
insl
popf
lcall
jae
push
orb
mov
add
pusha
in
jns
adc
push
ja
lock
into
adc
jp
loopne
roll
fisttpl
popa
ss
add
adc
sahf
and
mov
adc
or
pop
sub
das
out
push
dec
add
pusha
mov
sbb
or
cs
push
ret
pop
hlt
jns
mov
fcomp
pop
push
je
incl
xor
je
rclb
fiaddl
fisubl
fisttpll
insl
ficoms
fstps
lea
scas
aaa
lcall
mov
xchg
push
mov
clc
inc
dec
fs
xchg
and
cs
pop
xor
inc
dec
shr
jle
andb
add
roll
movsl
inc
mov
jne
dec
les
push
xor
adc
shr
clc
sbb
cmp
xchg
dec
cmpsl
imul
jns
push
outsl
and
icebp
dec
xchg
pop
stc
in
dec
popf
test
iret
pop
stos
ror
xchg
popf
jl
jae
jae
cmp
mov
xchg
mov
pushf
icebp
jnp
mov
dec
fidivrl
not
push
in
dec
mov
mov
pop
aaa
and
mov
fisttps
xchg
pop
int
inc
pop
test
imull
int3
pop
xchg
xchg
and
lahf
negl
ljmp
js
xchg
pushf
xlat
inc
and
jo
repz
aaa
xchg
adc
adc
test
and
xor
sbb
mov
notb
ja
xor
sub
pop
adc
ret
sti
jno
rcll
push
xchg
notb
rol
jl
xchg
inc
adc
int3
stc
cmc
dec
lahf
in
xor
sbb
cmpsb
mov
test
mov
movsb
leave
jno
pop
add
push
mov
lea
insb
addl
push
sub
pop
scas
fiaddl
or
hlt
push
js
fstpl
jle
pop
mov
and
jecxz
daa
sbb
xor
insb
fwait
insb
mov
fdivrp
std
inc
cmp
xchg
pop
mov
ja
adc
push
jbe
adc
mov
int3
fiadds
sub
nop
adc
fstps
xor
push
pusha
pop
sub
cld
dec
mov
pop
push
push
cmc
jno
or
shll
sub
dec
dec
dec
hlt
cltd
int3
xor
sub
lcall
xchg
lods
call
in
and
pop
pushf
add
std
xchg
xor
in
mov
dec
dec
sub
rcrl
push
jle
dec
xchg
ja
inc
xchg
bound
mov
xor
into
xor
out
std
and
push
xchg
enter
pop
stos
mov
test
testb
insl
add
popf
aas
insb
mov
mov
inc
imul
lret
hlt
or
sub
loope
in
iret
xchg
mov
decb
pop
jb
into
insb
push
sbb
adc
outsb
xor
rcl
pop
frstor
cmpsl
mov
inc
das
xchg
in
mov
cmc
dec
in
add
ja
mov
sbb
pop
ss
pushf
mov
shll
repz
push
jl
mov
add
fmull
ja
mov
add
adc
daa
sub
mov
shll
cmpsb
dec
mov
popf
sbb
adc
outsb
lea
lret
push
inc
ficomps
dec
dec
mov
cld
lahf
iret
pop
and
adc
jmp
imul
out
push
adc
enter
pop
icebp
adc
cmp
testb
mov
sub
mov
xlat
and
outsl
subw
jg
push
enter
loopne
insl
cmpsb
add
int3
push
insb
lods
test
xchg
add
movsb
push
stc
cltd
daa
mov
push
and
inc
mov
xor
paddd
fbld
pop
mov
pop
mov
mov
aas
stos
xor
fldcw
outsb
clc
jb
push
add
test
pop
mov
or
fidivl
push
dec
push
sbb
jmp
mov
fbstp
sahf
dec
outsl
pop
and
and
pop
mov
lret
sub
xor
push
shrb
in
in
ds
adc
pop
pusha
aas
ja
jecxz
cmp
int
or
mov
or
mov
sarb
iret
aam
add
push
add
xchg
mov
adcb
aas
aaa
lcall
push
clc
push
scas
cmpb
das
push
adc
icebp
fwait
mov
dec
dec
inc
inc
insb
sbb
jp
clc
data16
or
leave
mov
jl
rorl
aaa
movb
cli
andl
cmp
dec
dec
xchg
cli
repnz
sub
mov
jo
jne
or
add
xchg
mov
sahf
xor
lret
lcall
add
pop
adc
or
push
sbb
loopne
clc
push
repz
loope
aad
leave
pop
sahf
mov
aad
push
dec
xlat
inc
lret
fsubrs
mov
add
stos
sti
notl
pushf
pop
sbb
imul
or
and
js
into
mov
xchg
and
sbb
push
inc
shrb
andl
sbb
mov
xlat
aas
push
cli
jo
push
dec
je
xchg
insl
or
jmp
mov
int3
iret
or
cltd
cmp
push
data16
and
and
xchg
sbb
insl
loop
xlat
cltd
dec
mov
push
xor
xor
loope
stos
cmpsl
sbb
ss
cmp
jge
cmc
scas
das
pop
insb
adc
cmc
cwtl
fwait
sub
cmp
mov
rcll
addr16
pop
jecxz
in
sbb
and
out
jno,pn
push
or
jns
jge
lret
loop
jbe
cmp
cmpsl
outsb
or
cmp
add
out
fyl2x
repnz
sub
inc
fcmove
int3
dec
mov
or
test
dec
rorl
stc
es
repnz
fbstp
inc
dec
pop
xor
inc
psubd
testb
mov
sbb
mov
test
pushf
scas
and
xor
insl
mov
out
sbb
xchg
inc
jmp
jnp
pop
jbe
sub
lret
sbb
and
cs
lcall
std
hlt
push
pop
inc
sbb
pushf
ja
shr
lods
inc
aas
or
stos
test
lock
fdivrs
sbb
push
push
mov
push
sbb
lods
pop
lahf
pop
xchg
push
outsl
cmpsb
jl
and
cli
stos
xchg
pusha
ljmp
inc
ficomps
cwtl
pop
gs
stc
mov
flds
repnz
addr16
push
icebp
push
hlt
in
test
xchg
mov
bound
fs
push
nop
sbb
jae
dec
adcb
pop
add
lds
movsb
pop
fisttpll
add
cmp
loopne
bound
add
adc
sti
popa
mov
ret
pop
xchg
rorl
cmc
jmp
sbb
lret
aad
scas
mov
pcmpgtw
fs
daa
in
clc
int3
cmpsb
rorb
cs
mov
and
mov
jno,pt
std
cmpsb
mov
stc
mov
arpl
lahf
mov
jns
js
xchg
lahf
out
sbb
in
xchg
ret
call
sub
mov
test
dec
and
pop
dec
roll
sahf
lahf
bound
sub
bound
inc
andl
sbb
jge
negb
lret
dec
je
scas
dec
sbb
pop
and
stos
cmp
adcb
cwtl
js
repnz
addb
or
in
xchg
mov
push
xor
pop
mov
mov
cmpb
xor
adc
mov
int
mov
mov
dec
clc
xor
mov
or
fstpt
neg
into
and
pop
mov
lret
lock
sbb
shll
call
mov
lcall
repz
jge
adc
xor
sbb
lea
jg
lock
xor
je
push
push
pop
inc
hlt
fwait
jo
bound
cmp
add
js
lcall
jle
mov
ja
insl
sub
lea
fcompl
xor
jmp
push
add
daa
mov
fcomps
lods
inc
gs
pop
in
fildl
adc
fiaddl
push
jnp
pop
out
xor
pop
stos
jne
hlt
dec
add
mov
mov
adc
inc
mov
mov
std
aad
mov
inc
iret
push
idiv
fisttpll
loopne
inc
xchg
pop
clc
cmp
fs
jmp
repz
xchg
and
add
mov
lret
push
mov
decl
pop
insb
adc
loopne
inc
jle
fistpll
int3
fsts
scas
sbb
adc
nop
lret
inc
add
cmp
testl
or
pop
fstl
loope
lods
adc
and
data16
dec
and
iret
and
loope
shll
je
or
lea
out
test
and
testl
inc
lahf
out
jecxz
lret
cmp
ret
xor
push
or
push
mov
lahf
sub
or
out
mov
aad
sahf
repz
stos
or
pop
in
fstl
cs
fnstenv
xchg
dec
cmpsl
inc
mov
nop
stos
lret
sub
jmp
jno
addl
shll
popa
les
mov
pop
js
add
push
and
rclb
add
addr16
inc
mov
cmp
fdivrp
add
adc
or
push
and
xchg
jno
mov
jl
sbb
inc
aad
out
cmpsb
js
enter
sbb
daa
sbb
pop
int3
movsb
inc
jge
mov
test
cmp
lahf
or
xchg
popf
mov
jp
pop
mov
test
or
aaa
push
sbb
hlt
imul
add
fwait
xchg
sbb
fisubrl
test
aaa
inc
add
rcrl
dec
or
test
adc
fistps
cmp
icebp
ss
mov
cmpsb
push
leave
or
inc
cmc
xlat
stos
test
mov
out
xlat
iret
sub
mov
jge
xor
test
xchg
pop
cmpsl
jnp
test
jg
test
dec
hlt
hlt
sbb
push
cmp
jo
sub
test
cmp
adc
lods
add
pop
dec
mov
dec
adc
push
les
fmull
jge
jae
mov
stos
inc
dec
stos
xchg
subb
out
adc
cs
ljmp
lret
cmpsl
hlt
add
xchg
lret
stos
xchg
aad
add
loope
inc
add
push
cwtl
sub
cmpsl
jns
inc
pop
stos
dec
test
sub
jmp
mov
rclb
enter
add
xchg
cvtdq2ps
int3
fs
cmp
test
lret
jb
rclb
cli
pop
stc
aas
push
scas
cwtl
cmp
mov
dec
es
rolb
add
mov
mov
sub
mov
or
iret
mov
stos
xchg
imul
int3
xor
pop
pop
mov
pop
sbb
pop
cmp
mov
jmp
jne
adc
pop
popa
subb
and
or
hlt
les
icebp
xchg
inc
icebp
inc
fistl
or
and
xor
mov
pop
add
dec
test
cmpsb
jbe
outsb
dec
xchg
jne
pop
add
jecxz
fstl
jl
mov
rorb
aas
jno
outsl
cmc
in
jge
data16
popa
clc
scas
loop
cltd
sbb
shrl
jecxz
dec
das
arpl
lahf
mov
outsb
stos
add
icebp
sub
daa
aam
push
mov
outsb
punpcklwd
mov
in
sub
enter
ss
clc
pusha
inc
jae
je
filds
rcll
outsb
mov
aad
out
pop
mov
mov
xor
xchg
nop
add
stc
sub
lods
sbb
dec
sarl
imul
mov
xchg
lcall
or
in
in
pop
repnz
std
xchg
js
popa
fs
movsb
out
xor
cwtl
inc
push
aaa
call
pusha
push
ds
fcmovne
sub
lds
lret
ret
lcall
pusha
ljmp
push
sbb
cmp
pop
adc
pop
outsb
pop
int3
push
subl
js
dec
nop
inc
repz
inc
rcrb
nop
imul
adc
mov
and
loopne
cmp
stc
imul
enter
bnd
nop
fnsave
scas
cltd
push
mov
push
ljmp
ljmp
adc
movsb
jg
stc
mov
jge
sbb
rcrl
shlb
pop
mov
shlb
cmp
pop
imul
sbbb
pop
inc
into
or
push
dec
cmc
icebp
std
lods
jmp
imul
jnp
inc
ss
scas
lods
mov
dec
or
jae
das
out
daa
push
lret
addr16
lret
xor
or
stos
and
xchg
popf
pop
push
aam
sub
int3
sbb
je
adc
negl
in
sub
push
and
sub
add
ret
std
in
lret
movsl
add
push
sub
push
jl
daa
jns
rolb
hlt
jnp
pop
fidivrl
into
xlat
aas
repnz
jbe
or
cli
shll
insb
orb
pop
loope
fsubrp
test
fisubs
inc
insb
js
and
imul
xchg
push
cmpsb
test
shl
lret
cmpsb
pop
fs
fwait
jne
jne
dec
divb
scas
aad
add
push
xchg
ss
cli
mov
cs
movsb
sbb
cmp
jp
or
aad
push
int
in
jle
jmp
cli
ret
mov
cmp
adc
fwait
outsl
mov
sbb
lods
test
jo
pop
fwait
xchg
out
gs
jecxz
imul
sub
push
ljmp
int3
mov
or
push
xchg
xor
fisubrs
cmp
pop
outsl
jp
cmpsl
push
mov
adc
ja
loope
outsl
pop
and
mov
mov
add
mov
jb
pop
fld
mov
inc
icebp
xchg
ljmp
push
insl
sbb
inc
jno
push
mov
fcomps
adc
out
fdivrs
gs
add
lea
sbb
xchg
cmc
push
std
xchg
aaa
sahf
repz
lahf
jnp
adc
add
dec
mov
leave
cmp
das
test
lcall
or
sahf
in
inc
dec
test
shl
rclb
sbb
sahf
cmpsl
icebp
sbb
xor
lea
jne
jns
sahf
cmp
mov
lret
repnz
sub
xchg
xorl
dec
inc
xor
push
xacquire
mov
or
decl
xlat
jmp
popf
or
cld
loop
xchg
and
loope
adc
nop
jg
xor
xchg
xor
sbb
add
subl
negb
add
clc
dec
bound
iret
test
pop
mov
pushf
pop
mov
sub
sub
mov
cmp
inc
aaa
mov
or
mov
popa
or
lret
rcr
cmpsl
lods
lret
sub
loop
out
movsb
rorl
xchg
cwtl
or
daa
fstl
add
fsubr
mov
fcompl
je
and
jb
loope
xor
mov
cmpb
pushf
cmp
es
dec
pop
faddl
jl
pop
ja
xchg
lods
test
dec
add
jae
jge
fldt
xor
jecxz
add
jnp
jno
and
sarl
dec
jnp
jbe
jmp
testb
rcr
or
sbb
enter
add
pop
ret
fimull
ds
out
push
sarb
lcall
ret
xchg
loope
cli
lock
loopne
sub
xchg
leave
test
lret
std
mov
mov
mull
lret
pop
jmp
outsl
daa
xor
sub
ljmp
jae
xchg
pop
jge
movsl
xchg
out
jp
hlt
mov
sub
lods
pop
mov
pop
in
ret
cmp
add
lea
aam
xchg
mov
imul
xchg
add
pushf
sarl
enter
rcrl
out
sti
mov
sub
xorb
pop
pusha
rorb
sbb
test
jle
movsl
pushf
pop
data16
aam
sbb
cmpb
scas
mov
mov
jg
xor
sbb
in
inc
out
gs
data16
mov
popl
aas
push
xlat
rclb
lods
inc
mov
es
push
fisttpl
or
inc
mov
add
shlb
roll
addr16
and
dec
int3
xchg
ss
push
push
cli
push
bound
or
xchg
cmp
inc
out
xchg
sub
fisubs
repz
push
cs
cmp
fs
pop
out
add
es
je
jle
or
sarb
mov
pop
push
ds
insl
push
adc
int
enter
test
inc
call
fdiv
mov
sbb
or
push
inc
dec
sbb
jns
inc
add
push
lods
daa
and
movsb
adc
inc
push
inc
test
fdivp
loope
call
stos
xchg
and
mov
jle
scas
negb
sbb
push
inc
adc
in
ret
lret
mov
adc
inc
cmp
dec
xchg
or
push
movsb
adc
repz
cmpsb
mov
lea
les
lret
jmp
loop
imul
pop
pusha
add
cwtl
lea
hlt
aam
call
dec
xor
cmp
stos
jnp
shlb
dec
movq
idiv
insl
cmp
popa
push
xlat
mov
aas
or
mov
fisubs
push
and
xchg
jae
in
sub
mov
mov
lret
adc
ret
xchg
decb
push
cmp
add
stos
into
sti
pop
sbb
std
mov
enter
adc
fisubrl
fisttps
icebp
mov
jnp
dec
add
add
enter
jbe
mov
cld
test
aaa
push
in
xchg
xor
lcall
nop
fcomps
xchg
push
mov
repnz
imul
ror
pminub
pop
and
scas
fs
js
repz
push
lds
movsl
mov
mov
add
les
xchg
and
dec
popa
pushl
sub
movsb
pop
cmp
push
xchg
pop
lcall
mov
outsl
and
add
jmp
popa
push
test
xchg
mov
and
ret
pop
push
in
inc
sub
popf
jecxz
mov
sub
andl
in
addr16
inc
jecxz
leave
mov
sub
lgs
jno
imul
popa
and
xor
leave
outsb
aaa
push
mov
movsl
cmpsl
mov
pop
jbe
and
jae
xchg
sarb
sub
add
nop
jne
in
adc
jl
cmp
jp
insb
mov
pushf
dec
xlat
ret
sbb
shll
aad
mov
pop
pop
mov
cmpsb
shl
out
push
sbb
iret
jmp
cltd
or
outsb
push
test
inc
or
push
push
xchg
jne
mov
sub
mov
mov
cmp
xor
xchg
aaa
inc
lret
pop
mov
or
lcall
lret
sub
cmp
jb
sbb
scas
cltd
inc
mov
adc
test
push
outsl
in
ror
inc
divl
ljmp
ret
js
sub
arpl
rcrb
pop
enter
testl
movsb
out
dec
inc
dec
adc
cmp
movsl
nop
dec
mov
add
adc
enter
or
lock
sbb
and
cmp
cmpsl
add
mov
cli
jno
stos
std
jg
dec
sahf
rorb
inc
mov
fwait
dec
mov
les
fistpl
je
mov
jae
lret
test
jmp
es
mov
mov
call
fucomip
mov
inc
dec
xchg
jge
outsb
or
sarl
sarl
xchg
ret
xor
out
add
adc
rcr
arpl
imul
mov
mov
fs
fadds
int
push
faddp
add
push
bound
mov
xchg
jb
call
test
arpl
and
cmp
add
push
mov
push
pop
pushf
add
rcll
jmp
fcmovu
xlat
or
aas
std
xchg
lahf
mov
push
mov
orl
cmc
fistpl
pushl
pop
and
jns
add
mov
aam
decb
pop
fcompl
jle
mov
cmp
sub
mov
test
push
mov
push
mov
nop
jbe
rcr
xchg
xor
push
sbb
call
adc
sub
xchg
call
push
add
mov
testb
daa
mov
movsl
dec
mov
sub
ljmp
sbb
in
scas
inc
jne
ds
shll
hlt
fstl
les
or
cmp
test
cs
jecxz
mov
cmpsl
inc
mov
in
outsb
addr16
nop
aas
mov
aaa
jp
mov
arpl
out
fdiv
mov
mov
lcall
dec
xchg
test
jg
ljmp
imul
or
imul
sahf
jmp
sub
icebp
sahf
insb
lods
inc
out
adc
fwait
pusha
cmp
enter
lahf
push
vmwrite
cli
mov
mov
sbb
dec
dec
cmp
arpl
rcll
in
cmpsl
xchg
inc
cmp
ret
rolb
mov
in
mov
inc
test
decb
pop
xchg
retw
sbb
sti
mov
insl
mov
jne
loopne
rcrb
xor
cmpsl
hlt
add
cmp
mov
mov
inc
or
orl
imul
push
inc
cmp
adcl
sub
insl
out
pop
icebp
aas
std
subb
inc
sub
cwtl
sub
add
mov
rorl
loope
pop
xor
push
aad
fidivrl
sti
out
inc
fimuls
ja
xor
outsb
cli
cmp
hlt
pop
xor
or
xchg
sub
push
shlb
out
aas
sar
push
repnz
lods
cmp
mov
aam
xlat
andb
add
ficomps
add
mov
mov
rcl
sbb
and
fs
adc
std
outsl
cmpsb
push
mov
daa
xchg
add
adc
ja
outsb
fs
daa
pusha
mov
jo
addr16
inc
je
push
jp
jbe
idivb
pusha
paddsb
jo
bnd
inc
xor
scas
aad
std
sahf
into
lahf
test
inc
std
mov
jo
mov
loop
add
jne
cmpl
mov
pop
xchg
add
sbb
pop
inc
or
fisubs
push
mov
test
fs
dec
or
sbb
lea
lock
xchg
sub
push
mov
dec
dec
movsb
sbbb
daa
dec
jno
xlat
mov
mov
push
loopne
jnp
fimull
aad
inc
add
loopne
ja
and
pop
stos
mov
xchg
outsl
ret
out
loope
mov
push
jle
fxch
pop
addr16
add
cmp
pop
inc
loopne
movsb
xor
bound
inc
fcoml
das
js
dec
lods
cltd
mov
clc
cmp
sbb
aad
mov
fstpl
xorb
subb
scas
dec
jne
add
cmp
mov
dec
jecxz
or
in
insl
sub
sbb
push
test
shll
bound
repz
mov
and
adc
int
dec
cmp
mov
mov
shl
out
pusha
in
dec
lock
lock
shrl
add
rcrl
fcmovnu
fildl
and
mov
imul
mov
shlb
imul
sub
jnp
dec
imul
sbb
and
outsl
mov
xorl
mov
jbe
nop
ss
insl
mov
pop
dec
jo
scas
incb
xchg
fs
cmp
jbe
mov
daa
mov
mov
dec
dec
mov
xchg
mov
xor
jmp
aam
mov
inc
enter
and
repnz
cwtl
je
or
jge
push
pop
mov
ror
pop
sbb
mov
sti
add
jns
or
dec
aad
xchg
push
popa
jb
xor
push
push
add
repnz
add
fcmovnbe
sbb
cld
rclb
clc
rclb
mov
lods
leave
pop
outsb
int
cmpsl
cli
or
into
adc
sbb
adc
mov
mov
pop
cmp
xorl
fstps
cmpsb
or
nop
cmpb
mov
jnp
xchg
dec
fwait
cld
sahf
scas
int3
gs
jg
sub
cwtl
jl
xchg
iret
stos
inc
lret
add
sbb
push
leave
ret
mov
cs
sbb
loop
shlb
js
xor
inc
leave
in
arpl
dec
arpl
jns
outsb
out
pop
mov
push
int3
js,pn
pop
nop
jbe
out
pop
push
push
aas
sub
test
pushf
lcall
mov
iret
xchg
aas
add
daa
arpl
mov
out
xor
mov
sub
bound
jns
mov
dec
xlat
sbb
scas
push
dec
lods
sub
frstor
jmp
ljmp
lret
sbb
lods
popa
inc
cmpl
adc
ret
cmpsl
lret
scas
sbb
shrb
data16
xlat
push
inc
and
jb
repz
orb
arpl
jne
jo
out
stos
pop
movsl
addr16
mov
jge
aas
mov
inc
aam
divl
add
aaa
sbb
testb
cmp
xchg
jge
gs
std
or
sbb
icebp
test
fucomip
fmull
sbb
icebp
je
les
cltd
out
xchg
dec
icebp
nop
fwait
scas
push
jmp
lret
push
mov
adc
roll
testb
cmp
int3
fiadds
xor
or
xor
movsb
xor
repnz
js
es
ret
adc
adc
es
in
cmp
cltd
add
add
shrb
imul
fidivrl
fwait
mov
or
mov
es
es
jg
pop
iret
out
push
mov
in
sbb
mov
arpl
aaa
call
sbbl
or
mov
mov
rclb
xchg
cwtl
arpl
mov
add
adc
rolb
inc
mov
push
movsl
jnp
nop
out
fwait
xchg
mov
sub
mov
in
outsl
dec
sbb
leave
push
ds
push
iret
push
mov
adc
push
mov
xor
jae
int
mov
ret
sub
pop
and
loop
inc
sbb
jge
rorl
dec
sahf
ljmp
jae
test
push
into
dec
es
mov
push
fldcw
sbb
cwtl
cmp
les
mov
mov
add
or
xchg
call
sbb
int3
cmp
scas
es
mov
inc
jecxz
cs
xor
stos
add
pop
xchg
lods
ljmp
shl
dec
movsb
daa
inc
scas
cs
enter
pop
pop
jbe
fists
inc
mov
ret
lcall
es
push
imul
inc
pop
adc
ljmp
dec
cmc
cld
mov
stc
bnd
adc
xchg
lret
jne
adc
xor
cmp
dec
dec
push
pop
add
jb
pop
sbb
bound
test
jmp
dec
mov
mov
movsb
dec
adc
push
mov
lcall
iret
jnp
push
adc
cmp
mov
push
popf
pushf
or
mov
push
mov
and
sub
and
add
scas
test
push
cmc
jnp
test
insl
sahf
sbb
mov
xor
lret
xor
arpl
lahf
mov
cwtl
lods
in
mov
sbb
dec
cmp
movsb
pop
cmpsl
xchg
or
lock
pushf
es
ja
fsubrs
jl
addl
insb
and
ds
movsb
inc
xchg
xor
inc
imul
pop
repnz
jno
scas
sbb
leave
pop
xchg
dec
repnz
adc
into
xor
sub
pop
pop
xchg
sub
jb
xor
icebp
jnp
neg
mov
mov
inc
or
pop
add
outsl
movsl
rcr
iret
mov
dec
xlat
and
mov
sarl
out
xchg
jb
arpl
test
adcl
push
out
pusha
xchg
add
xorl
mov
push
sbb
das
lcall
and
out
pop
outsb
mov
push
add
mov
mov
jle
out
pop
push
push
cmp
mov
or
loope
test
or
mov
and
inc
aam
jno
jmp
or
or
fldenv
jbe
mov
sbb
fsubr
sbb
out
add
push
rorb
orl
jp
or
clc
mov
movl
fstpt
pop
daa
or
mov
movsl
cwtl
sub
repnz
je
pushf
jns
inc
cmp
push
data16
cmp
repnz
jmp
xor
loop
aam
mov
mov
adc
mov
sarl
pop
shll
andb
fst
aas
ja
jnp
pop
call
and
imul
add
lods
int
fistpll
cmc
mov
mov
sub
ljmp
loop
retw
aad
lods
popa
push
inc
andb
mov
push
aas
mov
shll
and
jae
int3
bound
inc
imul
jnp
pusha
pop
mov
xchg
loopne
cmp
scas
adc
mov
movsb
adc
test
sub
lahf
mov
inc
aaa
test
push
adc
movsb
xor
jno
mov
lea
jne
jno
mov
lcall
mov
sbb
dec
xlat
jecxz
push
fdivs
add
int3
cwtl
dec
lods
sbb
das
es
push
lcall
mov
xchg
mov
mov
out
jbe
repnz
cmp
arpl
jbe
mov
mov
sahf
ret
rolb
adc
insl
loopne
inc
loop
dec
icebp
rclb
inc
sbb
out
fs
or
inc
sti
xchg
sbb
rolb
int
imul
addr16
or
daa
push
iret
rorl
push
pop
sbb
dec
and
in
inc
imul
leave
and
movsb
addr16
adc
and
and
xchg
shll
fistpl
cmp
fstps
push
and
jnp
or
mov
test
into
inc
cltd
dec
jp
sub
lret
pop
sub
push
and
xchg
ficomps
jl
pop
and
out
mov
stc
sti
fs
les
ljmp
fs
jae
fs
pushf
jecxz
xchg
insb
ss
insl
roll
or
mov
xor
outsb
es
outsb
or
push
imul
mov
arpl
mov
mov
arpl
popf
sub
test
loopne
mov
fs
incb
cmp
jno
test
aad
jne
mov
dec
xor
add
adc
test
aad
aas
je
stc
ret
lods
jle
jb
xor
ja
adc
add
push
lods
pop
shlb
push
xor
ja
push
outsl
push
mov
mov
bnd
mov
and
filds
lods
or
pop
stos
mov
mov
mov
iret
movsl
in
rol
mov
daa
jmp
loope
dec
push
adc
clc
mov
subps
fstl
mov
jne
mov
sbb
movsl
fcmovnb
lahf
repnz
sarb
in
sahf
add
mov
js
mov
lcall
inc
cli
sbb
enter
mov
jmp
push
mov
rcrl
pop
cmpsb
movsl
shrb
add
mov
lret
xor
mov
int3
and
add
jo
inc
in
adc
add
popf
out
sbb
fmuls
int3
out
pop
repnz
lea
movsbl
outsb
imul
scas
push
xor
add
rcr
dec
popa
push
sbb
inc
daa
xchg
jmp
or
rcll
insl
ret
add
or
or
fisttpll
loopne
dec
mov
xor
in
xor
mov
pop
popa
or
pop
test
mov
test
inc
sbb
popa
xchg
cs
adc
sbb
jbe
cmp
dec
idivl
sbb
jp
fmuls
andb
aas
jmp
jbe
or
jg
adc
xchg
lock
pop
cmp
cld
sub
or
mov
mov
lret
push
jnp
pop
and
call
bound
push
pop
or
jno
mov
fiadds
popf
and
lock
push
aam
cmpsb
sahf
and
in
cmpsb
mov
push
jo
clc
ret
sbb
push
xor
sub
xchg
iret
or
or
lods
cmp
pop
aas
fsubrs
ret
and
fwait
jle
xchg
fcomp
lahf
pushf
sbb
cld
push
and
sub
dec
and
mov
inc
push
jae
dec
shr
inc
in
fstps
push
in
mov
frstor
movsb
out
sbbl
xchg
push
leave
xchg
inc
stos
sub
cld
bound
sub
jg
ffreep
sub
or
int
mov
ja
mov
dec
xlat
mov
jge
es
add
das
and
xchg
or
xchg
add
into
fwait
sbb
push
cmp
jo
xchg
or
in
gs
icebp
pop
roll
push
sub
and
adcl
mov
push
cmpsb
xchg
pop
mov
push
jo
push
xlat
ljmp
push
add
adc
ja
xchg
or
or
mov
push
mov
or
or
cmc
push
mov
mov
out
leave
dec
add
in
into
push
mov
push
mov
inc
imul
sbb
push
push
rcrb
lock
or
adc
mov
jnp
aad
clc
mov
out
xchg
mov
mov
jmp
sub
loopne
lret
sub
lahf
fstps
imull
ret
mov
sub
xchg
das
insl
mov
js
xchg
movsl
inc
lods
pusha
pop
mov
into
lods
std
ret
dec
dec
ds
mov
fincstp
mov
push
sbbl
sbb
push
mov
sti
xlat
negl
ret
inc
xlat
call
push
and
sbb
rclb
rcll
push
cmpsl
inc
adc
popa
or
jbe
mov
cmp
jne
in
xor
test
xor
je
frstor
mov
cmc
sbb
pop
cmpsb
adc
mov
mov
in
sbb
loop
mov
sbb
mov
xchg
fisttpll
movsb
jmp
or
int3
mov
out
cmp
cmp
ss
sti
mov
dec
fwait
lods
sbb
pop
fstps
or
imul
pop
shlb
pop
out
fnsave
std
nop
and
xchg
inc
sub
or
cltd
bound
pop
movsl
js
push
mov
fiaddl
xor
push
paddusb
cld
outsl
pop
mov
into
and
enter
int3
popa
push
push
inc
and
inc
addr16
push
mov
inc
xor
pop
or
mov
mov
int
hlt
and
test
pop
jae
push
pushf
aas
insl
jbe
pop
dec
xor
imul
fisubs
or
scas
repz
pop
sbb
or
jnp
cmpb
lock
bound
not
in
loop
mov
sub
js
sub
mov
loope
jne
inc
pop
add
fstp
cld
mov
mov
rorl
mov
and
fidivrl
cmp
adc
gs
cmpsb
push
jmp
or
cltd
sub
decl
and
add
movsb
dec
push
dec
xor
sub
lods
push
fsubl
jae
sub
push
cmp
or
fildl
sarl
dec
repnz
mov
ret
addr16
scas
adc
xor
fwait
scas
out
xor
sbb
or
mov
adc
imul
push
repnz
fdivrs
dec
xor
sub
xchg
sub
sub
or
aam
clc
sbb
les
jge
test
dec
mov
lods
stos
push
ret
fsubr
pop
popl
adcl
pop
insl
ds
pop
mov
push
mov
lret
test
mov
push
int
xchg
jno
aas
lds
and
jo
sbb
mov
incl
lds
in
mov
or
sub
inc
add
iret
fisubs
push
out
mov
jmp
imull
cmp
inc
scas
andb
scas
fxtract
jp
ss
xchg
cmp
imul
mov
jo
jmp
int
mov
or
arpl
dec
sarl
les
ja
and
sbb
cmpsb
iret
mov
jns
xor
pushl
iret
scas
and
sub
lret
sbb
inc
or
sbb
mov
test
jae
or
scas
pop
sub
loope
dec
xchg
add
xchg
mov
dec
xchg
ds
in
xor
mov
push
icebp
xor
loope
inc
push
fwait
mov
push
dec
mov
insl
mov
je
stos
sub
lcall
mov
mov
or
les
mov
pop
or
testw
loope
or
cltd
dec
negb
clc
sahf
adc
cmpsb
cmpsl
jmp
cmpb
add
pushf
inc
loope
xor
std
push
cmpsb
das
ret
shl
loopne
scas
lods
pusha
mov
cmp
and
inc
jo
adc
cmp
sub
pop
ljmp
xlat
dec
nop
rorb
repz
stos
jae
ficomps
mov
jb
outsl
mov
xchg
push
mov
add
xorb
outsb
in
adc
xor
cli
fimuls
rdmsr
aam
sbb
and
imul
fisubl
dec
jg
sub
sbb
xor
insb
adc
std
stc
mov
mov
mov
inc
movsl
inc
xchg
adc
pop
jno
test
dec
fidivrs
imul
sub
dec
iret
lods
mov
push
sbb
pop
in
scas
jmp
lods
sub
inc
lahf
mov
mov
out
dec
in
call
or
pusha
insl
cmp
cmpsl
loopne
push
push
lea
push
gs
mov
flds
adc
sub
mov
mov
out
mov
mov
loope
imul
push
xor
aaa
cmp
test
daa
loope
insb
mov
jge
mov
xchg
pop
mov
fcmovu
or
and
jecxz
xchg
jno
cld
or
call
stc
inc
dec
popa
lea
xchg
jnp
mov
pop
mov
mov
jb
mov
gs
jb
inc
add
sbb
inc
pushf
pusha
out
mov
testb
pop
mov
mov
decl
js
sub
pop
popf
pusha
pop
xor
or
sbb
lods
adc
cwtl
pop
rcrb
jmp
add
sbb
xor
jecxz
lock
outsl
adc
ja
xlat
rcrl
cmp
mov
or
cmp
scas
arpl
jmp
sbbb
das
flds
jae
les
xor
lahf
test
push
pop
pop
add
aas
push
subb
fwait
xor
test
divb
dec
cmc
adc
or
sub
in
loope
mov
sbb
cwtl
xor
negl
add
repz
arpl
cltd
xchg
add
fstps
mov
and
lret
jae
mov
push
call
pop
inc
stos
loop
negb
jg
jp
cltd
inc
mov
in
xor
mov
out
sti
push
ret
cmp
or
cmpxchg
sahf
in
mov
sbb
lcall
lahf
js
mov
inc
cli
sub
aas
sub
xor
mov
xchg
mov
adc
les
lret
inc
add
mov
inc
cli
jnp
rol
rorl
jg
xor
mov
bound
jno
push
mov
loopne
outsl
jae
dec
xor
movsb
movsb
dec
push
mov
sub
mov
cmp
jnp
stc
add
shrb
cli
insb
sub
sub
push
jl
mov
aaa
hlt
sbb
mov
out
cltd
jl
lods
fldcw
dec
je
loopne
loop
lret
jle
xor
ljmp
scas
cs
loop
sarl
gs
fbld
js
aas
xor
mov
lret
pushf
andl
movb
bswap
sbb
imul
jb
fs
cmp
inc
xor
andb
movsl
jle
repz
push
jg
ficoms
mov
and
fstpt
jbe
scas
in
inc
or
lcall
sub
stos
je
aad
cwtl
lods
inc
cmp
dec
push
mov
mov
cld
pushf
pushf
aas
add
xor
mov
cli
fisubl
jp
jae
bound
xor
pop
es
popf
and
in
jge
pop
js
xchg
lds
and
mov
xchg
xchg
push
mov
mov
icebp
in
mov
dec
sbb
pop
add
scas
lret
mov
sub
pop
ljmp
outsb
add
xor
andl
push
sahf
mov
xlat
push
push
mov
test
or
int3
mov
xchg
enter
leave
movsl
das
add
adc
and
into
sub
mov
sub
loopne
enter
inc
int3
dec
and
repnz
mul
repnz
test
subb
inc
arpl
subl
shrb
rol
jb
push
cmp
xlat
scas
mov
push
pop
data16
jo
xchg
jp
data16
add
test
jp
jo
cmpsb
gs
ss
and
pop
mov
jns
push
jp
or
ljmp
xlat
sbb
movsl
jnp
mov
sbb
mov
mov
jl
gs
test
push
xor
xlat
stc
ss
dec
xor
push
sub
mov
pop
pop
or
mov
push
cwtl
stos
mov
jo
xor
ret
loope,pt
out
lock
les
mulb
add
sbb
pushf
sarb
aam
mov
xchg
stos
pop
ss
sub
or
mov
push
xchg
push
add
inc
lock
fcmovbe
in
mov
inc
pop
push
fstps
std
lods
out
shl
adc
xchg
cli
in
insl
shlb
dec
inc
popf
sbbb
push
mov
sub
cmp
jae
xchg
bound
or
or
pushf
mov
insb
popf
scas
rcrb
lods
and
fists
hlt
call
inc
outsb
ret
std
pop
xchg
lahf
dec
xchg
inc
jns
popf
mov
xchg
cmp
mov
cld
sbbl
sub
xlat
pop
mov
adc
ficompl
add
addb
xor
fidivrl
adc
mov
jl
jae
push
sub
and
in
orb
outsl
pop
cmp
aam
and
or
sbb
mov
aas
jae
mov
push
mov
orl
mov
push
pop
std
push
push
pop
rcrl
addr16
cmp
or
mov
imul
push
and
dec
popf
faddp
push
ret
pop
orl
stos
ja
bound
les
fwait
xor
lcall
mov
sub
rolb
xchg
in
sub
test
push
push
lods
sbb
outsl
ficoml
into
pop
jg
jge
push
push
adcl
push
fbld
or
dec
sti
repz
mov
adc
fimull
test
xchg
lcall
mov
mov
fnstcw
dec
push
mov
push
dec
lds
mov
ret
push
sti
stos
das
sarl
pop
xchg
hlt
int
stc
bound
sub
lahf
xor
push
jg
int
inc
mov
bnd
cmp
add
lea
add
sub
aas
adc
jae
xchg
dec
sbb
cmp
mov
fcoml
push
dec
movsl
xchg
movsl
scas
jl
add
fstl
pop
and
test
xchg
xchg
ret
adc
add
movb
pusha
lds
cmc
aam
dec
mov
mov
pushf
out
test
pop
push
mov
push
icebp
add
shl
dec
stos
fiadds
mov
pushl
lcall
pushf
ja
sbb
mov
les
cmpsb
push
imul
and
or
ret
mov
cmp
std
xchg
sbb
xor
ljmp
or
mov
and
pop
pop
pop
adcl
and
in
mov
repnz
xchg
mov
or
arpl
dec
xchg
add
test
adc
push
cmpsb
adc
sbb
pop
scas
sbb
hlt
inc
or
inc
fnstenv
push
push
std
pop
in
pop
ficomps
jl
das
jb
mov
pusha
outsl
into
xor
push
repnz
pusha
sbb
mov
insl
push
cmpsl
imul
or
mov
hlt
fdivl
sbb
test
push
and
les
inc
xor
xchg
shlb
jl
mov
add
cmp
xchg
das
adc
pop
mov
mov
scas
stc
icebp
cmc
jb
xor
stc
inc
stos
mov
push
mov
mov
int3
lea
mov
sbb
out
arpl
add
cmp
inc
pop
sti
roll
add
xorb
enter
aas
xor
sbb
mov
mov
outsb
mov
sub
dec
jae
jge
daa
loop
movsl
push
hlt
icebp
or
mov
mov
inc
pushf
push
cmpsb
test
stos
xchg
xchg
lret
dec
jne
push
jae
addl
mov
mov
add
rclb
jmp
jmp
in
std
xor
data16
int
mov
lahf
pop
std
pop
gs
jg
inc
dec
jns
jl
jge
sub
cs
pop
outsl
mov
mov
mov
call
push
add
xlat
cmpb
popf
subl
xlat
add
lods
out
mov
imul
fnstcw
aaa
adc
std
inc
nop
cmp
loope
mov
pop
decb
popf
mov
mov
push
mov
add
cmp
dec
outsl
int3
loopne
xor
mov
imul
jmp
inc
xchg
sub
cmp
cld
and
sbb
repnz
mov
ljmp
add
or
rcrl
addr16
pop
sub
mov
jp
test
jmp
pusha
push
xchg
cmp
mov
in
faddl
adcb
popf
outsl
mov
aam
xor
cmp
outsl
lret
mov
xchg
cmp
nop
inc
daa
ret
insl
or
clc
add
cmp
mov
cmpb
ret
xor
or
inc
popa
js
in
cld
fstpt
andl
in
dec
mov
scas
adc
sbb
repnz
mov
int
fbld
mov
jl
int3
shrb
aaa
insl
pop
cmpsb
das
mov
jmp
cmp
xor
dec
imul
fcmovnb
data16
ja
ss
imul
mov
incl
sub
aam
sbb
les
sti
fcoml
aad
repnz
imul
lock
inc
imul
xchg
mov
fisubs
out
pop
sbb
lret
xor
xchg
rorb
shl
imul
loope
sub
mov
cmpsl
out
scas
int3
inc
leave
loop
aaa
imul
mov
xchg
mov
adc
outsl
fwait
sbb
mov
mov
sbb
out
xchg
add
xchg
pop
repz
dec
ret
movsl
pop
mov
push
jb
pop
inc
addl
push
jbe
fadd
mov
xchg
push
add
leave
sbb
jae
sub
leave
insb
push
add
or
sbb
scas
out
jo
lahf
rorl
sahf
out
popa
and
leave
lret
fldt
xchg
cmp
cld
xchg
xchg
aas
adcl
dec
imul
call
sbb
cli
xor
xor
test
sti
and
dec
jl
dec
outsl
mov
lahf
xor
adc
cli
les
add
adc
xor
sti
push
fidivl
jecxz
int3
fwait
hlt
rcl
jae
out
aas
das
adc
mov
pop
int3
add
push
xchg
mov
xlat
and
ja
jmp
jne
stos
outsl
out
es
les
adc
aas
jle
rolb
sbb
pushf
mov
imul
ret
add
out
shll
lock
roll
jns
gs
aas
cwtl
jno
adc
test
outsl
and
push
mov
adc
lods
sub
ljmp
or
dec
push
sbb
xor
shlb
xlat
push
or
cmp
lods
fbld
and
dec
jmp
inc
sahf
int3
sub
ror
cmp
xlat
inc
loope
jp
and
mov
sarb
pxor
sbb
add
mov
lcall
movsb
fldcw
mov
jl
ja
cmp
out
xchg
and
fwait
jl
in
rolb
into
outsb
cwtl
jnp
aad
rcll
push
outsb
mov
dec
and
inc
or
push
dec
jbe
pop
push
add
mov
test
scas
jmp
loop
mov
repz
sbbb
pop
test
insl
lods
test
outsl
xor
sub
add
das
stc
mov
mov
inc
inc
ftst
iret
cld
xchg
cmp
aam
mov
add
ret
sbb
fldt
loop
ret
cli
fnstenv
cmp
movl
mov
mov
pop
mov
mov
repnz
lods
icebp
repz
push
cmp
jne
pusha
xor
mov
sub
mov
adc
notl
roll
das
or
push
sahf
sub
mov
pop
std
cmp
xchg
mov
push
mov
adcb
xchg
and
or
call
inc
xchg
test
out
adc
mov
jg
notl
enter
icebp
add
cmp
mov
xor
fwait
mov
xor
jle
pop
xchg
test
jns
push
movsb
xchg
sbb
popf
xchg
xchg
and
sbbb
xchg
cmp
push
xchg
jmp
jns
jb
and
mov
xlat
mov
pop
adc
jae
cwtl
fwait
hlt
mov
sbb
test
arpl
pop
adc
ret
jg
jg
jne
andl
push
sub
sti
sahf
xchg
test
test
pop
mov
out
leave
cmpsl
cltd
bound
or
stos
in
sbb
test
xchg
mov
inc
cld
pop
xchg
inc
xor
xor
add
ljmp
test
cld
ret
sub
xchg
sub
dec
shlb
out
push
mov
xchg
and
call
sbb
cli
mov
push
loopne
xor
inc
mov
push
cmc
xchg
cltd
jle
stos
lahf
repz
inc
pushf
inc
outsb
in
data16
cs
mov
cmp
fnsave
repnz
mov
or
or
dec
movl
movsl
or
sub
dec
xor
adc
pop
jns
inc
addr16
jo
hlt
inc
xchg
push
xchg
sub
out
add
int3
lods
cmp
fidivs
push
faddl
lea
out
or
sbb
int3
jns
mov
shrd
sub
xchg
xchg
movsb
cmpsb
sub
mov
enter
xor
pop
push
or
add
insb
sbb
jle
lock
fcmovne
lret
push
insl
inc
loop
cmp
and
jo
je
sbb
mov
add
insl
xlat
xchg
gs
push
xchg
sub
inc
xchg
pop
in
fwait
mov
sub
js
dec
cmp
mov
jle
aam
int
adc
je
push
inc
jecxz
cld
and
icebp
ss
mov
dec
pop
xchg
pusha
sbb
shl
cwtl
dec
jmp
sub
jns
cmp
inc
in
add
add
iret
push
sti
push
sub
jl
dec
ficoms
loop
ljmp
clc
add
ficompl
xchg
push
push
in
mov
inc
mov
dec
orl
out
std
lret
lea
jns
add
cmpsl
inc
fdivrs
cmp
ret
loope
jo
in
cld
sbb
fsubl
or
imul
popa
adc
and
pushf
int3
add
lahf
ss
dec
mov
je
div
sub
and
adc
insb
push
pop
sbb
cltd
jae
inc
je
leave
jl
push
out
cmp
lods
push
or
nop
ljmp
xchg
addb
mov
cmp
arpl
sbb
out
or
mov
lret
lds
ljmp
jae
pop
pop
mov
push
lret
in
sti
sbb
xchg
mov
mov
mov
je
mov
sbb
fdivs
dec
add
inc
dec
sti
es
outsl
mov
push
cs
mov
mov
fidivs
jl
mov
fdivl
je
mov
fstp
lds
xor
pop
xchg
ljmp
mov
jbe
jmp
leave
les
outsb
sbb
dec
pop
shr
and
arpl
mov
pop
out
dec
sbb
test
outsb
push
push
movsl
hlt
lret
and
xchg
std
inc
jb
popa
mov
jb
stos
push
mov
lds
inc
cmp
aam
adc
test
in
dec
mov
jbe
adc
cmp
jl
out
or
adc
jmp
and
and
shrb
push
cld
inc
popf
xor
or
lret
cmp
movsb
xchg
repz
mov
adcb
mov
sbb
incl
test
mov
dec
sub
sbb
jbe
stc
mov
sbb
xor
hlt
push
fmuls
pop
push
pop
ret
jbe
push
cmp
in
lock
lahf
mov
addl
cmpsb
mov
into
xor
mov
fsubrl
xchg
mov
aam
cmp
mov
dec
xchg
orl
mov
dec
shlb
fwait
test
mov
popf
or
lds
sub
mov
mov
into
loop
adc
sub
pop
ljmp
push
insl
xchg
jmp
aam
ret
addr16
lock
mov
or
mov
cmp
sub
pop
lods
divps
jmp
rcrb
adc
push
stc
and
arpl
sahf
out
mov
fdivrp
out
imul
and
test
mov
sub
adc
lret
add
enter
lret
push
ret
jmp
cltd
inc
cmp
lret
cmp
ds
push
pop
sub
loope
push
lret
movsb
adc
xchg
sbb
js
cltd
cmp
out
daa
je
mov
push
dec
sahf
mov
je
mov
aas
adc
cld
adc
xchg
mov
jmp
inc
movsl
add
jbe
fcoms
mov
add
sbb
push
ret
and
jb
sbb
lds
jae
xchg
in
or
mov
and
xchg
or
mov
aaa
mov
mov
mov
dec
jns
bound
mov
outsl
or
mov
sub
push
pop
cmc
xchg
repnz
in
jge
mov
call
or
xor
xchg
stos
xchg
xchg
repnz
pusha
and
dec
or
push
aas
out
push
xchg
lds
lock
dec
aas
pop
inc
jl
mov
fbld
fildll
adc
mov
lcall
dec
stos
imul
push
mov
popf
mov
xlat
cmp
loopne
add
icebp
stc
pop
addl
test
push
loope
dec
dec
dec
outsl
dec
mov
jg
push
dec
sub
xchg
and
movsl
mov
dec
push
call
lret
or
or
inc
dec
pop
jb
push
ljmp
push
pop
movsb
jp
fwait
sbb
cmp
pop
inc
xor
xor
add
imul
jecxz
jmp
adc
jecxz
and
cs
adc
addb
rorl
aaa
sbb
pop
call
pushf
dec
cmp
lods
call
js
xor
mov
jbe
pop
rcrb
dec
xor
sbb
repnz
jmp
cmp
test
icebp
mov
mov
adcb
daa
inc
je
push
sbb
in
test
fnstenv
pop
cmpsb
out
in
adc
filds
xchg
and
xchg
sbb
or
out
movsl
cs
aas
mov
push
pop
and
dec
and
cmpsb
xorb
jmp
aas
out
dec
add
shr
mov
jnp
iret
aam
mov
sbb
or
mov
sbbl
mov
pop
icebp
icebp
arpl
xor
lock
fldt
push
push
jne
std
movl
test
jbe
sbb
cld
xchg
movsl
loopne
ret
ds
fiadds
addl
adc
jp
mov
fldenv
sub
cmpsb
das
fmulp
inc
cmpb
lcall
mov
imul
popa
jmp
popf
mov
push
cmc
ljmp
jbe
push
adc
addr16
scas
test
inc
push
dec
pop
jecxz
sub
incl
lret
inc
dec
jg
dec
xchg
aaa
orl
imul
stos
xor
push
and
dec
jecxz
mov
mov
fs
cmp
adc
lcall
inc
sub
ja
test
mov
jmp
in
sarb
cltd
jle
in
jg
test
lcall
lcall
in
inc
cmpsb
jle
jno
add
and
in
lods
cmc
lahf
adc
add
cmp
push
sarb
jno
addr16
lds
jo
or
test
mov
push
aaa
mov
test
inc
fisubl
mov
inc
pop
cmpsl
mov
sbb
ds
jecxz
repnz
lods
clc
cmc
pushf
add
cmp
xchg
sbb
push
sbb
das
inc
pop
and
dec
lea
pop
xchg
in
ror
cmc
in
pop
aaa
ret
mov
mov
inc
xchg
outsb
test
jne
testl
jns
or
mov
and
lret
jmp
push
in
jmp
iret
std
cmp
add
cmp
mov
aad
out
mov
dec
repnz
mov
mov
aaa
push
mov
divb
mov
sbb
sub
or
mov
mov
ds
or
mov
dec
fistl
je
pop
test
pop
jge
add
cmpsb
shr
xchg
leave
and
lret
mov
sub
popl
pop
idiv
and
ljmp
xchg
popf
sub
mov
rcll
jmp
dec
inc
aaa
and
inc
enter
enter
mov
sub
mov
enter
movsl
ret
lods
add
je
or
xchg
cmp
fisubs
mov
test
xor
push
fs
clc
adc
data16
push
lds
stos
adc
scas
cltd
movsl
int
dec
shlb
in
or
rcrb
cld
lahf
ljmp
push
mov
mov
insl
rclb
testl
mov
dec
mov
dec
scas
cltd
mov
xor
clc
add
or
jbe
lea
rclb
ficoml
xor
mov
fsubrs
out
int
fprem1
mov
inc
pop
scas
ror
ret
dec
test
hlt
jb
cmpsb
out
pop
pop
int3
and
lcall
mov
aaa
repz
cmp
jmp
dec
push
fbld
mov
mov
repnz
fisubrl
add
cmpsl
mov
cmp
xchg
lock
pop
adc
push
loop
xchg
ja
push
xor
add
int
aas
xchg
mov
push
mov
scas
and
shlb
lret
jnp
adc
les
bound
jmp
out
jns
iret
sbb
lods
fs
mov
pop
xchg
mov
cmp
jo
dec
bound
outsl
ja
xor
xor
icebp
mov
test
xor
stc
loop
shlb
pushf
mov
cwtl
push
loope
adc
negl
jae
mov
inc
imul
push
inc
xlat
sbb
cmp
jg
adc
mov
dec
inc
test
and
js
and
add
pop
mov
data16
stos
dec
jae
or
inc
cs
pusha
mov
mov
inc
sti
js
push
in
imul
shrb
loope
push
outsl
jne
lahf
lcall
mov
cmpb
sbbl
fdiv
mov
sbbb
pop
sbb
pop
sbb
cmp
xchg
pusha
add
xchg
mov
adc
and
bound
inc
mov
mov
inc
push
popf
sbb
and
mov
ja
pop
jb
lcall
outsl
sbb
cmp
mov
mov
mov
stos
inc
aad
xor
cmp
mov
push
mov
mov
pop
push
cli
fisttpll
cltd
jl
push
ss
dec
fbstp
pusha
dec
sub
in
adc
sub
faddl
inc
aas
mov
icebp
addr16
std
jnp
pop
mov
mov
push
or
fdivr
not
bound
fdivrs
ficoms
xlat
jecxz
ficomps
pop
addb
enter
lock
sti
jecxz
pop
lds
imul
jno
adc
xor
aam
pop
cmpsl
cmp
push
or
pop
mov
les
sub
mov
in
or
inc
subl
cmp
pop
mov
or
push
lods
outsl
ret
pop
xchg
movsb
xor
jmp
push
inc
hlt
mov
and
mov
icebp
pop
or
out
xchg
push
jns
clc
lret
scas
pop
lods
mov
sahf
mov
sub
dec
lock
test
add
loope
aas
pushf
daa
dec
inc
or
add
inc
pop
ret
aad
in
add
cmp
adc
addr16
inc
in
std
mov
pop
stc
adc
rcr
lods
lock
inc
imul
lods
jle
push
shll
mov
mov
les
mov
xchg
out
xor
push
dec
cs
inc
int3
repnz
push
stc
and
jmp
jp
sbbb
stos
cmc
pusha
sbb
out
int3
push
ljmp
push
in
movsl
mov
jp
jge
pop
push
xchg
rcr
xor
scas
jns
mov
inc
push
shl
dec
push
dec
xchg
lock
jb
xchg
ja
popf
sub
mov
test
and
loop
push
test
addr16
cmpsb
jmp
inc
jge
dec
fbstp
jle
and
xor
add
loopne
aas
sbb
jecxz
dec
xchg
lods
ljmp
pop
and
push
add
pop
jp
and
in
jbe
mov
out
dec
daa
push
into
sar
mov
xor
add
fsub
lcall
repnz
lock
ss
jns
jp
aam
inc
pop
pop
outsb
jl
loope
cld
mov
test
mov
je
call
mov
js
push
loopne
aaa
pop
xchg
fbld
cmp
xchg
inc
mov
adc
movsb
mov
pop
or
stos
jmp
xor
xchg
movsb
mov
ja
fwait
hlt
int3
pop
mov
sahf
sub
fstl
lea
sbb
fists
mov
jno
jnp
cmp
lock
ficoml
out
adc
fsubl
xchg
cwtl
push
and
cltd
mov
lcall
lcall
inc
leave
imul
and
mov
stos
push
xchg
es
sbb
je
outsb
hlt
mov
adc
jg
mov
sbb
inc
xor
cwtd
mov
out
out
iret
cmp
cmp
adc
cmp
outsl
sbb
push
xor
insb
jae
sarl
adc
jbe
dec
divl
mov
and
clc
movsb
mov
idivl
cmc
cltd
mov
cli
add
mov
sub
mov
mov
xor
sti
dec
mov
add
cmc
mov
jmp
sbb
sub
movsl
or
fistl
jns
cltd
stos
dec
pusha
int3
int
xchg
mov
pop
test
sub
imul
jl
mov
or
notb
mov
xchg
in
fdivrs
xchg
fstps
or
lds
and
in
push
push
out
stc
sub
sub
jns
push
lock
popf
ja
int
cli
ret
xor
inc
notb
imul
aaa
das
movsb
in
addb
dec
mov
popf
arpl
pop
add
add
decb
dec
shr
jg
cmpsl
es
and
and
loop
loop
jnp
jo
test
insl
lret
xchg
adc
lcall
out
jns
ljmp
sbb
fildll
fmull
ja
repz
dec
push
and
add
push
add
stos
dec
test
int3
inc
sbb
aaa
xchg
ljmp
test
loopne
push
push
das
popa
insb
pushf
popa
fildl
jb
in
cmp
clc
and
lcall
cmpl
adc
mov
jl
sbb
lods
daa
and
scas
pop
inc
fistps
cmpsb
pop
and
out
jp
dec
jmp
add
mov
in
adc
ss
idivl
fwait
cwtl
jbe
pop
lea
sbb
les
les
add
or
subl
cmp
nop
clc
test
pop
push
loopne
or
mov
idivl
jae
and
push
inc
clc
xor
mov
mov
push
mov
sbb
push
sbb
orl
mov
lahf
lock
loop
mov
ja
mov
and
insb
rorl
in
js
and
movsl
dec
jb
dec
mov
in
and
mov
adc
lret
xor
fisttpll
lcall
out
enter
mov
movsb
mov
pop
scas
pushl
ss
mov
mov
mov
inc
es
in
dec
jecxz
sti
mov
in
sub
pushf
xchg
cmpsb
mov
inc
xchg
sbb
test
data16
mov
out
inc
mov
out
imul
xor
ficoms
incl
cld
stos
sub
dec
insl
push
addr16
test
adc
and
jbe
scas
jb
data16
fucom
sbb
stos
rorl
test
mov
push
mov
xlat
xor
jo
sti
cmp
or
mov
pop
ljmp
pusha
call
imul
cwtl
stos
int
inc
ja
jle
dec
cs
xchg
pop
fidivl
stos
insl
aam
mov
push
xchg
rolb
mov
xchg
rcl
sub
add
inc
jmp
into
aaa
cltd
mov
lcall
xor
lcall
cmp
insb
inc
cmp
mov
xchg
or
mov
outsb
mov
sbb
ds
and
outsb
jmp
xchg
repz
push
add
jecxz
adcb
dec
fsubrl
into
fmul
dec
insl
faddl
adc
jo
and
frstor
stos
push
pop
lods
jo
mov
aam
sbb
insb
adc
aaa
iret
addr16
lcall
dec
add
or
stc
insb
cwtl
fnstsw
out
scas
mov
xlat
xchg
push
gs
pop
mov
xchg
inc
imulb
and
jae
lods
daa
jns
or
cmp
cmp
jmp
aaa
test
fnstenv
add
sarb
cmc
pop
inc
inc
push
mov
fcomip
imul
push
jmp
aam
nop
stos
pusha
mov
out
decl
jb
in
int
push
dec
lret
xchg
add
lea
mov
sbb
scas
mov
or
sub
jg
sub
cmp
mov
push
mov
jbe
add
mov
sarl
std
in
sbbb
xor
and
sbb
mov
imul
jo
xchg
fidivs
ds
mov
xor
inc
cmpsb
xlat
jmp
aam
divl
lods
jnp
and
popf
pslld
cmpsb
xchg
sbb
mov
push
mov
dec
aam
jmp
mov
pop
sub
mov
pusha
cmp
xchg
sub
loopne
stc
fistps
cmp
cld
sub
inc
adc
xchg
cmpsl
scas
outsl
mov
mov
movsb
adc
in
lahf
je
mov
pop
cmpsl
aam
jmp
dec
xchg
xchg
mov
fs
fstps
movsb
fimull
pop
push
adc
fmuls
push
push
cs
xor
je
scas
ljmp
push
fwait
repz
jge
fsubp
pop
icebp
call
mov
dec
ret
cli
xlat
std
mov
or
ds
cmp
rcll
mov
jecxz
dec
ret
insb
outsb
mov
outsl
ret
divl
rorb
or
cli
jmp
cmp
in
stos
je
push
jle
jg
lcall
imul
push
jle
xchg
ror
in
js
out
mov
cli
cmc
nop
jae
xor
sub
push
inc
cld
add
test
inc
or
mov
pop
outsb
fisubrs
mov
pushf
xor
lret
out
or
das
mov
and
in
nop
push
es
daa
pushf
ljmp
mov
xchg
ret
iret
lahf
inc
sub
cli
pop
xor
out
xor
test
or
sbb
dec
sub
xor
lret
jl
mov
pop
pop
mov
xlat
fwait
jns
push
cltd
addr16
xor
jne
dec
lea
mov
in
jno
mov
and
lret
scas
dec
lahf
adc
lds
inc
inc
call
addr16
xor
lods
bound
sahf
pop
lods
call
rolb
pop
mov
ljmp
fldenv
out
sbb
xor
mov
mov
inc
cld
and
add
jmp
mov
enter
push
dec
adc
xor
dec
mov
jmp
lods
inc
shl
xor
inc
push
sub
subb
scas
pop
pop
cwtl
pop
add
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cltd
pop
add
pop
add
cltd
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
mov
add
loop
inc
add
mov
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
ret
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
movl
add
add
ret
lds
incl
add
add
leave
inc
add
add
add
incl
add
add
lret
add
add
incl
add
add
int3
inc
add
add
add
incl
add
add
into
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
rolb
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
aad
add
add
add
incl
add
add
flds
add
add
incl
add
add
inc
add
add
add
incl
add
add
loop
add
add
add
incl
add
add
out
add
add
add
incl
add
add
cli
inc
add
add
add
testl
add
add
mov
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
lcall
inc
add
inc
add
add
add
push
inc
add
inc
add
incl
add
add
add
add
incl
add
add
adc
add
incl
add
add
sbb
add
add
outsl
sbb
js
inc
add
add
add
sbb
add
add
incl
add
add
and
add
add
add
and
add
add
add
add
inc
and
add
add
call
daa
inc
add
daa
inc
add
mov
inc
add
mov
jmp
xor
add
xor
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
fdivrs
inc
add
add
add
jmp
inc
add
inc
inc
add
lcall
inc
inc
add
nop
add
add
add
add
incl
add
add
add
add
rolb
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
popf
mov
lcall
lcall
fcmovnu
lcall
lcall
aad
lcall
fcomp
lcall
lcall
push
inc
add
dec
add
add
inc
loopne
sidtl
add
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
cmp
add
je,pn
js
add
add
add
add
adc
add
push
add
add
add
add
pusha
jb,pn
popa
je
add
stos
add
add
and
add
add
add
or
add
add
fs
je
add
add
add
xor
add
add
add
or
add
add
movzbl
cmp
jg
je
cmp
jg
je
add
cmp
ja
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
sub
je
sub
je
dec
jmp
mov
ret
mov
ret
sub
je
dec
je
dec
je
dec
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
pop
adc
and
inc
add
adc
sub
inc
add
adc
xor
inc
add
inc
add
in
push
push
push
mov
push
mov
sub
push
push
push
andb
push
pop
xor
lea
rep
stos
stos
lea
push
mov
push
call
lea
push
call
lea
push
push
call
pushl
push
lea
push
call
add
lea
push
lea
push
call
mov
cmp
je
andl
lea
push
call
test
jne
push
lea
push
call
pop
pop
mov
mov
pop
pop
pop
leave
ret
orl
call
jmp
pushl
call
ret
jmp
push
mov
sub
push
push
push
push
xor
pop
xor
lea
mov
push
rep
stos
stos
mov
lea
push
push
mov
call
test
je
mov
lea
mov
push
call
movzbl
mov
push
shl
call
pop
pop
push
movzbl
pop
or
sub
addl
shl
or
inc
inc
cmpl
jl
lea
push
push
push
call
test
je
xor
lea
mov
mov
push
call
movzbl
mov
push
shl
call
pop
pop
movzbl
push
or
pop
sub
add
shl
or
inc
inc
cmp
jl
cmpl
je
mov
lea
mov
push
pushl
mov
call
test
je
cmp
jne
push
pushl
call
lea
push
pushl
jmp
pushl
call
pop
push
call
pop
pop
xor
pop
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
jmp
add
mov
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
incl
add
add
inc
add
add
add
add
add
add
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
fs
insb
outsl
jae
add
inc
gs
gs
inc
imul
imul
je
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
pop
add
je
jne
jb
outsb
je
imul
jns
add
add
je
gs
jo
popa
je
inc
add
jge
inc
js
je
jb
arpl
jae
into
add
imul
insb
gs
bound
arpl
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
lods
add
jo
imul
push
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
add
add
pop
inc
and
and
and
add
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
pop
dec
inc
add
and
add
add
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
add
add
call
dec
inc
add
dec
inc
add
jmp
dec
inc
add
dec
inc
add
decl
inc
add
add
lcall
add
inc
add
incl
dec
inc
add
call
dec
inc
add
incl
add
add
dec
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
inc
add
add
add
incl
push
inc
add
incl
add
add
incl
add
add
add
add
inc
xchg
inc
add
xchg
inc
add
pushl
add
inc
add
call
lcall
cli
cwtl
pop
add
addb
pop
cwtl
pop
add
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cltd
pop
add
pop
add
cltd
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
je
popa
insb
imul
imul
je
outsl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
shrb
xchg
inc
ss
scas
cmpsl
inc
push
push
pusha
cld
jbe
mov
jnp
jne
ljmp
cs
pop
push
add
test
mov
sbb
aas
mov
int3
sbb
ljmp
mov
jae
clc
inc
pop
ret
icebp
pop
addr16
push
mov
cld
push
enter
fimull
lret
add
sbb
push
stc
in
push
cmp
sbb
call
imul
xchg
fisubrl
lods
cmp
mov
xchg
stc
push
pop
aaa
sahf
scas
lods
mov
sbb
jmp
fisttps
inc
pop
dec
inc
lds
fstsw
shr
jae
fistpll
jbe
in
jge
cmp
xchg
push
je
insb
inc
mov
subl
or
bnd
iret
sti
sbb
mov
pop
pop
dec
xchg
sbb
pop
inc
ret
fstpt
imul
mov
cli
fsts
jbe
es
dec
lock
popa
insb
aam
push
aad
test
mov
clc
mov
test
mov
popl
cli
xlat
aas
pop
sbb
sub
and
rorb
iret
add
inc
cmc
es
cmpsl
bound
xor
sahf
inc
arpl
sbb
pop
imul
mov
call
vpslld
xor
adc
mov
cmpsl
cmp
test
mov
and
jecxz
icebp
mov
insb
lret
inc
lds
mov
in
aad
dec
mov
sbb
and
jp
loop
orb
adc
add
mov
push
cs
rol
sbb
shrl
fsub
pop
push
cld
mov
imul
decl
jo
sub
imul
cmp
cmp
fwait
inc
repz
push
scas
xor
insb
mov
movsl
xchg
outsl
mov
les
insl
or
test
iret
push
cmp
stos
ficompl
lds
or
mov
jmp
in
lcall
pop
sarl
push
jno
mov
and
clc
xlat
enter
jge
movaps
dec
mov
pushl
jo
adc
dec
dec
mov
ret
cmp
rcrl
dec
insb
dec
inc
mov
or
jo
jnp
pop
movsb
xchg
test
mov
jmp
nop
jbe
jg
ficomps
imul
dec
dec
sub
jno
scas
in
inc
test
sbb
sbb
mov
cmp
pop
in
and
repz
push
push
icebp
mov
sub
fisubrl
repnz
test
xchg
testl
aad
std
cmp
inc
cwtl
xor
orb
repnz
std
bound
rolb
enter
popa
stos
jns
mov
insb
lret
test
lahf
inc
inc
push
pop
xor
loopne
sbb
mov
jg
push
stos
hlt
mov
inc
movsb
cmpsl
push
test
jmp
mov
cmp
pop
loope
in
pop
loope
icebp
out
pop
pop
das
mov
mov
pop
pop
xchg
stos
ss
xchg
imul
cmp
ret
adc
adc
xchg
cltd
mov
mov
push
imul
push
mov
cld
cld
cmp
out
jecxz
jecxz
jp
inc
pop
sarl
jb
sbb
mov
add
mov
cmpsl
sub
cmp
addr16
push
mov
xchg
pop
sbb
mov
cmp
int3
aas
mov
push
sub
fidivl
stos
std
out
xor
pop
or
mov
vphaddudq
pusha
faddl
add
lea
xchg
sbb
and
mov
adc
and
push
rcrl
out
mov
shld
test
ss
xor
into
mov
add
repz
cld
into
shlb
or
dec
and
adc
enter
je
imul
and
sub
cmpsl
mov
lcall
push
xor
cld
xchg
scas
jl
callw
mov
xchg
ret
or
leave
inc
or
jnp
push
lcall
ja
xor
pop
icebp
test
es
xor
xor
dec
sbb
mov
and
cwtl
and
insb
xchg
mov
and
mov
stos
xlat
sbb
xor
ret
in
inc
sti
add
movsb
mov
xchg
dec
clc
mov
fs
dec
cmp
fdivs
loop
jae
fsubs
ljmp
or
pop
sbb
jnp
sarl
mov
int
mov
iret
ljmp
in
push
add
insb
scas
cmp
inc
xor
rcl
mov
pop
cmp
xchg
push
xchg
ljmp
adc
pop
sbb
out
sarb
lods
jle
dec
jg
cmpsb
cmp
add
xchg
insl
or
adc
pop
xlat
and
fnsave
ljmpw
mov
test
mov
xchg
mov
stos
fcmove
push
and
aas
cmp
das
jp
inc
inc
adc
pop
lds
pop
or
inc
jmp
imul
sarb
int
out
and
inc
pop
scas
push
loopne
inc
dec
enter
ss
mov
loope
mov
lret
add
lods
xlat
pop
jp
in
sbb
and
mov
lds
mov
dec
scas
out
push
in
mov
cwtl
ljmp
sarb
xor
cmp
xor
sub
jmp
ror
imul
in
sti
pusha
adc
xor
repz
aam
ljmp
and
xchg
in
inc
enter
add
dec
inc
out
mov
gs
sub
xor
sub
inc
lahf
sbb
add
mov
inc
add
pop
es
ja
sub
clc
bound
outsl
test
test
add
adcl
out
sahf
loop
jle
mov
xchg
cmpb
sub
call
cmp
fs
outsb
push
sbb
mov
pop
sbb
nop
fadds
pop
dec
scas
xor
cmp
mov
test
and
sub
mov
inc
ret
shlb
sahf
scas
das
ret
test
sahf
or
clc
shrl
mov
jo
inc
push
imul
mov
in
and
icebp
cmp
imul
rorl
dec
adc
mov
into
or
ljmp
pop
push
cld
loop
xor
test
or
mov
cmp
cwtl
cmp
xchg
nop
adc
sub
mov
lea
mov
dec
xchg
adc
test
es
and
sub
xchg
jno
and
sbb
pop
in
cmpsb
dec
adc
clc
jns
rcrb
cltd
mov
iret
dec
ds
ja
mov
xlat
mov
dec
outsl
aad
dec
pop
ja
xlat
test
mov
mov
pop
xchg
aad
fbld
out
test
dec
mov
fisubrl
jle
jmp
out
mov
faddl
jle
aad
adcl
push
outsl
pop
stos
xor
jmp
xor
xchg
cmovb
movsl
and
inc
xlat
lock
in
decb
xor
dec
test
or
add
pop
stos
adc
orl
jmp
xor
xlat
inc
mov
add
lahf
add
sub
inc
int
std
shlb
mov
cli
aaa
out
popf
and
jmp
jb
sbb
dec
push
xchg
or
dec
mov
iret
sbb
mov
out
inc
jge
insb
test
ret
int
push
push
lods
loope
lds
fmull
add
aam
cli
cltd
cld
jl
scas
dec
jmp
call
les
scas
aam
popf
add
inc
adc
loopne
jl
out
jle
push
adc
push
jb
das
push
outsb
imul
scas
insb
mov
dec
movsb
stos
sar
fs
push
repz
cltd
dec
adc
int3
mov
sarl
pop
arpl
xchg
clc
push
int3
push
cwtl
icebp
xlat
or
cltd
mov
lds
jb
dec
movsb
cmp
or
andb
stos
jbe
xor
test
or
mov
ret
jg
ret
sbb
inc
jae
cmc
divb
test
in
lahf
sub
mov
add
xlat
push
test
cmp
mov
mov
dec
sub
jg
aaa
ficoml
mov
cmpsb
icebp
fwait
mov
in
pop
mov
roll
leave
ds
dec
scas
std
mov
sbb
inc
add
jle
cmpsl
jle
mov
std
jle
xchg
or
cli
leave
xchg
mov
ja
fcomi
cmp
xchg
hlt
mov
dec
ljmp
cmp
or
cli
pushf
ds
in
cwtl
jbe
pop
adc
jge
dec
cltd
out
pop
aam
aam
pop
pop
ret
lret
and
aas
mov
push
xor
sub
je
arpl
cmpsb
pop
xor
lret
clc
test
push
scas
cmpb
hlt
ds
sbb
xor
mov
jno
shll
sbb
fisubs
sbb
lahf
pop
push
stc
cmp
xlat
xchg
xlat
loopne
pop
push
mov
repnz
add
inc
ss
roll
es
cmp
add
or
xchg
jle
lods
ds
sbbl
sub
fldl
adc
jle
pop
xchg
shll
aad
sub
sub
es
jno
mov
in
cmpl
andl
scas
pop
xor
dec
add
push
shlb
fsubs
loop
insb
in
pop
int3
insb
mov
leave
push
mov
xor
and
jmp
fwait
adc
out
stc
ds
sbb
call
test
inc
jmp
idivb
pop
mov
push
lcall
dec
imul
stos
dec
or
sub
jae
sbb
js
xor
or
xor
cmp
in
cld
loop
imul
stc
iret
lcall
push
lock
xchg
cwtl
insl
subb
inc
mov
rcll
or
outsb
sub
rcrl
dec
stc
outsb
in
sub
xchg
push
pop
inc
cmp
incb
and
je
xchg
pop
mov
cwtl
xchg
dec
xchg
cmp
sub
movsl
jl
mov
in
xor
inc
lret
imul
aad
pop
mov
in
je
and
pop
dec
push
add
xchg
mov
sbb
push
loope
sub
aad
gs
scas
adc
cmp
sbb
mov
in
dec
imul
pop
push
sti
cmp
mov
cld
es
and
orl
mov
mov
pop
jbe
and
lahf
sbb
sub
aam
xchg
push
int
ret
xlat
pop
movsl
cwtl
mull
insl
lahf
mull
nop
enter
xchg
inc
arpl
scas
mov
cmp
in
mov
mov
repz
jp
es
inc
pop
or
sub
cmp
xchg
lock
push
lahf
fmul
xlat
into
add
je
mov
daa
or
mov
mov
cmp
rcrb
aam
cmpsb
xchg
je
loope
in
adc
ret
mov
mov
roll
mov
cmpsb
fnstsw
jbe
pop
ss
jmp
push
push
dec
pop
sbb
mov
mov
sub
cltd
test
cmp
cmp
mov
cmp
jns
into
xchg
mov
loope
arpl
cwtl
imul
bound
push
bound
ss
xor
add
jo
int3
iret
outsl
mov
test
add
xor
mull
stos
xchg
jg
pop
and
add
mov
mov
mov
fisttpll
xlat
stc
stos
sub
lahf
and
fcomp
lock
sbb
sub
shl
adc
movsl
adc
aam
jmp
and
popa
in
fwait
divl
add
xchg
jl
cmpsb
inc
push
add
out
hlt
daa
jnp
test
jno
stos
dec
mov
aad
sub
cmp
xor
push
pop
ret
cld
cltd
mov
inc
test
fsubl
add
scas
xchg
and
mov
int3
and
sub
rcrb
outsb
insb
rolb
stc
dec
push
add
std
sub
call
jl
movsl
stos
fisttpll
fnstsw
push
pusha
test
cmc
xchg
cs
pop
jl
hlt
subl
or
push
sub
push
add
mov
pusha
scas
inc
xchg
cld
sub
lret
iret
sbb
or
rcll
pop
adc
sahf
icebp
or
test
loope
das
aam
inc
aaa
fldcw
jmp
aaa
outsb
fucomip
dec
mov
call
call
push
xchg
push
and
cmp
shl
mov
xchg
push
sub
and
cmp
adc
push
push
aaa
xchg
adc
mov
push
xchg
sbb
mov
jne
int3
mov
andb
sbb
sbb
inc
mov
mov
pushf
lahf
add
adcl
ror
add
xor
mov
sub
mov
mov
loop
push
call
popf
out
push
fbstp
dec
mov
mov
jmp
je
sbb
mov
lret
rorl
insl
fidivrs
fisubl
aaa
sub
pop
popf
push
ret
adc
cmpsl
rcrl
outsb
fnstcw
stc
mov
pop
mov
arpl
mov
mov
pop
jb
ljmp
xchg
jae
shll
mov
sbb
das
fildll
xchg
mov
pop
mov
mov
or
loope
push
sbb
pop
leave
inc
inc
popa
mov
xchg
jne
ret
sub
leave
cmp
testl
popa
jmp
xchg
jecxz
adc
cld
push
adc
xchg
hlt
mov
in
fldenv
pop
pop
nop
cmp
jb
dec
push
sub
arpl
add
jmp
daa
repnz
movsb
cld
cltd
repz
clc
jb
adc
add
repnz
out
dec
fldenv
stos
lods
stos
adc
aam
out
repnz
or
sti
leave
cmpl
mov
jo
fdivl
mov
addl
xor
sub
and
adc
mov
icebp
mov
xor
xor
dec
xchg
xchg
ja
cmp
sub
jp
jg
scas
push
mov
mov
push
jo
loopne
cmp
pop
es
pop
sbb
lret
mov
shrb
dec
jne
add
mov
mov
sbb
sahf
inc
and
std
imul
xor
sbb
stos
xor
xor
fucomp
jbe
ret
imul
scas
mov
in
fidivl
adc
mov
cmc
inc
and
inc
mov
je
popa
pop
push
xchg
loopne
sub
cmpsl
rcl
or
jg
xchg
aam
or
cmc
pop
mov
jp
decb
mov
jbe
pop
lret
mov
pop
sbb
mov
xor
inc
xchg
pop
lea
pminsw
or
jnp
outsl
enter
xchg
add
fdivl
iret
cmp
loopne
inc
and
cmp
add
popa
xchg
clc
mov
add
roll
fbld
add
mov
or
inc
ds
jle
cmp
aam
fildl
xor
xor
out
inc
icebp
push
or
sti
push
cmpsl
arpl
fsts
les
push
dec
ret
inc
cmp
lret
and
jnp
mov
loop
xorb
lods
adc
and
jae
repz
fdivrp
push
loop
pop
mov
in
mov
aad
sub
xchg
inc
mov
stos
sbb
std
jbe
xchg
mov
ss
pop
push
or
and
popa
loope
mov
adcl
jp
shll
adc
cmp
test
js
scas
pop
jp
ficoms
mov
xchg
push
cltd
shlb
add
fcom
test
popa
sbbb
sbb
add
adc
dec
lods
insb
dec
ror
adc
cmp
dec
jg
mov
in
jo
cmp
xchg
clc
and
insl
scas
clc
sub
xor
cld
jae
fisttpl
mov
js
pop
jle
rcrb
or
inc
mov
out
jbe
add
ret
outsl
adc
repnz
test
test
cmp
ss
pop
in
mov
mov
jmp
xor
sbb
xchg
and
js
jbe
loope
leave
popf
repz
fidivl
data16
mov
loope
mov
cmp
push
data16
mov
xor
pop
enter
scas
cmp
cmpsl
xor
jb
pop
mov
push
jne
icebp
pop
movsb
mov
mov
loope
sub
xchg
div
call
out
sub
adc
imul
pop
lods
mov
pop
out
pop
fcmovnbe
or
cmpb
inc
pop
push
in
inc
out
push
pop
jmp
outsl
mov
popf
inc
xchg
shlb
jns
icebp
outsl
cld
sbb
mov
and
pusha
inc
movsb
cmp
cmpsb
mov
mov
aad
arpl
out
push
jg
jecxz
mov
lock
cmpsb
outsl
jmp
in
stc
sub
into
mov
hlt
and
shll
jb
scas
outsl
sub
pop
pop
je
mov
ljmp
popa
in
nop
les
daa
mov
shr
out
test
pop
sub
lret
mov
repz
mov
jle
mov
sbb
mov
fwait
jb
std
adc
pop
mov
popa
pusha
or
mov
cmp
and
xchg
sbb
inc
dec
call
cld
sub
adc
shr
push
mov
mov
mov
out
dec
andb
fnstsw
nop
push
fimull
imul
pop
insb
dec
inc
xchg
sub
hlt
push
inc
pop
xchg
enter
inc
sti
add
cmpsb
xchg
lahf
ret
into
jo
cmp
sub
jae
scas
push
mov
inc
inc
stos
or
outsl
dec
pop
insb
icebp
mov
sti
jnp
popf
mov
sub
sbb
mov
mov
fcomps
popa
lahf
outsl
faddl
dec
aam
lock
sbb
sub
xchg
call
lods
xor
cmpsl
fs
mov
xchg
mov
out
dec
xor
outsb
fcoms
cltd
test
jle
or
adc
out
idiv
bound
push
sub
jmp
jmp
xchg
jns
sub
aad
pop
jae
sub
pop
inc
and
shll
mov
add
lcall
icebp
icebp
test
xor
sbb
js
mulb
cli
mov
sub
pop
adc
aas
fistpl
or
stos
mov
xchg
daa
mov
sub
push
cmpb
inc
jno
adc
jb
outsb
test
aam
push
push
adc
nop
sbb
repz
icebp
or
int
jmp
gs
jp
imul
xchg
icebp
mov
add
stos
leave
add
pop
or
jae
sahf
stos
pop
mov
pop
jmp
loopne
into
mov
jecxz
rolb
outsl
sbb
jno
jae
sub
mov
js
mov
leave
loope
sub
enter
shr
mov
rorl
shll
inc
push
fisubrl
mov
inc
jp
negb
and
or
int3
fnsave
repz
movsb
out
aaa
xchg
pop
int
insl
mov
shll
mov
xchg
inc
out
push
shlb
add
lret
shr
cwtd
imul
mov
sbb
lods
xor
fwait
pop
dec
lea
pop
arpl
loopne
pop
dec
inc
mov
pop
enter
int
stos
xor
notl
xor
mov
icebp
cmpsl
mov
stc
les
xchg
mov
rcl
mov
sub
out
mov
rorl
stc
jb
in
cmp
cltd
sbb
ja
sti
decb
inc
clc
and
nop
fs
push
pop
int
cmc
dec
jge
dec
add
xor
les
aas
cmp
icebp
cmp
loope
xor
rorl
add
insb
pop
aaa
dec
xlat
mov
jge
or
hlt
fbld
cmpl
scas
mov
mov
sbb
push
adc
divb
lods
es
sbb
mov
in
adc
mov
mov
arpl
mov
dec
push
push
add
pop
xchg
leave
lahf
dec
inc
lcall
loopne
repnz
fwait
lods
leave
js
mov
mov
mov
aam
bound
icebp
jno
cmp
fs
and
xchg
jmp
mov
loope
addr16
lret
mov
ds
mov
pop
cltd
lods
mov
mov
test
subb
inc
mov
out
or
xor
mov
xor
jnp
scas
jo
imul
out
add
pop
icebp
fidivrs
and
outsb
adc
cmpsl
repnz
pop
add
xor
pop
sub
jb
sbb
lret
mov
inc
jno
jg
mov
mov
fstps
sbb
dec
xor
fwait
dec
mov
mov
loop
ret
cmp
adc
add
jbe
push
cwtl
or
dec
sub
rcr
stc
lods
int3
sbb
xor
stos
xchg
inc
popa
cld
aad
stos
pop
hlt
out
jno
daa
test
cld
ds
movsb
test
ds
ss
mov
test
sbb
repnz
or
push
mov
es
inc
or
cmp
jbe
dec
test
insl
ret
xor
inc
pop
mov
fstl
push
mov
addb
in
xchg
or
stc
fnstenv
mov
insb
or
jnp
ja
xchg
pop
jp
inc
add
pop
clc
push
test
mov
or
add
enter
pushf
icebp
jo
fidivrs
push
mov
shl
cmpsl
adc
cmp
mov
mov
pop
out
xchg
jle
test
jecxz
and
dec
lahf
mov
lahf
iret
xor
cmc
mov
hlt
jae
push
or
ret
imul
dec
jb
call
jae
mov
icebp
fisubrs
mov
mov
ja
inc
cmpsb
repnz
sub
pusha
jne
pop
sub
inc
mov
adcb
cld
mov
pop
popf
push
out
lods
mov
mov
jo
out
loopne
ljmp
divl
xchg
stos
xchg
leave
add
bound
out
mov
jecxz
jno
std
xorl
std
movl
pop
imul
movsb
out
and
fs
test
sbb
jecxz
fsub
cmp
xor
mov
mov
call
dec
push
inc
icebp
dec
inc
sub
sbb
or
jl
mov
es
sarl
cltd
cmp
xchg
out
adc
lock
mov
negl
and
and
xchg
xchg
jecxz
leave
fcmovbe
dec
idiv
mov
jno
movsl
pop
xor
cmp
insl
pop
pushf
daa
pop
inc
and
jne
ss
inc
push
dec
mov
fsub
adc
punpckhwd
jne
.byte
