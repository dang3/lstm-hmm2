and
add
jmp
sub
insb
mov
into
jg
mov
out
movsl
xlat
xchg
dec
jg
rol
data16
sub
aaa
outsl
arpl
fisubs
cmp
and
push
pmulhuw
push
sbbb
adc
addb
add
inc
out
adc
mov
or
pop
sub
inc
clc
cwtl
push
push
out
iret
mov
ret
pop
fisttpl
outsb
push
repnz
sub
mov
hlt
sahf
cmp
inc
inc
shl
sahf
sar
lcall
cmpsb
and
dec
fistpll
test
jp
push
and
mov
inc
mov
out
imul
xor
adc
loopne
movsb
fwait
ds
dec
push
ror
xchg
out
fsubrl
mov
icebp
aaa
or
cmpsb
gs
sti
mov
mov
push
mov
inc
xor
call
repnz
iret
test
scas
xor
sub
mov
push
hlt
ljmp
icebp
xchg
mov
call
dec
call
jnp
int3
test
mov
mov
push
and
mov
sti
ss
icebp
ljmp
sub
ja
jb
bound
sub
ds
adc
pop
pop
fcoml
inc
lds
push
mov
pushf
xchg
and
sbb
fistps
sbb
jmp
icebp
fstl
add
push
movsb
push
rorb
dec
xor
popa
push
jecxz
add
jns
sub
lret
sahf
sahf
test
inc
push
xor
fmuls
add
mov
mov
and
hlt
mov
test
sarb
aaa
mov
imulb
push
jecxz
into
and
sahf
push
push
jnp
pop
cmp
sbb
push
ja
lahf
sbb
mov
mov
jge
and
jl
dec
pop
out
cmp
push
add
jne
or
sbb
inc
add
xor
imul
mov
push
enter
stc
mov
mov
addr16
add
xchg
fdivrp
movsb
xor
and
jnp
repnz
mov
ret
daa
add
add
icebp
push
mov
mov
aaa
or
dec
sub
aad
sti
dec
cmp
std
aas
add
xor
fs
push
nop
cmpsb
ret
cmp
push
mov
mov
pop
outsl
mov
nop
fcomp
cmp
fimull
mov
lea
int3
mov
mov
movb
repnz
push
pop
push
mov
leave
imul
mov
push
push
ja
neg
jle
stos
sub
shll
add
pop
int3
fisttps
ucomiss
mov
dec
xor
xor
mov
enter
pop
sub
das
and
xchg
clc
or
cmp
and
aad
dec
int
mov
mov
fsubs
mov
das
push
inc
xchg
jle
cmc
add
out
pop
and
rolb
aaa
fwait
add
movsb
dec
ret
cmpsl
fwait
xor
sarb
aas
stc
inc
mov
idiv
fnsaves
sahf
jl
aad
add
mov
pusha
arpl
mov
xor
mov
enter
roll
jg
fdivrs
jnp
push
mov
ret
lret
xchg
adcb
and
enter
jae
int
loopne
lea
mov
imul
or
rcr
xor
or
jp
or
mov
adc
add
mov
lea
cmp
jp
outsb
ficoms
add
jl
pusha
movsl
xchg
ljmp
roll
sbb
daa
ljmp
call
addr16
gs
xor
and
out
adc
out
jle
fwait
mov
bnd
pop
ljmp
push
lahf
lds
adc
push
lcall
sbb
leave
lods
mov
add
int3
push
cmpsb
dec
fsts
sbb
push
adc
lock
insb
add
decb
jmp
adc
adc
jo
xor
mulb
push
rolb
jne
or
cs
and
negl
mov
sbb
or
dec
or
loopne
fwait
or
mov
or
pop
cmp
fsts
dec
out
rolb
stc
stc
xchg
mov
xchg
int
and
cltd
aas
sbb
mov
icebp
sti
push
mov
mov
loopne
xchg
incb
xor
outsl
stc
fs
fisubrs
stos
or
js
jle
roll
fwait
push
in
inc
out
sbbl
rcll
imul
mov
int
inc
cmpl
jp
enter
xor
xlat
sbb
aad
int3
nop
mov
repz
or
fnstenv
cmc
test
scas
dec
add
packssdw
out
mov
push
vphsubwd
lcall
or
inc
repz
jns
dec
les
insl
ret
insb
sub
aam
pop
daa
cmc
cmpl
sub
or
jae
ss
cmpsl
cmp
xchg
nop
stos
out
pop
adc
pop
es
mov
add
fyl2xp1
insl
jle
mov
inc
mov
cmpsl
je
jmp
xlat
xchg
mov
inc
outsb
in
add
rcrl
in
sub
xor
mov
push
inc
push
outsl
cmp
xor
lret
cli
ljmp
fidivrs
sbb
test
pusha
andb
xlat
inc
stc
adc
ficomps
nop
mov
out
pop
xlat
xor
xor
mov
inc
lahf
nop
adc
jo
xchg
jno
jmp
enter
sbb
repz
jae
rcr
int
and
pushf
sbb
int3
sub
cmp
sub
mov
jo
or
lock
icebp
mulb
data16
or
test
cmp
les
inc
mov
add
aad
mov
jecxz
aam
cmpb
mov
sahf
outsl
jle
arpl
xchg
cmp
push
or
sbb
sub
pop
push
push
or
rcl
outsb
mov
push
lds
adc
outsl
gs
pop
inc
sbb
pop
xor
push
sbb
insl
xchg
test
jge
mov
push
rcll
test
mov
cltd
out
imul
xchg
pop
mov
aam
shll
test
orl
cmpl
in
sbbl
inc
mov
inc
out
jmp
and
push
cmpsl
into
orb
popa
adc
jle
and
xchg
icebp
test
test
outsb
stc
ficomps
das
mov
and
pusha
mov
mov
push
lcall
mov
cmp
out
out
or
pop
int
mov
popa
cmp
pop
xchg
and
insl
in
std
data16
sub
lret
jne
loop
hlt
adc
adc
fdivr
xor
fdivr
shrb
adc
mov
adc
arpl
lods
cld
sub
or
dec
ljmp
arpl
pop
push
xor
pusha
ja
les
nop
outsb
andl
les
ja
mov
insl
mov
dec
lcall
mov
and
pop
and
xchg
push
and
sbb
push
scas
aaa
cmpsb
data16
int
mov
adc
jle
xor
lret
xchg
imul
inc
push
and
ss
dec
js
adc
lock
inc
lcall
sarl
mov
scas
adc
or
cmpsb
int3
mov
adc
push
je
stos
lret
rcll
mov
mov
pop
and
nop
sbb
mov
leave
clc
or
std
pusha
cmp
iret
jecxz
xor
enter
sbb
jecxz
sbb
mov
pop
jae
in
ss
add
mov
add
and
xchg
in
daa
sbb
ss
mov
add
aam
xchg
scas
addl
mov
roll
mov
dec
jno
lock
dec
insb
pusha
mov
jg
stos
adc
sub
sbb
xor
mov
lret
ds
add
inc
cltd
fisttpl
in
in
jae
dec
adc
pop
jg
pop
mov
aad
xchg
dec
xor
pop
and
jle
cmpsb
in
xchg
scas
popa
xorl
call
or
mov
arpl
cmpsl
lahf
push
les
mov
mov
pop
leave
nop
push
dec
pop
std
mov
inc
push
js
mov
mov
inc
mov
repnz
addl
jb
test
mov
cld
int3
lret
leave
out
mov
sub
dec
sbb
out
push
ret
or
or
cmp
inc
or
mov
fucomip
fbstp
leave
push
sbb
mov
jns
movsb
nop
xorb
mov
cmp
push
cmpl
mov
push
stc
lahf
xor
in
xchg
cmpsl
orb
jp
negb
push
xchg
out
mov
xor
mov
push
adc
dec
test
cmp
sbb
sarl
bound
pop
into
pusha
pop
lods
subl
imul
aad
mov
pop
cmpb
imulb
jns
pop
insb
ficompl
int3
mov
inc
scas
stos
dec
lret
notl
inc
inc
data16
fidivl
sub
int3
test
jl
cmpsb
arpl
add
je
or
jmp
into
call
int3
repz
mov
ja
dec
pop
sub
xchg
fistps
fcmove
mov
pop
and
mov
bound
push
adc
lods
into
mov
test
cmp
cmp
imul
sub
loopne
out
xor
mov
jno
aam
mov
xchg
stos
or
dec
lds
or
insb
push
sub
xor
loopne
inc
xor
push
and
movsb
xor
popf
imul
push
jns
pushf
shlb
xchg
mov
dec
mov
pusha
out
in
mov
outsl
jl
pop
push
int3
rorb
loopne
jg
aad
or
in
pusha
fbld
and
xchg
cmc
fimuls
mov
jae
sbb
jg
jge
jb
sub
mov
out
and
clc
xchg
inc
mov
fstpl
mov
call
adc
adc
xor
nop
clc
and
sti
sbb
xchg
imulb
addr16
sub
or
jle
xchg
fimull
push
or
ss
inc
aam
fs
repz
add
mov
adc
jl
and
in
rorb
push
mov
js
lret
pop
imul
jns
xlat
inc
pop
dec
lret
sahf
xorb
cmp
add
insl
orl
lock
xchg
pop
sub
lods
dec
fidivrl
add
mov
cli
mov
aad
popa
iret
pusha
insb
ja
popf
insl
cmpsl
shl
sbb
and
movsb
inc
sbb
ror
in
or
popf
jg
mulb
out
sbb
cld
mov
neg
push
and
in
cmpsl
pop
aam
cwtl
lods
jl
adc
ja
mov
and
sub
ljmp
sbb
or
lcall
add
mov
xorl
add
jb
stos
mov
push
push
movsl
mov
loopne
push
lods
jae
imul
data16
mov
inc
mov
or
cltd
inc
jmp
jl
inc
and
loope
cmc
scas
xchg
dec
rclb
loop
push
mov
repnz
xchg
shll
mov
cmp
out
es
adc
sahf
stos
repnz
xchg
push
rcr
jg
int
inc
enter
xchg
or
xor
scas
in
aas
xchg
sbb
mov
jecxz
pop
pop
fmuls
push
add
ffree
add
mov
jne
test
addb
xchg
mov
xchg
jle
fistl
sub
sub
lcall
jmp
lock
dec
cmp
jge
mov
cmp
mov
add
xchg
or
jmp
push
or
icebp
sti
shll
pop
cli
xor
mov
ret
jle
out
out
and
xchg
cmp
repz
call
or
inc
pop
std
xchg
lret
mov
aad
cmp
xchg
or
std
sbb
test
add
rdpmc
aad
mov
sub
xor
pop
sti
add
test
ja
daa
push
xor
pop
cmp
lea
stos
or
push
sub
jmp
xorl
ds
sbb
xchg
arpl
xchg
add
jge
mov
mov
loopne
daa
adc
nop
fisubl
xchg
out
add
xchg
scas
mov
cli
xchg
cli
cmp
dec
cld
shl
dec
inc
test
fidivs
mov
mov
dec
pusha
rcrl
or
mov
cmp
and
mov
mov
pusha
aas
int3
nop
cmpsb
push
sbb
shrl
repz
inc
add
imul
shll
sbb
push
dec
mov
mov
orb
dec
pop
dec
out
idivb
push
xchg
lods
das
fstpt
inc
andb
push
lds
enter
xchg
and
test
jg
cld
cmp
lods
dec
or
movsb
loope
sbb
repnz
fidivs
rcrl
xor
jge
js
or
nop
in
sbb
cmpsb
adc
mov
test
mov
mov
pop
xchg
jns
inc
stos
sbb
loopne
cmc
mov
sbb
mov
bnd
pop
sbb
iret
and
lods
lea
shrb
scas
mov
jl
dec
inc
xchg
movsb
push
dec
orb
out
decl
jnp
or
dec
and
sbb
xlat
mov
sbb
imul
inc
jo
enter
push
mov
in
dec
fidivs
pop
or
inc
clc
cmp
notl
xorb
cmp
push
xlat
and
mov
or
pop
imulb
add
roll
and
sti
sub
sbb
lcall
xor
or
inc
pop
pop
mov
push
and
orl
ss
mov
mul
leave
lods
rclb
mov
add
sbb
stos
sub
pushf
jb
push
mov
push
loopne
xchg
stos
xchg
dec
sbb
adc
arpl
aad
xchg
push
fsubrs
mov
or
cld
in
sbb
cmp
sbb
xchg
xchg
ret
test
add
pop
leave
insl
mov
xor
aam
stos
stc
dec
mov
lar
and
test
rcrb
push
mov
add
sbb
les
adc
xor
std
jmp
ja
cmp
aaa
xchg
jno
mov
paddq
test
lods
jns
lret
mov
js
lock
pusha
stc
iret
or
movsb
xor
mov
and
add
mov
ror
ja
loope
jb
jnp
ss
dec
mov
fwait
push
fisubs
or
push
addb
insl
lret
xor
adcl
cld
xor
add
mov
subb
pop
xchg
sar
dec
xchg
jbe
mov
inc
bound
inc
inc
push
lret
sbb
cli
orl
ja,pt
test
push
inc
mov
movsb
xor
inc
xchg
sbb
imul
shll
mov
popa
push
cmpsl
mov
fwait
jecxz
xchg
stos
mov
imul
dec
int3
aam
push
enter
xchg
cwtl
cmp
gs
pop
xchg
inc
out
scas
int
cmp
push
jns
mov
out
mov
cmp
inc
jge
enter
ljmp
push
jnp
test
mov
dec
mov
mov
pop
bound
mov
stos
aas
pushf
mov
sbb
das
pop
stc
pop
jge
xor
mov
hlt
and
and
dec
pop
pusha
sbb
cmp
mov
mov
into
jmp
sbb
jae
cwtl
in
test
and
shr
push
int3
inc
jg
mov
or
sbb
dec
adc
xchg
pop
or
ds
xor
sbb
dec
rcrl
dec
push
add
mov
inc
xor
ucomiss
sti
cmp
cmp
jecxz
push
mov
sub
xlat
cmp
push
lods
insb
jne
aam
leave
stos
cmp
testb
inc
lahf
dec
cmp
push
popa
push
test
stc
cmp
cmp
je
cli
add
outsl
popa
inc
pop
ds
mov
xchg
jecxz
sti
add
js
sub
shlb
mov
push
sub
xor
daa
in
shlb
jp
jae
in
mov
mov
cmp
pop
mov
jb
mov
test
bound
dec
xor
lds
sub
popf
cmp
lods
push
stos
std
cld
xchg
mulb
imul
sbb
mov
jnp
lret
ret
pop
inc
movsb
xchg
or
mov
jl
push
call
dec
mov
mov
ss
cmc
push
adc
adc
and
push
xchg
incl
mov
mov
or
loope
pop
mov
mov
stos
mov
push
test
cmp
adc
push
mov
outsl
add
pusha
push
adc
cmp
mov
into
inc
mov
lcall
inc
loop
xchg
adc
enter
dec
sub
rorl
push
mov
call
or
repnz
mov
loope
jmp
jnp
inc
xchg
xchg
idivl
ljmp
add
pop
mov
int
adc
stos
sub
cmp
xor
inc
fcomip
aaa
push
cmp
xor
sar
jl
fcomps
sub
icebp
sbb
cmpsl
outsb
or
dec
repz
shl
fbld
arpl
or
jle
decl
adc
dec
pop
cmp
sbb
jmp
ficoms
lock
mov
popf
orl
sbb
push
sbb
jp
xorb
dec
insl
lods
out
cmpsl
adc
repnz
push
mov
dec
adc
lret
push
das
xor
pop
sahf
jmp
cmp
push
dec
rcr
fstpl
in
test
imul
add
je
fdivp
ss
cmp
cltd
sub
testl
shr
mov
cmp
inc
shl
pop
sub
jne
ret
jmp
ss
or
cmp
in
in
inc
addl
movsb
xchg
pop
ss
icebp
sub
icebp
mov
mov
aas
repnz
sub
clc
popa
sbb
gs
add
icebp
mov
inc
rorl
clc
insb
inc
fistpll
daa
sbb
add
inc
daa
xchg
xor
rcll
lea
gs
sbb
int3
fldl
fwait
xchg
ret
inc
nop
imul
popa
mov
hlt
test
test
enter
fstps
shll
inc
mov
xchg
push
mov
pop
xor
andl
pop
ja
mov
dec
push
lods
popa
jmp
sub
jecxz
add
mov
mov
and
rcll
fcompl
outsb
mov
popf
fldl
dec
vmovd
aam
xchg
enter
popf
inc
adc
in
push
mov
push
out
mov
arpl
fwait
ret
test
addr16
in
and
scas
ds
sub
xor
fimull
fucomip
adc
sarl
pop
aaa
adc
sbb
adc
inc
push
sub
inc
stos
out
sub
xchg
insb
mov
sbb
out
fs
out
mov
cmp
divl
cmpsb
jle
scas
jecxz
mov
lods
cmp
icebp
in
push
xchg
pop
or
xchg
xor
xchg
rolb
adc
adc
xchg
test
fcomi
dec
es
cmpsl
cltd
fisttps
jp
mov
inc
mov
jp
lahf
js
add
bound
add
cmc
xchg
cmpsb
or
inc
xor
sbb
pop
aad
inc
mov
sub
movb
iret
sbb
pop
addr16
lret
arpl
stos
mov
xchg
and
mov
adc
lods
adc
inc
add
fimuls
inc
fcoms
icebp
mov
jns
pop
push
pop
mov
and
bound
fidivs
daa
cld
aas
inc
test
fs
dec
mov
es
test
jp
sub
popa
leave
aad
push
aad
test
or
int
mov
push
jl
dec
mov
repnz
fisttpll
mov
mov
and
push
mov
int3
loope
rclb
adc
lret
push
lods
jb
dec
push
push
cwtl
jl
xchg
out
and
mov
popf
in
cltd
addl
test
cmp
cmp
clc
leave
test
out
cmp
push
in
cmovno
stos
imul
test
in
adc
pop
xchg
xchg
mov
imul
sbb
ss
cmpl
sub
pop
jge
loope
int3
arpl
repz
inc
jb
push
sub
imul
fnsave
in
rcll
pop
dec
shlb
jbe
dec
sahf
stos
mov
cmp
sbb
mov
popa
mov
test
mov
push
xor
push
cltd
jle
in
cmpsl
lret
shrb
jmp
sbb
xchg
fs
pop
loop
jmp
inc
pop
in
sbbl
pop
cmp
in
insl
outsb
sub
mov
or
jl
lods
dec
push
daa
shlb
push
adc
push
mov
jbe
leave
fwait
dec
xchg
jne
addr16
mov
movsl
and
and
pop
lds
adc
dec
pop
dec
mov
and
xchg
jecxz
jb
xchg
inc
jecxz
repnz
adc
inc
sar
jecxz
push
jno
mov
std
ds
xor
xorb
fwait
push
test
lahf
outsb
imul
pop
call
pusha
inc
mov
repnz
xchg
test
out
adc
mov
jo
adc
push
cmp
mov
pop
sub
dec
mov
mov
push
inc
imul
push
into
shlb
pop
cwtl
jp
add
inc
mov
outsl
dec
xchg
lods
out
stos
dec
xlat
sub
inc
xchg
shl
mov
insl
loopne
test
push
out
ja
mov
cs
cmp
mov
inc
jne
fmuls
inc
or
adc
push
push
cltd
in
data16
xchg
pop
aad
jg
mov
xchg
adc
adc
fnstcw
clc
dec
dec
adc
iret
cmp
inc
cwtl
mov
xchg
lahf
xor
and
es
or
arpl
popa
iret
dec
inc
sub
add
xlat
inc
mov
cmp
fstl
mov
sbb
cwtl
insb
pop
test
cmp
faddl
loop
jp
dec
bound
enter
les
daa
cmpsl
or
dec
in
pop
repz
loope
insb
rcl
jbe
popf
dec
in
fwait
arpl
stos
dec
lods
movsb
add
ds
fxch
inc
push
dec
incl
aaa
insl
sub
pop
mov
and
adc
push
outsb
icebp
fisubl
jl
andl
lods
push
aaa
call
xor
out
inc
mov
pop
int
hlt
jmp
notb
mov
sbb
insl
xor
or
mov
ljmp
es
icebp
lcall
cli
aam
mov
jmp
sbb
mov
push
adc
fistps
push
xchg
clc
orb
push
sbb
adc
in
jecxz
in
ret
xorl
sub
sarb
pop
jnp,pt
cmp
ljmp
mov
jecxz
sbb
js
jns
addl
push
ds
cltd
lods
pop
stos
shlb
pop
lcall
mov
push
out
lods
dec
jne
test
mov
cmp
mov
notb
xorb
jp
push
and
scas
je
jg
fidivrs
cwtd
cld
inc
inc
inc
jo
push
push
xor
push
mov
fiadds
dec
mov
add
pop
mov
mov
popf
add
popf
cmp
xor
xchg
out
mov
out
je
sub
mov
inc
movsb
loop
addr16
sub
sbb
jno
fcomip
inc
adc
or
jmp
addb
test
sub
out
adc
lret
sub
or
imul
shll
push
xchg
push
mov
call
test
out
pop
mov
in
cmp
and
in
pop
loope
xchg
push
das
mov
and
pop
jbe
gs
mov
hlt
add
bound
mov
push
mov
mov
adc
pop
adc
cli
jge
xchg
add
inc
rcll
mov
std
rorb
in
lds
in
dec
and
ds
cltd
scas
aas
lods
adc
dec
rorl
mov
add
mov
mov
push
cld
enter
pop
rol
cmpb
pushl
shrb
lods
test
lahf
mov
inc
js
jmp
push
sbb
shll
orb
mov
pushf
jmp
das
stos
jnp
dec
into
pop
arpl
ret
add
add
les
push
insl
adc
jb
fnstsw
push
xchg
mov
icebp
rcl
mov
xchg
adc
mov
dec
jns
mov
pop
shrl
ds
pop
cmp
lret
insl
xor
in
pop
mov
xchg
add
scas
nop
das
aad
xor
test
mov
push
xchg
mov
mov
icebp
jecxz
fldenv
xor
xor
out
add
adc
sub
xor
add
cwtl
ret
mov
gs
aaa
pushf
pop
mov
add
out
mov
daa
arpl
fdivr
lret
jecxz
cmp
add
pop
movsl
int
insb
in
and
push
jg
ja
mov
or
xchg
sbb
mov
add
dec
sub
xchg
test
in
aad
mov
clc
cmp
int
mov
inc
insl
add
xchg
inc
popl
mov
pop
push
mov
lcall
and
std
popf
xor
jae
insb
ljmp
ljmp
jno
push
dec
insb
push
popf
stc
aas
loopne
or
adc
inc
shrl
nop
push
gs
pop
adc
sub
add
data16
and
xlat
mov
mov
das
daa
fstpl
xchg
jno
in
pop
pop
mov
adc
push
push
mov
lret
mov
das
mov
pop
sub
stos
lds
int
adc
add
pop
mov
invd
mov
je
nop
jg
push
int3
in
inc
ror
daa
daa
xchg
out
mov
stos
dec
test
es
fs
push
mov
enter
in
arpl
mov
push
inc
in
mov
int
daa
imul
mov
ficoml
shll
iret
mov
imul
or
andl
sbb
sub
push
sbbl
add
adc
jo
cmp
cmp
stc
pop
jo
test
pop
cmp
fisubs
popa
cmc
xchg
dec
in
or
jns
adc
in
test
shlb
push
add
push
frstor
rcl
push
fcom
inc
popf
inc
je
mov
rcll
lock
adc
movsb
in
stos
lds
xor
cmp
jae
inc
loope
adc
dec
mov
cmp
jae
xchg
adc
adc
xor
cli
and
mov
cmpsl
jmp
rcrb
out
mov
push
js
ror
cmp
xchg
cmp
cmpsl
cmpsb
testl
pop
stos
sub
push
stos
int
outsl
jno
add
mov
pop
and
xchg
cmc
sti
loopne
aaa
pop
or
arpl
push
push
insl
je
push
rcl
xchg
sahf
pop
and
cld
lahf
mov
ret
xchg
and
aad
add
fidivrs
jmp
int
loop
cmpsl
in
jle
imul
sub
mov
gs
and
sarl
sub
cmpsb
in
rorl
jge
pop
xlat
call
rcr
mov
cmp
roll
dec
jg
pop
xor
mov
test
fnstsw
cwtl
jmp
lcall
adc
cwtl
mov
mov
inc
out
or
or
testb
push
enter
cmpsl
fists
das
sbb
aam
mov
lcall
arpl
mov
cmp
mov
in
test
js
dec
mov
jl
mov
imul
leave
in
subb
xchg
pushf
push
cltd
xchg
dec
xor
push
int3
pop
cmp
xor
out
push
jo
push
xchg
xchg
and
aaa
add
enter
add
int3
repnz
mov
std
mov
pushf
jmp
subb
jnp
sbb
lods
punpckhwd
cmp
ret
cmp
cmp
call
sbb
imul
pop
ja
add
inc
fdivl
jle
or
adc
lea
pop
fwait
stos
jo
lods
dec
sbb
jecxz
stc
shll
fnstenv
lods
jl
orl
and
sbb
xor
scas
test
and
mov
popf
dec
dec
mov
repz
sub
jns
push
mov
pop
pop
fidivrl
in
mov
sbb
test
push
dec
lcall
imul
sbb
orb
fs
cmp
outsl
push
sub
popf
sti
lret
lea
adc
jmp
mov
enter
fidivrl
jo
inc
test
lods
iret
inc
mov
mov
adc
cltd
js
mov
test
pop
and
aaa
mov
cmp
adc
lods
jge
aam
test
bound
das
lret
xchg
or
loopne
pop
lret
ljmp
mov
jmp
mov
or
in
push
das
imul
cs
sbb
mov
jp
loope
out
push
leave
inc
das
std
gs
push
es
adc
imul
lcall
jl
scas
sbb
mov
mov
fadds
rcr
jne
ret
jecxz
jno
pop
iret
loope
lods
das
mov
test
insb
mov
mov
enter
pop
cld
mov
mov
loope
inc
or
js
cmp
std
mov
sbb
test
jb
mul
sahf
jmp
xchg
popf
dec
imul
jbe
mov
cmp
jmp
mov
jl
pop
add
popf
jbe
mov
mov
pop
fdivrs
in
jns
sub
inc
das
pop
call
pop
cwtl
popf
mov
sub
fs
push
cli
mov
sub
adc
sarb
dec
mov
fcom
xor
outsb
ja
inc
sahf
jle
jbe
and
out
cwtl
rcr
or
addl
fimuls
std
testb
push
shll
and
and
sub
iret
mov
dec
notb
sbb
fcmovu
pop
adc
adc
movsl
mov
mov
sub
int
mov
lret
ficoms
sub
pop
inc
pop
mov
xchg
or
lret
aam
mov
pop
mov
mov
adc
clc
and
push
or
insb
mov
in
cmp
or
aad
jbe
cmp
je
adc
cwtl
out
push
or
jp
nopl
inc
mov
sbb
add
add
loop
outsb
inc
aam
dec
dec
outsl
mov
push
sbb
ret
mov
push
mov
pusha
out
je
ret
cmp
inc
scas
enter
popf
das
xchg
mov
es
and
mov
jae
enter
sub
and
ret
jae
xor
inc
nop
test
leave
push
clc
mov
inc
bound
xchg
arpl
jle
test
sub
icebp
cmp
jbe
paddq
movsl
clc
ds
or
scas
jmp
jbe
outsl
cli
bswap
inc
mov
stos
das
ja
ljmp
dec
adc
and
das
jns
test
dec
addl
jg
sbb
cmp
xor
push
pusha
mov
gs
xchg
ja
imul
cmpsb
and
push
dec
fildl
mov
das
mov
and
sub
jno
jle
int3
leave
inc
mov
movsl
mov
out
loop
ljmp
xchg
add
iret
add
or
adc
push
lahf
and
pop
xlat
fs
pop
lcall
fstpl
ljmp
test
xlat
cmp
xchg
jno
pop
push
jne
xchg
addr16
xchg
loop
adc
lahf
addr16
sahf
cmp
sub
ret
jl
mov
mov
icebp
testb
add
adc
jae
rolb
dec
fnstsw
mov
mov
jge
insl
sub
fwait
jl
int
sbb
and
or
jle
out
pop
out
jl
scas
enter
cmp
inc
jne
pop
call
fbstp
leave
cmp
sti
add
dec
sbb
mov
sub
aaa
push
xchg
push
cmpsl
mov
mov
adc
and
xchg
aaa
inc
imul
lret
sbb
aad
add
cmp
mov
iret
inc
outsl
in
jp
insb
out
jns
and
sbb
inc
pop
cmp
lret
sbb
xor
cmp
lahf
push
jno
mov
sarb
insb
test
iret
push
push
in
fs
mov
idivb
xchg
sub
notb
pop
dec
fisubrl
sbb
add
adc
jbe
dec
dec
scas
fmuls
out
repz
pop
out
fdivl
mov
inc
decb
adc
cmp
aas
aas
fstl
mov
add
cld
cmp
rolb
mov
shl
jecxz
and
cmp
out
cmp
pop
adc
mov
loope
insb
jp
add
iret
stc
in
pop
push
rolb
mov
inc
cmpsb
call
out
xor
test
shr
lret
or
loopne
xchg
jge
movsl
add
jb
xchg
call
movsb
in
sahf
lea
jmp
daa
mov
psubd
jle
stos
fs
sub
cwtl
push
push
lods
lret
pop
dec
sbb
pop
jle
ret
or
xchg
pop
sub
jno
cwtl
scas
lcall
push
out
xchg
mov
xor
sahf
pop
mov
lahf
pop
xchg
negl
mov
cmp
out
lret
cmp
add
fsubp
repnz
stc
cltd
repz
fdivp
imul
xchg
push
dec
mov
adc
mov
sbb
cmp
sbb
xor
adc
sub
push
push
inc
pop
lcall
gs
add
sub
ja
mov
addb
aam
cmc
mov
aaa
inc
mov
ljmp
call
sbb
push
std
or
in
lret
xorb
mov
and
mov
movsl
jo
and
cli
mov
inc
mov
nop
and
xlat
mov
fs
adc
inc
pop
and
jp
in
nop
inc
shld
rcl
or
xchg
xchg
out
mov
cmp
mov
out
xor
mov
push
inc
aad
lods
cmpsl
gs
roll
add
imul
lock
stos
ss
xor
aas
lahf
in
push
test
mov
hlt
pop
xchg
add
pmaxub
sbb
adc
stos
out
xor
or
push
data16
rclb
loopne
push
pop
in
sbb
add
push
das
lret
xchg
dec
sub
xchg
cmp
shl
dec
or
inc
orl
bnd
mov
loope
test
aas
adc
sub
lods
aad
dec
xchg
or
sbb
sub
cmp
xlat
les
xchg
aad
in
insl
ret
mov
mov
and
mov
add
push
mov
xchg
and
out
and
mov
sbb
push
add
push
push
adc
pop
sub
push
in
jno
cltd
out
cmp
fldenv
lods
fiadds
rorb
shr
rclb
and
mov
shll
int3
pop
dec
ds
jge
inc
cmc
jo
out
scas
inc
ds
or
mov
fldl
mov
dec
dec
ja
adcl
fldt
sbb
stos
pop
outsl
push
push
insb
jle
jmp
inc
sub
or
rorl
clc
fadds
repz
mov
mov
fs
jp
sbb
jecxz
dec
dec
stc
mov
les
aad
jge
push
add
xor
sbb
loope
incb
push
repnz
xchg
sbb
push
hlt
aaa
out
loope
das
add
lds
adc
adc
stc
sbb
mov
sar
hlt
sbb
pusha
sub
dec
cmp
lahf
push
inc
mov
add
pusha
inc
mov
jne
cs
jo
sub
jo
pushf
xor
sarl
sbb
sahf
sbb
pusha
xor
adc
cli
stc
adc
xchg
push
jnp
xchg
loopne
aam
xchg
push
into
push
lods
add
and
xor
fstps
pop
mov
mov
mov
fstpt
sahf
sub
stos
or
cld
fldcw
cmp
pushf
pop
pop
xchg
cmp
loopne
mov
scas
jecxz
inc
mull
push
xor
scas
ss
loope
jb
push
or
imul
add
jle
xor
cs
adc
faddp
out
jo
mov
xor
popa
jns
aad
lds
mov
jmp
lds
mov
lods
js
xlat
subl
ja
stc
fsts
jb
jno
sub
lock
cmp
sub
sbb
mov
aad
clc
xorl
jle
enter
sub
inc
out
mov
cmp
pop
dec
sub
xchg
mov
add
jns
cmpsl
stc
pop
pop
mov
aas
out
xchg
or
xchg
pop
out
cmpsb
popa
ret
xlat
cmp
ss
out
pop
fidivrl
scas
sub
xor
cmp
push
mov
mulb
cmc
clc
popl
adc
xchg
jmp
push
in
movsb
mov
shlb
and
or
cmp
iret
rcrl
movsb
xor
add
adc
add
xor
add
mov
sub
xchg
or
fadds
sar
loopne
mov
jge
fnsave
xorl
js
xor
sti
mov
in
or
insb
dec
std
aad
cmp
and
and
sub
cmpsb
rorb
pop
pop
or
or
lcall
jno
ds
mov
inc
mov
xor
pop
push
out
dec
sub
lock
pop
add
jge
out
jg
push
mov
or
dec
xor
enter
xchg
or
pop
mov
push
sub
shll
sbb
pop
pop
and
mov
dec
pop
push
xchg
movb
icebp
push
sbb
sub
lcall
push
insl
aaa
in
xchg
cltd
pop
push
cli
cltd
sti
addr16
mov
sbb
pop
loop
push
dec
fisttpl
lock
std
cmp
push
or
aad
mov
fstpt
push
mov
fistpll
outsl
insl
xchg
and
hlt
xor
jp
or
jle
popf
dec
add
gs
dec
stos
jle
mov
pop
push
jg
sbb
dec
xorb
jge
lock
and
push
adc
aad
sub
sti
xchg
xchg
mov
sub
rolb
js
mov
jle
add
add
mov
and
lret
scas
xor
adc
jle
rclb
xor
jl
mov
hlt
test
mov
add
xor
cmpsl
mov
les
loope
inc
cs
fisttpl
cmp
lods
and
hlt
push
dec
xchg
leave
adc
dec
iret
xchg
cli
push
rorb
clc
ja
jbe
xchg
pop
xchg
in
dec
pop
pop
andl
add
mov
lret
pop
icebp
fsts
jo
xor
inc
cld
lods
mov
mov
lea
jg
cli
jle
int
push
and
xlat
pop
stos
adc
fnstsw
sbb
inc
movsb
int3
mov
xchg
mov
mov
fcoms
adc
xor
pop
mov
inc
push
insl
or
imul
fucom
insb
hlt
mov
push
xchg
cmp
mov
add
cmpsb
movzbl
mov
mov
xchg
ret
inc
fildll
sub
sub
mov
cmp
mov
mov
pop
jbe
mov
insl
stos
loop
add
jmp
jae
mov
popf
and
popa
movl
ror
mov
adc
pop
cmp
cld
xor
mov
filds
cld
mov
fldt
and
inc
push
jge
sarl
mov
xor
mov
push
stc
aad
and
fidivrs
stos
pop
pop
daa
inc
fcoms
orl
mov
mov
jns
cmp
imul
inc
loopne
aad
cmpsb
jo
jbe
cmp
adc
out
dec
push
testb
inc
jmp
cmpsl
insb
pop
mov
call
xor
bound
sbb
iret
cmp
and
popf
test
jge
adc
inc
pushf
xor
sar
xchg
and
dec
in
and
mov
xor
test
imul
sub
lods
mov
dec
sbb
jb
inc
and
rcll
repnz
daa
insl
hlt
fwait
hlt
xor
iret
js
rcrl
into
adc
mov
pop
sbb
repnz
jbe
call
andb
sarb
or
in
push
jbe
mov
mov
loope
xchg
enter
push
arpl
xlat
in
fwait
mov
lret
shlb
lahf
sub
mov
pop
cwtl
xor
adc
aaa
ficoms
sbb
and
iret
mov
lods
aaa
fisubl
sbb
pop
add
scas
cs
cmp
jp
enter
push
inc
adc
dec
jp
jnp
cld
add
or
je
int
popa
jbe
test
cmp
pop
lret
add
test
cwtl
mov
fstps
test
fadds
mov
or
and
ficoms
xor
and
jno
pop
sub
inc
xor
std
das
add
mov
jnp
adc
es
cmp
lcall
sub
data16
fcompl
filds
and
cmovbe
sahf
mov
xor
lcall
mov
mov
hlt
mov
and
jp
ljmp
cmpsl
ljmp
imul
dec
mov
imulb
std
mov
mov
jns
repnz
push
in
xor
fsubl
adc
push
rolb
test
lea
jge
xchg
or
pop
push
in
pop
aad
popa
dec
add
push
inc
mull
ret
mov
popf
loope
mov
mov
addr16
in
test
pop
mov
lock
mov
test
jge
inc
dec
shl
leave
loop
out
fsubr
or
dec
das
pop
cmp
or
sti
pop
push
and
sub
inc
test
mul
arpl
rorb
popa
dec
or
movsb
jecxz
lock
mov
xor
push
lods
data16
xchg
cmp
inc
enter
sarb
mov
je
out
movsb
mov
xor
cld
mov
dec
inc
mov
outsb
call
fldl
cmp
cwtl
jmp
lods
lret
adcl
iret
loopne
test
clc
pop
mov
sub
xorl
dec
gs
mov
fsubl
test
in
fsts
cwtl
xlat
mov
add
xchg
lret
insl
pop
ljmp
push
popf
fisttpl
jne
lret
or
add
dec
ds
sti
ret
xlat
scas
ficompl
aaa
cmp
jg
jo
jns
dec
insb
cli
std
add
adc
lcall
test
jo
cmp
cmp
cmp
mov
enter
inc
lahf
mov
call
mov
xchg
add
addr16
ljmp
cmp
xchg
xor
into
xor
push
cs
frstor
outsb
scas
cmp
pop
or
pop
cmp
pop
push
ja
mov
dec
insl
stos
mov
add
fwait
add
sbb
jno
int
dec
lcall
loope
inc
sub
dec
inc
bound
inc
xchg
sub
cmp
xor
mov
cmp
rorl
xor
add
push
vxorps
fdiv
mov
mov
add
repz
ljmp
xchg
in
jmp
jge
sti
leave
push
adc
or
stos
sbb
add
in
adc
xor
xchg
imul
gs
sbb
loop
jo
inc
add
and
pop
test
adc
jo
mov
adc
ss
xchg
and
call
enter
loopne
dec
in
jge
add
shr
sahf
mov
fdivrl
mov
xor
or
lods
dec
push
mov
sub
in
mov
cmp
pop
jecxz
cwtl
les
push
aam
out
mov
mov
mov
pop
int3
push
inc
inc
aaa
jbe
sub
nop
inc
sub
add
test
jno
sahf
or
sbb
fisubs
sar
jge
lea
xchg
sub
xchg
cmc
xor
sub
subl
xchg
andl
xlat
popf
rorl
cmpsl
push
into
inc
pop
and
mov
fistps
decb
adc
sub
sahf
xchg
sbb
mov
popa
loop
pop
xor
cwtl
pop
adc
pop
movsl
and
adc
or
popf
fs
aas
pop
or
xchg
std
push
sub
jb
or
cmp
mov
dec
fwait
and
sbb
xor
sbb
test
sbb
jbe
push
and
lds
lret
or
cmc
or
test
add
and
scas
scas
inc
push
dec
push
ss
scas
push
pop
lret
insl
lcall
adc
add
xchg
push
mov
cmp
cmp
hlt
xchg
aaa
insb
sub
lret
sub
dec
cltd
gs
mov
pop
dec
stos
pop
cmp
mov
loope
movsb
jl
movsl
mov
mov
mov
in
and
pop
push
iret
js
xchg
mov
adc
daa
cmp
and
inc
out
mov
jl
ss
in
xor
cmp
cs
insl
mov
mov
add
pusha
cmp
mov
pop
cltd
nop
pop
jae
aad
das
mov
sbb
cmp
enter
and
fists
xchg
mov
test
shlb
popa
xchg
repnz
xchg
xor
pop
jg
push
ljmp
jae
sbbl
repnz
test
sahf
rolb
dec
fwait
sub
or
clc
jle
xchg
pop
fs
scas
jg
cltd
cli
mov
push
imul
add
cmp
inc
push
adc
jae
lods
xchg
lods
mov
lret
jmp
mov
jnp
xchg
sub
lcall
outsl
push
jmp
mul
in
ss
sahf
lock
popf
dec
mov
jp
xchg
outsb
xchg
lock
call
cwtl
or
pusha
out
jbe
gs
ja
lahf
out
mov
stos
in
dec
ljmp
fcmovbe
mov
cmc
mov
fwait
mov
scas
dec
cmp
or
into
jnp
pop
fnstsw
in
nop
scas
movsl
xor
adcl
dec
test
or
test
and
and
lahf
jo
sbb
inc
mov
dec
add
jg
sub
push
outsl
aam
inc
and
push
test
into
das
cs
sub
xlat
inc
cmp
pop
dec
and
nop
xor
mov
push
sbb
push
cmp
addr16
and
outsb
push
push
frndint
loopne
pop
adc
adc
adc
sbb
mov
jge
nop
sbb
mov
cmp
cmp
add
addb
mov
pop
loope
sbb
mov
gs
push
sub
jle
insb
add
je
leave
popf
scas
loopne
cmp
fwait
xchg
in
fwait
clc
xchg
xchg
jecxz
pop
cmpsl
ljmp
mov
inc
rcll
and
jle
and
stos
sahf
add
in
fsubl
lods
ja
mov
icebp
push
or
je
push
test
mov
adc
xchg
and
xchg
push
shll
mov
addr16
or
mov
mov
cmp
andl
add
jno
mov
outsb
cmp
pop
adc
add
jmp
mov
jns
lcall
mov
or
xchg
add
add
xchg
mov
shl
call
fidivrl
sub
jnp,pn
out
mov
divl
ret
stos
mov
add
inc
jmp
adcb
mov
jl
lock
push
xchg
pop
mov
icebp
jmp
movsl
mov
das
pop
cmpsl
fwait
je
sub
mov
es
cmp
inc
in
cs
int
mov
jo
cmp
mov
clc
cmp
cltd
fdivrs
ja
mov
frstor
adc
cmp
sbbb
pusha
shrb
push
nop
stc
loopne
and
jns
fstps
nop
sub
pop
mov
xor
fnsave
dec
lods
fcompl
bt
sub
out
pushf
jbe
pop
jmp
sahf
movsl
xor
in
outsl
cmp
push
hlt
lods
out
rclb
mov
add
daa
xor
mov
loop
in
push
rcrb
inc
mov
fisubrl
cmp
add
sub
jbe
jo
jge
mov
sub
mov
iret
dec
mov
jno
and
fwait
insl
add
push
ret
test
out
mov
inc
inc
mov
push
sbb
sub
pop
shll
orb
xor
add
xchg
sub
fs
jp
dec
pop
mov
shl
pop
sahf
cld
xchg
xor
lods
or
cmp
xlat
mov
push
push
out
jmp
mov
scas
dec
xchg
push
push
rcll
pop
mov
int3
popa
push
pop
push
pop
dec
sub
jnp
xchg
mov
fsts
jae
dec
xchg
fisubl
loopne,pt
fst
dec
orb
inc
inc
jl
int3
mov
orb
cmpsl
add
xlat
insb
jnp
sub
jle
jecxz
pop
stc
xchg
aaa
push
sbb
fsubrp
insb
je
and
adc
and
test
lcall
sbb
push
or
mov
lock
repz
insl
sahf
ror
inc
aaa
pop
pop
leave
inc
dec
cmpsl
lret
or
lock
dec
mov
sbb
cmp
adc
jo
mov
inc
daa
popl
iret
inc
into
out
jns
ja
movsl
out
movsb
cmc
cltd
out
cmpsl
les
aaa
push
xchg
or
mov
js
hlt
addl
fsubrs
nop
adc
mov
adc
fwait
or
aaa
mov
adc
outsb
fidivs
push
popa
sahf
jno
pop
lea
pop
test
push
lahf
shrl
jb
es
jg
fs
pop
in
test
popf
or
pop
sub
les
pop
cltd
in
pop
fwait
nop
pop
mov
cli
or
pop
xchg
mulb
xlat
sbb
stc
jg
nop
jmp
cmp
fiadds
cmp
sahf
jbe
mov
and
push
jns
mov
jb
cwtl
jl
inc
mov
mov
inc
daa
mov
ss
push
sub
lock
js
aad
jno
sub
mov
xchg
fbstp
add
enter
add
mov
jo
test
pop
xchg
mov
je
inc
sbb
sub
mov
add
std
rclb
mov
mov
push
mov
jbe
mov
adc
pop
mov
xor
push
fiadds
or
inc
add
mov
ja
xchg
rcrl
push
mov
int3
inc
fucomp
push
mov
sahf
lea
add
jmp
mov
bound
ljmp
or
jg
dec
out
xchg
mulb
sbb
jne
xorb
and
nop
and
insl
xor
mov
dec
test
idiv
push
mov
out
stos
push
mov
clc
mov
int3
fisttps
sub
aaa
pop
dec
jmp
subl
mov
and
pop
cld
addr16
clc
and
and
rorl
dec
faddl
arpl
lds
adc
xchg
sub
adc
mov
adc
jbe
add
int3
scas
inc
ja
push
sub
sbb
xchg
out
add
xchg
bound
mov
arpl
push
or
push
jge
insb
testl
js
xchg
push
arpl
dec
adc
adc
pusha
jmp
mov
xchg
push
fisubs
xor
adcb
popa
adc
adc
movsb
inc
out
and
push
fidivl
sti
jne
dec
ja
lock
ret
xor
jl
and
sbb
rorb
test
roll
fimuls
aad
and
leave
enter
lods
enter
out
arpl
or
rorb
test
xchg
pop
mov
insb
imul
pop
dec
popa
shrd
xor
pusha
cld
inc
add
xchg
out
test
dec
jnp
fcoml
xor
inc
pop
pop
pop
leave
inc
js
and
pop
subl
xor
sub
mov
push
mov
jp
movsl
add
ret
xchg
pop
dec
and
test
xor
test
insl
in
inc
int3
lea
jge
test
mov
push
pop
cmp
scas
add
ljmp
incb
scas
insl
cmp
leave
jns
repz
test
cmpsb
cmp
mov
pop
add
out
dec
sbb
hlt
mov
cld
mov
pop
pop
jne
repnz
test
popa
stos
inc
test
in
popf
pop
cmpsl
mov
dec
inc
out
aas
movsb
mov
imul
subb
adcl
adc
mov
mov
addr16
mov
mov
jmp
or
inc
ret
mov
dec
inc
adc
sub
cmp
jae
leave
testb
sub
mov
stc
pop
or
out
and
and
cmp
fdivrp
mov
and
ja
dec
fsubrl
pop
out
jb
js
outsb
gs
add
inc
sub
or
inc
mov
mov
cwtl
in
cltd
fcompl
cltd
lret
data16
sub
mov
sbb
movsb
pop
std
mov
lods
call
xchg
mov
push
fwait
xlat
insl
bound
sub
mov
cwtl
or
push
loope
stc
and
outsb
int3
clc
repnz
jns
in
test
outsl
dec
icebp
add
mov
jne
enter
push
out
sbb
ja
cmp
cltd
insb
dec
push
lret
sub
testb
push
ljmp
popa
and
mov
push
cltd
inc
mov
in
add
daa
push
dec
push
loop
push
dec
sub
jle
icebp
cmp
jbe
push
jnp
jmp
add
cs
sub
inc
popa
inc
or
gs
pop
xchg
lahf
mov
inc
mov
pusha
push
subb
mov
nop
imul
outsl
cmp
int
mov
cmpsl
dec
fidivs
and
dec
out
stos
mov
testb
sub
mov
inc
call
outsl
lcall
push
int3
hlt
roll
pop
iret
and
push
xchg
cmpsl
sbbl
or
test
pop
repnz
sub
xor
popf
lcall
dec
pop
mov
xor
rcrl
xor
in
sub
hlt
in
loopne
filds
mov
pusha
mov
scas
aas
and
add
lock
pop
or
sti
or
int3
subl
xchg
xor
add
rcl
mov
xchg
cs
dec
pop
call
ret
sub
cmp
int3
pop
pop
pop
ds
sbb
sbbb
mov
xor
cmpsl
jecxz
mov
ljmp
mov
data16
or
inc
or
and
loopne
int3
add
or
mov
nop
pop
movsl
or
loop
ret
mov
negl
pop
xor
sub
sti
jne
mov
inc
sti
dec
jecxz
sarb
dec
sbb
mov
cmc
cmp
cmp
xor
dec
mov
mov
cmc
inc
pop
jecxz
in
lods
mov
jns
int
fcomi
ret
xor
mov
clc
mov
and
add
lock
orl
sti
mov
pop
out
cmp
idiv
sbb
xor
xor
leave
leave
add
adc
mov
mov
aas
dec
and
dec
push
push
fistps
cmp
mov
xchg
sub
cmpsb
cmp
pop
fidivrl
je
movsl
dec
lret
nop
lret
mov
popa
and
pop
xchg
into
addb
rolb
sbb
call
add
shl
push
adc
cmp
adc
xchg
xlat
dec
test
jne
jnp
and
out
daa
cld
jae
cmpsl
or
rorl
jbe
mov
sub
and
test
fistpll
mov
jle
xor
stos
repz
out
movsl
loop
sahf
xchg
or
cli
je
mov
popa
jmp
das
pop
leave
ret
inc
mov
xchg
or
cs
es
and
xor
add
test
movsb
lods
dec
sub
aas
sub
aas
mov
mov
sbb
add
or
je
and
xor
dec
jae
mov
mov
cmp
jge
popa
and
or
push
dec
mov
push
push
mov
iret
xchg
ret
stos
clc
pop
or
mov
outsl
pop
loopne
insl
xor
push
mov
dec
test
cmp
fimuls
in
dec
mov
inc
xor
add
or
pop
jp
scas
out
inc
fs
clc
xchg
pop
pop
add
pop
xor
aas
adc
or
rcrb
pop
jge
hlt
mov
movzwl
testb
mov
push
xor
in
cld
movsl
add
sbbl
fwait
mov
mov
loope
hlt
add
scas
addl
xor
lret
sti
ja
sahf
bound
mov
inc
xchg
out
mov
mov
in
xor
int
and
shrl
or
xchg
repz
call
mov
xor
leave
mov
sbb
cmpsb
pop
fisubs
rcrl
movsl
test
ret
insb
adc
orl
insb
out
fwait
adc
mov
std
lret
xchg
mov
imul
inc
rorl
out
lahf
add
subl
lcall
or
int3
aad
sub
dec
mov
jecxz
mov
jmp
andl
xor
xchg
pop
mov
dec
call
cwtl
ficomps
movsb
iret
dec
les
divl
adc
orl
popf
mov
dec
jne
dec
sbb
iret
ret
dec
shlb
leave
mov
loopne
jns
stos
sub
popa
fidivl
gs
inc
dec
cli
cli
int3
jle
dec
dec
fisubl
pop
sbb
xchg
xchg
adc
lock
lret
mov
test
mov
and
adc
dec
add
jp
test
loope
enter
pop
cwtl
ljmp
cmp
je
push
sub
daa
clc
clc
rorb
adc
jbe
lcall
mov
ficomps
add
push
sub
hlt
iret
dec
add
push
cmc
and
dec
bndldx
popa
dec
bts
add
lret
push
mov
ficoml
inc
scas
movsl
in
int
loopne
ror
aas
mov
out
out
loopne
mov
scas
aas
dec
ret
pop
mov
adc
mov
xchg
add
in
sbb
adc
dec
mov
and
call
cmp
lds
lds
rolb
popa
mov
ss
subb
or
xor
js
jecxz
ljmp
cli
xor
mov
outsl
pop
or
imul
and
sti
jmp
enter
pop
cmpb
xlat
mov
jne
clc
add
sbb
ja
pop
inc
xchg
dec
jbe
jb
push
inc
loop
push
push
mov
fnstcw
push
lret
pop
cmp
test
dec
dec
clc
js
repz
test
lret
xchg
sub
xor
js
and
mov
and
and
sub
lret
cmp
js
or
sub
fsubrp
jmp
push
mov
nop
adc
cmp
push
pop
cs
loope
pop
mov
add
cmp
popf
inc
push
xchg
inc
enter
adc
inc
jle
das
stc
add
fidivl
mov
dec
pop
sahf
cs
scas
lea
push
loope
mov
mov
pop
xor
fldenv
sbb
lcall
sbbb
mov
jb
sub
aas
stos
mov
mov
shrl
sub
dec
data16
push
sahf
mov
sbb
push
sub
jl
cmpsl
dec
mov
lret
mov
mov
xchg
sbb
dec
lcall
and
push
push
push
adc
mov
pop
stos
sbb
dec
dec
popa
sti
add
hlt
xor
xchg
mov
push
fisubs
jnp
dec
jb
call
gs
add
into
das
adc
xor
jg
xrelease
not
jge
mov
mov
icebp
js
in
push
mov
fwait
inc
and
lea
in
in
daa
mov
sbb
dec
xchg
dec
sub
add
push
repz
sbb
fisttps
mov
xchg
lds
bound
lret
xor
mov
stos
jle,pn
call
dec
push
out
mov
sub
mov
aas
data16
pop
pushw
mov
adc
xchg
fstl
mov
hlt
mov
dec
dec
int
push
ficoml
xchg
xchg
cmpsl
sbb
rclb
push
jmp
les
pusha
test
dec
mov
inc
xlat
adc
int
insb
sub
lds
inc
ret
repz
mov
scas
mov
push
adc
icebp
je
je
addr16
push
dec
in
das
xor
mov
pop
jae
in
mov
jae
rcrl
in
sarb
les
sub
lahf
fcoms
jo
lret
push
aas
cwtl
pop
jae
out
push
adc
test
scas
push
je
add
stc
ds
inc
ret
cmp
ret
lret
xor
adc
cltd
cltd
add
ds
test
fadd
out
out
sti
mov
xor
xlat
push
jo
add
aam
fsubrl
adc
rol
movsl
push
movsl
jb
pop
loope
fcmovnu
pushf
jg
rol
mov
cmp
stos
jl
or
jae
jnp
in
iret
add
out
mov
sahf
jae
add
xor
in
push
push
or
movsb
and
mov
ja
data16
jle
adcl
adc
out
roll
gs
push
adc
call
cmpb
or
mov
stos
pop
fistpll
lds
mov
lods
cli
mov
lods
mov
inc
int
mov
jl
adc
das
lds
jecxz,pt
les
dec
dec
frstor
scas
and
pop
or
mov
decl
fnstcw
int
movsb
xorl
mov
js
cmp
sbb
ficomps
push
or
ja
addb
cli
push
fstpt
loop
sbb
push
mov
inc
adc
or
pop
add
or
jmp
outsl
xorl
out
fstpt
std
in
or
adc
enter
scas
sbbb
mov
lret
push
adc
aad
sub
subb
or
xchg
jle
js
xor
sbb
scas
je
jnp
addr16
clc
fwait
test
mov
sbb
test
pop
sbb
jne
cmp
push
push
ret
data16
sub
sti
repnz
cwtl
jle
mov
or
test
test
pop
addr16
mov
jecxz
xchg
adc
lret
cmp
push
scas
pop
dec
jnp
lods
inc
dec
jnp
vxorpd
arpl
inc
add
jb
mov
xchg
push
mov
sub
test
inc
mov
cmc
and
xor
adc
jno
xrelease
and
rorl
push
sbb
mov
mov
icebp
cmp
testb
mov
stos
dec
pop
sub
dec
xor
es
and
test
cwtl
addr16
fildll
popa
stc
shrl
cs
fwait
subl
mov
shlb
dec
cwtl
popf
idivl
sti
cmp
sub
xor
mov
test
fnstcw
jmp
test
ja
fisttpl
dec
fs
or
cld
scas
and
enter
out
xor
das
ljmp
sbb
or
pushf
fs
movb
ret
cmp
inc
or
rcrb
push
pop
adc
jmp
and
fsubl
rorb
pop
jmp
and
jb
scas
movsb
jbe
mov
push
fs
push
cltd
dec
rep
and
push
icebp
loop
aad
mov
mov
arpl
jno
jo
pop
xor
inc
inc
popf
loop
mov
or
mov
out
add
push
sub
mov
and
inc
pop
cmc
sub
mov
pop
sub
ror
incl
mov
addr16
in
and
mov
sbb
addr16
mov
cld
mov
sbb
subps
addb
pop
jg
cmpsl
add
insb
jb
lock
inc
xchg
and
mov
mov
lods
cwtl
mov
les
std
jae
lret
push
push
scas
pop
push
mov
swapgs
test
xchg
popf
jg
cmp
icebp
pop
cmpsl
mov
mov
jge
jp
int
xor
push
inc
loope
add
jge
popf
mov
and
mov
in
mov
push
xchg
cltd
lods
sarb
inc
cwtl
scas
jae
and
pop
movsl
lods
inc
aad
addr16
hlt
gs
fcoml
stc
cmpsl
sti
jns
push
mov
push
cmp
inc
jnp
xchg
xor
or
leave
loop,pt
mov
cld
dec
push
sub
add
test
push
jns
pop
scas
add
mov
pop
out
jae
daa
fwait
and
mov
pop
dec
xor
subl
push
xchg
data16
mov
inc
ret
push
xchg
inc
and
mov
loop
into
add
pop
xadd
repz
fadds
xchg
mov
mov
stos
popa
mov
sub
cld
sub
outsl
out
fs
movsb
iret
sub
ss
out
gs
mov
pop
pop
jge
dec
cmp
test
jle
pusha
dec
pop
cli
rclb
sub
sbb
imul
inc
sysexit
stos
xchg
mov
popa
je
jae
adc
inc
xor
and
repz
cmpsb
movsb
push
and
adc
fdivrl
out
popa
dec
push
jae
push
std
push
sbb
jbe
push
jae
mov
sbb
gs
repnz
ljmp
cld
mov
inc
ficoms
or
cltd
mov
inc
cwtl
mov
xchg
mov
ljmp
adc
jo
mov
mov
test
jmp
repnz
xchg
xor
test
int
pop
pop
imul
mov
jno
fstl
jle
pop
jge
pushf
scas
pop
cmp
scas
adc
xor
mov
pop
hlt
std
jne
jle
mov
fcmovb
jae
test
pop
xchg
push
maxps
scas
stc
adc
into
notb
pop
pusha
mov
adc
aas
pop
fstpt
notl
addr16
mov
jmp
scas
pop
adc
out
lods
pop
clc
fcomps
ror
arpl
dec
xchg
mov
arpl
sahf
fistl
jp
inc
ret
add
push
jecxz
jae
mov
into
pusha
arpl
add
mov
popa
push
outsb
mov
pop
shlb
mov
xchg
mov
movb
movsl
imull
imul
and
lret
add
or
divl
arpl
mov
lahf
cld
inc
mov
insb
xchg
out
out
lret
ss
pusha
call
xor
in
cmpsl
mull
sbb
pop
test
add
repz
scas
pop
popf
push
lret
add
cmpsl
mov
fiadds
out
aas
or
lcall
and
or
ret
lret
push
lods
repnz
mov
jbe
cwtl
lret
jge
jno
mov
push
les
test
push
inc
and
sbb
xor
loope
inc
adc
mov
or
aam
push
adcl
xor
sbb
shll
mov
es
or
mov
stos
or
lahf
push
lds
cmp
cmp
cli
sbb
jae
push
pop
xor
jbe
outsb
sbb
dec
fld
insb
fstp
cli
sbb
sub
lcall
jle
fiadds
les
inc
xor
and
mov
ss
sti
in
pop
cmp
xchg
inc
dec
xchg
adcl
repnz
mov
pop
push
jge
mov
pop
lahf
out
mov
lock
popa
or
jg
fistpl
jge
cmp
sbb
call
mov
pop
lods
fiadds
jne
fpatan
mov
incb
movl
aam
subb
ljmp
sbb
or
fdivrl
sbb
inc
daa
push
jl
lds
movsb
ret
sbb
jecxz
add
loop
or
sbb
movsl
dec
jb
xchg
xor
lods
add
icebp
cmp
add
call
adc
cltd
push
fcoml
xor
dec
icebp
icebp
out
in
into
cld
pop
int3
cmp
fistl
test
jecxz
dec
xchg
mov
jne
add
fisubl
add
in
stos
cmp
or
mov
cmp
cli
jb
ret
ja
adc
fcmovnb
pop
js
into
loope
ror
mov
ljmp
mov
pop
mov
cwtl
jg
mov
fwait
mov
gs
push
mov
out
sbb
int3
dec
mov
cmp
outsl
jne
xor
popf
dec
mov
add
cmp
cmp
push
nopl
lcall
popf
cmp
into
stos
sub
insl
rcrl
fwait
lret
dec
test
inc
mov
mov
mov
cs
insl
pop
dec
std
pushf
dec
jecxz
pop
sbb
and
mov
int3
cmc
loop
xor
xorl
insb
sbbb
stos
fs
mov
in
imul
push
xlat
add
mov
pop
je
subl
dec
sbb
adc
cld
or
filds
pop
sbb
fisubs
imul
enter
in
addr16
mov
push
aas
ds
and
fwait
sti
loop
test
sub
and
mov
mov
int3
push
gs
lods
push
mov
test
pop
popa
repz
das
inc
jne
notb
cmpsl
cmp
add
test
push
call
xor
jnp
pop
mov
mov
adc
jno
mov
jo
clc
xor
jp
cmp
mov
push
push
push
sub
not
mov
mov
inc
or
lahf
push
leave
dec
sub
sbbl
sub
shl
pop
lret
clc
push
aas
xor
les
mov
or
inc
cwtl
pop
mov
test
jne
divps
pushf
jns
fcompl
scas
sbb
test
sbb
jge
sub
out
mov
pop
sbb
mov
mov
xor
xchg
xchg
pop
outsl
sbb
leave
mov
es
aam
in
outsb
push
mov
cltd
cmp
out
mov
in
mov
rcrb
mov
xchg
loope
fs
in
addb
add
test
je
std
lcall
pop
mov
bound
in
je
repnz
imul
inc
addb
lds
mov
add
das
push
popa
cmp
mov
xchg
rcrl
scas
inc
call
pop
mov
mov
repnz
test
jbe
js
xchg
jecxz
pop
push
stc
adc
in
in
inc
jae
push
mov
xchg
inc
push
jp
add
mov
mov
into
jbe
out
popa
sbb
jns
lahf
loopne
fadd
lods
inc
add
push
jg
clc
sahf
inc
inc
in
sbb
imul
cmp
out
sub
xchg
dec
je
adc
test
jmp
cmp
add
hlt
mov
sbb
inc
cmp
cmp
cmpsl
mov
or
fs
and
int
push
inc
push
fidivs
mov
push
outsb
inc
xchg
mov
xchg
aaa
push
sbb
cmp
inc
mov
out
insb
aaa
pop
mov
lds
sbb
and
cld
or
add
mov
imul
scas
or
push
cld
inc
fs
cmp
pusha
xor
push
lock
cmp
dec
stc
push
shlb
js
and
int3
jo
xchg
sbb
into
es
mov
jmp
dec
ret
xchg
lock
jg
mov
cmp
sti
cli
dec
imul
sub
jl
mov
leave
mov
sub
popf
shrb
or
jp
fiaddl
jae
stos
aas
mov
enter
in
xlat
and
xchg
repnz
pop
and
into
cmp
mov
jns
fdivl
das
test
int3
xchg
cmpl
push
mov
xor
sbb
or
pop
test
movsl
cmp
test
sbb
xlat
int3
subl
xor
jo
in
sbb
leave
insl
and
push
stc
pop
lds
shll
adc
xor
out
daa
inc
pusha
hlt
adc
add
inc
or
divl
sarb
pop
je
dec
mov
icebp
cmp
leave
push
aad
mov
dec
hlt
mov
lret
mov
sub
adc
mov
in
jl
jg
rolb
stos
add
je
int
and
cmc
imul
sbb
push
sbb
push
mov
mov
stos
cli
mov
fwait
jbe
push
or
outsl
jmp
cs
xchg
les
pusha
sub
jle
enter
cli
pop
rclb
cmp
in
mov
xchg
lret
adc
cmpb
cmp
test
js
js
jp
pop
lock
iret
xchg
imul
aad
sbb
lods
mov
add
push
fcomps
xchg
cli
rorb
repz
std
ss
lea
dec
mov
lea
cld
mov
fs
stos
pop
lea
fidivrs
icebp
sahf
aas
mov
mov
icebp
sub
sahf
xchg
pop
xor
nop
aam
pusha
mov
in
adc
ror
mov
xchg
shrb
mov
push
sti
and
or
mov
and
or
adc
cli
shld
xor
arpl
lods
mov
pop
call
dec
xlat
adc
jo
and
int
outsb
push
lock
movsl
mov
fcomp
scas
mov
jmp
mov
jne
loope
sub
test
icebp
daa
push
call
out
je
mov
rolb
repz
mov
inc
arpl
shrb
mov
jp
int
sub
add
daa
int3
push
fcoml
mov
xor
push
jp
dec
xor
arpl
xchg
mov
stos
addb
xor
mov
sbb
into
sub
and
cmp
notl
inc
addr16
mov
pushf
fsts
or
xchg
sbb
jb
add
cld
sbb
adc
sbb
fsubrl
popf
mov
inc
dec
jmp
dec
push
cld
mov
jmp
icebp
scas
push
mov
cmp
popf
mov
rcrb
rorb
push
mov
out
add
adc
mov
sti
cmp
inc
sub
dec
dec
je
add
xchg
shlb
scas
shlb
jmp
test
xchg
inc
xor
jne
jnp
outsl
push
and
pop
cwtl
jae
sub
mov
cmp
out
mov
scas
ret
or
cmc
add
dec
fildl
rcll
mov
lods
cmc
es
xor
xchg
push
je
out
xchg
xchg
cmc
push
inc
pop
hlt
daa
jne
mov
out
xlat
test
jmp
pushf
sahf
xchg
xchg
adc
aam
jb
out
add
sbbl
lahf
xor
aas
cmp
ficoml
call
push
fwait
add
cmp
adc
int
mov
sub
mov
mov
ret
dec
jmp
subb
nop
jge
mov
jg
jge
and
inc
shrd
scas
xor
push
pop
loope
pop
pop
or
in
rcrl
out
mov
xchg
dec
jl
cld
lods
sbb
int
insb
pop
push
xchg
or
add
lahf
jl
sub
sahf
fidivl
mov
inc
daa
pop
imul
mov
stos
dec
pop
mov
mov
push
pop
popa
mov
cs
sahf
lret
adc
jg
mov
cmpsb
lea
xchg
add
sbb
dec
icebp
mov
sub
fistps
push
nop
lods
mov
mov
inc
inc
add
cmpsl
shlb
popa
mov
mov
cmp
js
lcall
jno
add
outsb
dec
adc
xor
pop
push
jge
cli
xchg
add
popl
push
pop
jns
addr16
and
rcrb
popa
and
hlt
call
fs
popa
xchg
insl
inc
inc
int
lods
fldenv
push
or
mov
movsb
sub
mov
popf
lea
movmskps
sarb
mov
pop
push
inc
jmp
mov
push
and
in
movsl
fwait
inc
push
xor
scas
jae
push
fidivrs
or
test
push
lods
adc
pop
movsl
mov
sbb
je
lret
cmp
xlat
push
cs
pop
or
xor
jnp
pushf
inc
ds
loopne
ljmp
mov
adc
inc
into
push
in
lahf
aas
pop
xor
mov
cld
sub
mov
mov
ds
or
xchg
dec
test
lret
mov
or
mov
dec
lret
mov
mov
adc
int
mov
or
rolb
scas
inc
dec
fwait
cli
ss
sbbb
xor
mov
or
adc
insl
shrl
movsl
icebp
out
mov
ss
int3
inc
push
lods
pop
push
jb
imul
xlat
and
cmpsb
dec
out
cld
adc
movsl
into
add
loope
lcall
cmp
arpl
add
mov
cld
aaa
mov
jns
cltd
sub
or
int3
jge
sub
testl
add
add
fstpt
jno
dec
sti
repz
jno
xchg
jo
jnp
and
clc
loope
mov
jbe
cmp
adc
inc
test
jmp
cmp
push
mov
ja
dec
fstpl
inc
loop
xor
mov
mov
inc
daa
adc
mov
mov
jns
xor
mov
or
push
into
stos
push
and
push
push
xor
add
add
rcrl
cltd
hlt
mov
dec
mov
test
inc
sub
pop
imul
in
subl
daa
and
stc
daa
adcl
push
repnz
lock
pop
or
sub
xlat
int3
pop
data16
push
sbb
adc
mov
or
or
popa
dec
and
jmp
add
cmp
aad
clc
xchg
xor
hlt
insl
jle
and
sub
rcrl
mov
push
push
dec
iret
dec
push
inc
and
mov
jno
sub
jbe
jnp
add
insb
rcr
out
xchg
das
shll
and
and
mov
push
cmc
js
pop
xor
test
mov
mov
movsb
push
popf
lock
pop
pop
dec
fisubs
aad
outsl
pop
push
push
daa
sub
mov
mov
pop
xrelease
mov
ljmp
cwtl
bound
xlat
sub
inc
mov
fcmovbe
scas
mov
mov
aam
mov
xchg
mov
push
aam
or
xchg
adc
stos
mov
push
pop
jo
mov
or
bound
mov
adc
in
pop
dec
add
fucomi
movsl
loopne
scas
fmul
mov
jne
pop
cmp
push
shl
testb
xor
adc
dec
dec
jecxz
xchg
ljmp
or
cwtl
out
in
push
fld
jne
cmp
jnp
out
fcoms
test
mull
out
cmp
cwtl
loope
mov
dec
cld
cmp
insb
popf
mov
inc
mov
mov
ja
cmc
cmc
or
sbb
pop
pushf
add
push
jo
aad
sbb
mov
push
or
or
test
repnz
cs
mov
mov
mov
cltd
add
sbb
mov
fists
jp,pt
push
mov
dec
sub
stos
adc
pop
test
mov
arpl
data16
inc
push
sub
cmpsb
mov
shlb
sbb
int3
mov
gs
or
adc
or
movsb
mov
idiv
into
xchg
cmc
mov
cld
mov
add
loope
out
les
or
dec
pop
cld
sbb
mov
mov
adc
mov
movsb
lret
xor
mov
call
lods
inc
dec
out
dec
mov
jmpw
pop
inc
adc
mov
push
jle
fistpll
lahf
ficoml
popf
rcrl
and
or
xor
cmp
sahf
xchg
mov
or
pushf
push
jp
or
pop
imul
xchg
jle
lock
repz
movsl
loope
fidivrl
cmp
dec
mov
minps
pusha
xlat
and
sahf
jecxz
add
dec
jp
mov
pop
out
daa
testl
push
enter
jg
adc
clc
xchg
pop
sahf
in
jno
or
sub
dec
hlt
fdivrl
in
and
mov
lahf
lret
leave
sbb
and
orl
shll
aaa
dec
imul
out
add
and
adc
push
insb
mov
stos
and
ficompl
popf
mov
add
sbb
lret
jg
mov
movsl
ja
pushf
fwait
rclb
mov
cs
adc
loopne
aas
add
mov
rclb
mov
cmc
test
in
aas
ret
pop
icebp
cmp
lds
repz
loop
subl
xorb
or
lock
idiv
xchg
int3
stos
mov
bound
mov
sahf
fnstenv
push
xchg
xchg
pop
dec
repnz
scas
cmp
cltd
push
or
dec
xor
movsl
cs
pop
gs
mov
add
aam
push
gs
push
xor
jne
fstps
sbb
adc
sub
mov
repz
les
cld
cwtl
push
inc
outsb
mov
jle
sbbb
pop
iret
xchg
mov
out
shlb
bound
in
pushaw
ret
ds
rcrb
imul
sbb
sub
jg
lret
jg
shll
fnstsw
pop
mov
daa
mov
dec
pop
adc
jl
inc
cmp
shrl
dec
mov
call
stos
pop
cltd
loop
add
mov
jecxz
shl
adc
dec
add
ss
rorb
mov
push
adc
imul
mov
aas
popf
xchg
mov
in
sbb
mov
push
add
mov
push
loope
add
leavew
les
push
add
lahf
call
cltd
test
xlat
inc
fsts
push
pop
loopne
repnz
fcoms
push
pusha
cltd
mov
add
addr16
hlt
out
mov
add
xchg
movsl
cmp
das
xor
pusha
stos
or
mov
or
popa
dec
sbb
leave
in
enter
addr16
ss
cltd
inc
push
sub
dec
negl
xchg
dec
bound
pop
lods
movsb
cmp
sahf
sbb
inc
call
push
mov
stos
aaa
dec
adc
es
js
int3
push
jmp
and
push
push
mov
fdivrp
mov
orl
mov
xor
xor
xchg
scas
aaa
adc
jmp
and
gs
or
das
or
jo
mov
mov
jge
fld
jge
mov
push
xchg
data16
aam
sahf
movsb
inc
jmp
das
movsl
cli
scas
xchg
mov
jge
sub
rol
stos
dec
dec
arpl
leave
dec
and
mov
imul
movsl
xchg
and
push
push
cwtl
mov
loope
inc
cltd
movsl
movsb
add
mov
ret
enter
mov
push
sbb
cmp
cld
sar
les
test
std
enter
pop
lods
insb
faddp
js
cli
stos
xchg
xlat
ret
ffree
gs
hlt
dec
xchg
shrb
mov
out
outsb
jo
jnp
fldt
int3
sarb
data16
addl
mov
inc
or
pop
push
lods
js
sbb
mov
mov
jge
cmpsl
inc
lret
mov
jno
mov
rcll
cmp
inc
daa
cmpsb
sbb
dec
ret
pusha
inc
and
or
inc
leave
mov
xor
mov
push
inc
pop
and
cmp
push
out
dec
adc
out
fmulp
mov
add
fists
jbe
jbe
jae
add
or
jo
movsb
ja
sub
sbb
cmp
in
arpl
dec
sbb
movsb
mov
cwtl
ds
mov
iret
stc
inc
scas
lret
enter
popl
inc
mov
mov
cs
pop
pop
and
jns
dec
jle
dec
scas
leave
and
rdmsr
xchg
mov
mov
jle
mov
xor
mov
repz
push
pop
mov
loope
mov
pop
cltd
jecxz
into
or
cmp
cmp
movsl
inc
and
nop
gs
scas
je
jmp
mov
xchg
cmp
sahf
in
xor
out
and
jecxz
adc
inc
jno
push
and
lcall
clc
sbb
adc
call
mov
jmp
cmp
cli
or
xlat
mov
push
mov
add
in
mov
movsl
jge
jle
mov
xor
mov
mov
pusha
xchg
mov
sbb
and
pop
shll
bound
imull
or
cmc
cld
xor
in
jecxz
je
arpl
stos
add
mov
bound
xlat
or
pop
inc
mov
in
std
popa
xorl
sbb
jg
cmpl
mov
jp
repnz
xchg
aas
fstl
push
cld
adc
sbb
sbb
lods
xor
in
push
pop
sub
in
loopne
in
xchg
sbb
shrl
inc
jge
mov
sbb
xlat
or
adc
cli
xlat
and
cmp
data16
and
and
in
pop
push
jle
sub
ja
aaa
fildl
adc
shrb
push
mov
jo
loopne
gs
movsb
mov
sub
andb
jno
aas
pushl
imul
jne
cmp
or
clc
or
xor
xor
out
pop
mov
rcrl
rorb
pop
xchg
push
clc
repnz
mov
inc
test
mov
pop
or
pop
add
daa
aad
or
cmp
or
xchg
adc
pop
in
xchg
cltd
fsts
in
adc
and
pop
leave
mov
rclb
test
clc
mov
cmp
shll
add
into
nop
cmp
lock
andb
pop
test
xchg
xor
scas
inc
ret
aaa
stc
push
pop
sbb
inc
adc
jecxz
sub
xchg
jge
insb
mov
sbb
mov
in
not
or
push
rorl
or
and
pop
es
push
jle
or
mov
mov
xchg
push
xchg
mov
sarb
adc
mov
cmp
cmpsl
inc
or
or
cmp
pop
out
mov
jae
cs
pushf
les
aad
cmp
cmp
xchg
ffree
idiv
pop
jne
push
loope
sbb
shl
cmpsl
andl
int3
adc
out
jae
test
sub
test
jge
in
adc
ret
dec
mov
pop
mov
mov
jecxz
fs
mov
jnp
inc
mov
pop
lock
in
fisubl
nop
movsl
aas
xchg
pop
int
mov
dec
jbe
test
std
repnz
xor
dec
in
push
imul
push
mov
jnp
pop
adc
out
adc
push
pop
lods
call
or
daa
cmp
push
sub
cmc
aaa
cmp
clc
aam
mov
and
or
jno
adc
lret
mov
das
sbb
jns
fldlg2
xchg
popa
movsl
pop
pop
push
pop
push
stos
inc
popa
mov
mov
repz
jecxz
js
push
xor
dec
cmp
aaa
pop
sbb
mov
loopne
call
push
adc
icebp
xchg
movsb
shlb
sarb
stos
call
int
xchg
mov
cs
aad
push
fwait
sti
aas
stc
xor
subb
mov
fistpl
inc
ss
loopne
pop
jnp
or
imull
pop
out
or
xor
pop
add
out
pop
sbb
rorl
insb
pop
xchg
push
pop
aas
cmp
jle
ret
mov
jns
xor
add
mov
mov
daa
or
cmpsl
mov
bsf
mov
dec
scas
dec
scas
jp
adcb
outsb
fstpl
decl
pop
or
cs
int3
add
pop
push
pusha
ja
cmp
mov
mov
icebp
mov
push
mov
or
push
les
jnp
fld1
cmp
xadd
cmp
imul
cmpsb
call
sbbl
movsl
cs
and
dec
das
popa
jne
or
dec
add
roll
and
push
inc
pop
push
adc
or
push
mov
sub
mov
xchg
adc
mov
pop
jmp
std
xchg
xchg
xor
ljmp
ja
je
sbb
loopne
xchg
shll
in
push
jo
imul
or
inc
aad
bswap
repz
stos
dec
pop
xchg
push
sbbb
dec
jbe
mov
push
and
movsl
loope
jno
div
fistps
lods
bound
sahf
pop
cmp
cli
mov
mov
or
adc
and
ror
aas
js
sbb
mov
cwtl
sub
in
sub
stos
pushf
and
daa
xchg
aam
add
repnz
adcl
xor
jb
xlat
das
mov
ret
adc
xorl
int
jo
andb
mov
cltd
mov
mov
or
mov
test
push
mov
out
push
movsl
daa
jne
repz
mov
dec
std
and
loopne
pushf
repz
sbb
sbbb
mov
or
dec
xchg
push
add
jns
push
out
iret
and
sub
pop
pop
inc
leave
inc
jl
rorl
out
stos
imul
imul
add
cmp
pop
loope
jge
popf
and
out
push
loop
mov
push
mov
mov
pop
int
out
decb
or
js
in
in
flds
xor
aaa
dec
filds
sbb
add
dec
daa
jmp
clc
scas
fs
lcall
xchg
mov
fdivrl
test
pushf
cmpsb
push
out
in
and
in
repz
xchg
js
mov
xchg
add
add
xchg
xor
and
adc
mov
lret
les
dec
sub
adc
mov
mov
or
decl
add
repnz
lret
hlt
testl
pop
scas
jge
adc
outsl
push
stos
sub
pop
jb
mov
sar
push
pop
and
arpl
inc
push
mov
mov
cmp
icebp
pop
xchg
test
cmp
std
enter
pop
xor
cmp
and
out
cmc
add
or
das
orl
int
aad
into
sub
mov
imul
and
inc
enter
cld
addr16
push
fnstcw
and
cmp
sub
lcall
xorl
out
xorl
popa
adc
scas
roll
movsb
sub
test
imul
lret
repz
fmuls
or
lret
idivb
in
and
jae
mov
cmp
and
inc
fbld
imul
push
sub
repnz
ja
dec
mov
inc
mov
ljmp
xor
in
mov
dec
and
xor
not
test
jb
lcall
jge
mov
mov
shll
cmpsl
adc
in
stc
cmp
mov
push
divl
aas
xchg
fdivrl
and
test
ffree
out
mov
jnp
sub
adc
call
lods
stc
and
push
fbstp
lcall
sub
mov
mov
mov
xchg
add
push
xor
iret
pop
pushf
cmc
shlb
imul
lods
lea
je
mov
cmpsl
push
nop
dec
jle
dec
adc
lcall
and
mov
jns
xchg
in
dec
lods
adc
into
xor
mov
cmpsb
add
adc
xor
divb
fimuls
and
pop
mov
shll
pop
sbb
ljmp
shl
jl
push
nop
punpckhbw
fucomip
das
int
cli
push
dec
sbb
mov
lods
int
insl
dec
out
xchg
add
data16
imul
cmp
inc
adc
xchg
mov
test
dec
std
jle
inc
jmp
sub
out
stos
insl
incb
ljmp
neg
aam
test
adc
xor
sub
or
sbbl
adc
js
loope
or
popa
push
into
mull
push
into
fists
or
or
and
dec
dec
mov
fstpt
lods
bound
inc
repnz
ljmp
gs
push
sub
test
mov
nop
stos
push
fs
dec
dec
cmp
popa
in
in
sbb
cli
iret
adc
or
and
dec
dec
cltd
pop
inc
push
ja
in
xor
and
call
sbb
jb
fidivrl
push
add
and
call
mov
std
xchg
int3
adc
lock
pop
mov
cli
lahf
out
rcll
ret
mov
sti
push
mov
sub
adc
or
lcall
notl
jl
nop
cmc
dec
insb
mov
sub
xchg
in
push
xchg
fstpl
mov
jnp
iret
or
and
aaa
push
rorl
insl
and
mov
fstpt
repnz
mov
sahf
add
repnz
or
call
xchg
int3
jo
cs
inc
xchg
pushf
adc
push
or
inc
jae
cli
stc
gs
push
push
mov
adc
cwtl
test
sbb
ret
lcall
aad
mov
aaa
ret
jle
ja
mov
or
dec
add
or
mov
icebp
dec
mov
scas
cmpb
sub
data16
and
aas
xchg
mov
mov
mov
iret
push
sub
cmp
je
sbb
loop
aam
adc
jmp
push
adc
stos
shrl
xor
pop
test
inc
scas
pop
js
leave
nop
rcrl
xor
dec
jl
ja
hlt
adc
xor
jmp
inc
lea
sbb
repz
pop
imul
movsl
inc
pop
cmp
js
xor
jnp
jecxz
push
fldl
sbbl
rorb
push
fstpt
cli
aas
lods
stos
idivl
adc
jbe
sbb
pop
das
dec
inc
mov
mov
push
in
sub
fsin
sub
xchg
xor
fdivl
je
inc
and
xor
out
out
xchg
testl
adc
cmp
es
push
xchg
fs
jp
dec
sub
scas
cltd
sub
imul
sub
in
pop
iret
and
mov
mov
int
test
jnp
repnz
fnsave
mov
sub
cmpb
dec
notl
adc
xchg
xchg
inc
mov
stc
in
pop
inc
leave
fdivs
xor
ja
std
xchg
insb
push
cmp
pop
subb
mov
mov
hlt
call
lods
and
cli
dec
inc
fwait
icebp
or
push
cmpsb
sbb
sbb
mov
adc
xlat
sbb
fiadds
out
jnp
sub
mov
xchg
mov
ret
jo
clc
cmp
gs
jbe
adc
xchg
or
test
shrd
push
push
jmp
inc
pushf
shlb
push
and
jle
sti
push
rolb
xchg
lods
insb
dec
popa
cs
js
lea
ss
xor
pushf
lret
and
xchg
xchg
icebp
jmp
inc
mov
push
add
adc
in
icebp
adc
inc
lret
test
adc
mov
sarb
sbb
cmp
stos
je
fdivrs
sbb
lock
notb
out
subb
cld
sahf
mov
push
jnp
movsb
push
dec
mov
sbb
mov
inc
jnp
cli
inc
pop
into
aas
je
lods
jnp
mov
push
flds
push
jge
pop
icebp
or
movsl
dec
in
test
add
jnp
inc
sbb
fsubrl
ja
js
es
cmp
adc
arpl
add
insl
jmp
movsl
jae
pop
jns
xlat
pop
xchg
movsl
cmp
shlb
daa
mov
cwtl
adc
stos
jge
aaa
sbb
pop
int3
jne
push
js
outsb
mov
es
jbe
cmp
cmp
jecxz
loop
and
xchg
out
cmp
aas
jo
cli
ja
ret
loop
pop
mov
outsb
push
mov
or
xchg
xor
or
aas
sarl
mov
data16
mov
clc
sub
cwtl
testb
insl
xor
mov
sub
movsl
cmp
cli
lret
mov
cld
cmpsl
fcmovnb
out
jns
addr16
mov
mov
or
incb
add
jge
ret
xchg
jb
inc
fistps
out
jne
jge
loop
cmc
push
adc
outsb
cmp
lcall
push
sub
xchg
dec
out
jo
shll
dec
jns
mov
jp
aas
or
jge
sub
gs
or
jno
jae
fiadds
mov
push
mov
xchg
mov
push
pop
orl
xchg
cli
je
and
fidivs
mov
cmp
mov
popa
inc
sub
mov
and
xlat
or
mov
movsl
cltd
sbbb
into
sub
sbb
sub
cmc
dec
jne
push
bound
lock
lahf
push
cmp
jbe
inc
push
ficoml
jmp
dec
les
or
mov
cs
dec
pop
cmpsl
mov
enter
push
or
and
punpckldq
push
lock
test
sub
add
jle
call
lea
adc
mov
inc
jmp
jg
mov
inc
dec
sub
addr16
xchg
xchg
bound
roll
shll
inc
or
scas
inc
sarl
fadd
dec
cmp
or
ss
jp
hlt
mov
leave
cmpsb
cmp
push
jmp
movsl
sahf
dec
inc
or
sbb
xor
or
jnp
and
mov
mov
scas
mov
xchg
fidivrs
jns
push
repnz
pusha
and
fisubrs
pop
test
cmpsb
mov
adc
pop
add
fwait
out
pop
inc
lcall
roll
xor
shrb
decb
mov
push
push
out
xchg
dec
adc
add
and
xor
insl
jae
scas
mov
mov
jmp
test
sbb
jecxz
in
add
push
mov
aaa
scas
movsb
mov
sahf
mov
and
jno
insb
test
scas
or
adc
push
push
enter
mov
jns
xchg
mov
push
adc
mov
ds
mov
out
gs
aaa
fisttpll
lock
sbb
xor
jp
cld
lea
adc
rcl
sarb
sbb
pop
sub
ds
bound
mov
push
xchg
xor
mov
orl
adc
mov
es
pop
sub
xchg
pusha
adc
in
pop
push
cli
dec
test
outsl
sbb
xchg
xchg
arpl
pop
sbbl
xor
pop
inc
mov
cs
data16
and
pop
inc
xor
orb
aaa
pop
roll
xor
sub
jmp
jns
cli
shr
add
push
hlt
clc
lock
push
pusha
rcll
hlt
adc
sahf
loop
jl
insb
lock
lock
xor
and
enter
push
mov
cmc
out
clc
pop
into
xor
push
xor
pop
loopne
or
mov
lahf
adc
imul
out
pop
and
inc
jae
nop
xchg
popf
pop
data16
mov
jp
dec
dec
mov
leave
mov
cltd
cmpsl
push
je
addl
into
cmpl
mov
lret
loop
enter
cld
imul
fdivrl
outsb
pushf
in
sbb
imul
adc
adc
ljmp
or
loopne
mov
fdivrl
fcmovne
lds
sub
pop
mov
mov
xor
dec
cmp
shl
or
pop
ror
repnz
jne
maskmovq
testl
adc
inc
bound
sbb
ljmp
jmp
push
push
stos
push
push
mov
xchg
mov
clc
fs
push
shrb
fs
inc
icebp
xlat
js
idiv
adc
fnstsw
int3
cmp
mov
cmp
xor
stos
shrl
adc
xchg
loopne
repz
sbb
xchg
out
in
and
loope
adc
push
lcall
outsb
aaa
fists
loop
xchg
int
pushf
scas
or
insb
ss
push
cmc
push
movsl
daa
lcall
pop
les
ja
pop
iret
push
pusha
mov
pop
pusha
jno
mov
pop
popf
jae
cmp
jg
sbb
insb
and
inc
fidivl
mov
pop
jbe
sbb
enter
and
cli
lods
lcall
dec
aad
push
mov
mov
sub
roll
in
adc
sub
sbb
ds
pop
pop
xor
test
lret
cwtl
pop
popa
popf
leave
sub
pop
xor
or
dec
xlat
movsb
popa
inc
cmp
adc
repz
popf
lea
sub
stos
or
sub
cmp
pop
jg
mov
cld
int3
jo
ret
psubq
in
cld
nop
fistpl
icebp
cmp
das
mov
mov
les
push
enter
pop
push
ss
xchg
mov
inc
pop
sbb
int
sub
jb
jmp
sbb
pop
leave
in
in
sub
mov
stos
es
inc
dec
les
sbbl
mov
es
push
dec
rol
ss
jne
insl
add
fwait
sbb
push
xor
add
mov
jl
jno
es
xor
aam
push
and
push
push
jmp
jp
sbb
dec
shlb
pop
clc
test
lds
push
ret
add
jp
sti
cmp
sbb
jp
cmpsl
push
loop
jbe
in
dec
mov
in
icebp
mov
mov
gs
fnstsw
jg
stos
test
insl
mov
xchg
test
xor
lcall
sub
sahf
lret
aad
cld
out
icebp
mov
orb
xlat
mov
mov
fbld
add
mov
sub
int3
mov
adc
mov
mov
xchg
jmp
movsb
outsb
pop
or
pop
int3
push
adc
fsts
outsl
sub
stos
movb
mov
icebp
sub
inc
les
and
and
nop
inc
sarb
xchg
mov
outsb
xchg
pusha
pushf
loop
rorl
adc
or
jns
cld
jo
xor
data16
negl
jne
push
push
xchg
cmp
mov
sahf
pop
jmp
jnp
push
dec
faddp
push
mov
sub
jb
movsb
adc
lret
inc
into
pop
push
shrb
or
scas
je
jmp
ret
repz
ds
addr16
pop
inc
inc
std
int
jae
loop
push
push
cwtl
sbb
inc
jno
cmp
cmpl
out
mov
aam
push
or
xchg
dec
pusha
mov
bound
stc
clc
out
cmp
pop
mov
std
idivb
popa
cwtl
test
push
pop
fidivrl
inc
pop
inc
daa
push
fmul
sbb
fwait
out
xor
stos
push
pushf
lcall
mov
les
cmp
adc
inc
cmpsb
inc
sbb
mov
xchg
mov
rol
cmp
daa
push
mov
nop
jo
ja
mov
dec
and
add
sbb
xlat
mov
out
dec
dec
cli
adc
dec
push
mov
js
les
mov
or
rclb
ljmp
push
fistl
movsl
aad
jnp
xor
imul
push
mov
jle
addl
cmc
pop
mov
rcrl
sub
xchg
and
xchg
cs
mov
push
jge
cmp
mov
sub
imul
adc
movsl
cmpsl
mov
inc
mov
andl
call
daa
dec
xchg
jno
subb
into
imul
cld
pop
test
div
push
or
scas
ret
in
cli
jge,pt
sub
jmp
lods
xchg
mov
xor
mov
testl
icebp
mov
add
aam
pop
fistpll
aam
js
ja
sbb
insl
out
dec
inc
add
pusha
mov
mov
xor
dec
cmp
jo
xchg
jne
sbb
or
push
sub
pop
pop
push
das
push
inc
xchg
les
shrl
addl
mov
jge
xchg
inc
and
dec
and
aam
lret
loope
les
pop
test
adc
mov
jecxz
add
arpl
and
and
xchg
loope
xor
stos
aas
pop
push
pop
dec
out
nop
into
xchg
inc
ds
push
cld
test
pusha
lock
push
and
sub
fistpll
inc
dec
rolb
pop
pop
mov
out
sub
lret
jl
repnz
mov
mov
sub
nop
sbb
inc
sbb
rcrb
cmp
pop
iret
shl
jno
mov
mov
mov
faddl
mov
leave
jle
or
movsl
repz
test
push
and
popa
dec
sub
shrb
stos
scas
lahf
repnz
push
adc
addl
cwtl
sbb
addb
pop
stos
decl
fidivs
mov
pop
mov
stc
clc
lret
notb
sarl
daa
mov
inc
loop
sbb
mov
leave
ret
stos
or
adc
dec
sub
repnz
mov
fisubrs
xor
mov
aad
jmp
jne
fcoms
mov
pop
popf
push
cmp
add
out
adc
push
push
sbb
inc
sub
es
and
adc
clc
mov
fistps
shr
stos
adc
ss
jl
and
leave
pop
int
mov
mov
addr16
int3
aas
lods
xor
mov
xchg
cmc
push
rcr
mov
cmp
mov
dec
aaa
mov
pushf
lods
and
jmp
imul
lret
cmp
xor
hlt
orl
xchg
sbb
loopne
mov
pop
loope
pusha
pop
sbb
stos
fs
mov
push
lods
dec
call
xchg
mov
outsl
bound
rcll
pop
inc
dec
and
xor
jg
int3
dec
sbb
test
sub
dec
mov
mov
fcoms
lahf
pop
divb
js
inc
mov
cld
mov
xlat
call
lea
jmp
in
xchg
pop
and
jbe
repz
adc
xchg
addr16
cmp
out
mov
test
jmp
jb
lahf
insl
jns
mov
push
pop
mov
ja
into
popf
or
stos
xchg
fstpt
mov
lret
jo
push
std
cmp
lret
mov
fs
loopne
cwtl
insl
xor
fisubs
push
imul
xchg
cld
mov
sbb
and
xchg
out
in
cmp
test
jo
push
leave
lods
jbe
lret
sti
jb
sub
bound
xor
imul
mov
pop
jmp
push
dec
dec
or
mov
rclb
ficoml
inc
shrl
mov
outsb
adc
popa
notb
iret
add
sbb
pop
or
ret
subb
dec
shll
cli
fdivrl
add
cli
mov
mov
sbb
rcl
jle
and
mov
adc
shll
pop
loopne
out
xor
testl
adc
xor
or
repnz
mov
cs
xor
sbb
mov
pop
xorb
movsl
dec
sbb
jmp
rorb
sbb
sarb
cmpsb
dec
les
jl
mov
jp
and
stos
stos
sub
in
pop
inc
xor
push
sbbb
inc
or
jae
cli
inc
lret
mov
inc
or
mov
mov
fcoms
dec
fmull
push
or
fs
sbb
mov
xchg
mov
je
sub
push
leave
adc
or
hlt
lds
and
dec
push
imul
and
movsb
mov
mov
dec
shrl
xor
sbb
imul
les
cmc
orl
movsl
ficoml
shrb
subl
mov
mov
push
loope
and
pop
and
bound
push
jo
xchg
or
or
add
xchg
jns
adc
pushl
inc
lods
iret
jmp
addr16
fdivrs
cmp
jo
pop
sbb
cwtl
ss
mov
jl
dec
cs
cli
mov
subb
dec
ja
sub
movsb
jo
inc
pop
sub
out
xchg
insl
call
out
sbb
cltd
gs
adc
add
pop
clc
mov
mov
lds
fsub
fcoml
push
add
jg
in
inc
or
inc
fsubs
addl
mov
add
push
dec
dec
test
or
js
aaa
or
pop
ss
jne
in
test
add
sbb
sbb
jno
mov
push
aas
negl
sar
pop
test
push
cmpsl
fadds
orl
fidivs
mov
pop
pop
jle
insb
xor
scas
inc
mov
mov
dec
xchg
push
push
push
inc
es
pop
scas
test
loopne
xchg
popa
cltd
and
les
sarb
adc
push
xor
pushf
lea
or
clc
add
loopne
cli
test
loop
sbb
or
sub
out
in
iret
add
icebp
mov
xor
jle
adc
rcrb
popa
push
xchg
xor
push
repz
insl
stc
push
aaa
pop
mov
out
mov
inc
out
add
outsl
gs
ljmp
aam
adc
dec
and
jo
push
ret
mov
out
outsl
jle
push
or
mov
inc
adc
cmc
hlt
sbb
pop
ss
insl
mov
mov
test
dec
ds
pop
xor
push
pop
add
mov
ljmp
sbb
mov
inc
xchg
icebp
sbb
and
mov
fsubr
and
loope
in
mov
lods
jb
fists
xchg
test
clc
in
lds
cmp
push
lock
lret
ja
dec
pop
add
mov
or
cmp
xor
movzwl
sub
outsb
mov
cltd
pop
repz
fcoms
xchg
daa
mov
movb
call
or
cmp
xlat
lea
adc
out
lds
inc
lods
mov
cmp
pop
xor
andb
pop
shrl
cmpsl
sub
repnz
in
lret
cmp
lods
mov
pushf
popa
insb
inc
adc
cmp
mov
inc
out
pusha
leave
or
inc
and
lret
mov
mull
call
jmp
push
inc
je
fnsave
jge
inc
rcrl
js
jle
loope
faddl
sbb
mov
add
pop
ja
gs
ss
mov
xchg
push
fildll
lods
stos
lds
sti
jg
jge
ret
inc
mov
arpl
xchg
int
mov
lds
mov
je
pop
loopne
dec
fists
ljmp
shlb
mov
jns
dec
jl
pushf
dec
add
addr16
ljmp
sub
mov
in
imul
ret
repz
subb
imul
dec
adc
ficoml
test
adc
pop
lcall
jne
mov
std
jb
xchg
filds
sbb
dec
push
movsb
adc
lea
and
mov
aaa
arpl
sahf
in
cmpl
fiaddl
sbb
imul
push
aas
in
dec
jg
dec
pusha
out
lret
or
xchg
int3
repz
jnp
lods
cmpsb
jmp
mov
lahf
mov
sub
stc
adc
inc
xchg
or
mov
lret
jns
push
in
cli
mov
int3
add
sti
idivb
test
xor
movsb
out
xor
mov
ret
mov
fnstsw
push
push
sahf
test
cmc
aad
xchg
arpl
pop
jp
lds
testb
aad
jecxz
mov
and
popa
adcb
repz
out
push
rolb
push
dec
sub
rcll
leave
inc
and
and
jno
mov
in
aad
cld
fmuls
sbb
or
and
cli
je
push
cmp
test
dec
cmp
in
not
js
mov
xchg
dec
in
loop
xor
test
hlt
or
dec
add
idivb
lcall
pop
xor
into
int3
and
popa
pop
add
add
xlat
jns
mov
aad
cwtl
mov
in
or
inc
popf
cld
imul
sbb
gs
cmp
sub
pop
call
pop
xchg
jmp
pushf
lret
jge
xlat
sbb
cmp
cld
js
enter
cmp
cmp
jg
inc
mov
jge
pop
gs
call
bound
repnz
inc
xor
or
and
push
mov
in
xchg
or
imul
les
sub
or
inc
scas
jg
enter
fisttpll
imul
push
in
bound
lods
std
loop
movsb
jp
jb
aam
icebp
pop
add
sar
lods
nop
mov
fsubrl
add
mov
mov
adc
fists
xchg
inc
cwtl
icebp
inc
push
sbb
add
fsubrl
aam
mov
cmp
mov
xchg
bound
mov
push
push
jecxz
enter
rorb
xlat
shlb
notb
add
lea
in
mov
mov
mov
push
or
mov
dec
loope
pop
pop
jg
mov
into
adc
or
fldt
xor
cmp
mov
sub
rcrb
roll
out
xchg
mov
dec
cs
pop
dec
dec
xchg
mov
xchg
mov
fs
je
mov
inc
insl
jmp
fabs
fdivrl
in
and
push
jp
ret
aad
cltd
out
mov
outsl
xchg
aad
in
insb
repnz
cmp
rorl
stos
mov
inc
pop
pop
sub
sub
les
faddl
into
dec
sub
xor
pop
or
stc
stos
push
jo
lret
mov
mov
outsb
jp
mov
lds
xor
pushf
dec
inc
xchg
mov
jecxz
xchg
inc
iret
dec
pop
sub
push
pop
aam
jecxz
push
and
in
test
xchg
stc
xchg
fdivs
pop
mov
xchg
push
ret
fcoms
fdivrs
sbb
xchg
xorl
cmp
movsl
jae
aaa
lahf
push
cmp
mov
inc
mov
out
shlb
fstl
or
push
mov
mov
cld
dec
aaa
adcl
jp
push
dec
inc
clc
ss
shrb
adc
and
add
mov
adc
dec
push
xchg
dec
and
outsl
push
push
out
xor
mov
pusha
sti
adc
xchg
dec
sub
jne
jns
xchg
mov
xor
dec
sub
lock
pop
loopne
inc
and
lods
cwtl
popf
jb
enter
mov
lods
lods
testl
mov
movsl
pop
ds
jmp
popa
stos
pushf
pushf
stos
out
dec
inc
pushl
mov
divb
xchg
mov
gs
stos
xchg
rcll
or
or
cmp
aad
iret
cmp
stos
in
int
xor
outsl
xor
mov
ljmp
aam
das
xor
push
fmuls
pop
push
mov
loope
jns
jecxz
loope
iret
mov
or
leave
ds
add
int
sbb
fmul
out
push
xor
pop
sbb
bound
mov
add
std
lea
movsl
cmp
call
mov
pop
imul
cmpsl
insl
dec
push
cmc
push
and
cmp
lds
in
cmp
sub
jmp
dec
adc
fbld
inc
mov
add
jl
leave
in
mov
out
arpl
les
mov
and
outsb
add
iret
sbb
adc
cmp
decb
jno
or
loopw
sub
in
ja
and
mov
push
aas
das
add
cmp
sub
mov
mov
sub
insl
sbb
cmpsl
into
sarb
jne
push
sahf
adcl
inc
insb
sub
xor
and
mov
jo
or
and
incl
into
arpl
push
ret
or
in
int
sbb
sahf
xchg
pushl
dec
or
cmp
cmp
jge
cmpsb
fldl
mov
arpl
loop
xchg
pop
cmp
mov
inc
pop
test
in
aas
mov
fstpl
add
sbb
fs
mov
cmpsl
cmp
or
out
in
sti
call
adc
scas
in
out
ljmp
mov
loope
dec
add
inc
sbbb
pop
adc
insb
mov
jae
es
mov
sbb
jg
adc
adc
in
pop
jp
cs
xchg
or
insb
or
outsl
call
mov
or
mov
es
loopne
in
mov
insl
mov
sub
aam
stos
icebp
add
aad
pop
jne
int3
lret
lods
mov
imul
test
mov
mov
loope
movsl
xchg
xor
jmp
pushf
stos
dec
or
out
test
push
cmp
mov
cmpsb
loopne
inc
xor
inc
dec
lds
loope
mov
cmp
fnsave
cmp
mov
pop
xchg
mov
andl
xchg
iret
mov
movsb
xlat
stos
lea
cmpsl
jge
push
and
iret
jb
movsb
sub
iret
das
mov
mov
adc
cmpsb
lea
dec
pushf
and
pop
xor
ret
push
cmpsl
int3
sub
pop
shlb
pop
mov
out
shll
dec
outsl
inc
xor
push
sti
push
adc
adc
jge
mov
jno
cmp
mov
into
std
cwtl
dec
imul
fsubrl
nop
cmp
cmpsl
mov
arpl
testb
insl
pop
and
sub
inc
and
push
faddl
mov
shlb
outsl
jnp
add
inc
loop
inc
sub
lods
sbb
ds
mov
cmp
cmpsb
out
out
xchg
stc
and
sbb
aam
fnstenv
mov
mov
lock
inc
jns
sbb
inc
test
dec
dec
shl
mov
xor
aas
mov
mov
shl
clc
mov
lods
push
dec
pop
push
jb
inc
cmc
mov
push
inc
push
cmpsb
adc
roll
add
jb
stos
mov
test
and
sub
mov
leave
enter
xor
xchg
mov
fldcw
pop
mov
pop
out
in
add
out
pop
fidivrl
and
or
inc
lea
movsb
fcmovne
imul
cmp
lret
aaa
or
into
hlt
movsb
cmp
jne
push
mov
imul
mov
jb
adcl
add
xchg
pop
lock
mull
and
mov
sbb
pushf
cmp
sbb
js
sub
subb
std
js
ret
push
movsb
int
adc
movsl
jne,pn
pushf
sti
and
sbb
xchg
cmp
pop
test
push
xchg
and
mov
stos
sub
sbb
sahf
sbb
mov
pop
lds
movups
sub
scas
lods
in
in
xchg
fimuls
addr16
int
call
and
ds
mov
add
pop
int3
or
push
dec
mov
iret
inc
fistps
or
push
xchg
mov
adc
and
out
cmpsl
or
jae
dec
or
cmpsl
imul
mov
xchg
sti
sub
mov
cld
call
xor
push
nop
movsb
std
shl
hlt
sub
mov
mov
add
shrl
fisubs
cmpsb
shll
cli
fsubrs
mov
sub
jbe
scas
hlt
mov
pusha
push
arpl
aaa
sub
dec
mov
sub
fcom
xorb
jl
mov
xor
fsubl
mov
adc
mov
push
pusha
shl
sbb
fisubl
sarb
sbb
and
ja
pop
test
jae
icebp
pop
popf
sbb
add
fcom
jne
int
dec
push
inc
imul
mov
or
addr16
aas
bound
adc
stos
pop
xor
fldenv
loope
xor
xchg
pop
mov
mov
mov
jecxz
or
data16
xorps
jb
sbb
mov
mov
dec
cs
mov
enter
rclb
and
dec
mov
mov
push
in
pop
loopne
imull
jg
mov
mov
pop
loopne
in
aaa
scas
pop
xchg
push
aam
jp
in
jmp
mov
aam
sbb
dec
cmc
aas
mov
mov
inc
adc
lret
pop
adc
mov
push
inc
jp
addr16
sub
xchg
ss
cmpl
sbb
lret
xchg
cmpsb
push
out
es
mov
test
cmp
ja
push
push
pop
ja
xchg
sbb
iret
sbb
add
jecxz
das
xlat
loop
push
sub
dec
out
shl
dec
mov
lcall
or
jo
cmp
xchg
dec
fnstenv
push
fmulp
pop
int3
mov
and
dec
jecxz
jbe
bound
jecxz
std
or
das
sub
push
mov
pop
sti
mov
sbb
sub
repz
push
inc
cmp
lds
or
aad
push
mov
add
clc
xor
sub
icebp
xor
push
or
shr
test
inc
cwtl
push
push
mov
add
insl
push
xchg
sarb
pop
xor
sahf
pop
push
or
xor
scas
add
mov
das
loop
dec
mov
sub
pop
xlat
psllq
dec
sbb
push
cmp
mov
movsl
lret
lock
rol
sub
out
jle
fucom
addr16
out
call
arpl
pop
cmp
sub
add
in
js
and
notb
iret
loopne
fists
push
or
jb
pop
outsl
loope
icebp
jmp
test
in
dec
ficomps
sbb
out
movsb
push
and
sub
daa
stos
test
xchg
mov
fiaddl
xchg
roll
jp
dec
inc
jecxz
jge
dec
test
inc
dec
sbb
jmp
jl
jns
push
shrb
sub
icebp
andnps
cltd
repz
pusha
pop
repz
test
jb
sbb
sbb
or
mov
stos
lods
jmp
jl
cmpb
outsl
clc
xor
mov
mov
aam
inc
outsl
test
sahf
inc
ret
cmp
xchg
out
repz
pop
pop
dec
insl
jnp
push
dec
cmpl
cmc
mov
cli
cmp
mov
push
enter
xor
iret
mov
push
btcl
pusha
jbe
cmc
inc
shl
dec
fcoml
inc
xor
jno
cmp
shlb
push
testl
js
aam
cmc
adc
out
mov
add
xor
xor
insb
cmp
test
push
lods
dec
repz
and
imull
std
mov
dec
sbb
ja
mov
outsl
rcll
mov
fmul
xchg
repz
call
sub
lods
stos
jecxz
push
jl
out
pop
mov
inc
xor
pusha
jmp
in
and
or
out
outsb
arpl
movsb
hlt
pusha
dec
nop
jbe
mov
into
mov
add
repnz
loop
out
les
add
sbb
mov
push
mov
repz
testl
enter
sahf
pop
push
mov
jns
mov
sti
icebp
push
subl
jl
mov
mov
and
outsl
xor
push
lret
jb
mov
inc
fcoml
or
xor
repz
push
aad
pop
inc
pop
es
lcall
aas
sahf
add
pushf
sti
sub
push
pop
and
and
sbb
not
mov
cmp
push
xchg
outsb
mov
add
pop
lds
test
mov
cmc
loop
sbb
lahf
ss
mov
sub
push
lock
sub
inc
loopne
pop
inc
gs
mov
lret
aas
xor
daa
stos
fcom
push
iret
lods
fiaddl
lods
in
xor
mov
hlt
cwtl
jno
popa
fildll
addr16
jae
push
addl
mov
jecxz
dec
push
cmp
cmc
xchg
shr
fistpll
mov
ret
sbb
pop
in
xor
dec
ret
inc
arpl
jbe
pop
cmpsb
pop
sbb
sbb
mov
ret
mov
pop
mov
pusha
sbb
pop
jmp
pop
insl
mov
mov
jmp
xor
sub
test
push
scas
sbb
mov
cmpsb
jmp
dec
rolb
sub
cmc
inc
fmuls
dec
jnp
push
mov
xor
sahf
jg
mov
lods
xor
push
std
mov
movsl
jnp
aam
jb
xchg
in
jbe
les
pop
mov
and
fidivrl
pop
insl
inc
clc
mov
in
jo
bound
mov
ljmp
stos
xor
repz
fiaddl
mov
or
idivl
sti
mov
sti
xor
aas
mov
gs
sbb
add
lea
mov
mov
in
inc
fsubrp
mov
sub
stos
pop
jg
mov
push
adc
pushf
sbb
bound
ret
lahf
lret
orw
jb
mov
movsl
bsf
add
rol
mov
dec
lea
pusha
adc
arpl
push
subl
mov
daa
xor
stc
jp
loop
rorb
dec
push
xchg
int3
dec
movsb
inc
pop
movsl
lds
sub
lods
movsl
out
cmc
leave
andl
and
adc
cwtl
ss
jge
push
mov
adc
ljmp
mov
inc
mov
push
sbb
push
mov
push
stos
adc
andb
pop
mulps
xorb
push
in
adc
nop
dec
hlt
movsb
idivl
hlt
jae
fisttpl
cmp
sahf
stos
sbb
in
xchg
mov
call
add
pushf
arpl
or
pop
clc
mov
into
and
mov
outsb
mov
popf
stos
sub
mov
das
loop
das
push
das
sub
jae
sbb
imul
mov
jp
xor
imul
fwait
test
jbe
push
pop
nop/reserved
adc
push
sub
jecxz
aam
add
cwtl
adc
pop
jmp
dec
addr16
push
xchg
sahf
jne
or
pop
inc
orl
int3
sbb
sub
mov
push
cmp
push
pop
lds
mov
popw
int
pop
mov
jb
js
jge
es
jle
sub
sti
in
fs
mov
insl
add
std
sub
mov
and
jbe
mov
and
scas
xor
or
pop
popa
mov
cs
popf
mov
aad
cmp
push
cld
inc
mov
jns
or
loopne
xchg
mov
dec
adc
test
add
subl
scas
and
mov
push
ljmp
js
push
inc
mov
or
dec
fbld
dec
test
cmp
inc
enter
iret
stc
repz
out
aas
adc
lcall
icebp
insl
lret
sbb
push
frstor
jle
das
lret
mov
test
ljmp
pop
movntps
sub
es
add
cmp
mov
xor
sub
jb
cmpsb
lret
das
sbb
mov
ljmp
out
popa
sarb
sub
mov
in
jmp
daa
cmpb
add
mov
push
sub
cmp
repz
push
stos
sbb
lret
and
out
sbb
inc
xor
sar
mov
adc
enterw
mov
add
das
xchg
adc
add
dec
unpckhps
arpl
aad
or
push
inc
cmc
xchg
mov
inc
pop
ja
insb
fmull
pop
cmp
movsl
mov
stc
sub
adc
out
out
aad
fdivrs
xor
adc
sahf
out
push
add
rolb
xchg
dec
inc
stc
cwtl
xorl
push
out
movsl
xor
and
test
inc
filds
mov
pop
inc
lds
xor
sbb
adc
movsl
mov
xor
xchg
jno
and
jecxz
or
dec
xchg
push
and
dec
dec
pop
cld
clc
outsl
lods
dec
or
frstor
stos
lret
push
aad
clc
ret
mov
stos
jle
sub
movsb
cmp
out
jae
inc
cmp
pop
push
mov
in
add
int3
mov
jne
mov
repnz
mov
repnz
xor
ss
dec
lds
and
cmp
xchg
in
and
dec
or
mov
in
xor
fimuls
mov
bound
cmp
xor
and
xor
mov
xor
nop
and
test
call
shll
push
cltd
gs
fs
movb
cs
outsl
out
push
cmp
pop
cmp
jns
mov
adc
push
cwtl
and
ja
ret
arpl
movsb
xchg
inc
jno
push
sahf
in
pop
stos
add
int
mov
decl
ljmp
bound
pop
lret
roll
xchg
dec
clc
iret
xchg
push
or
add
push
repz
mov
enter
lods
sti
js
xor
pop
mov
or
cmpsb
add
loopne
lock
stc
leave
jle
in
pop
push
repnz
jg
notl
dec
lods
inc
in
dec
adc
jmp
jne
fucomip
out
ret
mov
dec
sbb
inc
lret
mov
sbb
add
addr16
or
cmp
push
dec
jle
jnp
and
jge
cmpl
sbb
fimuls
xchg
mov
xor
icebp
mov
lret
scas
imul
sbb
loope
hlt
inc
sub
popl
stc
dec
mov
xor
jo
or
in
repz
cmpsb
mov
xor
int3
dec
call
jae
add
xchg
out
xchg
lret
fiaddl
xchg
lea
int
pop
sbb
cs
adc
dec
cmp
cmp
inc
lds
push
jae
aad
out
jo
and
mov
cld
out
xchg
popa
mov
and
push
add
and
imul
jle
fsub
popa
rol
push
mov
cwtl
pop
adc
adc
add
xchg
not
or
xchg
test
sbb
cmp
cmc
jns
and
je
into
dec
mov
add
int
jo
or
mov
ds
stc
inc
jbe
fistps
xor
jl
sub
aam
incl
push
adc
push
push
xchg
imul
jns
mov
sbb
xchg
mov
subb
pop
fcom
sarl
add
sbb
sahf
dec
add
and
mov
jb
ret
movsl
es
sbb
testl
add
and
xchg
xchg
repz
mov
mov
fcmovu
jg
cltd
jno
cmp
jns
dec
add
rorb
push
shl
xchg
stos
jecxz
adc
insb
xchg
push
test
stos
mov
aaa
pop
mov
adc
xchg
push
sbb
mov
pop
les
addr16
sbb
rorl
out
sub
xchg
add
cmpsl
mov
cld
ret
bnd
fbstp
mov
cmp
cwtl
and
loop
repz
fnsave
dec
ret
std
push
out
repnz
push
dec
roll
cmpsl
inc
dec
out
lret
dec
jnp
jmp
and
pop
sbb
inc
sahf
enter
ficoms
push
loope
ss
push
or
inc
mov
insl
int3
hlt
clc
and
sbb
pop
jns
cmp
fwait
jle
popa
ficoms
into
leave
subb
outsl
dec
mov
in
cmp
push
int3
cmp
sahf
movsb
repz
mov
pusha
adc
sbb
sar
lods
add
inc
shrd
cmp
std
das
sahf
push
adc
xchg
pop
adc
fdivl
dec
cld
fmuls
add
sub
ss
out
or
and
sub
mov
repnz
jge
popf
mov
inc
sbb
mov
aas
jp
xchg
outsl
in
mov
aam
pop
popa
popf
sbb
loopne
ficoms
stos
ljmp
inc
mov
push
es
rcr
xor
icebp
sbbl
adc
cmpl
cmp
sbb
negl
out
mov
scas
leave
adc
movsb
call
cmp
push
rolb
stos
mov
fcomps
xchg
xchg
loope
cmp
rorl
outsb
and
ds
in
xchg
inc
xor
cmp
fists
mov
pop
jb
and
jb
loope
lea
xchg
push
mov
xchg
ucomiss
nop
sub
imul
cltd
adc
scas
in
jnp
mov
add
out
adc
fbstp
data16
adc
fcomip
cltd
outsl
push
jmp
pop
pop
push
das
mov
sub
mov
mov
nop
or
inc
imul
testl
adc
xor
adc
pop
cmp
shr
sbb
add
int3
lahf
mov
xchg
test
ljmp
mov
sbbl
cmp
out
add
mov
stc
sub
or
pop
pop
das
dec
aaa
or
ret
mov
fwait
xor
and
loope
mov
push
adcl
in
sub
sub
daa
and
mov
js
imul
dec
inc
inc
dec
pushfw
lahf
xchg
lahf
mov
mov
cmc
inc
repz
test
cmp
lock
mov
fisubs
mov
ljmp
jbe
stc
cmpsl
lds
cmp
scas
pushf
pop
and
and
int
mov
fists
add
pusha
mov
lret
and
test
jno
scas
pop
mov
loop
adc
imul
sbb
fidivrl
loopne
xlat
js
jle
clc
add
addr16
cs
sar
dec
test
lods
cmp
popa
sbb
push
fsubp
outsl
cmp
mov
data16
in
mov
inc
xor
fwait
lds
test
or
loopne
mov
aaa
pop
pop
mov
push
mov
push
sbb
sub
je
cld
mov
xchg
insl
out
cmp
dec
jne
adc
rorl
push
insb
sbb
icebp
jecxz
push
movsl
mov
sub
repz
test
jne
test
xlat
add
adc
jmp
sbb
mov
xchg
rorl
and
pop
outsl
add
pop
cmp
fwait
fidivl
enter
mov
inc
mov
je
and
mov
pop
dec
cmc
mov
mov
xor
bound
hlt
cltd
xchg
lahf
mov
xchg
jns
mov
jne
hlt
lret
test
mov
test
push
bound
inc
sti
andl
pop
mov
cmc
mov
rorb
rcll
dec
scas
mov
movsb
ret
push
pop
aad
ljmp
or
and
outsl
pop
outsl
iret
dec
leave
std
insl
sub
or
mov
xor
mov
push
pop
mov
jnp
xchg
repz
add
inc
pop
repz
ljmp
movsl
rcll
dec
sub
mov
push
icebp
sub
pop
cwtl
mov
leave
out
xchg
pusha
mov
jmp
jno
pusha
insb
adc
jo
xchg
jns
shll
xchg
cwtl
fists
lock
stos
or
push
insb
mov
test
pop
mov
cmp
popf
inc
jnp
js
xor
into
dec
push
sbb
scas
push
test
mov
test
sbb
mov
pop
cmpsb
lds
and
loopne
jmp
bswap
pop
stos
hlt
fcompl
jno
sub
sub
xor
sub
rcrb
mov
mov
jle
sub
xchg
xchg
mov
adc
fildl
test
xor
leave
jo
lcall
pushf
int3
cmp
scas
jmp
fsubl
pop
push
test
dec
dec
jbe
mov
sub
dec
out
xorb
inc
fidivrs
dec
lret
jmp
sarb
mov
dec
mov
sub
rol
sub
fnstsw
out
fcoml
push
aam
sarl
xchg
adc
out
cmp
lds
push
sub
call
aam
lds
and
pop
in
loopne
add
push
sbb
push
inc
pop
push
lods
adc
shr
or
out
lods
pop
popa
jno
call
adc
jp
xlat
sub
out
sbb
cmp
xlat
jnp
test
aam
dec
vandps
in
addr16
adc
add
push
inc
sub
inc
xchg
rol
shll
movhps
test
or
and
cmp
jb
xor
jecxz
loopne
lahf
push
mov
sub
push
mov
dec
sahf
insb
pop
sub
push
adc
push
jl
push
daa
rorb
pop
and
cmp
inc
jle
and
dec
cmpsl
add
jg
or
loop
call
cli
jmp
pop
je
push
mov
sahf
test
mov
pop
or
aas
js
push
cwtl
xchg
xchg
sub
xlat
loope
lods
mov
and
ret
fdivrl
or
inc
inc
xchg
or
rorb
or
jno
mov
jl
in
jb
popl
dec
in
addr16
adc
out
pop
test
daa
cmc
fnstenv
in
scas
cmp
popa
push
dec
mov
decb
js
cmp
sbb
xor
ss
jno
mov
in
jecxz
sbb
sub
push
mov
mov
int
and
iret
xchg
mov
push
insb
mov
xor
xchg
jne
adc
fucom
sahf
mov
jae
push
cmpsb
xlat
and
sbb
mov
jne
in
lret
add
stos
and
stc
enter
inc
xchg
stos
int
adc
push
sbb
xchg
inc
mov
cld
pop
mov
or
mov
aam
aad
ljmp
xorl
mov
pop
loop
mov
or
xrelease
test
int3
cmc
lods
negl
test
mov
out
mov
stos
lret
rol
repnz
or
data16
leave
xchg
adc
and
enter
dec
cmpsl
inc
loopne
rcrb
call
mull
ja
aaa
mov
clc
dec
pop
jecxz
add
test
test
out
adc
repz
dec
sub
jecxz
lret
pop
arpl
mov
xchg
lcall
cmc
jge
xchg
cmpsl
out
sub
jle
scas
mov
rorl
js
ja
cmc
jno
sahf
push
add
push
cli
repnz
jno
mov
fs
mov
fidivl
xor
fcmovu
aad
cli
ret
adc
enter
mov
repnz
mov
adc
lcall
test
xor
es
xor
cmc
cmpsb
dec
jns
add
mov
mov
xchg
lret
cmp
pop
pop
leave
in
pop
shl
fisttps
mov
jbe
fmul
jle
dec
std
push
repz
popa
sub
das
aad
js
lods
mov
ret
mov
pushf
sub
int3
xchg
mov
push
mov
adc
cmpsl
lds
in
xchg
shlb
inc
icebp
aam
jo
pop
cmpsb
sbb
fisubs
enter
enter
icebp
sbb
fisttps
jmp
push
add
pop
cmpsb
test
lea
dec
pusha
dec
aas
sysret
jg
jp
test
fadd
sbb
sub
push
movb
pop
lahf
andb
jae
int3
lods
or
dec
inc
inc
jnp
lock
js
lods
xchg
iret
in
push
add
jbe
and
xchg
dec
adc
repz
and
pop
mov
inc
push
dec
popf
push
push
les
xchg
movsb
or
out
std
pop
bound
ja
sti
test
lret
out
add
lea
dec
lcall
jo
mov
fstl
lret
int3
push
adc
cmpb
pop
arpl
jle
test
outsl
or
cld
or
jmp
dec
fs
jno
sahf
and
in
jmp
push
xor
loop
dec
sbb
push
or
pushf
fisttpl
push
sbb
cmc
pop
popa
dec
mov
mov
shlb
and
fisttpll
pop
add
jne
mov
jb
shlb
rcll
mov
add
mov
lcall
mov
loopne
test
ja
inc
addl
sbb
int3
ljmp
push
jl
stc
sbb
std
mov
jae
repz
add
rclb
repz
mov
cmp
hlt
mov
lret
push
fistpl
outsl
clc
ja
loop
fisubs
sahf
or
jb
cltd
shlb
arpl
xchg
dec
xchg
push
cmc
sbb
leave
out
add
aas
pop
sub
testb
push
adc
shrl
sti
mov
daa
push
aaa
stos
xchg
icebp
nop
sub
test
aad
gs
lret
das
mov
push
ret
sub
nop
sub
aaa
jae
ds
leave
add
call
jg
jne
cmp
xor
cmp
negl
insl
sub
cli
shrb
push
shr
xor
movsl
std
jmp
jb
insl
insb
pushf
mov
xlat
add
test
lods
pop
sar
inc
fwait
je
andb
mov
pop
mov
push
xor
cmp
fmuls
mov
pusha
mov
imulb
cmp
mov
rolb
jnp
xchg
movsb
das
sbb
data16
xchg
aaa
je
push
imull
mov
bound
mov
dec
cmp
stos
pop
push
icebp
loope
mov
stc
fbld
mov
testb
out
clc
add
inc
and
adc
movsl
push
cltd
pop
out
int
mov
jp
movsb
ss
mov
add
sub
mov
mov
or
in
nop
mov
jg
outsb
iret
cmp
sbb
test
cmp
xchg
shll
ret
into
xchg
je
fisubrs
jns
mov
jmp
mov
hlt
lds
movsl
xchg
xor
fists
add
frstor
outsl
nop
xchg
sbb
cmp
pop
inc
dec
or
sub
cld
fidivl
gs
andl
xor
dec
mov
or
nop
xchg
popf
pop
adc
sti
dec
mov
sub
notl
lcall
sarl
cltd
inc
mov
ret
cmp
out
adc
sbb
rorl
inc
loop
mov
and
cmpsl
addr16
mov
in
test
leave
add
loop
cs
imul
mov
and
sub
mov
gs
movsl
icebp
enter
cmp
jmp
fbstp
pop
sbb
lcall
sbb
xchg
push
in
es
stos
ret
cwtl
cmp
outsl
insb
in
jo
test
pop
pop
pop
cmc
mov
cwtl
adc
jmp
cmp
in
sub
mov
push
xchg
xor
lds
mov
cmp
leave
mov
jg
mov
push
ds
xor
mov
inc
gs
setp
pop
sub
mov
push
pushf
lods
and
jmp
mull
icebp
push
push
loopne
dec
in
stos
repnz
and
lret
fucomp
cli
pop
jp
push
call
jle
push
sbb
add
in
dec
sbb
lock
jno
scas
imul
icebp
neg
popf
nop
mov
and
cmp
popf
lret
loop
inc
xchg
xor
inc
xor
cmp
into
xrelease
pop
cwtl
jecxz
mov
mov
xchg
mov
out
mov
xor
sub
scas
mov
pop
adc
shrl
sub
in
sub
pop
test
icebp
int
iret
mov
sbb
lea
out
stc
aam
mov
cmp
jmp
or
adc
inc
je
fnstenv
insl
xchg
dec
sub
xchg
push
dec
mov
mov
fidivs
pop
out
sub
mov
push
mov
pop
or
pop
xchg
push
gs
pop
jmp
sbb
dec
cmpsl
jl
cmc
push
lret
or
push
xor
mov
xor
dec
dec
sbb
or
xchg
dec
inc
jecxz
push
loope
aaa
lahf
mov
shlb
std
adc
inc
pop
fcoms
movlps
clc
cmp
std
add
or
pop
inc
pop
xchg
push
pop
xor
shll
fmuls
fisubl
mov
gs
or
sbb
je
fildl
mov
lahf
data16
and
mov
mov
xchg
clc
pop
mov
inc
sbb
repz
mov
movsb
jp
add
mov
cltd
or
cmc
lods
pop
test
jb
pusha
inc
js
nop
push
inc
lcall
fisubrs
icebp
push
mov
rorb
addr16
mov
and
repz
imul
xchg
aam
xlat
add
fs
xchg
mov
decl
push
cmp
data16
sarb
pop
sbb
mov
fldenv
cmp
js
mov
mov
add
dec
or
mov
add
ljmp
or
inc
lods
xchg
aad
insb
or
mov
or
fisubrl
or
in
imul
int
lock
in
outsl
mov
jmp
loope
push
jbe
mov
sti
pop
xlat
fwait
rsm
sahf
js
lea
jge
bound
push
fiadds
pushw
test
les
pop
daa
insl
jmp
idivl
test
xchg
jmp
mov
adc
pop
icebp
dec
rclb
and
fistps
fistpll
push
add
ret
enter
inc
or
mov
fsubrs
adc
js
ret
ret
xlat
xchg
xor
in
pop
push
out
mov
les
adc
ret
mov
dec
adc
in
xorl
cs
mov
loop
fsubl
mov
aas
xchg
std
repnz
pop
scas
push
test
dec
dec
in
mov
sub
mov
mov
jecxz
out
fidivs
leave
jp
sarb
pop
dec
xchg
or
pop
aam
xchg
movsl
aad
inc
inc
mov
sbb
adc
rorb
fmull
loop
enter
fsubrl
loope
add
nop
andb
cmp
add
mov
pop
cltd
jo
ret
dec
xlat
inc
fmull
shrl
cmp
cs
mov
xchg
push
adcl
adc
or
loopne
enter
xchg
sub
pcmpeqb
add
js
inc
mov
cmp
jo
pop
mov
movsl
xor
stc
xchg
dec
test
mov
fsubr
adc
or
rcl
jbe
mov
shl
jb
cmpsb
ficomps
add
loop
sbb
dec
push
pusha
mov
jg
into
push
je
push
sbb
push
into
jb
movsb
xchg
mov
std
gs
fcoml
and
jle
fstpt
jo
hlt
pop
ljmp
sub
stos
imul
ss
int
lea
mov
dec
and
aaa
sbb
mov
mov
adc
daa
lret
pushf
bound
loopne
and
outsb
dec
pop
xchg
and
arpl
pop
adc
loop
in
sub
fidivl
cmp
dec
int
xor
xor
push
loope
inc
jns
incb
aad
stos
cmpsl
push
lock
adc
daa
mov
sub
lock
aad
pop
int3
mov
filds
ficoms
jno
push
sti
xor
cmp
sub
xlat
pop
imul
leave
scas
sarl
jnp
sub
push
push
loope
adc
ja
sbb
outsl
in
mov
xchg
mov
adc
xor
addr16
js
mov
xchg
sub
inc
fldl
mov
outsb
andb
and
lcall
aaa
inc
xchg
scas
lock
leave
ds
jb
cmpsb
dec
push
nop
jg
mov
jmp
add
push
sqrtps
icebp
data16
fs
mov
xchg
test
arpl
lock
in
lcall
jbe
pop
sub
or
push
push
fstpl
cmp
hlt
arpl
fisubs
inc
sbbb
sti
in
cmp
jo
and
inc
sahf
jb
or
fcoml
inc
cwtl
movsl
imul
sbb
jns
xchg
in
insb
push
adc
dec
clc
out
dec
int3
nop
adc
inc
dec
insb
stc
push
loopne
in
xchg
mov
repnz
in
lahf
inc
test
cmp
jp
in
pop
ljmp
inc
iret
push
adc
popa
xlat
fistpll
pusha
fsubrs
inc
add
call
loope
jns
iret
pop
enter
pusha
jp
adc
sub
xchg
aas
jne
xor
out
add
stc
fisubrl
xchg
ret
mov
mov
outsb
xchg
lods
cwtl
out
xchg
sahf
sti
pop
in
or
enter
xchg
sbb
frstor
adc
test
testb
mov
or
sub
pop
sbb
leave
mov
cmp
push
cmpsb
ja
add
test
iret
pop
nop
inc
popa
or
rol
cmpsl
jb
push
ljmp
mov
test
fwait
xchg
xchg
fwait
pop
mov
dec
mov
insl
xchg
pop
jnp
sub
aaa
cmp
xchg
sbb
jmp
mov
rorl
dec
adcl
xor
and
lock
popf
mov
or
sub
add
sbb
mov
cmpsl
test
jne
jmp
lret
test
sub
xchg
xchg
sub
xor
jmp
imul
jge
bswap
mov
inc
leave
mov
xchg
or
fsubs
adc
mov
jns
fchs
dec
into
add
stos
dec
dec
sahf
addb
and
jle
lds
shlb
cwtl
mov
cmc
dec
and
add
cmp
je
xor
jbe
pop
enter
and
je
in
daa
adc
cld
pop
insb
jo
adc
and
clc
cld
lock
into
mov
ds
out
syscall
fistpll
xor
jae
out
test
fisubs
into
sub
mov
adc
enter
xlat
dec
js
fistps
mov
cmc
es
inc
das
bound
add
and
mov
jmp
cli
popa
repnz
jmp
loop
fidivl
dec
lea
call
loopne
pop
out
or
insl
ret
leave
pop
inc
imul
les
jp
xor
xor
je
lahf
das
enter
mov
mov
mov
jne
cltd
dec
push
xor
add
clc
outsb
xchg
in
int
mov
push
sbb
mov
mov
pop
pusha
sub
leave
jp
sub
ja
imulb
dec
rcrb
rcll
mov
mov
lahf
in
aaa
outsl
jns
test
lret
inc
mov
cmp
in
imul
lret
icebp
inc
add
cmp
lods
sbb
scas
inc
push
cltd
mov
fdivrs
lret
shrl
mov
mov
fdivrl
pushf
mov
and
sub
mov
ret
adc
ljmp
sbb
cmpsl
insb
push
adc
std
bound
cmpsb
mov
mov
sub
push
test
daa
ljmp
pop
imulb
xchg
stos
pop
ja
out
rcrb
push
push
push
nop
insb
fimuls
pop
sub
dec
insb
pop
pop
or
jge
jle
xor
push
adc
orl
xor
fidivrs
pop
cmp
cli
jmp
inc
jecxz
aad
jmp
push
aaa
jmp
cmp
adc
mov
fwait
subl
roll
push
lea
fwait
mov
inc
fstps
orl
int
xlat
frstor
or
xlat
daa
test
sbb
mov
jnp
mov
lea
mov
cmp
or
inc
cmpsb
mov
repnz
repnz
adc
cs
cmpsl
pop
sahf
daa
in
sbb
and
fsubr
out
jmp
push
int
cmp
mov
ret
movb
ficoml
xor
rcll
mov
add
xchg
dec
adc
sub
sub
jl
jae
loopne
dec
or
imul
xchg
push
push
pop
je
pop
enter
or
repnz
pop
pushf
mov
cmpsb
mov
js
add
push
mov
xchg
rcr
mov
sahf
cmc
dec
test
push
mov
in
out
enter
cmp
jno
cmpsl
pusha
nop
fidivs
lods
in
mov
lcall
mov
pop
fdivl
rcll
fsub
push
mov
and
xchg
adcl
pop
cs
push
shll
mov
cmp
lahf
je
xchg
inc
push
stos
jb
cmpsl
daa
jne
insl
lcall
stos
mov
daa
cmpsl
cmp
push
mov
rorb
movsl
pop
outsb
loop
mov
ficompl
sbb
mov
out
xchg
xor
adc
add
jl
mov
push
mov
mov
in
iret
xor
test
cmp
mov
jmp
mov
paddq
jnp
jle
insl
mov
push
mov
xor
cmpsl
xchg
icebp
orl
lret
aas
dec
jo
adc
lods
shr
daa
fwait
jle
push
jae
ret
adc
orb
testb
mov
pop
cltd
push
pop
or
or
stos
sbb
xor
popl
or
pushf
mov
dec
cmp
mov
adc
dec
aas
sub
jl
lods
fimull
ss
push
cmp
ficomps
mov
clc
jno
mov
aad
push
lea
or
xchg
lea
and
lods
insb
jno,pn
inc
xchg
fistpl
pavgw
les
bound
lds
pop
imul
stc
repnz
mov
stc
je
je
xor
repz
push
jmp
jno
add
insl
ja
cmpsb
push
stc
subl
mov
std
fs
outsb
neg
jne
jae
cld
mov
mov
and
punpckhdq
mov
add
movsl
pop
pop
enter
scas
cmp
loope
out
lds
pop
mov
cmp
sbb
xchg
sub
xchg
jp
adc
pusha
daa
lahf
int3
loope
push
popa
inc
sub
mov
jae
aas
push
push
or
mov
adc
inc
adc
das
xchg
loop
and
cmp
sub
xchg
ss
dec
std
scas
repz
sub
imul
jl
mov
mov
push
pop
jle
dec
fwait
imul
jns
cmp
das
bound
sahf
lods
xchg
imul
jge
dec
sti
cmpsb
shrb
jb
out
shll
setae
fnstcw
jae
fwait
mov
imul
in
cs
add
setae
insl
sbb
out
sbb
pop
dec
adc
cmp
out
imul
jno
nop
inc
pop
push
mov
lret
out
mov
mov
aaa
ffree
sub
loope
cld
inc
jne
mov
or
rol
jmp
movsb
xchg
cmp
xor
ficoml
sahf
jno
aaa
lret
pop
sub
xchg
aam
pop
mov
testb
out
jbe
cmpsb
pop
repz
ss
xchg
lret
and
dec
les
add
loop
outsl
push
add
cmpsl
sub
and
mov
push
sti
or
and
sbb
outsb
push
ss
inc
fisttps
push
cmp
inc
loop
add
or
je
lods
pop
mov
cmp
sahf
pusha
addr16
rol
mov
pop
mov
outsb
cmp
mov
cmp
loop
aad
jg
or
js
mov
and
pop
adc
push
push
cli
add
lcall
pop
fucomip
cld
xor
mov
mov
inc
sub
test
stos
mov
sbb
test
xlat
push
xchg
xor
int3
pop
frstor
xchg
lock
xor
jge
lea
rcl
xchg
pop
lret
and
cs
push
or
mov
rorb
rcr
sub
mov
jae
je
test
mov
jns
push
dec
call
dec
mov
push
cs
scas
cmp
mov
push
sbb
cmp
jmp
xchg
int3
xchg
push
mov
shl
loop
xchg
out
pushl
mov
xchg
dec
aas
sub
cmp
pop
les
fcoms
aaa
adc
adc
daa
sbb
ret
sub
int
jg
sub
xor
mov
and
js
mov
in
pushf
cmp
shlb
out
mov
dec
jno
pop
mov
ficompl
test
sbb
fdivrs
mov
pop
jae
addr16
push
push
xchg
das
sub
stos
pop
or
mov
popf
ficomps
std
push
mov
sub
pop
call
in
les
mov
mov
add
repnz
push
test
mov
or
mov
jno
insl
fbstp
cs
int
add
mov
and
cmp
xchg
adc
pop
adc
sbb
adc
pop
cmp
aaa
dec
push
and
push
test
stos
ljmp
lahf
xor
sub
sbb
int3
mov
dec
es
in
mov
mov
xchg
ja
ss
lock
add
leave
dec
mov
xchg
sbb
daa
push
mov
push
xlat
rclb
int3
mov
xor
push
and
insb
xor
addb
ret
ss
jmp
xor
outsb
sub
ss
cmp
ficoml
push
repz
adc
or
and
xchg
inc
in
dec
inc
add
mov
aaa
xchg
jl
lret
jmp
sahf
fbstp
clc
and
call
pop
fsts
negl
test
int3
and
in
sarb
dec
mov
xlat
loopne
jp
jge
int
ds
subl
mov
and
pop
cltd
xorl
cmc
int
pop
inc
mov
jo
ret
push
iret
cmpsb
aaa
mov
cmc
jo
or
outsb
push
dec
jb
xlat
push
jbe
aam
jge
insb
les
cwtl
xchg
mov
xor
cmp
mov
sub
mov
mov
cmp
ja
pop
lods
popf
mov
xor
shrl
dec
jmp
imul
fdivrl
add
pop
sub
inc
or
stc
mov
and
ja
jne
data16
cld
push
push
inc
test
out
cmp
leave
out
cmp
xchg
xchg
mov
push
mov
inc
cmp
pop
dec
sub
inc
push
mov
shr
xchg
push
mov
dec
add
push
je
cmp
mov
js
adc
stos
jo
and
inc
and
sahf
sub
push
inc
push
mov
scas
push
and
push
cmc
mov
jecxz
fbld
or
cmpsl
push
mov
adc
mull
or
xor
jecxz
jb
dec
cltd
test
arpl
sahf
ss
dec
adc
inc
stc
jmp
add
pop
push
imul
pop
je
push
ja
repz
dec
ljmp
test
rcrb
scas
repnz
lea
mov
cmp
xor
les
pop
mov
mov
sti
adc
jae
pop
jl
sbb
xor
sub
pushf
inc
rcrl
cmp
mov
out
pop
nop
jnp
cmp
in
pop
shl
lahf
lods
sbb
cmp
fwait
and
ljmp
cmp
mov
outsl
cmp
test
pop
xor
aad
mov
repz
insb
or
mov
pushf
xchg
fsts
aas
add
rorb
daa
or
out
push
mov
ljmp
xor
inc
push
fldl
jns
dec
lret
in
sbb
push
or
xchg
fucomp
fdivl
aas
xlat
and
and
loopne
jb
ffree
clc
decb
pop
mov
lret
sbb
adc
iret
out
jne
push
xchg
cmc
lahf
out
or
incb
fdivrl
gs
xor
fadd
mov
ret
imul
and
inc
push
daa
pushf
pop
into
repnz
int3
dec
jne
cltd
lret
sub
push
mov
add
ds
into
adc
outsb
and
fldt
aad
fnstenv
sub
sbb
insl
cld
fdivr
aad
jno
aad
and
push
and
rcrl
fildll
ret
stos
filds
pop
xor
xchg
lret
add
add
call
xor
cltd
dec
shll
pop
in
insl
out
mov
xlat
xlat
inc
shlb
mov
out
sbb
cmp
mov
sti
adc
mov
movsb
mov
lcall
lock
cli
add
addr16
cmp
adc
test
inc
shll
xchg
test
mov
testb
hlt
ds
lahf
sbb
jo
aad
aas
popf
mov
jl
lahf
xchg
loopne
sti
movsb
imul
fcmovnu
adc
and
imul
stos
sub
sbb
data16
out
xor
ds
mul
ficompl
pop
jmp
leave
cmp
into
loope
adc
pushw
cmc
jnp
inc
dec
jl
daa
fldcw
inc
gs
xchg
int3
inc
leave
aaa
and
fwait
test
xor
xchg
and
pop
fdivl
lds
cli
dec
xor
add
pop
pop
movsb
cmc
sti
fcomip
add
stos
mov
inc
or
insb
and
push
xlat
pop
jle
or
pop
jnp
mov
add
pop
push
iret
enter
and
jb
xchg
mov
js
pop
aas
popf
jmp
jns
xchg
or
fistpll
inc
jo
inc
in
popf
push
cmp
push
pop
jp
mov
jmp
push
mulb
fwait
xor
into
push
push
mov
idivl
ret
loope
pop
sub
push
pop
lcall
pop
mov
inc
xchg
cli
and
js
pop
fld
lahf
xor
aaa
sub
js
inc
push
testl
push
scas
cmp
je
dec
xchg
mov
mov
sub
jp
sbb
outsl
daa
aam
xor
movsb
adc
pop
mov
jns
fisttpl
enter
jo
mov
out
rclb
add
adc
mov
out
xorl
pop
popl
outsb
scas
xor
pop
rol
xor
out
addr16
mov
inc
pusha
pop
jnp
inc
jnp
push
fnstsw
jb
out
call
pusha
jge
push
push
enter
je
jne
cmp
mov
and
aas
xorb
fs
xor
dec
or
adcl
lods
mov
loop
sbb
pop
pop
out
xchg
clc
out
popl
popf
push
push
xchg
in
dec
sub
xor
insl
xchg
mov
addr16
mov
mov
stc
test
jae
divl
mov
add
scas
cmpsb
sbb
dec
push
sbb
imul
inc
fs
or
cwtl
or
int
and
fwait
cwtl
mov
lds
push
imul
add
scas
inc
ss
fmul
stc
dec
and
jge
and
jne
sub
or
and
and
addl
or
shlb
mov
xor
xor
imul
inc
sub
jno
shll
pop
fistpll
rorb
cmp
lods
mov
int3
sbb
pop
sub
sbb
mov
ficoms
movl
mov
sbb
adc
mov
xor
mov
mov
jnp
dec
fstps
ds
int
mov
clc
pop
pop
lds
shl
xchg
lods
mov
mov
pop
test
inc
add
push
bound
imul
cmp
xor
out
jmp
mov
jb
nop
ljmp
mov
adc
leave
sbb
decl
lods
push
pop
add
leave
loopne
bound
cmpsb
out
rcl
jnp
jg
and
mov
or
mov
jbe
jecxz
out
jge
mov
pop
cltd
fdivr
inc
inc
add
insl
and
jno
pop
xchg
and
pop
out
inc
mov
sbb
jno
test
inc
lcall
or
mov
pop
test
ja
mov
cmp
ds
add
push
sbb
add
movsl
add
cs
xchg
push
mov
lahf
in
lret
jl
mov
les
lds
jne
in
xor
mov
cs
loope
mov
xlat
loopne
out
mov
negb
dec
call
in
inc
frstor
rcrl
lock
push
push
jmp
add
rcrl
in
lcall
pop
add
xchg
push
mov
sub
pop
fstpl
shlb
jl
lcall
sahf
int
fisubrl
mov
adc
bound
cmc
cwtl
jne
repz
out
clc
sub
repnz
jle
sub
cmpsl
lock
mov
xor
adc
out
inc
fnsave
mov
lods
in
mov
enter
mov
jg
out
inc
jno
mov
jp
xor
in
push
xchg
mov
repnz
sbb
and
adc
ret
repz
push
mov
sbb
jge
shll
mov
mov
negl
mov
jmp
or
or
add
stos
fs
not
stc
adc
push
stos
inc
test
xchg
push
in
push
subb
rorl
inc
jle
out
insb
emms
test
clc
cmp
mov
jg
push
imulb
pop
cwtl
or
or
xor
xchg
mov
sub
mov
xchg
decb
push
and
popf
cmp
sub
cmp
inc
add
jmp
add
add
push
fildl
or
aas
lcall
ds
fstps
sbb
ss
rclb
cs
mov
cli
mov
fbstp
movsb
cmp
incl
sub
xchg
push
push
mov
xchg
jp
lcall
stc
xchg
test
out
jnp
popa
addl
dec
pop
push
fmull
in
in
sub
add
cmpsb
out
xchg
xchg
sarl
cmp
pop
cmp
popa
adc
pop
popa
mov
int
sti
sti
scas
sbb
mov
jmp
pusha
jbe
jns
or
aad
lock
test
dec
pop
push
loopne
dec
push
test
dec
jb
outsl
cmp
mov
fimuls
aaa
add
aas
add
and
mov
mov
imul
or
je
inc
add
daa
aaa
pop
xchg
imul
push
push
and
pop
adc
out
loopne
and
cwtl
mov
daa
xchg
xchg
push
jno
or
lahf
sar
popf
jbe
jmp
jne
adc
add
fdivrl
mov
mov
int3
mov
adc
sub
mov
add
imul
mov
jb
mov
movsl
cli
rorb
fwait
mov
rclb
mov
mov
jl
jp
mov
inc
xor
cmp
cmp
loopne
hlt
or
mov
pop
jl
testl
in
lods
cs
aad
and
xchg
test
push
fisubl
push
enter
or
push
test
ja
popf
adc
daa
pop
mov
add
pop
ret
xor
xchg
inc
into
ret
mov
roll
testl
pop
push
or
insb
hlt
dec
sub
sub
mov
and
pop
jne
push
pop
and
mov
sbb
out
icebp
cmpsb
sbb
fscale
sub
addr16
xor
aad
sub
push
test
mov
and
mov
sbb
inc
or
push
mov
add
adc
scas
ficomps
frstpm(287
push
or
enter
mov
cwtl
cmp
les
xor
scas
sub
add
xchg
int3
mov
push
mov
pop
hlt
jnp
xor
call
fdivr
arpl
xchg
lock
sti
mov
inc
jns
rorl
adc
fwait
cmc
cs
pop
push
ret
insb
inc
cmp
in
cmp
punpckhdq
sub
andb
add
movsl
lock
scas
sti
cmp
out
pop
ljmp
ss
adc
ret
jb
xchg
sbb
sub
dec
add
in
rolb
adc
stc
rol
enter
jg
pushf
hlt
jae
push
sbb
test
repnz
dec
rol
add
ret
ljmp
inc
xor
lods
jne
jae
outsb
sub
adc
lret
xchg
pop
orb
push
pop
sub
in
mov
dec
jmp
inc
mov
fwait
call
jbe,pt
push
es
ljmp
test
jecxz
inc
mov
jne
addr16
or
xchg
sbb
or
dec
cld
mov
mov
repz
cmpsl
repz
jl
sbb
push
repnz
jle
out
cmpsl
xor
pop
pop
dec
ds
in
fidivl
fs
pop
ficoms
pop
push
xchg
movsl
mov
mov
shll
cmp
or
mov
push
push
fdivrl
pop
call
out
out
sbb
cmp
in
fisubrl
adc
mov
add
andb
dec
xchg
add
cld
aad
mov
or
cmp
popa
dec
pop
data16
cld
lahf
ds
dec
mov
std
mov
sub
dec
aas
mov
or
aas
das
push
xor
mov
mov
adc
lea
add
and
les
ficompl
in
shl
xor
enter
loop
mov
mov
or
sbb
xor
int3
jge
push
push
shl
mov
mov
sbb
popa
cmc
xor
sbb
xchg
xor
dec
mov
mov
je
jmp
es
jnp
dec
aad
mov
mov
jle
xlat
push
inc
cmp
cmpsl
mov
jo
aas
and
fnsave
sub
xchg
sbb
dec
dec
lcall
dec
mov
xor
cli
out
daa
lock
lret
in
pusha
sub
mov
loopne
shll
imul
inc
cltd
cwtl
pop
push
aam
popf
jns
addr16
and
push
shlb
cmc
das
in
jge
xchg
aas
sbb
cmp
aaa
jne
in
and
outsb
jle
jle
xchg
test
xor
pop
push
test
loop
sub
scas
cmpsl
ret
ret
xor
mov
and
rcrb
shll
popa
mov
push
gs
push
jl
fnstcw
shr
push
push
mov
cmc
nop
and
clc
cmc
insb
sub
orl
test
cwtl
sub
mov
push
ret
lret
xchg
je
adc
pop
bound
testl
pop
rcrl
lock
mov
push
fdivrs
ss
xor
adc
icebp
cmp
mov
jge
lods
addl
push
popa
xchg
dec
add
sub
das
js
in
gs
cld
mov
and
les
addr16
ja
xor
fs
push
xor
pushf
in
add
xor
lock
outsl
jns
mov
in
repnz
mov
cmpsl
adc
mov
lret
imul
mov
outsl
cmpsl
add
fstpl
mov
jmp
fucomi
int
inc
fwait
rorl
test
xchg
xor
dec
and
icebp
fcoms
insl
and
shrl
in
push
outsb
lcall
wbinvd
pop
or
inc
ret
pop
rcr
ret
out
cs
push
push
scas
sahf
js
xchg
into
xor
xchg
pop
jnp
mov
dec
aad
outsl
into
fcompl
fwait
cmp
or
mov
xor
adc
or
sbb
mov
std
sbb
test
fcoml
mov
lods
xor
add
movsl
adc
je
cmp
enter
stos
adc
mov
gs
or
and
aad
cmp
push
loope
xchg
into
sbb
inc
push
sldt
push
sbb
push
mov
add
sub
loope
andb
sub
jo
popf
int3
and
mov
jb
jnp
ret
pop
mov
xor
xchg
pop
mov
shll
mov
test
stc
arpl
es
fs
pop
pop
pop
cmpsb
cmp
inc
ror
rcll
pop
pop
lea
lock
icebp
clc
fiaddl
push
mov
mov
jne
or
sti
outsl
adc
mov
dec
mov
mov
dec
jne
ficoml
rcr
std
xchg
inc
jbe
or
xorb
add
push
push
push
mov
push
mov
dec
das
and
adc
loopne
xchg
jns
mov
nop
push
add
jg
test
mov
inc
insl
ror
jno
iret
insb
fsubrs
ja
dec
aaa
inc
and
in
jg
xchg
xchg
add
jno
test
and
fwait
mov
push
cmpsb
jo
sbbl
mov
jns
lcall
hlt
push
inc
pop
roll
add
add
hlt
and
outsl
xor
outsl
adc
jp
ret
fcomp
outsl
aaa
or
addr16
and
stos
imul
inc
ss
cltd
mov
scas
jl
sub
pop
ret
das
pop
mov
mov
cltd
cmp
sti
pop
cmp
or
popf
es
out
ss
and
jnp
adc
mov
lcall
dec
out
cmpsl
movsl
push
test
jb
iret
xor
inc
push
lea
xchg
sbb
test
xchg
push
popa
pop
and
pop
divl
jge
andl
mov
les
cwtl
call
sahf
repnz
and
int3
les
xchg
stos
xchg
adc
cmp
aam
dec
jno
jge
pop
adc
movsb
or
and
xorb
cltd
fadds
ljmp
stos
sbb
mov
test
insb
xor
out
fnstsw
cld
sub
insl
adc
cmp
mov
fs
icebp
sbb
inc
cmpsb
jne
bound
sbb
xchg
and
loop
lea
loopne
lret
imul
xchg
out
sub
sub
mov
aaa
cmpl
sahf
sub
clc
bound
into
inc
adc
repz
and
or
imul
je
scas
sbbl
ror
stc
pusha
adc
cli
lret
push
sbb
scas
cwtl
outsl
cmp
imul
lcall
call
inc
sbb
pop
mov
div
push
mov
divl
xchg
lsl
mov
out
lret
push
add
add
daa
nop
lock
testl
jo
lds
dec
mov
adc
xchg
mov
pop
dec
sub
xlat
add
push
sub
and
lret
cltd
xchg
push
and
popf
shr
imul
fucomi
fwait
addr16
sbb
call
add
aaa
mov
push
sti
dec
lret
cmc
jle
out
sbb
push
movsl
das
mov
inc
jp
enter
jecxz
xchg
neg
sbb
add
orb
ficoms
fisubrl
cmp
shll
inc
push
xor
insb
xorb
pop
push
inc
sbb
outsl
sub
pop
das
push
jo
mov
dec
mov
mov
lea
inc
inc
mov
stc
pop
cmpsl
in
bound
dec
sub
xor
dec
mov
int
aaa
mov
cwtl
ljmp
xchg
in
repz
fsub
insl
sbb
mov
jg
mov
out
pop
inc
int3
stos
test
enter
popf
sti
pop
inc
adc
movsl
ficoml
test
xor
and
mov
lret
mov
or
xchg
fcomps
xchg
push
pop
add
iret
out
mov
sbb
movsl
mov
lret
in
lods
repz
push
dec
ja
jnp
sahf
insb
je
cmp
repnz
xchg
fs
and
or
enter
or
jp,pn
repnz
jnp
dec
cld
dec
ret
xchg
sbb
mov
dec
add
rorl
stos
shrb
xchg
mov
cmp
outsl
shrl
lahf
lods
mov
aaa
inc
in
lcall
inc
xor
jae
adc
push
push
xor
cmc
sub
pop
repnz
loopne
xchg
icebp
stos
enter
js
mov
std
lods
jecxz
in
jge
pushf
pop
add
mov
push
and
ljmp
fimuls
fwait
in
fimuls
push
test
sub
ret
clc
inc
lods
push
cmp
pop
in
test
push
and
xor
adc
out
imul
inc
repz
scas
sbb
xor
jmp
int3
shr
pop
add
idiv
cmc
jae
sub
mov
out
dec
sbb
push
xchg
rolb
daa
movl
in
out
dec
clc
sub
test
aaa
lahf
pop
clc
daa
ret
cmc
xchg
mov
lds
cs
hlt
popa
jbe
xor
lcall
pop
testl
jp
xor
rclb
and
mov
ret
pop
inc
out
jmp
cmp
arpl
and
dec
in
push
mov
js
dec
lea
pop
std
stc
testl
push
adc
sbb
dec
out
std
jle
mov
gs
mov
test
in
icebp
push
loop
mul
push
push
mov
stos
push
scas
das
test
and
fsts
scas
sbb
ficoml
pop
mov
std
mov
fdivrs
loope
dec
mov
push
and
sahf
sti
imul
jb
sub
inc
ds
dec
sub
int3
add
cld
inc
push
cmpsb
ret
pop
push
ds
pop
adc
iret
test
repnz
sub
sbb
ret
add
jnp
inc
adc
in
and
test
ss
add
lock
cmp
and
incb
inc
insl
test
push
addr16
pop
pop
loope
sbb
jecxz
cld
test
cmp
fwait
sbb
mov
and
sub
sub
and
jle
inc
inc
loope
int3
sti
mov
push
mov
mov
test
jo
push
xchg
push
ljmp
outsl
std
shlb
cwtl
stos
xchg
popa
fdivr
add
mov
leave
add
pop
ss
mov
mov
rcl
jo
mov
mov
repz
ror
add
rcrb
push
sbb
rcll
andl
loopne
xchg
inc
adc
repnz
push
ret
in
xchg
pop
fsubrs
stos
jecxz
push
jnp
std
inc
adc
and
lret
int
cmp
xlat
sub
andb
sbb
test
movb
bound
inc
dec
xchg
push
ss
aam
cmp
jne
cmpsl
mov
mov
cmp
xor
or
fdivrl
insb
int3
repz
mov
test
movsl
mov
xchg
sub
arpl
lret
push
clc
mov
inc
mov
push
ds
push
mov
ja
sub
mov
pusha
in
dec
or
adc
stc
sub
lods
fs
sub
jne
push
cld
sub
fistps
add
and
adcb
xchg
jp
dec
mov
dec
call
cmp
int3
cwtl
ja
fcmovbe
rcrl
pop
jmp
adc
repz
or
or
outsl
repnz
lret
pop
jmp
or
sub
jns
mov
cmp
mull
jle
adc
rorl
sbb
popa
clc
roll
outsl
scas
jmp
in
test
add
xor
adc
sub
jo
jne
mov
sub
jge
and
lahf
inc
push
sub
jl
sbb
jmp
xor
cmp
cmp
push
out
cmp
fs
repz
adc
pop
push
out
pop
lret
mov
test
mov
pop
hlt
inc
push
and
mov
sub
mov
pop
lods
inc
ljmp
xchg
dec
jmp
out
aas
adc
daa
xor
ret
aam
sub
add
popa
sbbl
subl
cmp
insl
xor
lcall
std
ret
xchg
fildll
push
jno
stc
pop
cmp
scas
add
shlb
mov
orb
popf
les
inc
aad
push
pop
iret
mov
or
fdivp
in
inc
mov
sahf
mov
jge
jmp
xchg
clc
xchg
aas
lret
fwait
scas
into
inc
or
mov
loopne
mov
sbb
dec
jne
loopne
pop
sti
loop
call
mov
rcrl
pusha
pop
aaa
int3
xchg
ret
mov
jno
push
enter
daa
adcb
mov
pop
xchg
mov
or
nop
sbbb
mov
sahf
pop
pop
jae
fnstcw
sarb
pop
jno
xor
or
andl
push
jecxz
clc
pop
add
dec
popa
jbe
xorl
lret
mov
daa
sbb
push
jg
xchg
lahf
add
in
push
push
xor
add
ret
push
movsb
mov
nop
loop
bound
out
and
jnp
cmp
popf
jmp
jl
jg
je
stos
divl
xchg
iret
and
test
and
in
test
iret
int
xor
push
mov
roll
sbb
out
sub
ds
orb
scas
out
mov
stc
pop
pop
lahf
and
ret
test
sahf
xchg
aaa
jno
ds
sub
cltd
jo
rcpps
cmp
repnz
jo
pop
sahf
add
and
rcll
sbb
adc
inc
push
sub
arpl
dec
push
dec
sbb
pop
test
jle
add
lods
subb
xor
mov
cmp
adc
xor
inc
call
fstps
or
stos
or
add
enter
jae
lret
decl
ror
int3
js
cmp
bound
arpl
nop
insl
inc
in
rcrl
movsl
xor
push
cmpsb
test
cmp
icebp
mov
jp
mov
mov
decb
ljmp
cmp
mov
push
adc
rcl
mov
fldcw
xor
or
pop
dec
in
outsl
seto
ds
outsb
js
scas
inc
xor
jg
les
jg
loop
rorb
lods
js
cmpsb
in
add
jecxz
lods
adc
decl
sub
jp
push
mov
out
nop
iret
jns
lods
pop
cmp
fadds
xor
loope
jns
xor
sbb
gs
push
cmpb
xlat
xor
arpl
rol
sbb
cwtl
mov
xchg
jbe
out
mov
fcmovne
mov
dec
popf
mov
fistpll
xchg
jb
mov
icebp
cld
daa
insl
ljmp
psraw
scas
fucom
cltd
and
or
out
lods
dec
sbb
jnp
je
mov
pop
outsl
or
mov
mov
and
std
cmpsb
cmp
sub
cmc
jle
cmp
pushf
pop
loope
sub
cs
stc
jns
lret
push
mov
xor
fisttps
mov
and
shrl
push
mov
rsqrtps
xor
movsb
xchg
out
jecxz
nop
shl
dec
adc
pop
enter
push
push
add
js
dec
movlps
push
dec
mov
lea
mov
sahf
xchg
mov
adc
mov
bnd
xchg
add
sub
movsl
xor
or
push
lcall
or
cmp
mov
mov
sbb
rclb
add
and
cli
test
push
mov
mov
dec
add
dec
cli
movsb
cltd
lret
adc
pshufw
fnsetpm(287
stc
inc
stos
adc
lahf
and
sbb
add
xchg
out
lea
xor
jg
mov
push
cmp
enter
dec
xor
lds
incb
outsl
outsb
pop
pusha
jne
cmp
and
xor
mov
mov
cwtl
std
xlat
lahf
mov
adc
and
push
js
and
outsb
jl
loop
loopne
adc
add
test
add
dec
ss
or
and
sbb
lret
mov
dec
jge
outsb
xor
xor
ljmp
out
jbe
fnstcw
inc
loope
push
cwtl
fwait
stos
adc
neg
test
mov
sub
cmp
mov
pop
cmp
std
jmp
inc
insb
out
or
mov
xchg
dec
rcr
mov
push
ja
push
pushl
inc
loopne
aam
sub
jne
xor
or
fcomip
push
stos
cmp
xchg
sbb
loope
sub
pop
inc
mov
insl
and
loopne
rorb
inc
adc
inc
int
sbbl
cmp
push
out
test
cwtl
mov
ja
faddl
gs
fisubl
add
int
stos
dec
sbb
shl
bswap
lock
adc
shr
gs
xor
lds
fcoml
jae
repnz
mov
fisubl
lock
pop
mov
xor
dec
pop
leave
jbe
fistl
arpl
rclb
dec
xchg
ljmp
xor
pop
negb
mov
mov
jp
cmp
fwait
pop
ror
outsl
inc
adc
inc
inc
movsb
dec
mov
mov
stos
lock
xchg
mov
sar
jb
shll
orb
push
cmpsl
scas
ret
add
stos
push
fnstsw
mov
shr
pop
jle
dec
scas
in
sub
mov
mov
push
dec
shlb
push
sub
pop
movsl
outsl
pop
or
mov
bound
xchg
pusha
xchg
push
jo
out
mov
add
lcall
jae
or
pop
push
lcall
js
cs
mov
insl
xchg
aam
adc
outsl
icebp
int
or
stc
add
or
rcrb
xor
negl
test
lods
sub
xor
pop
test
pop
nop
mov
add
scas
or
or
jl
jnp
loop
sub
dec
dec
xchg
popf
daa
sbb
lods
push
clc
jl
ds
repz
inc
shl
cwtl
cltd
and
mov
iret
jecxz
es
insl
subl
std
jmp
lcall
push
out
fdivrl
test
mov
cmp
fmul
adc
pop
rorb
imul
cs
jns
lods
adc
jg
ljmp
cli
leave
sbb
insb
shlb
push
add
xchg
cmp
cmpsl
jo
hlt
pop
loope
mov
mov
xor
stc
pop
inc
leave
dec
clc
push
je
xor
inc
push
cmp
cmp
ror
imul
rorl
jne
andb
mov
test
arpl
lods
adc
aaa
dec
push
sub
sub
dec
fsubr
bsf
ret
in
faddl
sub
imul
add
jnp
iret
add
jno
pop
andb
imul
into
fldenv
inc
ret
sti
xchg
outsl
inc
pop
add
mov
jae
out
loop
pop
jmp
lret
adcl
imul
cltd
mov
sub
test
popf
inc
add
iret
nop
adc
xchg
mov
ret
sub
sub
ds
add
cmpsl
pop
jg
jo
fisttpl
out
leave
out
cmp
addr16
movsl
push
mov
int
mov
sub
push
cltd
out
mov
aas
mov
jb
rcrl
xchg
adc
push
negl
in
add
and
enter
test
mov
or
pop
adc
cmp
mov
pop
out
push
mov
and
iret
cld
jae
mov
xchg
repz
pushl
push
jecxz
xlat
out
cmp
pop
or
rol
out
lods
out
mov
icebp
outsb
notl
scas
mov
nop
dec
cmp
popa
test
fdivp
and
pop
faddl
mov
sub
movsb
iret
sbb
lds
movsb
sbb
jle
pop
push
andb
jmp
sbb
xchg
push
fsts
fcomps
mov
nop
push
xchg
adc
rcrb
movsb
mov
hlt
nop
inc
inc
ss
sbb
mov
repnz
cli
repz
cmp
sti
mov
xchg
shll
outsb
xor
xchg
js
xchg
pop
jmp
or
in
loopne
sbb
outsb
dec
mov
jge
pushl
fnstcw
sub
mov
push
mov
mov
mov
jnp
mov
pop
or
loopne
mov
mov
outsb
mov
mov
rcll
das
addb
imul
add
jg
cmp
std
lods
hlt
fidivrl
sub
mov
push
fs
and
sub
fwait
push
pop
inc
imul
cmp
add
lds
push
xchg
lcall
mov
mov
pop
lds
mov
test
sub
push
mov
leave
and
std
pop
mov
cmc
aas
cmp
test
fcompl
test
pop
int
xchg
xchg
movsb
lcall
pop
sbb
add
lods
test
decb
fs
sti
adc
cmpb
push
push
mov
or
pop
addr16
or
bnd
cmp
inc
loope
out
test
hlt
push
ret
mov
icebp
call
enter
mov
aaa
cmp
dec
xor
jnp
icebp
aam
cmp
lcall
sub
pop
mov
pop
sahf
lahf
xor
mov
sbb
adc
data16
pop
adc
sbb
xchg
outsb
aaa
mov
xchg
pop
xchg
and
sub
aad
addr16
jecxz
cmp
sub
inc
adcb
pushf
shrl
cmp
outsl
mov
pusha
popa
pop
inc
push
xor
arpl
sti
mov
loop
fs
lcall
mov
cs
inc
je
cmp
sub
das
ret
neg
jp
inc
rcrl
and
push
and
lahf
push
cmpsl
cli
cltd
dec
inc
sbb
jmp
ss
cmc
dec
mov
xor
adc
sbb
lahf
cmpsb
movsb
mov
jge
mul
add
mov
sete
cmp
sbb
sbbb
inc
stos
or
jp
cmp
lcall
add
and
mov
iret
push
nop
in
lcall
or
dec
lds
jne
xor
and
sbb
and
adc
pop
add
cmp
lea
cmp
and
inc
xchg
and
mov
mov
dec
mov
adc
sbb
xchg
mov
and
xlat
movsl
add
out
aas
lcall
insl
int3
xor
sbb
mov
andl
and
lret
pop
in
cmpsb
add
xchg
fs
cmp
fwait
jb
int
insb
xor
jne
movsl
rorb
xor
or
mov
imull
mov
fdivr
lock
clc
es
sbb
aad
out
movsb
inc
add
stos
mov
stos
mov
hlt
inc
sahf
ja
cmp
int3
test
pushf
jl
pop
sbb
pop
adc
sbb
xchg
pop
lock
inc
or
inc
sarl
ss
mov
mov
mov
jecxz
pop
add
lock
lods
lods
nop
out
rol
fidivs
or
mov
lret
mov
sub
iret
or
in
icebp
pop
std
mov
inc
mov
push
pop
clc
xchg
fcmovnu
adc
test
test
xor
cld
mov
xchg
and
push
mov
les
adc
add
int
sbb
das
pop
movsl
xchg
arpl
mov
and
out
mov
jno
xor
daa
mov
es
push
mov
iret
ss
popa
rcrb
les
subb
mov
sub
mov
lods
jns
cmp
xchg
sti
cmp
in
subb
jns
popf
int
pop
pop
add
push
addb
mov
negb
cmp
scas
lret
mov
dec
jno
mov
fisubs
andl
cmp
adc
lcall
adc
add
mov
cwtl
aad
jno
fcmovnbe
dec
and
push
lahf
daa
outsl
iret
fisttpl
xor
les
dec
loopne
xchg
pop
mov
mov
leave
rol
test
repz
or
xchg
and
outsb
add
xor
scas
outsl
inc
cmp
in
cmp
push
or
sbb
fwait
jno
dec
inc
sahf
jecxz
inc
addl
sar
jg
mov
inc
in
cmc
rcrb
push
xchg
or
repnz
loopne
js
push
js
mov
gs
mov
xor
stc
jle
je
hlt
jbe
xor
lock
jo
adc
roll
int
out
nop
sbb
cmpsl
outsb
out
es
je
outsl
test
add
jle
je
sub
mov
or
inc
or
shll
add
cltd
lods
xorb
andl
clc
fs
sbb
and
push
ljmp
stos
int3
mov
sti
add
dec
sbb
mov
popa
aaa
mov
cld
adc
fstpl
pusha
out
xchg
clc
mov
push
call
jbe
test
cmp
adc
and
push
push
push
push
dec
lods
pop
adc
lret
test
leave
popf
or
lret
into
mov
out
outsb
jnp
lret
or
fwait
jg
sub
sub
mov
fs
call
movsl
sbb
jbe
mov
xchg
push
jecxz
and
pop
jecxz
pushf
push
loopne
ss
mul
jae
out
inc
lret
rcrb
pop
mov
fldcw
aas
imul
shll
ficomps
scas
dec
mov
add
bnd
ja
sbb
scas
mov
jmp
and
inc
cmp
nop
push
int
movsl
and
xor
inc
loopne
mov
xor
out
sarb
dec
pushf
aam
out
sub
andb
gs
mov
jne
pop
data16
inc
xorl
jecxz
sub
loop
jo
int3
cmp
insl
sbb
dec
lret
xor
pop
lahf
dec
sbb
adc
and
je
xlat
add
sarl
mov
jbe
push
lea
xchg
in
sbb
mov
call
cs
mov
inc
jp
push
mov
popa
push
pop
fwait
icebp
xorb
shll
push
ljmp
add
cmpsl
add
mov
pop
and
xor
add
sti
fs
jmp
hlt
adc
dec
pop
out
dec
shll
or
test
insb
imul
sbb
cmp
bound
cli
mov
jae
sbb
enter
clc
push
outsl
fstl
negl
mov
ret
inc
xchg
mov
mov
das
shl
sti
inc
les
mov
fistpll
int3
sub
rcrl
ret
insl
sub
mov
inc
aas
adc
lret
mov
jge
and
jnp
dec
xchg
cmpsl
cmp
lret
mov
and
mov
dec
dec
sub
jbe
jle
jle
mov
sub
dec
imul
dec
push
pop
xchg
into
in
shrb
jecxz
xor
pop
xor
bound
inc
lret
icebp
push
lock
dec
fdivrs
mov
mov
and
mov
lods
int
mov
mov
lods
push
lock
int3
jo
adc
paddw
push
leave
bound
xchg
mov
xchg
mov
scas
aaa
push
mov
bound
ljmp
in
or
cmp
fsubrs
pop
mov
js
jo
out
test
xchg
insb
jmp
fcomps
imul
mov
mov
push
mov
lds
je
fisubs
mov
imul
xor
sbb
sbb
mov
fwait
dec
cmpsb
inc
dec
cmp
fucom
mov
mov
icebp
testb
aam
dec
xorb
movsl
daa
cltd
and
add
dec
mov
pop
xchg
sbb
sub
out
cmp
mov
push
xchg
adc
or
xor
mov
mov
add
aas
fwait
sub
leave
add
clc
popf
clc
sahf
pop
push
pop
inc
jle
mov
lock
push
cs
push
loopne
add
or
dec
shl
pop
mov
addl
cmpsl
loope
cmpl
rol
stos
pop
fistl
xchg
and
movsl
inc
xor
inc
movsb
movsl
xchg
lret
cmp
stos
pushf
jge
push
cli
mov
pop
pusha
lret
movsb
fs
inc
ret
xchg
dec
and
lods
lock
inc
mov
ret
xchg
cmpsl
dec
cmp
mov
mov
dec
inc
add
xor
cmp
dec
out
xorl
push
popf
sar
dec
sbb
lock
xchg
hlt
push
outsb
cmp
lret
xchg
mov
xchg
leave
cs
popa
clc
mov
in
popa
loop
mov
imul
and
mov
lea
xchg
pop
fs
ret
jbe
scas
les
fistpl
subl
inc
repz
pushf
sub
mov
lahf
xor
mov
add
xchg
push
sahf
sub
je
fstps
sbb
mov
aad
jbe
mov
xchg
xchg
dec
fsts
dec
lods
aaa
imul
ret
add
adc
fsubrl
lret
or
divl
add
aas
es
sarl
dec
xor
lds
adc
xchg
fistpll
add
lahf
aam
loopne
inc
lods
into
push
loopne
inc
scas
dec
lods
fbstp
jmp
lock
aaa
cli
out
push
push
cmp
stos
and
push
jg
test
pop
aas
in
jae
dec
jns
or
mov
aam
mov
sub
cmp
push
mov
push
pushf
popf
pop
pop
mov
stos
mov
movsl
cmp
leave
mov
sbb
shrb
gs
cmpsl
or
inc
xchg
jne
pop
xor
sub
ror
test
cld
nop
stos
xor
inc
dec
xchg
cmp
and
ret
push
jle
sbb
test
push
aaa
std
imul
push
sete
sbb
fld
xor
or
pop
or
int3
insl
lret
or
loopne
jno
lods
ret
or
icebp
dec
mull
vmovntdq
cmpsl
stos
jle
push
pop
jg
arpl
mov
fldl
imul
cmpsl
addr16
add
xlat
mov
mov
cmpsl
mov
fistpl
dec
test
xchg
notl
xlat
mov
inc
jne
dec
into
fxch
jge
push
shlb
fwait
and
cmp
jbe
ret
xchg
loopne
scas
cmc
push
mov
adc
aam
cs
and
test
fwait
dec
mov
jae
ss
mov
cmp
xlat
push
push
inc
addps
or
test
mov
add
jno
cltd
bound
xor
scas
add
adc
and
stos
inc
mov
lret
test
je
test
rcl
je
ds
push
iret
fsubs
stc
inc
xchg
test
cmpl
in
xchg
test
adcb
fildl
popf
sbb
fiaddl
and
shlb
lods
xor
or
lret
mov
mov
inc
shll
sub
add
pop
sub
aam
cmp
shr
cmp
pop
or
adc
xor
or
inc
push
xchg
pop
je,pt
or
jne
dec
jmp
xchg
cmpl
pop
jl
lods
cmp
cwtl
push
lods
jne
cmp
in
fwait
cmpsl
mov
inc
push
sarl
movb
mov
ficomps
out
cld
jmp
sbb
sbb
fnstenv
mov
or
out
xchg
xchg
test
aad
jecxz
xchg
mov
fsub
push
xchg
mov
push
out
stc
jns
scas
push
and
vmwrite
mov
mov
and
aaa
icebp
xchg
mov
add
mov
adc
cmc
mov
std
add
es
cmp
test
leave
mov
cmc
jecxz
push
loopne
xor
pop
push
dec
cmp
jns
shl
stos
dec
cli
sti
adc
fistps
sbb
mov
lods
or
clc
sub
rorl
mov
inc
xchg
mov
repnz
pushf
hlt
daa
insl
fisttpl
jg
or
push
pop
inc
and
push
cwtl
and
in
test
outsl
frstor
jbe
jge
stos
sahf
xor
jle
xor
pop
mov
data16
mov
xchg
cltd
and
aaa
add
js
hlt
movsl
scas
jp
and
add
popa
out
sub
mov
add
arpl
dec
in
pushf
jnp
pop
xchg
adcl
pop
or
lcall
clc
xchg
push
data16
jne
sbb
fisubrs
jecxz
mov
jle
dec
dec
mov
push
out
mul
adc
loopne
sub
and
std
icebp
add
out
mov
adc
lret
or
gs
lock
jg
mov
dec
mov
aas
flds
addl
lahf
popf
jle
add
stos
shr
std
add
movsb
test
aad
loope
mov
jbe
fistl
adc
lock
int
and
xchg
cmp
lret
mov
bound
and
mov
jno
mov
mov
sbb
push
sub
add
push
xchg
lret
cli
push
jle
mulb
shl
out
nop
in
mov
push
xchg
dec
jg
fs
xchg
jae
daa
nop
push
sbb
fyl2x
ret
lahf
jnp
loope
mov
lds
fcmove
xchg
inc
mov
enter
adc
gs
js
fs
xor
pop
or
mov
pop
or
mov
xchg
mov
mulb
mov
inc
mov
jnp
outsb
lds
mov
dec
mov
xlat
sti
out
shlb
mov
lock
cmp
jg
not
adc
mov
sbb
cmpxchg
fbld
inc
int3
inc
push
inc
xor
cmpsl
jg
int3
dec
cmp
mov
xor
es
add
icebp
cmp
rolb
push
outsb
cmp
lock
outsl
or
sub
pop
outsb
cmpsb
js
test
inc
test
lret
imul
xchg
clc
loop
hlt
push
sub
jge
in
mov
adc
pop
inc
add
rcrl
loope
xchg
inc
xor
and
mov
lods
addr16
push
push
pop
add
xchg
into
mov
cmp
cmp
out
mov
pop
ret
repnz
mov
cli
jecxz
push
mov
mov
pusha
pop
inc
sub
outsb
imull
push
nop
sahf
fistpl
out
xor
test
testb
loope
push
aas
nop
or
cmp
movsl
shrb
and
cmpsl
ret
fldcw
pop
jecxz
or
inc
adc
and
jae
orl
std
lea
pop
xchg
jae
push
negb
jmp
pushl
pop
pop
stos
stos
push
fcompl
cmp
adc
push
lret
dec
test
addr16
sub
jle
jmp
testb
xor
dec
mov
sti
cli
aam
lcall
cltd
jp
xchg
notb
pop
insb
pop
insl
lods
and
cmp
mov
fildl
cmpsb
mov
iret
xchg
or
mov
mov
addr16
xor
scas
push
cmp
out
xchg
mov
jmp
shr
jl
xor
scas
ljmp
dec
adc
jo
cmpsb
out
repz
loopne
arpl
xor
push
gs
loope
inc
faddl
add
mov
pop
mov
mov
push
lahf
sub
jbe
mov
int
mov
fdivrs
xor
mov
adc
push
xchg
test
mov
out
stos
stos
out
in
decl
and
aaa
dec
mov
push
imul
xchg
cmp
sub
add
and
in
fcom
loope
iret
jno
pusha
gs
xchg
ret
xchg
cmp
ss
cmp
out
or
and
pusha
ljmp
rolb
sub
aam
lea
pushl
js
sahf
loop
lcall
push
pop
inc
jns
incb
mov
sbb
jno
mov
adc
movsl
and
std
or
sbb
test
sahf
mov
xchg
mov
cmp
sub
lods
fimuls
in
push
iret
cmc
sahf
pusha
adc
ret
stos
or
iret
fisubrl
popf
sub
insb
xor
push
mov
aam
mov
sti
idiv
loop
sbb
aam
cmp
or
and
arpl
testb
movsb
ljmp
insb
sub
inc
shlb
xor
pop
je
incl
test
xchg
lahf
jae
int3
push
xchg
push
popa
mov
dec
and
dec
aas
stc
sbb
jl
outsl
push
subb
jnp
sahf
into
fisubl
loope
jle
jp
or
int
pop
pusha
and
inc
sbb
imul
push
outsb
sbb
jg
jmp
mov
mov
test
popf
pop
cmp
popf
cmc
xor
into
clc
push
add
fildl
lcall
jp
sbb
xchg
mov
ret
dec
sbb
lea
vminpd
cmp
and
rol
mov
pop
repnz
mov
daa
or
lods
movsl
jne
inc
inc
mov
jae
fsubr
scas
into
cli
pop
aas
pusha
scas
out
ret
sti
sarl
mov
jl
cmp
mov
addb
in
pop
pop
or
ljmp
sti
fs
cltd
mov
sbb
sub
dec
mov
adc
pop
or
aaa
jg
fldenv
int3
xchg
mov
ljmp
pop
scas
scas
jno
cli
add
xor
and
std
adc
lds
pusha
or
or
mov
into
sbb
push
pop
sahf
adc
cltd
jge
imul
cmp
pop
jg
dec
adc
loopne
pop
cld
addr16
add
scas
push
into
aaa
jg
daa
dec
std
popf
push
aad
icebp
iret
xorb
cmc
dec
mov
mov
or
icebp
jae
xchg
loope
lahf
mov
jge
std
loopne
sbb
ret
pop
dec
xor
outsb
jno
mov
and
lahf
int3
popf
je
dec
lea
mov
daa
mov
push
pop
movsb
xor
addr16
das
or
push
mov
cmp
es
or
pop
xlat
or
push
test
std
iret
imul
xor
aam
pop
dec
inc
in
push
inc
xchg
or
daa
loope
daa
fimull
jmp
js
aaa
outsl
jo
jmp
fmull
icebp
cld
xchg
pop
cwtl
fbstp
mov
movsl
mov
sbb
imulb
dec
daa
adc
popf
dec
xor
and
sbb
or
inc
push
test
sti
adc
jbe
jg
or
popa
mov
std
xchg
nop
aam
roll
cmpsl
dec
aas
pop
mov
sub
aam
aaa
mov
test
push
adc
out
push
push
cmp
sub
dec
xor
sbbl
sbb
cmpsb
fsubrp
mov
xchg
push
shl
mov
xor
mov
xchg
ss
fistps
inc
xchg
or
push
stc
call
mov
scas
pop
cmp
ds
sbb
xchg
xchg
or
or
jo
hlt
test
add
aas
orl
pop
fdiv
jne
inc
mov
push
lock
cmp
mov
fwait
add
loop
pop
mov
in
sub
shll
in
loope
imul
adc
pop
out
pop
add
jp
dec
aad
pop
dec
add
insl
ret
and
popa
pop
lret
inc
testl
cs
and
aaa
and
lahf
sbb
add
mov
les
out
xor
push
ja
adc
fwait
jbe
cwtl
mov
jb
pop
fld
cmp
in
aad
mov
cmp
push
fcoms
mov
xor
lock
outsb
add
lret
test
xchg
in
mov
adc
sub
mov
ds
ds
std
mov
cld
gs
mov
sahf
jle
and
cmpl
jmp
iret
jle
mov
jg
daa
popa
dec
and
test
aad
inc
cs
mov
ret
mov
pop
push
push
mov
mov
mov
fisttpl
fsub
mov
pop
cltd
cmp
and
cmp
ss
movsl
fwait
pop
movsl
les
push
sets
mov
cmpsl
aam
arpl
enter
pop
pop
lret
mov
int3
ja
stos
adc
icebp
mov
loopne
insb
sub
mulb
xchg
sbb
jbe
adc
xchg
nop
repz
inc
loop
pop
cmp
pop
in
jae
or
jnp
ret
fdivl
push
dec
xchg
xlat
jmp
test
jp
push
lret
xchg
sbb
push
cmp
or
sub
mov
sbb
mov
and
sti
insb
movsb
rcll
sti
xchg
and
pop
xchg
sbb
sub
in
lahf
test
xchg
mov
mov
cltd
fidivrl
push
mov
dec
adc
lods
lret
jb
cmp
cwtl
adc
pusha
sbb
scas
test
ret
push
push
mov
inc
pop
in
or
cmpsl
sbb
insb
xor
decl
popf
sbb
insl
lock
ds
inc
xchg
and
mov
xchg
mov
pop
cli
decb
test
out
adc
test
pop
icebp
adc
inc
mov
mov
sub
fnstsw
mov
and
pop
leave
bound
pop
sbb
je
cli
dec
pusha
les
or
mov
push
adc
sbb
test
sbbb
clc
jg
das
addl
pop
es
scas
xchg
xchg
int3
andb
mov
lret
cli
lea
and
xchg
cltd
aam
in
mov
sbb
jle
and
pop
in
fs
or
incl
add
dec
sub
inc
scas
adc
and
lea
pusha
mov
xlat
push
lock
loope
sbb
mov
mov
pop
adc
fwait
pop
mov
mov
loopne
push
enter
stos
sub
aaa
dec
and
subps
enter
jne
sub
xchg
inc
push
adcl
pop
daa
jle
pusha
insl
cmp
sub
scas
scas
test
ret
sub
fistps
sbb
mov
mov
aaa
rcr
cmc
lahf
pop
call
jmp
xchg
push
mov
add
repnz
cmpxchg8b
int
insb
jnp
dec
and
testl
inc
out
aad
mov
out
mov
lea
adc
cld
lods
fdivrs
out
stos
push
cmp
aaa
mov
ret
pop
xor
xorl
sahf
jg
add
sbb
je
into
fsub
and
pop
les
out
iret
sub
dec
nop
xor
jae
inc
jnp
subl
or
imul
or
push
out
fs
inc
and
jp
repnz
in
icebp
or
or
xlat
bound
lods
repnz
inc
push
cmpsb
add
hlt
xor
movb
sbb
cmp
or
pop
sbb
leave
icebp
js
lcall
pop
mov
xor
loopne
pop
nop
dec
cmp
insb
out
pushf
jl
aad
cld
mov
dec
sarl
sub
insb
mov
or
cli
add
popa
xor
rcrl
add
fdivrs
into
std
daa
and
xchg
pop
cmp
popf
sub
xchg
out
int
call
sbb
stos
pop
out
bts
mov
or
adc
push
push
leave
and
xchg
enter
cs
or
fs
add
clc
cld
jne
pushf
in
mov
sbb
inc
xchg
das
add
inc
mov
mov
js
push
jnp
sbb
stos
push
jmp
std
jno
inc
lds
xor
lret
inc
rclb
fdivr
add
and
sbb
rclb
adc
test
or
inc
jae
cmp
std
addl
sbb
ja
mov
lods
pushf
fs
or
xor
testb
mov
xor
jmp
adc
pusha
inc
sbb
dec
mov
and
roll
pop
mov
jge
shl
bswap
aam
sub
dec
stos
add
fisttpll
jp
cmpsb
sbb
lahf
in
ret
pop
xor
mov
cwtl
rclb
sub
ret
mov
subb
jno
nop
in
cmp
mov
xor
mov
xor
in
cmpl
push
outsl
jae
push
imul
mov
push
inc
xchg
sbb
jo
dec
rcr
outsl
sbb
cmp
dec
push
add
mov
rcll
std
fstp
nop
cltd
mov
pop
movsb
mov
mov
inc
rcr
sarl
jnp
jecxz
mov
cmc
shrb
stos
mov
adc
popa
mov
stos
repnz
enter
icebp
sbb
sbbl
scas
and
sub
add
lcall
and
popa
test
xchg
leave
nop
insb
sbb
test
adc
mov
mov
popa
roll
iret
lods
cmp
dec
in
xchg
xor
adc
inc
pop
inc
xchg
movb
xchg
cmpsl
aad
lahf
cmpsb
incb
es
in
mov
sub
aas
clc
sahf
jmp
cmp
clc
inc
jnp
clc
clc
stc
rorb
outsl
xchg
jb
push
popa
mov
mov
enter
mov
mov
inc
mov
and
mov
or
lret
inc
stos
aad
or
pop
lock
fbstp
js
push
leave
cmpsl
push
sahf
sub
jae
cld
pop
aas
inc
inc
bnd
or
ss
mov
inc
push
jns
lcall
jl
mov
or
and
loopne
bound
lea
enter
sbb
js
jle
or
mov
push
iret
js
cwtl
imul
mov
xchg
inc
insl
mov
inc
out
inc
repnz
sbb
fnstsw
pop
push
arpl
jae
pop
adc
aas
cmp
pop
std
fildl
scas
filds
mov
pop
lds
cmp
movsl
jae
arpl
mov
clc
repz
jae,pt
test
lods
bound
xlat
call
xchg
push
or
inc
rcr
call
jle
enter
std
or
sbb
mov
lea
loopne
sahf
jbe
push
in
paddb
sbb
jecxz
pop
fnstcw
icebp
ret
int3
lea
dec
aas
lcall
not
sub
push
lret
dec
lcall
sti
mov
f2xm1
jns
in
popa
mov
xchg
dec
mov
lea
mov
fwait
mov
dec
push
mov
imul
xor
push
outsl
mov
push
mov
out
jnp
icebp
lahf
inc
push
dec
std
dec
adc
add
xchg
or
mov
roll
fcoms
fnstcw
or
or
cmp
ret
mov
push
scas
and
orb
mov
jbe
daa
jl
dec
mov
ret
xor
mov
adc
test
inc
jecxz
pop
jbe
adc
lahf
cmovo
pop
mov
push
sbb
xchg
jge
imul
lock
fwait
repz
xchg
fisubrl
cmp
push
int
xor
or
dec
sbb
or
xor
mov
adc
push
inc
mov
sbb
lret
bound
or
jle
orl
insb
mov
imulb
imul
pushfw
add
mov
addr16
mov
push
mov
mov
lcall
pop
and
jns
call
sbb
popf
mov
out
dec
and
add
test
add
decb
adc
push
arpl
add
test
neg
arpl
or
sub
push
inc
aaa
lret
outsl
jns
xor
mov
das
pop
push
cmpsb
stos
lods
pusha
cli
lds
hlt
ret
lcall
scas
cmpsl
lds
fidivs
sarl
pop
divb
jecxz
push
xchg
fadds
push
imul
popf
rol
outsl
mov
cmp
pop
mov
idivl
insb
add
xchg
ret
leave
popf
lds
adcl
arpl
stc
cmc
dec
lods
jo
out
jmp
in
mov
stos
test
aas
leave
dec
sub
add
scas
into
dec
xchg
adc
sub
aad
repnz
xchg
and
pushf
mov
lret
shl
jne
push
cmp
or
sti
sub
sbb
and
inc
cltd
fisttps
repz
mov
xor
and
dec
das
jae
cmp
adcl
imul
jmp
movsb
jmp
inc
rorl
popa
cmp
ret
inc
inc
jge
cli
pushf
push
outsb
inc
cmpsb
imulb
jo
pop
loop
mov
cmp
ljmp
stos
cmpsb
std
ficomps
shlb
pop
inc
inc
cltd
adc
jns
arpl
rorl
aaa
addr16
or
mov
cmp
movsl
loope
and
mov
xor
outsl
sub
mov
int3
mov
call
js
mov
cld
cmp
jmp
cs
mov
mov
mov
cli
sub
call
cld
data16
stc
mov
or
hlt
mov
cmpsb
jne
mov
in
and
std
out
inc
or
dec
mov
add
xchg
ss
fisttpl
jecxz
jecxz
imul
stos
push
test
rcl
jl
pop
ljmp
jo
jb
lods
dec
leave
lcall
xorl
int
pop
lds
enter
cmp
and
sub
enter
mov
jno
orb
add
mov
leave
pop
cmp
mov
jne
jae
xchg
sub
out
mov
xor
out
pop
jge
ds
bound
lods
xor
lret
pop
into
addr16
inc
sarb
cltd
shll
push
adc
rcrb
mov
in
dec
movsl
loop
push
int3
pop
and
test
ret
push
inc
and
lret
sbb
cs
sbb
push
ljmp
push
fmul
sub
lahf
jb
rorb
cmpsb
repz
jnp
cmp
dec
push
pop
mov
fcomps
mov
ja
push
jl
nop
test
xor
ljmp
push
sbb
stos
mov
sarl
sbb
frstor
and
test
xor
mov
jp
add
pop
out
test
mov
xor
shlb
jbe
mov
in
mov
mov
test
mov
std
leave
out
xchg
mov
in
cli
ret
xchg
outsl
test
aam
outsb
push
pop
jmp
into
sbb
sbb
xor
mov
push
pop
push
xchg
in
ficoml
aaa
mov
and
dec
xchg
fcompl
into
pop
dec
add
sbb
push
ficompl
clc
push
aas
popa
shlb
aas
mov
xor
pop
mov
inc
imul
mov
pop
loope
rcrl
fidivs
dec
lods
xor
out
xlat
shrb
addr16
xor
xchg
js
jmp
movsb
popf
mov
xchg
push
lods
sbb
pop
mov
loop
or
mov
mov
cmpl
jle
pcmpeqw
push
fcoml
aas
lea
cmp
or
mov
and
ffree
pop
jecxz
push
in
loop
mov
xchg
dec
or
ljmp
into
xchg
xchg
sbb
push
test
cmp
mov
jbe
sub
sub
push
pop
cmc
mov
mov
cmp
push
push
mov
loop
xor
add
test
push
mov
sub
sbbb
and
xchg
imul
es
scas
int3
js
ds
movsb
call
insb
jmp
pop
imul
fisubs
dec
mov
xor
sarb
pop
lahf
pop
mov
dec
test
mov
enter
loope
xchg
pop
push
add
cmovle
push
push
xchg
inc
das
sbb
imul
adc
add
les
push
or
pop
das
into
push
adc
roll
and
and
and
push
jae
xchg
aad
gs
sbb
pop
mov
insb
or
and
lock
or
inc
cmp
push
mov
xor
jmp
aas
xor
cltd
movnti
cmp
jmp
incl
cli
pusha
das
mov
clc
xor
jge
mov
adc
daa
add
or
add
push
inc
mov
insl
jnp
in
jno
fdivrs
jge
inc
cmpsl
cmc
cmp
pop
push
xor
lods
cmp
lods
or
mov
iret
enter
sub
neg
stos
jecxz
test
cmpl
ficompl
mov
insb
lret
sti
shrl
rorl
mov
pop
mov
adc
syscall
push
dec
adc
repnz
popf
fldt
sbb
mov
and
or
leave
mov
fiaddl
cmp
mov
mov
mov
or
ja
mov
mov
fidivrs
cmc
cmp
or
scas
inc
cmp
inc
xor
jne
cli
jbe
mov
and
jo
cmp
push
stos
sbb
orl
or
jb
cld
aam
sbb
inc
das
sbb
imul
lds
jno
dec
jecxz
outsl
ret
pushf
push
mov
fwait
adc
pop
xor
ret
imul
push
in
pop
mov
mov
mov
lahf
push
xor
cmp
int
mov
outsl
add
mov
sub
cmp
xchg
ja
jmp
jb
lods
jg
aaa
and
pop
xor
mov
push
jne
cmc
mov
push
or
push
in
or
test
mov
push
or
sbb
cmp
and
xchg
inc
xchg
out
shll
pushf
out
dec
outsb
and
mov
inc
lea
jge
xchg
push
push
lock
cmp
inc
push
lcall
fstl
icebp
jne
mov
pop
push
mov
jge
xor
cmp
mov
lock
mov
jno
inc
pop
mov
sub
enter
into
jo
mov
adc
popf
push
sahf
dec
call
jnp
or
adc
stos
js
pushf
jb
push
lds
xchg
xchg
and
sub
rcrl
in
lret
mov
mov
cmpsb
dec
and
adcl
iret
dec
sub
xlat
mov
pop
aas
arpl
repnz
adc
repnz
cmp
pop
push
pop
sti
mov
push
or
or
sbb
mov
push
inc
dec
das
dec
div
aad
aaa
mov
push
dec
in
fstpl
mov
gs
mov
cmp
pop
loope
mov
pop
cmpsb
fisubrs
hlt
pop
cmc
fs
int3
cmp
add
fcomp
pop
sarl
fsubrs
iret
and
mov
iret
and
fistps
pop
sbb
jle
sub
les
xchg
mov
jg
fisttps
adc
mov
cmpl
pop
out
jbe
jns
sbb
mov
hlt
mov
movsbl
movsb
call
adc
mov
push
jnp
push
ds
add
push
cmp
dec
shr
imul
xor
mov
xchg
rcr
mov
jne
imul
mov
sbb
add
inc
in
lds
fidivrs
loope
mov
add
out
jo
or
adc
gs
push
cld
jns
popa
mov
push
pushf
fisttpll
add
das
or
aas
sub
cwtl
pop
dec
repz
xchg
mov
ds
or
into
fldl
jl
adc
xchg
scas
mov
mov
mov
mov
cli
iret
push
inc
pushf
or
push
sub
cmp
inc
inc
cmp
cmp
loop
vpmadcsswd
leave
stc
aad
ja
jae
mov
and
out
ljmp
xor
inc
inc
sbb
mov
ret
cwtl
adc
ror
sbb
fsubrl
mov
lods
jl
or
mov
int3
sbb
inc
inc
cmpsl
pusha
mov
adc
into
shlb
inc
jge
pop
sbb
test
push
pop
pop
arpl
jmp
call
cwtl
nop
ret
inc
xchg
das
jle
cld
sbb
jmp
inc
fstpl
push
push
pop
mov
arpl
fmuls
pop
cmp
repz
mov
inc
fcmove
sbb
insb
test
enter
mov
and
cwtl
add
imul
sbb
lods
insb
mov
cmc
sub
fcompl
mov
pop
fwait
mov
cmpsb
rorl
cld
mov
xchg
pcmpeqb
xlat
xchg
imul
mov
cmp
nop
test
cmp
mov
push
mov
pop
mov
imul
imul
in
push
or
loopne
jo
or
and
clc
pop
fwait
aaa
sbb
xor
and
das
add
inc
sbb
push
neg
sbb
ljmp
dec
xchg
and
pushf
mov
sub
div
xchg
mov
divb
cld
xor
pusha
idivl
add
movsl
jmp
fiaddl
rcr
imul
push
cmp
repnz
and
xor
lds
sub
cmp
int3
sub
mov
in
icebp
jmp
cmp
inc
in
inc
jmp
add
jb
iret
daa
cmpsb
inc
ss
arpl
stos
jp
sub
xchg
push
jne
fidivrl
sbb
out
div
push
cmc
push
adc
divl
shll
xchg
daa
and
lods
stos
mov
inc
pusha
adc
xor
icebp
ss
mov
inc
xor
sbbl
mov
fwait
aas
pusha
mov
shll
test
xor
faddp
inc
mov
pushf
push
in
mov
in
add
mov
aaa
xlat
xchg
fmull
shll
js
fs
fsts
outsl
push
fcoms
cmp
push
mov
and
scas
or
pop
aad
fdivrs
mull
or
pusha
jnp
cmpsl
jmp
insb
es
mov
xchg
push
int3
or
fmul
xchg
repnz
jnp
pop
mov
das
push
loope
add
stos
lock
jbe
mov
shrl
or
or
fldt
je
add
mov
xlat
daa
fwait
imul
ret
sti
outsl
jo
xor
repz
lods
cmp
cltd
stos
mov
inc
mov
jmp
sub
push
test
fwait
cmpsb
lret
lcall
cmpsb
mov
pop
orl
cltd
xchg
lock
pop
sbb
popl
fs
popa
nop
iret
xchg
icebp
hlt
jmp
xchg
adc
xchg
jno
popa
loop
inc
or
outsb
sbb
stc
das
jmp
in
lea
rcl
cmp
cmc
cmp
adc
adc
movb
das
dec
mov
bound
mov
mov
in
dec
in
aad
push
mov
hlt
hlt
test
xchg
aaa
aas
mov
add
or
push
sbb
push
mov
movsb
inc
push
call
out
inc
icebp
inc
outsb
pop
jecxz
mov
das
in
push
jbe
cmp
mov
xchg
mov
xlat
cli
sub
pop
mov
mov
lods
add
mov
std
jno
in
jns
pop
cli
iret
xor
fsubl
xchg
push
dec
xor
sbb
push
aaa
sub
inc
imul
push
loopne
mov
dec
mov
or
ja
aas
add
add
es
inc
add
gs
les
test
adc
xorl
dec
enter
mov
cmp
sub
outsl
outsl
and
stos
pop
sbb
rcrl
sub
icebp
mov
pop
push
hlt
fiadds
pop
xor
mov
lods
xor
aad
test
inc
sub
js
pop
stos
int
outsl
fs
inc
xlat
pop
xor
call
popf
inc
insl
hlt
xchg
push
std
push
mov
ja
adc
or
push
scas
testl
es
cmp
cmp
sub
psubw
int3
and
andl
js
jnp
or
sti
push
inc
cmp
cltd
fisubs
shll
testl
fwait
cmp
out
sti
mov
xor
lock
cld
je
sbb
pushf
xchg
xchg
pop
leave
add
jge
push
lret
data16
inc
lods
test
inc
adc
aaa
pusha
lret
out
mov
push
push
sub
aam
sub
push
aas
enter
addl
shlb
lea
lret
pop
mov
xor
lahf
mov
add
sub
filds
or
dec
jbe
jb
fcmovnbe
ficomps
xchg
rcl
adc
jmp
pop
ja
cld
fidivrs
and
cltd
std
dec
xor
inc
enter
lret
aad
mov
sahf
inc
jmp
dec
repz
jnp
mov
or
insl
in
inc
aaa
fisubs
arpl
and
bound
mov
sub
movsb
hlt
aad
dec
add
popa
test
pop
cmc
ljmp
jge
xcrypt-ecb
cmpsl
or
mov
push
adc
mov
pop
mov
cwtl
and
add
outsl
dec
leave
test
rorb
lret
push
ja
shl
repz
add
aam
int3
insl
fistl
cmp
adc
lret
aas
mov
inc
jl
pop
cmpsl
jmp
dec
aam
sub
arpl
jnp
and
sbb
sub
inc
movsb
ret
jmp
xor
mov
rol
call
lods
xchg
repnz
and
out
test
je
mov
push
cmc
push
dec
int
or
enter
loopne
sarb
daa
xchg
jne
pop
sub
in
mov
inc
lcall
faddl
dec
sub
mov
mov
filds
out
mov
push
insb
mov
or
lahf
ja
sbb
dec
jbe
gs
jno
add
and
cwtl
lock
push
iret
mov
jb
inc
sub
scas
jl
clc
fdivrs
adcl
push
inc
stos
adc
add
cltd
je
in
sub
lock
jbe
push
push
cmp
inc
jp
lret
xchg
js
fildl
jns
shlb
dec
xchg
jmp
xor
mov
cs
push
sbb
push
mov
test
or
xor
scas
mov
push
and
mov
cli
ret
imul
fsubrs
and
mov
xchg
cld
cli
xor
mov
mov
cmp
cmp
out
mov
test
sbb
inc
lret
pop
outsb
adc
cwtl
cmpsl
jge
repz
push
pop
test
xor
push
lcall
or
cmp
int
xchg
sti
out
fisttps
loop
fsubs
xchg
push
jge
sub
mov
cmc
cltd
repnz
out
pop
ficoml
pop
lods
iret
pop
xor
iret
es
fcompl
outsl
fwait
adc
popf
push
insb
push
int3
fsts
aad
iret
and
xor
test
loop
mov
and
shl
sbb
sbb
insl
push
push
int
dec
int
xor
rsm
dec
je
jo
jb
fdivr
adc
and
jne
lods
add
xchg
stc
aaa
bound
mov
outsl
mov
call
fwait
push
roll
fs
es
jno
cmp
cltd
ret
repnz
test
call
sahf
or
mov
cwtl
int
js
mov
addr16
xchg
sbb
add
inc
mov
xchg
aas
and
cltd
rorb
scas
movsb
stos
test
shll
test
inc
add
add
jle
cmp
pop
jb
and
fcomi
aam
inc
cld
pop
adc
data16
std
jo
rcrb
adc
inc
jmp
fwait
repz
fwait
cwtl
pop
push
addr16
mov
or
inc
push
cmpsb
fmull
mov
pop
in
les
std
sub
das
repz
push
setge
jbe
fstl
lods
jl
add
xchg
mov
enter
loop
movsb
pusha
lods
loope
dec
outsl
in
clc
sbb
out
or
cltd
xor
insb
imul
rcl
dec
add
jbe
lea
aas
mov
sub
in
icebp
sbb
je
xlat
push
jno
fcomps
xor
subb
dec
in
pop
xor
push
ds
push
xchg
rcrl
lods
cld
push
fnsave
mov
cli
cwtl
fs
pop
repz
dec
and
lret
xchg
xchg
push
adc
loope
jp
jp
test
add
xlat
mov
or
fisubl
sub
xorl
lret
call
dec
and
mov
mov
mov
add
ret
xchg
addl
mov
mov
mov
inc
or
adc
rcrl
mov
dec
mov
pop
push
inc
out
and
sub
sbb
loop
mov
bnd
pop
lds
loopne
adc
dec
jmp
idivb
push
dec
cld
das
lret
mov
jbe
or
repz
inc
cmpsl
push
sbb
icebp
xchg
xchg
add
stc
jbe
sub
fdivrl
mov
shll
rorl
pop
lmsw
sub
lock
dec
jb
and
mov
lock
loopne
mov
jmp
loop
xchg
pop
test
sub
sha1rnds4
pop
and
xchg
mov
sub
cmp
js
xorb
inc
cmp
sub
mov
sbb
or
xchg
sbb
add
jge
fists
hlt
or
jae
dec
std
mov
push
mov
lock
rolb
sub
loop
daa
das
cmp
jmp
out
jl
leave
ljmp
lahf
ds
mov
mov
mov
loope
mov
fs
pmaxsw
popf
add
mov
cmc
mov
xlat
dec
inc
push
outsb
call
in
outsb
fidivs
lret
or
xor
pop
mov
arpl
insl
iret
pop
adc
ds
popf
aaa
aas
enter
mov
test
mov
daa
cmp
sbb
outsb
push
arpl
in
pop
andl
pop
nop
cmp
fwait
les
and
lret
repz
or
out
jg
cmp
mov
mov
loopne
push
dec
popa
cmp
in
mov
mov
scas
aas
push
jno
rcll
je
lahf
std
xchg
mov
push
sbb
mov
dec
xchg
mov
mov
push
or
jno
lock
mov
repz
setg
mov
jb
xor
ret
xlat
fdiv
lret
es
add
outsb
out
insl
mov
enter
mov
xor
movl
sbb
test
repz
ja
cs
loope
push
jl
insl
mov
ljmp
lahf
aad
mov
jmp
push
mov
inc
daa
nop
fwait
mov
cmp
repz
outsl
sub
fiadds
dec
adc
xchg
or
mov
movsl
out
rolb
inc
mov
test
mov
inc
mov
cmp
insb
adc
mov
fisttps
jmp
clc
inc
cmp
pushf
push
jmp
push
add
inc
pusha
imul
cmc
test
jne
xchg
cmp
push
push
ret
inc
push
loope
data16
xchg
adc
inc
mov
daa
lcall
push
loop
mov
ret
jp
clc
sub
out
adc
fnstcw
pusha
push
cmpsl
jno
add
push
idivl
lcall
push
std
div
xchg
pushf
aad
mov
popl
popa
aas
andl
imul
fidivl
es
fisttps
inc
pop
or
lods
jae
push
ja
dec
mov
shr
out
mov
ret
pop
in
push
fsubl
es
push
lods
rcrl
and
repnz
jae
gs
lahf
add
insb
in
mov
mov
push
mov
mov
loopne,pt
cltd
dec
mov
pop
or
jg
push
mov
jg
repz
call
aam
xchg
ljmp
xchg
mov
jl
jno
sbb
inc
adc
mov
insb
jae
inc
enter
dec
and
adc
imulb
aam
mov
aas
adcl
adc
out
mov
outsb
sbb
mov
lcall
aad
ret
loopne
rcl
out
cltd
jle
xorb
xchg
pop
fcompl
imul
dec
xchg
scas
movsb
scas
sub
das
mov
xchg
adc
outsb
push
imul
out
das
and
sti
adc
push
movhps
decb
ficomps
pop
clc
and
jmp
and
inc
scas
es
lods
stos
das
js
repz
push
lret
pushf
cmp
inc
sub
icebp
mov
sub
dec
aas
stc
push
mov
or
aad
lea
push
in
dec
sbb
xor
push
xchg
mov
adc
mov
shlb
repnz
xchg
xchg
inc
ja
mov
mov
mov
mov
into
jb
lods
test
xchg
cmp
xor
lret
xchg
cmp
scas
or
call
mov
push
or
in
hlt
dec
xchg
fistpll
lock
dec
out
mov
scas
hlt
ds
clc
inc
and
lcall
mov
loop
pop
ss
jmp
fwait
mov
lods
inc
fisubrs
adc
mov
adc
addr16
sarb
shr
test
loopne
out
jnp
mov
fiadds
xorb
aam
loopne
clc
int3
pop
pusha
rorl
out
mov
outsl
mov
dec
and
pop
jg
cltd
pop
xorl
outsl
mov
jnp
movsl
addl
fiadds
fs
mov
shlb
mov
test
fldcw
and
xchg
mov
hlt
pop
imul
mov
pop
and
jmp
mov
mov
push
jb
inc
je
cmp
inc
in
dec
pop
shlb
out
adc
add
xor
mov
mov
rol
imul
imul
je
imul
stos
jns
inc
mov
sbb
aad
test
loopne
fs
mov
push
lretw
popf
aas
jp
mov
lret
lods
add
mov
scas
mov
in
add
mov
rorb
mov
arpl
mov
imul
jp
sarl
sahf
xchg
sbbl
fsubrl
lahf
pop
sbb
mov
mov
dec
ja
jbe
or
lea
pop
scas
cmp
aas
andl
push
jge
push
sti
inc
rclb
mov
scas
shll
stos
pushf
imul
out
xchg
xor
nop
ror
into
adc
mov
mov
mov
fnsave
idivl
fadds
movsb
mov
lods
decb
jne
dec
adc
mov
mov
xor
cmc
push
out
push
xchg
jno
jge
push
sub
in
xor
or
pusha
repz
sub
xchg
insb
aas
dec
push
jge
loope
out
fst
jnp
loopne
jmp
inc
out
sub
sbb
sub
pop
nop
sub
mov
sbb
inc
out
js
xchg
in
jecxz
imul
push
jbe
in
jecxz
mov
stos
xor
sub
cmpsb
xchg
insl
jne
adc
mov
sbb
fcompl
jbe
jmp
jecxz
cmc
xchg
mov
ja
sbb
and
xlat
fimull
ljmp
sbb
call
mov
cmp
ss
add
notl
dec
gs
clc
mov
mov
add
push
cmc
mov
rolb
andps
push
out
popa
movnti
sub
dec
and
cmp
sub
mov
mov
loopne
mov
push
xchg
sub
lea
push
pusha
jmp
aam
xchg
or
add
mov
arpl
movsl
sbb
cli
sub
lods
je
mull
lcall
outsb
lock
stos
aaa
es
repz
push
mov
rcrl
ja
lods
fsts
push
rcr
add
xor
sahf
mov
inc
sub
mov
push
pop
fistps
cmp
popa
xchg
mov
int3
je
idivl
push
test
cwtl
inc
in
inc
iret
cmc
stos
xor
xlat
outsl
shlb
sub
cmp
lret
stc
cmc
adc
adc
xchg
fsubrp
xchg
test
inc
test
pop
mov
dec
rolb
dec
adc
dec
inc
outsb
cli
xchg
mov
and
xor
jne
into
sbb
lcall
std
xchg
inc
filds
lret
js
lock
mov
outsl
shrl
movsl
shrl
dec
mov
xor
and
test
or
hlt
in
add
movsl
int3
out
or
enter
mov
or
sub
sbb
inc
and
jmp
leave
ljmp
rcrb
mov
test
out
mov
xchg
rcrl
inc
mov
pop
cwtl
push
imul
imulb
fsub
jns
xchg
stos
cwtl
lea
inc
scas
int
sub
cmc
mov
pop
cmpsl
pusha
leave
dec
out
aad
cmpsb
data16
sub
cmp
cs
jle
jb
add
jnp
sarb
push
dec
adc
pop
push
or
dec
sub
aas
mov
je
push
or
and
das
xchg
ds
cmc
rclb
push
and
ja
shlb
jmp
pusha
and
jmp
lret
sbb
pop
iret
and
sub
cs
inc
sahf
lahf
hlt
out
rolb
jmp
and
loop
fdivs
call
push
pop
pop
jp
enter
and
inc
rorl
cmp
xorb
jl
out
bound
jl
test
adc
scas
mov
arpl
std
mov
jns
push
xor
dec
clc
pop
lea
mov
cmc
mul
jle
add
mov
jb
pop
push
or
jge
cmp
rol
xor
int3
andl
and
or
ret
inc
xchg
clc
dec
fsts
hlt
mov
pushw
outsl
push
es
ja
cmc
lahf
outsl
push
mov
jnp
sahf
xchg
xor
pop
jnp
lcall
shll
rol
pcmpeqw
loop
insl
xchg
in
jbe
xor
out
cmpb
mov
rolb
leave
dec
xor
pop
lods
test
fidivrs
dec
push
sahf
mov
daa
xchg
test
test
cwtl
sbb
mov
fwait
test
pop
loope
cmp
sub
sahf
mov
aas
scas
mov
dec
arpl
adc
js
popf
ljmp
lahf
pusha
aad
or
movsl
jb
icebp
lods
xchg
xchg
adc
push
shr
push
jle
ds
lahf
mov
into
hlt
sbb
jb
adc
cmp
pop
adc
rolb
or
or
xor
gs
rcrb
sub
adc
movsb
jle
sub
and
cmp
lret
jmp
mov
mov
and
inc
mov
lret
addr16
out
mov
out
jnp
cmpsl
mov
popa
out
mov
or
xor
jbe
imul
in
aas
mov
jmp
jecxz
xchg
jb
mov
enter
dec
call
fdiv
ds
popf
xchg
ja
dec
ret
xchg
sbb
mov
mov
outsl
mov
fildll
sti
jle
inc
and
or
cld
pop
scas
jg
push
test
cmp
cmpsl
stos
lea
jl
icebp
dec
push
push
inc
push
repnz
cmp
pushf
mov
push
out
add
inc
pushf
xchg
and
jne
dec
dec
jnp
popa
lret
inc
pop
enter
cmc
frstor
push
rclb
pop
add
sti
mov
aad
sub
fistpl
mov
jnp
push
pop
jmp
mov
cmpsb
pop
aad
push
xchg
cmpl
shll
xor
popf
sbb
sub
scas
sbb
xor
lods
sub
adc
sahf
sti
sbb
cmpb
in
push
mov
cmp
icebp
push
hlt
pop
jbe
mov
sub
in
cli
mov
divb
lds
pop
or
pop
xchg
imul
sub
pop
fs
shlb
push
scas
das
dec
ficoml
pop
daa
xchg
roll
pop
push
movsl
push
mov
xor
movsl
arpl
jnp
lret
cli
js
ds
popf
mov
adc
clc
sbb
sarl
aaa
clc
mov
in
cld
sub
push
sub
add
rorb
xor
mov
daa
sbb
fcoms
and
xchg
out
rolb
mov
jle
inc
and
or
push
and
xchg
out
pop
aad
popa
test
icebp
mov
popf
and
pop
test
scas
mov
xor
shrb
nop
outsb
inc
and
ja
idiv
daa
rcll
adc
add
cmp
rorl
sti
lea
or
pop
rolb
dec
xlat
loopne
loope
faddl
xchg
inc
lods
push
mov
lods
int
mov
es
add
das
push
popa
jns
mov
mov
mov
imul
imul
andb
dec
sarl
icebp
arpl
pop
push
pop
fcoml
imul
rorb
sub
in
or
negl
mov
fwait
in
mov
pop
add
dec
pop
mov
popf
jmp
adc
inc
loopne
cmp
outsl
push
mov
ret
sbb
push
cmp
in
push
pop
popa
xor
test
pop
fcompl
xchg
sti
test
and
daa
sub
xorb
mov
mov
sbb
mov
bound
mov
call
xchg
xor
scas
adc
pop
xor
test
xchg
rcll
push
sarl
pop
lret
or
icebp
jno
lea
cmp
add
or
pop
fists
pop
adcl
and
mov
inc
jmp
data16
xor
dec
mov
xchg
loop
mov
popf
insl
mov
and
nop
fs
mov
mov
bound
dec
add
rolb
out
pop
out
mov
mov
jns
mov
mov
ffreep
int
dec
xchg
cs
or
out
cmp
dec
bound
mov
mov
pop
pop
add
ror
not
mov
and
aad
xchg
int3
insl
mov
lret
fs
sbb
cmp
mov
in
clc
pop
sub
insb
add
mov
jg
mov
adc
shrl
cld
pop
lcall
add
xor
repz
mov
fistpll
dec
dec
fnstcw
pop
xchg
push
loopne
jle
sbb
popl
add
xor
shr
mov
add
jne
aam
mov
pop
sbb
fs
dec
push
incb
mov
out
ss
mov
cld
xchg
mov
cmp
lods
push
imulb
lcall
cmc
jbe
jne
and
dec
sub
sbb
xchg
xchg
mov
ficoml
mov
mov
insb
sub
jmp
or
and
inc
jp
fisttpll
push
push
addl
jmp
ja
mov
mov
mov
sbb
xchg
sub
inc
add
aas
lret
gs
adc
outsb
or
pop
mov
lock
push
outsl
lret
shlb
push
ret
sub
or
cmpsl
loope
cmpsl
mov
add
mov
sub
push
out
lcall
pop
and
cmp
mov
movaps
imul
push
push
push
add
outsb
js
js
adc
push
test
or
movsl
sahf
or
mov
sbb
fstps
in
out
fdivrl
sub
cmp
inc
test
xor
ds
mov
inc
pusha
push
cld
test
lea
movsb
jbe
xor
mov
push
rol
jns
pop
repz
pop
and
and
out
aas
lods
adc
cli
mov
xor
in
mov
or
mov
addl
js
rorl
add
clc
xchg
imul
mov
lahf
inc
xchg
and
sub
mov
repnz
stos
mov
int
dec
xor
orb
xchg
pushf
inc
in
sarl
hlt
fwait
add
cltd
outsl
test
push
inc
cld
inc
fisttps
decl
mov
push
push
push
push
xchg
pop
test
lcall
sbb
jns
std
loope
mov
xchg
adc
jne
popa
mov
lcall
das
cld
xor
mov
mov
fwait
mov
jl
cld
into
mov
call
mov
aam
sbb
add
test
jp
or
pop
cmpl
jg
addr16
jo
xlat
xor
xlat
dec
mov
das
pushf
aaa
or
mov
push
jl
lret
rcl
inc
fisubrl
dec
imul
jno
aam
inc
mov
movb
mov
int
lds
jle
add
clc
cmp
hlt
inc
pop
repz
mov
arpl
push
xor
orb
sub
ret
in
or
dec
repnz
xchg
add
sbb
xchg
dec
out
movsb
cmp
xchg
cmp
aam
int
outsl
aaa
or
sub
sub
es
imul
inc
mov
mov
lds
clc
mov
xchg
inc
dec
sbb
or
cmpsb
mov
adc
hlt
test
mov
jge
sub
xor
fsubrl
xchg
sub
cmovnp
and
push
sub
repz
mov
lods
in
lods
mov
loope
lret
mov
pop
push
repz
jmp
xlat
sbb
jne
xchg
pop
stos
ror
pop
push
mov
test
push
lret
or
js
xlat
dec
cli
sub
fists
add
stc
push
push
dec
cltd
std
xchg
mov
cmp
fcomi
in
push
pop
int3
nop
scas
or
popa
ret
jecxz
mov
adc
fisubrl
movsb
and
mov
jns
lock
sbb
adc
iret
fildll
jecxz
pop
jns
xor
cmp
mov
push
push
xlat
movsl
cmp
int3
iret
test
sub
add
ret
or
push
hlt
push
cmpsl
inc
cmpsl
mov
aaa
sti
jae
mov
scas
mov
orl
adc
cltd
push
sub
lock
shlb
movsb
and
aam
sub
pushf
push
pop
adc
rcll
addr16
mov
mov
inc
or
icebp
add
push
or
clc
and
dec
mov
cmpsl
shrl
iret
push
add
mov
sti
cs
mov
cmp
or
popf
pop
aam
mov
cmp
dec
xlat
dec
pushf
adc
aad
xor
mov
or
insb
mov
jb
enter
in
fnstcw
leave
sbb
xor
sahf
dec
loope
imul
adc
ljmp
pop
push
nop
xchg
add
pop
sub
add
inc
push
add
push
inc
fcmove
xlat
arpl
mov
jp
push
shrb
push
ret
rolb
dec
add
ljmp
enter
pop
add
jb
gs
mov
push
adc
pop
mov
fnstcw
mov
mov
and
fs
test
sahf
cld
test
xchg
addr16
mov
test
and
dec
lret
hlt
mov
xor
scas
test
aad
fxch
cmp
mov
jl
pop
iret
mov
sbb
repz
shrl
scas
adc
mov
shr
cmc
fwait
fwait
sbb
in
push
ret
mov
aaa
inc
adc
lcall
lcall
xor
sbb
push
fistps
add
xchg
sbb
repz
out
lods
out
pop
xchg
dec
mov
inc
pop
push
fldl
ret
mov
shlb
sbb
sub
mov
dec
lea
mov
loop
add
jle
loop
mov
inc
jmp
jo
test
pop
dec
mov
push
xor
nop
mov
xor
or
mov
mov
sub
mov
in
aad
dec
push
xchg
cmc
push
bound
shlb
repz
pushf
pop
insb
mov
les
loope
mov
dec
pop
cwtl
es
mov
loope
fbstp
fwait
dec
and
adc
out
in
fcmovnb
icebp
data16
inc
xchg
pop
mov
rcl
ja
push
fwait
push
shll
sarb
shl
mov
mov
adc
fistps
popf
cld
mov
lret
sbb
mov
jb
inc
ss
ds
xchg
subl
and
push
sbb
xchg
jp
inc
jne
mov
negl
aas
and
sub
outsb
lahf
dec
rclb
mov
inc
mul
das
sub
xor
adc
scas
adc
or
pop
push
add
inc
push
sub
push
xchg
lock
push
es
sbb
jp
jno
lea
pop
cmp
dec
fld
fsubrs
sbb
ret
lahf
cmpsl
or
cmp
mov
cmpsl
jmp
add
in
lret
int
rep
popa
lret
pop
data16
repz
mov
cmp
dec
loop
aad
jno
cli
xor
movsl
xor
sub
lock
sti
and
jmp
adc
xchg
or
push
mov
testb
pop
jbe
or
jo
jge
in
repnz
sub
arpl
sbb
lods
idivb
test
gs
or
push
xor
fdiv
pop
pusha
push
jae
mov
xlat
mov
xor
inc
mov
out
xchg
in
inc
cmp
insl
leave
jl
xor
in
cwtl
sti
ror
mov
sbb
mov
das
sub
iret
ja
leave
inc
call
xchg
xchg
in
inc
mov
push
out
int
push
and
clc
add
xchg
mov
ljmp
movsb
dec
cmp
scas
fs
jge
xchg
ds
or
cmp
inc
mov
dec
and
jp
mov
std
shrl
pop
and
inc
pop
or
out
ja
nop
push
ret
shl
std
fwait
aad
jl
out
pop
insl
pop
jecxz
and
pop
popa
mov
push
add
sbb
xor
and
fisubs
cmp
testb
aas
mov
xchg
ja
sbb
stc
cmp
sbb
ret
scas
gs
or
cmp
in
sahf
inc
stos
cs
stos
imul
add
push
test
add
jp
jbe
cmp
fidivl
ja
cwtl
lcall
in
cltd
mov
imul
push
jmp
push
popa
add
arpl
and
push
scas
lret
mov
pop
in
mov
inc
or
in
sahf
mov
inc
cmpb
test
divl
xor
ds
rorl
sbb
push
adc
mov
xchg
jns
sub
push
xor
cli
push
push
fdivr
add
mov
ja
mov
rclb
lds
sarl
cs
clc
xor
push
mov
popf
jge
fwait
sahf
add
pop
fildl
int3
mov
cs
loopne
mov
sbb
aaa
and
test
test
and
add
jecxz
or
fidivs
add
mov
std
pop
dec
insb
cltd
xchg
and
ja
out
sarb
stos
pop
in
or
out
push
cmp
shlb
mov
mov
jg
loope
mov
mov
ret
in
jge
pop
loopne
push
scas
lds
test
pushf
sub
cmp
mov
cmc
pop
loope
cmp
xchg
jmp
sahf
or
into
cltd
addr16
or
aad
push
fwait
pop
adc
in
ljmp
hlt
inc
dec
adc
data16
sbb
mov
ja
add
mov
das
push
lods
sub
jae
pusha
add
dec
jg
jne
repz
inc
adc
daa
filds
xor
jae
xchg
mov
std
dec
add
insb
jns
inc
push
mov
add
xchg
ss
push
dec
sub
add
cmp
cmp
int
stos
cmp
pop
movsb
xor
mov
fxch
and
mov
in
loop
mov
mov
loop
fldenv
insl
jp
mov
outsl
or
stc
adc
lcall
pushf
mov
push
mov
jmp
imull
or
and
inc
cs
aas
cmp
pop
test
dec
xchg
lahf
pusha
xor
sbb
ror
mov
imul
push
lods
or
xchg
ja
inc
sbb
out
ret
jg
sbb
cmp
fcomps
movsb
fstpl
mov
cmpsb
std
push
jne
sbb
dec
jb
dec
jns
cmc
imul
call
addr16
mov
call
ja
addr16
xchg
jl
xlat
outsb
xchg
fwait
int
lods
sarl
imul
fimuls
and
lret
stc
mov
pop
shl
push
mov
stos
das
hlt
add
scas
ds
fisubs
sti
mov
pop
jne
movsl
jmp
lods
push
inc
movl
lds
sti
mov
in
fdivp
dec
cltd
insl
lahf
repnz
cmp
jb
and
into
mov
mov
pop
les
sub
dec
fiaddl
mov
sbb
fs
cmp
loopne
jno
inc
xorl
dec
push
test
pop
pop
jle
in
push
mov
mov
pushf
inc
sbb
or
inc
and
subl
pop
xor
pop
xchg
mov
fsubs
xor
adc
pop
mov
vrcpps
rorb
dec
lcall
cli
pop
xchg
add
enter
pop
cmp
xchg
push
lock
fnstcw
jmp
sbb
test
mov
sub
mov
inc
dec
jmp
push
add
imul
pop
jl
pop
mov
cmp
roll
jo
stos
fidivrl
push
mov
or
mov
daa
jne
leave
push
out
pop
test
push
ss
lods
aaa
shrb
imul
push
push
aad
cltd
ljmp
in
daa
add
pusha
in
mov
cli
mov
shlb
shlb
mov
loope
adc
xor
sbb
sub
adc
aam
movsb
mov
cltd
jmp
and
int
jmp
push
or
call
sub
pop
mov
mov
push
jbe
pop
call
cmp
cmpsl
jae
and
std
xlat
mov
xor
movsb
mov
sub
or
rcr
mov
xchg
mov
das
dec
cmp
shlb
mov
push
inc
insb
ret
push
fst
mov
scas
adc
test
ds
jp
add
mov
out
push
jecxz
loope
mov
jge
or
lods
sub
fdivp
lahf
sbb
add
xor
mov
inc
pop
cmp
add
in
pop
inc
inc
fdiv
adc
xchg
in
push
lock
ss
xor
xchg
seta
test
mov
push
jl
push
fcos
xlat
rolb
mov
cmp
enter
mov
or
lods
mov
mov
outsl
mov
jb
loopne
xchg
movl
cmp
jo
bound
mov
adc
mov
lds
mov
inc
adc
jp
sub
cwtl
int3
loopne
mov
outsb
jnp
mov
mov
fdiv
add
out
dec
pop
dec
adc
mov
mov
push
dec
adc
rolb
push
inc
cld
xchg
adc
mov
sarl
push
mov
cmp
jb
push
mov
into
fsubrs
sbb
xchg
pop
jg
xor
or
mov
push
fdivrs
mov
rcrl
pop
sbb
add
test
js
pushf
sbb
ja
push
addl
sbb
out
add
repz
addr16
pop
jg
aaa
xchg
lret
aam
das
inc
mov
mov
fldenv
icebp
movsl
jmp
jbe
adc
push
mov
mov
call
pop
cld
inc
mov
std
xor
xor
daa
cltd
loop
mov
scas
cmp
sarb
jecxz
push
movsb
int
sbb
test
sahf
pop
js
cli
pushf
jbe
dec
filds
push
or
push
push
or
popa
mov
dec
ss
test
out
inc
fcmovnbe
mov
loopne
pop
cwtl
out
sbb
iret
in
mov
rcr
adc
xor
sub
add
outsb
inc
xor
stos
sbb
jae
js
mov
xchg
cs
mov
lds
jbe
lret
xchg
jne
int
cli
and
xor
sbb
mov
mov
cmp
pop
lret
push
fidivrs
sbb
sub
adc
js
jne
fidivs
outsb
popa
cmpsl
lret
sbb
lds
inc
mov
popf
call
mov
jl
inc
rol
mov
inc
mov
jno
mov
mov
cmp
int
mov
subl
or
inc
movsl
and
push
sbb
push
push
xchg
pop
xor
adc
mov
je
sbb
mov
or
in
int3
fabs
xchg
jmp
sbb
lahf
pop
pop
push
cld
sub
fidivrl
iret
xor
roll
repnz
xchg
cli
stc
hlt
loopne
popl
ljmp
stos
add
repnz
sbb
jecxz
cs
jbe
fwait
jno
les
mov
pop
and
loopne
or
inc
scas
xor
insb
int3
ljmp
cmp
mov
sub
jl
loopne
adc
pop
or
sub
test
and
mov
sbb
scas
flds
mov
xchg
test
cmp
mov
push
not
lret
in
push
mov
xchg
push
in
loop
pushf
ret
fistpl
or
and
xchg
addr16
fsubrl
mov
mov
aas
or
xchg
cmpb
mov
jmp
outsl
das
and
jl
mov
mov
dec
push
les
push
add
int
jnp
xlat
dec
stc
and
ljmp
add
pop
sub
xchg
pushf
fnstenv
ja
jle
inc
imul
lods
sbb
xor
imul
mov
mov
dec
and
popa
shrb
outsl
cld
cmc
xor
outsb
scas
int3
xchg
push
push
push
and
xor
mov
jo
je
out
mov
rclb
cmpsl
push
mov
or
mov
in
das
inc
ret
xor
add
cmpb
hlt
dec
jecxz
jns
inc
nop
int3
sub
in
jmp
fadd
sub
cmp
mov
das
sarb
sarl
pop
inc
aad
rol
push
add
imul
or
scas
je
cmp
les
popa
insb
xor
xchg
or
shrb
mov
lret
xlat
je
inc
inc
xor
add
sti
repnz
or
cmpsb
jns
jo
outsb
mov
push
adc
fwait
mov
push
dec
dec
jge
push
push
dec
adc
mov
inc
push
sbb
lods
inc
jne
adc
add
jae
loope
aam
lods
mov
or
lock
or
push
mov
lods
mov
sahf
daa
add
mov
or
xchg
pushf
repnz
cmpsl
and
ljmp
xor
ljmp
ljmp
ret
mov
outsl
incl
lahf
sbb
pop
les
push
jecxz
jns
xchg
sbb
mov
ja
push
dec
add
mov
mov
gs
sti
int
dec
repz
inc
lods
test
sti
imul
xor
pop
in
out
sub
jmp
cmp
jae
stos
sub
dec
and
mov
add
cwtl
pop
hlt
sbb
dec
jle
stc
xchg
mov
add
sbb
cmc
lahf
add
sti
cmpb
mov
fsubrp
mov
cmc
fistpll
or
shl
add
dec
mov
imul
jecxz
dec
cmp
gs
dec
shll
push
ret
push
movsl
xchg
pushf
lahf
sub
and
cmp
pop
lock
data16
sbb
leave
pop
mov
push
mov
repz
insb
cmp
fadd
mov
fdivrs
and
and
out
loop
sub
and
jb
out
fdiv
daa
fs
fs
clc
dec
lods
sbb
add
shr
mov
push
std
xor
pop
rolb
sub
sub
fidivrs
pop
pushf
aad
adc
mov
mov
cmp
ds
jg
xor
xchg
push
ret
call
xlat
and
inc
out
adc
fs
push
mov
fsts
jmp
repnz
adc
inc
es
lock
loopne
mov
movsl
sbb
xor
mov
jo
push
std
pop
pop
mov
adc
jne
adc
mov
je
and
stos
mov
repnz
xchg
mov
pushf
out
xchg
and
jbe
jns
std
or
mov
sub
inc
mov
sub
sahf
insb
adc
cmpsb
ljmp
cmp
test
ja
xlat
push
ja
sub
fldt
pop
lods
xchg
sbb
outsb
adc
jmp
jg
xlat
sbbl
lock
adc
out
mov
dec
dec
xor
lods
popa
lods
mov
test
push
loopne
dec
push
sbb
ljmp
jle
or
lahf
cld
mov
dec
pop
repz
add
pop
cmc
adc
mov
pop
leave
stc
in
mov
dec
sub
aas
aad
or
lahf
cmp
xlat
aas
xor
fwait
mov
out
fcmovnb
and
daa
cwtl
sub
stos
inc
mul
shl
setne
adc
sarl
fwait
xor
leave
daa
adc
mov
inc
push
adc
and
lahf
nop
inc
inc
insb
mov
repnz
push
fdivl
jecxz
mov
shr
xor
stos
push
jp
fincstp
jnp
cmp
js
add
push
roll
sbb
int3
lcall
movsb
out
sahf
or
stos
push
cmp
pop
cmp
adc
and
bound
stos
pop
loope
mov
sbb
je
arpl
shrb
pop
es
push
stos
sti
daa
jge
fwait
testb
sub
adc
jnp
inc
movsb
xor
cmpsl
stos
push
sbb
jo
sub
push
cmp
push
and
inc
jge
sub
and
mov
add
loopne
int3
and
outsl
dec
hlt
cli
addl
imull
shlb
repz
loop
mov
sahf
adc
lea
push
ljmp
push
into
inc
lret
pop
lret
xor
cmp
jecxz
cmpsl
pop
cwtl
fisttps
gs
iret
add
mov
mov
add
outsl
add
and
ret
clc
decb
pushf
out
inc
fldln2
adc
in
popf
mov
mov
pop
adc
icebp
sbb
cmpb
xlat
or
and
sbb
aas
out
stc
mov
lret
and
shrb
jne
movl
adc
jmp
push
push
testl
rolb
hlt
mov
cmp
loope
je
adc
repz
xor
xor
ljmp
pop
dec
lret
mov
and
scas
hlt
sub
ret
addr16
mov
lock
stc
cmp
dec
add
outsl
xor
push
out
xchg
sarb
add
bound
adc
dec
fdiv
inc
cmc
jne
push
jb
jns
lcall
cmp
xor
stos
mov
stos
jnp
mov
leave
lret
fdivrl
xlat
mov
adc
pop
sub
clc
aaa
aas
pop
in
inc
cmp
add
sub
xor
push
fwait
iret
adc
xchg
jmp
aas
push
sbb
xchg
jns
dec
in
jo
rcrl
in
mov
mov
push
pop
flds
sub
inc
sbbl
pop
and
inc
sbb
mov
fwait
jae
adcb
int3
xor
jo
pop
les
mov
jmp
pop
das
out
repnz
xchg
loopne
cld
scas
push
jb
mov
mov
push
scas
adc
popf
push
mov
sub
dec
lds
jns
ds
dec
ret
loopne
mov
bound
loope
or
mov
inc
sub
add
repz
add
insl
push
dec
or
jecxz
add
popa
pop
out
mov
loop
push
mov
or
daa
jecxz
sub
adc
add
jecxz
sub
stos
iret
lds
or
pusha
jg
xchg
cltd
ljmp
sub
pop
or
add
and
insl
xor
stos
out
jns
sub
mov
xor
fld1
jmp
mov
or
dec
pop
loopne
lds
cmp
out
fsubl
rorl
fstpl
cwtl
cwtl
cli
cld
clc
movsl
mov
mov
loope
mov
mov
in
mov
push
or
loope
xchg
dec
ror
fldt
movsb
mov
mov
add
loope
or
in
add
push
or
mov
dec
incb
adc
and
and
xlat
add
or
fstpt
push
ss
inc
mov
add
sub
popa
lret
stos
cmp
orl
aam
sub
es
push
xchg
orb
adc
aaa
sbb
jns
mov
and
test
lret
cmp
enter
and
call
add
iret
sub
clc
push
dec
fsts
jg
jle
inc
insl
popw
divb
scas
dec
dec
mov
pop
cmp
add
ds
test
int3
cmp
fldl
test
bound
mov
push
lds
mov
mov
pop
cmpsl
outsl
dec
mov
jle
inc
mov
push
xor
popa
aad
insb
clc
mov
int3
or
or
xchg
xchg
jne
jno
adc
testb
mov
mov
and
scas
das
dec
sbb
jae
std
imul
mov
out
sbb
inc
lret
ud0
lods
xor
stos
pop
xor
inc
pop
push
adc
scas
decl
inc
incb
je
jb
cld
inc
jo
jns
jno
test
push
xchg
pop
xor
adc
lret
aas
cmpsl
sub
cmpsl
movsb
pop
dec
adc
decl
inc
sbb
into
lret
add
mov
mov
cs
jg
fcompl
dec
push
aad
inc
insl
fsubl
icebp
xor
imul
push
lods
fwait
std
outsl
mov
shll
cmp
test
repz
jns
push
push
leave
dec
aaa
fmull
js
mov
push
jmp
or
add
push
sbb
test
sub
sub
adc
push
stc
int3
repz
nop
hlt
dec
jae
push
cmp
pinsrw
popa
xchg
in
imul
dec
push
lea
ss
fsqrt
mov
ljmp
jp
imul
sub
ror
call
xchg
dec
push
sbb
stc
dec
pop
sub
push
out
cs
sub
mov
ja
adc
push
sahf
fdivl
pop
and
sbb
scas
and
adc
lea
inc
ss
mov
mov
into
sahf
mov
sub
cmova
test
pop
das
shrl
inc
fistpl
and
in
mov
lret
fildll
xchg
mov
sbb
mov
and
sbb
pop
out
or
sbb
mov
fidivrs
clc
repnz
int3
push
movsl
add
mov
mov
pop
jne
push
lods
sbb
xchg
mov
fwait
mov
std
loopne
dec
xchg
adc
push
lret
cmc
out
jl
dec
fwait
rcrb
adc
repz
shlb
clc
inc
fidivl
jmp
pop
imul
outsb
mov
dec
dec
jecxz
fwait
sbb
jp
cwtl
mov
and
sti
sub
push
mov
mov
jp
pushf
lret
movsl
mov
lea
dec
in
mov
in
xchg
in
jnp
push
popf
daa
lods
insl
push
ljmp
xchg
xor
lret
cmp
xchg
ss
mov
rcr
push
ljmp
push
outsb
movl
outsl
sbb
push
int
sbbl
sub
aad
pop
stc
subl
mov
and
xchg
popf
xchg
fidivs
sub
in
push
iret
xchg
lret
mull
sti
push
sbb
push
movb
lds
mov
cmpsl
mov
out
dec
movsl
xchg
sbb
jl
ljmp
ret
pop
push
xchg
or
pop
outsl
ficoml
js
cmpsl
adc
fs
rorl
dec
mov
cld
dec
inc
inc
fwait
push
mov
fstpl
pop
shll
sub
mov
mov
mov
jns
test
xor
jns
les
jae
jl
loop
push
mov
jne
ficoml
jbe
stc
mov
movsb
jp
adc
ja
pop
pop
sbb
sbb
leave
sbb
fs
sbb
adc
insl
and
push
orb
mov
lret
pop
mov
shll
outsb
pushf
mov
ffree
jo
or
dec
imul
xor
mov
hlt
push
adc
dec
test
or
test
int
insl
jno
jmp
pop
mov
and
lea
jl
push
adc
jnp
mov
sub
or
ret
jbe
jmp
mov
mov
cld
push
int3
jmp
and
dec
jnp
mov
loop
fdivrl
xchg
rorl
add
inc
jb
bound
sbb
jl
inc
popf
mov
or
fcomps
mov
cmp
in
in
fdivl
sub
pop
xchg
stc
push
xor
fs
jno
push
push
mov
pop
mov
or
pop
icebp
fwait
sub
and
daa
repnz
mov
fs
dec
bound
fmulp
push
cmp
repnz
sub
les
inc
into
mov
mov
in
mov
dec
jae
repnz
jbe
cli
and
adc
mov
clc
sbb
jecxz
les
pop
loope
shl
ss
sbb
repz
in
fisubl
add
cmp
scas
pop
dec
es
inc
in
data16
data16
jle
rcll
jmp
ret
jno
xchg
push
out
cmp
and
xchg
mov
jmp
out
fistpl
or
pusha
jno
cwtl
jp
rcll
cmp
pop
cltd
mov
sahf
xor
clc
xchg
stos
mov
call
int
in
insl
sbb
aaa
rorb
insl
xor
mov
jno
cmp
mov
or
push
lods
movsb
bnd
gs
or
ja
mov
sub
sbb
into
jg
in
out
mov
push
js
sti
mov
inc
add
mov
dec
push
test
movl
lods
xchg
fnstenv
xor
stc
adc
mov
cli
sub
popa
pop
lret
les
sbb
dec
push
aam
cmp
lcall
add
and
fistpll
in
push
test
ret
test
ficoml
ret
and
inc
cli
cmp
or
push
inc
andl
sub
mov
sbb
fucom
jns
sbb
and
enter
enter
aad
test
fs
jecxz
pop
jb
loope
push
mov
daa
loopne
sbb
add
inc
adc
lds
sbbl
cmp
cmp
repz
mov
cmpsb
out
addr16
leave
push
jge
cmp
mov
int
fldcw
pop
pop
shr
mov
xorl
pushf
push
ret
jne
test
je
or
out
adc
in
jecxz
sbb
xlat
outsl
stc
mov
nop
out
or
cwtl
pop
or
lcall
out
cli
mov
fldz
fmuls
push
sub
push
push
jle
outsl
mov
test
fisttpll
ret
out
fldcw
add
loope
notb
xor
sbb
add
arpl
pop
pop
xor
xchg
movsl
mov
stc
sub
popf
jle
and
or
jne
nop
aas
lahf
mov
mov
sbb
inc
repnz
sbb
pusha
mov
pop
dec
test
adc
jmp
or
inc
mov
out
shl
jmp
arpl
dec
iret
mov
or
push
scas
hlt
rorb
outsl
pop
addl
sbb
cmp
imul
add
cli
inc
pop
push
pop
mov
or
cmp
push
ss
rorb
movsb
fwait
and
jne
xorl
jnp
pop
popa
out
push
jnp
jl
or
jbe
mov
xchg
xchg
das
in
test
jns
cmpsb
cmpsb
data16
sbb
aam
aad
xchg
out
daa
sbb
sahf
dec
or
ljmp
mov
and
repz
mov
add
dec
xlat
cmpsb
xchg
xor
lcall
out
pop
mov
mov
jb
daa
sbb
mov
xchg
push
leave
jo
push
mov
sahf
insb
rcrb
cs
sqrtps
ret
scas
notl
lods
sbb
rcll
sbb
dec
rclb
lods
je
xlat
mov
jnp
mov
insl
hlt
cltd
adc
scas
mov
mov
rcrl
in
xor
ljmp
add
dec
stc
fsts
mov
mov
leave
in
add
addr16
aam
lcall
xchg
and
mov
jg
mov
sti
or
push
ja
int
scas
inc
fs
adc
mov
addr16
inc
adc
lock
leave
daa
mov
xorl
push
das
xor
dec
jg
jne
int
int
adc
xchg
cmp
clc
movsb
or
cmp
aas
shr
mov
mov
in
into
mov
ficoms
sbb
jnp
out
jmp
sbb
out
in
bound
ja
mov
jnp
in
pusha
xchg
das
push
adc
push
in
xchg
insl
rclb
int3
ja
imul
mov
xchg
push
ret
sub
adc
xchg
cwtl
jo
ret
push
or
shlb
mov
out
lods
or
xchg
push
push
pop
jecxz
aad
xchg
pop
adc
ja
or
fisubrl
ja
push
sbb
or
xchg
xlat
test
shlb
jnp
jnp
push
aad
add
mov
inc
mov
movsl
stos
mov
ss
es
ljmp
sbb
add
test
aad
mov
push
jb
fcomip
mov
mov
popa
inc
sub
pop
or
cmp
sub
clc
dec
iret
inc
add
cmp
dec
lahf
jo
pushf
sti
inc
nop
sbb
pop
inc
xchg
pop
cmp
mov
inc
push
inc
xchg
sbbb
add
cs
call
mov
sub
mov
dec
clc
idivl
add
pop
sti
gs
sub
dec
data16
mov
add
cmpsb
enter
jmp
and
inc
pop
popf
aaa
rclb
mov
and
xchg
xor
out
jl
jl
scas
sti
sbb
mov
cmpsb
mov
call
pop
or
adcb
cmp
jnp
sbb
cmp
dec
or
xchg
mov
imul
mov
insl
xlat
add
repz
in
ss
imul
adcb
pop
inc
cmc
aam
je
mov
inc
mov
add
mov
das
dec
mov
cmp
popa
cs
insb
lods
jle
pop
hlt
popa
jnp
adc
jnp
movsb
sbb
jmp
dec
add
cs
push
stos
jb
js
popf
mov
cld
leave
lock
inc
dec
addr16
iret
movsl
cli
sbb
daa
iret
repz
dec
loop
sub
je
or
jp
mov
push
xorl
add
cmp
mov
inc
pop
or
or
or
jns
pop
cmpsl
jne
or
ljmp
sbb
mov
shrb
mov
in
dec
insl
icebp
adc
and
cmpsl
movsb
xchg
mov
inc
adc
aam
rcll
es
pusha
and
and
inc
mov
inc
jle
cmp
xchg
loopne
mov
popa
rcrl
daa
push
test
rol
add
js
xlat
mov
dec
sbb
aam
movsl
ret
test
mov
inc
push
pop
in
aaa
data16
shl
jno
lds
mov
mov
shrl
lock
sub
or
mov
and
xchg
jge
pop
push
lret
orl
xor
push
xchg
xchg
loopne
jp
roll
push
and
ret
out
loope
sbb
aaa
and
int3
and
dec
adc
push
jns
shrb
pop
and
in
mov
sbb
jbe
lret
add
popf
ljmp
outsl
les
hlt
jle
and
jge
xor
adc
cli
out
pop
mov
psubd
lret
pushf
and
push
mov
lods
outsl
push
xchg
ficompl
ljmp
fdivrl
cmp
xor
lahf
nop
xchg
jg
xor
mov
mov
stos
push
add
mov
pop
aaa
xchg
dec
xor
insb
arpl
enter
test
ret
ss
hlt
xchg
xor
bound
add
test
push
sbb
leave
lcall
and
mov
xchg
rcrl
ja
and
xlat
cmp
and
stos
and
inc
ret
pop
mov
and
jmp
jecxz
lret
in
jns
or
movsb
shll
aam
out
cmp
mov
into
loope
or
cmc
and
jae
in
scas
jmp
and
mov
dec
cli
bound
or
int3
dec
or
into
dec
xor
jb
sbb
cmp
mov
cmp
leave
or
push
sub
sub
orl
mov
lea
mov
jg
jo
enter
adc
adc
fs
inc
cmpsb
mov
loope
xor
cmp
ljmp
or
push
or
enter
inc
adc
pop
shr
inc
popf
inc
sub
inc
push
mov
push
mov
xchg
xchg
repz
fwait
xor
jl
outsb
adc
or
test
mov
arpl
xchg
jl
cmpsb
jbe
push
js
xor
pop
jp
xorb
stos
xor
lahf
adc
pushw
dec
mov
push
call
mov
adc
mov
pop
fidivrl
es
jmp
xor
aam
test
jmp
jp
jo
nopl
cmp
insl
mov
sahf
ret
mov
xchg
jl
xchg
fwait
and
cli
adc
jnp
movsl
adc
pop
andl
dec
mov
movsl
rclb
mov
mov
inc
xchg
out
imul
push
das
adc
xorb
pop
xor
jecxz
rorl
add
ret
and
mov
scas
subl
pop
cltd
and
movsl
pop
lret
sub
cmpsl
int3
mov
jbe
mov
rcrl
xor
dec
adc
mov
aad
popa
cmp
dec
adc
jp
cmp
inc
sub
test
push
out
mov
jl
inc
shl
pop
loopne
dec
test
inc
inc
or
in
cli
fs
addr16
pop
inc
jl
rcrl
lahf
rclb
lock
adc
test
sub
cmp
addr16
imul
repz
subl
aas
jg
inc
or
ds
insb
cld
clc
es
pop
or
jp
arpl
lods
sbb
in
nop
out
dec
jp
test
fwait
rorl
jo
dec
and
lcall
inc
pop
pop
test
cmp
xor
aam
xchg
xchg
dec
push
cmp
in
pop
mov
mov
jge
inc
add
loopne
ja
and
dec
lret
adc
pop
daa
icebp
repz
inc
aaa
jne
push
lock
xor
push
mov
or
mov
push
shlb
lret
aam
mov
std
movsb
inc
ljmp
icebp
std
mov
loopne
xchg
stc
jns
mov
out
adc
fimuls
xchg
inc
inc
mov
rorl
shrb
adc
xchg
addb
jg
push
pop
aas
mov
pop
fisubl
mov
lea
jne
add
push
outsb
jno
pop
and
cs
xorb
ficoms
mov
loopne
inc
subb
pusha
ret
xor
pop
xor
lcall
mov
sub
mov
notl
cmp
jp
ret
add
loop
mov
fs
mov
mov
popf
insb
in
jmp
fnstcw
mov
cmp
sbb
test
mov
jge
das
pop
mov
mov
cmp
insl
nop
cmpsb
dec
lcall
jnp
sub
add
jecxz
mov
pop
push
fmuls
cmp
outsl
lods
dec
pop
push
dec
dec
enter
repnz
out
cli
fwait
pop
mov
test
test
sbb
pop
xchg
pusha
dec
lods
mov
jno
push
and
mov
negl
mov
movsb
pusha
pop
cld
push
push
rorb
pusha
inc
push
push
test
jo
push
push
inc
inc
movsb
leave
cmpsl
rclb
lret
add
sub
fisubrs
fcoml
sbb
cmpsl
jae
sub
jnp
mov
filds
cltd
imul
dec
divl
mov
in
mov
out
add
ljmp
jmp
mov
cmpsb
jmp
pop
pop
jg
xchg
xorb
mov
or
sub
mov
rcr
out
xchg
in
push
adc
ret
inc
xchg
outsb
and
dec
das
jle
imul
leave
test
fisubrs
icebp
lret
lcall
pop
fistps
add
les
sub
test
and
push
or
pop
iret
mov
mov
jae
push
pop
xor
fists
jp
pop
jo
shll
aad
xchg
je
fnsave
pop
insl
adc
mov
sub
lods
pop
daa
inc
jnp
sahf
pop
xchg
gs
mov
rcl
std
xor
sbb
aam
or
in
sbb
cmc
cmp
insl
mov
lods
push
mulb
lahf
inc
push
lods
mov
jg
and
push
xor
pop
and
ds
push
mov
xchg
gs
xchg
add
pop
xchg
xor
mov
sbb
xchg
jmp
sahf
cwtl
sbb
popa
mov
fdivrl
mov
pop
inc
hlt
movsb
jl
dec
xchg
cmpsl
mov
xchg
and
jl
mov
mul
aaa
jae
lahf
cmp
or
ds
xor
jnp
jnp
sbb
push
hlt
imul
push
jmp
or
jmp
pop
and
aad
jl
mov
mov
xchg
xor
pop
int
nop
ljmp
mov
faddp
or
fsubr
outsl
jb
aaa
xlat
roll
cs
jl
jge
xchg
inc
xlat
lcall
mov
incl
mov
inc
xor
jecxz
arpl
mov
lret
in
mov
adc
inc
and
in
pusha
movsb
lahf
cmp
cmpsb
outsb
iret
adc
mov
inc
add
hlt
cmpsb
mov
out
push
pop
outsl
push
pushf
mov
inc
lods
aas
sar
pushf
test
inc
jmp
inc
mov
jmp
ljmp
jns
jo
movsb
add
std
pmulhw
mov
mov
xchg
lods
inc
xchg
out
out
dec
and
cmpb
sbb
xor
xlat
fdivrs
push
mov
sarl
loop
movsl
mov
jl
or
out
mov
fisubl
out
xchg
enter
pushf
and
adc
outsl
roll
into
dec
mov
imul
in
or
adc
sti
push
loope
mov
and
cmp
jmp
adc
pop
fistl
mov
xchg
jl,pn
out
xchg
xor
jae
mov
and
orl
mov
clc
mov
dec
out
cmpsb
into
inc
nop
pop
push
or
call
sbb
js
mov
aam
js
add
aaa
fucomp
pop
jecxz
or
aam
jl
lret
cmpsl
and
aad
pop
jno
adc
sbb
aad
mov
pushf
jge
loope
mov
mov
divb
cld
sub
and
xchg
aad
mov
dec
push
jge
out
cmp
pop
lea
aaa
inc
lock
pop
lret
adc
ret
mov
sbb
pop
call
lea
inc
xchg
inc
cwtl
add
test
into
add
jbe
jge
insl
mov
lea
adc
stos
xor
scas
or
mov
mull
add
test
push
pop
mov
mov
xchg
pusha
pop
add
movsb
dec
call
ret
mov
cltd
adc
ljmp
mov
pop
mov
aam
mov
push
pop
aas
sbb
pushl
dec
cmc
out
scas
adc
pusha
pushf
sub
sbb
daa
fistpl
and
in
adcb
cmp
ret
push
mov
pop
lahf
cmpsb
push
lods
dec
ret
dec
xchg
loop
stos
and
xor
mov
cmpsl
and
adc
mov
fnsave
jl
or
sub
aas
sub
jecxz
insl
xor
enter
sbb
or
mov
push
ljmp
cmp
xlat
push
comiss
cmp
mov
popf
dec
add
pop
adc
mov
inc
insl
fisubrs
lds
push
or
fldenv
dec
repz
out
xor
sbb
enter
icebp
xor
mov
adc
pusha
lret
out
sti
inc
cmp
lds
inc
pop
xor
and
xor
imul
pop
cmp
std
roll
mov
add
orb
fistpl
inc
xor
cmp
sub
push
inc
out
pop
push
jbe
out
les
fidivs
and
cmp
nop
aas
imull
dec
cmp
mov
fcmovu
in
lcall
cmp
mov
aam
rcl
mov
push
adc
jnp
bound
xchg
ret
and
popf
inc
xor
loope
sbb
stos
pop
cmp
vsubpd
addl
adc
mov
dec
jnp
out
mov
push
dec
fwait
push
adc
je
loope
or
lcall
sahf
cmp
push
ret
dec
jp
dec
testb
inc
and
inc
mov
jae
mov
pop
jle
jle
or
dec
fsubs
push
adc
inc
js
pop
xor
ret
aas
or
cmp
cltd
mov
xlat
xor
lret
insb
xor
mov
loop
push
or
push
mov
cmp
cmp
mov
add
xchg
jbe
add
outsl
bound
xchg
les
pop
test
test
insb
int
dec
dec
xchg
loop
dec
cmp
sub
push
sub
inc
pop
adc
fdivr
ss
mov
lods
add
setne
mov
cmp
test
std
in
pop
or
mov
add
in
pop
insb
stc
mov
add
dec
push
shr
aam
idivl
xor
sbbl
nop
scas
test
jbe
push
inc
int3
outsl
mov
jle
xchg
sbb
jns
nop
nop
add
or
movsb
xchg
push
xor
ss
add
aaa
pusha
cmp
dec
pop
addr16
xchg
mov
xchg
and
xor
dec
repnz
cmp
cld
push
xchg
adc
sbb
lods
and
dec
xor
lret
or
jbe
fldl
push
push
psubd
or
mov
jecxz
ret
std
insb
xor
call
inc
frstor
cmc
je
push
cli
mov
sub
jbe
cs
test
shrb
sub
fisubs
insb
iret
bound
dec
shrl
sub
jne
les
fdivrl
mov
pop
add
or
and
jp
mov
pop
notl
rcl
or
pop
pop
adc
cs
xchg
roll
shrb
enter
aaa
adc
sub
rcr
insb
scas
sbb
mov
sub
mov
jne
shlb
add
jmp
lcall
andb
mov
fisubl
unpckhps
jge
xor
or
ret
jg
das
pop
pop
jns
iret
stc
jne
xchg
mov
mov
or
dec
dec
insb
addr16
in
pmullw
mov
addb
arpl
xchg
pop
dec
fcmovnb
je
mov
pop
and
sbb
mov
xchg
aad
mov
jns
ss
stc
push
xchg
fcoms
mov
dec
clc
mov
sarb
popf
arpl
add
sbb
cmp
push
shrl
inc
xor
sbb
mov
xorl
stos
push
mov
jg
pop
cmc
loope
pop
lcall
sti
stc
dec
adc
inc
popf
xchg
stc
sar
mov
lret
popf
lock
daa
or
insl
or
dec
fcmovnb
sbb
inc
jne
mov
push
cld
es
lret
loopne
and
fmuls
add
insl
xor
mov
or
and
fucomip
fsubl
push
rcl
int3
int
jp
mov
frstor
dec
mov
or
into
or
dec
pop
insb
mov
insb
fists
push
cmp
inc
jnp
fiadds
xchg
mov
aaa
mov
xorb
repnz
in
mov
cmp
xchg
aaa
in
stos
xchg
mov
enter
xlat
and
aas
adc
mov
jge
ffree
push
shl
cmp
loop
bswap
lret
xor
sbb
sbb
inc
xlat
jl
dec
js
sbb
dec
push
clc
das
mov
xchg
sbb
pop
push
xlat
sub
loop
imul
mov
inc
pop
shll
push
lods
or
and
fldcw
mov
fidivrs
sbb
xor
das
outsb
ss
sub
mov
push
sbb
jmp
outsl
aam
shll
xchg
dec
stc
mov
call
mov
xchg
aad
les
mov
push
jg
rcl
inc
aaa
in
pop
stc
stc
cmpl
xor
aad
inc
mov
popa
push
or
jae
popa
pop
sub
pop
loop
pop
call
adc
jo
or
dec
dec
addb
sbb
jae
icebp
in
push
mov
pushf
insb
es
rcl
sub
movb
mov
ja
ljmp
pop
and
in
fiadds
loope
or
jge
gs
jae
js
imul
mov
fdivs
out
aad
mov
and
mov
das
xchg
pushf
int
pop
enter
shlb
push
pop
add
sbb
push
int3
xlat
les
jb
stc
repnz
or
cmp
or
sbb
rorl
fildl
in
adc
pop
inc
ds
cmpb
fcom
xchg
idivb
pop
scas
rep
je
stos
lahf
mov
adc
add
push
sub
js
cmp
int
stos
test
inc
outsb
dec
fistl
je
xchg
add
sbb
mov
ja
dec
cmp
addr16
jle
cmp
fildl
sbb
data16
clc
daa
and
test
add
stos
das
rol
cmp
jle
loope
cs
pop
mov
outsb
rolb
sti
sub
ds
sub
mov
jl
in
xchg
scas
mov
xor
jb
test
lret
pop
cwtl
push
repz
xchg
sub
fwait
mov
mov
push
mov
insb
pop
dec
loop
pop
int3
sub
and
iret
leave
mov
adc
clc
lret
in
mov
xorb
mov
out
sub
loop
movsl
in
dec
sbb
jb
pop
jmp
int
or
sub
rcr
popa
popf
jecxz
shll
lahf
lret
jecxz
lret
cltd
dec
jl
sar
es
lock
jo
popf
pop
sub
icebp
cmpsb
lret
mov
pop
jo
and
lret
sbb
inc
xor
dec
jne
pop
xchg
sub
in
sub
dec
adc
jp
stos
rcrl
xchg
into
scas
aas
xor
cs
mov
pop
fmulp
out
adc
loopne
sbb
push
shlb
inc
dec
mov
sub
popf
addr16
mov
mov
mov
popf
lahf
inc
sbb
imul
mov
and
jne
jmp
jl
adc
add
sub
fs
and
dec
stos
faddl
or
push
xlat
pop
jg
in
ds
clc
nop
adc
cltd
jo
xchg
lcall
les
sbb
les
in
pop
into
xchg
cmpsl
into
mov
cmpsb
arpl
inc
leave
cmp
mov
fistpl
push
sbb
jl
sbb
cwtl
insb
dec
push
jne
cmpl
test
and
jge
lret
imul
xlat
cld
jae
mov
shlb
jae
sub
ljmp
or
loope
mov
jp
or
dec
stc
int
cmp
inc
cmp
xchg
aaa
jb
sbb
test
xchg
dec
loop
andb
pop
mov
ja
out
bound
cmp
sub
xor
mov
jae
xchg
and
enter
lods
sbb
and
jg
adc
jne
fildl
aas
xchg
gs
pushf
cld
xor
addr16
xchg
int3
push
fidivrl
push
mov
fld
cmpsb
cmp
cli
jl
in
cmpsl
inc
dec
dec
scas
jo
xor
lcall
dec
jne
sub
jbe
or
mov
movsb
mov
fildl
inc
insb
sub
fldenv
es
inc
fmuls
scas
push
or
or
xchg
mov
sub
jmp
mov
or
mov
mov
push
incl
addl
mov
cmpb
push
stos
ss
int
pusha
repz
lds
ret
sub
cmp
pop
mov
fildl
inc
push
cmc
cmp
xor
out
stc
ja
add
movsb
xor
mov
adc
test
xchg
iret
sub
js
nop
push
mov
and
mov
sbb
ljmp
adc
or
and
std
fadds
sbb
mov
mov
dec
mov
dec
push
cmc
mov
mov
aam
aad
xchg
addr16
cs
pushf
mov
mov
out
lret
out
nopl
ljmp
inc
add
jecxz
add
fdivl
sub
lds
stc
add
stos
inc
cmp
sbb
cmpsl
and
ja
mov
pop
fnsetpm(287
fidivrs
inc
cld
dec
mov
mov
xchg
nop
mov
and
adc
loop
lahf
cwtl
or
pushf
test
push
pop
jmp
shll
mov
inc
outsb
mov
pop
cmp
add
pusha
fldenv
js
mov
fdivrl
jnp
popl
jb
dec
push
mov
or
mov
lods
div
sbb
movsl
xchg
push
mov
push
push
dec
cmp
xchg
mov
jp
adc
data16
les
divl
lods
ja
out
movb
xchg
xchg
xchg
fistpll
shld
movsb
shr
jnp
jno
int
mov
mov
ds
mov
mov
ss
cmp
push
outsw
xchg
add
pusha
inc
dec
lret
xor
aas
dec
fcmovu
cmp
pop
stos
dec
pop
push
test
xchg
enter
inc
lahf
cld
push
es
mov
stos
and
xchg
mov
pop
mov
aad
insb
cmp
cld
cmp
gs
outsl
in
jge
pop
cmp
lcall
mov
mov
popa
cli
and
xchg
fwait
dec
test
addb
out
es
lahf
mov
loop
mov
xor
lret
ja
roll
sti
in
jl
cmp
fs
fisttpl
leave
enter
push
out
hlt
jmp
cltd
mov
jg
sarl
fs
repz
test
shll
cmpsl
loop
movsl
daa
test
pop
pop
adc
xor
loop
mov
push
jge
scas
fsubl
mov
dec
dec
push
cmpsb
pop
inc
leave
insb
rolb
xlat
test
imul
xor
mov
nop
lret
cmp
dec
or
add
push
xor
dec
xor
mov
cmp
imul
in
ja
mov
adc
lret
es
mov
inc
je
push
cmp
fsubl
jle
adc
mov
pop
push
fisttps
stc
out
jge
xchg
roll
mov
jno
adc
ret
pop
fildll
in
mov
mov
arpl
or
mov
roll
add
rcrb
cmp
sbb
repz
mov
sbb
inc
out
sbb
add
lock
cltd
popf
pop
push
int3
mov
pop
pop
pop
adc
push
xchg
decb
movsb
sbb
mov
xlat
jmp
mov
das
outsl
pop
xor
pop
dec
mov
push
lret
pop
cli
lret
push
lea
dec
test
leave
sub
bound
cmp
dec
pop
cld
mull
mov
cli
insb
arpl
mov
mov
sbb
clc
xchg
or
movsb
sub
pop
xchg
sub
xor
push
sub
das
sbb
mov
movb
icebp
pop
repnz
mov
insb
outsb
test
lea
adc
hlt
adc
push
sub
mov
dec
pop
ret
shrb
in
outsl
cmp
adc
ficomps
ja
push
sbb
test
mov
push
mov
popa
imul
lock
loop
pop
shlb
hlt
repnz
dec
repz
pop
dec
or
push
ret
fdivl
popf
inc
or
or
adc
out
movsl
sbb
cmpl
inc
repnz
xchg
cmpsb
popf
popf
mov
ds
add
dec
movsb
ret
xchg
sub
das
jle
les
jp
and
hlt
mov
or
xchg
jl
cmp
jnp
sti
stc
dec
xchg
adc
pushf
bound
dec
adcb
jmp
push
mov
xor
cmpb
jnp
lahf
testb
fidivrl
sub
addr16
ficompl
int3
sbb
mov
fldln2
adc
mov
les
loope
pop
arpl
fisttpl
jge
fwait
inc
dec
lret
adc
imul
mov
fldenv
cwtl
xchg
popf
sub
jne
inc
movsb
xor
jg
push
out
sbb
pushf
inc
push
mov
sbb
cmp
push
mov
xchg
or
shr
fstpl
loope
mov
and
and
cltd
inc
pop
mov
ret
xchg
jmp
xchg
das
shlb
cld
push
test
cmc
xchg
mov
dec
or
and
inc
mov
mov
xor
or
lahf
das
sbb
shll
cmp
or
rol
movsb
repz
dec
dec
and
lock
jo
mov
adc
rcrl
xchg
shr
test
jmp
mov
lcall
das
or
andb
out
add
addl
movsb
mov
sbb
cwtl
test
adc
gs
push
lahf
cmp
outsl
xor
addl
ja
add
fs
inc
cmpl
mov
cmpsl
cld
mov
fadds
filds
test
sub
sbb
add
std
leave
sbb
daa
out
bound
pusha
push
push
or
loop
push
push
xor
out
sub
pop
ss
movl
test
jb
repnz
call
and
xorl
loop
mov
mov
jecxz
out
movsb
clc
dec
jge
xchg
mov
loopne
jmp
stos
add
std
jmp
mov
adc
lods
push
xor
ss
loope
add
inc
sub
lret
stos
add
xchg
fsubrs
or
out
popa
out
mov
xor
lea
adc
sub
insl
xor
xchg
adc
sbb
das
or
mov
inc
in
lahf
pop
dec
negb
cmp
dec
dec
enter
es
sub
jp
ret
iret
icebp
popa
mov
mov
leave
ja
lods
out
jg
xor
jno
jmp
sarl
dec
rolb
stos
insb
xchg
shl
add
das
and
das
lock
lock
mov
dec
jg
imul
hlt
xor
cmp
out
gs
into
fdivrs
cli
cltd
pop
addr16
mov
xchg
pushf
outsl
add
pop
pop
clc
inc
push
mov
xlat
mov
xchg
mov
cmp
lock
lods
pop
cmp
or
test
sub
mov
jmp
loope
les
mov
dec
jnp
icebp
mov
rorl
int3
inc
enter
rol
lahf
jo
fidivl
lea
add
fistpll
lock
outsb
add
adcb
xor
sbb
xchg
test
inc
pop
sub
sbbb
js
and
adc
pop
cmp
xor
pop
cmp
jle
leave
data16
outsl
pop
fdivrs
add
lret
mov
sub
mov
shrb
in
xor
popf
imulb
cli
xlat
pop
cmp
rcrb
xor
test
mov
mov
iret
mov
push
xchg
loop
in
pop
jo
cmp
insb
cld
pop
pop
cltd
pop
dec
aaa
out
lea
xchg
shlb
or
test
sub
ror
outsl
xor
or
sbb
mov
gs
inc
jb
jg
icebp
add
xor
push
inc
inc
test
pop
jo
lods
dec
jmp
nop
ficomps
js
cmp
mov
mov
xor
mov
mov
sbb
sub
dec
cmp
ss
int3
mov
out
test
mov
repnz
jg
mov
dec
fiaddl
ss
popa
test
push
sti
aam
enter
mov
and
idivb
in
incb
add
fiadds
jmp
loop,pn
aam
sub
outsl
lcall
loop
ret
mov
fdivrp
ja
nop
into
pop
jp
mov
out
ret
adc
sar
into
and
andb
mov
pop
loop
mov
mov
sbb
mov
sbb
movsl
and
jnp
mov
add
mov
mov
stos
cmp
insb
shrl
sarl
in
ss
xor
cmpsb
pop
leave
or
jb
mov
iret
xchg
decl
xchg
ds
outsb
insl
popf
cmp
mov
or
jns
push
shl
inc
xchg
and
lret
jge
imul
loop
pusha
aaa
add
mov
cmpsl
incb
rorl
repz
mov
push
sahf
cmp
pop
sbb
xor
pop
mov
je
mov
dec
xchg
xchg
jnp
pop
out
xor
xor
iret
lea
and
fs
faddl
sub
gs
popaw
xor
mov
add
cmpl
mov
hlt
sub
bound
test
cmpb
or
dec
psubq
mov
push
pop
mov
xchg
fistl
push
out
inc
push
inc
int3
pop
cmp
dec
mov
pusha
mov
push
dec
sub
pusha
dec
fimull
bound
shlb
sti
idivl
out
xorb
in
lock
xor
ret
xlat
movsb
in
inc
jbe
sub
and
dec
cld
push
cmp
xchg
pop
jae
sbb
mov
add
pop
jne
mov
je
cmp
adc
pop
lods
test
mov
gs
pop
mulb
jl
xchg
mov
mov
xchg
mov
xor
es
jnp
dec
mov
fisubs
xchg
xchg
imul
hlt
xchg
jge
es
add
lds
pop
mov
push
movsb
mov
icebp
inc
cmp
cltd
add
jae
adc
das
lahf
sub
mov
in
loopne
inc
nop
push
pushf
pop
out
and
bound
pop
jns
fs
jmp
pop
aam
or
lret
pop
aaa
mov
in
fcompl
ret
outsb
loope
cld
mov
mov
out
sbb
jge
push
inc
fsubrp
adc
out
cmp
aaa
inc
dec
fistl
xchg
cs
sub
add
sbb
pop
xchg
lods
jns
lahf
stos
cld
cs
fstps
cmpsb
sub
scas
in
pop
rorl
xor
mov
adc
push
in
push
bound
addl
icebp
mov
add
mov
sbb
out
pop
aas
stos
dec
mov
in
cmp
xchg
mov
mov
mov
lcall
movsb
adc
mov
push
icebp
dec
pop
pop
push
mov
insl
add
fsubs
mov
lret
pushfw
sbb
in
enter
imul
xchg
popf
ror
stos
movsl
les
adcl
ja
daa
and
mov
fidivl
sbb
mov
sub
or
sbb
fstl
arpl
repz
pop
mov
pushf
pushf
pop
jo
jecxz
repz
fstpt
bound
mov
jl
push
outsl
scas
lahf
cs
jns
xor
jae
aaa
stc
jg
or
sub
outsl
lret
mov
push
jbe
lea
jae
testb
mov
lds
imul
daa
mov
test
mov
mov
iret
rorb
xor
fadd
or
add
xor
jge
pop
fcmovnb
cmpsl
movsl
sahf
aas
mov
mov
dec
imul
mov
push
inc
sub
test
or
mov
call
mov
push
xchg
inc
or
xor
pop
xlat
dec
scas
mov
push
loop
xchg
in
xchg
or
mov
xor
sbb
enter
js
pop
cs
jecxz
adc
in
inc
adc
outsl
in
movsl
lret
fs
mov
in
imul
and
inc
xor
or
insl
sub
out
xor
push
pop
into
insb
pop
dec
ret
inc
lock
xor
sub
dec
repnz
cmp
in
jae
jne
fisubrl
pushf
pcmpeqd
jnp
fwait
adc
xor
cmp
fs
inc
and
sbb
cmp
mov
rclb
fmulp
leave
out
rclb
daa
cmp
loop
sbb
jbe
daa
rcll
test
push
sbb
mov
push
add
cmp
orb
roll
jb
ret
rep
or
mov
mov
test
cmp
call
mov
mov
fwait
adc
test
rep
add
test
xchg
stos
out
imul
cmp
inc
faddl
pop
jecxz
xchg
push
xchg
mov
ret
out
test
shrb
iret
add
outsb
repz
push
adc
imul
aad
mov
cltd
daa
fwait
pop
add
mov
in
pop
testb
in
in
cli
daa
mov
or
mov
inc
data16
push
loopne
pop
inc
adc
pop
std
outsl
mov
sub
popf
mov
xchg
pop
sti
bswap
cld
icebp
push
inc
xor
xor
stc
notb
push
lea
mov
pop
jmp
or
sbb
or
push
mov
cmp
or
idivb
aas
jge
out
xchg
dec
ljmp
mov
fucomip
inc
or
sbb
cltd
sahf
rolb
nop
iret
icebp
inc
pop
pop
inc
popf
int
cs
pop
mov
shrl
push
aam
push
lea
out
jmp
and
add
idivb
loopne
std
pop
lea
xor
jno
dec
pop
jmp
stos
push
pop
call
sub
mov
mov
aad
inc
mov
mov
pushf
inc
inc
lret
loope
xchg
mov
gs
push
push
notb
cs
adc
mov
adc
sti
sbb
insl
pusha
xor
loope
dec
fisubrl
aad
xchg
aaa
ljmp
ret
xor
sbb
add
adc
jne
js
cmp
or
stos
and
outsb
jb
loope
mov
jae
outsl
in
mov
add
jg
push
fbstp
aad
inc
test
cld
jl
inc
xor
in
fcompl
aaa
rorb
inc
dec
mov
movsb
repnz
ror
lock
xchg
pop
ljmp
adc
lret
jbe
addr16
and
cmc
cmp
shrb
sbb
orl
bswap
adc
in
sub
fnstenv
outsb
cmp
lods
and
pusha
xor
mov
jno
in
lea
and
dec
sahf
mov
loope
and
scas
int3
fdivs
or
mov
and
cmp
pop
int
mov
clc
or
dec
fildl
mov
mov
stos
cmc
mov
aam
mov
push
cld
pop
add
mov
sub
out
push
jb
shlb
ja
adc
cmp
add
inc
push
enter
hlt
pop
outsb
add
aaa
xchg
fiaddl
iret
enter
loop
push
or
push
inc
ja
push
xor
out
mov
flds
fsub
pop
sub
dec
loopne
ss
sbb
dec
das
dec
mov
sti
sub
aad
fwait
pushf
add
movsl
cld
int3
adc
cmpsl
les
mov
popa
and
sbb
inc
inc
inc
push
arpl
xchg
lea
sti
inc
sarb
inc
cmp
mov
sbb
mov
add
jbe
sbb
dec
js
xor
loop
adc
cmpsb
in
and
and
xchg
daa
mov
jno
mov
xchg
call
fwait
rcrb
sub
bound
jle
cmpsb
insb
sbb
in
fbstp
idivb
cltd
pushf
outsb
sub
sbb
ljmp
jnp
cltd
adcl
test
jo
lock
test
clc
sahf
push
and
push
pop
test
mov
stos
lcall
fstps
pushf
sahf
pop
mov
loope
mov
dec
push
js
jno
testb
ljmp
dec
or
jae
xor
adc
push
and
xchg
iret
aaa
aam
sbb
adc
xor
idivb
cmp
mov
mov
pop
jecxz
inc
cmpsl
popl
cmp
pop
loope
jne
add
lcall
aam
add
subb
inc
jp
hlt
aad
and
sbb
test
aam
or
cmpsb
ljmp
mov
mov
xchg
push
adc
push
xchg
push
daa
pop
insl
jbe
push
add
shl
mov
adc
push
and
aam
lock
fisubs
cli
add
lods
pop
clc
pop
fisttpll
cmp
orl
cld
xchg
pushf
out
fsub
ds
scas
xchg
or
loopne
popa
jo
movsb
pusha
or
jle
push
mov
or
or
not
ret
imul
dec
adcb
push
out
lret
xchg
jbe
stc
shrb
push
jae
outsb
cli
add
xor
push
mov
mov
testl
push
jmp
mov
mov
sub
or
notl
cmp
jle
mov
out
inc
push
pop
and
pop
mov
out
jge
jno
mov
xor
push
xor
add
mov
leave
je
mov
ja
lahf
das
sub
dec
ss
call
pop
mov
sti
or
adc
je
and
icebp
std
or
testb
push
int
xor
jne
jne
js
xchg
push
insl
and
sub
pop
icebp
cld
xlat
sub
je
cli
xlat
ljmp
mov
push
stc
addr16
das
mov
sete
hlt
sub
inc
scas
push
cs
int3
fcmove
push
push
xchg
jne
stos
sbb
dec
xor
pushf
mov
cmp
loope
cmpsb
cltd
jbe
xor
cmp
sbb
ficoms
jne
cmpb
jns
outsl
rorl
push
je
in
and
call
cmp
stc
sub
rcrl
aam
fsubrs
dec
adc
mov
sub
mov
test
gs
xor
clc
test
aas
adc
cmp
jo
shlb
and
xor
ret
aad
and
scas
pop
das
push
inc
in
jl
dec
gs
and
jp
jb
enter
mov
or
push
jmp
xchg
pop
int
cld
insb
fnstenv
repz
pop
dec
adc
inc
cmpsb
ljmp
and
roll
dec
mov
cmp
inc
cli
outsl
hlt
shlb
adc
outsl
xchg
loopne
stos
push
dec
mov
inc
xor
cld
cmp
sbb
sti
push
add
sub
jo
jle
adc
cmc
hlt
pop
mov
cmp
gs
pop
xor
or
mov
inc
cld
mov
mov
nop
and
xchg
adc
jecxz
bound
loope
lea
sbb
add
dec
inc
pushf
ret
in
jg
inc
mov
sbb
pop
pop
clc
add
les
jae
mov
cli
xlat
jge
adc
fadds
in
clc
addr16
mov
ret
data16
lahf
ss
dec
inc
add
rcl
imul
push
push
dec
push
cmp
cmp
push
jb
pop
xor
data16
stos
push
popf
mov
std
push
cwtl
inc
adc
xlat
xchg
adc
out
pop
out
ret
ljmp
mov
shll
sti
push
push
popa
popf
ret
out
fwait
cmp
into
sub
shl
mov
xchg
push
push
push
sbb
push
mov
lods
fs
pop
rolb
mov
lds
xchg
fildl
frstor
xchg
les
dec
jae
fiaddl
sub
shrb
push
adc
lret
or
lods
pop
fistl
add
int
sub
mov
fisttpll
aad
push
mov
daa
icebp
and
and
out
sub
mov
xorl
test
mov
mov
sti
cwtl
popa
xor
dec
and
xor
dec
adc
movsb
hlt
adc
stos
push
add
in
std
add
push
sbb
in
hlt
or
ljmp
mov
mov
xchg
bound
or
mov
sbb
loopne
jae
adc
cmp
fisubl
loope
int3
in
leave
dec
lahf
lahf
push
dec
jl
add
scas
dec
je
mov
push
int
mov
aam
jno
rcrb
sbb
cmp
xor
ffree
xor
push
rcrb
sub
sbb
sub
in
bound
aam
mov
shlb
mov
aaa
movsb
sti
xlat
mov
push
leave
sbb
test
clc
sub
sbbl
out
dec
in
fcomps
sub
adc
push
adc
mov
mov
in
iret
xchg
subb
inc
add
xchg
test
dec
nop
pop
lods
enter
and
enter
stos
add
sti
mov
iret
pusha
pop
mov
cmp
aas
sub
xchg
jp
fneni(8087
xor
lods
pop
cmp
dec
mov
or
shlb
mov
jbe
bound
shlb
lods
vpcmpeqw
inc
xchg
aam
or
xor
pop
outsb
pop
jmp
movb
pop
cmp
sarl
leave
imul
andb
ss
shlb
pop
inc
cmp
addr16
stos
cmpsl
push
mov
push
push
orb
pop
jge
xchg
ja
insl
fisttpl
insb
mov
mov
inc
es
out
mov
mov
movsl
pop
jmp
or
lret
add
fwait
jne
mov
pop
inc
hlt
and
pop
mov
push
lret
stos
shlb
push
cmc
lea
jnp
in
fistpl
mov
je
stos
add
add
mov
cmp
mov
scas
fldt
inc
js
push
scas
loop
lret
mov
imul
lret
mov
dec
mov
std
sbb
out
shr
cmp
insb
mov
cmpsb
rcl
inc
imul
xchg
aad
es
mov
mov
lock
push
or
mov
cmpsb
mov
out
cwtl
shll
inc
clc
scas
nop
jno
sub
movsl
push
sub
dec
test
out
inc
jp
dec
sahf
enter
std
xor
or
test
jle
insb
xchg
add
enter
adc
movsl
xchg
cmp
cmc
push
cli
hlt
xorl
rcl
icebp
dec
jmp
inc
xor
popa
jl
std
scas
test
add
cmp
inc
sahf
rclb
and
inc
and
push
mov
int
push
je
repz
add
loope
mov
movsb
pop
add
mov
rcr
lods
push
mov
pop
sbb
mov
mov
cs
dec
cmpsb
xchg
leave
rcrb
stos
mov
cmp
cmpsl
add
imul
adc
push
leave
mov
push
cld
xchg
mov
cmp
and
out
mov
mov
rol
cld
lock
outsb
mov
ds
add
andb
dec
lods
fdiv
inc
clc
cmpsb
in
jb
mov
rolb
mov
push
into
mov
push
push
xorl
testb
dec
cld
aam
jp
jle
jle
push
aad
mov
mov
fadds
sarl
enter
adc
dec
lods
cmp
dec
push
fldenv
sub
in
leave
imull
push
cmpsl
sub
sbb
test
lods
inc
mov
cmp
fsubs
sub
xor
mov
out
inc
imul
lret
mov
inc
sbb
cs
popl
pusha
fdivp
inc
mov
mov
dec
out
subl
in
mov
in
data16
mov
add
int
inc
inc
xchg
mov
loope
or
inc
fbstp
push
push
sbb
mov
push
push
sbb
hlt
not
lea
mov
jge
mov
bound
inc
int
das
sbb
or
inc
or
setns
mov
jg
sub
cltd
inc
in
dec
mov
or
push
pop
pop
ret
jne
icebp
mov
arpl
add
sarl
enter
xor
or
push
pusha
inc
out
xchg
and
cmovge
mov
ja
xor
mov
fsubrl
dec
pop
push
jmp
into
ss
in
fdiv
movsb
and
adc
mov
push
sub
and
push
push
mov
mov
cwtl
test
shll
je
push
xorl
insl
add
data16
pop
in
stos
pop
pushf
ret
arpl
imul
lahf
repnz
pop
dec
adc
and
mov
call
repnz
sub
pop
pop
mov
xor
cmp
sub
cmp
adc
mov
fucomi
or
push
inc
shrl
mov
and
sbb
jmp
scas
std
jno
leave
mov
int
mov
jb
pusha
jo
cld
aam
outsl
xor
insl
enter
dec
lds
ret
xchg
rcr
jmp
fcmovnu
pusha
mov
xor
xor
or
cmpsb
and
ret
insl
xlat
push
fstl
xorb
enter
and
popf
or
inc
inc
xchg
out
add
ret
into
mov
aad
pop
out
incl
test
sti
jecxz
icebp
mov
jno
mov
xorl
in
fwait
and
pop
cmp
int3
clc
inc
dec
movsl
lock
ss
mov
cmp
pop
push
movsb
mov
imul
popa
dec
push
xor
and
lret
nop
cmp
aam
jg
xor
test
add
and
fwait
add
fldcw
pop
out
add
sub
jnp
add
and
div
subb
sbb
cmpsb
hlt
jmp
xchg
cld
jae
rorl
pop
subl
mov
call
add
xchg
test
pushf
daa
gs
cwtl
mov
or
mov
call
repnz
lea
push
outsl
lock
mov
shl
jo
fs
cwtl
movsb
adc
adc
jg
mov
repnz
lahf
xchg
test
not
mov
fbld
jmp
jl
out
insl
sub
nop
aas
jl
mov
int
sbb
mov
lods
pop
pop
mov
loop
int
ret
cs
adc
nop
xor
jne
mov
push
mov
subb
icebp
push
bound
out
mov
xchg
sub
inc
mov
das
pop
mov
test
mov
adc
or
sahf
inc
in
sti
das
mov
mov
push
loopne
mov
sbb
sbb
mov
mov
adc
mov
sbb
test
fxch
mov
loop
sub
push
pusha
inc
out
imul
adc
push
es
adc
repz
mov
fucomp
int3
cmp
out
or
scas
xor
sub
push
es
jmp
add
xchg
pushf
cmp
or
adc
mov
ja
in
push
push
ds
pushf
dec
es
and
data16
jne
or
popa
cltd
mov
adc
xor
je
shrl
pop
pop
dec
scas
sbb
mov
imul
add
push
repz
test
xor
xchg
cli
adc
add
insl
and
repnz
dec
sbb
test
shll
pop
mov
jne
pop
push
imul
and
test
mov
xlat
imul
loopne
out
dec
adc
jle
pushaw
in
fwait
pop
sub
jmp
add
cmpsl
sbb
sub
int
jge
mov
sbb
adc
xchg
fnstsw
mov
rolb
xor
xchg
pop
sub
sub
xchg
into
hlt
fistps
sub
push
les
jl
inc
js
jg
jns
dec
pop
fwait
add
fildll
cli
arpl
mov
jmp
jbe
das
lods
and
faddl
xchg
mov
mov
xchg
xchg
mov
inc
sti
and
push
testb
mov
push
imul
mov
bound
pop
mov
inc
mov
push
faddl
dec
ss
clc
test
iret
sbb
test
mov
test
pop
lcall
xchg
mov
fsubl
cwtl
push
mov
xor
jae
mov
cmpsl
push
imul
add
push
xor
jg
test
out
cmp
test
shl
bound
mov
orl
movsb
mov
and
clc
and
adc
jo
inc
inc
out
and
test
pop
in
xor
out
pop
ja
xor
add
push
xor
mov
sub
iret
mov
leave
ljmp
xor
mov
add
les
pop
mov
mov
push
push
enter
jmp
hlt
in
sub
mov
insb
pop
mov
mov
repz
adc
inc
xchg
fnstsw
fisubrs
inc
movsl
and
mov
xchg
add
int
sarb
add
push
hlt
sbb
repz
ffreep
andb
sub
je
aas
pop
call
jmp
inc
cs
clc
sahf
dec
lea
lods
and
in
in
andb
pop
adc
test
push
inc
mov
divb
dec
fwait
and
adc
enter
jbe
mov
inc
xor
inc
xor
jns
movsb
mov
out
xor
sub
int3
inc
dec
xchg
dec
xlat
shll
inc
inc
rclb
add
jb
xchg
xchg
push
and
rolb
pushf
mov
add
imul
int3
ret
add
shlb
int3
outsl
fsubrl
ret
push
xor
bound
push
ss
nop
test
shrb
and
ret
loop
jb
add
psubusb
or
inc
cmpsl
mov
fst
add
cmpsl
dec
add
inc
fdivs
rcrb
mov
ljmp
mov
pop
jmp
imul
adc
stc
mov
sbb
push
inc
fwait
pop
jmp
add
push
fwait
xchg
mov
loopne
pop
pop
fnsave
mov
push
mov
testb
pop
fisttpl
add
dec
pusha
cmp
lods
nop
popa
lea
scas
cmp
inc
pop
aas
cmpsb
scas
or
inc
cmp
pop
mov
or
xchg
rcrb
pop
repz
loop
mov
out
push
lcall
mov
mov
or
rcll
mov
rcll
rcll
and
test
push
std
xchg
pop
inc
or
cmp
jge
inc
insb
jns
clc
xchg
add
pushf
sbb
ret
and
icebp
inc
pop
mov
pop
icebp
push
push
scas
dec
sub
jbe
inc
out
lods
jg
adc
lea
repnz
inc
cmp
xorb
clc
inc
xor
bound
xchg
xchg
and
xchg
movsl
push
adc
std
ljmp
xor
sub
cltd
sarl
aad
lods
dec
fistpll
pop
scas
mov
push
icebp
push
movb
xlat
jg
lret
cmpsb
insl
ljmp
in
dec
int3
mov
push
pusha
and
cltd
aaa
out
cmp
roll
lods
iret
pushf
push
sbb
dec
lret
jns
or
je
sub
adc
xchg
pushf
adc
and
lcall
adc
cmp
mov
add
gs
push
mov
stc
lds
daa
or
lret
jne
scas
jnp
mov
xchg
fstps
fcmovb
jno
and
push
xor
pop
imul
les
jbe
fcom
xchg
adc
or
mov
shrb
sahf
adc
lds
sbb
orb
xor
int
out
inc
sbb
in
sbb
loope
stos
pushf
jmp
adc
push
adcl
movsl
inc
cld
cwtl
add
enter
cli
mov
mov
imul
pop
icebp
mov
adc
lea
sbb
add
int3
out
push
test
sti
mov
xor
sub
and
sub
sbb
mov
push
fsub
pop
push
pmaxsw
sub
out
cli
mov
pop
mov
or
jbe
stc
cmp
fwait
add
popa
sbb
jp
sbb
sbb
xlat
loop
js
ret
scas
fcomps
jecxz
mov
jecxz
nop
xchg
scas
xor
es
adc
push
fcmovbe
lods
cmpsb
loope
push
inc
sbb
adc
enter
dec
pop
push
adc
nop
leave
out
mov
ja
inc
adc
shrl
dec
jo
xor
pop
pop
ljmp
mov
push
popa
jae
mulb
xor
and
loope
out
sub
xchg
daa
test
js
hlt
pusha
and
bound
lods
add
mov
sub
outsl
mov
clc
cmp
sub
adc
mov
jo
jo
out
cmp
inc
gs
add
loopne
popf
sub
outsb
outsl
jge
jbe
cmp
sub
rcr
sbb
jecxz,pn
mov
add
xor
mov
push
int
pop
mov
popf
dec
and
stos
cmp
xor
aas
or
xchg
hlt
bound
cmp
jecxz
jp
add
cltd
sbb
xchg
stc
push
aaa
sub
js
je
ret
stos
sub
jle
sub
mov
push
ret
cwtl
mov
push
cld
cmp
cmpsb
cmpsl
int
dec
icebp
dec
or
sbb
and
xchg
ret
mov
ret
xchg
xchg
dec
xor
and
scas
pop
ss
imul
loop
mov
xchg
mov
inc
or
arpl
popa
cmpsb
add
into
fisubs
adc
pop
lret
sbb
arpl
inc
sbb
jp
enter
fbstp
adc
xor
insl
xor
insb
aad
out
mov
popl
push
clc
push
cld
push
mov
andb
xor
mov
mov
xor
movsb
mov
scas
dec
test
push
pop
jmp
mov
pop
xlat
fmul
mov
ror
dec
gs
sbb
inc
mov
fmul
ss
sbb
rol
and
push
arpl
or
jmp
movsl
or
test
imul
xchg
outsl
add
lcall
pop
cmpsb
or
imul
add
mov
mov
mov
pusha
pop
mov
lret
subps
ja
es
jle
push
sub
iret
pop
mov
mov
mov
jl
pop
fidivrl
jecxz
daa
push
arpl
bound
iret
cmp
sbb
inc
enter
cwtl
jmp
mov
and
inc
inc
call
push
xor
push
test
dec
sbb
push
jle
cmpsl
push
sub
out
add
mov
xorb
jb
test
lds
or
mov
xchg
xor
outsl
cmp
iret
xchg
inc
add
inc
mov
sub
sar
inc
jl
js
stos
aam
imull
mov
inc
cs
sbb
mov
outsb
jno
fadds
pusha
lds
mov
aam
lds
std
lods
les
mov
adc
iret
imull
fsubrs
lret
cmp
lea
dec
repnz
scas
mov
fiaddl
push
adc
mov
das
inc
add
cmp
out
xlat
sbb
jno
scas
sbb
mov
mov
or
dec
gs
jnp
enter
add
sti
in
or
sub
fsubrl
mov
jne
scas
lea
dec
sbb
fcomip
cmp
sbb
bnd
sbb
xor
pop
es
add
jg
aad
pop
clc
decb
repz
insb
xchg
push
outsb
stc
jbe
jecxz
push
xchg
mov
repz
add
fdivp
sub
cmpsl
fs
icebp
and
hlt
rorb
xchg
adcl
xor
add
icebp
mov
daa
push
les
cs
jmp
repnz
stos
ss
fistpll
inc
pushf
rcrl
jbe
roll
popf
xor
outsb
scas
sbb
xor
iret
add
ffreep
pusha
add
lea
cs
fimuls
jae
jg
push
adc
lret
ds
out
mov
or
dec
cmpsl
fildl
add
push
mov
lods
pop
fdivrs
inc
mulb
data16
add
inc
in
adc
ds
test
jo
sub
repnz
pop
xchg
cmpb
bound
cli
sbbl
push
push
jge
or
scas
xchg
lcall
ljmp
clc
test
mov
leave
clc
or
jno
jo
mov
push
mov
cmp
shrl
repnz
imul
outsb
int3
lods
or
inc
jecxz,pn
fisubl
inc
inc
mov
xor
pop
jl
mov
cmp
leave
outsl
mov
idivb
and
jo
movsl
fwait
mov
mov
push
inc
pop
dec
test
cmp
mov
dec
sub
mov
cli
xor
mov
fadds
pop
sub
inc
pushf
mov
fdivrs
mov
lahf
repz
fmuls
fists
shlb
lods
sub
clc
and
idiv
scas
fdivl
sbb
xchg
and
jno
fcmovnu
xor
enter
arpl
loopne
pop
mov
mov
movsb
pop
outsb
sub
lods
lds
mov
data16
ret
int
add
popa
jmp
call
test
js
sbb
xchg
pop
sub
sub
lret
lock
sbb
divb
cld
in
jne
xor
mov
popf
mov
adc
insl
mov
popf
jle
ret
cli
addr16
in
add
push
sti
dec
out
scas
mov
xor
test
mov
jb
xchg
iret
or
sbb
cmpsb
nop
je
push
adc
fwait
or
or
adc
mov
jmp
loop
call
mov
insb
outsl
inc
lret
mov
cmp
lods
sub
std
xchg
hlt
jae
ljmp
pop
call
push
mov
das
adc
cmp
test
ja
addb
jo
dec
cltd
imul
vprotd
into
push
adc
insb
or
mov
call
jle
and
outsb
adc
outsb
xor
jg
bnd
ljmp
or
bound
push
pop
into
cmc
adc
es
int3
push
xor
mov
iret
lcall
cmp
jae
sti
xrelease
icebp
push
aad
stos
jmp
ret
fdivl
push
cmpsl
iret
stos
push
mov
pop
jns
inc
fidivs
mov
xlat
andb
inc
mov
jne
imul
pop
out
mov
movsl
mov
mov
mov
cmpsb
jns
test
out
outsb
fadd
dec
mov
adc
mov
and
jne,pt
sub
inc
cs
push
mov
sbb
enter
inc
cmp
add
mov
mov
aam
in
push
enter
mov
push
mov
dec
hlt
sub
push
sub
inc
jno
mov
lahf
push
nop
push
adc
sbb
mov
insb
cmpsb
add
jo
aaa
iret
ror
xchg
testb
shll
jbe
iret
call
daa
dec
and
loope
mov
pop
jae
mov
fcompl
jb
test
out
mov
xchg
jns
popa
or
mov
inc
jb
jle
cmpsl
call
jo
roll
ret
sub
sahf
sbb
pop
iret
jmp
clc
xchg
scas
stos
loop
lea
add
scas
dec
fs
in
pop
jecxz
addr16
cmpsb
loopne
mov
pop
cld
pop
enter
jg
sbb
adcl
xchg
mov
mov
mov
jg
mov
jae
xchg
add
iret
das
dec
jne
pop
insb
pop
ret
jae
sbb
xor
daa
jmp
mov
push
dec
ds
and
push
xor
jle
inc
jns
mov
testl
aad
mull
sahf
repz
or
iret
movsb
push
fildl
xchg
xchg
lods
repz
or
pop
mov
test
adc
aad
in
and
inc
into
sahf
add
loop
dec
xorl
jno
jnp
xor
and
xchg
jmp
shlb
popf
jns
adc
push
or
in
pushf
insl
sbb
aam
popf
test
loope
mov
dec
and
mov
fistps
jmp
icebp
outsl
adc
jns
enter
dec
lret
jne
add
add
ljmp
sti
sbb
sti
ljmp
sbb
and
push
add
fcmove
mov
xor
xchg
mulb
aas
aad
add
cmp
mov
pop
adc
sarl
scas
pop
xor
sbb
ds
pop
insl
fs
aaa
adc
xchg
cmc
mov
shll
clc
lock
adc
fnstsw
lret
jge
pop
mov
lcall
test
cmp
jge
dec
or
insl
mov
sbb
xlat
scas
lcall
repnz
les
sub
cwtl
pop
out
jnp
or
mov
adc
fidivrl
stos
ret
xor
arpl
mov
fiaddl
lret
std
shrb
lock
add
fcomps
bnd
sbb
mov
lret
push
insl
mov
pop
push
es
xchg
int3
jl
roll
xor
pop
pusha
sbb
loopne
push
mov
xchg
nop
push
cmpsb
cmc
xchg
adc
out
sub
xor
and
cmp
xor
dec
sub
pop
jae
xchg
outsb
notl
jl
xchg
add
movsb
popf
sbb
and
aaa
xor
movsl
inc
inc
pop
into
cmc
test
ja
mov
dec
push
cmp
xchg
mov
jnp
adc
vpmacsww
and
xor
pop
lret
popf
lock
pusha
ret
sub
sub
and
fistps
fdivrs
dec
jne
mov
jecxz
and
pusha
iret
xor
xor
push
ds
dec
and
jecxz
aas
pop
adc
xchg
dec
in
pop
cwtl
pop
dec
dec
lea
push
fcomps
dec
adc
or
push
mov
mov
nop
idivl
add
fistl
mov
pushf
mov
inc
fdivr
outsb
rcll
lahf
adc
dec
imul
daa
lds
in
repz
dec
mov
aas
clc
sbb
dec
jecxz
mov
ror
lods
and
lds
jbe
jbe
xor
or
subb
scas
les
push
xlat
daa
outsl
fwait
push
inc
inc
std
stos
data16
inc
clc
addb
fsubs
mov
dec
inc
push
rclb
mov
cmp
test
xor
mov
mov
xor
add
push
xorb
scas
mov
mov
imul
bound
in
test
jmp
aaa
pusha
dec
lods
cwtl
mov
sarb
add
std
scas
cmp
or
jle
addr16
sub
ljmp
push
cmp
adc
movsl
adc
jmp
sti
dec
rclb
mov
outsl
fnstenv
pop
leave
push
test
sub
rclb
sbb
mov
pop
fcomi
dec
in
clc
mov
or
add
cmp
add
sar
cld
test
cmp
repz
icebp
mov
mov
stos
shrb
aas
int
add
jne
adc
insl
test
fwait
movsb
cltd
mov
or
loopne
out
mov
inc
push
xchg
push
pop
arpl
movsl
cmpsl
jmp
or
push
leave
pop
cli
leave
arpl
jge
lods
adc
test
ffreep
ds
call
xor
inc
scas
jle
jb
faddl
push
ds
ror
cli
cld
loopne
int
mov
push
jl
fcoml
and
std
sbb
adc
adc
insb
pop
lods
or
adc
mov
and
rorb
out
mov
rcrb
adc
jecxz
mov
enter
ja
mov
xor
xchg
sbb
pop
mov
incl
test
sbb
xor
dec
pop
xchg
and
shl
inc
ds
cmp
mov
cmp
or
pushl
repz
cmp
fisttpll
mov
push
mov
bound
ds
sahf
inc
inc
jge
stc
loop
clc
sti
xor
inc
and
cmp
adc
pop
bnd
add
in
inc
jmp
xchg
jp
jecxz
test
add
or
pop
pop
movsb
inc
imul
push
and
inc
push
sti
scas
dec
call
ror
cmp
mov
in
xchg
lods
push
ret
pop
xlat
dec
lock
dec
and
cmc
fldt
or
or
pop
aam
lds
jl
das
jecxz
punpcklwd
sub
inc
push
dec
fnstsw
xor
dec
or
push
push
mov
test
aam
adc
or
mov
leave
adcb
cmpsl
in
insb
add
ficoml
xor
jecxz
xor
int3
mov
stos
mov
xor
iret
jnp
push
jne
bound
jo
and
dec
jne
mov
mov
out
jge
jge
lock
jecxz
jno
fwait
ss
enter
or
nop
dec
jl
insb
mov
mov
aaa
aam
mov
nop
sbb
fisubrs
inc
pusha
aam
shll
mov
ret
pop
sub
xor
pop
push
xor
fcoml
dec
sarb
xchg
out
loop
dec
fisttpll
xchg
and
cltd
dec
repnz
inc
jne
pop
addl
sub
ja
nop
call
cld
mov
jle
pop
inc
fcoml
cld
pusha
scas
cmpl
and
popf
lcall
adc
ds
mov
inc
fsubs
das
fnstsw
jo
imul
mulb
addl
aad
outsb
mov
popa
leave
sti
push
fldt
repz
sbb
mov
jnp
and
lahf
stc
sub
adc
cld
cmp
sbb
jns
jecxz
xor
inc
or
push
or
jno
pop
out
lock
xor
sar
ja
fbld
inc
lret
mov
jbe
int
inc
sub
adc
lahf
pop
pop
popf
enter
fdivr
xor
out
xor
out
test
sub
out
into
fdiv
push
loop
add
clc
pop
daa
insl
cltd
stc
inc
add
mov
xlat
inc
testl
cmpsl
arpl
mov
gs
rorl
neg
into
and
and
enter
mov
mov
xchg
xor
mulb
mov
sbb
shrl
cmp
mov
mov
test
or
push
cmp
mov
in
ret
inc
bound
dec
shlb
pop
pop
mov
rol
push
je
add
ss
lock
cmp
lock
testb
adc
jne
loope
sbb
loop
cmpsl
lds
push
push
mov
out
adc
shr
inc
test
cmpsb
jnp
mov
int3
push
mov
pop
fidivrl
popf
rcrl
and
popf
cwtl
test
scas
divb
les
shl
xchg
mov
dec
scas
in
fcomps
push
mov
cmp
outsb
or
xchg
jle
mov
sahf
scas
xchg
into
xor
out
pusha
pushf
inc
or
jbe
dec
jmp
cmp
adc
and
lea
mov
dec
sti
dec
insb
xchg
lcall
iret
or
jp
in
cltd
inc
cltd
xchg
adc
xor
addr16
dec
jle
shlb
popf
vmwrite
sarl
pushf
roll
enter
int3
insb
int3
rorb
sbb
push
mov
push
movsl
stc
xlat
dec
pop
daa
xchg
xchg
pop
ss
cmp
pop
and
stos
push
pop
test
adc
dec
les
scas
ret
pop
push
mov
jge
fldl2t
mov
inc
jg
or
ss
inc
pop
or
out
lock
jmp
aas
push
daa
orb
xchg
in
in
in
inc
sar
and
mov
mov
and
clc
push
sub
stos
outsl
in
lret
and
pop
test
jae
and
mov
lods
scas
rcll
or
mov
sbb
cs
mov
xchg
insl
cmp
push
call
mov
inc
cmp
xchg
je
stos
pop
fisubrs
iret
push
push
movsb
mov
nop
ds
sti
add
mov
mov
cld
xorl
push
mov
fcmovb
sbb
mov
rolb
lods
jno
popf
daa
cmp
popf
inc
and
hlt
cmp
insb
xor
xor
sbb
fmuls
data16
pop
xchg
adc
xor
pmulhw
mov
mov
push
or
mov
add
pop
adc
lret
inc
sbb
sbb
xchg
pop
jecxz
mov
jo
mov
inc
pop
jns
jnp
leave
push
mov
cld
sti
and
mov
inc
icebp
add
mov
cmp
orl
mov
out
mull
in
jb
fwait
xor
fwait
stos
rorl
jmp
dec
sub
dec
call
mov
pop
aam
mov
and
push
push
popf
clc
gs
stos
in
mov
insb
dec
vsqrtsd
arpl
shl
xchg
xor
adc
in
push
roll
imull
sbbb
adc
jle
and
in
push
outsl
test
sbb
in
mov
test
rclb
push
and
jno
mov
stos
mov
daa
inc
push
xchg
ret
lret
mov
insl
pop
cld
push
scas
sbb
test
xchg
fstl
imul
insb
pop
push
push
push
sbbb
lret
mov
or
cmp
stos
jg
sbb
stc
lock
in
pushl
dec
stos
insb
mov
sub
clc
push
clc
xor
lea
mov
mov
call
adc
xchg
dec
daa
mov
test
pop
out
popa
and
push
shll
outsb
or
imul
and
in
sahf
jae
dec
icebp
sti
mov
xchg
cmpsb
loopne
loopne
outsb
mov
div
xor
imul
inc
jmp
ficompl
mov
into
jb
out
pusha
mov
or
out
bound
xor
push
sbb
jecxz
sbb
or
sti
movsl
xchg
add
push
mov
sub
movsl
shlb
dec
dec
sub
sarl
lret
sbb
daa
cwtl
inc
mov
or
sti
lret
roll
xor
cmp
mov
mov
adc
cltd
sbb
fmulp
cmp
sbb
jp
shrb
std
pop
xor
movsb
rorb
pushf
add
mov
mov
push
sbb
int3
scas
mov
mov
cltd
js
jmp
ja
xchg
call
fs
aam
ret
and
adc
popf
aam
mov
daa
xor
xor
nop
rolb
int
sbb
inc
imul
cli
cmp
dec
out
add
scas
insb
in
cwtl
ret
loope
sub
inc
das
dec
push
fxch
ret
jg
in
lahf
cli
jl
jbe
les
dec
pop
ljmp
into
ss
cmp
sub
dec
xchg
jnp
loopne
jg
test
test
lods
mov
fistpll
mov
ficompl
jae
sub
and
sub
add
inc
dec
in
lds
fdivrl
sub
leave
mov
arpl
hlt
sbb
int3
scas
jns
imul
out
mov
icebp
push
divps
mov
out
push
sbb
out
shlb
clc
sub
jne
insb
iret
ljmp
outsl
lock
fcmovnb
inc
pop
mov
ja
aam
bound
fisttps
push
subb
inc
je
dec
dec
jle
jbe
xchg
inc
adc
mov
in
xor
pop
lds
popf
fs
je
pusha
push
loop
dec
inc
or
jmp
mov
int3
int
in
sub
dec
mov
movsb
pop
es
fildl
cmc
xchg
xorb
jecxz
sbbb
mov
dec
enter
cmpsl
int3
or
mov
dec
xchg
ret
cli
fnstcw
dec
jno
mov
and
test
adc
in
mov
pusha
cmp
lds
adc
loopne
or
or
xchg
dec
pop
push
add
mov
sub
jle
push
xlat
insl
jl
and
pop
in
loop
aaa
add
pop
js
push
add
repz
lahf
mov
sbb
testl
adc
fstp
icebp
xchg
mov
mov
ljmp
jae
pop
int3
nop
xor
mov
repnz
popf
lret
add
std
in
orl
sub
subl
aaa
push
dec
lahf
and
out
mov
dec
dec
cld
rorb
test
jle
xchg
inc
jbe
stos
push
cmp
push
insl
and
pop
sbb
fidivrs
sub
and
push
push
pop
sub
aas
cmp
pop
rcrl
dec
aaa
inc
cld
adc
ljmp
lahf
icebp
mov
pop
add
xchg
fmul
cmpl
popf
pusha
adc
cmp
clc
or
aad
or
cs
addr16
xchg
insl
sub
outsl
push
data16
mov
fstl
or
iret
mov
loope,pt
jecxz
or
lret
iret
xchg
xchg
sbb
inc
loopne
jno
lods
aas
rorl
mov
fwait
push
jnp
das
jne
hlt
jnp
mov
add
inc
idiv
mov
or
lock
push
aad
jg
and
sbb
out
jb
pop
mov
and
xchg
xchg
fidivl
inc
arpl
in
test
cmc
hlt
jns
mov
push
js
inc
divl
scas
mov
into
jle
push
loop
jl
gs
jb
pop
sbb
int
addr16
mov
in
jp
icebp
add
sbb
cld
cli
jo
loop
ffree
js
xorb
adc
add
stc
int
je
cmpsl
xor
dec
push
push
pop
pop
in
call
inc
mov
shlb
fsincos
ja
jge
adc
dec
mov
pop
nop
test
push
repz
cld
push
div
push
pop
sbb
inc
push
popa
bound
movsl
in
addr16
jg
data16
sarl
and
mov
cmpsl
imul
sbb
es
lds
mov
hlt
cmpl
sub
jne
popf
sbb
pop
sbb
push
outsl
jp
ss
pop
imul
orb
inc
fwait
out
push
pushf
sub
sbb
popf
and
and
fmull
adc
xchg
xchg
pop
mov
enter
xor
or
mov
outsl
movsl
add
std
pop
adc
push
imul
or
cmp
pop
jge
inc
movq
push
and
mov
out
shl
cmpsl
sbb
and
filds
push
cmp
mov
jbe
cmp
sbb
test
xor
sahf
nop
les
mov
ljmp
out
xor
leave
pop
inc
cmpsb
sahf
hlt
stos
ljmp
add
sbb
rclb
imul
and
push
jno
scas
xor
xor
jmp
pop
faddl
dec
ja
std
or
sahf
add
add
xor
or
xchg
loop
push
jne
stc
jnp
decl
sub
dec
ss
jp
insl
out
jl
mov
aad
pop
push
movsl
sbb
jle
mov
cmp
test
push
mov
sub
or
xchg
cld
cmpsb
test
and
sbb
movb
cmp
iret
shrb
leave
add
sub
rcrb
test
add
rcll
mov
xchg
movsl
inc
divl
out
loopne
arpl
push
jp
or
les
cmpl
inc
lahf
je
es
addr16
fwait
jbe
or
icebp
push
jno
pushl
insb
inc
cltd
out
inc
xchg
cmp
and
mov
xchg
xchg
xchg
roll
repnz
xor
in
test
mov
jg
or
in
lds
adc
gs
sub
bound
in
outsb
push
notb
xchg
fldt
wbinvd
pop
leave
mov
fiadds
xchg
lods
stc
push
mov
bnd
push
imul
push
adc
fiadds
lret
iret
and
adc
insl
mov
inc
cmp
repnz
cmpsb
out
jno
fsts
xor
sti
pop
xchg
and
jne
mov
ss
test
fnstsw
arpl
adc
cmp
paddw
in
inc
rcr
xor
or
popa
sbb
outsl
add
push
ret
loopne
mov
sub
enter
jno
gs
pop
shrb
mov
fists
pop
call
call
sti
ret
xchg
inc
xor
je
repz
xor
in
shlb
addb
aam
imul
add
fxtract
jno
sbb
xor
push
stos
push
loop
add
sub
in
test
push
push
push
pop
add
inc
cltd
je
sbb
or
push
rolb
push
loopne
push
sahf
outsl
ficompl
adc
sti
mov
fldt
fimuls
mov
aad
push
mov
lds
pop
mov
mov
sarb
add
in
sbb
jo
cltd
fnsave
jp
ret
hlt
mov
xlat
cmc
mov
inc
sub
arpl
sbb
mov
jo
cld
shl
jnp
rcll
in
cmp
outsl
movsb
sub
dec
cs
push
bound
mov
xchg
mov
sub
cmp
lods
push
mov
fldt
testb
pop
or
pushl
pop
test
pop
inc
rcrb
add
jmp
xor
clc
cltd
lcall
jle
ja
into
xor
test
aad
lods
inc
mov
arpl
jmp
jge
int
inc
scas
lock
push
cmp
or
insb
mov
imulb
sub
or
xlat
dec
push
cmp
xchg
push
gs
dec
scas
ss
cmc
out
push
in
js
dec
push
jge
daa
int
arpl
js
sbb
movd
repz
les
cmp
or
xchg
ljmp
mov
xchg
adc
mov
rcll
push
ret
pop
lods
sbb
cmpsb
mov
mov
subb
repz
es
or
mov
pop
add
xchg
xor
jbe
test
mov
mov
sub
stc
test
sbb
movsl
xor
xor
mov
lock
insb
bnd
mov
mov
jns
push
xor
jmp
int
mov
bound
lock
push
cli
movsb
push
js
inc
cmp
inc
cmp
adc
rclb
sub
mov
aam
adc
mov
mov
out
cmp
rclb
insb
pop
xchg
loopne
jne
add
adcb
insb
pop
sbb
movsl
std
mov
inc
and
stos
cmp
test
inc
adc
pusha
or
pop
xchg
fsubs
nop
fcoml
gs
fisttps
sbbb
mov
jmp
push
mov
pop
pop
inc
jne
int
in
and
ljmp
adc
ds
lea
test
add
pop
mov
jne
fldz
pusha
push
aam
pop
test
andb
xchg
sbb
mov
out
jmp
int3
sbb
inc
in
adc
call
movsb
xlat
test
push
ficompl
fadds
cltd
inc
stos
adc
and
ljmp
lret
xor
bound
shrb
and
ljmp
or
ds
or
out
iret
jp
mov
imul
mov
add
sti
sbb
push
data16
fldcw
push
leave
mov
push
mov
rorl
xchg
cmpb
ror
loope
clc
fwait
sahf
mov
mov
lret
fnstsw
jno
iret
lret
cmp
out
cli
arpl
cmc
xor
ss
lods
xchg
mov
mov
mov
lds
mov
cmc
insl
lcall
jae
out
lods
int3
test
inc
and
add
in
xchg
inc
test
push
fisttpll
fstpt
ret
xorl
negb
fdivl
ljmp
xchg
jmp
push
test
arpl
cmpsb
dec
inc
ss
hlt
stc
movsb
sub
jecxz
bndldx
mov
stc
dec
not
dec
dec
scas
dec
pop
icebp
out
pusha
outsb
clc
push
push
leave
roll
mov
and
cld
movsb
xchg
mov
jp
ljmp
cmpsb
popf
jne
out
loop
sbb
rcrl
outsl
add
arpl
rcl
out
shll
jmp
lock
inc
insl
xchg
nop
push
xchg
mov
add
stc
sahf
xor
sbb
test
mov
pop
push
notb
sub
jae
out
cmp
push
dec
xchg
mov
movsb
dec
adc
push
loop
mov
cmpsb
or
ret
lahf
dec
jecxz
pop
test
cs
mov
dec
test
outsb
inc
cmp
or
mov
fmuls
cmpsb
lock
mov
mov
lods
mov
push
ss
repnz
repz
adc
mov
mov
aam
push
mov
xchg
push
mov
pop
sub
mov
push
push
inc
sbb
outsb
testl
mov
call
pop
add
add
fsts
cmp
pop
jecxz
jl
mov
scas
lds
inc
fcoms
scas
cmpsl
dec
xor
shrl
sub
and
icebp
and
ja
sbb
repz
repz
int3
inc
repz
xor
or
mov
sbb
sbb
cmp
pop
xchg
lds
stc
pop
sbb
pop
gs
lret
mov
adc
out
sbb
in
lret
les
dec
jb
xor
sbb
push
mov
lds
inc
icebp
arpl
clc
cmp
xor
mov
int
adc
mov
scas
cmpsl
or
and
inc
scas
pop
test
mov
inc
enter
hlt
lock
test
pop
mov
out
jae
dec
insl
aam
lret
repz
clc
es
pop
adc
jno
arpl
je
mov
or
mov
jb
jmp
fcmovnu
mov
cltd
jecxz
pusha
movsl
pop
dec
popf
mov
jecxz
neg
out
pop
mov
or
or
jae
ret
xchg
lret
push
mov
pop
fs
sbb
sbb
int
xor
jle
nop
xor
dec
fsubrs
add
clc
cmp
pop
pop
lahf
or
sbb
mov
aad
cmp
push
ret
jge
clc
movsb
lcall
cmp
sbb
cmpsb
dec
ret
pushf
in
sbb
stc
je
lret
and
push
or
lret
mov
jne
icebp
inc
fisttpl
out
xchg
std
mov
cwtl
clc
pushf
aaa
stos
leave
sub
cltd
fisttpll
outsb
cli
xchg
sahf
addr16
pop
filds
jmp
int
arpl
call
out
mov
mov
mov
arpl
js
outsb
popa
imul
mov
mov
xor
mov
out
push
in
xchg
and
fdivrs
push
clc
out
add
mov
sub
mov
je
add
push
cmpsb
in
jge
and
sub
mov
ss
inc
mov
out
insl
lret
or
into
and
pop
popf
repz
cs
jl
out
shlb
xchg
idiv
popa
adc
cmp
sti
movsb
loop
inc
test
pop
fdivrl
jl
add
push
or
iret
and
sbbl
nop
add
fimuls
xchg
pop
xor
gs
out
mull
fsts
inc
or
ds
or
sti
test
fadds
mov
stc
cld
bound
dec
aas
mov
mov
sub
xchg
jnp
das
sbb
sbb
ljmp
push
jno
push
xchg
inc
fwait
push
addr16
orl
mov
dec
incl
xor
mov
push
ljmp
mov
outsb
push
or
cmpsl
aaa
in
iret
jno
insb
pushf
shl
jno
push
loope
addl
cmp
andl
xchg
adc
aad
xchg
sbb
add
test
js
lea
xor
add
mov
js
lea
xor
lods
aad
adc
cli
xchg
push
outsl
ret
add
dec
out
lcall
std
jno
mov
inc
hlt
addl
push
fsts
mov
sti
iret
shlb
or
ficoms
add
jmp
mov
arpl
cs
lahf
cmp
dec
das
or
repz
mov
stos
pusha
cmp
dec
mov
pop
adc
or
xchg
mov
pop
enter
push
movsl
pop
test
xchg
fidivrl
roll
inc
stos
fiaddl
dec
cs
add
sub
lcall
popa
cli
sti
mov
mov
pop
inc
cmpsl
xlat
scas
inc
mov
cmp
popf
xchg
ljmp
mov
sub
mov
out
test
push
and
aad
inc
fsub
push
loopne
rcr
frstor
in
mov
cltd
jge
int3
sahf
and
mov
add
xchg
insl
loope
mov
dec
retw
mov
sub
cmp
or
ja
cmp
xor
in
outsl
push
push
loope
std
sub
std
ja
cmpsb
and
lea
push
loopne
sbb
mov
hlt
mov
repz
pop
cmp
pop
addl
xor
in
inc
mov
ss
insb
repnz
cmpsb
mov
or
push
andb
pop
cs
dec
aaa
adc
ss
jle
call
cmp
inc
cltd
fcomi
les
lea
jbe
shll
shrb
sbb
insl
fnstcw
adc
jne
in
lods
jne
fsubl
stc
das
push
mov
ljmp
add
mov
mov
push
mov
loopne
inc
pop
fisubrl
movsl
mov
jle
loopne
fbstp
push
xchg
lods
inc
hlt
jb
hlt
dec
ret
rcrl
sub
les
mov
mov
faddp
cli
fsts
sbb
cmpsb
cmc
sarl
xor
leave
inc
mov
mov
add
mov
sub
adc
sbb
xchg
jne
pusha
add
pop
push
ffree
push
daa
jbe
lret
rorl
rorb
enter
cltd
out
icebp
adcb
pop
fwait
mov
xchg
rol
stos
cli
dec
inc
icebp
scas
adc
int3
and
inc
and
push
mov
sub
repnz
push
and
flds
fsubrp
adc
cmc
and
inc
jnp
pop
jle
cmc
sub
test
cmp
or
je
in
pushf
ret
rcrb
push
sub
sbb
mov
push
into
fistps
aad
jbe
and
fsubrl
ds
jl
mov
jp
call
fldt
cmp
jne
fdivrl
and
push
xchg
data16
adc
adc
adc
jmp
push
add
mov
std
out
dec
and
mov
pop
loopne
pop
jb
add
mov
dec
sbb
shrl
cltd
pop
or
push
mov
aaa
push
ljmp
push
pop
add
mov
sub
or
jnp
gs
pop
into
jo
cmp
out
jge
in
mov
rcll
stos
jno
or
lock
mov
xchg
arpl
pop
jg
jmp
and
and
loop
ds
pop
add
aaa
mov
sbb
push
sub
fnsetpm(287
nop
mov
inc
cmp
into
lock
mov
push
cmp
mov
mov
jnp
push
push
and
xor
out
inc
fistl
mov
dec
xchg
outsb
sub
cli
into
pop
aam
cwtl
leave
push
cmpps
bound
loope
aam
das
mov
in
xor
std
xchg
lret
movsl
aas
cltd
push
out
icebp
push
lahf
pop
iret
sbb
mov
imul
push
dec
shlb
or
xchg
jbe
jnp
jmp
and
pop
mov
cli
scas
ss
inc
inc
mov
loop
insl
dec
cmp
rorl
test
scas
roll
inc
sarl
mov
pop
movsb
mov
lods
lret
cld
mov
sbb
ficompl
movsl
xor
inc
sbb
scas
loope
lahf
fs
push
or
fdivs
dec
push
ret
mov
ja
lahf
and
jnp
adc
mov
adc
cmc
aaa
sti
fsts
into
pop
jnp
scas
movsb
mov
inc
div
jne
imul
add
cmp
inc
pop
bound
push
xchg
das
movsl
sbb
adc
movsb
cwtl
scas
stos
jno
cmp
lods
jb
and
sbb
mov
adc
jnp
pop
xchg
xchg
mov
add
shl
and
adc
insb
outsl
mov
jb
aad
add
mov
test
and
aad
fs
pop
cmp
jle
jns
das
mov
adc
mov
dec
push
lods
xor
adc
sub
ja
scas
add
clc
pop
imul
sahf
pop
stc
xor
pop
in
aas
test
and
or
cmpsb
mov
cmp
xchg
mov
inc
pop
or
sbb
push
stc
sbb
jnp
scas
jle
or
hlt
dec
repnz
jns
fldt
movsb
int
lahf
dec
out
or
sbb
cmc
out
mov
lock
enter
xor
lds
pop
and
add
repnz
iret
or
mov
xchg
and
sahf
je
nop
sbb
and
mov
std
cmpsl
push
shl
xor
mov
add
sub
and
hlt
adc
in
and
leave
nop
repnz
jnp
xlat
adcb
mov
dec
rcr
pop
inc
lock
cs
nop
mov
test
sti
mov
das
imul
insb
ret
push
and
and
dec
mov
lret
out
xor
ror
push
cli
or
stc
lds
cmpsb
mov
cwtl
dec
loopne
fldcw
imul
and
jnp
xchg
outsl
addb
xlat
mov
mov
dec
add
js
jno
add
lds
mov
jno
pop
out
pop
pushf
pop
sti
in
test
sub
add
out
stos
mov
lea
adc
and
adc
jbe
jge
adc
out
das
jmp
sbb
cmpsb
mov
or
ljmp
jae
cmpsl
out
imul
shr
out
mov
insb
loopne
xor
push
sti
or
xchg
pop
std
mov
icebp
xor
bound
or
xchg
daa
mov
mov
mov
adc
fimuls
fbstp
xor
pusha
test
out
jmp
inc
rclb
cld
pop
je
cmp
jp
movsl
negl
push
inc
ja
jns
xchg
mov
xchg
mov
scas
mov
cmp
sahf
out
or
add
out
mov
cmp
stos
fs
clts
int
fnsave
testb
mov
fdivrs
lea
pushf
lods
cmp
add
test
nop
sahf
mov
out
inc
xor
adc
leave
jb
packsswb
hlt
add
dec
adc
int3
jle
ss
mov
clc
lea
ret
in
ret
outsl
lock
arpl
xchg
mov
push
pop
addr16
test
in
add
mov
sub
fcompp
rorb
int3
sub
loop
fnstenv
adc
dec
mov
fs
pop
xchg
ds
out
outsl
cmp
dec
push
mov
movsl
iret
cmp
js
sub
sbb
mov
xor
orb
mov
sbb
test
dec
dec
dec
xchg
insl
nop
jo
adc
ljmp
cmpsl
pop
or
push
xor
sbb
xchg
ret
or
cmp
pop
es
bt
movsb
sub
push
sbb
dec
push
fisubl
popa
test
notl
fiaddl
mov
and
dec
pop
daa
and
jl
inc
dec
inc
mov
hlt
out
outsl
mov
xchg
idivb
lret
fisubrl
pop
sbb
in
adc
mov
into
iret
cmp
push
in
stos
inc
sbb
test
push
in
mov
add
or
popf
mov
xchg
or
add
daa
xchg
xor
push
sub
push
push
or
decl
rorl
xchg
insl
mov
divl
push
pop
lret
fildll
mov
addr16
pop
mov
lods
int3
ret
push
test
dec
xchg
jle
mov
pop
fldenv
outsb
in
daa
hlt
push
movsl
shll
xchg
xlat
push
insb
pop
xor
mov
roll
xchg
adc
pop
js
mov
mov
lea
xor
xchg
gs
xor
xor
add
rclb
dec
ja
inc
push
mov
push
sbb
imul
pop
push
rcrb
loop
enter
sarb
add
adc
popa
mov
cmp
push
rcrb
roll
mov
push
sbb
fidivs
or
xchg
mov
inc
fiaddl
jmp
and
and
in
fnstsw
xchg
jbe
addl
repnz
sbbl
clc
fists
xchg
fisttps
push
sub
lahf
pop
movsb
jp
data16
test
cmp
bound
movsb
fstpt
loopne
adcl
not
xchg
jnp
inc
push
das
cmp
sbb
movsl
pop
movsl
and
insl
push
repnz
xor
lret
out
dec
mov
or
jge
mov
or
lock
mov
xlat
iret
scas
xchg
adc
loopne
lret
mov
mov
sarb
pop
dec
adc
outsl
cwtl
xor
jle
out
iret
rolb
xor
jnp
xchg
testb
add
scas
popl
clc
aaa
sbb
jae
dec
inc
mov
mov
test
lods
pop
hlt
cmc
js
rol
or
sub
dec
push
inc
aas
push
das
fstp
out
pop
pop
xor
dec
pop
lea
inc
stc
mov
jle
jae
fs
mov
movsb
sbb
icebp
mov
cmp
cld
adc
add
out
insl
aad
cmp
nop
repz
dec
inc
icebp
lahf
jge
in
data16
pop
mov
push
out
repz
cmpl
cmc
mov
xor
sbb
mov
test
mov
cmpsb
jg
shll
aad
mov
divb
rolb
std
jl
push
pop
add
fstpl
add
sub
imul
jl
inc
sbb
mov
push
inc
cs
shll
mov
incl
lahf
or
jle
addb
int
and
and
jp
xor
or
inc
neg
inc
or
pop
cwtl
mov
mov
jbe
adc
push
cmp
xchg
xlat
cltd
and
rcrl
and
scas
xlat
stos
mov
scas
rcrl
push
mov
sub
movsl
add
fistl
adc
iret
and
aaa
icebp
out
xor
cmp
ljmp
idivl
outsb
cmp
bound
test
jo
adc
push
and
in
push
mov
jp
pop
pop
out
cmpl
ljmp
mov
mov
inc
sbb
mov
aad
xchg
mov
adc
mov
sbb
das
pop
push
outsb
xchg
pop
jmp
inc
ss
dec
insl
sbb
stos
outsl
fdivs
sahf
mov
pusha
in
addr16
add
xor
sbb
dec
insb
stos
int
lods
inc
lods
push
xchg
sub
rol
movsb
cmp
in
aas
stc
stos
in
pop
les
addb
xor
cli
pop
mov
jle
cmp
add
loop
sbb
xchg
mov
lahf
and
mov
and
cmpsb
push
sti
sub
or
xchg
push
imul
daa
adc
movsl
mov
push
or
xorb
xchg
in
push
mov
test
shll
insb
mov
add
fidivs
sbb
or
test
int3
fcmovnb
imul
sub
aad
inc
sub
sahf
lret
mov
dec
cmp
or
xchg
inc
mov
sbb
cmp
popf
ret
mov
es
lahf
sarl
ss
xor
pushl
addr16
add
adc
insb
test
sub
call
outsb
mov
popa
cli
push
pop
or
mov
cmp
or
xchg
test
pop
inc
xor
jae
dec
dec
inc
jl
push
out
ret
lahf
push
add
jb
subl
fistpll
nop
aad
mov
je
insl
stc
aaa
jns
xor
sahf
and
jmp
mov
pop
shrl
sahf
cmp
xor
cmp
sub
cmp
fsub
push
sbb
test
cmc
add
mov
mov
adc
adc
lahf
in
outsl
das
nop
stos
stc
nop
adc
fucomip
outsb
adc
jecxz
fwait
dec
les
jmp
sti
jnp
int3
dec
and
jl
jg
mov
or
mov
push
and
popf
pusha
ficoml
cli
hlt
fcomps
inc
pop
mov
out
out
mov
xor
lock
xlat
adc
enter
out
push
pop
dec
stc
or
dec
fistpl
loope
sbb
flds
loopne
mov
sub
rcrl
pop
outsl
pop
mov
shl
repz
int
cmp
push
nop
pop
dec
sti
int3
hlt
inc
test
adc
ja
test
es
mov
in
call
imul
outsb
pushl
lcall
and
xor
lods
pop
mov
leave
and
int3
cmpsl
lcall
or
test
adc
idivl
js
fstpl
arpl
pushf
mov
pop
pop
je
xor
cmp
xchg
or
cs
dec
mov
subl
enter
stos
repnz
movsl
fcmovbe
lea
inc
repz
mov
add
bound
mov
xor
xchg
test
outsl
push
sbb
add
xchg
dec
stos
movsl
fcompl
mov
and
push
fs
pop
les
cmp
je
adc
nop
sbbb
das
imul
imul
call
adcb
out
or
push
sub
push
mov
pop
aas
push
inc
mov
rclb
and
icebp
pop
aaa
or
push
mov
push
mov
jo
jecxz
xchg
ret
jle
movb
jl
mov
enter
push
fs
data16
jnp
push
dec
jnp
mov
aas
gs
mov
loop
gs
ss
or
icebp
xchg
fdivl
xchg
test
ja
ds
push
fdivl
test
mov
xor
xchg
push
ret
xlat
xchg
cmpsb
sub
xlat
out
xor
cmp
jnp
fiadds
mov
pop
mov
pop
lret
xchg
cmp
rcll
das
adc
pop
lea
sarb
dec
mov
test
lock
sbb
pop
imull
push
inc
imul
cmp
xchg
les
pop
cli
ja
xchg
data16
out
out
and
mov
cld
inc
pop
jl
xor
cmp
xchg
mov
test
movb
mov
mov
dec
push
shll
add
xchg
imul
jp
addb
inc
jp
jge
out
xor
int3
hlt
push
dec
rcr
aam
lcall
lods
sbb
in
pop
jo
add
repnz
pusha
es
out
aaa
out
mov
ja
adc
mov
jb
cmc
dec
mov
jno
sti
movsb
in
outsb
push
sbb
or
fwait
inc
aad
xchg
sub
mov
inc
or
mov
mov
loope
lret
xchg
sbb
ds
aad
inc
dec
push
imul
stc
or
jae
mov
fiadds
daa
sahf
aas
sbb
or
lcall
iret
xor
jns
adc
dec
mov
xor
push
jae
cmp
mov
insb
mov
or
cmc
popa
cwtl
xor
push
mov
jmp
inc
out
lcall
push
xor
or
jmp
dec
mov
mov
push
testb
jp
and
ja
sti
jns
sti
push
and
cwtl
mov
xlat
sbb
adc
inc
mov
lea
bnd
test
dec
add
lahf
dec
jle
jge
imul
outsl
adc
jbe
enter
and
mov
push
stos
rorb
jns
adc
jne
sub
xor
es
mov
lock
and
xor
xor
sbb
mov
cwtl
int3
push
and
das
push
mov
stc
sub
aam
or
sahf
lods
neg
adc
lods
fstl
sbb
pop
push
or
adc
fcomps
shrb
jb
ja
sbb
pop
or
fdivrl
xchg
sub
pop
sub
punpckhbw
mov
pop
scas
sub
aas
dec
or
add
fbstp
xchg
pop
dec
cmp
or
cmp
push
sub
push
icebp
or
and
popf
scas
cltd
arpl
sub
ja
xchg
jnp
iret
inc
pusha
ret
orb
mov
push
mov
push
lock
fcmovne
pop
loopne
sub
mov
mov
das
jl
lock
pop
sub
push
pop
js
push
movsb
sub
and
clc
mov
test
cli
fadds
jbe
sti
xor
mov
xor
push
mov
aam
js
mov
xchg
repz
add
mov
adc
icebp
jl
jo
mov
lea
cmp
mov
insb
lret
repnz
sbb
cmpsb
push
push
orl
pop
aaa
or
fsubs
add
scas
dec
arpl
adc
fwait
fs
loopne
aaa
enter
iret
aaa
add
hlt
or
push
es
enter
add
or
cmc
pusha
data16
rcll
add
sub
ret
aas
les
cli
loopne
xchg
es
xor
lea
mov
xchg
jle
daa
std
jo
sub
rcrb
dec
push
mov
pop
inc
and
out
sub
jle
adcl
cli
mov
mov
pop
leave
addr16
and
orl
push
sbb
insl
jo
adc
push
es
push
mov
shlb
mov
sti
popa
push
mov
and
daa
je
or
xor
xor
add
and
dec
icebp
popf
xchg
inc
js
mov
push
ret
pusha
dec
jge
loope
inc
das
mov
js
fdivs
cmp
xor
add
hlt
shlb
js
or
add
mov
mov
test
push
mov
push
inc
cmp
push
sbb
out
jmp
sbb
or
jb
xchg
sub
xor
mov
push
cmc
mov
mov
jo
sub
pop
mov
lock
sub
mov
dec
lret
shrb
and
ljmp
lock
ja,pt
jge
or
movsl
sbb
cmpsb
mov
ret
fsubs
add
cmp
outsl
int
sub
and
and
mov
ret
inc
jns
popf
stc
xchg
xor
loopne
inc
mov
mov
pop
repnz
push
push
inc
jmp
test
stos
lea
pop
pusha
mov
xchg
cmp
lahf
adc
bound
test
xchg
popa
out
cmpl
cmpsl
aam
and
dec
cmc
loopne
popf
hlt
je
mov
mov
addr16
popa
arpl
jl
jp
fs
movsl
mov
sbb
sub
sbb
fwait
sub
push
lods
xor
insb
cltd
xor
dec
xlat
into
shll
in
jb
push
into
xchg
pop
pop
and
mov
sti
and
pushf
out
sub
sahf
jbe
mov
pop
xchg
and
cmp
adc
inc
jecxz
jbe
es
mov
pushf
lcall
mulb
add
mov
in
jbe
mov
enter
aam
cld
addr16
lcall
aam
jns
out
cwtl
daa
test
ds
inc
jbe
sarl
daa
inc
xchg
sbb
sbb
mov
pushw
fldl2t
int3
bound
std
xchg
mov
pop
imul
ficomps
lods
hlt
pop
movsl
gs
jae
incb
cmc
aam
jg
push
push
add
or
repz
lods
out
repz
adc
sti
mov
mov
mov
push
scas
insb
pop
into
mov
data16
pop
mov
xchg
jmp
std
pop
xchg
pop
cmp
fisubl
xor
add
or
dec
mov
loop
or
test
enter
jmp
sti
shl
push
mov
and
cwtl
stos
dec
lds
not
sub
test
add
scas
or
nop
dec
call
popf
cmc
nop
mov
inc
jb
adc
pop
cld
dec
out
xlat
cmp
or
sub
cmp
outsb
in
lods
xor
cmp
xlat
dec
mov
out
or
cmp
popf
fcomi
pop
out
add
stc
jecxz
loop
arpl
inc
into
xchg
cmp
xor
or
mov
cmp
loop
pop
dec
rcll
stos
hlt
push
mov
dec
xor
pop
jmp
push
cmpsl
je
sbb
pop
push
outsl
fs
in
dec
mov
mov
xor
mov
and
mov
mov
mov
dec
hlt
add
imul
stc
popa
lret
or
or
bound
xchg
inc
fstps
cmc
push
push
shll
into
lcall
lods
jmp
and
mov
mov
in
loop
and
sub
lcall
int
hlt
mov
mov
push
cmp
fidivrs
loop
jmp
jo
jmp
push
adc
sub
mov
xchg
mov
mov
push
cmp
scas
ja
pop
or
movsb
test
outsl
adcb
nop
pop
loopne
push
jne
push
jge
movsb
inc
inc
cld
jg
mov
xchg
decb
cmp
mov
jae
lcall
jo
fisubl
add
aaa
jge
pusha
mov
std
lret
inc
xor
xor
divl
jle
push
adc
outsb
or
pusha
cmp
fwait
ja
imul
clc
mov
push
mov
imul
movsl
mov
gs
ljmp
fucomp
cld
sub
bound
dec
pusha
or
xlat
dec
inc
bound
insb
fisttpll
leave
daa
nop
jns
jnp
mov
push
loop
pushf
mov
loop
lret
subb
loopne
mov
loop
je
aas
mov
xchg
dec
xor
mov
push
sub
stc
inc
subl
add
leave
dec
cld
sahf
aad
int3
or
fildl
icebp
test
ja
mov
lcall
cmp
jns
sub
sbb
xchg
xor
js
js
stos
jl
mov
or
sbb
movsl
and
ss
cs
push
call
jg
lret
cmp
add
add
stos
jg,pt
push
arpl
mov
jp
lahf
dec
mov
lock
and
stos
stos
add
push
xor
aas
sbb
aad
push
and
out
dec
fcomp
test
xchg
cltd
ret
xchg
jl
sub
mov
jbe
cs
push
mov
cld
inc
loopne
hlt
xchg
aas
rolb
mov
adc
xor
mov
sbb
lods
jp
mov
xchg
xchg
sbb
cmpsl
xor
adc
into
divl
mov
in
mov
push
pop
in
mov
ds
or
pop
push
int3
push
dec
movsl
jl
mov
loopne
loope
inc
lock
rcrl
push
repnz
sti
lods
fcoml
enter
add
jne
cmpsb
push
mov
mov
xchg
fidivrl
dec
xchg
loop
mov
leave
hlt
in
test
inc
scas
and
push
xchg
test
jae
push
stc
cmp
push
sbb
repz
inc
or
test
or
out
xchg
imul
cmpsl
adc
aas
test
adc
and
pop
fimuls
add
cltd
addr16
pop
and
push
ss
add
push
and
inc
mov
psadbw
fnsave
inc
data16
adc
jae
out
std
fnstenv
cmc
mov
mov
int
lcall
jmp
mov
idiv
jg
repnz
push
mov
cmp
xchg
cmc
sbb
or
insl
sbb
adc
mov
cmp
int3
in
test
into
subl
es
lds
repz
dec
adc
aas
add
sbb
imul
mov
mov
xchg
mov
andb
pop
inc
inc
xor
pop
sbb
add
mov
sub
es
inc
aaa
dec
cmpl
adc
les
add
out
sub
cmp
mov
jns
addl
sub
or
std
push
imul
pop
ss
pop
cmp
lock
cs
sub
push
jmp
imul
rorb
mov
pop
mov
xor
push
mov
pop
or
dec
pusha
sbb
push
adc
aas
cli
loopne
repnz
and
xor
or
aam
and
hlt
add
movsl
lods
push
dec
shll
mov
movsb
or
clc
aad
jmp
test
jae
imull
xchg
mov
imul
push
inc
add
xor
test
mov
adc
cmp
cmpsb
xchg
mov
sub
add
xchg
inc
pop
es
mov
aas
mov
cmp
addr16
push
cmp
push
lock
xor
mov
cli
stos
cld
push
pop
xchg
pushf
xchg
push
push
cmp
sub
and
fbstp
push
in
int
outsb
inc
cmpsl
lock
aas
int3
inc
pop
pop
mov
add
test
lahf
fbld
scas
xchg
ret
clc
mov
pop
iret
inc
mov
mov
push
jmp
push
rol
and
and
push
sub
and
xor
pop
mov
mov
dec
jecxz
cs
sbb
xchg
add
push
cwtl
fnstcw
shrl
cmc
jno
jecxz
aam
dec
mov
push
sub
cmpsl
out
sbbl
fcmovnb
pop
sti
fsts
fincstp
imul
pop
mov
inc
mov
insl
jo
xchg
int3
inc
lea
dec
lret
ret
dec
call
in
shlb
cmpsl
xor
pop
testb
sbb
mov
and
push
enter
fcomp
and
into
mov
add
adc
mov
das
mov
cmp
std
xchg
ret
xlat
out
sahf
or
hlt
clc
and
mov
orb
fiadds
cmpsb
mov
decl
jle
jae
mov
lds
jbe
in
test
sub
push
push
inc
and
inc
inc
cs
xor
mov
pop
cmp
mov
mov
nop
notl
jne
mov
insl
mov
ds
mov
ret
mov
in
fists
mov
inc
faddl
jae
and
ds
fcoml
pop
repnz
sarl
add
mov
dec
jecxz
adc
ficompl
rorb
pusha
imul
lret
mov
adc
movl
ffree
in
jne
mov
inc
xchg
add
shrb
cmpsb
lds
pop
jmp
cmpsl
mov
jle
push
sbb
mov
push
cmc
mov
jbe
in
addb
xchg
mov
jmp
sbb
out
popa
dec
shlb
gs
adc
scas
std
pop
clc
sub
xor
ljmp
jne,pt
repnz
popw
mov
jp
jne
jle
mov
loopne
and
es
xchg
into
fmul
xchg
cli
inc
cmp
test
addb
call
inc
fcoms
adc
pop
test
dec
jge
sbb
xchg
sahf
gs
fists
gs
stos
xlat
xchg
push
lods
jb
jo
push
sbb
jno
pushf
loope
js
jg
pop
ret
or
jb
idivl
dec
divl
dec
xchg
daa
movsl
pop
mov
fisubrl
fwait
inc
jo
add
dec
jg
cld
adc
lret
add
sbb
out
add
mov
notb
test
mov
psubw
imul
adc
jae
arpl
mov
push
jo
push
movsl
push
out
cld
ret
test
and
cld
lcall
sbb
or
jne
repz
es
dec
aam
push
lcall
dec
lcall
pop
icebp
mov
dec
out
cmc
or
repz
mov
mov
sub
loop
es
cs
xchg
jno
test
test
cld
out
fs
add
jecxz
add
inc
fildll
mov
fcom
stos
or
push
xchg
fcompl
cli
inc
lds
mov
repz
into
sub
dec
mov
or
mov
jge
push
xchg
mov
cmpsb
pop
mov
adc
or
cmp
sbb
push
sahf
or
dec
popa
daa
mov
xchg
jne
cmp
shrb
repz
nop
popa
js
testl
loope
cmp
push
cmpsl
push
lea
into
pop
xor
lcall
or
int3
rorb
adc
cmovne
ss
fs
lods
sub
jo
cmc
xchg
shrb
mov
pop
jle
lea
in
icebp
xchg
dec
push
out
and
out
mov
pop
cmp
pop
mov
inc
cmp
outsl
aam
aaa
jne
pop
add
mov
pop
loope
mov
std
push
test
inc
loop
pop
mov
mov
leave
js
xlat
imul
xor
and
sub
fchs
mov
jge
dec
into
dec
cmpl
ret
mov
jmp
xor
pop
pop
ret
icebp
push
lahf
sub
sti
jne
push
xor
push
mov
jmp
pop
jge
cmpsb
push
cmpsl
push
leave
or
xchg
rcl
sbb
sub
cmp
loopne
mov
inc
pop
pop
xor
rcll
mov
mov
push
pusha
rorb
jp
lds
pop
sub
lret
insb
sub
filds
enter
mov
xchg
xor
mov
into
jnp
jbe
and
and
or
jae
push
movsl
sbb
or
pop
pop
sahf
subl
arpl
sbb
dec
jb
dec
pop
jecxz
imul
adc
or
fimuls
add
das
daa
popa
adcb
or
fistl
xchg
inc
stos
loope
mov
pop
xchg
les
xchg
sbb
mov
xor
lret
aad
or
adc
adc
add
test
lret
add
sub
and
cmpsl
ljmp
lahf
sahf
je
stos
gs
shrl
in
mov
lock
sarl
inc
jp
int
mov
sti
dec
dec
inc
mulb
adcb
fidivl
lds
ljmp
stos
push
and
cmc
sbbl
daa
sub
out
int
pop
out
push
xor
insl
add
call
inc
and
xchg
mov
jmp
mov
xor
test
clc
test
and
add
cmpsl
inc
arpl
and
das
or
add
les
aam
cltd
in
xchg
popa
ds
test
sbb
cmp
stos
int
jne
fstps
sbb
add
movsl
add
aad
mov
adc
xchg
lea
daa
sahf
push
dec
or
jg
inc
in
pop
lret
mov
or
movsb
cli
je
ret
int3
outsl
jbe
fisubrs
rcrl
dec
daa
imul
mov
shlb
jbe
ds
test
push
inc
sbb
sub
in
adc
loopne
in
stc
push
imul
cmp
ret
xchg
add
aaa
dec
test
dec
adc
scas
lock
les
add
dec
mov
sbb
popa
test
or
fistl
out
inc
not
sbb
loope
insl
sbb
xchg
rolb
inc
jecxz
data16
ret
adc
sub
xchg
hlt
rorl
adc
shll
rcrl
imul
mov
sbb
fists
inc
pop
push
lods
push
sub
icebp
cmp
loope
pop
jno
subb
cmp
lods
ret
pop
cmpsl
daa
inc
pop
bound
in
mov
aam
stos
adc
fsubs
cli
mov
push
outsl
popa
out
inc
lock
ret
negb
dec
or
mov
or
jl
sbb
jl
xchg
ljmp
ss
enter
out
add
push
dec
iret
out
jle
push
cmp
jmp
push
mov
out
jb
popf
xor
insb
mov
adc
rcl
jmp
jae
movsb
aam
xor
rolb
imul
ret
mov
mov
arpl
fisttpl
sbb
sahf
leave
mov
fbstp
pop
jnp
fst
insb
xlat
lcall
cmp
stos
nopl
js
scas
cmp
mov
adcb
xor
adc
dec
pop
rcl
xchg
adc
popf
mov
mov
mov
das
sub
pop
test
lahf
jle
jns
xchg
adc
adc
notb
cmpsl
mov
mov
cmpb
out
movsb
sbb
aad
mov
jl
mov
popf
rcrb
add
imul
lods
lods
xor
iret
jge
inc
stos
sbb
inc
and
outsl
out
mov
sub
pop
aam
inc
xlat
pop
cmp
xchg
fsubs
iret
mov
stos
xchg
lahf
push
jne
hlt
imul
mov
cltd
repnz
dec
fwait
or
bound
mov
push
cmp
xor
push
lock
pop
scas
rcrb
lds
and
sti
js
mov
incb
aam
adc
mov
insl
aad
jne
sbb
in
xchg
sbb
or
pop
pop
xor
xchg
addr16
mov
sbb
inc
mov
lret
mov
xchg
xor
arpl
shlb
sbb
jecxz
xchg
cmp
jne
lock
jp
mov
and
loop
lods
mov
pop
notb
scas
es
inc
in
inc
cmp
mov
or
mov
dec
loope
mov
insl
mov
imul
faddl
dec
and
adc
sbb
push
pop
dec
dec
imul
insb
mov
pop
jnp
repnz
loopne
aaa
arpl
jp
fcomps
xchg
cli
mov
xchg
push
seta
leave
xor
jo
aas
adc
pop
bound
roll
notl
scas
bound
icebp
cmp
aam
rorl
cwtl
fstpt
sub
test
ret
test
fdivs
sti
mov
out
int
cmp
stos
shrl
or
inc
std
imul
and
inc
out
movsl
pop
mov
adc
fistpll
repnz
not
pop
push
addb
std
or
out
out
loopne
insb
xchg
ljmp
push
lahf
addb
lds
add
push
aam
inc
pusha
in
push
add
dec
xor
pop
adc
loop
push
cs
or
jae
cmp
adc
hlt
cmp
popa
cmc
push
test
lods
ds
andl
xchg
pop
sub
push
ljmp
orl
sti
stos
inc
mov
stc
add
lock
push
aad
mov
xchg
cmp
out
jbe
outsb
sub
adc
shrb
adc
movsl
das
cli
fwait
mov
cld
sbb
lahf
das
sarl
inc
mov
mov
inc
addb
adc
aas
sub
jl
xchg
testl
loop
idivb
stc
mov
pusha
les
repz
mov
shl
push
adc
pop
in
xor
fstpt
icebp
mov
add
jo
rorb
ret
lret
add
dec
add
sbb
iret
or
push
mov
sbb
sahf
xchg
and
fs
mov
test
cmpsl
out
pop
add
cmpsl
xor
pusha
inc
fldenv
out
xchg
xor
shlb
std
mov
push
jo
cli
mov
pop
add
sub
outsb
dec
mov
mov
inc
test
dec
clc
push
sbb
xor
pushf
shrb
push
mov
mov
mov
sub
in
and
dec
mov
push
jmp
cmp
jmp
sbb
mov
pop
mov
sub
lcall
push
inc
adc
mov
dec
mov
adc
add
loope
popa
lock
sub
add
bound
cmp
into
push
jb
add
pop
sarl
mov
pop
out
cmp
mov
or
popf
mov
adc
mov
cld
cmp
push
cs
xchg
shr
pop
sub
scas
mov
pop
inc
xchg
jb
outsb
bound
adcl
xor
loopne
inc
arpl
ret
sub
xlat
lods
xor
pop
cmc
pop
pop
jge
cli
out
outsl
inc
xor
dec
xor
shrl
adcl
inc
repz
jecxz
push
jae
imul
jo
cmp
jno
push
inc
jae
xor
xchg
outsl
pop
dec
mov
in
fistpll
sbb
cmp
sbb
loopne
aas
dec
dec
hlt
fstpt
mov
repz
jg
mov
int3
fwait
jl
xchg
cmp
cmp
dec
shrb
in
inc
xchg
sbb
pop
insl
fdivrs
cli
inc
sbb
fwait
dec
jno
or
cs
aam
ret
cli
test
sahf
jno
mov
cmpsl
clc
adc
lret
adc
inc
dec
ret
insl
xchg
test
out
cltd
insb
lret
push
cld
add
dec
lds
push
fsubrp
jmp
adc
ljmp
and
daa
ret
jge
stos
negl
push
mov
filds
shlb
xor
mov
lret
rolb
dec
xor
and
pop
nop
xchg
ljmp
call
mov
sub
add
popf
xchg
jne
push
mov
pushf
movsl
add
aas
test
sub
fwait
sub
adc
sub
stc
imul
adc
shrl
rcr
mov
jnp
mov
jge
dec
push
xor
mov
stc
fcmovnb
shl
mov
mov
mov
sahf
js
or
dec
add
lea
cmpsl
lods
gs
fbstp
cltd
cmp
adc
dec
lret
add
sbb
mov
fsubl
lahf
iret
mov
call
clc
inc
push
dec
mov
pop
aam
popa
test
sub
inc
inc
add
jbe
pop
stos
xchg
es
mov
sub
js
sbb
andb
les
rcrl
adc
dec
je
or
mov
repz
xchg
push
inc
dec
pusha
dec
push
fsts
loop
test
cmp
dec
xor
repz
mov
shlb
pop
scas
ds
cmpsb
xchg
push
std
xlat
clc
sahf
arpl
and
push
sub
sti
in
mov
jbe
aad
sub
test
xor
dec
mov
mov
sahf
jle
xchg
push
sbb
dec
adc
stos
or
stos
fisubl
inc
add
cmc
sarb
push
imul
pop
jle
mov
lds
cltd
addr16
out
clc
mov
or
cmp
in
and
nop
cmp
outsb
std
repnz
mov
stos
adc
dec
clc
sub
add
sub
sbb
add
xor
pushf
lds
and
jge
popa
lds
xchg
popa
or
out
pop
or
adc
push
push
outsl
push
in
sub
push
adc
cmp
add
cld
decb
xchg
lret
mov
fidivl
in
fadds
std
scas
sub
xorb
insl
ja
jle,pt
fbld
mov
cmpl
ret
movsb
jmp
je
aas
shlb
dec
sarb
mov
outsb
mov
push
ss
aas
out
mov
xor
in
dec
sbb
add
adc
and
and
adc
jo
dec
jns
shr
movsl
jecxz
mov
or
xor
adc
jmp
dec
inc
aam
add
out
insl
push
inc
sub
cmp
rorb
pop
scas
push
cld
fisubrs
jb
ljmp
mov
imul
les
mov
push
and
push
cmp
dec
in
mov
mov
mov
jl
stos
fsub
xchg
in
mov
out
pop
mov
cmp
xchg
sub
xor
mov
push
gs
xor
push
dec
leave
or
repz
nop
fidivrl
fstpl
subl
add
dec
add
orl
mov
icebp
jl
fsubrl
jo
int
sti
mov
out
dec
roll
imul
pop
mov
call
sbb
xor
jp
test
mov
mov
push
negl
jl
sub
hlt
mov
imul
or
scas
loop
cmc
mov
fistpll
add
hlt
mov
dec
jp
xor
push
mov
out
fsub
es
int
adc
and
out
fcomip
loope
mov
dec
icebp
js
es
push
shrb
fidivrl
jle
lcall
test
jl
out
jmp
mov
fdivrl
insb
inc
pop
or
adc
iret
jne
scas
and
adc
or
mov
xor
and
adc
decl
call
xor
push
mov
lods
xchg
push
aaa
xchg
push
lods
push
dec
cmpsb
jbe
arpl
mov
scas
push
dec
sbb
sbb
cmp
adc
and
out
into
sbb
adc
aad
ljmp
imul
inc
sar
cmp
cs
or
iret
push
jne
pop
cltd
xor
jo
adc
jo
rcll
shrl
xchg
and
je
int3
jo
call
sub
clc
push
mov
stos
add
add
jmp
inc
idivl
fldt
jle
out
or
das
xor
xchg
movsl
lods
ljmp
pop
cld
test
outsb
sti
mov
std
negl
mov
mov
push
jbe
lods
lods
mov
iret
int3
and
call
sti
cmc
and
fildl
push
inc
mov
loopne
mov
or
jge
pop
jno
mov
rclb
or
xor
dec
xchg
cmpb
fdivrs
in
rcrb
xchg
enter
jle
jg
sub
sahf
mov
pop
xlat
jnp
jnp
das
imul
sub
sets
jns
lods
arpl
xor
jecxz
mov
ja
push
in
test
mov
std
aam
push
sub
jl
cld
lods
inc
shl
std
xchg
inc
xchg
mov
popf
lcall
clc
negl
aad
stos
nop
mov
fisubrl
pop
adc
fwait
push
adc
cwtl
push
mov
cmp
xchg
cmp
xor
dec
cld
movsl
fwait
aaa
add
sub
test
filds
insb
xor
test
subb
js
movsb
in
xchg
scas
in
fcoml
pop
aas
scas
test
test
rcll
not
adc
jb
popf
sbb
or
pop
sub
call
mov
pop
push
andb
dec
add
adc
mov
movsl
repz
xor
mov
push
int3
dec
mov
int3
mov
addr16
push
sub
outsb
loopne
leave
cmpsl
imul
and
sbb
push
adc
adc
notb
loopne
adc
mov
cmpsl
jecxz
aaa
push
rorb
sti
push
rcrl
testb
mov
mov
lret
cmp
push
add
lock
xor
inc
aad
fsub
mov
xor
lret
xchg
loope
add
cmpsb
lods
shlb
dec
aaa
cmp
and
sti
jae
mov
jns
xor
aas
sahf
pushf
sbb
out
dec
mov
fsubrl
push
pop
inc
rcrb
sbb
test
mov
inc
cmp
outsl
adc
fs
fidivrs
xor
mov
test
loopne
out
je
js
pop
cmp
nop
movsb
lahf
push
sbb
push
popa
push
inc
push
pop
imul
pop
sub
pushl
mov
pop
shrl
add
inc
sti
push
dec
movsb
jnp
dec
fsubrl
dec
sub
cwtl
movsb
aam
repnz
cwtl
mov
push
xchg
inc
inc
inc
test
jb
jnp
popa
enter
pop
repnz
mov
ret
push
and
fsubr
aaa
leave
mov
cltd
jl
repnz
into
insl
int3
push
jo
add
loop
pushf
jae
jle
mov
call
sbb
pop
cltd
sub
or
andb
stos
push
add
cmp
lahf
into
sbb
int3
mov
xor
xchg
inc
ss
add
dec
jp
jle
fnstcw
ret
dec
in
pop
mov
mov
sub
rcrl
stos
xlat
pop
jo
xchg
mov
out
test
scas
dec
sbb
cs
in
or
gs
imull
mov
pop
push
adc
cmc
mov
push
sbb
jb
adc
aas
repz
push
addr16
movsl
jge
mov
push
mov
or
in
xchg
or
mov
mov
outsl
popf
mov
push
push
fidivrs
orb
fists
mov
sbb
jmp
jecxz
xlat
jmp
testb
jle
sahf
cmp
in
cs
lds
addr16
jecxz
xchg
lods
test
ljmp
stc
ja
addr16
mov
mov
mov
popa
insl
mov
and
stos
stc
mov
scas
inc
fistl
cmp
mov
bnd
inc
xor
outsl
popf
je
jo
dec
xor
ljmp
inc
cs
mov
lds
adc
cmpsb
cmpl
and
stos
xchg
sbb
dec
xor
mov
mov
dec
dec
bound
aas
lods
or
fwait
xchg
sub
or
push
xchg
dec
sahf
xchg
sbb
cltd
aaa
xor
inc
fwait
xchg
mov
sarl
mov
cmp
decl
std
lods
sub
mov
mov
push
mov
sti
loop
stos
hlt
mov
mov
cmc
sbb
jg
out
pop
pop
lret
push
inc
cmp
jo
mov
sub
and
scas
inc
xor
jg
call
pop
dec
lods
shlb
push
push
dec
testb
fisubs
sub
sbb
add
jg
xchg
aas
sbb
add
push
lret
mov
sbb
pop
shl
popf
out
in
outsl
mov
clc
inc
push
sub
or
sub
mov
call
daa
mov
cmp
xor
mov
mov
xchg
ret
shl
cmp
mov
adcb
insb
in
jne
fdivs
or
sbb
int3
xor
inc
sti
iret
jmp
decb
ljmp
xchg
js
pop
cmp
sub
shrl
jg
cmovs
cmp
movsl
sbb
pop
out
outsl
dec
out
cmc
mov
inc
insb
test
mov
es
inc
jbe
mov
push
xor
xlat
cli
pushf
enter
ljmp
xlat
int3
pop
mov
adc
cwtl
and
fwait
adc
aad
or
or
jae
inc
sub
int3
movb
scas
mov
xor
xchg
dec
dec
mov
insb
and
cmp
inc
mov
leave
cmp
iret
cmc
loope
jo
add
cmp
ss
pop
lret
or
hlt
rclb
and
add
and
mov
xchg
mov
aaa
ss
dec
and
lret
pusha
mov
popl
xchg
ret
test
adc
sbb
xchg
popa
es
cmp
sbb
cmpsb
and
sub
out
jle
and
cmc
imulb
mov
push
rorl
leave
cmpsl
insl
dec
sbb
add
adc
fildl
mov
ljmp
in
dec
mov
dec
jg
je
mov
or
imul
jo
in
inc
push
adc
push
jle
jg
imul
loop
setne
sub
sub
pushf
je
sbb
mov
cmpsl
sub
inc
and
pusha
push
andl
aas
hlt
mov
cmp
mov
mov
sub
rorb
mov
add
in
push
sbb
jo
sub
xchg
jmp
xchg
jbe
outsb
mov
ret
lods
adc
pop
adc
push
cs
cmpsb
pop
daa
push
mov
dec
cmp
out
xorl
mov
pop
popa
nop
mov
cwtl
shl
add
sahf
dec
lock
icebp
or
fldt
inc
pop
fisttpl
jae
add
stos
out
decl
lods
mov
xlat
push
lods
xchg
clc
and
mov
rcl
mov
mov
xor
sub
sbbb
gs
insl
jae
cmp
sbb
add
aas
inc
and
iret
movsl
bound
int3
or
pop
imul
mov
push
push
lcall
imul
mov
push
add
out
daa
adc
xor
adc
push
repnz
orb
out
push
cmp
adc
push
mov
fdivrl
mov
mov
and
outsb
push
cwtl
xor
int3
add
imul
or
push
dec
add
jmp
cmp
stos
mov
mov
fcmovne
jbe
jo
out
lcall
pop
fbstp
jbe
movsb
cmp
in
sbb
or
aam
into
stos
fwait
mov
sub
inc
rol
or
sub
pop
and
shl
xorl
jle
movsl
leave
lret
loop
test
mov
test
fstpl
sbb
in
in
dec
jge
adc
push
leave
mov
xchg
ret
jle
cmp
testl
insb
sub
fcmovu
mov
xor
add
daa
sarl
push
bound
test
mov
xchg
popa
data16
xor
hlt
rcr
pop
pop
mov
insb
sahf
ficoml
push
push
ret
je
outsl
adc
aad
dec
es
rcll
repz
xor
push
add
scas
add
testl
test
adc
rclb
sbb
dec
lock
pop
pop
test
and
in
pop
mov
rclb
or
out
cmp
xor
scas
les
push
pop
mov
cmp
scas
aad
pop
clc
repz
or
cmp
lret
mov
jecxz
sub
and
cmc
and
fcompl
jecxz
imul
imul
shll
sbb
add
xchg
adc
xor
cmp
ret
je
jmp
pop
sbb
xor
fcoms
arpl
divl
cmc
dec
inc
pop
cli
cmpsb
sbb
mov
mov
rcrl
in
popa
add
xchg
cmp
pop
fisubs
ret
xor
aad
mov
test
pusha
addr16
jns
dec
sub
lret
push
nop
cmp
fidivs
test
cmp
mov
inc
xor
test
scas
push
sbb
test
or
mov
push
mov
fsts
pop
sbb
sub
adc
cmc
dec
lds
push
push
mov
out
test
dec
mov
adc
mov
pop
jp
add
xor
inc
out
pushf
dec
sti
mov
sub
or
pop
out
cmp
repz
ds
inc
inc
adc
jecxz
sbb
adc
int
or
push
sub
pop
mov
and
stos
jne
mov
outsl
mov
in
add
or
xchg
mov
sub
mov
out
add
pop
movsb
push
ds
pop
stos
push
cltd
mov
mov
lret
out
das
push
adc
aaa
dec
sub
insb
mov
sahf
mov
repz
cwtl
push
mov
jg
fwait
es
clc
pop
xor
jl
mov
mov
test
loope
iret
cmp
int
jmp
shlb
lret
mov
insb
outsl
cmp
jno
imul
jp
fildll
pop
sbb
xchg
adc
dec
js
mov
jl
ds
lahf
jno
clc
fucom
pop
inc
imul
cmpb
mov
sbb
negb
psrld
nop
jl
push
or
mov
sbb
sti
push
sub
or
inc
push
xor
mov
loopne
jge
fcomps
les
mov
adc
js
mov
cli
and
push
cs
mov
mov
rol
andb
push
push
dec
in
jecxz
rcll
jns
push
sbb
imul
dec
pop
and
mov
lahf
loopne
lret
cmpsb
dec
andb
imul
dec
mov
push
lret
cwtl
ja
sbb
xchg
notb
mov
jp
push
lods
pusha
mov
jecxz
ss
push
xchg
jo
arpl
sarb
lret
add
rcll
mov
in
test
mov
ret
sahf
add
mov
xchg
cmpsb
lret
mov
and
popa
into
sbb
repz
lahf
clc
mov
jne
adc
xchg
inc
mov
fisttpl
xchg
dec
jp,pn
cld
fs
or
xchg
mov
sahf
dec
test
cltd
out
cwtl
outsl
out
jl
testl
adc
sbb
movsb
negb
ja
fcmovnbe
adc
lods
mov
inc
pop
pusha
dec
push
mov
push
aam
stos
into
xchg
add
xchg
test
icebp
int
and
loop
sub
in
es
leave
clc
cwtl
cmpsb
out
lods
mov
loop
out
mov
pop
addr16
xor
push
popa
pop
lock
stc
sbb
les
mov
push
fs
mov
das
js
and
cmpsl
das
cmpl
rcrl
lods
int3
jecxz
cmpsl
jo
repnz
mov
movsb
dec
lahf
fsubr
repnz
lods
scas
rol
inc
test
xchg
pop
adc
push
add
fildl
cmp
fstpl
fidivs
push
push
jp
lock
shll
sahf
gs
aas
pop
cmp
xlat
lods
lods
outsl
stos
dec
mov
mov
addr16
stos
scas
iret
dec
jb
cmp
xor
shrl
jnp
fldcw
push
mov
xchg
sub
popf
jg
cmpsb
adcl
xchg
fnstcw
fs
test
sbb
pop
inc
xchg
pusha
out
mov
iret
inc
call
xchg
into
inc
cld
imul
hlt
inc
sti
or
push
nop
cmp
push
xor
and
or
es
pop
imul
out
sub
mov
cmp
es
dec
fwait
shll
popf
jns
scas
mov
outsl
or
sbb
icebp
ret
outsl
mov
cmp
repnz
xchg
out
mov
pop
pop
idivb
dec
mov
mov
fiadds
mov
lds
adc
lcall
mov
mov
lods
push
pop
mov
dec
sbb
sub
xor
mov
adcb
lods
rolb
jle
std
aad
dec
clc
dec
and
mov
loopne
bound
dec
mov
jns
aaa
mov
cmp
sub
cs
idivb
sbb
sbb
pop
dec
jl
jle
cli
push
out
push
mov
adc
lods
jle
pcmpeqw
xor
fisttps
sbb
test
mov
bound
imul
lock
lock
mov
fiadds
lods
inc
fwait
or
cmpsl
jle
xchg
add
cltd
pushf
outsl
jno
and
push
dec
cmpsl
outsl
out
arpl
dec
in
adc
cmc
stos
mov
imul
popf
bound
adcl
lret
mov
push
pop
jp
je
cld
movsl
jbe
cs
out
inc
out
aas
or
push
lock
cmp
lcall
lods
sarb
mov
mov
in
jge
cs
clc
xchg
dec
fbstp
in
push
push
test
stos
cmp
jecxz
push
aad
es
ds
push
sbb
fistpl
in
dec
sbb
lock
and
aaa
shl
or
push
push
je
dec
test
and
pusha
adc
pusha
aam
js
mov
iret
jmp
adc
out
push
add
negb
popa
mov
xor
xchg
push
gs
or
fisubl
test
aad
sub
or
jg
fcomps
jo
imul
js
or
call
out
xchg
fwait
iret
outsb
push
fs
dec
popf
fxch
mov
mov
sub
cld
js
mov
xchg
stos
adc
sarb
movsb
popl
jmp
or
popa
mov
and
hlt
lahf
rorl
xchg
jl
iret
pop
sub
sub
int3
ljmp
outsb
rorl
sub
jnp
push
cmp
int
loopne
mov
outsl
rol
xor
int
inc
mov
jae
fwait
loopne
iret
push
adc
mov
push
xchg
insb
dec
pusha
push
mov
inc
popf
out
lret
mov
mov
mov
mov
push
rolb
xchg
xor
loop
jbe
addr16
xchg
jmp
stc
lret
mov
sbb
pop
mov
pop
imul
push
loopne
rclb
sub
add
gs
mov
and
push
out
xorl
dec
push
nop
in
mov
clc
push
sub
mov
mov
adc
rorl
sti
sub
insb
jmp
push
adc
push
jae
aas
adc
adc
add
cmp
sub
pop
loope
nop
inc
je
dec
jle
adc
dec
lcall
daa
inc
int
add
push
jl
and
adc
lock
push
mov
or
aaa
cmc
scas
std
cmp
shrb
sbb
bound
push
mov
je
mov
in
push
and
repz
mov
aad
push
repz
cmp
inc
add
sbb
push
cmpl
popf
outsl
sub
sub
popf
movsb
adc
pop
test
popf
adcb
lea
pop
jg
adc
push
js
mov
ds
xchg
add
bound
cmpsb
data16
xor
dec
jle
pop
xchg
int
loop
lods
xor
stos
pop
or
int3
push
dec
cmpsl
cltd
in
pop
inc
inc
jmp
ss
xchg
fisubrl
hlt
add
jne
cmp
aad
dec
popf
in
sbb
mov
cmp
mov
sub
push
insl
xchg
push
out
xor
sarb
lds
push
add
xchg
xor
mov
dec
in
ficomps
sub
pop
cmc
add
push
inc
sbb
sbb
jmp
aaa
adc
lods
push
fwait
lods
lret
ret
xor
xor
int
sub
inc
dec
xchg
jae
hlt
push
insl
sbb
add
xchg
xor
les
ret
xchg
xchg
ss
notb
xchg
cltd
mov
fwait
mov
call
mov
popf
mov
stos
mov
cmp
cmpsl
arpl
xchg
stc
test
inc
xor
in
ret
pusha
mov
adc
inc
xor
in
repnz
in
add
mov
xchg
decl
and
sbb
jl
ds
and
fcompl
cmp
call
popf
mov
shrl
adc
fldt
add
cwtl
cwtl
inc
ror
jns
cltd
jmp
sub
sbb
in
ja
sahf
lahf
leave
cmp
add
mov
jno
inc
jnp
jne
stc
divl
push
push
lret
stos
fldl
mov
sbb
fwait
int
xchg
int
push
loopne
repz
mov
mov
cs
outsb
lret
es
pop
cmc
decb
or
xor
gs
inc
popl
push
cmp
fidivrs
inc
inc
fs
add
in
les
sti
rcll
ret
jno
mov
sub
dec
xor
movsl
rcl
dec
mov
out
add
push
test
sbb
int3
xchg
jno
sub
bound
jmp
pop
into
int
fs
adc
fiaddl
mov
mov
xchg
cwtl
adc
mov
xor
jbe
fnsave
cmpsb
clc
adc
loope
sbb
movsl
jp
ret
in
mov
mov
push
jne
test
or
arpl
sbb
arpl
fmuls
push
ljmp
lds
sahf
add
insb
pop
test
jge
pop
sbb
notb
call
pop
das
mov
gs
insl
sbb
sub
xlat
sub
lods
sbb
fistpll
adcl
mov
push
aaa
mov
mov
arpl
mov
sub
mov
add
jl
xchg
push
or
mov
mov
in
sub
push
lret
and
jo
test
mov
aas
sub
dec
loope
push
mov
test
pop
gs
mov
add
dec
aas
stos
or
or
aam
cli
ja
xchg
inc
lea
jecxz
lds
ljmp
out
roll
cmpsl
adcb
xorb
aam
pop
lock
xchg
mov
sub
ja
adcl
mov
push
in
test
imul
cmc
mov
mov
rcr
lods
jle
clc
movsl
push
scas
cmpsb
push
pop
mov
pop
sub
test
jmp
dec
bound
cmpb
test
pop
dec
lret
dec
leave
inc
xchg
or
movaps
lret
neg
aam
sbb
xchg
fsubs
push
jbe
insb
jo
iret
mov
inc
cmp
call
xchg
fdivl
lret
jo
test
pop
dec
sub
adc
mull
cmp
mov
ljmp
out
sbb
ret
clc
jb
loope
fbstp
xchg
sbb
inc
xchg
lds
ficoml
push
push
mov
sbb
lret
or
daa
insl
and
imul
fistpll
std
and
or
pop
dec
cmpsb
lods
sbb
fnstcw
mov
pop
inc
insl
jmp
hlt
and
arpl
gs
popa
push
jmp
out
push
stos
cmpsl
clc
push
inc
hlt
mov
in
mov
xor
push
rcrl
into
pop
mov
cmp
fsubs
arpl
fwait
jmp
mov
jae
mov
inc
movsb
jmp
add
pop
in
testl
xchg
ss
sbb
cwtl
xor
int
int
lea
push
jg
inc
in
mov
ficoms
xchg
imulb
mov
cmc
mov
fstps
arpl
xchg
push
aam
inc
test
pushf
icebp
fidivl
adc
xchg
lret
push
insl
gs
lcall
jge
rcr
addl
jbe
push
clc
or
pop
loope
fcoms
pop
add
aaa
or
fwait
dec
pop
hlt
jae
lahf
fildll
or
sub
jecxz
cmp
mov
rolb
popf
ds
leave
data16
mov
xchg
jae
cmp
les
rcll
jmp
test
repnz
or
jo
faddl
ffree
push
add
jmp
pop
xchg
test
dec
jl
mov
cmc
lods
idivl
in
lds
xor
jae
cltd
arpl
lcall
ja
js
jno
cwtl
mov
or
adc
inc
sbb
push
loopne
cmp
insb
insb
cmp
outsl
cli
pusha
outsl
jecxz
hlt
jecxz
mov
pop
and
hlt
adc
enter
and
es
aam
mov
ljmp
rol
mov
cmp
fs
push
xchg
adc
popa
jnp
push
imul
iret
test
popf
xor
sub
push
mov
fisttps
movups
push
jb
xchg
mov
iret
fs
sub
sahf
or
mulb
sub
and
pop
inc
adc
cmpb
aaa
mov
stos
cld
sti
lock
inc
es
data16
mov
inc
pop
mov
xor
es
inc
add
out
or
in
inc
fldcw
xchg
adc
loop
mov
mov
inc
aaa
mov
cmp
sub
out
push
add
adc
mov
or
punpcklbw
orl
cmpsl
popf
mov
stos
int
mov
lods
scas
test
pop
lret
in
jl
push
dec
mulb
fisubl
cli
add
xchg
sbb
jg
xchg
pop
insl
sub
xchg
aad
test
jb
inc
stos
lcall
les
jp
cs
dec
jbe
cmp
sbb
mov
sbb
xchg
push
pushf
shlb
mov
xchg
addl
pop
xchg
sub
jecxz
xchg
inc
stc
aad
test
push
rcr
pop
dec
mov
icebp
sbb
sub
pop
dec
pop
call
cmp
movsb
das
push
ja
sbb
push
pop
fildl
scas
fxch
and
mov
xlat
mov
nop
shll
lret
aad
cmp
push
fneni(8087
dec
cs
aaa
adc
aaa
dec
adc
inc
mov
pushf
in
ss
sbb
sbb
cmp
mov
xorps
pop
out
and
pop
addr16
xor
out
xor
shll
daa
inc
das
jbe
fidivrs
inc
sub
mov
dec
push
loop
pop
or
xor
andb
mov
inc
rol
movsl
cmp
inc
adc
arpl
stos
sbb
pop
nop
jnp
add
loop
in
cld
sbb
popf
or
dec
mov
movsl
movsb
mov
aam
jmp
xorl
stos
andb
and
insb
cmc
add
mov
jno
jne
mov
add
mov
aad
inc
lahf
cmp
mov
or
loop
jo
cs
mov
cs
jne
and
imul
mov
lcall
jno
je
lock
aam
pop
cmp
pop
mov
or
sbb
addb
insl
call
leave
repz
das
stc
or
int
int
decl
jae
and
pop
or
in
enter
xchg
repnz
hlt
lods
dec
insl
sub
add
jb
popf
cs
mov
xchg
cmp
fadds
sti
das
xchg
cmp
out
push
mov
pusha
notl
cmp
mov
inc
mov
rolb
insb
ds
shll
imul
pop
sbbb
popf
stos
js
subb
sub
and
push
pop
sub
xor
sbb
lods
div
dec
inc
aam
dec
idiv
xor
cwtl
xor
adc
cmp
or
cmpsl
jmp
les
add
lea
sub
std
adcb
int
andl
adc
test
xchg
or
fcoms
in
sub
push
les
jp
aad
popf
xchg
in
rcr
les
aas
inc
push
iret
cmp
repnz
add
ljmp
adc
rcrl
ja
bound
adc
fidivrl
lahf
adc
and
xchg
xchg
gs
push
or
lods
movsb
pop
inc
cmpsl
add
test
jmp
xchg
xchg
pop
sbb
mov
add
cmpsl
and
sub
mov
and
into
xor
add
sbb
pop
and
adc
lea
das
loopne
faddl
push
fistpll
sbb
orb
imul
fmul
mov
pop
mov
out
inc
jmp
es
pushf
ljmp
loop
jns
jmp
fwait
sbb
popw
adc
pop
out
xor
dec
lock
icebp
xorl
xchg
sub
adc
add
pop
cmp
inc
sbb
cmp
ret
loop
xchg
or
mov
vmread
shl
aas
xor
mov
push
das
sbb
xchg
fnstsw
mov
das
sbbl
mov
scas
dec
mov
daa
xchg
and
sub
scas
or
add
pop
ljmp
aam
mov
xchg
jns
push
fwait
lcall
xor
ds
dec
lret
and
xchg
xchg
mov
fisubrs
test
mov
cmp
cmp
and
mov
in
rolb
push
xor
mov
jbe
nop
jle
cmpsb
inc
mov
pop
cmpsl
xchg
sar
mov
inc
sarb
cmp
gs
lahf
pop
mov
sbb
movsl
or
mov
dec
xor
push
insl
push
xchg
or
lds
in
and
lock
scas
mov
arpl
push
hlt
hlt
gs
rol
jle
call
ret
sub
mov
in
or
arpl
cmpsb
inc
loopne
addr16
cmpsb
fmul
jae
cwtl
mov
dec
scas
test
mov
fmuls
sbb
loopne
js
ret
sub
scas
sti
add
sbb
std
out
es
mov
int3
push
cmpsl
pop
and
push
xor
loopne
ds
jb
nop
lcall
icebp
xchg
jmp
cmp
cltd
mov
mov
push
adc
movsl
and
movsb
jl
mov
ret
mov
xchg
shlb
pop
sbbl
loop
jbe
je
cmp
stc
xchg
aas
push
lret
add
imul
dec
aas
mov
pop
or
xchg
xlat
les
test
adc
pop
loope
mov
pusha
adc
xchg
loopne
test
sub
mov
enter
xchg
les
inc
mov
mov
add
inc
ljmp
jo
repz
clc
mov
pop
shlb
pop
test
mov
fisubs
jo
mov
daa
push
and
and
jmp
push
andb
pushf
xchg
loope
pop
sbb
mov
je
or
je
sub
pusha
mov
outsb
jnp
test
jae
and
lods
push
int3
xor
ficoml
popa
jno
mov
push
pop
inc
out
outsb
stc
fcomps
pop
pop
iret
or
call
notb
pop
sub
inc
sahf
add
bound
xchg
lods
and
add
mov
push
stc
mov
subb
mov
dec
xor
leave
jne
xchg
xor
sub
add
je
push
imul
ss
jo
xor
je
xchg
fdivs
sub
and
in
fisttpl
fidivs
xchg
roll
stc
adc
int3
xlat
mov
lahf
mov
cmp
fbstp
mov
mov
mov
add
mov
ror
addr16
in
xchg
jbe
div
adc
mov
pop
dec
aam
in
cmp
aaa
cmp
aaa
sbb
jne
xchg
xor
imul
mov
into
xor
lret
sahf
loop
xchg
xchg
aad
xor
out
fisubrs
mov
mov
hlt
xor
jno
addb
addl
ret
and
mov
push
mov
js
mov
pop
pop
jnp
outsb
and
inc
lds
adc
pop
inc
inc
shlb
jns
sub
add
pop
jl
mov
mov
adc
sub
loope
mov
mov
push
inc
jecxz
cs
arpl
test
cmpsb
cmpsl
aad
fsubs
int3
shrl
sbb
popf
push
cltd
gs
mov
push
lock
addl
scas
cli
in
test
test
dec
cltd
mov
pop
mov
out
and
xchg
movsb
xlat
pop
push
addb
mov
sbb
sbb
andb
adc
or
sbb
movsb
pop
fildll
xchg
push
scas
shlb
push
addr16
jne
shlb
mov
add
mov
aam
stos
in
push
jmp
and
insl
fwait
shl
push
fwait
jmp
arpl
aaa
sub
test
adc
test
jle
xchg
mov
sbb
pop
dec
push
stc
push
icebp
or
add
cli
or
sbb
adc
test
lock
addr16
jmp
cmp
lock
jbe
and
mov
ret
mov
lret
jmp
pop
push
and
clc
paddq
jne
loopne
push
mov
notl
bound
sbb
mov
loopne
add
jo
movsl
pop
lods
mov
repnz
mov
sbb
jle
sub
mov
push
es
dec
dec
mov
enter
flds
in
adc
out
add
addr16
pop
push
mov
dec
out
lods
addr16
jnp
inc
sti
lds
je
jmp
repnz
adc
jle
cltd
gs
fcoml
addr16
and
mov
dec
incb
mov
dec
aaa
mov
mov
lahf
or
mov
push
stos
and
xrelease
dec
popa
imul
or
arpl
das
arpl
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
pop
cli
add
add
add
iret
add
add
or
mov
fdivl
iret
jo
xorl
dec
scas
or
int3
cmp
insb
and
gs
out
pop
pusha
adc
fs
ficoml
fidivs
out
jne
cmp
popa
jmp
mov
and
shl
add
lret
sahf
test
lahf
in
in
hlt
clc
outsb
into
lods
aas
aam
mov
add
test
repz
and
push
inc
jge
dec
loop
xlat
dec
pop
mov
jb
sti
ret
dec
jbe
dec
cmpsl
test
das
rorl
popf
pop
nop
cli
dec
xchg
xchg
xchg
cmc
test
jle
pop
cmpsb
inc
mov
fld
lret
and
pushf
loope
xchg
mov
lcall
movsl
sbb
add
jmp
pop
inc
sub
fwait
adc
mov
mov
inc
push
or
in
push
cmpb
or
push
adc
cmp
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
