push
or
add
add
add
mov
add
add
add
pop
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
adc
pop
add
roll
xor
pop
add
pop
add
add
pop
add
add
add
addb
add
cld
rolb
pushf
rolb
or
pop
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
sbb
ret
icebp
xchg
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
aas
add
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
outsl
push
add
add
add
cmp
inc
xchg
cmp
cmpsl
mov
jge
fs
mov
push
mov
jno
scas
push
xchg
sub
xlat
imul
push
test
pop
jae
mov
dec
ret
xor
xchg
push
xor
push
lcall
pop
sahf
je
lea
or
leave
or
flds
mov
mov
mov
fadds
push
push
aam
or
loopne
fistpl
movsl
jno
and
jp
mov
cld
jo
loope
inc
adc
inc
loope
rolb
pop
sahf
cmp
shl
in
dec
sub
inc
shll
cmp
pop
jae
pop
push
pop
out
icebp
and
push
or
xor
out
stos
outsl
out
wbinvd
movl
mov
pusha
push
mov
pop
stos
mov
pop
push
fisubrl
test
adc
xchg
pop
cli
dec
daa
mov
xchg
es
inc
and
repnz
mov
jae
sub
scas
push
mov
dec
cmpsb
imul
loopne
lock
pop
in
stos
cmp
loopne
adc
outsb
xchg
mov
and
jmp
rorb
call
cwtl
aad
inc
out
ficoml
and
aaa
xchg
adc
and
iret
jo
dec
inc
xlat
pusha
fidivrs
mov
cmp
mov
in
jl
aad
pop
ss
xorb
cmpsb
dec
inc
adc
mov
pusha
dec
imul
or
pop
push
mov
lahf
inc
or
ret
sub
test
jb
lret
bound
bound
test
xor
and
push
mov
ja
stos
push
mov
out
out
ret
xchg
pushf
aaa
jmp
cltd
mov
xabort
int3
cmc
repz
cmp
out
mov
lock
pop
pop
jle
cmp
sbb
mov
push
sub
mov
pop
mov
andb
imul
xlat
call
out
stos
jl
xchg
ret
data16
in
sbb
and
cltd
sbb
pop
es
mov
or
mov
es
lods
lods
jne
push
mov
inc
test
jecxz
imul
sbb
and
mov
mov
cld
pusha
push
jbe
lods
sbb
aad
jne
mov
loope
pop
jb
enter
loop
js
pop
adc
hlt
or
daa
popf
mov
out
mov
stos
mov
call
xor
jno
mov
scas
icebp
in
ss
pop
jmp
jge
in
sub
or
mov
leave
sti
dec
xchg
push
insl
jno
ljmp
repz
cld
jb
adc
mov
push
pop
mov
cmp
test
pop
xchg
aam
or
and
int
scas
fsubl
int
xchg
fisubrl
out
or
or
or
jg
push
pop
sbb
inc
fwait
mov
xor
xor
outsb
aam
mov
bound
mov
jo
push
inc
cmc
mov
jnp
notb
test
aas
leave
test
stc
in
xchg
pushw
jmp
adc
adc
pop
pop
xor
out
cwtl
movsl
es
xchg
sub
add
scas
aas
or
adc
jecxz
cmpsl
mov
test
sub
and
dec
movsb
fwait
push
push
scas
es
pop
ja
fs
xor
popf
and
push
in
pop
and
dec
sbb
inc
lods
sbb
out
rorb
jp
in
push
test
mov
stc
fldenv
mov
dec
add
ljmp
push
fwait
mov
jecxz
mov
cmp
ficompl
push
les
test
mov
lahf
push
popa
aam
jle
insb
inc
out
sbb
lods
aam
int
sub
mov
lea
insl
adc
push
test
jmp
fnsave
pop
leave
shrl
and
inc
sub
push
mov
inc
sbb
push
clc
insb
push
push
add
xchg
pop
mov
insl
mov
mov
xchg
mov
cmp
mov
cmpsl
mov
in
dec
inc
mov
outsb
push
mov
in
xchg
lods
in
jle
pushf
mov
rcl
pop
mov
lea
sbb
or
movsl
jle
fldenv
je
pusha
pop
lret
or
or
psrlq
pop
add
adc
lret
xor
mov
int
cmpsb
in
cli
sub
cwtl
sahf
add
call
out
movsl
mov
xchg
mov
or
cltd
scas
pop
jae
leave
fxch
cli
inc
dec
sbb
fildll
movsl
je
loopne
xchg
ret
xorl
mov
add
and
and
push
push
out
mull
pop
xor
inc
or
inc
in
push
pop
or
iret
mov
xchg
sbb
inc
mov
loop
lea
cmpsb
add
std
dec
rolb
pop
inc
sarl
xchg
cmp
adc
xchg
dec
mov
leave
mov
fnstcw
jp
add
cwtl
repz
shrl
fidivrs
scas
scas
pop
loope
inc
mov
xchg
test
movsb
inc
es
mov
adc
mov
xchg
push
add
outsl
int
test
pop
enter
dec
mov
stc
lret
mov
cmp
sti
or
das
jno
popa
mov
in
lds
sti
or
aas
add
ret
les
hlt
call
sub
ss
add
test
pop
jae
jnp
jnp
fmulp
sbb
xchg
das
dec
and
inc
adc
push
pop
sub
pushl
sbbl
jl
cld
jecxz
sub
mov
imul
aaa
sbb
mov
cmp
leave
iret
icebp
pop
repz
mov
in
xchg
xchg
mov
lea
pusha
outsb
add
nop
xchg
push
mov
addr16
pop
jns
push
xor
adc
fmull
es
fdivr
or
mov
mov
loope
gs
loop
push
pop
icebp
mulb
push
xchg
sbb
jp
das
inc
cmpsb
pop
cmp
dec
push
out
popf
push
jne
sbb
popa
jo
cli
lock
dec
xchg
or
or
jl
mov
push
sub
cmpsl
push
cmp
in
je
jl
mov
shrb
insl
xchg
and
xor
cltd
mov
ret
cwtl
cld
mov
loopne
add
nop
push
jae
movsl
lea
out
dec
jae
add
lds
adc
movsb
mov
iret
jae
or
lret
add
nop
ret
and
testl
dec
cmpsl
scas
sub
fst
add
je
add
mul
mov
jae
cmp
jns
mov
mov
fldl
dec
and
fsts
adc
sbb
cmp
ficoml
jb
pop
sub
rcl
xchg
fsubs
push
or
lea
push
ljmp
and
add
cmp
jne
aaa
inc
pop
js
sub
cmp
adc
push
push
test
aas
insb
nop
orb
add
adc
mov
jns
or
xor
cmc
fildll
clc
addb
rcl
pop
lea
lahf
sub
mov
aam
popf
incb
int3
imul
pop
inc
pop
mov
int3
jae
sub
loop
scas
sti
in
sub
out
aas
mov
push
iret
hlt
aas
jnp
jg
leave
outsl
stc
jo
pop
or
cli
jmp
lcall
test
jno
lods
sub
xchg
dec
stc
gs
xchg
or
jnp
shlb
subb
xor
mov
inc
aaa
ret
aad
mov
dec
push
in
in
gs
cmp
fldenv
jp
adc
shll
fmuls
insl
mov
int
std
outsl
xor
pop
popa
shlb
mov
add
pop
scas
js
in
jle
scas
add
cmp
sub
and
jp
popa
dec
adc
sub
mov
sub
in
ljmp
mull
inc
dec
and
in
out
shlb
or
dec
and
jecxz
je
pop
mov
push
or
lahf
sub
xchg
shrl
mov
or
std
inc
outsl
sarl
jo
sbb
add
or
pop
pop
les
lds
mov
push
shl
mov
test
jl
fbld
adc
mov
mov
es
dec
xchg
pop
dec
pop
loopne
jno
inc
lock
or
inc
xchg
inc
clc
mov
push
shrb
xor
jno
popa
jne
sbb
xchg
scas
or
xor
jns
je
push
int3
sarb
jb
lahf
int3
xor
jno
jp
pop
mov
pop
loopne
lcall
xchg
mov
cld
repnz
pop
lods
pop
ss
std
jmp
and
mov
pop
cmp
push
lahf
push
push
mov
aas
arpl
inc
mov
jecxz
retw
out
adc
sub
ret
divb
push
fcmove
aas
mov
mov
mov
lods
popf
add
lahf
hlt
test
mov
mov
mov
pop
daa
lea
or
daa
jb
push
int3
in
xor
int
cmp
test
jb
mov
adc
sub
test
shl
mov
mov
ss
pop
nop
or
cmc
scas
dec
cmp
push
les
rcrl
insb
adc
xor
inc
xchg
jmp
lock
cmp
bound
ror
punpcklbw
out
pop
popf
sub
adc
inc
test
imul
in
jl
adc
mov
repnz
mov
lahf
cld
sbb
mov
es
movsb
data16
in
mov
and
std
loope
ret
mov
adc
jg
pop
test
scas
pop
sub
int
shlb
add
leave
adc
xorb
rcll
or
test
and
ja,pt
xor
or
sahf
mov
push
sbb
cld
repz
insb
out
mov
cmp
test
inc
xor
xor
mov
mov
mov
lret
push
dec
mov
sub
jecxz
xor
or
or
std
xchg
lret
push
push
in
add
cmp
or
push
filds
sbb
repz
mov
fwait
enter
xchg
hlt
loop
aas
sub
cwtl
ljmp
push
dec
jg
out
sub
xchg
jg
lock
sahf
stc
push
xchg
aam
sub
adc
mov
mov
push
inc
mov
rcl
jnp
sbb
cmpsl
xor
jl
lcall
pushf
icebp
push
sbb
xchg
mov
xchg
stos
in
add
aam
mull
mov
sub
jg
notl
jb
push
pop
subl
out
ret
jmp
and
mov
adc
inc
jb
sbb
jl
test
das
iret
imul
fisttps
adc
loopne
add
pop
or
out
push
cmpsl
int3
xor
js
mov
adc
ja
jne
jo
mov
cmp
sub
xchg
mov
test
movsl
xor
mov
sub
mov
ret
out
xlat
mov
movsl
mov
movsb
movsl
nop
xchg
icebp
lds
sbb
push
dec
xchg
pop
cmpl
enter
dec
jb
sbb
cs
push
and
jecxz
ja
in
adc
xlat
aam
flds
push
sbb
pop
mov
push
sar
mov
addr16
fs
nop/reserved
dec
jecxz
jno
test
addr16
or
inc
jnp
pop
inc
sarl
mov
in
sub
shrb
mov
pop
add
dec
cld
addl
cmpsb
adc
sti
push
cmp
xchg
scas
mov
mov
fcompl
jle
in
repnz
and
iret
aad
dec
lret
lods
aad
loopne
jne
add
mov
jmp
jbe
jl
sbb
xchg
mov
insl
ds
pop
outsl
lods
or
sub
lock
aas
xchg
dec
xchg
jns
inc
shl
sub
adc
push
arpl
cmpsb
or
test
dec
or
mov
shll
sbb
xor
fs
cmp
cld
xchg
cmp
in
lods
mov
scas
iret
add
xor
jl
mov
pop
mov
cmp
mov
xor
cmp
in
sbb
out
loop
mov
xlat
lds
and
outsb
xor
cli
mov
in
mov
add
jl
xchg
push
cmp
dec
adc
je
out
cmp
and
xor
mov
mov
div
mov
pop
xchg
enter
and
sub
or
clc
push
dec
or
mov
loopne
sbb
call
lock
loop
inc
add
xchg
aas
lcall
cmpb
sahf
pop
lcall
inc
test
xor
cmp
mov
fwait
int3
int3
mov
add
shrl
lret
cld
popf
fnstcw
dec
jb
push
fcomps
pushf
push
pop
sahf
and
faddl
addr16
sahf
push
icebp
xor
xchg
mov
push
repnz
imul
shl
push
xchg
sar
fucomip
test
mov
jp
int3
push
ds
sbb
fisttps
xor
pop
mov
mov
mov
jmp
xchg
shll
sahf
test
add
push
pusha
dec
lret
fsts
sbb
insb
dec
clc
or
bound
into
pop
nop
in
lret
shll
pop
imul
push
cmp
dec
inc
repz
mov
stos
mov
xchg
add
insl
into
out
xor
shll
and
lahf
and
xchg
sarl
addps
cltd
fwait
mov
aam
inc
sbb
mov
cmp
push
add
dec
mov
clc
dec
sbb
enter
xorl
pop
stos
xor
cwtl
icebp
mov
popf
or
inc
push
les
insb
jecxz
test
out
mov
test
push
fdivrs
xchg
dec
and
enter
or
push
jae
adc
dec
cmp
xor
repnz
jne
jle
adc
cld
sbb
sbb
loop
push
pop
test
outsl
push
and
add
test
ljmp
xor
or
fisttpll
shll
mov
inc
xorl
out
dec
repnz
in
xchg
jnp
cmpsb
dec
das
sahf
mov
ss
adc
push
in
mov
sub
in
jb
mov
dec
lods
push
addl
neg
sbb
mov
out
jae
addl
jecxz
mov
cmp
rorl
outsl
push
dec
mov
xchg
and
xor
out
mov
cmpsb
ljmp
cmp
repz
push
insb
aaa
xacquire
stos
lods
into
cmpsl
mov
jmp
xchg
je
aaa
or
out
cmp
repz
shrb
add
push
aas
sti
roll
mov
sahf
pop
imul
sbb
cld
adc
mov
movb
jp
enter
into
popa
stc
cmpsb
mov
mov
pop
lcall
sub
pushf
inc
scas
jnp
ljmp
test
xchg
sbb
insb
mov
jbe
cmpsb
lcall
or
jns
repnz
mov
xchg
add
push
rcrb
lock
ss
mov
fst
jp
leave
addb
jo
fwait
jecxz
jno
test
rorb
inc
push
imul
jbe
rorb
sbb
sbb
mov
sbb
cmc
popa
stos
xor
dec
rorl
iret
pusha
cmp
in
push
outsb
addl
movb
orl
inc
push
mov
arpl
rcrb
icebp
test
and
hlt
std
mov
pop
jle
shll
or
sub
cli
scas
pop
adc
and
mov
aas
stos
int
cmp
scas
push
xchg
jo
inc
sub
ret
shlb
mov
aam
ss
stos
insl
cli
rcll
lret
and
push
popf
cli
fstpt
imulb
or
xchg
adcl
aaa
int3
imul
aam
int
xlat
ja
ss
insl
lret
pop
imul
sbb
cmpsl
mov
mov
or
and
push
jg
mov
gs
shr
subb
or
in
imul
sbb
ret
popa
ss
daa
call
sbb
in
jl
lahf
push
test
rorb
test
in
push
scas
daa
mov
lock
in
mov
nop
fimull
pop
and
jo
pop
test
push
and
sbb
dec
into
jl
insl
out
dec
fadd
add
outsb
in
add
int
rcrb
xor
daa
das
pop
out
pop
aas
mov
add
lea
or
xchg
imul
lcall
outsb
jns
pop
ja
push
mov
ljmp
pusha
fimull
mov
cmc
sar
test
test
sub
adc
loop
ret
dec
xchg
jp
mov
mov
lret
lods
pcmpeqd
xor
dec
outsl
inc
int
test
gs
lea
push
in
scas
repnz
jecxz
cmc
and
dec
pop
add
test
cmp
jbe
js
or
lods
fstpt
orl
push
and
mov
dec
popa
fcmovnbe
ret
xchg
dec
inc
repnz
or
and
mov
jb
cmp
push
jnp
outsb
mov
xchg
pusha
popf
mov
push
scas
test
stc
mov
and
test
movsl
jbe
data16
aaa
dec
and
push
popf
or
adc
add
dec
inc
jae
and
mov
icebp
push
dec
into
out
out
xchg
loope
test
sahf
arpl
scas
inc
push
xchg
dec
jbe
aam
fs
jae
iret
sub
xchg
shrl
test
decl
mov
aad
fwait
jmp
pop
sbb
jp
or
jge
js
jo
outsb
mov
sbbl
xchg
cltd
mov
inc
sahf
leave
lods
sub
mov
sub
insb
jle
push
cld
out
andl
dec
loop
sbb
arpl
mov
jle
jmp
and
adcl
cmp
mov
adc
loope
sub
sub
jp
andb
iret
cwtl
out
mov
fadds
bound
xchg
mov
xorl
push
out
loop
dec
jb
cmp
pop
xchg
push
xchg
cmpsl
push
jl
push
dec
movsb
and
cmp
xchg
aam
dec
add
idivl
testb
icebp
cwtl
in
rolb
call
dec
fdivrp
xchg
push
lahf
aas
ja
jns
sbb
icebp
xchg
sub
pop
cmpsl
mov
roll
jbe
push
push
loop
cmp
ror
movl
mov
in
jp
inc
cmpsl
mov
sbb
add
dec
shr
test
xor
mov
push
test
nop
add
push
dec
or
jp
pop
xchg
call
lds
mov
mov
jne
out
enter
out
int
in
add
add
in
adc
jb
repnz
mov
mov
sbbl
ret
movsl
loop
mov
repnz
mov
movsl
movsb
or
add
enter
cmpsl
or
sub
jl
push
push
dec
adc
pop
popf
pop
sub
repnz
mov
xchg
ljmp
ljmp
mov
mov
adc
adc
cli
rcl
pop
mov
and
hlt
mov
outsb
popf
cltd
addr16
dec
int
mov
inc
lea
lret
push
jae
push
repz
out
pushf
cwtl
call
sbb
fcom
or
popf
xor
stc
jge
jae
add
adc
xchg
inc
sti
mov
dec
loope
pop
imul
jbe
inc
push
jecxz
mov
push
sbb
int
les
std
sbb
add
repz
pusha
or
fisttps
jbe
xor
mov
adc
adc
mov
incb
cmp
movsb
mov
pushf
or
adc
daa
pop
mov
in
or
push
pop
arpl
mov
dec
jns
inc
fldt
pop
ret
sub
push
arpl
es
xor
jg
mov
in
scas
cmp
push
xchg
es
add
mov
sbb
addb
pop
dec
lods
ja
inc
addr16
notl
or
ljmp
nop
jecxz
mov
xor
and
dec
adc
and
pop
sub
fidivs
jmp
lahf
fnstcw
pop
sti
in
daa
or
inc
mov
movsl
add
mov
gs
movsb
cmpsb
push
pop
add
or
mov
mov
sbb
mov
imul
data16
sbb
add
xchg
inc
in
subl
cli
xor
jecxz
aad
sbb
push
jns
inc
lea
pushf
fstpl
cmpb
xorb
movsl
lahf
push
scas
inc
and
pop
test
cmovp
ljmp
mov
scas
fwait
pop
push
shrl
ss
hlt
inc
sub
or
cmpsb
cltd
outsb
ret
adc
adc
cmpsl
test
jl
cmpsl
aam
cli
cmp
pusha
jbe
scas
pop
js
fs
rcll
scas
ficoml
mov
rolb
mov
sbb
popf
test
xor
push
cli
in
lea
jp
sub
insb
add
std
jo
jno
test
sti
lea
xlat
xchg
xor
pop
cmp
dec
cmp
jecxz
fsts
xchg
fwait
imul
xor
imul
dec
adc
shlb
icebp
fmulp
cmp
inc
add
jmp
insb
pop
andl
jmp
sbb
pop
add
repz
scas
push
and
xchg
aaa
jecxz
mov
rep
xchg
push
jne
and
adc
loop
js
out
adc
push
pop
lock
mov
icebp
inc
pop
push
mov
repz
adc
popf
lret
mov
fiadds
insb
and
ds
stos
sbb
or
add
rcrb
js
jle
sbb
fimull
arpl
fists
in
lods
leave
nop
lds
xor
neg
sbb
repz
and
loopne
mov
mov
jg
in
dec
cmc
push
mov
sbb
fbld
mov
les
xchg
ret
inc
out
shrl
insl
sti
adc
pop
sahf
push
pop
or
sub
and
cmc
cmpsl
aas
push
icebp
scas
push
lahf
dec
in
inc
gs
pop
rcll
lahf
sub
or
pop
push
lods
in
in
shr
test
add
fst
pusha
call
xchg
jno
mov
stos
idivb
repz
jle
inc
xchg
pop
cmp
push
orb
push
test
ret
daa
in
js
cwtl
in
fildl
inc
mov
int3
cmp
mov
lret
mov
add
clc
shlb
dec
pop
sbb
into
dec
pop
xchg
pop
std
lret
adc
lret
dec
mov
inc
mov
inc
gs
scas
clc
cmpl
test
aam
mov
mov
mov
mov
mov
cmp
lcall
arpl
loopne
and
cmp
or
out
sarb
xchg
xor
mov
orl
push
mov
lds
out
cli
push
push
jne
xchg
jne
mov
cmpsl
sbb
sub
xchg
jecxz
movsl
mov
sub
cmp
mov
jmp
dec
mov
xchg
ja
push
adc
dec
xor
adcl
loopne
dec
cmp
enter
xor
scas
cmp
or
dec
cld
pop
mov
into
inc
push
in
mov
lahf
dec
pop
dec
pushf
lods
icebp
add
or
ret
insl
fcoms
or
xchg
lock
mov
sub
jmp
hlt
movsb
aas
or
cmp
and
fcmovu
fistps
mov
jmp
imul
jae
inc
das
mov
stos
pop
mov
mov
aam
mov
mov
mov
push
cmp
jl
pop
mov
fs
stos
push
int3
jns
aam
fidivs
pop
xchg
aaa
insl
es
jns
pop
outsb
push
mov
push
xor
or
popa
sbb
xchg
aaa
pop
inc
imul
xchg
insl
repnz
in
push
repnz
ret
jecxz
ret
out
fs
mov
fstpl
adc
arpl
shl
sbb
inc
cmp
mov
loop
mov
lret
addr16
cmp
insb
inc
xor
shrb
fisubrl
popf
inc
div
clc
fisubs
mov
aad
imul
mov
ljmp
iret
push
icebp
fadds
fidivrl
shll
nop
jne
jmp
fimuls
outsl
mov
cmp
pop
repnz
pop
jp
fisubs
dec
xor
inc
inc
loope
sub
int
stc
aad
dec
cmpsb
adc
sbb
icebp
sub
dec
in
cmp
mov
add
jbe
addr16
mov
das
mov
jae
std
lods
push
fisttpl
int3
jge
rorb
jecxz
sbb
mov
push
popw
xor
es
in
mov
sub
in
add
mov
adc
mov
jle
aas
out
jle
data16
int
addb
add
mov
insb
testb
xor
sahf
in
jg
jnp
test
cmp
inc
sbb
fwait
sahf
repz
sbb
adc
sbb
jecxz
pusha
pusha
cmp
aam
lea
or
adc
std
icebp
shll
pushf
mov
rclb
ja
fwait
pop
mov
call
subl
repz
inc
mov
cmpsb
pushf
push
adc
xchg
add
push
jecxz
push
popf
cld
cmp
leave
jge
mov
dec
imul
fwait
inc
mov
jg
fdivrs
mov
es
arpl
inc
adc
push
fimuls
pop
mov
pop
fnop
and
ss
sub
add
push
call
lds
in
jl
movsb
pop
mov
mov
cmp
rcll
jno
mov
or
arpl
sbb
mov
pop
test
bound
shrb
out
push
jns
mov
test
fmuls
mov
aad
mov
adc
push
pusha
icebp
stc
sub
sbb
xor
loopne
cli
out
cmp
or
hlt
lret
int
stos
or
sbb
push
pop
sub
outsl
dec
testb
ss
mov
movl
repnz
sub
pop
mov
dec
andl
mov
inc
test
shr
shrl
xor
pop
xor
fsubl
push
lds
ss
imul
add
pop
icebp
or
inc
cs
imul
jecxz
out
jl
imul
sbb
fnstenv
aas
jge
cmp
iret
mov
or
mov
ficomps
std
test
nop
sub
in
adc
daa
shlb
mov
rorb
mov
mov
mov
insb
push
fdivrl
xchg
lcall
in
jno
mov
inc
xor
add
sub
and
or
inc
xchg
mov
mov
or
pop
cmp
jp
fildll
loop
mov
dec
or
cmp
sarl
ret
mov
cmc
rcl
mov
jecxz
sbb
jmp
push
adc
popf
ja
ret
cmp
in
sar
or
daa
loopne
mov
lds
loope
daa
or
or
lods
push
repnz
jae
or
enter
stc
cmp
pusha
lret
out
pushf
jnp
inc
test
mov
lods
cs
sbb
lea
push
and
and
cld
push
adc
lcall
cmp
test
push
loop
sbb
pop
rolb
xchg
mov
gs
scas
pop
sbb
in
push
data16
jb
clc
imul
decb
rcl
test
lods
pop
into
sub
sbb
mov
sub
xor
pop
pop
test
mov
call
adc
test
rcrb
pop
or
sub
or
or
pop
mov
bound
movsb
lock
dec
inc
add
movsl
push
sub
cmc
jge
pop
pop
jg
add
subb
lds
mov
dec
sar
pop
in
data16
and
push
and
mov
cmp
stos
dec
sbb
insb
mov
inc
je
aaa
sbb
aam
mov
mov
jo
je
shr
jns
fildl
add
out
mov
mov
push
mov
pop
ret
push
movsb
daa
fidivrs
ss
fs
call
dec
sub
jno
mov
cmp
jns
mov
and
add
mov
imul
mov
shl
xor
dec
popw
xor
sbb
cli
adc
repnz
daa
enter
lock
lods
inc
push
cltd
enter
arpl
jnp
add
pop
cs
sti
addr16
subb
jmp
aam
lock
sbb
fs
jbe
mov
pop
cmp
mov
movsl
adc
pop
leave
rcr
sub
icebp
mov
push
cmc
daa
adc
xor
lods
shl
popa
mov
jb
sub
lock
stos
pop
out
sbb
lcall
imul
mov
cmp
daa
ljmp
sub
sti
mov
leave
sbb
pop
cmp
call
xchg
jo
inc
clc
sti
or
lds
push
fildl
mov
pop
xor
aam
aad
movsb
ja
repz
test
push
lea
in
or
jl
test
daa
xchg
and
pop
adc
add
aas
lock
mov
leave
in
sbb
push
fistpll
or
push
mov
or
sbb
adc
js
movsb
inc
and
xchg
scas
xchg
sbb
sti
insl
pop
ror
xchg
cltd
aaa
or
movsl
add
jg
fists
push
dec
xor
xchg
xor
add
jp
sbb
lock
or
mov
jecxz
adcl
movsb
jmp
js
cmp
ret
sub
inc
jge
dec
ret
ja
stos
scas
pusha
fisttpll
ljmp
pop
mov
xor
inc
std
lock
inc
insb
inc
push
push
lods
pop
mov
insb
loop
push
sub
fwait
pop
mov
hlt
call
xchg
lahf
and
sahf
mov
int3
mov
xor
jle
repnz
lret
sbb
inc
push
ret
dec
cwtl
scas
dec
cli
das
jle
and
stc
adc
cmp
cwtl
mov
mov
xchg
xchg
or
add
lock
push
inc
fidivrl
in
cs
pop
mov
cltd
negb
ficomps
sbb
shll
cmp
mov
or
jmp
sbb
repz
scas
mov
inc
imul
stos
add
test
jg,pn
rorl
mov
out
mov
test
sbb
xchg
pop
xor
movsl
lods
jae
jmp
cwtl
in
lahf
lea
xchg
es
je
push
jno
das
add
mov
cmpsl
pop
cmpsb
pop
xchg
pop
xchg
dec
movsl
mov
pop
int3
push
mov
pusha
nop
lea
aad
dec
bound
sbb
fldcw
push
in
jp
add
int
leave
jbe
call
dec
test
fistpll
js
mov
call
lds
and
sub
inc
out
jne
aaa
lret
adc
pop
mov
ret
loope
jp
iret
jne
cmc
xchg
push
xor
mov
xchg
mov
icebp
cs
mov
rcrl
pop
das
fisttpll
mov
dec
adc
cli
or
mov
sub
mov
jmp
mov
sub
push
xor
aam
lahf
and
jns
add
les
push
ljmp
or
sub
jne
imul
or
add
xorb
in
lds
jle
dec
imul
push
addr16
xlat
pusha
mov
lods
roll
push
gs
fwait
cmpsb
mov
sbb
pop
xchg
add
jl
fwait
pop
adc
je
jecxz
subl
insl
js
pop
dec
sbb
mov
stos
adc
scas
mov
jne
jmp
test
das
jae
mov
cmp
push
mov
in
fstl
push
add
stc
sahf
cmp
sbb
int
jl
lods
clc
popa
std
cmpsb
lds
jp
out
sarb
jne
icebp
clc
xchg
cmp
in
out
call
push
pop
sub
sub
mov
sub
int
shlb
jg
cli
xor
xchg
mov
rcrb
lret
adc
and
fxch
jle
sub
and
adc
mov
sbb
fcoml
ds
and
cmpsl
fistpl
or
jae
ficoms
xor
jno
or
out
push
sub
adc
sbb
adc
or
stos
push
pop
loopne
lcall
jge
movb
mov
adcl
loope
cs
sbb
shrl
loope
leave
pop
lret
lahf
sub
sbb
cs
repz
add
fnstcw
dec
dec
jae
ds
jg
mov
mov
or
cmp
adc
jl
jecxz
push
decl
hlt
rol
sbb
fstps
jl
hlt
ret
jbe
or
sub
pushf
push
mov
pop
ror
add
loopne
test
lock
or
popa
inc
pusha
cmp
movsl
mov
aas
xchg
mov
mov
jno
aaa
inc
or
iret
mov
inc
mov
sbb
jo
pop
pop
fdivrl
add
jl
dec
mov
scas
inc
add
cld
xor
push
insl
mov
mov
inc
mov
adc
test
or
outsl
jns
mov
xchg
testb
and
jg
add
fstps
inc
pop
or
mov
insb
push
stos
xchg
or
dec
insl
cmp
add
mov
rcrl
out
mov
or
sub
mov
and
fucom
int
inc
bnd
xor
icebp
cmpsb
cwtl
ds
es
data16
in
push
xor
pop
ja
in
out
jp
push
sub
jmp
mov
gs
or
jle
mov
xchg
sub
xchg
push
or
dec
rclb
or
add
ficomps
pusha
outsl
add
jo
ret
xor
pop
inc
std
shll
mov
and
add
mov
mov
and
mov
inc
es
mulb
popf
clc
dec
xchg
lcall
push
lret
stos
add
jl
xor
push
cmp
mov
sbb
popf
sub
jecxz
dec
mov
jbe
mov
xor
es
ja
je
mov
jnp
shrl
sti
insb
xchg
cmc
int3
inc
xor
in
cmc
data16
mov
or
sbb
lret
outsl
stc
mov
mov
push
popa
jle
cmp
mov
push
dec
aam
xor
mov
inc
mov
push
xchg
pop
push
cmp
popa
adc
test
push
mov
cmp
pop
loopne
sbb
cs
mov
aaa
ja
add
mov
enter
rolb
mov
lods
fsubp
add
adc
cmc
movsl
jecxz
xchg
lods
ljmp
stc
adc
xor
je
or
or
fidivrs
out
and
mov
lcall
mov
cmp
jl
lods
add
fwait
out
addr16
jae
sub
xchg
fmuls
add
mov
imul
out
add
mov
mov
dec
cltd
scas
rolb
sub
lods
add
mov
lret
leave
xchg
mov
mov
push
sbb
cmp
inc
jp
push
mov
adc
xor
out
and
imul
test
loopne
sti
push
cmpb
mov
xchg
lock
jecxz
sub
inc
call
and
movsb
arpl
mov
sbb
roll
icebp
mov
sti
jne
mov
push
insl
out
test
mov
call
js
xchg
or
test
sbb
mov
hlt
fwait
jb
push
pop
push
addr16
xchg
cmp
aam
pop
nop
pop
hlt
mov
and
in
dec
sub
and
ljmp
roll
dec
push
adc
mov
mov
pop
inc
xchg
test
hlt
pop
std
adc
push
movsl
xor
daa
nop
lds
sbb
add
icebp
xlat
lea
add
fidivrl
inc
and
xchg
addr16
sbb
int3
adc
sub
cmp
fnstsw
sub
jb
push
enter
scas
in
jmp
stos
xchg
or
jg
and
sbb
jo
or
dec
sub
ret
add
es
sub
xor
xor
jp
xlat
mov
roll
cld
lds
popa
add
mov
xchg
inc
imull
and
faddp
or
test
lret
repz
dec
lahf
jg
testl
cmp
out
add
rcr
insl
les
mov
icebp
push
hlt
inc
aas
repnz
movsb
jne
mov
repnz
cmp
push
adc
xor
mov
add
jl
xor
push
testw
lds
pop
xchg
adc
in
arpl
in
divb
fs
sbb
pop
or
lcall
cs
cmc
cld
and
xor
enter
in
xor
les
or
and
orb
push
or
loopne
jne
push
aas
and
jp
push
gs
mov
or
mul
sbbl
jle
and
jg
shll
in
push
incb
xor
mov
and
stos
adc
pop
push
lret
sahf
xor
scas
mov
enter
sbb
xorb
pop
pop
xchg
aam
divb
fisttpl
xchg
in
stos
lds
sti
inc
addr16
insb
test
jae
push
push
outsl
push
sahf
ret
roll
in
mov
lcall
inc
in
mov
mov
enter
repz
sub
mov
adc
out
mov
decl
mov
inc
scas
xor
jl
cmp
push
pop
outsl
and
das
push
popf
push
mov
out
pop
and
shrl
out
or
jno
and
mov
xchg
push
adc
sbb
add
mov
pop
orl
sti
call
add
test
sbb
xchg
mov
rorb
push
jl
and
movsl
mov
test
xlat
aas
nop
mov
push
adc
push
and
xor
sbb
dec
pushf
xchg
jmp
sbb
repz
enter
cmc
inc
jp
lds
mov
and
lret
and
inc
and
push
sub
test
cmc
mov
leave
lret
fcmovne
lahf
daa
or
icebp
decb
adc
aam
adc
bound
jbe
ds
mov
jnp
jnp
in
ljmp
xchg
mov
inc
shll
lods
sub
aaa
popa
push
enter
iret
sarl
add
xchg
push
pop
in
lcall
cmpsl
lret
movsb
mov
test
daa
adc
lds
mov
mov
lods
push
daa
push
sub
dec
cmp
and
xor
sbb
sub
lods
ret
out
cmp
dec
dec
inc
lcall
inc
jle
push
cmp
push
xor
cwtl
shrb
adc
or
inc
sub
bound
stos
mov
nop
in
shl
lret
mov
scas
popf
lock
rorl
cmpsb
pop
xor
inc
jnp
cmpsb
dec
pop
xchg
js
xchg
xchg
push
int
ret
or
xor
iret
andl
lock
mov
or
push
xor
cmc
scas
jno
jg
pop
sub
je
movl
and
enter
scas
cmc
je
repz
gs
andl
sbb
test
das
shlb
sub
inc
pop
outsb
mov
adc
lahf
push
sbb
cltd
ljmp
and
lock
out
scas
repz
xchg
lods
push
gs
les
loope
loopne
dec
xchg
push
popf
pop
or
xchg
rorl
inc
out
jo
leave
hlt
int3
jle
or
nop
adc
inc
in
adc
iret
add
adcb
push
in
lds
loope
jo
pop
scas
push
inc
mov
push
fs
xchg
push
inc
xor
es
icebp
mov
xchg
mov
fwait
adc
clc
dec
outsb
stos
xor
mov
rorb
imul
pop
pop
and
inc
add
mov
add
lret
test
jmp
or
lret
ljmp
mov
pop
mov
jnp
cmpsl
nop
cmp
lcall
daa
loope
xor
push
inc
test
iret
das
in
sub
dec
into
add
bound
add
xchg
lock
or
call
fadds
fadd
jl
sbb
xor
inc
insb
push
xchg
push
pusha
jge
sub
lret
dec
cmp
pop
testl
icebp
js
xchg
ret
pop
adcl
arpl
and
jmp
or
cmpsl
in
mov
cmpb
mul
mov
les
dec
jns
lret
stos
inc
sub
lea
xor
jne
xor
push
popf
push
or
cwtl
jge
lret
xor
cmpsb
pop
dec
dec
enter
push
sub
jle
or
mov
and
int
inc
ss
insb
jae
imul
or
rol
gs
add
and
lcall
orb
roll
xchg
push
and
sbb
or
add
pop
jae
adc
mov
push
inc
pop
push
fstpl
jmp
mov
sbb
lock
xor
push
js
push
mov
xchg
insl
push
mov
fildl
gs
mov
adc
cwtl
inc
jo
roll
add
sub
or
popf
mov
cmpsb
jmp
cmp
arpl
ret
dec
lock
and
scas
sub
dec
mov
sbb
lods
jp
mov
outsl
notl
fdivrl
dec
sbb
rcr
mov
pusha
in
adc
sbb
jno
sti
xchg
stos
push
std
in
fnstsw
cmp
fdivrp
mov
inc
cmp
dec
or
sahf
xchg
push
fistps
sbb
roll
cmp
push
dec
shrb
dec
mov
add
inc
xor
or
lcall
push
or
pushf
sub
sbb
xchg
call
push
insl
jl
mov
imul
dec
leave
xor
test
popf
fildl
andb
push
dec
pop
lcall
dec
mov
push
int3
ret
push
pusha
aad
sbb
imul
cmpsb
pop
and
xchg
imul
xor
lods
testb
sub
push
inc
das
jae
cwtl
and
and
movsb
orl
jge
xor
adc
mov
jecxz
jne
dec
mov
imul
push
mov
popa
add
jmp
xor
fstps
ret
dec
jo
adc
cltd
dec
jl
dec
int
dec
mov
add
dec
pushf
lea
adc
mov
adc
scas
mov
push
jecxz
aad
add
jl
insl
rolb
test
or
movsl
mov
std
sbb
lea
mov
dec
int3
and
mov
lcall
cli
xchg
aas
std
adc
pop
add
mov
xor
mov
mov
ljmp
jne
shll
testb
push
inc
lds
mov
in
jp
sar
loopne
adc
test
push
es
cmp
out
sti
push
loopne
dec
jg
sbb
and
std
pop
test
cmp
cmp
popa
loope
mov
jp
dec
mov
jmp
add
push
lods
sarb
cwtl
dec
xor
stc
push
ret
fdivs
aam
popf
bound
xorb
std
mov
sub
xor
popa
cmp
in
jle
cmc
sarb
jnp
rclb
lods
mov
xor
mov
iret
and
test
lea
ljmp
dec
cmp
inc
ret
lcall
icebp
inc
daa
add
add
lds
aam
ljmp
sahf
insl
dec
add
xchg
out
adc
scas
inc
sbbl
pushf
shll
lret
push
or
jle
aad
cld
jmp
push
pop
xchg
push
dec
in
mov
xchg
out
ljmp
push
inc
es
int
fimuls
shrl
push
pop
or
dec
add
sub
push
add
and
test
nop
rcl
test
stc
into
arpl
cmc
push
rcll
dec
jb
add
insb
cmp
push
xchg
mov
or
jg
fcmovne
sub
test
cwtl
inc
test
call
sbb
lret
aaa
cmp
sbb
push
arpl
add
fcomip
lods
subl
sub
push
sub
add
dec
add
pop
and
fidivrl
mov
rorl
add
pop
xchg
hlt
lret
insb
loope
movsb
cltd
idivl
sub
sub
popf
daa
in
arpl
sbb
ficoms
outsl
popa
ficomps
in
cmp
rorb
arpl
ljmp
cmpsb
sbb
xchg
imul
mov
lcall
fwait
cmp
adc
mov
enter
leave
sub
popa
in
add
mov
mov
inc
or
or
lret
add
push
xor
push
insl
ret
mov
mov
jo
jno
push
movsl
cmp
aaa
sbb
fs
xchg
repz
add
scas
xor
leave
add
lea
lods
test
and
shlb
sbb
push
ja
leave
movsb
das
js
aas
popa
stos
ret
dec
lret
pop
xchg
mov
cmc
sub
scas
outsl
lea
ljmp
gs
enter
pop
adcl
repz
insb
dec
xchg
sub
mov
js
sub
ficoml
mov
inc
leave
sti
pop
scas
stc
pushf
orb
mov
pop
pop
hlt
fcmovnu
ss
lahf
int
pop
dec
pop
sbb
mov
cmp
shl
cwtl
cmpsl
xchg
scas
xchg
inc
cmpsb
push
inc
xchg
lret
dec
mov
mov
das
or
mov
movsb
fisttps
and
sbb
cmpsb
insb
push
cwtl
cmp
adc
sub
adc
sbb
icebp
pop
push
cmp
jns
mov
mov
vaddps
xor
and
loopne
push
push
cmp
mov
mov
stos
adc
inc
pop
mov
xchg
test
push
mov
mov
out
pop
cmpsl
movsb
jp
idivl
bound
mov
dec
aam
in
pop
lcall
enter
sub
mov
enter
leave
imul
xor
mov
je
mov
pop
daa
lods
ss
fisttpll
push
inc
adc
xor
das
int3
cld
cmp
sbbl
mov
in
je
mov
push
test
mov
insb
jmp
and
mov
cmp
jb
jo
arpl
mov
movsb
mov
or
or
flds
lret
outsl
jl
test
inc
repz
adc
imul
pop
sbb
lcall
ja
stc
ret
int
dec
inc
push
add
fwait
cltd
adc
cmp
xor
in
rorl
dec
sbb
stos
pop
xor
sub
mov
gs
shl
jge
cmp
daa
pop
adc
sbb
mov
sbb
ret
loop
je
ja
sbbb
adc
mov
dec
lret
stos
fsubrs
mov
stc
and
mov
mov
xchg
repz
sub
mov
movsl
lahf
dec
insl
pop
int
sub
xchg
movsb
adc
xchg
arpl
inc
aaa
cwtl
or
outsl
dec
push
int
mov
and
clc
mov
pop
or
or
out
push
scas
sti
or
mov
clc
add
in
popf
push
cmpsl
inc
sbb
mov
fs
jnp
add
sti
ja
pop
cmp
fwait
es
test
mov
cmp
sbb
mov
shrb
arpl
mov
dec
jno
lock
hlt
jae
jmp
sbb
mov
inc
adc
ficompl
pop
cli
pop
add
pop
popa
and
in
out
leave
clc
xchg
pusha
jg
pop
sbb
dec
mov
add
and
cld
push
loop
aas
xlat
clc
loope
arpl
cmc
aad
popa
fcomip
sub
out
call
in
enter
into
or
mov
cmp
and
sub
repnz
out
into
and
mov
scas
cmp
and
inc
inc
test
and
sub
pop
popf
aaa
push
cmpsl
cltd
test
icebp
aam
pop
and
pushf
incb
mov
test
and
cld
leave
movsb
mov
pop
jmp
testl
and
mov
test
jecxz
xchg
les
cmp
mov
jge
insb
mov
xchg
clc
mov
in
movsl
cs
rcrl
call
jmp
lods
and
xchg
out
xor
iret
repnz
les
cmp
adc
add
mov
fiadds
jecxz
mov
les
sub
or
insl
pop
divb
rcll
std
xor
test
test
lock
cli
mov
les
cltd
adc
negl
mov
cmp
cmp
rcl
jecxz
addr16
dec
repz
dec
mov
lock
sub
clc
pop
inc
sub
clc
les
mov
stos
dec
ficomps
leave
pop
mov
or
or
push
adc
shr
sbb
mov
sbb
aad
jae
fistpll
sbb
shlb
jns
xchg
xchg
movsl
arpl
fdivs
int
nop
test
aad
jbe
cwtl
pop
xor
mov
insb
mov
and
xlat
dec
cmp
mov
adc
jnp
add
push
iret
mov
jecxz
aad
stos
add
imul
sahf
mov
sahf
rol
stos
daa
sub
sahf
dec
addr16
pop
jp
add
mov
das
bound
or
cmp
and
andb
push
fcos
inc
dec
inc
call
adc
stos
or
or
mov
test
test
pop
jae
xchg
std
jae
push
cmp
outsb
push
push
push
lods
sub
mov
fimuls
insb
lock
and
xor
sbb
subl
and
pop
aad
outsb
bnd
pop
in
sbb
pop
ror
xchg
popa
mov
sub
movsb
dec
paddq
popf
lcall
inc
mov
xor
dec
hlt
test
jecxz
loop
das
int
and
pop
aam
dec
inc
or
pop
and
or
daa
inc
sbb
rclb
icebp
mov
mov
sti
rcll
in
std
insb
adc
fcmovnb
add
test
mov
pusha
xor
jo
scas
push
std
lret
jns
mov
or
jecxz
inc
sarl
lret
out
jno
imul
int
shll
mov
fcomi
out
ds
or
cld
jmp
mov
lds
adc
push
push
cmp
sti
mov
mov
fstl
adc
pushf
cwtl
ret
push
mov
push
lods
mov
out
or
xor
xor
fs
cmpsb
push
sbb
decb
xlat
and
jmp
dec
pop
shll
inc
popa
adc
lods
xchg
sbb
inc
sub
jne
xor
cmp
xor
imulb
mov
push
mov
ja
pop
in
mov
jb
out
xchg
and
add
xor
arpl
cmpl
in
mov
shlb
mov
ds
jb
jae
sbb
rorl
sub
or
cmpb
icebp
adc
push
xor
adc
sahf
sub
scas
push
jbe
lock
imul
mov
loopne
jp
xor
imul
pop
jne
push
lcall
push
jmp
stc
push
cmp
cmp
popa
cmpsl
fnstenv
out
or
adc
adc
les
and
dec
rcl
pop
iret
mov
jae
cmpsl
inc
push
lds
movsb
mov
lea
xor
imul
je
nop
push
mov
pusha
xchg
adc
cmpsb
shll
push
icebp
ffree
pop
add
ja
xchg
je
cld
ss
inc
enter
sub
xor
sub
mov
adc
xchg
orl
test
mov
push
inc
adc
cwtl
dec
fidivl
cmp
aaa
push
test
mov
dec
push
cmpsl
mov
and
pop
aad
push
fnstsw
cmp
jo
insl
call
push
fcompl
pop
xchg
mov
adc
sub
es
aad
call
and
push
cmp
xchg
pop
xchg
pop
fildl
jns
rcrb
xlat
rcrb
sarb
cmp
fstpt
pop
pop
mov
push
ss
mov
outsb
iret
leave
loopne
add
in
jmp
or
insb
adc
mov
leave
fidivl
in
fnstcw
lock
lds
call
pop
cmp
xchg
cli
jno
adc
inc
das
xor
scas
icebp
arpl
mov
in
xchg
hlt
lcall
stos
lcall
jno
aaa
sub
inc
dec
sahf
pop
loop
lds
jmp
mov
inc
inc
push
rcll
xor
mov
sbb
adc
loopne
mov
outsl
and
cmpsl
cli
sbb
std
cld
fcompl
stos
inc
fnstcw
cmc
shll
xchg
inc
add
xor
jl
inc
cld
repnz
dec
aas
jae
add
xchg
js
int
lret
repnz
pop
adc
shlb
test
ds
xor
add
ror
sbb
aas
push
cld
cmpsl
push
andl
mov
loopne
data16
std
ss
aaa
mov
les
or
mov
inc
into
rolb
nop
dec
inc
mov
inc
lock
inc
or
mov
mov
xor
jo
sub
xchg
xor
dec
rcr
jmp
movsb
insb
sbb
inc
jns
dec
iret
xor
aas
jle
test
jg
dec
xchg
jbe
lea
out
adc
inc
mov
imul
std
addr16
ficompl
and
std
inc
xchg
fsubrp
call
xchg
push
in
or
stos
adc
js
cmp
int3
inc
dec
xchg
push
mov
cs
inc
adc
leave
push
adc
testl
repnz
test
divb
mov
mov
push
fldpi
add
movsb
fst
into
cli
jns
or
popa
mov
add
sbb
push
push
xchg
xchg
jb
sti
mov
fstps
div
fmul
push
in
test
jne
xlat
lea
imul
daa
xlat
ret
stos
inc
dec
movsl
dec
test
mov
cmp
mov
dec
pusha
ljmp
mov
adc
inc
and
jp
dec
bound
fbld
in
mov
insb
sub
int3
add
push
iret
pop
sbb
daa
push
xor
aas
fwait
lds
stc
lods
loope
lret
cld
mov
dec
mov
jbe
jp
loope
or
inc
cmc
pop
jb
clc
ljmp
js
cmp
cmp
mov
mov
test
lea
lods
bound
je
in
jle
jne
cmpb
push
ja
scas
sbb
pop
push
leave
pop
mov
and
leave
loope
or
stos
addr16
pop
ds
loopne
es
js
loop
sbb
xchg
stos
inc
fisttpl
pop
and
les
adc
testl
js
cld
dec
push
sti
jmp
insb
pop
out
les
stos
loope
addr16
mov
xchg
push
mov
xchg
call
sbb
adc
pop
dec
xchg
fidivrs
fdivs
xor
add
bnd
es
sub
xor
sbb
sub
mov
popa
and
pop
xchg
outsb
cmpsl
in
xchg
fisttpl
push
int3
pop
cmp
es
sbb
sub
fistpl
dec
push
jbe
repz
mov
jl
lcall
out
jne
and
dec
push
insl
cwtl
sbb
je
xchg
push
push
xchg
inc
push
mov
ret
js
int
jmp
popa
jl
mov
inc
sub
cmp
push
push
push
mov
xor
out
ja
mov
test
mov
jge
fcomip
mov
xchg
mov
int3
scas
jne
pop
movsb
inc
int
std
pushf
and
and
loop
sub
mov
push
lock
sahf
mov
and
mov
xor
ss
sbb
ret
sub
sti
xor
xchg
int3
mov
stos
mov
adc
cmc
and
dec
jae
popa
repz
jmp
jl
push
fists
xor
push
in
add
fwait
in
loope
mov
fs
ss
bound
lcall
cmp
cld
push
aas
std
jnp
and
xor
cmc
sbb
lods
xor
fimuls
repnz
lcall
scas
sub
test
xchg
daa
xlat
push
dec
cmpb
cmp
das
xchg
mov
je
js
popa
rcr
dec
and
int
gs
arpl
and
inc
cmc
cmp
mov
cmp
in
test
cmp
mov
les
fnstenv
js
loopne
pop
sti
outsl
pop
push
ljmp
inc
xor
xchg
xlat
inc
aas
sbb
or
fmulp
inc
sbb
movsb
das
iret
test
out
jne
push
sbb
lcall
test
sbb
aaa
out
dec
pushf
jne
sbb
hlt
dec
and
dec
sbb
mov
jns
pop
mov
ja
outsl
sbb
in
pop
aad
xorb
inc
sbb
xor
ja
pop
jne
ss
mov
cmpsb
call
daa
push
data16
outsl
cmpsb
out
xchg
xlat
mov
cmc
outsb
fisubrs
push
movsb
sub
add
pop
xchg
xor
jecxz
adc
hlt
shr
mov
pusha
je
push
pop
inc
and
aad
and
insb
push
inc
dec
scas
hlt
cmp
mov
jno
scas
mov
inc
pop
nop
add
jl
dec
pop
incb
rcll
out
xor
mov
ss
mov
jbe
aas
push
enter
in
in
mov
ss
scas
jmp
cmp
aam
cld
shrl
movsb
xor
dec
fmull
andb
daa
mov
imul
lret
xchg
pop
cld
outsb
rcrl
adc
dec
adc
popw
xor
xor
jbe
jl
xlat
or
pop
push
sbb
inc
es
test
mov
push
out
cwtl
jb
jo
ret
jo
cmpsb
pop
jb
stos
test
push
dec
in
shl
sbb
in
jnp
mov
push
push
cli
ljmp
jecxz
xor
fstp
dec
add
scas
imul
inc
sbb
out
sbb
inc
pushf
in
in
cmp
pop
jae
and
jne
sub
lods
idivl
lcall
and
out
or
cmc
mov
shrl
xchg
dec
mov
xor
ljmp
dec
xchg
jge
ret
push
lahf
xchg
das
stos
mov
jo
sub
push
lret
pop
jge
mov
cmc
addr16
pop
repnz
in
jo
push
push
scas
cld
jl
jl
pop
mov
xor
or
sub
loop
enter
outsl
mov
sti
push
cmpb
cmpsl
mov
push
push
or
repz
mov
jp
sbb
ret
dec
cltd
lcall
pushf
cs
imul
or
es
pop
pop
jge
sbb
add
out
aaa
orl
pop
test
pushf
inc
imul
pusha
mov
mov
in
aas
addr16
xchg
pusha
nop
outsl
jecxz
xchg
sahf
int
out
dec
sbb
push
cmp
sti
in
mov
rcrl
mov
xchg
pop
push
and
xchg
and
out
pop
pop
popf
inc
imul
lock
das
adc
das
sub
or
pop
or
lods
jmp
and
popa
loope
negl
mov
mov
lcall
and
jle
testl
loopne
xchg
push
jmp
repnz
and
cmpsb
push
pop
or
mov
jbe
dec
push
jnp
outsb
out
pop
rcrb
adcb
stc
adc
mov
mov
pop
adc
lock
jmp
inc
incl
xchg
dec
cwtl
sbb
in
sbb
xchg
push
push
scas
pop
cld
sahf
rcr
add
dec
mov
mov
xor
inc
dec
jmp
in
lret
aas
subb
jg
push
adc
inc
xor
jmp
xchg
cmp
jl
mov
std
sbb
jnp
sub
jns
int3
xchg
hlt
mov
mov
mov
sahf
sbb
sahf
ss
cwtl
xchg
xor
and
negb
xchg
aas
cmp
or
testb
mov
in
xor
sbb
inc
imul
int3
and
sbb
or
xchg
adc
xchg
movl
sub
clc
xlat
jne
and
into
mov
in
cs
stos
shll
add
movsb
add
dec
dec
inc
jno
pop
popf
xchg
fsubs
push
adcb
flds
sub
fwait
lret
fistpl
dec
fcomip
sbb
adc
hlt
xchg
sbb
fisttpl
sbb
cmp
or
cltd
daa
push
ja
pop
mov
mov
or
int3
jmp
lock
in
lea
xlat
insb
jae
imul
sbb
nop
or
jp
popa
es
xor
mov
inc
popf
lret
adc
shrl
jecxz
imul
sub
cmpsl
mov
adc
lea
inc
pop
sub
mov
popa
rol
mov
dec
xor
cwtl
sub
xchg
or
popf
out
and
xchg
lea
insl
and
push
xchg
cmp
in
loop
nop
cmp
dec
pop
xchg
dec
cmp
cmpsb
sbb
xchg
cmpl
cmp
leave
mov
orl
or
daa
movsl
jg
fldenv
dec
push
int3
fisubrl
mov
test
cld
cli
cmp
faddl
jne
and
push
and
inc
add
xor
jmp
xchg
push
es
push
and
push
cmc
add
add
das
shlb
and
int
pop
imul
in
jb
test
mov
stc
in
sbb
pop
xchg
or
dec
pop
sbb
jns
not
mov
sbb
sbb
sbb
popa
mov
inc
add
and
jle
mov
lods
vmaxps
mov
push
or
mov
lahf
xor
jno
xlat
call
dec
push
repz
cwtl
ss
and
test
inc
mov
mov
aam
inc
test
lret
fdivl
popf
or
sub
int3
pushf
mov
pop
pop
jecxz
xor
xor
stos
push
sahf
cld
jno
pushf
gs
imul
insl
stos
dec
jmp
cmpsb
push
cmp
lds
in
idivb
mov
clc
popa
movsb
test
test
shll
add
clc
or
xor
pop
sub
pop
dec
push
pop
mov
fwait
pop
fdivrl
imul
shr
push
jge
push
mov
lret
jns
jp
es
sub
mov
popl
in
fistl
mov
cmp
outsl
xchg
arpl
mov
pop
flds
cmc
xchg
lods
lds
xor
ja
ficompl
or
nop
pusha
sbb
jle
xor
push
test
test
ljmp
in
cmp
stc
pop
sub
sbb
lret
je
imulb
lahf
sub
sbb
arpl
cs
mov
clc
roll
dec
and
test
jmp
xchg
stos
icebp
hlt
testb
dec
push
call
ret
je
jo
lahf
insb
ret
mov
and
push
and
loop
xor
dec
jae
fnsave
mov
sarl
mov
dec
out
sti
idivb
test
and
sub
inc
gs
mov
fwait
dec
out
rcll
movsb
cmpsl
push
scas
cmpsb
mov
pop
push
ret
imul
shlb
sub
cmpsl
insb
jg
aad
xchg
frstor
pop
jae
xchg
cmp
insl
push
in
fimuls
cs
mov
push
push
push
scas
mov
xor
leave
or
je
sub
inc
loope
pusha
mov
shlb
cmp
fsts
divb
arpl
int3
inc
lods
jecxz
sbb
inc
xchg
fprem1
nop
mov
shlb
std
notb
and
and
into
push
mov
cwtl
les
inc
scas
xor
mov
int3
add
dec
lea
dec
inc
test
xchg
mov
in
repnz
cmpb
mov
enter
sbb
xor
movsl
fisubs
into
int
mov
jnp
add
xchg
imul
adc
mov
fnstcw
sub
je
jmp
and
xlat
sbb
and
inc
outsl
clc
fmuls
mov
push
mov
pop
jp
negl
xor
std
popf
cmp
sbb
jnp
adc
fistpl
clc
sub
pop
arpl
mov
mov
adc
sub
mov
pop
sbb
xchg
push
enter
add
xor
push
inc
sahf
aad
push
into
cmpsl
pop
pop
fisubl
mov
and
aas
mov
imul
xchg
lcall
std
sub
push
sahf
mov
xchg
or
dec
push
lock
repnz
fsub
pop
into
mov
jae
cmpsb
mov
jo
mov
fsubl
pop
test
xor
push
and
mov
push
ja
lock
push
xor
mov
jb
jne
sub
mov
lahf
mov
loop
mov
pop
int3
add
inc
popa
rcrb
fs
into
lcall
in
shll
jo
inc
imul
and
pop
dec
cmpsl
gs
movsb
andl
cmp
push
iret
xchg
popa
scas
sbb
int3
lds
jb
mov
xchg
loope
dec
sub
fnstcw
lock
xchg
lret
rcrb
int
xor
sbb
adc
pop
mov
sbb
sub
xor
mov
inc
push
cli
outsl
mov
stc
insl
sbb
or
mov
ret
lcall
pop
in
ss
or
int3
insb
inc
cs
xchg
dec
push
cmp
out
out
cmpsl
dec
mov
dec
xchg
add
mov
lods
sbb
dec
aaa
jge
bound
add
pop
movsl
sarl
and
push
scas
ja
insl
mov
push
sbb
adc
stos
lock
or
pusha
jbe
hlt
xchg
out
push
ret
repnz
jle
jp
cmp
lret
out
in
cmpsb
loopne
je
out
sub
cltd
cmp
mov
push
and
adc
popa
mov
rcll
jbe
mov
sub
fsubs
jnp
aas
xchg
fwait
pop
push
imul
leave
aad
insb
fcoml
in
xchg
or
aad
lcall
mov
icebp
imul
jmp
sub
push
sbb
cmpsl
mov
sub
rol
and
imul
dec
push
in
les
out
fs
out
jne
lock
xor
add
push
push
and
dec
adc
mov
mov
jne
push
aad
lcall
pop
loop
aaa
pop
imul
fmull
sbb
xor
subb
sbb
inc
fcompl
dec
sbb
push
push
inc
dec
xor
add
dec
sub
cmp
icebp
pop
jg
mov
xchg
mov
shl
push
lret
pushf
lods
ds
mov
repz
push
adcb
arpl
aam
mov
jb
pushf
insb
popf
loopne
arpl
dec
cmp
push
add
inc
iret
test
mov
and
sub
jl
scas
popa
xor
pushf
and
in
xchg
jae
fiadds
aam
sub
cmp
pop
ja
add
stc
xor
sbb
add
addr16
inc
pop
or
adc
lds
loopne
addr16
mov
add
popf
xchg
pop
add
popf
ja
jo
leave
call
sti
push
dec
and
popf
jne
fsubs
dec
pushf
lods
stc
inc
addl
or
in
lock
push
icebp
cmp
mov
outsb
sub
push
jb
sbb
cmp
and
das
nop
bound
mov
insb
pop
push
xlat
push
mov
xchg
or
sbb
lea
push
arpl
rep
test
lea
scas
sahf
out
mov
insb
push
outsl
add
in
sbb
loope
xorb
jo
clc
insl
sbb
mov
inc
mov
nop
fistpll
lods
or
pop
sbb
scas
mov
lock
pop
into
dec
mov
cmp
pop
xor
sbb
adc
mov
mov
sub
cmp
sub
add
push
xor
xor
pop
mov
jmp
dec
jmp
cwtl
mov
mov
sbb
mov
mov
popa
das
pop
adc
pushf
push
loope
dec
dec
cmp
inc
inc
mov
aas
pusha
pop
add
roll
jb
cmp
pop
ds
sub
pop
jno
outsl
or
push
insb
mov
fwait
cmc
jle
mov
dec
fdivl
pop
jbe
into
decb
xor
mov
fadd
sub
insl
mov
mov
sbb
dec
fcoms
xor
pop
jnp
jbe
cltd
movl
insl
test
cld
arpl
pop
sub
add
lret
mov
dec
pop
loop
pop
je
push
aam
push
add
ficomps
jmp
mov
jmp
iret
jno
imul
popl
fcompl
sub
hlt
ljmp
push
das
cmpb
cmpsb
xchg
insl
lret
cmp
aam
mov
xchg
push
xor
inc
jmp
sbb
xlat
xor
mov
jg
jmp
and
mov
cmpl
jae
fiadds
mov
adc
call
mov
jo
mov
adc
mov
push
into
inc
sbb
add
mov
ss
aad
push
jge
xor
lcall
mov
leave
test
into
aad
ret
std
inc
cmp
cli
call
xor
shll
lods
imul
inc
es
adc
add
scas
pop
pop
je
and
mov
pushf
les
and
push
xchg
xchg
jbe
inc
ds
movsl
outsl
stc
xor
repnz
ret
jno
bound
sub
jbe
add
arpl
sub
xchg
jb
or
xor
mov
xor
add
pushf
pop
dec
pop
mov
arpl
pushf
pop
out
nop
mov
add
fwait
clc
clc
pop
xor
adc
inc
lret
mov
xchg
or
cmp
data16
dec
xchg
lret
setle
filds
xchg
stos
sub
arpl
rcrb
inc
push
cmc
adc
inc
cs
and
les
ret
loope
addr16
dec
jmp
movsl
pop
and
pop
push
pushf
inc
inc
mov
dec
mov
adc
je
addb
negl
or
scas
les
jnp
xlat
pop
cmc
push
sarb
sbb
cmpb
xor
cmp
xchg
pop
jo
mov
test
pushf
sub
jo
lret
std
je
mov
movsl
icebp
mov
hlt
imul
lods
out
stos
ret
cli
sti
in
test
push
loopne
daa
mov
js
push
xchg
pop
out
addl
fdivrs
dec
nop
mov
push
add
mov
add
dec
add
mov
mov
pusha
add
add
push
and
fistl
fistps
enter
imul
pop
pop
dec
mov
int3
ljmp
xor
xchg
mov
outsb
jno
icebp
xchg
shll
ss
cmp
sahf
xchg
mov
jb
out
daa
fbstp
aam
gs
fcomp
out
sti
xor
js
pop
mov
icebp
push
and
sub
fisubrl
dec
dec
add
mov
adc
outsb
je
cmpsb
sub
js
loope
or
inc
test
popf
mov
push
mov
inc
call
ds
iret
mov
xor
das
cmc
pop
rcrl
adc
aas
push
andl
lahf
int
gs
lcall
mov
push
enter
pop
rcll
ret
push
mov
push
or
adc
jecxz
iret
ja
jo
lret
lahf
xchg
push
jae
push
popf
add
loop
mov
nop
and
jmp
and
loope
shll
bnd
sbb
lcall
mov
ja
in
cmp
xchg
int
pop
sbb
inc
inc
pusha
pop
leave
lock
vcvttpd2dq
dec
sbb
mov
and
and
aam
sub
sti
and
inc
add
xor
mov
xlat
cwtl
orl
mov
aaa
dec
xor
loope
or
push
fwait
lahf
aas
jl
push
inc
fistl
jmp
out
and
std
sbb
sbb
out
xor
ljmp
imul
mov
outsl
push
or
cmp
movsb
jg
lods
jns
sbb
dec
out
mov
out
push
mov
mov
push
adc
nop
mov
rcl
sbb
mov
mov
ds
mov
cmp
jecxz
stos
jle
daa
push
jl
orb
add
fs
dec
inc
mov
push
mov
adc
out
adc
xchg
jecxz
xchg
les
pop
cs
out
mov
popa
es
cmpsl
ret
cltd
shrb
push
xchg
popf
adc
nop
pop
aas
dec
sbb
mov
adc
jne
jle
mov
stos
adc
loopne
xchg
pop
xor
mov
into
inc
add
out
aaa
push
push
icebp
mov
xchg
cmpsb
fbld
scas
pop
pop
lock
notb
shll
mov
jno
sbb
cmpl
mov
adc
testl
stc
push
mov
adc
add
sub
fcmovbe
jno
mov
cmc
rcll
rcrb
cmp
ret
pop
push
hlt
fs
ss
mov
sbb
sub
add
out
shlb
subl
xor
rorb
inc
in
cmp
xor
push
cld
push
dec
scas
rcl
pop
loop
subl
fstl
in
mov
sub
jmp
xchg
xor
iret
sub
fcmovb
cmp
cs
inc
push
into
add
cld
movsb
scas
push
adc
cmpsb
lahf
dec
popa
xor
iret
dec
lret
mov
enter
mov
decl
xchg
mov
or
testb
mov
inc
dec
xchg
add
stc
xchg
js
mov
pushf
leave
fs
dec
fs
gs
insb
cmc
popf
dec
bound
mov
nop
lahf
pop
nop
dec
into
or
and
jp
push
aas
lods
sbb
movsb
inc
hlt
repnz
push
das
xchg
cmp
cmc
mov
and
cli
xor
cltd
push
in
push
nop
pop
cmpsl
and
out
mov
inc
int3
sub
hlt
or
xlat
xchg
pop
mov
xchg
lss
fs
cmp
bound
int3
inc
jge
mov
ret
das
aas
dec
adc
and
repz
hlt
pop
inc
mov
pop
int3
cmpb
pusha
push
and
mov
lahf
push
or
mov
xor
xor
fisubs
outsb
pop
les
jl
mov
fsub
and
cltd
mov
test
xor
jg
dec
push
in
icebp
js
outsl
or
mov
subl
ds
xor
push
test
inc
adc
xchg
sbb
roll
push
push
sbb
jmp
cmp
pop
frstor
jg
sub
jecxz
fcomps
popf
lods
loop
xor
in
shll
inc
ret
xor
mov
dec
sub
sarb
loope
lock
sbb
mov
mov
jbe
push
pop
das
loop,pn
sahf
jbe
aad
mov
mov
enter
daa
lret
nop
add
and
and
dec
movsb
cmp
xchg
and
sub
sahf
fiaddl
fistpl
pushf
jns
pusha
cmpsb
dec
jp
sub
fisubs
xchg
leave
jle
mov
mov
ret
in
aaa
aam
mov
hlt
mov
fldt
in
dec
fcomps
and
adc
out
repz
jecxz
push
pushf
xchg
in
cmp
addr16
inc
out
rcrb
loopne
cli
ret
adc
add
test
ss
dec
push
cmc
test
dec
or
adc
out
and
pop
cmpsl
cltd
loopne
insl
mov
and
pop
enter
sbb
stc
mov
int
movb
pop
mov
inc
fsub
out
cmp
jp
mov
popf
stos
mov
stos
sbb
push
decl
jno
dec
push
hlt
fisubs
and
and
sbb
insb
mov
cmp
xchg
cld
push
sti
enter
hlt
fidivs
and
jbe
mov
cmpsl
or
jmp
push
xor
mov
dec
jbe
jle
push
mov
pop
or
xchg
add
inc
imul
and
sub
adc
sti
push
fidivs
dec
sbb
in
mov
dec
jbe
pop
jne
orl
int3
cmpsl
mov
push
addl
lods
mov
in
cmc
lret
push
movl
fisttpll
mov
dec
jp
es
stos
bound
mov
xchg
pop
jns
cwtl
out
jmp
sahf
jbe
push
stos
mov
ss
in
push
js
addb
test
loope
pop
gs
icebp
and
pop
sti
push
dec
pop
leave
aam
jns
push
sub
inc
add
decl
and
jo
xor
xor
rol
stc
push
ret
mov
inc
stc
int
ret
out
mov
xor
or
int
add
mov
shlb
test
int
pop
xlat
lock
hlt
pop
movsb
clc
rolb
rcll
and
arpl
movsl
pop
jge
cmp
mov
dec
cmc
jg
dec
cmc
sub
adc
jl
sub
sbb
mov
cmpsl
cmpsb
test
inc
sbb
xor
and
or
stos
addb
loopne
mov
scas
and
inc
sub
js
inc
lcall
mov
jl
ljmp
pop
fadd
pcmpeqw
cmp
notb
lods
dec
out
mov
dec
enter
add
jns
popf
xchg
add
stos
mov
pusha
xchg
stos
test
in
pop
enter
jo
or
popf
aas
xchg
loope
inc
mov
sarl
stos
mov
and
push
ljmp
or
adc
jb
testl
mov
sub
lods
mov
mov
dec
movsl
insl
mov
es
imul
test
jg
outsb
ret
sub
push
lret
punpckhbw
pop
cmpsl
and
push
popa
std
in
daa
or
xor
mov
mov
mov
pop
loope
sar
push
icebp
push
pop
loop
pop
test
mov
lods
in
dec
mov
inc
sahf
daa
mov
sub
ljmp
int
test
jnp
sub
dec
nop
sbb
and
loopne
cmc
xchg
cmpsb
imul
jne
popa
repz
push
xor
or
fnstcw
xchg
out
sub
cmpsb
pop
arpl
pop
insl
adc
mov
inc
int3
ret
in
arpl
pop
dec
mov
sarl
mov
aam
push
push
mov
das
arpl
xchg
sbb
xchg
push
rcl
repnz
test
xor
lcall
fldenv
mov
hlt
roll
enterw
mov
mov
mov
gs
xchg
popa
mov
jmpw
fwait
xchg
stos
jg
mov
ss
xchg
leave
inc
sub
mov
xor
ret
stos
cs
stc
pop
icebp
xchg
rclb
cmp
decl
pushf
out
inc
aam
xchg
lods
pushl
mov
mov
inc
fsubs
stos
adcl
ds
or
push
pop
jp
add
inc
aam
in
jae
lock
stos
cmp
int3
mov
pop
aam
mov
sti
inc
call
mov
jmp
add
out
fisubs
cmp
in
inc
fbstp
scas
addb
push
push
add
pusha
gs
jg
gs
mov
les
mov
pop
lcall
sbb
and
inc
xor
jmp
cmp
lret
mov
inc
adc
or
xchg
xchg
call
jb
jecxz
push
inc
mov
sbb
pop
fst
out
add
ss
cli
mov
enter
adcb
pop
mov
loopne
das
xor
jbe
push
repnz
addl
ja
psubusb
lahf
jmp
lcall
ja
pop
loop
sbb
aad
lret
enter
mov
sub
mov
insl
jg
cmpb
push
push
jne
mov
xor
pop
cmpsl
or
das
push
xchg
push
outsb
insb
insl
and
sub
push
jb
add
mov
test
fs
movsl
and
popa
popf
push
xor
mov
dec
mov
js
inc
aas
into
jne
insl
repz
pusha
test
inc
cwtl
fnstcw
sbb
call
and
pop
movsb
test
shl
jge
mov
cwtl
sub
js
and
das
daa
push
pop
popa
adc
into
xchg
push
cmpsb
divb
mov
xchg
adc
sahf
sbb
movsl
add
mov
stos
scas
icebp
fldcw
push
sub
dec
shlb
in
cmp
xchg
into
push
pusha
scas
addr16
repz
es
pop
aas
out
push
clc
xor
fadds
add
dec
mov
jns
addr16
mov
push
jmp
int3
pop
inc
pop
sbb
setbe
es
leave
aaa
dec
jmp
sbb
popf
loopne
xor
inc
in
xor
and
cmp
outsl
mov
or
scas
pop
jb
xor
and
sbb
cmp
xchg
into
nop
aaa
jmp
aam
adc
inc
stos
jecxz
cmp
inc
push
push
jns
ljmp
sbb
mov
mov
int
fwait
xchg
cmpsb
lds
push
adc
sahf
pop
push
sub
cwtl
sub
dec
xchg
xchg
jns
sbb
lret
inc
dec
int
mov
in
mov
fnstcw
and
scas
xor
sub
fucom
inc
inc
arpl
and
jge
data16
out
add
dec
pop
scas
fisubrl
scas
jl
imul
jno
push
or
faddp
sub
pop
mov
popa
or
mov
iret
inc
lds
mov
popaw
aas
and
cmp
test
outsl
repz
call
pop
cmp
insl
cmp
mov
sbb
es
in
mov
sub
lea
movl
hlt
fiadds
lea
lret
pop
cmp
cmpsl
and
lret
out
das
ss
popl
pop
add
mov
or
pop
stos
push
sub
mov
dec
jnp
push
push
jo
into
mov
xchg
or
mov
mov
les
inc
out
lfs
jbe
adc
jmp
or
ja
pop
stc
shlb
mov
lcall
add
addb
pop
inc
cmp
add
mov
popf
insl
push
mov
aad
and
jp
je
loopne
and
rorl
xchg
xor
pop
movsb
arpl
and
insl
pop
and
sub
das
enter
dec
jge
push
or
inc
rorb
fisttpl
and
aas
out
push
int
push
in
pusha
mov
mov
adc
mov
sub
dec
andb
movsb
mov
or
cmc
dec
arpl
das
loop
ja
lods
daa
movnti
daa
fxch
ret
ret
push
pop
loope
mov
adc
incb
mov
into
andl
pop
cs
push
jbe
inc
lret
sub
add
mov
sbb
and
pop
insl
out
sub
sub
xchg
out
dec
push
mov
out
fstps
sti
stc
pop
not
pop
and
mov
in
dec
pop
or
jo
fmul
mov
cwtl
add
mov
mov
mov
sub
and
mov
cmpsb
sbb
test
and
pushf
imul
jle
jmp
test
xor
addr16
mov
mov
jns
rcl
push
pop
out
sub
pop
icebp
mov
int3
sub
or
test
enter
test
cvttps2pi
out
sbbl
or
push
and
fcompl
leave
push
rol
xor
and
enter
test
xchg
cmp
and
mov
and
sti
dec
testl
inc
push
daa
lods
lea
popa
pop
pop
je
xchg
cmp
nop
enter
outsl
leave
sbb
mov
sti
call
movsb
arpl
into
or
add
dec
ds
nop
mov
rclb
dec
push
ljmp
mov
mov
mov
std
dec
xchg
or
add
jge
in
cmpl
nop
scas
add
ret
jl
rcrl
dec
adc
shlb
sub
test
dec
fildll
sbb
push
daa
mov
popf
stc
pop
sbb
and
xor
or
cmpl
sbb
jecxz,pn
rorb
test
and
imulb
push
inc
sbb
rol
aam
int
fwait
jae
xchg
jl
and
mov
mov
clc
push
jb
cmc
adc
leave
mov
ljmp
sub
mov
sti
inc
sub
push
dec
outsl
ss
out
cwtl
mov
pop
aaa
dec
cmp
and
mov
repnz
sbb
lds
mov
imulb
sbb
jp
jbe
les
mov
mov
sti
inc
int3
movsl
mov
test
xor
or
fnstsw
pusha
sahf
cs
mov
sahf
test
les
js
ret
ljmp
xchg
mov
jp
mov
loope
pop
xchg
jne
outsb
dec
push
lea
fcmovnbe
je
fmuls
adc
cli
aad
dec
mov
add
fisubrs
push
lods
push
repz
sub
sub
xchg
es
pop
xchg
daa
mov
outsl
cmpsb
ja
pop
in
in
xlat
add
dec
sbb
ja
popf
andl
sahf
pushf
dec
fidivl
lock
fwait
pop
scas
out
and
repnz
test
andb
add
inc
aad
and
and
andl
or
icebp
push
or
jns
jge
sti
adc
mov
cmc
sarw
sub
dec
lahf
or
out
insb
jl
and
push
invd
sti
pop
outsb
aam
mov
push
loopne
add
shlb
and
push
sub
loop
leave
cmp
add
ss
stos
repz
push
mov
jnp
add
addb
jns
aad
and
push
sbb
inc
cltd
inc
inc
loop
dec
fsts
and
movsl
xchg
push
and
cmp
mov
sub
jae
add
sub
ljmp
dec
cld
fstpt
js
shrl
popf
mov
inc
dec
push
test
dec
mov
sbb
js
outsb
dec
or
cmpsl
fiaddl
je
jl
jb
dec
dec
dec
repnz
add
test
lret
in
push
push
call
test
pop
cmp
push
cmpsb
pop
loop,pn
mov
fucom
xchg
pop
fstps
jg
lods
movsb
inc
push
dec
pop
ret
in
and
dec
sbb
jl
inc
push
cs
loop
xor
xor
cmp
in
pop
lods
dec
cmpsl
jo
aas
xchg
dec
daa
pop
pushf
ja
inc
inc
pop
icebp
push
jne
inc
sbb
add
repz
stc
das
ljmp
add
push
jno
cld
and
xlat
cmp
je
ljmp
jne
mov
lahf
lods
loopne
and
fs
xchg
cmp
movsb
xor
cmp
cmp
cli
jg
push
in
inc
xchg
sub
fwait
insb
movsl
into
mov
icebp
sbb
in
dec
lds
imul
sub
mov
outsb
lods
in
rolb
int
mov
fsubs
mov
std
add
jge
aaa
xorl
mov
adc
pushf
xchg
xor
dec
pop
ljmp
sub
leave
lret
jge
dec
dec
cmc
shrb
add
or
sbb
inc
push
cmp
jecxz
pop
movsl
xchg
in
cmp
mov
mov
in
lds
es
or
xchg
dec
push
in
test
ss
sbb
in
aam
and
cmpsl
xor
jle
and
add
pop
cmp
addr16
aam
popf
add
jle
jae
popf
dec
sub
pop
xchg
jge
or
test
aad
jne
xor
push
push
xor
lds
pop
jmp
test
adc
and
sbb
jecxz
ss
cmp
and
inc
fwait
sbb
std
inc
push
add
fldcw
mov
xchg
add
xchg
or
or
loop
mov
dec
dec
jae
ja
js
push
jae
sbb
or
test
test
inc
xor
mov
xchg
in
mov
inc
arpl
sbb
movsl
sbb
xor
addl
xchg
cmc
mov
inc
aaa
dec
sbb
testl
add
cli
or
sbb
dec
push
enter
push
mov
fnstcw
fucomp
pop
push
test
andps
adc
out
bound
or
scas
dec
xor
enter
enter
pop
xchg
pop
loopne
jecxz
ret
and
cmp
push
and
test
push
sbb
sbb
hlt
jmp
dec
add
and
leave
mov
test
mov
or
dec
fwait
cli
cltd
adc
shl
sbb
inc
cmpsb
test
test
adc
jo
cmp
ds
or
lret
dec
sbb
cld
sbb
aam
subb
cmc
add
outsb
imul
test
xor
lods
mov
jl
mov
pushf
adc
mov
lret
or
faddp
popf
shrl
sub
sub
lret
fbstp
movsl
dec
xor
push
hlt
xchg
test
fsub
push
and
cmp
pop
jge
lahf
mov
mov
clc
insb
push
push
fidivs
cltd
xor
xchg
es
sbb
test
out
hlt
stos
popa
adc
fisttps
ljmp
mov
push
cmp
jp
adc
call
rcrl
lret
ret
pop
sti
mov
stos
pop
mov
pop
sbb
xchg
int3
jecxz
inc
add
andl
scas
stc
out
fisubrl
lods
and
lcall
call
sti
cmp
pop
jl
pop
stos
into
xchg
lock
arpl
xor
stos
notb
and
cmp
test
dec
jmp
rcrb
or
cmp
mov
inc
ljmp
add
jb
incl
insl
inc
push
add
sbb
and
inc
cwtl
fucomp
sbb
je
jns
add
pop
inc
pop
cwtl
add
jb
jg
pop
ret
pop
sub
sub
push
arpl
fcoml
daa
lret
daa
mov
add
cmp
xchg
rcrl
les
mov
sbb
cmpl
lahf
movsb
cmpsb
or
sarl
mov
addr16
mov
sub
andl
testb
xchg
mov
xchg
mov
cs
mov
mov
shrl
int3
mov
adc
aaa
je
pop
inc
and
dec
leave
js
dec
mov
mov
inc
test
add
or
ds
rol
mov
and
imul
ds
cli
orl
imul
push
daa
mov
mov
push
mov
mov
sub
mov
ret
dec
dec
fyl2x
rcr
idivl
xchg
pop
js
test
or
xchg
inc
pop
enter
in
sbb
jp
pushf
sub
sbb
mov
jb
int3
xchg
daa
std
xchg
pop
pop
enter
pop
mov
pop
sub
mov
push
repnz
pushf
and
mov
push
dec
add
out
pop
psrad
hlt
adc
xchg
sub
and
cmc
leave
push
or
pop
stos
sbb
out
pop
inc
dec
cmp
hlt
xlat
mov
inc
nop
or
cmp
mov
sub
push
mulb
cmc
clc
inc
test
pop
jge
and
lret
adc
mov
jnp
das
pop
mov
add
imul
adc
dec
jge
popa
sbb
push
add
and
test
xor
xchg
insl
adc
jo
adc
aad
jnp
sbb
fmull
jle
mov
xor
push
cs
jmp
cmpsl
xlat
sysenter
dec
mov
js
push
push
sbb
lea
cmc
lds
test
mov
jp
mov
cmpsl
aas
test
sbb
dec
outsl
xchg
cmp
sahf
push
js
xor
mov
xor
iret
xor
sbbl
add
insb
cmp
inc
and
cld
sub
fs
or
push
fnstcw
xor
push
daa
cmp
dec
int
cld
sbb
and
inc
sbbl
mov
xor
push
test
pop
push
xchg
ja
leave
add
in
sub
pop
test
loope
jge
dec
popa
cld
jbe
fldcw
mov
scas
xor
rcr
popa
mov
aad
adc
mov
add
scas
cmpsb
adc
cld
cmpsb
sbb
sub
or
and
pop
mov
add
mov
pop
pop
daa
popf
sub
xchg
shlb
jmp
mov
daa
sub
ja
loop
cmp
aaa
pop
push
inc
das
lahf
adc
lock
add
int
mov
or
ficomps
fs
push
jecxz
jl
inc
dec
cmp
aas
push
and
mov
jle
add
fs
xor
jno
jl
fs
clc
jns
or
cltd
xor
notl
mov
in
pushf
jae
daa
cmpsb
push
cmp
xor
ja
pop
pushf
and
xchg
dec
adc
dec
idivb
mov
test
push
nop
pusha
arpl
or
or
xorps
popf
xor
scas
notl
push
jae
push
mov
in
mov
in
add
and
sbb
push
or
jge
jle
cmp
scas
je
xchg
and
test
adc
add
add
gs
rcr
pop
out
iret
lods
fildll
outsl
repnz
and
imul
push
cld
movsb
cmpsb
sbb
test
lahf
lds
aad
adc
ret
sub
xor
sbb
jbe
xchg
lock
mov
xchg
out
xchg
sbb
mov
bound
outsb
mov
mov
adc
decl
jp
scas
fs
jg
jle
jae
inc
jmp
ljmp
pop
jne
fxch
jge
cmpsb
fisubl
sub
leave
jbe
ss
sbb
cmp
arpl
inc
call
sbb
popa
push
adc
mov
mov
lods
xor
pop
cmpsl
jae
insb
ljmp
in
jge
adc
fstp
popa
repnz
or
mov
mov
push
out
filds
mov
push
fistpll
and
aam
outsb
inc
mov
jbe
shll
mov
lret
push
scas
push
das
cmp
js
jl
rcl
dec
mov
ficomps
push
mov
insl
orl
imull
lods
sub
pop
cmp
cmpsb
sbb
xchg
rclb
popf
jne
je
pop
gs
icebp
mov
inc
add
aas
js
shl
out
xchg
fs
mov
pop
dec
andb
scas
mov
daa
push
insl
test
lea
push
sub
popa
or
in
add
xchg
stos
popf
ficomps
clc
mov
add
clc
das
popa
test
sub
sub
jp
mov
mov
int
or
repnz
xchg
or
test
mov
xchg
movsl
pushf
and
mov
mov
jno
scas
or
pop
loopne
lock
adc
pop
sbb
dec
pop
ljmp
orl
xchg
jl
mov
or
imul
inc
inc
out
scas
xchg
enter
out
cltd
jmp
daa
push
jg
jnp
cmc
pop
sub
mov
mov
push
shlb
xor
jbe
jmp
addl
lret
xchg
je
inc
js
mov
xor
jo
cmp
inc
mov
imul
imul
je
fwait
pusha
pop
mov
or
rcrl
imul
pop
pop
push
or
push
fcmovbe
inc
jns
pop
mov
xchg
adc
mov
mov
xor
push
push
mov
loop
or
rcrl
mov
inc
sbb
leave
xor
mov
and
inc
inc
insb
cli
jne
mull
pop
xor
call
jns
cmpsl
das
in
xchg
push
fbstp
push
push
xlat
mov
sub
push
aas
ljmp
or
pop
mov
mov
mov
insb
pop
cltd
addr16
repz
std
mov
repz
adc
mov
pop
aam
adc
jmp
dec
xchg
jge
ret
fwait
dec
lret
xor
dec
std
xor
fs
ljmp
adc
push
fbstp
popf
cmp
push
shl
lret
xor
cld
inc
jae
fidivl
fwait
maxps
fidivrs
sub
mov
les
shll
out
frstor
xor
dec
sbbb
xor
jecxz
stos
adc
daa
movsb
push
xor
xchg
out
sbb
out
mov
xchg
test
test
test
or
jge
int3
bt
lds
ljmp
fnstenv
jae
int
ror
xor
lock
pop
inc
addb
mov
bound
and
cmp
es
mov
mov
jne
stos
mov
fsubp
fcoms
stos
jecxz
movsl
jg
mov
ficoms
mov
mov
add
out
xor
add
fdivl
testb
adc
and
sbb
sub
inc
std
dec
or
jmp
sahf
into
cmp
movsl
adc
mov
fcoml
in
mov
mov
clc
and
adc
mov
adc
xchg
xchg
movsb
jle
pop
sbb
out
js
jne
dec
je
fistpll
cmc
repnz
jno
xor
scas
cwtl
adc
loope
sub
ljmp
je
lods
in
cmpsb
loope
push
sbb
popa
scas
cmpsl
xor
adc
fbstp
sub
jnp
pop
sbb
jp
xchg
icebp
sub
mov
fidivs
push
negb
scas
cltd
pushf
pop
jo
pusha
pop
out
cmp
inc
cld
inc
fstps
nop
push
xorb
movsl
gs
daa
add
arpl
mov
jp
pop
arpl
daa
outsl
ret
fimull
mov
cmp
inc
and
out
xor
imul
mov
sbb
push
mov
mov
sub
mov
arpl
daa
jge
mov
add
xchg
pop
sbb
or
push
and
mov
inc
int3
in
mov
cs
pop
or
rorl
xorb
shl
inc
sub
lea
jns
adc
lods
iret
push
mov
mov
mov
mov
test
fildl
mov
pop
leave
loope
aaa
mov
test
loop
nop
les
aam
aaa
inc
ljmp
repz
ljmp
add
aaa
ja
leave
fildll
cmp
ljmp
fwait
mov
out
stos
sahf
sbb
into
or
sub
mov
mov
mov
stos
and
or
mov
imul
ret
xor
push
cltd
jb
in
rclb
testl
adc
pop
movsl
xor
mov
xchg
popa
or
mov
insl
mov
xchg
xlat
ret
sarb
add
aad
scas
mov
dec
jp
or
shlb
mov
inc
pop
jg
pop
or
dec
test
cmp
lea
or
cmp
sar
mov
jp
outsb
adc
les
loopne
adc
imul
insl
mov
movsb
dec
xorl
lods
outsb
cmp
adc
xchg
adc
mov
aaa
data16
push
cmpsb
divl
syscall
mov
and
test
jb
push
mov
aad
adc
jno
je
dec
xchg
mov
dec
mov
sahf
mov
mov
decl
mov
cli
dec
test
xchg
enter
inc
test
mov
gs
push
push
cmp
gs
pop
sbbb
mov
dec
ret
sqrtps
jae
iret
jbe
xor
mov
pop
imul
pop
hlt
mov
or
rol
sahf
inc
dec
pushf
push
ja
insb
mov
push
gs
out
mov
push
addr16
test
sub
jge
mov
mov
lods
mov
push
jnp
mov
push
pop
aam
sbb
jge
insb
mov
imul
xchg
out
daa
xor
imul
dec
add
xchg
aaa
jns
fidivrl
ja
pop
push
xchg
mov
scas
clc
pop
and
repz
scas
push
scas
add
arpl
sbb
adc
in
lahf
ret
ljmp
insl
cmp
scas
addl
mov
test
inc
mov
dec
repz
je
imul
mov
repnz
jle
cli
mov
icebp
push
push
lcall
std
call
sbb
loop
pop
shrl
add
push
add
inc
cltd
fnstsw
or
sti
xchg
jg
icebp
mov
jb
fs
dec
ret
andb
mov
loop
popf
pop
mov
xchg
push
mov
div
fnsave
clc
ret
pop
mov
lods
aad
mov
jb
fidivs
insl
xchg
inc
nop
xchg
test
cmp
insl
cmpsb
out
add
xor
adc
cld
add
shl
add
adc
dec
ret
stc
popf
bound
mov
mov
pop
faddl
test
xor
dec
int
mov
cmc
jmp
xchg
jae
popf
xlat
dec
sub
insb
mov
xchg
jns
clc
aas
xchg
add
lock
xchg
gs
xchg
nop
xchg
scas
aam
movsb
mov
sarb
das
push
rcll
pushf
outsb
stos
or
jecxz
push
adc
lods
mov
enter
dec
mov
sbb
sub
adc
popf
lcall
jle
icebp
sub
cmpsb
aam
jb
add
ficoml
xchg
add
dec
lods
and
pop
push
ds
cmp
mov
shr
dec
push
sarl
xor
hlt
mov
test
sbb
aad
adc
sub
mov
and
xlat
lock
cmp
sbbb
movsl
xlat
mov
add
sub
out
jo
enter
adc
out
addr16
negb
jo
xchg
fdivrs
mov
push
mov
mov
out
mov
out
mov
add
movsb
test
inc
push
notl
sub
dec
std
fildll
dec
mov
cmp
sub
xor
out
enter
lds
cmc
outsl
aam
push
xchg
xchg
rcl
push
sbb
inc
sub
push
cmp
adc
jae
adc
xor
ret
cmp
icebp
test
ds
pop
xchg
xchg
push
ret
pop
inc
inc
sti
xchg
pop
jmp
or
arpl
rolb
or
imull
pusha
and
push
xchg
dec
add
or
cwtl
mov
out
in
in
and
andb
lds
pop
shrl
jg
dec
push
xor
fmull
inc
dec
sbb
pop
jnp
mov
test
inc
mov
stos
sahf
dec
fdivr
cmp
push
subb
add
test
js
cmp
or
rorb
leave
push
outsb
mov
out
mov
test
loope
repnz
ds
sbb
popa
in
in
xor
or
mov
ds
or
jbe
fildll
repz
stc
dec
cmpsl
outsl
lcall
or
repnz
sahf
movsb
loop
mov
jmp
test
sbb
cmp
iret
inc
pop
adc
addr16
les
mov
and
jno
jecxz
addr16
push
nop
jmp
jecxz
shll
xchg
xor
shlb
out
mov
test
sbb
mov
scas
pop
xor
scas
and
jb
push
test
inc
xor
rolb
jecxz
cmp
sub
push
jnp
mov
mov
int3
cs
cmp
mov
mov
lea
xchg
lahf
fnstenv
sti
imull
cmp
rcr
push
mov
cmpb
mov
pop
loope
mov
mov
push
int
adc
out
stos
into
imul
or
repz
and
jmp
cmp
push
fcmovbe
pop
fdivrp
adc
jns
hlt
lret
push
out
mov
adc
push
in
cmpb
popa
fwait
sbb
sbb
mov
or
mov
testb
add
xor
add
mov
or
add
cwtl
push
mov
dec
adc
mov
pop
sbb
stos
movsb
ja
push
sbbl
call
daa
push
xor
fidivrs
ja
jp
sub
jno
scas
or
add
das
jb
test
and
cmpsl
fwait
das
js
pop
mov
sar
mov
lds
movsl
mov
andb
fsubl
add
or
jg
call
dec
xchg
fs
jb
mov
cld
adc
mov
jle
lcall
lods
adc
lods
jns
rorl
test
inc
jnp
ret
sbb
xchg
xchg
into
in
mov
pop
push
ror
add
cmp
adc
pusha
lcall
sti
popw
and
ljmp
or
jp
mov
push
hlt
ret
popa
cmc
shl
fists
and
jl
in
int
push
mov
xchg
push
idiv
insl
push
xor
pop
mov
and
xchg
and
hlt
scas
push
in
pop
push
cs
lcall
andl
cwtl
inc
cmp
xor
lahf
sbb
aaa
dec
ss
adc
or
cld
imul
cmp
jb
xchg
fidivrl
xlat
cli
jo
imul
pusha
lahf
pop
jo
inc
pop
pop
lods
test
xchg
or
ss
inc
movsl
mov
fistl
xor
nop
outsb
popf
jge
imul
or
outsb
pop
dec
xchg
sbb
pusha
mov
out
jne
mov
xlat
ljmp
or
addr16
xchg
inc
pusha
or
or
or
sahf
fidivrs
add
mov
shll
mov
test
and
ret
cmp
jmp
xchg
jl
in
cmc
out
xchg
lea
jb
xorb
sub
pop
mov
cli
or
xor
fimull
ljmp
sub
xchg
cmp
movsb
dec
rolb
mov
repz
sti
ja
cmpsb
test
popa
ret
adc
jge
fadd
push
push
stos
mov
clc
gs
pop
mov
adc
stos
mov
mov
pushf
adc
xchg
pop
sbb
inc
and
cmp
push
jno
jae
or
repz
pop
mov
and
enter
out
rorl
dec
test
mov
jle
jmp
aad
mov
pop
push
inc
loopne
testb
je
rclb
sub
int3
mov
popf
xor
test
sbb
imul
mov
int3
pop
sbb
sbb
inc
inc
push
ds
fmull
jle
loop
out
aam
outsb
add
dec
pop
enter
dec
and
repz
int3
cltd
push
inc
addr16
rclb
sub
sbb
sbb
xchg
mov
jp
cmp
pop
out
dec
imul
xchg
mov
fsts
int3
pop
adc
and
or
pop
sub
push
sbb
mov
push
push
mov
adc
mov
repnz
and
jp
mov
iret
or
cmpsb
sahf
cmc
dec
pop
test
dec
ficomps
lcall
pop
mov
sub
cli
test
cltd
jle
push
data16
in
lret
adcl
outsl
jg
dec
jmp
outsb
daa
mov
mov
sbb
gs
push
and
je
subb
mov
jge
pop
sarl
and
jp
lea
push
xchg
jno
add
inc
push
add
mov
rorb
sub
orb
mov
inc
adc
mov
mov
out
adc
dec
mov
sub
mov
or
lret
out
inc
enterw
or
hlt
je
leave
xchg
into
lock
sub
inc
cmp
mov
push
mov
lea
and
sub
ror
jp
cs
adc
cltd
lret
or
xchg
add
dec
jle
outsl
jg
jmp
mov
outsl
cwtl
mov
fisttps
icebp
and
or
dec
pop
inc
cmpsb
ja
aas
stc
inc
adc
push
jg
icebp
lea
sbb
nop
xchg
in
xor
sbb
pop
add
out
fstpt
adc
hlt
mov
xchg
dec
pushl
js
xlat
jecxz
dec
aam
aaa
adc
negb
jle
int3
mov
sub
add
js
stos
mov
mov
adc
jg
inc
push
les
mov
mov
enter
leave
xchg
push
jle
jecxz
xchg
lret
call
rolb
cmpsb
fwait
mov
mov
ret
mov
push
xchg
int
hlt
lock
ror
add
gs
dec
repnz
lret
push
mov
aad
repnz
xchg
mov
sbbb
mov
mov
mov
test
xlat
xchg
ret
mov
sbb
mov
cmc
daa
cld
lret
jle
mov
add
aad
mov
sbb
lahf
out
lret
jnp
shlb
outsl
iret
jge
add
jge
stos
pop
add
mov
jl
jp
into
das
dec
xchg
stos
ret
fcompl
mov
xchg
adc
sub
mov
sbb
lahf
test
cmp
dec
mov
inc
jge
cltd
decb
test
xchg
cmpsl
punpcklwd
push
mov
sub
cmp
insb
cmpsb
mov
add
dec
mov
and
fwait
shl
dec
xor
loopne
data16
ficoms
mov
mov
adc
mov
jno
cmp
insl
es
mov
mov
into
stos
sub
pop
test
sub
int
jp
addr16
sti
add
jne
xor
sbb
sti
and
into
fadds
push
leave
push
push
ficompl
mov
sti
xchg
rorl
mov
mov
in
int3
mov
pop
mov
add
mov
sti
dec
add
mov
dec
in
push
jp
data16
icebp
push
sti
ljmp
repnz
fildl
sub
popa
jae
fsubrs
xchg
fldenv
push
call
inc
das
out
add
stc
ljmp
pop
lret
add
ds
outsl
dec
mov
and
jp
repnz
loop
xchg
in
inc
aad
sarl
and
insl
inc
pop
sub
fidivrl
mov
repz
in
sarb
or
or
add
and
sbb
push
sub
loopne
rdpmc
adc
js
mov
pop
mov
push
aam
xor
or
scas
cmpsl
fs
mov
add
add
movsl
pop
cmpsl
pop
sbbl
lret
push
subb
call
pop
fcoml
and
mov
fwait
pushf
mov
gs
inc
sbb
movsb
mov
push
les
test
mov
jnp
shlb
adc
push
pmulhuw
stos
lods
loope
mov
dec
mov
outsl
adc
adc
xchg
and
addr16
mov
shlb
mov
adc
mov
flds
jno
mov
xlat
xchg
shl
mov
xchg
lods
xor
cli
mov
stc
fwait
push
lock
loopne
cmc
adc
pop
insb
and
add
hlt
push
jecxz
lcall
adcb
imul
or
pushf
xchg
out
pop
sti
and
mov
stos
mov
ds
mov
mov
lcall
or
je
push
push
inc
mov
cmp
xor
sahf
xor
xchg
dec
dec
jg
xor
call
nop
mov
mov
or
ljmp
push
adc
lret
mov
pop
int
cmp
in
jg,pt
dec
pop
adc
push
adc
filds
pop
jecxz
loop
mov
sbb
popa
dec
stos
or
int3
hlt
xchg
pushw
cmp
add
add
and
repz
mov
dec
pop
mov
adc
orl
jecxz
in
enter
mov
decb
inc
xor
aad
sbb
pop
pop
mov
pop
jecxz
sub
adc
mov
insb
inc
xor
dec
ljmp
fs
jno
jl
push
jo
push
xchg
xchg
xchg
testb
imull
or
adc
push
hlt
test
inc
sahf
sub
daa
pop
sbb
sbb
jg
leave
or
dec
test
push
cld
aam
adc
cmc
js
aaa
sbb
rcr
add
scas
pusha
adc
sti
insb
imul
iret
out
aam
adc
cmpsb
jae
pop
out
lods
or
enter
fnstsw
adc
xchg
stc
cmc
repz
xchg
lods
sahf
rolb
test
push
aaa
sbb
fldenv
xchg
into
or
lea
test
das
adc
mov
icebp
in
or
leave
in
mov
cmp
loope
rcrl
mov
sbb
fstl
je
dec
sub
decb
jecxz
iret
les
dec
add
pushf
xor
push
decb
sub
fdivrs
rcr
lahf
out
lret
pop
clc
sub
fistpl
and
vcvtpd2dqx
lea
aas
mov
rcll
mov
xlat
icebp
pop
mov
icebp
clc
fwait
sbb
negb
into
adc
or
arpl
sub
mov
fbld
fisttpll
mov
mov
xchg
mov
leave
cmp
inc
bnd
jmp
mov
sub
sbb
sahf
jne
inc
repnz
pop
aaa
inc
lods
add
outsl
mov
lock
lds
inc
popa
mov
xchg
cs
lods
inc
fdivr
lea
pop
or
dec
lret
outsb
std
test
out
stos
cmpsl
mov
cmpsl
std
and
jns
clc
inc
je
cmpsl
xor
adc
mov
sbb
inc
iret
adc
or
push
iret
out
cmp
lcall
inc
outsl
and
in
gs
dec
stos
ret
popf
idivl
jnp
pop
iret
or
mov
fistpl
inc
imul
or
xor
pop
mov
fsubs
mov
cmpsb
scas
push
popf
lock
and
sub
andl
jmp
push
popl
lret
xchg
fbstp
loopne
mov
push
nop
cltd
xchg
jns
decl
xor
inc
push
dec
add
roll
into
mov
mov
jno
cld
or
jmp
and
push
testl
lods
or
mov
and
or
decb
mov
in
push
lcall
push
mov
xchg
test
leave
fdivrp
pmaxub
dec
xchg
fisttpll
pop
in
sbb
lahf
rol
jbe
dec
inc
and
push
or
loop
fmul
sti
mov
and
dec
loopne
std
cmp
adc
mov
pop
xchg
cwtl
bound
insb
mov
xlat
into
dec
push
add
sbb
sbb
mov
and
mov
sub
jae
inc
mov
and
int3
xor
mov
push
and
inc
xchg
pop
jns
xchg
stos
cwtl
xchg
out
pusha
cmp
sub
jecxz
inc
lea
xchg
xor
inc
roll
jp
rcrl
pop
xchg
cli
hlt
into
fstpl
ret
in
daa
dec
shr
sbb
adc
xchg
mov
scas
int
dec
aad
and
hlt
jns
jecxz
inc
int3
ljmp
pop
xor
lods
shrl
test
in
loope
xchg
dec
popf
mov
cmp
push
fucomp
mov
lods
add
push
cmp
fmul
xlat
dec
adc
mov
and
push
mov
mov
dec
aam
pop
movsl
jb
pop
daa
xchg
loop
mov
in
fadds
movsl
hlt
pop
mov
ljmp
mov
push
mov
adc
push
xchg
pop
add
xor
loope
scas
daa
add
out
sub
popa
insb
adc
mov
cmc
sbb
sub
cmp
ret
fdivrs
aas
arpl
push
lods
and
lret
jo
push
xor
ret
push
arpl
and
add
sarl
shl
pop
mov
pop
iret
mov
in
push
arpl
pop
pop
fsubs
lret
les
lea
and
sbb
in
cmp
or
roll
sub
xchg
or
jecxz
jge
mov
mov
mov
dec
inc
je
xchg
cmp
dec
cmp
dec
adc
mov
or
lods
push
outsl
jecxz
clc
add
ljmp
icebp
test
mov
movsl
hlt
jmp
xchg
xchg
cmp
mov
inc
pushf
daa
push
es
aaa
sub
insb
cwtl
addl
cmp
or
mov
pop
shll
or
std
push
dec
mov
lret
xchg
sbb
mov
jbe
dec
int
push
mov
scas
hlt
cmp
jmp
ja
adc
int
sub
pusha
add
jne
out
daa
inc
jne
iret
xchg
cli
sub
mov
pop
js
loope
insl
jl
insb
jb
mov
jle
popf
sub
and
cmpsb
out
in
and
mov
sbbl
scas
dec
repz
sarb
push
bound
daa
push
dec
stc
jge
out
scas
xor
jmp
cs
lahf
pop
clc
pushf
sbb
int3
push
test
sahf
ja
aaa
leave
aaa
mov
divb
mov
cmp
rolb
adc
inc
jo
loop
jl
mov
fstpt
mov
div
mov
daa
icebp
inc
fmulp
and
xlat
sub
stc
xchg
scas
mov
fmulp
sub
cmp
mov
nop
add
in
outsl
add
sbb
cmpsb
add
negb
out
xor
xor
mov
xchg
pop
notb
stos
cmp
std
xor
and
dec
out
out
add
das
shlb
iret
push
push
out
lahf
mov
adc
test
jae
fnstenv
repnz
ds
mov
sbb
mov
lea
cs
pushf
fs
and
mov
out
mov
mov
aam
jo
jbe
mov
fxtract
cmc
test
xchg
outsb
mov
sub
outsl
inc
jbe
mov
shlb
les
mov
shr
popf
sub
inc
jmp
sub
adc
adc
lds
mov
in
jecxz
rolb
out
dec
jge
mov
sahf
sub
inc
and
and
lahf
jl
cmpsl
test
dec
ss
test
je
test
leave
fmulp
add
mov
inc
enter
jne
mov
xchg
outsl
bound
push
repnz
add
ljmp
fucom
fcomps
sbb
pop
out
loopne
orb
fisubrl
fincstp
aas
lcall
and
loop
loopne
shl
add
daa
insl
aam
push
xchg
add
jle
lds
in
jg
daa
jg
shrl
es
stos
or
xor
inc
cli
cmp
adc
cmp
rep
call
dec
imul
hlt
adc
or
call
jb
gs
scas
out
sub
in
lret
jp
inc
mov
pusha
cltd
mov
out
jns
icebp
inc
mov
ret
cmp
shlb
sub
dec
mov
sarl
jmp
ret
cltd
and
sarb
or
sub
add
call
add
sbb
out
push
icebp
loop
popf
adc
xchg
add
xchg
les
adc
add
push
push
cmp
sbb
or
shrb
mov
add
push
in
cmp
popf
push
fiadds
cmp
cmc
stc
decb
dec
pushf
cmpsb
adc
adc
xor
movsb
push
sub
data16
cltd
and
lret
imul
outsb
movsl
daa
xor
std
shr
clc
scas
gs
lods
sbb
or
mov
or
nop
lcall
ja
push
mov
fs
cmpsb
cmp
lret
mov
imul
push
out
dec
ja
popa
xor
mov
cmc
mov
int
mov
xchg
jno
ljmp
add
jns
outsl
in
in
mov
xlat
lret
cmp
pusha
js
addr16
jne
stc
outsl
scas
add
fnsave
adc
lcall
push
in
aam
out
or
mov
pop
fadds
call
push
push
nop
sbb
cmc
xorb
insl
push
fs
popf
test
cmp
xor
lret
jl
sbb
fstps
test
xchg
fisttps
add
les
fidivrs
mov
out
std
mov
lcall
lock
jmp
mov
pop
adcl
hlt
hlt
jno
pusha
mov
mov
xor
das
scas
rcl
and
jae
pop
ljmp
mov
stc
ret
popa
psubsb
pop
js
cmc
adc
imul
inc
dec
jb
daa
inc
fidivrs
xchg
mov
movsb
stos
aas
out
adc
mov
arpl
test
scas
mov
sub
xchg
sub
sbb
shrb
cli
lock
and
decl
rcl
push
mov
outsb
jp
rcr
fisttps
in
xchg
cld
jge
ds
push
mov
das
sub
mov
xchg
ja
add
in
das
cmp
sub
icebp
insb
sub
sarb
xchg
cmp
je
test
in
xor
gs
arpl
xor
out
loop
sbb
dec
jo
push
mov
fucomp
pop
int
xor
adc
repz
leave
enter
add
mov
and
fimuls
ret
daa
inc
mov
fs
arpl
out
cmp
push
or
shr
pop
xor
push
push
or
push
cmpsl
push
pop
cwtl
cld
add
test
lds
shll
rcl
aam
sbb
jo
push
rcll
ja
sbb
aam
mov
lahf
leave
ficomps
xchg
mov
or
jg
inc
and
jg
imul
repnz
sarl
scas
mov
cmpsl
stc
mov
add
inc
xor
es
mov
xchg
cmp
mov
imul
or
mov
lods
aad
in
add
xlat
inc
dec
bnd
or
mov
push
aas
ja
xchg
jns
das
fbstp
inc
mov
mov
push
fcomps
ret
dec
jns
shlb
and
lods
jg
fdivr
fmull
dec
addr16
push
fcomps
inc
jno
ror
jp
pop
mov
icebp
and
lods
je
xor
mov
sahf
in
inc
jnp
jb
pusha
mov
push
jb
pop
ljmp
fcmovnu
mov
cmp
adc
jmp
inc
add
jmp
insb
mulb
push
sbb
sbb
and
mov
pop
sti
repnz
mov
movsb
repz
mov
xchg
stos
aad
in
push
push
inc
sahf
insb
iret
jle
sub
gs
mov
into
lcall
shlb
cmpsl
xchg
test
scas
xchg
stos
mov
jno
cmp
mov
aad
in
add
xchg
xchg
dec
aad
push
addb
das
adc
loop
push
jecxz
or
loop
dec
imul
adc
imul
repz
loopne
loop
rcl
cld
inc
mov
ds
mov
test
mov
aad
imul
xlat
fdivs
adc
lahf
cmpsb
dec
adc
sub
cmp
fsubrl
mov
cwtl
cmpsl
into
insl
push
mov
add
dec
jbe
test
xchg
cmp
adc
test
ja
pop
adc
or
test
jnp
loope
xorb
in
call
ret
cmp
idiv
addr16
xor
dec
dec
test
inc
pop
jae
xor
jmp
pop
ljmp
push
loop
sub
test
ret
mov
lods
dec
es
xor
or
sbb
and
jmp
int
js,pt
lahf
adc
mov
xchg
aaa
mov
insb
adc
test
lcall
test
mov
subb
lea
push
add
mov
outsl
aas
jl
sub
sbb
jmp
iret
mov
ljmp
jae
fists
cmp
aad
xchg
mov
sub
pushl
jmp
outsb
mov
adc
lahf
lods
sub
xchg
push
dec
ss
add
in
add
ja
jnp
inc
or
daa
addr16
test
ret
sbb
add
and
mov
rcrl
fs
lahf
pop
mov
inc
in
scas
xchg
clc
inc
dec
xchg
std
mov
pop
fs
pop
iret
movsb
pop
jecxz
push
mov
lcall
jno
mov
pushf
jne
ret
decb
addb
or
cs
xchg
jp
repnz
lret
mov
xor
or
sahf
outsl
xor
cld
test
js
imul
aas
enter
xor
cmp
mov
in
adc
xlat
add
mov
mov
bound
out
mov
ret
fwait
xor
mov
enter
lock
shll
xchg
pop
mov
and
add
or
cmpsb
bound
xchg
pusha
push
xchg
pusha
xchg
inc
xchg
insb
lret
pop
cmpsw
hlt
or
ret
test
sub
sti
xchg
lods
add
jb
insb
shl
bound
rcll
mov
ja
pop
neg
jns
daa
fisttpl
sarl
push
cmp
popa
out
ss
sbb
mov
divl
xchg
mov
lea
adc
adc
and
sbb
fidivl
and
adc
or
ss
aaa
dec
cmp
mov
or
add
out
sbb
or
rorl
xchg
mov
stc
inc
cmp
aaa
jno
cmp
sub
loopew
push
jp
out
sbb
bound
pop
sbb
fucomip
icebp
cmp
sbb
cmp
arpl
lods
sub
mov
inc
and
sbb
add
xor
addl
sub
sub
inc
xor
in
mov
sbb
cmp
pop
inc
adc
jmp
jns
sub
inc
in
add
mov
test
pushf
in
lea
sbb
clc
inc
lret
mov
push
fisubrs
cmp
sbb
adc
lcall
cmp
push
loop
aad
jne
stos
jo
lcall
pop
push
and
mulb
inc
hlt
xor
or
into
push
cmp
inc
sub
inc
xor
lock
mov
inc
mov
xchg
mov
jmp
mov
sti
mov
btr
inc
mov
or
lock
call
sbb
jl
pop
int
add
jmp
rorb
in
fisubrs
lret
mov
jae
push
pop
pop
rcr
nop
and
xor
xor
insl
xor
inc
cmpl
out
fistpl
pop
push
inc
xor
xor
dec
pusha
inc
pop
int
test
ja
les
cmc
test
ljmp
cmc
adc
les
inc
xlat
out
xchg
push
bound
inc
lcall
stos
sbb
in
push
pop
mov
dec
xchg
lcall
push
stos
int3
xchg
mov
mov
lods
je
aas
dec
aam
inc
mov
adc
push
out
sbb
mov
mov
xlat
push
cli
dec
popa
xchg
xchg
imul
test
adc
icebp
or
mov
jo
push
mov
cli
xchg
mov
xlat
push
adc
or
dec
xchg
xchg
sti
dec
xorl
cltd
mov
repz
xor
nop
add
fmuls
call
jnp
pop
push
es
xor
lods
cmp
xor
push
mov
ljmp
mov
add
dec
xor
jl
push
add
add
and
test
mov
shll
fildll
mov
push
dec
push
or
mov
ss
jmp
add
sti
pop
ffree
mov
xor
fidivl
vsqrtss
sbb
lods
inc
add
jbe
adc
shl
or
lds
js
or
jge
sub
bound
dec
sbb
jg
gs
lret
add
dec
loop
push
aam
sbb
mov
xor
push
inc
out
lods
decl
and
pop
inc
jns
in
xchg
dec
adc
sbb
or
xchg
rcr
stc
push
push
xlat
sub
fadd
push
mov
add
push
xchg
lods
aaa
jge
scas
jne
push
mov
imul
push
lret
cltd
jns
adc
dec
jae
inc
fdecstp
dec
lret
into
adc
pop
jmp
jge
js
daa
stc
mov
mov
sub
sarl
jge
fistl
mov
or
push
shr
lret
movsl
rol
or
cmp
jbe
shll
mov
inc
mov
cmc
fcoml
and
push
inc
sarb
sub
cld
xchg
inc
jmp
loop
pushf
iret
jbe
xor
js
jne
sub
jns
pusha
rclb
in
daa
iret
push
adc
mov
mov
adc
scas
testl
pop
push
adcb
mov
add
xchg
xor
xchg
pusha
in
je
gs
pop
jmp
cwtl
cmpsb
into
jl
int
mov
xchg
mov
xor
jbe
xor
mov
aam
std
push
adc
ljmp
adc
push
sbb
add
fbld
cld
push
xlat
push
lds
xor
fcos
mov
sub
test
sub
pop
in
xorl
push
push
sub
out
int
xor
test
cmc
repz
ret
pushf
loop
xor
addr16
sbb
lmsw
inc
popa
jge
sarl
cwtl
shlb
aam
or
std
mov
jmp
dec
pop
lret
adc
xchg
cli
ljmp
cs
pop
arpl
in
and
xchg
hlt
cwtl
das
inc
push
jl
loop
and
lds
xchg
stos
sub
subl
scas
ss
push
and
loope
in
pop
lods
or
cmpsb
pop
push
stc
xchg
fiadds
pop
sbb
mov
nop
mov
addr16
fcoms
lretw
mov
cwtl
push
cmc
in
aam
pop
xchg
or
out
icebp
orw
pop
into
push
xchg
jmp
rcrl
and
xor
rol
add
xor
push
mov
xlat
lahf
shlb
dec
pop
cmp
sub
cmpsl
leave
inc
mov
enter
mov
lds
jne
sub
xor
cwtl
mov
sbb
jp
add
jmp
xor
sbb
in
shlb
out
leave
imul
insl
adc
xlat
xchg
int3
rep
fadds
inc
rcl
dec
imul
sarb
jp
cmc
das
or
movsl
lea
push
cltd
sbb
inc
rolb
std
pusha
lret
sbb
adc
jecxz
jne
ds
mov
out
mov
jnp
jne
loope
push
cmp
add
xchg
stos
out
mov
test
movsb
fldl
xchg
mov
rcl
pusha
or
cmp
mov
ljmp
mov
sbb
xchg
ret
mov
xchg
ss
jo
lods
fsubr
in
lahf
push
loope
push
xchg
fcmovnbe
jne
inc
cmp
and
inc
pop
dec
xchg
xor
movsb
xchg
cmp
xorl
jo
das
gs
aad
or
cmp
jge
sub
lcall
popf
xchg
jae
add
jbe
pop
repnz
mov
arpl
fld
aaa
push
mov
and
mov
xchg
pusha
inc
fstps
jmp
mov
jecxz
mov
and
ds
pop
and
mov
sbb
pop
xor
test
xor
cmpsb
xchg
shld
stos
mov
jl
inc
mov
push
xchg
ljmp
mov
in
mov
movsl
dec
int3
scas
mov
dec
out
cmp
je
jle
push
add
sarl
mov
sbb
pusha
inc
pop
stc
inc
imul
push
xor
or
sarb
clc
imul
or
push
cmp
stos
out
lods
sbb
outsb
sbb
stos
cmpsl
aad
popf
xchg
lret
xchg
js
scas
sbb
shl
into
pop
fwait
std
cmp
pop
dec
hlt
int3
jno
sbb
sbb
testb
add
inc
jns
daa
rcl
pop
jbe
shrl
sub
push
inc
fwait
mov
sub
mov
adc
inc
sub
jno
cwtl
scas
outsl
mov
in
arpl
sbb
xor
sub
out
sar
scas
adc
sub
xchg
mov
inc
and
sarl
repnz
imul
mov
add
ss
xor
movsb
xor
xchg
rcrb
js
or
imul
mov
fildl
fwait
movsb
mov
loopne
or
es
pusha
dec
mov
push
mov
lods
pop
jl
xor
stc
cmpsb
rcrl
xchg
mov
test
ror
test
and
repnz
mov
cmp
adc
aam
lea
adc
nop
xchg
push
mov
stos
ret
mov
cmpl
or
test
insb
cmp
cmp
leave
fnsave
cmpsb
push
inc
stc
jnp
sbb
test
je
cli
testl
clc
xor
inc
lea
jge
add
std
push
mov
adc
lret
mov
mov
nop
in
add
push
mov
dec
sub
xchg
stos
mov
xor
iret
cmp
andb
sahf
test
test
test
mov
push
xchg
sub
jb
xchg
adc
adc
loope
dec
dec
adc
imul
pop
lret
mov
push
test
cld
adc
push
add
jo
in
fwait
and
push
mov
dec
and
ljmp
jb
stc
out
in
jbe
xchg
mov
xchg
mov
arpl
cmp
adc
xor
push
bound
daa
adc
sarb
mov
dec
cmp
push
and
leave
sbb
and
push
and
and
pop
sub
cmp
jbe
and
ror
and
xchg
mov
jo
sub
mov
cmp
enter
cmovl
push
test
jno
bound
pop
sub
sbb
ret
in
and
adc
shll
cwtl
mov
pop
pandn
jl
clc
adc
xchg
cmpl
mov
and
jp
inc
jae
push
jle
lds
inc
inc
mov
and
add
aas
inc
cmp
mov
lret
pusha
sub
fbld
push
sbb
sbb
xor
push
add
repz
mov
test
push
ss
std
test
mov
lcall
hlt
test
test
pop
adcb
add
shl
xchg
aam
aad
scas
imul
imul
add
mov
test
jecxz
xor
jne
and
dec
pop
push
pop
pop
popa
mov
hlt
sub
or
popa
ret
outsb
daa
and
mov
cmp
jge
jl
pop
cmp
mov
fcoms
jecxz
xor
sarb
aas
lods
inc
lahf
daa
mov
xchg
add
es
pop
push
sbb
mov
mov
fiadds
adc
push
pop
ja
sub
es
push
pop
jg
xchg
ds
fmull
das
mov
std
lret
inc
test
call
test
arpl
xchg
jbe
outsb
mov
je
negl
pop
iret
js
mov
gs
iret
mov
loop
push
mov
and
jns
adc
nop
aam
sbb
out
push
xchg
in
add
inc
ljmp
jae
and
insb
jne
sub
or
xchg
add
xchg
popf
xor
js
mov
xchg
jbe
and
push
cmc
xor
xchg
add
sbb
out
mov
cmp
test
adc
les
cld
jmp
push
addr16
sti
sbbl
leave
stos
js
push
js
xor
mov
out
xor
add
out
mov
pusha
stc
mov
xchg
pop
jns
adc
push
sbb
push
flds
push
jb
and
mov
xlat
jle
dec
xor
inc
xchg
cmp
push
jnp
scas
test
push
inc
call
into
ret
clc
xchg
shrb
xchg
pop
xlat
sbb
ret
movsl
inc
dec
inc
fdivl
adc
or
dec
and
sbb
adc
mov
addb
mov
xlat
cmp
aad
adc
shll
mov
xor
mov
in
loopne
repz
adc
inc
inc
cmp
and
xor
lods
cmp
ja
xchg
mov
loopne
inc
nop
xchg
stos
loopne
add
insb
cmp
fwait
dec
inc
pop
sbb
jmp
jae
sahf
xchg
or
int3
or
std
sub
mov
jge
and
mov
jns
and
popl
repz
adc
push
fistl
sbb
cmp
ffreep
clc
jmp
fdivrs
sbb
filds
mov
imul
rorb
outsb
mov
mov
lds
rorl
sbb
push
or
stc
aam
imul
loope
je
push
xorb
mov
loopne
call
enter
lea
es
or
and
outsl
cmp
je
jae
mov
xchg
std
lret
dec
sub
outsl
mov
ds
hlt
adc
bnd
in
bound
push
loopne
push
dec
push
cmp
cmp
sub
mov
ds
mov
fdecstp
in
pop
scas
push
dec
or
pop
les
mov
aaa
mov
jp
lcall
jo
jo
out
adc
into
stos
daa
sbb
mov
insl
adc
or
add
mov
lcall
xchg
js
sahf
inc
dec
adc
cltd
mov
insl
jmp
ljmp
jmp
enter
fdivrl
push
push
pop
in
mov
sub
and
inc
mov
xor
test
mov
jge
fildll
lods
aam
push
jmp
cli
in
aad
mov
add
fldenv
inc
orb
js
ret
js
pop
push
test
repnz
or
mov
aad
xor
es
cmp
mov
lds
inc
cwtl
stos
and
add
mov
xchg
enter
loop
lods
jge
test
mov
out
inc
cli
fstpl
fldt
insl
inc
into
push
xor
add
imul
bnd
xor
pop
inc
cmp
push
and
xchg
jae
sbbl
pop
xchg
rol
xchg
hlt
sbb
adc
and
clc
popf
sub
fadds
loopne
mov
dec
data16
xor
in
push
fidivrl
rolb
cltd
js
push
add
loope
mov
shrb
push
in
sbb
pop
xchg
pop
ss
call
cld
shlb
mov
fbstp
lahf
cli
sti
or
mov
xchg
push
fadds
out
mov
mov
mov
add
xchg
mov
test
nop
das
in
mov
pop
dec
sbb
push
sbb
jg
in
mov
add
popf
rorl
push
jbe
cld
leave
mov
cs
jnp,pt
test
push
fadds
addb
mov
rcrl
inc
xor
test
cmp
mov
pusha
dec
sets
cmp
inc
ret
mov
out
inc
sahf
nop
jge
int
pop
jbe
pop
pop
fs
clc
cltd
push
into
sub
mov
dec
inc
je
push
inc
xchg
icebp
xchg
lods
or
les
add
ds
xor
cltd
pop
lods
xor
push
fwait
jns
jbe
in
mov
cwtl
push
popf
lea
out
out
mov
fcmovbe
dec
cmc
nop
test
repnz
mov
pop
dec
xlat
push
or
jo
mov
cmc
and
fxch
push
cmp
inc
outsb
pop
push
jle
adc
inc
jo
mov
out
cltd
jo
lea
xlat
imul
mov
dec
xor
inc
cmpsl
sbb
repnz
pop
fs
les
and
out
gs
stos
das
scas
jecxz
jl
inc
adc
out
movsl
sub
jge
test
es
cmp
in
aad
jns
dec
sub
mov
lea
es
lret
fstp
jne
mov
notl
ja
pop
xorl
iret
cltd
stos
test
jp
jns
and
xchg
stc
jo
addr16
adc
xchg
rolb
push
ret
movsl
jb
daa
loope
out
xor
ljmp
cmc
inc
aam
jo
jb
gs
jg
add
roll
pop
cltd
iret
pop
or
sub
movsl
pop
les
pop
out
sbb
sbb
dec
out
dec
pushl
cmp
cmc
adc
inc
adc
pusha
test
fmulp
xchg
ret
dec
dec
movsb
in
fstpl
pop
in
push
enter
inc
mov
aad
push
mov
jp
push
sahf
sbb
xchg
pop
mov
cmp
xchg
ss
mov
push
lea
push
call
or
sub
xchg
xor
and
adc
call
orb
inc
jb
mov
and
lock
pop
sarl
sbb
js
iret
xor
cmp
std
pop
sbb
div
xchg
dec
popa
sahf
inc
cmpl
lods
cmp
insb
jmp
fnstsw
fists
ret
cmpb
or
loope
xchg
xor
mov
data16
push
jle
roll
push
jle
and
xchg
push
mov
push
mov
add
dec
cwtl
cmp
adc
notl
lcall
pop
pop
daa
or
ret
loope
pop
out
mulb
lcall
fidivl
lahf
adc
sti
inc
into
outsl
jmp
aad
fs
push
cli
nop
movsb
aam
pop
mov
arpl
dec
ss
arpl
fwait
outsb
jecxz
adc
nop
dec
stos
push
add
cwtl
inc
ds
pop
cmp
aas
pop
arpl
outsl
push
push
lods
or
adc
in
xor
jbe
lret
jle
popf
pop
aas
adc
pop
clc
ds
aam
ss
rcl
stc
xor
mov
dec
scas
and
push
jp
dec
or
xchg
stos
addr16
push
out
dec
or
mov
push
cli
fwait
jge
push
jg
daa
mov
cmpsl
popa
add
jle
movsb
or
idivb
ret
dec
rcr
movb
push
sub
cmc
xchg
jecxz
cmp
in
test
jmp
rorl
stos
bound
fmulp
cmp
push
imul
stos
fmull
sbb
push
sti
fld
in
and
out
inc
sub
xchg
push
xlat
mov
sub
jnp
mov
push
xchg
jbe
inc
or
and
push
sysret
jae
or
jle
mov
mov
and
mov
mov
push
push
xchg
add
gs
push
adc
jg
aas
sub
sub
cld
nop
adc
push
pusha
add
ret
out
pop
sub
and
push
dec
jns
mov
cmp
cld
xor
or
cmpsb
out
jnp
mov
inc
jl
testb
pop
rep
cmp
sbb
jp
adc
adc
cs
es
les
repnz
pop
mov
scas
lock
sahf
out
xor
in
xchg
sub
xchg
leave
mov
adc
fstpl
add
out
dec
popa
xchg
mov
fcmove
scas
shrl
xchg
movsb
add
bound
lret
sbb
adc
movsl
cmpb
dec
mov
bound
jno
push
test
mov
sub
pop
push
mov
mov
inc
js
lret
test
xor
lods
jae
xchg
xor
mov
ss
mov
pop
and
mov
pop
enter
outsb
fs
add
pop
mov
cmp
flds
xor
repnz
xor
outsb
mov
add
leave
gs
daa
fsubl
scas
movsl
test
mov
jne
cmpsl
cmp
mov
call
dec
mov
das
lcall
fs
fildll
ss
stos
cld
out
outsl
in
cmp
out
stc
cmpsl
frstor
into
xor
rclb
jnp
repz
sub
push
pop
fdivrs
stos
pop
test
je
idivb
popa
iret
push
adc
mov
and
mov
sbb
in
rorl
stos
rcrb
notb
adc
sbb
or
scas
aam
stc
jns
das
insb
jmp
fcmovbe
or
jb
testb
test
test
xor
mov
inc
pop
jl
leave
mov
test
mov
insl
call
fmull
jl
jg
xchg
sub
adc
fneni(8087
lahf
mov
aad
mov
sbbl
push
sbb
sbb
push
cld
mov
cmp
xor
ljmp
aad
adc
adcl
cmp
mov
xchg
adc
test
pop
test
add
lret
xor
mov
xchg
pop
rcrb
mov
xchg
loop
insl
jmp
lock
push
jecxz
jnp
jl
repz
and
xor
push
mov
mov
rcll
dec
cli
xchg
loop
test
mov
jno
mov
popa
mov
cld
call
dec
lods
sub
ja
aas
mov
jb
loope
xor
pop
adc
pop
loop
sti
rolb
fistl
repnz
in
test
addb
lea
outsb
mov
iret
mov
push
mov
push
and
roll
insb
aad
inc
rol
cmp
fistl
sahf
test
mov
add
xchg
jmp
fldt
pop
sahf
fwait
pop
dec
imul
pop
sub
loop
push
pop
imul
sbb
mov
add
jge
jle
popa
jbe
mov
stos
es
cmp
or
mov
les
or
jne
in
inc
cmpsl
test
mov
mov
mov
loopne
push
cmp
inc
rclb
cltd
nop
ss
pop
inc
ja
xchg
adc
leave
in
aaa
movsb
adc
inc
pop
lret
inc
or
pop
lock
hlt
outsl
out
movsl
loopne
fmuls
push
insl
dec
and
inc
xchg
bound
loopne
movsb
cwtl
ss
imul
int3
mov
faddl
fwait
xor
test
mov
mov
xlat
fcoms
adc
push
adc
clc
pushf
cmp
push
jae
xor
repz
jne
loope
popf
imul
cmp
push
jnp
sbb
and
rcr
sub
and
outsb
fchs
jg
test
mov
sbb
nop
repnz
or
mov
adc
xor
rclb
fdivrl
insb
jne
cld
push
call
sbb
in
cwtl
jg
out
and
mov
lds
dec
in
cmp
or
mov
sbb
push
jae
dec
shlb
mov
dec
fildll
and
insb
int
add
movsl
or
lods
mov
popa
xor
mov
mov
dec
sbbb
mov
dec
popa
out
adc
xchg
jae
ss
mov
pop
lret
or
dec
test
fwait
push
es
js
mov
xor
jge
pop
into
push
sub
insb
push
and
ljmp
push
sbb
roll
jo
cmp
daa
mov
jecxz
scas
jle
mov
aad
mov
fcompl
cmp
jmp
inc
loope
jmp
mov
fstpl
and
and
xchg
xchg
sahf
scas
out
jmp
gs
cli
outsb
fcmovu
repnz
lock
xor
inc
movl
jns
adc
push
push
jns
aam
testb
jns
xor
lds
inc
cmpsb
fisubl
pop
fistps
or
and
xchg
fs
lret
pop
mov
stc
xchg
rcrb
mov
imul
adc
mov
jecxz
mov
mov
jecxz
mov
mov
stos
sub
imul
in
cltd
push
or
sbb
sahf
cltd
loope
cmp
pusha
or
jnp
xchg
cmc
int3
sbb
outsb
sbb
sub
xor
sbb
push
sbb
iret
leave
jge
adc
shlb
xchg
dec
mov
dec
inc
mov
xchg
xchg
pop
test
inc
fs
and
or
pusha
jecxz
sub
insl
lea
sub
xchg
aad
push
test
and
out
adc
mov
jne
xor
ljmp
les
pop
scas
mov
mov
sub
and
lahf
cmc
fs
mov
lds
and
pop
adc
jmp
lods
adc
dec
in
and
repnz
pop
cli
and
xor
repnz
jle
loope
and
sahf
in
ds
sub
scas
loop
cld
add
insb
pushf
xor
insl
dec
inc
mov
dec
add
xor
push
jge
cmp
or
int3
dec
dec
test
pop
mov
out
cld
mov
mov
xchg
bound
mov
lock
aas
mov
js
push
xor
les
sbb
or
loope
mov
popa
pusha
push
test
add
lds
xlat
jp
stos
call
mov
arpl
das
jge
imulb
movsl
cld
adc
leave
xor
lods
jno
shlb
mov
dec
sahf
or
mov
jb
sub
xchg
int3
loopne
daa
movsb
pusha
xor
fisttps
pop
mov
mov
out
insl
jns
sbb
sub
fbld
sahf
sti
rol
mov
dec
clc
and
mov
pushf
cmp
push
add
xlat
sbb
lcall
jno
lret
loope
stos
daa
xor
push
cmpsl
je
lds
incl
sarb
out
arpl
arpl
sbb
jnp
mov
fucomip
or
das
loopne
aaa
or
add
cmpsl
mov
sub
dec
push
dec
push
adcb
js
mov
aaa
cld
loopne
loope
lret
sahf
pop
pop
inc
mov
mov
lods
test
and
push
in
push
push
popl
mov
in
xor
fdiv
sbb
xor
std
mov
pop
sub
mov
test
inc
mov
movsb
jg
ljmp
lahf
or
inc
aad
lahf
jle
popf
inc
add
pop
and
shl
loopne
xchg
mov
dec
in
mov
imul
fs
pop
cmp
xchg
xchg
imul
stc
lahf
adc
lock
mov
imul
es
mov
sub
jne
xchg
push
movsb
cmc
cli
mov
aas
and
std
dec
jge
icebp
es
mov
ret
xchg
test
push
mov
mov
mov
xchg
and
mov
out
pop
es
in
insb
xor
push
outsb
test
orb
ljmp
dec
pop
ja
xor
mov
jb
out
or
pop
addr16
xchg
dec
cmp
imul
out
pop
repnz
add
dec
fsubl
inc
outsl
repnz
jp
cmc
sub
pushl
add
je
dec
push
push
out
push
sti
or
and
rcl
add
imul
lret
repz
repnz
mov
xchg
pop
sbb
sub
push
jnp
and
rcll
dec
inc
mov
jmp
cld
pop
mov
aaa
out
dec
pop
mov
test
sub
pop
inc
jp
dec
sub
loop
pop
aaa
mov
dec
jecxz
ja
imul
loope
jecxz
lcall
push
push
xchg
cld
mov
mov
or
lahf
push
add
in
repnz
adc
xchg
pop
dec
fninit
lds
pop
dec
sbb
push
jg
roll
jno
mov
xor
mov
or
dec
push
mov
repnz
cwtl
pop
call
jmp
imul
sbb
loopne
pop
dec
push
daa
mov
inc
jg
adc
or
imull
into
jb
aaa
bound
and
or
xchg
cli
mov
xor
shll
lahf
lds
sub
shrl
loop
in
dec
pop
test
pushf
aas
or
scas
fnsave
loope
cmp
fidivs
testb
in
lret
negl
popa
inc
xchg
jp
cmp
mov
les
mov
fldlg2
push
pop
int3
pop
mov
mov
jb
gs
push
in
mov
mov
mov
movsl
andl
mov
xchg
movsl
mov
test
ret
dec
dec
loopne
in
mov
je
dec
push
adc
scas
push
xchg
js
rcr
add
jne
or
imul
dec
push
dec
sub
mov
add
addb
adc
dec
mov
sbbl
dec
cwtl
nop
fbstp
je
loope
insl
and
cmp
clc
sub
arpl
pushf
mov
mov
test
subb
push
lods
pop
xchg
loopne
cltd
sub
or
dec
js
mov
jns
test
stc
shlb
xor
adc
rolb
pop
ss
xor
sub
jns
pop
push
iret
xor
rorl
cs
int
mov
xlat
fdivr
or
mov
jg
or
xchg
lea
aad
mov
adc
lret
call
es
das
or
cmc
and
push
and
inc
arpl
xchg
add
scas
in
andb
movsb
jmp
nop
push
push
outsl
mov
push
adc
inc
push
popf
inc
stos
shrb
jle
inc
xchg
insb
pop
lods
sbb
shl
dec
mov
addr16
int
adc
push
dec
xchg
dec
iret
jno
in
sbb
mulb
outsl
mov
jecxz
hlt
pop
cli
push
std
loopne
sahf
call
mov
mov
ja
cmp
cld
test
fmull
pop
nop
in
cmp
sub
dec
inc
pop
push
out
mov
mov
adc
dec
fbld
pop
fisttps
pop
das
xchg
jle
adc
xor
out
lret
sarl
int3
mov
cmc
sarl
or
add
mov
xchg
scas
int3
xor
push
push
xor
in
jno
xor
mov
movsb
outsb
scas
nop
pop
stc
mov
pop
insb
xchg
js
imul
mov
push
dec
movsl
add
mov
fwait
jnp
inc
js
pop
cld
scas
arpl
clc
sbb
push
inc
addr16
cmp
int3
in
cmpsb
jl
add
jb
pusha
and
cmp
dec
movsb
mov
inc
scas
jmp
inc
xor
fstps
loope
in
push
mov
mov
loopne
xchg
das
push
xor
xchg
cltd
mov
arpl
inc
push
xchg
cmp
call
push
add
fisubrl
sub
push
xor
sbb
mov
outsb
fnstcw
clc
jae
cmp
mov
icebp
lods
inc
and
stos
jecxz
in
add
mov
cltd
jae
sahf
notl
pushl
faddl
mov
push
aad
dec
addr16
sti
mov
xor
or
arpl
cld
lret
out
sub
dec
and
mov
xchg
lahf
push
cwtl
adc
mov
negb
pop
xor
repnz
inc
xchg
fidivs
repnz
rcll
fnstenv
add
std
dec
iret
cmp
jnp
lret
and
ret
fcomip
jns
inc
adc
stos
inc
sahf
jbe
xor
mov
lcall
inc
sub
rcr
cmpsb
js
aas
xor
shrb
xchg
out
int3
call
fstpt
fadd
loop
daa
sub
pop
mov
je
loop
xor
push
frstor
pop
push
pop
xor
inc
rorb
xchg
insb
xchg
dec
lahf
add
stc
decb
shl
add
xchg
pop
jne
fcmovb
imul
adc
add
stos
mov
jns
jo
and
scas
inc
jo
adc
cmp
rorl
push
or
movsb
movsb
repz
lahf
aad
mov
mov
mov
divb
add
into
in
mov
addr16
cld
cmp
popl
pop
inc
jno
push
pop
xchg
xor
pop
fildl
push
aaa
inc
jnp
mov
popa
lea
dec
cmp
call
dec
pop
mov
test
inc
lods
lcall
nop
sub
mov
ss
push
sub
adc
arpl
push
sub
adc
lret
mov
fisttpll
popf
dec
shr
cltd
mov
lahf
adc
push
gs
shlb
insb
icebp
insb
scas
in
pop
mov
jns
xchg
or
setg
lods
and
and
cld
sbb
dec
dec
cmp
xchg
jle
mov
in
push
mov
cmp
ja
gs
cmp
out
inc
imul
mov
dec
loopne
xor
xor
jg
imul
je
jl
scas
mov
adc
pop
mov
sbb
xchg
fdivs
outsb
sti
jl
mov
cmc
fsubl
aaa
fldl
sub
jbe
jl
and
sub
movb
sahf
jecxz
aam
push
mov
rorl
xchg
sub
cmp
insl
stos
call
or
push
ret
int
sbb
xchg
jae
pop
pop
push
movsl
adc
jb
nop
aas
jl
dec
or
shll
or
mov
adc
jle
cmp
inc
sahf
jp
dec
and
in
cmp
lock
stos
push
out
outsb
pop
inc
pop
pop
fwait
jno
sbb
enter
out
pop
sti
mov
scas
inc
push
xchg
push
scas
xchg
push
negl
fs
inc
xor
xchg
stos
sub
mov
hlt
jns
add
cmp
inc
cmp
mov
cltd
xchg
or
inc
xor
jmp
ret
gs
jb
pop
dec
mov
jbe
ljmp
cmpsb
xchg
test
notl
lret
fldcw
cld
add
subb
push
fldcw
outsb
xchg
pop
cmpsl
jge
rol
mov
sub
imul
mov
iret
inc
repnz
test
push
sar
sbb
iret
cwtl
addr16
enter
rcrb
mov
sub
dec
cli
je
and
add
mov
or
sbb
out
mull
aad
push
dec
pop
add
push
sbb
test
cli
in
jmp
out
lds
mov
sbb
and
test
out
mov
xchg
sub
sahf
lret
jnp
iret
lahf
icebp
aad
in
mov
dec
icebp
mov
and
outsb
int
adc
add
mov
pop
sti
in
pop
mov
dec
std
imul
jns,pn
insl
pop
mov
inc
std
insb
mov
mov
xor
or
mov
sub
ja
mov
mov
mov
insb
ficompl
jmp
mov
cwtl
into
jno
outsb
out
sbb
in
or
fld
add
cltd
jbe
xor
in
cmpsl
push
xchg
popa
xchg
or
shll
mov
movsb
loopne
pop
or
xchg
push
mov
into
pop
or
out
fimuls
test
call
inc
cmp
insl
xchg
pusha
shl
mov
clc
sbb
mov
ret
out
sub
mov
iret
push
ficomps
sarl
add
jge
in
or
jnp
and
outsb
inc
nop
cmp
inc
enter
les
ljmp
inc
pop
mov
cmp
pop
mov
mov
and
daa
call
cmpsl
das
inc
cmpsb
mov
sub
and
roll
xor
inc
jno
mov
or
inc
int3
ja
fldt
testb
and
mov
mov
adc
nop
inc
mov
sti
push
loopne
pushl
pusha
cmpsb
inc
xor
cmpsb
mov
xchg
stos
iret
sub
xchg
mov
loopne
data16
mov
movsb
adc
mov
pop
js
div
clc
fcmovne
mov
fstpt
imul
out
mov
icebp
popa
xor
movsl
jmp
mov
cmp
je
push
mov
test
ss
clc
loope
rcr
lods
jg
push
or
lods
xor
nop
xchg
nop
test
mov
mov
pop
scas
inc
fidivrl
inc
mov
shl
pop
jle
in
clc
and
cld
and
scas
sub
xor
mov
add
mov
iret
into
push
inc
ja
dec
in
xor
mov
push
cld
mov
mov
dec
add
lods
addl
cmp
jb
dec
mov
test
push
sbbb
lods
mov
fs
mov
mov
push
jg
adc
loopne
cmpsl
scas
dec
mov
sbb
mov
mov
jb
cmp
cld
adc
stos
fdivrl
add
andl
rclb
out
rcrl
jmp
mov
xchg
sub
xchg
xor
push
ret
lea
inc
stos
shrb
sbb
ss
pop
stos
jbe
jb
xchg
mov
inc
lods
jl
xchg
xlat
mov
xchg
ss
xchg
js
das
ljmp
lock
mov
stc
jle
pushf
cmc
int3
icebp
movsl
pop
in
xchg
sahf
mov
outsb
push
iret
mov
push
pop
pusha
mov
loope
xchg
incl
pop
stc
jecxz
and
lahf
test
sub
insl
xchg
insl
xlat
xor
fidivs
add
mov
jno
lds
adc
daa
sub
movsb
mov
aam
mov
imul
sbb
sti
aaa
ret
fucomp
test
sbbb
ss
fwait
mov
jl
jle
scas
push
or
dec
int
sub
mov
push
lcall
and
inc
cs
stos
out
mov
sub
sbb
fucomp
negb
cmp
xchg
mov
mov
sti
push
cmp
inc
xor
pop
das
mov
mov
push
outsl
add
sub
push
jp
cltd
sub
xchg
sub
cltd
jecxz
mov
cmpsb
jo
cmp
pop
inc
inc
das
pop
inc
int
ds
movsl
call
cmp
jae
xor
cmp
jp
das
jg
xchg
insb
arpl
aad
in
sbb
pusha
icebp
push
arpl
mov
call
mov
sbb
icebp
jo
xchg
int3
lds
push
pop
inc
xor
mov
xlat
subl
mov
in
pop
out
mov
xchg
nop
cmp
in
in
in
cld
mov
pop
push
xchg
popf
sahf
pop
and
jne
arpl
or
outsb
pushf
leave
jne,pn
fnsave
fstps
out
sarb
aaa
sarl
movsb
fsubs
push
adc
dec
pop
pop
in
ljmp
xor
icebp
xchg
cmp
sbb
xchg
cltd
sub
adc
es
ret
jno
test
dec
xchg
pop
sub
mov
roll
inc
push
sub
repz
imul
jae
inc
notl
mov
movsb
jge
push
mov
ljmp
outsb
shll
pop
mov
jns
and
pusha
cmpsb
mov
jecxz
jg
pop
jo
add
popa
jne
pop
iret
jg
jo
repnz
mov
adc
fwait
jmp
cli
cltd
test
mov
fldcw
test
sahf
roll
mov
mov
mov
fdivl
pop
cmp
sub
fisubs
in
pushf
fwait
mov
jae
cmp
adc
mov
scas
sbb
mov
mov
into
mov
xor
xor
addb
jbe
clc
or
enter
mov
lods
jle
lcall
adc
sub
negb
jbe
ds
mulb
movsb
xchg
xchg
mov
addr16
cmp
or
or
sbb
fisttpl
mov
pop
jmp
cmp
nop
call
pusha
int3
mov
out
not
adc
cli
lods
aaa
pop
orl
sub
mov
in
int
sub
or
lahf
mov
add
gs
jmp
jno
pop
aas
or
jmp
aas
in
jle
mov
mov
cmc
mov
xlat
pop
mov
cwtl
arpl
mov
inc
pop
cmp
divl
mov
jp
addl
sbb
negb
les
dec
adc
sub
cmp
jns
int3
mov
xor
mov
mov
data16
and
and
cmpsb
scas
xchg
aad
aaa
movsb
in
add
sub
adc
ja
sbb
jle
in
neg
add
push
sbb
aaa
loope
sti
repz
loop
ret
imul
sbb
jecxz
xchg
push
xchg
xor
shlb
out
mov
rolb
sarl
mov
mov
faddl
clc
fldcw
and
out
sar
xor
add
xor
push
adc
adc
stos
ss
enter
mov
adc
add
add
inc
aam
mov
push
movsl
lds
pop
nop
insb
out
js
bound
jmp
sbb
add
sub
xchg
lods
xchg
int3
jns
and
hlt
cld
cmp
jb
xor
inc
mov
sbb
jae
aas
jo
pop
fs
mov
lods
dec
mov
pop
mov
pop
rcll
es
out
divb
lea
jecxz
shll
shlb
push
or
mov
das
cmpb
pop
mov
scas
incb
jg
stc
push
dec
mov
mov
in
mov
scas
xor
mov
fists
pop
push
hlt
test
fisttpl
jg
lcall
mov
int3
mov
cmc
mov
or
icebp
or
cmp
cmp
loop
ss
jecxz,pt
adc
aad
mov
es
addb
idivb
andl
rorl
sbb
test
mov
mov
imul
sahf
ss
loope
ss
test
xor
mov
xor
je
mov
shlb
arpl
jge
mov
mov
loope,pt
scas
enter
bound
cmp
inc
cld
sub
pusha
xor
aam
lock
mov
mov
inc
xchg
mov
xor
adcl
fisubrs
dec
lret
jnp
aas
or
call
bound
aad
or
pop
or
out
push
sub
push
push
shlb
mov
sbb
xchg
adc
pop
iret
push
lods
pop
addr16
outsb
dec
ficoms
das
jnp
add
pop
test
inc
in
sahf
fisttpl
pop
mov
mov
fwait
mov
fnstenv
add
dec
ljmp
mov
or
inc
push
xchg
int3
test
push
rolb
mov
mov
mov
sbb
sbb
push
dec
iret
test
jge
mov
test
loope
aam
jne
cs
out
jl
xor
and
dec
mov
mov
scas
inc
pop
sbb
or
daa
inc
pusha
and
inc
add
aas
jb
mov
jp
add
mov
dec
sbb
push
pop
dec
iret
pop
adc
xchg
pop
idivb
inc
and
call
fimull
mov
dec
jmp
lock
das
push
inc
mov
ja
into
fnstenv
push
inc
mov
lcall
icebp
sahf
cmp
inc
cmc
repz
inc
push
inc
mov
or
mov
xchg
push
jne
mov
int3
gs
in
jbe
roll
int3
sbb
dec
mov
mov
int
push
leave
sbb
mov
mov
iret
sbb
push
mov
mov
and
push
aas
dec
stos
xchg
inc
xor
lods
stc
xchg
jns
je
pop
dec
movsb
xorl
pop
repz
cmp
mov
lock
rorl
pop
loop
xor
fdivs
rcrl
cmp
loope
mov
jae
mov
lcall
inc
stos
lcall
imul
adc
imul
xor
dec
ja
aad
push
push
sub
fiaddl
pop
and
xchg
or
daa
adc
lea
push
or
dec
add
mov
adc
icebp
mov
clc
inc
mov
mov
shll
dec
fisttpl
mov
test
repnz
hlt
xchg
fisubs
cmp
aam
es
jmp
xchg
icebp
flds
sahf
jbe
pop
int3
jg
jns
pop
adc
xchg
jno
cmpsb
aad
push
insb
adc
loop
dec
nop
ljmp
adcb
adc
push
gs
xlat
scas
arpl
sti
andl
dec
stc
stc
mov
and
mov
mov
mov
out
add
lock
sub
lock
sahf
or
cwtl
cmc
pop
stc
test
push
jns
rorb
push
mov
push
push
jge
sub
imull
add
pop
mov
sbb
cmp
jg
inc
popl
lods
pop
or
stc
stos
xchg
orl
and
int
shrl
scas
add
inc
sub
mov
sqrtps
clc
ret
lahf
xor
lods
adc
loope
mov
mov
lea
imul
iret
push
popa
sbbl
fidivrl
add
mov
sbb
xor
mov
pop
push
pop
adc
xor
insb
push
imul
inc
loop
lods
aas
mov
or
in
fsubrp
sbb
dec
lock
rorb
sub
sbb
mov
jp
mov
pushf
lock
iret
stc
mov
dec
mov
jae
rcrl
fwait
xchg
sub
sbbl
mov
aaa
bound
cltd
sub
in
mov
mov
pop
adc
notl
inc
das
ds
mov
inc
adc
js
stos
mov
rolb
sbbb
fadds
adc
push
push
jecxz
dec
pop
mov
shlb
pop
pop
loop
jl
movsl
xor
movsb
lret
pop
sub
loopne
pop
adc
sbb
jmp
es
mov
adc
xchg
jge
dec
cmp
sbb
pop
cmp
sub
sub
nop
xlat
loopnew
aas
sub
cmp
sub
xchg
cmp
xchg
lret
in
dec
add
imul
ret
clc
testl
mov
lcall
adc
jbe
dec
sub
sbb
lahf
and
rcll
jecxz
push
jge
ss
clc
divb
gs
pop
fnstsw
adc
mov
out
adc
ret
sub
fs
lods
sahf
ljmp
std
adc
jae
test
popa
ret
cld
insl
inc
in
inc
jns
jnp
pop
ret
negl
daa
cmp
add
popf
xlat
jl
loope
nop
and
jge
js
outsl
cmp
dec
leave
mov
add
imul
dec
out
and
mov
mov
add
jl
adc
inc
enter
lahf
cmp
mov
dec
shrl
jecxz
inc
jecxz
sbb
repz
jecxz
cwtl
push
les
lds
mov
ficomps
xchg
ja
lods
lds
mov
flds
cmovg
inc
mov
xchg
mov
sub
mov
push
rcll
inc
es
scas
pop
push
je
fwait
std
cmpsl
pop
or
xor
sub
xchg
push
or
cmpsl
mov
popa
add
divb
popa
int3
jp
inc
mov
mov
inc
daa
sti
in
jg
mov
jmp
push
cmpsl
sbb
cltd
sub
sbb
hlt
stos
sub
cld
mov
mov
fdivl
and
in
dec
insl
and
lret
shlb
or
push
jg
push
daa
or
in
pop
sub
dec
out
cli
in
loop
add
lret
push
cltd
mov
imul
fmulp
xchg
ficomps
and
inc
imul
fwait
out
cmp
fxam
xchg
mov
enter
ficoml
iret
mov
xchg
shll
inc
dec
out
incb
dec
outsl
mov
jp
ss
and
cld
mov
out
lahf
cltd
push
lods
lcall
ret
dec
inc
in
jmp
fs
push
mov
aaa
mov
cmp
xlat
push
call
fnstsw
fisttpl
out
dec
xor
xor
adc
jbe
jle
test
cmp
dec
dec
imul
std
cltd
jp
cmp
mov
scas
scas
cli
cmp
mov
test
sbb
push
pop
pop
pop
pop
pop
lahf
iret
lds
rolb
or
sti
pop
jno
push
into
mov
jecxz
inc
pop
xchg
sbbl
push
ss
adc
jnp
lods
mov
lods
dec
pop
stos
sub
insb
xor
aam
push
sahf
test
addr16
cmpsl
add
xchg
dec
fidivrl
imul
mov
xchg
cltd
pop
nop
out
adc
lcall
aas
dec
push
and
movd
ds
jmp
push
cmp
addl
mov
insb
dec
std
into
mov
cs
jo
test
jl
lret
loop
push
fists
mov
push
dec
xor
movsb
xor
cmpsb
outsl
ret
out
adc
adc
les
jno
or
frstor
dec
sub
enter
adc
cli
adcl
dec
mov
ror
call
jge
adc
or
xchg
xor
lds
fisubrl
scas
cltd
add
dec
cli
aad
cwtl
in
mov
mov
or
ret
sbb
push
dec
dec
cld
div
cmpsb
andl
or
adc
mov
stos
aaa
add
fists
fsubl
pop
pop
repz
push
dec
cmp
xorl
cmpsl
pop
movsbl
gs
ja
mov
orl
mov
sub
lods
movsl
pop
pop
out
das
add
mov
or
xchg
mov
test
test
xchg
mov
add
mov
cmp
inc
sub
adc
push
cli
xchg
jle
xchg
leave
and
sub
push
or
stos
sbb
add
out
dec
xchg
lret
int
pushf
cld
adc
pop
mov
mov
cwtl
js
divb
mov
or
ljmp
jnp
adc
jge
mov
adc
adc
dec
push
movsl
notl
insb
xor
inc
loop
inc
push
and
mov
push
int3
je
in
inc
or
sub
test
mov
mov
negl
push
cmp
cli
in
mov
test
push
mov
push
daa
pop
fstp
in
and
fisttps
into
jmp
in
mov
add
push
insl
cs
sbb
jecxz
cmp
push
idiv
xchg
in
jno
dec
xchg
sbb
fisttpl
cld
enter
sub
jecxz
stc
and
iret
movsb
in
stc
jecxz
xorl
pop
fldl
xor
fwait
push
push
loopne
mov
mov
cmp
mov
repnz
movsb
iret
sub
int
bound
jmp
or
jb
ja
push
vcmpsd
jp
dec
sbb
jnp
enter
pop
mov
mov
ja
lock
mov
dec
rolb
cmp
pop
adc
jp
sbb
shll
aam
ljmp
mov
aaa
arpl
addl
push
or
iret
pop
xor
call
add
inc
and
ja
ss
sahf
std
decl
outsl
mov
or
push
lret
and
cmpb
mov
aad
faddl
sarl
negb
mov
or
inc
inc
cmp
mov
loope
jns
sbb
repz
and
inc
lcall
xor
jo
clc
in
adc
int3
scas
sub
jo
lret
jge
clc
sub
and
ljmp
jnp
xchg
and
daa
aam
xlat
cld
sbb
push
mov
ret
inc
outsl
dec
jne
fisubrs
xchg
shrl
sbbl
inc
cwtl
imul
add
icebp
call
xchg
stos
paddq
pop
scas
inc
xor
out
mull
jmp
rcrb
das
pop
mov
fcoms
addr16
das
jl
mov
call
mov
das
lahf
mov
sarl
loopne
out
pop
jmp
inc
fsubs
scas
scas
outsb
mov
into
adc
mov
out
hlt
cmpsb
lods
sub
sub
cli
add
lret
cmp
fsubrp
mov
imul
lds
pop
ss
pop
fbstp
fdivl
fwait
cmp
push
imul
lods
xlat
into
xchg
int
popf
mov
std
ja
mov
in
movb
adc
scas
jbe
sahf
mov
sbb
push
xchg
das
cmp
sbb
xor
mov
and
fistl
add
sahf
lret
xchg
jne
aaa
add
cmpb
mov
inc
test
mov
int
jecxz
push
xchg
enter
adc
popf
lret
or
cmp
mov
popl
dec
cmpsl
jl
jnp
cld
cltd
aam
inc
cli
call
sbb
lods
outsl
cmp
mov
inc
enter
test
data16
sub
push
pop
jae
ja
jo
cltd
mov
or
sub
ds
and
mov
mov
cld
sbb
aad
sub
ss
insl
ja
test
mov
mov
xchg
das
xor
and
mov
xor
fnstenv
inc
add
stos
pop
loop
or
push
stc
sub
out
sbb
aad
cmp
in
push
lods
std
mov
dec
jle
mov
ljmp
call
mov
rcrl
out
shlb
addr16
mov
mov
loopne
aas
fdivs
xor
inc
ja
mov
mov
lret
mov
inc
sub
fs
hlt
cwtl
and
test
push
sahf
push
test
xor
imul
sarb
mov
or
inc
loope
xchg
out
fs
nop
pop
popf
fwait
inc
ror
popa
jns
popf
mov
sbb
push
movsb
mov
xchg
sub
push
sbb
xlat
fistpll
add
xor
adc
xor
inc
popa
rolb
ja
mov
fistpll
out
xor
test
adc
xor
or
cmpsl
loop
and
push
jnp
inc
idiv
adc
mov
mov
cld
cmp
dec
leave
int
rorb
cmp
lahf
pusha
stos
add
mov
ja
clc
pop
test
adc
dec
lds
nop
adc
push
test
and
jmp
sbb
aam
dec
mull
inc
xor
lock
cwtl
fbld
lea
pop
push
icebp
pop
in
lock
jno
fstpl
mov
test
add
mov
pop
fmul
sbb
push
loop
pop
sahf
gs
xchg
icebp
dec
mov
xor
dec
xor
jg
and
inc
cmp
scas
es
loopne
mov
popa
mov
lods
test
pushf
lea
data16
cltd
mov
ljmp
arpl
jp
mov
push
jo
cmp
sti
test
lods
jb
call
lds
inc
mov
or
jp
lahf
imull
js
daa
shr
sbb
out
rcrl
push
add
pop
mov
mov
cmc
dec
inc
jne
xchg
shlb
hlt
js
popa
bts
xchg
gs
mov
dec
push
ret
cwtl
ss
inc
inc
dec
rclb
or
add
pop
mov
in
mov
push
fstpt
stos
sub
negl
mov
hlt
jge
xchg
mov
les
push
cmpl
nop
daa
ja
mov
xchg
xor
cs
xor
repz
data16
loop
in
pop
ds
xor
mov
jb
inc
icebp
mov
fs
jns
rorl
stos
mov
shll
test
push
cmp
push
roll
cmpsb
int
gs
pop
pop
and
cmp
sbb
rsqrtps
inc
in
insb
pop
jns
add
loopne
pop
add
sbb
stos
mov
mov
xchg
cmp
adc
loopne
mov
pop
daa
lret
into
fbstp
dec
les
cmpsb
push
stos
xor
jns
sbb
sbb
mov
xchg
push
rcr
adc
dec
insl
mov
pop
push
push
call
and
xlat
and
fdivrs
and
int3
cmp
lock
pop
mov
cmp
xchg
inc
mov
push
cli
sbb
adc
dec
popa
cld
lea
pop
fs
xchg
push
xchg
dec
lahf
push
pop
hlt
leave
add
xlat
pop
mov
scas
lock
adc
ljmp
push
loop
movsl
mov
pop
xchg
popf
aaa
lcall
mov
push
lods
mov
clc
push
les
das
les
fbstp
test
push
lcall
hlt
addl
xor
jg
dec
xchg
imul
or
xchg
xor
sub
mov
das
jg
xor
ja
lods
inc
std
mov
mov
notl
or
cmp
jb
out
leave
push
andb
sbb
ja
push
gs
adcl
pusha
hlt
jmp
lods
shll
outsl
loop
adc
mov
mov
adc
das
xchg
dec
or
or
stos
arpl
jns
fmull
jl
pop
shrl
pop
sahf
adc
fwait
out
mov
jb
bound
out
add
test
xorb
pop
push
loop
cmp
lea
inc
test
sub
inc
pop
mov
cmp
mov
lds
cltd
pop
or
dec
jne
scas
lods
clc
es
iret
and
mov
test
adc
mov
jl
sub
adc
fwait
adc
jns
mov
daa
cmpsl
fidivrl
pop
cmpsl
mov
adc
adc
jns
add
dec
or
inc
sub
fldt
xchg
test
jecxz
sub
or
pop
pop
xor
ljmp
mov
testl
aas
enter
dec
je
push
jle
fidivl
imul
rclb
fiaddl
nop
sbb
jno
fstl
jmp
pop
sbb
mov
aam
std
lock
in
nop
add
les
and
nop
je
push
inc
popl
repz
mov
test
xor
mov
icebp
jp
cmp
sahf
jl
jl
scas
es
or
addl
fwait
and
mov
mov
adcl
fdivs
pop
mov
test
in
enter
scas
sub
mov
inc
hlt
jp
fidivl
mov
jle
pop
stc
inc
aas
jns
fstp
lret
in
lret
push
push
jnp
je
mov
inc
fsubrs
dec
loope
sbb
fldl
fs
xchg
mov
mov
cltd
fldt
and
jmp
xor
ret
cmp
arpl
lock
pushf
add
add
xchg
or
inc
lock
out
xor
mov
sub
gs
icebp
fsubrl
fs
ffreep
jg
ljmp
mov
xchg
orl
jmp
jno
dec
lea
cmp
subl
das
xlat
test
jo
dec
into
loope
push
fisubrs
repnz
js
pusha
mov
pop
and
arpl
nop
inc
testb
inc
dec
push
imul
dec
negl
xchg
push
insl
jge
push
in
cwtl
inc
xchg
sub
jns
cmp
rclb
mov
cmp
mov
lret
dec
add
jbe
cli
jno
in
pop
pusha
xchg
lods
mov
pushf
mov
out
cld
adc
xchg
movsb
mov
lods
jle
hlt
cld
adc
xchg
sbb
mov
aaa
mulb
add
adc
xor
cltd
pop
jp
dec
inc
push
in
or
repz
and
add
aam
lahf
dec
xchg
pop
outsb
jmp
xchg
pop
ret
shrb
lret
jo
adc
mov
mov
dec
add
aam
iret
in
pushf
jmp
inc
ss
dec
out
mov
imul
fstl
xor
dec
testl
fildll
inc
movsl
aas
cmp
mov
pop
cmc
sbb
cmp
mov
ja
imul
xchg
sbb
fists
cmp
sub
sbb
push
aas
or
jns
cmp
add
outsb
lods
add
lahf
push
cmp
mov
mov
gs
fstl
cltd
sub
pusha
leave
in
mov
fucom
sbb
fidivs
jl
movsb
sub
fidivs
mov
leave
std
cmp
mov
scas
or
mov
out
ffree
lods
add
fsubl
jmp
or
adc
mov
icebp
pop
out
inc
cmpsb
adc
add
or
pop
hlt
or
das
clc
das
pop
pop
test
jg
mov
xchg
repnz
push
ror
and
jp
pushf
jns
loop
xchg
inc
mov
aam
add
adcl
pushf
add
push
pop
xorl
sbb
push
leave
jbe
cmp
xchg
icebp
mov
dec
fimuls
sub
mov
jle
mov
lds
imul
xor
mov
jnp
roll
xchg
mov
dec
lock
shll
cmp
pop
pop
scas
scas
imul
mov
xchg
jecxz
negl
or
bound
or
fiaddl
into
dec
mov
push
dec
sbb
jle
jns
and
or
fs
outsb
outsb
mov
xchg
in
mov
addr16
jne
fsubrl
sbb
xchg
xlat
lcall
lret
mov
mov
sahf
sahf
sub
jp
sbbl
sub
cwtl
jne
xchg
stos
pop
and
cmc
jp
jl
push
mov
in
mov
add
fwait
push
loop
jae
xchg
lea
popf
mov
jge
aam
mov
mov
lcall
dec
jge
leave
sbb
imul
or
nop
loopne
bound
mov
scas
mov
icebp
lahf
ficompl
cmpsb
fs
mov
xchg
dec
out
ljmp
inc
dec
sub
jecxz
divl
mov
out
imul
js
cmp
dec
dec
mov
gs
jecxz
push
inc
pop
xor
fmuls
insl
push
cmp
xchg
pop
add
push
cmpsb
mov
iret
sbb
xor
fimull
mov
fdiv
rclb
aas
jmp
out
test
jmp
xchg
icebp
leave
fiadds
dec
xchg
jge
push
mov
sahf
into
dec
push
and
fwait
out
fcoms
sarl
data16
add
and
mov
mov
jns
and
push
idivl
inc
inc
fisttpl
pop
add
mov
int3
addr16
and
clc
pop
in
jp
dec
push
mov
adc
cmpsl
stc
andb
cmpsb
push
movsb
sbb
mov
jecxz
push
fs
xchg
mov
sbb
idiv
or
mov
out
jae
ja
imull
int
pop
dec
push
lcall
rcll
out
fistl
or
lret
and
add
add
ret
cmp
fildl
pop
mov
xchg
mov
test
mov
sahf
mov
insb
xchg
or
int3
repnz
call
cli
mov
sti
or
add
int
push
and
mov
push
jnp
mov
std
xchg
dec
aam
in
cmp
or
or
into
test
das
dec
mov
shlb
aam
into
ficomps
fistps
pop
cs
aad
lds
aad
sub
mov
and
jnp
sub
cwtl
and
and
xchg
push
mov
and
push
cmp
cmp
leave
mov
sbb
and
mov
daa
and
neg
hlt
pop
sbb
test
and
stc
cmp
fstl
jp
lock
punpcklbw
and
decl
mov
adc
int3
inc
xor
es
mov
cltd
push
hlt
out
addr16
push
jg
popa
and
inc
mov
jae
mov
jmp
std
adc
and
cmp
iret
xchg
lcall
mov
push
adc
les
sbb
lods
or
sbb
cwtl
sbb
cs
lahf
loope
cmp
movups
push
je
sbb
arpl
aad
mov
in
shll
and
js
mov
lods
jg
out
xchg
clc
mov
push
not
idivb
adc
aad
sub
shrl
sahf
shl
or
aam
xchg
fisttpll
mov
cmp
roll
sbb
mov
notb
out
hlt
push
or
ret
sub
outsl
push
ljmp
lods
in
pop
inc
movsl
dec
scas
sbb
stc
xchg
pop
call
xchg
adc
push
xor
jns
add
popa
movsb
xor
pop
cmp
cmp
and
lds
out
mov
cmc
and
xchg
shl
sbb
dec
or
sub
scas
mov
sbb
push
mov
mov
add
xlat
push
adc
scas
push
push
fmull
jns
or
add
rorl
fwait
mov
lea
mov
xor
add
mov
test
jo
loope
leave
pop
mov
xor
pop
bound
push
test
fbld
fs
dec
push
mov
xor
mov
call
jle
int
jle
pminsw
fdivp
in
iret
vpaddw
scas
dec
stos
and
lret
dec
xchg
or
outsb
sbb
mov
pop
cmp
inc
inc
lea
sub
dec
pop
mov
neg
jnp
mov
cld
outsl
sbb
bound
sub
pop
lods
sub
stc
cmpsb
push
dec
add
cmpsb
push
fwait
cmpsb
cmp
inc
add
and
xchg
mov
pop
loop
mov
addr16
xlat
mov
test
movsl
xchg
jbe
push
cmp
inc
mov
inc
mov
push
jae
aad
xchg
dec
rorl
dec
dec
adc
test
icebp
into
or
ss
lret
inc
xor
out
in
adc
push
fcomip
sub
inc
cmp
xchg
pop
mov
out
lds
dec
test
imul
in
loopne
pop
pushf
mov
mov
mov
out
shrl
sbb
aaa
jmp
jmp
push
pushf
into
jle
shll
negl
in
and
or
aad
push
mov
mov
xchg
jecxz
add
ljmp
xor
and
repnz
sub
cmp
push
pop
xlat
dec
les
ds
je
out
pop
lahf
data16
xchg
sbb
movsl
frstor
pop
jo
mov
mov
dec
push
cmp
add
jp
dec
xchg
xchg
popa
lea
mov
jo
mov
dec
mov
pop
aam
hlt
mov
xor
lret
sub
xchg
mov
insb
push
jle
mov
jecxz
xor
outsl
or
mov
lds
in
movsb
add
sarb
dec
sar
ljmp
repz
jecxz
push
fstpl
rolb
mov
sbb
ss
rcrl
xlat
adcl
dec
push
push
shll
mov
xchg
pusha
xor
mov
sbb
lret
pop
cmp
fisttpll
stc
test
in
mov
rorl
xchg
xor
jns
inc
push
insb
bound
mov
aam
clc
ficompl
mov
cld
cmp
sti
mov
mov
jmp
ffree
push
cli
mov
lcall
jne
out
gs
ficomps
xor
and
mov
push
out
pusha
arpl
fwait
or
es
pushf
loope
xchg
popf
lock
or
push
or
inc
mov
cli
sub
inc
mov
loopne
fwait
decl
cmp
cs
cld
dec
jecxz
xor
mov
cmp
cli
xchg
mov
outsl
fwait
inc
ja
inc
flds
sub
iret
xor
mov
jnp
repnz
pop
xchg
mov
sub
out
mov
call
cmp
icebp
pop
insb
xor
fcmovnb
sub
dec
dec
jle
insb
xchg
shll
mov
jecxz
push
mov
xchg
jnp
jl
push
lea
jecxz
icebp
hlt
push
mov
xchg
ret
push
xchg
leave
popf
bound
scas
andl
cmp
pop
mov
in
jae
das
out
pushf
xor
jmp
inc
mov
stc
mov
ret
adc
cmpsb
mov
bound
std
cmc
mov
jno
lock
and
aam
cmp
or
cmp
mov
push
adc
pop
dec
push
cmp
icebp
shrl
xchg
inc
jae
aaa
hlt
and
mov
in
gs
push
imul
and
fcoml
inc
and
clc
mov
ljmp
jae
jns
test
push
ret
inc
mov
in
std
jmp
fiadds
add
mov
pop
jae
pop
in
test
pop
xchg
xchg
inc
inc
mov
add
pusha
dec
das
das
bnd
xlat
enter
cmp
add
mov
lods
dec
mov
pop
dec
add
test
xor
outsb
jecxz
cmp
test
leave
jp
mov
lock
dec
push
frndint
clc
cmp
into
fsubrl
jno
in
add
sti
mov
push
pop
adc
arpl
in
pop
hlt
leave
cmp
cmp
xchg
mov
dec
into
mov
xchg
mov
andl
loopne
lcall
jp
lsl
pop
or
cmp
push
pop
push
inc
pop
and
sahf
pop
and
je
add
sbb
xchg
push
ljmp
fidivrs
fsubrs
shll
popa
fwait
xor
dec
and
fcmovnu
stos
dec
daa
push
mov
adcl
sbb
pop
sbb
fstpl
xor
js
mov
lret
push
pop
addr16
cmp
sub
cmp
push
mov
mov
add
cs
iret
out
ds
jp
aad
adc
mov
mov
jecxz
adc
out
adc
addr16
ljmp
in
mov
lods
cmp
xchg
mov
or
inc
enter
mov
inc
dec
dec
iret
sbb
sbb
adc
lret
dec
cmc
xchg
mov
push
xlat
mov
xor
dec
mov
mov
sbb
mov
fnstcw
pop
sbb
out
mov
and
cld
aam
rcrb
add
out
add
inc
das
xchg
pop
push
int3
mov
repz
in
cmpsb
std
sub
in
loop
mov
stc
mov
pop
push
mov
cs
dec
icebp
addl
mov
movsl
sbb
mov
xor
fists
pop
rolb
dec
pop
jne
js
lods
outsl
pop
mov
lret
ret
aas
xor
repnz
data16
call
push
push
pop
cld
mov
shl
cmp
arpl
add
inc
pop
imul
pop
pop
fs
xchg
into
mov
out
xchg
mov
mov
pushf
fcoms
out
mov
inc
imul
fimuls
out
sti
insl
inc
sub
mov
icebp
call
push
rol
scas
cli
or
push
lock
mov
arpl
push
fisttpl
cmp
xchg
ja
xor
mov
adc
pop
and
xchg
mov
push
mov
test
push
cmp
mov
clc
fldcw
inc
mov
pop
fcmovnbe
nop
mov
addr16
inc
add
xchg
pop
push
cmp
mov
lea
mov
test
push
push
push
mov
lds
insb
int3
mov
shl
dec
icebp
sti
sub
in
xor
mov
sub
shlb
inc
sbb
inc
push
xlat
adcl
daa
hlt
cs
pop
sbb
lret
loope
cmp
sti
mov
add
mov
pusha
aaa
pop
jns
add
pop
xchg
xchg
sbb
cmp
out
cmc
insb
loopne
push
pop
hlt
adc
out
cmp
ret
push
sub
shl
mov
cmpsb
fs
push
mov
push
mov
out
sub
fcomps
fcoms
push
es
cld
jle
fistl
int3
cli
jns
fsubp
loop
fs
imull
push
dec
scas
rcrl
xor
int
mov
mov
fwait
mov
sub
cmpl
adc
mov
mov
clc
fisubl
or
cmp
lds
sub
cmc
fmull
sbb
lods
insb
movaps
in
jb
xchg
shl
shll
mov
inc
xor
dec
scas
sub
ljmp
or
aaa
es
mov
sub
dec
adc
scas
enter
clc
cmpsb
push
mov
mov
out
outsl
and
outsb
arpl
ss
test
lret
shufps
stc
test
aaa
out
repnz
popa
mov
loop
lea
mov
xchg
jle
mov
mov
not
dec
je
movsb
mov
adc
test
das
sub
or
lret
std
push
xor
mov
enter
lods
and
adc
loope
jns
xor
mov
mov
pop
mov
dec
push
shrb
cmpb
dec
sub
push
dec
xchg
dec
ret
pushl
stos
push
clc
sahf
mov
shl
lret
cmp
inc
popf
inc
fstpt
push
mov
movsb
add
xor
dec
in
std
insb
and
jae
arpl
je
outsl
dec
xlat
add
jmp
dec
imul
popf
mov
jae
idivb
testl
sub
jo
and
mov
inc
clc
inc
cwtl
test
fucomi
iret
jns
out
pop
sub
lds
adc
xor
scas
rorl
lock
scas
mov
stos
mov
sarb
xor
jne
mov
loopne
cmpsl
xor
xor
test
mov
test
mov
jae
jl
fucomp
repnz
add
movsb
dec
nop
int
mov
jmp
pushf
xchg
dec
fisttps
mov
repz
pop
jl
xor
dec
imul
xchg
cld
jg
divl
add
movsl
mov
aad
xor
into
stos
arpl
push
and
push
call
cmpsb
test
and
inc
mov
push
daa
into
cmc
and
dec
or
fsubrl
adc
push
test
push
pop
fdivs
cmp
fnsave
xchg
sarb
mov
outsb
fmul
int3
jns
repnz
leave
push
ss
inc
mov
icebp
out
jbe
faddp
ds
mov
js
pop
fldl
fimuls
ret
mov
pop
leave
mov
out
xchg
pop
bound
jnp
xor
out
xor
ljmp
add
psubsb
inc
stos
call
pushf
mov
xchg
jmp
out
mov
es
add
sti
mov
adc
mov
inc
inc
leave
out
pop
mov
xchg
inc
in
in
filds
fisttpll
xor
or
push
arpl
es
and
dec
push
fistl
nop
stos
stos
sbb
jecxz
insl
out
addb
test
hlt
sub
sub
inc
loopne
cmovg
rcll
mov
jne
or
xchg
aam
mov
mov
xor
xchg
sahf
daa
test
jge
sbb
ljmp
inc
mov
sub
addb
xchg
sub
dec
mov
jg
adc
test
add
push
ss
ss
gs
pop
xchg
mov
cmp
pushf
ret
and
jp
dec
aaa
sub
pop
jg
mov
popf
out
ret
adc
push
imul
out
stos
std
lret
out
int
add
xchg
pusha
insl
jae
bound
pop
out
or
or
lock
mov
fistps
pop
add
sbb
xor
pop
sbb
xchg
and
cltd
mov
mov
cwtl
jne
sbb
xchg
ss
cmp
adc
cmp
and
mov
mov
fwait
stos
mov
xchg
rorl
push
arpl
mov
jmp
add
shll
call
cld
push
sub
aaa
fcmovu
lds
xchg
mov
lahf
addr16
out
repnz
xchg
ret
jnp
sbb
mov
je
into
dec
insb
stc
scas
push
jmp
int3
inc
pushf
adc
adc
pushf
sbbl
fwait
push
mov
xchg
pop
fsqrt
icebp
out
cmp
lahf
insl
mov
xchg
sub
push
orl
std
mov
fnstcw
imul
mov
popf
inc
sbb
movl
popa
xchg
dec
aaa
mov
sbb
or
test
pushf
popa
dec
push
mov
xor
push
iret
negl
mov
jo
mov
jmp
call
adc
mov
or
adcb
push
jne
add
sbb
out
mov
neg
mov
mov
xchg
bound
and
or
dec
shl
loopne
ja
pop
and
or
lea
xchg
ret
and
lods
mov
daa
imul
mov
int3
push
xor
shll
inc
ror
xchg
mov
clc
and
xor
push
add
aas
mov
add
jns
pop
idivb
sarl
jnp
cltd
icebp
mov
xchg
jne
out
sbb
mov
inc
rclb
inc
jne
sahf
sbb
adc
mov
sbb
add
inc
movsl
push
shl
add
sub
add
cmpsb
dec
fisubl
xchg
popa
ss
sbb
lcall
jb
cmp
and
outsb
pop
ss
icebp
adc
push
sbb
in
jnp
dec
lcall
imul
cmpsb
icebp
mov
aad
sti
and
js
mov
dec
sbb
call
in
jo
jne
lds
ficomps
ja
imulb
sti
fistl
mov
add
adc
cmp
stc
adc
fisubrs
and
mov
out
adc
xchg
mov
sahf
sbb
ljmp
cmpsl
lods
ss
gs
jb
mov
cwtl
cmpsl
sub
dec
mov
ret
mov
stos
cs
fidivs
mov
adc
mov
aaa
cmp
in
leave
mov
adc
push
pop
scas
push
dec
outsb
sbb
pop
loop
rorb
cmp
clc
mov
add
push
lods
scas
lds
xchg
xchg
fs
jnp
xchg
in
and
cli
shll
pushf
notl
lods
mov
stos
pop
fadd
movsl
loopne
mov
pop
inc
mov
mov
fwait
mov
rorb
pushf
fistl
dec
cmc
sahf
inc
or
aad
in
dec
cmp
add
push
shrl
jno
cmpl
sub
sbb
test
iret
scas
push
loop
dec
and
out
cltd
or
and
mov
cltd
xchg
fs
psrad
lock
hlt
and
insl
insl
jmp
or
addr16
scas
icebp
pop
enter
cmpsb
xlat
mov
mov
shlb
imul
repnz
jbe
mov
into
sub
dec
or
cmpsl
fdivrl
ret
add
xor
sti
push
test
nop
orb
pop
push
jg
sarl
dec
jge
xchg
mov
leave
mov
cli
cmpsb
bound
jne
pushf
subb
cmp
int
push
daa
lahf
fisubrl
inc
aas
jmp
cmp
adc
push
push
sub
fcmovnb
sub
outsb
jo
add
adc
pop
sub
mov
push
mov
mov
add
popf
inc
divl
insl
rcr
pop
jne
jo
mov
leave
sbb
pop
sbb
mov
repnz
inc
or
lock
dec
pop
xor
push
jle
scas
mov
cli
xchg
pusha
movsb
adcl
jno
dec
cmp
ja
jmp
xor
lock
sti
sbb
inc
jg
xchg
fwait
push
inc
jmp
push
and
xlat
insl
inc
shl
cmpsb
mov
aas
jno
mov
lods
xchg
cmpsl
ret
jbe
pushf
imul
les
idiv
les
cld
inc
jg
mov
jno
adc
inc
stos
push
in
and
sbb
and
add
sahf
mov
xchg
pop
sbb
andb
rorb
or
jecxz
jp
fdivr
or
les
lods
xor
lret
test
adc
popf
mov
push
pop
int
mov
imul
push
pop
sahf
out
pop
adc
jne
gs
or
mov
nop
jmp
inc
in
and
mov
in
ljmp
fstpl
ret
subl
pop
cltd
out
xchg
xor
xchg
pop
jp
pop
lret
and
loop
cmp
adc
getsec
add
mov
lcall
ljmp
enter
pop
cmc
or
push
sbb
sti
movsl
or
jmp
dec
iret
in
xlat
test
mov
lret
mov
pop
in
cmc
mov
in
dec
movsl
data16
xchg
add
xor
add
data16
and
outsb
pop
lret
xor
insl
fbstp
cld
inc
mov
data16
dec
push
jne
out
add
das
fidivrs
cli
insb
andl
adcl
add
cwtl
push
adc
imul
out
pop
call
jmp
xchg
sub
mov
and
mov
test
lcall
add
in
adc
add
jmp
rorb
cld
pop
ljmp
nop
test
xchg
andl
negl
mov
mov
rol
popa
pop
sbb
and
and
fdivl
int3
inc
jae
pop
push
or
and
mov
es
movsb
fldcw
push
sbb
inc
push
cmpl
scas
rclb
and
rcrb
lret
cmp
in
dec
xchg
data16
insb
sub
push
mov
push
push
cld
lock
subl
repz
bound
int3
cmp
adc
negl
mov
stc
push
cmp
cmp
arpl
xchg
and
rclb
loopne
xchg
das
inc
push
xchg
inc
pop
cwtl
or
cmp
sub
push
ret
pop
scas
dec
sbbb
pusha
add
cmp
stc
int
gs
pop
mov
into
sbb
imul
inc
jp
push
pop
fsubs
adc
lods
jecxz
sbb
xchg
pushf
es
aaa
sub
xchg
jg
xlat
pop
and
xchg
mov
dec
adc
xchg
jo
sub
test
jg
push
movsl
aam
or
push
stos
xchg
mov
sarb
xchg
stos
jp
std
jp
scas
mov
pop
xor
pop
ret
cmp
andl
and
and
jbe
dec
gs
push
divb
sbb
xor
xchg
xchg
lcall
inc
fcompl
jae
sahf
andl
adc
mov
data16
fcmovne
fst
xor
lds
mov
mov
stos
aaa
out
inc
xor
in
mov
and
add
cmp
pop
fisttpl
cli
push
push
test
lock
push
dec
mov
adc
fcoms
lea
jbe
mov
stos
arpl
jmp
mov
loopne
stc
jge
aaa
inc
sub
cmp
lods
shlb
push
pop
push
fadd
stc
jmp
cmp
lret
pusha
sbbl
fistpl
cmpsb
inc
pop
fdivl
mov
pusha
enter
aam
adc
inc
push
int
push
out
sarl
sbb
test
pop
jne
pushf
sub
adc
mov
scas
mov
sub
mov
xchg
adc
pop
inc
push
fcomi
dec
popf
dec
test
pop
mov
ret
pop
ret
imul
mov
inc
push
dec
xchg
sbb
jo
mov
mov
adc
push
xor
repz
cld
divl
jnp
add
mov
mov
rclb
push
mov
int
mov
test
rolb
pop
movsl
fbstp
leave
pop
daa
fisttpll
inc
dec
cmp
insb
loopne
ljmp
bound
test
xor
mov
es
divb
push
repz
scas
scas
arpl
push
daa
cwtl
cmp
and
aam
mov
sbb
inc
inc
jl
jl
cmp
sahf
fs
mov
sub
xchg
xchg
outsl
test
mov
aaa
aaa
out
jns
push
mov
xchg
push
mov
outsl
xor
adc
mul
pop
mov
pushf
rolb
push
mov
lock
rorb
sub
cs
mov
sub
pop
insb
mov
cld
fisubrs
rclb
pop
jo
or
cmpsl
stos
das
stos
icebp
sub
sbb
jge
lcall
fildl
pop
mov
or
addr16
or
or
cmp
mov
push
pusha
outsl
mov
das
jne
mov
and
dec
dec
mov
pop
icebp
fwait
cmpsb
sarl
jg
mov
cld
mov
sub
call
bound
and
lods
sbb
dec
sbb
mov
ret
cmc
xor
and
mov
rcrl
xor
jmp
jnp
shlb
adc
shll
daa
rcl
loop
nop
push
arpl
sub
scas
out
push
pop
lock
jmp
in
inc
lds
cmp
cltd
test
lods
or
mov
xor
cmpsl
aaa
scas
adc
xor
sbb
xor
dec
jae
mov
test
mov
sbb
clc
or
outsb
cmp
movsb
adc
and
in
cs
inc
sbb
test
fcomps
notb
pop
in
mov
push
movntps
xchg
jbe
pop
fcoml
xchg
lret
or
in
pop
jnp
addl
test
dec
lcall
inc
or
mov
cmpsl
cmpsl
mov
and
mov
arpl
mov
out
leave
mull
int3
mov
push
jmp
pop
out
add
jnp
cmp
aaa
mov
mov
lods
call
jg
adc
jp
and
sbb
push
push
mov
enter
rcrb
mov
push
or
in
pop
stc
outsl
xor
andb
rorl
dec
cmpsb
in
bound
iret
jle
sub
or
icebp
or
jp
int
mov
ds
or
xchg
mov
mov
pop
sti
lret
out
or
and
inc
outsl
fs
adc
popf
imul
lcall
cmpsl
cmp
ret
out
jl
lcall
jae
stos
adc
fsubr
sbb
shll
test
sbbb
pop
gs
adc
sbb
dec
cs
pop
jae
sbb
mov
aam
mov
xchg
bound
add
dec
push
roll
pop
mov
nop
lock
cmpsb
push
push
and
push
out
mov
popf
cltd
into
stos
cmp
pop
jmp
nop
add
icebp
fmuls
push
inc
stos
pop
mov
pop
sarb
jnp
sahf
aad
out
cmp
js
fnsave
and
arpl
pop
jo
adc
or
push
gs
int
stc
and
xchg
inc
push
sbb
outsb
pushf
in
fdivr
cmpsb
push
ret
xor
push
cmp
xchg
or
int
mov
rolb
out
fsts
xchg
mov
or
or
std
mov
xlat
pop
fistpll
in
fiaddl
xor
lret
xor
pop
mov
mov
pop
test
cmpsl
jno
iret
enter
push
mov
adc
cmpsl
int3
jle
push
xchg
mov
aad
cmp
lret
inc
in
push
sub
dec
daa
mov
ret
pop
xlat
sbb
fnstcw
push
inc
mov
js
mov
mov
sub
jns
aam
xchg
fisubs
psubsb
adc
aaa
push
xchg
arpl
roll
cmpsb
lret
push
mov
je
bound
leave
lods
dec
ss
pop
movsl
dec
xchg
std
jge
mov
test
add
xchg
aaa
test
popf
sub
shlb
clc
xchg
std
mov
jge
sbb
inc
mov
cmp
dec
lods
xor
test
sbb
pop
or
in
mov
shl
lods
sub
lods
enter
sub
cmp
out
int
fidivrl
fwait
pop
jp
pop
test
nop
into
jp
outsb
outsb
add
in
les
push
pop
dec
mov
test
orb
inc
sub
sbb
fidivl
lea
mov
jg
add
mov
mov
sbb
xor
jne
leave
adc
call
nop
cmp
stos
repz
std
add
adc
ljmp
mov
cmpsl
and
dec
out
xor
mov
fisttpll
adc
fdivrl
inc
scas
mov
add
mov
mov
jo
sub
stc
push
jecxz
hlt
movsb
mov
xchg
idivl
push
jmp
pop
in
push
cs
pop
addr16
cli
mov
and
mov
mov
mov
sub
fisubrl
sub
andb
lret
test
fmuls
lods
mov
push
sub
scas
xor
mov
popa
xlat
cltd
xor
in
lahf
loopne
fistpl
or
lret
mov
imul
mov
dec
subl
jg
push
mov
lcall
adc
dec
lahf
fldl
or
les
add
jg
out
notb
cmp
sbb
popa
xchg
not
push
sub
mov
aam
mov
cld
stc
mov
cmp
and
add
stos
aas
jne
and
fdivr
lret
sbb
add
xchg
and
mov
fcomps
js
inc
mov
sub
int
insb
mov
fisttpl
xchg
adc
notb
add
mov
or
scas
push
dec
fbld
cs
adc
cmp
mov
fisttpl
cmp
adc
insl
push
mov
jge
dec
jb
icebp
in
xor
jmp
rorl
mov
pushf
dec
mov
scas
clc
cltd
mov
push
lea
dec
cmpsl
out
test
mov
jnp
mov
dec
and
add
popa
xor
fcompl
fcom
and
lcall
popa
test
test
push
or
cmp
nop
testb
pop
lea
pop
xchg
push
frstor
mov
pop
pop
jo
push
push
int3
popf
shrl
add
mov
testb
adc
mov
cmp
arpl
jle
pop
and
cmp
leave
dec
adc
sti
or
sbb
punpcklwd
sbb
in
xchg
xchg
fldcw
sub
add
dec
ret
sarl
or
and
arpl
and
jle
ja
cmp
mov
jno
frstor
lcall
sbb
mov
fstps
mov
loop
inc
mov
sbb
lret
icebp
xor
add
push
adc
xchg
cmpsl
pop
mov
js
incl
test
aas
mov
xor
sbb
roll
sti
pop
dec
and
pusha
stos
xor
mov
mov
mov
xlat
xor
fsubrp
mov
mov
mov
lcall
xchg
fimuls
sbb
shlb
jae
xor
iret
fcoms
clc
adc
addr16
das
jp
adc
mov
arpl
xchg
or
in
cmp
xor
mov
mov
add
sbb
cmp
loope
into
xor
sahf
in
xchg
fldenv
daa
popf
popf
cmpsl
xchg
into
jae
jecxz
adc
repz
enter
int
pop
xchg
pop
adc
inc
psrld
pop
add
std
mov
xor
rcrb
jp
jg
outsb
mov
pop
pop
rolb
ja
or
jo
aaa
mov
fstpl
test
lret
stos
jp
xchg
cmc
mov
dec
jecxz
inc
mov
cmpsb
or
sbb
fadds
rcrl
lahf
cwtl
movsb
cwtl
or
jne
cld
add
xor
mov
imull
repnz
iret
xor
dec
icebp
test
ds
cwtl
rclb
or
sub
mov
fadds
lock
imul
mov
inc
jp
aas
pop
pop
movsl
jno
repnz
or
push
jae
xchg
fistps
fidivl
insl
call
push
xchg
aad
sbb
dec
imul
in
mov
in
pop
inc
out
orl
push
outsl
push
andl
out
lahf
fimull
mov
xor
mov
xor
into
xlat
ljmp
mov
push
mov
cmp
scas
or
push
mov
shl
loop
or
dec
movsb
mov
popf
jo
outsb
repz
scas
addr16
push
lea
push
xchg
pop
int3
das
pop
mov
lock
inc
xchg
cmp
je
daa
aad
popf
dec
lock
mov
add
xchg
mov
movsb
cmp
xor
mov
aam
addl
call
loop
sub
dec
or
dec
sbb
xor
xchg
lds
data16
out
push
test
xor
xor
jo
pop
in
hlt
pop
pop
ds
into
bound
adc
adc
push
bound
inc
cmpsl
adc
sti
shrl
sbb
shlb
jnp
imul
dec
popf
adc
popa
adc
pop
lock
cmp
xchg
pop
mov
dec
repz
push
cmp
fisubl
sub
rcrb
sbb
push
pop
popf
cld
stos
jbe
popf
nop
sbb
mov
insl
adc
fisttpl
ffree
sub
jbe
push
ret
cmc
adc
ret
negb
jl
jb
jb
aaa
iret
lcall
dec
inc
dec
repz
mov
icebp
jb
lcall
shlb
scas
rol
aaa
add
cmpsb
pop
xchg
je
sbbb
xor
je
loope
xchg
inc
and
xchg
mov
inc
pushf
jno
je
xchg
cmpsl
mov
lds
jno
xchg
cmp
in
dec
in
add
cmp
lret
pushf
jne
into
jp
in
and
inc
leave
rclb
shlb
jne
dec
xchg
and
xchg
mov
fdivp
arpl
or
clc
lretw
push
sti
xchg
sbbb
stc
adc
push
push
inc
cmp
add
xor
cs
fcomps
pop
pmaxsw
jno
jnp
ss
test
fistps
cltd
lcall
int
mov
movsl
adc
add
popf
xchg
cmp
pop
test
pop
lds
ljmp
aaa
push
dec
stos
ret
popf
push
push
push
pushf
mov
icebp
outsl
iret
ss
sub
sub
sbb
push
icebp
sbb
cli
jmp
cmp
adc
add
mov
cmc
or
mov
enter
scas
lret
mov
imul
sub
ss
sbb
fldenv
mov
adc
pop
idivl
mov
xor
imul
pusha
fnstenv
in
mov
or
in
push
push
mov
loop
pop
inc
mov
aad
push
movsl
inc
and
loop
mov
ss
inc
clc
jnp
scas
shl
cmpsb
xor
arpl
jae
out
test
addl
sub
out
bound
rclb
push
cmp
adc
add
test
insb
repnz
mov
sbb
push
fbld
or
dec
cmp
and
sti
and
std
cmp
xchg
jae
add
push
loopne
jae
mov
dec
add
jp
std
xor
push
mov
push
dec
sarl
adc
leave
cmpsl
xor
push
add
dec
jp
rcr
popa
mov
lahf
mov
lcall
pop
test
sub
outsb
sbb
xchg
mov
out
or
std
pop
into
leave
fcompl
dec
push
xchg
int
cli
ret
mov
push
shlb
jo
stos
pop
push
lret
sub
cmpsb
inc
adc
mov
movsl
push
cmc
pop
cmp
fnstenv
mov
hlt
repz
repnz
pop
mov
cmc
lds
sbb
xchg
mov
mov
notl
aas
push
das
test
jbe
push
pusha
movsb
xchg
data16
movl
cmp
test
sarl
jb
push
mov
xor
mov
sbb
jns
mov
add
sub
jae
cld
mov
xchg
mov
lds
insl
in
xchg
and
mov
sub
push
or
repz
sub
mov
ficomps
push
je
insl
vmaxpd
dec
icebp
push
shrl
bound
mov
es
fs
std
lock
mov
add
es
ds
out
adc
aam
mov
in
fwait
rorb
mov
loopne
repnz
pop
add
cmp
in
push
mov
mov
push
or
xchg
sahf
add
push
xchg
das
lret
movsb
mov
enter
loope
lahf
adc
push
je
inc
adc
leave
add
scas
mov
or
lret
je
repz
insl
xchg
lods
cld
xchg
sti
int3
insl
ss
push
and
jne
jno
mov
pop
cmp
das
fldcw
loope
dec
pop
cmp
xchg
dec
mov
jecxz
mov
lea
dec
iret
jno
std
push
mov
push
pop
jge
adc
cmp
ja
mov
mov
sub
sub
fsubl
faddl
mov
push
or
push
jnp
mov
faddl
cwtl
mov
mov
sub
pop
nop
mov
cld
mov
insl
mov
xor
mov
std
or
pop
imul
mov
push
fsubrl
inc
xor
push
sub
push
sub
stc
sbb
stos
fwait
subb
mov
mov
cmp
ds
and
fists
mov
cs
pop
arpl
icebp
shr
sbb
sti
int
push
rcrb
es
imul
fldcw
dec
enter
add
in
in
inc
mov
mov
ds
xor
out
clc
xchg
lock
imul
ja
sbb
gs
xor
and
xchg
sub
mov
mov
cmpsl
lea
clc
add
into
mov
test
mov
mov
loopne
pop
push
xchg
stos
popf
lahf
cmpsl
jge
fldt
inc
ja
fldl
push
inc
data16
ret
imul
lret
das
mov
lea
pop
mov
mov
cli
in
mov
andl
xchg
and
mov
mov
lods
stc
or
repz
pop
sub
xor
lret
in
cld
das
adc
xchg
and
int3
lods
cmp
sti
in
cmp
stos
jecxz
decb
add
cmp
push
push
xchg
imul
jmp
adc
xorl
xchg
mov
es
dec
pop
aaa
jecxz
leave
or
pop
test
add
data16
sbbb
out
mov
enter
lods
jb
shlb
outsl
mov
nop
loope
xchg
in
mov
std
dec
ljmp
sahf
dec
loopne
shll
pop
lahf
dec
hlt
push
xor
popa
fwait
sbbb
pop
fidivrl
scas
dec
icebp
jmp
add
in
push
lock
lcall
out
es
mov
sub
daa
mov
inc
or
in
in
rclb
insb
push
mov
in
dec
jp
and
xlat
mov
insb
rorb
pop
xor
pop
imul
mov
inc
cltd
push
imul
pop
or
aam
xchg
incl
push
fs
jne
sub
loopne
push
lods
test
loop
lods
push
icebp
mov
add
and
inc
dec
ljmp
das
xchg
mov
xchg
arpl
rclb
enter
push
cmpsl
mov
orl
pop
push
and
ret
out
mov
shl
and
lds
dec
cwtl
xchg
repz
dec
push
stos
sub
inc
sbb
sbb
push
lcall
int
loopne
lahf
fs
mov
icebp
push
xor
push
push
out
jo
pop
popa
xchg
adc
data16
fimuls
sbb
adc
dec
inc
out
mov
mov
cmpsb
jbe
mov
adc
in
cltd
xchg
cs
add
mov
test
mov
jo
mov
cli
pop
inc
in
mov
mov
add
fsub
push
test
fisubrl
pop
sbb
int
iret
push
shr
mov
in
push
das
xor
push
enter
lock
pop
jbe
push
insb
movsb
ljmp
shlb
roll
or
in
sti
mov
lea
out
mov
ja
cld
notl
je
cmp
lea
repnz
mov
pop
in
pop
jno
adc
xchg
nop
mov
mov
in
jae
push
and
mov
mov
scas
addr16
pop
add
js
pop
push
and
test
loop
fildll
xor
fmuls
repz
insb
fs
das
shlb
xchg
inc
and
xchg
inc
dec
mov
testb
xor
cmp
sbb
je
fcmovne
xor
outsl
lds
aad
mov
push
stc
rcl
cvtdq2ps
bound
arpl
stc
push
push
add
mov
push
xor
dec
mov
in
daa
mov
cmp
fisttps
insb
adc
je
into
add
mov
neg
lds
xor
mov
add
fs
ss
push
xor
mov
xchg
jmp
lahf
xor
ret
pop
rcl
repz
outsl
cwtl
loop
lock
add
mov
das
xor
enter
std
mov
test
fwait
dec
xlat
xchg
imul
xchg
push
mov
lods
adcb
pusha
test
fs
xchg
jae
and
pop
loopne
or
dec
push
jg
xor
mov
pop
scas
jle
dec
sbb
xchg
and
and
int3
in
lret
add
mov
sbbb
and
push
xchg
repz
lret
cmp
mov
add
scas
sub
jp
xor
inc
je
dec
jp
aam
xchg
sub
lret
movd
loop
jmp
mov
jecxz
cmp
fstl
dec
ja
fsubr
mov
jl
pushf
xchg
lret
push
and
xchg
cld
cli
xor
dec
adc
cli
incb
cmpsb
loopne
and
icebp
cmp
push
loope
out
and
mov
dec
pop
stos
movsb
out
jecxz
mov
shl
out
xor
push
in
push
push
xchg
fstl
jnp
test
sub
mov
xor
or
call
pop
aam
pushf
jp
js
mov
mov
cmpsb
sbb
mov
push
xor
into
mov
sbb
andb
cmp
push
xor
stc
js
sbb
mov
int3
ficoms
adc
pop
rcll
jecxz
cmpsl
cmp
adc
sub
js
dec
add
cs
lea
pop
sbb
add
and
iret
and
push
popa
stos
ret
pop
out
call
fisttpll
push
pop
mov
push
jnp
xchg
std
hlt
bound
add
fsubl
ret
jmp
add
mov
mov
adc
pop
pop
dec
dec
fcomip
js
imul
and
rol
adc
int
aas
inc
outsl
lds
adc
ljmp
in
lcall
dec
flds
sub
psubw
movsb
xchg
dec
mov
mov
push
sub
dec
sub
rolb
push
lret
divl
stc
addr16
mov
dec
xor
jmp
loopne
mov
jmp
mov
adc
lea
push
fbstp
jmp
sbb
push
int
repz
lods
xchg
imul
xor
ljmp
lcall
jnp
addr16
mov
hlt
cwtl
daa
loope
scas
shlb
cwtl
xchg
cmp
repz
dec
data16
hlt
mov
notb
in
test
cmp
pop
xchg
fnstcw
int3
dec
inc
das
xchg
or
jge
outsb
movl
sbb
scas
pushf
mov
ss
sub
jmp
mov
movsl
je
mov
fbld
xchg
fcmovb
and
sub
rol
xor
fcmovb
pop
mov
xlat
mov
xor
cmp
xlat
push
pop
in
out
stc
sbb
jae
in
sub
stc
adc
inc
test
shr
jmp
rcrl
mov
sbb
sbb
outsb
popf
in
adcl
out
jmp
or
inc
dec
push
adc
out
lds
jg
or
sbbb
rcrl
mov
or
lds
mov
cltd
or
imull
push
das
sbb
push
mov
jge
adc
and
ss
adc
xor
inc
and
sub
jge
pop
adc
std
xchg
clc
cwtl
jecxz
lret
xchg
cmp
out
push
sar
shlb
cmp
loope
int3
sub
sahf
xor
arpl
sbb
test
fimuls
jecxz
call
mov
js
pop
div
pop
outsb
or
xchg
stos
out
xchg
xchg
jne
jecxz
inc
ret
repz
add
jno
mov
or
adc
out
shlb
mov
cmpb
andb
sti
aas
ljmp
mov
push
inc
pop
xor
loopne
das
mov
adc
std
movsb
pop
lret
es
sub
stos
pop
xor
cmc
xchg
push
ret
leave
repz
adc
cmp
arpl
mov
inc
enter
dec
jle
pushf
rolb
or
jne
sub
negb
jl
test
imul
lahf
dec
pop
dec
cmpsl
loop
int
mov
push
xchg
sub
dec
mov
jno
stos
stos
sub
jno,pt
insl
jge
rcrb
jae
cwtl
inc
bswap
mov
imul
xchg
call
fldl
cmpsl
test
imul
fnstenv
test
fld
scas
clc
push
dec
outsl
adc
aam
pop
mov
rcr
les
adc
push
inc
mov
rclb
cltd
mov
and
push
add
push
dec
inc
push
pushf
jnp
fwait
pushf
inc
test
adc
fisubl
cmp
xchg
inc
mov
xchg
rorl
mov
loope
or
gs
sbb
jns
mulb
orl
mov
adc
int
mov
push
leave
mov
movsl
push
lea
dec
and
aas
ja
cltd
leave
loopne
sub
ret
pop
and
mov
imul
cltd
add
lret
std
fidivrs
and
or
int3
jae
arpl
cmp
mov
jnp
aad
repnz
leave
nop
popa
xchg
push
or
inc
sub
lods
cmpsb
add
pushf
mov
and
jbe
mov
stos
pop
xor
lods
and
js
aaa
cli
fistpl
mov
shrl
xlat
loope
mov
push
subb
stos
and
mov
rcl
push
adc
or
adc
mov
stos
fcmovne
jne
dec
jmp
scas
mov
jmp
into
data16
es
sbb
dec
sbb
arpl
add
mov
pop
lahf
jae
out
mov
jmp
xor
dec
in
int
test
fcoms
fisttps
xor
mov
add
iret
mov
fdivs
negb
push
leave
pop
lds
inc
cli
mulb
fnstenv
push
hlt
sub
inc
lret
aas
das
aas
mov
cmpsb
ss
adc
sbb
sahf
into
push
or
mov
cmpsl
pop
push
or
ror
or
cmpb
xchg
jmp
push
fisubrs
fidivl
mov
inc
lcall
loop
xchg
jg
mov
out
out
pop
sub
jmp
std
out
push
jbe
pop
mov
not
mov
daa
outsl
cld
xor
fmul
rorb
push
lcall
mov
pop
mov
xor
ret
lret
sub
mov
sbb
sub
adc
xor
jne
es
clc
sbb
or
std
mov
cmc
iret
fidivl
push
fidivrl
je
mov
cmpsl
push
enter
mov
dec
sbb
dec
xchg
test
dec
xchg
out
in
popf
daa
divb
mov
xor
inc
fdivrp
mov
cmpsl
repz
ja
sti
mov
mov
add
xchg
xchg
jnp
push
xchg
arpl
mov
push
mov
stos
es
stc
nop
push
bound
mov
je
adc
out
mov
mov
arpl
sub
or
stos
lret
jno
push
out
hlt
popf
cmp
hlt
mov
sub
xchg
mov
lods
add
jecxz
rcrb
ja
loop
mov
mov
xchg
aad
xor
cli
sub
push
repnz
cmc
popf
je
jno
pusha
adc
sub
pusha
jbe
mov
mov
xchg
je
or
and
xchg
sub
shll
push
xor
push
xorps
sbb
popf
scas
insb
cmpsb
jg
sar
add
jp
subl
jge
inc
sub
add
jnp
xchg
ss
adc
dec
scas
inc
test
lock
lods
mov
nop
inc
push
cs
pusha
vmwrite
push
push
gs
push
stos
iret
mov
ss
jae
sbb
pop
mov
sbb
and
push
xorl
add
sbb
xchg
sub
push
xor
rcr
add
aad
xor
out
iret
in
mov
push
iret
mov
test
sub
push
push
mov
stos
test
pop
in
inc
cmc
pusha
fstl
mov
les
pop
pop
sbb
fwait
dec
push
mov
shll
fmull
fninit
int3
out
bound
cmp
inc
sub
cs
and
push
mov
icebp
pop
ja
sub
xor
out
rcll
cmpb
xor
aaa
xor
lods
jno
cs
xchg
gs
cmpsb
fldl2e
stc
cmp
sub
jbe
int3
mull
push
mov
pop
and
loope
pop
sbb
cmp
sbb
adc
mov
ds
add
and
dec
in
pop
xchg
repz
ss
aaa
enter
in
jo
insl
int
fcoml
dec
repz
stos
add
sbb
xor
push
les
add
imul
xor
pop
inc
add
jmp
sub
add
jg
jge
js
inc
daa
mov
es
aad
xchg
popf
dec
dec
and
push
into
add
nop
inc
xor
adc
inc
rorb
gs
inc
cwtl
es
into
loopne
xor
mov
cmp
xchg
rorb
fisttps
clc
fisubrs
out
or
in
fcomps
mov
inc
sub
sbb
or
mov
mov
enter
jbe
dec
or
cmp
and
xor
jmp
es
inc
gs
pop
movsb
lods
xor
lds
shll
insl
ljmp
cmc
out
push
sbb
imul
jae
adc
les
cld
jmp
std
call
sub
popf
inc
mov
dec
dec
push
xor
sub
adc
lret
push
xchg
pop
insb
insl
je
fcompl
xlat
xchg
or
xchg
daa
cmp
and
add
dec
mov
ret
push
ret
adc
cld
in
pop
gs
cld
popf
loopne
add
pop
dec
data16
gs
aam
mov
jnp
negl
call
sbb
in
add
mov
push
sbb
aam
mov
pop
in
aam
loopne
add
xchg
cld
xor
ror
testb
sahf
jle
jae
sbb
aas
push
and
xchg
mov
repnz
xor
lds
ljmp
sbb
out
push
mov
pop
inc
sub
int3
dec
sbb
mov
repnz
pop
xchg
lods
xchg
ficompl
gs
ja
mov
lcall
out
xor
sbb
fucomip
or
jae
jecxz
add
fcom
and
ja
inc
aaa
int
daa
ss
push
mov
movsl
mov
rcl
and
dec
in
aaa
dec
arpl
fcoms
ret
pop
xor
cli
sti
shr
pusha
xchg
and
cmp
mov
mov
fs
cs
sbb
ja
or
xor
dec
inc
xchg
fs
xor
aad
jge
jecxz
inc
push
in
aad
fwait
out
xchg
cwtl
les
sbb
fstpt
xchg
scas
pushf
sub
xor
out
stos
rolb
test
inc
test
xchg
test
or
test
xlat
sahf
fisttpl
sub
test
call
insb
popf
adc
fisttpl
jle
push
cmp
jne
jo
push
jnp
push
jbe
pusha
js
outsl
movsl
mov
out
mov
mov
fiaddl
fidivrl
lea
push
or
mov
outsb
dec
cmp
adc
jns
scas
lahf
fistps
outsl
pop
out
mov
repz
push
inc
lods
sahf
icebp
adc
dec
fistpl
ffree
cmp
pop
dec
xor
adcb
in
repz
outsl
lret
cld
sbb
cmp
ret
imul
add
dec
or
iret
push
xchg
dec
ja
mov
lock
pop
pop
out
ret
stos
fnstcw
in
ret
jae
leave
test
or
fistpl
jno
add
mov
jae
xorb
fwait
sbb
ja
sub
mov
int3
fstl
mov
or
int
adc
sub
push
mov
sbb
dec
add
lcall
xchg
xor
mov
pusha
test
inc
rcrl
stc
or
or
and
cld
sbbl
repnz
ret
push
fldl
jae
cmp
movsl
mov
rcrb
xchg
xchg
loopne
cmp
out
dec
testl
daa
in
or
imulb
orb
inc
lods
popf
ret
lret
out
scas
sbb
add
enter
ljmp
ficoml
ja
push
add
sbb
mov
pop
sbb
inc
addr16
dec
shr
out
movsb
dec
jge
cmp
loop
jp
cmp
std
pop
pop
bound
pop
add
popf
xor
xchg
jne
cwtl
cmpsb
or
test
or
pop
fadd
add
add
fwait
bound
repz
lahf
sbb
test
lds
or
test
lahf
test
jp
xchg
insl
adc
ljmp
sbb
mov
push
adc
pop
xchg
sub
andb
and
into
pop
dec
and
mov
or
mov
sahf
xor
xchg
sub
cld
das
out
inc
aad
lret
dec
push
orb
sub
cmc
push
mov
mov
out
lcall
xor
stos
xor
in
mov
mov
out
adc
inc
push
fdivrl
loop
ds
push
push
rorb
lds
inc
dec
jae
adc
xor
mov
lods
enter
add
cmp
pop
push
pop
cmp
imul
es
xor
mov
int3
ljmp
cltd
jb
arpl
sti
mov
xchg
and
dec
adc
nop
pop
push
pop
inc
jmp
push
out
cmp
subl
mov
cmp
insl
inc
fldenv
pop
xor
push
mov
jbe
cmp
push
incb
hlt
sbb
dec
adc
pushf
fstpt
fs
mov
daa
lea
jl
mulb
push
or
movsl
gs
xor
sarl
mov
mov
jne
jge
popf
lods
rcrb
or
jmp
sbb
pop
fwait
cmp
scas
aad
xchg
les
and
xor
push
lret
push
and
xor
and
pop
imul
push
filds
sub
or
loope
add
out
nop
movsb
adc
and
in
inc
jno
mov
test
imul
fwait
sbb
clc
js
out
cwtl
mov
and
rcrl
xchg
xchg
mov
cmp
push
shlb
lods
or
enter
scas
es
movsl
aam
pop
negb
push
ret
xlat
jb
add
test
lcall
add
mov
dec
dec
jge
jne
jnp
mov
fistpll
mov
movsl
inc
pusha
sub
jp
bound
jno
into
in
cmp
enter
movsl
lcall
jg
cli
fwait
test
out
pop
jge
jecxz
int3
xor
push
addr16
scas
movsb
adc
insb
mov
sub
push
xchg
sub
aaa
push
lret
xchg
push
adcb
pop
add
cltd
gs
xlat
or
fs
mov
adc
and
dec
dec
test
or
pusha
out
ret
mov
mull
lock
mov
not
pop
fiaddl
mov
pop
xchg
in
adc
sahf
mov
repnz
fisubrs
pop
das
in
push
lret
mov
or
ficoms
rcrl
mov
adc
jge
mov
rcrb
jmp
mov
add
sbb
mov
pop
jecxz
int3
aaa
out
int3
lahf
pop
sti
lret
das
cmp
lods
mov
std
push
adc
js
sbb
xor
fsubrs
dec
inc
cltd
jb
inc
js
xchg
jns
pop
mov
loopne
add
push
cmp
and
xchg
mov
pop
or
cmpsb
test
mov
jl
popf
fistpl
sti
or
pusha
cmc
iret
sbb
sub
scas
or
inc
sbb
pop
mov
add
xor
in
lcall
cmp
aad
dec
dec
out
mov
or
pop
pop
dec
pop
and
in
jno
jecxz
out
mov
pushf
lret
adc
jl
das
sbb
cmpsl
jbe
jg
sti
aad
or
test
dec
in
sbb
inc
inc
mov
negl
arpl
loopne
push
mov
cmp
adc
xchg
jecxz
sub
and
xchg
jbe
inc
sarl
leave
mov
ds
cli
aam
repz
loop
dec
mov
mov
out
and
pop
push
mov
push
iret
push
push
push
repnz
adc
subb
inc
inc
cltd
adc
push
xchg
and
inc
out
aaa
cmpsb
cmpsl
push
out
insl
or
pop
mov
sub
out
outsl
outsl
jmp
inc
jns
pop
xor
or
mov
clc
hlt
add
pop
scas
arpl
xorb
dec
loopne
stos
fbld
dec
movsl
loop
jns
pushf
aaa
dec
or
push
loope
mov
push
jecxz
mov
xchg
out
cmp
mov
aad
mov
dec
mov
cmpsl
cltd
ljmp
inc
push
insl
xor
cmpsb
add
mov
pop
mov
aam
cld
sub
mov
enter
loopne
inc
jle
repnz
dec
push
fadd
out
mov
or
push
cs
push
gs
jae
xchg
test
stos
rcrb
imul
dec
dec
into
ficomps
pcmpeqb
fstpl
addl
add
pop
xor
cmpsl
inc
std
jbe
jl
push
jge
push
testb
dec
lds
push
mov
jle
out
mov
inc
sbb
adc
fmull
mov
push
sbb
data16
push
adc
mov
xor
scas
hlt
js
aaa
pusha
imul
mov
xor
push
incl
add
mov
popa
jno
incl
pusha
mov
fldcw
mov
ret
pop
lods
pop
shrb
stc
fistpl
mov
mov
pop
mov
jge
lods
push
jb
outsb
mov
stc
pop
cmpb
jb
ja
push
fsubl
sbb
fwait
mov
jae
jg
adc
inc
nop
pop
and
into
inc
sub
mov
fcomp
jecxz
aaa
cs
pop
and
mov
aam
push
sti
in
aaa
xchg
cmp
rorb
divl
pusha
ret
sahf
pop
imul
and
cltd
aad
jle
pushf
out
pop
mov
test
sbb
lret
outsl
xor
mov
rorl
pop
sar
fsubr
loope
ljmp
imul
arpl
dec
shlb
cmpw
lds
test
pop
sub
int
daa
xor
cltd
loop
push
inc
shrl
xor
xchg
push
pop
ja
cmp
out
jmp
sub
ja
push
popa
dec
lret
leave
in
iret
aad
and
fs
adc
rcrl
dec
insb
mov
xchg
popf
mov
xor
mov
xor
rcl
dec
adc
daa
mov
cmp
cmp
int3
inc
stos
adc
mov
mov
jno
mov
fs
cwtl
sub
jle
push
data16
xchg
jns
cmp
inc
pop
pop
cmp
xor
add
push
jg
jp
dec
dec
sbb
and
outsl
enter
inc
pop
out
jg
fidivl
mov
and
imulb
fdivr
lret
and
xlat
add
enter
rorb
and
sub
and
sbb
or
out
sbb
sbb
pop
push
pop
pop
cmpsb
or
add
cmp
xchg
test
xor
adcb
stos
out
lods
and
fadds
inc
xchg
cmp
dec
jb
or
mov
popf
lcall
pop
test
lds
nop
dec
xchg
repnz
sub
aas
or
mov
jno
push
std
sahf
daa
popa
stos
fwait
sbb
pushf
mov
nop
cmp
cltd
push
jge
push
sub
mov
mov
mov
movsl
mov
jg
in
cld
cmp
ljmp
in
rcl
movsl
jno
std
loope
xchg
shlb
fs
mov
rorl
pop
jno
and
enter
es
hlt
mov
repz
sub
stos
inc
mov
sbb
lcall
push
add
enter
movsb
mov
and
xor
sub
es
loopne
sbb
jg
ficoml
pop
xchg
je
inc
fbstp
mov
jge
mov
rorb
mov
mov
sbb
cmp
stos
sub
out
loop
jnp
pop
cltd
imul
vhaddps
mov
frstor
sub
dec
cmpsl
cli
or
dec
lret
jecxz
int3
dec
or
sbb
pop
ljmp
loop
popf
lock
out
loopne
pop
scas
adc
addl
scas
cmp
ret
shll
adc
add
les
insl
xor
add
aad
int3
pop
fists
jno
nop
ficoml
cmp
js
xor
out
ds
dec
sbb
push
xchg
xor
mov
inc
dec
jno
push
pusha
jmp
mov
jb
adc
mov
test
outsb
shll
in
mov
iret
and
int3
cmpsb
aad
sbb
lcall
lods
ja
mov
mov
out
mov
sub
ljmp
xchg
mov
xor
cmp
xchg
out
mov
or
pop
and
hlt
repz
mov
inc
out
sub
sbb
shl
jp
inc
loop
push
push
out
movsb
push
cmp
xor
sbb
in
gs
pop
in
mov
or
pop
xchg
outsl
ljmp
movaps
ja
out
xchg
rolb
rorl
dec
fdivrl
inc
push
lods
cmp
mov
shlb
push
inc
lret
push
cmp
pop
jae
out
cmc
scas
mov
in
test
cmp
xchg
addb
xchg
fildll
dec
sbb
mov
iret
fwait
xlat
and
pushf
xchg
dec
inc
sbb
or
fisttpll
out
es
mov
loope
jl
popf
stos
lcall
ret
xchg
hlt
dec
pop
dec
push
sbb
cmc
cmpsb
ss
push
aaa
aam
sbb
pop
imul
stc
and
jg
jmp
subl
aad
xor
call
push
pop
adc
and
pop
xorl
jle
dec
inc
mov
push
pop
dec
jge
mov
aas
mov
mov
les
push
and
jno
push
mov
out
xchg
push
lahf
shl
dec
fwait
cwtl
test
dec
stos
not
and
sbb
and
ss
mov
or
lret
pushf
cmpsl
jg
cmc
sub
sahf
shlb
sahf
mov
adc
mov
mov
cmp
test
sti
mov
xor
xor
push
xchg
xchg
push
mov
fstl
and
inc
mov
pop
cmp
in
adcl
cmp
clc
adc
arpl
mov
mov
int
fldt
enter
push
push
sahf
es
xor
or
push
jmp
and
mov
jne
in
add
jbe
aam
cs
iretw
xor
ss
ja
add
jmp
push
mov
test
lock
mov
mov
fadds
addr16
stc
nop
repnz
xor
call
dec
pop
xchg
push
stos
cmc
inc
idiv
add
mov
cmpsl
jp
es
mov
out
add
outsb
lret
sub
xchg
cmpl
mov
xchg
push
adc
push
add
jge
dec
test
test
mov
adc
stc
adcl
loopne
idivb
and
pop
dec
and
jne
mov
sbb
ja
xchg
bound
push
pop
rcl
pop
fildl
mov
xchg
data16
cmp
sub
mov
pop
mov
in
xchg
clc
xchg
pushf
dec
mov
aas
test
inc
gs
and
jbe
je
sti
gs
cmpsb
cmpsb
pop
xor
ja
mov
icebp
push
add
loop
jo
inc
xlat
push
in
push
xor
mov
in
mov
cmpsl
mov
mov
ds
push
call
pop
xchg
fwait
mov
and
and
dec
stos
mov
inc
aad
jecxz
cmp
sub
cli
mov
inc
mov
cmpsl
mov
cmp
xorb
ret
push
mov
xchg
pop
imul
inc
and
push
inc
ret
push
stc
jle
rol
xor
xchg
movsl
cmc
iret
jb
add
push
test
sbb
repnz
jle
das
jle
mov
push
push
xor
add
call
loope
adc
dec
andl
emms
push
and
xchg
xchg
loope
pop
pop
pop
inc
adc
and
lret
mov
jno
push
lds
int3
cmp
jae
into
sbb
lcall
cmp
in
rcrb
mulb
jno
pop
pushf
lds
and
daa
into
and
and
pop
incb
pop
mov
imul
xchg
enter
fwait
pop
stc
hlt
cli
xor
in
incl
mov
jecxz
pop
jae
pop
scas
aam
and
mov
lods
cmp
inc
mov
xchg
cwtl
sub
in
mov
repz
lahf
jns
stos
sub
xor
int
pcmpeqd
sbb
sub
cmp
rcrl
adc
xor
test
jg
sbbl
sbb
pop
mov
inc
mov
pop
sub
pminub
loopne
dec
add
jnp
push
es
xchg
loopne
aam
inc
push
xor
fdivs
jo
pop
and
fwait
inc
adc
adc
inc
push
add
sbb
mov
lds
pop
push
jb
dec
inc
cmc
jno
mov
test
pop
xor
pop
out
les
adc
mov
gs
loope
adc
fildl
ja
push
lahf
or
ljmp
jbe
cmpsl
subl
arpl
pusha
movsl
cmp
add
and
mov
out
mov
fidivl
mov
roll
add
loopne
ja
sahf
xor
aam
push
sar
pop
loope
mov
popa
sub
loopne
push
push
jo,pt
sti
push
cld
jmp
pusha
popa
stos
add
mov
rcr
shr
push
mov
jp
xchg
xchg
inc
or
sbb
shr
in
sbb
mov
jecxz
roll
sbb
mov
xchg
xor
dec
inc
test
or
jnp
push
inc
mov
int3
mov
pushf
inc
sbb
pushf
cmp
push
or
jg
jns
std
xlat
popf
shll
xor
subl
jge
mov
popa
sbb
pop
jg
ds
scas
sub
sbb
out
or
push
and
push
cmpsb
fsubrl
dec
int
jp
enter
test
std
add
lods
jne
jae
lcall
lea
movsb
rcrb
mov
lods
push
push
addl
sub
add
pop
push
lods
fistl
mov
xchg
xchg
sub
mov
mov
fs
cltd
or
ljmp
inc
inc
je
mov
mov
out
xor
xor
mov
dec
pop
fcmove
repz
in
and
jmp
aas
enter
out
into
jae
mov
test
mov
bound
and
loopne
push
mov
cmp
cmp
scas
stos
push
ljmp
add
cmpsl
mov
out
push
fidivl
sub
loopne
mov
ret
mov
jg
scas
mov
das
add
pop
mov
in
les
and
inc
xchg
sysexit
inc
jp
lahf
inc
in
jb
push
xchg
or
and
movsb
push
dec
mov
ss
cli
call
out
mov
push
test
push
mov
lret
and
cmp
in
fs
xchg
aam
popf
addr16
bound
cmc
or
pop
adc
negl
rcll
adc
ss
imul
xchg
add
fs
pop
sub
xorl
ficompl
inc
add
notb
test
or
sbb
bound
popa
mov
push
daa
or
jg
push
pop
push
push
and
jg
dec
cmp
jge
push
divl
fwait
xchg
mov
mov
mov
loop
out
pop
pop
or
addl
lods
out
imul
xchg
loopne
push
ljmp
repnz
cmp
push
mov
outsl
dec
adc
sahf
loopne
mov
incl
sub
push
push
jb
aad
mov
mov
add
dec
jp
adc
std
mov
nop
jno
xor
je
xor
js
dec
dec
inc
xchg
inc
or
inc
cmpsb
inc
mov
lcall
imul
cmpb
add
mov
sub
cmp
xor
and
daa
push
rorb
inc
out
cmpsb
lods
ds
rcrl
or
aas
sbb
jmp
int
jg
jecxz
aad
pop
or
mov
repnz
mov
xchg
or
push
mov
fisubl
lret
fcompl
inc
js
xchg
xor
mov
push
dec
mov
xchg
ss
test
in
int3
int
xchg
inc
dec
pop
out
xchg
js
pop
jbe
push
cmp
imull
iret
daa
fs
inc
cmp
loope
sahf
shl
sbb
push
add
lock
and
xor
fstpt
adc
stc
jle
xlat
cmpsb
pusha
cmp
sbbb
loopne
mov
out
leave
je
loopne
adc
enter
lss
aam
gs
or
mov
pop
jnp
pop
popf
cmp
int
xchg
lods
dec
inc
dec
fimuls
xchg
jg
jnp
mov
rcrb
gs
fists
cmp
xor
out
ret
adc
ficompl
sub
mov
cmpb
jmp
fisubrs
xor
test
jge
mov
cli
subl
movq
push
mov
push
xchg
call
push
xchg
rorl
cld
scas
imul
movsb
in
and
mov
and
js
fldl
mov
and
movsb
and
fwait
pop
xchg
add
dec
daa
shlb
adc
cmp
xchg
inc
movsl
into
mov
xchg
lock
or
and
xor
nop
ss
lods
jle
pop
xchg
sbb
mov
inc
xor
xor
push
xor
es
jo
pop
stos
mov
jns
jle
sti
in
jae
xchg
dec
outsl
dec
insb
je
popa
inc
mov
or
push
pushf
add
push
aas
push
push
icebp
aad
sbb
addr16
push
fimull
mov
push
dec
pop
into
loopne
pop
dec
decl
das
xor
imull
fmulp
jge
push
das
add
neg
mov
adc
daa
roll
scas
fcompl
cld
push
insb
pop
test
ds
mov
and
pushf
jbe
pop
cmc
pop
push
sbb
mov
or
fstpt
inc
ds
dec
sahf
push
test
lods
lods
lret
pop
pop
pop
shl
lret
pop
mov
stos
mov
ljmp
les
pop
push
fsubrs
popa
inc
movsl
and
aad
ret
inc
movsb
shll
add
mov
or
xchg
pop
into
xor
and
fists
out
cltd
mov
aas
sub
call
sbb
adc
mov
int
fadd
mov
cltd
jmp
andb
jbe
add
stos
out
clc
lcall
cmpsl
jle
dec
inc
mov
dec
fstl
sbb
or
rolb
mov
mov
adc
mov
or
pop
mov
popl
out
hlt
cwtl
ds
rorl
dec
push
xchg
cmpsb
out
cmp
mov
and
int
cltd
jle
mov
cmp
jnp
aam
andl
lds
mov
inc
mov
in
jno,pt
lret
sti
add
outsl
add
mov
stos
push
adc
enter
cli
stos
push
lock
add
movsb
inc
mov
mov
sti
dec
adc
fldt
ret
sbb
xchg
pop
xchg
rorl
pop
xchg
sahf
fabs
sub
and
adc
and
cmp
mov
adc
fisubs
movsb
mov
sbb
mov
pop
fdivr
into
sub
or
cli
pop
push
pusha
in
sbb
mov
sub
cs
dec
add
aad
and
xchg
xchg
mov
jae
sbb
aam
pop
ja
out
movb
jmp
push
das
xchg
pop
pop
jb
iret
fwait
imul
push
cmpsl
das
mov
push
arpl
jmp
mov
lods
sbb
fisttps
test
movsl
ss
jo
loope
jbe
mov
or
push
and
cltd
mov
xchg
popf
and
scas
dec
push
pusha
in
jmp
xchg
add
shrb
ret
mov
mov
or
movsl
mov
lods
addl
imul
loopne
adc
adc
into
adc
sub
mov
fcompl
out
inc
and
ljmp
loope
jl
rorb
pop
pop
cmc
jg
jmp
imul
lods
cli
push
push
add
or
pop
stc
or
adc
cmc
movzwl
push
dec
cmpsb
xor
aaa
xor
adc
mov
pusha
adc
pop
xchg
popa
adc
in
cmpsl
push
jo
push
sub
cmp
stc
rclb
outsl
dec
dec
pusha
pop
mov
jg
aad
lahf
test
inc
scas
ds
clc
pop
call
pushf
mov
stc
or
sub
pop
sbb
in
hlt
arpl
mov
div
cmp
adc
int3
mov
ret
out
jns
mov
add
mov
dec
or
les
mov
fimull
cmp
mov
imul
cli
add
sbb
jbe
push
jmp
jecxz
pop
cld
cld
or
cmp
jmp
into
mov
jmp
cmp
xchg
inc
and
add
cmp
scas
pushf
test
loope
push
sbb
call
fwait
bound
xor
out
call
gs
es
sahf
mov
sub
add
push
or
insl
adc
mov
cmp
inc
lock
jg
repnz
inc
outsb
aaa
sbb
shlb
dec
fisubl
push
push
push
rorl
jge
sbb
or
pop
popf
xor
add
sbb
fcompl
in
pop
mov
xchg
fs
ret
dec
inc
stos
cmp
outsb
pop
and
mov
jl
dec
loopne
push
adc
push
ja
sub
add
mov
pop
jmp
xor
sub
dec
adc
sbb
inc
shll
out
push
loope
popa
add
insb
sbb
adc
and
lret
jle
inc
int
inc
in
jo
ret
int3
jl
push
sbb
xor
xor
leave
push
pop
mov
ljmp
xlat
pop
or
das
or
out
or
dec
lret
pop
add
adc
pop
cmp
jl
pop
hlt
into
cmpsb
aaa
xor
jo
rcrl
xchg
in
jnp
mov
es
out
pop
xchg
and
lock
bound
int
cltd
inc
addb
icebp
cli
adc
cmp
and
push
inc
push
lods
jns
add
xorb
dec
mov
fwait
shrl
and
popa
dec
clc
jecxz
or
ret
mov
or
sub
iret
cmp
jb
sub
pop
jp
mov
and
lock
sub
ficomps
mov
mov
repz
or
xchg
mov
inc
clc
addr16
adc
xor
inc
xor
ret
inc
pop
pop
add
mov
scas
int3
and
lcall
scas
ja
pop
repz
outsb
aam
gs
xor
inc
push
and
std
lds
mov
sub
jmp
rcll
sub
jg
pop
es
leave
test
imulb
sbb
loope
nop
fidivrs
roll
and
xchg
shlb
sbb
cmp
or
inc
xchg
ss
xor
mov
mov
add
jp
push
inc
loopne
add
ret
pop
xchg
ds
outsb
iret
or
adc
and
xchg
mov
adc
xchg
push
add
adc
sbb
gs
add
xlat
xchg
or
cmpsb
xor
push
insb
popa
add
mov
iret
pop
jne
xchg
jecxz
icebp
or
stos
mov
dec
ds
lods
pop
push
loop
ret
xchg
lahf
sub
in
mov
and
xchg
mov
js
adc
bound
xor
dec
sbb
ret
jg
mov
push
cmc
push
movntq
ss
out
andb
negb
jmp
das
loope
or
jmp
mov
sub
sub
jp
clc
push
mov
test
mov
stos
add
dec
inc
inc
jp
lret
popf
push
mov
inc
jle
ja
ss
adc
dec
gs
lcall
icebp
out
je
adc
subl
stc
loop
popa
mov
cmp
pop
icebp
insl
jl
add
das
pop
test
pop
dec
aam
mov
ja
in
jne
scas
jle
lds
push
add
xor
pop
mov
mov
mov
adc
aas
cmp
mov
lret
pop
out
fisubl
fnstsw
adc
call
movsb
push
mov
stc
mov
xchg
push
fcompl
outsl
pop
rcrb
repz
cmc
out
pusha
pop
xchg
lock
cmp
xchg
dec
insl
and
popa
jecxz
rolb
inc
sub
push
aas
jnp
rcrl
fwait
lds
pop
stc
into
mov
sub
mov
xchg
stc
adc
mov
or
and
push
xor
shl
cmp
movsb
and
sbb
inc
and
nop
fdivr
or
outsb
inc
out
insb
popa
inc
scas
xor
mov
push
sub
mov
xchg
cs
incb
lods
add
xlat
cmp
xchg
mov
dec
jecxz
cli
pop
mov
cwtl
and
xchg
pop
lret
push
insb
outsb
inc
adc
inc
push
ret
or
ds
add
jno,pn
imul
dec
lcall
out
adc
jno
lds
sbb
push
and
lret
loop
cmp
cld
out
xor
xlat
out
or
ljmp
jnp
aaa
inc
dec
test
ror
aam
arpl
push
rclb
lea
add
mov
add
mov
popa
sbb
lds
add
int3
xor
push
out
mov
ret
iret
jge
cs
jne,pn
mov
fisubrl
jl
mov
subw
adc
aas
pop
sub
or
cmp
fcmovbe
scas
loopne
nop
pop
jge
sbb
xor
aad
add
jno
enter
pop
pop
adc
sbb
jp
outsb
ja
xor
in
in
jge
stos
jle
cwtl
mov
sarl
insb
test
sub
inc
cmp
push
cwtl
push
cmp
aam
lahf
inc
mov
cmp
push
rorb
mov
cmpsb
push
add
mov
repz
jb
cmp
stos
or
inc
ss
and
xchg
inc
mov
nop
stc
loope
or
cltd
xchg
rcl
xor
mov
xor
jecxz
pop
mov
sub
mov
fmulp
adc
clc
mov
jle
das
enter
test
dec
in
jmp
pop
cs
push
outsl
jmp
xor
adc
xor
jp
xor
dec
dec
lds
in
in
push
jle
xor
outsl
push
ret
pusha
fwait
sub
in
mov
add
adc
adc
lcall
xlat
mov
push
pushw
sub
cmpsb
rolb
and
loope
lock
or
repnz
lock
mov
mov
xchg
mull
fsubs
and
and
cmp
jmp
sub
pop
adc
shl
imul
loopne
dec
xchg
out
inc
pop
sub
out
pop
sub
sbb
or
mov
xor
cli
imul
pop
xchg
cld
js
cli
jno
icebp
movsb
test
xor
inc
push
mov
lea
cltd
in
and
mov
sub
jo
lds
fwait
int
cmp
outsb
ficomps
dec
int3
jb
stos
adc
xchg
jbe
mov
and
pop
and
dec
jp
scas
cmp
xchg
cmp
outsl
mov
mov
hlt
jle
int
test
ljmp
xchg
lahf
cmpsl
lods
jmp
add
faddl
push
mov
xchg
subl
cmpsb
push
lret
or
fxtract
or
dec
in
lods
jno
jg
cld
lret
stos
test
mov
outsl
xlat
and
stos
lcall
xor
push
xlat
adc
fs
call
sub
rorl
jnp
xchg
dec
jne
push
mov
xor
xchg
sub
cmp
inc
xchg
popf
inc
addl
arpl
jmp
into
push
out
dec
lods
hlt
mov
les
mov
lret
push
jns
pop
and
sub
pop
hlt
mov
xchg
xor
sub
cmp
in
pop
mov
xor
or
inc
mov
fsts
cmp
sub
repnz
sub
imul
and
mov
add
xchg
and
in
mov
loopne
push
adc
sub
jg
fwait
mov
out
inc
push
decl
icebp
icebp
jae
mov
add
es
sbbb
iret
fildll
ds
fldenv
scas
lods
lcall
push
rolb
sbb
xchg
sub
mov
sub
sti
stc
push
inc
or
out
lahf
popa
les
sbb
pop
sarl
and
lods
mov
sub
roll
pop
pop
loope
clc
nop
inc
fdivrl
clc
lods
and
pop
jge
dec
fisubrs
fdivrl
sahf
adc
or
inc
stos
xor
cld
xor
test
test
imul
inc
mov
mov
andl
add
pop
xchg
or
pop
jnp
subb
jne
test
outsb
lret
add
cmp
movsb
mov
xchg
push
sahf
fldz
adcb
lcall
jnp
sbb
xor
cwtl
in
xor
pop
int
lret
xorl
jmp
pminub
lods
js
nop
or
sub
inc
sti
decl
les
adc
hlt
xlat
xor
xor
stc
pushf
xchg
or
pop
filds
sbb
sub
mov
loope
pop
inc
cltd
lods
sub
and
out
out
fs
cld
push
scas
sub
and
push
jne
in
mov
cmp
and
fldl
or
or
rol
pop
mov
adc
pop
xchg
add
fistps
jle
sahf
xor
lods
scas
add
in
test
fs
out
mov
negb
adc
sti
stos
inc
les
test
dec
sarb
ljmp
test
loopne
test
icebp
jmp
aad
lock
adc
xchg
cmc
mov
divb
insl
mov
adc
ja
clc
sbb
imul
es
sub
stc
or
inc
push
cmp
mov
fmull
pop
je
jbe
enter
jns
lock
mov
call
push
std
push
scas
mov
lods
mov
pop
hlt
popfw
or
jl
xlat
mov
add
loopne
push
mov
mov
xor
fldcw
jb
std
lea
ljmp
push
mov
outsl
lds
out
dec
lcall
mov
jnp
pop
imul
and
aaa
xor
loop
and
mov
int
aaa
adc
test
bound
and
scas
add
push
adc
pusha
ljmp
inc
xor
jne
icebp
inc
jecxz
push
lea
out
inc
add
mov
stos
xor
pop
aad
cmp
popa
les
ror
daa
sbb
les
rcl
sub
dec
inc
adc
mov
xchg
nop
outsb
push
inc
sbb
cs
xor
and
mov
mov
push
xchg
lcall
sub
stc
ret
popa
cmc
les
mov
loope
xchg
jbe
pop
cwtl
int3
ret
cmpsb
stos
mov
xor
cltd
or
flds
adc
adc
and
mov
push
loopne
hlt
je
fdivp
dec
cli
xchg
aam
cmp
insl
sub
xchg
mov
sarb
and
incl
fs
int
subl
jmp
jno
xlat
push
addl
aad
imul
cmc
in
pusha
bound
test
mov
push
fsubr
arpl
or
xchg
pusha
cmp
aas
mov
cmp
push
jg
icebp
and
mov
sbb
clc
mov
call
outsb
adc
pushf
mov
dec
mov
sub
leave
mov
arpl
mov
dec
adc
inc
out
ljmp
and
sbb
cli
push
xchg
push
int
inc
jns
mov
add
leave
inc
dec
mov
iret
sbb
inc
mov
lahf
enter
mov
sbb
dec
repz
jae
pop
jb
sarb
or
dec
cmpsl
loopne
mov
mov
das
sarl
dec
cmp
sub
jp
sbb
lock
std
push
out
fisttpll
std
pop
xor
das
ds
into
inc
cs
jg
fdiv
pop
clc
sbb
outsb
sbb
push
rclb
inc
xor
sbb
jg
in
in
dec
push
and
mov
xor
sbb
xchg
pop
sub
push
inc
sub
lods
dec
jae
add
call
sub
pop
pop
dec
xor
inc
dec
lods
jp
mov
outsb
pop
inc
fldenv
and
sub
rclb
lods
dec
in
cld
sbb
jno
movsb
shlb
js
sub
inc
dec
jg
out
push
aas
repz
mov
sub
adc
adc
into
sbb
push
out
loop
repz
fistpl
jae,pt
ja
mov
sbb
dec
pop
xchg
test
in
aaa
outsl
adc
scas
les
or
ret
jb
dec
fs
mov
idivl
dec
inc
cmp
js
rorb
and
and
aam
ret
imul
loop
inc
mov
xchg
popa
add
scas
push
cwtl
mov
push
aam
jl
pop
sbb
and
pop
cmp
insl
xchg
mov
pop
jns
cmpb
push
or
adc
in
inc
mov
pusha
push
out
inc
ja
lea
xchg
scas
lret
cwtl
jb
scas
ret
enter
imul
test
xorl
mov
dec
mov
repnz
fidivrl
test
xor
mov
inc
sub
out
aad
cmp
xor
dec
outsl
mov
gs
mov
outsb
sub
lds
pop
roll
gs
adc
ret
add
mov
mov
sub
cmc
xlat
adc
rcr
push
ja
pop
sub
mov
fidivrl
push
rcrl
cli
mov
mov
adc
lcall
pop
incb
ret
pop
and
pop
or
sub
pop
cmp
fstpl
mov
add
push
lds
cld
add
aas
jae
scas
pop
std
out
cwtl
sbb
xchg
mov
cs
imul
jo
shl
les
cmp
cld
into
lds
push
mov
mov
in
inc
lcall
dec
cmpsl
leave
fwait
cmp
pop
fwait
push
pop
shl
jle
lret
mov
or
sub
cmp
push
ss
sarb
mov
movsb
lods
mov
inc
testl
subb
mov
dec
mov
dec
mov
add
or
cwtl
push
push
ss
jecxz
add
push
scas
call
cwtl
mov
loop
call
aaa
pop
sub
cmp
movnti
aas
hlt
mov
pop
scas
cs
cmp
cmpsl
push
mov
and
bound
and
fxch
popf
cmpsl
pop
insl
repnz
fs
and
xchg
or
or
sti
mov
and
sbb
sbb
ds
in
cmpsl
leave
pop
imul
iret
lret
imul
jnp
outsl
xchg
jecxz
dec
or
xor
mov
mov
jbe
pop
adc
inc
xor
and
xor
andb
adc
jns
dec
scas
xor
pop
push
mov
das
ret
pusha
in
sbb
sbb
loopne
dec
inc
in
sbb
or
dec
outsb
test
add
icebp
pop
jge
and
add
pusha
xchg
mov
inc
lcall
fstpt
push
dec
lods
ret
cltd
push
jg
jo
jle
pop
aam
out
mov
mov
jnp
ficoms
sahf
lock
sbb
mov
lcall
stos
xorb
pop
pop
mov
es
push
gs
inc
adc
dec
out
fwait
lea
shll
lahf
mov
ljmp
fimuls
sahf
add
ds
mov
sti
push
stos
xor
pop
sub
lret
mull
and
je
and
cmp
paddsb
ja
jae
jge
fiadds
add
cmp
lret
push
jp
sbb
ret
gs
push
js
adc
in
subb
adc
mov
push
push
aas
mov
push
or
negl
sub
in
xchg
cmpsb
lock
xchg
mov
fisubl
and
pop
sahf
jmp
daa
ficoms
popa
cld
loop
mov
jle
cmp
mov
mov
dec
push
cli
pop
sbb
mov
jno
outsb
mov
int
pop
repz
jg
es
fidivs
xor
mov
push
lcall
jle
out
mov
inc
aam
push
cmpb
dec
into
sbb
mov
movsl
cmp
setns
and
adc
aam
mov
out
and
mov
lods
jl
pushf
insl
jl
cwtl
sbb
das
es
into
test
sbb
jg
xor
add
daa
popf
or
insl
xchg
pop
lahf
push
test
cli
mov
int3
dec
out
ret
call
add
js
pop
mov
movsb
cli
stc
mov
push
sub
pop
adc
mov
or
add
jecxz
dec
inc
inc
xor
aas
xor
insl
sub
out
push
jb
cmp
test
fldenv
mov
mov
xchg
jno
fstl
ret
cmc
add
add
mov
lcall
call
insb
adc
jg
adcb
inc
or
stos
push
push
out
pusha
scas
ja
add
je
and
scas
ret
lahf
fimull
or
mov
fimuls
xchg
out
cmp
dec
aam
push
sahf
imul
pop
ljmp
sub
xor
mov
cli
pushl
and
xor
add
sub
ds
jg
lock
fidivrl
sub
push
pop
or
inc
in
out
sub
inc
inc
lock
cmp
xor
inc
leave
das
mov
aad
xor
adc
stos
inc
mov
mov
out
daa
sub
jns
popa
mov
scas
sbb
scas
clc
sti
dec
ror
mov
adc
pop
mov
scas
cmp
mov
idivb
mov
xor
in
out
inc
or
jae
imul
cmp
xchg
jns
xchg
mov
mov
xchg
cmp
sub
jbe
adc
outsl
push
pop
xor
xor
lahf
stc
sub
xchg
push
cld
adc
pusha
je
add
inc
int3
rcrl
inc
ror
ret
int3
icebp
push
ss
cmc
popa
inc
and
daa
orl
jge
iret
popa
or
push
sbb
ja
sbb
orb
fistpll
xchg
rcr
je
insb
mov
mov
jae
mov
sbb
jae
xchg
rcl
popa
nop
notl
test
jbe
pop
movsb
cmp
fisttpl
add
fnstsw
pop
insb
hlt
ss
shll
xchg
mov
sbb
shl
test
cmp
xchg
adc
adc
jp
pop
inc
xchg
stc
repnz
aad
loopne
movsb
jae
sub
sbb
jb
or
push
loop
cmc
mov
sbb
xor
jns
cs
mov
lods
cmp
mov
movsl
bound
mov
mov
in
sbbb
xchg
mov
je
std
sub
mov
and
add
pop
rorl
mov
ss
push
fldenv
test
shll
daa
push
shrl
movsl
push
adc
jecxz
adc
mov
adcb
cmp
dec
nop
jle
cmovl
insb
psrld
repz
add
in
ljmp
mov
bound
dec
and
dec
ret
sbb
mov
ja
sub
mov
pop
sub
xchg
lods
insl
xor
out
jne
pop
andb
fcoms
sbb
adc
ror
fnstcw
fists
push
clc
adcb
stc
cmp
mov
and
pop
jmp
cmp
add
iret
idiv
push
pusha
ds
adc
rcll
gs
cmp
stos
xchg
or
or
incb
pop
sbb
inc
outsl
push
in
sbb
out
call
push
shlb
adc
xchg
mov
inc
movsl
lods
cmpsb
call
push
jne
into
jns
jecxz
sbb
xor
into
sbb
imul
jp
lock
dec
stos
mov
or
xor
movsb
call
jb
or
push
pop
lea
mov
sbb
jmp
jnp
jnp
sub
pusha
fisttps
mov
and
fadd
or
sub
adc
fsubp
imul
je
bound
nop
cmp
jg
inc
aad
loope
jp
sbb
mov
rorb
insl
pop
ror
xlat
lods
mov
fistpll
jmp
enter
pop
push
mov
jae
push
daa
mov
cmpl
lret
pop
mov
lods
push
jne
mov
dec
mov
std
out
xchg
out
fcmovnb
jg
push
push
stos
xor
in
sub
pop
stos
dec
inc
pop
and
inc
scas
jg
push
mov
adc
sub
cmpsb
and
sbb
ffree
imul
leave
adc
xchg
dec
push
es
push
stos
pushf
lods
inc
into
jne
or
dec
fwait
jg
adc
mov
repnz
movsl
inc
jne
or
push
cmp
bound
mov
mov
pushf
leave
pop
xor
imul
xchg
pop
std
data16
jae
inc
inc
xlat
inc
jle
rcrb
hlt
mov
hlt
popf
in
sbb
lock
push
cli
mov
or
push
mov
sbb
jecxz
cmc
loop
mov
shlb
push
sub
cmpl
sbb
mov
mov
push
jne
js
test
roll
ds
pop
sbb
or
leave
cli
ret
mov
ror
lret
scas
mov
push
jns
cs
xchg
pop
jl
loopne
mov
and
dec
and
es
inc
popf
sbb
rcr
pmulhw
cmp
jbe
pop
mov
lock
ljmp
adc
mov
repnz
mov
jl
loopne
sub
lcall
adcb
xorb
test
or
and
mov
and
lods
sbb
dec
dec
sbb
xchg
sub
arpl
sbb
lock
push
repz
lods
ja
sub
lea
pop
sub
pop
adc
xchg
jge
lock
inc
mov
loope
popa
jp
xor
cmp
sbb
add
pushf
cmpb
cmp
pop
sub
mov
push
pop
push
icebp
repz
pop
lahf
daa
sub
dec
data16
ret
add
ret
pop
aad
and
pop
das
sahf
shlb
outsl
sub
dec
jecxz
fcmovu
inc
xchg
xor
jno
xchg
jle
mov
ficoml
imull
mov
or
inc
repnz
cmp
push
mov
cli
xor
push
dec
scas
jno
sbb
push
popf
add
xchg
ret
es
shlb
push
jle
sbb
andl
cwtl
ror
mull
fdivs
outsb
lds
pop
xchg
mov
jmp
adc
adc
cmpsb
dec
cmp
fidivs
lea
out
adc
test
mov
and
lcall
push
add
aas
cmpsl
pushf
dec
mov
fdivr
cltd
inc
rcll
jl
outsb
sub
insb
jmp
outsl
stos
add
xor
aas
jns
cwtl
add
je
frstor
sti
xchg
adc
and
or
fisubrl
mov
movsb
mov
lret
movsl
mov
cmp
adc
or
jb
aas
fwait
sub
int3
sbb
or
mov
out
inc
add
mov
pop
roll
stos
repnz
add
mov
or
test
mov
mov
lods
in
mov
jno
add
xor
sbb
add
insl
test
and
stos
inc
lods
data16
jmp
movsb
mov
dec
ja
outsl
cmp
fildll
inc
pop
jp
cmp
addr16
sbb
mov
rolb
cmp
arpl
fcompl
lret
incl
lcall
out
mov
sub
call
loope
jecxz
inc
add
aam
mov
stos
sub
adc
scas
icebp
cmp
mov
loopne
adc
lods
mov
or
call
shl
shlb
pusha
roll
std
repz
jp
dec
in
mov
dec
pop
pop
xchg
ret
and
push
in
lret
shlb
mov
mov
inc
adc
repnz
add
loope
jg
and
jecxz
insb
add
into
fucomi
push
test
and
inc
jmp
or
jecxz
dec
xchg
loop
push
lret
pop
jne
add
sub
in
icebp
xchg
push
int3
cs
fidivl
mov
mov
inc
lcall
mov
shl
xor
scas
inc
popf
cltd
popl
insl
mov
lret
icebp
xor
daa
movsl
cld
cli
mov
xchg
mov
mov
xchg
xor
fstps
dec
idivb
in
mov
pop
jo
addl
test
dec
adc
testl
mov
pop
cwtl
add
xchg
arpl
aaa
popf
jae
arpl
das
sbb
fs
jo
mov
leave
test
push
push
mov
and
mov
adc
fs
lret
dec
dec
add
clc
push
or
push
jmp
pusha
and
int3
and
lods
xchg
pop
push
imul
cmp
add
call
call
inc
pop
dec
scas
cld
adc
and
jge
daa
or
pop
fstpt
add
cmp
cli
jg
sub
cmp
push
test
call
sub
out
dec
mov
test
negl
pop
aam
and
rorb
repnz
sti
out
repz
nop
stos
pop
stos
mov
mov
push
mov
or
shlb
insb
inc
and
sbb
add
xchg
mov
popa
ret
test
cmp
xor
ror
pop
fistpll
imul
pop
cwtl
mov
shll
push
pop
in
aam
cmc
jle
sub
repnz
imul
imul
arpl
pop
cmp
inc
inc
scas
xchg
fdiv
jbe
mov
lea
icebp
sbbb
mov
adc
cmp
enter
jmp
mov
sub
jge
lds
adc
aad
lahf
outsb
mov
in
push
imul
mov
in
xchg
or
lcall
ds
in
xchg
aad
mov
jns
or
jns
sbb
rol
mov
xchg
loopne
cltd
mov
aaa
repnz
shrl
cmpsl
cmpsb
dec
hlt
dec
inc
outsb
sbb
ficomps
pushf
xchg
enter
sbb
pop
lods
mov
into
and
jo
inc
out
je
sbb
cmp
rcrl
call
xor
jmp
and
pop
loopne
lret
mov
leave
daa
sub
add
push
pop
xchg
arpl
inc
scas
cwtl
xchg
arpl
push
in
mov
nop
adc
ja
xor
lea
add
int3
imull
or
pop
sti
push
js
add
scas
pop
mov
inc
decb
jbe
pop
into
mov
mov
in
xchg
rcrb
cmpsb
cmpsl
cltd
iret
popa
jbe
outsl
cmp
dec
cmp
xchg
stos
jo
jl
das
sbb
jle
loope
mov
out
sub
mov
fbstp
std
mov
ds
dec
ja
aas
test
sbb
mov
lret
shlb
sbb
loopne
dec
xor
dec
jne
mov
pushf
sub
adc
pop
dec
fisttpl
xchg
std
xchg
dec
inc
xchg
cmpsl
enter
inc
inc
aad
divl
xchg
dec
dec
push
or
pop
shll
xchg
inc
mov
rclb
dec
pushf
rol
sbb
les
sub
xor
sub
xchg
pop
push
ss
jmp
mov
fiaddl
inc
clc
add
das
pop
mov
add
rol
sub
repnz
shrl
sbb
rcl
mov
lahf
sub
cmc
sub
mov
pop
in
cmp
add
jecxz
jo
int3
xor
xchg
push
sbb
cmp
outsb
push
in
loope
and
lret
jb
out
ffree
or
dec
xchg
sarl
mov
inc
push
push
rcll
rorb
mov
sbb
inc
or
out
pop
adc
aaa
inc
xor
jno
lea
out
cmp
gs
ret
daa
add
jp
imul
mov
ficompl
xlat
mov
into
dec
outsl
das
enter
jbe
ljmp
cli
push
data16
or
lods
movl
xchg
pop
mov
shlb
or
sti
xor
inc
inc
dec
aas
adc
insb
pop
pushf
adc
or
arpl
xchg
movsl
mov
jl
lret
lods
push
orb
ret
pop
out
popa
jae
push
insb
adc
lahf
rcl
cmpxchg8b
leave
loope
stos
add
sbb
js
ret
xchg
shr
es
pop
enter
sub
and
mov
xchg
idivb
lret
lds
fists
or
lret
fistpl
data16
and
imul
inc
and
xor
cwtl
jp
neg
subb
mov
adc
push
les
mov
flds
or
mov
cmpb
inc
xchg
sar
jnp
jle
cmp
aad
push
cmp
lds
add
mov
enter
jmp
sub
ret
cli
and
inc
in
ja
cmp
testb
jnp
xchg
jne
inc
mov
mov
jnp
jmp
mov
test
adc
lret
cmp
out
js
ficoml
push
lea
push
movsl
push
push
jbe
sbb
fidivl
cmp
movsl
mov
xchg
jl
mov
fnstenv
mov
mov
mov
lods
xchg
and
decb
dec
xchg
push
xchg
popa
mov
pop
xchg
shl
xchg
and
ficoms
pusha
inc
pop
int3
and
dec
cltd
dec
dec
out
sbb
js
stc
stos
lds
insb
ret
stos
push
cmp
ficoms
sbb
dec
sbb
sub
mov
hlt
jno
sub
add
mov
pop
push
mov
out
addr16
fstpl
pop
adc
imul
push
movsb
sbb
bound
imul
test
mov
add
insl
jne
xchg
or
in
testl
je
insb
pop
add
inc
add
sarb
bound
data16
pop
rcll
sti
call
mov
sarl
add
in
arpl
and
insl
add
stos
push
pop
and
call
fidivrl
jb
mov
mov
inc
insl
orb
jg
ds
push
jmp
inc
sub
pop
mov
movsl
shrb
scas
cmp
stos
mov
int
loop
xorb
mov
mov
loop
scas
sbb
mov
inc
imull
add
out
pop
sub
test
pop
orb
xchg
flds
mov
ja
sbb
sub
mov
aad
mov
or
add
shr
mov
xor
dec
pop
or
push
shrb
sahf
aam
mov
cmpsl
cmpsl
sbb
movsb
pop
inc
mov
sub
mov
subb
into
sub
jns
pop
pop
mov
push
dec
lea
push
jbe
pop
ds
sub
and
fadds
xor
ja
mov
xor
mov
sub
sbb
xor
jns
inc
dec
dec
ret
lods
xchg
test
pop
xlat
adc
jo
xlat
mov
mov
sti
jl
push
add
mov
into
push
rorb
cmp
iret
xor
sbb
rolb
decb
out
xor
mov
hlt
jl
cmc
nop
sti
sub
xchg
pop
call
nop
adc
inc
xchg
stos
sbb
lret
es
adc
or
das
xchg
add
sub
lahf
pop
sbb
rorl
ds
mov
enter
dec
in
aam
xor
nop
dec
sbb
popa
leave
push
int3
fisttpll
shl
jp
sbb
mov
sub
mov
pop
cmpb
rcl
cli
int
je
xor
gs
cmc
sahf
insl
scas
std
mov
jl
xor
subl
sti
adc
lcall
test
jecxz
mov
mov
ljmp
movsb
enter
inc
jp
jmp
xchg
mov
loope
jg
gs
ds
mov
inc
cli
cwtl
imul
sbb
repnz
jmp
or
loop
mov
sub
pop
xchg
sub
or
push
fistpl
jae
cmp
ret
sbb
rolb
sti
sub
jne
push
cmc
xor
sarl
xor
fwait
or
rorl
fldenv
cmc
jmp
sti
mov
pushf
mov
adcl
mov
adc
idivb
or
dec
pushl
cwtl
mov
or
fdivrl
mov
movsl
pop
mov
cwtl
jle
popl
ss
or
int
jge
aam
fs
or
jns
push
cltd
shrb
add
les
into
insl
mov
icebp
repnz
fwait
lahf
ret
dec
fs
xor
lods
mov
aam
insb
stos
imul
fldcw
lret
push
es
in
adc
add
sub
mov
push
xor
addr16
jg
sbb
repz
pop
adcl
jb
cmc
xchg
jns
sbb
fldcw
pop
cli
daa
and
and
in
or
add
mov
dec
rcrl
xchg
jne
mov
bound
add
insb
push
jbe
xor
ret
inc
cmp
lods
push
movsb
push
fmul
add
dec
sbb
mov
stos
push
and
fnsave
xchg
aas
sbb
inc
mov
sbbl
jl
lahf
dec
jmp
les
jae
ss
xor
rcll
outsb
cmp
mov
nop
sbb
out
jnp
jecxz
rclb
pop
dec
in
in
cmpsb
xor
xlat
mov
sub
push
add
cmpsb
sbb
cld
pop
xor
dec
aas
adc
jno
shlb
inc
lock
push
sub
in
das
mov
sub
or
push
pop
jmp
mov
jno
xchg
jge
xor
adc
jbe
pop
mov
in
arpl
adc
negb
dec
outsl
mov
orl
sti
arpl
fistps
test
xor
dec
iret
fsubl
lcall
jmp
inc
adc
pop
xor
dec
dec
or
xchg
or
sbb
roll
mov
xor
sbb
out
or
test
cmp
leave
adc
fs
push
in
roll
push
lea
adc
icebp
jno
scas
cmp
cmpsb
inc
xchg
nop
out
popa
mov
leave
dec
ss
mov
cmpsb
cmp
negl
dec
lds
sbb
pop
cmp
scas
xlat
fwait
inc
push
cltd
aaa
bound
hlt
push
mov
out
pop
pop
mov
sbb
cmp
in
gs
sub
popf
and
xchg
xchg
hlt
push
sub
cli
mov
mov
and
flds
aaa
push
int3
fistpl
add
rcrl
push
dec
stc
aam
fldcw
dec
dec
mov
orb
cmp
or
push
out
pop
mov
adc
jmp
xor
fsts
ljmp
ljmp
shrl
mov
clc
cs
ret
into
mov
jecxz
mov
mov
roll
out
shrl
xchg
mov
outsb
xor
stos
pop
int
jmp
ja
iret
jno
call
loope
xchg
dec
dec
lock
mov
std
loop
test
xlat
dec
jo
imul
cmp
cmp
adcl
and
pop
stos
mov
cs
dec
sub
outsb
je
pop
sbb
pop
hlt
cltd
mov
movsb
fisttps
dec
mov
popf
iret
xchg
sbb
test
pop
fisubrs
je
pop
inc
cmc
jne
adc
xchg
leave
loope
movsl
movsl
mov
psubusb
cli
pop
stos
rcr
push
sahf
cmp
adc
and
jb
add
repz
out
pop
in
push
jbe
repz
adc
pop
mov
mov
insl
int
jo
scas
lods
mov
xchg
dec
mov
push
mov
pop
data16
or
push
pop
jne
je
lods
jmp
clc
xchg
mov
loop
jo
sahf
push
xchg
cld
adc
rcr
dec
pop
faddp
cmp
add
or
outsb
xchg
xchg
jle
cwtl
lock
lret
dec
xor
add
push
pusha
sbb
popa
mov
not
inc
in
xchg
out
push
jge
push
xor
mov
int3
push
cmp
mov
xorl
mov
js
xchg
xchg
inc
adc
hlt
xor
gs
insl
inc
mov
lds
cltd
cmp
push
xchg
ret
pop
pop
pop
sbb
xor
cs
xchg
cmpsl
sub
pop
inc
inc
ret
mov
sti
xor
mov
mov
in
xor
pop
in
sahf
mov
insl
ret
or
dec
and
pop
popf
shl
int
cmp
ret
or
and
xchg
and
imul
call
ret
icebp
fs
push
call
lods
xchg
jae
pmaxsw
mov
inc
call
cmc
dec
jne
pop
dec
frstor
loope
pop
xor
add
adc
std
or
cmp
cmp
add
mov
cwtl
testb
and
fldt
sub
int3
adc
inc
cs
rcll
iret
popl
xchg
outsb
add
lock
stc
sbb
lahf
adc
js
mov
cs
dec
xchg
jl
add
negl
in
test
fs
popf
cli
xor
jb
sbb
insl
incl
int3
or
or
int
loope,pt
outsl
fdivrl
rcll
aam
xor
and
mov
mov
cli
jl
mov
mov
sbb
leave
xchg
bound
incl
push
les
or
dec
pop
mov
and
push
push
imul
outsl
jae
pushf
out
enter
cs
pop
xchg
sub
int3
jp
push
push
lret
in
jnp
inc
mov
pop
lahf
mov
jle
pop
mov
hlt
sahf
sub
mov
push
fistl
aam
ret
sub
testl
das
andl
pop
push
dec
sub
add
in
decb
inc
dec
hlt
dec
cmp
cs
push
mov
mov
mov
inc
push
pop
js
push
gs
sti
xchg
ds
scas
cs
pop
test
imul
cmp
imul
pop
sub
imull
pop
push
mov
lods
mov
int
push
jle
bound
shlb
icebp
adc
bound
sub
mov
repz
lods
out
push
decl
jae
sub
sub
pop
fs
movaps
lds
insl
imul
rcrb
lcall
xchg
pusha
shlb
push
cs
jb
sub
movsb
test
dec
push
jge
fldcw
jmp
sub
or
std
loope
jne
cmp
xor
cmp
movsl
dec
mov
xchg
daa
cmp
sti
test
stos
fidivs
pop
pmaxsw
mov
cmp
in
loopne
loope
xchg
bound
ss
xlat
or
ljmp
fwait
mov
jp
aaa
push
pop
lods
aaa
adc
push
push
mov
pop
xchg
fnstcw
xchg
insb
pop
cmp
mov
sub
or
and
add
lret
mov
sarl
mov
mov
jl
dec
nop
rcrl
adc
rclb
mov
pop
xchg
pop
or
int3
sub
call
jp
mov
in
jo
push
xchg
in
pop
sub
loopne,pt
add
cmp
aad
cmc
mov
test
mov
xchg
sub
lds
cmp
mov
pop
jae
sbb
dec
aaa
xchg
leave
cltd
ss
in
and
push
mov
scas
add
mov
mov
sbb
lods
and
dec
add
push
cltd
mov
out
out
dec
xchg
ja
mov
fwait
push
lock
icebp
popf
mov
int
add
mov
xor
ljmp
in
jne
mov
jbe
vcvtsd2si
cmp
push
mov
inc
add
xlat
nop
adc
jl
mov
cmp
or
cs
leave
xchg
and
inc
xchg
pop
scas
test
in
mov
dec
mov
imul
out
sbb
outsb
inc
outsb
or
cld
orl
jno
push
repz
inc
jno
out
shlb
sub
out
and
sub
and
insl
sbb
shrb
negb
mov
int
dec
sbb
mov
xorb
shll
dec
lret
cld
push
and
jmp
xor
dec
sarb
push
inc
inc
add
cmp
mov
fistps
shll
ss
into
mov
arpl
mov
daa
test
push
loop
in
icebp
cmp
mov
cmp
cld
pop
xchg
mov
pop
mov
lahf
arpl
test
sub
lds
jo
jnp
adc
or
add
call
push
cwtl
iret
and
adc
mov
out
gs
cmp
bnd
test
or
cmp
pop
iret
or
je
push
sub
pop
call
fldl
out
or
out
addb
ret
xchg
loop
adc
in
mov
sub
push
repnz
je
int3
sbb
fiadds
mov
and
lods
fwait
sub
push
sub
pop
in
fists
ficomps
add
cmp
scas
mov
sbb
cmpsl
popf
xor
push
nop
in
push
pop
pop
lods
add
pop
out
repz
mov
stc
push
shrl
or
push
test
lret
inc
sbbb
aam
cmp
push
xchg
js
lea
jnp
xlat
scas
loop
mov
in
dec
fidivrs
cmp
aad
sbb
loope
loope
xlat
in
rcl
dec
stos
xorl
and
mov
dec
pop
push
dec
imulb
and
adcl
call
int
and
icebp
xorb
int3
out
adc
push
jnp
inc
outsl
adc
mov
jb
loop
jbe
mov
xchg
and
in
cmpb
or
sub
and
dec
imul
adc
xchg
or
xchg
jns
push
add
out
or
loopne
push
push
jg
jb
xchg
and
in
in
dec
cmpsl
pop
mov
xchg
loopne
ror
or
jmp
push
iret
sarb
dec
mov
add
xchg
fldenv
data16
das
inc
push
movsb
mov
dec
xor
test
lret
dec
fwait
imul
jecxz
inc
and
ss
xor
gs
and
daa
and
aas
sub
jnp
outsl
xor
das
add
pop
add
xor
loop
lcall
xchg
icebp
in
push
jge
stos
xchg
xchg
inc
lea
lods
pop
inc
xor
mov
cmp
sbb
iret
jb
xor
xor
pushl
movsb
dec
filds
inc
pop
in
imul
pop
xchg
decb
xchg
jl
and
push
mov
out
test
pop
sbb
or
sub
orb
jecxz
flds
sub
sub
jae
je
jl
xchg
cs
stc
sub
loopne
cmp
jnp
inc
xor
mov
imul
xchg
loop
gs
xor
dec
pop
pop
add
adc
mov
jp
or
scas
pop
cmp
adc
jl
loope
push
pop
pop
cmp
out
fcomps
scas
mov
outsb
test
dec
add
or
mov
cmp
or
jae
sub
int
adc
ret
sarb
mov
push
cmp
sub
pop
lcall
xor
loopne
push
sbb
sbb
lcall
ret
pop
jb
push
es
in
aas
imull
xor
test
xchg
xor
mov
femms
shlb
stos
inc
dec
adc
mov
movsb
leave
mov
out
adc
and
or
sahf
sbb
mov
push
icebp
push
push
sar
lods
roll
sti
jne
xchg
xorl
fs
jnp
outsb
adc
mov
iret
out
pop
inc
adc
subl
jl
jge
jbe
pop
pop
mov
mov
lods
loop
fdiv
cmp
into
arpl
repnz
lods
ss
aas
int
pusha
pop
pop
jecxz
adc
movsb
frstor
pop
jmp
xlat
das
bnd
xlat
dec
jb
pop
idivl
or
imul
rcrl
and
sbb
xchg
popa
mov
stc
adc
jmp
jmp
and
push
outsl
push
addr16
xchg
dec
pushf
iret
mov
andb
gs
sub
mov
cs
pop
inc
push
sub
pop
es
stos
bound
icebp
add
divl
jbe
xor
rcrl
push
imull
sub
shll
scas
sbb
jnp
adc
stos
add
mov
pop
sbb
les
clc
and
sub
pop
push
fsubl
cmp
scas
sub
mov
sub
add
mov
nop
xchg
push
sub
jbe
jae
add
pop
mov
test
dec
push
test
cmpsl
rcll
pop
sub
lods
or
bound
es
sbb
jae
mov
or
xor
sub
nop
xchg
xor
js
cmp
mov
pop
shr
pop
repz
in
fs
jp
fldt
sarl
and
and
popw
sub
push
mov
inc
and
decb
jl
shl
mov
jbe
mov
mov
cmp
push
aam
cmp
mov
je
xor
jl
call
in
std
push
cmp
adc
dec
ja
adc
rcrl
mov
cmp
add
mov
rorb
mov
and
nop
cmp
mov
mov
ja
cmc
add
rcrl
or
mov
adc
pushf
and
add
loop
xchg
imul
movups
mov
push
inc
xor
lods
popl
bound
scas
mov
ret
xor
es
and
pushw
arpl
pop
push
sti
stos
sbb
repz
shll
sub
test
or
push
stos
mov
call
inc
mov
jb
push
sub
sbb
xchg
jo
movsl
jns
dec
xchg
and
and
insb
dec
cltd
dec
and
cmp
sub
push
xlat
cmp
nop
pop
mov
jns
lods
xor
rorb
xor
lds
dec
xchg
push
inc
cmp
cmpsl
les
pop
int3
mov
andl
cli
push
lock
lods
xchg
mov
adc
xchg
mov
pusha
adc
insb
cmp
mov
mov
xchg
cmp
xchg
dec
jp
pop
cmp
cmp
dec
or
and
jbe
and
test
xchg
add
push
push
pop
imul
rolb
cmpsl
out
mov
out
enter
xchg
les
aaa
test
xor
add
mov
mov
cmp
ss
xor
push
xor
lds
scas
mov
enter
mov
psrlw
cmp
cmp
loopne
cmp
faddl
int3
inc
insb
cltd
popa
push
std
cli
adc
cwtl
das
cmc
icebp
jbe
test
mov
divl
pop
lods
loop
or
xchg
mov
mov
jbe
cmc
pop
sbb
sbb
lock
bswap
test
test
outsb
add
inc
jecxz
lret
push
das
mov
jge
mov
movsb
sbb
ss
lahf
or
loope
roll
outsb
adc
shlb
cmpb
or
jb
cmp
dec
int
pop
cmc
inc
cwtl
std
jl
lock
cld
dec
push
push
sub
xor
in
rcll
sub
outsb
add
fisubrs
lods
pop
cs
pop
mov
jge
push
lret
add
out
inc
mov
loope
lea
and
mov
inc
int3
mov
push
cltd
pop
pop
gs
into
sbb
stos
add
pop
sbb
push
call
sub
jo
dec
adc
sti
stc
mov
mov
jns
sbb
xor
cmp
popf
scas
jb,pn
nop
mov
xchg
test
vmwrite
or
into
pop
xchg
sub
lods
dec
ret
adc
movb
inc
outsl
popf
and
add
lret
into
fidivrl
leave
insl
in
imul
xchg
loop
mov
jl
repnz
rclb
mov
jl
xor
sahf
std
daa
fwait
lret
mov
dec
sbb
movsb
jl
or
jb
out
cmpsb
repz
cmp
xor
sub
enter
pop
nop
jnp
sbb
mov
jmp
popf
sbb
lret
jo
push
dec
push
fistpl
into
gs
jae
lods
decl
xlat
inc
fld
jmp
cmpb
add
rolb
inc
and
mov
imul
jo
fimull
cld
cltd
dec
int
inc
sub
stos
lahf
clc
mov
outsl
cli
decl
stos
cmp
ficomps
adc
push
xor
mov
sbb
fsubp
mov
lret
bound
cmp
lcall
enter
dec
cmpb
sub
mov
bound
adc
orl
and
or
xchg
or
add
and
jno
mov
cmpsb
push
mov
and
dec
inc
aam
cmp
cld
dec
sbb
add
test
and
xchg
pop
push
repnz
xchg
jb
pop
pop
add
shrl
fimull
out
cmp
lods
or
loope
pop
icebp
push
loop
cmpsb
into
mov
cmp
test
or
aas
sbb
out
rcrb
adc
ss
adc
inc
iret
out
pop
cmpsl
loop
dec
sub
sub
mov
mull
inc
mov
das
insb
mull
ja
mov
in
and
bound
sti
inc
ficoms
cmp
mov
scas
adc
aam
pop
jg
add
push
mov
loop
gs
bound
pop
mov
test
lods
out
jo
jae
add
pop
cmpb
fcompl
fisubrl
cmp
bound
movsl
stos
cwtl
push
decl
lds
fpatan
in
repnz
iret
test
lahf
pushf
je
fistl
and
loop
and
xchg
add
sub
or
sbb
insb
and
cltd
jno
xchg
repnz
jp
xor
cmpsl
xor
lcall
cmp
add
cltd
js
mov
push
icebp
lret
int3
and
out
movsb
dec
cmp
es
mov
jmp
push
xchg
sbb
jbe
cmp
dec
and
dec
cmpsl
mov
pop
js
xchg
imulb
mov
or
inc
cld
cli
jge
adc
or
push
mov
sub
jmp
ljmp
jns
scas
mov
aaa
lods
sub
or
sbb
and
adc
inc
mov
and
lcall
test
insl
pop
dec
mov
cld
les
in
add
int
loope
adc
xchg
push
mov
add
mov
test
add
sahf
flds
push
and
cli
jl
ficomps
push
ficoms
stc
dec
out
and
mov
movsb
jmp
std
jns
add
push
dec
inc
cmp
xor
pop
stos
or
pushf
cmp
fisubrs
es
sub
sub
aam
push
lds
jecxz
and
inc
xlat
jecxz
sbb
pop
sarl
inc
test
add
mov
push
mov
gs
pop
in
xchg
mov
cli
mov
out
xchg
or
outsb
cmp
sbb
addr16
and
push
and
ljmp
jb
and
cli
mov
fwait
or
cmc
dec
out
imul
mov
stos
fwait
adcl
mov
arpl
xchg
sbb
dec
mov
xor
pop
arpl
sbb
push
sahf
js
push
mov
dec
daa
cmp
arpl
and
add
cs
dec
jle
sbb
or
int3
sub
mov
push
test
loopne
and
inc
dec
popf
filds
sub
in
stos
ficompl
mov
scas
insb
push
pop
fnstsw
or
dec
scas
mov
lcall
and
mov
mov
push
mov
loope
pop
ja
cmp
lds
fs
mov
sbb
or
jg
sub
cmpb
dec
pop
std
cmp
mov
xor
outsb
jle
cmp
sub
dec
and
aam
push
mov
orl
xor
cmp
stos
xor
jmp
cltd
jbe
imul
or
xor
xchg
pop
sbb
pop
in
aas
mov
add
ret
mov
cs
or
cwtl
push
and
xchg
imulb
mov
adc
inc
mov
lcall
cwtl
cmpb
adc
fnstcw
daa
dec
nop
cs
push
gs
cltd
test
in
loope
lods
outsb
clc
movsl
das
repz
push
cwtl
and
movsb
aas
call
loopw
ljmp
add
mov
lret
pop
sub
int
inc
sub
xchg
push
fidivrs
es
adc
push
mov
add
or
mov
negb
aad
test
shrb
jg
xor
push
xchg
and
cmp
sbb
pmaxub
or
movsl
pop
cltd
cmp
sbb
fld
add
and
mov
push
jns
shl
test
push
jle
sub
aam
cltd
dec
fisubl
inc
jne
push
jecxz
shll
jae
inc
xchg
or
jmp
in
in
scas
outsl
pop
adc
mov
insb
or
mov
sahf
pop
sub
insl
add
repnz
jmp
dec
fs
addl
movsb
mov
add
in
cmp
xor
mov
pop
js
xchg
in
push
dec
fsub
cmp
push
lcall
cmp
adc
das
mov
aaa
rcrl
pop
stos
into
int3
loop
and
xchg
sub
test
lcall
repz
int
imul
leave
sbb
cld
pop
sbb
out
adc
punpckhbw
pop
lds
adc
jb
lds
mov
mov
aas
xor
push
xor
pusha
jg
ret
inc
adc
lret
into
vcvtsd2si
cmpsb
sbb
xorb
insl
mov
repnz
shrl
sub
cli
jecxz
xchg
aam
xchg
inc
cmp
inc
cmp
sub
imul
rclb
pop
bound
xchg
dec
test
lds
fimuls
and
push
mov
xchg
sarl
inc
shll
out
or
repnz
mov
cmp
dec
cli
in
jg
lea
repnz
jecxz
xor
xor
pop
shrl
jb
and
ja
testb
mov
enter
and
dec
cmp
ret
fstps
lahf
test
repz
sbb
xor
ja
xchg
ja
aas
xlat
mov
jge
mov
push
jne
cmp
mov
cmc
sbb
test
sahf
mov
cmpsl
fadd
aaa
xchg
iret
xchg
xchg
jecxz
addb
call
test
dec
jnp
add
or
adc
pop
xor
repnz
pop
xchg
movsl
adcl
jecxz
pop
and
xchg
mov
decb
mov
lahf
mov
sub
push
mov
dec
push
mov
sti
mov
xchg
push
pop
js
sti
push
and
add
pop
out
ret
xchg
xchg
or
in
stc
ror
push
adc
xor
or
addr16
adc
ja
sub
add
sahf
sbb
je
xchg
add
orb
aaa
js
adc
js
iret
mov
ficompl
enter
jl
adc
pop
imul
bound
bound
add
sub
arpl
push
cmc
out
pop
mov
ljmp
in
in
push
mov
or
aad
imul
fcmovbe
sub
out
aas
push
or
dec
and
mov
lret
fisubl
addr16
cmp
pop
popf
fcomip
in
jnp
or
int
mov
mov
repz
pushf
sbb
mov
xor
add
xor
daa
pop
pushf
or
sti
push
lcall
sahf
dec
fldenv
lds
push
clc
lds
cltd
mov
je
add
sahf
int
push
add
lcall
fcompl
imul
icebp
outsb
out
adc
mov
stos
loopne
negb
mov
pop
outsb
dec
jecxz
out
ljmp
add
cmp
test
pop
hlt
push
jo
leave
dec
add
addb
sub
jge
xchg
mov
fwait
inc
dec
jne
dec
dec
jbe
inc
pop
push
xorl
sbb
cld
les
sbb
inc
push
into
cld
fs
cmpsl
lret
adc
cmp
les
loope
out
mov
add
and
or
cmc
add
insl
mov
outsb
fstpl
mov
dec
enter
cmp
nop
add
mov
jge
flds
call
mov
stos
lea
lea
test
add
mov
add
mov
push
sub
mov
out
mov
sbb
push
hlt
and
fsubrl
pop
add
sbb
addr16
and
sbb
and
dec
cmp
mov
fildl
popa
rcll
mov
sub
sub
stc
jnp
aas
stos
push
inc
or
shl
jns
sbb
xor
xchg
sub
mov
push
mov
shrl
jae
sub
jns
xchg
mov
mov
aad
stc
pop
leave
mov
gs
jne
jl
jecxz
jno
scas
ljmp
pop
idivb
iret
out
roll
outsl
std
xor
movsb
jno
push
cmp
subb
jo
outsb
std
jns
mov
pop
shll
cmp
test
subl
sub
mov
mov
and
neg
push
int3
shl
arpl
je
scas
push
cmp
out
pop
fstpl
stos
sarl
add
mov
xchg
sbb
sbb
pop
aaa
ds
sbb
cld
les
fst
dec
clts
adc
xor
add
popa
add
mov
xchg
sahf
pop
add
xchg
pop
add
jbe
cmp
mov
dec
int
xor
movsb
addr16
mov
popf
jmp
pushf
dec
xchg
stos
add
inc
add
outsl
pop
std
sbb
cltd
mov
clc
test
out
add
or
sbb
shlb
out
je
cld
mov
xor
lock
test
jmp
arpl
push
addr16
loop
or
xor
pop
loope
mov
mov
xor
jecxz
dec
andb
mov
lahf
xchg
and
mov
pop
je
xor
in
mov
or
sub
leave
mov
test
dec
adc
rorb
dec
popf
popa
aas
jl
rolb
scas
into
repz
xchg
sub
mov
xor
sbb
mov
jae
int3
xchg
loope
sub
jmp
jae
sbb
sbb
pop
mov
adc
shlb
in
mov
sub
outsl
sub
add
test
mov
mov
test
stos
push
inc
bnd
lds
pop
xchg
mov
mov
xor
fsubrl
mov
fstps
or
loop
pop
inc
rorb
in
mov
loope,pt
push
mov
pop
mov
popf
ret
stos
call
jl
fidivrs
push
outsb
jne
jae
into
dec
add
sub
in
add
addr16
push
jne
aaa
and
outsb
aam
fsub
lds
adc
mov
cmp
cmp
lods
or
arpl
movsb
outsl
ret
js
adc
add
push
cmpsb
test
mov
xor
sbb
pop
ljmp
ret
mov
add
adc
sub
jge
cmp
imul
push
dec
stos
mov
fbstp
push
mov
push
xlat
xor
cli
or
enter
dec
cmp
or
scas
and
push
hlt
imul
pop
imul
inc
cltd
add
leave
sub
sbb
insl
test
add
call
adc
mov
cltd
push
push
stos
adc
fistl
call
pop
mov
addr16
cmc
out
in
test
xchg
cmp
mov
push
fs
sbb
cmp
and
icebp
push
loopne
mov
mov
inc
rorb
xchg
test
adc
mov
imul
push
or
push
cmp
xor
ljmp
push
mov
mov
dec
std
push
cld
test
cltd
or
and
fldcw
cmp
jae
cli
cli
cwtl
cs
out
jg
addl
lcall
cmpsl
enter
jl
xchg
orb
sub
xchg
or
mov
sub
test
push
pop
insb
mov
sbb
movsb
adc
lds
and
inc
jecxz
mov
pop
iret
jle
inc
mov
xor
cmpl
xchg
lea
xorb
cmp
test
xchg
cmc
push
mov
pop
mov
jnp
and
dec
and
mov
pop
loopne
mov
in
or
mov
lea
lcall
sub
cmc
mov
push
lcall
dec
cmp
push
pop
inc
jno
cwtl
jnp
sub
mov
cmp
lcall
pushf
out
adc
pop
or
jmp
out
div
jle
int
loop
arpl
lret
or
xchg
fiadds
cmp
das
in
or
ret
aas
lret
hlt
roll
adc
leave
jb
orb
mov
call
nop
adc
lret
repz
std
fmull
hlt
lock
adc
cmc
rcll
js
and
push
adc
or
xchg
insl
sbbb
jge
xchg
xchg
popf
rcll
pop
cmp
xchg
daa
and
outsb
dec
mov
in
outsl
ljmp
adc
inc
cmp
out
xor
adc
imulb
sarb
dec
mov
dec
inc
cmp
cmpsb
imul
mov
js
rolb
inc
pushf
dec
add
adc
xchg
or
loope
and
out
hlt
test
jl
fadds
xchg
idivl
aad
push
ja
psllq
fildll
or
out
sub
lret
xor
dec
mov
xchg
push
insb
mov
sbb
imul
or
movsl
add
sbb
or
imul
fwait
pop
inc
cmp
cmp
out
adc
xchg
inc
imul
test
inc
mov
mov
pop
mov
xor
cwtl
cmp
jnp
shr
sub
stc
or
xor
jbe
push
push
or
mov
push
insb
or
loopne
ja
shrb
int3
adc
mov
sub
or
iret
mov
jmp
adc
outsl
cmp
aas
rcrb
adc
insb
faddp
test
inc
fistps
push
cmp
mov
lods
push
cmp
int
pop
xchg
sub
out
out
jecxz
and
ret
mov
dec
adc
push
push
pop
or
cmp
iret
xchg
xlat
pop
or
ss
dec
mov
dec
dec
cmp
aad
movsb
in
sti
loopne
mov
adc
push
test
stc
sub
arpl
xchg
movsl
icebp
push
push
push
loop
push
sbb
push
push
call
mov
test
out
cmp
repz
xchg
pop
aaa
dec
xchg
sahf
es
mov
loop
and
xchg
or
cmp
jae
sub
or
popf
xchg
shlb
hlt
jg
leave
movsb
push
repz
xchg
sub
or
fisubs
sub
aad
sarb
jl
push
jbe
mov
ss
dec
mov
push
std
movsl
subl
inc
mov
mov
loope
and
adc
jnp
mov
sbb
sbb
mov
jl
in
pop
xlat
rcll
iret
ror
stos
inc
and
mov
pop
movsl
xchg
push
add
pop
add
test
das
popf
mov
repz
xchg
and
adc
fs
insl
addb
pop
push
cmpsb
and
loopne
popf
shll
jmp
mov
mov
sbb
sbb
out
pop
cmp
push
xor
adc
lods
outsb
mov
call
movsb
jp
shlb
outsb
jns
sbb
sub
mov
xor
enter
les
outsb
adc
or
in
orl
es
call
test
cmpsb
mov
std
in
jb
cltd
cltd
outsl
stos
ljmp
or
enter
push
and
xor
or
inc
and
xchg
sbb
fstpl
inc
push
inc
sub
loopne
xor
jle
popf
xor
push
cltd
push
and
rcrl
repz
fildll
jp
bound
out
mov
cltd
xor
addl
jecxz
jp
lock
out
loopne
push
cmc
mov
mov
cmpsb
xchg
cltd
ss
mov
js
push
cwtl
xchg
mov
cmpsb
xchg
nop
aam
xchg
popa
mov
xor
pop
out
xchg
pop
stos
inc
ret
add
sub
xchg
int3
jnp
push
xchg
cli
fcmovnb
lds
arpl
decl
pop
add
stc
jb
insl
pop
mov
jg
imul
adc
mov
jl
xchg
lcall
add
sbb
mov
pop
jbe
push
sub
insl
test
inc
mov
mov
and
mov
sbb
sub
arpl
in
add
xacquire
test
into
mov
clc
scas
sti
roll
sub
cmp
jnp
xchg
mov
out
adc
xlat
mov
ficomps
test
sbb
jle
das
sbb
mov
xchg
ja
loope
jne
outsl
xchg
pop
test
call
ja
jbe
pop
lret
ja
sahf
bound
pop
inc
mov
pusha
aam
cmp
aaa
mov
jb
shrb
mov
sub
ret
mov
inc
and
into
ss
cmp
or
cmp
pop
pop
das
int3
dec
loopne
xchg
and
add
test
outsb
sbb
divl
pushf
mov
jne
pop
jo
dec
xchg
cs
popf
xor
shl
ljmp
xor
push
adcl
push
in
insb
push
jae
es
push
jp
dec
lcall
fs
je
xchg
and
xchg
push
cmp
mov
pop
xchg
pop
rorb
pop
dec
in
andb
loop
aaa
and
loop
ret
shrb
xor
sbb
jmp
test
test
dec
fcomps
stc
shl
fimull
cmpl
pop
cmpsl
test
fbstp
jnp
testl
das
lods
sub
testb
add
out
aaa
push
inc
les
aam
cwtl
cmp
push
mov
out
mov
mov
dec
sub
mov
sub
loopne
pop
mov
mov
add
xchg
loope
adc
sbb
in
cmp
imul
sbb
add
jp
faddp
push
fisubrl
push
mov
mov
fildll
cmp
lock
iret
ficomps
jecxz
inc
pop
and
jg
xchg
xchg
jns
adc
xchg
sub
inc
sub
out
mov
jb
inc
dec
jge
fistl
mov
lahf
dec
xchg
pop
cmp
mov
push
lds
xchg
in
add
cmp
fidivrl
xchg
dec
push
mov
sbb
shrb
push
in
cmp
add
jb
fistl
dec
call
es
push
mov
or
mov
inc
push
out
fistl
aaa
aad
je
mov
lock
fbld
mov
pop
test
test
and
dec
jno
sub
dec
or
jne
sub
push
xchg
hlt
rcrb
and
imul
push
cmp
sahf
ds
mov
mull
out
or
lock
fisttps
dec
jecxz
xchg
xchg
cmc
in
push
pushf
adc
jb
shrb
incl
pop
cmc
push
movsl
xchg
je
loopne
mov
lret
cmp
popa
lcall
out
repz
xchg
imul
pop
and
stos
outsl
fwait
outsb
cmpsb
hlt
or
xchg
lcall
mov
xchg
cmp
in
push
gs
xchg
pop
dec
addr16
fcomp
aam
pop
dec
xor
jp
fwait
dec
into
mov
arpl
movsl
xor
in
xchg
decl
movsl
adc
jo
inc
push
divl
shr
out
fbld
int
pop
sar
push
icebp
sbb
adc
sbb
sbb
into
out
ds
aaa
mov
outsl
mov
add
repnz
mov
mov
gs
pop
incb
and
ja
xchg
bound
mov
dec
imul
xchg
outsl
incl
das
ja
jo
dec
push
push
sbb
fildll
in
sub
mov
mov
fiadds
leave
inc
or
ja
pop
push
sub
daa
xor
loopne
lahf
sub
cmp
pop
xchg
mov
test
clc
xchg
movsb
push
mov
loope
push
sub
sub
imul
out
jg
lds
fiaddl
int
pop
jecxz
or
shll
stc
inc
mov
sarl
inc
push
inc
cmpsb
mov
jno
aam
fisubl
push
jp
jbe
jbe
pop
test
into
mov
dec
xor
lods
dec
out
jg
jbe
popf
or
or
jp
push
je
mov
push
rorb
push
mov
push
jg
jp
and
lcall
movb
je
rorb
out
lcall
sbb
sti
inc
mov
pop
roll
fadds
push
test
mov
imul
pop
inc
adc
mov
inc
pop
jl
push
iret
cltd
or
push
je
pushf
rcr
test
push
jnp
jne
cltd
and
cwtl
mov
and
cmp
addb
setno
call
or
or
fucomip
in
roll
and
shll
jo
roll
pop
and
stc
jb
mov
fistps
test
sbbb
loop
bound
jmp
sbb
stc
add
ljmp
movsl
dec
icebp
sub
xchg
xchg
pop
out
jmp
leave
in
xor
push
xlat
inc
xchg
das
aaa
movsb
xor
add
test
inc
inc
dec
imul
fadds
push
mov
in
mov
xchg
or
and
aaa
dec
stos
movsl
je
jno
mov
pop
jnp
add
stos
sub
dec
cltd
and
add
lahf
dec
jmp
push
cvtps2pd
and
jne
jnp
cmpsb
pop
data16
mov
adc
jle
dec
mov
sub
push
cltd
sarl
or
adc
ret
hlt
and
add
push
adc
dec
adc
sub
repnz
les
mov
rcrb
and
add
inc
bound
inc
sbb
js
cltd
cmp
sbb
popa
ret
add
dec
mov
push
mov
mov
pop
jno
aaa
cs
sahf
xor
sbb
lret
add
int
cmpsb
icebp
cmovs
out
jp
stc
outsb
rcrb
aas
out
popa
mov
cmp
ds
and
jge
test
stc
jecxz
mov
ret
xchg
and
or
inc
je
dec
xor
dec
jbe
dec
sahf
push
mulb
je
adcb
push
or
popf
add
in
inc
sub
xor
enter
loopne
xlat
int3
in
mov
mov
xchg
aas
lds
lahf
aad
push
lods
pop
insl
adcl
fcomps
aaa
fstl
xor
or
mov
pusha
setl
aad
data16
jne
xchg
scas
xor
cmp
xor
push
add
popf
or
sbb
and
adc
cmp
pop
jns
sub
iret
aas
iret
hlt
sahf
int
mov
push
lock
dec
cli
cwtl
movsl
push
shrb
dec
and
in
pop
pop
lods
dec
cmp
sub
xchg
sahf
icebp
add
cmpsl
push
fndisi(8087
lods
lds
xor
cmp
xlat
sub
sub
sti
inc
mov
je
jge
or
pushf
lea
leave
inc
stos
xchg
inc
fstps
mov
std
and
push
adc
mov
mov
cli
pop
dec
mov
sahf
popf
cmp
xchg
push
mov
rcl
shrw
xchg
xor
aad
cmp
test
inc
scas
xchg
and
xchg
cmp
dec
hlt
mov
fcomps
fdivp
movsb
jmp
int3
pop
xor
arpl
and
in
sbb
add
lds
push
scas
mov
sub
mov
aam
incb
dec
sahf
or
xor
mov
add
xchg
pop
inc
ficompl
xchg
and
mov
insb
push
jp
test
lds
std
adc
pop
cmp
adcl
or
sbb
push
push
daa
or
pop
shll
jnp
cs
movsl
push
add
lcall
cmp
fwait
enter
dec
sbb
sbb
shlb
sbb
lret
cld
outsb
fistpll
mov
jbe
dec
pushf
test
mov
mov
mov
scas
dec
pop
mov
pop
subl
pop
popf
movl
loope
mov
dec
sbb
mov
fsubs
mov
xor
ret
jle
dec
xor
add
stos
shll
int3
rcrb
and
pop
iret
sub
lods
or
xchg
xchg
dec
dec
jecxz
daa
sbb
mov
add
scas
out
ss
or
dec
shll
pop
in
mov
cmc
add
cltd
imul
aam
mov
or
inc
and
bound
rolb
add
push
insl
mov
gs
in
testl
subl
push
push
ds
sbb
mov
adc
ljmp
fldcw
sub
mov
cmp
pop
shr
repz
stos
clc
and
dec
es
jle
mov
insl
sbb
leave
flds
cwtl
fisubs
inc
dec
mov
es
and
or
mov
mov
cmp
fidivs
aas
movsl
fs
dec
hlt
in
rcrb
lods
push
shll
cmp
mov
sub
sbb
fisubs
mov
loopne
int
xor
mov
push
and
shr
movsb
repnz
insb
leave
xchg
inc
jge
pusha
fcoms
aad
mov
jge
mov
jne
inc
popf
outsb
stos
mov
dec
cltd
push
gs
or
jb
mov
xor
jb
jmp
fs
jp
jb
fldt
sub
imul
aaa
mov
clc
mov
xor
push
test
outsb
jae
jmp
sbb
outsl
mov
xor
mov
jbe
push
xchg
push
popa
push
dec
push
nop
or
lds
pop
daa
mulps
pop
imul
sbb
orb
xchg
mov
and
mov
jae
mov
arpl
mov
pop
mov
cmp
xor
sbb
imulb
das
mov
dec
cmp
into
and
jno
mov
sahf
pushf
aam
xchg
adc
les
ret
stc
dec
and
jge
jno
xchg
add
xchg
mov
cmc
in
mov
fs
add
and
xchg
inc
repz
cld
je
cmpsb
jge
int3
inc
lea
ficomps
lea
popf
xor
jno
mov
and
dec
fdivrl
stos
inc
into
sbb
or
push
xchg
fistl
and
xchg
popf
mov
sub
jp
pop
in
fbstp
jle
test
add
imul
pusha
xchg
fisubrl
test
div
outsb
sti
iret
fmull
daa
mov
sbb
fisttps
cld
mov
repz
pop
loopne
push
div
pop
shl
inc
mov
icebp
mov
das
dec
outsl
jno
add
jecxz
jl
stos
adc
std
int
and
sahf
shlb
imul
jge
xchg
jne
test
shrl
push
cmpsb
cmpsb
test
xchg
movsl
push
cmpsl
notb
lods
push
jo
xchg
mov
bound
fstpt
sub
jl
in
stos
out
pushf
sub
ja
xor
cs
cmp
out
call
test
pop
bound
adc
out
rolb
push
add
imul
fistpll
xchg
sub
aaa
dec
or
out
adc
int
cmp
inc
movsl
aam
shlb
jnp
mov
jmp
jnp
js
push
jb
jb
lcall
push
mov
dec
jg
xor
jmp
icebp
ret
mov
rclb
loop
rolb
sbbl
imul
jecxz
xchg
aad
mov
lahf
pop
aas
call
add
pop
inc
inc
or
add
push
cli
mov
jmp
mov
xor
ret
mov
test
sub
xlat
inc
outsb
xlat
jmp
sub
mov
test
xchg
dec
mov
int
xchg
mov
push
rcrl
push
orb
mov
pop
pop
sub
or
inc
int3
xor
sub
and
pop
repnz
fsts
inc
mov
fstl
nop
sub
or
xor
inc
dec
and
add
mov
movsl
dec
sub
xlat
call
push
lods
xchg
sbb
fsubrs
jne
cmp
loop
lods
sub
in
inc
inc
mov
ret
mov
push
dec
jle
xchg
cld
or
xchg
sub
mov
loop
je
inc
xlat
fsts
add
iret
es
xchg
mov
stos
and
nop
in
int3
lret
shl
fsub
mov
andl
insb
adc
sub
or
add
call
xor
popf
xor
dec
push
add
sub
incl
sub
pop
sub
or
cli
inc
or
dec
cmp
add
loope
fwait
fs
jle
subl
not
les
pop
jge
dec
test
lods
das
test
lahf
test
daa
add
int
pop
sbb
int
adcl
aaa
fs
sub
test
adc
divb
pop
xor
scas
sti
mov
adc
imul
add
es
sub
pop
mov
xchg
push
pop
js
pop
clc
inc
call
mov
gs
mov
inc
mov
xor
inc
pop
cmp
shlb
fadds
in
adc
adc
and
ljmp
lds
push
enter
jns
aaa
cwtl
push
mov
mov
fs
dec
out
cmp
loopne
rcrb
addr16
or
aad
fs
cli
in
cmpsb
cmp
xchg
cltd
shrb
jnp
mov
leave
cmc
cltd
pop
idivb
ja
pop
or
cmp
lret
jge
loope
adc
lret
xchg
in
push
jne
jge
mov
lahf
inc
sbb
cmp
mov
xchg
repz
xor
mov
inc
rcrb
mov
push
rorl
repz
jb
jb
xor
mov
lock
pop
call
repz
fldlg2
test
mov
sub
xchg
hlt
scas
or
in
das
jl
cmp
sbb
fldl
hlt
shr
or
mov
out
dec
mov
push
push
jne
ds
jle
fdivl
mov
jmp
jl
stos
xchg
ss
out
push
push
xor
lods
xchg
add
divl
jp
mov
mov
push
out
adc
test
jl
sbb
sbbb
stc
and
fwait
es
pop
inc
adc
leave
js
fsubp
mov
pop
adc
xor
mov
daa
xor
arpl
inc
cmpsb
call
sbb
in
rolb
push
xchg
faddl
data16
loope
sbb
insb
fldl
jp
jmp
mov
fisubrs
and
push
dec
dec
xor
xor
in
jno
rcrl
ds
dec
fcompl
fstps
pop
sbb
rep
pop
test
jecxz
xor
outsl
loopne
jno
cwtl
cli
sub
sbb
mov
mov
adc
mov
cmpsb
in
jo
or
in
push
inc
test
in
or
push
imul
loop
push
jmp
loop
add
xchg
push
mov
cltd
rcll
sbb
out
add
sbb
mov
fdivrs
sbb
or
jns
cs
std
push
mov
iret
push
in
lea
shll
movsb
pop
mov
or
divl
aaa
push
ss
cmpsb
sahf
jns
and
add
push
orl
dec
mov
add
lret
cli
hlt
push
test
les
and
push
pop
lret
std
xlat
mov
outsb
push
dec
lods
js,pt
and
daa
lock
mov
mov
nop
aad
xor
pop
or
int3
xchg
lahf
scas
jo
lods
add
pop
or
iret
test
xor
test
lods
or
mov
stc
mov
ljmp
push
push
mov
adc
sub
jmp
or
inc
push
ss
dec
add
xchg
movsl
push
dec
sbb
enter
mov
xchg
jae
mov
iret
mov
adc
add
clc
mov
fwait
leave
push
xor
lahf
pop
shrb
push
cmpsb
jno
pop
shrl
push
sti
loopne
leave
daa
sti
pop
lods
inc
ficomps
mov
iret
cmpsb
sub
ja
sub
sbb
inc
xchg
mov
adc
jae
xor
mov
add
fwait
pop
lds
and
hlt
enter
loope
add
dec
cld
sbb
adc
mov
and
dec
push
mov
mov
inc
mov
jne
add
adc
jecxz
in
pop
push
test
pop
mov
and
repnz
or
mov
mov
icebp
mov
push
ret
or
inc
insb
push
fwait
out
xor
mov
mov
mov
lods
adc
mov
scas
or
dec
sub
leave
decb
and
mov
ljmp
pushf
fcoms
aam
ss
dec
rcr
fisubrs
div
pop
sbb
jns
jmp
icebp
jns
out
repz
frstor
js
pop
push
or
push
popf
movsb
mov
push
push
add
aas
sbb
out
push
lds
loopne
jmp
cmpsl
push
mov
add
incl
lods
xchg
add
pop
sub
mov
and
xor
out
jl
inc
fisttps
shlb
mov
or
xchg
fstl
cmp
imul
sub
cmc
inc
das
sub
test
cltd
xor
int
or
pop
into
sbb
push
jns
in
mov
insl
ljmp
fmull
dec
call
js
jnp
leave
inc
mov
inc
cli
adc
stc
ds
cmpsl
mov
lahf
test
add
dec
inc
stos
jle
jno
mov
lods
add
cmc
add
xor
aas
inc
xchg
in
or
insl
pusha
jge
push
hlt
int
adc
lock
sub
adc
jge
ds
nop
add
push
sbb
outsl
or
sahf
jo
nop
mov
sub
jge
das
push
or
les
mov
enter
cmp
movsl
mov
adc
dec
pop
sbb
mov
dec
dec
cmpsb
or
mov
or
xor
ds
jg
xor
sub
addr16
and
pop
ret
out
aad
pop
pop
push
cld
popa
mov
mov
mov
mov
bound
dec
jge
fistpll
icebp
jge
push
xchg
xchg
mov
sbb
stc
mov
ret
ss
or
pushl
das
rcrl
sbb
std
inc
adc
test
lret
movsb
into
stos
or
data16
imul
jnp
in
push
sbb
in
mov
xchg
xor
mov
add
push
clc
add
mov
sub
ja
repnz
mov
push
xchg
jno
ret
pop
test
je
mov
lea
mov
push
lret
cmpsb
sub
repz
or
repnz
adc
les
mov
cmp
ljmp
flds
push
xor
lahf
aad
ja
xchg
pop
xchg
lds
insl
push
bound
les
inc
inc
mov
or
mov
call
ficoml
xlat
movsl
jne
cmp
xchg
iret
push
xchg
daa
mov
pop
push
push
scas
pusha
pushf
mov
sub
aam
inc
out
and
mov
mov
mov
xchg
mov
lret
call
and
mov
xchg
js
adc
cmp
cld
mov
dec
mov
inc
dec
mov
adc
cmp
std
mull
adc
jecxz
jo
jno
ret
fwait
mov
movsb
xchg
pop
popf
outsb
cmpb
jle
sbb
sar
inc
lods
movsb
out
mov
outsl
sub
adc
call
jecxz
and
scas
rcll
inc
inc
mov
add
sub
jo
mov
jle
pop
mov
and
sbbl
mov
repnz
mov
ficomps
and
cwtl
mov
xchg
dec
sub
je
dec
mov
incl
ret
xorb
fwait
jp
test
and
icebp
aas
arpl
mov
mov
outsb
jge
adc
in
lock
jmp
popa
xchg
pop
scas
mov
sti
pop
mov
stos
outsb
push
fcmovu
subb
mov
lret
cli
adc
addb
addr16
mov
mov
ret
jmp
cltd
sub
hlt
mov
sbb
das
jle
shrd
mov
arpl
hlt
sbb
xor
aam
pop
in
insl
stos
icebp
in
cmc
inc
testb
jne
sarb
in
mov
sub
nop
scas
dec
ja
xchg
xor
inc
loop
sarl
mov
arpl
negb
in
sbb
and
aam
int
xchg
pop
mov
pop
test
or
shlb
xor
fsubr
push
or
mov
test
push
mov
jns
fistps
fiaddl
imul
cld
inc
jge
push
mov
mov
or
or
divl
in
add
fdivrl
ds
sub
flds
mov
out
adc
push
lods
addl
ds
rorl
add
jmp
jns
push
fisttps
je
test
fwait
pop
stos
popf
jno
fs
pop
xchg
add
or
arpl
in
mov
es
loop
sahf
xor
xorb
mov
mov
or
imul
scas
adc
adc
daa
sbb
outsl
iret
push
ss
in
insl
dec
and
pop
movsl
addr16
and
mov
xchg
jp
cli
enter
dec
hlt
aas
scas
out
lahf
xchg
addr16
icebp
fistpll
add
add
jecxz
fsqrt
out
xor
fadds
sar
mov
mull
xchg
clc
sti
insb
jmp
jp
lods
or
mov
mov
data16
mov
test
aaa
push
push
loope
scas
push
test
inc
add
les
out
pop
lods
aad
xor
push
sti
mov
and
stc
imul
inc
mov
or
repz
inc
dec
jno,pn
and
insl
mov
push
mov
call
lahf
adc
cmp
sub
jge
or
les
rcrb
roll
sbb
add
out
out
rolb
adc
xor
push
jl
test
inc
mov
sub
or
pop
push
push
xor
push
imul
add
pop
fcmove
cmp
mov
sub
adc
daa
sbb
inc
lahf
in
mov
push
cmp
fsubl
stos
pop
sahf
and
xor
xlat
adc
popa
fs
xchg
mov
inc
fdivrs
mov
or
sbb
ret
add
push
add
inc
jbe
pushf
ja
jae
xchg
in
mov
push
push
fwait
repz
add
ret
inc
jmp
lds
cltd
add
hlt
mov
loop
pushf
fsubl
cmp
inc
in
cwtl
or
mov
repnz
sub
stc
sub
fs
pop
out
in
cmp
dec
mov
or
lock
fistl
sub
adc
cmp
mov
mov
push
imul
in
into
je
jle
and
mov
mov
or
icebp
imul
imul
jg
cmp
adc
and
sti
out
movl
jne
pop
jl
jnp
daa
mov
or
sub
and
lods
iret
rol
pop
dec
aaa
bound
jle
cld
push
popf
mov
add
shl
adc
pop
popf
sub
hlt
call
add
test
add
add
cmpb
push
cmpsb
pop
adc
xchg
cwtl
cmp
push
in
push
pop
scas
lret
or
mov
outsb
dec
inc
ja
rclb
orl
xor
sub
xchg
repnz
mov
pop
out
mov
into
mov
iret
jp
xchg
insb
mov
mov
jmp
mov
lcall
pushf
mov
lds
jge
mov
fidivl
mov
mov
orl
sbb
sub
dec
xchg
shl
test
and
push
push
popf
fidivs
inc
xor
mov
sbb
sarl
cmp
xchg
pop
das
sahf
fists
call
cwtl
sub
sub
push
mov
outsl
mov
ret
jns
loop
and
mov
add
inc
mov
sub
ror
jne
inc
push
dec
pushf
mov
inc
aad
pop
imul
rcrb
dec
cmc
pop
shr
jbe
mov
jns
mov
or
andb
ja
rcl
push
scas
pop
outsb
ret
ret
add
jbe
mov
pop
mov
xchg
mov
stos
popa
sub
push
sbb
sti
push
mov
jns
leave
sahf
lret
or
shrl
lret
ret
pusha
pop
in
aas
or
aas
xor
cmp
repz
fisubrl
mov
repnz
movsb
mov
or
arpl
push
push
pop
cmpsl
and
jl
mov
jns
cwtl
hlt
addr16
pop
outsb
or
int3
dec
cmpsb
or
push
dec
push
imul
xlat
imul
lret
adc
jns
cmc
lcall
icebp
test
in
out
movsl
negb
push
sti
inc
cmp
xchg
adc
mov
das
inc
cltd
lret
pop
sbb
ret
and
or
ss
dec
dec
or
loope
adc
mov
jmp
push
repnz
jg
add
dec
mov
dec
sar
inc
sbb
jg
in
in
shrb
mov
fsubr
pop
das
xchg
ficoml
cmp
sbb
test
jne
jecxz
pop
lods
repz
mov
mov
add
arpl
lea
cmp
push
loope
mov
xlat
int
lcall
mov
xor
mov
sbb
lock
ficomps
insb
sub
push
or
mov
pop
jmp
or
cli
pop
test
jno
in
dec
add
cmpsl
fsubrl
and
jmp
repz
shrb
aad
add
push
loope
inc
insl
jl
repz
xor
aas
xchg
fsubs
in
push
out
xlat
inc
add
cwtd
lock
stc
ja
test
pop
rclb
mov
ret
sub
and
fmull
ret
inc
sarb
mov
jae
pop
mov
pop
xorl
push
lahf
xor
iret
xor
pop
inc
xchg
gs
xor
lcall
mov
or
inc
orb
aad
push
dec
orl
jo
gs
sbb
jbe
bound
pop
js
stc
cld
sahf
in
fistps
and
mov
cmp
pusha
add
push
add
sub
cmp
mov
or
add
outsb
inc
dec
pcmpgtb
lret
pop
mov
rdpmc
das
or
and
mov
mov
inc
pop
stc
sbb
mov
jp
or
ss
jmp
sbbb
adc
dec
imul
mov
add
sti
dec
push
and
out
lea
sub
cmp
dec
ss
mov
add
and
mov
rcrb
sub
jbe
xor
mov
daa
into
and
mov
stos
scas
ret
mov
test
stos
add
loopne
add
pop
data16
pop
lcall
into
scas
shrb
push
in
pop
push
and
je
dec
dec
add
push
out
push
mov
cld
aad
xor
shlb
lock
pop
sbb
sbb
or
xchg
movsb
out
or
mov
std
out
loopne
push
pusha
outsb
dec
js
sbb
mov
mov
pop
cmp
pop
xchg
mov
mov
rep
jno
jne
lret
mov
pop
jnp
loope
ljmp
loope
xchg
pop
mov
sub
loop
cmp
mov
shrl
loop
lcall
sti
and
add
dec
add
jnp
je
loopne
push
inc
popa
cmp
lcall
ffreep
cld
mov
cli
add
and
adc
push
stc
arpl
in
sbb
dec
adc
jp
push
or
nop
dec
js
adc
push
xor
add
cwtl
std
call
or
dec
popa
sub
dec
sub
test
push
mov
and
cltd
lcall
or
cmpsb
int
outsb
pop
jmp
data16
stos
cltd
adc
push
sbb
aaa
mov
dec
and
xchg
ja
pop
or
inc
add
and
test
stos
mov
xchg
cwtl
leave
push
punpckhdq
mov
arpl
mov
adcb
mov
mov
test
xchg
sarl
inc
and
sbb
cwtl
inc
push
frstor
mov
inc
push
rcll
in
cli
adc
out
insb
mov
sti
jmp
jae
and
fisubs
jecxz
sbbb
popf
add
adc
fwait
sub
mov
dec
pop
mov
push
in
xchg
enter
mov
cmp
add
or
inc
ja
mov
pop
pop
xchg
cmp
lahf
sbb
icebp
test
in
aam
mov
bound
adc
jp
adc
out
int3
inc
or
push
arpl
jae
je
xchg
outsl
jbe
loopne
filds
lahf
iret
insl
das
scas
add
push
add
ds
adc
and
cmp
mov
cmpsb
push
dec
scas
aam
cmp
adc
and
mov
mov
cld
jnp
inc
sub
in
aad
push
sti
and
xchg
dec
adc
or
lock
cmp
add
fisubs
jbe
mov
outsb
popa
or
lcall
sbb
xchg
mov
cmp
xor
negl
aad
sbb
scas
sbb
dec
ljmp
mov
jge
ljmp
leave
lods
xor
push
cs
mov
popf
aam
inc
andl
lods
dec
cmp
gs
out
xchg
loopne
cmp
in
fsts
adc
dec
test
addr16
getsec
dec
ret
mov
push
mov
sub
jmp
pop
xor
call
dec
jae
pop
inc
ds
push
mov
es
xchg
test
push
pop
add
inc
loop
stc
test
movsb
lcall
push
push
lods
clc
and
sub
sub
jb
lahf
out
fldl
mov
sbb
adc
adc
sbb
and
pop
mov
jg
mov
addl
daa
mov
sub
dec
push
xchg
lods
cltd
push
cmpsl
into
stos
pop
enter
jl
xor
inc
mov
or
fbstp
test
adc
adc
loop
xchg
stc
ja
iret
xchg
mov
enter
ljmp
add
test
jbe
push
rorl
xor
jmp
lds
xabort
outsl
xor
movsb
pop
gs
ret
or
cmp
gs
sysret
and
cmc
data16
insl
shlb
add
inc
jne
xor
pusha
cmp
clc
in
pusha
rcll
or
rcl
inc
jp
xchg
mov
lahf
pusha
dec
in
push
mov
fmuls
lret
dec
mov
arpl
lret
hlt
add
jbe
jmp
in
xchg
sub
stos
out
adcb
push
ret
inc
inc
cmp
call
and
repnz
and
cld
jmp
test
loop
mov
dec
add
dec
mov
flds
addr16
ret
jns
cmp
xor
pop
mov
addr16
jb
xchg
push
cs
cmpsl
dec
rclb
pop
out
js
repz
aam
mov
iret
sbb
hlt
cs
imul
xchg
xor
inc
std
dec
and
pop
fidivl
adc
lcall
mov
inc
or
add
jo
pop
xor
loop
addr16
ficompl
sub
adc
mov
jne
or
in
aaa
lret
sub
sub
push
jl
and
gs
rcrb
cmc
inc
pop
sbb
dec
pushf
fldt
call
stos
repnz
fsubs
sbb
lcall
push
pop
jne
dec
sub
stos
lahf
pusha
or
loop
or
repnz
add
pop
clc
ja
loopne
mov
xor
out
aad
insl
icebp
adc
xchg
push
js
xchg
stc
pushf
xchg
rol
push
test
repnz
dec
repnz
mov
and
and
test
xchg
xchg
stos
test
inc
push
pop
jno
fisttpll
fwait
dec
xchg
cmp
mov
ficoml
orl
pop
xchg
mov
add
push
lret
mov
imul
ret
int3
add
clc
lahf
lret
pop
loopne
push
shll
sbb
rcr
xor
jp
inc
sbbb
jne
pop
cli
xchg
movsb
cmp
mov
xor
test
mov
out
and
pop
jmp
add
ds
neg
push
mov
sub
mov
pop
jbe
and
mov
in
cmpsl
inc
out
mov
gs
imul
aaa
xor
rcll
mov
xor
sbbl
mov
push
push
rorb
push
ss
daa
push
or
test
fcmovnb
scas
sub
mov
pop
add
out
in
aaa
aad
filds
enter
into
cmpsl
lods
loope
sbb
sbb
mov
push
fildll
cmpsl
into
xor
out
sbb
dec
lods
ljmp
cs
dec
sti
std
pop
inc
push
jl
cmp
mov
sti
fs
insb
or
or
inc
cmpsl
cs
repnz
hlt
js
sarl
add
cmpsb
stos
lock
imul
jle
fcompp
sbb
mov
cld
cwtl
pop
stos
sti
addr16
outsl
push
mov
lret
sub
mov
xchg
push
mov
add
adc
test
sub
mov
ss
xchg
dec
aas
inc
xchg
pop
mov
xchg
aas
dec
sbb
out
mov
push
inc
or
push
fsubs
ror
insl
sahf
cmp
xchg
in
cmp
inc
dec
pop
shr
movsl
xor
rclb
fcom
stos
dec
pop
adc
aaa
sbbl
cmp
cwtl
xchg
repz
and
lock
mov
ret
cmp
jno
out
and
in
inc
cs
lret
jmp
dec
lret
push
adc
add
mov
ds
aad
jge
dec
out
inc
je
or
jb
idivb
lahf
sti
int
icebp
cmpsb
dec
mov
lahf
xchg
lahf
mov
and
iret
outsl
add
xchg
pop
pop
iret
ret
jle
aad
jl
add
mov
ja
sub
mov
sub
cmp
call
sbb
mov
pop
sbb
xor
jae
push
insl
icebp
push
mov
popa
xchg
cmc
icebp
mov
movsl
icebp
pop
in
xor
mov
jnp
pop
xchg
inc
fidivrl
test
sub
sbb
sub
mov
loope
insl
lds
or
stc
mov
cmp
addr16
shrl
in
shll
mov
push
mov
pop
lods
sbb
jg
das
ja
imulb
inc
rorl
adc
add
dec
pop
test
je
pop
cmp
xchg
ljmp
lods
int
inc
fucom
add
cmpsb
out
stos
xor
adc
cmc
out
movsb
mov
js
dec
int3
stos
out
lahf
fstpl
sahf
inc
mov
aaa
sub
xor
stc
pop
shll
je
pop
fwait
or
xor
cmp
outsl
jp
jle
adc
andl
addr16
idivb
outsb
push
fists
insb
push
call
cmpsl
out
out
out
push
js
mov
xor
nop
add
push
pop
inc
ds
insb
pop
cmp
adc
insb
lret
popa
fildll
enter
add
pushf
test
jbe
jmp
in
dec
jg
out
mov
mov
movsl
test
jmp
scas
pop
lcall
add
add
xor
xchg
pop
adc
inc
cmp
out
cld
mov
sarb
movsl
add
and
test
iret
mov
mov
enter
and
mov
inc
shlb
pop
jp
shll
mov
xchg
xlat
adc
test
sub
out
pop
faddp
or
sbb
ret
pusha
inc
xor
outsb
mov
pop
bound
imul
mov
daa
loope
mov
xor
mov
xchg
dec
sbb
jns
fnstcw
and
lea
stos
inc
ret
cmc
xlat
loopne
pop
je
xchg
pop
test
fmuls
add
cmp
stc
jmp
jns
add
jne
ja
ljmp
fnop
fisttpll
mov
lret
sbb
flds
sbb
vpsubsw
dec
mov
test
push
sbb
cmp
arpl
out
test
xchg
or
sahf
stos
cs
sbb
push
push
sbb
dec
add
out
jl
stc
adc
inc
adc
adc
sbb
pop
mov
aas
pop
cmp
cmp
sub
pushf
cmp
hlt
pop
cmpl
xchg
push
shlb
incl
add
cltd
add
push
dec
xchg
adc
insb
add
jns
mov
adc
gs
mov
mov
ret
jnp
popa
sti
dec
stos
pop
loop
ret
popf
loop
repnz
dec
pop
xlat
scas
xchg
data16
or
mov
inc
enter
fldcw
outsl
xchg
sti
mov
and
cs
out
pop
cld
xchg
ds
clc
push
add
sbb
push
gs
jmp
add
arpl
data16
cmpsl
cmpsl
lods
jbe
adc
xchg
mov
movl
inc
xor
fildl
loop
fildll
sbb
jns
test
jbe
mov
cmc
not
inc
or
aaa
in
xlat
pop
pop
int3
sbb
int
js
pop
add
lahf
inc
xor
fidivl
loopne
sbb
pop
mov
adc
jno
ss
sbb
adc
push
lods
int
inc
adc
fucomp
jecxz
pop
cmp
sbb
cmp
enter
out
faddl
dec
cmpxchg
sbb
xchg
sbb
cmova
sti
dec
mov
data16
adc
xor
int
jno
imul
lods
shlb
nop
incb
mov
and
push
adc
rolb
or
in
or
pop
andl
js
sbb
adcl
outsb
jmp
jp
and
inc
arpl
rcll
add
repz
shrl
icebp
cltd
or
push
mov
bound
ss
lock
xchg
mov
sub
cli
xchg
or
mov
arpl
dec
clc
mov
sbb
addl
mov
mov
jmp
pop
fucom
fcmovbe
push
xchg
or
push
clc
pop
ss
xor
fisttpll
imul
mov
dec
inc
mov
pop
push
repz
lret
jne
add
push
xchg
fistl
cmpsl
cmp
push
mov
cmc
aam
and
jp
lds
cmpsl
sub
les
adc
in
mov
mov
shll
mov
adc
xor
xchg
dec
push
push
jnp
sbb
mov
sbb
leave
or
imul
sub
dec
cmp
ret
jp
outsl
add
pop
subl
fildll
dec
leave
insl
sti
repnz
or
push
out
adc
fucomi
push
shll
pop
loope
inc
ss
jne
cs
movsb
mov
jg
jae
push
pop
ret
inc
mov
insb
popa
xchg
adc
adc
dec
stc
sbb
es
bound
jne
lea
mov
in
mov
cli
or
pop
sub
xchg
mov
pop
fsubs
fwait
jge
aaa
adc
imul
mov
cltd
fcmovbe
pop
std
xchg
cwtl
mov
mov
add
dec
aad
xor
out
imul
insl
lea
loop
dec
stos
sbb
pop
dec
call
insl
sub
pushf
xor
mov
aam
fstpl
shll
shrb
ss
daa
scas
lods
xchg
imul
jl
sub
or
dec
and
insb
sti
repnz
and
push
pop
or
sarl
and
jno
ds
call
xchg
pop
adc
scas
ret
jp
sub
stc
lret
mov
movsb
mov
jne
roll
aad
out
test
mov
lret
jns
mov
pop
iret
push
pop
fstl
inc
or
je
icebp
lods
hlt
repnz
outsl
lcall
sub
popf
add
push
fidivl
push
xor
lea
pushf
xchg
data16
cmp
mov
jo
cs
bound
mov
xchg
mov
and
leave
xor
mov
loop
iret
mov
in
and
adc
mov
xchg
jb
movsl
lds
mov
inc
adc
push
push
jge
push
inc
popf
sub
pop
cli
add
aad
add
js
jp
inc
insb
aam
add
cwtl
movsb
xchg
mov
test
push
mov
push
call
mov
or
scas
mov
aam
sbb
pop
std
sahf
push
fists
test
sbb
data16
pop
fisttpl
pop
pop
cmp
add
shrb
pusha
stc
dec
adcl
mov
popa
xchg
fstp
in
testl
sub
push
pop
call
sbb
cmp
cli
and
out
jno
imul
mov
addr16
push
repnz
mov
and
xor
add
leave
movsl
jno
mov
icebp
je
lock
cmc
aas
mov
jle
and
popa
adc
aad
cmp
jl
pop
in
dec
repnz
or
leave
dec
or
pop
movsl
ficompl
xlat
mov
dec
pop
adc
repz
popa
clc
sbb
mov
inc
mov
xchg
inc
lahf
jne
xor
andb
int
dec
mov
mov
into
jbe
cmp
pop
sub
adc
push
and
repnz
adc
and
add
ficomps
dec
testb
cli
cmp
mov
adc
dec
mov
cs
icebp
lahf
pop
cltd
pop
pop
pop
test
leave
aam
and
push
add
sbb
and
lds
inc
mov
inc
aad
or
jb
sti
inc
xorl
mov
cltd
push
int3
sbb
jp
bound
or
int
dec
add
out
mov
jne
mov
sahf
pop
sbb
cmpsb
lea
dec
mov
mov
addr16
js
cs
shrl
dec
out
jae
mov
mov
cwtl
jns
adc
xor
mov
insb
mov
mov
hlt
pop
lods
mov
es
out
pushf
lods
mov
or
pop
and
mov
ret
jg
mov
or
push
jle
hlt
pop
rorl
xor
fisubs
es
repnz
cmp
pop
mov
das
pop
ret
into
jg
and
pop
xchg
cmp
and
push
xor
lock
jle
pop
push
inc
push
lret
sbb
jbe
shrb
jmp
lahf
lods
push
and
jp
lret
int3
mov
sbb
jo
adc
jg
cltd
rol
outsb
int
lret
add
lcall
adc
dec
sub
fimull
sbbb
fcmovnb
or
mov
cltd
sub
into
rol
sti
repnz
loope
testl
loop
rcll
add
sub
inc
pop
mov
mov
dec
pop
cwtl
test
sbb
fsub
push
mov
jne
scas
cld
mov
fbstp
out
push
into
or
and
subl
add
xorb
jns
js
inc
cwtl
xchg
enter
shl
clc
cmp
jns
popa
int
mov
and
push
jl
push
dec
stc
mov
icebp
and
pop
lret
es
fmull
pop
mov
lea
mov
lods
cld
cs
pop
nop
push
rclb
clc
dec
ja
inc
cmpsb
data16
sub
ret
jmp
in
test
mov
test
mov
jle
and
fidivl
and
jmp
or
mov
mov
repz
cmc
xchg
test
dec
mov
pop
aas
mov
jg
inc
sbb
add
add
int
pop
pop
push
rcl
int
daa
clc
pop
pop
mov
in
pop
into
push
outsl
imul
sbb
xchg
push
push
clc
mov
cmpl
add
movsb
add
mov
daa
dec
mov
pop
jle
xor
xchg
hlt
xchg
addr16
lock
xor
or
inc
imul
xchg
repnz
mov
inc
lds
sub
lods
and
jmp
outsb
dec
hlt
mov
call
xchg
jno
add
fs
inc
or
mov
lahf
xor
insb
push
stos
xor
inc
xchg
lock
shrb
and
mov
daa
in
sbbb
pop
jne
outsb
aaa
inc
out
jb
add
jns
push
mov
frstor
cwtl
sar
lcall
mov
xacquire
pop
xor
push
mov
bound
mulb
inc
mov
push
and
lods
imul
push
mov
fisubrl
push
cmp
cmpsl
push
dec
add
push
and
push
outsb
lret
pop
mov
movsl
inc
mov
adc
mov
addr16
and
fildll
push
pop
push
fisubl
push
mov
sub
jecxz
fnstsw
adc
push
pushl
cmp
frstor
stos
mov
jbe
fnsave
cmp
lds
out
rcrb
inc
arpl
mov
scas
negl
test
cmp
int3
dec
pop
or
add
out
mov
out
pop
pop
xchg
orl
jb
add
pop
decl
xchg
incb
stos
nop
jecxz
dec
js
inc
aam
shll
pop
or
mov
psubsw
mov
inc
insl
cli
cmpsl
adc
das
adc
fidivrl
hlt
sbb
xchg
loop
jecxz
jmp
jmp
mov
in
aam
out
push
xor
cmpsl
sbb
add
fnstsw
mov
push
mov
sub
je
jp
lods
sub
ret
addr16
cltd
mov
inc
lahf
dec
vmwrite
hlt
cli
idivl
jg
jge
rcrw
movsb
mov
xchg
xchg
bound
lcall
test
cld
mov
inc
nop
cld
mov
pusha
jl
xchg
sbb
rcl
and
ret
rol
mov
iret
pusha
gs
sbb
jle
mov
ja
sub
popl
inc
jecxz
hlt
icebp
cli
push
dec
jecxz
sti
jbe
roll
dec
lods
repnz
icebp
push
fnstsw
inc
mov
mov
ss
jns
jg
jge
inc
pushf
and
mov
push
std
push
xchg
data16
lods
lahf
push
push
dec
popa
lods
aad
jg
pop
push
pop
stos
mov
jnp
imul
mov
push
cmp
xchg
cmpsb
dec
pop
mov
ret
andl
pop
jge
cmp
push
push
lret
cwtl
mov
mov
pop
mov
lret
sbb
loope
xor
push
push
lahf
js
pop
aad
fdivrs
into
xor
cmp
mov
mov
cwtl
test
lock
or
cmpsb
add
icebp
cs
mov
inc
jl
inc
mov
xor
repz
add
sub
pop
repz
dec
shl
cmp
aaa
push
jp
out
outsb
jno
and
mov
loop
xchg
imul
fucom
bound
pop
loope
loopne
xchg
sbb
push
add
mov
xor
into
mov
iret
test
mov
jo
pop
xchg
dec
pop
xorb
push
ss
add
or
imul
jno
inc
sbb
and
pusha
std
dec
stos
mov
dec
dec
xor
fimull
xchg
cmp
dec
and
in
xor
test
and
pushf
fwait
add
in
stos
xlat
bound
iret
lea
arpl
movsl
ret
int
xchg
popa
aaa
and
inc
subb
outsl
mov
outsl
sbb
out
adc
cld
mov
cmpsl
mov
xor
mov
lcall
dec
inc
push
pop
sbb
out
rcrl
pop
add
mov
jns
inc
dec
push
jecxz
test
xchg
aaa
inc
and
test
cmp
std
aas
bound
push
inc
mov
sbb
sub
adc
ror
and
jnp
cmp
push
cs
lea
mov
cmc
dec
in
ja
sub
jmp
push
adc
test
shl
aaa
test
jnp
jmp
xchg
cltd
add
push
dec
imul
std
pusha
inc
pop
out
stos
mov
sub
add
adc
add
dec
flds
loope
xchg
les
or
cmc
inc
lock
aas
push
in
lea
orb
cmc
pop
dec
cmp
clc
xchg
fcomps
lahf
push
in
add
lret
sbb
sub
or
push
bswap
dec
es
xchg
fcomp
pop
fwait
scas
cmp
icebp
mov
mov
pop
push
sahf
movsb
inc
pop
mov
dec
add
addl
mov
sub
inc
adc
dec
push
sbb
aad
test
xlat
aam
cmpsl
js
rorl
insl
mov
adc
jnp
dec
imul
mov
adc
push
mov
fcomps
dec
inc
int
paddusb
inc
mov
js
arpl
push
jg
test
cmpsl
imul
repnz
stos
inc
push
stos
jmp
shrl
pop
fiaddl
inc
das
bound
adc
xchg
push
sub
dec
jnp
repz
cmp
lea
xor
bswap
adc
add
ficompl
mov
ret
es
cli
and
add
test
cltd
dec
insl
rorb
lret
imul
test
mov
in
dec
sub
mov
mov
cli
data16
bound
andl
sar
imul
insl
xchg
inc
jmp
and
cs
mov
mov
repz
jmp
cmp
jo
adc
cmp
subl
call
or
inc
jb
std
adc
add
aam
xchg
pusha
cmp
mov
or
push
orl
dec
pop
cli
out
jp
lock
jno
push
sbb
fwait
cli
imul
aam
dec
xor
sarb
sti
stos
lcall
mov
insl
jle
dec
and
rcl
nop
sbb
ret
mov
inc
pop
repz
pop
fwait
ret
cli
inc
push
sti
adc
data16
loopne
pop
mov
adc
sbb
xor
rorl
je
jne
insl
mov
lods
pop
sub
les
scas
ret
outsl
add
mov
dec
popl
or
adc
jmp
mulb
lods
inc
add
ljmp
mov
sub
out
inc
pusha
adc
mov
xchg
xchg
xor
mov
movsb
jp
jns
repnz
clc
les
cmpps
arpl
lods
cmp
or
int3
call
inc
xor
inc
test
inc
lods
adc
push
adc
fdivp
mov
cwtl
mov
push
xchg
lahf
cltd
jl
jmp
mov
and
pop
inc
out
imul
mov
hlt
sub
and
jo
add
pusha
adc
test
pop
outsb
xchg
inc
bound
add
data16
adc
cmpsl
sub
inc
mov
sbb
lods
repz
or
orl
add
mov
lret
mov
shr
mov
setbe
pop
pop
in
pop
adc
sub
pop
subb
pop
ficompl
rorl
stc
fldt
push
shl
sahf
inc
push
and
aad
mov
lods
mov
adc
sub
das
pop
sbb
sub
cli
sbb
xchg
adc
push
shlb
mov
outsb
mov
mov
fsubl
stc
jge
pusha
je
adcl
outsl
inc
jnp
scas
xchg
pushf
xlat
push
mov
fiadds
ret
mov
loop
jns
outsl
xchg
add
cmp
testb
xchg
cmp
enter
fistpll
xchg
fdivs
lret
and
lcall
sbb
out
mov
mov
popf
cmpl
cmc
sti
fcomps
repz
jbe
push
mov
mov
stos
jo
sti
lods
int3
enter
dec
mov
popf
push
popa
sbb
outsl
cmpsl
test
jbe
jl
jo
ret
push
push
cmc
add
hlt
std
push
and
loop
cltd
mov
push
pop
das
in
jmp
fisttpll
xchg
imul
call
shll
enter
das
lcall
cli
mov
xor
loopne
test
rcrl
mov
xor
icebp
and
jbe
es
inc
subl
fnstenv
mov
popa
push
sbb
rolb
jge
dec
ret
sub
push
jmp
imul
mov
xchg
in
mov
pushf
sahf
jecxz
shl
xorb
decb
add
addb
in
leave
xchg
add
push
ds
jge
fmulp
loopne
adc
and
push
lods
cltd
std
adc
pop
adc
jg
into
pop
sub
test
js
fs
and
mov
add
jno
fucomp
adc
stos
xchg
vpunpcklqdq
sbb
repnz
movsb
lahf
mov
mov
xchg
xchg
js
pop
or
movsl
repnz
sti
cmpsl
adc
fmuls
pop
test
lea
cs
add
xlat
inc
and
stc
fstpl
out
inc
and
pop
xor
inc
sbb
adc
or
cli
loopne
pand
sbb
jp
jo
iret
push
mov
dec
hlt
push
or
icebp
ja
inc
test
test
addr16
adc
inc
je
xchg
out
add
sbb
int
mov
mov
push
sub
andl
push
test
and
fsubs
cltd
push
add
jle
mov
in
jnp
sub
aam
lcall
xchg
ret
adc
inc
call
loope
xchg
dec
clc
xor
mulb
in
idivb
xchg
cs
filds
loop
adc
repnz
sub
xchg
xor
inc
mov
sub
gs
jmp
dec
xor
cs
push
aas
xchg
and
jmp
jle
jo
lret
push
aaa
lahf
inc
or
cs
and
push
jmp
sub
movsl
sub
dec
jae
mov
out
mov
push
fisubrl
xchg
push
or
pop
mov
lcall
cltd
ds
mov
dec
jmp
gs
stc
jns
inc
mov
push
mov
mov
inc
add
mov
pop
mov
push
cmp
jns
mov
cmp
mov
fcoml
loop
lds
scas
mov
and
inc
inc
aas
loope
addr16
fcmovnb
push
and
cmp
test
mov
dec
sbb
cmp
adc
daa
jae
push
into
jmp
pop
xor
jle
push
xor
cmc
lods
push
out
or
nop
push
lret
repz
lods
mov
stc
sbb
leave
enter
mov
das
dec
pushf
inc
xchg
notl
jg
outsb
rol
pushf
cmpsb
mov
in
push
repnz
iret
in
add
and
jmp
and
les
jge
lea
test
popl
lret
cltd
add
cs
dec
in
in
sbb
in
movsl
push
xchg
movsb
xchg
lahf
sbb
xorb
movsb
loope
outsl
arpl
outsl
sub
inc
or
and
mov
push
xchg
leave
xor
pop
and
mov
iret
in
sub
jg
mov
lret
jp
out
lret
rcrb
xchg
testb
in
xlat
ljmp
jb
xchg
and
sub
rol
bound
das
dec
lods
dec
addr16
mov
pop
ja
movsb
and
push
jl
or
pop
xchg
push
adc
push
inc
push
scas
je
pop
fstps
orb
add
xchg
frstor
cmpsl
movb
xchg
lods
xor
dec
popa
lret
xchg
sahf
adc
imul
incl
int3
cmp
movsb
or
xlat
push
ret
nop
scas
imul
and
scas
outsl
mov
xchg
mov
shlb
mov
push
insb
mov
pop
sub
ret
iret
sub
xchg
scas
xor
mov
pop
mov
inc
and
sbb
dec
cmc
xchg
fprem1
mov
out
mov
leave
cwtl
in
jmp
push
repnz
cli
pop
dec
inc
popa
push
jnp
cmp
pop
xchg
icebp
lods
push
add
insl
pusha
push
mov
dec
test
mov
rcrb
movsl
divb
es
mov
es
sbb
in
adc
push
loop
or
jecxz
gs
shrl
mov
inc
aaa
push
call
dec
jmp
in
adc
inc
cltd
or
dec
mulb
dec
stos
testl
xor
xchg
scas
adc
daa
xor
push
or
in
mov
dec
shll
jge
outsl
dec
scas
dec
jmp
ja
insb
push
xchg
pop
sub
dec
mov
call
jne
jae
jnp
popf
pop
lret
adc
mov
push
add
fisubrl
out
test
push
push
sbb
xchg
pop
insb
xor
jge
ljmp
jp
mov
push
insb
cmp
push
std
inc
inc
adc
lcall
fidivrs
add
inc
or
xchg
jnp
adc
push
sbb
fildll
lret
mull
addr16
test
sahf
cltd
adc
cwtl
dec
sbb
mov
aas
dec
xor
mov
cmpsl
pop
or
push
mov
shll
push
js
insl
dec
popf
adc
addb
mov
xor
leave
mov
mov
data16
cmp
mov
lcall
cltd
sbb
pusha
ss
cltd
cmp
pop
scas
jb
scas
and
sbb
jae
xchg
addr16
out
mov
adc
cli
mov
xchg
imul
arpl
dec
loop
dec
out
cmpsb
in
dec
imul
into
loope
out
shll
dec
iret
mov
dec
inc
aam
cltd
call
sub
movl
test
jb
fsubs
subb
xchg
pop
loop
sub
or
sub
xchg
ret
or
movsb
mov
aam
movsb
imulb
xor
nop
adc
sbb
jecxz
xchg
and
mov
inc
pop
inc
jle
mov
daa
jbe
imul
pop
std
stos
pop
pop
cmp
cltd
cmp
cmp
ss
xchg
arpl
pop
lahf
cli
jmp
bound
ja
or
fisubrs
and
add
mov
jno
js
push
mov
rorl
pcmpgtw
xchg
or
xchg
daa
add
and
test
add
je
mov
pushf
push
push
mov
jno
stc
adc
pop
xchg
je
pop
lcall
push
daa
stos
std
push
push
xor
mov
mov
pop
fs
and
inc
adc
jbe
or
pop
and
jecxz
repz
push
andb
xor
imul
cli
sbb
sarb
add
mov
mov
loopne
test
insb
jne
rcrl
icebp
negl
lods
jg
sbb
xchg
repnz
popa
shlb
pop
adc
popf
mov
leave
jo
data16
jecxz
sbb
push
mov
mov
cmp
xor
int
jno
inc
cli
outsb
stc
dec
cmp
aas
push
adc
adc
int
int3
push
call
popa
cmp
inc
pop
data16
xor
movl
das
iret
mov
push
movl
mov
pusha
or
sarl
iret
jmp
aad
jle
cs
in
dec
push
pop
cmpsb
sub
xchg
sbb
stos
push
mov
in
xor
and
mov
aaa
fidivs
inc
xchg
jbe
insl
jb
sub
pop
ret
shlb
in
pop
mov
fwait
inc
stos
aaa
mov
jg
mov
lret
push
mov
sti
lahf
in
and
or
xchg
out
sub
rorl
popf
xor
inc
push
or
mov
imull
bound
adc
stos
fdivs
shrb
inc
mov
sar
mov
jmp
add
out
out
cmp
and
lcall
cli
or
inc
clc
icebp
out
and
sub
mov
cld
xchg
out
mov
and
mov
or
mov
push
inc
mov
ss
test
xchg
pop
data16
cmp
push
sub
repz
push
adc
sahf
push
imul
pop
cmc
cmp
lea
js
cs
out
push
loope
punpckhwd
mov
jnp
jecxz
or
imul
inc
and
shrl
xlat
mov
xor
mov
fcoml
movsl
out
ds
inc
lret
imul
jns
flds
push
xor
loop
inc
fwait
and
adc
adc
imul
rolb
push
lcall
mov
jne
cwtl
leave
xorb
int
inc
sub
pop
bndstx
mov
mov
orb
movsl
call
push
jg
jne
jge
jl
ret
inc
mov
push
bound
outsl
js
daa
jo
xchg
je
insb
sub
inc
imul
icebp
std
mull
dec
pusha
cli
int3
cmp
dec
mov
cli
std
mov
sbb
int
cmpsl
add
mov
iret
and
not
test
imul
fisttpll
pushl
loope
outsb
int3
rorb
sub
jne
xor
rclb
mov
out
add
fs
outsl
lods
mov
imul
and
pop
idivl
loope
sub
lea
addr16
or
into
cmc
sbb
add
dec
mov
xchg
lar
xor
mov
sti
xchg
dec
pop
movsl
fdivrl
inc
aam
mov
mov
in
outsl
add
add
add
stos
or
adc
inc
outsb
push
mov
in
add
shr
or
mov
xchg
inc
and
repz
subl
sub
int3
ss
fwait
cwtl
imul
lds
sbb
cmp
test
cld
movsl
dec
je
pop
shlb
jo
ja
call
cli
sbb
jecxz
push
stos
xor
imul
mov
cmp
and
xchg
jbe
call
sbb
add
pop
push
outsb
push
mov
ficoml
iret
mov
in
ds
dec
pop
mov
stos
nop
fldcw
add
mov
movsl
and
bound
mov
int
or
jl
sahf
add
dec
std
dec
jns
ret
push
hlt
jno
test
mov
push
pop
lret
insl
or
inc
orl
call
inc
mov
je
dec
repnz
orl
jp
mov
add
jnp
xor
insl
inc
mov
jge
inc
mov
dec
ljmp
loop
lahf
adc
pop
pop
cmc
pop
jne
fdivrp
inc
mov
xor
lret
mov
outsb
cmp
mov
push
sbb
fcmovne
popf
sub
andb
loope
xor
ficoms
mov
ret
nop
adc
ror
add
bound
in
ds
mov
loop
ja
lods
popf
mov
leave
in
pop
fdivl
mov
adc
icebp
addr16
psrlw
xchg
jge
and
rorb
sub
lods
gs
adc
xchg
jb
add
dec
adc
or
and
std
push
xor
mov
jle
das
push
inc
add
and
hlt
mov
jg
push
jmp
incl
jmp
sbb
stc
adc
xor
orl
hlt
pop
and
rolb
stos
idivl
xor
stos
mov
iret
push
and
and
aaa
xchg
lcall
jp
testb
sub
lods
cmpsl
mov
daa
sub
stos
inc
dec
cmpsb
lock
pop
jne
lods
dec
ret
aam
xchg
sti
mov
pusha
cwtl
gs
sub
xchg
jbe
adc
dec
lds
ljmp
hlt
int
mulb
and
push
and
mov
in
insb
pushf
aaa
or
or
jge
jmp
js
repnz
inc
inc
movsl
push
daa
aad
movsl
pop
xchg
inc
in
push
jnp
js
out
push
rcll
lods
std
nop
out
popf
sub
mov
xchg
adc
lds
gs
mov
in
data16
sbb
cmp
sbb
scas
call
xor
imul
sbb
insb
into
ss
pop
and
inc
push
pop
mov
and
xor
jmp
adcl
pop
shr
call
fnstcw
pushf
pusha
pushl
loope
mov
sbb
xor
cmpsl
mov
sub
jp
repz
movsb
add
adc
bound
sub
jb
cmp
xor
shll
leave
dec
outsb
nop
xchg
jmp
cmpsl
stos
lock
jns
mov
xchg
incl
xchg
or
fidivrs
pushf
fs
movsb
js
lods
pop
lods
das
insl
js
or
pusha
mov
jns
les
jl
cwtl
stos
sbbb
aaa
rcrb
push
fmull
cmp
out
pop
xchg
daa
inc
push
mov
aaa
repnz
pop
or
fsub
les
loope
jge
mov
pop
sub
ja
pop
outsl
push
or
neg
xor
pop
rcr
sub
push
fldl
pop
ret
xor
add
inc
adc
and
jp
push
iret
lds
fadds
sbb
and
cmpsl
jbe
addb
push
xchg
sub
ja
repz
ret
addr16
shl
jle
das
imulb
mov
mov
insl
rclb
das
mov
repnz
adc
iret
mov
pop
add
je
js
pop
sub
xor
cmp
cs
sub
fwait
or
aas
xchg
pop
push
add
nop
outsb
sub
sub
lcall
fdivl
mov
arpl
xchg
aas
test
xchg
out
add
push
les
and
xchg
in
in
daa
lahf
jns
adc
movsl
xchg
mov
push
lret
test
add
in
mov
in
xor
pop
xlat
jl
jb
xchg
mov
in
stc
cld
mov
rcrb
push
sub
fwait
rcrb
add
or
orl
dec
and
shll
cltd
pop
clc
push
aad
inc
jns
and
int3
js
insb
sub
out
cmpsb
leave
loopne
sarb
int3
xchg
daa
jg
andb
fwait
mov
jp
and
mov
and
adc
mov
mov
pop
jecxz
xchg
cmp
lret
xor
js
out
inc
test
pop
iret
pop
or
xchg
outsl
das
cs
ljmp
push
das
pop
add
push
clc
call
jo
shl
mov
stos
pop
leave
fcompl
mov
push
pop
mov
mov
and
outsb
pusha
out
inc
add
scas
rolb
or
fcomi
sub
push
out
in
jmp
rcrb
mov
push
ret
mov
xchg
movsl
jb
clc
pop
push
and
jge
jl
enter
push
mov
aas
icebp
push
pop
xchg
test
and
xchg
xor
outsl
push
stos
mov
lock
cmp
push
jmp
pop
lcall
call
sbb
ds
out
dec
add
enter
call
mov
jbe
jmp
insl
xchg
inc
pop
adc
int3
sub
daa
movl
push
enter
jnp
cmpsb
push
std
repnz
iret
push
gs
ss
minps
ror
mov
out
subl
xor
out
sbb
lahf
inc
pop
gs
inc
cmpb
and
mov
jg
jmp
lods
jg
dec
loop
add
or
mov
mov
or
imul
jmp
jge
test
mov
mov
dec
and
std
sub
pop
mov
jecxz
test
ja
inc
subl
loop
mov
inc
inc
mov
movsl
jp
loop
scas
adc
xchg
mov
addl
adc
push
lock
jno
sbb
mov
jnp
and
add
lock
xchg
insb
enter
push
or
or
pop
setge
add
add
or
fisubl
xchg
pusha
ljmp
pop
dec
pop
jmp
sbb
jne
cltd
jb
xchg
xchg
sub
leave
outsb
lret
sub
shl
mov
adc
adc
pop
lcall
cmp
rorl
dec
jg
xchg
bound
test
sahf
and
in
xchg
inc
repz
jnp
dec
inc
inc
dec
or
arpl
out
mov
mov
call
leave
mov
add
loope
movsb
inc
mov
aaa
fiaddl
cmp
fbstp
clc
lahf
mov
lea
inc
jl
fistl
jno
aam
or
mov
xchg
push
outsb
aad
cld
iret
out
roll
jae
xor
adc
outsl
sar
inc
sub
mov
mov
pop
inc
sahf
add
pop
fnclex
addl
inc
inc
or
mov
inc
or
leave
lcall
sbb
dec
repnz
dec
push
xchg
int3
repnz
cmp
cmp
push
stc
push
jge
and
dec
js
filds
fcomi
andl
popa
daa
loopne
pop
cmp
add
mov
movmskps
mov
idivb
dec
in
es
adc
mov
fcoms
jae
cmpsb
rcr
cmp
sub
and
xchg
sbb
movsl
scas
xorl
jnp
mov
add
inc
xchg
cltd
pop
aam
push
pop
xchg
dec
scas
aas
imul
xchg
iret
mov
mov
into
pop
pop
js
cltd
cmpsl
jnp
mov
movsl
dec
adc
and
sbb
push
push
or
xor
lods
xorb
sbb
addl
push
mov
or
sub
rolb
push
orl
mov
lret
fdivs
fcoms
clc
cltd
into
sub
mov
jns
out
xchg
fbstp
jb
inc
pop
or
sti
pop
jb
orb
or
cmc
iret
daa
scas
inc
add
arpl
fistps
js
push
add
pop
rcrl
pop
xchg
jns
lds
jae
mov
push
cmc
mov
xchg
mov
sub
pop
mov
jb
js
aas
sbb
add
sbb
sbb
inc
push
xor
xor
pop
rcrb
je
add
loop
test
xchg
mov
xchg
scas
sahf
fbld
pop
push
or
mov
sub
ret
push
push
xor
sahf
mov
sbb
cmp
jno
rcll
cwtl
lahf
je
out
push
pop
in
cmpsl
inc
cltd
sti
mov
pop
movsb
hlt
mov
inc
rcll
jmp
push
and
fimuls
dec
insl
xor
add
xchg
mov
les
mov
divb
in
pop
ret
pop
je
cmp
lcall
ljmp
jae
aam
cmp
cmpsl
ljmp
push
loope
mov
mov
xor
cmp
js
out
push
dec
fs
or
mov
mov
inc
daa
or
mov
cmp
data16
lret
cmpsl
cmp
inc
lea
mov
pusha
mov
icebp
jle
push
lea
movsl
fwait
into
mov
imulb
push
xchg
jns
faddp
mov
pop
adc
lahf
stos
cs
sub
cld
sub
jno
inc
out
inc
cli
rorl
jmp
push
aas
add
inc
cmp
ja
fwait
lcall
adc
dec
push
mov
add
cmp
ljmp
movb
arpl
stos
inc
mov
mov
xlat
jmp
jo
ds
add
popf
roll
fisttps
mov
inc
fstpl
fiadds
fadd
in
sub
imull
cmpsl
negl
lods
aam
pop
ret
push
pop
aas
dec
or
cltd
jecxz
mov
in
fsubrl
sbb
adc
imul
stos
gs
xchg
sub
push
xor
das
xor
int3
pop
pop
dec
inc
push
add
push
inc
lcall
pop
repz
mov
mov
loope
pop
sub
cltd
std
ja
pop
push
les
add
dec
mov
dec
lret
mov
mov
jg
or
push
mov
mov
repz
in
xor
inc
addr16
dec
std
mov
inc
fidivrl
out
clc
out
fistl
dec
inc
xlat
and
mov
sti
push
sub
jg
add
dec
adc
dec
or
mov
xchg
xlat
xor
fnstsw
sbbl
nop
ja
xor
loop
jl
and
movsb
fmull
fistl
pop
popa
out
and
leave
mov
pop
jg
popf
push
mov
push
jo
xor
fnstsw
jmp
sbb
enter
add
fld
lds
cmc
int3
shr
data16
lret
and
jo
ljmp
lahf
mov
arpl
cmc
jecxz
mov
pushl
jle
dec
in
jns
dec
xchg
dec
icebp
es
into
movsl
rcrl
sbb
push
loope
push
out
in
xchg
pop
dec
fistpll
iret
xchg
sub
addr16
shrb
imul
and
jo
and
popa
mov
adc
jns
dec
movsb
mov
rol
fdivrs
mov
pushf
movsb
stos
sar
sub
pop
lods
add
mov
pop
cwtl
dec
jo
mov
sub
mov
out
outsl
std
dec
iret
ds
popa
xchg
cmpsw
and
andb
mov
pop
ret
add
xchg
mov
out
xchg
dec
and
add
jae
movsb
xchg
lret
into
out
nop
in
push
push
fwait
out
dec
les
dec
add
and
adc
sbb
incl
lock
inc
andnps
mov
pop
pop
push
mov
or
ror
cwtl
mov
jne
ss
push
popf
sbb
loopne
pop
inc
xchg
lcall
push
xor
sub
in
cmc
fs
mov
cmp
jle
cwtl
xchg
je
inc
or
pushf
add
pop
ja
dec
mov
push
loop
repz
xchg
loope
dec
sub
and
rolb
push
sub
xor
iret
into
sbb
shrl
inc
inc
pop
sahf
scas
call
lahf
adc
mov
pop
outsl
jo
or
popf
out
inc
cmp
pop
leave
popa
js
fsubp
pop
fcompl
mov
and
lock
repnz
jle
or
cld
pop
mov
aad
or
add
jns
inc
jo
in
mov
pusha
sbb
dec
mov
pop
pop
in
jecxz
sub
lret
mov
movl
and
mov
gs
adc
fwait
dec
subb
mov
stc
repz
xchg
das
imul
xchg
in
inc
fistl
and
repz
mov
dec
jmp
popf
inc
dec
sub
dec
addr16
cli
adc
or
adcb
or
mov
sub
sub
std
pop
xor
jecxz
jnp
inc
mov
aas
repnz
ret
insb
mov
int
pop
jp
xchg
ficoms
nop
add
mov
inc
jbe
push
jmp
fcoml
mov
ret
adc
and
test
pop
and
mov
adc
stos
in
xchg
push
mov
jmp
mov
clts
sub
out
cmp
cli
test
pop
dec
lods
testb
clc
repz
dec
cmpsl
lahf
add
dec
shll
fstl
push
fs
aas
mov
repnz
ljmp
lea
pop
pushf
inc
lds
repz
ljmp
fwait
loope
xchg
ret
sub
int3
inc
xor
xchg
ja
ror
call
jmp
ljmp
sub
jnp
pop
mov
fsubrs
jg
insl
sbb
sbb
bound
cmp
or
inc
jp
push
andb
sbb
mov
movsl
pop
cmp
sbb
add
cmc
lret
sbbl
aam
fldenv
dec
mov
jae
mov
cmp
jo
mov
fnsave
ret
enter
xchg
jns
fwait
inc
mov
xor
xlat
mov
inc
dec
pop
mov
leave
je
ret
jns,pn
adc
call
jns
filds
xor
pop
mov
xchg
nop
ja
mov
push
inc
sub
or
cmp
cli
xchg
pop
lock
and
mov
out
nop
push
inc
lods
andb
sub
push
das
dec
xor
notb
cmp
xor
jae
mov
sub
je
adc
fdivs
int3
in
das
dec
jecxz
adc
lods
in
jb
andb
jl
jp
mov
cmpsl
ss
xlat
push
cld
repz
add
mov
mov
cmp
adcb
jb
jmp
cmp
enter
insb
fistps
sarl
mov
xchg
inc
xchg
mov
loop
mov
push
xor
subl
pop
jg
mov
pop
andb
cwtl
insb
jmp
mov
cli
loopne
and
mov
mov
cli
icebp
imul
pop
in
push
mov
push
push
loopne
push
sti
ljmp
dec
jnp
jecxz
ror
nop
pop
sub
pushf
addr16
movsb
mov
lods
lds
fiaddl
mov
sub
pushf
jecxz
or
mov
pop
out
mov
shlb
xchg
xlat
or
outsl
mov
testl
inc
mov
pop
push
sbb
cmpsl
jne
bound
test
adc
lcall
dec
aam
xchg
dec
es
fdivl
aaa
loopne
xlat
adc
jp
sahf
aaa
push
insl
sbb
and
pop
jle
mov
bound
arpl
inc
cmp
mov
mov
lcall
dec
push
xor
repnz
loopne
js
add
mov
scas
repnz
test
and
sub
mov
jns
xchg
lea
fsubr
aad
das
pop
bound
test
cmp
hlt
enter
and
mov
inc
sub
lea
sbb
dec
nop
jle
aaa
rolb
je
dec
or
popf
mov
jne
mov
or
cs
in
sbb
mov
movsb
mov
adc
mov
lods
inc
leave
popa
push
mov
lret
scas
xchg
ljmp
mov
xchg
inc
add
rep
pushf
test
dec
addr16
jl
mov
aaa
loope
imul
jle
aad
and
sbb
inc
inc
xchg
jns
mov
pop
xchg
adc
fcoms
in
mov
mov
dec
pop
or
jb
ds
std
stc
mov
leave
rclb
jmp
cmp
lock
cmp
or
sub
insb
fwait
loop
repz
mov
movsl
mov
xchg
add
and
dec
cltd
and
jle
inc
add
imul
jae
pop
cmpsb
sbb
fldenv
pop
jmp
push
rorb
std
mov
aam
xchg
repz
out
lret
lds
lret
movsb
xchg
lret
jg
xchg
mov
xlat
inc
ljmp
and
test
arpl
sbb
mov
fs
dec
scas
std
aam
std
int3
rcl
insb
js
jne
push
movsl
xchg
push
push
mov
stos
cmp
pop
outsb
cmp
adc
in
push
xchg
xchg
adc
andl
call
mov
in
xor
inc
shlb
stos
mov
dec
enter
mov
sbb
jecxz
or
push
fidivrs
fs
lcall
xor
xchg
xchg
fcoms
xchg
add
adc
repnz
xchg
int3
push
jbe
lcall
jecxz
mov
out
pop
int
outsl
sub
xor
call
and
divb
cmp
push
push
es
mov
or
mov
or
sarb
push
jns
std
cmc
mov
push
fmull
loop
mov
mov
mov
aaa
fidivrs
jge
xchg
add
out
dec
and
xor
fcmovnu
cmp
stos
mov
das
dec
fsts
xor
cmp
addb
cs
imul
test
jg
subb
jmp
pop
xchg
test
jle
into
daa
adc
into
mov
lods
jns
stc
mov
push
je
jnp
mov
push
mov
mov
aaa
sbb
movsl
cmpsb
mov
in
incl
fsts
shl
push
sahf
cmp
cmp
dec
dec
xorl
daa
outsb
push
add
sarb
jg
mov
xor
loopne
out
dec
ds
push
xor
sub
inc
pop
mov
push
pop
push
out
xchg
scas
out
stos
mov
std
xor
cmp
dec
ret
jmp
add
movsl
sub
dec
xchg
out
imul
push
xor
cmpsb
sti
ja
bound
pop
fdivr
push
dec
dec
test
aam
inc
lds
je
in
scas
mov
ret
aad
rcrb
pop
adc
or
pusha
iret
xchg
xchg
cmpsb
and
mov
cmp
mov
push
mov
imul
js
push
imul
movsl
xor
mov
sarb
mov
shrb
mov
in
aad
add
cmp
sub
push
pop
pop
aas
iret
out
int
add
adc
test
loopne
dec
arpl
repnz
sub
xor
sub
lea
xlat
add
int
adc
sti
inc
scas
fdivs
mov
nop
rolb
lret
lret
pop
jo
gs
aam
push
xchg
popa
mov
xchg
xchg
inc
jo
out
cld
jge
sbb
in
pop
or
pop
notl
icebp
imul
lods
data16
adc
hlt
xor
push
xchg
jno
adc
pop
shr
in
push
sub
add
das
push
sub
or
fisttpll
fiaddl
mov
xor
fadd
roll
aas
inc
adc
fwait
shl
mov
iret
sub
insb
xchg
and
push
rorl
imull
js
push
xor
sbb
or
jecxz
jmp
movsb
in
mov
les
adc
cmpsb
xor
cld
imul
movsb
mov
out
mov
ficoml
lahf
adc
or
mov
inc
clc
sub
popf
shl
cmp
mov
inc
lret
stos
and
cltd
or
adc
pop
push
outsb
std
lods
bound
mov
mov
xchg
loopne
movsl
mov
sahf
cmp
lods
ret
xchg
xor
pop
loopne
jne
push
xor
enter
push
push
popl
fbstp
cmp
outsl
push
jmp
cmpb
pop
inc
adc
add
jb
add
addb
sbb
and
cmp
cmpsl
cmpb
jmp
push
push
inc
cmp
fmulp
xchg
jnp
pop
stos
call
and
or
leave
mov
sti
jns
jmp
push
aaa
rcll
lcall
imul
jg
mov
pop
mov
cwtl
fs
shrb
rcrb
ja
pop
cs
jno
std
aaa
inc
mov
cwtl
das
jae
dec
outsl
fsts
out
mov
xchg
aad
jecxz
inc
outsb
pop
nop
jo
push
cwtl
cs
adc
add
mov
sub
ud1
repz
in
mov
out
dec
mul
mov
mov
rcr
rcrl
and
mov
sub
add
mov
insl
pop
and
cmp
std
push
and
push
jmp
fisttpll
js
inc
inc
not
mov
outsl
cli
xchg
dec
test
jg
stos
sub
outsl
filds
loopne
push
ret
rorb
jl
dec
pushf
xchg
in
gs
call
iret
mov
je
push
mov
mov
iret
dec
faddp
pop
lcall
sbb
or
fisttpll
or
fisttpl
aaa
mov
add
mov
mov
insb
and
flds
dec
xor
sub
push
lods
push
aam
sub
sub
into
scas
cmpsl
lea
das
mov
dec
loope
lcall
sub
push
push
enter
movsl
push
popf
das
xchg
int
sbb
mov
push
mov
dec
cwtl
mov
push
xchg
std
stos
adc
pusha
enter
aad
scas
sub
jb
lret
mov
mov
and
push
addl
xor
movsb
es
lret
scas
in
popf
push
stos
push
push
aas
repnz
mov
mov
test
lret
pop
add
mov
sbb
dec
int
inc
jne
mov
movsl
in
inc
add
lea
adc
movsl
xchg
xor
mov
ret
pop
inc
jno
pop
scas
cmp
negb
xor
fidivl
fldt
add
adc
add
enter
ja
inc
sarb
dec
push
push
mov
pop
mov
nop
dec
push
adc
xor
in
testb
test
loop
xchg
test
and
rolb
faddl
pushf
cmp
add
dec
dec
cmp
cmc
mulb
cltd
and
out
jmp
aam
leave
test
cltd
push
adcl
push
and
mov
cmp
inc
mov
push
dec
push
dec
popa
and
mov
mov
sbb
repz
add
mov
fcoms
inc
in
mov
pop
add
xchg
fld1
sub
lret
rol
lock
clc
jns
btr
pop
sub
jne,pn
mov
or
pusha
push
push
jle
gs
jae
push
push
aad
push
xor
sahf
in
lahf
cmpsb
inc
fsts
add
decl
sub
lock
test
jl
es
xor
repnz
jp
inc
adc
jnp
xchg
mov
jae
and
mov
orb
lret
cmp
jb
out
stos
gs
sbb
cmpsb
test
imul
outsb
std
lds
and
outsb
adc
pop
mov
and
inc
cmp
aad
subl
pop
dec
in
mov
jo
jo
lods
mov
rorl
test
mov
testb
test
das
fldl
sub
dec
stc
mov
and
daa
inc
jnp
out
jp
mov
xchg
popa
or
xor
enter
into
xor
push
mov
cwtl
or
push
add
mov
xor
lock
mov
mov
dec
inc
mov
mov
xchg
cmpsb
popf
jbe
mov
jnp
mov
out
mulb
cmp
mov
pop
ljmp
aam
fistpl
bound
dec
xchg
shr
ret
push
and
or
jno
fistl
xor
cmpsb
mov
gs
pop
rclb
xor
movsb
fmuls
test
clc
daa
pop
aaa
jle
adc
call
cmp
enter
lock
orb
inc
nop
adc
push
out
or
clc
push
or
shll
adc
into
add
jo
dec
loop
cmp
jbe
add
lock
adc
mov
pop
jp
pop
push
pop
scas
data16
or
ret
mov
dec
aam
mov
fldenv
and
xchg
rclb
and
daa
aad
sub
push
je
inc
ds
xor
in
xchg
or
imul
mov
out
mov
data16
addr16
pushf
sub
xchg
mov
xor
loop
mov
xor
std
xor
push
sub
mov
sub
and
mov
xor
pop
sbb
das
loopne
outsl
int3
sbb
fstp
sbb
cmp
popa
xchg
add
test
mov
mov
ja
cltd
icebp
jbe
inc
enter
addr16
xchg
lds
aad
dec
cwtl
mov
lret
jl
pop
mov
push
fwait
insb
movsb
mov
mov
cmpsb
jb
dec
in
adc
in
arpl
and
push
testl
repnz
or
cmp
arpl
xor
jno
sti
rcrb
insl
movsl
jae
stc
mov
adcl
xchg
lea
aam
and
je
lods
dec
notb
fwait
mov
outsl
icebp
jl
push
sub
stos
dec
dec
sub
jbe
pop
mov
jb
loope
dec
add
fisubrl
sbb
cmc
xchg
cmp
adc
stc
xchg
inc
add
int
xchg
fnsave
andl
enter
sbb
mov
sub
mov
jno
fs
popf
nop
incl
out
mov
adc
lahf
xor
call
out
movsb
lea
mov
push
or
push
test
cmp
dec
lock
lods
push
inc
add
jbe
jle
ss
bnd
fmul
lods
imulb
cmp
jno
jmp
in
jg
loope
shrl
and
out
sbb
push
dec
pop
insb
adc
cmp
jns
outsb
lcall
jns
adc
mov
sbb
adc
arpl
push
into
mov
out
inc
out
push
fimuls
xor
je
out
sub
xor
push
jp
les
mov
les
icebp
out
outsb
stos
das
stos
sbb
scas
stos
pop
mov
inc
aas
sbb
dec
xchg
mov
loope
cltd
pop
cmp
lahf
fildl
push
mov
in
jge
xchg
nop
xor
lret
mov
test
sti
mov
dec
xchg
iret
outsb
movsl
push
push
jl
mov
mov
inc
mov
mov
cmpsb
sbb
cmp
stos
mov
inc
push
mov
lret
or
dec
cmovge
cwtl
mov
lret
adc
mov
adc
das
dec
cmp
xchg
mov
push
cld
lret
or
je
mov
sarl
out
mov
daa
sahf
out
cwtl
jp
testb
sbb
inc
hlt
jl
stc
dec
test
add
jle
pop
popa
push
add
sub
ficoml
or
fidivrl
decb
sub
push
jns
outsb
lret
repz
call
dec
rorb
repz
push
and
push
and
clc
push
mov
jno
pop
fadd
sub
inc
and
cs
arpl
pop
dec
loope
out
test
icebp
lret
pop
cmpsb
push
cwtl
lcall
mov
decb
negb
pop
sbbb
dec
mov
ljmp
call
or
jp
fsubrs
xor
sub
mov
test
jo
mov
inc
scas
into
sub
xchg
mov
std
adc
insl
mov
and
es
in
aas
leave
sbb
push
jno
lret
les
mov
lret
xchg
push
cmpsb
loopne
int
dec
stos
aad
fiaddl
int
or
loope
xchg
lahf
ret
cli
or
jbe
xor
cld
dec
negb
lods
cmp
pop
popa
aad
mov
in
xor
xor
repnz
sbb
or
and
shrl
push
dec
fisubl
jp
push
dec
push
lea
adc
test
stc
sti
dec
in
stos
or
mov
xor
stos
out
test
cmp
fnstcw
pop
adc
sub
mov
and
jle
mov
enter
xchg
push
pop
cli
pusha
cltd
mov
mov
jne
jne
cs
nop
test
dec
push
ret
push
repnz
das
arpl
insb
clc
sbb
ret
lds
jne
sub
lea
adc
xchg
nop
or
cmp
inc
push
mov
adc
and
addl
pop
mov
out
arpl
mov
push
stc
stos
cmp
sar
cmpsl
jae
xchg
or
out
mov
or
jne
dec
lods
sub
lock
cmp
inc
xorl
dec
cmp
in
xor
lods
pop
movsl
ss
fdivs
pusha
out
shrb
and
cs
pusha
hlt
movsl
test
sub
out
sbb
add
xor
shrl
xchg
sbb
loop
add
inc
adc
std
push
out
mov
add
add
pop
adcl
mov
outsl
jmp
sarb
mov
xchg
out
daa
lods
sub
scas
ss
repz
loop
dec
mov
cmp
test
fistpl
loope
jo
xor
iret
push
xor
pusha
dec
jge
lahf
inc
jbe
call
sub
and
mov
ret
push
jg
jbe
cltd
adc
inc
mov
cli
adc
adc
fdivrl
std
sbb
add
jmp
jg
lret
push
add
das
push
xlat
cli
push
xor
aas
inc
adc
mov
and
mov
cmp
mov
jno
push
out
sahf
mov
cmp
sbb
aam
jle
test
mov
test
dec
push
add
das
push
lret
iret
sbb
add
xchg
add
pop
dec
scas
std
imul
sub
cld
mov
or
cmpl
cmp
lret
in
bound
push
mov
jge
sub
ds
jmp
out
outsl
inc
dec
dec
dec
push
sub
mov
cmpsl
arpl
shll
lahf
lds
sub
jo
mov
ljmp
sbb
jae
adc
sub
xor
xor
fmuls
les
cmp
sub
jno
jmp
lock
loope
add
jne
mov
mov
jecxz
mov
xchg
mov
popf
push
pop
leave
lods
xchg
pusha
data16
pop
xchg
sbb
and
add
dec
lds
xchg
dec
es
out
jge
or
leave
sub
inc
aas
adc
into
sbb
pop
jne
bound
lcall
sbb
cli
lods
mov
ljmp
sbbl
dec
dec
in
arpl
outsl
fdivl
notb
lcall
jno
sub
pop
cmp
test
pop
notl
mov
das
mov
call
jg
cmp
insl
sbb
pop
xor
mov
push
int
or
add
add
xlat
das
outsl
sbb
mov
mov
insl
int3
add
adc
loopne
loopne
xchg
mov
in
sbb
stos
push
mov
gs
cmpsb
cmpsl
rcrl
popl
out
ljmp
push
push
in
arpl
mov
sub
imul
fwait
push
xchg
jbe
cmpsb
pop
insl
les
jo
das
sbb
push
mov
sub
lret
sahf
andl
repnz
cmp
xchg
cmp
ja
data16
fwait
pop
aad
jno
xchg
fucomp
test
push
loope
fpatan
lahf
or
xor
shll
pop
pusha
sub
enter
lock
jl
and
out
fnsave
jecxz
movsl
sbb
mov
aam
pop
dec
and
jl
es
sbb
mov
sub
dec
adc
lcall
push
shrl
rcll
mov
and
xor
sbb
pop
xchg
add
scas
out
push
and
test
cmp
jbe
repnz
sub
hlt
xchg
fyl2xp1
clc
mov
and
ljmp
into
inc
or
pushf
add
ljmp
sbb
sbb
mov
mov
faddp
divl
xor
ficoms
jle
push
adc
fistpl
mov
in
mov
adc
xor
inc
out
repz
es
jge
imul
pop
sub
lea
ficoms
sub
adc
roll
jecxz
das
cwtl
mov
adc
enter
fistps
pop
jge
aad
int3
mov
or
test
jmp
pop
cmp
fcoml
orb
xchg
pusha
adc
xor
out
push
js
dec
jne
fcompl
dec
jmp
dec
js
pop
lret
push
repz
or
stos
fdivrs
enter
push
push
dec
inc
jb
decb
ja
xchg
mov
int
or
cli
dec
mov
mov
movsb
push
add
movsb
jg
fs
sbb
cld
in
fs
loopne
pushf
dec
push
mov
pop
daa
ljmp
jo
test
test
daa
shll
fwait
cmpsl
jge
sbbb
sahf
mov
pop
add
dec
addr16
adc
adc
cmc
inc
xchg
xchg
out
inc
hlt
in
and
push
pop
mov
lods
ret
ja
mov
xchg
sub
pop
insb
scas
fisttpll
sbb
xor
add
sahf
xchg
nop
sbb
aad
mov
addr16
jle
push
scas
or
sti
arpl
out
ss
in
movsl
call
getsec
and
dec
int
ror
aas
xchg
xchg
add
scas
aaa
xor
inc
xchg
xor
adc
cmp
and
mov
das
clc
les
pop
andb
inc
adc
inc
push
fimull
sbb
or
adc
sti
inc
sahf
pusha
sub
mov
data16
pop
icebp
lods
ret
in
fsubrs
sahf
adc
mov
pop
nop
dec
jb
flds
sub
jle
sub
add
jg
inc
sub
mov
or
ss
gs
out
outsl
pushf
aad
xchg
or
daa
fisttps
mov
push
idiv
xchg
push
repnz
mov
notb
lcall
ret
sub
bnd
sbb
nop
lods
push
cmpl
push
rclb
stos
push
mov
lret
retw
pop
popf
xchg
cmp
dec
sahf
decl
aam
pop
into
call
push
dec
xchg
inc
mov
xor
mov
aam
js
push
incl
jecxz
xor
daa
out
bound
imul
test
arpl
daa
sub
push
jp
xchg
or
sarl
stos
cli
push
mov
mov
fcmovb
add
and
pop
sti
aaa
add
bnd
jns
cli
mov
adc
and
or
je
lret
dec
jno
js
shrl
jle
es
dec
out
xchg
dec
js
loop
shll
pusha
test
out
jp
scas
ja
push
or
push
add
addr16
jl
push
mov
or
rcrb
mov
xchg
cmp
pop
or
and
popf
xchg
inc
aad
call
ljmp
cmp
cmp
mov
pop
sub
ljmp
pusha
ds
mov
jae
mov
xchg
mov
sbb
out
add
mov
lcall
nop
insl
sbb
jmp
int3
lods
mov
les
ja
jle
pop
push
mov
scas
sbb
cli
and
in
loop
add
and
inc
scas
cmp
out
hlt
out
mov
push
rolb
scas
js
ror
and
push
push
xchg
sbb
mov
fwait
test
dec
add
out
add
ss
cwtl
lahf
inc
jmp
pop
xchg
cmp
dec
ljmp
fsubl
bound
cli
mov
mov
mov
movsl
jle
daa
xor
or
jae
test
data16
jno
ret
jne
out
xlat
cmp
mov
mov
sub
pop
dec
cld
jl
push
aaa
int
push
xchg
xchg
xchg
int3
mov
or
addr16
sbb
dec
xor
sbb
ss
mov
sbbb
mov
mov
push
xor
dec
aas
or
ret
jge
pop
test
sbb
xlat
xchg
sub
xchg
shlb
jae
daa
push
adc
jmp
loope
cld
int3
stos
mov
mov
mov
push
add
lds
popf
jnp
bound
xchg
cmpsb
dec
call
jp
inc
in
sub
mov
or
mov
push
mov
push
rcrb
xchg
cld
stos
es
inc
sub
popa
dec
or
xor
cmp
dec
std
leave
dec
jno
pop
inc
icebp
and
cltd
push
bnd
dec
sbb
cld
sahf
jp
daa
fucom
scas
mov
jo
cmp
ficompl
mov
test
pop
imul
dec
test
xor
data16
out
add
icebp
xchg
mulb
insb
adc
mov
push
xchg
mov
or
push
insb
arpl
add
fwait
fwait
cli
addr16
sbb
push
add
cmp
mov
push
pushl
hlt
fsubl
add
and
mov
sub
mov
xchg
push
call
dec
add
push
jg
mov
pop
lahf
enter
movsl
lea
cwtl
dec
xchg
dec
jl
call
lds
jns
sbb
and
or
sbb
fwait
loop
daa
jne
bound
cmpl
push
mov
aaa
add
out
lock
inc
add
push
mov
mov
fidivl
add
fs
rcl
fistpl
cltd
pop
in
divl
lea
xlat
pop
push
imul
jns
jmp
sarl
or
es
jno
jae,pt
call
lds
or
push
int3
hlt
sub
out
imul
pop
mov
pop
repz
out
js
mov
and
sbb
ds
mov
mov
std
cmp
cmp
xor
xor
sbb
xchg
dec
loop
cmpsb
pop
cwtl
aam
andb
inc
xchg
mov
pop
mov
fsubrp
adc
repz
arpl
push
add
xor
pop
and
sbb
daa
add
stos
sbb
push
pop
jecxz
ret
das
push
sti
kaddw
jae
testb
hlt
xchg
imulb
movsl
mov
mov
cmp
push
push
lods
pop
dec
out
js
mov
mov
jle
popa
mov
movsb
or
test
push
jno
int
ds
or
mov
cltd
dec
aaa
mov
rorl
jle
mov
jmp
sbb
jg
shll
adc
mov
cmp
adc
rcll
sub
rep
ret
popf
inc
push
outsl
sbb
pop
inc
dec
add
mov
push
inc
jg
lods
or
rorb
mov
and
or
aaa
ficompl
ret
inc
jnp
out
fcmove
jg
or
xor
mov
jae
adc
mov
mov
out
sahf
jg
cmp
fsubs
xchg
fldcw
sub
adc
rclb
loop
push
scas
mov
mov
xchg
dec
js
sbb
subb
imul
add
aas
test
mov
enter
inc
mov
mov
jns
cmpl
add
lret
or
ror
xlat
orb
imul
into
sub
mov
fs
mov
lea
cs
scas
addr16
incl
mov
inc
cltd
stos
test
add
fnstcw
dec
out
jge
insl
pushf
rcl
mov
push
pop
outsb
cltd
mov
dec
jge
and
jmp
or
mov
mov
out
xor
sbb
jns
xchg
mov
jmp
decl
adc
int3
add
lahf
fildll
push
ja
subl
jae
bnd
adc
lods
pushf
aam
testb
adc
aam
sub
pop
out
xor
insl
cmp
sub
xchg
mov
stos
inc
sub
or
imul
lods
fstps
sbb
xor
mov
fidivrl
cmp
cld
mov
mov
jbe
scas
in
enter
sub
fwait
mov
push
scas
sbb
pop
fwait
sub
insl
repz
xor
lea
xchg
xchg
sbb
pop
repz
add
fnstenv
ja
sti
jo
fstpt
inc
lret
js
lea
gs
cmp
jp
hlt
mov
repnz
adc
lock
loop
inc
adc
fldt
jp
je
pushf
xchg
data16
lret
lret
shll
lods
xchg
lods
mov
mov
inc
or
icebp
enter
xchg
mov
jae
cmp
clc
inc
jl
loope
sbb
cmpsb
in
xor
jg
enter
add
ljmp
fisttpl
cmpl
and
imul
mov
mov
fsubl
inc
push
xchg
gs
adc
jmp
pop
out
mov
lret
pop
flds
sbb
cmp
popa
addr16
pop
push
aaa
in
sbb
stc
add
inc
sub
cli
scas
in
gs
rorl
adc
jp
xor
mov
in
pop
cmp
test
hlt
decl
sbb
sbbl
inc
jnp
mov
push
and
lret
jae
xchg
aam
xlat
scas
stos
in
jne
push
jae
das
int
lods
into
pop
add
cmp
enter
mov
mov
js
scas
fwait
lahf
dec
loope
xchg
sub
xor
or
lock
daa
or
repnz
shr
mov
dec
xchg
fmuls
std
scas
or
xchg
rcrb
inc
ja
sub
xchg
scas
inc
adcb
aad
cmp
sbb
leave
xchg
adc
mov
flds
enter
hlt
or
and
sbb
add
jl
xor
lahf
popf
shll
xchg
pop
mov
js
arpl
cmpsl
mov
insb
repz
push
shl
cmpsb
sub
rclb
sbb
lahf
add
xor
lods
or
sbb
idivb
out
fld
sub
jno
mov
dec
push
cmpsl
mov
cli
push
sub
or
pop
xchg
int
cmp
cmp
out
cmp
mov
test
or
xchg
in
fdivp
cmp
mov
ret
rcl
fwait
out
cmp
or
mov
xor
clc
xchg
insl
or
imul
ret
mov
sti
push
push
mov
es
pop
in
lock
and
pop
add
fucomp
adc
loopne
aam
enter
or
popf
adc
aam
adcb
jne
pop
xchg
fdivrs
lret
xchg
insl
dec
addr16
inc
xchg
xorb
and
imul
subb
jmp
add
andb
sahf
ds
or
sub
outsb
mov
jge
js
or
push
inc
cs
cld
enter
xchg
iret
pushf
dec
add
cmp
push
pop
lcall
testl
xor
push
ds
mov
popa
adc
xchg
jp
iret
dec
ljmp
mov
cmp
and
add
das
hlt
inc
mov
pop
popf
sub
dec
xlat
ss
cmpsb
mov
adc
dec
test
aaa
mov
test
arpl
push
mov
aaa
movsl
xchg
mov
jecxz
hlt
inc
ds
mov
pop
pop
push
sub
lcall
decb
cmp
cmpsb
push
jnp
push
and
insb
mov
int3
test
mov
leave
or
js
pop
xrelease
pop
mov
sarl
mov
dec
loopne
or
sbb
ds
repz
mov
icebp
clc
xchg
mov
pop
test
push
mov
cli
ljmp
loopne
xor
or
test
add
sub
adc
cmpsl
mov
outsb
repz
cmp
insl
in
stos
repz
and
xchg
fwait
subb
push
mov
hlt
push
jbe
stos
sbb
std
data16
ds
rcl
andl
jecxz
pop
mov
imul
mov
cmp
inc
push
lds
lea
enter
ja
and
cmp
sbb
leave
mov
sub
stos
xor
xchg
xchg
and
push
insl
lcall
repnz
xor
dec
movsl
push
pop
sbb
mov
unpckhps
data16
sbb
sbb
addl
outsb
adc
insb
sbb
scas
mov
push
xchg
mov
sbb
fwait
push
xchg
mov
aaa
mov
nop
sbbb
daa
cmp
iret
mov
test
inc
shrb
ljmp
icebp
fisttps
pop
popl
cmpsl
outsl
sbb
xchg
mov
or
adc
adc
leave
cmp
and
cmp
xor
or
xchg
das
stos
and
adc
dec
into
rolb
mov
subb
stos
add
pop
and
push
mov
jp
bound
dec
icebp
push
mov
and
cmp
pop
das
dec
and
orb
dec
inc
add
inc
movsl
mov
in
adc
fcmovbe
cmp
mov
mov
fwait
or
aad
aam
or
jbe
push
push
ret
das
jo
mov
mov
pusha
pop
fimull
test
nop
es
hlt
mov
mov
adc
andl
pop
add
jns
out
and
hlt
aaa
xor
adc
push
inc
adc
insb
xchg
mov
push
ds
ja
pop
inc
ret
ret
daa
add
fnsave
add
aam
lcall
loopne
dec
add
jnp
jge
bound
pop
shlb
insl
push
inc
push
xlat
sbbb
push
pushf
push
movsb
xchg
sub
insl
cmp
add
or
rcl
jnp
adc
lods
jl,pn
adcb
jae
mov
push
insl
rclb
loopne
in
push
in
enter
xlat
movsl
pusha
loop
out
out
stc
and
jmp
pop
sub
lcall
push
les
icebp
mov
test
insl
stc
and
sub
cmp
lret
xchg
mov
xchg
ss
adc
loope
xchg
push
outsl
stos
leave
imul
and
pop
or
icebp
push
pop
mov
pop
lods
xchg
sub
fadds
arpl
xchg
ja
push
in
mov
inc
fistps
pop
push
jb
mov
xor
push
mov
cs
das
pop
inc
insb
lcall
outsl
push
inc
pop
and
loope
lcall
pop
sti
cmp
lret
in
test
test
xor
loopne
lods
stos
lods
sub
push
xor
imul
mov
sbb
dec
xchg
or
jnp
mov
dec
or
dec
mov
adc
or
and
loopne
pop
push
or
icebp
pop
scas
movsb
sahf
fistpl
adc
xchg
stc
mov
jb
dec
or
enter
je
mov
or
sti
pushf
les
inc
cmc
inc
mov
add
cmc
outsb
mov
xor
sub
push
iret
imul
outsl
aas
or
mov
into
inc
mov
mov
daa
sub
popf
push
dec
movsb
pushf
adcl
adc
iret
jbe
call
pop
cltd
mov
sub
leave
cmp
cmpb
fs
loopne
pop
lds
loope
pop
loop
or
js
in
xchg
dec
in
sub
xor
and
orl
jmp
inc
je
fisttps
bound
test
dec
mov
mov
stc
fistpl
sub
leave
mov
pushf
mov
jns
rclb
mov
sub
xor
sbbl
pop
outsl
xchg
das
inc
or
dec
mov
loopne
shll
mov
cmpsb
fildll
inc
insb
mov
xlat
mov
ljmp
pop
dec
je
cmp
repnz
daa
and
fldl
pusha
xchg
jae
jbe
testl
mov
cmp
jle
cld
adc
or
inc
arpl
xor
mov
lds
inc
mov
outsb
and
jo
into
xor
lds
push
or
mov
ds
pop
lds
jo
das
sbb
mov
add
nop
aad
add
cmpsl
adc
push
or
adc
xor
lret
mov
mov
sahf
cmpsb
mul
inc
push
adc
jnp
lods
insl
fs
add
aad
add
jnp
cmp
add
mov
xchg
xor
pushl
fxch
push
xlat
jp
cmp
aam
dec
adc
fidivrs
mov
xchg
rcrb
dec
lret
mov
sbb
sub
sarl
inc
test
fcomps
xchg
mov
imul
cmc
or
mov
jns
mov
push
rorb
cwtl
and
add
lcall
pop
and
fwait
push
fcomip
push
es
daa
fdivrl
aas
stc
in
jb
fnstsw
lret
sbbb
xor
insl
std
sbb
push
jmp
ljmp
jp
cmc
xor
into
cmp
jl
daa
cmp
fdivrl
mov
inc
inc
sti
mov
loope
sub
mov
and
sahf
mov
cltd
cwtl
and
add
cmpsl
sti
jnp
test
mov
push
push
add
mov
int3
ficompl
xor
mov
fucomi
fbld
lds
mov
rcll
jnp
fmuls
out
adc
inc
scas
outsl
icebp
or
inc
insb
cmpl
pop
sub
inc
xchg
jmp
and
and
or
sbb
mov
in
sti
aaa
jle
mov
les
cmp
push
loop
ret
push
in
dec
xor
loope
test
mov
adc
outsb
dec
cmp
into
dec
fidivrl
xor
cld
ljmp
push
inc
fstl
movsl
mov
push
cmpsl
cmp
xor
jp
insl
shll
loop
dec
int
dec
je
pop
xor
imul
cmpsb
lock
cld
shll
lea
mov
add
sub
ds
or
dec
mov
es
cmp
pop
or
aam
pop
popa
jno
data16
push
fdiv
int3
movsl
sbb
mov
jnp
fmull
pop
xor
xchg
pop
lods
mov
jmp
inc
out
outsb
add
imul
cltd
fs
clc
imul
and
flds
push
mov
mov
fsub
or
inc
dec
mov
icebp
cld
imul
in
jle
int
or
mov
cmp
outsl
lret
xor
popa
and
mov
out
cmpsl
cmpsb
jmp
fmull
stos
loop
lcall
mov
pop
mov
sarb
movsl
jno
xchg
rorb
mov
sbb
jge
xor
add
into
ss
push
mov
aam
popa
lods
mov
fucomi
repnz
pop
adc
stos
lock
std
push
add
movsl
or
loope
xchg
aad
nop
test
lret
adc
movsl
lret
clc
dec
xor
mov
icebp
push
jo
in
xchg
cli
and
or
add
mov
mov
rcr
shlb
adc
dec
cwtl
mov
cli
fisubrs
sbb
add
push
rorb
mov
xor
in
adcl
mov
and
outsb
testb
sbb
inc
mov
or
push
sub
adc
pusha
sbb
mov
cs
popa
sbb
aam
mov
or
inc
stos
xor
inc
xor
pop
xchg
mov
jl
mov
xchg
dec
pop
inc
jo
push
jg
lea
mov
pop
push
sub
pushf
lret
sbb
stos
ljmp
jge
xchg
outsb
sahf
sub
cmpsb
push
push
cmp
xor
lret
push
push
in
xchg
jl
adc
je
pop
sbb
sbb
pusha
int3
add
push
mov
loopne
dec
push
sahf
and
fsubs
rcr
dec
ret
xor
loope
rclb
bound
ljmp
arpl
les
dec
je
test
pop
enter
xchg
jnp
mov
nop
mov
data16
js
push
call
pop
data16
push
jb
and
push
test
adc
cli
lds
pusha
add
test
loope
movsb
fwait
into
jne
jp
dec
lcall
adc
push
ret
notb
and
pop
sbb
aas
mulb
push
jmp
cmc
das
push
aas
pop
mov
sub
mov
movsl
inc
outsl
xchg
cmp
push
outsb
jnp
fadd
pop
lret
sbb
jp
sub
stc
jnp
adc
lea
dec
sahf
gs
stos
jo
in
or
jo
movsb
adc
add
popa
lock
mov
test
push
jp
push
xchg
sub
or
imull
mov
dec
testl
cmpsb
ja
mov
dec
insl
jnp
hlt
pusha
mov
pop
xchg
adc
mov
lods
sbb
hlt
jo
xor
mov
pop
push
mov
pushf
add
xchg
or
add
or
lods
or
dec
int3
cmp
push
mov
movsl
adc
xchg
and
pop
jmp
int3
scas
imul
fwait
in
cmpsb
ret
pop
iret
cld
dec
aam
sub
je
sbb
lcall
out
add
xchg
jp
jb
add
roll
shlb
popa
loop
or
icebp
mov
lret
fimuls
pop
mov
sbb
stc
test
push
cltd
xlat
xchg
rcl
inc
rcrb
xchg
jle
add
cs
pushf
dec
jecxz
rcl
mov
mov
pop
sbb
mov
xchg
mov
dec
movsb
adcl
push
sub
cwtl
cs
fwait
and
outsb
push
cltd
or
mov
iret
testb
jp
ret
mov
pop
xchg
and
pop
mov
js
shl
mov
xorl
idivb
xor
jbe
jae
push
rolb
mov
jmp
push
push
cmpl
rorb
inc
push
mov
lahf
add
jg
lret
mov
outsb
insl
daa
jnp
xor
dec
hlt
jg
fistpll
lock
ret
pop
adc
cltd
testb
xchg
lret
add
and
movsl
inc
push
aaa
shrl
bound
push
ud0
and
cmp
pop
daa
es
jns
dec
cltd
daa
sahf
jns
call
xlat
mov
add
imul
jne
jno
fucomi
scas
adc
inc
mov
pop
sub
pop
jo
cmp
pop
push
loope
cmp
cmp
addr16
aam
sbb
roll
xchg
adc
scas
aas
mov
jg
rorl
stos
mov
sbb
iret
jbe
xor
das
arpl
mov
out
stos
test
pop
repnz
gs
incl
enter
jb
mov
adc
mov
scas
test
ljmp
and
fbstp
jne
mov
shrl
pushf
or
test
insl
mov
mov
or
movsl
xchg
cmp
fmuls
xchg
jecxz
lea
ja
js
lock
xchg
mov
and
sbb
fs
aaa
sbb
test
mov
mov
icebp
mov
xchg
push
ss
add
sbb
dec
nop
inc
or
imul
jmp
rol
cltd
push
or
dec
movsl
mov
addl
insb
repz
xchg
push
jno
push
in
or
push
sub
mov
aas
repz
ja
jno
out
cli
or
adcb
loope
mov
add
lsl
and
cli
and
pop
sub
sub
cmp
rolb
sti
into
mov
inc
or
or
xor
xchg
sbb
out
int
daa
popf
aad
or
inc
or
mov
pop
push
add
xchg
popa
jo
pop
or
dec
pushl
addl
repnz
insl
push
mov
movsb
adc
cwtl
mov
dec
xor
iret
ss
int3
or
xor
imul
mov
adc
pop
mov
pop
pushf
xchg
stos
inc
mov
popa
sub
outsl
xorl
cmp
and
cmc
adc
sub
push
sbb
stos
jmp
mov
inc
js
out
out
hlt
pop
sbb
mov
ss
lret
loop
adc
shll
call
cltd
push
jb
jmp
mov
cld
sbb
shll
loope
mov
or
testb
sub
hlt
sbbb
test
cli
mov
xor
sbb
es
pushf
sub
jp
mov
enter
imul
aas
in
mov
add
cli
int3
aas
mov
adc
pop
jmp
into
or
fucomi
xorb
xchg
je
or
inc
lock
bound
roll
test
mov
and
sbb
and
sti
clc
jge
xor
push
lock
in
ret
fcom
pop
pop
outsb
mov
xchg
dec
mov
nop
mov
adcb
hlt
fs
dec
adc
fldcw
enter
cwtl
pop
pop
jmp
mov
sub
fidivrl
call
daa
movsb
repz
sbb
scas
jmp
js
push
fbstp
insl
dec
fcoms
les
fiadds
test
daa
mov
sub
xor
dec
push
cmc
movsl
rcl
and
xchg
das
pop
lcall
adc
mov
push
aaa
dec
jne
in
mov
fmuls
xor
mov
les
jae
aaa
aad
outsl
gs
push
add
orl
cmp
dec
in
and
sub
cld
dec
shll
test
daa
cwtl
or
es
add
icebp
dec
jno
imul
xchg
lret
xchg
push
lods
push
ljmp
sti
lds
outsl
gs
sub
call
or
test
lods
stos
stc
aam
lock
jle
jmp
scas
repnz
mov
jb
jg
cmp
and
testb
pop
out
cld
sub
push
ja
inc
push
cltd
push
sub
mov
int
xor
shr
out
mov
int
add
push
cvttps2pi
and
dec
fnsave
inc
add
stc
test
push
jmp
jg
jmp
mov
push
add
outsl
jecxz
lret
xor
loop
jbe
test
inc
pop
mov
sbb
add
or
and
jns
aas
mov
insl
cmp
scas
adc
cs
inc
sbbl
push
push
cmp
pop
pop
dec
std
ja
rcl
jns
imul
mov
lea
xchg
xor
dec
ret
cmpsl
int
or
stos
mov
pop
mov
inc
mov
cmp
popf
fnstenv
stos
inc
inc
out
xchg
test
dec
push
xchg
es
push
stos
test
xchg
cwtl
mov
cmp
pop
mov
ss
cmp
dec
cmp
stos
dec
xchg
insl
in
stos
sub
dec
and
addr16
insl
add
sbb
adc
push
add
repz
sbbl
mov
push
inc
jne
or
and
outsl
loope
hlt
mov
jbe
inc
pop
cmpsl
adc
sbb
mov
aam
xchg
cltd
push
sub
lret
push
call
rol
xchg
es
lea
xchg
jne
lock
xor
loopne
jmp
mov
mov
xor
lods
std
or
loop
pusha
rorb
lods
loopne
pushf
jns
hlt
fsubrl
add
or
mov
sbb
jecxz
cmp
adc
push
jae
loop
dec
mov
jns
daa
jns
push
addr16
or
dec
ja
push
mov
pop
fsubrl
add
add
inc
insb
jge
jns
movsl
cltd
add
inc
pop
fists
mov
push
pushf
fimull
ss
pop
sbb
stos
pop
or
dec
mov
sub
jo
adcb
jo
jns
fidivrl
mov
push
std
add
or
hlt
push
mov
leave
dec
lock
sub
jae
pop
push
pusha
sub
xchg
sub
test
push
movsb
adc
and
adc
ret
sbb
xor
cmp
add
inc
or
adc
dec
mov
dec
loopne
roll
mov
sub
jne
lcall
jnp
das
sbb
ret
ljmp
xchg
inc
sahf
or
push
out
outsb
rolb
les
push
pop
ja
cmp
sub
xchg
pop
ja
add
xor
inc
jne
xor
adc
pop
pop
ficompl
shll
aam
cmpsl
mov
aaa
icebp
jl
mov
lods
je
movsb
movq
mov
inc
les
stos
loop
xlat
inc
cmp
sub
and
aaa
jle
jns
mov
scas
mov
and
into
inc
stos
adc
jg
pop
push
and
test
xchg
xor
enter
mov
inc
sbb
pushf
jl
mov
sub
adc
or
hlt
cltd
sbb
ja
xor
adcb
stos
rol
jo
movsl
insb
test
ret
push
rcrb
dec
mov
cmovnp
imulb
fbstp
je
mov
idivl
nop
rcll
jo
ret
in
sbb
adc
jecxz
pop
add
test
mov
lods
add
adc
cmp
les
cmp
sub
test
mov
repz
in
jno
and
jns
and
mov
popf
data16
popf
push
stos
pop
in
add
add
decb
dec
enter
xchg
inc
les
add
or
mov
push
sti
jg
or
cltd
retw
xlat
sub
pop
rolb
loopne
mov
loop
enter
mov
pop
sub
dec
and
push
sbb
test
inc
mov
cwtl
cmc
repnz
push
dec
dec
sarl
mov
pusha
mov
pop
pop
mov
adc
movsb
cs
lds
stos
cwtl
in
xchg
insb
pop
jbe
jo
xchg
jmp
lret
xchg
pop
ljmp
loope
iret
add
cmpsl
mov
in
push
inc
insl
cmp
in
jo
lcall
in
into
cmp
jae
and
or
dec
repnz
es
in
mov
ss
jmp
scas
hlt
pop
mov
icebp
negl
out
cmpsb
ficoml
jo
add
ret
sub
in
lcall
adc
jmp
out
shll
mov
sub
xchg
mov
push
ja
pop
faddl
inc
out
sub
jnp
lds
jecxz
cltd
xor
test
int
sahf
iret
fstp
lods
outsb
xchg
ja
fistpl
sub
mov
or
push
inc
and
mov
repnz
lds
or
inc
sarl
call
pop
add
addr16
les
frstor
jbe
push
sbb
push
or
loope
sahf
sar
cmp
ja
add
jl
add
test
jne
icebp
dec
sub
aas
rcl
pop
vpcmpeqw
dec
ja
test
mov
or
cmpsb
movsl
sbb
in
add
ss
mov
lret
data16
or
outsb
out
dec
xchg
sahf
mov
cmp
xchg
xchg
pop
sub
and
loopne
cmpsb
pop
sbb
push
cmp
xchg
fdivl
adc
jmp
nop
cmp
call
movsb
out
pusha
in
cli
push
test
negl
or
fisubl
fisubrs
daa
mov
and
movsb
arpl
pushf
inc
or
outsl
outsb
cld
mov
loopne
sti
pushf
mov
daa
mov
cmp
daa
nop
or
mov
jno
mov
sub
pop
loope
pop
std
mov
inc
adc
mov
jmp
scas
ja
and
mov
dec
adc
shrl
pop
repnz
push
and
inc
xor
and
inc
mov
xor
mov
or
jg
xor
xchg
in
jle
insb
loop
xlat
outsb
fwait
js
dec
ret
push
lods
idivl
scas
mov
adc
mov
mov
clc
sbb
xchg
pop
std
xor
mov
in
lcall
sbbb
andps
test
orl
xorl
fbld
ficoml
subb
cltd
fidivl
pusha
repz
dec
out
jge
push
gs
shlb
adc
fisttpll
pop
movsl
cmp
sbb
xchg
inc
sub
mov
call
and
add
es
lods
daa
std
push
xor
pusha
dec
repz
pop
push
lock
add
int3
fisubs
sbb
movsl
mov
cmp
adc
out
sbb
mov
clc
jbe
jmp
es
cmp
jmp
jb
insb
in
inc
mov
pop
jmp
outsb
sbb
xor
jmp
rcll
insl
jle
cltd
fcmove
and
xlat
sub
fdivp
pop
loop
add
jle
ds
adc
in
cwtl
mov
push
mov
pop
inc
test
decl
dec
mov
sub
add
inc
orb
lret
xor
add
sbbb
cmpsl
mov
roll
movups
or
dec
out
push
into
push
cmp
xor
or
lods
xchg
jnp
fwait
lea
add
movsb
rorb
cld
push
subl
pushf
mov
repnz
cltd
push
cmc
add
dec
js
shrb
stos
lret
mov
inc
sub
inc
or
adc
popf
out
dec
xor
pop
jnp
push
and
pusha
xor
rcr
mov
jle
pop
dec
aaa
mov
arpl
and
insb
jl
cmp
push
dec
sbb
cli
out
cli
mov
fiaddl
inc
and
shlb
push
ja
push
cltd
roll
mov
or
loop
sahf
unpckhps
inc
lds
outsl
js
mov
test
inc
loope
adc
jle
movsb
inc
xor
jbe
inc
adc
nop
sub
sbbb
mov
xchg
and
fwait
jne
jmp
mov
add
call
cmp
inc
mov
lcall
mov
cmp
aam
xchg
addb
cmpb
pop
std
mov
mov
or
das
inc
mov
cltd
dec
add
in
fcoms
sbb
dec
inc
or
mov
and
out
lds
fsubr
mov
cwtl
xchg
mov
imul
lahf
scas
xchg
sub
mov
mov
into
mulb
push
push
inc
dec
pop
sub
xor
cmp
xchg
test
leave
cmc
pop
pop
pop
insb
jmp
dec
xchg
js
cmp
mov
fisubrs
and
iret
or
decb
push
push
test
add
ljmp
mov
loopw
les
fistpl
repnz
inc
pop
sti
lcall
movsb
mov
test
pop
out
jb
jmp
scas
or
and
in
xchg
jo
bound
dec
pop
out
add
in
aas
test
cli
xor
cld
nop
adc
fnstenv
je
fs
pop
mov
stc
iret
pop
pop
jecxz
outsb
mov
inc
cmp
aad
stos
xor
xor
push
and
sub
lret
lods
xchg
xchg
xchg
cwtl
int3
xor
daa
mov
repz
push
test
rcrb
sbb
cmp
test
sarb
mov
aad
es
in
int
cmp
out
fidivrs
dec
je
ficoml
push
inc
push
andl
push
jp
add
sbb
cltd
in
sub
adc
or
dec
cmpsl
cmp
insl
subb
mov
adc
les
or
rcrl
xor
into
shrl
cltd
sub
jl
dec
int3
sub
sbb
sub
int
dec
fdivl
xchg
pop
mov
and
or
cmp
mov
jl
ss
loope
xor
rclb
movsb
push
xor
in
push
mov
sbb
aam
sub
push
out
jecxz
aad
pop
mov
aaa
mov
in
movb
or
ss
mov
je
add
and
shll
adc
push
stc
and
imul
adc
and
adc
add
xchg
pop
addl
add
add
ljmp
pop
and
mov
js
je
sub
addr16
fisttps
fimull
loope
xor
jae
mov
push
fs
lret
imul
int
xor
jge
jge
fistps
dec
fbld
mov
xchg
jns
add
sub
mov
xchg
repnz
cs
xchg
int3
inc
insb
push
ficomps
and
xlat
sub
out
inc
fsubp
cmp
dec
cmpsb
jge
or
add
mov
cmp
adc
inc
loope
mov
in
cmp
xchg
loop
jmp
loope
push
outsl
call
int3
pop
daa
xlat
int3
imul
cli
mov
std
movsb
adc
ret
sub
pop
sub
jge
cs
cld
adc
push
jmp
or
nop
ret
aaa
sub
jno
ret
sub
inc
ret
pop
mov
sbb
adcb
shll
push
clc
aam
inc
inc
xor
loope
lret
loop
mov
cmp
ss
xchg
jg
mov
and
aad
iret
popa
or
fs
lcall
psrld
lcall
lds
mov
inc
loopne
jae
popa
xor
adc
test
push
xchg
jp
les
cmpsl
fadd
cmp
mov
mov
shll
pop
cmpsb
cwtl
jmp
ffree
jae
and
and
push
mov
or
xor
out
and
or
stos
sbb
mov
lar
sbb
enter
sbb
mov
jno
xlat
jp
out
nop
in
and
out
rol
sub
mov
aaa
mov
or
inc
std
adc
dec
pop
jne
je
cmc
outsb
cmp
mov
and
addr16
mov
popa
fwait
mov
loopne
and
ja
in
nop
add
clc
sbb
cmp
pushl
xor
addb
int
cmp
aas
imul
xchg
fdiv
and
pop
xchg
shrl
movb
add
in
ret
test
and
popf
clc
int
sub
mov
and
jne
sti
stos
cmpps
adc
xlat
shrl
or
pop
adc
pop
imul
rolb
jbe
rol
mov
cwtl
jne
add
push
fld
push
in
movsb
pop
sbb
shll
cli
movb
sub
xchg
xor
cltd
sub
cmc
mov
adc
cmpsl
aam
push
jmp
dec
mov
fld
sbb
inc
cmpsb
jp
out
pushf
bound
cli
in
out
inc
cmp
pushf
push
mov
inc
lahf
jecxz
icebp
cmpsl
lock
pop
or
inc
cmp
addl
or
jbe
scas
subb
mov
stos
mov
xchg
popf
jg
aam
notb
cmpsl
lock
mov
and
mov
cmc
lret
loop
xlat
xchg
cmp
mov
in
jo
lods
pop
cmp
and
shll
les
mov
inc
push
mov
movsb
jp
cmc
xor
sbb
jbe
xchg
fidivrl
mov
ds
movsl
fwait
das
dec
stc
loope
mov
repz
imul
jne
or
sti
mov
inc
call
mov
stos
test
jo
mov
xchg
mov
inc
les
imulb
jl
pushw
cmp
pop
cld
in
fcoms
mov
rcrb
mov
lods
and
mov
fs
lret
fbld
mov
add
call
test
aaa
cmp
das
cmpsb
jg
mov
lret
ljmp
xchg
fsubs
ficomps
aam
inc
add
fidivs
pop
cld
ljmp
mov
adc
jae
leave
popa
mov
and
test
push
mov
fwait
scas
cmp
or
rcll
ja
aad
xor
sub
push
adc
hlt
mov
repnz
cmp
inc
mov
fs
icebp
andl
xlat
cmp
aad
fistl
mov
stc
sbb
call
les
test
inc
xchg
xor
sub
adc
clc
aad
push
add
out
dec
movsl
mov
ss
xchg
xor
ret
nop
mov
ret
mov
jl
outsl
push
or
cmpsl
push
mov
lahf
mov
add
lods
movsb
cs
movsb
cmp
mov
pop
imul
pop
cmpsb
insl
jne
pop
wrmsr
jb
jnp
addr16
adc
cmpsl
and
ds
cmpsb
popf
pop
cmpsl
nop
cmp
push
mov
mov
or
pusha
xchg
js
inc
sub
stc
push
push
loopne
sar
test
inc
in
mov
in
xor
fwait
or
rcr
mov
jnp
cmp
aaa
cwtl
inc
jp
dec
mov
mov
mov
mov
in
and
rcll
int3
insl
popf
cmp
es
movsb
stos
je
xchg
ret
sub
mov
shlb
setp
leave
dec
cmp
or
icebp
lret
int3
mov
fldt
leave
or
xchg
adc
push
sbb
mov
cmp
fsts
dec
mov
jne
pop
rorl
push
push
and
mov
fcmovb
out
cmc
or
pop
push
aaa
mov
lds
dec
push
mov
and
cmpsb
xor
fwait
cmp
faddl
mov
inc
mov
insb
push
into
mov
push
in
ja
inc
dec
arpl
stos
adc
inc
xchg
mov
js
xor
mov
leave
addr16
mov
jbe
stc
sbb
inc
int3
sub
adc
mov
hlt
das
movsl
pop
lock
mov
test
jg
pop
and
mov
or
popa
xchg
mov
iret
or
cmp
jae
jmp
mov
inc
lock
inc
cmp
stc
adc
fwait
mov
addl
ds
hlt
inc
cmpsb
sbb
inc
inc
sbb
push
jmp
sub
popf
std
aad
mov
adc
pusha
loopw
sbb
insb
sbb
fsubs
adc
nop
or
push
dec
adc
sahf
mov
inc
inc
fwait
ljmp
subl
out
popa
cmpsl
daa
dec
andl
aas
cmp
les
fwait
pop
clc
mov
sbb
pop
mov
outsl
pop
jmp
fisubs
aad
and
sbb
mov
mov
jecxz
inc
jb
xchg
fildl
out
mov
lea
mov
int
cs
xchg
cmp
rcll
xchg
fisttpll
mov
add
inc
test
ret
repnz
dec
xchg
pop
cmp
mov
mov
add
in
pop
mov
cmpsb
adc
ficoml
push
cmp
xchg
or
insb
add
pop
jns
enter
mov
stc
sbb
or
pop
mov
jnp
aaa
push
das
xchg
cwtl
imul
pusha
aas
add
or
aam
shl
into
lahf
gs
adc
pop
jne
lods
aam
loopne
bound
stos
test
es
lock
jb
or
cmp
addl
sbb
ret
pop
and
pop
data16
push
jne
jecxz
enter
inc
lds
mov
daa
mov
mov
push
outsb
call
outsb
or
fwait
ror
cmp
jb
and
test
rorl
repz
and
xor
inc
in
xchg
and
push
add
jns
imulb
adc
xor
add
push
popa
call
push
push
das
push
cmp
mov
test
test
lods
adc
fisubrl
ja
int3
or
cmpsb
pop
test
stos
cltd
mov
subl
mov
out
shlb
sbb
sbb
mov
pop
ds
jb
xor
xchg
cmp
aas
lods
sahf
adc
inc
cs
mov
int3
cmc
fbstp
cmp
gs
push
jbe
repnz
aam
jecxz
movsl
push
xchg
cld
shlb
or
in
inc
mov
jbe
mov
jmp
push
sub
inc
popf
leave
dec
cmp
sub
repnz
call
mov
lret
int3
scas
cli
dec
shl
out
leave
jo
mov
bound
imul
sbb
pop
scas
mov
test
pushf
les
lds
fmul
repnz
push
xchg
xlat
sub
fdiv
add
in
pusha
pop
fadds
push
xchg
cmp
mov
movb
ret
lods
xor
or
cmp
in
shrb
insb
out
shl
add
adcb
ficompl
test
pop
mul
mov
int
mov
clc
push
pop
adc
cmp
inc
fisubrs
shl
push
rcrl
xchg
repz
cmp
decb
test
add
test
or
xor
sbb
push
cmp
xchg
adc
jbe
incl
push
xor
pop
add
sbb
nop
cmp
data16
test
pop
cmp
xor
xchg
jl
dec
cs
jnp
cmp
mov
test
mov
add
es
arpl
out
push
in
dec
jg
ja
test
xlat
pushf
dec
shll
jmp
jp
jp
jmp
xchg
arpl
lock
xchg
mov
lock
lods
lret
stos
jae
inc
movsb
add
inc
mov
mov
mov
pop
add
sahf
stos
dec
sbb
jp
negl
push
cwtl
mov
lret
or
xor
jnp
cmp
add
test
adc
jns
cltd
cmp
inc
sbb
lcall
push
shlb
sbb
cltd
orb
sub
xlat
xchg
push
add
mov
int
in
enter
loope
not
into
popa
jmp
push
dec
xchg
jmp
inc
cmc
std
lea
and
stos
mov
or
mov
mov
xor
js
or
jl
adcl
sbb
jnp
ret
pushf
and
lock
pop
push
cmp
xchg
insl
and
sbb
fcompl
xor
out
insl
push
or
mov
push
movsb
out
xchg
xor
mov
jno
shr
dec
addr16
popf
movsb
lea
jecxz
jno
cwtl
dec
push
push
nop
dec
test
sub
inc
cmp
mov
and
jl
add
lea
call
inc
nop
jne
dec
popf
inc
movsb
es
ficoml
mov
push
sub
or
orb
arpl
cmpsl
orl
lcall
mov
xchg
outsl
push
in
cltd
out
xor
sub
sub
mov
sub
lock
out
fsubs
fnsave
ja
inc
stos
fildll
call
movsl
scas
mov
aas
mov
mov
repz
push
jecxz
and
fisubs
adc
ds
xchg
lds
dec
jecxz
jns
fnstcw
scas
mov
pop
xlat
mov
js
adc
xlat
xchg
sub
out
sbb
int
subl
bound
arpl
inc
popa
mov
push
xchg
push
cmpsb
xor
or
pop
cmp
lods
ss
cmp
xor
or
xchg
mov
in
nop
push
jecxz
xchg
jae
sbbl
clc
fs
icebp
mov
lods
loop
cmp
in
xor
leave
aaa
clc
inc
test
sbb
repnz
into
dec
ja
inc
lods
inc
sti
xchg
fninit
ljmp
inc
cmp
mov
pop
cmp
dec
jge,pt
adc
scas
scas
sbb
xor
stos
enter
daa
or
mov
mov
testb
movsb
mov
test
lock
fwait
or
mov
xchg
add
or
jbe
scas
and
leave
mov
pop
adc
push
mov
cld
and
mov
in
jle
inc
inc
xor
jbe
mov
mov
jo
into
out
pop
mov
fnstenv
cmpps
shll
cs
jbe
insb
xchg
shr
lret
xchg
push
out
xor
mov
lods
sbb
push
in
jnp
jnp
ret
bswap
or
inc
les
popf
arpl
sbb
cmp
cmp
jno
pop
jmp
enter
lret
pop
insl
inc
and
dec
mov
inc
addr16
xchg
pop
cmpsb
xchg
dec
cmp
push
mov
loopne
into
fisubl
stos
andl
xor
dec
push
in
pop
loop
dec
jge
or
push
mov
gs
sti
je,pn
inc
sub
cli
cltd
rol
cld
cld
sbb
push
add
adc
or
xchg
clc
scas
jne
dec
fistps
es
mov
add
mov
pop
xor
jb
sbb
lods
lahf
outsb
popf
cltd
inc
popa
and
adc
popf
and
fistpl
xor
std
inc
out
daa
ret
and
cs
mov
fadds
scas
jge
call
mov
je
mov
incb
pop
orl
jecxz
xorl
xchg
sbb
push
dec
jae
xor
push
jbe
movsb
cmp
cmpsb
out
cli
xchg
adc
shll
dec
fnstcw
lds
mov
inc
pop
sub
jb
js
movsl
sbb
inc
in
loop
pop
or
mov
mov
cli
sub
adc
outsl
mov
add
pop
mov
aaa
fwait
and
or
data16
fsubr
inc
fwait
test
sahf
mov
cmp
subb
adc
call
jmp
pop
stc
jne
sub
daa
fstp
mov
add
stc
rcrl
scas
jo
dec
ficompl
pop
and
lret
int3
add
dec
not
ja
jb
or
pop
popf
mov
lahf
or
in
cmp
add
mov
fisttpll
adc
jge
lret
jle
fs
ret
cmp
repnz
adc
push
mov
mov
sbb
inc
add
mov
lods
sub
sub
mov
xlat
mov
lock
sub
cmp
sub
xor
rol
cmp
lret
in
hlt
aaa
sti
sbb
fldcw
movsl
into
cld
or
jg
in
xchg
sbb
jae
daa
lret
ret
pop
push
xchg
or
sub
in
fnstsw
rcrb
mov
movsl
in
adc
push
mov
add
xchg
inc
jbe
add
popf
cmp
les
pop
jl
cmp
mov
cmp
cmp
xor
in
jbe
hlt
ror
pop
push
ljmp
lahf
adc
mov
sti
hlt
lret
in
es
cmpsb
sarl
xchg
scas
sub
fistpl
int
test
jns
adc
xchg
push
in
pop
and
mov
int3
aam
push
and
dec
ds
rorb
push
je
jne
mov
cs
loopne
or
add
in
mov
add
addb
ds
test
pop
std
xchg
rorb
add
test
xor
dec
cmp
and
movsb
jp
fldt
fsubr
inc
and
ljmp
lods
lret
ljmp
jle
mov
outsl
mov
mov
sti
stos
sbb
lret
jmp
and
mov
xor
sbb
push
daa
imul
cmp
add
xor
or
pop
faddl
clc
idiv
cmc
push
fdivs
lods
test
pop
ret
add
pop
test
cmp
pop
cmpsl
cmp
mov
je
orb
xor
nop
mov
pop
gs
not
out
push
in
iret
leave
xor
or
add
xchg
pop
xchg
add
push
cmp
dec
pop
jmp
aam
inc
aaa
int3
pop
shll
repz
movsl
mov
aad
push
dec
fiaddl
popa
dec
jmp
int3
jmp
outsl
testb
pop
das
sub
shl
jo
out
xlat
enter
ret
dec
cmpsb
mov
and
sbb
inc
add
and
mov
adc
cmpb
fisubrs
movsl
mov
adc
arpl
lcall
inc
int
mov
outsl
inc
mov
push
icebp
sbb
jle
mov
inc
stos
or
stos
or
in
dec
push
push
fimull
push
pop
mov
outsl
mov
mov
popa
js
mov
pop
mov
or
sbb
ja
and
aas
test
dec
arpl
loope
jno
sub
repnz
aam
xchg
jbe
fists
lahf
jno
call
sbb
pop
ljmp
mov
mov
cltd
out
in
mov
ret
aad
or
pop
sahf
push
inc
sub
or
fucomip
mov
xchg
inc
or
pop
shrl
jnp
sub
fisubl
xor
jno
cwtl
mov
inc
jne
pop
and
pop
push
bound
shl
push
add
cltd
mov
inc
mov
fwait
sub
in
sub
xchg
pop
inc
sub
pop
jnp
int
jecxz
push
xor
cmp
sbb
cmp
pop
adc
cmpsb
in
mov
fldt
add
inc
xor
je
dec
add
add
arpl
xchg
sti
in
std
pop
out
cmp
repz
ficoml
imul
pop
test
loopne
xlat
pushf
push
shl
outsl
mov
adc
mov
jae
cmc
xchg
cmp
sbb
pushf
int
sub
cmovp
je
mov
ret
pusha
sub
jo
and
or
les
dec
outsl
mov
dec
outsb
lret
push
or
dec
push
or
ljmp
xor
xchg
push
push
out
xchg
pop
pop
insb
jnp
je
push
outsl
xchg
fistl
jb
adc
gs
sub
push
push
lock
out
lret
adc
sbb
pop
inc
fildl
inc
sbb
dec
xor
loope
fstps
mov
inc
dec
xchg
mov
xchg
pop
adc
jge
sbb
out
pop
lods
jge
out
in
mov
lods
sub
test
inc
les
dec
and
in
xor
outsl
outsl
jle
inc
insb
mov
shll
sub
push
shll
adc
enter
bound
fimull
in
stos
mov
adc
hlt
idivb
jg
fdiv
xor
mov
xchg
fisubrl
lock
mov
hlt
mov
pop
mov
clc
and
mov
fsubrl
rorl
xor
mov
aas
jns
and
adc
ficompl
push
adc
mov
mov
mov
lds
fnstcw
xor
cwtl
hlt
inc
ss
xchg
and
mov
push
cmpsl
sbb
mov
dec
ljmp
dec
xor
push
imul
and
add
cmpsb
inc
or
out
rolb
adc
and
inc
mov
mov
inc
arpl
push
mov
xor
lods
sbb
mov
fdivs
pushf
shll
in
pop
mov
imul
hlt
pop
push
pop
icebp
push
add
push
adc
add
or
popf
call
aaa
mov
and
add
cmp
rcrb
sub
jle
xor
dec
pusha
cmc
adc
mov
push
pop
push
arpl
jg
and
mov
daa
adc
sar
push
hlt
push
aad
inc
loope
cmp
fistps
int
popf
mov
ret
fisttpll
pop
mov
cmp
inc
andb
cmp
pop
add
inc
loop
sub
xchg
inc
push
xlat
inc
xor
jae
test
fs
test
lea
mov
pop
jns
fyl2x
jecxz
push
ficoml
jo
imul
fmuls
inc
outsb
xchg
xchg
out
jmp
xchg
mov
or
fwait
mov
mov
fistps
inc
enter
pop
call
fcomi
add
dec
into
pushf
mov
les
mov
cmpsl
and
insl
xor
imul
stos
inc
mov
pop
lock
push
adcb
scas
pop
pop
push
mov
mov
mov
cld
enter
icebp
cld
in
mov
xor
cmp
sbb
mov
mov
or
or
movsb
pop
dec
jne
cmp
mov
and
or
pop
push
out
mov
into
daa
mov
movsl
nopl
fwait
int
adc
dec
mov
rcrl
adc
imul
pop
es
add
stos
push
push
jns
je
push
fmulp
push
push
lods
xchg
xchg
outsl
popa
jl
mov
mov
inc
gs
movb
loope
mov
adc
mov
sbb
rolb
cmc
fisttps
and
std
fs
inc
jns
nop
test
adc
mov
dec
rorb
xor
sahf
sti
rorb
mov
sbb
dec
xor
push
xchg
mov
add
mov
dec
lock
testb
adc
pop
mov
sbb
pop
xchg
push
cmp
clc
adc
in
cmp
xlat
idivb
push
lds
mov
and
sbb
out
repnz
mov
shrl
or
dec
loop
lcall
xchg
push
inc
fdivl
xor
testb
adc
or
or
mov
sar
or
pop
movsb
mov
int3
pop
pop
dec
lods
andl
fsubrs
or
cmc
jecxz
adc
mov
mov
and
addr16
enter
xchg
push
fwait
jmp
mov
fistpl
mov
xlat
sub
push
js
pushf
adc
inc
das
scas
int
arpl
aam
movsl
mov
and
insl
adc
jo
jae
dec
push
and
and
leave
lahf
int
cmc
xor
sar
mov
mov
push
daa
lahf
pop
sahf
cmp
jbe
jb
ja
loop
hlt
mov
jbe
sbb
test
xchg
fimull
or
repnz
jp
not
aam
scas
iret
fisttpl
jl
mov
stos
mov
mov
dec
loope
or
and
loopne
jb
push
repnz
sbb
mov
fdivs
stos
test
cld
xor
in
cmp
mov
add
cmc
fwait
outsl
out
outsl
negb
iret
and
xor
adc
js
ja
cmc
out
push
and
cmp
mov
rclb
dec
in
add
out
test
mov
clc
in
mov
push
pop
aaa
mov
mov
lods
aaa
sbb
mov
icebp
mov
and
dec
mov
out
mov
jno
mov
arpl
loopne
xchg
sbb
vmread
xor
pop
mov
mov
lret
imul
jnp
mov
xor
movsl
and
lcall
andb
loop
pop
jmp
cmp
xor
rclb
inc
andb
push
inc
ret
push
adc
mov
cmovo
jecxz
push
and
add
xor
loope
push
ret
pop
sbb
jge
mov
mov
jle
fists
push
mov
mov
pop
fs
and
jg
inc
leave
imul
cli
and
xchg
dec
imul
jmp
cmc
add
pop
fxch
shlb
ret
dec
push
ficoms
or
or
popl
dec
loope
clc
or
cmp
cmp
popa
test
movsb
cmpsl
push
jmp
stos
pop
inc
mov
imul
test
xchg
adc
js
push
inc
push
mov
sbb
pop
pushf
mov
xchg
push
imul
jb
mov
insb
dec
jl
addr16
jns
imul
push
wrmsr
shr
mov
out
mov
mov
mov
mov
or
out
or
pop
dec
sti
cmp
mov
and
push
jmp
lret
pop
mov
add
ja
and
dec
mov
test
inc
or
insl
movsb
push
ljmp
adc
sub
or
adc
in
jecxz
jmp
aad
inc
mov
mov
rcll
push
popf
shlb
add
mov
push
and
jns
mov
ret
rcll
fsts
inc
lret
cmp
and
insb
pushf
cmpsl
stc
add
into
pop
mov
outsl
adc
and
adc
out
sahf
sub
or
aaa
lcall
add
dec
sub
adc
aaa
mov
mov
sub
in
loop
adc
dec
cmc
push
shll
inc
inc
jg
insb
adc
adc
mov
gs
jno
cmp
dec
mov
ss
mov
in
jb
sar
inc
call
lds
sub
jns
icebp
sub
sub
scas
js
xor
out
in
inc
mov
lret
cmpsb
add
cmp
iret
xor
mov
movsb
add
out
cltd
lods
xlat
and
sub
jge
mov
iret
mov
andl
nop
inc
shrb
aas
add
jbe
es
test
inc
stc
xlat
xchg
clc
push
pop
adc
lods
jle
imul
lret
mov
and
or
pop
data16
ret
cld
sarl
into
sub
xlat
cwtl
sub
aad
or
xor
mov
mov
mov
arpl
push
mov
sarb
xchg
ret
sbbw
pusha
dec
mov
sbb
pusha
xchg
bound
shlb
inc
cld
sub
xchg
xchg
jno
gs
mov
pop
cmp
mov
insl
sbb
mov
jns
inc
xchg
inc
hlt
push
ret
pushf
rorl
xchg
lea
sarl
mov
add
jle
sub
xchg
xchg
fs
orb
nop
inc
adc
test
hlt
cmp
popw
addr16
dec
popa
inc
sbb
dec
xchg
add
nop
pop
lock
mov
ss
lret
mov
mov
je
xchg
shll
mov
in
fidivrl
mov
lahf
push
push
sub
je
cld
inc
enter
pop
pusha
arpl
and
hlt
std
pop
in
mov
int
jle
in
das
mov
push
jge
sbb
nop
mov
push
pop
xchg
shl
insl
lret
push
push
cmp
inc
sbb
sbb
dec
push
mov
popa
cmp
jnp
sbb
pop
test
icebp
decb
xchg
lods
lods
aaa
mov
icebp
pop
mov
scas
stc
leave
mov
or
pop
mov
mov
inc
add
inc
pop
jge
jmp
sbb
adc
pop
xchg
add
out
hlt
jb
xchg
stos
lret
sub
dec
sub
push
leave
frstor
in
mov
jne
adc
shrb
xor
loopne
and
pop
pop
push
adc
out
mov
incl
mov
mov
adc
gs
and
xchg
mov
test
jecxz
cmpsl
lea
mov
mov
mov
xchg
cmp
pusha
push
push
adcb
shld
pop
add
sahf
ds
xor
pop
sbb
cli
loope
jmp
ds
xor
pop
inc
mov
loope
iret
das
sbb
into
inc
push
xchg
fwait
je
sub
or
mov
cs
outsl
stc
pmuludq
jno
arpl
jno
enter
xchg
daa
int3
aaa
xchg
fldt
loope
fidivrs
cmpsl
sub
movsl
lods
loope
lods
add
xor
mov
pop
mov
aad
out
dec
out
gs
data16
jns
or
jl
mov
and
cmp
jno
rol
mov
into
inc
cmp
nop
jbe
test
es
sbb
jge
cmpsb
into
hlt
movsb
pop
inc
xlat
data16
add
adc
orb
pop
pop
adc
pop
dec
bound
jg
in
or
in
push
cmp
or
xlat
aaa
adc
pop
jno
inc
inc
add
lahf
pushf
shlb
repnz
out
xchg
andl
test
dec
jp
jae
clc
call
lods
mov
mov
popf
cmp
pop
xor
mov
rcrl
push
xchg
aad
fdivr
push
je
nop
jecxz
mov
mov
rcll
jb
cmp
mov
inc
push
int3
xchg
inc
gs
je
push
push
push
out
dec
ja
imul
in
movsb
xor
xor
mov
mov
xchg
and
sub
lods
test
call
mov
testb
pop
lods
in
icebp
add
or
jnp
mov
mov
inc
popa
mov
int
xor
shll
cwtl
and
mov
sar
add
rcrb
arpl
dec
cli
push
out
sub
in
test
mov
pop
push
das
jns
cmpsb
mov
mov
div
pop
movsl
andl
inc
sub
mov
mov
sub
mov
ljmp
in
sub
aas
adc
push
repz
jno
mov
mov
outsb
sti
xor
xchg
fcoml
int
jmp
test
ss
lret
xchg
inc
movsl
mov
mov
mov
cmc
sub
push
mov
sub
ret
out
mov
mov
mov
imul
fdivp
cltd
fists
sbbl
mov
clc
push
mov
mov
mov
es
or
sub
xor
xchg
fcmovne
pop
or
and
mov
xchg
adc
sub
cmp
sbb
sub
and
leave
mov
out
movsb
mov
repnz
push
scas
pop
aaa
aas
dec
int3
repnz
ss
push
cmp
jp
stos
iret
mov
cli
xchg
mov
sahf
mov
js
in
or
ret
scas
pop
xchg
cmpsl
push
or
jp
insl
sub
jbe
mov
push
in
lock
add
jnp
or
add
add
cwtl
mov
gs
sar
in
sbb
lcall
scas
lock
call
sub
popf
xchg
out
je
xor
jae
add
jae
dec
ljmp
jle
mov
jnp
pop
push
adc
enter
or
leave
out
jno
dec
pop
insl
jge
pop
nop
and
jnp
sbb
jo
out
cmp
and
mov
aam
cmp
jecxz
push
fstp
lea
push
pop
dec
nop
mov
fsubr
sub
lcall
pop
aad
rcrb
enter
mov
push
jecxz
sbb
pop
aaa
sub
jb
xchg
inc
mov
push
cmc
frstor
mov
popf
xchg
stc
bound
std
mov
popf
dec
cltd
or
add
leave
push
xor
push
imul
jnp
mov
in
and
xor
js
ljmp
xchg
adc
orb
imul
and
sub
arpl
sbb
mov
mov
add
cli
push
cmp
mov
sub
stc
push
pop
dec
mov
mov
outsl
adc
loopne
in
jno
dec
js
cmp
inc
test
mov
mov
or
fs
cmp
mov
add
insl
lahf
popa
insb
cmc
add
leave
fmuls
rcr
data16
jb
add
test
movsb
mov
aam
push
sahf
xor
les
out
push
les
mov
lock
lret
or
sub
mov
push
and
test
scas
sub
jge
ds
loop
rcrl
push
push
cmc
dec
ljmp
dec
pop
cvtdq2ps
imul
jnp
dec
ret
mov
int3
stos
or
lahf
test
mov
and
push
xchg
lds
out
scas
pop
xchg
push
insb
sbb
fnstenv
aam
jnp
push
adc
fsubr
add
dec
rep
pop
xchg
xor
cltd
adc
lods
sub
scas
repnz
xor
add
je
mov
and
stos
sbb
movsb
les
pop
adc
push
fistl
movsb
lcall
push
fstpt
dec
lahf
je
test
jnp
mov
dec
adc
cltd
cs
add
mov
adc
mov
mov
mov
fbstp
rcr
add
mov
gs
sub
jns
lods
inc
ja
mov
mov
into
pop
lds
and
rol
movsl
inc
mov
pop
into
test
test
in
push
push
mov
jno
ljmp
mov
jg,pt
jl
scas
andb
std
pop
or
movsl
mov
push
jno
test
leave
subb
test
push
inc
mov
addl
pop
ljmp
pop
or
mov
lock
orb
mov
mov
jp
mov
and
shlb
or
and
push
jge
inc
mov
inc
shl
jmp
into
sub
mov
sar
cmpsb
pop
cmp
xor
repz
js
mov
fcmovnbe
jnp
sub
xor
sbb
pop
mov
stos
sbb
adc
ja
das
lahf
clc
lahf
push
insl
ljmp
cmp
push
sub
sub
ret
jmp
faddp
mov
xchg
lret
out
xchg
hlt
pop
push
pushf
mov
shr
mov
xchg
je
mov
push
outsb
inc
mov
cmp
pop
push
inc
jns
mov
xor
repz
hlt
lock
rcl
in
es
scas
and
adc
xchg
inc
pop
lea
sbb
enter
daa
and
pop
jge
ljmp
fnstcw
les
xchg
cld
inc
xchg
or
and
xchg
push
jb
cmp
xchg
xchg
mov
scas
push
xchg
xchg
pop
ljmp
cmp
mov
push
push
jecxz
mov
and
aas
cmpsb
rol
sub
xor
imul
jge
inc
jmp
daa
ds
inc
and
mov
push
out
es
cs
mov
pop
and
stos
pop
js
insl
pushf
adc
loop
jae
mov
adc
jecxz
jl
xorb
sub
xchg
mov
hlt
pop
and
push
addr16
std
cmp
mov
inc
rorl
clc
pop
xchg
mov
xchg
adc
lcall
jbe
pop
add
test
stc
xchg
stc
fisttpl
mov
pop
mov
dec
sti
cs
je
mov
mov
mov
push
rcpps
and
ds
adc
pop
xchg
jecxz
lea
xchg
fistpll
fs
popa
pop
insl
jno
mov
pop
add
out
call
popf
mov
mov
mov
jecxz
and
or
addr16
mov
adc
adc
in
mov
addr16
lret
jge
xor
xor
mov
ljmp
ficompl
and
fwait
sbb
nop
adc
imul
bound
or
aas
rcrb
lds
cwtl
adc
stc
shl
mov
dec
mov
push
mov
xor
sub
dec
test
mov
lods
js
pop
jmp
xchg
dec
cld
and
xor
sub
icebp
or
mov
fstpl
js
andl
inc
xchg
adc
mov
or
dec
inc
add
cmp
cvttps2pi
je
push
mov
lahf
loopne
filds
and
push
lds
ret
pop
mov
into
or
pusha
mov
dec
push
mov
jle
or
xchg
push
lods
aas
sarl
rclb
add
out
fidivrs
pop
div
mov
sahf
stos
xor
repz
nop
out
jp
fstp
sub
jecxz
mov
mov
cmpsb
inc
cmp
dec
lret
stos
outsl
push
pusha
dec
fimuls
mov
int3
mov
xor
das
testb
add
inc
and
dec
xchg
addr16
sbb
jo
xchg
cmpsl
jae
orl
sub
push
repnz
mov
into
idiv
xor
fs
pop
lock
faddl
adc
stos
into
sbb
mov
shrb
pop
in
cmp
mov
in
add
gs
dec
dec
repz
cs
ror
and
push
jl
cmp
mov
and
inc
sub
js
dec
mov
jmp
dec
cmpsb
push
push
xor
xchg
in
or
mov
ret
mov
enter
les
cli
arpl
shrb
mov
loope
int
mov
popf
dec
fbld
dec
pop
ds
shlb
add
sbb
mov
cmp
add
fimull
xor
imul
lds
pop
pop
push
loop
xchg
or
cwtl
add
mov
inc
insl
mov
push
movsl
in
insl
jp
lds
xor
in
and
rorl
mov
sbb
and
lret
jle
or
scas
mov
push
mov
aaa
dec
and
imull
ds
loop
data16
rorl
out
push
sbb
mov
mov
leave
xchg
and
cmp
flds
add
push
in
xor
inc
xchg
lret
lcall
pcmpgtd
aad
rcr
mov
adc
dec
jmp
add
cmpsb
in
iretw
imul
lcall
add
jge
xchg
lcall
sub
enter
call
das
clc
flds
adc
dec
pop
pop
xchg
iret
cld
inc
dec
xchg
fisubrl
mov
repnz
push
xchg
inc
mov
fdivrl
inc
test
sub
add
ds
aam
es
fstps
std
ss
incb
je
mov
pop
sbb
lcall
mov
xchg
cmp
sbb
sbb
cmp
dec
aas
test
dec
outsb
jno
push
mov
add
xchg
or
adc
iret
mov
inc
jno
dec
andb
ds
fwait
cmp
jge
mov
push
and
fmul
mov
add
addr16
or
mov
fidivs
lea
lret
pop
insb
push
sahf
jmp
ficoml
pusha
dec
ret
jmp
orb
aam
sub
jmp
fwait
dec
loop
shlb
shlb
dec
and
and
xchg
lret
pusha
add
mov
mov
data16
cmp
inc
cmp
sahf
cmp
notb
jge
jp
mov
in
loope
js
popa
push
mov
rclb
inc
add
dec
dec
jne
cld
mov
in
mov
and
call
or
mov
out
adc
stos
fidivrs
sahf
push
push
test
std
cmp
xor
xchg
pop
dec
mov
fcmovne
popf
adcb
inc
xor
cld
mov
jle
leave
paddq
sub
xor
pop
mov
popa
lea
insl
sahf
js
or
ja
rcr
push
int
pop
pusha
xor
mov
ljmp
pop
jle
psubq
sub
call
inc
xor
test
in
push
leave
mov
icebp
popf
lea
xor
lods
js
jnp
fisubrs
loopne
pop
movsl
inc
adc
insb
mov
push
sbb
subl
or
cmpsb
sub
push
add
push
inc
addr16
xchg
mov
stos
cmp
insl
int
loopne
cld
dec
lds
or
jmp
mov
scas
and
adc
clc
lea
and
nop
mov
sbb
jbe
push
mov
inc
mov
repnz
dec
add
sbb
jecxz
and
pushf
test
and
xchg
push
or
cmp
push
mov
andb
lods
push
adc
repnz
xchg
vmwrite
data16
or
inc
in
dec
jb
loope
fwait
loop
mov
inc
dec
jo
rcrl
dec
fs
dec
in
rcl
aaa
add
jle
fistl
xchg
mov
push
xlat
aad
fsubrs
add
and
test
std
inc
mov
movsl
jo
movsb
movsb
adc
inc
pop
arpl
pusha
push
inc
sub
push
mov
fldcw
sub
hlt
xchg
dec
stos
jae
jg
mov
sbb
cmp
bound
mov
lahf
clc
mov
jae
sub
inc
notl
cmp
cli
mov
repnz
movsl
cmc
sub
test
out
jbe
adc
arpl
shlb
fidivs
loop
loope
mov
cmp
cmp
cmp
pop
rcrb
int
andb
fcomps
jo
dec
jecxz
enter
ret
out
int3
xor
rorb
test
loope
lret
out
or
pop
mov
imul
dec
ljmp
sbb
add
xchg
jno
loopne
inc
es
add
add
jne
in
push
fldcw
fistpl
pop
lods
jb
pushf
lods
cwtl
mov
jl
cmpsl
mov
pop
lock
mov
xlat
jns
jecxz
cs
mov
repz
ja
movsl
inc
loopne
xchg
aas
nop
insl
dec
nop
lea
repnz
int
adc
fidivl
dec
insb
int3
pop
int3
jb
push
sub
movsb
dec
fildl
mov
je
jno
cmpsl
sub
repnz
jle
lea
mov
sbb
test
xchg
add
insl
or
loopne
ret
sub
lods
add
cs
cmp
js
test
sbb
mov
mov
mov
xchg
mov
xchg
ret
mov
push
mov
mov
jmp
ret
out
sbb
ljmp
dec
sub
fistl
xchg
aas
pusha
fisubl
idiv
mov
adc
push
inc
scas
cmp
jl
mov
ljmp
mov
clc
jne
orl
int
xchg
test
mov
or
mov
cmp
lock
jae
push
dec
ret
inc
mov
setp
ret
into
inc
and
and
call
arpl
repnz
shll
mov
clc
xchg
loop
mov
inc
rcr
and
in
xor
cs
mov
int
pop
daa
and
jmp
mov
jns
cwtl
inc
addr16
push
xchg
mov
mov
xor
fldl2t
ds
pusha
and
and
insb
fmull
lcall
cltd
bound
daa
bnd
pop
push
sub
pop
es
xor
test
testb
leave
imul
adc
lret
out
mov
sub
aam
dec
mov
xchg
iret
pop
shlb
mov
adc
cs
add
push
inc
mov
cmpsb
in
push
lods
cmpb
lods
add
ljmp
or
mov
xor
dec
jl
lock
mov
push
push
jl
and
lods
inc
mov
int
stc
jle
icebp
lret
loopne
mov
movsl
or
in
loopne
lcall
adc
cmp
movsb
mov
sti
les
scas
add
sbb
loopne
inc
in
push
sbb
std
push
out
lods
enter
mov
cmp
cmp
push
push
mov
test
mov
test
xlat
dec
push
xchg
inc
dec
adc
jmp
push
push
cmp
stos
insl
loop
sbb
or
jb
daa
fisubl
lcall
outsl
and
sahf
repz
orl
mov
mov
clc
int3
pop
push
sub
adc
out
cli
int
bound
scas
test
mov
lds
loopne
faddl
push
test
or
cmpsb
imul
push
stos
xchg
sub
xor
int
inc
jns
add
pop
out
fimull
dec
sbb
or
push
jl
add
sbb
cmc
cmpsl
lods
xor
inc
loopne
orl
push
frstor
fcmovnb
inc
or
pop
je
mov
cli
cmp
mov
mov
and
loope
test
inc
sar
loop
pop
push
cmp
dec
dec
inc
imul
mov
mov
clc
jns
fdivrs
fstl
xchg
sbb
mov
aam
pushw
cmp
fwait
je
mov
sbb
xor
scas
add
cmp
andb
mov
cltd
mov
mov
cld
lds
sarb
jle
int3
push
lcall
lods
push
movsb
dec
mov
mov
dec
ja
test
pop
scas
add
fdivl
in
gs
adc
pop
mov
out
xchg
and
and
repz
cwtl
add
cltd
ds
cmp
dec
jne
inc
imul
lods
shlb
jns
std
xor
lea
xchg
iret
mov
pop
dec
int3
fistl
push
stc
call
mov
sub
or
add
add
cwtl
xchg
orl
xor
mov
xchg
int3
lcall
mov
stos
adc
shll
dec
add
adc
movsl
aam
fdiv
test
pop
pop
dec
fld
mov
mov
push
jno
push
in
lods
ss
addb
xchg
daa
sub
rcll
push
aas
mov
ds
xor
in
out
sahf
mov
sub
sarl
int
icebp
mov
xor
movsl
xor
cmp
and
shrb
fwait
add
into
inc
scas
xlat
adc
jne
jae
add
pop
ret
cltd
pop
adcl
insb
jno
mov
xor
loope
fistl
test
out
and
js
jmp
pushf
mov
xor
bound
scas
fisubrs
cmp
stos
out
outsb
loopne
mov
lret
addr16
adc
sub
fnstsw
sub
ljmp
je
fbld
mov
sub
popf
cmc
leave
dec
pop
jbe
dec
loop
sbb
divl
std
adc
out
mov
sarb
mov
ret
xchg
jecxz
mov
and
cld
stos
mov
dec
or
daa
add
push
data16
and
sub
push
or
mov
mov
pop
mov
add
outsb
repnz
xor
pushf
mov
push
into
fldt
call
cmp
stos
cs
stos
pop
movsb
and
ss
jle
add
fmull
mov
jp
negb
ret
cmp
adc
xor
movsb
xor
sub
jno
gs
cmp
inc
loope
xchg
inc
dec
pop
xchg
test
cmp
mov
push
mov
mov
dec
jae
and
mov
flds
or
loopne
arpl
push
xchg
fisttps
jno
or
xchg
cmp
xor
popf
ja
xor
outsl
loope
adc
sahf
sub
aad
mov
jp
add
xorb
add
mov
into
xor
insl
sub
sti
jns
dec
and
pop
jbe
sbb
fiaddl
push
cltd
loopne
insl
loopne
outsl
enter
push
pop
xor
jns
jo
int3
neg
xchg
push
in
jp
mov
push
add
fcomp
inc
mov
stos
sbb
pop
sub
add
or
lret
and
mov
jbe
stc
inc
dec
inc
arpl
es
int3
in
enter
dec
cltd
lret
mov
sbb
fimull
insb
test
jno
lcall
pop
movl
shr
mov
cmp
fisubrl
aad
cltd
cmpsl
jns
adc
addr16
hlt
shrl
dec
and
lret
mov
jnp
mov
ds
out
out
fisubl
and
pop
mov
out
test
push
pusha
and
fs
jno
push
add
sbb
outsl
int3
int3
rclb
ja
sub
mov
aaa
sahf
loopne
mov
int3
bound
and
popa
out
daa
or
and
push
jne
add
lcall
jne
nop
mov
add
mov
lret
call
and
mov
enter
add
es
lret
aas
aam
add
push
js
lahf
or
mov
add
es
cmp
mov
into
lret
dec
insb
arpl
loopne
dec
pushf
xchg
fdiv
clc
out
push
out
mov
out
nop
cmc
addr16
pop
and
scas
sbb
xchg
or
adc
gs
dec
or
jmp
ljmp
in
bound
mov
pop
dec
sub
test
enter
mov
std
pop
sti
push
lcall
ret
dec
push
repz
mov
loope
lds
inc
or
fcoms
pushf
ja
pop
outsb
push
xchg
repnz
inc
fsubrs
cmpsl
add
in
movsl
clc
lahf
inc
hlt
push
jmp
leave
push
cmp
cmp
jnp
pusha
xchg
fstpt
sbb
scas
idiv
push
xchg
adc
test
cmpl
xchg
lcall
fwait
aaa
push
inc
and
xor
aaa
cmp
test
lret
jl
pop
dec
xlat
mov
mov
clc
and
dec
add
mov
sub
inc
inc
pop
sbb
mov
icebp
dec
aad
push
jno
std
sarl
sbb
or
push
loop
jl
mov
idivb
mov
lcall
jb
sub
mov
sbb
xor
mov
dec
xchg
jns
push
or
adc
cmp
cmc
jnp
push
xor
fisttpl
das
ret
mov
fwait
rcr
dec
mov
cmp
je
mov
sub
mov
lods
pop
ret
push
lds
push
popf
scas
fwait
add
popa
add
sbb
outsl
mov
sub
sbb
inc
mov
or
mov
or
jle
and
push
push
or
mov
cltd
or
arpl
iret
movsl
mov
inc
lods
mov
cmp
repz
or
fisubrs
xlat
iret
std
stos
push
cmpsb
xchg
cmc
pop
mov
fwait
in
mov
std
in
ret
and
testb
out
lock
jle
sbb
inc
and
sub
rclb
jmp
add
data16
jmp
cmp
lcall
cmp
sahf
testb
inc
shll
pop
enter
dec
ljmp
mov
adc
stos
pop
pop
pop
cmpsl
pop
push
mov
and
divl
sbb
pop
hlt
arpl
mov
lcall
sub
add
xchg
jl
mov
cmp
lcall
inc
pop
sub
and
push
popf
je
mov
cld
lret
pop
sbb
test
movl
mov
xor
xor
call
je
pop
inc
inc
sbb
dec
xchg
shrb
jecxz
push
div
mov
fisttpll
gs
test
jl
jb
pop
inc
lcall
pop
adc
aas
scas
pop
mov
inc
out
inc
dec
cmp
sti
lahf
cmp
pop
insb
fwait
jne
mov
ss
push
pop
jle
call
cwtl
xchg
push
mov
ss
in
jb
hlt
mov
test
repz
mov
std
xor
test
push
jmp
nop
push
push
inc
fsubl
enter
js
jg
xor
push
mov
adc
shl
dec
mov
and
or
xor
lcall
pusha
pop
or
test
mov
daa
and
stc
dec
mulb
jecxz
fcmovne
inc
jno
or
jb
xchg
sub
adc
mov
lods
ret
xchg
cmp
pushf
cli
or
gs
sub
insl
jle
call
imul
xchg
and
mov
push
add
fstpt
xchg
daa
rcll
in
pop
cld
mov
fidivrs
sbb
push
rcrb
jp
arpl
enter
ret
lahf
test
hlt
bound
xor
out
push
movsl
js
fucomi
pop
imul
scas
bound
inc
mov
inc
xor
xlat
mov
sahf
test
out
scas
rorl
cli
incb
jno
movsl
and
xlat
jb
incb
jecxz
pop
push
iret
jae
pop
into
push
adc
pop
push
inc
or
push
add
scas
and
loop
std
add
popa
sbb
sub
xchg
pop
repz
jno
dec
js
pop
pop
cmp
sbb
nop
pop
mov
adc
pop
cld
xchg
xchg
push
in
mov
jbe
mov
pusha
bound
jne
or
inc
xor
dec
loop
imul
mov
jg
sub
mov
aam
fistl
push
aam
sahf
enter
rcl
mov
add
cmpsl
sar
cs
jmp
setae
pop
aaa
int3
mov
lret
in
xor
fsubrs
mov
les
cmp
push
push
loop
loop
xchg
sti
xor
arpl
sub
ficompl
mov
sahf
daa
mov
outsb
cwtl
fcomip
add
mov
bound
mov
jb
mov
add
push
mov
lea
outsl
stos
addb
sbb
movsb
add
dec
mov
cmp
cmp
inc
mov
jno
rdtsc
push
cli
mov
and
cmpsl
inc
or
and
cwtl
lcall
repnz
aad
mov
or
icebp
xchg
adc
add
in
dec
sub
jo
fsubl
cmp
adc
cmp
popl
jmp
mov
xchg
mov
imul
dec
mov
addr16
cmpsl
imul
xor
in
dec
pop
loope
into
jecxz
sub
dec
loop
scas
int3
pop
scas
iret
js
or
inc
mov
sbb
cs
lock
mov
mov
fisubrs
push
inc
cld
fmull
sbb
sub
mov
test
cmp
jmp
aaa
enter
or
stc
test
rcrl
xchg
dec
pushf
jns
sbb
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
push
add
rolb
cmp
push
add
mov
add
add
add
or
pop
add
mov
