jae
scas
adc
out
sbb
scas
stos
shll
push
flds
enter
test
gs
adc
dec
fcomps
dec
jl
cltd
dec
daa
mov
cwtl
cmp
push
jne
nop
xor
mov
jno
aaa
push
mov
xor
jnp
push
cmp
gs
add
arpl
dec
push
adc
test
lock
mov
xor
hlt
and
adc
add
call
in
cmp
out
mov
cmp
xor
out
pop
push
lods
push
pusha
in
fldenv
stc
nop
lret
in
cmp
je
mov
test
mov
imul
mov
rolb
add
pop
mov
xchg
out
insl
stos
pusha
pop
sbb
push
jo
scas
add
popa
pop
push
mull
loopne
repnz
shlb
cld
dec
jmp
jbe
add
add
jle
lea
clc
cwtl
dec
sarl
mov
push
mov
jbe
sbb
sti
test
orl
and
and
jne
dec
jne
push
cmpl
sub
fs
int
in
adc
adc
jo
add
outsl
lods
mov
cmpsb
push
xor
scas
dec
clc
fnsave
fs
mov
dec
sub
ficoms
addr16
in
lock
sub
sub
in
int3
aam
push
cmp
and
and
iret
inc
fidivrs
filds
scas
movsb
xchg
and
pusha
inc
add
aam
mov
cmpsb
add
movsb
mov
xlat
loop
rcl
and
shl
or
dec
in
mov
mov
mov
push
call
rcrl
test
in
in
mov
les
mov
mov
mov
or
outsl
mov
aas
es
mov
or
mov
das
shlb
jne
ja
pop
inc
shlb
inc
sbb
inc
bound
mov
repz
daa
jo
testl
inc
push
push
jne
dec
jno
lods
sbb
sub
inc
push
scas
mov
dec
lods
sub
jo
cmc
jne
adc
addr16
pop
mov
and
sub
and
out
popa
push
dec
adc
jbe
shufps
pop
cmpsb
push
pop
xchg
mov
push
out
jg
ja
push
jo
mov
push
out
dec
stos
sarb
mov
loopne
xor
mov
or
xchg
hlt
movsl
push
jne
arpl
hlt
je
aaa
aad
pop
jne
jae
jecxz
ja
jnp
cli
sbb
jne
add
call
and
push
stos
insl
or
pusha
popa
negb
mov
pop
push
cmp
daa
push
or
pushf
cs
insb
or
add
loopne
mov
cmp
dec
lods
sub
xor
jle
cs
jle
lods
dec
stos
ret
loopne
and
pop
push
push
sti
jb
and
mov
fbld
xor
pop
inc
add
repz
adc
xchg
and
pop
add
xchg
test
fst
movsb
movsl
icebp
or
mov
out
in
inc
xchg
mov
pop
or
adc
fld
xor
xchg
rorl
test
jnp
inc
push
loope
cmp
fadd
mov
jecxz
mov
mov
call
push
lock
das
jae
test
cld
inc
pusha
inc
ja
scas
pop
mov
inc
scas
aaa
or
push
add
mov
lods
stos
cmp
test
and
jno
test
mov
inc
jb
or
and
mov
test
stos
dec
lods
or
add
push
and
aaa
adc
outsb
sub
enter
jo
adc
adc
dec
and
mov
push
xor
std
sub
xchg
sarb
xor
scas
cmpxchg
mov
data16
push
movsl
inc
movsl
movsl
gs
cld
cmpsb
sbb
pop
ds
leave
mov
outsb
jp
aam
adc
test
mov
push
adc
enter
lods
loop
fmuls
push
jns
popf
movsl
xor
testb
in
dec
and
and
inc
or
andb
push
mul
xor
in
xbegin
inc
pop
lds
int
inc
adc
mov
inc
testl
push
add
and
outsl
pop
adc
fstpt
sub
xor
negb
adc
adc
nop
cmp
movsb
push
dec
mov
mov
jb
xor
or
out
dec
jns
ficoms
push
mov
dec
lods
and
push
xlat
loope
add
cmc
mov
lods
aad
sbbb
cmp
ret
add
test
add
in
ss
xor
mov
jp
pop
out
cmc
push
shlb
mov
cmp
fstpt
daa
pop
int3
mov
sbb
ja
jle
jp
push
mov
sbb
loop
dec
cmp
insl
lds
add
lock
out
insl
loopne
enter
jg
jge
outsl
js
out
push
in
shl
cwtl
outsl
dec
mov
push
xor
xchg
xchg
xchg
repnz
or
in
cmp
sahf
mov
clc
scas
dec
push
pop
adc
mulb
insl
dec
call
push
jge
mov
mov
xor
loope
adc
push
and
imul
scas
ret
xor
dec
scas
xor
or
imul
shlb
sbb
popf
out
or
cwtl
int3
or
dec
dec
das
cs
insl
cmp
sarb
xchg
loop
ss
repz
dec
add
or
push
paddb
ret
push
or
mov
and
test
std
lock
dec
rcrl
jg
in
mov
xor
sahf
pop
pop
mov
xorb
repnz
stos
push
or
popf
fcmovbe
fsubrl
popa
inc
lcall
and
xor
pop
aad
pusha
lret
adc
push
int
es
cmpsl
test
test
sub
adc
sbb
in
mov
int
sub
inc
push
push
push
mov
cmpsb
in
in
mov
jns
pop
dec
lret
mov
or
or
movsb
and
pop
dec
add
pop
inc
or
pop
lret
or
outsb
and
mov
dec
cmpsb
outsl
dec
outsb
sub
out
push
cmp
mov
mov
in
popa
jmp
inc
popa
in
sbb
mov
popa
rcrb
pop
lcall
das
inc
ret
movb
cmpsl
addr16
cli
mov
add
hlt
fcomps
jl
scas
add
mov
sub
xor
jb
mov
mov
cwtl
stos
sbb
hlt
movsl
cmp
leave
sahf
dec
cmp
dec
mov
movsl
push
repnz
pop
and
xor
js
movsb
sbb
add
scas
cwtl
xchg
lea
inc
je
push
stc
xor
dec
popa
cld
lods
jp
scas
pop
and
xchg
xchg
sbb
ss
xor
inc
dec
fldcw
add
jge
mov
jg
mov
loop
es
mov
jle
inc
rolb
adc
sbb
inc
xchg
pusha
xchg
imul
outsl
push
fidivrs
add
xchg
xor
in
and
dec
xor
cmpsb
sub
pop
movsb
aaa
mov
popa
xor
out
pushf
and
sub
ljmp
sbb
or
sub
adc
rcrb
mov
inc
loope
jle
adcl
push
fdivr
dec
adc
inc
xchg
aaa
rol
push
pop
add
add
pop
or
sarl
shlb
jnp
scas
test
mov
sbb
sbb
out
movsb
push
fimull
cmc
dec
inc
xchg
fisubrs
pop
sub
mov
mov
andb
xchg
scas
adc
arpl
jno
xor
xor
test
mov
sbb
mov
mov
and
icebp
movsl
jnp
scas
push
push
jp
mov
push
push
daa
cmp
fdivs
mov
adc
sub
fs
dec
sbb
hlt
scas
es
ss
loopne
inc
and
xor
iret
or
sbb
adc
push
mov
int
mull
ds
add
sub
inc
jns
loop
adc
xchg
das
mov
and
ds
and
push
push
and
push
sub
inc
es
add
je
push
fnstcw
pushf
rcl
shr
fsubl
into
bound
inc
movl
dec
push
mov
mov
lods
pop
mov
pusha
lods
aad
fldl
arpl
scas
into
stos
jae
pop
pop
pushf
sub
adc
cli
sbb
sub
pop
cli
cmp
sahf
clc
leave
push
test
push
pusha
cmpsb
mov
xor
push
pop
xchg
cmp
cmc
jl
jmp
adc
bnd
push
push
sbb
mov
jbe
sub
push
dec
ret
iret
or
and
push
bound
icebp
push
hlt
movsb
inc
jp
les
scas
stos
sbb
hlt
bound
insb
ficoml
xchg
add
and
or
outsl
cmp
or
push
pop
dec
add
or
sub
aad
arpl
jle
jns
add
shl
add
shrl
jne
cs
cmp
ss
xor
mov
jae
jb
dec
movsl
adc
movsb
xchg
mov
push
fiadds
inc
xor
mov
sbbb
sub
xor
out
out
jae
int3
xchg
out
xor
sbb
cli
pop
or
mov
out
pop
inc
or
mov
ficompl
add
jns
jnp
cmp
and
xor
dec
adcb
call
aad
xor
pushf
jl
xchg
repz
dec
xor
dec
shrl
sbb
jnp
sbb
clc
mov
xchg
out
jnp
add
dec
popf
sbb
pop
popa
jno
data16
jle
sbb
adc
xor
pop
inc
add
les
xchg
shlb
jg
shrb
sub
rol
jno
je
cmp
xor
xor
dec
dec
cmp
mov
mov
lret
and
sub
lods
inc
xchg
mov
insl
add
push
fdivrl
inc
pop
jb
jl
cmp
xor
or
cmp
lea
scas
mov
add
stos
mov
inc
stos
sbb
xchg
dec
push
jb
ja
mov
insb
push
fyl2x
jle
adc
cs
mov
mov
cs
mov
mov
push
in
cmp
cli
scas
pop
cmc
std
inc
into
dec
cmpsb
jp
sbb
ss
in
or
mulb
sbb
jae
cmpsl
mov
add
sti
arpl
sub
mov
cmp
je
fadds
ljmp
jne
xor
inc
dec
sub
xchg
fiadds
addr16
nop
scas
sbb
rcll
push
or
ja
dec
scas
adcl
sbb
pop
in
into
pop
sub
mov
jmp
ret
jle
imulb
stos
cmp
jb
inc
jle
sub
dec
mov
repz
orb
mov
sbb
outsl
xchg
popl
xor
jae
adc
dec
rorl
and
push
into
orb
into
std
insb
outsb
and
in
mov
bound
cli
mov
pop
add
mov
fdivr
jno
stos
repnz
mov
jbe
dec
jg
mov
jnp
fisttps
push
js
ja
sahf
jle
out
dec
test
pusha
mov
mov
jae
sbb
cld
jo
push
pop
sub
in
pop
mov
divl
pop
cmc
jns
mov
and
push
mov
data16
mov
out
testb
sub
lock
addr16
out
pusha
ss
lock
rcll
push
gs
lods
push
adc
cld
mov
lret
movntps
cmp
sub
jbe
call
push
mov
test
sbb
jmp
xchg
sbb
mov
push
mov
or
add
and
pop
cmpsb
cld
int3
or
mov
lahf
cmpsb
subb
aam
or
test
icebp
incl
xorb
push
movsb
sub
bound
mov
outsb
cmp
and
loop
leave
dec
popf
dec
aaa
outsb
jg
imul
xchg
fistpl
sbb
inc
lods
inc
xchg
mov
jmp
cmp
ss
cs
and
mov
in
enter
ds
and
je
stos
dec
dec
imul
mov
scas
lcall
inc
cmp
dec
bound
jbe
nop
adc
jp
or
fisubrs
inc
inc
cmc
out
popf
inc
jl
rol
dec
jns
shrl
sub
mov
fwait
mov
cli
and
xchg
mov
or
iret
pop
and
mov
repnz
xor
mov
and
repz
pop
pop
adc
mov
cwtl
cli
cltd
mov
cwtl
jecxz
and
imul
loop
inc
pop
rorb
scas
mov
cmpsl
inc
mov
sub
nop
and
out
xchg
dec
sbb
test
das
cwtl
ret
adc
dec
out
adcl
xchg
and
push
pop
hlt
arpl
fisubrl
outsb
xlat
cltd
into
dec
xor
paddusb
xchg
mov
popf
insb
stos
push
hlt
mov
decb
push
and
scas
scas
mov
inc
scas
jl
inc
and
xchg
jns
adc
inc
add
addr16
lods
mov
js
js
rcpps
je
sti
test
dec
push
sbb
fwait
add
scas
xchg
mov
repnz
adc
inc
push
push
jecxz
mov
mov
ja
je
popf
test
sub
fsqrt
dec
scas
inc
and
insb
mov
je
add
mov
mov
pusha
cmp
add
mov
xchg
aas
dec
sbb
nop
call
in
sbb
cwtl
fs
je
lret
sbb
cmp
ds
push
dec
fmull
cltd
push
lret
mov
cmp
mov
push
push
fdivs
insb
sti
or
mov
adc
rorl
push
xorl
mov
cmp
dec
xchg
lds
dec
push
iret
outsl
stc
cmpsb
pop
jb
jae
dec
out
jb
dec
neg
pusha
push
mov
push
repz
insb
shll
fstl
je
or
cmova
aas
inc
movsl
xor
data16
ljmp
cmc
lea
aam
mov
ret
add
mov
imul
bound
dec
cmp
mov
push
jne
cmp
pop
push
stos
int
cwtl
lods
sahf
mov
inc
arpl
adc
push
not
add
mov
add
fldl
fdiv
sub
loope
xchg
loop
pop
xor
mov
jecxz
fcoml
loopne
and
mov
xor
arpl
das
out
aas
push
or
stc
je
xor
cmc
loope
push
cltd
shl
xacquire
mov
xchg
lods
sbb
addr16
or
adc
fisttpl
rcrl
shlb
mov
sbbl
add
push
test
pop
add
add
leave
nop
sarb
sub
jb
int
inc
js
fisubrs
movsb
mov
jae
cmpsb
jecxz
imul
cmp
insb
sbb
jge
data16
int3
out
iret
test
dec
iret
ja
inc
cmp
ficoml
cltd
ret
push
push
cmp
cwtl
push
dec
mov
cmc
push
jns
jg
sub
mov
and
mov
push
lds
mov
ljmp
out
cld
lods
dec
cli
stos
test
and
mov
lret
xlat
bound
mov
lret
es
outsb
add
fisubs
imul
imul
push
sbb
pop
push
fstpl
sbb
andb
ljmp
mov
loopne
sbb
addb
sbb
ds
pop
and
aas
adc
repz
imul
or
notl
xchg
filds
jecxz
ds
scas
cld
inc
fs
jno
mov
cmp
int3
mov
je
mov
mov
push
into
lods
dec
into
add
pop
dec
xor
je
add
mov
inc
lods
lods
jle
jne
mov
dec
idivl
pop
xor
mov
jns
insl
cli
or
inc
push
lcall
inc
jns
mov
pop
frstor
pop
mov
push
std
into
jno
ss
jae
push
faddl
lcall
push
imul
lods
jbe
jb
lahf
inc
gs
inc
jo
add
xchg
xor
into
popf
daa
scas
adc
sbb
or
cmc
aas
sub
in
push
add
movsl
ja
in
pop
cmp
pop
push
lret
mov
mov
test
and
mov
hlt
fdivp
mov
adc
pop
ljmp
adc
adc
xchg
aam
lods
dec
sbb
loope
in
or
punpcklwd
shlb
sbb
or
xchg
pop
int
jno
mov
lods
js
cld
push
mov
movsb
fsubl
add
pop
mov
push
insl
jae
arpl
mov
pop
cmpsl
negb
or
inc
int
ret
sub
ljmp
out
mov
test
jnp
shlb
jne
sub
stos
rclb
or
loopne
lock
fmuls
push
les
insb
mov
inc
inc
lcall
ss
out
subb
rcrb
aas
xor
mov
aad
jp
pop
sbb
out
inc
or
and
add
pop
out
imul
cmp
roll
jae
repz
mov
pop
push
sahf
sub
add
adc
sub
dec
hlt
scas
std
bound
lret
out
out
or
sub
sti
add
stc
insl
xor
pop
cmpsb
xorb
add
push
aas
sub
cwtl
push
sub
and
fnstenv
push
fs
xor
lds
ds
and
stc
gs
sub
in
push
or
in
cwtl
pop
ja
xor
cmp
lea
divl
inc
stos
ds
lods
cmp
push
mov
test
imull
dec
inc
movb
test
dec
mov
out
daa
push
sbb
xor
push
push
inc
cmp
test
mov
add
loope
mov
push
imul
jb
cmp
clc
aad
and
sub
imul
insl
arpl
and
movsl
sub
cld
push
iret
and
and
xor
inc
or
and
push
pop
test
push
pop
jb
push
push
pop
jno
cmp
fsubrl
jns
add
shll
mov
lock
adc
mov
in
test
mov
push
xor
cld
push
in
shrb
add
mov
cmp
out
popf
xchg
or
iret
dec
pop
popa
int
mov
cmp
es
and
cmpsb
mov
mov
sub
inc
ja
clc
in
push
mov
test
je
mov
imul
xchg
dec
add
je
push
jp
sub
jge
dec
push
jae
fdivrl
dec
pop
lea
adc
pusha
fnstenv
data16
cld
into
jb
adc
roll
mov
dec
mov
jg
pop
daa
sub
push
sub
iret
icebp
jne
or
lock
mov
pop
mov
mov
or
pop
rcrb
mov
pop
loop
jp
xlat
add
rsqrtps
mov
icebp
loop
inc
xor
cmpb
sahf
sbb
stc
adc
jns
mov
and
daa
or
adc
xchg
scas
xor
inc
mov
adc
movsb
inc
lcall
out
jbe
outsl
pop
imul
pop
adc
pop
das
pop
out
loopne
jo
push
inc
fcmovbe
mov
pop
xchg
and
test
loopne
or
xor
lods
lock
imul
push
or
push
ds
insb
adc
frstor
sub
daa
jns
pusha
mov
aaa
adc
add
ds
sub
and
xor
gs
dec
ss
adc
add
inc
aad
into
jbe
xchg
sub
loopne
cmpsb
es
sub
aad
rcrb
std
std
dec
pop
addr16
pop
mov
ficoms
or
and
divb
out
dec
push
jl
and
sbb
shl
jo
pop
ja
stc
or
mov
stos
and
shr
dec
push
and
je
sub
mov
repnz
fstps
mov
out
into
push
jle
gs
test
call
fwait
xor
adc
loopne
addr16
inc
int
ja
mov
xchg
test
sbb
fidivl
mov
ja
push
aas
inc
fidivrl
inc
jge
jecxz
enter
in
mov
jns
mov
in
dec
add
icebp
fldl
sub
mov
cwtl
xor
xchg
inc
stc
in
fs
movsl
sub
jmp
sbb
scas
ljmp
out
lods
js
mov
pushf
enter
jle
mov
mov
jmp
xor
xchg
cs
nop
jg
out
cwtl
mov
mov
popa
sbb
inc
jg
push
push
jmp
adc
scas
jb
mov
mov
dec
rorl
fmull
dec
pop
popa
stos
movb
push
fnclex
dec
ja
cmp
cmp
arpl
movsb
and
sti
adc
arpl
pop
xchg
or
inc
cmp
mov
cmp
stos
fwait
jno
jne
jo
mov
xor
cmp
push
add
xlat
mov
inc
das
int3
sub
or
mov
mov
pop
addl
mov
xchg
mov
das
dec
fsubl
jae
add
mov
cs
int
mov
sahf
stc
nop
inc
loop
xchg
rcrl
add
xchg
pushf
scas
xor
xor
std
push
and
dec
xchg
xor
add
sbb
jle
push
ret
mov
jp
in
xor
pop
xchg
repz
push
pop
xor
push
push
cmp
jns
cwtl
adc
in
push
xor
ljmp
mov
push
mov
repnz
outsl
loop
shll
xchg
fidivrl
fs
repz
jl
jp
movsb
out
dec
addl
movsb
int3
ja
pop
jge
dec
movzbl
add
mov
imul
mov
pop
movsl
push
js
ja
add
imul
cli
jb
sarl
mov
mov
mov
test
es
push
jp
cmp
mov
or
or
dec
push
std
fs
rcr
push
and
dec
dec
jne
mov
dec
jno
xchg
aam
jnp
cmp
mov
or
xchg
jmp
sub
mov
repz
xchg
lea
stc
ss
pusha
cli
sbb
into
dec
int
call
cs
loopne
aaa
testb
sbb
test
gs
je
jg
lods
mov
mov
pop
cmp
dec
in
adc
popf
idivb
ss
ret
stos
jno
inc
and
subl
push
xchg
jbe
mov
push
mov
or
ljmp
adc
mov
mov
nop
sub
repnz
daa
mov
adc
or
jnp
dec
mov
fidivs
icebp
push
lret
xchg
repnz
or
or
fcoms
in
pop
mov
addr16
call
les
dec
sbb
fxam
orl
and
and
loopne
ficomps
test
mov
adc
lods
push
sub
jbe
aad
jl
mov
lret
jl
mov
xchg
jl
sub
sub
mov
xor
jo
mov
in
inc
das
jne
mov
outsl
inc
push
jns
xchg
xchg
neg
imul
popa
xchg
cmp
pop
xchg
mov
ds
in
pop
nop
addr16
mov
fwait
xor
in
negb
jns
adc
sub
jno
cmpsb
jnp
dec
pushl
dec
mov
insb
sbb
lahf
xor
jnp
cmp
inc
inc
xchg
push
in
sbb
daa
insb
fisttps
xchg
push
das
jmp
ret
sbb
aaa
or
std
lret
inc
addr16
push
inc
cmp
push
pop
add
aam
xchg
push
sahf
lea
and
aad
dec
xchg
scas
xor
sbb
sahf
sarl
ret
jns
push
cmp
lds
sub
loop
data16
fnsave
or
ds
movsb
jnp
mov
andl
and
movb
cmpsb
mov
add
adc
ljmp
bound
fdivrl
cmp
dec
xorb
ret
mov
das
and
jge
mov
movb
arpl
adc
icebp
inc
test
aaa
repnz
mov
xor
jo
lods
test
jle
cwtl
jo
inc
mov
inc
jb
cltd
push
fs
clc
cmpl
dec
popa
push
js
sbb
cmp
subl
imul
or
or
cmpb
cmp
bound
shrb
and
push
push
pop
addr16
xor
inc
xor
fidivl
pop
jno
adc
inc
sbb
cltd
out
xchg
inc
cmp
jbe
cmp
incb
add
inc
pop
or
out
adc
jge
insb
xadd
outsb
mul
pusha
jge
sbb
fistpl
mov
jae
sbb
dec
mov
loop
xchg
movsb
add
add
insl
out
jno
dec
mov
adc
mov
mov
je
xorl
cltd
or
lret
xchg
push
setp
push
jmp
mov
cmpsl
mov
and
add
push
shlb
scas
cld
aaa
shl
jo
xchg
cmp
das
cmp
push
pop
scas
add
mov
fldcw
push
mov
pop
sbb
dec
sbb
push
cwtl
mov
cmp
ljmp
jle
in
mov
xchg
sub
sarl
sub
pop
xchg
push
scas
xchg
mov
mov
ss
daa
jge
jae
mov
std
and
ljmp
sub
push
xchg
xor
and
addps
call
jl
mov
sbb
jne
stc
dec
xchg
shr
ret
ffreep
jb
add
inc
fistpll
aas
fmull
sbb
pop
outsb
pop
jg
shrb
xchg
insl
hlt
sub
arpl
cmpsb
cmp
cmp
fstpt
xlat
mov
fbstp
and
pop
dec
and
aas
jns
cltd
adc
test
sar
jne
pop
mov
inc
das
and
pop
lret
push
mov
outsb
data16
stos
fdivr
stos
ss
inc
dec
decl
adc
cmc
out
sbb
mov
mov
dec
aam
or
out
data16
les
dec
inc
sbb
mov
arpl
pop
jp
ds
ret
ret
mov
mov
xchg
roll
gs
jmp
inc
add
add
lcall
ds
lods
outsb
stos
xor
mov
mov
lret
and
xchg
push
into
add
pop
xor
push
sub
push
jl
std
call
stc
es
scas
inc
test
cmpsl
hlt
rorl
add
pop
pop
cmp
or
fistpll
ret
push
and
je
jle,pn
mov
sub
jno
jg
inc
pop
jo
loop
mov
add
outsb
ds
pop
sub
pop
add
out
or
cmp
shll
adc
imul
sub
add
jmp
imul
popf
cs
pop
adc
lea
aas
nop
cmp
loope
loop
adc
hlt
cmpsl
test
mov
gs
or
shlb
pop
or
mov
aad
test
ja
out
mov
imull
call
cmp
jbe
mov
xor
fidivs
les
out
add
stc
inc
out
inc
inc
jecxz
inc
mov
cmc
lock
pop
fsubl
sahf
mov
sarb
pop
cmp
sub
stc
js
outsb
inc
out
sub
sub
jno
dec
scas
test
jnp
cmp
shlb
sbb
je
adcb
push
int
repnz
out
or
cwtl
cmpb
xchg
add
sbb
out
mov
into
add
filds
push
jne
ret
fistpll
call
test
pop
outsl
sbb
cmpsl
and
cmp
aad
iret
add
fiaddl
loopne
movsb
cmp
add
cli
xor
je
es
clc
and
mov
or
ss
dec
xor
sub
ljmp
fdivrl
flds
test
nop
sbb
jne
testb
cli
stos
push
and
pop
in
fcomi
ljmp
mov
add
scas
lret
ret
push
pop
add
fs
loope
popa
hlt
xchg
arpl
aam
push
and
lahf
cmpsl
sub
cmp
mov
xor
and
inc
pushf
cmp
push
sbb
aas
pop
mov
dec
adcl
pop
ficomps
test
stos
xchg
push
cmc
ljmp
and
stos
clc
adc
pop
sbb
je
xchg
movsb
push
imul
push
aaa
jnp
push
push
cmc
scas
pop
xor
mov
es
xorb
add
xor
or
dec
notb
add
insb
mov
ja
stc
and
insl
jae
stc
js
sbb
ja
jge
dec
gs
jp
sti
lods
fisubl
sub
inc
pop
sbb
pop
pop
mov
inc
adc
or
pusha
in
xchg
or
fs
add
jbe
pop
and
test
je
popa
enter
sbb
je
and
mov
mov
sahf
dec
jbe
pop
fimuls
je
rcrb
scas
add
aad
dec
cmp
lods
bound
pop
iret
mov
jbe
jge
push
mov
test
cld
cmp
jbe
insb
loop
sub
movsl
cmpsl
sub
dec
mov
dec
pop
flds
cmp
sbb
sub
mov
mov
xor
dec
into
inc
xchg
fldcw
add
sub
bound
ljmp
jge
sti
adc
fnstenv
repnz
repnz
cmp
ficompl
add
lea
out
xchg
dec
sahf
outsb
fldcw
jge
jb
add
pop
movsl
test
dec
ljmp
cmp
mov
ss
mov
ja
pop
pop
cli
ds
xor
mov
fstl
shll
mov
jbe
test
mov
dec
out
pusha
shll
rcll
push
scas
mov
jne
dec
inc
call
cmp
fisubl
or
cmp
or
mov
leave
jne
and
les
aam
push
cmpl
mov
test
cwtl
push
es
in
jne
lahf
dec
mov
cmpsb
js
rep
iret
xor
lret
insl
lea
push
lods
aaa
inc
jae
js
and
sub
add
push
cwtl
mov
sub
inc
xchg
int3
mov
dec
xchg
or
jbe
push
xor
pop
pop
lahf
cmpsb
or
in
jbe
mov
pop
lods
movsb
push
test
xor
sub
and
int3
inc
pop
xor
icebp
dec
push
mov
mov
nop
and
jo
outsl
xor
test
lds
pop
cmp
mov
or
test
push
insl
icebp
stos
in
sub
out
and
inc
movsl
sub
sub
jns,pn
sti
outsb
and
mov
in
xorb
fldt
and
and
insb
fnstsw
fists
nop
mov
into
shlb
cmc
sti
xor
hlt
add
lret
arpl
add
subb
jns
add
ret
rcrb
pop
scas
rcll
imul
sbb
sub
aad
sub
jno
jmp
adc
dec
xchg
cmp
push
hlt
inc
push
xor
dec
mov
mov
push
imul
inc
arpl
mov
dec
add
add
test
mov
pop
xorl
dec
mov
mov
rcll
fnstenv
jb
fstl
jb
leave
js
add
jb
push
out
jge
repz
push
sub
outsb
pop
pop
push
inc
xor
das
into
cmp
inc
jb
adc
in
sbb
pop
xor
dec
adc
jb
mov
mov
or
mov
lahf
xor
mov
add
vmwrite
or
push
scas
adc
cltd
jae
rcl
cld
out
or
ss
add
add
out
dec
testb
jg
add
jge
mov
sub
mov
cmp
xor
jle
adc
pop
inc
jecxz
add
dec
add
js
mov
mull
jecxz
xor
in
iret
fildll
shll
in
data16
and
jmp
push
daa
pop
dec
cmp
filds
jae
aad
adc
cld
mov
sbb
add
cmp
push
xchg
fst
cld
push
sub
pop
stos
push
dec
sbb
xchg
mov
fbstp
and
ficoms
mov
outsl
sub
mov
not
sti
sub
adc
mov
jbe
adc
push
dec
xchg
cmp
pop
ret
clc
push
inc
movsl
les
or
push
nop
leave
xlat
or
arpl
and
mov
insb
vprotb
aaa
cwtl
fucom
dec
data16
outsb
jbe
je,pn
int
sbb
dec
sahf
add
test
mov
lret
push
mov
shlb
sbb
xchg
shlb
mov
ljmp
adc
mov
cmp
push
adc
scas
jo
push
inc
mov
mov
js
iret
lds
scas
out
pop
sub
jno
mov
or
stos
mov
mov
mov
sub
add
xor
add
leave
jmp
add
mov
mov
pop
push
cmp
sbb
cwtl
cltd
out
dec
adc
arpl
inc
fbstp
fwait
icebp
and
inc
mov
cs
nop
loop
xchg
sarl
mov
jbe
xor
lock
push
out
pop
inc
iret
mov
in
leave
or
out
cltd
mov
xor
xchg
inc
out
push
jge
movsb
in
push
out
pushf
mov
loopne
adc
adc
in
mov
push
adc
push
or
stos
in
test
cmpsl
jno
pop
jmp
or
fs
lock
sbb
jns
test
ja
imulb
nop
sub
lock
mov
lcall
nop
push
aas
pop
loop
rorl
inc
jl
or
cltd
test
inc
add
sahf
xor
add
imul
movsl
and
test
push
mov
xor
or
popa
fnstcw
cmp
dec
arpl
pop
jae
jl
ds
xor
sub
or
das
mov
jns
xchg
cmpb
call
frstor
adc
pop
add
int
pop
and
popf
and
or
sub
daa
sbb
repnz
jns
pop
jl
lcall
fsubrl
sub
popa
inc
sub
xchg
pop
push
lock
xchg
jecxz
test
mov
movsb
xchg
push
push
jle
adcb
mov
mov
repnz
mov
jg
fldenv
aam
ficomps
mov
insl
rcrb
and
jp
ss
pop
push
aaa
ret
out
xor
pop
xor
xor
nop
jle
gs
andl
cmp
insl
fists
xchg
xor
mov
test
hlt
jl
xor
aad
jle
das
cmp
adc
gs
ret
or
sbb
out
loopne
rcr
inc
pop
rcl
xchg
out
cmp
iret
mov
xor
inc
nop
in
je
cmpsl
mov
dec
and
js
adc
mov
mov
push
lods
inc
stos
or
int3
lods
ljmp
outsl
ja,pt
pop
lea
shll
gs
push
ret
pop
mov
fcmovnbe
add
popf
and
sub
xor
hlt
pop
data16
mov
sub
int3
lea
pcmpeqd
push
xchg
out
xor
faddl
shlb
popf
dec
mov
stos
inc
jle
insl
inc
lret
mov
test
push
jl
sub
and
cmp
push
adc
mov
sub
xchg
mov
bnd
push
fnstenv
daa
lret
sarl
and
xchg
add
gs
dec
fcoml
inc
icebp
dec
xchg
ret
mov
nop
dec
idivl
sbb
fcoms
lock
addr16
xchg
jmp
xor
cmp
std
out
xorl
mov
pop
add
jbe
inc
out
cld
cmc
cmp
add
shlb
nop
dec
sar
xchg
inc
loop
jo
adc
lods
sbbl
outsb
jge
leave
cmp
push
mov
add
or
cmp
int3
cmp
ss
cmpl
and
jl
movsb
adc
or
popf
push
adc
ret
pop
jno
test
mull
outsb
arpl
fimull
push
int
loopne
and
adc
or
scas
movsb
push
mov
or
dec
push
in
lods
int3
data16
jmp
insb
lret
mov
or
mov
in
imul
push
inc
jae
adc
or
pop
sbb
rcrb
push
dec
das
shlb
pop
sbb
lcall
dec
fdivs
sbb
fbld
mov
rolb
insb
dec
pop
fdivs
push
or
jl
cmp
or
push
jno
mov
sub
push
lea
stos
stc
mov
shlb
imul
add
imul
sbb
into
roll
adc
inc
jns
popf
in
jb
pop
aaa
adc
test
movsb
mov
scas
mov
repnz
mov
mov
or
lock
ficompl
push
or
mov
daa
mov
cmc
lfs
sbb
or
adc
in
inc
xor
xor
adc
cmp
add
push
add
fimuls
mov
cmp
mov
inc
pushf
pop
sti
aaa
and
push
jmp
imul
cs
sbb
ss
mov
je
shlb
sbb
and
dec
ret
lret
mov
jle
jp
je
push
je
push
cmp
xchg
loopne
xlat
jns
mov
arpl
scas
leave
xor
xchg
int
mov
cmpsb
int3
aad
bnd
addl
in
in
jno
cld
inc
test
lods
int3
add
and
addr16
push
sbb
je
testb
xchg
xor
mov
sahf
xor
dec
outsb
inc
bound
divb
cmp
xor
mov
es
inc
mov
in
and
and
pop
pop
lcall
xor
pop
call
fs
xlat
xlat
stos
in
or
iretw
fidivs
fmull
xorb
xor
insl
add
aam
pop
out
and
jg
jge
or
ret
push
aam
or
or
push
push
adc
cltd
add
jo
in
lods
cmp
jle
cmp
inc
mov
sbbb
imul
push
repnz
ret
mov
add
ss
cmpsl
out
scas
call
cmp
lcall
dec
fst
in
pusha
lret
fistl
cmp
push
push
xchg
and
push
xchg
xor
cmp
adc
push
cmp
push
cmp
push
mov
xchg
jecxz
insb
mov
aas
jae
cmpsb
push
or
ss
xchg
clc
jmp
or
jbe
pop
movsb
cmp
or
or
jl
in
xlat
in
dec
incb
cld
je
sub
mov
ficomps
shrl
xlat
and
ret
xchg
xor
cmp
dec
cmpsb
cmp
xchg
inc
das
mov
mov
hlt
imul
xor
and
pop
shll
adc
push
inc
es
addb
scas
jae
or
adc
inc
xor
out
packssdw
lds
aaa
mov
push
fidivs
jae
add
add
pop
mov
mov
sub
or
mov
and
mov
fmul
arpl
push
push
xor
and
andl
and
aas
inc
push
jo
jmp
jecxz
sahf
testl
lret
and
test
dec
push
inc
mov
fs
cltd
out
jne
mov
cmpb
fstp
cmp
lods
decb
jb
fsub
dec
add
cltd
es
pop
xchg
inc
data16
pop
jmp
in
pop
sub
bound
stos
sub
imul
pop
cmp
sub
data16
mov
scas
fiaddl
arpl
in
sub
cmp
sub
les
adc
adc
mov
mov
mov
test
mov
fld1
sub
push
mov
push
add
lret
cmpl
or
notl
xchg
daa
add
xor
dec
les
jle
je
jecxz
fisubrs
jge
mov
out
out
repnz
jb
pop
mov
scas
inc
pushf
jbe
add
hlt
add
adc
stos
aas
mov
and
test
mov
jo
xor
loop
pop
ret
mov
shll
cmc
pop
rol
loop
sub
hlt
and
push
add
push
test
pop
cmp
call
xchg
inc
into
repz
mov
repz
pusha
addb
fsubp
faddl
jo
cs
hlt
ss
sbb
jle
fidivs
add
call
inc
into
inc
sarb
adc
aaa
inc
ja
out
flds
sbb
arpl
cmp
mov
adc
fldcw
ret
cmp
pop
fildll
loop
jo
adc
lods
mov
out
scas
mov
cmp
lcall
mov
cmp
sub
pop
pushw
repz
pop
pop
or
cmp
inc
xor
stc
mov
jbe
loopne
clc
mov
sub
ljmp
mov
add
jle
mov
xchg
movsb
shll
jle
xor
jle
push
xor
cmc
bound
sub
divl
pushf
sub
fdivrl
insb
std
rcrb
mov
fs
add
shrl
mov
dec
pop
inc
lock
add
mov
repnz
mov
pop
adcl
pop
pusha
addr16
stos
ret
leave
pop
scas
rolb
add
push
loope
setbe
aas
bound
cltd
filds
inc
pop
sbb
fs
adc
sbb
enter
fsubl
fiadds
inc
inc
pop
lods
pop
pop
sub
gs
jle
pop
xor
test
ds
pop
rol
dec
add
jbe
icebp
cmc
pop
adc
repz
and
je
cltd
imul
pop
jo
pop
xchg
hlt
cs
add
test
xchg
push
add
in
mov
pop
add
repnz
jle
add
jno
inc
movsb
addr16
push
and
arpl
mov
and
in
sahf
pop
add
mov
in
sbb
pop
sub
out
repnz
out
lods
inc
data16
sub
ja
stos
ss
hlt
inc
xlat
adc
and
ss
mov
jne
dec
pop
popa
mov
jg
cltd
test
notl
jne
fisubs
fnstsw
repnz
jns
popa
push
imul
push
push
jne
pop
in
test
and
cmp
je
or
sahf
sub
stos
adc
xor
jne
call
pop
lahf
mov
pushf
aam
jae
aam
pop
sbb
cltd
mov
push
xorb
dec
cmpsb
or
out
push
insl
out
mov
inc
ds
mov
inc
fsub
lods
pop
add
rolb
and
shlb
cmp
inc
cmc
jle
lods
test
or
add
mov
and
cmc
shll
cmc
inc
in
in
xor
jmp
jo
xor
ss
and
inc
scas
or
loop
jne
into
xchg
loop
mov
xor
pop
mov
cmp
xchg
pushf
ds
loope
dec
mov
sub
ss
inc
loop
pop
xor
xor
jb
mov
sbb
fisubs
aaa
dec
je
push
lea
stos
cs
jge
cmpsb
in
mov
or
and
fdivs
add
cs
mov
rclb
pop
int
sbb
cltd
les
imul
ja
aad
add
sub
xchg
cltd
lret
inc
push
sub
jle
fiaddl
inc
data16
test
aaa
dec
ja
sahf
push
push
fldcw
movsb
or
imul
sbb
mov
jb
pop
push
push
jo
inc
int3
pop
lods
insb
jbe
xor
jl
pop
out
xor
jb
sub
add
imul
ret
mov
dec
lock
mov
jo
mov
aam
sub
je
cli
dec
call
sbbl
adc
pop
es
sarb
jge
scas
jb
not
hlt
jl
test
adc
push
push
jbe
sub
push
jp
outsl
mov
mov
into
mov
loopne
xchg
fadds
gs
adc
sub
out
add
pop
sbb
push
or
push
bound
push
movsb
cmp
push
inc
fsubs
scas
ss
dec
sahf
dec
mov
xchg
xor
pop
mov
addr16
mov
stos
mov
fcmovu
stos
mov
aaa
in
insb
push
xchg
das
pop
mov
cli
jno
xchg
cmp
sub
pop
and
push
add
imul
adcb
xor
xor
mov
lret
mov
shlb
rcll
sbb
scas
into
jnp
sbb
mov
pusha
mov
add
dec
daa
pop
push
aas
jbe
dec
pop
add
adc
mov
jbe
and
push
xor
sub
aaa
dec
addr16
xlat
add
jae
mov
jecxz
ljmp
add
sbb
call
push
scas
shrl
jo
jne
mov
insl
loop
and
in
dec
int
roll
and
pop
in
lods
inc
adc
cmpsb
lods
das
mov
pop
and
push
push
lods
in
pop
push
xor
into
lret
hlt
adc
ficompl
jp
xchg
mov
cmp
push
inc
movsb
pop
rolb
or
mov
clc
outsl
push
lret
push
add
subb
fcompl
push
int
pop
fwait
adc
int
call
inc
mulps
mov
push
jle
lods
sub
or
icebp
and
jnp
subb
je
pop
bound
dec
cmp
nop
ds
sahf
or
adc
sarb
scas
lock
scas
or
icebp
cmpsb
push
into
leave
xlat
nop
sbb
mulb
add
test
add
add
fwait
push
pop
lret
adc
add
in
xchg
pop
push
ljmp
xor
ljmp
xchg
or
dec
scas
cli
aaa
ss
or
fisttpll
jmp
outsb
in
divb
jg
jge
inc
dec
cwtl
sub
inc
dec
cld
mov
shlb
ljmp
sub
pxor
fs
sti
jae
sahf
xlat
lods
mov
adc
xchg
jno
imul
mov
cwtl
adc
in
ret
cmp
mov
lret
cld
in
adc
shrl
lods
arpl
imul
xor
mov
popa
aad
scas
addr16
addr16
popf
add
sbb
push
mov
xchg
jno
mov
pop
lret
add
or
jp
jle
hlt
rclb
loope
test
outsb
and
push
std
cld
test
jecxz
cltd
loopne
and
inc
mov
mov
add
mov
dec
pop
push
scas
xor
cmpsl
push
mov
shl
jp
in
call
dec
jns
lahf
jle
stc
dec
div
fdivrs
add
sub
shlb
inc
xor
rorl
sbb
dec
mov
jno
mov
adc
mov
scas
jg
test
fcmovne
sahf
sbbb
sbb
mov
loopne
and
jns
inc
jne
popf
mov
mov
out
jno
movsb
xor
xor
popf
ja
push
mov
fimull
xchg
out
inc
lods
pop
add
ljmp
mov
xor
sti
fnstsw
dec
xchg
stc
fucom
push
inc
pushf
fcom
movsl
mov
fisubrl
and
cli
ret
ss
inc
push
cmc
fisttpl
mov
push
cmp
jns
insl
rolb
movl
jne
fmuls
and
je
mov
ljmp
push
imul
outsl
mov
add
add
cmp
sub
je
popf
xchg
js
xlat
jnp
cmp
cmpsl
add
ret
jl
sbb
cwtl
sub
add
fnstenv
test
or
add
fidivl
repz
out
mov
mov
jo
test
dec
ljmp
out
cmp
mov
xchg
addr16
ret
int
arpl
push
mov
pop
pushw
or
adc
push
jge
lea
pop
and
scas
xor
adc
lcall
mov
and
jle
mov
add
test
js
scas
cmp
pushf
fcomps
shl
cmp
mov
fidivl
jg
sub
in
cwtl
iret
hlt
mov
mov
cmpsl
ss
sbbb
pop
outsb
nop
xchg
or
cmp
in
push
vmwrite
pop
jle
add
inc
addr16
mov
and
mov
sub
push
sbb
adc
test
and
push
xchg
ret
cwtl
shlb
mov
and
jne
mov
jmp
nop
xor
xchg
pop
mov
cmp
movsl
jg
pusha
push
inc
pop
jno
mov
inc
add
ss
aas
push
ret
jmp
fisubs
ret
and
gs
mov
sbb
or
sahf
jae
in
subb
pop
or
mov
shlb
jae
inc
ljmp
cmpb
push
pop
cli
and
push
and
cs
and
shl
je
sub
pop
ljmp
push
cmp
lods
hlt
adc
or
lret
xchg
stc
in
ds
gs
cmp
data16
mov
jne
icebp
sbb
scas
and
fadds
fmuls
push
push
pushf
and
lret
add
dec
lahf
and
in
into
test
or
arpl
pop
sub
out
xchg
adc
and
into
cmp
sub
les
mov
int3
and
xchg
adc
or
inc
mov
push
mov
xchg
and
ffree
jns
cmpsb
rorl
inc
cwtl
add
jbe
mov
push
and
flds
loope
cmpsl
xlat
fnsave
imul
icebp
jg
out
dec
jo
fs
mov
ljmp
jne
jne
mov
jo
jl
std
sbb
jl
adc
or
mov
shrl
add
fnsave
jge
shlb
fs
jno
dec
mov
test
rorl
fcmove
arpl
lds
test
and
js
icebp
mov
cmpsb
inc
fildll
sbb
jb
and
es
jl
loop
repnz
jb
pop
imul
inc
sbb
imull
or
push
lds
loopne
fwait
mov
std
adc
push
scas
cmp
cmp
cli
int
int3
mov
sti
repz
incl
xor
cwtl
lea
xor
add
inc
fcomp
repnz
mov
xor
pop
aad
push
or
push
cltd
add
and
adc
ds
int
sahf
rcl
shrl
test
icebp
fldl
push
jns
fiaddl
sbbb
pop
pop
xor
jae
and
cmpsl
out
flds
inc
cltd
jno
pushf
sbb
pop
inc
pop
movsl
ss
sbbl
pop
add
sub
das
mov
adc
mov
mov
add
push
and
mov
mov
lods
test
xor
sbb
outsb
add
js
fdivp
sbb
sbb
pop
pusha
mov
ret
inc
inc
push
jl
jmp
add
dec
inc
pop
jne
cmp
aam
bound
cmp
and
mov
in
hlt
jno
or
int3
test
int
xchg
cld
push
les
cmp
test
stos
bound
into
mov
jne
push
add
aam
cmp
or
pushf
fdivl
outsb
adc
adcl
push
pop
mov
dec
mov
hlt
or
cli
fsubrp
jge
pop
add
add
jle
push
sbb
std
lea
pop
repnz
int3
inc
movsb
scas
inc
pushf
jecxz
outsl
ds
mov
push
inc
mov
cwtl
xor
mov
mov
movsb
or
dec
inc
mov
mov
in
pop
ds
popl
sub
mov
jecxz
dec
sbb
and
aad
mov
xor
push
mov
notb
pop
cmp
dec
imul
mov
or
xor
gs
push
pushl
sahf
lret
sub
decl
test
cmp
jns
and
mov
pop
clc
fsubrl
push
lret
cld
lods
jno
lods
mov
je
sub
and
test
pop
out
ret
fs
or
cli
dec
imul
sub
ficoml
stc
add
xor
sbb
ret
sbb
aaa
xor
ljmp
mov
hlt
pop
jmp
inc
push
jecxz
add
data16
test
into
cwtl
push
movsb
rcrl
jae
nop
pop
sbb
dec
xor
loope,pt
repnz
lds
ja
and
add
ljmp
cmp
or
and
cmp
adc
add
fisubrs
sar
push
mov
jp
sub
gs
lcall
cmpsl
sbb
mov
or
lcall
xchg
ss
adc
dec
jb
jge
lods
inc
jmp
inc
subb
xchg
shll
adc
sbb
mov
sbb
and
mov
cmp
outsl
inc
mov
dec
fbstp
add
aas
push
iret
inc
sbb
pop
push
cmp
or
pop
add
ret
xchg
inc
leave
or
xor
xorb
ja
ss
mov
roll
iret
repz
xchg
shr
xlat
fimuls
xor
jne
mov
xor
push
in
ficoml
dec
inc
jg
cmpsb
jb
adc
das
and
push
movsb
pushw
fnstsw
nop
iret
jmp
inc
jae
out
sbb
cld
xor
sbb
push
cltd
incb
or
pusha
jp
aad
adc
mov
or
and
add
jnp
mov
leave
xor
pop
push
daa
jnp
xor
push
jo
mov
mov
xlat
mov
sbb
push
add
cmp
push
mov
sub
pop
add
or
jb
ret
roll
nop
add
mov
pusha
xor
stos
dec
dec
or
in
xor
test
ret
std
insb
sbb
enter
inc
fisttpl
mov
push
mov
pop
mov
hlt
sbb
cli
push
mov
lret
cmpsb
push
ret
enter
shl
adc
ret
mov
stc
xor
cmpsb
dec
push
fwait
xor
add
pop
popa
sub
jl
roll
loop
add
and
mov
jo
fsubl
imul
dec
mov
sub
mov
add
call
call
and
cmp
out
jl
push
gs
in
jp
sbb
imul
int3
aaa
lock
mov
mov
lock
fdiv
ja
push
dec
adc
inc
shlb
inc
xor
enter
xchg
mov
test
sbb
jae
fs
add
fstps
pop
xlat
mov
cmp
pop
pop
loope
pop
add
jl
pop
sbb
jno
cmp
imul
scas
lcall
fbld
mov
jg
jbe
clc
xchg
mov
xor
jge
lahf
push
cli
fnstenv
sub
inc
push
mov
inc
xchg
mov
sub
xor
and
mov
jge
push
jg
cmpsb
adc
test
push
pop
jmp
mov
test
jno
cmp
push
cmp
cmpsb
jb
lret
aas
lods
call
xor
mov
into
cmpsb
mov
lahf
rcrl
adc
add
and
out
xor
loopne
push
dec
xchg
pop
ret
loopne
push
mov
push
jne,pn
jl
or
and
scas
cmpsb
cmp
dec
push
pop
mov
repnz
in
and
or
mov
sbb
int3
mov
lcall
sub
movsl
lret
movsb
lods
or
ss
movsl
mov
jg
pop
aas
jne
cmp
sub
dec
test
addr16
adc
mov
lret
jnp
pop
xchg
and
pop
shr
jns
and
outsl
xor
es
pushf
cmp
iret
int3
aaa
sbb
or
test
scas
loope
andl
and
mov
pop
cmp
in
clts
inc
fnsave
jl
shll
mov
mov
in
inc
cld
pop
ja
xor
sbb
enter
movq
sahf
rcr
cmp
imul
push
pop
psraw
cmpsb
lret
cmp
cmp
push
xor
xchg
mov
fisubrs
cmp
sahf
mov
lods
dec
adc
rcrb
or
sbb
ss
jns
and
sub
and
sti
xor
test
xor
ljmp
and
je
pop
in
mov
ja
sti
mov
xor
cltd
ret
movsb
cld
mov
cmovg
insl
push
sar
fbstp
sub
loope
daa
sbb
mov
mov
bound
ret
getsec
negb
hlt
lods
test
jb
jle
mov
jecxz
shll
movsl
push
test
pop
iret
mov
fiaddl
or
test
sbb
pop
inc
inc
mov
xor
add
lods
mov
lcall
inc
fisubrl
fisubs
sti
mov
outsb
sub
cltd
test
outsb
fidivs
insb
adc
into
cmp
sbb
xchg
jp
bound
mov
sahf
push
push
cmpsl
add
push
aad
sbb
lahf
stc
adcb
imul
loope
int
sbb
stos
push
fisubrs
in
jo
mov
bound
mov
dec
mov
xor
mov
push
dec
mov
push
scas
icebp
or
cltd
mov
cmpsb
mov
jo,pt
loope
das
push
jp
divb
mov
rorb
and
out
andb
xor
push
aas
pop
dec
cld
aaa
cmp
test
mov
or
pop
jmp
mov
xor
ja
fsub
repnz
adc
xor
ljmp
ret
insl
mov
insl
scas
or
pop
imul
pushf
dec
pop
sub
xor
push
mov
sub
jae
xchg
push
add
mov
hlt
jge
scas
or
inc
or
sub
test
adc
jo
in
push
xchg
inc
fsubrp
adcb
call
aas
or
dec
shr
rorb
stos
push
imul
dec
orb
mov
sbb
sbb
int3
mov
pop
cmp
xchg
add
pop
add
pushf
int3
iret
insl
jle
inc
mov
push
aaa
and
rolb
jo
test
sub
rorl
arpl
pusha
loop
loope
mov
push
inc
xor
add
xor
jnp
dec
cmpsb
stos
or
pusha
ret
and
xchg
scas
lea
fidivs
cmp
aad
lds
sub
fsubl
bound
sub
mov
and
sub
jg
mov
icebp
sahf
loop
mov
add
add
dec
push
dec
jp
add
xor
dec
push
loope
les
mov
fcoms
pop
cmp
add
lods
js
push
hlt
jnp
lods
shl
add
push
push
imul
bound
mov
hlt
fisttpll
mov
jp
pop
ja
mov
xor
or
hlt
pop
pop
mov
daa
adc
outsl
shrb
iret
xchg
rep
add
jno
fwait
dec
and
dec
in
xlat
mov
pop
xchg
mov
cmp
inc
insb
lahf
sub
and
icebp
sbb
fstpt
xor
pop
cmp
or
push
mov
mov
mov
xor
sahf
pop
add
xchg
sahf
push
xchg
rol
fs
pop
push
push
fld
fisubl
std
js
subb
adc
fldlg2
in
icebp
cmpsb
xchg
cli
and
int3
inc
or
add
pop
shr
jle
lods
arpl
lods
mov
sbb
icebp
dec
arpl
dec
mov
or
lds
sbb
rcl
shrl
vaddsubpd
push
adc
fnstsw
and
jecxz
enter
imul
dec
xor
ja
cmp
popf
jns
lret
scas
in
loop
push
and
mov
or
mov
cs
scas
fsubrs
cmp
addl
mov
repz
cld
in
daa
movsl
ja
sahf
aaa
mov
xor
dec
lcall
cmpl
mov
xor
dec
repz
fs
mov
lahf
fcompl
sbb
icebp
outsb
mov
sbbl
sbb
sbb
jne
fnstsw
add
aad
xor
fwait
jb
inc
mov
pop
ud2
js
push
popa
aaa
adc
ffree
rorb
push
ret
mov
mov
into
inc
movsl
test
mov
das
or
sbb
test
pop
pop
mov
jecxz
jg
push
xor
inc
lock
fldcw
mov
xor
mov
jecxz
pop
jb
inc
mov
mov
jmp
push
popf
add
int3
fildll
push
ret
inc
fcmove
loop
cltd
push
mov
into
push
jae
scas
stos
mov
cmp
add
fstps
or
shrb
xor
jns
pop
xlat
push
inc
ficoms
mov
rol
int
push
call
or
push
es
popa
aad
mov
sahf
xor
int
or
dec
cltd
jo
stc
inc
push
sub
push
sbb
cmpsb
ljmp
insl
test
push
imul
leave
mov
push
in
add
wbinvd
mov
in
test
call
push
push
fwait
pushf
test
js
jns
xor
mov
in
stos
movsl
mov
inc
mov
fidivs
in
call
fstps
pop
insl
ljmp
or
scas
mov
fs
cmp
in
int3
roll
mov
inc
push
fwait
or
or
jb
xor
mov
dec
bound
sbb
jne
sub
movd
pop
push
incl
sub
push
mov
outsb
mov
push
jo
lret
sub
pop
add
cmpsb
jbe
adc
insb
lods
fcmovnu
dec
pop
mov
xor
scas
cmpsl
xor
mov
and
jl
imul
push
push
js
jnp
flds
pop
daa
inc
push
push
jecxz
adc
or
scas
dec
add
addl
int
outsb
mov
aaa
adc
xor
aaa
push
pop
jecxz
xor
js
pop
inc
int
sub
push
clc
mov
cld
hlt
jmp
add
jb
int3
sahf
in
loop
jno
or
pushf
adc
or
fbstp
push
push
mov
xor
adc
fidivs
clc
pop
or
push
mov
dec
in
cmp
mov
push
leave
cmp
cmpsb
cmpsb
into
xchg
mov
xlat
movd
pand
es
jns
scas
adc
push
js
or
les
cmp
imul
ljmp
adc
pusha
or
jne
out
lret
insb
ds
es
and
sbb
loope
daa
inc
popf
add
aam
jae
imul
scas
sti
rcll
inc
push
jo
stc
xchg
jecxz
loopne
adc
jno
push
dec
add
ret
or
xchg
dec
repnz
inc
lea
aaa
xor
popa
dec
cmp
cmp
pop
xor
out
cmpl
adc
jbe
gs
mov
bound
xchg
lods
imul
xchg
int3
cmp
mov
pusha
dec
jne
xor
and
push
stos
sbb
xor
outsl
in
push
into
push
xor
cmp
jo
cli
mov
jg
and
pop
xchg
add
jno
into
push
jmp
add
add
add
pusha
jp
jb
jae
pop
aaa
add
jecxz
pop
test
adc
insl
shll
mov
cmp
mov
mov
loope
jnp
dec
sub
and
xchg
test
ficomps
xchg
mov
push
add
call
notb
push
test
mov
pop
push
mov
pop
int3
fnsave
dec
push
jmp
lods
and
push
je
hlt
push
sbb
outsl
jg
mov
jbe
sbb
inc
je
imul
loop
jle
cs
ljmp
test
dec
and
pusha
fidivrs
xchg
adc
dec
pop
lahf
mov
stos
add
in
iret
and
aam
dec
rep
ja
sub
jne
scas
jb
mov
sub
sub
sbb
jno
jo
rclb
or
xor
push
test
inc
cmc
out
insl
mov
lds
sub
pop
int
sbb
pusha
aaa
sbb
bound
xchg
inc
push
stos
mov
jne
mov
jnp
pop
push
rcll
std
mov
jmp
inc
jb
icebp
xor
sahf
jmp
fsubrl
fstl
mov
out
push
jl
sbbb
jno
mov
repnz
insb
jne
mov
popa
adc
dec
test
adc
ret
lock
addr16
aam
mov
sbb
daa
inc
aaa
nop
cmp
ss
mov
mov
push
and
mov
mov
outsb
sbb
popa
xchg
push
pop
shrb
das
add
mov
add
push
dec
inc
sub
fisttps
scas
dec
ss
cmpsb
loopne
mov
mov
and
pop
jp
cmc
inc
pop
call
shr
dec
jne
mov
outsb
mov
nop
push
data16
std
add
out
or
rcr
inc
out
sbb
icebp
ja
xchg
xchg
popf
and
mov
jne
ret
aad
xchg
push
sub
mov
push
push
sbb
dec
jae
and
inc
rcrl
jp
cmpsb
into
out
loopne
push
add
lods
dec
or
adc
push
push
push
orl
int
incl
mov
nop
popf
imul
cltd
pop
popa
jno
inc
test
pop
fimull
test
and
xchg
pop
mov
mov
jb
insb
and
and
inc
add
adc
pop
xchg
mov
sbb
lret
dec
mov
loopne
xor
arpl
sbb
mov
into
lea
fcmovu
insb
mov
cli
bound
cs
cmpsl
data16
sub
std
stc
mov
add
xchg
xchg
dec
mov
leave
scas
push
daa
mov
lds
sti
out
add
in
dec
test
mov
lcall
enter
push
sbb
ficoms
dec
inc
jle
cmp
ds
dec
sub
xchg
jnp
sbb
pop
fwait
call
test
popa
sbb
iret
int
dec
sbb
cmp
mov
movsl
cmp
shr
repz
adc
push
pop
and
mov
pusha
jbe
mov
pop
mov
insl
sub
mov
mov
xor
loopne
in
xlat
mov
pushaw
stc
add
lret
popa
dec
mov
gs
lods
sub
dec
ds
cs
ljmp
jbe
repz
sahf
imul
push
xchg
push
into
test
dec
push
jns
cltd
pop
inc
repz
xor
add
js
push
dec
cld
sub
fmuls
data16
sub
jo
sub
cmc
pop
pop
pop
jmp
push
cmp
jle
cld
mov
insb
sub
push
sub
dec
leave
pop
cmp
xchg
pop
movsl
cmp
fidivs
push
jbe
jecxz
dec
pop
jl
shr
dec
dec
scas
ljmp
pusha
push
dec
fwait
outsl
xor
data16
push
push
sbb
mov
xlat
jno
test
cltd
xchg
jb
in
loopne
nop
rorl
scas
mov
push
pop
lods
sub
ret
ficomps
sub
fisubs
jnp
push
lods
dec
mov
cmpsl
jl
jge
fs
or
mov
idivb
adc
call
xlat
sbb
shrb
ss
or
sub
or
imul
xor
cmp
adc
sbb
movsl
sbb
lods
or
cs
in
mov
cmpsb
xchg
aaa
ds
lea
aaa
mov
mov
and
in
mov
loop
push
mov
pop
mov
call
dec
mov
out
mov
sbb
mov
xchg
rolb
enter
sbb
ds
xor
xor
nop
fidivrl
pop
or
xchg
int
scas
pop
je
aaa
hlt
and
divb
mov
addr16
ljmp
inc
xor
push
int
ja
xchg
dec
dec
js
mov
sub
mov
ss
insl
jb
inc
hlt
dec
sub
call
dec
xor
xlat
inc
jle
in
cmp
fsubs
push
push
add
inc
sbb
popa
lock
mov
sbb
push
out
jp
call
or
sbb
lcall
xor
dec
in
xchg
ret
xor
mov
mov
mov
pop
shlb
ja
imul
sahf
mov
sub
mov
jle
dec
add
mov
mov
gs
push
sbb
mov
rcr
xchg
xchg
mov
xchg
jno
inc
dec
aad
stos
jne
push
cmc
inc
data16
xor
sbbb
lods
pushf
inc
jp
shll
add
fstpt
xchg
xchg
lret
xchg
imul
frstor
lds
mov
or
xor
dec
mov
xchg
pop
les
push
mov
mov
xchg
xor
cld
xchg
jb
sub
in
inc
push
lods
and
mov
dec
jne
out
sbb
mov
ret
sub
stos
call
shrl
mov
push
cs
popa
mov
les
push
mov
leave
pop
jmp
mov
ret
je
les
push
shlb
mov
adc
sub
adc
push
push
in
js
pop
aas
and
add
jne
pop
mov
jae
nop
pop
dec
rclb
adc
xchg
test
jl
sahf
bound
divb
outsl
push
imull
xchg
xor
adc
jne
imul
dec
push
mov
pop
cmpb
fldenv
sub
loop
aad
mov
popa
xor
pop
addr16
inc
popa
xor
mov
shlb
push
cmp
imul
ret
repnz
add
js
sbb
movl
out
aaa
dec
sti
fwait
loop
push
sbbb
or
lods
push
ret
ret
cmp
add
js
movsb
test
cmpsb
not
stos
adc
popf
mov
subb
sarl
push
cltd
push
bound
sbb
fidivrs
rol
sub
cmp
imul
inc
stos
jmp
lea
or
add
jbe
inc
ss
ds
mov
sbb
mov
aaa
mov
fbld
cmp
add
bound
outsl
pop
inc
dec
inc
orb
pop
pop
push
sti
lods
filds
jno
xchg
repnz
ret
insb
pop
adc
shll
cmp
stos
add
mov
xor
fucomi
lods
sbb
ss
cmp
loopne
pop
push
fistpl
inc
dec
xchg
jbe
xor
dec
pop
repz
in
mov
pusha
adc
xchg
sbb
pusha
mov
add
arpl
daa
fldl
sub
arpl
loop
inc
rclb
fstpl
inc
roll
jge
les
lods
push
cmp
xchg
arpl
orb
jnp
fsubp
push
lea
dec
mov
lret
lahf
test
imulb
add
fimull
or
cmpsb
sbb
stos
hlt
inc
xchg
xchg
push
inc
xor
mov
jne
ljmp
sub
fnstsw
and
push
scas
mov
jb
out
cld
push
pop
jne
test
rcr
jb
push
mov
pusha
push
jno
and
mov
mov
mov
xchg
mov
push
mov
das
xchg
jo
aam
rol
sahf
add
jnp
loop
mov
test
xor
lret
adc
adc
and
iret
lret
adc
dec
repnz
jne
pop
adc
fnstsw
pop
cmp
xchg
add
cmp
les
xor
mov
das
mov
mov
outsl
hlt
pop
mov
jno
mov
pop
movsb
imul
jne
mov
imul
xchg
cld
add
jne
stos
sbb
inc
sub
nop
arpl
sbb
clc
jp
pushl
push
or
loop
mov
push
scas
rcrl
mov
push
xchg
testl
std
enter
xchg
mov
mov
or
bound
cmp
js
iret
add
stc
push
xor
mov
addb
xor
nop
add
ja
sbb
cmp
sbb
pop
test
cmpsb
mov
jo
mov
xorb
bound
scas
cmp
add
ljmp
loope
pop
xor
or
jne
imul
stos
jmp
push
dec
dec
ja
or
pushf
mov
je
lods
sub
push
pop
sub
push
lods
loop
push
mov
adc
fldt
fsub
pop
push
cmp
push
dec
mov
fdivrl
inc
outsb
mov
int3
shll
sbb
out
aaa
jb
movsl
pop
dec
cmp
roll
loopne
mov
hlt
test
push
pop
inc
lods
lahf
cmp
movsl
pop
fiaddl
add
xor
in
pop
scas
jg
add
mov
stos
adc
pop
mov
nop
jp
arpl
cs
mov
in
dec
xor
pusha
inc
push
and
adc
pop
stos
adc
jo
mov
cmp
xor
adc
subb
mov
rcrb
inc
sbb
push
pop
xor
shrl
add
ja
pop
or
push
test
std
inc
xor
mov
mov
jno
add
mov
shrl
mov
cmc
and
shll
outsb
les
scas
popa
ljmp
sbb
cli
xchg
pop
shrl
popa
pushf
or
xchg
push
inc
jp
jge
mov
jae
xor
jo
mov
cmp
push
cwtl
scas
fstp
and
cmp
sahf
loope
add
pop
dec
mov
inc
dec
pop
and
aas
xor
popa
addr16
in
push
adcl
lods
jge
push
dec
jne
out
inc
enter
sub
pop
pushf
arpl
push
inc
jnp
push
fnstsw
fdivrl
and
dec
cmp
leave
cmp
and
lods
aas
pop
sub
mov
inc
xor
shl
add
xchg
in
nop
xor
scas
xorb
stc
dec
out
xchg
push
push
adc
aad
jle
sub
popf
lods
mov
ja
addb
int3
mov
in
icebp
arpl
hlt
inc
dec
roll
mov
xchg
cmp
sbb
add
movsb
cmpsl
mov
pop
repnz
add
xchg
jbe
fs
jo
addl
add
xchg
subb
xchg
pop
inc
mov
cmp
sahf
dec
mov
pop
mov
je
add
scas
jo
movsb
les
and
icebp
pop
into
hlt
pop
pop
xor
push
mov
cmp
inc
add
mov
inc
add
out
xchg
jp
in
stc
or
mov
pop
fs
cli
add
pusha
adcb
scas
aad
sub
cmc
test
push
dec
mov
inc
pop
push
outsb
jge
sub
xlat
mov
and
repnz
mov
xor
sbb
mov
xor
lock
pop
or
je
xor
dec
mov
inc
stc
adc
mov
jl
dec
inc
lahf
into
pusha
xor
mov
sbbl
subb
mov
repz
addb
dec
jmp
inc
add
inc
addr16
cmp
outsl
in
hlt
sub
or
jp
inc
and
inc
push
aad
pop
inc
jp
repz
mov
inc
jo
das
bound
bound
loop
jmp
icebp
hlt
and
dec
fisttpll
mov
pop
lahf
lea
xor
xorl
pop
mov
dec
dec
mov
shlb
sub
pusha
test
add
push
add
jbe
or
ficoml
adc
dec
or
sbb
fs
lods
mov
neg
mov
test
push
inc
fucomi
xchg
addr16
faddl
and
add
aaa
mov
repz
int3
and
jge
or
pop
jb
loopne
xchg
sub
mov
lret
sub
int3
outsl
leave
insb
leave
jno
insb
leave
rorl
lret
adc
hlt
adc
lea
jp
mov
fldt
ljmp
outsl
inc
sub
push
repz
loop
ja
jbe
subb
das
xchg
repz
push
and
pop
push
push
or
adc
das
cmp
mov
jg
in
adc
pushf
or
sbb
ljmp
das
aas
cs
ss
movsl
fcmovnb
fisubrs
add
lea
mov
xor
out
std
scas
ja
out
movsl
bound
les
in
and
daa
int
aas
loopne
sahf
pop
xchg
out
pop
lods
pop
sbb
add
hlt
jne
aas
sub
mov
push
xchg
inc
and
movsl
movl
inc
xchg
loop
jb,pn
pop
in
gs
add
aaa
popf
clc
push
pop
aaa
mov
lret
lock
xchg
les
pop
dec
cmp
sub
sub
mov
sbb
mov
or
cmp
jmp
xor
enter
mov
fdivrs
cmp
inc
push
dec
jecxz
dec
shrl
mov
pop
add
and
xor
xlat
inc
imul
pop
jno
xor
cld
or
sub
mov
rorb
xchg
sbb
pop
mov
xchg
lods
movsl
xor
pop
fcmovbe
in
cmp
in
cmp
sbb
mov
insl
ljmp
push
aaa
hlt
mov
scas
dec
cltd
add
xchg
pop
cmp
add
cltd
pmulhuw
sub
gs
xor
sub
mov
lea
ficompl
mov
sub
jbe
cmpsl
add
adc
lret
sub
adc
add
icebp
jl
lret
imulb
inc
loopne
push
loope
fnstsw
xor
mov
and
mov
mov
xchg
cmp
inc
or
scas
or
mov
sti
mov
lcall
push
push
jbe
jg
mov
rorb
insl
add
add
stos
push
sub
sbb
addr16
incb
sub
into
jl
ftst
mov
pusha
sahf
dec
movsl
mov
mov
mov
int
in
add
and
add
mov
negl
rol
or
fadds
pusha
mov
cmpsl
mov
xor
rclb
lret
roll
fmulp
sbb
pop
sbb
popa
lret
fnstcw
sbb
jl
stos
push
fcoml
pop
sbb
or
cmc
cmp
fwait
out
or
adc
jge
xchg
mov
mov
jp
mov
push
fcmovbe
lcall
cmpsl
mov
xchg
int
dec
xchg
data16
mov
aad
push
mov
sbb
sub
adc
push
mov
roll
inc
add
out
je
mov
mov
and
call
leave
jnp
push
cs
arpl
mov
bound
bound
icebp
aaa
incb
dec
or
fbstp
gs
movsb
push
push
xchg
ret
int3
pusha
jae
or
movsl
mov
into
punpckhdq
out
leave
divl
ss
pop
aam
cmpsb
lock
fisttps
dec
filds
cs
inc
lods
pop
or
xor
sub
adc
stos
mov
movsb
jge
shlb
and
dec
mov
pop
fisubs
adc
adc
inc
outsb
fs
ret
jg
je
and
ss
ljmp
test
jp
insl
std
inc
push
sbb
cmpsl
pop
pop
pop
dec
sub
test
pop
and
lcall
sub
lret
jne
add
add
rcl
cmp
sub
push
and
and
dec
push
cmpsb
adc
in
int
fidivrs
pop
pushf
popa
mov
sbb
cs
mov
in
imul
out
push
sub
ret
inc
ret
shll
sbb
cmpsl
lds
sub
mov
mov
inc
arpl
in
or
dec
mov
cmpsl
mulb
jp
mov
mov
jns
lcall
hlt
or
push
mov
or
int3
mov
aaa
ljmp
inc
sub
xorl
mov
mov
movsl
add
mov
xor
cmp
cmp
movsb
aam
mov
push
cli
js
pop
in
lock
mov
std
pop
in
repnz
add
mov
shll
pop
cmpsb
rclb
inc
sub
ror
mov
push
dec
cltd
imul
scas
sub
outsb
xor
ucomiss
jae
lret
rclb
dec
and
aad
lcall
mov
jnp
push
pop
sbb
or
in
shll
mov
push
int3
pop
cmp
or
pop
jne
jo
scas
adc
sub
adc
or
nop
pusha
pop
scas
fnsave
mov
inc
je
add
sbb
cmp
sub
bound
les
xlat
sahf
jns
arpl
lret
aam
adc
lock
subl
xchg
jns
mov
or
fldt
or
inc
and
incb
xor
push
mov
and
aaa
divl
std
or
aas
dec
mov
int
fstp
xor
jp
bound
xor
or
jbe
push
fimull
jo
jb
or
in
push
or
fmull
test
add
mov
jno
adc
andl
pop
popf
cmp
cmp
and
inc
dec
mov
lret
inc
xorb
sub
fwait
stc
mov
push
shlb
inc
or
ficompl
cmpsb
add
lds
mov
fisttpll
sub
or
xor
jae
mov
jmp
mov
inc
repz
cmp
decb
jge
cwtl
mov
ds
mov
shrb
mov
xor
xlat
in
mov
out
jge
push
lods
mov
push
inc
jl
xlat
and
out
outsl
je
adc
call
xchg
iret
jb
jbe
imul
sahf
les
pop
dec
add
sti
vmread
loopne
push
push
sub
mov
xchg
pop
xchg
out
cs
in
adc
arpl
pop
cmp
fs
dec
ja
call
xor
iret
adc
dec
int3
mov
adc
mov
jae
jp
sub
into
bound
movsl
int3
sahf
in
pop
cwtl
movsl
pop
push
or
shr
fsubs
lock
pop
xchg
and
ja
out
out
cmp
out
xor
mov
aad
icebp
adc
mov
pop
inc
dec
adc
fbstp
adc
rcrl
stc
mov
test
mov
ljmp
test
daa
fmull
push
in
in
sbb
jb
fiadds
xorl
addl
xchg
test
xchg
outsl
mov
aam
cmpsl
iret
mov
push
mov
add
lret
imul
lock
inc
iret
bound
xor
std
lret
outsl
cmp
out
movsb
cmp
jp
push
les
ja
les
mov
insl
add
loopne
xor
stos
pop
sarl
xchg
shlb
stc
mov
jno
push
scas
dec
mov
aam
add
lock
shl
sbb
xchg
paddsb
int
lahf
pop
das
adc
enter
les
jl
inc
ret
in
mov
jo
mov
sbb
lock
mov
and
sahf
cld
aaa
pop
add
lods
ds
mov
iret
rclb
test
les
sub
ficoms
test
sahf
mov
add
xor
push
roll
cmpsl
cmp
xor
cmp
ret
dec
mov
shlb
insl
pusha
adc
or
push
sbb
mov
push
xor
jg
or
incb
mov
sub
mov
mov
jp
dec
movb
mov
pop
movsl
push
out
imul
or
mov
jl
mov
mov
iret
xchg
and
cmp
loop
les
inc
pop
sub
jge
lcall
sbb
pop
notl
or
dec
subl
mov
cs
stos
jbe
fnstcw
int3
jne
push
clc
das
mov
test
fcompl
or
mov
shrl
arpl
insb
fsubrl
dec
outsb
mov
add
inc
add
mov
out
je
sbb
mov
mov
mov
movsb
push
xchg
outsb
xor
mov
pop
push
and
and
add
mov
hlt
lret
mulb
aaa
mov
dec
jge
aam
add
sub
and
inc
adc
inc
pop
pop
sbb
mov
outsl
stos
inc
push
dec
fdivs
mov
and
xchg
jecxz
mov
outsl
push
out
dec
cmpsl
int
mov
or
ficoms
sbb
je
out
enter
ret
push
test
push
outsb
pop
std
jmp
call
data16
in
int3
cmp
and
outsl
fs
mov
sub
lock
add
push
dec
testb
cltd
imul
das
bnd
xchg
test
inc
fidivs
rclb
rorl
dec
mov
ljmp
rol
lcall
or
jle
ret
mov
sbb
jae
cwtl
repz
out
in
xchg
mov
or
lret
rorb
arpl
adc
imul
testb
dec
mov
push
mov
pop
jge
fidivrl
fucomip
and
push
flds
push
sbb
sub
or
test
icebp
add
cltd
adc
out
bound
popa
subb
jno
xor
push
mov
dec
idivl
jo
ret
lods
lods
lods
cmpsl
dec
lahf
fstps
loope
fldenv
in
gs
and
sbbl
stc
fldcw
inc
xor
xchg
loopne
out
jmp
test
xor
mov
arpl
or
sbb
in
or
xor
in
xchg
jg
scas
loopne
adc
fsts
sti
cmp
xchg
int
ds
imul
xchg
shlb
lods
test
xchg
xor
cmp
out
dec
insb
repz
add
xchg
ret
ss
lds
inc
pop
pop
dec
jnp
iret
sahf
lahf
repz
fstpt
faddp
pop
or
fcmovb
jne
jb
inc
lock
mov
xor
fcoms
mov
ja
es
aad
out
in
jge
lcall
pop
mov
xor
push
outsb
cld
or
cmp
lret
mov
jns
out
dec
fldenv
lcall
in
push
test
in
pop
cmp
pop
fistpl
rclb
shlb
rcrl
add
lods
xchg
sub
sahf
popf
lods
js
mov
cmp
data16
pop
mov
aaa
sbb
add
jae
jns
fidivs
sbb
mov
jp
nop
roll
js
mov
pop
inc
sub
sbb
cmp
lods
mov
add
lahf
xchg
sbb
add
jl
sub
scas
mov
lret
mov
das
adcb
sub
add
int3
lods
inc
lahf
jno
dec
adc
insl
arpl
movsb
jno
mov
jbe
dec
stos
xor
cltd
into
pushf
sbb
aam
mov
repz
decb
mov
mov
inc
mov
jl
cmpsb
ret
arpl
jae
outsb
cmp
aad
xor
into
dec
dec
lcall
add
mov
insb
or
in
das
dec
push
inc
add
fcomp
dec
in
dec
add
mov
push
mov
jbe
or
mov
lret
fisttpl
dec
out
jno
mov
fcomps
jmp
jge
adc
jo
sub
mov
cwtl
ss
cwtl
push
inc
add
scas
lret
add
rorb
mov
cmp
rolb
lret
pop
mov
mov
jb
fwait
icebp
add
es
xor
and
test
adc
test
jge
jbe
out
cltd
adc
cld
pop
inc
daa
mov
add
jbe
stc
mov
in
fcmovbe
jecxz
scas
mov
mov
addr16
sbb
cmp
or
fadds
sahf
adc
mov
aam
cmpb
mull
mov
aas
test
scas
bound
jb
jl
aam
push
sti
repz
add
add
shlb
scas
jne
inc
dec
and
xor
aad
mov
mov
xchg
xor
fidivrs
mov
xchg
mov
adc
jp
jp
lcall
mov
pop
xchg
cmc
adc
adc
dec
rcrl
out
mov
push
sbb
cmp
scas
mov
jns
jnp
mov
ret
repnz
sub
or
xor
mov
mov
test
aaa
cs
jno
push
scas
iret
jno
dec
pop
adc
sub
mov
lea
xchg
int
and
jnp
stc
rorl
xchg
lock
roll
jg
out
iret
cwtl
jae
imul
sahf
ja
aas
pop
imulb
rcrb
sub
adc
cs
or
xor
and
aam
xchg
inc
in
fwait
daa
lods
or
pop
jb
cli
je
insb
inc
sbb
in
pop
mov
ja
push
jecxz
mov
cmp
pop
jne
cmp
cmp
xor
and
jb
repnz
mov
cld
aas
rcrb
insb
xor
shrl
mov
push
sbb
pop
or
pop
movsl
test
push
aas
xor
mov
or
leave
aas
je
xchg
aas
clc
into
mov
or
or
inc
jge
dec
jno
test
orl
out
jae
in
stc
fwait
arpl
lds
adc
add
adc
xor
insb
and
jns
pop
in
dec
arpl
jbe
sub
mov
jp
andb
addb
mull
or
jge
sahf
fnstcw
dec
push
jp
rorb
adc
cwtl
sbb
pushf
jp
mov
out
xchg
xchg
adc
cmc
adc
ljmp
cmp
insb
dec
mov
lods
arpl
jl
cmp
dec
mov
add
loope
js
push
push
scas
lret
inc
adc
xchg
jg
xchg
aas
mov
std
adc
insb
loop
or
jne
call
in
shlb
call
testl
xchg
ja
push
inc
cs
out
dec
mov
jbe
jle
push
std
add
addb
iret
sbb
pop
pop
pop
and
fiaddl
push
mov
bound
inc
ljmp
icebp
sbb
daa
iret
mov
jl
sahf
inc
fcoml
frstor
cmp
xchg
enter
mov
fiadds
jl
test
gs
imul
cld
mov
imul
andb
add
jl
push
cli
bound
pop
xor
push
add
dec
push
int3
mov
or
xor
outsb
int3
xchg
fstp
add
imul
mov
imul
fcmovnbe
adc
mov
in
dec
sbbb
ss
jecxz
insl
mov
shl
inc
or
pushw
stos
or
in
mov
mov
xor
in
xor
pop
outsl
pop
push
sahf
les
mov
xor
inc
mov
pop
mov
addr16
pushf
push
insl
push
adc
js
fbld
loopne
pop
neg
mul
fnstenv
push
imul
lret
jbe
in
xor
cltd
pop
mov
inc
pop
in
lahf
and
sbb
sbb
imul
or
loope
lods
outsl
rcr
pop
and
stos
addb
cmpsb
push
adc
fwait
add
xor
lods
loope
jo
push
into
pop
mulb
imul
xchg
ljmp
xor
test
pop
mov
jb
cwtl
scas
dec
int3
notb
in
sbb
sub
mov
mov
lret
cli
add
popf
imul
xor
mov
jne
loop
mov
stos
xor
ret
push
sbb
sbb
sub
jle
push
cmpsl
imul
lods
outsb
jecxz
pop
lcall
and
ljmp
xor
fstpl
inc
es
stos
pusha
stc
sub
lds
fidivrs
roll
mov
jo
push
push
mov
sbb
loopne
xchg
jb
movsb
jecxz
and
fistpll
lahf
fsubl
scas
mov
jmp
sar
adc
lahf
movsl
jl
mov
xor
push
inc
pop
bound
push
lods
xor
repnz
and
adc
outsl
push
pop
adc
xchg
xlat
pop
pop
sbb
shrb
jg
jecxz
call
xchg
mov
jle
push
xor
sub
xor
inc
cmc
inc
dec
sbb
sub
mov
aas
and
sbb
js
inc
into
and
rcll
add
and
lock
mov
int
xchg
stc
add
mov
aaa
loop
adc
and
stc
cmpsl
push
mov
cli
xchg
test
mov
add
mov
fbstp
roll
inc
cmp
daa
loop
fs
leave
xor
inc
xor
in
stos
mov
push
add
inc
sub
add
lock
ds
loop
jns
add
daa
push
push
jns
dec
daa
cmp
fldt
add
stos
cltd
xchg
leave
inc
call
mov
jae
sub
inc
jo
jae
mov
fisttps
push
and
ds
out
sar
mov
mov
and
cmp
out
lret
fiaddl
jnp
scas
push
and
mov
mov
dec
xor
addr16
out
inc
out
scas
cmp
mov
push
mov
push
rolb
addl
mov
push
push
xchg
subb
ljmp
pusha
ss
push
push
fildl
test
rcrl
daa
mov
push
push
repz
arpl
mov
test
xor
or
pusha
ret
cmp
test
out
pop
mov
sbb
daa
xchg
jmp
mov
jnp
test
jns
pop
scas
lds
xlat
sbb
and
int
pop
hlt
xorb
push
mov
cmp
jbe
mov
sbb
dec
jno
mov
daa
xchg
lcall
lods
pop
jmp
stc
adcb
dec
push
sub
add
xorb
out
xchg
xchg
loopne
dec
imul
pop
inc
cli
adc
or
xor
adcb
push
lods
in
bnd
stos
flds
xor
jle
jl
mov
adc
int
clc
call
movsb
ds
jb
loope
cli
pop
cmp
inc
in
sbb
xor
es
imul
dec
fstl
pop
pop
std
pop
jge
je
or
sub
gs
pmaxsw
dec
jo
mov
popl
add
fcompl
pop
outsl
jae
inc
mov
fimuls
scas
pusha
bound
cmp
icebp
jp
popa
xchg
xor
shlb
test
mov
pop
shll
add
and
cmpsb
jb
popa
or
ffreep
das
ret
lret
movsl
jecxz
mov
call
cmp
fldcw
cmc
in
mov
or
mov
shll
mov
in
adc
fsts
fwait
mov
inc
les
xchg
sub
out
pop
dec
push
pop
mov
or
add
dec
jne
lea
aad
ret
xor
fnsave
int3
sub
or
add
push
or
sub
lret
jno
sub
pop
lods
ss
push
repnz
push
fisubl
ljmp
cmp
cwtl
sub
xorl
inc
shlb
out
imul
add
adc
mov
stos
loope
mov
or
push
icebp
cmp
or
outsl
inc
add
add
cmpsl
jns
stos
rcrl
aaa
mov
dec
aam
add
out
adc
shl
fs
xorl
into
adc
stc
jge
out
inc
in
mov
shrb
inc
shrb
incl
inc
sub
int
xor
xor
popf
shlb
lock
fdivs
call
jp
sub
aas
jb
jmp
fistl
scas
nop
push
aaa
xchg
scas
mov
mov
and
xor
sarb
push
pop
dec
sub
jae
push
pop
idivb
and
test
mov
stos
jb
lods
inc
or
push
or
int3
pushf
push
ja
mov
and
push
mov
addr16
sbb
ret
pushf
loop
loopne
leave
lock
shlb
push
lds
sbb
data16
pop
lods
xchg
and
les
xor
test
lock
xchg
ljmp
lret
mov
arpl
shlb
xor
shr
pusha
test
dec
add
ss
adc
push
add
in
push
add
cmp
ljmp
sub
adc
push
xlat
push
in
loopne
arpl
jno
rcrl
or
xchg
ret
fdivl
sub
je
iret
mov
inc
jmp
adc
dec
mov
in
xchg
into
fnstenv
outsl
lea
mov
mov
pop
movsb
test
push
icebp
outsl
in
negl
int
in
or
xor
cmp
sub
loop
sub
jae
iret
sub
ds
out
loopne
outsb
icebp
sbb
stc
insb
cmp
dec
adc
sub
jle
pop
push
add
mov
bound
pushf
ja
adc
and
or
add
mov
mov
xor
sub
insl
sbb
and
sarb
cmpsb
fidivs
pop
sbb
sar
out
scas
lds
aas
and
shrb
gs
loop
sub
adc
fdivl
into
jno
jmp
sub
mov
bnd
push
mov
xchg
and
aad
fdivl
test
xor
dec
push
call
subb
gs
or
pop
in
ljmp
mov
stc
scas
xor
addr16
popf
stc
loopne
adcb
je
push
imull
data16
dec
std
mov
sarl
cs
outsl
adcl
mov
scas
and
daa
add
and
leave
cli
jge
inc
push
sarb
or
jl
mov
pop
cmp
and
popf
and
pop
pop
dec
repz
scas
xor
jo
push
xor
lahf
jne
repz
pop
dec
mov
rorl
adc
mov
stc
pushl
jg
fisubs
mov
sub
mov
ljmp
mov
push
xor
add
xor
lods
jae
out
hlt
adc
adc
test
loope
fisttpll
add
pop
movsl
outsb
mov
push
and
mov
inc
jl
stos
jno
mov
cmp
pop
cmp
dec
and
adc
jle
insl
out
adc
xor
mov
mov
adc
imul
adc
shll
xor
jl
std
insl
push
push
ret
repnz
ss
mov
mov
aaa
pop
xchg
shl
xor
sbb
inc
fadd
cmp
scas
cmp
pop
push
pop
add
imul
sub
sbb
jle
xor
inc
jb
mov
daa
adc
scas
fdivl
dec
push
push
push
popa
jg
dec
das
fnstsw
sar
repz
loopne
xlat
cmp
and
outsb
inc
jbe
std
xchg
jbe
cmp
gs
push
repz
inc
pop
std
cwtl
pop
or
inc
leave
or
lods
dec
pop
mov
aas
sub
cmp
ljmp
and
xchg
daa
lock
js
cmp
fsubrl
sahf
pop
push
int
jecxz
add
filds
cmpl
mov
inc
lods
mov
mov
jb
test
ret
push
pop
mov
addr16
dec
shrl
mov
insb
and
mov
pushf
jmp
mov
js
mov
cwtl
int3
add
pop
stc
sbb
add
xchg
sub
xchg
rolb
addr16
fisttps
add
repnz
jns
sub
enter
mov
sub
push
pop
pop
sub
sahf
out
jle
fstps
outsb
cmpsl
xor
and
fdivs
mov
aad
cltd
mov
or
pop
jl
jmp
add
insb
data16
adc
pop
insl
fs
sub
mov
xchg
push
hlt
das
lret
xchg
inc
sub
add
jp
cs
icebp
ret
xchg
cmp
mov
inc
es
dec
pop
arpl
cmpsl
xor
pop
loopne
call
inc
pop
fisttpll
in
insl
add
mov
push
cmp
movsl
ret
mov
jns
lock
aam
adc
cmp
fsubs
inc
cmp
int3
nop
and
jmp
js
push
stos
jp
and
push
fs
stc
xlat
mov
pop
lock
xor
mov
lret
fwait
cmp
cs
mov
pop
lock
cmp
in
dec
push
push
ficoml
std
jnp
xor
mov
sbb
js
fsubrl
insb
fsubl
pop
mov
mov
jns
inc
loope
cmpsb
jns
call
pop
cli
pop
pop
popa
ror
aaa
outsl
lds
adc
lds
mov
lret
bnd
enter
lea
jno
xor
popa
in
std
loopne,pt
adc
out
push
sub
nop
je
int
jns
or
dec
xchg
lret
add
inc
in
adc
repz
shr
cmp
fucomi
inc
and
decb
out
adc
addr16
sarb
movl
dec
outsb
enter
push
aam
mov
jle
and
xchg
xor
pop
dec
dec
cs
mov
outsb
push
pop
ljmp
data16
jne
pusha
aad
lea
fiadds
mov
into
imulb
gs
imul
push
ds
rep
nop
xor
jbe
inc
cld
push
jmp
cwtl
mov
jno
call
xor
xor
out
repz
xlat
mov
mov
xor
pop
shl
xlat
pop
clc
fdivrl
mov
pop
lds
jp
xor
push
mov
lahf
push
test
push
and
jl
push
mov
ds
imul
insl
add
jp
xchg
mov
lcall
mov
xchg
scas
cmpsl
fidivrl
cli
je
in
enter
jae
or
fcom
pop
loope
sahf
nop
cmpsl
aas
movsl
notb
push
jno
out
daa
lret
lahf
popf
push
push
lea
and
cmp
ljmp
aaa
mov
pop
inc
nop
aas
inc
fs
popl
repnz
movsb
add
inc
mov
repz
pand
lods
or
adc
int3
mov
mov
cmp
subb
or
sub
std
mov
and
xor
outsl
push
mov
sub
repnz
inc
lods
outsb
dec
out
bound
cli
push
in
and
sbb
stos
dec
sahf
aad
inc
sbb
add
cltd
push
push
xor
xchg
mov
sub
or
mov
dec
loop
frstor
nop
sbb
sarb
xchg
cmp
cld
xor
aas
push
dec
add
jmp
cs
mov
jne
scas
mov
mov
std
adc
or
cmpsb
push
mov
dec
inc
push
dec
mov
je
jae
fwait
jbe
mov
loope
ficoml
js
add
outsl
scas
fdivl
xor
add
sub
std
nop
add
enter
aas
bound
das
xchg
mov
shlb
mov
daa
mov
and
sub
rcrb
mov
jle
inc
push
cmpsb
test
add
push
daa
hlt
insl
rclb
push
add
add
ljmp
dec
lds
sbb
xchg
adcl
fistps
call
inc
add
scas
andl
lods
push
inc
outsb
je,pn
jge
incb
lahf
jae
in
mov
mov
dec
sub
fidivl
lds
mov
xchg
pop
jne
sbb
test
jl
cmp
cmp
outsb
or
or
jne
mov
lds
or
mov
pop
ret
sub
dec
ljmp
or
adc
pop
aas
in
mov
rolb
xor
cmc
test
jae
call
ficoml
es
jle
mov
sbb
cmp
jo
jns
add
xor
mov
shlb
loop
dec
jle
push
mov
es
mov
in
adc
cmpsl
mov
push
loope
aaa
jnp
clc
imul
jge
xor
adc
in
cmp
dec
inc
adc
and
xor
cld
push
sbb
pop
add
sbb
jp
daa
jns
mov
fists
push
xchg
dec
xchg
cmp
adc
push
add
into
daa
enter
jle
xor
xor
cli
and
daa
cmp
xchg
sub
lock
lcall
arpl
mov
lret
sub
fdivrs
xor
mov
sub
mov
aad
and
lods
jo
roll
push
lea
popa
mov
cmpsl
lret
bnd
sbb
test
insb
mov
negl
xor
and
mov
push
mov
pop
push
testb
jecxz
and
lods
je
pop
movsl
mov
lods
xchg
dec
mov
xchg
cmp
dec
mov
mov
push
popa
rcrb
imulb
cs
sub
push
pop
sub
mov
and
pop
in
or
mov
dec
inc
adc
in
das
and
ljmp
call
out
xlat
faddl
ja
cmp
cmp
test
adcb
daa
pop
into
sahf
clc
imul
xchg
jle
dec
mov
ficoms
es
das
xchg
and
lods
mov
sbb
cltd
push
pop
ds
adc
inc
hlt
push
or
and
mov
pop
aaa
fmuls
push
dec
sti
jg
je
sub
shll
je
mov
xor
push
stos
lds
push
popf
mov
xchg
push
int3
and
into
loopne
xchg
dec
lea
and
daa
sub
xor
insl
push
xchg
sbb
fsubrl
mov
jae
dec
jmp
or
dec
loopne
icebp
lcall
aam
cs
push
adc
scas
xor
xchg
ret
jo
out
sub
or
enter
int3
imul
cmpsl
je
es
mov
aam
jbe
xor
xor
scas
mov
push
or
mov
xor
pusha
test
jmp
movsb
out
sub
sbb
fstpt
and
cs
jmp
fildll
push
jne
pusha
push
xor
mov
xchg
test
movsl
sbb
repnz
divb
stos
add
mov
inc
mov
mov
push
or
jl
jl
xchg
add
push
sub
pusha
rorl
pop
dec
fs
test
call
xchg
int3
shrl
add
out
jge
jle
into
js
test
fcoml
jnp
cmc
outsl
js
and
jne
sub
notb
rorl
push
pop
push
mul
and
mov
jp
add
enter
xchg
mov
pop
xor
adc
lock
mov
cs
mov
int3
gs
loope
pop
adc
aaa
push
push
dec
pop
xor
sbbb
push
inc
cmpsl
incl
and
arpl
pop
stc
out
cmpsl
jne
adc
mov
mov
xlat
je
push
sbb
ret
fwait
ds
aad
adc
mov
jmp
and
adc
test
or
or
xchg
lret
inc
xor
add
dec
push
jge
nop
push
cwtl
loop
cmc
push
mov
cmpsw
push
data16
and
pop
ficoml
out
dec
sbb
fs
in
or
pand
pcmpgtb
mov
test
jo
jb
iret
arpl
pop
xchg
dec
lea
ret
shlb
xor
insl
jle
int3
pop
test
pop
sbb
sti
jb
stc
add
in
ret
mov
scas
fmull
scas
cwtl
movsl
cs
dec
scas
cmp
push
int
insb
pop
push
hlt
sbb
insl
lock
jne
jp
xlat
out
jge
je
into
jno
ficoms
pop
or
push
push
sbb
jle
push
pop
mov
dec
inc
inc
popa
mov
xor
inc
push
in
push
sbb
inc
xchg
mov
outsb
pop
adc
fstpt
sbb
test
ret
jo
push
fimull
push
cmp
mov
pop
outsl
pop
repnz
mov
je
jno
shlb
lods
bound
cmpsb
je
in
jg
add
cmp
fsubrl
sarb
out
jo
push
xchg
loope
jb
or
sti
loope
fwait
orb
dec
sahf
pinsrw
xchg
in
mov
mov
mov
jbe
fmulp
adc
mov
shlb
cmp
mov
mov
fs
mov
pop
jb
aas
js
mov
xchg
dec
push
mov
movsb
add
fistps
fidivl
fistpll
mov
pop
inc
sbb
mov
stc
jg
cs
jno
lods
scas
fndisi(8087
roll
out
and
mov
test
and
cmp
popf
jne
xchg
cmp
or
adc
push
out
loopne
push
cmpsl
jno
scas
pop
add
jl
inc
push
adc
or
xor
adc
xor
mull
es
add
adcb
mov
rorl
dec
call
jge
sti
dec
daa
xchg
aaa
loopne
cmc
jne
dec
xchg
ja
or
fwait
sti
add
sahf
inc
jge,pn
test
lret
dec
lock
repz
rorl
push
pop
orb
cwtl
out
aas
push
push
mov
ss
out
ds
xchg
jmp
pop
dec
shlb
dec
sub
aaa
lock
jbe
scas
push
mov
mov
adc
lods
cmp
xchg
mov
mov
pushf
pop
js
ja
inc
jae
lock
lret
mov
js
cmp
pop
outsl
mov
add
jno
mov
jns
ja
popf
fmull
rcrl
jbe
or
jo
jge
xor
xchg
inc
dec
add
xor
mov
out
jno
loop
jb
jle
stos
mov
lods
cli
jle
jle
sub
test
pusha
jbe
push
ret
enter
lea
mov
test
int
imul
push
pop
jb
outsl
mov
mov
jbe
pop
cs
xchg
mov
gs
mov
push
dec
ljmp
pop
cmp
dec
sbb
add
lods
mov
loopne
mov
xorb
enter
push
pop
pop
push
aaa
out
pop
inc
xor
icebp
in
jbe
inc
clc
adc
test
adc
addr16
push
mov
aad
aaa
sbb
fcoml
int
out
dec
jmp
or
icebp
xchg
mov
mov
add
fldl
out
daa
das
inc
cli
dec
outsl
or
les
mov
pop
leave
pop
xorb
inc
push
or
outsb
icebp
cmp
push
jne
pushf
push
je
mov
jp
iret
mov
or
pop
jne
pop
loopne
pop
scas
lds
push
mov
xchg
scas
sub
push
adc
int3
ljmp
pop
in
xor
out
sbb
mov
sahf
push
popf
sbb
sub
adc
js
fsts
or
xchg
push
add
ds
testl
add
jl
cltd
and
fwait
or
push
or
xor
ja
call
pushw
imul
xor
adc
xlat
rorl
in
out
lods
pushf
sub
mov
sub
test
aaa
ds
stos
sbb
cwtl
in
aaa
ja
mov
xor
mov
out
mov
ret
es
add
adc
mov
add
lret
cmp
jmp
xchg
lods
xlat
pop
out
mov
hlt
dec
into
es
or
mov
cld
mov
pop
cmpsl
inc
ss
in
jo
or
shll
sub
lods
and
xchg
in
sub
in
cmpsb
sub
inc
cmpsl
test
pushf
pushf
adc
cmp
orb
inc
xor
enter
adc
sub
push
jbe
pop
lcall
push
sarl
add
push
scas
fxch
repnz
push
jge
inc
jae
mov
jns
stos
mov
lcall
lock
cs
or
cmp
mov
jmp
sbb
pop
ds
aas
push
scas
test
pushl
or
test
pop
ss
jae
shll
mov
push
push
daa
mov
add
into
lods
jp
in
xor
add
in
push
es
push
mov
adc
push
dec
sbb
addr16
sbb
addr16
lock
add
cmp
fisubl
xor
pop
dec
and
loope
hlt
sti
out
ss
dec
dec
out
cmp
daa
sub
jne
and
push
and
cmp
xor
xchg
and
cwtl
sti
daa
pop
xor
addr16
mov
jl
xchg
jl
adc
pusha
outsl
cmp
mov
mov
cmp
dec
lods
in
mov
xlat
push
mov
cmovo
lcall
jno
pop
shl
adc
sahf
scas
inc
inc
xchg
sbb
xor
sub
cmp
hlt
inc
lock
xor
and
cmc
stos
sbb
or
lret
adc
and
sub
mov
pop
aad
dec
mov
and
mov
and
adc
mov
dec
sub
add
rol
gs
xor
xor
test
dec
cmp
std
adc
out
fsubrl
mov
mov
repz
pop
inc
dec
jne
icebp
sub
scas
jle
push
dec
xchg
lods
mov
sbb
jnp
outsl
inc
insl
mov
lahf
insl
xor
sbb
dec
pop
int
dec
pop
cmp
push
sbb
xchg
sbb
loope
std
stos
sub
cmpb
push
out
ret
pop
int3
fwait
js
testb
rcrl
sbb
popa
xchg
cmp
jne
sarb
ret
frstor
fcompl
aam
rorl
push
pop
dec
mov
inc
xorl
mov
jp
dec
cwtl
or
jb
stos
std
jb
inc
pop
cwtl
aam
out
popa
and
cmp
sti
xchg
cwtl
aas
jne
and
mov
cwtl
loop
int3
mov
mov
lret
sub
sub
pusha
pop
sub
sbb
push
and
addr16
es
popf
jp
inc
js
fxch
push
or
fidivrl
xchg
mov
enter
fidivrs
mov
js
jmp
out
sub
cli
jbe
bound
lock
adc
test
leave
fcoms
leave
in
push
icebp
shll
jb
nop
int3
mov
mov
pop
adc
pop
push
mov
leave
daa
add
and
push
jnp
dec
jno
lods
cs
es
and
pop
aam
pop
xchg
add
xchg
and
cltd
jae
xor
lcall
add
and
aam
or
sbb
inc
jns
mull
push
xchg
cmpsb
adc
sub
xor
std
dec
push
into
movsb
adc
insl
test
add
sbb
das
rcpps
inc
jg
aas
dec
jg
sbb
sbb
lods
sub
mov
inc
cmp
push
mov
imul
jp
inc
cmp
rorl
cmp
cmp
ret
cmp
shrl
jbe
outsl
pop
push
mov
fisubl
ja
sbb
inc
add
or
leave
shrl
adc
jecxz
lahf
pop
push
xchg
movsl
and
roll
test
inc
and
push
test
xchg
popf
pop
xchg
sub
xor
jbe
xor
mov
int3
xchg
rcl
mov
popf
push
mov
sub
shrb
jno
cmp
add
sub
cmpsl
pop
push
sbbb
lods
ja
xor
addr16
ret
fcom
inc
xor
push
movsb
jmp
cwtl
or
push
nop
insl
and
adc
lret
scas
mov
push
int3
je
mov
shufps
jns
dec
pop
sarb
jbe
push
push
push
mov
into
jge
inc
je
sub
sahf
xchg
in
xchg
inc
cwtl
push
in
xlat
jb
xor
pop
aaa
int3
fcomps
imul
sbbl
call
pop
dec
push
cmp
imul
cli
push
cli
lods
jb
std
in
mov
pop
js
lret
pop
mov
inc
shlb
shr
enter
and
mov
bound
shlb
jecxz
mov
test
adcb
inc
ljmp
imul
rcll
aaa
push
lods
inc
in
inc
popf
jbe
jmp
push
fs
pop
ret
cmp
movsl
mov
stos
cmp
lret
xchg
in
outsb
jge
or
stos
push
mov
pushf
into
sub
sub
cmpsb
or
or
jle
lret
frndint
cmp
dec
pop
inc
sub
movsl
dec
jnp
sbb
scas
out
sub
jne
in
mov
push
out
mov
pop
in
jge
jne
push
je
mov
iret
jg
xchg
mov
or
xor
roll
fisubl
dec
jmp
arpl
mov
loope
in
outsl
imul
push
mov
and
push
xchg
fsubrl
sbb
outsb
xchg
adc
fs
fiaddl
mov
in
stos
pop
leave
jge
test
notl
pop
in
and
jge
test
outsb
mov
mov
mov
inc
push
call
in
adc
jb
xchg
adc
pop
add
cmpsb
rorl
imull
hlt
or
mov
dec
inc
sbb
add
fwait
pushl
shlb
add
fld
stc
pop
xchg
cld
loop
ficoml
and
bound
and
into
mov
fst
sub
aas
pop
and
push
stos
inc
test
cmp
jbe
clc
pop
push
fcoms
inc
popa
je
nop
out
pusha
sub
inc
data16
jb
fsts
movsl
les
inc
sub
sub
cwtl
push
inc
xor
jo
cltd
ret
icebp
adc
add
in
js
add
push
push
mov
sub
add
out
std
jbe
ret
aad
inc
mov
mov
inc
sbb
lret
pusha
iret
lret
or
push
sbb
push
xchg
int
pshufw
and
enter
pop
mov
popa
jecxz
fldcw
jo
lds
movsb
xor
popf
jmp
insl
mov
mov
mov
insb
or
int
xor
mov
call
lods
xchg
xchg
sub
pop
jg
jl
ljmp
cmp
fimull
push
out
or
add
aam
outsb
sbb
lods
aaa
lods
test
push
stos
scas
pushf
imul
push
movsb
cmp
jno
add
jo
adc
add
or
es
outsl
mov
pop
inc
fisubl
je
or
add
cmp
mov
inc
xchg
jnp
in
cmpsl
mov
xor
jmp
push
ja
adc
lret
ljmp
sbb
jmp
fisubrl
xor
lret
pop
fisttpl
mov
rcll
mov
pop
out
fistl
ljmp
jo
jmp
loopne
and
xor
stos
xchg
push
push
fsubp
adc
call
loop
fildl
call
pop
or
xchg
cmp
add
cmp
ret
clc
clc
mov
inc
mov
ficoml
mov
xlat
jns
lods
pop
xor
mov
clc
jmp
nop
sahf
push
cmpsl
jp
fst
adc
mov
popl
popf
push
push
cmp
sbb
sub
push
test
mov
mov
aaa
jno
xor
lods
jnp
pop
cmp
pop
or
sbb
jge
in
add
lea
mov
les
test
or
test
stos
scas
rorb
mov
scas
add
jae
and
dec
arpl
mov
jp
ds
and
clc
cmp
and
jge
pop
bound
inc
xchg
fadds
add
dec
out
pusha
stos
mov
lods
push
hlt
loopne
push
pop
nop
fs
shrl
popf
loopne
push
push
push
fstps
xor
sbb
sub
mov
adc
cmp
fisttpll
cmp
mov
mov
shrb
pop
pop
js
insb
in
test
push
xlat
push
dec
jg
sbb
inc
sub
jb,pt
insb
cld
test
idiv
xchg
pop
lods
lret
push
dec
sahf
sub
push
push
in
out
push
sbb
in
adc
out
jae
jge
cld
sbb
ficompl
push
outsl
sbb
cmp
inc
push
sahf
mov
mov
sub
inc
mov
add
or
sub
test
jmp
insb
out
add
fimull
pop
add
sub
push
movsb
pop
into
jmp
dec
jp
ljmp
scas
testb
jnp
arpl
or
mov
sub
mov
js
lret
rorl
pop
and
fmull
mov
mov
es
jmp
fsts
imulb
call
and
aas
add
push
cmpsb
js
jmp
sbb
mov
adc
aas
pop
or
and
je
mov
sub
fsubrl
icebp
sbb
into
xchg
ds
pop
mov
add
adc
or
push
adc
adc
xchg
mov
xchg
ja
inc
std
xchg
push
add
fwait
test
pop
jo
hlt
lret
dec
rolb
shll
leave
fs
sbb
es
repz
and
shrb
inc
pushf
xor
add
or
aas
dec
cs
cmp
fwait
loopne
jo
test
and
or
dec
pushf
addr16
mov
mov
inc
cwtl
sub
ss
inc
push
mov
mov
pop
outsl
hlt
into
cmp
add
std
push
insl
pop
dec
pushf
js
mov
ds
aas
das
push
lcall
xchg
fcompl
cmp
lods
xlat
lret
mov
addr16
push
jp
push
iret
in
movsl
push
mov
sbb
and
jae
cvtps2pd
sbbl
or
aam
add
xchg
in
sub
add
leave
icebp
xor
mov
mov
pop
inc
stos
pushf
dec
ss
xchg
mov
xchg
scas
gs
or
sub
pop
mov
mov
mov
xchg
addr16
jp
jp
push
pop
or
mov
push
lea
xchg
ljmp
idiv
imul
push
and
out
inc
lods
dec
sahf
jbe
lods
sub
mov
lods
cmp
xchg
out
jo
mov
lods
add
or
repnz
es
xchg
jg
mov
cs
iret
pop
sarl
daa
lods
jnp
sub
or
repnz
pop
mov
xchg
jbe
movsl
mov
rcrl
jge
adc
loope
xlat
xor
pop
sbb
push
xor
orb
mov
das
add
fisttps
mov
sbb
mov
sub
jns
push
aad
xor
sub
imul
add
push
mov
scas
push
sahf
sahf
hlt
scas
sahf
fnstcw
push
jnp
mov
and
cmpsl
dec
push
xchg
or
or
in
adc
push
repz
popa
push
outsb
ja
addr16
inc
xchg
sti
cmpsb
insb
cmc
cli
fwait
xor
sbb
mov
ret
std
push
xor
pop
mov
test
mov
shll
jno
jmp
add
das
xchg
push
jnp
movsl
xchg
cmp
add
cmp
faddl
ja
std
xchg
jnp
inc
repnz
push
cmpsb
push
sub
mov
lock
mov
mov
shll
shll
jg
push
movb
pop
mov
shrl
jl
dec
orl
cmp
jae
cmpb
adc
scas
cmpsb
add
or
test
pop
lcall
addr16
push
data16
lds
pop
mov
adc
mov
subb
leave
andb
push
lds
mov
das
mov
je
das
sahf
leave
mov
subl
xchg
mov
xchg
int
mov
imul
andb
or
jecxz
rolb
fidivl
jno
jmp
stc
add
in
push
and
ret
imul
sbb
mov
movsb
es
jge
dec
test
dec
ret
adc
jl
fldlg2
mov
sub
stos
orb
std
fisubl
lods
les
arpl
or
je
xor
push
nop
filds
ja
sbb
pop
or
aas
xchg
inc
or
jb
sub
leave
sbb
adc
adc
mov
into
inc
movb
push
mov
rcll
add
push
mov
inc
loopne
add
add
imul
mov
fiaddl
jns
and
std
sar
push
testl
jne
mov
std
mov
hlt
inc
sbb
orb
inc
jge,pt
sbb
inc
faddl
add
icebp
aad
lcall
jno
sahf
push
daa
mov
and
divb
or
aas
sub
mov
cmpsb
scas
adc
loope
rol
adc
shll
js
mov
jmp
fs
js
inc
shr
lea
stc
ja
aam
lea
adc
inc
lret
adc
pop
int3
mov
sbbb
xchg
push
add
minps
xlat
ljmp
cmp
test
cltd
sbb
mov
pop
insb
stos
lcall
mov
call
neg
inc
outsb
add
inc
lods
stc
jg
pop
dec
js
push
mov
outsl
xchg
sbb
cwtl
dec
repnz
jb
sub
inc
rorb
scas
dec
add
fstpl
push
and
mov
sub
pop
xchg
outsb
adc
push
push
cmp
ret
lret
inc
xchg
stc
or
mov
xchg
add
add
scas
mov
mov
enter
les
mov
stos
dec
lea
popf
lret
push
pop
adc
sub
out
add
stos
inc
cmc
cmp
notb
subb
jns
popf
or
xchg
in
pop
test
test
adc
andl
push
aas
sub
mov
fstp
and
mov
push
and
pop
dec
in
dec
inc
and
mov
enter
popa
mov
subb
inc
fwait
pop
outsb
jnp
in
out
jp
cmp
sbb
xor
or
shll
inc
jne
into
mov
call
jle
sub
adc
lock
xorl
jbe
add
jmp
push
push
cmp
mov
das
jb
push
test
loope
jbe
aas
pop
mov
inc
je
in
adc
push
xchg
jl
in
jb
sahf
mov
xchg
popa
add
mov
pop
push
lods
mov
push
adc
mov
fcmovbe
jge
outsl
mov
je
xchg
jl
out
cmpsb
scas
data16
testb
sub
cwtl
jmp
out
mov
sbbb
xchg
fildll
inc
push
mov
dec
push
cmp
lods
loopne
movzwl
ret
dec
negb
pushl
fadd
pop
out
mov
pop
ret
push
imulb
in
jecxz
int3
ss
pop
cld
xchg
mov
dec
mov
dec
cmp
sub
mov
loop
mov
dec
or
movsl
das
mov
in
sbb
fldcw
jg
rcr
mov
daa
jmp
push
adc
pop
imul
xor
lcall
movb
js
sub
lods
fdivl
xor
mov
testb
pop
jp
cmpb
and
sub
inc
mov
les
test
ret
icebp
mov
andb
sub
push
cmp
scas
inc
dec
push
outsl
adc
pushl
and
ret
and
insb
adc
bswap
and
std
sbb
jp
pop
mov
repnz
out
stos
push
cmpsb
adc
out
mov
sahf
mov
int
in
jne
mov
push
and
sbb
je
mov
cmp
xor
cmp
cmp
mov
fcmovbe
lahf
inc
jmp
lods
sub
out
pop
push
dec
cwtl
call
sarb
and
dec
scas
jmp
outsl
aaa
clc
push
mov
push
push
pop
sub
sub
insb
and
cmpsl
and
mov
stos
pop
mov
insb
ror
jb
sub
pop
xchg
divl
and
jnp
mov
daa
adc
xlat
es
mov
mov
inc
sarb
sbb
call
js
add
xor
xchg
imull
push
imul
xor
punpcklwd
mov
fcompl
aad
sti
push
inc
jo
jl
js
mov
stos
sub
jge
scas
mov
push
int
call
arpl
les
in
dec
lods
frstor
dec
leave
insb
pop
inc
xchg
mov
lret
mov
dec
lods
xchg
lods
mov
adc
add
call
out
xor
cli
adc
jecxz
inc
lock
and
das
enter
nop
sbb
int
aad
scas
jnp
and
roll
jle
loopne
jns
inc
add
inc
lea
dec
mov
in
aad
pop
aam
icebp
cmp
jb
and
scas
cmc
cmp
and
add
stos
jp
or
mov
mov
in
fld1
inc
push
repz
push
inc
loopne
shlb
jb
imul
xchg
jp
push
ds
je
jecxz
jnp
jl
fbstp
pusha
iret
popf
mov
andl
arpl
mov
into
add
push
ret
cmp
dec
push
arpl
add
mov
or
sahf
sub
les
mov
jo
or
iret
adc
test
push
xchg
jle
and
or
insb
inc
js
movsl
call
ret
sti
loopne
fisttpl
movsb
sub
ds
push
push
jg
push
add
inc
je
jne
ja
cmp
out
xchg
jg
mov
aam
data16
imulb
inc
jne
gs
xor
xchg
mov
inc
or
out
bound
sub
aam
insl
push
rcrb
dec
stos
pop
outsl
aam
sbb
cli
cmp
mov
inc
pusha
insb
popa
lret
xchg
pop
test
das
into
popa
push
pop
jb
stos
and
cmc
stos
pop
aaa
pop
int
mov
ja
arpl
inc
xorl
pushf
dec
test
sahf
xor
fnstsw
adc
sub
add
jnp
mov
xchg
inc
push
adc
dec
inc
pushf
hlt
lock
jne
addr16
test
mov
mov
xor
loopne
sub
jle
jno
xor
test
mov
neg
cld
push
adc
shll
push
jno
dec
dec
mov
arpl
mov
and
repnz
mov
in
mov
pusha
cli
pop
in
xor
dec
fisubl
push
pop
loop
xor
iret
push
mov
inc
mov
arpl
divl
je
in
jb
jno
inc
sbb
imul
mov
jnp
pusha
hlt
hlt
jb
movsl
add
and
imul
sub
repnz
lods
out
xchg
pop
stos
sub
call
add
incl
and
xchg
xchg
xchg
out
data16
fbld
jo
out
aam
inc
mov
jae
cmpsl
scas
jmp
mov
lock
aas
mov
mov
shll
cmpsl
xchg
xchg
movsb
dec
cmp
xchg
inc
es
cmp
push
inc
push
pop
and
ret
repnz
xchg
frstor
gs
lret
add
popf
aad
adc
xor
cmp
ja
push
inc
stos
or
lret
jb
xor
mov
divb
jno
mov
push
add
mov
jge
shrl
out
inc
rcr
in
gs
or
xor
pop
pushf
call
std
pop
repnz
xor
test
mov
repnz
and
mov
ja
shl
xlat
int3
jecxz
push
xor
sub
in
add
leave
jnp
fucom
mov
les
arpl
jbe
test
pop
sarb
stos
jne
add
pop
cmp
pop
mov
ljmp
in
and
addr16
loopne
push
mov
mov
ret
cmp
jmp
fdivp
jle
sub
cmpsb
push
jecxz
xchg
add
cwtl
lods
adc
and
mov
mov
pop
or
mov
ss
fwait
sbb
pop
sub
push
or
add
xor
ljmp
pop
data16
outsb
aam
loope
xor
in
repz
push
and
into
stc
pusha
pop
xchg
cmpsl
out
int3
adcl
cmp
pusha
lahf
aad
xchg
lea
hlt
xor
leave
pop
pop
das
rcrl
adc
fs
int3
out
test
popf
cld
cmpsb
ret
add
pop
or
in
int3
mov
movsl
scas
insb
movsb
aad
imul
popa
ss
and
xor
or
jnp
rclb
jno
cmp
js
out
out
arpl
inc
jo
or
sbb
sbb
jp
rcll
xchg
pop
add
push
outsb
add
jo
je
sub
fcmovbe
fcoml
push
insl
ret
sbb
xor
xor
jno
jp
mov
adc
scas
adc
mov
mov
imul
mov
ret
jno
mov
movsl
adc
cmp
ds
pop
std
loopne
into
ljmp
jne
stos
inc
inc
add
pop
cmpsl
cmpsl
stc
or
mov
fsubrl
loopne
dec
pop
fisubrs
mov
insl
out
outsl
push
out
jae
jne
dec
daa
jo
sbb
push
stc
lock
mov
sbb
cmc
cli
inc
mov
std
xchg
addb
notb
cmpsb
fstl
inc
mov
lea
int
sar
fnstsw
int
adc
mov
ds
scas
xlat
sbb
lds
pop
aam
sbb
cld
in
out
xchg
or
mov
jno
or
jp
push
mov
jge
rorb
add
lods
jecxz
daa
mov
fsubrl
xor
outsb
cld
or
insb
mov
sbb
pop
std
scas
out
in
add
xor
lods
mov
adc
adc
or
xchg
aaa
out
nop
inc
je
or
dec
movsb
and
ffree
jmp
sub
xchg
sarb
and
sbb
jns
and
mov
lods
adc
sar
adc
and
aad
into
jno
and
add
lods
ss
repz
jl
stos
inc
add
adc
pushfw
xchg
or
pop
rep
into
mov
jl
outsl
push
jbe
out
cs
ljmp
xchg
adc
jbe
mov
fdivrl
dec
or
imul
call
mov
pusha
sbb
dec
pop
cmpsb
fwait
test
push
xchg
push
xor
xor
pop
div
xchg
shlb
jg
aas
adc
lahf
test
sbb
dec
sub
and
lods
jns
insl
jmp
test
leave
test
hlt
shrb
and
xchg
das
lret
inc
push
xchg
push
or
pusha
into
push
inc
cmp
jb
mov
aas
mov
loope
and
mov
mov
cmp
mov
ds
insl
cmp
or
or
push
mov
cld
into
jns
mov
bound
inc
jne
sti
or
pop
fcmove
pop
mov
ljmp
mov
mov
mul
in
inc
mov
scas
xor
dec
adc
int
out
mov
inc
xchg
ja
cmp
push
dec
push
ret
out
adc
mov
jmp
push
pop
and
and
in
push
js
stos
sub
mov
call
aaa
cwtl
addb
dec
dec
pop
and
pop
test
pop
and
jae
mov
es
adc
dec
inc
pop
rcll
ret
push
shr
add
adc
or
lret
push
addr16
push
push
dec
psrlq
fdivs
rcl
cld
movsb
and
push
testl
sbb
cmp
dec
mov
hlt
orl
adc
std
mov
jg
repz
stc
insl
scas
repz
movsl
push
jae
jae
adc
adc
cmp
adc
jmp
sar
mov
insl
ret
outsl
nop
cmp
xchg
adc
int3
rcrb
dec
mov
scas
or
push
imulb
rep
pushf
jae
inc
mov
dec
rcll
gs
pusha
push
xor
das
push
jecxz
jo
add
movl
ja
jb
mov
mov
inc
push
jmp
mov
jb
into
xchg
enter
bound
rcrl
pop
inc
popa
lds
icebp
gs
xchg
ja
jne
loop
pop
sbb
lea
inc
lock
jecxz
sub
in
sub
out
in
faddl
scas
inc
inc
sbb
add
and
shl
shll
es
inc
add
adc
jmp
loop
sbb
out
sahf
das
adc
push
xor
sub
shrb
or
stos
enter
mov
pusha
test
dec
arpl
out
push
adc
xchg
pop
and
mov
inc
mov
in
in
jl
arpl
push
mov
aam
addr16
or
mov
in
mov
fisttpll
ja
sub
xchg
xor
jae
sbb
sbb
and
fisttps
cmp
inc
mov
or
cmpsb
jbe
mov
mov
mov
out
mov
push
jno
rol
inc
mov
ss
xchg
js
push
ljmp
repz
pop
sub
push
pop
add
shll
cli
hlt
xor
pop
shll
test
in
popf
addb
adc
cmc
neg
in
neg
xor
fmulp
and
and
fucom
roll
jbe
test
inc
jo
sahf
push
popf
or
cmc
add
push
int
loop
pop
and
cmp
jns
imulb
cltd
arpl
movsb
adc
incb
jg
mov
sub
mov
aam
push
xchg
popl
pusha
rolb
mov
cmpsl
in
adc
cmpsb
mov
dec
xor
and
cmp
and
idivl
std
and
mov
leave
xor
or
sbb
push
cwtl
jg
sub
or
inc
pop
lret
std
inc
sub
aad
not
pushf
imul
dec
ljmp
jb
or
push
pop
cmp
ds
dec
aad
scas
jg
push
mov
dec
mov
and
sahf
xor
loopne
dec
jne
jle
sbb
mov
xor
hlt
cmp
loopnew
inc
mov
and
stc
push
frstor
xor
dec
in
dec
scas
cld
imul
rcrb
adcl
shr
push
jne
lea
aaa
pop
repz
sub
daa
mov
sbb
pop
je
loope
pop
arpl
xchg
jne
fnsave
mov
add
cmpsl
rcr
or
xor
stos
cmpsb
cmp
lods
pop
popl
fidivrl
pop
xor
mov
dec
adc
push
movsb
mov
ficoml
sub
pusha
ret
xchg
jo
call
adc
add
add
or
bound
pop
mov
push
sbb
push
sbb
push
pop
add
jne
xor
rcrb
pushf
pop
xor
dec
sbb
xor
push
xor
shlb
mov
sbb
push
lcall
negb
cmp
enter
push
push
adc
mov
mov
xor
filds
jnp
sbb
cmp
pop
pop
and
iret
or
push
cmp
fstps
jno
mov
loopne
js
in
pop
mov
outsb
mov
mov
shlb
repz
pushf
lds
into
rcrb
cmp
lret
dec
clc
inc
mov
stos
and
pop
and
mov
jl
dec
popf
mov
andb
mov
push
fistpl
xor
jno
cmp
loopne
fadd
shrl
std
pop
scas
fisubrs
loopne
and
sub
xchg
cld
lods
dec
bound
hlt
mov
push
in
and
and
xor
sti
or
pop
test
int
enter
jp
int3
dec
inc
push
sub
js
enter
stos
sub
mov
or
and
pop
lods
sub
repnz
dec
lods
mov
outsl
jecxz
push
inc
jbe
sub
add
mov
shll
call
jo
mov
in
mov
mov
mov
adc
sti
pop
pop
pop
and
cmc
sub
push
push
and
insl
pop
mov
push
xchg
lock
add
ret
xlat
add
cmp
insb
mov
push
xchg
es
or
sub
scas
imul
dec
push
and
mov
xor
shlb
out
icebp
shrb
mov
enter
sub
pop
stos
call
sub
push
cmp
pop
xchg
into
in
imul
mov
movsb
rorb
sub
push
jns
cmp
iret
into
repz
adc
inc
xchg
stos
cmc
dec
jne
mov
insl
add
hlt
xchg
inc
aad
dec
in
enter
seto
xchg
xor
test
cs
inc
lea
mov
mov
ret
les
xlat
popf
dec
sbb
sbb
jae
aaa
shll
outsl
fbstp
add
pop
repz
das
ret
fisubrs
mov
add
mov
fistpll
bound
add
adc
je
in
jne
push
mov
jne
push
lds
scas
test
ds
sub
mov
mov
daa
jo
push
jmp
mov
dec
jge
das
inc
leave
out
sbb
scas
mov
scas
dec
sti
ja
lods
fdivs
lcall
aas
mov
lcall
pop
inc
mov
loopne
ds
pop
lock
test
gs
cli
jne
push
push
sbb
cmp
insb
in
cmpsl
pop
sti
jae
sub
test
push
xchg
lds
pop
xchg
fyl2xp1
jle
mov
loop
adc
ss
jbe
rolb
lds
add
xor
adc
mov
xor
addr16
xor
test
ret
jl
out
cmp
xor
push
daa
pop
cmp
mov
push
dec
add
clc
pop
xchg
ret
pop
xchg
cld
insl
push
sbb
and
stc
mov
pop
jl,pn
jae
rclb
cmpsb
add
insb
movsb
add
push
popa
ret
mov
cmp
pop
push
inc
cmpsb
and
inc
jnp
sbb
fdivp
pop
mov
push
and
addr16
incl
lds
mov
sub
test
cld
cmp
or
hlt
jle
or
stc
loopne
cmp
pushf
xchg
mov
adc
push
xchg
aas
or
cmpb
push
add
push
jmp
sub
lcall
hlt
push
or
scas
push
int3
push
call
sub
and
rcr
mov
and
pop
scas
and
mov
sbb
jl
cmovno
loope
add
push
adc
cmp
mov
sub
jne
addb
or
outsl
jg
jmp
stos
xchg
adc
clc
daa
popa
mov
mov
cmp
andl
xor
cmpsb
xchg
add
dec
insb
lahf
jmp
test
push
sahf
push
push
sbb
subb
jnp
xchg
mov
into
aas
sbbb
push
xchg
ljmp
and
addr16
mov
sbb
mov
adc
inc
inc
sti
xchg
adc
daa
insl
hlt
push
mov
or
bound
jl
test
or
pop
js
test
out
dec
test
cmp
adc
les
xchg
lock
scas
add
xlat
pop
outsb
insb
cltd
out
test
and
leave
adc
cmp
call
lock
xchg
cmpsb
int3
arpl
in
mov
sub
mov
jbe
adc
inc
sbb
mov
lock
out
ret
into
mov
adc
mov
loopne
je
adc
movsb
icebp
mov
insl
in
cmp
testl
ds
scas
out
mov
xor
aam
cltd
sahf
lret
sub
add
sahf
mov
add
fdivrs
nop
dec
lret
sbb
jge
pop
push
add
lret
xchg
mov
dec
xor
xchg
jno
imul
sub
cld
push
fmuls
adc
cmp
sbb
flds
aaa
std
int
inc
ja
inc
popa
jge
add
stos
pop
loopne
xlat
pop
cld
bound
imull
jmp
cld
lock
mov
fs
fstl
adc
sub
xchg
dec
outsb
gs
xchg
sub
mov
dec
jb
test
cwtl
sub
dec
inc
inc
jne
push
test
mov
mov
sarl
xchg
add
cmp
js
xchg
push
es
jp
lcall
out
les
sbb
fs
roll
shl
in
mov
xor
xchg
mov
pop
lods
lret
cmpsb
outsl
ficompl
xchg
outsb
gs
ret
movsb
mov
mov
mov
rcrb
jecxz
lret
mov
mov
cmp
es
or
push
jne
lods
adcl
femms
scas
loopne
mov
in
test
clc
push
pop
decl
and
stos
jbe
data16
cmpsl
and
adc
sub
cmp
cmp
stos
jecxz
fnstenv
insl
jecxz
lcall
xchg
out
mov
cwtl
cwtl
repz
inc
outsl
mov
pop
inc
pop
lea
mov
aaa
adc
incl
xorb
push
fldl2e
sti
rcll
movsl
ret
lods
out
jmp
std
add
outsb
lahf
push
hlt
push
movsb
xlat
jmp
push
insl
sbb
movsl
rcr
jns
xor
jnp
mov
xorb
sbb
jmp
sbb
mov
outsb
ret
xchg
dec
push
add
insl
fistpl
jae
pop
mov
pop
jecxz
and
push
mov
push
add
lcall
test
push
add
mov
xor
mov
mov
ss
jp
jno
xchg
cld
sbb
shr
adc
jge
jge
lret
mov
add
lret
xorb
jns
jl
push
or
cmpb
out
stos
out
fbstp
push
pop
rorl
or
inc
fstpt
pusha
test
bound
push
lea
mov
mov
xor
fidivl
push
inc
enter
int3
shll
pushf
cmc
jbe
push
fs
fdivp
stos
cmp
adc
push
mov
leave
sub
add
lock
inc
push
sbb
mov
test
push
movhps
fisttps
jo,pt
popf
lds
adc
cld
fcomi
xchg
or
negl
pop
fst
mov
xorb
pusha
fisubrs
push
pop
cli
or
int3
shl
int
adc
addr16
leave
cmp
fadds
or
ljmp
cmp
inc
push
jae
or
incb
jle
imulb
scas
inc
or
fs
scas
ja
and
cli
fcoms
mov
out
mov
xor
mov
mov
js
cmpsb
hlt
dec
rcl
lock
sbb
jmp
xchg
mov
shll
cwtl
out
add
xchg
inc
push
sbb
and
aam
xor
or
inc
sbb
lods
xchg
je
sbb
jmp
mov
mov
test
call
cmpsl
adc
mov
adc
jp
adc
loopne
fsubr
sub
pushf
jnp
or
jb
push
dec
pop
aam
adc
push
xor
push
push
cmpsl
jne
lret
fbld
adc
pop
jg
ficoml
in
mov
stos
pop
sahf
cs
mov
mov
punpckhwd
cmp
mov
cli
and
fdivrs
push
push
mov
divl
mov
xor
xorl
and
cmp
scas
mov
sub
das
add
inc
pop
and
sahf
stc
mov
jns
mov
xchg
mov
dec
xchg
bound
enter
mov
fsubrp
inc
inc
ret
loope
dec
push
dec
clc
push
mov
lahf
inc
sbbb
lock
sbbb
add
icebp
and
sub
cld
jbe
mov
daa
cli
xlat
jmp
cmpsb
xor
lcall
fdiv
test
sbb
add
es
sbb
arpl
ss
pop
ror
sahf
sub
cmpsb
push
lods
ret
fbld
pop
push
or
sbb
fiadds
or
mov
adc
dec
jno
push
dec
imul
push
jae
rcrb
dec
dec
imul
pop
sub
loopw
pushf
mov
int
int
mov
inc
jl
popa
jmp
cmpsb
xchg
enter
out
arpl
mov
mov
mov
jp
or
xor
inc
stos
adc
addr16
int3
xchg
xchg
data16
xor
int
daa
cmp
push
dec
bnd
jnp
sahf
popf
mov
xor
iret
mov
repnz
xchg
adc
jp
jo
cs
int
scas
jl
xchg
pop
icebp
scas
sbb
and
pop
int
mov
sub
movsb
push
push
or
mov
aas
daa
cmp
cmp
adc
lcall
jl
or
cs
mov
push
xor
push
xor
sbb
repz
mov
push
xor
lret
in
cli
js
sbbl
je
push
xchg
or
hlt
jns
xor
icebp
jne
clc
dec
cmpb
inc
pop
lock
jl
cltd
lods
loopne
cmc
test
cld
xchg
dec
push
add
fistps
and
sub
jno
jbe
in
sub
sub
add
and
jo
xor
sbb
sti
out
mov
out
xchg
add
stos
and
inc
push
lods
sbb
adc
pusha
jne
loope
sbb
adc
mov
js
pop
add
cwtl
outsw
cmp
sbbl
rclb
mov
js
jb
mov
push
pop
rep
inc
lods
cli
ljmp
inc
cwtl
les
es
fcom
sub
in
sbb
shr
adc
xor
mov
hlt
into
in
sbb
les
pop
js
mov
jmp
inc
jnp
fstpl
stc
and
loop
push
ficoml
sub
adc
cmp
dec
mov
sbb
mov
cs
gs
lret
daa
cld
mov
jge
push
fildll
cltd
popf
push
lods
sar
xor
add
aaa
push
and
test
add
clc
scas
push
inc
jmp
fldcw
ficoml
adc
pop
inc
loop
pop
sub
xor
ss
movsl
sbb
dec
dec
mov
xchg
and
and
jg
jns
mov
sub
aas
js
pop
dec
pop
cmc
bound
ss
testb
lret
ss
add
or
sub
pop
int
cld
push
add
or
mov
and
jle
pop
inc
mov
mov
and
movsl
mov
lods
jge
test
and
push
loopne
xchg
mov
fs
sbb
lods
jbe
lods
inc
push
inc
in
sti
xchg
cmc
bound
cmc
mov
out
jns
add
imul
adc
loop
lock
outsl
and
repnz
addl
push
xchg
ds
cmp
call
rcll
xor
pop
or
mov
jbe
pop
pushf
cmp
gs
mov
jnp
aas
add
lahf
inc
dec
fsts
inc
pop
flds
test
xchg
xor
mov
inc
cmpsb
jle
jae
cmp
pop
xchg
xchg
jb
gs
jecxz
add
loope
inc
cltd
test
repnz
in
cmp
pop
or
add
mov
ss
mov
shlb
jle
insl
pop
add
lds
mov
dec
ljmp
es
adc
pop
xor
scas
push
test
pop
ret
xchg
imul
pushf
ds
in
mov
lcall
repnz
push
incb
mov
pop
pop
push
xor
jmp
ret
fsts
sub
adc
pop
or
into
stos
adc
stc
mov
outsb
push
repz
push
adc
sub
pop
subl
pop
mov
repnz
loop
push
cli
ja
cmpsb
cmp
filds
jns
in
jo
sub
notl
dec
mov
push
pop
push
aad
push
and
jo
push
arpl
xchg
cmp
cltd
ss
and
or
jbe
test
mov
sub
ljmp
scas
dec
pop
sti
cmp
inc
sub
cld
lcall
pop
mov
in
jecxz
stos
in
mov
ja
shrb
movsl
in
sub
adc
mov
mov
xacquire
sub
sbb
ret
xchg
push
divb
addr16
push
cmpsl
cwtl
fldl
rcl
pop
aaa
lcall
scas
push
arpl
mov
push
popf
jg
idivb
push
das
mov
ljmp
je
add
add
fucomi
sbb
fcompl
das
mov
lock
pop
icebp
xor
xchg
pop
shr
jb
shlb
popa
push
outsl
ret
sbb
pop
add
arpl
sub
pop
sub
adcl
neg
sub
pop
jecxz
xchg
cmpsw
inc
xchg
push
mov
pop
mov
or
mov
mov
dec
gs
add
sahf
mov
fildll
idivb
int3
es
sbb
shl
jns
adc
gs
mov
pop
xchg
cmovbe
leave
negl
inc
mov
test
push
pause
cltd
sbb
daa
mov
cmp
in
adc
jb
pop
movsb
sbb
push
imul
dec
pop
scas
out
in
loop
aaa
js
enter
mov
fadds
pop
imul
xchg
idivb
mov
lahf
add
mov
out
mov
fstp
js
stos
or
jo
sbb
xor
roll
mov
inc
pop
call
cmc
push
loop
mov
test
stc
fcoms
icebp
ret
mov
mov
leave
mov
mov
sti
sub
outsb
push
or
dec
inc
add
icebp
sub
mov
insl
xchg
daa
aad
lea
out
in
lret
cwtl
movsb
xchg
int3
in
xchg
add
sahf
or
cmpsl
push
lods
jmp
out
mov
pop
inc
cmp
mov
stc
and
push
arpl
xor
sbb
fsubrs
sub
ret
adc
inc
mov
lahf
push
cmp
mulb
push
jl
mov
and
mov
or
scas
test
outsb
hlt
out
aaa
cmpsl
mov
loop
loope
sub
out
rclb
insb
mov
cmpl
jecxz
xor
dec
shrb
fistps
fstpt
and
loopne
xlat
loopne
repnz
in
cmp
push
mov
enter
and
adc
mov
int
sbb
cwtl
add
push
aad
lret
mov
sbb
subb
das
inc
add
rclb
jp
mov
mov
mov
xchg
pop
or
jno
dec
stos
sub
cmp
lods
push
dec
jg
gs
cmc
mov
sub
outsl
inc
xlat
insb
bound
adc
lods
insb
jmp
dec
test
push
ret
sub
push
insl
jno
fiadds
outsb
fimuls
repnz
jge
fsubl
out
jnp
add
push
inc
lcall
jecxz
dec
in
jecxz
jp
mov
add
jns
in
testb
lcall
popa
mov
sahf
dec
sarb
out
les
fstl
ljmp
gs
faddl
sbb
ja
and
cmp
or
push
repnz
cld
jno
sub
fld1
cmpsb
sbb
push
test
push
adc
clc
cmpsb
scas
adc
and
aaa
int3
xchg
hlt
aad
mov
addl
popa
sub
sub
lret
xor
adc
int
mov
repnz
lret
cmp
sub
lea
int
fistpl
cmpsb
adc
movsl
or
sub
aas
xchg
mov
add
fwait
jne
test
mov
jnp
inc
imul
movsb
mov
mul
push
push
loopne
push
int3
je
adc
add
pop
lds
jg
adc
dec
sub
call
sbb
aaa
push
xchg
gs
mov
insb
das
fwait
xchg
adcl
push
inc
scas
jo
xchg
movsb
popf
scas
stos
add
mov
push
je
arpl
inc
or
or
mov
aam
sbb
and
xor
daa
stos
and
fcomp
imull
xor
mov
inc
lret
scas
push
inc
stos
leave
mov
shrb
es
xor
leave
and
lods
jnp,pt
fwait
and
dec
popf
sub
mov
xchg
jmp
scas
pop
pop
push
imulb
shll
and
adc
test
imul
adcl
mov
test
call
repnz
negb
inc
xchg
mov
lods
jns
xchg
xchg
ja
lods
inc
adc
out
int3
pop
dec
push
pop
mov
cmp
cmpsb
lea
sbb
pop
arpl
jge
jae
lods
fimuls
add
mov
jbe
inc
imul
lret
fcmovne
mov
xor
insb
call
inc
pop
call
add
les
mov
outsl
hlt
ret
negb
xchg
sahf
adc
jno
jbe
repnz
cs
lcall
sbb
mov
jle
ficoml
sub
cwtl
fiaddl
test
sub
inc
or
rdpmc
repz
jbe
stc
popf
lea
jae
jbe
lret
int3
aam
jmp
mov
pop
xor
jp
rcr
inc
rcll
mov
xor
pusha
dec
sub
mov
push
jle
fldcw
jb
scas
sub
xchg
pop
call
and
lods
lock
adc
pusha
fmull
fdivl
and
mov
cmpsl
stos
jle
sbb
addl
fnstcw
push
mov
sub
dec
xor
popa
lcall
andb
or
jae
xchg
cs
mov
pusha
inc
sub
js
push
and
repz
mov
cmp
lods
mov
sti
sbb
push
cld
xchg
into
fs
cwtl
test
push
shll
inc
xlat
rclb
pop
ds
fucom
cmp
xchg
push
loop
jmp
push
xchg
stc
hlt
mov
lock
jne
or
out
xor
cmp
push
lret
jle
insl
aas
ret
test
into
scas
int3
and
cmp
mov
lcall
outsb
int3
leave
mov
fwait
lret
inc
jmp
xchg
sub
into
ss
mov
nop
add
mov
push
fstps
icebp
pop
push
das
cmc
arpl
adc
andl
dec
adc
xchg
xor
fists
mov
and
call
hlt
pusha
dec
inc
jbe
dec
dec
jne
add
mov
push
mov
bound
push
stos
test
movsb
inc
daa
fsubr
stos
popw
test
bound
inc
jecxz
scas
movsl
ss
lods
sti
gs
int3
out
cli
or
lahf
add
subb
das
xor
daa
mov
and
lcall
push
test
push
add
push
xor
sbb
push
dec
xchg
jns
cld
push
mov
jbe
dec
data16
cmc
sbbb
lret
push
jbe
aam
mov
stc
pop
push
jle
xor
adc
iret
pop
inc
inc
pusha
subl
out
scas
loope
push
insl
fadds
jns
cmpsl
xchg
sub
jbe
in
mov
add
je
add
jp
mov
outsb
jecxz
sbb
or
dec
xchg
add
and
pop
pop
inc
pop
mov
cmp
ret
movsb
es
xorl
inc
loopne
out
dec
and
jg
outsb
jne
pop
fldl2t
jb
frstor
out
or
pop
jl
adc
int
scas
dec
stos
pop
sub
push
mov
jo
pop
mov
cmp
rclb
bound
in
pop
sahf
mov
cltd
push
enter
pusha
test
jne
xchg
add
filds
jg
das
push
or
mov
mov
aas
ss
sub
std
dec
in
hlt
jg
dec
dec
iret
inc
mov
icebp
mov
fldcw
xlat
and
lods
je
repz
pop
in
out
and
adc
icebp
add
lods
repz
push
cmpsl
mov
sbb
bound
or
mov
popa
test
cli
loope
push
shrl
push
pushl
pop
push
pop
xor
cwtl
sbb
push
jmp
rclb
inc
jge
gs
into
call
pop
mov
cmpl
fildll
nop
xchg
xor
lods
notb
hlt
mov
mov
sbb
les
push
repz
add
or
jle
outsl
aam
rcl
and
add
cli
gs
imul
in
add
stos
xchg
dec
pop
adc
mov
insb
dec
lea
push
in
push
lcall
psllq
mov
aas
pop
add
pop
cmc
shl
push
or
hlt
cmp
push
pop
ja
in
fldcw
ss
rcll
jo
pop
adc
sub
lea
mov
xor
xor
ljmp
pop
and
or
pushf
xchg
cs
into
scas
movsb
cmp
mov
mov
outsl
cmpsl
jne
dec
or
push
movsl
jae
mov
ljmp
and
jle
jo
mov
inc
scas
mov
lock
add
sub
into
das
pop
ja
scas
es
dec
push
into
cmp
xor
aad
or
push
jne
je
ret
jae
pop
int
clc
dec
inc
mov
ljmp
add
dec
lea
adcb
xchg
pop
mov
jmp
sub
mov
out
sarl
jo
inc
jp
jl
jne
cmpsl
lods
out
popa
and
jnp
inc
sarb
sti
xor
push
mov
adc
fdivrs
andl
aas
in
addr16
jne
test
lea
sbb
lods
pop
insb
es
arpl
add
add
ss
mov
sub
dec
inc
rcrl
push
and
cmp
push
outsl
jnp
imul
lods
sbb
mov
lcall
notb
stos
pop
imul
jp
inc
aam
and
cmpsl
mov
test
dec
les
xchg
movsl
sbb
ror
jne
andb
mov
jo
cmp
lock
insb
jb
push
or
enter
sarl
fnstenv
out
and
lods
movsl
mov
insl
sti
mov
scas
xor
andb
push
or
rclb
xchg
mov
push
call
scas
xor
mov
push
dec
push
es
push
aas
mov
pop
mov
mov
xchg
jnp
mov
dec
outsl
lahf
lods
mov
pop
push
and
inc
gs
xchg
cmp
lds
addr16
and
js
js
sub
sbb
fdivl
pop
leave
push
sub
out
arpl
cmp
cmpsb
sub
mov
int
cmp
sub
test
jg
push
add
nop
sahf
in
fstps
popf
icebp
rclb
stos
mov
fstps
sub
xchg
add
and
pop
jne
cmp
xchg
sub
in
sub
hlt
repz
std
jne
fisubrl
add
lret
jp
sub
imull
jae
inc
insl
in
arpl
aad
test
mov
cmp
ret
roll
fmuls
aaa
scas
pop
out
xchg
xchg
ds
mov
adcl
dec
pop
push
sbb
out
movsl
cmp
jbe
xor
pop
xor
subb
push
inc
ret
popf
stos
jmp
enter
and
mov
pop
xor
cmp
popa
dec
arpl
cmp
mov
inc
jno
js
xchg
jb
addb
and
jns
fbstp
jmp
jne
push
add
aas
mov
jp
or
andb
jae
loop
mov
cs
lods
bound
xchg
push
sbb
cltd
cmpsb
xor
loop
out
xor
and
cmp
xchg
scas
xchg
scas
pop
adc
aad
pusha
scas
push
and
bound
mov
mov
fists
std
aam
sub
sub
cmp
cmp
dec
das
dec
pusha
add
lock
stc
jecxz
push
or
aad
add
aaa
cmp
inc
loope
inc
movsl
std
push
fisttpll
jp
ret
fsubrl
in
or
sti
cmp
mov
test
sub
stos
addr16
sub
xor
gs
mov
sub
cld
cmpsl
int
cmpsl
push
addr16
and
dec
mov
popf
scas
addr16
neg
add
pop
cltd
fstl
lahf
fwait
mov
roll
sub
imul
mov
xchg
mov
sbb
imul
cmp
mov
pop
addr16
mov
push
subl
mov
mov
out
jge
pop
incl
adc
sbb
jnp
add
lods
aaa
mov
cmpsl
mov
ss
dec
jle
xchg
pop
jnp
adc
jmp
cmpsb
test
push
in
and
cmpsb
mov
push
push
sub
jns
push
jns
clc
or
ret
dec
lods
xchg
fmulp
test
daa
mov
inc
out
xchg
scas
insb
cmp
push
push
lret
lods
icebp
jmp
das
cmp
jge
stc
cmpl
rorb
sbb
add
pop
mov
xor
ljmp
push
sub
or
add
popa
jmp
ffree
lock
fucomi
pop
scas
or
add
repz
sbb
xchg
or
outsb
inc
popf
dec
lret
int
cld
cmp
arpl
lds
fimull
int3
add
push
sub
sub
or
outsb
or
sahf
pavgw
inc
sbb
mov
out
and
movsl
mov
or
stos
sub
clc
push
cmp
fsub
jmp
push
push
pusha
mov
out
mov
sbb
es
rclb
cltd
adc
push
stc
or
jle
hlt
xlat
pop
fisubrl
insl
addl
cmp
jno
imul
cmpl
outsl
mov
mov
lods
imull
in
das
scas
scas
pop
sbb
test
push
es
pop
clc
adc
sti
out
shll
pop
mov
stos
push
repnz
imul
fsubs
push
inc
loope
add
xchg
cwtl
fisubrl
enter
pop
shlb
sub
rolb
fcompl
test
pop
into
mov
xor
jmp
pop
fcomi
jmp
inc
xchg
push
fildll
lea
sub
shll
pop
mov
sbb
stc
push
aaa
xchg
scas
add
pushl
loop
push
test
dec
je
cmp
test
jge
out
cmp
add
dec
and
fldt
sub
jp
pop
cvttss2si
stos
mov
mov
jns
sub
and
push
adc
mov
push
sahf
dec
das
fucomi
and
dec
xchg
dec
stc
push
or
cmpsb
movsl
sub
data16
in
add
loopne
sub
inc
int
cmpsb
mov
push
loopne
stos
add
out
mov
cmp
iret
xor
aad
jg
jb
ficomps
les
mov
jno
dec
pop
das
shll
aam
nop
iret
fildl
rcrl
push
add
outsl
fwait
aas
lret
das
xor
loop
mov
jae
mov
fstpt
lods
mov
push
gs
enter
fldcw
repnz
or
repnz
insl
add
mov
fiadds
add
adc
push
mov
jo
mov
mov
mov
pop
cs
mov
mov
pop
add
sub
jg
fldt
xor
push
scas
ljmp
das
popa
jb
fwait
cmp
jno
pop
sub
imul
mov
add
out
mov
test
mov
insl
cmp
mov
push
xchg
push
dec
jae
test
adc
lret
fisubrl
pop
popf
hlt
mov
sub
jnp,pt
inc
jl
add
sub
pop
ss
lds
adc
mov
aad
sbb
sar
rorb
cwtl
addr16
out
mov
cld
daa
and
push
in
lret
les
mov
push
push
icebp
aad
fsubrl
jle
xchg
jl
dec
or
shlb
in
repnz
les
ljmp
imul
xor
inc
cmpsl
xor
xor
pop
xchg
fsts
or
loope
sar
push
adc
inc
jns
pop
rolb
mov
jl
mov
sub
cmp
or
jp
in
js
push
push
and
scas
test
or
int3
or
fsubr
sbb
pop
cmp
add
into
sub
inc
shl
sbbl
or
xchg
subl
push
mov
jo
cmpsb
cwtl
subl
loope
shlb
lods
ret
fcom
adc
mov
adc
sub
jl
imul
inc
sub
adc
cwtl
lahf
xor
xchg
mov
outsb
mov
mov
jp
mov
push
int
scas
lds
adc
and
xor
dec
je
fistps
mov
xchg
cld
sbb
test
daa
movsl
js
cmpb
pop
dec
inc
fstp
mov
fsts
in
push
push
nop
dec
and
repnz
fldt
out
mov
mov
dec
cmp
shr
ret
in
xchg
cs
int3
dec
lea
mov
das
or
or
das
pusha
and
ds
cld
cs
pop
xor
dec
sbb
cmp
jae
mov
cs
push
add
cmp
push
xor
cltd
sub
cld
push
fwait
cmpsl
push
in
out
dec
es
xorb
push
stos
and
mov
mov
call
addl
and
js
sub
insb
lahf
aaa
push
stc
in
dec
adc
cltd
sub
test
jb
inc
inc
insb
aaa
mov
push
and
adc
sub
movsb
shlb
dec
pushf
fldl
into
hlt
mov
in
sub
in
and
out
hlt
iret
sbb
mul
add
leave
inc
out
pop
int
fstps
das
push
mov
out
repnz
subb
jb
push
aad
fdivrs
adc
push
clc
xor
adc
inc
loop
mov
jae
sub
add
sbb
xor
mov
pop
sti
push
out
or
sub
xor
rolb
pop
sbb
xlat
in
test
sub
jne
xchg
decb
or
iret
inc
test
jp
mov
inc
push
call
cmp
cmpps
pop
bound
bound
xor
out
cmp
insl
or
pop
jge
add
and
scas
es
jle
mov
cmp
insl
call
cld
imul
push
fiadds
fadds
xor
int
add
ret
add
jne
mov
movsb
push
add
xchg
addr16
ret
insb
paddq
call
jmp
adc
push
xlat
sub
cmp
in
push
pop
jmp
insl
sti
jg
mov
je
mov
fwait
test
mov
scas
lret
dec
or
mov
nop
scas
test
es
in
mov
test
test
in
in
sub
dec
pop
dec
sub
jle
cmpsb
cs
sub
pop
xchg
lods
mov
scas
inc
ljmp
insl
push
unpcklps
jecxz
sub
dec
insl
pop
push
call
adc
adc
sub
insb
and
dec
std
push
pop
cmpsb
mov
mov
fstl
ret
dec
mov
or
xchg
push
bound
punpckldq
int3
sbb
sbb
mov
xchg
dec
jne
jp
pop
pop
aam
incl
es
and
scas
mov
jmp
sbb
cmp
loopne
jle
dec
in
insb
shrl
in
mov
cmc
jmp
cld
and
dec
daa
adc
mov
mov
xor
inc
cli
fldenv
sbb
lods
push
mov
inc
jecxz
jbe
lahf
jo
loope
adc
jle
sbb
pop
movsl
iret
pop
test
into
loopne
neg
adc
sbb
inc
test
sub
adc
adc
jb
cmp
mov
shrl
cmp
adc
in
pushf
fcmovbe
cmp
sub
out
pop
or
mov
frstor
movl
xlat
mov
jb
mov
push
xchg
push
sbb
out
scas
sub
lcall
fsubrs
fs
je
adc
mov
lock
aas
bound
jae
and
arpl
sbb
aam
jle
das
inc
mov
test
outsb
add
insb
sbb
jae
lods
mov
and
lods
inc
fs
pop
sbb
insl
test
mov
fsubrs
jns
inc
call
add
push
insl
sub
jne
aas
subl
dec
fcmovne
mov
pusha
add
out
cld
pop
movsb
scas
push
fwait
push
inc
lods
adc
xor
loopne
pop
maskmovq
negl
jo
mov
cmp
test
adc
jmp
dec
aas
adc
push
das
sbb
fisubrl
cli
std
pop
fcmove
stos
xchg
or
lock
imulb
mov
dec
pop
test
cmp
dec
xor
daa
xor
or
jbe
pusha
lods
adc
cmpsl
pop
lahf
mov
icebp
sub
push
or
mov
pusha
add
lret
xchg
mov
and
jb
push
adc
mulb
ljmp
jmp
out
lahf
jne
cmp
cmp
mov
cs
or
loopne
cmpsl
aaa
fbstp
clc
mov
adc
leave
inc
scas
sub
sbb
pushf
lods
sbb
sbb
jb
push
rolb
fisubrs
mov
inc
stc
in
pop
daa
mov
mov
test
mov
dec
fidivrl
fcmovnb
mov
pop
test
jno
push
loop
and
ret
and
mov
decb
mov
mov
out
lret
push
cmpsb
sti
roll
ret
popf
bound
lds
scas
xor
jo
push
fbstp
sub
dec
push
mov
mov
push
movsl
outsb
or
add
int
mov
push
adc
mov
sub
rcl
and
arpl
jbe
cmpsb
iret
sbb
xchg
sbb
es
mov
add
jne
popa
jo
xor
push
sbb
daa
fsubl
add
into
jl
dec
xchg
xor
pop
cmc
stc
dec
ficompl
ret
test
xor
out
add
mov
pop
jle
aaa
pop
or
adc
andl
jnp
clc
fidivs
pop
repnz
test
push
stos
icebp
add
xor
or
sub
outsl
push
jge
jo
jb
rclb
divl
fstps
arpl
dec
push
nop
mov
scas
test
fwait
gs
sarb
push
inc
mov
fisubrs
shlb
and
mov
stos
cmp
dec
push
xor
arpl
es
pop
add
cmc
sub
xor
ret
push
mov
psubb
xchg
push
ss
in
arpl
jno
mov
sub
data16
push
cmp
inc
or
push
push
fidivs
jae
adc
repnz
add
xchg
lret
ret
sub
jb
dec
dec
roll
or
cwtl
std
outsb
outsl
and
or
and
sub
in
insl
stos
lods
cmc
inc
dec
cmp
push
insl
out
pop
jb
jg
fsubl
push
rclb
add
jecxz
ds
cmp
add
mov
xor
test
lret
mov
pushl
repz
xchg
xchg
ds
cmp
or
lea
push
lods
adc
mov
loopne
inc
sub
jmp
imul
sub
xchg
xor
inc
into
push
lahf
push
clc
std
into
xor
stc
lret
add
repz
arpl
aad
push
fsubrs
jge
push
jne
jl
and
scas
mov
pusha
lock
pop
jnp
xchg
xchg
mov
std
mov
in
rep
rcll
and
insl
in
xor
cmp
jb
or
dec
mov
insb
dec
fldcw
xchg
ror
mov
mov
pop
aaa
mov
push
jmp
loope
lods
mov
ror
sahf
xor
int3
loope
shr
xchg
in
jl
scas
mov
mov
and
mov
push
test
iret
and
rcr
into
mov
aad
stc
mov
xor
mov
fstpt
jbe
gs
mov
pop
pushf
inc
dec
dec
mov
icebp
xchg
addl
clc
dec
add
push
add
scas
out
out
adc
jno
dec
lret
adc
add
xor
mov
and
lock
sbb
sub
or
outsl
jae
or
sbb
or
push
jne
loop
addr16
jo
in
pop
sbb
insb
stos
inc
sbb
cmp
shlb
stc
addl
jno
push
xor
push
arpl
xlat
int
push
mov
inc
or
ss
xor
dec
jg
insw
out
fistpl
pop
inc
dec
push
cmp
jg
nop
and
pop
mov
stos
sbb
and
cmp
dec
insl
sub
gs
ljmp
rcrb
push
cmpsb
ss
mov
dec
stos
push
loopne
jnp
lea
lods
adc
xor
sahf
push
aam
push
adc
stos
dec
adc
jo
ja
mov
stos
and
add
xor
push
add
pop
jo
pop
mov
mov
mov
sbb
cwtl
jle
in
je
mov
dec
pop
cmpsl
sti
int3
test
inc
jbe
add
fiaddl
bound
mov
push
add
and
and
ja
ret
pop
fidivs
ja
repz
sbb
stc
push
dec
loopne
xchg
call
push
xor
ds
mov
cmp
aas
rclb
ficoml
mov
mov
fisubl
pop
xchg
lea
push
loopne
int
inc
popa
cmp
adc
mov
push
mov
sub
inc
jae
mov
mov
cmp
insb
sub
jno
xor
sub
jmp
add
adc
jp
mov
outsl
in
mov
mov
xchg
add
xor
lahf
scas
pushf
and
sbb
add
fstpl
and
xchg
xchg
stos
pushf
adc
xor
ljmp
into
outsb
outsb
push
jl
jg
popa
and
jg
jbe
stc
jp
outsl
aaa
push
int
inc
into
pushf
fwait
cltd
fstl
fwait
in
cwtl
pop
orb
jb
inc
sub
add
mov
ret
or
pushf
jbe
lods
cwtl
lock
jecxz
popf
cli
mov
imul
pusha
mov
mov
call
scas
jge
insl
or
mov
frstor
mov
movsl
aaa
push
aad
aad
jne
imul
pop
jge
cmp
pop
enter
iret
adc
sub
andl
pusha
mov
scas
ret
jl
sub
popa
mov
sub
jmp
xor
icebp
fisttps
sub
ja
pop
jl
jae
dec
daa
orl
test
xchg
movsl
js
adc
sbb
insl
les
and
imul
loop
lcall
js
dec
xlat
and
hlt
arpl
mov
sub
adc
inc
stos
adc
jne
in
mov
pushf
dec
inc
cmp
pop
mov
rcrb
jbe
imul
dec
jne
cs
push
fldl
pop
mov
pop
pop
movsb
add
shl
sub
sub
div
mov
jnp
pusha
sub
add
pop
int3
das
loop
mov
loopne
aam
jno
and
xchg
inc
lcall
cmpsb
test
cmp
pusha
repnz
lds
push
sub
jne
shl
sbb
adc
or
loop
test
pop
insl
aad
mov
add
jno
pop
add
and
xor
xor
ds
jnp
sub
sbb
jbe
sbb
mov
pop
cmpsb
xor
loop
jle
ficoms
add
jae
sub
test
jno
and
cmpsb
xor
push
movsl
mov
and
out
dec
rcrl
cmp
inc
fbstp
inc
mov
sub
les
dec
rol
pop
ja
lods
and
daa
mov
andl
xlat
dec
mov
stos
test
repnz
mov
lock
push
sti
js
jmp
fwait
push
cmp
mov
imul
iret
push
push
sbb
inc
lock
mov
jmp
ja
rcrl
push
call
inc
int3
mov
pop
push
sub
and
jp
xor
cmp
and
lds
xor
in
jle
lahf
adc
adcb
les
sbb
adc
mov
cmp
sbb
ja
jnp
push
aam
adc
shr
into
mov
dec
cs
mov
lds
test
enter
pusha
adc
ja
mov
fwait
insb
xorb
mov
mov
mov
ficomps
jb
repnz
shlb
mov
fs
je
cwtl
rcrb
outsl
test
adc
sub
sub
je
or
mov
ljmp
arpl
inc
out
cmp
out
mov
aad
jne
out
inc
mov
xchg
test
in
xor
arpl
out
aaa
adc
pop
push
jae
push
or
cmp
nop
sbb
mov
mov
leave
les
jmp
lea
inc
xor
out
rolb
push
das
imul
sub
bound
lea
sbb
in
mov
lock
js
or
leave
in
call
or
add
mov
or
lods
repnz
repnz
jne
les
lret
sub
xchg
ret
in
sbb
push
sarl
hlt
or
xchg
ss
mov
sbb
pop
in
dec
jmp
jno
call
inc
roll
cmp
adc
mov
into
mov
inc
cltd
hlt
cmpsl
add
cmpsb
xchg
sbb
and
push
shrl
sub
mov
pop
bound
mov
outsl
jbe
xchg
gs
mov
xchg
or
mov
add
stos
xor
lock
dec
jb
int
jge
pop
lahf
je
aaa
xor
push
test
jecxz
int
daa
push
loopne
push
push
int
pop
hlt
pop
jge
sbb
jg
fcmove
jp
mov
push
push
xor
iret
cmp
sbb
loopne
in
lret
out
scas
jo
jmp
sbb
leave
lods
jae
jecxz
jge
mov
push
lret
jp
push
stos
pop
push
mov
add
sbb
mov
xchg
push
mov
or
movsb
mov
je
popa
popf
add
add
jmp
insb
sbb
jg
out
xlat
loope
fimull
ja
mov
fs
cmp
push
int
pop
pop
sbb
jecxz
mov
push
shlb
inc
cmp
fildll
aad
mov
add
xchg
into
or
jge
jle
push
and
imul
mov
andl
mov
push
dec
in
xchg
add
inc
insl
add
pop
add
pop
lret
flds
loop
jl
pusha
hlt
mov
scas
or
push
and
adc
frstor
lods
sbb
in
sar
push
push
inc
mov
lods
sub
hlt
push
fstpt
mov
push
xchg
jge
idivl
sub
add
das
and
test
aaa
arpl
pop
mov
outsb
test
test
jl
push
icebp
add
fldl
outsl
repnz
movsl
sub
xor
push
mov
cmp
inc
inc
dec
lock
jp
popf
xor
add
lret
mov
mov
mov
dec
inc
arpl
mov
sbb
insl
sub
inc
pop
cmp
mov
out
inc
rcll
fabs
repz
sbb
and
add
shll
xor
lods
pop
notl
mov
enter
cmp
insl
push
jp
sub
jmp
sahf
sbb
mov
add
loopne
sub
test
arpl
rorl
adc
jb
fisttpll
outsb
push
out
pop
pop
and
cmpb
fldenv
in
push
sbb
mov
aam
adc
out
fistpl
sbb
mov
imul
sbb
mov
hlt
jmp
ja
loop
cpuid
xchg
out
cmpsl
cmpsl
dec
mov
push
repnz
mov
andb
loop
xor
xorb
les
outsl
inc
xchg
int
pusha
and
add
test
ds
imul
xor
out
mov
into
dec
mov
fisubrl
mov
in
jbe
and
or
in
push
jno
sbb
pop
and
sub
jo
je
lods
in
add
pop
arpl
cmp
adc
movsb
pop
fnstsw
push
pop
push
imull
test
add
add
fisubrl
fidivrl
pop
aam
int3
movsl
mov
or
xor
aad
fnstenv
outsl
sbb
mov
imul
into
sbb
jmp
dec
ret
fsub
and
int
or
sbb
push
pop
xchg
jnp
fs
inc
cwtl
fisubl
es
cmp
push
pop
lcall
xor
jno
add
cmp
icebp
sbb
lcall
cld
xor
inc
in
cmp
pop
lcall
daa
shlb
push
xor
xorl
fiadds
inc
popf
test
out
push
cwtl
rolb
cmp
fisubs
dec
addr16
into
rcr
pusha
xchg
cs
mov
and
into
jne
jo
cmpsl
loope
repnz
push
in
out
cmp
or
or
xor
push
lahf
cmp
sti
stos
jnp
ja
mov
pop
mov
cmp
test
sub
pop
ljmp
sbb
or
xor
push
xor
add
xor
cmp
aad
lret
ss
or
dec
mov
ret
push
cmp
and
loopne
fisubs
mov
ljmp
sbb
pop
pop
inc
and
sub
cmpsb
dec
sbb
inc
int
mov
cmp
shl
pop
jg
xor
add
jle
aaa
push
jmp
inc
pop
iret
orl
adc
mov
in
popa
push
dec
dec
dec
lret
push
shrl
addr16
and
xor
and
ficomps
in
outsl
loop
loope
jge
add
ss
add
jae
filds
fst
mov
jne
testl
push
sub
pop
out
int3
hlt
and
mov
pusha
sbb
sub
out
and
add
fnstcw
sub
mov
sub
mov
jg
mov
test
leave
fdivl
hlt
aas
push
push
aas
mov
jmp
hlt
je
cld
push
adc
push
lods
iret
lods
jge
fsubl
jae
mov
and
push
jo
mov
push
add
and
push
xchg
fs
outsb
xchg
fcmovnu
mov
mulb
std
cld
push
jle
jae
iret
enter
inc
or
xchg
test
ffree
push
out
inc
xor
jns
mov
and
and
mov
call
jg
loop
pop
vldmxcsr
xlat
fucom
mov
sbb
into
test
xor
sub
cmpl
cs
int
sti
das
xorb
shl
cmpsl
mov
cmp
loope
popf
sbb
pop
sub
dec
sbb
pop
add
imull
jmp
mov
stos
mov
sbb
add
pop
out
pop
lods
call
leave
mov
outsl
dec
lret
cmp
or
jle
jae
mov
scas
in
mov
js
pushf
in
cmpsb
pop
jle
movsl
in
add
mov
enter
jbe
rclb
xor
dec
mov
sar
add
sbb
out
rclb
ret
cmpsl
or
xchg
cwtl
push
sti
mov
lret
xor
jecxz
mov
in
xor
outsl
fmuls
sub
jle
std
xor
or
inc
jae
sahf
sbb
and
cld
jle
popa
shll
mov
repz
out
xor
jae
int3
imul
xchg
aam
outsl
ja
xchg
sub
rep
test
fldcw
cmpsl
add
push
sbb
jno
sti
or
test
and
adc
jne
lods
sub
sahf
jmp
lret
cmpsl
fsub
insb
xchg
imul
adc
mov
sahf
adc
outsb
push
push
mov
ret
test
jno
sti
sbb
jne
loope
push
mov
fdivs
in
adc
add
int3
sub
sbb
and
push
push
imul
movsb
mov
sbb
ficoml
dec
fnsave
inc
mov
iret
shll
int3
mov
icebp
and
xlat
sarl
cmpl
mov
out
ljmp
aad
out
mov
fcomps
rcrb
repnz
push
mov
jo
xchg
push
movsl
pop
xlat
mov
cmp
mov
cs
cmpsl
jmp
pmaxsw
mov
out
aas
movsb
add
js
xor
cmp
movsb
mov
jae
xchg
clc
into
and
cmp
pop
clc
sbb
adc
jbe
lods
or
mov
sub
adc
jns
add
dec
popf
inc
repnz
lods
aaa
push
push
popf
and
xor
bound
imul
in
mov
aaa
jns
rolb
shrb
stos
out
enter
adc
aaa
notl
jecxz
dec
and
stc
mov
mov
cmpsb
fwait
rcrb
mov
or
cmc
or
scas
or
mov
call
vpcomb
mov
add
insl
mov
clc
push
gs
push
nop
ljmp
jne
cmp
stos
adc
sahf
push
rcll
sub
pop
cltd
jl
inc
and
xor
xor
fcomp
loopne
mov
and
sti
cmp
jne
iret
cmp
ljmp
aas
jbe
inc
add
mov
add
cs
sbb
call
arpl
sub
xor
adc
add
mov
ja
test
jg
pop
adc
dec
or
or
inc
add
adc
mov
push
pusha
mov
push
xlat
loopne
xor
in
cmp
addr16
lods
sub
or
pop
sti
cs
inc
adc
mov
out
mov
dec
xorb
out
add
movsl
and
jae
aaa
and
jne
push
pop
cmp
pushf
sub
push
push
ss
mov
and
dec
in
mov
cmpsl
mov
or
pop
inc
scas
mov
xor
pusha
and
sub
inc
es
outsb
xchg
push
push
fcoml
jecxz
push
mulb
fs
test
roll
shlb
jae
sub
sti
test
sbbb
add
inc
push
sub
push
xor
lar
sub
fcomps
cmp
cwtl
adc
int
adc
aaa
xor
imul
lds
fldenv
mov
fiaddl
push
stos
les
shlb
add
jbe
lods
or
push
cmc
jl
jno
jg
fimull
out
dec
jl
shll
cltd
push
cmp
mov
mov
or
xlat
outsb
dec
popl
cmp
dec
mov
insl
pop
xchg
aaa
fcoms
in
or
push
or
je
mov
cmp
inc
movsb
mov
add
mov
test
das
arpl
nop
lret
mov
mov
daa
loop
lcall
sar
sti
xor
adc
outsl
push
jo
add
mov
push
adc
cwtl
xor
mov
addr16
je
or
gs
jo
or
mov
mov
jae
adc
decl
popa
jae
je
gs
and
and
pop
jo
movsl
xor
cmp
push
push
cmp
add
test
ja
sub
daa
jne
ret
add
outsl
movsb
fs
xor
adc
sub
jecxz
mov
xor
shll
loop
idiv
data16
dec
mov
pop
sti
and
sub
repnz
mov
and
loop
dec
lods
out
loope,pn
xchg
push
pop
mov
js,pt
jbe
lds
pop
dec
sbb
adc
or
aad
or
mov
push
cmp
mov
sti
into
cli
data16
addr16
mov
xlat
aaa
out
mov
movsl
cltd
pop
jo
jae
sti
arpl
dec
mov
add
loope
in
sub
jno
and
jns
and
ret
repz
outsb
jp
jb
popa
lds
sbb
loope
adc
in
and
aad
mov
sub
cld
jp
cmp
or
int3
ret
xchg
add
add
nop
call
not
mov
push
scas
cwtl
in
pushf
insl
pop
jecxz
dec
ljmp
das
insl
loop
xlat
mov
push
push
push
add
lods
jns
lea
mov
test
push
call
aas
cmp
inc
daa
sti
loopne
jg
hlt
lods
ficoml
lods
sbb
addr16
xchg
out
stc
cmpl
push
mov
add
repz
xor
push
xchg
xor
js
sub
movsl
push
dec
popl
cmp
lods
adc
pop
xor
and
pop
les
mov
outsl
cmp
sbb
inc
cmp
jmp
std
xchg
push
pop
add
hlt
add
mov
int
mov
and
push
ret
idiv
mov
cmp
fistpll
lods
test
repz
test
ret
jecxz
sub
mov
je
push
dec
push
mov
filds
and
or
out
pop
cmp
push
lods
fldcw
push
outsb
mov
sub
fidivs
lret
dec
pop
nop
inc
pop
sub
in
xchg
pop
lea
lods
pop
test
jno
mov
out
jo
lock
sub
jns
xlat
in
cmp
jle
loop
lret
and
xor
lods
dec
cmp
in
jmp
aaa
add
mov
or
cmp
test
scas
sub
div
in
mov
jge
dec
push
mull
ja
test
pop
movsl
cli
mov
sbb
sbb
pusha
add
mov
daa
inc
inc
repnz
stos
orl
call
jo
cltd
es
pop
cmp
arpl
out
inc
fcompl
push
rolb
mov
cmp
arpl
and
mov
lcall
mov
jbe
pop
xchg
jno
jle
xor
inc
jno
jae
mov
sbb
js
push
scas
in
push
xor
stc
imul
gs
add
out
dec
mov
outsb
in
xor
outsb
push
jecxz
mov
push
lock
insl
insb
hlt
sbb
into
jmp
xor
pop
jmp
std
fmull
jbe
jnp
push
pop
push
outsl
lea
mov
cmpsb
mov
negl
inc
shll
pop
mov
dec
in
js
and
push
push
mov
cmp
push
lods
arpl
mov
dec
insl
loop
dec
jge
cwtl
test
inc
mov
shlb
inc
and
cmp
jmp
xchg
ds
xor
xor
imulb
aam
xchg
je
mov
and
xchg
xor
call
in
sbb
icebp
mov
sub
arpl
sub
sub
addr16
jmp
add
jp
lret
lret
insl
push
fistpl
add
jae
sti
aas
frstor
mov
sbb
push
sahf
std
xchg
mov
into
jne
fistl
fdivs
or
mov
nop
mov
jl
fcmove
push
aad
mov
push
rol
add
outsb
xchg
inc
gs
cmpsl
xchg
push
lcall
jbe
push
push
stos
jge
out
leave
fstpl
sbb
int3
lret
ljmp
imul
adc
jmp
dec
pop
les
arpl
mov
mov
xchg
roll
lods
dec
imul
or
ret
xlat
popa
push
ret
sti
sarb
scas
mov
loope
inc
or
insl
push
pop
inc
xor
in
lods
mov
aaa
mov
adc
imul
test
stos
pop
das
push
xor
js
pop
fidivrs
ja
xor
ja
test
jae
and
js
xor
add
adc
xor
dec
push
pop
sub
jnp
cmpsb
mov
int
xor
cmp
outsb
mov
push
gs
subb
aam
or
lods
movsl
pop
lods
lds
xchg
add
xchg
iret
mov
adcl
jnp
adc
lds
and
int3
cmp
incl
in
xchg
sbb
jl
fcmovnu
jnp
add
cmp
push
or
clc
jg,pn
mov
or
or
and
mov
mov
push
ja
xchg
and
adc
or
stc
adc
add
dec
mov
aad
xor
jne
cs
and
insl
and
and
mov
xchg
or
ret
clc
mov
lock
push
pop
jbe
aaa
cmpsb
add
xor
gs
hlt
shl
inc
je
jbe
jb
subl
popa
push
mov
and
stos
pop
xchg
mov
sub
cs
aad
jle
mov
lods
jbe
loope
jg
inc
das
sub
mov
lcall
sub
ja
xor
adc
sub
push
icebp
dec
push
inc
imul
scas
pop
popa
xchg
xchg
not
test
pop
add
xchg
mov
lea
mov
fdivrp
xor
scas
jle
popa
sbb
imul
imulb
xlat
fldt
xchg
arpl
cltd
shlb
fs
int
fistps
jns
rol
imul
stos
and
pop
sub
lods
test
add
push
pop
imul
xchg
movsl
or
cmpb
cmp
sub
daa
push
clc
sub
jae
ja
lds
pop
cmc
sbb
xlat
jmp
pop
out
push
push
fdivrs
scas
fidivrl
imul
icebp
mov
sbb
dec
mov
gs
cltd
scas
das
and
mov
aaa
dec
imul
dec
sbb
mov
push
rcrb
aad
push
fimull
sub
xor
fsub
fistpll
insl
mov
stos
cltd
jmp
cmp
adc
pop
shrb
sub
filds
in
or
jb
lods
jg
cmc
push
shlb
lret
jae
lret
jns
sub
pop
outsl
lahf
jmp
sbb
pop
shll
imul
in
sub
lret
out
out
or
ds
add
out
iret
inc
xlat
lahf
sbb
fistpl
sbb
sub
xchg
jmp
pop
cmp
enter
push
ret
adc
mov
xchg
imul
push
sahf
lea
fcmovnb
adc
clc
or
rcr
cs
mov
lock
inc
dec
add
fildll
push
fsubrl
jmp
mov
push
test
and
enter
sbb
nop
xor
sbb
or
xchg
call
lcall
push
mov
test
imul
in
cltd
not
dec
xor
pop
inc
pop
fisubrs
sbb
test
test
jae
imul
inc
push
das
xchg
pop
mov
jns
and
mov
or
add
xchg
cld
xchg
and
icebp
mov
enter
repnz
loopne
scas
inc
lds
adc
mov
or
lods
test
ret
add
lret
inc
or
push
pop
jg
or
jo
popf
cld
into
mov
xor
xor
repz
dec
jne
js
xchg
jbe
inc
sarl
and
rcr
sub
cwtl
fimuls
push
out
jge
sub
pop
jge
and
adc
jge
inc
push
icebp
pushfw
and
cmpsb
jns
jmp
pop
push
mov
insb
das
fadds
push
mov
scas
dec
mov
push
lret
loop
imul
mov
or
sub
rolb
ljmp
dec
push
cmp
add
push
mov
add
out
sbb
jp
outsb
sub
aas
and
rolb
and
sbb
ljmp
jp
sub
stos
into
ja
jae
xchg
jl
and
inc
dec
pop
xchg
mov
and
pop
xchg
lods
roll
insl
repz
push
jno
xor
lock
dec
or
xlat
jmp
gs
stc
iret
lret
mov
push
rcrl
sbb
mov
shrl
xchg
mov
and
jmp
fldl
mov
ds
xchg
adc
cmp
xchg
in
cs
jb
inc
or
push
ja
fwait
push
out
dec
cli
dec
das
cwtl
ds
adc
aaa
xchg
xchg
sub
jp
movsb
mov
xor
aaa
hlt
shr
stos
sbb
inc
push
outsb
push
fsubr
and
push
cmp
rcr
and
xchg
push
mov
lea
or
movsb
lds
or
sub
pop
push
cs
mov
xor
ss
iret
push
jp
data16
xor
dec
fwait
test
mov
or
les
scas
push
jl
dec
xchg
outsb
hlt
sarl
and
iret
mov
clc
repnz
adc
jne
or
mov
stos
je
xchg
pop
jmp
push
test
loop
fsts
inc
and
into
out
test
ror
in
outsl
cli
add
dec
fdivrs
repnz
cmp
push
xor
push
xor
and
ror
push
push
insb
pop
mov
je
outsl
bound
outsl
pop
movsl
xor
push
ja
sti
dec
insl
sub
cmp
dec
push
xor
xor
xor
and
cwtl
and
mov
add
mov
mov
mov
daa
xlat
rorl
sub
jmp
aad
ficompl
lcall
ja
mov
das
aad
jbe
xchg
or
fistps
and
jae
push
fisttps
int3
daa
sbbb
insb
and
push
or
cmp
adc
push
xchg
jns
mov
js
xor
xor
jmp
aam
pop
insl
fdivrl
mov
add
psllw
data16
movsl
inc
addr16
stc
cmp
adc
std
push
lock
in
mov
xchg
dec
mov
and
leave
jge
jge,pn
adc
sub
and
in
movsl
mov
insl
push
iret
push
jno
in
int
add
ja
pop
jbe
cld
cs
xchg
mov
in
mov
sbb
sbb
mov
inc
xor
les
xlat
ret
mov
push
daa
xchg
ljmp
add
lea
push
and
xchg
jecxz
dec
dec
imul
pop
or
andl
sub
imul
out
push
xorl
iret
adc
movsb
lahf
adc
xchg
cmp
shll
mov
sbb
lret
je
sbb
xchg
fisttpll
pushf
int
adc
bound
out
inc
push
outsl
lcall
jnp
mov
fildll
sub
mov
jge
fnstenv
aam
sarl
xor
cmp
stc
into
enter
aas
xchg
mulps
cmp
stc
cmp
push
test
cmpsb
shlb
cmp
sbb
repz
js
movsl
test
lea
pop
mov
jae
xchg
outsl
mov
jmp
push
scas
sbb
xor
mov
ret
andl
rorb
inc
insl
jl
inc
push
pusha
int
aaa
jne
cmpsl
shl
lret
in
xchg
add
jno
mov
in
popa
ljmp
stos
sbb
cmp
in
sbb
mov
inc
mov
push
lret
loop
cmp
aaa
divb
cwtl
and
insb
ret
xlat
push
or
cmp
mov
lcall
and
xchg
sub
enter
sbb
stos
xor
push
addr16
xor
mov
sub
sub
mov
or
test
adc
cld
xor
rcll
daa
jmp
bound
inc
xchg
jno
test
mov
ss
stc
sbb
in
dec
sbb
mov
neg
xchg
ret
add
jg
add
mov
jno
inc
out
idivb
repz
fsubrp
xor
jmp
insl
cmp
pusha
jbe
cld
sub
mov
adc
pop
idiv
movsl
mov
mov
repz
jp
lock
mov
cwtl
jmp
mov
sarb
or
cs
mov
sysenter
aaa
daa
fistl
lods
stos
cmpb
lea
test
push
push
sub
lods
jl
bnd
cmp
inc
lods
icebp
sahf
or
and
or
jb
sub
mov
cld
fwait
mov
ss
cmp
shlb
push
shlb
xchg
adc
lods
mov
insl
sub
jb
movsl
add
ret
fucomi
adc
cmpb
cwtl
fadds
ja
add
inc
sub
cmp
pop
loop
push
pop
push
cmp
icebp
sub
sbb
dec
xchg
xor
sarl
insb
xchg
js
xchg
sub
push
jg
mov
and
xor
fcom
fsubrl
xor
jae
mov
ljmp
push
inc
sbb
lock
cld
subl
adc
sub
sub
xchg
test
jbe
inc
xchg
jl
pop
jbe
call
int
in
enter
add
sub
inc
cs
ret
jae
cld
xchg
sahf
mov
out
icebp
jl
add
fnstsw
lods
je
insb
push
pop
push
sbb
les
dec
cld
lock
push
loopne
fisttps
xchg
iret
shl
push
add
mov
mov
xchg
jp
test
jle
inc
stos
and
pop
cmp
xchg
push
inc
test
jo
mov
push
scas
int
or
jnp
xchg
lea
cltd
push
xlat
jmp
jmp
pop
or
aad
cmp
gs
out
inc
outsb
movsl
adc
adc
sbb
and
sahf
testl
pop
xlat
sub
xor
gs
cmpsl
stos
icebp
add
rclb
dec
popf
aad
adc
test
xchg
in
je
xor
push
out
adc
jae
add
fstps
inc
sbb
dec
jae
out
cmpsl
mov
in
pusha
pop
xor
mov
stos
add
std
les
inc
or
je
loopne
xor
ror
movsb
and
jge
sub
adc
jne
add
adc
jmp
xor
inc
push
push
sub
push
adc
add
cli
jno
mov
fmuls
sbb
sti
daa
dec
inc
pop
ds
cld
sahf
mov
repz
pop
lret
and
cmc
ljmp
lret
bound
add
shll
movsl
scas
inc
add
pushf
sub
or
sub
push
adc
out
xor
push
mov
jl
dec
aaa
mov
sub
pop
mov
cmp
or
inc
cmpsb
jae
xlat
ret
sub
ljmp
sub
ret
sub
xchg
jmp
scas
loop
sub
mov
cmp
jl
scas
les
jns
movq
sbb
mov
push
jmp
in
je
dec
push
cs
ja
icebp
pop
push
push
pop
dec
outsb
inc
mov
lea
cmp
pop
mov
sub
mov
push
sarl
push
fimull
faddp
mov
lret
hlt
inc
sub
sub
imull
ss
xchg
jecxz
push
sbb
adc
add
xchg
dec
or
idivl
out
inc
mov
cmpsl
incb
jmp
divb
mov
xchg
adc
sub
mov
rdpmc
inc
adc
sub
jge
pop
stos
imul
pusha
sub
pop
rcrl
jl
mov
scas
jne
mov
pop
inc
xor
and
mov
xor
data16
pop
das
sub
arpl
imull
push
lods
test
movsl
inc
add
inc
xchg
or
ja
xor
jl
shll
fmul
cmp
flds
fcoms
jnp
frstor
or
sub
cltd
and
xor
ds
jno
into
in
xchg
sub
imul
sub
cli
and
rol
lret
addr16
pop
sub
push
fldt
enter
clc
fbstp
push
js
pop
mov
pushf
fistps
pusha
stos
and
scas
push
mov
mov
cmpsb
mov
and
cmp
adc
mov
ja
mov
mov
push
lock
scas
add
xchg
and
fiaddl
mov
mov
ds
and
loop
pop
fdiv
pop
jbe
nop
ljmp
cmc
dec
loop
adc
dec
test
mov
test
in
lea
mov
aad
daa
rol
call
sahf
or
lea
mov
das
cli
cmpsb
sbb
fmul
jg
test
test
test
xor
mov
ja
aaa
inc
and
je
imul
inc
jns
lods
mov
pop
scas
inc
sub
mov
imul
movsb
dec
or
add
subl
call
mov
ss
cmpsl
cmp
add
push
outsl
imul
mov
pop
push
in
sarb
sub
push
shll
sub
lea
icebp
xchg
dec
sbb
mov
into
repnz
popf
add
jns
mov
push
in
mov
adc
pop
inc
mov
flds
xchg
pop
bound
sub
jb
mov
lcall
add
or
dec
xchg
outsb
inc
test
dec
lahf
mov
rclb
pop
xor
ret
add
mov
sarl
pop
pop
mov
clc
xor
jecxz
jl
and
xlat
rcr
fistps
jb
add
lret
xchg
lods
js
xor
pop
into
stos
lock
push
ret
or
jne
call
cvtps2pi
loop
popf
sbb
or
cwtl
outsl
adc
sbb
ret
int
add
mov
negl
inc
sbb
outsb
sahf
inc
xchg
fucomi
std
mov
mov
in
adcl
ds
leave
mov
or
nop
and
sarb
inc
jp
sub
dec
mov
dec
sbb
stos
xor
jne
fs
sti
scas
pushf
push
or
adc
lret
fildll
cmpsb
lret
pop
and
adc
inc
add
cld
or
inc
pop
push
sbb
arpl
xor
push
popl
rorl
mov
lahf
loope
fidivl
push
mov
lcall
sub
sbb
sbb
pushf
jp
push
push
les
ret
mov
fdivr
aam
int3
gs
lock
jge
shl
adc
int3
or
mov
and
jns
test
shll
pop
cmpsb
xchg
push
popa
jbe
pop
pop
push
mov
pusha
inc
stc
aad
pop
or
into
mov
push
jnp
mov
jge
inc
mov
cld
mov
xchg
loope
mov
pop
push
dec
repnz
clc
push
loop
scas
or
jns
adc
imul
cltd
fs
into
mov
icebp
xor
push
movsb
sti
push
addl
lret
add
cmc
push
mov
lods
in
fbld
sub
bound
or
scas
ss
push
cmp
int3
lahf
lret
ss
dec
mov
lcall
adcb
xor
push
popf
sub
pop
jbe
ret
test
sarl
sub
es
popa
mov
scas
out
int3
sub
mov
js
dec
adc
sub
jle
add
push
sbb
je
xchg
dec
and
mov
clc
call
pop
push
leave
push
xor
ss
mov
mov
out
cmp
lock
aad
xor
gs
push
xchg
push
push
xor
push
jae
aad
jbe
enter
mov
mov
jb
and
decb
add
imull
sbb
outsl
mov
mov
rol
inc
jno
and
out
sub
sahf
popa
sub
mov
repz
push
jge
jnp
inc
jmp
fsub
test
jne
mov
cmp
xor
ljmp
jg
dec
mov
push
pop
add
and
sub
or
dec
inc
cld
sbb
ret
inc
or
cmc
call
and
int3
dec
repnz
jp
test
loope
jno
or
ljmp
clc
inc
fcomp
dec
sti
add
mov
lock
out
pop
cmpb
stos
jle
push
pop
movb
jl
adc
or
sub
shrl
aaa
mov
or
ljmp
cmp
and
ficompl
fiaddl
xor
gs
jnp
loop
xchg
or
jge
mov
repnz
fcoms
fadds
loopne
addr16
xchg
fists
push
mov
lret
fwait
cs
fxch
mov
in
add
pop
lea
sarl
push
cli
or
movsl
pop
movsb
call
jecxz
dec
scas
outsb
add
mov
add
jle
add
js
mov
test
jne
fisubrs
mov
std
sub
mov
xor
push
cwtl
subb
rcll
add
jmp
or
insb
add
sub
pop
cli
rorl
cmpl
data16
or
add
mov
int
aaa
test
jmp
test
mov
jo
adc
movsb
mov
xlat
mov
pop
inc
and
fiaddl
adc
daa
jmp
jge
sahf
ret
xorl
rep
pop
and
inc
vmwrite
imul
mov
mov
aaa
cltd
sub
fs
pop
mov
clc
jo
mov
push
call
mov
cs
lahf
or
mov
dec
fnstcw
enter
call
or
fwait
add
push
jp
iret
insb
jb
arpl
ret
ljmp
inc
adc
mov
lods
adc
leave
imul
int3
imulb
jle
push
sub
add
div
mov
inc
sbb
jmp
push
les
popf
imul
fstpl
hlt
cs
mov
adc
int
mov
adc
xchg
lea
or
dec
jle
xchg
sub
dec
sarb
nop
push
adc
mov
rclb
xchg
jo
aam
mov
dec
loopne
and
pop
and
xchg
out
push
pop
xchg
sub
scas
lret
aam
xchg
in
lahf
push
adc
pusha
push
xlat
cmp
inc
sub
ja
ret
lret
lcall
pop
mov
fstpt
stos
fcmovb
jns
mov
in
dec
sub
into
pushf
shr
mov
xor
gs
ljmp
xor
sub
adcb
push
or
push
fsubrs
jle
pop
js
hlt
insl
mov
jg
aam
push
xor
clc
xlat
ret
mov
cmp
jecxz
in
pusha
mov
std
aam
sub
stc
shlb
sub
pop
adc
fs
mov
cmc
sbb
xor
lods
mov
nop
ss
fidivl
dec
lods
stc
loopne
fs
nop
adc
sbb
sub
int
sbb
push
pop
jbe
mov
mov
xchg
sub
data16
cltd
ja
push
jp
jo
push
out
cli
out
popa
loopne
lahf
or
cltd
dec
push
std
fs
cmc
mov
push
sbb
xor
push
mov
out
and
nop
xchg
sahf
out
dec
xor
push
jg
xchg
out
insb
fldenv
mov
and
xchg
jnp
push
push
add
stos
lods
loop
aaa
dec
jge
pusha
es
ret
adc
cld
sbb
arpl
or
push
aas
sbb
insl
mov
adc
push
sahf
push
and
adc
shlb
add
into
lock
loope
loopne
mov
je
loop
add
sahf
adc
insb
push
and
push
into
xor
and
adc
mov
sub
ss
push
in
bound
add
popa
jae
sti
jb
jecxz
mov
push
fcmovu
loope
or
aad
jle
into
mov
out
xor
push
pop
out
inc
gs
ret
sub
jnp
fsub
mov
in
add
rorb
mov
inc
leave
movsl
insl
xorb
pop
or
imul
test
or
and
mov
cltd
adc
push
sub
ret
push
add
das
xchg
sbb
inc
jle
pop
jl
popf
mov
pop
mov
pop
daa
add
push
out
mov
inc
popa
jge
inc
add
inc
add
stos
jle
das
dec
popf
test
das
ss
hlt
lock
mov
fisubrl
sub
arpl
out
push
aad
shlb
shlb
dec
fisttps
in
scas
mov
into
xchg
or
rol
sahf
sbb
loope
les
sub
popf
or
adc
lcall
and
imul
pop
xchg
mov
cmp
ss
mov
shrb
mov
maskmovq
mull
rcll
mov
and
mov
dec
mov
cmp
adc
leave
sub
scas
frstor
cmp
and
fnsave
loop
ficoml
scas
push
adc
icebp
pop
push
inc
stc
dec
cmp
mov
loop
loope
cmp
insb
mov
push
cli
xchg
lds
out
std
lea
aas
adc
xchg
xchg
or
pop
repz
xor
mov
cmp
inc
hlt
daa
pop
jae
mov
pop
movsl
cmp
fsts
lock
outsl
imul
sbb
clc
outsb
int3
je
jmp
adc
mov
and
mov
sbb
shr
orb
push
cmp
sahf
shl
xor
imul
sub
adc
xor
mov
push
inc
enter
insb
addr16
add
in
movsb
pushf
dec
call
hlt
aas
dec
or
inc
orb
rcr
imulb
test
daa
push
cs
xorb
pusha
shlb
into
test
movsb
pop
jbe
dec
aas
xor
xchg
cmp
xchg
push
and
popf
push
addr16
inc
iret
sbb
push
or
roll
lock
xor
and
cmp
pop
push
mov
mov
out
fucom
add
sarl
xchg
add
nop
leave
jns
mov
mov
lds
je
sub
test
ret
pop
push
out
mov
loop
jo
insb
shlb
xor
jae
push
mov
or
push
add
gs
mov
mov
fidivrs
jl
sarl
cmp
push
and
in
in
leave
inc
addr16
cmpsb
push
int
std
sub
mov
sbb
pop
or
xchg
adc
adc
call
adc
xor
push
adc
in
icebp
and
lahf
adc
lret
test
lods
jb
jl
clc
in
in
jl
orl
lret
push
lcall
xchg
sub
das
repnz
xchg
ret
das
fisubs
cmpsl
and
cmp
inc
xchg
lods
bound
push
movsb
sub
or
out
jmp
cmp
mov
in
jnp
movsl
adc
cmp
nop
push
push
mov
add
mov
arpl
jno
je
imul
fwait
out
inc
sub
push
push
mov
mov
push
mov
mov
and
addr16
jmp
orl
add
and
mov
jb
dec
sbb
jle
lcall
cld
push
cltd
fstp
mov
push
mov
sub
push
insl
scas
inc
push
jnp
mov
sahf
cmp
imull
mov
sbb
iret
jge
pop
dec
sbb
repnz
hlt
or
or
mov
pop
push
jmp
ljmp
push
add
sbb
dec
cmp
mov
sti
add
mov
jne
out
mov
int3
xlat
sbbl
dec
jns
daa
scas
jb
les
jo
mov
mov
cmpsl
or
add
sbb
icebp
pusha
fildl
out
push
dec
hlt
sub
lock
loop
repz
es
out
sub
test
cld
popa
adc
adc
loop
hlt
into
and
pop
inc
pop
xchg
int3
adc
fisubl
fldt
xchg
xor
shl
adc
push
rorl
add
fwait
push
adc
jbe
inc
lods
or
mov
into
aam
lea
mov
and
lock
dec
pop
add
adc
mov
aad
jb
test
cwtl
ss
clc
addr16
inc
addb
xor
outsl
std
insb
jne
or
inc
pop
xchg
jmp
lds
je
mov
xchg
or
mov
test
adcl
and
pop
incl
scas
addr16
sub
cwtl
lds
mov
lds
xor
pusha
adc
int3
and
and
daa
das
mov
or
mov
adc
fidivrs
inc
push
loopne
inc
sbb
push
inc
mov
shlb
mov
ds
jmp
jnp
mov
xchg
adc
and
add
xor
add
addr16
add
cmp
ret
sub
insb
push
push
lods
les
arpl
stc
aaa
insb
xlat
sub
adc
out
add
xchg
pop
inc
mov
mov
jo
mov
cmp
cld
je
sub
push
sbb
sahf
icebp
mov
nop
lds
leave
pop
push
mov
pop
mov
pop
inc
mov
repz
push
xor
adc
loope
ret
or
bound
repz
adc
stc
xchg
push
gs
movsl
mov
xchg
sbb
test
sbb
sub
fadds
aaa
adc
mov
stos
inc
push
mov
rorl
jbe
rcrl
cltd
fimuls
mov
mov
cwtl
sahf
imul
jmp
scas
push
scas
cmpsl
leave
aad
mov
aam
std
outsb
fwait
insl
pop
push
cs
in
fcmovbe
in
jge
sarl
mov
cltd
sub
loop
sub
incl
pop
xorb
insb
ds
shlb
jbe
ljmp
adc
jb
divb
push
xor
jle
insb
push
arpl
cmpb
test
mov
xchg
jge
or
out
inc
pop
test
sbb
lcall
addr16
xor
pop
ret
dec
cmp
add
xor
adcl
test
leave
sti
sub
xlat
mov
xor
adc
cmp
in
inc
sbbl
pop
inc
mov
mov
insl
mov
jle
cmpsb
mov
aas
sti
adc
sub
dec
lcall
push
loop
inc
shrb
sbb
into
add
pusha
jp
mov
pop
mov
inc
mov
repz
je
cwtl
push
shll
imul
in
pusha
jmp
xor
xorb
cltd
jecxz
imul
adc
imul
xor
outsl
add
and
xchg
mov
shll
push
cmpsb
cmp
add
inc
pop
push
jbe
lods
pop
das
dec
and
ljmp
leave
inc
es
lret
lods
out
or
jecxz
jle
mov
xchg
jns
add
adc
js
icebp
mov
mov
clc
inc
push
dec
loop
dec
or
sub
dec
dec
push
xchg
je
sti
sub
addr16
fidivl
sahf
test
ja
test
xor
xchg
popa
fisubl
in
sub
ljmp
subl
bound
pop
sbb
scas
mov
cwtl
rcrb
push
mov
sub
jg
and
test
xchg
mov
dec
std
fidivs
sub
stc
in
sub
xchg
dec
aam
and
xor
xchg
bound
adc
xchg
scas
adc
xor
mov
out
xor
cltd
push
dec
xchg
mov
stos
in
lods
mov
insb
xor
stc
adc
or
out
pusha
or
xchg
dec
or
hlt
imul
push
pop
sub
in
fists
dec
push
push
push
mov
js
ret
sub
xchg
inc
outsl
push
pop
jns
in
inc
jo
ret
cmp
push
mov
mov
ds
in
in
xor
pop
test
test
lret
xchg
sbb
xchg
push
pop
adcb
push
sub
sub
lock
lods
ret
mov
arpl
stos
jo
in
in
mov
sub
xchg
mov
cmpb
in
mov
jns
outsb
insb
push
addr16
mov
aas
ja
mov
loop
lret
scas
adc
mov
adc
orl
es
inc
gs
pop
inc
push
push
xchg
mov
lea
mov
call
add
mov
outsb
cmp
add
mov
sbbl
scas
pop
xchg
push
xor
movsl
jmp
lret
mov
or
mov
loop
adc
sti
jb
pop
or
xchg
orb
xlat
sti
inc
inc
scas
stos
mov
push
xor
bound
scas
sbb
dec
cmp
shll
xchg
scas
insb
xchg
dec
xchg
or
idiv
xor
and
enter
cli
cmp
inc
jo
cwtl
stc
push
mov
sbb
sbb
or
mov
or
xchg
mov
loopne
shlb
jmp
cmp
pop
sub
subb
shrl
addr16
pop
inc
jl
insb
add
lods
or
fsubrs
mov
outsb
repnz
xor
mov
lret
xchg
icebp
adc
ljmp
out
orl
mov
xchg
inc
mov
sahf
insb
xchg
es
lcall
sti
mov
add
hlt
sbb
setae
mov
divps
cmpsb
decb
loopne
fstps
sbb
adc
stos
and
mov
dec
push
ljmp
dec
es
imul
sbb
std
lods
sub
mov
adc
push
test
xor
mov
ja
cmp
dec
dec
mov
fistps
xchg
cs
scas
outsb
mov
push
dec
mov
sub
jns
fistpll
cmp
or
in
jecxz
push
notb
mov
dec
jl
out
xchg
cmpsb
sbb
test
test
js
pushf
cmpsb
jno
ss
xor
xchg
cli
jnp
or
push
add
ret
mov
daa
jecxz
cmpsl
sbb
out
add
adc
arpl
shll
ljmp
movsb
in
outsb
jo
pop
out
adc
dec
mov
xchg
int3
push
sub
lods
push
int
jle
pop
dec
xchg
ja
sbb
sub
mov
fwait
push
fimull
xor
dec
ds
mov
sti
popa
sub
retw
push
insb
mov
cli
mov
fstpl
mov
sub
mov
jl
out
add
inc
mov
das
cmp
jae
push
jae
cmp
jg
adc
subl
into
testb
add
outsb
rorb
imulb
scas
and
mov
lret
lahf
lret
dec
fldt
notl
ss
push
or
cmp
cs
bound
mov
and
negb
lret
inc
mov
rolb
bound
aaa
scas
push
in
inc
adc
mov
fcmovb
clc
sub
xchg
unpckhps
sbbb
cmc
scas
repz
stc
les
lret
mov
jl
stos
mov
jmp
xchg
jns
push
cmpsl
jle
out
ret
enter
iret
add
out
push
mov
lret
in
fistl
push
popa
pop
pop
mov
jl
add
adc
ret
ljmp
dec
cmc
lds
mov
jnp
cld
lret
es
push
mov
enter
push
jecxz
xor
out
ret
arpl
pop
fdivrp
push
lret
add
sub
push
test
faddp
fists
outsb
push
cmpsb
dec
adc
les
mov
lds
and
ret
aaa
ret
pop
lds
addr16
and
adc
and
mov
aas
lret
push
test
das
sbb
and
ret
sbb
addr16
push
movsl
pop
mov
int
cmp
cli
pop
mov
mov
lcall
sbb
stos
mov
inc
dec
lods
repz
jb
fdivs
lret
lock
adc
imul
bound
lcall
inc
shl
jecxz
xchg
daa
sarb
jo
xor
lret
add
mov
fadd
xchg
lret
sbb
jl
adc
add
cltd
adc
mov
xchg
jecxz
outsb
cmpsb
in
add
fnstsw
ficoms
loopne
leave
push
shlb
addr16
push
aam
lods
mov
ret
pop
in
pop
add
sarl
push
hlt
xor
into
bound
pop
mov
cs
std
lret
jb
leave
push
mov
int
inc
adc
scas
rol
imul
cmp
xchg
or
add
call
scas
sarl
add
push
mov
pop
ret
mov
adc
addb
cmp
mov
pop
mov
int
mov
adc
imul
xor
in
ret
popf
loop
push
int3
jmp
mov
push
bndstx
test
sarb
js
xlat
pop
shrl
push
test
outsl
jnp
je
inc
dec
jns
leave
fxch
frstor
mov
cld
pop
loopne
cwtl
lret
jne
push
pop
add
jl
ret
in
pop
push
jge
in
jmp
jecxz
jno
add
call
xchg
stc
std
adc
outsl
int
lret
pop
adc
insl
adc
pop
jae
cmp
pop
lret
mov
int
shll
lret
xor
and
gs
sub
xchg
lret
mov
push
ret
mov
loopne
loope
jns
lret
iret
push
rcl
push
pop
mov
pop
mov
or
and
fadds
adc
push
dec
test
inc
xchg
js
xor
movsl
lahf
inc
je
mov
add
int3
cmp
rcrl
push
cmp
cmp
int
mov
mov
or
push
ror
sbb
adc
jo
addr16
lods
pop
movsl
xor
rorb
lret
std
xorb
push
pop
pop
adc
mov
push
add
pop
jno
fdivrl
jmp
repz
lods
mov
or
int
ret
cltd
clc
mov
adc
mov
adc
xchg
sub
pop
and
mov
mov
cmpb
pop
enter
pop
jne
ret
loopne
mov
iret
mov
add
add
sub
jae
lea
lcall
mov
push
jne
movsb
imul
jle
lahf
dec
sub
xchg
pop
int
outsb
fmuls
or
int
jo
ja
cmp
add
mov
sub
scas
popa
push
nop
fidivrl
jnp
xchg
jle
xchg
sbb
jno
lods
pusha
xrelease
push
xor
adc
pop
inc
inc
mov
jecxz
loope
test
xchg
hlt
notb
insl
cmp
aad
add
and
jl
ret
call
and
xor
sbb
int
mov
outsl
fldcw
cmp
pop
sub
loope
xchg
mov
sbb
pop
jp
and
jmp
fs
add
mov
mov
aad
dec
arpl
test
out
mov
aam
out
testb
mov
cmp
shll
xchg
psubb
scas
or
cmpsl
push
pop
jne
cli
fisubs
insb
subl
pop
jbe
shrb
loopne
cli
mov
sbb
andl
fs
out
pop
fmulp
mov
out
xchg
or
fbstp
leave
mov
push
jb
and
push
mov
jl
out
imulb
cwtl
sbb
jbe
fdivs
je
leave
sti
inc
mov
and
cmpsb
fmull
lods
lret
movl
cmp
in
ja
nop
push
enter
cmp
sub
mov
cmp
push
add
dec
scas
push
and
sub
cwtl
mov
sbb
add
sub
stos
pop
fs
or
adc
movsb
in
mov
mov
mov
inc
dec
xor
arpl
push
mov
shr
enter
dec
je
cmp
mov
lret
cmp
data16
popf
fldenv
xchg
mov
or
out
xor
ja
ljmp
cmpl
cmpb
or
leave
lods
mov
je
mov
mov
repnz
test
test
sti
fidivrs
xchg
mov
pop
mov
xchg
inc
xor
loop
push
mov
or
pop
dec
outsb
pop
xchg
mov
iret
xchg
push
xchg
popf
push
jne
scas
mov
addr16
xchg
mov
jle
outsb
notb
cwtl
dec
outsb
sub
jecxz
pop
or
shr
in
dec
movsb
push
xchg
fiaddl
xchg
push
fistl
imul
sub
fwait
sub
ja
jne
mov
mov
mov
push
inc
movsl
insl
ds
outsb
jle
sub
or
cmp
rolb
movb
xchg
mov
xchg
mov
stc
outsl
int3
mov
xchg
mov
mov
pop
push
lcall
push
lcall
outsl
inc
mov
mov
push
add
sub
mov
pop
jbe
inc
and
clc
lret
add
movsl
daa
push
stc
xlat
andl
sbb
movsl
pop
das
push
pop
adc
ja
jno
jle
addb
dec
clc
pop
fisubrs
mov
lret
sbb
sahf
sbb
mov
je
push
outsb
xor
xor
outsb
ja
mov
push
dec
gs
adc
sub
xor
xor
fcoml
mov
stos
xchg
sti
xor
mov
jbe
xchg
sahf
dec
ss
call
mov
das
pop
mov
ror
xchg
lcall
outsb
loopne
ret
push
xor
ljmp
pop
pushf
fwait
inc
push
movsb
or
repnz
jnp
popf
mov
jle
repz
ret
add
fstpl
icebp
pushf
mov
and
aaa
pop
lcall
fmulp
sub
add
add
xlat
xchg
xor
jae
pushf
xchg
popl
push
push
lods
pop
push
and
xchg
dec
jne
movd
insl
or
cs
imul
loope
and
lcall
jecxz
jno
adc
cmp
pop
or
or
out
push
mov
clc
mov
or
sbb
daa
inc
sub
pop
dec
push
xor
cmp
mov
add
mov
xchg
push
jle
mov
inc
xchg
cltd
push
inc
dec
sbb
mov
out
cli
ds
std
adc
jno
mov
std
imul
adc
inc
lock
push
scas
and
shlb
negb
std
xchg
push
xchg
dec
cltd
push
orb
pusha
ds
std
sub
push
call
adc
rcrb
xchg
pop
or
cli
loop
mov
cmp
dec
dec
movsl
mov
out
jae
movsb
jbe
cs
push
push
xchg
cmp
out
push
pop
jl
push
or
das
js
mov
lcall
mov
lret
testb
test
sar
fisttps
outsl
notl
ret
inc
sti
mov
pop
scas
mov
cmp
addr16
sub
mov
push
xchg
adc
push
out
sbb
add
xchg
icebp
repz
pop
fcoml
scas
fs
movsb
fcmovb
sbb
pop
out
mov
sub
out
sub
add
sub
add
push
sub
int3
xorb
adc
dec
adc
xlat
mov
jp
mov
ja
xchg
add
aam
push
adc
dec
cltd
xlat
je
cmp
jmp
pushf
jp
jns
pop
mov
adcl
jp
pop
imul
and
mov
dec
pop
imul
lahf
jl
jecxz
repz
jp
mov
xchg
mov
pop
jns
sub
stos
cmc
repnz
stc
cmp
cli
addr16
sub
in
xor
into
push
push
cmpsb
lods
inc
test
xor
dec
lods
cmp
mov
js
jmp
jb
clc
out
push
pop
rorl
pop
jno
inc
dec
sbb
mov
aam
arpl
aaa
jae
mov
push
outsb
out
and
dec
rclb
repnz
cld
fdivs
mov
lock
mov
dec
fucomp
cld
cmova
adc
jno
out
adc
mov
push
int3
mov
lds
out
or
xchg
les
lret
out
dec
ja
sub
and
je
push
pop
daa
repz
in
cmc
repnz
popa
cmpb
das
outsl
and
sarb
lea
daa
jb
sbb
scas
mov
lods
jl
pop
push
shll
xor
gs
cmp
cmpsb
sub
inc
xchg
mov
xor
adc
mov
mov
ret
call
sbb
xor
cld
shl
or
dec
mov
cmp
dec
inc
xchg
pop
inc
mov
cmp
in
lcall
mov
ljmp
mov
outsl
test
lds
xchg
or
mov
dec
adc
stos
mov
sub
stos
mov
dec
outsl
aaa
leave
mov
ja
insb
sahf
sti
outsb
pop
sbb
imul
mov
loope
jns
mov
lds
jb
pop
sbb
xor
cmp
stos
add
xchg
push
sbb
push
repz
pop
mov
mov
sub
pushf
arpl
loop
push
popf
jecxz
and
loop
xor
mov
inc
mov
cmc
fnstsw
lahf
sbb
or
test
test
adc
inc
pop
push
test
fsubrp
je
mov
xchg
mov
jg
icebp
in
push
or
or
stc
xor
cld
dec
je
sbb
rorl
adc
xchg
test
faddl
fildll
xchg
clc
iret
inc
js
fcomi
mov
xor
lahf
test
pop
daa
xchg
lret
sub
movmskps
dec
insl
daa
jp
fcoml
dec
je
sbb
clc
or
pop
mov
mov
out
cwtl
dec
movsb
xchg
xchg
xor
mov
lea
xlat
sub
inc
daa
xchg
lcall
addr16
inc
push
ss
inc
lods
mov
clc
ret
mov
mov
stos
std
xchg
pop
movsl
jecxz
outsl
inc
jno
xor
xchg
push
int3
int
in
mov
xchg
push
dec
or
call
cmpsl
pop
push
xchg
jns
sbb
aaa
or
sbbb
dec
roll
pop
nop
cwtl
fsubs
xchg
decb
test
insl
xlat
sbb
pusha
add
cwtl
popf
popf
push
xchg
loopne
xlat
xor
cmpl
or
adc
mov
jns
clc
les
lods
mov
jg
mov
and
push
jbe
mov
loop
cs
xchg
nop
movsl
lahf
ja
mov
xchg
push
bound
aas
cld
push
test
sub
mov
or
xlat
sbb
push
mov
adc
nop
out
int
lret
dec
aas
mov
jne
imul
push
call
sbb
leave
push
aas
call
mov
imul
scas
or
inc
jnp
push
push
and
mov
pop
dec
test
jo
mov
inc
sbb
insl
cmp
fwait
mov
imul
mov
add
mov
js
iret
fwait
push
das
out
sub
jg
and
add
jmp
ret
adc
fidivl
xchg
cli
xlat
iret
movsl
or
adc
sub
add
pop
and
mov
jmp
lret
subl
xchg
cltd
pop
fimuls
push
push
icebp
cmp
push
nop
mov
notb
mov
les
test
adc
jmp
xchg
cmpb
notl
inc
inc
jge
adc
jecxz
push
xlat
and
gs
adc
sbb
out
xlat
mov
xor
scas
mov
cwtl
or
adc
fsubl
push
je
xor
fwait
inc
shrb
scas
mov
fs
notl
data16
mov
clc
jbe
inc
jg
int
sub
adc
sbb
jo
out
mov
test
mov
jno
xchg
and
mov
mov
sub
cmpsb
sub
imul
push
cmc
cmpsl
mov
imul
repz
adcb
sub
lods
sbb
push
movsb
xchg
daa
scas
add
int3
pop
test
fstps
sbbb
or
pop
movl
sahf
add
jno
ljmp
or
outsb
adc
push
lea
pusha
push
or
test
or
pop
in
mov
insl
dec
iret
loop
shl
test
ss
pop
aas
jge
in
dec
stos
or
mov
addr16
add
mov
ss
add
ret
jecxz
push
sahf
clc
das
push
scas
add
sub
popf
ja
jmp
rcll
das
add
std
inc
push
out
adc
in
sub
fwait
sub
push
test
jp
and
js
in
jns
add
push
mov
out
aas
xor
out
xor
xlat
test
dec
xor
adcb
imul
mov
push
sbb
rolb
insl
mov
fldcw
pop
loope
pop
imul
push
adc
push
call
pop
inc
adc
or
adc
pop
test
cmp
sbbb
pop
inc
sbb
adc
icebp
jno
mov
xchg
out
clc
and
dec
in
fdivrs
adc
stc
out
or
jno
icebp
cmp
cmp
in
hlt
add
sub
fmuls
cmp
push
inc
call
dec
imul
mov
jbe
ss
imul
ja
je
push
scas
jae
add
aad
out
cmp
lret
in
notb
cltd
ret
jle
lret
jmp
imul
data16
sti
pop
cmp
mov
inc
xor
aad
cld
lcall
jmp
fistl
jmp
adc
scas
lret
imul
jb
js
pop
sbb
inc
and
arpl
adc
dec
je
mov
cmp
xor
out
clc
stos
stos
mov
add
mov
adc
ss
jo
inc
pop
fmulp
scas
xor
aad
das
dec
flds
fsubl
jl
adc
mov
arpl
imul
push
scas
in
je
dec
hlt
addr16
jl
cli
icebp
jns
mov
pop
dec
out
jns
in
xchg
js
popf
jae
cmp
mov
iret
xor
xchg
or
sbb
arpl
push
fdivrs
arpl
sbb
xor
data16
sub
aad
es
insl
mov
data16
lea
mov
add
cmpsb
cld
or
sub
mov
out
sbb
mov
fs
fwait
jb
cs
xchg
dec
xchg
jne
in
stc
push
mov
int
fwait
lock
cmpsl
fsubr
push
fs
jnp
mov
outsb
push
pushf
jae
hlt
sub
cmp
imul
stos
jns
fsts
outsb
test
aad
mov
int3
ja
scas
outsb
xchg
test
fbstp
jno
mov
idivb
mov
mov
or
jb
ss
cmp
js
incb
mov
dec
push
call
pop
testl
call
push
inc
sub
push
enter
fistpl
sbb
fwait
lret
sbb
adc
rcll
arpl
or
aam
js
test
cmpsl
xchg
sub
jbe
repnz
add
dec
adc
cmpsl
xchg
sub
adc
pop
sbb
jmp
fwait
lods
lcall
stc
jp
dec
mov
test
daa
push
jns
in
push
mov
xchg
inc
lret
pop
out
shl
jbe
or
cmp
nop
call
and
sub
xor
fs
movsb
jp
cmp
data16
push
jne
xor
cli
sbb
or
jo
data16
lahf
inc
push
popf
and
ja
mov
pop
push
test
ja
jp
lods
and
or
mov
rcrb
xchg
xor
cmp
inc
jne
popf
jp
sarb
or
imul
mov
fldenv
mov
call
pop
pop
mov
xchg
repnz
and
jo
ret
jae
dec
popf
fwait
or
cltd
push
dec
inc
mov
shrl
xor
fiadds
mov
hlt
dec
adc
loopne
test
push
sub
jecxz
lods
subl
xlat
mov
jl
xchg
and
jge
jp
cmp
mov
dec
dec
out
lock
in
mov
out
cmp
out
push
xor
fimuls
inc
xchg
iret
int3
mov
xchg
test
cmp
jmp
icebp
pop
movsb
adc
ljmp
cwtl
adc
mov
scas
and
mov
pop
sub
push
jno
xor
stc
nop
arpl
inc
bound
in
mov
xchg
adc
lret
mov
xor
mov
fsubrp
jp
out
sub
push
iret
push
cmc
stos
mov
fs
sbb
in
sub
scas
repz
std
rorb
dec
jmp
dec
aam
cwtl
jne
xchg
mov
add
jbe
push
add
mov
loop
sub
mov
lret
mov
pop
mov
repz
sti
nop
ret
andl
mov
negl
shll
shll
scas
ret
jge
lods
mov
sahf
enter
pop
mov
or
fistpl
lea
push
out
sub
push
pop
mov
outsl
or
push
xlat
jecxz
addr16
mov
pop
movsb
divl
sahf
push
and
enter
adc
pop
ljmp
mov
pop
push
stc
inc
lahf
lret
repz
mov
mov
cmp
add
dec
mov
xchg
ljmp
push
sbb
pop
out
inc
xchg
fs
cmpsl
xchg
dec
xchg
mov
and
dec
jmp
mov
daa
and
xchg
lcall
xchg
test
sbb
test
in
adc
xor
jb
sbb
sbb
push
xchg
and
sbb
ljmp
inc
nop
or
ret
push
test
mov
jge
cmpsl
sub
repz
sbb
inc
notl
dec
int3
in
adc
nop
mov
jae
ja
push
jbe
aas
sub
dec
sbb
add
xchg
cld
push
addl
js,pn
inc
mov
loopne
pop
pop
andl
jbe
adc
xor
stos
outsb
mov
outsb
mov
aad
shrl
fs
push
mov
dec
add
addr16
xchg
add
dec
imul
push
xor
stc
jae,pn
scas
mov
out
cmp
pusha
scas
pop
jo
mov
dec
pop
stos
das
push
cwtl
xor
push
fidivs
or
pop
pusha
repnz
insl
ss
ret
mov
dec
or
jecxz,pn
dec
iret
movsb
imul
shll
xchg
or
xchg
jle
mov
das
cwtl
loop
sbb
int3
ja
ljmp
movsl
xor
shrb
in
das
loop
test
or
sub
jmp
xchg
cwtl
movsb
test
icebp
movsl
jp
imul
mov
js
sahf
cmp
adc
lock
xchg
mov
movsb
push
and
arpl
rclb
hlt
fidivs
cmp
adc
sbb
xor
mov
leave
outsl
jle
lret
push
adc
pop
jmp
lea
mov
xchg
sub
and
pop
and
mov
jecxz
mov
mov
mov
repz
inc
xchg
scas
call
fwait
mov
daa
xchg
ss
out
mov
cmp
jnp
push
push
push
into
or
adc
ljmp
lea
pop
in
push
push
jae
pop
jbe
fnstenv
ja
repnz
sub
fidivrl
xchg
loopne
xor
popa
mov
mov
cmpsl
add
mov
out
jecxz
loop
lods
fnsave
shrb
adc
pop
aaa
cmc
std
cmp
pop
push
jecxz
mov
sbb
sub
lret
sbb
inc
jb
scas
js
xchg
inc
push
sub
push
lock
insl
cmpsl
mov
cmc
sbb
push
sub
call
cmp
pop
add
mov
mov
cmpsb
idiv
insb
ja
xchg
mov
mov
mov
xor
test
ret
mov
dec
mov
fistpll
test
dec
xchg
mov
inc
mov
pop
dec
mov
dec
mov
xorl
std
mov
or
cld
jo
mov
xor
dec
shlb
repz
mov
sbb
adc
imul
adc
es
aam
fnstcw
std
push
and
jp
mov
mov
xchg
dec
pop
mov
loope
mov
xchg
bound
cmp
rcrb
loope
inc
stc
out
mov
andb
adc
sub
adc
cmp
mov
or
xchg
and
cmp
add
mov
sbb
and
inc
lret
push
in
adc
xor
mov
loopnew
lret
jg
ret
jb
xchg
test
or
pop
xchg
js
jne
cmp
jnp
xchg
popa
jle
stc
and
push
clc
clc
sub
aaa
mov
push
push
es
lock
mov
inc
out
adc
adc
bnd
add
out
push
cltd
push
repz
adc
out
push
leave
push
repz
repnz
jge
fdivrs
jmp
xor
jbe
out
call
in
outsb
jmp
test
mov
add
gs
shrb
cli
jae
dec
jl
cmpsb
fldt
outsl
mov
mov
sbb
jg
in
insl
cmpsl
sub
jmp
pop
lret
divb
in
pop
out
shll
pop
repnz
lcall
movsl
aaa
sub
jo
xchg
stos
out
add
mov
jp
lods
data16
mov
mov
or
aas
xchg
jge
or
pop
scas
push
jle
push
push
arpl
das
xor
adc
dec
repz
push
jae
nop
cmp
aad
mov
jmp
mov
gs
sar
scas
lods
mov
xor
dec
jmp
cltd
aas
lcall
lret
inc
mov
xchg
push
and
pop
out
pop
push
fs
int
cld
sbb
inc
es
jbe
stos
hlt
push
pop
dec
mov
add
xchg
mov
push
sub
or
imul
xchg
insb
loope
xchg
lods
xchg
adc
lcall
cmpsb
xchg
sahf
adc
xchg
clc
rclb
push
test
mov
lret
pop
insl
jg
mov
cmc
and
mov
ljmp
cmpsb
fidivl
jbe
sub
xchg
xchg
aad
mov
sub
mov
jno
loop
dec
xchg
divb
jecxz
adc
adc
jo
pop
mov
hlt
shlb
mov
sub
pop
jmp
loop
arpl
movsl
mov
gs
or
mov
jecxz
inc
test
mov
sub
sti
cwtl
daa
xchg
dec
jmp
icebp
shll
mov
jp
jo
adc
pop
out
sub
subb
in
mov
cwtl
aad
stc
sbb
cltd
jbe
mov
xlat
mov
out
push
out
pop
push
cmpsl
mov
push
mov
mov
jbe
xchg
inc
or
shlb
adcl
data16
call
or
jmp
pop
popa
bound
test
outsl
inc
scas
ja
imul
pop
out
fldln2
dec
lcall
insl
jbe
or
rol
mov
cmpsb
push
ljmp
scas
stos
mov
cltd
sahf
imul
push
inc
mov
mov
incl
xchg
jb
ds
scas
and
mov
clc
and
call
daa
mov
in
pushf
stos
in
mov
ret
or
leave
bound
sub
lahf
cmc
nop
test
xchg
xchg
or
mov
std
jno
cmpsl
jmp
test
shl
push
out
pop
dec
mov
addr16
jbe
mov
xor
mov
scas
push
mov
int
xchg
adc
bound
cmpsb
jl
mov
sub
xor
mov
stos
xchg
adc
movsl
adc
sub
insb
cmpsb
icebp
lret
sub
pop
filds
sbb
inc
inc
mov
inc
push
jmp
xchg
sbb
jecxz
push
repnz
inc
popl
jnp
xchg
outsb
or
fldt
xchg
fisubrl
jecxz
dec
xorps
leave
xor
dec
adc
data16
loopne
movsb
mov
jmp
or
or
push
popf
stos
movsl
mov
ljmp
cli
xor
jnp
fildll
fisubrl
dec
xor
inc
in
sahf
sbb
in
cmp
pop
jb
cltd
mov
out
pop
mov
adc
rcrb
jo
xchg
pusha
aaa
push
mov
jne
js
jbe
cltd
mov
adc
gs
push
push
popf
pop
xchg
mov
mov
xchg
xor
adc
jecxz
or
lea
or
dec
or
lret
andl
clc
mov
rcrl
movsb
cwtl
aad
push
push
loop
jmp
xchg
es
cltd
jecxz
dec
divb
mov
enter
cmp
test
scas
mov
repnz
je
pop
add
adc
jmp
loopne
ret
push
add
push
lcall
pop
push
loope
dec
imul
stos
cwtl
stos
and
push
inc
cmp
cwtl
cwtl
sbb
in
push
inc
push
mov
pop
mov
sub
xor
aas
shr
ljmp
loop
add
adc
outsl
out
xchg
xchg
inc
jg
dec
sub
std
bound
xchg
xor
jp
je
or
add
in
subl
push
inc
pop
popf
cmp
imul
pop
loop
pop
outsb
jecxz
mov
and
mov
mov
xchg
xchg
push
cmp
add
cmp
notb
aaa
add
stos
push
sub
pop
cli
mov
push
jns
imul
call
jl
jp
mov
pop
scas
dec
das
mov
inc
gs
fidivl
mov
aad
out
add
pop
insb
add
pop
sbb
cmp
push
xchg
nop
outsb
test
sbb
push
mov
lcall
subl
and
movsb
xor
dec
push
popa
inc
mov
cs
movsl
arpl
xchg
sub
int
mov
or
insl
mov
mov
mov
bound
out
out
movsl
cmp
sahf
rorb
lret
nop
loope
pop
movsl
out
cmp
add
aad
jmp
and
xchg
mov
push
nop
sbb
mov
mov
imul
or
xchg
sbb
xchg
xchg
sub
sbb
mov
push
mov
daa
loop
or
ds
aad
mov
mov
int3
dec
dec
mov
jecxz
in
out
pop
bound
divb
pop
xor
outsb
fmulp
or
cmp
xchg
shl
jg
cli
pop
pop
mov
push
mov
or
or
xchg
push
das
jbe
mov
mov
sarl
adc
cmc
clts
lahf
cmpsb
cmp
iret
adc
ljmp
mov
lret
testb
mov
outsb
cmpsb
cmp
xchg
test
mov
pop
outsl
sbb
shlb
sbb
fdivs
in
sbb
dec
out
dec
mov
pop
movsb
or
add
xchg
inc
cwtl
push
adc
sti
daa
push
arpl
cmpsl
xchg
bswap
sbb
sarb
xor
dec
out
and
and
data16
and
js
pop
stc
es
sub
in
scas
inc
repnz
cmpsl
aaa
mov
jp
iret
sbb
push
jbe
adc
xchg
pop
inc
daa
mov
shl
jp
data16
mov
mov
mov
mov
sti
push
or
inc
adc
cmp
cmp
xchg
pop
cmp
jae
xchg
out
mov
add
inc
je
outsb
dec
jecxz
cmpsl
inc
cltd
pop
inc
nop
push
mov
jno
mov
dec
mov
sbb
pop
fisttpll
jecxz
push
jbe
mov
movsl
imull
test
mov
aaa
or
mov
gs
push
test
add
clc
je
lcall
mov
xchg
dec
push
xor
lods
mov
sarl
inc
in
imul
mov
es
shll
rcrl
cmp
mov
or
fwait
xor
mov
pop
push
popa
into
and
fidivl
dec
ret
pop
repnz
push
jmp
daa
jecxz
int3
data16
jne
mov
out
mov
pop
push
roll
stos
mov
popa
xor
jb
push
lret
rorb
int3
jno
mov
test
popa
shll
fistps
ja
data16
cmpsl
push
xor
fidivrs
or
pushf
add
fs
pop
das
sub
inc
mov
dec
loop
mov
outsl
push
movsb
test
push
add
adc
and
mov
shl
sbb
pusha
ljmp
cltd
jne
xor
aaa
push
mov
jp
out
rcrb
xchg
mov
mov
mov
xlat
ret
xchg
iret
notb
mov
push
je
ret
xchg
jecxz
subl
ret
sbb
incl
sahf
push
jecxz
lods
push
scas
add
push
mov
and
jecxz
adc
pop
cmc
sub
xchg
jo
mov
xchg
mov
inc
je
jecxz
push
inc
ret
mov
xchg
mov
mov
xor
cmp
cmp
cli
cli
fists
adc
lret
sub
push
out
je
mov
les
ret
cwtl
jp
and
cli
xchg
dec
adc
or
adc
mov
bound
dec
jae
dec
xchg
dec
into
in
or
int
xor
or
xorl
dec
jecxz
or
xchg
int3
push
lahf
ret
xchg
cmp
sub
xchg
hlt
fists
push
dec
lret
dec
js
xchg
xchg
dec
addr16
std
jns
push
lret
jb
push
and
rorl
jmp
push
jne
shr
pusha
out
ja
adc
dec
pop
rcrl
ja
addr16
aaa
sbb
cmp
idivl
gs
cwtl
dec
push
add
push
pop
inc
pop
inc
jge
out
in
insb
push
xor
sbb
push
out
sub
push
loop
or
inc
fidivrs
jno
sub
inc
out
repnz
sub
mov
mov
push
enter
add
mov
mov
out
jp
into
pop
push
dec
push
sbb
inc
xchg
out
ljmp
xor
cmpsl
xchg
lock
stos
mov
xchg
jge
fiadds
push
fcmovnb
or
or
pop
push
nop
jb
push
loopne
repnz
pop
inc
and
jae
jge
popf
lcall
sub
sarb
int3
xor
cmp
cmp
mov
fcomps
push
inc
lahf
imul
jl
pop
push
inc
rcrl
inc
cmp
and
inc
ss
push
faddl
outsb
outsb
add
bnd
pop
lods
stos
daa
jg
loop
test
inc
jmp
or
push
xchg
mov
jl
jbe
mov
pop
call
sub
push
xchg
xchg
jle
outsb
push
scas
mov
jecxz
clc
pushf
and
or
loop
out
jns
jge
xor
int
test
pop
mov
pushf
lret
pop
bound
mov
mov
cld
inc
xchg
cmp
sarb
mulb
sti
xchg
repnz
arpl
test
pop
mov
notb
lret
sbb
push
push
jns
js
jne
sbb
mov
ljmp
call
xchg
jno
int3
iret
inc
lds
dec
push
stos
jns
es
mov
in
cmp
fiaddl
sub
or
jecxz
push
or
inc
rcll
jno
test
xor
mov
push
dec
push
rep
loopne
cmp
and
add
mov
and
sti
xchg
out
rorl
mov
in
aaa
jle
enter
pop
cmpsl
in
add
hlt
loopne
stc
cmp
out
jmp
push
js
popf
pop
push
lock
das
sbb
xchg
ljmp
jmp
add
clc
adc
push
scas
fistl
orb
fwait
sar
xchg
dec
call
xor
mov
jp
in
mov
cmp
mov
out
sbb
push
mov
adc
out
add
mov
daa
dec
cmp
xchg
sub
adc
nop
pop
xchg
adc
pop
push
sti
out
in
push
mov
mov
sub
mov
adc
mov
sub
jae
popa
call
loope
hlt
inc
cmp
loopne
sub
mov
add
xlat
testl
test
cmp
dec
mov
inc
mov
ret
jmp
dec
mov
test
pop
add
nop
aam
jp
xchg
lcall
je
in
cmpsl
cmpl
test
jae
divb
arpl
pop
dec
push
jle
pop
xchg
je
and
xor
mov
mov
xchg
sahf
jbe
movsb
or
pop
or
daa
mov
xchg
inc
sub
jns
push
sub
addr16
mov
xor
jae
mov
inc
dec
movsb
push
out
jg
lahf
mov
movsb
dec
mov
jno
cmpsl
pop
mov
jo
orl
or
test
cmpsb
jo
dec
sub
jno
adc
outsb
xchg
mov
repnz
dec
xchg
mov
loopne
es
aaa
fs
push
bound
fidivs
scas
xchg
add
ja
xchg
and
adc
test
stos
push
scas
sbb
xchg
cmp
sarb
xor
or
outsl
push
mov
in
jmp
xlat
jbe
sti
jno
and
popf
pusha
inc
jne
pop
xchg
pop
fldt
ljmp
out
or
nop
leave
testb
ja
mov
push
int3
out
mov
dec
mov
push
mov
push
das
mov
out
pop
mov
xchg
loop
jp
imul
outsl
mov
jns
sbb
ljmp
adc
and
push
jns
faddl
test
xor
cmp
jo
jg
cmc
out
push
xchg
mov
sti
push
int
testb
push
adc
popa
mov
or
xorl
and
push
pop
ja
fwait
cmp
inc
das
fidivs
loop
mov
adc
add
popa
sbb
pop
xor
iret
pop
cmp
push
gs
and
mov
ja
ret
sti
inc
mov
loope
ljmp
sub
xor
sub
mov
cs
cli
xor
add
adc
cs
push
imul
popf
and
jbe
aad
shll
in
dec
out
cmp
das
jecxz
sti
scas
mov
sbb
mov
xlat
and
test
sub
jbe
add
stos
fs
mov
mov
mov
daa
cli
stc
pop
or
add
cltd
mov
adc
pop
xor
inc
sub
jecxz
fstps
addl
mov
ss
pusha
xchg
mov
adc
mov
push
insl
push
lea
pop
int
sub
sub
ljmp
add
pop
pop
add
dec
cmp
sarb
popf
push
pusha
jo
outsb
dec
xchg
test
inc
ror
rcll
mov
or
das
pop
loope
dec
fsubs
into
rclb
adc
mov
imul
xchg
dec
shll
cmp
cmp
insb
cmp
and
jbe
or
xor
jmp
add
stos
sub
sub
add
mov
sahf
repnz
xor
mov
sbb
ror
aaa
repz
add
lods
data16
repnz
or
std
outsb
pop
xchg
mov
and
loop
call
rcr
and
shll
faddp
xchg
push
mov
sub
cmpsb
pop
sub
jbe
adc
inc
jne
fxam
push
mov
negl
insb
mov
scas
jne
mov
cmc
lahf
or
mov
push
sub
cmpsl
lea
mov
mov
out
mov
fwait
adc
inc
mov
jno
ficoms
xor
lcall
inc
pop
push
or
push
iret
ficoml
testb
shrl
das
xor
mov
and
ljmp
xchg
testl
dec
movsb
mov
ljmp
xchg
lret
adc
xchg
lret
cmpsl
xor
adc
jno
cli
enter
pop
pop
jge
call
sbb
test
rcll
mov
repz
outsb
loop
into
jae
out
jmp
lcall
loop
mov
out
xor
inc
pop
jbe
popf
jg
sbb
adc
std
jno
inc
adc
sbb
sbb
roll
add
nop
rclb
pop
repnz
jl
xchg
push
mov
mov
notb
arpl
cwtl
push
xor
clc
addr16
cmpl
mov
mov
scas
or
or
in
xor
jl
ja
in
xor
push
jnp
xchg
mov
dec
fistl
dec
jns
js
arpl
cld
test
sub
sbb
mov
sub
lods
and
test
xchg
std
push
insb
push
adc
popa
mov
and
or
push
pop
mov
daa
aaa
lret
mov
aaa
mov
dec
sbb
adcb
bound
pop
sub
bound
addr16
xor
sub
xchg
outsl
sbb
push
mov
jge
icebp
inc
cs
and
and
xchg
std
and
loope
into
xchg
push
mov
pop
insb
imul
mov
mov
out
clc
sbb
ds
adc
mov
xlat
and
mov
jg
mov
pop
call
testl
jne
repz
xchg
xor
jg
loope
and
inc
outsl
jl
aas
xchg
cltd
sbbb
loope
or
pop
or
mov
sahf
outsl
inc
loop
ljmp
inc
pop
sub
enter
fistl
xlat
fprem
sub
jb
xchg
add
jo
pusha
mov
cmp
jle
into
cmp
mov
es
shrb
insl
test
xor
mov
dec
sub
sahf
sti
sbb
sbb
xchg
mov
popf
aaa
or
dec
xchg
repz
or
sti
and
stos
pop
adcl
sub
dec
jno
scas
add
dec
cmp
popl
cmc
and
mov
inc
fbld
inc
mov
mov
mov
testb
rorl
xor
sbb
lea
adc
aad
repz
adc
cld
mov
mov
dec
cmpsb
shrl
jecxz
jge
jns
mov
xor
fwait
adc
ja
rorl
into
faddl
jle
imul
dec
sub
int
iret
mov
pop
mov
mov
add
pop
pop
sbb
jae
xchg
or
rcl
xor
xor
pop
pusha
pop
lods
cmp
xor
ljmp
fdivrs
aam
add
aad
push
mov
movsb
int3
in
cmp
dec
es
and
adc
add
mov
cmp
add
push
xchg
mov
mov
xchg
mov
lods
mov
mov
nop
arpl
aad
push
divl
mov
fisubs
cwtl
jbe
mov
ja
mov
add
fs
enter
push
cwtl
cmpb
in
paddsw
xchg
in
stos
fdivl
aam
xchg
cmp
mov
sti
ljmp
in
xor
jne
cli
inc
adc
cltd
push
xor
mov
in
xchg
mov
hlt
out
and
mov
push
pusha
fstpt
das
mov
scas
mov
sbb
dec
outsb
jb
in
arpl
xchg
inc
or
call
cmpl
sbb
addb
sbb
mov
xor
xor
outsl
add
imul
daa
xchg
xor
into
xchg
dec
lods
mov
mov
pop
xlat
je
inc
and
sbb
sahf
stos
add
pushf
pop
inc
jle
xchg
cwtl
je
sbb
sbb
mov
inc
mov
pop
repnz
adc
inc
jb
adc
pop
mov
pop
ret
shlb
xor
test
xchg
mov
push
pop
testb
icebp
jp
or
lahf
adc
fwait
test
sub
mov
sbb
loopne
push
fstpt
sbb
fnstsw
and
gs
mov
mov
leave
fnstsw
xor
std
push
mov
jp
das
clc
pop
icebp
xor
mov
ds
inc
enter
pop
es
andl
and
push
leave
leave
jg
mov
je
popf
test
fistl
add
dec
outsb
mov
daa
int3
aaa
pop
mov
and
push
ss
out
inc
fs
sbb
inc
dec
movsl
and
or
das
jae
xchg
adc
int3
xchg
test
pusha
fldt
imul
jb
sbb
push
push
es
scas
jp
cmc
mov
or
push
pop
inc
imull
call
movsl
jne
in
pop
cwtl
inc
fmull
mov
xchg
jge
sub
sub
mov
xchg
in
mov
lret
daa
stos
pop
lock
push
int3
vpunpckhbw
cmp
and
in
jnp
fnstsw
ja
pop
mov
or
in
jae
fdivrl
addr16
test
or
jp
and
jle
std
or
or
sti
pop
inc
ljmp
xchg
mov
shll
add
mov
cmpsb
repnz
mov
add
iret
xchg
jbe
sub
outsb
cmp
adc
addr16
mov
out
jns
std
aad
andb
jae
dec
out
add
and
repnz
outsb
push
mov
je
lds
xchg
dec
pop
add
or
std
cmp
iret
add
dec
lahf
dec
pop
add
dec
cmp
xchg
lret
mov
flds
xor
leave
xor
xchg
scas
xchg
mov
lods
or
les
daa
mov
jno
mov
fldenv
mov
jno
mov
iret
pop
mov
xchg
push
les
outsl
add
and
push
cmp
je
outsl
out
scas
gs
pop
cmc
outsl
ljmp
xor
xor
rcll
mov
rcrl
std
add
pusha
mov
add
pusha
mov
sub
not
jge
pop
in
xlat
cmp
jl
iret
in
fisubl
pop
std
jbe
mov
jle
push
dec
in
mov
stos
lahf
dec
in
xor
cmc
xor
popa
xchg
inc
scas
push
shlb
mov
sarb
mov
addr16
mov
data16
push
fldenv
xlat
and
adc
sahf
sbbl
rorb
xor
cld
xor
popa
std
inc
mov
push
imul
adc
pusha
push
and
push
jg
fildll
lock
fisttps
dec
push
jo
rclb
jge
sub
mov
rolb
imul
add
imul
enter
mov
aad
jmp
arpl
dec
pop
sar
aad
aad
cmp
jne
add
ja
xchg
es
or
imul
add
and
xor
insl
mov
aad
int
mov
dec
dec
imul
mov
mov
mov
mov
inc
int3
daa
add
xchg
push
fisttps
cmp
dec
sbb
imul
sar
ds
in
arpl
mov
sub
imul
sub
pushf
cmp
dec
mov
adc
fdivr
mov
pop
pop
mov
mov
add
pop
les
xchg
lret
aas
shll
ja
push
push
into
sub
jae
pusha
xchg
push
idiv
xchg
stos
pop
icebp
push
aad
fiaddl
dec
pusha
inc
cmpsb
xchg
jge
dec
int3
or
sub
lods
outsl
insl
js
shr
mov
cmp
enter
sub
inc
mov
xchg
push
dec
mov
loopne
push
inc
ret
add
ljmp
mov
in
cltd
sub
loop
or
cmp
add
fimull
jo
dec
shll
sbbl
push
shrb
mov
mov
ret
gs
push
pop
pop
jbe
or
orb
sti
adc
bound
sbb
add
or
dec
pop
add
adcb
les
sbb
adc
loop
mov
jge
add
mov
or
out
imul
int3
cmp
dec
imul
in
lahf
mov
fwait
mov
lock
mov
nop
lods
test
mov
mov
sbb
pop
cli
imul
dec
push
adc
in
inc
mov
insl
sbb
stc
and
imull
dec
push
loope
pop
cmc
pop
jle
fcmovne
mov
add
xchg
stc
sahf
hlt
andb
jo
adc
cmpsb
fwait
xchg
or
stos
inc
mov
inc
sub
add
sub
jnp
pop
cmp
in
jnp
inc
hlt
std
test
imul
jge
and
push
loope
pop
cmc
and
fcmovne
stos
sbb
jne,pn
lret
xchg
fistpl
jmp
mov
sbb
inc
cmpsl
xchg
cli
insl
out
cmpsl
mov
adc
and
push
in
adc
inc
xor
push
cmp
xor
mov
jge
and
xchg
jge
inc
lret
xchg
mov
xchg
fidivrs
mov
cmpsb
inc
and
les
loop
add
int
fwait
dec
leave
inc
imull
mov
leave
sub
inc
enter
add
mov
inc
jmp
mov
dec
aad
cmp
pop
and
int3
adc
xor
divb
jno
inc
adc
cld
test
in
scas
fs
sbb
jmp
dec
lds
das
xor
loop
enter
fwait
outsb
out
push
fistps
arpl
mov
xchg
pop
mov
aad
and
cs
adc
aad
inc
or
push
in
fdivl
cmpsb
jge
insb
mov
popa
test
icebp
rcll
xor
xchg
icebp
loop
jbe
or
data16
or
pop
cmp
mov
xchg
outsl
cmp
mov
movsb
adc
insb
arpl
js
jl
rclb
mov
loope
gs
test
enter
ds
add
or
arpl
in
and
push
jne
jg
iret
movsl
adc
cmpsb
cmpsl
pop
out
lcall
sbb
imul
mov
test
dec
lods
iret
push
repz
mov
pop
enter
lahf
sbb
imul
aas
inc
fs
aam
mov
jb
lret
les
xor
jo
xchg
mov
fwait
xor
jp
in
or
cs
xor
xchg
ljmp
cmp
imul
xchg
mov
push
jno
push
popa
mov
sub
inc
ret
pop
in
mov
sub
xchg
xorl
movsl
lcall
xor
out
outsl
imul
push
sub
inc
inc
push
mov
into
lock
movsl
out
nop
test
jmp
pop
out
mov
repz
daa
daa
in
dec
pop
push
sbb
imul
lahf
jo
das
sub
adc
sahf
popf
rcrl
imul
pop
es
push
stos
mov
push
notb
sti
jo
and
sub
inc
lret
sub
xchg
and
cmp
pop
inc
xor
jmp
pop
xchg
inc
fcompl
inc
sub
lcall
jecxz
fstp
iret
mov
nop
lds
call
mov
mov
pushf
xchg
push
ljmp
jecxz
mov
fildll
adcb
pop
and
dec
jae
or
ljmp
mov
scas
out
dec
imul
aaa
sub
outsl
and
adc
cli
fstl
movsl
push
nop
jno
jmp
pop
out
mov
repz
daa
ret
xrelease
mov
ja
add
jae
inc
ljmp
or
jmp
mov
pop
push
ja
outsb
loope
scas
mov
jne
lret
mov
jo
mov
sbb
fistps
adc
sub
aam
fsubl
pop
push
inc
or
sub
in
stc
in
sub
jae
insb
push
jbe
and
aaa
ss
fcomps
test
xchg
out
cltd
pop
stos
cmpl
out
in
fidivs
or
test
mov
aad
imul
inc
hlt
inc
lods
fisttps
and
fmuls
xchg
jecxz
jns
pusha
daa
test
rorl
cmpsb
and
popa
mov
mov
rolb
ficoml
or
and
loopne
cmp
in
nop
push
mov
pop
icebp
or
incb
fistpll
mov
mov
sbb
sub
ret
leave
enter
lcall
bound
push
add
js
xor
push
or
faddl
rol
ljmp
test
inc
loopne
sbb
xor
add
cmp
leave
fbld
sahf
add
repz
inc
andnps
mov
fwait
test
xchg
pop
cld
addb
and
adc
les
and
jae
std
sti
dec
xchg
pusha
fprem1
sub
push
or
add
xor
mov
xchg
dec
shl
shlb
mov
xor
in
les
dec
nop
movsb
lahf
mov
movsl
sbb
cmpsb
cld
pop
dec
loop
sub
push
mov
mov
and
repz
and
inc
push
inc
idivb
push
sbb
enter
jmp
mov
mov
jnp
arpl
pop
adc
xchg
sbb
or
mov
sbb
jle
popf
adc
fwait
xlat
xchg
lret
jmp
and
loopne
mov
push
les
xchg
fmull
mov
jecxz
adc
dec
and
std
dec
push
pop
arpl
dec
in
iret
push
mov
dec
sbb
pop
outsl
mov
test
mov
je
stc
cld
jb
loop
sub
into
mov
mov
test
and
imul
xor
push
out
mov
popl
pop
lcall
pop
inc
cwtl
popf
stos
in
lea
jns
mov
mov
dec
lods
and
stos
mov
and
and
in
sbb
inc
aas
xchg
cmp
xor
mov
mov
cmp
jmp
ss
sbb
inc
js
inc
mov
shlb
mov
sub
push
rclb
lods
xor
ret
ljmp
sti
jo
bound
mov
pop
mov
lods
sub
addl
lahf
cmp
pop
mov
xchg
pop
pop
imul
in
xchg
push
imul
mov
sub
mov
enter
pop
idivb
push
cmpl
enter
arpl
sbb
test
test
pop
aas
dec
or
sub
jmp
iret
dec
dec
push
fistpl
pop
hlt
pop
xchg
push
adc
dec
data16
mov
sahf
loopne
fisubs
mov
dec
dec
stos
mul
cli
fsubl
lret
aad
sbb
inc
je
lret
sbb
rclb
pop
adc
orl
mov
jae
popa
mov
xor
insb
inc
adc
mov
inc
stc
les
ja
rclb
mov
out
inc
js
inc
xlat
xchg
out
pop
sbb
xchg
inc
mov
add
insb
add
xchg
cltd
rclb
jl
xor
xchg
jmp
mov
in
test
cmp
idivb
stos
inc
dec
mov
test
dec
add
jge
movsb
jl
cltd
or
cmp
cmc
insb
pop
nopl
sbb
cmpsl
lods
xor
mov
sub
into
test
aas
cli
pop
dec
test
xor
test
jae
lahf
test
fidivl
pop
pop
cmpsl
inc
in
add
jbe
mov
or
cli
jns
movsb
xchg
inc
cmpsl
sub
push
sarb
int3
pop
and
rolb
mov
cwtl
loopne
mov
xor
leave
cmpsb
mov
loopne
mov
sub
sub
cmp
mov
arpl
xchg
add
xor
and
inc
jbe
gs
loop
fdivrs
mov
mov
test
outsl
jbe
daa
xor
pop
add
in
sbbl
add
mull
xor
push
pop
push
xor
inc
pusha
cmp
adc
push
lods
mov
push
inc
pop
stos
sbbl
push
xor
cmp
fdivrl
xchg
xchg
addr16
dec
jge
aam
sahf
or
add
repz
push
and
jo
dec
addb
or
enter
aaa
idiv
enter
fdivl
sbb
cmp
mov
or
cmpsl
push
push
inc
andl
sbb
std
aad
call
dec
ds
lea
xchg
ret
fistl
mov
jbe
xchg
jne
push
jl
xor
dec
jo
addl
std
dec
cmp
fisubs
sbb
push
xor
xchg
insb
repnz
adc
jnp
or
mov
adc
lret
enter
cli
subb
test
lods
jnp
mov
daa
outsb
insl
lods
scas
lret
das
cmp
or
and
sub
repz
or
mov
nop
xchg
and
adc
sbb
pop
jge
jno
scas
fadd
xchg
data16
std
sti
and
sub
push
in
les
insb
adc
cltd
fcmovnu
jmp
frstor
mov
inc
rclb
outsl
dec
adc
pop
ljmp
xchg
out
mov
adc
call
adc
insl
pop
imul
jb
lods
ds
loopne
arpl
cmp
push
adc
inc
hlt
add
jo
sbb
scas
fwait
aas
fcoms
mov
call
stos
inc
push
sbb
add
cmp
pop
push
inc
jecxz
mov
in
lock
xorb
jmp
jmp
aad
mov
adc
popf
push
adc
lret
add
addr16
sbb
jb
shr
sbb
lret
imul
sub
inc
cmp
push
shll
je
int
adc
inc
sbb
adc
fmuls
xor
sbb
pop
fimuls
mov
lds
xchg
push
rorb
mov
xchg
cmp
jle
mov
scas
xor
xchg
rolb
push
pop
sti
pop
mov
mov
sub
xchg
adc
subl
xchg
loope
or
testb
ret
inc
loopne
push
movsb
mov
dec
hlt
inc
push
cmp
dec
mov
or
iret
in
xchg
int
push
push
adc
jne
and
push
inc
mov
and
push
mov
decb
enter
xchg
pop
jno
jecxz
in
and
out
ja
adc
jecxz
xor
fdivl
fwait
aam
lret
xor
push
xor
and
mov
bnd
or
rorl
cmp
mov
push
mov
in
repz
in
imul
jb
leave
xchg
push
sbb
mov
outsb
les
xchg
jno
mov
sahf
jmp
pop
popf
inc
lock
pushf
ljmp
ret
jg
mov
jo
and
sub
sti
ljmp
rolb
clc
mov
pusha
mov
adc
fadds
push
inc
or
cmc
xchg
arpl
call
ja
push
in
pushf
and
xor
fsubrl
xchg
adc
rorl
inc
add
cltd
cltd
lock
arpl
push
or
in
xchg
push
adc
mov
push
int3
pop
xchg
sub
pop
adc
or
roll
sbb
adc
inc
and
loop
popf
xchg
out
and
sbb
int3
pushf
in
loopne
es
sbb
jno
ljmp
xlat
movsb
cs
insl
jns
sbb
push
aad
lahf
icebp
loopne
js
dec
sahf
mov
div
add
or
fwait
jg
aad
daa
cmp
fwait
cmp
push
popa
jb
js
lret
jge
sbb
push
sbbb
stos
xchg
add
cmp
mov
mov
xor
lds
sub
scas
xchg
xchg
movsb
popa
adc
leave
jne
std
sub
jecxz
inc
scas
jb
adc
cmpsl
adc
ja
jae
push
xchg
and
sub
pusha
dec
movsl
inc
or
int3
je
sahf
xorl
repnz
addl
xchg
loope
bound
mov
xor
in
bound
in
cmp
rorl
test
adc
and
jecxz
push
lahf
in
mov
bound
sub
nop
jg
repz
xchg
mov
and
out
icebp
div
js
leave
xor
mov
mov
jne
addr16
fldl
out
fiaddl
jo
lock
pop
add
fbstp
aam
xchg
xlat
aad
inc
push
inc
pushf
bnd
and
cmp
jmp
sarl
xchg
mov
push
imulb
pusha
mov
mov
xorb
sub
adc
lret
cmp
xchg
adc
mov
nop
enter
stos
inc
mov
in
inc
sub
cmp
stos
mov
or
sbb
ss
mov
ja
inc
ds
mov
insl
sbb
aam
xchg
sti
and
add
cld
sbb
xchg
mov
cmp
out
add
les
test
push
pop
push
inc
adc
insb
add
push
test
cmp
add
xlat
in
out
add
repnz
movntps
test
pop
cmp
mov
cltd
mov
popa
aaa
or
xchg
lds
adc
arpl
xor
insl
xchg
fisubs
lds
mov
sbb
bound
fnsave
aam
movsl
jp
dec
loop
sub
or
adc
lds
mov
rcr
and
or
aas
loope
add
pop
add
add
pop
add
loope
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
add
add
loopne
add
loopne
add
loopne
add
pop
add
pop
add
pop
add
loope
add
pop
add
loope
add
pop
add
loope
add
pop
add
pop
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
daa
repz
or
in
add
push
fildll
push
add
xchg
add
sbb
mov
cmp
mov
add
add
add
add
add
add
lcall
add
add
add
mov
sbb
add
add
int3
add
nop
sbb
adc
rclb
clc
rcll
adc
aad
sub
xor
or
fldl
pop
jecxz
add
add
out
jmp
pop
in
add
in
add
out
add
add
add
testl
pop
jge
adc
adc
sbb
add
xchg
add
dec
add
in
or
or
call
or
or
or
adc
into
shlb
mov
or
test
jno
in
fs
jb
jbe
push
in
mov
outsb
adc
cltd
and
sbb
xor
imul
insb
and
insl
and
outsl
and
jno
push
mov
jnp
lds
je
mov
cmp
sbbb
addb
mov
push
mov
cmp
inc
enter
flds
lods
inc
iret
mov
mov
ror
rorl
aam
mov
push
or
cltd
inc
fprem1
inc
loop
inc
ljmp
mov
out
repnz
icebp
xchg
inc
repz
lock
imul
inc
notl
sub
inc
pop
roll
addb
inc
or
inc
sbb
pusha
mov
sbb
imul
and
adc
nop
adc
adc
jno
add
or
cmpsb
adc
mov
mov
adc
aam
jle
sbb
in
hlt
add
shl
outsl
sub
xchg
jb
sub
jge
stos
and
out
mov
cmp
xor
or
or
leave
or
or
rcrb
roll
ror
or
or
or
fnstcw
mov
cltd
ljmp
add
icebp
add
add
add
testb
testl
test
add
adc
cld
inc
push
push
add
jb
push
dec
leave
xchg
add
sub
pop
push
ds
jae
push
fwait
adc
mov
andb
push
jl
orb
mov
or
jmp
movsl
dec
push
out
pop
xor
pop
xchg
jo
sbb
out
add
add
add
nop
lea
adc
inc
adc
or
xorb
sbbb
sub
sbbb
movsb
mov
adc
or
xchg
or
pop
sbb
ljmp
sub
xor
ret
xor
inc
cmp
push
adc
scas
cld
sub
xor
test
into
or
pop
addr16
xor
and
ss
add
hlt
lret
rorl
test
or
mov
push
and
sahf
mov
push
sti
mov
sub
mov
subb
or
add
cli
add
push
or
push
sbb
mov
xlat
rolb
add
mov
pusha
add
jmp
pop
add
add
aad
mov
bound
sub
pusha
adc
rorb
sbb
jecxz
bound
das
and
jmp
rorb
cli
fnstsw
dec
sahf
mov
pop
xor
test
add
pusha
stos
mov
xor
sbb
popf
fs
or
imul
or
rorb
pop
and
das
xchg
jns
sub
cmp
js
add
or
push
mov
jp
testb
jl
nop
xchg
add
add
add
int3
and
pop
add
add
sbb
xor
add
inc
push
jb
and
add
or
lret
push
daa
jecxz
in
es
loop
repz
or
inc
push
jecxz
xor
lret
ret
adc
and
out
sbbb
aad
sarb
push
cltd
jb
push
inc
js
rorb
loopne
arpl
push
jg
sub
outsl
mov
push
add
mov
data16
stc
scas
mov
pop
loopne
dec
sub
bound
add
push
nop
popf
sbbb
push
push
pop
mov
add
dec
adc
dec
add
fs
mov
jo
and
xorb
clc
jle
dec
add
sti
xchg
popa
scas
jmp
adc
stos
adc
mov
xchg
mov
add
data16
je
lods
xor
mov
cmp
inc
fs
iret
inc
jns
sti
push
pop
sub
xchg
pushf
jb
or
scas
roll
cwtl
mov
add
hlt
cs
pop
mov
inc
es
loopne
cmp
cmp
or
enter
mov
test
mov
add
sub
addr16
xchg
add
add
ret
dec
mov
mulb
cmp
in
and
clc
and
cmp
shl
add
insb
inc
in
enter
push
sub
loop
and
and
jl
mov
bound
incb
add
sbb
or
fildl
aam
lock
inc
xchg
xor
cmp
mov
movsl
adc
add
adc
pop
and
xchg
adc
push
add
ja
fs
lret
adc
mov
test
dec
cmp
jb
ret
mov
call
inc
or
dec
inc
or
or
pop
clc
adc
or
xchg
nop
test
mov
xor
adc
inc
and
inc
shrb
dec
mov
pop
or
mov
imul
mov
out
push
jle
adc
push
push
cmp
xchg
out
outsb
and
inc
enter
pop
cmp
add
inc
loopne
aas
sti
fcmovbe
pop
jg
test
add
or
adc
inc
popa
push
inc
pop
fcompl
add
xor
jns
adc
add
lret
dec
insl
ficoms
inc
sub
cmpsb
or
pop
cmp
outsb
sub
xor
rcr
and
adc
mull
xchg
ja
or
sarl
inc
cmp
inc
inc
or
jp
sahf
adc
add
movsl
movl
sar
mov
jle
jo
mov
mov
or
inc
sbb
xchg
push
and
addl
mov
sarb
xchg
movl
daa
xorl
sarb
add
int
je
adc
push
add
mov
cmp
mov
add
add
rcrl
xor
out
fsub
or
or
or
add
jb
nop
ret
mov
or
mov
ja
imul
cmp
jae
loopne
and
jmp
add
add
adc
adc
pop
dec
pop
adc
loope
jnp
adc
ds
imul
sbb
sbb
mov
pop
add
jl
push
push
jno
mul
adc
push
jge
adc
aas
add
data16
int
mov
adc
sti
sub
and
sub
movsl
insl
add
cmp
add
pop
and
ds
pop
and
jns
notl
jns
add
pop
push
icebp
push
clc
adc
add
test
adc
and
adc
roll
mov
bnd
inc
pop
jp
mov
les
xchg
mov
sbb
call
hlt
jbe
data16
mov
jp
aas
insl
pushf
fmul
xchg
add
or
in
enter
shll
and
dec
scas
add
mov
mov
fldenv
add
jne
sub
stos
adc
xorb
or
ret
lds
adc
add
out
inc
loopne
icebp
insl
bound
mov
jnp
adcl
lea
cmpsl
bnd
cmp
xor
xor
push
rcrb
lods
mov
int3
imul
addl
adcl
cmp
xor
int3
and
cmc
or
verr
sub
xor
in
xchg
or
xchg
adc
adc
xor
pop
push
fiadds
xor
aaa
and
testl
adc
pop
ret
rcrb
and
adc
cmp
cmp
es
lods
pop
imul
sub
cld
inc
cmp
pop
testb
xchg
pop
xchg
lcall
int
jecxz
sbb
hlt
xchg
roll
std
xor
pop
aaa
inc
in
dec
je
or
movsb
idiv
lock
mov
int3
add
addb
dec
or
out
test
rorl
out
push
sbb
dec
or
add
and
out
and
je
or
in
out
or
insl
aaa
or
loopne
shr
outsl
xor
inc
out
pop
ljmp
mov
add
rolb
clts
cmpsb
mov
and
mov
rolb
push
or
outsl
jg
xchg
xchg
adc
ljmp
mov
pop
bound
mov
adc
cli
or
inc
or
mov
and
xchg
push
loope
mov
xchg
jmp
sahf
pcmpgtw
pushf
push
push
dec
nop
stos
or
fs
and
mov
sub
add
or
fisubs
add
mov
push
xor
mov
adc
rolb
addr16
add
or
inc
sub
fimuls
rclb
add
cmp
push
add
mov
cmc
pusha
or
push
imul
enter
outsl
push
mov
div
leave
mov
fsubrl
add
add
inc
add
push
push
cmp
jae
inc
push
mov
sub
inc
jno
add
fistpll
add
xchg
push
pop
jmp
mov
sub
push
xor
sbb
iret
and
dec
aam
sub
jecxz
cmpsb
add
data16
mov
cmp
mov
adc
aas
push
ds
add
inc
mov
xchg
add
push
xor
addr16
adc
cmp
filds
orl
int
inc
sbb
out
mov
add
ficompl
inc
or
push
jl
shrl
push
mov
inc
xor
xchg
fwait
add
int
jbe
jo
xchg
add
pop
jl
sbb
outsl
mov
and
lods
insl
flds
stc
push
inc
jecxz
aas
mov
pop
xor
aam
add
repz
les
pop
sbb
xchg
mov
addb
xchg
loop
adc
or
sbb
fwait
shl
push
in
jnp
add
sbbb
push
xchg
adc
inc
sub
adc
xchg
rorb
loop
insl
leave
xlat
es
and
mov
dec
mov
cmovnp
xchg
rcll
dec
jbe
adc
fisttps
fisubrl
out
add
and
ja
adc
cmovns
and
fwait
mov
mov
or
icebp
add
lret
sub
or
mov
bound
lret
add
das
xor
and
pop
jmp
outsb
mov
test
or
aam
xor
movsb
inc
adc
movb
repnz
add
mov
sti
and
mov
faddp
sarb
add
or
cmp
cmpb
mov
mov
xchg
les
adc
and
outsl
add
aas
jae
push
out
test
pop
push
xor
sbb
dec
ret
in
aad
pop
ljmp
sahf
mov
test
pop
sbb
test
xor
pop
test
outsb
mov
mov
xor
xchg
push
ror
or
jo
mov
lds
stc
pushf
int3
sbb
pop
mov
push
bound
inc
push
xchg
sbb
gs
call
adc
cmp
xchg
sbb
cmc
cmp
ds
inc
jns
pusha
repnz
rcr
add
ret
icebp
aas
inc
xchg
aam
adc
shrb
lds
add
out
sbb
cmc
add
jle
push
adc
and
jo
and
lcall
fimuls
mov
xchg
sbb
adcb
mov
add
cltd
mov
pop
push
lea
jmp
pop
pop
ret
mov
add
mov
cmp
sbb
or
or
adc
xchg
cmp
cmp
mov
jne
inc
and
out
notl
mov
jp
sub
push
cmp
mov
mov
mov
xor
mov
jge
pop
cwtl
xor
xchg
or
test
and
ds
cmc
fisubrs
out
add
inc
jbe
push
dec
inc
jnp
loopne
les
cmpsl
or
inc
mov
mov
icebp
repz
inc
mov
dec
cmp
sbbb
jecxz
enter
std
mov
or
jbe
lds
and
push
sahf
andl
lds
faddl
pop
movsl
imul
insb
add
sbb
xchg
xlat
jne
dec
into
inc
mov
cmp
pop
shlb
xor
jmp
enter
add
repz
popf
clc
lret
lahf
xor
push
add
aas
xlat
pop
lds
jbe
icebp
dec
lock
aam
aaa
subb
or
lcall
adc
das
and
xchg
int3
int3
sar
sbb
push
cmc
lods
mov
mov
xchg
push
mov
imul
jle
and
push
or
scas
dec
push
pop
adc
and
dec
add
imul
or
and
or
dec
or
scas
lret
movsl
fnstsw
gs
push
ret
int
add
sbb
or
sbb
or
adc
adc
mov
cmp
add
data16
in
add
dec
jmp
push
dec
push
mov
sub
push
add
adc
aad
ds
inc
call
add
sub
sete
lds
ljmp
in
pop
das
mov
shr
neg
call
add
neg
cli
or
sbb
add
add
fildll
or
shl
cli
cmpb
or
addb
inc
clc
push
pop
pop
sub
xchg
shlb
dec
add
sarl
addb
jg
add
push
gs
std
dec
addl
cwtl
call
rorb
ret
cwtl
rcr
js
push
add
into
xor
imul
mov
popf
mov
jmp
jne
movsb
cmp
jge
jmp
pusha
add
mov
dec
and
mov
aas
push
jmp
lds
dec
sub
repnz
pop
or
add
pop
movzwl
dec
call
or
insb
cmp
lret
add
stos
into
jl
je
testb
aam
sub
out
xor
in
and
pushl
aas
mov
add
hlt
jno
in
pop
mov
or
sbb
dec
pop
cmp
fidivrl
clc
xor
mov
jmp
and
sbb
out
push
cmc
push
insl
enter
call
add
fs
in
lea
add
mov
pop
je
les
out
lods
fbstp
dec
sbbl
cmpsb
mov
mov
ds
iret
add
xlat
bswap
mov
jmp
jnp
dec
notb
test
add
ret
push
or
aas
hlt
shr
and
cmp
fwait
push
pusha
push
lret
xlat
add
mov
add
std
shl
add
sbb
maskmovq
movl
ficomps
push
mov
xchg
sbbl
dec
xchg
int3
iret
mov
ds
mov
pushf
inc
push
add
arpl
in
pop
scas
and
lods
pusha
adc
push
pop
add
jl
sbb
cmp
cmpsb
or
mov
pop
sbbb
test
sub
int
addb
pop
cmp
pusha
orl
in
xchg
mov
cli
or
fstpl
inc
outsl
push
push
dec
sbb
testb
shrb
push
xchg
inc
adc
push
sbb
test
fs
add
dec
push
push
jecxz
jae
jns
and
pop
and
pusha
stc
mov
xchg
or
dec
andb
or
or
popf
not
or
sub
pop
inc
fadd
xchg
push
mov
nop
clc
push
mov
inc
add
jnp
xor
shl
inc
shr
fwait
ljmp
and
cmpsl
push
pop
pop
orl
mov
call
pop
pop
sub
jmp
fildll
aad
adc
xchg
xchg
out
out
popa
add
lret
push
sub
push
mov
loop
cli
subl
repnz
jns
aam
jbe
or
inc
call
inc
inc
or
xlat
pop
push
es
outsl
rclb
inc
dec
testl
xchg
and
cli
push
pop
pop
sub
loopne
shrb
xor
push
mov
xchg
les
inc
shlb
jge
stos
subb
inc
push
add
mov
inc
test
mov
fcmovnu
in
cmpsb
clc
or
ret
or
fcoms
in
cmpsb
stc
add
sbb
das
and
cli
stos
scas
mov
frstor
mov
push
adc
ljmp
out
xchg
cmp
adc
mov
pop
mov
jge
xor
rcr
mov
xchg
test
hlt
and
sbb
or
push
cmp
rorl
push
mov
xor
inc
mov
dec
movsb
cmp
pop
adcl
dec
inc
inc
dec
pop
or
das
dec
or
or
lret
and
or
in
or
push
enter
call
vpshaw
pop
pop
pop
sub
xchg
xchg
add
jmp
xor
in
les
enter
pop
std
or
mov
sub
popa
mov
pop
jbe
push
mov
in
push
add
fstl
mov
mov
rcrb
repnz
inc
stos
and
add
test
inc
add
mov
ds
mov
mov
out
pop
outsl
adc
sahf
lock
cmp
out
inc
loope
ja
fstpt
pop
pop
neg
inc
mov
cwtl
arpl
add
adc
xchg
jae
jae
cmpsb
out
fildl
int3
and
pusha
mov
das
not
test
std
dec
mov
push
jmp
inc
pop
inc
jg
or
add
test
cmpl
adc
xchg
shl
int
mov
or
xchg
lds
adc
inc
xchg
mov
mov
mov
scas
in
adc
cld
add
dec
icebp
into
push
adc
pop
dec
cs
shrl
xor
jl
add
xor
repz
testb
in
pop
fcmove
mov
lods
push
xchg
loope
insb
ss
inc
scas
or
jb
cltd
and
adc
jg
inc
imul
test
add
insb
inc
push
das
xor
and
inc
inc
push
fmuls
dec
mov
dec
gs
adc
add
dec
ret
and
dec
jnp
popl
xorl
cli
movsl
rcll
push
popa
fnstsw
ficomps
cmc
js
and
pop
arpl
das
lods
xchg
sti
jmp
sub
loop
push
mov
loope
push
inc
out
jbe
leave
mov
es
inc
sarb
xchg
inc
push
cmpsl
dec
inc
movsl
rorl
xor
std
addr16
aad
cmp
cld
add
pop
mov
mov
cli
fsubrs
and
out
add
fs
or
or
push
loopne
add
sbb
pop
xchg
and
cmpsl
addb
insb
aas
dec
jg
pusha
and
cwtl
in
cmc
pop
out
inc
and
adc
mov
fs
sub
das
popf
sub
popa
sbb
dec
xor
push
dec
dec
adcl
push
jo
mov
add
gs
inc
insl
mov
repnz
mov
mov
jge
dec
add
das
push
aam
cs
jmp
jg
or
dec
cmp
ror
jne
push
adc
sub
pusha
sbb
adc
shlb
cmp
xchg
mov
cs
mov
mov
xor
mov
mov
inc
add
sti
ds
rol
adc
pop
mov
nop
sti
sbb
jg
cmpsb
or
loope
test
sbb
mov
iret
dec
pop
adc
es
data16
mov
test
jmp
sub
inc
and
ret
sub
dec
mov
leave
out
lds
xor
dec
and
add
cmp
mov
imul
mov
cmc
lods
or
sub
stc
ljmp
loop
add
push
test
xor
add
js
inc
ja
push
popa
mov
add
jo
xchg
mov
aas
ret
push
adc
pop
push
pop
inc
nop
jmp
cmp
sti
movsb
cmp
cmpsl
frstor
retw
push
and
insb
pop
and
push
and
ret
cmp
mov
mov
dec
out
stos
adc
jb
mov
int
test
call
adcl
mov
cmp
add
dec
dec
add
cld
gs
adc
stos
adc
sbb
loope
dec
push
sub
adc
ja
dec
pop
into
cmpsl
dec
sbb
leave
jmp
out
lock
inc
xor
aam
mov
mov
mov
push
outsl
sbb
pop
rorb
fbld
repz
push
div
gs
movsl
mov
test
loope
imulb
sub
jmp
js
out
int
inc
and
hlt
xchg
mov
add
int
popa
jns
jecxz
data16
into
dec
jecxz
jmp
popf
mov
stc
aas
jns
inc
xor
pop
mov
jle
jb
dec
pop
scas
jmp
mov
mov
mov
lret
cmp
xchg
mov
mov
xor
dec
cmp
data16
test
cmp
push
jns
push
inc
cmp
and
lds
in
adc
xchg
les
adc
sbb
out
add
jae
cs
jo
cmp
lcall
push
pop
mov
jnp
fsub
pop
stc
outsb
ja
inc
out
gs
jecxz
test
pop
dec
push
add
pushf
jle
jo
jbe
dec
jnp
xor
push
bound
or
jmp
mov
cmpsl
fs
push
gs
ja
jo
and
xchg
lcall
jo
aaa
test
sub
call
in
call
and
lock
cli
cmp
nop
notb
iret
ja
push
mov
or
into
adc
or
es
out
leave
jle
cmp
and
mov
cmp
sbb
and
sub
fsub
fs
out
movsb
cmpsl
cs
mov
add
mov
scas
leave
stos
push
jmp
ret
aad
pusha
lock
test
sar
imul
or
inc
pusha
pop
lods
out
sub
or
mov
call
scas
xchg
cmp
in
int
ds
push
outsl
int
adc
dec
outsl
jb
aam
lock
or
pusha
dec
in
cmp
movsb
inc
pop
fdiv
pop
xor
mov
sub
dec
add
gs
jno
aad
jae
push
push
std
add
push
sbb
cmp
aas
mov
sahf
xor
mov
cli
loopne
mov
jmp
insl
pcmpeqb
popf
cmpb
cli
xor
aad
out
stos
xchg
les
add
pop
sbb
add
and
es
dec
les
mov
test
or
movsb
imul
gs
repnz
pop
testl
mov
xchg
mov
adc
sub
ss
sub
mov
cmp
fbstp
inc
fcmovnbe
jo
or
pop
ret
adc
mov
sbb
sub
mov
mov
outsb
mov
fstps
test
test
sti
pop
es
cmpsb
add
ds
or
and
inc
shll
enter
dec
stos
xchg
in
insb
sbb
cld
mov
adc
pushf
nop
pop
sbb
ret
xchg
pop
jb
hlt
lock
lock
insb
jae
js
and
and
mov
loope
mov
movsl
imul
jp
roll
dec
scas
cld
popa
sahf
pusha
xor
push
bound
mov
xor
mov
mov
sar
and
imul
sbb
mov
cmp
ret
jns
xor
imul
sbb
stc
inc
and
rolb
cmp
cmp
jb
ja
sub
int
int
imul
cmp
fwait
cmp
popa
sub
ds
xor
dec
pusha
pop
fstpl
leave
int3
pop
clc
cwtl
sub
xor
sub
lea
adc
dec
shll
jo
ret
movsb
dec
jg
leave
sub
sbb
stos
sbb
jg
in
dec
loop
loope
insl
out
repnz
sub
mov
sahf
pop
repz
fs
std
push
jecxz
cmp
mov
xlat
mov
test
jmp
adc
sahf
int
xor
in
rcr
loopne
jbe
int
or
lea
jecxz
decb
xchg
enter
data16
int3
popa
jmp
insb
pushf
mov
ret
imul
fs
push
inc
sub
xchg
jl
xchg
jg
aas
push
mov
leave
mov
and
push
ds
in
mov
lcall
shl
xchg
sarb
xor
sub
mov
cmp
mov
cmpsl
lcall
cmp
add
je
xchg
out
loope
psubsb
and
scas
popa
scas
mov
cmc
inc
mov
into
aas
jo
pop
aas
shll
dec
clc
push
sbb
cld
or
cmpsl
push
mov
cmp
hlt
leave
or
sub
pop
xor
nop
mov
jno
popf
movl
and
mov
xlat
push
test
addr16
push
iret
adc
jl
outsl
xchg
and
push
xor
ja
fwait
call
lcall
mov
sub
iret
jo
pusha
aad
xor
scas
dec
in
jmp
and
das
imul
sub
add
inc
jmp
in
pop
cmp
outsb
push
mov
cwtl
mov
mov
stos
repz
mov
inc
pop
mov
pop
ret
cmp
jg
cmp
dec
jle
adc
in
sbb
clc
push
ljmp
pop
loope
xor
out
cmp
gs
dec
or
push
push
mov
adc
jmp
xchg
cmp
inc
and
insb
aam
stc
pop
stos
and
lret
and
pop
lret
mov
mov
cmc
insb
add
pop
aad
sub
rcrl
inc
jbe
jne
nop
fidivl
aad
loop,pn
ficoms
es
sbb
into
mov
cltd
lock
or
mov
push
addr16
mov
and
mov
dec
cmp
push
cmp
jl
or
fsubrs
mov
ret
inc
mov
lcall
pop
xor
pop
ss
repz
pop
stc
pop
adc
sbb
sbb
mov
dec
xchg
in
add
cld
shr
sub
push
fisubs
cli
fdivl
ss
and
out
cmp
push
out
outsl
pop
js
jo
and
sub
ljmp
arpl
pop
adc
inc
loope
mov
jmp
insb
clc
push
shrl
fisttpll
daa
gs
pop
shll
inc
cmp
add
fsubrl
push
out
mov
out
fs
mov
and
jne
sub
and
jmp
push
jno
in
cmp
fwait
je
mov
lods
lahf
fimuls
and
das
outsb
mov
or
push
sti
sbb
mov
movsb
and
stc
shr
and
stc
insl
cmp
jb
gs
xchg
jne
shrb
mov
cmc
jl
in
in
dec
cmpsb
fimuls
stc
test
popa
ljmp
pop
xor
daa
bound
xlat
mov
mov
mov
in
and
dec
mov
cld
lock
lret
push
mov
fs
xor
movsb
test
adc
les
and
and
adc
sbb
sbb
mov
mov
sarb
insb
in
dec
jp
lock
inc
add
mov
mov
out
lcall
movsl
sbb
aad
pop
shll
cmp
out
mov
repz
pop
mov
xor
sub
aam
loop
fwait
jb
lea
lea
sub
into
jo
mov
mov
cs
sti
leave
push
popa
fimull
nop
sub
sub
ror
jno
popa
test
pop
bound
jae
mov
sub
rol
cwtl
data16
cmc
adc
jb
xor
pop
in
aam
shrl
pop
push
stos
lret
inc
arpl
mov
push
das
out
outsb
data16
jno
outsb
sbb
mov
inc
popa
clc
mov
add
mov
lods
mov
jnp
cs
sbb
test
repnz
jp
inc
sub
sub
and
lret
rorb
jno
cmpsl
push
cmp
pop
add
dec
ljmp
movsb
popf
or
pop
pop
adc
dec
sub
adc
mov
lock
je
out
test
sarb
fcmovu
repnz
dec
jl
xchg
push
sub
mov
xor
mov
cmp
lds
sbb
jo
popf
scas
mov
cmp
test
or
and
cmp
push
jnp
movsb
fs
cmp
and
and
repnz
cli
mov
fwait
popa
and
testl
mov
sbb
divl
in
aam
insb
dec
pop
scas
mov
ret
lret
pcmpeqd
clc
push
imul
iret
ss
sbb
movsl
scas
dec
push
jo
inc
mov
and
loopne
or
adc
loope
cmpsl
xor
push
clc
lret
loop
add
outsb
loop
mulb
xor
fdivrs
sarb
aas
dec
into
jmp
or
add
ret
jge
add
andl
pop
sub
movsb
inc
or
or
loop
pop
mov
mov
jno
mov
mov
fwait
adc
pop
popf
mov
jne
imul
sbb
sbb
clc
cmp
cmp
lret
sub
in
push
cmp
sbb
aam
jns
test
and
ss
push
add
or
repnz
repnz
xor
ret
outsb
test
pop
outsl
pushf
push
xchg
int3
subl
xchg
inc
dec
lods
pop
sbb
cld
mov
jmp
es
cltd
xor
outsl
cli
imul
push
into
stos
adc
sbb
or
sbb
js
ja
xchg
jne
sahf
jae
cmp
rorb
rol
ss
dec
dec
inc
movsb
inc
xchg
aaa
popa
lock
insl
xor
adc
mov
mov
rolb
dec
ficoml
stos
adc
std
and
sahf
xor
jne
xor
pop
lahf
xor
push
das
ss
aad
sahf
inc
jge
je
sub
sub
push
in
cmp
daa
dec
jo
shll
repnz
stc
cmp
fldt
inc
adc
xorb
sub
jecxz
std
lods
insl
rcrl
dec
stc
pop
fucomp
cmp
test
jno
or
fildl
iret
je
jg
imul
push
inc
loopne
pop
add
pop
lods
cmp
hlt
testl
push
jmp
xlat
jmp
push
add
ljmp
fbld
and
int3
std
mov
fidivs
lcall
mov
pop
push
pop
jle
add
pop
inc
scas
test
out
mov
mov
jo
sub
cmpsl
push
insl
aaa
ror
mov
inc
mov
loopne
outsb
pop
and
mov
je
scas
int3
mov
mov
lahf
imul
lret
xor
inc
out
jns
add
push
xchg
cmp
add
imulb
inc
inc
insb
add
lods
and
in
cmp
ret
stos
push
cmp
pusha
push
xchg
mov
or
outsl
add
cld
push
or
enter
jl
add
jl
int3
jne
jno
ss
sbb
mov
jb
xchg
xchg
outsb
mov
push
rcr
jge
pop
insl
add
cmp
sub
inc
xchg
cmp
inc
addr16
and
mov
ret
xor
and
pusha
test
adc
push
xor
adc
sti
jnp
fs
in
fnstenv
mov
add
xchg
pop
adc
cmp
or
mov
pop
lods
lock
pop
stc
dec
fcoms
mov
mov
test
xor
data16
fcmovnu
add
xor
dec
ficompl
and
sub
or
lret
or
mov
sbb
xor
call
repz
std
or
mov
add
lret
cmp
push
sub
mov
cmpsl
pop
shlb
adc
cmp
int3
jae
imul
xor
pop
or
in
fbld
fs
aas
and
push
jb
int
mov
jne
lds
pop
stc
dec
lods
repz
push
subb
push
ljmp
mov
std
push
iret
xchg
inc
cli
xchg
repz
test
or
pop
mov
sbb
push
inc
push
sub
bound
ja
and
dec
xor
cmpb
lods
xor
lahf
sub
push
enter
sbb
gs
push
repnz
mov
inc
jl
jbe
or
cmpb
jne
not
divb
push
jo
ret
cmc
push
cs
in
mov
dec
jle
cmp
inc
test
in
inc
or
stc
adc
pop
loope
mov
and
popf
pusha
out
xor
lahf
icebp
out
jbe
xor
leave
lcall
mov
inc
and
and
sbb
lahf
jecxz
or
pop
movsb
push
cmp
push
and
repnz
popf
mov
jg
mov
dec
mov
sbb
popa
jne
mov
sti
dec
pushf
adc
cmp
enter
or
sub
lea
mov
pop
mov
xchg
scas
cmpsl
in
or
je
nop
dec
mov
fiaddl
cmpsl
andl
lods
fstl
nop
mov
out
icebp
in
jnp
push
mov
jecxz
xchg
cmp
mov
pop
sbb
decb
adc
jae
mov
icebp
mov
movsl
xor
rolb
lds
push
out
repz
xchg
loop
push
inc
sub
xor
imul
sub
aaa
adc
or
or
push
push
out
dec
loope
idivb
jle
lock
outsb
or
mov
shll
imul
pop
pop
arpl
mov
inc
dec
inc
push
js
lcall
lret
insl
pusha
and
scas
mov
inc
cmpsl
mov
and
enter
js
movsl
insb
add
xchg
xor
or
or
jb
push
dec
leave
rclb
inc
adc
out
adc
jp
lcall
push
mov
and
inc
xor
or
jle
push
daa
jne
and
es
sub
pop
pop
andl
gs
or
jl
sub
push
or
mov
fwait
bound
jge
mov
push
imul
or
loope
out
push
mov
cmpsb
pop
shlb
inc
and
in
repnz
xor
jne
push
stc
leave
mov
pop
call
pop
push
cmpsb
hlt
cmp
std
sub
bnd
pop
adc
push
push
mov
lds
mov
sub
js
movsl
movhps
shr
stc
adc
lods
jno
mov
inc
pop
sub
enter
or
imul
testl
or
push
sub
cmp
add
lret
adc
push
fisubl
cmp
mov
sbb
and
popa
fnstcw
cld
arpl
fisttpll
jmp
or
insl
cltd
loope
iret
gs
repz
cmp
xor
jmp
mov
xchg
sahf
sbb
pusha
adc
movd
add
ret
lds
outsl
add
xchg
dec
xor
cmp
and
testb
xor
mov
shrb
add
popf
enter
dec
add
jnp
pop
popa
pop
lea
jns
jge
adc
fs
jp
jmp
call
or
in
pop
mov
pop
loop
sbb
dec
fnsave
int3
shrb
pusha
cmp
out
dec
jp
jb
mov
inc
xchg
fisubs
jmp
mov
mov
xchg
test
lock
fwait
add
jmp
push
imul
sub
jne
std
cs
repz
lods
push
mov
je
ret
push
cmpb
dec
gs
movsl
dec
or
dec
jmp
shrb
mov
es
xor
daa
hlt
dec
pop
mov
js
xor
and
cmp
je
cmp
push
in
jecxz
inc
or
pop
aaa
jae
adc
cmp
and
sub
cmp
mov
xchg
imul
leave
jno
or
pop
divl
or
jns
aam
cmp
mov
inc
push
lds
dec
xor
xor
and
jmp
sub
lods
rcrl
inc
push
cmp
movsb
mov
cmp
fidivrs
mov
jmp
mov
push
pop
pop
jmp
mov
test
std
cmpsl
push
and
push
pop
ds
pop
sbb
int3
xchg
popa
pop
dec
mov
aas
out
push
push
xor
les
add
stos
xorl
mov
loopne
cmp
dec
into
mov
imul
add
mov
xchg
jp
mov
adc
jmp
mov
stc
movsl
sub
jno
arpl
ljmp
out
test
arpl
and
int
add
or
pop
mov
arpl
call
jp
mov
ret
cmp
sbb
cs
fisubl
and
push
stos
ja
aad
push
ret
in
jmp
jno
outsb
stos
xchg
dec
sub
push
fidivrl
mov
call
pop
mov
shll
js
sbb
lret
push
cmp
push
push
pop
mov
adc
ljmp
dec
in
js
jecxz
mov
push
call
pusha
adc
add
jne
ret
in
xor
pop
jbe
mov
add
sbb
addr16
jno
pop
stos
sbb
push
pop
mov
mov
bound
pop
mov
mov
rorl
insl
push
mov
lret
dec
cltd
cmp
dec
outsb
cmp
aas
cmp
sub
or
outsb
jecxz
mov
outsb
sti
or
aad
add
add
test
xor
cmp
and
jl
push
add
fdivrs
pusha
cmp
push
lods
pop
jle
jne
cmpl
cmp
in
aad
in
or
fidivrs
js
add
pop
and
or
inc
or
addb
inc
and
in
out
sbb
xchg
sbb
sub
push
inc
inc
jp
and
pop
xchg
mov
mov
or
push
mov
push
lret
mov
stos
or
pop
fdivrl
outsb
jmp
inc
sub
inc
out
push
mov
jle
jbe
cs
jne
mov
mov
mov
pop
sub
ret
sub
and
enter
in
push
popa
in
inc
sbb
shrl
xor
add
push
je
out
mov
data16
jp
push
in
dec
pop
divb
xlat
mov
dec
pop
jge
xchg
dec
jl
movsb
mov
xchg
mov
addr16
inc
es
dec
insl
stc
push
sub
in
dec
es
dec
push
loopne
xor
shr
push
xchg
jno
jb
mov
push
push
jp
daa
and
mov
pop
ss
dec
pop
adc
xor
in
xor
adc
cli
mov
cli
jns
loop
pop
push
test
cmpsb
and
dec
push
lods
loop
mov
imul
and
ljmp
jp
test
fs
test
mov
push
sub
scas
adc
sub
fnsave
sbb
sub
adc
fdivl
test
xor
cmp
or
add
inc
push
ret
sub
mov
call
adcl
jecxz
out
lea
push
pop
outsb
dec
lret
mov
push
call
adc
sahf
pop
popf
pop
xchg
push
or
ljmp
sbb
call
fucomp
fldpi
in
int
cmp
xchg
xchg
sbb
add
inc
rclb
inc
adc
fnstenv
cs
in
inc
ds
inc
or
or
jae
mov
cmp
push
lret
aaa
daa
adc
ja
fsubrs
mov
fsubl
repz
je
into
in
ret
inc
gs
mov
subb
ljmp
mov
xor
push
sub
xchg
sub
pop
mov
push
int3
and
nop
lret
pop
sti
gs
jne
xchg
jge
pop
repnz
je
push
sub
cltd
mov
loope,pt
inc
cltd
js
push
inc
push
pop
out
jb
xchg
mov
scas
movsl
mov
add
outsl
roll
inc
mov
cmp
imul
test
push
movsl
insl
test
cmp
mov
daa
dec
sbb
movsb
mov
inc
push
test
lcall
repnz
sub
roll
sahf
repz
mov
push
lods
push
fwait
cmp
pusha
icebp
push
test
jmp
jae
cmpsl
dec
mov
in
lea
jne
or
jecxz
loopne
cwtl
mov
stos
xchg
and
mov
add
mov
idivl
js
sahf
jmp
mov
mov
dec
je
adc
enter
imul
and
sub
insb
and
adc
gs
inc
gs
xor
fsubrl
mov
mov
andl
negb
cmpsl
push
xor
ss
ret
or
jo
lahf
xor
jae
cld
fdivs
jl
scas
fnsave
push
adc
mov
repnz
sbb
sub
push
popa
and
and
push
jmp
dec
push
mov
leave
test
mov
fisttpl
cli
icebp
lods
pusha
dec
inc
jnp
inc
xor
dec
push
jbe
sub
sub
cmpsl
mov
stos
aas
dec
inc
sbb
push
popa
push
jl
jnp
ja
dec
roll
jb
inc
add
lds
ret
pusha
repnz
aas
xchg
dec
jge
jo
mov
popa
xchg
and
js
repnz
mov
cmp
lock
lret
jbe
data16
mov
addl
adc
dec
insl
lods
dec
mov
mov
push
ds
mov
out
popl
call
jno
jl
sub
movsl
pop
cmpsb
fbstp
stc
sub
ljmp
pop
xorl
dec
flds
dec
cmp
push
popa
out
idivl
mov
aas
andl
push
xchg
jmp
shll
cmp
push
out
nop
outsb
add
mov
movsb
inc
xor
mov
jge
imul
outsb
adc
jge
sbb
push
mov
in
je
clc
dec
inc
xor
adcl
xchg
lock
vpsubsw
dec
or
or
mov
sub
mov
adc
inc
fucomi
fisubrl
lds
sbb
pop
rol
in
xchg
inc
testl
stos
or
jno
push
ljmp
ss
popa
and
cmpsb
sbb
cltd
mov
nop
cmpsb
int3
dec
stc
xchg
jmp
push
inc
cmc
dec
jge
sub
cmp
pop
ret
cmc
and
dec
ljmp
test
scas
mov
popa
pop
pop
test
xchg
sbb
outsb
ret
add
out
lahf
pop
lret
inc
jnp
jo
fcmovbe
xor
andl
mov
xor
stos
das
add
lods
inc
mov
fsubl
pusha
jo
fdivs
in
sub
cmc
mov
jno
xchg
adc
cmp
add
ret
pop
jmp
aas
ja
leave
out
xor
iret
adc
cmp
sub
mov
adc
add
adc
test
push
pop
repz
add
push
call
push
loopne
stos
aam
sub
push
lret
jge
daa
adc
mov
lcall
push
add
aad
xor
add
sbb
fdivrs
fisubrs
mov
fstpt
inc
ret
pushf
jno
mov
mov
icebp
arpl
popa
mov
add
loope
leave
inc
stos
mov
mov
jecxz
mov
and
xchg
pusha
iret
xorl
incb
movsl
mov
push
add
mov
in
fbld
cmp
shrb
hlt
std
or
inc
xor
pop
lea
mov
shlb
pusha
cld
dec
jle
shll
mov
mov
or
pop
call
movsb
addb
out
lea
fs
mov
es
jnp
sbb
dec
jge
mov
faddl
inc
inc
or
test
adc
cli
push
jl
std
push
inc
xor
push
push
xor
push
das
cmp
loopne
js
repz
mov
ljmp
sbb
dec
push
std
push
sub
cmpsl
push
push
movsb
dec
mov
movsl
bound
cli
dec
ds
jo
jno
mov
aam
in
add
sub
add
ljmp
fsub
cmp
push
cs
pop
and
xor
mov
stos
or
adc
lret
mov
jb
js
lds
stos
scas
ja
adc
xor
and
pop
out
inc
repz
movsl
ljmp
inc
sub
aaa
mov
les
imul
sub
out
mov
jb
ret
mov
aaa
mov
inc
jle
inc
mov
mov
sarw
xor
loopne
push
or
cmpsl
imul
js
jbe
cmc
mov
push
enter
and
rcrl
repz
or
rcll
lea
dec
push
mov
dec
out
imull
out
pusha
mov
sarl
and
push
pop
and
inc
xor
push
pop
sti
fildl
inc
pop
jae
jns
in
lods
inc
xor
lods
mov
mov
or
movsb
loopne
push
or
pop
cmp
addr16
roll
push
cs
add
or
pusha
js
popf
sub
push
push
push
add
pop
pop
mov
or
push
pop
inc
test
xchg
sub
dec
jbe
ljmp
xor
andl
arpl
insl
fisubrs
push
add
mov
repz
fdivrs
pop
xchg
pusha
push
push
bound
pop
pop
push
loope,pt
push
fcomps
ss
loope
mov
or
scas
lock
pop
sub
push
arpl
mov
sub
sbb
ds
and
cmpsl
outsb
lock
repz
push
fwait
stc
jbe
lret
js
add
int3
js
cmp
fcomps
vpsrad
push
popa
cmp
and
mov
fmulp
push
in
dec
ja
arpl
cmp
sub
or
cmp
stos
cs
or
pop
loope
adc
xchg
in
into
xor
mov
je
push
or
push
xor
clc
xor
cmc
aad
mov
bnd
push
xchg
mov
fbstp
jp
jnp
loopne
call
aad
xor
lock
sbb
jo
sub
pop
sub
mov
xchg
jg
and
lret
aam
add
stos
cmp
mov
push
mov
add
jnp
xchg
ljmp
dec
jmp
lods
js
mov
sub
frstor
int
sbb
popf
and
xchg
jl
mov
sti
ret
or
cmpsl
mov
lcall
cmp
lds
insb
add
sbb
stos
pop
movsb
mov
or
push
je
pop
xor
in
mov
hlt
addr16
fdecstp
sbb
push
int3
inc
call
dec
jb
lcall
inc
data16
clc
pop
sub
outsb
lahf
push
push
or
aad
inc
shl
xor
lcall
insb
sub
mov
adc
jge
insl
cmpsb
jecxz
push
imul
or
sbb
arpl
push
add
cmpsl
popa
imul
jmp
xchg
sti
dec
outsb
neg
test
aas
lea
outsl
jbe
scas
cmovbe
bound
sbb
pop
sbb
mov
setno
or
jno
pop
into
and
or
pop
cmp
mov
imull
sub
ror
sahf
jno
cmpsl
clc
rcrl
into
sbb
outsb
in
inc
cmp
cmp
add
jge
push
dec
setbe
and
mov
sti
dec
ljmp
jge
pop
stc
aas
jnp
xorb
loop
lods
cmp
cltd
sub
xchg
rol
int
cmp
aad
mov
mov
jg
in
jmp
jmp
les
insb
fbstp
roll
ja
sbb
dec
sbb
mov
shl
adc
scas
ljmp
popf
sub
cmp
xchg
int3
pop
add
jl
xor
jns
lret
cmp
neg
mov
mov
arpl
sub
push
pop
adc
xor
data16
repnz
and
inc
std
mov
ret
add
jle
lahf
mov
add
sbb
ret
scas
shlb
repz
imul
mov
jns
jg
jns
inc
dec
sbb
add
lret
gs
test
mov
test
mov
mov
cld
mov
push
xlat
call
pop
lahf
orb
in
jle
dec
mov
push
gs
and
inc
mov
pop
sub
gs
movsb
adc
or
xor
or
sbb
cltd
cld
lock
dec
jne
lahf
cmp
or
stos
jo
push
shrb
outsb
in
pop
mov
lret
leave
rclb
std
inc
pop
mov
daa
mov
and
cmp
inc
inc
in
aaa
xor
inc
in
stc
adc
outsb
rcrl
das
gs
add
add
cli
ret
cli
xchg
xchg
scas
rcrl
or
xchg
mov
mov
mov
hlt
push
add
and
mov
pop
cmp
adc
jnp
add
sub
dec
sub
mov
sbb
arpl
pop
mov
and
insl
jmp
lret
mov
mov
sbb
mov
xchg
push
notl
push
mov
push
pop
mov
pop
or
dec
subl
cmc
mov
adcl
mov
or
popf
or
shll
xchg
push
ds
enter
add
mov
rcr
mov
icebp
and
loope
inc
pusha
dec
aas
into
adc
cmp
jmp
push
inc
test
aam
ljmp
cli
adc
mov
jbe
hlt
jne
pop
std
test
mov
jge
gs
sub
lret
aad
inc
push
inc
pop
ret
mov
ret
lret
test
aad
pop
push
xchg
xor
sub
push
inc
sub
testl
add
jmp
sahf
and
jno
push
pop
cmp
or
cmp
dec
mov
clc
fiadds
xor
adc
arpl
ror
sub
pop
and
mov
sbb
call
xor
push
fisubrl
lods
mulb
movsb
add
jb
push
imul
imul
add
push
or
xchg
insl
pop
mov
outsb
pop
in
insb
push
js
add
shll
jecxz
sbb
bound
arpl
faddl
dec
add
cltd
scas
or
cmpsl
push
pusha
inc
jl
sarl
lcall
dec
insl
enter
out
hlt
inc
lock
dec
movsl
repz
iret
pop
xchg
pop
jp
jns
push
outsl
and
lods
jno
ds
into
test
push
popf
cmp
and
cs
les
inc
scas
xchg
inc
out
pop
popa
push
aas
push
sub
je
jb
imul
pop
fcompl
ljmp
and
cmc
pop
mov
les
into
iret
sbb
cmp
sbb
das
fdivs
jle
jl
std
or
mov
jno
and
ss
mov
hlt
push
imul
rcll
add
add
adc
leave
sarb
outsb
cmp
cmpsl
xchg
jns
out
dec
sahf
pop
mov
cs
sbb
insl
sarl
push
cmp
push
and
fidivrs
jnp
mov
ret
std
in
lods
xor
divl
inc
in
insb
cs
bound
movsl
pop
out
jmp
inc
dec
cmp
or
into
mov
sub
in
push
lods
sbbb
cmp
enter
cs
jl
pop
add
cli
sub
adc
push
xchg
idivl
and
sbb
mov
xor
fistpl
push
sbb
xchg
jne
das
adc
data16
pop
out
fs
sub
mov
and
sbb
cmp
or
nop
add
cmp
popa
orl
in
inc
and
add
xchg
and
stos
int
nop
adc
enter
fs
shl
movsb
jae
mov
out
pushf
xchg
add
in
imul
push
hlt
mov
push
fmul
cltd
jg
lret
in
repz
faddl
mov
les
mov
sbb
sbb
lcall
hlt
and
or
shl
mov
push
andb
imul
push
sarb
js
jo
aad
sub
pusha
push
dec
jle
jae
insl
cmp
ds
pop
out
into
ljmp
mov
and
adc
mov
stc
mov
jle
jg
xchg
or
fstl
pop
or
xor
shlb
repz
lret
pop
int3
in
stos
in
outsb
push
inc
mov
shlb
outsb
sbb
test
adc
push
mov
mov
inc
cld
pusha
lcall
enter
jg
mov
loope
test
pop
xor
xor
rorb
xchg
addl
outsb
cmp
test
adc
shll
dec
mov
pusha
hlt
stos
nop
adc
lock
jg
fmull
dec
ffree
xor
out
and
ss
pop
xchg
jp
popa
out
push
test
negl
es
xor
aas
mov
pop
jp
xchg
imulb
mov
cmpl
sub
mov
inc
andl
or
dec
nop
cmp
jb
jne
hlt
jg
xor
inc
daa
data16
push
sub
sbb
lods
movsl
leave
imul
add
mov
or
dec
rclb
pop
dec
and
jno
and
or
imul
push
xchg
mov
xchg
cmpsb
jno
or
int
push
jo
leave
and
cmpsl
stos
and
dec
and
mov
adc
loope
test
inc
rcl
mov
and
dec
or
or
dec
mov
dec
ja
dec
jle
sbb
jno
cwtl
jmp
and
and
ja
test
int
es
cmpl
add
lcall
in
push
int
mov
jge
out
xchg
pop
popa
je
jno
outsl
pop
jno
adc
popa
xchg
add
mov
popa
icebp
cmp
cmp
push
cmp
add
cwtl
ja
test
inc
xchg
jl
sub
jo
fdivl
xchg
jns
add
sbb
inc
add
out
pop
adc
mov
inc
fistps
clc
lock
lahf
and
push
mov
sbb
imul
je
cld
or
inc
dec
or
mov
or
and
nopl
jne
pop
daa
push
adc
fisubl
mov
mov
insb
popa
cmp
xor
repnz
std
pop
pop
mov
mov
xor
das
or
jo
repnz
lods
mov
insb
or
jb
push
xchg
jbe
js
pop
or
cmpsb
pop
xor
in
inc
xchg
add
and
jo
fidivs
jecxz
inc
jmp
sub
stos
jle
sub
push
in
adc
int
sbb
ds
pop
icebp
dec
mov
sti
out
lcall
jne
in
lds
sbb
lds
sahf
jge
fstpl
mov
mov
sub
popa
pop
js
inc
cmpsb
sub
xchg
inc
xor
sub
outsl
popf
adc
inc
adc
push
popf
sub
sub
mov
mulb
mov
stc
sti
movsb
sub
arpl
fwait
push
mov
sbb
push
fstpl
jnp
inc
stos
push
pop
or
pop
out
cmc
and
rolb
jb
mov
pusha
cmp
jns
test
cmpsl
push
addb
jmp
js,pn
mov
push
jl
imul
xor
inc
dec
mov
add
testl
xchg
fmuls
mov
pop
repnz
jb
jns
xor
mulb
inc
jecxz
pop
arpl
and
push
sub
cmpsl
popa
mov
test
daa
adc
or
fbstp
inc
adc
rol
fsubrp
push
dec
sbb
andl
mov
ljmp
les
loope
test
movsl
mov
cmp
jbe
push
fbld
mov
mov
and
mov
xchg
push
or
sub
pop
ret
dec
push
cmc
and
imull
outsb
push
adc
inc
push
fs
sub
cld
pop
adc
pop
hlt
xor
adc
pop
mov
js
or
add
imul
js
push
test
dec
ret
inc
mov
mov
test
aam
ja
call
jecxz
and
push
pop
sub
test
xchg
loop
mov
push
popa
push
cmp
insl
ljmp
push
jecxz
or
jmp
movsb
lahf
sub
arpl
nopl
mov
hlt
ja
lock
cmpsl
shll
aas
int
insb
push
pop
lret
jo
mov
mov
loop
int
push
repnz
aas
bound
pop
mov
jp
fimull
push
mov
test
xor
mov
loopne
divl
add
add
pop
cmpb
aaa
cmc
cltd
cmc
shl
sbb
pop
cmpb
mov
dec
sub
aad
dec
in
lods
jbe
int
cmpsb
cli
sub
call
js
mov
pop
jecxz
aaa
nop
aam
inc
inc
xor
push
push
imul
sbb
in
popf
xchg
mov
and
push
pop
mov
add
xorb
add
cs
mov
mov
fbstp
and
jecxz
arpl
jecxz
pop
loope
xchg
mov
movsb
into
leave
xchg
pop
mov
jecxz
arpl
sbb
or
pop
sahf
leave
sbb
sub
jl
xchg
ficomps
mov
pop
mov
pop
decb
fs
and
or
daa
std
pop
out
sahf
loopne
mov
loope
jg
sub
adc
cmc
or
fwait
aad
adc
jo
and
adc
sub
mov
xor
xor
jecxz
popa
pop
lock
add
inc
fmull
mov
movsb
es
cld
decb
into
insl
stos
and
jo
add
mov
or
mov
xchg
maxps
addb
push
mov
dec
sub
add
mov
or
inc
enter
sbb
popl
cmp
mov
cmp
lea
stc
dec
dec
and
xchg
js
idivl
dec
push
adc
sbb
lock
dec
pop
call
cmpsb
les
pop
xchg
insl
das
adc
mov
sub
insb
add
xlat
jle
sti
adc
cmpsb
inc
push
test
and
xor
and
loopne
fs
dec
insl
cmp
out
sbb
jecxz
jl
ds
outsb
lret
popf
fldt
inc
arpl
rcll
mov
out
cmp
fs
icebp
dec
pop
loopne
arpl
bound
sub
push
lock
dec
jle
int
cmp
jecxz
ds
mov
lds
int
mov
js
mov
or
and
jmp
insl
dec
std
es
lret
and
fstpl
xlat
mov
pop
dec
add
test
inc
sub
ret
pop
lods
jno
mov
pop
sar
inc
xchg
pop
sbb
and
cmp
ss
adc
pop
pop
sub
mov
jg
dec
dec
imul
jnp
inc
mov
rorl
test
fdivrl
sub
nop
into
frstor
adc
in
imulb
sarl
enter
adc
push
pop
aad
dec
cmc
nop
cmp
jo
daa
int3
popa
mov
jge
test
sti
ret
test
cmc
dec
mov
test
in
sub
cltd
rcr
enter
jbe
mov
push
adc
xor
mov
push
xlat
cmp
dec
test
inc
push
pop
int3
lret
pop
pop
and
lcall
mov
imul
xor
pop
popf
lock
outsb
pop
jmp
push
aaa
pop
movsl
leave
test
jo
mov
or
push
ds
das
mov
bound
popa
adc
clc
lds
xchg
push
stos
and
fst
or
jmp
aaa
sbb
dec
mov
arpl
push
add
loopne
ret
movsb
push
outsl
stos
lahf
aaa
xchg
in
jmp
sbb
in
mov
jl
aad
sub
cmp
pop
fmuls
sbb
into
imul
push
and
sbb
call
pop
cmp
sbbl
xlat
jp
add
lcall
out
push
call
loope
lock
or
fstps
pop
sub
cmp
push
icebp
pop
stos
ret
sbb
cmpb
repnz
pop
shlb
call
cmp
mov
push
cli
push
dec
sub
icebp
sbbl
jae
and
add
and
imul
mov
shll
nop
rcl
sub
jbe
or
mov
push
mov
insb
sahf
lock
pusha
mov
in
mov
push
push
cs
pop
mov
pop
imul
dec
jecxz
cs
xchg
fs
sbb
sti
mov
adc
cmp
gs
adc
or
pop
loopne
sub
iret
lcall
pop
xor
fucomi
fcmovnbe
or
es
lea
lret
push
add
adc
ljmp
daa
and
mov
pop
jg
fnstcw
and
jne,pn
hlt
orb
cmpsb
cs
or
mov
mov
mov
enter
popf
mov
fdivr
cmpsl
cmp
inc
mov
inc
jne
cltd
stos
mov
ret
mov
adc
xchg
pop
cmovb
clc
or
popa
fs
push
sbb
rcrb
ret
inc
jbe
add
mov
ja
push
mov
push
inc
jae
movsb
mov
push
insb
iret
cli
push
das
iret
scas
cld
jne
mov
pop
push
pop
into
mov
daa
jl
rolb
repz
pop
xchg
enter
sbb
mov
jbe
jmp
push
cltd
fdivrl
xchg
pop
fidivs
mov
inc
mov
ljmp
mov
pusha
into
decb
adc
into
lcall
gs
fs
xchg
or
add
lret
in
daa
push
test
xchg
fnstenv
push
ss
mov
aas
jno
add
ret
int3
aam
pop
data16
xchg
mov
or
pop
imul
cmp
dec
adc
sbb
arpl
and
test
aad
fdivl
adc
xor
xchg
lods
jmp
inc
add
mov
xlat
cmpsl
dec
ss
addr16
lods
pop
jecxz
lock
and
cmp
dec
add
inc
xor
jne
jle
push
outsb
aas
dec
int
jmp
push
lahf
sub
and
sbb
test
inc
stc
sub
insl
cmp
and
pop
inc
popa
and
cld
push
in
jo
pop
pushl
cmp
cmp
xchg
cli
das
std
mov
mov
xor
mov
push
jmp
add
test
jnp
pop
mov
xchg
jle
sub
and
mov
cmp
les
and
popa
or
out
adc
dec
inc
inc
call
mov
inc
rcll
addr16
mov
lcall
lds
imul
jmp
and
daa
jecxz
addr16
insl
addr16
mov
ret
mov
dec
push
and
sub
push
xchg
cmp
jno
push
es
mov
call
cmpsl
mov
outsl
insl
outsb
sub
imul
outsb
cmp
outsb
jo
fidivs
fiaddl
add
or
loopne
std
xor
sti
je
mov
les
sar
fsubl
inc
inc
call
test
pop
js
fs
lds
jbe
jl
outsb
shr
adc
incl
jo
scas
out
cmpsl
mov
fnstsw
ljmp
ljmp
and
insb
fstpt
add
dec
mov
gs
cmp
add
push
jg
gs
pop
lret
popf
pop
lahf
loop
jno
hlt
and
add
cmp
fsubrl
in
adc
cmp
iret
aad
out
xor
pop
mov
jmp
int
mov
mov
cmp
xchg
mov
jae
popa
pop
imul
or
xor
mov
dec
popf
bound
mov
or
loope
in
and
lea
fstpl
fmul
lods
sbb
jno
sbb
int
leave
mov
fists
pop
insb
adc
mov
mov
sub
cmp
and
aaa
stc
mov
mov
lods
xchg
xchg
dec
adc
imul
jmp
repnz
push
testb
add
pop
adc
inc
sub
cmp
aas
inc
test
aaa
imul
jno
pop
pop
sbb
jbe
xchg
mov
add
sub
aam
jnp
in
push
fmuls
enter
nop
jmp
les
sub
add
push
clc
bound
cmp
add
mov
inc
mov
jne
dec
mov
out
ljmp
xchg
push
and
pop
adc
fld
imul
or
jecxz
inc
cli
pusha
leave
cld
aas
nop
pusha
hlt
call
inc
addr16
sbb
rorl
dec
sub
sub
in
and
aas
or
repnz
add
xor
or
add
or
leave
or
out
mov
ss
sub
or
pop
or
jp
insl
lods
cmpsb
arpl
jl
jno
fadds
jns
test
orl
sbb
pop
lods
sub
movsb
mov
xor
mov
xorb
mov
cs
cmp
adc
rcl
fcoms
sbb
fs
dec
cmp
call
ficomps
xor
subb
dec
add
ljmp
xchg
fbstp
or
repnz
out
gs
sbb
mov
jne
out
push
mov
cltd
loope
popa
dec
sub
les
jne
imul
sbb
repnz
inc
and
aas
mov
adc
sub
mov
push
aad
test
mov
pushf
pop
xchg
pop
sub
xor
dec
add
lods
add
fldl
pusha
pusha
jp
sti
mov
mov
push
jp
mov
cmp
fidivrl
rorb
int
movl
cwtl
xchg
or
push
lds
jnp
divl
push
sub
inc
ds
inc
into
cs
test
rcll
fdivrl
cmc
push
dec
into
leave
dec
mov
iret
xchg
leave
je
inc
popf
pop
loope
outsb
mov
or
jecxz
test
sbb
push
sbb
and
pop
xor
xchg
test
and
imul
fildll
jo
rcll
repz
push
jo
xor
push
pop
push
sbb
mov
ljmp
fisttpll
jo
dec
lds
push
sti
pop
pop
xchg
daa
pop
popa
xchg
jg
icebp
fisttpl
ds
hlt
call
mov
popa
mov
sub
fldl
inc
in
cmpsl
mov
and
xor
dec
mov
sahf
pop
das
nop
in
ja
pop
popf
inc
ja
fmul
and
fwait
xchg
jbe
std
lds
or
arpl
add
push
stos
cwtl
mov
dec
cmp
or
xchg
xchg
int3
cmp
push
and
jns
in
jmp
sti
sbb
arpl
pop
mov
mov
sbb
or
aam
wbinvd
gs
mov
and
mov
sarl
mov
jmp
dec
mov
push
mov
test
es
adc
leave
or
cmpsl
push
sub
lods
fstps
pop
adc
jg
mov
sub
rorb
stc
mov
pop
lahf
ljmp
addr16
scas
sbb
jb
sub
ljmp
pusha
xchg
push
data16
and
inc
pop
or
sahf
psrlw
push
pop
insl
test
aaa
fstl
mov
in
pop
outsl
xchg
sub
and
and
mov
fcomps
inc
pop
xchg
lcall
dec
fistpl
popa
push
cmc
inc
aam
sub
push
test
in
jp
sub
dec
cmp
jge
add
flds
inc
dec
shlb
push
insl
ja
push
outsl
push
adc
sbb
lret
mov
cmp
inc
imul
jl
das
dec
push
ss
pop
mov
in
sub
test
lods
and
test
xchg
insb
xlat
sti
pusha
mov
sub
sub
jo
add
jnp
fwait
mov
sub
data16
pushl
loopne
xlat
xchg
hlt
and
mov
mov
dec
inc
push
add
imul
or
scas
jns
shll
popa
add
int
data16
jl
inc
pop
pop
inc
bnd
xchg
push
fsubl
sub
fwait
dec
dec
in
adc
mov
jecxz
cmp
push
pop
sar
mov
mov
in
pop
and
fists
insl
test
cmp
test
loopne
mov
ret
imul
outsb
add
mov
ss
and
sub
es
push
pusha
sbb
push
push
or
jl
aad
sub
in
cltd
aam
ja
push
and
roll
aam
xor
inc
shrl
push
mov
lcall
test
inc
sahf
rclb
jge
mov
cli
jp
mov
inc
xor
xchg
or
cmpsl
sbb
in
inc
loope
xor
jle
decb
jp
mov
xchg
nop
adc
insb
mov
mov
leave
add
jg
inc
sahf
rcll
mov
mov
or
xchg
pop
push
sbb
adc
jmp
xor
push
fcompl
jmp
sub
pop
inc
adc
in
pop
mov
pop
or
mov
lods
and
inc
jns
pop
lahf
sbb
cwtl
jns
out
jle
jmp
mov
aam
mov
rclb
mov
dec
xor
sub
pop
movsb
rcrl
pop
imul
jg
in
inc
insb
inc
fwait
lods
movsb
push
loop
or
xlat
aad
jae
loope
xor
dec
mov
cmp
repz
std
ja
and
mov
mov
xor
sahf
call
imul
pushf
cwtl
jae
popf
mov
mov
push
mov
int
or
sub
xchg
or
mov
in
js
lods
dec
aaa
or
cmc
loopne
loope
cld
push
popf
mov
hlt
in
dec
dec
cwtl
mov
mov
js
xchg
xchg
cmp
and
fcmovnb
sub
mov
pop
lret
cmpsl
andl
dec
stos
mov
fisttpl
pop
clc
dec
out
cmpsl
in
jmp
lret
add
fdivrl
clc
push
push
scas
add
dec
pop
jns
mov
ds
dec
mov
sysexit
insb
and
gs
adc
xchg
mov
cld
inc
test
arpl
mov
jns
sbb
imul
inc
pop
faddl
cmp
cmp
and
adc
imul
je
push
cmp
mov
dec
lea
rorl
repnz
lret
mov
adc
pop
or
mov
sbb
movsl
outsb
jl
add
and
and
enter
mov
mov
xorb
dec
test
jl
ss
loop
test
rol
mov
sub
xor
jno
popf
jmp
ljmp
jge
imul
das
and
or
imul
testb
lock
adc
js
fnsave
pop
fdivs
mov
mov
movsl
repz
cmpsl
jg
lds
iret
jecxz
sbb
lea
fisttpll
test
cmp
cmp
loop
sti
pop
lret
int
jp
gs
jbe
sub
jno
je
jecxz
dec
dec
or
hlt
pop
int
dec
cmp
inc
inc
jns
out
and
mov
push
in
cmpsl
mov
mov
mov
fsubl
push
jg
cmp
dec
push
or
jle
sbb
jg
cli
fstps
sbb
enter
push
sarb
dec
test
out
or
insb
fsqrt
mov
push
adc
lods
ja
fiaddl
mov
fmuls
mov
leave
ret
xor
mov
xchg
or
daa
push
jg
xchg
gs
sub
imul
sti
or
sub
mov
inc
xor
push
ds
pushf
jo
pop
xor
outsb
cmpsl
inc
scas
lret
into
test
add
shlb
stc
pop
mov
xor
push
xchg
or
adc
xchg
dec
fs
dec
jb
roll
cli
int
sub
dec
insb
daa
out
repnz
push
gs
test
mov
and
repnz
mov
inc
push
and
inc
inc
inc
xor
aad
jbe
jmp
sahf
stos
mov
push
mov
push
cs
shlb
cmp
loope
mov
inc
lds
fstps
jmp
add
enter
ljmp
addr16
dec
xchg
mov
jnp
cwtl
or
bound
xor
rol
pop
add
fsts
add
jbe
in
cli
aad
adc
test
cmp
inc
xor
cmpsb
sbb
ljmp
out
mov
stos
sub
sbb
cli
arpl
mov
sbb
mulb
add
loope
sbb
mov
jmp
push
mov
repnz
mov
scas
mov
cmp
or
lcall
popf
leave
and
mov
and
pop
push
pop
push
mov
scas
inc
test
push
jb
mov
xchg
xchg
or
mov
mov
inc
mov
orl
sahf
loope
in
test
fs
and
pop
lahf
int3
add
cmp
and
adc
loop
filds
inc
mov
xor
fdiv
pop
add
cli
jo
push
cmc
sbb
push
push
out
push
aam
and
lcall
repz
xchg
mov
lock
test
or
push
out
mov
arpl
jnp
repnz
mov
in
fdivr
sbb
or
sub
clc
insl
insw
mov
lods
loopne
mov
in
lret
inc
push
dec
leave
and
cmp
xchg
cmp
loope
out
jle
popa
or
imul
sbb
jp
test
std
imul
or
cmpsl
imul
inc
out
fdivr
xor
in
loop
dec
add
out
bound
shll
sub
adc
sbb
cmp
cli
test
and
add
push
xchg
leave
xchg
push
jecxz
push
or
ret
fldl
sbb
add
mov
test
pop
adc
mov
inc
jmp
jg
inc
mov
fs
lcall
jnp
stos
aaa
xor
xor
call
out
inc
imul
xor
cmp
sub
ds
out
sub
sbb
int
lret
jl
ja
orl
mov
fstpl
ffree
push
fcmovbe
cmp
dec
mov
jle
inc
mov
pop
sbb
lods
pop
aad
pop
or
push
dec
jne
imul
pop
in
inc
sub
mov
push
js
adc
mov
loopne
shlb
xchg
xchg
xor
daa
push
scas
dec
stos
rcrl
jno
out
loopne
mov
adc
data16
fsubrl
inc
push
pop
xchg
pop
sub
mov
push
das
and
mov
fisttpl
pop
jmp
ljmp
mov
aas
pop
lret
out
lds
nop
cmpsb
jmp
sbb
push
stos
adcl
mov
pop
neg
xchg
cmc
arpl
mov
sbbl
out
hlt
cmp
imul
dec
inc
shll
xchg
add
out
inc
dec
xchg
pop
jns
adc
fisubrl
fistpl
sbb
mov
xor
out
fcoml
neg
popa
push
mov
insl
add
pop
idivb
testb
add
or
push
mov
mov
rorl
and
fldenv
ud2
inc
adc
je
mull
mov
pop
xchg
out
jae
fbld
mov
mov
popa
pop
daa
xchg
mov
iret
pop
mov
mov
mov
inc
aam
lds
pop
dec
mov
scas
jo
fs
xor
es
cmp
cmpsl
cs
dec
dec
aad
cmp
test
test
jp
add
in
call
inc
sub
push
sub
lahf
jo
adc
add
jbe
sub
arpl
xor
sub
xor
mov
push
mov
push
popa
loope
push
push
jns
mov
xchg
pop
mov
push
mov
fsubs
in
jns
jnp
loopne
cmc
fsubs
int
lret
arpl
pop
xchg
dec
push
push
popa
leave
stos
cmc
loope
ljmp
push
dec
inc
and
xchg
jns
mov
outsb
inc
sbb
test
rcll
fdiv
jl
xchg
fcoml
cmc
loopne
add
inc
aaa
stc
dec
fadds
js
dec
lcall
hlt
cli
or
mov
jecxz
mov
or
test
mov
pop
and
mulb
and
xor
mov
cmpsl
cs
psrad
cs
dec
or
jnp
orb
pop
xchg
add
stos
mov
pextrw
pop
pop
push
inc
and
ret
mov
aaa
faddl
aad
xor
fadd
movsl
and
aad
dec
insb
inc
fisubrs
xor
xor
dec
fst
mov
pushf
fsubrs
sbbl
pop
jge
addr16
or
jb
imul
mov
push
enter
aas
jle
mov
jecxz
mov
dec
fdivrs
js
mov
jecxz
pop
pop
repz
mov
or
rcrb
mov
mov
mov
scas
scas
cmpsb
movsl
notl
push
imul
cmp
jne
or
pop
lcall
dec
xchg
cmpsb
daa
mov
aas
inc
mov
call
insb
sub
in
sarl
loop
cltd
test
and
or
mov
push
sub
loop
inc
cmp
repz
jnp
or
pop
ss
mov
test
push
ljmp
add
mov
loopne
inc
pop
rorb
jns
jl
jge
sub
pusha
insb
dec
lds
jo
aad
sub
pusha
inc
push
add
adc
cltd
jge
push
xchg
mov
arpl
jns
cmpsb
mov
movsb
push
xchg
xor
push
popf
subb
js
xor
lds
dec
mov
jle
in
mov
or
xor
mov
ret
inc
fimuls
sbb
and
inc
idivb
loopne
and
test
mov
fldcw
outsb
jge
jp
inc
inc
mov
push
mulb
pop
add
movsl
js
xor
cmp
enter
inc
loop
inc
add
js
cs
mov
jl
mov
js
cs
std
sub
adc
pop
add
jne
cmp
xor
imul
adc
insb
push
outsl
pop
jmp
xchg
imul
cli
dec
loopw
gs
add
xchg
repz
dec
xor
pop
and
loope
dec
cmp
jns
push
inc
mov
inc
push
movsl
enter
inc
pop
jae
or
outsb
mov
mov
stos
lea
ror
and
shrb
sub
add
xor
mov
cmp
fimuls
loop
jl
push
fmull
out
loope
pop
xor
sahf
lds
adc
lods
fdivp
aad
add
sbb
and
pop
mov
shll
gs
sbb
fisubl
test
in
das
insl
mov
insl
mov
xor
xor
fdivs
pop
out
inc
mov
xchg
popa
lock
mov
jge
mov
xorl
hlt
xor
addb
cli
pop
icebp
mov
jnp
int3
aam
mov
xor
pop
fwait
nop
mov
adc
sbb
movsl
ljmp
fsubp
inc
push
arpl
xor
mov
sbb
gs
xchg
inc
push
add
push
and
mov
repz
aas
or
mov
cmp
cmp
cli
mov
lea
mov
fimuls
lret
in
sub
xchg
jecxz
pop
mov
fcmovnbe
mov
sub
mov
pop
outsl
and
gs
cmp
mov
or
and
push
in
out
ss
pop
xchg
aaa
shlb
jmp
fidivrs
test
cmp
ja
xor
rcll
inc
jb,pn
lahf
mov
test
mov
sarb
pop
inc
cmc
jmp
cmc
push
mov
lret
inc
aam
dec
sbb
adc
daa
sbb
lods
xchg
sub
mov
mov
clc
jno
dec
jmp
mov
js
cmpsl
repnz
mov
inc
call
fcompl
dec
mov
nop
outsl
shll
add
mov
gs
pop
dec
push
in
or
aas
fnsave
add
insb
mov
xor
mov
cli
fsubs
stos
divps
adc
push
sub
cs
iret
andl
add
adc
xchg
inc
fdivs
adc
js
js
shrb
enter
push
pop
xor
in
test
inc
jl
mov
ljmp
push
jl
rcr
jbe
rcrl
and
pop
pop
mov
cmp
daa
inc
fs
sahf
mov
daa
sub
jp
stos
mov
orb
in
fwait
pusha
adc
add
xor
sbb
push
mov
stos
popa
js
adc
insl
std
shll
xorb
shlb
pop
dec
cmp
mov
jl
sbb
add
enter
push
repnz
fistps
xor
xlat
jo
xchg
fcoml
fisttpll
xor
mov
push
mov
or
rol
and
arpl
loopne,pn
call
lea
jne
jge
sbb
mov
scas
test
xchg
jne
test
icebp
sub
ds
sub
movl
jno
mov
xchg
nop
and
push
lahf
xchg
lock
sbb
scas
inc
fcmovu
mov
lds
add
aad
mov
jo
inc
mov
sahf
mov
mov
dec
mov
xor
mov
lret
out
push
sti
push
xor
scas
cmp
cwtl
mov
jmp
out
inc
pushf
sbb
inc
rcr
in
out
or
hlt
dec
and
mov
jl
fs
pop
mov
jge
insl
in
push
inc
insl
rep
insb
push
loop
pop
repz
loope,pn
push
pop
push
adc
cmp
dec
int3
or
pop
jns
imul
sarl
mov
out
shr
jbe
test
shrl
add
cmp
jmp
pop
mov
ja
xor
sbb
idivb
mov
dec
jle
pop
fs
push
mov
test
bnd
in
mov
lock
daa
push
mov
mov
or
subb
ret
fisubrs
mov
and
lock
mov
scas
mov
mov
inc
pop
inc
test
pop
std
aaa
fsqrt
mov
fxch
pop
jecxz
sbb
and
or
cmpb
adc
ds
mov
pop
fwait
loopne
mov
rorl
stc
jle
cmp
lcall
mov
lcall
push
mov
sub
cmpsb
push
out
cs
scas
or
dec
pop
sbb
pop
mov
inc
or
sbb
ds
dec
roll
xor
dec
test
jb
sbb
out
dec
mov
pop
stc
sub
dec
loop
pusha
cmp
pop
daa
sbb
lods
add
jno
stos
push
adc
sub
jno
or
or
test
pop
fnstenv
xor
mov
ret
shrb
loope
je
xchg
pop
stos
mov
sarl
pop
popl
add
bound
adc
xchg
inc
xchg
mov
in
mov
jns
inc
push
pusha
cmp
jno
sbb
popa
jg
and
leave
fstl
fldcw
sub
fidivs
xor
fbstp
inc
lret
icebp
stos
jg
arpl
rcl
adc
clc
rclb
insb
jno
sahf
inc
xchg
pop
int3
push
int3
or
add
pop
xor
testb
jg
adc
pop
dec
jmp
cmp
jge
repnz
pop
jecxz
dec
or
popa
xchg
jns
sti
and
mov
mov
cmp
lret
arpl
hlt
adc
imul
sub
pushf
mov
jns
cli
push
dec
or
idivb
mov
hlt
jp
push
ja
sub
pop
ds
pop
popa
dec
dec
jecxz
stc
jmp
jmp
and
std
inc
in
in
sti
mov
neg
add
cmp
jne
xor
mov
jecxz
inc
push
stc
dec
sbb
push
jne
sbb
shr
or
xchg
sbb
fbld
test
popa
andb
hlt
lret
enter
sbb
or
sub
fsubl
xchg
insl
or
call
mov
xor
adc
mov
ss
xchg
jmp
mov
pop
mov
cmp
mov
mov
lods
mov
adc
cmp
stos
mov
push
iret
imul
lds
bnd
mov
sub
into
lret
xor
enter
inc
addr16
jb
mov
aaa
sti
xor
call
movsb
int3
mov
icebp
repz
lods
jl
push
mov
scas
pop
jp
das
cmp
ficoms
and
repz
bound
aaa
cmc
fistpl
mov
ja
add
rolb
mov
jle
mov
ret
adc
icebp
jo
push
pop
arpl
cmpb
roll
pusha
xor
stos
mov
push
cmp
sub
jge
fs
pop
int3
push
and
lock
in
lds
mov
dec
push
test
jns
and
mov
shll
andb
jmp
daa
cs
pop
mov
das
cmpsb
gs
out
rorl
sbb
fidivrl
jb
pop
sbb
sbb
gs
rol
stos
push
cmpsl
lds
mov
int
mov
jmp
inc
jge
adc
xor
jmp
insb
sub
pop
insb
push
jb
sbb
jp
pop
mov
imul
adc
mov
push
aad
inc
jnp
mov
stos
sbb
push
movsl
cld
paddw
je
pop
sbb
sbb
lods
cmc
arpl
push
mov
gs
out
and
mov
cmp
test
outsb
movsb
hlt
dec
lods
mov
mov
dec
jge
fstpl
jo
ss
sbb
xchg
test
mov
repnz
jbe
in
dec
mov
int
mov
sbb
mov
jb
cmp
mov
push
jb
add
jb
loope
data16
pop
lods
das
iret
pop
outsb
xchg
pop
jle
and
dec
sahf
jge
inc
jb
bnd
xchg
es
mov
mov
lcall
sbb
mov
sti
shrb
ljmp
imul
ja
int
mov
aas
lds
cmp
jle
sbb
test
dec
inc
jne
fs
mov
jb
rorl
push
jmp
in
je
loope
stc
sbb
idivl
jbe
hlt
into
das
loope
pop
jb
cmp
mov
in
adc
jns
xor
push
loope
lret
les
inc
sbb
sbb
jno
clc
jp
add
pop
outsb
push
add
sub
jns
and
adc
xor
out
jae
mov
pop
dec
mov
sbb
push
iret
cs
nop
mov
outsb
inc
dec
jmp
add
fistpl
imul
or
dec
out
mov
push
xor
adc
addb
cmp
push
or
pop
sahf
incl
jp
xchg
pop
push
mov
lahf
adcl
sahf
shlb
pop
popa
xchg
xor
fldt
lcall
idivl
cmp
push
loope
ret
out
push
das
popa
ljmp
movb
jb
sbb
movsb
std
rorb
fsubl
mov
and
sbb
sahf
mov
test
iret
shlb
ja
or
divb
xor
test
movsl
xor
push
dec
mov
stc
icebp
mov
mov
in
int
lea
xchg
fldl2t
dec
dec
shll
and
sbb
mov
lret
insb
sub
lahf
movsb
pop
insb
addr16
imul
insb
mov
xchg
lods
add
scas
jo
addr16
stos
mov
push
jno
addr16
es
movsb
adc
or
outsl
repnz
mov
bound
js
int
addr16
ljmp
stc
clc
sub
mov
outsl
lea
xchg
imul
in
mov
mov
sti
mov
and
jo
xchg
js
out
mov
push
cmp
insb
lods
fwait
stos
es
aam
fidivrl
int3
lods
stos
or
je
addr16
pushl
and
pop
mov
pop
enter
stos
addr16
in
mov
sub
mov
into
dec
icebp
or
cmp
inc
inc
jne
or
daa
dec
push
fdivl
js
incb
xchg
sub
inc
mov
sahf
enter
mov
out
push
cmp
iret
lods
cmp
push
mov
cld
lea
mov
cmp
mov
fists
mov
or
mov
cmc
into
hlt
popa
or
test
cmp
loop
out
adc
jg
push
inc
dec
pop
dec
fs
pusha
imul
xchg
pop
sub
and
sub
repnz
push
lea
sub
cmpl
mov
dec
mov
aam
and
xor
push
add
xor
add
push
imul
je
or
sbb
cwtl
push
push
inc
push
xorb
push
or
adc
gs
lea
dec
repnz
xor
mov
in
shlb
mov
sbb
shr
push
pushf
inc
and
cmp
add
cli
fs
jne
and
dec
cmp
jo
mov
add
jle
shll
fwait
pusha
mov
fmul
xchg
mov
or
imul
push
mov
cld
cmp
loope
shl
lock
ret
int
lret
sub
xor
cli
lock
lods
and
data16
in
jb
sahf
arpl
stos
dec
xlat
scas
enter
mov
arpl
enter
in
jae
cmpsl
add
fnsave
scas
loopne
mov
int3
add
jbe
xchg
jne
cld
sti
mov
fsincos
ficompl
and
ret
or
pop
mov
mull
pop
jnp
nop
mov
sbb
mov
xchg
and
mov
nop
in
mov
lcall
dec
movsl
push
dec
jp
mov
insb
cmp
push
dec
jp
sub
cmp
sbb
data16
inc
push
add
js
push
jb
popa
call
xchg
call
popf
in
adc
adc
sub
jle
or
sbb
insl
mov
addr16
out
adc
bound
ss
out
push
add
rcrl
cltd
ficompl
push
jo
scas
aam
sub
aas
outsb
sbb
aam
js
popf
pop
out
das
lret
out
mov
cs
orl
jbe
cmp
adc
push
pop
mov
pop
repz
movsb
sarb
or
pop
or
test
outsl
es
loopne
push
mov
lret
shrl
mov
dec
fisttpll
call
push
aam
pop
loope
add
stos
cmp
pause
pop
mov
es
cmc
fnstcw
test
test
cmc
dec
pop
jg
rcl
mov
mov
mov
mov
adc
pop
pop
idiv
ljmp
push
add
add
mov
and
mov
movsb
in
lock
push
iret
lea
xchg
dec
pop
sbb
mov
mov
mov
jae
popf
ja
mov
icebp
pop
mov
loop
out
jg
mov
idivb
pop
mov
sub
xor
or
push
cmp
mov
out
pop
xor
test
xor
and
dec
sub
aad
into
sbb
clc
or
push
sub
jns
push
leave
jne
imul
es
mov
sub
dec
cs
sbb
jl
adc
jo
or
sub
rol
or
mov
add
jle
hlt
movl
jnp
pop
leave
or
insb
icebp
in
out
dec
adc
and
ss
cmp
insl
jae
xlat
loop
ja
shlb
inc
sub
ds
mov
movsb
jo
pusha
or
es
jbe
push
mov
movsl
xchg
jmp
sbb
das
mov
out
idivl
fidivrl
pop
pushf
jge
dec
je
xor
mov
jo
int
jb
sti
and
mov
mov
mov
and
dec
lods
pop
arpl
sbb
add
insl
lods
arpl
add
daa
loope
rcll
cmpl
or
or
repnz
stos
push
lcall
pop
mov
cmovs
cmpsl
int
mov
cld
dec
or
sub
je
fistpl
sub
adc
test
push
push
call
jl
xor
mov
xorb
cli
or
jge
sbbb
xor
jp
mov
dec
add
mov
hlt
hlt
fsubrl
jbe
jb
jp
ficompl
jge
sti
xchg
inc
test
or
jle
es
sbb
xchg
loop
repnz
and
mov
sbb
pop
mov
mov
movsl
inc
out
mov
or
jle
fcomp
dec
xchg
iret
xor
jge
mov
mov
xor
test
sub
roll
scas
arpl
cmpb
imul
repnz
leave
iret
jo
xchg
push
rcr
mov
nop
pop
adc
mulb
aad
sub
sbb
mov
jae
cs
push
mov
mov
call
pop
cmp
popa
add
lret
cld
xchg
lock
fs
mov
push
sub
sub
jae
stc
lods
arpl
mov
jle
stc
in
xchg
push
repnz
adc
dec
or
mov
pop
mov
ljmp
movd
leave
or
mov
jge
shll
lcall
stos
int
push
arpl
inc
push
adc
in
mov
cmp
jbe
mov
clc
loop
cmp
test
jbe
popa
or
pop
jl
xchg
push
push
pop
movsl
sub
jne
pop
xchg
cmp
push
fildl
mov
icebp
xchg
lahf
ficoml
cmp
mov
repz
cmp
or
out
ficompl
xlat
sbb
pop
sti
push
repnz
out
jge
bound
stos
std
daa
xor
daa
test
xchg
imul
pusha
inc
or
push
faddl
push
add
iret
ficompl
outsl
add
int3
xchg
inc
sbb
iret
pop
insl
cmpsb
xor
fnstsw
or
es
clc
in
sub
cld
dec
movsl
insb
or
or
inc
int
cmpl
xlat
cmpsl
xchg
nop
lods
loope
test
and
fnsave
dec
jp
int3
je
push
xlat
mov
or
mov
mov
lcall
pop
or
push
inc
mov
decl
or
xlat
lds
int3
adc
lods
fldcw
xchg
and
lahf
sub
std
mov
cmpsl
frstor
jmp
push
mov
xor
fldl
aas
fildll
shrb
das
bound
outsb
mov
daa
xor
cld
mov
sbb
or
jp
sarb
mov
inc
adc
inc
adc
xchg
adc
lds
cmp
sub
mov
add
popa
and
outsl
fsincos
or
test
push
icebp
sbb
mov
imul
mov
arpl
jg
cmp
cmp
aam
hlt
dec
loope
cmc
aad
and
orl
inc
sbb
inc
push
lret
dec
stc
or
dec
insb
jae
mov
jne
add
repz
adc
push
or
xor
aas
outsl
sub
jmp
add
movsb
xor
in
xlat
sti
xor
jae
psrlw
jecxz
outsb
or
inc
cmp
cmp
fwait
out
test
aad
push
and
mov
movsb
or
mov
mov
mov
mov
cmpsl
jae
mov
cmp
jne
mov
stos
fstpl
in
push
sahf
out
xor
scas
fsubl
ret
ret
mov
adc
pop
pushf
adc
outsb
addr16
roll
sub
negl
ret
sti
xor
pop
repnz
xor
and
inc
movsl
jbe
jns
jge
jbe
inc
fiaddl
or
jge
cmp
cmc
mov
scas
in
cmp
xchg
lret
mov
std
mov
insl
push
out
cmp
xor
inc
stos
xchg
lret
or
in
add
mov
cmp
adc
pop
rolb
inc
add
movsl
call
and
js
adcl
stc
cmp
cmp
leave
ja
cmpl
inc
adc
test
mov
into
dec
and
xchg
insl
xor
push
sub
jle
pop
jmp
and
out
imul
ror
cltd
and
loope
mov
inc
pusha
inc
inc
jle
mov
std
in
data16
scas
test
or
std
add
addr16
push
xor
leave
jb
mov
xchg
jge
add
adc
mov
insl
sub
cmp
or
push
mov
and
movsw
mov
inc
jae
dec
test
fwait
icebp
repnz
xchg
in
std
pop
xlat
xchg
fistps
movsl
xor
or
or
ror
call
sarl
sub
les
cltd
mov
cltd
xor
cmc
mov
xchg
shr
dec
out
mov
insl
lcall
mov
push
mov
cmp
jp
pop
aad
in
cmc
dec
add
ds
cmp
fidivl
clc
jns
enter
jb
addr16
in
push
ja
scas
mov
mov
cltd
xor
push
pop
imul
call
mov
cmc
mov
and
xor
inc
mov
js
popf
push
sub
orl
push
std
push
mov
lock
dec
shll
clc
xchg
orb
inc
mov
aaa
ret
test
loope
sub
sbb
sbb
and
dec
insb
push
pop
cmpsb
out
test
ror
shlb
mov
xlat
clc
cmp
pop
or
cmp
inc
sbb
les
adc
ret
stos
and
pop
pop
loopne
sbb
or
loope
mov
inc
jae
dec
test
fwait
mov
shrb
push
inc
and
mov
or
xor
mov
push
and
cmc
inc
mov
scas
jl
inc
cmp
movsl
loope
int3
cwtl
ja
jle
jae
cltd
cmpl
les
out
mov
sarl
orl
jae
pop
pop
loopne
lock
insl
add
dec
insb
dec
mov
dec
out
and
les
sub
in
push
xchg
pop
sub
mov
dec
mov
push
pop
add
movsl
dec
xor
fdivs
push
push
or
negl
pop
flds
das
aam
outsb
aam
push
xchg
sub
popf
imul
or
data16
leave
mov
ror
stos
imul
jno
mov
adc
aas
dec
call
fwait
idivb
and
test
sbb
jle
jae
out
aad
movb
jge
jge
in
and
sbb
cmc
and
gs
cmp
jp
test
jecxz
pop
and
dec
mov
cmp
dec
ret
int
fldt
insl
jo,pt
or
in
sbb
out
repnz
pop
inc
pop
mov
jnp
cmp
icebp
repz
mov
sbb
xchg
fidivrs
dec
icebp
or
mov
iret
hlt
addr16
mov
ja
scas
add
outsb
test
jle
mov
pop
out
stc
jo
lods
mov
mov
mov
mov
cmpsb
loope
sbb
and
aas
cmpb
pop
push
mov
pop
pusha
lds
dec
sbb
mov
imul
outsb
cmp
pop
out
mov
loop
mov
scas
test
std
loope
push
repnz
jno
jns
stos
loope
sub
sbb
insl
out
lods
sbb
push
je
fisttpll
jmp
jp
jns
pop
popa
stc
mov
cmpsb
push
sub
inc
jne
cmp
testb
pop
cltd
or
das
mov
clc
dec
rorb
shll
sbb
or
mov
sub
daa
fisubrl
push
sbb
hlt
push
in
pop
sbb
in
fs
inc
cmpsb
shrl
jns
iret
mov
nopl
ret
push
add
into
adc
inc
jae
or
inc
dec
cmp
dec
loopne
mov
or
movsb
push
jge
adc
stc
sbb
in
outsb
pop
lods
stc
adc
xlat
sub
xor
aam
arpl
movd
imul
push
andl
daa
lcall
pusha
cmp
xor
add
fs
jl
pop
call
mov
fldl
cmp
imul
adc
mov
pop
call
cmp
into
out
jmp
lahf
pop
xlat
aas
adc
push
dec
mov
vmovntdq
fistps
loope
sbb
add
cmp
dec
jecxz
imul
mov
xchg
jnp
fstl
dec
mov
filds
xor
ficompl
xor
lods
lahf
push
and
pop
push
xchg
lods
pop
fdivs
cld
mov
ds
lea
lods
or
sub
pusha
je
cmp
fcomi
std
imul
jl
filds
lcall
fisubrs
xchg
mov
mov
cmp
lods
push
and
jbe
fmull
enter
mov
and
pop
pop
aam
cmp
ret
mov
mov
xlat
cmpsl
ret
mov
adc
pop
push
out
adc
mov
xchg
mov
fsubs
or
in
inc
out
mov
mov
ret
push
mov
sbb
pusha
and
push
cmpb
sub
and
shr
jp
jmp
pop
popf
xchg
les
out
lock
out
leave
outsb
jmp
loopne
fildl
jmp
xor
sub
shr
je
insb
or
repz
push
aas
fiaddl
jnp
mov
pop
iret
pop
mov
in
cmp
lret
mov
adc
pop
mov
fcoml
jbe
jnp
push
pusha
adc
push
inc
cmpsl
inc
cmc
adc
inc
das
xchg
cli
iret
mov
icebp
xor
lcall
push
sbb
ja
out
leave
shlb
dec
mov
push
call
xor
sub
jbe
in
gs
std
or
nop
push
sub
jno
add
push
cmp
or
and
pop
adc
je
test
inc
pop
out
scas
inc
sbb
add
and
outsl
les
bnd
push
cli
call
daa
imul
mov
loope
je
xlat
mov
sub
fidivs
adc
bound
xor
fdivp
addr16
test
in
mov
imul
in
mov
xchg
push
jae
fcomi
aaa
sbb
pop
pop
push
adc
hlt
mov
pop
xor
into
mov
or
movsb
and
sahf
cs
test
insb
or
jp
push
inc
mov
xlat
dec
push
cmp
cli
stos
ret
push
dec
sbb
push
js
ss
and
jecxz
inc
in
movsl
pushf
jg
lds
cld
arpl
push
xchg
loopne
shlb
dec
mov
test
mov
add
test
adc
add
in
icebp
outsb
movsb
mov
sub
jmp
mov
jno
cltd
fwait
inc
jmp
or
shlb
in
popf
and
test
stos
jo
sub
jl
hlt
hlt
fstps
and
and
call
stos
inc
repnz
and
pop
push
pop
sbb
xor
adc
pop
mov
xlat
test
ds
fprem1
cmp
pop
out
pop
add
adc
xchg
clc
push
ficompl
jno
into
and
cmp
loop
inc
xchg
rcll
jl
mov
in
data16
inc
jbe
test
add
xor
jb
xchg
sahf
out
stos
cmp
lods
jecxz
sbb
push
cmc
hlt
xchg
push
mov
or
sbb
jnp
or
js
adc
cld
sbb
mov
mov
xchg
lds
imul
push
push
inc
adc
jb
xchg
dec
in
fisttps
sub
orb
das
xchg
xor
lea
iret
jg
daa
or
inc
stos
mov
adc
xlat
inc
popa
xchg
movsb
cmp
or
rcll
jecxz
ret
loope
or
sbb
scas
push
dec
inc
lods
insb
in
sub
mov
cmp
shll
in
inc
mov
xchg
xchg
divb
out
mov
xorw
jbe
xchg
pop
push
jp
pusha
mov
mov
jne
sbb
jbe
cmpsl
enter
inc
add
dec
pusha
push
jp
fwait
pop
icebp
adcb
rorl
lods
inc
sbb
arpl
fildl
sbb
imul
popa
and
mov
jo
cmp
xchg
movsb
insl
ret
push
mov
outsb
or
add
dec
and
fcompl
sti
movsl
pop
and
out
sbb
std
xchg
jecxz
outsl
dec
dec
dec
adc
mov
pop
or
shll
aas
dec
hlt
jge
mov
mov
jae
jmp
sbb
jb
dec
shlb
int
dec
popa
lods
mov
fiaddl
imul
aas
jle
pop
test
mov
sarb
push
and
out
inc
xorb
mov
or
in
bound
add
sub
shlb
add
in
fisttps
ja
loope
cmpsl
fmuls
scas
hlt
mov
sti
fcmove
cltd
or
mov
sar
enter
sbb
les
ss
arpl
add
pop
bound
sbb
or
mov
and
adc
rcl
addr16
in
out
inc
mov
sub
in
call
or
testb
jb
mov
lea
sub
scas
insb
out
dec
ja
pop
cmp
sbb
or
int3
mov
rcr
movsb
decb
fwait
shll
pop
outsl
sub
sarl
and
and
out
xchg
negl
cmpsl
mov
sbb
push
les
and
add
or
mov
add
mov
push
adc
sub
lods
mov
out
aaa
xor
aaa
out
and
fnstcw
and
adc
daa
iret
cmp
mov
mov
rcl
outsl
dec
filds
pop
sub
and
cli
bound
movsl
adc
jo
mov
jle
lret
out
dec
cli
neg
jne
sbb
dec
add
fs
in
and
jp
jb
sbb
push
mov
mov
je
hlt
mov
out
jo,pt
imul
stc
mov
dec
sbb
call
cmp
and
std
aad
popa
daa
loop
push
and
das
adc
mov
jge
and
push
inc
xor
data16
sahf
pop
xor
xor
cs
movsl
push
mov
jno
pop
sub
push
fidivl
int3
pop
mov
cmp
sub
ret
mov
mov
mov
popa
imul
outsl
jae
fiadds
dec
dec
stos
enter
lea
add
add
mov
jb
mov
lret
loop
or
mov
or
adc
pop
insl
lods
cld
int3
in
mov
shlb
stc
cmp
daa
mov
xor
test
and
cld
mov
xchg
bnd
ds
jp
out
jge
jl
dec
and
ss
movsb
sbb
stos
inc
pop
push
add
hlt
ret
jb
jmp
jne
test
sub
imul
mov
insl
and
sahf
cmpsl
push
jno
ja
rcrb
mov
mov
mov
sbbl
out
and
cmp
mov
mov
scas
test
sbb
and
mov
inc
lret
movsb
in
das
in
sub
xchg
in
inc
dec
ljmp
cmp
cmp
pop
and
daa
cs
aad
mov
pop
sahf
sub
xor
sbb
mov
aad
movsb
inc
sub
sbb
insl
pop
mov
add
xchg
into
inc
ss
lods
ret
sarl
and
push
pop
jp
add
jne
fucomip
sub
pusha
cli
push
mulps
mov
dec
addr16
lfence
shrb
movsl
ret
js
out
shr
fwait
adc
negl
jmp
pusha
push
sub
mov
ja
jb
outsb
xchg
jbe
mov
jge
les
inc
sub
sub
es
push
ds
test
xor
icebp
roll
or
jb
cltd
aad
cmp
mov
cs
pop
lret
ret
ret
mov
es
stos
cwtl
mov
xor
xchg
stos
cmpl
shrl
or
inc
mov
add
test
add
jno
dec
std
sbb
pop
sbb
jno
dec
cltd
sbb
mov
jbe
test
jo
ffree
aam
and
fwait
inc
adc
rorb
mov
or
lds
jl
add
loopne
mov
loope
mov
arpl
and
push
jecxz
pop
jno
jle
std
and
cmp
fwait
inc
imul
mull
dec
mov
xor
xchg
cmp
dec
mov
sub
or
shrl
hlt
xor
icebp
pop
jmp
lcall
sbb
mov
out
call
xchg
lods
outsb
mov
test
sub
and
mov
addr16
lods
dec
pop
leave
repnz
popa
fnstenv
dec
adc
jnp
gs
in
sbb
iret
adc
xchg
daa
in
xchg
jo
and
notb
lds
push
mov
jnp
pop
dec
rcrl
and
mov
add
push
or
push
pop
xor
mov
jp
repnz
in
pusha
xchg
jmp
rorl
jle
xchg
clc
lcall
xchg
mov
inc
pop
ret
addr16
pop
ljmp
and
jb
sub
xor
jnp
test
loop
dec
les
ret
addr16
jp
bound
pop
aas
and
mov
js
gs
cmp
rclb
iret
add
flds
jnp
loop
push
je
pop
insl
and
add
es
iret
pop
ja
iret
cmpsb
lahf
popa
xor
jns
je
and
cmp
sub
fldt
lret
pop
lods
push
lds
mov
dec
daa
xchg
lock
cmpb
jne
in
push
xor
pop
pop
lea
sub
dec
int
mov
mov
sbb
sbb
cmpsb
jmp
sub
js
and
out
jae
and
les
or
jg
jecxz
dec
outsb
out
or
jecxz
cmp
adc
xlat
push
test
call
jle
push
rcll
push
jle
pop
mov
notb
pusha
push
add
dec
push
add
xchg
xchg
xor
notl
sbb
mov
inc
imul
les
mov
enter
test
mov
sbb
decb
fdivs
daa
mov
sub
mov
push
jle
out
jg
add
mov
add
insb
pop
and
outsb
sbb
ficoms
push
jmp
mov
sbb
mov
inc
sbb
loope
push
js
adc
pop
imul
test
mov
in
sub
push
je
test
ja
mov
popf
filds
cwtl
dec
or
jnp
mov
or
mov
jl
pop
sbb
add
stos
jmp
mov
xor
mov
aad
into
daa
adc
sbb
cmp
jge
and
push
fldenv
xor
test
mov
push
xchg
int3
popa
fdivrs
xor
push
add
gs
mov
inc
push
push
dec
sub
inc
pop
inc
jge
shlb
adc
mov
inc
pop
push
mov
aad
hlt
adcb
xor
lea
adc
shrl
test
repnz
sub
xchg
jge
fnstcw
nop
sbb
popf
in
pop
into
fildll
xor
fisubrl
ljmp
rclb
out
ss
and
and
push
and
dec
pushw
fs
movsb
xor
daa
add
aam
dec
dec
cs
cwtl
loopne
mov
fmul
addl
fdivr
fadd
xor
mov
mov
mov
in
int3
lds
jge
iret
ds
jo
ja
jb
rol
imul
mov
hlt
mov
fstp
ja
roll
test
add
inc
or
aas
stos
push
xchg
movsl
decl
xchg
aad
or
cmp
push
shrb
addr16
lcall
inc
ret
adc
dec
dec
pop
arpl
andl
imul
gs
mov
inc
fcomip
dec
jp
dec
imul
movsb
add
adc
dec
pop
xor
movsb
mov
mov
neg
xorl
jmp
pop
js
push
shlb
mov
add
je
push
add
jo
jle
mov
cmove
sub
jmp
jae
test
jno
loope
aaa
dec
js
mov
mov
jp
dec
hlt
fldenv
add
movsl
cmp
cmp
dec
jmp
frstor
mov
js
mov
jmp
xor
xlat
divl
dec
test
out
or
mov
mov
and
test
mov
pop
scas
sub
xor
es
dec
stc
add
push
cmp
mov
lods
in
dec
push
sahf
sub
je
lcall
jmp
lcall
or
pop
in
jle
or
and
data16
hlt
and
test
cmc
lods
in
mov
pop
mov
jg
or
jl
iret
pusha
pusha
pop
stc
fiadds
ror
pop
sbb
mov
xchg
mov
popa
jns
xchg
mov
das
inc
in
fisubrs
sub
rcrb
lods
test
lret
pop
clc
nop
sub
fld
push
sbb
je
ret
fsubrl
cmp
pop
mov
sarb
mov
pop
repz
sub
xorb
decl
add
mov
les
cmp
pop
mov
sub
int3
lods
pop
xchg
pop
clc
inc
enter
xchg
sbb
aad
out
mov
mov
and
jo
jb
jns
loopne
push
jb
gs
arpl
and
mulb
jmp
fs
jp
aaa
jmp
adc
pushf
out
aaa
push
xchg
xor
sub
pop
pusha
ret
inc
mov
sti
jl
data16
cmp
pop
dec
shll
cld
fmull
add
mov
sub
test
pop
inc
es
or
mov
jnp
mov
pop
in
pop
cmp
je
iret
or
pop
cld
cmpsl
dec
xor
fs
mov
add
popa
jo
repz
jo,pn
cld
fadd
jp
je
pop
pop
sbb
xchg
xor
pop
call
dec
hlt
push
sbb
dec
mov
lahf
sbb
mov
sub
jl
and
les
inc
into
testb
ljmp
in
in
clc
and
mov
jbe
sub
hlt
fdivrl
stc
dec
sub
mov
mov
popf
jno
or
mov
pop
jae
push
mov
outsb
cmp
int3
sbb
addr16
jge
and
dec
inc
rcll
adc
inc
mov
pop
pop
mov
adc
mov
mov
pusha
data16
shlb
aas
push
pop
lret
js
add
cs
outsl
sarl
dec
mov
mov
jmp
insb
insb
mov
into
outsb
repnz
jmp
dec
jb
test
mov
pop
not
sahf
and
aas
daa
fwait
hlt
insl
and
in
imul
loopne
fs
inc
adc
xor
sti
cmp
in
data16
out
and
xor
mov
das
cmpl
pusha
jb
outsb
dec
sub
dec
push
add
sti
pop
and
int
xor
fsts
inc
and
out
mov
xor
js
les
out
lods
xor
add
jo
sti
dec
jbe
push
mov
movsl
fwait
hlt
mov
fimull
inc
mov
adc
mov
add
xchg
pop
dec
jo
mov
dec
mov
leave
pop
es
sbb
jne
and
pop
mov
jnp
roll
insl
push
jmp
mov
cmpb
push
aas
pushf
cmp
dec
lea
loopne
jg
fadds
mov
cmp
lds
cmp
insb
push
mov
shr
es
mov
sub
imul
lds
sub
inc
jmp
jecxz
inc
or
jp
adc
lds
cmp
fldl
push
js
jo
aad
sub
mov
mov
inc
cmc
imul
das
out
pop
mov
sbb
jg
roll
insl
in
and
mov
xchg
add
mov
gs
jmp
jecxz
inc
in
ret
cmp
mov
nop
jb
sbb
inc
sub
sub
stc
inc
repz
push
es
lds
push
sub
mov
sub
aad
sub
into
inc
mov
outsl
pop
or
clc
jmp
jecxz
inc
loope
xor
rcll
popa
or
add
testb
in
jle
shrb
popa
lret
or
and
inc
mov
sbb
jbe
in
mov
adc
shll
es
dec
jmp
movsb
mov
pop
xchg
ljmp
movsl
sbb
inc
dec
sub
hlt
jmp
ljmp
out
negl
dec
iret
insb
es
cmc
jg
inc
fidivrs
sub
sub
lahf
clc
push
jle
jae
jns
cmp
push
push
xor
pusha
mov
repnz
loope
loopne
popf
xchg
lahf
dec
stos
sub
push
popa
add
ljmp
mov
fs
jne
addl
xlat
mov
push
les
sbb
sub
fs
fimuls
or
push
sub
mov
das
es
lcall
push
jecxz
xor
loop
push
mov
cs
and
mov
movups
loope
pop
xorl
outsb
push
insl
fbld
pavgw
aaa
mov
pop
es
sti
lds
dec
jmp
sbb
xchg
lods
add
cmp
aam
xchg
mov
fs
int
jb
adc
jp
shlb
xchg
jmp
xorl
and
add
aam
xchg
stos
xor
pop
xchg
add
lret
mov
inc
cmp
cmc
push
frstor
mov
and
dec
mov
mov
pop
shll
std
insl
mov
pop
dec
mov
mov
outsl
pop
cmp
inc
mov
in
inc
mov
jne
add
test
sub
notb
xchg
sub
out
xor
pop
iret
jg
xor
fisubs
sub
std
sti
leave
addr16
fcmovb
popa
ds
out
lods
pop
xorb
out
test
inc
cmp
das
sbb
outsb
add
jae
imull
sbb
and
call
in
push
outsl
pop
jnp
cmpsb
inc
add
shll
loope
test
sub
sti
cltd
divl
push
push
testb
jbe
cmp
add
push
fnstenv
loop
ficompl
lds
and
lret
mov
xchg
pop
adc
pop
and
lock
mov
stos
mov
lea
sarb
push
push
arpl
push
mov
mov
and
es
fwait
sbb
out
mov
lds
jp
imul
xor
stos
mov
xchg
push
jnp
inc
cmp
aas
push
test
cmpsb
sbb
cmp
jmp
repz
push
inc
and
mov
mov
inc
insl
xor
mov
sbb
push
out
xlat
and
imul
or
out
xlat
and
mov
fisttpl
add
xlat
and
aad
push
fmull
fs
jb
pusha
mov
nop
outsl
dec
mov
outsl
add
leave
pop
dec
test
inc
outsb
loope
mov
into
mov
dec
ja
jmp
js
subb
enter
inc
sub
pop
and
ret
and
jbe
or
and
pop
mov
bound
sub
xor
fdivl
lahf
jne
and
and
jnp
inc
cmp
xchg
out
xor
imul
add
mov
jmp
inc
iret
pop
xchg
inc
mov
pop
jle
popa
fs
xor
add
mov
bound
or
mov
mov
xchg
dec
dec
rorl
push
inc
xchg
call
inc
dec
or
ret
sub
sbb
sub
add
outsb
int
mov
lret
jnp
inc
popa
sub
nop
inc
add
das
shll
add
shlb
inc
sbb
push
daa
data16
mov
repnz
xchg
pop
xor
imul
int
fwait
mov
in
xchg
int3
std
ds
sbb
bound
mov
cltd
add
stos
pop
add
lea
mov
pushf
inc
mov
in
ljmp
mov
push
cs
xor
push
mov
mov
pop
mov
nop
mov
fs
sub
lods
mov
xchg
inc
int3
loope
out
sub
add
lock
or
jecxz
add
fstpt
xchg
dec
insb
fdivp
shrb
fildl
sub
xchg
lock
fadds
pop
imul
int3
popa
rcl
pop
out
sbb
mov
imulb
push
decb
pop
cmp
mov
insl
mov
lods
sub
cmp
ljmp
cmp
in
mov
add
sbb
call
es
sbb
pop
add
repnz
rcll
je
push
pop
and
mov
test
lods
jecxz
lock
ja
mov
jge
inc
dec
stos
rcrl
sub
sub
nop
pusha
xchg
dec
push
inc
push
cmp
fwait
push
push
and
xor
loopne
cmp
out
cmp
dec
xchg
mov
pop
lods
je
dec
in
insl
dec
cld
fidivl
scas
pop
xchg
aad
orl
nop
push
mov
dec
jmp
xchg
shrb
fisttps
scas
adc
jno
mov
mov
sub
jmp
jl
push
std
and
adc
inc
arpl
shlb
mov
add
add
push
insl
mov
jo
xchg
xlat
lcall
sub
jp
sub
pop
inc
and
mov
sbb
adc
jne
nop
cmpl
dec
add
iret
xchg
sub
cmpsb
pop
dec
movsb
dec
cmp
stos
or
pop
shr
out
popf
jno
ss
popa
inc
jno
sti
or
and
data16
and
mov
js
lods
ret
dec
mov
int3
jnp
repnz
dec
pop
jp
testb
push
pop
pop
ljmp
pusha
sub
loop
out
sub
sti
std
push
lahf
roll
pop
cmp
movsl
or
lods
movhps
sub
mov
test
xchg
cmpsb
adc
sub
les
push
arpl
push
bound
sub
sub
enter
sbb
inc
pushf
xorl
and
and
jmp
and
insb
inc
lret
fcompl
cmp
bound
cli
sub
adc
inc
adc
push
hlt
push
mov
cli
adc
cmpsb
mov
xchg
add
loop
insl
lods
fs
jle
icebp
mov
and
popf
fnsave
pop
or
push
andl
sarb
jnp
cmp
sub
fidivrl
mov
jno
mov
iret
jl
add
and
mov
push
pop
loope
scas
inc
mov
inc
mov
ds
cmp
jl
adc
add
dec
shrl
mov
dec
loopne
jg
cli
int
jnp
inc
lods
pop
jnp
icebp
in
cmpsb
es
and
repz
sbb
in
adcl
pop
outsb
mov
fildll
and
lods
pop
mov
push
imull
pop
adc
lods
xchg
outsb
push
movsb
xor
sbb
es
popf
jg
ljmp
mov
int
xor
adc
adc
or
out
pop
lret
cli
pop
daa
ss
cmp
test
dec
arpl
cs
insb
insb
jmp
push
pop
add
inc
notl
scas
sub
cmp
sti
pusha
aad
inc
flds
nop
jne
or
jbe
loope
xor
dec
fidivrl
pop
shll
adc
je
mov
dec
movsb
xor
add
sub
push
es
mov
pop
test
insb
mov
pop
mov
mov
xchg
daa
insl
sub
xor
out
fisttpll
lcall
mov
and
xor
or
stc
movsl
mov
lock
cmp
sbb
jle
mov
sbb
lret
dec
cmpsl
push
mov
mov
std
int
repnz
fwait
fwait
stc
inc
pusha
push
jg
add
or
out
lea
jp
sbb
ret
test
push
xor
insl
fisubl
test
add
mov
xchg
mov
and
dec
jbe
push
inc
and
mov
xchg
fiadds
cmp
jmp
sti
sti
negl
jne
xor
incl
sub
aaa
stos
sub
les
adc
pop
add
inc
xor
insl
fcompl
aam
out
cmpsb
jo
mov
imul
leave
pop
push
push
daa
lcall
fmulp
push
jl,pt
fdivrs
int3
push
fs
push
mull
iret
cmp
inc
ret
stc
add
xor
mov
fadds
jns
xchg
lahf
mov
icebp
enter
leave
sbb
jle
cwtl
out
jl
data16
int3
jecxz
jne,pn
push
or
dec
loope
je
hlt
aam
xchg
int3
sub
out
fisubs
cmp
rorb
imul
decl
inc
mov
sub
jae
lods
iret
push
loopne
repz
fdivs
pop
shlb
jae
inc
push
push
mov
insl
push
push
jl
fmull
or
jecxz
mov
out
pop
fisubs
add
sbb
lds
and
mov
and
xchg
pusha
es
pcmpgtd
sbb
sub
das
repz
inc
dec
inc
icebp
arpl
xor
outsb
leave
pop
cwtl
pop
mov
lret
or
shll
sub
xchg
mov
cmp
lods
call
dec
testb
shrb
add
xchg
sbb
fdivp
xchg
int
cmp
imul
lret
pusha
aam
cs
adc
pop
cmp
jb
or
fcoms
repz
jb
inc
inc
je
add
xchg
cmp
out
outsb
fbld
mov
daa
in
testl
mov
in
and
mov
dec
arpl
shll
dec
sbb
arpl
mov
dec
add
cs
jge
mov
in
scas
push
mov
add
or
jo
add
cmp
hlt
or
sarb
xchg
shlb
jp
xlat
out
and
cmp
mov
enter
fcmovu
jmp
bound
cmp
inc
or
xor
add
dec
lea
pop
cmp
cli
in
mov
dec
int3
add
gs
push
and
rorl
sub
jo
insb
xlat
cmpsl
adcl
pop
push
sbbb
jp
pop
cmp
popa
addb
jecxz
in
xchg
test
in
sbb
add
pusha
xchg
xchg
insb
mov
adcl
jle
add
dec
mov
sub
repnz
ja
mov
inc
icebp
xlat
cmp
js
inc
pop
inc
and
int
and
addr16
in
inc
and
insb
jo
cmp
pop
jge
mov
lods
leave
sti
cmp
jge
stos
dec
mov
cld
xchg
sahf
adc
cmp
int
cmp
push
xor
enter
pop
into
dec
cmpsl
dec
dec
sub
inc
or
test
xchg
lods
popa
pushf
xor
shrb
int
mov
xor
repz
adc
icebp
repz
test
negb
and
arpl
insl
cmp
pop
and
outsl
push
add
jge
mov
adc
add
cmp
push
jne
sbb
outsl
lcall
mov
sti
cmp
dec
push
imul
int3
lret
or
and
cmpsl
pop
test
pop
loop
test
xchg
xchg
insb
inc
adc
mov
pop
or
pop
ljmp
aaa
push
in
loope
cmp
sbb
sub
pmaxub
jmp
adc
or
pusha
mov
sub
mov
aaa
jge
add
in
sub
adc
adc
jge
add
pop
mov
fdivs
das
or
lea
lret
insl
xchg
out
bnd
movd
data16
inc
push
pushl
imul
js
loope
pop
cmp
inc
fdivrs
jle
jae
cmpsb
movsl
mov
push
dec
add
mov
jnp
mov
adc
mov
push
icebp
cmpsb
dec
jmp
and
ja
push
out
jmp
dec
pop
jne
les
imull
mov
push
adc
loopne
mov
in
or
mov
or
dec
fidivrl
and
loopne
fldcw
incb
xor
push
cmpb
push
pop
and
mov
int3
add
bound
pop
jg
pop
pop
ret
cmp
inc
cwtl
das
pushf
int3
insl
jmp
xlat
mov
cld
or
sti
dec
fwait
or
add
test
lahf
out
dec
and
jbe
negb
push
xchg
pop
xchg
and
jg
push
leave
out
jl
sub
cli
popf
out
insl
jbe
mov
fs
inc
shrl
xor
fdivr
pop
adc
clc
filds
xchg
xor
imul
xor
bound
jmp
jmp
mov
into
sbb
adc
sbb
sar
in
adc
jecxz
inc
sbb
scas
jle
test
mov
popf
or
inc
push
sbb
bound
adc
clc
jecxz
movsb
adc
mov
push
add
and
xor
fildll
push
mov
call
pushw
pusha
add
inc
decl
dec
popa
clc
mov
repnz
push
out
push
fsubs
int3
mov
scas
jl
cli
lea
cmp
adc
mov
jge
fisubrl
adc
fstl
pop
hlt
sub
sbb
push
mov
mov
or
ljmp
addl
pop
sub
pop
ds
icebp
loop
aas
mov
mov
cltd
pop
cltd
ss
mov
dec
je
add
popf
pop
sbb
jo
push
jge
sub
jo
mov
sbb
jb
dec
jns
insb
and
or
sahf
sbb
mov
loopne
pop
sbb
pop
jne
lds
fxch
faddl
push
in
cwtl
adc
call
cmp
jmp
xor
or
sub
cwtl
push
imul
cmp
inc
movsl
lods
stos
inc
icebp
sbb
in
xor
push
mov
cli
loopne
in
fsub
ret
mov
mov
pop
and
push
or
push
repz
subb
in
loope
dec
loope
ja
jle
icebp
push
inc
jb
in
movsl
xor
cmc
fs
jne
and
fcoms
shl
mov
mov
testb
mov
mov
jg
sbb
xchg
movsb
xchg
rolb
mov
fiadds
pop
lcall
lea
jmp
inc
jnp
mov
push
ret
add
movsb
mov
add
lea
pop
jnp
jo
inc
scas
imul
pop
in
out
add
sbb
push
insb
insb
add
or
cmp
outsl
inc
cmp
aaa
pop
adc
inc
dec
ss
and
xor
cmp
push
jo
or
add
enter
mov
push
and
push
js
sbb
jno
pop
loope
repz
pop
push
sub
mov
cmp
aam
pop
test
adc
lret
dec
jae
loopne
fidivl
fdivrs
popf
sahf
dec
loope
xor
adc
movsl
loop
ja
cmp
xor
push
pop
dec
push
js
cmp
mov
out
ret
repz
mov
cmp
iret
or
addl
or
pop
lahf
pop
xlat
mov
lret
mov
fst
push
mov
cltd
xor
jae
xchg
push
pop
mov
out
lods
add
popf
mov
ss
stos
sub
mov
jp
or
sbbl
adc
adc
clc
cmp
dec
out
lods
aaa
fsubs
ja
xchg
movsb
push
scas
mov
pop
or
movsl
in
int
mov
test
dec
jbe
push
mov
test
xchg
inc
sub
inc
adc
cmpsl
and
inc
mov
and
xor
mov
fwait
xchg
shl
sbb
loop
push
scas
adcl
jnp
inc
out
fiaddl
lcall
ret
mov
push
das
mov
loop
jecxz
push
pop
sbb
push
mov
push
xor
jmp
pop
dec
jg
inc
inc
es
bound
mov
gs
movsl
xor
pop
das
or
mov
lock
xchg
in
pop
mov
sub
into
dec
xchg
sbb
leave
stc
ret
cmp
or
aad
and
and
pop
lcall
dec
adc
mov
call
push
or
adc
xchg
sub
and
bound
pop
fs
mov
mov
roll
sti
pop
jbe
mov
jb
sbb
into
mov
dec
adc
push
add
lret
jb
call
pop
setae
push
push
int3
int3
xlat
test
popa
cmpsb
aad
jne
sub
leave
xchg
sub
lret
ret
enter
rcll
rclb
cli
das
movsl
sub
sbb
cli
push
hlt
lea
mov
pop
aam
jne
mov
xor
and
fs
cwtl
aas
mov
mov
in
mov
dec
dec
inc
lods
das
push
outsb
inc
lcall
ret
mov
loop
insb
dec
flds
js
mov
in
insb
test
bnd
and
es
dec
ds
cmp
or
and
sub
mov
arpl
in
or
xor
je
sub
add
cmp
sbb
in
mov
stos
add
mov
sbb
xchg
test
lret
pop
mov
xchg
inc
outsl
and
movsbl
loope
jbe
xor
jp
in
pusha
adc
ja
inc
add
pop
jb
cmp
xlat
xchg
cmpl
cmp
push
xor
mov
inc
sbb
or
scas
in
push
inc
adc
jo
shll
lods
mov
mov
xchg
and
cmp
gs
mov
xchg
mov
sbb
mov
jecxz
sbb
sahf
inc
mov
sub
mov
popa
lahf
or
and
inc
jge
orb
cmp
pop
xchg
nop
jnp
ljmp
mov
sub
xor
pusha
enter
fwait
pop
std
ja
ljmp
cmp
and
rolb
jnp
std
shr
push
insl
mov
xor
cmpsb
scas
mov
ljmp
sub
adc
sub
fs
jmp
repnz
and
loopne
or
dec
cmp
mov
xchg
or
cmp
inc
mov
out
scas
je
or
and
and
adc
std
jge
pop
fs
lods
stos
hlt
jge
push
repz
lds
jae
push
mov
sbb
jp
std
xchg
bound
out
aam
and
xchg
cwtl
test
pop
push
pop
and
push
cld
imul
add
enter
push
pop
inc
inc
ja
sub
iret
mov
cli
pop
loope
call
dec
dec
xor
push
jns
sbb
mov
jb
mov
pop
sub
icebp
sub
es
mov
aas
fisttpl
out
fnsave
or
mov
call
dec
movsl
std
fadd
mov
fadd
mov
lock
mov
insl
sbb
dec
in
xor
xor
dec
dec
and
add
adc
pop
test
out
out
into
inc
loop
repnz
dec
pop
lret
out
sbb
iret
negl
mov
cmpsb
pop
add
inc
jle
ret
xor
jnp
out
inc
iret
jo
outsb
pop
jg
mov
push
cmp
push
push
mov
in
jl
pushf
movsb
add
dec
in
jp
xchg
xchg
jmp
jle
xchg
stos
aaa
mov
out
xchg
imul
lock
adc
adc
pop
repnz
cmp
aad
lock
dec
inc
adc
jne
mov
sub
mov
data16
cmp
divl
lds
loop
pop
dec
dec
cli
push
mov
in
jo
jge
fcompl
jnp
jae
mov
lock
js
aas
fdivs
shrb
or
fnstsw
lret
jns
push
je
test
nop
insl
jo
mov
int
sub
pop
movsl
mov
shrb
rcrl
xchg
or
repz
insl
int
pop
cmp
je
dec
jbe
pop
xchg
test
sbb
jmp
out
pop
lds
and
fisttpll
inc
lret
jb
dec
inc
out
outsl
aad
inc
jo
push
stos
cmc
subb
sti
pop
pop
push
repz
push
cmp
jmp
sbb
in
imul
pop
in
loope
jbe
xchg
enter
push
adc
xlat
mov
pop
out
inc
popa
movsb
and
mov
ss
movsb
mov
jb
popa
insl
sarl
dec
cmp
jge
jmp
add
push
cmp
dec
cmp
shr
mov
cmc
jmp
jae
sbb
stc
inc
fwait
mov
test
pop
sbb
test
popa
adc
push
jmp
lods
inc
popa
ss
xor
sahf
scas
fisttpl
cmp
pop
sbb
loope
mov
cltd
pop
and
mov
out
push
dec
into
xor
sub
shl
xchg
mov
cmp
outsl
and
mov
inc
in
xor
loope
pop
fs
mov
mov
add
insl
push
pop
inc
insb
and
dec
jbe
sub
sbb
pop
test
inc
mov
xor
bound
jbe
int3
or
xor
outsb
and
sub
xor
and
ret
or
sub
or
adc
sub
call
adc
xchg
and
fwait
iret
cmp
mov
xchg
sbb
scas
xchg
flds
mov
or
add
and
mov
or
lret
mov
sub
shlb
je
in
add
cmp
movsl
outsb
and
cmp
inc
xor
or
xchg
and
insl
push
ds
dec
gs
dec
jnp
sub
cs
xor
push
cmp
or
jge
cmc
inc
cmc
stos
and
xor
sbb
xchg
pop
add
fidivrl
mov
mov
adc
lahf
das
pop
into
lock
fmull
mov
stos
loope
jnp
and
into
mov
inc
mov
fisttpll
dec
arpl
aam
pop
push
rorl
inc
sbb
insb
sub
inc
or
push
cmovbe
lds
mov
adc
jmp
into
or
test
sti
jno
cmpsl
call
add
hlt
sahf
clc
mov
loopne
fwait
jns
faddl
cmp
jmp
dec
pop
jne
mov
jno
sub
mov
pop
add
jno
jecxz
mov
push
popa
pop
or
mov
fld
sub
or
outsl
arpl
cli
scas
dec
test
addr16
mov
fs
test
adc
adc
scas
xor
dec
adc
pop
cmpsl
jge
push
popa
add
dec
jne
and
movl
popf
das
testb
imul
push
js
cmpsl
mov
shl
add
xchg
movsb
stc
cld
push
jge
mov
mov
sbb
inc
mov
dec
jge
mov
int3
ret
in
aad
push
mov
enter
fiaddl
test
push
xor
push
dec
cmp
fs
test
loope
clc
jg
and
inc
lret
dec
ret
push
jp
mov
pop
aas
mov
push
je
in
or
hlt
pop
jns
bound
ja
scas
mov
push
aas
sbb
aam
stc
jmp
cli
jne
sti
and
pop
jne
in
xchg
scas
mov
fimuls
dec
ja
stos
xchg
outsl
jae
and
pop
push
mov
sub
inc
lock
repnz
loope
aad
pop
jg
jo
jae
mov
xadd
gs
push
mov
cs
sbb
js
pop
mov
sub
out
mov
leave
mov
lea
ds
addr16
jg
lret
jns
cmp
cmc
cmpsb
js
je
adc
lret
sbb
xchg
xchg
pop
mov
cmp
sti
sub
ss
dec
inc
movsl
hlt
lds
in
stos
mov
jb
pusha
ja
cmp
outsl
cs
aad
push
mov
aam
push
popf
fstpl
mov
mov
jmp
pop
andl
jae
mov
jb
les
mov
xor
out
mov
ja
cmp
dec
lret
dec
pop
sub
push
mov
test
ror
dec
inc
loopne
jmp
sub
addr16
fcoms
sub
je
test
push
push
add
inc
insb
jge
pop
push
mov
push
movsl
sbb
scas
pop
dec
and
pop
mov
std
fcomps
pshufw
lods
pop
xor
ds
dec
sub
sbb
aad
aad
sub
cmc
inc
pop
mov
jns
cvtps2pd
lods
imul
psllq
inc
testb
test
je
push
push
bnd
stc
ficomps
pop
in
add
js
arpl
out
xor
jnp
inc
push
and
inc
jae
sbb
jp
in
sarb
push
sub
xchg
fwait
gs
addr16
pop
imul
je
push
inc
mov
add
xor
test
test
mov
test
inc
mov
jmp
jae
mov
mov
mov
lods
sbb
test
inc
sub
add
mov
mov
fistps
xchg
dec
jle
imul
jns
sub
dec
mov
imul
aam
cmpsb
int3
icebp
ret
bnd
aas
mov
sub
ja
mov
sbb
mov
mov
pop
rorl
mov
cmc
in
or
or
cld
bound
in
or
sbbb
sti
mov
xor
lock
mov
mov
inc
rcl
icebp
shl
dec
insl
arpl
lods
add
sub
ret
dec
mov
pop
icebp
cwtl
jmp
jmp
out
mov
mov
pop
adc
rcll
ss
pop
mov
sub
mov
in
push
ffree
test
push
lea
inc
aas
sub
sbb
es
dec
fwait
pop
push
inc
loope
int
adc
sti
call
mulb
and
or
push
loopne
out
idivb
imul
call
adc
pop
in
adc
fnstcw
pop
daa
jmp
push
pusha
mov
fs
das
sub
inc
xor
or
repnz
xchg
fsubrs
movsb
int
jbe
aad
out
lea
fldl
shrl
daa
lret
pop
hlt
adc
jmp
push
cmpsl
bound
dec
inc
call
stos
mov
mov
ljmp
dec
mov
or
or
add
mov
mov
mov
sub
inc
xchg
jae
int
imul
dec
aas
mov
imul
mulps
sub
adc
out
daa
mov
loope
pop
andb
add
stos
and
dec
or
mov
jb
xor
jb
jns
outsl
push
sti
hlt
push
mov
add
out
int3
push
repnz
fisubrl
sbb
adc
push
inc
lret
aas
or
outsb
cwtl
gs
arpl
mov
aaa
xchg
icebp
shll
cwtl
push
mov
fstps
movsb
cmp
xor
jmp
xlat
push
bound
xchg
and
icebp
sub
mov
and
xchg
push
iret
test
lock
jo
pop
add
rclb
jle
lock
popa
or
lcall
jo
aam
sub
ficomps
pop
lds
adc
or
test
mov
pop
sti
xor
mov
jp
mov
adc
lcall
fcomps
cmp
cwtl
adc
jnp
mov
push
sub
fs
test
ss
in
sub
cmp
push
inc
pop
push
push
mov
outsb
sbb
xchg
out
jg
hlt
icebp
sbb
push
das
sti
insb
mov
ficoml
dec
dec
andb
sub
mov
inc
dec
jnp
xlat
out
dec
push
mov
and
mov
shlb
adc
std
jmp
mov
sub
mov
push
xor
cwtl
out
jl
imul
xorb
insb
jbe
sbb
push
dec
in
dec
lcall
dec
or
imul
call
sbb
pop
xor
pop
push
movsb
inc
hlt
jbe
cmp
jmp
js
pop
mov
cltd
movsl
xor
xchg
dec
mov
stos
es
fildll
dec
dec
pop
sarb
xchg
sbb
fs
ret
roll
adc
iret
inc
rcll
or
fwait
xchg
adc
fmull
das
leave
sub
cmc
mov
pop
addr16
js
jbe
and
dec
push
dec
lahf
imul
data16
loop
out
add
fsubrs
gs
std
and
or
scas
sbb
dec
push
sbb
xchg
jne
outsb
xchg
popa
movsl
inc
shrb
adc
mov
jp
or
test
push
mov
mov
adc
xor
xchg
mov
cs
pop
mov
pop
and
lea
add
mov
add
jecxz
in
jno
sbb
movsl
mov
sbb
mov
rcrb
add
jb
stos
xchg
mov
push
movsb
jmp
dec
pop
and
jnp
inc
sbb
gs
cmp
lret
jge
jge
dec
fucomip
mov
dec
rcll
adc
and
dec
adc
mov
jns
fcom
and
adc
lret
cmp
dec
andb
dec
and
dec
cmpsl
test
lret
jle
dec
push
std
cmpsb
jle
adc
push
decl
addr16
cld
push
adc
inc
ja
push
cltd
cmc
mov
add
es
xor
icebp
and
mov
mov
mov
and
test
or
popf
iret
aad
sbb
pop
xor
repnz
dec
fwait
cwtl
cmp
cli
sub
push
dec
lahf
push
xor
leave
stos
sub
sub
xor
sti
fidivl
mov
pop
jns
ret
cli
mov
push
sbb
in
pcmpeqd
ficoml
sub
iret
push
test
pusha
cmp
push
xchg
pop
inc
push
faddl
adc
jno
mov
dec
shlb
mov
add
inc
pop
cmp
inc
push
fwait
pop
push
and
movsl
pop
jb
dec
xchg
lods
sub
call
or
push
xchg
inc
pop
xor
add
cmp
sbb
lds
jmp
out
inc
aad
jp
arpl
fucom
int
lret
xlat
pop
js
ljmp
lods
addl
test
aam
jp
mov
jo
cli
dec
mov
pop
or
adc
dec
arpl
mov
jecxz
xchg
or
loop
lahf
add
sbb
dec
fwait
aad
in
mov
xchg
int
mov
je
loope
repz
mov
cli
iret
enter
pop
dec
xchg
sbb
pusha
fs
mov
imul
push
out
add
movsl
jmp
jbe
imul
xchg
inc
sub
sar
movb
cmp
lret
pop
adc
adc
loop
jb
or
sbb
sahf
cmp
push
loopne
out
jb
inc
inc
and
push
mov
ds
nop
and
lods
lret
sub
cmp
mov
inc
cmp
push
pop
or
insl
out
sub
fsub
int
mov
in
fimuls
dec
loopne
push
xor
xchg
jne
cmp
sub
loopne
insb
andb
mov
movsb
in
push
aad
pop
dec
lock
test
xchg
mov
fnstenv
sbb
xchg
idivb
mov
fisttps
push
stos
pop
imul
pop
mov
pusha
or
lcall
ja
pop
mov
dec
movsl
sub
add
add
js
mov
sbb
mov
test
lcall
shll
lret
jge
lock
stc
sub
pop
ror
dec
shll
add
test
out
cli
lcall
mov
in
jp
jne
data16
mov
jecxz
les
popf
sub
rolb
lods
dec
rclb
adc
std
jne
add
sar
pop
divl
out
mov
jno
push
mov
push
xor
and
mov
push
cli
cmp
scas
jp
loopne
loopne
inc
jbe
cmp
lcall
inc
inc
sub
lcall
sarl
loopne
push
popf
mov
in
jmp
mov
jnp
push
std
xor
enter
sar
stc
es
lret
xchg
fildl
shl
mov
xor
loope
jg
pusha
fiaddl
daa
ss
sbb
dec
push
pop
add
and
mov
and
sti
sarb
push
mov
int3
mov
dec
sbb
mov
iret
sub
sbb
rsqrtps
movsl
inc
outsb
stos
js
ret
xor
sahf
xchg
sub
jp
inc
mov
mov
stos
sub
in
mov
movsl
lods
sbb
out
pop
or
and
or
pop
jno
mov
addr16
fisttpl
out
jmp
pusha
call
jg
add
jl
sbb
sub
andb
jl
test
clc
sti
add
push
jae
xchg
mov
sti
outsb
shrb
cmpsb
jae
sbb
sbb
jle
rcrl
gs
in
test
add
add
mov
xor
dec
push
lods
or
xor
lahf
cmp
roll
mov
les
hlt
xor
gs
sub
popa
icebp
scas
push
push
jge
or
mov
sbb
xor
push
dec
cltd
dec
cmp
mov
pop
mov
andl
adc
lret
xor
sub
in
int
dec
sub
jo
push
daa
pop
cli
test
test
jae
push
dec
cld
jne
out
insl
ljmp
add
dec
leave
mov
arpl
push
sbb
jnp
jle
adc
mov
push
aaa
packsswb
sbb
pop
in
cs
addr16
outsl
and
aas
shll
sub
pop
mov
sub
in
fsubl
addr16
fsubrl
inc
add
xor
or
cmp
cmc
mov
add
mov
add
and
rolb
and
bsf
mov
call
mov
lret
mov
shll
cli
push
das
fwait
out
add
and
dec
push
xor
mov
out
mov
mov
insl
adc
hlt
or
test
insl
add
xor
andl
cmpsb
mov
xor
rolb
std
rcll
xor
leave
or
fs
xor
loopne
jecxz
ja
imul
daa
es
xor
fdivs
test
push
and
adc
dec
add
pop
lods
mov
pop
popa
aas
scas
or
out
jl
in
xlat
lret
loope
jecxz
pushf
loope
xor
jae
out
mov
movsb
xorl
jg
fimuls
jns
iret
mov
push
enter
sbbl
pop
pop
xchg
xchg
xor
in
enter
mov
jp
ss
in
or
pop
sbb
and
jnp
imul
loope
xor
or
das
fisttpl
shrb
pushf
pop
fnstcw
mov
lods
pop
push
inc
mov
ja
leave
sbb
sbb
les
xchg
mov
insl
gs
add
xor
adc
fiadds
cltd
stos
and
andl
leave
add
out
inc
cmpb
sub
dec
gs
jecxz
jno
xor
push
push
lahf
repnz
enter
cmp
push
mov
jb
es
filds
dec
lahf
or
mov
sbb
dec
push
mov
loopne
jb
mov
in
mov
add
add
push
push
fistps
add
xor
adc
pop
mov
push
cmp
arpl
sbb
jl
xchg
mov
pop
call
sti
daa
cmp
mov
adc
jb
mov
repz
movsl
pop
mov
sub
mov
mov
dec
inc
in
test
sldt
mov
adc
add
ss
push
ret
push
mov
inc
sub
pop
fs
mov
mov
jp
imul
test
cmpsb
out
mov
andl
lods
mov
jo
cmc
insl
das
mov
pop
sub
mov
arpl
jg
cli
ss
dec
sub
lea
imul
sub
and
sub
xor
cmp
enter
adc
lods
lds
jmp
jne
xchg
pushf
int3
aas
dec
jecxz
ja
or
jne
cmp
cmp
lret
in
fwait
inc
fstpt
inc
sbb
or
sbb
lret
cmp
sub
add
imul
sbb
jge
and
inc
xchg
imul
jne
cld
add
ret
popf
pop
push
pop
leave
call
lret
in
pop
lods
mov
ret
fwait
or
add
ss
xchg
inc
jo
mov
out
je,pn
add
pusha
movsl
add
into
and
xlat
push
mov
call
cmp
movsb
inc
mov
sbb
mov
lods
add
mov
xor
outsl
lods
decl
in
out
push
add
ret
mov
jb
xchg
aas
fadds
repnz
mov
repz
outsl
jle
xchg
aam
xor
cmp
xlat
leave
cmc
lea
mov
imul
bound
stos
xchg
sbb
or
loope
mov
cltd
stos
xor
outsb
stos
pop
sahf
js
pop
and
dec
sbb
and
shrb
xor
inc
xchg
xchg
outsl
mov
js
inc
stos
fldenv
faddp
jge
insl
jne
es
outsl
xchg
ja
pop
cmp
dec
adc
popa
sbb
lret
xchg
dec
rcrl
dec
push
sub
xor
cmp
movsb
mov
out
scas
jo
insl
scas
out
jp
lods
cmp
push
lock
out
pop
push
and
test
ror
mov
push
out
movsl
fs
nop
pop
xchg
ja
jnp
xchg
and
sbb
repnz
adc
addr16
idivl
loope
into
push
insl
sarl
lock
adc
jmp
adc
mov
mov
or
push
or
movsb
inc
call
dec
cmpsl
xlat
inc
cmp
adcl
cmpsl
movsb
std
ret
lods
and
and
cmp
cmp
push
mov
xor
sbb
or
pop
mov
cmpsb
cmp
mov
jle
sbb
sbb
inc
cmpsl
xchg
inc
scas
cmpsl
and
and
xor
jns
add
out
das
jne
adc
iret
rcll
xchg
and
fld1
clc
xorb
movsb
inc
jle
dec
cwtl
cmp
pusha
cwtl
push
enter
mov
dec
xor
sbb
in
aad
cmp
imul
dec
dec
xor
cmpsb
leave
cmp
shll
xchg
inc
cwtl
dec
jns
cmp
rclb
push
or
cs
je
mov
aad
jecxz
fimull
xchg
test
cwtl
add
jne
add
sbb
push
push
test
sbb
adc
add
shlb
push
or
push
mov
jo
addl
fiaddl
xchg
clc
lea
mov
add
gs
or
mov
test
mov
mov
jns
mov
je
push
enter
lods
cltd
cmp
jnp
add
mov
test
or
stos
out
leave
stos
hlt
sahf
xchg
call
cmp
and
pop
jb
stc
pop
and
lock
popa
cmp
call
lret
sub
push
addr16
push
xchg
adc
xchg
fcomp
sbb
jl
push
outsl
add
lea
push
push
xchg
mov
dec
jg
jnp
add
lods
std
out
mov
leave
push
pop
insl
and
hlt
xor
out
jnp
es
jo
jo
aad
and
xor
pop
out
outsl
jb
xchg
push
lcall
adc
mov
insl
ss
lcall
push
hlt
lods
push
add
lods
jnp
loop
mov
mov
ds
inc
je
shll
or
dec
xor
mov
ret
mov
into
pop
cmp
sub
enter
movsl
push
jle
mov
ljmp
out
or
in
insl
and
cmp
scas
ffreep
mov
stc
xchg
gs
xor
jbe
inc
inc
ret
dec
scas
inc
jb
pushf
loopne
insl
pushf
leave
and
mov
cmp
insb
cmp
push
and
jmp
addb
stc
aam
rcrb
mov
sub
cmp
out
pop
sub
in
add
mov
inc
mov
add
loopne
add
mov
sbb
push
mov
enter
cmp
mov
dec
jne
std
cwtl
daa
dec
and
cmpsl
insb
fdivr
cs
push
lds
pop
or
mov
arpl
inc
add
and
adcb
repz
and
addr16
or
sbb
add
xchg
jp
and
insl
inc
dec
xor
or
mov
ljmp
rcrl
enter
xor
mov
add
add
in
cmp
inc
cmp
ret
imul
das
das
ret
or
sarb
jns
mov
push
add
std
sbb
int
es
mov
fiaddl
and
ret
or
adc
cmp
mov
jbe
push
scas
mov
cmp
push
jl
mov
fstl
bound
or
into
jbe
inc
fs
std
add
in
and
sub
fidivrl
adc
outsl
aam
iret
xchg
xlat
push
inc
clc
and
pop
jns
adc
mov
jmp
loope
ret
mov
mov
push
orb
pop
push
ret
ret
sub
inc
andnps
out
sub
sarb
inc
fisubrl
es
test
in
jb
aas
push
fcmovbe
fsubrl
dec
sub
fidivrl
adc
sub
mov
adc
or
add
aas
cmp
out
cmp
jge
inc
out
cmpb
ret
loope
sub
inc
movsl
shlb
and
jae
orb
xor
cwtl
mov
fst
arpl
and
scas
int3
push
aam
mov
cmp
pop
pop
sbb
xlat
xor
lods
pop
add
out
cmp
mov
movsb
in
inc
data16
std
ret
sub
testb
shlb
push
into
lea
xlat
call
jo
or
and
out
in
cmp
xchg
or
mov
mov
shr
test
lahf
enter
addr16
adc
xchg
ret
test
aaa
in
mov
or
out
add
mov
inc
dec
xchg
push
add
cltd
cmp
popf
fwait
mov
fidivl
imul
je
lods
cmp
test
cmp
insb
push
repz
xor
or
sbb
or
lcall
pop
xor
adc
cmp
sbb
mov
or
and
jno
and
in
jge
cmp
popa
inc
mov
iret
cmp
loopne
shr
xchg
lahf
enter
addr16
out
adc
cmpsb
ret
test
push
jmp
cmp
iret
cmp
fnstcw
scas
popa
jl
dec
sub
push
je
xchg
jmp
cmp
cmp
sbbb
or
cmpsb
cltd
dec
sti
inc
mov
das
cmp
fcomps
jbe
jns
inc
push
push
pop
add
add
cmpsb
adc
xchg
test
add
cmp
pavgb
cmp
test
push
cs
lret
push
fsts
adc
push
lahf
xchg
mov
inc
das
outsl
cwtl
inc
xchg
dec
xchg
popa
std
inc
or
push
enter
mov
sti
mov
inc
cmp
xchg
outsb
inc
push
cmc
jge
adc
popa
and
and
xchg
or
dec
fwait
aaa
jle
or
sbb
shrl
cmp
scas
leave
notl
in
test
bound
inc
jae
sbb
cmpl
bnd
loop
cld
scas
sub
outsl
mov
xchg
push
sbb
dec
xor
jno
add
ja
outsl
jb
pop
inc
xor
fnstcw
es
je
sub
push
sub
shrb
xchg
cs
outsl
mov
out
inc
inc
inc
or
les
push
adc
adc
clc
adcb
dec
xchg
push
and
daa
imul
out
rcll
mov
sahf
sub
out
mov
arpl
ds
out
jl
in
xlat
or
clc
and
pop
loope
sbb
ja
movsb
ret
jno
pop
fdivl
or
shll
pop
adc
sbb
iret
ret
cmpsb
sbb
orb
test
cmp
ret
cmp
jmp
aas
jae
lods
push
sbb
push
aas
push
dec
mov
adc
fldl
cmp
cmp
lret
enter
mov
push
adc
fmuls
sbb
jl
mov
cs
aas
inc
pop
push
mov
push
jg
push
scas
xor
fucomp
test
jle
cmp
jne
out
lds
rorb
dec
pop
dec
imulb
cmp
jg
sbbl
or
int
mov
sti
and
and
test
loopne
fnstsw
jns
mov
into
xchg
pop
xchg
in
jae
rcrb
aad
fwait
enter
mov
adc
dec
out
dec
pop
mov
mov
xor
pop
adc
jmp
xchg
aam
inc
mov
or
out
or
imul
xor
mov
mov
popf
in
test
cmc
mov
jmp
loopne
add
mov
pop
in
sub
loop
jge
sbb
cli
fnstenv
fstl
je
int
push
repnz
lock
ficoml
addr16
push
clc
lahf
mov
movsl
outsb
xlat
mov
inc
jns
cmp
dec
push
dec
imul
push
pop
jb
jecxz
adc
andb
mov
lret
fsubr
push
inc
pop
out
into
loopne
pop
mov
clc
fdivs
adc
add
xor
dec
loopne
lret
xor
mov
dec
jb
loopne
add
cmpsl
push
inc
loopne
in
xchg
out
mov
fs
mov
pop
lret
push
mov
inc
and
fistpl
lods
or
repnz
sbb
mov
out
test
sbb
or
push
sti
jae
ljmp
xchg
pop
ss
in
and
or
pop
pop
jmp
jbe
outsl
popa
hlt
popa
mov
cmp
roll
mov
mov
jmp
loope
cmp
outsl
ljmp
xor
aas
mov
in
push
leave
testb
fiadds
xchg
aad
enter
dec
dec
leave
pop
push
dec
ret
lea
mov
or
test
jno
xor
jb
push
and
adc
push
aas
mov
bound
ficoms
lret
les
mov
shlb
push
cli
pop
inc
mov
loope
pop
lret
mov
push
or
shrb
mov
push
das
outsl
cli
push
mov
insb
insl
scas
xor
xchg
xchg
in
daa
mov
iret
mov
test
subl
adc
xchg
js
pop
int
in
ret
push
lahf
push
nop
cwtl
js
sub
enter
rorb
sti
sbb
icebp
fstpt
addr16
setno
into
dec
mov
pop
aas
ja
sub
xchg
js
sbb
into
mov
shrb
mov
pop
xchg
sbb
dec
sub
jle
push
jle
pop
iret
fnsave
pop
inc
and
fsubr
sti
jmp
or
inc
scas
lcall
cmc
xchg
or
jnp
jb
cmp
fld
cmp
aam
das
imul
push
mov
clc
lods
xor
repz
lds
push
mov
xor
dec
mov
or
movsl
cmp
or
shl
mov
dec
stc
inc
ljmp
frstor
clc
inc
sarb
sub
jns
inc
in
sbb
popf
repz
and
mov
sub
imul
cmpb
sub
or
sahf
sub
inc
out
sub
in
and
dec
jae
loope
sbb
pop
sub
jmp
les
daa
jo
jo
aad
es
inc
stos
mov
shll
es
leave
mov
dec
jne
xchg
imul
inc
insl
adc
push
pop
dec
pop
add
into
adc
out
or
ficoms
and
repnz
sub
sbb
lds
push
inc
sbb
jmp
sub
add
subb
cmp
mov
sub
lods
xorl
or
pop
cwtl
cmpsl
call
test
push
adc
and
imulb
dec
in
gs
sbb
loope
call
xor
inc
jl
mov
sti
aam
pop
mov
cmp
xchg
mov
repz
fdivr
subb
pop
test
pmuludq
imul
repz
shll
pop
mov
loop
jns
repnz
imul
rclb
aad
sub
pusha
lods
popa
shl
arpl
pop
lcall
pop
inc
xor
pop
pop
pop
mov
adc
dec
jecxz
inc
sub
dec
jle
jg
push
or
and
and
outsl
andb
movsb
insb
pop
pop
push
pop
pop
sub
sub
stc
outsl
or
inc
stos
jmp
xor
out
or
adc
out
adc
pop
xor
fimull
aam
mov
in
cld
sti
cmp
mov
popa
sub
andb
mull
add
loope
jp
roll
mov
jecxz
inc
jns
adc
dec
shll
pop
mov
loop
jns
bnd
or
cmpl
sub
pusha
lods
outsl
rol
xchg
lret
inc
mov
pop
sub
test
je
movsl
jne
dec
or
lea
daa
sti
push
mov
and
loop
call
inc
es
sbb
fbld
imul
sub
dec
popa
sub
jmp
inc
outsb
and
inc
xchg
loopne
jo
in
ja
out
jnp
notb
xor
push
stos
hlt
and
pushf
mov
jae
psllw
pusha
dec
cmp
jl
pop
fisttpll
pop
divb
and
pop
in
pushf
int3
in
fstpl
dec
mov
out
sub
sbb
gs
push
hlt
mov
inc
jnp
mov
data16
clc
icebp
push
cwtl
icebp
xor
dec
stos
repz
inc
repnz
loope
mov
popa
icebp
cmp
fsubrl
jmp
xchg
pushf
sbb
movsl
lods
and
xor
popf
dec
jno
pop
daa
push
push
or
aam
test
mov
in
push
das
xchg
pop
pop
or
stos
or
and
mov
cmp
popa
adc
mov
daa
xlat
and
jmp
push
mov
push
mov
cmp
mov
lret
bound
test
mov
sub
loopne
lock
push
daa
das
sbb
je
and
add
jmp
push
jmp
bound
flds
scas
lock
mov
shll
lea
dec
cmp
push
add
int3
popa
add
popa
dec
and
xchg
repnz
and
dec
cmp
jmp
je
bound
inc
cli
mov
cwtl
fcmovb
or
imul
js
aaa
inc
lret
push
cli
daa
adc
bound
xor
pushf
inc
cmc
sub
das
test
leave
sbb
arpl
mov
fstps
das
icebp
aaa
sub
lea
in
mov
bound
sbb
ret
jmp
aad
push
mov
repz
mov
jge
sub
add
icebp
lock
divl
arpl
fnstcw
lea
mov
mov
mov
inc
lds
bound
xchg
xchg
adc
fmull
int3
in
dec
push
jbe
add
cmp
outsl
hlt
int
adc
mov
pop
ljmp
test
cltd
sbb
adc
and
and
sub
mov
adc
outsb
loop
inc
clc
lret
pop
gs
adc
pop
jne
dec
aad
popf
mulb
les
fnsave
and
jne
cld
sbb
adc
cvtpi2ps
aas
sub
das
subl
pop
push
xor
int
dec
popf
and
int3
sub
std
cld
cs
xor
sub
mov
or
add
xlat
xor
je
sbb
fidivrs
sub
test
call
cmp
icebp
mov
add
lds
push
sub
mov
cmc
adc
jmp
aad
and
rorb
dec
cmp
xor
clc
push
mov
fldt
add
jle
dec
hlt
idiv
pop
bound
outsl
icebp
mov
mov
sbb
enter
xchg
in
cmpsl
lahf
jge
xchg
cwtl
dec
and
inc
sub
bound
scas
or
mov
dec
and
aas
rep
dec
pmuludq
xchg
lret
add
icebp
sarb
cmc
shll
dec
popf
xor
stc
inc
bound
das
pop
rcl
xchg
dec
stc
lsl
mov
sti
fisttps
sub
imul
dec
push
daa
sbb
add
jle
dec
loopne
dec
fnstenv
dec
dec
addb
cli
bound
cld
repnz
adc
cmc
lea
repnz
inc
mov
and
and
xchg
mov
or
xchg
jge
out
bound
adc
rcrb
dec
and
jmp
icebp
mov
adc
sub
and
xor
in
inc
pop
cs
dec
push
aas
mov
mov
es
sub
bnd
setbe
xchg
sub
sub
fs
sub
icebp
cmp
mov
dec
cmp
sub
imul
sub
jmp
dec
dec
mov
rolb
insb
sbb
mov
fsub
rorl
ljmp
and
dec
jle
sbb
sub
sub
xchg
icebp
push
add
repz
or
dec
inc
fstpt
and
jge
std
mov
repz
sbb
out
push
les
xor
int
and
outsl
mov
in
stc
sub
and
test
mov
push
cmp
sbb
push
testb
mov
jo
sarl
dec
adc
sti
roll
popa
jne
inc
inc
jne
and
or
aaa
adc
into
inc
sbb
mov
adc
mov
loope
int3
rep
rcl
addl
add
mov
in
shl
mov
mov
shrb
inc
das
dec
shrb
inc
insl
or
sahf
mov
pop
ret
mov
cmp
mov
clc
cmpsb
adc
xor
mov
test
xchg
fmul
jg
sbb
or
jne
fdivr
dec
jno
fwait
test
fbstp
lret
pop
push
cmp
shrb
popa
adcb
clc
aam
jne
add
loopne
push
xor
sub
mov
xor
mov
inc
or
lds
hlt
push
dec
dec
hlt
fnstsw
fidivrl
add
sbb
inc
xchg
shrb
add
xchg
push
dec
leave
mov
loopne
dec
sti
inc
loopne
ficoml
xchg
push
cmp
pop
sti
jnp
out
bound
scas
sbb
push
jb
rcrb
xor
test
or
and
push
mov
xchg
aad
add
or
sarb
sbbl
mov
adc
xor
shlb
push
push
or
sbb
in
movsb
jmp
xor
lds
cmp
push
rclb
stos
dec
test
nop
jbe
adc
pop
jbe
add
test
in
movsb
dec
mov
or
arpl
inc
adc
mov
xchg
sbb
inc
vpaddd
imul
mov
jno
cmp
inc
sbb
xchg
les
add
xor
ret
jecxz
inc
subb
and
aad
push
cmp
fstpl
or
fwait
js
jo
aad
sub
dec
insb
test
push
adc
mov
shlb
push
lds
jge
jle
cmp
add
dec
jns
or
loope
out
push
inc
es
aaa
lds
ret
mov
movsb
in
mov
fcompl
int
push
outsb
loopne
rorl
daa
dec
sub
lret
call
jp
xchg
insb
pop
scas
aaa
iret
pop
adcl
jo
pop
mov
jb
mov
popf
xor
mov
mov
or
lahf
inc
lds
jbe
adc
repz
push
aad
sub
pusha
push
inc
ja
cmp
mov
dec
add
mov
sti
cmpsl
es
mov
ss
xchg
fstl
or
cli
xchg
arpl
ret
inc
orb
inc
push
das
sbb
js
insl
jecxz
inc
inc
mov
fisubl
mov
stos
cmp
insl
mov
insb
cltd
sahf
mov
out
inc
push
mov
push
push
cmp
add
mov
add
jmp
pop
xor
std
outsb
cmp
xor
or
fsub
js
jo
rorl
sub
outsb
sub
and
test
mov
scas
es
and
scas
lock
jae
mov
xor
loope
in
repz
rorl
nop
cmp
mov
sub
pusha
push
inc
ja
cmp
mov
inc
add
mov
outsl
loopne
cmp
and
or
push
es
mov
call
popa
dec
call
les
push
test
loopne
and
xor
das
add
mov
test
gs
gs
stos
adc
sub
mov
or
in
push
fs
push
dec
add
daa
xchg
mov
fsubs
inc
push
sub
mov
sbb
xor
cmpsb
mov
mov
jle
ljmp
jge
or
mov
addl
xor
ss
mov
push
push
push
push
ds
jbe
sub
and
cld
jecxz
and
or
sub
cmp
push
sbb
xor
xor
mov
movsl
adc
push
push
inc
popa
cs
sbb
push
sbb
sbb
jp
ss
inc
sbb
call
arpl
insb
sbb
sub
and
cmp
or
push
jb
push
and
xor
stos
mov
out
mov
das
xor
fsubrl
adc
movsb
adc
gs
jle
int
adc
arpl
push
gs
insl
inc
adc
fs
lds
ret
or
cmpsb
mov
jne
pop
gs
popa
push
mov
mov
xor
cli
sahf
insb
pop
lea
push
and
pop
push
outsl
xor
movl
and
ficomps
mov
and
cs
movsl
push
cltd
dec
pop
cmp
pop
roll
pop
push
cmp
cli
xlat
push
aas
xlat
in
sti
addb
in
bound
lods
jge
mov
popf
mov
enter
and
xor
ja
pop
iret
and
mov
adc
jbe
xor
cmp
sub
pop
pop
mov
inc
in
test
push
aas
in
cmp
adc
jmp
xlat
cmpsb
push
adc
cmpsb
leave
cmp
sub
daa
mov
mov
push
dec
lcall
push
and
lea
sbb
out
add
ret
push
in
mov
pop
mov
in
movntps
mov
push
and
jmp
cmpsb
sub
xor
mov
cmp
pop
sub
cmc
adc
push
push
outsb
outsl
mov
sbbl
xchg
cmp
test
and
mov
adcl
in
test
rcll
fadds
js
mov
stc
test
popf
and
js
inc
arpl
loop
sbb
test
cmpsl
sti
stos
cltd
jmp
rcl
cmp
add
cwtl
cmp
or
or
jge
ss
test
ret
jnp
lahf
dec
pop
rcrl
test
sti
lods
pop
ficomps
sub
adc
inc
mov
fcompl
pop
ret
ss
mov
dec
movsl
mov
pop
dec
fdivl
sub
decb
mulps
xor
jnp
xchg
cmp
inc
inc
hlt
push
insl
jmp
mov
or
add
pushf
int3
add
das
inc
imul
daa
push
pop
jge
add
sti
in
pop
ljmp
ret
pop
pop
test
pusha
add
lcall
mov
mov
data16
outsl
xchg
mov
push
loopne
ss
sub
stos
fsubrl
inc
jmp
xchg
xor
pop
icebp
add
pop
repz
fidivs
outsb
daa
pop
xor
mov
cs
pop
jp
repz
dec
loop
and
dec
mov
lods
xchg
xor
inc
sbb
mov
jmp
xor
data16
pop
je
dec
aas
cmpsl
pusha
mov
push
outsl
jl
in
sub
push
stos
xchg
sbb
cmp
inc
cmpsl
jle
mov
out
push
push
add
cmp
nop
mov
lahf
imulb
sbbl
inc
filds
sbb
js
cmp
push
pop
sub
ja
icebp
jl
out
sti
jge
pop
adc
test
jne
add
mov
lret
fcmovnu
imull
popf
jne
push
iret
fisttps
movsl
cmp
adc
jl
scas
mov
adc
push
inc
mov
jo
stc
cld
arpl
sbb
cwtl
leave
pop
dec
fimull
into
ret
dec
pusha
ret
add
cmp
clc
jl
rcrl
cmp
dec
gs
or
cmc
sbb
idivl
in
jl
mov
shlb
mov
shlb
mov
sarb
mov
rolb
mov
rorb
mov
shl
mov
shl
mov
rol
mov
rcl
mov
shlb
mov
rolb
mov
lret
pusha
sbb
imul
imul
imul
imul
mov
imul
fwait
imul
outsl
imul
pop
imul
dec
imul
gs
stc
imul
xchg
js
lods
addl
mov
xchg
std
and
push
inc
mov
mov
test
int
test
int
test
int
test
int
test
daa
adc
pop
shll
dec
pop
and
bound
push
bound
dec
bound
icebp
push
fcomip
mov
call
icebp
in
bound
icebp
bound
adc
movb
repnz
outsb
dec
mov
paddusb
loope
jns
aad
dec
int
test
int
test
int
test
adc
sub
enter
enter
enter
into
pop
sub
mov
xlat
sub
mov
sbb
leave
xor
pop
int
daa
pop
movsb
ds
pusha
xchg
pop
pop
enter
rcr
adc
cmpl
insl
pusha
sbb
incl
pusha
push
push
fs
cmp
push
repz
pop
xchg
ds
pop
and
mov
pop
or
sbb
adc
shl
mov
shl
mov
rol
scas
mov
imul
push
imul
fiadds
repnz
test
loopne
test
pop
addl
sbb
dec
mov
cli
jne
int
test
int
fidivrs
je
lods
adc
jo
push
ret
push
xchg
imul
push
and
jb
daa
divl
addr16
fwait
adc
jne
adc
cmpsb
adc
add
not
cld
notb
mov
popf
enter
shrb
pop
mov
push
lret
repnz
push
xchg
out
into
loopne
test
mov
sub
inc
cmpl
xorl
test
adc
and
xchg
mov
push
inc
insl
cmp
mov
jmp
in
insl
cmp
insl
mov
movl
pop
pop
inc
je
cs
test
lret
loope
call
cmp
stos
dec
cmp
pop
add
pop
push
hlt
push
outsb
add
imul
rcll
stc
inc
out
push
push
push
cmp
je
addl
xor
sbb
enter
lret
lds
mov
test
sbb
test
ja
loopne
test
in
test
fadds
xor
test
pop
loopne
test
loopne
test
loopne
xchg
add
test
pop
test
add
dec
andl
push
mov
jne
adc
jne
adc
jno
addr16
add
mov
add
addr16
lock
add
addr16
add
adc
mov
add
mov
rcr
dec
mov
mov
fistpll
mov
xchg
ss
stos
cmp
test
sub
out
fwait
testb
xchg
xchg
inc
lret
aad
icebp
mov
fsubl
sti
test
int
test
int
test
int
test
mov
stos
add
adc
loopne,pt
jnp
lock
enter
aad
mov
mov
sarb
mov
ficomps
movsl
les
roll
enter
xlat
sbb
enter
enter
fstpl
mov
hlt
inc
sbb
jb
jmp
xor
pop
popa
enter
enter
enter
enter
enter
enter
enter
mov
adc
sbbl
sub
sarl
jb
jmp
mov
pop
mov
add
mov
pop
mov
enter
enter
enter
enter
enter
inc
out
push
roll
push
and
icebp
xor
icebp
add
icebp
adc
add
arpl
dec
andl
test
push
popf
test
cwtl
inc
icebp
nop
inc
leave
test
roll
push
pop
add
sub
mov
or
filds
sub
sarb
popf
imul
gs
insl
push
icebp
test
icebp
popf
bound
push
push
sub
insl
pop
decb
insl
or
popa
insl
add
jns
ret
insl
adc
dec
bound
sub
call
inc
cltd
clc
inc
xchg
lock
jmp
fisttps
sub
pop
inc
cmp
aam
in
sbb
jno
adc
sub
and
cmp
les
cld
inc
popf
hlt
inc
xchg
mov
test
pushf
inc
leave
fisttps
and
inc
inc
cmp
pop
inc
xor
push
inc
or
push
inc
jne
sub
and
cmp
xor
enter
clc
inc
xchg
mov
test
pushf
inc
std
xchg
inc
cmc
popa
scas
outsb
adc
test
int
test
int
test
int
test
mov
xchg
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
out
jno
jle
shrl
push
fldcw
or
lahf
dec
adc
mov
addl
ljmp
test
loopne
test
loopne
cmp
adc
ja
lcall
sub
lds
add
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
int
test
daa
push
in
pop
fnstcw
mov
ds
lret
and
les
mov
sub
test
add
test
mulb
adc
stos
test
cld
stos
popf
cmp
push
mov
nop
mov
in
jo
mov
shrb
loope
jbe
jmp
sarb
mov
rolb
mov
rorb
mov
rclb
mov
mov
dec
inc
lock
addl
shl
icebp
pop
cmp
pop
inc
xor
push
inc
or
popf
mov
mov
fisttps
mov
xor
cmpb
cmp
jne
daa
xlat
jge
push
jg
mov
mov
sub
mov
test
int
test
int
test
int
test
int
test
int
test
int
lahf
pop
imul
popf
xchg
adc
fcmovb
adc
rolb
mov
shrb
into
test
adc
popf
adc
cmpl
jge
movsb
pusha
mov
addr16
pop
inc
fstpl
push
insl
sbb
rorb
shl
xchg
cmpl
pop
push
push
imul
xchg
rcrb
mov
fcmovu
rep
and
lds
imul
xor
sub
mov
and
mov
sbbl
daa
push
sub
sub
test
subl
movsb
add
lret
out
jle
insl
sub
cmpsl
arpl
xor
push
add
mov
push
movsl
cwtl
aam
rolb
sbb
pop
out
lcall
or
jecxz
cmp
cmp
aaa
adc
adc
pop
adc
lret
adc
rolb
xchg
lea
out
enter
enter
loope
jb
repz
pop
decb
pusha
gs
adc
push
or
adc
jmp
xchg
push
fcoms
xor
ljmp
movsl
mov
aad
and
out
cvtdq2ps
ds
bound
xchg
mov
xchg
and
lds
arpl
stos
shll
mov
or
adc
sub
stos
sbb
add
andl
ss
popa
push
popa
fdivrp
jno
sbbl
add
mov
pop
in
ljmp
sub
mov
call
sub
mov
add
stos
push
jbe
fwait
cmpsl
ds
push
sub
test
cs
mov
es
lahf
sbb
out
sub
popf
ficomps
pop
xor
into
push
mov
jbe
adc
fmulp
xor
in
sbb
mov
std
lret
dec
ljmp
insb
lock
aaa
rclb
adcl
dec
arpl
adc
repnz
daa
sbb
sbb
icebp
xchg
arpl
adc
test
call
cld
pop
std
add
fldt
add
out
and
in
push
xlat
dec
adc
in
lcall
pop
hlt
enter
xlat
mov
jo
in
imul
pusha
pusha
outsl
outsl
cmp
sub
mov
add
addr16
cli
bound
cld
lahf
test
sub
pushf
out
loopne
jle
insl
sbb
mov
insl
aam
mov
in
decb
insl
cld
hlt
popf
rcr
repnz
and
mov
mov
rol
mov
rcr
mov
shrb
mov
rorb
scas
repz
add
mov
shrl
mov
mov
jne
adc
into
inc
mov
out
inc
adc
inc
xchg
mov
sahf
inc
repz
icebp
lsl
cwtl
mov
jecxz
js
shrl
pop
mov
shrb
mov
fistpll
ljmp
icebp
stos
lock
and
fwait
xor
jmp
xchg
sti
test
cmp
sbb
adc
inc
pusha
adc
add
ret
push
mov
inc
int
insl
pop
cmp
stos
je
cmp
jmp
scas
push
or
xorl
add
add
std
xor
fnstsw
dec
rorb
ret
adc
inc
push
shlb
lret
jge
sbb
in
sub
push
jb
sarl
sub
in
sbb
jle
adc
dec
sbb
lock
xor
xor
std
jno
aad
xor
xchg
pusha
stos
adc
pop
popa
ljmp
mov
jnp
mov
shl
pushf
adc
aas
pop
sbb
pusha
out
imul
cmp
dec
movsl
add
jl
addl
mov
sbb
iret
sbb
cli
jo
popa
push
jnp
into
call
push
adc
negl
push
shlb
stos
imul
arpl
into
adc
xchg
mov
push
insl
jne
adc
test
pop
imul
push
int
test
int
test
mov
mov
sub
xchg
pop
dec
adc
ljmp
jmp
int
scas
cmp
push
lret
shlb
push
xlat
jp
mov
fistpll
sbb
lock
int
cmp
daa
xlat
jo
mov
ret
frstor
push
addr16
pushf
lods
jae
inc
movsb
ret
mov
pop
popa
arpl
subl
sub
lea
cmp
aas
xlat
rcll
lcall
jne
adc
xchg
add
arpl
and
mov
xchg
stos
idivl
push
push
pop
sarl
jecxz
jns
lock
insl
les
frstor
inc
mov
sub
in
add
jl
jp
mov
dec
xchg
stos
into
cmp
ja
inc
xchg
mov
push
out
push
in
jno
mov
ljmp
das
ds
pop
cmpsl
ds
xchg
cltd
xor
ljmp
mov
enter
and
pop
icebp
xor
cs
inc
fildll
and
add
lds
outsl
test
cmpsl
std
jb
jne
xchg
rcrl
ds
popf
lds
xchg
les
cs
add
adc
inc
repnz
xchg
lds
jnp
outsl
imul
mov
loope
lret
adc
shrb
outsl
fstpt
push
push
xor
movsl
out
dec
push
bound
cltd
xchg
enter
add
popf
dec
div
jmp
dec
adc
sar
sbb
or
je
stc
push
fstps
mov
rorb
mov
arpl
adc
or
mov
clc
fdivr
int3
arpl
lcall
xchg
adc
mov
lret
adc
xchg
push
pop
cmp
push
add
js
dec
repz
insl
add
cs
pop
ss
fldt
jno
push
mov
aam
gs
insl
imul
push
lahf
dec
test
sbb
adcb
repnz
outsb
or
rcr
arpl
sub
outsl
mov
pop
pop
int
and
inc
pushf
gs
test
loopne
test
loopne
fs
andl
and
ljmp
hlt
xchg
mov
inc
push
pop
cld
jae,pt
in
pop
xor
insl
pop
or
add
sarb
mov
les
xor
jle
imul
cs
xchg
jne
adc
inc
mov
cld
or
pop
xor
cmp
cmpl
cmpsb
test
loopne
test
add
mov
or
int
jo
mov
mov
xor
or
addr16
jle
pusha
mov
mov
mov
jecxz
pop
daa
mov
gs
sti
dec
xchg
pop
loopne
sbb
shlb
mov
enter
aam
addl
pop
bound
sub
xor
mov
addr16
packssdw
out
inc
mov
sbbl
enter
cmp
pop
inc
stos
add
icebp
enter
inc
insl
cmp
push
adc
mov
jg
or
jne
dec
insl
and
push
insl
ret
insl
jmp
out
lds
fisubl
jecxz
fldpi
lea
mov
adc
mov
mov
adc
jp
mov
cmp
mov
bound
adc
lock
sbb
adc
jne
push
cmp
stos
data16
pop
sbb
enter
test
loopne
sub
out
adc
dec
dec
adc
sbb
jae
add
insl
icebp
cld
dec
pop
das
cld
jbe
sti
add
mov
stos
mov
hlt
sub
jae
xchg
stc
sbb
pop
inc
ss
mov
xchg
or
sub
pop
pop
stos
loope
push
xor
inc
cli
fmul
adc
pop
add
jl
sbb
or
add
ffreep
xchg
test
fists
aam
xchg
pop
or
jg
adc
std
ljmp
filds
mov
push
inc
push
nop
ss
lods
add
pusha
cwtl
xor
arpl
mov
mov
daa
cmpsl
adc
insl
add
decb
cmp
xor
mov
iret
loop
arpl
cmp
in
xchg
loop
stc
negl
movb
scas
mov
or
mov
push
clc
int
test
int
jne
or
fwait
inc
lcall
mov
xchg
jl
out
lcall
sti
aam
pop
ljmp
je
push
pop
push
push
mov
rcr
mov
mov
xchg
dec
repz
dec
sub
add
jae
rcrl
es
mov
mov
test
mov
xor
aam
cmp
adc
dec
lock
or
or
jo
test
gs
xchg
insl
icebp
in
lahf
icebp
aad
and
cmc
inc
pusha
jg
lret
push
push
faddl
ret
daa
jmp
sub
test
pop
sub
sub
stos
mov
jp
cmp
adc
das
adc
subl
mov
shll
ja
aaa
inc
mov
shrb
repnz
imul
jo
popa
adc
test
add
loope
mov
ret
and
push
cmp
out
imul
popa
sbb
inc
and
int3
fstp
rorl
jp
mov
sub
negb
daa
push
pop
aad
sub
test
jne
push
and
push
pop
mov
and
lahf
sbb
ds
pop
dec
pop
cmp
cmp
icebp
jne
or
mov
cmovbe
cmp
stos
dec
cmp
pop
fcmovnu
in
dec
stc
jne
push
mov
xlat
lcall
lahf
xchg
or
mov
add
jmp
pop
mov
cmp
ds
ja
stc
and
jno
pop
or
xchg
inc
std
inc
loopne
nop
inc
iret
aam
out
add
xor
into
repnz
adc
or
adc
dec
mov
mov
mov
aas
dec
inc
fyl2x
pop
xlat
sub
shll
out
sub
cli
jmp
icebp
movsb
fyl2x
mov
icebp
shlb
push
es
jb
or
lods
mov
cltd
ret
enter
cli
dec
push
add
iret
imul
into
fiadds
jnp
sub
decl
mov
fs
pop
neg
stos
pop
and
gs
pop
xchg
push
clc
adc
mov
rorl
sbb
mov
out
sub
mov
sbbl
push
sub
dec
lahf
jbe
fmull
fidivl
push
popa
cmp
dec
lock
xlat
clc
push
pop
ss
mov
dec
push
ja
or
cli
xor
pop
aad
and
sarl
add
cmc
jo
fisubs
mov
stos
pop
aam
dec
pop
cmp
adc
les
mov
into
push
inc
jmp
int
sbb
xchg
adc
jb
xor
iret
outsb
mov
inc
leave
jne
add
mov
adc
pop
xor
movsl
aam
subl
cmp
daa
icebp
and
push
insl
aam
fisubrl
out
lds
iret
or
cmc
scas
imul
jmp
or
out
push
adc
sbb
jbe
ds
jne
mov
shufps
cmp
add
leave
pop
xchg
adc
lock
shrl
xor
rol
mov
push
daa
push
fs
sub
inc
bound
sub
lods
sbb
xlat
icebp
ss
sarb
adc
imul
daa
xchg
test
aaa
push
xchg
push
xchg
aam
ror
andl
xchg
mov
mov
pop
out
mov
lods
pop
and
jb
or
fidivrs
out
adc
pop
xchg
dec
es
pushf
dec
and
jl
mov
rorb
mov
fistpl
out
mov
fwait
loope
jge
or
imul
mov
adc
jle
push
int
rcrl
or
stos
daa
cmp
aas
cmp
scas
cmp
dec
daa
shl
jmp
fwait
jmp
or
in
add
insl
xor
xor
jbe
addr16
pop
mov
out
and
mov
addr16
lock
jb
call
ds
push
ret
and
addr16
fimuls
insl
ds
test
or
pop
ret
and
sbb
mov
es
xor
sbb
add
sub
lods
sbb
popa
pop
pop
xor
inc
pop
repnz
dec
adc
out
stos
lahf
cmp
pop
data16
sbb
or
lods
ljmp
dec
and
int3
ret
in
push
mov
mov
lcallw
shll
lods
enter
xchg
repz
adc
dec
repz
leave
aas
inc
sbb
lret
or
pop
mov
mov
in
in
cmp
xchg
scas
sub
into
inc
scas
adc
in
int
test
int
test
adc
push
inc
add
cmpsb
test
add
bound
mov
out
ds
xchg
loop,pt
gs
sbb
mov
push
ss
sahf
jo
mov
add
bound
dec
fdivrl
inc
push
ja
inc
rcrb
sub
mov
jp
mov
aad
pop
fsubr
cmp
stos
adc
cltd
insb
std
add
filds
xor
iret
cmp
push
aad
mov
out
lret
cld
adc
flds
aad
rorb
sub
sub
adc
push
xchg
inc
outsb
adc
pop
push
jmp
lods
mov
xor
aaa
fdivrp
arpl
jmp
imul
das
ss
push
into
inc
scas
push
insb
xchg
int
cmp
push
outsl
mov
adc
cmpsl
cmc
fistpll
or
stc
popf
and
test
inc
enter
stos
inc
scas
xchg
xor
push
subl
outsb
and
dec
mov
bound
imulb
testb
mov
int
xchg
pop
mov
ret
pop
push
mov
jno
call
mov
sti
imull
dec
push
sbb
test
aad
mov
jl
xlat
ljmp
inc
adc
mov
pop
push
loopne
inc
and
loope
cmpl
jns
dec
mov
push
pop
movb
stos
mov
lock
mov
mov
mov
mov
cmp
jle
insl
mov
push
adc
or
bound
add
frstpm(287
add
add
sbb
lock
enter
jbe
jle
fistps
xchg
imul
mov
imul
inc
imul
cmp
stos
dec
out
dec
push
out
call
enter
xor
stos
test
dec
cmc
adc
jbe
bound
fsubs
insb
test
std
int3
lret
push
and
jmp
ja
ret
cmc
xchg
push
fmulp
mov
lret
jo
jae
adc
or
leave
mov
cmc
or
enter
shlb
sahf
inc
lea
inc
idiv
pop
fcompp
decl
mov
and
mov
movsb
jmp
jno
bound
insl
or
gs
sbb
jne
mov
out
jge
testb
imul
pop
push
cmpsb
enter
sarl
mov
or
inc
mov
and
aad
jb
jbe
mov
insl
xor
jmp
ss
adc
aaa
out
xchg
or
shl
cmp
es
add
mov
push
fcmovb
fld
loopne
cs
inc
xchg
mov
aas
cmp
sti
sub
mov
inc
jno
mov
adc
loopne
test
in
inc
flds
dec
pop
push
xchg
inc
and
sbb
jge
pop
loopne,pt
cmp
inc
addr16
pop
xor
mov
lods
sub
pop
test
lods
xchg
stos
xchg
dec
cmp
mov
add
into
cli
jmp
push
shlb
pop
sub
dec
mov
dec
jp
inc
and
arpl
jle
out
pop
inc
bound
mov
dec
insl
sbb
inc
dec
dec
mov
push
aam
out
jns
push
adc
imulb
shrb
cs
pop
sbb
testl
outsl
idivb
cltd
es
pop
push
aad
aam
aam
cld
inc
xlat
mov
lods
test
lds
cltd
leave
int3
push
cmp
subb
pop
sub
sub
push
ds
mov
sahf
test
shr
fwait
cltd
loope
adc
sbb
push
push
lods
pop
mov
repnz
mov
adc
jbe
mov
jmp
jo
cmp
cmp
pop
or
cmpb
andb
lods
and
inc
xor
pusha
push
sub
mov
daa
adc
add
mov
adc
sbbb
dec
cmp
mov
xchg
das
or
cs
andb
mov
cmp
inc
lods
pop
es
das
jo
repnz
shlb
sti
jge
sub
fildl
cmp
cmpl
das
push
je
mov
add
dec
les
aas
jb
clc
add
inc
in
push
test
ljmp
mov
and
push
cmp
xchg
inc
sub
imulb
outsl
pop
push
les
mov
fildl
jno
push
testb
push
and
sti
gs
xchg
pop
xor
andb
jne
sub
xor
fsubs
pop
mov
insb
fs
in
mov
sbb
push
sub
xchg
dec
push
mov
sub
imul
test
jns
sub
popf
sarl
int
push
hlt
ret
rcll
subl
repz
call
jb
dec
jecxz
push
imul
jo
rclb
stos
xchg
call
jl
fldcw
mov
aad
or
rclb
push
fstl
and
sub
aaa
addl
out
lds
or
jp
xor
aaa
imul
and
dec
push
fcmove
mov
clc
inc
gs
sbb
movsl
aam
dec
add
inc
pop
add
xchg
loopne
imul
cs
sub
ds
lahf
pop
int3
jnp
int3
das
xor
jmp
ljmp
cli
jmp
cmc
ds
lds
lea
out
cli
movsb
cmp
add
rcl
fistps
jp
mov
dec
or
add
push
push
fisubs
inc
int3
cltd
mov
xorl
dec
cmc
insb
out
dec
add
je
test
mov
arpl
mov
sbb
xor
xchg
bound
dec
pop
pop
jle
bound
xchg
mov
xchg
mov
jae
lcall
and
cmove
pop
add
insl
cs
fs
cmp
nop
mov
push
add
or
andb
pop
jns
inc
pop
xchg
cmp
pop
or
std
fbstp
cmc
gs
xchg
push
cli
leave
mov
mov
push
mov
movsl
sub
aas
pop
sbb
dec
sub
dec
pop
add
imul
add
enter
jb
in
jae
sti
inc
aas
lea
loope
sahf
mov
pop
xor
mov
out
cwtl
lock
cmpsb
dec
xorb
jo
mov
fldl
xchg
into
mov
test
add
orl
outsb
mov
cmp
cltd
and
mov
inc
loopne
lahf
cmp
xor
arpl
mov
xchg
bound
imul
cmp
xchg
jne
cmp
loop
xor
dec
popa
loope
jo
xchg
sub
dec
arpl
imul
xor
xor
movsb
nop
sub
inc
push
insl
in
ss
in
repz
gs
test
add
subl
push
lods
es
mov
out
adc
pop
dec
jnp
filds
lret
aas
scas
repz
sub
stc
inc
mov
or
mov
mov
call
pop
xor
sbb
repz
movsl
dec
inc
adc
je
stos
hlt
fcmovbe
push
popa
ds
loope
scas
pop
out
xor
fs
out
push
xor
pushf
xor
add
xor
or
dec
add
mov
aaa
fsubr
jb
ret
in
adc
insl
aas
adc
dec
cwtl
and
rcrl
ss
or
jno
sub
pop
jne
out
das
mov
and
sahf
mov
cmp
xchg
mov
sbb
xor
insl
or
mov
rorl
ret
movsl
cwtl
aaa
mov
scas
aaa
nop
pop
orb
push
mov
gs
cwtl
fucomp
mov
lods
cmc
pxor
jnp
or
das
aaa
repnz
add
sbb
jmp
dec
lret
jb
fst
pop
les
push
mov
xchg
and
mov
push
dec
rorb
mov
mov
inc
insb
mov
adc
sub
mov
dec
cmp
pusha
or
sbb
sti
jb
inc
jns
lahf
fcomps
clc
xor
ficoms
xchg
fsts
ds
lret
jnp
jge
mov
add
out
cmp
mov
aad
mov
out
lret
ss
rolb
call
pop
sub
sub
btc
add
add
bsf
not
xor
xor
shr
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
bswap
test
and
adc
bts
dec
and
neg
jmp
lcall
ret
or
shl
xor
or
add
test
xor
mov
add
jmp
lcall
xor
add
add
pop
xor
xchg
push
shl
shr
mov
cmp
test
shr
btc
btc
shl
call
lcall
incl
ret
neg
sub
add
bts
bt
or
inc
not
bts
or
dec
jmp
lcall
shl
cmp
bt
mov
shr
sub
xor
shr
dec
mov
mov
xchg
push
push
xchg
dec
add
add
call
not
shl
test
add
mov
sub
xor
or
add
mov
cmp
movzwl
or
neg
test
dec
or
bt
mov
mov
shl
sub
xchg
mov
or
test
inc
bsf
or
sub
test
jmp
lcall
ret
or
test
add
and
sub
shl
or
btr
call
lcall
add
xorl
pop
xor
xchg
push
shr
neg
adc
xor
neg
cmp
sub
adc
dec
jmp
lcall
stc
add
xchg
ret
neg
sub
inc
shl
cmp
neg
bt
sub
xor
cmp
btr
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
test
not
cmp
cmp
test
shr
jmp
lcall
pop
add
adc
mov
sub
or
add
test
test
btc
add
mov
mov
movsbl
add
or
adc
shl
btc
call
lcall
add
bt
sub
btc
sub
xor
test
xor
or
dec
call
lcall
pop
add
adc
sub
shr
or
or
and
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
movsbl
sub
adc
shr
test
test
bts
shl
call
lcall
dec
bound
ljmp
test
or
test
inc
and
bsf
jmp
lcall
test
out
and
into
add
adc
movzbl
xor
mov
mov
bts
btr
btc
adc
test
movzbl
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
cmp
bts
adc
mov
sub
mov
mov
push
adc
sub
and
xor
test
not
adc
add
not
not
mov
movswl
btr
shl
bsf
and
test
add
mov
test
bts
cmp
test
sub
test
bts
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
test
test
btc
and
not
shl
sub
inc
call
lcall
add
btr
xor
xor
adc
cmp
adc
mov
add
add
inc
cmp
or
inc
bts
mov
adc
sub
mov
or
test
test
sub
test
xor
test
and
test
call
lcall
mov
movzbl
neg
bsf
bt
xor
add
xor
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
and
cmp
adc
bsf
bts
shr
inc
btr
xor
movzwl
btc
test
add
btr
sub
jmp
lcall
cmc
int
mov
mov
into
in
add
add
cmp
mov
add
xor
sub
shr
inc
and
shr
btc
call
lcall
add
not
or
adc
bts
inc
mov
bts
btc
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
or
mov
xor
xor
bswap
shl
shl
sub
mov
shr
and
mov
or
neg
or
or
movswl
or
bts
btr
mov
neg
bts
shr
or
or
mov
add
adc
and
test
add
xor
sub
mov
adc
lea
inc
cmp
jne
or
shl
btr
bt
btr
mov
test
dec
add
shl
mov
and
btc
shl
test
bsf
bt
call
lcall
je
and
cmp
or
or
sub
test
inc
sub
mov
test
add
sub
mov
bswap
sub
test
test
call
lcall
mov
bt
neg
neg
xor
add
or
or
test
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
not
shr
or
or
btr
shr
call
lcall
cmp
test
cmp
shl
cmp
not
xor
shl
add
cmp
bt
btc
xor
add
and
bt
neg
bts
jmp
lcall
mov
shr
bt
and
btc
mov
mov
mov
add
cmp
bt
cmp
test
adc
btr
shl
call
lcall
add
and
bsf
not
btc
neg
xor
neg
test
mov
push
pop
inc
add
loop
test
shl
add
adc
adc
adc
push
decl
mov
add
cmp
test
sub
xor
shr
cmp
or
dec
call
lcall
jmp
out
call
cmp
cmp
add
test
or
inc
push
shll
and
adc
add
mov
shr
sub
test
shr
bt
push
and
dec
cmp
or
cmp
and
bsf
sub
mov
cmp
bsf
btc
adc
sub
test
sub
push
push
pop
add
add
call
dec
bt
btc
sub
btc
sub
bswap
and
xchg
or
inc
mov
bsf
sub
cmp
add
mov
btc
xor
bt
adc
adc
bsf
cmp
dec
call
lcall
mov
rorb
jmp
and
or
cmp
test
add
add
btc
add
shl
or
adc
call
lcall
adc
fnstenv
cmp
shr
sub
test
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
add
mov
not
or
movzwl
bts
cmp
xor
xor
mov
shl
shl
sub
cmp
bsf
call
lcall
sarb
lock
enter
cmp
cmp
mov
mov
xor
cmp
shl
dec
movsbl
neg
and
dec
shr
cmp
je
shl
test
test
test
cmp
xor
and
btc
bswap
add
movzbl
inc
test
movzwl
sub
xor
shr
add
inc
call
lcall
add
add
neg
bts
mov
mov
shr
shl
sub
xor
and
bts
sub
and
xor
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
xor
not
sub
sub
bswap
bts
mov
bt
push
decl
mov
add
test
bts
cmp
movswl
mov
bt
shl
cmp
push
decl
mov
add
test
movzwl
bts
shl
shr
neg
add
mov
add
sub
add
and
or
shr
bts
and
jmp
mov
shr
cmp
test
bts
add
btr
btc
test
mov
btr
not
add
test
cmp
btc
dec
adc
dec
mov
add
test
test
or
shr
and
add
mov
or
sub
shr
btr
xor
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
or
shl
bt
not
add
movsbl
mov
movzwl
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
cmp
and
sub
and
and
shl
push
push
btr
xor
adc
and
dec
or
or
xor
push
sub
mov
cmp
test
cmp
xor
bts
movswl
shr
not
or
mov
mov
mov
and
btc
dec
bt
adc
movsbl
btc
cmp
call
lcall
js
rcl
mov
push
add
and
inc
and
adc
and
lea
or
add
or
add
shl
not
and
or
inc
mov
shl
mov
shr
not
cmp
cmp
movsbl
shl
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
mov
into
loope
cli
enter
bts
xor
bts
cmp
sub
mov
mov
xor
btr
xor
sub
mov
adc
push
mov
adc
btr
btc
xor
sub
and
bsf
cmp
push
not
shl
cmp
and
btr
mov
shr
shr
movswl
push
sub
or
bsf
btr
xor
test
cmp
call
lcall
mov
sub
xor
inc
adc
cmp
or
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
mov
mov
bts
bts
mov
adc
call
lcall
sub
dec
bswap
inc
cmp
btr
adc
xor
mov
bswap
and
add
xor
shr
neg
btr
btr
cmp
xor
call
lcall
mov
or
xor
mov
shr
and
add
mov
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
mov
ljmp
push
and
btc
adc
jl
loop
arpl
or
mov
dec
test
sbbl
add
popa
xor
cmp
push
ret
lret
add
add
fimull
ret
and
add
mov
fcompl
sti
std
int
push
ret
push
sbb
mov
add
mov
mov
mov
aas
add
cld
sbb
pop
iret
sub
add
mov
stos
std
stos
jecxz
mov
aaa
shll
xor
pop
adc
outsb
add
inc
xor
push
xor
add
loopne
adc
movsl
popa
or
lgdtl
add
or
inc
add
push
pop
sbb
mov
sbb
daa
or
mov
lds
adc
sbb
or
push
mov
sbb
lahf
jmp
and
movups
call
pop
mov
push
adc
inc
dec
inc
push
cmp
xorb
pop
inc
aaa
cmp
dec
pop
sbb
inc
pop
inc
xor
xor
xor
pop
in
push
push
icebp
lock
inc
sbb
dec
add
dec
pop
rclb
push
cmp
jnp
cmp
push
cmovne
cmp
adc
aaa
in
inc
ljmp
dec
mov
push
push
push
inc
inc
jmp
xor
dec
inc
adc
mov
push
dec
cmc
dec
dec
inc
pop
adc
push
test
adcl
in
dec
push
dec
push
cmp
push
dec
add
push
pop
into
jns,pt
nop
push
loop
ljmp
aad
xor
je
out
push
and
pop
cmp
jno
pop
mov
cmp
cmp
inc
xchg
inc
dec
jle
dec
pop
push
inc
push
sub
aaa
in
push
fiaddl
test
add
add
cmp
outsl
jae
and
sbb
jne
jp
jb
popa
outsb
popf
cmp
cmp
je
out
repnz
ljmp
ja
imul
bound
mov
adc
inc
pop
cli
and
outsl
push
sti
ret
cld
adc
push
push
imul
dec
push
xchg
pop
stc
push
gs
repnz
jmp
jp
jbe
stc
shrb
stc
into
inc
es
push
jns
in
arpl
imul
sub
js
adc
bound
xor
outsb
mov
ljmp
inc
lds
jo
gs
outsl
fs
in
jbe
push
or
inc
daa
jmp
dec
nop
sbb
fimuls
movsb
dec
adc
ficomps
or
cs
cs
aad
or
mov
add
pop
add
push
je
or
jnp
jmp
add
sub
cmp
sbb
adc
insl
inc
int3
lods
pop
xlat
sbb
dec
popa
addr16
add
test
outsl
fadds
and
and
test
and
out
xor
loop
fs
fs
xchg
jns
je,pn
rcrl
in
das
cmp
mov
jo
insb
divl
aad
lret
inc
stos
add
and
lds
or
jb
jle,pn
ljmp
add
push
push
inc
push
inc
pop
lcall
dec
or
inc
dec
add
mov
