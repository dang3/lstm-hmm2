add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
stc
xor
add
add
add
push
jo
arpl
add
mov
add
adc
add
add
add
add
jb,pn
jb
add
add
lock
add
or
add
add
sub
stos
push
or
cmc
cmp
movsb
js
cmp
test
arpl
push
add
cwtl
outsb
loop
ds
lea
jp
xchg
int
imul
sub
and
cmp
xchg
les
mov
fstps
shll
xlat
lods
cwtl
inc
sub
pop
mov
scas
mov
mov
imul
jno
jno
fs
dec
lret
mov
add
mov
scas
fcomp
jp
not
push
mov
jg
int
adc
cwtl
cltd
clc
jns
and
pop
shr
push
push
or
and
lods
add
jecxz
and
inc
out
popa
sbb
fildll
inc
pop
adc
lcall
popa
cmp
cmp
test
std
mov
xchg
cmp
xchg
xor
enter
xor
stc
cmpsb
dec
sub
push
mov
dec
mov
mov
mov
test
xchg
and
push
xchg
shll
pop
mov
and
cmc
cs
mov
mov
push
ficoml
cmp
jmp
xor
jns
and
push
xor
sbb
out
jbe
pop
lods
push
into
cs
rol
hlt
in
sbb
lret
enter
movb
das
sub
rcll
loop
test
ja
lods
lds
cmp
mov
inc
or
push
mov
mov
inc
imul
outsb
mov
inc
or
jb
inc
pop
jno
leave
shlb
xor
lret
mov
jno
pop
ret
cmp
xchg
push
add
fwait
inc
xchg
gs
inc
js
xor
or
mov
js
sub
mov
jo
fistl
nop
mov
mov
es
xchg
mov
mov
fcmove
mov
sub
mov
rcrb
sbb
cmp
mov
sub
insl
xchg
xrelease
cmc
mov
lahf
loope
sub
mov
into
fimuls
mov
outsb
insl
jge
sahf
scas
out
or
xor
jo
sub
push
loope
daa
jbe
test
xchg
pop
daa
and
adc
je
das
mov
push
mov
dec
rolb
jae
cmpsl
and
in
pop
inc
int
xchg
mov
gs
sbb
dec
pop
push
lret
test
into
mov
sbb
lea
aad
mov
jne
mov
out
shl
add
dec
testl
cmp
xchg
rcll
jae
mov
repz
jl
mov
fimuls
adc
aam
loope
popf
fdivr
or
nop
aam
fucompp
std
jo
je
mov
fbld
and
mov
adc
jns
mov
nop
addr16
inc
mov
into
rorl
and
pop
xchg
jae
mov
sar
inc
mov
sbb
mov
mov
pop
mov
push
mov
shrl
cs
cwtl
bnd
xorb
ret
sbb
psrad
and
movsb
icebp
stc
or
ja
in
jle
je
popa
and
or
xchg
outsb
test
xor
dec
adc
divl
and
sub
pushf
lcall
inc
mov
inc
dec
or
sub
ret
adc
pop
pushf
xchg
mov
add
mov
stos
hlt
pop
sub
fidivs
nop
sti
xor
ljmp
mov
jle
inc
push
jp
mov
sbb
das
cld
push
shll
cld
fildl
lods
mov
jle
in
rcrl
mov
es
xor
mov
hlt
popa
out
xlat
push
test
int3
outsl
ja
lahf
push
jns
mov
jo
sub
dec
mov
lock
loopne
xchg
mov
out
into
xor
or
xlat
gs
lods
sub
cmp
jp
pop
ficomps
sahf
push
or
dec
repz
adc
jle
push
out
add
xor
lods
call
pushf
mov
imul
ficoml
xchg
js
fcompl
push
cltd
mov
icebp
fdivrs
adc
clc
scas
movsb
ss
lea
pop
adc
dec
adc
push
stos
dec
into
mov
fs
gs
push
push
jg
in
mov
cmp
loop
cmp
aam
mov
xor
adc
push
shlb
or
in
cld
xor
mov
mov
out
cld
sarb
sbb
lret
pop
and
add
cmp
loopne
adcl
shlb
sbb
sub
pop
ss
cld
or
lahf
add
jbe
jg
std
and
fs
push
and
into
xchg
push
inc
pop
fsubr
fxch
inc
nop
inc
mov
mov
add
or
adc
test
vcvtss2si
es
add
outsb
movsl
push
cmpsb
lods
stos
test
stos
enter
dec
fs
test
pop
ficompl
dec
jne
xchg
mov
test
cmp
sub
mov
into
mov
insl
mov
sbbb
dec
xor
sti
mov
pop
aad
sub
cmp
jmp
popf
jmp
bound
sbb
mov
daa
lret
jp
pop
fs
push
adc
out
scas
cltd
fsubr
add
xchg
imul
scas
dec
mov
push
fld
into
int3
imul
mov
lea
shl
testb
fidivrs
popf
and
inc
xchg
imul
in
xor
sub
stos
push
dec
mov
sub
pop
push
xchg
or
jmp
lret
lret
push
jecxz
pop
sub
lods
pop
cmp
popf
andl
push
mov
xchg
mov
js
mov
adc
ret
lcall
scas
push
popa
leave
lahf
imul
xchg
dec
cmpsl
loope
inc
jle
les
or
shlb
arpl
pop
adc
sbb
mov
mov
ret
pop
sbb
fwait
mov
push
cmp
aam
mov
jns
jg
adc
push
add
push
cmp
loop
mov
sub
xchg
pop
jo
dec
insb
icebp
lock
push
sbb
fstl
cmp
imulb
pop
sub
xor
fldcw
add
jne
xchg
outsb
cwtl
or
xchg
lock
rcll
fwait
sbb
setp
test
push
xchg
xor
aad
xlat
add
push
pop
jbe
mull
test
or
xchg
xor
insb
push
shll
push
lds
in
xlat
dec
and
rcll
imul
cmp
lahf
in
sub
jbe
addr16
ror
popl
push
xchg
popa
pop
inc
push
sbb
jo
pushf
dec
xor
icebp
add
jmp
outsb
inc
or
add
aad
ljmp
xchg
cmpsl
pop
or
into
or
mov
push
aas
sub
inc
rol
cmc
out
popf
mov
jnp
out
loope
mov
fsubrs
add
or
sbb
ljmp
pushf
jb
in
jo
leave
xor
cmp
int3
pop
xor
sub
insb
lret
add
push
mov
lret
mov
add
jne
lret
movsb
jge
iret
cmp
leave
inc
adc
andb
dec
aas
jle
jg
or
ficomps
sub
xchg
out
stos
imul
loop
sbb
dec
test
popa
sbb
inc
in
int
gs
repz
insl
cltd
fisubl
push
mov
cmp
mov
loope
fiadds
adc
push
jb
andb
popf
or
xor
adc
mov
xor
scas
mov
cmpsl
shrb
mov
mov
fnstenv
in
mov
add
push
cmp
push
cli
clc
jl
lds
inc
nop
pop
pop
je
sbb
es
jge
push
sbb
ret
sbb
sub
aam
mov
jnp
cs
mov
fs
outsb
in
inc
in
and
repz
xor
shll
mov
jge
andb
stc
and
test
mov
bound
test
or
pop
outsb
mov
js
nop
popf
sahf
adc
push
adc
insl
je
mov
sub
aam
cli
fsubrl
fldl
push
mov
movsl
cltd
push
or
sub
pop
push
inc
sub
mov
leave
loopne
rep
adc
jle
inc
jbe
mov
add
jns
das
inc
shrb
inc
xchg
aaa
int
sbb
pusha
popa
dec
test
inc
cmp
ja
shl
leave
sub
je
jo
adc
mov
lahf
in
insl
sbb
fsubrl
add
add
mov
les
add
imul
mov
shr
adc
pop
test
pop
fcompl
cltd
jne
adc
sarb
out
das
xchg
xor
insb
and
adc
xchg
cmc
cs
mov
or
insl
inc
js
out
lds
das
add
add
mov
jmp
aad
push
cmp
pause
and
dec
rcr
adc
cmp
cmc
lcall
inc
xchg
inc
rcl
mov
inc
or
lcall
mull
insb
mov
adc
stos
sub
mov
or
xchg
xchg
xchg
push
arpl
mov
lods
mov
or
xor
fwait
dec
testl
sub
sub
sub
mov
lock
sub
aaa
mov
pop
xchg
repnz
jbe
add
sbb
pop
sub
inc
in
sub
cmp
ret
lahf
jne
and
addb
mov
cmp
je
push
mov
out
push
cmpsb
mov
mov
push
jns
ds
test
lods
or
pop
mov
mov
jg
mov
cmpsb
call
adc
adc
add
nop
mov
hlt
cmp
or
mov
sbb
inc
repz
push
dec
push
or
mov
adcb
add
out
add
test
or
into
jmp
sub
jge
and
jo
sti
mov
mov
ja
aam
cli
pushf
mov
rcll
add
fstpt
push
sbb
xor
cmpsl
test
enter
sarb
lcall
movsl
xor
dec
lods
sub
dec
dec
push
push
sbb
dec
jmp
adc
lea
lock
xchg
repz
mov
dec
sbb
leave
push
enter
lock
inc
out
mov
push
push
or
push
jnp
adc
inc
cld
push
dec
mov
sahf
or
inc
fs
fwait
cltd
popf
jne
pop
rcrl
dec
cwtl
lcall
sbb
sub
pop
push
fwait
pop
iret
pop
jp
ds
loopne
das
cmc
push
pop
testb
dec
mov
fiaddl
in
arpl
xor
rcr
stc
sbb
fwait
cltd
inc
jnp
outsl
mov
adc
stc
adc
dec
lds
jmp
dec
test
lds
inc
out
add
mov
mov
inc
jp
sub
sbbb
data16
xchg
jg
das
fldz
pop
jmp
out
lods
clc
ja
adc
push
sbb
inc
in
pusha
arpl
mov
aam
adcl
mov
ret
jecxz
add
sbb
mov
mov
lods
addb
adc
daa
mov
fldcw
bound
ss
mov
dec
push
enter
and
pop
and
and
jb
jns
sbbb
in
and
rcll
outsl
leave
push
aam
xor
jne
stc
dec
or
popf
inc
and
in
ja
xchg
aam
jp
mov
mov
sahf
xchg
inc
push
inc
jne
dec
movsb
add
in
ljmp
aad
push
fsubrp
mov
and
rcrb
push
and
pop
fcmovnu
dec
push
push
cmp
push
rorl
dec
jle
mov
loope
out
push
inc
int
in
adc
adc
js
mov
adc
aas
push
imul
fwait
outsb
and
aaa
xchg
xchg
mov
std
pop
xor
popf
lahf
pop
mov
arpl
fsubrl
mov
aam
dec
out
in
les
xor
mov
loopne
rolb
movaps
repnz
inc
xor
lods
pop
cmp
cmpl
and
dec
in
add
jne
push
dec
inc
xchg
pusha
test
dec
xor
lahf
mov
and
dec
jg
popa
xor
mov
fidivrl
stos
add
lahf
mov
add
inc
xor
das
rep
xchg
cli
mov
xor
sahf
push
out
adc
mov
arpl
sbb
jl
mov
jnp
repz
add
fs
sbb
lcall
cld
mov
cwtl
bound
push
fistpll
jb
cmp
lock
test
cmp
mov
xor
aaa
mov
and
push
imul
jle
mov
loope
or
xor
shrl
adc
insb
lods
mov
xchg
ss
pop
mov
icebp
lret
sub
inc
push
cmp
cmpsb
adc
dec
cli
jl
vpmovzxbd
jecxz
xlat
pop
stos
dec
imul
and
mov
xchg
in
push
xlat
pop
jecxz
std
inc
aas
mov
cltd
out
adc
mov
ja
pop
imul
and
fwait
out
sub
xchg
mov
in
fcoms
and
dec
mulb
inc
cli
xchg
cmpsb
jno
mov
sti
xlat
out
rorb
jle
pop
xchg
icebp
clc
lods
loopne
xchg
mov
pusha
movsb
cmpsb
inc
out
das
movsl
insb
fs
mov
fistl
lock
rorl
fimuls
cmp
je
push
xchg
cmp
out
xor
ret
add
mov
cmpsb
jmp
jp
shlb
iret
mov
pop
sbb
add
dec
jno
insb
insb
push
das
sbb
pop
push
data16
mov
lock
fldcw
je
lcall
pop
into
xchg
lds
xor
and
sahf
adc
jbe
insb
subb
xchg
pop
inc
jno
aam
std
cli
sti
ss
jae
inc
shlb
push
movsb
negl
mov
jns
jl
push
adc
or
and
cmc
cmp
add
mov
jl
mov
sar
cmpsl
or
pop
mov
mov
mov
std
xor
jmp
mov
mov
add
sbb
call
xchg
jae
ljmp
stc
out
dec
stos
cltd
pop
imul
fcmovne
pusha
incl
sbb
mov
fnstenv
sub
add
mov
push
in
shll
cmc
inc
push
mov
mov
cmp
fcmovnb
dec
mov
ja
sbb
xor
cmp
mov
ret
dec
adc
and
test
ds
int3
and
pusha
outsb
jmp
mov
ret
int3
push
fildll
imul
inc
cmp
clc
leave
lods
sub
out
mov
push
and
or
icebp
ds
popf
cmp
sbb
cld
repnz
mov
aad
sbb
loop
lock
sub
xor
adc
jecxz
adc
iret
and
lcall
test
and
popa
push
or
pop
pop
cltd
push
xor
sbb
mov
adc
repz
jo
bound
je
xor
xlat
hlt
ja
cmp
pop
xlat
xor
mov
jmp
and
adc
sub
push
in
xchg
repz
sbb
test
scas
push
mov
outsb
add
xor
pop
and
xchg
pop
mov
rorb
cwtl
sub
or
pcmpgtb
sbb
dec
pop
les
mov
stos
xor
dec
gs
dec
stos
or
xor
mov
inc
dec
push
fldenv
jb
scas
mov
inc
adcl
lcall
fistpll
pop
in
or
std
mov
adc
sbb
loop
inc
pop
mov
mov
inc
int3
test
or
popf
sbb
sbb
or
dec
mov
xorb
ljmp
xor
jae
and
fidivrs
fbld
pusha
jo
jae
aad
es
mov
mov
xor
sbb
stc
push
fsubrs
push
sbb
xchg
cwtl
cld
mulb
cmc
pop
xchg
mov
adc
js
movsl
add
out
insb
out
cmpsb
inc
fsubrs
xor
mov
push
and
dec
mov
ja
lret
add
add
xchg
push
aas
arpl
pop
clc
cmp
mov
dec
lds
xchg
sbb
ds
movsb
fsubrl
cmp
shrb
out
loop
imul
adc
imul
dec
js
mov
sub
mov
jmp
mov
jno
vpaddusb
jmp
push
shll
pop
add
sti
scas
pop
icebp
lahf
sbb
xor
fstpt
mov
jmp
loope
loopne
or
int
outsl
cmpsl
add
cmp
sbb
jne
or
fmul
jecxz
mov
dec
push
int3
andl
sbb
add
add
clc
loope
dec
push
in
loop
fidivl
mov
jl
subb
out
dec
add
fnstsw
aas
insl
and
into
mov
mov
iret
aaa
lea
mov
jnp
into
fwait
insl
into
lret
lahf
adc
std
cmc
aad
pop
mov
fs
pop
lods
xchg
adc
rorb
sub
dec
fistpll
or
inc
into
xor
push
and
mov
daa
stc
outsb
ljmp
and
sbb
xor
xchg
xchg
lds
lods
jnp
xor
xlat
loopne
push
out
js
adc
mov
lcall
ret
test
sbb
gs
xchg
mov
into
out
mov
cmp
outsl
mov
xchg
xorb
fsubrs
cmp
mov
inc
out
hlt
mov
movsb
jg
shrb
ret
arpl
fcomps
pop
xor
imul
dec
cli
test
jns
dec
or
icebp
imul
loope
xor
mov
test
out
mov
decb
popf
xchg
mov
sbb
adc
inc
push
or
fs
dec
push
push
fwait
xchg
xor
xchg
insl
repnz
and
js
out
or
cmpsb
mov
int3
or
inc
cli
movsl
push
sbb
adc
and
pop
fsubrs
aam
and
aam
add
ret
shlb
popa
push
jle
sbb
lea
cmp
lcall
jecxz
aas
mov
push
leave
and
loop
add
mov
cmp
out
inc
cli
dec
dec
sbb
mov
mov
nop
insl
cmp
jns
pusha
jne
cmp
inc
mov
out
fimuls
ds
mov
jo
pop
test
pop
rcrl
add
xchg
dec
shll
jb
mov
or
inc
mov
and
and
dec
into
adc
push
ja
stos
lods
out
fimuls
inc
icebp
fdivrs
lahf
testl
or
notb
add
loope
mov
mull
mov
xor
dec
dec
jne
xor
inc
sub
dec
mov
mov
or
rol
mov
hlt
push
int
ror
jmp
lods
scas
mov
xchg
into
das
dec
jecxz
rcrb
in
cmpsl
out
pop
ficoml
sbbb
repz
scas
addr16
ljmp
sub
xor
out
fnstsw
jns
nop
loopne
lea
sub
push
loopne
xorb
or
jl
ret
ljmp
mov
jmp
loop
fdivs
mov
sub
push
lret
pop
mov
adc
fxam
inc
sbb
xchg
sbb
sbb
stos
les
xchg
mov
fwait
aad
test
cmp
lods
dec
pop
ret
mov
mov
hlt
movsb
loope
xchg
adc
or
push
fildll
sbb
aaa
push
rcrb
add
xlat
in
dec
xchg
not
negb
xchg
insb
jl
mov
stos
std
sahf
xchg
jae
es
int
mov
loopne
xchg
push
xchg
fstpt
mov
std
fldt
push
push
rcl
mov
inc
rcrl
cmpsl
lcall
xor
adc
sti
mov
dec
popa
fsubr
pop
add
fcoml
ds
fldcw
out
aad
sbb
push
les
inc
inc
das
enter
pop
add
pop
and
aas
mov
mov
clc
shl
outsl
dec
loopne
jne
inc
cwtl
dec
pushf
cmc
shr
inc
push
and
push
push
test
cld
insl
aad
icebp
cmp
or
daa
lahf
jp
lock
cmp
jns
jl
or
fcmovb
pop
inc
insl
xchg
js
jbe
sti
add
adc
into
out
mov
ficoms
xchg
xchg
adc
in
pop
psllw
lods
arpl
jecxz
xor
loope
adc
sub
cmp
ret
ds
call
xchg
add
and
push
fidivrs
adc
inc
stos
sub
das
cmp
mov
stc
pop
inc
daa
out
loopne
shl
add
cs
sub
lea
dec
or
pop
mov
movsb
jns
fwait
popf
iret
mov
pop
push
mov
sbb
inc
or
loope
adc
jl
sbb
add
xorl
pop
in
int3
pop
dec
pop
push
es
in
add
push
jmp
push
ror
pop
dec
dec
inc
mov
add
ret
cmpsb
mov
jg
xchg
cld
daa
inc
enter
pop
cmp
mov
mov
pop
insl
daa
push
movsb
cld
fisttpll
es
mov
mov
mov
fisubl
loop
shll
xlat
push
stos
dec
mov
hlt
out
adcb
sbb
add
xchg
mov
mov
cmpsb
mov
es
jecxz
inc
hlt
shlb
nop
jle
adc
push
cmp
arpl
ljmp
lock
dec
cmpsl
pop
or
add
enter
pop
cmp
aad
dec
push
cmp
rorl
xchg
rcl
push
or
xchg
and
and
lahf
aaa
add
enter
pop
or
and
sub
xchg
sbb
mov
inc
into
sarb
adc
cmpb
cmpsb
sarb
test
xchg
hlt
push
sub
ja
lock
cld
adc
les
insl
push
mov
es
mulb
mov
ja
in
or
test
sahf
inc
nop
xchg
push
mov
pop
inc
jmp
les
dec
push
cmc
mov
xor
cmc
adc
ret
jae
mov
mov
xchg
mov
cli
cmp
xor
sbb
mov
jmp
sub
or
leave
flds
and
dec
leave
xchg
cltd
cmp
xor
fistps
lods
fsubrl
std
dec
inc
fists
pop
mov
or
push
testb
add
ja
cmp
and
rcrb
inc
pop
mov
addr16
dec
jmp
lret
push
aad
add
adc
xchg
mov
mov
sub
mov
out
mov
and
inc
je
in
push
push
mov
mov
mov
cmpsl
popa
orb
and
push
out
mov
scas
xchg
inc
dec
daa
icebp
pop
sbb
add
loope
add
sbb
int3
sbb
ja
dec
mov
insb
dec
cmp
sub
insl
xchg
pop
xchg
incb
out
mov
push
aam
push
push
or
jecxz
int3
push
xorb
mov
xchg
cmp
and
jne
jb
inc
lock
nop
cwtl
and
pushf
out
gs
in
sub
dec
mov
cmpb
mov
mov
cmp
arpl
lds
add
mov
fstl
push
mov
xor
sbb
cmp
out
mov
je
repnz
stos
and
mov
cmp
pop
adc
adc
sbb
aam
pop
and
idiv
mov
daa
push
adc
and
sbb
jg
or
aam
add
mov
cmp
call
sahf
das
ljmp
cli
push
sub
xchg
shll
test
cltd
mov
sbbb
jno
xchg
test
adc
push
jg
mov
and
inc
cmp
pop
out
push
ret
inc
inc
lea
loop
xchg
sarb
enter
lret
mov
jecxz
in
mov
xchg
rcl
and
popa
add
fs
or
inc
mov
jns
cwtl
mov
xor
testb
ficompl
pop
xlat
mov
lret
shlb
push
loope
cmp
xor
jns
xchg
mov
mov
ret
shl
and
jns
icebp
scas
pop
fstl
scas
jae
ja
push
sub
outsl
rolb
or
addb
out
or
mov
lahf
pop
ja
imul
cli
push
ficompl
aam
and
and
call
sbb
and
adcl
mov
subb
shlb
jg
stos
fidivrl
and
jno
mov
cmpsb
test
ss
and
jae
sub
xchg
adcb
dec
sti
dec
pushf
push
les
repnz
xchg
lods
pop
outsl
jmp
in
fmuls
mov
mov
adc
out
cmpl
and
xlat
pop
or
push
in
in
out
pusha
clc
scas
mov
int3
xchg
in
out
insl
inc
mov
xorb
dec
outsb
inc
enter
fisttpll
ret
push
aam
cld
movsl
dec
lds
sti
scas
mov
mov
imulb
push
loope
xor
cld
lahf
lret
aas
nop
xchg
jg
adc
jp
xor
adc
mov
dec
or
fidivl
fstps
insl
sbb
pop
sub
arpl
mov
pop
jb
mov
and
ror
gs
mov
xor
dec
mov
fadds
scas
fstps
xchg
mov
ja
fld
pop
adc
dec
fsub
pop
ds
cmp
leave
scas
add
aas
enter
sub
sub
rclb
aad
lahf
sbb
fwait
fs
das
pop
or
xor
ljmp
xchg
push
das
rcll
icebp
enter
stc
hlt
data16
roll
jp
add
xor
xchg
add
lods
popf
jbe
cltd
and
ljmp
and
add
mov
adc
or
pusha
and
rorl
fadds
sub
movsb
jg
lods
xor
jp
adc
lds
xchg
iret
and
es
mov
dec
imul
pushl
rcll
adc
add
or
jecxz
les
mov
js
je
push
add
fidivrs
std
imul
lods
jne
and
orb
and
stos
xchg
add
push
mov
cmpsl
push
stos
fs
cmpsb
dec
outsb
popa
sbb
or
ljmp
orl
adc
lock
add
jno
nop
insb
jnp
or
cmp
lret
sahf
mov
push
outsb
and
cmpsl
adcb
jo
mov
adc
xor
and
int3
stc
idiv
and
dec
scas
or
sti
jo
lahf
or
dec
ret
hlt
cld
dec
stos
insl
mov
in
mov
xchg
imul
cmp
inc
out
mov
shl
andl
push
aam
ljmp
sub
test
mov
xchg
inc
ds
mov
jb
insl
rcrb
add
pop
pop
mov
or
das
sti
mov
inc
popf
xor
mov
xchg
ficomps
sti
cmp
daa
push
pop
jmp
cmc
frstor
inc
push
je
xlat
ja
sarb
clc
je
jb
mov
js
cli
mov
inc
sbb
shl
pushf
sbb
arpl
mov
fwait
mov
dec
ljmp
fiadds
xchg
loopne
xchg
cs
or
inc
inc
inc
and
pop
xchg
cli
sub
out
adc
popfw
mov
mov
shr
sbb
lods
sahf
adc
mov
iret
sub
movsl
push
mov
push
addb
or
and
cmc
sub
cmp
and
aaa
mov
dec
pop
arpl
jo
cli
ja
inc
dec
sub
rol
ljmp
std
imul
jecxz
jle
cld
mov
cmp
or
dec
xchg
mov
insl
mov
push
sbb
cmp
gs
arpl
popf
imul
jl
jne
test
push
mov
scas
pusha
repz
cmc
xchg
sub
or
jg
in
xchg
jae
data16
sbb
jb
or
frstor
lret
hlt
out
imul
mov
sbb
jae
scas
push
call
jb
ret
jg
or
mov
sbb
test
testl
pop
inc
ret
aas
movsb
jnp
lcall
movsb
sbb
mov
cmpsl
filds
loop
lcall
inc
movsl
aam
or
bound
pop
jl
ljmp
push
jmp
pop
sub
scas
movl
sahf
ret
das
fs
in
loope
adc
add
addl
mov
in
pop
ljmp
call
add
sbb
push
cmp
lods
jge
aad
mov
daa
mov
aaa
imul
ret
cmp
loope
lock
cmpsb
imul
hlt
inc
pop
add
mov
adc
mov
cltd
cwtl
dec
jnp
jno
dec
xor
adc
in
shl
testb
outsl
push
shlb
sahf
dec
shlb
stos
jns
sti
mov
adc
and
es
cmp
mov
jmp
es
out
pop
js
subl
jecxz
mov
mov
lods
adc
out
mov
imul
inc
fsubl
daa
pop
movsb
movsb
inc
inc
sbb
loop
or
mov
inc
add
push
in
push
pusha
fcmovbe
lret
adcl
std
push
popa
cltd
pop
les
push
unpcklps
ljmp
fcoml
mov
or
mov
xchg
stos
cmp
aam
inc
testb
in
addr16
call
push
mov
sbb
cmpsb
hlt
xchg
jnp
lea
adc
je
inc
xor
scas
sub
jecxz
jno
shrb
inc
sahf
popa
pop
add
test
push
sti
js
loope
in
and
inc
sbb
push
xchg
jmp
pop
vpsadbw
out
adc
std
pop
fwait
add
fistps
lods
sub
mov
int
inc
fidivl
dec
inc
inc
jmp
push
adc
pop
mov
cmp
or
mov
mov
sub
loopne
out
and
loopne
lea
mov
scas
adc
mov
sbb
push
add
and
pop
push
loopne
mov
cld
push
cs
test
fstps
icebp
loope
lret
sub
add
dec
int
xchg
call
outsb
aas
mov
out
ret
dec
dec
cmp
cltd
mov
ljmp
fwait
dec
jae
loop
in
jnp
je
int3
das
js
add
mov
adc
jmp
push
cmp
mov
cwtl
shl
stc
pop
mov
pop
jne
in
orl
aaa
jle
xor
adc
adc
stos
test
or
xor
add
pusha
popa
fdivrp
js
or
xchg
movsbl
call
popl
rcrb
push
or
cmpsb
pusha
or
sub
shll
aam
iret
lret
mov
push
jnp
int3
dec
mov
sub
repz
sub
rclb
pushf
and
adc
mov
xchg
stos
xchg
mov
mov
mov
ret
lock
imul
lods
pop
xor
mov
mov
out
sub
stos
or
cmp
and
sbb
jg
fs
call
mov
add
adc
lcall
cmp
inc
cmp
bound
push
mov
mov
dec
or
xchg
xchg
stos
jp
fxch
in
cmp
jbe
loopne
inc
push
fiaddl
inc
imul
push
jae
repz
dec
jecxz
sub
movsb
shl
ss
aaa
pop
mov
sub
sahf
aas
sub
jecxz
xchg
jge
lcall
mov
fidivs
add
scas
mov
repnz
cmp
test
repz
mov
inc
testb
fmuls
and
push
and
inc
xchg
push
add
pop
sub
cmp
mov
mov
in
int3
stos
cmpsb
in
pop
xchg
fsubr
cld
jg
inc
pop
sub
pop
es
mov
test
dec
call
loopne
jle,pn
mov
aad
out
fnstsw
stc
popf
sub
fmuls
xor
dec
sarb
lods
xchg
inc
cli
mov
daa
cmc
hlt
lahf
add
mov
mov
loop
jno
rcrl
in
push
lahf
fldt
shll
icebp
mov
ljmp
test
sti
add
daa
ja
xchg
xchg
dec
bound
ds
outsl
lock
jb
mov
pop
jle
dec
movsl
scas
sbb
popf
adc
sub
std
test
xor
mov
and
dec
or
cmpsl
jmp
xchg
in
xchg
jae
popa
loopne
mov
rorb
mov
cmp
inc
aaa
ds
mov
stos
imul
clc
aas
mov
hlt
mov
cmp
or
mov
and
mov
add
push
push
cmp
movsb
inc
dec
cmp
shlb
push
js
aam
test
pop
jb
or
cld
cmpsl
lahf
jg
cli
lahf
inc
sbb
xchg
ja
cmc
popf
pop
jle
or
stos
adc
jg
lahf
inc
cmp
push
mov
mull
and
scas
loope
fisttpl
or
shll
rcr
ja
push
push
adc
pop
mov
jmp
mov
das
pop
popf
cmp
push
ds
ds
sbb
fistpl
jns
loope
je
mov
mov
ds
cli
sbb
cmp
and
outsb
push
mov
pop
leave
dec
addr16
push
mov
movb
fmuls
arpl
xchg
test
pop
mov
push
shll
mov
mov
lods
jne
into
mov
add
pushf
jmp
jmp
sbb
aaa
addl
imul
jecxz
mov
mov
mov
cmp
idivl
push
push
push
sbb
or
sub
imulb
sbb
and
pmulhw
aam
sub
push
roll
xchg
fnsave
mov
es
and
cmpsl
mov
movq
outsb
pop
mov
dec
push
jb
adc
loopne
adc
push
cmp
es
sbbb
les
ret
dec
adc
hlt
xor
jmp
sbb
sar
and
cli
lea
and
fcomps
int
call
add
jg
aam
inc
pop
push
es
push
aas
stos
sub
mov
in
push
add
xchg
push
cmpsl
pop
nop
lret
cmp
aaa
jns
sub
loop
in
push
push
cld
out
push
add
dec
and
pop
pop
xor
add
add
pop
mov
or
lock
mov
fsubrl
jbe
ret
lahf
call
and
lea
mov
pop
repz
mov
mov
out
pusha
mov
xor
adc
adc
ss
int3
sbb
int
stos
pushf
xchg
in
jmp
fldenv
gs
mov
ja
bnd
insb
movsl
xor
mov
negl
jbe
mov
test
xor
fcmove
lahf
ffreep
repnz
xchg
cli
xchg
loopne
push
icebp
add
pop
sbb
sbb
inc
outsl
clc
lock
fldenv
pop
cmp
outsl
xchg
insl
jne
das
scas
arpl
insl
push
and
popf
pop
sbb
hlt
lahf
mov
outsl
xor
xchg
add
inc
pop
sub
ret
mov
cmpsl
jecxz
inc
pop
fstp
fistps
dec
jge
pusha
mov
push
out
xor
and
cmpsl
clc
cmc
jmp
out
lods
mov
or
dec
cmp
out
push
mov
pop
xchg
loope
scas
lahf
pushf
jbe
push
mov
stos
shl
or
add
mov
rolb
push
and
hlt
and
add
cmc
lods
add
lgs
and
jle
shl
pop
mov
dec
add
push
insb
cmp
jno
test
xor
rep
or
cltd
dec
dec
push
iret
les
mov
push
sbb
push
add
sub
mov
jno
ret
sgdtl
xor
inc
enter
repz
sbb
fisubs
dec
sbb
sti
add
dec
ror
add
adc
pop
xor
sub
adc
jle
pop
jge
mov
in
popf
push
loopne
mov
cwtl
jo
lods
add
ss
cmpsl
xchg
sub
pusha
sbb
lcall
adc
inc
sub
bound
bsr
fwait
fs
cmc
cmpsb
add
add
or
xchg
stos
pop
fs
push
push
pop
mov
iret
ds
jne
rcll
or
xchg
inc
loopne
push
negb
push
cmp
cld
ret
je
pop
pop
adc
adc
lcall
cli
pusha
out
insb
ljmp
xchg
add
push
imul
lcall
shrl
movsb
stos
sub
push
vaddpd
fistl
mov
test
call
jnp
dec
and
inc
mov
and
shll
das
or
pushl
rorb
mov
pop
pop
leave
addb
xlat
jns
add
mov
add
jne
pop
xchg
sbb
and
lea
out
mov
sbb
loopne
mov
inc
mov
cmp
jns
add
push
dec
imul
jno
outsl
stos
ljmp
in
das
dec
scas
mov
fistps
push
cmp
bound
sarl
add
or
cmp
iret
addr16
or
or
inc
push
fucomp
lcall
sub
mov
loop
add
movsl
xor
push
jns
ds
aas
push
gs
dec
xor
mov
clc
rorb
cmp
dec
mov
loopne
pushf
push
shlb
cmp
push
ljmp
lods
loopne
pop
subb
into
or
jne
add
jb
jmp
dec
cmp
and
mov
add
sahf
cmp
mov
mov
xchg
incl
jbe
sbb
stos
cmp
mov
ret
mov
fidivrl
cmp
mov
aas
testl
stos
or
adc
in
inc
push
push
dec
ss
mov
cmp
jmp
mov
mov
shrl
stc
jnp
fscale
hlt
sti
aam
rorb
sub
or
outsl
push
xchg
mov
jg
test
mov
popf
mov
xor
mov
in
xchg
mov
ds
mov
mov
push
cmp
rcl
or
rorb
mov
sub
xchg
push
sub
mov
jno
push
sahf
outsl
lret
pop
dec
lret
mov
lahf
ret
push
sub
fdivrl
mov
xor
pop
shrl
sbb
push
dec
push
cld
cwtl
adc
push
sar
ret
push
leave
push
push
enter
sub
adc
lahf
inc
mov
int3
adc
mov
pop
jne
nop
mov
mov
shll
adc
aas
mov
movsb
xor
push
or
fstp
pop
and
cmp
mov
jbe
add
sub
mov
pop
scas
mov
mov
dec
dec
pop
aas
sarl
loope
sbb
iret
test
scas
jecxz
fcoml
sbb
jno
jne
pop
inc
xchg
mov
icebp
sbb
and
rorb
adc
jae
pop
cmp
xchg
pop
cltd
push
or
subb
outsl
aaa
xlat
and
lods
mov
jno
fisubrl
jle
cmpsl
sbb
push
mov
adc
std
xor
mov
sbb
push
out
push
out
dec
jno
test
xor
test
imul
or
xor
ja
mov
jmp
xchg
and
xchg
push
dec
stos
sbb
pop
hlt
add
loopne
push
cmp
xchg
mov
mov
jns
in
fsubl
loop
fwait
mov
rclb
mov
ret
sahf
cwtl
daa
clc
fstl
adc
dec
or
jbe
adc
dec
gs
pop
sub
jb
and
loop
lock
and
jmp
and
cmp
sbb
lock
push
out
aaa
or
enter
pop
dec
xchg
add
test
adc
iret
out
test
sbb
das
mov
sub
bound
or
ljmp
inc
and
arpl
aaa
cli
add
rclb
sub
pop
and
mov
mov
or
add
mov
or
xchg
dec
data16
mov
insl
cmpsl
sub
fsub
popf
flds
and
inc
sbb
leave
xor
jg
outsl
stos
fistpll
pusha
sbbb
xchg
in
rolb
pushf
sbb
mov
mov
rcrb
fmul
int
lcall
mov
mov
pop
notl
jb
push
mov
sub
and
xor
and
imul
sbb
lods
mov
cmp
jbe
push
divb
or
cltd
enter
mov
mov
xchg
stos
xchg
sbb
sub
and
in
add
adcb
cmp
sbb
xchg
mov
jnp,pt
push
jle
addr16
lods
cmc
mov
sub
pop
and
les
insl
pop
test
push
ss
shll
movsb
xchg
int
mov
cmp
in
push
pop
mov
xchg
xchg
dec
inc
mov
adc
and
inc
add
in
int3
stc
incb
mov
rclb
and
mov
pop
jp
stc
cmp
mov
rorb
das
push
movsb
sub
lods
repz
lods
jo
iret
les
sub
inc
adc
aas
dec
push
ds
mov
leave
vxorps
jnp
mov
sub
mov
or
lret
jno
dec
push
imul
cli
popf
add
mov
mov
jl
imul
add
adc
push
pusha
jae
mov
fldl
test
dec
hlt
push
and
das
mov
jecxz
mov
and
xchg
sar
jb
xchg
pop
fld1
xchg
dec
aad
jo
mov
aad
jne
push
ss
stc
pop
out
std
lret
cmp
sti
lret
mov
mov
add
pop
cli
loope
pop
pushf
ljmp
push
sbb
cld
push
into
mov
xor
jns
imul
not
test
popf
cwtl
push
cmp
arpl
out
lea
push
pop
push
and
and
in
lret
push
or
loop
jno
mov
and
cmp
divb
mov
or
iret
in
lahf
pop
jno
add
pop
add
icebp
fnstsw
fidivrl
icebp
aad
rolb
mov
popa
mov
cmp
ja
mov
lds
xor
repz
pop
shl
icebp
xchg
lods
int3
adc
inc
test
enter
sbb
push
mov
stos
sti
xor
nop
sub
add
sub
pushf
cmp
cmp
inc
add
adc
fcomps
ret
jbe
fs
xchg
jp
xchg
popf
sbb
ljmp
xor
or
sub
adc
dec
call
xor
inc
aas
push
mov
cli
xchg
xor
cmpsb
out
leave
loope
fisubs
add
or
lcall
pop
mov
lret
nop
push
mov
adc
xchg
jge
sub
adc
add
fdiv
pop
imul
fiadds
sahf
subl
iret
stos
add
pop
push
push
aas
xor
or
xchg
jl
cmp
or
in
sub
jp
movsb
sbb
fwait
aaa
ret
sub
and
fstps
test
sbbl
and
aaa
out
mov
lret
xor
dec
xchg
add
outsb
mov
push
mov
std
movsb
cmc
xor
fdivrs
pop
inc
dec
loop
push
popf
mov
inc
imul
sub
movsl
out
sub
jg
mov
xchg
pop
nop
out
mov
dec
scas
and
sahf
and
daa
push
and
pop
idivl
repnz
lret
inc
mov
cli
and
pushf
pop
cmp
bound
mov
fwait
mov
sbb
nop
in
stos
pop
int
and
iret
pop
cmp
push
ret
xor
test
jge
pop
xchg
shrl
ss
inc
add
pop
and
out
out
loopne
arpl
scas
mov
int3
xchg
sub
dec
sbb
icebp
xor
dec
and
scas
sub
sbbl
add
bswap
jle
fistl
jecxz
cmpsl
loop
pop
into
dec
or
dec
outsl
out
sti
pop
push
jo
cmpsl
daa
insb
in
push
shll
mov
push
pop
inc
jl
hlt
mul
sub
pop
lods
les
push
lcall
push
push
pop
mov
mov
inc
cmp
mov
push
int
xchg
and
jmp
nop
dec
iret
scas
outsl
fdivrs
pop
std
stc
jmp
dec
scas
popa
pop
pop
int
lahf
dec
sub
insb
mov
mov
pusha
and
gs
cmpsb
daa
rorl
lea
jbe
sub
push
mov
dec
bound
rcrb
mov
lcall
mov
xchg
cmp
idivb
jmp
or
mov
mov
mov
scas
xchg
fimuls
adc
sub
mov
inc
add
xchg
fildll
mov
xchg
or
test
lds
stos
mov
icebp
inc
dec
pusha
adc
push
sbb
call
mov
aad
sbb
out
pusha
mov
sub
xchg
cmp
movsb
pop
push
or
enter
mov
pushf
sbb
mov
and
testb
loope
or
out
btrl
mov
mov
dec
jo
mov
movsb
sbb
cmc
popa
cmpsl
shlb
cmp
leave
int
in
out
pop
pop
push
add
repnz
divb
out
pop
stos
and
jge
push
std
gs
inc
lods
pop
rolb
nop
out
xchg
sub
jmp
popf
enter
pop
inc
xlat
pop
scas
ret
dec
or
gs
mov
pop
push
ret
push
std
mov
icebp
pop
inc
stc
jae
loop
scas
adc
lret
mov
jae
nop
sub
mov
mov
or
mov
mov
mov
pop
mov
pop
popa
bound
add
mov
sbb
cwtl
push
out
scas
inc
daa
aas
adc
cli
leave
sub
fidivrs
insb
pop
adc
test
das
cmp
lea
add
mov
push
xchg
gs
cltd
ja
stos
cmc
inc
fisttpl
dec
jae
out
sub
push
add
inc
sbb
xchg
pushf
push
mov
lds
dec
ljmp
stos
mov
iret
bound
fwait
sbb
fnsave
je
int3
inc
xchg
mov
push
aaa
test
pusha
nop
cmp
pop
pop
in
push
mov
div
or
jo
mov
inc
mov
sub
mov
and
xchg
mov
movsl
stos
setns
int
ret
jg
fidivl
sbb
mov
and
imul
or
nop
jmp
mov
loop
es
aam
lock
fildl
je
leave
mov
packuswb
std
in
inc
cmpl
scas
mov
and
cmpsb
push
sub
incb
fisubrl
orl
les
inc
in
sar
jmp
fisttps
js
adc
insb
out
scas
adc
mov
ja
das
mov
inc
xor
dec
cltd
icebp
push
popl
popa
scas
cwtl
mov
xorb
mov
adc
xchg
or
jnp
xlat
inc
add
mov
inc
rol
repz
xchg
mov
or
out
jne
aas
push
sbb
jge
negl
daa
pop
push
addl
lds
cmp
aam
jle
cmp
pop
sub
fildll
sub
xchg
ljmp
xchg
inc
push
out
sti
outsl
shl
pop
clc
inc
push
repnz
sub
sbb
xchg
jns
push
or
cltd
mov
xchg
leave
push
xor
adc
test
or
push
mov
test
dec
mov
cmc
arpl
imul
js
outsb
jg
imul
cmpsb
jnp
xchg
or
sbb
lods
insl
adc
aam
sbb
add
in
mov
add
fmuls
addr16
pusha
sti
subb
pop
inc
push
popa
aaa
out
sbb
sub
shlb
out
movsl
es
jo
mov
sbbb
inc
pusha
fiadds
mov
inc
mov
cli
sbbl
jb
inc
inc
pop
mov
inc
push
inc
and
jg
pop
jge
dec
movsb
call
cmp
or
sub
or
std
out
adc
pop
xor
loop
fistl
mov
xchg
xlat
lret
rcl
pop
cmp
inc
push
jns
xchg
inc
add
ucomiss
into
fimull
cmp
subl
stc
out
lods
and
or
sbb
outsb
add
hlt
jns
std
mov
ljmp
int3
push
jge
dec
pop
jno
icebp
mov
sub
jo
out
dec
xchg
mov
call
dec
pop
shrl
sbb
leave
gs
pop
sbb
ficoms
lret
xor
or
hlt
mov
dec
ss
sub
and
mov
xchg
mov
cld
in
mov
shlb
sbb
add
xchg
sbb
movsb
cltd
xchg
mov
xchg
in
rclb
inc
cmp
push
ja
packsswb
mov
push
dec
stos
or
imul
mov
fldenv
adc
rcrl
sar
pop
jl
sub
aaa
icebp
mov
add
cli
hlt
stos
sub
fwait
xor
jbe
xorb
xchg
inc
psubusw
hlt
inc
mov
arpl
popf
and
inc
add
push
fsubrl
or
vcvtps2dq
fcomp
fs
lea
shrb
mov
es
inc
xchg
stc
cmp
outsb
daa
popa
scas
jb
xchg
pop
xor
add
pusha
push
test
mov
mov
fsubp
mov
dec
sbb
xchg
aad
cltd
sub
xor
test
loopne
rcll
rcll
in
and
je
lods
xor
sub
nop
mov
adc
push
dec
dec
das
mov
mov
movsl
cld
push
ja
jne
jb
sub
mov
pop
xchg
mov
cmp
sub
inc
inc
push
movsb
add
cmp
cmp
sbb
insl
mov
ficomps
mul
pop
sbbl
faddl
movsl
adc
and
push
out
mov
lea
mov
sbb
shll
out
aaa
std
xchg
call
pushf
and
jg
jb
imul
outsl
dec
call
popa
or
cmp
bound
ja
push
fnsave
inc
sbb
mov
je
lock
cmp
sbb
mov
lahf
sbb
fdivl
movsb
pop
sahf
mov
xchg
hlt
add
icebp
jae
push
fcmovnu
aas
idiv
inc
fs
xor
xor
pusha
sbbb
lret
lcall
xor
push
push
or
mov
and
lods
outsl
or
or
jmp
lods
nop
xor
pop
test
xchg
sbb
dec
test
xchg
pop
fisttpl
lret
imul
int
pop
sub
ret
jb
xchg
std
leave
scas
mov
sbb
adc
mov
ss
lcall
cmp
clc
and
push
mov
in
fstp
mov
mov
dec
shlb
lods
ret
adc
popf
sub
jecxz
sbb
sbb
mov
aam
test
pop
cmp
push
jo
outsl
fbld
cld
dec
dec
daa
enter
ljmp
call
aaa
cmp
cli
push
test
daa
test
push
popf
test
dec
pop
sub
aaa
lret
xchg
jne
mov
jge
cmp
xchg
mov
loope
jbe
or
andb
add
cmp
push
push
into
ret
ret
std
sar
jge
dec
xorl
push
sub
js
sub
aaa
cwtl
jg
les
push
aas
mov
in
mov
roll
xchg
jmp
in
mov
dec
cmp
xchg
push
sub
cltd
push
pop
xor
repnz
adc
pop
rcl
or
adc
call
push
hlt
lods
jmp
gs
js
cmp
and
ja
sub
push
sbb
in
cmp
outsl
repnz
mov
mov
stc
pushf
push
xchg
sbb
mov
or
int
lock
js
sub
jp
loope
inc
insl
adc
arpl
push
fidivs
sub
mov
sbb
or
jp
call
sbb
sbb
jno
cmpsb
mov
mov
mov
mov
mov
cmp
xchg
testl
or
sti
stos
movsb
xor
mov
jno
lds
idivl
in
ficomps
or
pop
pushf
sbbb
sti
inc
sbb
sub
cmp
pop
out
ret
lcall
in
je
sbb
jle
orl
pop
adc
dec
in
aad
sbb
out
test
mov
popl
jno
pop
int3
cli
mov
icebp
sub
hlt
sarl
adc
mov
mov
das
stos
bound
seta
sbb
inc
test
sub
push
add
popf
jb
sbb
pop
ja
mov
sub
scas
lahf
inc
xor
cltd
inc
daa
dec
xchg
jecxz
push
mov
or
cmp
lods
jmp
xor
lea
mov
imul
mov
gs
mov
cmp
pop
pop
aad
test
in
subb
adc
mov
test
sub
push
fstpl
jp
das
and
shlb
jne
cmpsl
jb
jmp
popf
lock
rcpps
push
or
jne
push
aaa
dec
inc
cld
sub
addb
std
mov
jns
jg
outsb
xchg
mov
lds
testb
xor
cltd
jae
jb
xor
bound
or
mov
popf
stos
in
or
and
cmc
mov
dec
xchg
push
test
pop
das
or
in
movsl
movsl
incb
or
jmp
mov
mov
and
adc
sbb
out
xchg
adc
mov
lret
xchg
pop
jp
xlat
push
jne
shll
xor
cmpb
std
icebp
dec
inc
loopne
aad
sub
cmp
psrlw
sbb
pop
mov
in
shlb
sbb
ret
mov
dec
adc
lret
xchg
bound
xchg
sub
mov
stos
xor
pop
nop
jno
enter
add
ss
adc
sub
cmc
shll
into
sbb
xchg
test
test
aad
inc
cmp
mull
push
test
icebp
testb
mov
mov
test
mov
mov
shlb
aam
aas
adc
jns
adc
popf
dec
out
jg
mov
loope
and
mov
pop
adc
fistpll
sbb
pop
pop
adc
fcompl
mov
mov
fidivl
pop
inc
sahf
movb
loop
pop
loop
f2xm1
out
sbbl
add
call
push
jecxz
enter
push
in
mov
mov
pop
leave
test
call
out
jo
sbb
pop
sbb
add
dec
jb
inc
shrb
out
mov
lock
in
and
mov
pop
daa
mov
push
test
fistpl
xor
add
jl
cmp
dec
outsb
push
cmp
hlt
push
ja
inc
xchg
pop
sbb
xor
jae
js
popa
mov
mov
dec
jge
cmpsb
jge
and
test
pop
dec
or
xchg
scas
sbb
xchg
out
int
into
sub
add
ret
repz
inc
test
sbb
iret
add
jne
stc
mov
jne
cmc
jge
push
cmp
enter
test
jle
dec
in
ds
cld
pop
dec
cwtl
loope
gs
add
fucomip
mov
mov
aaa
pop
mov
ja
inc
lods
add
int3
cmp
xor
arpl
scas
ds
cli
test
arpl
or
hlt
in
xchg
or
les
and
loopne
js
push
icebp
lods
and
xor
or
and
sbb
icebp
stc
mov
mov
loopne
pop
sahf
sbb
mov
fnstcw
sub
cltd
cmpl
test
and
popf
pop
pusha
cmpsl
aam
add
sarb
mov
adc
mov
insb
pop
sub
popa
push
popf
xor
shll
jo
sbb
gs
gs
iret
jb
andb
or
jae
mov
jmp
and
dec
mov
cld
cmpsl
lret
cmp
fs
loope
pop
dec
cwtl
incl
fiadds
jo
jae
jmp
and
clc
adc
push
jae
jecxz
in
into
pop
dec
lret
and
scas
cmp
rorb
les
je
xchg
movsl
stc
lea
lds
jo
xlat
adcl
mov
push
pop
movsb
xlat
aas
fs
and
aas
sbb
les
addl
ljmp
insb
imul
pop
sbb
outsb
and
inc
loop
fistps
out
fistps
ja
fcompl
sbb
iret
cmp
in
les
mov
aas
mov
aas
add
sbb
or
mov
adc
dec
lcall
ss
sbb
xchg
outsl
pop
inc
mov
and
enter
xchg
xchg
rcll
cs
jae
jle
and
adcb
subl
adc
mov
cli
jmp
dec
jae
leave
mov
fadds
fldl
int3
inc
mov
lcall
adc
mov
sbb
mov
pop
dec
adc
arpl
jmp
push
orb
xchg
mov
xor
rorb
jne
loop
adc
shrb
aaa
mov
mov
orb
outsb
stos
test
icebp
ljmp
mov
scas
vmread
loopne
pop
lahf
inc
lret
cmpsl
icebp
mov
cli
xlat
cmc
push
mov
ror
pusha
das
enter
cmp
mov
dec
dec
mov
std
cmp
mov
in
add
movsb
dec
movsb
sbb
loop
jp
pop
leave
outsb
cmpb
pop
in
or
sti
pop
or
add
imul
ljmp
push
test
sub
daa
shll
mov
xchg
out
pop
xchg
and
jae
jp
xlat
pop
sbb
xchg
loop
push
pop
add
je
lahf
push
mov
jg
xlat
pop
fwait
adc
fstpl
sub
mov
int
sti
jl
push
sub
dec
rorl
gs
fldenv
sub
add
xchg
inc
mov
out
ds
xchg
mov
pushf
iret
nop
lods
sub
jbe
cmp
mov
incl
lea
cmc
leave
xor
in
fmull
add
in
fcoml
xchg
inc
dec
prefetch
test
jmp
sbb
je
xlat
cmp
push
sbb
and
sbb
cmp
push
roll
adc
adc
pusha
cmp
push
xchg
or
bound
push
aaa
push
push
xchg
xchg
aaa
cmp
or
jp
sub
xlat
into
imul
hlt
ja
mov
mov
push
xchg
nop
ret
xor
xor
lahf
mov
adc
xchg
aaa
or
adc
xchg
pop
out
push
fsubrs
sbb
popf
jge
loope
xchg
mov
inc
mov
cli
mov
or
movsl
and
xorl
vmovaps
mov
mov
leave
mov
lret
gs
fcompl
cmp
sbb
gs
add
pop
adc
cmp
adc
dec
aaa
mov
lahf
push
xchg
movsb
mov
lea
lcall
jl
and
lcall
lods
pop
std
add
out
inc
jo
mov
in
sbbb
sub
cmpsl
push
stos
test
push
lahf
sbb
insl
fists
cmpsb
sub
push
aad
aad
cmp
mov
in
dec
add
adc
push
repz
lret
push
pop
pop
mov
sbb
or
mov
dec
add
lea
sahf
mov
mov
cmp
inc
sbb
jmp
mov
imul
xor
mov
jmp
shr
add
push
icebp
xchg
je
out
nop
call
cmp
jns
filds
stc
aad
mov
push
std
inc
jl
add
xchg
and
cmp
add
lret
jno
jge
in
pop
fimuls
repz
rorb
cmp
jae
mov
jmp
ljmp
dec
adc
loopne
cmp
imul
int
lock
pop
inc
mov
cmp
sbb
mov
jecxz
fldcw
loopne
outsb
sub
cmp
ret
sbb
cmp
pxor
imul
ss
insl
push
test
or
sbb
outsb
xchg
enter
pop
and
rcll
mov
or
cld
shl
add
arpl
movsl
xor
mov
lret
mov
fs
movsb
pop
int
sub
cmc
dec
lret
int
or
pop
stc
and
xlat
push
fistps
loope
inc
and
dec
pop
jae
jbe
shl
stos
in
dec
pop
sbb
sbb
in
test
jae
jnp
mov
adcl
lcall
int3
lahf
cmpsl
arpl
inc
lcall
cmpsl
push
fwait
mov
mov
mov
sub
icebp
cmp
cmp
pop
je
adc
repz
rcrl
out
xor
xchg
push
lret
pop
mov
lcall
or
inc
neg
and
dec
push
lods
jno
mov
mov
push
cmpsb
rolb
lods
push
adc
aad
movsb
les
inc
adcl
ret
adc
jl
jno
sbb
dec
mov
pop
adc
out
jmp
xchg
add
push
sbb
adc
test
out
inc
lret
neg
lods
out
mov
repnz
jae
sahf
cmpb
and
shll
cmp
es
sbb
sahf
jno
rcll
cld
dec
aas
into
push
movsl
mov
xor
in
jne
in
scas
push
add
cmc
jp
loopne
push
cmp
dec
add
pop
pop
pushl
je
mov
jl
mov
fidivl
mov
sbb
fimull
je
jno
int3
adc
out
sahf
push
push
pop
cmp
jmp
jp
adc
notb
stos
shll
push
jge
orb
inc
gs
arpl
push
inc
lods
cmpsl
xor
pop
mov
xor
pop
cmpsl
mov
pushf
inc
pushl
sbbl
sbb
dec
gs
sub
mov
vpunpcklqdq
in
xor
pop
inc
scas
push
imul
and
clc
arpl
push
aad
adc
xor
or
inc
mov
icebp
in
mov
enter
mov
mov
movsl
int3
push
lds
xor
mov
add
mov
pop
std
xchg
xor
cmp
xchg
lods
and
les
or
xlat
ss
pop
mov
push
dec
mov
rorb
sbb
pushl
mov
and
fcmovne
pop
fidivrs
out
sbb
sub
jnp
je
sbb
mov
outsl
fwait
out
popf
and
rcr
xor
daa
jecxz,pt
in
adc
mov
je
repnz
push
jmp
lock
aas
insb
and
xchg
pop
scas
push
or
rcrb
inc
loop
lcall
fdivrp
pop
push
xor
jle
mov
or
jmp
dec
aaa
adc
add
sbb
cltd
mov
les
sahf
sub
repnz
mov
sbb
mov
sti
mov
mov
scas
mov
int3
adc
imul
pop
add
js
add
mov
xor
inc
sub
dec
lods
nop
push
cmpsb
repnz
loope
dec
rclb
mov
js
pop
scas
ja
adc
lds
lret
xor
sbb
mov
out
mov
xchg
mov
stos
dec
xchg
pop
dec
jne
jae
js
pop
loopne
jbe
aas
fistl
ljmp
call
mov
adc
dec
xchg
or
xor
outsl
and
imull
pop
nop
movl
aaa
xor
xchg
dec
stos
sbb
or
add
push
loop
bnd
push
aas
lods
mov
pop
adc
jp
pop
jg
loope
ficoms
mov
stos
lea
cld
ds
adc
in
aam
xchg
xor
cmp
pusha
pop
add
out
xchg
lock
ja
sub
addr16
pop
js
outsl
mov
xor
test
scas
xchg
push
int3
xchg
sub
fistpl
lods
movsl
xchg
inc
push
mov
cmp
xor
mov
scas
xor
mov
cmp
mov
rorb
mov
pop
cmp
lds
pop
push
rcr
enter
aaa
and
negb
mov
dec
xchg
ja
mov
dec
mov
int3
jbe
sahf
adc
out
out
and
sub
xor
ret
sbb
not
dec
stos
ds
std
idivb
mov
jns
sarl
jo
cmc
sub
incb
jmp
xor
sub
in
out
and
stc
mov
sbb
jmp
insb
loop
mov
lock
cmp
dec
or
push
ss
fsubl
out
cwtl
fnsave
aad
fcompl
test
hlt
arpl
gs
pop
cmp
and
cmp
aas
xchg
ljmp
jmp
lods
cmpsl
xor
in
sbb
daa
mov
mov
shrb
imul
adc
jno
mull
repz
xor
pop
jnp
mov
lods
shrl
adc
dec
out
filds
sbb
xor
push
daa
xchg
add
adc
jecxz
ss
xchg
mov
mov
es
lahf
sbb
push
in
lods
cli
mov
arpl
ja
xlat
push
mov
dec
jmp
lcall
clc
sub
imul
mov
ja
scas
stc
cwtl
stos
in
push
dec
push
fstpl
or
test
test
sbb
jmp
out
cmpsl
clc
cli
inc
stos
xchg
sbb
fdivrs
dec
push
movsb
xchg
das
mov
xor
push
pop
pushf
lea
mov
shll
xchg
xchg
push
lahf
xor
arpl
lods
push
adc
in
sub
xor
mov
adc
add
lahf
mov
push
ljmp
outsl
xchg
xor
jae
imul
sub
dec
std
cmp
adc
fmul
pop
mov
outsb
js
dec
xchg
mov
insl
adc
leave
mov
fidivrs
cmc
test
and
jecxz
in
cmp
cmp
and
int3
or
mov
sbb
push
mov
jmp
add
adc
sub
outsb
push
enter
cwtl
sub
push
jg
mov
jno
roll
add
stos
movsb
int
sub
divl
cltd
int
add
xchg
adc
clc
test
add
dec
lods
add
pop
cmp
adc
pop
test
movsl
mov
cmp
cmc
leave
add
adc
stos
loop
sbb
outsb
inc
mov
xor
popf
xor
pop
shll
push
xchg
insl
pop
push
into
loope
repz
stos
lcall
cmp
lcall
lcall
mov
jne
movsl
and
sub
lret
push
rep
das
mov
daa
int
int3
jp
mov
push
jo
popf
mov
sub
outsb
shlb
sbb
jo
adc
dec
outsb
insl
add
cld
stos
jecxz
adcb
lcall
dec
test
hlt
adc
add
lods
pop
mov
mov
repz
mov
aam
sbb
and
add
and
mov
adc
xor
push
imulb
cmp
dec
shrl
dec
mov
add
add
pop
inc
or
xorl
out
loopne
leave
jno
movsl
fisubrs
lods
insl
push
imul
mov
enter
fiadds
cmp
shlb
lods
rclb
dec
sbb
idivl
cmp
imul
std
mov
mov
inc
adc
notb
pop
les
sub
leave
push
lods
ja
rcll
imul
imul
fnstcw
push
or
in
stos
cmp
mov
lods
xor
sahf
popf
add
imul
ss
pop
adc
stos
or
mulb
inc
xchg
cmp
jb
enter
daa
xchg
mov
outsl
jge
jle
cmpb
cmc
lret
mov
add
xor
mov
std
insb
fs
js
sub
cmp
pop
out
pop
inc
pop
mov
push
push
out
sub
inc
out
sbb
and
adc
shlb
xchg
lret
aas
rcrl
jmp
loopne
loop
cmp
or
sbb
push
test
out
bound
popf
add
xchg
mov
es
cmp
shll
cmp
cmp
es
int3
add
ret
test
pop
jno
repz
or
repz
or
jbe
fst
imul
inc
lds
gs
pop
sbb
pop
pusha
add
std
jl
out
pop
xchg
pop
fwait
sub
jnp
dec
fimull
rclb
jb
push
mov
int3
push
jbe
fsubl
test
divl
or
jns
repnz
or
sub
sbb
cli
mov
inc
sub
out
jl
jbe
push
outsl
ficoml
inc
ret
outsb
xchg
pop
out
sub
adc
sub
sbb
or
add
mov
je
fisubrs
iret
in
stos
fcompl
jmp
addr16
or
das
scas
aas
add
nop
cmpsl
mov
mov
jno
sub
xor
jl
mov
xchg
sti
testl
sbb
mov
mov
das
stos
loop
mov
or
ficoms
rorb
dec
pop
inc
psubb
jns
out
jle
lea
shr
mov
fs
into
or
dec
cli
aad
push
insl
and
and
jae
in
aaa
das
and
pop
mov
jbe
lea
mov
xor
xor
test
js
sahf
fcoml
mov
jmp
pushf
jb
daa
rolb
sbb
mov
cmp
out
jns
sub
push
out
repnz
aad
shll
sub
push
mov
out
mov
jno
dec
sbb
test
sbb
mov
push
out
fwait
dec
push
mov
call
add
int
ja
xor
cld
cmp
leave
jg
cmp
shrb
por
popl
inc
push
arpl
fwait
push
jp
pop
jg
sub
jb
int3
mov
or
aam
cmpsl
movntps
jne
pop
rorb
rol
out
mov
cmp
mov
push
negb
xor
jb
pop
sub
inc
mov
fisubl
cli
popa
out
enter
cmp
aad
sbb
mov
mov
rcr
movsl
notl
pop
test
and
sti
xchg
and
fxch
push
pusha
or
mov
in
iret
mov
cmp
push
mov
aaa
inc
lods
fsubrl
pop
and
xchg
xchg
jg
out
iret
iret
inc
pop
jne
les
cmp
es
stos
adc
push
jo
mov
cmp
pop
cmc
decb
mov
pop
push
ds
cmc
aaa
fsubl
mov
cwtl
inc
enter
movhps
daa
cwtl
dec
jge
test
xlat
orl
shll
mov
dec
mov
lods
xchg
push
dec
push
sbb
adc
aaa
stos
push
dec
sbb
add
push
cmpsb
js
inc
pop
ljmp
rol
dec
or
dec
orps
imul
cmp
cld
pop
cmp
das
mov
pusha
cmp
aaa
or
adc
mov
push
dec
sub
out
inc
xchg
repnz
pop
and
sbbl
sahf
adc
adc
inc
test
daa
in
fsts
pop
and
xchg
inc
aas
jmp
cld
pop
fsts
lahf
andl
mov
push
leave
cmpsl
shrb
jle
aaa
xor
aaa
mov
aad
inc
jb,pn
xor
xchg
xchg
mov
push
mov
lahf
les
cwtl
sub
xor
mov
adc
rcrb
ror
inc
repnz
mov
inc
jmp
mov
mov
dec
xlat
and
sub
stos
cmpsl
mov
jnp
xchg
ret
scas
push
jae
xchg
sbb
dec
pop
fdivrs
cli
sbb
insb
add
loop
jae
fwait
psubq
xor
dec
cli
sti
mov
inc
cmpsb
gs
into
pop
lret
cwtl
xor
and
xor
jno
mov
out
and
sbb
dec
test
xchg
mov
fdivs
push
cmp
mov
dec
cmc
or
lea
cmpsb
pop
ret
adc
inc
jle
jl
jge
mov
xor
dec
fidivs
cltd
outsl
and
pusha
cmp
mov
inc
outsl
mov
pop
je
loop
mov
cwtl
inc
fisubrs
dec
mov
leave
or
sbb
mov
scas
cmpsl
cmp
loopne
sub
xchg
loopne
iret
test
mov
ret
movb
les
xorb
push
cmp
adc
xor
sbb
inc
jb
das
dec
andb
xor
and
jne
rcr
xor
mov
and
mov
sub
jge
inc
fiadds
mov
pop
mov
fldenv
fmuls
mov
icebp
fisttpl
mov
pop
out
adc
adc
dec
rcrb
data16
mov
push
jge
aas
imul
orb
mov
lret
xchg
dec
ds
xchg
xor
pop
sbbl
xor
popf
outsb
adc
mov
inc
xor
sbb
sarl
les
dec
cld
ss
ucomiss
jne
pop
or
mov
sub
push
mov
cld
inc
pop
pop
outsl
dec
adc
stos
aam
xor
lds
mov
adc
and
icebp
push
int3
mov
sbb
jp
test
jnp
add
xor
fstps
scas
cmp
cmc
fists
xor
jo
inc
addb
in
or
add
mov
sbb
filds
inc
std
je
or
dec
mov
push
sbbb
cmp
or
adc
jle
frstor
mov
outsl
test
sti
loopne
test
cld
bound
in
mov
sub
sub
movb
xor
nop
dec
cli
push
add
mov
test
pop
jmp
inc
push
push
test
jae
sbb
stos
dec
adc
xchg
insl
mov
iret
and
in
movsb
cwtl
loopne
mov
xor
cltd
or
inc
into
icebp
cmp
fnstenv
dec
mov
iret
imul
xchg
xchg
dec
xlat
sub
mov
push
push
xchg
add
lret
std
bnd
daa
sti
stos
out
in
pop
or
pop
pop
cmc
mov
sbb
adc
fwait
adc
lcall
in
push
inc
xchg
ss
loopne
pop
pop
adc
inc
aam
mov
dec
mov
ss
lds
std
cmp
dec
ljmp
pusha
shrb
and
pop
enter
xor
shr
push
fldcw
stos
sbb
ljmp
and
test
fcoml
mov
stos
arpl
into
test
and
push
push
cmp
cmp
sbb
fwait
xchg
fsubrs
movsb
mov
lods
mov
shr
rol
xchg
mov
xchg
xchg
inc
and
adc
xchg
sbb
pop
and
cmp
test
out
mov
push
stos
fists
cmpsl
loope
cmp
sti
mov
hlt
mov
mov
std
mov
stos
mov
inc
inc
sbb
es
mov
leave
jmp
push
mov
dec
pop
cwtl
or
xor
jo
and
ja
fnsave
mov
mov
push
cwtl
jne
dec
mov
jg
pop
sbb
xchg
out
mul
inc
repnz
fcompl
push
insb
mov
xchg
loopne
add
xor
ds
je
jbe
dec
jecxz
sub
jo
mov
addr16
lock
xor
movsl
cmpsb
xor
dec
adc
cmp
mov
loop
lea
and
test
cltd
inc
xor
mov
push
xor
jns
stos
aad
cmp
xorb
enter
mov
sub
mov
clc
xor
sbb
icebp
jecxz
subb
mov
and
jle
call
dec
pop
out
arpl
pop
mov
mov
arpl
fyl2x
jg,pt
mov
xchg
sub
sbb
mov
and
jle
sarb
adc
insb
add
xor
scas
rcrl
aam
loop
jns
lahf
aam
jbe
push
pusha
pop
lret
cmp
ljmp
mov
fwait
inc
sbbl
das
xor
lods
push
aaa
call
out
push
jnp
std
int3
and
mov
mov
das
sbb
xor
stos
nop
call
leave
push
outsb
rolb
adc
push
gs
jle
das
sub
stos
insl
mov
sbb
xchg
sbb
jno
fxch
pop
inc
repz
insb
cld
jecxz,pn
push
mov
inc
add
jmp
mov
cmp
push
lock
jmp
sbb
adc
insb
jae
ficoms
aas
scas
pop
add
xchg
and
pusha
loopne
sub
adc
gs
add
ljmp
xor
mov
adc
lock
shrb
out
lret
sub
adc
lods
out
outsl
outsl
leave
push
pop
add
call
sbb
movsl
push
xor
shrd
jno
xor
and
jle
jo
fs
inc
pop
mov
pusha
push
rolb
roll
shlb
xor
xchg
fcmovnu
mov
pushf
pop
mov
outsl
dec
pushl
or
jnp
std
into
int
std
jns
movsl
mov
inc
or
mov
incb
adc
push
popf
mov
adc
xor
jmp
push
popf
daa
adc
insl
cld
mov
pop
mov
pop
dec
inc
in
xor
add
mov
mov
cmp
out
cmp
pop
pushf
mov
mov
pushf
fwait
cmp
mov
lret
push
fnstcw
sub
mov
les
push
push
pop
mov
cmp
sub
cli
cmpsb
and
repz
pop
mov
sub
lcall
outsl
stos
insb
popl
push
mov
lahf
ja
mov
cld
das
js
insb
addb
jne
cli
and
aad
push
add
stos
sbb
std
cs
cmp
es
add
xchg
mov
scas
fmull
movb
adc
ljmp
fcomi
inc
mov
ss
pop
jae
adc
fucom
pop
mov
scas
sbb
aaa
mov
xor
xchg
xchg
dec
and
xorl
and
dec
out
jns
cltd
cs
call
sub
faddl
or
pop
outsb
fildll
repz
into
sbb
inc
push
push
or
sbbb
cmp
insb
or
dec
mov
inc
pop
push
xchg
idiv
inc
pop
subb
jbe
xchg
pop
push
fistpl
test
ret
inc
jnp
movsl
pop
jge
mov
dec
lret
addb
int3
repnz
jb
push
rorb
lret
in
dec
aam
mov
pop
xor
das
call
lock
mov
sbb
dec
xchg
insl
int
mov
stos
aad
outsb
cmpl
push
or
xchg
jns
add
jmp
fucomp
cmpsb
mov
rolb
inc
ret
daa
and
lahf
inc
pavgb
jecxz
pusha
das
in
aas
push
xchg
jp
mov
mov
bnd
stc
jns
mov
push
and
mov
ja
push
sub
mov
add
dec
daa
or
inc
cwtl
popf
sbb
mov
lret
dec
push
scas
cwtl
push
js
test
cmp
ret
pop
aas
in
test
inc
fbstp
sti
dec
shr
push
es
inc
mov
xor
in
dec
sbb
out
inc
sub
or
pop
pushl
ret
in
mov
rep
jno
mov
and
pusha
fcmovnb
or
pop
daa
pop
jle
out
add
sbb
hlt
xlat
in
test
and
pop
lods
lcall
dec
mov
mov
or
jae
push
imul
xor
or
fdivrs
mov
pop
xchg
or
dec
nop
jno
popa
and
add
pop
cmp
pop
cmc
jno
sub
cli
insb
test
push
divl
je
je
cmp
lock
inc
and
loop
xchg
pop
sub
orb
in
negl
dec
adc
daa
push
xchg
add
mov
imul
push
mov
idivl
in
push
sbbl
sub
jno
sbb
push
cmp
xor
arpl
pop
jns
aaa
sbb
fwait
sub
stos
bound
add
adc
bound
outsb
cmpsb
xchg
das
adc
dec
mov
in
cld
je
rclb
outsb
stos
xchg
into
push
scas
out
insb
dec
or
xchg
and
cmpl
repnz
imul
pop
icebp
sub
adc
push
outsb
mov
dec
inc
xchg
repnz
pop
xchg
jle
dec
in
cmp
clc
aad
adc
fnsave
inc
dec
fimuls
pop
lock
jnp
leave
cli
inc
cmp
mov
ss
lea
mov
sti
sbb
push
ja
cmp
int
adc
xor
jg,pn
adc
sbb
pusha
push
pop
and
and
lods
sub
aaa
and
and
and
mov
push
xor
sub
and
arpl
xchg
and
enter
iret
dec
sahf
andb
cmp
xchg
ret
add
hlt
idivb
mov
rolb
ds
out
cmp
test
dec
repz
fidivrl
xchg
inc
insl
jb
ds
mov
insb
inc
mov
sbb
inc
ret
adc
lahf
mov
pusha
fsubp
out
xchg
daa
rcr
or
lahf
jge
xchg
lret
adc
add
mov
push
test
scas
and
fsubrl
aam
test
push
roll
mov
mov
sbb
cmpsb
mov
and
mov
jg
inc
movsb
aaa
xchg
adc
jne
movsb
mov
xchg
sub
mov
mov
or
mov
inc
call
out
stos
cmp
add
pop
mov
fdivs
fistps
call
mull
add
repz
lcall
sub
inc
scas
ficomps
ja
cli
stos
mov
shll
sub
out
push
out
pop
add
mov
rorl
mov
pop
fstpl
int
aas
inc
jge
jmp
cmp
shlb
stc
cwtl
call
das
pop
push
out
es
mov
jb
loop
clc
into
jp
shll
gs
add
pop
dec
icebp
mov
in
imul
xlat
sub
pop
into
cld
jno
pop
xrelease
jae
outsl
sbb
jnp
aas
fmul
lret
movsl
je,pt
cmp
aad
cmpsl
call
mov
loopne
adc
shlb
sub
rorl
sub
data16
jle
xor
pop
add
enter
scas
cmp
mov
push
movl
stos
popf
push
fdivrl
jle,pt
daa
fcompl
popa
add
or
pop
or
jg
fisttpll
ds
fcompl
call
mov
dec
cltd
in
add
and
stos
mov
adc
or
ret
mov
das
sub
aam
push
in
popf
aaa
push
dec
cltd
lret
test
fucom
js
add
adc
addr16
fistl
and
jae
mov
outsb
nop
stc
adc
sbb
mov
ja
pop
gs
mov
jno
jnp
adc
cmc
dec
add
cld
out
or
pop
in
ja
loope
adc
mov
xor
jl
pop
and
test
jge
pop
insl
call
and
ja
mov
negb
outsb
push
push
int
cmpsb
mov
pop
mov
mov
clc
mov
dec
or
jmp
mov
xor
jne
fwait
movsl
add
test
mov
jl
out
cmp
popa
jp
mov
pusha
mov
stc
and
orl
out
jnp
ss
cmp
and
add
xchg
push
sbbb
pusha
mov
jmp
mov
faddl
test
popf
sbbl
inc
xchg
imul
rclb
add
pop
mov
mov
or
pusha
mov
nop
and
pop
arpl
mov
shlb
and
mov
mov
jge
and
stos
lret
ss
xor
adc
jne
iret
das
fidivs
inc
mov
fmull
dec
out
test
addl
daa
inc
mov
dec
nop
ja
fisubs
pop
adc
or
jno
cmp
or
fisttpll
jge,pn
idivb
mov
jmp
cmp
dec
and
jb
clc
or
mov
mov
mov
repz
and
dec
mov
loope
pop
inc
outsl
or
sbb
adc
mov
dec
stc
push
ja
scas
mov
aad
rolb
lea
push
sub
ljmp
xchg
jnp
andl
pop
jb
int3
mov
fs
fnstcw
adc
cmpsl
insl
mov
mov
cmp
ja
shlb
and
xchg
dec
ljmp
mov
outsb
negb
dec
mov
adc
pop
and
lods
test
into
call
imul
cwtl
sbb
stos
les
scas
xor
inc
lret
lods
push
mov
or
hlt
notl
ss
add
test
dec
int
mov
pusha
mov
ljmp
sbb
mov
or
fwait
push
and
in
sbb
aaa
xchg
hlt
jl
pop
mov
loopne
pop
in
cmp
sub
scas
pop
xlat
jp,pt
jmp
je
in
inc
aam
sub
mov
sub
mov
mov
lret
pop
jg
shrl
ret
movsb
xchg
or
push
mov
and
gs
popa
mov
push
sub
pop
test
divl
pop
mov
ljmp
cmpsl
cwtl
mov
xor
aaa
stos
sub
add
sub
sbb
loopne
mov
out
rorl
fcompl
mov
test
and
lcall
dec
inc
inc
mov
xchg
insl
dec
cli
negl
and
imul
cmp
add
sbbl
es
cltd
test
jns
adc
mov
mov
pop
js
imul
cmp
inc
cmp
leave
inc
push
push
dec
idivb
adc
and
int
mov
and
dec
shrl
adc
xlat
outsb
dec
push
std
add
mov
dec
pop
push
roll
cmp
xor
push
mov
aam
and
and
add
ret
jmp
adc
aaa
stos
sbb
fistpll
std
mov
mov
sub
and
enter
ds
sbb
inc
stos
add
repz
shll
jle
adc
pusha
in
add
sub
push
sahf
daa
mov
jp
hlt
pop
xor
sub
ljmp
jge
xchg
mov
mov
sbb
pop
loope
pop
mov
and
sub
fnstsw
test
ljmp
in
jnp
pusha
pop
aad
dec
sarb
mov
int3
out
jge
lods
sbb
dec
mov
shrb
stos
lods
stos
out
push
jmp
adc
jg
stos
push
test
cld
loopne
sbb
jecxz
insl
js
mov
xor
sbb
mov
dec
dec
aas
jg
ja
ds
cwtl
cwtl
fildll
out
daa
rorb
aas
repnz
cmpsl
test
lret
pop
push
sbb
push
dec
lods
xchg
frstor
lcall
jmp
js
push
ret
lret
fs
lahf
bound
fbld
jbe
or
aaa
jp
push
bound
sbb
les
fidivrs
add
and
sub
cmp
xbegin
dec
jno
jne
pusha
and
mov
jae
ljmp
dec
mov
addl
lcall
lahf
mov
inc
sub
xchg
aaa
cmpsb
lock
fistps
call
sbb
es
push
in
test
arpl
pop
cmp
push
xor
stc
or
std
pop
movsl
cmp
pop
xor
not
add
sbb
arpl
fs
out
mov
jno
jns
dec
mov
jnp
in
icebp
popa
mov
outsb
lret
mov
lods
jecxz
pop
dec
cld
mov
mov
mov
jb
fstps
push
in
jo
pushl
add
pop
xlat
outsl
mov
add
ljmp
mov
mov
or
daa
xor
cmpb
xor
jg
push
fs
pusha
shl
popa
icebp
push
cld
mov
jg
stos
and
test
orl
icebp
jb
mov
addr16
cmpl
iret
fsub
push
in
push
ljmp
mov
popa
mov
jae
out
cs
lea
jecxz
inc
jmp
lock
pushf
scas
imul
outsb
adcb
in
cmc
mov
mov
ret
or
cmp
jg
push
rcrb
lahf
sbb
in
into
lcall
push
add
xlat
jge
or
repz
jg
sbb
and
xchg
or
mov
dec
or
aas
xchg
mov
add
and
pop
mov
ss
push
pop
push
orb
icebp
shll
mov
les
inc
iret
in
std
mov
mov
xchg
sti
jno
adc
mov
push
dec
in
roll
xchg
xchg
sub
xor
rcrl
fcoml
out
xor
sbb
mov
test
jns
inc
rcll
shl
cmpsb
pop
int
decl
or
pop
adc
mov
adc
jb
add
inc
dec
pop
inc
sahf
shr
sets
cmc
sahf
clc
jnp
push
adc
sub
jge
mov
pop
mov
xchg
jl
and
mov
fnsave
pop
lahf
cltd
icebp
mov
xchg
ret
push
jbe
dec
jnp
shll
cld
mov
or
add
sbb
fstl
jbe
xchg
inc
mov
mov
lcall
mov
sub
lods
push
lcall
adc
dec
jne
push
insb
push
data16
fisubrs
mov
mov
mov
push
cmp
push
push
int
adc
loopne
xor
outsl
insl
rclb
repnz
fs
nop
add
or
insb
add
loop
les
push
sbb
out
adc
jo
mov
mov
cwtl
aaa
mov
cmp
inc
cmp
mov
int3
fs
scas
fwait
call
push
cmp
cmp
cmp
mov
test
inc
push
shrb
in
xor
mov
mov
stos
fiaddl
jb
scas
jae
push
jle
dec
xchg
cmp
or
jno
jle
sbb
nop
out
cld
mov
push
or
ljmp
mov
push
ljmp
lock
leave
mov
call
xchg
inc
xchg
in
mov
mov
hlt
and
push
inc
cmpsl
lea
jge
data16
jne
loop
dec
mov
mov
mov
cmp
out
jbe
inc
push
pop
mov
push
insl
in
xchg
ret
imulb
jbe
xlat
std
repnz
stos
test
push
int3
loopne
dec
test
dec
outsb
mov
cmp
enter
dec
or
arpl
pop
popf
adc
mov
cli
adc
insl
fwait
add
out
mov
out
jns
and
lock
in
xor
cmpsl
xor
jnp
cs
jle
ret
or
push
aaa
pop
adc
ljmp
adcl
call
jg
pop
jo
mov
lret
gs
cltd
mov
fstpl
xchg
roll
lret
fistpll
jbe
mov
mov
pop
lcall
mov
add
add
sub
fwait
rorb
rcll
aad
test
add
inc
xor
sti
jb
push
xor
inc
inc
popf
mov
fiadds
out
adc
je
pop
push
cmpsl
xor
mov
sub
loope
out
jb
xchg
dec
xor
or
repnz
cmp
sbb
sbb
xlat
jecxz
je
out
xlat
pop
mov
inc
or
xor
pusha
mov
xchg
adc
cmp
outsl
mov
scas
fldcw
rcrb
mov
xor
cmp
mov
lds
lds
xor
pop
outsl
add
pop
lahf
shrb
and
lea
psrlw
mov
dec
sbb
das
out
sub
dec
dec
sub
jecxz
subb
aad
fucom
inc
adc
or
pop
addl
jns
push
xchg
in
data16
ljmp
mov
inc
jl
hlt
aad
inc
mov
and
cmc
lahf
pop
mov
add
out
loop
xchg
andl
and
push
lret
fcoms
cmc
clc
das
das
push
dec
into
or
repz
bound
inc
sbb
adc
adc
mov
outsl
shll
inc
lds
pusha
cltd
dec
adc
ret
pop
outsl
jge
fs
loope
inc
jae
cmpsl
and
rolb
push
ret
fistps
jl
push
cmc
mov
cmpsl
push
xchg
bound
dec
jmp
shlb
pop
xlat
jl
outsl
adc
pushf
scas
adc
test
push
loope
loope
add
xchg
inc
sbb
sub
popa
les
inc
cmp
push
movsb
je
fcoml
out
cmc
mov
pusha
jno
jnp
push
adcl
cltd
xlat
mov
push
push
mulb
adc
add
pusha
movsb
addb
repnz
pop
insb
cwtl
mov
mov
dec
fisubs
movaps
mov
mul
pop
or
out
jb
les
jnp
cs
or
and
subl
into
hlt
and
adc
jmp
pop
fdivrl
mov
push
adc
sbb
mov
add
mov
mov
fldenv
mov
hlt
cmp
int3
out
jb
add
sbb
xor
xor
xor
push
scas
mov
cltd
pop
out
sbb
or
pop
jecxz
mov
jp
push
xor
movsl
push
mov
pop
outsb
mov
or
paddq
and
pop
pop
xchg
or
ficompl
lds
inc
fbld
je
shrl
movsl
pusha
imul
dec
xor
jg
pop
push
mov
xor
loopne
adc
cwtl
xor
call
xchg
cwtl
mov
cmp
lret
lret
rorb
xchg
and
gs
lcall
xchg
jbe
pop
jns
lods
adc
scas
mov
aad
fistpl
pop
stc
int3
inc
mov
aaa
test
pop
mov
push
lods
rcl
rcrb
aad
cmp
inc
addb
mov
repnz
mov
or
push
sbb
adc
sbb
inc
pop
jno
insl
test
mov
jb
cld
fidivl
xor
out
and
jg
push
mov
mov
negl
dec
adc
sub
nop
and
ljmp
fsubrl
inc
pop
mov
dec
mov
xchg
cmpsb
mov
push
cmpsl
lret
xchg
test
xor
or
or
pop
stos
lret
jo
xor
mov
gs
jmp
inc
ljmp
mov
mov
xchg
pop
adc
sbb
scas
add
jge
inc
lock
sahf
scas
and
dec
ja
hlt
cld
push
adc
pop
pushf
sbb
inc
and
out
jp
andb
inc
call
ret
sbb
ja
dec
ret
jg
xor
call
pop
scas
adc
mov
adc
mov
data16
or
ja
xchg
inc
mov
testb
shlb
jo
and
push
cmp
add
loope
lcall
push
test
fldl2e
test
push
pop
inc
dec
or
ljmp
rclb
lds
jecxz
leave
adc
push
js
iret
jae
icebp
andl
test
xchg
int
cmp
pop
loopne
fsubl
ficoms
in
lret
inc
dec
or
in
xor
push
nop
in
push
fisubrl
and
lea
into
mov
pop
mov
test
xor
sar
jns
jb
loop
in
cltd
add
inc
popa
xchg
aaa
outsb
sub
test
aaa
add
mov
mov
subb
je
jno
mov
mov
cmpsb
movsb
rclb
cs
out
dec
sti
pushl
pop
out
in
dec
inc
mov
dec
add
lods
adcb
jnp
inc
add
ret
dec
sbb
orb
or
rclb
cs
cmc
mov
sahf
xor
cmp
sbb
jnp
xor
jno
push
jecxz
loope
lea
imul
sti
sub
xchg
sahf
or
popa
inc
imul
mov
sarl
iret
loope
mov
jmp
mov
or
add
leave
lretw
add
mov
test
lods
shlb
xchg
scas
push
mov
push
repnz
mov
jmp
and
dec
push
cmp
adc
jg
test
gs
stos
test
aad
aam
outsb
add
pushf
fisubl
mov
rol
or
imul
in
fcompl
push
add
push
das
imul
xor
xchg
xchg
push
lock
xchg
jle
outsl
idiv
movsb
repz
push
outsb
mov
fwait
aas
stc
or
pop
jae
or
pop
xchg
imul
shlb
and
sub
mov
lods
lret
ss
push
mov
sbb
out
jg
mov
adc
mov
out
jno
out
cld
fwait
inc
int
and
push
in
cmp
out
or
jmp
sbb
adc
xchg
ret
mov
inc
cmp
or
jl
out
mov
jo
lahf
mov
sarl
cmp
and
pop
stc
aas
push
mov
lret
aad
inc
mov
push
int3
pusha
icebp
jnp
inc
in
mov
cmp
push
cmp
aas
or
xor
xchg
aad
lahf
mov
or
jp
xorb
mov
into
add
pop
or
pop
pusha
xorb
sbb
cld
cwtl
aaa
pusha
fwait
cmp
loopne
xlat
mov
push
je
mov
sbbb
cli
lahf
cmc
pop
ret
sar
xlat
adc
inc
movsb
dec
mov
sub
xchg
notl
fs
add
lods
jge
pop
or
jns
leave
clc
fisubs
pop
lret
xor
and
rcl
sub
gs
test
mov
movsb
push
and
rcrb
adc
xor
mov
push
sub
xchg
xor
xchg
sub
dec
push
stos
stos
in
adc
flds
mov
fcomps
aaa
sbb
sub
movsb
imul
lock
adc
loop
mov
clc
fsub
cmp
add
dec
xchg
lods
popa
add
int
push
aam
daa
xchg
sbb
arpl
stos
or
pop
lods
sahf
xor
xchg
stos
pusha
mov
or
testl
pop
mov
in
mov
mov
repnz
xchg
dec
push
jo
lcall
dec
push
jb
mov
test
test
imul
inc
enter
mov
mov
mov
shlb
mov
popf
fdivs
leave
imul
mov
leave
adc
push
xchg
jp
pop
fcoml
sahf
sysret
cmpsb
jb
dec
out
data16
aas
mov
mov
push
lock
mov
xor
aam
popf
les
xchg
ljmp
int3
std
mov
lret
shl
and
sub
iret
mov
pushf
out
xchg
into
and
es
hlt
or
mov
mov
cs
nop
fucomi
push
stos
stos
and
and
stos
pcmpeqw
call
sahf
pusha
jmp
xchg
xor
sbb
push
mov
and
cwtl
pop
js
cmc
jb
cli
push
je
fs
pushf
pop
and
jle
adc
movsb
pop
lret
mov
lret
in
mov
xchg
sbb
or
jp
and
sbb
or
cli
aad
sub
fdivs
inc
sub
aaa
test
pop
enter
mov
sbb
repnz
jb
push
ja
loope
dec
xor
loope
popf
pop
ficoml
xor
jle
sahf
scas
mov
dec
test
fcomps
sbb
aas
iret
bound
iret
push
and
cmp
mov
lcall
pop
andb
jne
or
ret
cwtl
pop
mov
cmp
lea
jg
push
loopne
inc
sub
ffree
mov
sbb
into
data16
movsl
and
sar
sarb
test
or
out
fwait
sub
ret
adc
shrb
xor
inc
add
test
mov
outsl
imul
jp
and
pusha
ret
mov
scas
pop
out
xlat
or
xchg
fnstenv
or
movsbl
and
mov
cli
pop
arpl
inc
jle
mov
test
mov
clc
or
push
jbe
push
mov
xor
subb
ret
ja
addl
push
call
sub
cmp
pop
stos
push
pop
or
cmp
jle
or
jecxz
pop
test
sub
xlat
xor
push
mov
dec
xchg
rclb
jl
inc
in
hlt
call
ret
pop
iret
mov
sub
fidivrs
iret
adc
sbb
mov
ret
test
mov
jp
add
cmp
pop
push
pop
jbe
inc
mov
into
dec
lods
adc
xchg
jge
sahf
in
loop
rcrl
and
out
adc
push
dec
xchg
enter
push
lods
mov
xchg
sbb
mov
testl
les
push
aam
inc
dec
out
daa
lods
lods
out
pop
add
fwait
in
sub
cmc
fs
cld
jo
mov
pop
mov
push
or
cld
pop
mov
jle
fdivl
xor
ret
cmp
dec
fneni(8087
lret
inc
push
add
or
stos
mov
fbstp
fwait
add
jle
repz
in
and
mov
arpl
push
loop
scas
mov
jp
outsl
xor
jge
pop
in
test
imul
add
pusha
stc
cwtl
enter
movsb
add
iret
mov
movsl
mov
push
jns
aaa
jp
xchg
in
daa
mov
fdiv
mov
std
les
dec
mov
aad
xchg
popf
fsubp
sarb
mov
push
push
rcrb
test
add
scas
xchg
scas
sub
cmp
pop
mov
testl
enter
clc
iret
dec
enter
outsl
je
pop
mov
bnd
insb
dec
dec
roll
in
stos
lret
adcb
scas
je
jecxz
pop
arpl
mov
jecxz
lahf
mov
mov
mov
test
loope
iret
pop
call
ds
mov
dec
pop
insb
xchg
jecxz
mov
loopne
xlat
jp
sbb
sbbb
imul
sbb
lret
cld
aam
xchg
cmpsb
outsl
leave
ficoms
movsl
jmp
lret
out
jae
bound
mov
mov
xchg
scas
cltd
xor
out
dec
aad
aas
aas
dec
sbb
sti
mov
out
pop
in
xchg
mov
cli
int
out
in
adc
mov
int3
out
mov
mov
cli
jmp
jnp
jae
adc
mov
xchg
adc
dec
shll
pusha
xchg
jl
aad
aam
inc
xchg
mov
cltd
dec
aas
jb
mov
add
sub
bound
test
xchg
xlat
fbstp
mov
jnp
dec
pop
scas
cs
sbb
mov
xchg
and
mov
jbe
add
std
xlat
cwtl
or
fisttps
pop
push
cmp
and
aaa
push
mov
mov
mov
push
rclb
mov
rclb
cli
dec
leave
std
adc
mov
outsb
and
sub
js
fstl
and
push
icebp
lahf
insl
repnz
dec
cmpsl
mov
cmp
insb
cmp
and
daa
outsl
pushw
jle
cmp
adc
adc
push
aam
outsl
mov
inc
pop
push
leave
pop
enter
arpl
jle
jo
mov
xor
dec
nop
inc
push
mov
mov
xor
in
push
pop
jb
outsb
or
mov
cmpl
adc
push
outsl
lods
std
adc
aas
mov
js
or
mov
xchg
scas
pop
cmp
adc
xchg
fildll
adc
push
je
sub
mov
inc
outsb
imul
shr
cs
ret
js
insb
pop
sub
aad
jnp
xchg
adc
daa
mov
arpl
xor
fcoms
pushf
insl
clc
lea
in
hlt
sub
pop
fs
test
xchg
into
adc
les
je
cmp
or
cmpsl
jle
mov
jae
ret
fwait
jg
xor
sbb
loope
jp
jl
push
inc
and
pushf
out
clc
repz
xchg
movsb
mov
jno
jp
mov
dec
incl
push
test
inc
push
out
xor
xchg
dec
cltd
iret
lcall
mov
cmp
inc
and
ss
out
sti
sbb
fnstsw
popa
stos
or
pop
iret
and
out
rcr
push
fidivl
xor
push
sub
xorl
outsb
lock
sub
xchg
dec
loop
dec
cwtl
push
sub
lahf
lret
pusha
xlat
shr
cmpsl
mov
mov
mov
out
xorl
push
lods
push
rclb
xchg
xor
cmp
xchg
jmp
cmp
dec
idivl
dec
xchg
inc
bt
dec
adc
cmp
outsl
or
hlt
loopne
inc
pushf
imul
mov
inc
sbb
enter
push
mov
xchg
rep
sub
pop
out
popf
ljmp
mov
mov
cwtl
mov
xor
std
sbb
ret
jg
adc
sub
mov
add
mov
add
popf
inc
movsb
rcll
mov
xlat
fiadds
mov
in
mov
or
mov
pusha
movsl
xchg
sbb
or
mov
xchg
insb
pop
in
ret
fwait
pop
mov
mov
xchg
xchg
jb
inc
icebp
stos
rolb
xchg
icebp
daa
fdivrs
pop
push
fwait
outsl
sahf
sub
mov
adcb
jo
outsb
sbb
sarb
push
push
aam
dec
pop
ja
inc
out
push
xchg
jbe
ljmp
popf
jno
dec
and
popf
sbbl
jae,pn
fcompl
lds
dec
xchg
mov
pushf
pop
xor
stc
lahf
outsl
dec
xchg
add
inc
loopne
mov
mov
xchg
mov
lahf
dec
dec
popf
std
mov
fwait
pushf
shl
loop
jne
push
dec
pop
inc
mov
icebp
mov
adc
lret
inc
jle
cmp
jg
outsl
sub
fistl
dec
cmp
or
sub
insl
sub
sti
mov
fidivrl
lahf
bnd
scas
stos
adc
inc
mov
in
dec
and
mov
ja
adcl
pop
test
adc
cmp
cmp
lods
xor
movsb
lds
jae
mov
jg
leave
push
stc
pop
pop
mov
jp
push
imul
add
pusha
push
jmp
pop
sbb
sbb
sub
idivl
fists
int
mov
xchg
into
lea
enter
mov
test
shl
sub
sub
mov
loope
pop
addr16
or
in
js
test
push
in
sbbl
ja
ja
inc
ret
push
cmpl
mov
push
cmc
inc
mov
rcll
out
mov
pop
or
push
cmc
jp
cmp
icebp
xchg
jl
pop
jg
mov
xor
cli
lcall
mov
jmp
pop
fs
push
xchg
adc
mov
out
xchg
or
adc
pop
push
shll
outsb
out
push
pushf
adc
enter
data16
dec
push
sbb
jae
fldenv
mov
jle
push
pop
push
inc
lret
cmp
or
test
cmpsb
mov
push
insb
outsb
adc
fwait
hlt
jle
jle
pop
ret
test
stc
or
stos
mov
sub
scas
cs
sub
enter
xorb
mov
mov
sub
das
adc
adc
and
loop
popl
jns
xchg
stos
push
xchg
inc
testb
scas
fmull
fadds
popa
mov
mov
jle
sub
xor
imul
aaa
mov
lods
xchg
or
in
jp
dec
stos
xchg
jne
pushf
ja
dec
nop
sub
decb
orb
cltd
aas
or
dec
ficoml
inc
fdivs
aaa
stos
icebp
std
arpl
pop
mov
in
inc
sarb
pushf
bound
sub
inc
loope
jnp
loop
push
shrl
movsl
ror
mov
andl
data16
lea
xchg
outsl
ret
in
pop
sub
fucomi
lret
inc
ret
leave
xchg
addb
out
jg
hlt
out
insb
cmp
fbstp
aaa
cmp
ffree
dec
data16
nop
movsb
adc
mov
adcb
in
jl
popl
std
adc
sub
push
push
repz
int
mov
lods
pop
out
xchg
scas
idivb
xchg
jo
xorl
data16
dec
clc
lahf
test
aas
jmp
inc
cmp
int3
xorl
ja
ret
loope
aam
daa
push
icebp
fcoml
sahf
scas
in
insl
repnz
lahf
adc
and
add
outsb
sahf
lock
cmp
jl
xor
in
dec
push
int3
mov
mov
sbb
jecxz
js
lods
dec
dec
add
ljmp
mov
cmpsl
and
mov
in
frstor
fstpt
or
add
test
dec
xchg
fcoml
push
xor
js
bound
pop
in
int3
fcomps
cmp
push
sub
stc
or
sub
lcall
pop
and
lea
aaa
pop
rep
pop
push
xchg
sub
lcall
gs
cwtl
mov
jmp
push
lcall
jo
mov
add
outsb
mov
mov
jnp
fwait
cltd
outsl
lret
xchg
ret
pusha
sub
jmp
inc
fisubrl
fmuls
mov
ja
movsl
iret
int
lret
testl
cmpsl
push
pushl
stos
imul
sbb
push
mov
inc
mov
mov
insl
fdivrl
mov
xchg
adc
mov
mov
mov
stos
enter
loope
mov
adc
addr16
and
sarb
std
sub
dec
xchg
jp
popf
push
insl
negl
mov
repnz
jmp
sub
in
fdivrl
pop
stos
adc
inc
jmp
in
in
cmc
fisubs
clc
cmp
scas
out
in
jne
pop
adc
rcrl
je
cltd
ds
xlat
into
mov
sub
lret
jne
lahf
int3
mov
movsl
jnp
sub
int
mov
into
jno
fcoml
pusha
push
push
ljmp
ljmp
cmp
cmpsl
pop
cs
in
xchg
and
pop
out
shl
sti
daa
mov
test
mov
scas
or
mov
mov
mov
fs
rcrb
adc
out
push
scas
lds
insb
ljmp
cs
xchg
xchg
outsb
mov
aas
pop
xchg
loop
rorl
ljmp
add
and
sbb
xor
fisubrs
fisttpl
aam
js
ficoml
push
xor
inc
dec
jne
push
mov
cmp
adc
sbb
aad
mov
jle
fcomps
cmpsb
mov
jae,pt
ficomps
stos
sub
dec
les
or
repnz
or
sar
jle
adcb
adc
sub
mov
outsb
je
cmpsl
xchg
and
cwtl
ja
in
sub
jo
lea
mov
nop
aad
dec
orb
and
popa
pop
out
test
cmpsl
cmp
dec
imul
iret
pop
std
jns
int3
iret
xlat
and
roll
jmp
stos
xchg
mov
xor
jbe
out
and
jb
mov
hlt
mov
psllw
sarb
sub
and
or
pop
dec
jne
mov
insl
dec
jno
push
int3
mov
dec
stos
jge
push
cltd
inc
sub
mov
test
loopne
sub
mov
xchg
xchg
test
test
not
mov
push
imul
ds
push
pop
or
in
push
pop
in
pushf
mov
out
cmpsb
pusha
dec
leave
adc
mov
mov
call
jns
adc
mov
mov
push
xchg
loope
and
pop
pusha
push
loop
inc
xor
mov
and
xchg
comiss
jbe
add
imul
mov
xchg
int
pop
add
addb
and
mov
pusha
and
call
scas
lret
push
xor
push
fistpll
dec
push
jnp
aad
mov
jg
mov
mov
test
dec
movsb
repz
mov
push
mov
jecxz
jbe
pop
pop
mov
rcll
icebp
mov
stc
stc
mov
cmp
mov
fwait
jp
or
sbb
add
pop
dec
and
jb
pop
out
and
out
repnz
test
pop
xchg
or
pop
pop
repz
scas
jae
test
pop
fs
sub
sub
mov
mov
dec
pusha
cmp
mov
mov
push
rcr
mov
fsubrp
sbb
push
push
repz
or
add
xchg
pop
adcb
pop
lcall
jae
mov
cld
jae
xchg
popa
popa
add
cmp
pop
aas
cmp
add
lret
and
ja
dec
adc
jl
sub
sbbl
je
in
sbb
xchg
andb
js
pop
pop
adc
xlat
pop
scas
push
es
xchg
pop
enter
inc
mov
push
xor
xor
loope
ficoms
ret
iret
out
and
cmp
jb
dec
outsl
cmpsb
dec
push
sarb
movl
punpcklwd
cmp
push
cmp
jge
mov
aad
and
jge
dec
xor
and
rcl
sub
out
loopne
adc
cmp
les
add
xor
jbe
cmpsl
test
dec
test
out
fnstcw
scas
inc
mov
sbb
cmp
push
sti
cltd
jns
ret
iret
inc
inc
xchg
cmp
ljmp
addb
mov
or
xor
cltd
cmp
and
ja
ret
jne
lar
xchg
jb
call
jnp
xlat
mov
iret
stos
pop
mov
les
fcoml
push
mov
or
inc
fcomps
inc
aad
bound
push
pop
ret
outsl
cmp
mov
lret
inc
js
ret
leave
out
lcall
adc
ja
outsl
pop
ljmp
push
inc
insl
mov
les
dec
bound
dec
push
cmp
fidivrl
stos
dec
data16
ds
cs
ss
xor
lret
data16
das
ljmp
sub
xchg
mov
cmpsb
jb
lea
jne
pop
subb
in
imul
in
lcall
push
outsb
jle
jbe
add
aam
jo
roll
xchg
sbb
pop
push
push
inc
aaa
jno
out
adc
mov
xor
testb
movsl
clc
jae
pop
in
adc
cmc
call
inc
scas
pop
fxch
movsl
push
je
mov
ror
mov
lret
xor
add
lods
add
shll
je
jg
es
imul
and
push
sbb
test
pop
adc
int3
fiaddl
pusha
in
jne
in
data16
pop
mov
daa
pop
hlt
shll
jbe
imul
fwait
ljmp
xchg
mov
lea
inc
mov
jge
repnz
jbe
adcb
pushf
subw
xchg
adc
sar
mov
mov
repnz
and
and
jmp
in
out
fs
hlt
mov
bound
in
ret
stos
or
imul
cmc
dec
jae
mov
out
stc
inc
xor
ja
arpl
xchg
rcll
push
insl
sub
inc
cltd
insl
sbb
cmc
loope
or
jnp
dec
xor
int3
ret
in
dec
and
jle
repnz
mov
xor
popl
xor
cmp
xor
mov
add
cmpsl
out
int
mov
pop
stos
or
flds
jmp
cmp
inc
cmp
loopne
sbb
jmp
daa
pushf
inc
jne
out
std
pop
aam
movl
and
pop
sbb
rorl
scas
push
cwtl
mov
mov
mov
lret
mov
and
xchg
push
mov
xor
and
data16
mov
inc
in
jge
das
xchg
mov
add
pop
or
inc
sub
cmp
jns
aaa
movsb
mov
jbe
jne
divl
mov
out
imul
push
lods
ljmp
fdivrl
pop
mov
add
xor
push
out
iret
je
out
push
mov
dec
sbb
add
and
andb
out
pop
pusha
pop
cwtl
push
cmp
lahf
fsubr
int3
cld
rcl
stos
lahf
mov
cmp
movsb
loop
jmp
push
dec
and
add
aad
sti
fadd
xchg
fld
jecxz
lahf
xor
mov
insl
push
mov
adc
pop
out
xchg
popa
jg
movb
xchg
ficoml
add
xor
lret
out
inc
dec
mov
jle
subb
loope
stos
insl
xchg
fsubs
xlat
or
movsl
xor
testb
int3
jp
movsb
jns
fcoms
xor
enter
add
mov
aam
lret
sub
or
mov
xor
sti
dec
in
cltd
mov
mov
add
popa
add
in
xchg
mov
add
imul
dec
mov
add
scas
adc
add
mov
inc
in
mov
push
test
add
stos
mov
cmp
jge
xor
call
jge
or
shl
push
push
sub
mov
xchg
addr16
and
ss
aas
pop
cmp
push
stos
loope
mov
mov
gs
jp
gs
or
into
jg
cltd
xchg
push
jge
out
mov
in
sbb
out
orl
mov
sbb
adc
add
jl
or
xor
inc
test
movsl
inc
lods
mov
iret
sbb
in
lods
xchg
push
je
sub
int
call
test
pop
cld
xor
push
scas
testl
or
sbb
scas
fsubrs
and
fnstcw
loopne
mov
sbb
jg
mov
call
nop
enter
mov
sub
lock
sbb
mov
xchg
inc
or
push
mov
mov
push
xchg
adc
mulb
sub
mov
mov
sub
and
iret
insb
out
aam
pop
dec
sub
insl
mov
sbb
imul
loopne
jae
cltd
and
test
xor
leave
das
in
dec
jns
adc
lods
inc
xchg
xor
ja
mov
in
lock
pop
add
jge,pn
gs
aam
aam
aas
push
cltd
repnz
mov
repnz
test
and
jnp
sahf
cmp
mov
lock
int3
call
imul
jp
enter
or
sbb
pop
test
in
add
fstl
adc
aas
lea
fldl
cmp
out
mov
inc
int3
stos
mov
adc
lea
mov
nop
addr16
inc
xor
xor
fwait
jle
out
jmp
cs
jb
or
daa
sbb
and
hlt
cmc
addr16
fbstp
jbe
mov
inc
xchg
xchg
aad
or
ficomps
cmc
std
stos
jae
fsts
pop
push
mov
push
call
mov
push
push
and
jmp
imul
std
lock
add
xor
test
rorb
fdivp
or
lea
dec
ja
xchg
and
inc
pop
and
jecxz
orl
mov
mov
aaa
push
jns
aad
ja
cmp
in
and
cld
or
insb
fcmove
add
shrl
clc
pop
and
mov
cld
repz
add
lret
in
lods
xlat
lods
and
mov
stos
cmp
popf
call
mov
jo
sub
icebp
jae
scas
sahf
cmpsl
shrb
add
shl
inc
mov
insl
mov
push
repnz
js
fiaddl
mov
les
xor
jmp
es
idivl
push
pushf
iret
push
sarl
into
push
popa
cwtl
shlb
arpl
frstor
sub
dec
dec
loopne
or
icebp
fsubs
aam
xchg
psubw
fistpl
push
mov
loopne
pop
xlat
pusha
push
in
js
stos
movsl
das
jecxz
pop
add
or
cli
jb
mull
loope
pop
fistps
xchg
sub
mov
pop
rep
add
loopne
sbb
xchg
mov
imul
push
and
push
sbb
loopne
jo
stos
adcb
cmp
jb
fcmovnbe
cmc
int
mov
int
sti
test
cltd
cs
js
jmp
xor
js
jecxz
lret
adc
mov
dec
clc
aas
imul
mov
xchg
add
jae
fs
push
aad
in
enter
lcall
in
rorb
adcb
out
minps
fisttpl
inc
adc
imul
lods
push
cmp
movsl
push
shll
inc
lds
faddl
mov
imul
xchg
subl
jae
orw
and
pushf
in
test
and
adc
pop
out
lret
or
mov
inc
int3
mov
push
int3
sbb
and
lea
push
sbb
clc
rorb
pop
lret
fisttpl
sbb
sub
or
xchg
add
out
movsl
ljmp
xor
jp
push
rolb
and
test
sbb
mov
ds
scas
fidivrl
jb
stos
push
fisttps
and
dec
inc
jecxz
and
cmp
sti
loopne
ja
jno
sbb
jnp
jmp
xchg
jno
or
jle
pop
mov
push
ja
jne
loop
push
push
pop
sbb
test
inc
loope
push
mov
pop
popa
push
sarb
inc
ficoml
or
push
popf
sbb
not
clc
cmp
pop
pop
jmp
and
xor
jmp
jge
xchg
add
out
xorl
jb
xor
and
xor
xlat
pop
in
pushw
pop
mov
idiv
jmp
pushf
fucomip
fistpll
push
cmp
leave
daa
mov
add
in
xchg
or
mov
inc
in
ss
daa
dec
xchg
ficomps
loopne
mov
pop
out
xchg
adc
inc
pusha
xchg
adc
push
or
rcrb
xchg
fists
sti
pop
fdivr
jne
clc
stc
dec
mov
adc
and
push
aam
mov
sub
lea
adc
sbb
xor
inc
mov
or
fmull
andl
stos
scas
push
lret
rol
es
cmp
cltd
inc
into
inc
scas
jge
aas
iret
scas
popf
incb
cmp
dec
iret
fmul
xchg
fwait
into
fcoms
lods
pop
pop
jg
inc
sbb
pop
jbe
in
enter
add
lods
inc
jo
push
jmp
aad
pop
scas
push
stos
jle
leave
xchg
ljmp
ucomiss
gs
fs
push
nop
sub
and
pop
pop
aad
std
gs
inc
out
lds
xchg
mov
or
push
clc
sahf
js
jae
inc
ljmp
ljmp
and
iret
lcall
jbe
jmp
inc
add
jnp
sub
xchg
repnz
pop
dec
outsl
or
pop
cmc
pop
mov
mov
into
mov
cmc
imulb
imul
mov
mov
mov
call
pop
mov
jge
inc
jl
in
inc
push
mov
cltd
jae
fsubrs
inc
lea
mov
mov
fistpl
inc
iret
out
mov
mov
in
dec
jge
imul
and
mov
aad
push
or
popa
pop
xor
mov
and
ljmp
std
adc
jmp
cld
fimuls
mov
mov
andb
pop
push
pop
mov
jno,pt
jl
popf
xor
add
adc
pop
repnz
call
inc
xchg
mov
cmp
push
mov
pop
or
mov
inc
in
lcall
adc
call
adc
jmp
mov
lret
enter
mov
add
inc
in
inc
addr16
xchg
mov
or
js
cmpsb
and
jb
jnp
test
das
aad
inc
xchg
in
imull
movsb
ja
sti
add
cmpsl
inc
fisubs
push
push
test
inc
or
xchg
test
movsb
xor
and
std
lret
lret
popa
and
rclb
std
cld
fistl
aam
xor
cltd
ror
das
cmp
in
jo
inc
push
arpl
add
pop
aam
jno
push
scas
in
hlt
daa
cmp
push
out
lret
cmp
mov
insb
cmp
xchg
jnp
jmp
mov
bound
test
hlt
xchg
add
aaa
push
mov
popa
dec
mov
push
popf
mov
sahf
into
and
stos
test
ret
push
xchg
scas
subb
fcoms
ret
lods
data16
scas
and
shll
lret
clc
sti
mov
subb
scas
ret
adc
xchg
and
addr16
dec
testl
ljmp
cmp
inc
rcrb
fistl
hlt
arpl
inc
cmp
sbb
cmpsl
xchg
push
xchg
popa
add
xchg
nop
jl
mov
push
es
or
pushf
push
xor
dec
pop
sti
mov
sbb
jg
add
jno
ds
in
xor
mov
stc
add
inc
xlat
and
aad
std
sti
inc
shl
scas
push
xor
movsl
jnp
lret
cmp
pop
mov
pop
mov
call
js
fdivrs
lret
int3
and
imul
pop
scas
push
adc
stos
sti
cmpsb
mov
sub
aad
inc
andb
popf
fsubp
ljmp
pop
xor
and
adc
pand
iret
test
pop
cmp
add
call
xchg
mov
in
rcll
adc
std
shl
mov
ret
lret
fs
mov
jae
jge
pop
sub
pop
xlat
mov
push
popa
in
in
xchg
stos
xchg
not
fimuls
in
fcom
repnz
out
cmc
lods
dec
sbb
and
shlb
bound
arpl
push
jle
mov
push
push
stc
push
fstpt
or
mov
mov
int3
in
sbb
stos
icebp
imul
enter
lret
popl
cmp
movsl
repz
pushf
pop
cwtl
push
mov
pusha
mov
xor
rep
fisubs
sub
mov
lahf
cmpsb
or
std
scas
cwtl
cmc
cmc
ss
or
in
aaa
lds
pushf
dec
ret
sbb
lret
enter
lcall
mov
stos
data16
sbb
mov
pop
and
ret
jne
in
add
and
adc
sbb
push
outsl
xchg
sbb
es
cwtl
cs
inc
jle
push
push
cmp
repz
inc
stc
push
sub
pusha
outsb
in
testb
pop
sar
loope
loope
out
aas
fnstenv
mov
mov
idivb
imul
rcrl
fiadds
xorl
mov
add
cmp
lahf
ja
lods
scas
cli
sbb
adc
pop
lods
ret
cmpsb
lds
xchg
sub
fisubrs
lret
mov
fldt
mov
fcoms
mov
xor
and
push
and
fsubrp
lea
or
cli
cwtl
pushw
stos
xor
adc
cmpsb
leave
imul
xchg
stos
in
dec
push
pop
arpl
jb
fimuls
add
sarb
pop
dec
mov
lds
and
and
aaa
rcrl
and
in
loopne
shrb
mov
mov
lods
pop
mov
ja
jae
or
dec
push
add
push
cmpsl
xchg
fwait
xchg
incb
repz
js
jbe
gs
mov
add
cli
cs
mov
mov
cmp
push
add
test
jp
sub
or
add
push
aad
daa
mov
lds
add
sahf
push
mov
test
into
shll
pop
dec
sub
outsb
imul
mov
clc
xchg
mov
addr16
es
insl
and
cwtl
das
push
ficompl
sub
rcrb
dec
inc
bound
push
repz
cs
testb
clc
lds
loopne
adc
in
mov
or
arpl
push
add
cmp
xor
xor
ds
cltd
xchg
popf
xchg
pushl
in
sbb
aad
movsb
push
scas
in
cmp
das
pop
sub
orl
adc
xchg
inc
div
adc
shll
popa
dec
dec
dec
aad
pop
popa
adc
stos
lods
lods
xor
popf
jl
nop
cmc
xlat
je
hlt
sbb
into
cmpsb
inc
outsl
les
mov
mov
sbb
cmp
jl
arpl
imul
lret
and
xchg
fmull
cmp
pop
add
in
jecxz
sbbb
jns
or
outsl
movsl
xor
fists
cmp
and
xor
lcall
das
sbb
mov
pop
sbb
add
push
aam
shlb
cmp
dec
or
add
pop
or
out
add
push
mov
mov
and
dec
jns
xor
in
mov
mov
aaa
push
fwait
push
cmpsb
into
inc
jmp
cmp
dec
push
xchg
shr
mov
bound
out
jecxz
loopne
mov
sti
and
jl
cmc
mov
dec
cmpb
or
add
ret
rolb
mov
pop
rcrl
outsl
dec
out
adc
mov
add
xchg
fnstsw
lret
rol
and
sarb
sbb
bound
inc
jae
xchg
sub
stos
xchg
or
sbb
sar
int
inc
sbb
push
lds
jecxz
xor
sbb
rolb
clc
mov
movsl
bound
stos
cmp
test
ss
and
leave
mov
xor
cli
call
adc
mov
jns
add
lea
xor
fistpl
mov
sub
hlt
mov
fcmovnbe
cld
xlat
outsl
add
or
xchg
es
cmp
lcall
loope
or
popf
xchg
inc
xchg
xor
dec
ret
sbb
push
iret
test
mov
aam
cmp
sbb
jmp
sub
loop
lcall
dec
rcr
xchg
push
ss
fimull
in
mov
xorl
xchg
fsubl
cmp
adc
test
and
mov
lret
hlt
imul
mov
mov
cmp
nop
fwait
sub
xchg
pop
ja
nop
dec
pop
xchg
inc
rorl
mov
and
mov
fidivs
xor
enter
cmp
shr
cltd
pop
rcr
push
pop
adc
bnd
pusha
pop
iret
mov
xchg
cmp
dec
sbb
ja
enter
fstpt
scas
sub
lea
aaa
dec
inc
mov
jmp
jmp
loop
pop
lock
dec
lea
xor
stos
mov
ja,pt
pop
cmp
ds
lret
xor
push
insl
es
inc
sub
sub
xor
out
pop
and
fisubs
and
mov
pop
add
decl
lahf
pusha
mov
add
inc
dec
out
jle
lcall
cmp
loopne
mov
jbe
pop
les
sbb
aad
pop
lea
jg
dec
js
xchg
xlat
jp
lods
cmc
sbb
sahf
and
fdivr
push
pop
mov
js
aad
ljmp
push
mov
mov
pop
xor
adc
pop
xor
pop
lods
nop
addr16
push
xchg
dec
outsl
mov
lods
ja
stc
push
mov
push
push
aaa
lret
jmp
inc
andl
or
push
or
mov
repnz
pop
popf
push
jmp
push
shrb
jne
lahf
xlat
sbb
or
cmpl
pop
push
ret
inc
fwait
and
stos
stc
jge
mov
pop
loopne
ja
add
stc
mov
lret
insb
mov
push
daa
mov
lods
adc
ja
mov
in
mov
ret
lock
mov
pop
mov
and
inc
scas
push
out
xchg
jmp
fisttpll
mov
popa
mov
cld
mov
lods
dec
cmp
cmpsl
clc
sarl
test
add
xchg
ret
sbb
push
adc
sbb
and
mov
bound
enter
jnp
cmp
mov
rcr
cmp
bound
push
mov
sbb
jmp
scas
cmp
lcall
in
add
ds
add
arpl
sbb
andl
and
cmp
insb
aaa
pusha
dec
or
pushf
dec
mov
in
clc
xlat
roll
xchg
and
jns
loop
inc
push
push
mulb
push
sub
mov
add
ss
das
sbb
and
cmpsl
lcall
repnz
mov
inc
addr16
aad
fmull
insb
xchg
pop
pop
fstpt
xchg
or
aad
mov
xchg
pop
inc
cmp
cmp
adc
sbb
cltd
out
lods
inc
jne
rcrl
stos
notb
movsl
sbb
incb
movsb
pop
pusha
dec
jl
pop
jno,pt
mov
mov
rclb
pop
orl
push
fisubs
pop
jp
xchg
call
icebp
in
push
scas
bound
pop
push
dec
fwait
push
out
sbb
xchg
lahf
adc
out
stc
stc
dec
sbb
adc
fistpll
mov
cld
out
pop
or
es
pop
inc
adc
imul
cwtl
scas
mov
mov
stc
xor
push
pop
inc
xor
shl
andb
sar
fnstenv
add
inc
iret
cmp
sbb
repnz
gs
divb
cmpl
andl
aaa
das
rorl
jnp
or
movsl
dec
add
xor
lret
or
xor
pop
sbb
mov
sbb
ss
jmp
and
mov
dec
pop
pop
mov
call
jne
mov
push
pushf
push
repnz
cmp
out
jecxz
xor
adc
fcoms
xor
ljmp
fistps
outsb
lcall
sbbl
xorb
lods
hlt
insl
pusha
popf
mov
jne
shll
xlat
or
test
movzbl
cli
in
ficomps
adc
inc
lret
xor
cs
jns
nop
data16
mov
mov
arpl
popa
lods
or
mov
adc
subl
lret
mov
cmc
pop
cmp
jb
bound
in
rcrl
sbb
imul
xchg
fistpl
cli
adc
mov
dec
fidivrs
in
ret
ljmp
xor
sahf
in
xor
mov
out
test
mov
sub
jmp
out
xchg
mov
add
stos
xchg
nop
jmp
aad
cli
lahf
lock
pop
jecxz
in
jp
aam
sub
gs
dec
jl
adc
in
push
lahf
jl
mov
data16
aam
pop
mov
sub
aas
mov
dec
insl
insb
mov
pop
in
and
fwait
subl
lods
push
fwait
std
lods
sbb
into
stc
xchg
dec
hlt
fisttps
jns
scas
fmuls
and
les
mov
scas
out
xor
cmpb
push
xor
add
sub
in
in
int
sub
xchg
rep
mov
pop
aam
add
popf
loopne
and
sarl
cmpsl
loop
xchg
cmovge
jp
fsubrp
sub
add
pop
mov
push
mov
mov
adc
ds
bnd
mov
aad
insl
es
bound
cmp
cli
xor
or
bound
aad
pop
lret
lea
dec
pop
outsb
loope
lret
scas
push
fdivr
mov
cmp
mov
push
gs
inc
out
mov
and
lret
or
and
nop
push
fs
adc
fildl
mov
lds
pop
nop
mov
xorb
in
xor
insb
mov
shll
fisttps
nop
inc
sahf
in
cmp
jne
jecxz
lahf
scas
xchg
test
test
fstpl
icebp
add
adc
daa
outsb
aas
push
fdivrl
cmp
sub
lret
jle
pop
lret
pop
jb
mov
sub
sub
mov
xchg
mov
fdivs
xor
pop
pop
je
dec
mov
mov
jl
subb
jne
inc
shlb
in
pop
aaa
pop
xor
mov
leave
je
mov
clc
dec
push
aas
arpl
int
jo
jo
aam
ja
aad
sahf
out
jo
insl
mov
sub
cmp
mov
inc
repnz
mov
pop
xor
cs
sti
aam
clc
shll
xchg
or
jecxz
pushf
and
movb
icebp
in
repz
jmp
xlat
call
xchg
js
push
sub
mov
aad
or
outsl
test
jmp
cld
icebp
int3
jns
outsl
add
ficompl
out
insl
loop
and
mov
cmc
mov
in
enter
pop
sar
cld
aaa
ja
xor
sub
out
je
sahf
pop
nop
ret
sub
add
pushf
mov
ret
rclb
or
loopne
xor
int3
aad
push
popa
das
inc
not
xor
push
xchg
mov
xor
dec
xchg
in
lcall
inc
mov
push
into
pop
mov
adc
shll
icebp
das
adc
push
push
iret
mov
or
add
lret
es
adc
out
dec
dec
jecxz
adcl
in
or
xor
add
jg
mov
fbstp
int
mov
sub
insb
mov
lock
enter
pop
xchg
cld
hlt
pop
inc
and
push
sbb
outsb
pop
int
add
dec
in
and
popf
jmp
loope
cmc
mov
test
jmp
xchg
mov
dec
push
add
add
ljmp
and
loop
xor
pop
lock
int3
dec
addl
sbb
scas
sub
pop
repz
or
aaa
repz
add
adc
imul
and
shl
add
lret
push
mov
jbe
pop
fcomps
pop
dec
push
test
je
dec
cli
adc
fs
adc
in
xor
xchg
jo
je
or
aad
push
push
sub
pop
movsl
aad
pushf
ljmp
jg
ret
aad
insb
mov
mov
jmp
std
lods
sub
or
leave
or
stos
cs
ljmp
cmp
pop
loope
lds
daa
sub
jecxz
or
add
or
jge
cmp
jbe
inc
aad
lods
xor
inc
in
ljmp
pusha
daa
jb
test
inc
aas
mov
scas
or
sub
mov
fcomps
add
enter
mov
movsb
repz
daa
ficomps
nop
sbb
xor
cmp
mov
pop
inc
xor
lods
mov
mov
push
sbb
and
aam
int
sbb
test
mov
push
sbb
pop
add
dec
adc
ficoml
loopne
sbb
xor
mov
pusha
pop
or
cmp
sti
xlat
pop
sti
pop
leave
jge
shlb
mov
aam
nop
jl
popa
and
repnz
fwait
mov
popa
rolb
lahf
test
ss
add
jg
sub
dec
movsl
pop
cwtl
insl
and
xor
or
xchg
pop
mov
insb
pop
in
hlt
call
pop
push
mov
lahf
xchg
mov
add
sbb
push
scas
scas
xor
fs
xor
add
loopne
sahf
inc
adc
lahf
inc
push
sbb
xor
inc
mov
add
pop
shrl
jo
inc
mov
xchg
jnp
dec
stos
jg
mov
jge
lds
test
clc
lods
hlt
por
cs
ljmp
shlb
es
mov
lods
in
jns
aam
xchg
addr16
and
inc
icebp
jge
and
stos
in
dec
sbb
add
nop
scas
push
movsl
mov
imul
decl
je
ja
push
aam
mov
in
lock
mov
push
add
pusha
cltd
sub
inc
and
add
aam
xchg
mov
cmp
pop
addr16
fnstenv
mov
dec
fsubl
pop
add
push
insl
les
xor
xchg
mov
pavgw
movsb
lods
iret
xor
das
pushf
or
aam
pop
push
popa
inc
xor
mov
add
arpl
mov
fwait
dec
pop
cmp
inc
dec
add
addr16
cmp
test
jg
push
mov
xor
arpl
mov
xchg
das
xor
in
sbb
inc
or
cmc
sub
add
insb
movsl
inc
xchg
fstpl
scas
int3
mov
loop
int3
mov
push
test
aas
add
mov
mov
xchg
icebp
aad
fidivs
cmp
adc
dec
jecxz
stos
xor
sbb
push
pop
lret
and
xchg
test
xchg
sub
mov
in
mov
hlt
inc
addl
mov
hlt
push
fmull
and
enter
pslld
add
sub
rorl
int3
cmp
cmp
pop
jp
push
sbb
fnstenv
ret
mov
pop
fldenv
aad
nop
xor
stc
and
sbb
mov
jge
sbb
fldcw
ljmp
repz
sahf
fistps
push
mov
pop
cld
pop
mov
push
add
xchg
adc
push
mov
repnz
notb
add
pop
mov
sbb
test
pop
lods
xor
push
jb
xchg
aaa
dec
sub
out
mov
rolb
inc
cmc
pop
mov
pop
ret
fisubrl
in
das
stos
lret
out
ss
push
outsl
js
cmp
mov
inc
cmp
sub
pushf
data16
fcompl
xlat
ret
fcompl
xor
js
adc
pop
inc
mov
scas
cmpl
jmp
mov
sbb
sbb
jae
sub
adc
inc
sbb
cmp
mov
jle
push
imulb
ljmp
mov
inc
cmc
xor
mov
adc
sbb
pop
lret
mov
js
jno
xchg
xchg
adc
notl
pop
cmpsb
arpl
fstps
push
cld
call
jp
sarb
inc
mov
add
insl
popf
movsb
icebp
sub
adcb
test
nop
repnz
sti
scas
cwtl
shlb
or
lea
mov
dec
xor
pusha
sub
pop
xchg
mov
lds
push
daa
or
mov
lcall
jo
dec
fdivrl
inc
cmpsb
xchg
mov
cld
mov
cmpsb
cmc
jl
rclb
mov
lret
lods
out
sbb
in
push
jb
in
dec
xor
sbb
imul
add
add
jg
pop
ljmp
shrb
mov
push
dec
test
addb
pop
inc
cmpsb
and
stos
int
sub
mov
xor
mov
sub
mov
cmp
fs
add
pop
divb
mov
dec
ds
jns
aad
jbe
mov
scas
inc
shrl
int3
je
sbb
push
mov
sub
popf
addr16
icebp
jg
leave
lds
popf
jnp
sub
mov
pop
mov
mov
push
roll
inc
rorl
ficomps
mov
xchg
mov
cmp
add
cmpl
xor
mov
dec
cmpsl
repnz
sbb
push
xchg
ss
mov
lret
add
mov
pop
sbb
pop
sahf
rcll
inc
push
xchg
pop
adcl
adc
es
push
idivb
loopne
jg
pop
rorb
mov
lea
and
lods
adc
fisttpl
mov
inc
mov
icebp
popl
jns
push
jno
push
sub
call
push
je
icebp
ljmp
test
mov
xchg
out
mov
xor
sub
sub
cmp
mov
xor
dec
mov
mov
rol
mov
sub
push
jp
add
or
and
jg
mov
adcb
popf
push
xor
shll
jo
mov
ljmp
xchg
pop
lds
inc
jae
mov
sub
lret
mov
inc
in
inc
fldl
jo
xor
jb
sub
loope
ret
lret
xor
push
sbb
xchg
add
stc
add
add
xlat
aas
enter
inc
pusha
push
mov
loop
jb
ljmp
push
out
mov
aad
les
dec
in
and
fildll
test
imul
bound
je
test
in
lock
push
xchg
js
fs
bound
mov
fdivrl
std
rcll
dec
in
xchg
pushl
inc
dec
inc
pusha
inc
stc
loope
test
test
xchg
int3
pop
and
in
push
fs
ficoms
rorb
sti
jp
jae
mulb
jl
push
frstor
ja
loop
scas
lods
imul
cmpsb
outsb
push
ss
xchg
lock
arpl
call
ret
inc
mov
push
addr16
mov
arpl
ret
add
fs
cmp
pop
sbb
or
lret
xchg
data16
aas
xor
jns
jns
mov
nop
xlat
rclb
sbb
jns
inc
xchg
or
daa
in
push
test
pop
jecxz
push
lahf
test
and
enter
andb
and
dec
fadd
ret
lret
mov
push
pop
xlat
mov
cltd
pusha
in
int3
mov
inc
xlat
pop
pop
pop
mov
cwtl
xchg
inc
dec
stos
addr16
adcb
mov
adc
test
adc
ljmp
push
pop
xchg
cmpsb
out
or
xchg
cmp
dec
movsl
add
pop
scas
clc
sbb
push
jge
adc
out
cmp
sub
xchg
lret
dec
dec
mov
pop
dec
mov
jns
xchg
sbb
loope
cmp
jle
ss
cli
data16
mov
or
inc
pop
cwtl
cld
jns
cpuid
or
mov
xor
and
insl
popf
aas
mov
pop
push
mov
popf
mov
mov
jae
sbb
add
addr16
xchg
lock
jne
or
xor
pop
mov
testl
and
std
fs
ljmp
test
ss
pusha
rclb
sarl
xchg
mov
lret
push
clc
mov
shr
adc
stc
fldl
xchg
adc
faddl
jg,pt
mov
call
cmp
dec
loopne
mov
test
sbb
xor
lods
outsl
sti
and
jmp
jb
outsl
or
fistpl
and
mov
inc
test
and
mov
cmpsl
mov
mov
scas
mov
imul
in
and
mov
ss
mov
jle
add
fsubr
stos
push
cmpsb
roll
jmp
sbbl
mov
popa
repnz
jp
cmp
jmp
cwtl
push
out
outsl
cmp
inc
mov
jno
mov
imul
imul
pop
sub
pusha
andb
sub
test
out
and
pushf
sub
pop
out
enter
rclb
stos
cmc
cmovs
sbb
xchg
adc
sbb
fstpt
xor
test
add
mov
xor
sahf
mov
xchg
cmp
ret
sbb
pop
test
push
sub
xlat
pop
xor
out
mov
pop
push
cltd
xchg
out
aas
jp
call
cmpsb
mov
jb
cwtl
cmp
or
mov
lods
outsl
mov
in
cmp
das
lret
fimull
cwtl
nop
ss
loope
cmc
xlat
lret
cwtl
and
outsb
sub
ds
add
pop
mov
aas
das
jae
shl
lock
jmp
cmpsl
xchg
jge
pop
cmp
pusha
sbb
pushf
pop
cmp
mov
pop
std
mov
mov
dec
xchg
test
sbb
pop
scas
dec
lods
lcall
adcl
xor
idivb
jae
in
sbb
stos
pop
mov
pop
push
push
jle
and
xchg
mov
cmc
or
es
mov
in
fidivl
mov
rorb
dec
dec
inc
mov
sub
mov
mov
fsts
mov
push
push
hlt
push
or
iret
pushf
xor
andb
test
jno
inc
insl
popf
sbb
adc
negb
adc
dec
pop
fisubrs
mov
test
int
or
inc
lock
movsl
enter
xchg
push
gs
pop
mull
mov
mov
sbb
or
es
into
lds
dec
sub
movsl
int3
popa
scas
add
pop
inc
lahf
and
cmp
jg
pop
push
xchg
add
popa
adc
sbb
mov
aam
andb
in
test
enter
jb
mov
lcall
sbb
lds
cmpb
cltd
loop
push
push
ror
ljmp
xchg
sub
and
or
imul
cmpsl
test
cmp
xchg
js
test
push
mov
xor
inc
dec
xor
les
lods
fstl
fwait
test
cmp
and
data16
dec
xor
mov
and
mov
rorl
lods
xchg
inc
int
mov
xorl
rcl
mov
and
rol
cmp
jecxz
les
jge
sub
mov
pop
sbb
leave
add
xchg
mov
lret
mov
flds
enter
push
imul
stos
push
loopne
add
movsb
jl
lea
or
cwtl
mov
call
xor
repnz
mov
inc
movsl
cmp
sbb
das
xchg
cmpsl
push
or
sub
mov
jp
stos
xor
mov
add
imul
mov
jle
push
sbb
push
fcompl
and
jle,pt
pop
and
imul
push
in
mov
aas
mov
lock
aas
loopne
xchg
cmpsl
and
xorl
adc
cmp
or
and
and
pop
fldt
out
xchg
loop
pop
or
and
sbb
xor
leave
std
imul
ret
cli
push
fbld
shll
inc
out
inc
adcl
and
js
jecxz
popf
push
cmpl
mov
cwtl
mov
enter
xchg
xchg
loopne
sub
test
lretw
xlat
sar
gs
in
mov
les
daa
imul
pop
imul
std
ja
sub
fiadds
add
cmp
mov
jae
adc
lods
pop
inc
inc
aaa
inc
add
into
push
push
adcl
and
xchg
cmp
bound
add
pop
icebp
inc
dec
dec
pop
and
das
enter
xlat
mov
sti
mov
ss
inc
push
movsb
cmc
cltd
loope
decb
into
pop
fistps
jne
loop
or
dec
cmpsl
hlt
and
popa
popa
es
arpl
cmp
add
dec
mov
jae
mov
cmp
aad
add
jge
push
stos
jmp
push
cwtl
popf
stos
out
hlt
out
jne
inc
fists
notb
sti
push
nop
jg
stos
mov
xor
ret
push
jae
data16
jecxz
pop
inc
jg
sbb
mov
mov
mov
sti
push
data16
ret
xor
push
lcall
dec
clc
push
dec
sub
out
mov
test
outsb
mov
ret
push
js
fcoms
add
push
mov
add
mov
imul
push
xchg
arpl
add
mov
arpl
mov
sbb
xorl
loopne
je
inc
xor
loop
sbb
inc
adc
mov
les
push
les
inc
inc
jae
mov
or
jb
ss
aaa
das
mov
sub
or
rclb
popa
or
xor
out
subl
repz
add
add
adc
dec
cmp
adc
stos
loop
fisubl
int3
arpl
js
imul
jle
iret
adc
ret
cmpsb
out
fistl
xchg
lret
inc
test
jne
xor
popf
xor
fsubs
and
sbb
sub
dec
sbb
nop
int3
testb
out
mov
mov
out
cmp
mov
cmp
daa
xchg
bound
outsb
xor
cltd
les
cld
ror
pop
test
push
fbld
lds
or
arpl
pop
dec
jmp
icebp
stos
or
adcb
add
hlt
inc
jnp
insb
push
insl
inc
mov
cltd
sbb
loopne
mov
or
fmuls
jne
and
shrb
dec
test
dec
jp
sub
xchg
adc
xor
inc
lea
sbbb
scas
notl
mov
jp
lds
loopne
mov
pushf
mov
mov
int
jno
xchg
push
hlt
jns
sbb
lods
ljmp
lods
jg
aad
out
pop
sub
std
nop
cmpb
push
pusha
fs
xchg
mov
add
sbb
cs
lds
in
push
rolb
lea
and
sbb
inc
cld
insl
and
push
cli
ja
stos
xor
adc
clc
mov
cmp
pop
sbb
and
insl
push
clc
arpl
jge
shr
loope
mov
or
or
add
mov
mov
sbb
xchg
test
xor
pop
jns
add
out
pushf
ljmp
dec
sbb
enter
fwait
stos
sbb
sub
mov
ljmp
lret
xchg
mov
popf
or
insb
daa
mov
loop
in
cmpsb
hlt
popa
sub
push
and
movsb
fldenv
call
popa
adc
xor
iret
xchg
cli
rolb
inc
js
aam
jl
mov
xchg
pop
sbb
shll
jo
inc
test
mov
mov
xchg
mov
pop
loope
add
inc
cmp
jge
fidivrl
popa
dec
loop
add
pop
daa
inc
mov
mov
xchg
cld
and
xorb
or
scas
out
inc
adc
mov
imul
fs
aaa
xchg
jno
mov
push
cmpsl
fists
test
fwait
sbb
dec
adc
out
out
push
lods
cmpsb
shll
mov
fwait
mov
repz
neg
or
lahf
sti
xchg
sub
push
rcrl
out
cmpsl
lods
inc
adc
cmc
mov
jge
fcoms
jne
pop
mov
cmp
testb
jge
adc
adc
pop
push
aas
jae
scas
pop
and
sub
sub
mov
or
out
cmp
xchg
mov
and
cmp
push
push
mov
mov
jne
out
sub
or
pop
hlt
in
loop
mov
jb
xor
inc
mov
add
pop
loopne
insl
pop
or
ja
imul
enter
xchg
mov
mov
mov
and
pop
xlat
outsl
sub
cmp
xchg
cmp
std
test
and
sub
mov
pushf
push
or
nop
push
lea
cmp
pop
lds
mov
aas
jge
mov
test
pop
jb
mov
add
les
jp
pop
add
andb
mov
fsubrl
mov
int
lods
jmp
add
sbb
aad
pushf
aas
xchg
into
xchg
shl
inc
ret
sbb
stc
mov
sub
jns
pushf
lods
pop
sbb
adc
repnz
js
add
pop
inc
fdivrs
mov
mov
jbe
dec
sbb
mov
cli
mov
lea
xchg
add
fidivl
mov
pop
jns
mov
jo
dec
rorl
hlt
jmp
cmc
insl
cmpsl
test
mov
mov
test
pop
sub
insl
pop
xchg
jmp
outsb
pop
jmp
jmp
xchg
xor
adc
push
divl
jmp
movsl
dec
sbb
std
jle
mov
jg
frstor
cwtl
adc
loopne
jae
mov
or
inc
setg
mov
pop
ja
mov
aam
inc
push
jae
aas
in
pop
mov
lret
loope
xchg
mov
call
ljmp
adc
movsl
leave
sub
enter
mov
daa
or
je
mov
sbb
jmp
cltd
sbb
ss
mov
cmpsb
mov
and
scas
inc
pop
inc
pushf
je
mov
cmc
lss
nop
shll
jmp
add
js
cmpsl
punpcklbw
push
mov
xchg
pusha
ret
js
xor
push
in
sbb
xor
ret
pmaxub
dec
mov
pop
in
shl
stos
or
or
push
fisttpl
popf
shll
jmp
add
test
outsb
repnz
aam
movsb
lds
jns
jg
dec
aad
in
xchg
js
inc
jno
mov
fidivrl
mov
xchg
ljmp
mov
sub
movsl
dec
loope
jl
sub
jne
add
mov
sub
imul
test
mov
test
sahf
ret
pop
adc
jne
daa
cs
lcall
cwtl
xchg
pushf
pop
sub
cmpsl
cmp
aad
movsb
lods
sbb
mov
inc
xor
push
and
or
ret
add
js
fldl
dec
or
testl
and
ja
fs
sub
pushf
jne
lcall
mov
jecxz,pt
adc
mov
jecxz
stos
add
addr16
das
popf
cs
out
xor
add
popf
sub
aad
ret
xlat
dec
jne
jmp
js
xchg
or
jl
inc
sbb
mov
push
outsl
shlb
in
adc
movsb
daa
push
pop
hlt
mov
mov
adc
rorb
sub
push
mov
or
cmp
pushf
out
adc
aas
pop
fnstenv
push
sbb
orb
push
or
mov
inc
lds
jb
cmp
or
aaa
xchg
inc
xor
mov
jg
mov
pop
sub
faddl
mov
xor
lods
fbstp
sbb
call
inc
xchg
shll
test
adc
jae
and
xchg
push
xorb
sbb
data16
addb
dec
jmp
sbb
loopne
mov
mov
xor
pop
mulb
mov
mov
push
xor
out
imul
clc
dec
ret
mov
shr
arpl
jg
dec
ja
dec
stc
mov
stos
mov
ljmp
add
xor
sbb
mov
pop
xorl
hlt
sbb
fcomps
pop
sub
ss
sub
inc
icebp
fcmovnbe
mov
mov
shlb
repnz
jp
cmpsl
add
mov
jo
pop
ja
sub
inc
mov
push
fcompl
add
cli
stos
in
add
movsb
aad
outsb
aad
mov
stos
xor
and
jmp
shrb
xchg
std
repnz
pop
repz
and
lret
adc
jae
adc
imul
adc
pop
or
mov
xor
cld
inc
das
xlat
jg
lock
pop
and
jb
xchg
push
test
and
add
movsb
stc
outsb
ret
lea
pop
cli
lret
cli
adc
es
xchg
mov
repz
xchg
call
push
inc
into
inc
imul
mov
jae
pop
dec
sahf
and
outsb
mov
push
sub
jp
jmp
testl
fistl
xor
movsb
in
mov
dec
test
test
mov
es
sub
xor
xchg
test
inc
sub
gs
flds
dec
int
mov
movsb
out
cwtl
stos
pop
mov
arpl
add
inc
xchg
sbb
inc
mov
jne
decl
jg
cltd
mov
mov
ljmp
loope
pop
outsb
mov
push
lods
icebp
das
or
push
mov
xchg
imull
ret
push
jo
sub
test
and
xchg
cmp
int3
shrb
cltd
imul
push
xchg
push
movsl
testl
rclb
in
test
add
fnstcw
jne
xlat
roll
sarl
dec
lods
popf
dec
cld
dec
dec
push
xchg
jb
cmpsl
int
xchg
jle
je
add
xlat
fisubl
bnd
xor
scas
pop
mov
xchg
lods
ss
imul
fistpl
lds
mov
pop
mov
dec
mov
lret
xor
sub
or
sub
out
inc
in
loope
inc
add
aad
dec
mov
jle
bound
fs
fldcw
outsb
in
mov
daa
imulb
sbb
daa
adc
dec
out
mov
or
ret
js
out
adc
ret
repz
js
js
aam
jp
test
lret
je
sub
mov
dec
inc
imulb
sub
add
sub
hlt
mov
out
xchg
and
out
mov
scas
test
xor
idivb
sbb
xchg
dec
sbb
icebp
enter
jle
pop
push
out
adc
jno
pop
xchg
popf
add
les
mov
cmp
adc
fisubl
aam
and
mov
pushf
fdivrs
and
pop
in
sbb
push
mov
jecxz
add
mov
scas
and
mov
and
std
xchg
cmp
and
cwtl
sub
sbb
push
in
pop
dec
mulb
or
popf
lahf
sbb
inc
pause
rcrl
inc
or
jecxz
add
xchg
sub
popf
data16
cwtl
bound
sub
fldcw
mov
das
and
cmp
add
xor
mov
jne
jb
push
ss
push
mov
int
cli
xor
jne
jnp
push
aam
xor
mov
outsb
dec
inc
cltd
sbbb
bound
lods
dec
push
jl
sbb
and
jo
loopne
add
push
cmp
ret
decb
lret
jecxz
adc
and
or
mov
pop
imul
mov
aas
push
xlat
lea
xchg
cmpsb
xor
jns
and
cmpsb
int3
dec
out
adc
fimull
dec
ja
lods
and
mov
or
and
insl
xchg
outsl
sbb
fs
out
push
jae
arpl
mov
clc
adc
mov
mov
pop
cmc
jo
in
mov
lods
in
jecxz
aam
xor
ret
lea
lock
int
push
loop
pop
adc
pop
inc
xlat
sbb
and
lahf
jg
mov
out
and
and
movsb
sbb
cs
xor
adc
clc
ja
je
pop
out
sub
sub
fs
call
test
inc
inc
adc
dec
jo
cltd
add
dec
xlat
mov
dec
xor
jb
mov
push
clc
xchg
inc
cmp
aad
cmpsl
call
pop
mov
hlt
inc
dec
fcoms
xchg
movsb
push
xchg
test
inc
ficomps
xchg
shrd
sub
cmp
cmp
pushf
scas
mov
xor
insl
test
mov
leave
test
dec
dec
sbb
gs
mov
adc
ljmp
cli
loope
and
mov
lock
int
xchg
cmp
das
int3
stos
adc
shlb
roll
mov
adc
sub
adc
inc
cld
mov
dec
mov
cwtl
push
aaa
xchg
push
push
shlb
add
les
push
inc
inc
lahf
sub
lods
inc
xchg
cmp
push
sbb
jmp
fcomps
jae
jo
jb
cvtdq2ps
xchg
int3
loop
sub
mov
loopne
icebp
repz
ljmp
in
insb
jle
inc
xchg
jo
sbb
adc
shlb
cmc
lret
jns
adc
call
dec
pop
jg
out
in
js
pusha
mov
sbbl
repz
push
insb
test
jmp
xlat
xchg
inc
aas
or
ds
lds
fmull
add
cltd
mov
add
testl
push
dec
insl
and
repz
rcll
mov
cmp
clc
or
sbb
xor
and
loope
add
or
jmp
push
sub
les
jmp
jle
lret
test
out
mov
push
adc
ror
fdivrl
push
je
fnstcw
divb
pop
inc
icebp
adc
push
mov
inc
shrl
fnsave
pop
lock
push
fs
xchg
xor
aaa
popa
cwtl
pushf
clc
jg
jle
cmc
in
clc
mov
pop
hlt
xorl
inc
push
nop
fwait
insl
dec
jne
jo
inc
pushf
popf
movl
fs
xor
cs
sbb
popa
lds
pop
clc
repnz
dec
hlt
mov
data16
add
adc
ror
xor
jge
stos
sub
jo
jmp
rorl
dec
xchg
jbe
dec
and
mov
mov
or
fsubs
xchg
pop
fidivl
stc
into
push
pop
js
cs
xchg
imul
sub
xchg
push
insb
mov
sti
adc
mov
push
push
stos
aas
xor
daa
dec
icebp
add
or
cwtl
add
icebp
in
testl
dec
outsl
les
addr16
inc
fwait
xchg
leave
fs
imul
fistpll
jle
push
jmp
adc
jl
mov
sbb
out
addr16
mov
orb
loope
add
fistpll
push
into
in
jmp
out
inc
jge,pn
iret
loop
and
push
roll
lea
js
in
xor
fnstenv
rcr
cs
ret
sbb
mov
cmpsl
icebp
jge
mov
dec
mov
and
lret
in
mov
enter
mov
push
iret
inc
dec
or
stos
mov
outsb
pop
sub
stc
mov
and
adc
fsubs
xchg
add
test
xor
dec
mov
jne
dec
mov
fsubs
repz
lock
jnp
push
test
pop
sti
xor
repnz
sub
add
movb
aad
sbb
and
call
xchg
data16
jbe
pop
jnp
or
nop
cltd
mov
test
cmpl
bound
and
adc
and
and
cmp
jl
mov
insl
cmp
dec
jge
mov
xorl
fsubr
or
in
jnp,pt
or
sbb
es
punpcklbw
mov
rol
sub
fnstenv
add
add
adc
mov
mov
dec
sub
add
enter
fcomps
and
lcall
mov
and
int3
mov
pop
cmp
cmp
rolb
push
stc
xor
inc
inc
or
stos
ds
sub
or
pop
sbb
dec
cmp
lcall
cs
leave
cmc
mov
mov
cltd
xor
jno
mov
or
pop
sub
or
mov
xchg
push
insl
and
daa
aam
mov
test
or
cmp
es
pop
push
pop
lea
cmpl
push
sbb
push
stos
ja
popf
mov
lea
loopne
and
loopne
fiaddl
je
cwtl
jne
nop
arpl
mov
xor
xchg
push
je
fwait
pop
mov
dec
testb
aaa
jg
fisubl
out
push
dec
mov
pushf
dec
lret
daa
fwait
mov
loopne
scas
cmp
ret
pushf
fidivrl
cmpsl
mov
mov
repz
dec
cmp
lock
mov
and
pop
mov
cli
je
dec
sbb
sbb
add
add
lahf
loop
jb
xor
addl
fwait
or
test
adc
daa
mov
push
test
jne
shlb
sarb
out
out
addr16
inc
pop
out
xchg
gs
inc
push
popf
repnz
mov
mov
dec
mov
into
sbb
cmp
insl
bound
push
call
cmp
pop
jmp
cld
int
enter
push
add
movsb
in
mov
shrb
arpl
pop
xchg
repz
rorl
cld
xchg
pop
stos
push
sub
xor
fdivrs
sub
cli
cwtl
imul
xor
lds
jne
insl
xor
mov
data16
push
dec
adc
insb
push
into
dec
jnp
test
test
addr16
shlb
mov
popf
loope
icebp
pop
outsb
xor
jnp
push
std
xor
hlt
xchg
stos
loopne
jmp
dec
mov
cmp
cmpsl
aas
jp
imul
cli
mov
cltd
or
arpl
mov
jae
inc
jno
inc
mov
mov
xchg
adc
add
lcall
jmp
es
sbb
sub
xchg
shlb
inc
pop
aad
call
pop
mov
mov
ret
test
addr16
mov
leave
mov
pushf
call
cmpsl
shrb
cmp
fstpl
out
push
loopne
cmp
imul
ret
lret
jo
fidivrs
out
cmpsl
pop
iret
jbe
pusha
and
adc
negb
fidivrl
mov
add
xorb
insb
stos
lock
mov
and
xor
inc
adc
xor
fimuls
pop
inc
bound
shll
add
xchg
push
inc
mov
hlt
jecxz
sti
dec
jecxz
inc
adc
inc
cld
mov
fistpl
fs
lahf
insb
push
add
jbe
lods
pop
adc
out
xchg
mov
test
outsl
jb
mov
jb
inc
or
dec
imul
mov
fisubrl
xor
inc
xchg
out
and
push
adc
pushf
lcall
ljmp
aaa
adc
xchg
fwait
lods
adc
inc
xchg
jns
leave
pushf
lcall
xchg
xor
add
fcompl
mov
incl
mov
cmc
and
adc
ret
adc
lea
ja
adc
fwait
mov
xor
fucomp
mov
iret
inc
rcl
pusha
pop
cmp
enter
mov
or
hlt
sbb
loope
xchg
in
jp
repz
xchg
lcall
mov
xchg
jmp
pop
enter
pop
pop
or
out
orb
shr
adc
jnp
cld
lcall
mov
mov
sub
mov
iret
in
mov
add
jle
pop
or
and
xchg
xchg
mov
sbb
or
std
out
dec
lret
sbb
jne
adc
pop
or
inc
sti
mov
out
cmp
and
push
mov
lcall
xchg
pop
cs
out
mov
sbbb
ret
fs
rolb
aam
imul
dec
mov
fdivs
pop
cs
shrl
roll
xchg
js
push
xchg
push
lds
fldt
bnd
cmp
jae
dec
cwtl
orl
loopne
push
outsb
out
dec
xor
push
or
mov
xchg
xchg
enter
add
push
pop
aad
jne
lret
lret
cmpb
xchg
mov
adc
shr
mov
push
xchg
das
orb
jb
call
fildl
cmpsl
mov
aam
sbb
jl
mov
jge
les
imul
xor
pop
lcall
iret
arpl
cmpsl
aam
jb
ljmp
dec
out
add
sbb
hlt
adc
fs
jbe
adc
mov
ja
pop
lds
cmp
inc
mov
or
shrl
mov
adc
leave
add
adc
les
mov
les
push
loope
aam
hlt
pushf
mov
ljmp
mov
test
movl
or
lods
xor
pop
dec
pop
incl
js
xlat
jp
movsl
jge
inc
push
jl
add
jl
sbb
fwait
mov
sub
icebp
lea
add
ja
sub
or
cmpsl
push
adc
xchg
cmp
negl
sub
std
add
xchg
jg
lea
dec
cltd
jl
jecxz
dec
sub
pop
stos
push
add
imul
push
test
sbb
aam
ja
and
mov
aam
cmc
push
jo
mov
data16
aad
cmpsl
pop
pop
out
and
ss
loopne
mov
fcompl
pop
mov
lds
lea
cli
pop
data16
iret
notb
sub
and
adc
jecxz
and
call
sbb
cmpb
fsubrl
push
rcl
mov
rorb
mov
lods
pop
fs
cmpsl
inc
in
ss
lret
inc
aaa
mov
daa
and
frstpm(287
cmp
jmp
rorl
rcr
cmpsl
mov
insl
jns
and
bound
sub
int3
fnstsw
sbb
jno
pop
mov
cltd
xorl
jo
jno
mov
xlat
inc
fcomps
mov
add
cld
add
sub
nop
jp
xchg
or
pop
dec
xor
lods
cmp
pushf
fisttpll
push
sbb
xor
xchg
sub
xchg
movsl
pop
mov
je
add
push
fisubl
mov
inc
inc
mov
or
sbb
out
dec
int3
cwtl
mov
das
vunpckhpd
icebp
add
and
sbb
pop
jl
cld
pusha
cwtl
adc
dec
bound
out
xchg
xchg
ss
sahf
test
mov
add
ficoml
outsl
jne
jle
jbe
and
call
dec
mov
pop
lds
repnz
push
or
pusha
testb
shll
gs
repz
xor
or
fidivs
and
bound
xor
xchg
mov
jge
out
rol
cmc
jp
in
bound
pop
gs
cli
add
dec
mov
daa
call
mov
lret
mov
jo
outsl
test
jnp
lret
dec
fdivrs
lcall
xor
cmp
sti
push
adc
xchg
mov
inc
aad
repz
cmp
mov
mov
rolb
stc
push
pop
add
push
shl
loope
adc
outsl
ret
leave
jne
sbb
cmp
arpl
loop
imul
mov
cwtl
fstl
nop
movsb
mov
shl
movsb
mov
or
fadd
mov
gs
into
jns
cmp
mov
xchg
push
xor
lds
jl
add
inc
mov
mov
pop
adc
orl
push
sbb
rorb
lods
mov
fiaddl
lcall
cmp
inc
arpl
hlt
push
repnz
js
cwtl
mov
xor
out
mov
adc
push
leave
js
xchg
fwait
jp
sbb
cwtl
xchg
cmp
dec
inc
sub
fadds
out
push
jo
pop
daa
push
je
lahf
lret
pushf
in
mov
in
sub
int
jmp
mov
dec
iret
rol
sbb
xchg
mov
repnz
mov
jns
add
jg
adcl
in
stc
adc
jecxz
inc
ss
sahf
cmp
test
ficoms
gs
les
add
jns
mov
shlb
movsl
lret
pop
xor
cmp
lahf
popl
mov
and
js
dec
inc
iret
sbb
loopne
call
mov
test
add
imul
jmp
sub
popf
jnp
mov
lret
je
jle
xor
add
jno
dec
loope
subb
enter
out
test
mov
xchg
imul
loop
es
or
scas
mov
jl
xor
dec
je
repnz
aaa
sbbl
test
dec
ja
in
jle
xchg
fwait
xchg
jbe
jo
popf
orb
rolb
add
pop
andl
push
inc
sahf
div
mov
repz
add
xchg
sarl
pushf
js
test
mov
aad
cmc
movsb
xor
popf
mov
add
xor
rcrb
and
out
sub
or
or
stos
xor
push
mov
xlat
pushf
pop
sub
call
out
aam
push
fmull
pop
insl
or
in
xor
and
xor
in
outsl
dec
pop
repz
xlat
pop
into
sti
mov
and
rdmsr
inc
sbb
mov
les
mov
stc
movsb
fstpl
imul
cltd
adc
xorb
fiadds
jb
movsb
call
pop
jb
sahf
mov
imul
sti
xchg
pop
sub
out
pusha
icebp
repz
sbb
cmp
adc
sub
cltd
pop
mov
rolb
xchg
adc
or
push
push
cmp
jbe
addr16
mov
iret
inc
pushf
lret
cmp
sbb
sbb
and
adc
cmp
jb
jnp
mov
inc
xorl
arpl
adc
ret
and
cmp
scas
dec
sbb
lret
xlat
outsl
pop
push
mov
call
dec
inc
pop
add
adc
fiaddl
adc
jno
les
inc
fidivrs
iret
scas
ret
setge
cltd
fdivs
and
dec
mov
ret
aas
mov
loopne
popa
leave
imul
pop
loope
aad
aad
and
int3
les
lds
test
jecxz
jns
xlat
ret
jae
inc
insl
push
adc
and
jp
inc
and
cmp
mov
mov
sub
into
insb
dec
out
shufps
das
repz
or
stos
pop
fnstenv
xchg
insl
add
push
dec
mov
in
mov
xchg
in
icebp
xchg
imul
mov
insl
sub
add
mov
fstpt
loope
sub
popa
jo
fcomps
push
pushf
dec
lret
scas
mulb
insb
dec
lods
rcl
popa
cmp
adc
imul
fisubl
sub
push
pop
xlat
mov
lods
mov
xor
dec
dec
aam
push
push
leave
push
js
jne
jp
jg
dec
leave
cli
call
or
incb
sbb
cmpsl
cmp
push
call
and
sub
aam
fsts
iret
ficoms
sub
out
ret
aaa
stos
js
cmp
mov
pop
je
in
std
inc
and
mov
cmc
pop
mov
loop
into
mov
in
xor
mov
cmc
test
in
xor
imul
jb
mov
in
mov
mov
test
out
mov
push
in
mov
pop
push
ljmp
fdivr
jmp
fsub
fbstp
std
dec
dec
std
push
rcrb
enter
add
daa
xchg
das
faddl
cmp
aad
ja
cmpsb
popa
mov
sbb
mov
add
push
cs
mov
es
and
add
daa
pop
mov
fdivp
ja
mov
out
pop
cmpsb
js
cmp
dec
inc
jne
out
mov
jg
mov
scas
cmp
cli
sub
sarb
pusha
out
xchg
hlt
stc
jbe
shl
sbb
xchg
add
repnz
in
test
adc
out
dec
insl
xor
or
mov
push
mov
xchg
lahf
mov
sub
nop
jne
mov
ret
push
popa
inc
dec
bnd
mov
xchg
add
cmc
pop
test
sub
cmp
pusha
adc
test
test
loope
cmc
cmp
aam
outsb
push
mov
pop
adc
repz
pushf
popf
mov
data16
lds
sbb
stc
jge
cmpsb
xchg
jno
push
cmp
xor
lret
jbe
in
ret
cwtl
lahf
add
mov
fnsave
incb
push
fwait
mov
push
xor
inc
sbb
rolb
stos
test
xchg
fcoms
dec
sbb
dec
fcompl
clc
in
mov
sub
nop
add
fldenv
hlt
jae
lcall
inc
mov
in
fmull
inc
imul
lock
loopne
inc
int3
xchg
loop
int3
cs
pushf
ljmp
xchg
inc
mov
dec
lock
pop
fcom
loopne
js
cld
mov
mov
xchg
or
cmp
jge
or
fiaddl
dec
inc
out
push
int
adc
lea
mov
in
mov
shll
fnstsw
mov
mov
adc
out
and
movsl
push
jae
ss
mov
mov
mov
inc
pop
fdivl
dec
repz
add
call
jle
pusha
sbb
adc
pop
xchg
sahf
gs
add
mov
xor
adc
rcr
inc
popa
ss
push
mov
or
cmp
lcall
lcall
xor
sbb
mov
and
inc
cwtl
shr
mov
mov
loope
and
cmp
lods
out
add
jo
mov
cmp
mov
clc
mov
subb
clc
lahf
sub
push
stc
sarb
dec
sub
std
dec
repnz
mov
add
shrb
imul
adc
or
jmp
xchg
sbb
xor
inc
xchg
cmpb
vpsubb
popf
mov
inc
dec
pusha
sbb
jecxz
loop
xchg
and
in
cmp
mov
shll
xchg
sti
push
mov
fwait
daa
aam
xor
xor
mov
loopne
add
hlt
lods
inc
pop
dec
mov
out
popf
addr16
xor
mov
daa
test
or
and
add
and
jg
xlat
jae
or
jmp
sbb
mov
outsb
sti
xor
push
imul
mov
and
mov
mov
xor
sub
aam
dec
xor
and
pop
test
mov
fwait
lahf
gs
lds
jecxz
popf
mov
stos
mov
push
or
aad
add
stos
lret
int3
inc
add
sahf
fstpt
adc
dec
out
cmp
popa
jecxz
clc
mov
clc
mov
xchg
jl
movsl
xlat
sub
xor
jno
add
push
xor
roll
sub
push
and
xor
fwait
push
lret
adcl
and
call
add
or
push
pop
adc
inc
mov
imul
sbb
inc
in
sahf
sub
aam
sbb
cmpsb
mov
pop
idivl
push
testb
push
jns
dec
inc
inc
push
leave
in
pop
gs
sahf
fdivrs
stos
jno
fists
sub
aad
sbb
jns
cmp
adc
mov
call
lahf
adc
call
popf
pop
ficomps
fnstcw
jbe
js
leave
roll
sbb
push
inc
int3
push
lret
movsb
repnz
mov
loope
xor
test
scas
sbb
push
add
sub
adc
imul
adc
push
pop
leave
push
lret
lcall
mov
adc
dec
out
push
jge
pop
imul
and
in
inc
add
xchg
fidivrl
fwait
add
lret
or
pop
or
push
clc
cmc
cmpsl
pop
mov
cmp
cmpb
adcl
sbb
lret
push
dec
mov
jo
shll
jns
xor
cld
shl
cmc
dec
fwait
mov
cmc
mov
sbb
jge
pop
mov
mov
lods
jae
scas
fdivrp
call
jmp
test
jl
mov
cmpsl
stos
shlb
arpl
cld
movsb
dec
mov
lcall
icebp
add
rcr
push
popa
pop
xchg
pop
push
iret
push
insl
test
mov
insb
mov
dec
repz
scas
leave
add
rclb
pop
pop
mov
cmp
adc
adc
rcll
setns
pusha
inc
pop
in
das
push
rcrl
in
inc
push
push
and
into
adc
fxch
and
aaa
adc
dec
push
mulb
push
xorl
lock
leave
adc
and
push
cmp
outsb
cmc
mov
jle
popf
or
jo
inc
sti
testb
mov
sbb
push
jno
leave
jl
or
scas
fwait
les
mov
and
aas
movsl
incb
cmp
fxam
xchg
int
and
popa
xchg
and
xchg
fldl
aas
mov
shr
cs
cmp
inc
aad
shll
ss
test
mov
mov
jge
orl
scas
xor
cmpsl
push
xchg
xor
jle
or
add
mov
and
test
cmp
jge
movsb
ret
gs
clc
mov
mov
das
sub
shlb
rcrl
leave
sbb
sub
mov
mov
xor
adc
push
sbb
push
stos
divb
xchg
mov
or
cmp
pop
hlt
mov
push
adc
aam
aas
dec
xor
popa
in
sub
hlt
inc
daa
mov
pop
push
hlt
inc
and
gs
cmpsb
xchg
cmp
sub
inc
hlt
mov
and
pop
cmp
adc
imul
xlat
and
cmpsb
dec
xchg
adc
push
cmp
jecxz
aam
aad
and
adc
in
lock
mov
filds
jbe
mov
or
push
dec
xchg
dec
fadds
adc
lret
mov
mov
ret
loop
outsl
aad
test
nop
ret
pop
pop
push
fisttpll
data16
sub
pop
lret
fidivs
jp
mov
xchg
sbb
outsl
fldcw
push
and
push
and
dec
add
fbld
xchg
rcll
cmp
sbb
jle
mov
ret
push
or
lahf
jbe
ljmp
push
mov
cmp
shrb
roll
out
mov
data16
add
jmp
jl
xor
popa
rclb
pushl
jbe
mov
test
xchg
int3
jp
addr16
fcomps
pop
fimuls
dec
mov
lret
aaa
sub
inc
xor
pop
andb
mov
movsb
add
push
push
mov
dec
jbe
outsl
or
pop
push
cld
scas
lahf
fcom
jbe
leave
lret
inc
clc
push
fcoms
mov
dec
jge
dec
adc
jmp
jnp
in
push
stos
jo
imul
rolb
insb
pop
lock
nop
inc
fs
es
mov
insb
pushf
mov
mov
push
cs
scas
int
daa
xchg
push
xchg
aam
call
push
mov
mov
mov
mov
xchg
aaa
push
clc
xchg
lds
inc
sub
out
mov
lret
and
and
and
into
sahf
lods
out
js
sub
jns
arpl
and
movsb
jp
mov
lods
jle
lock
and
sbb
mov
add
or
fs
loop
push
or
mov
test
popf
jle
xchg
jno
daa
fnstcw
in
data16
adcb
mov
or
pop
mov
sub
sub
sbb
or
pop
decb
jnp
cmc
loop
pop
insl
pop
je
pop
push
jo
xor
or
int3
sub
out
movsl
lret
test
aam
mov
mov
dec
sub
ret
sbb
adc
adc
icebp
movsb
sarb
or
std
lret
rorb
call
fists
imul
enter
sub
jg
adcl
stc
push
mov
popf
adc
cmp
xor
fstl
push
fdivr
movsb
ds
xchg
stos
dec
xor
dec
adc
ficoml
pop
movsl
add
xor
aad
jb
push
int3
jl
lds
mov
dec
cli
push
cltd
popf
insb
insl
mov
clc
fwait
add
and
push
mov
xor
inc
adc
jge
xchg
dec
scas
mov
mov
push
xor
cmpsb
outsl
jmp
push
fmuls
jg
int
nop
divl
rcll
push
repnz
rclb
leave
jge
loop
and
flds
mov
or
cltd
pop
mov
adc
mov
adc
mov
xor
adc
popa
ja
jo
inc
mov
inc
add
sub
cmp
cmc
pop
movsb
pop
mov
add
iret
sbb
scas
or
lcall
hlt
mov
or
cmp
movsl
addr16
fcomp
aad
push
imul
jp
sbb
fs
or
popf
cmp
ss
add
test
dec
mov
pop
nop
or
cld
orb
add
in
dec
jmp
data16
adc
popa
mov
pop
aam
xchg
sarl
in
jne
push
adc
dec
xor
lret
ret
movsb
int3
pop
sub
xor
xor
test
jl
and
dec
push
mov
xchg
mov
xchg
lods
icebp
data16
repnz
hlt
sbb
icebp
dec
inc
cltd
jne
imul
sbb
jp
in
and
pop
sub
clc
arpl
jb
jmp
hlt
test
xchg
and
or
mov
pop
out
fstpl
mov
or
push
dec
enter
psrld
xchg
or
icebp
orl
add
inc
inc
or
mov
pusha
mov
clc
test
sbb
cmpsb
scas
mov
and
jns
xor
jb
sub
lds
ret
mov
out
aaa
cmc
jno
ss
xlat
xchg
and
pop
mov
sbb
lcall
gs
lock
test
inc
pushf
pushl
pushf
das
rcll
lret
mov
pop
mov
in
sub
pop
xor
mov
roll
mov
add
out
add
sub
mov
pop
insb
je
cmp
cli
cmp
jmp
mov
cld
cmp
inc
jo
loope
mov
insb
stos
scas
push
cmc
pop
or
push
xchg
sub
inc
mov
jbe
inc
rolb
or
fmull
lods
fs
in
adc
xchg
divb
fidivrl
sub
or
out
and
mov
imul
arpl
loop
arpl
jbe
push
sbb
lret
ret
cmp
stos
sbb
fildll
inc
lods
shll
cmp
dec
cmp
adc
inc
lret
adc
call
xchg
int
xor
scas
xchg
cltd
sti
aas
fildl
outsl
cs
jae
xor
fdivp
out
es
call
dec
stc
push
pop
shrl
or
int3
hlt
xchg
dec
dec
dec
ds
dec
lret
jne
addl
inc
cmpb
push
pop
xchg
mov
mov
or
dec
ficoms
mov
jecxz
fadd
adc
jmp
pop
loope
adc
in
push
lods
jl
fistps
aas
cmpsl
std
jbe
inc
xor
out
mov
mov
lea
loop
popa
stc
cld
in
fsubrl
fmull
fwait
out
xchg
adc
into
mov
push
lcall
int
xchg
xor
add
fsubrp
fcomps
mov
push
jb
cmp
out
push
les
xor
cmp
push
fwait
ret
or
bound
stc
add
pop
rorl
pop
inc
ds
add
lods
push
imul
cmpsb
dec
fists
add
movb
add
jmp
cmp
test
mov
out
call
mov
lret
inc
divb
movsl
mov
xor
clc
in
sti
aaa
pusha
lods
adc
add
mov
xchg
ror
loop
jmp
mov
test
lods
jge
int3
or
push
test
xchg
lods
cld
or
inc
test
pusha
cltd
mov
xor
push
mov
inc
mov
icebp
cmpsl
hlt
xchg
loopne
incl
jp
lock
ret
divb
adc
mov
shll
mov
pop
sub
rcr
inc
fmul
sub
pause
out
jo
sub
in
cmp
idivb
push
mov
popf
movsb
and
xchg
in
jno
jns
mov
fisttpll
repz
arpl
inc
mov
inc
mov
lea
add
lock
mov
outsl
ltr
mov
call
add
loopne
movsb
or
lods
jne
add
lret
data16
jle
add
into
fadds
lret
jb
stos
dec
dec
push
fadds
shlb
rcrb
mov
jp
mov
dec
dec
in
std
stos
es
mov
ret
iret
add
cmpsl
xchg
gs
pop
out
stos
pop
xchg
mov
mov
mov
adcl
fisubs
out
aas
out
movb
sub
xchg
rcrl
lret
loop
mov
jle
lret
cmpsl
iret
loopne
scas
leave
mov
vphaddwq
or
adc
adc
pop
mov
jge
push
sarb
jns
fcompl
jp
sub
ljmp
xchg
mov
xchg
mov
imul
push
and
out
loopne
dec
and
ficompl
leave
cmpsl
add
mov
int
sbb
lcall
xorl
add
stos
ss
cmp
rol
mov
push
lret
lret
rol
movsl
aaa
vpmacssdqh
lock
or
xor
add
fdivs
cmpsl
mov
int3
popf
mov
mov
stc
clc
xchg
into
xchg
aad
mov
xchg
pop
mov
cli
das
mov
push
dec
dec
cmp
ss
pop
adcl
inc
outsb
and
push
test
les
test
out
adcl
insl
js
movsb
push
insl
mov
jge
sub
outsb
mov
push
push
pop
stos
clc
add
jl
pop
adc
dec
add
and
cmp
nop
test
dec
fimull
xor
out
add
jmp
jb
les
mov
imul
call
imul
test
or
dec
sub
cmp
gs
das
xor
inc
test
ljmp
clc
lret
aas
jnp
sbb
pop
adcw
mov
and
cmp
dec
cmp
push
inc
mov
cmp
mov
mov
xor
stos
or
arpl
pop
mov
and
subb
cmc
js
jbe
jecxz
xchg
mov
fwait
out
and
push
dec
lds
mov
inc
out
and
test
popl
inc
das
movsb
inc
jg
lret
ret
ret
or
or
sar
sar
or
outsb
pop
jle
and
xor
or
cs
add
jp
sarb
cwtl
xlat
cmp
in
fstpl
ret
sbb
sub
add
test
jae
in
std
test
in
negb
fistps
repz
ficomps
enter
jo
jns
icebp
sbb
add
or
or
shrb
pop
notl
in
arpl
lock
mov
jp
out
pusha
les
jmp
xor
iret
mov
push
pop
inc
add
leave
pop
xchg
lahf
sbb
and
and
ja
out
js
adc
push
stos
sub
scas
xorb
shlb
test
mov
and
lods
sub
pop
cmpb
sahf
test
sbb
cld
jl
add
sub
pop
int
in
jnp
clc
cmp
inc
xor
aaa
jb
mov
inc
lods
add
cmpsl
andl
aaa
pop
ret
pop
in
mov
fcoms
mov
and
pop
adc
inc
mov
ljmp
sbb
pop
or
aam
clc
fldcw
mov
sahf
inc
lock
mov
push
mov
rorl
push
xor
sbb
lods
xchg
or
pop
in
push
into
xchg
xchg
ret
sbb
test
mov
cmc
push
and
pop
sub
or
mov
lods
or
cmp
ja
sbb
mov
mov
mov
jl
dec
fnstcw
js
pop
lret
ja
les
cmp
lret
cmpsb
pop
or
cmc
cmp
cmp
idivl
daa
inc
adc
mov
sahf
push
inc
fisttps
insl
fucom
ljmp
ja
lods
and
mov
lret
lods
inc
loope
pop
pop
stos
dec
jp
dec
je
jle
jnp
inc
xchg
repnz
rcrb
lret
lret
out
sub
cld
shll
adc
push
test
jno
in
fsubl
mov
das
outsl
pushl
dec
push
stos
int3
mov
out
dec
test
enter
jl
icebp
adc
imul
repz
icebp
push
xchg
js
leave
scas
xorl
or
mov
jns
stc
dec
shrl
push
insl
inc
inc
dec
add
ficomps
imul
std
mov
repz
out
xchg
push
cmc
sbb
dec
test
sti
loop
lock
adc
out
sbb
clc
mov
lock
cmp
pop
sub
sub
cmp
or
mov
inc
cmp
js
lahf
mov
mov
cmp
cmp
stos
adcb
lahf
out
and
mov
jnp
push
sbb
sahf
push
mov
sbb
inc
jl
dec
test
cmp
stos
rcrl
push
pop
pop
in
push
leave
jle
test
mov
jle
pop
mov
lock
mov
inc
adc
into
movsb
std
or
push
mov
lock
pop
sbb
dec
jmp
pop
cmp
jbe
inc
mov
call
cmp
pushf
scas
xor
fdivr
fidivrs
xchg
push
in
sub
imul
cwtl
sub
sub
mov
cli
xlat
sbb
lds
xchg
jp
lea
in
or
push
xor
cmp
and
shlb
loope
cld
sti
call
and
push
dec
xchg
aaa
mov
jb
clc
adc
gs
sbb
sbb
lock
and
push
jns
sti
xchg
push
incl
push
aas
pop
mov
mov
jae
and
jnp
add
push
push
sub
sti
xchg
adc
loope
ret
gs
jle
inc
mov
fldcw
sbb
mov
shrl
nop
jmp
icebp
push
rorb
cld
inc
sub
push
lret
mulb
lahf
cld
adc
jae
fcmovnu
adc
sbb
lods
dec
aam
dec
sub
jnp
outsb
std
jg
pop
int3
sarl
ss
push
xor
mov
pop
je
or
insb
cli
lock
mov
mov
popa
imul
jp
rclb
mov
in
in
rorl
dec
mov
adc
fiadds
lods
add
fisttpll
add
cwtl
mov
shr
daa
mov
and
filds
sub
in
insb
mov
and
cmp
aam
jae
push
out
imul
push
fisubs
xchg
in
pusha
xor
mov
add
es
pusha
cmp
cmp
xor
sbb
cmp
gs
xchg
shrb
pop
fcoms
andb
mov
adc
imul
adc
pop
push
adc
jno
mov
xchg
or
inc
cwtl
jmp
call
push
movsb
sbbb
push
sub
push
stos
imul
mov
insb
fstps
xchg
in
push
stos
xchg
mov
pop
or
xchg
scas
sbb
pop
roll
out
adc
lcall
outsl
scas
js
push
data16
push
fsubs
inc
stc
mov
inc
push
fcompl
and
pop
cli
in
popa
mov
cmpsb
mov
bound
scas
lcall
fstl
xor
add
enter
fisubrs
lcall
jge
adc
std
repz
sub
rcrl
cmpsb
add
clc
sti
decb
push
stos
inc
mov
gs
jp
dec
loopne
sub
pop
and
inc
mov
mov
push
in
mov
and
sbb
loop
adc
push
pusha
les
sub
mov
popf
std
leave
and
dec
jae
shlb
xorl
xor
addr16
jmp
sbb
insb
jno
cmp
test
mov
xor
xchg
push
iret
mov
sbb
sbb
pop
mov
inc
dec
movsb
vshufps
sar
in
adc
in
daa
cmp
push
ja
add
sub
mov
hlt
aaa
and
sti
pop
ret
imul
cwtl
cwtl
cmpsb
jno
mov
push
mov
xor
push
add
cltd
mov
jne
sbb
andb
sbb
sub
stc
cmp
nop
ret
sub
lret
test
stc
mov
hlt
or
lret
fmuls
inc
cmp
cmp
cmp
cmp
shrl
sbb
movsl
js
test
je
or
data16
xchg
int
out
pop
push
add
aam
or
dec
outsb
lret
dec
dec
dec
shl
pop
add
repnz
cs
icebp
enter
xor
push
loope
out
mov
les
pop
or
pop
fstps
lock
call
bnd
add
stc
xchg
mov
jle
mov
fidivrs
dec
jmp
fs
adc
test
imul
das
pushf
and
push
sbb
mov
je
or
das
js
iret
lds
arpl
mov
jne
cmpsb
sarl
std
je
and
sbb
jg
fs
mov
mov
cmc
or
sbb
enter
xor
xor
lret
fsubl
sbb
or
cld
imul
mov
pop
sbb
mov
stos
movsl
fistl
in
and
mov
add
out
shll
sub
hlt
fstl
mov
cld
leave
mov
leave
mov
push
xchg
sub
fs
jns
mov
fcom
mov
adc
aaa
mov
pushl
add
xchg
ja
inc
lods
cmp
or
xchg
ljmp
mov
cmpsl
aaa
repnz
mov
mov
xchg
adc
dec
jae
lret
and
or
mov
xchg
addr16
add
xchg
pop
inc
stos
sbb
push
sbb
out
stos
std
test
lds
stc
addr16
mov
mov
adc
roll
repz
insl
jp
out
jnp
cmp
mov
fisttpl
mov
test
cs
sbb
adc
cmc
adc
data16
xor
pop
fcomps
dec
mov
ret
inc
lods
or
xor
push
jl
mov
out
inc
in
stc
xchg
and
fstl
addr16
xchg
adc
mov
mov
push
push
add
cmc
xchg
stos
in
jg
jno
leave
jl
scas
adc
inc
xchg
outsb
xchg
ficomps
scas
out
mov
jne
xchg
ds
mov
cmp
jle
add
sahf
sbb
lret
mov
push
sub
and
leave
mov
add
pop
mov
jp
jg
jmp
inc
hlt
push
mov
cltd
jnp
push
jge
addl
fmull
rorb
mov
jle
addr16
dec
test
mov
loopne
fwait
pop
or
test
loop
xchg
insl
in
or
out
add
out
out
test
icebp
mov
fstpl
dec
out
mov
imul
adc
fcoml
inc
sbb
sub
iret
xor
call
xor
cmp
dec
or
sahf
or
aaa
insl
jns
repnz
jb
pop
inc
mov
ljmp
inc
repnz
sahf
mov
hlt
out
into
fdivl
test
lahf
das
jne
mov
ficoml
cmp
dec
in
test
jmp
jae
scas
int
jp
adc
inc
push
ss
cmp
rcrb
fcoml
ret
pop
dec
jnp
std
aam
scas
mov
cmpsb
mov
aad
sbb
adc
mov
aad
test
scas
add
mov
add
negb
repz
mov
and
mov
stc
mov
mov
pop
je
std
xchg
out
adc
sbb
mov
cmpsb
dec
sub
sbb
jecxz
out
stc
bnd
mov
sub
jo
jmp
and
outsl
lds
push
inc
and
shrl
push
sbb
jnp
jecxz
inc
std
push
push
lds
aaa
jmp
push
hlt
mov
or
sbb
out
nop
test
push
out
pop
push
or
sbb
and
jle
imul
push
je
addr16
xlat
es
imul
rcrl
lcall
mov
xchg
push
cmp
les
inc
es
clc
repz
mov
in
xor
in
or
sub
push
and
test
lcall
cmp
push
dec
lea
sbb
dec
dec
or
jo
push
sahf
pop
mov
hlt
mov
mov
xsaveopt
push
xchg
fsubp
push
popl
aaa
popa
imul
cmp
and
cmp
inc
sbb
aas
jecxz
xchg
adc
loop
fisttpl
xor
sbb
repz
xor
mov
testb
sbb
sub
sub
outsb
push
arpl
xor
scas
sbbb
cmp
mov
scas
mov
mov
sbb
push
test
xchg
pop
cmp
jo
mov
xchg
sbb
movsl
insb
push
adc
daa
lea
sub
clc
sbb
mov
mov
xorb
fidivrl
jl
mov
into
sub
jp
pop
pusha
jmp
scas
lret
repz
fnstsw
mov
push
pushl
mov
xchg
or
cli
xor
fucomip
mov
testl
ljmp
xchg
not
inc
out
cmp
inc
inc
dec
ljmp
lods
xor
pop
jmp
lahf
mov
push
rcl
push
cli
je
push
icebp
shrb
cmpsb
daa
sbbl
fbstp
lea
pop
push
cmp
and
stc
xor
daa
lock
int3
pop
sub
sub
rolb
jl
ljmp
popa
ja
stc
inc
sbb
imul
dec
mov
fs
mov
pushf
icebp
add
stos
movsb
and
cmp
in
dec
adc
xor
out
roll
inc
inc
mov
pop
dec
mov
stos
or
aam
mov
nop
push
in
inc
test
push
mov
push
clc
jb
movsl
cld
cwtl
insb
int
out
mov
lods
in
lock
iret
mov
push
lahf
repnz
sbb
mov
mov
and
sub
lods
cmp
out
sub
cmp
pop
rclb
mov
jae
imul
cmp
jge
scas
icebp
iret
nop
and
cmc
adc
or
jecxz
cmp
jmp
push
fstp
push
sub
shlb
leave
cmpsl
adc
dec
enter
or
dec
mov
pop
mov
xchg
orl
cmpb
push
repnz
mov
movb
cltd
sub
leave
adc
hlt
testb
xor
loop
aaa
xchg
fwait
inc
inc
inc
lds
pusha
out
sub
pop
jle
sbb
adc
jmp
push
shrl
mov
sbb
sub
xchg
insl
insl
out
xor
mov
mov
cli
lods
loopne
punpckhwd
add
into
shll
shlb
ss
push
sysexit
das
insb
outsl
in
lods
push
bound
and
jle
testb
push
mov
int3
lea
mov
inc
mov
les
out
mov
mov
pop
adc
jle
mov
fsts
out
cmp
add
cli
andl
push
push
adc
movsl
stos
xor
inc
pop
test
subb
adc
push
in
push
stos
les
movsb
push
mov
adc
pop
pop
push
pushf
repz
fsubrl
hlt
sub
adc
push
fwait
inc
sub
leave
cmpsb
cmp
out
mov
xchg
push
insl
sub
test
mov
call
lret
imul
cmp
mov
add
xchg
and
adc
fcmovu
lret
movsb
int3
cmp
mov
mov
mov
adc
lea
lock
in
dec
mov
pop
mov
adc
push
sti
data16
cs
enter
addl
in
aam
push
jle
stc
jno
aaa
lods
push
test
lcall
inc
xor
pop
mov
mov
inc
fdivl
outsb
ja
mov
jb
jae
loope
and
rorl
adc
pop
shr
sbb
add
inc
dec
pop
lret
inc
addr16
in
mov
sarl
jmp
repnz
outsl
inc
pop
jge
imul
ljmp
add
add
test
and
jnp
cld
add
mov
mov
mov
out
xchg
adc
mov
and
sbb
jp
ss
pop
lds
mov
cmp
std
xchg
fcoms
sub
xchg
fistl
pop
or
stc
outsb
aam
lcall
loop
sub
mov
add
repz
add
cmc
cli
mov
jae
jl
lcall
cmp
mov
jne
mov
dec
adc
ret
movsb
cli
shrl
fnstsw
mov
and
dec
push
sti
enter
scas
gs
mov
inc
xchg
sbb
adc
inc
mov
jecxz
add
xchg
sbb
mov
dec
gs
sub
es
inc
fcomi
lret
repz
and
jle
ljmp
data16
scas
fmull
push
xchg
and
adc
shlb
inc
mov
xor
mov
mov
in
das
cmc
stos
jg
ljmp
lahf
add
cwtl
mov
fcompl
mov
sbb
mov
out
test
add
imul
mov
inc
sub
negl
or
sub
lea
test
xchg
stos
adc
leave
ds
or
pop
pop
xchg
mov
sbb
pop
adc
pushf
call
int
clc
lcall
test
mov
lods
push
ds
ret
xchg
sbb
mov
push
mov
cmp
icebp
cmpsb
jmp
cmp
jne
pop
repnz
hlt
lahf
fs
aaa
fmul
adc
xor
lods
and
inc
nop
jne
lret
into
imul
out
stc
sub
pop
mov
inc
sub
stos
xchg
sub
jge
outsb
enter
adc
or
les
pop
pop
decb
pop
adc
sub
cwtl
adc
jg
adc
push
add
mov
sub
jp
test
push
pop
jp
loop
rcll
fildll
rclb
inc
push
lods
jno
arpl
dec
mov
push
scas
sbb
and
aam
pop
sub
cmp
inc
sub
mov
sub
scas
scas
andb
imul
adc
jmp
faddp
inc
xor
popa
jmp
iret
jo
movsb
scas
pop
cmc
cld
jl
adc
mov
neg
xchg
loope
lods
out
add
cmp
sar
cmc
xchg
mov
sbb
pop
xor
outsb
lods
frstor
xchg
std
push
aad
je
repz
aad
mov
pop
add
mov
fisttps
sbb
sbb
cmp
mov
lock
int
cmp
cld
addr16
int3
cmpsb
int
mov
jne
jb
ds
xchg
lea
out
jb
xchg
in
mov
decb
push
push
sub
sbb
cmp
jo
in
mov
pop
xchg
cmpsb
gs
fs
pop
aam
fildl
or
cmp
fistl
ljmp
fisubl
mov
fbstp
xchg
arpl
outsb
in
adcl
scas
sbb
out
aad
jle
and
cmova
pop
stc
jnp
xchg
push
fisttpll
test
dec
xchg
jb
pop
jg
sub
mov
pop
das
cld
mov
mov
frstor
inc
add
inc
out
stos
sub
les
cmpsb
test
push
mov
push
or
aas
pop
cmp
call
int3
lahf
jb
ficompl
fisttps
lcall
cmp
arpl
mov
sub
sub
stos
and
in
into
iret
loopne
rep
push
push
mov
cmp
pop
xchg
xchg
adc
push
jg
sub
stos
mov
cli
test
data16
into
ror
out
cmp
test
cltd
or
aad
aas
lret
fwait
sbb
cmc
jb
push
mov
data16
xchg
in
lock
mov
push
push
popf
bound
or
xchg
mov
repz
pop
xchg
jae
inc
adc
pusha
dec
mov
imul
sbb
mov
mov
leave
js
roll
sbb
jne
xchg
cmp
xchg
shl
pop
out
mov
mov
add
insb
cmpsl
and
inc
jmp
scas
mov
sub
in
imul
mov
and
ja
adc
negl
or
xchg
xchg
jae
mov
xchg
sub
stos
ret
das
mov
outsb
rol
stos
mov
std
mov
mov
sub
cmpb
jno
jae
mov
into
or
lahf
int
add
fldt
mov
mov
mov
aam
dec
and
repz
xor
loope
dec
cld
adc
lds
pop
rcr
xor
pop
add
inc
das
pop
fidivrl
loope
dec
or
bound
dec
mov
int
imul
jecxz,pt
sbb
sub
and
popf
mov
roll
mov
decl
outsb
adc
xchg
rcl
push
mov
lahf
dec
lea
lea
test
loop
out
mov
push
cmc
into
enter
test
jne
adc
push
stos
daa
lods
or
outsb
sub
or
dec
aad
and
xor
test
add
pop
hlt
dec
add
adc
lock
mov
dec
pop
call
rcrw
jmp
aaa
leave
popa
adc
fiadds
testl
sub
mov
sbb
hlt
loope
cmpl
fwait
xlat
in
xor
daa
mov
roll
add
dec
mov
es
xor
fdivrl
push
loopne
sub
mov
pop
jns
ds
shrl
dec
test
pop
jmp
xor
jno
pop
ret
pop
rorl
sub
pop
mov
addr16
inc
hlt
stc
mov
arpl
jbe
scas
lcall
js
push
clc
mov
rorb
xchg
add
cmp
push
jnp
vmovlps
pop
pop
mov
lds
push
arpl
cltd
mov
pop
xorb
out
mov
or
push
mov
lods
arpl
test
stos
push
icebp
sbb
lods
push
mov
dec
cmp
dec
jo
popf
rdtsc
testl
addr16
mov
jg
pop
xor
jno
xor
mov
pusha
repz
out
outsb
xlat
xor
add
outsl
and
pop
repz
mov
and
roll
aaa
repz
ds
fwait
sub
push
add
in
jne
icebp
and
mov
mov
xchg
sub
mov
loop
cmpl
fwait
insb
jmp
mov
push
jmp
fsub
inc
into
add
aas
popa
sub
cs
ret
rcl
xor
das
popf
les
sbb
adc
push
jg
popa
sti
jo
lea
push
mov
adcb
cmp
jmp
mov
mov
fwait
inc
rcr
ljmp
dec
xchg
cmp
sahf
xchg
sahf
scas
and
ja
mov
cwtl
or
mov
mov
mov
jae
mov
dec
out
mov
dec
rcll
mov
add
or
jecxz,pt
lret
fisubrs
add
cmp
add
adc
adc
push
cmpsl
movsb
imul
int3
dec
pop
inc
or
lds
out
lods
shl
mov
repz
gs
dec
rcrl
mov
cltd
add
lods
mov
jbe
cmp
dec
ds
adc
xor
fsub
mov
popa
pop
sbb
xor
outsl
lock
out
inc
or
jno
xchg
daa
adcb
pop
xchg
inc
cli
xchg
jno
xchg
mov
inc
hlt
nop
into
xchg
fidivrs
mov
icebp
scas
cmp
or
aas
dec
sbb
push
sarb
iret
sub
xchg
insl
fnstcw
aas
mov
fildll
inc
xlat
mov
and
bnd
frstor
mov
cli
test
lock
bnd
lods
jno
into
stos
insb
pop
cs
inc
in
push
jnp
push
sub
or
pusha
mov
ja
or
inc
mov
lods
mov
sub
inc
cmc
es
fldenv
jbe
xchg
add
sub
rorl
push
flds
and
cmp
mov
fcmovnu
pop
leave
std
stos
shl
cmp
and
out
push
sbb
fwait
jmp
test
pop
arpl
fnstcw
mov
dec
in
lcall
andb
xor
in
pop
and
adc
xor
daa
ja
pop
out
repnz
mov
add
int
jle
lock
xor
addr16
xchg
pushf
mov
movsl
pop
imul
lret
dec
outsl
and
sub
mov
mov
notl
inc
add
ret
pop
loopne
pop
cmpsl
push
je
in
idivb
add
mov
add
pop
enter
sub
stos
outsl
mov
addl
ss
lcall
jmp
fisubl
inc
mov
dec
ficoms
sbb
mov
shlb
inc
jno
out
pushf
add
add
call
mov
stc
jmp
xchg
jp
push
lahf
xrelease
std
int3
repz
int
test
sti
leave
stos
adcl
xor
jp
and
push
mov
daa
test
push
cmpsl
hlt
xor
adcb
pop
rclb
xchg
rcrl
adcb
pop
push
fisubrl
cmp
inc
fisubl
add
mov
add
mov
jle
sbb
loopne
notb
mov
xchg
xchg
xor
cmp
sbbl
maxps
outsl
sub
imul
rorl
in
push
std
pop
repz
shr
scas
inc
push
dec
andl
es
dec
les
fcompl
ss
cmp
pop
in
xchg
add
loop
addr16
daa
cli
imul
pop
dec
push
lahf
mov
xchg
or
jle,pn
imul
loopne
add
dec
pop
cmc
xchg
xchg
xchg
mov
add
repz
or
mov
bound
insl
pop
mov
out
xchg
inc
pop
pop
fwait
push
shll
xor
jae
jg
cmp
mov
sub
ficomps
and
xor
mov
push
jle
scas
cmpsl
test
pop
mov
dec
rorl
lock
std
imul
add
psubusw
cwtl
dec
scas
dec
ljmp
lods
jecxz
lret
lock
bound
test
mov
xor
gs
or
lds
repnz
xchg
scas
xchg
inc
mov
clc
leave
rol
mov
mov
icebp
repz
fdiv
clc
inc
dec
jbe
outsb
jbe
mov
mov
add
sub
dec
mov
test
or
xchg
imul
sbb
out
aam
jle
inc
sub
cmp
call
push
jnp
add
mov
cmp
sbb
adc
andb
lea
lods
in
xor
lahf
mov
ds
popf
mov
scas
cltd
cmp
mov
pushf
shll
inc
pop
push
inc
mov
lret
pop
test
mov
sub
push
xchg
sahf
dec
popf
adc
test
imul
jne
pop
into
mov
dec
jae
add
jle
int3
fucomi
jmp
out
js
xor
das
jl
in
movb
cmc
sub
add
cmp
jmp
jl
dec
xchg
inc
sahf
call
popf
adc
xchg
adc
and
jnp
pop
jge
subl
pop
outsl
mov
mov
mov
and
add
aad
mov
xchg
insl
mov
inc
mov
cld
aam
rclb
icebp
xlat
push
orl
pop
or
push
sbb
xchg
push
add
movsl
adc
enter
pop
jne
sbb
or
and
or
add
pusha
adcb
sbbb
and
push
xlat
cmc
mov
fisttps
xor
inc
mov
or
decb
ds
jmp
aas
xor
sbb
imul
inc
mov
jmp
incl
cmpsl
cld
stc
fisubrl
outsb
into
shlb
lods
scas
xchg
subb
pop
inc
or
pop
nop/reserved
dec
or
inc
loopne
js
movsb
xchg
push
push
jae
cmc
insb
lods
xchg
jle
cmp
sub
adc
cmp
fists
xchg
push
mov
jns
fwait
push
data16
dec
cmp
ret
sti
xchg
push
mov
pusha
add
sub
sbb
hlt
stc
call
mov
lock
repz
sub
and
mov
stc
xchg
js
cs
mov
mov
jb
xchg
mov
mov
ficoms
xchg
and
xlat
jnp
enter
arpl
outsb
mov
sub
insl
jo
cld
imul
mov
cmpl
mov
orb
add
in
sahf
sub
push
adc
pop
mov
jge
dec
mov
addr16
push
inc
adc
neg
gs
jae
insl
inc
jecxz
test
mov
inc
stc
insl
mov
out
cmp
hlt
sahf
test
sbb
inc
xor
mov
adc
stos
push
mov
movsl
fsubs
ror
leave
mov
and
push
out
mov
mov
jg
lret
aas
pop
inc
pop
imul
sub
push
lea
pop
sbb
shl
fs
ds
or
inc
movsl
jle
leave
mov
int3
mov
enter
inc
jecxz
adc
das
mov
sbb
repz
jmp
leave
adc
cmpb
inc
xchg
push
adc
in
loope
imul
and
inc
mov
jae
xchg
sbb
cs
mov
lahf
filds
imul
movsb
pop
mov
fwait
lret
std
jbe
pop
loopne
bnd
jle
je
mov
add
bound
jp
pop
cmp
das
jne
inc
pop
cmc
adc
adc
add
sbb
out
inc
cmp
cwtl
outsl
dec
and
jnp
sti
jo,pt
cmc
enter
xchg
bound
add
jne
push
or
xchg
add
jne
jge
adcl
lods
out
xor
cmp
xor
jae
jg
in
out
and
stos
sti
jae
lea
jnp
push
pop
mov
mov
mov
stc
icebp
cmp
mov
mov
and
stos
or
cld
jb
jnp
stos
dec
call
inc
xchg
mov
das
push
pusha
fstpl
icebp
call
popa
xchg
add
mov
loop
rorb
push
fcoms
jb
bound
jmp
mov
inc
sub
mov
lods
sub
jg
and
mov
jg
and
arpl
orb
inc
vorps
sbb
hlt
dec
pop
mov
fs
cmp
adc
xor
xchg
imul
rorl
jae
nop
test
xor
mov
mov
sub
aaa
int3
xor
add
arpl
dec
add
stc
dec
xchg
mov
add
sbb
mov
scas
or
stos
jg
mov
int
dec
adc
enter
jmp
leave
pop
popa
push
test
cmp
sub
xchg
subl
jl
sub
shl
fmuls
or
ret
hlt
call
cmp
das
cmpsb
pop
dec
pop
fisubrs
lret
mov
mov
movsl
aaa
cmp
sub
adc
and
imulb
loopne
xchg
loopne
fsubr
lock
dec
push
lock
imulb
js
movsb
pop
jle
sbb
sub
shlb
loopne
sbb
mov
jle
in
das
sbb
and
or
push
push
pop
sub
or
inc
push
lcall
in
fimuls
jnp
test
mulb
loop
jle
popf
adc
test
scas
dec
scas
bound
dec
sub
pop
jmp
cmp
mov
pushl
push
dec
dec
fadd
fiadds
sbb
faddp
jmp
xor
sti
jb
lret
adc
stos
sub
push
mov
gs
lds
push
mov
sahf
aad
ret
iret
mov
sbb
pop
mov
push
movb
test
test
rcrb
pop
pop
adc
xor
stos
jns
pop
dec
sahf
in
cmp
gs
movsb
das
dec
add
lods
stos
adc
xlat
ret
sub
sub
or
dec
sbb
aad
adc
das
stos
pop
inc
cmp
or
or
jl
jae
sbb
pop
lahf
out
sbb
cmp
dec
cs
adc
movl
insl
and
fcompl
push
test
xchg
or
iret
adc
andb
jp
imul
pop
mov
xor
test
dec
jge
rcrb
xor
rcr
mov
cmp
int
icebp
push
add
lcall
cmp
lods
cmp
push
ljmp
loope
test
add
mov
push
jae
dec
mov
sub
push
fcomp
cli
mov
and
das
xor
sbbl
jno
sar
loopne
and
add
push
mov
cltd
out
and
sti
or
xchg
cmp
xorb
imul
scas
imul
xor
mov
inc
fdivrs
sub
scas
xor
mov
in
pusha
adc
push
jge
and
sub
cmp
push
les
cmpsb
jne
sub
or
mov
sub
stc
out
es
out
fnstenv
push
xchg
adc
push
imul
loop
fs
inc
mov
je
or
stos
stos
je
xchg
sub
cmp
lods
je
xchg
sbb
mov
lods
ret
int3
pop
call
pop
mov
out
sbb
push
lds
mov
jge
lcall
mov
adc
jbe
or
in
xor
aam
int
mov
inc
fidivrs
leave
ret
mov
dec
sbb
xchg
push
jge
lcall
lods
pop
push
lea
in
lret
push
mov
dec
pusha
or
pusha
inc
shr
mov
xchg
movsl
mov
in
lret
lahf
jnp
icebp
adc
inc
ds
cmc
in
or
arpl
rep
fwait
mov
mov
js
test
add
lret
int
iret
out
je
xor
dec
xor
pop
iret
push
loopne
lea
pop
jmp
push
sbb
xor
and
add
fwait
sub
arpl
adc
sbb
mov
mov
js
xchg
xor
aaa
in
cmp
add
dec
adc
xchg
iret
rol
pop
cmp
xor
int
insl
dec
add
mov
mov
fcomps
mov
pop
mov
pop
push
xor
dec
stc
repnz
sti
pop
xor
add
or
sub
inc
jb
cmpsb
movsb
leave
jmp
outsl
mov
fs
mov
dec
mov
insb
outsl
jecxz
cmc
nop
xor
mov
and
xor
mov
xchg
inc
iret
lret
cmpl
mov
jmp
lods
or
gs
popf
fisubrs
cmc
jo
add
xchg
push
mov
ljmp
mov
cmp
xchg
mov
imul
aam
mov
cmovne
jmp
shlb
add
add
xchg
enter
loopne
nop
outsb
in
xlat
and
mov
xlat
rcrb
cmp
pop
inc
js
inc
nop
mov
clc
orb
and
xchg
scas
in
pop
out
cmpsb
push
inc
adc
push
jg
invd
mov
mov
mov
cmp
xlat
int3
gs
rclb
push
cli
stos
lea
mov
repnz
pop
pop
popa
lret
dec
push
push
mov
into
adc
mov
les
rorl
loop
add
mov
ret
mov
cmp
pop
ror
in
aaa
cmp
xlat
dec
fwait
xor
xor
fcomps
inc
add
stos
push
pop
lock
jmp
stos
mov
loopne
nop
adc
test
mov
sbb
es
icebp
cmp
out
js
pop
sar
mov
xchg
inc
push
sbb
js
les
cmp
and
sub
adc
lock
fisttpll
pop
adc
call
mov
xor
popl
in
push
push
ljmp
ret
jl
xlat
or
out
les
test
lods
and
cs
fsubrl
lods
or
idivl
repz
gs
notb
les
shl
cmpsl
loopne
ret
ret
mov
jae
adc
pop
or
and
dec
das
push
das
jge
icebp
fcmovne
adc
pop
jne
cwtl
jl
xchg
cmpsl
cld
icebp
or
mov
or
fistl
fistps
pushf
fwait
arpl
sub
loopne
sub
push
push
mov
rol
cmp
xor
sub
xor
dec
jae
fldt
fidivs
stc
push
cmpsl
add
and
js
movsl
out
daa
fldt
add
test
cmp
sub
and
lods
lret
repz
jne
fwait
mov
mov
and
es
sub
out
xor
push
sub
mov
fistpl
sub
sub
scas
jae
scas
lods
pushf
cmc
sahf
sbb
mov
mov
gs
xor
cmp
in
mov
dec
aaa
cli
int
pop
rclb
mov
lcall
fcoms
pop
lods
mov
lods
mov
das
out
mov
or
mov
xchg
rcll
push
jge
out
xchg
call
jb
pop
xchg
lahf
or
stc
outsb
xor
cltd
xor
push
or
ja
push
sbb
inc
adc
sub
add
jp
sbb
daa
inc
push
notl
push
and
jns
outsb
scas
dec
mov
dec
adc
fdivp
cmpsb
push
pop
add
insb
daa
addr16
filds
enter
loop
sbb
repnz
push
xchg
xor
jle
push
xor
rcrl
push
fucomip
cmp
fsubs
scas
xlat
stc
pop
or
cmpsb
into
cmpl
lcall
popa
jge
fmull
xchg
dec
gs
imul
mov
mov
idiv
push
or
pop
adc
sub
adc
inc
ds
movsl
jnp
jmp
inc
shrb
daa
or
test
xchg
lcall
fisubs
adc
jmp
xor
pop
das
dec
push
int
pextrw
sbb
call
out
or
les
inc
push
lahf
or
lods
add
xchg
and
lret
pop
or
test
lock
pop
dec
js
mov
ds
aam
scas
dec
dec
ljmp
pop
mov
fs
data16
out
aam
sbb
inc
lcall
outsl
dec
inc
movsb
xor
sub
add
xchg
sub
sub
jecxz
pop
inc
loop
outsl
aas
loope
iret
mov
adc
sbb
jp
sub
mov
sub
add
xor
mov
sub
cwtl
int
sub
mov
push
lods
mov
dec
pushf
pop
pop
cmpl
cwtl
ret
gs
pop
repz
fmuls
push
js
sbb
add
mov
or
dec
push
in
loop
test
addr16
or
sahf
pop
sti
arpl
test
pop
inc
sbb
test
mov
jge
dec
or
data16
popa
jns
dec
lahf
sub
xor
xchg
dec
mov
mov
clc
je
xor
add
loopne
shl
test
fsts
sar
imul
scas
outsl
mov
jecxz
mov
cmp
and
test
push
subps
mov
jno
and
cli
sub
mov
aam
or
pop
push
gs
orl
stos
adc
idivb
leave
add
into
arpl
xchg
loop
mov
push
bound
mov
mov
pop
lods
mov
dec
stos
int
rorb
push
lea
les
test
mov
jg
inc
cmp
outsl
jne
jbe
jb
jecxz
add
cmpsb
inc
lock
ret
lods
test
aaa
das
dec
in
adc
sub
add
popa
movsl
push
mov
pop
je
jp
pop
packuswb
in
into
mov
xor
xchg
pop
aam
adcl
xchg
sub
notl
rclb
xchg
test
cwtl
xchg
les
sub
push
jmp
in
rcrb
fiaddl
aad
mov
xor
cmp
pop
movsl
clc
call
lret
lret
mov
push
adc
mov
scas
jno
push
sub
inc
mov
mov
or
mov
mov
repnz
push
inc
push
negb
gs
jns
sbb
call
and
xor
ret
loope
mov
popa
sarb
cmp
shll
xchg
pop
jb
add
fcompl
push
xchg
out
xlat
pop
in
daa
xor
dec
dec
mov
inc
inc
ds
loope
pop
mov
mov
adcb
cmp
pop
or
jnp
pusha
fwait
xor
pop
fmul
xchg
hlt
mov
jmp
mov
js
push
mov
movsb
pushw
stc
fisubrl
call
nop
scas
jge
in
push
loop
mov
iret
mov
call
jp
les
add
pushf
push
or
fwait
std
mov
push
push
mov
or
popa
or
dec
pop
stos
arpl
and
sbb
testl
outsb
mov
or
sbb
mov
xchg
test
test
mov
mov
add
add
jnp
jle
xchg
pop
mov
and
jmp
push
shlb
mov
inc
into
lea
rcrb
dec
pop
lea
fimuls
das
mov
insb
imul
ja
cmpb
iret
scas
push
test
rcll
jns
dec
xor
jmp
pusha
mov
mov
and
loop
pop
dec
mov
stos
arpl
add
and
jbe
in
test
lahf
rcrl
adc
mov
or
jb
ret
adc
inc
mov
loope
fsubl
cs
mov
mov
push
pop
push
sbb
add
pushf
test
dec
orb
push
repz
mov
aad
pop
arpl
mov
dec
push
lret
sbb
ljmp
pop
or
push
jle
xor
push
mov
adc
into
sbb
pop
adc
test
aaa
insb
clc
mov
out
stc
adc
sbb
adcl
cmp
dec
adc
aam
arpl
push
in
pushf
inc
adc
sub
decl
dec
std
inc
popf
xchg
inc
int
mov
dec
pushf
add
inc
and
xlat
push
subb
jb
cs
xchg
push
push
jmp
in
adc
push
sbb
sti
xor
xchg
sbbb
dec
cmp
push
cmp
mov
insl
ds
mov
pop
fcmovnb
adc
sub
mov
lds
dec
out
jne
sbb
xchg
mull
aad
jns
jbe
sub
ret
push
inc
stc
jmp
js
sbb
jle
and
jns
mov
je
push
jp
pop
imul
lret
mov
pop
popf
in
arpl
outsb
mov
xchg
inc
cs
imul
pop
push
inc
xchg
bound
push
pop
lret
mov
xor
lea
cmpsb
fiaddl
nop
fcmovbe
stc
pop
adc
sub
notb
mov
test
add
lahf
xchg
dec
dec
outsl
inc
xchg
mov
adc
lods
leave
adc
cmp
push
and
arpl
popa
sarl
call
ret
adc
sbb
adc
negb
inc
pop
dec
sbb
mov
push
mov
jp
or
pop
addr16
addr16
nop
and
cmpsl
int3
bound
xor
ljmp
adc
xor
lcall
cmp
and
xor
lcall
sub
adc
dec
in
out
cmp
inc
imulb
rolb
xchg
or
nopl
pop
pop
enter
into
pop
divb
cmc
negb
stc
xchg
dec
sbb
inc
in
out
dec
lret
xchg
sub
in
popa
aas
jg
cmpsl
cwtl
mov
xor
sbb
aam
inc
fxch
jecxz
dec
dec
jns
dec
xchg
wbinvd
adc
push
xchg
stc
pop
xchg
pushf
and
repz
hlt
mov
adc
push
sub
lods
inc
xor
jns
jge
add
fwait
arpl
sti
call
and
das
sub
ret
call
mov
mov
int3
fstpl
xor
std
jmp
aad
ljmp
sub
in
clc
lds
or
adc
out
mov
in
sar
scas
pop
dec
imul
push
cmp
push
push
push
fucomi
in
std
push
and
andl
mov
aaa
or
xor
gs
push
jb
popa
jge
shll
xor
jnp
mov
call
andb
sbb
sbb
loope
ds
test
popf
scas
lods
or
xchg
cwtl
leave
pop
or
int
cmp
xor
push
lret
adcl
jecxz
bound
xor
aam
inc
je
or
or
sub
bound
shlb
testb
push
xchg
testb
or
sbb
call
mov
mov
mov
mov
es
divb
and
in
sub
shlb
cltd
leave
add
lret
inc
dec
add
sarl
sub
push
adc
pusha
sahf
adc
inc
lret
mov
pop
loop,pt
mov
sub
repnz
and
push
jb
fwait
rcrl
div
out
inc
shrb
bswap
test
cmp
in
cmpsb
push
int3
jecxz
push
stos
cmc
xchg
sub
fildl
push
in
xchg
pop
inc
push
neg
scas
push
xchg
pop
lret
dec
shr
insb
mov
mov
cmp
or
cld
inc
loop
inc
or
outsb
mov
out
pushf
imul
negl
jnp
lahf
xchg
arpl
jecxz
scas
cld
mulb
test
pop
addb
gs
mov
jl
into
lret
loop
insl
fnstcw
pop
jp
mov
mov
inc
push
mov
xor
bound
pop
mov
push
ds
cmc
push
xchg
push
lods
cwtl
test
cwtl
mov
sbb
cmp
cmc
loope
sahf
andl
mov
push
mov
adc
or
gs
fcomps
lea
outsb
push
rcr
jb
mov
idivb
xor
shll
xor
in
xchg
test
loope
or
lock
ds
je
dec
inc
or
cmp
out
push
ss
gs
pop
xor
adc
mov
data16
or
or
xchg
add
pop
std
mov
xchg
xor
pop
outsl
or
inc
insl
mov
sbb
int3
sbb
fs
jge
and
xor
push
jl
push
add
adc
les
push
push
fs
adc
daa
mov
rolb
push
testb
jns
xor
pop
loopne
lahf
lret
xorb
xchg
mov
int3
cmp
and
imul
inc
setne
aad
jns
outsb
enter
cmpsl
mov
dec
adc
sub
mov
xchg
dec
mov
xchg
fldl
dec
jae
pushf
loope
int3
aas
movsl
or
mov
rolb
cltd
ja
pusha
sbb
dec
dec
xchg
xor
or
xchg
pop
xor
out
jbe
push
and
ret
icebp
mov
mov
std
ret
inc
not
mov
xchg
test
mulb
aam
mov
mov
outsb
ds
jne
jns
cmp
inc
pop
adc
orb
inc
and
xchg
xlat
push
sti
mov
rcrb
lea
call
inc
rorb
dec
lret
cld
push
mov
mov
fiaddl
repz
mul
ja
or
movsb
dec
aaa
fistpll
test
adc
add
dec
ljmp
lds
out
lods
sbb
push
adc
adc
or
sti
aaa
push
scas
std
push
mov
xor
push
dec
pop
test
lea
mov
push
jo
add
xchg
pop
cmpsl
test
xlat
dec
push
divl
sub
or
xchg
imul
std
addl
scas
cmp
popa
loope
mov
xor
in
data16
je
xor
int3
inc
stc
mov
xchg
into
rclb
hlt
push
pushf
jg
sbb
inc
sub
cli
cld
or
inc
push
pusha
popa
mov
ds
jmp
and
idivl
sub
push
cmp
mov
addr16
in
ret
and
mov
fwait
ss
jl
pop
add
dec
sbb
cs
outsb
mov
mov
lahf
out
repz
jmp
out
roll
cmp
xchg
adc
subb
jge
ljmp
xchg
movsb
pop
jge
mov
pop
shrb
dec
jle
inc
jnp
mov
jns
xor
cmpsb
or
bound
mov
mov
mov
call
popf
int
jbe
and
ds
mov
jle
push
dec
popf
xor
gs
fucom
sbbl
ret
xlat
mov
xor
mov
fwait
cmp
push
mov
xor
lock
aad
adc
sti
jae
lahf
mov
loope
mov
xor
mov
dec
lods
inc
push
lcall
test
mov
sarb
xchg
cmpsl
fsubrs
dec
adc
adc
cltd
adc
shll
xlat
sbb
cmp
cmp
out
mov
cmp
jb
sbb
pop
rcrl
push
jp
xchg
decl
xorb
fsts
or
lods
and
scas
cmp
in
ljmp
jge
into
pop
pop
andb
ss
jge
std
pusha
js
dec
fsubrs
pop
inc
loope
movsl
xchg
adc
jne
in
lds
in
dec
fwait
xor
insl
xchg
sub
callw
inc
stos
xlat
rcrl
lea
sub
idivb
pop
sbb
jp
sbb
cmp
cli
pop
inc
pop
and
cld
mov
in
cmp
cmp
sahf
pop
cmp
dec
dec
repnz
ss
mov
f2xm1
or
inc
jecxz
jns
mov
lock
fbstp
test
aad
mov
mov
push
mov
loop
or
in
lret
jne
jp
bound
or
std
movsl
mov
add
mov
mov
loop
jae
pop
push
mov
mov
jle
pushf
lods
sbb
adc
mov
les
popf
mov
and
das
out
and
stos
repnz
fdivs
and
jns
dec
enter
mov
add
mov
jnp
push
scas
lods
push
bound
enter
ret
add
inc
mov
cmp
je
inc
mov
lock
js
repnz
add
adc
icebp
popa
in
out
enter
mov
iret
movsl
push
or
loope
cld
mov
adc
mov
add
fcoml
inc
add
fstpt
cmpsl
or
in
aaa
inc
pop
mov
mov
add
int3
stc
jo
cltd
repnz
inc
inc
popf
push
hlt
out
or
nop
mov
mov
lods
or
scas
add
jno
data16
shll
and
pop
stc
jno
mov
imull
sbb
xchg
mov
cld
shlb
aam
ret
mov
pop
out
imul
sub
lds
sub
stos
add
imul
xchg
dec
mov
and
adcl
mov
fists
xchg
push
pop
xchg
ljmp
xchg
xchg
in
cmpsb
dec
and
cwtl
fxtract
dec
sar
jge
push
rcrl
inc
pop
cld
lock
imull
icebp
pop
dec
pop
scas
sbb
pop
mov
xchg
repz
loopne
fisttps
clc
test
inc
add
shlb
jbe
pop
mov
inc
cmp
lods
ret
mov
mov
stc
pop
test
push
clc
stos
adc
sbb
sub
out
scas
stos
stc
jno
gs
ds
mov
insl
mov
je
jo
xor
jno
lsl
inc
lret
mov
xor
in
sub
push
sbb
stos
sahf
xchg
mov
out
xor
clc
ja
mov
or
je
das
xchg
cmpsl
bound
sbb
dec
xlat
shlb
aas
test
stc
push
pop
shll
bound
mov
sar
lahf
popa
pop
data16
js
mov
cs
idivl
ret
movsb
mov
jnp
insb
sbb
or
ss
adc
out
in
stc
imulb
je
gs
ret
cmpsb
add
push
enter
jl
mov
aam
lcall
or
insl
lea
adc
cmpsb
add
cmpsl
jp
pop
inc
push
dec
inc
and
cld
or
jge
cwtl
cmp
add
mov
and
xor
arpl
xor
xor
mov
cmp
mov
sarl
cwtl
mov
repz
test
icebp
push
dec
mov
lahf
scas
push
lcall
push
jecxz
scas
out
les
sahf
push
movsb
xchg
mov
cmpsb
repnz
inc
imul
sub
popa
mov
scas
dec
ffree
adc
mov
jb
mov
pop
sbb
test
pop
mov
push
lock
push
fdivrl
mov
mov
cs
ds
push
inc
sub
jbe
push
fs
dec
mov
ffreep
xchg
adc
mov
orb
shr
adc
and
out
fs
mov
xchg
aaa
in
adc
or
ffree
ret
arpl
push
pop
inc
sbb
adc
mov
xor
sub
leave
xchg
xchg
jle
xlat
test
or
xlat
mov
dec
jns
xor
orl
clc
pop
sahf
pop
xchg
add
push
sbb
shll
xor
fstl
and
jno
loope
lods
inc
rorb
xor
shrl
or
add
pop
push
inc
movsb
push
xor
inc
adc
jno
adc
pop
mov
or
cmpsb
insl
scas
ja
lock
lods
jmp
cmp
xor
pop
nop
xchg
or
xor
loopne
icebp
daa
jns
xor
cli
cwtl
in
int3
loopne
cmp
inc
mov
js
adc
mov
int3
push
mov
loopne
sahf
loopne
notb
iret
mov
cmpsl
cs
and
and
xchg
xchg
inc
mov
aas
cmc
jns
mov
dec
scas
ja
popf
in
inc
stc
inc
lret
push
in
stos
sub
pop
sahf
or
inc
fldenv
fidivrl
in
xchg
sti
inc
xchg
lret
pusha
mov
sub
int
xchg
or
add
xchg
xchg
or
pop
push
lahf
or
stos
dec
xchg
loopne
fnstsw
pusha
or
mov
test
shrl
out
je
incl
dec
add
jl,pn
jmp
aad
in
mov
mov
cmpsb
in
addr16
sahf
mov
xor
fstpl
mov
push
ja
push
fidivl
sub
cmc
mov
das
adc
cs
add
enterw
sub
jp
lahf
adc
test
js
mov
ds
mov
jo
sbb
and
not
mov
rcr
aas
inc
dec
and
mov
prefetch
cwtl
sbb
bound
jge
mov
push
fisttpl
cs
inc
data16
sahf
test
pop
sbb
imul
imul
loop
or
hlt
xorl
sub
pop
pop
mov
iret
push
popf
dec
out
aam
popa
mov
sbb
lea
mov
lea
and
xor
sti
mov
dec
mov
in
pop
lds
dec
div
adc
adc
mov
mov
dec
in
pop
pop
or
repz
cmp
faddl
shl
imul
sub
addb
jne
fdiv
imul
rol
mov
call
jge
dec
inc
pushf
push
fwait
repz
test
add
adc
dec
xchg
push
incl
xchg
and
mov
shl
mov
icebp
pop
cmp
out
jno
das
and
jnp
inc
sbb
divl
loop
jl
fimull
pop
call
popa
jb
cltd
push
subl
mov
fdivs
mov
xchg
mov
cmp
pop
mov
or
or
cld
aas
sbb
aas
pusha
and
lods
jp
xchg
and
jmp
fwait
sbb
sub
push
jle
dec
mov
in
cmp
mov
pop
ret
inc
push
add
inc
and
xor
pop
jo
mov
loopne
fcoml
popl
inc
scas
loope
ljmp
mov
adc
lahf
adc
adc
es
cs
popa
mov
test
sub
sbb
xor
add
mov
and
aam
dec
dec
mov
enter
and
push
sahf
scas
stos
push
or
cmc
xor
pop
mov
icebp
out
outsl
dec
jnp
clc
lds
rdmsr
lcall
inc
sub
pop
imul
rclb
ljmp
mov
push
ss
mov
dec
fwait
dec
add
xor
out
adc
cli
fld1
aas
aas
jecxz
and
inc
fsubr
xchg
mov
add
inc
sub
iret
adc
adc
ficoml
das
xchg
das
roll
sub
inc
mulps
leave
mov
sbb
lds
out
cli
fadds
mov
mov
ret
movsb
inc
push
dec
cmpsl
enter
or
sbb
stos
pusha
mov
jle
or
imul
mov
int3
pop
iret
sub
jg
xchg
arpl
paddsb
fs
push
mov
cmpsl
mov
mov
shrb
in
cmpsl
lret
bound
std
addr16
into
pop
icebp
subb
mov
xchg
js
push
jno
movsb
adc
jecxz
aam
repz
scas
and
enter
bound
loopne
jle
sarl
pop
fwait
pop
cmp
add
inc
shl
jecxz
pop
call
dec
mov
xor
in
in
jg
scas
sbb
movsl
pop
jno
push
mov
sbb
cmc
cmp
movsl
or
jnp
push
jg
test
adc
mov
or
inc
sbb
xorl
mov
jle
sbb
sub
stos
mov
stos
cltd
hlt
es
cwtl
inc
into
jbe
shlb
sarb
jecxz
sbb
inc
cmc
mov
mov
leave
mov
dec
in
xlat
pop
adcl
psraw
stos
push
in
fidivs
sbb
das
aad
cld
xchg
daa
jo
dec
imul
mov
cmp
fsub
repnz
je
ss
dec
popf
in
popa
sahf
cmp
stos
jecxz
cmp
and
repz
sahf
push
mov
xchg
jecxz
adc
stos
in
xchg
daa
push
outsl
cmp
arpl
cmpsl
and
jb
gs
arpl
push
sbb
jns
data16
faddl
dec
mov
daa
scas
aad
sbb
out
mov
in
mov
pop
pop
xchg
pop
xchg
outsb
adc
mov
notb
fwait
xor
xlat
fwait
jecxz
push
outsb
or
cld
mov
xor
and
lss
fcomp
and
movsl
push
add
or
sbb
mov
lds
je
pop
es
cmc
push
ja
iret
sub
adc
push
dec
adc
pushf
mov
btc
out
cmp
mov
mov
nop
gs
or
xor
sub
add
jle
imul
mov
mov
std
mov
cmpsb
repnz
and
sahf
enter
daa
ds
or
lret
mov
lahf
dec
mov
mov
es
lods
push
icebp
fmull
out
cmp
pop
sub
mov
jae
rclb
sub
jl
inc
push
mov
mov
int
mov
shl
jb
pop
adc
sub
inc
cmp
sbb
filds
adc
xchg
and
dec
inc
adc
faddl
pusha
cli
cld
sub
jg
jae
mov
add
test
xorb
outsb
cli
leave
lahf
test
xor
push
mov
xchg
icebp
inc
cmp
push
ja
decb
aad
or
dec
mov
rcl
jbe
jb
jb
jae
movsl
sbb
test
mov
mov
inc
negl
mov
xchg
pop
and
or
or
dec
lret
mov
sub
es
mov
xchg
jmp
adc
sub
push
aad
leave
mov
nop
icebp
or
fs
mov
rolb
sbb
inc
jnp
es
or
ds
and
add
xor
shrl
mov
stos
sub
and
fldcw
mov
fsubl
rcrb
jp
mov
jno
fsubl
cmp
lret
sub
mov
adc
cmp
xchg
xchg
add
mulb
xchg
jecxz
outsb
xchg
ffree
xchg
and
adc
in
push
lea
stc
mov
mov
and
and
and
int
movsl
add
push
add
jecxz
sub
aam
or
sbb
mov
mov
movsb
stos
dec
popf
lret
sub
xchg
mov
outsl
xor
mov
xchg
cwtl
xor
inc
outsb
sti
or
adc
mov
jle
out
jecxz
lods
int3
xchg
adc
xor
pop
xchg
fwait
jae
push
shl
vmread
mov
enter
jg
sub
mov
imul
movsl
mov
data16
push
pop
pop
push
pop
inc
add
aas
and
pop
cmp
mov
fstp
mov
or
dec
pop
loop
ret
in
jle
movb
icebp
sbb
bound
pop
je
or
mov
aas
inc
hlt
dec
adc
test
push
mov
in
popf
mull
mov
xor
enter
stos
mov
jb
cld
sub
or
sti
or
mov
imul
sti
xor
scas
cld
rcrb
inc
or
out
or
fs
dec
jge
sub
inc
dec
add
pop
stc
push
aam
mov
jl
or
test
clc
pop
pop
mov
add
sbb
in
add
or
xchg
sub
and
cli
decl
or
adc
int3
and
sub
adc
jmp
aad
mov
add
and
aam
push
push
pushf
fs
fxch
cld
insl
jecxz
sub
aad
scas
sahf
lahf
adcb
cmpsl
or
lcall
fcmovnbe
cmp
gs
iret
imul
cmp
imul
ret
fildll
inc
subb
inc
shl
jecxz
fildl
or
outsb
cli
int3
adc
mov
dec
mov
dec
xor
inc
rcll
cli
xor
stos
push
sbb
int
js
jge
xor
sub
mov
daa
sbb
inc
arpl
cmp
icebp
inc
clc
inc
jno
sub
lret
or
push
pop
mov
insb
xchg
cmp
repz
out
mov
movsb
inc
pop
mov
jg
xor
push
dec
push
enter
jmp
lahf
pop
aaa
or
add
and
icebp
and
mov
push
push
xor
pop
adc
push
mov
aad
push
cmp
sub
daa
inc
push
andl
cwtl
mov
je
push
or
in
lock
ljmp
ret
mov
pop
cmp
mov
into
aam
mov
lds
stos
fmuls
rcrl
jno
push
das
cltd
sbb
out
jge
jae
paddsb
outsl
adc
adc
xchg
mul
cmp
in
xchg
mov
pusha
inc
into
cmpsl
addr16
ret
pop
sbb
outsb
jp
sbb
inc
lock
filds
or
mov
or
cltd
sbb
or
addr16
xor
test
jbe
pop
dec
cs
dec
or
push
xchg
aam
lcall
sbb
inc
in
cmp
decl
enter
and
orb
dec
sub
outsb
nop
mov
jne
dec
pop
inc
ficomps
cmc
or
mov
stos
fdivrs
pop
fs
int
or
jle
cwtl
adc
and
add
xchg
mov
aas
stc
mov
adc
lcall
mov
std
outsl
stc
cli
ljmp
dec
xor
sbb
mov
pusha
cmpsl
and
inc
mov
xchg
scas
insl
ret
xlat
enter
sub
in
mov
mov
pop
rol
xchg
test
mov
in
inc
fsubl
fstl
inc
fistl
push
loopne
mov
jle
mov
rorb
mov
jle
adc
inc
mov
mov
cld
loopne
push
pop
mov
push
cwtl
clc
test
stos
popa
aaa
fldenv
inc
mov
popf
sub
push
lcall
xor
sbb
or
shlb
pop
adc
xchg
lea
cwtl
std
pop
mov
jns
aas
adc
enter
lods
sahf
lock
daa
mov
sub
adc
xlat
dec
dec
out
xchg
les
mov
jp
das
fbld
loopne
rorl
dec
insl
inc
mov
cmp
push
faddl
cmp
push
popf
mov
cmp
xchg
jbe
push
jne
mov
lds
sub
cmpsl
lock
xor
push
imul
push
sub
ss
push
xor
xlat
mov
lds
lcall
mov
jmp
lea
sbb
rorb
mov
daa
es
cmp
aam
and
jns
out
adcb
sub
inc
xchg
xchg
hlt
das
mov
pop
sub
inc
das
push
ret
stos
add
in
xchg
mov
jnp
lock
jno
add
js
mov
pop
lret
sarb
in
cmp
xor
in
mov
jb
stc
inc
jo
pop
fldt
xlat
aam
inc
push
in
movsl
xchg
or
imul
int
adc
push
add
sbb
adc
out
outsb
nop
cs
sahf
sbb
ljmp
gs
mov
jmp
mov
test
lcall
cwtl
inc
push
or
je
addr16
arpl
ficoml
jo
daa
pop
pop
push
jnp
popa
sbb
out
add
std
jg
sti
enter
loope
xchg
int
mov
stos
mov
inc
shrl
subb
roll
adc
or
sbb
sbb
push
nop
adc
mov
mov
lods
ss
icebp
mov
loopne
dec
in
cwtl
ljmp
mov
mov
or
repnz
jo
adc
dec
loope
dec
push
andl
shrl
lret
lds
xchg
jo
xorl
lcall
jno
scas
adc
sub
lret
xlat
jb
jnp
mov
dec
sahf
pop
fwait
inc
ja
js
das
lds
jne
int
mov
and
jge
cmp
negl
loopne
sub
add
xor
mov
loop
das
xor
sbb
out
cltd
and
jns
push
subl
rcrb
fs
arpl
cltd
mov
and
cmpsb
ret
and
xor
arpl
sbb
jmp
aas
incb
jne
orb
mov
cmp
mov
mov
mov
addr16
sti
mov
aad
in
sbb
add
rcrl
into
test
bound
cltd
jg
leave
push
out
in
sub
rorb
xchg
xchg
mov
lahf
repnz
popa
je
cmp
js
stos
lahf
mov
test
dec
lahf
pop
dec
mov
test
mov
movsb
fisttps
es
dec
dec
call
sub
sahf
mov
insl
mov
scas
adc
popf
jmp
bound
and
or
inc
cmp
das
dec
cmc
les
mov
xlat
lds
or
and
and
xchg
call
inc
outsl
pusha
jae
xor
pop
mov
insb
mov
or
mov
lcall
or
mov
dec
dec
mov
jg
enter
cltd
cmp
jl
xchg
jmp
stos
and
mov
mov
jo
iret
mov
outsl
mov
and
adc
xor
aam
shl
les
scas
stc
stc
icebp
mov
mov
out
or
pop
jno
icebp
pop
push
scas
inc
push
sbb
add
xor
pop
xor
jbe
jecxz
or
jle
fistpl
popf
inc
dec
mov
mov
mov
jnp
in
inc
loope
mov
sbb
pop
add
jge
push
or
and
outsb
enter
or
xchg
dec
jo
das
fimuls
sub
xchg
or
loopne
adc
call
outsb
or
mov
mov
xor
xor
sbb
mov
cmpsl
lahf
lcall
les
push
test
push
aam
out
out
mov
enter
mov
popa
int
lock
subb
lea
lea
shlb
pop
xor
orl
lcall
xchg
out
leave
sbb
xlat
mov
mov
xor
push
shr
lea
sahf
inc
pop
cltd
dec
pop
dec
or
push
icebp
push
dec
aaa
xor
push
and
ljmp
xchg
test
notl
cmp
lret
add
js
pop
cld
dec
xchg
loopne
and
xor
imul
jecxz
push
pop
push
mov
jo
lods
push
jo
mov
nop
adc
fcmove
lods
inc
out
pushf
ds
out
lret
mov
rcll
cmpsb
hlt
sub
sub
jnp
pop
jl
aad
add
and
cld
movsl
fisubs
push
nop
jbe
mov
out
add
repnz
ret
mov
xchg
sub
stos
gs
div
inc
mulb
call
ret
daa
or
or
mov
sarb
shll
lret
cmpsl
sbbl
lahf
push
aad
mov
dec
mov
mov
or
clc
pusha
outsl
les
sub
adc
in
sarl
lret
jecxz
cmpsb
mov
out
mov
cmp
lahf
mov
or
jmp
popa
test
sub
push
ljmp
cmp
sub
es
jo
and
sub
fnstcw
push
loop
sbb
mov
fiaddl
das
jg
lods
cmpsl
mov
xchg
mov
cmc
std
iret
sub
andb
xor
std
mov
loop
leave
faddl
sahf
mov
mov
mov
hlt
jle
push
or
scas
mov
inc
mov
xchg
mov
aad
insl
icebp
inc
mov
loope
sub
sub
xor
dec
stos
sub
xchg
gs
sbb
nop
mov
pop
cmc
mov
push
movsb
cld
pop
and
push
jg
pop
lret
ret
sub
jg
out
jo
or
cmp
ljmp
imulb
cmp
fidivl
fwait
stc
icebp
push
addr16
dec
xor
sub
or
pop
push
mov
int3
and
sbb
cmp
and
in
push
imul
and
stc
sub
mov
pop
xlat
sarl
inc
or
xlat
dec
cmp
mov
loop
rorb
adc
mov
push
push
xchg
dec
out
mov
gs
or
and
lods
sahf
sbb
and
jge
adc
std
add
pop
jmp
ret
push
mov
jecxz
and
fistpl
daa
inc
js
mov
out
cmp
je
faddl
cmp
pop
xchg
out
adcb
sahf
in
jmp
cmovs
loop
mov
mov
mov
inc
or
lahf
stos
mov
cmp
jne
loope
rcrl
test
nop
pop
push
lock
sub
jbe
test
sti
push
xor
sub
fwait
mov
mov
cmc
outsb
pop
mov
add
dec
scas
jmp
xchg
dec
adc
xchg
jle
das
xchg
push
arpl
fcomi
int
sbb
ja
dec
pop
push
sub
lret
pop
pushf
int3
test
pop
jmp
mov
xchg
dec
insl
lret
xor
jecxz
xchg
js
inc
movb
lcall
loopne
popf
cmp
je
dec
cli
sahf
sbb
aaa
shl
pop
clc
pushf
rorl
outsb
loope
inc
xchg
popa
pop
push
ss
jg
xorb
sub
xchg
jo
or
negb
idiv
dec
ja
pop
dec
pop
js
and
mov
and
mov
sbb
jns
shl
push
lods
sbb
mov
fists
loopne
push
xchg
push
jmp
sbbb
jp
insb
popa
lock
lods
fdivr
mov
add
jmp
test
lret
jbe
mov
sbb
fisttpl
out
icebp
or
xor
lods
inc
dec
or
mov
daa
stc
jnp
lahf
mov
icebp
jmp
dec
pop
push
clc
mov
mov
inc
push
mov
push
pop
aam
sbb
xchg
mov
cmpsl
sub
cli
xchg
dec
add
repnz
adc
add
push
inc
and
das
mov
cmpsl
in
mov
mov
test
aad
out
push
movsl
dec
and
sub
pop
pop
lcall
mov
repz
loopne
inc
mov
shlb
in
jge
ljmp
mov
lods
mov
xchg
xor
pop
jno
lret
or
ret
jno
imul
mov
xor
xor
addr16
clc
lds
cmp
cmpsl
mov
mov
mov
and
xor
mov
ret
jl
aaa
out
inc
scas
sti
mov
fs
dec
jb
cmp
mov
sub
mov
sbbl
out
movsb
loope
dec
pop
jmp
xor
lods
pop
fcompl
inc
xor
or
gs
and
insl
push
mov
imul
rorb
push
cmc
je
out
das
xor
rcrl
mov
leave
pusha
cmpsb
cmpsl
sbb
jg
pop
stc
nop
jge
aas
adc
es
xor
pop
dec
cs
out
xlat
mov
shrl
sbb
shlb
shrl
adc
mov
stos
int3
inc
add
outsl
pop
loop
cs
mov
xchg
xchg
xorl
pop
jge
jno
iret
mov
inc
pushf
adc
mov
aas
out
mov
cmp
cli
pop
sub
jne
stc
sbb
int3
xlat
iret
or
inc
mov
movsl
push
jns
jecxz
mov
gs
in
repz
or
inc
or
mov
xchg
test
sub
pushf
dec
push
scas
sub
mov
xor
nop
test
js
fiaddl
push
mov
or
ss
jp
lret
dec
aam
stc
mov
add
outsb
stos
testl
outsl
fimull
push
jp
and
rcr
mov
cld
insb
sub
adc
push
xor
sbb
les
fsubs
shll
or
jmp
das
mov
sub
leave
push
or
pusha
lahf
aas
mov
into
mov
or
lret
jns
jb
cmp
and
push
sub
xchg
jne
stos
cmpsb
jmp
push
in
push
jns
mov
jge
adc
mov
xchg
lret
fsubl
outsb
and
cli
xorl
cmp
cli
outsb
loopne
outsb
in
jge
fxch
or
adc
and
sbb
lret
fsubrl
iret
jge
mov
ja
xchg
dec
call
ds
adc
sahf
pop
mov
add
xchg
mulb
ja
jl
push
ss
push
roll
mov
jae
dec
lcall
mov
or
lods
fucomi
xchg
scas
jne
xor
in
adc
fmul
stc
mov
cmpsb
test
adc
loope
or
ljmp
push
lret
jmp
cmp
and
ret
imul
gs
cmp
pop
push
out
sub
or
div
notl
imul
jno
sub
dec
lret
lds
mov
jmp
add
cmp
xchg
roll
inc
cld
xchg
jnp
sahf
bound
mov
sbb
adc
sub
jb
lods
ret
xchg
push
xor
sub
daa
inc
out
out
cmp
fcmovnbe
push
xchg
mov
cs
lcall
cmp
mov
add
xor
aad
pop
xor
fcmovne
xchg
pop
xor
jmp
aad
divb
pushf
enter
test
xor
pop
js
and
andl
in
test
add
mov
add
adcb
cmpsb
and
mov
ret
lea
cltd
mov
or
cmp
cmpl
mov
sbb
push
jae
inc
cli
aam
hlt
pop
call
xchg
sbb
lods
iret
inc
jg
mov
cmp
pop
mov
insb
xchg
lods
cmp
add
inc
push
js
lock
pop
in
mov
add
lret
inc
pop
mov
jecxz
add
std
mov
test
mov
push
ja
cmp
lds
sbb
dec
test
loop
rcrb
pop
movsl
mov
inc
and
mov
push
cs
xor
test
insl
rcll
xchg
mov
pop
cs
bound
psraw
sub
fdivs
push
and
add
fst
mov
pop
mov
adcb
pop
push
sarb
xchg
mov
sub
adcl
idivb
stos
pop
jmp
jnp
hlt
cmp
ss
xor
scas
inc
cs
das
mov
nop
mov
mov
gs
addr16
pusha
jb
lahf
push
sahf
cwtl
fidivrs
das
in
inc
pop
xlat
gs
dec
lret
or
mov
or
sahf
cs
pop
adc
jb
inc
test
sub
gs
popf
jnp
loope
push
dec
add
and
lea
mov
popf
pop
aaa
sbb
cmpsl
out
lea
mov
icebp
fbstp
push
and
add
dec
xor
adc
dec
pop
ljmp
inc
scas
fisttps
fwait
and
push
insb
sti
rcl
shl
fnstcw
subl
inc
clc
mov
xchg
lea
sahf
jle
dec
cmp
jl
icebp
mov
in
gs
push
loop
sahf
mov
sbb
sub
aam
bound
mov
xchg
test
mov
int3
sti
sbb
in
jnp
arpl
sbb
fnstsw
out
jg
jecxz
jne
fistpl
jg
jae
loop
lods
xchg
xor
cmp
es
out
lcall
aad
mov
sub
inc
inc
inc
scas
not
dec
pushl
repnz
cld
jecxz
adc
mov
bound
fstpl
cmp
into
mov
sub
ljmp
mov
sti
push
mov
mov
or
popf
xchg
xchg
addl
div
jns
mov
mov
cmc
dec
xor
insb
pop
mov
int3
adc
roll
xchg
ret
push
mov
stos
movsl
pushf
and
fstp
adc
sbb
movsl
pop
scas
outsl
or
and
sub
sub
jno
inc
lahf
jp
push
push
test
xchg
mov
mov
cmp
add
jp
stos
adc
mov
pop
jle
sub
and
xor
inc
push
inc
jle
dec
mov
inc
jo
test
shrl
int
add
iret
push
imul
movsb
lds
push
mov
mov
ds
or
mov
pop
mov
cmp
adc
dec
scas
cmp
xchg
mov
bnd
inc
xchg
xor
insl
loop
dec
les
aad
mov
out
loop
push
scas
sbb
sub
repz
stos
add
push
and
mul
sub
lods
pop
rcll
mov
gs
jg
push
push
out
aaa
sub
sti
mov
adc
add
push
sub
bound
enter
adcb
dec
push
sub
sub
cmp
or
mov
mov
jge
imul
aaa
repz
mov
push
mov
cltd
outsl
rcll
lds
xor
orb
mov
hlt
icebp
iret
add
push
sub
add
mov
dec
xor
push
mov
sub
push
jb
mov
mov
dec
jno
push
push
sbb
lds
dec
mov
xor
cmp
xchg
pop
push
dec
lods
and
scas
shl
loope
ffree
aaa
daa
sar
push
mov
push
xor
cmc
insb
lock
inc
inc
xor
jecxz
loopne
jbe
test
push
inc
mov
xchg
inc
push
fs
sahf
repnz
test
or
sahf
lcall
cwtl
cmp
aam
sub
gs
dec
imul
shrb
push
clc
sahf
dec
inc
outsl
out
mov
sbb
sbb
lds
repnz
jg
or
dec
cmpsl
dec
xor
or
fisttps
scas
xchg
sarl
sub
pop
nop
push
pop
xor
ljmp
xchg
and
fcomps
and
test
in
bound
ret
fildll
out
xchg
bound
bound
or
xor
pushf
test
sbb
jb
sti
mov
cmc
mov
ret
jg,pt
mov
pop
dec
and
sbb
fists
aas
push
xor
push
cld
cmpl
dec
push
sub
mulb
testb
push
push
stos
pop
add
or
jle
xor
dec
ficompl
push
ss
push
out
repz
pushf
cmp
mov
shl
lds
xchg
shrb
shlb
call
pop
mov
ss
movsb
les
dec
jl
dec
mov
jbe
jno
mul
xchg
insl
popa
mov
add
in
add
sub
call
jno
mov
lea
dec
xor
lret
dec
sub
mov
jecxz
fsubrp
or
aas
and
xchg
fcmove
fistpll
addl
loope
mov
ja
ds
addr16
ffreep
xor
push
ljmp
sarl
test
aaa
andl
push
and
rcrb
push
xchg
sub
push
or
mov
push
pop
cltd
cld
fdivs
jle
into
loop
addl
push
mov
or
mov
dec
xchg
jne
pop
in
mov
push
movsl
lea
jnp
loopne
push
xchg
int3
ret
daa
jbe
enter
lret
sbb
mov
scas
sahf
fidivs
pusha
loop
inc
sahf
xor
icebp
pop
and
enter
push
insb
jge
lret
adc
ret
push
and
inc
or
inc
stos
or
xchg
insb
lret
add
aaa
mov
inc
sub
dec
in
aas
add
mov
add
mov
mov
fwait
cwtl
lds
jp
addr16
sarl
and
into
addr16
lock
pop
cmpsl
scas
pop
cmpsl
mov
jle
in
fcomps
aas
xor
jne
repnz
mov
rcll
jmp
mov
pop
mov
mov
or
scas
push
push
mov
or
and
lds
or
int
adc
sti
xor
icebp
push
cmp
adc
jge
xchg
xor
jmp
push
rcll
inc
aam
cmp
xchg
mov
xorb
push
sbb
mov
push
add
jo
pop
inc
cmp
scas
pop
in
jle
test
sub
jbe
lods
fsubl
mov
mov
mov
dec
rolb
xor
adc
xor
mov
testb
sub
fcoms
jmp
clc
or
push
mov
popa
popl
xor
sub
int
jns
scas
cmp
push
sbb
daa
aaa
shlb
and
inc
add
imul
mov
cmpsl
mov
dec
icebp
pop
jns
add
clc
in
push
cwtl
cmpsl
in
stc
js
sbb
mov
test
adc
add
adc
lods
movsb
adc
das
adc
lcall
push
sub
xor
cwtl
mov
cmp
aaa
cmp
cmp
in
sub
ds
cwtl
push
hlt
rcrb
ljmp
or
push
es
dec
jecxz
divb
es
pop
mov
mov
jle
mov
pushf
and
inc
or
mov
mov
les
fwait
fwait
in
fs
loope
adc
jb
out
ficoms
and
sub
and
adc
jo
jge
inc
mov
mov
cmpsb
inc
cli
adc
push
mov
pop
push
lods
js
pop
test
imul
sub
xchg
cmp
adc
call
fildll
adc
add
xor
shrl
xor
lods
bound
ja
sub
rolb
repz
fwait
push
sbb
push
notb
mov
inc
aam
mov
leave
adcb
divl
or
sub
pop
data16
pop
push
and
or
mov
aas
aas
mov
pusha
inc
mov
xor
decl
outsl
pop
aaa
movsl
sbb
add
out
out
stc
inc
pop
stc
cmpsb
xor
aad
pop
inc
test
mov
inc
in
pop
lea
jecxz
push
ss
xchg
xlat
push
imul
stos
decb
adc
rorb
das
fsubrl
xchg
rcl
in
dec
push
shr
inc
mov
iret
add
lods
test
jg
arpl
dec
scas
mov
dec
call
xchg
xor
jb
mov
in
jge
pop
sub
or
xlat
scas
push
mov
cmp
mov
adc
in
mov
rep
clc
xchg
jnp
pop
add
and
iret
mov
cmp
dec
sbbb
ljmp
and
pop
hlt
jg
loop
mov
outsl
xchg
xor
test
xchg
pusha
xchg
xorl
sub
rcrb
mov
jno
imul
jmp
inc
popf
das
divb
test
inc
cmpxchg8b
test
sub
inc
mov
and
sub
jns
cmp
ret
dec
dec
aad
es
nop
std
les
mov
sub
stos
xchg
out
aam
movsb
fsubs
popa
mov
mov
add
adc
scas
es
repnz
out
mov
cmpsb
cmp
mov
cltd
jge
fisubl
lcall
jl
mov
jb
xor
xchg
das
pop
or
sbb
add
outsl
mov
cmpl
mov
xor
push
push
pop
outsb
cmp
push
sbb
jl
lds
dec
mov
mov
pop
cmp
mov
jle
inc
sbb
push
aam
cmp
cmpsb
gs
loope
adc
cmp
dec
in
pop
daa
les
sbb
inc
out
xchg
dec
cwtl
xchg
mulb
jb
rclb
cs
out
xchg
and
xor
mov
lods
cmp
and
xor
dec
sbb
dec
cmp
mov
fcmovnu
in
ds
loop
roll
sbb
sub
add
nop
jo
add
ret
decb
pop
lds
cmpsl
inc
arpl
rolb
push
or
dec
xchg
lods
out
cmp
mov
out
dec
xchg
dec
das
subb
stos
gs
mov
jecxz
adc
pushf
inc
cmp
sub
ret
leave
jle
inc
fbld
aam
xchg
insl
push
out
push
cld
sub
dec
xlat
mov
stc
pop
lods
pop
dec
push
add
in
mov
xor
push
adc
xchg
lods
dec
out
repz
les
dec
rolb
sbb
xchg
insb
lret
mov
xlat
ret
je
xchg
cmp
mov
xchg
sarb
mov
mov
in
lret
fisubl
outsl
cs
xchg
shlb
mov
enter
stc
or
pop
nop
pop
pushf
xchg
mov
mov
xchg
add
in
fstpl
movsl
pop
rcl
and
imul
stos
movsb
iret
pop
and
xor
cmp
push
dec
mov
iret
push
fistps
xor
sub
ret
repz
inc
xor
pop
adc
fstpl
enter
sub
mov
xchg
mov
loopne
xchg
adc
jecxz
rolb
mov
in
xchg
cmc
je
dec
int3
cmp
enter
repnz
addb
lret
into
mov
inc
mov
xchg
outsb
sub
mov
shlb
lds
adc
lcall
add
push
cwtl
fsubr
fidivs
je
mov
and
cmpsl
inc
shl
insl
jae
xor
add
xchg
sbb
lock
xchg
enter
jecxz
sbb
into
cmp
shll
scas
xor
mov
rorl
dec
inc
mov
mov
scas
iret
dec
test
nop
mov
cltd
mov
dec
lret
cmp
aam
int
push
inc
cmc
mov
sub
xchg
insl
and
mov
out
jbe
in
inc
js
sbb
jns
xchg
mov
mov
icebp
addl
mov
psllw
dec
push
pop
dec
ss
pop
mov
or
mov
sbb
cwtl
outsl
test
outsb
aad
fdivr
push
or
sarl
or
xor
mov
dec
aaa
push
add
sub
mov
js
outsl
jbe
testl
test
in
mov
je
jbe
mov
or
stos
shl
sbb
dec
sbb
arpl
cwtl
lahf
and
scas
mov
mov
insl
and
divb
stos
dec
dec
pop
dec
pop
sub
mov
mov
mov
mov
and
scas
insl
dec
mov
inc
fs
dec
loope
sbb
jg
repnz
xchg
adc
inc
in
push
xlat
fistps
es
xchg
jne
xchg
jno
sbb
shlb
pop
adc
add
dec
int
roll
pushl
inc
mov
mov
or
jae
popf
clc
jbe
sbbl
sbb
cli
adc
mov
jmp
sub
mov
stos
mov
outsl
out
imul
test
aas
jbe
gs
and
cmp
decb
repnz
int
sub
daa
jmp
into
lea
pop
sarl
inc
stc
xlat
add
sbb
cmp
pop
xchg
or
push
lds
lret
shrl
bound
mov
pusha
fwait
jecxz
imul
and
jl
or
insb
enter
cltd
aad
xchg
in
add
pop
incl
subl
add
dec
or
and
data16
xchg
mov
mov
stc
sub
jecxz
add
dec
repnz
push
faddl
cmpsb
inc
mov
jae
in
sbbb
insb
mov
mov
pop
dec
push
cmp
push
cmp
push
xlat
scas
push
outsl
adcl
aad
hlt
inc
jmp
movsb
xor
add
mov
shl
or
lds
adc
ja
sub
add
pop
add
mov
xor
sbbl
popf
cmc
data16
xor
push
mov
mov
fwait
add
xchg
aam
mov
es
cmp
mov
stos
dec
testl
lods
repz
sub
mov
pop
ljmp
adc
and
call
or
sub
arpl
arpl
inc
loope
cmp
ror
cmp
iret
jae
mov
popa
dec
cs
roll
jg
push
adc
sub
sub
out
into
xchg
xchg
mov
push
sbb
pushf
dec
sbb
pop
sbb
mov
jo
add
mov
sbb
cmp
sub
ds
int
xlat
and
and
movsl
sbb
push
js
jle
mov
lret
fwait
loope
pop
int
jecxz
mov
xchg
and
lods
or
mov
sahf
cmp
fldt
icebp
sbb
or
and
jo
push
dec
or
movsb
dec
add
dec
dec
mov
or
mov
jle
sbb
and
or
inc
xor
mov
dec
or
mov
jno
sbb
fucomi
sbb
push
sbb
inc
sub
arpl
jmp
ljmp
out
sbb
jecxz
adc
decl
mov
jbe
push
dec
mov
inc
sbb
les
adc
cmpsb
stos
arpl
mov
cltd
push
and
push
cmp
je
xor
xchg
mov
jne
lods
gs
jg
xor
lods
ljmp
add
push
xorl
icebp
mov
lahf
add
ret
les
push
xchg
cmp
inc
in
push
inc
insb
std
push
adcl
mov
imul
insb
mov
xchg
outsl
jne
out
jecxz
and
xchg
pop
stos
ret
xchg
mov
sub
xchg
lret
lahf
mov
xor
or
jmp
mov
fisubrs
and
push
jnp
lds
hlt
notl
jbe
lret
jno
or
push
mov
mov
dec
loop
mov
mov
vunpckhpd
xor
mov
mov
or
test
pop
dec
outsl
test
mov
rcll
and
ljmp
cs
into
lds
mov
out
cli
mov
jl
jnp
lea
dec
jl
call
test
insb
or
inc
scas
add
fwait
shl
push
int3
sub
dec
out
jno
mov
or
les
dec
xchg
cmp
mul
daa
in
xor
lods
pslld
fstps
push
inc
lret
and
aad
out
into
divl
pop
adc
jbe
dec
loopne
xchg
lahf
fdivl
cltd
mov
fcomip
mov
mov
sub
inc
icebp
jg
xchg
in
cmp
outsb
insl
scas
in
adc
lret
shlb
pop
mov
scas
sbb
aas
mov
shr
cmpsl
idivl
imul
mov
aam
push
icebp
div
inc
xchg
test
negb
jbe
iret
push
xchg
imul
cmp
dec
fwait
sahf
pop
leave
stos
adc
imul
xor
mov
mov
ror
mull
xor
ljmp
sub
inc
dec
jo
jge
mov
fisubs
je
push
dec
or
adc
push
jge
fcomip
xchg
pusha
insb
ret
mov
cmp
decb
dec
mov
lods
lods
shrl
repnz
nop
lret
xlat
cmp
scas
sahf
push
mov
das
aad
xchg
std
xchg
add
mov
popa
jbe
push
and
push
insl
aam
ja
loope
or
inc
inc
pop
xchg
pop
scas
das
rol
fiadds
adc
popa
push
push
and
jne
dec
je
dec
mov
xchg
push
out
xchg
push
add
cmpsb
test
push
jmp
fmull
pop
lock
cmp
jne
arpl
outsl
xchg
cmpsb
arpl
out
adc
xchg
fiadds
cmp
leave
cmp
das
dec
fwait
jnp
in
subl
test
lods
or
das
jno
fnsave
or
jecxz
imul
add
dec
mov
or
inc
or
faddp
imull
pushf
in
or
ret
sub
lods
movsb
hlt
testb
test
jmp
outsl
shrl
pushl
push
loopne
sub
xor
adc
sbb
test
imul
lcall
popf
xlat
pop
imul
repz
ret
adc
nop
inc
inc
inc
or
sahf
fsts
pop
lcall
ret
pop
sbb
mov
lock
mov
push
sbb
jge
push
cmp
and
pushf
andb
fstl
mov
add
in
xchg
xlat
or
ror
sub
jg
cmp
mov
jp,pt
fildl
lret
dec
and
lods
fistpl
cmpsb
shll
push
lret
inc
xchg
adc
aam
add
aam
loop
mov
rolb
icebp
aad
push
sahf
jno
cmp
sti
imul
ds
sarb
sarb
mov
pop
loope
daa
or
fwait
dec
mov
mov
dec
sahf
mov
mov
cli
sahf
dec
or
lahf
jno
out
test
stos
fs
imul
fidivrs
fisttpll
xacquire
das
mov
xchg
gs
dec
out
lcall
xchg
mov
dec
icebp
mov
out
outsb
les
mov
mov
xchg
rol
push
arpl
loopne
test
sti
rol
mov
stos
xor
and
int
fimull
mov
xor
adc
test
repnz
out
adc
out
mov
push
adc
inc
aaa
stos
and
mov
sbb
frstor
jno
mov
es
add
push
cmp
fs
test
mov
nop
es
xchg
int
fidivs
xchg
sarl
dec
inc
aaa
shl
cmp
pop
ljmp
out
or
sbb
jmp
xor
jbe
xchg
les
clc
loop
cmc
daa
xchg
sub
mov
adc
test
push
mov
mov
jmp
mov
repnz
lea
sbb
mov
or
lahf
mov
jo
dec
xchg
push
push
cmp
pop
roll
cwtl
cs
jmp
ds
pop
gs
cld
out
mov
mov
add
cmp
fadd
pop
and
dec
pop
or
jg
ds
pop
mov
sub
or
inc
jb
shll
loope
pop
stos
repnz
popf
push
xchg
divl
and
outsb
xor
sub
mov
ds
inc
je
fcmovu
mov
dec
pop
cmp
leave
clc
mov
and
sbb
lods
inc
sbb
sbb
mov
jle
cltd
stos
sub
mov
loope
mov
push
cmpsl
scas
mov
aam
popf
cltd
scas
subl
cwtl
xor
push
mov
iret
sbb
js
push
iret
int
jno
mov
jecxz
dec
out
fidivrs
cmc
mov
pushf
loope
sbb
insb
push
test
in
pop
sbb
daa
xor
adc
sub
cmp
rolb
xchg
mov
aaa
add
cmpsl
sub
sub
push
and
pusha
clc
andb
fwait
jg
mov
pop
mov
imul
cmp
fwait
rcrl
mov
es
fdivr
and
clc
xor
fstl
lret
dec
cmc
idivl
pop
movsl
and
xor
pop
push
xchg
enter
mov
inc
mov
xchg
mov
mov
aaa
stos
lods
stos
pop
push
imul
lock
inc
sbb
icebp
outsb
rolb
repnz
push
push
push
mov
sbb
xchg
sub
repz
adc
mov
mov
push
jmp
xchg
pop
sbb
icebp
xorb
cld
adc
rolb
test
adc
jb
cmp
out
xchg
test
jb
popa
loopne
or
pop
xchg
sbb
les
ss
es
es
aad
cwtl
jg
xor
xchg
in
push
lods
fwait
cwtl
mov
movsl
xchg
lcall
enter
fistps
cmp
sahf
vpsubsb
cwtl
xchg
ret
sbb
mov
push
xor
and
mov
ja
stos
push
aaa
repnz
push
jp
leave
std
ret
rcl
adc
pop
sub
cld
adc
pop
inc
adc
add
mov
add
leave
jne
les
jno
adc
lret
push
cmp
pop
lcall
dec
enter
in
test
stos
cli
mov
and
add
mov
nop
mov
mov
fwait
mov
cmp
inc
dec
data16
push
lods
dec
xchg
add
pop
xchg
iret
mov
lea
mov
jns
lods
ja
sbbl
out
and
and
repz
jecxz
cmpsb
and
cld
arpl
dec
dec
loopne
sub
sbb
mov
sub
fcmovnbe
shlb
mov
and
inc
mov
mov
cmc
xchg
sub
js
sbb
mov
cwtl
pop
cmp
stc
mov
popa
xor
fnsave
mov
mov
int
and
fxch
scas
push
aas
pop
add
xchg
xor
xchg
fadds
call
xchg
sub
mov
adc
sbb
jo
dec
xor
test
cs
loope
add
mov
aad
mov
out
out
sub
dec
int
hlt
addr16
jno
mov
sub
mov
je
mov
lret
ret
sarb
fldl
mov
jg
js
pop
mov
pop
sub
sub
pop
addr16
dec
rcl
dec
incb
xchg
jecxz
push
outsl
add
inc
and
pushf
dec
jmp
push
dec
jae
movsb
ja
and
rorb
xchg
pop
dec
aad
xchg
mov
hlt
popa
sub
mov
notb
adc
push
lea
ja
mov
and
out
jo
je
and
and
push
dec
mov
cld
adc
cmp
arpl
repnz
lret
lods
popa
jb
sbb
or
xor
mov
sub
loopne
subb
and
aam
cmpsb
aas
push
repz
sbb
or
adc
sahf
jecxz
mov
xor
push
roll
lods
test
aam
dec
xchg
mov
mov
imulb
rorb
pop
enter
orl
cmc
jnp
std
sbb
test
ja
lahf
in
bound
push
scas
dec
es
cmp
fdivs
mov
mov
fs
jnp
push
push
mov
add
cmp
xchg
popf
or
cmp
aas
adc
lods
fidivs
pop
inc
test
aaa
mov
sub
das
or
pop
leave
cmpsb
inc
mov
loope
push
sbb
test
adc
dec
push
pushl
add
ret
lcall
add
or
pop
pop
jno
fstps
xor
cmp
aaa
call
xchg
push
stos
lds
jl
aam
pop
fwait
js
pop
call
and
lock
vmovshdup
jl
pop
bound
add
add
pop
pop
push
sahf
xchg
cmp
popa
and
sahf
repnz
push
cmp
jl
xor
scas
push
xchg
mov
xor
mov
aam
cmp
mov
xor
pusha
int3
push
into
dec
ja
mov
int
cmp
lods
cmc
scas
push
and
and
mov
push
sbb
inc
adc
movsb
imul
scas
mov
inc
add
hlt
xor
xlat
mov
cmp
inc
push
adc
push
outsb
jecxz
rcr
sub
es
mov
pextrw
and
push
and
sub
aaa
pop
mov
mov
out
mov
js
cli
mov
adc
je
jne
ss
loop
and
pushf
push
rcr
pop
jmp
jae
shll
insb
sti
push
jbe
loop
pop
lret
push
adc
dec
add
popf
sbb
addr16
mov
dec
adc
js
daa
mov
dec
push
push
xchg
popf
sbb
pop
xor
or
mov
sbb
scas
stos
test
push
lret
xlat
ljmp
rorb
push
iret
xor
sti
push
lds
and
jp
leave
xchg
fsubrl
mov
shlb
adc
movsb
sub
insl
xchg
hlt
mov
mov
cwtl
lods
aas
pop
push
and
sbb
mov
stos
cs
jl
adc
std
mov
je
ja
pop
pusha
popa
mov
adc
mov
inc
add
xor
aaa
sar
insl
push
cmp
psubq
movsl
fidivl
ds
loopne
leave
push
int3
icebp
mov
lock
push
lods
and
sbb
inc
fisubl
xchg
scas
add
mov
out
xchg
aad
adc
push
andl
adc
inc
pushf
and
adc
mov
mov
sub
adc
xor
movsb
add
pop
hlt
je
fidivs
xor
pop
loope
loopne
into
push
mov
jne
mov
enter
jge
cmp
pop
mov
stos
mov
add
and
mov
cmp
push
mov
cmpsl
jnp
mov
stos
xorb
and
cmp
mov
lret
mov
jae
mov
ja
ret
xchg
fptan
mov
cltd
stos
loopne
scas
xor
cltd
or
sbb
test
cmp
mov
add
fnsave
aas
inc
nop
popa
shlb
bound
shlb
and
mov
add
movsb
mov
xor
lret
pusha
pop
inc
xchg
ret
xlat
push
stos
adc
or
sbb
cmp
mov
inc
or
jo
xor
cltd
insb
sub
movsl
sub
test
loope
xor
fistpll
leave
test
data16
enter
xchg
in
adc
xchg
and
sbb
loop
sti
cli
repnz
pop
and
or
and
jmp
or
test
push
jp
addr16
adcb
or
jle
mov
aas
fildl
mov
pop
bound
adc
pop
popf
jle
adc
add
xor
shrl
sbb
ja
js
test
push
sbb
arpl
lret
cmpsb
pop
mov
dec
pop
jp
xchg
cmp
pop
xchg
movsb
sub
add
stos
orb
cs
mov
fisubrs
lea
clc
push
ljmpw
adc
and
and
push
rorl
adc
mov
movsb
adc
pop
das
mov
mov
dec
inc
pop
mov
in
lds
jo
adc
push
dec
mov
sbb
push
sbb
dec
cmpl
sub
and
mov
xlat
adc
pop
mov
xacquire
stos
std
push
xor
stos
ja
scas
jmp
sbb
cmpsb
movsb
jmp
inc
cmp
xchg
into
fcmovb
inc
cmpsl
jae
pop
xor
dec
push
jle
or
gs
mov
adc
popf
cmp
or
pop
mov
enter
int
push
sub
push
or
push
cmpsl
push
push
cltd
mov
ss
or
cmpsb
stos
test
aas
aas
pop
inc
sub
jecxz
cmpsb
mov
test
adc
pop
push
or
dec
adc
aaa
push
dec
inc
andl
adc
test
mov
sbb
scas
and
sbb
movsl
push
mov
sub
les
jmp
cmp
out
je
out
nop
sbb
add
dec
pop
out
xor
insl
jge
inc
or
or
int
and
aas
inc
test
or
push
xchg
or
cmp
push
faddp
ds
test
fsubl
cwtl
inc
xchg
pop
addr16
mov
int
and
enter
pop
scas
shrl
iret
mov
lret
sub
leave
insb
out
cltd
test
xchg
mov
mov
xchg
or
adc
and
xchg
mov
daa
dec
mov
adcl
jb
lds
push
sub
shlb
push
ret
sbb
clc
xchg
fs
sub
add
and
push
push
ja
push
inc
lods
xor
sahf
aaa
sbb
imul
and
fdivl
ret
jmp
imul
leave
xlat
repz
call
sbb
ljmp
xor
out
mulb
pop
xchg
subl
out
aas
in
adc
jge
lea
and
outsl
xor
dec
inc
xchg
mov
sbb
enter
dec
cmp
pop
push
std
lock
or
sub
test
ss
push
js
mov
stc
push
push
inc
cmpsl
inc
fistl
cmp
daa
inc
popf
jb
negl
sbb
adc
sbb
or
xchg
pop
mov
shl
pop
divb
cmp
mov
cmp
jnp
dec
dec
mov
xlat
xor
mov
lds
ror
inc
dec
imul
push
fcompl
outsl
fucom
xor
lahf
aaa
call
fsubrs
in
in
fiadds
pop
lds
sbb
push
sbb
push
fidivrl
push
xor
dec
inc
xchg
mov
mov
cmpsl
enter
mov
fwait
dec
xchg
or
cbtw
pop
aas
xor
xorb
aaa
in
push
sbb
repnz
jns
sbb
cmpsl
sub
rcr
ret
adc
pop
aad
adc
nop
fidivrl
test
loope
or
push
push
sub
fabs
xchg
les
or
movsb
mov
sbb
pop
js
pop
test
pop
push
insb
or
pushf
rcrl
or
adc
add
and
lea
jmp
repnz
aad
pop
push
cli
sbb
sub
push
and
sti
loop
push
jno
call
outsl
push
xchg
cmpb
push
lret
mov
repz
or
cmp
test
cmc
pusha
lret
or
fistl
stc
out
orb
and
dec
fadds
xor
cmpsb
adc
sahf
addl
or
subb
ficomps
cmp
mov
push
aam
out
loopne
adcb
nop
lock
xchg
loope
pop
aam
sub
cltd
and
jmp
xor
mov
xchg
out
sbb
adcb
pop
add
mov
mov
and
aam
lds
daa
xchg
bound
in
sub
dec
nop
cld
outsb
test
inc
push
out
jb
sbb
je
std
adc
shrb
mov
mov
fiaddl
andl
jnp
fiadds
sbb
sub
ljmp
ret
mov
imul
adc
mov
mov
cmpsb
lret
xchg
sub
arpl
call
popa
pop
sahf
xchg
pop
inc
shrl
jecxz
pop
arpl
inc
xchg
cmpsl
jno
sbb
es
xchg
mov
pushf
inc
jae
fsubl
addr16
sub
inc
clc
push
dec
mov
cmc
addr16
xchg
mov
sbbl
int
loop
xor
xchg
int
mov
cmpsl
cltd
mov
pushf
sub
loop
inc
push
adc
jle
imul
xor
ss
xor
test
addr16
mov
cmpsl
jecxz
pop
jmp
stos
sub
lret
mov
jno
pop
fists
arpl
lsl
cmp
xor
jnp
loopne
xor
pushf
out
repnz
lcall
stos
add
dec
int3
pushf
add
movsb
lret
stos
jne,pn
xor
es
push
fsubrl
inc
adc
cmp
out
inc
push
or
mov
fsubr
int
pop
lock
jnp
mov
enter
xchg
test
inc
jns
and
leave
sti
mov
mov
jl
mov
std
fdivrs
xlat
jne
inc
dec
mov
or
xchg
cmpl
movsb
fnstsw
sbb
xchg
mov
scas
sti
out
imul
ret
pop
xor
jl
adc
jp
daa
out
pop
subl
aam
pop
inc
popa
mov
movsb
push
jnp
lcall
lahf
adc
mov
mov
popa
adcl
lret
shll
fdivrs
sbb
enter
xchg
and
lret
sbb
sbb
lods
out
mov
not
pushf
mov
cltd
pop
sub
add
jp
xchg
outsb
mov
adc
cmp
lret
and
xor
fldl
insl
jl
xchg
xchg
jbe
stos
mov
clc
in
int
imul
add
pop
outsl
lods
popf
or
mov
pop
pop
sbb
je
pop
jg
pop
shlb
cmp
ljmp
sub
andl
sbb
sarb
lods
xchg
or
add
inc
mov
das
aas
iret
outsl
pop
inc
cwtl
inc
adc
cld
sbb
sbb
sbb
sbb
add
inc
lds
dec
loopne
mov
jb
pop
lods
pop
sbb
mov
inc
cli
fs
and
ret
stos
or
cld
rcl
sub
out
push
add
sbb
mov
outsl
sbb
pop
sbb
adc
fimull
pop
dec
pop
xor
daa
sub
or
cltd
fdivrl
xchg
popf
jae
aam
ldmxcsr
pop
xor
cmp
inc
pop
adc
dec
push
and
pop
or
enter
mov
lock
jne
rcr
in
ret
or
cmpsb
out
out
and
shll
sbbb
aam
stos
jne
insl
cltd
sarb
loopne
push
outsl
add
cmpl
aas
mov
aad
data16
stos
or
loop
add
les
rol
dec
icebp
scas
in
fiaddl
iret
sarl
and
sar
jle
sub
int3
push
lock
or
jne
push
in
incb
mov
mov
addb
mov
mov
jmp
ja
stos
or
nop
pop
or
ss
popf
mov
test
xchg
jno
mov
out
loope
mov
push
fwait
add
loop
cld
push
inc
cmp
push
incl
sbb
sub
and
sbb
mov
subl
repnz
mov
cmp
insl
mov
int
ret
loopne
cmp
jl
in
je
mov
lret
fcom
shlb
rep
out
cmp
mov
mov
push
jecxz
scas
cmp
fcmovb
sub
jle
adcb
rcll
pop
mov
pop
dec
xchg
mov
aad
sbb
movsb
lcall
inc
and
scas
inc
cmpsl
ds
jp
in
or
aas
mov
and
ljmp
or
or
jg
orl
or
jge
jae
notb
jb
pop
repnz
push
mov
cmp
daa
pop
out
pusha
mov
dec
mov
inc
or
movsb
popa
clc
jae
in
cmpsl
aam
push
jns
sbb
xchg
in
sahf
insl
lcall
insb
add
sarb
adc
xor
stos
je
mov
mov
shlb
jno
xchg
xchg
loopne
and
xor
jecxz
xchg
mov
jg
push
jne
push
mov
lret
xchg
sub
push
sbb
cmpsl
js,pt
daa
in
popa
rorl
xorl
cmpsb
cld
es
ljmp
call
fisttps
pop
mov
adc
fst
push
lret
bound
push
push
push
aaa
movsl
leave
or
push
fisubs
dec
mov
jns
add
jecxz
out
dec
lds
sub
es
icebp
out
push
jns
lret
lds
mov
out
shlb
or
and
fstp
cmp
pop
mov
push
or
jle
mov
cmp
xchg
setnp
cmp
jle
dec
fst
imul
mov
loop
add
pop
lds
dec
xor
pushf
sub
sbb
dec
xchg
rcl
addl
fisttpll
and
andl
xchg
rorb
int3
fldl
cmp
jb
orb
xor
jecxz
inc
testl
pop
mov
fwait
test
xchg
loope
mov
adc
jae
fnsave
arpl
cmpsl
mov
mov
pop
pop
sbbl
sbb
cld
mov
push
adcl
add
stos
mov
xchg
jp
data16
mov
sbb
lret
repnz
inc
mov
int
xchg
jmp
add
xchg
or
mov
movsl
mov
lods
cmpsl
add
mov
sub
mov
adc
fbld
xchg
fisubrl
and
out
and
arpl
mov
adc
pop
lods
xor
and
fiaddl
inc
mov
sub
mov
adcl
adc
test
icebp
das
cmp
sbb
addb
cmp
add
push
leave
cmpsb
lock
jecxz
jecxz
ficoml
inc
inc
sub
imul
pop
out
out
jge
dec
push
out
xor
je
in
nop
imul
out
push
rolb
test
mov
adcl
xlat
pop
xor
push
jg
xorb
repz
jle
imulb
push
jmp
aaa
jecxz
sbb
inc
jmp
mov
sub
lock
clc
push
mov
mov
fdiv
fdivrs
lds
sbb
cmp
pop
jp
jl
lret
es
cmp
inc
mov
mov
cmpsl
jg
mov
shrl
mov
cmp
stos
int3
mov
jg
pop
adc
push
pop
aaa
sub
and
and
cmpsb
mov
dec
daa
cmp
andb
dec
call
aas
dec
add
outsb
pop
nopl
cmpsl
out
repz
popf
out
xor
push
ds
sbb
inc
mov
and
mov
enter
les
adc
fisubs
ss
push
dec
add
bound
dec
push
imul
pop
and
mov
mov
mov
mov
mov
icebp
adc
mov
mov
push
outsb
cmpsl
mov
mov
adcb
xchg
lods
ret
push
adc
cmp
dec
notb
mov
fcoms
mov
push
lds
js
xor
mov
jbe
sbb
mov
popa
push
xchg
hlt
stos
mov
lds
or
fnsave
cmp
push
jo
adc
cmpsl
jbe
div
push
clc
dec
divl
push
dec
jo
jecxz
xor
loopne
scas
inc
aad
shlb
cmp
arpl
inc
xchg
mov
aad
ret
outsb
fucom
cs
sub
mov
and
add
lahf
xlat
sbb
cli
or
rcrb
outsl
sti
fs
fwait
stos
push
fs
cmp
mov
cli
cmp
xchg
and
test
cmp
test
mov
push
int
ljmp
imul
inc
enter
roll
ret
sub
jmp
mov
pop
rorb
repnz
mov
clc
mov
or
shlb
je
jp
mov
loopne
das
lret
xor
adc
nop
inc
adc
outsl
jmp
mov
jnp
dec
ficompl
scas
mov
mov
mov
lds
pop
fisttps
jmp
mov
loope
rcr
movsb
mov
add
dec
out
sarl
out
cwtl
pop
or
mov
imul
jno
add
push
das
push
jmp
ja
lods
and
rcl
ret
js
adc
lds
mov
gs
js
adc
or
push
cmc
imul
vmread
and
jmp
or
adc
xor
mov
cmp
sbb
cmp
cmpsl
dec
push
pop
jecxz
les
imul
loop
dec
je
neg
idivl
inc
inc
in
loop
mov
lret
pop
std
data16
sbb
into
pushf
dec
pusha
jge
mov
insl
mov
push
mov
mov
movsl
in
pop
and
stc
cmpsl
dec
push
jge
xlat
mov
les
std
mov
xlat
add
cli
mov
outsl
lods
mov
imul
stos
jmp
cli
sbb
mov
decl
or
xorl
sbb
add
js
in
push
mov
ret
cmp
mov
push
dec
dec
hlt
std
dec
add
add
mov
mov
out
aaa
mov
in
push
pop
jbe
sbb
movsl
shlb
adc
dec
cmpsl
and
movsb
jp
int3
outsl
sub
fcoms
mov
inc
dec
test
insl
mov
jl
ret
add
mov
mov
pop
sahf
imul
push
jl
loope
xlat
mov
inc
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
sbb
pop
iret
sar
push
ljmp
mov
adc
rcll
mov
lods
pop
mov
aas
sbb
jp
adc
jecxz
push
int3
out
push
dec
push
push
mov
aas
stos
aad
sub
stos
jno
and
add
jg
test
or
out
inc
orl
in
divl
xchg
mov
sub
in
sub
inc
xchg
inc
imul
xor
cmovnp
test
addr16
or
jp
push
dec
dec
add
mov
push
imul
xchg
rcr
nop
dec
cmp
int3
fwait
rorb
mov
imul
jb
jg
push
adc
iret
es
pop
push
push
ds
addl
icebp
sbb
xlat
mov
xor
neg
sbb
dec
dec
fsubl
lock
or
lods
jns
mov
mov
and
les
lock
inc
fldt
sbb
cmpl
cltd
lock
nop
or
js
dec
cli
xor
mov
fbstp
test
stos
jmp
xor
cwtl
aam
and
mov
pushf
inc
pop
sub
dec
cld
pushf
shr
lcall
or
fiaddl
dec
inc
lods
shlb
jbe
repz
cmpsb
dec
mov
outsb
lahf
loop
ret
mov
test
pop
xabort
loop
in
sbb
push
ret
jns
in
pop
flds
dec
mov
mov
ret
or
outsl
push
push
lods
xchg
mov
divl
jno
lahf
out
popf
adc
dec
filds
inc
push
das
xchg
out
popa
call
pop
xchg
mov
xor
iret
sub
fcomi
pop
xchg
shll
jbe
cld
cpuid
jmp
into
xor
pushf
jle
xor
lods
sub
and
or
mov
arpl
ficoml
add
and
mov
and
mov
fcmovb
cmp
fisttpll
jae
xchg
jnp
sahf
or
jb
sub
or
sar
xlat
adc
daa
sbb
pop
jae
sbb
ds
jo
stc
jnp
jmp
std
repnz
cmpsl
xor
inc
lock
je
popf
sbbl
xchg
orb
in
rcrb
lea
xchg
mov
int
sti
pop
movsl
mov
cmc
imul
sbb
jmp
jbe
popf
vmovups
std
xchg
pop
sub
sub
jmp
jb
push
pop
jno
xor
loope
out
jbe
jmp
xor
and
push
xchg
orl
xchg
adc
lret
mov
cmp
popa
ds
push
pop
mov
ja
rcll
iret
push
xor
pop
mov
lods
push
xchg
lods
xchg
rep
lods
mov
rep
pop
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
xor
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
xor
sub
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
sub
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
sub
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
and
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
sub
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
sub
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xor
