and
cwtl
mulb
jecxz
sub
sbb
mov
cmp
movb
xchg
push
inc
mov
fidivs
ja
mov
aaa
fsubp
xchg
sub
test
xor
adc
cld
inc
adc
aam
sbb
and
add
ja
push
and
and
jnp
jnp
inc
xchg
clc
std
cli
lret
ja,pn
cld
adc
jp
jge
fisubl
lock
inc
fistpl
rorb
insb
mov
aas
and
arpl
sbb
add
inc
movl
stos
repnz
test
ret
in
xor
push
popa
out
fisubrl
inc
aaa
mov
repnz
lods
scas
push
or
lahf
sahf
les
aam
jb
in
in
xchg
int
jecxz
in
inc
hlt
sub
xor
out
push
pop
pusha
push
rorb
shll
mov
jo
rcll
addr16
xchg
movsl
pop
gs
popf
inc
out
sub
push
push
cmpsb
je
fs
cs
mov
in
arpl
xchg
pop
inc
lods
js
cmpsb
sbb
push
mov
pop
dec
push
gs
mull
dec
mov
or
repnz
push
sub
addr16
imul
sub
pop
xchg
test
aas
icebp
inc
movl
jg
mov
adc
aad
pop
imul
sub
sbb
cmc
shl
loop
lods
jbe
mov
dec
fdiv
imul
clc
jnp
cs
jns,pt
dec
push
rep
ss
loop
movsb
mov
pusha
movsb
mov
iret
push
mov
pop
mov
mov
out
in
xor
mov
sahf
ret
mov
lret
mov
adc
cmp
das
in
pop
jp
lahf
jnp
insl
push
lret
jge
movsl
mov
lea
scas
cmp
xchg
mov
add
insb
stos
fisubs
ljmp
adc
gs
inc
and
jbe
dec
push
aad
out
add
mov
mov
pop
das
daa
fisubs
or
pushw
ret
mov
movsl
stc
insl
jb
or
add
jmp
cltd
test
push
and
pushf
jmp
sahf
pop
mov
cmp
stos
cmp
and
ja
cmpsl
leave
xor
orl
lret
inc
inc
ficoms
jns
ds
push
mov
dec
call
or
cli
shll
shrb
add
jb
jle
cmc
orb
cmpsl
push
inc
rol
push
movsb
pop
xlat
gs
pop
push
mov
into
xchg
aam
mov
sbb
roll
aam
adc
fdivl
in
popf
mov
add
and
inc
loop
mov
fstl
daa
rcrl
lret
cmp
xchg
push
xchg
pop
mov
pusha
jns
nop
xorl
xchg
dec
mov
mov
lret
xchg
mov
pop
or
inc
ror
daa
mov
lods
fdivl
test
adc
jnp
cmpsb
fildll
add
icebp
idiv
jno
sbb
add
stos
pop
mov
or
sub
mov
popa
clc
outsb
decb
xchg
and
scas
decb
jmp
mov
push
jb
lahf
push
inc
mov
jl
stc
xor
out
inc
ret
xchg
imul
cld
js
mov
lcall
lahf
xor
jp
cwtl
push
daa
repz
push
push
xchg
add
fidivrs
push
scas
mov
js
mov
mov
jmp
setg
pop
lcall
dec
cmpl
xchg
mov
lret
sbb
push
pop
push
xchg
in
arpl
and
jae
js
push
fwait
lock
mov
out
dec
call
lods
add
push
adc
std
adc
or
pop
xchg
addr16
dec
mov
cmp
jmp
cli
lock
rorb
ja
emms
push
std
movsl
ret
enter
mov
fisubrs
sahf
xchg
pop
icebp
cmpsb
pop
and
imul
mov
and
cmp
sub
shrl
xchg
mov
scas
add
lods
inc
fimuls
add
es
dec
imul
add
sbb
jbe
push
mov
cmp
pop
jmp
xchg
sbb
dec
cmp
clc
aam
repnz
push
shlb
negb
std
into
dec
cmp
outsl
fldenv
cmpsb
push
xor
mov
cltd
pop
nop
test
out
sahf
shll
enter
movsl
int
sbb
xchg
shlb
roll
addr16
aad
insb
aad
add
mov
insl
dec
fldl
push
mov
shlb
push
hlt
cmp
inc
cwtl
push
inc
subl
cmp
adc
imul
loope
loope
jae
sbb
sarb
inc
mov
add
addr16
jnp
cmp
cmp
pop
cltd
ret
ljmp
int
rcrl
pop
mov
push
cmp
mov
loope
out
faddl
mov
int
shl
jl
out
insl
in
rcll
xlat
jb
dec
push
push
pop
mov
aad
mov
dec
shrb
nop
add
xchg
inc
inc
sar
ds
push
xchg
and
adc
xlat
xor
in
sbbl
or
dec
test
js
adc
int3
push
add
cmpsb
pushf
cli
mov
add
ds
mov
lods
mov
out
cltd
arpl
sbb
insl
cmp
enter
jp
dec
push
out
sub
mov
sub
jbe
xor
ja
mov
scas
mov
fstpt
xchg
push
mov
mov
pop
pop
adc
push
pop
cmp
adc
lahf
cld
adc
jb
jb
and
adc
push
cmp
dec
test
jnp
fcoms
cmp
pop
xchg
push
scas
daa
push
lods
dec
test
adc
fdivs
and
cmc
dec
cmp
mov
xchg
mov
insl
outsl
sub
mov
cwtl
sbb
popa
mov
adc
or
pop
push
movsb
scas
pop
outsb
add
pop
clc
push
ljmp
insb
notb
in
dec
loop
pop
sarl
push
out
push
js
stos
mov
outsl
push
mov
inc
lret
outsl
sahf
mov
daa
xor
in
add
pop
sarl
mov
pop
lods
or
negl
mov
sub
js
in
and
fdivrl
push
adc
inc
bound
seta
mov
pop
imul
or
mov
and
jge
xchg
jl
ret
add
or
in
mov
std
loope
scas
rclb
mov
enter
movsl
mov
cmpsl
stc
aam
or
rcl
lahf
stc
add
mov
lret
inc
fisttps
jnp
push
push
test
daa
add
popf
jnp
add
fstpl
inc
pop
mov
ljmp
mov
fucom
dec
dec
push
dec
mov
xlat
aas
mov
pop
push
mov
hlt
add
mov
inc
pushf
cmp
test
cmc
js
mov
aas
inc
push
outsb
dec
out
or
push
daa
fistpl
adc
cld
inc
cwtl
push
sbb
sub
imul
xchg
xor
pop
addb
lcall
and
add
fcmovnb
sar
nop
shr
mov
movsb
fcmovu
pop
insb
movsl
loopne
or
adcl
or
test
cmp
lods
add
jns
gs
leave
cmp
out
or
dec
push
mov
repz
mov
add
mov
mov
xor
sub
ljmp
push
push
xchg
sub
mov
xor
inc
push
mov
test
andb
vmovups
mov
pop
clc
mov
loopne
leave
xchg
loope
mov
push
adcb
out
add
jle
insl
push
int3
sbb
inc
mov
mov
ds
repz
and
sahf
popf
pop
mov
in
sub
pop
push
scas
mov
adc
sub
pop
pop
es
out
cmp
add
fimull
jle
lahf
jp
cmp
and
inc
idivb
cmp
push
push
cli
adcl
and
mov
arpl
dec
aad
jb
mov
jge
adc
push
ja
cmc
jmp
adc
sub
sub
sbb
push
and
pusha
dec
adc
pusha
lock
dec
inc
push
inc
or
mov
popf
fcmovne
sbb
mov
cmp
fstpl
leave
xor
das
mov
and
adc
lcall
into
add
movsl
popa
pop
imul
in
rcrb
inc
jne
shrb
add
shll
lods
inc
push
das
add
ret
sti
cmc
or
fstl
lcall
popf
rol
fadd
xchg
pop
and
mov
mov
sub
cmpsl
sar
into
dec
xchg
aas
in
pop
rorb
mov
out
out
push
adc
sub
mov
cwtl
test
jle
push
stc
rcrb
xlat
mov
or
scas
push
cmpsl
fwait
push
mov
pop
and
cmpsl
loope
or
and
add
add
push
jle
ljmp
addr16
iret
setae
insl
movsl
jbe
fucom
mov
mov
push
pop
jnp
xchg
push
mov
mov
and
mov
cmp
xchg
add
movsb
xchg
mov
xor
dec
scas
xor
inc
pushf
sub
dec
mov
orb
xor
outsb
or
ja
out
vcvtsd2si
rcll
outsl
data16
addr16
bound
cmp
inc
dec
mov
xchg
lahf
mov
lods
aaa
outsb
mov
or
or
fsubrs
mov
jb
inc
and
mov
cli
movsl
mov
and
fisttpll
mov
out
xchg
push
stos
mov
hlt
pop
lcall
xchg
lods
popf
stos
sub
xchg
addr16
test
jb
imulb
push
push
pusha
iret
pushf
sub
das
dec
das
xchg
ret
lret
cmpsl
add
mov
aam
cmp
sbbl
mov
xor
fidivs
mov
jge
rorb
sub
scas
decl
sbb
shl
pop
rclb
lret
push
test
pop
xor
mov
fidivl
sub
pop
pop
jl
lock
mov
fsubrs
add
cmc
jmp
mov
js
lret
gs
jbe
mov
jmp
cmp
add
push
and
cmp
cwtl
mov
lret
cmp
lret
rcrb
sub
loopne
lcall
inc
mov
je
jb
inc
ljmp
cmp
stc
add
cmp
push
cs
leave
mov
push
pusha
push
add
push
jle
arpl
scas
pop
leave
shlb
inc
push
movsl
outsl
mov
outsl
and
je
cwtl
inc
mov
fldcw
jnp
jge
or
ljmp
adc
movsb
jecxz
fsts
cwtl
ljmp
dec
pop
pushf
popf
enter
sub
cmp
mov
push
cmp
insb
mov
test
scas
ljmp
adc
icebp
call
fldenv
add
cmpsb
mov
mov
stos
mov
repnz
outsb
pop
sahf
mov
loope
adc
fidivs
inc
mov
push
push
insl
dec
add
cmp
mov
nop
push
lods
adc
add
and
push
dec
mov
jmp
adc
push
addr16
in
xor
or
fisubs
push
jno
inc
dec
addb
addb
call
fcompl
fidivrs
add
xor
cmp
jne
mov
ljmp
xor
xchg
aad
sbb
lock
pop
lods
push
sbb
out
push
lahf
xchg
dec
shrl
jno
into
cmp
popa
jns
cmp
lods
xor
jo
clc
pushf
dec
and
cltd
int3
ja
push
push
test
xchg
dec
mov
cmp
sbb
aas
imul
mov
lcall
pop
push
mov
mov
xor
lock
fisubl
shll
jmp
xor
pop
lock
jbe
out
add
or
and
inc
es
cmpsl
mov
push
stc
xor
shr
or
movsb
jl
sbb
inc
cmp
add
push
daa
xchg
jne
scas
xchg
adc
push
repnz
adc
xor
and
sub
and
mov
aas
xchg
or
dec
xorb
xor
or
scas
inc
stos
push
jnp
icebp
jb
hlt
popf
dec
inc
out
test
pop
stc
push
iret
jb
jo
rcll
cmpsb
int3
mov
push
sub
mov
push
cmp
mov
xchg
push
loop
incb
inc
dec
jb
fwait
xor
cmpsb
into
inc
cwtl
lods
loop
mov
mov
stos
dec
imul
roll
mov
dec
lock
xor
mov
inc
test
push
xchg
xchg
div
push
xchg
in
pop
inc
jbe
xchg
and
out
gs
aam
insl
imul
sbb
cmp
data16
or
out
icebp
inc
dec
jp
jae
rcrl
mov
mov
sti
push
or
pop
and
repnz
jl
scas
mov
daa
shlb
mov
pop
sti
xchg
adc
and
loop
sub
test
sbb
xchg
jecxz
scas
test
add
push
inc
or
push
nop
repz
pop
push
xchg
mov
jp
mov
les
fbld
xlat
jge
inc
or
aas
mov
shll
cmp
lea
add
pop
sbb
mov
es
in
scas
test
repnz
decb
sub
add
sbb
fs
fcmovu
dec
out
std
cmp
das
mov
lahf
mov
dec
cmpsl
xchg
negl
push
xchg
stos
adc
push
inc
sub
pop
mov
shlb
cmpsl
xor
rorb
cwtl
frstor
sbb
jge
xchg
aaa
adc
cmpsb
add
jno
sbb
mov
cmpsl
leave
aaa
aad
imul
inc
jb
xor
dec
push
in
aaa
js
loop
add
jmp
inc
insb
push
int
sbb
or
xchg
lea
dec
sbb
sbb
sub
cmp
add
test
xor
int3
sbb
fs
or
cli
xchg
or
cmp
and
cmp
xor
or
adc
movsb
adc
pop
ds
sbb
inc
popa
adc
push
mov
cmpsl
mov
in
outsb
lds
stos
iret
orl
das
dec
inc
aas
cs
inc
sahf
scas
rcrb
fisttps
and
or
sub
gs
lret
mov
popa
lret
test
adc
push
add
cmp
mov
sbb
sbb
mov
jns
cmp
xchg
lret
lret
push
decb
push
imul
imul
std
stc
fidivl
es
lret
pop
and
in
rorb
dec
mov
and
mov
jne
in
dec
leave
sahf
mov
sub
push
mov
fmuls
mov
cmp
jo
inc
cmp
sbb
ds
ds
jmp
push
dec
stos
scas
jo
cmp
leave
and
push
push
or
fiaddl
dec
fldt
inc
stc
mov
mov
mov
push
imul
hlt
adc
and
loope
adc
fldcw
inc
in
daa
adc
aad
hlt
mov
ss
fs
in
pop
adc
cmp
lret
hlt
vminsd
lods
xchg
cmc
jnp
and
cmp
fadd
xchg
shrb
gs
outsl
cmp
and
dec
push
push
add
pushf
or
pop
in
rol
jmp
test
jb
xlat
or
xlat
xchg
xorl
rorb
fstps
movsb
test
sub
js
sbb
mov
push
data16
jg
mov
dec
jle
jl
pop
lea
push
imul
int
std
mov
add
jecxz
test
movsb
nop
dec
lock
mov
adc
inc
push
ficoms
imul
outsl
movsl
hlt
xchg
ja
movsb
outsl
mov
out
adc
ljmp
inc
xchg
imul
and
inc
stos
push
ret
push
repnz
add
pop
cmpsl
into
pop
sub
and
xor
fiaddl
xchg
jb
pop
pandn
and
fwait
sqrtps
pusha
pop
xchg
inc
shll
sub
sbb
es
jbe
push
and
fidivs
mov
push
out
mov
xchg
xor
loope
cmp
xlat
adc
pushf
sbb
add
push
icebp
mov
and
in
sbb
shrb
inc
pushf
test
push
jno
loopne
inc
movsl
bnd
imul
cmp
sbb
lret
inc
adc
and
ret
lods
adc
jge
mov
cltd
aaa
sbb
push
push
inc
ds
cli
jp
sbb
repnz
sarl
jne
jns
pop
ja
dec
dec
mov
pop
xchg
scas
orb
fdivs
xchg
and
xlat
cmp
mov
push
mov
insb
iret
ss
add
mov
test
jge
cmp
adc
jae
xchg
popa
mov
loopne
fldcw
or
clc
adc
adc
into
and
fs
les
sub
push
and
div
sahf
pop
cmpb
cmp
int
das
hlt
loope
arpl
les
pop
add
sbb
sbb
jmp
fisubrl
int
cmp
pop
jne
iret
enter
aad
xor
out
dec
mov
loop
dec
orl
mov
andl
cmpsl
xor
cwtl
and
mov
enter
mov
adc
sbb
out
mov
pop
jecxz
ja
jae
xor
test
enter
sbb
xchg
repnz
scas
mov
push
sbb
dec
outsl
and
mov
cmp
push
bound
stos
mov
cmpl
aam
or
movsl
insl
test
mov
repnz
adc
frstor
xchg
stos
dec
jb
aas
and
out
cmp
jae
lcall
inc
je
jns
inc
xor
mov
pop
xor
mov
lods
lea
xchg
fldt
das
fld
cltd
push
loop
outsl
pop
mov
pop
push
xor
rcr
cmp
add
mov
fdivrl
jno
inc
daa
aas
push
lock
mov
xlat
mov
mov
add
adc
aam
cmp
dec
clc
push
pop
movsb
adc
xchg
pop
cmpsl
pop
add
push
inc
cmp
cmc
stos
pop
jae
mov
dec
add
sbbl
jbe
dec
fisubrs
bound
imul
jae
mov
shlb
aaa
out
aam
pop
fadd
imul
jl
mov
xchg
ss
insl
pop
xchg
sbb
movsl
cmp
jno
pop
xor
icebp
push
mov
rcll
lahf
jg
cltd
movsl
xor
sar
dec
decl
sbb
add
ret
das
mov
ja
jb
jne
sahf
or
push
in
mov
push
dec
call
outsl
jmp
ljmp
inc
jnp
xchg
xor
pusha
sub
jae
dec
pop
xor
push
test
pop
mov
fcomi
fs
mov
pop
in
sub
or
xchg
and
enter
subb
sub
or
sub
in
dec
mov
pop
and
jmp
xchg
mov
loop
aam
push
xlat
mov
test
xchg
cmp
inc
lret
clc
into
push
lods
lret
outsl
jl
out
movsb
fidivrs
mov
scas
push
bound
repz
mov
decl
shl
rorb
cwtl
cmpsl
inc
xor
mov
jb
mov
pop
jl
out
rcrb
cmp
gs
rolb
lock
inc
out
push
jecxz
add
cmpsl
fcomp
sub
push
mov
in
mov
add
shlb
mov
xchg
cmp
sahf
mov
mov
cmp
stos
mov
sub
inc
push
jge
cmp
push
lret
fwait
shlb
rclb
mov
mull
jo
lret
xor
push
push
push
mov
pop
rolb
inc
shrb
in
pop
add
mov
es
test
xor
fisttps
cwtl
dec
faddl
fisubrl
test
je
mov
or
cmpsb
push
push
fiadds
inc
leave
ljmp
mov
pop
das
rcr
and
nop
inc
add
and
rol
dec
dec
call
in
mov
ss
dec
mov
mov
jae
push
sar
jmp
mov
popf
scas
add
xor
mov
aas
adc
xor
mov
xchg
sub
out
pop
jmp
inc
fimuls
popf
hlt
cmpsb
dec
adc
and
mov
rcr
pop
mov
pop
divl
adc
scas
loop
sub
cmpsl
pusha
xchg
inc
mov
push
imul
sub
adc
mov
insl
insb
js
out
xchg
fsubp
testl
insl
and
repz
ror
pop
jns
pop
aam
mov
test
mov
cwtl
das
or
inc
mov
or
cmpsb
or
js
cmpsl
lea
js
fdecstp
cli
je
pop
sub
xchg
pop
push
mov
mov
ss
sbb
movsl
out
push
fdivl
outsb
mov
add
ss
mov
cwtl
test
cmc
pop
mov
dec
xchg
pop
and
stc
or
jne
lcall
add
add
cmp
daa
jmp
push
cmp
push
fimuls
dec
iret
popf
in
pushf
xor
stos
jle
inc
mov
xchg
mov
mov
popf
mov
cmp
mov
sbb
lret
testb
scas
lods
xchg
adc
dec
and
or
push
rorb
loope
bound
cmpsl
or
mov
int
jae
out
push
dec
mov
mov
cmc
lds
into
js
shrb
pop
inc
das
stos
out
popf
mov
inc
ds
adc
nop
and
and
mov
jae
mov
jp
xchg
dec
fsts
pop
mov
divl
data16
testl
adc
cmp
popf
fdivrs
lcall
dec
pop
and
and
mov
or
xrelease
add
subl
ret
add
mov
in
pop
ja
ss
stos
dec
jmp
mov
addb
aaa
sub
stc
push
pop
or
and
jns
dec
ja
push
movsl
fisttps
sub
xor
push
push
int
mov
jmp
cmp
lods
jne
fists
test
sarl
cmc
mov
jne
aaa
arpl
cmp
call
push
mov
enter
xchg
dec
cmp
pop
mov
jecxz
lret
xor
in
and
pushf
xor
and
inc
shrl
insl
scas
push
lea
dec
sub
test
jmp
loope
sbb
stc
fldcw
push
scas
push
test
cmp
int
inc
int
sub
into
out
adc
hlt
mov
cwtl
mov
mov
gs
cs
in
mov
pop
test
pop
sbb
sbb
inc
xor
add
loopne
loop
push
xchg
and
xchg
mov
rcrl
dec
mov
loop
xchg
out
aaa
jae
pop
or
mov
les
mov
scas
hlt
pop
cmp
mov
loop
mov
aad
in
push
ja
pop
in
ret
jns
pop
pop
outsl
dec
mov
or
inc
jecxz
cmc
bswap
lods
jp
and
jns
in
pusha
lock
xchg
loop
xchg
sub
cmp
mov
mov
leave
adc
jl
mov
data16
les
xchg
pop
movsl
mov
jo
push
in
pop
ret
add
rcll
enter
clc
repz
rep
int3
jle
cwtl
pop
push
incl
scas
scas
jb
push
jae
outsl
movsl
sub
aaa
call
int
mov
ret
les
and
fiadds
fsubp
mov
es
stos
ss
cmp
mov
dec
or
jge
or
mov
je
pop
mov
lods
test
repz
mov
or
jecxz
repz
leave
mov
jmp
inc
ds
adc
mov
jno
jl
push
les
mov
xchg
stos
cmpb
mov
push
mov
jp
aaa
mov
or
xor
or
mov
testl
jae
gs
out
add
dec
mov
dec
imul
mov
xchg
mov
sub
push
xchg
dec
cmp
sub
popf
cwtl
and
and
xchg
adc
xlat
js
and
pop
jmp
fisttpl
or
or
pop
mov
pushf
iret
lcall
loop
mov
call
dec
repz
test
xor
cmp
jo
clc
cli
ljmp
pop
adc
nop
ja
mov
fidivrs
jmp
or
sub
movsb
jmp
imul
dec
push
ja
pushf
mov
cmp
jne
push
es
cmp
xor
roll
sbb
imul
popa
js
data16
in
cmp
mov
mov
enter
sub
insb
mov
push
pop
cli
inc
mov
rol
ret
shll
ret
mov
dec
mov
pop
fcoms
repnz
jp
adc
inc
cli
sub
lods
mov
mov
mov
or
mov
int3
push
and
movsb
ret
das
push
cld
in
or
sbb
rcrb
jge
pop
into
and
aad
leave
dec
push
fdivl
into
pop
in
scas
roll
jmp
sub
adc
and
loopw
movsb
xchg
jo
pop
lods
outsl
cmpsl
mov
mov
loop
or
sub
loop
pop
mov
adc
test
repz
jae
jo
and
daa
mov
ljmp
jmp
lock
movsl
out
jge
dec
mov
insb
loope
mov
mov
jb
mov
aad
sti
mov
faddl
lock
or
sti
ljmp
add
push
fsubs
cmp
pop
cld
mov
lods
mov
mov
xor
jbe
adc
fdivr
push
lds
add
les
fsts
scas
push
lock
sbb
sarb
int3
andb
fnstenv
xor
pop
repz
arpl
xor
or
ss
pushf
push
int
hlt
mov
mov
adc
mov
das
adc
pop
xchg
mov
insl
mov
outsb
imul
xor
fwait
jle
mov
rorb
push
pop
dec
mov
xchg
mov
pop
sbb
mov
pop
adc
pushw
scas
mov
jno
lret
nop
sbb
or
enter
fisubl
pop
sar
sub
xchg
lea
in
xchg
mov
xchg
addr16
add
test
fcomip
mov
push
rcll
insl
xchg
test
cmp
movsb
in
insb
xor
dec
inc
imul
cmpsl
sub
out
cmp
pop
adc
fs
cmp
std
and
sub
aaa
inc
sbbl
insl
xchg
pop
push
push
pop
or
rorb
cmpsl
push
lock
ficompl
ds
out
rcrb
ret
xlat
mov
push
nop
push
sub
es
mov
mov
and
pop
sub
add
adc
sbb
icebp
jbe
addr16
jb
icebp
iret
jmp
mov
in
movsl
dec
pop
jp
mov
mov
fucomip
xchg
mov
sub
bound
mov
loope
jp
movsb
xor
mov
jns
and
mov
mov
xchg
and
and
ljmp
pop
sbb
xor
js
orl
movsb
xchg
push
push
dec
repz
iret
pop
cld
push
xchg
das
xor
cmpsb
loopne
jno
lret
rolb
mov
jae
pusha
icebp
hlt
lods
push
push
in
sahf
mov
jge
daa
in
xor
inc
movsl
add
stos
pop
pusha
sbb
and
pop
cli
js
pop
js
pushf
mov
xchg
sub
lods
filds
xor
and
push
push
mov
sbb
stos
jl
sub
in
jo
in
in
xor
jg
and
nop
lahf
push
dec
fs
inc
fsubs
inc
out
lcall
mov
dec
cld
xchg
out
rclb
mov
push
jbe
jge
cmp
add
sarb
add
mov
ljmp
xor
loope
jo
test
mov
jl
mov
sub
cmpsl
sbb
xchg
sbb
xor
mov
mov
outsb
push
adc
movl
test
xor
ficompl
sbb
and
stos
ja
inc
sub
ds
loop
mov
fdivr
and
xchg
inc
adc
jg
push
and
xchg
fnstsw
insl
out
or
or
aas
push
movsb
iret
sub
das
jb
and
mov
sbb
xor
and
lds
mov
dec
pop
cmpb
cltd
lods
jb
int3
int
mov
mov
mov
jbe
push
pop
sbb
bound
std
idivl
push
jne
pop
cmp
filds
in
stos
ret
xlat
ret
or
hlt
lds
mov
fbstp
jle
bound
cwtl
shlb
adc
mov
jo
ficoml
mov
cmp
jmp
push
mov
mov
push
sub
popf
xchg
mov
mov
incl
outsl
scas
aam
mov
jne
cmp
jg
lret
enter
push
pop
sub
loope
xchg
ds
push
stc
movsb
mov
sub
cli
lret
scas
inc
dec
inc
outsb
and
arpl
adc
ljmp
pop
or
lds
jne
cmp
xchg
xor
scas
rcll
mov
mov
iret
clc
mov
jb
sub
push
xor
mov
xorb
inc
or
xchg
or
div
mov
push
jl
mov
and
clc
mov
lret
add
push
sub
imul
xor
aas
and
push
ret
test
enter
out
push
mov
mov
filds
fs
xchg
add
add
pop
mov
or
hlt
mull
sbb
cmpsl
sub
mov
mov
sub
xchg
mov
fsubp
xor
nop
dec
xchg
cltd
xacquire
ja
jo
rclb
sbb
push
xor
lahf
ja
and
sub
add
popf
insl
daa
dec
sahf
test
inc
movsl
dec
inc
test
sti
sub
stos
fldenv
mov
xchg
mov
mov
mov
out
lcall
xor
mov
push
sub
sbb
testl
or
sub
jmp
cmp
adc
decl
lods
pop
jnp
lods
stos
mov
fiaddl
xlat
xor
mov
and
sbb
sbb
ds
push
stos
test
cmpsb
pop
outsb
adc
je
adc
or
inc
inc
or
or
clc
addr16
dec
mov
insl
jno
push
cmp
push
out
add
stc
xor
or
repz
pop
mov
pop
mov
loope
insl
push
lahf
sti
mov
loopne
or
loopne
xor
jge
jg
test
push
mov
push
sub
add
mov
negl
cltd
xchg
addb
mov
pop
jge
sbb
in
out
pop
int
mov
mov
fwait
mov
push
data16
aaa
cmc
push
aas
andl
push
dec
pop
daa
fsts
cs
xchg
sahf
lcall
and
and
and
push
in
sbb
in
mov
xor
cli
pop
inc
mov
sti
mov
add
sbb
inc
jb
pushl
mov
pop
pop
cld
xor
mov
loopne
pop
dec
xor
mov
stos
stc
inc
pop
inc
xor
subl
mov
inc
aaa
and
sub
andl
push
mov
cmpsb
sbb
add
add
pushf
add
cli
iret
sub
aam
fiadds
out
add
inc
icebp
sbb
mov
not
cmpsl
push
add
idivl
inc
in
nop
xchg
into
mov
add
leave
in
mov
xor
mov
inc
xchg
das
xchg
jae
lret
sti
mov
sub
push
cmp
jecxz
inc
stc
xchg
mov
jge
jne
mov
dec
jecxz
iret
xor
shrb
mov
call
xchg
data16
out
sbb
or
js
enter
fnstcw
xchg
ficomps
mov
scas
sbb
shll
scas
sbb
cld
mov
adc
pop
mov
jo
adc
out
xlat
or
pop
fbstp
into
icebp
stos
cltd
arpl
and
cld
mov
and
popa
xor
stos
pop
jo
mov
mov
sub
or
lahf
stos
push
aad
hlt
cld
cmp
repz
lods
mov
and
sbb
jge
mov
jnp
mov
loope
and
cmp
jbe
or
inc
fcomps
rclb
mov
push
pop
fwait
adc
push
fnstsw
push
outsl
dec
bound
inc
shr
imul
mov
fdivp
std
add
fsubrp
pop
lret
stos
cmpsl
mov
fisttpll
lret
lds
add
jae
mov
pop
sub
cs
add
lods
jmp
and
nop
fsub
aam
sti
fildll
iret
fucomp
jb
cmp
pop
cmp
movsb
dec
insl
jno
fsubs
aam
add
pop
mov
sti
ret
sbb
add
xor
cmc
cmpl
push
outsb
stos
les
mov
sbb
scas
test
sbb
es
lahf
jns
xor
push
rclb
outsl
add
mov
pop
sub
ds
jg
sbb
imul
mov
test
mov
mov
sti
mov
mov
loop
push
imul
push
jnp
loopne
mulb
pop
push
adc
fwait
cli
notl
cmpsb
sub
xchg
add
fisttpll
pushf
mov
sbb
aaa
lods
xor
or
es
sub
ds
pop
push
std
lods
push
and
jb
lods
in
test
cmc
add
stc
call
lods
xchg
mov
cmp
add
push
pop
mov
pop
adc
mov
mov
mov
mov
stos
ss
cmp
cmpsb
mov
aad
mov
lcall
adc
jg
sbb
adc
les
in
mov
xchg
mov
sub
xor
hlt
std
filds
repnz
clc
sbb
mov
or
jae
lds
loop
cmp
inc
xchg
out
mov
jge
sbb
pop
ljmp
out
or
insl
mov
hlt
hlt
clc
out
xor
daa
fimuls
sbb
add
fldt
add
sub
rorb
xor
pop
mov
pop
in
sub
lahf
pusha
mov
adcb
mov
pop
and
push
ds
sbb
dec
out
jl
je
dec
scas
xor
sub
push
add
cmpsl
adc
orb
out
test
push
hlt
mov
adc
mov
adc
in
sub
jnp
jecxz
jecxz
outsb
xchg
addr16
into
pop
mov
jne
ljmp
dec
adc
adc
inc
call
push
add
std
mov
push
ja
enter
jle
sub
adc
stos
xchg
inc
andl
cwtl
aaa
pop
mov
xor
push
sti
ret
mov
test
cmpsb
in
jb
arpl
mov
push
add
ljmp
ret
push
adcb
mov
pop
std
in
out
push
mov
and
outsb
add
or
out
mov
mov
lods
jp
lahf
jbe
repnz
dec
jecxz
sub
mov
sbb
in
xchg
dec
mov
xchg
mov
shlb
sti
or
insb
gs
bound
jp
dec
push
add
sbb
lea
insb
add
imul
xor
in
lea
scas
xchg
hlt
scas
mov
dec
mov
mov
iret
or
adc
das
cli
cli
pusha
or
mov
inc
push
je
mov
stc
inc
popf
cmp
cmp
ret
mov
repz
push
nop
loopne
test
cltd
out
mov
mov
lds
xchg
pop
in
or
pop
int3
or
jno
cmpsl
push
subb
adc
push
dec
int3
push
xchg
jmp
sbb
push
inc
jmp
cmp
push
inc
xchg
cmp
and
inc
loop
ja
pop
outsl
push
movsb
xor
or
je
mov
mov
xor
inc
jg
jmp
xchg
pop
sbb
dec
enter
out
push
adc
lret
xor
mov
sub
fnstcw
rcrb
dec
pop
scas
sarw
jae
mov
xchg
adc
stos
pop
lea
lcall
pop
add
call
mov
jmp
cwtl
add
cmp
mov
lods
adc
lock
or
rolb
jmp
pushl
xchg
out
cld
movsl
push
or
cs
inc
push
rorl
pop
enter
sub
insl
mov
pop
enter
xorb
sub
aad
sti
pop
sub
or
jp
jle
inc
rcr
jno
xor
and
pop
cmpsb
adc
dec
ljmp
popf
jl
fsubrp
lret
lcall
imul
je
insb
lcall
xor
adc
cmp
int3
sbb
andb
xlat
jmp
incb
fsubr
test
push
adc
es
and
test
rclb
les
insl
push
in
pop
push
adc
xchg
in
fldt
int
or
adc
shrb
push
rol
pushf
add
add
adc
or
loopne
or
fcoms
fs
inc
mov
pop
popa
mov
push
pop
lahf
mov
outsb
pop
xchg
cltd
insb
xor
mov
mov
or
imul
add
mov
xor
jo
mov
das
int3
cld
jb
add
jecxz
xchg
adc
in
mov
out
mov
lds
xchg
bound
inc
clc
stos
sub
int3
sbb
xchg
bound
jbe
sarl
fisubl
dec
adc
push
cmp
insb
stos
sub
ret
push
imul
sub
neg
enter
dec
add
cmp
insl
mov
dec
mov
jg
lahf
jb
xor
sbb
mov
adc
jno
sub
fs
sarb
fbld
imul
fsubl
jbe
insl
xchg
dec
adc
pop
mov
xor
into
or
loopne
and
iret
out
xchg
fdiv
and
push
lahf
xor
aaa
in
aam
andb
xor
int3
xchg
inc
stc
inc
test
adc
xorl
hlt
jg
pop
pushf
test
ret
test
fmull
or
adc
mov
pop
xchg
jle
inc
sub
cltd
push
ljmp
shr
xor
pop
and
inc
xor
pop
outsb
scas
add
jecxz
xchg
and
fsubr
sarl
sub
cmp
leave
push
xchg
addr16
mov
lock
jbe
mov
test
jae
mov
in
push
push
dec
jno
cmc
loop
sbb
outsl
fsts
ljmp
fs
push
xchg
jb
jmp
pushf
or
jge
and
xor
and
ret
lock
mov
sub
popa
mov
and
fadds
fdiv
inc
lahf
and
clc
ds
test
mov
testl
enter
jl
negb
jno
and
xchg
cli
repnz
sahf
mov
test
jns
mov
push
jle
cltd
aaa
arpl
jne
fwait
mov
cld
out
dec
rcrb
shl
fcmovnb
arpl
test
xor
sahf
outsl
or
in
outsl
movnti
mov
push
fsub
jno
add
icebp
xchg
int
adc
xor
adc
test
dec
add
ljmp
iret
pop
cltd
mov
mov
jo
sbb
test
bound
rclb
out
sbb
mov
push
add
push
push
add
mov
shrb
jnp
cs
sbb
daa
xor
out
or
lret
add
outsl
fidivrs
xor
imull
je
pop
out
in
pop
nop
mov
aad
sbb
call
and
xor
mov
mov
shlb
cmp
adc
adc
insl
sbb
lcall
dec
imul
adc
mov
dec
xchg
sub
leave
dec
mov
fsubrs
jno
mov
icebp
xchg
jo
sbb
inc
int
fistps
cmp
pop
in
cmpsb
mov
sbb
push
pop
jno
mov
scas
pop
orb
popa
hlt
pop
adc
push
ss
stos
movsb
adc
cmp
push
adc
mov
pop
mov
xor
out
ds
mov
lcall
cmpsl
aam
pop
pop
or
pop
jno
inc
stos
jmp
jge
cmpb
repz
arpl
mov
and
jno
shlb
aad
jg
add
pop
sahf
pop
add
nop
mov
add
cmp
lret
mov
lahf
jne
pop
mov
pop
loope
dec
inc
ffreep
mov
data16
push
cmp
repz
enter
mov
mov
jo
and
xor
cmpsb
ret
mov
loopne
sbb
enter
xchg
hlt
cmp
push
xorl
stc
testl
daa
dec
push
mov
popa
cltd
ds
jbe
jp
in
push
cmpb
fsubl
pop
sbb
pop
mov
outsb
insb
pop
xor
xlat
adc
mov
jp
add
mov
in
add
cmp
pop
add
pop
xor
xchg
fs
push
sti
out
cmp
mov
rolb
pushfw
ljmp
mov
sub
mov
jnp
enter
push
inc
push
add
push
xchg
pop
testb
cmp
cli
and
and
lahf
pop
ja
inc
test
xor
dec
mov
add
sbb
inc
fists
sbb
mov
mov
xlat
subb
popa
sbb
stc
hlt
xlat
in
stos
cli
adc
sbb
cld
adc
outsb
xchg
dec
cmpb
inc
das
pop
pop
dec
pop
fwait
lods
cmpsb
stos
dec
fucom
mov
aaa
jmp
loop
pop
enter
xor
cmpsb
cmpsl
xor
std
jbe
push
addr16
push
sbb
mov
push
dec
test
andb
ja
pop
mov
sahf
dec
lea
sti
fdivrs
mov
das
xchg
inc
xchg
cmp
sub
xchg
inc
add
add
inc
push
adc
xor
dec
mov
pop
lret
adc
pop
xchg
inc
jp
cli
loopne
cmp
outsl
mov
test
push
xchg
jnp
rorb
out
stos
mov
lods
jl
int3
sub
inc
adc
in
push
sub
xchg
adc
pop
add
lahf
sbb
hlt
mov
test
dec
jne
jmp
mov
scas
pop
pusha
adc
mov
inc
mov
out
or
sbb
or
pop
js
aas
sub
out
sub
push
mov
mov
scas
stc
stos
pop
hlt
xchg
test
push
enter
les
rclb
add
lock
enter
pop
cmp
xor
push
popa
les
fstpt
pop
add
scas
popf
fadds
inc
jmp
inc
in
cs
insb
shlb
sbb
clc
xchg
add
shll
cmpsl
negl
xchg
pop
fsts
imul
dec
data16
jno
cltd
jnp
loop
mov
inc
or
inc
sub
sub
push
cmc
or
sub
pop
sub
loop
imul
or
in
xchg
mov
cmpl
cwtl
nop
std
in
xchg
push
and
les
loopne
inc
push
leave
push
ljmp
mov
out
adc
aas
push
push
or
ljmp
rclb
jo
hlt
push
insb
out
adc
sbbl
xor
push
hlt
xchg
jbe
pop
xor
lods
leave
add
add
push
fisubs
out
pop
push
push
push
push
mov
cmp
test
cld
jo
adc
dec
imul
out
hlt
sub
movsb
insl
test
push
inc
and
or
and
lahf
sbb
push
jb
stos
mov
cmp
testb
lret
xchg
jne
gs
cmp
inc
int
ror
or
mov
cmpsb
inc
fiaddl
lcall
lods
cmpsb
inc
xor
jmp
into
icebp
outsl
iret
sbb
ret
pop
push
mov
cmp
xor
int3
mov
mov
popf
int
or
push
push
int3
ja
call
adcl
jo
fcmovnbe
inc
dec
in
stos
xor
jge
pop
jnp
xchg
lods
nop
bound
gs
out
xchg
iret
jns
pop
loope
sub
push
pop
pop
gs
sbb
dec
stos
into
ja
and
add
jbe
fnstcw
test
rolb
jp
in
dec
adc
inc
fisubrl
cmc
push
and
and
mov
pop
jecxz
movntps
mov
adc
mov
pop
mov
pushf
xchg
xor
cmpsl
inc
sbb
jnp
cmp
pushf
out
movsl
fists
loopne
fs
jecxz
xchg
subl
hlt
icebp
stos
int
loope
jecxz
mov
imul
xor
dec
push
jl
mov
enter
fwait
hlt
daa
movhps
aam
test
outsb
and
ror
daa
repnz
jg
or
loopne
rorb
insb
dec
xor
dec
or
popa
movsl
dec
ret
movsb
pushl
imul
das
movsl
add
adc
sbb
lock
adc
xor
inc
adc
shlb
daa
outsl
fstps
ja
pop
scas
shrb
mov
ja
and
outsl
jle
sar
addr16
xchg
cli
sahf
mov
ficomps
push
aas
xchg
xchg
nop
lock
rclb
loop
xchg
lea
inc
mov
adc
jle
outsl
movsl
outsl
ja
fwait
cltd
pop
mov
ja
sub
cmc
mov
push
push
add
das
xor
xor
cli
cmp
popa
xchg
xor
lret
dec
pop
sub
inc
mov
jmp
adc
out
int3
into
and
sti
sub
jle
inc
xchg
int
out
mov
sbb
aam
pop
xchg
jnp
icebp
cmp
mov
aas
push
mov
sbb
fucomp
mov
pop
push
pop
push
mov
popa
pusha
bound
movsb
jmp
jmp
je
ret
dec
arpl
jge
cmp
loop
icebp
lea
sub
or
loope
aas
vpcmpgtw
rorb
mov
or
fcoml
dec
ret
xor
jae
xchg
sub
jp
pushf
clc
in
pop
jl
push
insl
sbb
cmp
aad
xor
push
and
mov
leave
lds
inc
and
add
push
insb
jne
aaa
je
pop
in
xchg
push
dec
insl
nop
lret
push
into
cli
jnp
push
out
jbe
sbb
loop
sbb
jns
dec
lahf
loopne
adc
fcmovnu
adc
dec
cmp
add
ret
mov
test
int
div
cltd
test
in
mov
mov
pusha
pop
mov
xchg
jl
dec
sbb
icebp
ja
pop
xchg
sbb
add
testb
jns
jmp
mov
sub
loopne
mov
movsb
test
pushf
fistpl
in
leave
inc
add
sub
sahf
lret
and
push
adc
pusha
fmul
mov
cmp
dec
dec
das
and
inc
inc
aad
xchg
push
xor
das
add
cmpsl
push
cmp
add
fists
add
je
pop
addr16
repz
cld
mov
pop
push
xor
outsl
push
mov
jge
stc
pop
inc
cmp
repz
add
xchg
addl
jo
imul
jnp
iret
fucomp
pop
in
and
in
movsb
ss
xchg
aaa
mov
mov
xlat
fld
push
repz
cmp
jnp
cli
pop
pop
lahf
xchg
mov
mov
mov
testl
cmp
adc
pop
imul
mov
push
mov
and
mov
andl
repz
insb
push
movsb
inc
mov
out
mov
jne
mov
test
pop
push
in
call
sbb
fistpl
adc
xorb
das
arpl
test
push
mov
mov
nop
xchg
test
bound
xor
in
dec
jns
lahf
dec
std
fsubrs
sbb
push
enter
mov
clc
sahf
or
std
scas
adc
cli
leave
adc
cmp
inc
inc
jbe
movsb
ljmp
mov
enter
fstps
sub
imul
lods
xlat
cmpsl
rorb
js
push
movsl
shlb
movsl
and
ret
xor
jo
sub
cltd
adc
cli
insb
imul
mov
cltd
push
cmp
push
and
inc
pop
pop
add
out
jg
out
dec
jno
push
stos
loope
add
cld
sbb
pop
das
adc
lret
in
into
in
movsb
fcoms
stos
repnz
mov
mov
sbb
sub
fsubr
add
out
inc
pop
ljmp
divl
xor
fcompl
and
std
cld
jg
dec
ss
push
outsb
mov
fld
xor
test
adc
stc
fsub
es
int
mov
push
test
fwait
testl
or
lahf
in
mov
push
mov
pushf
fldl
pop
mov
lret
mov
sub
dec
dec
daa
mov
out
popl
out
scas
rclb
test
xor
sahf
sub
xchg
jmp
ret
and
pop
mov
xchg
icebp
ret
pop
add
or
daa
mov
mov
mov
sub
and
inc
pop
rcrl
fcoml
insb
ret
ret
push
ficompl
add
enter
lea
pop
pop
and
fs
push
mov
add
les
mov
cmp
cld
push
xchg
arpl
js
and
mov
mov
cmc
lock
dec
call
jbe
sub
test
cli
jl
mov
out
adc
push
call
push
or
cmp
iret
pop
and
jno
jp
xchg
xor
cmp
push
and
adc
nop
movsl
add
sbb
popa
xlat
xor
push
clc
push
repnz
jle
pop
into
scas
cmpsl
scas
xchg
scas
insl
lods
adc
aas
ficoml
call
dec
idivl
imul
std
mov
ss
lret
and
clc
push
loope,pn
push
ret
xor
mov
pop
sub
dec
mov
dec
push
popa
jmp
mov
mov
divb
arpl
jg
cmc
notl
call
test
insl
add
ret
inc
iret
sub
rorb
sub
out
loope
pop
fdivrs
cmp
xor
repz
sbb
popaw
cmp
push
adc
fidivs
imul
test
dec
xor
mov
dec
aas
rcl
ficoml
in
cmp
jo
push
adc
push
bound
rcrl
dec
repz
in
loopne
int3
out
lret
push
sub
mov
icebp
xor
xchg
rcrl
js
mov
mov
xor
roll
mov
out
and
mov
lret
fdivrl
mov
or
out
sti
repnz
loop
or
das
popa
pop
pop
jl
mov
and
and
aaa
fs
jecxz
mov
mov
test
inc
sub
int3
repnz
mov
mov
jo
sbb
repnz
mov
dec
xor
jbe
cmp
mov
and
pop
pop
addr16
fisubrl
rorb
adc
jno
pushl
mov
fists
sbbb
ljmp
cwtl
sub
shlb
mov
jo
out
hlt
jnp
add
sub
insb
pop
pop
sahf
cld
push
ljmp
movsl
mov
in
movsl
adcb
pop
fwait
xor
sub
jbe
int
adc
sbb
xchg
dec
cmp
popa
pop
mov
mov
mov
fldt
fdivrs
xorl
push
pusha
jno
js
fs
push
cs
int3
inc
ret
ljmp
push
je
cmpsl
xchg
xchg
mov
xchg
cmpsb
mov
cmpsb
outsl
sbb
mov
inc
mov
push
and
mov
fadd
fmuls
or
mov
loop
lock
inc
imul
lcall
push
mov
jbe
ret
xchg
and
nop
lahf
cli
xchg
out
add
xlat
push
dec
xor
dec
int
adc
push
mov
jbe
adc
pop
popa
mov
dec
cmp
jl
add
xchg
mov
inc
pop
xor
lahf
cmp
mov
loope
add
fs
into
mov
add
mov
jg
and
lock
ret
movsb
mov
push
xchg
fsubrl
loope
out
mov
pop
jecxz
xchg
js
add
je
inc
fimull
jl,pn
les
mov
push
xlat
test
jbe
jbe
inc
insb
add
loop
leave
inc
cmp
adc
push
test
xchg
push
loope
sbb
add
dec
xlat
loope
fimull
pop
cli
adc
push
jne
pushf
xchg
jbe
adc
mov
mov
mov
ret
jne
inc
or
scas
dec
mov
add
cmp
mov
sbb
cltd
std
mov
flds
mov
mov
push
aam
loope
decb
pop
xchg
inc
ljmp
lods
cs
inc
mov
pusha
lret
jl
mov
xchg
or
push
sbb
scas
dec
sbb
sbb
sbb
xlat
dec
mov
xor
repz
test
orps
loop
ret
xchg
xchg
add
in
sub
fisubrl
leave
or
mov
mov
sbb
mov
lcall
das
aad
add
js
push
bound
mov
mov
popa
fsubs
push
ja
movsl
loopne
test
cmp
jb
daa
mov
in
lds
cmp
xchg
cmp
xor
out
lods
test
cmpsl
outsb
lods
xlat
lock
dec
out
mov
popl
imul
push
lods
gs
decl
cmpl
stc
fistpl
sub
data16
fisubl
test
add
in
mov
clc
cmpsb
mov
xlat
cmc
xor
into
adcb
insl
push
pop
adc
jno
xchg
and
test
add
pop
imul
inc
ds
out
mov
outsb
enter
std
xchg
dec
mov
je
jo
jl
add
mov
addr16
int
ss
insb
mov
or
inc
adcl
sub
inc
jecxz
push
cli
jmp
jmp
mov
cli
cld
sbb
fsubr
insl
dec
pop
mov
adc
stos
cltd
or
pop
mov
fucom
ror
cmp
cmp
ljmp
push
inc
push
and
shrd
lret
dec
hlt
shrb
fstp
sub
xchg
in
inc
pop
jns
xchg
pop
test
ret
fcoms
push
mov
negb
ret
loope
add
push
add
sahf
shrl
push
cs
rcrl
shll
xchg
imul
dec
inc
and
push
fnsave
jnp
sahf
add
sbb
in
icebp
push
push
xchg
or
mov
adc
pop
mov
and
pop
popa
pop
mov
sub
sbb
iret
add
lret
and
pusha
or
popl
fsubrl
lahf
push
or
mov
js
sbb
adc
hlt
cmc
mov
xor
rcl
pop
fs
cmc
mov
inc
leave
mov
xor
mov
sub
dec
and
cli
shlb
sub
lock
test
cmpsl
pop
imul
xor
jp
inc
stos
xchg
dec
xor
and
scas
outsb
popa
push
pop
or
xchg
add
cmp
xchg
fs
cmp
loopne
adc
lea
sbb
mov
push
push
sahf
jle
pop
jnp
adc
ss
mov
pop
loope
loop
clc
mov
jecxz
jne
sti
std
in
stc
sbb
sub
or
cmpsb
mov
dec
das
pop
sub
jb
call
ror
bound
shl
or
inc
or
pushf
fisubl
bound
jbe
jecxz
mov
outsl
mov
sbb
and
cmpsb
xchg
mov
dec
rorb
fimull
rclb
or
dec
test
aad
jle
fcompl
test
pop
inc
call
call
or
fdivrl
jb
mov
cmp
ret
pop
jecxz
sti
lods
sub
and
and
jo
leave
addr16
fiadds
lret
pop
fsubrs
sbb
mov
sbb
aaa
das
rolb
cmp
push
out
loop
jle
mov
and
add
jb
add
test
xor
dec
es
push
popa
push
mov
cld
jg
mov
lea
fsts
mov
mov
sub
sbb
ljmp
inc
ds
jns
push
stos
adcl
adc
call
enter
jae
mov
jl
orl
push
insl
sub
ret
add
or
cmp
xor
fmul
jb
dec
out
mov
jl
pop
add
aam
xchg
pop
lret
and
lods
cmp
and
adc
scas
dec
jmp
mov
lock
inc
jo
outsl
dec
dec
adc
dec
call
in
test
xor
mov
repnz
shll
test
in
roll
popa
push
dec
pop
js
jo
inc
mov
mov
mov
mov
cmp
out
inc
fs
and
pop
ds
mov
cwtl
mov
mov
pop
jmp
mov
pop
xchg
mov
adc
imul
fisubrl
inc
cmc
jp
mov
xchg
hlt
sub
dec
mov
addb
sbb
das
rcl
sub
lea
xchg
enter
and
scas
fwait
adc
push
push
push
xchg
xlat
stos
sbbb
mov
and
bnd
int3
pop
repnz
mov
add
popa
adc
sbb
fucomi
lret
jae
out
add
xor
cmpb
fimull
xchg
mov
loope
dec
mov
and
les
mov
pop
aas
and
jbe
sbb
loop
sub
lret
xor
sbb
pop
cs
pushf
aaa
sbb
sbb
into
fimuls
in
mov
stc
sub
leave
xchg
ja
cmp
clc
fcom
mov
fcoml
in
cmp
loope
push
popf
aaa
add
jmp
push
cmpsl
mov
fcmovnu
pop
jne
pop
push
mov
cld
and
pusha
and
fimull
push
aam
push
repz
xchg
inc
adc
sub
jmp
andb
iret
sbb
dec
insb
pop
shlb
lods
fbld
xchg
dec
mov
xchg
gs
in
mov
pop
adc
scas
and
mov
mov
repz
movsl
sbb
mov
cwtl
cmp
xlat
xchg
into
loope
dec
aad
out
adc
jbe
je
inc
addr16
in
xor
mulb
mov
mov
push
or
cmpsb
mul
arpl
clc
cmpsb
out
jbe
jno
popa
cmp
scas
jp
jne
cld
xchg
and
cltd
cmp
out
es
jmp
jge
rolb
arpl
add
push
mov
push
movsb
xor
repz
add
xchg
out
xchg
pop
sub
or
int3
pushf
sub
fisubrl
aad
add
ljmp
popa
cmp
add
pop
rcrl
xchg
sbb
mov
ror
xchg
mov
sub
pop
lds
sbb
pop
in
sbb
cmp
aad
fucomi
aas
movsb
xor
ljmp
ret
mov
pop
mov
dec
clc
pop
enter
faddl
ljmp
mov
push
sbb
in
je
cmp
mov
fisubrl
sub
int
rcr
int3
pop
adc
dec
in
jp
cmp
mov
popf
mov
test
je
xchg
enter
jg
cmp
inc
loop
dec
mov
addr16
lret
add
sub
mov
sbb
inc
in
adc
jbe
bound
and
repnz
adc
cmp
xchg
mov
into
jns
push
push
sub
sbb
push
shlb
mov
xchg
mov
jecxz,pn
lea
jp
jp
xlat
pop
shlb
pushf
inc
push
in
adc
xchg
mov
out
int3
sbb
mov
xor
push
xor
dec
add
sti
imul
insl
cs
pusha
loop
loop
xlat
in
clc
sbb
popa
or
dec
and
adc
mov
dec
sti
and
in
add
sbb
mov
and
and
int3
call
mov
fwait
inc
cmc
in
or
addl
adc
sub
imul
xchg
adc
xor
fdivrs
lea
in
fisubrs
hlt
dec
xor
test
mov
cmp
mov
xchg
jge
pop
mov
xor
xor
mov
adc
pop
mov
xchg
jae
pop
imul
mov
push
lds
inc
or
xlat
repz
std
sub
or
out
inc
push
repz
loope
jae
push
mov
fisubl
mov
adc
mov
cmovns
xchg
pop
dec
push
cs
pop
adc
and
scas
ds
out
pop
pop
jle
adc
mov
xchg
mov
xor
dec
pop
into
orl
mov
pop
dec
and
shlb
outsb
mov
xchg
push
mov
aas
jmp
pop
xor
mov
xchg
lret
and
push
mov
jg
inc
jno
jbe
dec
mov
push
and
lret
xchg
mov
lcall
aam
mov
fs
adc
sub
bound
xchg
jp
xchg
fwait
add
imul
xchg
je
aad
cmp
sub
sub
andl
cmp
add
scas
stos
ds
sahf
insb
out
ss
jmp
pushf
dec
popa
scas
arpl
and
push
into
cmc
imul
push
repz
push
adc
pushf
pusha
cmp
fisttps
fiaddl
pop
lcall
push
in
fisubs
inc
lods
add
pop
mov
xchg
sbb
mov
mov
popf
xor
pop
cmpsb
mov
pop
pushf
sbb
push
adcb
test
ret
pop
aaa
rorb
jge
fsubrs
and
movsl
out
inc
lock
maskmovq
idivl
pop
pop
cmp
cmpsl
xor
icebp
mov
sbb
sbb
or
fcoml
call
cmp
mov
sub
fisubs
jg
lods
xor
test
das
enter
dec
jae
or
pop
out
fstpl
jae
inc
mov
sbb
mov
add
mov
bound
gs
cltd
imul
jae
push
arpl
fs
scas
arpl
inc
xlat
arpl
lcall
scas
ret
push
push
push
lret
cmp
cltd
sbb
cmpsl
mov
mov
out
loopne
insw
dec
mov
loopne
xchg
lock
mov
inc
fbstp
ss
lods
jp
loope
js
sub
mov
test
pop
subb
faddp
and
sbb
push
in
jns
fistpl
sub
stos
imul
inc
sbb
lock
mov
add
cmp
call
roll
mov
push
pop
shrb
ds
mov
loopne
fistps
cmp
cmp
in
iret
inc
mov
push
pop
mov
pop
pop
in
sbb
lahf
lret
lcall
xor
push
subb
xchg
loop
pusha
out
or
cmc
clc
xchg
cmp
adc
and
mov
xor
jg
fcmovbe
cmp
add
xchg
insl
xchg
into
mov
insb
sub
scas
push
leave
add
and
adc
cmp
dec
outsl
add
sub
mov
mov
mov
xor
or
lret
xchg
adc
mov
and
jl
test
std
inc
cmpsl
and
dec
mov
scas
rolb
pop
pop
mov
xchg
push
and
sub
ret
push
ljmp
inc
xor
lcall
lds
stos
gs
scas
cmp
addl
sti
fstps
ds
cmpsb
mov
mov
scas
js
add
and
sub
mov
push
sbb
adc
icebp
aas
ds
dec
or
xor
mov
mov
xchg
inc
add
inc
inc
mov
pop
inc
ja
jmp
repnz
out
loopne
sar
in
sbb
pop
mov
inc
jne
insb
aam
mov
es
addr16
pop
ljmpw
cmp
lods
mov
jecxz
jl
mov
dec
sbb
mov
dec
cli
movsb
mov
dec
xor
sti
mov
dec
jnp
sub
enter
jl
inc
fdivr
mov
mov
int3
xchg
lcall
scas
leave
int3
lods
jnp
mov
lea
mov
sti
adc
add
or
pop
pop
shll
mov
lcall
add
lea
in
mov
push
test
sub
aas
sbb
cwtl
add
cmp
cli
or
cli
call
mov
dec
mov
sti
push
inc
test
adc
bound
sbb
es
idiv
sbb
mov
movsb
popa
ret
inc
punpckhdq
push
iret
int
mov
andb
sbbb
jmp
ror
pop
xchg
mov
xchg
cmp
mov
stos
jg
jp
shlb
sub
cld
push
xchg
pop
add
in
aam
mov
xchg
cltd
aaa
and
adc
pop
mov
mov
jne
jno
mov
repnz
imul
out
add
dec
dec
fsubp
jmp
sti
divb
push
add
cli
lret
adc
stc
lret
cwtl
loope
sub
test
or
or
jmp
in
insb
mov
jmp
push
lcall
jecxz
mov
scas
mov
push
out
mov
gs
test
add
nop
inc
jp
addr16
aad
inc
mov
push
lds
in
cmpsl
and
pushl
push
fcom
bound
pop
int
mov
cmpsb
int
push
sbb
jl
cmp
shl
pop
push
roll
and
adc
jge
movsb
ja
xor
gs
and
lods
push
push
or
pop
and
dec
mov
mov
rclb
jle
push
xchg
fs
bnd
arpl
dec
adc
out
lock
enter
ret
ljmp
add
and
cwtl
xchg
push
sub
rolb
stc
xor
push
inc
inc
jp
hlt
je
dec
ja
stc
push
cmc
xchg
sti
rol
movb
dec
jmp
sbb
jno
das
adc
aad
xchg
lds
rclb
addr16
aaa
mov
scas
sbb
sub
ret
das
sbb
mov
inc
push
pushf
mov
test
cmpsl
cmp
mov
push
test
sub
inc
sbbb
adc
mov
enter
icebp
dec
dec
shl
dec
repz
js
add
scas
movsl
xlat
icebp
popf
mov
mov
jns
push
in
out
shlb
cld
inc
adc
and
adcb
insb
mov
sahf
dec
nop
loopne
dec
mov
mov
mov
outsl
xlat
stos
int
lock
lea
mov
push
loopne
inc
mov
pushf
adc
imul
xchg
sbb
fidivs
push
mov
mov
sbb
xor
in
xor
mov
in
lods
gs
jecxz
jl
data16
je
mov
xchg
lods
test
cmp
aaa
jb
shl
mov
and
leave
inc
sub
insb
fwait
pop
xorl
add
in
push
dec
arpl
jne
nop
cmp
cmc
cmpsl
shr
add
hlt
inc
shlb
leave
out
mov
cld
jmp
push
dec
inc
loopne
stos
mov
adc
mov
cltd
cs
fisttpll
nop
in
jns
mov
or
add
clc
cltd
jmp
dec
sbb
inc
sub
or
into
mov
je
jp
mov
cld
cmp
xor
fcompl
imul
inc
aad
xor
hlt
fbld
jo
lret
cmp
mov
mov
popf
jg
mov
loop
scas
or
andb
test
cmpsb
add
loopne
push
or
cwtl
dec
test
add
in
mov
push
fmuls
mov
sti
mov
push
loopne
adc
fst
pop
insl
mov
aas
adc
dec
loopne
je
or
cmp
mov
xor
clc
dec
ficomps
sub
stc
stos
cwtl
lea
lods
jo
icebp
mov
pop
xchg
movsl
hlt
push
insb
insb
movsb
ljmp
mov
orps
inc
scas
aaa
mov
cmpsl
insl
jp
sbb
mov
lea
cs
adc
xor
push
mov
or
shlb
scas
add
cmp
jno
pop
cs
outsb
dec
and
push
mov
out
std
sub
pop
lods
dec
cs
out
mov
push
xor
or
xor
add
test
push
jbe
xchg
and
clc
or
inc
hlt
sbb
fnclex
fnsave
dec
shl
dec
mov
popa
sti
movsb
insb
arpl
and
push
xor
rcll
lock
and
push
jae
pop
gs
cmpb
xlat
lret
cmpsl
dec
or
xor
cld
fdiv
sub
mov
orps
pop
enter
push
mov
xor
and
mov
fwait
and
iret
ficoml
mov
and
shrb
inc
popf
jno
sbb
into
scas
pop
pop
and
ret
or
mov
xor
in
aaa
mov
cmpsb
pop
cmpsl
pop
xor
and
dec
push
jnp
cmp
inc
adc
mov
cmpsl
cmp
jle
mov
add
cmpsl
push
sub
jle
sbb
ljmp
enter
sub
sbb
pop
sahf
and
arpl
fdivs
mov
pop
push
fidivrs
insl
rclb
idiv
rorl
inc
cmc
js
adc
bound
scas
sub
push
ret
jg
nop
sbb
xlat
fsubl
push
stos
lret
mov
add
sahf
call
cmp
or
out
or
and
sbb
repnz
imulb
jbe
sbb
andb
test
pushf
xchg
stos
lahf
shr
ret
jmp
andl
iret
loop
jl
cmp
pop
jg
in
pop
cmp
push
mov
test
mov
fsubr
shlb
and
les
inc
mov
repz
leave
ds
aaa
dec
pop
inc
adc
push
movsb
pop
nop
ret
inc
mov
std
scas
sbb
mov
js
gs
fdivrp
adc
icebp
mov
pop
dec
shll
cmpsb
xchg
test
out
or
das
push
push
adc
xchg
pop
int3
cmp
adc
mov
xor
xchg
pop
push
stos
scas
mov
clc
idivl
in
fs
pop
dec
dec
push
stc
cmc
sar
mov
out
xchg
push
es
sub
pop
jns
ret
jns
mov
mov
cmp
inc
scas
push
aaa
js
or
or
jle
cli
cld
cmp
push
add
aas
sub
push
das
aam
filds
mov
andl
enter
int3
mov
loop
sub
dec
js
xlat
push
popa
inc
add
pop
cmp
roll
repz
and
add
jae
xchg
icebp
scas
jo
adc
lahf
gs
sarb
ljmp
push
cmp
ret
xor
mov
jmp
dec
inc
push
add
scas
add
xchg
out
push
mov
insb
scas
mov
lahf
stc
ds
repz
sbbl
xchg
dec
je
mov
subl
out
dec
cltd
xor
jecxz
xchg
lds
jg
js
push
mov
pop
jg
inc
mov
in
test
inc
push
xor
rorb
sub
push
dec
fdivrl
adc
xor
addr16
cmp
adc
xlat
mov
daa
in
push
cmp
lcall
sub
xor
shrl
bnd
sahf
xlat
sub
dec
mov
shrl
push
lret
jg
sbb
mov
xlat
jno
or
fcompl
fsubrp
xor
mov
and
or
cltd
rcll
dec
push
jne
push
or
push
push
je
push
xlat
fdivl
enter
aas
jmp
jo
hlt
movsl
sbb
mov
dec
dec
mov
push
dec
loop
mov
je
add
sub
icebp
cmpsb
and
stc
insl
sbb
mov
fucomp
lods
clc
sbb
mul
mov
test
ret
push
out
mov
sbb
mov
mov
jle
sbbl
cld
scas
or
test
push
movsl
cmpsl
mov
fldln2
pop
and
hlt
pop
jae
test
in
imul
mov
jp
jmp
sbb
push
je
xor
dec
mov
iret
jecxz
inc
xor
and
jb
add
push
fmull
notb
ljmp
jno
pop
dec
xchg
sub
addr16
addb
add
mov
mov
repnz
push
out
dec
dec
pop
mov
xchg
in
stc
add
xchg
int3
pop
ss
jnp
sbb
push
xchg
xor
ret
mov
dec
mov
je
mov
adc
sti
push
mov
add
mov
pop
lahf
lahf
insb
popa
mov
and
test
lcall
pop
mov
add
fstl
cli
ljmp
mov
xor
push
mov
xchg
clc
sti
pop
mov
mov
fsubl
mov
mov
push
dec
push
jne
and
pop
jmp
mov
pop
lret
jp
mov
pop
jp
bound
jno
sub
insl
cwtl
mov
push
cwtl
cli
adc
movsb
test
popf
or
test
jl
js
jno
mov
jnp
iret
pop
mov
sub
inc
into
sub
aaa
xchg
mov
push
cmp
fs
rclb
sub
push
rcrb
adc
mov
push
inc
pop
jae
cli
ds
xchg
pop
pop
imul
cmp
fisubrs
fld
sub
fcoml
mov
add
stos
lret
bound
push
out
sahf
xor
and
inc
jg
daa
inc
mov
inc
or
fisubl
in
jmp
cmpsl
dec
data16
mov
scas
sti
fidivs
aam
fimull
mov
insl
cli
sbb
add
inc
xor
aad
cmp
cmpsb
inc
adc
push
mov
sbb
leave
lahf
or
fwait
mov
sahf
push
pop
add
movsl
call
mov
dec
push
pop
cmp
push
outsb
lock
adc
lret
mov
mov
stos
cmpsb
ret
dec
shrb
xor
flds
popa
and
mov
fdiv
pop
das
int3
dec
inc
dec
push
xchg
scas
jp
les
inc
in
mov
popa
dec
mov
lcall
cmpsl
mov
movsb
mov
lret
jb
rolb
push
icebp
sbb
popf
sbb
fsubrs
sbb
dec
and
jl
dec
pop
add
jmp
popa
shl
jle
xor
xchg
cmpsb
add
icebp
jl
clc
cmp
sti
addr16
into
xchg
sub
xchg
mov
jb
adc
lea
mov
loopne
inc
push
ret
cmp
fnstenv
mov
push
in
mov
nop
mov
gs
icebp
mov
mov
jne,pt
inc
pop
sbb
inc
jae
jmp
out
test
aas
cmp
cmp
mov
sub
fisttpl
jp
inc
xor
jge
pusha
ljmp
cmp
cmp
out
ss
aaa
cwtl
pop
xchg
push
rcrl
addr16
lods
fstl
mov
lahf
fnstcw
ljmp
out
pop
outsl
dec
nopl
inc
sub
nop
or
xor
sahf
stos
fs
add
xchg
icebp
rcrl
jb
or
aad
pop
adc
cmpsl
in
push
stos
shl
sbb
adc
mov
fsubs
fstpl
insb
adc
xor
add
call
leave
mov
xchg
stc
or
pop
fwait
andb
sbb
and
pop
scas
fdivp
repnz
push
stos
arpl
test
or
in
add
rclb
xor
imul
stos
push
scas
lar
add
or
adc
jle
cld
mov
dec
mov
cmp
pop
leave
jae
jg
pushf
jns
xchg
sbb
push
pop
incl
and
xorb
loop
out
and
loopne
push
imul
fwait
inc
into
in
jle
jnp
test
fstps
xor
pop
push
inc
cmp
add
xor
jmp
and
xchg
push
dec
xlat
sbb
pushf
aas
aaa
cmp
jmp
sub
lret
fidivrs
push
sub
sub
inc
inc
cs
jno
inc
sbb
ss
cs
mov
ds
stos
cli
push
xor
js
lcall
andb
mov
mov
xor
imulb
xchg
push
pop
outsl
movlps
dec
jmp
push
fcomps
xor
sub
jle
lahf
push
lods
std
imul
stc
test
or
addr16
outsl
add
cmc
call
mov
cmp
cli
orl
push
repnz
xchg
pop
popf
jo
je
popa
and
roll
mov
pop
dec
into
hlt
mov
cli
scas
movsl
mov
sbb
xor
and
rclb
sbb
pop
mov
pushf
imul
xor
pushf
in
enter
jl
ss
popf
lcall
mov
pop
pop
xchg
popa
xchg
adc
insl
mov
pop
js
ret
mov
xor
cmp
call
in
push
mov
mov
sub
fistpl
fdivrs
movsl
cmp
push
iret
jmp
pop
movsb
fwait
mov
outsl
xor
imulb
jg
mov
lock
jl
mov
in
sarl
lods
and
dec
jns
mov
fwait
xchg
popaw
mov
pop
lods
mov
adc
inc
sub
cltd
popf
push
add
lods
sbb
ja
mov
dec
lret
fisubl
jo
leave
cmp
xchg
xor
outsb
cld
jne
enter
sarb
dec
ds
gs
xor
cmp
push
or
cmc
push
fistl
les
add
dec
xor
fists
and
mov
jp
in
mov
mov
call
es
addb
mov
out
xor
leave
or
in
in
outsl
adc
add
out
mov
fwait
pop
jbe
mov
xchg
sbb
sidtl
ret
xchg
xchg
mov
test
repz
add
bound
or
lret
pop
inc
out
adc
inc
sti
push
dec
jl
inc
jno
cmc
stos
mov
aad
scas
add
mov
cli
pop
imul
push
adc
hlt
stos
jb
out
and
push
jg
shr
movl
push
aam
inc
sbbb
inc
gs
xor
jecxz
sbb
xchg
in
adcl
push
fsubs
mov
movsb
bound
add
shll
sbb
jp
jne
lods
add
addr16
mov
push
cmpsl
xchg
xchg
pushf
iret
adc
xchg
gs
adc
inc
sbb
dec
test
aaa
jo
aaa
xchg
test
mov
add
mov
test
cmpsl
mov
clc
dec
push
ja
sbb
pop
pushf
cmp
sbb
sub
mov
jno
jg
aam
int
dec
adc
add
das
ss
out
ds
mov
int
test
clc
test
out
jecxz
faddl
sti
pop
dec
sub
mov
movl
fmul
mov
iret
int3
jns
addb
pop
add
and
jge
fdivs
lahf
add
arpl
hlt
xor
xchg
mov
and
cmp
imul
out
inc
pop
adc
rcll
in
outsl
xor
sbb
data16
rclb
fwait
call
xlat
bound
testb
stos
imulb
test
mov
jl
cmp
test
mov
jo
lock
adc
inc
ret
jno
jno
mov
or
pop
ret
shrl
jp
inc
xchg
daa
loop
clc
adc
mov
es
fsubp
sbb
ret
jne
push
jge
mov
pop
push
shll
nop
mov
jle
aas
jge
ret
push
lret
std
xchg
adc
fiadds
iret
fisubl
aad
xorps
ret
sbb
sahf
rcr
dec
into
xor
mov
lahf
cmp
cmp
in
jl
dec
push
jne
mov
jge
mov
fisubs
push
insl
scas
push
mov
lds
jns
out
xor
mov
clc
icebp
adcb
sti
jne
popf
push
mov
cmp
lods
jb
pop
mov
pusha
cmp
out
mov
popf
and
push
sub
imul
stc
xchg
movsb
add
iret
cwtl
and
jno
sub
jb
xchg
mov
mov
fcmovne
jae
out
xchg
push
shlb
imul
shll
cltd
cltd
mov
shll
mov
gs
xchg
sub
leave
hlt
lock
in
pop
jbe
xchg
fisttps
arpl
or
push
xor
pop
mov
mov
test
sub
adc
js
les
movsl
mov
ror
loopne
popa
and
mov
enter
xchg
pop
and
cmp
mov
cmpl
and
icebp
mov
icebp
push
jne
xchg
jne
pop
in
add
cmp
mov
les
sbb
ljmp
mov
cli
outsl
loope
cmp
mov
adc
inc
sbb
dec
popf
jno
loope
lret
dec
pusha
adc
push
adc
psubsw
mov
or
xor
adc
aad
jnp
and
mov
cmp
and
mov
clc
jecxz
push
cmp
xchg
or
cmp
fsubrl
mov
push
adcb
adc
add
push
fmull
xchg
cld
push
or
loopne
sbb
les
ret
scas
xchg
pop
or
xor
bndldx
pop
jl
adc
iret
sub
jecxz
mov
in
mov
inc
mov
cmp
inc
cmp
dec
xchg
cltd
push
xor
jmp
jne
fcoms
cmp
xchg
shlb
lods
aad
push
dec
les
mov
out
xor
mov
jae
jl
sahf
xchg
out
sbb
insb
sbb
in
ds
lods
push
dec
sti
mov
push
or
insb
pop
pop
mov
in
cld
movsb
xor
push
mov
popf
adc
fnstsw
aad
add
xlat
repnz
aaa
push
enter
cmp
xchg
sub
sub
std
arpl
sub
mov
dec
lcall
cs
push
add
sbb
into
ficompl
cmpsl
cmp
and
jp
cld
push
xor
add
aas
enter
into
loopne
lcall
out
mov
xchg
pop
orl
mov
xor
mov
cld
inc
loope
and
outsb
adc
cli
mov
pusha
das
out
lret
and
in
inc
repnz
push
or
cltd
dec
scas
sahf
push
insb
inc
or
jno
lcall
xchg
enter
repnz
dec
inc
lret
dec
push
pop
or
cmp
dec
sub
aam
out
xor
add
dec
xor
push
adc
fs
jnp
xchg
jnp
pop
lods
and
mov
dec
push
loope
out
mov
inc
pop
push
pop
imul
movsl
jne
jl
scas
adc
jne
mov
in
sbb
movsb
and
add
dec
cltd
lret
and
sub
jge
outsb
cmp
adc
fdiv
sub
jp
pop
inc
imul
scas
pop
repnz
icebp
cmpb
cmp
pop
scas
sbb
sbb
xor
sub
dec
push
movsl
test
shufps
iret
cli
mov
cmpsl
mov
push
inc
pop
dec
fistps
cli
add
xchg
inc
out
dec
cmpsl
out
leave
mov
pop
aam
shlb
or
call
and
xchg
push
inc
mov
jle
cmp
mov
dec
fmull
xchg
fnstcw
mov
mov
cli
cltd
das
jb
pop
test
lods
dec
stos
add
mov
mov
xlat
stc
mov
sbbb
das
movsl
mov
mov
ljmp
test
fnstcw
cmc
xchg
mov
adcb
outsl
sub
mov
arpl
xor
imul
int3
xor
test
repz
dec
xchg
push
jae
jecxz
adc
pop
xchg
lret
mov
loope
aam
sbb
sub
js
inc
aad
push
push
push
jmp
xchg
outsb
addr16
jge
pop
sub
aad
add
pop
xchg
adc
mov
cmp
add
sub
mov
xor
fistps
dec
scas
jle
mov
jbe
test
test
sub
push
test
iret
or
cs
xchg
clc
sub
or
pop
test
lods
pop
inc
lock
lret
adc
mov
xor
push
andl
test
add
mov
lcall
scas
cltd
bound
repz
popa
lret
pusha
and
sbb
lods
jge
xchg
cmp
stc
movsl
add
mov
scas
pop
and
inc
xor
aad
add
movsb
jae
push
mov
jmp
push
stos
lret
adc
xchg
mov
mov
bound
pop
enter
pusha
dec
or
dec
cwtl
in
roll
jae
je
sti
push
cmp
push
sub
orl
clc
mov
lret
pop
xchg
loop
jnp
movsl
mov
cld
pop
stc
cmpsl
add
mov
jne
lcall
inc
push
dec
in
jmp
es
cwtl
lods
push
xor
pop
ljmp
scas
sbbb
out
mov
fdivrs
nop
fiaddl
rcrb
mov
aad
loope
int
ret
push
adc
adc
inc
xchg
adc
push
mov
je
mov
add
leave
ret
rcrl
cmpsl
mov
inc
or
sbb
out
icebp
xchg
stc
idivl
mov
test
aas
out
data16
insl
ja
dec
loopne
cli
push
adc
dec
pop
xor
jnp
sub
add
push
sbb
out
aas
jb
adc
dec
push
sbb
loope
jno
icebp
fs
or
frstor
jecxz
movsl
mov
xor
mulb
add
mov
shlb
idivl
mov
and
jns
pop
xchg
push
insl
mov
icebp
pop
dec
aad
rorb
cmpsb
push
movsl
dec
lock
std
nopl
cs
push
cmp
xchg
outsb
mov
sti
jge
adc
cltd
push
inc
pop
mov
adc
dec
pop
mov
mov
aaa
mov
sbb
fimuls
or
ror
add
pushf
addb
mov
sti
jae
pop
mov
xor
pop
inc
hlt
add
add
loope
mov
pop
jb
cmp
ret
jmp
jno
jno
mov
push
loope
sub
inc
dec
stos
test
xchg
inc
movsl
inc
and
rcrb
in
sbb
jne
lods
addr16
and
sbb
rolb
cltd
adc
imul
fsts
stc
lea
mov
sub
shrb
jecxz
add
mov
aas
pop
pushf
push
and
sub
inc
insb
popa
scas
out
loope
or
xchg
xchg
gs
mov
xor
fs
sub
sbb
xor
push
pusha
addr16
mov
mov
call
loopne
cmp
adc
jae
mov
cmp
pop
cmp
and
xchg
xor
sbb
push
sub
aam
push
xchg
jl
push
and
sahf
dec
xchg
stos
jae
pop
mov
mov
adc
adc
arpl
or
cmp
repz
mov
mov
fdiv
mov
jp
sbb
mov
scas
cmp
pushf
jecxz
mov
ss
xchg
lcall
bound
insl
movsb
mov
insb
cmpsl
inc
sti
jle
out
lock
jae
inc
push
xor
jnp
stos
jg
add
cwtl
mov
and
mov
cmp
andl
std
cld
ret
xor
ret
dec
mov
int3
shll
mov
lcall
cmp
pop
sbb
or
xchg
clc
adc
testb
out
xor
xor
inc
lret
dec
jecxz
cld
lret
inc
inc
aas
xchg
xor
pop
ja
jmp
push
xchg
mov
loop
cld
sbb
sbb
movsl
es
or
rcll
sub
jne
xchg
les
xchg
out
push
mov
fstpl
or
sub
sbb
aas
add
xlat
outsl
cmc
ja
jmp
test
mov
mov
insl
out
notb
dec
leave
push
add
in
fstpl
mov
adc
repz
arpl
mov
imul
dec
es
mov
mov
cmova
and
ja
inc
add
in
test
iret
cmp
dec
dec
adc
fwait
mov
stos
pop
xchg
dec
mov
jle
xor
mov
ljmp
xchg
push
pop
inc
xor
or
addr16
insl
aam
xchg
hlt
mov
test
aad
test
jnp
mov
lret
add
or
add
jle
btr
jl
jbe
ds
mov
jno
mov
push
js
arpl
or
lods
xchg
jns
dec
sub
cmp
adc
insb
in
nop
or
mov
dec
jg
push
test
jmp
mov
dec
dec
jp
jnp
and
movsl
rcl
ja
xor
and
inc
mov
adc
sub
adc
out
add
repz
pushf
inc
adc
mov
mov
jno
insl
lret
arpl
mov
pop
mov
test
repz
add
lret
movsb
jg
sahf
jp
shll
ficomps
test
push
xchg
aad
pushf
scas
push
pop
movsb
jl
jb
mov
mov
cmc
cli
fucomip
fildl
add
mov
mov
mov
fimuls
or
push
jae
out
adc
imul
or
push
ljmp
sbb
or
xor
aam
int3
or
mov
adc
pop
arpl
or
ret
and
pusha
mov
scas
add
sub
test
sbb
cld
insl
lock
fucomip
sub
shlb
outsb
pusha
mov
int
sbb
sbb
jne
in
mov
push
out
xchg
pop
orb
add
cwtl
or
inc
leave
pop
push
ds
or
aas
lret
cwtl
popf
dec
jae
pop
dec
add
test
adc
mov
fldenv
cli
mov
mov
xchg
scas
std
dec
mov
pop
ljmp
sbb
xor
and
xor
cmpsl
mov
push
out
arpl
push
movsl
repz
mov
jb
cmp
pop
jne
aam
lea
sub
add
jo
cs
xor
xlat
add
rorb
inc
movsl
pushf
sbb
test
lock
fiaddl
add
mov
or
data16
jbe
shrb
mov
mov
xor
pop
pop
inc
movsb
mov
pop
popf
popf
adc
xchg
ret
fdivl
cmpsb
fs
ret
das
repz
mov
pop
xchg
inc
hlt
out
cmp
push
rol
cmpsl
fisubrs
mov
or
pop
addr16
inc
mov
dec
jbe
push
daa
or
sub
jo
push
out
pushf
dec
cmp
dec
jne,pn
mov
orl
and
pop
push
icebp
arpl
lods
lds
add
int3
lods
lcall
sbb
in
sub
cld
sbb
roll
pop
mov
dec
out
jecxz
les
or
scas
mov
xor
or
loop
lahf
iret
xchg
mov
xlat
outsl
mov
das
iret
or
pop
vpunpckhqdq
jge
nop
mov
fidivs
inc
mov
loope
inc
xorl
popf
loopne
pop
sub
test
mov
pop
aas
or
push
mov
cmp
aas
mov
mov
or
stos
and
xor
push
inc
pop
or
mov
pop
adc
xor
out
movsb
cmp
sbbb
movsb
in
fldenv
in
shrl
or
imul
sbb
or
pushf
sbb
jbe
stc
insl
filds
hlt
fldenv
scas
mov
or
push
mov
les
sahf
pop
sbb
call
xor
inc
leave
nop
mov
push
inc
sti
in
mov
arpl
push
in
pop
adc
fldcw
xor
pop
pop
add
aad
xchg
in
dec
pop
dec
sbb
add
xchg
mov
add
inc
lcall
cmp
mov
call
stc
mov
mov
xchg
shrl
pop
xor
jecxz
xor
mov
aaa
test
loopne
or
xor
fsubrl
xchg
xchg
iret
push
arpl
sahf
sbb
push
dec
insb
xor
addr16
dec
addr16
add
and
mov
push
aad
stos
xchg
ds
fs
pushf
inc
dec
mov
mov
dec
mov
cs
fs
fwait
shlb
fnsave
adc
and
push
and
andb
cli
mov
cltd
mov
mov
mov
add
subb
mov
enter
xor
fdivr
call
sar
sub
cmp
dec
insb
pop
ss
mov
inc
lea
mov
into
inc
cmp
jne
jnp
xor
in
jno
lods
addr16
test
pop
sahf
add
lds
adc
pop
sbb
fisubl
les
pop
cmp
test
loope
add
push
ret
xor
and
testb
cwtl
sti
loope
and
xchg
xor
add
les
xchg
pop
mov
mov
dec
xchg
xlat
fs
or
outsb
push
mov
test
test
aad
in
mov
movsl
cmc
dec
jge
mov
mov
xchg
cmp
les
ljmp
out
outsb
pop
fucomip
push
test
sub
in
divb
stos
jno
pushf
nop
and
xchg
enter
inc
jge
clc
lea
das
std
icebp
cwtl
jae
cmp
push
sti
hlt
push
jmp
sbb
loop
lahf
or
cmpsb
jmp
mov
test
iret
jmp
movsl
jecxz
adc
in
xchg
pop
mov
outsl
push
inc
rolb
sbb
hlt
jge
dec
adc
sti
fidivl
inc
enter
jmp
xorb
insb
push
jmp
ds
pop
aad
pop
hlt
and
xchg
jae
fs
pop
fimuls
call
iret
frstor
dec
jmp
insl
dec
pusha
sbbb
inc
lods
push
push
cs
dec
in
cmp
out
sbb
cld
mov
imull
ret
cmp
aaa
mov
inc
fwait
mov
adc
scas
and
and
dec
xlat
gs
xchg
sbb
mov
leave
and
in
push
add
push
shr
and
jbe
or
es
testl
mov
lcall
stos
imul
sbb
add
mov
push
inc
out
aas
popf
jae
pop
mov
aam
rcrl
pop
lods
push
sbb
bound
pop
ja
data16
sbb
aaa
and
mov
pushw
out
xlat
lea
xor
mov
repnz
mov
cmp
fidivs
iret
outsl
xor
pop
rdpmc
xchg
arpl
adc
add
ljmp
loop
subl
je
jb
cmp
sub
xor
add
lea
mov
add
inc
cmpsl
push
sub
fs
push
pop
cs
enter
mov
repz
mov
jle
or
into
jbe
or
dec
sbb
pusha
adc
lcall
mov
push
loop
push
cli
repnz
or
iret
loop
cmc
mov
jbe
push
lods
std
scas
aam
inc
push
cmp
xchg
push
sub
push
das
popa
jmp
jnp
and
push
outsb
sbb
and
mov
bound
xor
mov
and
and
mov
in
jmp
cmp
repnz
mov
jns
sbb
ss
add
rorb
xchg
fisubl
pop
sbb
push
movsl
sbb
mov
xor
cmp
lret
int3
adc
sahf
inc
cli
sahf
xor
stc
imul
hlt
in
sbbb
jae
inc
popa
inc
adc
mov
es
xchg
outsl
or
xor
pusha
pop
orb
rcll
stos
cmp
dec
lret
cmp
dec
jb
lret
es
sbb
push
or
inc
sub
dec
dec
jno
jmp
lret
sahf
decl
and
loop
mov
mov
push
push
setno
xchg
das
stos
addl
push
test
sbb
xor
out
stos
std
pop
mov
lret
sub
cwtl
inc
adc
pop
lea
xor
adc
mov
test
mov
add
lea
mov
call
lea
fsubrl
fs
jo
pusha
repnz
test
ljmp
mov
std
fadds
xchg
xchg
icebp
out
out
gs
jnp
inc
shlb
pop
xchg
imul
mov
cmp
inc
xchg
test
andb
or
fisttpl
mov
dec
notl
andl
mov
cmpsl
dec
fsub
push
fs
jmp
hlt
ja
jne
pusha
inc
xor
loopne
popa
jge
inc
iret
pop
mov
push
jge
aaa
xchg
xchg
pop
enter
out
je
stos
pop
je
lea
mov
mov
scas
push
mov
in
adc
or
scas
lods
gs
lods
xor
lret
cmp
dec
int3
loope
testb
add
jmp
sbbb
testl
ja
push
imul
iret
adc
pop
stos
dec
sub
push
js
sbb
push
jg
rolb
pop
aaa
mov
jg
sbb
mov
fimuls
or
stos
and
dec
or
mov
xchg
lods
add
data16
jno,pt
popa
test
mov
mov
pop
sarl
sbb
stc
arpl
adc
adc
sbb
dec
lcall
jae
lods
push
sub
sti
cltd
loop
xor
out
sub
jp
cmpsb
xlat
jmp
in
mov
lret
je
xchg
mov
sbb
lock
arpl
data16
xor
cmp
add
test
mov
mov
mov
bound
cs
push
adc
in
int
mov
mov
jmp
or
rol
pop
test
mov
dec
mov
sbb
mov
push
out
ds
int
add
add
add
xor
sub
pop
out
sbb
lods
pop
negb
icebp
stc
sarb
xor
inc
test
push
int3
mov
mov
ret
ss
or
cmp
repnz
push
jmp
in
xor
out
popf
jmp
add
xor
push
xchg
push
dec
es
push
out
pop
les
push
icebp
cwtl
lret
rcrb
xor
test
stos
inc
push
add
rcrb
sbb
sarl
mov
jg
push
addr16
push
push
scas
inc
push
addr16
popa
mov
mov
push
jmp
push
jnp
loopne
nop
cltd
sbb
push
mov
adc
cmpl
in
xlat
mov
in
lock
or
xchg
pop
shl
icebp
mov
insb
or
push
stc
or
lea
sbb
push
sbbb
xlat
pusha
scas
jae
std
xor
idivl
stc
mov
pop
add
aad
sub
out
fs
movsb
cmp
clc
inc
mov
dec
into
mov
sti
sub
push
icebp
cmp
lock
sub
mov
scas
push
gs
cli
scas
sar
in
pop
push
xorl
xchg
jb
into
mov
mov
pop
pcmpgtb
xor
insl
mov
sub
adc
jle
aad
xchg
mov
js
lahf
mov
mov
call
leave
cmc
mov
sub
jae
cmpsl
jle
dec
push
jne
js
push
or
push
stc
lock
pop
dec
inc
lret
mov
dec
sub
nop
inc
es
add
xor
mov
inc
daa
pop
clc
push
inc
or
stos
mov
mov
add
jmp
adc
lret
mov
push
push
js
lock
pop
das
sbb
and
add
jge
ret
xchg
lret
sub
xchg
xor
push
pop
push
or
jl
add
pop
outsl
loopne
pop
mov
mov
cmpsb
pop
sbb
inc
push
pop
xor
mov
sub
lcall
adc
sbb
enter
or
push
int3
lods
jno
adc
inc
or
push
imul
add
outsb
sarb
and
push
aaa
movsb
cmp
notb
inc
lods
in
leave
aas
sub
in
pop
mov
dec
fistpl
clc
adc
xchg
out
lods
lea
mov
cmpsl
cmp
addr16
cld
popl
clc
nop
leave
call
cmp
jnp
int3
cwtl
andb
std
test
daa
sbb
cmp
push
mov
scas
cmp
fcmovnb
insb
mov
push
cld
inc
or
sub
cmp
pop
sub
inc
mov
cmpsb
imulb
testb
out
push
lret
icebp
push
jp
movsb
loopne
jge
dec
adc
inc
xchg
adc
sti
xor
xorl
push
sahf
stos
lea
stos
xchg
in
popa
cwtl
pop
je
iret
or
xchg
cwtl
xchg
push
inc
adc
jno
faddl
ret
mov
sahf
jbe
pushf
insl
dec
es
mov
out
shll
pop
and
cmp
and
les
fnstenv
pop
sub
test
jge
dec
ds
int
ret
mov
shlb
inc
mov
ret
shll
test
mov
xlat
mov
fwait
or
jg
jnp
fsubp
xchg
stos
fs
push
mov
mov
xchg
shrb
inc
xchg
cmp
sub
fcoml
imul
sub
mov
shll
fisubs
ljmp
push
adc
out
and
les
fcoml
push
jecxz
sbb
mov
adc
pusha
mov
sub
cs
daa
or
or
mov
sub
icebp
aam
aas
inc
fstp
xchg
int3
xor
stos
jl
dec
fnstcw
jge
mov
addr16
mov
outsb
pushf
jmp
pop
ds
sbb
mov
xor
cmp
sbb
or
repnz
sub
out
pop
push
addb
sar
popf
xor
sub
and
add
movsb
xchg
add
mov
repnz
stos
push
mov
lret
stos
adc
inc
outsb
xor
ja
orl
cmpsl
jmp
jne
in
jb
stc
or
aam
ret
popf
push
pop
fstpt
adc
cmp
pusha
jle
leave
mov
data16
mov
inc
in
icebp
push
adc
or
jecxz
dec
inc
mov
pop
lret
mov
xor
daa
adc
cmc
lods
jmp
leave
lcall
pop
fsubs
dec
inc
dec
xor
lcall
in
xor
dec
inc
push
inc
push
jge
cmp
gs
sbb
add
lahf
test
xchg
iret
repz
repnz
sarl
ret
mov
sbb
jle
das
ss
sbb
lcallw
cmp
inc
jge
mov
test
cmp
mov
add
add
ret
push
rol
imul
rolb
adc
stc
outsl
dec
mov
fldpi
incb
call
inc
loop
push
mov
loope
enter
pop
leave
xchg
adc
rcrb
mov
js
push
leave
stos
inc
fistpll
pushf
add
ljmp
or
or
add
cld
hlt
or
rorb
sarl
out
test
mov
cmc
daa
mov
cmp
mov
push
leave
cmpsb
les
stos
push
jl
das
mov
out
sbb
in
pop
test
sahf
dec
leave
sahf
xchg
jle
sbb
pop
dec
pop
movsb
sub
out
cwtl
lock
out
outsb
xor
xchg
sbb
cmpsl
jne
inc
test
lret
dec
daa
subb
mov
outsl
andl
mov
rorl
in
sbb
dec
sbb
mov
pushf
mov
rorl
adc
test
jno
loop
nop
push
pop
in
nop
cmpsb
filds
sub
inc
movsl
leave
imul
sbb
scas
sub
xor
ret
outsl
add
fs
jno,pt
mov
data16
pop
add
out
das
and
in
mov
jecxz
and
cmpsb
cmp
in
gs
xorb
into
mov
mov
subb
adc
or
push
xchg
outsb
lods
movzbl
or
jp
shl
dec
mov
jo
ja
cmp
stc
inc
stos
mov
cmpsl
orl
xchg
mov
mov
ss
aas
sub
sub
pop
cmp
xlat
call
pop
lock
dec
test
sbb
and
xchg
add
mov
and
subl
ja
add
adc
cmpl
pop
scas
loope
xor
mov
jle
xchg
jb
cltd
xor
sbb
pop
mov
loope
xchg
add
rorb
arpl
pop
xchg
addr16
cli
xchg
mov
hlt
mov
lods
mov
sti
jne
test
movsl
and
mov
pop
std
cli
iret
sarl
dec
jp
sbb
jns
cmp
test
mov
or
cmp
cli
std
and
rcrb
sbb
cwtl
scas
movsb
shl
mov
lcall
inc
add
imul
ljmp
mov
arpl
dec
addr16
in
lock
movsb
or
push
ret
adc
push
clc
sbbl
mov
iret
mov
lock
jmp
and
cmp
pushf
cli
jl
cmpb
fistpl
mov
lahf
sbb
fs
je,pt
adc
mov
adc
mov
hlt
xor
and
or
fadds
mov
cmpsl
shr
adc
loopne
cs
call
sete
push
dec
sub
or
and
dec
and
xorb
pop
mov
mov
xchg
dec
outsb
je
mov
jl
fsin
nop
andl
cwtl
pop
mov
adc
outsb
call
dec
scas
sub
add
sub
lret
push
mov
jg
pop
inc
add
jle
shll
mov
mov
mov
jb,pn
mov
hlt
in
mov
cmp
lods
les
push
cli
xor
je
sbb
dec
stc
cmpsb
mov
call
xor
shll
fwait
cmp
or
into
dec
movsl
cmp
iret
and
lods
testl
dec
lods
push
clc
mov
mov
and
fwait
sub
cwtl
cmp
enter
push
repz
jecxz
mov
sub
fistps
negl
lcall
xchg
test
jmp
xor
xor
out
inc
test
sti
sub
imul
push
xor
xor
xchg
fsts
push
aam
pop
ret
xchg
mov
scas
and
lods
popa
inc
les
inc
sbb
in
xor
idivb
sub
inc
jns
jge
or
vmread
sbb
xor
xor
pop
xor
test
mov
js
clc
push
cmp
rcll
lods
bound
pop
insb
xchg
lock
push
les
std
cli
fdivr
imul
out
xchg
mov
xchg
jbe
pop
jno
cmp
daa
mov
push
or
mov
cmp
dec
fcmovu
adc
aaa
aaa
xor
ficoms
jmp
pop
out
mov
xor
loop
and
jbe
mov
loope
adcl
xor
xor
mov
loop
jnp
push
push
shrl
sbb
pushf
mov
ret
or
jmp
push
mov
or
mov
mov
sbb
fwait
lret
aas
lods
fstpl
loop
jns
cld
rcr
icebp
ss
pop
pop
cld
sbb
mov
xlat
add
sub
gs
inc
cld
jbe
daa
les
jbe
stos
lods
in
and
pop
xlat
jle
js
mov
stos
push
popf
aad
gs
mov
jmp
xchg
jne
mov
push
nop
rcll
in
add
add
dec
cmp
sahf
incl
jl
cmp
shl
fsts
pop
jne
mov
sbb
lea
sbb
lds
gs
aam
jl
add
inc
add
ret
in
mov
fistpl
sahf
cmpsl
inc
and
fldt
xchg
xchg
ret
loope
jae
or
cwtl
test
mov
push
popa
pop
imul
insb
push
or
mov
inc
push
xchg
jmp
cmp
out
sub
xchg
add
nop
loope
inc
gs
mov
lds
repnz
push
fwait
in
pop
dec
adc
xchg
pop
or
pop
mov
repz
xchg
nop
or
ljmp
fbstp
lods
or
idivb
xor
cmp
insb
jecxz
push
sub
xchg
lock
cmp
in
pusha
adc
xchg
adc
jo
push
pop
in
pushf
add
mov
dec
arpl
xor
leave
ret
leave
add
cld
mov
fs
jne
loopne
sub
cmovno
inc
xor
out
lahf
add
pop
mov
int3
jge
inc
and
imul
daa
mov
outsb
xchg
pop
les
mov
dec
imul
cld
cmp
imul
out
push
rclb
cmp
dec
clc
dec
cmp
int3
and
mov
mov
jno
test
cmc
xchg
adc
aam
jg
jle
int
sub
fsubs
sahf
adc
sbb
xchg
pop
xchg
jnp
bnd
push
out
imul
push
adc
inc
in
jo
cmp
xchg
inc
lahf
mov
sbb
jno
addl
push
mov
mov
scas
sbb
fistpl
fistpll
adc
sbb
dec
push
cmp
push
call
insb
xchg
insb
movb
xor
xchg
shll
jnp
ja
inc
push
xchg
mov
gs
lea
pop
mov
adc
sub
testl
xor
hlt
mov
jnp
jl
inc
mov
lret
test
inc
jecxz
jnp
popf
ja
into
xor
mov
fwait
dec
inc
data16
inc
sub
loopne
xrelease
inc
push
sub
out
inc
stc
es
mov
lods
movsb
mov
test
adc
div
mov
fnstcw
dec
mov
add
scas
adc
es
sbb
sbb
sbb
push
push
call
pop
sub
add
jp
fisttpl
sub
push
push
nop
lret
push
xchg
aas
and
push
stos
pop
jns
dec
fldt
inc
mov
out
add
bound
movsl
xchg
push
mov
rcr
adc
or
scas
cltd
out
stos
adc
adc
loope
pop
repnz
mov
aas
leave
out
je
sub
adcl
jmp
push
or
mov
push
jmp
mov
sub
out
fnstcw
xchg
mov
rclb
dec
cs
lcall
sti
adc
adc
sbb
and
hlt
xchg
in
sbb
ljmp
push
inc
data16
ds
jle
dec
cwtl
add
ljmp
movsb
pushf
rcr
fdivrs
cld
scas
add
inc
mov
test
sbbb
sbb
adc
mov
mov
cli
call
shlb
rcll
add
xchg
lods
loop
jmp
xor
decl
inc
push
adc
aas
pop
or
mov
aas
cmp
xchg
stos
and
call
xor
push
xor
pushf
sub
inc
adc
pop
popa
mov
cmp
inc
aas
das
jle,pt
dec
lods
pop
outsl
in
push
jle
rorb
pop
dec
push
orb
pusha
mov
dec
hlt
cli
jle
adc
cmpsb
xchg
adc
jb
jbe
call
gs
adc
je
push
push
je
jns
lcall
test
xchg
popf
aad
rolb
in
adcb
cmp
adc
pusha
movsb
mov
jmp
shrb
or
jns
jl
xchg
inc
pop
jmp
cmp
xchg
outsb
vphadduwd
add
pop
mov
jnp
out
sub
adc
xor
lds
add
dec
shr
jnp
pmaxsw
push
pushf
push
mov
popf
idiv
ret
cmp
inc
aas
or
pop
ret
push
jb
add
mov
add
dec
daa
adc
add
cld
pop
fmull
lahf
lret
and
jbe
cmp
cmp
out
loope
out
das
cld
mov
and
daa
pop
pop
out
aam
cmp
shll
lret
rcll
movsl
sbb
loop
repnz
pop
hlt
iret
mov
iret
sub
rcrl
scas
mov
dec
and
or
test
lock
leave
fsubrs
aaa
cmp
mov
dec
adc
jecxz
push
add
les
push
pop
repnz
jmp
push
mov
xchg
mov
lcall
test
and
cmpb
mov
bound
adc
xchg
jmp
ds
xlat
add
cmp
stc
shrb
test
or
insl
test
ret
xchg
out
dec
jg
lcall
call
mov
and
jg
push
adcb
xor
adc
sbb
push
outsl
cmp
in
jns
loope
test
inc
jl
inc
in
sub
pop
sbb
jmp
xchg
ror
push
or
mov
movsb
and
outsb
fwait
nop
movsl
aad
js
out
push
push
int
testb
pop
and
xlat
xor
fsubp
or
add
jns
shl
and
sub
sbb
int
imul
pusha
mov
in
push
inc
mov
and
dec
cmp
lret
xor
test
sub
repz
or
popa
mov
scas
dec
add
xchg
fmuls
sbb
mov
jecxz
jl
jp
pushf
xchg
or
push
push
adc
adc
pop
test
push
adc
std
shl
xchg
loopne
mov
add
shlb
sub
faddp
add
mov
inc
pop
mov
pop
aam
push
inc
out
jge
cltd
dec
mov
movb
cmpsl
jl
fisubrl
stos
popl
jbe
pop
cmp
push
jge
clc
adc
pusha
jno
xchg
sbb
pop
or
hlt
mov
xor
mov
cs
sub
mulb
xor
out
lods
les
jmp
ss
repnz
push
sub
scas
pushf
pop
call
adc
adc
jp
lret
scas
test
adcl
das
das
sbb
rorb
or
mov
mov
add
aaa
testb
and
xor
out
xchg
orl
cmp
dec
aas
sub
fistps
fnstenv
in
adc
xor
xchg
push
flds
sbb
mov
subl
fcomp
addr16
in
pop
bnd
gs
repnz
inc
cmp
inc
mov
loop
xchg
push
pop
and
adc
pop
jno
adc
fsts
pop
loope
test
insb
dec
cli
shlb
mov
ja
pop
pop
push
mov
loopne
icebp
daa
iret
scas
or
notl
sbb
scas
bound
mov
xor
std
pop
fimuls
adc
sbb
clc
or
imul
fbstp
jle
out
movsl
into
sbb
pop
inc
cmp
jecxz
loop
rcrl
push
das
jl
mov
xor
mov
add
iret
fistps
fsts
push
fmuls
loop
pop
clc
mov
push
lods
rcr
add
test
mov
fwait
pop
lea
std
jge
sub
cmc
shll
xor
outsl
pop
pop
loop
into
stos
mov
mov
xor
loop
push
sub
jb
hlt
sub
filds
stc
rol
dec
stos
mov
jmp
sbb
leave
mov
out
push
or
push
movsl
adc
lret
mov
testl
adc
mov
mov
jo
jmp
cmc
ret
leave
mov
mov
movsl
mov
or
or
lahf
pusha
mov
ljmp
sbb
in
jae
inc
std
dec
push
xchg
jnp
std
and
jp
pop
push
fisubl
lret
mov
lods
or
mov
dec
cli
pushf
sbb
pop
or
ret
inc
mov
hlt
inc
fidivs
leave
je
popa
xor
sub
xchg
mov
jno
or
cwtl
scas
enter
pop
push
mov
insl
rorb
mov
repnz
sub
cmp
cltd
xor
xchg
sbbl
xlat
xor
add
pop
loop
sub
pop
cmp
dec
adc
testl
lods
xchg
and
jo
bound
les
xchg
js
add
lods
pop
insb
scas
scas
inc
mov
pusha
fs
xchg
dec
add
or
sbb
pop
bound
in
pushf
or
dec
push
stos
cmc
shlb
mov
xchg
xorb
fimuls
mov
lds
nop
ja
clc
in
or
loope
xchg
mov
pop
ss
jae
mov
dec
pusha
icebp
in
dec
push
leave
mov
dec
test
out
push
dec
scas
data16
jl
sub
das
mov
aas
fwait
inc
lock
in
in
insb
mov
in
xor
jle
cmp
adc
mov
mov
pop
fistpl
scas
xchg
jecxz
xchg
inc
iret
sbb
xlat
mov
int3
je
imul
cld
lds
jg
xor
or
mov
test
cld
cli
fisttpll
mov
inc
xor
xchg
pop
insl
fsubl
outsl
xor
ret
or
add
aaa
push
js
lds
mov
xchg
jnp
rorl
xchg
sub
jg
int3
mov
jbe
mov
cmp
xor
xchg
cmc
xchg
shlb
xor
jo
sarb
imul
mov
adc
inc
adc
mov
sub
repnz
icebp
cltd
imul
popa
leave
inc
mov
ljmp
daa
stc
pop
mov
imul
xchg
cmp
xor
sub
arpl
inc
popf
cmp
push
mov
or
into
das
cmp
popf
fbld
xor
ljmp
xchg
pop
inc
jno
push
cmp
sbb
sbb
ss
outsl
lret
ret
mov
stos
push
mov
xor
je
xor
mov
push
dec
adc
mov
lods
xorl
lods
not
test
das
mov
loopne
sub
pop
xchg
inc
xor
xor
push
adc
pusha
mov
lds
int
lock
out
xchg
stc
pand
sub
and
lods
push
fcompl
fcmovnb
out
ljmp
stos
es
xchg
cwtl
push
repnz
and
fistpl
mov
mov
push
dec
dec
mov
popf
lods
push
sub
fists
xchg
sbbb
mov
outsl
cmp
mov
not
out
in
addl
mov
pop
inc
in
pushl
cmpsb
xor
hlt
cmp
cld
lods
lret
sbb
xchg
test
imul
xchg
push
cmp
dec
mov
aaa
sti
addb
jmp
popa
adc
push
lret
loopne
jmp
ss
cmp
in
les
jnp
into
and
inc
divb
lret
mov
sbb
add
cmpsl
mov
mov
adc
fidivs
ds
mov
loope
jmp
dec
pop
cmp
loopne
mov
mov
dec
xchg
mov
dec
inc
fimull
dec
push
std
add
dec
imul
pop
push
xchg
jge
or
push
dec
in
pop
cmp
stc
outsl
sbb
mov
add
les
shrb
data16
sub
sbb
xchg
cmp
lds
inc
insl
add
adc
mov
addl
loop
push
dec
ds
push
ja
push
fsubp
into
xorl
inc
jg
loope
cli
test
aaa
pop
ret
cmp
pop
mov
sub
dec
push
rcrl
mov
sub
popf
out
xchg
aam
and
mov
xchg
dec
mov
in
inc
test
pop
or
out
stos
cmp
mov
cmp
mov
sbb
jo
lahf
and
or
sub
dec
inc
fstpl
pushf
ljmp
pop
movsb
cli
mov
push
data16
mov
into
xor
push
inc
jnp
imull
out
inc
jg
sbb
push
push
into
jecxz
push
lds
cmpsb
xor
dec
or
mull
dec
jmp
dec
and
dec
xor
imul
pop
push
addl
shl
adc
in
test
sub
sub
decb
imul
jge
scas
cmc
push
add
enter
popf
dec
mov
jns
dec
and
sub
in
mov
adc
ljmp
shll
xor
add
aas
mov
sbb
test
push
and
xor
and
movsl
add
mov
push
outsl
mov
pop
mov
stos
lahf
popa
subl
ffreep
or
push
lret
mov
sti
fidivrl
je
rcll
push
out
mov
and
add
das
lea
cmpsl
imul
lock
cltd
cwtl
cld
cmpb
pop
sub
sub
lahf
xor
pop
dec
sbb
sahf
stos
dec
hlt
mov
popa
mov
je
lock
push
dec
sahf
not
sarb
pop
test
lods
push
push
bound
in
mov
loope
test
test
jle
ss
test
lds
add
lcall
pop
mov
jecxz
push
mov
in
adc
rclb
in
xchg
pop
das
outsb
or
ror
or
xor
and
and
adc
mov
mov
xchg
cmpl
mov
test
push
or
mov
cmp
test
jecxz
sbb
clc
test
or
stc
jb
flds
movsl
scas
icebp
jmp
jge
mov
test
je
adc
inc
lea
repz
push
iret
xchg
test
repnz
xor
cli
xchg
add
lcall
jge
push
out
sbb
push
adc
lea
fisubs
std
call
scas
repz
stos
xor
out
gs
sbb
sbb
jmp
call
fsubrp
lret
push
or
push
dec
jge
cmp
les
in
movsl
cmpl
jae
fsubrp
pop
adc
lock
fdivl
adc
out
xchg
clc
push
mov
add
jo
cltd
pushf
mov
leave
push
sahf
nop
shll
push
insb
les
data16
inc
imul
ret
cmp
mov
movb
inc
sti
test
dec
frstor
mov
out
inc
arpl
pop
jl
push
cld
in
sub
sub
push
mov
enter
mov
fwait
sbb
ja
das
addl
hlt
mov
sbb
jns
mov
sub
adc
sbb
mov
xor
adc
push
fmull
mov
in
and
push
xor
jle
sub
mov
mov
dec
cltd
dec
imul
mov
fcompl
mov
inc
cmpsl
ljmp
ja
sub
mov
movsl
sahf
cltd
nop
pop
xchg
inc
push
fbld
pop
mov
aas
jle
sarl
pop
adc
lods
mov
je
mov
popa
insb
dec
arpl
pop
fildl
divb
sub
mov
pusha
cmc
jg
mov
in
leave
adc
cmpsb
cmpsb
mov
enter
out
dec
scas
and
into
movsl
jmp
loopne
or
inc
lods
ror
cltd
les
mov
inc
or
adc
int
jb
pop
jo
repz
and
into
jp
lahf
and
sub
jl
into
dec
scas
sahf
dec
cmp
add
add
in
hlt
adc
sarl
add
cmp
add
test
dec
repnz
negl
hlt
out
mov
iret
inc
out
xchg
stos
andl
popf
sbb
mov
xlat
jl
pop
lret
sbb
lret
pop
scas
shl
imul
insl
inc
scas
fsubrp
cmp
push
adc
xchg
test
or
xchg
cmc
sbb
jl
fiadds
lds
mov
je
repnz
pop
mov
cmp
lcall
loope
cmp
mov
insb
mov
mov
add
pop
ljmp
mov
pop
mov
pop
xor
adcl
addr16
mov
inc
lods
cmc
into
into
jl
sbb
andb
mov
icebp
adc
shlb
outsl
mov
inc
xchg
inc
push
or
dec
and
popf
pop
adcl
mov
leave
dec
pop
jae
aad
icebp
cmpsl
xchg
jno
nop
jmp
in
mov
adc
js
and
add
dec
shrb
lods
cmp
sub
divb
dec
outsb
sub
cwtl
orl
mov
or
data16
add
lret
test
adc
xor
sbb
cli
test
cld
or
mov
cmp
mov
cmp
push
insl
jae
mov
jnp
and
fsubrl
xchg
out
mov
add
inc
js
cmpsl
sbb
loopne
js
adcb
jnp
lock
inc
mov
gs
adc
lret
mov
mov
mov
jecxz
cmp
sub
outsl
add
inc
rorb
dec
lods
pop
loopne
jecxz
push
rolb
inc
bound
daa
dec
scas
outsl
dec
out
push
cmp
leave
shlb
cmp
inc
sbb
movsl
fwait
mov
xchg
pop
lods
sbb
cmp
or
mov
and
in
or
and
int
sub
pop
lahf
xchg
lock
dec
shl
inc
pop
sahf
lcall
push
xlat
push
mov
iret
add
add
adc
xchg
insl
nop
add
push
popl
shlb
lret
push
pop
mov
dec
and
push
in
outsl
cmpsl
dec
test
and
jmp
pop
lret
loope
add
cmp
xchg
xchg
sahf
ljmp
push
add
mov
add
cmp
leave
fmulp
mov
lds
push
aaa
std
nop
or
sub
psubusw
sbb
inc
jbe
or
inc
jmp
dec
int
jnp
shl
stos
add
stc
inc
hlt
mov
leave
aad
xor
mov
shl
mov
jl,pn
ja
rcrl
mov
sbb
or
fcmovb
movsb
mov
lahf
mov
xchg
dec
push
inc
mov
xchg
pop
inc
push
xorl
xor
loop
or
adc
add
fmuls
mov
adc
bound
cltd
xchg
in
pop
out
out
mov
imul
inc
mov
inc
dec
js
or
adc
pusha
cld
xchg
sbb
or
aaa
shll
lret
mov
jmp
repnz
add
aad
icebp
and
scas
mov
lea
dec
leave
mov
subb
aas
push
loope
in
adc
or
pushf
ljmp
adc
mov
pop
push
sub
pushf
or
sbb
push
fwait
sub
or
pop
or
repnz
loopne
mov
pop
cmpsb
mov
imulb
jmp
jb
loopne
jne
loopne
xor
add
push
popf
push
lds
js
push
aas
mov
jnp
cwtl
int3
stc
bound
in
js
insl
shrb
xchg
or
imul
in
xchg
addl
xor
cmp
pop
imul
andl
js
jnp
inc
xchg
lods
sbb
lahf
push
imul
add
test
cld
in
cwtl
push
add
nop
ds
out
je
or
dec
shr
and
test
and
inc
out
lds
std
lods
daa
cmc
jle
push
mov
dec
and
rorb
pushf
or
nop
call
dec
pop
inc
or
mov
xlat
push
pop
add
jp
or
mov
mov
jge
xlat
push
add
push
mov
mov
add
addr16
and
enter
stos
test
clc
call
cmp
cmpsb
adc
xor
add
scas
push
sbb
int3
insl
subl
or
out
jbe
sbbl
pusha
jg
mov
xchg
jmp
xchg
mov
rcl
xchg
xchg
test
cmp
ffree
mov
jno
cmp
das
out
sbb
pushf
test
call
mov
sbbl
or
mov
mov
shufps
test
lcall
xchg
xor
sti
outsb
xor
or
cmp
push
icebp
lret
push
adc
int3
sbb
adc
inc
gs
mov
push
jae
cmp
lds
jne
rcrl
mov
jbe
popf
call
and
movsl
in
cmp
xor
dec
into
mov
mov
mov
xchg
lret
cmc
jno
cmp
mov
and
aaa
cld
aam
sar
leave
xor
jg
bound
into
or
push
jo
mov
mov
xchg
cwtl
xor
fcomi
inc
mov
aad
faddp
jp
bound
jle
xor
fsubrs
lret
sbb
inc
arpl
jnp
and
stc
sbbl
stos
mov
add
dec
push
pop
or
mov
jmp
rorb
lods
mov
and
dec
sbb
sbb
fs
hlt
mov
mov
notl
adc
enter
call
jns
dec
adc
sub
push
call
clc
movsl
sub
je
dec
dec
call
or
lds
cmp
pop
xchg
movsl
loopne
ret
sbb
mov
popa
ret
sahf
and
jmp
lahf
pop
pop
outsb
movsl
mov
push
or
shrl
xchg
sub
icebp
es
gs
jae
aad
fsubrl
or
cmp
cmp
aam
add
aam
inc
xor
in
ret
or
adc
jb
push
outsl
jg
inc
xchg
ret
popa
push
int3
pop
push
test
shrb
in
popf
add
stos
xor
loope
sub
xor
fbstp
and
mov
sub
fildl
das
into
mov
pop
repz
adc
mov
adc
mov
mov
inc
pxor
dec
fnstsw
cltd
and
rorb
push
popf
mov
pop
dec
jbe
shrb
lock
shlb
adc
lret
neg
mov
loope
xorl
daa
sub
or
aam
scas
lods
shlb
xchg
cwtl
xchg
sub
add
pop
lcall
mov
xchg
aas
cmp
sbb
das
push
xchg
cli
popf
adc
mov
jnp
jb
scas
loope
out
add
adc
cltd
xchg
test
jl
stos
jmp
les
inc
addr16
popa
inc
xchg
adcl
cld
and
push
jp
fadd
sub
push
or
xchg
bound
xchg
in
inc
sub
sti
popf
dec
xchg
pop
lahf
jb
scas
fcomps
mov
mov
jno
imul
jbe
js
dec
faddl
mov
repnz
scas
dec
mov
xor
jp
sti
test
clc
add
xchg
test
or
mov
test
scas
std
mov
jg
cmp
hlt
insb
test
push
mov
mull
bswap
push
inc
ljmp
sahf
lahf
nop
mov
clc
adc
dec
popa
cs
sub
adc
arpl
out
cmpl
mov
inc
add
sbb
lahf
xor
xchg
aaa
mov
lret
dec
xor
inc
jne
dec
sbb
sub
mov
fidivs
xchg
jns
je
jmp
pop
lret
insl
insb
repnz
inc
data16
popa
movsb
and
mov
lcall
push
and
mov
loop
adc
push
pusha
sbb
mov
fs
cmp
add
loope
cmp
sbb
push
cwtl
add
fs
rcrb
and
enter
push
and
cwtl
and
lret
repz
mov
lret
data16
ljmp
popa
or
cli
daa
add
and
fnstsw
cmpsl
inc
mov
mov
sbb
xor
sub
dec
cld
movsl
js
ds
cld
sub
mov
pusha
pop
sarl
scas
test
xchg
cmp
sub
inc
pop
loopne
icebp
fcmovb
clc
jle
or
loopne
mov
outsl
imul
add
or
leave
cmp
pop
pushf
leave
insb
xor
add
sbb
adcb
dec
movsb
insl
lods
sbb
mov
into
or
add
dec
sbb
in
adc
ja
in
lret
mov
xor
adc
lods
lods
in
cmpsb
push
fwait
mov
shll
jns
mov
jp
or
out
push
mov
stc
mov
sub
mov
movsb
out
sbb
jae
mov
adcl
cs
sar
adc
out
sbb
movsb
sbbb
iret
mov
movsb
lret
dec
pop
xchg
clc
fsubl
stos
cmp
lcall
mov
bound
icebp
pop
lods
lock
inc
int3
mov
sbb
mov
fs
clc
pop
fsubrl
adc
add
ffreep
les
dec
xlat
or
lcall
pop
fistpll
mov
data16
insb
call
shrb
repnz
cltd
xchg
cmp
int3
jo
xor
orl
push
mov
jb
pop
sbb
imul
in
aad
jae
fwait
mov
xor
sub
jb
rorl
ss
fsub
pushf
mov
jmp
fcmovu
aas
cmc
pop
in
jecxz
adc
push
or
ss
test
dec
inc
into
movsb
lcall
or
test
inc
sahf
sub
loope
mov
xchg
xchg
xchg
imul
movl
flds
add
push
inc
cltd
popf
arpl
and
sbb
ret
adc
cmpb
insl
xchg
add
scas
pop
xor
loop
cld
mov
pop
jmp
nop
pop
out
pop
sti
cmpsl
hlt
xchg
sub
cmc
std
and
ljmp
lock
in
in
mov
jge
nop
insb
pop
test
aam
jle
pop
int
pop
add
mov
das
adc
dec
ljmp
enter
in
mov
hlt
add
enter
es
mov
mov
pop
dec
faddl
xchg
push
adc
and
sub
push
jns
sahf
lds
cwtl
push
sar
sar
sarl
imul
adc
sub
imul
lods
or
push
stc
sbb
outsl
test
jnp
inc
xchg
pop
mov
jmp
imul
jg
popl
loope
lahf
add
adc
mov
push
inc
test
pop
cli
xor
loopne
jmp
push
add
shrl
jb
cs
mov
xchg
dec
stos
shrl
or
add
js
add
movntps
add
out
jmp
mov
ds
shl
add
imull
ret
pusha
push
mov
pop
inc
loopne
sarl
mov
out
inc
jno
xchg
subl
cmp
inc
cmp
fmull
lds
push
dec
dec
flds
call
xchg
sbb
sbb
xorl
sbb
or
int3
arpl
cli
sbb
mov
mov
inc
mov
add
dec
xchg
sbb
lret
lea
negl
sbb
mov
decl
data16
cmp
add
inc
mov
sub
mov
jno
lret
pop
leave
lea
lock
hlt
inc
fldl
xchg
test
fldl
push
or
decl
mov
inc
arpl
mov
loopne
sbb
inc
arpl
or
cmpsb
or
ret
std
ret
arpl
inc
std
movsb
aad
pop
ret
jns
icebp
test
popa
nop
xchg
push
sub
sub
xor
and
lret
pop
push
sub
mov
pop
loope
xchg
mov
mov
sub
iret
sub
std
jecxz
fimull
mov
push
test
dec
pop
inc
int
aaa
xor
popa
lock
pop
xor
dec
dec
ficompl
js
out
xchg
loope
icebp
push
mov
fisubl
xor
filds
and
mov
in
adc
les
rcll
xchg
xchg
jae
pusha
or
mov
iret
lcall
lahf
ret
subb
mov
out
test
pusha
arpl
sub
cmp
pusha
add
add
bound
push
jle
loope,pn
pop
push
lret
loopne
lahf
call
cld
add
lret
sub
mov
imul
cmp
clc
jb
xor
add
sbb
shr
and
push
and
mov
ret
mov
or
adc
mov
add
xlat
in
mov
std
dec
cmp
je
popf
pop
sub
push
jbe
das
dec
insl
movsl
xchg
sbb
dec
repnz
jge
jecxz
shlb
inc
xchg
movsb
lock
jb
cmp
fwait
addr16
out
mov
cmp
cli
popa
test
mov
dec
out
int3
call
in
add
cmp
inc
xor
adc
cmp
lea
fildll
adc
loop
push
jl
add
jns
and
rcrl
in
xchg
ret
negb
xor
out
xor
jbe
adc
mov
sbb
lods
lahf
sbb
cmpsl
mov
lea
mov
call
xchg
inc
pop
stc
mov
sub
aas
fldln2
scas
in
fstpt
les
dec
lods
int3
aaa
out
cmp
inc
pop
mov
gs
movsb
cmp
lods
sub
mov
clc
cld
out
adc
js
pushf
stc
adc
push
aas
push
or
imul
in
mov
stc
out
add
into
jg
pushf
out
insb
xor
jecxz
in
cld
sub
or
xchg
mov
xchg
xchg
popf
dec
push
cmp
cmp
lods
push
pop
cmpsb
movsb
push
mov
pop
sub
je
push
adc
lock
cmp
sbb
popa
jns
push
jae
clc
cmp
movsl
mulb
cltd
jnp
cmpsl
call
lods
dec
daa
push
insb
sbb
cmp
in
xor
cmp
add
jmp
mov
test
jbe
xchg
sbb
add
cmpsl
push
dec
dec
sbb
repz
das
cmp
inc
inc
mov
aad
add
mov
mov
dec
or
es
pop
push
sub
popf
mov
adc
scas
shrb
imul
xchg
mov
pop
test
pop
sbb
lods
dec
push
ret
and
ja
push
fidivs
add
dec
adc
inc
xchg
adc
xchg
sbb
orb
outsb
dec
adc
jne
pop
out
mov
xor
in
aaa
mov
ret
imul
add
pop
jmp
lea
mov
ds
mov
fildl
mov
sbb
push
subb
and
lret
pop
std
push
lods
data16
popa
lods
mov
out
pop
je
and
jb
mov
cs
dec
push
mov
push
jl
es
sti
dec
pop
jno
jmp
dec
aad
mov
sarb
mov
xchg
xchg
jne
dec
ds
cli
in
or
popf
out
cs
stos
jle,pt
insl
push
lcall
cltd
and
and
into
adc
xchg
dec
repnz
scas
adcl
fst
js
fldl
lock
ja
jae
dec
jge
hlt
add
xchg
fiadds
mov
sbb
aad
mov
xor
faddl
xor
mov
dec
aaa
emms
push
adc
loope
pop
lcall
dec
popf
fwait
mov
push
mov
xlat
sbbl
cmp
mov
or
xor
test
xor
push
mov
lock
dec
fimuls
push
flds
mull
loop
dec
and
fisttps
ljmp
fbld
outsl
push
jp
pop
push
ret
shlb
mov
adc
roll
sbbb
xor
inc
cmp
add
insb
imul
xchg
cmp
ja
dec
inc
les
sti
lock
xor
es
aam
xchg
sbb
stos
adc
popf
xor
enter
pop
popa
xor
imull
in
test
push
ret
jge
sbb
jg
jecxz
push
je
mov
jmp
inc
sahf
adc
mov
xor
mov
push
iret
xchg
std
xor
sub
nop
call
xlat
add
out
push
loopne
sbb
dec
pop
mov
std
sbb
mov
aam
xchg
pop
and
mov
adc
test
fisttps
cli
rep
xlat
in
shrb
outsl
call
xchg
xor
fiadds
sar
adcl
ret
enter
je
in
mov
or
xchg
sbb
sbb
jge
sub
mov
sti
jp
mov
sar
lcall
jg
shlb
dec
mov
inc
xor
aaa
and
into
pop
adcb
rcll
or
cmp
repnz
xchg
inc
neg
sbb
fcomip
inc
lret
or
or
mov
arpl
insb
popf
adc
hlt
or
out
or
sub
leave
iret
or
aam
popa
mov
mov
mov
bound
dec
pusha
sbb
pop
fsubs
jmp
pop
jno
in
mov
lret
in
rolb
repnz
jo
sub
in
enter
fistl
xchg
push
xchg
sbb
in
lea
push
in
int3
cmpsb
sbb
push
test
inc
mov
push
ljmp
adc
imul
add
mov
mov
jae
sbb
sti
jg
fwait
out
paddsw
rclb
imul
xchg
mov
rcrb
inc
sti
mov
lcall
scas
stos
push
pop
lea
in
aaa
clc
ret
call
stc
pushf
mov
mov
fildll
repnz
xchg
cmp
push
fnstcw
mov
or
cmp
movsl
in
xor
ljmp
jns
test
push
cmp
pop
cli
scas
pop
fbstp
dec
mov
add
inc
sti
idivl
mov
dec
test
sub
xchg
jmp
mov
in
mov
cmpsw
adc
inc
sub
iret
cmp
xor
roll
lds
xchg
lahf
mov
fs
cmp
jecxz
clc
xchg
sbb
add
testb
cmp
insb
mov
mov
mov
dec
insl
sbbl
orb
lds
and
pop
xchg
ljmp
xor
outsl
out
inc
mov
jg
jo
loope
and
fidivrl
divb
xor
scas
fwait
ljmp
fs
sub
sbb
es
out
rcrl
test
sub
pushf
mov
push
xor
xchg
stos
mov
xchg
sub
push
or
dec
and
sub
mov
sahf
shlb
sbb
bound
push
sbb
inc
xor
or
dec
fs
and
and
loopne
sti
popa
shll
out
pop
movsl
add
mov
in
sbb
sub
xor
adc
popf
addr16
outsl
xor
pop
les
popa
pop
pop
push
cmp
loopne
push
mov
inc
int3
in
cltd
or
stc
dec
add
nop
fldcw
adc
in
lahf
mov
pop
lock
mov
or
rorl
fidivl
outsl
ret
idivb
pushf
clc
leave
pop
push
xchg
out
add
stos
and
mov
call
or
fldenv
icebp
leave
test
jbe
xchg
push
mov
icebp
adcl
test
rcrl
push
push
mov
mov
mov
cmp
mov
adc
fistps
dec
adc
or
inc
push
clc
mov
mov
add
pop
pop
inc
mov
mov
clc
in
loop
jecxz
ds
fcmovbe
add
lock
fbld
sbb
idiv
shll
mov
mov
and
pop
mov
outsb
mov
jmp
dec
mov
scas
xlat
and
adc
ret
pop
push
mov
inc
jge,pn
jecxz
cmpsb
mov
out
fstpt
aad
sarl
adc
mov
outsb
mov
rol
out
das
enter
inc
daa
push
sbb
roll
mov
mov
sti
jl
xchg
mov
jge
xchg
in
cltd
cmp
movsl
int3
lock
push
rcrb
rcl
in
shl
cli
mov
xchg
or
fnstenv
xor
mov
xor
pop
push
inc
sbb
cmp
arpl
mov
mov
xor
icebp
pop
call
push
adc
push
push
addl
pop
pop
push
scas
adc
or
outsl
inc
xor
lret
nop
lock
and
mov
loopne
xor
iret
adc
xchg
mov
dec
mov
jmp
pop
popa
or
dec
dec
fidivs
mov
fidivs
push
push
or
pop
jg
lahf
jns
popa
mov
pop
pop
std
cmpsl
mov
test
arpl
out
and
push
lahf
sbb
or
out
test
pop
mov
out
adc
scas
shrl
mull
pop
movsl
orb
movsl
sbb
push
je
push
rclb
sub
stos
addr16
outsl
xchg
jecxz
test
hlt
pop
xor
fwait
adc
cs
xlat
xor
hlt
test
jne
mov
outsl
xchg
jmp
in
in
and
jecxz
jge
sbb
cmp
lods
test
pushf
xor
fisubs
in
divb
jmp
clc
lahf
call
push
inc
lahf
test
scas
repz
ds
out
pop
jns
mov
dec
xchg
jno
imulb
lods
mov
outsl
ljmp
shr
push
andb
sarl
fcomip
fstp
dec
sub
push
mov
inc
aaa
add
xchg
jle
jne
mov
mov
add
mov
and
icebp
out
ss
sbb
inc
and
push
mov
or
rorl
ret
and
imul
sarb
dec
pop
mov
in
ficoms
pushf
test
adc
mov
mov
stos
xchg
outsl
sbb
pop
fldln2
add
ljmp
fstpl
gs
cld
jne
xor
ffreep
outsl
jp
hlt
cmp
xchg
loopne,pn
xchg
jbe
test
sub
lahf
xchg
scas
push
int
push
pop
pop
addr16
or
dec
adc
aaa
dec
into
add
int
lahf
cmpsb
daa
jo
pushf
inc
pop
xor
lea
add
imul
adc
dec
lret
fistl
lea
aas
popa
sarb
or
les
cmpsl
in
call
test
mov
ljmp
inc
push
mov
insw
xchg
int3
mov
cmp
js
adc
inc
push
dec
add
add
cld
fstpl
negl
shrl
xchg
inc
or
sti
push
clc
in
mov
or
or
jns
xchg
cld
add
mov
mov
push
mov
addl
lods
test
jg
in
cmpsl
add
xchg
out
and
push
mov
scas
mov
fsubrl
mov
push
stc
cs
xor
lret
jo
lcall
or
pop
mov
lret
xchg
rol
xor
add
xor
cmp
cwtl
push
lahf
leave
pop
lret
inc
inc
imul
add
movsl
xor
jno
mov
mov
int
fcom
addr16
adc
adc
mov
push
aas
xlat
dec
call
xor
jne
mov
fcomi
mov
rol
mov
inc
andb
fstpl
sub
cmp
mov
cmpsl
test
or
lds
sbb
inc
inc
sbb
stos
add
iret
dec
repnz
sub
xchg
gs
sbb
shr
xchg
inc
sbb
jle
cld
jbe
int3
leave
xchg
icebp
ja
and
pusha
mov
test
cmp
jle
mov
xor
stc
sbb
stc
jmp
mov
add
in
lret
xor
jle
shlb
cmp
and
mov
sbb
pop
inc
sarl
mov
xchg
popa
addr16
and
adc
cltd
sub
stc
cmpsb
jecxz
or
sbb
xchg
ret
in
jle,pt
mov
out
lods
adc
push
push
adc
sbb
pop
jmp
and
fldt
outsb
and
out
subl
scas
lret
test
lahf
adc
jo
xchg
arpl
mov
add
push
xor
leave
or
pushf
sub
std
into
bound
mov
or
adc
lods
or
sub
cmpsb
sbb
adc
lock
cs
fisubs
dec
notb
jbe
cmp
mov
cmp
mov
dec
pop
lret
not
or
stos
into
scas
dec
dec
push
cmp
inc
dec
iret
andl
jnp
cli
add
adc
lods
mov
jmp
xchg
sub
test
test
mov
mov
push
jmp
cs
hlt
mov
lret
sbbb
insb
and
add
xchg
in
dec
mov
aaa
inc
daa
nop
mov
nop
pop
test
cmp
pushf
xor
mov
mov
sub
xchg
add
cmp
xchg
sub
out
cli
xorl
jno
and
cwtl
push
sbb
push
and
mov
or
pusha
scas
sbb
hlt
push
in
mov
icebp
ja
dec
inc
jb
cld
add
sbbb
xchg
mov
pop
adc
adc
movsb
xchg
add
xchg
pop
sbb
sub
shrl
sarl
outsb
idivb
loopne
jae
out
dec
add
inc
dec
xlat
ret
es
or
inc
and
mov
push
xchg
pusha
call
push
ret
add
stos
fstl
adc
popa
jl
mov
push
push
je
ss
mov
sarb
add
fidivl
fsubrs
jo
lock
repz
pop
daa
jecxz
int3
es
hlt
cmp
shl
sub
and
dec
dec
fs
aaa
cmp
sub
pop
push
scas
rolb
in
into
dec
ljmp
mov
adc
jl
push
out
sub
idivl
pop
test
jns
sub
mov
stos
test
fcmovbe
fisttps
jl
mov
mov
into
dec
les
cmp
shll
in
xchg
or
repnz
aas
std
cmp
xchg
sbb
jno
in
lret
pop
fwait
in
jns
stc
fs
mov
and
dec
int3
pop
out
dec
leave
imul
arpl
push
std
cmp
pop
fcompl
mov
and
scas
les
addl
mov
out
ret
mov
push
mov
xorb
repnz
pop
ret
add
jo
pop
lods
js
ss
test
jno
sbb
inc
lcall
inc
push
jbe
mov
cs
or
jae
fiadds
sbb
lds
jmp
cwtl
sbb
mov
fs
mov
adc
mov
hlt
mov
jae
imul
fistl
mov
xor
fs
mov
mov
ret
ja
or
xor
cltd
jno
pmovmskb
dec
xchg
imul
pop
imul
mov
pop
or
cwtl
movsb
mov
loop
into
in
idivl
add
inc
aaa
push
jno
xor
pop
psubusb
sbb
cmp
int
fimuls
ljmp
push
sti
ja
je
adc
or
and
push
pop
gs
aam
jmp
mov
or
cld
mov
cld
fs
lods
jnp
mov
mov
scas
dec
icebp
fsubrl
jg
scas
js
cmc
lret
mov
test
ss
stc
push
movsl
inc
in
dec
arpl
in
inc
pop
call
jecxz
cmp
cmpl
out
xor
jecxz
xor
arpl
f2xm1
mov
or
xor
push
inc
sub
test
jo
xor
mov
inc
jl
mov
pusha
inc
into
in
jle
or
mov
rcll
adc
js
push
iret
mov
rcll
ljmp
and
jns
ds
subl
or
es
inc
jne
addr16
inc
or
and
mov
adc
pop
pop
or
outsb
mov
pop
mov
les
je
in
cli
jno
sub
in
dec
xrelease
cmp
push
dec
inc
push
nop
add
clc
sbb
dec
ficoms
dec
xchg
xchg
mov
xor
xchg
add
fs
mov
leave
sub
nop
xor
outsb
jle
popa
rcrl
rcrb
inc
addr16
sti
mov
mov
and
loopne
out
ljmp
add
add
mov
sahf
add
call
sahf
or
aaa
adc
dec
rcll
push
and
lret
in
sbb
fdivrs
sbb
xorl
adc
movsl
mov
and
fists
dec
xchg
adcl
jl
cmp
popf
pop
push
xor
scas
and
stc
fstl
mov
daa
push
and
orl
sarl
stos
call
je
jno
scas
fistl
mov
jae
pop
dec
pop
and
imul
cmc
jno
mov
push
ja
stos
xchg
fdivl
sub
ss
pop
inc
jne
cmpsb
js
lods
clc
push
outsb
mov
push
orl
fs
lea
scas
adc
icebp
mov
fwait
or
pop
sahf
or
mov
jmp
jo
roll
dec
pop
test
repnz
dec
inc
jge
ss
movsl
mov
js
dec
inc
out
adc
add
push
pop
xor
jo
ljmp
push
into
cmp
xlat
cli
cmp
aad
mov
mul
out
shlb
add
andl
ljmp
push
insl
add
add
adc
or
cmp
scas
inc
xchg
subl
fwait
sbb
mov
aas
jmp
cmp
mov
stos
ror
mov
mov
aas
fsubrs
push
jbe
scas
xlat
xchg
jbe
mov
sbb
jne
addl
mov
aad
sahf
imul
add
lea
mov
or
in
clc
out
jecxz
mov
mov
repnz
xchg
xor
ss
aad
fsubl
pop
pop
push
push
jle
std
in
jge
aad
push
lds
pop
add
cmc
push
and
adc
test
rcl
ret
flds
aam
stc
lahf
mov
jle
or
pop
out
repnz
mov
stc
arpl
pop
pop
mov
cmp
shr
dec
shrb
inc
cs
push
pop
stos
xlat
xor
sahf
jnp
adc
and
lock
insb
xor
or
jmp
fsubl
outsb
or
mov
sbb
cmp
out
jno
nop
fsubs
xchg
push
push
lds
bound
and
ja
xchg
dec
scas
lods
push
lods
push
mov
mov
enter
xchg
repz
push
stos
mov
lcall
shll
dec
xchg
out
and
cmc
xchg
push
insb
fs
cmp
jbe
or
pushf
pusha
xrelease
inc
and
pop
adc
push
dec
repnz
rcr
mov
ret
mov
pop
push
mov
repz
cmp
sbb
mov
mov
jne
popf
xor
stc
stos
loopne
mov
adc
bswap
jns
ja
xchg
lahf
and
fisttpl
mov
cmp
cmp
pop
clc
jnp
pop
pop
mov
sbb
mov
xor
jle
sbb
inc
aad
push
leave
arpl
xor
or
ret
dec
sbb
incb
mov
jns
jecxz
and
or
mov
and
pop
push
outsb
fwait
shr
add
sbb
sub
cmc
out
orb
icebp
fiadds
pop
js
and
clc
into
jecxz
sti
inc
test
loope
mov
xor
mov
call
shlb
and
jg
push
push
mov
mov
out
shlb
incb
shrl
push
inc
sub
stc
sbb
add
js
insl
nop
je
or
mov
pop
push
fmuls
sbb
enter
scas
adc
test
adc
xchg
into
cltd
jbe
sahf
in
adc
pop
mov
push
aas
sub
neg
cwtl
cmc
cmp
repnz
jecxz
pusha
in
cmc
xor
lock
xchg
xor
lret
popa
pextrw
sub
jmp
imul
movsl
fs
pop
js
cs
ffreep
and
jbe
cmp
pop
rcll
and
or
and
jo
pop
lods
notb
negl
rcl
sub
das
add
and
jmp
jb
ljmp
jbe
test
insl
fstps
adc
cmp
popf
push
mov
push
icebp
xor
xor
movb
shrb
test
les
stos
out
cmc
dec
fstpl
or
jmp
cmpsl
adc
fldl
inc
lcall
pusha
mov
bound
movsb
shrb
cmp
push
popf
mov
mov
rcl
add
lds
sbb
out
fnstsw
nop
sub
shll
fsubl
dec
div
add
jae
xchg
mov
xor
in
sub
mov
and
push
and
or
sub
lcall
and
adc
mov
ja
jl
lock
or
aad
jecxz
fbstp
lcall
das
cmpsl
fdivs
and
mov
sub
inc
insb
mov
in
movsl
je
adc
repz
pop
pop
xor
pop
dec
ds
rclb
add
cld
xchg
add
xchg
je
mov
stc
outsb
aam
cmp
ret
jb
les
mov
sbb
lret
pushl
rcr
push
mov
testl
dec
in
xor
xchg
popf
mov
xlat
fs
xor
xlat
movsb
js
dec
inc
cmp
add
dec
mov
lea
mov
mov
dec
jecxz
mov
push
lcall
lods
mov
inc
jg
in
jp
out
sub
rolb
pop
ljmp
mov
nop
sti
ds
std
jb
fisttps
mov
cltd
push
ss
sub
or
icebp
lea
loope
mov
sbb
xchg
iret
out
sbb
lcall
push
out
movsl
mov
and
mov
ljmp
cwtl
into
pop
pop
test
push
repz
repz
xor
arpl
scas
and
mov
xchg
cmp
jno
lcall
bound
or
fldcw
insl
aam
xchg
popf
mov
dec
rcl
sahf
pop
cli
movsb
adc
ds
cld
cwtl
pop
in
cmp
dec
mov
jb
xchg
jbe
clc
aas
sub
scas
cmpsl
adc
fsubs
mov
push
xchg
cmpsl
out
icebp
enter
cmp
adc
cmp
sahf
and
ja
in
xorl
mov
outsl
out
push
sbb
iret
xchg
jmp
dec
jnp
repnz
outsl
or
imul
aas
adc
cmp
push
or
scas
jg
call
lods
inc
mov
sbb
pushl
push
mov
out
imul
xlat
cwtl
or
popa
iret
cmp
inc
xchg
and
xchg
pop
outsb
adc
jge
inc
xor
ds
add
adc
sahf
call
loopne
adc
lock
or
cmpsl
push
in
pop
loop
into
movl
mov
jne
in
mov
or
fldt
xor
xor
xchg
push
sub
mov
mov
loop
jb
pop
rcrb
lahf
das
lds
in
mov
xlat
inc
add
and
stos
xlat
xchg
and
std
mov
inc
cld
leave
pop
fdivrs
cmp
pop
jb
sub
dec
mov
repnz
pop
sub
adc
and
out
sub
push
aad
nop
std
or
inc
repz
dec
maxps
into
test
sub
push
cmpsb
xchg
mov
pop
aaa
mov
int3
mov
xor
std
repz
dec
outsb
or
int
es
jns
add
push
pop
int3
mov
dec
sub
xor
inc
data16
xchg
loope
shr
sub
pop
add
or
adc
jmp
insb
cmp
mov
out
and
mov
sbb
fbld
pop
insl
imul
inc
cmp
les
sahf
cmpsl
test
sti
xchg
icebp
aam
mov
inc
jge
addr16
or
inc
jecxz
iret
mov
jmp
sarb
hlt
outsb
les
movsb
xor
adc
shrl
mov
push
test
daa
pop
mov
into
fidivs
jecxz
or
pop
ss
aad
imul
pusha
negb
or
sub
jl
push
xlat
pop
rol
scas
xor
dec
or
xor
jo
mov
aas
cmp
pop
and
xchg
cwtl
sbb
int3
daa
fucomi
jo
je
int3
sbb
ja
fisubs
out
inc
adc
fidivrl
dec
fdivl
ja
in
jp
fwait
jo
adc
out
sbb
dec
rcrb
mov
add
inc
lcall
nop
loope
lods
popf
stos
in
rcr
xchg
fstpt
mov
test
imul
movsb
sub
icebp
popf
scas
adc
xor
movsb
push
ss
in
jno
lahf
cmp
xor
repnz
cmp
daa
cmpsl
xchg
bound
inc
cmp
add
mov
fdivs
mov
bnd
leave
fbstp
jnp
cmpsl
xor
sbb
inc
mov
cmp
outsl
fiaddl
sbb
fwait
imul
or
rol
xlat
mov
mov
call
fiadds
lret
aas
movsb
mov
xor
inc
jp
aas
fcmovne
and
adc
loop
sub
es
fisubrl
push
testl
and
scas
loopne
stc
out
mov
cmc
nop
sub
call
xchg
outsb
add
jne
xchg
mov
jmp
inc
out
sahf
shll
push
adc
inc
inc
cli
adc
mov
cmc
jecxz
add
imul
push
pop
dec
dec
dec
clc
fistl
dec
mov
aad
push
mov
add
xlat
aas
test
or
xor
ljmp
xchg
mov
jb
popf
incl
or
sbb
mov
add
clc
sahf
int
jne
fs
push
push
pop
mov
cld
cmp
scas
pusha
inc
xchg
mov
or
jbe
dec
inc
inc
call
mov
imul
jno
inc
sbb
add
insb
popa
inc
sahf
mov
mull
jne
xchg
mov
inc
sub
mov
fldenv
sahf
xor
fdiv
xor
imul
xchg
fwait
push
push
orb
push
pop
push
and
ds
xor
sub
jns
cmp
cmp
lret
scas
mov
or
mov
xor
jbe
sbb
mov
jnp
push
xor
popf
lds
xchg
push
loopne
cltd
fdivl
push
rep
pop
nop
stc
sub
sbb
out
cmpsl
repnz
outsb
sub
dec
pop
fistps
adc
repnz
scas
or
cmp
aam
xchg
lret
cmp
sub
dec
mov
out
outsb
in
xor
xchg
push
leave
test
movsl
mov
leave
or
clc
lahf
insb
out
fisubl
fldcw
xlat
rclb
icebp
push
loop
sti
push
movsb
jae
fstl
sub
sbb
mov
decb
inc
xchg
dec
add
dec
ficoml
jnp
jg
or
jne
rorl
cmp
std
sub
cltd
mov
decl
jle
pushl
les
fcomps
inc
inc
sbb
pop
inc
lret
bound
addr16
adc
imul
mov
mov
push
mov
lcall
and
fdivp
enter
lcall
shlb
inc
stos
dec
push
mov
subl
xchg
nop
lret
and
or
out
int
cmp
sbb
adc
insb
lods
insl
aad
dec
push
sub
adc
mov
aaa
and
cmp
insb
imul
loope
adc
jl
mov
xor
mov
call
dec
in
cmp
or
inc
mov
pop
rorl
sbb
or
stos
mov
add
push
imul
push
xor
movsb
mov
push
getsec
cmp
inc
mov
xchg
into
fisubs
aas
jne
mov
or
inc
cmpsl
inc
lahf
test
iret
push
in
adc
mov
test
cmp
xchg
pop
arpl
pop
xchg
dec
sti
jne
pop
in
and
sbb
mov
cltd
and
sarl
or
imul
scas
lods
adc
and
movsl
push
test
add
fistpl
mov
dec
inc
mov
cld
pop
or
xchg
cli
in
xchg
xor
and
cltd
pop
lret
jno
mov
adc
push
pop
or
imul
outsb
fstpt
or
sub
cmpsb
xchg
punpckhdq
sti
pushf
or
mov
aas
push
xor
imul
test
adc
shlb
and
dec
imul
sub
push
push
jg
gs
dec
cli
sti
xor
addb
cli
dec
jg
xchg
cmpsb
aas
and
and
leave
mov
or
inc
and
xchg
cmp
xchg
mov
movsb
stos
rcrb
jecxz
sbb
fdivp
popa
cmp
shrl
mov
loopne
add
test
or
adc
inc
add
ljmp
outsl
shr
and
mov
jbe
add
push
dec
movsb
stc
xor
sub
aaa
lahf
js
jno
mov
sar
mov
mov
out
push
stc
pusha
jae
test
dec
daa
scas
push
and
leave
loop
jmp
pop
pop
das
aaa
jmp
fistpll
adc
test
inc
outsb
cli
inc
sub
sbb
push
addr16
rclb
and
in
sbb
push
ret
jns
out
cmc
mov
xchg
insl
mov
mov
lods
jmp
in
inc
cld
insl
lea
test
jecxz
inc
xlat
jecxz
int3
push
dec
mov
pop
mov
ret
sub
xlat
mov
aas
lds
or
rclb
je
clc
jnp
xor
je
iret
xchg
lcall
mov
push
lds
or
subl
mov
fwait
push
nop
dec
xor
push
test
mov
dec
and
lret
inc
lret
mov
push
cs
inc
xchg
and
cmp
xchg
jp
jecxz
scas
push
in
lret
scas
stc
jle
ljmp
mov
ja
imul
in
jl
mov
xor
sbb
jb
bound
insl
das
mov
decl
dec
push
hlt
push
mov
push
push
adc
idivb
xor
xchg
cmpb
mov
pushf
push
cmpsb
add
mov
jbe
mov
dec
cmp
ret
or
sbb
push
jecxz
sbb
jecxz
cmc
push
jno
cli
jne
out
pusha
pusha
imul
in
addr16
jecxz
jl
cwtl
les
sbb
add
mov
cmp
cmc
jae
test
addr16
adc
adc
mov
sub
mov
fdivl
jg
incb
inc
sti
sub
mov
jg
push
shll
add
aaa
mov
pop
cmp
lahf
jo
jge
ds
fisttpll
adc
je
sbb
sarb
movsb
and
loopne
or
out
and
xchg
mov
sarl
mov
lea
stos
sbb
scas
test
fldl2t
lds
adcb
mov
cmp
ret
cs
mov
repz
loope
xchg
push
push
loop
into
popf
dec
out
subb
mov
insl
mov
jne
push
pop
mov
and
add
dec
cmp
ret
xchg
outsl
lods
inc
fildl
xchg
ljmp
mov
popl
sbb
push
popf
ffreep
cmp
mov
outsb
inc
adc
imul
mov
mov
mov
or
lock
test
fisttpl
outsb
xchg
sub
call
ret
push
push
sbb
cwtl
cmp
sahf
cmp
or
mov
mov
aad
dec
mov
lea
out
cmp
dec
test
nop
jnp
xor
sub
mov
iret
sub
sbb
push
adc
mov
ss
or
fidivl
popa
jbe
mov
pop
aad
cld
xor
sbb
mov
gs
xchg
mov
mov
cmp
mov
push
and
add
andb
ja
sbb
into
ds
imul
mov
mov
push
add
sbb
xchg
dec
icebp
cmp
shr
jb
adc
cmpsb
pop
leave
sub
stos
nop
bound
mov
dec
inc
push
out
xor
or
fwait
dec
or
in
or
scas
cwtl
inc
mov
pop
in
xor
xchg
repz
movsl
stos
or
imul
mov
xor
sbb
mov
dec
fiadds
daa
arpl
push
pop
mov
rcrl
cmpsl
mov
imul
mov
add
or
cmp
add
add
lcall
mov
andb
or
xlat
test
sbb
jns
pushf
dec
imul
repnz
jg
fs
test
sub
jge
mov
out
repnz
loope
lret
sub
inc
push
cmp
das
adc
stc
mov
insb
fildl
aam
insb
aaa
inc
fisttpll
movsl
mov
outsb
aam
adc
dec
or
xchg
push
arpl
out
xor
int3
andl
int
pop
mov
or
aad
pop
jae
mov
hlt
pop
sub
mov
iret
jmp
push
cmp
lds
add
mov
add
jl
sahf
lods
es
lret
test
andl
xchg
clc
pop
adc
cmp
jb
outsb
dec
push
es
sti
aad
test
pop
rcll
pop
icebp
adc
data16
in
shrb
sbb
mov
in
pop
cmc
and
mov
lea
out
mov
xor
sub
sbb
xor
fstps
jge
imul
rorl
pop
push
jle
insl
xor
cmpsl
lret
mov
cmpsl
pop
iret
xchg
dec
xor
mov
lds
fistpl
add
pop
add
bound
mov
jae
out
xor
into
and
imul
movb
jo
push
jb
inc
pop
xor
xchg
jle
or
mov
sbbl
or
sbb
cwtl
dec
jb
jmp
adcl
clc
jnp
les
les
sar
les
out
jg
cmpsb
aas
jge
into
jge
inc
or
lret
das
sub
jo
mov
scas
or
loope
cltd
sbb
icebp
les
lcall
pusha
cmp
adc
sti
insl
mov
in
out
jae
pop
sub
test
xor
outsl
cmp
repz
cmp
inc
fdivl
xchg
dec
lret
mov
push
ror
sbb
xchg
int
lret
xor
adc
test
pop
ds
fnstsw
xchg
addr16
mov
push
push
xorl
jp
insb
insb
xchg
inc
sub
int3
sub
pop
mov
push
adc
push
sub
or
mov
jmp
xor
mov
test
and
and
mov
in
pop
adc
stos
jnp
icebp
fimull
in
or
adc
repz
push
adc
dec
cmc
pop
cmpsl
nop
dec
int3
pop
inc
or
pop
mov
mov
loope
insb
xor
mov
push
sbb
lcall
pop
or
or
repz
dec
lds
cmp
jns
sub
into
pop
pop
scas
or
call
test
imul
jge
in
pop
out
lock
inc
fwait
jo
clc
cmpsb
leave
clc
jnp
jns
sbb
dec
lea
in
loop
dec
mov
aas
jo
jg
push
push
stos
pushf
cmp
je
and
pop
xor
aam
inc
pushf
xlat
mov
sub
in
scas
movsl
pop
notb
mov
push
cwtl
mov
pusha
mov
xor
cmp
outsl
es
scas
push
clc
xchg
shll
xor
add
mov
addr16
sbb
mov
dec
ljmp
mov
sub
dec
das
fs
add
jb
bound
cli
pop
dec
mov
in
cwtl
call
mov
push
mov
inc
cld
pand
xchg
in
inc
cmc
pop
or
cwtl
adc
dec
js
pop
push
cld
pop
dec
fwait
mov
cmp
mov
jp
jno
xchg
jno
lahf
repz
and
add
loop
hlt
in
mov
lcall
sub
mov
pusha
push
movsb
jno
repnz
add
lods
jp
fcomps
aaa
lock
mov
and
xor
cmp
or
sbb
andl
push
add
shlb
push
ffree
mov
mov
popf
xchg
leave
div
fisubrs
loop
cmpsb
pop
hlt
arpl
sar
ss
popf
jo
out
adc
sbb
loop
out
mov
iret
cmp
outsl
and
insb
movsl
adcl
adc
stos
xchg
push
and
lock
pop
xchg
cmovle
pop
xchg
mov
add
mov
pop
fidivrs
dec
add
out
inc
in
dec
xchg
push
mov
sbb
xor
lahf
dec
jge
test
mov
sbb
push
repz
add
imul
sbbb
out
out
ss
daa
std
xor
inc
push
jmp
mov
jo
sub
push
sahf
mov
fimull
test
ret
push
jmp
mov
xchg
cwtl
adc
nop
popa
add
ret
push
sub
xchg
jne
shll
imul
inc
lcall
shlw
cmp
into
ds
iret
sarb
out
gs
push
xor
ljmp
xchg
cmpsl
dec
xchg
mov
or
dec
insl
or
mov
inc
inc
fistpll
fistpll
xor
jbe
dec
lods
sti
cmp
mov
dec
lret
addl
fs
add
out
push
jmp
add
add
std
test
or
cmp
mov
stos
cmp
push
mov
mov
mov
mov
mov
xchg
scas
mov
adc
shlb
es
nop
cmc
jo
jmp
mov
cmc
int3
js
lds
jg
sbb
dec
outsb
fs
add
pusha
dec
cmp
loop
pop
rcrl
sti
fiadds
fdivs
push
ret
ljmp
mov
stos
in
push
ffree
rcr
shr
cli
jae
cmp
lock
rcrl
pushf
adc
dec
pop
cltd
test
in
dec
hlt
and
stc
pop
sub
hlt
adc
test
mov
fistps
mov
enter
lods
inc
jbe
ficoms
inc
mov
addr16
sbb
jbe
add
pop
outsl
lods
iret
pop
mov
mov
add
insl
inc
rorb
sub
aad
inc
cmp
in
rorb
test
pop
mov
mov
test
xchg
add
mov
pop
imul
int
mov
je
sbb
sbb
jle
out
dec
aad
fimuls
lods
adc
fwait
mov
subb
clc
test
lret
push
and
test
dec
mov
and
mov
or
jbe
dec
int3
dec
sbb
jbe
sub
and
mov
mov
stc
inc
add
inc
pop
int
pop
mov
mov
or
adc
cmp
cmpsb
hlt
sub
adc
pop
int3
in
aaa
xor
ret
gs
and
cmp
stos
inc
xchg
mov
adc
or
ret
mov
xor
sbb
push
imul
gs
popa
insb
sub
leave
xchg
mov
cmpsl
and
push
pop
test
enter
mov
stc
sbb
mov
movsl
out
call
and
mov
pop
adc
add
cld
in
or
mov
sbb
addb
push
push
dec
rol
in
cltd
mov
cmp
sub
cltd
aad
sub
nop
sarb
out
jno
push
loope
mov
adc
mov
movsb
add
repz
popa
into
or
sahf
into
outsb
imul
cmp
mov
dec
and
sub
or
dec
mov
insl
rcr
xchg
in
aas
xor
adc
sbb
inc
aam
call
out
push
lods
cmc
lret
mov
repz
cltd
mov
aad
scas
leave
imul
xor
aam
cmp
xor
loop
inc
cmpsl
or
xchg
int3
in
insl
add
rclb
das
mov
jno
gs
mov
pop
movsb
pushf
pushf
mov
bound
arpl
add
pop
mov
sub
mov
lea
in
mov
mov
lret
and
mov
push
sbb
mov
inc
out
jae
xchg
adc
hlt
jno
xchg
mov
jecxz
dec
sub
mul
sbb
push
hlt
les
insb
jg
add
repz
loop
enter
adc
or
hlt
push
or
aam
sub
jle
imulb
in
leave
sbb
pop
pop
jae
lds
mov
sbb
and
push
add
jmp
xor
jnp
xchg
push
add
cmc
mov
rorb
es
loop
movsl
popf
jmp
cmc
sub
and
shrl
lods
loope
rcll
mov
ret
adc
mov
pusha
sbbl
in
ds
sbbl
inc
aad
aaa
jnp
test
mov
push
je
adc
sahf
jns
xchg
stc
fisttps
push
stc
jge
and
mov
je
insl
aad
outsb
fs
lds
lahf
cwtl
lods
xlat
lcall
add
jg
in
daa
cmp
data16
xor
loopne
or
pop
cmpb
hlt
mov
int
aam
mov
mov
les
mov
mov
adcb
push
pusha
xchg
adc
jmp
inc
out
xchg
es
aaa
xchg
into
pushf
cmpsb
loope
fninit
jge
and
jno
je
or
xor
iret
mov
icebp
out
mov
test
in
lcall
dec
stc
xchg
int3
push
scas
or
sbb
fcmovnb
adc
mov
mov
lret
mov
out
jno
aad
inc
sahf
adc
mov
xchg
and
std
aaa
clc
js
sub
or
add
xchg
outsb
pop
jl
xchg
push
xlat
popa
sbb
dec
jae
xchg
and
rcll
cwtl
popf
fidivs
inc
cltd
in
mov
mov
xchg
cmp
in
xchg
cltd
popf
xchg
cmp
add
lods
sar
aad
pop
push
mov
sbb
rcrl
xchg
ret
es
and
pop
call
into
pavgb
inc
lret
sub
bound
jb
arpl
and
popf
test
cmp
int3
and
pop
inc
adcl
dec
adc
jp
enter
sbb
and
pushf
into
stos
mov
bound
xchg
jnp
fsubrs
fidivl
mov
leave
add
int3
test
outsl
push
adc
out
xor
int
imul
and
and
or
add
rcll
and
insl
lret
pushf
cltd
sub
daa
mov
imul
loopne
jae
insl
loopne
lahf
sbb
push
jge
adcl
sbb
out
pop
lds
push
ss
xor
adc
push
test
cmp
insb
pop
push
or
sbb
and
push
outsl
movsb
adc
shll
xchg
and
xchg
mov
ss
bound
cwtl
pop
scas
cmp
ds
fs
push
data16
inc
lock
mov
and
sbb
fisubrs
cmc
mov
mov
imul
xor
and
xchg
xchg
jnp
xchg
insb
xchg
push
jnp
cmp
xchg
cmpsb
repz
xchg
xchg
out
xchg
mov
jno
fnstcw
jae
bound
test
xor
call
push
into
mov
xor
dec
sbb
or
in
fistpl
jbe
iret
pop
repnz
sbb
pop
aad
sbb
sbb
arpl
subb
jmp
clc
ds
pop
repz
sbb
push
shll
mov
enter
xchg
dec
add
push
lahf
push
push
push
add
loop
lret
bound
shlb
pop
pusha
mov
ss
out
not
imul
mov
sub
fcompl
push
dec
mov
cli
es
in
lahf
insb
add
pop
inc
xlat
subl
pop
and
xor
pop
xchg
sti
loopne
dec
jae
test
cli
movsb
xor
test
leave
or
and
je
rcr
nop
dec
push
adc
lods
inc
mov
lods
sub
cmc
sub
lds
mov
mov
xchg
mov
pop
bswap
jg
daa
aaa
fs
xchg
aas
mov
aam
xchg
outsb
movsl
fdivp
add
push
sbb
jae
cltd
jl
iret
das
sub
sub
imul
inc
mov
xchg
popa
add
out
loopne
popf
inc
pop
xchg
into
sub
mov
mov
dec
iret
cmp
insl
repnz
sbb
fbld
ss
fs
jno
cmpsl
jg
lret
sub
xor
or
cmp
shlb
dec
lods
sbb
sbb
stos
popa
inc
add
js
add
add
pusha
pusha
sub
aas
dec
and
adc
ficoml
push
add
and
add
in
push
clc
mov
ja
mov
ds
inc
xor
lock
jge
mov
mov
mov
scas
mov
les
xchg
and
ds
push
sub
mov
sti
cmp
and
in
or
dec
pop
sti
std
addr16
dec
ret
cmp
ret
xlat
add
ret
aad
and
cwtl
or
sub
xor
cld
cld
xor
rcrl
push
rclb
and
ror
mov
pop
xchg
mov
xor
inc
fiadds
mov
inc
hlt
ret
adc
ss
sub
enter
and
mov
inc
jl
fsub
insb
cmpsb
and
sub
lret
jno
mov
jl
mov
gs
ss
repnz
cmp
jge
jmp
push
sub
je
sbbl
rorl
arpl
xchg
adc
fmuls
sbb
jge
shlb
scas
and
xchg
fcompl
roll
sbbl
std
or
lods
xchg
pop
sbb
imulb
aas
xlat
xchg
dec
mulb
ficoml
test
xchg
push
cmp
lock
xor
test
cmovno
movsb
test
jbe
cmp
daa
push
js
add
hlt
push
dec
cwtl
movsl
inc
incl
dec
in
ret
adc
test
adc
inc
xlat
cli
jne
jns
jmp
jmp
mov
mov
sbb
nop
dec
call
insl
mov
jno
sbb
jp
xor
loope
fisttpl
cmpsl
jo
sbb
les
data16
sbb
xor
icebp
xor
mov
mull
out
adc
pop
add
icebp
fadds
xor
and
aad
mov
nop
sbbl
jecxz
mov
sub
jecxz
xchg
pushf
xchg
fsubrp
ds
lock
dec
pop
insl
xchg
or
popf
or
pop
cmc
jmp
mov
pop
clc
cmp
or
add
jbe
xchg
in
cmp
or
pop
mov
popf
shl
jno
scas
mov
roll
aad
lcall
cmpsl
cmpb
and
add
mov
add
shrl
mov
mov
mov
stos
dec
mov
mov
loop
sbbb
mov
das
cmp
pop
aad
lret
inc
and
inc
test
rcrb
rcl
sub
adc
test
mov
fildll
cltd
or
lock
jg
jbe
xchg
sahf
push
xchg
inc
pop
or
mov
mov
pop
les
push
mov
gs
pop
jae
iret
out
sahf
fisttpll
sbb
and
push
movsb
mul
pop
stc
pop
pop
hlt
push
cli
in
jmp
lock
shl
les
pop
dec
xor
in
dec
movsb
pusha
jge
inc
lea
addr16
das
xor
imul
or
xor
or
mov
jg
add
sbb
push
in
nop
fcoms
fsubl
jb
loop
push
daa
fsubl
dec
imul
es
push
adc
ds
push
push
lds
cmpsl
dec
push
sub
fucomp
jmp
sub
adc
mov
mov
dec
fnstcw
cmp
sbb
lahf
sub
cmp
mov
out
lea
imul
mov
sbbb
jb
mov
pop
push
std
cmp
add
mov
dec
lods
dec
sub
loop
out
add
add
xchg
lods
fstpl
or
dec
cmp
and
call
push
jl
jg
jno
cmpsl
lcall
jne
add
xchg
mov
and
sub
sbb
mov
es
gs
mov
stos
in
mov
or
cmpsb
pop
mov
jmp
mov
fstpl
imul
pop
xchg
sub
mull
mov
adc
push
repz
mov
sub
xor
inc
mov
je
sti
cmp
movsb
popf
cmp
das
xchg
lds
rolb
push
push
push
push
inc
push
fisubrs
fisttpl
fbld
push
mov
jle
jecxz
inc
mov
aad
mov
popa
jnp
or
int
push
sti
lcall
xor
cmp
inc
mov
push
popf
test
add
push
hlt
cmp
cmp
gs
dec
mov
jl
aaa
adcl
sbb
scas
incb
les
and
adc
out
test
aad
sub
adc
lods
jl
sbb
movsb
or
dec
cmp
pop
pcmpeqb
rcrb
jo
into
fwait
les
adc
mov
mov
outsl
push
imul
pushf
fcoml
arpl
sub
repnz
cltd
popa
bnd
cmpsl
pop
in
stos
or
sbb
test
jo
sbb
xlat
sub
jns
add
pop
scas
adc
adc
stos
mov
jle
out
jecxz
adc
cmp
dec
add
and
mov
xchg
or
fs
jp
pop
popf
test
mov
sti
dec
cli
fdivrs
lods
std
mov
pusha
pop
int3
negl
add
lcall
test
test
mov
jb
rorb
cwtl
fisubrl
jmp
push
stos
daa
insb
loope
xchg
test
push
lods
leave
shrl
xchg
pusha
out
cwtl
cld
loop
je
test
test
jno
fsubl
daa
adc
sbb
push
sbb
sub
mov
enter
pop
pop
cmp
cmp
ffree
aam
hlt
scas
mov
popa
enter
mov
pop
xor
out
sti
ljmp
scas
aaa
jns
mov
mov
aam
or
shlb
scas
add
lahf
pop
mov
outsb
xchg
scas
and
rcr
mov
test
jne
push
mov
out
xchg
xlat
in
call
out
adc
aad
and
leave
mov
repnz
xlat
stos
and
int3
jp
fsubrl
lds
int3
leave
add
mov
ficoms
mov
dec
ret
das
cli
scas
inc
mov
lret
fstl
lahf
je
cwtl
dec
xchg
add
addr16
call
test
push
mov
push
out
inc
ljmp
jae
leave
mov
xchg
fldlg2
fidivrs
sar
mov
loope
mov
out
cmp
sub
xchg
and
popf
and
ret
mov
sub
in
mov
and
call
add
lods
repnz
mov
sbb
push
xchg
cs
and
push
jmp
getsec
movsl
sub
mov
mov
push
bound
sub
mov
dec
pop
xchg
xor
sub
push
test
loop
dec
int
push
add
sub
rcl
lds
inc
lds
pusha
ret
scas
jl
add
push
adc
jbe
popa
mov
cmc
andb
and
insb
sub
inc
jge
fs
pop
not
sbb
jl
xor
dec
mov
loope
mov
jnp
sar
das
jne
out
addr16
es
clc
fldt
xchg
or
shrl
cmp
pop
pop
fwait
inc
int3
xchg
negl
mov
jae
das
ljmp
or
imul
icebp
sub
orb
test
or
adc
lods
push
out
js
or
cmpxchg
inc
mov
cmp
sub
adc
dec
inc
mov
adc
add
pusha
loopne
fwait
stos
mov
roll
pop
in
jne
clc
cmp
adc
mov
in
es
xlat
fadds
aad
add
repz
test
pop
cmp
push
mov
and
daa
xchg
dec
sbb
cmpsb
jno
insb
jmp
cli
jbe
pop
scas
fcmovnb
dec
dec
and
mov
fstps
clc
push
imul
dec
xorb
pushf
jne
cmpsl
insb
ss
jecxz
orps
mov
and
out
jl
or
sbb
cmp
fs
mov
out
dec
lcall
mov
dec
test
loopne
andl
cmpsl
loope
stos
clc
jb
test
js
jne
loopne
dec
out
popa
sarb
ret
test
sbb
pushf
pop
inc
cld
test
xchg
mov
add
jae
outsb
sti
inc
fldenv
insb
cmp
loope
push
ja
push
and
inc
in
and
mov
rclb
adc
scas
xlat
movsl
xchg
int
popf
ja
xchg
test
dec
cltd
pop
imul
sbb
movsb
pop
call
scas
ljmp
dec
pop
xchg
lahf
aam
movsb
outsb
inc
dec
mov
mov
cmp
push
fcomps
cld
pop
in
cld
rcrb
scas
hlt
xor
xchg
out
popa
out
pushf
xchg
adc
jmp
fimuls
ljmp
ss
mov
dec
xor
fcmove
aaa
lret
adc
cmp
jecxz,pn
pop
stos
mov
loopne
dec
push
xlat
xchg
pop
cmc
jecxz
aam
cltd
xor
sahf
push
aas
mov
in
mov
push
jb
jmp
dec
mov
and
adc
sub
jbe
inc
push
lods
xorb
add
testl
ret
js
or
lret
adc
fs
loop
xchg
xor
and
iret
push
cmpsb
std
sbb
cs
aad
dec
repnz
inc
not
fdivrl
cld
pop
add
std
mov
insb
aas
inc
xorb
roll
ds
cltd
jae
loop
dec
and
ret
jecxz
dec
popf
jbe
cmpsb
mov
rcl
cli
insl
aad
xchg
sub
rol
sub
mov
and
into
xor
cmpsb
orb
rorl
cli
dec
or
rclb
xorl
arpl
fstpt
mov
lods
idiv
cmpl
scas
inc
sbb
ficompl
inc
jns
jae
add
stc
imul
pop
addr16
aad
adc
mov
cwtl
mov
fadds
leave
sub
sub
mov
dec
pop
aam
pop
cmp
aaa
loope
inc
fstps
jmp
or
jne
mov
sub
fwait
cmp
jmp
and
xor
ljmp
rorb
mov
testb
sub
xchg
pushf
arpl
fsubr
jo
idivb
mov
push
cs
push
push
cmp
sub
fld1
roll
cltd
fs
jle
fs
adc
add
bswap
xchg
push
aas
imul
jnp
not
dec
outsb
stos
xlat
cli
inc
sti
jl
jp
inc
add
mov
mov
outsl
cmp
cld
mov
int3
cmp
sbb
and
cmpl
push
add
jecxz
mov
xchg
cltd
cli
ljmp
pusha
pop
pop
dec
fs
jns
scas
out
mov
mov
hlt
stos
addr16
ljmp
pop
jns
jecxz
fimuls
pusha
sbb
mov
jo
xor
inc
sbb
dec
sbb
fimull
jle
imul
mov
mov
enter
sbb
push
sbb
add
and
xchg
or
out
sbb
jp
imul
lods
xor
jg
sub
xor
inc
loopne
fidivs
ror
xor
sbb
aam
scas
or
int
jns
stos
arpl
out
call
cmp
cwtl
in
jl
scas
xor
sbbb
les
xstore-rng
cmpsl
push
enter
cmc
pop
in
cld
pop
mov
out
adc
sbb
imul
xor
insb
shrl
xchg
cmp
negb
sbb
xor
or
jmp
mov
enter
loop
in
out
xor
xlat
push
xchg
ds
pop
pop
xor
loope
jnp
shrb
ss
jmp
test
das
mov
nop
test
stos
sahf
adc
mov
ljmp
gs
fnstenv
out
sub
cwtl
mov
gs
pop
and
push
pop
rcll
or
or
addr16
and
test
subb
mov
int
jg
adc
aad
stos
sub
pop
pop
rorl
ss
jmp
cmp
dec
inc
test
fidivs
cmp
mov
and
push
xchg
adc
icebp
mov
xor
cmc
xor
push
sbb
adc
sub
mov
aas
jns
mov
ss
shll
sub
mov
dec
insl
mov
sahf
xchg
adc
sub
popa
imul
jecxz
cmp
ja
jge
aas
jge
push
mov
out
dec
imul
bound
adc
mov
pop
sub
movsb
push
rorl
inc
push
and
sbb
sub
in
mov
sbb
pop
sub
fsts
imul
insl
jb
sbb
dec
das
xchg
aad
into
jne
mov
pop
scas
sbb
in
or
pop
sbb
sbb
adc
mov
lds
mov
fcoms
cmp
mov
inc
inc
inc
test
adc
mov
shl
mov
cmp
cmp
mov
movsb
add
cmc
jmp
xor
jns
jne
and
jg
ret
mov
mov
les
push
jno
js
mov
jnp
xchg
xchg
inc
fbld
adc
jle
nop
inc
daa
push
jae
mov
ja
into
inc
sub
popf
push
insl
icebp
iret
inc
mov
or
repz
xlat
sbb
test
dec
inc
loope
lahf
mov
mov
adc
jne
loope
lock
cmp
sbb
mov
lahf
fsts
loop
jle
sub
mov
and
mov
inc
insb
dec
or
std
mov
fst
mov
pop
aad
repnz
incl
mov
xchg
adc
mov
jge
and
pop
insl
lret
pop
shrb
shrl
add
hlt
and
jecxz
pop
or
push
in
out
adc
push
sub
push
out
push
xor
xchg
hlt
loopne
xor
jl
pop
sbb
repnz
pop
jo
push
les
mov
je
movsl
shr
setnp
add
lea
addr16
cmp
dec
lahf
add
cli
sti
xchg
push
lods
push
clc
push
pop
ds
outsb
out
jl
xchg
jmp
jns
cmp
pop
in
cltd
scas
adc
inc
jae
xchg
iret
jg
dec
xor
jge
fsubs
sbb
mov
orl
ds
std
mov
xor
outsl
add
xchg
sarb
cmp
in
add
cmc
mov
push
jbe
dec
push
sbb
inc
ss
ret
pop
ja
in
out
add
es
add
cmpsb
dec
jno
fidivs
in
jb
cltd
ret
test
ljmp
roll
testb
jmp
dec
pop
aaa
lds
sbb
sti
sbb
pop
xor
add
fwait
mov
loopne
cmp
mov
loop
adc
sbb
cmp
push
jb
loopne
rcr
or
bound
fdivrs
pop
pop
in
in
pop
jp
js
xchg
call
jmp
movzwl
xchg
mov
jns
push
popa
cs
xchg
loop
jb
lret
pusha
arpl
test
jb
mov
mov
popf
test
cmp
xchg
fimuls
jae
outsb
aas
mov
ret
aaa
or
adc
pop
sbb
iret
lods
cmp
sbb
cmp
addr16
fldcw
out
fsubp
movsb
dec
ja
sbb
int
dec
mov
fcmovbe
and
les
hlt
fwait
mov
adc
add
pop
ret
or
fsubr
push
and
call
stc
lds
hlt
pop
outsb
lods
test
xchg
mov
fldenv
mov
cmc
fs
cmp
sbb
sbb
add
jmp
cmp
push
or
popf
jp
out
fcmovbe
mov
pop
or
sbb
dec
jno
mov
push
pop
jno
faddl
and
mov
mov
inc
pop
adc
mov
enter
fsubrl
add
cwtd
lret
mov
mov
xor
mov
imul
les
push
jmp
scas
dec
pop
out
push
mov
jae
sti
test
aad
in
call
mov
lret
sub
sahf
pop
pop
mov
and
sub
clc
jb
jae
mov
mov
mov
cmpsl
jge
out
insb
daa
push
arpl
mov
cwtl
imul
iret
or
dec
sti
out
pop
or
inc
daa
aam
daa
ja
inc
push
xor
fcmovnb
add
jle
xchg
push
xor
cli
mov
dec
testl
xchg
movsb
cld
lds
and
mov
aam
inc
rcrl
mov
xchg
push
stos
iret
xchg
xchg
push
mov
out
or
add
dec
cs
frstor
cmp
pop
lahf
outsl
popa
cwtl
lds
stc
aas
lock
sbb
imul
subb
xor
sti
test
jmp
je
or
test
stc
push
mov
test
inc
xlat
dec
cmp
subb
daa
jge
jae
or
out
sub
cmp
add
stos
lret
sbbb
mov
outsb
lock
bound
xchg
divb
xchg
fs
xor
cmp
addb
aad
jle
mov
fwait
sarl
out
stos
dec
pop
inc
aad
or
jmp
pushf
jbe
xchg
aad
shlb
ds
aad
pop
int
jb,pn
rclb
int3
ds
jp
ret
xlat
mov
xor
dec
cwtl
js
hlt
mov
lea
movsl
sbb
xor
cmp
and
rolb
int
nop
std
ficoml
stos
pop
adc
jmp
shl
push
pop
mov
cmpsl
lds
insl
pop
outsb
nop
sbb
mov
nop
outsl
nop
aas
test
push
ja
loopne
mov
dec
mov
fwait
mov
pop
addr16
je
dec
push
insb
xchg
dec
daa
inc
lock
sbb
cmp
mov
cmpsb
orl
fstps
ds
popf
inc
daa
and
dec
insb
sbb
add
adc
dec
pop
jecxz
add
leave
lret
divl
icebp
idivl
ret
inc
popa
movq
pushf
push
imul
jle
inc
and
rorb
int3
cs
mov
jne
cltd
in
into
pop
push
pop
dec
repz
dec
mov
and
ficoml
add
or
inc
pop
mov
mov
outsb
xchg
xor
sub
mov
mov
js
mov
out
shlb
xchg
fists
enter
mov
push
popa
sarl
jg
jmp
inc
int
mov
add
jnp
shrb
inc
sbb
jge
cmp
js
inc
push
xor
jo
fwait
mov
test
xor
sbb
arpl
push
aas
adc
pusha
icebp
jecxz
sbb
xchg
jmp
xchg
add
decb
fiaddl
loopne
outsl
outsb
cmp
or
dec
popa
mov
ljmp
test
addr16
xchg
dec
outsl
cmpsb
jne
nop
mov
or
xor
and
popf
movl
mov
negl
in
sub
ljmp
push
mov
fs
adc
mov
and
fdivrs
add
mov
popa
jl
push
cwtl
leave
mov
dec
jge
scas
dec
pop
mov
ficomps
out
and
subl
push
jmp
cmp
std
mov
mov
mov
fsubrs
xchg
aam
movsb
in
test
push
mov
add
aaa
jecxz
push
xor
dec
cmp
lock
sub
nop
ljmp
lcall
loopne
mov
hlt
and
mov
lret
jne
fiaddl
xchg
cmp
ret
std
jnp
lcall
mov
out
decl
jns
je
pop
push
push
mov
jne
sub
dec
jge
mov
bound
cmpsb
hlt
mov
enter
xchg
xor
sub
mov
call
shll
mov
sbb
daa
xchg
mov
popf
mov
stos
scas
mov
dec
or
xor
out
adc
insb
test
stos
push
lcall
dec
cmp
inc
sbb
pop
mov
mov
cmpsl
aad
jbe
or
fwait
shl
es
stos
ret
stos
inc
mov
xchg
jge
and
ret
and
in
sub
div
pop
repz
test
pop
testb
dec
mov
xchg
dec
dec
mov
or
in
pop
mov
scas
addb
dec
push
popf
and
into
pushf
push
fmull
movsb
loope
xor
mov
mov
xchg
inc
pop
in
nop
inc
xchg
add
and
mov
rorl
mov
bound
repnz
imul
aam
leave
cmp
jmp
imul
sti
stc
mov
stos
fs
scas
pop
and
mov
push
aas
dec
add
stos
jns
pop
mov
xchg
dec
xchg
pushf
add
scas
call
and
jge
out
lds
repnz
xchg
jno,pt
cs
mov
loope
jge
or
xor
int
and
fnstsw
xchg
pop
push
xchg
in
pop
ret
shrb
cld
iret
mov
push
mov
add
push
pop
sbb
mov
mov
shlb
pop
into
jb
cmp
dec
mov
int3
cmpsl
insb
mov
das
mov
cmc
in
movsb
mov
shrb
subb
xchg
lret
sub
scas
cwtl
push
sub
push
test
mov
stc
mov
rorb
inc
out
cmp
ljmp
dec
je
mov
jp
push
sbb
push
adcl
in
stos
fdivrs
stc
sbb
idiv
mov
loope
cmc
leave
jbe
divb
sbb
daa
xchg
sbb
sub
andb
inc
mov
insl
ret
sbb
sbb
lret
in
jns
or
adc
orb
mov
and
out
inc
xor
and
test
repnz
div
aaa
jle
jmp
or
pop
fsubr
and
loop
in
mov
pop
fisttps
je
cmp
or
mov
stos
daa
in
adc
push
sti
pop
cmp
xchg
outsb
int
repnz
in
mov
popa
andb
fld
sbb
ss
xchg
nopl
ret
mov
push
or
ljmp
dec
icebp
in
xchg
outsl
xchg
out
dec
outsl
fdiv
fwait
dec
stos
std
mov
or
loop
cmp
jl
sarl
movsb
scas
test
pop
das
sub
dec
loopne
repnz
imul
loop
faddl
push
push
adc
cs
adc
jne
mov
aad
mov
or
push
repz
pop
and
in
mov
jecxz
mov
push
loopne
add
mov
xchg
adc
stc
sub
jns
fstpt
push
push
mov
inc
fdivs
sbb
test
or
icebp
jae
das
xchg
cmp
ljmp
leave
fcoms
mov
adc
sub
dec
adcb
adc
pop
xor
testb
xchg
out
stos
jbe
xor
push
imul
xor
sbb
int
xorl
icebp
xor
xchg
adc
mov
inc
dec
add
cmp
pop
push
xchg
jmp
cmpsl
faddl
enter
ret
rcl
jge
jp
xchg
adc
imul
push
xchg
sbb
into
cmp
nop
sub
test
lret
pop
xchg
dec
jnp
push
and
dec
mov
mov
xor
enter
scas
jg
ret
lods
in
xchg
out
push
in
es
jl,pn
sub
adcl
xor
fwait
clc
push
pop
mov
mov
stos
out
loope
shrb
lret
ror
outsb
test
dec
xor
mov
mov
inc
or
sub
push
hlt
and
arpl
mov
loop
rcrb
test
rorb
or
push
sbb
sbb
xchg
mov
mov
ja
jb
mov
jo
out
add
insb
cmpsb
notl
jle
aas
loope
inc
push
mov
fwait
mov
jbe
mov
stos
inc
xchg
or
aad
pop
mov
xor
lret
lret
pop
push
push
in
jg
fs
int
xlat
pop
repnz
jmp
cmpsb
es
rorb
inc
popf
pop
in
int3
and
or
xor
mov
add
in
jp
aaa
push
xorl
rolb
push
inc
bound
inc
shr
lret
push
popa
add
movsl
cwtl
jne
loopne
and
jo
ret
aad
cmp
or
sbb
out
lock
mov
rcll
pop
nop
add
xor
mov
shl
mov
dec
dec
lods
in
in
dec
mov
popf
jno
rcrl
inc
pop
mov
fdivrl
jno
and
mov
fnstsw
xchg
or
out
cmp
pushf
mov
and
dec
add
and
xorb
in
dec
scas
and
ficoml
jle
push
sbb
dec
ljmp
es
xor
pop
jge
in
add
add
mov
data16
mov
lock
pop
cmpsb
push
lds
test
pusha
daa
sahf
add
inc
out
test
into
pop
mov
jg
push
leave
jae
mov
bnd
inc
cwtl
fnstcw
nop
gs
mov
pop
or
cmp
mov
jns
dec
mov
pop
roll
mov
sbb
ja
sub
xor
je
push
imul
and
clc
rclb
out
outsb
gs
pop
lcall
xchg
add
sub
or
out
xchg
inc
or
jmp
dec
fcmovnbe
push
cltd
outsb
sti
inc
pusha
fucomi
out
mov
adcb
jp
in
mov
rol
xchg
or
ret
fwait
sahf
mov
or
jp
jbe
addr16
fstps
mov
ljmp
pop
xor
ds
nop
aaa
mov
sub
cwtl
nop
dec
jb
push
mov
loop
sub
add
mov
lret
xor
mov
sbb
fildl
xchg
xchg
into
sub
insl
dec
and
in
out
inc
or
js
mov
adc
bnd
gs
xor
jmp
mov
pop
aaa
cmp
ret
lahf
xchg
cwtl
shrl
divl
sahf
jmp
test
mov
ret
jl
es
push
ljmp
push
add
mov
enter
and
pop
jns
loope
cltd
ljmp
dec
push
mov
mov
lret
mov
enter
mov
scas
adc
push
fsub
inc
sbb
pop
sbb
mov
dec
movsb
mov
enter
dec
inc
mov
jnp
mov
dec
inc
xchg
test
and
xor
aas
jnp
scas
fdivrl
div
or
xlat
ds
mov
out
cmp
popf
and
mov
sub
adc
adc
outsb
jnp
jae
sti
push
sbb
jg
pop
jl
or
inc
sahf
jne
sub
in
repz
xchg
filds
sbb
push
insb
mov
mov
mov
adc
sub
cmp
sub
mov
mov
cld
push
lret
addr16
xchg
leave
xchg
mov
xchg
jno
add
mov
popa
dec
mov
cmp
sar
iret
adc
daa
orb
and
xor
loope
outsl
cmpsb
jecxz
ret
loop
das
jmp
in
xchg
pop
and
fistl
inc
or
mul
fldt
fisttpl
icebp
add
imul
cmp
mov
int3
loop
cmp
adc
push
popa
add
inc
push
std
out
sbb
into
ljmp
movsb
mov
push
or
mov
xchg
fadd
push
divl
inc
lret
jg
lcall
daa
mov
out
pop
jns
fdivs
xor
int3
imul
movl
sub
sub
adcb
lock
push
and
out
fcoml
scas
inc
nop
pop
fbstp
pushf
aaa
mov
push
je
orb
loop
cmp
jecxz
test
jmp
and
ret
std
lret
repz
out
data16
rcr
xorl
daa
cmp
inc
cmp
stos
rcrb
mov
mov
mov
and
sbb
cld
popf
mov
mov
mov
mov
shl
push
mov
adc
xchg
daa
xlat
iret
sahf
jg
jns
mov
mov
sub
ficomps
xor
adc
iret
and
lret
mov
pop
mov
and
sbb
pushl
pop
loope
ljmp
popf
or
push
jae
push
aas
push
xor
fbstp
aaa
cs
jns
push
mov
pop
mov
inc
mov
imul
out
addr16
ret
insb
add
pop
sti
fisttpll
and
pop
sub
call
xchg
fldenv
mov
sbb
gs
xor
and
sbb
push
mov
sbb
ss
fxch
inc
insb
and
scas
hlt
cmp
mov
aam
out
inc
mov
or
push
sub
push
sub
std
xchg
notb
and
jnp
add
mov
pop
ja
adc
inc
lods
lods
add
shll
push
clc
fwait
jg
xchg
adc
insb
pop
xlat
push
lahf
add
inc
cwtl
cltd
dec
cld
add
xchg
xor
mov
sub
subl
pushf
int3
cmc
test
test
cmpsb
push
xor
int3
jne
orl
mov
adc
inc
xchg
dec
sbbl
cmp
iret
ss
leave
or
lock
stc
jo
push
call
in
pop
mov
xchg
jmp
aas
adc
inc
sub
push
lods
pop
dec
std
cmp
xchg
pop
lret
out
add
std
add
idivl
inc
or
mov
mov
jmp
scas
loope
test
icebp
mov
and
mov
cmc
adc
pop
ds
andb
popf
lcall
stos
add
ss
sub
into
fdivp
xchg
mov
sahf
or
shrb
lret
jmp
data16
mov
push
mov
ret
dec
sub
stc
push
bound
stos
push
jns
xchg
sbb
xchg
dec
dec
imul
cmpsb
mov
mov
jns
push
repz
dec
mov
loope
shrb
sub
dec
push
mov
pop
xlat
enter
pop
and
sbb
pop
and
aam
pop
fimull
inc
lods
arpl
pop
push
cmp
out
in
lods
jmp
xchg
push
enter
out
lcall
sti
cmpsl
sub
ficomps
aad
dec
arpl
in
popl
imul
fbld
dec
mov
jmp
inc
pop
pushf
xchg
xor
or
mov
mov
sbb
inc
cmc
ret
lahf
jbe
hlt
filds
adc
pop
pop
lahf
dec
punpcklwd
in
cmc
ja
shll
mov
inc
push
cmpsb
mov
aam
into
add
imul
xchg
sbb
and
inc
pop
lock
cmp
sub
mov
dec
sbb
lods
add
test
je
and
in
in
xchg
and
out
ficoml
pusha
push
mov
pop
sub
inc
or
push
pop
push
std
push
xchg
adc
loop
addr16
es
cmp
stc
mov
cmp
ret
insl
xor
jp
lahf
xchg
cmpsl
lods
xchg
jp
and
inc
jp
xlat
aas
cmpl
int3
mov
cld
jmp
adc
xchg
mov
dec
in
dec
pushf
or
xchg
je
cmpsl
fwait
aas
mov
add
xchg
in
sub
shrb
icebp
jb
dec
or
into
cltd
addr16
testb
cs
sbb
and
bound
hlt
stc
push
ret
adc
movsl
into
add
push
stc
push
inc
sbb
mov
add
xchg
dec
aad
shll
test
add
or
sbb
out
scas
ljmp
mov
adc
or
or
pop
adc
dec
mov
aad
data16
stos
xor
test
fcoml
iret
int
sarl
addr16
movsl
dec
lret
pop
loop
push
movsl
cmpsl
and
adc
shrl
push
jo
shrl
cli
dec
jp
cmp
cli
in
xchg
or
int3
or
mov
leave
sub
push
mov
xor
imul
pop
push
cmp
ja
sahf
push
out
ret
xor
fs
inc
pop
sub
and
repnz
mov
leave
std
inc
call
push
or
and
pop
dec
jbe
inc
out
cmc
or
outsl
dec
imul
sub
cs
shll
andb
mov
add
ret
mov
push
sub
ja
mov
inc
std
mov
add
dec
sahf
das
jo
or
insb
rcll
bswap
scas
out
lahf
mov
cld
inc
cmp
movsl
leave
push
jg
test
cmp
rcr
or
gs
add
out
sbb
pop
sbb
adc
sbb
and
adc
stos
jg
loopne
in
clc
xchg
popf
les
mov
lds
sub
jo
movsl
idivb
adc
pop
or
rcrl
daa
jge
push
hlt
add
cmp
push
or
lock
adc
pop
xor
sub
les
ficompl
lea
movsl
movsb
sahf
les
sub
rorb
push
insb
sbb
stc
test
lret
aaa
xchg
push
cmpsb
test
cmp
adc
cs
push
nop
pop
pop
xor
mov
ja
mov
cmpsl
aad
pop
adc
cmp
iret
test
pop
scas
dec
popf
inc
insl
xor
pop
js
test
push
adc
aaa
das
mov
cwtd
mov
dec
imul
ud0
add
fs
ficompl
xor
add
or
imulb
popa
xchg
das
xor
outsb
xchg
lret
sub
push
mov
sbb
aam
mov
je
or
sbb
inc
sbb
or
jno
add
mov
mov
mov
mov
dec
das
push
pop
push
cmc
dec
dec
cmp
push
mov
jns
or
scas
mov
and
hlt
scas
hlt
mov
fdivrp
jp
je
cmp
dec
loopne
push
daa
inc
or
mov
and
push
pop
in
mov
jge
sub
scas
and
fcmovnb
push
adc
pop
pop
daa
scas
mov
cmp
or
movsb
sub
mov
xchg
mov
sub
push
rorl
out
sub
push
xor
mov
testl
das
lret
dec
repnz
popa
dec
lods
addr16
push
mov
iret
fwait
jae
add
iret
fwait
pop
arpl
sbb
aas
nop
mov
mov
mov
fwait
sub
cli
in
inc
adc
lock
je
mov
nop
adc
stc
lret
and
adc
pusha
and
fdivrl
sar
or
cmp
adc
inc
stos
cmp
mov
cmc
gs
xor
repz
xchg
add
jecxz
jle
scas
jo
or
pop
xor
xchg
dec
stos
xor
cmpsb
pop
sub
xchg
add
or
xchg
inc
fdivl
dec
into
lahf
cmpb
mov
jae
mov
or
std
pop
leave
and
out
adcb
inc
daa
dec
pushf
push
in
and
push
mov
xchg
mov
in
ds
in
in
sbb
and
mov
aaa
jge,pn
data16
adc
in
sub
movsb
call
incb
adc
push
insb
cmpsl
movsl
inc
push
test
push
mov
test
xchg
mov
jg
in
mov
or
push
scas
lret
mov
pop
lea
leave
add
cmp
repz
jl
shlb
xor
dec
into
test
pop
adc
shlb
jae
jbe
scas
pop
xchg
fidivrl
mov
imull
or
mov
test
fsubp
in
daa
sub
mov
or
ffreep
test
insl
mov
pop
cmp
mov
dec
push
cmp
std
dec
scas
push
jl
fisubl
aam
sbb
add
clc
enter
mov
fwait
mov
mov
scas
cmpsb
mov
sbbb
adc
jnp
clc
xchg
pop
mov
push
or
repnz
xchg
sti
cli
imulb
aam
jne
xchg
mov
xchg
insl
pop
lcall
sub
jb
out
inc
mov
or
dec
filds
xor
cmpl
or
sahf
aaa
ja
stc
xchg
ja
dec
std
sysenter
xlat
dec
lahf
out
shrb
sti
mov
xchg
cmc
imul
in
xchg
lds
mov
cmp
loope
cmc
jo
jo
push
shrl
jbe
ret
rclb
mov
in
lret
ds
leave
mov
xchg
cmp
inc
outsl
imul
push
out
mov
mov
dec
test
mov
jno
sub
push
cld
mov
lret
std
xlat
xor
pop
aad
and
outsb
popa
mov
or
xchg
push
sarb
xor
jae
fidivrl
daa
sbb
jno
outsb
inc
push
sbb
lock
cld
add
mov
push
addr16
pop
mov
pop
scas
xchg
add
and
sarl
orl
mul
and
lods
dec
jnp
fld
dec
bound
cwtl
leave
test
xchg
pop
bound
pop
imul
mov
enter
cmpsl
jp
mov
xchg
fnstenv
stos
xchg
jns
test
iret
stos
out
fldt
loope
std
aaa
mov
mov
mov
das
sbb
mov
cmp
aas
sti
je
in
pop
dec
xchg
push
dec
jo
stos
pop
lds
mov
das
sbb
fcmovnb
mov
loope
xlat
cmp
rcrb
mov
mov
dec
xor
push
mov
mov
loope
notl
jecxz
out
sbb
cmc
movsb
insl
js
imul
popf
imul
adc
cmp
test
push
cmc
imul
push
xor
test
inc
and
mov
sub
cmc
call
dec
mov
std
or
je
loop
push
pop
nop
mov
out
loopne
sub
mov
push
mov
xchg
and
push
jg
callw
push
jle
mov
cmpsb
or
pop
mov
orl
ret
jns
xchg
enter
dec
test
xor
or
or
and
out
cmp
loopne
cmp
pop
pusha
in
dec
sbb
push
mov
cmp
adc
inc
sbbb
test
xor
imul
xchg
mov
mov
imulb
xchg
sbb
inc
rcll
sub
cmpsl
or
pop
push
shrb
cld
notb
cltd
cld
jb
push
xor
mov
sbb
imul
fsub
fsub
int
mov
dec
xor
xchg
mov
addr16
in
jp
test
idivl
fisttps
jo
push
scas
push
popf
ror
or
sub
sub
stc
inc
push
sbb
or
inc
imul
sub
xor
adc
mov
fwait
arpl
ja
test
outsb
xorb
xchg
jmp
in
shr
xchg
push
popa
sbb
mov
sti
inc
fldl
stos
xor
mov
mov
inc
dec
pop
pop
shll
cld
ds
cmpb
mov
mov
pusha
js
stc
or
movb
loope
or
scas
sbbl
lds
into
add
sbb
in
adc
xchg
icebp
pop
ljmp
je
mov
imul
out
pop
jae
pop
sbb
out
push
fcomp
or
mov
jecxz
cmpsb
fwait
sbb
or
adc
cmpsl
or
push
lret
push
dec
rorl
sbb
sbb
fs
xchg
jns
hlt
xchg
cmp
add
mov
movsl
adc
enter
test
les
mov
xchg
stc
and
mov
xor
push
jmp
icebp
ret
test
xor
pop
add
ret
mov
and
adc
mov
xor
mov
push
sti
fldt
insl
call
push
push
arpl
insl
das
dec
rol
push
orb
adc
ljmp
loop
xor
cmpsb
aaa
xor
scas
ret
xchg
in
add
sbb
dec
mov
into
mov
xchg
sub
pop
std
out
inc
sub
sub
popf
push
lret
fdivs
arpl
cmp
or
jae
icebp
add
fdivl
pop
xor
push
mov
cmp
out
aas
pop
push
lods
add
cmp
lock
adc
ja
int
dec
aaa
sbb
daa
adc
outsb
addr16
jns
add
stos
jo
xchg
fwait
aam
out
pop
inc
aaa
and
or
xor
movsb
mov
dec
push
and
imul
in
or
push
out
popf
jp
in
jecxz
mov
and
int3
or
xor
das
xchg
jo
clc
lret
scas
stos
in
dec
in
movsb
jp
ss
in
mov
rcll
mov
pusha
mov
std
lret
sbb
sub
mov
dec
in
rolb
shlb
loop
movsl
mov
hlt
push
shlb
cwtl
adc
mov
add
jmp
dec
movsb
mov
xor
inc
arpl
test
es
jno
addr16
pop
mov
imull
mov
mov
and
push
xor
or
imul
jp
xchg
sbb
in
es
or
and
out
dec
push
push
push
dec
mov
mov
cmp
clc
into
repz
sbb
shll
mov
push
jmp
and
dec
jno
lret
add
ja
fmul
or
and
sbb
push
push
xchg
sti
pop
test
or
nop
xlat
mov
sub
leave
and
pop
mov
dec
lahf
sbb
pop
call
loope
es
out
cmp
adc
xchg
sub
sub
sbb
and
sub
jb
decl
or
add
div
pusha
push
arpl
xor
jb
test
add
mov
into
shlb
mov
jecxz
ror
and
adc
js
jne
aad
xorl
xchg
repz
in
push
in
add
out
mov
dec
lcall
sbb
fisubrl
xor
mov
mov
addb
adc
mov
and
dec
test
or
dec
imul
sub
inc
xchg
inc
xor
lods
outsl
roll
leave
into
fmull
aas
xchg
mov
out
xchg
xor
sbb
add
xchg
push
rcr
mov
imul
lods
xor
mov
cmp
fldenv
pusha
jo
inc
sbb
pop
in
fcomps
or
dec
int
fldenv
test
mov
cmp
push
mov
jnp
rclb
jle
jmp
fs
mov
mov
pop
adc
rorb
xor
push
sbb
mov
out
rcll
sar
ja
std
fsubp
sub
icebp
frstor
pop
decb
or
lds
scas
sub
sub
jecxz
lcall
pop
imul
adc
outsb
insb
sbb
dec
fxch
lret
or
fcoml
xchg
dec
ljmp
adc
notl
add
mov
sub
cwtl
loope
jae
ficoms
rcrb
ljmp
mov
mov
xor
jmp
stos
mov
inc
push
inc
rclb
fs
add
mov
xchg
push
rolb
iret
dec
pusha
push
push
mov
enter
imul
mov
mov
lret
les
inc
loopne
xchg
mov
mov
outsb
int3
in
scas
mov
add
xlat
push
cmpsl
push
in
sub
adc
ror
add
hlt
dec
lea
mov
sub
ret
xchg
mov
jo
js
das
xchg
iret
xchg
jecxz
inc
fsubp
xchg
fstpl
xor
xchg
or
mov
sub
stc
lcall
mov
inc
jecxz
push
imul
cli
mov
jle
mov
loop
stc
inc
fwait
popa
xchg
orb
icebp
cmp
test
jb
scas
dec
cmp
iret
push
push
cmp
push
cld
xchg
mov
lret
xchg
enter
add
jne
pushf
fimuls
popa
pop
push
dec
jg
std
add
or
mov
in
add
in
inc
clc
add
mov
sahf
ret
lahf
ret
cmp
add
and
mov
lock
fildl
aas
adc
jg
iret
adc
clc
cli
ficoms
mov
cld
push
mov
in
outsb
mov
fstpt
imull
add
fldt
lret
sbb
jns
mov
fstpt
or
sbb
out
popa
sub
lret
sti
ja
cmp
push
cmp
lods
inc
shl
enter
inc
xchg
or
mov
imull
adcb
dec
lock
inc
xchg
add
in
leave
sbb
in
lea
inc
and
push
dec
ja
pop
mov
and
into
out
push
pop
ret
into
sbb
cmp
addl
js
push
jecxz
loopne
loope
sbb
int
leave
sbb
cmp
and
jg
lahf
popa
sub
pop
pushf
addr16
push
inc
outsl
inc
outsl
push
jae
push
and
mov
sbb
mov
adcl
xchg
sbb
pop
sub
dec
shl
push
dec
in
ror
jo
out
lock
adc
mov
mov
cmpsb
sahf
data16
int
sbb
inc
imul
cli
lret
push
cld
stos
sahf
sarb
xor
mov
xor
ja
lods
xchg
stos
mov
ds
rcrb
imul
sbb
inc
bound
pop
push
ss
mov
in
add
stos
push
adc
lret
cmc
xchg
rcr
push
lret
xor
iret
loope
inc
insl
imul
add
sub
push
aad
test
jae
rorl
jbe
xchg
jp
push
push
pop
popf
popf
les
std
inc
inc
stc
andl
jl
mov
movsl
fisttpl
sti
and
into
or
and
inc
pop
mov
test
fcompl
sub
pop
cmc
pop
ficomps
imul
aaa
push
mov
lret
aas
dec
cmpsb
jno
mov
cmp
int3
and
xchg
inc
cmp
divb
sarl
lret
movsl
cmc
and
fadds
nop
lods
xchg
push
xor
call
push
syscall
das
push
nop
pop
fdivl
or
sub
mov
adc
dec
andb
mov
test
or
pop
int3
neg
rcrb
or
outsb
imul
mov
in
xchg
flds
sub
imul
and
adc
andb
clc
pop
push
push
inc
js
lcall
jae
inc
icebp
loopne
inc
sub
and
sub
bound
xor
fiadds
aad
fildll
jmp
mov
pop
cmp
cmp
and
shrb
ja
push
push
push
or
test
data16
faddp
and
sbbl
jbe
mov
sub
and
notl
mov
fs
arpl
add
sub
and
cmc
add
ficomps
lret
push
jge
mov
aad
js
nop
ficoml
in
sbb
xor
cmpsb
in
mov
cmp
push
sbb
mov
push
fwait
dec
or
stos
in
cmpsb
add
inc
jne
push
inc
loop
mov
pusha
pop
lret
out
jmp
sbb
pop
mov
dec
ret
hlt
inc
xchg
mov
arpl
mov
aad
pusha
lret
dec
pop
add
push
adc
out
fistps
xchg
popa
movsl
jle
inc
add
rcrl
sarl
jne
pusha
push
or
shlb
dec
shrb
sub
cwtl
mov
out
inc
jno
or
mov
out
loopne
jb
stc
insl
or
push
sahf
xchg
sti
push
dec
xor
dec
mov
mov
dec
xor
notb
push
cltd
pusha
pop
jecxz
sub
jp
xchg
mov
loopne
mov
shrb
loop
mov
pusha
pop
in
jnp
pop
aad
les
fdivrs
jmp
cmp
jl
sar
and
fdivrl
stos
andl
cmpsl
xchg
jnp
adc
or
je
outsl
xchg
ljmp
ficoms
dec
sarl
sti
aas
fwait
pop
xchg
std
cmp
push
add
fs
cmp
or
mov
xchg
jmp
dec
fisubrl
shr
cmp
mov
addb
lret
or
cmpsb
jnp
dec
mov
push
andl
outsl
test
sbb
rol
out
loop
popf
or
arpl
daa
aam
add
neg
pop
mov
fisubs
or
in
out
xor
aad
pop
push
dec
pop
in
xchg
movsl
xchg
adc
mov
movd
cmp
jl
jnp
fldcw
mov
sti
mov
jmp
sub
imul
pop
cmp
shlb
mov
rol
adc
cmp
sahf
rclb
sub
in
lret
bound
xor
xor
popl
fadds
or
dec
inc
xchg
jo
jbe
pop
aad
data16
xchg
rorl
pusha
and
push
mov
movsb
dec
dec
xchg
lods
mov
insl
mov
lds
mov
loop
push
cmp
push
adc
repnz
rcrb
fistl
push
icebp
imull
ds
pushf
movsb
push
stos
ret
fstl
adc
pop
cmp
jp
subl
mov
dec
cwtl
test
xchg
push
cmp
mov
adc
enter
stos
dec
add
clc
neg
mov
add
stos
dec
xchg
dec
pop
mov
inc
es
insb
adc
push
mov
adc
lock
sbb
test
js
mov
popa
idivb
ror
scas
pop
insl
mov
loop
mov
xor
adc
lcall
loopne
jo
mov
stc
cld
daa
jle
fmul
xchg
or
in
lahf
dec
mov
scas
pop
jbe
xlat
sti
mov
xchg
add
popf
es
and
jle
iret
scas
test
pop
stos
loopne
scas
lea
sbb
sbb
inc
add
shll
jl
rcrl
dec
lods
ds
repz
pushl
ljmp
sbb
jge
das
jo
mov
pop
out
fdivl
imul
cmp
mov
sub
and
inc
and
push
scas
xchg
loope
loope
jmp
aam
gs
movsb
lds
insb
push
jmp
pop
loop
or
xor
xchg
cltd
cmp
push
mov
shlb
repnz
in
dec
lret
xor
lcall
push
xchg
popa
ret
fnsave
js
sbb
xchg
adc
frstor
jle
lcall
mov
add
adcl
shll
cwtl
bound
adc
negb
xchg
mov
rcrl
ret
add
movsb
ljmp
lods
test
and
ret
push
pop
xchg
add
rcll
out
mov
decl
rorb
outsl
push
adc
test
aad
mov
mov
jnp
test
daa
lea
jne
push
and
imul
push
jno
data16
insb
insl
test
add
stc
movsb
scas
jg
xchg
sbb
js
lret
xchg
push
clc
mov
pop
mov
inc
adc
mov
jmp
pop
push
pop
push
cs
dec
scas
ss
imul
mov
aam
jbe
xchg
jge
and
inc
cmpsl
cmp
add
mov
shrb
leave
pop
int3
lods
icebp
sub
add
out
dec
lret
lea
xchg
daa
and
je
outsb
cmpsb
xchg
pop
or
jle
insb
ljmp
or
jg
inc
popa
mov
cmpsb
inc
push
fists
xchg
out
nop
je
mov
sarb
fwait
mov
ja
push
dec
add
adc
mov
es
mov
rcl
inc
push
xor
dec
xlat
int3
or
jp
inc
pop
sbb
dec
mov
push
jbe
loopne
xchg
stc
xorb
bound
mov
inc
fsubr
gs
test
orl
inc
in
mov
adc
mov
push
movl
shrl
mov
fiaddl
ret
or
movsl
ja
mov
dec
xlat
mov
test
mov
lock
les
lahf
repz
dec
leave
cs
push
xchg
neg
adc
js
and
jbe
jle
pop
sub
adc
mov
adc
sti
fcmovb
andb
test
ret
fadds
or
fsubrl
or
sbb
popf
pop
fdivs
push
cmp
push
sahf
fisubrs
jne
repnz
sub
jp
in
cmp
insb
lds
out
scas
popa
lods
jno
clc
jge
clc
shlb
jle
push
repnz
lret
pop
push
jo
in
sub
sub
or
pop
xor
std
sub
lds
dec
jmp
sahf
cltd
adc
std
adc
in
mov
and
sarl
in
or
scas
test
mul
nop
outsb
je
sbb
movsl
push
movsb
imull
addr16
jmp
mov
cltd
scas
jb
movsb
je
arpl
mov
loopne
mov
mov
lsl
or
push
nop
sbb
dec
outsl
mov
inc
xchg
xor
loopne
mov
mulb
sbb
mov
mov
movsl
or
cmp
pop
dec
jae
push
test
mov
xchg
fstpl
mov
imul
push
movb
mov
jg
xchg
test
loop
iret
nop
adc
sarl
shll
sarb
xor
into
jbe
inc
mov
sbb
sbbl
mov
cmpsb
add
icebp
stos
push
mov
pop
pop
mov
inc
mov
ret
call
mov
cmp
hlt
xchg
push
repz
cmp
lock
ret
testb
sub
and
sarl
movsl
aad
pop
fistpl
pop
mov
ja
adc
repz
jae
xor
jns
dec
mov
xor
iret
dec
mov
daa
popa
mov
int
rcrb
cmpsl
pusha
ret
test
dec
in
addr16
xor
xchg
pop
mov
pop
xor
enter
lcall
test
ret
idivl
fmuls
mov
inc
ficoms
and
scas
push
cmp
jmp
dec
das
sbb
cs
pop
dec
loopne
cmp
pop
test
sub
pop
mov
push
insl
mov
jp
rclb
shrb
mov
inc
ret
data16
jle
daa
shlb
hlt
adc
stos
push
adc
repz
loope
ds
inc
push
jecxz
cmp
insb
lock
cld
jb
mov
sbb
push
leave
push
stc
push
push
std
aam
insl
xor
xor
mov
adc
out
ja,pt
mov
arpl
testl
pushf
mov
push
outsb
popf
pop
push
fistpll
aad
and
sub
pop
daa
cmpsl
xor
cmpsb
mov
jge
push
sub
out
dec
out
leave
xchg
sbb
pop
push
loope
aas
test
sub
sahf
jl
inc
cld
mov
add
int3
mov
jo
js
out
gs
ret
dec
ret
adc
dec
dec
in
loop
mov
ja
lret
mov
rorb
add
sbb
lods
and
dec
ret
pop
lods
lret
add
hlt
add
adc
movsb
mov
cmp
pop
cmp
push
sti
aas
imul
data16
divb
aas
insb
je
addr16
in
mov
adc
or
aas
mov
push
sbb
sub
inc
mov
icebp
inc
lret
cmpsb
and
jp
jle
jno
repnz
push
adc
shlb
mov
andb
outsl
inc
in
mov
adc
inc
mov
dec
cwtl
mov
xchg
sub
xchg
adc
int3
jbe
into
push
pop
sub
jnp
test
inc
mov
jbe
ss
pop
add
xor
out
das
jb
cmp
pop
sub
aas
int3
add
jae
out
stc
add
xchg
pop
in
pop
mov
or
sti
xor
mov
push
jge
mov
and
xchg
cltd
and
mov
cmp
scas
inc
imul
dec
push
dec
pop
jb
dec
xchg
in
adc
scas
inc
dec
adc
out
pusha
outsl
add
sbb
fcmovnb
mov
or
sub
mov
dec
cmpsb
lock
insb
pop
sub
mov
mov
pop
in
lret
mov
aam
mov
jbe
movb
cmp
aad
enter
smsw
int
jb
or
sub
notl
mov
adc
mov
pop
outsl
mov
mov
fwait
xchg
add
out
nop
jp
cs
stos
pop
ss
add
in
and
into
pop
orb
or
int
adc
push
sbb
cmp
mov
gs
mull
and
aaa
lea
enter
push
jns
push
insb
sub
stos
adc
loope
test
xchg
adc
mov
mov
xchg
shl
lods
sbb
pop
rcll
sub
mov
ja
push
lcall
out
push
dec
xorl
fs
adc
and
jg
jecxz
xchg
cmp
pop
adcl
aam
push
addb
xor
aaa
mov
xlat
lret
fidivl
lds
out
sub
jno
inc
inc
loop
mov
aaa
loope
stc
fs
or
or
pop
xor
decb
mov
rclb
push
dec
sbb
enter
add
jl
xor
ret
adcl
jns
leave
ss
or
je
outsl
sub
fwait
imul
jmp
and
sbb
movsl
jne
mov
xor
mov
cmp
lcall
cs
clc
rclb
imul
insl
pop
out
jno
dec
imul
cmp
je
cli
out
xchg
popf
or
cmpsb
dec
jge
mov
adc
jge
into
add
add
jne
xchg
pop
in
xchg
sub
jge
xchg
xchg
adc
out
sbb
ret
iret
out
cmpsb
adc
daa
lods
stos
scas
pop
sbb
testl
movsl
fs
or
lea
inc
loopne
push
and
fdivs
fidivl
sub
cmp
push
ror
or
push
inc
xor
add
sahf
arpl
mov
daa
out
xor
stc
and
in
cmc
push
inc
cmp
jno
call
mov
stc
into
testl
jb
ficomps
add
fiadds
cs
arpl
cwtl
push
outsb
cmp
xor
dec
cld
sar
jns
repz
loope
cmp
mov
fsubrl
mov
popf
out
les
fs
or
pavgb
sbb
mov
aam
dec
out
mov
or
popf
adc
sbb
pop
lds
jne
sub
jle
and
icebp
rcll
clc
cmp
push
lock
push
loop
insl
into
stc
jae
movsl
mov
test
or
aad
jo
in
dec
addl
imul
in
cmp
faddl
xor
pop
and
inc
es
les
xor
subl
mov
mov
mov
pop
push
or
cmpsb
cmc
sub
dec
dec
lods
add
out
sbbb
jl
dec
frstor
jecxz
ret
lahf
arpl
daa
in
data16
push
and
jle
push
and
sbb
dec
lds
rorl
daa
ss
push
mov
stos
stos
sahf
filds
cmp
xchg
test
sbb
fsubs
insl
inc
xchg
dec
inc
xchg
jo
xchg
inc
cmp
push
lds
enter
or
lock
popf
cwtl
adcl
xor
inc
lods
jnp
lcall
or
test
sbb
mov
adc
cwtl
jp
mov
and
cwtl
movsl
sub
movsb
bound
xchg
push
pop
or
es
test
cmp
cltd
dec
outsl
popf
pop
push
mov
cli
and
rclb
int3
lahf
cli
scas
mov
mov
and
inc
cs
fwait
or
cmp
adc
xor
ffree
fs
fcmovb
cld
ja
cmp
call
popa
jmp
and
fidivs
mov
ss
cmp
loope
adc
lds
ret
sub
sub
mov
pop
lret
fs
mov
xor
in
stos
mov
xor
outsl
or
jg
mov
jecxz
jmp
push
pop
fistps
aaa
xor
fmulp
mov
xlat
ret
stos
push
pop
ret
mov
jg
shrl
push
xchg
jg
mov
andb
popa
jmp
sbb
inc
ja
jb
int
or
hlt
adc
mov
add
mov
std
les
stos
and
jae
ret
xor
inc
into
out
cmc
in
mov
mov
aaa
mov
pop
adc
rcl
lds
mov
pushf
out
stos
jbe
add
cmpsl
jnp
mov
lcall
xchg
insb
aaa
pop
push
loop
sahf
test
stc
push
int3
jp
lock
mov
mov
dec
jae
data16
ss
push
rclb
sbb
lcall
mov
or
fidivl
push
adc
dec
insl
fs
mov
push
std
and
mov
mov
and
scas
out
test
or
mov
jnp
lret
mov
add
push
add
dec
insb
mov
fsubp
xchg
and
adc
jne
loopne
andl
sbb
mov
add
mov
push
or
mov
pusha
jae
dec
outsl
gs
and
stos
push
adc
loop
push
lahf
lea
xchg
push
idivl
enter
imul
mull
lcall
stos
pop
push
fstpl
loopne
mov
in
cmpb
xchg
mov
nop
shl
jbe
mov
out
pop
ret
mov
push
int
insb
or
imul
lds
mov
out
aas
inc
jno
push
jmp
add
sub
and
sarl
mov
movsl
adcb
inc
loop
sahf
adc
sub
lods
rcrb
mov
add
pushf
aam
and
gs
out
scas
pushf
sub
xchg
lds
stos
mov
dec
andl
es
mov
sub
adc
push
and
sbb
call
push
pop
dec
dec
pop
mov
loopne
xor
mov
sub
sub
sbb
ret
mov
and
push
pop
jo
rolb
mov
push
xchg
push
pop
fbld
lret
out
fldenv
shr
mov
cmp
jg
cmp
insl
movsl
repnz
in
aad
dec
out
jne
das
sub
stos
nop
xor
jge
scas
fidivl
imul
or
mov
sbb
or
jg
lods
push
and
jns
pusha
sbb
inc
jnp
jno
dec
xor
test
insl
cld
inc
sti
outsl
mov
and
cld
lret
fnstsw
mov
adc
mov
or
lea
xchg
lock
loope
mov
sub
int
sub
call
std
pop
inc
pop
popa
mov
mov
mov
xchg
cmpsl
daa
sbb
dec
xchg
xor
sub
cld
rolb
loope
jns
xor
arpl
jp
test
sarl
repz
add
xor
icebp
xchg
cmp
push
mov
loopne
rcll
add
push
int3
shlb
inc
fwait
stos
ficoml
das
je
jb
or
std
ret
pop
stos
cmpsb
cmc
dec
mov
movsb
inc
xchg
stos
xor
cmp
idivb
fistps
dec
out
pop
mov
cmpsb
je
mov
inc
js
nop
mov
ror
aas
xlat
rcll
in
sahf
fstpl
imul
pushf
cltd
orb
dec
mov
mov
sbb
aaa
ss
mov
dec
addl
push
cmp
sbb
std
inc
test
dec
adc
inc
inc
xchg
mov
test
enter
xchg
lret
stc
sbb
je
cmp
sub
mov
xor
pextrw
lods
mov
call
mov
mov
push
sahf
cwtl
pop
insl
popa
adc
popa
adc
loope
popf
xchg
imul
clc
cs
mov
and
mov
stos
mov
xchg
test
pop
popa
jmp
sbb
inc
push
mov
mov
insl
and
hlt
loop
mov
push
xchg
jecxz
jno
cmp
cld
movsb
push
cmpsl
mov
inc
pop
xor
mov
mov
inc
ret
inc
cltd
test
ret
ret
jbe
fwait
lods
stc
pop
test
push
mov
negl
xchg
leave
cmp
adc
sub
test
mov
cmp
outsb
jbe
bound
sub
mov
cmp
lcall
ljmp
int
ljmp
data16
push
test
loopne
imul
inc
pop
in
std
adc
xchg
sub
jp
cld
jno
ret
pop
iret
and
cli
dec
and
inc
xchg
sti
in
jle
mov
pushw
mov
pop
shll
popa
mov
mov
mov
jmp
jle
enter
loop
jo
incl
inc
les
les
mov
sbb
lock
shll
mov
test
and
sub
mov
shl
mov
push
mov
rcrl
inc
daa
inc
movsb
mov
stos
and
es
out
outsl
add
mov
aaa
cmpsb
dec
mov
dec
imul
push
xchg
inc
popf
cmp
sbb
and
lret
adc
pop
cmp
pushf
dec
mov
fisubrl
aas
popf
mov
sbb
sub
cmpsl
mov
xchg
pop
neg
adc
mov
call
push
and
fidivs
sub
push
dec
imul
mov
jb
pop
inc
sbb
add
sub
lods
jo
and
fwait
cli
cmp
lahf
pop
pop
jle
and
jo
adc
or
sbb
push
loopne
xchg
shlb
jge
fistps
stos
into
and
pusha
es
push
xchg
pop
test
mov
xchg
sub
ret
ja
bound
addl
ds
out
xchg
fmull
sahf
jg
and
stos
dec
jo
shl
jmp
loop
mov
or
cltd
pushl
mov
cmpsb
mov
or
jmp
lds
in
inc
add
sub
lahf
dec
loopne
jb
test
sar
sub
cmp
ja
mov
jge
inc
iret
pop
cmp
pop
push
push
mov
popf
pop
shr
mov
and
and
out
and
loopne
cmp
arpl
nop
adc
cmc
movsb
lcall
pop
ja
xlat
hlt
add
lock
cwtl
pop
add
adc
dec
arpl
pop
orb
sbb
xorb
mov
xor
les
je
test
or
stc
into
cmc
fs
popf
mov
sahf
mov
lock
adc
pop
cmp
fimuls
jns
xor
icebp
cmc
leave
push
mov
add
aam
adc
dec
aad
jo
mov
sbb
cmp
mov
xor
jle
sub
xchg
adc
decb
imul
mov
fildll
scas
gs
lea
cltd
push
add
jbe
xchg
lea
inc
out
mov
sar
cmp
aas
popa
or
mov
jne
cmp
pop
dec
cltd
mov
and
out
inc
mov
push
pop
jno
addr16
jecxz
push
scas
lods
cmp
mov
sub
sub
push
mov
dec
xor
lret
ds
insl
scas
lock
sub
std
stos
lds
pop
adc
outsb
jle
cld
movb
popf
mov
out
jne
xor
fnstenv
push
lret
xchg
imul
dec
or
fcmovbe
ljmp
cmp
pop
imul
jns
syscall
in
rorl
in
ret
data16
mov
pop
aaa
lcall
cmp
inc
vpaddsw
scas
in
or
outsl
out
stc
adc
movsb
mov
js
jl
aam
cmp
mov
push
jno
mov
xor
xchg
add
xchg
adc
aad
dec
iret
cli
mov
daa
in
outsb
out
into
xor
push
pop
push
js
xchg
rorb
out
or
das
push
mov
sahf
xlat
std
jne
rcrb
insl
push
inc
sub
icebp
or
popf
ret
xor
notb
loope
push
mov
shrl
ds
pop
lret
nop
ljmp
xchg
dec
mov
rorb
cmp
imul
and
cmp
pop
mov
or
daa
sbb
test
xchg
sbb
outsl
inc
jle
xchg
push
out
in
std
pop
out
cs
and
mov
lods
adc
sbb
dec
repz
jns
pop
mov
loop
arpl
cmp
mov
xchg
scas
daa
lahf
out
push
mov
cmp
ret
roll
adc
stos
scas
jae
lcall
xor
aad
stos
mov
popa
popa
lea
lret
mov
jae
lret
add
cmpsl
dec
test
cli
pop
push
xlat
test
push
inc
and
ja
int
pop
and
mov
popf
fptan
push
pop
sbb
das
jnp
sahf
add
sub
and
jl
out
dec
jb
cbtw
sbb
push
xor
mov
dec
repnz
daa
ds
jnp
fistpll
rclb
jb
imul
in
xor
inc
dec
inc
outsb
pop
sub
adc
imul
insb
subl
or
mov
push
out
insb
jnp
nop
cwtl
xchg
inc
nop
inc
mov
sarl
fsubrs
jbe
shl
repnz
movsb
sti
fadds
mov
addr16
addr16
outsl
idiv
jae
fld
sbb
dec
mov
jne
aas
ror
jnp
pop
push
les
jmp
les
shll
dec
imul
mov
mov
xor
xor
jns
pop
or
xchg
test
hlt
mov
and
and
fnstsw
inc
dec
cmp
xchg
lods
jl
call
mov
popf
xlat
adc
fwait
push
mov
lds
sub
aaa
sti
repnz
mov
shl
push
push
cmp
test
pop
bound
shlb
push
pop
pop
test
into
inc
jle
js
mov
fwait
cmp
ret
lahf
lcall
out
inc
lds
jl
mov
out
cmp
inc
shll
bound
adc
sub
mov
pop
ljmp
int
movsb
cmpsl
pop
aam
sbb
pop
incb
or
ret
mov
jne
adc
push
dec
xor
jae
mov
or
leave
and
sub
mov
insb
popa
testl
or
pop
or
repnz
jb
test
push
xchg
jns
add
loop
es
call
or
mov
cmpsl
in
fnstcw
push
incl
cmp
sub
pop
push
bound
push
add
jb
lods
loopne
cmp
je
repnz
and
aad
std
cltd
gs
xor
xor
or
fxch
dec
arpl
or
inc
mov
testb
xor
jp
lods
scas
jae
adc
adc
dec
jl
sbb
pop
cmp
xorl
out
iret
adc
sbb
jno
sbb
inc
mov
sbb
adc
lcall
fiaddl
mov
sub
push
cmp
hlt
cli
xchg
xlat
xlat
outsb
ds
icebp
xor
mov
push
adc
mov
je
decl
xchg
xchg
dec
sbb
mov
mov
mov
mov
mov
push
ret
add
cmc
xor
sbbl
into
xchg
out
cmp
xchg
lods
mov
scas
jecxz
out
dec
inc
pusha
mov
out
sub
adc
sbb
pop
insl
in
inc
sbb
jl
outsb
sbb
ja
scas
std
orb
inc
xchg
fldl
enter
or
neg
jmp
iret
int
fs
mov
cmp
push
jecxz
cmp
dec
xchg
call
fcom
mov
push
inc
pop
mov
sbbl
cmp
xor
cld
aas
in
das
das
add
mov
adc
xlat
pop
out
adc
sub
addr16
sub
lea
adc
clc
jo
adc
pop
xchg
rcr
dec
outsl
inc
xor
imul
jle
inc
cld
mov
or
movsl
sub
inc
push
jnp
pop
out
loopne
in
out
mov
xchg
imul
xchg
enter
push
mov
jo
push
loopne
ret
pusha
out
xchg
jo
jg
xchg
cld
adc
mov
push
leave
popf
cmp
sbb
test
lret
cli
js
jno
stos
out
mov
jle
pop
in
push
fldenv
test
adc
cli
mov
jmp
jne
jo
xlat
or
mov
iret
dec
push
pop
lea
ja
push
lods
outsl
jge
xchg
mov
int
jnp
lret
cmpsb
or
and
push
dec
andb
sarl
cmpsl
pop
popf
mov
jo
mov
loope
mov
ret
shr
mov
add
fisubrs
fistl
mov
adc
jnp
mov
lods
fcomps
pop
popa
or
jecxz
fs
orb
shll
and
pop
bnd
mov
dec
inc
lods
ja
push
mov
xor
mov
pop
mov
lea
xor
dec
shr
jne
mov
push
mov
mov
iret
xlat
dec
mov
mov
movsb
pop
lods
or
mov
mov
cld
sti
scas
mov
das
dec
xlat
or
mov
xor
xchg
and
sbb
sub
out
jmp
outsl
dec
sbb
and
jb
jecxz
jge
jmp
movsb
out
cld
cld
sbb
adc
and
dec
in
aaa
cmpsl
mov
sub
pop
inc
mov
outsl
jb
fiaddl
cltd
lds
inc
sub
in
insb
je
inc
jno
shrb
add
enter
fidivrl
push
aad
xchg
mov
add
adc
adc
cmp
adc
adc
lcall
js
lds
ret
inc
fwait
adc
xor
repz
cmp
in
repz
xchg
arpl
les
call
and
pusha
xchg
daa
stos
das
jo
mov
sbb
faddl
aad
sbb
in
adc
and
add
fstps
adc
jbe
icebp
sub
mov
lods
call
imul
imul
or
mov
sub
sub
pop
sub
push
adc
outsl
mov
jbe
sub
clc
dec
xor
pop
insl
xchg
or
inc
sbb
jl
pop
or
jns
pop
xor
jnp
test
xchg
rclb
cmp
xor
xlat
test
jno
push
pop
imul
ret
push
inc
decb
dec
add
iret
adc
inc
jmp
divl
cmp
aam
xor
sti
pop
into
ret
mov
sbb
pushf
push
pop
fistpll
lahf
loope
and
xor
call
adc
xor
repz
adc
xchg
loopne
fiadds
xchg
pop
or
movsb
popa
push
mov
gs
mov
add
cmp
sub
mov
pop
dec
cmp
cmp
jmp
cmc
test
shll
icebp
adc
push
add
lds
out
rcr
cmc
sbb
call
out
jmp
pop
dec
xor
or
pop
jecxz
pop
xchg
shl
pop
or
inc
les
in
push
stos
adc
fnstenv
leave
mov
ja
and
cltd
daa
xchg
fsubrl
or
or
inc
xchg
mov
adc
in
xlat
push
pop
mov
push
lret
dec
pop
or
gs
mov
jge
jge
ja
mov
add
xor
mov
daa
adcb
sbb
cmp
cmp
inc
and
in
cltd
testl
addr16
shl
ss
or
into
xor
mov
cmc
loopne
std
adc
jg
mov
and
outsb
jnp
inc
xchg
mov
loope
imul
push
rcr
inc
cmpsb
sbb
cmp
mov
cmp
in
pop
sbb
xchg
mov
and
push
or
inc
xor
arpl
cld
add
xor
cmp
mov
je
pop
daa
out
push
mov
mov
divl
in
lea
mov
cld
test
mov
repnz
xor
gs
enter
pop
adc
dec
es
add
dec
inc
loope
inc
jle
imul
dec
negl
sti
arpl
mov
mov
pop
inc
or
inc
mov
test
inc
jb
mov
data16
jle
orl
fsts
fs
push
dec
jo
and
ja
mov
sbb
jbe
add
pop
inc
aaa
cltd
jle
push
mov
push
aam
and
cmp
lcall
or
je
and
lcall
mov
xorb
inc
arpl
cmc
mov
in
nop
mov
mov
sahf
mov
mov
in
mov
cld
adcb
fstpt
out
pop
imul
push
pop
sbb
pop
dec
lcall
popa
jle
adc
cmp
jmp
ficompl
andb
repnz
mov
loopne
ret
sub
cmpsl
mov
sbbb
test
sbb
mov
andb
jo
push
add
adc
lods
popa
mov
cmc
mov
mov
fsubl
add
pop
mov
hlt
push
rclb
repz
addr16
add
scas
dec
mov
push
ret
lcall
int3
cmpsb
cmp
and
addr16
mov
fwait
inc
cld
push
sub
mov
mov
fldenv
push
repnz
outsb
ljmp
std
and
out
mov
cli
addr16
daa
outsl
lods
je
push
lcall
out
push
data16
jp
mov
push
or
adc
aas
xchg
scas
out
mov
aam
test
jge
sub
jmp
and
call
lea
imul
sub
lret
pop
jp
pop
dec
test
ret
js
ret
xchg
dec
sbb
fucomp
aas
enter
pop
xor
stos
js
sub
movsb
aad
stc
ljmp
pop
popf
js
in
sbb
mov
cli
test
enter
clc
outsb
invd
jge
push
pop
shll
mov
jge
or
mov
mov
push
ret
xor
int
jno
insb
xor
rcr
add
push
xor
lea
sbb
xchg
mov
stc
pop
mov
jecxz
sbb
in
pop
mov
out
sbb
shl
popf
fisubs
mov
std
in
pop
loop
test
sbb
aas
lret
fs
out
imul
sahf
and
inc
sbb
sti
xor
inc
adc
mov
loopne
in
cld
push
test
ja
push
lods
or
push
or
or
mov
and
push
sahf
cld
std
icebp
cmpsl
lret
pop
nop
add
sub
xchg
aad
push
xor
mov
xor
nop
push
loop
scas
pop
cmp
dec
adc
push
pop
mov
enter
shll
lods
xchg
mul
out
mov
adc
testl
mov
js
mov
adc
mov
xchg
lock
sub
bound
jmp
cmpl
pushf
push
out
loopne
shl
and
cmpsl
lret
jge
leave
cmp
dec
imul
idivl
cs
inc
roll
in
adc
rclb
xchg
imul
inc
out
jp
cli
adc
cli
out
call
aam
rcll
std
cmpsl
dec
lds
mov
xchg
xchg
pop
add
inc
ljmp
push
pop
xchg
xchg
fidivs
cmc
pop
cmp
mov
jl
bound
inc
mov
pop
and
sti
insl
ror
repnz
push
ficomps
pop
xlat
adcl
movsl
or
cmp
pop
xchg
js
mov
cmp
popf
pop
sub
xor
std
ret
sbb
stc
and
ja
xor
sti
pop
mov
mov
movsb
pop
aaa
int
adc
data16
and
or
inc
scas
and
adc
pop
out
mov
sbb
cmpl
cmp
fcoms
push
cmp
cmpsb
pop
or
dec
mov
repz
dec
rclb
mov
and
pop
xchg
sbb
xchg
pop
sbb
jmp
out
xor
xchg
imul
sbbb
rcrb
lcall
mov
call
ja
dec
pop
and
ljmp
out
lock
das
push
data16
cli
shl
std
je
mov
xchg
adc
popa
mov
cmp
and
jo
add
cmp
nop
xor
insb
data16
and
aam
push
xchg
in
inc
mov
jae
shll
movsb
mov
mov
std
loop
pop
sbb
adc
cld
mov
loope
arpl
mov
movl
jne
pop
push
enter
testb
adcl
pop
xor
inc
sub
test
cmp
jg
mov
dec
in
stos
pop
dec
idivl
jg
cmp
mov
mov
insl
lea
cmp
jno
add
or
sti
inc
or
dec
jns
aaa
jmp
fs
mov
popf
addr16
out
add
cmp
push
fwait
js
jae
iret
mov
jo
pop
pop
frstor
out
dec
push
jg
movsl
lods
mov
xor
jb
pop
out
daa
push
jp
leave
mov
sub
adc
jae
jo
daa
cltd
cli
xchg
mov
jo
movsb
xchg
jno
and
lods
xchg
mov
pop
aam
mov
or
aad
sub
icebp
jmp
imul
leave
daa
subl
popf
mov
fldt
mov
push
inc
cli
repz
pop
or
aad
inc
sbb
sbb
cltd
fisubl
push
fsubr
cmp
dec
leave
imul
pushf
aas
jle
loopne
xchg
xchg
or
mov
jae
xchg
mov
mov
jo
adc
fdivs
jp
int3
mov
push
faddl
movsl
inc
xchg
movsl
mov
and
into
and
dec
lock
leave
test
push
mov
js
es
add
das
xor
and
push
out
js
mov
mov
test
inc
fnsave
hlt
inc
push
sbb
or
mov
mov
orl
cmp
mov
sub
out
push
inc
ss
add
jne
xor
jp
jmp
mov
jge
jecxz
test
test
popa
mov
es
cmp
ret
xlat
out
aad
mov
insb
jl
aas
push
mov
push
push
test
and
jne
popf
dec
mov
hlt
ficoml
adc
jge
test
lods
lods
test
fimull
push
sbb
lods
dec
fstpt
jle
lcall
cmpsl
xchg
mov
and
dec
out
sub
sahf
rcll
push
aaa
ljmp
clc
in
mov
addr16
pushf
aad
inc
pushw
pop
mov
sbb
add
lret
pop
sbb
inc
cmp
sahf
and
and
push
insl
xor
inc
call
mov
or
popa
sbb
sub
xor
imul
push
mov
leave
sbb
push
cmp
sbbl
ja
push
movb
scas
and
test
cwtl
pop
imull
into
lret
mov
jbe
push
xor
xchg
add
dec
and
cmp
inc
test
pop
scas
and
cmpsb
push
pushf
dec
mov
push
mov
cmp
sbb
push
jae
add
pop
fistl
or
jp
jg
mov
and
stos
and
bnd
jnp
rcl
cmp
cmc
call
pushf
or
jp
cs
je
arpl
lcall
cmp
mov
add
push
jno
out
fildl
cmc
push
scas
xlat
lods
addr16
aaa
adc
sbb
sti
push
xor
lea
lods
jns
inc
insl
pause
ljmp
sub
mov
push
imul
inc
mov
adc
xchg
and
inc
fwait
mov
test
pop
mov
or
pop
cli
inc
sub
mov
pop
aas
shll
fldenv
xor
jb
decl
xor
xor
je
adc
test
mov
and
sahf
xchg
adc
mov
cmp
dec
notl
lock
pop
in
or
aam
rclb
nop
sbb
shll
ret
dec
gs
inc
std
daa
stos
test
cli
mov
jno
cmpb
adc
add
lock
dec
dec
mov
pop
sub
mov
and
push
pop
jmp
mov
pushf
test
arpl
mov
add
dec
cmp
mov
jns
jp
mov
add
lods
adc
dec
leave
sbb
mov
pop
xor
sbb
pop
adc
pop
iret
sbb
and
adc
loop
adc
aaa
out
xchg
mov
adc
inc
xchg
xchg
pop
sahf
ss
int3
push
test
and
mov
or
out
pop
mov
mov
push
and
ja
dec
or
pushf
mov
popf
jo
rcrl
out
stos
fnsave
inc
pusha
addb
jno
movsb
lret
xor
push
int
filds
sbbl
push
movsb
pop
mov
hlt
pushf
add
and
rcr
call
jnp
mov
push
or
add
lea
dec
rol
pop
outsl
fmul
stos
jl
pop
jb
mov
shrb
and
cmpsl
aam
into
push
xlat
leave
insb
ja
push
in
mov
sti
les
js
xlat
sbb
add
mov
jge
push
aas
inc
push
dec
dec
xor
adc
sbb
test
add
mov
mov
push
addr16
adc
push
xchg
xchg
into
je
movl
pop
or
fstl
ret
adc
xor
fmuls
inc
dec
push
push
push
jge
jnp
inc
or
aas
js
lret
out
popf
cmp
imulb
mov
jmp
xchg
cmpsb
cmpsl
out
psubb
jo
dec
enter
push
js
dec
je
fdivrp
out
repnz
das
clc
adc
dec
sarb
sbb
ret
sbb
out
pop
inc
jmp
in
mov
out
pop
mov
mov
imull
sub
rcrb
jmp
es
int3
xchg
out
aam
mov
lea
inc
and
lods
enter
or
xor
adc
cmp
adc
xorl
mov
cltd
in
mov
jecxz
mov
imul
or
lock
cmp
fdivrs
stos
adc
cmp
xor
pop
mov
ljmp
mov
sbb
adc
jg
sbb
pop
in
push
xchg
xor
out
insl
aaa
push
into
aad
adc
jns
ds
in
sbb
and
add
fidivl
xchg
sti
aad
adc
push
sbb
lret
adc
out
mov
mov
std
sbb
jecxz
dec
mov
lods
popa
mov
jmp
cmp
rorb
mov
pop
in
jge
adc
mov
and
mov
test
push
or
in
mov
push
movl
dec
mov
dec
dec
stc
fists
xchg
or
mov
out
ret
rolb
sub
or
es
mov
dec
jp
jno
mov
add
mov
pop
loop
cmp
rclb
notl
or
jb
out
cmc
mov
aad
mov
shll
jno
lcall
sbb
mov
pop
insb
in
sar
pop
cltd
mov
jp
adc
mov
pop
xor
pop
adc
shrl
adcl
in
pop
add
popa
in
add
xor
outsl
pusha
mov
and
xchg
ficomps
push
xchg
push
lock
cmpsl
sbb
jb
in
xchg
adc
adc
scas
pop
inc
xor
push
in
inc
rcr
lods
out
sbb
mov
test
jb
data16
rol
int
in
out
mov
cmpsl
pusha
cwtl
fwait
ja
dec
fidivl
push
sub
add
insb
incl
stos
flds
es
xchg
push
lret
jp
mov
and
repnz
add
mov
pop
cmp
mov
cmp
das
enter
lods
mov
adc
arpl
in
sbb
dec
pop
sarb
push
gs
inc
pop
xor
xor
jno
ljmp
add
sahf
jo
stos
insl
das
xor
jp
sub
inc
outsl
sbb
push
pop
std
scas
test
int
xor
dec
fimuls
push
inc
pop
fdivl
xchg
les
sub
fimuls
cld
popf
aaa
jnp
jle
mov
lods
add
pop
mov
addr16
lret
dec
cmp
clc
or
fistpll
es
shr
jb
jnp
dec
and
inc
stos
mov
fs
lods
das
add
lcall
test
iret
jbe
mov
fdivrs
push
hlt
aam
mov
pushf
push
add
repz
in
and
cs
std
xlat
leave
insb
das
rorb
rol
testb
mov
stos
test
xor
jmp
xchg
je
loope
sbb
fs
lea
sti
lods
dec
movsl
cwtl
insb
fxtract
mov
fists
dec
mov
mov
mov
je
sub
in
popl
sbb
pop
xchg
add
insl
test
pop
cmpsl
mov
xorl
jp
jp
inc
pushf
xlat
mov
sbb
sbb
xor
shl
lds
xor
icebp
scas
subl
xor
pop
cmpsb
cmp
mov
nop
xlat
cmp
mov
jg
ret
rcrl
sti
push
or
cld
or
add
scas
jns
iret
arpl
cltd
jl
mov
repnz
mov
roll
fdivr
fisubs
push
mov
movsl
aaa
cli
cld
mov
and
jg
orl
int3
test
popf
insb
fldenv
and
push
jne
dec
add
rclb
pop
cmp
sbb
xor
jl
sub
and
stos
cmp
movsb
cmpsb
sbb
fmull
jg
sbb
add
inc
repnz
sarl
push
jecxz
jp
sub
insb
mov
xchg
and
push
cwtl
jbe
or
jo
xchg
sbb
cmp
inc
loope
lahf
and
icebp
data16
push
sub
pop
addl
and
ss
cmp
clc
negb
lret
das
inc
out
and
mov
sbb
cld
and
aaa
cltd
mov
test
cmp
jle
fldenv
mov
movsb
and
cmpsl
ds
dec
pop
mov
mov
or
insl
pop
out
andb
test
js
cmpsb
outsl
aas
out
push
mov
cld
ds
mov
mov
or
pop
das
es
pop
into
push
outsl
in
mov
hlt
dec
adc
lret
jl
jbe
push
pop
xor
and
sbb
mov
daa
or
lret
rol
mov
ror
adc
sbbb
ret
jno
adc
mov
fimull
xchg
lds
add
inc
cmp
and
push
test
rcrb
lcall
mov
aaa
loope
mov
idivb
mov
aaa
bound
adc
mov
lods
roll
push
gs
xor
mov
xor
icebp
nop
jno
scas
nop
dec
sub
sbbb
scas
les
cmpsb
cmp
in
ljmp
mov
mov
movsb
cmpsb
das
push
rolb
cmpsl
lods
scas
clc
sarl
jno
movsl
pop
add
pop
cmp
es
daa
sub
test
iret
fnstsw
mov
cmp
adc
pop
mov
dec
jno
insl
pop
int
or
mul
push
subb
inc
lock
std
pop
mov
cmpsb
leave
imul
test
inc
xor
cltd
xchg
jne
or
out
mov
test
xchg
fprem1
stos
push
mov
sarl
lock
push
and
les
pop
add
xchg
ja
jecxz
cmp
pop
jp
dec
xor
iret
mov
addb
xchg
pop
sbb
or
sbb
jle
aam
std
lret
ja
insb
pusha
cmc
pusha
push
mov
mov
xor
inc
loopne
inc
adc
lcall
das
add
push
jle
push
aad
ds
lods
lret
loopne
mov
stos
jb
dec
test
movsl
sarb
jmp
rolb
cmpb
xor
test
ja
pop
xchg
push
inc
jns
fmuls
mov
orl
mov
mov
cmp
je
sbb
out
js
sbb
es
ja
inc
ret
and
xadd
and
adc
fisttpl
sub
sub
ss
mov
ds
push
scas
or
mov
pcmpgtd
lret
xchg
test
jo
sub
ss
pusha
mov
add
jl
insl
aaa
shrb
jb
in
fpatan
xchg
mov
jnp
rclb
push
inc
in
cmp
push
push
sub
push
lods
into
mov
mov
cmc
and
inc
adc
loop
je
imul
shll
in
xor
jnp
push
pop
fcoms
adcl
jge
xchg
stos
add
rcl
frstor
lahf
add
mov
sbb
cmp
jp
fnstenv
dec
xchg
addr16
cld
push
xor
jno
lret
jp
loop
push
popf
cltd
imul
in
and
adc
adc
push
ja
in
or
out
mov
xor
push
sub
aaa
and
xchg
or
out
and
dec
adc
outsl
das
incb
push
mov
cmpb
xchg
dec
dec
sahf
cmpsl
push
cs
or
aad
enter
shlb
lea
push
movsl
test
mov
mov
jns
add
clc
jecxz
pop
and
cmpsl
add
insb
or
sub
fwait
sbb
inc
add
fistpll
sub
inc
outsb
inc
jno
xor
mov
cmp
dec
pop
out
gs
sahf
cmp
adc
push
or
iret
stos
lea
inc
loopne
mov
sub
sub
je
push
scas
dec
fucomip
cmp
xchg
cmp
inc
or
sbb
lds
scas
in
bound
iret
pop
xchg
fisubrl
cmp
add
mull
push
clc
mov
jle
jmp
and
movsl
aam
lcall
int
push
pop
es
pop
mov
in
inc
test
cmp
and
in
test
cmp
pop
mov
xor
jb
push
lods
sbb
mov
mov
mov
or
jecxz
insb
mov
xchg
lods
iret
in
sarb
dec
pop
das
push
fcoml
and
add
xchg
mov
popa
mov
mov
xchg
stos
sahf
adc
cmc
into
test
lret
stc
or
cmpsl
or
sub
xor
inc
push
stos
mov
mov
cmp
cmp
mov
je
jno
xchg
mov
pop
mov
aad
mul
sti
mov
lahf
push
mov
in
and
popa
je
jmp
pusha
pop
sti
push
sub
xor
in
adc
mov
int3
fisttpl
and
pop
add
jo
aam
dec
pop
lret
xor
mov
fs
and
push
fisubrs
std
dec
cmp
inc
lret
jl
cmp
sbb
daa
mov
test
movb
adc
in
shlb
and
lods
and
inc
xchg
ds
push
outsl
dec
sub
mov
sbb
ds
dec
sub
xchg
adc
stos
push
dec
repz
fldl
mov
stc
cmp
ss
and
dec
outsb
pop
fldl2e
mov
add
xchg
fwait
into
jg
ss
inc
ret
int
dec
movsb
out
jmp
inc
jl
or
imul
xchg
sub
xor
xor
cmc
add
sahf
sub
cmp
aad
stos
pop
movsb
add
cwtl
jl
je
mov
ja
scas
sub
icebp
sub
es
adc
mov
pop
dec
mov
sub
cmp
test
mov
cmp
mov
inc
xchg
xor
pop
int
cmp
jno
cli
das
push
xor
loope
lahf
push
jge
les
out
cltd
ret
dec
sbb
fs
fistl
xor
add
sub
add
or
cmpsw
aaa
outsb
icebp
jmp
cmp
pushf
sar
enter
cli
ror
xor
stos
adcb
xor
cmp
insl
inc
dec
aaa
pop
pop
dec
ljmp
repz
jnp
in
inc
dec
add
fwait
xchg
pop
sarl
mov
not
jb
sti
jl
aas
pushf
aaa
add
pop
jae
test
ss
inc
inc
xchg
repz
clc
adc
outsl
and
xor
jae
and
dec
ds
and
cmp
into
add
mov
shlb
jbe
fdivrs
lret
jo
stos
push
xchg
pushf
iret
cmpsl
dec
emms
inc
mov
aam
and
inc
sbb
test
orb
cmpsl
jne
push
mov
cmp
loopne
xchg
mov
lfs
inc
mov
push
aaa
inc
mov
add
iret
add
int3
pop
cmpsl
fwait
adc
aam
shll
adc
setae
xchg
and
fs
pop
add
loope
loop
push
fbld
mov
pop
lods
lock
imul
stos
xor
sahf
inc
jg
cmp
neg
adc
stc
cmpsb
and
outsb
scas
cmpsb
xor
into
jne
jbe
dec
xchg
fisttpl
jmp
inc
outsl
movsl
repnz
pop
hlt
mov
loop
stc
mov
jle
aam
mov
add
sub
repz
pop
xchg
ficoms
jno
out
imul
pushf
adc
push
pop
je
stos
sbb
aad
sub
push
rcll
and
pop
xchg
into
out
lret
fmuls
shl
and
mov
or
sbb
cltd
sbb
lcall
or
lock
test
mov
dec
or
dec
mov
jno
jne
sub
or
pop
jg
mov
or
lea
arpl
mov
rcll
out
imul
mov
sbb
add
and
add
mov
sub
inc
sbb
sub
aas
sbb
lret
outsl
in
subb
out
stos
sub
inc
movl
add
data16
inc
and
inc
addr16
or
inc
shll
cltd
jnp
mov
cmp
mov
scas
insb
jmp
xor
jmp
ljmp
aad
xchg
inc
sbb
xchg
daa
imulb
xor
inc
jno
cmp
or
xchg
adc
js
or
add
out
cmp
mov
and
mov
add
js
push
xchg
shrb
lahf
sub
cmp
cmpsl
iret
stos
mov
mov
jecxz
out
jmp
jb
aaa
mov
push
or
mov
out
and
std
push
mov
or
js
test
lds
test
aam
add
pop
mov
sub
xchg
imulb
in
pop
push
mov
loope
sti
out
fdivrp
insb
pop
xor
pushf
cli
mov
pop
add
aam
or
mov
inc
fsubr
jne
loope
cmp
stos
push
addr16
push
hlt
xchg
stos
ficompl
mov
test
ss
inc
mov
rolb
scas
inc
or
shrb
ljmp
or
xchg
rcll
popa
add
mov
add
sub
pop
pop
mov
cmc
mov
data16
iret
movsb
jle,pn
xchg
std
in
pop
sarl
ljmp
aas
in
pushw
out
push
add
cwtl
xchg
xchg
xchg
inc
int3
or
sub
test
or
cmp
outsl
mov
fsts
je
xor
aas
insb
dec
jg
repz
fistpll
sub
mov
pop
mov
lock
jg
js
test
mov
mov
mov
cmp
mov
loope
mov
pop
cld
pusha
xor
add
dec
fcmovb
and
push
shrb
mov
rclb
cmp
and
clc
dec
fsubrl
sbb
push
and
stos
insb
or
daa
jae
cmp
stos
dec
pushf
push
hlt
loopne
fildll
push
fs
or
pop
mov
mov
aaa
lcall
adc
jmp
insb
mov
push
fistps
test
lret
aad
fidivrs
pop
push
aaa
sahf
xchg
mov
xor
in
fadd
xchg
xor
inc
pop
divb
out
push
mov
stos
cmp
sti
pop
jg
cmp
lea
mulb
dec
jae
das
or
xchg
lret
mov
ret
iret
inc
icebp
out
push
mov
mov
or
popf
ret
xchg
jge
adc
fcompl
mov
and
mov
cmpsl
je
mov
pop
sbb
dec
inc
insb
inc
scas
mov
mov
jmp
mov
push
in
enter
jge
inc
ja
andl
jg
inc
cmpsl
addb
jle
inc
fildl
scas
pop
call
lret
push
cmpsb
fcmovu
test
jo
lahf
enter
jmp
stos
jl
jp
adc
int
mov
mov
iret
rcrb
in
out
mov
gs
pop
or
por
and
mov
hlt
pop
mov
mov
inc
jnp
ret
div
test
lods
std
daa
mov
shrl
data16
sub
push
or
push
mov
add
xchg
adc
jns
mov
adc
mov
nop
adc
aaa
dec
out
fs
xlat
ss
xor
pop
mov
movsb
cmp
roll
dec
mov
pop
cwtl
dec
shl
jnp
pop
dec
jg
sbb
ss
test
xchg
or
sbb
hlt
jl
or
sti
jb
adcb
cli
outsl
xor
loopne
dec
fdivs
mov
or
out
std
andl
je
sbb
or
test
in
lahf
and
mov
xchg
jmp
in
xor
xor
sub
sti
or
int3
jno
push
pop
daa
notb
out
in
cwtl
ret
dec
sbb
fiaddl
loop
xchg
fxch
hlt
mov
or
aam
mov
int
sub
mov
je
jecxz
fsubs
sar
jmp
cs
pop
stc
dec
pop
or
js
cmpsl
or
lret
pusha
jbe
dec
roll
movsb
aaa
and
mov
or
stos
addl
mulb
xchg
aaa
inc
lret
insl
negb
orl
xlat
mov
lret
inc
cs
cmpsl
into
clc
lcall
dec
lahf
mov
dec
subl
mov
cmc
xchg
in
lret
lods
mov
faddl
sbb
jb
adc
es
sub
mov
stc
aaa
cld
pop
xor
add
or
repz
ficomps
movsb
call
and
and
fwait
stos
jmp
lods
and
mov
sub
mov
fsubl
aam
out
enter
or
mov
test
xor
in
dec
iret
inc
cmp
hlt
cltd
sbb
nop
inc
and
leave
add
scas
or
dec
mov
jge
cmc
ss
mov
pop
js
and
icebp
jnp
in
mov
mov
mov
jbe
shll
ret
popf
pop
sbb
rolb
mov
cltd
or
xor
leave
pop
ror
adc
ret
in
fistpl
and
jae
cmc
mov
mov
jl
and
jle
inc
scas
test
lock
mov
shrb
bound
pop
cmp
jp
int
testb
jo,pt
jg
pop
xchg
div
call
fs
fstl
pushf
test
inc
xor
imul
mov
ret
push
dec
mov
jge
ja
xor
jno
fidivl
add
xchg
or
test
push
loopne
nop
lea
leave
xchg
movsb
xor
inc
jns
in
shll
inc
fbstp
push
mov
push
mov
lea
or
pop
push
sub
mov
out
push
cli
outsb
das
adc
add
fcoms
aaa
jnp
stos
sub
push
adc
ds
loop
pop
adc
repz
cmpsl
rolb
jne
jae
pop
lea
and
xor
cmp
out
pop
mov
and
pusha
dec
jecxz
fdivrs
or
dec
sub
xchg
push
icebp
xor
ror
iret
sarl
in
cmp
imull
adc
das
mov
mov
decl
test
repnz
pusha
push
mov
and
int
push
outsb
ss
lcall
jne
add
mov
adc
incl
in
push
sbb
mov
xchg
lret
or
int
cmp
das
pop
push
xchg
add
xchg
xor
mov
jne
imul
xchg
add
adc
mov
ficoms
cmp
js
add
push
pop
clc
sti
fsubr
or
mov
bound
leave
insb
mov
add
sti
jl
cmpsb
pop
push
xor
dec
call
lcall
addr16
lret
or
shl
dec
mov
pop
repz
mov
add
int
ret
idiv
fnsave
mov
jae
or
arpl
mov
cmpsb
fwait
shrb
push
fs
icebp
push
stos
cmp
push
and
ja
push
jns
cmp
adc
inc
adc
je
outsl
lea
lret
push
cmp
stc
push
xor
popf
push
std
jnp
xor
stos
push
and
not
adc
decl
lds
lret
call
xor
mov
rclb
xchg
test
mov
adc
dec
idivb
scas
and
and
push
fmull
shlb
mov
push
test
lret
mov
xchg
ljmp
movsb
lock
pushf
sub
fistpll
ss
stos
pusha
data16
xchg
jp
mov
out
mov
xchg
in
pop
push
lcall
adc
pop
cltd
and
ret
testb
pop
js
xchg
pop
xchg
mov
adc
and
cmp
pop
jnp
push
inc
dec
and
cmp
aam
and
aas
ss
fildl
dec
adc
out
ljmp
push
jo
jl
hlt
popa
inc
sbb
dec
inc
ret
repz
rclb
mov
xor
nop
add
imul
sbb
dec
hlt
xor
or
adc
imul
clc
lds
imul
pop
xor
and
in
pop
rcll
ret
loope
stc
push
cmc
push
ss
fisubl
movsl
fbstp
xchg
adc
bound
sbb
pop
inc
pop
loop
xor
adc
lods
sub
cli
xor
jnp
push
adc
jns
mov
jg
jae
repnz
or
fwait
out
mov
hlt
test
mov
out
add
mov
rclb
dec
mov
or
jg
mov
push
pop
out
test
inc
sbb
pushf
ret
mov
adc
aaa
sub
les
add
sbb
mov
filds
xor
xchg
sub
or
jno
shll
cli
jp
sti
iret
mov
js
jne
iret
enter
jns
fildl
jmp
mov
popa
push
adc
and
or
fsubl
push
ret
mul
insl
nop
jne
cmp
jne
mov
xchg
cmpsl
push
push
pop
and
in
push
ret
mov
jnp
ljmp
movsb
cmp
bound
clc
pop
xchg
and
pop
fwait
lcall
push
jo
push
cmpsb
sub
add
or
ficoml
inc
sub
rolb
je
jge
mov
or
inc
in
mov
xchg
das
test
xor
adc
outsl
sarl
ret
andl
sbb
or
call
pop
mov
clc
fisubrl
inc
mov
add
fildl
dec
aaa
dec
xchg
xchg
leave
mov
lahf
add
gs
mov
mov
jnp
lea
mov
arpl
jp
mov
mov
aad
mov
pop
iret
inc
dec
lahf
mov
dec
inc
into
sbb
jbe
sbb
mov
in
or
mov
pop
inc
ds
pop
sub
std
or
inc
push
pop
lods
inc
aaa
fs
out
arpl
xchg
add
sbb
lret
popf
xlat
lock
loop
lret
cli
arpl
xor
jg
cli
sahf
adc
lock
rcll
aas
aam
jmp
in
xchg
sbb
pop
repz
test
cld
sub
xchg
test
jb
rcrl
push
xor
cld
jmp
add
jae
cmc
decb
cmpsl
movntps
pop
rcrl
xchg
mov
ret
xor
push
mov
lods
and
xchg
cmpsb
xchg
int
dec
subl
cmpl
inc
xchg
bound
test
jmp
je
cld
out
in
fidivrl
pop
xor
cmp
imul
sub
mov
cmp
out
xor
and
mov
nop
in
xor
jp
fsubr
inc
int3
or
repz
dec
mov
cwtl
out
adc
inc
xchg
shlb
push
sarb
aas
fnstenv
aas
sbbl
xor
cmpsb
ret
mov
xor
popf
test
in
test
push
xchg
repnz
push
fstps
sbb
cmp
sar
mov
jo
bnd
insb
aam
imul
xchg
loopne
pop
cmp
arpl
xor
repz
mov
imul
xor
cmp
xchg
insb
pop
add
pop
xor
out
mov
clc
bound
test
test
dec
test
sarl
sbb
jmp
int
cli
add
testb
adc
inc
jge
cmc
fs
iret
inc
push
test
std
sbb
mov
rcr
fdivr
lock
xlat
mov
xchg
cmp
mov
jge
pop
dec
mov
mov
es
jo
xor
xchg
mov
pop
out
inc
add
mov
nop
mov
and
testl
mov
xor
sti
cwtl
mov
fldl
sar
std
inc
cs
je
std
imull
loopne
mov
xchg
xor
imul
sbb
xchg
cmpsb
pop
fisttps
addb
stc
ret
loopne
jl
mov
ljmp
int3
aas
sub
pop
xchg
lods
mov
adc
pushf
dec
subb
mov
or
mov
fs
dec
sub
cli
into
mov
cmp
push
and
xor
pop
addr16
mov
ret
test
cmp
filds
push
imul
clc
xchg
and
xchg
syscall
popf
pop
mov
cmpsl
fisubrs
push
ja
popf
call
pop
push
loope
push
inc
xchg
xchg
dec
push
jecxz
repnz
adcl
ror
dec
fnsave
ret
mov
mov
inc
js
shll
lret
jg
and
loop
enter
pop
and
mov
sbb
into
sub
lds
push
xor
outsb
ficoml
mov
andb
ss
cli
out
or
mov
jp
add
add
call
out
gs
cmp
or
icebp
xor
sarb
jbe
cmp
xor
or
adc
jecxz
out
faddl
call
xor
jb
ja
ret
cwtl
pcmpgtb
xchg
out
frstor
push
mov
pop
lods
insb
mov
cmpsb
cltd
aas
repnz
int
cmpsl
mov
movb
pop
fwait
imul
dec
inc
cmpsl
jl
aas
add
xorl
cmp
jp
loop
das
dec
or
mov
arpl
add
lahf
push
adc
out
dec
aas
iret
xor
sub
pop
mov
rol
xchg
stc
inc
mov
stos
sub
inc
movlps
insb
rolb
and
enter
xchg
lock
jl
jne
mov
mov
mov
add
xchg
dec
call
mov
dec
mov
les
scas
pop
test
push
ret
xor
push
mov
adc
xchg
adc
lods
jo
and
repnz
clc
pop
xor
cmp
imul
cltd
jge
je
jnp
fistpll
xchg
daa
xor
imul
push
andl
ficomps
xlat
int3
fmull
push
bound
mov
popf
lcall
sub
test
ret
movsl
pop
dec
sarb
loopne
mov
and
ss
mov
mov
stos
jge
xor
loope
mov
and
movzbl
xchg
adc
les
mov
mov
mov
js
ja
dec
adc
xor
loop
insb
out
in
dec
into
or
daa
push
xchg
adc
add
jmp
adc
xor
push
pop
je
cltd
shrl
push
ljmp
mov
movsb
fdivrl
shrl
sbb
and
inc
dec
jbe
push
std
movsb
out
jmp
push
xchg
adcb
sub
mov
daa
test
daa
out
cmp
sub
inc
pop
incb
pop
ret
adc
xorb
insl
andb
push
mov
and
es
shr
inc
aas
int
jecxz
test
subb
shlb
or
fistps
idivb
pop
and
loopne
mov
rcl
push
push
aam
mov
sub
pop
int3
or
dec
sub
cmp
mov
test
xor
or
stos
iret
push
insl
jae
loope
adc
xor
cmc
les
mov
inc
fwait
cltd
mov
lea
ja
xchg
dec
inc
iret
addb
mov
add
es
dec
mov
popa
mov
imul
pop
lret
enter
test
and
xchg
jmp
in
imul
xchg
shrl
mov
cmp
push
adc
mov
push
mov
xor
bound
sbb
fstl
add
fldl
daa
aam
mov
mov
jp
mov
sti
movsl
mov
cmpsl
in
adc
pop
enter
leave
imul
aam
outsl
jl
pop
cmp
adc
xchg
test
add
adc
jmp
in
xor
jns
push
push
roll
dec
xor
fmull
push
adc
sub
fs
enter
in
and
sbb
lahf
je
mov
in
xorl
nop
jnp
ljmp
icebp
insl
xchg
mov
xchg
xchg
cmp
dec
adc
dec
stos
pop
cli
mov
sbb
add
scas
fmulp
and
push
jnp
idiv
imul
pop
inc
or
adc
jmp
dec
mov
shrb
and
lret
mov
lods
out
push
mov
outsl
mov
sbb
pop
mov
int3
icebp
xchg
divb
and
rorb
or
mov
outsb
addr16
inc
pop
shrl
sub
mov
pop
jg
scas
mov
lods
add
shrb
xchg
cmp
or
test
mov
inc
inc
push
ss
jl
push
inc
dec
xchg
and
push
push
loop
gs
push
mov
sahf
jnp
lcall
pusha
call
mov
lret
add
mov
cmpsb
pop
in
lea
fsubrs
jp
in
bswap
add
xor
cmp
cwtl
lods
rcl
inc
jge
or
ss
and
push
add
sbb
jbe
call
push
adc
mov
jecxz
and
lods
add
inc
sarb
xchg
xor
stc
movups
rorl
mov
dec
nop
push
movsl
push
cmp
push
outsb
cmp
add
push
enter
imul
mov
addb
and
or
jns
push
mov
mov
push
cld
cmc
jo
stc
aad
jle
aam
sbb
lds
sarl
out
mov
loopne
cmpsb
xchg
jle
js
inc
daa
in
cmc
loope
fisubl
int3
xlat
cwtl
jae
add
aas
or
lcall
add
incl
sbb
jno
ja
stc
cmpsl
leave
cmp
gs
mov
mov
repnz
sbbb
in
retw
jne
sar
outsb
jnp
mov
das
inc
mov
movl
dec
in
movb
mov
bound
outsl
movsb
mov
leave
cmc
pop
aad
cwtl
mov
lea
loope
cmp
daa
in
hlt
sbb
or
scas
out
mov
lock
arpl
outsb
test
dec
xor
mov
xorl
movsl
mov
popa
out
mov
jb,pn
lods
loope
dec
xchg
sub
das
outsb
add
ficomps
cmpxchg
xchg
mov
loope
and
add
pop
mov
xor
rorb
pop
mov
insb
lcall
or
sarl
out
cmp
inc
sti
xor
xchg
mov
or
mov
or
cmc
inc
aaa
shlb
mov
and
lret
jge
xchg
outsb
inc
repnz
outsb
aam
pop
pop
fisttpl
add
xor
in
das
lds
aad
add
sbb
shr
xor
rcrl
cmp
and
add
je
sbb
leave
mov
mov
sti
fcomi
ss
data16
jp
cmp
lret
pop
sbb
into
push
cmp
cld
jb
and
inc
aad
inc
loop
mov
ja
add
cmp
push
push
add
stc
push
and
xor
jle
loop
shr
sbb
adcl
arpl
push
ds
in
sub
test
loopne
sbb
or
and
rcll
push
xor
xor
push
sub
pushl
add
jns
sbb
dec
test
mov
inc
sbb
push
inc
jno
movsl
sti
out
filds
xor
sbb
cs
push
cmpsb
cmp
fdivrs
xchg
mov
xchg
or
adc
shlb
jnp
pop
lds
adc
cld
int
aad
push
adc
xor
pop
adc
adc
sub
test
and
lds
lock
cs
sbb
mov
aam
xor
xchg
adc
dec
xor
les
xchg
and
jne
fwait
xor
jmp
push
fists
pop
or
add
out
inc
mov
cld
add
or
jge
or
filds
inc
jp
lods
dec
ds
dec
pop
jge
or
jl
mov
xor
bound
fisubl
or
movsb
pop
leave
pop
push
dec
fimuls
sahf
dec
cmpsl
jae
faddp
lods
adc
lock
pop
sub
nop
cmp
or
add
testl
into
movb
cli
xchg
in
popf
shl
xor
iret
mov
dec
lods
jnp
hlt
lods
bound
sub
cmp
mov
and
ret
dec
in
js
ss
add
mov
filds
inc
stc
adc
lds
in
sbb
pop
sub
add
subl
mulb
pushf
out
lods
repz
aas
or
js
or
push
mov
and
shll
out
fbld
lea
pop
pop
mov
pop
test
lgs
push
mov
aaa
add
sbbl
or
fiaddl
pop
sub
mov
inc
push
mov
dec
mov
mov
inc
std
pop
sbb
lret
addr16
in
repnz
cmp
dec
and
inc
sub
sub
jo
xchg
mov
testl
push
cmc
jns
xchg
in
add
decb
lods
sub
repnz
and
sub
cmp
inc
mov
lods
imul
movsl
stos
pop
inc
pop
mov
enter
adc
or
dec
insl
xchg
cs
sub
cmp
xor
mov
inc
xchg
fiaddl
es
or
mov
repnz
out
mov
aaa
mov
inc
mov
sub
pop
adc
lds
push
dec
lock
inc
sbb
nop
loopne
or
add
push
das
adc
js
sub
dec
dec
dec
mov
adc
xor
lods
ret
sarb
fwait
sub
ret
or
dec
roll
dec
jmp
sti
xchg
int3
push
xchg
sub
mov
and
in
cmp
jmp
lcall
cmp
aaa
mov
pop
fldenv
pushf
or
loop
scas
cmp
and
push
push
lret
idivb
push
mov
dec
sbb
push
pop
mov
push
cmp
popa
sbb
pop
pop
push
pop
mov
mov
ljmp
loope
aaa
cwtl
pop
xchg
mov
xchg
pop
mov
sub
repz
add
sbbb
push
loope
dec
pop
psllq
cmp
add
stc
pop
mov
xchg
mov
inc
cmp
jne
xor
mov
pop
jne
mov
push
push
add
and
inc
mov
mov
inc
notb
jo
mov
outsl
in
test
sti
mov
inc
imulb
and
push
stos
mov
fisttps
jns
punpcklbw
and
pop
loopne
scas
ss
roll
loopne
fisttpl
mov
ja
xchg
cmc
cld
pop
nop
test
pop
lret
pusha
repnz
lret
mov
dec
xchg
stos
imul
ss
cmpsl
nop
out
dec
or
test
jge
adc
out
add
or
push
clc
pop
fs
lea
ror
ret
clc
push
mov
ds
mov
mov
enter
shrl
sbb
in
call
and
ds
dec
cmpsb
outsl
push
pop
sahf
out
dec
cmpsb
lahf
push
cmp
test
xor
add
mov
cmp
and
adc
mov
daa
aas
jb
push
or
scas
and
add
es
dec
sbb
mov
xor
mov
mov
mov
insb
repz
outsl
test
jae
jo
mov
jmp
jp
dec
or
fistl
enter
xchg
aam
pop
mov
mov
ja
in
clc
daa
pop
mov
or
outsl
negb
hlt
xchg
xor
mov
js
mov
cmp
push
xor
adc
scas
ror
icebp
fcmovu
in
pop
mov
flds
push
fadds
pop
ret
adc
adc
js
je
ss
jne
std
sub
outsb
adc
leave
cmpsl
addb
pushf
push
push
adc
mov
push
xor
mov
addr16
pop
out
sub
popf
sbb
push
nop
pusha
push
jo
adc
test
movsb
pop
aam
jecxz
ret
mov
pop
cmp
iret
sbb
pushf
dec
xchg
mov
test
imul
push
or
push
daa
cmp
loopne
xchg
add
stos
mov
inc
cmpb
data16
sbb
or
imul
fisubs
add
sbb
xor
in
or
lret
insl
in
pushf
xor
inc
push
pop
movsl
jge
test
mov
dec
sar
ss
imul
cs
cwtl
in
sbb
es
ljmp
das
scas
mov
mov
mov
mov
fnstcw
xchg
pushf
loope
fwait
daa
add
xor
popf
pop
scas
fstl
aam
xor
jg
mov
mov
pop
pop
js
int3
fistpll
sbb
inc
sub
in
pop
pop
pop
test
ss
subl
add
in
pop
xor
popa
rol
or
xchg
push
out
insb
inc
leave
imul
mov
shll
or
sbb
mov
lcall
sti
roll
jne
dec
cli
and
das
mov
pop
or
mov
jns
adc
outsb
push
push
sub
imul
call
mov
rclb
xor
xchg
sti
and
aaa
sbb
mov
sbb
pop
mov
jmp
daa
pushf
decb
outsb
mov
xor
out
outsb
xchg
mov
frstor
gs
mov
add
sarl
add
xchg
and
std
lahf
mov
or
into
or
jp
push
test
dec
sub
adcb
ret
stos
out
pop
imul
repnz
bound
xchg
and
pushf
inc
mov
sub
cwtl
jo
jnp
arpl
inc
roll
pop
push
iret
adc
scas
das
sbb
jle
dec
mov
sub
push
dec
mov
cli
push
addr16
and
ret
movzwl
cmpl
fsubs
test
push
sbb
mov
lcall
pop
test
cltd
add
mov
imul
lea
ja
repnz
mov
aaa
les
jmp
add
fdivrl
mov
test
adc
jp
popa
pop
aam
push
or
fdivrp
push
cli
sbb
mov
jg
mov
out
sahf
les
ret
cmp
movsl
in
ljmp
dec
or
sbb
iret
jle
jns
push
shll
xchg
movsl
sub
dec
lea
insl
ret
lahf
mov
push
enter
adc
push
in
fstps
cmp
into
aad
ret
rorb
je
test
mov
shll
and
jge
ret
mov
pop
fcom
fwait
daa
cltd
xor
mov
int
rcrl
push
ficompl
jl
mov
js
mov
xchg
and
mov
inc
xchg
cmp
mov
int
lahf
jnp
add
addr16
mov
inc
popa
pop
and
ss
into
adc
scas
lea
dec
xchg
mov
in
hlt
cmp
dec
sub
lret
push
mov
vmulss
and
call
mov
fsub
int3
cmpsb
dec
jno
jl
xor
jns
fadds
add
push
andb
lea
or
jge
ljmp
or
and
scas
aad
mov
mov
rcrb
int
repnz
jg
fmul
negb
adc
cmp
lcall
cli
cmp
mov
xor
adc
push
jecxz
xchg
sbb
or
pop
cld
push
mov
fbld
jnp
xor
inc
test
inc
cmpsb
fs
dec
ret
or
pushf
inc
dec
fscale
mov
cmpb
sub
lret
aaa
lea
add
lret
jns
jb
test
xchg
mov
pop
fbstp
icebp
pushf
cmp
xorb
inc
adcb
daa
adc
dec
xlat
je
rcll
inc
jno
int3
sub
inc
sbb
insl
scas
pushf
pop
inc
jecxz
iret
clc
sti
out
or
enter
xor
outsb
xchg
cmc
jns
xor
xchg
jle
mov
inc
lods
repnz
cmp
push
mov
cmp
xor
stc
in
inc
insb
xchg
add
xchg
mov
adc
mov
in
mov
mov
call
movhps
sub
rorb
mov
pinsrw
pop
cvtps2pi
add
in
or
mov
bound
fwait
xchg
lods
outsl
dec
sbb
imul
into
inc
or
mov
lods
enter
sbb
pop
cwtl
sti
insb
pop
addb
push
jae
xchg
mov
push
push
movsl
test
xchg
ljmp
xchg
in
xchg
jecxz
adc
xor
mov
sub
add
stc
les
inc
or
in
je
icebp
push
sub
mov
out
int3
mov
imul
insl
pop
in
adc
sub
es
jo
mov
enter
pop
or
ljmp
sbb
inc
cs
inc
sti
out
mov
lock
jp
bound
xchg
insb
fptan
mov
mov
inc
cmp
daa
pop
add
out
mov
xor
dec
push
addr16
xor
push
icebp
cmp
enter
fsubr
sub
jecxz
mov
mov
cmpb
and
iret
lock
mov
int3
and
aad
dec
sub
adc
mov
gs
add
push
shrb
lods
xchg
sub
pop
ret
sbb
out
sub
pop
mov
bound
iret
stos
leave
rolb
imul
add
adc
adc
xchg
mov
not
aad
push
ljmp
inc
jl
or
subb
loopne
arpl
dec
jmp
fxch
push
sub
and
dec
ja
stos
jnp
rolb
add
ljmp
lods
int3
sub
cmp
dec
inc
push
call
call
es
push
push
xor
repnz
jmp
adc
jae
lret
mov
test
cmpb
je
cmp
pop
out
js
adc
cmc
xor
cmc
or
int3
xchg
mov
and
jnp
push
movsl
sti
jg
mov
outsb
cs
push
inc
test
pop
decb
ficoml
jecxz
mov
mov
cwtl
es
sbb
adc
movsl
inc
cmc
and
or
stc
and
je
arpl
out
std
push
mov
jp
xchg
mov
inc
sbb
mov
data16
inc
fdivl
scas
sbb
pop
sbb
xchg
sub
aaa
stos
incb
cmp
scas
push
mov
jne
out
mov
mov
adc
ret
jns
adc
ljmp
in
inc
imul
cmpsl
push
pop
mov
call
or
push
sti
ret
dec
pop
cmp
and
fucomip
sti
sbb
mov
adc
shrb
aas
imul
sbb
out
repnz
hlt
inc
lretw
sbb
leave
push
inc
lret
mov
test
ljmp
fs
or
dec
sbbl
jl
lods
sub
dec
out
sbb
mov
fdivl
lods
repz
jge
or
pop
mov
pop
jbe
and
xor
jns
mov
int
nop
push
sub
sbb
out
outsb
dec
test
add
xchg
jae
adc
adc
mov
mov
rclb
and
mov
mov
pop
xor
iret
jge
or
sbb
or
in
add
mov
xchg
sbb
xlat
cmp
jo
stos
sarl
mov
cmp
adc
pop
decl
xchg
pcmpgtb
cmpsb
cmp
sub
inc
test
aam
inc
xchg
mov
xorl
fs
xchg
repnz
pop
movsb
out
add
mov
mov
mov
jmp
faddl
inc
cltd
scas
mov
inc
dec
cmp
xor
imul
pop
pop
jle
rorl
ja
gs
idivb
mov
cmp
jl
inc
movl
adcl
mov
xor
mov
pop
cmp
xor
mov
ret
sub
dec
scas
sub
stos
ja
cs
std
add
das
gs
mov
add
and
sti
push
out
cs
faddl
cli
mov
shll
cmp
or
inc
add
pop
push
xchg
adc
mov
push
xor
pop
fstl
outsl
inc
pop
aaa
sbb
mov
aas
inc
xchg
out
test
sbbb
fstpt
pop
pop
imul
ds
xchg
and
pop
scas
push
ss
jmp
and
and
aas
rcll
mov
inc
ljmp
lret
push
xchg
sub
dec
push
dec
ficoms
xor
iret
es
icebp
mov
cmc
mov
push
mov
clc
dec
pop
scas
notl
xchg
divl
sti
pop
push
fildl
popf
jns
or
jbe
scas
insl
lods
or
cs
or
xchg
mov
cmpsb
lods
pop
mov
iret
mov
pop
and
xor
xchg
cwtl
pop
inc
pop
mov
pop
ljmp
mov
sub
mov
mov
mov
inc
add
fsubrs
pop
mov
lods
ret
jae
add
leave
xor
out
out
jno
push
je
sub
mov
out
xchg
adc
mov
and
addr16
icebp
popf
adc
sbbb
ss
or
push
inc
pop
outsl
imul
fisubl
inc
xlat
je
cmp
ret
leave
or
pusha
xchg
es
dec
mov
mov
sbb
adc
cmc
out
aam
fnstsw
cmp
sbb
dec
xor
fwait
data16
xchg
pop
push
mov
xor
ja
inc
lret
xchg
inc
ret
inc
inc
scas
sub
adc
xchg
inc
xchg
cld
sbb
cmc
inc
stos
mov
pop
xchg
fdivr
decl
cwtl
lea
je
shlb
and
xchg
add
jecxz
daa
lret
je,pt
loope
xchg
mov
movsb
xchg
aad
mulb
ja
cmpsb
in
loopne
mov
roll
sbb
in
inc
push
mov
jo
in
push
and
adcl
mov
lods
gs
in
xchg
es
mov
hlt
cld
xchg
mov
rorb
mov
pop
mov
or
sbb
shll
out
cltd
cmpsb
jmp
mov
pop
in
xchg
jbe
pop
inc
sbb
jb
xchg
data16
movsb
cmp
adcb
loopne
fisubl
icebp
cld
adc
dec
orl
and
fwait
addl
jb
mov
adc
and
loope
add
adc
sub
cli
out
cmpsl
add
push
xor
mov
mov
xor
por
sbbb
dec
shlb
xchg
dec
xchg
das
loopne
rol
notl
mov
sti
dec
dec
push
and
ret
cltd
jge
imulb
mov
mov
add
pop
cmp
dec
ss
out
in
mov
jp
pop
insl
rcrl
adc
out
insb
adc
push
mov
inc
jmp
daa
shll
sti
xchg
pop
fisubl
and
fdivp
push
mov
inc
pop
cmp
addr16
mov
cmp
sbb
stc
popa
cmpsl
push
cli
mov
fisubl
xchg
daa
mov
jns
xchg
lahf
sub
loop
xchg
iret
cwtl
mov
jns
pop
mov
jbe
scas
sbb
test
aas
dec
adc
ja
push
icebp
pop
punpckldq
mov
cmp
pop
mov
xchg
add
mov
fwait
icebp
or
xorl
mov
pop
imul
dec
push
xchg
and
jl
lahf
xchg
xchg
insb
xchg
les
xorb
cmp
jmp
push
mov
push
jne
mov
xorl
iret
inc
mov
shll
mov
xor
arpl
xchg
nop
cwtl
jmp
mull
jp
pop
shll
loop
adc
lds
and
lret
ret
rcrb
or
lods
jg
js
cmp
xor
insb
imul
cmp
or
nop
and
mov
rcr
call
xor
and
out
out
add
inc
in
lcall
ds
sbb
rolb
jg
jg
adc
jbe
cmpl
adc
or
addr16
mov
outsb
mov
pop
out
je
sti
adcl
or
mov
scas
mov
sub
cmp
mov
dec
adc
sub
push
sub
inc
out
jnp
lods
jnp
jnp
cld
jl
push
mov
or
std
ret
push
dec
mov
jo
xor
gs
out
sub
and
fdivrp
icebp
sti
jbe
divl
sbb
in
out
gs
ljmp
mov
idivb
mov
iret
inc
adc
mov
jmp
decb
insl
adc
xchg
or
mov
xchg
leave
dec
mov
xchg
addr16
sub
lret
push
add
std
int
or
ficoms
dec
fs
cmp
push
addb
or
aas
inc
jae
sub
sbb
mov
inc
xor
stos
sahf
pusha
add
mov
sbb
scas
add
and
outsl
adc
mov
lcall
fsubr
cmp
and
push
mov
enter
dec
mov
icebp
mov
xlat
adc
addr16
push
mov
xchg
or
push
repz
jns
in
inc
mov
outsb
sbb
lret
aam
ss
ret
cltd
xor
xchg
push
or
mov
es
adc
call
std
inc
mov
das
in
leave
mov
int
sbb
cmc
adc
xor
mov
orl
std
jecxz
mov
jne
and
rcl
xchg
gs
jecxz
sbb
dec
pop
pop
aas
popf
cmp
cmp
sbb
mov
sub
fsts
mov
xchg
jno
stos
orb
dec
pop
std
sti
inc
mov
aad
int3
mov
cmc
scas
dec
cmp
fwait
xor
xchg
mov
aam
ds
mov
dec
icebp
mov
inc
rcrb
sub
xchg
call
aaa
shrl
setb
push
jno
hlt
aam
push
mov
mov
mov
nop
dec
fnstenv
sub
daa
sub
jge
outsl
cli
dec
push
mov
cmp
mov
xlat
in
in
les
das
gs
std
mov
jae
fcomps
jne
shlb
lods
or
decb
jb
mov
sbb
loop
popa
dec
loope
and
jp
cwtl
bound
lods
pop
jno
fnstcw
jl
std
mov
iret
add
scas
mov
lahf
shrl
jl
xor
insl
sbb
aas
sbb
cli
cmpsb
xchg
and
mov
rorl
xor
out
out
ret
adc
movsb
test
adc
inc
sbb
push
ss
ret
adc
lret
popf
divb
push
push
sbb
push
scas
testb
imull
inc
pop
hlt
mov
or
push
movl
into
insb
pop
cld
rcr
arpl
fs
lods
mov
nop
inc
or
bound
jp
mov
xor
sti
inc
and
jne
or
arpl
push
scas
sar
dec
xor
mov
popf
lret
inc
das
mov
test
pop
pop
lret
mov
repz
lcall
les
xchg
inc
lret
negl
push
stc
js
cmp
lret
sub
mov
push
xchg
inc
daa
hlt
shll
push
or
inc
cmpsb
add
testb
adc
sub
shll
jnp,pt
sti
repz
xor
movl
xchg
fwait
lods
inc
loope
or
adc
xchg
mov
cmp
daa
push
push
mov
sbb
pop
xor
jnp
cmpsb
enter
fprem
fsubl
lret
mov
stos
sarb
lods
call
adc
es
jnp
idivl
sbb
pop
dec
lods
divb
loope
xchg
cmp
adc
cmp
cmp
mov
fidivrl
insb
cmp
pop
add
shrl
lret
xorps
xor
in
fsts
dec
push
or
sarb
std
cld
mov
sub
icebp
dec
mov
cmp
pop
and
mov
loop
pop
or
mov
and
mov
aaa
adc
pop
out
adc
and
jmp
rclb
stos
jg
adc
sbb
push
push
pop
imul
jno
push
scas
cmp
icebp
xlat
dec
cmp
pop
adc
inc
leave
cltd
in
aas
ret
mov
js
scas
lock
cmp
je
dec
movsl
es
mov
lcall
and
and
cli
push
push
getsec
jae
inc
cmp
mov
fcmovnu
mov
jo
in
jnp
stos
adc
push
inc
mov
ret
das
aam
call
jo
pop
adc
push
or
xchg
add
sub
sbb
xor
std
fisubl
pop
and
lahf
mov
shll
out
test
lret
fnstenv
jnp
mov
sbb
adc
dec
mov
or
xlat
out
insl
jmp
les
in
jne
mov
fucomi
mov
fisttps
fidivs
dec
lods
add
push
mov
push
add
fmuls
lret
push
nop
dec
lahf
pop
shr
insl
sub
xchg
or
outsl
jno
adc
mov
dec
sbb
push
rol
mov
fwait
popa
add
push
lahf
or
mull
pop
sti
sar
lcall
lods
sbb
rclb
hlt
fwait
gs
je
test
mov
aaa
ret
adc
cld
cwtl
fidivrs
pushf
xchg
sbb
fnstenv
repz
push
scas
sub
out
sbb
popf
popf
jmp
mov
push
call
fstpl
sahf
mov
inc
cmp
leave
mov
popa
pop
rcrl
js
xchg
cmp
ficoms
and
stos
adc
fucompp
jl
cld
sub
dec
mov
or
sub
mov
ret
loope
jg
xor
cltd
push
cld
lods
loope
rolb
xor
or
dec
loope
adc
mov
push
shr
lea
int
dec
and
jmp
xor
movsb
and
out
int3
sbb
shrb
or
mov
mov
inc
inc
pop
movl
adc
xor
addr16
jge
inc
xchg
xchg
push
or
push
xor
mov
bound
xchg
ss
insl
dec
icebp
xchg
ret
incl
jo
testl
add
pusha
cmpsb
and
in
adc
test
jno
outsl
int3
movsb
pop
arpl
mov
push
mov
push
insb
aaa
decl
aad
fcomi
pop
cmp
and
dec
xor
fistpll
push
in
xor
pmaxub
fstpt
pop
ret
mov
adc
xor
das
mov
sbb
cs
arpl
mov
mov
and
push
push
dec
cmpl
mov
es
and
add
add
mov
mov
inc
mov
xchg
push
xor
pop
cwtl
xchg
out
dec
mov
dec
addr16
mov
mov
push
and
mov
cltd
or
pusha
or
mov
dec
cmp
std
add
lods
push
popa
test
cmp
mov
fistl
xchg
adc
xchg
jae
push
daa
jp
cli
mov
inc
lahf
fwait
lea
jge
pop
push
xor
or
cmc
mov
mov
sub
push
push
dec
xor
cmp
xchg
cltd
inc
shlb
xor
push
pop
mov
roll
push
lods
stc
push
pusha
sub
mov
shlb
lret
daa
test
fstpt
add
idivb
in
xchg
push
outsl
sub
dec
loopne
mov
mov
xchg
js
pop
mov
fwait
in
mov
clc
gs
cmp
mov
fucomip
xadd
scas
out
insb
imul
fadds
fs
lahf
pushf
leave
test
dec
push
jb
push
lret
mov
fisttpl
into
ret
inc
call
fldt
pusha
push
adc
mov
je
mov
mov
pop
push
std
dec
adc
repz
mov
jg
imul
inc
test
stos
fistpll
fldcw
out
or
int
cmpsb
xor
adc
dec
lcall
jne
adc
sti
aaa
xchg
dec
das
mov
push
mov
xlat
addl
scas
mov
shl
push
push
pusha
inc
das
or
add
push
push
mulb
scas
ljmp
or
pop
push
popa
iret
push
adc
pop
or
xchg
mov
daa
mov
or
or
iret
dec
data16
pop
in
push
out
in
sub
fs
mov
jmp
xchg
mov
add
sbb
outsb
into
fadd
jecxz
sbb
sbb
xor
adc
xchg
stos
inc
ss
test
insb
xchg
push
int
xchg
popf
gs
shl
xor
lock
mov
addr16
loop
push
push
stos
adc
les
push
dec
and
icebp
xchg
scas
adcb
cmp
add
or
cltd
imul
es
fimuls
xchg
addr16
mov
icebp
pop
movsb
mov
mov
and
mov
or
inc
jbe
insb
dec
mov
jne
sub
ficomps
stc
fisubrs
cli
mov
lock
xlat
and
ljmp
mov
pop
ljmp
enter
adc
ja
sub
inc
in
insb
aas
call
repz
pop
int
xchg
and
pop
push
outsb
pop
aaa
out
shlb
jge
insb
or
push
in
pop
mov
jl
lret
mov
movb
sbb
pop
mov
loopne
or
mov
in
or
push
xchg
xor
push
addr16
dec
scas
cli
dec
insb
mov
addl
mov
fiaddl
hlt
fstpt
mov
lods
js
and
clc
sub
incl
sbb
adc
push
out
pop
hlt
xchg
add
mov
pop
lahf
in
jle
cmp
negl
push
int3
mov
adc
dec
pop
mov
cs
cmp
mulb
into
pop
js
mov
pop
imul
mov
or
push
lock
mov
fisubrl
stos
sbb
push
xor
outsl
jbe
lock
cmpsl
xchg
xor
je
add
mov
cmpsb
repnz
pusha
lahf
or
sbb
mov
push
add
mov
shrb
mov
test
bound
or
lret
pusha
xor
mov
pop
inc
push
or
cmp
jmp
or
ljmp
lods
cmp
dec
nop
sti
xor
push
lock
lock
and
std
testl
ss
fwait
and
out
out
clc
pusha
int
adc
outsl
lcall
test
dec
cltd
ret
adc
lds
inc
inc
cmp
add
cmp
or
pop
inc
dec
cmc
pop
jns
mov
and
jmp
lea
ljmp
cmc
adc
std
into
int
das
mov
mov
icebp
cmp
rcrl
dec
push
or
xlat
outsl
and
das
mov
push
imul
mov
push
cs
push
jae
movsl
gs
scas
shlb
mov
xchg
jge
ljmp
jbe
lret
mov
or
jns
xor
aas
addl
dec
arpl
mov
clc
in
and
sub
iret
lret
or
or
inc
add
lds
inc
jnp
mov
cmpsl
les
lods
lds
and
shrb
mov
out
shll
lods
adc
push
pop
dec
add
rcrb
stc
jg
adc
scas
pop
ja
popf
test
in
in
sarl
pop
pop
je
pop
aaa
and
mov
pop
mov
leave
daa
mov
mov
push
loope
jmp
insb
lock
and
push
dec
jb
cmc
insb
xor
aaa
outsl
stos
popf
push
int3
repnz
cmp
fxtract
mov
push
movsl
mov
xchg
cmc
test
push
or
scas
adc
ss
xor
sbb
outsl
call
scas
jmp
jo
testb
cli
push
pop
sbb
jmp
imul
pop
and
inc
inc
sbb
or
add
mov
jp
or
subl
cmc
stos
rorb
stos
jno
add
in
dec
test
ret
js
cltd
arpl
aam
adc
lods
aaa
or
adcl
divl
and
lock
insb
inc
ret
xor
aad
pop
lcall
mov
movsl
orb
das
cmpsl
dec
and
out
out
sub
clc
push
mov
clc
ss
popa
dec
pop
mov
fs
xchg
mov
jo
mov
pop
jg
jnp
inc
adc
sbb
aam
xor
sub
xor
mov
jle
add
jno
pop
outsb
mov
rcl
mov
stos
dec
xlat
inc
daa
jge
in
movsl
jp
loopne
test
inc
loop
sub
loopne
xchg
pop
imul
jl
cmpsb
sbb
mov
cltd
gs
pop
xor
addr16
jns
push
inc
mov
xchg
or
add
ret
enter
push
jecxz
ljmp
mov
bound
xor
mov
mov
jg
pop
cmp
mov
jecxz
roll
aam
mov
push
cmp
dec
cmpsb
sbb
call
xorb
push
fdivrl
xchg
imul
adc
stos
mov
mov
dec
jle
pop
push
sahf
xchg
insb
inc
mov
test
jae
or
scas
jno
scas
mov
sub
cmp
xchg
add
mov
inc
ret
pop
adc
fstpl
imulb
out
xor
popf
mov
xor
adc
mov
pop
push
jmp
sub
push
mov
dec
mov
aad
fwait
das
movsb
or
jnp
insl
jbe
mov
dec
inc
divb
in
pop
add
stos
mov
xchg
jge
xchg
mov
clc
push
scas
push
ja
mov
shl
mov
cli
xchg
push
shld
out
movsl
mov
lock
frstor
mov
pop
sti
in
adc
jmp
mov
pop
mov
outsl
lahf
rcrb
call
mov
fistps
xchg
mov
cmp
cmp
fs
mov
jmp
daa
rol
out
jae
push
add
pop
jo
mov
or
enter
dec
addr16
sahf
rcrb
xchg
jo
mov
mov
in
std
push
mov
scas
dec
add
push
sbb
push
cmc
add
jp
ja
lock
sub
fcompl
test
dec
lret
adc
pop
adc
inc
pop
cmpsb
mov
inc
js
sbb
jl
pop
addr16
sub
mov
pop
mov
insb
cli
adc
stos
cwtl
movsb
xchg
fsubrl
scas
inc
jns
add
outsb
call
mov
movsl
fsubrs
enter
insl
or
imul
insl
scas
cmp
push
xor
inc
addb
pop
or
and
jne
arpl
xchg
or
js
andl
and
cmp
aaa
adc
inc
adc
lret
inc
add
jle
jge
push
les
jnp
cmc
mov
jecxz
push
pushf
add
jge
sub
lret
scas
push
aas
movsl
pusha
leave
mov
fwait
inc
outsb
in
and
and
scas
xchg
shlb
fwait
rcll
mov
fiadds
insb
andb
gs
movsb
mov
and
lahf
out
lcall
movsl
hlt
call
in
jmp
cmp
test
xor
pop
je
sub
insl
jecxz
fnstenv
rolb
movsb
push
lea
rorb
dec
aaa
or
xor
ret
icebp
sarl
int3
push
xchg
lea
ss
lahf
shrb
xor
xchg
pop
xor
repz
push
mov
cmp
inc
mov
jp
ret
or
fs
jmp
or
mov
xchg
or
mov
mov
mov
sub
cmpl
sub
sbb
inc
add
mov
mov
mov
adc
xchg
jae
inc
mov
and
cmpsl
adc
jbe
jae
pop
test
push
xchg
add
jg
fdivr
ret
push
dec
in
mov
sub
sbb
mov
mov
sub
xor
jg
mov
imul
imul
gs
fcomps
loopne
mov
pushf
hlt
inc
push
insb
insl
or
xchg
inc
cmpsl
push
mov
mov
int3
dec
rclb
or
push
xchg
pusha
incb
lret
adc
dec
frstor
shrb
fimuls
xchg
mov
ret
inc
add
add
jl
jae
lret
leave
ss
cmpl
xor
notb
push
mov
mov
lea
ss
mov
addr16
mov
popa
mov
mov
orb
pop
outsl
inc
and
xor
ret
lock
dec
js
lret
hlt
or
shlb
aas
repnz
push
push
push
incb
cmp
sahf
xchg
clc
loop
fisubrs
rcl
out
les
stos
nop
push
push
xor
or
lcall
or
out
movsb
or
xor
aad
shld
push
inc
popa
lret
dec
mov
mov
xor
aaa
dec
pushf
push
and
or
jge
rclb
into
inc
loopne
adc
bound
enter
cmp
mov
psubq
ds
loop
cmpb
inc
pushl
sbb
aaa
sub
jo
cmp
xor
jbe
mov
push
xchg
dec
and
mov
cmp
push
iret
insl
mov
mov
pause
loopne
data16
cmp
xlat
imul
scas
xchg
mov
movsb
in
lods
sbb
dec
mov
push
and
lret
inc
mov
cltd
aad
fidivrl
mov
xor
or
and
outsb
xor
and
inc
jg
mov
adc
cmp
out
clc
cmpsl
das
and
jo
out
jg
ret
add
loop
pop
mov
repz
jne
cmpsl
ds
cmp
int3
or
inc
jl
stos
xchg
out
into
dec
jb
jmp
mov
lea
xchg
xor
je
adc
or
mov
ja
dec
push
ds
inc
mov
adc
in
leave
stc
jns
xchg
sub
xor
dec
mul
pop
pop
pop
shll
mov
jbe
divb
shlb
cmp
lret
bound
jp
and
or
cmp
mov
movsb
fdivrs
xchg
push
sub
sbb
ficomps
jmp
cltd
jp
xorb
xor
sahf
arpl
inc
mov
jmp
mov
mov
call
lods
test
push
les
jge
add
test
lcallw
xchg
fcomps
cmp
sbb
dec
fldcw
xchg
pop
popa
movsl
dec
push
mov
mov
push
loop
jbe
stos
jne
call
lahf
aad
mov
dec
xchg
dec
xor
sahf
push
xchg
xchg
fs
cmp
cmp
iret
lcall
pop
fsubrs
sbb
in
rolb
in
push
pushf
push
push
add
push
push
cli
cmp
decb
mov
daa
push
pushf
mov
xchg
aaa
jbe
hlt
sbb
adc
jns
stc
sub
imul
sub
add
xor
mov
mov
mov
mov
sbb
pop
lcallw
jns
add
imul
leave
in
xchg
add
sub
dec
sub
ds
in
repz
in
mov
movsb
clc
mov
imul
or
xchg
xor
mov
mov
mov
jnp
jnp
cmpl
add
pop
xchg
outsb
sub
movsb
outsl
mov
adc
andl
mov
push
sbb
or
mov
outsb
xchg
sub
lcall
sahf
sbb
dec
sbb
mov
fcomi
fisubrs
aad
sahf
xchg
jb
rcrl
mov
jnp
mov
sahf
xchg
sub
subl
popa
sbb
mov
and
add
pop
cmp
mov
jb
test
aad
cmp
in
mov
in
movsl
fadds
ss
inc
test
pop
ds
ret
js
dec
lret
rol
mov
in
xchg
mov
in
aas
rcl
daa
popa
cmp
inc
sbb
int
add
neg
mov
insb
xor
cld
dec
push
dec
jmp
push
jb
imul
arpl
fdivrl
cmpsl
outsb
loopne
test
bound
jae
push
adc
mov
and
mov
jp,pn
or
out
push
cmp
mov
inc
jge
loope
pushf
jmp
jbe
enter
ja
shr
rorl
mov
jae
jno
js
pop
inc
repz
pop
and
in
mov
jns
in
dec
stos
mov
cltd
ret
ljmp
push
int
repz
sbbl
iret
adcb
leave
or
std
xchg
cmpsl
mov
lcall
xchg
addr16
movsl
jg
inc
mov
aam
xorb
cmp
push
cmp
je
mov
repz
sbb
fistpl
sbb
and
mov
cmp
or
add
dec
cs
aad
scas
icebp
jae
xor
sti
push
sti
mov
mov
mov
mov
shll
or
movb
jo
push
push
inc
js
das
ja
xchg
push
or
pop
in
popf
pop
xchg
stos
repnz
loop
pop
mov
das
ds
or
out
mov
jae
mov
or
sbb
pop
dec
out
popf
lcall
mov
or
hlt
divb
sub
fwait
aad
hlt
xchg
gs
and
into
test
insb
dec
pop
jbe
out
cmpsl
xor
aam
nop
push
xchg
sti
insl
clc
jp
cmp
xor
lret
lret
sbb
fcoms
jbe
lods
jno
fwait
idiv
and
sahf
hlt
xchg
mov
or
or
cs
fisubs
and
in
scas
inc
nop
jnp
xor
test
mov
add
xor
and
rcll
xlat
mov
or
adc
jo
mov
loope
mov
ja
dec
mov
cmp
jns
sbbb
jae
ss
mov
nop
pop
sbb
and
mov
jmp
leave
xor
push
cmp
adc
push
push
nop
pop
mov
nop
out
or
push
fistpll
sub
in
int
mov
cld
jne
pop
call
dec
inc
in
imul
pop
cmp
cmp
cmp
sbb
das
xor
and
inc
dec
adc
or
insb
mov
add
jp
cld
shll
xlat
xchg
jno
jg
pop
int
addl
fildll
loopne
push
or
popf
test
sbb
fnstcw
ret
leave
or
add
pop
pusha
pop
nop
orb
push
in
addl
je
mov
stc
adc
mov
repnz
icebp
mov
mov
divb
int
push
mov
push
sub
mov
stc
or
mov
xor
icebp
pop
cmp
cmc
xchg
cmpsl
lods
add
std
leave
sub
movsb
std
out
jno
loopne
in
out
jae
sbb
mov
pop
xchg
pop
mov
xor
and
inc
inc
xorb
sbb
incl
mov
scas
sbb
mov
es
lahf
stc
mov
push
mov
sbb
hlt
gs
adc
cld
adc
add
ds
sub
in
jecxz
xor
dec
out
push
and
xchg
sbbl
add
xor
push
out
inc
aam
inc
lret
mov
push
and
inc
lds
xlat
outsb
das
into
xchg
arpl
aad
ret
hlt
int
fimuls
xchg
mov
aam
inc
andl
inc
add
jb
push
das
cmp
mov
incl
fcmovb
fstl
inc
loope
pop
cwtl
and
in
fadds
fsubs
xchg
stc
add
mov
xchg
xor
movsl
adc
add
cmp
xchg
mull
jp
jmp
lods
imul
mov
cmpsb
rcrb
rcrb
fs
out
adc
aas
out
ret
mov
mov
mov
enter
daa
jb
addb
nop
insb
bound
dec
shll
sub
movsl
sbb
fmulp
ret
xchg
add
inc
sub
mov
dec
test
shll
and
pop
ss
or
rcl
aas
ror
pop
push
jmp
test
call
push
test
jnp
mov
pop
xchg
xchg
popa
arpl
adc
out
repnz
sahf
push
xchg
mov
sub
push
loop
push
mov
fstps
jg
decb
jnp
enter
mov
fisttpl
hlt
enter
cmc
mov
repz
mov
xlat
enter
mov
mov
pop
in
inc
mov
sub
fidivs
sti
enter
jnp
out
dec
imul
xor
jno
sbb
lret
jne
ja
mov
test
xchg
icebp
mov
adc
sub
jecxz
pop
movsl
adc
test
push
aas
dec
or
popf
mov
mov
nop
inc
jno
mov
sbb
aam
cmpsl
scas
in
add
xor
jbe
cld
mov
inc
movsb
lods
push
pop
xor
add
enter
leave
or
rcl
cmp
icebp
hlt
les
pop
pop
xchg
lahf
fstpt
test
fimuls
ljmp
outsb
pop
setg
pop
bound
cmp
loopne
xchg
push
std
xchg
jno
adc
rcrb
pop
push
jmp
cmc
xadd
dec
xchg
notb
xchg
fdivrl
mov
inc
bound
js
jecxz
in
add
adc
pop
jb
jns
xchg
mov
jns
ljmp
bound
or
add
jmp
popa
pop
test
add
cli
pop
data16
xor
loopne
add
frstor
xor
cmp
inc
pop
fstps
roll
adc
jp
mov
je
sub
add
and
das
adc
mov
inc
lea
xlat
pop
js
fwait
iret
std
out
sub
lahf
orl
bnd
pusha
pop
cmp
out
stos
pop
les
or
or
push
rolb
push
ret
inc
stos
mov
and
lods
jo
push
inc
sub
test
sub
mov
inc
clc
cmp
mov
ficoml
xchg
cmp
sub
lods
pusha
outsb
adc
jno
cmpsl
pop
jo
inc
repz
in
push
pushf
mov
aaa
push
mov
dec
hlt
cmp
xchg
negb
and
push
int
loopne
fsub
dec
add
sub
xchg
repz
mov
push
hlt
push
arpl
int
ss
in
mov
std
ds
inc
fwait
test
scas
bound
or
cmp
adc
outsb
pop
mov
pop
pop
pop
sarb
lods
mov
or
test
fwait
or
pop
dec
push
and
sbb
divb
addr16
mov
mov
push
sbb
cmp
jno
rolb
and
mov
fnstcw
mov
dec
hlt
push
sub
sub
lahf
jae
adc
test
dec
inc
xchg
negb
call
pop
add
int3
outsl
sbb
xor
adc
sahf
sbb
jge
xor
pusha
out
pop
fsubl
cmp
mov
inc
jns
rcll
lahf
test
pop
jne
imul
lcall
sub
jge
std
push
lahf
inc
mov
aam
cmp
frstor
jg
gs
and
xor
mov
cmp
data16
mov
pop
mov
push
movsb
sub
push
xor
mov
in
add
iret
mov
in
adc
cmp
sub
xchg
mov
and
sbb
mov
mov
out
js
scas
ror
push
lea
mov
mov
mov
sbb
mov
pop
sbb
pop
int
jne
inc
mov
or
mov
push
add
std
lock
inc
ljmp
push
and
push
js
jmp
sbb
cmc
sbb
popf
sbb
data16
add
cmp
movsl
cli
xor
pop
out
in
add
and
aam
mov
or
loopw
imull
fdivl
insl
xlat
call
mov
pop
push
out
xchg
stc
int3
push
repz
mov
mov
inc
mov
sub
adc
andb
aad
xor
xlat
mov
xor
xchg
pop
and
fcmovnb
je
push
push
pop
pop
sbb
pop
repnz
lds
insl
adc
fists
jno
pop
push
movsl
movsl
fst
fsubl
rol
push
fisubl
cmpsl
push
mov
loop
das
into
pop
addr16
test
icebp
leave
pop
pusha
lret
push
stc
xchg
enter
lods
sub
cmp
je
lcall
adc
cmp
shl
jecxz
mov
test
jg
jo
js
dec
sbb
aaa
xchg
repnz
sub
fwait
test
das
cmp
or
aad
shrl
and
push
xor
test
je,pn
call
enter
insb
testb
fcoms
jae
sbb
sub
mov
in
pop
pop
add
add
outsl
add
sbb
add
ljmp
lahf
mov
lcall
jns
cmpsb
add
xor
sub
inc
xor
mov
pop
nop
xchg
jecxz
adc
es
imul
cmpsb
fmuls
xchg
push
push
mov
pop
lods
xchg
pop
or
aas
lea
lret
dec
cmpsl
push
push
adc
ret
sbb
xor
cmp
ljmp
and
mov
fs
dec
fimull
and
mov
xchg
jnp
loope
nop
test
jmp
dec
cmp
cli
aad
mov
shr
mov
into
popf
shl
push
dec
add
push
xchg
pusha
xchg
jg
cmpsl
or
jl
int3
push
gs
xor
outsb
fs
imul
imul
mov
push
mov
add
outsb
std
lods
xchg
stc
push
and
lret
adc
or
movsl
data16
jns
dec
push
daa
push
and
inc
mov
icebp
cmp
cmp
pop
xor
mov
mov
bound
inc
xor
pop
mov
xchg
lock
dec
pop
push
sbb
jecxz
mov
arpl
sti
sbb
adc
insl
xor
repnz
pop
inc
jle
das
sbb
adc
addb
adcb
mov
mov
nop
dec
in
adc
cmp
and
dec
sub
pop
mov
add
pop
jl
adc
test
test
pop
dec
lret
pop
mov
int3
mov
cmc
jecxz
jbe
outsl
aam
cltd
clc
or
or
jb
scas
or
or
fucom
mov
mov
cmpsl
sti
pushf
pop
cmp
sbb
loopne
pcmpgtd
inc
outsl
or
movsb
jg
pop
shlb
into
add
pop
and
ficompl
push
mov
loop
dec
sub
lcall
cld
popf
xchg
and
add
out
pop
xor
jge
mov
push
mov
mov
insb
pop
sub
shrl
mov
icebp
push
sub
lock
or
xchg
or
jmp
jecxz
xchg
imul
pusha
xchg
inc
xchg
lock
mov
in
repnz
jle
jmp
into
sti
xchg
in
xor
lods
cmpsl
xchg
inc
in
jnp
stc
dec
rclb
movsb
pop
ja
in
xchg
push
mov
mov
mov
mov
flds
jg
jb
lea
ja
dec
mov
sub
leave
ret
dec
pop
dec
inc
roll
dec
loop
mov
lock
cmc
inc
xchg
xchg
or
aaa
lea
mov
add
mov
cmp
ljmp
sbb
inc
out
in
rorb
lock
je
sub
cmp
xor
or
sbb
inc
dec
mov
jb
mov
cmp
mov
jle
and
pop
pop
lods
jns
fs
jge
cli
sbb
popf
arpl
mov
xor
mov
mov
mov
lea
popf
sahf
jns
inc
movsb
test
or
andb
or
jge
pop
push
flds
shll
xchg
sub
lods
dec
out
adc
test
mov
sub
repz
sbb
sub
leave
and
or
and
sbb
jle
lret
and
push
es
mov
sarb
mov
xlat
jae
aam
pushf
inc
lret
inc
aam
scas
sarb
mov
push
scas
add
or
inc
push
jge,pt
xchg
cmpsb
je
aam
inc
or
or
sbb
test
dec
add
xor
xchg
cmp
jns
cmc
inc
xor
stc
das
mov
int
and
loope
pop
insb
pop
adc
test
pop
cmpsl
test
sbb
repnz
fnop
jae
lods
mov
add
or
mov
std
std
add
out
andb
out
loopne
jns
daa
pop
inc
pop
outsl
dec
cmpsl
and
lea
sub
popa
scas
movsb
xchg
and
jno
push
xor
dec
idiv
cmp
and
shrl
ja
xchg
gs
andb
push
add
sub
pop
sub
jmp
cwtl
mov
jbe
outsb
mov
mov
or
sbb
pop
pop
shll
out
pushl
xchg
sub
stos
pop
cld
iret
inc
mov
fdivl
jg
sahf
std
testl
jae
add
jg
or
insl
paddd
lods
jge
call
pushf
mov
fmuls
ja
inc
add
mov
stc
push
inc
adc
mov
lods
adc
cltd
cwtl
xchg
pop
and
inc
ret
loope
into
cmpsl
jle
leave
cmp
dec
lret
in
fwait
lret
xchg
xor
mov
insl
ds
jbe
cmp
rcrl
cmp
jns
xor
loop
in
pop
fstps
add
std
idivb
outsl
push
fidivrs
sub
mov
mov
adc
or
inc
dec
adc
mov
sbb
add
mov
out
or
sahf
add
negl
addb
arpl
mov
aad
test
cmpb
xchg
cltd
mov
insb
orb
inc
push
rorl
lcall
lret
mov
pop
aam
and
imul
cmovge
ja
mov
dec
mov
decb
insl
call
push
pop
aam
dec
das
iret
mov
fidivs
loopne
pop
iret
pop
aam
lret
shll
and
pop
push
xor
sbb
xchg
jo
dec
fiadds
cld
decl
inc
clc
or
inc
out
jmp
adc
inc
dec
push
xchg
xlat
dec
loope
xchg
movsl
mov
ja
in
sbb
add
inc
xor
loop
adc
cmp
in
flds
push
mov
add
or
cwtl
mov
fsubp
push
mov
stos
xor
push
out
sarl
mov
popf
adc
push
sbb
das
in
ret
mov
test
dec
out
pop
jle
negb
jp
xchg
adc
fdivrs
push
cmp
mov
mov
mov
mov
cmp
test
sbbb
out
addb
push
xchg
pop
xor
mov
push
sahf
jne
popa
std
add
mov
imul
xor
cmp
or
dec
or
subl
ja
push
out
movb
sbb
sbb
test
das
xchg
pushf
das
jle
inc
inc
cmpsb
push
test
mov
ss
aas
cmp
or
jnp
xchg
push
orb
cli
mov
movhps
je
fcoml
loopne
mov
nop
jbe
adc
rcl
cmpsb
leave
xchg
lods
insl
imul
xor
into
adc
mov
or
xor
add
add
testl
into
cmpsl
add
xor
mov
test
arpl
inc
call
xor
cmpsb
adc
lahf
mov
jne
xor
shll
jae
in
sub
mov
test
jnp
out
jb
pop
sub
adc
mov
push
out
jp
test
imul
and
into
lret
mov
int3
and
lret
mov
pushf
data16
jae
lcall
test
lret
mov
out
mov
inc
xchg
sub
in
add
pop
inc
mov
add
cmp
xchg
xlat
sub
lods
outsl
aaa
dec
dec
jmp
das
imul
pop
adc
int3
sbb
xlat
rorl
aad
idivb
inc
cmp
or
mov
popf
xchg
push
outsl
xlat
in
dec
cmp
xchg
ret
out
xor
inc
mulb
push
pop
movsl
neg
stc
push
mov
data16
adc
and
xchg
xor
imul
fsts
pop
ja
sbb
shrb
scas
push
aas
mov
cmpsb
adc
movsb
xchg
xor
add
sbb
adc
push
insl
je
ret
mov
test
mov
xchg
push
mov
adc
xchg
mov
stos
push
in
xchg
mov
inc
test
sub
mov
fdivrs
jecxz
adc
lds
mov
popl
and
stc
outsb
popf
add
repz
inc
jecxz
in
jle
mov
jmp
dec
xor
pcmpeqd
and
mov
inc
xor
mov
jp
mov
push
loopne
ja
rolb
popf
jle
inc
lea
cmp
mov
loop
icebp
pop
data16
jmp
test
push
mov
cmc
adc
cmp
push
pop
insb
sub
pushf
add
mov
dec
loop
pop
cmpsl
jo
data16
pop
sub
sbb
jne
ja
adc
mov
push
mov
icebp
add
jecxz
rcr
lods
jne
popf
push
aaa
pop
jg
loop
push
inc
outsb
pop
push
adc
dec
fyl2x
add
mulb
and
insb
or
aaa
leave
mov
cmc
in
lods
mov
mov
stos
outsl
lret
push
and
add
scas
stos
fistps
jl
dec
xchg
sahf
mov
mov
out
sub
mov
push
xchg
xchg
jmp
orl
jo
sub
pop
sarb
cltd
dec
xor
test
jae
pop
adc
aaa
mov
dec
decb
daa
or
lcall
mov
adc
sub
pusha
push
addl
ljmp
or
outsl
std
adc
punpckldq
ret
test
pop
mov
scas
ret
bound
call
movsl
movsl
call
add
test
dec
mov
fiadds
insl
rol
lret
mov
ja
mov
outsb
into
xlat
pop
leave
gs
xlat
sbb
lret
dec
shr
mov
jl
mov
rorl
jge
mov
enter
std
fisubl
sub
sub
dec
bound
ss
jb
inc
and
lods
pop
arpl
loope
dec
mov
jne
dec
pminsw
mov
push
mov
and
mov
or
cmp
pop
xchg
jo
int
test
xor
ds
push
fisubrs
adc
pop
movsl
icebp
out
cmp
sbb
test
outsb
shrb
or
js
lods
and
or
mov
xchg
adc
add
sbb
out
in
or
xor
jle
lods
imul
cmpb
jg
xchg
aas
loopne
jle
test
pusha
shll
push
cmp
nop
fs
fsubs
add
stos
loope
jge
and
xchg
bound
and
dec
pop
cli
pop
js
arpl
sbb
dec
sub
fnsave
pop
pop
xor
add
sti
lods
out
stc
out
fildl
and
rclb
sti
mov
xchg
pop
leave
xchg
movsl
push
push
cmp
jns
mov
sub
jns
xor
insb
pushw
dec
xchg
mov
adc
lods
aas
ja
stos
sub
lods
or
pop
ds
aam
sub
in
ljmp
mov
xchg
lods
sti
lods
clc
push
test
sub
decl
rcll
xor
xchg
popa
and
out
push
sub
xor
jo
inc
lea
xor
out
dec
enter
xor
add
incl
int3
inc
cmp
dec
add
bound
stc
or
shl
gs
xchg
xlat
sub
test
leave
jl
ss
ret
clc
pop
pusha
pusha
clc
cwtl
add
jbe
mov
in
ficoms
jbe
dec
inc
mov
sub
xor
nop
je
sbb
divb
shr
repnz
cli
shlb
dec
push
lds
popa
inc
xor
sub
push
add
xlat
xchg
sahf
sub
inc
das
sub
cmp
mov
sbb
gs
cld
shll
imul
push
pusha
jb
sar
or
je
idivl
arpl
sub
ficoml
std
addl
mov
or
sbb
daa
xchg
or
pusha
push
jo
push
loopne
push
lods
xchg
test
arpl
mov
std
pushl
push
dec
stos
add
sub
inc
sub
sub
pop
pop
fucom
dec
push
sahf
loopne
sbbb
pusha
mov
sub
jge
jne
bound
cmp
dec
fs
jbe
lds
adc
add
jmp
dec
pop
mov
cli
mov
repz
cmp
stc
mov
adc
out
fsqrt
mov
aaa
mov
adc
pushf
jmp
add
or
lret
cmp
jo
out
xchg
cmp
pop
mov
aad
stos
popa
shlb
hlt
jbe
lcall
inc
or
jno
add
pop
mov
adc
pop
push
mov
out
das
sti
cmc
mov
test
mov
ret
sbbl
pop
rorb
bound
fwait
dec
push
xchg
cli
inc
loope
dec
jecxz
cld
or
andl
out
lcall
fs
in
lods
mov
shl
lock
lods
xorb
push
inc
rolb
cmp
inc
cmp
ljmp
xor
and
cltd
dec
out
call
cs
mov
sbb
bound
int
fldl
in
xchg
inc
in
je
sbb
and
jle
xchg
sahf
push
push
js
push
xor
imul
mov
lods
bound
lahf
fimull
jne
jle
mov
mov
incb
bound
repnz
dec
addr16
sub
repz
dec
xor
push
mov
or
mov
insb
lea
push
lahf
cmp
outsl
das
xlat
std
ljmp
call
mov
or
fisttpl
enter
jae
adc
fwait
ljmp
popa
sbb
push
sbb
sbb
jle
mov
mov
push
popw
test
rcrl
subb
in
stos
ds
mov
adc
mov
movsb
test
pop
pop
insb
inc
xchg
xor
in
and
jo
lret
jmp
pop
and
pop
push
or
push
int
jl
fsts
data16
mov
orl
incl
aam
insl
fcom
arpl
xor
cmpsl
push
xor
add
xchg
dec
sahf
xchg
mov
push
xor
popa
add
lahf
cltd
call
xchg
lret
pop
test
bnd
fsubrs
lods
add
mov
std
fwait
pop
push
jle
fisubl
scas
sub
mov
xchg
jg
ljmp
stos
mov
xchg
adc
ds
mov
and
daa
dec
add
jl
lock
cmc
ret
mov
xchg
aad
sub
pop
test
cltd
jns
xor
mov
daa
and
pushf
scas
adc
inc
cmp
jo
push
sarb
pop
fdivs
sub
gs
push
int
inc
add
mov
div
cmpl
jae
lods
insb
pop
jge
or
fldcw
inc
adc
inc
pop
mov
lcall
jnp
dec
mov
ljmp
inc
xchg
and
xchg
jno
ret
jmp
adc
push
data16
sbbl
enter
push
cltd
sub
add
mov
add
mov
js
test
jmp
jg
pop
scas
cltd
cmp
test
sub
sbb
pop
cwtl
scas
divb
fidivrl
xor
divl
cmpsl
cmp
push
fnstsw
fstps
ljmp
lcall
fsts
jne
ljmp
int3
pop
and
ljmp
int3
mov
adc
pop
les
fbld
push
jo
testb
push
lods
dec
push
icebp
lret
mov
nop
push
add
movsl
sbb
or
cmpl
push
mov
sbb
pop
insl
rorl
mov
popa
xchg
mov
hlt
cmpsl
lods
push
adc
scas
ljmp
inc
push
dec
imul
cltd
enter
push
push
outsb
add
push
xor
push
test
push
jb
mov
lds
jle
loopne
add
repnz
xchg
xor
push
insl
cltd
inc
dec
sub
and
fsubp
pop
decb
push
ja
mov
xchg
mov
fcoml
jbe
xor
jge
add
xchg
and
xor
pop
add
dec
xchg
pop
insl
xor
jp
xorl
pop
movsbl
out
sub
stc
pop
mov
fisubrs
roll
fdiv
xor
test
sub
push
mov
int
lret
push
mov
push
repnz
push
imul
inc
pushf
lea
fs
out
inc
fsubr
xchg
mov
stc
pop
cmpsl
dec
pop
and
ljmp
das
or
mov
add
xchg
rclb
ret
xchg
or
jae
cmp
adc
mov
push
aaa
push
xchg
mov
call
in
leave
clc
sbb
pop
mov
lods
aas
inc
fwait
inc
mov
xchg
ljmp
fdivrl
push
and
cmp
xchg
mov
addr16
or
or
bound
add
jnp
jle
or
sub
leave
loop
out
adc
bound
fdivrs
cmp
fmuls
push
test
ror
dec
fcmovbe
sbb
dec
or
into
lock
xchg
inc
cmp
test
mov
mov
mov
cmp
fcoml
scas
adc
popf
stc
jb
scas
push
or
mov
sbb
mov
lcall
pop
cmc
mov
dec
pop
sub
push
mov
xchg
arpl
jp
pop
jmp
in
leave
inc
mov
ja
add
out
repnz
ds
add
test
daa
jg
stos
in
push
fidivrl
repz
daa
aam
movsl
outsb
xlat
adc
cld
sbb
dec
shrl
mov
lret
testl
addl
cwtl
jge
aam
push
adc
sahf
xorl
in
addr16
jmp
jl
ret
cmp
ret
mov
fcmovnb
mov
sub
dec
ret
mov
cmp
or
sti
jno
ret
and
les
daa
and
insb
js
orl
lds
xor
shr
mov
testl
sbb
cltd
inc
fcompp
and
clc
adc
subl
into
pop
cld
adc
sarl
movsl
stc
lea
std
mov
cmp
adc
pop
or
cmc
push
jp
loopne
fdivl
test
pop
mov
movsl
mov
div
lods
push
cli
fsubr
cmpl
das
fs
cmpsb
dec
mov
testb
push
or
pop
fdivrs
push
and
sbb
nop
insl
fdivrs
jbe
jne
jo
jnp
dec
repnz
xchg
fcoml
into
cmp
pushf
enter
cmpsb
adc
loop
shrl
jmp
lock
gs
cltd
in
fcmovnb
lods
scas
loope
dec
dec
xorb
test
shrb
hlt
lods
enter
outsl
xlat
mov
aaa
and
jnp
cmp
into
xacquire
icebp
fdivr
mov
aaa
push
aaa
ds
int
pop
mov
adc
je
test
add
test
jp
sbb
pop
dec
cltd
shlb
in
das
mov
pop
xchg
adc
pop
jle
adc
fsubl
jle,pn
loope
inc
push
mov
sub
push
std
pop
es
mov
cmpsb
xchg
mov
outsl
sub
pop
jge
int3
ss
hlt
and
mov
jnp
push
cltd
mov
in
xor
jecxz
js
jp
mov
cli
jle
imul
or
mov
fidivrs
movsl
cwtl
fimull
sbb
int3
mov
roll
xlat
cwtl
scas
add
push
cwtl
rclb
mov
xchg
add
sub
lods
push
out
repz
lret
pop
aas
lret
mov
sbb
add
jnp
sbb
movsb
xor
enter
jae
in
popa
mov
push
fildl
aas
scas
sbb
sub
sarb
addr16
push
out
jl
pop
or
pop
iret
mov
inc
testl
xchg
outsb
pop
and
stc
mov
movsl
int
jle
jno
inc
clc
das
pushl
push
ja
mov
addr16
adcb
cmp
mov
leave
mov
and
pop
add
sbb
pop
in
je
xor
jne
aaa
scas
xchg
orl
ja
in
lcall
pop
adc
push
xchg
sarb
aas
push
mov
out
dec
outsb
enter
iret
lret
sti
dec
or
mov
scas
dec
push
lcall
call
mov
mov
in
es
sbb
lahf
in
stc
daa
pop
orb
mov
xor
push
mov
rorb
xchg
popf
in
push
or
lahf
push
inc
lds
test
lahf
mov
cmp
or
cmc
or
xchg
sarb
test
pop
cmp
rol
gs
jmp
int3
mov
je
enter
push
movl
inc
daa
shl
sub
sub
or
es
fnstenv
cs
or
sub
mov
int
sub
fsubrl
into
xor
push
ret
jmp
rcr
adc
scas
in
in
fistpll
mov
mov
cwtl
push
mov
shl
clc
jle
sub
push
loop
sar
add
mov
xor
push
inc
test
fwait
cltd
stc
pop
and
push
sti
push
bound
and
call
scas
sti
lods
inc
out
mov
outsb
nop
les
je
mov
lahf
sbb
sar
mov
xlat
fstps
sub
ret
ss
mov
dec
int3
push
mov
movsb
les
mov
inc
fistps
daa
rol
pop
xchg
jb
scas
mov
in
or
sti
inc
cwtl
lcall
fnstcw
mov
cld
mov
adc
jle
mull
daa
popl
sahf
leave
mov
dec
cmpsb
fldenv
inc
shll
les
into
pop
xor
push
inc
lahf
dec
fiaddl
clc
jp
mov
lock
clc
ret
xor
pop
int
lds
popf
imul
enter
cs
xor
cmp
add
jecxz
mov
jne
add
or
push
mov
aas
repnz
fs
jmp
repz
sbb
xor
in
in
push
inc
inc
inc
dec
out
lcall
inc
das
repz
xor
inc
cmp
test
xor
mov
sub
call
jbe
push
mov
inc
repz
out
cwtl
out
xlat
fisubrs
cli
xor
mov
cmpb
fucom
push
in
ds
fsubr
scas
mov
adc
je
mov
xor
sbb
push
popf
out
pop
loop
xor
pop
or
sub
lods
xor
sub
cwtl
jno
loop
xchg
movsb
ss
jl
dec
mov
stc
inc
xor
lods
xchg
pop
fstpt
inc
pop
pop
cmpsl
aad
testl
xchg
dec
push
pop
rolb
inc
and
mov
dec
lret
in
add
pop
enter
inc
push
ret
rolb
test
or
subb
aad
ret
jns
or
mov
outsb
inc
or
sbb
xchg
lea
mov
ss
mov
xchg
sti
mov
mov
jno
addr16
dec
xchg
test
push
test
xchg
sbb
ja
jnp
jns
lods
mov
mov
int
mov
arpl
andb
push
add
repnz
mov
cmp
add
test
addr16
out
adc
iret
inc
push
inc
and
jb
inc
pushf
pop
insb
cltd
sbb
mov
sarb
mov
jle
inc
inc
addr16
daa
test
pop
cmpsb
fimull
lock
xor
xor
daa
pop
or
mov
mov
loope
xchg
sahf
adc
pusha
pop
aad
mov
dec
cmp
shrb
jbe
and
sub
mov
push
mov
ret
int
int
xchg
inc
mov
adc
cli
push
repz
test
in
add
mov
repnz
sub
dec
lock
xor
lea
push
js
push
fwait
and
xchg
imul
sbb
mov
push
xchg
sub
cmpb
aad
bound
loope
idivb
mov
into
add
clc
movsl
imul
aaa
in
push
insb
loopne
or
stc
pop
loop
test
dec
jg
int
sbb
outsl
subl
jne
push
js
stos
pop
inc
aas
scas
fcomps
popa
ljmp
push
mov
mov
data16
lods
or
jge
inc
adc
or
iret
sbb
push
add
mov
shl
clc
and
icebp
and
adc
sbb
lods
mov
push
in
je
xchg
mov
and
dec
subl
and
ljmp
push
fnstsw
xchg
dec
popf
test
outsb
xchg
mov
int
pop
icebp
sbb
push
lahf
adc
fnstenv
mov
mov
jb
fidivs
dec
loop
insb
push
jge
iretw
mov
loopne
push
enter
clc
xchg
pop
pushf
sahf
xor
icebp
xor
jbe
push
push
ss
andb
sub
mov
in
jb
cld
xor
js
or
popa
lret
lahf
dec
mov
mov
or
jecxz
sub
scas
stc
in
lods
fdivrs
add
enter
mov
jg
ss
or
pop
xchg
mov
jno
inc
ja
dec
dec
push
xchg
inc
fistpl
inc
popf
mulb
scas
adc
lret
in
out
sbb
adc
clc
stc
adc
inc
aaa
push
subb
xor
dec
aad
mov
cs
cwtl
ds
std
arpl
out
cltd
in
rorb
push
or
lods
jmp
aaa
rorb
js
adc
xchg
adc
out
jl
inc
and
and
mov
cltd
lret
mov
lret
paddsw
in
fs
jg
sbb
mov
je
ror
icebp
adc
sub
fsubrs
jae
out
sti
xor
fwait
jmp
and
roll
cs
or
in
and
into
push
out
aas
adc
iret
push
adc
ret
bound
paddd
out
dec
lods
jp
dec
adcl
testb
lods
mov
pop
sahf
outsb
jne
imul
pop
xchg
enter
clc
mov
xchg
dec
sbb
sbb
aaa
cmp
dec
aas
aad
add
jge
xchg
divl
test
imull
int3
lods
movb
adc
into
cmp
pop
fcoms
outsb
cwtl
cmp
sub
sbb
mov
stos
jbe
cmpsb
test
rorb
leave
xor
sbb
sub
mov
gs
push
xor
adc
jge
push
arpl
in
pop
sbb
je
sub
xor
negl
sub
je
push
stc
aam
jo
xor
pop
and
mov
or
xchg
adc
xor
cmp
ljmp
call
cmc
sbb
adc
loop
dec
pushf
ljmp
enter
sub
and
cmp
cmp
jnp
out
daa
dec
push
pop
ds
adc
fsubrs
and
mov
add
pop
xchg
push
or
xchg
outsb
fnstcw
mov
jo
sahf
out
and
adc
shrb
xchg
addr16
push
and
movl
stos
cltd
shrb
add
sbb
mov
dec
adc
pop
les
out
mov
inc
sti
dec
xor
xchg
or
repz
loopne
jns
outsb
loope
sub
dec
mov
inc
push
fiadds
pusha
mov
std
mov
xor
push
stos
and
sarb
mov
pop
jne
subl
pusha
test
sbb
push
lock
jecxz
add
mov
jno
pushf
mov
lcall
push
jo
mov
jge
out
jg
inc
xchg
in
aaa
xor
push
xchg
push
in
adc
jns
jle
fadd
sbb
aam
leave
mov
pop
std
ret
adc
dec
in
cmp
adc
nop
arpl
aam
daa
mov
inc
call
dec
dec
and
sub
mov
pop
mov
push
sbb
xchg
mov
fnstcw
inc
test
push
dec
imul
or
inc
mov
rcll
xchg
aad
xor
cmp
jne
sti
fstpt
mov
and
lods
and
inc
jg
fistl
add
repnz
iret
imul
mov
pusha
rcr
cwtl
mov
jmp
mov
xchg
inc
adc
dec
sub
and
inc
iret
mov
mov
add
arpl
scas
daa
rcrl
pop
xchg
push
movsl
pop
mov
or
mov
arpl
ds
rorl
xor
ret
or
push
push
mov
mov
xchg
cmp
push
movsl
cltd
xchg
std
adc
dec
insl
repnz
cmc
rcrl
mov
shrl
or
push
outsb
pop
dec
xchg
push
xor
xor
fs
out
push
xchg
ss
jb
pop
dec
dec
mov
iret
jb
pop
jp
mov
jle
xchg
xor
sub
rcrl
push
aam
into
out
jp
mov
mov
popf
mov
xchg
dec
leave
mov
icebp
xchg
jg
fsts
cs
xchg
stc
mov
sbb
fldl
cltd
shrl
mov
mov
or
ljmp
dec
mov
movsb
and
sahf
cwtl
pop
mov
dec
les
mov
mov
pop
mov
les
mov
out
xchg
xchg
and
push
lods
test
pushf
inc
push
mov
test
add
sbb
dec
movsb
mov
lahf
lret
adc
and
rcrb
stos
mov
add
add
leave
cmp
enter
aad
std
sarl
xchg
and
push
repz
movsb
ret
jnp
sbb
adc
stos
mov
push
adc
sub
jo
mov
push
jmp
hlt
inc
dec
bound
pop
mov
sbb
scas
shll
jg
nop
test
cmp
cmpsb
ss
cwtl
mov
jo
xor
cmp
out
pusha
iret
mov
push
push
rorl
xlat
insl
mov
sahf
push
mov
cmp
xor
sti
pusha
inc
sbb
icebp
insb
addr16
cmp
cmp
mov
in
out
loope
dec
aaa
lahf
js
aaa
out
add
jae
jnp
addl
test
and
shl
ljmp
cmc
inc
jnp
andl
adc
jg
rorb
addr16
lahf
lret
les
mov
fwait
xor
mov
insl
adc
insb
into
cmc
dec
out
sbb
mov
lret
das
jp
stos
add
fimull
jg
enter
inc
aaa
mov
sti
test
push
jno
stc
pop
shrl
lock
or
icebp
cmpsb
dec
lods
cmp
jno
xchg
jle
loope
int3
xor
lods
das
das
push
iret
mov
pop
mov
cwtl
inc
push
stos
shrb
loopne
jns
mov
fistps
jle
dec
mov
sub
nop
notl
test
sarb
sti
bound
and
loopne
dec
cld
test
adc
jecxz
mov
mov
cmp
call
push
sahf
jl
fmul
sub
push
lea
call
scas
lret
outsb
fcom
fs
imul
mov
aam
int3
loope
js
stos
fwait
in
int
nop
pop
cmp
sbb
mov
add
stc
and
pop
cmp
adc
lret
in
js
rol
loop
xor
mov
lret
fadds
sbb
jg
dec
sbb
out
or
mov
xorl
adc
or
sbb
mov
jmp
jg
fstpl
repz
testb
aaa
push
aaa
cmp
adcl
ret
testb
repnz
xchg
mov
mov
sbb
sub
fcomip
outsb
add
mov
xchg
push
gs
lret
jg
inc
mov
clc
mov
out
fdivl
mov
daa
fidivs
lahf
xor
je
js
pop
xchg
adc
mov
sub
jl
adc
adc
sbb
and
jbe
jp
add
sbb
into
gs
sub
mov
xchg
cld
jle
lods
pop
mov
cmp
add
js
test
jl
mov
mov
pop
add
cmpsb
lret
push
test
stos
jnp
or
cmpsb
mov
daa
mov
out
push
orl
loope
aas
dec
push
push
pop
leave
sbb
inc
out
pop
jno
popa
sbb
daa
fsubl
jmp
cmp
push
lock
cli
xchg
fidivl
mov
loop
cmp
add
ljmp
inc
xchg
fs
mov
sub
loope
or
aam
dec
inc
pop
insl
dec
sub
jno
jo
cmp
xchg
jecxz
and
xchg
mulb
cltd
inc
out
add
out
icebp
sbb
int3
loop
bound
mov
sbb
pop
stc
test
imul
dec
repz
xchg
hlt
and
push
ffree
icebp
push
adc
hlt
xchg
mov
xchg
sub
sub
mov
dec
dec
inc
test
xchg
lea
movsb
lock
push
push
pop
cmp
decb
icebp
inc
out
inc
int
sub
iret
push
dec
sub
sub
fsts
outsl
xor
loop
neg
sbb
adc
pop
xchg
pop
push
push
adc
inc
scas
mov
andl
xor
jnp
lret
ljmp
push
aaa
ja
push
mov
sbb
or
jl
mov
pushf
dec
adc
addr16
ss
pushf
pop
leave
clc
repz
lds
decb
outsl
popa
je
xorb
jg
or
xchg
int
lahf
xchg
dec
test
div
mov
mov
xchg
and
jle
dec
daa
leave
dec
xor
jbe
inc
mov
add
loop
ror
in
cmp
std
mov
pop
aaa
inc
xchg
shlb
imul
pop
cmpsb
fcmovnbe
andb
inc
lret
jle
adc
push
in
pop
orl
mov
and
push
xchg
push
cld
in
and
sub
sar
nop
adc
push
xchg
out
xchg
ljmp
fstpt
imul
mov
xchg
lock
sbb
ja
test
push
ret
insl
and
push
push
jecxz
scas
mov
push
fmuls
push
xor
xchg
hlt
out
lahf
cmpl
movl
inc
outsl
stos
ja
push
out
in
in
dec
lock
mov
jno
mov
cmp
ret
int3
and
rorb
inc
adc
mov
movsb
push
aam
jo
dec
jge
cwtl
mov
jle
in
fsubrs
inc
xchg
sti
stos
add
pop
ja
xchg
lret
bound
int3
test
decl
mov
fwait
sub
add
cmp
flds
fwait
jg
jecxz
int3
cs
lods
cmp
lahf
cld
and
rcrb
cmp
movsb
sti
cmpsl
sub
jmp
adc
sarb
xor
cli
cmpsl
mov
sti
fnstsw
mov
and
or
fimuls
mov
movsb
es
sub
daa
mov
cli
in
daa
jnp
mov
cmpsb
std
push
orl
mov
jb
adc
dec
sbb
insb
mov
mov
enter
push
xchg
push
fadds
int3
aaa
ret
mov
push
cmp
cmpsl
in
inc
dec
aam
pop
inc
jae
and
xchg
dec
adc
push
scas
insb
adc
shlb
sub
add
and
call
cmp
sar
movsl
je
int
fisubrs
mov
push
jecxz
and
dec
mov
cli
push
xchg
shll
mov
ror
sti
cmpsl
mov
hlt
fistpl
mov
ret
in
out
jae
les
xor
mov
pop
mov
sub
andb
in
xchg
popf
xchg
shl
sbb
mov
test
xchg
fisttps
stos
rolb
mov
or
xor
push
lods
mov
mov
jne
pop
es
xchg
sbb
outsl
cltd
shl
fcoml
fucomip
cmp
movsl
int3
pushf
mov
mov
adc
mov
pushf
aam
jbe
pushf
pop
test
filds
push
mov
cmovle
pop
mov
or
subb
jno
mov
popf
cltd
std
jl
xor
dec
sbb
loopne
jmp
daa
mov
ss
lcall
loop
inc
pop
push
jp
and
cmp
sub
mov
fwait
push
sbb
jnp
pop
cwtl
and
test
pop
fs
mov
inc
dec
mov
add
pushf
mov
js
xchg
popa
out
mov
pop
std
aam
inc
in
add
inc
cmp
xchg
fs
cld
jb
dec
pop
nop
dec
pop
mov
sbb
hlt
ss
jns
test
lret
movb
lods
jns
ja
xchg
scas
out
mov
jmp
adcl
fs
xlat
xor
adc
into
lock
hlt
leave
xor
and
rcrl
fimull
push
adc
lret
or
add
jne
mov
popf
inc
cld
xor
std
rol
cmp
sbbl
xchg
mov
mov
mov
mov
test
inc
add
jnp
loopne
je
js
stos
pop
lret
jbe
iret
mov
shl
daa
mov
adcb
loope
or
inc
decb
and
cmp
sbb
call
fdivs
lcall
iret
fucomi
push
pop
dec
fbstp
inc
dec
enter
movsl
shlb
or
cmp
inc
dec
sub
xchg
inc
mov
imul
dec
mov
mov
dec
fwait
mov
and
outsb
or
out
jb
push
aas
mov
push
faddl
out
jl
push
roll
and
out
xchg
push
mov
enter
scas
js
lahf
mov
jnp
insl
mov
repz
mov
jecxz
loop
jo
sbb
aam
mov
clc
xor
fimuls
aas
cmp
xlat
mov
mov
mov
repnz
sbb
insl
mov
mov
mov
rol
mov
cmp
push
mov
fcmovnb
mov
pop
push
in
cmp
test
bound
loopne
outsb
decl
mov
cmp
jecxz
mov
cmp
cmpb
aas
mov
inc
insb
adc
add
push
inc
inc
das
xchg
lods
push
pop
jno
xchg
xchg
insb
test
loope
fidivrl
mov
xchg
nop
cmc
jmp
mov
clc
sub
lds
sbb
cltd
ja
std
repnz
test
jnp
dec
jmp
push
cmpsb
add
sti
ror
xlat
out
sub
inc
mov
icebp
insb
notl
movsb
or
orb
jns
and
inc
mov
mov
mov
lcall
or
test
nop
int3
mov
in
add
daa
bound
insl
adc
and
inc
sbb
push
movsl
xlat
fcmovbe
orl
int3
and
or
jae
pop
and
dec
xor
and
add
jns
data16
divb
mov
mov
rol
negb
ret
loopne
out
inc
cmpsl
test
lret
cmpsb
jle
sub
or
pusha
stos
or
pop
arpl
and
sti
jg
push
mov
sub
mov
and
stc
xchg
add
stc
fldcw
lea
add
dec
mov
stc
pop
and
sub
mov
adc
or
pop
mov
je
rolb
push
inc
mov
xchg
add
jmp
xlat
rolb
adc
ljmp
sub
cmpsb
dec
xlat
inc
std
leave
rcrb
rolb
jno
sub
fimull
leave
and
fidivs
pop
rcr
idivb
cs
sub
xor
in
sub
mov
test
cltd
fisubl
imul
fmul
test
add
cmp
add
sub
and
push
mov
test
repz
imul
jecxz
push
xchg
ja
gs
inc
push
popa
jno
inc
xchg
add
mov
fisttps
mov
jns
jecxz
or
xchg
aas
mov
and
push
es
or
movl
push
cmp
add
xchg
lock
jbe
int
push
adc
or
or
ja
add
enter
or
xchg
fdivrs
pop
ret
sbb
fisubrs
aad
lret
sbb
pop
cmc
push
lods
dec
mov
ja
js
cmp
push
aam
test
inc
insl
mov
sub
bound
pop
es
add
aas
jmp
sub
adc
add
or
call
pop
fcom
mov
fildl
loop
jno
insb
aam
xchg
call
fsts
mov
es
ljmp
cltd
test
sahf
inc
in
stc
dec
jmp
sbbb
test
xchg
cmpsb
sub
mov
rcll
fsubs
mov
cld
cmpsb
std
mov
movsb
pop
pop
jae
pop
xor
and
ret
sbb
add
xchg
nop
call
jns
and
out
fucomp
jg
mov
and
test
push
fwait
inc
jl
xor
pop
aad
pop
lea
je
test
mov
fists
scas
xchg
ja
sbb
fimull
mov
sub
mov
fnstcw
out
fcoml
adc
mov
cwtl
dec
lods
out
rcl
or
push
inc
clc
insl
cmp
fwait
into
mov
movsl
int3
ret
filds
mov
adc
rclb
int3
inc
orb
ljmp
mov
cmpsb
add
dec
cmp
loopnew
mov
sbb
pop
jb
jmp
and
cld
adc
imul
js
cli
aas
fidivrs
inc
xchg
dec
mov
mov
inc
xchg
imul
movsb
outsl
cmp
sub
xor
test
int
push
test
mov
sub
aad
testb
xor
and
daa
adc
xor
sub
leave
add
pop
xor
fcoml
outsb
xchg
ffree
xchg
push
iret
xchg
lods
xchg
sbb
adc
cmpsl
pusha
ret
lods
mov
push
dec
xor
xlat
ss
cmp
cmp
dec
test
movsl
jecxz
sti
lods
aam
cmp
in
rclb
inc
pop
jnp
push
aam
pop
xchg
in
in
and
imul
sub
out
jne
pop
aas
pop
pop
shll
or
push
inc
mov
and
pop
lock
dec
jp
push
pop
scas
xor
lcall
movsb
scas
cmpsl
cld
fidivrl
dec
cld
push
cmp
jle
push
xor
mov
ret
dec
inc
dec
push
cmp
jg
lods
and
sbb
xchg
ret
sub
fldenv
mov
sbb
xchg
fdivrl
lods
cmp
push
inc
jecxz
sbb
in
jmp
fistl
loop
arpl
imul
ret
imul
lds
xchg
sub
mov
dec
sub
mov
mov
fidivrl
add
je
into
xorb
not
fisubrl
icebp
jno
test
test
icebp
pop
sub
add
and
mov
jl
jmp
dec
insb
jle
cmp
adc
filds
jb
out
enter
push
mov
add
je
hlt
xor
testl
add
les
outsb
ret
clc
sbbl
cmp
loopne
inc
mov
cmp
test
jnp
jl
mov
pop
lods
dec
pusha
hlt
mov
mov
je
cwtl
dec
fcoml
push
pop
sub
xlat
lea
mov
je
fdivrl
int3
mov
lret
test
jecxz
ja
mov
loopne
cmp
push
outsl
ss
mov
cs
mov
shlb
mov
lods
add
add
jle
sub
test
mov
dec
and
cmp
dec
push
add
and
daa
and
mov
rorb
int3
adc
dec
or
inc
movsb
dec
push
jae
jge
xchg
inc
mov
fstpl
enter
xchg
cmpsl
mov
sti
lds
xchg
cmpsb
rcrb
mov
xchg
outsl
mov
in
adc
fldenv
lret
out
fsubl
mov
test
into
fistps
xchg
repz
sub
popf
jmp
inc
inc
enter
or
mov
mov
xchg
std
movsb
test
ss
ljmp
in
lods
das
push
mulb
add
pop
and
fcoml
xchg
mov
xchg
xor
push
shl
stos
jp
scas
out
jle
fbstp
scas
ds
fs
push
jmp
rorl
cmp
add
jae
sahf
sub
dec
stos
mov
jne
jmp
push
jmp
jmp
inc
fwait
cs
jae
ret
push
mov
ret
mov
dec
dec
pushf
inc
mov
jb
ljmp
mov
fsub
push
xchg
cmpsl
dec
dec
insb
test
push
or
adc
pop
test
popa
pushf
push
mov
pop
mov
movsl
jmp
cmp
test
mov
stc
lds
les
pop
sarl
adc
das
xor
mov
push
pop
push
cmpl
sub
push
push
push
push
fdivrs
loopne
ror
sahf
insb
jne
icebp
xchg
int
lds
xorb
loope
loopne
jbe
inc
pop
jge
xchg
push
push
push
rorl
fbld
adc
cld
xchg
and
scas
outsb
sub
out
jp
pop
mov
mov
push
scas
mov
or
daa
and
mov
and
or
push
mov
and
and
aaa
arpl
pop
inc
out
iret
rorl
push
mov
fwait
cmpsl
push
into
push
jbe
dec
lcall
aas
cmp
jb
mov
pop
cmp
gs
pop
ja
adc
imul
lahf
push
or
dec
dec
add
cltd
lods
es
into
ja
and
sahf
push
iret
xchg
subb
ret
sbb
in
mov
xchg
mov
adc
sbb
mov
das
pop
inc
stos
lods
leave
jecxz
jecxz
xchg
xchg
add
pmullw
add
pop
outsl
pop
or
pop
mov
xor
sahf
out
or
add
adc
jle
cmp
test
dec
aam
cli
ss
nop
add
ret
insl
aad
pop
or
or
pop
lcall
mov
add
mov
andl
popf
pop
testl
adc
test
mov
fcoml
addr16
and
lock
aas
pop
ret
sti
xchg
shlb
lret
in
call
dec
inc
scas
mov
pop
push
push
shl
arpl
jns
dec
mov
scas
inc
pop
imul
push
sbb
out
xchg
addr16
out
daa
into
insb
or
push
cmp
arpl
dec
push
into
xchg
pusha
test
iret
jbe
pusha
pop
sub
stc
jge
ret
and
sbb
sahf
ds
push
mov
loopne
dec
mov
jb
cld
mov
das
sbb
xorl
add
pushf
test
pop
push
xchg
push
xchg
mov
stos
xor
add
inc
data16
inc
adc
mov
mov
pop
xchg
test
sbbb
mov
jg,pn
fldcw
jae
mov
jp
in
push
push
jp
fldenv
cmp
negl
lret
lock
cmp
push
mov
add
movsb
jmp
and
xchg
fwait
cwtl
xchg
out
xchg
shr
xor
cmp
outsb
sbb
push
aad
lcall
push
repnz
aad
adc
call
push
ret
sarl
push
adc
lods
js
insl
cld
jecxz
sbb
pop
lahf
pusha
fsubl
xor
pop
aad
xor
es
mov
adc
in
mov
loopne
xor
xlat
sahf
and
push
mov
in
xor
icebp
test
test
fiaddl
mov
xor
js
xor
or
xchg
ret
bound
jo
test
pop
cwtl
movsl
in
arpl
dec
popa
cmp
xchg
sti
push
ja
test
cmpsb
mov
pop
sub
push
insl
es
sbb
shlb
rol
xchg
add
js
push
dec
pushf
ret
and
mov
adc
cmp
mov
scas
in
ljmp
jne
andb
mov
cmp
mov
leave
sbb
ret
mov
in
inc
xchg
push
push
imul
ljmpw
daa
lock
push
dec
jl
push
bound
adc
cmp
add
outsl
pop
call
shrb
fcmovu
xor
xchg
push
sub
cmpsl
inc
xor
mov
out
sbbb
xchg
dec
inc
jmp
cmp
or
shll
pop
pop
fwait
repz
enter
or
mov
or
pop
std
das
shlb
shlb
iret
jbe
dec
mov
cmp
mov
mov
jle
mov
xchg
sti
gs
or
push
and
push
sarb
insb
xlat
enter
mov
jbe
adc
test
mov
gs
fwait
cltd
inc
movsb
in
leave
mov
adc
shlb
iret
or
sahf
push
icebp
mov
jge
push
pop
lea
out
jnp
adc
pop
in
or
pushf
and
pop
outsl
or
and
aad
xor
les
repz
aad
je
xchg
bound
sbb
jo
rcrl
lods
or
test
les
movsb
xor
loopne
fwait
int3
fadd
scas
ja
sub
xchg
sbb
push
pushf
ja
sbb
mov
jae
mov
cmc
adc
mov
jnp
stc
cmp
mov
pop
mov
xchg
adc
negl
int3
sti
ds
stos
xchg
aad
addr16
or
add
dec
and
cld
rcl
mov
inc
xchg
sbb
cmp
cmp
jp
jecxz
popf
jmp
sub
inc
mov
daa
pop
dec
xlat
push
sbb
jbe
mov
adc
mov
je
mov
repz
or
push
addr16
cmp
andb
and
in
pop
test
inc
vpaddw
mulb
pop
sub
mov
in
lock
adc
jno
mov
mov
add
mov
divl
cmp
test
mov
xor
daa
push
fnstcw
mov
mov
or
jge
enter
xor
sarb
aaa
test
mov
sahf
cmpsb
loopne
icebp
hlt
cmp
aaa
push
hlt
imul
mov
adc
fs
jbe
pop
mov
sub
outsl
push
fisubrs
je
cmp
cltd
into
enter
ja
cmpl
jo
adcb
popf
pop
sub
test
cmc
test
and
out
pop
mov
add
mov
ret
jle
xchg
jno
jle
lea
dec
jae
into
mov
ror
mov
dec
mov
xchg
inc
test
ss
inc
sbb
cmp
jmp
xor
xor
in
or
pop
add
sub
shr
inc
push
ret
insl
pop
mov
inc
imul
pop
xlat
pop
hlt
jno
cs
jl
mov
ficoml
int3
jp
mov
sbb
in
fucomi
ds
imul
popa
mov
dec
inc
mov
sahf
mov
daa
aas
lods
arpl
ret
cmpb
sbb
jne
movsb
lahf
shrl
js
mov
or
pop
fiaddl
sbb
adc
push
ja
fst
jg
ret
cmp
ljmp
push
xor
pusha
cmp
es
enter
mov
fmull
mov
cmp
mov
in
mov
outsl
inc
pop
jb
push
scas
cwtl
mov
subl
lock
push
inc
jnp
outsb
loope
out
mov
xchg
inc
sahf
jne
pop
andb
push
mov
xlat
ret
sub
inc
push
aam
xor
jno
sarl
rorb
jge
das
pop
push
hlt
or
sbb
pop
push
adcl
fwait
adc
or
jno
adc
mov
aaa
out
sbb
adc
mov
mov
xchg
and
xor
mov
sbb
imul
mov
xor
dec
jo
jae
add
lahf
pop
pop
mov
in
mov
push
mov
mov
jb
xchg
fsubrs
lods
imul
jmp
loop
rcrb
cmc
sti
jge
cli
xchg
test
push
dec
jae
arpl
sub
jo
dec
inc
mov
xor
cwtl
fstps
add
bound
xor
fsubl
gs
fbld
push
cmp
rolb
pop
shrb
cmp
test
lret
sbbl
mov
mov
push
insb
xchg
int
mov
popa
pop
push
repz
dec
adc
movsl
cltd
xchg
jp
cmp
and
jmp
daa
pop
shll
cmp
mov
xchg
or
mov
bound
jb
sub
sub
xor
dec
test
xorl
push
aaa
mov
ret
sahf
pop
sub
decb
fwait
stos
mov
pop
pop
add
mov
mov
pop
out
push
mov
ds
mov
mov
mov
or
add
decl
cmp
pop
imul
test
sub
mov
sbb
in
jl
jg
and
and
pop
outsl
pop
lret
mov
mov
lcall
xchg
mov
pinsrw
lea
sbb
cmp
in
push
sahf
hlt
pusha
adc
insl
push
inc
pop
rcrb
dec
test
nop
cmp
dec
loope
sbb
popf
stc
and
imul
in
or
popf
lock
jmp
test
rcrl
xor
adcl
inc
into
rolb
cmp
mov
fcomps
xchg
cmp
xchg
push
mov
sub
sahf
push
orl
cmp
jnp
stos
mov
xor
cltd
dec
mov
movsl
shrb
shl
movsl
test
and
adc
pop
das
fstps
pop
and
lahf
sahf
fildll
in
adc
jo
dec
andl
mov
sbbb
inc
jbe
test
and
movsb
fisubrl
push
call
xchg
scas
adc
jns
push
add
cmp
add
es
adc
mov
sub
popa
lods
sbb
cmp
mov
add
jae
lock
mov
add
mul
fmul
mov
dec
mov
jmp
inc
add
lock
cmp
or
add
xor
jp
sti
jp
jb
cmpsl
xchg
int3
es
jmp
ljmpw
pushf
pop
add
push
adc
push
shrb
rclb
or
or
push
add
pop
or
out
push
add
push
mov
loop
mov
data16
iret
pop
test
xor
cmp
leave
pop
movb
fwait
lds
jns
fsubrs
xchg
shl
mov
dec
pusha
xlat
adc
stos
mov
push
pop
adc
xchg
mov
call
fldl
xor
clc
push
cmp
mov
or
fisubrl
aam
cmp
mov
sub
fcmovbe
insl
mov
mov
push
scas
push
and
cmp
pop
aam
inc
inc
mov
mov
mov
or
or
leave
iret
loop
cli
dec
shl
outsl
std
xchg
fisubs
das
push
lea
add
test
xchg
call
mov
cli
and
movsb
shl
jecxz
xorb
mov
xchg
in
adc
dec
dec
add
jae
mov
jge
mov
ret
push
jle
rorl
int3
jo
les
lret
mov
fdivrp
or
stos
xor
test
nop
out
stos
mov
fnstcw
inc
cmp
and
xchg
cmp
lock
inc
xor
outsb
imul
and
icebp
lret
fbld
scas
push
mov
movl
and
push
jl
bound
in
push
gs
xchg
lods
std
push
or
mov
push
rcr
rclb
jnp
out
arpl
cmp
cld
loope
mov
lods
arpl
pop
loope
ljmp
mov
clc
movsl
call
insl
inc
cld
lea
pop
xchg
lret
sub
mov
pop
jno
sbb
push
or
mov
aas
test
dec
sub
inc
push
push
jo
jae
popf
lds
div
xchg
ret
pushf
sub
std
jno
clc
push
mov
sbb
fwait
cmp
pop
sti
sahf
and
js
xchg
adc
rcll
int
push
ja
mov
xorb
jno
cmp
jge
jle
out
scas
adcb
mov
pushf
cmp
pop
add
iret
test
in
bound
dec
out
cmpsl
bound
pusha
leave
lds
push
pusha
cmp
rcl
dec
push
ror
clc
out
stos
movsl
icebp
fidivl
sbb
jae
pop
cld
pusha
rcll
xor
cwtl
sbb
into
call
stos
mov
test
imul
cmpl
lds
lock
mov
in
nop
add
cmpsl
push
in
mov
movsl
mov
inc
mov
test
mov
imul
fdivs
iret
leave
movsl
adc
cmpsb
hlt
aas
cmp
aad
sbb
xor
ret
imul
int3
icebp
in
sub
jp
cs
dec
jl
into
dec
push
cmp
pop
mov
bound
xchg
pop
daa
fldcw
loope
pop
add
cwtl
sbb
shrb
call
xchg
jno
mov
jmp
lret
ror
dec
out
inc
jne
push
or
adc
clc
sub
repnz
dec
and
lds
mov
inc
xchg
in
xchg
into
jmp
scas
xchg
jmp
sub
int
add
or
xor
inc
mov
mov
xor
out
je
inc
mov
fwait
clc
push
jne
cmp
cli
and
outsl
or
dec
mov
roll
decl
jne
inc
xchg
mov
push
push
mov
icebp
xor
in
mov
mov
xor
xchg
push
repnz
cs
mov
hlt
push
arpl
push
push
mov
pop
test
mov
lcall
andl
outsl
mov
fstpl
inc
and
or
dec
cli
jecxz
lret
and
mov
push
gs
jnp
mov
fldl
jb
cld
jmp
lahf
shll
lahf
ljmp
pushf
push
cmp
scas
xchg
lock
mov
pusha
in
and
add
aas
sbb
push
jae
loop
lea
and
ret
stos
pop
test
notb
mov
or
clc
cmp
movsb
fdivl
lret
or
pop
cli
or
xchg
mov
sbb
cli
add
das
push
enter
test
sub
xchg
into
add
adc
sbb
std
sub
pop
and
add
std
jecxz
sbb
mov
jp
imul
inc
pop
xor
dec
jne
scas
roll
sti
add
call
push
pop
test
mov
xor
pop
mov
push
fwait
outsl
cmp
sarb
sub
mov
mov
xchg
and
xchg
adc
aad
inc
repz
push
push
or
xor
and
scas
daa
add
loopne
xor
ljmp
pop
cli
jg
pop
sub
movsl
or
inc
push
in
pop
add
sbb
mov
mov
xchg
pushf
pop
rorb
cld
fmull
cmp
rolb
popa
in
dec
add
jp
out
sbb
sahf
push
fisttps
sbb
mov
dec
jns
dec
mov
lods
jle
mov
or
jmp
xor
adc
sbbl
int
sub
js
adcl
lea
mov
push
ret
or
sarl
mov
mov
popa
in
and
int
sahf
inc
ret
mov
mov
lock
pusha
dec
jg
cwtl
scas
and
add
push
cld
pop
xchg
xchg
cli
mov
les
in
fildll
out
mov
out
dec
es
fmul
jle
jmp
xor
mov
and
clc
push
nop
bound
push
mov
mov
mov
mov
lods
or
push
andl
out
inc
js
jmp
adc
sub
add
xlat
xorb
mov
jbe
insb
lcall
lcall
stos
jle
xchg
or
rorl
and
xlat
dec
mov
xchg
js
clc
imul
push
sub
and
mov
jmp
shrl
cld
outsb
daa
cmc
or
into
or
pushf
jge
out
pop
jle
xor
out
push
fnstcw
addr16
movsb
sbbl
sbb
inc
fucomp
dec
fcompl
out
leave
push
inc
les
lahf
call
leave
outsb
les
xlat
push
out
aaa
into
sbb
add
test
ljmp
mov
adc
leave
add
sbb
pop
and
sub
out
or
aad
dec
push
sub
enter
jge
bound
call
fwait
add
dec
sub
adc
cli
adc
inc
cmp
js
je
lret
jecxz
push
ljmp
mov
sbbb
movsb
cmp
dec
leave
mov
popa
dec
xlat
test
andl
mov
out
push
dec
lret
inc
insb
push
stos
or
sub
jl
dec
dec
push
popa
sub
mov
movsb
mov
out
int3
xor
mov
imul
ret
sahf
add
sbb
jo
dec
ret
shr
pop
xor
or
sbbb
fwait
mov
jg
dec
add
hlt
mov
xchg
shll
adc
add
fmuls
movsb
mov
push
pop
mov
cmp
popa
jno
cmp
fldl2e
pop
cs
leave
faddl
or
or
int3
add
aad
fcompl
or
bound
sbb
sbb
mov
movsl
dec
bound
and
add
jbe
in
test
jecxz
add
lods
or
jo
jge
lahf
lods
loope
test
push
xlat
insl
sub
leave
or
sbb
mov
popf
nop
cmpsl
rcrl
iret
ss
lahf
sahf
loop
and
ret
jns
cld
dec
imul
ljmp
or
sub
adc
dec
mov
int
stos
repnz
sub
fildl
outsb
or
add
sub
and
mov
cmp
into
jno
fldcw
mov
repnz
jae
out
sub
arpl
sbb
jnp
push
dec
mov
test
sub
xchg
aam
scas
fwait
push
sbb
fsts
idivb
popa
add
inc
aaa
inc
or
push
jmp
addr16
jnp
jno
std
xchg
mov
aas
aad
lret
push
js
or
in
out
dec
je
punpckhbw
lods
fwait
sub
ljmp
loopne
push
shlb
sub
jmp
cmp
push
pusha
les
or
addb
idivl
out
mov
test
idivb
movsl
inc
inc
repz
pop
iret
sbb
fisubrl
and
cs
ficomps
dec
roll
jbe
jle
iret
xorl
aad
and
cwtl
mov
push
adc
inc
push
adc
cmp
shlb
into
pop
js
pop
adc
lock
jo
lea
push
pusha
xor
adc
push
cmp
scas
les
test
xchg
mov
scas
jbe
adc
loopne
sbb
enter
push
mov
mov
cmpsb
cmpsl
dec
movsb
or
jo
jle
test
sbb
std
pop
dec
xor
inc
das
loop
cmp
add
adc
pop
push
cld
add
into
in
xor
xchg
enter
lods
lret
inc
cmp
or
pxor
int
jle
jmp
xchg
loop
loop
inc
in
in
sub
inc
test
jns
xchg
imul
ret
cmp
or
stc
cmc
in
out
push
or
adcb
push
adc
inc
fdivr
xchg
mov
mov
hlt
loop
dec
xor
push
in
in
adcb
xlat
ja
sub
xor
outsb
sbb
lret
ret
mov
out
call
fcompl
movsb
sbb
lea
js
mov
sub
cmpb
clc
insl
call
imul
xchg
lret
push
insl
jge
inc
xor
lret
int3
das
adc
pop
jmp
xchg
fdivrl
mov
xor
push
leave
xor
xchg
jae
dec
subb
imul
jno
mov
xchg
and
fdiv
shll
xor
pop
cmp
push
imul
insl
dec
gs
je
and
jmp
push
pop
cmp
push
shrl
filds
js
loopne
es
xor
add
test
rcrb
xchg
mov
sub
dec
push
popa
arpl
aad
lcall
pop
idiv
lret
pop
dec
fbstp
jno
jno
clc
xor
jg
imul
cmc
mov
inc
sub
popa
imul
adc
and
fdivr
shlb
aaa
movsb
pushf
loopne
mov
andb
jne
sub
arpl
rclb
cmc
push
fmul
xchg
jp
loope
test
sahf
mov
cmp
jns
mov
sbb
push
cltd
ds
std
add
sti
fistpll
pop
jecxz
jle
out
adc
fisubl
add
repnz
xchg
ss
out
push
scas
mov
leave
mov
repz
sahf
mov
rorl
aas
mov
cmovno
mov
xor
sarl
push
xor
aad
decl
inc
pop
movsl
je
push
sbb
ja
and
xchg
aaa
inc
lret
test
and
xchg
addr16
ss
lcall
int3
int3
jp
inc
adc
dec
out
insb
popa
cmp
icebp
adc
push
cmp
xor
cmp
stc
mov
icebp
notl
shll
stos
dec
jne
inc
fcmovne
cmp
xor
imul
pop
testl
push
out
cli
stc
jge
leave
test
and
les
pusha
and
sbb
mov
arpl
imul
cmpsl
out
les
mov
shll
inc
mov
shrl
mov
cmp
sbb
mov
jnp
push
inc
sub
ljmp
lcall
dec
int
add
loope
mov
mov
mov
mov
in
push
mov
add
test
push
dec
inc
scas
stos
arpl
leave
push
ss
loop
ret
mov
je
outsl
dec
pusha
cmp
ja
xor
mov
push
xor
nop
mov
cmp
sub
add
fsubrs
mov
fstpt
sub
mov
adc
pop
jnp
loope
sti
mov
outsb
stos
adc
insl
in
movsl
push
adc
xchg
out
mov
leave
in
adc
push
cmp
lods
ret
lods
jmp
fidivl
and
movsb
sub
xchg
ds
push
addr16
cmc
dec
xchg
jns
popa
cli
rcl
scas
pop
bound
mov
xchg
inc
out
in
push
jns
popf
xchg
fmuls
adc
in
pop
divl
mov
sub
dec
jne
shl
add
sub
sbb
ljmp
ret
xor
mov
iretw
adc
mov
inc
mov
movzwl
in
neg
adc
push
jae
and
outsl
stc
add
push
mov
js
test
xchg
lods
xchg
add
cmp
and
xchg
mov
push
mov
fiadds
mov
daa
adc
xchg
sti
js
mov
cmp
mov
test
mov
cmc
add
push
cmc
pop
pop
lea
jle
aad
inc
lret
mov
and
xchg
push
pop
or
and
decb
fnstsw
mov
fstl
popa
sub
hlt
xor
dec
sbb
int
das
push
jae
insb
lea
insb
xlat
mov
mov
dec
cmp
xchg
dec
cmp
test
imul
lret
inc
pop
sub
pop
adc
mov
outsl
dec
pop
or
call
lahf
repz
jl
es
cs
mov
les
outsb
inc
aam
cmpsb
pop
imul
xchg
push
xchg
xchg
pop
int3
in
aad
cli
push
push
mov
cmc
push
sahf
and
stos
loopne
mov
fldcw
xchg
and
sub
adc
and
shll
push
pop
insl
iret
int3
lods
idivl
mov
xor
jl
std
dec
cmp
repz
outsl
and
xor
mov
adcb
rcrb
pop
lahf
out
inc
sbb
ss
sub
jb
cmpsl
fldl
cld
sbb
hlt
scas
out
sub
or
add
mov
xchg
loope
sub
dec
xor
mov
nop
roll
inc
dec
or
sahf
push
aaa
xor
sbb
popf
xchg
xchg
hlt
loopne
push
xor
xchg
or
cwtl
inc
imul
inc
sub
xchg
jo
push
movsl
nop
cmp
dec
test
out
mov
ficomps
adc
jge,pn
pop
enter
loop
inc
decl
out
sub
ret
push
sbb
dec
sbb
pop
sub
ret
repz
adc
fcompl
jg
lcall
fsubl
data16
inc
jns
sbb
icebp
inc
out
shlb
mov
mov
test
or
mov
push
mov
pop
inc
mov
jae
stc
and
cmp
pop
xchg
repnz
sbb
mov
fwait
pop
aad
test
aam
les
lret
inc
sub
pop
fmulp
dec
cmp
push
adc
add
dec
mov
scas
or
jno
in
fsubl
and
add
inc
adc
cmc
cmp
inc
or
pop
ret
sbb
cmp
mov
push
out
mov
dec
mov
outsl
fnstsw
jbe
and
sahf
mov
in
pop
loopne
xor
fcmovnbe
mov
int
sub
adc
out
imul
xorb
sub
loope
test
inc
neg
sbb
int3
cli
stos
js
mull
outsb
faddl
pop
push
xchg
jle
adc
jbe
aas
das
mov
and
pusha
fdiv
adc
sub
pusha
xchg
push
jge
sub
stc
xor
repz
sbb
mov
push
mov
xor
and
addb
cmc
inc
xlat
jnp
mov
mov
push
xchg
jbe
xchg
mov
xor
addr16
fldenv
shll
sub
or
sahf
orl
mov
jae
ja
dec
pop
outsl
mov
mov
xor
movsb
dec
insb
xor
cmpsb
mov
or
gs
dec
inc
push
nop
call
mov
dec
aad
or
push
xchg
mov
adc
leave
mov
inc
jno
daa
data16
cmp
rclb
in
push
subb
cwtl
add
push
fwait
ss
mov
mov
add
cmp
or
iret
dec
stos
shll
sub
push
cli
lcall
jmp
cmp
jecxz
and
pop
mov
sub
xchg
mov
dec
scas
xchg
dec
xchg
jno
sar
mov
mov
push
push
ljmp
jno
rolb
xchg
stos
fs
stos
inc
lods
jns
mov
jg
movsl
jmp
sti
jp
add
adc
jmp
in
mov
jl
mov
mov
cmp
stos
movsb
daa
jnp
sti
insl
mov
ror
dec
lods
push
mov
hlt
inc
or
inc
xchg
in
scas
pop
test
out
in
adc
pop
lds
iret
push
mov
sahf
xor
jl
mov
cmp
in
mov
push
inc
push
push
lahf
jecxz
dec
inc
cmp
inc
rcl
xor
mov
movsb
inc
xor
loop
cli
aam
out
sub
push
sub
adcl
sub
xor
iret
and
repz
clc
jl
aaa
movl
pop
rclb
xor
in
mov
lret
or
cmp
push
addr16
pop
nop
jno
mov
sbbb
stos
mov
aaa
fldt
pop
jle
jp
mov
mov
pop
inc
lock
jns
xchg
test
add
jno
xor
add
dec
jecxz
pop
dec
js
sbbb
add
icebp
imul
pop
leave
mov
ds
cmc
mov
lahf
scas
orb
mov
pushf
push
mov
xor
stos
into
loope
inc
or
push
notb
and
into
dec
push
mov
sub
sbb
push
jle
xor
xchg
jle
repnz
push
cli
sti
and
mov
push
das
mov
sahf
dec
sub
adc
and
filds
scas
fdivl
int3
sbb
push
pop
push
stc
cmp
sub
or
mov
inc
adc
sbb
mov
xor
sub
icebp
pop
inc
roll
or
scas
nop
ja
aad
dec
cs
adc
cmp
lret
xchg
rorb
dec
cmp
mov
sbb
insl
repz
sbb
lret
bound
jo
mov
jae
adc
addr16
xchg
int
repz
insb
rcrb
mov
mov
jb
movsl
cmp
lret
cmp
pop
test
sub
push
shrb
std
pop
aad
cmp
push
ja
jo
mov
lock
adc
xchg
add
jge
popa
cmpsl
insl
cmpl
orb
fadds
or
repnz
mov
sub
cmp
mov
sti
cmp
jbe
movsl
or
mov
jg
push
xchg
shl
data16
xchg
jg
out
ret
jb
push
adc
fs
mov
xchg
jnp
insb
inc
pop
sbb
into
sarl
cwtl
sub
xor
imul
mov
rcr
mov
xchg
mov
or
inc
idivb
mov
cltd
rcrl
je
xchg
adc
mov
movsl
lock
ficoml
aad
xchg
adc
pop
cmp
dec
jl
and
xor
adc
arpl
jno
mov
loope
inc
push
cmp
xchg
xlat
pushf
adc
mov
inc
or
outsl
popw
cmpsb
add
je
shrb
xor
fsub
sub
cwtl
mov
add
outsb
bound
inc
pop
or
cmpsb
xchg
into
fisubs
mov
mov
divl
cli
inc
jecxz
scas
punpckhbw
xchg
mov
cmp
jae
jp
cmc
pop
xchg
sbb
mov
test
test
dec
rcr
outsb
mov
xchg
pushf
idivb
arpl
push
cld
scas
or
xchg
das
sub
loope
cli
es
pop
fiadds
jle
dec
mov
cmc
mov
out
incl
lcall
adc
jg
sub
clc
rcl
insb
sub
test
fiadds
mov
mov
cmp
fldl
or
call
or
aam
sbb
xor
gs
andb
and
xchg
xchg
xchg
ss
fsubrs
pop
aas
sbb
or
out
pop
hlt
pop
xor
data16
inc
ret
inc
shll
add
push
xchg
push
ja
mov
in
xchg
mov
cs
sbb
jg
lods
sub
imul
andb
sub
pusha
adc
sbb
daa
in
push
sbb
jl
inc
pushf
and
mov
divl
pop
pushf
out
fcompl
popf
nop
mov
adc
lods
rep
xchg
imul
lret
sbb
xchg
add
out
inc
int
in
or
out
sbb
and
xchg
push
aaa
lds
cli
ss
test
add
pop
add
add
jne
pop
scas
fcomip
test
mov
popa
cmp
mov
mov
in
add
push
ret
sahf
pop
sbb
push
inc
leave
inc
je
mov
mov
in
add
xchg
stos
xor
pop
xchg
mov
xchg
jo
movsl
pushf
xchg
lahf
or
mov
enter
cltd
int3
jne
xor
test
xchg
loopne
add
gs
imull
aaa
cmp
sbb
lret
sub
add
or
jg
inc
cwtl
mov
test
xor
cmc
pop
sub
cltd
fsts
dec
maskmovq
divl
stc
add
imul
and
imul
push
pushl
imul
push
mov
leave
mov
cli
jl
ret
fmul
sbb
cmp
adc
add
scas
mov
stos
fwait
jbe
dec
xchg
jle
sub
add
cld
scas
pop
jbe
aad
xchg
loope
nop
hlt
push
mov
push
xor
ds
js
push
sbb
jbe
scas
jae
loope
adc
xchg
xchg
jb
pop
or
sub
sub
lcall
cmpsb
clc
push
fdivr
addr16
rclb
inc
push
push
or
cmp
lahf
lea
mov
roll
loop
mov
add
mov
or
push
lock
dec
addb
ret
cld
sub
movsb
fistps
lock
iret
mov
rcl
cmp
nop
mov
icebp
fdivrl
loop
mov
inc
cmp
xchg
dec
mov
movsb
fstpl
mov
push
out
and
xchg
icebp
pusha
arpl
push
cltd
bound
push
push
test
sub
sbb
add
pop
mov
adc
mov
sbb
jb
mov
je
aam
notl
jp
gs
mov
mov
dec
popa
imul
push
stos
jge
mov
cmp
xchg
dec
push
push
aaa
mov
cld
jbe
lods
leave
mov
jnp
dec
adc
pop
arpl
pusha
rcrb
fs
sbb
push
sub
shll
dec
jge
cli
mov
adc
jg
inc
ds
xor
aaa
sbb
test
push
pusha
mov
sub
add
mov
data16
cmp
sub
pop
cmp
inc
outsl
pop
inc
mov
xor
or
repnz
mov
nop
ret
or
repnz
add
sahf
push
cmp
lret
cmpsl
mov
dec
mov
ficompl
repz
dec
daa
cwtl
mov
inc
dec
into
mov
mov
imul
int
mov
mov
sbb
shrb
inc
div
lret
rol
push
mov
stos
mov
push
inc
dec
movsb
ror
lds
mov
inc
lds
jge
outsl
fwait
mov
mov
lods
dec
mov
mov
fists
jp
in
jbe
jne
push
mov
loop
push
push
gs
dec
push
repnz
adc
js
cmp
jbe
mov
pop
pop
adc
in
push
ds
cmc
in
pop
test
sysenter
incb
jmp
pop
out
sti
aam
mov
dec
imul
mov
push
cmp
stos
int3
filds
xchg
push
mov
aaa
sbb
cld
imul
insb
das
gs
mov
or
push
sub
cwtl
subb
xor
dec
cmp
lock
push
xor
das
stc
push
lds
lods
lret
mov
int3
cmp
ljmp
xchg
and
xchg
jg
cltd
aaa
clc
ja
mov
enter
pop
push
out
or
lea
add
mov
roll
push
push
stc
sbb
pop
cltd
sbbl
mov
jno
js
add
jne
sub
xlat
xor
xchg
je
movsb
mov
add
sbb
or
lds
out
addb
pop
xor
incl
rcl
sub
pop
lret
iret
jge
sbb
or
fstpt
jg
pop
xchg
loopne
ss
jo
fwait
mov
rorb
cmp
jnp
dec
xchg
jb
dec
leave
scas
jecxz
sub
popf
js
or
add
inc
scas
xchg
mov
or
loopnew
inc
dec
je
cmp
mov
jb
outsl
bound
scas
idiv
push
outsl
mov
mov
shrb
xchg
rcrb
into
jg
sub
jae
mov
pop
jno
cld
test
lret
push
mov
bound
mov
push
adc
mov
mov
inc
lret
shlb
ficoms
fcoml
add
dec
and
and
push
in
fnstsw
imull
out
popf
popa
mov
test
outsb
repnz
imul
inc
xchg
out
sub
fistpll
pop
xchg
inc
lods
mov
cld
push
xchg
push
pusha
cltd
fs
pop
in
adc
xor
rcll
mov
lods
sub
add
xor
jno
das
sub
inc
into
add
in
stos
arpl
cmp
stos
pop
test
pop
and
test
lea
jne
inc
and
push
push
mov
sar
jae
mov
cld
cwtl
lahf
cmp
jns
and
popf
push
and
jle
mov
orl
data16
add
add
mov
ljmp
adc
xor
loopne
push
in
jge
loopne
inc
repz
inc
mov
inc
xor
pop
leave
xor
in
mov
mov
cmp
or
pop
in
xor
into
lret
int3
inc
inc
subb
adc
sbb
dec
cmp
lock
mov
sub
or
mov
and
sub
inc
pop
test
mov
cmp
push
pushl
or
or
sbb
mov
repnz
pop
push
out
movsl
fsubs
inc
pop
in
ds
xchg
mov
sbb
testl
adc
iret
mov
add
mov
sub
cmp
aaa
cmp
bound
push
sbb
add
pop
ret
testb
clc
sbb
cmp
mov
inc
sbb
push
in
hlt
out
rcr
push
ss
dec
jbe
sub
es
xchg
fidivrs
inc
sub
xor
test
cltd
jge
out
out
andb
adc
or
shr
bound
pop
or
fistps
test
xchg
adc
push
or
in
rcrb
xor
stos
mov
stos
sub
ss
or
xchg
lods
les
inc
icebp
mov
jp
push
int3
pop
xor
cwtl
shll
pop
fidivs
jge
add
cmp
ret
pop
shr
jl
pop
push
das
xchg
cmp
jns
test
lods
pop
test
movsl
js
ficoms
pop
scas
xchg
mov
fidivl
fsubl
sti
packssdw
sub
pop
cmc
pop
mov
mov
bound
add
jg
ja
es
push
jmp
add
jb
stos
in
out
sbb
pop
mov
call
push
sarl
inc
in
lcall
mov
cli
je
sub
mov
in
push
ljmp
xchg
lret
sub
in
pop
movsb
lods
stc
jle
pop
jns
ret
pop
je
and
dec
arpl
mov
sahf
ds
dec
xor
and
mov
roll
pushf
fdiv
les
and
outsl
mov
ds
xchg
mov
dec
jle
mov
rcrl
hlt
int
shr
cmpsl
push
mov
push
test
jb
and
add
pop
push
and
gs
push
hlt
mov
leave
xchg
sbb
stc
mov
jo
add
hlt
jge
add
dec
dec
push
and
mov
or
add
xlat
out
bound
into
dec
outsl
test
sahf
cltd
shll
inc
adc
popf
sbb
pop
jecxz
xchg
bound
xchg
push
sub
dec
jg
fildl
iret
push
shrl
and
xchg
in
jnp
or
sub
outsl
lds
add
insb
aam
jp
xchg
xor
mov
shr
cwtl
sahf
aas
mov
in
out
pop
lods
jno
pop
fcomi
jge
loop
mul
fs
dec
fisubrs
aad
jno
aad
xor
push
push
cmp
pop
inc
sbb
mov
jl
test
lret
inc
add
mov
sbb
pop
ja
add
lahf
call
movsb
lea
fidivrs
xor
sbb
cld
pop
outsb
mov
mov
jb
xor
jmp
jle
pop
lret
ljmp
jle
wbinvd
insl
sahf
ss
adc
jne
gs
rclb
int
mov
int
mov
xchg
jp
cmc
dec
cmp
mov
test
mov
inc
outsb
imull
add
push
mov
loope
or
setae
or
pop
fwait
xchg
sbbl
stc
icebp
cwtl
push
and
mov
cmp
sbb
sahf
pop
inc
decl
mov
or
pop
ds
dec
xchg
add
dec
xor
ss
outsl
rcll
xor
hlt
and
mov
icebp
xor
lahf
pop
mov
xor
out
lret
adc
jg
xchg
addr16
das
and
sub
ss
bound
loope
cmp
jne
sbb
mull
gs
std
roll
mov
cmpsb
pop
mov
ss
xchg
mov
pop
subb
or
add
aaa
xor
mov
ds
sub
jno
xor
dec
jg
mov
dec
push
shlb
sarb
pop
rcl
aas
in
int
sub
add
xchg
ds
jno
dec
xor
rcl
test
dec
fiaddl
shll
xlat
and
adc
loop
out
popa
loope
cmpl
bound
and
dec
xchg
push
inc
xor
push
je
movsl
lret
dec
jle
in
cmp
mov
and
sbb
movsl
pop
mov
xchg
popf
xchg
jmp
sti
outsl
jge
pop
mov
cmp
sub
sub
stos
gs
push
mov
sbb
cmp
pop
or
lret
or
jae
add
lret
mov
and
sub
adc
fs
iret
movsl
movsl
testb
fsubs
dec
cmc
jmp
xor
dec
push
sahf
push
nop
sbb
jp
add
mov
or
and
add
mov
out
lret
shrb
int3
inc
fs
xchg
xchg
in
push
ljmp
push
gs
pop
in
mull
jb
add
fsts
leave
les
mov
scas
jp
xchg
nop
mov
test
mov
imul
into
inc
mov
mov
and
popf
std
punpcklbw
add
and
push
and
pop
mov
xor
ds
jecxz
out
adc
or
xchg
xchg
cmp
adc
pop
pop
nop
dec
xchg
push
sub
sbb
jae
dec
jne
aam
repnz
out
mov
arpl
mov
je
ja
or
inc
gs
mov
cwtl
xchg
add
adc
repz
fs
adc
stos
in
mov
or
mov
bound
fistl
add
movsb
mov
jae
or
lcall
ficompl
push
add
xchg
sbb
mov
adc
push
stos
stos
or
fists
dec
sbb
pop
dec
dec
jnp
rcl
add
and
jle
adc
adc
outsl
clc
rcll
test
addr16
test
jecxz
mov
rol
or
cmp
xor
lods
or
cmp
outsb
xor
dec
mov
jns
loopne
lea
je
pop
or
das
add
stc
pop
loop
adc
popf
jl
ds
incb
inc
shrb
and
cmp
ja
scas
sub
loope
mov
adc
imul
aaa
repnz
or
cmp
mov
pushaw
int
adc
push
sbb
nop
test
jae
jo
shr
aad
or
mov
xchg
sub
mov
mov
dec
gs
mov
push
jb
cmp
push
das
out
sti
sub
sti
and
mov
pop
stc
insb
pop
loope
inc
mov
jge
aam
pop
ret
or
scas
pushl
dec
and
jne
cmpsb
dec
adc
aaa
in
sub
jno
movsl
dec
repnz
out
sub
push
or
sub
cmp
in
int
and
fimull
mov
dec
shr
ret
rcrl
dec
dec
jmp
pop
or
mov
mov
fists
jecxz
sub
mov
mov
cli
jb
adcl
mov
jp
adcl
lds
sbb
out
pop
jle
rcrl
clc
fmull
mov
or
sti
xchg
mov
cmp
xor
jg
mov
jmp
and
push
ds
pop
pop
xchg
push
sti
cmc
xchg
and
cmpsl
das
dec
push
xchg
and
fmuls
push
push
fcomip
inc
out
mov
lods
inc
mov
jl
pop
xchg
mov
sub
out
xchg
into
cmpsl
fldcw
int
pushf
or
xchg
insl
mov
lret
pop
push
inc
fcoms
pushf
or
pop
xchg
lods
sub
das
aam
cwtl
cmp
xor
insb
jbe
mov
mov
aas
pop
jge
push
and
cmp
andb
std
stos
jmp
lock
cwtl
or
insl
jns
mov
leave
inc
aam
lods
xchg
clc
mov
movl
cltd
sbb
fcompl
mov
ljmp
test
roll
mov
mov
cli
mov
arpl
push
stc
inc
ret
cwtl
add
out
cmp
xor
bound
test
mov
adc
sub
sub
bound
subl
repz
xlat
cmp
data16
fadd
cli
push
loope
jp
and
jle
pop
mov
out
sub
je
fstps
repnz
inc
push
mov
push
or
mov
sbb
add
mov
mov
mov
cwtl
xor
fs
xor
adc
imul
icebp
push
cmp
lods
lahf
out
shlb
mov
leave
aam
stc
test
pop
sar
cmc
jnp
dec
movsl
add
fldt
lods
fmuls
push
aam
jmp
dec
outsb
imul
pop
xchg
xchg
sbb
or
stc
jb
cmp
or
pop
lock
cwtl
cmp
in
push
out
dec
daa
clc
jg
adc
into
jle
in
jnp
lds
adc
fnstcw
cli
repz
pop
pop
sub
scas
pop
movsl
dec
vmovapd
movl
push
rcrb
inc
xchg
ja
push
add
and
push
xor
repnz
mov
cmp
mulb
or
ficoms
call
aaa
inc
imul
cmp
lret
loop
pusha
lret
data16
test
add
inc
test
sbb
mov
cmp
pop
pop
add
cmpsb
arpl
push
scas
jle
clc
test
daa
push
xlat
or
cmc
je
out
imul
mov
mov
mov
lea
loop
sbb
imul
mov
add
inc
nop
jp
pop
mov
xchg
sub
and
xor
ror
dec
adc
mov
cli
xchg
outsl
test
in
mov
inc
pop
cwtl
dec
push
push
ss
sub
repnz
test
inc
gs
loope
roll
xor
adc
mov
leave
scas
cli
pop
jb
into
mov
cmpb
inc
mov
lock
loop
adc
push
adc
mov
popa
and
enter
cmp
hlt
nop
cmpsl
sbb
mov
mov
cmp
mov
inc
or
or
insb
mov
jecxz
mov
mov
pop
movsl
mov
cmp
pop
pop
mov
fiaddl
out
subb
fmuls
jno
inc
pop
mov
fwait
xchg
stc
repz
inc
push
mov
cmp
pop
imul
insl
push
je
shl
push
dec
xor
cmp
ds
or
pop
sub
mov
mov
fwait
and
cmp
cmp
in
lods
dec
int3
sarl
leave
xor
sub
cli
inc
xchg
dec
xchg
xchg
packsswb
into
cltd
mov
loopne
adc
pop
mov
nop
fisubrl
sub
mov
filds
mov
lret
push
pop
sub
jnp
xlat
popl
ds
mov
je
scas
inc
xlat
ljmp
mov
into
sub
leave
mov
jno
jmp
les
pop
dec
pop
dec
mov
adc
mov
shrl
lea
inc
in
xor
rcrb
imul
mov
rolb
stc
sub
xlat
in
sub
cmp
mov
fsts
mov
mov
adc
lcall
je
setl
and
pop
pop
jne
shlb
pop
popa
lret
pop
xchg
in
aaa
into
add
sbb
jecxz
sub
outsb
mov
loopne
adc
pop
lods
jb
add
sub
in
mov
mov
pop
inc
imul
sarl
pop
push
sub
xchg
mov
dec
lahf
cli
pop
adc
mov
fsub
nop
and
adc
inc
push
or
daa
sbb
jmp
pusha
jge
outsl
int3
sub
push
std
adc
gs
xor
loop
cmpsb
adc
and
fcmovnb
test
jo
push
xchg
adc
gs
das
mov
inc
xchg
in
out
rclb
or
repz
pop
and
lret
rorl
loope
pop
sub
in
or
test
jmp
js
mov
dec
popf
mov
jae
in
outsl
out
mov
adc
addr16
pop
mov
adc
shll
popa
pop
jl
pop
mov
add
mov
fidivrs
dec
add
dec
call
faddl
scas
insb
gs
fldenv
jnp
testb
mov
nop
cld
dec
lretw
jecxz
xor
js
aaa
mov
stos
cmp
out
mov
adc
loopne
inc
cwtl
rolb
pusha
and
fisttpl
xor
pushf
test
scas
adc
gs
mov
sub
fwait
and
mov
jbe
fidivrl
inc
mov
sub
es
and
mov
in
cli
les
jmp
mov
mov
cmp
sub
sub
pop
ss
shll
sbbl
dec
xchg
and
jle
mov
int
js
repz
cmp
add
pop
xchg
pop
jp
lcall
repnz
testl
pusha
xchg
or
push
fldcw
add
mov
shl
pop
xor
jno
pop
add
push
xlat
ret
popf
push
jb
into
inc
cmp
stos
enter
mov
adc
not
inc
add
push
das
lret
pushl
sub
hlt
call
fisttps
xchg
pop
cs
and
mov
fildl
mov
xchg
in
cmp
and
int
jmp
cld
mov
or
pop
pop
fwait
int
xchg
sub
and
sbb
int
push
dec
sbb
jb
or
cmp
adc
nop
roll
lock
pop
or
adc
jecxz
mov
pushl
pop
leave
xchg
call
mov
push
imul
jae
loopne
jno
jbe
cmpsl
sti
in
sti
push
je
daa
add
rorl
je
xorl
jae
jp
adc
adc
out
push
fisubrl
gs
int
js
cmpsl
add
test
dec
das
jae
xchg
lods
pusha
or
pop
dec
addr16
hlt
sarl
pop
or
push
inc
sub
test
nop
div
mov
jmp
jnp
add
push
mov
mov
xor
push
or
scas
loope
insl
sub
jno
testb
inc
mov
stos
inc
hlt
das
sub
shll
mov
pop
ret
cmpsb
mov
or
sub
push
mov
mov
xor
call
shlb
mov
mov
aad
in
jmp
sti
enter
and
test
and
movsl
cmp
popf
jo
shr
aaa
mov
ss
inc
repz
popf
es
shll
les
inc
cwtl
lret
out
adcl
cmp
xor
test
push
lds
fnsave
pop
pop
pop
adc
jbe
dec
shll
add
icebp
call
repz
jne
sarb
faddl
dec
jg
cmpsl
add
pop
push
jno
dec
fsubl
or
mov
stos
in
mov
push
mov
sub
insb
leave
shl
outsb
jnp
mov
or
jmp
adcb
xor
mov
cwtl
lods
das
aad
repz
dec
sarl
and
mov
test
popf
and
stos
test
jbe
add
jge
push
movsl
jp
inc
sbb
arpl
lret
or
js
and
test
xlat
inc
mov
lret
aam
test
jbe
lahf
add
sbb
rcrb
jg
add
aaa
lea
pop
adc
imul
adc
inc
sub
je
jb
mov
ficompl
lret
out
mov
mov
add
dec
jae
push
fwait
orl
sub
dec
xor
cli
mov
notl
in
flds
data16
mov
mov
cli
mov
mov
push
lock
push
pop
and
jp
push
mov
mov
pusha
xchg
or
mov
add
add
push
adc
out
insb
bswap
mov
test
fs
cmpsb
or
and
sbb
and
adc
jle,pn
mov
jl
pop
mov
pop
out
cmp
cmp
and
int3
es
ds
stos
cld
sub
push
lds
movsb
xor
jg
scas
add
pop
pop
fisubrs
and
pop
leave
jne
roll
mov
scas
lods
fisttpll
adc
dec
mov
cmp
movsl
insb
push
idivb
and
xchg
push
cmp
xchg
mov
fadds
lcall
xor
mov
mov
xchg
enter
and
adc
in
lods
push
rcrl
or
and
push
hlt
ljmp
push
adc
lods
loope
mov
pop
or
sub
xchg
pop
imul
dec
jnp
pushf
adc
ret
fcomps
jbe
mov
sub
sbb
ret
pop
outsl
and
call
loopne
mov
sbb
sbbl
mov
pop
stc
cltd
xchg
mov
test
sub
outsb
xor
in
mov
js
gs
pushw
cmpsb
js
enter
mov
dec
adc
arpl
jge
imul
lds
sub
sub
js
xor
dec
sahf
ret
mov
cmp
jle
arpl
movsb
push
mov
scas
xlat
cmpsb
rclb
cmp
and
add
int3
mov
es
in
push
xlat
dec
push
pop
shrl
jne
mov
pushf
out
mov
popa
push
pushf
xchg
mov
push
inc
fisubrs
lret
ffree
out
or
sbb
bound
test
out
es
sbb
sbb
and
insb
in
pop
and
gs
add
xor
and
adc
je
add
iret
mov
mov
adc
inc
pop
cmp
ja
mov
sbb
cs
push
es
xchg
arpl
roll
add
ret
and
push
repz
cmp
sbb
pop
mov
cmpb
push
rcrb
add
dec
fists
or
jnp
lds
push
rorb
push
dec
or
lock
push
loopne
mov
push
sbb
mov
mov
cmp
sbb
loope
pop
jl
cwtl
shl
or
mov
pop
movsl
lea
fs
orb
js
adc
out
xor
jp
mov
aaa
lods
inc
mov
push
dec
sub
mov
test
xchg
out
pop
push
mov
leave
jmp
addl
xor
scas
cmpsb
in
add
in
cltd
aaa
xchg
jns
dec
popl
imul
rcrl
iret
mov
mov
fists
pop
mov
fidivl
scas
adc
fimuls
jb
lods
or
rol
mov
sub
mov
ja
addr16
jl
shll
imul
fistpll
movsb
xchg
fwait
outsl
xorl
rcrb
push
lcall
jecxz
xchg
lock
and
nop
jb
jo
jno
sbb
add
adc
pop
add
jo
sti
xchg
popf
adc
es
push
shr
hlt
outsb
popf
jns
jmp
shll
out
push
mov
ljmp
jg
inc
inc
test
mov
ss
push
aam
rcrb
pop
mov
push
xor
dec
push
xchg
scas
lahf
jmp
stos
imul
adc
js
lret
nop
inc
std
jne
outsw
sbb
cmp
loopne
enter
lret
and
das
add
jns
inc
fldenv
push
jl
adc
insl
add
and
in
insl
push
sbb
dec
jp
inc
and
and
or
mov
fwait
dec
xchg
iret
sbb
pop
push
mov
das
jno
pushl
fists
in
sbb
jbe
xchg
sbb
sub
cmp
out
outsb
ficoms
adc
andl
xlat
or
ss
test
fistpl
pop
and
mov
pop
mov
in
sbb
cmp
les
data16
push
mov
dec
inc
jl
jb
mov
incl
out
xor
pop
pop
enter
arpl
loop
dec
bound
clc
rclb
scas
outsl
movsl
lods
cltd
cmpb
cmpsb
xor
jbe
sarl
test
in
xor
movl
dec
mov
or
enter
in
add
mov
lock
testb
mov
jmp
test
push
add
add
lahf
or
inc
and
pop
dec
cltd
sbb
xchg
add
aas
stos
jl
mov
xchg
xchg
sbb
mov
cmp
ss
out
mov
pop
or
iret
negb
outsb
popf
sbbl
rcl
xor
cld
xchg
mov
jg
and
sbb
inc
inc
xchg
sbb
xchg
arpl
movb
aaa
enter
divl
push
jp
sbb
movsl
or
dec
cmp
lds
xor
or
imul
fs
movsb
addr16
hlt
out
aas
sbb
push
push
loop
mov
dec
sti
out
ret
in
es
jns
aad
push
jne
xor
or
test
jae
mov
and
inc
inc
cli
or
out
inc
pusha
aas
loopne
rcrl
mov
cmp
scas
xchg
adc
stos
sarb
pop
sarl
cs
pop
cmpsb
mov
shr
or
call
in
push
sbb
cli
jo
pop
pop
pop
adc
adc
pop
push
cmp
les
jns
ud0
mov
xchg
popa
imul
cmp
add
add
mov
adc
sbb
sub
dec
xor
fnstsw
sti
fcompl
imul
adc
out
int3
jno
jae
test
out
roll
je
gs
ret
mov
jno
jb
xor
jo
pushl
repz
sbb
push
fsubrs
negl
mov
sbb
sub
clc
stos
xchg
sti
enter
bound
inc
mov
cmp
and
push
mov
imul
js
bound
ds
add
repz
mov
notb
sbb
cmp
testl
movsb
leave
clc
pop
sub
add
xchg
iret
lock
pop
and
repz
or
insb
mov
dec
mov
leave
dec
adc
pusha
pop
sbbl
jle
jp
cmp
in
call
pop
nop
dec
xchg
gs
sub
mov
inc
cmp
adc
adc
test
jecxz
sbbb
jo
push
out
daa
das
nop
fdivrp
mov
test
mov
xchg
pusha
lret
movsb
mov
push
icebp
and
xchg
lods
push
aam
sar
gs
lea
incb
push
popf
xchg
lahf
data16
gs
and
cmp
jg
xor
lea
sbb
xchg
xchg
xchg
inc
sub
mov
adc
jmp
nop
jb
xchg
fstl
popa
mov
dec
nop
movsb
fbld
gs
jge
or
loop
sub
into
cmp
jg
and
sbb
and
in
push
xchg
std
fdivrl
dec
cwtl
les
jmp
or
sbb
dec
imul
psubsb
mov
mov
mov
sub
mov
dec
fwait
push
addr16
cmp
xchg
jg
mov
lods
jb
or
insl
subps
lods
fisttpll
pop
or
loopne
out
pop
enter
jecxz
fwait
dec
jb
add
mov
repz
cmp
xchg
fsubs
cltd
xchg
xlat
jmp
mov
aam
sbb
push
mov
mov
add
cli
out
add
test
stos
add
sub
jecxz
jb
fcoms
pop
leave
or
aad
rcl
not
xor
outsb
mov
push
inc
xchg
sub
cld
jbe
arpl
jns
into
xorl
iret
loopne
fsubl
and
xor
mov
sub
xchg
xchg
or
adcl
scas
mov
lret
dec
clc
mov
xor
xchg
out
cmp
mov
stos
pushf
daa
jl
pusha
inc
rcr
scas
add
aaa
arpl
fmull
sarb
jbe
dec
jmp
or
inc
sbb
pop
lods
testb
fwait
push
fcompl
in
jae
shll
push
cmp
outsl
cmp
addr16
or
mov
sub
inc
jbe
movl
sub
push
int
pop
add
bound
cwtl
xor
repnz
lds
cmp
out
cmpsb
imul
nop
aam
jmp
xchg
xchg
mov
add
inc
std
rcl
cmp
sbb
int3
sub
pop
mov
sub
pop
or
push
fsts
lock
push
or
cmpsl
fmull
fisttpl
mov
repz
mov
dec
loopne
mov
mov
xlat
fwait
rcr
in
orl
popl
mov
pop
mov
cwtl
mov
and
aam
mov
or
cld
fs
imul
repz
dec
ss
mov
sbb
pop
cmc
xchg
mov
push
cmp
mov
xor
out
aad
pop
jg
xchg
daa
adc
push
pop
xlat
dec
fistps
add
fistpll
out
out
ljmp
mov
dec
insl
dec
lods
push
add
mov
into
or
insb
jg
xchg
lock
mov
inc
lcall
test
cmc
add
sbb
out
pushl
scas
mov
mov
jb
sub
or
ljmp
sub
mov
shrl
pop
or
and
dec
sahf
ja
inc
add
push
bound
mov
dec
and
rolb
push
pop
push
pop
out
inc
sahf
add
inc
sub
mov
dec
scas
in
sub
cmp
and
xor
pop
xchg
mov
dec
outsb
daa
outsl
pop
sub
xlat
fistps
arpl
cld
pushf
mov
bound
lahf
rcrl
cmc
and
pop
push
pop
mov
jae
push
insl
inc
aad
hlt
mov
sbb
out
std
movsl
cmpsb
push
push
cs
js
clc
jnp
xor
cmp
cmp
push
cmpsb
int3
mov
orl
sbb
lock
jbe
push
movsb
cltd
rorl
jle
cmc
inc
in
arpl
imul
jp
divl
movsl
mov
pusha
fsubs
adc
pop
add
ss
push
inc
cmp
outsl
lods
out
add
movsl
mov
daa
testb
mov
lahf
lahf
dec
fmuls
pop
jmp
or
movsl
xchg
jns
in
or
sub
xor
dec
pop
dec
fisubrl
xor
ljmp
daa
pop
lods
xchg
popa
push
mov
and
mov
and
repnz
scas
pop
pop
fsubl
mov
lret
movsl
vaddsubps
lods
adc
test
sti
adcl
ljmp
mov
jle
mov
cmpsb
jge
xchg
stc
inc
mov
jnp
add
xchg
scas
push
pop
test
inc
popf
inc
sub
jae
inc
xchg
mov
addl
mov
out
test
push
jns
gs
push
cmpb
hlt
xchg
mov
imull
mov
push
pop
adc
test
popa
inc
jbe
xchg
imul
test
jp
jg
insb
mov
dec
daa
push
add
enter
les
fmull
test
in
mov
loope
lea
leave
add
xchg
ljmp
mov
movsl
lds
sbb
mov
sub
jne
mov
pop
mov
xor
push
shrb
in
push
push
jo
movsb
and
fstpl
mov
xor
or
mov
mov
xchg
addb
test
mov
adc
push
jbe
in
mov
lods
pop
ja
mov
push
push
adc
pop
pop
inc
sub
fsubrl
push
push
mov
pop
fldl
or
push
adc
jb
adc
mov
mov
clc
les
xlat
or
test
lahf
push
push
mov
lds
in
push
mov
add
std
sub
or
push
push
jno
xor
cmovbe
push
fsubrl
mov
cltd
cmp
test
and
push
lret
aam
dec
sub
jecxz
add
cs
movsb
jb
pushf
mov
add
sbb
cmp
xchg
dec
dec
add
mov
hlt
orl
xor
jecxz
add
dec
jle
mov
xor
mov
push
stc
mov
aas
rsm
addr16
jnp
lret
cld
dec
sub
hlt
sbb
push
dec
lods
rorb
and
push
push
repnz
inc
push
andb
sbb
out
inc
lret
call
xor
inc
jns
jae
mov
sub
dec
add
repz
push
cs
mov
jnp
cld
out
hlt
jmp
and
cld
ja
pop
jg
push
les
pop
sbb
dec
pushf
shlb
and
adc
fs
pop
sub
hlt
fbld
xlat
mov
push
mov
jge
in
shll
roll
test
mov
mov
sub
jge
int
push
inc
daa
pop
and
mov
mov
sbb
inc
xor
hlt
adc
inc
pop
sub
fbstp
in
enter
filds
sub
dec
test
daa
test
xlat
cmp
adc
or
cld
out
fimuls
ja
sbb
leave
add
imull
insl
jae
in
test
movsb
xor
or
mov
wbinvd
cmpsl
and
cwtl
dec
data16
lret
ja
aas
push
es
xchg
pop
xchg
call
mov
dec
xchg
mov
sbb
or
ljmp
hlt
mov
sbb
leave
push
sub
lods
sub
mov
out
push
pop
xchg
inc
add
adc
fs
int
cmp
sbb
aaa
gs
or
aaa
mov
lods
pop
push
rcrl
int
mov
int
mov
movsb
adc
ss
shr
jge
cmp
mov
jmp
cld
mov
roll
pop
cmpb
call
aam
xor
loopne
scas
pusha
cmpsb
add
mov
call
insl
inc
xor
or
mov
hlt
mov
xor
xor
fwait
lret
xchg
mov
inc
stc
out
inc
mov
pop
push
repz
jmp
and
into
sbb
pop
gs
inc
jecxz
add
aad
xor
test
fistps
jg
nop
dec
popf
lcall
pop
jb
inc
aad
lret
cmp
dec
adc
mov
ret
pop
das
fidivrs
add
mov
jge
push
add
ljmp
scas
outsb
aad
mov
pop
mov
out
rclb
mov
xor
add
das
mov
ret
outsb
ret
shrb
ds
cmp
push
add
aad
iret
xor
push
sahf
lods
fwait
testl
lcall
ret
ss
adc
stos
mov
xchg
jno
jns
jno
mov
cltd
leave
scas
pusha
scas
xor
dec
mov
adc
addr16
dec
xchg
std
out
add
mov
loop
inc
push
lahf
push
and
lock
sbb
xchg
mov
addl
in
cwtl
xchg
iret
mov
repnz
pop
pop
mov
or
rcll
jmp
jle
popf
outsb
mov
dec
fcom
sub
jns
fstps
imul
inc
dec
jnp
divl
push
daa
dec
push
pop
cmp
push
loop
inc
addr16
movsl
test
cmpsb
push
xchg
push
jg
sbb
lret
push
fdivs
stos
mov
and
adc
and
mov
adc
add
je
lock
out
into
inc
pop
xchg
cmp
data16
adc
into
and
andl
out
aaa
mov
mov
mov
ret
jge
test
pop
cmp
out
cmp
loope
andb
outsb
sbb
insl
sbb
ja
ret
stc
lret
mov
mov
xchg
xor
bound
enter
lcall
mov
xorb
cmp
daa
ficompl
push
sub
sbb
bound
xor
cli
adc
call
jge
mov
test
mov
in
mov
push
sub
push
cmp
lret
test
lcall
not
pop
fistpl
loope
aas
cmpsb
jmp
or
test
push
cmp
push
int3
cmpsl
outsl
inc
cmp
sub
es
icebp
fcomps
dec
subb
loope
out
mov
or
dec
loope
jp
movsl
dec
sbb
ss
mov
bound
sbb
stos
cmp
ljmp
cli
ret
xchg
shrl
add
cmp
push
aad
cli
cltd
cmp
mov
dec
ficoms
leave
inc
or
mov
cmp
lret
outsb
mov
sahf
nop
ret
rcll
adc
out
fidivl
out
inc
enter
pop
jg
sarb
pop
inc
lea
inc
and
add
inc
inc
adc
mov
sbb
es
jecxz
sub
or
inc
add
jb
push
cmp
xchg
mov
scas
mov
mov
js
movsl
xchg
xlat
fsubr
add
aam
xor
fs
cmp
mov
lds
mov
loop
call
inc
pop
push
xchg
fucompp
or
cmp
arpl
in
xchg
dec
adc
mov
stc
ljmp
push
jl
scas
pop
adc
faddl
es
mov
cmp
and
lret
mulb
out
sub
adc
lret
xchg
ret
sub
psubd
push
hlt
sbb
daa
out
xchg
jbe
and
jmp
repnz
pop
mov
cmpsb
push
data16
imul
loop
sbb
fildl
cld
or
outsb
mov
xchg
sub
and
insl
cmp
push
xchg
hlt
jecxz
sub
int3
cmp
shll
pop
int
idivl
and
in
aaa
mov
cltd
push
pop
push
mov
das
xor
hlt
xchg
fstpt
fwait
fwait
into
mov
xchg
dec
xor
mov
sahf
inc
sub
fistpl
clc
xor
ljmp
dec
push
sbb
outsb
in
sub
dec
dec
sbb
lahf
xor
xor
cmp
fdivrp
sbbb
arpl
dec
sub
lea
xor
sahf
or
and
and
fnstsw
test
dec
mov
jl
out
sub
aad
addl
add
lret
ja
dec
adc
xchg
xchg
scas
dec
xor
scas
mov
les
loop
stos
xchg
mov
xor
sub
addr16
sbb
repz
dec
fs
jmp
in
mov
pop
rcll
jb
jg
sbb
push
cmpsl
andl
clc
lret
inc
fsubr
outsl
outsl
mov
adc
sbb
pop
jnp
test
inc
inc
xchg
imul
icebp
adc
jge
sahf
adcl
push
mov
push
dec
fdivr
stc
and
jb
adc
push
pop
cli
add
sub
iret
xchg
jne
into
bound
mov
scas
lcall
test
xchg
cwtl
movsb
lods
std
icebp
adc
loope
imul
xchg
inc
shlb
repz
pop
lds
fxam
xchg
icebp
jmp
mov
xchg
adc
or
lds
mov
add
ds
stos
add
pop
dec
dec
add
mov
cs
dec
mov
or
jmp
scas
mov
dec
or
iret
add
ds
and
dec
sub
lock
das
sarb
fstp
arpl
inc
sahf
incb
inc
push
pop
or
rcl
add
mov
icebp
mov
sbbl
test
xchg
sub
lahf
shlb
sub
int
and
scas
fisubrl
jns
dec
pop
push
cli
mov
inc
and
dec
in
sub
sub
mov
jns
adc
inc
ftst
sahf
push
cltd
cmp
in
xchg
inc
loop
out
fwait
and
lods
jecxz
insb
jle
or
orb
mov
adc
mov
jecxz
xor
dec
sub
xor
pop
fwait
mov
mov
push
test
pusha
xor
pop
push
jmp
fists
dec
jg
dec
sbb
ret
and
es
fs
pop
aas
jg
les
add
xor
aam
in
pop
loop
fsubs
adc
xor
add
jle
fs
and
fisttps
lret
add
test
je
mov
push
push
or
cmovae
aaa
bound
stos
push
cmp
int
jl
inc
stc
xchg
lea
xor
scas
xchg
dec
lea
pop
rcrb
stos
push
xchg
add
dec
mov
sub
push
fsubrl
mov
dec
mov
cltd
test
mov
jg
ret
pop
fisubrl
inc
push
arpl
and
adc
movsw
dec
loopne
les
fsubrl
pop
jnp
and
push
mov
test
imul
xchg
xchg
xchg
ja
or
cltd
mov
sbb
in
mov
clc
xchg
cmp
push
adc
mov
jbe
cmc
call
push
cmc
mov
rorb
loopne
test
inc
mov
dec
and
or
stc
jmp
cmp
pop
fisttps
mov
sub
in
sbb
loop
or
in
xchg
int3
pop
pushf
hlt
dec
and
or
imul
add
sub
ja
adc
ds
les
daa
shlb
pop
mov
jmp
fstp
shll
ss
mov
and
xor
fbstp
leave
fdivl
lcall
cmp
les
std
mov
daa
dec
inc
jno
negl
cmpl
dec
hlt
je
das
std
popf
ss
jp
jl
pop
jbe
add
movsl
adc
divl
or
mov
add
les
xor
data16
mov
inc
daa
cmp
pop
xchg
in
mov
dec
push
pop
xor
push
jne
and
push
daa
cmp
pushf
mov
mov
adc
cmp
ljmp
lret
enter
data16
pop
jnp
inc
lods
or
out
mov
and
test
aam
fmuls
xorb
dec
cmpsl
inc
test
sbb
xchg
xor
mov
ljmp
adc
bound
loope
js
xchg
scas
push
adc
popa
mov
popa
movsb
sahf
idivl
add
mov
mov
pop
adc
in
cmp
andl
adc
into
jmp
scas
sub
popa
rolb
adc
int3
jmp
pop
repz
ljmp
cmpsb
push
call
jl
pop
ljmp
jb
lcall
fmuls
ss
ss
sub
jge
loop
xchg
jge
mov
ret
xor
jge
aad
cs
cltd
xor
push
repnz
or
cltd
insb
mul
aam
xchg
das
sbb
xchg
repnz
add
outsl
fiadds
lahf
in
xchg
xchg
nop
mov
lods
roll
leave
popf
adc
clc
dec
pusha
fstpt
fsubs
mov
rcr
mov
cmp
aaa
and
or
adc
icebp
stos
sbb
inc
mov
inc
daa
cmp
sbb
sbb
sti
jb
into
lcall
cmp
dec
cmpsb
fisubl
pop
jnp
je
mov
loop
pop
mov
jno
adc
rolb
pop
js
xor
mov
sub
pop
push
stc
mov
mov
outsb
incl
aam
or
push
cmpsl
xchg
push
add
add
adc
rorl
popa
jmp
sub
outsl
insb
insb
lods
incb
lahf
push
push
xchg
scas
pop
aaa
rorb
inc
jo
cs
xchg
cmp
ret
add
shrl
pop
lahf
push
popf
ja
nop
sahf
or
rorl
ljmp
mov
shrb
xor
aaa
mov
xchg
sbb
sbb
push
xchg
sbb
sbb
das
add
sbbb
xor
inc
xchg
xor
sbb
jns
jae
mov
xchg
sub
mov
ja
mov
ljmp
and
xchg
nop
sbb
fcompl
adc
sbb
pop
out
push
lcall
popf
in
push
mov
ret
movsb
test
inc
add
mov
mov
cld
xor
movsb
pushf
leave
cwtl
shl
stos
jae
jne
addr16
pop
inc
inc
js
and
rorb
rorb
mov
and
or
push
call
mov
or
cmc
jno
scas
and
rep
and
cmpsl
sub
arpl
divb
jl
push
push
int
mov
dec
imul
push
mov
dec
js
in
test
test
stos
or
cmc
dec
mov
sbb
loopne
sub
faddl
push
comiss
call
add
in
dec
mov
sti
arpl
xor
pop
adc
push
jmp
out
in
popa
add
stc
sarb
jbe
mov
test
jp
and
out
sbb
push
sahf
push
lahf
leave
popa
xchg
pushf
jnp
pop
xor
rol
jmp
out
enter
cmc
test
adc
or
push
push
jp
cmc
sarb
rcll
sti
or
xlat
aam
mov
jns
stos
and
lcall
in
repz
out
xchg
push
clc
dec
add
and
jge
sbb
outsb
xchg
fwait
rcrl
adc
in
mov
shrb
leave
jp
imul
rcr
fsubrs
scas
pusha
and
ss
or
xor
adc
cmp
addr16
push
pop
mov
mov
push
jge
cli
jnp
add
frstor
out
repnz
sbb
movsl
movsl
dec
xchg
add
push
test
outsb
xchg
lret
popa
sbb
loope
ficomps
jbe
shr
std
jb
stos
sub
mov
dec
pop
xor
and
push
fs
clc
fcmovnbe
fldt
das
iret
add
mov
jmp
mov
xchg
fcom
bound
pop
arpl
out
sti
push
xor
cmp
aas
push
push
imul
pop
and
jae
or
or
push
stos
sbb
pop
inc
cmpsl
inc
jne
mov
loopne
add
or
and
mov
mov
sub
mov
mov
imul
xchg
dec
sbb
cwtl
scas
jns
bound
lock
lcall
sub
ss
imul
adc
test
gs
ljmp
cmp
pop
or
int
cmc
jmp
insb
dec
test
out
and
lret
pop
scas
mov
hlt
adcl
xor
loope
pop
cmp
ret
dec
adc
mov
jbe
sbb
adc
das
jg
shlb
shl
sbb
incl
lock
rcrb
fs
cltd
mov
inc
sti
aaa
sub
or
sbb
xor
rcrb
shrl
pop
adc
jns
push
daa
jne
hlt
stc
int3
das
lret
mull
sub
pop
and
and
jle
test
cld
jmp
lods
mov
sbb
mov
pop
xlat
jmp
loopne
cmp
leave
dec
sub
dec
addr16
mov
sbbl
sti
hlt
adc
shl
repz
inc
jecxz
sahf
ss
std
and
and
loopne
xor
xchg
mov
jp
es
shrb
add
daa
inc
dec
cli
add
ret
cmpsb
test
loope
lea
add
dec
sub
outsb
fsts
scas
dec
sub
nop
cld
adc
adcl
pop
mov
stc
out
adc
pop
jl
icebp
lds
lahf
push
cmp
in
or
stos
mov
push
or
into
clc
test
test
pop
iret
das
jp
mov
cltd
jle
jl
stc
sahf
pop
mov
test
cmc
inc
mov
sub
mov
test
mov
mov
pop
xchg
and
aam
jge
and
sub
xchg
mov
rol
lcall
in
iret
test
incl
push
adc
adc
jb
imul
call
sbb
stos
add
cmp
fsubrl
inc
mov
cwtl
push
push
mov
dec
push
dec
aad
in
pop
or
outsl
pusha
cmp
sahf
pop
xlat
push
or
jae
sahf
cli
outsb
mov
cmp
dec
lea
imul
push
mov
stc
std
cmpsb
dec
in
mov
push
cmp
xor
mov
pop
xchg
cli
and
aam
mov
jecxz
call
js
sbb
adc
sub
int3
subb
dec
mov
out
iret
in
inc
or
lcall
shll
jecxz
inc
inc
xchg
ficoml
inc
cmp
xchg
fiadds
iret
outsl
pushf
cmp
aaa
sub
jecxz
mov
mov
adc
pop
and
sarb
hlt
shll
mov
data16
ljmp
out
repz
adc
lahf
cmp
dec
es
jo
dec
aad
in
out
dec
ss
cmp
pusha
lods
dec
dec
scas
movsl
call
clc
hlt
sub
movsb
and
xor
mov
roll
cmp
sub
test
fwait
cmpl
push
pusha
push
or
xchg
mov
mov
or
orb
pop
inc
inc
push
shll
mov
sahf
dec
ret
adc
adc
fistps
mov
cmp
sbb
push
sbb
dec
cmpsl
xchg
lods
pop
icebp
inc
das
stc
push
pop
push
mov
sarb
lcall
insl
sub
adc
call
cmp
rcrb
iret
adcl
fisubl
imul
push
pop
inc
xchg
cli
mov
pop
lea
mov
xchg
sbb
aaa
adcl
jmp
sahf
xor
insl
mov
loopne
cld
in
mov
fistps
ds
fnstenv
shl
adc
cmpsb
jl
mov
dec
adcw
dec
fnsave
scas
mov
pop
dec
pop
lods
jns
pusha
mov
cmp
push
in
callw
popa
or
push
ljmp
les
push
in
xchg
pop
inc
scas
rclb
cld
cmp
test
test
jg
mov
jle
or
nop
test
add
pop
addr16
popf
scas
sub
and
les
cmp
mov
ss
dec
pop
inc
jmp
mov
inc
cwtl
andl
jge
mov
push
dec
cltd
mov
jle
jnp
sub
in
push
adc
pushf
mov
mov
loope
jae
sbb
ffreep
fs
jmp
frstor
xor
sahf
pusha
dec
add
dec
mov
subb
ss
dec
mov
or
mov
popf
les
dec
inc
push
push
lods
repnz
mov
daa
inc
and
jp
mov
jmp
cmpsb
mov
xchg
mov
sbb
and
sbb
roll
push
add
inc
push
xor
push
add
loope
pop
stos
mov
in
add
fwait
daa
xor
mov
jge
or
loope
ret
mov
cmc
std
ret
push
mov
jns
fisubrs
sbb
inc
push
scas
adc
popf
mov
sar
mov
stos
int
xchg
mov
inc
shrl
icebp
repnz
test
and
sbb
sbb
pmullw
call
outsb
dec
or
js
xchg
lret
mov
push
sbb
cmpsl
dec
jmp
repnz
xchg
fsubs
mov
xchg
cmpsb
mov
mov
mov
xlat
mov
cmpb
jecxz
sub
rclb
xor
or
add
sbbb
or
in
jne
pop
dec
in
xchg
or
push
jmp
imul
sbb
je
and
or
inc
cmpsb
into
dec
sbb
and
adc
dec
and
cli
or
js
or
xor
mov
adc
xor
aam
insb
sbb
and
out
inc
sub
mov
mov
mov
or
andl
jge
fnstsw
xchg
aad
stos
outsl
dec
jno
popa
mov
stc
lret
fs
jmp
push
imul
aaa
call
pop
or
push
jns
mov
hlt
arpl
mov
leave
mov
cmp
sub
out
stc
jg
sub
shlb
arpl
xchg
mov
mov
popf
dec
pop
jo
test
cmp
and
mov
inc
jle
test
addr16
ds
aam
lds
subl
popa
popf
push
xchg
push
repnz
mov
pop
inc
mov
inc
lcall
stos
dec
cli
sub
fistpl
ss
fisubrl
cld
aad
cltd
mov
fwait
or
lret
add
sarb
rol
sbb
pusha
push
add
inc
cbtw
cmp
fdivrl
dec
repz
pop
and
pop
and
jns
rcll
pop
adc
jmp
push
in
out
inc
fsubrp
fwait
les
push
aam
mov
lea
cs
popa
fs
mov
inc
push
bound
push
pop
sbb
pop
in
mov
sub
dec
mov
movsb
pop
push
xor
aas
fdivr
xor
cmp
dec
cmp
rclb
xchg
inc
enter
push
shlb
add
cli
shrl
xchg
sbb
stc
xor
fnstsw
mov
jne
rcr
dec
jno
in
lods
mov
mov
flds
lea
adc
sti
shll
mov
fldl
cmp
aaa
mov
xchg
stc
enter
inc
cltd
call
ja
mov
push
add
pusha
adc
sbbb
jmp
or
insl
push
add
arpl
sbb
insb
push
enter
decb
sub
cmp
and
or
and
xchg
pushf
arpl
mov
inc
lock
add
fldenv
push
xchg
lea
mov
lds
scas
pop
inc
and
xchg
imull
jbe
fiaddl
add
mov
addr16
mov
lret
and
int
mov
imulb
int
mov
xchg
xchg
jnp
add
add
sub
sub
sbb
cmp
cmp
lods
outsl
movsb
ljmp
ds
jo
lret
test
rorl
repnz
jns
icebp
dec
cld
jp
sub
out
clc
fwait
pusha
std
mov
lea
stos
mov
ljmp
adc
sbb
int3
dec
xchg
dec
push
mov
mov
push
andb
dec
xchg
xchg
in
fcmovnb
shrb
sbb
sub
test
shll
popf
mov
pop
sahf
fadds
and
insl
xor
sbb
sbb
xor
mov
push
xchg
push
lcall
jae
les
icebp
mov
cli
add
clc
shrb
pop
inc
ret
push
shlb
pop
sahf
add
mov
shrb
cmp
mov
ja
ficoml
hlt
sub
pop
or
out
lret
aam
shlb
cmpsb
stc
fildll
push
aaa
sbb
pop
cmp
lods
pop
mov
lahf
jo
cmp
lret
lods
dec
mov
dec
int
xorb
imul
rclb
mov
pop
insl
mov
addr16
ficoms
mov
stos
rorl
add
cs
jl
icebp
je
push
outsl
mov
fstpl
jne
mov
bound
sub
nop
cmpl
pop
mov
jnp
pusha
movsl
loop
mov
xchg
gs
and
lods
daa
ja
inc
push
adc
fidivs
data16
out
pop
mov
sbb
test
and
dec
jne
jge
in
pop
imul
lret
cmpsb
dec
fbstp
sti
cmp
mov
xchg
and
sbbl
and
in
xor
sbb
.byte
or
xchg
mov
lods
dec
xorb
loop
ret
pusha
call
jmp
pop
int3
pop
push
mov
out
pop
mov
pop
and
xor
and
mov
mov
and
ljmp
popa
ljmp
pop
ljmp
mov
inc
mov
cld
mov
add
inc
stos
lock
addr16
sub
inc
rcr
sub
xor
mov
data16
add
mov
pushf
int3
sbb
push
push
jo
mov
pop
pop
mov
lahf
add
inc
into
ja
sarl
and
push
mov
aad
cmp
mov
inc
jge
iret
sbb
jb
ss
fistps
and
fwait
dec
xchg
test
mov
sub
xchg
aam
mov
inc
pop
inc
popf
arpl
loope
jno
sbb
outsb
data16
fldcw
insl
mov
iret
pop
xchg
ret
inc
movsb
incb
aam
loop
push
jmp
lret
rolb
adcl
lods
xor
add
lds
mov
and
lods
and
push
pop
jp
lds
inc
mov
sub
sbb
aaa
cmp
sbb
aad
inc
xchg
sbb
call
jnp
or
test
xor
push
stc
orb
mov
jno
or
or
lds
push
or
xor
fsubs
push
add
ret
and
mov
and
popf
inc
dec
mov
pushf
jnp
ds
subl
adc
mov
push
int
xchg
out
pop
insb
xchg
test
mov
in
push
mov
mov
lods
sahf
lock
lahf
shlb
arpl
lods
inc
adc
mov
out
dec
fwait
hlt
in
call
js
dec
movsb
shll
inc
jmp
outsb
cwtl
jg
xchg
and
aam
sbb
iret
mov
xchg
mov
xchg
adc
pop
pop
popl
and
loope
add
mov
outsb
int
fisubs
push
pushf
push
mov
sbb
mov
pop
jmp
ret
stc
iret
mov
sub
cmpl
das
leave
push
or
cwtl
xchg
int
addr16
sbb
inc
mov
repnz
int3
std
sahf
push
xchg
jno
stc
dec
cmp
cmp
psllq
pop
xchg
aad
xchg
lahf
cmpsl
add
mov
int
rcrb
mov
aaa
enter
inc
pushf
push
fldcw
ret
das
ds
arpl
pushf
and
lods
jg
add
cmp
dec
cmp
cmp
push
sti
xchg
call
xor
push
mov
lahf
cmp
and
and
imul
fisubrl
mov
adc
ds
lcall
or
outsl
ret
inc
fldl
loop
daa
imul
movb
movsl
xor
fwait
xor
and
pop
inc
or
mov
jbe
arpl
jl
pop
fcomps
lahf
jo
inc
dec
test
cmp
xor
jl
adc
or
dec
add
adc
xchg
out
push
pop
cmpl
mov
rcrb
fiadds
cs
push
push
mov
stos
cmp
fs
mov
jle
faddl
sub
sbb
inc
push
jne
lret
pop
add
cmp
clc
push
mov
fucomip
cmpb
push
pop
mov
dec
mov
es
decl
rcrl
mov
xchg
pop
clc
cmp
scas
dec
and
jns
lret
sbb
ficompl
lret
ljmp
mov
cmpsl
xor
cmc
enter
addr16
sub
xchg
lret
adc
jns
shr
inc
loop
jp
xor
sbb
sub
ss
push
sub
mov
cwtl
dec
push
nop
xor
and
or
pop
sub
clc
pop
aad
xchg
mov
mov
jbe,pt
int
icebp
sub
jae
xchg
bound
cmp
pop
pushf
xchg
lcall
dec
jno
xorb
lods
gs
fs
stc
orb
cwtl
push
loope
mov
fistpll
das
lcall
push
stc
cli
dec
in
inc
sarl
aaa
sub
push
mov
sti
push
aam
inc
or
jge
mov
add
push
adc
or
push
sub
xor
popw
lock
adc
addl
fimuls
test
dec
or
pop
pop
scas
fldt
sbb
add
push
sbb
lcall
jecxz
fisttpl
repz
pusha
mov
push
aad
adc
sbb
jno
or
xor
popf
or
inc
jecxz
xor
fwait
xlat
sbb
repnz
mov
mov
loope
adc
jae
push
aad
data16
sub
stc
xchg
jmp
fistps
adc
pushf
in
push
pop
ja
dec
lods
in
xorb
jnp
sub
shll
in
inc
mov
push
fs
fimuls
ret
push
and
jge
xchg
cli
mov
dec
push
pop
and
add
sbb
aas
pop
mov
fcmove
jae
mov
xor
shrd
push
add
push
lret
xchg
dec
fcmovu
lock
imulb
das
jl
lret
jno
cld
pop
cmp
inc
push
in
xchg
mov
int
add
mov
aaa
in
mov
sbb
xchg
xor
out
aaa
pushf
xchg
or
dec
out
jno
sbb
xchg
imul
inc
pop
test
call
xchg
or
sbb
aam
lock
dec
pop
pop
lock
push
xor
add
lods
sbb
jmp
push
fistl
sub
jecxz
fisubl
movw
and
pop
cmp
xchg
sbb
sbb
xchg
push
repz
add
jg
int3
cmp
insb
inc
push
data16
xor
mov
aam
lahf
xchg
pop
push
into
inc
jl
push
cmp
jbe
xor
int3
out
fldln2
out
imul
push
lods
or
mov
inc
lods
xlat
fwait
sbb
mov
leave
add
jbe
jne
add
ficompl
jg
aad
mov
mov
test
sahf
xor
pop
push
rcrb
lods
ja
pop
imul
pop
jl
lods
ja
test
into
xchg
insb
mov
sub
ffree
mov
mov
sbb
arpl
fcoml
std
ret
mov
jle
stos
push
xor
push
push
stos
pop
cwtl
imull
dec
inc
imul
fdivr
jne
xchg
inc
jmp
sbb
jae
and
repz
leave
test
sub
imul
lcall
push
loopne
sbb
pmuludq
or
sub
bound
sub
loopne
negl
aad
add
dec
dec
push
mov
sbb
mov
out
push
aaa
adc
movsb
jnp
push
faddl
orb
and
mov
mov
imul
sub
mov
push
push
push
sub
or
in
pop
push
mov
mov
scas
mov
ret
fcoml
xchg
xor
lcall
dec
shll
pop
in
xchg
inc
fnstenv
clc
sti
rcll
leave
out
shrl
or
loop
push
stos
and
cwtl
mov
stos
test
jl
pop
lret
adc
dec
jle
je
inc
or
xor
call
addr16
xchg
mov
jecxz
push
xchg
mov
pop
movsb
mov
add
pop
xor
leave
out
cmp
ficomps
pop
jmp
push
add
dec
out
jae
pop
test
mov
outsb
inc
stc
mov
jecxz
add
cli
sub
test
leave
js
pop
out
and
and
mov
bound
stc
out
inc
test
das
adc
mov
pop
xchg
adc
pop
leave
dec
enter
je
int
pop
lret
jl
jne
icebp
stc
addl
cwtl
xchg
xchg
cmp
leave
bound
call
int3
mov
rorb
sbb
insl
fadd
bound
lds
shlb
pop
pop
fucomi
lcall
fdivl
cmp
fldt
sbb
dec
shlb
test
cmp
and
fs
stc
jecxz
push
and
or
and
and
adc
pop
arpl
notl
lea
mov
dec
cs
clc
dec
nop
xchg
outsl
mov
test
test
shll
dec
sub
jb
mov
aam
scas
les
aas
inc
test
push
mov
dec
sub
sbb
push
or
adc
outsb
cmp
loopne
push
mov
in
imul
dec
mov
add
test
aad
icebp
inc
xor
imul
mov
mov
mov
mov
hlt
test
xor
mov
push
lret
sub
pusha
jle
hlt
cmc
sbb
jl
int3
and
std
sub
in
mov
or
lret
sbb
dec
test
mov
xchg
inc
arpl
repnz
xor
xor
iret
adc
rolb
xchg
int3
cmp
mov
adc
mov
les
xor
pop
jns
or
add
dec
notl
lahf
add
rorb
nop
jo
call
jp
mov
push
jecxz
cmp
jle
push
pop
jbe
and
mov
xor
cltd
adc
int
imul
fwait
or
imul
data16
cmp
dec
add
inc
xor
pop
call
sbb
jns
popf
addb
fsub
daa
rcl
cmp
inc
jge
shrb
cmp
lods
mov
adc
xlat
lock
arpl
scas
pop
jo
and
test
add
imull
add
push
mov
dec
sub
mov
scas
pop
fs
mov
mov
stos
ror
push
jns
cs
cmp
xchg
xchg
fisubs
cltd
dec
xchg
lret
pushf
dec
sub
das
sbb
cld
xchg
shl
loop
test
idivl
adc
sti
jle
fistpl
xor
cmp
mov
sbb
mov
pop
jmp
xchg
sti
cltd
int
data16
sbb
shl
mov
xchg
jmp
mov
scas
lds
fimuls
or
aas
mov
inc
and
mov
cwtl
jnp
mov
mov
add
lods
bound
xor
push
mov
mov
and
sub
out
out
popa
xor
xchg
lret
incb
lods
push
stos
add
imul
pop
jbe
jl
shrb
cwtl
fcomip
sub
andb
scas
push
xchg
scas
popa
decl
xchg
nop
lods
pushf
or
movsb
pushf
or
pushf
or
dec
inc
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
