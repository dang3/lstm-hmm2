cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
pop
push
push
mov
pop
inc
and
sbb
add
sahf
pop
push
add
add
dec
adc
push
mov
movsb
mov
xorb
fwait
inc
and
jne
sti
stos
pop
fwait
mov
adc
pop
xor
fidivrl
es
push
and
lea
dec
cld
rolb
in
ret
insl
dec
pop
iret
test
jge
push
lods
aas
iret
out
leave
inc
xorb
dec
mov
fs
mov
lods
call
pop
push
and
mov
push
push
mov
pop
mov
sahf
dec
pop
jecxz
inc
add
adc
lcall
xor
ret
rclb
cli
movsl
mov
shl
add
mov
cmp
mov
enter
add
subl
jb
dec
orb
pop
adc
sbb
jo
jbe
int
mov
mov
adc
jo
xor
mov
insl
cmc
jmp
cmpsb
jle
enter
mov
dec
adc
std
push
int
inc
cwtl
mov
inc
adc
scas
fiaddl
or
daa
adc
pop
dec
or
mov
jle
mov
pop
int3
jle
and
mov
repnz
into
mov
hlt
add
xor
push
sub
add
jmp
cld
or
inc
imul
jbe
and
dec
fsin
insb
jge
shl
push
divb
popa
scas
lods
mov
push
jmp
xlat
out
pop
mov
es
test
cld
sub
sbb
sub
sub
vsubss
dec
out
pop
sub
fisubrs
jp
and
in
leave
insb
and
push
adc
push
shlb
or
je
sub
sarb
jmp
int
dec
aam
fldcw
sbb
jno
jle
xchg
ficomps
jg
pop
sahf
ljmp
loop
fwait
lea
iret
fnstsw
jnp
jmp
push
push
dec
nop
dec
inc
cmc
clc
cmp
mov
mov
dec
inc
aas
repz
mov
xchg
adc
push
mov
jecxz
ret
leave
inc
ja
pop
mov
fiaddl
mov
cmpsb
int3
mov
pushf
jbe
add
stos
mov
aaa
mov
dec
pop
mov
xor
jne
sahf
jge
aam
inc
lods
pop
pop
xchg
in
cmp
js
add
bound
xor
inc
scas
ja
add
stos
pop
add
add
pop
mul
push
xchg
shlb
push
add
mov
test
cmp
jle
add
out
or
jl
rcr
cmp
adc
jmp
mov
adc
movsb
enter
rclb
dec
jp
scas
add
stos
loopne
sub
sbb
clc
clc
xor
bound
ds
cmp
xor
xchg
test
sub
test
mov
add
mov
imul
fsubs
cwtl
inc
push
cli
sti
pop
mov
cmc
add
sub
sbb
dec
jmp
sub
or
js
xchg
gs
push
lods
xchg
sub
adc
push
mov
fildll
fs
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
int
leave
call
mov
and
scas
mulb
fmull
dec
dec
mov
inc
out
mov
sub
rol
int3
fwait
pop
loop
int3
mov
cmp
fildll
inc
pushl
mov
jecxz
push
xchg
mov
jbe
cltd
mulb
rcrl
mov
cli
pop
and
iret
inc
sbb
nop
cmp
lahf
sbb
dec
sbb
lahf
sub
mov
scas
movl
sar
loope
or
les
sbb
test
dec
xchg
mov
scas
testl
push
sbbb
lods
daa
cltd
lods
jle
leave
shll
mov
push
nop
jp
scas
inc
xchg
repnz
and
je
pop
xchg
add
cwtl
rcrl
or
rcrl
cmp
xchg
mov
mov
mov
and
mov
loop
sti
xor
fsubl
mov
popa
xchg
enter
aam
sub
lret
sub
mov
jne
jnp
xchg
repz
push
push
mov
ret
loopne
mov
mov
stc
clc
jp
add
movl
iret
inc
sub
nop
jg
repnz
aas
nop
icebp
imulb
js
loope
lret
dec
and
stc
or
push
cmc
fstpt
stos
dec
xchg
ljmp
frstor
fisubl
mov
popa
mov
das
or
xchg
out
xchg
filds
popl
inc
sub
lods
pusha
dec
add
jecxz
fwait
out
out
ret
scas
cs
icebp
leave
mov
scas
inc
fdivl
mov
xchg
inc
adc
add
sbb
fsubs
cwtl
or
mov
xor
ror
xor
inc
sbb
xchg
push
pop
and
sbb
dec
cltd
adc
out
call
lea
push
sbbl
add
mov
sub
and
push
mov
jg
std
jbe
mov
adc
fldt
mov
daa
ds
mov
lock
loop
cmp
lock
cmpsl
push
sarb
imul
push
lret
fisubl
ja
inc
push
shlb
xchg
jns
sbb
in
test
nop
sbb
xchg
or
cltd
adc
xchg
sub
jne
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
into
lods
fmulp
in
push
push
data16
push
dec
test
jbe
into
scas
ret
mov
xchg
fdiv
sbb
sbb
xor
mov
adc
sbb
cwtl
outsb
xlat
or
xor
push
mov
jmp
movsb
jp
mov
inc
gs
mov
rcrl
adc
orl
adc
inc
sub
imulb
lahf
add
sahf
inc
sub
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
daa
in
std
repz
ret
sahf
repz
pop
and
cwtl
pop
lock
je
mov
fsubrl
pop
iret
sbb
iret
sub
xchg
loop
les
sbb
test
push
in
xor
xlat
push
cmp
dec
sbb
fcoms
lds
sbb
xchg
fistpll
sub
lret
sbb
add
jnp
xchg
sub
mov
js
mov
adc
xorb
xchg
andl
xchg
fsub
adc
test
sbb
mov
pop
mov
in
orl
jp
mov
test
fdivs
mov
cwtl
and
rcll
dec
add
cmp
loop
cld
push
push
xchg
stos
insb
sub
adc
jb
mov
pop
push
mov
les
cs
arpl
lds
popa
clc
lret
in
imul
add
add
mov
je
sbb
mov
ret
pop
adc
clc
jecxz
and
ja
inc
in
xlat
in
dec
fsubl
in
xor
jmp
sub
icebp
add
or
xchg
cmp
das
sub
stos
adc
pop
sub
jp
add
sbb
jg
nop
popf
adc
loopne
cmp
leave
push
nop
aam
inc
xchg
ret
sub
pop
xchg
add
cwtl
rcll
sub
and
push
mov
xchg
cmpsb
enter
int
fmull
fsubs
lahf
pop
xchg
sub
enter
nop
scas
pop
sub
dec
imul
imul
fsubp
stos
mov
xor
lock
imul
push
add
xor
repnz
sbb
pop
mov
inc
sub
push
pop
adc
imul
mov
in
jecxz
sbb
incl
push
test
cwtl
xor
mov
popf
stos
mov
jae
cli
jo
mov
or
mov
push
sbb
movsl
mov
movsl
or
mov
mov
xchg
sbb
xor
xor
mov
mov
mov
loop
in
nop
xchg
sbb
mov
arpl
mov
sbb
add
jl
mov
insl
xchg
adc
pop
cmpsb
enter
cwtl
sbb
out
push
ret
mov
jle
push
leave
sbb
push
in
std
mov
cmc
clc
dec
mov
int
mov
adc
ljmp
adc
in
mov
loopne
jmp
mov
sbb
imul
popa
mov
adc
lret
mov
inc
std
push
sbb
jecxz
cli
push
dec
sbb
xlat
or
shrl
leave
test
push
sahf
popf
mov
mov
mov
or
inc
mov
test
pop
sahf
rcr
xchg
fimull
pushf
es
lods
jge
shrl
inc
into
ja
xchg
sahf
xchg
fwait
js
adc
cli
jnp
inc
mov
jge
pop
dec
xchg
adc
mov
inc
jns
dec
nop
lock
dec
mov
cltd
xor
mov
mov
mov
cltd
inc
js
adc
ret
sbb
adc
mov
cmpb
sbb
mov
fmull
xchg
jmp
cmpsb
dec
imul
fsubp
mov
je
pop
dec
int
cltd
int3
repz
dec
call
cmp
test
adc
dec
lahf
lds
add
mov
adc
adc
enter
xchg
test
ret
test
nop
loope
cmp
pop
xor
mov
movsb
fisubl
and
fimull
dec
pop
dec
cwtl
lcall
jmp
xor
xlat
and
inc
sbb
or
stos
arpl
xchg
loopne
loopne
mov
pop
jno
push
imul
lahf
scas
std
fabs
cmp
jno
jnp
inc
mov
add
dec
add
add
cwtl
shll
addr16
adc
cmp
xchg
mov
mov
mov
and
fstl
jmp
ret
ret
sti
xor
fsubl
pop
loop
adc
pop
ljmp
or
idivb
lahf
add
dec
sahf
inc
sub
xor
mov
cmp
push
into
lea
mov
sbbl
lock
jle
aas
ret
fdivp
mov
pop
and
test
lock
push
mov
cltd
inc
arpl
xor
mov
imull
jmp
inc
cli
cmpsl
sub
dec
sbb
mov
cmc
inc
pop
xor
mov
mov
mov
inc
pop
xchg
nop
fsts
mov
pop
mov
jecxz
loopne
fistpl
sub
scas
fidivs
test
pop
das
push
jne
cmp
jno
jnp
inc
mov
mov
adc
mov
mov
lock
int
inc
test
cltd
xor
std
inc
jp
sbb
lret
sub
cmpsb
gs
inc
push
cmp
bound
cmpb
je
test
push
sbb
dec
mov
in
lea
fsubrl
push
negl
iret
adc
sbb
and
repnz
mov
in
jmp
jecxz
movsl
mov
mov
or
cmp
xchg
jo
lods
mov
sbbb
jne
clc
lret
push
stos
xchg
jno
mov
xchg
jmp
push
aaa
mov
aaa
ljmp
inc
cmp
test
xchg
adc
cmp
cmp
les
xchg
shrl
dec
movsb
aad
xor
xor
xchg
loop
iret
cmp
imul
mov
andl
add
dec
mov
pop
repnz
out
mov
sbb
mov
cmp
movsl
in
cmpsb
enter
mov
fld1
jne
lahf
out
push
ret
mov
cmp
cmc
mov
hlt
cmc
cmp
pop
xchg
xchg
fwait
add
aam
in
cmc
mov
leave
dec
xor
dec
push
jne
pop
push
cld
icebp
push
inc
mov
mov
call
xor
mov
add
ret
lock
leave
sarb
imul
push
lret
fisubl
shlb
push
lret
sbb
cmpsl
fldt
jmp
xchg
pushf
pusha
pop
mov
xor
cmp
mov
cmpsb
xor
jb
fcoml
fisubs
popf
adc
ljmp
dec
cwtl
pop
mov
out
push
xchg
sbb
jl
andl
inc
jno
xor
and
or
lret
jo
sbb
movsb
xlat
push
mov
sub
popf
push
dec
lahf
adc
shlb
test
mov
push
inc
mov
mov
stos
out
sub
adc
inc
jb
dec
sbbb
push
mov
ret
mov
pop
test
cmp
mov
xchg
jl
push
iret
sbb
mov
cltd
xor
std
push
mov
fs
out
aam
aas
sbb
incl
push
test
cwtl
xor
in
loop
mov
fbstp
xchg
in
movsl
in
mov
pop
sub
les
push
dec
lcall
mov
mov
mov
sub
jno
jb
jp
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
and
mov
cmpsb
call
les
xchg
sub
movsl
inc
push
mov
jl
movsb
xchg
fsubs
and
std
bound
pop
xchg
repz
mov
inc
inc
mov
add
xchg
xchg
fwait
cmp
cmp
das
in
jmp
loop
mov
fisttpll
pop
div
mov
dec
call
sbb
test
lahf
lds
add
mov
testb
jp
or
xlat
push
pop
adc
dec
cmp
xchg
jo
and
sbb
clc
jmp
mov
test
and
inc
xchg
pop
aaa
push
repz
ljmp
inc
cmp
lret
xchg
adc
cmp
cmp
les
cmp
jns
inc
rorl
pop
jne
cltd
fmull
fwait
scas
dec
push
dec
dec
push
sub
enter
inc
shlb
or
sbb
mov
lock
mov
cltd
xor
scas
mov
adc
dec
fidivl
fisubs
cmp
fnsave
in
sub
and
idivb
dec
dec
mov
cwtl
sahf
insl
push
hlt
sub
out
xor
mov
repz
lds
cmp
and
mov
test
fwait
lahf
aas
hlt
and
xchg
lcall
pop
xchg
ret
mov
mov
pushf
and
jl
movsl
mov
mov
xor
fldl
fwait
sbb
int
dec
mov
mov
fidivl
mov
jae
add
cmp
and
jae
les
xchg
fisttpl
sahf
adc
mov
ret
xor
pop
cmpsl
pop
fs
lods
loopne
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
or
lret
clc
add
test
or
push
fsubs
sub
or
and
mov
cmpsb
jnp
mov
jecxz
adc
or
inc
push
xchg
popf
push
test
add
xchg
cmp
or
pop
jg
movsl
dec
mov
mov
pushf
ja
lret
push
adc
mov
jns
mov
not
jns
pop
shlb
divb
cwtl
lret
inc
sub
rcrb
cli
xlat
xor
aaa
mov
inc
and
pop
sub
cli
cmc
cmpl
ljmp
xorb
out
addb
sub
dec
data16
stos
push
fnsave
xchg
push
mov
xor
add
add
test
scas
mov
lahf
jecxz
enter
adcl
mov
adcb
sub
xor
dec
mov
fnstenv
mov
xchg
sbb
subl
push
gs
insl
cmovae
lret
jecxz
out
push
ret
insl
push
andb
cmp
or
cmp
xchg
sub
stos
inc
mov
sbb
loop
pop
push
mov
shr
xor
pop
loopne
js
lcall
mov
mov
inc
sbb
jl
jno
ret
sbb
dec
and
xchg
hlt
mov
fwait
xor
mov
pop
xor
fbstp
cmc
insb
test
sti
sbb
int
dec
mov
fs
fistpll
arpl
lds
or
in
and
aas
pop
xchg
or
ret
roll
xchg
loopne
in
mov
pop
jno
push
jnp
pop
fstl
pop
enter
lahf
scas
std
fabs
cmp
xchg
push
jecxz
mov
nop
adc
xorl
rorb
rorl
mov
add
dec
mov
xchg
push
pop
and
lea
cmp
cmpsl
ja
cltd
push
bound
outsb
mov
je
cmp
dec
ja
mov
test
aas
mov
repz
mov
imul
lds
jne
push
adc
mov
jns
mov
add
mov
dec
les
add
lods
movsb
sbbb
push
sub
adc
inc
in
xlat
mov
inc
and
inc
mov
pop
aaa
je
imul
rcrl
test
roll
in
inc
pop
xchg
adc
cmp
cmp
les
mov
sbb
imul
lahf
scas
std
fabs
cmp
xor
inc
cwtl
cmp
mov
andl
add
adc
mov
sbb
pop
xor
adc
xor
movsb
inc
add
xchg
cltd
out
xchg
mov
xor
mov
shlb
cwtl
push
push
sub
mov
je
cmp
imul
test
mov
ret
in
mov
push
jne
les
sbb
imul
jecxz
cmp
push
add
mov
fildl
sbb
xchg
test
ret
test
nop
daa
cmp
pop
xor
mov
movsb
fisubl
stos
sub
test
lahf
fisttpll
test
or
mov
es
xchg
stos
mov
adc
popf
jne
sbb
pop
pusha
sbb
mov
ficoms
das
mov
clc
sbb
mov
addl
or
inc
and
dec
pop
dec
and
sbb
bound
imul
sub
cmp
into
clc
xor
cmpsl
pop
push
push
mov
or
in
imul
and
jecxz
adc
sbb
cltd
enter
sbbb
pop
loopne
ljmp
jns
push
dec
mov
daa
in
call
shl
movl
add
push
add
movsl
jns
pop
and
mov
inc
stos
cwtl
adc
mov
or
dec
push
lret
mov
xchg
stc
mov
cld
mov
cmp
in
test
stos
or
inc
push
data16
scas
ja
les
ja
lds
ljmp
sbb
lods
pop
mov
shlb
in
es
scas
inc
fdiv
shlb
arpl
add
nop
pop
shr
out
dec
aam
addr16
inc
cwtl
adc
dec
and
inc
or
movsl
inc
pop
icebp
jb
lahf
outsl
aas
add
xchg
pop
test
dec
xchg
and
mov
inc
dec
mov
ret
add
xchg
push
hlt
dec
addr16
jno
in
ret
addb
pop
clc
aaa
call
imul
inc
bound
aas
xlat
mov
hlt
movsl
ret
ret
out
jnp,pt
cli
add
rcrl
test
or
dec
mov
sbbl
dec
sbb
xlat
or
shrl
leave
test
scas
sahf
popf
mov
mov
mov
or
bound
stos
nop
xor
test
cmp
outsb
stos
push
fnsave
push
mov
xor
add
add
mov
data16
scas
mov
lahf
jecxz
enter
adcl
mov
adcb
mov
inc
push
lret
fmuls
mov
test
mov
mov
mov
mov
cltd
xabort
add
call
in
add
sbbl
add
mov
mov
push
adc
or
cmp
idivl
pop
loopne
call
pop
mov
test
inc
mov
daa
repz
mov
lock
loop
cmp
lock
mov
leave
sarb
imul
movsb
push
testl
push
lock
adc
test
cld
mov
std
arpl
add
xchg
dec
bound
push
push
lcall
or
xchg
stos
jge
jns
adc
dec
xchg
fwait
mov
lds
mov
scas
push
fdivl
jo
arpl
add
and
mov
cmpsb
call
les
xchg
sub
xor
sbb
push
fsubs
stos
cmp
jb
pop
mov
jne
jecxz
out
call
mov
sbb
add
sub
xchg
push
stos
mov
fsubp
mov
jbe
mov
push
cld
mov
imul
in
ljmp
mov
jae
mov
cltd
sbbb
fwait
arpl
mov
out
pop
sbbb
mov
inc
stos
pushf
adc
mov
add
stos
inc
out
inc
mov
test
pusha
or
call
inc
or
test
popa
movsl
or
cmp
rcl
cltd
pushf
xchg
sbb
fstl
scas
dec
push
mov
scas
aaa
mov
cli
jnp
inc
mov
push
subl
xchg
adc
mov
mov
cmp
sbb
mov
sbb
loope
sub
mov
fwait
insl
cmovae
sbb
or
push
ret
lret
ss
mov
enter
mov
xchg
stos
outsl
sub
pop
xor
mov
pop
push
mov
push
insl
inc
lea
pop
and
mov
pop
push
dec
push
dec
cwtl
in
sti
mov
imul
orps
mov
mov
mov
cmc
pop
insb
test
pop
inc
cltd
lret
lcall
sbb
ss
cld
xchg
frstor
fisubl
or
xor
xor
push
sbb
nop
lcall
fnsave
imul
sbb
add
mov
mov
outsb
jg
leave
push
nop
jp
scas
inc
xchg
repnz
and
and
cmovbe
mov
add
jge
xchg
sub
add
or
movsl
push
pop
jno
and
std
bound
pop
sti
xor
fcoms
ja
int3
inc
cmp
sbb
add
sub
popf
out
mov
mov
lcall
fdivp
jne
popa
or
mov
jno
mov
push
in
push
fs
push
testb
jae
and
cmp
adc
mov
fs
out
or
jg
mov
pop
stos
push
insb
xlat
lret
sbb
dec
xchg
xchg
mov
cli
mov
lcall
mov
fbstp
add
inc
pop
roll
in
dec
cmp
stos
rcrb
jne
inc
pop
mov
sbb
xchg
nop
sub
xor
or
scas
aaa
mov
cli
jnp
inc
mov
and
pop
mov
mov
and
sbb
mov
add
sbb
subl
movsb
jp
mov
pop
gs
inc
push
mov
lods
int
andb
cmpb
xor
cwtl
pop
dec
push
sbb
mov
cmc
clc
pop
mov
jmp
loop
pop
pop
mov
shr
xor
pop
in
mov
and
jb
mov
mov
inc
sbb
in
mov
xorl
pushf
pop
mov
sbb
leave
sbb
cld
insb
test
sahf
sbb
test
push
in
xor
jmp
push
lret
mov
sub
mov
xchg
or
xchg
lcall
std
mov
add
inc
mov
fstl
pushf
es
pop
mov
es
cltd
jecxz
pushf
repnz
sub
sbb
mov
mov
and
sbb
and
mov
notb
mov
in
orl
jp
mov
pop
roll
xor
bound
cmpb
out
rolb
mov
jb
addr16
cs
dec
fnstenv
shl
pop
and
xorb
divb
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
inc
aam
adc
mov
mov
xchg
jno
dec
xchg
jo
loope
dec
sbbb
jne
les
sbb
adc
pop
ljmp
ljmp
ljmp
pop
sbb
stos
sahf
inc
sbb
test
popa
inc
outsb
stos
push
adcb
xor
add
jnp
mov
fnstenv
lahf
fisttps
mov
jecxz
fdiv
and
or
add
shlb
icebp
imul
and
pop
mov
clc
and
movsl
ret
dec
mov
dec
mov
sahf
xor
fwait
insl
ds
aad
jb
pusha
sub
je
or
and
mov
dec
add
fwait
dec
dec
mov
jb
dec
addr16
loopne,pn
push
negl
iret
adc
sbb
xor
mov
jmp
pop
mov
repz
pop
and
addb
mov
mov
add
lret
nop
aas
and
imul
les
inc
js
push
pop
and
pop
dec
push
dec
push
dec
fsubrs
std
in
jmp
lds
sbb
dec
bound
add
xchg
lcall
xchg
mov
push
jbe
lods
pop
jno
push
js
fcomp
xchg
pop
int3
adc
mov
scas
std
fabs
cmp
xchg
pusha
cli
sti
sub
adc
or
mov
or
mov
sbb
pop
xor
add
pop
push
fisubl
stos
xor
aam
cmp
daa
jno
dec
add
sbbl
add
mov
sub
jle
mov
cmc
mov
bound
fldt
mov
daa
loopne
in
mov
lock
loop
cmp
push
sarb
imul
mov
sbb
sub
push
lahf
push
sub
sbb
mov
sahf
das
xchg
stc
cli
in
test
imul
inc
inc
data16
scas
ja
les
jp
mov
inc
mov
loope
dec
test
js
lret
pushf
xor
js
jge
inc
xlat
fdiv
sbb
sbb
js
or
inc
add
sbb
cwtl
outsb
sarl
repnz
call
jp
sub
sbb
cmpsb
gs
inc
jo
cmp
bound
cmpb
je
test
fisttps
dec
dec
mov
inc
cmpb
mov
inc
sub
xor
mov
xor
adc
popf
sub
sbbl
lock
mov
repz
pop
and
test
lock
or
mov
popf
mov
fsubrl
pop
iret
sbb
iret
mov
les
aam
mov
cmp
push
in
xor
jmp
stos
popf
lret
mov
jl
leave
fcmove
push
xchg
and
sub
stos
adc
pop
sub
jp
add
sbb
adc
pusha
popf
adc
aam
sbb
bnd
lods
scas
fbstp
jecxz
add
fld
subl
js
inc
mov
xor
fsub
sub
pop
adc
jp
mov
rclb
inc
add
ljmp
sbb
mov
mov
cwtl
push
adcb
addr16
add
xchg
rcr
lock
cltd
fimuls
jb
lock
shrb
stos
or
mov
jno
mov
hlt
mov
mov
dec
sub
adc
mov
mov
cltd
inc
jecxz
xor
mov
xor
sar
int
cmp
sub
cmc
sbb
call
popf
ljmp
adcb
cmp
sub
dec
mov
stos
pusha
fnsave
mov
inc
pop
mov
push
xor
scas
mov
lahf
jecxz
cld
repnz
sbb
fwait
add
mov
mov
pop
xor
dec
mov
fnstenv
lret
call
js
sub
xor
cmpsb
gs
inc
dec
mov
mov
jecxz
bound
cmpb
je
test
jle
push
dec
inc
mov
xchg
cmpb
lahf
cmp
sub
xor
mov
sbb
addr16
xor
shrl
mov
push
popf
mov
cmp
jp
add
sub
pop
mov
sbb
leave
fcoms
insb
test
dec
push
mov
std
xlat
cmp
inc
and
inc
dec
xor
mov
mov
mov
inc
pop
xchg
push
fsts
test
pop
mov
jecxz
or
mov
aad
mov
add
dec
popf
push
jns
push
ficoms
ds
scas
jg
mov
xor
jo
mov
sub
add
inc
mov
inc
rorb
cmc
mov
nop
imul
sub
mov
or
xchg
mov
out
fsubr
pop
mov
icebp
inc
fs
mov
sub
xchg
repz
lds
cmp
and
mov
test
adc
mov
lock
loop
inc
sbb
xchg
test
ret
test
ljmp
rcrb
ret
aam
pop
movsb
fisubl
movsb
leave
test
xchg
mov
ljmp
into
lcall
sbb
jno
test
xchg
sub
mov
inc
sbb
scas
nop
in
dec
movsl
xchg
mov
cmc
push
outsb
jbe
lods
inc
pop
jno
pusha
mov
cld
loop
mov
iret
push
jmp
mov
andl
pop
adc
sbb
mov
out
loope
jp
imul
push
cltd
scas
enter
ljmp
sbb
inc
cltd
jmp
and
mov
cmp
pop
xchg
dec
dec
mov
icebp
mov
xchg
cmp
or
pop
jg
mov
lea
pop
and
imul
inc
out
repz
cmp
movsl
ret
ret
out
add
imul
xchg
leave
fsubl
pmuludq
popa
inc
ljmp
push
in
movsl
movsb
jmp
pop
fucomp
je
ror
push
lret
into
xchg
mov
test
sbb
jno
test
xchg
sub
or
sub
scas
nop
aad
dec
movsl
xchg
mov
mov
xor
xor
mov
es
scas
inc
fdivl
jo
arpl
rcll
clc
jb
mov
rol
sub
lret
push
testb
fisubs
xchg
imul
cmp
bound
cmp
jb
xchg
cmp
sbb
daa
loopne
hlt
mov
xorb
xor
xor
push
adc
sbb
cltd
fincstp
mov
pop
loopne
ljmp
dec
cmp
movsl
sbb
jp
add
or
das
call
sbb
dec
push
leave
sbb
cld
insb
test
lahf
sbb
test
push
in
xor
stc
mov
xchg
mov
popf
lret
mov
sbb
leave
pop
add
sbb
aad
nop
lcall
jge
imul
xchg
jbe
add
dec
mov
sub
fwait
jmp
lahf
adc
pusha
loopne
or
inc
lret
add
mov
mov
sub
jl
test
push
xchg
adc
cmp
inc
in
in
cmovae
lods
mov
cmp
xor
jge
sbbl
add
mov
rolb
sahf
int
dec
movsb
adc
fsts
imul
out
mov
xor
mov
cmp
jp
add
add
sub
sbbl
movsl
cltd
inc
jecxz
xor
mov
notl
sbb
test
push
in
dec
pop
dec
je
repnz
out
mov
shrb
mov
sbb
sub
jne
inc
dec
lret
stos
xchg
fimull
fisubrl
pop
sbb
ja
mov
lods
inc
sbb
scas
popa
dec
push
aaa
fwait
leave
in
and
inc
add
add
inc
cs
mov
sub
jl
test
push
xchg
imul
push
pop
xchg
xchg
pop
and
lcall
xor
out
call
cwtl
push
push
cld
pusha
mov
je
sub
imul
sub
inc
popl
adc
fsts
imul
out
mov
xor
mov
cmp
jp
add
mov
jnp
sbb
mov
cltd
inc
jecxz
xor
mov
testl
push
test
push
in
xor
push
xor
mov
mov
mov
test
sahf
push
icebp
leave
or
movsl
or
mov
cwtl
pushf
xchg
sbb
incb
mov
add
cltd
sub
mov
sahf
fists
test
add
sbb
pop
es
cmpsb
mov
xor
ror
negb
mov
jmp
movsb
jp
enter
adc
rcl
cmp
inc
test
jb
inc
mov
mov
out
movsl
dec
or
cltd
sahf
ret
dec
mov
ret
push
mov
push
jne
pop
in
js
iret
inc
mov
jg
jp
aas
in
mov
add
jg
loop
inc
sbb
sahf
test
ret
test
dec
sarb
mov
movsb
fisubl
movsb
jmp
fucomp
je
push
lret
into
ret
test
sbb
jno
test
xchg
lret
or
pop
sub
jp
add
or
lds
sub
sahf
xchg
fwait
inc
and
sbb
fucom
jo
mov
pop
jb
sbb
inc
rcrl
xchg
pop
pop
mov
clc
cmp
movsl
ret
inc
mov
pop
mov
pop
mov
cmpsb
ret
scas
dec
jmp
lds
sbb
pop
and
mov
enter
popf
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
dec
dec
stc
std
sti
mov
imul
clts
add
mov
dec
xor
add
lods
mov
pop
repnz
inc
sbb
push
jmp
lds
out
lds
pop
ret
xchg
insb
pusha
std
fbstp
je
in
mov
pop
sub
les
push
pop
push
stos
rcrb
jne
test
pop
mov
sbb
jmp
shll
lods
loopne
and
or
dec
cltd
jl
popf
fimuls
sbb
push
mov
testl
mov
mov
adc
dec
and
inc
add
pop
adc
push
popf
push
stos
cmp
fucomi
hlt
std
mov
sti
and
or
hlt
mov
test
mov
inc
out
mov
sub
ret
fwait
pop
loop
int3
jno
mov
movsl
sti
and
push
adc
mov
jns
mov
lock
sub
mov
repnz
fwait
icebp
xor
leave
rcrb
cli
shll
adc
mov
sbb
int
dec
mov
cmpsl
mov
fidivl
mov
jae
add
cmp
and
sub
lods
nop
cmc
fisubrl
pushf
mov
jno
push
jb
lods
ret
sbb
fisubrl
jns
xchg
rorb
mov
leave
push
nop
and
stc
and
sub
push
inc
aam
gs
jb
add
jge
jb
pop
jecxz
mov
cmp
mov
mov
dec
test
sahf
xor
insl
ds
aad
jb
loopne
cmp
aaa
and
jno
dec
add
fwait
dec
dec
mov
cltd
sahf
mov
mov
fsubp
lods
mov
aad
cltd
in
repz
dec
call
lahf
mov
mov
mov
cmp
outsb
adc
cltd
sub
nop
or
add
leave
lds
dec
sbbb
xor
mov
pop
inc
cltd
lret
lcall
sbb
and
frstor
fisubl
jno
inc
rorb
fmuls
jp
or
imul
cld
stos
xchg
stos
jge
imul
pusha
fwait
mov
lds
fsub
stc
inc
cs
test
out
js
mov
in
addb
inc
sbb
mov
mov
jb
addr16
sbb
cmp
xchg
mov
mov
mov
and
mov
mov
pop
fsubl
pop
in
push
adc
pop
lret
enter
or
fidivl
in
cmpb
lahf
add
dec
sahf
inc
sub
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
daa
or
std
repz
ret
sahf
repz
pop
and
cwtl
pop
lock
je
add
inc
pusha
bound
cwtl
or
push
add
hlt
dec
sbb
mov
sbb
fnstenv
popf
lret
mov
cmp
jge
mov
xchg
sub
add
lret
stos
xchg
fimull
fisubrl
pop
sbbb
xchg
cld
ret
xor
inc
sbb
scas
popa
xor
js
xchg
cmpsl
sahf
push
fwait
leave
in
and
inc
add
add
cmp
cwtl
or
mov
aam
mov
jnp
inc
push
mov
xchg
sbb
pop
mov
push
dec
sbb
dec
cltd
cmp
out
call
aam
sub
iret
not
adc
dec
and
sub
mov
fsubr
push
and
jmp
pop
jbe
mov
adc
mov
imul
in
ljmp
mov
jae
mov
sbb
popa
mov
add
testb
gs
popf
fmull
repnz
stos
mov
jnp
inc
in
xlat
dec
push
lret
jnp
aas
adc
rcl
aaa
mov
mov
ret
pop
push
xchg
test
roll
fsts
pop
jl
adc
mov
push
outsb
les
push
mov
xor
jecxz
fwait
pushf
pop
sti
fadds
jnp
scas
popa
stos
inc
hlt
repz
loop
inc
mov
pop
jb
hlt
inc
shlb
add
jge
jb
pop
stc
repnz
movsl
ret
dec
mov
dec
xchg
push
jne
sbb
mov
fldenv
pop
out
adc
sbb
jecxz
enter
or
sub
mov
xlat
adc
int
ja
xor
mov
call
push
sahf
shrl
mov
push
jno
mov
movsl
add
jmp
jo
mov
sbb
pop
sub
lret
mov
pushf
dec
jne
rorl
dec
ret
and
jge
sub
cmc
sbb
lods
fcomi
xchg
repz
gs
mov
sub
add
cmc
add
xchg
or
pop
pop
fsts
xchg
pop
and
xchg
jnp
pop
je
into
mov
fadd
push
pop
adc
dec
mov
mov
sub
adcl
dec
aam
cld
filds
dec
aam
stc
mov
xor
push
aas
fwait
lret
in
mov
mov
or
fwait
xlat
xchg
stc
xchg
cwtl
flds
mov
cmp
out
push
test
popf
xchg
push
adc
xchg
push
pop
push
mov
cmp
test
sbb
push
fwait
lahf
lds
ds
mov
add
divb
int
inc
or
add
lcall
mov
cwtl
lret
movsl
ret
popf
cld
add
les
fucom
xchg
and
lds
jns
xchg
pop
add
fldt
cmpsb
cmp
pop
or
orb
scas
arpl
pop
jo
cmp
inc
lcall
lret
pop
test
xor
jno
cmp
lret
jno
sbb
int3
mov
mov
icebp
xor
scas
add
arpl
iret
xchg
mov
cmp
stos
and
jnp
inc
push
mov
rcrb
push
jne
mov
mov
xchg
cltd
out
jns
mov
pusha
insl
push
andb
cmp
or
cmp
xchg
sub
flds
and
xor
aam
shl
sbb
jne
rolb
mov
lds
cmp
sahf
divl
mov
and
sti
dec
fists
inc
insl
cwtl
xchg
leave
fsubrl
lahf
sub
sub
sbb
les
lcall
sbb
mov
inc
leave
fs
jno
inc
push
scas
xchg
inc
mov
test
aam
cltd
lcall
cmp
sbb
push
lret
ret
mov
or
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
cmpsl
imul
mov
mov
jnp
inc
push
mov
xchg
sbb
sub
mov
movswl
jmp
std
mov
sti
and
push
mov
xchg
inc
mov
test
add
xchg
cmp
or
pop
movsl
adc
mov
mov
add
mov
cmp
jp
add
rorb
add
add
cs
sub
lods
xchg
sub
adc
push
dec
repz
adc
ja
inc
inc
lahf
scas
mov
bound
xchg
repz
ljmp
in
movsb
lcall
nop
xchg
imul
lcall
cwtl
mov
dec
movsb
aad
xor
xor
fwait
jge
js
popf
push
lret
in
pop
popa
or
scas
adc
addl
rorl
stc
jb
push
sbb
dec
xor
mov
xchg
sbb
and
mov
pop
fcomp
movswl
jmp
std
mov
sti
and
push
int3
sbb
sbbl
lea
cmp
pop
aas
shr
repz
les
jg
movl
popf
mov
cmp
jp
add
ror
cmp
add
cs
sub
lods
xchg
sub
adc
dec
test
mov
sbb
std
fistpll
int
data16
test
jp
jge
scas
xchg
iret
stc
push
mov
adc
mul
movaps
es
sahf
pop
and
sub
and
test
lret
cmp
lock
dec
mov
loopne
push
repz
xchg
xchg
mov
scas
mov
out
jae
popf
sub
divb
mov
jae
fidivrs
sahf
sub
test
mov
add
icebp
mov
jae
push
inc
test
ss
push
andl
fisubrs
pop
pop
cmp
dec
add
mov
push
push
push
push
adc
test
sbb
sub
jb
mov
xchg
sbb
nop
cmp
jbe
aad
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
int
data16
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
jl
das
dec
iret
ror
jmp
fld1
stc
jp
scas
scas
loope
sti
jnp
out
scas
lods
icebp
sbb
stc
out
xchg
out
imul
sbb
xor
xchg
ret
mov
dec
mov
lcall
and
or
adc
popf
je
and
sti
inc
jae
ljmp
add
mov
dec
jecxz
mov
test
dec
mov
insb
dec
mov
nop
xlat
arpl
fbstp
xor
dec
push
mov
fildll
movsl
int
pop
add
imul
inc
inc
jbe
pop
xchg
dec
inc
mov
pop
adc
mov
push
popa
dec
leave
test
adc
jle
les
lret
leave
scas
dec
xchg
jp
mov
jne
insl
inc
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
hlt
and
sahf
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
pop
fsubl
xor
jnp
fpatan
fwait
xchg
and
jmp
int3
cmp
mov
push
cwtl
jb
jecxz
jns
mov
aam
repz
pop
mov
pop
scas
mov
push
mov
dec
lock
fwait
sbbb
xchg
lock
add
dec
lds
push
cmpb
lret
test
es
and
aad
jle
add
sub
cmc
sbb
std
fistpll
int
data16
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
insb
scas
in
mov
jmp
pop
mov
push
sub
sbb
repz
fwait
adc
add
sahf
xchg
mov
xlat
sti
fs
jecxz
mov
or
das
sti
jb
xor
mov
jecxz
dec
rcll
addl
imul
mov
pushf
sbb
sbb
gs
sub
test
cmc
xor
movsb
sbb
pop
add
mov
sub
std
imul
xor
mov
cmp
jp
add
cltd
sub
adc
jae
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
lcall
ret
stc
pushf
pop
pop
mov
lahf
fisttps
pop
xchg
jecxz
icebp
fsub
loopne
push
sub
add
push
jg
shl
fcmovnu
adcb
stos
xchg
mov
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
push
mov
xchg
mov
adc
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
pop
pushf
pop
mov
call
push
add
jl
fbstp
dec
sbb
push
ret
enter
push
cmp
add
outsl
hlt
jmp
decb
push
insb
jne
lds
cs
mov
mov
dec
mull
imul
dec
and
iret
jae
xchg
rcr
mov
and
mov
inc
inc
test
adc
enter
dec
movsl
or
sbb
fistl
mov
aas
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
lods
add
and
mov
mov
negb
xor
jnp
lods
inc
jae
add
cs
jae
xchg
lods
xor
adc
sbb
outsb
push
mov
or
nop
add
pop
cmp
xor
push
in
repnz
mov
push
pop
lahf
fistl
inc
mov
fstps
jp
pop
clc
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
lods
pop
pushw
pop
leave
jae
pop
jbe
mov
add
test
mov
jb
inc
and
stc
inc
repnz
movsb
jmp
xchg
aam
push
dec
popf
push
aad
push
fdivs
push
mov
cmp
ret
ficoms
mov
scas
mull
or
adc
arpl
mov
sub
hlt
clc
into
bound
insb
ret
clc
xor
or
xlat
addb
mov
mov
mov
lret
xchg
or
inc
pop
mov
pop
incb
cmp
sbb
adc
xor
lret
cmp
or
cmp
xchg
sub
popf
out
mov
or
push
jne
les
loopne
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
add
into
call
mov
divb
dec
or
sub
push
movsl
imul
sti
repnz
lods
jp
xor
fwait
mov
sarb
test
icebp
fiaddl
or
inc
mov
add
pop
inc
aad
inc
movb
xor
pop
jp
mov
fisttps
mov
mov
cmp
jo
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
test
das
inc
fidivrs
sahf
lret
xchg
lock
call
loope
lahf
stc
cwtl
shrl
pop
xchg
orb
fs
sub
stos
iret
mov
sbb
mov
and
sub
js
inc
shlb
int
insl
xchg
in
test
pop
inc
mov
popa
lahf
out
or
add
sbb
stos
xchg
mov
cmpsb
stos
mov
mov
push
scas
jnp
stos
inc
js
gs
stc
or
fcompl
pop
mov
add
movb
imul
xchg
mov
inc
std
popa
inc
inc
cmpl
fistl
test
add
or
lea
pop
lds
cld
cmp
scas
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
and
mov
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
int
imul
imul
and
cmp
jle
mov
cltd
ljmp
rol
jo
pop
or
fwait
les
pop
loopne
hlt
out
mov
pop
repnz
jo
flds
hlt
dec
inc
sbb
rolb
popa
lcall
mov
pop
lret
pop
repz
rcrb
jbe
mov
movl
cmp
int
data16
test
in
andb
out
add
rorl
mov
xchg
dec
and
rcll
fadds
mov
outsl
push
iret
lds
repz
mov
add
inc
fcoml
jg
add
or
into
iret
cmp
cs
xchg
scas
out
movsl
jg
outsl
jae
fiadds
stos
mov
dec
adc
es
inc
clc
mov
fdivl
mov
lods
cltd
mov
movsb
iret
out
xor
nop
lret
cmpsl
mov
jge
je
jo
jns
nop
add
test
call
inc
mov
jae
repz
fists
addb
rcrb
hlt
das
lock
mov
mov
inc
push
pushf
cmpb
adc
fldenv
jb
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
insl
dec
pop
xchg
enter
lods
scas
das
test
adc
and
xchg
xchg
test
popa
jp
pop
testb
shr
mov
push
addl
push
add
pop
cmpsb
out
push
les
cmp
ret
adc
cld
sub
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
cs
sub
add
sbb
mov
mov
or
push
jne
les
pop
and
or
inc
ret
add
fidivl
sbb
mov
jbe
orl
jmp
lods
rcrl
aas
and
ficomps
shll
fistl
lea
sub
jb
fstl
movsb
shll
lock
jp
ss
push
out
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
mov
movsb
into
fsubrl
lret
popa
jno
fcmovne
lds
popf
cmc
jmp
js
lret
inc
fstl
inc
fprem1
jmp
adc
ds
push
test
mov
xor
sub
je
pop
adc
test
and
std
lods
xor
xchg
std
mov
mov
adc
iret
shrb
addr16
dec
clc
and
dec
sarb
mov
repnz
movsb
dec
int
push
mov
out
mov
clc
sti
jne
jp
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
jne
inc
rcrl
fistpl
test
inc
mov
sbb
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
mov
jnp
push
xchg
jle
jmp
cmp
fcmovbe
mov
loope
sbb
arpl
pop
mov
cmp
iret
jns
dec
sbb
inc
ljmp
pop
and
call
inc
cmp
ret
and
lds
pop
addr16
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
or
cltd
pop
xlat
sbb
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
into
aaa
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
adc
ss
sahf
add
mov
push
mov
push
cmpsb
lret
outsb
mov
in
and
push
scas
sti
sbb
push
or
mov
mov
into
ds
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
in
inc
stos
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
int3
scas
inc
fs
pop
popf
sub
rorl
sarb
add
push
jge
outsl
jg
std
xchg
xor
cmpsb
scas
lahf
push
int
dec
jnp
sbb
scas
lcall
xor
fldenv
sub
dec
and
xor
dec
jnp
pop
gs
xchg
jae
xor
sub
clc
and
in
dec
push
dec
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
gs
ja
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
or
gs
dec
pop
bound
add
ja
dec
dec
daa
add
icebp
push
or
adc
pushf
sbb
xor
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
dec
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
popf
out
mov
or
push
jne
les
pop
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
pop
leave
pushf
push
xchg
das
mov
aad
aad
xchg
jmp
jnp
inc
das
inc
or
inc
lcall
lds
in
ds
lret
ljmp
push
stc
and
pop
mov
and
test
test
sarl
and
pushf
xchg
cld
xchg
fcoml
lods
jne
imul
jmp
pop
mov
cmc
add
pushf
sbb
loop
nop
xchg
mov
jle
movq
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
in
and
daa
pop
repz
out
rorl
enter
pop
cmp
pop
sub
insb
jecxz
mov
shr
sarl
sarb
inc
test
into
pop
stos
aad
push
out
pop
ret
jne
xchg
jns
lret
or
test
and
push
pop
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
jl
stos
lds
jge
sub
cmc
sbb
std
fistpll
int
data16
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
sub
pop
test
jecxz
pop
mov
push
roll
fcompl
sahf
xchg
mov
inc
outsl
outsl
call
push
rcl
shlb
xor
iret
jae
mov
push
xchg
hlt
and
orl
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
sub
inc
in
lods
es
sub
sbb
test
lcall
daa
and
iret
mov
sbb
std
lea
ja
inc
in
scas
cmp
inc
cmpl
in
ds
inc
xorl
ret
fcoms
inc
out
addl
dec
fmuls
out
jns
push
pop
push
inc
fidivl
fidivrs
mov
ret
mov
outsl
clc
int3
fnsave
insb
repnz
xchg
sub
std
fadds
sbb
adc
rorb
orl
ffree
dec
aam
stc
lock
mov
push
stc
arpl
or
and
out
cmp
cmp
mov
ret
xchg
pop
and
add
add
sbb
mov
dec
sbb
push
mov
lcall
xchg
dec
pop
mov
js
inc
rcl
out
jno
cmp
pop
pop
xchg
into
popa
mov
repz
pop
push
rcll
jo
incb
xlat
insb
aad
insl
daa
shl
or
dec
pushf
dec
and
inc
inc
lods
push
mov
decl
lds
pop
inc
or
insl
mov
push
sahf
jle
and
lods
adc
xor
push
leave
ret
lret
movl
push
add
push
imul
dec
add
fsubrs
mov
orl
inc
clc
mov
cltd
data16
testl
mov
push
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
mov
inc
mov
xor
jmp
std
mov
sti
and
test
aas
mov
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
dec
inc
rcr
cmp
test
leave
inc
inc
decb
push
mov
outsl
and
das
and
sbb
imul
lcall
xchg
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
mov
inc
ficompl
int
xor
jb
fisttpll
cmp
lds
cmp
insb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
sbb
lret
xchg
mov
sbb
dec
lods
sub
pusha
cmc
sbbb
arpl
addr16
les
aaa
xlat
cs
daa
inc
rol
insb
sbb
out
jne
pop
xor
jmp
sbb
mov
add
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
and
lahf
lds
push
or
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
and
dec
pop
fmul
loop
inc
sarb
or
or
push
xchg
lods
out
cmp
out
and
xchg
mov
xchg
rorl
gs
inc
pushf
mov
jg
repz
jns
popf
addr16
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
orb
dec
mov
out
mov
shlb
xlat
push
int
sarl
ret
xchg
add
movl
or
mov
adc
add
aam
pop
rorl
ja
xchg
movsl
lock
pushf
mov
adc
adc
mov
out
loopne
mov
or
inc
jge
shlb
aam
adc
es
add
mov
add
mov
ficompl
sbb
enter
imul
fidivs
pop
aad
ljmp
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
pushf
sbb
and
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
xlat
js
jge
mov
dec
mov
adc
push
jmp
dec
mov
insb
sub
push
ficoml
adc
sahf
cli
test
xor
jne
neg
fisttpl
lds
lahf
lcall
pop
sbb
push
add
xchg
sarb
xor
mov
jp
add
cmp
lds
fwait
ds
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
das
adc
sbb
pushf
lcall
lret
jle
inc
outsl
ja
filds
push
int
lea
mov
mov
lods
sti
jae
jecxz
or
and
rolb
xchg
loope
or
aaa
xorl
sbb
sub
divb
dec
push
into
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
xchg
sbb
mov
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
std
lea
ja
inc
in
scas
mov
lea
push
lret
add
inc
fldt
cmp
push
sarl
mov
mov
add
subl
scas
push
fcomps
jne
insl
outsb
pop
cltd
mul
insl
test
fistpl
test
dec
fwait
jo
sub
repz
aad
jno
add
sarl
cli
repz
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
scas
loope
std
inc
into
cmpsb
iret
pop
call
leave
pusha
icebp
mov
fistpl
inc
lret
call
add
loop
dec
mov
pushf
sti
add
rolb
mov
cmp
sub
test
cmc
xor
movsb
sbb
pop
add
mov
mov
and
imul
xor
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
pushf
dec
and
iret
jo
push
rcll
insb
repnz
jno
pop
mov
cmpsl
mov
outsb
xor
mov
pop
outsl
loope
mov
dec
xor
sub
xchg
stos
inc
insl
push
pop
xchg
enter
inc
es
shlb
je
pop
xor
sahf
fcoms
jae
repz
xchg
das
jno
insb
loop
lcall
xchg
loop
xchg
adc
sbb
dec
mov
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
pop
mov
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
mov
pushf
mov
outsb
xor
ret
scas
popa
lods
fistl
dec
pop
mov
sub
push
jo
fsts
pop
inc
loopne
mov
jge
push
repz
inc
cmp
int
mov
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
mov
jno
jnp
inc
mov
mov
inc
out
jp
and
rorl
dec
aam
inc
pop
pop
and
xchg
dec
mov
sahf
shll
lods
das
cmpsb
rcr
cld
xor
cs
xabort
jg
scas
test
mov
push
sbb
dec
lock
mov
das
add
and
mov
into
pop
mov
imul
arpl
call
cld
pusha
and
jo
std
mov
xor
cmpsb
sbb
rorb
out
inc
mov
and
dec
mov
mul
push
mov
subl
cmp
jle
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
mov
nop
inc
mov
dec
movsb
xor
mov
cmpsb
xor
jb
fisttpll
cmp
push
add
aam
jecxz
sahf
sahf
xchg
sbb
js
sbbl
fnsave
add
jns
in
xor
or
mov
mov
fwait
inc
push
rol
lock
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
xor
out
mov
jns
or
clc
int3
pop
into
aaa
jg
enter
inc
push
int3
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
cmp
mov
sbb
jns
pop
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
push
sahf
jns
jecxz
fldenv
add
and
ja
in
jg,pn
shl
mov
fcomps
mov
rol
mov
lods
mov
mov
push
jb
inc
lcall
int3
xchg
xchg
test
push
inc
jg
jle
xor
dec
out
leave
cld
icebp
jg
or
adc
jo
imul
xlat
xor
hlt
inc
cld
cmp
pop
mov
divl
sar
negl
fisttpll
mov
add
adc
and
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
add
mov
sbb
lods
orb
xor
mov
arpl
mov
jg
cmp
push
push
mov
sub
jne
adc
call
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
subl
xchg
and
fs
sub
and
jecxz
ljmp
cmp
and
add
xor
xchg
mov
filds
orb
lods
mov
fs
push
dec
xor
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
pop
out
arpl
arpl
jmp
stc
jae
inc
ret
rolb
jecxz
imul
into
rorl
cmc
lahf
push
sti
cmpl
ret
dec
jbe
xchg
test
and
pop
pop
pop
sbb
or
cmpsl
loope
lret
cmp
xlat
enter
sub
pop
jo
sar
inc
inc
test
xor
add
pop
lock
jl
rcll
pushf
adc
push
dec
jl
ret
sahf
inc
jb
jle
mov
std
cli
jnp
inc
mov
cwtl
add
push
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
or
aas
fisttps
jnp
sahf
lods
xchg
loope
cwtl
ret
data16
push
xorb
xchg
mov
mov
cltd
jecxz
sbb
gs
std
aaa
sub
int
jne
les
cmpl
sbb
imul
ja
or
add
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
pop
dec
inc
sbb
je
ljmp
lds
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
jb
dec
pop
bound
add
ja
dec
add
movsb
andl
pop
lods
add
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
sbb
sub
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
rolb
decb
push
mov
cs
mov
mov
dec
mull
lret
sbb
inc
mov
rcrl
mov
aad
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
pushf
test
inc
cmp
cmp
lds
cltd
ds
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
cmc
les
dec
push
test
push
cmp
lock
lds
iret
lret
scas
enter
mov
arpl
adc
lds
inc
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
inc
xor
mov
add
dec
and
cmp
and
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
inc
and
nop
shrl
dec
popa
ret
ret
sbb
into
and
call
int3
mov
and
and
iret
push
mov
enter
sarl
stos
xor
sub
jae
in
dec
jg
sub
subl
fcmovb
sbb
pop
cmp
in
stc
insl
inc
inc
add
repz
sbbl
cmp
es
dec
xor
and
adc
mov
call
mov
mov
or
lahf
cltd
pop
adc
jg
xor
cmpb
je
test
loope
and
arpl
std
add
and
push
or
outsl
adcb
and
dec
push
and
cli
inc
ret
icebp
add
jns
fistpll
testl
cld
jg
inc
test
shr
xchg
push
hlt
lds
ret
xchg
mov
lcall
mov
mov
mov
or
inc
jge
shlb
aam
adc
fcoms
es
cmp
cmp
or
mov
xor
add
sbb
call
inc
inc
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
mov
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
repnz
xchg
mov
rcll
push
inc
or
int
sub
pushf
dec
ficoms
sbb
pop
adc
mov
insb
movsl
sub
push
mov
scas
iret
subl
imul
and
fwait
shll
adc
adc
xchg
jnp
addr16
mov
jge
dec
mov
int
or
inc
hlt
rcrb
mov
add
sbb
sbb
enter
int
and
fcmovbe
cmp
cmc
push
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
aas
in
and
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
in
int
mov
pop
loop
lods
ds
add
ljmp
arpl
and
daa
adc
nop
xchg
add
sub
push
mov
dec
push
in
int3
inc
push
cltd
mov
icebp
sub
cmc
sub
sbb
out
das
ja
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
out
inc
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
cli
jle
jo
mov
pop
jb
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
mov
jns
mov
xor
movl
call
int3
pop
sub
mov
aam
fisttpl
cmpsl
and
mov
push
lret
xchg
lea
xchg
rcr
jne
les
pop
int3
add
or
js
sbb
ds
lock
mov
aad
pop
mov
mov
cmp
mov
cmp
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
cmc
jl
das
dec
xor
mov
fwait
scas
fsubl
adc
push
rcl
ss
cmp
ja
mov
stc
in
loop
vaddsubps
mov
enter
lea
or
and
dec
mov
add
ja
jge
push
xchg
jb
sbb
mov
fiaddl
or
sub
lret
test
xchg
push
pop
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
jl
stos
lds
jge
sub
cmc
sbb
std
fistpll
int
data16
test
in
andb
cmpsb
lds
imul
and
popa
xchg
into
and
das
scas
int3
push
mov
pop
and
movsl
sub
add
addr16
cmp
xor
das
es
sbb
jp
inc
out
add
cwtl
inc
jge
pushf
jecxz
out
repnz
sub
divb
std
pusha
pmulhw
xlat
repz
mov
mov
mov
js
push
mov
or
es
mov
push
loop
xchg
ds
push
dec
mov
xchg
pop
and
mov
mov
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
sarb
xor
xchg
sub
pop
mov
adc
repz
xchg
mull
cmc
push
sbb
push
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
imul
inc
out
insl
push
andb
cmp
or
cmp
xchg
sub
popf
out
mov
or
push
jne
les
loopne
ret
ret
sahf
imul
add
dec
mov
xorl
lods
leave
stos
add
int
fdivp
xchg
mov
fsubrl
jbe
sbb
jmp
addr16
cmp
mov
bnd
neg
arpl
ret
ret
mov
imul
aas
mov
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
cmp
insb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
movsl
fists
outsl
addr16
call
xchg
cld
or
fnsave
lahf
jno
jmp
mov
aam
mov
enter
lea
or
nop
push
mov
test
sbb
jp
incb
mov
cmp
dec
int
jle
pop
mov
add
add
out
in
imul
sub
fwait
push
pop
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
jnp
sub
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
mov
ret
mov
mov
mov
lahf
loop
pop
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
cli
cltd
mov
std
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
sub
aam
fimull
dec
jne
fwait
and
sub
fsubrl
and
lods
cmc
movzbl
stos
aam
cmpsl
loope
popl
or
add
add
xchg
adc
mov
and
or
insb
int3
movsl
pushf
mov
pop
popf
xor
jmp
std
mov
sti
and
aas
lahf
es
dec
es
test
insl
push
xor
fsubr
mov
jg
popf
pop
adc
push
sub
jnp
or
ret
add
neg
jmp
out
pop
out
scas
xchg
xor
and
adc
sbb
dec
jmp
adc
mov
cmp
pushw
popf
mov
dec
adc
xor
test
jnp
and
adc
cli
sub
and
movb
mov
jmp
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
int
cld
jb
scas
repz
cmp
jl
xor
hlt
jbe
aas
dec
call
cld
sub
divb
std
lods
dec
jae
fdivrp
scas
cli
jb
ret
repnz
jns
outsb
ret
cmpb
repnz
dec
inc
outsb
or
aaa
xorl
xchg
jle
push
insl
xchg
ret
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
fdivrs
cmpsl
movl
aad
xchg
sub
pushf
ret
pop
mov
mov
sbb
lea
ja
inc
in
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
sub
cmpxchg
out
dec
aam
pop
mov
scas
pxor
cld
repz
out
das
in
rorl
mov
fsubl
cmc
loop
xchg
mov
into
pop
xor
inc
fdivrp
xor
scas
adc
xabort
jle
scas
xor
adc
sub
or
stos
add
inc
test
jle
jmp
adcl
mov
cmp
decl
add
inc
sbb
clc
xchg
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
enter
stos
inc
repnz
jnp
push
xchg
jle
jmp
cmp
mov
aam
int3
imul
into
mov
pusha
mov
shl
xchg
cmp
push
imul
test
adc
sbb
add
and
xchg
lods
push
cmp
or
pushw
push
out
push
mov
lods
lds
push
ret
adc
std
inc
outsl
ret
mov
adc
into
aas
jg
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
into
push
dec
sbbb
xor
push
repnz
and
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
mov
pop
imul
fsubs
jp
rolb
cmp
dec
dec
lret
movsw
cwtl
push
push
adc
jae
xor
stos
push
aas
mov
or
mov
std
push
or
sbb
js
adc
jno
js,pt
xor
and
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
roll
enter
pop
test
cmpsb
jecxz
mov
aaa
push
addr16
les
pop
or
mov
pop
daa
mov
lcall
mov
cmp
mov
clc
mov
xor
mov
adc
inc
push
adc
les
orl
mov
push
pop
jbe
fwait
ds
push
inc
in
stos
mov
push
or
jmp
lret
loope
lret
cmp
ret
push
cmpsl
xchg
fistpl
das
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
mov
movsb
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
decl
jae
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
es
or
dec
lock
out
mov
std
adc
xlat
jge
clc
and
xchg
adc
in
dec
push
dec
xchg
test
xchg
fimuls
jnp
cmpb
push
adc
int
mov
sbb
xchg
xor
mov
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
push
std
and
shrb
fsubl
mov
shlb
sub
xchg
stos
mov
sub
pop
push
fcoml
inc
jb
sahf
pop
mov
mov
inc
imul
jecxz
fnstcw
ds
pop
inc
sub
mov
xchg
xor
sbb
call
xchg
scas
out
jp
mov
lahf
dec
sahf
inc
mov
stos
mov
mov
cmc
into
add
and
rolb
push
push
roll
aaa
push
je
stos
popa
and
adc
inc
lret
inc
inc
xchg
adc
xchg
stos
divb
out
les
loopne
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
add
into
stc
push
xchg
movsb
mov
pushf
dec
ficomps
adc
and
ret
out
mov
stc
rolb
je
fistl
jae
lret
add
es
cmp
mov
mov
xor
add
sbb
call
inc
inc
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
int
imul
imul
and
cmp
jle
mov
cltd
ljmp
cmp
mov
inc
cmp
inc
pop
adc
movsl
mov
test
int3
ja
fs
ds
mov
mov
inc
test
lret
sbb
inc
mov
rcrl
pop
in
mov
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
or
mov
test
inc
cmp
cmp
push
add
fstpl
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
mov
or
pop
dec
dec
pushf
mov
outsl
fldl
mov
outsb
ret
lahf
repnz
sub
ja
dec
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
sub
ret
pop
pop
xor
sbb
test
lcall
inc
mov
dec
repz
and
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
ficoml
ret
adc
fsub
ja
push
push
cmpsb
ret
dec
adc
mov
stos
push
repz
dec
jne
rcll
leave
ficoml
mov
inc
inc
pushf
xor
mov
push
lock
and
in
xor
loopne
stc
mov
inc
mov
jae
in
pextrw
fstl
fidivl
test
mov
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
mov
jp
xchg
pop
and
arpl
mul
loopne
ret
loopne
pmullw
dec
sbb
lret
jecxz
and
je
mov
and
insb
jne
inc
into
push
mov
repnz
ret
outsb
xor
and
es
imul
movsl
inc
dec
push
ss
mulb
outsb
scas
imul
inc
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
dec
scas
std
stc
dec
and
add
and
cmp
cwtl
add
push
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
data16
mov
add
andb
push
subl
fsubr
mov
jge
dec
pop
fists
enter
not
xor
dec
push
iret
inc
fcomip
cmp
test
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cmp
popf
cwtl
or
lds
nop
lds
clc
mov
inc
lcall
jle
dec
xor
ljmp
repnz
bound
sub
sub
dec
pop
fsub
mov
rcrb
sbb
pop
lock
dec
cwtl
scas
pop
jbe
lods
js
xchg
aad
mov
inc
inc
push
pushf
xor
jmp
inc
movl
xchg
dec
xlat
fcompl
repz
mov
inc
repz
sti
adc
nop
lahf
fistpl
push
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
or
add
cld
add
push
adc
mov
xor
push
stos
or
mov
mov
insb
aad
dec
into
push
mov
nop
cmpsb
rolb
test
push
stos
lea
push
push
lea
fildll
loopne
aas
adc
dec
inc
sub
mov
dec
push
mov
in
push
jg
shl
mov
jp
ja
shlb
lods
pop
jno
lds
imul
adc
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
lods
add
and
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
cmp
rolb
push
push
shll
inc
inc
and
dec
stos
jno
mov
push
add
lods
repnz
dec
push
sbb
ret
push
cwtl
lahf
out
sub
push
ss
xor
movsb
sbb
daa
sub
sahf
jbe
push
push
jle
sbb
stos
xchg
scas
mov
lcall
ficoml
dec
lods
pop
ret
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
mov
dec
movsl
xchg
mov
fcompl
aad
xor
xor
mov
bound
hlt
xchg
loop
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
leave
or
push
jge
dec
jnp
in
mov
dec
cmp
insb
mov
mov
lods
dec
fsts
pop
pop
mov
arpl
jnp
stc
adc
mov
popf
arpl
cmp
pop
add
mov
inc
rol
add
mov
sbb
jb
xor
xor
call
rcrl
mov
into
fwait
cmp
push
dec
sbb
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
std
lea
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
sbb
loope
xor
mov
aad
push
cmpsb
lcall
mov
push
iret
sbb
dec
mov
stos
movsl
arpl
mov
aam
sbb
fcompl
scas
fcmovbe
iret
push
inc
cmp
cmc
and
adc
jmp
and
fistl
cmp
stc
inc
push
cmp
push
mov
or
in
jg
fsubs
and
pop
jae
lcall
std
cwtl
shlb
sbb
add
jmp
lret
push
sub
or
inc
pop
cmp
shll
fmuls
fstps
adc
sbb
mov
adc
inc
ret
sbb
xor
das
pop
pushw
pop
leave
jb
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
int
data16
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
insb
int3
push
test
cmp
iret
jns
dec
sbb
cltd
xor
jo
mov
inc
dec
out
xchg
js
popa
sbb
add
ljmp
repnz
sti
scas
into
mov
out
repnz
ja
ja
xor
je
fidivl
pop
push
sub
inc
fdivl
xor
fwait
mov
mov
xor
add
test
fcomps
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
movsl
push
jno
pop
cmp
mov
outsb
out
movsb
shll
lock
loope
pop
pop
mov
addl
mov
sub
sub
rclb
jb
lods
mov
dec
push
cmc
aas
test
fs
in
mov
jmp
popa
sti
out
lret
adc
mov
xor
cmpsb
mov
shll
push
inc
jge
outsl
ja
fucomip
js
mov
in
jp
mov
loopne
js
lock
loope
xlat
ds
test
ss
push
shll
or
lds
jbe
sub
add
sbb
dec
int3
ret
xchg
test
aam
subl
and
repz
jmp
jo
and
daa
adc
int3
dec
sbb
dec
fldcw
push
ja
addr16
inc
aas
push
inc
push
fwait
xchg
push
add
xchg
inc
pusha
pop
stc
rolb
je
fistl
jae
lret
add
es
cmp
mov
mov
xor
add
sbb
call
inc
inc
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
push
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttps
into
pop
push
sbbl
shll
or
add
in
data16
imul
out
in
pop
inc
cmpsb
jg
stos
addr16
push
test
sahf
pop
test
data16
sub
gs
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
adc
repnz
jns
lds
nop
lds
mov
in
mov
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
outsb
lret
jbe
lahf
and
push
dec
call
xor
aas
scas
xchg
and
test
xchg
stc
and
sub
shrb
stc
dec
dec
sub
lret
jl
das
inc
iret
shlb
push
cmp
test
xlat
jae
je
repz
push
repz
sbb
fdivrl
add
xor
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
mov
sbbb
xor
push
repnz
and
mov
test
add
in
mov
sbb
jl
cltd
jo
lock
insl
leave
cmc
cld
or
jmp
pop
push
mov
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
subb
and
adc
inc
ds
mov
inc
inc
popa
sub
add
in
es
out
insl
dec
mov
sub
data16
mov
pop
xchg
pop
xor
xor
jae
inc
aaa
mov
mov
test
xchg
jo
rcl
mov
aam
clc
xor
mov
mov
mov
adc
stc
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
aas
in
and
daa
pop
repz
out
icebp
mov
xchg
in
test
add
push
cmp
daa
outsb
or
scas
or
and
or
call
or
int
push
dec
add
or
cmc
and
lods
mov
cmp
and
jl
jp
push
fs
jecxz
nop
pcmpeqb
xlat
inc
aad
enter
pop
aas
jle
lahf
dec
and
push
in
rclb
cli
sub
mov
adc
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
sbb
jle
jbe
lods
jae
cltd
ret
push
xlat
shlb
repz
cmp
pop
dec
hlt
lds
mov
and
cs
bound
flds
lock
jl
and
loop
and
xchg
xor
sub
push
mov
sbb
sbb
xor
dec
in
out
movsl
push
je
xchg
mov
mov
faddl
jp
or
mov
cmp
and
dec
sbb
xchg
mov
sbb
jns
pop
mov
test
add
inc
sbb
lock
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
and
adc
inc
cmp
mov
pop
incb
shl
pop
pop
add
out
mov
xchg
mov
sub
dec
xchg
aam
jne
insl
jb
inc
fisubs
jbe
call
xchg
inc
mov
jb
jg
iret
fs
das
jo
sbb
je
jge
xchg
repz
pop
lods
fs
lcall
jmp
or
xor
rcll
out
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
mov
sbb
push
push
cwtl
cmpb
xor
les
jle
insl
loopne
mov
push
cmc
or
mov
jecxz
shll
inc
cmp
cwtl
pop
push
jno
fst
outsl
mov
imul
fstl
adc
repnz
sahf
scas
imul
negb
add
fldt
jge
ss
popa
jbe
mov
int
test
inc
sbb
adc
push
xor
fwait
xchg
dec
jns
enter
pop
push
ficoml
in
mov
mov
xchg
xchg
daa
sub
cld
mov
scas
pxor
ret
sti
mov
subb
pop
das
dec
iret
shl
idivl
outsl
outsl
and
lahf
stos
cwtl
shrb
sti
jnp
out
scas
mov
pop
scas
insb
lock
stc
inc
iret
outsb
iret
arpl
out
sbbl
mov
or
sbb
imul
inc
das
pop
clc
sbb
jp
out
outsb
jp
add
cltd
rcrl
movsb
arpl
sbb
neg
out
push
xor
push
push
and
leave
arpl
mov
sahf
add
icebp
test
xor
push
pop
insl
sub
les
test
aaa
pop
push
lods
xchg
pop
pop
lret
inc
fiadds
jo
mov
lcall
adcl
cmp
cli
xchg
add
jl
sbb
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
fidivrl
jo
mov
pop
jb
add
mov
out
push
scas
shrl
xor
sub
add
lea
jp
lods
addr16
push
sbb
push
push
mov
dec
loop
add
xchg
nop
pushf
inc
cld
xor
inc
add
or
lds
cvtps2pd
xchg
add
in
dec
addr16
lahf
jg
dec
push
sahf
sub
fwait
mov
sbb
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
iret
lret
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
mov
push
adc
repnz
arpl
lds
sbb
insb
or
out
cs
out
mov
mull
inc
pop
lcall
das
mov
in
mov
push
sub
int3
xor
repz
xchg
enter
fnstenv
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
jg
xor
cmpb
je
test
loope
and
jecxz
int
imul
imul
test
cs
call
add
nop
out
xor
push
cmp
or
mov
outsl
mov
scas
mov
mov
aaa
pop
jb
sbb
stos
insl
lods
mov
mov
pop
push
ljmp
mov
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
jnp
add
fisttpl
add
jp
add
cmp
lds
sbb
insb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
sbb
push
cmpsl
sahf
loope
dec
iret
shl
idivl
outsl
outsl
call
cmpl
out
scas
mov
sub
adc
mov
outsb
out
arpl
data16
hlt
pop
sub
pushf
ret
rcrb
or
or
sbbb
iret
pop
mov
adc
sbb
xchg
scas
arpl
mov
and
iret
into
ret
adc
lods
aad
ret
ficoms
dec
mov
adc
push
imul
ljmp
les
sbb
mov
mov
aaa
pop
push
lods
mov
lret
inc
fisubrs
jnp
lods
mov
lcall
adcl
cmp
cli
xchg
add
popf
ficompl
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
mov
mov
pop
jb
add
xchg
cmpsl
or
mov
ficomps
inc
mov
jp
inc
cwtl
les
sbb
stos
mov
in
cli
jnp
sbb
scas
sbb
fbstp
fldl
mov
mov
icebp
into
add
les
xor
fs
inc
data16
or
nop
and
setne
sbb
cmpsl
add
adc
push
sbb
xchg
xchg
jmp
popa
shrl
push
cmp
insl
or
jmp
add
das
mov
jne
ss
dec
and
jne
mov
lods
push
mov
hlt
rol
ss
and
rorl
pop
lea
mov
jae
cmpsl
push
nop
inc
and
scas
fwait
push
daa
je
sbb
xchg
in
imul
addr16
insl
pop
fwait
enter
lods
xchg
cmpl
push
xchg
push
pop
mov
cmpsb
in
mov
insl
fisttps
push
push
imul
ljmp
adc
add
out
push
out
xor
test
inc
mov
ror
jmp
imul
stos
xor
test
jge
out
js
jg
std
or
mov
lret
or
out
inc
rcll
sbb
mov
add
inc
pushf
push
fxch
cli
sarb
inc
inc
dec
pop
dec
rcrl
jae
add
inc
mov
popf
ljmp
and
pop
cld
aas
pop
dec
dec
out
cmc
dec
inc
scas
leave
cmpl
lret
mov
sbb
ss
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
or
nop
ret
cld
xor
lods
fisttpl
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
cs
icebp
in
mov
sbb
mov
cwtl
shll
or
add
jle
adc
pop
inc
popa
sub
adc
and
in
inc
inc
xchg
adc
inc
mov
fstps
fnsetpm(287
pop
clc
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
and
pushw
pop
leave
jae
pop
jbe
mov
add
out
and
fdivp
idivl
mov
ret
scas
sbb
repz
dec
inc
sub
sub
or
je
sbb
mov
sub
hlt
mov
scas
push
and
sub
es
sahf
pop
and
sub
and
test
xor
popa
cmp
enter
shrb
jno
mov
jle
dec
jns
dec
mov
dec
push
pop
aad
xchg
inc
add
pop
aad
icebp
out
in
lds
xlat
xchg
jle
icebp
xor
loopne
je
fdivs
aaa
imul
lret
sub
js
test
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
mov
add
xchg
adc
dec
and
xchg
gs
pop
test
sti
adc
pop
jg
test
fwait
pop
lea
call
into
loope
and
dec
dec
mov
inc
xchg
leave
sbb
inc
idivb
adc
movl
lods
xor
push
add
jno
lds
movsb
sub
xchg
ljmp
cmpsl
xor
rorl
movsb
sbb
outsl
jl
mov
subl
das
adc
movsb
xchg
test
clc
sub
jne
neg
arpl
inc
ret
mov
imul
aas
mov
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
cmp
insb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
mov
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
lods
xlat
lret
cwtl
shll
or
add
movsl
or
andb
nop
and
xor
pop
sbb
mov
je
inc
push
addr16
and
lds
add
push
jns
sahf
rcrb
and
cmpsb
je
or
icebp
aaa
mov
sbb
jge
les
movsl
xchg
pop
dec
add
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
push
add
xchg
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
sub
repz
inc
mov
sbb
mov
and
or
xlat
or
add
xor
iret
shl
aaa
jge
outsl
arpl
fcmovbe
xor
lret
scas
loop
cmp
out
cmpl
pop
test
js
fdivrl
sti
icebp
push
addr16
sbb
inc
jbe
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
and
rclb
jns
pop
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
sub
dec
push
fsub
ja
in
jg,pn
shl
je
pop
xchg
and
insl
outsb
pop
cltd
mul
int
adc
jmp
scas
ret
mov
fucomip
bnd
out
test
xor
arpl
das
push
divl
mov
imul
outsl
and
lock
xchg
xchg
dec
push
fidivrl
jp
lcall
pop
aad
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
es
mov
push
mov
dec
xchg
leave
sub
ja
sbb
jecxz
ficomps
push
sahf
jg
test
les
insl
xchg
cmpsb
and
mov
and
jns
inc
inc
test
pop
mov
cli
test
xchg
fcmovne
aad
adc
sub
hlt
shr
rcrl
inc
xor
mov
bound
hlt
xchg
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
loope
call
fbstp
xor
mov
xor
enter
pop
int3
aaa
adc
psraw
push
push
and
test
xchg
ja
test
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
xor
in
scas
mov
lea
push
lret
add
pop
mov
fsubs
cmp
bound
in
ss
stos
xor
mov
inc
jne
ret
xchg
js
addr16
call
in
cmpsb
aas
stos
shrb
sub
btr
addr16
test
lret
xor
xor
mov
fildl
in
inc
or
push
add
pop
icebp
addr16
xchg
fnsave
xor
mov
sti
in
popa
insl
in
push
mov
aaa
dec
mov
cmp
cmpb
xchg
sub
cs
dec
popa
pop
adc
jg
pop
adc
call
ret
loopne
inc
pop
je
jmp
clc
es
dec
lahf
repnz
addr16
movsb
inc
and
mov
push
push
les
xor
std
scas
scas
fldt
fisubrl
lock
cs
xchg
vpmuludq
xor
sbb
cmp
das
movsl
leave
je
sarl
inc
out
sti
add
jo
add
lret
push
xchg
shl
and
or
shlb
or
cmp
dec
lods
cmc
xor
nop
fidivs
lds
xchg
adc
mov
jne
mov
orb
es
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
in
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
push
adc
xor
popf
sbb
inc
addr16
mov
mov
andl
adc
and
xor
dec
movsl
arpl
test
lods
mov
movsl
int
mov
and
mov
fsubs
js
push
outsl
sbb
ja
in
subl
dec
jle
inc
push
mov
test
or
lret
lds
mov
lahf
mov
inc
call
pop
aad
bound
lds
inc
repz
cmp
jl
fadd
xor
hlt
ja
jge
dec
push
lret
scas
out
xor
outsl
add
jb
jmp
push
jnp
enter
mov
inc
gs
sarb
cltd
pop
push
bound
and
ljmp
mov
ficoms
sub
xchg
mov
pop
daa
popl
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
cld
mov
shl
jmp
scas
lods
pop
imul
push
xlat
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
lock
mov
data16
mov
in
in
xchg
setge
mov
dec
scas
hlt
mov
jne
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
dec
mov
test
stc
mov
movsl
inc
push
mov
or
xchg
and
aad
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
push
push
push
push
adc
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
jg
aaa
sbbl
jb
cli
mov
mov
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
lds
lods
adc
bound
test
pop
mov
sub
mov
dec
lcall
pop
test
lods
cmp
dec
inc
leave
sub
scas
inc
fwait
lds
sub
repnz
inc
std
rorb
mov
in
sbb
push
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
sub
add
test
add
sbb
add
andb
js
sbb
mov
mov
or
push
jne
les
loopne
ret
ret
push
jmp
iret
lahf
jmp
mov
fwait
jl
jo
jecxz
adc
sbb
outsl
aam
sub
mov
mov
cltd
mov
insl
aad
popa
ficomps
sbb
pop
or
in
inc
push
mov
jle
jmp
movb
mov
pop
cmpsl
fxch
push
lret
pop
cmpsl
cltd
adc
inc
stos
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
lods
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
xchg
mov
xchg
and
daa
mov
xor
out
mov
sbb
cmp
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
xchg
dec
and
aad
les
lcall
sbb
std
fistpll
int
data16
test
in
andb
sbb
mov
mov
and
mov
pop
push
xchg
xchg
push
es
lods
shr
cltd
push
xor
xchg
mov
xor
arpl
fwait
xor
repz
out
cltd
scas
push
dec
dec
lock
mov
dec
xchg
mov
pushl
cmc
jp
inc
sub
ja
popf
lods
push
mov
loopne,pn
js
lock
fwait
mov
out
lahf
stc
cwtl
roll
or
xorl
inc
mov
fsubr
push
adc
or
pop
das
idivl
mov
mov
mov
das
orb
aam
clc
mov
std
cmp
pop
movl
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
subb
clc
pop
enter
int3
inc
push
cltd
icebp
testb
in
mov
movsb
shl
sbb
test
add
into
pop
into
fcmovbe
dec
inc
sub
sub
add
jl
dec
add
insb
lret
sub
out
cmp
test
lret
inc
stos
rclb
pop
mov
cwtl
xor
test
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
in
and
daa
jbe
jg
sti
std
mov
sti
and
test
mov
cmp
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
aaa
or
mov
cmp
mov
sub
jb
sbb
inc
lret
push
ficomps
sbb
stos
subl
pusha
mov
movsb
mov
push
gs
orl
inc
stos
sbb
fildl
add
popl
gs
dec
mov
sti
push
dec
mov
int
or
inc
hlt
rcrb
mov
add
sbb
sbb
enter
int
and
fcmovbe
cmp
cmc
push
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
aas
in
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
out
mov
push
sbb
and
sbb
inc
rcrl
mov
jb
test
and
negl
sbb
push
negl
call
add
and
jl
ret
mov
jbe
xor
xchg
das
dec
sbb
fwait
dec
cmp
call
ss
int
inc
mov
fwait
jae
imul
ror
inc
lret
push
mov
mov
add
data16
scas
pop
xrelease
or
mov
in
mov
push
lea
in
cmpsb
lds
test
jno
mov
xchg
jo
andl
cld
xor
pop
mov
imul
lods
cmc
fdivrs
mov
stos
xor
test
jge
jmp
data16
enter
push
movsl
int3
adc
jp
gs
push
cltd
or
bound
and
ljmp
mov
ficoms
sub
xchg
mov
pop
daa
popl
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
mov
iret
push
nop
stos
fcoml
xchg
dec
push
dec
jg
shl
mov
cmpsb
dec
sub
scas
push
mov
rclb
push
jb
sahf
pop
and
xchg
xchg
test
xor
outsl
inc
mov
mulb
cwtl
pusha
or
adc
jo
imul
call
xchg
scas
out
in
cmp
out
xchg
mov
dec
add
repnz
fwait
rcr
ret
jl
pop
adc
lds
aas
lret
mov
rcll
mov
sub
or
lods
lea
insl
loopne
mov
jp
jl
cmp
clc
jp
add
cltd
sub
adc
jae
add
lods
cmpsb
sbbb
fs
in
push
mov
call
imul
dec
and
outsb
and
bound
and
adc
ljmp
adc
or
push
adcb
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
fs
add
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
push
add
pop
inc
mov
jno
pop
icebp
fs
lcall
dec
fsts
pop
pop
mov
arpl
jle
scas
pusha
mov
arpl
lahf
cli
cwtl
add
test
add
verw
xchg
xor
sbb
xor
imul
and
divl
add
not
cmp
fistl
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
pop
adc
repz
and
mov
test
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
pop
subb
adc
mov
mov
divl
loop
scas
shlb
dec
rorb
push
lret
ret
mov
sbb
out
js
fidivs
jnp
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
gs
push
aas
fwait
lret
in
mov
mov
or
mov
add
notb
mov
dec
jb
xor
xchg
mov
fldpi
mov
push
and
movsb
xor
inc
rcll
or
mov
or
and
shr
xor
stc
push
mov
push
cmp
mov
jmp
cmp
mull
mov
insl
in
popa
ficomps
sbb
stos
adcl
ljmp
fwait
lcall
dec
movsl
cmp
and
into
orl
sub
rorl
dec
dec
pop
jb
xor
or
jnp
mov
dec
scas
std
stc
in
adc
cli
jnp
inc
mov
cwtl
add
push
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
adc
inc
mov
fstps
pop
in
clc
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
cs
pushw
pop
leave
inc
push
pushf
cmpb
adc
fldenv
jb
inc
and
stc
inc
repnz
inc
ljmp
sub
dec
mov
sub
mov
imul
rol
fs
xchg
repz
dec
popf
aas
stos
shrb
mov
das
mov
mov
cmp
loop
repz
adc
sbb
push
mov
dec
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
jae
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
xor
sbbb
jo
jp
dec
movsb
xlat
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
cli
xchg
arpl
lds
adc
mov
adc
mov
push
add
adc
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
mov
dec
and
mov
inc
lock
outsl
push
fwait
imul
fs
pop
and
xchg
dec
cld
mov
iret
rorl
mov
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
adc
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
test
addr16
movsl
jne
pushf
jnp
and
movsl
adc
push
enter
or
ljmp
jmp
das
sub
sahf
jns
jmp
add
push
repnz
pop
xchg
je
sub
sub
and
int
jae
cmp
in
scas
aas
test
pop
jmp
jns
out
jno
insb
out
pop
mov
scas
pxor
js
inc
int3
cmpsl
dec
sbb
lock
xchg
jmp
pop
int3
inc
dec
mov
jp
cli
aad
xchg
inc
add
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
sbb
pop
sub
js
test
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
leave
jl
adc
mov
mov
add
daa
insb
xor
mov
cmpsb
ret
xchg
xchg
push
xchg
ret
push
inc
push
mov
pop
or
cmc
cli
sbb
test
lret
sub
mov
lods
lret
dec
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
dec
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
mov
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
push
xor
push
cmp
push
inc
jecxz
or
push
or
orb
icebp
dec
inc
add
mov
jecxz
sbb
dec
dec
and
and
mov
insb
movsl
sub
cmpl
fs
mov
dec
jno
jecxz
nop
std
pop
mov
inc
inc
test
jb
add
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
mov
jecxz
sahf
les
pushf
jne
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
adc
fdivrl
jl
aas
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
ret
nop
and
push
xchg
in
lcall
inc
insb
je
out
movsl
pop
mov
and
or
inc
ret
in
cmp
movsl
cltd
lret
gs
rcrb
and
test
cmpsb
or
icebp
aaa
mov
sbb
jge
les
lods
xchg
pop
dec
add
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
sti
mov
sub
mov
mov
push
iret
loopne
xchg
mov
cltd
mov
xchg
cmp
shrb
std
and
add
lock
scas
push
mov
add
in
and
cltd
fidivrs
mov
out
imul
repz
xchg
push
mov
pop
cmpsl
lock
cmc
outsl
fwait
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
test
or
aas
out
mov
loopne
arpl
dec
jns
ds
mov
dec
cmp
inc
and
or
push
add
sbb
es
call
xchg
fldl
xchg
shl
movsl
rcll
in
movsl
push
jno
lock
dec
push
inc
aas
mov
mov
insl
aam
lods
push
xchg
test
mov
movsb
in
jg,pn
cmp
imul
out
fldcw
dec
xorl
mov
push
jnp
rol
lahf
inc
outsl
jge
scas
fcmovnb
js
xchg
xor
fwait
leave
movsb
mov
xchg
push
inc
scas
pop
out
cld
jb
mov
lock
cmp
mov
loopne
testw
jno
mov
ljmp
fists
jecxz
cmp
aas
ja
dec
int3
and
movsb
clc
add
pop
int
adc
adc
and
push
inc
lret
pop
inc
add
fbld
mov
dec
cli
xor
call
lds
adc
and
add
add
xchg
ret
inc
push
jno
ret
in
adc
jns
movsl
pop
pop
dec
test
aad
fisttps
or
in
dec
and
or
fnstsw
sub
sub
mov
jp
add
cmp
push
inc
je
ret
sahf
sahf
xchg
sbb
js
adc
cmpsb
inc
fwait
leave
xchg
jl
andl
imul
push
fwait
adc
add
sahf
xchg
mov
push
xchg
insl
mov
sub
stos
dec
sub
pushf
xchg
push
bound
cs
stc
pop
std
out
or
push
out
fldenv
inc
and
mov
pushf
fldl
icebp
imul
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
clc
sti
jae
ljmp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
mov
inc
sub
int3
adc
jecxz
dec
bound
jg
shl
mov
cmpsb
dec
mov
test
pop
cltd
enter
lods
mov
mov
push
lea
test
sub
cmpxchg
out
jno
insb
out
or
frstor
or
leave
ret
icebp
loopne
push
sbbl
ror
or
pop
inc
mov
push
enter
test
leave
push
fidivrl
jp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
or
push
jne
les
loopne
ret
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
lods
pop
jle
sbb
sahf
mov
push
aad
or
push
pop
or
lea
mov
push
jno
fildll
push
bound
mov
aam
push
outsl
sbb
jg,pn
shl
je
gs
nop
push
loope
leave
insl
dec
mov
jle
int3
cmp
lret
shrl
sti
popa
jmp
inc
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
hlt
and
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
int3
xor
cmpb
je
test
jle
or
mov
popf
add
fsubr
pop
mov
sahf
dec
dec
add
inc
repz
cmpsb
push
stos
xor
jp
xchg
push
sarl
iret
fucomip
cmc
and
pop
ret
xchg
push
pop
stos
gs
jl
loop
je
or
lods
push
pop
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fiadds
je
movl
sti
stc
cli
in
test
or
test
sti
mov
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
movsl
out
cmp
movsl
mov
inc
sub
subb
jg
out
daa
dec
lock
jge
inc
xor
xchg
test
repz
and
iret
cmp
mov
jl
xor
int3
xor
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
dec
sbb
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
pop
jne
pop
pop
aam
add
push
scas
push
and
sub
popf
mov
sahf
pop
and
xchg
xchg
test
push
inc
jg
jle
xor
rcll
pop
inc
or
cltd
push
push
mov
sti
adc
dec
notb
add
js
xlat
mul
jle
mov
jne
mov
nop
fs
cld
xor
or
and
or
mov
add
in
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
add
sbb
int3
sub
push
or
hlt
adcb
pop
imul
fisubs
test
push
lcall
loop
orl
cltd
outsl
aad
sbb
bound
push
xchg
in
inc
mov
test
sub
popa
or
xchg
xchg
iret
lret
lret
lds
fsubr
jb
sbb
dec
jo
shlb
loop
mov
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
cmp
jl
jne
mov
mov
dec
sbb
mov
mov
int
gs
xchg
lret
cwtl
incb
fdivrl
pop
sbb
push
adc
rcrl
jl
fbstp
lds
add
ret
into
inc
lahf
out
loop
mov
adc
aas
loop
mov
push
xchg
inc
cmpsl
mov
nop
jg
sbb
mov
aam
mov
push
aaa
pop
inc
std
lods
cmp
in
mov
pop
les
xchg
stc
cli
in
test
or
test
pop
mov
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
sbb
rcrl
clc
icebp
jle
scas
pxor
cld
repz
scas
dec
sbb
hlt
repz
insl
das
dec
iret
shl
idivl
sbb
cwtl
jecxz
scas
loope
repz
loopne
js
cs
jae
pushf
xor
xor
mov
push
cmpsb
rolb
ss
push
xorl
pop
je
dec
sub
xchg
vsqrtss
dec
adc
fwait
jge
lret
les
pop
mov
push
jg
data16
inc
movsl
cltd
lret
jmp
mov
push
cmp
roll
xor
jb
cli
mov
mov
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
les
lods
mov
in
bound
test
cli
mov
sub
mov
inc
fimull
jmp
in
int3
mov
adc
mov
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
nop
out
ud0
lock
outsl
xor
ljmp
lea
mov
aas
pop
adc
popa
sahf
scas
and
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
shrl
push
cmp
lea
or
loope
aam
sub
insb
push
sub
push
mov
dec
push
in
int3
inc
push
cltd
push
pop
lods
push
fcoms
adc
and
ror
mov
in
shl
fwait
aad
lahf
in
loope
ret
insl
dec
mov
jne
xor
mov
jnp
push
xchg
jle
jmp
cmp
jb
lods
xchg
mov
es
inc
rol
mov
lret
js
popf
scas
test
lret
aas
ja
xor
js
sahf
add
and
es
fidivrs
jo
rorl
push
fsubrs
test
movsb
fidivl
pop
push
sub
inc
fsubl
xor
fwait
mov
mov
xor
add
test
fcomps
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
in
mov
lock
ljmp
arpl
inc
jle
sbb
shll
shlb
lock
stc
lret
xchg
jp
inc
sbb
dec
stos
lret
xchg
ret
repz
add
xchg
arpl
pop
outsb
push
roll
fcoms
push
xor
xchg
insl
mov
mov
mov
test
dec
lods
jge
insb
ss
jnp
xchg
add
movsb
fisttps
mov
mov
fidivrl
jo
mov
pop
jb
add
dec
sbb
add
or
push
mov
out
pop
int
inc
mov
jns
mov
xor
movl
call
lock
cmc
lds
mov
sbb
mov
loope
insl
or
ljmp
pop
mov
aam
push
dec
add
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
fmull
jnp
inc
movsl
lret
and
shrl
rclb
jg
inc
in
jmp
popf
shl
or
testb
mov
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
jnp
adc
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
enter
pop
inc
cltd
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
xor
adc
adc
bound
or
out
sbb
xchg
xchg
jmp
fbld
inc
mov
sti
jae
fildll
jmp
decb
aad
push
fisubrs
cltd
mov
insl
aad
insl
ficomps
fldcw
stos
rcll
push
mov
mov
loop
jecxz
cld
sub
cmc
call
or
je
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
int3
scas
inc
fs
stos
popf
sub
rorl
sarb
add
mov
out
movsl
pop
push
outsl
ja
call
test
loope
dec
popf
pusha
es
add
jp
js
fldl
jle
fildll
inc
test
ss
bound
inc
sbb
mov
push
and
popl
pop
inc
cmpsb
jg
je
mov
call
inc
mov
jae
mov
repz
fists
addb
rcrb
hlt
das
lock
mov
mov
fs
icebp
mov
movsb
lds
nop
lds
push
push
enter
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
enter
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
mov
cmp
push
xor
lea
cmp
aas
test
fildl
dec
jo
ret
arpl
lds
push
jle
xor
mov
fwait
xorl
ret
mov
mov
daa
icebp
stc
mov
xor
insl
movsl
imul
test
push
inc
stos
xchg
scas
xchg
adc
push
mov
inc
int3
jno
mov
pop
imul
pop
out
push
fsubl
ja
in
add
shlb
je
sub
daa
jne
sahf
inc
mov
ss
rsqrtps
ret
mov
sbb
out
js
fidivrs
jnp
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
jg
xor
cmpb
je
test
loope
and
arpl
popf
add
and
push
xchg
insl
imul
pop
test
lods
mov
rcr
cmpsl
mov
std
xor
cmpsl
jecxz
jns
cmc
mov
cwtl
stc
add
stos
cmc
pushw
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
fidivrl
sub
mov
mov
dec
cmpsl
mov
push
es
dec
and
mov
lahf
scas
aaa
xchg
mov
mov
fs
lahf
callw
cmp
das
push
roll
scas
inc
or
or
jp
xor
mov
jge
dec
xchg
out
dec
mov
fcoml
mov
mov
jg
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
add
mov
cmp
inc
and
xor
les
fidivrs
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
rorb
ficomps
push
cli
add
mov
sbb
pop
cmpsl
xor
notl
dec
movsb
mov
xchg
test
and
mov
shlb
add
push
mov
mov
int
or
inc
hlt
rcrb
mov
xor
into
add
sbb
sbb
enter
int
and
fcmovbe
cmp
cmc
push
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
xchg
and
aad
mov
push
xabort
mov
out
out
aaa
lahf
cmpsl
or
sub
dec
aaa
mov
movd
decb
in
int
imul
lcall
loop
add
push
sbb
cmp
mov
pusha
jecxz
rorb
test
popa
jecxz
pusha
in
mov
outsb
fs
and
dec
rclb
outsb
add
mov
jg
adc
lret
xchg
add
jle
xlat
push
mov
push
adc
sub
scas
push
cmc
mov
mov
mov
out
jae
test
mov
xor
push
fisttpl
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
stos
clc
dec
fnstsw
mov
sbb
scas
pop
adc
add
sbb
into
loop
jnp
jl
das
dec
iret
ror
jmp
push
je
out
dec
pushf
sub
adc
push
sbb
xor
icebp
in
jns
outsb
out
lahf
stc
cwtl
shrl
pushf
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
jbe
into
cmp
jle
mov
push
sahf
sub
sahf
mov
sbb
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
iret
lret
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
mov
push
adc
repnz
arpl
lds
sbb
sbb
icebp
inc
scas
xchg
stos
mov
inc
lds
adc
sub
jmp
pop
test
mov
sbb
jo
sub
ud1
push
xchg
xor
addr16
das
push
es
add
adc
add
ljmp
inc
jo
rorl
xchg
cltd
xor
cmpsl
cld
sub
lret
mov
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
lret
add
mov
loopne
add
xchg
cmp
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
sbb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
jg
shlb
jns
inc
mov
test
mov
rolb
jb
lods
xchg
cmpl
jnp
stos
push
xchg
push
pop
mov
and
int
and
push
stc
and
daa
mov
jl
or
stc
xor
or
cmp
jmp
dec
inc
add
testb
fucomi
hlt
std
mov
sti
and
sbb
lret
dec
sbb
push
addl
mov
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
roll
js
mov
jmp
lret
mov
inc
dec
mov
sbb
movsl
std
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
xlat
stos
inc
inc
push
sbb
or
xor
jb
fisttpll
cmp
lds
lcall
pop
icebp
or
cmp
fs
loop
out
stos
mov
mov
dec
lock
cmp
mov
loopne
testw
jno
jp
fmulp
xchg
inc
and
aam
ret
cmp
mov
mov
shr
adc
orl
or
rorl
xchg
inc
mov
lret
mov
cld
lahf
adc
js
jnp
adc
or
in
dec
sub
push
add
je
sbbl
push
sti
or
fs
stos
jg
in
mov
cmpsb
ret
imulb
push
inc
outsb
jne
cmpsl
mov
int3
repnz
lods
js
lahf
mov
xor
cld
loopne
xor
ret
bound
rcl
xor
inc
into
xor
insl
push
int
jge
xchg
subl
stos
les
adc
imul
fs
lahf
jo
fists
xchg
orl
pop
pop
notl
out
popf
addl
xchg
pop
int3
inc
dec
mov
xchg
push
mov
cmp
mov
pusha
mov
sbb
jl
cld
das
loop
jp
pop
lods
inc
test
mov
jno
inc
push
sub
test
fs
movsl
inc
push
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
cmp
cmp
cmp
jge
jb
mov
mov
mov
xchg
jo
andl
cld
xor
out
xor
into
lock
in
or
fsubrs
outsl
push
rclb
scas
popf
push
mov
fcoml
mov
sub
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
xchg
sub
incb
movsb
cmp
clc
js
test
or
aas
test
fildl
or
ret
arpl
lds
push
sarl
cld
mov
cmpb
cwtl
pop
add
fst
outsl
mov
imul
fstl
adc
repnz
stos
scas
imul
push
inc
cmp
jmp
adcl
cmpsl
xchg
test
adc
ss
jb
add
int3
les
mov
add
xchg
mov
int3
xor
xor
lahf
xor
out
jl
in
jnp
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
test
add
data16
nop
lds
pop
pop
xor
sbb
cli
orb
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
stos
aas
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
sti
out
mov
adc
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
les
loopne
hlt
jbe
add
out
jnp
mov
xlat
adc
int
int3
fwait
mov
in
and
xor
mov
mov
push
pop
add
add
add
mov
sbb
xchg
xor
mov
test
sub
push
enter
jmp
dec
sbb
movsb
cmpsl
adc
movsb
fisubrs
cltd
jge
dec
inc
mov
hlt
lods
push
lods
jnp
mov
inc
aam
dec
pop
insl
sub
sahf
out
subb
cltd
das
mov
cwtl
xchg
cmp
ficoms
add
add
aad
jno
jae
mov
push
roll
scas
push
repz
imul
cs
mov
pop
out
js
mov
mov
nop
ja
loope
add
dec
mov
aam
int3
xor
arpl
adc
lret
jge
inc
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
or
mov
add
dec
and
cmp
and
mov
test
add
inc
sbb
lock
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
or
inc
jg
in
mov
repnz
pop
dec
xor
fcmovne
push
inc
push
and
cmp
das
push
lcall
repnz
int
cwtl
nop
std
pop
mov
inc
inc
test
jb
add
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
lret
ret
sahf
ficomps
jnp
inc
mov
add
adc
mov
and
mov
mov
negb
xor
jae
mov
adc
jge
adc
push
outsb
out
sti
mov
lret
iret
push
shrl
and
mov
and
sarb
cmp
jo
ss
sub
push
popa
push
test
sahf
pop
test
data16
sub
gs
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
ret
push
fcompl
jne
jns
lds
nop
lds
mov
in
mov
testl
loope
lret
movb
subb
dec
fsubl
stos
inc
repnz
lds
sub
shrb
xchg
ljmp
call
pop
xor
sahf
fcoms
jae
or
inc
arpl
pusha
mov
mov
cmc
jge
jae
rol
imul
sbbl
xchg
aaa
sbb
mov
pop
xchg
sahf
sbb
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
aas
lahf
es
dec
loope
lret
sub
decb
and
in
dec
cmpsb
mov
xor
dec
jne
or
mov
push
jmp
repnz
icebp
xor
in
or
stos
sbb
or
int3
jecxz
cmp
insb
push
sub
push
insb
xor
xlat
lods
xchg
sbb
push
rclb
lea
ret
pop
adc
les
push
aaa
ds
jbe
and
outsl
sbb
or
or
je
sub
lods
stos
inc
insl
outsb
pop
cltd
enter
lods
mov
pop
arpl
out
push
add
js
jle
aas
jnp
leave
test
jae
rcl
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
cld
cmp
aad
jns
out
jae
lock
mov
or
lahf
cltd
pop
adc
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
adcl
js
aad
mov
loopne
leave
xlat
pop
cmpsl
enter
inc
movsl
cltd
adc
stos
add
das
jo
sbb
add
push
aas
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
lcall
jb
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
lcall
pop
lock
mov
dec
cmpsl
mov
push
es
test
pop
and
movsl
jge
jo
popf
dec
fistpl
jno
je
mov
pop
cmp
ret
cld
jae
cld
out
daa
dec
lock
jge
inc
xor
lea
jl
imul
jle
mov
jae
mov
imulb
sbb
fdivrl
add
sub
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
mov
sbbb
xor
push
repnz
and
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
mov
aam
xor
mov
mov
xchg
mov
fcoml
pop
dec
inc
and
and
dec
and
adc
inc
cmp
gs
and
into
cmc
pop
fsubl
cli
xor
adc
int
insl
dec
xchg
aam
jne
sahf
out
jb
dec
out
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
xlat
pusha
mov
mov
cmc
jge
jae
rol
and
sub
sti
xorl
mov
in
aaa
sbb
mov
pop
xchg
lcall
cld
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
jg
sub
push
hlt
mov
popa
dec
mov
into
push
stos
shll
cld
xchg
adc
jl
mov
xor
aaa
cmp
daa
sub
sti
add
jbe
lea
push
mov
outsb
xor
ret
scas
arpl
mov
testl
scas
dec
inc
or
push
leave
inc
sub
leave
movsl
push
add
les
imul
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fsubrs
fsts
aam
or
sbb
mov
fwait
push
dec
mov
mov
shl
and
sahf
xchg
sarb
out
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
adc
add
sub
xchg
vsqrtss
add
notb
sub
addr16
std
mov
jno
jl
ficoml
adc
jmp
mov
push
jbe
add
adcl
test
or
cmpsl
mov
nop
pop
lret
cwtl
mov
aam
mov
xchg
push
negl
in
lods
mov
in
mov
repnz
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
xchg
mov
xor
xchg
push
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
mov
cld
jg
cmpsl
xlat
in
ret
sub
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
inc
jne
movsb
pop
bnd
lret
cmpsl
sub
int3
sub
sub
insb
orl
fsubrl
arpl
enter
dec
and
pop
mov
aam
sbb
mov
aam
push
inc
cmp
cmc
and
adc
jmp
and
fistl
cmp
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
xlat
xchg
stc
es
iret
out
aam
int
add
or
scas
int3
sbb
mov
sub
or
mov
adc
and
push
dec
push
adc
mov
out
int3
pusha
adc
jl
inc
mov
xor
and
daa
adc
xorb
mov
stos
sbb
data16
mov
aad
insl
and
adc
ret
scas
popa
adc
rcrb
sub
int
jno
lea
xchg
pop
out
dec
in
mov
adc
add
jne
push
or
cmp
dec
lods
cmc
xor
push
aas
mov
nop
fidivs
lds
xchg
adc
mov
jne
mov
or
aaa
jge
push
dec
mov
and
adc
decl
jae
inc
insl
out
fldl
cmpsb
iret
loop
mull
push
sbbl
pop
ret
push
jmp
outsb
push
pushf
add
jmp
add
and
push
push
inc
jmp
add
sub
pop
mov
and
or
inc
ret
jo
icebp
test
popa
jecxz
loopne
cmp
outsb
fs
add
inc
mov
add
add
jbe
fwait
ds
push
inc
in
mov
push
das
cmp
xchg
ret
aas
test
mov
jp
clc
mov
hlt
out
fcmovnu
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
mov
xchg
inc
std
mov
and
or
xchg
fwait
pushw
inc
je
ret
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
test
mov
pop
adc
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
inc
cmp
shrl
mov
pop
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
repnz
stos
push
imul
sahf
sarl
pop
movsl
leave
repz
cld
sub
cmc
leave
in
cmpsl
pop
or
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
sbb
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
cmpsl
inc
fld1
insb
icebp
mov
lahf
popa
cmpsb
push
imul
mov
or
dec
sarl
xchg
jno
dec
adc
mov
ret
mov
lds
ret
sarl
mov
pop
or
cmp
or
add
lock
add
mov
cmc
sub
jb
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
push
push
enter
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
rcl
insb
xor
or
adc
mov
scas
push
and
push
popf
das
test
in
mov
mov
dec
add
js
popf
into
jmp
mov
shl
dec
std
rorb
mov
in
es
rolb
out
sbb
ss
outsl
jae
fsubrp
cmp
inc
mov
lods
cli
lahf
jmp
sub
xchg
std
dec
data16
lock
dec
sbb
fprem1
enter
lea
test
dec
fidivl
dec
mov
lea
movl
les
pop
int3
add
or
js
sbb
ds
lock
mov
aad
pop
mov
mov
cmp
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
lret
sarl
mov
sub
sub
addr16
inc
rolb
jb
lods
mov
mov
popf
mov
xchg
xlat
pop
xchg
sub
jge
push
lahf
outsb
ret
cmp
enter
sar
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
out
dec
loopne
std
inc
into
out
popl
sahf
pop
lahf
jnp
lea
not
fisttpll
mov
add
adc
and
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
arpl
mov
jg
mov
test
scas
lods
pop
imul
pop
push
mov
in
daa
push
jle
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
inc
dec
fwait
aam
jne
insl
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
btr
outsl
jno
insb
out
mov
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jge
or
jo
inc
int
xchg
test
repz
jp
lds
out
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
jmp
and
push
mov
cmp
and
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
test
addr16
movsl
jne
pushf
jnp
and
movsl
adc
push
enter
or
ljmp
jmp
das
sub
sahf
jns
jmp
add
push
repnz
pop
xchg
je
sub
sub
and
int
jae
cmp
in
scas
aas
test
pop
jmp
jns
out
jno
insb
out
pop
mov
scas
pxor
js
inc
int3
cmpsl
dec
sbb
lock
xchg
jmp
leave
sbb
mov
das
lods
dec
fsts
inc
pop
mov
arpl
lock
call
lods
cmp
or
and
rorb
add
inc
push
push
sub
cmp
push
call
lret
mov
push
push
lds
sbb
and
dec
scas
icebp
addr16
or
inc
xchg
jge
ret
stos
and
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jle
push
jg
mov
imul
dec
and
lret
ds
dec
movsl
cmp
and
into
xchg
test
rorl
subl
data16
pop
mov
dec
jg
enter
arpl
pop
xor
mov
cmp
pop
and
add
ret
and
jl
jnp
inc
pop
or
jg
lret
jle
stos
aam
imul
push
mov
movb
push
enter
or
xor
rcll
out
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
cmp
imul
inc
cmp
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
es
call
ss
push
imul
dec
rcll
in
outsl
in
push
dec
call
and
inc
pop
cmp
xchg
mov
in
lret
cmp
subb
pop
imul
ret
mov
inc
push
insl
imul
push
mov
pushf
dec
mov
int
or
inc
hlt
rcrb
mov
add
sbb
sbb
enter
int
and
fcmovbe
cmp
cmc
push
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
aas
in
and
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
in
int
mov
pop
loop
lods
ds
add
ljmp
arpl
and
daa
adc
nop
xchg
add
sub
push
mov
dec
push
in
int3
inc
push
cltd
mov
icebp
sub
push
in
dec
push
inc
ret
mov
mov
into
ds
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
nop
fldl
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
mov
fidivrl
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
ss
xchg
lds
mov
inc
lock
dec
negl
cs
xor
and
fwait
sub
leave
js
insb
mov
mov
lret
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
push
add
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
or
gs
dec
pop
bound
add
ja
dec
dec
daa
add
icebp
push
or
adc
addr16
sbb
mov
and
icebp
push
fdivrs
cli
mov
push
pop
pop
imul
add
mov
xchg
ds
dec
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
cs
js
mov
shl
repnz
pop
push
cltd
add
cmp
push
sbb
push
cli
sub
push
xor
push
sbb
daa
xor
mov
push
or
sub
lret
es
test
sub
jge
jge
adc
jg
sbb
pop
mov
fstpl
je
fisubrl
or
mull
imul
fdivl
ljmp
repnz
xor
fnsave
fwait
and
pushf
sub
push
fstps
pushf
xchg
pusha
or
sti
fstps
sub
sbb
mov
fwait
push
dec
mov
pushf
xchg
sub
xor
xchg
xchg
inc
add
test
cwtl
inc
and
adc
mov
mov
ffreep
scas
mov
inc
xchg
add
test
dec
pushf
mov
nop
les
fsubl
repz
dec
sub
pop
mov
add
push
sahf
xor
dec
push
iret
inc
call
cmp
test
ficomps
jae
popf
mov
adc
mov
nop
shlb
adc
mov
dec
cwtl
mov
xchg
xor
cwtl
sub
cmp
sub
cmc
sbb
std
fistpll
int
data16
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
insb
int3
push
test
cmp
pop
and
lock
mov
inc
dec
out
xchg
js
popa
sbb
add
ljmp
pop
orb
xchg
and
pop
xor
lret
scas
loop
cmp
sbb
jo
shrl
outsl
inc
mov
mov
je
test
xchg
dec
xchg
sbb
inc
mov
rcll
mov
sub
or
lods
lea
insl
loopne
mov
jp
jl
cmp
clc
jp
add
add
mov
sbb
xor
mov
arpl
mov
jg
sub
pop
mov
test
lds
ficoml
iret
into
push
daa
jae
xchg
sub
enter
test
mov
mov
or
mov
mov
mov
mov
mov
shrl
push
mov
scas
adcb
mov
xor
cmc
xor
mov
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
in
and
daa
pop
repz
out
icebp
mov
xchg
or
rolb
push
push
shll
dec
stos
icebp
and
sbb
cmpsb
ja
test
shlb
inc
lods
jb
mov
dec
mov
cmp
and
mov
leave
jo
mov
add
mov
outsl
movsb
jmp
inc
bound
add
jg
fmull
xchg
xchg
ret
push
int3
inc
push
fwait
xchg
inc
test
cmp
inc
xchg
pop
mov
mov
jne
jmp
enter
cmc
movsl
testb
in
aam
pop
or
add
adc
xchg
jnp
push
or
adc
arpl
mov
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
sbb
test
sbb
enter
fists
outsl
and
adc
inc
mov
xor
xchg
outsb
mov
pop
sub
inc
and
test
test
movsb
aad
pop
jne
xor
imul
add
xor
lret
jne
mov
xchg
loop
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
mov
xor
inc
stos
adc
imul
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
subl
cmp
adc
aam
roll
inc
inc
pusha
xchg
sbb
std
div
xor
rol
adc
pop
lcall
jbe
sub
push
sbb
mov
jmp
aam
sub
push
test
sbb
out
mov
cltd
xchg
cmp
js
mov
out
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
mov
adc
rcl
lcall
aad
xor
xor
mov
mov
lcall
pop
jb
add
mov
out
push
scas
shll
sub
add
lea
addr16
mov
fstl
pusha
in
loop
dec
pop
bound
out
loopne
or
outsb
add
lock
mov
loop
mov
ss
mov
pop
push
xchg
push
sbb
jb
mov
cmp
and
xor
repz
adc
and
jns
pushf
rcrb
pop
dec
add
or
or
sbb
mov
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
orl
xchg
test
sbbb
pushf
push
mov
mov
sbb
lds
orl
sub
leave
test
mov
sbb
xchg
xchg
in
ud1
in
jno
xchg
clc
mov
cltd
das
push
rcll
loopne
inc
ja
popl
xchg
out
cltd
addl
add
pop
push
ja
jmp
popa
sahf
js
lahf
xchg
push
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
rcrl
sbb
xor
jmp
cmp
mov
sub
cmp
ret
xchg
and
mov
popa
lods
fldt
ljmp
push
bound
push
push
bound
xchg
inc
movb
jne
dec
mov
sub
cmpsl
fistpl
ret
jo
adc
ret
das
lds
test
jno
aaa
jecxz
scas
add
jns
enter
ret
stos
fldcw
lock
jg
push
sbb
mov
jp
pop
adc
test
mov
mov
mov
pop
popa
scas
movsl
mov
enter
mov
sbb
test
mov
cltd
jns
test
jle
imul
xor
mov
cmp
decl
add
inc
sbb
clc
xchg
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
std
lea
ja
inc
in
scas
mov
lea
push
lret
add
inc
fldt
cmp
push
sarl
mov
mov
add
subl
scas
pop
fcomps
jne
sahf
out
scas
cmpsb
fistps
test
push
es
dec
push
leave
aas
test
mov
and
mov
cwtl
enter
loope
ds
scas
push
repz
imul
cs
xchg
mov
mov
xchg
sbbl
push
mov
fsts
daa
pop
mov
arpl
lahf
jnp
lea
into
inc
out
call
lock
cmc
lds
mov
sbb
mov
loope
insl
or
ljmp
pop
mov
aam
push
dec
add
mov
cmp
jp
add
cltd
sub
adc
push
add
lods
cmpsb
sbbb
lret
lcall
stos
mov
rcll
pushf
pop
pop
mov
fwait
jecxz
test
std
sahf
pop
xchg
iret
loope
pop
ret
adc
and
pop
mov
mov
push
aam
jne
insl
dec
pop
xchg
enter
adc
cmpsl
insb
mov
lods
jbe
mov
fistl
push
fs
mov
cmp
clc
mov
xor
xchg
pop
xor
fdivs
add
push
test
xchg
adc
data16
mov
cmc
push
stos
icebp
mov
sbb
xchg
jne
mov
or
lahf
cltd
pop
adc
jg
xor
cmpb
je
test
jle
jl
out
mov
icebp
push
mov
pop
pop
lcall
xor
clc
adc
add
push
adc
and
divl
and
daa
adc
sbb
shrl
sbb
mov
xchg
data16
push
or
mov
xor
scas
popa
inc
mov
mov
int
jno
fildll
and
dec
dec
cwtl
rclb
mov
cs
stos
adc
add
fmull
lock
test
fwait
sub
pop
stos
punpckhwd
sub
in
mov
mov
fld
push
and
out
leave
imul
popa
cli
loopew
popl
sub
sub
lods
add
xchg
adc
mov
and
or
insb
int3
aas
mov
pop
popf
xor
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
sbb
sbb
xor
mov
xor
inc
inc
push
inc
decb
aad
push
int3
mov
xchg
scas
sbb
outsb
xor
push
inc
ficoml
lea
mov
int
jns
adc
mov
mov
cs
cmp
mov
lret
outsb
movsl
cwtl
pop
inc
sbb
pop
out
push
mov
fcoml
dec
cltd
lods
je
les
cmp
push
sub
and
in
jge
xchg
mov
jnp
or
add
das
inc
iret
shl
ja
std
outsl
addr16
xchg
adc
and
mov
jnp
mov
lock
int3
add
popf
iret
out
aam
fwait
xchg
pushf
ret
addr16
sub
or
dec
cmp
or
inc
jge
je
aas
ja
inc
in
pusha
into
gs
xchg
movsb
mov
loope
inc
jg
pop
in
stc
xchg
ja
iret
push
lret
mov
sub
mov
cltd
mov
push
pop
ljmp
cmpsb
sub
sub
push
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
cltd
stos
out
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
xchg
xlat
dec
test
jecxz
js
fmul
pop
sub
lret
jl
fdivrs
outsb
sub
leave
iret
push
bound
lock
js
scas
xchg
scas
out
xor
out
mov
iret
rorl
movsl
ds
mov
push
lock
mov
add
jbe
add
out
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
into
jo
ret
arpl
sahf
je
popf
mov
cmp
jp
add
add
mov
sbb
lods
orb
xor
mov
fmull
sub
stos
mov
loop
dec
pusha
sub
pushf
ficoms
scas
shl
jg
lahf
out
icebp
stc
jnp
sahf
pop
xchg
iret
loope
pop
ret
adc
sub
or
roll
dec
sub
push
aam
jne
insl
dec
pop
xchg
enter
or
inc
add
lret
fistl
cmp
cmp
jo
fwait
leave
cmc
xor
cmpsl
sub
sub
push
sbbb
cmpb
sbb
mov
sbb
inc
xchg
xchg
sub
push
ja
popf
dec
push
nop
scas
lock
jns
mov
pushl
into
add
outsb
add
jle
scas
int
lds
shrl
pop
sbb
mov
je
inc
push
addr16
and
sbb
adc
cld
sub
rcrl
dec
jecxz
test
rclb
out
lret
mov
imull
xchg
push
adc
inc
lret
mov
vmovsd
cmp
sub
jnp
arpl
repnz
xor
xor
ret
mov
daa
cmp
arpl
lret
xchg
iret
lret
lret
lds
push
icebp
sbb
dec
jo
shlb
loop
mov
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
lahf
cltd
pop
adc
jg
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
sbb
cltd
subl
int
push
sub
push
xor
std
cmp
out
inc
mov
icebp
nop
jle
xchg
push
mov
shlb
xlat
stos
push
stos
lea
movsl
push
jno
test
lods
mov
dec
xor
xor
div
call
nop
mulb
push
ret
add
cli
scas
xchg
stos
mov
int3
sub
in
lds
cmpsl
fistpl
ret
bound
push
hlt
inc
and
mov
push
in
in
pop
aas
xchg
fbstp
jae
rol
adc
sub
sti
xorl
mov
in
aaa
sbb
mov
pop
xchg
mov
mov
clc
jecxz
mov
jmp
std
mov
sti
and
test
lahf
mov
cmp
mov
popa
dec
mov
iret
jg
shll
sbb
pusha
or
pusha
xor
je
idivb
leave
xor
xchg
rolb
adc
or
fimull
sub
dec
fcmovne
sub
or
push
xchg
pop
mov
cmp
paddq
push
dec
iret
lahf
sub
pop
push
push
mov
push
outsb
mov
dec
popf
push
aad
and
jne
push
xchg
rorb
jbe
cmp
pop
xor
adc
inc
fdivrl
jecxz
fistps
test
xchg
loop
in
lret
pop
xchg
in
cmp
mov
and
adc
decl
jae
inc
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
inc
rorb
xor
scas
repnz
mov
mov
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
fs
addr16
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
in
mov
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
in
out
int3
mov
in
scas
aas
test
xchg
jmp
push
out
jno
sbb
sbb
ret
xchg
jg
out
das
dec
iret
mull
xchg
xchg
mov
inc
pushf
out
sbb
jae
pushf
sub
divl
pop
jmp
mov
out
push
or
cld
jnp
dec
mov
sbb
and
enter
cwtl
stc
add
lcall
xlat
adc
or
and
in
aam
icebp
outsl
int
cmc
test
cmp
mov
jl
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
imul
pop
push
jns
loope
sub
add
push
push
cmpsb
xor
add
aam
adc
test
insl
outsb
pop
cltd
imul
insb
sub
mov
pop
and
push
pop
mov
mov
cmc
mov
jle
jno
sub
mov
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
sahf
mov
cmp
mov
mov
daa
dec
mov
ds
xchg
test
push
sarl
xor
push
fwait
mov
pop
in
or
test
add
sbb
roll
push
mov
enter
les
push
int
push
lahf
stos
sub
iret
mov
cmp
push
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
mov
stos
jne
add
push
test
or
stos
xor
xor
mov
mov
mov
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
sbb
xor
push
mov
sbb
and
jl
outsb
mov
mov
jne
les
cmpl
sbb
imul
ja
or
jg
aad
pushf
ret
pop
mov
mov
sbb
nop
push
lcall
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
mov
push
stos
fs
orb
je
dec
cmpsb
dec
mov
adc
mov
jb
xor
das
mov
dec
jb
sahf
fisubl
imulb
lea
or
orb
mov
std
fdivrl
js
ret
dec
sbb
loop
mov
fidivs
ja
pop
inc
fimull
inc
xor
xor
sbb
ficoml
addr16
xchg
pop
ds
mov
mov
or
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
cmpb
shrl
mov
inc
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
sub
push
insl
mov
jne
pop
test
push
stos
xchg
sbb
push
jmp
imul
inc
jns
ds
movsb
ret
xor
dec
inc
sub
sub
inc
jb
insb
shlb
movsl
out
stc
add
mov
inc
lcall
cmp
cmpsb
cmp
pop
and
movsl
jge
jo
popf
dec
fistpl
jno
je
mov
pop
cmp
ret
cld
jae
cld
out
daa
dec
lock
jge
sub
jno
int
xchg
test
repz
jp
lds
out
stos
loopne
cmp
pop
jb
or
cmpb
repnz
dec
inc
inc
inc
pop
jle
or
and
dec
sbb
cmp
xorl
mov
fmul
call
mov
outsb
js
std
popa
mov
mov
cli
mov
inc
xchg
enter
xor
or
push
xorl
sbb
push
cmp
je
stos
ret
call
add
push
lret
popl
inc
popf
imul
xchg
mov
inc
stc
popa
inc
inc
cmpl
fistl
test
add
or
lea
pop
lds
mov
scas
das
jb
jle
mov
std
cli
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
push
cmp
in
scas
out
jp
dec
sbb
cmpsl
ret
mov
add
arpl
jecxz
sarb
add
ss
push
sarl
jg
and
xchg
dec
in
xor
mov
ds
in
and
jae
test
ret
cmpsl
jp
mov
cmp
mov
xlat
mov
hlt
std
mov
enter
dec
push
aas
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
mov
cwtl
xor
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
mov
sub
mov
dec
lcall
pop
test
lods
cmp
dec
repz
out
xor
repz
fwait
leave
in
es
dec
inc
daa
movsb
out
inc
mov
inc
cmc
gs
xor
fidivl
psraw
test
and
cmp
mov
loope
pop
pop
pop
call
mov
in
add
sbb
add
andb
js
sbb
mov
mov
or
push
jne
les
loopne
ret
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
mov
mov
xchg
das
sbb
adc
out
push
pop
lods
dec
push
aaa
push
lea
lahf
aad
ret
xchg
out
mov
fildll
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
shl
mov
ror
ret
push
enter
or
test
je
sub
and
in
adc
fsubs
jbe
in
xor
in
js
rcrl
scas
cs
call
add
pop
dec
mov
jb
movsb
cmpsl
pusha
adc
lds
mov
adc
outsl
mov
int3
pop
into
xor
and
add
stos
inc
push
int3
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
or
mov
les
jns
pop
mov
test
add
test
dec
lock
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
incb
inc
jecxz
xor
sbb
stc
push
inc
in
dec
mov
scas
dec
rcr
mov
and
enter
pop
adc
enter
dec
movsl
or
sbb
fistl
pop
or
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
push
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fnstsw
outsb
iret
lahf
icebp
es
sbb
push
rclb
add
andb
and
fisubrs
fisttpl
inc
and
lretw
xchg
mov
push
test
lods
int
fsubs
out
mov
outsb
push
pushf
add
jmp
pop
stos
jns
sub
out
insl
mov
or
sub
xlat
sbbb
jo
jp
fsubs
aaa
pop
push
aad
test
mov
sahf
cmp
stc
inc
repz
adc
cli
xchg
arpl
lds
or
cmp
adc
mov
push
cmc
adc
rcl
lcall
mov
jbe
popf
adc
gs
loop
loope
jg
pop
rcll
fcompl
adc
das
mov
clc
das
mov
mov
int
dec
mov
jge
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
mov
cmpb
xchg
add
sbb
mov
mov
mov
sub
negl
mov
mov
mov
aas
mov
loopne
lea
sbb
mov
push
ss
pop
out
dec
sti
pusha
aas
js
push
shl
xor
es
sbb
xchg
stos
push
test
push
scas
iret
addr16
loopne
mov
in
mov
fildll
sahf
jbe
sub
xor
xchg
ja
in
adc
xchg
push
xchg
popf
mov
ja
insl
jb
mov
fidivrl
daa
int3
sub
popa
mov
lahf
shrb
mov
std
jecxz
sub
adc
or
xchg
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
pop
iret
cli
ss
lds
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
test
or
and
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
mov
mov
gs
sub
addr16
sahf
out
ss
outsl
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
mov
push
jno
dec
cli
inc
test
push
mov
lods
inc
mov
inc
cs
ss
in
cltd
xor
mov
repz
popf
ljmp
add
test
xlat
loop
xor
rcll
add
xor
mov
stc
aas
roll
popf
scas
xchg
cmp
rol
test
or
fsts
inc
pop
push
pusha
movsl
mov
jg
adc
mov
adc
sbb
mov
pop
fnstsw
rcrl
shll
test
mov
sbb
mov
push
pop
cmc
adc
rcl
lcall
mov
jbe
popf
adc
gs
loop
rorl
mov
jno,pn
insb
repnz
mov
scas
adc
cld
xor
add
pop
xchg
scas
cwtl
cld
lds
mov
pushl
jb
mov
enter
jmp
adc
sarl
inc
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
sub
mov
add
mov
cmp
and
mov
test
add
in
mov
sbb
jl
cltd
jo
lock
jge
cmc
cld
or
lret
fdivl
xor
test
dec
imul
xchg
shlb
stos
lods
adc
dec
inc
dec
ficoms
mov
adc
cmp
sub
inc
in
mov
loope
pop
lods
push
xchg
mov
push
or
dec
shl
je
sub
push
xlat
adc
dec
and
sub
mov
ret
mov
and
aaa
out
jno
jmp
cmp
mov
imul
push
or
je
imul
pop
roll
mov
rorl
inc
and
aaa
aad
cmp
ret
ret
lea
xor
mov
cld
nop
es
xchg
stc
mov
and
inc
push
inc
cmp
ret
mov
dec
in
pop
and
fmull
pop
outsl
cs
xor
add
ret
les
push
add
ja
into
push
cmp
mov
jecxz
pop
add
les
insl
movsl
rcll
pop
iret
and
sbb
pop
mov
mov
jne
aas
push
enter
cmc
movsl
testb
in
aam
inc
stos
xchg
mov
sbb
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
jnp
adc
pop
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
push
mov
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
pushf
inc
lock
or
and
or
mov
push
mov
frstor
sub
clc
and
loop
cmp
mov
cmc
cmp
cmc
mov
push
xor
adc
ljmp
and
jl
adc
and
mov
dec
sbb
lcall
mov
sub
cmc
sbb
std
fistpll
int
data16
test
pop
or
lds
stos
xchg
stos
cmp
lds
movsb
push
sub
jns
movb
gs
mov
mov
pop
and
jp
sahf
repnz
inc
std
rorb
mov
in
es
rolb
scas
out
cmp
out
mov
fsubrp
cmp
out
out
fs
subb
repz
std
dec
data16
adc
or
dec
sbb
and
inc
rcl
xor
cmpl
dec
rcrb
pop
jno
lds
adc
adc
and
jl
in
test
pop
rcrl
mov
ffreep
inc
sub
and
xchg
sub
lods
xchg
sub
adc
fldenv
jb
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
push
in
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
mov
xchg
cmp
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
jmp
sbb
mov
out
inc
js
outsl
mov
xor
fwait
cmp
movsl
les
cwtl
in
outsb
xor
ret
scas
arpl
vdivsd
adc
and
xchg
mov
xchg
arpl
pop
outsb
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
jnp
dec
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
daa
dec
push
xor
leave
dec
loope
jo
sub
xor
sub
adc
jle
fildll
inc
data16
add
add
jle
nop
inc
fs
inc
mov
fs
jo
push
movsb
in
inc
insl
xchg
jp
add
mov
imul
and
clc
push
aam
and
push
aas
push
fwait
cltd
cmp
dec
or
xor
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movsb
leave
pop
testb
xor
ljmp
push
out
fwait
mov
push
mov
mov
in
and
xchg
jmp
call
scas
push
xchg
mov
push
xchg
fistl
outsl
clc
int3
fnsave
lahf
jb
push
hlt
push
ljmp
popf
addl
xchg
stos
lds
push
ficoml
lret
xchg
mov
adc
mov
call
pop
or
xchg
sarl
mov
fwait
mov
loop
cmc
mov
lea
mov
adc
outsb
mov
arpl
out
les
cmp
mov
pop
jl
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
sub
dec
push
fsub
ja
cwtl
repnz
sub
out
lret
inc
arpl
enter
lods
mov
test
push
sbb
mov
xchg
xchg
cmp
inc
mov
leave
cld
icebp
in
inc
or
lds
dec
mov
jge
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
jecxz
dec
mov
cmpb
sub
js
sbb
mov
mov
or
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
lret
xlat
cmp
es
cmp
js,pt
or
mov
xor
add
sbb
call
inc
inc
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
and
mov
mov
negb
ret
push
jae
jp
xor
test
jge
ljmp
cmpsl
aaa
arpl
sbb
and
sbb
add
inc
dec
es
test
insl
lea
int
inc
stos
repz
mov
adc
movb
and
sub
cmp
sarl
or
and
inc
sub
jo
xchg
mov
test
push
call
xor
sub
push
test
mov
mov
ljmp
xchg
cmp
jns
inc
inc
test
pop
mov
cli
test
xchg
fcmovne
aad
adc
sub
hlt
shr
rcrl
inc
xor
mov
mov
cmp
jo
mov
pop
jb
add
mov
out
push
scas
sar
xor
jbe
mov
pusha
or
dec
aaa
xor
lods
inc
mov
lret
xchg
jae
sbb
aam
and
push
lds
dec
test
outsl
mov
rcr
push
rcl
hlt
cmp
or
lret
rcll
sub
or
dec
adc
lds
pop
mov
mov
pushf
sti
add
adc
je
jnp
mov
mov
xor
mov
cmp
rcrb
adc
test
push
sti
push
push
xchg
inc
and
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
jne
add
xchg
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
test
xor
addr16
jle
scas
das
out
leave
cld
icebp
jg
sbb
push
subl
in
js
sbb
je
xchg
ja
rcr
ja
xor
je
out
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
jmp
and
xchg
mov
cmp
and
mov
test
add
in
mov
repz
rorb
mov
mov
fldcw
pop
into
push
mov
mov
xchg
adc
enter
pop
mov
fstl
in
jne
pop
xlat
cmp
ret
lods
add
sub
or
push
mov
jnp
inc
pop
mov
loopne
mov
sub
mov
sahf
pop
or
mov
pop
dec
scas
je
lret
xchg
mov
jne
subl
subl
adc
mov
adc
dec
daa
addl
mov
mov
or
mov
add
notb
mov
lret
mov
outsb
dec
sbb
test
push
cli
dec
pop
dec
mov
idivl
mov
lret
jb
pusha
gs
jo
pusha
mov
pusha
arpl
inc
or
lcall
push
lods
xor
xchg
add
rcrl
in
cmc
pushw
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
xor
cli
into
xchg
stc
cli
in
test
or
test
clc
mov
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
sbb
rcrl
clc
icebp
jle
scas
pxor
cld
repz
scas
dec
sbb
hlt
repz
insl
das
dec
iret
shl
idivl
sbb
cwtl
jecxz
scas
loope
repz
loopne
js
cs
jae
pushf
xor
xor
mov
push
cmpsb
rolb
ss
push
xorl
pop
je
dec
sub
xchg
vsqrtss
dec
adc
fwait
jge
mov
mov
mov
add
ret
sarl
mov
pop
or
cmp
or
add
lock
add
mov
cmc
sub
jp
adc
repnz
jns
lds
nop
lds
mov
in
mov
testl
loope
lret
movb
xor
xchg
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
aam
int3
push
cmp
or
pusha
mov
ret
les
ljmp
mov
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
mov
enter
aas
sti
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
arpl
or
adc
fsub
movsl
std
cs
jl
out
test
jo
pop
test
mov
mov
and
pushw
popf
adcl
adc
xor
test
jnp
and
adc
cli
sub
and
movb
mov
jmp
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
pop
mov
mov
jmp
scas
cmp
push
leave
clc
inc
or
sbb
inc
and
movb
in
pop
lret
fwait
adc
dec
nop
jb
movsb
pop
push
scas
fcomp
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
idiv
dec
lahf
jecxz
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
in
daa
outsb
xor
and
test
push
stos
leave
pop
imul
adc
jns
loope
pop
lods
push
outsl
sbb
or
shl
je
sub
out
fldcw
pop
cltd
dec
out
dec
dec
in
int3
mov
or
inc
jmp
leave
push
dec
add
jb
jg
xor
repz
xchg
mov
adc
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
int3
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
mov
mov
sbb
inc
jo
push
sbb
iret
sub
push
xor
push
cmp
sbb
daa
add
sbb
inc
ds
inc
cmpsl
aad
stc
gs
cwtl
and
sbbl
mov
jb
pop
push
bound
push
test
mov
add
fnstcw
adc
bound
test
mov
cmpsb
sub
mov
dec
lcall
pop
test
lods
cmp
dec
fsubr
icebp
fwait
mov
mov
lock
and
lret
fdivs
fistl
roll
test
xchg
sub
clc
aam
cmp
loope
pop
xchg
ds
fdivrl
pop
mov
fdiv
addl
and
sub
popf
out
mov
or
push
jne
les
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
mov
mov
iret
not
pop
test
cs
push
cld
push
cwtl
dec
rcr
fsub
imul
lcall
int3
jmp
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
mov
dec
movsl
xchg
mov
fcompl
aad
xor
xor
mov
bound
hlt
xchg
loop
in
nop
xchg
lahf
push
cwtl
lock
sub
dec
outsl
idiv
into
iret
cmp
cs
push
out
orb
xchg
bnd
push
lcall
mov
insl
mov
cmpsl
pop
dec
into
fcompl
pusha
pop
adcb
jmp
pop
subb
push
dec
mov
popf
pop
inc
or
repnz
jo
aaa
ljmp
jnp
adc
jno
or
js
sbb
stos
cwtl
pop
enter
add
test
jp
lcall
inc
mov
or
mov
test
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
lods
add
in
mov
mov
sub
mov
sti
mov
dec
stos
inc
in
push
adc
xor
aas
mov
pop
cmc
or
fcompl
mov
cmp
das
dec
roll
scas
dec
repz
out
cmp
mov
cli
scas
mov
cld
loopne
roll
imul
sbb
mov
cmp
enter
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
cmp
clc
js
test
or
aas
out
lods
imull
insl
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
stos
lea
push
mov
mov
cmp
sub
push
fwait
mov
rclb
inc
jno
inc
in
jg,pn
shl
mov
cmpsb
dec
fsubrl
mov
adc
pop
mov
xchg
mov
cmp
test
mov
fwait
leave
cmc
xor
cmpsl
sub
sub
push
stos
cmp
repz
push
xchg
lods
out
cmp
cwtl
push
scas
xor
and
adc
cmpsl
mov
jg
repz
mov
stc
push
jecxz
xorl
add
stc
mov
and
inc
push
inc
cmp
inc
pop
inc
mov
dec
in
pop
and
and
lods
out
mov
jmp
scas
mov
xor
cmc
ficoml
stos
inc
test
shll
stos
fstps
push
mov
stos
in
cli
ficompl
mov
test
clc
sub
jne
neg
arpl
add
iret
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
pop
ds
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
pushfw
add
popl
mov
dec
pop
call
mov
arpl
pop
mov
fs
sub
adc
jle
fnclex
outsb
out
fldt
inc
icebp
or
or
outsb
add
inc
je
ja
imul
popa
mov
shlb
xlat
lret
loop
cs
xor
out
inc
leave
neg
inc
in
add
ret
lods
adc
jmp
inc
cld
push
dec
xchg
mov
or
stc
bound
xchg
xor
fs
ret
cltd
jmp
loop
fsubrl
push
dec
inc
inc
xchg
jecxz
scas
mov
pop
cmp
insl
mov
or
adc
dec
insl
adc
push
dec
add
adc
push
mov
js
test
sub
js
mov
push
jb
es
add
xchg
xor
ror
pop
push
cwtl
cld
inc
ret
mov
ja
rcll
push
cmc
gs
fwait
cmp
mov
aam
fdivrs
inc
out
mov
stc
test
xor
sti
sti
and
test
cld
mov
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
aaa
imul
ret
stos
out
mov
push
imul
in
movsb
mov
bound
push
xchg
xchg
mov
repnz
mov
push
jns
dec
int3
std
push
cmp
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
clc
fistps
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
int3
xor
cmpb
je
test
loope
and
arpl
sbb
imul
sub
inc
lods
jo
push
inc
mov
add
inc
push
sbb
ficompl
adc
xchg
shll
sub
into
lahf
mov
arpl
pop
inc
xchg
dec
inc
nop
jg
adc
lret
xchg
cmp
jle
xlat
push
mov
push
adc
sub
scas
push
cmc
mov
mov
mov
out
jae
test
mov
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
cli
and
out
jno
insb
out
pop
mov
leave
inc
out
cld
jb
mov
lock
aas
rclb
jge
pushf
mull
out
jo
pop
push
cmpl
jp
mov
sti
fucomip
andl
jo
inc
push
int3
pop
ljmp
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
cwtl
sbb
xor
jns
cltd
mov
add
mov
cmp
jp
add
add
mov
sbb
lods
orb
xor
mov
cld
mov
shl
or
shrl
fsubl
sub
xor
sub
inc
ret
pop
daa
mov
aam
xchg
cli
adc
mov
lcall
sti
stos
xchg
add
xlat
loope
movsb
fstl
fdivrl
sti
popa
jmp
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
xchg
and
aad
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
ss
outsb
xor
imul
aas
scas
sub
inc
push
pop
lahf
xchg
ret
in
out
rclb
ds
lahf
lret
mov
arpl
adc
in
pop
loop
sbb
pusha
movsl
aam
sbb
nop
aas
roll
shll
push
int
add
decl
test
lret
movsl
jno
adc
test
mov
sbb
mov
push
xchg
adc
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
lret
mov
add
pop
dec
add
popf
loopne
out
push
or
cld
sub
dec
mov
sbb
and
enter
cwtl
stc
add
lcall
xlat
adc
or
and
in
aam
icebp
pop
add
cmp
mov
pop
jl
lock
xchg
xor
leave
add
mov
or
mov
pop
xchg
lods
data16
stos
cmpsb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
scas
and
adc
inc
mov
xor
dec
ret
sub
sub
dec
fcomp
xor
cmp
test
xchg
aam
jne
insl
pop
fwait
enter
inc
push
inc
xchg
push
es
inc
mov
jns
jo
stos
cmp
bound
add
popa
mov
enter
fdivs
fistl
roll
test
xchg
sub
clc
aam
cmp
loope
pop
xchg
fstps
cmp
es
fdiv
addl
and
sub
popf
out
mov
or
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
adc
aaa
jl
imul
add
adcb
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
mov
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
les
pop
inc
cmpsl
lcall
push
jb
cmp
and
dec
je
sti
jno
test
rcrl
inc
mov
jecxz
sbb
or
sub
negb
das
cmp
inc
stos
xchg
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
int
data16
test
sbb
orb
mov
dec
mov
out
stos
sub
aam
das
scas
aam
jne
insl
in
scas
sbb
cmp
lahf
scas
fldt
scas
pop
and
push
xchg
jle
scas
xor
jmp
andl
lock
out
out
cmp
pushf
repz
lock
jno
xchg
in
cmp
out
mov
sub
adc
sbb
sbb
inc
lret
loop
inc
mov
sbb
and
enter
jo
or
and
in
cmc
xor
push
adc
pop
test
lcall
push
dec
add
adc
mov
mov
cmp
jp
add
add
mov
sbb
mov
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
pop
mov
and
cmpsl
jnp
or
adc
sbb
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
jo
fdiv
aaa
sub
sbb
ror
fildl
push
add
mov
and
daa
add
les
in
in
push
dec
xchg
jg
inc
push
mov
cld
and
adc
inc
xlat
test
push
cli
pop
dec
mov
mov
jle
into
mov
lods
sbb
xchg
lods
push
xor
and
test
test
rorl
add
jp
cmpsb
cmpsl
push
insl
mov
popa
shrb
jecxz
aas
and
enter
pushf
add
adc
cs
sub
or
and
ja
pop
inc
fimull
pusha
adc
push
test
in
xor
and
inc
jp
jmp
scas
inc
push
int3
pop
or
dec
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
pop
sbb
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
jl
sub
jno
pop
cmp
jb
pop
adc
imul
push
outsl
and
xor
xchg
sub
jne
insl
outsb
mov
sub
xchg
clc
xor
jo
sub
cmpxchg
out
mov
jno
icebp
jle
scas
pxor
cld
repz
out
das
dec
je
inc
dec
addr16
sub
hlt
cmc
mov
mov
mov
lcall
movsb
cli
xor
daa
mov
cmp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xchg
fwait
rcrb
dec
lods
lock
mov
orb
daa
jb
sub
xor
divl
es
test
dec
jecxz
rol
and
js
or
push
pop
bound
push
cld
cwtl
in
outsb
xor
push
dec
repz
int
inc
ret
pop
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
lret
jnp
jbe
mov
sbb
push
inc
ficoml
test
and
xchg
mov
mov
push
jb
es
add
xchg
fwait
test
rcrb
cld
inc
ret
mov
ja
rcll
push
cmc
gs
fwait
cmp
mov
aam
fdivrs
inc
out
fcmovne
xor
xlat
stc
test
xor
sti
sti
and
test
jl
sub
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
mov
adc
xorb
mov
daa
fs
movsb
mov
adc
outsb
push
inc
sub
push
aaa
push
lea
mov
call
mov
fsub
push
fldenv
or
and
mov
mov
fmull
lock
test
fwait
sub
pop
stos
punpckhwd
sub
in
mov
mov
fld
push
and
out
leave
imul
popa
cli
loopew
popl
jnp
sub
lods
add
xchg
adc
mov
and
or
insb
int3
cmp
pop
popf
xor
jmp
std
mov
sti
and
test
pushf
mov
cmp
mov
popa
dec
mov
mov
push
test
js
ret
iret
sub
repnz
jp
inc
inc
loopne
push
aas
pop
lcall
xchg
rolb
xchg
ret
add
shll
pop
pop
lret
sub
test
mov
mov
pop
xchg
shll
cmp
xchg
popf
lcall
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
fwait
ds
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
test
mov
jecxz
pop
push
jo
jnp
jle
mov
lahf
xor
scas
in
neg
ss
lods
out
inc
scas
imul
mov
lea
push
xor
test
mov
dec
mov
lcall
and
or
adc
popf
je
pop
mov
idiv
sti
inc
jae
ljmp
add
add
mov
sbb
lods
orb
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
add
icebp
adc
mov
and
scas
push
inc
cmp
dec
pop
push
cmpl
popa
fidivrs
imul
insb
xor
iret
mov
pop
push
outsl
push
sbb
and
pop
mov
pop
lods
shrl
aam
push
cmp
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
sub
sbb
pop
popf
sar
stos
test
nop
sub
or
inc
mov
mov
xor
push
push
adc
inc
jle
jo
ret
sbb
fucomip
push
xor
leave
ss
adc
stos
add
inc
mov
push
aam
dec
and
adc
fdivrl
pop
mov
jb
dec
aam
shll
lea
xlat
inc
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
fnstcw
insb
pusha
jle
das
pop
icebp
or
cmp
sti
and
in
ret
or
leave
or
push
jge
dec
jnp
in
lret
je
dec
cmpsb
mov
xlat
push
mov
out
in
js
or
mov
xchg
sahf
cmp
dec
in
lahf
sti
cwtl
inc
data16
test
mov
ret
mov
cmc
test
scas
xchg
add
sti
mov
cwtl
ja
sbb
daa
mov
mov
ret
lret
aas
out
scas
test
pop
dec
int3
push
sub
mulb
daa
cmpsb
cmc
fxch
mov
dec
mov
jne
dec
inc
popf
mov
pop
lret
inc
in
dec
sbb
jne
addr16
flds
sub
sahf
arpl
xchg
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
add
jns
enter
iret
ret
jp
scas
es
push
push
iret
fcomip
jbe
mov
lret
xchg
mov
mov
push
pusha
mov
inc
outsb
jecxz
fisubl
loopne
or
outsb
or
movl
push
push
lret
popf
jge
or
repnz
jo
aaa
ljmp
jnp
adc
jno
or
js
sbb
cltd
cwtl
pop
enter
roll
fcomps
je
cmp
pop
mov
mov
sbb
lcall
scas
mov
lea
push
lret
add
pop
mov
fsubs
cmp
bound
in
ss
stos
xor
mov
inc
jne
ret
xchg
js
addr16
call
in
cmpsb
aas
stos
shrb
sub
btr
addr16
test
lret
xor
xor
mov
fildl
in
inc
or
or
in
dec
xor
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
sti
fmull
cmpb
sub
js
sbb
mov
dec
sbb
mov
pop
adc
mov
stos
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
addr16
outsl
push
jmp
incb
xlat
adc
rclb
mov
jae
loop
pop
stos
push
stos
mov
mov
dec
fistps
test
add
push
or
iret
adc
es
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivs
lods
mov
adc
jp
fisttps
mov
mov
stc
jle
jo
mov
pop
jb
add
dec
sbb
add
or
push
mov
ret
adc
push
ret
insb
pop
int3
jbe
daa
mov
cmp
out
imul
fs
inc
and
aas
ja
dec
int3
sub
sub
aad
inc
push
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
popf
adc
fdiv
arpl
lahf
xchg
cmp
mov
jae
fsubs
sub
push
inc
cmp
stc
bound
sub
test
inc
fmuls
cmpsb
mov
fists
icebp
int3
dec
inc
stos
jbe
sub
pop
jno
aad
iret
cltd
and
inc
mov
sahf
adc
pop
test
xchg
loop
in
dec
jne
mov
cmp
mov
mov
inc
cmpsb
pop
fwait
jmp
mov
sub
mov
cmovge
fdivrl
jecxz
enter
jne
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
repz
lea
mov
inc
adc
sub
stos
push
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
and
cmpsb
inc
cmpsl
fstp
in
out
mov
enter
sbb
adc
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
xchg
mov
inc
stos
jge
dec
aam
popa
xchg
shlb
lcall
ret
pop
pushf
pop
addr16
std
mov
fs
xor
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
scas
pop
bound
or
sbbl
xchg
cmc
mov
push
mov
cli
ss
lds
mov
or
lock
xchg
out
mov
enter
sbb
popl
inc
pop
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rcr
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
fistl
adc
add
inc
stos
int
pushf
mov
dec
push
dec
lods
jle
mov
sbb
cs
jnp
in
mov
je
lods
cmp
pop
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
jecxz
inc
cmp
lea
aaa
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
mov
mov
sub
mov
fsubr
mov
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
sbb
idivl
xor
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
lret
jecxz
gs
lret
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jecxz
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jbe
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
pop
xlat
mov
testl
iret
push
sbb
push
cwtl
sub
das
xchg
pushf
dec
and
xchg
lods
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
fsubl
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
das
movsl
mov
mov
stos
mov
ja
test
cmp
inc
mov
shr
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
subb
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pusha
lods
mov
mov
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
je
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
jno
jmp
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
shl
xchg
dec
outsl
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
dec
popf
scas
inc
movsl
fcompl
xchg
sbb
addl
add
push
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
sbb
xor
fld1
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
pop
mov
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
hlt
sub
mov
filds
inc
or
test
mov
mov
movsb
xlat
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
pop
dec
rcr
or
inc
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fadds
stc
leave
js
dec
lods
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
cmp
fdivrs
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
sub
push
ds
cmovge
call
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
jp
cmpsl
mov
fwait
lea
mov
inc
adc
sub
or
dec
mov
xchg
mov
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
test
fstp
sti
out
mov
enter
sbb
jne
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
sbb
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
popf
call
cmp
loopne
dec
pop
inc
shr
clc
sbb
and
lret
jecxz
gs
xor
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xbegin
mov
push
sbb
sub
mov
lock
inc
insl
fwait
in
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jns
mov
xor
mov
cli
mov
mov
add
subb
sub
das
ficompl
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmpsl
movsl
mov
mov
stos
mov
ja
iret
test
test
inc
mov
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
in
fildll
cmpb
mulb
cmpsl
bound
dec
enter
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
enter
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
daa
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
cmc
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
jo
jb
dec
outsb
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jl
scas
inc
movsl
fcompl
xchg
sub
addl
add
push
aas
cs
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
popf
and
xchg
jp
dec
enter
jo
cmp
sbb
in
ret
fld1
std
jge
xchg
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
aam
mov
sub
push
inc
and
call
cmp
cltd
enter
sti
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lds
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
mov
mov
test
enter
sbb
testl
fmuls
in
outsl
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pusha
mov
dec
and
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
orl
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
cmc
call
cmp
ret
loopne
dec
pop
inc
fwait
jmp
clc
sbb
and
lahf
lret
jecxz
gs
std
enter
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jae
mov
insl
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
pop
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
clc
push
push
fcoml
adc
ljmp
stc
jmp
js
or
xchg
xor
dec
and
test
pop
aam
scas
lahf
and
adc
movsl
cmp
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
mov
idiv
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sti
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
xlat
mov
mov
add
out
push
cwtl
sub
das
pushf
dec
and
xchg
sahf
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
inc
test
test
inc
mov
popf
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
movsb
sub
cmp
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
fidivrl
jo
jecxz
mov
inc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jb
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
add
int3
xor
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
sub
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
inc
popf
scas
inc
movsl
fcompl
xchg
or
mov
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
aad
mov
mov
dec
cmp
cs
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
mov
cwtl
jb,pn
jno
dec
push
xchg
add
mov
iret
add
mov
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
sbb
movsl
dec
insl
xchg
pop
xor
lcall
jb
mov
xor
inc
xor
fdecstp
js
sub
pop
js
andl
addl
add
push
aas
std
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
jbe
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
daa
xchg
mov
sub
iret
inc
and
call
cmp
cltd
enter
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
lahf
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
mull
dec
mov
ja
adc
ds
in
stc
jl
ret
push
sbb
inc
cld
cmc
movsl
lcall
ss
xchg
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
mov
insb
jge
adc
fwait
ss
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
or
jae
popf
sub
inc
inc
and
call
cmp
inc
dec
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
xchg
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
lahf
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
lahf
out
inc
inc
pop
mov
rorl
frstor
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
clc
dec
rolb
sbb
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
negl
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
lahf
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
lahf
out
inc
inc
pop
mov
rorl
frstor
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
clc
dec
rolb
sbb
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
sti
rcrl
imul
fwait
lea
mov
inc
adc
sub
rcrl
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fmull
fisttpl
out
mov
enter
sbb
sub
inc
mov
in
adc
xchg
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
sbbl
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
cmpsb
call
cmp
ret
loopne
dec
pop
inc
mov
in
and
gs
cld
enter
int
addr16
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
fprem
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pushf
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
out
mov
mov
sbb
sbb
or
sbb
push
cwtl
sub
das
and
fwait
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
pop
addb
xchg
pop
lock
adc
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
sub
add
push
or
pop
sbb
push
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
int3
push
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
adc
mov
sti
mov
mov
add
ljmp
cwtl
sub
das
int3
pushf
dec
and
xchg
jge
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
adc
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sbb
lcall
sub
shrl
inc
mov
cmpsb
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
nop
fildll
add
mov
bound
dec
inc
sub
add
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
sub
dec
or
mov
dec
les
mov
dec
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
mov
xchg
mov
push
bound
aam
mov
cmp
ljmp
lods
fnsave
in
xchg
and
cltd
mov
jns
outsl
inc
sbb
add
mov
pushw
mov
mov
adc
test
push
adc
cmc
sbb
pusha
lahf
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
inc
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
es
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jbe
jo
jb
dec
out
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
stc
or
sbb
or
push
aas
ja
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
in
test
sub
cmp
sbb
cmc
ret
fld1
std
jge
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
and
sub
push
mov
cmovge
fdivrl
fs
enter
mov
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
dec
push
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
movsl
lea
ss
mov
enter
sbb
cmp
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
les
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
orl
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
jmp
repz
ret
loopne
dec
pop
inc
ljmp
rcrb
sub
int
cmc
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
scas
mov
pop
test
mov
inc
mov
mov
add
mov
cwtl
sub
das
insb
pushf
dec
and
xchg
add
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
ja
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
stc
movsl
mov
mov
stos
mov
ja
fs
test
inc
mov
stos
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
fistpll
mov
bound
dec
in
sub
cmp
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
imull
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
sbb
jno
xor
cltd
push
adc
ret
outsb
pop
dec
jge
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
loop
xchg
dec
xchg
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
pusha
or
loopne
add
push
aas
dec
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
cwtl
popl
lahf
sbb
adc
adc
test
sub
cmp
sbb
mov
jge
sbb
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
add
and
call
cmp
inc
popl
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
sahf
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ficompl
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xchg
fnsetpm(287
out
mov
enter
sbb
adc
inc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
and
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
idivl
jne
fucomip
repz
ret
loopne
dec
pop
inc
xchg
jmp
clc
sbb
and
lret
jecxz
gs
push
enter
int
push
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
call
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
bsr
popa
mov
ret
mov
add
mov
xor
pushf
dec
and
xchg
stos
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
push
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
psubusb
popf
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
sbb
cwtl
outsb
mov
movl
mov
push
mov
sarl
aas
out
and
adc
and
or
mov
mov
imul
mov
push
xchg
mov
pop
adc
sbbl
jns
pop
mov
pop
fwait
mov
xchg
mov
mov
add
stc
push
cwtl
sub
das
dec
pushf
dec
and
xchg
ror
pop
stos
fsubr
test
xchg
leave
pusha
fldcw
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
aam
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
inc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sti
fildll
mov
fldt
arpl
cmp
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
les
stos
push
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
cmp
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
popf
jmp
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pusha
loop
xchg
dec
xor
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jecxz
scas
inc
movsl
fcompl
xchg
std
or
xor
add
push
aas
xchg
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
in
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
test
sub
sub
dec
inc
and
call
cmp
enter
cld
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
movsb
push
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
dec
lea
in
mov
mov
test
enter
sbb
testl
fmuls
in
ret
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
sub
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
subl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
ret
call
cmp
loopne
dec
pop
inc
ss
clc
sbb
and
lret
jecxz
gs
lret
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
addr16
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
std
mov
pop
data16
mov
pop
mov
mov
add
fldcw
cwtl
sub
das
setl
push
jne
dec
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pushf
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
fldcw
cmp
inc
mov
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
xchg
mov
mov
bound
dec
arpl
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
cli
lods
mov
mov
xchg
test
dec
mov
rolb
outsb
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
in
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
cmp
bnd
int3
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
psrad
jb
dec
jne
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ficomps
pop
cld
xchg
dec
or
jg
add
push
aas
stos
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
aad
mov
mov
dec
cmp
cs
aam
pop
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
mov
cwtl
jb,pn
jno
dec
push
xchg
add
mov
iret
add
mov
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
sbb
movsl
dec
insl
xchg
pop
xor
lcall
jb
mov
xor
inc
xor
fdecstp
js
sbb
pop
cwtl
xchg
dec
or
xor
add
push
aas
sbbl
je
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
push
push
sub
cmp
sbb
cs
fld1
std
jge
sub
lock
mov
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
inc
xchg
mov
sub
sub
lahf
jle
dec
push
fdivrl
jno
enter
push
int3
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
or
imul
fwait
lea
mov
inc
adc
sub
insb
push
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
out
mov
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
ja
mov
in
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
fsubr
repz
ret
loopne
dec
pop
inc
fs
clc
sbb
and
jecxz
gs
sbb
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
sar
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
in
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
les
pop
insl
mov
xor
cmp
sbb
push
cwtl
sub
das
pushf
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
shll
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
dec
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
outsl
movsl
mov
mov
stos
mov
ja
dec
test
test
inc
mov
jbe
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
mov
scas
inc
cmpb
jnp
lret
adc
push
mov
ss
out
clc
cld
and
cmp
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
pop
movsl
mov
mov
stos
mov
ja
dec
push
cmp
inc
mov
jp
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmp
scas
mov
imull
mov
mov
bound
dec
sbb
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
add
fisubl
cmpsl
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
fwait
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
jno
cmp
adc
ret
outsb
pop
dec
insl
jmp
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mul
jo
jb
dec
daa
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
and
scas
inc
movsl
fcompl
xchg
aam
addl
add
push
aas
out
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
popl
loope
mov
and
xchg
jp
dec
or
fdivrs
jg
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
test
sub
sub
enter
jle
dec
pop
call
cmp
inc
cmpsl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
outsl
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
lahf
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
lahf
out
inc
inc
pop
mov
rorl
frstor
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
clc
dec
rolb
sbb
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
dec
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
out
push
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
decb
fistpl
mov
mov
test
enter
sbb
and
inc
ret
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
shll
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
xorl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
jne
dec
call
cmp
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
gs
outsl
enter
int
ret
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jmp
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
out
mov
cmc
mov
xlat
mov
mov
add
scas
push
cwtl
sub
das
cmp
jne
adc
pop
stos
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lahf
movsl
mov
mov
stos
mov
ja
lea
cmp
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
add
scas
mov
imull
mov
mov
bound
dec
imul
xor
xchg
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
fsubrl
xor
sbb
fucomi
jge
shl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
insb
loop
xchg
dec
arpl
adc
pusha
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
rcrb
addl
adc
addl
add
push
aas
rcrb
mov
ret
xchg
sbb
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
cwtl
and
xchg
jp
dec
and
push
sub
cmp
sbb
jmp
fld1
std
jge
andb
addr16
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
jle
jb
mov
aas
sbb
ss
sbb
mov
mov
mov
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
adc
sbb
jecxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
rclb
sbb
mov
sbb
dec
and
xchg
jp
dec
loop
push
sub
cmp
sbb
iret
ret
fld1
std
jge
or
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmp
jae
fsubrs
xchg
mov
add
and
call
cmp
cltd
enter
into
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
daa
popf
sti
jp
cmpsl
mov
fwait
lea
mov
inc
adc
sub
in
push
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
rcrl
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
jmp
test
inc
test
inc
imul
sub
xchg
hlt
icebp
cmpsl
fwait
and
push
jge
xor
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
xor
in
xchg
in
mov
movsl
inc
push
mov
or
mov
lock
popf
sti
cmp
imul
fwait
lea
mov
inc
adc
sub
xchg
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cwtl
lea
cmp
mov
mov
test
enter
sbb
lds
inc
dec
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jb
mov
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
or
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
aaa
call
cmp
ret
loopne
dec
pop
inc
stc
jmp
clc
sbb
and
lahf
mov
int
shll
inc
lret
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
aaa
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
es
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
adc
mov
jg
mov
push
mov
mov
add
push
push
cwtl
sub
das
rcrb
cmc
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
popa
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
lcall
sub
shrl
inc
mov
scas
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
insb
sub
cmp
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
fsubrl
fimull
xchg
test
dec
mov
js
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
lods
mov
mov
push
adc
ret
outsb
pop
dec
aam
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
dec
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jno
scas
inc
movsl
fcompl
xchg
and
addl
add
push
aas
sub
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
cmp
jmp
sbb
shlb
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
sub
push
cmovb
lahf
jle
dec
clc
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
sti
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jbe
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
xor
mov
mov
test
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
add
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
push
call
cmp
ret
loopne
dec
pop
inc
call
in
and
lret
jecxz
gs
cmpsl
enter
int
shlb
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xor
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
loopne
mov
test
jbe
and
cmp
sbb
push
cwtl
sub
das
ficompl
aas
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
or
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
jns
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
ffree
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
movsl
jp
mov
pop
fdivl
sbb
movb
stos
popf
and
jne
sub
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
fmulp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jo
mov
mov
stos
mov
ja
mov
shrl
inc
mov
add
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
push
sub
lret
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jo
mov
mov
xchg
test
dec
mov
lock
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
fsubrl
xor
sbb
rol
fucomi
jge
rol
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
popa
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop
xchg
dec
and
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
and
pop
int
andl
addl
add
push
aas
stos
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
das
test
sub
cmp
sbb
pop
ret
fld1
std
jge
adc
lock
mov
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
or
mov
sub
filds
lahf
jle
dec
pushf
call
cmp
inc
xchg
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
in
push
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
bound
fildl
je
cli
enter
sbb
iret
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
dec
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
or
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
out
idivl
addr16
cmp
inc
pusha
jmp
clc
sbb
and
lahf
lret
jecxz
gs
pop
enter
int
addr16
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
clc
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ror
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jb
mov
jecxz
mov
rorb
cmp
add
mov
cwtl
sub
das
lds
std
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
imul
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
xchg
test
test
inc
mov
stos
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fcmovu
scas
mov
imull
mov
mov
bound
dec
stos
sub
xchg
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lcall
mov
jo
pop
dec
mov
dec
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
enter
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
or
jno
test
mov
push
adc
ret
outsb
pop
dec
sub
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
sbb
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
incb
stos
loopne
addl
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
jle
jb
mov
aas
sbb
ss
sbb
mov
mov
mov
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
adc
sbb
jecxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
shrb
mov
lock
dec
sbb
insb
and
xchg
jp
dec
popa
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jns
mov
sub
iret
inc
and
call
cmp
cltd
enter
cs
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jb
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
push
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
das
push
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
adc
mov
mov
test
enter
sbb
in
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xor
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
or
imul
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rcr
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
fistl
adc
add
inc
stos
int
pushf
mov
dec
push
dec
lods
jle
mov
sbb
cs
jnp
in
mov
je
lods
cmp
pop
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
jecxz
inc
cmp
lea
aaa
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
xchg
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
cmpl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
shr
repz
ret
loopne
dec
pop
inc
daa
jmp
clc
sbb
and
lahf
lret
jecxz
gs
xchg
enter
int
or
inc
leave
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jmp
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
ret
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
mov
mov
test
ret
mov
add
fldt
cwtl
sub
das
out
pushf
dec
and
xchg
sahf
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
add
lcall
sub
push
cmp
inc
mov
insb
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stos
fildll
sub
mov
bound
dec
sub
stc
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
loop
xchg
dec
add
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
popf
popf
scas
inc
movsl
fcompl
xchg
addl
add
push
aas
xchg
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
andl
mov
mov
and
xchg
jp
dec
ljmp
cmp
sbb
aas
ret
fld1
std
jge
pushf
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
test
mov
sub
or
and
call
cmp
inc
cwtl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
ret
mov
test
neg
dec
sbb
mov
idiv
je
mov
adc
inc
inc
inc
sbb
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
in
movl
imul
js
fistl
xchg
push
cmp
pminub
shlb
cmpsb
pop
fwait
insb
xchg
mov
sub
and
cmovge
call
cmp
enter
popl
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ret
addl
mov
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
movsb
out
mov
enter
sbb
inc
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
aad
mov
es
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
fucomip
jl
adc
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
call
cmp
pop
inc
lcall
dec
lahf
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
mov
sbb
xor
or
sbb
push
cwtl
sub
das
adc
push
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
shll
iret
iret
cmpsl
mov
imul
adc
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
xor
shrl
inc
mov
loopne
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
test
scas
mov
imull
mov
mov
bound
dec
aaa
sub
mov
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
imul
sahf
cmpsl
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
out
test
xor
sbb
cmpsb
fucomi
jge
shll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
jno
subb
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
stos
cmp
pop
inc
dec
push
iret
cmpl
jae
lret
lock
fiadds
dec
inc
push
or
push
add
int
movsb
pop
pushw
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
daa
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
int3
loop
xchg
dec
shrl
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
test
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
push
pop
enter
mov
cmpsb
or
int
inc
sbb
pop
inc
test
iret
repz
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
inc
xor
repnz
lcall
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
and
fcompl
xchg
daa
or
addb
jbe
dec
fsubrl
sbb
aas
xor
mov
ret
shlb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
gs
int
mov
add
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
es
xor
mov
sbb
insb
push
push
xchg
jb
inc
sub
lret
addr16
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
jmp
push
xchg
mov
fstps
fstps
sarl
rol
dec
pusha
popf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
cmpsl
mov
mov
jmp
int
xchg
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
inc
xor
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
ds
mov
sub
cmp
lahf
jle
dec
out
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jne
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
lret
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
push
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
lods
cltd
and
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
adc
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
xor
popf
push
jnp
stos
arpl
push
jl
jnp
hlt
stos
js
or
add
sub
cwtl
ret
cmc
adc
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
inc
aaa
jne
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
orb
mov
mov
mov
test
enter
sbb
ss
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
sub
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
shlb
mov
jmp
fbstp
xlat
rclb
in
cmp
lcall
inc
mov
xor
and
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
imul
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
rcrb
inc
movb
inc
pop
mov
scas
jp
mov
sub
pop
push
shl
loop
test
mov
loop
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
inc
ss
push
mov
mov
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
je
repz
ret
loopne
dec
pop
inc
out
jmp
clc
sbb
and
lahf
lret
jecxz
gs
mov
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
sub
sbb
in
outsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
ja
add
bound
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
mov
jb
xchg
out
movsb
popf
and
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
inc
mov
adc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
cld
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
sub
fwait
add
dec
rolb
jl
or
dec
jmp
inc
test
or
nop
notl
mov
jecxz
lods
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
dec
xor
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jno
mov
sbb
mov
and
cmp
sbb
push
cwtl
sub
das
rcrb
xor
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
lds
les
test
cmp
mov
pop
icebp
imul
les
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
dec
mov
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
aam
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fmul
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
call
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
sbb
xlat
cs
dec
sarb
jns
sub
les
jnp
ret
ret
sbb
mov
stc
insl
lsl
call
bound
in
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
dec
xor
shll
fidivrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
mov
mov
stos
mov
ja
scas
test
test
inc
mov
insb
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
enter
pop
pop
adc
addl
frstor
mov
push
inc
or
push
outsb
mov
push
fidivrs
and
fwait
and
sbb
xchg
jg
ret
test
movsl
jg
enter
push
adc
add
mov
jno
orl
lods
add
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lahf
fildll
push
mov
mov
bound
dec
xchg
sub
in
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
iret
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
scas
call
jnp
stos
gs
lahf
and
cltd
add
mov
inc
push
int3
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
dec
xor
add
ret
cmpsb
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sub
mov
mov
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
push
out
enter
and
test
sub
fwait
inc
jecxz
push
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
jo
ret
imul
test
gs
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
es
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
jmp
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
pop
xchg
mov
rcll
sbb
leave
rclb
fucom
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
xchg
jecxz
push
out
in
pop
add
adc
repz
and
int
inc
sub
push
fs
dec
xor
push
and
lret
cmpsl
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
sbb
pop
jnp
adc
lcall
push
popf
pop
sub
mov
jbe
and
jmp
cmp
popa
adc
xlat
in
iret
mov
or
ds
and
mov
fucomi
push
push
js
jae
movsb
mov
lahf
insl
adc
mov
xchg
aas
mov
cmp
leave
jecxz
je
jbe
pop
xchg
out
mov
fbstp
dec
sahf
loop
pop
cmp
loop
fsubr
stc
mov
in
mov
or
add
repz
pusha
lahf
mov
insb
mov
bnd
pop
lcall
xchg
mov
lock
addr16
add
nop
in
out
les
adc
hlt
shlb
push
ss
sub
push
jp
pushf
cmp
cmp
scas
push
mov
scas
xchg
loope
and
mov
push
stos
jecxz
addr16
xchg
cli
mov
pushf
push
sbb
pop
or
or
mov
inc
loopne
pop
cmpsl
xlat
fmulp
add
add
dec
loop
push
daa
xchg
xor
xchg
test
out
sbb
or
xchg
mov
fbstp
pop
lea
cltd
lea
int3
jb
lea
mov
push
xchg
enter
enter
mov
add
insl
test
or
mov
sub
or
xor
popf
sbb
iret
int
sub
std
clc
add
pop
dec
push
xor
ja
inc
add
cmc
cld
rorb
test
and
mov
fistl
xchg
xchg
xlat
dec
sub
and
adc
popf
inc
pusha
stos
jae
sbb
dec
pop
jae
or
push
fstps
pushf
data16
fcmovb
xorb
cs
inc
pop
adc
test
inc
push
sbb
pop
fcmovnb
call
iret
testl
rcrb
or
pushf
out
cmpsb
call
les
jo
lds
in
push
push
js
jae
movsb
in
mov
pop
sahf
mov
cmp
int3
sbb
mov
lods
lcall
push
jecxz
xchg
cmp
repnz
bound
inc
mov
fisubl
imul
jbe
rolb
in
ret
cmp
dec
ljmp
test
ret
test
dec
jno
cmp
outsl
sub
ljmp
sub
fildll
mov
sbb
fisubl
je
and
pop
inc
mov
mov
dec
cmpsl
push
cmc
xchg
inc
xchg
dec
mov
test
popf
inc
sbb
mov
and
push
nop
adc
inc
xchg
repnz
inc
mov
aas
cmpsl
es
mov
mov
xor
addr16
popf
push
mov
cmp
in
jbe
cli
mov
mov
fwait
pop
sbb
inc
cltd
mov
hlt
js
inc
out
shlb
add
idivl
jmp
lret
insl
test
mov
mov
sub
or
xor
inc
fnstsw
add
out
filds
leave
push
push
dec
ret
fstl
cmp
push
sub
fdivs
add
mov
test
and
or
ds
nop
adc
push
idivb
cltd
lret
lcall
sbb
mov
popf
push
call
scas
jb
ret
lock
fwait
push
mov
push
push
mov
insl
lea
gs
inc
jecxz
inc
mov
aad
mov
mov
sti
fisubrl
jge
xchg
movsl
inc
xchg
dec
xchg
pop
stos
adc
mov
into
addb
mov
or
in
mov
jnp
inc
push
mov
or
mov
fcoml
cmp
enter
cmpsl
lahf
mov
inc
push
in
rolb
inc
leave
sbb
loop
pop
inc
jb,pt
inc
xor
int
jle
xor
adc
dec
mov
push
cmc
pop
les
pop
pop
jmp
pop
or
cmp
push
hlt
ds
and
cmc
cmp
mov
idiv
add
lds
xchg
adc
gs
push
mov
rcll
jp
aad
dec
lods
lret
fists
or
jl
repnz
movsb
fistps
je
sahf
das
xchg
stc
cli
in
test
or
shlb
and
jb
cmpsl
stos
ja
mov
mov
lds
push
pushf
xor
sbb
jo
int
push
jp
or
jge
iret
mov
or
mov
mov
rcll
jmp
xchg
add
sub
lret
sub
fsubl
jns
xlat
push
pop
out
enter
cmpsl
push
je
xchg
mov
mov
mov
xchg
lea
lahf
dec
pop
xor
gs
test
je
inc
pop
push
addr16
adc
sbb
stc
clc
jp
add
mov
jo,pn
dec
mov
mov
lea
sub
jne
lds
push
cli
mov
inc
mov
mov
xchg
call
inc
popf
lret
mov
lock
test
fsubrl
nop
cmp
les
mov
into
jle
jp
sub
test
jmp
mov
push
fists
stc
cmc
xor
fcmovbe
cmp
jge
add
mov
or
in
mov
jnp
inc
push
mov
or
mov
les
cmp
enter
cmpsl
lahf
mov
repz
fwait
outsl
jge
pusha
xchg
sub
pop
sub
push
push
jb
dec
mov
cwtl
sbb
shrb
in
cmc
hlt
clc
movsb
test
add
or
sarb
les
ret
push
jmp
les
mov
into
add
sub
leave
inc
sbb
cmpb
sub
aad
leave
sbb
and
les
ljmp
mov
lods
xchg
fisubl
ja
test
pop
or
jge
pop
push
xchg
aam
mov
or
sbb
mov
shrl
dec
movsb
aad
xor
xor
fistpll
xchg
pop
scas
loope
push
in
rorb
in
sbb
push
sbb
mov
jo
mov
mov
mov
fwait
mov
cmp
xor
iret
pop
xchg
cmp
hlt
jmp
pushfw
pop
icebp
dec
mov
faddl
and
or
enter
cmp
xchg
sub
fsubr
mov
dec
fildll
mov
mov
scas
stc
mov
out
mov
inc
icebp
xchg
sti
daa
mov
test
testl
popf
mov
pop
dec
xor
jmp
or
scas
int3
and
sbb
movsl
add
fwait
sbb
adc
push
test
mov
pushf
fldcw
js
pop
mov
imul
inc
les
sbb
leave
inc
lods
mov
add
push
jmp
ficoml
stos
fnsave
xchg
cmpsb
pop
jl
add
mov
xchg
call
or
fisubrl
mov
loop
sbb
add
test
or
dec
loope
addb
push
mov
push
pop
xor
stos
pop
call
sbb
cmpsl
sbb
lea
push
mov
rolb
shr
sbb
adc
scas
popa
and
test
int
or
mov
mov
shl
mov
pop
std
jmp
test
cmp
leave
enter
push
jbe
add
stos
cmc
dec
sbb
imulb
adc
movsl
mov
rcrb
ret
lahf
ficompl
fisubl
loop
and
scas
pop
pop
scas
cmpsl
mov
popf
imul
adc
or
lds
cwtl
lock
dec
mov
pop
lahf
dec
mov
and
fldcw
fucomi
push
nop
or
scas
inc
xchg
cli
std
and
adc
or
push
sbb
mov
mov
les
jp
ret
and
pop
in
lods
cmp
push
popf
fldt
sub
aas
data16
cld
xor
push
and
add
movsb
or
popf
enter
adc
dec
add
stos
mov
add
mov
loopne
inc
sbb
adc
mov
mov
push
sub
lds
or
leave
fwait
repnz
lds
clc
scas
inc
in
push
test
xchg
test
mov
dec
scas
fistpl
ja
fldt
int
arpl
mov
lock
mov
pushf
mov
sbb
or
inc
mov
xorl
sbb
sbb
aaa
fisttpll
sbb
inc
sbb
scas
in
fisttpl
jnp
popf
mov
loop
loop
push
xchg
movsb
inc
pop
imul
clc
jo
push
pop
rcrl
arpl
addr16
enter
ret
enter
in
sbb
push
out
sahf
mov
cmp
aaa
dec
lods
pop
mov
fsubrl
or
rorb
sub
js
test
xor
add
xor
movsl
mov
and
jle
fwait
lahf
inc
mov
je
mov
loopne
inc
sbb
into
sub
popa
mov
add
mov
mov
gs
sub
adc
fsts
sbb
and
jp
jae
sbb
dec
in
in
cmpsl
xchg
fcoms
mov
test
fildl
dec
and
hlt
xchg
add
call
push
xchg
cmp
add
pop
pop
pop
aaa
mov
mov
push
jg
xor
idivb
pop
adc
lret
or
adc
std
decl
outsl
testl
lcall
repnz
test
gs
fstpl
pop
sub
push
stos
add
adc
jno
lahf
test
insb
ffree
adcl
push
loopne
daa
jmp
pop
mov
popf
sbb
shl
sub
test
cmpsl
inc
mov
scas
mov
sbb
mov
cmovge
imul
mov
data16
cltd
sbb
cwtl
lret
inc
push
pushf
mov
lds
nop
lds
or
sub
push
and
pushf
ret
inc
mov
stc
inc
test
pop
dec
mov
xchg
test
lods
or
addb
add
fisubrl
pop
sahf
xchg
push
adc
dec
or
jae
xor
mov
mov
or
mov
icebp
sbb
loop
xchg
pop
sub
or
aas
fdivs
sbb
adc
arpl
addr16
sarb
scas
fs
add
xchg
mov
fists
mov
lds
xchg
fs
lret
stos
mov
aad
pop
push
int
jle
push
dec
addl
into
popa
mov
mov
loopne
mov
cmp
lahf
lret
jecxz
and
cmpsl
enter
loop
pop
adc
push
add
insl
mov
sbb
cwtl
lret
mov
notl
out
inc
in
lea
inc
sub
das
lret
fucomp
jae
jge
xchg
mov
dec
je
and
dec
add
scas
and
mov
pop
stos
xchg
mov
rolb
or
push
sbb
inc
movl
ss
mov
dec
shll
xchg
push
cmp
ud1
sbb
sbb
test
xchg
cmp
pop
cli
jne
mov
pusha
out
lcall
mov
sbb
sbb
es
leave
adc
adc
mov
dec
mov
sbb
cmp
aaa
ret
inc
xor
pop
popa
push
xchg
sbb
fstl
pop
add
push
je
jecxz
enter
loopne
je
cs
cmp
jge
pop
mov
repnz
movb
jae
fadd
mov
movsb
fisubl
mov
xor
dec
mov
icebp
cld
xchg
insb
orl
nop
dec
bound
addb
mov
and
les
nop
sbb
mov
in
movsl
sarl
adc
push
push
dec
je
sbb
rcrb
fwait
or
mov
or
lcall
jne
pop
push
lea
xchg
imul
cmpsl
xchg
and
sbb
pop
out
int3
fnstsw
fwait
insl
ds
mov
jl
es
int3
sbb
rorb
inc
shl
nop
fwait
int3
popa
fstp
gs
sub
cmp
pop
inc
pop
or
rorl
loopne
jnp
push
mov
or
roll
mov
repnz
adc
jmp
dec
sbb
lods
cmp
sbb
or
cmp
push
cli
lods
nop
push
sub
mov
mov
insl
out
into
cmp
dec
popf
in
dec
or
xchg
mov
dec
pop
dec
scas
add
mov
cmpsl
lahf
push
inc
lcall
cmp
lods
jle
mov
inc
lahf
fists
addl
sbb
xlat
in
pop
mull
mov
xchg
call
stos
mov
je
inc
pop
cmc
push
inc
xchg
leave
movsb
inc
jne
mov
movsl
test
fwait
push
and
jns
lahf
or
pop
andl
add
sbb
mov
lock
mov
adc
mov
fidivl
push
stos
aam
neg
movsb
or
sub
leave
sarl
or
roll
in
ret
ret
jo
adc
cmpsb
or
or
push
leave
cmp
add
loop
les
std
cltd
pop
dec
movsb
leave
push
notl
push
jmp
movsl
andl
mov
hlt
mov
in
es
mov
adc
pop
scas
mov
dec
mov
leave
stc
lock
fs
xchg
leave
pop
lds
jle
scas
push
fcomps
jo
popa
or
lret
test
push
mov
add
xchg
int
shlb
xor
xchg
clc
stos
cld
sub
cmp
out
push
mov
icebp
pop
cmp
push
repnz
aaa
popf
mov
imul
adc
je
and
gs
mov
cmc
xor
push
das
or
mov
push
lret
sub
mov
sahf
jmp
add
mov
mov
jmp
jecxz
mov
mov
sbb
rcrl
cmpsl
mov
imulb
xchg
addr16
mov
cmp
xchg
lret
xchg
push
test
push
in
xlat
int
pushf
mov
jno
xchg
xor
or
pop
je
ret
add
push
andl
sbb
push
mov
add
mov
movsb
push
jbe
adc
pusha
lret
sub
jmp
pop
xchg
leave
jecxz
xchg
scas
dec
gs
testl
mov
pushf
ds
sub
or
aam
fwait
jmp
mov
out
rcr
xchg
insb
in
pop
jnp
jnp
sbb
sbb
int3
xor
dec
xchg
jns
insb
aaa
lret
dec
sbb
sbb
dec
sub
inc
test
pop
dec
inc
pop
push
dec
repz
orl
mov
je
rcrb
mov
mov
icebp
movl
fnstcw
cmp
gs
cmp
and
iret
xor
js
mov
nop
stos
shrl
mov
lret
inc
jmp
xor
rcrl
roll
sbbb
aam
push
xlat
pop
adc
test
add
dec
or
dec
lods
sti
sbb
rclb
pop
dec
scas
pop
pushf
movsb
repnz
test
and
or
sbb
mov
fwait
push
dec
mov
inc
pop
lahf
xchg
mov
adc
jnp
push
aas
fwait
lret
in
mov
mov
xchg
mov
fnstcw
mov
mov
lock
or
cmp
xchg
sub
xchg
out
loope
dec
fmull
push
xchg
mov
dec
and
mov
mov
test
cmc
fistl
pop
mov
loope
push
xchg
mov
inc
sbb
test
lcall
pop
xchg
adc
cwtl
outsb
imul
push
lcall
mov
sub
cmc
sbb
inc
push
cld
test
mov
xchg
fcoms
sbb
xchg
test
cmp
test
jecxz
mov
leave
xchg
fwait
adc
or
dec
xchg
sbb
leave
inc
andl
cli
loop
sbb
leave
loop
xchg
dec
add
test
addl
mov
fwait
and
inc
cwtl
dec
xor
sar
cwtl
inc
gs
fnstsw
mov
ds
mov
sti
sti
and
or
loopne
hlt
pop
sub
and
cltd
fldpi
push
and
sarl
jns
fiaddl
les
fsubrs
popf
mov
cmp
jp
add
mov
lock
xor
or
or
sbb
leave
mov
add
dec
ljmp
cmpsb
push
mov
xchg
stc
test
fxch
push
test
fists
inc
jp
cmp
jae
lret
inc
sub
aad
cmp
shlb
mov
fcoml
rcrb
pop
xor
mov
in
lds
jg
jmp
lock
test
in
cmp
mov
and
rcl
jb
gs
sbbb
in
mov
mov
or
scas
lea
adc
jle
sbb
loopne
hlt
je
nop
enter
in
faddp
mov
inc
mov
insl
sbb
fdecstp
ja
int
aas
test
rclb
jns
pop
mov
test
add
mov
scas
aad
mov
cltd
je
lock
lock
adc
fadd
xor
popa
fwait
ret
imul
stos
lds
push
rcrb
jbe
mov
movl
fucomp
stc
dec
ss
fcmovu
dec
mov
sahf
cmp
mov
cmpsb
xor
jb
xchg
pop
lds
xor
inc
xor
xor
xorl
add
jecxz
xchg
mov
jle
fwait
push
dec
mov
xor
and
shl
mov
lret
in
mov
mov
into
pop
mov
jp
aas
sti
sti
and
inc
fcomps
hlt
test
imul
imul
inc
cmp
jne
xchg
add
scas
mov
mov
test
add
mov
dec
lock
loop
hlt
out
adc
inc
mov
hlt
stos
std
cld
add
push
adc
ret
dec
leave
xorl
push
test
test
inc
mov
shr
xor
outsb
pop
lret
jecxz
mov
ret
sub
incl
test
test
mov
or
or
or
sbb
ret
fbld
js
lods
das
pop
popf
sbb
sbb
cltd
test
add
add
add
rcrl
fsubs
adc
mov
add
fidivl
ret
push
mov
xor
loop
cmp
jb
pop
mov
gs
popf
mov
mov
arpl
daa
sub
mov
push
dec
mov
lcall
xorb
and
xlat
inc
sbb
jge
loopne
xor
loop
enter
popa
mov
mov
pop
stos
loop
iret
inc
adc
pop
or
leave
mov
inc
stos
cwtl
adc
cs
sub
and
ja
loope
push
fwait
iret
mov
cmp
js
or
out
pop
or
je
sbb
test
test
mov
mov
lret
jnp
mov
stos
cmpsl
stc
test
lods
shlb
pusha
mov
dec
mov
and
rclb
push
adcl
inc
dec
aam
pop
mov
and
dec
jmp
mov
or
leave
push
out
xor
pop
xchg
cmp
pop
jp
gs
out
call
popf
xchg
aas
mov
sub
cwtl
flds
movsb
xor
xor
cltd
adc
xor
pop
mov
leave
std
int
jp
cmp
movsl
andnps
loope
stos
clc
sti
mov
jb
jmp
dec
pushf
stc
imul
filds
sub
int
sbb
cmp
xlat
leave
sbb
and
dec
push
jnp
pop
clc
fisttps
inc
lods
mov
popa
outsl
sbb
cmp
mov
test
in
aas
pop
lock
inc
jl
xchg
adc
push
leave
cmp
pop
xchg
jnp
xor
xor
push
lret
test
xchg
clc
mov
adc
add
subl
stc
xor
xor
or
negb
jp
sbb
cmp
mov
xlat
or
mov
xchg
pop
pop
cwtl
enter
lcall
mov
cwtl
fldcw
cmpsb
jne
mov
add
jle
push
pop
test
add
in
and
mov
aam
test
out
int
sbb
in
and
lret
jecxz
into
inc
sbb
inc
and
add
rcrl
subb
cltd
inc
aad
cli
cli
icebp
mov
lret
mov
jb
lret
ficoms
jae
sub
insl
decb
mov
sub
pop
push
or
sbb
jno
movsl
sbb
mov
int3
aad
cmp
stos
xor
xor
lcall
xor
mov
adc
addl
adc
rcrb
dec
xor
shl
mov
xchg
mov
call
inc
enter
ret
mov
mov
xor
jo
cltd
mov
repnz
cmpsl
xor
test
outsb
je
cmp
imul
push
insl
mov
lods
mov
sub
fistl
inc
mov
or
jae
mov
imul
mov
mov
mov
dec
cmpsl
ret
test
dec
cmp
dec
icebp
xor
fisubrs
leave
pop
inc
stos
push
lods
and
xchg
imul
out
mov
loopne
icebp
dec
add
push
pushf
xor
xchg
test
movsb
fsubrl
loop
aas
mov
pop
inc
or
stos
pusha
fnsave
xor
jmp
fwait
lods
adc
inc
inc
mov
pop
sub
mov
sti
and
shr
testl
sbb
mov
out
lahf
pop
inc
cwtl
dec
notb
push
out
fwait
sub
sub
pop
dec
lahf
iret
cmpsl
ret
mov
xchg
fs
lds
or
xor
divb
pop
repz
adc
lock
out
dec
pop
cmp
adc
lret
lcall
mov
sti
fs
cwtl
jo
pop
incl
mov
add
pop
movsb
mov
push
test
mov
insl
add
pop
push
mov
dec
jg
xor
movsl
jmp
sbb
xlat
push
cmpsb
stos
push
mov
and
inc
and
jae
sbb
dec
pop
icebp
sbb
insl
ret
popa
cmpsl
ja
in
push
aas
or
jns
adc
mov
dec
push
jb
lods
pop
lods
shrl
mov
jmp
fucomi
repnz
rolb
cmc
js
loopne
das
cmpsl
xlat
add
add
mov
jl
daa
cld
int
je
xchg
sbb
or
push
sbb
fidivl
xchg
and
fisubrl
xchg
insl
lahf
insl
push
aad
jb
inc
mov
sbb
out
and
pushf
cmp
mov
adc
xchg
cmp
or
pushl
adc
inc
stos
shrb
ret
loopne
jno
mov
jecxz
movl
dec
mov
sub
js
testb
ret
test
dec
pushf
dec
and
shrl
push
test
add
mov
rcrl
scas
mov
cmp
mov
pop
imul
jp
sbb
jo
xchg
adc
lcall
inc
bound
rcl
cwtl
fcoml
ja
lods
jle
fld
adc
add
push
repz
cltd
inc
cwtl
push
ja
aas
inc
cmp
andl
rol
xchg
es
cmpsb
or
pop
inc
test
and
and
dec
inc
pop
mov
adc
repnz
jmp
pop
pop
fdivrs
jnp
jne
cmpsl
movsb
jl
das
xchg
dec
xorl
mov
mov
inc
sub
xor
mov
movsl
negl
nopl
mov
pop
adc
hlt
rcrl
push
adc
pop
roll
rcrb
or
mov
mov
and
mov
movsb
lds
nop
lds
sub
sbb
ret
xor
int3
lods
inc
imul
sahf
arpl
and
mov
test
xor
xchg
dec
imul
shlb
push
push
lret
icebp
lahf
fisttpl
add
or
lret
mov
pop
data16
leave
inc
icebp
sahf
sbb
cli
or
scas
xchg
adc
jae
loope
inc
sbb
daa
or
mov
out
jns
clc
and
pushf
xchg
push
bound
jnp
fcmovnbe
rclb
pop
xchg
fldt
inc
fwait
enter
or
es
aam
clc
repnz
mov
push
dec
xchg
pop
pop
mov
jbe
pop
jae
push
mov
cmp
mov
test
mov
xor
mov
adc
ret
lock
add
push
orl
add
jg
sbb
aad
mov
clc
sub
lcall
shr
xor
push
mov
xchg
test
or
push
cmp
adc
dec
sbb
push
cs
and
dec
pop
and
popf
mov
mov
push
lock
mov
aam
and
pop
and
fcmovu
fsts
mov
xlat
mov
jns
lret
and
into
adc
jg
pop
iret
pushf
sbb
xchg
scas
pop
pushl
push
lea
add
jae
inc
mov
or
inc
aas
push
adc
insl
dec
ffree
jge
ret
movsl
mov
cwtl
sahf
sbb
inc
fdivl
insb
loope
sub
mov
ret
imul
ja
pop
push
pop
jno
cmpsb
cmp
cld
das
enter
mov
mov
pop
imul
lds
xchg
repz
cltd
fildl
pop
lret
mov
in
lcall
repz
fwait
jns
call
sub
mov
xchg
test
cwtl
and
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
and
sbb
add
mov
or
aam
lret
xchg
sub
pop
loopne
lahf
movsb
bound
mov
push
fsubp
fld1
gs
outsl
scas
adcb
enter
adc
arpl
lea
test
out
aad
enter
js
ljmp
mov
lods
jno
rolb
fwait
loopne
icebp
aaa
test
jge
decb
fists
les
xchg
cmc
sub
xorl
aam
rcrb
sbb
scas
mov
std
mov
movsb
leave
inc
sbb
sub
lahf
fcmovbe
push
push
xchg
dec
sbb
fld1
sbb
cmp
mov
mov
adc
add
xor
test
push
test
cmpb
andl
inc
push
cld
pop
pop
scas
vpsubd
cmpsl
mov
addr16
sub
jo
rcll
push
out
mov
pop
test
jge
xchg
inc
test
daa
dec
enter
pop
test
mov
inc
cltd
out
clc
lock
jo
mov
push
sbb
dec
lock
fsubl
popa
sub
das
add
sub
and
roll
xor
std
cmpl
mov
in
orb
add
jne
decb
push
push
pop
fistps
lock
adc
imulb
int3
sbbb
push
lock
fcomi
and
and
hlt
push
jns
sub
mov
mov
push
in
pop
movsb
loope
cmp
sbb
xor
or
cmp
imul
into
push
lcall
enter
push
adc
ret
int3
mov
push
jns
sub
fwait
shrb
xchg
or
adc
or
sub
fidivl
stc
mov
scas
push
int3
lret
aam
cmp
xchg
sub
xchg
enter
cmovs
call
push
cmp
push
adc
add
scas
dec
push
or
cwtl
imul
outsl
inc
adc
lahf
dec
mov
lcall
mov
gs
mov
mov
xor
mov
bound
mov
adc
mov
sti
or
popf
ret
pop
fsubrl
adc
and
add
mov
lock
cmp
addr16
fisttpl
shll
ret
sub
retw
adc
xchg
or
and
ja
or
xchg
cmpsb
movb
jae
adc
rclb
mov
stc
in
shll
pop
leave
cmc
xor
inc
sbb
mov
fwait
push
dec
mov
mov
stc
repnz
or
add
mov
cmp
cmpsl
jnp
sbb
xchg
enter
mov
fstl
jle
inc
inc
mov
enter
and
loop
std
je
mov
addl
cmpsb
hlt
pop
adc
adc
int3
bound
imul
lret
loopne
sbbl
inc
cmp
push
shlb
je
inc
lock
pop
mov
imul
sbb
nop
shll
xlat
stos
lea
xor
mov
push
mov
push
negl
aam
pop
xor
lock
xlat
xchg
lret
add
xchg
mov
dec
das
test
daa
inc
movsb
cwtl
jb
aaa
mov
xor
add
pop
push
adc
cmp
into
mov
xor
or
scas
in
or
add
mov
mov
pop
rol
outsb
pop
push
sarb
or
or
popf
mov
cltd
leave
les
fidivs
int3
xchg
mov
push
push
sahf
faddp
inc
in
mov
aaa
sbb
test
jmp
push
pop
sbb
pop
sub
js
test
or
jle
pop
adc
mov
fneni(8087
inc
jle
fists
pop
push
popl
pushf
rcrb
loope
ret
bound
int
or
or
ret
mov
hlt
scas
icebp
idivb
mov
negl
inc
in
lods
dec
mov
sub
cli
lret
and
push
fiaddl
inc
les
cmp
lret
sbb
push
mov
fisubrl
cmpsl
and
mov
ret
mov
add
xchg
cmpsl
inc
pop
and
popa
mov
ljmp
icebp
jp
dec
xchg
in
pop
sub
iret
and
adc
xchg
fsubrs
cwtl
mov
rcll
out
pop
ret
inc
jge
dec
push
push
push
leave
push
insl
in
pop
xchg
jp
fdivrl
pop
fdivrl
jnp
pop
bound
inc
sbb
dec
xchg
lret
jecxz
mov
xchg
sub
cmpsb
enter
jmp
mov
sub
mov
sub
shrw
pop
pop
dec
mov
idiv
aas
out
and
jnp
sahf
mov
ffreep
ret
sbb
add
lret
lods
dec
cltd
lcall
dec
sarb
adc
test
push
cmp
dec
fisttps
mov
sti
stos
pop
js
data16
pop
sbb
stc
push
arpl
pop
dec
les
mov
add
xchg
loope
cmpsl
push
ja
mov
movsb
nop
jg
push
sub
xchg
add
movsb
fisttps
lcall
push
sbb
cmp
add
sti
or
es
lock
idivl
jmp
dec
les
adc
xchg
les
cmp
or
loope
prefetch
test
fsubl
loop
cld
dec
pop
orb
or
sbb
gs
das
out
cmc
xor
mov
cltd
jne
dec
les
movsl
popf
pop
push
addl
mov
push
pop
adc
or
mov
xchg
std
dec
inc
sbb
adc
fwait
jno
mov
rorb
and
jmp
xchg
sbb
loopne
mov
enter
adc
das
sbb
fildll
pop
fwait
jle
inc
aaa
mov
hlt
dec
cmp
pop
inc
xor
fwait
lods
pop
sbb
push
cmp
mov
fdivl
sti
pop
fstpl
cmp
push
mov
dec
repz
mov
mov
xchg
sti
mov
dec
test
dec
sarb
inc
out
mov
ret
test
sahf
mov
movsb
jp
cwtl
add
jle
cmpsl
lock
lret
cmc
outsl
fwait
cltd
pop
adc
int3
xor
test
mov
push
inc
mov
test
cli
outsl
mov
sbbl
inc
push
idivl
testl
movsb
or
nop
dec
pop
jl
fwait
loopne
jb
mov
in
insb
es
sti
xor
xchg
ffreep
insl
adc
aas
scas
push
orl
loopne
jne
dec
inc
test
pop
pop
lret
xchg
imul
int3
pop
dec
in
mov
and
xchg
dec
sbb
jbe
movsl
insb
inc
dec
xchg
xchg
push
adc
imul
sub
sub
lcall
cmp
dec
push
aas
mov
pop
inc
sbb
scas
cwtl
sub
js
jg
lret
insb
ss
int3
loop
add
add
mov
jo
mov
fdiv
jp
dec
cwtl
dec
and
push
jae
ret
and
cmp
in
and
into
mov
push
mov
dec
inc
cmc
inc
into
sbb
dec
xchg
enter
xor
stc
jle
adc
lods
push
and
shll
fisubrs
and
push
inc
mov
pop
loopne
hlt
push
xchg
pop
adc
shll
sbb
in
adc
adc
jbe
pop
rclb
mov
sti
addr16
orb
or
mov
jbe
mov
lret
inc
fidivs
xchg
sbb
pushf
dec
mov
mov
push
sbb
popf
jg
dec
cmpsl
jnp
outsl
rcrb
push
push
aaa
imul
dec
int
inc
dec
mov
push
cmp
fdiv
fimull
pushl
xchg
pop
xchg
mov
shll
popl
cmp
mov
add
xchg
mov
mov
push
sub
aaa
jle
mov
inc
mov
insl
fwait
hlt
imul
pop
and
and
and
and
arpl
inc
mov
inc
out
not
idivl
roll
clc
je
mov
xor
jp
cwtl
fdivl
aaa
add
adc
mov
hlt
jg
inc
jmp
nop
cmp
arpl
ret
movsl
fsubrl
je
jb
sbb
xchg
xlat
inc
sub
and
mov
mov
lods
push
cmp
pop
cltd
clc
pop
outsb
push
inc
in
mov
add
mov
add
or
fdivrs
cli
loope
aad
mov
mov
in
jne
lock
or
inc
sahf
pop
aas
daa
xchg
in
pusha
add
mov
lea
pop
ds
lret
cmp
or
or
movsl
dec
cmc
test
les
mov
pop
es
rcl
sub
xchg
fstpt
jns
jl
pop
das
jns
and
xor
loope
xorl
xchg
dec
mov
inc
sub
jo
cmpsl
xchg
leave
jp
xor
enter
inc
dec
out
repz
cmp
xor
lcall
adc
sbb
add
loop
add
dec
mov
shl
clc
lret
xchg
loop
bound
scas
mov
inc
and
dec
sbb
leave
int
mov
add
xchg
push
push
xchg
cmpsl
inc
lds
jnp
add
mov
movb
pop
shl
cld
jbe
mov
fcmovnb
fld1
bound
fs
push
mov
xorl
mov
mov
push
dec
add
xor
fidivl
inc
jecxz
adc
inc
and
cmpb
jno
icebp
outsl
fwait
cltd
stos
inc
push
xchg
bound
mov
icebp
mov
inc
xchg
inc
xor
mov
mov
dec
popa
pop
repnz
ret
xor
repz
shlb
push
mov
jb
sti
or
mov
repz
scas
mov
mov
ljmp
adc
mov
sbb
movsl
mov
jmp
pushf
jp
and
adc
or
xor
mov
bound
cltd
ja
outsb
push
push
and
ret
mov
fisubrl
int
stos
push
mov
push
dec
lods
mov
and
sub
pusha
scas
mov
mov
std
loop
xchg
popf
dec
std
ds
mov
sub
sub
sarl
call
mov
push
sub
dec
ss
jne
push
fistps
fistpll
dec
mov
xchg
xlat
call
xor
icebp
mov
adc
fimuls
dec
fisubrs
gs
inc
mov
sahf
popa
xorl
jb
inc
jecxz
mov
or
sub
mov
inc
sbb
sbb
pop
xlat
jne
sub
test
sub
cmp
in
mov
inc
aad
imul
insl
fmull
into
lcall
mov
int
repnz
xlat
out
popf
lret
lahf
push
es
add
imul
scas
push
mov
lret
cmp
movsl
add
lds
scas
popa
cmp
xorl
cmp
sbbb
xchg
call
rcr
divl
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
sbb
mov
jbe
xor
sbb
mov
xor
stc
mov
jne
add
dec
inc
repz
sti
inc
sbb
cltd
xchg
jecxz
ljmp
mov
dec
pop
xor
iret
inc
sub
das
clc
aaa
xor
xlat
sub
shlb
cmp
enter
sbb
mov
mov
jns
les
mov
inc
sbb
test
imul
jp
mov
push
dec
lods
cmc
repz
aas
mov
push
mov
pop
and
inc
cmpsl
or
ss
cmc
loope
pop
aas
or
ret
mov
sbb
add
mov
rcr
mov
ljmp
popf
xchg
mov
fwait
test
cmp
add
mov
jae
xor
bound
cmp
js
mov
fistps
pop
or
dec
int
loopne
out
lods
mov
fcomp
mov
cmp
cmp
mov
clc
sti
mov
hlt
mov
aas
jp
mov
fcomps
je
cmp
sbb
sbbl
lea
out
adc
dec
mov
in
mov
pop
dec
sbbb
mov
dec
xchg
dec
cltd
rorb
jo
and
scas
push
mov
dec
cmpsb
xor
jb
mov
in
sub
mov
pop
xor
sbb
bnd
xchg
adc
stc
and
sub
sar
push
mov
push
in
dec
les
scas
or
xor
jns
jg
jmp
dec
add
inc
pop
xchg
pop
repz
lea
dec
xchg
xchg
bound
pushf
cmpsl
mov
pushf
dec
inc
pop
pop
daa
out
out
push
and
adc
lock
loop
das
jge
movsl
mov
pop
mov
ret
arpl
adc
jno
xor
fmuls
icebp
movl
mov
mov
jg
mov
fsubl
push
hlt
sub
idiv
inc
pop
mov
test
xchg
sbb
push
dec
and
dec
sub
adcb
fmuls
and
ficompl
mov
jp
add
fldt
pop
xor
inc
dec
jmp
cwtl
dec
adc
mov
xchg
loop
sbb
cli
sub
cmpsb
lds
cs
insb
mov
sbb
sbb
pop
mov
pop
pop
test
sub
cmp
out
enter
cmp
jb
jne
iret
push
lods
inc
cltd
sbb
pop
mov
test
std
mov
xchg
hlt
test
push
hlt
cwtl
mov
xchg
mov
lods
fnstenv
das
or
push
sbb
stos
pop
pop
mov
or
pop
inc
xlat
jmp
clc
push
and
or
mov
in
fadds
cmc
cmpsl
push
sarb
add
dec
mov
jmp
lds
inc
mov
push
cmpsl
mov
cmpsl
adc
pop
dec
pop
xchg
pop
lods
movb
imul
mov
lds
ret
int
cmpsb
fidivrl
xor
mov
add
mov
roll
inc
andl
cmp
jnp
inc
mov
cwtl
add
or
mov
jge
sbb
stos
and
xchg
mov
push
sbb
cmp
adcb
loope
jb
fwait
outsl
or
or
add
mov
xor
sub
lahf
jecxz
adc
inc
mov
cltd
sbb
sub
out
cmc
xor
pop
cmp
mov
adc
popf
je
movsb
sahf
push
ja
sbb
jno
out
lahf
in
or
ficompl
hlt
cmp
mov
sub
pushf
ret
pop
pushf
jne
fs
fstps
rcrb
jne
test
shll
repz
pop
popf
scas
mov
rcrl
les
sbb
outsb
or
push
shrb
pop
adc
sbb
cmp
stos
xor
xor
sbb
jl
popf
mov
loop
loop
in
nop
xchg
filds
cwtl
clc
inc
sarb
clc
jb
adc
or
cmp
mov
adc
mov
in
xchg
mov
inc
loope
in
push
dec
test
cmpsb
inc
cltd
out
enter
push
je
test
push
or
xchg
ds
push
dec
mov
sahf
dec
mov
rorb
dec
adc
in
mov
loopne
out
mov
mov
lods
aam
mov
inc
sbb
and
add
rcrl
mov
sbb
psadbw
push
stos
mov
ja
push
push
inc
mov
mov
cmpl
jmp
les
or
jo
xchg
adc
lcall
gs
pop
push
xchg
adc
test
xor
shrl
sbb
mov
fbstp
mov
dec
add
jmp
add
xchg
adc
loope
pop
ret
fwait
imul
fwait
cmp
test
mov
or
mov
cmp
orl
dec
sub
push
push
jb
add
inc
loopne
mov
stos
mov
es
out
mov
call
inc
mov
mov
sbb
pop
add
dec
decb
in
or
xchg
icebp
push
jbe
add
mov
or
nop
aas
ret
fwait
jle
pushf
cmpsl
and
jno
mov
push
push
cld
stos
sub
addb
sbb
test
fnclex
pusha
std
cmpsl
dec
pop
les
jno
dec
inc
and
adc
nop
or
adc
mov
xor
lods
jle
dec
aad
mov
add
inc
mov
scas
movl
out
mov
mov
inc
icebp
loopne
jb
aad
dec
sarb
pop
std
xchg
mov
xchg
cmc
mov
into
push
movsb
inc
insl
jmp
mov
xlat
or
adc
roll
lret
mov
pushf
sbb
mov
arpl
pop
xchg
push
insl
xchg
jg
sahf
gs
xor
das
sub
stos
pop
ljmp
adc
into
mov
and
jmp
mov
lock
xchg
xor
mov
pop
or
iret
cmp
xchg
jo
fs
dec
sbbb
jne
test
jnp
push
dec
fildll
stc
dec
push
cld
test
mov
pushf
divl
or
test
lcall
adc
mov
cli
loope
stos
push
fsubrl
xor
pushf
xor
xchg
out
jg
outsb
mov
lock
sarb
add
mov
lock
pop
addb
xor
jno
aad
xchg
jbe
mov
lahf
xchg
push
into
clc
in
scas
cmp
in
ret
jns
sbb
leave
jecxz
and
xor
imul
imul
dec
dec
ret
push
xchg
cmp
je
mov
imul
and
stos
and
mov
and
js
pop
repnz
loope
pushf
fwait
movsl
scas
or
push
and
jl
in
lds
sarb
sbb
jecxz
xchg
jmp
add
jp,pt
jne
icebp
jns
inc
mov
xchg
cmp
insb
test
or
add
xchg
lcall
les
push
jb
mov
sbb
add
jns
aaa
mov
inc
pop
fidivs
sbb
lock
popf
fists
cmp
xor
nop
xchg
mov
or
mov
add
mov
or
push
mov
clc
sub
test
inc
mov
mov
js
lea
int3
mov
mov
pop
enter
repz
mov
mov
hlt
xor
nop
test
imul
dec
mov
ret
pop
in
popf
cmc
mov
jnp
lahf
iret
ffreep
pop
add
call
dec
lock
es
dec
rorl
or
sub
sub
push
push
cwtl
lret
movsl
or
test
cwtl
or
pop
fadd
xchg
dec
jmp
mov
sti
lret
popa
outsb
dec
sbb
shll
adc
jae
lret
push
sbb
sub
jmp
lds
movsb
cmpsl
push
lcall
ss
or
sbb
scas
jg
or
sub
and
cmc
xor
sbb
mov
adcl
mov
lea
nop
push
mov
call
pop
outsl
cld
sub
xor
dec
xchg
and
jmp
xor
int3
cmp
xor
mov
cmp
bound
fwait
mov
xchg
push
orl
xchg
inc
xchg
lret
sub
pop
jne
fwait
dec
pop
mov
call
mov
shlb
gs
mov
fmul
jecxz
movsl
mov
pushf
lea
or
cmpb
ret
dec
test
add
pop
and
jge
incl
push
test
cwtl
xor
sub
mov
int3
mov
popa
mov
mov
insl
mov
shlb
icebp
cli
xorb
pop
mov
sbb
int3
sahf
mov
aad
mov
test
and
cli
std
fildl
dec
jo
sarb
or
cmp
mov
dec
dec
shlb
adc
call
movsb
cli
xor
dec
lahf
jo
push
iret
mov
mov
mov
cltd
out
clc
fsubl
out
push
hlt
jns
lea
jae
cltd
mov
mov
cmp
or
pop
test
je
mov
jmp
ljmp
incl
divl
inc
sbb
shlb
or
ss
mov
jg
and
mov
ljmp
dec
sbb
and
lds
fstpt
lahf
mov
in
mov
mov
push
add
insb
sub
fstps
lock
jge
stc
cmpsl
inc
lds
jge
push
xchg
add
gs
inc
popa
fwait
fwait
push
xchg
mov
mov
jno
imul
adc
or
xor
loop
in
cmp
out
arpl
and
adc
jnp
out
je
xor
dec
scas
xchg
call
cmpsl
clc
mov
adc
stc
ja
inc
pop
pop
repz
popf
sbb
adc
jmp
sub
jp
xchg
enter
pushf
sbb
shr
push
imul
sahf
dec
dec
loop
sbb
jmp
mov
outsb
jnp
adc
inc
mov
cmpsw
fstps
pop
sub
cmp
iret
cmpsl
mov
cwtl
lret
data16
ret
xor
rorl
dec
or
cmp
pushf
loope
mov
scas
int3
sahf
mov
xchg
test
dec
mov
or
stos
lds
xchg
int
mov
cmp
pop
test
push
test
dec
inc
inc
mov
bnd
bound
lea
rol
cwtl
mov
adc
adc
mov
jo,pt
mov
mov
push
adc
and
pop
jmp
jle
xor
fadds
cltd
cmpsl
lock
mov
mov
iret
insl
mov
mov
mov
push
subl
ss
lods
mov
sbb
pop
sub
dec
pop
idivb
or
mov
popf
movsl
mov
lcall
lret
sbb
lahf
pop
pop
inc
mov
pop
adc
insl
mov
rcll
jnp
lods
out
lret
adc
test
stos
test
xor
adc
fcmovnb
test
ja
shll
mov
xchg
mov
popf
add
repnz
lcall
or
enter
sahf
and
xor
sbb
repnz
push
pop
leave
sbb
rcrb
adc
andl
ds
je
mov
test
mov
ret
pop
adc
mov
push
enter
test
loope
dec
movsb
inc
add
cmpsl
mov
dec
xchg
fwait
jmp
sub
dec
adc
mov
jmp
pop
ljmp
daa
enter
sbb
or
cmp
xor
bound
stos
inc
sahf
sbb
pop
clc
push
mov
fidivl
insb
mov
xchg
std
mov
addr16
inc
int
sbb
mov
pop
addb
cmpsl
push
mov
adc
cmp
mov
sbb
out
fwait
lret
push
xor
cvtps2pd
xchg
shll
cltd
clc
scas
xchg
stos
mov
xchg
adc
fdivs
xor
test
mov
xchg
xchg
and
cmp
rcrl
int3
fisubrl
push
or
cli
popl
mov
mov
mov
bound
pop
mov
cmpsb
leave
pop
adc
in
and
rolb
outsl
inc
mov
xor
dec
sbb
pop
jbe
sti
cwtl
xchg
pop
int3
ds
dec
fidivrs
mov
rcrb
jecxz
mov
add
lret
dec
cltd
pop
pop
sbb
iret
xchg
loop,pt
inc
sahf
sbb
std
ljmp
jae
popf
sti
adc
sbb
addb
or
in
test
sbb
mov
jle
popf
gs
or
adc
inc
lock
cmp
addr16
xchg
enter
xchg
test
mov
outsb
or
or
addb
push
dec
test
ja
inc
mov
scas
fcoml
mov
enter
dec
push
push
lahf
inc
sub
pop
pushf
sub
popf
cmc
lea
mov
fs
push
mov
repnz
lds
adc
frstor
fldt
stos
sbb
in
add
icebp
call
cmpsb
inc
cltd
lret
iret
es
and
test
push
or
mov
cmp
mov
push
push
lret
ret
pusha
and
sbb
shlb
xor
xor
add
mov
hlt
mov
push
inc
xchg
imul
insl
lea
enter
pop
pushf
inc
stos
pushf
adc
mov
call
push
push
ret
sbb
inc
add
popa
mov
lods
mov
icebp
push
divl
inc
popa
and
test
xor
addb
rcll
mov
fistl
mov
ret
sbb
das
push
pop
xchg
fiadds
jg
xor
mov
cld
dec
jo
fwait
leave
inc
daa
mov
dec
mov
cmp
subb
gs
shlb
xacquire
sbb
add
jecxz
or
sar
xchg
push
lcall
ficomps
mov
inc
in
xor
pop
test
loopne
mov
int
sub
xchg
mov
cmc
sbb
pop
push
mov
aaa
sub
xchg
cs
aas
sub
divl
inc
sbb
xor
add
subl
xor
stc
and
fildl
rclb
notb
hlt
out
dec
xchg
xchg
pop
pusha
shrl
rolb
dec
pushf
popf
fmul
nop
jb
lcall
roll
inc
ret
push
inc
dec
gs
sbb
sbb
sbbb
das
dec
int3
aam
add
shll
add
xor
mov
pusha
xor
lds
out
push
jle
add
sbb
cmp
pop
cmpb
pop
dec
std
mov
mov
mov
dec
or
popa
cwtl
je
inc
xchg
imul
cmp
mov
nop
fdivrp
cmp
mov
jae
sbb
xchg
fcompl
imul
sbb
or
sti
cmc
fdivrs
sbb
adc
jge
movsl
mov
imul
loopne
jae
cli
inc
cmpsb
and
push
bound
fwait
out
mov
sti
add
nop
scas
jb
mov
enter
cmp
pop
fisubrl
scas
lods
mov
sub
mov
aaa
cltd
xchg
movsb
idivl
lcall
sub
fbstp
mov
fidivrl
dec
inc
push
adc
test
movsl
sbb
pusha
and
push
jb
mov
sbb
and
inc
mov
pop
inc
sub
jne
jle
test
adc
ficompl
cwtl
lock
jle
rcrb
pushl
cmp
hlt
imul
xchg
mov
out
sub
push
mov
int3
or
fistps
and
or
fimuls
and
xchg
enter
cmp
or
mov
push
sub
ja
or
sub
in
fsubrs
dec
mov
fsubrs
add
push
fstp
push
add
lahf
xchg
xor
pushf
mov
cld
xor
movsl
mov
insl
cwtl
mov
iret
lret
movb
imul
out
sbb
popa
test
dec
xor
mov
mov
mov
xor
movsl
xchg
cmp
jae
paddsw
jge
das
xchg
mov
imul
gs
dec
mov
sbb
or
stos
xor
xor
cwtl
stc
bnd
xchg
adc
stc
and
sub
test
fistpll
jo
xor
fdivs
test
dec
jmp
pop
cmp
outsb
jbe
addr16
cmp
xor
xchg
xchg
ds
les
pusha
lahf
addr16
mov
idiv
adc
icebp
hlt
jl
sub
mov
fldpi
push
and
int
mov
repz
mov
imul
cmp
shrb
adc
adc
mov
syscall
jo
sbb
and
mov
fldcw
add
mov
push
add
mov
xchg
sub
adc
imul
mov
std
xor
jmp
push
vminpd
jae
mov
or
cmp
adc
sbb
push
ds
jbe
dec
xchg
rol
fs
pop
movsl
push
test
cld
cmpsl
dec
insb
sub
xor
sbb
in
mov
es
fs
loope
js
mov
lock
or
inc
pop
sti
cmp
jge
fsincos
xchg
adc
xchg
adc
fisubl
jae
inc
gs
fst
pop
sahf
rcll
fwait
pop
cltd
lods
mov
jnp
mov
in
jae
ret
int3
add
cmpsb
dec
inc
ds
ret
dec
mov
xor
inc
mov
pop
andl
xor
or
add
lods
dec
or
out
and
cmp
mov
pop
adc
xchg
or
rcll
or
popa
sahf
rcrl
repnz
fnsave
imul
jge
les
push
cli
mov
pop
adc
fisttps
mov
nop
pop
cmp
xchg
cmpl
ret
add
mov
mov
ret
cld
jp
add
fwait
push
or
mov
into
scas
std
cmp
inc
js
pop
xchg
cmp
fmuls
jecxz
jnp
cmpsl
dec
mov
shll
movl
fbstp
cltd
and
adc
rcl
lods
fwait
add
movsl
xor
mov
xchg
mov
enter
mov
dec
pop
dec
push
or
int3
sub
mov
das
xorl
add
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
push
add
lret
testb
inc
arpl
ret
sbb
insb
or
lea
jbe
mov
pop
shrl
push
dec
mov
dec
push
push
mov
leave
jp
xchg
xchg
cltd
xchg
aad
fbld
xchg
xchg
pop
pop
pop
pop
mov
or
mov
or
and
imull
jl
popf
scas
cmp
rorb
adc
cmp
mov
dec
mov
sbb
out
sti
push
mov
mov
lretw
imul
push
jp
movsl
mov
add
stc
aaa
mov
dec
pop
rcrl
dec
add
add
fcomps
push
and
push
xchg
paddd
rcrl
aaa
sub
sbb
rcr
shrb
ds
lahf
lret
or
inc
xchg
fnstenv
add
test
imulb
mov
and
cmp
add
add
fwait
test
mov
push
out
sub
in
xor
fisubrl
ljmp
imul
push
call
iret
push
add
mov
lods
sbb
ljmp
pushf
sbb
sbb
js
pusha
mov
fdivl
jmp
cltd
pop
sbb
ret
xchg
mov
add
fidivrs
test
data16
cli
add
inc
lret
mulb
popf
jmp
add
and
std
movsl
mov
enter
inc
adc
xor
mov
cmpsb
int
outsl
mov
mov
cmp
xchg
dec
pop
sub
pop
inc
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
insl
pushf
xor
stc
add
sbbb
sub
sbbl
out
mov
lahf
stos
test
bnd
sub
fistps
shll
adc
sub
sbb
mov
xchg
mov
ret
add
fnstenv
inc
dec
xchg
cli
cmp
stos
fistl
push
lcall
data16
xchg
add
movsb
fisttps
sbb
dec
xchg
popf
lahf
adc
mov
mov
adc
jno
mov
jecxz
push
lds
sbb
adc
mov
int3
or
inc
and
daa
cmp
cmp
mov
fsub
jne
int3
inc
cmp
leave
push
sub
es
fldpi
push
and
fstpt
jns
fiaddl
les
fsubrs
popf
mov
cmp
jp
add
sub
lret
mov
lret
and
cmpsl
mov
pop
insb
mov
push
sbb
cli
stos
stc
jae
cmp
dec
jno
mov
lret
mov
shll
or
cmp
or
pop
mov
or
push
mov
and
adc
stos
pop
in
scas
sbb
pushf
xor
aas
lahf
inc
mov
sbb
pop
js
sbb
out
pusha
cltd
inc
pop
sub
sbb
inc
add
rorb
cs
xchg
nop
lock
sub
int3
mov
xor
addr16
test
sub
push
lahf
fwait
pop
adc
xchg
bound
repz
or
cmc
dec
pop
xor
lea
test
pop
mov
pop
xor
dec
or
mov
mov
jnp
mov
sbb
add
lods
daa
mov
inc
add
jmp
cld
or
fs
pinsrw
in
cmp
mov
pushf
ljmp
jge
sub
in
sbb
push
dec
ljmp
xchg
shlb
roll
ret
popa
mov
daa
mov
mov
xchg
outsb
shlb
lret
mov
stos
lea
cmp
sub
mov
dec
mov
or
js
leave
in
xorl
mov
sbb
sub
push
mov
out
out
dec
outsl
mov
cltd
push
mov
dec
cwtl
in
jbe
push
out
mov
ret
mov
lea
sbb
pop
out
mov
enter
lret
addl
mov
fmuls
bound
or
pop
push
stc
push
xor
ds
add
repz
into
std
iret
pop
cli
xor
out
pop
adc
popa
sahf
mov
sbb
adc
mov
leave
js
lret
movsl
ret
jbe
inc
adc
stos
xchg
pop
jno
pop
notl
or
mov
cmp
icebp
call
push
xchg
and
gs
mov
mov
fcmovb
fstpl
gs
inc
jmp
lods
pop
cmpsb
lds
in
jbe
lahf
es
ficoms
pop
js
jne
popf
scas
inc
push
mov
sub
mov
icebp
addl
add
mov
or
in
mov
jnp
inc
push
mov
xchg
sbb
adcl
cwtl
clc
jecxz
mov
jmp
std
mov
sti
and
xchg
inc
inc
mov
mov
sbb
xchg
out
jnp
aad
clc
aad
jmp
lcall
dec
and
cmp
and
mov
test
adc
sahf
dec
xchg
or
outsl
or
test
push
int
rorb
insl
push
mov
xchg
fidivrl
lods
es
xor
sar
dec
frstor
mov
sub
rorl
divl
xchg
arpl
fildll
inc
les
sbb
sbb
push
scas
xchg
stos
jnp
mov
push
mov
mov
inc
pop
lret
dec
dec
sub
mov
js
jg
mov
icebp
cltd
icebp
cmp
lret
sub
imul
jo,pt
mov
mov
fistps
dec
and
bound
mov
pop
test
shl
movsb
inc
push
testl
inc
in
jb
sbb
xor
enter
inc
push
int3
jg
or
ficomps
btcl
scas
cmp
dec
pop
lds
mov
and
mov
daa
pop
test
icebp
ds
and
iret
lock
inc
sbb
test
xor
or
orb
cs
pop
xor
dec
rcrb
ljmp
jp
test
lods
test
mov
aas
scas
mov
cmp
xor
popf
in
xor
sub
fwait
xchg
dec
mov
test
push
scas
xchg
sbb
add
or
iret
push
arpl
push
clc
mov
sbb
lahf
scas
jg
cmp
mov
sbb
inc
jg
xchg
iret
sarb
lock
pop
les
add
or
ljmp
xor
in
out
fstps
cmpsl
cmp
jne
jge
or
pop
loope
loope
dec
mov
fisubrs
xchg
inc
and
push
enter
pop
movsb
xchg
popf
push
sbb
sub
scas
imul
insl
loopne
mov
push
push
add
into
cwtl
cmp
or
cmp
ss
out
push
sbb
mov
test
cli
fnstenv
xor
mov
pushf
in
sbb
pushf
dec
xor
pop
lret
loop
push
xor
add
push
mov
lods
sbb
push
sub
call
mov
test
int
push
mov
adcl
test
std
xor
sub
jl
lods
mov
mov
jmp
fists
cmp
rclb
xchg
lods
add
mov
out
mov
add
icebp
mov
lret
in
mov
mov
ret
mov
cmpsb
sub
cmpsl
inc
pushfw
jnp
dec
mov
shl
inc
enter
cmp
and
sbb
enter
mov
repz
mov
loop
stos
dec
and
mov
mov
test
mov
ret
mov
mov
sbb
sahf
push
hlt
mov
jecxz
sbb
cmpsl
movsb
push
adc
repnz
nop
test
movsl
sbb
xchg
mov
push
push
push
rolb
stos
xchg
mov
sbb
outsb
or
push
pop
jbe
bound
aam
dec
les
xchg
adc
test
lods
inc
sbb
shr
sbb
iret
js
jp
xor
ljmp
xchg
lds
xlat
ds
lock
pop
mov
iret
out
or
or
push
fidivrl
pop
push
test
sub
sub
rorb
fld1
jb
pop
mov
mov
sub
pop
out
lret
push
insb
inc
arpl
ret
push
sub
or
or
push
xor
je
mov
and
jb
sti
fists
inc
cmpl
lock
mov
les
shll
jo
pop
adc
aaa
xor
icebp
push
aad
or
sbb
jo
mov
push
loop
and
pushf
add
es
int3
pop
push
repnz
add
mov
and
popf
sbbl
push
jae
mov
dec
out
xor
imul
jle
push
clc
adc
dec
lods
jle
xchg
sub
pop
and
test
and
addr16
dec
xchg
data16
jl
inc
dec
lcall
insl
fwait
xor
sbb
xchg
rcrl
pop
push
sti
lahf
xchg
pop
cmc
mov
repz
in
push
daa
or
xchg
movsl
ljmp
sarl
dec
adcl
insb
aaa
cli
or
sub
cld
or
lea
cmp
sbb
in
mov
mov
or
mov
sub
cmpsl
scas
popf
dec
lahf
push
test
mov
adc
push
pop
adc
test
mov
rcr
repnz
adc
stos
push
test
xor
in
sbb
scas
movl
jle
int
arpl
mov
mov
shlb
add
lcall
mov
jecxz
call
push
xchg
sbb
in
cmpsb
cmp
test
cmpsb
jae
mov
and
push
in
mov
fiaddl
sbb
inc
inc
cmp
jmp
jmp
adc
mov
fbstp
cltd
test
stc
lods
inc
jne
mov
and
adc
jle
int3
ss
lea
or
popf
sbb
jl
pop
push
mov
dec
test
xor
daa
adc
adc
test
js
fstpt
test
or
mov
pop
add
xor
in
mov
lock
pusha
addr16
xor
mov
sub
aad
ja
pop
xchg
ret
stos
dec
cltd
lret
xchg
cmp
jle
repnz
mov
mov
mov
inc
lahf
sbb
cmpb
in
std
or
and
insl
pop
mov
cmpsb
lea
shrl
pop
mov
mov
mov
add
mov
mov
and
mov
rorb
inc
icebp
push
jb
pushf
jle
xchg
jo
inc
jae
inc
inc
mov
out
arpl
mov
mov
mov
fs
test
movsb
pop
push
mov
lahf
xchg
inc
scas
icebp
inc
adc
fwait
int
jo
sbb
ffreep
cmc
dec
addr16
lds
dec
sbb
adc
push
shr
leave
lds
sub
movsl
mov
iret
inc
mov
fisubs
cmp
push
jecxz
mov
stos
sbb
cmp
mov
shlb
cltd
sbbb
icebp
je
lds
hlt
gs
dec
imul
movsb
mov
in
jecxz
mov
test
cld
sbb
add
pop
data16
xor
aas
jns
dec
test
xor
xchg
js
lods
inc
and
mov
push
jge
icebp
and
fwait
leave
loop
sarb
aas
cmpsl
xlat
in
pop
add
pop
pop
lcall
pop
push
mov
ds
sub
sarl
test
ret
xorb
mov
jne
pop
in
orl
add
inc
sahf
popf
dec
push
pop
or
pop
repnz
cmpsb
cmpsb
cmpsb
push
mov
das
adc
lret
gs
das
jge
movsl
mov
imul
inc
xor
movsl
fadds
ret
xor
xor
lahf
pushf
ret
or
les
xor
jno
loop
pop
xchg
mov
std
inc
cltd
xchg
sbb
mov
push
test
mov
outsb
cmp
cmp
int3
es
mov
in
mov
outsb
mov
xor
dec
ja
mov
fcoms
sbb
inc
mov
sti
mov
les
sahf
push
int3
shll
xchg
add
dec
push
mov
dec
or
mov
push
dec
xor
repz
int3
push
xchg
pop
js
inc
int3
fcmovb
add
push
in
adc
sub
or
xchg
outsl
dec
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
jmp
cmp
hlt
xor
xchg
xor
aas
adc
movsb
push
sbb
cmp
fisubl
adc
mov
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
sub
scas
push
and
mov
enter
int3
add
neg
aam
pop
jns
pop
inc
dec
xlat
rol
aam
cmp
pop
ret
lret
dec
jne,pt
dec
ficoms
inc
mov
lea
stos
cs
icebp
dec
rcrl
lods
nop
push
loope
leave
and
fwait
scas
pop
add
add
jbe
xor
out
pop
js
int3
xor
jo
loop
add
mov
or
pop
mov
clc
pop
ds
sti
in
jp
inc
cwtl
dec
notb
mov
fwait
aad
jbe
cli
xor
fwait
sbb
outsl
adc
jbe
popf
bound
mulb
shl
inc
enter
ljmp
adc
or
ja
fwait
adc
jo
sbb
cs
pop
movsb
ficoms
add
loopne
lods
add
mov
sti
hlt
lea
aaa
adc
cmp
rcll
xchg
cld
jg
out
cmc
pushw
popf
cmpsl
push
pop
dec
add
stos
rcrl
dec
call
push
lods
fldenv
lods
frstor
stos
dec
pop
insb
cwtl
loopne
mov
cld
jb
ljmp
cmp
push
popa
fwait
dec
mov
mov
or
sahf
fnstsw
lahf
pop
movsl
arpl
shr
cmc
mov
jl
sbb
mov
xlat
cmp
pusha
das
in
shll
int
je
jmp
dec
cmc
xor
out
popf
pop
fists
xchg
cld
or
and
movsl
ficoml
sbb
insb
sbbl
mov
leave
leave
pushf
add
mov
push
mov
dec
inc
xor
paddusw
aam
mov
repnz
iret
ffree
xchg
sub
in
jg
iret
cmp
clc
sbb
inc
inc
divl
dec
mov
sahf
sub
fnstenv
gs
xchg
cmpsb
mov
fdivl
dec
aam
imul
and
xchg
push
inc
lods
push
dec
icebp
jp
ret
mov
cmp
arpl
movsl
xchg
test
fadds
xchg
hlt
pop
dec
push
les
jns
ffree
sub
mov
dec
flds
cli
enter
icebp
scas
add
mov
aad
mov
adc
jl
adc
js
sbb
lock
clc
xor
iret
pushl
cmpsl
sbbb
loop
addl
adc
and
xlat
insb
imul
sbb
loope
xchg
subb
out
in
fisubrl
adc
xchg
ret
add
repnz
adc
or
mov
jae
ja
into
fnsave
xchg
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
ljmp
xchg
adc
push
fsubr
or
ds
aad
pusha
fldcw
pop
sub
dec
std
idivb
into
xlat
lcall
xchg
sub
lcall
or
cmp
iret
fistpll
lahf
fidivrs
jge
insl
inc
inc
add
shll
jmp
mov
or
or
test
sub
out
jo
mov
test
repz
in
dec
pop
lret
sbb
lea
push
insl
jmp
lods
call
cwtl
add
dec
inc
dec
push
or
add
xchg
dec
pop
mov
mov
xor
and
mov
mov
dec
hlt
mov
inc
xor
mov
inc
pusha
xor
lar
sub
mov
lods
mov
or
mov
lock
lret
inc
adc
sub
push
aad
dec
xor
mov
dec
mov
dec
and
ret
jae
cs
pushf
mov
pop
cmpsl
mov
fnstcw
mov
in
dec
insl
nop
subl
ds
xlat
lds
mov
or
add
mov
dec
aam
enter
and
push
mull
lahf
cld
mov
jne
and
mov
insl
jmp
mov
rorl
add
rol
pushl
dec
sub
sub
movsb
test
xchg
fs
pop
cmpsl
mov
mov
enter
jg
fwait
dec
test
int
cmp
sbb
cmpsb
ljmp
xchg
fnstsw
and
add
fildl
pop
ljmp
dec
sub
adc
xchg
lahf
fs
or
fadds
ds
loope
lcall
in
ds
mov
and
adc
fwait
dec
push
add
fs
cmc
cld
cmc
jns
mov
lret
and
leave
jp
mov
push
out
movsl
leave
popf
push
cmpb
dec
mov
ret
lahf
xchg
jb
cmp
movsb
push
jb
cmp
fmuls
jmp
push
fs
or
pop
shr
testl
fs
inc
cmp
test
outsl
mov
pop
cmp
out
inc
scas
inc
popa
push
pop
int
cltd
cmpsl
fwait
xchg
aam
aad
lea
iret
sbb
inc
popf
cli
sub
cmp
sub
dec
outsl
mov
fidivs
pop
das
pop
sbbl
or
ret
push
and
stc
sti
mov
add
cmp
in
adc
test
mov
les
movsl
sbb
lock
imul
incl
lods
push
adc
dec
pusha
in
push
adc
add
es
bound
test
mov
add
sti
addl
cwtl
pop
subl
lcall
push
aaa
dec
and
inc
dec
mov
fs
loop
mov
or
inc
sbb
leave
add
jl
in
jl
enter
dec
mov
data16
rcr
sub
out
fucomp
push
mov
push
sub
mov
fists
jno
sub
stos
out
dec
pop
fwait
dec
inc
dec
outsb
and
adc
call
xchg
jecxz
imul
lock
dec
call
cmp
repnz
dec
dec
mov
add
testl
movsb
mov
sbbb
sti
cltd
dec
ss
leave
cltd
jg
pop
ret
jbe
inc
adc
mov
test
jl
mov
lret
fstp
push
pop
into
lret
std
jecxz
les
js
mov
or
inc
fisubl
test
mov
mov
sub
add
aam
xor
lods
test
push
push
xchg
cmpsb
mov
fbld
add
mov
or
rcll
sarl
stc
js
sbb
dec
and
xchg
loope
pop
cmp
insb
jbe
lcall
and
mov
mov
out
or
aam
lret
ret
sbb
cmpl
mov
test
xchg
dec
inc
call
pop
push
loopne
jae
fwait
xchg
adc
xor
loopne
nop
xor
mov
pushf
pop
push
test
cmc
jbe
inc
sti
mov
loop
mulb
dec
xor
in
stos
mov
mov
pop
adc
push
repnz
rcrl
es
mov
popf
lret
mov
pop
mov
popa
pop
xor
inc
scas
ja
inc
xlat
mov
add
mov
mov
repz
mov
mov
in
cltd
jbe
test
dec
scas
pop
negl
bswap
add
jmp
lock
xchg
pop
andl
lcall
inc
fsubrs
mov
add
add
lret
fisttpl
mov
mov
mov
cmpsl
inc
shll
and
inc
inc
arpl
sbb
fstl
imul
test
or
inc
mov
sbb
dec
inc
and
or
inc
add
aas
test
push
or
pop
das
pusha
test
rcrb
dec
jmp
mov
je
gs
inc
xchg
in
lahf
imul
out
pushf
mov
mov
mov
test
dec
pusha
in
dec
lcall
int3
pop
stos
ffreep
mov
repnz
sub
sbb
fildl
cmp
negb
into
xor
mov
cmp
cmpsb
cmp
test
cmpsb
jae
mov
and
push
in
mov
fiaddl
sbb
inc
inc
cmp
jmp
jmp
adc
mov
fbstp
cltd
test
stc
lods
inc
jne
mov
and
adc
ds
mov
mov
fdivl
je
enter
push
clc
dec
pop
mov
aas
adc
lea
jbe
sub
mov
out
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
mov
mov
mov
cld
jg
pop
adc
aaa
xor
popf
dec
and
pop
jnp
and
xor
sbb
mov
cmpsl
mull
mov
jno
xchg
movsl
negl
mov
mov
jbe
xchg
adc
adc
push
push
inc
push
insl
dec
mov
fsubrl
mov
jbe
mov
cwtl
mov
xor
leave
loop
fsub
push
lahf
cmpsl
xlat
sbb
mov
fdivs
fstpt
pushf
sbb
les
sarl
inc
sub
sahf
jbe
sbbl
lea
inc
fstps
stos
cltd
lea
scas
fimuls
leave
loope
lea
iret
insl
mov
adc
xor
sbb
dec
pop
fcomps
mov
jne
inc
dec
inc
add
mov
jp
fwait
mov
adc
or
jno
and
and
jge
bound
fdivr
mov
cmc
mov
add
add
ja
in
imul
inc
into
xchg
mov
fstl
mov
fsubs
mov
sbb
les
mov
bnd
pop
sub
popf
push
aad
pop
fdivs
push
jne
into
jne
dec
rorl
inc
or
jae
mov
fidivs
lahf
push
outsl
std
icebp
outsl
fcmovnb
fadds
dec
scas
pop
or
loop
int
dec
not
in
pop
inc
jmp
sbb
je
test
jno
sahf
nop
fisubrl
jns
pop
jbe
inc
out
loopne
mov
daa
push
lret
push
jns
ret
xchg
add
sbb
push
fists
inc
leave
lcall
jbe
and
mov
xor
imul
mov
inc
xor
push
fwait
jl
pop
xor
ds
cmp
push
cmp
ret
push
rolb
test
cmp
or
and
stc
dec
mov
push
cli
inc
and
sbb
push
cli
xchg
mov
fstps
inc
dec
adc
mov
mov
xchg
xchg
adc
in
dec
lds
popa
in
xor
mov
xchg
xorb
scas
mov
stc
outsl
cs
in
iret
sub
push
aas
push
shll
add
add
adc
jmp
jmp
mov
out
sbb
in
push
jbe
loopne
movsb
das
imul
fcomip
pop
mov
mov
lahf
dec
mov
jb
mov
scas
bound
out
or
gs
leave
push
aaa
cwtl
inc
out
mov
jne
imul
sub
xchg
pop
pusha
sub
fsubs
loopne
mov
lahf
add
jl
push
setae
lret
ficoml
sub
sub
pushf
in
add
dec
mov
in
icebp
pop
fsub
or
xchg
mov
add
iret
hlt
add
enter
lods
insl
jo
fld
fwait
sbb
jmp
hlt
xor
hlt
adc
push
lret
jnp
lret
pop
jmp
jbe
pushf
cmpsb
mov
lock
es
rcll
inc
pusha
or
mov
aad
sbb
test
inc
out
lahf
cmpsl
xlat
add
mov
stos
sbb
fwait
aaa
lea
test
cmp
insb
jbe
adc
inc
repnz
es
cmc
push
fs
jo
into
add
xor
das
xchg
enter
xor
in
xchg
fwait
mov
fisubs
and
adc
pop
in
cs
jmp
xor
jge
pop
ret
or
ret
cmc
pusha
add
cltd
orl
std
pop
cmpsb
mov
sub
pop
jl
adc
add
lds
pop
ret
stos
push
dec
add
cmpsl
mov
push
xor
movsl
xor
mov
cld
xchg
jae
xchg
iret
xchg
adc
dec
mov
jge
hlt
repz
ljmp
shlb
lcall
sbb
loope
mov
outsb
aad
push
and
test
inc
bound
mov
mov
cmp
mov
std
cmp
test
sbb
and
cmp
mov
pop
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jno
inc
inc
and
dec
test
lock
sbb
mov
fcoms
xor
cli
mov
pushf
lret
xchg
fidivrl
pop
jl
out
adc
xchg
jecxz
add
jle
mov
pop
dec
inc
fimull
clc
jb,pn
cli
jge
ret
pop
pusha
movsl
ret
adc
push
movsb
mov
notl
leave
lret
cmpsl
mov
rorb
shr
and
stos
mov
popf
adc
je
insl
adc
push
mov
push
xor
dec
imul
sbb
jbe
ret
sbb
in
mov
xor
cwtl
xchg
cmp
fidivs
sti
gs
mov
push
add
std
jl
nop
cwtl
fdivs
loope
push
sbb
addr16
xchg
aad
movsl
ret
push
mov
out
and
out
mov
es
cmp
fwait
lea
clc
fwait
mov
jbe
jecxz
or
hlt
jl
sahf
jbe
int
mov
imul
outsb
mov
sub
fimull
lcall
lds
or
or
fwait
cs
fsubl
xor
je
jnp
pop
repz
cmpsl
ret
mov
xor
dec
int3
imul
xor
push
add
fldl
mov
inc
and
stos
inc
dec
lret
lds
aaa
inc
loope
mov
stc
rcl
push
icebp
les
stos
jbe
mov
or
hlt
rorb
cltd
test
mov
xchg
movsb
movl
cltd
loopne
jl
sar
add
mov
jo
in
ret
test
out
jp
pop
cwtl
dec
and
or
ss
cmpsb
push
mov
push
int3
cmp
mov
shl
pop
cmp
decb
fs
adc
shlb
fidivs
sbb
sti
and
add
cmp
in
out
stc
or
xchg
dec
xlat
test
lcall
pop
inc
xor
adc
xchg
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
inc
pop
cmp
pop
stc
rcrl
cmpsb
sbbl
cmp
mov
jno
mov
sub
push
lea
push
lret
mov
xchg
mov
arpl
cmp
inc
insb
xchg
inc
movsl
dec
repz
pop
adc
cmc
icebp
push
dec
pop
xchg
add
stc
or
clc
movsl
add
add
es
dec
pop
cwtl
mov
inc
orb
add
or
sbb
xchg
jge
sti
mov
dec
mov
rorl
pop
mov
out
je
xlat
add
mov
bound
pop
cmpsl
fistpll
cmp
inc
out
xor
popa
leave
inc
and
test
jmp
mov
adc
fisttpll
dec
cltd
and
mov
mov
pop
pop
add
cmp
cmp
lahf
xchg
notl
sbb
cld
mov
pop
sbb
mov
inc
les
pop
mov
repnz
cmp
in
out
or
ficoml
or
rcl
xchg
pop
sbb
jp
cwtl
cmc
ljmp
bound
test
dec
push
shlb
lret
gs
ss
outsl
hlt
mov
aad
daa
push
cmp
shrb
xor
cwtl
sub
in
pop
pop
add
jmp
xchg
je
leave
jmp
lock
sub
inc
insb
push
mov
int
ret
rcr
sub
adc
xor
add
jbe
adc
inc
repnz
es
cmc
pop
xchg
fs
jo
into
add
xor
das
xchg
enter
xor
in
xchg
fwait
mov
fisubs
and
adc
pop
in
cs
jmp
xor
jge
pop
ret
or
ret
cmc
pusha
add
cltd
orl
std
pop
cmpsb
mov
sub
pop
jl
adc
add
lds
pop
ret
stos
push
dec
add
cmpsl
mov
push
xor
movsl
xor
mov
cld
xchg
jae
xchg
iret
xchg
adc
mov
repz
ljmp
shlb
lcall
sbb
loope
mov
outsb
aad
push
and
test
ret
lahf
mov
mov
cmp
idiv
cmp
test
sbb
and
cmp
mov
pop
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jno
inc
inc
and
dec
test
lock
sbb
mov
fcoms
xor
cli
mov
pushf
lret
xchg
mov
adc
adc
xchg
jecxz
add
jle
mov
pop
dec
inc
fimull
clc
jb,pn
cli
jge
ret
pop
pusha
movsl
ret
adc
sbb
mov
notl
leave
lret
cmpsl
mov
adc
shr
and
stos
mov
popf
adc
je
insl
adc
push
mov
push
xor
dec
imul
sbb
jbe
ret
sbb
push
sbb
adc
inc
ljmp
std
xor
sbb
aas
lock
add
loope
mov
mov
inc
xor
push
mov
dec
cmp
loopne
and
pop
xchg
fs
jp
lds
mov
sub
je
call
daa
loop
imul
int3
lods
shl
fwait
xchg
sahf
adc
jp
push
xor
loopne
mov
dec
shll
jae
lret
hlt
jne
pop
dec
aaa
jne
adc
add
repnz
cmpsl
dec
aaa
xor
es
xor
adcl
imul
mov
push
sti
les
inc
mov
ret
cmp
idivl
movsl
insb
inc
fsubrl
xchg
test
cmp
pushf
test
icebp
subb
cwtl
adc
and
sub
enter
sbbl
ret
xorb
jmp
cmpb
jnp
js
mov
fadds
stos
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
hlt
xor
push
or
mov
in
popa
dec
mov
jbe
imul
mov
pop
xlat
daa
cmp
out
repz
sti
pop
or
xor
lock
and
pop
sub
gs
or
mov
popf
mov
sub
sub
lret
popf
adc
inc
fsubl
push
and
out
cld
int3
js
lods
push
dec
repz
or
cld
xchg
test
mov
mov
lods
xchg
dec
mov
cmp
mov
scas
jno
jo
in
and
int
push
or
sub
sti
inc
movsb
jl
cmpsl
imul
cwtl
je
jo
mov
fwait
jmp
pop
and
call
lods
jp
mov
sti
sub
imul
ret
fldcw
sti
xor
arpl
and
pop
cwtl
fsubp
mov
xor
imul
fiadds
movsb
or
jle
enter
ja
inc
inc
not
popa
xor
movsl
jmp
cld
ja
je
sti
jno
addl
insb
aaa
mov
mov
lods
adcb
cmc
pushw
sbb
sarb
jl
rcrl
cltd
movsl
std
test
ljmp
std
adc
xor
mov
rcrb
pop
ds
xor
loopne
sbb
pop
stos
add
or
xor
imul
shlb
lcall
jle
pop
push
aas
mov
or
push
cmp
mov
testl
adc
or
sub
outsb
push
mov
dec
mov
adc
mov
mov
jnp
ret
mov
adc
in
and
into
cmp
arpl
popa
mov
vrcpps
dec
mov
sbb
and
enter
jo
or
int
inc
push
int
pop
or
adc
lret
sbb
inc
or
repnz
mov
mov
fldl
push
add
rol
repz
jns
cmp
jbe
push
jo
into
ja
inc
adc
push
add
fsubl
mov
lock
outsl
sub
lds
push
fwait
pop
fwait
int3
aas
sbb
jp
push
jno
scas
inc
and
cmp
lret
fbld
mov
xchg
into
adc
push
sub
imul
sub
gs
inc
add
xchg
sbb
lret
push
lahf
cmpsb
jl
sub
mov
mov
and
cmp
popf
enter
dec
jo
mov
sbb
push
pop
repnz
jo
xchg
dec
xor
fidivl
test
clc
jbe
movsl
icebp
jno
aad
xchg
jmp
test
mov
mov
and
sarb
jo
jnp
addr16
sbb
inc
jbe
inc
and
and
mov
jmp
sbb
mov
xor
mov
insl
loopne
sub
gs
jge
push
inc
mov
inc
xor
sbb
loop
je
or
or
cmpb
pop
pusha
movsl
aam
fiaddl
nop
dec
out
scas
mul
stos
inc
cmp
gs
dec
dec
inc
mov
jp
pop
lods
mov
in
mov
outsb
mov
xor
dec
ja
mov
fcoms
sbb
inc
mov
sti
mov
les
sahf
push
int3
shll
xchg
add
dec
push
mov
dec
or
mov
push
dec
xor
repz
int3
push
xchg
mov
or
test
cmpsl
test
clc
dec
cmp
mov
movsl
ret
dec
sbb
mov
data16
xchg
add
cmpsl
sti
clc
popa
mov
sbb
pop
sti
and
jl
pop
push
mov
dec
test
adc
mov
loopne
inc
inc
jmp
fwait
mov
mov
test
fwait
mov
adc
mov
jo
imul
cmpsl
xchg
pop
dec
pop
movb
inc
imul
test
shl
mov
jmp
arpl
sbb
std
aaa
jae
fwait
add
les
jno
xlat
rcr
xchg
popf
sub
insb
fsubrl
cmp
fwait
lods
pop
push
int3
jecxz
xchg
jno
in
inc
popa
jnp
stos
sub
cmc
lds
add
sti
inc
mov
push
cmp
jle
clc
or
or
test
divb
pop
mov
je
jl
mov
add
jbe
inc
sbb
jp
es
inc
sti
xor
push
loope
adc
es
enter
jl
gs
mov
jb
adc
rcrl
jecxz
out
imul
xor
aam
cmp
jmp
sahf
mov
cld
and
subl
aaa
mov
insl
mov
or
out
cmp
faddl
xchg
cwtl
and
xor
push
sub
add
push
mov
xor
int3
imul
in
je
mov
push
cmp
cmp
out
cmp
addb
dec
int3
aam
add
shll
aad
pushf
sahf
jge
sub
test
jbe
in
frstor
push
cmp
mov
js
and
stos
mov
add
int
xchg
int
dec
mov
addr16
in
pop
pop
stc
sahf
xchg
sbb
fimuls
into
pusha
jo
xorl
pusha
fwait
and
inc
cltd
enter
xchg
xorl
push
add
sub
and
mov
jge
or
jae
mov
rep
inc
inc
addr16
xchg
lcall
adc
push
cli
fcom
cmp
xor
cmp
clc
ljmp
lea
pop
mov
arpl
divb
push
aad
add
jae
pop
or
and
mov
pop
cmp
xor
test
dec
lret
fucomp
jae
aam
add
ljmp
popf
pop
xchg
insl
mov
lock
subb
sbb
lods
xchg
dec
shrl
ja
mov
fs
jne
lahf
mov
jle
mov
pusha
jp
sub
and
in
cmp
cmp
xor
add
jle
adc
out
adc
outsl
idiv
mov
push
pop
mov
push
xchg
cmpsb
cmpsb
shrl
ljmp
lea
cmp
clc
pop
mov
fwait
cmpsb
sti
cmc
dec
mov
inc
ljmp
adc
sar
mov
cmc
repnz
or
push
pop
arpl
fdivrs
insl
in
inc
xor
pop
or
call
jecxz
xchg
std
xchg
in
ja
loop
je
or
iret
xchg
pop
leave
cmpb
xor
aam
rcrb
push
shl
test
push
test
push
push
jns
xor
push
xchg
cld
push
mov
test
inc
add
arpl
gs
je
movsl
jp
stos
in
test
lods
xchg
dec
mov
sub
adc
cmpsl
pop
push
lret
sahf
sbb
or
sbb
stos
movsb
mov
and
ja
inc
xor
jle
lret
pop
pusha
cltd
fistpll
jge
int
mov
stos
sbb
in
imul
or
mov
test
mov
enter
pusha
xchg
lock
pop
and
mov
sub
adc
push
mulb
das
jge
xchg
pop
cld
push
mov
out
sbb
lret
adcb
mov
pop
test
dec
lds
mov
aam
cmp
mov
lds
and
test
shrb
adc
pop
pop
pushf
ret
aad
adc
mov
cwtl
fcompl
shll
jp
xchg
sbb
dec
enter
fcompl
push
gs
xor
and
lds
push
rorl
and
add
mov
jno
inc
idivb
xchg
inc
xor
lds
xor
divl
clc
je
jmp
inc
dec
lret
pop
push
mov
sub
loopne
pop
lds
push
ret
adc
xchg
in
sahf
cmpsl
gs
jns
outsb
jb
inc
fidivs
and
cmp
cwtl
dec
push
or
xor
enter
push
pop
mov
inc
mov
mov
xchg
clc
inc
sbb
xchg
cmp
adc
ret
into
push
xchg
ret
int
leave
call
lret
jnp
movsl
imul
sbb
xchg
cmp
pop
sub
push
inc
loop
fsubrl
sbb
push
cli
mov
push
mov
dec
data16
dec
mov
jae
lds
jge
stc
or
fisubrl
test
gs
push
cmp
xchg
pusha
les
jnp
jecxz
adc
push
fcmovb
cli
cli
icebp
jns
jae
fs
jmp
rcrb
orl
mov
xchg
dec
test
xchg
jle
divb
cltd
clc
repz
or
es
push
test
push
call
adc
cltd
xor
cmp
inc
imul
out
push
sub
popf
mov
mov
dec
inc
hlt
ds
jecxz
ret
mov
adc
sarb
mov
mov
lahf
jbe
jnp
pop
or
movsb
pop
push
popf
fisttpl
add
jae
inc
xchg
jg
sbb
xor
pop
arpl
inc
mov
testl
pop
adc
outsb
lret
pusha
and
insl
fisubrl
xor
movsb
loop
push
movsb
adc
les
lods
push
dec
repz
sub
and
test
xchg
xorb
mov
leave
ja
mov
insb
cmovge
mov
pop
shll
jne
mov
aad
lcall
sub
sbb
fwait
push
mov
out
popf
orl
scas
rcrb
imul
mov
fists
fistps
adc
mov
fisttpl
pop
cmp
clc
push
mov
xchg
mov
adc
push
je
enter
mov
jl
and
insl
jbe
jmp
inc
push
leave
sub
xor
mov
sbb
cmp
push
inc
inc
pop
ret
popf
mov
jo
stos
les
mov
nop
popf
movsl
cld
jg
mov
xor
inc
sub
sub
jl
lods
push
adc
inc
mov
jbe
movsb
lods
cs
scas
sbb
and
mov
adc
pop
aam
rcll
arpl
fbld
ja
gs
movb
lret
lretw
aad
pusha
mov
fldcw
xchg
pop
add
leave
dec
lock
lock
vhaddps
adc
idiv
push
or
pop
fcompl
xchg
mov
adc
lahf
rolb
xchg
mov
aas
scas
test
pop
inc
lret
mov
jle
call
inc
fsubs
int
pushf
add
adc
sub
repnz
mov
or
inc
sbb
adc
fdivrl
in
xchg
dec
ffreep
call
mov
or
or
js
pop
dec
dec
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
sub
push
fcomps
adc
sbb
scas
pop
nop
popa
sub
mov
pop
mov
les
js
and
fsubl
std
das
nop
pop
in
jl
scas
push
fcompl
sub
shlb
pop
jle
addr16
out
push
adc
nop
inc
inc
push
mov
movsl
or
shlb
imull
out
cltd
or
mov
je
dec
inc
insl
sahf
dec
mov
or
flds
leave
inc
rcl
frstor
jmp
int
in
inc
inc
div
mov
add
sbb
sub
subb
addr16
mov
lcall
xor
mov
hlt
hlt
dec
xchg
dec
or
push
dec
jmp
out
jae
cmp
dec
rcrl
dec
cld
push
pop
movsl
dec
enter
fcompl
push
gs
xor
and
lds
push
rorl
and
add
mov
jno
inc
idivb
xchg
inc
xor
lds
xor
divl
pop
sbb
lods
add
cmp
jnp
sbb
mov
addr16
inc
xchg
pop
aam
fdivrl
xlat
push
fwait
movsl
push
pop
jno
and
sub
fs
inc
xchg
enter
mov
je
jmp
decl
ljmp
push
mov
lea
daa
jl
rclb
dec
sti
xor
xchg
je
xchg
jp
sti
pop
mov
cmpsl
movl
add
cli
data16
lock
addr16
mov
pushf
in
loopne
xlat
stos
les
adc
pop
imul
test
shrb
cmp
outsb
mov
in
and
xchg
pop
roll
add
and
mov
sti
pop
fsts
subl
js
shlb
movsb
ret
sub
dec
jo
repz
xor
sbb
pop
cmpl
inc
loop
pop
out
add
xor
push
ret
jmp
jmp
cmc
aam
fdivrl
xlat
adc
in
arpl
push
pusha
jo
sbb
pop
std
out
ficoms
and
dec
leave
adc
sub
mov
das
xorl
add
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
push
add
lret
testb
inc
arpl
decl
pop
or
push
jmp
and
xchg
movsb
push
jae
fcmovbe
xor
ror
popf
in
loop
mov
loopne
test
sti
in
push
mov
insl
in
inc
lahf
repz
push
push
add
mov
fs
jecxz
call
inc
pop
jl
pusha
test
or
int3
call
fwait
js
nop
sbb
mov
testl
cmpsb
call
les
fisttps
sbb
addr16
and
xchg
icebp
push
sbbb
lods
lret
hlt
pop
mov
sbb
call
pop
mov
and
pop
ffree
adcl
inc
popf
inc
lods
mov
int
jg
adc
mov
shrb
movsb
repnz
jae
jne
fcmove
pop
movsl
popa
call
gs
jge
add
sbb
mov
or
mov
or
xorb
daa
lds
int3
notl
and
jno
sahf
push
sub
dec
push
cli
jno
pop
and
mov
lods
mov
mov
insb
jmp
pop
fistps
inc
inc
add
leave
pusha
imul
gs
add
stos
jl
jbe
mov
sub
ljmp
mov
fwait
push
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
jle
pop
xor
jmp
cli
adc
repz
sbb
ficoml
addr16
inc
aaa
popf
xor
mov
jb
add
inc
je
seto
dec
inc
xor
mov
push
mov
inc
inc
sbb
popf
dec
pop
xchg
repnz
loopne
leave
jo
push
cld
testl
jecxz
inc
sahf
leave
mov
mov
dec
aam
xor
xchg
xor
leave
ror
push
jbe
addr16
mov
or
sbb
xor
mov
fadds
cmp
inc
mov
dec
mov
inc
jg
xchg
fstpt
insl
int
jns
ret
fisttps
mov
mov
push
cmp
inc
sbb
push
decl
icebp
in
std
add
cmc
jno
outsl
xchg
pop
int
popf
shrb
xchg
lods
push
mov
test
push
or
sub
mov
movsl
jl
dec
test
dec
push
mov
sbb
and
mov
lahf
sbb
jne
insl
popa
test
mov
cmp
sub
dec
outsl
mov
fidivs
pop
das
pop
sbbl
or
ret
push
and
stc
sti
mov
loope
cmp
in
adc
jo
call
or
pop
ret
jmp
and
ret
xor
xor
pop
and
mov
dec
adc
add
arpl
cmpsb
xchg
sbb
cmp
aaa
lret
orb
mov
fiaddl
call
daa
or
aad
pop
cmp
or
test
adc
pusha
mov
cmpsl
loopne
push
push
sbb
xchg
xchg
jae
mov
mov
je
test
hlt
mov
aam
sahf
fs
push
or
ja
in
push
int3
out
pop
lea
imul
or
lret
mov
jmp
pop
or
les
ror
dec
mov
xor
or
or
int3
add
enter
inc
ja
pop
ds
add
dec
pop
mov
or
add
lods
cmpsb
mov
sbb
dec
dec
adc
and
add
stos
mov
sbb
nop
imul
loop
xchg
arpl
xorb
pop
lahf
mov
pop
xor
cmpsl
and
pop
hlt
sbbl
mov
xchg
pop
xchg
sub
dec
cmc
push
les
push
push
imul
jno
mov
push
aad
push
pop
scas
sarl
mov
addl
mov
repz
test
test
out
mov
xor
or
scas
mov
and
sbb
push
jb
inc
scas
shlb
fstpt
aaa
int3
add
loop
fisttps
rcr
mov
fdivrs
mov
mov
dec
or
lret
xor
arpl
je
imul
xchg
xor
jb
sti
dec
push
test
xor
repnz
jecxz
jo
cwtl
clc
ja
mov
nop
cltd
jg
repz
cmpb
pop
ret
int
paddusb
add
subl
dec
test
and
dec
pop
les
and
repz
fcmovb
dec
sub
mov
adc
pop
or
cmp
push
mov
adc
stos
aad
xor
adc
lahf
xor
bnd
cmp
insb
ss
aas
cmpsl
aaa
cwtl
hlt
cld
jle
mov
xchg
pop
nop
mov
les
add
and
xchg
mov
push
in
lods
cmp
daa
popf
jmp
pusha
jo
enter
enter
inc
cltd
enter
and
je
jmp
add
dec
popf
push
test
add
xchg
cmp
or
push
jge
or
ret
jl
inc
pop
shll
rorb
roll
pusha
arpl
mov
aaa
pop
push
push
into
addr16
and
inc
hlt
inc
mov
push
cmp
jne
cmpsl
mov
mov
test
clc
fstpt
inc
ret
ja
cmc
imul
cmp
imul
lret
pop
jne
inc
xchg
insb
xchg
addr16
xor
jb
fistpl
ret
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
inc
sub
enter
scas
push
rcr
call
fistl
ficomps
xchg
fistpl
out
push
loope
xor
mov
mov
and
adc
popf
xchg
jbe
stc
jo
les
call
insl
int3
sub
mov
push
jl
and
fwait
mov
arpl
adc
loop
sbb
mov
sbbb
out
sbbl
xchg
vandnps
jb
lcall
add
pop
mov
lods
sbb
cmpsb
pop
add
inc
dec
push
in
mov
and
push
mov
push
ja
mov
insb
cmovge
mov
pop
shll
jne
mov
aad
lcall
sub
sbb
fwait
push
mov
out
popf
orl
scas
rcrb
imul
in
dec
and
push
fdivrs
jo
dec
adc
inc
push
mov
movsl
or
shlb
imull
out
cltd
or
mov
and
or
lret
mov
scas
int3
push
lahf
jnp
call
pop
repz
loopne
pop
daa
minps
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
lret
mov
fcoms
inc
out
bound
push
xchg
popf
mov
mov
inc
pop
mov
pop
xchg
mov
inc
aaa
scas
sub
xchg
test
jmp
scas
inc
cwtl
add
add
sub
adc
cmp
jb
fstps
adc
mov
xor
ja
js
mov
lcall
scas
popf
call
jge
add
fnsave
out
add
and
jecxz
sbb
inc
aaa
lock
or
cmp
xor
xor
pop
push
xor
mov
adc
sbb
aam
sti
iret
jecxz
mov
sbb
mov
inc
xchg
mov
arpl
mov
dec
cmc
cmpsl
into
enter
fwait
icebp
or
in
ja
in
lds
hlt
adc
lret
mov
scas
xor
div
inc
dec
bound
mov
xchg
dec
inc
shlb
sub
push
fcomps
adc
sbb
scas
pop
nop
popa
sub
mov
pop
mov
les
js
and
fsubl
std
das
nop
pop
in
jl
scas
push
fcompl
sub
shlb
pop
jle
addr16
sti
adc
dec
dec
insl
jmp
mov
lahf
insl
push
int3
push
pop
rolb
cmpsb
sti
mov
push
int3
fdiv
xor
xchg
push
jmp
stos
jp
cmpsl
and
mov
push
add
cmp
dec
pop
loop
roll
mov
ret
pushf
push
in
inc
fdivp
or
and
xchg
dec
aad
or
pop
add
pop
ljmp
inc
mov
movb
dec
fwait
sbb
lods
sbb
inc
lahf
sbb
ficoml
insb
in
das
orb
xchg
inc
iret
dec
movzbl
mov
inc
pop
push
lret
mov
or
add
inc
mov
sbb
mov
cmpsb
mov
fldt
movsl
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
rorb
mov
adc
fwait
sahf
ret
in
sbb
lea
jno
adc
mov
xor
inc
cmc
inc
fwait
xchg
std
mov
into
inc
test
dec
stc
mov
dec
pushf
xchg
cmp
or
mov
jae
mov
lret
jge
pop
dec
aaa
into
lods
and
push
fmul
inc
mov
lret
movsl
ret
pop
sub
mov
shll
shr
mov
jle
push
lods
dec
bound
int
test
pop
ds
les
lcall
aad
mov
neg
mov
mov
lea
push
mov
sarl
mov
popf
sahf
out
and
or
add
or
subb
test
sahf
mov
mov
fidivrs
adc
inc
sub
or
fsts
ljmp
lods
dec
fsts
pop
pop
mov
arpl
cmpb
add
pushf
ds
hlt
jg
addr16
leave
loope
lea
iret
insl
mov
adc
xor
sbb
dec
pop
fcomps
mov
jne
inc
dec
inc
add
mov
jp
fwait
mov
adc
or
jno
and
and
jge
bound
fdivr
mov
cmc
mov
leave
lods
mov
and
stos
mov
outsl
and
icebp
cmc
loope
andb
sbb
cmp
popf
mov
rolb
sti
andb
ss
cmc
cmc
sub
sti
imul
imul
mov
xchg
mov
repnz
test
fcmovnu
push
sti
jns
push
jae
mov
shufps
loop
jecxz
out
pusha
sub
mov
shr
dec
jmp
paddq
aas
out
bound
adc
les
and
mov
add
mov
jecxz
inc
test
jg
outsl
fwait
outsl
and
pop
int3
xor
or
jbe
imul
aas
mov
ret
mov
mov
insl
jbe
jmp
stos
fidivl
sub
xor
mov
faddl
mov
mov
dec
ret
fcomi
imul
cmc
loopne
cmpsb
push
dec
jo
ss
cli
push
push
pushf
xchg
mov
cltd
cmp
xchg
nop
adc
mov
lahf
stos
inc
lods
xchg
mov
inc
and
loop
bound
mov
imul
mov
add
mov
les
push
mov
inc
out
mov
int3
fldenv
xor
int
fsubrl
fs
in
mov
movsl
inc
popf
rolb
pop
orb
idivl
xchg
cmpsl
or
mov
ficomps
or
out
test
jmp
push
aas
fwait
lret
in
mov
mov
or
jnp
daa
jae
cmp
out
adc
add
iret
mov
cwtl
stc
and
mov
fsubr
xlat
adc
popf
xchg
movsl
testb
test
lock
mov
adc
ja
add
roll
push
pop
sti
push
mov
stc
imul
pushf
aad
mov
cld
inc
xor
dec
clc
lock
movsb
mov
cmp
dec
aaa
push
sbb
fstpt
shrl
test
imul
outsb
outsl
outsb
mov
in
and
xchg
pop
roll
add
and
mov
sti
pop
fsts
subl
js
shlb
movsb
ret
sub
dec
jo
repz
call
pop
and
mov
inc
repz
cmc
inc
pop
adc
test
fwait
jnp
sub
sbb
lret
ret
test
cli
xchg
gs
icebp
inc
rcll
movsl
pop
lds
je
shll
fadd
mov
insl
and
and
jl
faddl
dec
mov
insb
xchg
push
subb
stos
sarl
popf
push
bound
in
or
dec
cmp
stos
or
imul
rcrb
cmc
mov
pop
push
push
loopne
shrb
mov
push
pop
mov
imul
data16
xchg
dec
scas
adc
xlat
rcr
mov
dec
popf
lret
filds
and
aad
mov
scas
divb
xchg
push
loope
cmp
js
add
stos
mov
movsb
into
jo
push
aam
ret
inc
mov
and
inc
std
xchg
fwait
add
push
pop
xchg
clc
xor
mov
mov
hlt
imul
jg
adc
or
pop
fwait
testl
push
sub
daa
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
mov
pop
imul
sahf
push
mov
das
mov
lret
imul
inc
pop
pop
mov
cmp
xor
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
lret
and
leave
jp
mov
push
out
dec
das
mov
mov
fisubrl
imul
ljmp
popf
loop
fcoms
insl
rcll
and
test
inc
add
mov
push
xchg
mov
add
inc
jne
cmp
stos
fdivs
mov
rclb
xchg
xchg
mov
lock
xchg
shlb
cmp
pop
repnz
mov
inc
ss
jne
popf
outsl
or
add
mov
mov
cli
popf
push
popa
or
leave
push
mov
xchg
inc
imul
out
in
jecxz
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
movsb
lret
test
les
roll
mov
pop
cmp
adc
mov
leave
xor
imul
rclb
xchg
repnz
pop
adc
iret
jns
and
roll
sbb
pushf
mov
push
mov
sti
add
mov
sbb
sbbb
scas
ficoms
cmp
call
repz
xchg
pop
orl
push
push
add
or
dec
mov
jno
pop
repz
lcall
push
cmpsl
cli
mov
push
and
fidivrs
jnp
sbb
pop
fdivrs
jnp
fdivs
cltd
dec
movsl
lret
data16
repz
in
xchg
test
push
sbb
or
arpl
sub
xor
lea
in
pop
shlb
xchg
adc
pop
rolb
lea
mov
cmp
lcall
pop
hlt
testb
movsb
ja
mov
aaa
test
aas
pop
hlt
mov
popa
shl
adc
js
xchg
ss
fcmovnbe
push
lods
sub
orl
dec
shlb
and
or
mov
push
iret
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
sub
scas
add
and
cwtl
js
sub
fimuls
sub
pop
mov
mov
xchg
jmp
sbb
adc
jae
lcall
adc
dec
jnp
fiadds
clc
mov
pop
jns
xchg
fidivrs
mov
in
mov
push
dec
push
lahf
add
insb
mov
mov
shlb
mov
imul
and
mov
dec
and
jno
les
push
push
mov
scas
insb
pusha
fiaddl
std
stos
mov
testl
lret
xor
orl
icebp
ret
mov
mov
mov
jae
add
jmp
push
gs
test
movsl
ret
stc
andl
aaa
in
dec
out
or
js
rcll
mov
mov
pop
js
xchg
adc
mov
and
mov
dec
push
loope
iret
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
out
movsb
cld
and
sbb
aaa
popw
clc
pop
push
lock
pusha
addr16
xor
mov
cwtl
inc
pop
repnz
iret
out
leave
nop
jg
jae
inc
sbb
sarb
jns
imul
shlb
inc
add
inc
xchg
pop
cltd
iret
mov
cmp
js
sbb
out
pop
or
jl
xchg
roll
fsts
push
xchg
ficoml
or
mov
ljmp
fstl
pop
cmpsl
fcoms
cmp
bnd
mov
inc
fwait
or
or
jns
dec
sti
mov
pop
lahf
les
pop
mov
repnz
fsub
pushl
out
shrb
nop
test
xchg
ja
and
int
int3
xchg
lds
movsl
rclb
ret
xor
cmp
pop
sub
movl
dec
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
ret
insl
notb
dec
xor
mov
addl
mov
xchg
mov
arpl
enter
lds
repnz
inc
pop
test
mov
pop
lds
add
sub
pusha
xchg
fxch
or
or
or
sub
lock
mov
mov
xchg
es
or
cmpsl
and
cld
out
or
push
ret
jle
lahf
call
jge
repnz
jecxz
dec
pop
dec
mov
xlat
ja
push
into
test
test
jp
mov
xchg
scas
jb
mov
sbb
leave
sbb
cltd
xor
mov
lea
lcall
flds
cmp
movsl
xchg
pop
mov
lods
cltd
sub
jae
mov
cltd
dec
push
repnz
pop
ficompl
iret
inc
sub
iret
int
jp
dec
lods
xchg
lahf
stos
mov
pop
test
mov
fisttps
stos
mov
lods
mov
pop
sub
dec
inc
fwait
adc
xchg
pop
rcrb
adc
test
je
loop
lret
les
andb
test
sub
sbb
adc
loopne
std
fxam
sub
cmp
mov
push
divl
xchg
push
popf
ficoml
cs
cmpsl
js
aam
leave
inc
lret
lods
dec
fsub
push
fs
xchg
jae
leave
inc
mov
cmpsl
jnp
and
push
cmp
add
icebp
jo
shlb
push
rclb
xchg
xchg
jmp
cmp
mov
push
mov
stc
mov
into
adc
fdiv
aaa
sub
sbb
ror
lahf
vpmulhuw
stos
mov
cmp
sbb
jle
mov
dec
outsb
test
imul
push
imulb
outsl
sub
sbb
add
mov
sbb
mov
lret
xor
incl
negl
outsb
or
lret
sub
cltd
out
orb
cmp
popf
xchg
jle
test
lock
ficomps
or
and
cli
add
popf
jle
jecxz
shll
lea
por
xor
call
cwtl
dec
sbbb
jbe
out
and
shrb
pop
aam
ret
lock
into
sbb
shll
xchg
sar
les
mov
mov
jb
xor
in
jmp
adc
pop
sub
pop
and
insb
loope
jp
mov
mov
sub
jae
xorl
mov
mov
jecxz
icebp
addr16
cltd
fwait
mov
stos
neg
lret
inc
push
insl
sub
fwait
add
fstp
aaa
xor
dec
out
cwtl
aam
mov
test
mov
pop
test
push
pop
pop
adc
jl
sbb
fiaddl
push
subl
xchg
mov
add
push
in
loopne
cmp
or
popf
filds
iret
out
je
cli
or
sbb
mov
fwait
push
dec
mov
mov
inc
xchg
mov
xchg
jmp
mov
and
mov
jno
scas
cmpl
mov
pop
ds
les
mov
dec
pop
add
mov
dec
dec
mov
rcl
cmp
push
xor
cltd
cmp
sub
or
fwait
cwtl
inc
stc
fsubr
scas
mov
sbb
cld
mov
in
cmp
iret
inc
ret
or
inc
push
sbb
jo
sti
popl
xchg
dec
test
or
insl
cltd
into
mov
cmpsb
add
xor
stos
push
adc
push
push
rcrb
jbe
mov
movl
out
pushf
dec
data16
xchg
xor
adc
lods
xchg
imul
inc
xor
aad
sarl
cmpsl
inc
mov
dec
movsl
xchg
movsb
fucomi
bnd
cltd
call
mov
icebp
xchg
cmp
adc
cmpsl
sbbl
jp
jno
sub
mov
push
in
imul
inc
mov
jge
cltd
xchg
add
lcall
or
daa
loop
hlt
mov
daa
sub
js
jns
mov
pop
adc
pop
std
sti
xor
mov
in
and
stos
xchg
mov
mov
mov
movl
or
cs
aaa
fnstenv
in
inc
inc
sbb
decb
add
icebp
pop
test
lret
sbb
inc
xchg
int3
in
scas
mov
ffree
stc
inc
push
out
mov
pop
lret
shl
sub
push
jmp
mov
pop
leave
ljmp
pop
sub
jp
add
sbb
shl
adc
cmp
pop
icebp
sbb
add
cld
sbb
or
push
sbb
jb
mov
rol
cmp
cwtl
inc
notl
push
into
mov
sbb
jnp
rcrb
pop
sub
loop
pusha
and
es
imul
jecxz
cmp
pushf
test
insl
out
mov
cmpl
js
test
orb
and
dec
imul
pop
clc
enter
lret
add
sbb
and
cwtl
ret
bound
cmpsl
sbb
add
dec
mov
fstpt
cli
xlat
enter
push
lods
cli
cmpsl
adc
lret
insb
mov
negb
outsb
xbegin
and
andl
pop
pop
testb
mov
mov
xor
jae
mov
mov
push
in
ret
rcrb
fisttps
fbld
rclb
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
sahf
add
pusha
jo
jnp
enter
sbb
pop
lret
int3
xor
dec
mov
enter
decb
jnp
mov
les
or
in
imul
inc
ss
jne
lock
sub
add
enter
inc
cmc
adc
call
dec
aad
cmp
jne
pop
sbbl
mov
clc
push
xor
push
jecxz
clc
leave
cmpsb
mov
clc
push
cli
mov
xchg
ret
mov
lret
push
loopne
xor
mov
xchg
negl
fstps
mov
and
popa
and
imul
sti
repnz
jne
imul
cli
jmp
sbb
arpl
dec
mov
cmpsb
lahf
fnstsw
xchg
or
bound
xor
inc
sarb
lds
and
inc
call
rcll
mov
aam
cmp
fldenv
test
jecxz
fidivrl
in
movsl
cmp
cmp
xchg
pop
test
test
pushf
jp
dec
mov
mov
pop
add
inc
cmpsl
es
dec
sbb
nop
mov
lret
lcall
cld
adc
adc
and
or
mov
adc
in
xchg
mov
push
inc
jecxz
jb
push
bnd
test
ret
gs
push
lods
xchg
sub
adc
push
test
movsl
sbb
nop
lahf
popf
les
scas
or
ljmp
clc
inc
ret
add
jge
dec
dec
in
inc
inc
sbb
fistl
sub
mov
xor
pusha
jns
stos
sbb
push
nop
push
scas
inc
xchg
cli
mov
mov
aas
cmpsl
sub
or
idiv
push
dec
mov
out
mov
xor
pop
mov
int3
mov
lods
adc
mov
bound
xchg
mov
mov
pop
xchg
fwait
xlat
sbb
and
sti
mov
pushf
test
out
mov
cmpl
pop
lcall
imul
lcall
sub
mov
daa
mov
sbb
mov
inc
cmp
dec
popa
xchg
mov
sbb
mov
cmpsl
cmpsl
mov
fmul
xor
dec
sbb
lea
mov
push
fadd
mov
jne
mov
mov
fnstsw
jbe
arpl
mov
cmp
bound
add
or
enter
mov
jo
dec
lods
pop
jno
push
daa
dec
fsubrl
and
fildl
repz
js
outsl
sti
mov
or
xor
jge
sti
add
pop
stos
aam
mov
jnp
inc
push
mov
or
or
cmp
in
and
cmp
xor
jb
mov
enter
cmpsl
inc
popf
std
sub
je
call
adc
imul
sahf
dec
and
jge
in
pop
lea
adc
and
pop
test
cmp
pop
add
add
add
mov
sub
nop
arpl
adc
ret
pop
jbe
xor
sahf
push
lods
push
adc
add
repz
js
fldt
or
cmpsl
xchg
test
cmp
cwtl
or
push
inc
inc
ret
pop
insl
les
rol
xor
pop
xchg
dec
loopne
or
ds
pop
js
int3
mov
fsub
andl
das
fadd
cwtl
repz
inc
iret
sbb
mov
repnz
sub
pop
cmc
sub
mov
jns
insl
mov
cmp
push
dec
xor
mov
push
stc
jbe
sahf
xchg
jb
dec
push
inc
das
sub
inc
mov
push
xchg
scas
add
or
mov
pop
sub
mov
repz
cmp
sbb
dec
mov
push
cmp
mov
lcall
mov
lret
jmp
xlat
stos
mov
fbld
push
pushf
std
in
mov
rep
push
dec
popf
lret
adc
xor
cmp
sbb
xchg
cmp
ja
test
mov
pop
jbe
sub
xchg
dec
rolw
mov
jp
cmp
cld
mov
dec
xchg
xchg
xorl
rcll
dec
aas
jns
pop
and
je
mov
fucomp
push
fdivrs
sub
in
lds
jg
movswl
jmp
std
mov
sti
and
arpl
jecxz
je
and
mov
jne
pop
movsb
nop
out
dec
xorb
rcl
idivl
dec
and
mov
mov
test
inc
mov
pop
clc
iret
jae
lahf
pop
sbb
mov
pop
mov
mov
add
fcoml
lahf
dec
sub
or
stos
mov
jnp
pop
jae
das
leave
mov
or
ljmp
pop
lret
movsl
pop
mov
fildll
ret
xchg
add
sbb
pop
and
rdmsr
movsl
xchg
les
cmpsl
lods
pop
test
lods
inc
sbb
scas
in
or
popf
scas
pushl
xchg
mov
or
or
add
leave
xor
mov
and
je
movsb
mov
lea
js
push
cs
rorl
shl
lea
and
cmpsl
push
xor
xchg
enter
push
aas
and
lret
jnp
fsubrs
dec
mov
mov
pop
shr
repz
dec
movsl
test
mov
inc
sti
mov
std
and
and
xor
leave
push
pop
or
mov
subb
fxtract
push
sbb
mov
mov
lcall
cmp
mov
lret
fucomp
jno
fldt
arpl
ret
sub
add
lods
xchg
stos
jnp
clc
lods
pop
stos
xchg
stos
inc
xchg
fistl
xchg
push
loope
notb
daa
into
jmp
cld
adc
xchg
dec
fistps
jno
jnp
inc
mov
add
inc
dec
sub
test
xchg
mov
xchg
mov
xchg
cmc
orl
xrelease
push
mov
outsl
or
fnstcw
inc
mov
test
dec
pusha
andl
stos
and
add
enter
imul
or
int3
mov
lcall
inc
xor
mov
inc
clc
mov
jecxz
mov
sbb
in
clc
and
mov
push
jnp
add
dec
pop
pop
or
or
sbb
cmpl
daa
ret
sbb
sub
aas
lret
dec
push
imul
mov
fstpl
insl
jg
nop
xchg
dec
popf
lret
lods
outsb
xchg
pop
xor
xor
push
cld
mov
adc
pop
jl
lret
jns
movsl
sub
inc
pop
lret
sbb
cmp
jle
sub
cmp
cmc
add
pop
xor
loopne
sub
mov
andl
les
rorb
push
aam
ret
and
insb
jbe
fdivr
mov
pop
fisubl
jp
outsl
bswap
lds
adc
push
jp
mov
sbb
and
mov
fldpi
mov
cmc
aam
add
xor
mov
movsl
pop
xchg
or
and
imul
lret
imul
xor
inc
sbb
adc
addb
lea
mov
out
fs
jb
dec
inc
jmp
test
xor
push
flds
cmp
jmp
roll
jl
ret
sbbb
adc
cmp
rorl
pop
push
fistl
mov
sub
jbe
inc
jle
jg,pn
or
cmp
sub
cmp
push
xchg
and
dec
inc
sub
rclb
mov
adc
xchg
rclb
and
mov
jnp
mov
xlat
xchg
rcrb
push
adc
rorl
mov
sbb
and
and
push
dec
movsb
popf
xchg
push
stos
add
dec
mov
fwait
cwtl
lea
ss
ret
xchg
jb
push
inc
ret
push
cmp
cmp
sbb
pop
int3
mov
adc
mov
adc
inc
pushf
stos
mov
push
hlt
mov
fildl
nop
xlat
dec
sub
push
sub
cwtl
bnd
push
xor
inc
fs
movsl
into
aaa
dec
rcrl
les
sbb
sbb
push
mov
jne
dec
xchg
pop
dec
ja
lret
addl
fcoml
ja
and
jno
aad
mov
popf
iret
fucomi
repnz
jb
inc
mov
or
lahf
mov
stc
mov
adcl
ret
inc
sub
xchg
sti
xor
jb
popf
outsl
or
vcvtpd2psx
push
leave
outsb
aaa
sbb
test
dec
mov
fdivrs
dec
sbb
in
dec
ret
xorl
imul
xor
pop
mov
or
jp
pop
jl
insb
mov
mov
xchg
lods
push
and
js
loopne
sbb
or
jb
pushf
dec
xor
stos
dec
sbb
and
aam
push
mov
std
jae
fcmovbe
xor
pop
sbb
mov
call
sbb
lret
push
sub
add
dec
ss
xor
nop
repnz
adc
xor
xor
xor
in
lds
inc
add
divl
pop
dec
mov
pop
movsl
arpl
push
dec
add
mov
in
dec
mov
pop
out
imul
adc
mov
inc
inc
popf
mov
fcmovnb
loopne
jb
xlat
pop
jle
repnz
loop
incl
jge
hlt
je
lds
xchg
sub
push
dec
mov
pop
pushf
sub
test
in
pop
fistl
inc
mov
fcmovnu
mov
scas
mov
xchg
add
add
jecxz
sbb
or
lods
scas
nop
jp
jno
pop
dec
mov
mov
dec
sahf
cli
stos
push
test
lods
incl
stc
arpl
sub
rcrl
mov
ffree
xchg
lods
cmpsl
mov
jl
or
aam
pop
xchg
ret
xchg
sahf
stos
xchg
mov
xchg
lods
lcall
ret
shrb
jnp
and
lahf
scas
jg
leave
jge
mov
scas
inc
fwait
out
js
xchg
and
pop
sub
andl
test
dec
cmp
fidivrl
xor
mov
mov
push
sbb
in
imul
out
call
push
mov
jmp
xor
ss
or
push
adc
dec
mov
leave
pop
outsl
mov
jmp
adc
idivl
ja
add
mov
imul
inc
pop
iret
repz
cmp
lods
es
inc
cltd
or
sahf
mov
sbb
add
lret
cmpsl
cmp
sbb
mov
fisubrs
push
mov
pop
stos
push
and
lds
lods
jmp
xor
idiv
std
dec
popf
les
cld
mov
xorb
jno
inc
sbb
mov
adc
dec
cmpsl
push
push
out
lcall
inc
mov
std
mov
xor
sub
repz
sbb
add
out
sbbl
cmpsl
mov
xor
mov
jge
fwait
aas
xchg
ret
jns
mov
jns
rcrb
es
fcoms
test
mul
ds
bound
popf
add
cmp
xchg
xchg
inc
fisttpl
inc
push
sub
faddl
cmp
pop
xor
push
test
inc
mov
mov
hlt
dec
or
jl
push
hlt
jb
sahf
pop
enter
add
rcrl
pop
mov
fnsave
pop
xor
push
nop
aaa
repnz
push
fcompl
sbb
add
mov
mov
repnz
dec
jbe
adc
insb
push
pop
shlb
cld
nop
jns
adc
mov
xchg
fiaddl
push
or
cmpsl
es
mov
out
xor
sbb
cmp
sti
add
out
js
cmp
pop
scas
jg
out
rorl
push
xchg
pusha
addl
fwait
sbb
mov
xor
ja
mov
lahf
xchg
ds
call
push
jle
out
and
cmpsb
je
fadds
inc
push
jp
shll
mov
jmp
adc
cmpb
loopne
add
movsl
sbbl
sub
fists
inc
cmpl
repz
bound
adc
adc
shl
nop
jg
adc
ret
dec
lret
cltd
adc
sub
or
inc
std
test
shll
fildll
dec
mov
sar
mov
icebp
add
adcb
add
cmp
xchg
stos
jge
imul
jecxz
ffree
lcall
or
mov
or
out
js
xchg
cmpsl
fcoms
in
or
inc
rorl
xchg
pop
je
inc
nop
dec
and
push
fdivrs
cli
xchg
clc
push
pop
xchg
ret
cmp
lahf
xlat
stc
xabort
pop
xchg
movsb
inc
xor
into
mov
addl
dec
ret
fcoms
lret
sbb
cmpsl
sub
dec
mov
cmp
ss
fstl
pop
add
or
mov
ret
mov
mov
rcrl
adc
dec
jo
scas
jo
rorl
push
dec
push
scas
push
test
cli
mov
lcall
roll
mov
std
lret
push
xchg
test
leave
lahf
nop
sti
sbb
pushf
les
stos
lds
shlb
xchg
test
pop
cmp
sbb
dec
lods
jle
test
add
lret
cmp
sti
add
out
mov
imul
mov
in
mov
loopne
repnz
xor
loope
jge
xlat
aaa
sbbl
push
xor
xor
xchg
sti
xor
jo
pushf
outsl
or
or
sbb
jle
sbb
ljmp
adc
fisubrs
sbb
push
adc
pop
push
test
fstpt
pop
adc
stos
cmp
and
into
lcall
mov
jnp
pushf
shr
imul
mov
adc
lret
repz
inc
fsubrl
sbb
inc
xlat
adc
je
ja
fsubr
ret
push
dec
mov
inc
ret
dec
sbb
std
cmp
mov
cmp
xchg
daa
mov
sub
mov
add
inc
sub
dec
movsl
xchg
mov
pop
inc
pop
mov
lods
inc
cltd
cmpsl
pop
pushf
pop
movsl
mov
fucomi
cmc
mov
or
jo
adc
js
cwtl
hlt
pusha
xchg
mov
mov
mov
sbb
or
mov
inc
push
mov
xchg
cmp
movsl
cli
xchg
test
insl
fwait
insl
mov
xor
jecxz
and
mov
popf
in
in
push
or
dec
sahf
inc
cmp
movsl
cmp
ds
mov
repz
xchg
popl
shll
mov
inc
mov
test
mov
pop
xchg
push
rcrl
rcrb
sbbl
and
nop
or
sub
aaa
cltd
xor
dec
fnstsw
dec
pushf
dec
xor
test
test
mov
mov
push
sub
lods
mov
mov
imul
je
mov
cmp
rorl
and
test
adc
inc
sbb
cltd
faddl
movsl
dec
xchg
jbe
lods
fimuls
aad
mov
fmull
repz
push
js
js
pop
std
arpl
rolb
daa
adc
cwtl
inc
mov
dec
fwait
and
add
add
mov
addr16
scas
loopne
pop
testb
stos
imul
jne
jecxz
mov
pop
incb
mov
enter
push
adc
mov
mov
sbb
pop
sub
cmpsb
sahf
divb
adc
lds
or
sbb
repz
movsb
shrl
sti
xchg
push
lock
pop
jp
ror
xor
popf
pushf
inc
mov
leave
arpl
imul
test
ret
mov
divl
dec
mov
dec
decl
or
mov
add
sbb
les
cmp
pop
mov
popa
pop
or
inc
leave
xchg
dec
lea
jle
test
test
movl
fists
jb
inc
xlat
cmpsl
in
cmp
mov
mov
std
push
popf
cmp
jge
xchg
scas
orb
sbbl
or
mov
int
xchg
cmpsl
ret
fldenv
mov
xor
push
add
and
mov
sub
pop
cmc
xor
push
adc
dec
cmp
add
dec
inc
mov
mov
daa
ds
clc
ds
in
sub
loop
inc
sbb
inc
sub
or
mov
dec
ljmp
cmpb
add
cmp
mov
inc
lahf
push
sub
xchg
les
shr
fisubs
pop
cli
fcoms
addr16
fs
cmp
lret
pop
sahf
loope
lock
movsl
adc
mov
jo
stos
sub
xor
sub
pop
aad
lods
mov
adc
jg
mov
adc
push
nop
xor
xchg
or
sub
mov
aam
imul
inc
subb
lods
jnp
enter
sbb
pop
fnstenv
ret
cmpb
je
test
push
dec
xchg
dec
dec
mov
dec
pop
imul
out
jne
stos
mov
addl
int
mov
loop
ja
lret
push
adc
fsubr
dec
mov
and
mov
inc
sbb
inc
add
mov
inc
xchg
test
inc
sbb
shrb
mov
movsb
fisubl
sbb
inc
testl
ljmp
rcrl
test
ret
or
adc
mov
push
cltd
push
rorl
test
sarl
insb
std
fwait
lods
jge
lds
cltd
cmpsl
pop
cwtl
jp
scas
loop
cld
sbb
lahf
lahf
test
arpl
and
lret
add
inc
inc
sub
mov
fs
sub
data16
push
sub
mov
push
fidivrl
lcall
mov
imul
xlat
pop
cmp
pop
fnstenv
test
mov
nop
dec
cmpsl
xor
jle
pop
aaa
mov
jns
xor
lods
ficomps
mov
movsl
test
lods
push
xchg
repz
orb
add
das
push
or
test
out
and
bnd
jg
adc
lods
mov
pop
xor
repnz
les
push
cld
mov
addr16
mov
jmp
xchg
mov
xchg
fcoms
sbb
xor
xchg
insl
sbb
test
dec
dec
xor
int3
push
int
lods
jle
mov
cmp
int3
cmp
pushf
leave
lret
call
dec
scas
push
jmp
mov
andl
xchg
dec
movsl
mov
and
leave
cwtl
dec
and
mov
cmp
stos
ja
insl
cmovae
pop
push
mov
push
adc
cmp
jecxz
mov
sbb
mov
rorb
in
insl
sahf
dec
mov
ljmp
adc
and
mov
mov
lahf
mov
roll
xor
mov
inc
pop
adc
jmp
ret
push
hlt
mov
sbb
cmpsl
pushf
push
xchg
adc
in
dec
fwait
mov
lods
std
inc
in
jae
sbb
enter
adc
fmull
dec
push
mov
add
mov
adc
xchg
push
xchg
dec
mov
loop
xchg
xor
and
mov
shll
lea
inc
in
sub
popf
scas
push
jmp
or
adc
jecxz
and
ljmp
stc
inc
dec
testl
fwait
xor
add
rclb
movsl
fimull
push
gs
insl
push
dec
xchg
leave
mov
in
enter
loop
je
jmp
popf
out
icebp
or
push
insb
inc
adc
fidivs
cmp
xor
ja
push
test
or
mov
jae
mov
jae
add
cmp
or
jmp
mov
jecxz
add
int
sbb
cs
ret
movsl
sbb
add
stos
mov
ja
inc
in
dec
mov
sub
dec
cld
in
mov
clc
adc
mov
arpl
sub
data16
stos
push
loop
xchg
pop
push
mov
add
dec
mov
xchg
sbb
and
xchg
fsubs
sbb
leave
push
nop
dec
pop
scas
inc
xchg
ret
adc
insb
inc
adc
clc
mov
adc
pop
daa
xchg
xor
rol
and
mov
stos
cmpl
pop
fisubs
inc
adc
ret
lds
fxch
cld
or
inc
sbb
add
jnp
cmc
xor
lds
xchg
repz
hlt
mov
mov
ss
and
sahf
shll
jp
ds
mov
mov
rcrl
dec
xor
cld
add
inc
and
ja
mov
in
mov
cmp
test
leave
mov
stos
scas
dec
inc
add
popf
repz
in
bound
test
push
cmp
lret
add
inc
es
xchg
std
xor
sbb
pop
cmp
adc
xor
ret
mov
cmc
add
pushf
sbb
sub
sub
mov
es
dec
mov
loope
or
xor
or
in
jbe
cli
mov
xor
dec
mull
shr
jb
cmp
jne
pushl
add
add
mov
shr
and
lret
sbb
cmp
xor
mov
cmc
mov
stos
shll
inc
mov
into
lcall
and
cmc
jmp
mov
inc
sbb
and
pushf
pop
and
mov
mov
inc
sbb
and
sbb
les
push
stos
test
inc
cli
sub
test
stc
dec
dec
cld
sub
mov
mov
inc
ret
pop
sub
cld
mov
dec
leave
daa
jne
or
lret
or
dec
jmp
xor
lds
inc
mov
sahf
xchg
sbb
js
jp
out
fbstp
dec
sti
cmpsb
add
add
arpl
dec
rcrl
into
sbbl
xor
mov
mov
or
xchg
pop
jne
in
lea
fadd
popf
mov
dec
mov
shlb
enter
imul
fiadds
sub
push
adc
ret
pop
pop
mov
pop
loopne
stos
xor
mov
mov
jnp
mov
imul
ss
add
mov
adc
repz
test
icebp
mov
xor
in
lods
bound
inc
in
lret
pushf
dec
inc
fists
jge
out
ffreep
jecxz
xor
repz
ret
pop
jmp
test
or
xchg
addl
cmp
fldt
cmp
fcomps
adc
and
in
adc
mov
xor
adc
jmp
sub
push
mov
enterw
and
out
fwait
xor
clc
aam
fsubs
insl
fwait
insl
lea
lds
inc
cmp
dec
xlat
pop
jle
jne
jecxz
fwait
jmp
mov
add
xchg
jne
dec
mov
sbbb
jbe
fwait
jae
sub
mov
imul
faddp
mov
dec
ret
repz
mov
cltd
addb
mov
ss
adc
popa
push
sbb
fs
dec
and
sahf
sbb
shrl
push
icebp
stos
sub
cli
mov
dec
jnp
mov
xchg
adc
fmull
dec
push
inc
mov
jne
inc
mov
adc
xchg
loop
dec
mov
push
cmp
lods
xor
cmpsb
ret
in
mov
fdiv
sti
cmpsl
pop
jge
pop
add
sbb
xchg
pop
test
pop
pop
imul
fwait
mov
ret
into
push
pop
jns
fdivrs
jne
insl
popl
cmp
push
jne
fwait
sub
shlb
mov
je
xchg
xchg
icebp
push
adc
inc
and
mov
int3
fwait
pop
test
callw
jne
aam
in
scas
xlat
jmp
ret
lcall
dec
xchg
aas
add
lcall
cmpsb
mov
sarb
insl
cmpsl
sbbl
mov
and
test
sar
push
aad
inc
mov
fs
fisttps
lret
shl
fwait
orl
sbb
stos
or
fdivrl
xor
or
into
lods
jle
jmp
push
inc
iret
repz
lahf
adc
push
stos
into
jo
arpl
addl
adc
outsl
shl
and
or
mov
adc
or
xchg
imul
sub
cmpsl
ret
ljmp
pop
xchg
aaa
bound
out
jecxz
rorb
adc
sub
mov
int
ds
pop
lcall
shlb
mov
sbb
inc
inc
dec
pop
inc
push
push
mov
mov
push
js
sbb
int
mov
mov
jne
xchg
mov
fimuls
adc
mov
aas
and
push
test
inc
aam
and
push
jmp
jb
or
xor
mov
or
aad
in
mov
sahf
jno
dec
and
mov
xor
xchg
or
xchg
mov
and
into
lods
jle
mov
and
xchg
pop
pusha
mov
out
adc
pop
mov
and
rorl
aam
fmuls
adc
xchg
outsl
xor
mov
fsubs
mov
test
push
test
adc
jbe
sub
mov
cmp
sbb
daa
movsl
mov
je
xchg
xchg
iret
push
adc
dec
lret
jmp
sub
or
xor
mov
test
inc
mov
jae
mov
aas
jno
sub
addr16
lock
fiaddl
aas
xchg
adc
arpl
popf
fsubrl
adc
mov
mov
push
cmpsl
adc
dec
mov
movsb
leave
test
mov
fs
decl
mov
jl
dec
xchg
adc
les
pop
stos
xchg
fistl
fisubl
pusha
jb
lods
jle
cmp
mov
shrl
lahf
jge
inc
xchg
loop
xchg
sbb
rolb
cwtl
add
cmpsb
jae
and
jns
dec
je
lods
addr16
aam
mov
ret
inc
mov
pop
cmpsb
rolb
out
jae
gs
outsl
mov
sub
bound
mov
inc
cmp
push
or
outsb
imul
pop
adc
inc
jg
les
scas
mov
arpl
int
pusha
lock
loopne
cmp
add
push
and
sbb
add
dec
out
jno
fnstenv
jns
movsl
mov
rcrb
notb
mov
add
push
and
rolb
push
aad
jae
lret
inc
shld
popf
lret
icebp
add
push
sbb
ret
or
or
andl
mov
movsl
or
pop
mov
lahf
sbb
mov
lret
rcr
ret
jge
inc
xchg
xchg
repz
out
push
xchg
jg
adc
sbbl
clc
mov
adc
xchg
sarb
les
inc
jecxz
loope
pop
cmpsb
fstpt
push
fisubl
bound
frstor
adc
mov
mov
mov
cwtl
push
add
mov
sub
jbe
daa
adc
adc
andb
lcall
mov
lods
popl
mov
push
fadds
ds
hlt
inc
xchg
add
rcrl
aam
inc
sbb
push
inc
cltd
nop
loop
fisubrl
dec
and
fisttps
dec
add
test
movsb
leave
test
lods
popf
inc
pusha
sub
aaa
ljmp
icebp
adc
sub
pop
add
outsb
scas
jmp
mov
scas
sub
pop
and
mov
addl
stos
jmp
popf
fiadds
iret
push
decl
inc
mov
sub
mov
dec
aam
jns
dec
xor
mov
or
les
fwait
mov
xchg
pop
imul
cmp
cmpsb
jnp
js
rcrl
popf
jb
stos
adc
or
pusha
inc
adc
sub
and
call
repnz
rcrb
pop
push
mov
jns
ss
aam
sti
pop
testl
cmc
mov
movsl
mov
sbb
and
add
rcrl
mov
nop
push
divb
add
mov
fldcw
sub
sahf
jp
rcl
loopne
pop
fucom
repz
aaa
jl
or
test
arpl
or
pop
shlb
ja
mov
push
mov
jno
dec
cwtl
xor
mov
lea
mov
and
bnd
test
add
and
rol
pop
mov
adc
rcll
push
mov
loopne
enter
mov
cmp
aam
fdivrs
gs
push
adc
inc
sub
cwtl
jns
es
addr16
adc
ret
push
dec
mov
cltd
sbb
cmpsl
jae,pt
shr
repz
adc
imul
jb
cli
pop
pop
inc
or
jns
lahf
rcrb
outsl
mov
iret
inc
sbb
shlb
popa
sahf
ret
sbb
rorl
lds
push
and
lds
lcall
cmp
stc
jae
fisttpl
test
test
adc
jae
dec
push
or
adc
xor
sub
mov
cmp
or
shl
adc
inc
inc
ljmp
lock
sbb
add
cltd
xchg
fwait
push
mov
fdivs
dec
lcall
xor
xor
push
inc
pop
mov
mov
cmp
and
mov
outsl
push
dec
test
pusha
mov
adc
jg
sbb
fwait
push
mov
movsb
lea
cmp
ss
popf
push
xor
jne
out
addr16
xchg
stc
pop
adc
idivl
in
and
sub
dec
adc
cli
and
push
nop
push
int
inc
sbb
dec
sbb
add
dec
and
lds
sti
lods
leave
dec
sbb
sub
mov
mov
cli
leave
pop
loop
push
dec
jo
test
dec
dec
xchg
adc
ret
jl
rorl
mov
jae
sub
jno
movsb
sub
jno
lds
sbb
js
cld
push
cwtl
fs
and
andl
or
inc
adc
pop
test
mov
and
jns
clc
test
xor
test
insl
xchg
jmp
inc
and
inc
pop
cltd
lods
mov
jnp
fdivs
jecxz
testb
das
xchg
enter
fwait
jle
imul
out
imul
std
dec
dec
aad
in
sbb
loopne
out
jle
pop
aam
sti
pop
pop
dec
andl
popa
ret
fdivp
jnp
mov
xchg
mov
pop
add
or
mov
push
pop
and
iret
mov
sbb
les
dec
cltd
js
cmp
dec
push
dec
cmpl
stc
mov
push
sbb
cs
loopne
mov
xchg
add
sub
rorl
fsubrs
mov
fcoml
jbe
cmpsl
fimuls
aad
mov
enter
mov
adc
data16
fucom
or
xor
or
inc
test
shlb
and
xor
sahf
xchg
and
and
add
bound
cltd
rorb
add
sbbl
add
mov
out
push
cmc
enter
pop
push
mov
shr
jae
pop
divb
les
cmpl
jmp
addr16
pop
fnsave
addb
mov
push
imul
iret
cmpsl
ret
fs
call
mov
sbb
les
dec
cmp
mov
subl
lret
mov
push
cmp
ret
xchg
sbb
clc
mov
sub
sbb
jae
mov
icebp
mov
ljmp
shr
ja
insl
xor
mov
dec
js
and
inc
xchg
leave
test
add
pop
inc
cwtl
adc
mov
cwtl
dec
and
inc
adc
mov
mov
mov
jae
gs
les
cltd
enter
xchg
mov
popf
out
leave
add
dec
mov
out
cs
fiadds
xor
int
dec
sahf
dec
lds
mov
mov
movsl
mull
lea
xchg
leave
lret
loopne
pop
adc
pop
sti
mov
jecxz
jns
rcrb
aam
sub
cmpsl
sbbb
cltd
andb
and
pop
adcb
mov
push
in
scas
dec
sbb
xor
fisubs
shlb
loope
mov
add
push
mov
pop
aad
adc
test
imul
xchg
sti
test
enter
test
repnz
xchg
loop
lahf
xchg
jmp
pushf
repnz
mov
push
cmpb
loopne
mov
adc
or
dec
cli
fwait
imul
adc
outsb
mov
push
fisubl
jmp
test
gs
insl
in
movl
jmp
enter
and
int
clc
jg
and
xor
dec
mov
int
push
and
mov
push
mov
mov
aam
sti
pop
adc
fcmovnu
mov
inc
enter
inc
outsl
or
lret
mov
push
or
sbbb
push
idivl
das
sarb
sbb
out
fisubs
rclb
dec
push
cmc
fisttpl
int3
fst
js
and
dec
repz
in
lock
xchg
test
inc
inc
shll
add
xor
stos
fstl
fwait
and
pop
cld
ret
mov
jp
test
xor
aad
xor
pop
adcl
xchg
pop
mov
in
jge
dec
dec
mov
adc
std
inc
mov
cmp
cmpsb
jnp
test
pop
jnp
fdivs
jecxz
fwait
hlt
lea
mov
mov
add
lods
fwait
int
inc
cmp
sub
vmaskmovdqu
shl
mov
jno
ss
mov
inc
scas
lcall
lods
cs
lret
hlt
movsl
ret
inc
loope
in
sub
out
and
cltd
mov
ret
mov
inc
mov
sbb
movsb
mov
int
sub
dec
pop
dec
xchg
test
scas
fldt
mov
jl
or
loope
cmp
dec
inc
das
xchg
ficoml
popf
outsl
jno
stos
xchg
stos
std
xor
fprem1
cmp
pop
test
mov
jecxz
xchg
fwait
and
insb
inc
fwait
cmc
lret
mov
sarb
clc
mov
adc
or
add
stos
add
inc
mov
dec
mov
push
sti
jno
mov
xchg
mov
inc
inc
fstl
cmp
inc
loop
xor
into
or
call
pop
pop
sub
inc
pop
xchg
dec
into
scas
mov
jl
sub
cs
lock
out
pop
das
mov
mov
inc
imul
lds
cmp
sahf
divl
inc
sbb
or
lret
mov
shl
dec
cmpsl
mov
popf
inc
cltd
nop
sub
and
jne
les
movsb
shrb
dec
sbb
dec
mov
xor
xchg
insl
stos
dec
pop
insb
fcoms
mov
or
sar
inc
cmp
xchg
sbb
xchg
lock
test
scas
call
popf
fists
mov
add
inc
dec
sbb
rclb
addb
push
xchg
jmp
push
mov
out
inc
and
cmpsb
movsl
test
addr16
lea
mov
mov
in
sub
xchg
dec
out
mov
jne
dec
movsb
push
mov
in
mov
ret
loop
repz
dec
sbb
in
mov
clc
sti
mov
pop
movsb
mov
add
fildl
enter
or
into
mov
lret
movsl
mov
lcall
filds
repnz
sbb
pop
jnp
fs
fistpll
stos
imul
fcoms
lds
cwtl
pop
xchg
add
popf
xor
push
jne
add
mov
mov
pop
sarl
xchg
mov
mov
test
in
mov
stos
aam
xchg
cmp
int3
inc
inc
add
mov
fwait
push
dec
mov
ficoml
dec
aam
jns
cmp
gs
jp
cmpsb
push
test
fisubl
and
div
xor
fnsave
mov
int3
pop
sub
inc
add
cmc
fnstenv
xchg
out
push
nop
mov
inc
ja
xor
mov
arpl
int
mov
mov
xchg
cmp
adc
clc
lds
clc
mov
adc
int
fadds
adc
jae
mov
in
into
addr16
iret
sbb
imulb
mov
inc
fists
test
dec
jge
mov
jae
ljmp
fadds
or
lds
mov
lcall
inc
lcall
xchg
pop
sbb
adc
inc
pushf
loop
loopne
dec
sub
cwtl
arpl
mov
sbb
loopne
xlat
in
divl
addb
clc
or
xchg
int
jg
addb
test
je
cmpsb
ret
push
mov
sbb
cmpsb
mov
mov
xlat
pop
loop
out
mov
dec
pop
mov
sub
or
aas
mov
cmp
cmc
mov
mov
jecxz
int3
fwait
pop
push
ja
xor
shlb
ret
add
clc
inc
aas
test
sbb
mov
add
out
dec
pop
mov
inc
sbb
arpl
pop
jmp
mov
pushf
dec
and
shrl
dec
pop
aas
lret
sbb
sub
test
iret
mov
dec
sbb
sbb
or
stos
cmp
test
xchg
gs
outsb
shrb
mov
movsb
mov
add
jmp
popf
fiadds
push
je
sub
push
and
sub
ror
cwtl
add
or
inc
test
rcll
push
aad
ret
inc
jge
sbb
mov
or
pop
rcrl
stc
int
dec
leave
cmpb
xchg
add
leave
addb
nop
sub
cmp
lea
out
and
push
xchg
mov
or
mov
sub
cmp
mov
mov
pop
pop
iret
subl
test
lea
mov
mov
stc
mov
fs
mov
xor
sub
pop
stos
push
sub
sub
lods
fidivrs
nop
pushf
cmp
jge
xor
test
mov
repnz
popf
mov
ja
test
mov
xchg
in
dec
mov
xchg
pushf
xchg
jbe
sub
dec
aad
mov
fsub
repz
push
js
or
clc
pop
js
ror
xchg
aad
inc
test
dec
shll
stc
mov
lock
inc
add
imul
fwait
xchg
mov
jp
jl
xchg
cltd
enter
mov
fcomps
push
adc
inc
add
int
imul
mov
cmc
hlt
imul
or
imul
popa
cld
bound
mov
lock
cmp
lock
or
sub
rcll
hlt
push
cwtl
aas
jo
dec
pushf
mov
pop
scas
push
test
dec
sbb
mov
sbb
mov
std
in
leave
dec
test
sbb
xchg
mov
push
and
inc
lcall
imul
loope
cmpsb
fstl
pop
cmpsl
shl
pop
xchg
fwait
iret
out
sbb
pusha
je
mov
je
pop
inc
mov
test
lcall
test
cwtl
dec
and
cltd
cli
ret
jg
imul
inc
cmpl
fld1
mov
sti
repz
not
sbbb
and
xor
pop
add
int
fisubrs
xchg
out
push
nop
mov
mov
and
repz
divb
mov
loopne
xchg
iret
ret
ret
mov
rcrb
xchg
mov
hlt
mov
push
sub
dec
inc
sbb
outsl
and
popa
cmpsl
ret
imul
mov
lret
mov
sub
out
fildl
dec
pop
lret
rorl
les
sbb
sub
test
imul
fistl
xchg
ja
sub
mov
aad
mov
fsub
icebp
sbb
data16
inc
shlb
addb
adc
or
dec
or
fsubs
xchg
test
push
mov
stc
xchg
inc
and
cmpsl
jnp
enter
lea
ret
fnstcw
jle
inc
dec
and
fwait
jne
dec
mov
int
push
push
pop
sti
int3
fwait
pop
lea
ss
aam
sti
pop
cld
dec
rcl
mov
data16
mov
xchg
addb
mov
pop
add
orl
inc
mov
xor
xlat
dec
pop
dec
inc
inc
pop
test
stos
lds
fisubrl
lahf
mov
mov
pop
fisubl
jno
inc
push
push
fsts
pop
pop
inc
push
stos
pop
pop
dec
movsl
adc
pop
mov
mov
mov
push
xchg
xor
inc
jl
lea
imul
icebp
pusha
inc
shlb
dec
xchg
rclb
and
ja
push
mov
and
arpl
enter
daa
or
inc
out
inc
xchg
lcall
sti
repz
icebp
mov
xchg
enter
mov
lods
int3
ret
lret
sub
fisubs
int3
xor
lods
call
push
sahf
xor
addl
lock
jecxz
movl
dec
loop
mov
sbb
shl
into
cmpsl
mov
aaa
mov
in
enter
rcrb
adc
xchg
lea
mov
fldcw
lret
aad
scas
or
in
mov
push
and
lret
addb
sub
dec
movsl
sbb
cwtl
sbb
cltd
mov
cltd
lods
fdivrs
add
jg
cltd
jge
mov
pushf
repnz
push
cwtl
lock
addb
mov
mov
dec
mov
push
les
cltd
mov
xchg
and
test
xor
push
inc
test
dec
pop
out
cmp
out
push
dec
or
adc
xchg
xchg
jmp
cli
jne
dec
movsb
nop
in
lcall
mov
cmp
ss
ret
loopne
out
ds
cmc
or
mov
pop
xchg
jae
mov
mov
or
adc
lret
lds
adc
ret
sbb
mov
xchg
pop
ljmp
mov
push
loop
int
dec
sbb
out
pop
rcr
cmp
insb
stos
mov
daa
or
mov
lds
movsl
sbb
lcall
dec
pop
cld
ret
cwtl
fmul
adc
das
jg
leave
in
mov
cld
repnz
daa
adc
adc
shlb
mov
sub
sbb
or
les
cltd
aas
mov
xchg
sbb
aad
pop
scas
inc
stos
xor
divl
fwait
lea
dec
in
pop
dec
add
bound
xor
pop
fwait
dec
inc
mov
cltd
sahf
inc
and
sub
lcall
pop
adc
imul
int
pop
lods
push
call
popf
fwait
in
lcall
jl
loope
jnp
mov
add
imul
mov
movsl
ret
aad
inc
cltd
nop
ret
sbb
adc
mov
dec
fiaddl
addr16
cmc
fisttpl
or
ljmp
fst
loope
stc
mov
add
xchg
push
inc
cmp
jge
dec
movsl
or
dec
mov
movb
clc
jnp
aas
lahf
inc
pusha
rclb
inc
jg
xchg
test
int
xchg
push
test
and
xchg
add
aas
nop
test
icebp
pop
dec
mov
add
mov
xchg
imul
pop
sbb
jns
lahf
inc
adc
fnstcw
push
inc
aad
fwait
mov
mov
mov
add
cmp
xchg
xchg
jmp
repz
mov
mov
mov
pop
idivl
jno
pop
mov
jns
mov
imul
cmpsl
sub
int3
jle
jg
dec
loop
nop
dec
sbb
adc
lret
inc
mov
cwtl
lret
inc
fwait
dec
add
push
lds
mov
pop
xchg
dec
sbb
pop
jmp
mov
pusha
in
movsl
dec
push
dec
fistps
dec
push
sbb
ret
or
and
or
ss
subl
xchg
mov
add
pop
in
ljmp
inc
inc
jmp
enter
pop
cmc
xchg
mov
add
fwait
sbb
sti
and
sub
add
ds
mov
popl
nop
add
or
push
push
data16
push
cltd
es
xchg
imul
inc
cmpl
fld1
gs
outsl
mov
aad
mov
fwait
push
leave
fs
sbb
test
or
dec
xchg
pop
dec
push
inc
mov
imul
mov
pushf
ficomps
inc
aas
inc
imul
fld
mov
in
xorl
adc
cmpsl
insl
jmp
js
xchg
nop
shlb
leave
aam
or
sub
dec
inc
adc
mov
and
cwtl
mov
sbb
push
lahf
mov
xlat
aad
jmp
jae
into
jo
shrl
jl
or
cld
mov
xchg
add
dec
mov
vsubss
mov
add
pop
cld
or
sbb
push
jl
lret
push
stc
cmc
add
pop
ds
js
or
iret
inc
pop
adc
jg
test
and
and
inc
add
mov
xchg
pop
cmpsb
call
jnp
enter
jl
xor
push
add
and
out
mov
test
push
mov
fidivrs
lret
pop
jle
push
mul
pop
inc
test
sub
push
cmp
push
cld
cmp
cmp
clc
sti
pop
es
jp
add
adc
and
roll
data16
xchg
dec
xor
orb
sbb
in
mov
inc
mov
xchg
jae
lret
dec
push
mov
popf
in
mov
cli
aas
pop
mov
push
pop
xchg
lret
or
dec
cmp
sub
arpl
ljmp
add
jmp
xor
jg
scas
pushl
loope
add
cmp
sub
js
rcr
test
imul
stc
cmp
in
mov
fists
mov
dec
adc
es
ret
cmp
bound
out
adc
addl
and
movsb
or
adc
loop
jne
pop
mov
imul
ret
jecxz
sbb
sub
mov
call
jg
cmp
mov
repz
mov
cltd
test
repnz
and
or
aad
cmc
xchg
xor
xchg
in
xor
sub
pop
cld
mov
aaa
mov
pop
or
sete
mov
add
les
or
jmp
cld
mov
xchg
int
xchg
cmp
rorl
xchg
fimull
outsl
sub
sub
int
lock
fwait
lret
jbe
pusha
mov
dec
loop
mov
xor
and
test
jb
adc
addb
jnp
xchg
adc
je
rclb
push
fisubs
pop
adcb
mov
into
adc
xchg
cltd
out
cmpsl
xor
pop
or
xchg
adc
mov
icebp
mov
cs
mov
jecxz
adc
ret
push
popl
cmp
and
mov
test
movsl
sbb
iret
sbbl
sbb
cmp
pop
cmpsl
je
popf
add
insb
push
clc
mov
jg
and
ret
outsl
sbb
jg
xchg
mov
sbb
add
jae
push
clc
xor
mov
aaa
in
xor
imul
mov
adc
mov
adc
pop
inc
cmp
push
inc
lcall
ficoml
rorl
push
mov
scas
nop
mov
lock
popf
xchg
jae
leave
loop
cmp
push
or
pop
add
ss
xchg
pop
dec
cwtl
call
pop
mov
adc
mov
rcll
sarb
ret
aas
cmp
add
mov
inc
or
ret
push
pop
jp
inc
mov
cltd
mov
cmc
lret
sbb
add
test
lcall
mov
xor
sbb
cmp
in
and
cmc
sub
mov
add
mov
inc
aas
cli
subl
ret
lcall
dec
ftst
dec
jge
stc
push
push
fldl
pop
pop
sub
or
popa
in
jecxz
fidivs
push
icebp
pop
jo
test
push
cmp
lret
add
pusha
mov
leave
jl
fistpl
js
jbe
sub
addr16
xor
push
iret
pop
test
mov
mov
icebp
xor
shll
xchg
popl
add
inc
icebp
or
pop
lret
xchg
sub
test
push
mov
mov
pop
fiadds
jnp
fcoms
ficomps
fs
out
je
enter
rcll
ret
inc
ds
xrelease
dec
fisttpl
jle
rcll
mov
cwtl
test
push
in
push
movsl
pop
sbb
lea
add
and
xor
outsl
mov
push
add
mov
stc
adc
mov
sbb
nop
jg
adc
aam
enter
jne
aad
adc
aam
cli
lods
fstps
cli
ss
fcmovnb
divl
fucomi
stc
dec
mov
lock
test
or
adc
popa
dec
outsl
xor
sbb
xor
clc
imul
out
or
sahf
adc
pop
je
sub
cmc
xor
adc
jecxz
and
cs
hlt
dec
fdivrs
pop
cmc
dec
clc
ficoml
mov
adc
xchg
mov
cmp
inc
xlat
addr16
or
outsl
push
int3
xchg
dec
inc
cmp
enter
or
cmp
xchg
sub
push
dec
mov
test
mov
shr
ss
mov
loopne
popf
xchg
jns
lahf
dec
lahf
in
clc
add
xor
sub
inc
or
and
jb
jno
dec
cmp
into
movsl
mov
imulb
adc
imul
dec
sbb
dec
pop
dec
out
cmc
jb
shrb
stc
mov
pop
sub
adc
xchg
movsb
xchg
stos
inc
fisubrl
rorl
xchg
mov
push
jbe
sub
test
int3
dec
and
fildl
repz
push
and
adc
arpl
popl
data16
cmpsb
repnz
push
cmp
xchg
mov
push
add
leave
xchg
push
incb
in
mov
gs
lahf
adc
or
lret
out
mov
xor
mov
dec
inc
das
xchg
test
jle
pop
push
mov
lcall
mov
pushf
idivb
jl
pop
mov
sti
clc
sti
std
mov
jno
es
pop
sub
mov
hlt
mov
or
mov
faddl
sub
and
sbb
test
inc
sub
pop
je
fistps
test
arpl
pop
test
mov
ret
push
fldt
mov
add
sub
into
mov
pop
jnp
push
xor
insl
mov
enter
jecxz
xchg
subl
or
loope
xchg
xchg
stos
xchg
adc
data16
mov
pusha
cltd
imul
cltd
and
pop
pop
scas
mov
cltd
enter
push
adc
addl
leave
imul
cmp
shlb
pop
push
test
xor
mov
ret
lret
aaa
xchg
jge
ffreep
sub
in
loopne
int3
mov
add
cltd
and
dec
inc
aas
cli
or
testb
xchg
and
fst
dec
pop
mov
mov
mov
inc
lahf
push
sbb
mov
lret
scas
in
jbe
lods
xchg
test
sar
test
add
lret
add
xor
adc
or
xchg
sbb
add
stos
cltd
lods
jle
leave
aad
adc
jg
out
pop
pop
int3
xor
leave
loop
popl
jmp
and
push
add
or
rcr
mov
inc
cwtl
data16
push
fidivrl
sub
test
stos
push
mov
fs
aad
add
out
enter
ss
es
sub
adc
mov
sbb
gs
mov
popf
jbe
mov
mov
inc
sahf
shrl
mov
push
sahf
fldcw
or
inc
sbb
or
add
rorl
orl
cmp
dec
inc
sbb
rorb
or
jge
test
mov
clc
mov
popf
mov
dec
lea
stos
fucomp
aam
push
mov
rorl
xchg
sbb
xchg
cld
test
test
jo
cltd
adc
stos
ficoml
mov
cmp
sbb
fdivrl
cmpsl
dec
push
imul
push
ds
fists
fistl
cli
filds
mov
add
bound
add
cld
dec
shlb
sbb
sbb
xchg
jmp
push
sub
fstl
fisubl
outsl
hlt
fwait
lea
add
call
adc
sub
shl
jle
mov
sahf
dec
outsl
fistl
pop
clc
mov
movsl
sub
pop
scas
les
repz
inc
mov
clc
add
mov
testb
fcmove
xorl
inc
pop
adc
jmp
ret
aad
inc
cltd
nop
getsec
xor
mov
inc
pop
in
movsb
shr
push
imul
movsb
test
cli
mov
dec
mov
push
lret
shr
xor
fcoms
data16
push
stos
outsb
pop
imul
lcall
shr
sbb
inc
inc
jmp
mov
fcmovnb
push
dec
fdiv
stc
iret
scas
arpl
pop
xchg
nop
cltd
rep
add
rclb
addb
sbb
push
dec
push
cmp
xchg
pop
adc
or
mov
mov
call
push
push
stc
mov
int3
mov
lret
cmp
xchg
das
sub
dec
movsb
adc
pop
dec
push
cmpl
mov
cmc
pop
cmc
clc
sti
mov
jecxz
gs
rcrb
adc
mov
add
int3
push
cwtl
push
lock
mov
xor
lea
mov
ret
sub
xor
push
cwtl
rolb
in
insl
lods
jae
lret
xchg
xorl
daa
gs
jmp
dec
mov
or
inc
lcall
int
dec
mov
mov
xchg
adc
pop
push
push
sub
js
in
icebp
mov
adc
sbb
test
push
test
roll
rcll
dec
out
push
mov
cmp
pop
outsb
and
enter
mov
enter
das
lods
pop
sub
cltd
and
sub
in
out
out
dec
mov
scas
pop
stos
je
ss
mov
jg
lds
enter
das
lret
jecxz
mov
adc
mov
adc
xchg
and
cmp
sbb
rcrb
sub
stos
mov
add
lcall
rolb
pop
or
lret
fucomp
adc
movsb
daa
lret
xlat
jno
inc
push
jl
ret
addr16
inc
lret
or
stos
sahf
pop
stos
or
jmp
jae
mov
sub
inc
stos
mov
fldenv
bnd
enter
jmp
jmp
sbb
xor
mov
shlb
pop
les
push
xchg
mov
and
movsl
cli
mov
push
jb
lods
es
bound
xchg
out
cmp
and
je
test
aaa
sbb
mov
shr
mov
jg
mov
jecxz
pop
gs
arpl
int
mov
in
and
jge
adc
mov
jecxz
xor
xlat
push
outsl
add
mov
xchg
and
mov
test
jp
divb
xchg
stos
jns
dec
test
mov
lods
mov
jne
jecxz
mov
mov
imul
jo
std
push
test
sbb
jle
inc
sbb
or
stos
mov
stos
push
stos
inc
lcall
or
ljmp
mov
and
fcmovnbe
out
mov
jmp
and
and
add
shlb
add
pop
and
cwtl
or
mov
stos
icebp
mov
push
pop
pushf
jp
lahf
lods
jnp
enter
dec
cmpsb
inc
test
jb
dec
mov
inc
cmp
xchg
enter
aam
clc
xchg
test
push
stos
outsb
imul
xchg
and
out
mov
call
adc
lds
or
or
cmp
sbb
dec
add
pusha
rcrb
scas
lock
adc
mov
sbb
shlb
popa
cwtl
pop
jnp
mov
les
lds
jge
push
in
mov
mov
mov
lret
add
cltd
ja
xchg
test
xor
test
xchg
cld
fisubrl
jae
test
and
fwait
lods
ss
mov
push
pop
mov
jmp
fwait
js
jle
cmp
fwait
leave
inc
nop
inc
shlb
push
addl
or
xor
stos
add
dec
push
push
sub
test
jns
pop
cmp
cmpsl
sti
adc
adc
mov
popa
sub
mov
rorl
dec
movsb
popf
out
push
mov
ret
pop
xlat
mov
dec
loopne
in
jbe,pt
aam
sti
fnsave
jns
inc
inc
dec
lahf
in
clc
sbb
add
mov
cltd
mov
lds
adc
ret
popa
cmp
and
decl
test
rolb
sub
sahf
jge
idivb
fstps
dec
mov
addr16
jl
or
arpl
xchg
subb
mov
stos
xchg
fistl
fisubl
in
fwait
lods
divb
lds
stos
mov
or
and
cwtl
sub
das
mov
push
outsb
xchg
lock
add
add
push
or
push
dec
dec
push
xchg
mov
test
sub
es
cwtl
push
jne
insl
cmovae
mov
cmpsl
mov
sbb
mov
loopne
pop
xchg
cmpsb
sub
movsb
popf
out
jns
sub
imul
shlb
in
mov
mov
pop
cmc
mov
mov
pusha
icebp
add
mov
push
jp
int
insl
mov
inc
sub
iret
cmpsl
mov
inc
cltd
nop
push
xor
xor
fisttpll
inc
and
lods
les
movsb
jmp
jae
jns
inc
and
mov
imul
push
mov
sti
mov
jns
daa
sbb
cmc
fwait
into
push
mov
add
mov
push
stc
mov
jecxz
fwait
popf
dec
mov
rcr
xchg
jnp
ja
jle
scas
fistps
into
jo
ja
js
or
addl
inc
sbb
mov
push
mov
daa
movsb
pushf
mov
gs
jmp
or
mov
out
shll
mov
ror
mov
repz
je
or
add
adcl
jmp
and
mov
xchg
fwait
pushf
into
pop
loop
lods
idiv
sub
imul
inc
adc
aas
divl
fimuls
inc
cmp
or
mov
jl
mov
fsubrl
pop
leave
inc
push
pushf
sbbb
jl
nop
xor
xlat
lret
sbb
sub
lods
dec
xchg
fistps
outsl
fucom
repz
jo
insl
mov
outsb
fsts
pop
push
xchg
movsl
xchg
stos
mov
or
mov
gs
lods
clc
push
cmpsl
pop
test
pop
mov
in
leave
push
add
jo
cmc
xor
shll
mov
adc
or
dec
test
xchg
inc
xchg
and
inc
cmpsl
adc
movsb
pop
fisttpll
or
xor
xchg
cltd
call
push
ror
mov
jns
xchg
cwtl
jmp
aas
xchg
test
je
pop
ljmp
fdivs
adc
xlat
out
sarl
loopne
ja
dec
hlt
cmp
push
rol
xor
fwait
int3
mov
ret
mov
adc
jmp
mov
shrb
insl
cmpsl
adcl
and
dec
mov
rorl
lret
subb
iret
cmp
std
stos
iret
push
test
lcall
mov
data16
xchg
sub
icebp
mov
mov
pop
jmp
jle
cltd
fcoml
jp
xor
cmp
mov
js
inc
out
mov
inc
shlb
add
xchg
and
iret
aam
sub
sbb
push
sub
cld
pop
fisubrs
pop
out
cmp
cmp
pop
pusha
dec
in
push
adc
lret
push
adc
xchg
test
shr
lret
cmpl
gs
xor
shlb
adcl
lahf
lds
ds
out
or
lret
jecxz
pop
mov
enter
addb
mov
push
inc
sbb
sub
pop
sarb
adc
mov
sbb
push
test
dec
sub
inc
lahf
push
sub
int3
jmp
repz
dec
mov
jae
aam
sbb
shll
inc
sbb
sub
aaa
and
ja
or
sbb
jle
mov
loopne
pushf
lods
inc
pop
cs
popf
sahf
outsl
mov
int3
scas
lret
popa
or
cmp
sub
sbb
adc
into
inc
imul
mov
rcll
push
imul
fidivrl
cli
mov
mov
cltd
in
faddl
push
lret
sbb
mov
or
or
or
jae
sbb
add
push
sbb
mov
jo
test
jb
and
mov
mov
lods
xchg
pop
out
ret
fdivp
repz
mov
mov
repnz
or
jg
incb
adc
ret
sbb
shll
or
push
test
rep
fildll
repnz
xchg
in
inc
add
je
mov
daa
or
mov
mov
insl
mov
mov
jb
and
pop
test
add
push
lret
pop
je
lahf
ficoms
fwait
shll
popf
scas
pushl
popa
nop
inc
add
adc
sbb
adc
xchg
cwtl
sub
test
pop
xchg
jmp
addl
fdivrl
jo
cmp
ret
sti
xor
outsl
sbb
mov
fsubs
loop
hlt
mov
mov
cwtl
cmp
enter
sbb
cmp
xor
mov
call
pop
mov
imul
sbb
pop
loop
icebp
mov
jecxz
movl
add
or
cmpb
insl
fwait
ret
sbb
cmp
std
imul
or
into
fsubr
dec
pop
inc
sbb
mov
cmc
mov
sbb
adc
stos
rolb
jl
imul
fildl
push
movsl
aas
and
pop
cld
ret
cmp
sub
jg
push
insb
mov
out
js
mov
adc
dec
jp
push
test
and
nop
outsb
mov
push
fidivrl
jp
cwtl
xor
mov
popf
mov
cmp
cmp
adc
mov
popf
push
adc
xchg
lret
inc
cmp
cs
test
dec
mov
mov
outsb
or
pushf
inc
mov
mov
iret
sbb
jns
add
adc
mov
add
lds
aaa
jae
inc
sbb
pop
xor
jno
les
stc
imul
scas
mov
ja
pusha
in
rorl
les
dec
jo
fucomi
pop
sub
jae
les
jnp
in
xor
push
add
add
addr16
rcll
pusha
ja
mov
mov
aad
mov
fsubr
repz
sbb
and
xchg
or
sarb
push
mov
inc
xchg
jge
xchg
sub
data16
add
mov
sub
mov
lahf
jne
jnp
dec
jne
sbb
bswap
test
enter
sbb
rolb
dec
mov
mov
xor
cmpsb
cmp
gs
xor
shll
test
cmp
pop
pop
dec
or
in
sti
mov
jns
xor
rcrb
hlt
lods
push
testl
xor
imulb
add
mov
stc
js
clc
scas
bnd
and
ror
stc
dec
inc
fistpll
decl
cwtl
adc
les
mov
mov
mov
sub
add
sbb
fistl
or
loope
mov
mov
flds
out
jns
js
jle
scas
and
fwait
pusha
inc
add
adc
pop
xchg
adc
ja
les
sbb
sub
add
mov
push
pop
fidivrl
rep
gs
adc
add
push
adc
jecxz
adc
push
ds
cmp
lret
inc
cmpsb
js
mov
jge
gs
xor
test
xchg
lea
or
add
iret
sbb
jae
sbb
lods
in
jp
arpl
add
mov
add
pushf
dec
adc
movsl
mov
mov
sub
idivb
mov
ja
inc
dec
pop
int
inc
cmpl
jp
mov
push
js
les
adc
lock
scas
or
or
cltd
mov
mov
xchg
jbe
lods
and
inc
push
cmp
in
mov
adc
jo
sbb
fmull
mov
es
cmp
jns
mov
or
cwtl
xor
xchg
adc
rcrb
enter
movsl
and
lcall
repz
lcall
xor
adc
test
das
xchg
xchg
fwait
push
out
xchg
bound
mov
shl
pop
adc
fistpl
pop
aad
fstl
clc
jl
dec
dec
lahf
lret
hlt
mov
inc
lods
fcoms
aas
rolb
gs
rcrl
gs
nop
jg
adc
aad
cli
mov
jnp
dec
pop
inc
add
lds
stos
mov
jae
mov
popa
sub
mov
aam
sbb
lods
nop
xchg
je
push
pop
test
jl
shr
mov
aaa
fistpl
icebp
shrb
enter
dec
push
jmp
movsl
arpl
out
div
sbb
push
aas
cmpsl
lcall
jge
push
dec
mov
fildll
mov
inc
cmpsb
pop
fistl
xchg
mov
aam
mov
inc
pop
loope
dec
add
jb
inc
cltd
out
int3
and
mov
mov
nop
mov
dec
or
lea
cmp
ljmp
ja
adc
add
into
sbb
imul
cmp
imul
ds
rcrb
push
ret
and
sarb
adc
sub
negl
js
jg
cli
push
fists
xor
clc
sub
mov
mov
test
dec
cmpsb
mov
push
add
jo
imul
les
push
mov
fcoml
mov
lods
arpl
shlb
lret
cmp
je
into
scas
call
dec
hlt
jo
pop
rclb
subl
rol
sub
fldenv
mov
or
pop
xchg
enter
cmpsl
ret
xchg
gs
insl
fwait
push
aad
fwait
mov
mov
or
cmp
sub
shrb
mov
dec
sub
sti
dec
sahf
pop
push
movsb
testb
roll
pushf
clc
sbb
lds
repz
cmp
lock
es
add
ljmp
mov
sbb
xchg
int3
addr16
hlt
xor
shll
leave
sbb
arpl
mov
aaa
pop
dec
mov
pop
cli
jae
fisttpl
les
scas
clc
les
sbb
inc
sbb
sub
sub
push
push
adc
popa
mov
cmp
test
inc
fmull
pop
adc
in
bnd
int3
mov
mov
cmc
cmp
shrl
andl
adc
rcll
lds
mov
ret
jge
ret
into
imul
or
std
bound
scas
mov
leave
enter
loopne
je
cwtl
test
lcall
int
imul
jle
jmp
xorl
arpl
jo
jnp
sub
mov
in
lea
iret
lods
in
cli
pusha
std
and
out
push
lds
call
scas
out
popf
pushf
repz
xchg
daa
mov
ret
stos
and
test
lahf
inc
into
push
int
ljmp
lahf
popf
jae
sub
stos
je
mov
add
push
inc
sbb
imul
sbb
lcall
mov
rcrb
dec
mov
pusha
pop
into
mov
fucomi
repnz
test
add
inc
pushf
adc
push
sarb
jmp
jbe
mov
push
mov
stc
dec
xor
cmp
cmp
jp
sbb
gs
cmpsl
ret
push
cmp
out
cmp
das
lods
pop
sub
dec
inc
pop
fwait
inc
lcall
sub
in
cmc
xor
mov
lods
ds
lods
mull
int
lcall
ja
lret
aas
jno
xchg
jl
lahf
in
clc
pop
sarl
sbb
aas
mov
rorl
movsl
ret
inc
cltd
nop
push
xor
sar
xor
rorl
mov
push
and
test
mov
fnstsw
cltd
sub
fcmovnu
mov
rcrl
xchg
sbb
ss
out
stos
cld
xor
xchg
or
cmp
rorl
fstpl
mov
fcoml
sbb
push
mov
sub
loop
jg
mov
and
call
mov
adc
mov
xor
stos
or
and
xchg
mov
xchg
sbb
movsb
jg
cmpsb
fsubrs
lods
insl
xchg
enter
pop
push
cmp
jno
mov
jle
inc
mov
pop
or
sub
mov
fsubr
inc
adc
dec
mov
into
pop
pop
jns
ss
out
loopne
jl
push
fucomip
repz
mov
jns
add
mov
jbe
add
cltd
and
dec
orb
rcrb
xor
mov
out
sbb
test
mov
xchg
dec
outsl
mov
fucomp
jae
jns
iret
fucom
jmp
dec
cli
sub
addb
xchg
lcall
and
push
mov
inc
pop
mov
fstl
pop
cmpsl
inc
je
lcall
mov
notb
fdiv
stc
scas
xchg
xchg
aas
xlat
idivl
clc
xor
jno
popl
push
sbb
push
addr16
clc
and
xor
sbb
sub
xor
xor
cltd
enter
out
hlt
or
test
scas
or
dec
in
inc
mov
loopne
mov
popf
repz
ss
mov
loopne
jg
rolb
jl
lahf
aam
sbb
mov
adc
inc
pop
adc
fcoml
push
lret
movsl
mov
negb
and
aad
sbb
add
inc
and
rolb
ss
pop
popf
jae
sub
out
cmp
jmp
dec
mov
inc
dec
lret
addr16
ja
stos
xchg
stos
std
mov
mov
mov
add
loopne
xchg
pop
cmpsl
pusha
je
das
jg
leave
loope
mov
pop
movl
scas
arpl
pop
das
out
inc
shlb
inc
mov
sbbb
push
cmp
adc
movsb
pop
inc
jge
jmp
inc
stos
cmp
call
fs
cltd
xchg
push
shr
mov
int3
inc
add
out
mov
sbb
push
adc
rorb
lret
mov
sti
imul
rclb
mov
lock
das
lret
jecxz
inc
adc
sbb
mov
or
pop
adc
mov
mov
rcll
pop
sbb
test
jmp
pop
cli
test
mov
negl
add
dec
xchg
lret
add
sub
pop
mov
mov
mov
mov
in
mov
sub
inc
jl
jbe
lods
jne
adc
in
add
fcmovne
js
jle
scas
pushl
mov
mov
dec
xchg
ror
popf
push
add
mov
dec
xchg
into
test
test
push
stc
imul
jmp
inc
stos
xor
fdivs
pop
sbb
stc
mov
jecxz
mov
inc
sub
inc
dec
mov
call
jbe
ja
lcall
int
push
mov
mov
ja
mov
mov
test
pop
xchg
cmpl
sbb
sbb
mov
xor
mov
adc
and
pextrw
movsb
sub
in
in
stos
push
and
add
in
int
subb
push
jae
pop
test
jbe
test
cmp
jnp
or
mov
jne
jge
dec
movsl
shl
adc
sbb
fdivp
shrb
pop
hlt
jno
push
jmp
fcmovnb
pop
jo
cmp
in
mull
inc
adc
jnp
addl
mov
and
inc
cwtl
dec
sbbb
test
sub
and
lret
xchg
cltd
cld
jae
fwait
lea
fs
int3
inc
cmp
sbb
test
inc
adc
xchg
dec
daa
cs
jle
shlb
popa
mov
mov
loopne
mov
repz
sti
pop
adc
lahf
push
pushl
gs
loopne
pop
sub
sbb
mov
mov
orl
mov
pop
ljmp
xchg
dec
test
push
in
test
ljmp
aas
xor
sbb
jo
or
nop
rorl
fsts
std
in
mov
adc
sub
sbb
imul
shrb
enter
test
cmp
js
enter
leave
loop
adc
mov
mov
add
inc
pusha
xor
xchg
mov
imull
cld
or
sbb
xchg
and
aas
cli
dec
pop
outsb
and
enter
mov
je
and
mov
fsubp
mov
cwtl
pop
cmpsb
sub
lods
lods
fisubrs
cmp
mov
sarl
push
cld
mov
pushf
divb
aam
cmc
pop
out
cmp
jno
mov
inc
xchg
add
cmpsl
test
movl
or
ret
dec
sbb
push
sbb
push
dec
sbb
and
test
inc
mov
pop
ljmp
popf
lret
shrb
mov
daa
xchg
movsb
xchg
stos
jge
ljmp
fisubrl
in
fwait
lods
js
xchg
jbe
lods
jne
adc
in
sub
fcmovnb
push
es
leave
inc
nop
inc
mov
push
addl
or
xor
cmp
fdivrs
mov
inc
popf
mov
xchg
ds
les
aaa
popf
fldenv
mov
int3
inc
fimuls
fs
das
jl
or
cmpsb
jns
fldpi
mov
sbb
gs
outsb
leave
jno
cmp
aas
loop
mov
jecxz
mov
jns
addr16
sub
lahf
lret
std
jle
mov
lret
mov
or
cmc
and
lcall
xor
stos
mov
dec
test
mov
lods
mov
pop
sbb
pusha
xor
fbstp
inc
or
dec
fbstp
dec
arpl
push
inc
sbb
xchg
adc
xchg
roll
sub
mov
push
lods
lds
inc
pushf
rclb
push
fimuls
mov
js
jecxz
pushl
jmp
or
popa
cmp
pop
es
adc
testl
or
mov
adc
call
xchg
or
jnp
jnp
enter
mov
enter
das
lods
pop
sub
cltd
and
sub
lahf
cs
cmc
xor
lds
les
data16
adc
ss
decl
ja
lret
aas
jae
xchg
jl
lahf
push
cmc
cmp
divb
sahf
ret
mov
adc
cmpsl
mov
mov
and
iret
jecxz
sub
and
jne
lds
fsts
mov
mov
push
xor
rolb
shrl
ret
xchg
mov
pushl
dec
and
mov
sbb
xchg
adc
xchg
push
stos
xchg
fwait
adc
cmp
into
xor
pop
jnp
push
xor
insl
mov
enter
jecxz
xchg
subl
or
loope
xchg
xchg
stos
xchg
adc
data16
mov
pusha
cltd
imul
cltd
and
pop
pop
scas
mov
cltd
enter
push
adc
addl
leave
imul
cmp
shlb
pop
push
mov
xor
mov
ret
lret
aaa
xchg
jge
ffreep
sub
in
loopne
int3
mov
add
cltd
and
dec
inc
aas
mov
jno
dec
and
xchg
and
fst
addr16
lods
add
cmp
pop
movsb
push
adc
scas
mov
lret
mov
dec
xchg
lret
and
fcoms
sbb
test
inc
pop
xchg
lret
out
mov
cmp
xchg
fwait
mov
push
dec
dec
test
lods
inc
sbb
scas
push
pop
cmp
js
pop
jg
fwait
leave
loop
and
int3
inc
aam
clc
xor
adc
roll
push
sbb
pop
sbb
dec
mov
mov
sbb
imul
pop
cmp
enter
mov
dec
push
add
cmp
mov
push
xchg
mov
pusha
mov
dec
mov
dec
ds
outsb
jbe
imul
into
inc
sahf
shrl
mov
jae
mov
jmp
mov
add
add
jmp
rcrl
cmpsl
mov
testb
lret
movsl
mov
fcomps
ljmp
test
sbb
mov
fucomp
fs
mov
in
mov
pop
sub
les
jl
add
mov
mov
ja
lds
fwait
lods
mov
mov
popf
pop
sahf
rol
pusha
jp
scas
jg
cmp
js
pop
push
lret
cld
repnz
inc
scas
arpl
pop
popf
or
adc
aas
pop
mov
sub
sbb
imul
mov
sub
fidivrl
lds
cmpsl
ret
mov
xlat
pop
flds
push
and
addb
push
cli
dec
stos
lcall
dec
mov
cmc
adc
fadd
add
stos
das
pop
mov
lods
sti
jae
test
sti
mov
jecxz
add
mov
push
or
pop
pop
add
imul
mov
push
sbb
add
xor
pop
movsb
leave
test
mov
fs
rorl
jae
setbe
call
test
cld
mov
andl
mov
imul
mov
xlat
imul
std
mov
xor
imul
repz
or
xor
call
arpl
rolb
loop
fadds
adc
xor
cwtl
dec
test
push
fsubs
xchg
mov
fsubrs
lods
in
xchg
enter
mov
xlat
imul
xor
mov
dec
mov
push
bnd
out
mov
pop
imul
mov
roll
ds
call
clc
test
jecxz
in
sub
lret
in
mov
lret
jecxz
mov
sbb
add
cmp
mov
adc
lret
ds
xor
cwtl
push
divb
add
and
pop
movsb
shrl
fistpll
pop
lret
rorl
nop
sbb
xor
test
shl
adc
rorl
xchg
fcmovnb
fisubl
pop
jb
das
dec
sti
lods
lds
pop
add
sbb
pop
int3
jnp
push
mov
sub
rcrb
sbb
mov
dec
mov
xchg
fcomps
xor
dec
shlb
adc
stc
inc
fcoms
movsl
ficompl
jne
jnp
sbb
sbb
ret
es
ret
loop
push
subl
or
mov
dec
in
dec
mov
loopne
mov
push
lods
ds
arpl
lea
rol
loopne
test
iret
ffreep
pop
lock
div
mov
adc
inc
pop
adc
fcoml
push
lret
movsl
mov
mov
inc
pop
in
movsb
add
add
pop
movsb
leave
or
or
aam
push
mov
rorl
faddl
sbb
repz
lret
or
xchg
call
lea
add
jecxz
fldl
stos
ljmp
mov
push
xlat
mov
sti
and
xor
iret
sub
inc
test
xchg
stos
xorb
push
fbld
cli
dec
lods
inc
insl
xchg
jmp
add
sbb
fld
clc
xor
cmpsb
inc
cltd
fs
in
mov
icebp
mov
mov
or
in
xor
xchg
cmp
inc
pop
push
mov
shr
push
imul
xchg
fldt
outsl
fucomip
in
lcall
add
lret
jecxz
mov
sbb
add
cmp
mov
adc
lret
ds
xor
cwtl
push
lock
mov
sbb
and
test
sbb
scas
mov
or
sbb
rcr
mov
mov
popl
jo
test
xchg
rorl
mov
mov
adc
xor
stc
jmp
lods
inc
sub
arpl
sub
js
jg
movl
scas
arpl
pop
xlat
testl
or
imul
xchg
fsubs
add
cmp
js
imul
push
mov
xchg
pop
fsubl
jne
push
mov
sbb
inc
inc
mov
pop
mov
out
push
pop
cmp
popa
dec
mov
iret
pop
stos
rol
mov
jle
pop
les
imul
push
push
sub
clc
sti
pop
adc
ret
rorl
sbb
cmpb
push
iret
cmpsl
into
sbb
addr16
sbb
fsubrl
leave
mov
lods
mov
pop
pop
pop
popf
jae
cmp
lahf
jae
out
imul
and
test
inc
scas
add
fisubrl
pop
outsb
shlb
xor
movsl
sub
gs
lods
cmp
dec
les
lahf
shlb
sbb
or
andl
addl
pop
popl
cmp
mov
fstpl
add
mov
lret
inc
and
cmpsb
jnp
lcall
stc
push
jno
ret
push
adc
mov
jecxz
leave
sbb
xchg
mov
gs
mov
int
imul
loopne
sbb
popf
stc
mov
shll
mov
cli
lock
mov
add
lret
inc
sbb
das
sub
add
or
cwtl
lret
inc
sbb
rolb
xlat
stos
vandnps
sub
dec
ljmp
test
xor
sbb
sub
mov
jne
les
cmpsl
leave
mov
jl
ss
lahf
iret
jnp
shr
or
mov
jp
cs
ffree
notl
dec
scas
fbstp
shlb
fcoml
xor
fcmovb
in
inc
fimull
adc
or
test
jle
mov
and
cmp
gs
adc
and
loop
cs
int
out
cmp
sahf
aam
jae
enter
hlt
or
lret
fsubs
pop
dec
mov
xchg
repz
stos
inc
out
stos
shr
je
out
pop
mov
lods
sti
pop
lea
outsl
jmp
jae
xchg
shrl
scas
jo
or
mov
dec
inc
aas
fidivl
nop
aas
ficoml
imul
stos
lret
sub
sahf
mov
lahf
jnp
inc
ja
jns
orl
test
xchg
test
test
outsb
dec
addb
add
ret
add
outsl
or
cmp
loopne
sbb
inc
test
aad
mov
mov
js
pop
idiv
xor
cs
ret
rcrb
add
rep
clc
pop
lret
out
fsubrs
xchg
and
mov
push
pop
daa
dec
cmp
inc
insl
xchg
imul
xor
xabort
add
push
fisttpll
dec
xor
ret
xchg
addl
leave
sbb
daa
aam
mov
jne
dec
movsb
nop
loope
sbbb
mov
sarb
sub
repz
jecxz
mov
repz
ds
repz
add
cmpsl
test
movl
or
add
mov
jnp
dec
sbb
add
dec
fwait
mov
lds
dec
movsb
fldcw
fucomp
aam
push
clc
mov
shl
cmpsb
cmpsl
xchg
gs
pop
cmp
repz
dec
stos
or
dec
jg
mov
sub
mov
xor
push
lods
adc
fsubrs
jnp
or
fbld
adc
jno
inc
mov
adc
sbb
add
and
mov
lods
addb
adc
std
dec
sbb
adc
or
dec
and
frstor
xor
bound
push
or
cwtl
push
mov
inc
mov
daa
push
dec
inc
mov
push
mov
adc
pop
insb
outsl
pop
mov
jg
pop
lods
adc
repz
aam
sti
pop
adc
jo
mov
jae
push
rcll
ret
sbb
test
jno
fsubrl
nop
push
lock
mov
decl
jno
test
mov
mov
dec
mov
lret
mov
sub
fyl2xp1
adc
inc
inc
and
mov
stos
xchg
fistl
fisubl
in
fwait
lods
jle
sub
cmp
movsl
fstl
pop
scas
jecxz
mov
scas
jns
push
je
push
cmc
hlt
ret
rcrb
add
and
or
cmpsl
test
push
mov
mov
movsb
jmp
push
mov
mov
fdivrl
mov
or
mov
in
addb
aaa
mov
outsl
mov
jne
test
popf
xchg
jg
adc
inc
adc
xor
and
pop
shlb
mov
dec
push
test
pop
cmpsl
test
lock
push
ss
ffree
inc
sbb
iret
cmpsl
leave
movl
dec
out
fwait
mov
mov
fsubrs
and
shrb
cmp
in
mov
jo
test
test
cmp
lret
pop
xchg
fucomi
rolb
push
outsl
subl
addb
test
pop
cmpsl
push
push
fnstcw
pop
mov
ret
rclb
aam
pop
maskmovq
add
sub
sbb
dec
and
ljmp
cwtl
cwtl
mov
lds
cmpsl
ret
test
ret
mov
mov
mov
add
test
inc
sub
shl
jle
mov
sahf
dec
outsl
fistl
pop
clc
mov
aam
movsl
cmp
jae
mov
jecxz
add
scas
lock
add
mov
push
add
sbb
dec
cmp
insb
mov
and
les
dec
frstpm(287
ret
repz
ja
pusha
in
mov
incl
into
or
adcl
stos
inc
sbb
aam
jne
inc
adc
dec
stos
xchg
dec
lods
in
mov
jle
jmp
sub
jmp
popf
ficoms
mov
scas
jp
out
js
popa
xchg
lret
call
mov
adc
xchg
adc
test
sub
sbb
pop
sbb
xor
pop
test
insl
xchg
imul
mov
call
jnp
int3
jne
jecxz
mov
add
cmp
sub
push
fwait
push
add
or
nop
out
push
adc
ret
pop
std
sti
int3
sbb
test
xor
pushf
divb
pop
adc
pop
sti
mov
ret
lock
mov
adc
pop
xchg
adc
xchg
and
adc
fs
lds
mov
jbe
sbb
xchg
sahf
pop
repnz
lods
out
imul
je
std
push
test
sbb
lahf
push
addb
mov
jo
jle
out
mov
sub
mov
aam
fstpt
push
mov
ficoms
xchg
jecxz
inc
xlat
cld
sbb
cmp
or
sbb
xor
sbb
pop
mull
mov
jge
stos
lahf
mov
mov
mov
sub
ret
fld1
gs
out
pextrw
popf
jb
inc
or
sti
jae
enter
cwtl
pop
xchg
xchg
push
mov
mov
push
dec
mov
aad
mov
dec
loopne
arpl
xchg
jle
pop
lea
pop
mov
in
lcall
iret
ret
lret
int
rcrb
mov
add
nop
lock
rol
inc
sbb
and
adc
mov
pushf
dec
cwtl
adc
mov
pop
mov
dec
mov
sub
fidivrs
idivb
pop
lcall
movsl
sub
inc
sbb
subb
imul
or
mov
inc
pop
mov
fstl
jge
inc
xchg
stos
fwait
outsb
mov
cld
repnz
sub
jo
or
rcll
xchg
adc
shr
cmpsl
xchg
and
push
adc
mov
ds
mov
xchg
pop
cmpsb
call
mov
lahf
outsl
jge
out
pop
in
int3
insb
aaa
es
jg
xchg
xchg
inc
out
mov
int
jle
popa
jecxz
mov
pop
pop
mov
shr
je
inc
dec
pop
mov
movsl
stc
jae
test
sti
mov
dec
clc
add
es
clc
aas
mov
push
lods
lock
iret
or
mov
fdiv
and
das
rorb
inc
xchg
stos
les
sbb
int
sub
scas
mov
cmp
pop
fucom
jecxz
jecxz
mov
test
test
sbb
leave
xchg
pop
outsb
icebp
mov
stos
mov
add
jecxz
fldl
stos
ljmp
mov
push
xlat
mov
sti
sub
xlat
adc
inc
shlb
add
movsl
xor
loop
mov
push
xchg
mov
xchg
sbb
movsb
cli
jae
pop
je
mov
xchg
cltd
into
push
mov
out
cmp
pop
jne
shrb
fwait
enter
int3
inc
sub
out
mov
jecxz
pop
mov
sub
dec
outsl
fistl
rcrb
mov
aam
movsl
cmp
jae
mov
jecxz
add
xor
pop
mov
or
mov
adc
jl
clc
lds
lock
xchg
xchg
mov
pop
stos
fsubr
scas
test
leave
pop
fildll
lcall
in
mov
das
mov
xchg
fsts
std
add
ficoml
jge
xor
xor
and
pop
movsb
negl
lds
subb
fucomi
in
pop
xchg
fbstp
sub
xor
adc
sti
jecxz
loope
prefetcht0
add
dec
rclb
adc
cmp
xchg
mov
push
mov
mov
pop
mov
fidivrl
jge
xabort
jnp
out
mov
push
stc
inc
push
adc
stos
inc
adc
rcrb
mov
mov
popf
out
push
cmpsb
pop
ret
fistl
inc
cmp
sahf
cmp
fstl
add
std
fwait
inc
sbb
jl
jo
fnstenv
je
and
or
ret
inc
jns
xor
imulb
inc
in
xchg
in
stos
push
sub
movsb
leave
test
mov
fs
rorl
jae
setbe
call
test
cld
jo
in
pushf
jne
into
push
mov
xchg
fistl
fisubl
pop
jb
lods
jle
stc
ret
jl
jnp
movb
jecxz
xchg
fwait
iret
push
insb
jle
scas
and
andl
ret
inc
sbb
add
jge
jns
dec
xor
inc
fdivrs
aam
sbb
es
xor
cmpsl
ret
popf
clc
data16
xlat
push
cmp
out
and
mov
test
sub
push
fwait
push
add
out
cmpb
das
xchg
lods
sub
dec
mov
repz
popl
xchg
loop
hlt
mov
in
ds
mov
lock
mov
add
cltd
push
add
fsubrl
inc
mov
sbb
scas
movsb
mov
leave
mov
or
mov
mov
xchg
arpl
jo
test
cmpsl
jae
les
stos
enter
adc
and
mov
mov
mov
shr
sbb
inc
sbb
jmp
popf
fsubp
fwait
push
push
jmp
mov
subl
shll
addl
aam
pop
sarb
and
imul
mov
pushf
cwtl
mov
jle
or
out
sbbl
jmp
and
mov
enter
dec
push
add
sub
fisubrs
push
inc
mov
arpl
mov
into
pop
stos
les
inc
sahf
shrl
mov
imul
mov
hlt
mov
sarl
xor
dec
sbb
lock
repnz
into
dec
and
iret
inc
clc
or
jp
sbb
les
movsb
shrb
dec
ficoml
push
lods
cltd
and
mov
popf
in
mov
xor
test
test
pop
xchg
lret
mov
sub
lds
std
xor
dec
xorb
cmp
push
xchg
mov
add
inc
test
jmp
popf
faddp
jnp
fidivrl
into
scas
call
cltd
in
pop
popa
or
imul
adc
dec
shlb
xchg
sub
mov
push
sbb
jp
cwtl
inc
cmp
mov
xchg
outsl
lahf
roll
mov
pop
stc
jecxz
and
cmp
pop
adc
test
sbb
pop
imul
in
cmc
hlt
imul
mov
shl
movsb
mov
fnstcw
pop
ja
lret
in
std
test
inc
fsubr
inc
sbb
mov
mov
jno
jne
ret
and
push
jmp
lds
xor
mov
sbb
pop
mov
mov
xchg
dec
arpl
sbb
sbb
subl
stos
jne
inc
xchg
rorl
inc
push
push
pop
add
add
enter
pushf
ficoms
fwait
iret
jo
jle
das
pushl
loope
ret
mov
mov
inc
dec
or
inc
mov
inc
push
inc
cwtl
adc
jns
js
push
jmp
jge
mov
sbb
cmpsl
ret
mov
gs
outsl
scas
rcll
enter
mov
test
pop
jp
sarb
cmp
push
adc
ret
xorb
mov
sub
jne
rorb
ret
loopne
in
mov
lods
lcall
int
in
clc
cmp
mov
jp
add
mov
pop
cli
add
lods
mov
movsl
inc
test
insb
rcrb
repz
lods
cli
rorl
inc
lahf
mov
jae
dec
xlat
xor
dec
dec
mov
mov
imul
fwait
enter
or
lcall
pop
pop
xchg
mov
lods
pop
add
jecxz
fwait
xchg
mov
data16
and
cli
ljmp
dec
sti
icebp
arpl
add
or
inc
pop
sbb
incl
adc
cmpsb
fnstenv
fwait
xor
add
mov
mov
fcomps
cmpsb
jnp
or
adcl
mov
jne
jns
inc
inc
mov
mov
xchg
dec
into
mov
cmp
das
aad
call
mov
or
xor
in
stos
divl
loope
cmp
dec
lahf
in
pop
cmp
adc
jge
sarb
iret
inc
sbb
fdivrl
mov
pushf
dec
hlt
lret
adc
mov
aaa
jns
loopne
dec
push
lret
lcall
fstps
ss
je
fstps
jl
sbb
cld
jo
xchg
add
jl
shrl
sbb
fstps
xchg
fcoml
mov
fstl
pop
rclb
test
fldenv
sub
mov
in
pop
loope
mov
cmp
mov
cmp
in
dec
cmp
pop
jmp
mov
cltd
out
mov
int
into
clc
enter
jnp
int3
jne
jecxz
lock
add
jb
xchg
rcll
push
add
lret
push
dec
fstp
imul
cld
or
xor
and
or
adc
add
lds
test
sbb
out
mov
mov
idiv
add
mov
sbb
pop
fimull
imul
xchg
dec
pushf
mov
pushf
leave
je
lret
mov
cmp
jl
dec
pop
mov
in
mov
or
pop
or
mov
fisttpl
outsl
lds
std
xor
sub
mov
push
xor
cmpsb
lds
cmpsb
lahf
arpl
js
inc
cmp
dec
test
popl
adc
inc
shrb
out
rol
cmp
add
mov
push
mov
insl
push
add
fdivs
mov
xchg
cltd
enter
leave
clc
fstpl
test
push
push
push
dec
mov
push
dec
sub
loopne
xor
rorl
stos
les
push
sahf
sub
test
push
int
adc
call
jecxz
flds
pop
sub
push
pop
ljmp
dec
test
xor
xlat
dec
sbb
fs
jl
ss
lret
and
pop
popf
mov
mov
je
shl
mov
ret
add
sbb
xor
push
inc
cmp
stos
jne
or
or
int
lods
mov
aad
ret
std
out
xchg
shrb
jle
das
fdiv
and
or
fwait
add
push
mov
adc
call
mov
adc
test
sub
test
jne
in
roll
xchg
jns
enter
and
test
push
adc
jmp
inc
movsb
in
xlat
repz
pop
mov
dec
add
ret
arpl
lea
movsl
pop
lock
pop
adc
lock
in
rcr
cmp
lds
aas
lret
cwtl
aad
mov
aad
push
scas
icebp
negb
sub
pop
push
push
lret
push
test
lcall
dec
ret
inc
and
lahf
cmp
cltd
fisubl
les
pop
or
pop
repnz
push
dec
xchg
mov
dec
mov
mov
test
mov
enter
jbe
jmp
popf
ficoms
jle
scas
pushl
jp
and
sbb
rcll
sbb
rclb
or
sbbb
fsubs
repz
inc
cmp
movsl
cli
jae
push
push
dec
xabort
mov
movnti
imul
mov
sbb
mov
jne
dec
mov
sbbl
and
js
mov
pop
pop
shll
pop
xchg
dec
fucomip
and
ds
mov
sub
rcl
or
sub
hlt
mov
mov
cmpb
jb
fsubl
lret
clc
fyl2x
imulb
lds
mov
test
std
movsb
jmp
push
iret
cli
fs
fisttpll
test
mov
jno
inc
inc
add
les
lcall
cmp
rorl
stos
fwait
popa
cmp
inc
pop
jns
push
leave
xchg
fwait
mov
lds
jmp
dec
pop
mov
loop
inc
shlb
pop
xchg
fmull
clc
xor
adc
ret
bound
or
les
cltd
xor
fcom
push
sbb
sub
mov
rcrb
out
or
xabort
jne
push
mov
pop
push
bound
xchg
leave
sbb
sub
cmpsb
int
jge
fldpi
mov
sbb
cmp
xor
ja
push
mov
popa
or
jbe
iret
ret
clc
jmp
pop
mov
les
repnz
jo
or
xchg
mov
sbb
in
popf
pop
in
sbb
out
cmp
fsts
clc
cmpsl
bnd
push
in
stos
dec
sbb
cmp
sbb
sar
cmp
lds
pusha
cltd
pop
fsts
imul
jge
dec
movsl
adc
add
in
add
adc
popf
mov
enter
fwait
icebp
xor
pop
std
movsb
andl
mov
jns
push
test
add
mov
push
cmp
aad
jns
shrb
push
cmp
out
pop
fsubl
sti
repz
and
mov
mov
push
adc
and
adc
enter
mov
add
in
jle
idivl
shr
repz
adc
imul
jns
sarb
mov
imulb
mov
lock
shlb
leave
adc
mov
ret
and
adc
test
push
mov
cli
sub
mov
adc
test
xchg
xchg
pop
in
pop
xor
mov
xor
loopne
inc
sbb
lret
or
sbb
or
inc
cmp
cmp
mov
and
xchg
addr16
scas
pop
mov
je
popf
ficoms
enter
inc
fstp
or
or
add
dec
and
inc
les
xchg
out
xchg
and
fdivrl
ficoml
insl
push
or
enter
outsl
out
ret
or
xchg
dec
add
inc
inc
mov
dec
inc
mov
enter
lea
xchg
ret
loopne
pop
mov
movsl
lea
fists
sbb
lret
hlt
mov
jbe
add
lock
add
dec
lds
push
cmpb
sbb
in
xchg
outsl
sub
cli
lods
xchg
shrl
fldcw
push
cli
fs
mov
sub
mov
mov
fcomi
shrb
add
imul
lcall
sub
movb
jmp
fwait
push
pushl
stc
cmc
xor
add
or
inc
sbb
ret
insl
test
rcll
push
mov
xchg
sbb
and
jae
loopne
xor
enter
les
fabs
jno
int3
add
jb
adc
sbb
addps
jmp
mov
sbb
stos
pop
push
xchg
stos
out
int
jg
popa
sarb
ja,pt
lret
loopne
std
pop
push
iret
subl
lock
dec
pushf
in
ja
inc
sbb
inc
pop
ljmp
inc
test
icebp
ss
aad
leave
std
mov
lahf
dec
and
rcrl
lahf
pop
sub
lods
xlat
cmpl
std
in
dec
arpl
sbb
jo
and
add
dec
adc
xchg
mov
pop
pushf
cmp
mov
and
in
mov
leave
loop
inc
shlb
or
add
sar
ror
clc
inc
test
pop
aad
mov
sti
and
xchg
imul
inc
xchg
push
mov
sbb
sbb
ret
jb
outsb
pop
xlat
push
call
je
or
inc
push
fwait
dec
dec
mov
aam
in
decl
out
mov
in
lods
mov
mov
fstpl
mov
fbstp
mov
add
add
mov
aam
sbb
mov
inc
cltd
jl
pop
xchg
shll
fnstenv
sbb
xchg
into
fs
lahf
stos
stos
mov
fisttps
lahf
jp
leave
pop
and
push
pop
outsb
push
cld
xor
test
xchg
shrl
dec
mov
mov
out
pop
mov
ffree
pop
xchg
jp
scas
pop
mov
in
shr
ja
fmull
sti
and
mov
ja
jg
out
test
dec
sbb
pop
stos
rol
cmp
popf
movsl
jp
mov
xchg
js
pop
sbb
cmpsb
jnp
enter
outsl
aad
jb
adcl
iret
jecxz
mov
dec
dec
mov
fdivr
and
sbb
cmp
ss
mov
arpl
mov
ret
loopne
mov
test
lret
jecxz
add
scas
push
ss
cmc
lret
ficomps
dec
inc
pop
adc
out
movsb
mov
leave
fbstp
ret
sbb
push
lcall
push
test
push
sub
xchg
fadd
jmp
rcll
mov
add
or
xchg
or
rorl
xchg
fwait
inc
fisubl
pop
jb
xor
xchg
jbe
mov
pop
pop
aad
mov
ficoms
mov
leave
loop
in
pushf
push
sbb
adc
pop
or
add
push
rcll
push
fidivrs
enter
dec
pop
das
dec
mov
cltd
loopne
cmp
mov
es
or
es
aam
enter
jns
ret
mov
jmp
lret
dec
dec
fsts
mov
add
adc
imul
imul
sti
hlt
mov
sar
add
or
imul
shll
aas
sub
out
cmpsl
ret
sbb
adc
fsts
cmp
bnd
loope
jne
std
jae
lret
sbb
mov
sbb
test
lret
push
rcrl
mov
xchg
or
push
sbb
inc
mov
fstl
jl
inc
push
imul
mov
xor
movsb
fs
lahf
cmp
inc
xchg
and
jmp
dec
daa
push
or
or
sbb
xchg
xchg
fbld
jecxz
mov
push
insl
out
cli
pop
jae
gs
inc
push
dec
aad
mov
fstps
add
cmp
xor
nop
les
push
adc
mov
sbb
insl
add
add
into
pop
movsl
sub
cli
in
xor
mov
push
jnp
ds
fwait
sbb
dec
pusha
add
test
jbe
adc
lret
stc
sbb
sbbb
imulb
adc
pop
lcall
mov
fists
jae
lret
mov
pushl
or
pop
sbb
xor
pop
sbb
or
ja
lds
stc
cmpsl
inc
pop
pushf
lret
cmpsb
popf
push
inc
pushf
shr
sbb
pop
push
sbb
js
das
mov
adc
and
or
rcll
push
cmp
dec
xchg
fcoml
cmp
fcompl
xchg
sbb
in
insl
inc
aad
mov
xor
jp,pt
inc
ret
push
push
dec
mov
sbb
sub
loopne
cmc
mov
in
cmp
test
jb
lea
cmp
cmpsb
repnz
pop
or
in
and
mov
lock
inc
sbb
outsl
add
imul
lods
jno
dec
xor
inc
or
sbb
lea
nop
mov
mov
fwait
mov
xor
mov
or
js
push
sub
push
jp
xchg
add
push
inc
sbb
jge,pn
imul
jecxz
lcall
mov
push
or
pushl
popa
or
jge
subl
es
in
xchg
and
pop
and
stc
bnd
inc
xchg
dec
mov
js
imul
pop
insl
cmovae
adc
sbb
enter
inc
cmp
mov
je
cmp
in
mov
cmc
xor
push
adc
ret
pop
push
mov
mov
pop
sarb
mov
into
fwait
mov
out
mov
mov
inc
sbb
adc
push
add
shlb
dec
or
sub
fwait
outsb
and
test
lahf
nop
sbb
les
daa
repnz
cmp
xor
jg
adcb
adc
inc
lds
fdivl
sbb
lcall
dec
sbb
call
leave
lahf
pop
fcompl
int3
fidivl
jp
mov
pushf
std
cmc
cwtl
xor
mov
sbb
js
inc
sti
inc
fcoms
adc
adc
daa
clc
or
sub
xchg
xchg
pop
enterw
xor
cwtl
dec
and
pop
xchg
and
and
stos
aaa
test
jnp
fmuls
ret
vpslld
icebp
mov
cmp
in
hlt
xor
xchg
lea
mov
imul
and
mov
adc
mov
pop
testl
fists
jnp
pushf
sub
pop
add
imul
sbb
push
inc
cltd
nop
loop
xchg
rcl
loopne
pop
stos
inc
in
aad
lds
cmpl
lahf
fldt
stos
inc
mov
xchg
cwtl
nop
mov
int3
in
xor
mov
lcall
std
lock
jecxz
mov
push
jne
push
ja
out
jl
xchg
mov
pop
std
jecxz
clc
xor
adc
addb
inc
les
inc
jecxz
push
ret
inc
les
cmpsb
call
pop
lret
clc
gs
outsl
mov
and
mov
lret
add
or
or
jnp
fisubrs
xchg
out
push
adc
rorb
jecxz
push
mov
inc
hlt
ss
cmp
mov
cmpl
pop
ljmp
adc
add
popa
mov
adc
movsl
ret
dec
mov
push
divb
ret
mov
sbb
sub
push
lahf
arpl
popa
stos
xchg
mov
dec
sbb
pmulhuw
mov
pop
sub
sbb
or
sub
add
movb
ret
pop
pop
pop
cmpsl
pop
pusha
jbe
sub
pushf
jp
jg,pn
stc
loope
leave
jg
mov
mov
mov
inc
aam
clc
xor
adc
dec
test
lds
test
fwait
xor
clc
rclb
test
mov
xchg
sub
fisubs
jne
out
bswap
lds
enter
arpl
jecxz
jns
je
or
out
mov
int
mov
adc
mov
mov
dec
adc
stos
cmp
mov
imul
ja
lret
push
adc
jnp
dec
sbb
jns
cmpsl
rcrb
lock
lock
adc
mov
cltd
lret
and
iret
inc
mov
adc
jmp
push
jns
dec
and
lds
es
pop
sbb
daa
jae
clc
pusha
cmc
scas
dec
sbb
rcr
cmp
clc
and
or
push
pusha
push
stos
jge
fisubl
test
jl
fsts
xchg
es
xchg
jnp
pusha
push
mov
into
das
pushl
cmp
popa
inc
shlb
inc
cltd
arpl
inc
mov
mov
or
lret
js
mov
jle
xchg
mov
xchg
sbb
movsb
ds
inc
and
call
sti
xor
jne
xchg
shl
or
dec
mov
int3
sub
and
sahf
inc
sbb
cs
cmp
xor
mov
lods
divb
aam
sbb
mov
out
aas
pop
ret
sahf
repz
pop
and
test
push
mov
sbb
mov
cmpb
insl
cwtl
or
mov
dec
fiaddl
dec
push
add
iret
dec
sub
pop
cmp
xor
outsl
ffree
loopne
add
cmp
aaa
fmull
daa
sbb
ret
push
mov
fistl
mov
mov
mov
roll
and
pusha
push
jg
leave
in
sar
inc
pushf
repnz
and
push
mov
aam
fcoms
or
orl
roll
lea
std
dec
mov
inc
mov
xchg
js
clc
sub
out
cmp
mov
or
dec
sbb
outsb
mov
adc
cwtl
add
fadds
xor
xor
shrb
aaa
into
or
shlb
mov
inc
xor
clc
pushf
xchg
xchg
movsb
dec
lock
cmp
popa
pop
mov
dec
mov
iret
inc
sbb
pop
inc
test
out
mov
push
rorl
dec
add
xor
sub
dec
into
cld
in
mov
mov
pop
pop
cmp
insb
test
push
sbb
jge
pop
movsl
or
mov
je
stos
lods
cmc
pop
fcoml
jbe
fstl
fwait
enter
lret
ficoms
xchg
cmpsl
mov
andl
or
test
adc
mov
jns
dec
and
inc
jb
mov
rorb
pop
inc
clc
jecxz
mov
jmp
std
mov
sti
and
xchg
inc
inc
mov
enter
xchg
jecxz
icebp
iret
ret
push
dec
mov
lcall
and
repz
adc
push
cmp
imul
xor
sar
add
ljmp
and
jl
ficomps
cmc
jbe
ljmp
fs
adc
stos
jb
lcall
ja
push
icebp
sbb
xor
movsl
xchg
bound
sub
test
push
pop
jae
or
test
push
fisubl
pusha
and
mov
sbb
shrl
test
add
repz
loopne
xchg
ja
addl
mov
dec
sub
xchg
xchg
out
test
test
decl
test
mov
fstps
mov
cmpsb
inc
cltd
out
cmp
loop
push
dec
stos
test
push
dec
mov
sbb
and
loopne,pn
cmc
mov
cmc
shlb
call
aad
ss
aam
stc
pop
adc
mov
shr
mov
mov
mov
gs
rcrl
adc
mov
mov
push
adc
xor
scas
addr16
xlat
ljmp
add
lahf
mov
xchg
push
std
in
mov
ret
xor
test
mov
add
inc
sbb
lret
mov
sbb
add
mov
mov
pop
dec
sub
sbb
jnp
movb
dec
sbb
push
adc
out
pop
adc
mov
inc
out
or
add
and
mov
rclb
xor
insb
test
es
testb
fimuls
movsb
inc
inc
mov
ret
xchg
mov
mov
xchg
push
out
shlb
cmp
test
push
or
jmp
cs
hlt
enter
mov
jp
leave
sti
inc
sbb
inc
aam
jne
in
sbb
repz
xchg
sbb
add
test
repnz
pop
sbb
test
aad
inc
cwtl
leave
test
xor
ror
mov
and
test
lahf
push
sub
xchg
fldcw
pop
in
mov
pop
sub
in
or
aad
cmp
rorl
stos
int3
fxch
imul
pushf
sub
pushf
jle
pop
mov
in
aad
test
pushf
pop
cltd
lods
jl
aas
add
roll
xor
mov
into
test
xchg
lea
mov
push
mov
ret
mov
push
pop
leave
jo
xor
fstpt
or
addb
fidivs
cltd
mov
daa
mov
shl
mov
call
add
jecxz
lahf
mov
hlt
sbb
inc
shl
repz
lahf
rcrb
mov
pop
mov
lock
mov
xchg
adc
cwtl
lret
inc
sbb
or
adc
imull
in
cmpsl
lret
cld
mov
lcall
fsubrl
push
clc
test
iret
ljmp
jo
xchg
test
lock
push
sbb
fisubrl
test
xchg
stos
std
xor
lods
movb
lret
lahf
movsb
ljmp
push
cmp
push
fists
dec
cmc
xor
adc
sub
mov
aam
jns
fwait
or
and
fisubrl
ficoml
and
or
or
jne
insl
cmovl
mov
inc
mov
inc
loope
xchg
enter
sarb
add
in
jne
dec
mov
addb
fbstp
sbb
into
pop
movsl
sub
movsb
popf
xor
mov
jecxz
push
orb
add
sub
pop
add
lds
add
imul
int
inc
mov
jge
test
test
movsb
push
cli
sub
pop
movsb
jmp
push
iret
cmp
stc
push
std
xorl
mov
cli
sub
lcall
fistpl
dec
sub
arpl
enter
arpl
sti
add
jecxz
fistps
movsb
jp
scas
fbstp
jl
js
stos
add
cwtl
fwait
jnp
add
mov
rorb
mov
push
in
imul
jmp
mov
xchg
pop
and
mov
leave
xlat
xchg
push
out
loopne
and
cmpsl
je
call
icebp
int3
inc
pop
bound
out
ja
int
inc
cmp
cmpsl
cmp
hlt
enter
jne
shlb
out
call
mov
out
mov
adc
push
iret
ret
decb
jns
stos
rcrb
xor
lock
adc
movsl
lds
adc
xlat
leave
rcrb
sbb
test
dec
and
lds
jge
leave
pop
sbb
pop
popf
flds
stc
xor
mov
ret
cmp
nop
cmpl
mov
push
sbb
lds
aad
adc
cmp
pushf
imul
adc
lds
or
out
lock
sbb
addr16
cmp
xlat
in
testl
inc
or
fwait
cmp
adc
xor
imul
push
imul
pop
fidivrl
jnp
pop
adc
ficomps
xor
and
and
cmc
add
and
mov
push
dec
cmp
xor
mov
lods
test
push
push
mov
inc
out
jmp
clc
rdpmc
pop
dec
lahf
in
sbb
fwait
mov
add
rcrl
imulb
jno
jp
int
xor
sarb
ja
mov
gs
push
and
dec
push
mov
sbb
ss
mov
jb
lods
dec
pop
sbb
jno
inc
push
jl
rorl
fsts
pop
daa
sbb
pop
movsl
sbb
jl
fistpl
mov
int3
ljmp
ficoms
jg
fists
push
js
push
ljmp
add
icebp
fildl
inc
les
fwait
aas
mov
push
fdivrs
and
cmp
cmp
mov
and
mov
cltd
repz
adc
inc
cmp
mov
cwtl
mov
and
mov
mov
jbe
fwait
les
mov
shrb
sbb
jno
pop
adc
ret
ficoms
jns
scas
rcrb
add
lds
shrb
cmpsl
mov
cli
pop
loopne
enter
negb
and
push
leave
sbb
add
stos
fwait
mov
hlt
bnd
in
sbb
sub
int3
jmp
jae
into
jo
fnstenv
or
add
cmpsb
xchg
and
idivb
or
lcall
pop
inc
fistl
cld
xor
xchg
lcall
push
movsl
sahf
xchg
jl
push
fcomip
mov
loope
pop
sub
andl
rcll
aam
jns
dec
and
ret
add
xor
inc
add
adc
ds
test
test
cmpsb
mov
lret
pusha
xor
push
push
inc
pop
pop
cwtl
stos
arpl
xchg
lea
jle
out
push
adc
ret
jmp
mov
mov
shlb
pop
call
push
sub
neg
or
fcoms
pop
lcall
add
insl
cltd
sbbb
imulb
lahf
adc
test
mov
cvtps2pd
sti
sahf
mov
mov
arpl
lds
or
lds
fdivl
jne
dec
add
sub
ja
ret
movsl
fisttpll
pop
test
lcall
sub
mov
jno
in
push
lret
repnz
sub
std
cwtl
andl
rcll
shll
adc
cmpsl
fptan
stos
xor
dec
andb
ret
and
xor
into
fadds
out
sbb
loopne
push
xor
test
add
xor
push
popa
lret
inc
sub
cmpsl
mov
xchg
cltd
fprem1
lsl
lea
movsl
dec
in
cmp
and
lds
ds
jns
add
mov
negb
add
mov
sub
cmpb
push
divb
pop
rcrb
ret
push
lret
fisubl
xchg
leave
mov
scas
mov
cmp
out
mov
push
cmp
ret
add
das
sbb
insl
mov
imul
add
cld
ret
xchg
popf
adc
pop
nop
jp
das
decl
movsb
pop
aam
pop
js
or
data16
or
or
xorl
mov
sbb
pop
shrl
mov
or
cmp
or
rclb
pop
fdivrs
jge
jge
iret
lds
popf
out
lock
inc
push
jb
fwait
testl
pop
jmp
or
xor
stos
jbe
dec
shrb
mov
call
mov
in
xchg
xchg
or
faddp
mov
add
fidivl
add
mov
divb
rcl
sbb
rcrb
sbb
shr
fsubl
and
lds
es
push
ja
movsb
mov
cld
mov
fistpll
std
fcomi
add
or
sbb
lock
sbb
les
sbb
mov
sub
mov
enter
shl
sbb
js
inc
stc
sbbl
aam
clc
or
or
test
xchg
sub
dec
enter
movsb
jp
jnp
push
imul
aaa
mov
xchg
mov
lahf
es
xor
jne
cltd
jns
je
sbb
xor
nop
nop
jmp
adc
arpl
int
jle
pop
shll
les
pop
into
adc
mov
and
mov
jecxz
mov
cltd
js
mov
rorb
push
pop
xchg
push
jbe
and
cmpsl
inc
scas
pop
rcrb
sbb
dec
ficompl
push
test
sub
dec
sbb
xor
jae
cltd
je
sbb
rcr
xor
rcrl
mov
jmp
fdivl
xchg
adc
xchg
pusha
fcmovbe
or
jns
fistl
popf
shrb
test
fidivs
leave
aad
mov
mov
fists
ds
rclb
push
sarb
inc
fnstcw
jns
dec
and
into
aam
jnp
xor
xchg
and
movsl
cli
adc
bound
enter
out
mov
fnsave
inc
test
les
loopne
aam
sbb
xchg
movsb
popf
in
push
mov
xchg
test
fxtract
dec
add
into
inc
imul
jmp
lds
push
pop
adc
or
cltd
xchg
pop
sub
pop
sbb
adc
mov
xchg
dec
fsubrl
pop
imul
sbb
and
lds
sti
lods
loope
sbb
ss
mov
sbb
rcr
fwait
cmpsb
jno
add
insb
orb
add
xchg
ficoml
or
xor
scas
jecxz
mov
lods
push
pop
mov
pusha
mov
out
js
insb
push
inc
je
sbb
js
sti
add
arpl
rolb
daa
adc
mov
xchg
and
xor
push
jmp
cwtl
inc
jns
dec
mov
jo
insl
push
add
outsl
push
ret
mov
fisubs
in
leave
cwtl
pop
dec
push
sub
mov
cmc
clc
pop
fs
popa
mov
pop
pop
mov
push
enter
divb
pop
pop
jae
mov
imul
add
addb
sbb
sub
mov
hlt
xor
cltd
and
imulb
pop
lret
iret
test
movsb
sti
dec
sbb
stos
fildll
jns
jnp
dec
mov
pop
fnstenv
push
cmp
sub
sub
ljmp
subl
push
jp
sbb
xor
lcall
add
data16
or
sbb
mov
fwait
push
dec
mov
mov
inc
lret
pop
testb
fisubl
mov
sbb
cmp
xor
jb
sbb
mov
and
daa
leave
xor
bound
inc
push
fwait
nop
sub
mov
fcomp
jno
jl
push
mov
subl
into
pop
movsl
pop
shlb
and
js
xchg
stc
pop
pop
dec
loope
ret
js
push
sbb
mov
adc
ret
cld
xchg
lock
mov
ret
enter
mov
mov
pop
lret
clc
mov
xlat
or
and
dec
dec
cmp
lret
sub
lahf
hlt
in
push
xchg
xchg
popa
ret
jo
test
sbb
or
test
jmp
outsb
les
push
mov
add
inc
scas
adc
xchg
pusha
mov
sbb
mov
cld
sbb
pop
push
mov
fdivs
jbe
rcr
xor
mov
fidivrs
mov
xchg
imul
mov
pop
divl
fwait
lea
repnz
adc
add
push
jecxz
mov
cmp
cmp
cwtl
movsb
lea
dec
mov
ret
pop
adc
ljmp
lcall
add
loopne
jno
or
js
jecxz
mov
adc
rol
xchg
cli
inc
into
cmpsl
mov
faddl
or
xor
test
stos
push
and
les
lods
jmp
mov
ljmp
or
fcoms
mov
cli
test
xchg
sub
or
pop
lds
inc
mov
push
cmp
pop
test
filds
pop
popa
or
add
add
rcll
aam
jns
cmp
out
call
push
or
push
push
lods
xlat
xchg
aam
cli
xor
xor
cltd
rolb
fwait
lea
mul
mov
int3
pop
out
and
mov
dec
jmp
or
and
mov
dec
mov
jbe
fwait
sub
or
in
push
fstp
pop
add
adc
adc
pop
jl
pushf
divl
inc
ds
cmp
sti
mov
and
xor
xor
adc
xchg
int3
addr16
shlb
rcll
lcall
push
pushf
inc
pop
and
xchg
jge
mov
lods
mov
ret
cmp
inc
mov
mov
push
push
movsl
int
push
mov
mov
in
js
push
jge
jno
push
mov
inc
pusha
push
jg
jmp
pop
push
fs
andl
mov
dec
in
ds
xchg
and
lds
sbb
je
decl
jns
insb
jbe
cld
icebp
cmpsb
dec
sub
jo
sti
fucomip
popa
mov
vrsqrtss
sbb
adc
leave
adc
jb
cmp
and
mov
mov
pop
sti
inc
inc
xor
lcall
loopne
les
inc
inc
xor
push
out
add
lret
out
lock
pop
in
lock
ja
inc
add
jecxz
cld
stos
in
ret
lock
addr16
add
nop
imul
lods
inc
cmp
mov
inc
mov
mov
push
dec
mov
fmull
pop
insb
cwtl
xorl
push
mov
push
sub
and
push
mov
sbb
push
sub
mov
mov
push
cmp
dec
lock
jge
push
mov
js
pop
sar
add
and
std
add
xchg
int
dec
lahf
pop
mov
push
xchg
insb
jbe
jp
cwtl
push
movsl
stos
jo
cmp
fisttpll
xchg
jle
cmp
cltd
mov
dec
inc
dec
push
or
dec
xchg
pop
stos
daa
adc
lret
adc
mov
das
xor
and
pop
mov
out
scas
movsl
fsubr
add
ja
fnsave
sbb
in
in
pop
dec
push
cmp
add
lds
mov
sbb
mov
fisubrl
adc
rcrb
mov
push
dec
jb
cli
lods
push
sub
in
pop
push
fsubrl
and
xchg
jge
mov
cld
aaa
insb
or
js
pop
insb
push
jl
pop
shlb
jp
mov
push
mov
imul
push
jle
sbb
and
in
cmp
jg
jmp
cmc
fbstp
pop
sbb
cmpsl
xlat
in
or
jmp
add
xchg
int
mov
xor
cmp
push
mov
out
pop
and
jo
jo
imul
mov
mov
rcll
add
push
inc
mov
arpl
dec
sbb
pop
add
xor
xor
mov
inc
inc
mov
popf
lret
pop
add
daa
jecxz
clc
fidivrs
xor
add
mov
mov
sub
jo
int3
addr16
add
mov
mov
mov
push
dec
bnd
mov
lret
and
add
bound
jbe
movsl
xchg
mov
shrb
jge
lcall
gs
fstpt
push
cmp
push
fidivs
mov
fucomi
in
mov
dec
icebp
cmc
mov
pop
aas
add
sti
mov
xchg
or
xor
fsubrs
dec
icebp
gs
push
les
out
push
mov
aad
cmp
fistps
push
or
jb
sbb
aaa
popf
iret
jp
mov
stos
sarb
mov
hlt
test
outsl
aad
or
and
mov
or
jne
fadds
lods
enter
inc
ja
dec
or
add
xchg
sar
xor
cmp
pop
aad
ja
sarb
je
into
test
pop
jecxz
xor
ret
adc
mov
outsl
inc
out
test
es
mov
sub
lods
dec
xor
movsl
mov
sbb
stc
cwtl
xlat
leave
popf
fcmovbe
insl
mov
das
mov
dec
repz
std
pop
stos
xchg
fistl
fistpl
pop
nop
jbe
das
mov
ret
std
cmp
xchg
stos
fcmovnb
stc
pusha
js
pop
js
mov
add
and
xor
add
xchg
int
dec
sbbb
outsb
cmp
or
jbe
pop
jbe
dec
sub
jo
dec
repz
gs
jb
mov
sbb
aam
aaa
or
mov
sub
cmp
and
adc
pop
vhaddpd
fwait
sub
or
adc
pop
add
xchg
or
add
jg
insl
cwtl
orb
mov
or
adc
roll
nop
dec
loopne
xor
pop
fsubrl
popa
pop
mov
rol
push
jge
sbb
inc
ret
cmc
fnstenv
ja
imul
or
xchg
xor
out
les
std
lock
mov
jno
aad
mov
add
inc
xor
sub
jno
in
mov
das
dec
xchg
inc
clc
and
push
and
test
xchg
mov
sarb
fmuls
jle
out
push
push
lods
xlat
into
leave
movsb
inc
sbb
xchg
es
jns
fs
sti
cmc
pop
popf
iret
sbb
push
jb
insb
aaa
sbb
cli
hlt
jb
jl
adc
or
xchg
dec
push
sub
gs
or
repz
pop
or
mov
pop
add
inc
cmpl
sbb
in
dec
xor
pop
test
xor
in
ja
inc
lea
push
add
lock
int3
addr16
jae
lock
outsl
sub
mov
lcall
loop
mov
xor
cld
int3
rorl
or
pushf
andl
cmp
outsb
push
cli
insb
daa
cltd
push
push
push
dec
cmpsl
push
negl
add
mov
ljmp
sbb
pop
and
jmp
and
stc
insb
inc
bound
mov
sbb
add
loop
mov
dec
loop
ds
xchg
xor
andb
fwait
push
xchg
pop
cmp
insb
jbe
fidivl
and
mov
jb
mov
rorl
dec
mov
lret
repz
push
or
dec
inc
cmc
xor
dec
daa
adc
xor
cmpb
mov
mov
adc
cmp
cli
dec
cmovo
adc
clc
sti
mov
push
or
add
add
lahf
ljmp
shrb
adc
mov
iret
sub
lret
sbb
add
mov
and
mov
rcr
loopne
shlb
data16
inc
cmp
adc
enter
xchg
cmpsl
push
xchg
dec
mov
jle
jmp
push
mov
sbb
jmp
sub
push
leave
or
repz
sarl
add
rcll
aas
fimull
dec
aam
cmp
cmp
pop
xchg
mov
imul
pop
pop
mov
xor
int3
adc
mov
cmp
rclb
ret
pushf
and
adc
cmp
ret
scas
mov
pop
cmc
lods
mov
in
pop
push
into
inc
sahf
jecxz
stc
fwait
xchg
inc
xor
cmp
lea
jg
or
mov
adc
push
fs
fs
ljmp
pop
add
lret
sbb
cmp
mov
cmp
or
int3
ss
insl
test
js
sub
dec
xor
and
test
std
lock
fcoml
jb
lods
xor
jbe
int3
xor
xchg
push
imul
in
sub
mov
dec
les
dec
shlb
pop
jnp
mov
push
or
push
fnstenv
movsb
cli
mov
int
fistpll
dec
ret
inc
jmp
sti
std
mov
sti
and
sbb
mov
xchg
xchg
jmp
repz
xchg
jle
push
dec
mov
sbb
add
dec
jns
lcall
mov
call
cmc
sub
mov
ja
rcl
or
mov
xchg
cwtl
clc
jecxz
pushf
jl
mov
icebp
aaa
mov
sbb
push
jne
mov
pop
stos
inc
in
aad
mov
sub
xchg
stc
mov
mov
je
mov
cmp
lret
lahf
lahf
test
dec
daa
sbb
inc
cmp
xchg
scas
sahf
xchg
fisttpll
ja
sub
mov
aad
mov
rclb
mov
inc
sti
and
or
and
mov
add
cmc
in
push
test
sbb
mov
mov
jno
sbb
mov
mov
fdivs
pop
fsubl
js
out
cmp
test
push
and
dec
inc
mov
jmp
das
in
cmc
hlt
jnp
test
pop
lods
cmc
pop
mov
push
mov
mov
call
mov
jecxz
mov
xchg
cwtl
push
lock
adc
movl
fwait
imul
mov
mov
fadd
dec
sbb
lahf
movsb
fstps
dec
sbb
call
pop
sub
jno
inc
push
and
ret
add
and
lods
jge
mov
cmp
mov
lods
movb
jecxz
cmpsb
int3
adc
mov
mov
loope
jg
xchg
fcompl
stc
cmpsb
adc
sbb
mov
clc
xor
in
ja
or
in
mov
jnp
inc
push
mov
or
xchg
xor
mov
cmp
pop
daa
pop
repz
xchg
outsl
mov
popf
cmpl
or
mov
test
ds
jecxz
mov
xchg
pop
shll
add
aaa
ljmp
cmp
cmp
or
mov
sar
dec
jnp
mov
stos
ffreep
ret
sbb
add
push
int
inc
sbb
sbb
lds
fldenv
sub
mov
int
cmp
push
inc
sar
xor
cwtl
adc
and
mov
mov
lock
pop
sbb
fistl
mov
and
sbb
adc
loopne
repz
dec
add
popa
or
add
int
dec
adc
or
pop
sti
xchg
and
xchg
test
enter
test
jae
xchg
negl
jnp
clc
ficomps
enter
mov
jp
jmp
sbb
mov
sub
stos
sbb
mov
or
inc
inc
fiadds
imul
jae
dec
scas
sti
pop
pop
add
mov
repz
rcrl
add
repnz
lret
pop
loop
imul
test
lds
dec
and
rcl
dec
stos
push
jno
cld
lods
test
stc
dec
pop
sbb
stc
dec
data16
pop
xor
test
push
pop
xor
ret
jl
rorl
outsl
or
add
adc
inc
inc
ljmp
adc
fsubrl
inc
arpl
test
add
mov
int
sbb
adc
mov
test
xchg
lahf
inc
loope
push
fdivrs
jge
push
cmp
mov
jne
das
test
rep
loop
jl
or
daa
je
seto
ret
push
inc
add
ret
pop
push
xchg
push
jae
push
repz
push
add
lret
jecxz
fstl
inc
cmpl
loope
sahf
add
xchg
aam
pop
or
push
push
repnz
jbe
adc
movsl
inc
sbb
aas
loop
popa
cwtl
ret
sbb
dec
mov
push
test
dec
push
lret
inc
lahf
jae
cli
movsb
rorb
xchg
cmp
jmp
ja
mov
les
add
xchg
or
sbb
jnp
mov
pop
nop
jbe
xor
xchg
stos
loop
sbb
iret
js
jle
xor
int
cmp
inc
adcl
sub
call
jns
enter
addr16
les
lcall
push
ljmp
stos
mov
jle
call
fcomi
jnp
dec
xchg
mov
xchg
add
test
dec
sub
cmc
enter
xchg
push
adc
orb
push
xchg
sbb
movsl
add
aaa
ljmp
test
pop
add
or
hlt
mov
inc
test
add
rcl
sub
insb
or
lods
jno
mov
ret
sbb
inc
cmpsb
xchg
adc
stos
jb
jns
push
inc
mov
xchg
mov
lock
ss
dec
or
push
push
xor
sbb
xchg
mov
xchg
pushf
xchg
negb
xor
sahf
xchg
sbb
js
jp
mov
mov
cmc
cmp
adc
lret
subl
rcll
and
mov
arpl
xchg
and
mov
jp
sbb
adc
or
and
call
insl
faddp
inc
std
push
adc
dec
mov
or
sub
cmpsl
jne
test
int3
sub
sub
mov
les
shrd
or
imul
jns
jecxz
insl
movsb
shr
xchg
lock
subb
sbb
inc
inc
and
cmpsl
aad
jns
pop
stos
jnp
dec
sbb
and
test
pop
cli
sub
fldenv
addr16
test
fistps
fiaddl
cmp
fsubl
or
les
or
inc
lcall
jo
jbe
das
jno
xchg
push
leave
leave
hlt
mov
xchg
jmp
or
adc
add
iret
push
dec
push
jno
pop
ds
xor
sbb
dec
sub
adc
cmp
notl
mov
mov
fcomp
pop
sbb
jns
pop
rcll
addb
push
inc
inc
fmull
push
adc
dec
mov
cltd
mov
fsts
rolb
call
cmp
push
dec
lcall
iret
sbb
jecxz
popf
lcall
sbb
and
fs
xor
inc
mov
shll
dec
mov
adc
mov
push
mov
sbb
cmp
popf
lret
add
test
test
xor
stos
cs
add
inc
inc
movsl
sbb
pop
and
pop
pushf
push
jecxz
test
dec
lods
ds
xor
xor
xlat
cld
sbb
sub
push
cwtl
rclb
xor
sbb
mov
pop
xchg
int3
aam
sbb
aas
mov
sub
fisubl
cli
mov
adc
pop
fisubs
fwait
enter
fsubs
jne
push
adc
adc
test
push
add
js
mov
int
xor
mov
outsb
mov
stos
icebp
jae
adcb
imul
push
movl
iret
sbb
ss
es
add
fs
lock
lock
adc
mov
aas
ljmp
out
jl
cli
sub
sbb
dec
push
dec
push
movl
dec
sbb
push
pop
in
push
xor
sbb
inc
sbb
lret
or
mov
mov
lcall
xchg
ja
fstl
jnp
sub
or
inc
fwait
sub
jo
adcl
and
inc
bnd
nop
xchg
mov
sbb
stc
xor
pop
dec
lcall
push
fbld
jge
imul
sub
mov
jae
ffree
stc
outsl
dec
xchg
xchg
pop
outsb
mov
fwait
add
and
lea
ds
repz
mov
cmp
sbb
xor
ljmp
xchg
test
push
mov
in
add
sub
cmp
inc
add
les
and
leave
sarb
jge
test
add
test
mov
clc
iret
xor
js
out
fistl
int
xchg
arpl
mov
mov
mov
loop
test
pushf
add
fcmovu
popf
pop
out
pop
stos
fs
mov
mov
mov
mov
mov
sbb
outsl
psllq
scas
inc
sub
stos
js
sahf
inc
movsl
pop
idivl
sub
add
add
shl
mov
mov
adc
stos
mov
cmp
mov
cmpsb
dec
pshufw
mov
mov
xchg
push
mov
xchg
xorl
mov
es
add
push
repz
xchg
adc
ja
fs
dec
push
sub
mov
rcl
mov
sbb
repnz
test
rcrb
fidivs
mov
or
sub
lods
xchg
sub
std
mov
pop
sub
sbb
scas
pushf
insl
in
xchg
in
les
xor
test
and
inc
out
test
adc
jno
xchg
xchg
iret
pop
ficoms
xchg
aaa
jnp
lock
mov
adc
fwait
iret
fildl
in
xchg
addr16
add
pusha
sbb
adc
push
mov
adc
std
test
sbb
mov
jnp
inc
push
mov
cmpsl
add
aad
pop
cmpsb
shrl
xor
out
testb
enter
mov
int3
pop
loop
dec
jge
repnz
push
or
inc
and
mov
gs
jbe
jno
xor
shll
pop
stos
cmp
jb
mov
or
pop
jecxz
ret
or
mov
inc
or
insl
mov
adc
cmp
sbb
mov
cli
cmp
lock
mov
stos
cmpsl
xor
jns
cmpsb
lds
cli
mov
inc
mov
jbe
movsl
loopne
mov
inc
mov
adc
push
adc
lcall
sbb
add
lods
hlt
aad
fsubp
xor
fs
adc
stos
lret
out
jp
jecxz
pusha
scas
push
test
icebp
repnz
sub
pusha
enter
add
jecxz
out
xor
jle
mov
test
dec
cmpps
movsb
leave
sbb
cmpsl
dec
inc
mov
cmpsb
lret
bound
jle
inc
rcll
aam
xor
cmpsb
push
cld
push
bound
push
daa
aad
jne
pop
aad
mov
arpl
sbb
cmp
sbb
push
std
aad
jae
push
and
mov
shlb
inc
lahf
dec
or
inc
dec
xchg
je
lock
add
and
mov
divl
pop
cmpsb
loop
test
sub
jl
xchg
in
xor
push
jecxz
into
jb
daa
jno
inc
test
add
sub
mov
mov
mov
pop
out
inc
ljmp
imul
xlat
xor
and
ret
xchg
loope
lcall
sbb
hlt
jmp
pop
aas
testl
mov
xor
cwtl
dec
and
cli
pop
movsb
add
insb
adcb
in
test
mov
cmp
mov
sbb
verw
out
push
inc
ffree
mov
pop
jns
jmp
iret
pop
into
xor
fcoms
xchg
lds
aas
xchg
leave
jge
cmp
ja
ret
in
ret
aas
mov
ja
les
or
xlat
aam
ja
adc
and
scas
xchg
aaa
shl
inc
scas
push
inc
push
dec
dec
jp
insl
push
scas
sahf
cmp
and
xor
push
sahf
leave
mov
shrl
sub
test
mov
cmpb
xorl
stos
add
sbb
aaa
cmp
xchg
ljmp
mov
jmp
stc
rcr
icebp
cltd
jle
mov
pusha
mov
andl
mov
xchg
test
jle
adc
dec
lods
or
xchg
push
pop
sbb
cmpsl
dec
jno
jb
adc
cmpsb
mov
popf
bound
adc
inc
shlb
push
and
xor
dec
mov
enter
xchg
shlb
mov
pop
dec
scas
out
xchg
cmpsl
jle
ja
fwait
div
jb
std
scas
cmp
je
hlt
cmp
mov
sub
pushf
pop
lods
cmpb
sahf
fsubl
aas
imul
jae
xchg
scas
push
add
scas
xchg
lret
frstor
dec
cmp
cld
into
popf
lret
or
fnstcw
ds
add
cmp
fisubrl
lahf
sub
and
inc
dec
ret
sbb
adc
add
js
popf
fcompp
mov
inc
rorl
push
mov
mov
pop
and
pop
orl
test
test
push
or
fs
into
and
pop
xchg
loopne
rcrl
shll
jae
push
push
loop
cmp
dec
cmp
cmp
sub
sub
mov
push
push
in
cmpsl
pop
push
sti
int
dec
movsl
pop
ljmp
mov
in
fidivl
mov
adc
jle
cmpsl
lds
daa
fyl2x
lock
adc
cmp
dec
adc
mov
xor
and
and
in
push
mov
movsl
filds
push
cli
mov
insl
mov
sub
mov
xor
xorl
pop
lret
lea
rorl
ja
fistl
xchg
and
xchg
cmp
fidivrs
mov
in
mov
jmp
push
add
xchg
test
jge
push
or
mov
jl
shlb
inc
outsl
jne
jmp
xor
cmpsl
jae
nop
stos
inc
ljmp
cmovae
xchg
loope
pop
fbld
mov
push
add
lret
clc
hlt
xor
aas
lahf
or
adc
aad
and
shl
out
rclb
mov
or
mov
inc
lea
ret
lods
sti
pop
inc
xor
stos
jge
movsl
sbb
xor
adc
and
rorb
or
int
xor
push
xor
add
and
and
enter
stos
jb
pop
cld
mov
fstp
inc
loopne
cli
mov
out
out
imul
jae
aam
into
cmpb
out
push
std
test
fists
mov
mov
pop
ficoms
xchg
sbb
push
and
jle
add
sbb
xchg
leave
ret
cli
movsb
inc
xor
mov
or
mov
outsl
std
jecxz
loop
xor
jno
scas
xor
push
pop
cmp
in
jbe
sbb
call
cmpsl
mov
mov
cmpsb
or
bound
jle
je
in
add
pop
adcl
loop
jne
push
mov
push
cmp
mov
pop
mov
popa
rcrl
idivb
pop
mov
jno
pop
aas
idivl
inc
mov
jle
sbb
loope
xor
iret
cmpsl
rol
les
mov
pushf
fsubl
mov
popf
call
pop
cld
mov
aad
inc
sub
jl
xchg
in
xor
insl
cmpsl
aas
test
jmp
clc
ss
ret
mov
inc
jmp
jmp
lock
push
pop
dec
gs
pop
cmp
pop
mov
loop
fnstcw
push
add
xchg
movsl
adc
xor
xchg
andl
inc
fisubs
add
cmpsb
pop
nop
fsubrs
pop
leave
testb
cwtl
imul
sbb
popa
lcall
mov
pop
mov
xor
push
mov
mov
cmpsl
fs
jnp
xchg
imul
mov
test
mov
int
lret
stc
pop
and
jb
xor
addr16
xor
jne
pusha
add
adc
test
mov
ficoms
inc
mov
arpl
mov
mov
mov
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
adc
inc
sbb
bound
sub
test
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
xchg
neg
jmp
dec
sub
fnsave
je
or
sub
out
in
hlt
inc
adc
push
bound
outsb
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
gs
cmp
test
loope
shlb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
fsubrs
mov
cwtl
idivl
fistpl
and
jne
les
cmp
add
push
inc
ret
pop
sub
and
cs
jae
loop
je
mov
pop
sub
cmp
arpl
lods
push
push
cmpsl
mov
push
mov
mov
clc
add
sahf
mov
pop
pop
mov
je
gs
pushf
bound
cmpsb
hlt
xor
imul
sub
rcrb
dec
popa
in
cmc
in
mov
in
inc
sbb
subb
lahf
or
gs
cwtl
out
adc
lret
inc
xchg
ret
mov
or
xchg
loope
push
inc
sub
je
lods
into
ret
jg
jae
mov
ljmp
in
pop
dec
leave
call
addr16
lods
jle
push
scas
sbb
cmpb
mov
hlt
xchg
xor
arpl
mov
bound
ffreep
fcomps
je
les
push
inc
cld
push
sub
dec
lahf
in
loopne
pushl
ror
bound
pushf
cmpsb
in
inc
imul
imul
or
test
push
lret
pop
stos
dec
push
jmp
push
and
into
adc
jbe
xor
cmp
cmp
xor
dec
sub
mov
insb
cmpsb
imul
testb
push
fs
jne
dec
sahf
lods
shrb
xor
ja
push
jo
sub
inc
xchg
mov
lahf
jns
sbb
repz
incl
inc
xor
adc
xchg
push
pop
push
cmp
lds
ficomps
push
sahf
mov
sbb
xchg
rcr
call
inc
sub
xor
fbstp
lock
shlb
std
loope
fs
xchg
je
dec
imul
sub
sti
push
cmpsb
pop
std
cmpl
aam
cmp
out
repz
jl
mov
out
push
out
pop
aas
fld
inc
sbb
inc
enter
cld
or
pop
repz
imul
sub
mov
mov
scas
xchg
ds
push
movsb
aam
arpl
xchg
push
dec
jnp
mov
push
aam
sub
shrb
mov
ror
js
mov
dec
mulb
hlt
gs
aad
pop
sbb
addr16
in
testb
or
ja
insl
pop
addb
addl
cwtl
data16
or
scas
icebp
pusha
shlb
rolb
cmp
or
ficompl
outsb
jno
icebp
out
mov
movsb
inc
sbb
and
dec
aam
dec
xchg
dec
jo
jns
test
ret
pop
lods
or
les
cmpsb
pop
pop
lods
outsb
inc
repnz
pextrw
or
popf
imul
pop
ret
pop
add
movsb
mov
iret
roll
mov
push
decl
push
add
add
jl
shl
lahf
dec
or
mov
add
in
movsb
sbb
ret
fwait
test
push
or
mov
or
je
es
dec
jnp
cld
xor
dec
mov
pop
cwtl
pop
add
or
in
jb
fisubrl
or
pop
orb
mov
jl
aaa
sbb
push
negb
lods
mov
mov
xchg
stc
mov
call
cld
das
cli
out
sti
insb
je
inc
cmp
mov
jo
std
cltd
outsl
mov
jle
sub
xchg
xchg
iret
mov
adc
rcrb
or
xor
cmp
jle
or
leave
xor
xchg
xchg
gs
adc
mov
inc
push
jb
dec
js
loope
jno
add
xor
xchg
enter
out
jge
or
sbb
mov
cmp
iret
adc
jle
aaa
imul
mov
cmpsb
add
mov
pop
addr16
sbb
es
jns
sub
fiadds
dec
push
jnp
shll
fisubs
xor
stos
and
call
mov
out
call
aad
fsubs
xor
mov
inc
les
fs
sub
cmc
xchg
cmp
sbb
outsb
lods
sub
orb
fisttps
jg
xor
test
xlat
add
sbb
repz
decl
sub
cmc
push
cmp
add
sub
adc
sti
loopne
mov
xor
dec
jno
scas
aam
imul
add
mov
jo
loopne
jp
aaa
es
jns
adc
cmpsb
pop
aam
outsb
inc
dec
fbld
pextrw
add
popf
jnp
or
loop
cmova
test
sub
jae
sbb
lcall
inc
jp
in
gs
sbb
call
mov
add
mov
lahf
mov
mov
stos
mov
jns
pushf
scas
scas
adc
push
mov
fs
sbb
push
adc
xor
and
xor
addl
sub
sbb
shl
je
mov
pop
scas
dec
pop
jnp
les
repnz
pop
pop
jmp
mov
shll
adc
xchg
loop
pop
cmpsl
xlat
add
btc
sbb
daa
mov
fs
cmp
imul
das
jecxz
xchg
dec
divb
das
les
cltd
adc
nop
add
pmaxub
mov
aam
cmp
or
adc
cld
jl
push
mov
jle,pn
xor
pop
add
push
std
jecxz
arpl
repnz
add
pusha
xlat
sahf
test
pop
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
or
xchg
push
and
cwtl
aas
mov
arpl
lcall
adc
mov
js
pop
int3
xchg
xchg
bound
dec
scas
ror
les
rcrb
and
push
sbb
mov
pop
in
xchg
ss
in
daa
inc
lret
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
in
sbb
jg
repnz
push
cmp
or
or
sbb
int
bnd
jb
pop
iret
pop
push
and
cmp
push
fnstsw
add
sbb
lea
and
sub
mov
mov
enter
mov
dec
js
xchg
stos
pop
decb
pop
xlat
and
or
push
mov
add
pop
movsl
fcoml
pop
pop
push
fldenv
movsl
xor
fstpl
add
in
mov
pusha
addr16
mov
imul
scas
fs
aad
pop
and
aad
imul
or
lds
data16
in
push
mov
sub
or
push
xor
ss
mov
sub
jns
push
push
lods
out
add
xorb
aas
dec
lahf
jp
dec
jnp
push
lods
mov
mov
outsb
sub
ja
leave
adc
or
enter
jg
movsb
and
pop
mov
outsl
xor
sbb
push
jns
mov
sub
add
aas
adc
movsl
mov
daa
inc
adc
out
jns
cmc
mov
outsl
lods
cmp
pop
jo
jecxz
icebp
xor
jbe
ss
push
and
aam
mov
or
leave
sbb
loop
mov
data16
mov
xlat
pop
add
and
fnstsw
cmp
fisttps
aad
mov
sbb
lret
mov
in
adc
jbe
mov
call
std
jmp
xchg
mov
imul
rclb
fs
inc
gs
pushf
insl
mov
test
notl
cmp
xor
rorb
dec
pop
js
sbb
lret
push
lds
in
cmp
or
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
idiv
jo
jne
mov
pop
dec
jge
cld
push
xor
out
xor
xor
jns
pusha
jo
test
push
insb
mov
ss
insb
cmp
xor
sbb
out
push
outsb
inc
xchg
je
dec
or
pop
loope
pop
fildll
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
dec
dec
xor
lcall
repnz
mov
popl
pop
add
sbb
in
fsubrl
push
mov
pop
inc
adc
dec
push
pop
dec
out
adc
mov
mov
repnz
dec
pop
push
jg
int
lcall
ficompl
add
push
pop
jmp
outsb
sub
add
nop
pop
movsb
push
lds
dec
push
xchg
jl
pop
jns
inc
inc
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
cwtl
negl
mov
inc
stos
push
mov
les
cmp
imul
das
jecxz
xchg
dec
ja
das
les
cltd
adc
nop
add
pmaxub
mov
aam
cmp
or
adc
in
jl
push
mov
jle,pn
xor
pop
add
push
std
jecxz
arpl
popf
cs
cmp
lds
jmpw
insb
testl
cld
dec
insl
ljmp
mov
andb
arpl
push
mov
jmp
push
pop
aas
mov
les
dec
push
xor
xchg
xor
insb
popa
arpl
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
xchg
es
leave
xchg
cmp
pop
jns
or
je
fisttps
jg
xor
repz
aad
pop
repz
repnz
mov
mov
adc
loopne
cmpsl
popf
mov
mov
mov
push
loope
jno
ds
xchg
dec
adc
sbb
hlt
pop
repnz
cwtl
ds
jbe
enter
pushf
in
shl
fsubl
nop
mov
out
mov
jp
dec
fdivs
movsb
mov
push
roll
fisttpll
decl
adc
int3
aad
jp
and
daa
xor
sbb
movsb
mov
addr16
or
adc
xchg
dec
xor
push
dec
mov
aas
aad
je
adc
pushf
gs
jge
ficoms
rorl
ja
sub
sbb
xor
jmp
scas
sub
xchg
cmp
mov
lods
shll
test
aaa
push
fdivr
fdivrp
and
std
rcrb
and
sbb
xor
insl
cli
pushf
add
push
out
cmovo
adc
cmp
in
fucomp
adc
stos
pushf
and
int
xor
dec
sbb
sbb
lea
fimuls
xor
in
or
aaa
out
xor
xchg
mov
jb
or
out
es
fnstsw
inc
jbe
mov
inc
mov
mov
nop
or
imul
jno
in
sub
fdivl
add
sbb
rcrb
negl
gs
loopne
fs
cmp
jmp
test
dec
mov
mov
cmp
mov
js
fmull
or
adc
sub
rcrb
xchg
arpl
das
and
loop
inc
pop
in
iret
lock
js
pop
jb
out
fnstenv
pusha
fsubrp
divl
in
std
push
and
jecxz
add
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
sub
je
pusha
loope
jae
ds
pop
sbb
sbb
lcall
sbb
xchg
sub
aaa
jl
pop
cmpsl
aam
lds
fprem1
fisubs
rcrb
in
and
xor
jns
adc
mov
fstl
movsl
mov
stos
inc
fstl
add
loopne
mov
pop
mov
std
dec
loop
inc
out
nop
jmp
sbb
mov
lret
fmull
dec
mov
insb
mov
ficoms
jno
dec
sub
gs
mov
les
push
and
mov
cmp
int
jg
popa
adc
in
out
xor
jge
push
lds
and
sbb
jno
out
cmp
bound
sub
jns
inc
pusha
faddp
dec
add
dec
sub
cmc
and
dec
incl
clc
inc
push
insb
je
decl
adc
je
inc
sub
xchg
aas
ja
in
cli
cld
xor
push
xor
mov
pusha
insl
stc
fwait
outsb
aam
lods
popa
jb
mov
or
jle
cli
mov
mov
out
lret
mov
pop
push
enter
xchg
inc
and
push
pusha
cmp
push
or
addr16
inc
insl
aad
inc
ja
inc
test
mov
or
cmp
cmpsl
test
cld
cld
bound
stos
outsb
lock
in
mov
sbb
lock
outsl
adc
add
pop
sub
push
and
push
shl
jle
adc
mov
cld
lret
mov
in
adc
push
mov
dec
jae
hlt
mov
ret
mov
inc
mov
jmp
inc
movsb
push
mov
cmp
mov
imul
mov
std
lods
pop
pop
js
xchg
cmp
loopne
mov
bnd
jo
test
insb
xor
xchg
sub
aaa
sub
adc
cld
lcall
jns
cmc
mov
fs
jo
inc
hlt
punpcklwd
jns
mov
out
dec
cwtl
jb
pusha
jb
cmpsl
aas
sub
or
adc
pop
es
test
loope
pushl
mov
mov
loope
push
inc
inc
mov
pushf
testl
mov
loopne
sbb
pop
ret
bound
or
push
adc
cltd
fsubrl
dec
mov
push
push
mov
xor
ja
push
mov
pop
mov
xor
dec
cmp
pop
lock
inc
mov
in
jl
and
pop
sbbb
mov
lods
fsubrs
test
aaa
push
fdivr
fdivrp
and
std
rcrb
add
sbb
xor
insl
xlat
and
pushf
add
push
out
cmovo
adc
cmp
in
fucomp
adc
stos
cld
and
lret
push
xor
dec
sbb
sbb
lea
mov
test
sbb
lret
jns
cltd
xchg
jnp
or
je
loope
cmp
insl
pop
nop
test
jo
nop
icebp
mov
ja
adc
imul
jno
in
sub
fdivl
add
sbb
rcrb
negl
push
mov
icebp
loopne
fs
cmp
jmp
test
dec
xorb
test
mov
js
fmull
or
sub
sbb
ret
sub
movsl
dec
mov
sub
add
test
push
stc
loope
jecxz
arpl
jne
lahf
das
outsl
jge
icebp
cmp
push
xchg
es
xchg
add
popl
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
sub
mov
loop
jae
push
add
pop
sbb
sbb
lcall
sbb
xchg
insb
data16
jl
fisttps
cmpsl
aam
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
or
ds
jge
popf
cs
xor
push
mov
in
push
cmp
std
jne
pop
dec
aaa
add
mov
fidivrl
lahf
fs
xchg
repz
jnp
mov
insb
mov
ficoms
jno
dec
sub
gs
mov
and
inc
sbb
and
mov
cmp
int
jg
popa
adc
mov
pop
push
jge
movsl
lds
and
sbb
jno
out
cmp
fstps
in
xchg
movsb
mov
adc
out
out
sub
cmpsl
push
mul
orb
scas
xor
mov
pop
scas
inc
dec
jae
insl
mov
or
fwait
jo
jns
sbb
call
pop
je
jo
in
cmc
xor
icebp
pop
mov
pusha
push
xchg
jecxz
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
test
push
js
fcmovnb
pop
ss
jns
out
test
cld
and
stos
std
xor
fcoml
lcall
inc
jp
in
gs
sbb
call
lret
adc
jbe
mov
fistpll
stc
sub
push
ja
shl
jle
adc
mov
cld
lret
mov
in
adc
push
mov
enter
ret
jne
dec
mov
je
inc
mov
jmp
inc
movsl
push
mov
cmp
test
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
xor
jo
inc
jne
pop
xlat
insb
add
sbb
je
rclb
out
add
xor
sub
pusha
jo
push
add
shll
punpcklwd
jns
mov
out
dec
cwtl
jb
pusha
jb
cmpsl
aas
sub
or
adc
pop
es
add
mov
xor
repnz
xchg
push
inc
inc
mov
pushf
test
mov
loopne
sbb
pop
ret
mov
sbb
in
ret
insb
push
push
lahf
add
dec
sbb
sub
dec
inc
ja
mov
repnz
jg
mov
lcall
pop
pop
divb
pop
icebp
popf
insl
push
lea
mov
mov
cmp
mov
push
jno
aad
mov
xor
push
fiaddl
arpl
xor
test
xlat
add
sbb
add
or
mov
mov
xor
sub
adc
sti
loopne
mov
xor
dec
jno
leave
aam
outsb
lcall
mov
jo
loopne
jp
aaa
add
inc
sbb
out
mov
cmpsb
aam
lods
outsb
int3
jne
push
out
xchg
shl
mov
int
adc
xor
or
mov
jecxz
inc
mov
mov
push
adc
fld
popa
sbb
inc
call
or
push
pop
fs
out
in
addr16
xchg
pop
xchg
insb
push
mov
dec
pusha
gs
mov
cld
sub
jae
sbb
adc
es
addl
sub
sbb
lret
adc
pop
jnp
push
push
xor
pop
cmpsl
pop
insb
cmp
scas
aaa
outsb
int
daa
inc
bound
popf
mov
sub
push
jge
fstl
aam
pop
push
pop
add
cwtl
shlb
pop
sbb
mov
arpl
fisubs
sahf
sbb
inc
les
mov
cmpsb
jo
popf
bound
mov
push
jb
mov
add
es
jp
mov
out
out
mov
xchg
loop
mov
inc
ljmp
adc
mov
out
divb
inc
movsl
xchg
sub
mov
mov
xchg
vmulps
scas
push
dec
jns
arpl
xor
es
in
lret
js
xlat
das
xchg
stc
cli
out
mov
in
mov
test
sbb
jge
mov
mov
stos
xchg
and
into
dec
movsl
xchg
aaa
mov
push
imul
cmp
sub
hlt
test
mov
popa
je
addl
and
or
mov
xchg
rcr
xor
mov
adc
adc
cmpsb
pop
dec
movsl
das
ss
jne
mov
or
fnstcw
xor
std
movb
mov
push
cmp
mov
and
insb
add
mov
jo
xor
and
fiadds
aam
or
in
xchg
test
sub
xor
cmp
sub
lods
pop
cmpsb
mov
aaa
jg
mov
pop
imul
sub
cmp
pop
imul
movsl
lahf
and
cmp
pop
test
mov
movsb
ss
pop
jae
jl
gs
push
sub
or
into
xchg
add
xchg
rorl
mov
cmpsb
xor
xchg
fs
cli
aaa
cmp
sahf
cmp
ret
cmp
in
pop
movsl
scas
cmp
xchg
inc
mov
addb
ljmp
arpl
mov
mov
jmp
jecxz
xchg
pop
lods
out
jno
loope
jb
jg
sub
icebp
pop
jnp
aaa
add
jle
leave
loopne
sub
mov
lahf
add
xlat
xor
fldcw
mov
shlb
mov
adc
or
xor
push
fs
mov
push
adc
xor
imul
pop
or
daa
movsb
sbb
xchg
pop
incl
mov
pop
jae
lret
sbb
dec
fs
in
cmp
sbb
jge
and
repnz
xchg
xchg
int
test
lahf
aad
xchg
jns
pop
ljmp
push
fmull
sub
push
sbb
pop
pop
jo
ds
mov
out
je
cmc
xor
adc
imul
dec
mov
ror
mov
test
shll
out
fwait
lahf
adc
fildll
out
cli
je
jo
xchg
stos
mov
in
cmp
loope
movsl
xorl
loope
xchg
enter
mov
or
fisubrs
fsubrs
dec
mov
and
test
or
lahf
cmp
jae
subb
cmp
ljmp
aad
cld
dec
lret
mov
sbb
jmp
cmp
add
and
leave
outsl
mov
dec
ficomps
icebp
mov
dec
jmp
cmp
ljmp
jae
jp
xchg
cmp
xchg
stc
cli
cmp
push
mov
ljmp
cltd
push
das
test
mov
stos
xchg
fildl
push
loope
ss
shrb
arpl
sub
fistpll
adcl
mov
andl
arpl
loopne
adc
lds
mov
repnz
or
push
mov
jno
xchg
ss
or
pop
outsl
mov
push
int
lahf
cmpsl
test
jl
js
fstl
mov
mov
daa
xchg
enter
hlt
rorb
ret
stos
mov
push
cmc
adc
inc
xor
adc
aam
icebp
pop
sbbl
add
out
out
jnp
inc
fsubs
xchg
in
fcoms
push
adcl
mov
and
xchg
xor
leave
push
adc
dec
push
and
inc
mov
inc
and
movsb
mov
adc
xchg
aam
sbb
mov
fdivrs
cmp
push
inc
adc
push
mov
std
mov
dec
aad
jns
fimull
jbe
movsb
inc
sub
daa
test
scas
add
pop
jg
add
sub
cmpb
std
jl
arpl
add
in
mov
popa
mov
dec
mov
jno
popf
call
cli
test
jnp
subl
mov
mov
pop
jbe
int3
mov
mov
xchg
mov
subl
sub
mov
mov
mov
clc
mov
arpl
jne
cmpsl
mov
clc
inc
xor
cmp
in
ja
testl
xlat
pop
leave
mov
and
cwtl
mov
iret
aam
push
xchg
leave
cli
inc
xchg
dec
pusha
in
dec
mov
jnp
loope
mov
loop
in
bound
inc
inc
popa
mov
mov
jb
arpl
xor
mov
or
mov
ret
mov
ss
or
in
fidivrs
popf
mov
inc
leave
loop
in
in
mov
mov
adc
fimull
addr16
jb
movsb
scas
sbb
jle
sbb
ds
inc
and
call
fs
imul
add
std
inc
test
fnstsw
dec
push
sub
add
inc
lret
push
add
jmp
stc
lret
fwait
add
rolb
mov
inc
or
fwait
cmp
scas
sub
sti
mov
jecxz
scas
adc
sbb
in
ja
shrb
fs
loop
dec
movsl
mov
jns
lea
dec
notl
xor
fidivrl
in
dec
mov
jnp
and
mov
pop
call
stc
inc
inc
in
mov
addb
addb
rsm
mov
mov
mov
or
add
mov
stc
ret
popf
mov
adc
repnz
bound
xor
les
jbe
xor
inc
xchg
mov
sbb
gs
fmul
mov
xchg
mov
rcrl
inc
insl
loope
add
mov
inc
enter
ret
adc
mov
push
or
push
cmc
test
mov
out
or
sub
cmpsb
add
mov
xchg
test
cmp
fs
in
inc
ret
add
add
insb
mov
loopne
xor
and
mov
lock
outsb
aaa
mov
push
dec
mov
test
ret
push
pop
push
mov
loop
sub
negl
pop
iret
lods
fst
xchg
out
xchg
loop
and
lret
arpl
fists
shll
inc
sub
pop
es
dec
xchg
xchg
push
add
cmp
push
push
xor
mov
mov
push
cmp
lret
fabs
inc
dec
mov
xchg
shlb
std
fnstenv
cmp
mov
fwait
push
mov
rorl
test
call
push
icebp
pop
mov
and
mov
test
rorb
inc
stos
sub
dec
jmp
jb
mov
inc
sbbb
mov
enter
jbe
jl
rol
xchg
adc
mov
gs
xorl
mov
mov
imul
loope
sti
mov
jecxz
movsl
cmpsb
roll
add
xlat
je
jns
or
sbbb
jno
push
cld
jl
jo
pop
sbb
xlat
xor
sub
mov
dec
daa
mov
sar
inc
jge
movl
stos
jp
pop
sbb
sbb
sbbb
jne
and
dec
xor
jg
xchg
adc
push
loopne
sbb
cld
push
stos
call
scas
and
mov
sub
leave
loop
test
mov
mov
adc
xchg
jge
sbbb
inc
inc
inc
cwtl
pop
mov
test
lods
clc
push
mov
ret
pusha
jle
mov
hlt
std
mov
sti
mov
mov
je
mov
int3
xchg
jecxz
inc
mov
jne
gs
mov
hlt
sti
sti
mov
clc
leave
cli
int
aas
xchg
mov
sbb
adc
jae
mov
jl
shrl
add
test
daa
push
sbb
or
inc
in
or
insl
icebp
fiaddl
std
mov
imul
mov
stos
sbb
jle
sbb
pop
mov
subb
xlat
mov
inc
sbb
add
cmp
adc
test
add
stos
pop
fcmovnb
adc
mov
nop
frstor
pop
push
adc
jge
xchg
xchg
je
cmpsl
jo
fs
andl
add
mov
adc
and
add
pop
add
xchg
mov
scas
add
enter
test
pop
shlb
sbb
jb
or
mov
jmp
mov
or
mov
or
stos
push
rol
sbb
mov
jb
bound
mov
mov
js
ljmp
xchg
or
enter
idivl
stos
xor
sbb
add
lahf
test
aad
sbb
pop
ret
lods
cld
fs
cwtl
push
pop
rorl
mov
ja
push
vminss
lret
roll
inc
pop
mov
dec
inc
test
mov
outsb
push
lret
addb
push
cmp
push
pop
cli
ljmp
cmp
push
cmp
lret
or
fsubr
lock
leave
loop
movsb
adc
andl
push
cmp
mov
xchg
or
pop
mov
sub
test
mov
rcrb
test
bound
cltd
fdivp
inc
pop
mov
adc
sub
sub
add
pushf
stos
mov
enter
into
gs
lock
mov
adc
in
pop
or
test
mov
xchg
mov
xor
mov
inc
cmpsb
add
mov
add
dec
xlat
test
cli
mov
mov
cwtl
or
pop
xlat
stos
mov
aaa
mov
sarl
mov
jae
or
rorb
mov
pop
sbb
or
pop
push
orb
cmp
jns
xor
ljmp
inc
cld
lds
enter
out
inc
movl
leave
jecxz
xchg
cltd
mov
pushf
sub
fsts
adc
scas
xchg
dec
sarl
mov
shll
or
sub
pop
lcall
std
lahf
dec
das
cmp
cmp
push
lret
mov
fwait
jbe
and
or
sbb
out
mov
fcomps
adc
fistpl
into
pop
stos
shll
decb
mov
mov
lods
int
call
push
cmp
dec
sbb
out
mov
xchg
inc
fwait
push
cwtl
dec
rorb
xor
test
and
sbb
int3
pop
ret
pop
sub
js
aaa
mov
sahf
dec
pop
insb
pop
lea
xchg
pop
xchg
xchg
fsts
push
arpl
bts
sbb
mov
push
pusha
xor
jno
lahf
xor
mov
js
lods
add
or
adc
loopne
push
and
sbb
int3
les
dec
ret
cmc
js
int3
cmp
push
out
outsl
js
jp
jno
fwait
lods
cmpsb
inc
vpand
add
lret
adc
dec
scas
push
arpl
cmp
out
mov
sbb
xchg
adc
xor
xor
mov
xor
imul
cmp
xor
pop
dec
pop
sbb
or
pop
mov
dec
ss
leave
sbb
jmp
add
mov
lret
dec
mov
out
mov
lret
ror
loopne
xchg
xchg
mov
fsts
les
push
and
push
popf
add
xchg
mov
sahf
push
cmp
push
shll
mov
addr16
movsl
cmpsl
mov
out
scas
inc
mov
inc
push
adc
xchg
xchg
mov
or
add
pop
iret
out
aam
jns
lret
and
lahf
mov
ror
pop
mov
jmp
into
call
inc
sub
bound
inc
enter
sbb
loopne
je
mov
lds
xchg
dec
xor
lret
inc
mov
pop
pop
or
jne
add
push
mov
inc
push
adc
pop
andb
adc
pop
sti
mov
jecxz
es
int
pop
sub
sahf
mov
stos
bound
je
xor
insl
cmpsl
aam
inc
jne
mov
lret
jne
xchg
jno
xlat
inc
pop
pop
jge
les
lret
jecxz
imul
xchg
int
inc
pop
test
jnp
jmp
inc
sbb
pushf
out
or
arpl
lret
push
les
lods
sub
jb
mov
adc
jb
icebp
add
call
mov
sbbl
inc
shrb
clc
cld
jo
mov
sbb
out
pop
fucomi
push
test
sub
cmp
out
pusha
fbld
jno
fs
addl
push
int3
sub
nop
jecxz
sbb
push
orl
inc
lcall
mov
jg
inc
inc
pop
jae
int
lret
mov
sahf
jecxz
sbb
das
lret
or
sti
mov
imul
add
or
rcrl
inc
push
push
sbb
mov
pushf
jp
nop
xlat
dec
int
sahf
cli
push
test
cld
lds
jp
lahf
cmp
sbb
sahf
dec
pop
jno
cld
jl
cltd
mov
xlat
cld
mov
mov
dec
imul
push
jae
data16
aam
stos
xchg
ret
pop
scas
movl
dec
inc
sub
cmp
inc
mov
sti
add
adcb
insb
mov
pop
lods
ret
loopne
xor
xchg
sub
jnp
dec
add
ret
loopne
xor
jle
int3
pop
dec
adc
mov
pop
cmp
xor
adc
and
imul
push
dec
mov
dec
pop
not
mov
pop
lods
iret
mov
in
ds
cmp
mov
mov
add
pop
or
lods
subb
dec
rolb
hlt
test
pop
jmp
push
jecxz
bound
dec
xor
or
out
scas
push
loop
or
popa
test
dec
insl
cmp
lds
jnp
addr16
stos
outsl
lret
pop
sbb
aam
ljmp
push
push
sbb
jb
test
push
sar
dec
das
xchg
jnp
int3
ljmp
xor
pop
pop
pop
std
pushl
sub
mov
mov
fwait
hlt
sbb
sbbb
sub
cmpsl
shlb
lahf
cmpsb
test
mov
sub
pop
jb
fnsave
inc
mov
insb
aaa
dec
push
pusha
test
inc
loop
mov
mov
xchg
scas
dec
mov
dec
pop
test
popa
leave
mov
sar
ret
loopne
sbb
jp
mov
mov
add
lock
div
call
or
push
ficompl
nop
lret
movsl
aad
pop
inc
xor
push
sbb
cmpsb
into
ljmp
jmp
lahf
pushf
pop
jbe
push
insb
xchg
mov
ret
sub
add
hlt
sub
popf
sbb
int3
or
mov
dec
xor
pop
fdivrl
cmp
adc
mov
es
push
mov
and
test
and
sbb
ror
push
add
or
fistpl
scas
ret
divb
aam
in
jmp
cmpsl
lock
mov
test
mov
inc
xor
insb
aaa
and
daa
dec
loope
xchg
sub
or
dec
cmp
in
mov
jae
mov
add
sub
xor
adc
inc
inc
mov
test
xor
or
lret
jmp
and
faddl
push
call
int
loop
test
xor
lock
sub
push
idivl
std
movsl
adc
bound
mov
xchg
fcoms
mov
stos
xlat
dec
scas
xchg
cmp
inc
push
scas
jne
dec
loop
popf
push
mov
jle
ljmp
lods
insl
test
lahf
mov
nop
outsl
pop
scas
inc
enter
addb
or
pop
mov
mov
mov
insl
mov
push
mov
inc
mov
stos
out
dec
or
mov
in
pusha
jo
scas
adc
jo
aad
mull
inc
ret
in
insb
std
mov
mov
loope
xchg
xor
jg
cwtl
mov
lea
test
mov
sarl
outsb
fnstsw
fnstsw
clc
aas
mov
imull
imulb
mov
jno
sbb
add
pop
mov
push
sahf
ret
fs
dec
xchg
push
pop
scas
ljmp
or
jge
lahf
mov
cld
sub
mov
cli
xchg
or
sbb
mov
push
jae
and
daa
pop
mov
fmull
inc
sbb
loope
cmpsb
fstl
pop
in
mov
mov
leave
loop
iret
sbb
pusha
mov
ja
test
adc
dec
ret
int3
pop
stos
sbb
mov
or
pop
sub
movsb
and
pop
push
data16
sbb
or
outsl
cmp
mov
cltd
push
adc
sti
sahf
jnp
je
aaa
in
jp
or
jne
movsb
xchg
jecxz
xorb
mov
lea
mov
pop
inc
mov
loopne
les
pop
pop
dec
cmpl
jg
mov
sti
pop
add
jo
bnd
and
mov
sub
xor
jne
adc
aam
sarb
pusha
add
lds
popf
xchg
mov
dec
popl
push
movb
in
mov
jne
adc
rcrl
push
push
mov
add
movsl
rclb
cli
movsl
mov
pop
jl
jecxz
lcall
pop
in
jns
ffreep
js
popf
scas
and
je
push
add
shrl
pop
xchg
sbb
ljmp
xor
push
adc
pop
dec
inc
stos
je
dec
adc
test
scas
and
xor
dec
and
jno
inc
sub
ret
insb
push
lret
insl
mov
shrb
push
or
int
dec
pop
jnp
call
mov
pop
dec
pop
jbe
movsl
or
aaa
out
mov
sarb
and
jae
pop
push
iret
push
loopne
cmp
fistl
or
out
loope
addr16
imul
or
and
sti
icebp
aaa
or
push
rcrl
aaa
or
push
scas
jecxz
dec
push
dec
xor
stc
imul
scas
lahf
fcmovu
lock
add
push
jl
dec
dec
pop
xchg
fdivl
loope
adc
pop
mov
lret
lock
roll
sub
adc
jge
pop
xchg
repz
cld
bnd
mov
mov
repnz
sub
daa
xchg
xor
rol
xor
inc
add
stc
cltd
bound
test
xor
cmp
xor
jne
popf
push
add
and
mov
adc
push
mov
fldl
daa
sub
dec
pop
lea
idivb
mov
cwtl
aaa
inc
clc
enter
es
jecxz
and
filds
mov
sbb
sbb
out
pop
imul
pop
loop
sti
stos
les
ljmp
repnz
repz
push
lahf
popf
fs
adc
shrb
dec
and
and
sbb
outsb
xchg
sub
push
test
pop
xor
scas
leave
mov
jp
pop
js
cld
xor
gs
rolb
push
sbbl
into
and
add
and
mov
mov
fldl
inc
pop
bound
mov
and
push
push
cmpsl
ret
adc
cmp
mov
int3
xor
dec
sbb
push
jbe
add
in
adcb
cltd
cmp
add
xlat
adc
sarb
pop
cmp
pop
sub
pop
es
sub
mov
inc
sbb
jae
mov
inc
lods
das
pop
testb
mov
clc
imul
mov
jl
shll
mov
push
pop
mov
fwait
arpl
sbb
cmp
push
ret
mov
int
pop
dec
rcrl
jno
xchg
push
test
jae
jae
sbb
jae
xchg
push
mov
bts
mov
mov
mov
andl
cmp
movl
ss
inc
stc
xor
or
push
add
jnp
and
jecxz
sub
fsubs
xor
sbb
fs
or
insb
jbe
jle
ja
or
pop
cmpsl
jnp
pop
icebp
outsl
fwait
jb
sbb
add
int3
inc
enter
movsl
inc
pop
jg
sub
shl
pop
shrb
xchg
and
test
cmpl
insb
mov
xchg
outsb
test
and
adc
cmp
cmp
cmpsb
cmp
aas
out
sbb
and
cmp
mov
dec
cmpb
in
dec
sbb
dec
lea
mov
test
in
mov
jbe
mov
fisubl
dec
pop
call
inc
test
mov
add
scas
jne
and
out
loop
add
mov
dec
mov
cltd
test
push
shl
lret
stos
sub
and
stos
cmpsb
adc
and
mov
add
out
sub
popl
jo
mov
repnz
outsl
pop
movsl
cmp
xchg
jmp
or
pop
push
out
cwtl
mov
arpl
adc
cmp
imul
xchg
mov
xor
stos
ds
or
push
sbb
add
push
xchg
dec
mov
into
mov
fldt
mov
imul
jmp
clc
pop
or
sti
xchg
lret
jecxz
fwait
scas
in
mov
jmp
adc
leave
popf
fs
jns
mov
mov
xor
loope
lods
popf
sbb
test
scas
int3
stos
cmp
fisttpll
dec
mov
imul
or
xchg
mov
or
cmp
xor
stos
push
insb
adc
fcmovne
mov
sub
sub
lahf
scas
popa
rorl
push
mov
adc
mov
mov
psrlw
call
adc
mov
call
push
js
repz
movsb
jp
cwtl
mov
cmpsb
sahf
push
cltd
fs
sub
aaa
dec
mov
mov
xor
or
mov
mov
hlt
xchg
xor
sub
sahf
dec
inc
fadd
push
pop
adc
mov
roll
inc
sti
mov
test
fucomip
repz
mov
inc
cmp
inc
sbb
fimuls
xchg
add
movsb
add
scas
jne
pop
cwtl
jno
mov
mov
outsl
jnp
jge
jno
mov
adc
cld
mov
rcll
rorb
push
in
clc
mov
scas
mov
sub
loopne
inc
stos
and
arpl
push
ror
jge
and
cmp
push
in
divb
inc
fisubrl
mov
sbb
jo
inc
dec
dec
pop
sti
in
imull
jo
out
idiv
sti
push
mov
lock
les
in
pop
mov
lods
insb
xchg
shlb
sub
and
dec
fdivrl
mov
push
int3
xor
mov
aas
pop
popf
lahf
xchg
adc
dec
push
outsb
or
xchg
or
enter
mov
ret
ficompl
ljmp
pop
adc
dec
mov
mov
lock
mov
jecxz
es
shll
ja
mov
cmp
xor
xchg
inc
xor
xchg
pop
jne
fs
in
jle
dec
mov
test
push
outsb
int3
pop
xchg
repz
pop
ljmp
popf
xchg
and
cmp
cmp
xchg
inc
jle
in
xor
and
push
mov
ja
or
cmpsb
xabort
aad
lret
xlat
cmpsl
inc
sbb
jecxz
mov
sbb
add
xchg
push
lcall
cmp
mov
dec
xchg
fmuls
in
pop
xchg
mov
adc
mov
shrb
scas
mov
cmpsl
ret
es
add
fsubp
aas
movsl
pop
mov
and
inc
pop
jns
xor
fwait
scas
les
and
ja
scas
adc
subl
sbb
scas
mov
loopne
scas
shlb
adc
add
mov
lock
into
aaa
mov
lahf
xchg
int
test
add
jg
jecxz
outsl
lock
xor
xchg
gs
push
loope
mov
sub
neg
mov
dec
jge
jae
out
in
stos
aas
fmul
arpl
fcomip
ja
nop
clc
cli
push
pop
fsubrl
jne
fldenv
cmpsl
push
ret
push
dec
mov
dec
dec
sbbb
xchg
pop
iret
push
pop
jle
insb
pusha
jle
das
cmp
addr16
leave
xor
mov
xor
lods
mov
and
jo
and
pop
adc
addr16
loope
je
xor
push
sub
mov
and
aam
or
lea
jb
mov
rclb
cmp
setge
mov
fsubr
mov
add
ret
mov
dec
pop
inc
sti
jmp
mov
jae
push
test
lods
fucomip
hlt
cmp
fsubl
cmpsb
in
lods
dec
inc
sub
or
or
ds
sub
pop
dec
loop
int3
pushf
dec
faddl
jno
mov
iret
sbb
scas
jge
nop
jb
mov
fwait
sbb
movl
test
cmp
cs
out
push
cmp
addr16
fs
or
scas
dec
jnp
jne
mov
imul
ret
sbb
fisubrl
lahf
lret
test
ljmp
jmp
scas
ljmp
pusha
sbb
add
repnz
leave
and
fbld
cmp
and
stos
sub
and
pop
sbb
cmpl
mov
mov
hlt
js
cwtl
or
bnd
lods
push
das
sub
mov
mov
mov
mov
inc
scas
stos
shrl
mov
cmp
mov
push
iret
orl
shl
nop
pusha
sbb
mov
imul
cmp
cmc
outsl
push
push
sub
scas
popa
pop
adc
xchg
pop
and
js
ficomps
add
cltd
stc
mov
add
stc
in
cli
sti
lcall
fidivs
mov
lea
cld
mov
inc
pop
fnstcw
push
lea
imul
push
inc
push
pop
cs
inc
mov
shr
lods
in
stos
mov
cld
das
cwtl
pushf
xchg
pop
js
xchg
mov
lahf
arpl
pop
sbb
or
fstps
inc
dec
cmp
push
dec
movsb
mov
and
fidivrl
lahf
repz
cmp
movsl
icebp
pop
pop
mov
push
into
mov
mov
cmp
arpl
push
mov
push
pusha
inc
popa
inc
icebp
in
scas
cmp
enter
test
jmp
fs
fnstenv
mov
test
cmpsl
mov
hlt
fisubl
in
jae
fmull
les
sti
fbld
fdivs
aad
xor
mov
scas
ffreep
pop
adc
adc
cmp
sbbl
xchg
xlat
adc
sub
orl
repz
movsb
pop
and
sub
mov
dec
popf
lret
push
insb
push
push
nop
pop
js
gs
push
lret
cmpb
sub
outsb
xor
dec
adc
lret
push
rclb
mov
push
inc
jnp
ret
scas
rcl
mov
and
mov
mov
and
pop
adc
or
mov
mov
dec
mov
mov
lret
scas
divl
iret
into
dec
and
je
and
pop
test
jne
jae
daa
dec
ja
arpl
es
std
jge
xor
imul
mov
cwtl
jns
ds
jecxz
shr
test
aas
adc
icebp
je
push
dec
mov
xchg
aas
pop
jb
pop
mov
cmc
mov
loopne
inc
mov
cwtl
sbb
inc
sub
lahf
mov
sbb
rorl
fimuls
test
or
sbb
int3
inc
dec
jl
rcll
shrl
inc
mov
fucomp
jae
adc
fxch
arpl
cmpsb
pop
mov
pop
les
test
sbb
stos
vcvtps2dq
sub
jnp
cmp
f2xm1
mov
lods
mov
pusha
mov
jmp
scas
inc
fwait
push
rclb
or
mov
mov
cwtl
mov
dec
fucomp
push
fidivl
insl
ljmp
andb
inc
sub
jb
popa
jge
jb
int
xchg
bound
push
cmpsl
xor
mov
adc
hlt
test
xchg
fdivrs
mov
jmp
mov
shrl
or
mov
pop
jne
xchg
cli
mov
xor
jb
pop
mov
ror
sbb
sti
sub
addr16
stos
fdivrl
inc
cltd
outsl
cmpsl
xor
inc
and
test
decb
sub
cmpsb
aaa
clc
xchg
push
jnp
fists
loope
pop
fsub
or
pop
aad
test
xor
fnsave
fwait
sub
or
test
aad
mov
mov
movsb
jbe
in
ret
pop
outsb
pop
js
jge
movl
xor
jae
mov
ret
movsb
mov
and
jmp
out
push
or
xlat
insb
jbe
inc
jmp
out
ja
lods
inc
inc
fsts
arpl
mov
sarl
or
std
and
add
jmp
inc
jno
sbb
lea
pop
dec
aad
xor
fsubrs
leave
cmp
add
cmpl
bound
xor
dec
dec
lock
lods
sub
aad
or
mov
adc
ret
push
lods
xchg
sub
icebp
mov
leave
bnd
movsb
rcrl
jae
popa
xchg
rcl
scas
int3
xchg
test
rorl
push
pop
adc
jl
sbb
lea
mov
sub
addb
mov
jmp
jb
in
fwait
scas
and
cmpsl
cmp
cmpsb
pop
add
push
jno
mov
add
sub
call
jne
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
sub
xchg
xchg
mov
mov
mov
pop
out
xor
sbb
mov
cmpsb
pushl
mov
push
or
cltd
cmp
fsubr
scas
mov
in
or
jns
fsubrs
leave
in
int
pop
aas
ret
loopne
mov
jae
pusha
lds
add
sub
mov
dec
inc
add
insb
and
sbbl
jl
jg
cmp
sub
pop
movsb
inc
xchg
mov
pop
lret
fucomp
insl
sub
dec
out
ja
pop
mov
add
hlt
mov
mov
push
cmp
xorb
add
mov
sahf
test
or
pop
test
scas
fidivrs
loop
mov
pop
das
imul
mov
repnz
pop
jae
in
jge
arpl
es
pop
pop
repnz
pop
repz
inc
cwtl
dec
and
push
fdivrs
sub
icebp
hlt
stos
insl
fmuls
orb
cmpsb
int
aaa
popf
iret
xchg
jae
xor
xorl
rclb
mov
cs
cmpsl
xor
mov
add
sub
mov
mov
or
sub
movsl
add
popf
jge
pop
roll
sbb
leave
xorb
cmp
sbb
fstps
xchg
jnp
and
lea
mov
into
in
stos
inc
repnz
sbb
adc
add
mov
xchg
lds
add
jno
aam
pop
imul
or
test
icebp
inc
sbb
aas
sub
jmp
lahf
xchg
pop
out
jl
adc
icebp
xchg
lret
sbb
add
fadds
add
push
mov
sub
je
cwtl
inc
push
mov
mov
xchg
aaa
dec
ret
test
jae
loope
jp
ss
pop
push
jecxz
imul
lcall
mov
test
or
mov
cmp
call
test
loopne
loop
mov
jp
clc
sti
mov
jecxz
cmpsl
nop
mov
mov
int
cmc
cmp
subb
ss
lret
movsl
iret
test
je
nop
mov
xchg
mov
cmp
shrl
inc
mov
out
jnp
mov
mov
lds
lret
xchg
xchg
test
in
xchg
add
fldenv
cmpsl
push
inc
popa
flds
mov
sbb
lods
jl
jno
pusha
outsb
subb
out
cmp
pushf
fists
lods
int
cmp
add
jo
cwtl
adc
dec
in
lea
add
xor
lret
jns
push
sbb
jns
adc
jo
and
jb
cmp
cmc
push
mov
mov
sbb
mov
out
mov
cmp
xor
ljmp
adc
mov
test
dec
test
push
sbb
inc
repz
in
cmp
jecxz
cwtl
mov
repz
mov
mov
and
mov
lods
in
sbb
dec
test
pop
push
inc
shlb
xchg
and
mov
mov
mov
pop
mov
loopne
and
cmp
cmp
jmp
and
sbb
sub
subl
inc
sbb
stos
enter
push
cmpsl
inc
and
lahf
scas
ret
adc
push
add
xorl
or
dec
mov
add
aaa
mov
cld
mov
test
cmp
mov
rcll
movsb
stos
and
add
in
pop
pop
fidivrs
mov
out
mov
and
addb
or
lcall
mov
add
add
jecxz
pop
mov
jp
jae
push
add
or
jmp
mov
pop
lret
jmp
dec
sbb
icebp
cld
jg
popf
adc
fsubrl
arpl
clc
push
mov
fildl
je
test
mov
negb
inc
aam
xor
mov
pop
fdivl
xchg
daa
fs
movb
dec
xchg
add
movb
dec
push
push
xlat
mov
push
jecxz
nop
sub
aas
jno
pusha
pop
jge
test
roll
popf
mov
or
rolb
sub
jle
mov
push
add
out
xchg
sti
inc
fadd
sbb
int
inc
fbld
pop
pop
mov
lods
sbb
pop
addr16
fbld
int3
add
cwtl
imul
inc
fidivs
fidivs
dec
fs
ret
jl
xchg
cmc
xor
scas
and
dec
pop
push
into
xchg
lret
pop
lret
lds
test
inc
cld
imul
mov
dec
aaa
mov
mov
shl
stc
cld
cmc
leave
pop
sbb
fnstsw
stc
xor
adc
rclb
fadd
sub
pop
popf
lcall
inc
ss
loopne
xchg
sub
std
bnd
push
jne
lret
popf
je
cmpsl
push
gs
std
or
fisttpl
movsb
shrb
enter
mov
dec
dec
dec
or
inc
fwait
leave
in
orl
mov
mov
js
mov
mov
je
daa
jae
lods
push
mov
adc
call
fisubrs
pop
mov
pop
test
sbb
jnp
ja
clc
out
mov
or
cmp
hlt
clc
imul
fisubs
clc
jbe
xor
shl
pop
movsl
lret
cmp
or
cmp
loopne
xchg
cwtl
out
and
lods
adc
cld
ret
jecxz
cmp
adc
inc
repnz
dec
lds
scas
or
outsl
imul
out
pop
fisttps
cmp
test
leave
pop
sub
movl
lahf
dec
cmc
push
in
mov
andb
mov
adc
pop
push
mov
aam
mov
push
pop
dec
jne
jmp
nop
mov
jb
insb
mov
les
fwait
test
sti
fstps
test
movsb
xor
jecxz
dec
pop
xor
mov
cmpsl
js
add
cmp
sub
or
pop
cld
pop
cmpsb
enter
cmpsl
ret
fsts
js
stc
leave
mov
es
mov
and
sub
roll
mov
dec
mov
das
pop
in
int
mov
dec
inc
cs
aam
aam
mov
call
cmc
sti
xor
pop
dec
lock
aad
mov
xor
xchg
mov
or
daa
lahf
adc
inc
fstpl
jg
dec
test
add
dec
dec
inc
leave
adc
jno
xchg
cld
fwait
cmpl
pop
lods
jge
push
ja
xchg
inc
rclb
idiv
ljmp
dec
push
mov
xor
fucomi
in
mov
out
je
andl
pop
and
sbb
imul
mov
and
out
or
popf
dec
cltd
sub
mov
fidivl
mov
ds
add
rolb
int
adc
test
jecxz
jb
sarb
xchg
lds
push
adc
or
sub
and
cmpsb
and
xchg
mov
jo
mov
push
test
pop
pop
lds
ret
xchg
mov
inc
scas
cmpsl
fistl
jne
scas
pmaxub
addr16
mov
mov
dec
adc
sbb
shrl
inc
mov
mov
push
jns
fcmovnbe
pop
dec
sub
sub
and
pop
cmp
stos
push
inc
sbb
test
and
test
or
or
sub
mov
gs
pop
iret
push
mov
nop
cmp
fcompl
out
shll
shlb
scas
mov
out
dec
jns
mov
sub
icebp
pop
mov
xchg
adc
fcmovnu
pop
xor
push
jl
fwait
pop
xchg
dec
jno
mov
sub
mov
cmpsb
fcmove
test
mov
outsb
push
fcmovnb
daa
push
fisubrl
mov
mov
dec
xchg
inc
sbb
jmp
ljmp
xor
jne
jnp
enter
ja
cld
mov
cmc
scas
lds
adc
int3
movsb
dec
and
pop
jnp
sub
sub
push
mov
mov
cmp
xchg
xchg
bound
xchg
lret
add
adc
mov
xchg
adc
sahf
dec
mov
pop
cmpsl
dec
xorb
ret
lcall
loope
sarl
mov
icebp
or
push
mov
shl
mov
in
mov
in
hlt
pop
xor
push
fidivrl
sub
mov
and
xor
xchg
xor
std
cmp
sarb
bound
adc
and
movsl
cmp
xchg
lahf
enter
inc
loope
enter
lret
xor
insb
sbb
xchg
mov
addl
mov
xor
sbb
xchg
jecxz
loopne
jl
repnz
push
enter
jno
cltd
mov
pop
sub
in
mov
jmp
inc
fsubrl
xor
es
and
adc
sbb
cmpsb
fildll
cltd
scas
fwait
jae
or
mov
repz
xchg
rorl
cmpb
int
insl
sub
mov
pop
das
dec
fs
adc
cltd
sub
arpl
sub
sti
or
popf
sub
xchg
leave
or
pusha
sbb
add
mov
test
mov
mov
inc
sbb
dec
loopne
ficomps
jp
gs
out
or
sbb
fprem
jp
adcb
or
lcall
xchg
mov
mov
inc
jl
int3
lcall
shl
pop
mov
clc
sti
mov
popa
test
mov
pop
or
mov
iret
xchg
lret
loop
and
ss
frstor
pushf
jmp
dec
sbb
movsb
cmp
pop
push
inc
lods
lret
push
shr
les
jge
xlat
popf
test
test
xchg
stos
lds
scas
lods
lds
push
mov
pop
xchg
jb
push
adc
outsl
cmp
mov
iret
cltd
scas
fbstp
cmc
psubw
push
or
addl
sub
push
mov
pop
in
or
arpl
vmulss
andl
shrb
fadd
fbld
jb
loope
pop
xor
mov
mov
mov
lea
pop
imul
pop
push
add
mov
sbb
or
sub
xchg
mov
dec
movsl
cmpsl
mov
jb
subb
inc
mov
lret
xchg
lea
or
or
mov
mov
push
pop
in
bound
ja
push
mov
ja
stos
mov
gs
sbb
stc
add
lods
mov
shlb
pop
unpckhps
dec
mov
or
inc
inc
xchg
dec
add
ljmp
js
pop
test
lods
inc
pop
push
outsl
stc
and
add
cmp
mov
mov
sahf
mov
lahf
xchg
cli
pop
inc
mov
push
add
ja
rorb
and
mov
ret
shlb
push
jge
enter
ret
cmc
jmp
mov
fnsave
je
sbb
loopne
sbb
xor
nop
or
lods
fstp
imul
cmpb
adc
cmpsb
outsb
pop
stos
shll
xorl
mov
mov
out
pop
cld
cmp
iret
jecxz
jge
mov
dec
popa
cltd
nop
dec
sbb
aam
push
imulb
js
cli
scas
jae
dec
and
inc
dec
sbb
push
mov
test
lods
fiaddl
sbb
pusha
std
lea
jo
jmp
mov
bound
sbb
adc
inc
outsb
data16
pop
lock
negb
dec
mov
sbb
cltd
jbe
clc
jns
mov
call
cli
push
sbb
js
mov
dec
sbb
add
or
pop
lds
loope
xchg
mov
mov
sti
fisttps
push
adc
xchg
jno
clc
movsb
mov
pop
adc
int3
xor
dec
insb
sbb
test
ja
xchg
inc
dec
lea
push
inc
adc
or
ljmp
push
xchg
rcrl
out
mov
lret
mov
lds
repz
ret
pop
sub
sbb
mov
push
sbb
xor
arpl
lahf
cmpsb
ja
xor
jno
dec
push
cmp
andl
lods
mov
mov
sahf
dec
pop
jae
test
sarb
sub
inc
push
cld
sub
push
pop
mov
mov
fadd
or
xchg
jns
or
movsl
loope
mov
neg
lock
mov
insl
adc
add
push
jbe
jmp
push
repz
sbbl
sbb
mov
add
gs
jns
mov
or
xlat
xor
test
cmp
mov
and
in
jge
outsl
pop
xrelease
or
es
mov
mov
mov
fs
cld
cs
aam
or
into
pop
movsl
push
fdivs
fwait
cmc
jmp
jo
ficomps
xor
xor
mov
cld
int
mov
adc
mov
mov
xchg
dec
aas
dec
mov
scas
xor
es
stos
cmpsb
mov
and
cmc
gs
lds
sub
mov
adc
mov
and
sub
pop
adc
or
shrb
jnp
enter
inc
mov
scas
xlat
js
jg
shll
int
jbe
sarb
or
mov
rcr
mov
push
sarb
push
jecxz
or
cmpsb
jge
movsl
xor
xor
pusha
jo
mov
sarb
orl
lea
rorb
sub
ljmp
dec
xchg
push
xchg
mov
les
sbb
imul
fwait
sbb
pushf
incb
lods
dec
int3
sar
jne
jecxz
enter
sbb
mov
mov
add
fidivrl
cmp
arpl
add
cmp
push
loop
mov
xlat
andb
fwait
sar
loopne
ret
adc
insl
mov
jno
mov
clc
test
or
xor
xor
jnp
scas
dec
jnp
push
inc
pop
mov
ficoml
jle
das
mov
mov
mov
ja
lret
je
and
jne
and
sti
repnz
ds
ja
push
mov
addb
cwtl
and
lods
test
mov
enter
test
mov
mov
inc
cltd
mov
add
movsb
push
repz
dec
add
add
inc
loop
xchg
add
mov
inc
loopne
mov
fldz
mov
inc
fucomp
mov
mov
push
mov
stos
in
jmp
stos
dec
mov
pop
mov
push
dec
sbb
add
xlat
rcrb
inc
jns
cmpsl
shll
dec
cmp
mov
test
push
rcr
dec
push
in
leave
mov
imul
lock
xchg
fxtract
push
sub
xchg
mov
xchg
ljmp
pop
test
mov
lret
mov
xchg
fucomi
bnd
lods
lods
mov
movsb
gs
mov
cmp
or
or
je
sub
adc
fldl
xchg
cmpsb
cmp
fwait
jbe
add
mov
add
cli
sbb
outsl
sub
sbb
data16
mov
test
mov
fsubp
into
mov
ficompl
dec
lret
ds
out
ja
lds
jge
inc
roll
inc
test
xchg
dec
cmp
pop
iret
push
ret
int3
aaa
icebp
mov
xchg
enter
mov
mov
cld
jg
bnd
xor
iret
mov
xchg
inc
scas
pop
stos
in
idivb
int3
pop
inc
cmp
test
sti
dec
mov
mov
dec
jae
cli
fnstenv
xchg
add
dec
pop
mov
pop
aas
sbb
inc
cmp
enter
movsl
sub
jne
jl
or
push
mov
adc
scas
cmpsb
fucomi
repnz
jl
push
mov
cmp
cwtl
cld
inc
cltd
scas
lahf
orl
mov
adc
fisubl
popa
jnp
and
incb
push
xchg
xchg
mov
xor
fld1
jo
adc
push
lea
hlt
psllq
mov
inc
rolb
xchg
enter
je
cmp
shll
outsb
or
or
xor
xlat
pop
add
cltd
ret
pushf
mov
les
fildl
cmp
fmulp
jne
pusha
and
adc
mov
push
add
mov
les
mov
std
adcb
push
xor
and
mov
stc
lods
fildll
in
cmc
lods
xchg
test
lret
fists
loop
test
dec
push
sbb
sub
into
xor
lods
pop
cmpsl
inc
xchg
sub
scas
stos
cmp
and
or
pop
jns
xchg
fwait
mov
pop
faddl
cli
cmp
jae
ficoms
or
sbb
sub
mov
data16
dec
cmc
fwait
repnz
or
cmpsb
inc
nop
mov
and
dec
push
add
xor
push
ret
jb
notl
int
cli
xchg
inc
pop
mov
sbb
or
loopne
cmp
pop
xlat
adc
mov
cmp
xchg
dec
jg
pop
mov
les
mov
repz
sti
popf
push
fbstp
cs
gs
bound
outsb
sbb
push
mov
jg
xor
mov
iret
dec
enter
push
scas
jnp
jne
stos
mov
sbb
inc
lahf
arpl
sbb
stc
mov
ja
int
xchg
daa
mov
cmp
lret
xchg
lea
cld
xor
push
pop
push
test
shll
cwtl
lods
fistl
pop
mov
push
dec
fiaddl
mov
scas
mov
xchg
bound
inc
fs
cmp
sub
pop
cmpl
pop
into
stc
pushl
cmp
or
repz
dec
aad
xor
pusha
test
push
and
fisttps
clc
jb
jp
es
cltd
enter
mov
int3
inc
cmp
push
or
sub
sbb
mov
insl
pop
aam
and
push
lods
fwait
mov
xor
and
mov
ds
jns
cmp
pusha
sbb
ss
loope
dec
dec
pop
add
inc
idivl
arpl
pop
push
sbb
sub
mov
movsl
sbb
mov
lret
frstor
mov
movsl
jecxz
inc
les
in
dec
and
addb
mov
jge
pop
stos
xchg
mov
ficoml
mov
test
inc
mov
mov
outsb
in
mov
sbb
pop
cltd
mov
in
movsl
rol
adcl
out
mov
and
fadd
mov
jle
mov
and
mov
mov
jmp
and
fldenv
fwait
mov
data16
data16
xor
mov
loope
fwait
xchg
fwait
mov
cmp
pop
xchg
shl
mov
fdivs
mov
loopne
inc
jno
inc
dec
add
sti
mov
lcall
sbb
sub
cmp
hlt
dec
push
or
xor
outsb
sub
das
or
cltd
scas
push
test
mov
mov
fistpl
daa
stos
xor
mov
mov
popa
xor
aam
sub
mov
or
pop
mov
inc
orb
or
cltd
shll
fisubrs
inc
dec
pop
fildll
xor
clc
popf
push
or
lcall
adc
and
ss
mov
lock
pop
mov
xchg
mov
sbbb
fucomip
dec
mov
cltd
mov
dec
inc
mov
addb
or
mov
and
iret
loop
and
movsb
push
lahf
inc
xchg
addl
mov
mov
sub
repnz
gs
into
cmp
xor
sub
jbe
nop
pop
decl
cmp
mov
pshufw
jo
shll
adc
adc
sub
sub
mov
in
adc
and
mov
rcrl
fisubl
test
and
jge
and
inc
inc
sbb
pop
lret
push
push
stos
insl
outsl
cwtl
enter
xchg
stos
mov
lock
lods
push
sbb
xchg
mov
or
or
and
jns
es
scas
sbb
mov
fimull
add
popl
pushf
sbb
shrb
xor
mov
mov
lahf
movsb
push
sbb
or
jp
gs
insl
stos
inc
jbe
out
imul
adc
dec
call
push
or
mov
jne
pop
pop
push
push
mov
ret
fnsave
mov
mul
jge
add
fs
inc
fld
nop
movsl
icebp
clc
sti
fists
add
enter
sbb
and
xor
cmp
mov
fwait
mov
fsubl
or
notb
mov
mov
push
out
adc
pop
mov
out
fcmovne
scas
mov
cmpsl
lock
je
pop
out
inc
inc
or
cltd
insl
mov
stos
test
sub
jae
in
push
cmc
int
aad
mov
push
enter
jmp
sbb
bnd
ret
jecxz
jge
xchg
push
mov
xor
add
aam
pop
xor
loope
mov
and
push
pop
cmpsl
fisttpl
mov
xchg
ds
sub
std
mov
mov
sbb
jno
jp
jnp
fs
mov
sub
cmpsl
ficompl
jle
jmp
xor
jbe
into
xchg
ja
fiaddl
add
xchg
imull
je
out
mov
xor
loop
xor
push
adc
in
or
fld
mov
sbb
mov
rolb
xor
outsl
in
dec
mov
or
fucomi
xlat
cmp
lahf
and
stc
mov
sub
xchg
sub
mov
inc
inc
pop
mov
pop
xchg
mov
pushf
outsb
test
fnstcw
push
hlt
ret
and
xchg
mov
stos
mov
lds
dec
sub
xchg
ja
sub
arpl
scas
hlt
fstp
add
outsb
ja
stc
push
sub
mov
idivl
mov
mov
pop
imul
neg
out
jmp
mov
stos
xor
mov
adc
dec
cmpsl
les
mov
out
cmp
or
cmp
lods
mov
mov
mov
fadd
sub
ficomps
mov
mulb
iret
std
fbld
es
pusha
xor
test
pop
push
sbb
mov
mov
cld
idiv
pop
adc
lret
sbb
scas
jmp
mov
gs
xchg
mov
repz
repz
sub
addr16
in
mov
cmpsl
xchg
ja
clc
mov
dec
and
cltd
sbb
subb
lods
fs
xchg
add
sbb
in
test
lods
jle
mov
incb
mov
scas
hlt
js
jp
push
nop
sbb
cmp
xchg
cmp
test
pop
les
rcl
push
sub
js
xor
pop
movsl
movb
xor
push
fdivrs
xchg
sbb
or
pushf
jo
fwait
scas
mov
mov
bound
or
pushf
mov
enter
pusha
movsb
or
dec
jmp
or
add
mov
inc
xor
insb
mov
movsl
addl
idiv
sti
mov
xor
mov
dec
pop
inc
test
mov
in
bound
mov
xor
cltd
into
xor
ja
pop
stos
test
lahf
orb
dec
xor
in
and
mov
mov
roll
jbe
movsl
dec
sbb
inc
adc
addb
shl
jo
movsl
sub
xchg
fldt
loopne,pn
lcall
inc
inc
mov
lahf
scas
movl
xchg
add
rcll
pushf
sti
je
and
inc
stos
into
fimuls
pushl
xor
fsubrs
jge
test
movsb
xchg
mov
adc
push
jecxz
pusha
jo
or
call
cmpsb
inc
push
lods
popf
xchg
push
xor
sbb
outsb
xchg
or
xor
movsb
pop
mov
dec
xchg
imul
call
pop
mov
mov
arpl
xor
mov
jecxz
push
push
mov
ja
add
inc
out
stc
les
xchg
int3
cs
movsl
mov
fistl
outsl
sub
lret
xor
test
test
clc
neg
mov
pop
cwtl
cmp
fcomi
push
dec
fidivl
mov
insb
dec
dec
pop
push
mov
in
jbe
and
outsl
dec
mov
in
mov
and
divb
dec
ret
sbb
dec
xchg
dec
iret
mov
sbb
enter
adcb
movsb
leave
fdiv
sbb
roll
sbbl
insl
mov
hlt
jb
and
stc
jno
mov
mov
xchg
mov
mov
insl
ja
fld1
jb
sti
nop
movb
jne
mov
sub
lret
dec
inc
hlt
sub
add
mov
pmaxub
test
mov
mov
jb
movsb
or
lret
ds
and
jl
in
stc
fsubl
daa
push
push
mov
testl
dec
xor
add
adc
push
mov
je
lahf
out
sub
loop
push
xchg
fwait
mov
test
repnz
inc
push
ds
sbb
mov
fs
mov
sbb
dec
outsb
loopne
aaa
shlb
jae
mov
and
ret
jge
lahf
fnstsw
hlt
sub
lock
or
push
and
jl
sarb
call
rcr
cmp
pop
pushf
dec
cmp
daa
inc
mov
mov
adc
jb
inc
arpl
add
jo
pop
mov
push
movsb
jmp
cld
mov
sbb
jle
sbb
mov
mov
ret
adc
lds
or
fistpll
cmp
xchg
mov
subl
lods
or
pop
lods
or
rolb
cmp
enter
xor
lahf
mov
dec
fwait
sbb
addr16
ret
and
sub
or
add
push
sub
les
mov
jmp
mov
push
outsl
push
dec
mov
fildll
cmp
xchg
test
adc
lcall
inc
pop
mov
xchg
xchg
add
scas
push
xor
add
push
icebp
test
scas
xlat
fucomi
sbb
jle
mov
lahf
ljmp
lcall
xchg
pop
sub
inc
sti
xchg
rclb
mov
and
push
mov
inc
insl
xchg
adc
lret
push
jge
ds
mov
pop
shr
leave
out
enter
xchg
aaa
cmp
jecxz
cltd
sbb
test
lahf
das
lcall
pop
and
clc
out
call
dec
adc
cmpsl
mov
inc
call
push
addb
mov
fs
js
stc
mov
shl
inc
cmp
movl
mov
addr16
mov
test
and
mov
in
jg
scas
jae
jp
xor
movsb
mov
mov
out
int3
cmp
sahf
test
pushf
inc
cmp
jbe
adc
mov
mov
pusha
fcoml
nop
sub
mov
cs
test
aaa
mov
cli
jnp
lods
push
aas
add
pop
sbb
mov
add
es
and
jp
mov
dec
xchg
es
sbb
push
lcall
xor
add
push
repz
repnz
mov
and
cwtl
and
ror
sub
mov
fcmovnu
jp
inc
push
inc
push
inc
rolb
or
mov
mov
jo
sbb
xchg
xchg
call
inc
rolb
mov
stos
call
iret
adc
shll
frstor
xchg
adc
and
dec
push
sbb
mov
jnp
je
dec
jae
jp
mov
repnz
rcrl
imul
stos
fdivrl
sahf
test
fcompl
cmp
rcr
fwait
pushf
cmpb
cmp
pushf
int
mov
aad
lods
lcall
inc
loope
add
xor
in
and
mov
sub
clc
jp
sub
cli
clc
sub
jle
cltd
pop
iret
setae
jp
cmp
mov
sbb
xor
sti
jmp
sub
fldcw
cmp
mov
mov
movsl
pushf
icebp
mov
or
cmp
pop
out
push
das
xchg
dec
fs
xor
jg
mov
outsb
dec
jbe
mov
mov
and
das
mov
shrb
std
mov
push
cmp
rolb
mov
inc
cmp
in
leave
xchg
sbb
mov
out
outsl
inc
aam
push
jp
jne
gs
clc
xor
xchg
rorl
and
sub
add
cmp
enter
sbb
pop
lea
mov
repz
mov
jl
add
dec
inc
hlt
sti
fbld
enter
add
stos
daa
mov
inc
out
dec
adc
lcall
je
mov
out
sub
push
loop
test
outsb
mov
lahf
in
ja
shr
add
test
fs
dec
leave
inc
mov
push
inc
mov
jbe
inc
mov
sub
mov
dec
pop
dec
mov
pop
xchg
jle
rcl
mov
or
outsl
leave
jo
test
or
mov
push
dec
repz
repz
mov
mov
jg
fwait
sbb
sub
or
adc
lds
dec
loopne
cmp
aad
push
inc
and
faddl
fisubl
fs
repnz
jp
adc
inc
int
call
ja
les
pop
dec
insl
mov
ret
scas
cs
mov
sbb
int3
outsl
push
mov
push
outsb
scas
cmpsb
fucomi
repnz
jl
push
mov
sub
mov
idiv
jg
in
rcr
and
push
shr
lret
push
in
out
xchg
or
inc
sbb
lock
pusha
jo
jns
enter
xlat
pop
pop
mov
xor
loopne
pop
imul
cltd
push
daa
adc
xchg
repz
adc
xor
xor
movsl
sti
pop
mov
mov
jmp
jecxz
push
xchg
mov
test
sti
mov
ds
leave
adc
loopne
sbb
jg
and
mov
sahf
dec
jae
xchg
pop
ss
add
mov
test
sbb
lods
sbb
lcall
cs
xchg
in
mov
xchg
test
mov
jno
add
adc
push
jno
pop
test
pop
push
dec
sub
lock
mov
push
jle
mov
fimuls
pop
rolb
sbb
xor
jb
add
int3
sbb
add
push
xchg
sbb
fidivrl
pop
jmp
mov
mov
aad
xchg
jbe
add
cmp
push
fucomi
hlt
std
mov
sti
popa
and
xchg
sub
std
push
daa
add
and
test
stc
mov
roll
test
into
add
das
inc
inc
idivb
fistpll
out
pop
mov
xchg
stos
jnp
cmpsb
push
lret
and
dec
out
xchg
sbb
das
adc
adc
cmp
pop
aaa
pop
repnz
mov
jp
sbb
jp
clc
frstpm(287
fucomip
inc
push
xchg
cwtl
jns
shll
in
insl
ret
cmp
outsl
xor
pusha
imul
jle
and
jmp
mov
inc
pop
jns
pop
dec
cmpsl
dec
mov
sbb
movsb
jns
add
sbb
movb
dec
mov
mov
hlt
inc
pop
inc
add
sub
jnp
cmpsb
xchg
nop
mov
movsl
push
xchg
outsl
mov
cmp
aad
fcoms
sbb
jnp
arpl
js
add
push
stos
in
push
inc
stos
cwtl
dec
daa
cs
repnz
cs
mov
test
and
mov
adc
xor
lds
mov
cmp
aaa
icebp
insl
cltd
mov
dec
outsl
testl
jbe
xchg
xor
int
stos
push
hlt
pop
test
jle
test
jecxz
lods
sub
xchg
xor
or
loopne
xchg
repz
bound
mov
dec
jmp
mov
inc
cmpsl
adcb
adc
push
fdivrs
push
push
fs
pop
mov
mov
mov
leave
lret
ficoms
pop
movsb
xchg
mov
xlat
aad
addb
mov
sbbl
mov
lret
cwtl
xchg
or
push
push
jmp
stos
fisubs
out
dec
repnz
mulb
xor
in
les
cwtl
or
fidivl
out
stos
cli
jne
pop
cmpsb
ficoms
cmp
xchg
push
stos
or
out
cmp
xor
out
dec
mov
ret
mov
sbb
or
pop
ret
push
cli
cs
xchg
and
mov
xchg
mov
jnp
orl
push
mov
aad
test
push
and
aaa
push
pop
adc
rcl
ret
icebp
out
and
sbb
jbe
adc
mov
cmpb
out
adc
push
mov
test
xchg
xor
mov
xor
mov
and
xchg
call
mov
ss
cmc
arpl
lahf
pop
repnz
push
shll
add
inc
dec
adc
mov
mov
push
mov
stos
sub
mov
int
mov
mov
or
outsl
push
or
test
loopne,pn
sub
adc
mov
xlat
call
loopne
aam
test
in
fsubl
jae
mov
mov
mov
cmp
fdivl
popf
in
dec
lahf
push
push
arpl
mov
cltd
push
jecxz
clc
jge
fwait
stc
mov
mov
addr16
sub
adc
mov
je
fdivrl
add
sub
insl
lret
ljmp
jge
test
dec
dec
jno
cmpsl
pop
xchg
jle
push
lock
movl
pop
jecxz
popa
add
in
cmp
mov
in
dec
pop
fs
dec
mov
jg
out
push
mov
sbb
cmpsl
lock
mov
inc
out
in
dec
fldt
popf
enter
jge
sub
mov
inc
call
inc
jmp
cmpsb
cmp
ja
push
mov
stc
mov
pop
jne
cmpsl
mov
inc
dec
adc
pop
adc
pop
sub
mov
iret
imul
adc
xchg
lret
outsl
and
adc
mov
out
push
inc
int
dec
adc
xchg
arpl
push
inc
int3
test
outsb
arpl
mov
jno
sbb
je
fimull
pop
push
scas
mov
gs
xchg
sbb
and
cmp
int3
cmpsb
mov
push
dec
push
mov
inc
subb
fcoml
js
nop
add
xchg
test
mov
adcl
test
push
pushf
mov
fs
movsl
jp
inc
mov
rcll
jle
lcall
add
leave
jne
dec
mov
xor
xchg
sbb
jl
rol
push
int
jp
daa
adc
jo
fnstenv
and
nop
adc
and
jg
push
jmp
and
inc
xchg
sbb
pop
pop
sbbb
sbb
adc
pop
adc
sbb
inc
insl
cwtl
insb
and
jns
fcmovnu
shrb
std
sahf
jns
xchg
pop
test
test
repz
pop
ljmp
ret
lock
xchg
flds
adc
repz
les
lret
xchg
gs
push
lods
std
repnz
add
mov
xchg
arpl
and
jl
outsl
std
loopne
fcmovnb
js
es
dec
leave
loop
inc
lea
inc
js
sbb
inc
sarb
sbb
add
adc
push
out
test
call
clc
out
pop
cmp
test
mov
js
in
xchg
icebp
jns
pusha
fwait
test
dec
cltd
aam
xor
cmp
jle
xchg
rcrb
sbb
add
mov
fidivl
std
out
add
das
into
inc
and
xor
loop
mov
call
sub
test
pushl
movsb
xchg
lret
sub
mov
cltd
insb
push
mov
scas
add
sbb
cltd
icebp
ja
leave
aaa
subw
mov
int
sbb
rcrb
imul
xor
mov
pop
lret
aad
test
rolb
or
xchg
mov
cmpsl
pop
ret
sbb
pop
xor
fwait
push
mov
adc
or
insl
cmp
xchg
and
cmpsl
pop
or
test
sti
test
aas
sti
add
lock
pushf
pusha
dec
push
add
mov
imul
pop
jl
pusha
xor
jae
cmpsb
rcr
mov
aad
stos
jecxz
pop
cmp
in
mov
pop
loope
out
mov
in
sbb
mov
mov
xchg
jb
fadd
mov
or
ret
xchg
pop
into
pop
popf
pop
in
orl
je
mov
and
jecxz
popf
ja
popf
aam
push
cmp
inc
lds
mov
cmc
imul
je
mov
lret
imul
inc
arpl
dec
jb
jne
int
push
dec
divl
stos
jmp
jp
mov
arpl
ss
icebp
lret
js
push
sbb
insb
push
test
popa
mov
push
push
or
jg
test
mov
fldcw
test
cmp
insb
jp
xor
sbb
repz
xchg
dec
addr16
jo
das
test
out
leave
sub
shll
inc
push
test
call
sbb
adc
jg
adc
pop
lea
adc
cmpsb
cld
pop
sub
jecxz
mov
aad
cli
das
leave
sbb
dec
int
lds
sbb
nop
fstpt
push
test
in
int
add
jecxz
out
push
iret
ret
jle
clc
cmp
and
xchg
pushf
mov
les
mov
ds
xor
mov
aaa
xor
xor
sbb
mov
pop
lret
stos
fwait
imul
dec
lcall
dec
sbb
mov
scas
sbb
mov
inc
inc
inc
sbb
jae
stos
int
add
jbe
inc
out
aad
dec
jle
scas
adc
movsl
popf
adc
inc
sub
js
dec
push
in
shlb
pop
adc
mov
add
or
test
fwait
scas
ret
sbb
lahf
movsb
inc
add
loopne
lahf
inc
mov
pusha
fwait
jl
adc
mov
orb
push
jl
xor
pop
lds
std
cwtl
les
lcall
mov
into
int3
aam
stc
ja
imul
and
mov
pop
xchg
dec
sub
inc
outsb
jp
sbb
mov
xor
mov
mov
xor
dec
movsl
mov
testb
ficoml
lahf
stos
cmpsl
adc
dec
sbb
dec
aad
ja
fs
movsl
iret
sbb
rcrl
adc
cld
jp
ficoms
outsb
inc
lcall
adc
leave
aad
mov
mov
mov
cmp
inc
xchg
mov
sub
lahf
mov
les
fcompl
cmp
sbb
push
xor
or
add
lds
cmp
test
xchg
clc
data16
push
pop
and
gs
fstpl
mov
out
into
aam
pop
fidivrs
sti
pop
iret
xchg
xor
push
out
in
daa
inc
test
test
xchg
mov
call
and
cmc
and
hlt
fwait
inc
mov
push
jb
inc
lock
or
addr16
nop
fists
subb
es
adc
or
jnp
xlat
pop
pop
fbstp
xor
xor
inc
inc
lret
je
xchg
mov
aas
cmpsb
pop
fldl
sbb
mov
stos
xor
cs
popf
lret
es
pop
movsb
push
sbb
imul
daa
pusha
dec
push
sub
jns
adc
insb
mov
nop
cltd
fcoml
sbb
mov
push
fucomip
bnd
into
mov
sti
mov
sub
push
sbb
cmp
loopne
dec
adc
jb
dec
fdivrs
xchg
loop
fdivrl
out
ja
cli
rcrb
mov
popa
mov
ret
fld1
jae
outsb
outsl
shrl
je
fs
inc
rcrl
inc
push
je
lcall
mov
pop
push
mov
inc
or
les
insl
mov
jmp
call
scas
in
imul
inc
sbb
mov
mov
sbb
stos
cmp
or
cwtl
lret
inc
adc
mov
push
call
gs
lods
add
roll
dec
pop
mov
stos
arpl
icebp
andl
jecxz
cmc
aam
sub
in
popl
movsl
push
test
mov
xchg
mov
lods
push
sbb
mov
movsb
inc
in
test
shr
movsb
movl
and
xor
lcall
push
andb
lods
aad
mov
mov
inc
lret
dec
frstor
cmpsb
cld
lret
jmp
pop
int
and
scas
inc
flds
sub
enter
enter
mov
add
dec
movsl
movsl
dec
xor
dec
dec
mov
cmpl
stc
and
xor
sti
dec
aad
mov
add
popa
mov
ret
mov
adc
xor
hlt
push
dec
mov
ret
xor
sbb
mov
imul
pop
sbb
or
movsl
icebp
mov
or
mov
shl
popa
dec
pushf
std
es
out
push
into
pop
stos
arpl
cwtl
sub
add
xchg
jne
ret
mov
pop
stos
bts
mov
bswap
push
hlt
rclb
sti
fs
mov
lahf
stos
fisttpl
js
popf
inc
mov
xchg
pop
push
clc
sbb
xor
mov
outsl
pushf
sbb
shlb
push
adc
cmp
xchg
imul
mov
pushl
stos
imul
int
arpl
push
xchg
int
out
and
mov
cmp
inc
xchg
sar
mov
sub
dec
mov
inc
lea
cmp
sbb
aas
ja
dec
repz
out
adc
repz
in
popf
sti
xchg
pop
dec
xor
jmp
push
xor
cwtl
or
dec
push
push
sub
xor
mov
push
mov
stos
mov
lods
dec
xchg
sbb
jge
cmpsl
icebp
stos
sbb
fimull
pop
pusha
mov
inc
imul
pop
stos
test
mov
xchg
add
enter
ret
dec
cs
cltd
stc
loope
mov
call
roll
jl
xchg
mov
sbb
add
dec
iret
fxch
mov
adc
sub
inc
push
sub
and
jnp
xchg
into
arpl
or
inc
mov
je
imul
inc
fwait
dec
add
xchg
or
sahf
jbe
loope
insb
stos
shl
mov
shr
repz
arpl
or
test
xlat
cmc
mov
lods
mov
sub
jle
loope
adc
push
add
movsb
push
inc
cltd
lret
movsl
ret
popf
jnp
rclb
lahf
mov
fists
mov
jo
sarb
popf
aas
cmc
cmp
movsl
rorl
stos
addr16
xor
mov
nop
push
jns
js
add
aad
cmpsl
xchg
daa
outsl
dec
jge
lret
jb
mov
cmp
aas
dec
cmp
fldl
cmpsl
xchg
loop
pop
pushf
fbstp
inc
aad
js
cmp
rolb
call
popf
lret
sbb
push
inc
cwtl
dec
xor
add
pop
addr16
jbe
lcall
inc
test
xchg
xchg
sbb
aam
and
cmp
adcb
outsb
mov
mov
pop
incb
jmp
cmpsb
pop
mov
jle
test
mov
mov
in
inc
cmp
xor
jmp
clc
mov
jmp
jmp
add
rorb
dec
sbb
mov
push
mov
push
pop
cmp
lcall
mov
xchg
test
sbb
sub
fucomp
sti
mov
imul
push
and
loopne
push
sbb
mov
fisubl
stos
inc
loop
cld
push
mov
fcoml
cmp
mov
inc
jp
cmp
mov
pushf
jge
mov
mov
outsl
lock
scas
and
add
gs
push
dec
cmp
and
dec
push
pop
and
push
mov
mov
inc
inc
imul
inc
je
xor
incb
push
sub
dec
cmp
movsb
jnp
popa
and
inc
mov
mov
movsl
hlt
pop
adc
push
into
mov
sub
ja
lret
in
stc
fists
repz
sbbb
inc
outsl
mov
loopne
sbb
ja
cmp
insb
aad
adc
xor
icebp
xlat
dec
fisttpll
les
ds
std
enter
ffree
movsb
pushf
call
sub
mov
xchg
cmp
sbb
add
insb
ficoml
lcall
std
in
out
rorb
pop
lods
xchg
fistpl
lods
inc
pop
sbb
push
sti
call
div
and
xchg
add
inc
shlb
sbb
dec
mov
shrl
rorl
mov
scas
ret
inc
inc
repz
adc
repnz
inc
sti
sub
jecxz
cltd
add
in
gs
mull
push
sbb
and
enter
push
int
cmpsl
cmc
mov
sbb
mov
jbe
add
arpl
int
push
fidivs
ret
cmpb
in
in
mov
lret
stos
pop
jo
sbb
lock
adc
pop
repnz
sti
sub
in
into
inc
lret
sub
test
xchg
jg
inc
aad
fcmovne
sbb
stos
xchg
popf
push
ret
arpl
cld
jne
fs
mov
pop
hlt
cltd
imul
loop
test
sub
gs
mov
pushf
adc
jl
pop
shl
lea
mov
popa
push
cmp
fs
sbb
xchg
mov
insl
mov
clc
cwtl
push
idiv
dec
sarb
js
sub
les
mov
pop
pop
imul
in
cmpsl
sbb
fdivrs
inc
loopne
adc
add
enter
push
movsb
dec
dec
inc
mov
popa
xchg
dec
mov
test
fsts
add
fsubs
mov
mov
add
mov
icebp
xchg
jo
add
pop
cli
add
fbstp
lock
cmpsb
cltd
jo
fisttpl
push
sbb
outsl
inc
imull
jns
push
test
dec
std
or
mov
dec
leave
add
jae
fwait
bnd
jecxz
mov
add
fwait
addr16
xor
leave
xorl
fistl
mov
push
lds
cmp
subb
les
xchg
cld
sbb
sti
sub
test
inc
rcll
gs
test
in
data16
sbb
movsb
xor
push
sub
mov
xchg
addr16
into
xchg
fldenv
sti
lret
fdivs
jecxz
lock
adc
sub
sub
lret
nop
lret
and
dec
sub
jmp
addr16
push
mov
sbb
std
inc
mov
loopne
mov
imul
outsl
loop
inc
mov
shlb
ret
mov
adc
int
sbb
mov
and
mov
out
leave
pop
nop
xlat
stos
movsl
imull
mov
mov
mov
fs
cmpsl
dec
sbb
js
daa
icebp
call
ret
sbb
cmp
cmc
insb
xchg
or
stos
adc
cmp
rcrl
sarb
inc
sahf
inc
mov
cli
daa
xchg
dec
xchg
jnp
stc
xor
xchg
xchg
mov
divl
idiv
pop
dec
fidivrs
test
adc
cmp
popa
movsb
mov
movsl
imul
fdivrs
sbb
pop
pusha
sbb
clc
popa
jb
cltd
mov
imul
stc
insb
aaa
dec
push
je
push
adc
cmp
dec
inc
xor
loop
popa
mov
pop
lahf
inc
add
sub
inc
xchg
jb
mov
aas
ja
jnp
setp
dec
lahf
push
fwait
jnp
sub
xchg
cld
shrb
pushf
pop
mov
pop
fs
loopne
inc
pop
xorb
aas
push
push
icebp
push
divb
push
sub
sbb
mov
lods
mov
mov
into
arpl
dec
daa
pop
dec
mov
push
orb
xor
stos
mov
and
inc
movsl
xchg
mov
lea
rclb
adcb
test
inc
jecxz
mov
mov
test
jl
repz
push
test
sbb
mov
insb
fiaddl
dec
dec
jg
out
test
cwtl
dec
mov
pop
dec
dec
inc
mov
es
ja
jae
shrb
xchg
es
fistpl
add
mov
dec
xchg
aam
mov
pop
aad
lret
outsb
shrl
call
dec
xor
ljmp
popa
mov
add
jbe
jae
sti
inc
sbb
xchg
xchg
jecxz
mov
xor
dec
lock
adc
mov
popa
int3
addr16
decl
xlat
xchg
adc
lods
test
int3
in
out
mov
fldl
xor
dec
ror
mov
xchg
mov
or
test
mov
or
jge
lret
fsts
pop
scas
dec
jns
mov
push
jl
sbb
scas
lds
sbb
cmp
add
mov
xchg
int
lds
je
popf
push
mov
jmp
jge
xchg
and
outsb
mov
ret
pop
mov
fsubp
lods
gs
cmpsl
ret
stc
cmp
mov
pop
mov
jle
mov
dec
out
xchg
pop
inc
movsl
cmc
loope
jl
lods
and
pop
jns
nop
enter
test
or
pop
out
mov
loopne
je
jno
mov
jns
aas
ljmp
mov
sub
loopne
bound
inc
cmpsl
ret
test
dec
rcrb
mov
sbb
jbe
cwtl
test
xor
inc
cmp
out
mov
aas
sbb
stos
lahf
mov
fists
lds
lret
sbb
ljmp
pop
enter
movsb
cmpsb
enter
lahf
jge
test
fstl
dec
leave
out
sbb
clc
mov
push
jge
fwait
cmp
in
mov
and
int
sub
fs
xchg
xor
fwait
test
xlat
clc
popf
mov
jns
mov
sti
js
xlat
xchg
pop
and
inc
pop
std
sbb
dec
xchg
mov
shl
jl
jne
mov
fiadds
xor
test
mov
test
stos
xchg
or
out
fsubrs
mov
xor
and
bound
pushl
popa
popf
mov
jg
xchg
cwtl
mov
scas
inc
xchg
mov
adc
mov
mov
sbb
iret
push
lret
jnp
arpl
mov
mov
pop
outsb
iret
js
fmul
mov
lock
lcall
dec
jns
sub
add
sub
push
cwtl
rcrb
sbb
xchg
xlat
clc
sbb
mov
icebp
js
jg
movsb
mov
movsb
push
fwait
jge
pop
push
ds
fidivs
icebp
cld
pop
xchg
imul
mov
mov
out
es
cmpsb
cs
mov
arpl
and
lds
jb
adc
add
cmpl
jno
adc
out
cmp
sub
movsb
sub
pop
loop
jl
shll
xchg
arpl
aaa
shrb
mov
roll
jnp
add
insb
data16
sahf
pushf
cmpsb
test
sbb
in
in
or
loop
push
add
aam
dec
sbb
add
popf
mov
bound
out
arpl
xor
jl
push
mov
int3
insl
adc
cmp
out
adc
jmp
pop
sub
jmp
pushf
push
sub
mov
gs
dec
add
lods
idivl
subl
mov
adc
and
jbe
sarl
sbb
adc
add
jmp
scas
ja
or
push
mov
xchg
ret
lds
mov
and
jle
test
jg
cs
fistpl
mov
jno
dec
iret
mov
fstps
out
lret
adc
outsl
mov
sub
fbstp
pop
push
pusha
xor
xor
inc
test
scas
and
and
jecxz
test
or
sbb
int3
inc
dec
jl
rcll
shrl
in
mov
mov
mov
outsl
call
sbbl
mov
mov
pop
inc
stos
in
jnp
pop
stos
xchg
fwait
sbb
jae
cmp
std
repz
lods
inc
push
cld
cmp
add
jo
in
jmp
scas
inc
test
stc
in
andl
es
shlb
fsubrl
or
rcrl
std
inc
and
push
ljmp
fisttpll
repz
stos
jb
fwait
outsl
scas
mov
mov
mov
ds
mov
adc
jl
dec
xchg
lret
cmpl
push
sub
mov
lret
mov
cmp
lret
xor
push
mov
scas
sbb
outsl
mov
popa
mov
adc
mov
sbb
xor
fnsave
dec
and
sub
pop
imul
adcb
scas
inc
mov
arpl
inc
popa
test
lahf
jp
pushf
push
xchg
pop
cs
ds
cltd
adc
fsubl
fidivrl
sub
xorl
stos
inc
xor
add
xchg
xchg
leave
xor
movsb
mov
xchg
jl
xchg
adc
mov
cmc
and
inc
cmpl
inc
pop
and
ds
mov
rcll
sub
push
lods
stos
orl
out
int
ret
fld
pushl
cltd
enter
inc
ss
xchg
pop
cltd
iret
mov
pop
pop
mov
mov
daa
or
or
inc
inc
push
sub
xor
push
and
decb
push
mov
push
mov
test
xor
cmp
sbb
add
nop
pop
sub
pop
orb
dec
addr16
mov
pushf
dec
and
jl
pop
mov
sub
sub
add
fmul
lcall
pushf
jp
gs
test
insl
cmp
in
lcall
xchg
dec
fcmovne
xchg
fwait
adc
mov
sbb
sub
inc
sbb
aam
inc
pusha
sahf
inc
fmull
jp
mov
movsl
fcompl
mov
pop
dec
cmp
adc
inc
sarb
clc
mov
rorl
daa
mov
mov
popf
roll
fxch
movsb
inc
adc
stc
ja
inc
pop
pop
cmc
mov
push
add
push
sahf
xchg
pop
aas
xchg
enter
aam
mov
fmul
pop
fucomp
mov
and
inc
inc
push
fimuls
rclb
inc
jbe
lods
shrb
cmp
inc
add
into
add
lds
xor
adc
pop
add
test
mov
add
inc
jge
dec
xorb
dec
jo
mov
dec
push
cli
inc
add
rcr
scas
aad
insl
inc
sub
cmpsb
pop
cmpb
cmp
in
sbb
cld
xor
in
cs
cmp
in
in
imul
push
addb
and
mov
mov
sub
sbb
mov
xchg
lahf
sahf
stos
andb
scas
and
iret
sbb
ljmp
dec
shlb
testb
mov
sbb
dec
and
jecxz
jae
cmpsb
xchg
inc
or
add
mov
lahf
movb
cwtl
mov
out
mov
enter
or
jns
out
je
out
imul
sahf
inc
imul
stos
shr
ss
xor
jl
xor
jmp
jnp
xchg
mov
jl
repnz
inc
mov
nop
mov
movsb
nop
mov
psadbw
outsl
adc
add
jno
jle
pop
mov
mov
rorl
mov
inc
dec
popf
add
add
aas
ret
xchg
fmul
adc
stos
arpl
pop
cmp
addb
rcl
cwtl
fisttpll
xchg
fucomi
xor
mov
mov
je
popf
scas
push
enter
rcl
stos
aas
repz
pop
jl
sub
push
mov
pop
leave
push
ret
loope
popf
xor
mov
scas
cli
and
and
mov
arpl
jns
sbb
add
enter
repz
xchg
lea
mov
shrb
int
imul
in
dec
int
mov
into
fldl
sbb
pop
mov
sbb
jge
jle
add
xchg
cmp
movsl
pop
mov
pop
sbb
jecxz
inc
imul
xchg
mov
lcall
add
sub
mov
sub
hlt
shlb
push
aad
int
inc
cmp
fwait
mov
bound
cmp
xchg
test
in
push
sbb
or
imul
pop
sti
mov
push
pop
sbb
or
push
xchg
pop
stc
push
cmp
cld
repnz
aas
pop
movsl
push
or
roll
xchg
enter
sub
jne
push
xor
jne
push
sub
mov
cmp
loopne
cmp
mov
mov
bound
inc
xchg
or
popa
mov
jnp
and
lods
gs
outsb
mov
out
call
shlb
inc
lcall
sub
sbb
in
mov
call
jmp
out
add
lods
shlb
iret
stos
cmp
inc
xor
xchg
pop
bound
push
stos
push
and
rcrl
stc
dec
mov
mov
rorl
fldt
jge
imul
cltd
adc
xchg
stos
jge
stos
aam
ds
cmp
mov
insl
lds
or
arpl
or
sbb
int3
mov
jge
xchg
test
cwtl
mov
mov
xor
mov
or
rorl
jmp
fcomps
test
ret
cmc
jmp
mov
xor
fisubs
jecxz
leave
sbb
mov
pop
push
dec
inc
mov
addr16
cmc
or
shll
nop
pop
es
ret
loopne
in
sub
hlt
sub
rcrl
rep
repz
jnp
mov
mov
jge
lock
sbb
add
lcall
mov
sbb
scas
push
and
imulb
fisttpll
xchg
inc
fldl
and
mov
ret
popa
lock
pop
sub
lds
enter
add
cmp
xchg
dec
pop
inc
xor
orb
inc
xchg
stos
inc
movb
movsb
xchg
mov
loope
ja
jmp
jp
lret
dec
mov
out
loopne
sbbl
xlat
cmp
push
fsts
add
cmp
adc
dec
and
push
roll
arpl
aaa
icebp
xor
in
bswap
mov
jb
inc
lret
jge
out
xchg
pop
aas
xchg
enter
mov
hlt
test
xchg
fdivrs
lret
dec
mov
cmpsl
inc
pushf
xor
dec
push
mov
inc
sahf
andb
jne
xor
xchg
push
loopnew
or
and
xor
shll
cmp
dec
dec
push
or
cmpb
dec
sahf
mov
pop
cltd
mull
imul
popf
mov
pusha
sub
stos
clc
adc
mov
popf
imul
mov
loopne
xchg
int
stos
lds
push
mov
cmc
push
mov
mov
xchg
cli
or
add
lods
enter
lahf
jp
scas
lcall
sbb
popf
cltd
mov
repz
mov
cmpsl
aaa
adc
addl
popf
popl
mov
pop
adc
and
mov
dec
cmpsb
push
inc
adc
out
mov
lahf
cmpsl
mov
mov
outsl
out
push
mov
data16
jmp
adc
enter
cltd
inc
in
shrb
xor
push
pop
jnp
mov
mov
push
mov
push
sti
shr
pop
fistl
addl
lahf
mov
sbb
add
aas
mov
jmp
imul
dec
lock
add
mov
jb
into
call
xchg
leave
fsubrl
cli
xchg
pop
dec
rcrl
mov
add
cmpsl
jmp
dec
sbb
jne
xor
in
int
xchg
or
shlb
rcrb
test
lods
bound
insl
cmpsl
cmpb
mov
xchg
xchg
push
lret
scas
fldt
test
jnp
scas
mov
mov
and
cmp
inc
mov
mov
jo
pop
rcll
fisubl
xchg
push
test
in
loop
stos
mov
jbe
sbb
out
pusha
cmp
aaa
popf
mov
mov
shrb
cli
sbb
add
insl
push
cmp
insb
sbb
pop
mov
dec
stos
dec
adc
shrl
and
inc
mov
mov
repz
sti
mov
sbb
add
dec
adc
shll
add
mov
and
or
insb
dec
sarb
mov
scas
shrl
cmp
clc
fcomip
pop
insl
or
sbb
pop
and
sub
inc
push
add
mov
cwtl
addr16
add
push
mov
fsubrl
ss
add
push
push
jmp
mov
jl
jge
mov
mov
and
cmp
movsb
fs
jae
and
sub
and
xor
push
scas
ret
pop
rolb
movsb
inc
out
sbb
mov
popa
jp
xlat
add
call
mov
dec
pushf
fwait
lds
push
mov
mov
rcll
jg
sbb
loope
adc
mov
push
sarb
popa
mov
pop
fs
lods
je
inc
pop
push
sub
lds
stc
pop
mov
xor
mov
adc
aad
add
test
push
pop
cmp
add
cmpsl
cwtl
cmc
cmpb
or
bound
stos
int
jg
pop
adc
rcrl
les
lret
aaa
pop
cmp
scas
dec
mov
inc
lods
or
pop
imul
mov
mov
outsb
sbb
dec
ja
pop
mov
mov
inc
mov
rorl
mov
inc
mov
pop
movsl
jg
and
inc
mov
fs
stos
mov
sbb
jp
sbb
cmp
sub
jl
xlat
push
js
movsb
push
sahf
dec
push
dec
repz
je
cli
jg
push
loopne
push
fdivr
sbb
jecxz
sbbl
out
cmp
incl
xor
xorl
and
mov
jnp
jle
movsb
movsl
jecxz
cwtl
incb
mov
repnz
mov
sarl
mov
lock
add
inc
mov
sbb
push
mov
push
fcmovbe
popf
test
ret
test
jae
pop
sbb
lock
js
or
xor
ljmp
mov
out
push
mov
notb
icebp
call
outsb
fmuls
jp
mov
push
push
mov
sbb
gs
and
add
push
mov
add
sbb
iret
out
mov
cs
lret
cmc
ret
loopne
lods
pop
mov
and
ret
fwait
mov
mov
out
rorl
aam
sbb
nop
js
push
sbb
inc
mov
pop
fdivrl
fprem1
dec
inc
xor
push
mov
push
cmp
mov
mov
lock
and
aad
int
lcall
inc
inc
divb
mov
filds
lea
sub
incl
hlt
xchg
out
mov
and
xchg
into
mov
inc
stos
pushf
and
xor
jmp
sbb
in
xor
push
sahf
adc
sbb
xor
cmp
or
cmp
push
push
das
test
xchg
inc
pop
ljmp
lret
mov
dec
aad
inc
xchg
movb
sub
mov
add
xchg
adc
cmp
mov
outsl
push
or
xor
int
test
sbb
push
mov
je
mov
dec
aam
jl
fs
out
jecxz
mov
fwait
aaa
orb
or
adc
inc
lret
rol
push
mov
mov
movsl
ficoms
loopne
mov
repz
inc
mov
jecxz
push
pop
xchg
add
test
aaa
push
sbb
or
movsb
push
in
rolb
or
mov
dec
cltd
test
xchg
std
push
mov
repnz
sub
sub
cmpsb
std
inc
jge
jae
sbb
mov
push
and
dec
mov
push
sub
lea
dec
xor
repnz
mov
push
mov
lods
fidivrs
test
sahf
cmp
lret
lahf
scas
fcmovnb
jp
scas
jg
mov
jl
arpl
and
pushf
pusha
repz
in
cmpsb
test
xchg
lods
mov
js
insb
dec
mov
sub
test
imul
lea
jl
mov
push
sub
int
jb
add
aaa
jne
imul
fdivrs
int3
fstpt
test
outsl
in
mov
loopne
mov
push
adc
ret
incl
jbe
jo
mov
cmpl
mov
ret
stos
movsb
mov
sbb
sbb
mov
jae
mov
cmp
sub
cmpsb
aaa
mov
loope
mov
pop
in
xchg
mov
and
test
sbb
xchg
stos
nop
xchg
mov
mov
dec
les
jmp
lods
movsb
ret
sbb
aad
add
push
jl
popl
loop
xchg
xchg
pop
and
pop
pop
js,pn
scas
xchg
mov
pusha
jmp
mov
sbb
fwait
test
sub
jno
stos
cmp
add
mov
sbb
enter
adc
push
or
leave
sbb
mov
ljmp
jmp
js
hlt
push
stos
shrl
stc
pop
push
inc
pop
loopne
call
sbb
ds
dec
mov
out
mov
dec
pop
divb
dec
ret
ja
sub
or
in
push
outsl
jb
inc
movsb
cmpsl
xchg
or
scas
arpl
dec
bound
push
xchg
mov
xchg
test
cmp
outsb
push
cld
cmp
add
or
mov
xchg
mov
imul
push
gs
fmull
scas
dec
xchg
dec
pop
sahf
adc
mov
or
leave
dec
cmp
xlat
clc
sbb
imull
out
fsubrs
xchg
adc
test
cmp
xchg
jbe
cli
pop
fs
cmp
jb
test
push
sbbl
cmp
jmp
adc
out
mov
lcall
adc
popa
sahf
mov
mov
repz
test
xchg
test
testl
mov
mov
sti
sbb
inc
int3
xchg
sub
fsubl
and
outsl
dec
pop
sahf
lea
test
push
push
sub
shll
lock
inc
pop
into
sub
icebp
or
mov
or
xor
sub
inc
mov
push
xor
pop
and
jmp
pushw
inc
sbb
mov
or
or
dec
xlat
js
or
mov
xchg
pop
cs
xchg
cwtl
inc
ds
stos
adcb
sub
test
pop
adc
lahf
xlat
dec
lea
in
rolb
lahf
outsl
and
out
ficomps
jecxz
mov
aam
dec
adc
clc
lahf
insb
mov
enter
lcall
test
pop
gs
inc
mov
or
incl
cld
sub
xlat
cmpsl
adc
adc
fisttpl
mov
fdivrl
cwtl
jo
scas
inc
cmp
lret
mov
fs
mov
and
je
and
xchg
aaa
popf
mov
mov
push
lret
cmp
sti
mov
inc
inc
dec
in
dec
cmpsl
push
sub
or
push
cmp
lods
mov
sbb
xor
lahf
mov
sbb
aas
repz
jge
mov
adc
stc
decb
ffree
push
cmp
push
pop
adc
pop
push
push
shrb
out
push
and
pop
cwtl
xor
pop
and
jne
jnp
daa
mov
aam
cmp
push
sub
xchg
jns
mov
je
ret
fidivrl
pop
das
pop
pop
gs
je
insl
mov
pop
adc
popa
les
push
sarl
mov
jmp
mov
mov
ret
jecxz
dec
jg
scas
dec
sahf
cmp
flds
aaa
or
in
xchg
adc
ret
mov
test
xchg
fstpl
loopne
jno
sub
dec
add
xchg
iret
cwtl
push
cmp
jmp
adcb
xor
jge
mov
mov
cmp
push
clc
inc
push
dec
lods
push
sbb
test
lcall
adc
cmp
cmpsb
mov
adc
addr16
sbb
pop
lods
adc
xchg
pop
rclb
push
jge
shlb
cmp
fsubl
addr16
mov
fwait
sbb
mov
mov
aam
xchg
imul
popa
adc
add
mov
inc
mov
mov
lret
mov
stc
mov
cwtl
and
pop
rolb
sub
popf
je
and
xchg
xor
xlat
dec
lods
dec
add
pop
jae
repz
mov
and
fdivl
or
sahf
popa
mov
stos
adc
push
loop
add
jae
jl
push
jle
dec
pusha
orl
jb
icebp
stc
sub
pop
faddp
jnp
js
daa
lret
in
sti
cmpsl
adcb
negl
repz
fisubl
repnz
mov
mov
lahf
fistps
cmp
lods
pop
lahf
mov
xchg
sbb
movsb
jo
cmp
mov
mov
cmp
mov
sbb
cmp
cmc
or
dec
sbb
push
push
movsb
mov
xor
cmpsb
dec
inc
fadd
push
mov
jnp
sahf
sub
adc
je
and
and
mov
ficoms
inc
fsubs
pop
mov
pop
bnd
test
jmp
ss
int3
in
int
icebp
cmpsb
arpl
sbb
jne
les
shlb
dec
cmp
cltd
int
dec
popf
xor
cli
cmp
push
sti
mov
fistl
cmp
push
stc
mov
ret
pop
cmp
lahf
mov
cmp
mov
int
push
mov
cmc
in
aas
cmpsl
icebp
inc
loopne
out
mov
in
pop
ds
mov
lock
jecxz
mov
cmc
in
pop
cmp
int
pop
mov
vaddpd
xor
ror
jmp
mov
fsubl
insb
aaa
fsubs
jl
aam
cmpsb
aam
xchg
dec
daa
shlb
pop
das
int3
scas
mov
pop
enter
shll
les
or
shrb
paddb
in
ja
mov
cld
jg
mov
int3
addr16
fsubrl
mov
ficoms
mov
jne
pop
in
stos
fcoms
adc
stos
fsts
pushf
xor
adcl
sub
mov
scas
xchg
stos
dec
pop
cmovge
lcall
cmp
fwait
shrb
mov
cmp
pushf
push
ret
xchg
push
fwait
leave
loop
cmc
movsl
pop
aas
cmpsl
repnz
addl
call
mov
scas
xorb
popf
dec
and
jecxz
mov
cmpsb
push
aas
mov
ljmp
fld1
mov
jnp
js
repz
push
aaa
mov
cmp
js
ss
pop
enter
daa
adc
lret
sub
outsb
mov
xchg
mov
push
rcr
gs
fistpll
std
scas
lods
mov
scas
pop
xor
inc
aas
mov
cld
cld
inc
js
lds
repnz
pop
leave
scas
add
cltd
icebp
scas
or
test
mov
inc
int
dec
mov
movsb
iret
mov
out
mov
addr16
bound
into
xchg
jp
cmp
cltd
push
mov
mov
add
mov
xchg
and
sbb
scas
enter
jle
sub
mov
jp
cmp
push
pop
shrb
lods
mov
mov
mov
fwait
push
dec
mov
xchg
dec
mov
data16
fldenv
pop
pop
imul
add
repz
xchg
cltd
out
pop
fbld
ss
aaa
pop
inc
xor
jnp
and
jo
rcrb
lea
cmp
pop
ljmp
popf
movsl
imul
iret
ret
jb
jg
out
out
jmp
xor
rcrb
and
orl
sub
xor
sub
insl
movsb
cli
fbstp
sbbb
stos
dec
jnp
sub
pushf
mov
push
popf
aad
into
arpl
in
cld
mov
xlat
push
pop
mov
das
xchg
stos
std
xor
adc
stos
push
dec
sbb
cs
adc
mov
std
push
sbb
pop
cmp
loope
lds
and
sarb
xchg
addl
pop
pop
mov
jp
jns
js
shrb
pop
cmp
mov
mov
in
inc
pop
test
hlt
les
out
pusha
dec
dec
pop
sbbb
inc
aaa
sbb
movsl
and
ror
cltd
aaa
sbb
adc
and
push
mov
inc
cltd
outsl
ds
aaa
in
jbe
mov
push
xchg
adc
insl
mov
int
lods
mov
pusha
lahf
inc
xor
pushf
jnp
pushf
cld
roll
xchg
mov
into
inc
imul
xchg
fnstcw
lahf
mov
pop
fsub
cmpsl
xchg
in
cmpsl
mov
pop
sbb
ljmp
lret
fucom
mov
lock
adc
pop
popa
mulb
dec
cld
insl
ljmp
sbb
call
cmp
xor
stos
ja
sti
or
pop
jb
lods
pusha
jnp
test
inc
jl
in
pop
pop
cmp
jmp
cmpsb
ret
mov
aas
cmpsl
dec
sbb
add
cli
scas
out
rcl
pop
js
push
xor
fdivs
pop
adc
mov
mov
push
loopne
nop
jae
sbb
mov
mov
dec
jbe
movl
xlat
bound
mov
jb
cmp
jb
dec
or
cmpsl
mov
and
adc
inc
mov
ret
dec
xchg
test
popf
stos
cmp
fadds
jno
lahf
mov
pop
xor
pusha
xor
sbb
dec
dec
aaa
bound
or
pop
xor
jg
push
scas
cld
loope
int3
jno
pop
dec
mov
mov
xchg
test
aas
sbb
push
dec
push
in
fs
sbb
cli
les
xchg
cmp
or
in
cmp
xchg
mov
fiaddl
add
xchg
lea
sti
lahf
pop
sbbb
dec
lahf
inc
jge
dec
cli
ljmp
leave
loop
faddl
sbb
mov
or
add
sub
inc
xchg
divb
sbb
cltd
sub
xor
pop
inc
jmp
mov
enter
xor
fld1
jo
add
or
cmp
loop
leave
add
sub
mov
dec
pushf
test
or
dec
or
adc
pop
lret
mov
sub
in
add
push
cld
mov
daa
pushl
pusha
jo
andb
lret
popa
jnp
cltd
cld
fsubs
lahf
std
js
dec
sbb
mov
jns
pop
cmp
fnstsw
mov
adc
mov
lds
test
test
push
cmc
daa
popa
scas
jecxz
sub
out
aaa
stc
xor
test
jo
mov
fimull
ficompl
mov
add
xor
adc
lret
mov
and
test
and
mov
xchg
mov
test
xchg
jg
mov
jo
rclb
je
and
pop
call
fadd
cmpsb
leave
scas
int3
lods
movsb
inc
and
and
fistpll
mov
pop
enter
loop
hlt
pop
ljmp
mov
sbb
xor
dec
adc
bnd
cmp
inc
xor
jno
in
ljmp
jg
adc
ret
push
sar
sarl
fwait
sbb
lock
mov
xchg
stos
popa
movsl
int
test
or
addr16
fisubrs
fs
mov
and
out
aam
testb
xchg
dec
mov
repz
stos
hlt
xor
movsb
ss
movsl
adc
jno
sbb
jno
into
test
xchg
mov
sahf
or
push
jb
int
in
test
imul
sahf
je
fucomi
sbb
outsl
and
sbb
cmp
xchg
pop
mov
fnsave
mov
fwait
mov
inc
cmp
lea
clc
hlt
mov
inc
sub
ja
test
and
and
test
lahf
inc
insb
mov
mov
mov
push
loope
or
imul
sbb
jns
test
out
jne
xchg
dec
pop
out
xchg
pop
mov
and
dec
btr
push
mov
popf
fndisi(8087
test
cltd
pop
andb
and
jecxz
scas
in
dec
leave
xchg
push
cwtl
mov
inc
stos
test
cltd
dec
das
inc
test
xor
xor
mov
and
mov
mov
mov
aam
les
jecxz
mov
inc
scas
xchg
stos
testb
in
test
scas
dec
int
adc
mov
in
pushf
pushf
movsl
dec
xor
xchg
lret
push
dec
xor
icebp
sub
cmp
jl
pop
into
cltd
or
add
sarb
xchg
inc
mov
aas
pusha
in
sub
adc
movsl
mov
and
loope
xchg
decb
popf
fs
jo
out
cmp
xor
add
push
ds
rcrl
inc
mov
inc
adc
mov
lret
mov
mov
les
xlat
mov
cmp
push
adc
enter
mov
lcall
xchg
mov
shr
ljmp
push
out
popf
sub
out
pushf
leave
pop
jnp
xchg
xchg
ja
loope
and
mov
addr16
pop
jns
mov
into
sarb
repnz
jno
ret
mov
xchg
jne
lods
inc
lds
pop
insl
les
leave
dec
mov
cmp
fsts
mov
push
pop
sbb
mov
addl
and
insl
in
sbb
xor
ljmp
pop
lret
sub
mov
fnstenv
add
sub
fstl
pop
mov
imulb
cwtl
xor
jnp
jl
test
insl
out
scas
js
scas
mov
inc
mov
jo
pop
dec
dec
jecxz
mov
daa
push
mov
cltd
sbb
mov
or
fmuls
cld
dec
jle
sbb
inc
xchg
jl
pop
movsb
scas
jb
lock
and
cmpsl
in
or
mov
xchg
arpl
outsb
xchg
popf
fdivs
addr16
rcrb
xchg
xorb
in
loopne
sahf
popf
jnp
xchg
mov
sbb
movsl
mov
mov
das
arpl
lahf
xchg
push
xchg
sbb
cmp
popa
mov
mov
dec
mov
popf
lods
mov
sbb
push
in
aad
ret
jg
shlb
xchg
stc
xchg
ss
rcrb
hlt
mov
push
ret
addr16
out
dec
mov
test
lahf
pop
xchg
sbb
outsb
in
ja
and
lret
arpl
jns
sbb
loope
data16
mov
shlb
insb
mov
aas
dec
push
sbb
sub
jecxz
mov
pop
dec
jb
es
inc
std
orl
cmp
cmp
and
xchg
loopne
mov
dec
adc
inc
dec
aam
and
arpl
xor
in
inc
mov
ficomps
in
dec
mov
jge
dec
and
push
xchg
dec
lea
lea
loope
scas
mov
in
cwtl
repz
adc
xchg
xchg
arpl
mov
mov
mov
rorb
lcall
les
mov
pop
mov
push
mov
sti
cmp
adc
push
jle,pn
sub
jecxz
popf
lock
sbb
es
sub
je
imul
dec
xor
in
cmpsb
stc
adc
clc
cmp
iret
jo
mov
jl
inc
jnp
fdivrs
daa
dec
dec
jbe
out
cmp
jb
sub
stos
xchg
add
leave
sub
dec
out
aad
sub
push
xor
ficomps
movsl
jae
mov
mov
dec
jbe
sub
cmp
in
pop
aam
jb
lods
sti
jecxz
std
cmpsb
jnp
xchg
stos
cmp
mov
xor
rol
cs
pop
in
decl
fildll
gs
loopne
push
xor
shl
stc
xchg
mov
and
push
test
pop
xchg
dec
mov
push
mov
adc
jge
adc
push
ret
mov
pusha
pop
fimull
popf
adc
setp
xchg
lahf
fiadds
shr
add
sub
stos
dec
fcmovbe
in
imull
popa
mov
inc
std
jge
push
xor
or
cmc
loop
loopne
repz
inc
dec
lods
pop
adc
or
push
jge
enter
ret
jmp
jnp
outsl
or
js
push
in
mov
add
cmp
dec
inc
xor
push
adc
xor
jnp
lcall
call
add
repz
and
add
inc
fiaddl
cwtl
xor
fstpl
mov
sbbl
lcall
xor
mov
mov
and
mov
rcr
push
dec
lods
mov
mov
stos
sub
sub
imul
clc
lock
dec
lret
aad
pushf
inc
hlt
push
xorb
add
xchg
or
sub
stc
add
loope
scas
fstl
pop
aam
lahf
and
cs
mov
loope
lret
incl
or
fistpl
adc
sbb
mov
push
lcall
inc
xor
or
popf
xor
cwtl
lods
push
mov
xchg
and
out
js
cmp
cltd
enter
dec
pop
inc
sbb
cmpsb
fldcw
insb
mov
and
fidivrs
push
cmp
lock
pop
or
and
and
daa
decl
scas
push
inc
adc
inc
pop
pop
dec
mov
pop
push
je
or
push
iret
cmpsl
mov
fwait
xchg
xor
dec
fdivrl
outsb
lods
nop
cmp
mov
inc
test
leave
jp
jg
cltd
popa
xchg
cmp
cli
pop
call
fidivl
xor
js
pop
int3
xor
push
lret
inc
jg
sub
ja
mov
dec
dec
sbb
push
xchg
mov
mov
cmp
imul
sbb
jg
mov
inc
sub
test
sbb
push
dec
xor
and
or
call
sub
and
out
pop
cmp
push
fdivrs
jbe
sbb
mov
dec
popf
jb
lock
sbb
movsb
add
insb
xchg
daa
out
movsb
repnz
add
sbb
sub
ret
nop
push
pop
das
pop
pop
adc
mov
outsl
int
clc
inc
pop
or
in
jae
pop
and
pop
push
leave
imul
dec
pop
mov
xor
and
scas
std
jo
fadd
jle
arpl
test
and
cmp
jns
dec
push
cmp
inc
pop
xchg
sub
test
push
xchg
cs
mov
add
dec
mov
mov
pop
in
lds
cmc
in
jge
inc
je
outsl
fwait
mov
or
xchg
dec
cmp
jle
inc
mov
or
mov
push
mov
shrl
insl
xchg
dec
jb
jne
mov
pushf
es
lea
outsl
mov
jge
out
inc
int
insb
aaa
and
mov
mov
xchg
or
in
jecxz
insb
jbe
adc
and
pop
stos
mov
jecxz
je
xor
in
ss
pop
jb
mov
fwait
psllw
cmc
add
lds
in
push
clc
xor
jp
flds
out
out
cmc
daa
or
mov
or
aas
arpl
adc
sbb
add
dec
pop
jae
adc
sbb
or
or
xchg
adc
add
dec
jbe
out
inc
push
mov
cltd
test
shl
sub
jne
inc
dec
enter
jmp
sarl
jo
jl
cwtl
pop
stc
add
sbb
mov
pusha
xor
out
popa
pop
push
mov
cmp
jo
inc
fcoml
pusha
shlb
dec
popf
jb
fnstsw
stc
mov
sbb
stos
call
dec
push
push
push
adc
imul
mov
adc
test
fistl
loopne
orl
addb
dec
mov
pusha
sbb
jns
movsb
rcrb
sub
cmp
jne
pop
ss
int3
dec
push
cltd
aad
rcrb
dec
xor
lods
xchg
pop
sub
push
popf
fildll
mov
repz
bound
mov
jle
jge
dec
shll
stos
xchg
fimull
outsl
sub
pushf
dec
sub
in
outsb
aaa
inc
ret
out
or
xor
nop
sbb
andl
push
orl
imul
push
je
add
sub
sbb
inc
adc
mov
jo
jnp
add
aaa
fldcw
inc
cltd
xlat
fs
xorl
push
pop
inc
stos
lcall
push
mov
shrb
fidivl
cld
and
divb
scas
cmp
test
imul
jge
add
lock
cmc
jmp
and
pop
dec
scas
dec
fildll
push
test
adc
dec
mov
mov
repz
mov
arpl
aaa
cmc
mov
inc
mov
jle
insl
adc
lret
jge
push
xor
pop
test
xchg
jge
cmp
adc
jns
inc
in
shr
sbb
or
adc
or
mov
jge
jle
sbbb
rorl
mov
and
inc
stos
bnd
dec
scas
in
sub
lahf
lahf
stos
leave
sub
mov
fmull
pop
cwtl
cmp
sub
jb
inc
mov
dec
ret
lods
push
inc
and
pop
mov
adc
jg
push
sub
mov
fistpl
add
mov
adc
in
mov
xorb
ja
fildll
dec
dec
lods
or
cmpb
mov
insl
sub
adc
data16
das
dec
lods
push
clc
dec
scas
les
xchg
push
cmc
and
mov
sbb
or
add
inc
pop
data16
mull
xchg
adc
push
pop
cmp
mull
movb
sbb
push
sbb
adc
in
lds
xchg
dec
inc
push
push
mov
lret
cmp
xlat
in
iret
addl
sbb
push
and
mov
fwait
jmp
out
out
mov
and
fdivrs
int3
sahf
loop
fistpll
mov
popa
pop
sarb
fidivs
sbb
mov
pushf
dec
inc
mov
pop
add
dec
add
dec
pop
xor
inc
mov
inc
ja
ret
sbb
pop
or
jb
inc
int
pop
test
push
inc
jnp
clc
sbb
aas
sti
mov
rdpmc
or
mov
mov
mov
inc
dec
or
sub
pushf
dec
test
jle
filds
lods
push
adc
shlb
out
push
or
dec
test
stos
mov
inc
mov
sbb
add
push
xchg
push
push
dec
shrl
sub
and
dec
lods
dec
fldenv
xchg
pop
lea
mov
scas
add
mov
lahf
adc
xchg
jnp
pop
mov
mov
mov
inc
test
out
je
cmp
pop
mov
jmp
pop
cwtl
xor
mov
mov
and
or
retw
ss
inc
ficoms
flds
fdivrp
sub
arpl
je
pop
outsb
pop
jp
imul
or
cld
xor
mov
sbb
jle
adcl
lods
lahf
add
rorb
mov
mov
pop
dec
and
mov
outsb
aaa
mov
cld
dec
cmp
xchg
adc
mov
and
insb
jb
imull
mov
dec
cld
stos
mov
stos
mov
push
cmp
inc
hlt
mov
sbb
aaa
xchg
dec
iret
cmpsb
mov
mov
push
fadds
fisttpl
lcall
inc
js
mov
and
jl
inc
shll
repz
adc
test
cwtl
and
inc
adc
xchg
and
push
aaa
jg
insb
into
out
inc
adc
pop
insb
decl
fwait
cmpsb
int
stos
popf
iret
and
mov
rcll
add
imul
jmp
mov
pop
idivl
pop
xchg
divl
or
test
and
rorb
jecxz
mov
mov
mov
add
xchg
cmp
ret
lea
adc
pop
dec
xor
push
adc
ljmp
pop
cmp
inc
mov
inc
ja
sbb
xchg
mov
xlat
gs
in
xchg
add
dec
xor
dec
xchg
mov
dec
movsl
sbb
mov
mov
aad
int
ljmp
lahf
mov
or
sbb
xchg
add
pop
call
js
inc
lahf
push
xor
andl
mov
fisubs
push
sbb
pop
ja
lods
jg
cmpsl
xchg
test
aam
pop
insb
mov
lahf
mov
xchg
out
data16
call
rolb
xor
mov
inc
mov
cmp
xor
sti
push
daa
movsl
dec
sbb
cmpsl
mov
sbb
pop
inc
cmpsb
dec
lahf
lret
dec
jnp
mov
ret
pop
dec
sub
sub
jno
fsubrl
push
mov
stos
cmp
jecxz
or
loop
mov
lret
ffree
stc
dec
inc
mov
sbb
testb
faddl
jne
xchg
inc
je
or
dec
je
dec
mov
stos
or
daa
ss
les
pop
das
cmp
mov
mov
pop
mov
sbbb
pop
xchg
sbb
inc
cwtl
pusha
andl
pop
inc
adc
mov
xor
daa
mov
cmp
notl
mov
mov
xchg
adc
cmp
jp
gs
insl
mov
fisubrs
inc
jae
jmp
cmpsl
mov
mov
jne
bound
dec
inc
sub
jbe
pop
stos
add
mov
jno
lds
repz
or
mov
hlt
in
cltd
enter
mov
mov
inc
adc
push
mov
repz
fxch
cmp
out
dec
lods
enter
ljmp
stos
movsl
in
popa
scas
mov
inc
mov
mov
out
mov
pop
xlat
or
in
or
rcll
push
xchg
stos
jge
sbb
adc
test
add
inc
adcb
fsubrl
repz
or
mov
mov
dec
jo
or
push
mov
adc
push
test
xor
push
mov
mov
pop
mov
lcall
sti
bound
out
pop
cmpsl
jle
inc
nop
cmp
sub
adc
sbb
pop
shl
mov
push
out
call
lods
movsl
xorl
xchg
dec
jo
jo
insl
inc
sub
cmp
mov
xor
jl
xor
lcall
xchg
cwtl
fisttpll
nop
jl
mov
push
mov
mov
pop
scas
mov
and
dec
sbb
iret
shll
add
mov
jb
stos
or
or
jo
pop
dec
jb
das
jle
jmp
and
sbb
fistps
out
xchg
in
mov
cmp
xor
std
and
cmp
call
jae,pt
int
jp
dec
and
push
mov
test
aad
mov
std
stos
push
fwait
insl
inc
jnp
mov
or
aaa
and
insb
mov
loope
icebp
test
loope
dec
ret
lods
push
adc
lahf
and
pop
mov
sub
stc
inc
adc
je
rolb
into
inc
push
add
test
insb
jns
mov
jne
out
pop
dec
jo
push
out
or
sbb
jp
cwtl
jo
scas
inc
and
int
mov
test
xchg
sbbl
fwait
mov
lods
or
jo
icebp
add
and
add
mov
push
lcall
leave
pop
xchg
dec
mov
dec
inc
mov
movsl
out
inc
and
ljmp
or
pop
sub
aaa
mov
insl
fcmovbe
out
xor
in
repnz
and
and
or
je
jp
inc
aad
popf
js
mov
inc
lret
pop
fwait
mov
add
sub
cmpsl
enter
mov
rcrb
and
lods
mov
test
imul
jne
dec
lods
out
dec
inc
adc
or
cmp
jg
mov
mov
xchg
rclb
jmp
inc
je
sbb
mov
lcall
push
lods
xlat
fs
mov
and
xchg
jp
scas
test
iret
add
sbb
scas
xchg
mov
jne
lock
fcmovne
push
add
imul
cmp
lret
push
outsb
push
cld
xor
xor
sbb
inc
sub
mov
cltd
push
into
fmull
inc
sbb
xchg
or
xor
inc
pusha
push
nop
cli
fildll
inc
shrb
mov
cmpsl
std
xor
cmp
std
sub
mov
aas
push
mov
fnstenv
cmp
aas
fwait
lret
in
mov
mov
jb
sbb
push
negb
and
aas
test
cltd
fmuls
bound
jmp
sbb
xchg
or
into
jmp
sub
ficompl
push
test
cmp
mov
sbb
sub
cmpsl
outsl
adc
jmp
lret
das
ror
imul
ret
stos
dec
scas
lret
insb
cmp
lds
imull
cmpsl
mov
lret
xchg
mov
mov
andl
cwtl
js
inc
test
sbb
jge
fisubl
stos
jbe
cltd
and
cmpb
shl
out
sbb
mov
sbb
pop
js
fsubs
lock
mov
pop
orl
push
push
add
adc
dec
add
xchg
fnsave
sbbl
movsb
jmp
adc
mov
pushf
mov
mov
ret
xchg
sti
popa
mov
cmp
mov
sbb
cltd
nop
push
push
outsb
mov
mov
ds
inc
mov
fcomps
sbb
out
mov
xor
test
iret
imul
ret
cmp
dec
lret
ret
adc
inc
notl
push
mov
pop
sub
mov
xlat
mov
daa
lret
mov
les
jge
insb
xchg
mov
jae
xchg
shll
dec
inc
stos
jg
fsts
push
imul
jo
dec
lods
jne
sbb
mov
mov
ret
in
add
xchg
sbb
mov
add
or
adc
dec
mov
rolb
scas
ret
js
xchg
inc
add
adc
xchg
mov
into
push
call
jle
cmp
in
cmc
inc
push
dec
push
pop
lret
mov
iret
das
and
cmp
outsb
mov
call
pop
inc
frndint
push
push
cld
mov
je
sti
fistps
test
mov
enter
dec
push
add
movsl
mov
push
sub
mov
mov
movsb
xlat
addr16
or
dec
push
fbld
or
mov
mov
into
ds
in
jns
mov
test
dec
cmp
sub
or
push
mov
inc
lds
xchg
mov
arpl
fcoms
lods
jl
sbb
arpl
call
je
enter
loope
mov
adc
sbbl
cli
addr16
sbb
mov
mov
jno
aad
xchg
inc
add
pop
aad
cmp
lods
ret
adc
cs
inc
pop
addb
sarl
cmpsl
mov
shlb
icebp
fs
ret
inc
push
dec
rcrb
or
fstpt
rcr
jno
les
pop
inc
leave
mov
push
cmc
sbb
clc
daa
lea
push
pop
stc
in
es
sti
xor
xchg
ffreep
ret
adc
leave
stc
leave
inc
or
movsl
aam
jle
lea
lahf
stos
and
std
mov
xor
arpl
int
mov
sbb
lret
das
loop
pop
or
and
das
cwtl
test
subl
jns
dec
les
imul
std
or
mov
push
cmp
and
scas
jge
pop
push
jo
xchg
and
sub
mov
push
in
mov
or
mov
add
sarl
ret
xchg
js
cld
sub
mov
push
dec
sbb
outsl
fwait
inc
push
add
mov
jl
jecxz
sbb
push
xor
mov
test
out
jnp
shrb
mov
std
in
push
dec
push
test
pop
mov
cmp
jbe
repnz
mov
pop
sbb
sbb
mov
mov
lret
adc
out
dec
adc
test
in
mov
pop
ljmp
mov
in
cmpsl
pop
or
inc
je
jmp
fsubs
adc
xor
imul
mov
insl
fdivrl
push
mov
outsl
inc
xchg
mov
mov
inc
add
in
inc
bound
sbb
in
movsb
sub
push
mov
inc
xchg
jmp
push
xchg
repz
xor
rcll
enter
enter
daa
mov
lahf
jecxz
sbb
add
arpl
mov
adc
cmp
adcb
jecxz
lods
lds
popa
scas
mov
loopne
cli
mov
in
aad
push
dec
rcrl
cmpsb
lret
xchg
arpl
mov
sbb
or
jb,pn
repz
mov
cmp
xor
lret
adc
sbb
loope
lret
inc
mov
rcrb
faddp
int
arpl
mov
js
add
add
inc
les
sti
mov
mov
add
hlt
rcrb
sahf
aam
sbb
scas
insb
fcoml
sub
leave
test
jae
rclb
sub
addb
or
movsb
cmp
push
mov
adc
mov
or
pop
movsb
jno
sub
ja
in
push
xchg
mov
ret
inc
in
inc
add
popf
aas
and
enter
push
fmull
repnz
sti
xor
jmp
sbb
push
mov
into
xchg
push
mov
add
ret
sarl
mov
imul
xor
popf
fists
dec
push
pop
lret
movsl
jecxz
movsb
std
and
stos
dec
lods
lret
xchg
lods
ss
lock
jecxz,pt
jne
pop
test
jp
clc
mov
hlt
out
fcmovne
pop
lea
jecxz
ret
jge
mov
xchg
into
adc
imul
xchg
sbb
mov
mov
and
inc
inc
hlt
ror
mov
cmpsl
inc
or
xor
mov
dec
cmp
out
clc
or
or
or
les
mov
ja
rcll
dec
js
and
adc
fs
jl
pop
movsb
js
sbb
and
shl
fldenv
sbb
pop
cmpsb
jo
test
sbb
mov
lret
add
pushf
cmp
sbb
pop
pop
dec
shl
in
das
mov
mov
add
ret
inc
mov
stos
in
stos
sti
jno
or
inc
mov
or
push
mov
jecxz
insb
cmpsl
adcb
cmc
pushw
call
dec
rcrb
or
aad
push
fwait
push
mov
dec
mov
sbb
mov
popf
push
jns
inc
inc
test
pop
mov
push
loope
inc
cmp
int3
adc
inc
or
jae
mov
push
xor
inc
aaa
mov
mov
fucomi
aam
inc
push
mov
inc
inc
jne
cmp
sbb
pop
adc
jge
dec
inc
add
adc
mov
adc
and
or
cmpsb
jns
pop
shlb
cmp
mov
add
jbe
add
out
aad
xchg
or
dec
pop
pop
repz
lahf
sahf
movsb
jge
aaa
cld
stos
sbb
mov
cld
testl
mov
ljmp
ret
insl
adc
add
mov
mov
mov
pop
mov
loop
jb
nop
dec
out
mov
out
xor
dec
push
fmulp
test
scas
mov
mov
into
ds
push
imul
sbb
and
test
cwtl
push
mov
xor
mov
xor
mov
subb
xchg
fidivl
cmp
scas
je
imul
inc
jne
stos
jmp
lret
ss
dec
add
xor
fidivl
outsb
cmp
add
add
sub
int3
mov
xor
xchg
mov
mov
xchg
andl
pop
out
test
fs
shlb
ds
or
jle
fisubl
neg
sbb
jbe
rcll
cmc
testb
xchg
and
sahf
pushf
in
clc
aas
clc
mov
push
out
mov
je
xchg
ffreep
insl
adc
add
and
imul
mov
lods
int
pop
mov
inc
mov
out
inc
ljmp
lret
pop
pop
dec
rcrl
mov
jnp
lcall
dec
inc
stos
lcall
movsl
pop
pusha
lcall
cmc
xor
push
aas
mov
or
scas
in
inc
mov
enter
dec
jo
mov
enter
jae
mov
add
xor
test
inc
xchg
inc
add
inc
cmc
push
sbb
scas
pop
sub
cmp
enter
enter
inc
push
int3
adc
out
iret
mov
dec
testb
insl
mov
mov
ja
rcll
shrb
fwait
out
jmp
addr16
les
insb
mov
mov
fstpl
mov
mov
inc
sti
xchg
hlt
dec
push
lahf
mov
cltd
jle
mov
sub
or
je
mov
hlt
fidivl
adcb
xor
and
cli
shll
mov
xlat
inc
xchg
pop
mov
imul
ds
sub
loopne
hlt
pop
mov
inc
push
pop
lret
xchg
mov
imul
shlb
lcall
cld
sbb
bound
test
arpl
inc
fmuls
scas
hlt
mov
jne
mov
test
lret
jmp
sarl
add
add
movsl
mov
xor
mov
inc
xchg
inc
add
mov
lret
pop
jb
inc
push
add
mov
or
out
js
hlt
movsl
mov
enter
jo
or
aad
inc
push
int
aas
lret
inc
mov
inc
mov
mov
mov
adc
sbb
lahf
mov
enter
jl
mov
adc
push
arpl
cmpsl
aad
frstor
cwtl
pavgb
and
mov
jne
aam
shll
or
xlat
inc
add
es
jmp
adcl
mov
js
out
popf
sbb
lods
stc
pusha
imul
inc
sbb
mov
pop
xor
enter
scas
std
sbb
js
movsl
into
bound
push
mov
pop
and
test
imul
roll
test
adc
mov
push
into
test
js
sbb
lds
inc
pop
add
mov
fwait
test
or
out
sbb
inc
jbe
sti
mov
cltd
test
mov
pop
fdivs
mov
push
into
adc
or
fistpll
ret
sarl
mov
sbb
jne
push
push
lock
or
je
test
iret
lds
mov
or
and
int3
clc
dec
add
stos
rcrl
pop
in
mov
mov
cmp
out
push
adcl
les
pop
or
push
xorb
shll
mov
jl
push
fisubrs
jge
imul
xchg
lahf
mov
dec
cmp
call
cli
sbb
mov
gs
sbb
outsb
push
mov
dec
mov
add
scas
xchg
out
ret
xor
cmp
in
and
mov
sbb
add
jns
cmpsb
jo
sbb
addr16
sbb
jbe
imul
hlt
xchg
out
jnp
mov
ss
insl
mov
cmp
lods
mov
call
movsl
mov
iret
xchg
mov
test
ret
inc
scas
leave
mov
and
sbb
xchg
in
fsubl
mov
hlt
ljmp
insb
lret
push
adc
popa
decb
fisubrs
arpl
lcall
mov
mov
pop
test
pop
mov
push
and
push
mov
or
adc
arpl
xchg
aad
pop
lods
in
fwait
push
pushaw
fisubrl
sti
popa
jmp
inc
inc
xlat
popf
mov
xorl
add
cmp
push
mov
sbb
xchg
fs
test
and
pop
movsl
icebp
xor
add
lcall
sbb
xor
int3
xor
mulb
clc
inc
and
add
out
jnp
dec
shlb
jnp
cmp
dec
push
enter
ja
lea
rcr
jne
les
pop
lods
fldcw
in
test
push
clc
clc
cmp
lret
test
out
push
pop
enter
scas
out
mov
add
fsubl
mov
sbb
xchg
nop
or
dec
pushf
xor
jne
neg
int
xchg
mov
cld
dec
add
or
xchg
iret
xchg
mov
aam
fmuls
repz
add
bts
inc
test
repz
cmpsb
xchg
stos
lds
mov
or
push
cmp
call
in
sahf
inc
inc
jo
daa
cld
loop
je
mov
dec
inc
push
pop
lret
mov
and
sub
mov
xor
test
or
movsl
clc
push
xor
sub
push
sbb
sbb
cmpsl
lock
cmc
outsl
fwait
out
pop
lea
jecxz
dec
mov
sbb
sub
movsl
scas
sbb
ret
loope
jle
stos
and
divl
mov
rorl
xor
mov
jae
dec
shll
cmp
mov
arpl
mov
pop
in
je
or
fsts
leave
nop
ds
movsl
movsl
dec
pop
add
mov
pop
pop
cwtl
xor
sbb
mov
imul
cmpsl
icebp
or
pop
loop
sbbl
add
int
cmp
pop
outsl
shrb
adc
lods
cmc
jae
push
aas
mov
or
add
push
movsb
push
stos
cli
sub
xchg
loop
add
or
adc
cmpsb
add
ret
bound
or
aam
or
mov
loope
sbb
xchg
aaa
sbb
jle
cmpsl
stc
sbb
inc
lea
cltd
add
or
mov
sbb
jecxz
sbb
out
loopne
int
aas
ret
sbb
fcompl
inc
or
mov
xchg
sub
inc
mov
jae
mov
mov
pop
jmp
or
mov
inc
ja
mov
sbb
sbb
pop
jbe
cwtl
push
loopne
jne
dec
inc
test
pop
pop
lret
or
ja
inc
xchg
pop
mov
jns
cmp
jno
push
shll
pop
in
jo
inc
test
jb
add
xchg
or
inc
add
lret
xchg
sbb
stos
xor
mov
hlt
repz
mov
xchg
loop
cltd
dec
stos
rclb
add
or
sub
xchg
mov
adc
into
and
jecxz
xor
cmpl
push
fmul
pop
mov
mov
insl
mov
fidivs
cltd
add
adc
mov
mov
enter
imul
bound
jmp
sbb
mov
test
pop
mov
insl
loopne
cli
mov
sbb
sub
cmpsl
outsl
adc
inc
ja
sub
push
int
iret
imul
ret
stos
dec
test
cmp
insb
cmp
inc
mov
imull
cmpsl
mov
lret
xchg
mov
mov
andl
cwtl
or
test
sbb
loopne,pt
movsl
test
dec
inc
stos
jbe
dec
and
andb
rol
jge
inc
sbb
mov
stc
out
js
fsubs
adc
mov
pop
orl
push
push
add
adc
dec
add
adc
dec
pop
add
out
push
lret
arpl
adc
mov
dec
inc
aad
mov
lret
mov
jnp
xchg
sti
popa
mov
mov
testl
push
push
outsb
mov
mov
es
inc
mov
fcomps
jge
dec
lock
mov
enter
jnp
cli
test
iret
imul
ret
cmp
mov
or
push
fwait
push
mov
aas
sbb
mov
xlat
mov
daa
lret
xchg
arpl
push
jge
outsl
xchg
mov
jae
xchg
mov
movsl
mov
jg
aad
push
imul
sub
lods
jne
stc
inc
aaa
mov
mov
ret
in
add
xchg
pop
daa
mov
xor
or
xor
mov
dec
mov
add
inc
scas
ret
xchg
jp
inc
add
adc
test
mov
into
push
call
jle
mov
in
cmc
inc
push
dec
push
pop
lret
mov
lret
mov
imul
mov
call
pop
inc
fldenv
mov
je
sti
fistps
test
loope
enter
dec
push
add
movsl
mov
clc
xor
xlat
addr16
or
enter
arpl
iret
ret
mov
mov
into
ds
in
jns
xor
test
dec
cmp
mov
push
lea
lds
xchg
mov
arpl
fsubs
push
dec
lods
jl
adc
jge
scas
je
clc
gs
xchg
add
in
inc
sbbl
pop
addr16
sbb
mov
mov
pop
movsl
icebp
jno
aad
xchg
inc
add
pop
aad
cmp
lods
ret
adc
icebp
push
inc
pop
inc
xchg
sarl
cmpsl
mov
shlb
icebp
fs
lds
dec
rcrb
or
fstpt
rcr
jno
les
pop
inc
leave
sbbb
mov
clc
daa
test
mov
jbe
sti
xor
xchg
ffreep
ret
adc
xchg
stc
leave
inc
ds
pusha
movsl
aam
filds
nop
adc
test
enter
jns
fwait
neg
arpl
dec
ret
mov
sbb
leave
push
cmpsl
pop
or
and
das
cwtl
test
subl
jns
dec
les
imul
std
or
cltd
mov
push
cmp
and
scas
jge
push
push
jo
xchg
in
dec
bound
jo
test
in
mov
or
mov
add
sarl
ret
xchg
cmp
mov
inc
cmp
stc
cmc
outsl
fwait
inc
push
inc
xchg
mov
xchg
jmp
sbb
add
repz
mov
shrb
xor
std
out
dec
push
dec
push
enter
jmp
lods
cmp
jbe
repnz
mov
insl
sbb
sbb
jb,pn
cli
mov
mov
lret
adc
xchg
dec
fldt
test
in
mov
pop
ljmp
mov
in
cmpsl
pop
or
je
jmp
fwait
mov
adc
xor
imul
mov
insl
push
mov
outsl
inc
xchg
mov
mov
inc
add
in
pop
bound
sbb
in
movsb
sub
mov
inc
xchg
jmp
push
xchg
mov
fmul
jecxz
pop
xchg
cmp
fdivrl
pop
enter
enter
daa
mov
lahf
jecxz
sbb
push
andl
mov
adc
arpl
adcb
jecxz
mov
leave
fsub
scas
mov
loopne
cli
aaa
repz
in
iret
dec
push
dec
rcrl
sbb
cmp
mov
sub
pushf
test
popf
or
jo
movsl
insl
mov
inc
mov
les
push
clc
xor
sbb
push
sbb
jecxz
lret
mov
lods
daa
sbb
adc
mov
mov
mov
or
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shr
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
add
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
